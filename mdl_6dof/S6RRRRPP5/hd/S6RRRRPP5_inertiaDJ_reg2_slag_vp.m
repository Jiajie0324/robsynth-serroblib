% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPP5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP5_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:09:08
% EndTime: 2019-03-09 21:09:20
% DurationCPUTime: 4.18s
% Computational Cost: add. (4642->372), mult. (11433->579), div. (0->0), fcn. (9702->6), ass. (0->165)
t138 = sin(qJ(2));
t137 = sin(qJ(3));
t140 = cos(qJ(2));
t200 = t140 * qJD(2);
t190 = t137 * t200;
t139 = cos(qJ(3));
t203 = qJD(3) * t139;
t224 = t138 * t203 + t190;
t128 = t138 * qJD(2);
t136 = sin(qJ(4));
t217 = cos(qJ(4));
t181 = qJD(2) * t217;
t171 = t140 * t181;
t204 = qJD(3) * t137;
t188 = t138 * t204;
t210 = t137 * t138;
t194 = t136 * t210;
t179 = t217 * qJD(4);
t220 = qJD(3) * t217 + t179;
t42 = t137 * t171 - t136 * t188 - qJD(4) * t194 + (t136 * t200 + t138 * t220) * t139;
t211 = t136 * t139;
t90 = t137 * t217 + t211;
t76 = t90 * t138;
t20 = t128 * t76 - t140 * t42;
t223 = -0.2e1 * t20;
t222 = -0.4e1 * t138;
t212 = t136 * t137;
t219 = qJD(3) + qJD(4);
t65 = -t139 * t220 + t212 * t219;
t66 = t219 * t90;
t191 = t217 * t139;
t89 = -t191 + t212;
t18 = 0.2e1 * t65 * t89 - 0.2e1 * t66 * t90;
t41 = t136 * t190 + t138 * t66 - t139 * t171;
t77 = t138 * t191 - t194;
t10 = 0.2e1 * t41 * t76 - 0.2e1 * t42 * t77;
t221 = qJ(6) * t42 + qJD(6) * t76;
t132 = t137 ^ 2;
t134 = t139 ^ 2;
t206 = t132 - t134;
t177 = qJD(3) * t206;
t133 = t138 ^ 2;
t176 = (-t140 ^ 2 + t133) * qJD(2);
t202 = qJD(3) * t140;
t187 = t137 * t202;
t154 = t128 * t139 + t187;
t168 = pkin(2) * t138 - pkin(8) * t140;
t157 = t168 * t137;
t214 = t140 * pkin(2);
t169 = -pkin(8) * t138 - t214;
t161 = -pkin(1) + t169;
t88 = t139 * t161;
t50 = pkin(7) * t154 - qJD(2) * t157 - qJD(3) * t88;
t19 = -0.2e1 * t128 * t77 - 0.2e1 * t140 * t41;
t142 = 2 * qJD(5);
t141 = -pkin(4) - pkin(5);
t218 = -pkin(9) - pkin(8);
t216 = pkin(2) * t139;
t215 = pkin(7) * t137;
t193 = -pkin(3) - t215;
t209 = t138 * t139;
t62 = -pkin(9) * t209 + t140 * t193 + t88;
t208 = t139 * t140;
t113 = pkin(7) * t208;
t73 = t137 * t161 + t113;
t67 = -pkin(9) * t210 + t73;
t35 = t136 * t62 + t217 * t67;
t101 = t218 * t139;
t69 = -t101 * t217 + t212 * t218;
t124 = pkin(3) * t179;
t108 = t124 + qJD(5);
t117 = pkin(3) * t136 + qJ(5);
t207 = qJ(5) * t108 + qJD(5) * t117;
t94 = pkin(3) * t210 + pkin(7) * t138;
t201 = qJD(4) * t136;
t199 = t140 * qJD(5);
t25 = 0.2e1 * t76 * t42;
t52 = 0.2e1 * t89 * t66;
t198 = -0.2e1 * pkin(1) * qJD(2);
t197 = -0.2e1 * pkin(2) * qJD(3);
t196 = t140 * t215;
t195 = pkin(3) * t204;
t123 = pkin(3) * t201;
t122 = pkin(7) * t200;
t71 = pkin(3) * t224 + t122;
t121 = -t139 * pkin(3) - pkin(2);
t192 = t218 * qJD(3);
t189 = t139 * t200;
t185 = t139 * t202;
t184 = t137 * t203;
t183 = t138 * t200;
t174 = t218 * t217;
t162 = qJD(3) * t174;
t92 = t137 * t174;
t43 = -qJD(4) * t92 - t101 * t201 - t137 * t162 - t192 * t211;
t44 = -t101 * t179 - t139 * t162 + (qJD(4) * t218 + t192) * t212;
t68 = -t101 * t136 - t92;
t182 = -t43 * t69 + t44 * t68;
t143 = (-t113 + (-t138 * t218 + pkin(1) + t214) * t137) * qJD(3) + (t218 * t208 + (-t193 + t216) * t138) * qJD(2);
t38 = -pkin(9) * t224 - t50;
t178 = t136 * t38 - t143 * t217 + t179 * t67 + t201 * t62;
t175 = 0.2e1 * t183;
t173 = t133 * t184;
t172 = t137 * t189;
t120 = -pkin(3) * t217 - pkin(4);
t31 = -qJ(5) * t140 + t35;
t34 = -t136 * t67 + t217 * t62;
t126 = pkin(4) * t128;
t6 = -t126 + t178;
t170 = t77 * qJ(5) - t94;
t12 = t42 * t89 + t66 * t76;
t72 = t88 - t196;
t165 = -t137 * t73 - t139 * t72;
t164 = -qJ(5) * t42 - qJD(5) * t76;
t163 = -qJ(5) * t66 - qJD(5) * t89;
t32 = pkin(4) * t140 - t34;
t160 = t90 * qJ(5) - t121;
t159 = t128 * t69 + t140 * t43;
t158 = -t128 * t68 + t140 * t44;
t46 = t128 * t89 - t140 * t66;
t7 = -t136 * t143 - t179 * t62 + t201 * t67 - t217 * t38;
t156 = -t41 * t68 - t42 * t69 + t43 * t76 + t44 * t77;
t1 = -pkin(5) * t128 + qJ(6) * t41 - qJD(6) * t77 + t6;
t118 = qJ(5) * t128;
t155 = t118 - t7;
t152 = -t41 * qJ(5) + t77 * qJD(5) - t71;
t151 = 0.2e1 * t118 - 0.2e1 * t199 - t7;
t150 = 0.2e1 * t43 * t89 + 0.2e1 * t44 * t90 - 0.2e1 * t65 * t68 - 0.2e1 * t66 * t69;
t149 = -t65 * qJ(5) + t90 * qJD(5) - t195;
t148 = t108 * t76 + t117 * t42 - t123 * t77;
t147 = t108 * t89 + t117 * t66 - t123 * t90;
t146 = t41 * t89 - t42 * t90 + t65 * t76 - t66 * t77;
t5 = t155 - t199;
t51 = -t73 * qJD(3) + (pkin(7) * t210 + t139 * t168) * qJD(2);
t145 = qJD(3) * t165 - t51 * t137 - t50 * t139;
t144 = t117 * t128 + (-qJD(5) - t108) * t140 + t155;
t131 = qJ(5) * t142;
t116 = -0.2e1 * t123;
t114 = -pkin(5) + t120;
t109 = t142 + t124;
t107 = -0.2e1 * t183;
t104 = t140 * t123;
t96 = 0.2e1 * t108;
t85 = t117 * t108;
t70 = t138 * t177 - t172;
t59 = pkin(4) * t89 - t160;
t55 = qJ(6) * t89 + t69;
t54 = -qJ(6) * t90 + t68;
t53 = -0.2e1 * t90 * t65;
t49 = t141 * t89 + t160;
t48 = pkin(4) * t76 - t170;
t47 = -t128 * t90 - t140 * t65;
t33 = t141 * t76 + t170;
t26 = -0.2e1 * t77 * t41;
t24 = pkin(4) * t66 - t149;
t17 = qJ(6) * t76 + t31;
t16 = pkin(5) * t140 - qJ(6) * t77 + t32;
t15 = qJ(6) * t65 - qJD(6) * t90 + t44;
t14 = qJ(6) * t66 + qJD(6) * t89 - t43;
t13 = t141 * t66 + t149;
t11 = -t41 * t90 - t65 * t77;
t9 = pkin(4) * t42 - t152;
t4 = t141 * t42 + t152;
t2 = t5 + t221;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, -0.2e1 * t176, 0, t107, 0, 0, t138 * t198, t140 * t198, 0, 0, 0.2e1 * t134 * t183 - 0.2e1 * t173, 0.2e1 * t133 * t177 + t172 * t222, 0.2e1 * t138 * t187 + 0.2e1 * t139 * t176, 0.2e1 * t132 * t183 + 0.2e1 * t173, -0.2e1 * t137 * t176 + 0.2e1 * t138 * t185, t107, 0.2e1 * t72 * t128 - 0.2e1 * t51 * t140 + 0.2e1 * (t133 * t203 + t137 * t175) * pkin(7), -0.2e1 * t73 * t128 - 0.2e1 * t50 * t140 + 0.2e1 * (-t133 * t204 + t139 * t175) * pkin(7), 0.2e1 * t165 * t200 + 0.2e1 * (t137 * t50 - t139 * t51 + (t137 * t72 - t139 * t73) * qJD(3)) * t138, 0.2e1 * pkin(7) ^ 2 * t183 - 0.2e1 * t50 * t73 + 0.2e1 * t51 * t72, t26, t10, -t19, t25, t223, t107, 0.2e1 * t128 * t34 + 0.2e1 * t140 * t178 + 0.2e1 * t42 * t94 + 0.2e1 * t71 * t76, -0.2e1 * t128 * t35 - 0.2e1 * t140 * t7 - 0.2e1 * t41 * t94 + 0.2e1 * t71 * t77, 0.2e1 * t178 * t77 + 0.2e1 * t34 * t41 - 0.2e1 * t35 * t42 + 0.2e1 * t7 * t76, -0.2e1 * t178 * t34 - 0.2e1 * t35 * t7 + 0.2e1 * t71 * t94, t26, -t19, -t10, t107, 0.2e1 * t20, t25, -0.2e1 * t128 * t32 + 0.2e1 * t140 * t6 + 0.2e1 * t42 * t48 + 0.2e1 * t76 * t9, -0.2e1 * t31 * t42 - 0.2e1 * t32 * t41 - 0.2e1 * t5 * t76 + 0.2e1 * t6 * t77, 0.2e1 * t128 * t31 - 0.2e1 * t140 * t5 + 0.2e1 * t41 * t48 - 0.2e1 * t77 * t9, 0.2e1 * t31 * t5 + 0.2e1 * t32 * t6 + 0.2e1 * t48 * t9, t26, -t10, t19, t25, t223, t107, 0.2e1 * t1 * t140 - 0.2e1 * t128 * t16 - 0.2e1 * t33 * t42 - 0.2e1 * t4 * t76, 0.2e1 * t128 * t17 - 0.2e1 * t140 * t2 - 0.2e1 * t33 * t41 + 0.2e1 * t4 * t77, -0.2e1 * t1 * t77 + 0.2e1 * t16 * t41 + 0.2e1 * t17 * t42 + 0.2e1 * t2 * t76, 0.2e1 * t1 * t16 + 0.2e1 * t17 * t2 + 0.2e1 * t33 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, -t128, 0, -t122, pkin(7) * t128, 0, 0, -t70, t184 * t222 - t200 * t206, t128 * t137 - t185, t70, t154, 0 (pkin(8) * t208 + (t215 - t216) * t138) * qJD(3) + (t137 * t169 - t113) * qJD(2) (pkin(7) * t209 + t157) * qJD(3) + (t139 * t169 + t196) * qJD(2), t145, -pkin(2) * t122 + pkin(8) * t145, t11, t146, -t47, t12, -t46, 0, t121 * t42 + t195 * t76 + t66 * t94 + t71 * t89 + t158, -t121 * t41 + t195 * t77 - t65 * t94 + t71 * t90 - t159, t178 * t90 + t34 * t65 - t35 * t66 + t7 * t89 + t156, t121 * t71 + t178 * t68 + t195 * t94 - t34 * t44 - t35 * t43 - t69 * t7, t11, -t47, -t146, 0, t46, t12, t24 * t76 + t42 * t59 + t48 * t66 + t89 * t9 + t158, -t31 * t66 - t32 * t65 - t5 * t89 + t6 * t90 + t156, -t24 * t77 + t41 * t59 + t48 * t65 - t9 * t90 + t159, t24 * t48 - t31 * t43 + t32 * t44 + t5 * t69 + t59 * t9 + t6 * t68, t11, -t146, t47, t12, -t46, 0, -t128 * t54 - t13 * t76 + t140 * t15 - t33 * t66 - t4 * t89 - t42 * t49, t128 * t55 + t13 * t77 - t14 * t140 - t33 * t65 + t4 * t90 - t41 * t49, -t1 * t90 + t14 * t76 - t15 * t77 + t16 * t65 + t17 * t66 + t2 * t89 + t41 * t54 + t42 * t55, t1 * t54 + t13 * t33 + t14 * t17 + t15 * t16 + t2 * t55 + t4 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t184, -0.2e1 * t177, 0, -0.2e1 * t184, 0, 0, t137 * t197, t139 * t197, 0, 0, t53, t18, 0, t52, 0, 0, 0.2e1 * t121 * t66 + 0.2e1 * t195 * t89, -0.2e1 * t121 * t65 + 0.2e1 * t195 * t90, t150, 0.2e1 * t121 * t195 + 0.2e1 * t182, t53, 0, -t18, 0, 0, t52, 0.2e1 * t24 * t89 + 0.2e1 * t59 * t66, t150, -0.2e1 * t24 * t90 + 0.2e1 * t59 * t65, 0.2e1 * t24 * t59 + 0.2e1 * t182, t53, -t18, 0, t52, 0, 0, -0.2e1 * t13 * t89 - 0.2e1 * t49 * t66, 0.2e1 * t13 * t90 - 0.2e1 * t49 * t65, 0.2e1 * t14 * t89 - 0.2e1 * t15 * t90 + 0.2e1 * t54 * t65 + 0.2e1 * t55 * t66, 0.2e1 * t13 * t49 + 0.2e1 * t14 * t55 + 0.2e1 * t15 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188 + t189, 0, -t224, t128, t51, t50, 0, 0, 0, 0, -t41, 0, -t42, t128, pkin(3) * t138 * t181 + t104 - t178 (-t128 * t136 + t140 * t179) * pkin(3) + t7 (t217 * t41 - t136 * t42 + (t136 * t77 - t217 * t76) * qJD(4)) * pkin(3) (-t217 * t178 - t136 * t7 + (-t136 * t34 + t217 * t35) * qJD(4)) * pkin(3), 0, -t41, 0, t128, t42, 0, -t120 * t128 + t104 - t6, -t120 * t41 - t148, t144, t108 * t31 + t117 * t5 + t120 * t6 + t123 * t32, 0, 0, t41, 0, -t42, t128, -t114 * t128 - t1 + t104, t144 + t221, t114 * t41 + t148, t1 * t114 + t108 * t17 + t117 * t2 + t123 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, 0, -t204, 0, -pkin(8) * t203, pkin(8) * t204, 0, 0, 0, 0, -t65, 0, -t66, 0, -t44, t43 (t217 * t65 - t136 * t66 + (t136 * t90 - t217 * t89) * qJD(4)) * pkin(3) (-t217 * t44 - t136 * t43 + (t136 * t68 + t217 * t69) * qJD(4)) * pkin(3), 0, -t65, 0, 0, t66, 0, -t44, -t120 * t65 - t147, -t43, t108 * t69 - t117 * t43 + t120 * t44 + t123 * t68, 0, 0, t65, 0, -t66, 0, -t15, t14, t114 * t65 + t147, t108 * t55 + t114 * t15 + t117 * t14 + t123 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, -0.2e1 * t124, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, t96, 0.2e1 * t120 * t123 + 0.2e1 * t85, 0, 0, 0, 0, 0, 0, t116, t96, 0, 0.2e1 * t114 * t123 + 0.2e1 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, -t42, t128, -t178, t7, 0, 0, 0, -t41, 0, t128, t42, 0, 0.2e1 * t126 - t178, pkin(4) * t41 + t164, t151, -pkin(4) * t6 + qJ(5) * t5 + qJD(5) * t31, 0, 0, t41, 0, -t42, t128, -t128 * t141 - t1, t151 + t221, t141 * t41 - t164, qJ(5) * t2 + qJD(5) * t17 + t1 * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, -t66, 0, -t44, t43, 0, 0, 0, -t65, 0, 0, t66, 0, -t44, pkin(4) * t65 + t163, -t43, -pkin(4) * t44 - qJ(5) * t43 + qJD(5) * t69, 0, 0, t65, 0, -t66, 0, -t15, t14, t141 * t65 - t163, qJ(5) * t14 + qJD(5) * t55 + t141 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t124, 0, 0, 0, 0, 0, 0, 0, 0, -t123, 0, t109, -pkin(4) * t123 + t207, 0, 0, 0, 0, 0, 0, -t123, t109, 0, t123 * t141 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t131, 0, 0, 0, 0, 0, 0, 0, t142, 0, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t41, 0, t6, 0, 0, 0, 0, 0, 0, -t128, 0, t41, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, t44, 0, 0, 0, 0, 0, 0, 0, 0, t65, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, -t41, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, -t65, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
