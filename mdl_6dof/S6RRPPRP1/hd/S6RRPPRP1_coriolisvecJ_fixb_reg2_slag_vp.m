% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:27:48
% EndTime: 2019-03-09 08:28:03
% DurationCPUTime: 6.00s
% Computational Cost: add. (9852->450), mult. (25408->580), div. (0->0), fcn. (19176->8), ass. (0->228)
t207 = sin(pkin(10));
t209 = cos(pkin(10));
t208 = sin(pkin(9));
t211 = sin(qJ(2));
t212 = cos(qJ(2));
t293 = cos(pkin(9));
t185 = t208 * t212 + t211 * t293;
t264 = qJD(1) * t185;
t141 = t207 * qJD(2) + t209 * t264;
t210 = sin(qJ(5));
t313 = cos(qJ(5));
t277 = t207 * t264;
t329 = t209 * qJD(2) - t277;
t225 = t313 * t329;
t90 = -t210 * t141 + t225;
t341 = t90 ^ 2;
t248 = t293 * t212;
t195 = qJD(1) * t248;
t262 = qJD(1) * t211;
t169 = t208 * t262 - t195;
t165 = qJD(5) + t169;
t340 = t90 * t165;
t298 = t264 * t90;
t171 = t185 * qJD(2);
t160 = qJD(1) * t171;
t254 = t313 * t209;
t226 = -t210 * t207 + t254;
t186 = t313 * t207 + t210 * t209;
t176 = t186 * qJD(5);
t326 = t186 * t169 + t176;
t317 = -t160 * t226 + t165 * t326;
t339 = t298 - t317;
t338 = t298 + t317;
t331 = t313 * t141 + t210 * t329;
t315 = t331 ^ 2;
t337 = t165 * t331;
t252 = qJD(5) * t313;
t261 = qJD(5) * t210;
t319 = -t207 * t261 + t209 * t252;
t325 = t226 * t169 + t319;
t259 = qJD(1) * qJD(2);
t251 = t211 * t259;
t194 = t208 * t251;
t161 = qJD(2) * t195 - t194;
t56 = qJD(5) * t331 + t161 * t186;
t242 = -t186 * t56 + t325 * t90;
t278 = t207 * t161;
t55 = t210 * (qJD(5) * t141 + t278) - qJD(5) * t225 - t161 * t254;
t333 = t55 * t226 + t326 * t331;
t336 = t242 - t333;
t335 = t242 + t333;
t236 = t186 * t160 + t165 * t325;
t296 = t331 * t264;
t334 = t236 + t296;
t276 = t209 * t161;
t332 = t169 * t329 + t276;
t330 = t55 - t340;
t324 = t141 * t169 + t278;
t323 = -0.2e1 * t259;
t198 = t208 * pkin(2) + qJ(4);
t307 = pkin(8) + t198;
t180 = t307 * t207;
t181 = t307 * t209;
t121 = -t210 * t180 + t313 * t181;
t311 = pkin(8) * t209;
t257 = pkin(2) * t262;
t110 = pkin(3) * t264 + t169 * qJ(4) + t257;
t306 = -qJ(3) - pkin(7);
t193 = t306 * t212;
t189 = qJD(1) * t193;
t177 = t208 * t189;
t192 = t306 * t211;
t188 = qJD(1) * t192;
t133 = t188 * t293 + t177;
t70 = t209 * t110 - t207 * t133;
t52 = pkin(4) * t264 + t169 * t311 + t70;
t283 = t169 * t207;
t71 = t207 * t110 + t209 * t133;
t63 = pkin(8) * t283 + t71;
t303 = qJD(4) * t186 + qJD(5) * t121 - t210 * t63 + t313 * t52;
t322 = t56 - t337;
t321 = t264 * t329;
t223 = -t208 * t211 + t248;
t129 = t160 * t223;
t320 = t169 * t171 - t129;
t168 = t169 ^ 2;
t316 = -t207 * t160 - t209 * t168;
t202 = -t212 * pkin(2) - pkin(1);
t123 = -pkin(3) * t223 - t185 * qJ(4) + t202;
t139 = t208 * t192 - t193 * t293;
t75 = t209 * t123 - t207 * t139;
t62 = -pkin(4) * t223 - t185 * t311 + t75;
t280 = t185 * t207;
t76 = t207 * t123 + t209 * t139;
t67 = -pkin(8) * t280 + t76;
t300 = t210 * t62 + t313 * t67;
t174 = t223 * qJD(2);
t281 = t174 * t209;
t250 = qJD(2) * t306;
t166 = t212 * qJD(3) + t211 * t250;
t167 = -t211 * qJD(3) + t212 * t250;
t112 = t166 * t293 + t208 * t167;
t299 = qJD(2) * pkin(2);
t258 = t211 * t299;
t92 = t171 * pkin(3) - t174 * qJ(4) - t185 * qJD(4) + t258;
t58 = -t207 * t112 + t209 * t92;
t38 = t171 * pkin(4) - pkin(8) * t281 + t58;
t282 = t174 * t207;
t59 = t209 * t112 + t207 * t92;
t46 = -pkin(8) * t282 + t59;
t8 = -qJD(5) * t300 - t210 * t46 + t313 * t38;
t314 = t264 ^ 2;
t312 = pkin(2) * t211;
t310 = t160 * pkin(5);
t182 = t188 + t299;
t125 = t182 * t293 + t177;
t114 = -qJD(2) * pkin(3) + qJD(4) - t125;
t81 = -pkin(4) * t329 + t114;
t28 = -pkin(5) * t90 - qJ(6) * t331 + t81;
t309 = t28 * t331;
t308 = t331 * t90;
t21 = t210 * t52 + t313 * t63;
t18 = qJ(6) * t264 + t21;
t227 = -t313 * t180 - t210 * t181;
t93 = qJD(4) * t226 + qJD(5) * t227;
t305 = -t18 + t93;
t304 = -pkin(5) * t264 - t303;
t302 = t21 - t93;
t249 = t293 * t189;
t132 = t208 * t188 - t249;
t96 = -pkin(4) * t283 + t132;
t301 = -pkin(5) * t326 + qJ(6) * t325 + t186 * qJD(6) + t96;
t197 = pkin(2) * t251;
t80 = t160 * pkin(3) - t161 * qJ(4) - qJD(4) * t264 + t197;
t152 = t166 * qJD(1);
t153 = t167 * qJD(1);
t99 = t293 * t152 + t208 * t153;
t95 = qJD(2) * qJD(4) + t99;
t44 = t207 * t80 + t209 * t95;
t138 = -t293 * t192 - t208 * t193;
t267 = -t208 * t152 + t293 * t153;
t294 = t267 * t138;
t292 = t227 * t160;
t291 = t121 * t160;
t290 = t141 * t264;
t289 = t141 * t207;
t288 = t160 * qJ(6);
t287 = t161 * t185;
t286 = t165 * t264;
t284 = t169 * t264;
t214 = qJD(1) ^ 2;
t274 = t212 * t214;
t213 = qJD(2) ^ 2;
t273 = t213 * t211;
t272 = t213 * t212;
t263 = qJD(1) * t202;
t191 = qJD(3) + t263;
t102 = t169 * pkin(3) - qJ(4) * t264 + t191;
t126 = t208 * t182 - t249;
t119 = qJD(2) * qJ(4) + t126;
t64 = t209 * t102 - t207 * t119;
t41 = t169 * pkin(4) - t141 * pkin(8) + t64;
t65 = t207 * t102 + t209 * t119;
t53 = pkin(8) * t329 + t65;
t16 = -t210 * t53 + t313 * t41;
t271 = qJD(6) - t16;
t266 = t209 * t160 - t207 * t168;
t265 = t211 ^ 2 - t212 ^ 2;
t256 = -t315 + t341;
t255 = t211 * t274;
t74 = pkin(4) * t278 - t267;
t43 = -t207 * t95 + t209 * t80;
t31 = t160 * pkin(4) - pkin(8) * t276 + t43;
t34 = -pkin(8) * t278 + t44;
t247 = t210 * t34 + t53 * t252 + t41 * t261 - t313 * t31;
t246 = pkin(1) * t323;
t111 = t208 * t166 - t293 * t167;
t245 = 0.2e1 * t264;
t241 = -t121 * t56 + t227 * t55 + t90 * t93;
t239 = t212 * t251;
t201 = -pkin(2) * t293 - pkin(3);
t238 = -t315 - t341;
t82 = pkin(4) * t282 + t111;
t108 = pkin(4) * t280 + t138;
t115 = t186 * t185;
t69 = t174 * t186 + t319 * t185;
t235 = t115 * t56 - t69 * t90;
t234 = -t207 * t64 + t209 * t65;
t233 = t138 * t161 - t185 * t267;
t232 = t209 * t329;
t2 = t247 - t310;
t17 = t210 * t41 + t313 * t53;
t230 = t17 * t165 - t247;
t25 = -t210 * t67 + t313 * t62;
t3 = t210 * t31 + t41 * t252 - t261 * t53 + t313 * t34;
t7 = t210 * t38 + t62 * t252 - t261 * t67 + t313 * t46;
t224 = -t226 * t56 - t326 * t90;
t190 = -t209 * pkin(4) + t201;
t222 = t114 * t174 + t233;
t221 = t185 * t160 - t161 * t223 + t174 * t169;
t220 = t232 - t289;
t218 = -t198 * t160 + t201 * t161 + (-qJD(4) + t114) * t169;
t116 = t226 * t185;
t68 = -t226 * t174 + t176 * t185;
t217 = t115 * t55 - t116 * t56 - t331 * t69 - t68 * t90;
t216 = t160 * t115 + t165 * t69 - t171 * t90 - t223 * t56;
t10 = t56 * pkin(5) + t55 * qJ(6) - qJD(6) * t331 + t74;
t215 = t56 + t337;
t204 = t209 ^ 2;
t203 = t207 ^ 2;
t113 = -pkin(5) * t226 - t186 * qJ(6) + t190;
t79 = t165 * t171 - t129;
t51 = pkin(5) * t331 - qJ(6) * t90;
t45 = t115 * pkin(5) - t116 * qJ(6) + t108;
t27 = -t55 - t340;
t24 = t236 - t296;
t23 = pkin(5) * t223 - t25;
t22 = -qJ(6) * t223 + t300;
t15 = t69 * pkin(5) + t68 * qJ(6) - t116 * qJD(6) + t82;
t14 = t165 * qJ(6) + t17;
t13 = -t165 * pkin(5) + t271;
t12 = -t116 * t55 - t331 * t68;
t11 = -t55 * t186 + t325 * t331;
t9 = t116 * t160 - t68 * t165 + t171 * t331 + t223 * t55;
t6 = -t171 * pkin(5) - t8;
t5 = t171 * qJ(6) - qJD(6) * t223 + t7;
t1 = t165 * qJD(6) + t288 + t3;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t239, t265 * t323, t272, -0.2e1 * t239, -t273, 0, -pkin(7) * t272 + t211 * t246, pkin(7) * t273 + t212 * t246, 0, 0, t174 * t264 + t287, -t171 * t264 - t221, t174 * qJD(2), t320, -t171 * qJD(2), 0, t202 * t160 + t191 * t171 + (-t111 + (-qJD(1) * t223 + t169) * t312) * qJD(2), t202 * t161 + t191 * t174 + (t245 * t312 - t112) * qJD(2), t111 * t264 - t112 * t169 - t125 * t174 - t126 * t171 - t139 * t160 + t223 * t99 + t233, -t125 * t111 + t126 * t112 - t294 + t99 * t139 + (t191 + t263) * t258, t141 * t281 + t204 * t287, t174 * t220 - 0.2e1 * t276 * t280, t141 * t171 + t209 * t221, t203 * t287 - t282 * t329, t171 * t329 - t207 * t221, t320, -t111 * t329 + t75 * t160 + t58 * t169 + t64 * t171 + t207 * t222 - t223 * t43, t111 * t141 - t76 * t160 - t59 * t169 - t65 * t171 + t209 * t222 + t223 * t44, -t58 * t141 - t59 * t277 + (t59 * qJD(2) - t75 * t161 - t64 * t174 - t43 * t185) * t209 + (-t76 * t161 - t65 * t174 - t44 * t185) * t207, t111 * t114 + t43 * t75 + t44 * t76 + t64 * t58 + t65 * t59 - t294, t12, t217, t9, t235, -t216, t79, t108 * t56 + t74 * t115 + t16 * t171 + t25 * t160 + t8 * t165 + t223 * t247 + t81 * t69 - t82 * t90, -t108 * t55 + t74 * t116 - t160 * t300 - t7 * t165 - t17 * t171 + t223 * t3 + t331 * t82 - t81 * t68, -t115 * t3 + t116 * t247 + t16 * t68 - t17 * t69 + t25 * t55 - t300 * t56 - t331 * t8 + t7 * t90, t108 * t74 + t16 * t8 + t17 * t7 - t247 * t25 + t3 * t300 + t81 * t82, t12, t9, -t217, t79, t216, t235, t10 * t115 - t13 * t171 - t15 * t90 - t23 * t160 - t6 * t165 + t2 * t223 + t28 * t69 + t45 * t56, -t1 * t115 + t116 * t2 - t13 * t68 - t14 * t69 - t22 * t56 - t23 * t55 + t331 * t6 + t5 * t90, -t1 * t223 - t10 * t116 + t14 * t171 - t15 * t331 + t22 * t160 + t5 * t165 + t28 * t68 + t45 * t55, t1 * t22 + t10 * t45 + t13 * t6 + t14 * t5 + t15 * t28 + t2 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, t265 * t214, 0, t255, 0, 0, t214 * pkin(1) * t211, pkin(1) * t274, 0, 0, t284, -t168 + t314, -t194 + (t195 + t169) * qJD(2), -t284, 0, 0, t132 * qJD(2) - t169 * t257 - t191 * t264 + t267, t133 * qJD(2) + t191 * t169 - t257 * t264 - t99 (t126 - t132) * t264 + (-t125 + t133) * t169 + (-t160 * t208 - t161 * t293) * pkin(2), t125 * t132 - t126 * t133 + (-t191 * t262 + t208 * t99 + t267 * t293) * pkin(2), t324 * t209, t220 * t169 + (-t203 + t204) * t161, -t290 - t316, -t332 * t207, t266 - t321, -t284, t132 * t329 - t70 * t169 + t207 * t218 + t209 * t267 - t264 * t64, -t132 * t141 + t71 * t169 - t207 * t267 + t209 * t218 + t264 * t65, t70 * t141 + t71 * t277 + (-qJD(4) * t277 - t64 * t169 + t44 + (qJD(4) * t209 - t71) * qJD(2)) * t209 + (qJD(4) * t141 - t65 * t169 - t43) * t207, -t114 * t132 - t267 * t201 - t64 * t70 - t65 * t71 + (-t43 * t207 + t44 * t209) * t198 + t234 * qJD(4), t11, t336, t24, t224, -t338, -t286, -t16 * t264 - t303 * t165 + t190 * t56 - t226 * t74 + t326 * t81 + t90 * t96 + t292, t302 * t165 + t17 * t264 + t74 * t186 - t190 * t55 + t325 * t81 - t331 * t96 - t291, -t16 * t325 - t17 * t326 + t186 * t247 - t21 * t90 + t226 * t3 + t303 * t331 + t241, t3 * t121 - t303 * t16 - t302 * t17 + t74 * t190 - t227 * t247 - t81 * t96, t11, t24, -t336, -t286, t338, t224, -t10 * t226 + t113 * t56 + t13 * t264 + t304 * t165 + t28 * t326 + t301 * t90 + t292, t1 * t226 + t13 * t325 - t14 * t326 - t18 * t90 + t2 * t186 - t304 * t331 + t241, -t10 * t186 + t113 * t55 - t14 * t264 + t305 * t165 - t28 * t325 + t301 * t331 + t291, t1 * t121 + t10 * t113 - t304 * t13 + t305 * t14 - t2 * t227 - t301 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245 * qJD(2), -t194 + (t195 - t169) * qJD(2), -t168 - t314, t125 * t264 + t126 * t169 + t197, 0, 0, 0, 0, 0, 0, t266 + t321, -t290 + t316 (t232 + t289) * t169 + (-t203 - t204) * t161, -t114 * t264 + t169 * t234 + t44 * t207 + t43 * t209, 0, 0, 0, 0, 0, 0, t339, -t334, t335, -t16 * t326 + t17 * t325 + t3 * t186 - t226 * t247 - t264 * t81, 0, 0, 0, 0, 0, 0, t339, t335, t334, t1 * t186 + t13 * t326 + t14 * t325 - t2 * t226 - t264 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, t332, -t141 ^ 2 - t329 ^ 2, t141 * t64 - t329 * t65 - t267, 0, 0, 0, 0, 0, 0, t215, -t330, t238, t16 * t331 - t17 * t90 + t74, 0, 0, 0, 0, 0, 0, t215, t238, t330, -t13 * t331 - t14 * t90 + t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, -t256, t27, t308, -t322, t160, -t331 * t81 + t230, t16 * t165 - t81 * t90 - t3, 0, 0, -t308, t27, t256, t160, t322, t308, t51 * t90 + t230 - t309 + 0.2e1 * t310, pkin(5) * t55 - t56 * qJ(6) + (t14 - t17) * t331 - (t13 - t271) * t90, 0.2e1 * t288 + t28 * t90 + t51 * t331 + (0.2e1 * qJD(6) - t16) * t165 + t3, -pkin(5) * t2 + qJ(6) * t1 - t13 * t17 + t14 * t271 - t28 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t264 - t308, t27, -t165 ^ 2 - t315, -t14 * t165 + t2 + t309;];
tauc_reg  = t4;
