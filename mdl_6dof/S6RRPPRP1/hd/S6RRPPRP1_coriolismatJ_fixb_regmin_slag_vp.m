% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRP1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRP1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:27:51
% EndTime: 2019-03-09 08:28:10
% DurationCPUTime: 9.64s
% Computational Cost: add. (13985->562), mult. (27744->708), div. (0->0), fcn. (32283->8), ass. (0->422)
t377 = sin(qJ(2));
t587 = cos(pkin(9));
t445 = t587 * t377;
t375 = sin(pkin(9));
t378 = cos(qJ(2));
t539 = t375 * t378;
t352 = t445 + t539;
t376 = cos(pkin(10));
t608 = sin(qJ(5));
t465 = t608 * t376;
t374 = sin(pkin(10));
t609 = cos(qJ(5));
t469 = t609 * t374;
t354 = t469 + t465;
t542 = t354 * t352;
t659 = t542 / 0.2e1;
t662 = 0.2e1 * t659;
t370 = -pkin(2) * t587 - pkin(3);
t358 = -t376 * pkin(4) + t370;
t466 = t608 * t374;
t468 = t609 * t376;
t350 = t466 - t468;
t429 = t350 * pkin(5) - t354 * qJ(6);
t245 = t358 + t429;
t367 = pkin(2) * t375 + qJ(4);
t603 = pkin(8) + t367;
t332 = t603 * t376;
t446 = t603 * t374;
t259 = t332 * t609 - t446 * t608;
t348 = t375 * t377 - t378 * t587;
t555 = t259 * t348;
t611 = t354 / 0.2e1;
t310 = t352 * t466;
t311 = t352 * t468;
t644 = -t310 + t311;
t622 = t644 / 0.2e1;
t263 = t374 * t352;
t602 = -qJ(3) - pkin(7);
t359 = t602 * t377;
t360 = t602 * t378;
t289 = -t587 * t359 - t360 * t375;
t231 = pkin(4) * t263 + t289;
t430 = pkin(5) * t542 - qJ(6) * t644;
t93 = t231 + t430;
t388 = t245 * t622 - t555 / 0.2e1 + t93 * t611;
t604 = t377 * pkin(2);
t264 = pkin(3) * t352 + qJ(4) * t348 + t604;
t657 = t289 * t376;
t170 = t374 * t264 - t657;
t260 = t374 * t348;
t129 = pkin(8) * t260 + t170;
t467 = t608 * t129;
t658 = t289 * t374;
t169 = t376 * t264 + t658;
t115 = pkin(8) * t348 * t376 + pkin(4) * t352 + t169;
t470 = t609 * t115;
t533 = t470 / 0.2e1 - t467 / 0.2e1;
t661 = -t388 - t533;
t451 = t348 * t611;
t391 = t465 / 0.2e1 + t469 / 0.2e1;
t656 = t348 * t391;
t427 = t451 + t656;
t520 = qJD(1) * t348;
t464 = t644 * t520;
t660 = qJD(2) * t427 + t464;
t627 = t644 ^ 2;
t616 = -t350 / 0.2e1;
t655 = t616 * t644;
t357 = t587 * t360;
t540 = t375 * t359;
t643 = -t357 + t540;
t654 = t643 * t374;
t551 = t643 * t376;
t471 = -t378 * pkin(2) - pkin(1);
t411 = t348 * pkin(3) + t471;
t393 = -t352 * qJ(4) + t411;
t168 = t374 * t393 + t551;
t127 = -pkin(8) * t263 + t168;
t380 = t348 * pkin(4) - t654 + ((-pkin(8) - qJ(4)) * t352 + t411) * t376;
t75 = t127 * t609 + t380 * t608;
t66 = t348 * qJ(6) + t75;
t74 = t127 * t608 - t609 * t380;
t67 = -t348 * pkin(5) + t74;
t601 = t611 * t67 + t616 * t66;
t620 = t259 / 0.2e1;
t258 = t332 * t608 + t446 * t609;
t621 = t258 / 0.2e1;
t653 = t542 * t620 - t621 * t644 - t601;
t480 = t354 * qJD(5);
t635 = t427 * qJD(1);
t131 = -t480 - t635;
t382 = (t611 - t391) * t348;
t636 = t382 * qJD(1);
t652 = t480 + t636;
t166 = t382 * qJD(5);
t560 = t542 * t352;
t248 = t354 * t348;
t564 = t248 * t348;
t422 = t560 + t564;
t639 = qJD(1) * t422;
t651 = t639 - t166;
t557 = t644 * t352;
t309 = t348 * t466;
t442 = t348 * t468;
t252 = -t442 + t309;
t558 = t252 * t348;
t107 = -t557 + t558;
t650 = qJD(1) * t107;
t649 = qJD(5) * t542;
t165 = t427 * qJD(5);
t543 = t352 * t350;
t648 = -qJD(2) * t543 - t165 - t639;
t508 = qJD(4) * t348;
t647 = -qJD(3) * t107 + t542 * t508;
t268 = pkin(5) * t354 + qJ(6) * t350;
t479 = t354 * qJD(6);
t646 = qJD(5) * t268 - t479;
t645 = t542 ^ 2;
t624 = qJ(6) / 0.2e1;
t462 = t542 * t520;
t345 = t348 ^ 2;
t626 = t352 ^ 2;
t271 = t345 + t626;
t372 = t374 ^ 2;
t373 = t376 ^ 2;
t361 = t372 + t373;
t436 = t468 / 0.2e1;
t145 = t352 * t436 - t311 / 0.2e1;
t642 = t145 * qJD(5) - t660;
t144 = -t310 / 0.2e1 + t311 / 0.2e1 + (t436 - t466 / 0.2e1) * t352;
t500 = t382 * qJD(2);
t641 = t144 * qJD(5) + t464 + t500;
t562 = t542 * qJ(6);
t606 = t644 * pkin(5);
t133 = t562 + t606;
t615 = t350 / 0.2e1;
t619 = -t268 / 0.2e1;
t640 = t133 * t615 - t542 * t619;
t439 = -t542 / 0.2e1 + t659;
t638 = qJD(2) * t439;
t634 = t427 * qJD(4);
t633 = t439 * qJD(3);
t491 = t542 * qJD(1);
t632 = t543 * qJD(1);
t530 = -t539 / 0.2e1 - t445 / 0.2e1;
t559 = t252 * qJ(6);
t607 = t248 * pkin(5);
t444 = t559 / 0.2e1 + t607 / 0.2e1;
t137 = t144 * qJD(4);
t631 = qJD(3) * t427 - t137;
t136 = t145 * qJD(4);
t630 = -qJD(3) * t382 - t75 * qJD(5) + t136;
t629 = qJD(3) * t422 - t508 * t644;
t628 = qJD(3) * t543 - qJD(4) * t382;
t346 = t350 ^ 2;
t347 = t354 ^ 2;
t625 = -pkin(5) / 0.2e1;
t618 = -t309 / 0.2e1;
t617 = -t348 / 0.2e1;
t614 = -t352 / 0.2e1;
t613 = t352 / 0.2e1;
t612 = -t354 / 0.2e1;
t610 = -t358 / 0.2e1;
t605 = t352 * pkin(5);
t600 = qJD(2) * pkin(2);
t599 = t644 * t93;
t598 = t348 * t74;
t597 = t348 * t75;
t341 = t352 * qJ(6);
t113 = t608 * t115;
t126 = t609 * t129;
t532 = t126 + t113;
t69 = t341 + t532;
t395 = -t467 + t470;
t70 = -t395 - t605;
t322 = pkin(4) * t260;
t230 = t643 - t322;
t92 = t230 - t559 - t607;
t5 = t66 * t69 + t67 * t70 + t92 * t93;
t596 = t5 * qJD(1);
t6 = t133 * t93 - t66 * t74 + t67 * t75;
t595 = t6 * qJD(1);
t7 = t248 * t66 + t252 * t67 - t542 * t69 + t644 * t70;
t592 = t7 * qJD(1);
t8 = (-t66 + t75) * t644 + (-t67 + t74) * t542;
t591 = t8 * qJD(1);
t472 = t74 / 0.2e1 - t67 / 0.2e1;
t473 = t66 / 0.2e1 - t75 / 0.2e1;
t9 = t350 * t473 + t354 * t472 + t444;
t590 = t9 * qJD(1);
t384 = t245 * t613 - t248 * t621 + t252 * t620;
t408 = t611 * t69 + t615 * t70;
t17 = -t384 + t408;
t586 = qJD(1) * t17;
t24 = -t542 * t66 + t644 * t67;
t585 = qJD(1) * t24;
t25 = -t133 * t644 + t542 * t93 - t598;
t584 = qJD(1) * t25;
t26 = t133 * t542 - t597 + t599;
t583 = qJD(1) * t26;
t29 = t348 * t66 - t599;
t582 = qJD(1) * t29;
t36 = -t231 * t542 + t598;
t581 = qJD(1) * t36;
t37 = t231 * t644 - t597;
t580 = qJD(1) * t37;
t545 = t350 * t252;
t563 = t248 * t354;
t54 = -t545 - t563;
t579 = qJD(1) * t54;
t549 = t289 * t352;
t571 = t168 * t376;
t167 = t376 * t393 - t654;
t572 = t167 * t374;
t59 = t549 + (-t571 + t572) * t348;
t578 = qJD(1) * t59;
t424 = -t167 * t376 - t168 * t374;
t78 = t424 * t352;
t577 = qJD(1) * t78;
t561 = t542 * t252;
t565 = t248 * t644;
t86 = -t561 - t565;
t576 = qJD(1) * t86;
t403 = -t542 * t612 + t655;
t96 = t403 - t530;
t575 = qJD(1) * t96;
t11 = -t252 * t93 + t348 * t69 + t352 * t66 - t644 * t92;
t574 = t11 * qJD(1);
t12 = -t248 * t93 - t348 * t70 - t352 * t67 + t542 * t92;
t573 = t12 * qJD(1);
t570 = t169 * t376;
t569 = t170 * t374;
t21 = -t248 * t67 + t252 * t66 + t352 * t93;
t568 = t21 * qJD(1);
t22 = t230 * t542 - t231 * t248 + t348 * t395 - t74 * t352;
t567 = t22 * qJD(1);
t23 = t230 * t644 + t231 * t252 - t348 * t532 - t75 * t352;
t566 = t23 * qJD(1);
t556 = t258 * t352;
t554 = t259 * t352;
t379 = t388 - t533;
t474 = -t605 / 0.2e1;
t27 = t474 + t379;
t553 = t27 * qJD(1);
t453 = t258 * t617;
t386 = t231 * t615 - t542 * t610 + t453;
t450 = -t113 / 0.2e1 - t126 / 0.2e1;
t31 = t386 + t450;
t548 = t31 * qJD(1);
t34 = (t569 + t570) * t352 + t424 * t348;
t547 = t34 * qJD(1);
t35 = t167 * t169 + t168 * t170 + t289 * t643;
t546 = t35 * qJD(1);
t544 = t350 * t348;
t38 = (t167 + t654) * t352 + (t169 - t658) * t348;
t538 = t38 * qJD(1);
t39 = (-t168 + t551) * t352 + (-t170 - t657) * t348;
t537 = t39 * qJD(1);
t447 = -t372 / 0.2e1 - t373 / 0.2e1;
t387 = t348 * t367 * t447 + t370 * t613;
t405 = -t570 / 0.2e1 - t569 / 0.2e1;
t58 = t387 + t405;
t536 = t58 * qJD(1);
t87 = -t561 + t565;
t534 = t87 * qJD(1);
t531 = t309 / 0.2e1 - t442 / 0.2e1;
t104 = -t560 + t564;
t529 = qJD(1) * t104;
t106 = t557 + t558;
t527 = qJD(1) * t106;
t141 = -t348 * t643 + t549;
t523 = qJD(1) * t141;
t522 = qJD(1) * t644;
t266 = t271 * t376;
t521 = qJD(1) * t266;
t519 = qJD(1) * t352;
t518 = qJD(1) * t378;
t176 = t544 / 0.2e1 + t531;
t516 = qJD(2) * t176;
t515 = qJD(2) * t352;
t514 = qJD(2) * t354;
t513 = qJD(2) * t358;
t512 = qJD(2) * t376;
t511 = qJD(2) * t377;
t510 = qJD(2) * t378;
t509 = qJD(4) * t542;
t507 = qJD(5) * t258;
t506 = qJD(5) * t348;
t101 = t471 * t604;
t505 = t101 * qJD(1);
t171 = (t612 - t391) * t348;
t503 = t171 * qJD(1);
t162 = t176 * qJD(1);
t177 = -t544 / 0.2e1 + t531;
t498 = t177 * qJD(1);
t178 = t618 + (t436 + t615) * t348;
t497 = t178 * qJD(1);
t496 = t178 * qJD(2);
t179 = t618 + (t436 + t616) * t348;
t495 = t179 * qJD(1);
t181 = t361 * t626;
t494 = t181 * qJD(1);
t490 = t662 * qJD(1);
t434 = t447 * t352;
t227 = t434 + t530;
t489 = t227 * qJD(1);
t228 = t271 * t374;
t488 = t228 * qJD(1);
t394 = t375 * t617 + t587 * t614;
t243 = (-t377 / 0.2e1 + t394) * pkin(2);
t487 = t243 * qJD(1);
t486 = t542 * qJD(6);
t246 = t259 * qJD(5);
t485 = t263 * qJD(1);
t265 = t361 * t348;
t484 = t265 * qJD(1);
t483 = t271 * qJD(1);
t482 = t530 * qJD(1);
t335 = t348 * qJD(6);
t481 = t350 * qJD(5);
t478 = t361 * qJD(2);
t366 = -t377 ^ 2 + t378 ^ 2;
t477 = t366 * qJD(1);
t476 = pkin(1) * t377 * qJD(1);
t475 = pkin(1) * t518;
t463 = t542 * t522;
t461 = t374 * t519;
t460 = t350 * t514;
t457 = t352 * t508;
t456 = t376 * t519;
t455 = t377 * t518;
t448 = 0.2e1 * t622;
t443 = qJD(5) + t520;
t441 = t348 * t456;
t438 = -t341 + t450;
t433 = -t357 / 0.2e1 + t540 / 0.2e1;
t407 = -t133 * t245 / 0.2e1 + t93 * t619;
t410 = t624 * t69 + t625 * t70;
t1 = t258 * t473 + t259 * t472 + t407 + t410;
t50 = t245 * t268;
t428 = -t1 * qJD(1) + t50 * qJD(2);
t55 = t350 * t662 + t354 * t448;
t85 = t645 + t627;
t426 = qJD(1) * t85 + qJD(2) * t55;
t409 = t248 * t624 + t252 * t625;
t3 = -t350 * t472 + t354 * t473 + t409;
t425 = t3 * qJD(1);
t423 = -t169 * t374 + t170 * t376;
t421 = -t348 * t370 - t352 * t367;
t100 = -t627 + t645;
t84 = t350 * t542 - t354 * t644;
t420 = qJD(1) * t100 + qJD(2) * t84;
t114 = t258 * t354 - t259 * t350;
t383 = -t322 / 0.2e1 + t433 - t444;
t13 = t383 + t653;
t419 = -qJD(1) * t13 + qJD(2) * t114;
t116 = t245 * t354 + t268 * t350;
t15 = t379 - t605 + t640;
t418 = qJD(1) * t15 + qJD(2) * t116;
t117 = t245 * t350 - t268 * t354;
t381 = t133 * t612 + t245 * t659 + t615 * t93 + t619 * t644 + t453;
t20 = t381 + t438;
t417 = -qJD(1) * t20 - qJD(2) * t117;
t80 = pkin(5) * t448 + qJ(6) * t662;
t416 = qJD(1) * t80 + qJD(2) * t268;
t244 = t346 - t347;
t415 = qJD(1) * t84 + qJD(2) * t244;
t272 = t346 + t347;
t414 = qJD(1) * t55 + qJD(2) * t272;
t295 = t361 * t367;
t406 = -t572 / 0.2e1 + t571 / 0.2e1;
t76 = -t406 + t433;
t413 = qJD(1) * t76 - qJD(2) * t295;
t142 = t391 * t352 + t354 * t614;
t412 = -qJD(4) * t142 + qJD(5) * t74;
t118 = qJD(2) * t350 + t491;
t120 = qJD(1) * t144 + t514;
t103 = -t542 * t611 + t655;
t385 = t231 * t612 + t555 / 0.2e1 + t644 * t610;
t30 = t385 + t533;
t402 = -qJD(1) * t30 + t354 * t513;
t97 = -t103 + t530;
t401 = qJD(1) * t97 + t460;
t400 = qJD(2) * t103 - t463;
t399 = -qJD(1) * t103 + t460;
t398 = qJD(5) * t142 - t462;
t397 = -t462 - t649;
t396 = -qJD(5) * t530 + t348 * t519;
t196 = t345 + t627;
t389 = qJD(1) * t196 + t514 * t644 + t506;
t340 = t354 * qJD(4);
t327 = t530 * qJD(2);
t308 = t443 * qJ(6);
t242 = t604 / 0.2e1 + t394 * pkin(2);
t226 = t434 - t530;
t214 = t644 * t479;
t180 = t451 - t656;
t164 = t176 * qJD(5);
t163 = t178 * qJD(5);
t160 = qJD(2) * t347 + t354 * t522;
t130 = -t481 - t162;
t102 = t103 * qJD(5);
t99 = t103 + t530;
t98 = -t403 - t530;
t94 = t516 + t462;
t82 = t84 * qJD(5);
t81 = -t443 * t542 - t496;
t79 = t562 / 0.2e1 + t606 / 0.2e1 - t542 * t624 + t644 * t625;
t77 = t406 + t433;
t57 = t387 - t405;
t51 = t55 * qJD(4);
t33 = -t385 + t533;
t32 = -t386 + t450;
t28 = t474 + t661;
t19 = t381 - t438;
t18 = t384 + t408;
t16 = t605 + t640 - t661;
t14 = t383 - t653;
t10 = t612 * t74 + t615 * t75 + t444 + t601;
t4 = t611 * t75 + t612 * t66 + t615 * t74 + t616 * t67 + t409;
t2 = -t74 * t259 / 0.2e1 - t66 * t258 / 0.2e1 + t75 * t621 + t67 * t620 - t407 + t410;
t40 = [0, 0, 0, t377 * t510, t366 * qJD(2), 0, 0, 0, -pkin(1) * t511, -pkin(1) * t510, qJD(3) * t271, qJD(2) * t101 + qJD(3) * t141, qJD(2) * t38 + qJD(3) * t228 - t376 * t457, qJD(2) * t39 + qJD(3) * t266 + t374 * t457, -qJD(2) * t34 + qJD(4) * t181, qJD(2) * t35 + qJD(3) * t59 + qJD(4) * t78 (qJD(2) * t252 - t649) * t644, qJD(2) * t87 + qJD(5) * t100, qJD(2) * t106 - t506 * t542, qJD(2) * t104 - t506 * t644, t348 * t515, qJD(2) * t22 + qJD(5) * t37 + t629, qJD(2) * t23 + qJD(5) * t36 + t647, qJD(2) * t12 + qJD(5) * t26 - t486 * t644 + t629, qJD(2) * t7 + qJD(3) * t86 + qJD(4) * t85 + qJD(5) * t8 - t335 * t542, qJD(2) * t11 + qJD(5) * t25 + qJD(6) * t196 - t647, qJD(2) * t5 + qJD(3) * t21 + qJD(4) * t24 + qJD(5) * t6 + qJD(6) * t29; 0, 0, 0, t455, t477, t510, -t511, 0, -pkin(7) * t510 - t476, pkin(7) * t511 - t475 (t348 * t587 - t352 * t375) * t600, t505 + (-t289 * t375 - t587 * t643) * t600 + t242 * qJD(3), t538 + (t374 * t421 - t551) * qJD(2) - t260 * qJD(4), qJD(2) * t654 + t537 + (qJD(2) * t421 - t508) * t376, qJD(2) * t423 - t547, t546 + (t367 * t423 + t370 * t643) * qJD(2) + t57 * qJD(3) + t77 * qJD(4), t102 + (t514 + t522) * t252, t534 + (-t545 + t563) * qJD(2) + t82, t352 * t514 - t163 + t527, -t350 * t515 - t166 + t529, t396, t567 + (t230 * t350 - t248 * t358 - t556) * qJD(2) - t634 + t33 * qJD(5), t566 + (t230 * t354 + t252 * t358 - t554) * qJD(2) + t633 - t179 * qJD(4) + t32 * qJD(5), t573 + (-t245 * t248 + t350 * t92 - t556) * qJD(2) - t634 + t16 * qJD(5) + t99 * qJD(6), t592 + (t248 * t259 + t252 * t258 - t350 * t69 + t354 * t70) * qJD(2) + t51 + t4 * qJD(5) - t178 * qJD(6), t574 + (-t245 * t252 - t354 * t92 + t554) * qJD(2) + t633 - t176 * qJD(4) + t19 * qJD(5) + t214, t596 + (t245 * t92 + t258 * t70 + t259 * t69) * qJD(2) + t18 * qJD(3) + t14 * qJD(4) + t2 * qJD(5) + t28 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, qJD(2) * t242 + t523, t488, t521, 0, qJD(2) * t57 + qJD(4) * t226 + t578, 0, 0, 0, 0, 0, t651, -qJD(5) * t177 + t638 - t650, t651, t576, -t163 + t650 + t638, t568 + t18 * qJD(2) + (-t248 * t350 + t252 * t354) * qJD(3) + t98 * qJD(4) + t10 * qJD(5) + t180 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t260 - t441 (t461 - t512) * t348, t494, qJD(2) * t77 + qJD(3) * t226 + t577, 0, 0, 0, 0, 0, t642, -qJD(2) * t179 - t398, t642, t426, t398 - t516, qJD(2) * t14 + qJD(3) * t98 + qJD(5) * t79 - qJD(6) * t145 + t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400, t420, t81, -t443 * t644 - t500, -t327, qJD(2) * t33 + t580 + t630, qJD(2) * t32 - qJD(3) * t177 + t412 + t581, qJD(2) * t16 + t583 + t630, t4 * qJD(2) + qJD(5) * t430 - t486 + t591, qJD(2) * t19 - qJD(3) * t178 + t335 - t412 + t584, t595 + t2 * qJD(2) + t10 * qJD(3) + t79 * qJD(4) + (-pkin(5) * t75 - qJ(6) * t74) * qJD(5) + t66 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t99 - t463, t81, t389, qJD(2) * t28 + qJD(3) * t180 + qJD(5) * t66 - t136 + t582; 0, 0, 0, -t455, -t477, 0, 0, 0, t476, t475, 0, qJD(3) * t243 - t505, -qJD(3) * t352 * t376 - t538, qJD(3) * t263 - t537, -qJD(3) * t265 + t547, qJD(3) * t58 - qJD(4) * t76 - t546, -t252 * t522 + t102, t82 - t534, -t164 - t527, -t165 - t529, -t396, -qJD(5) * t30 - t567 + t628, qJD(3) * t662 - qJD(4) * t177 - qJD(5) * t31 - t566, qJD(5) * t15 - qJD(6) * t97 - t573 + t628, qJD(3) * t54 - qJD(5) * t3 - qJD(6) * t176 + t51 - t592, -qJD(3) * t542 - qJD(4) * t178 + qJD(5) * t20 + t214 - t574, -qJD(3) * t17 - qJD(4) * t13 - qJD(5) * t1 - qJD(6) * t27 - t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361 * qJD(4), t295 * qJD(4), -t350 * t480, t244 * qJD(5), 0, 0, 0, t358 * t480, -t358 * t481, qJD(5) * t116 - t350 * t479, t272 * qJD(4), qJD(5) * t117 + qJD(6) * t347, qJD(4) * t114 + qJD(5) * t50 - t245 * t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, -t456, t485, -t484, t536, 0, 0, 0, 0, 0, t632, t490, t632, t579, -t491, -t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, -t413, 0, 0, 0, 0, 0, -t636, -t498, -t636, t414, -t497, t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, t415, t130, t131, t482, -t246 + t402, -t350 * t513 + t507 - t548, -t246 + t418, qJD(5) * t429 - t350 * qJD(6) - t425, -t417 - t507 (-pkin(5) * t259 - qJ(6) * t258) * qJD(5) + t259 * qJD(6) + t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, t130, t160, -t245 * t514 + t246 - t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, -qJD(2) * t243 - t523, t352 * t512 - t488, -qJD(2) * t263 - t521, t265 * qJD(2), -qJD(2) * t58 + qJD(4) * t227 - t578, 0, 0, 0, 0, 0, t648, -qJD(2) * t662 - qJD(5) * t179 + t650, t648, -qJD(2) * t54 - t576, qJD(2) * t542 - t164 - t650, qJD(2) * t17 - qJD(4) * t96 - qJD(5) * t9 - qJD(6) * t171 - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, t456, -t485, t484, -t536, 0, 0, 0, 0, 0, -t632, -t490, -t632, -t579, t491, t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, t481 - t495, t131, 0, t130, -t590 - t646; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480 - t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t348 * t461, -t494, qJD(2) * t76 - qJD(3) * t227 - t577, 0, 0, 0, 0, 0, t641, qJD(2) * t177 + t397, t641, -t426, -t397 + t496, qJD(2) * t13 + qJD(3) * t96 + qJD(5) * t80 - qJD(6) * t144 - t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478, t413, 0, 0, 0, 0, 0, t652, -t481 + t498, t652, -t414, t481 + t497, -t419 + t646; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t489, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, -t118, t120, 0, t118, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t400, -t420, t94, t660, -t327, qJD(2) * t30 - t580 + t631, qJD(2) * t31 + qJD(3) * t179 + t509 - t581, -qJD(2) * t15 - t583 + t631, qJD(2) * t3 - t591, -qJD(2) * t20 + qJD(3) * t176 + t335 - t509 - t584, qJ(6) * t335 + qJD(2) * t1 + qJD(3) * t9 - qJD(4) * t80 - t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, -t415, t162, t635, -t482, -t340 - t402, t548 + (qJD(4) + t513) * t350, -t340 - t418, t425, -qJD(4) * t350 + t417, -qJD(4) * t268 - t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t635, t495, t635, 0, t162, t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, t118, -t120, 0, -t118, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t97 + t463, t94, -t389, -qJ(6) * t506 + qJD(2) * t27 + qJD(3) * t171 + t137 - t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, t162, -t160, t553 + (qJD(2) * t245 + qJD(4)) * t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443, -t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t40;
