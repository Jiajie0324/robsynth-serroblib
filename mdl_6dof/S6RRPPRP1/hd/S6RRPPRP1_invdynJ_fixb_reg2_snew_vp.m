% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 09:07
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPPRP1_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP1_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP1_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRP1_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRP1_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRP1_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 09:04:59
% EndTime: 2019-05-06 09:05:31
% DurationCPUTime: 17.39s
% Computational Cost: add. (48083->565), mult. (114538->760), div. (0->0), fcn. (83028->10), ass. (0->343)
t333 = sin(qJ(2));
t335 = cos(qJ(2));
t329 = sin(pkin(9));
t331 = cos(pkin(9));
t382 = qJD(1) * t335;
t383 = qJD(1) * t333;
t302 = t329 * t382 + t331 * t383;
t328 = sin(pkin(10));
t330 = cos(pkin(10));
t283 = -t330 * qJD(2) + t302 * t328;
t284 = qJD(2) * t328 + t302 * t330;
t332 = sin(qJ(5));
t334 = cos(qJ(5));
t240 = t334 * t283 + t284 * t332;
t319 = t333 * qJDD(1);
t377 = qJD(1) * qJD(2);
t368 = t335 * t377;
t309 = t319 + t368;
t320 = t335 * qJDD(1);
t369 = t333 * t377;
t353 = t320 - t369;
t276 = t331 * t309 + t329 * t353;
t261 = qJDD(2) * t328 + t276 * t330;
t363 = -t330 * qJDD(2) + t276 * t328;
t344 = -qJD(5) * t240 + t261 * t334 - t332 * t363;
t300 = t329 * t383 - t331 * t382;
t296 = qJD(5) + t300;
t402 = t240 * t296;
t449 = t344 - t402;
t275 = t309 * t329 - t331 * t353;
t272 = qJDD(5) + t275;
t242 = -t283 * t332 + t284 * t334;
t401 = t242 * t240;
t186 = -t401 - t272;
t408 = t186 * t332;
t239 = t242 ^ 2;
t433 = t296 ^ 2;
t453 = -t239 - t433;
t118 = -t334 * t453 - t408;
t407 = t186 * t334;
t120 = t332 * t453 - t407;
t90 = t118 * t328 - t120 * t330;
t71 = t329 * t90 - t331 * t449;
t73 = t329 * t449 + t331 * t90;
t77 = t118 * t330 + t120 * t328;
t529 = -pkin(1) * t77 + pkin(7) * (t333 * t71 - t335 * t73);
t528 = qJ(3) * t71;
t527 = -pkin(2) * t71 + pkin(3) * t449 - qJ(4) * t90;
t526 = -pkin(2) * t77 - qJ(3) * t73;
t364 = t261 * t332 + t334 * t363;
t345 = (-qJD(5) + t296) * t242 - t364;
t435 = t240 ^ 2;
t223 = t435 - t433;
t136 = -t223 * t332 + t407;
t140 = -t223 * t334 - t408;
t95 = t136 * t328 - t140 * t330;
t524 = t333 * (t345 * t329 + t331 * t95) + t335 * (t329 * t95 - t345 * t331);
t521 = qJ(4) * t77;
t520 = pkin(3) * t77 + pkin(4) * t118;
t452 = t239 - t435;
t149 = (qJD(5) + t296) * t242 + t364;
t103 = -t149 * t332 + t334 * t449;
t413 = t449 * t332;
t106 = t149 * t334 + t413;
t58 = t103 * t328 + t106 * t330;
t516 = t333 * (-t329 * t452 + t331 * t58) + t335 * (t329 * t58 + t331 * t452);
t512 = pkin(8) * t118;
t511 = pkin(8) * t120;
t510 = t136 * t330 + t140 * t328;
t509 = -t103 * t330 + t106 * t328;
t447 = t402 + t344;
t224 = -t239 + t433;
t448 = -t401 + t272;
t406 = t448 * t332;
t482 = t334 * t224 + t406;
t176 = t334 * t448;
t483 = -t224 * t332 + t176;
t494 = -t328 * t482 + t330 * t483;
t508 = t333 * (t329 * t447 + t331 * t494) + t335 * (t329 * t494 - t331 * t447);
t446 = -t433 - t435;
t458 = t334 * t446 - t406;
t459 = t332 * t446 + t176;
t476 = t328 * t458 + t330 * t459;
t507 = pkin(1) * t476;
t506 = pkin(2) * t476;
t162 = -t435 - t239;
t441 = t332 * t447 + t334 * t345;
t442 = t332 * t345 - t334 * t447;
t457 = -t328 * t442 + t330 * t441;
t479 = -t162 * t331 + t329 * t457;
t505 = qJ(3) * t479;
t504 = qJ(4) * t476;
t477 = -t328 * t459 + t330 * t458;
t503 = qJ(4) * t477;
t500 = t329 * t477;
t499 = t331 * t477;
t498 = pkin(2) * t479 - pkin(3) * t162 + qJ(4) * t457;
t497 = -pkin(3) * t476 - pkin(4) * t459;
t456 = t328 * t441 + t330 * t442;
t478 = t162 * t329 + t331 * t457;
t496 = -pkin(2) * t456 + qJ(3) * t478;
t495 = t328 * t483 + t330 * t482;
t493 = pkin(7) * (-t333 * t479 + t335 * t478) - pkin(1) * t456;
t489 = pkin(8) * t458;
t488 = pkin(8) * t459;
t487 = qJ(4) * t456;
t486 = qJ(6) * t449;
t41 = -pkin(3) * t456 - pkin(4) * t442;
t481 = -pkin(4) * t162 + pkin(8) * t441;
t472 = pkin(8) * t442;
t246 = t284 * t283;
t451 = -t246 + t275;
t471 = t328 * t451;
t274 = t302 * t300;
t445 = -t274 + qJDD(2);
t470 = t329 * t445;
t466 = t330 * t451;
t465 = t331 * t445;
t326 = t335 ^ 2;
t428 = sin(qJ(1));
t429 = cos(qJ(1));
t359 = g(1) * t428 - t429 * g(2);
t346 = qJDD(1) * pkin(1) + t359;
t423 = qJD(2) * pkin(2);
t247 = qJD(1) * ((t326 * qJ(3) + pkin(7)) * qJD(1) - t333 * t423) + t320 * pkin(2) - qJDD(3) - (-qJ(3) * t383 + t423) * t383 + t346;
t374 = t331 * t401;
t375 = t329 * t401;
t187 = -qJD(5) * t242 - t364;
t391 = t296 * t334;
t373 = t240 * t391;
t351 = -t187 * t332 + t373;
t392 = t296 * t332;
t357 = t334 * t187 + t240 * t392;
t437 = -t328 * t357 + t330 * t351;
t455 = t333 * (t331 * t437 - t375) + t335 * (t329 * t437 + t374);
t349 = (-t240 * t332 - t242 * t334) * t296;
t218 = t242 * t392;
t356 = t218 - t373;
t438 = -t328 * t349 + t330 * t356;
t454 = t333 * (t272 * t329 + t331 * t438) + t335 * (-t331 * t272 + t329 * t438);
t258 = t300 * t283;
t212 = -t258 - t261;
t450 = -t258 + t261;
t378 = t302 * qJD(2);
t249 = t275 + t378;
t294 = qJD(2) * t300;
t252 = -t276 + t294;
t348 = g(1) * t429 + g(2) * t428;
t419 = qJDD(1) * pkin(7);
t343 = -t348 + t419;
t425 = t333 * g(3);
t430 = qJD(2) ^ 2;
t431 = qJD(1) ^ 2;
t244 = t335 * t343 - t425 - t430 * pkin(2) + t320 * qJ(3) + (-t335 * pkin(1) - t326 * pkin(2)) * t431;
t424 = t335 * g(3);
t336 = -t333 * t343 - t424 - t309 * qJ(3) + qJDD(2) * pkin(2) + (qJD(2) * t335 * qJ(3) + (t335 * pkin(2) + pkin(1)) * t383) * qJD(1);
t190 = -0.2e1 * qJD(3) * t300 + t331 * t244 + t329 * t336;
t444 = -t187 * pkin(5) - t486;
t195 = pkin(5) * t240 - qJ(6) * t242;
t263 = pkin(3) * t300 - qJ(4) * t302;
t160 = -pkin(3) * t430 + qJDD(2) * qJ(4) - t263 * t300 + t190;
t175 = pkin(3) * t249 + qJ(4) * t252 - t247;
t111 = 0.2e1 * qJD(4) * t284 + t160 * t328 - t330 * t175;
t83 = pkin(4) * t451 + pkin(8) * t212 - t111;
t112 = -0.2e1 * qJD(4) * t283 + t330 * t160 + t328 * t175;
t253 = pkin(4) * t300 - pkin(8) * t284;
t434 = t283 ^ 2;
t87 = -pkin(4) * t434 - pkin(8) * t363 - t253 * t300 + t112;
t52 = t332 * t83 + t334 * t87;
t360 = t272 * qJ(6) - t240 * t195 + t52;
t443 = -pkin(5) * (t453 + t433) - qJ(6) * t186 + t360;
t439 = t328 * t356 + t330 * t349;
t436 = t328 * t351 + t330 * t357;
t282 = t284 ^ 2;
t432 = t300 ^ 2;
t299 = t302 ^ 2;
t427 = pkin(3) * t329;
t426 = pkin(5) * t334;
t51 = t332 * t87 - t334 * t83;
t28 = t332 * t52 - t334 * t51;
t422 = t28 * t328;
t421 = t28 * t330;
t420 = qJ(6) * t334;
t365 = t244 * t329 - t331 * t336;
t347 = -qJDD(2) * pkin(3) - t430 * qJ(4) + qJDD(4) + t365;
t342 = pkin(4) * t363 - t434 * pkin(8) + t253 * t284 + t347;
t361 = (0.2e1 * qJD(3) + t263) * t302;
t115 = t361 + t342;
t418 = t115 * t332;
t417 = t115 * t334;
t159 = t361 + t347;
t410 = t159 * t328;
t409 = t159 * t330;
t215 = t246 + t275;
t405 = t215 * t328;
t404 = t215 * t330;
t400 = t247 * t329;
t399 = t247 * t331;
t266 = qJDD(2) + t274;
t398 = t266 * t329;
t397 = t266 * t331;
t395 = t275 * t329;
t394 = t284 * t300;
t393 = t296 * t242;
t390 = t300 * t328;
t389 = t300 * t330;
t380 = qJD(3) * t302;
t189 = t365 + 0.2e1 * t380;
t122 = -t189 * t331 + t190 * t329;
t388 = t333 * t122;
t316 = t335 * t431 * t333;
t387 = t333 * (qJDD(2) + t316);
t386 = t335 * (qJDD(2) - t316);
t379 = qJD(6) * t296;
t372 = t329 * t246;
t371 = t331 * t246;
t370 = -pkin(3) * t331 - pkin(2);
t367 = -qJ(6) * t332 - pkin(4);
t29 = t332 * t51 + t334 * t52;
t70 = t111 * t328 + t330 * t112;
t123 = t189 * t329 + t331 * t190;
t340 = -pkin(1) * t431 + t343;
t285 = t333 * t340 + t424;
t286 = t335 * t340 - t425;
t362 = t333 * t285 + t335 * t286;
t287 = 0.2e1 * t379;
t355 = t287 + t360;
t42 = -pkin(5) * t433 + t355;
t43 = -t272 * pkin(5) - qJ(6) * t433 + t195 * t242 + qJDD(6) + t51;
t358 = -pkin(5) * t43 + qJ(6) * t42;
t354 = -pkin(5) * t447 + qJ(6) * t345;
t310 = t320 - 0.2e1 * t369;
t69 = -t111 * t330 + t112 * t328;
t213 = t363 - t394;
t250 = -t275 + t378;
t146 = t242 * t391 + t332 * t344;
t147 = t334 * t344 - t218;
t101 = -t146 * t328 + t147 * t330;
t339 = t333 * (t331 * t101 + t375) + t335 * (t329 * t101 - t374);
t338 = pkin(5) * t448 + qJ(6) * t446 - t43;
t293 = -0.2e1 * t380;
t337 = 0.2e1 * qJD(6) * t242 - t263 * t302 + t293 - t342 - t444;
t325 = t333 ^ 2;
t322 = t326 * t431;
t321 = t325 * t431;
t308 = t319 + 0.2e1 * t368;
t306 = pkin(7) * t431 + t346;
t290 = -t299 + t430;
t289 = -t299 - t430;
t288 = t432 - t430;
t269 = t331 * t275;
t264 = -t432 - t430;
t256 = -t282 + t432;
t255 = -t432 + t434;
t251 = t294 + t276;
t248 = -t432 - t299;
t245 = -t282 + t434;
t234 = -t282 - t432;
t232 = -t289 * t329 - t397;
t231 = t289 * t331 - t398;
t230 = -t432 - t434;
t221 = -t282 - t434;
t220 = t264 * t331 - t470;
t219 = t264 * t329 + t465;
t208 = t363 + t394;
t207 = t261 * t330 - t284 * t390;
t206 = t283 * t389 + t328 * t363;
t205 = (-t283 * t330 + t284 * t328) * t300;
t202 = t250 * t331 + t251 * t329;
t201 = t250 * t329 - t251 * t331;
t194 = t255 * t330 - t405;
t193 = -t256 * t328 + t466;
t181 = -t234 * t328 - t404;
t180 = t234 * t330 - t405;
t168 = t230 * t330 - t471;
t167 = t230 * t328 + t466;
t166 = -t212 * t328 - t213 * t330;
t165 = -t208 * t330 - t328 * t450;
t164 = t212 * t330 - t213 * t328;
t150 = -t187 + t393;
t133 = t181 * t331 + t329 * t450;
t132 = t181 * t329 - t331 * t450;
t131 = t168 * t331 + t208 * t329;
t130 = t168 * t329 - t208 * t331;
t125 = t166 * t331 + t221 * t329;
t124 = t166 * t329 - t221 * t331;
t114 = -qJ(4) * t180 + t409;
t113 = -qJ(4) * t167 + t410;
t98 = t146 * t330 + t147 * t328;
t85 = -pkin(3) * t180 + t112;
t84 = -pkin(3) * t167 + t111;
t76 = t417 + t512;
t75 = t418 - t488;
t74 = t150 * t329 + t499;
t72 = -t150 * t331 + t500;
t68 = -pkin(4) * t449 + t418 - t511;
t67 = t149 * t329 + t499;
t65 = -t149 * t331 + t500;
t63 = (pkin(5) * t296 - 0.2e1 * qJD(6)) * t242 + t115 + t444;
t62 = -pkin(4) * t149 - t417 + t489;
t55 = -qJ(4) * t164 - t69;
t53 = -t159 * t331 + t329 * t70;
t50 = (-t150 - t393) * pkin(5) + t337;
t49 = -pkin(5) * t393 + t337 + t486;
t40 = -qJ(6) * t162 + t43;
t39 = (-t162 - t433) * pkin(5) + t355;
t38 = -t150 * t420 - t332 * t50 - t488;
t37 = -pkin(5) * t413 + t334 * t49 - t512;
t36 = t150 * t367 + t334 * t50 + t489;
t35 = t511 + t332 * t49 + (pkin(4) + t426) * t449;
t34 = -t354 + t41;
t33 = t52 + t520;
t32 = -t328 * t68 + t330 * t76 + t521;
t31 = t497 + t51;
t30 = -t328 * t62 + t330 * t75 - t504;
t27 = -t338 + t497;
t26 = -pkin(4) * t115 + pkin(8) * t29;
t25 = -0.2e1 * t379 - t443 - t520;
t24 = -t28 - t472;
t23 = t332 * t43 + t334 * t42;
t22 = t332 * t42 - t334 * t43;
t21 = t29 + t481;
t20 = -t332 * t39 + t334 * t40 - t472;
t19 = t332 * t40 + t334 * t39 + t481;
t18 = -t328 * t36 + t330 * t38 - t504;
t17 = -t328 * t35 + t330 * t37 - t521;
t16 = t29 * t330 - t422;
t15 = t29 * t328 + t421;
t14 = -pkin(8) * t22 + (pkin(5) * t332 - t420) * t63;
t13 = t115 * t329 + t16 * t331;
t12 = -t115 * t331 + t16 * t329;
t11 = pkin(8) * t23 + (t367 - t426) * t63;
t10 = -t22 * t328 + t23 * t330;
t9 = t22 * t330 + t23 * t328;
t8 = t10 * t331 + t329 * t63;
t7 = t10 * t329 - t331 * t63;
t6 = -t21 * t328 + t24 * t330 - t487;
t5 = -pkin(3) * t15 - pkin(4) * t28;
t4 = -t19 * t328 + t20 * t330 - t487;
t3 = -pkin(8) * t421 - qJ(4) * t15 - t26 * t328;
t2 = -pkin(3) * t9 - pkin(4) * t22 - t358;
t1 = -qJ(4) * t9 - t11 * t328 + t14 * t330;
t44 = [0, 0, 0, 0, 0, qJDD(1), t359, t348, 0, 0, (t309 + t368) * t333, t308 * t335 + t333 * t310, t387 + t335 * (-t321 + t430), t310 * t335, t333 * (t322 - t430) + t386, 0, t335 * t306 + pkin(1) * t310 + pkin(7) * (t335 * (-t322 - t430) - t387), -t333 * t306 - pkin(1) * t308 + pkin(7) * (-t386 - t333 * (-t321 - t430)), pkin(1) * (t321 + t322) + (t325 + t326) * t419 + t362, pkin(1) * t306 + pkin(7) * t362, t333 * (t276 * t331 - t329 * t378) + t335 * (t276 * t329 + t331 * t378), t333 * (-t249 * t331 + t252 * t329) + t335 * (-t249 * t329 - t252 * t331), t333 * (-t290 * t329 + t465) + t335 * (t290 * t331 + t470), t333 * (t294 * t331 + t395) + t335 * (t294 * t329 - t269), t333 * (t288 * t331 - t398) + t335 * (t288 * t329 + t397), (t333 * (-t300 * t331 + t302 * t329) + t335 * (-t300 * t329 - t302 * t331)) * qJD(2), t333 * (-qJ(3) * t219 - t400) + t335 * (-pkin(2) * t249 + qJ(3) * t220 + t399) - pkin(1) * t249 + pkin(7) * (-t333 * t219 + t220 * t335), t333 * (-qJ(3) * t231 - t399) + t335 * (pkin(2) * t252 + qJ(3) * t232 - t400) + pkin(1) * t252 + pkin(7) * (-t333 * t231 + t232 * t335), t333 * (-qJ(3) * t201 - t122) + t335 * (-pkin(2) * t248 + qJ(3) * t202 + t123) - pkin(1) * t248 + pkin(7) * (-t333 * t201 + t202 * t335), -qJ(3) * t388 + t335 * (pkin(2) * t247 + qJ(3) * t123) + pkin(1) * t247 + pkin(7) * (t123 * t335 - t388), t333 * (t207 * t331 + t372) + t335 * (t207 * t329 - t371), t333 * (t165 * t331 - t245 * t329) + t335 * (t165 * t329 + t245 * t331), t333 * (t193 * t331 - t212 * t329) + t335 * (t193 * t329 + t212 * t331), t333 * (t206 * t331 - t372) + t335 * (t206 * t329 + t371), t333 * (t194 * t331 - t213 * t329) + t335 * (t194 * t329 + t213 * t331), t333 * (t205 * t331 + t395) + t335 * (t205 * t329 - t269), t333 * (-qJ(3) * t130 + t113 * t331 - t329 * t84) + t335 * (-pkin(2) * t167 + qJ(3) * t131 + t113 * t329 + t331 * t84) - pkin(1) * t167 + pkin(7) * (-t333 * t130 + t131 * t335), t333 * (-qJ(3) * t132 + t114 * t331 - t329 * t85) + t335 * (-pkin(2) * t180 + qJ(3) * t133 + t114 * t329 + t331 * t85) - pkin(1) * t180 + pkin(7) * (-t333 * t132 + t133 * t335), t333 * (-qJ(3) * t124 + t331 * t55) + t335 * (qJ(3) * t125 + t329 * t55) + pkin(7) * (-t333 * t124 + t125 * t335) + (t333 * t427 + t335 * t370 - pkin(1)) * t164, (t333 * (-qJ(4) * t331 + t427) + t335 * (-qJ(4) * t329 + t370) - pkin(1)) * t69 + (pkin(7) + qJ(3)) * (-t333 * t53 + t335 * (t159 * t329 + t331 * t70)), t339, -t516, t508, t455, t524, t454, t333 * (-qJ(3) * t65 + t30 * t331 - t31 * t329) + t335 * (qJ(3) * t67 + t30 * t329 + t31 * t331 - t506) - t507 + pkin(7) * (-t333 * t65 + t335 * t67), t333 * (t32 * t331 - t329 * t33 - t528) + t335 * (t32 * t329 + t33 * t331 - t526) - t529, t333 * (-t329 * t41 + t331 * t6 - t505) + t335 * (t329 * t6 + t331 * t41 + t496) + t493, t333 * (-qJ(3) * t12 + t3 * t331 - t329 * t5) + t335 * (-pkin(2) * t15 + qJ(3) * t13 + t3 * t329 + t331 * t5) - pkin(1) * t15 + pkin(7) * (-t333 * t12 + t13 * t335), t339, t508, t516, t454, -t524, t455, t333 * (-qJ(3) * t72 + t18 * t331 - t27 * t329) + t335 * (qJ(3) * t74 + t18 * t329 + t27 * t331 - t506) - t507 + pkin(7) * (-t333 * t72 + t335 * t74), t333 * (-t329 * t34 + t331 * t4 - t505) + t335 * (t329 * t4 + t331 * t34 + t496) + t493, t333 * (t17 * t331 - t25 * t329 + t528) + t335 * (t17 * t329 + t25 * t331 + t526) + t529, t333 * (-qJ(3) * t7 + t1 * t331 - t2 * t329) + t335 * (-pkin(2) * t9 + qJ(3) * t8 + t1 * t329 + t2 * t331) - pkin(1) * t9 + pkin(7) * (-t333 * t7 + t335 * t8); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t321 - t322, t319, t316, t320, qJDD(2), -t285, -t286, 0, 0, t274, t299 - t432, t251, -t274, t250, qJDD(2), pkin(2) * t219 + t293 - t365, pkin(2) * t231 - t190, pkin(2) * t201, pkin(2) * t122, t261 * t328 + t284 * t389, -t208 * t328 + t330 * t450, t256 * t330 + t471, t283 * t390 - t330 * t363, t255 * t328 + t404, (-t283 * t328 - t284 * t330) * t300, pkin(2) * t130 - pkin(3) * t208 + qJ(4) * t168 - t409, pkin(2) * t132 - pkin(3) * t450 + qJ(4) * t181 + t410, pkin(2) * t124 - pkin(3) * t221 + qJ(4) * t166 + t70, pkin(2) * t53 - pkin(3) * t159 + qJ(4) * t70, t98, -t509, t495, t436, -t510, t439, pkin(2) * t65 - pkin(3) * t149 + t328 * t75 + t330 * t62 + t503, t328 * t76 + t330 * t68 - t527, t21 * t330 + t24 * t328 + t498, pkin(2) * t12 - pkin(3) * t115 - pkin(8) * t422 + qJ(4) * t16 + t26 * t330, t98, t495, t509, t439, t510, t436, pkin(2) * t72 - pkin(3) * t150 + t328 * t38 + t330 * t36 + t503, t19 * t330 + t20 * t328 + t498, t328 * t37 + t330 * t35 + t527, pkin(2) * t7 - pkin(3) * t63 + qJ(4) * t10 + t11 * t330 + t14 * t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, -t252, t248, -t247, 0, 0, 0, 0, 0, 0, t167, t180, t164, t69, 0, 0, 0, 0, 0, 0, t476, -t77, t456, t15, 0, 0, 0, 0, 0, 0, t476, t456, t77, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t450, t221, t159, 0, 0, 0, 0, 0, 0, t149, t449, t162, t115, 0, 0, 0, 0, 0, 0, t150, t162, -t449, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, t452, t447, -t401, t345, t272, -t51, -t52, 0, 0, t401, t447, -t452, t272, -t345, -t401, t338, t354, t287 + t443, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t447, t453, t43;];
tauJ_reg  = t44;
