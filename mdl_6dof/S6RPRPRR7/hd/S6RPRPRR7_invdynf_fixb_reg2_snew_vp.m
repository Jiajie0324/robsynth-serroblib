% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 19:14
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPRR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR7_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 19:14:37
% EndTime: 2019-05-05 19:14:42
% DurationCPUTime: 5.68s
% Computational Cost: add. (33445->292), mult. (75169->360), div. (0->0), fcn. (54207->10), ass. (0->204)
t1769 = cos(qJ(3));
t1801 = qJD(1) * t1769;
t1786 = qJD(3) * t1801;
t1765 = sin(qJ(3));
t1790 = t1765 * qJDD(1);
t1733 = -t1786 - t1790;
t1759 = t1765 ^ 2;
t1772 = qJD(1) ^ 2;
t1766 = sin(qJ(1));
t1770 = cos(qJ(1));
t1743 = -t1770 * g(1) - t1766 * g(2);
t1775 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1743;
t1779 = qJD(3) * pkin(3) - qJ(4) * t1801;
t1805 = pkin(7) + pkin(1);
t1691 = t1733 * pkin(3) + (qJ(4) * t1759 + t1805) * t1772 - t1779 * t1801 - qJDD(4) + t1775;
t1802 = qJD(1) * t1765;
t1787 = qJD(3) * t1802;
t1789 = t1769 * qJDD(1);
t1734 = -t1787 + t1789;
t1761 = sin(pkin(10));
t1762 = cos(pkin(10));
t1710 = t1762 * t1733 - t1734 * t1761;
t1728 = -t1761 * t1801 - t1762 * t1802;
t1727 = t1728 ^ 2;
t1729 = -t1761 * t1802 + t1762 * t1801;
t1781 = qJD(3) * pkin(4) - pkin(8) * t1729;
t1665 = t1710 * pkin(4) + t1727 * pkin(8) - t1729 * t1781 + t1691;
t1764 = sin(qJ(5));
t1768 = cos(qJ(5));
t1702 = -t1768 * t1728 + t1729 * t1764;
t1701 = qJD(6) + t1702;
t1814 = qJD(6) + t1701;
t1704 = t1728 * t1764 + t1729 * t1768;
t1757 = qJD(3) + qJD(5);
t1763 = sin(qJ(6));
t1767 = cos(qJ(6));
t1692 = t1704 * t1763 - t1767 * t1757;
t1812 = t1692 ^ 2;
t1694 = t1704 * t1767 + t1757 * t1763;
t1811 = t1694 ^ 2;
t1810 = t1701 ^ 2;
t1809 = t1702 ^ 2;
t1808 = t1704 ^ 2;
t1807 = t1729 ^ 2;
t1806 = t1757 ^ 2;
t1800 = qJD(3) * t1728;
t1799 = qJD(3) * t1729;
t1798 = t1692 * t1694;
t1797 = t1702 * t1704;
t1796 = t1728 * t1729;
t1795 = t1759 * t1772;
t1794 = qJD(5) - t1757;
t1793 = qJD(5) + t1757;
t1792 = qJD(6) - t1701;
t1742 = t1766 * g(1) - t1770 * g(2);
t1778 = -t1772 * qJ(2) + qJDD(2) - t1742;
t1721 = -qJDD(1) * t1805 + t1778;
t1712 = t1765 * g(3) + t1769 * t1721;
t1785 = t1765 * t1769 * t1772;
t1740 = qJDD(3) - t1785;
t1689 = (-t1734 - t1787) * qJ(4) + t1740 * pkin(3) + t1712;
t1713 = -t1769 * g(3) + t1765 * t1721;
t1690 = -pkin(3) * t1795 + t1733 * qJ(4) - qJD(3) * t1779 + t1713;
t1664 = 0.2e1 * qJD(4) * t1728 + t1761 * t1689 + t1762 * t1690;
t1651 = -t1727 * pkin(4) + t1710 * pkin(8) - qJD(3) * t1781 + t1664;
t1663 = -0.2e1 * qJD(4) * t1729 + t1762 * t1689 - t1761 * t1690;
t1711 = t1733 * t1761 + t1734 * t1762;
t1699 = -t1711 + t1800;
t1707 = qJDD(3) + t1796;
t1773 = pkin(4) * t1707 + pkin(8) * t1699 + t1663;
t1628 = t1768 * t1651 + t1764 * t1773;
t1760 = t1769 ^ 2;
t1791 = t1759 + t1760;
t1788 = qJDD(3) + qJDD(5);
t1627 = -t1651 * t1764 + t1768 * t1773;
t1780 = t1764 * t1710 + t1768 * t1711;
t1673 = -qJD(5) * t1702 + t1780;
t1784 = -t1763 * t1673 + t1767 * t1788;
t1783 = -t1768 * t1710 + t1764 * t1711;
t1777 = -t1767 * t1673 - t1763 * t1788;
t1776 = -qJD(5) * t1704 - qJDD(6) - t1783;
t1658 = t1704 * t1793 + t1783;
t1771 = qJD(3) ^ 2;
t1748 = -t1760 * t1772 - t1771;
t1747 = -t1771 - t1795;
t1741 = -qJDD(3) - t1785;
t1739 = t1791 * t1772;
t1738 = qJDD(1) * t1766 + t1770 * t1772;
t1737 = qJDD(1) * t1770 - t1766 * t1772;
t1736 = t1791 * qJDD(1);
t1735 = -0.2e1 * t1787 + t1789;
t1732 = 0.2e1 * t1786 + t1790;
t1726 = qJDD(1) * pkin(1) - t1778;
t1724 = t1772 * pkin(1) + t1775;
t1722 = -t1771 - t1807;
t1720 = t1772 * t1805 + t1775;
t1717 = t1741 * t1769 - t1748 * t1765;
t1716 = -t1740 * t1765 + t1747 * t1769;
t1715 = t1741 * t1765 + t1748 * t1769;
t1714 = t1740 * t1769 + t1747 * t1765;
t1708 = -qJDD(3) + t1796;
t1706 = -t1771 - t1727;
t1700 = -t1806 - t1808;
t1698 = t1711 + t1800;
t1697 = t1710 + t1799;
t1696 = -t1710 + t1799;
t1695 = -t1727 - t1807;
t1688 = t1708 * t1762 - t1722 * t1761;
t1687 = t1708 * t1761 + t1722 * t1762;
t1685 = -t1712 * t1765 + t1713 * t1769;
t1684 = t1712 * t1769 + t1713 * t1765;
t1682 = t1706 * t1762 - t1707 * t1761;
t1681 = t1706 * t1761 + t1707 * t1762;
t1680 = pkin(5) * t1702 - pkin(9) * t1704;
t1679 = -t1788 - t1797;
t1678 = t1788 - t1797;
t1677 = -t1806 - t1809;
t1675 = t1697 * t1762 - t1699 * t1761;
t1674 = t1697 * t1761 + t1699 * t1762;
t1672 = -t1808 - t1809;
t1671 = -t1687 * t1765 + t1688 * t1769;
t1670 = t1687 * t1769 + t1688 * t1765;
t1669 = -t1810 - t1811;
t1668 = t1679 * t1768 - t1700 * t1764;
t1667 = t1679 * t1764 + t1700 * t1768;
t1666 = -t1810 - t1812;
t1662 = -t1811 - t1812;
t1661 = t1702 * t1794 - t1780;
t1660 = -t1702 * t1793 + t1780;
t1659 = -t1704 * t1794 - t1783;
t1657 = -t1681 * t1765 + t1682 * t1769;
t1656 = t1681 * t1769 + t1682 * t1765;
t1655 = t1677 * t1768 - t1678 * t1764;
t1654 = t1677 * t1764 + t1678 * t1768;
t1653 = t1776 - t1798;
t1652 = -t1776 - t1798;
t1650 = -t1674 * t1765 + t1675 * t1769;
t1649 = t1674 * t1769 + t1675 * t1765;
t1645 = t1692 * t1792 + t1777;
t1644 = -t1692 * t1814 - t1777;
t1643 = -t1694 * t1792 + t1784;
t1642 = t1694 * t1814 - t1784;
t1641 = -t1667 * t1761 + t1668 * t1762;
t1640 = t1667 * t1762 + t1668 * t1761;
t1639 = -t1663 * t1761 + t1664 * t1762;
t1638 = t1663 * t1762 + t1664 * t1761;
t1637 = t1659 * t1768 - t1661 * t1764;
t1636 = t1659 * t1764 + t1661 * t1768;
t1635 = t1653 * t1767 - t1669 * t1763;
t1634 = t1653 * t1763 + t1669 * t1767;
t1633 = -t1654 * t1761 + t1655 * t1762;
t1632 = t1654 * t1762 + t1655 * t1761;
t1631 = -t1652 * t1763 + t1666 * t1767;
t1630 = t1652 * t1767 + t1666 * t1763;
t1629 = (t1702 * t1757 - t1673) * pkin(9) + t1658 * pkin(5) - t1665;
t1626 = t1643 * t1767 - t1645 * t1763;
t1625 = t1643 * t1763 + t1645 * t1767;
t1624 = -t1640 * t1765 + t1641 * t1769;
t1623 = t1640 * t1769 + t1641 * t1765;
t1622 = -pkin(5) * t1806 + pkin(9) * t1788 - t1702 * t1680 + t1628;
t1621 = -pkin(5) * t1788 - pkin(9) * t1806 + t1680 * t1704 - t1627;
t1620 = -t1638 * t1765 + t1639 * t1769;
t1619 = t1638 * t1769 + t1639 * t1765;
t1618 = t1635 * t1768 + t1644 * t1764;
t1617 = t1635 * t1764 - t1644 * t1768;
t1616 = t1631 * t1768 + t1642 * t1764;
t1615 = t1631 * t1764 - t1642 * t1768;
t1614 = -t1636 * t1761 + t1637 * t1762;
t1613 = t1636 * t1762 + t1637 * t1761;
t1612 = t1626 * t1768 + t1662 * t1764;
t1611 = t1626 * t1764 - t1662 * t1768;
t1610 = -t1632 * t1765 + t1633 * t1769;
t1609 = t1632 * t1769 + t1633 * t1765;
t1608 = -t1627 * t1764 + t1628 * t1768;
t1607 = t1627 * t1768 + t1628 * t1764;
t1606 = t1622 * t1767 + t1629 * t1763;
t1605 = -t1622 * t1763 + t1629 * t1767;
t1604 = -t1617 * t1761 + t1618 * t1762;
t1603 = t1617 * t1762 + t1618 * t1761;
t1602 = -t1615 * t1761 + t1616 * t1762;
t1601 = t1615 * t1762 + t1616 * t1761;
t1600 = -t1613 * t1765 + t1614 * t1769;
t1599 = t1613 * t1769 + t1614 * t1765;
t1598 = -t1611 * t1761 + t1612 * t1762;
t1597 = t1611 * t1762 + t1612 * t1761;
t1596 = -t1607 * t1761 + t1608 * t1762;
t1595 = t1607 * t1762 + t1608 * t1761;
t1594 = -t1605 * t1763 + t1606 * t1767;
t1593 = t1605 * t1767 + t1606 * t1763;
t1592 = -t1603 * t1765 + t1604 * t1769;
t1591 = t1603 * t1769 + t1604 * t1765;
t1590 = -t1601 * t1765 + t1602 * t1769;
t1589 = t1601 * t1769 + t1602 * t1765;
t1588 = t1594 * t1768 + t1621 * t1764;
t1587 = t1594 * t1764 - t1621 * t1768;
t1586 = -t1597 * t1765 + t1598 * t1769;
t1585 = t1597 * t1769 + t1598 * t1765;
t1584 = -t1595 * t1765 + t1596 * t1769;
t1583 = t1595 * t1769 + t1596 * t1765;
t1582 = -t1587 * t1761 + t1588 * t1762;
t1581 = t1587 * t1762 + t1588 * t1761;
t1580 = -t1581 * t1765 + t1582 * t1769;
t1579 = t1581 * t1769 + t1582 * t1765;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1738, -t1737, 0, -t1742 * t1766 + t1743 * t1770, 0, 0, 0, 0, 0, 0, 0, t1738, t1737, -t1724 * t1770 - t1726 * t1766, 0, 0, 0, 0, 0, 0, t1714 * t1766 + t1732 * t1770, t1715 * t1766 + t1735 * t1770, -t1736 * t1766 - t1739 * t1770, t1684 * t1766 - t1720 * t1770, 0, 0, 0, 0, 0, 0, t1656 * t1766 + t1696 * t1770, t1670 * t1766 + t1698 * t1770, t1649 * t1766 + t1695 * t1770, t1619 * t1766 - t1691 * t1770, 0, 0, 0, 0, 0, 0, t1609 * t1766 + t1658 * t1770, t1623 * t1766 + t1660 * t1770, t1599 * t1766 + t1672 * t1770, t1583 * t1766 - t1665 * t1770, 0, 0, 0, 0, 0, 0, t1589 * t1766 + t1630 * t1770, t1591 * t1766 + t1634 * t1770, t1585 * t1766 + t1625 * t1770, t1579 * t1766 + t1593 * t1770; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1737, -t1738, 0, t1742 * t1770 + t1743 * t1766, 0, 0, 0, 0, 0, 0, 0, -t1737, t1738, -t1724 * t1766 + t1726 * t1770, 0, 0, 0, 0, 0, 0, -t1714 * t1770 + t1732 * t1766, -t1715 * t1770 + t1735 * t1766, t1736 * t1770 - t1739 * t1766, -t1684 * t1770 - t1720 * t1766, 0, 0, 0, 0, 0, 0, -t1656 * t1770 + t1696 * t1766, -t1670 * t1770 + t1698 * t1766, -t1649 * t1770 + t1695 * t1766, -t1619 * t1770 - t1691 * t1766, 0, 0, 0, 0, 0, 0, -t1609 * t1770 + t1658 * t1766, -t1623 * t1770 + t1660 * t1766, -t1599 * t1770 + t1672 * t1766, -t1583 * t1770 - t1665 * t1766, 0, 0, 0, 0, 0, 0, -t1589 * t1770 + t1630 * t1766, -t1591 * t1770 + t1634 * t1766, -t1585 * t1770 + t1625 * t1766, -t1579 * t1770 + t1593 * t1766; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1716, t1717, 0, t1685, 0, 0, 0, 0, 0, 0, t1657, t1671, t1650, t1620, 0, 0, 0, 0, 0, 0, t1610, t1624, t1600, t1584, 0, 0, 0, 0, 0, 0, t1590, t1592, t1586, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1772, -qJDD(1), 0, t1743, 0, 0, 0, 0, 0, 0, 0, t1772, qJDD(1), -t1724, 0, 0, 0, 0, 0, 0, t1732, t1735, -t1739, -t1720, 0, 0, 0, 0, 0, 0, t1696, t1698, t1695, -t1691, 0, 0, 0, 0, 0, 0, t1658, t1660, t1672, -t1665, 0, 0, 0, 0, 0, 0, t1630, t1634, t1625, t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1772, 0, t1742, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1772, t1726, 0, 0, 0, 0, 0, 0, -t1714, -t1715, t1736, -t1684, 0, 0, 0, 0, 0, 0, -t1656, -t1670, -t1649, -t1619, 0, 0, 0, 0, 0, 0, -t1609, -t1623, -t1599, -t1583, 0, 0, 0, 0, 0, 0, -t1589, -t1591, -t1585, -t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1716, t1717, 0, t1685, 0, 0, 0, 0, 0, 0, t1657, t1671, t1650, t1620, 0, 0, 0, 0, 0, 0, t1610, t1624, t1600, t1584, 0, 0, 0, 0, 0, 0, t1590, t1592, t1586, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1716, t1717, 0, t1685, 0, 0, 0, 0, 0, 0, t1657, t1671, t1650, t1620, 0, 0, 0, 0, 0, 0, t1610, t1624, t1600, t1584, 0, 0, 0, 0, 0, 0, t1590, t1592, t1586, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1772, -qJDD(1), t1724, 0, 0, 0, 0, 0, 0, -t1732, -t1735, t1739, t1720, 0, 0, 0, 0, 0, 0, -t1696, -t1698, -t1695, t1691, 0, 0, 0, 0, 0, 0, -t1658, -t1660, -t1672, t1665, 0, 0, 0, 0, 0, 0, -t1630, -t1634, -t1625, -t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1772, -t1726, 0, 0, 0, 0, 0, 0, t1714, t1715, -t1736, t1684, 0, 0, 0, 0, 0, 0, t1656, t1670, t1649, t1619, 0, 0, 0, 0, 0, 0, t1609, t1623, t1599, t1583, 0, 0, 0, 0, 0, 0, t1589, t1591, t1585, t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1747, t1741, -t1790, t1713, 0, 0, 0, 0, 0, 0, t1682, t1688, t1675, t1639, 0, 0, 0, 0, 0, 0, t1633, t1641, t1614, t1596, 0, 0, 0, 0, 0, 0, t1602, t1604, t1598, t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1740, t1748, -t1789, t1712, 0, 0, 0, 0, 0, 0, t1681, t1687, t1674, t1638, 0, 0, 0, 0, 0, 0, t1632, t1640, t1613, t1595, 0, 0, 0, 0, 0, 0, t1601, t1603, t1597, t1581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1732, t1735, -t1739, -t1720, 0, 0, 0, 0, 0, 0, t1696, t1698, t1695, -t1691, 0, 0, 0, 0, 0, 0, t1658, t1660, t1672, -t1665, 0, 0, 0, 0, 0, 0, t1630, t1634, t1625, t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1706, t1708, t1697, t1664, 0, 0, 0, 0, 0, 0, t1655, t1668, t1637, t1608, 0, 0, 0, 0, 0, 0, t1616, t1618, t1612, t1588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1707, t1722, t1699, t1663, 0, 0, 0, 0, 0, 0, t1654, t1667, t1636, t1607, 0, 0, 0, 0, 0, 0, t1615, t1617, t1611, t1587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1696, t1698, t1695, -t1691, 0, 0, 0, 0, 0, 0, t1658, t1660, t1672, -t1665, 0, 0, 0, 0, 0, 0, t1630, t1634, t1625, t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1677, t1679, t1659, t1628, 0, 0, 0, 0, 0, 0, t1631, t1635, t1626, t1594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1678, t1700, t1661, t1627, 0, 0, 0, 0, 0, 0, -t1642, -t1644, -t1662, -t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1658, t1660, t1672, -t1665, 0, 0, 0, 0, 0, 0, t1630, t1634, t1625, t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1666, t1653, t1643, t1606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1652, t1669, t1645, t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1642, t1644, t1662, t1621;];
f_new_reg  = t1;
