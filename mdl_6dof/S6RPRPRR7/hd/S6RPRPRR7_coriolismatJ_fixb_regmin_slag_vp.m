% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:56:07
% EndTime: 2019-03-09 03:56:23
% DurationCPUTime: 7.90s
% Computational Cost: add. (7624->387), mult. (14036->535), div. (0->0), fcn. (16845->8), ass. (0->305)
t302 = cos(qJ(6));
t290 = qJD(6) * t302;
t297 = sin(pkin(10));
t298 = cos(pkin(10));
t301 = sin(qJ(3));
t303 = cos(qJ(3));
t273 = -t297 * t301 + t298 * t303;
t274 = -t297 * t303 - t298 * t301;
t300 = sin(qJ(5));
t484 = cos(qJ(5));
t158 = -t300 * t273 + t484 * t274;
t528 = t302 * t158;
t533 = -t528 / 0.2e1;
t545 = 0.2e1 * t533;
t546 = t545 * qJD(1);
t557 = t290 + t546;
t448 = t158 ^ 2;
t267 = t484 * t273;
t436 = t300 * t274;
t506 = t267 + t436;
t523 = t506 ^ 2;
t525 = t523 - t448;
t540 = t525 * t302;
t550 = qJD(1) * t540;
t556 = qJD(6) * t545 - t550;
t544 = t528 / 0.2e1;
t551 = t533 + t544;
t548 = qJD(6) * t551;
t555 = t548 + t550;
t386 = qJD(3) + qJD(5);
t554 = 0.2e1 * t544;
t299 = sin(qJ(6));
t304 = -pkin(1) - pkin(7);
t508 = -qJ(4) + t304;
t276 = t508 * t301;
t277 = t508 * t303;
t235 = t298 * t276 + t297 * t277;
t178 = pkin(8) * t274 + t235;
t527 = t484 * t178;
t505 = -t297 * t276 + t298 * t277;
t517 = -pkin(8) * t273 + t505;
t529 = t300 * t517;
t538 = t527 + t529;
t553 = t538 * t299;
t552 = t538 * t302;
t541 = t525 * t299;
t549 = qJD(1) * t541;
t526 = t484 * t517;
t496 = -t526 / 0.2e1;
t348 = -t527 / 0.2e1;
t531 = t299 * t158;
t543 = -t531 / 0.2e1;
t542 = t531 / 0.2e1;
t512 = t506 * qJD(1);
t368 = t158 * t512;
t347 = t267 / 0.2e1;
t361 = t436 / 0.2e1;
t504 = t347 + t361;
t539 = qJD(6) * t504 - t368;
t518 = t386 * t158;
t530 = t300 * t178;
t68 = t526 - t530;
t522 = t158 / 0.2e1;
t534 = -t158 / 0.2e1;
t536 = t534 + t522;
t535 = t525 * qJD(1);
t520 = t299 * t506;
t364 = t520 / 0.2e1;
t479 = t506 * pkin(5);
t480 = t158 * pkin(9);
t137 = t479 - t480;
t381 = pkin(3) * t298 + pkin(4);
t483 = pkin(3) * t297;
t265 = t300 * t381 + t483 * t484;
t256 = pkin(9) + t265;
t521 = -t256 / 0.2e1;
t494 = t506 / 0.2e1;
t481 = pkin(9) * t506;
t420 = qJD(3) * t506;
t516 = qJD(4) * t158;
t514 = t158 * qJD(1);
t513 = t504 * qJD(1);
t511 = 0.2e1 * t506;
t295 = t299 ^ 2;
t296 = t302 ^ 2;
t281 = t296 - t295;
t510 = t281 * t386;
t476 = qJD(3) * pkin(3);
t509 = (t273 * t297 + t274 * t298) * t476;
t264 = t300 * t483 - t484 * t381;
t255 = -pkin(5) + t264;
t507 = t255 + t264;
t489 = -t255 / 0.2e1;
t356 = t264 / 0.2e1 + t489;
t308 = (t521 + t265 / 0.2e1) * t506 - t356 * t158;
t503 = -t481 / 0.2e1 + t308;
t434 = t302 * t506;
t217 = -t434 / 0.2e1;
t349 = 0.2e1 * t217;
t502 = qJD(6) * t349;
t216 = -t520 / 0.2e1;
t350 = 0.2e1 * t216;
t501 = qJD(6) * t350;
t443 = t299 * t302;
t370 = qJD(1) * t443;
t355 = t295 / 0.2e1 - t296 / 0.2e1;
t86 = t355 * t506;
t500 = t370 * t523 + t386 * t86;
t498 = t273 ^ 2;
t497 = t274 ^ 2;
t493 = -t506 / 0.2e1;
t488 = -t299 / 0.2e1;
t486 = -t302 / 0.2e1;
t485 = t302 / 0.2e1;
t292 = t303 * pkin(3);
t307 = t536 * t506;
t22 = t307 * t302;
t478 = t22 * qJD(3);
t41 = t307 * t299;
t477 = t41 * qJD(3);
t286 = pkin(3) * t301 + qJ(2);
t249 = -pkin(4) * t274 + t286;
t344 = -pkin(5) * t158 - t481;
t309 = t249 + t344;
t27 = -t302 * t309 + t553;
t3 = (-t27 + t553) * t506 - t137 * t528;
t474 = t3 * qJD(1);
t28 = t299 * t309 + t552;
t4 = (-t28 + t552) * t506 + t137 * t531;
t472 = t4 * qJD(1);
t471 = t299 * t68;
t470 = t302 * t68;
t357 = 0.2e1 * t494;
t109 = t357 * t302;
t417 = qJD(3) * t302;
t467 = t109 * qJD(5) + t417 * t506;
t13 = -t158 * t27 + t520 * t68;
t466 = qJD(1) * t13;
t14 = t158 * t28 - t434 * t68;
t465 = qJD(1) * t14;
t464 = qJD(1) * t22;
t311 = t523 / 0.2e1;
t306 = 0.1e1 / 0.2e1 - t158 * t534 + t311;
t34 = t306 * t299;
t462 = qJD(1) * t34;
t35 = t306 * t302;
t461 = qJD(1) * t35;
t460 = qJD(1) * t41;
t334 = -t523 - t448;
t43 = t334 * t299;
t458 = qJD(1) * t43;
t45 = t334 * t302;
t456 = qJD(1) * t45;
t250 = pkin(4) * t273 + t292;
t50 = -t158 * t250 + t249 * t506;
t455 = qJD(1) * t50;
t51 = t158 * t249 + t250 * t506;
t454 = qJD(1) * t51;
t76 = t235 * t274 - t273 * t505;
t451 = qJD(1) * t76;
t79 = t536 * t443;
t450 = qJD(1) * t79;
t449 = qJD(1) * t86;
t428 = t531 * qJD(1);
t90 = 0.2e1 * t522 * t299;
t83 = t90 * qJD(1);
t427 = t520 * qJD(1);
t358 = t494 + t493;
t94 = t358 * t299;
t426 = t94 * qJD(1);
t95 = t357 * t299;
t425 = t95 * qJD(1);
t424 = qJD(1) * qJ(2);
t120 = t281 * t523;
t423 = qJD(1) * t120;
t422 = qJD(1) * t286;
t421 = qJD(2) * t158;
t418 = qJD(3) * t299;
t416 = qJD(4) * t506;
t414 = qJD(5) * t506;
t413 = qJD(5) * t249;
t412 = qJD(5) * t299;
t411 = qJD(5) * t302;
t410 = qJD(6) * t299;
t407 = t554 * qJD(1);
t108 = t358 * t302;
t406 = t108 * qJD(1);
t405 = t109 * qJD(1);
t346 = -t498 / 0.2e1 - t497 / 0.2e1;
t141 = -0.1e1 / 0.2e1 + t346;
t404 = t141 * qJD(1);
t157 = 0.2e1 * t347 + t436;
t402 = t157 * qJD(1);
t320 = (t297 * t274 / 0.2e1 - t298 * t273 / 0.2e1) * pkin(3);
t181 = -t292 / 0.2e1 + t320;
t401 = t181 * qJD(1);
t224 = t347 - t267 / 0.2e1;
t398 = t224 * qJD(1);
t397 = t224 * qJD(5);
t237 = t497 + t498;
t392 = t237 * qJD(1);
t252 = t265 * qJD(5);
t280 = t301 ^ 2 - t303 ^ 2;
t391 = t280 * qJD(1);
t390 = t301 * qJD(1);
t389 = t301 * qJD(3);
t388 = t303 * qJD(1);
t387 = t303 * qJD(3);
t377 = qJ(2) * t390;
t376 = qJ(2) * t388;
t375 = t249 * t514;
t374 = t299 * t514;
t373 = t302 * t514;
t372 = t249 * t512;
t371 = t296 * t512;
t369 = qJD(6) * t158 * t506;
t367 = t506 * t514;
t282 = t299 * t290;
t366 = t302 * t512;
t365 = t301 * t388;
t363 = t158 * t488;
t258 = -t436 / 0.2e1;
t353 = t386 * t302;
t351 = t506 * t370;
t345 = pkin(5) / 0.2e1 + t356;
t342 = -0.2e1 * t351;
t341 = 0.2e1 * t351;
t340 = t299 * t353;
t339 = t386 * t443;
t321 = t506 * t538;
t74 = t250 + t137;
t1 = -t27 * t506 + t299 * t321 - t528 * t74;
t338 = t1 * qJD(1) - t41 * qJD(2);
t2 = -t28 * t506 + t302 * t321 + t531 * t74;
t337 = t2 * qJD(1) - t22 * qJD(2);
t305 = t481 / 0.2e1 + pkin(5) * t522 + t308;
t5 = t299 * t305;
t336 = qJD(1) * t5 - qJD(2) * t551;
t47 = t286 * t292;
t335 = t47 * qJD(1);
t332 = t158 * t255 - t256 * t506;
t330 = t506 * (-qJD(6) + t514);
t329 = qJD(5) * t157 + t420;
t327 = -t480 / 0.2e1 + t479 / 0.2e1;
t326 = t158 * t521 + t506 * t489;
t323 = t518 * t506;
t322 = t137 / 0.2e1 + t327;
t319 = t74 / 0.2e1 + t326;
t222 = t258 + t361;
t23 = t496 + t526 / 0.2e1;
t318 = -qJD(1) * t23 + qJD(2) * t222 - qJD(3) * t264;
t25 = t348 + t527 / 0.2e1;
t317 = qJD(1) * t25 + qJD(3) * t265;
t15 = t322 * t299;
t168 = t345 * t302;
t316 = pkin(5) * t411 - qJD(1) * t15 + qJD(3) * t168;
t167 = t345 * t299;
t17 = t322 * t302;
t315 = pkin(5) * t412 + qJD(1) * t17 + qJD(3) * t167;
t8 = t302 * t305;
t87 = t543 + t542;
t314 = -qJD(1) * t8 + qJD(2) * t87 - t265 * t418;
t11 = t302 * t319;
t310 = t493 + t504;
t98 = t310 * t299;
t313 = qJD(1) * t11 + qJD(2) * t98 - t255 * t418;
t111 = t310 * t302;
t9 = t299 * t319;
t312 = -qJD(1) * t9 + qJD(2) * t111 - t255 * t417;
t279 = t281 * qJD(6);
t251 = t264 * qJD(5);
t248 = t299 * t252;
t182 = -0.2e1 * t506 * t282;
t180 = t292 / 0.2e1 + t320;
t170 = pkin(5) * t486 + t485 * t507;
t169 = pkin(5) * t488 + t507 * t299 / 0.2e1;
t156 = 0.2e1 * t258 - t267;
t140 = 0.1e1 / 0.2e1 + t346;
t139 = t342 + t510;
t138 = t341 - t510;
t119 = t386 * t504;
t100 = 0.2e1 * t543;
t99 = t364 + t216;
t97 = 0.2e1 * t364;
t91 = t542 + t363;
t85 = t108 * qJD(5);
t82 = t91 * qJD(6);
t81 = t90 * qJD(6);
t80 = t86 * qJD(6);
t78 = t554 * t299;
t77 = -t410 + t83;
t73 = t339 - t449;
t72 = -t340 + t449;
t37 = -t158 * t544 + t217 * t506 + t485;
t36 = -t158 * t543 + t299 * t311 + t488;
t33 = -t158 * t355 + t295 * t534 + t296 * t522;
t26 = 0.2e1 * t348 - t529;
t24 = t530 + 0.2e1 * t496;
t18 = t137 * t485 - t302 * t327 - t471;
t16 = t137 * t488 + t299 * t327 - t470;
t12 = -t471 / 0.2e1 + t68 * t488 + t74 * t485 - t326 * t302;
t10 = -t470 / 0.2e1 + t68 * t486 + t74 * t488 + t326 * t299;
t7 = pkin(5) * t533 + t503 * t302 + t553;
t6 = pkin(5) * t363 + t503 * t299 - t552;
t19 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t301 * t387, t280 * qJD(3), 0, 0, 0, qJ(2) * t387 + qJD(2) * t301, -qJ(2) * t389 + qJD(2) * t303, qJD(4) * t237, qJD(2) * t286 + qJD(3) * t47 + qJD(4) * t76, t323, -t386 * t525, 0, 0, 0, qJD(3) * t50 + t413 * t506 - t421, qJD(2) * t506 + qJD(3) * t51 + t158 * t413, -t282 * t523 + t296 * t323, -0.2e1 * t299 * t434 * t518 - qJD(6) * t120, t299 * t369 + t386 * t540, t302 * t369 - t386 * t541 -(t414 + t420) * t158, qJD(3) * t1 - qJD(4) * t43 + qJD(5) * t3 + qJD(6) * t14 - t302 * t421, qJD(3) * t2 - qJD(4) * t45 + qJD(5) * t4 + qJD(6) * t13 + t299 * t421; 0, 0, 0, 0, qJD(1), t424, 0, 0, 0, 0, 0, t390, t388, 0, qJD(4) * t140 + t422, 0, 0, 0, 0, 0, -t514, t512, 0, 0, 0, 0, 0, qJD(6) * t37 - t373 - t477, qJD(6) * t36 + t374 - t478; 0, 0, 0, 0, 0, 0, -t365, t391, -t389, -t387, 0, -t304 * t389 + t376, -t304 * t387 - t377, -t509, t180 * qJD(4) + (-t235 * t298 + t297 * t505) * t476 + t335, t367, -t535, t518, -t329, 0, -qJD(3) * t538 + qJD(5) * t26 + t455, -qJD(3) * t68 + qJD(5) * t24 + t454, qJD(5) * t78 - t80 + (t299 * t417 + t371) * t158, t33 * qJD(5) + t182 + (qJD(3) * t281 + t342) * t158, qJD(5) * t97 + t418 * t506 + t555, t82 - t549 + t467, t539 (t299 * t332 - t552) * qJD(3) + t6 * qJD(5) + t12 * qJD(6) + t338 (t302 * t332 + t553) * qJD(3) + t7 * qJD(5) + t10 * qJD(6) + t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, qJD(2) * t140 + qJD(3) * t180 + t451, 0, 0, 0, 0, 0, t397, 0, 0, 0, 0, 0, 0, t82 - t85 - t458, qJD(5) * t99 - t456 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, -t535, t518, -qJD(3) * t157 - t414, 0, qJD(3) * t26 + qJD(4) * t224 - qJD(5) * t538 + t372, qJD(3) * t24 - qJD(5) * t68 + t375, qJD(3) * t78 - t80 - (-t299 * t411 - t371) * t158, t33 * qJD(3) + t182 - (-qJD(5) * t281 + t341) * t158, qJD(3) * t97 + t412 * t506 + t555, qJD(3) * t109 + t411 * t506 - t549, t539, t474 + t6 * qJD(3) - t108 * qJD(4) + (t299 * t344 - t552) * qJD(5) + t18 * qJD(6), t472 + t7 * qJD(3) + t99 * qJD(4) + (t302 * t344 + t553) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, -t340 * t511 - t423, t299 * t330 + t386 * t551, qJD(3) * t91 + t302 * t330, t119, qJD(2) * t37 + qJD(3) * t12 + qJD(4) * t91 + qJD(5) * t18 - qJD(6) * t28 + t465, qJD(2) * t36 + qJD(3) * t10 + qJD(4) * t551 + qJD(5) * t16 + qJD(6) * t27 + t466; 0, 0, 0, 0, -qJD(1), -t424, 0, 0, 0, 0, 0, -t390, -t388, 0, qJD(4) * t141 - t422, 0, 0, 0, 0, 0, t514, -t512, 0, 0, 0, 0, 0, -qJD(6) * t35 + t373 - t477, qJD(6) * t34 - t374 - t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, -t387, 0, t509, 0, 0, 0, 0, 0, t518, qJD(5) * t156 - t420, 0, 0, 0, 0, 0, qJD(5) * t554 + t158 * t417 - t460 + t501, qJD(5) * t100 - t158 * t418 - t464 + t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, t156 * qJD(3) - t414, 0, 0, 0, 0, 0, qJD(3) * t554 + t158 * t411 + t501, qJD(3) * t100 - t158 * t412 + t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158 * t290 + t350 * t386 - t461, -t158 * t410 + t349 * t386 + t462; 0, 0, 0, 0, 0, 0, t365, -t391, 0, 0, 0, -t376, t377, 0, qJD(4) * t181 - t335, -t367, t535, 0, -t397, 0, -qJD(5) * t25 - t416 - t455, qJD(5) * t23 - t454 - t516, qJD(5) * t79 - t296 * t367 - t80, t158 * t341 + t182, -qJD(5) * t94 + t556, t81 - t85 + t549, -t539, qJD(5) * t5 - qJD(6) * t11 - t302 * t416 - t338, qJD(4) * t520 + qJD(5) * t8 + qJD(6) * t9 - t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222 * qJD(5), 0, 0, 0, 0, 0, -qJD(5) * t551 - qJD(6) * t98 + t460, -qJD(5) * t87 - qJD(6) * t111 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, t251, t282, t279, 0, 0, 0, -t252 * t302 + t255 * t410, t255 * t290 + t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, 0, 0, 0, 0, 0, -t512, -t514, 0, 0, 0, 0, 0, -t366, t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, 0, -t252 - t317, t251 - t318, t282 + t450, t279, -t426, -t406, 0, qJD(6) * t169 - t265 * t353 + t336, qJD(6) * t170 + t248 - t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t139, t557, t77, -t513, qJD(5) * t169 - t256 * t290 - t313, qJD(5) * t170 + t256 * t410 - t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, -qJD(2) * t141 - qJD(3) * t181 - t451, 0, 0, 0, 0, 0, t329, t518, 0, 0, 0, 0, 0, t81 + t458 + t467, -qJD(3) * t520 - qJD(5) * t95 + qJD(6) * t554 + t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, 0, 0, 0, 0, 0, t512, t514, 0, 0, 0, 0, 0, t366, -t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t514, 0, 0, 0, 0, 0, t405, -t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t290 + t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, t535, 0, t224 * qJD(3), 0, qJD(3) * t25 - qJD(4) * t157 - t372, -qJD(3) * t23 - t375 - t516, -qJD(3) * t79 - t296 * t368 - t80, -t158 * t342 + t182, qJD(3) * t94 + t556, qJD(3) * t108 + qJD(6) * t531 + t549, -t539, -qJD(3) * t5 - qJD(4) * t109 - qJD(6) * t17 - t474, -qJD(3) * t8 + qJD(4) * t95 + qJD(6) * t15 - t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222 * qJD(3), 0, 0, 0, 0, 0, qJD(3) * t551, qJD(3) * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, 0, t317, t318, t282 - t450, t279, t426, t406, 0, -qJD(6) * t167 + t265 * t417 - t336, -qJD(6) * t168 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, -t514, 0, 0, 0, 0, 0, -t405, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, t279, 0, 0, 0, -pkin(5) * t410, -pkin(5) * t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t139, t557, -t410 + t428, -t513, -pkin(9) * t290 - t315, pkin(9) * t410 - t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, t339 * t511 + t423, -t299 * t368 - t386 * t545, -qJD(3) * t90 - qJD(5) * t531 - t302 * t368, t119, qJD(2) * t35 + qJD(3) * t11 - qJD(4) * t90 + qJD(5) * t17 - t465, -qJD(2) * t34 - qJD(3) * t9 - qJD(4) * t554 - qJD(5) * t15 - t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t98 + t461, qJD(3) * t111 - t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t138, -t546, -t83, t513, qJD(5) * t167 + t313, qJD(5) * t168 + t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t138, -t546, -t428, t513, t315, t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t19;
