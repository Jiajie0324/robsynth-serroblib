% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 19:14
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 19:14:09
% EndTime: 2019-05-05 19:14:37
% DurationCPUTime: 29.38s
% Computational Cost: add. (244916->878), mult. (550730->1124), div. (0->0), fcn. (396009->10), ass. (0->579)
t1403 = sin(pkin(10));
t1404 = cos(pkin(10));
t1411 = cos(qJ(3));
t1557 = qJD(1) * t1411;
t1407 = sin(qJ(3));
t1558 = qJD(1) * t1407;
t1356 = -t1403 * t1557 - t1404 * t1558;
t1357 = -t1403 * t1558 + t1404 * t1557;
t1317 = t1356 * t1357;
t1569 = qJDD(3) + t1317;
t1578 = t1403 * t1569;
t1577 = t1404 * t1569;
t1405 = sin(qJ(6));
t1406 = sin(qJ(5));
t1410 = cos(qJ(5));
t1307 = t1356 * t1406 + t1357 * t1410;
t1502 = qJD(3) * t1557;
t1514 = t1407 * qJDD(1);
t1366 = -t1502 - t1514;
t1392 = t1411 * qJDD(1);
t1503 = qJD(3) * t1558;
t1367 = t1392 - t1503;
t1319 = t1403 * t1366 + t1404 * t1367;
t1480 = -t1404 * t1366 + t1367 * t1403;
t1483 = t1406 * t1319 + t1410 * t1480;
t1228 = -qJD(5) * t1307 - t1483;
t1227 = qJDD(6) - t1228;
t1399 = qJD(3) + qJD(5);
t1409 = cos(qJ(6));
t1284 = t1307 * t1405 - t1409 * t1399;
t1286 = t1307 * t1409 + t1399 * t1405;
t1236 = t1286 * t1284;
t1572 = t1227 - t1236;
t1576 = t1405 * t1572;
t1305 = -t1410 * t1356 + t1357 * t1406;
t1259 = t1307 * t1305;
t1398 = qJDD(3) + qJDD(5);
t1571 = -t1259 + t1398;
t1575 = t1406 * t1571;
t1574 = t1409 * t1572;
t1573 = t1410 * t1571;
t1401 = t1407 ^ 2;
t1414 = qJD(1) ^ 2;
t1567 = pkin(7) + pkin(1);
t1453 = (qJ(4) * t1401 + t1567) * t1414;
t1553 = qJD(4) * t1356;
t1345 = 0.2e1 * t1553;
t1408 = sin(qJ(1));
t1412 = cos(qJ(1));
t1376 = t1408 * g(1) - t1412 * g(2);
t1465 = qJDD(2) - t1376;
t1440 = -t1414 * qJ(2) + t1465;
t1419 = -qJDD(1) * t1567 + t1440;
t1418 = t1411 * t1419;
t1518 = t1411 * t1414;
t1559 = qJD(1) * qJD(3);
t1275 = t1418 - t1367 * qJ(4) + qJDD(3) * pkin(3) + (-pkin(3) * t1518 - qJ(4) * t1559 + g(3)) * t1407;
t1323 = t1411 * g(3) - t1407 * t1419;
t1449 = qJD(3) * pkin(3) - qJ(4) * t1557;
t1521 = t1401 * t1414;
t1276 = -pkin(3) * t1521 + t1366 * qJ(4) - qJD(3) * t1449 - t1323;
t1516 = t1403 * t1275 + t1404 * t1276;
t1200 = t1345 + t1516;
t1353 = t1356 ^ 2;
t1468 = qJD(3) * pkin(4) - pkin(8) * t1357;
t1167 = -t1353 * pkin(4) - pkin(8) * t1480 - qJD(3) * t1468 + t1200;
t1555 = qJD(3) * t1356;
t1291 = -t1319 + t1555;
t1552 = qJD(4) * t1357;
t1347 = -0.2e1 * t1552;
t1484 = -t1404 * t1275 + t1403 * t1276;
t1463 = t1347 - t1484;
t1417 = pkin(4) * t1569 + pkin(8) * t1291 + t1463;
t1099 = t1410 * t1167 + t1406 * t1417;
t1254 = pkin(5) * t1305 - pkin(9) * t1307;
t1568 = t1399 ^ 2;
t1076 = -pkin(5) * t1568 + pkin(9) * t1398 - t1254 * t1305 + t1099;
t1556 = qJD(2) * qJD(1);
t1396 = 0.2e1 * t1556;
t1377 = t1412 * g(1) + t1408 * g(2);
t1400 = qJDD(1) * qJ(2);
t1450 = t1377 - t1400;
t1420 = t1366 * pkin(3) - t1449 * t1557 - qJDD(4) + t1450;
t1415 = -pkin(4) * t1480 + t1353 * pkin(8) - t1357 * t1468 + t1420;
t1229 = -t1305 * qJD(5) + t1410 * t1319 - t1406 * t1480;
t1525 = t1399 * t1305;
t1447 = t1229 - t1525;
t1524 = t1399 * t1307;
t1101 = t1396 - t1447 * pkin(9) + (-t1228 + t1524) * pkin(5) - t1453 - t1415;
t1029 = t1076 * t1405 - t1409 * t1101;
t1030 = t1076 * t1409 + t1101 * t1405;
t983 = t1405 * t1029 + t1409 * t1030;
t1322 = t1407 * g(3) + t1418;
t1265 = t1411 * t1322 - t1407 * t1323;
t1513 = -0.2e1 * t1556;
t1570 = t1453 + t1513;
t1282 = t1284 ^ 2;
t1283 = t1286 ^ 2;
t1301 = qJD(6) + t1305;
t1300 = t1301 ^ 2;
t1303 = t1305 ^ 2;
t1304 = t1307 ^ 2;
t1354 = t1357 ^ 2;
t1566 = pkin(2) * t1265;
t1423 = t1450 + t1513;
t1337 = t1414 * t1567 + t1423;
t1565 = pkin(2) * t1337;
t1402 = t1411 ^ 2;
t1515 = t1401 + t1402;
t1369 = t1515 * qJDD(1);
t1564 = pkin(2) * t1369;
t1563 = pkin(5) * t1406;
t1562 = qJDD(1) * pkin(1);
t1098 = t1167 * t1406 - t1410 * t1417;
t1036 = -t1098 * t1410 + t1099 * t1406;
t1035 = pkin(4) * t1036;
t1037 = t1098 * t1406 + t1410 * t1099;
t1550 = t1036 * t1404;
t988 = t1037 * t1403 + t1550;
t1561 = pkin(3) * t988 + t1035;
t1075 = -t1398 * pkin(5) - pkin(9) * t1568 + t1254 * t1307 + t1098;
t1560 = -pkin(5) * t1075 + pkin(9) * t983;
t1554 = qJD(3) * t1357;
t1551 = t1036 * t1403;
t1512 = 0.2e1 * t1552;
t1199 = t1484 + t1512;
t1138 = -t1199 * t1404 + t1200 * t1403;
t1549 = t1138 * t1407;
t1548 = t1138 * t1411;
t1169 = t1227 + t1236;
t1547 = t1169 * t1405;
t1546 = t1169 * t1409;
t1201 = t1415 + t1570;
t1545 = t1201 * t1406;
t1544 = t1201 * t1410;
t1252 = t1259 + t1398;
t1543 = t1252 * t1406;
t1542 = t1252 * t1410;
t1277 = t1420 + t1570;
t1541 = t1277 * t1403;
t1540 = t1277 * t1404;
t1539 = t1301 * t1405;
t1538 = t1301 * t1409;
t1311 = qJDD(3) - t1317;
t1537 = t1311 * t1403;
t1536 = t1311 * t1404;
t1535 = t1356 * t1403;
t1534 = t1356 * t1404;
t1533 = t1357 * t1403;
t1532 = t1357 * t1404;
t1531 = t1369 * t1408;
t1530 = t1369 * t1412;
t1385 = t1407 * t1518;
t1374 = qJDD(3) + t1385;
t1529 = t1374 * t1407;
t1528 = t1374 * t1411;
t1375 = qJDD(3) - t1385;
t1527 = t1375 * t1407;
t1526 = t1375 * t1411;
t1523 = t1399 * t1406;
t1522 = t1399 * t1410;
t1072 = t1405 * t1075;
t1519 = t1407 * t1337;
t1073 = t1409 * t1075;
t1324 = t1411 * t1337;
t1194 = -t1229 - t1525;
t1426 = (-qJD(5) + t1399) * t1307 - t1483;
t1128 = t1194 * t1410 + t1406 * t1426;
t1130 = -t1194 * t1406 + t1410 * t1426;
t1057 = t1128 * t1404 + t1130 * t1403;
t1126 = pkin(4) * t1128;
t1517 = pkin(3) * t1057 + t1126;
t967 = -t1075 * t1410 + t1406 * t983;
t1511 = pkin(4) * t967 + t1560;
t1510 = -pkin(5) * t1410 - pkin(4);
t1509 = t1406 * t1236;
t1508 = t1410 * t1236;
t1507 = t1408 * t1259;
t1506 = t1412 * t1259;
t1505 = t1408 * t1317;
t1504 = t1412 * t1317;
t1212 = -t1283 - t1300;
t1120 = -t1212 * t1405 - t1546;
t1457 = -t1409 * t1229 - t1405 * t1398;
t1159 = (qJD(6) + t1301) * t1284 + t1457;
t1501 = pkin(5) * t1159 + pkin(9) * t1120 + t1072;
t1203 = -t1300 - t1282;
t1113 = t1203 * t1409 - t1576;
t1245 = t1301 * t1286;
t1456 = -t1405 * t1229 + t1409 * t1398;
t1425 = qJD(6) * t1286 - t1456;
t1155 = -t1245 - t1425;
t1500 = pkin(5) * t1155 + pkin(9) * t1113 - t1073;
t1293 = -t1304 - t1568;
t1206 = t1293 * t1410 - t1543;
t1499 = pkin(4) * t1206 - t1099;
t1413 = qJD(3) ^ 2;
t1342 = -t1354 - t1413;
t1271 = t1342 * t1404 - t1537;
t1498 = pkin(3) * t1271 - t1516;
t1139 = t1199 * t1403 + t1404 * t1200;
t1070 = t1139 * t1407 + t1548;
t1137 = pkin(3) * t1138;
t1497 = -pkin(2) * t1070 - t1137;
t1443 = -t1480 + t1554;
t1232 = t1291 * t1404 + t1403 * t1443;
t1234 = -t1291 * t1403 + t1404 * t1443;
t1164 = t1232 * t1411 + t1234 * t1407;
t1230 = pkin(3) * t1232;
t1496 = -pkin(2) * t1164 - t1230;
t968 = t1075 * t1406 + t1410 * t983;
t982 = -t1029 * t1409 + t1030 * t1405;
t932 = pkin(8) * t968 + (-pkin(9) * t1406 + t1510) * t982;
t941 = -pkin(8) * t967 + (-pkin(9) * t1410 + t1563) * t982;
t944 = -t1403 * t967 + t1404 * t968;
t914 = -pkin(3) * t982 + qJ(4) * t944 + t1403 * t941 + t1404 * t932;
t943 = t1403 * t968 + t1404 * t967;
t916 = -qJ(4) * t943 - t1403 * t932 + t1404 * t941;
t1495 = -t1407 * t914 + t1411 * t916;
t1156 = (-qJD(6) + t1301) * t1286 + t1456;
t1179 = -qJD(6) * t1284 - t1457;
t1244 = t1301 * t1284;
t1158 = t1179 + t1244;
t1091 = t1156 * t1405 - t1158 * t1409;
t1093 = t1156 * t1409 + t1158 * t1405;
t1197 = t1282 + t1283;
t1048 = t1093 * t1410 - t1197 * t1406;
t969 = -pkin(9) * t1091 - t982;
t945 = pkin(8) * t1048 + t1091 * t1510 + t1406 * t969;
t1047 = t1093 * t1406 + t1197 * t1410;
t949 = -pkin(8) * t1047 + t1091 * t1563 + t1410 * t969;
t999 = -t1047 * t1403 + t1048 * t1404;
t926 = -pkin(3) * t1091 + qJ(4) * t999 + t1403 * t949 + t1404 * t945;
t998 = t1047 * t1404 + t1048 * t1403;
t929 = -qJ(4) * t998 - t1403 * t945 + t1404 * t949;
t1494 = -t1407 * t926 + t1411 * t929;
t1061 = t1113 * t1406 + t1155 * t1410;
t1062 = t1113 * t1410 - t1155 * t1406;
t1012 = -t1061 * t1403 + t1062 * t1404;
t1112 = t1203 * t1405 + t1574;
t1033 = -pkin(9) * t1112 + t1072;
t995 = -pkin(5) * t1112 + t1029;
t957 = -pkin(4) * t1112 + pkin(8) * t1062 + t1033 * t1406 + t1410 * t995;
t962 = -pkin(8) * t1061 + t1033 * t1410 - t1406 * t995;
t935 = -pkin(3) * t1112 + qJ(4) * t1012 + t1403 * t962 + t1404 * t957;
t1011 = t1061 * t1404 + t1062 * t1403;
t938 = -qJ(4) * t1011 - t1403 * t957 + t1404 * t962;
t1493 = -t1407 * t935 + t1411 * t938;
t1065 = t1120 * t1406 + t1159 * t1410;
t1066 = t1120 * t1410 - t1159 * t1406;
t1015 = -t1065 * t1403 + t1066 * t1404;
t1119 = t1212 * t1409 - t1547;
t1034 = -pkin(9) * t1119 + t1073;
t996 = -pkin(5) * t1119 + t1030;
t959 = -pkin(4) * t1119 + pkin(8) * t1066 + t1034 * t1406 + t1410 * t996;
t963 = -pkin(8) * t1065 + t1034 * t1410 - t1406 * t996;
t936 = -pkin(3) * t1119 + qJ(4) * t1015 + t1403 * t963 + t1404 * t959;
t1014 = t1065 * t1404 + t1066 * t1403;
t940 = -qJ(4) * t1014 - t1403 * t959 + t1404 * t963;
t1492 = -t1407 * t936 + t1411 * t940;
t1026 = pkin(4) * t1201 + pkin(8) * t1037;
t989 = t1037 * t1404 - t1551;
t948 = pkin(3) * t1201 - pkin(8) * t1551 + qJ(4) * t989 + t1026 * t1404;
t951 = -pkin(8) * t1550 - qJ(4) * t988 - t1026 * t1403;
t1491 = -t1407 * t948 + t1411 * t951;
t1226 = -t1303 - t1304;
t1002 = -pkin(4) * t1226 + pkin(8) * t1130 + t1037;
t1018 = -pkin(8) * t1128 - t1036;
t1059 = -t1128 * t1403 + t1130 * t1404;
t958 = -pkin(3) * t1226 + qJ(4) * t1059 + t1002 * t1404 + t1018 * t1403;
t961 = -qJ(4) * t1057 - t1002 * t1403 + t1018 * t1404;
t1490 = -t1407 * t958 + t1411 * t961;
t1250 = -t1568 - t1303;
t1181 = t1250 * t1410 - t1575;
t1190 = (qJD(5) + t1399) * t1307 + t1483;
t1094 = -pkin(4) * t1190 + pkin(8) * t1181 + t1544;
t1180 = t1250 * t1406 + t1573;
t1117 = -t1180 * t1403 + t1181 * t1404;
t1125 = -pkin(8) * t1180 - t1545;
t1003 = -pkin(3) * t1190 + qJ(4) * t1117 + t1094 * t1404 + t1125 * t1403;
t1116 = t1180 * t1404 + t1181 * t1403;
t1025 = -qJ(4) * t1116 - t1094 * t1403 + t1125 * t1404;
t1489 = -t1407 * t1003 + t1411 * t1025;
t1207 = -t1293 * t1406 - t1542;
t1102 = -pkin(4) * t1447 + pkin(8) * t1207 - t1545;
t1140 = -pkin(8) * t1206 - t1544;
t1143 = -t1206 * t1403 + t1207 * t1404;
t1019 = -pkin(3) * t1447 + qJ(4) * t1143 + t1102 * t1404 + t1140 * t1403;
t1142 = t1206 * t1404 + t1207 * t1403;
t1032 = -qJ(4) * t1142 - t1102 * t1403 + t1140 * t1404;
t1488 = -t1407 * t1019 + t1411 * t1032;
t1287 = -t1353 - t1354;
t1100 = -pkin(3) * t1287 + qJ(4) * t1234 + t1139;
t1104 = -qJ(4) * t1232 - t1138;
t1487 = -t1407 * t1100 + t1411 * t1104;
t1309 = -t1413 - t1353;
t1261 = t1309 * t1404 - t1578;
t1288 = t1480 + t1554;
t1173 = -pkin(3) * t1288 + qJ(4) * t1261 + t1540;
t1260 = t1309 * t1403 + t1577;
t1204 = -qJ(4) * t1260 - t1541;
t1486 = -t1407 * t1173 + t1411 * t1204;
t1274 = -t1342 * t1403 - t1536;
t1290 = t1319 + t1555;
t1177 = -pkin(3) * t1290 + qJ(4) * t1274 - t1541;
t1221 = -qJ(4) * t1271 - t1540;
t1485 = -t1407 * t1177 + t1411 * t1221;
t1344 = t1414 * pkin(1) + t1423;
t1348 = -t1440 + t1562;
t1481 = -t1412 * t1344 - t1348 * t1408;
t1479 = -t1376 * t1408 - t1412 * t1377;
t1478 = pkin(3) * t943 + t1511;
t952 = t1407 * t989 + t1411 * t988;
t1476 = -pkin(2) * t952 - t1561;
t1475 = t1408 * t1385;
t1474 = t1412 * t1385;
t1473 = pkin(5) * t1197 + pkin(9) * t1093 + t983;
t1472 = pkin(4) * t1065 + t1501;
t1471 = pkin(4) * t1061 + t1500;
t1470 = pkin(3) * t1142 + t1499;
t1007 = t1057 * t1411 + t1059 * t1407;
t1469 = -pkin(2) * t1007 - t1517;
t1370 = qJDD(1) * t1412 - t1408 * t1414;
t1467 = pkin(6) * t1370 + g(3) * t1408;
t1371 = qJDD(1) * t1408 + t1412 * t1414;
t1466 = -pkin(6) * t1371 + g(3) * t1412;
t1464 = pkin(4) * t1180 - t1098;
t1365 = 0.2e1 * t1502 + t1514;
t1462 = pkin(2) * t1365 - t1324;
t1368 = t1392 - 0.2e1 * t1503;
t1461 = pkin(2) * t1368 + t1519;
t1460 = pkin(4) * t1047 + t1473;
t1459 = pkin(3) * t1014 + t1472;
t1458 = pkin(3) * t1011 + t1471;
t1266 = -t1322 * t1407 - t1323 * t1411;
t1455 = t1344 * t1408 - t1348 * t1412;
t1454 = t1376 * t1412 - t1377 * t1408;
t1215 = t1271 * t1411 + t1274 * t1407;
t1452 = -pkin(2) * t1215 - t1498;
t1395 = t1402 * t1414;
t1384 = -t1395 - t1413;
t1329 = t1384 * t1411 - t1529;
t1451 = -pkin(2) * t1329 - t1323;
t1448 = pkin(3) * t1116 + t1464;
t923 = t1407 * t944 + t1411 * t943;
t1446 = -pkin(2) * t923 - t1478;
t1445 = pkin(3) * t998 + t1460;
t1114 = pkin(3) * t1277 + qJ(4) * t1139;
t1444 = -qJ(4) * t1548 - t1407 * t1114;
t1081 = t1142 * t1411 + t1143 * t1407;
t1442 = -pkin(2) * t1081 - t1470;
t1182 = t1260 * t1411 + t1261 * t1407;
t1258 = pkin(3) * t1260;
t1441 = -pkin(2) * t1182 - t1258 + t1484;
t1439 = pkin(2) * t982 - t1407 * t916 - t1411 * t914;
t1438 = pkin(2) * t1091 - t1407 * t929 - t1411 * t926;
t1437 = pkin(2) * t1112 - t1407 * t938 - t1411 * t935;
t1436 = pkin(2) * t1119 - t1407 * t940 - t1411 * t936;
t1435 = -pkin(2) * t1201 - t1407 * t951 - t1411 * t948;
t1434 = pkin(2) * t1226 - t1407 * t961 - t1411 * t958;
t972 = t1011 * t1411 + t1012 * t1407;
t1433 = -pkin(2) * t972 - t1458;
t974 = t1014 * t1411 + t1015 * t1407;
t1432 = -pkin(2) * t974 - t1459;
t1431 = pkin(2) * t1190 - t1411 * t1003 - t1407 * t1025;
t1430 = pkin(2) * t1447 - t1411 * t1019 - t1407 * t1032;
t1429 = pkin(2) * t1287 - t1411 * t1100 - t1407 * t1104;
t1428 = pkin(2) * t1288 - t1411 * t1173 - t1407 * t1204;
t1427 = pkin(2) * t1290 - t1411 * t1177 - t1407 * t1221;
t1044 = t1116 * t1411 + t1117 * t1407;
t1424 = -pkin(2) * t1044 - t1448;
t964 = t1407 * t999 + t1411 * t998;
t1422 = -pkin(2) * t964 - t1445;
t1421 = -pkin(2) * t1277 + qJ(4) * t1549 - t1411 * t1114;
t1382 = -t1413 - t1521;
t1327 = t1382 * t1407 + t1526;
t1416 = -pkin(2) * t1327 - t1322;
t1393 = t1412 * qJDD(3);
t1391 = t1408 * qJDD(3);
t1383 = -t1395 + t1413;
t1381 = -t1413 + t1521;
t1373 = t1395 + t1521;
t1372 = -t1395 + t1521;
t1363 = t1515 * t1559;
t1362 = t1465 - 0.2e1 * t1562;
t1355 = -t1377 + t1396 + 0.2e1 * t1400;
t1346 = -0.2e1 * t1553;
t1341 = -t1354 + t1413;
t1340 = t1353 - t1413;
t1339 = t1367 * t1407 + t1402 * t1559;
t1338 = t1366 * t1411 + t1401 * t1559;
t1334 = -t1384 * t1407 - t1528;
t1333 = -t1383 * t1407 + t1526;
t1332 = (t1367 - t1503) * t1411;
t1331 = t1382 * t1411 - t1527;
t1330 = t1381 * t1411 - t1529;
t1328 = t1383 * t1411 + t1527;
t1326 = t1381 * t1407 + t1528;
t1325 = (-t1366 + t1502) * t1407;
t1321 = -t1365 * t1411 - t1368 * t1407;
t1320 = -t1365 * t1407 + t1368 * t1411;
t1316 = t1354 - t1353;
t1302 = pkin(1) * t1348 - qJ(2) * t1344;
t1298 = (t1533 + t1534) * qJD(3);
t1297 = (-t1532 + t1535) * qJD(3);
t1295 = -t1304 + t1568;
t1294 = t1303 - t1568;
t1281 = -qJD(3) * t1533 + t1319 * t1404;
t1280 = qJD(3) * t1532 + t1319 * t1403;
t1279 = -qJD(3) * t1534 + t1403 * t1480;
t1278 = -qJD(3) * t1535 - t1404 * t1480;
t1273 = -t1341 * t1403 + t1577;
t1272 = t1340 * t1404 - t1537;
t1270 = t1341 * t1404 + t1578;
t1269 = t1340 * t1403 + t1536;
t1262 = pkin(2) * t1373 + t1266;
t1257 = -qJ(2) * t1334 - t1451;
t1256 = -qJ(2) * t1331 - t1416;
t1255 = t1304 - t1303;
t1249 = -t1331 * t1567 + t1462;
t1248 = -t1334 * t1567 + t1461;
t1247 = qJ(2) * t1368 - t1329 * t1567 - t1324;
t1246 = qJ(2) * t1365 - t1327 * t1567 - t1519;
t1243 = -t1283 + t1300;
t1242 = t1282 - t1300;
t1241 = -t1297 * t1407 + t1298 * t1411;
t1240 = t1297 * t1411 + t1298 * t1407;
t1239 = (-t1305 * t1410 + t1307 * t1406) * t1399;
t1238 = (-t1305 * t1406 - t1307 * t1410) * t1399;
t1237 = -qJ(2) * t1373 + t1369 * t1567 - t1265;
t1235 = t1283 - t1282;
t1233 = -t1288 * t1404 - t1290 * t1403;
t1231 = -t1288 * t1403 + t1290 * t1404;
t1225 = -t1280 * t1407 + t1281 * t1411;
t1224 = -t1278 * t1407 + t1279 * t1411;
t1223 = t1280 * t1411 + t1281 * t1407;
t1222 = t1278 * t1411 + t1279 * t1407;
t1219 = -qJ(2) * t1266 + t1566;
t1218 = -t1271 * t1407 + t1274 * t1411;
t1217 = -t1270 * t1407 + t1273 * t1411;
t1216 = -t1269 * t1407 + t1272 * t1411;
t1214 = t1270 * t1411 + t1273 * t1407;
t1213 = t1269 * t1411 + t1272 * t1407;
t1211 = t1294 * t1410 - t1543;
t1210 = -t1295 * t1406 + t1573;
t1209 = t1294 * t1406 + t1542;
t1208 = t1295 * t1410 + t1575;
t1189 = -t1266 * t1567 - t1565;
t1188 = -qJ(2) * t1337 - t1265 * t1567;
t1187 = t1229 * t1410 - t1307 * t1523;
t1186 = t1229 * t1406 + t1307 * t1522;
t1185 = -t1228 * t1406 + t1305 * t1522;
t1184 = t1228 * t1410 + t1305 * t1523;
t1183 = -t1260 * t1407 + t1261 * t1411;
t1175 = (-t1284 * t1409 + t1286 * t1405) * t1301;
t1174 = (-t1284 * t1405 - t1286 * t1409) * t1301;
t1172 = -t1238 * t1403 + t1239 * t1404;
t1171 = t1238 * t1404 + t1239 * t1403;
t1166 = -t1232 * t1407 + t1234 * t1411;
t1165 = -t1231 * t1407 + t1233 * t1411;
t1163 = t1231 * t1411 + t1233 * t1407;
t1157 = t1179 - t1244;
t1154 = -t1245 + t1425;
t1151 = t1179 * t1409 - t1286 * t1539;
t1150 = t1179 * t1405 + t1286 * t1538;
t1149 = t1284 * t1538 + t1405 * t1425;
t1148 = -t1284 * t1539 + t1409 * t1425;
t1147 = -t1209 * t1403 + t1211 * t1404;
t1146 = -t1208 * t1403 + t1210 * t1404;
t1145 = t1209 * t1404 + t1211 * t1403;
t1144 = t1208 * t1404 + t1210 * t1403;
t1136 = t1175 * t1410 + t1227 * t1406;
t1135 = t1175 * t1406 - t1227 * t1410;
t1134 = t1242 * t1409 - t1547;
t1133 = -t1243 * t1405 + t1574;
t1132 = t1242 * t1405 + t1546;
t1131 = t1243 * t1409 + t1576;
t1129 = -t1190 * t1410 - t1406 * t1447;
t1127 = -t1190 * t1406 + t1410 * t1447;
t1124 = -t1186 * t1403 + t1187 * t1404;
t1123 = -t1184 * t1403 + t1185 * t1404;
t1122 = t1186 * t1404 + t1187 * t1403;
t1121 = t1184 * t1404 + t1185 * t1403;
t1110 = t1151 * t1410 + t1509;
t1109 = t1149 * t1410 - t1509;
t1108 = t1151 * t1406 - t1508;
t1107 = t1149 * t1406 + t1508;
t1106 = -t1171 * t1407 + t1172 * t1411;
t1105 = t1171 * t1411 + t1172 * t1407;
t1095 = -qJ(2) * t1218 + t1346 - t1452;
t1092 = t1155 * t1409 - t1157 * t1405;
t1090 = t1155 * t1405 + t1157 * t1409;
t1088 = -qJ(2) * t1166 - t1496;
t1087 = -qJ(2) * t1183 + t1347 - t1441;
t1086 = -t1145 * t1407 + t1147 * t1411;
t1085 = -t1144 * t1407 + t1146 * t1411;
t1084 = t1145 * t1411 + t1147 * t1407;
t1083 = t1144 * t1411 + t1146 * t1407;
t1082 = -t1142 * t1407 + t1143 * t1411;
t1080 = t1134 * t1410 - t1154 * t1406;
t1079 = t1133 * t1410 + t1158 * t1406;
t1078 = t1134 * t1406 + t1154 * t1410;
t1077 = t1133 * t1406 - t1158 * t1410;
t1071 = t1139 * t1411 - t1549;
t1069 = -t1135 * t1403 + t1136 * t1404;
t1068 = t1135 * t1404 + t1136 * t1403;
t1067 = -t1218 * t1567 + t1427;
t1064 = qJ(2) * t1290 - t1215 * t1567 + t1485;
t1058 = -t1127 * t1403 + t1129 * t1404;
t1056 = t1127 * t1404 + t1129 * t1403;
t1054 = t1092 * t1410 + t1235 * t1406;
t1053 = t1092 * t1406 - t1235 * t1410;
t1052 = -t1122 * t1407 + t1124 * t1411;
t1051 = -t1121 * t1407 + t1123 * t1411;
t1050 = t1122 * t1411 + t1124 * t1407;
t1049 = t1121 * t1411 + t1123 * t1407;
t1045 = -t1116 * t1407 + t1117 * t1411;
t1043 = -t1183 * t1567 + t1428;
t1042 = qJ(2) * t1288 - t1182 * t1567 + t1486;
t1041 = -t1108 * t1403 + t1110 * t1404;
t1040 = -t1107 * t1403 + t1109 * t1404;
t1039 = t1108 * t1404 + t1110 * t1403;
t1038 = t1107 * t1404 + t1109 * t1403;
t1023 = -t1078 * t1403 + t1080 * t1404;
t1022 = -t1077 * t1403 + t1079 * t1404;
t1021 = t1078 * t1404 + t1080 * t1403;
t1020 = t1077 * t1404 + t1079 * t1403;
t1017 = -t1068 * t1407 + t1069 * t1411;
t1016 = t1068 * t1411 + t1069 * t1407;
t1009 = -t1057 * t1407 + t1059 * t1411;
t1008 = -t1056 * t1407 + t1058 * t1411;
t1006 = t1056 * t1411 + t1058 * t1407;
t1005 = -t1053 * t1403 + t1054 * t1404;
t1004 = t1053 * t1404 + t1054 * t1403;
t1001 = -t1166 * t1567 + t1429;
t1000 = qJ(2) * t1287 - t1164 * t1567 + t1487;
t994 = -qJ(2) * t1071 - t1497;
t993 = -t1039 * t1407 + t1041 * t1411;
t992 = -t1038 * t1407 + t1040 * t1411;
t991 = t1039 * t1411 + t1041 * t1407;
t990 = t1038 * t1411 + t1040 * t1407;
t986 = -t1071 * t1567 + t1421;
t985 = -qJ(2) * t1277 - t1070 * t1567 + t1444;
t984 = -qJ(2) * t1082 - t1442;
t980 = -t1021 * t1407 + t1023 * t1411;
t979 = -t1020 * t1407 + t1022 * t1411;
t978 = t1021 * t1411 + t1023 * t1407;
t977 = t1020 * t1411 + t1022 * t1407;
t976 = -qJ(2) * t1045 - t1424;
t975 = -t1014 * t1407 + t1015 * t1411;
t973 = -t1011 * t1407 + t1012 * t1411;
t971 = -t1004 * t1407 + t1005 * t1411;
t970 = t1004 * t1411 + t1005 * t1407;
t965 = -t1407 * t998 + t1411 * t999;
t956 = -t1082 * t1567 + t1430;
t955 = qJ(2) * t1447 - t1081 * t1567 + t1488;
t954 = -qJ(2) * t1009 - t1469;
t953 = -t1407 * t988 + t1411 * t989;
t947 = -t1045 * t1567 + t1431;
t946 = qJ(2) * t1190 - t1044 * t1567 + t1489;
t934 = -qJ(2) * t975 - t1432;
t933 = -qJ(2) * t973 - t1433;
t931 = -t1009 * t1567 + t1434;
t930 = qJ(2) * t1226 - t1007 * t1567 + t1490;
t927 = -qJ(2) * t953 - t1476;
t925 = -qJ(2) * t965 - t1422;
t924 = -t1407 * t943 + t1411 * t944;
t922 = -t1567 * t953 + t1435;
t921 = -qJ(2) * t1201 - t1567 * t952 + t1491;
t920 = -t1567 * t975 + t1436;
t919 = qJ(2) * t1119 - t1567 * t974 + t1492;
t918 = -t1567 * t973 + t1437;
t917 = qJ(2) * t1112 - t1567 * t972 + t1493;
t913 = -t1567 * t965 + t1438;
t912 = qJ(2) * t1091 - t1567 * t964 + t1494;
t911 = -qJ(2) * t924 - t1446;
t910 = -t1567 * t924 + t1439;
t909 = qJ(2) * t982 - t1567 * t923 + t1495;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1370, 0, -t1371, 0, -t1467, -t1466, -t1454, -pkin(6) * t1454, 0, -t1370, t1371, 0, 0, 0, t1455, t1467, t1466, pkin(6) * t1455 + (-pkin(1) * t1408 + qJ(2) * t1412) * g(3), t1339 * t1408 + t1474, t1320 * t1408 - t1372 * t1412, t1328 * t1408 + t1392 * t1412, t1338 * t1408 - t1474, t1326 * t1408 - t1412 * t1514, -t1363 * t1408 + t1393, t1412 * t1256 - t1408 * t1249 - pkin(6) * (-t1327 * t1412 + t1365 * t1408), t1412 * t1257 - t1408 * t1248 - pkin(6) * (-t1329 * t1412 + t1368 * t1408), -pkin(2) * t1530 + t1408 * t1262 - pkin(6) * (-t1373 * t1408 + t1530), t1412 * t1219 - t1408 * t1189 - pkin(6) * (-t1265 * t1412 - t1337 * t1408), t1223 * t1408 - t1504, t1163 * t1408 + t1316 * t1412, t1214 * t1408 - t1291 * t1412, t1222 * t1408 + t1504, t1213 * t1408 + t1412 * t1443, t1240 * t1408 + t1393, t1412 * t1087 - t1408 * t1043 - pkin(6) * (-t1182 * t1412 + t1288 * t1408), t1412 * t1095 - t1408 * t1067 - pkin(6) * (-t1215 * t1412 + t1290 * t1408), t1412 * t1088 - t1408 * t1001 - pkin(6) * (-t1164 * t1412 + t1287 * t1408), t1412 * t994 - t1408 * t986 - pkin(6) * (-t1070 * t1412 - t1277 * t1408), t1050 * t1408 + t1506, t1006 * t1408 + t1255 * t1412, t1083 * t1408 - t1194 * t1412, t1049 * t1408 - t1506, t1084 * t1408 + t1412 * t1426, t1105 * t1408 + t1398 * t1412, t1412 * t976 - t1408 * t947 - pkin(6) * (-t1044 * t1412 + t1190 * t1408), t1412 * t984 - t1408 * t956 - pkin(6) * (-t1081 * t1412 + t1408 * t1447), t1412 * t954 - t1408 * t931 - pkin(6) * (-t1007 * t1412 + t1226 * t1408), t1412 * t927 - t1408 * t922 - pkin(6) * (-t1201 * t1408 - t1412 * t952), t1150 * t1412 + t1408 * t991, t1090 * t1412 + t1408 * t970, t1131 * t1412 + t1408 * t977, -t1148 * t1412 + t1408 * t990, t1132 * t1412 + t1408 * t978, t1016 * t1408 + t1174 * t1412, t1412 * t933 - t1408 * t918 - pkin(6) * (t1112 * t1408 - t1412 * t972), t1412 * t934 - t1408 * t920 - pkin(6) * (t1119 * t1408 - t1412 * t974), t1412 * t925 - t1408 * t913 - pkin(6) * (t1091 * t1408 - t1412 * t964), t1412 * t911 - t1408 * t910 - pkin(6) * (t1408 * t982 - t1412 * t923); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1371, 0, t1370, 0, t1466, -t1467, t1479, pkin(6) * t1479, 0, -t1371, -t1370, 0, 0, 0, t1481, -t1466, t1467, pkin(6) * t1481 + (pkin(1) * t1412 + qJ(2) * t1408) * g(3), -t1339 * t1412 + t1475, -t1320 * t1412 - t1372 * t1408, -t1328 * t1412 + t1392 * t1408, -t1338 * t1412 - t1475, -t1326 * t1412 - t1408 * t1514, t1363 * t1412 + t1391, t1408 * t1256 + t1412 * t1249 + pkin(6) * (t1327 * t1408 + t1365 * t1412), t1408 * t1257 + t1412 * t1248 + pkin(6) * (t1329 * t1408 + t1368 * t1412), -pkin(2) * t1531 - t1412 * t1262 + pkin(6) * (-t1373 * t1412 - t1531), t1408 * t1219 + t1412 * t1189 + pkin(6) * (t1265 * t1408 - t1337 * t1412), -t1223 * t1412 - t1505, -t1163 * t1412 + t1316 * t1408, -t1214 * t1412 - t1291 * t1408, -t1222 * t1412 + t1505, -t1213 * t1412 + t1408 * t1443, -t1240 * t1412 + t1391, t1408 * t1087 + t1412 * t1043 + pkin(6) * (t1182 * t1408 + t1288 * t1412), t1408 * t1095 + t1412 * t1067 + pkin(6) * (t1215 * t1408 + t1290 * t1412), t1408 * t1088 + t1412 * t1001 + pkin(6) * (t1164 * t1408 + t1287 * t1412), t1408 * t994 + t1412 * t986 + pkin(6) * (t1070 * t1408 - t1277 * t1412), -t1050 * t1412 + t1507, -t1006 * t1412 + t1255 * t1408, -t1083 * t1412 - t1194 * t1408, -t1049 * t1412 - t1507, -t1084 * t1412 + t1408 * t1426, -t1105 * t1412 + t1398 * t1408, t1408 * t976 + t1412 * t947 + pkin(6) * (t1044 * t1408 + t1190 * t1412), t1408 * t984 + t1412 * t956 + pkin(6) * (t1081 * t1408 + t1412 * t1447), t1408 * t954 + t1412 * t931 + pkin(6) * (t1007 * t1408 + t1226 * t1412), t1408 * t927 + t1412 * t922 + pkin(6) * (-t1201 * t1412 + t1408 * t952), t1150 * t1408 - t1412 * t991, t1090 * t1408 - t1412 * t970, t1131 * t1408 - t1412 * t977, -t1148 * t1408 - t1412 * t990, t1132 * t1408 - t1412 * t978, -t1016 * t1412 + t1174 * t1408, t1408 * t933 + t1412 * t918 + pkin(6) * (t1112 * t1412 + t1408 * t972), t1408 * t934 + t1412 * t920 + pkin(6) * (t1119 * t1412 + t1408 * t974), t1408 * t925 + t1412 * t913 + pkin(6) * (t1091 * t1412 + t1408 * t964), t1408 * t911 + t1412 * t910 + pkin(6) * (t1408 * t923 + t1412 * t982); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1376, t1377, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1362, t1355, t1302, t1332, t1321, t1333, t1325, t1330, 0, t1246, t1247, t1237, t1188, t1225, t1165, t1217, t1224, t1216, t1241, t1042, t1064, t1000, t985, t1052, t1008, t1085, t1051, t1086, t1106, t946, t955, t930, t921, t993, t971, t979, t992, t980, t1017, t917, t919, t912, t909; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1414, 0, 0, -g(3), -t1376, 0, 0, -qJDD(1), t1414, 0, 0, 0, -t1348, 0, g(3), qJ(2) * g(3), t1385, -t1372, t1392, -t1385, -t1514, qJDD(3), t1256, t1257, -t1564, t1219, -t1317, t1316, -t1291, t1317, t1443, qJDD(3), t1087, t1095, t1088, t994, t1259, t1255, -t1194, -t1259, t1426, t1398, t976, t984, t954, t927, t1150, t1090, t1131, -t1148, t1132, t1174, t933, t934, t925, t911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, 0, qJDD(1), 0, g(3), 0, -t1377, 0, 0, -t1414, -qJDD(1), 0, 0, 0, -t1344, -g(3), 0, pkin(1) * g(3), -t1339, -t1320, -t1328, -t1338, -t1326, t1363, t1249, t1248, -t1262, t1189, -t1223, -t1163, -t1214, -t1222, -t1213, -t1240, t1043, t1067, t1001, t986, -t1050, -t1006, -t1083, -t1049, -t1084, -t1105, t947, t956, t931, t922, -t991, -t970, -t977, -t990, -t978, -t1016, t918, t920, t913, t910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1376, t1377, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1362, t1355, t1302, t1332, t1321, t1333, t1325, t1330, 0, t1246, t1247, t1237, t1188, t1225, t1165, t1217, t1224, t1216, t1241, t1042, t1064, t1000, t985, t1052, t1008, t1085, t1051, t1086, t1106, t946, t955, t930, t921, t993, t971, t979, t992, t980, t1017, t917, t919, t912, t909; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1348, -t1344, 0, t1332, t1321, t1333, t1325, t1330, 0, -pkin(7) * t1327 - t1519, -pkin(7) * t1329 - t1324, pkin(7) * t1369 - t1265, -pkin(7) * t1265, t1225, t1165, t1217, t1224, t1216, t1241, -pkin(7) * t1182 + t1486, -pkin(7) * t1215 + t1485, -pkin(7) * t1164 + t1487, -pkin(7) * t1070 + t1444, t1052, t1008, t1085, t1051, t1086, t1106, -pkin(7) * t1044 + t1489, -pkin(7) * t1081 + t1488, -pkin(7) * t1007 + t1490, -pkin(7) * t952 + t1491, t993, t971, t979, t992, t980, t1017, -pkin(7) * t972 + t1493, -pkin(7) * t974 + t1492, -pkin(7) * t964 + t1494, -pkin(7) * t923 + t1495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1414, 0, 0, 0, t1348, 0, -g(3), 0, -t1385, t1372, -t1392, t1385, t1514, -qJDD(3), t1416, t1451, t1564, -t1566, t1317, -t1316, t1291, -t1317, -t1443, -qJDD(3), t1441 + t1512, t1345 + t1452, t1496, t1497, -t1259, -t1255, t1194, t1259, -t1426, -t1398, t1424, t1442, t1469, t1476, -t1150, -t1090, -t1131, t1148, -t1132, -t1174, t1433, t1432, t1422, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, qJDD(1), 0, 0, 0, t1344, g(3), 0, 0, t1339, t1320, t1328, t1338, t1326, -t1363, pkin(7) * t1331 - t1462, pkin(7) * t1334 - t1461, t1262, pkin(7) * t1266 + t1565, t1223, t1163, t1214, t1222, t1213, t1240, pkin(7) * t1183 - t1428, pkin(7) * t1218 - t1427, pkin(7) * t1166 - t1429, pkin(7) * t1071 - t1421, t1050, t1006, t1083, t1049, t1084, t1105, pkin(7) * t1045 - t1431, pkin(7) * t1082 - t1430, pkin(7) * t1009 - t1434, pkin(7) * t953 - t1435, t991, t970, t977, t990, t978, t1016, pkin(7) * t973 - t1437, pkin(7) * t975 - t1436, pkin(7) * t965 - t1438, pkin(7) * t924 - t1439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1367, -t1365, t1375, t1503, t1381, -t1503, 0, -t1337, -t1322, 0, t1281, t1233, t1273, t1279, t1272, t1298, t1204, t1221, t1104, -qJ(4) * t1138, t1124, t1058, t1146, t1123, t1147, t1172, t1025, t1032, t961, t951, t1041, t1005, t1022, t1040, t1023, t1069, t938, t940, t929, t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1502, t1368, t1383, t1366, t1374, -t1502, t1337, 0, -t1323, 0, t1280, t1231, t1270, t1278, t1269, t1297, t1173, t1177, t1100, t1114, t1122, t1056, t1144, t1121, t1145, t1171, t1003, t1019, t958, t948, t1039, t1004, t1020, t1038, t1021, t1068, t935, t936, t926, t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1385, -t1372, t1392, -t1385, -t1514, qJDD(3), t1322, t1323, 0, 0, -t1317, t1316, -t1291, t1317, t1443, qJDD(3), t1258 + t1463, t1346 + t1498, t1230, t1137, t1259, t1255, -t1194, -t1259, t1426, t1398, t1448, t1470, t1517, t1561, t1150, t1090, t1131, -t1148, t1132, t1174, t1458, t1459, t1445, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1319, -t1288, t1569, -t1555, t1340, t1555, 0, -t1277, t1199, 0, t1187, t1129, t1210, t1185, t1211, t1239, t1125, t1140, t1018, -pkin(8) * t1036, t1110, t1054, t1079, t1109, t1080, t1136, t962, t963, t949, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1554, t1290, t1341, -t1480, t1311, -t1554, t1277, 0, t1200, 0, t1186, t1127, t1208, t1184, t1209, t1238, t1094, t1102, t1002, t1026, t1108, t1053, t1077, t1107, t1078, t1135, t957, t959, t945, t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1317, t1316, -t1291, t1317, t1443, qJDD(3), -t1199, -t1200, 0, 0, t1259, t1255, -t1194, -t1259, t1426, t1398, t1464, t1499, t1126, t1035, t1150, t1090, t1131, -t1148, t1132, t1174, t1471, t1472, t1460, t1511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1229, -t1190, t1571, t1525, t1294, -t1525, 0, -t1201, t1098, 0, t1151, t1092, t1133, t1149, t1134, t1175, t1033, t1034, t969, -pkin(9) * t982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1447, t1295, t1228, t1252, -t1524, t1201, 0, t1099, 0, -t1236, -t1235, -t1158, t1236, t1154, -t1227, t995, t996, -pkin(5) * t1091, -pkin(5) * t982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1259, t1255, -t1194, -t1259, t1426, t1398, -t1098, -t1099, 0, 0, t1150, t1090, t1131, -t1148, t1132, t1174, t1500, t1501, t1473, t1560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1179, t1155, t1572, t1244, t1242, -t1244, 0, t1075, t1029, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1245, t1157, t1243, -t1425, t1169, -t1245, -t1075, 0, t1030, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1236, t1235, t1158, -t1236, -t1154, t1227, -t1029, -t1030, 0, 0;];
m_new_reg  = t1;
