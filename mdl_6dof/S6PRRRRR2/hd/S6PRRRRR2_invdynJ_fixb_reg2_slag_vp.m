% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRR2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR2_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:45:31
% EndTime: 2019-03-09 00:45:58
% DurationCPUTime: 16.05s
% Computational Cost: add. (17981->771), mult. (40542->1033), div. (0->0), fcn. (31870->18), ass. (0->362)
t319 = sin(qJ(2));
t313 = sin(pkin(6));
t442 = qJD(1) * t313;
t408 = t319 * t442;
t318 = sin(qJ(3));
t437 = qJD(3) * t318;
t347 = pkin(3) * t437 - t408;
t307 = qJD(3) + qJD(4);
t322 = cos(qJ(3));
t522 = cos(qJ(4));
t399 = t522 * qJD(3);
t379 = t322 * t399;
t398 = t522 * qJD(4);
t317 = sin(qJ(4));
t459 = t317 * t318;
t196 = t307 * t459 - t322 * t398 - t379;
t458 = t317 * t322;
t257 = t318 * t522 + t458;
t197 = t307 * t257;
t552 = pkin(4) * t197 + pkin(10) * t196 + t347;
t525 = pkin(9) + pkin(8);
t411 = qJD(3) * t525;
t260 = t318 * t411;
t409 = t522 * t322;
t355 = t409 - t459;
t323 = cos(qJ(2));
t407 = t323 * t442;
t272 = t525 * t318;
t274 = t525 * t322;
t531 = -t522 * t272 - t317 * t274;
t453 = qJD(4) * t531 - t522 * t260 - t355 * t407 - t411 * t458;
t321 = cos(qJ(5));
t380 = pkin(3) * t398;
t264 = qJD(2) * pkin(8) + t408;
t386 = pkin(9) * qJD(2) + t264;
t314 = cos(pkin(6));
t441 = qJD(1) * t314;
t406 = t318 * t441;
t204 = t322 * t386 + t406;
t190 = t317 * t204;
t283 = t322 * t441;
t203 = -t318 * t386 + t283;
t117 = t203 * t522 - t190;
t439 = qJD(2) * t318;
t403 = t317 * t439;
t248 = -qJD(2) * t409 + t403;
t250 = t257 * qJD(2);
t180 = pkin(4) * t250 + pkin(10) * t248;
t421 = pkin(3) * t439;
t153 = t180 + t421;
t316 = sin(qJ(5));
t74 = t321 * t117 + t316 * t153;
t551 = t321 * t380 - t74;
t73 = -t117 * t316 + t321 * t153;
t550 = -t316 * t380 - t73;
t430 = qJD(1) * qJD(2);
t396 = t323 * t430;
t497 = qJDD(2) * pkin(8);
t228 = t497 + (qJDD(1) * t319 + t396) * t313;
t428 = qJDD(1) * t314;
t282 = t322 * t428;
t101 = qJDD(3) * pkin(3) + t282 + (-pkin(9) * qJDD(2) - t228) * t318 - t204 * qJD(3);
t412 = qJD(3) * t283 + t322 * t228 + t318 * t428;
t132 = -t264 * t437 + t412;
t429 = qJD(2) * qJD(3);
t395 = t318 * t429;
t425 = t322 * qJDD(2);
t107 = (-t395 + t425) * pkin(9) + t132;
t192 = qJD(3) * pkin(3) + t203;
t436 = qJD(4) * t317;
t382 = -t522 * t101 + t317 * t107 + t192 * t436 + t204 * t398;
t305 = qJDD(3) + qJDD(4);
t515 = t305 * pkin(4);
t41 = t382 - t515;
t499 = cos(pkin(12));
t388 = t499 * t319;
t312 = sin(pkin(12));
t468 = t312 * t323;
t243 = t314 * t388 + t468;
t311 = qJ(3) + qJ(4);
t301 = sin(t311);
t303 = cos(t311);
t389 = t313 * t499;
t183 = -t243 * t301 - t303 * t389;
t387 = t499 * t323;
t469 = t312 * t319;
t245 = -t314 * t469 + t387;
t470 = t312 * t313;
t185 = -t245 * t301 + t303 * t470;
t467 = t313 * t319;
t232 = -t301 * t467 + t303 * t314;
t539 = g(1) * t185 + g(2) * t183 + g(3) * t232;
t344 = -t539 - t41;
t521 = pkin(3) * t317;
t296 = pkin(10) + t521;
t513 = -pkin(11) - t296;
t391 = qJD(5) * t513;
t482 = t248 * t316;
t423 = pkin(11) * t482;
t549 = t316 * t391 - t423 + t551;
t481 = t248 * t321;
t375 = t250 * pkin(5) + pkin(11) * t481;
t548 = t321 * t391 - t375 + t550;
t299 = pkin(3) * t322 + pkin(2);
t181 = -pkin(4) * t355 - pkin(10) * t257 - t299;
t215 = -t317 * t272 + t274 * t522;
t433 = qJD(5) * t321;
t434 = qJD(5) * t316;
t502 = t181 * t433 - t215 * t434 + t316 * t552 + t453 * t321;
t547 = -t453 * t316 + t321 * t552;
t202 = t321 * t215;
t492 = t196 * t321;
t546 = pkin(11) * t492 + pkin(5) * t197 + (-t202 + (pkin(11) * t257 - t181) * t316) * qJD(5) + t547;
t493 = t196 * t316;
t354 = t257 * t433 - t493;
t545 = pkin(11) * t354 - t502;
t324 = -pkin(11) - pkin(10);
t410 = qJD(5) * t324;
t112 = t192 * t522 - t190;
t79 = t321 * t112 + t316 * t180;
t544 = t316 * t410 - t423 - t79;
t78 = -t112 * t316 + t321 * t180;
t543 = t321 * t410 - t375 - t78;
t207 = t250 * t316 - t321 * t307;
t209 = t250 * t321 + t307 * t316;
t315 = sin(qJ(6));
t320 = cos(qJ(6));
t124 = t320 * t207 + t209 * t315;
t364 = t207 * t315 - t320 * t209;
t495 = t124 * t364;
t191 = t522 * t204;
t116 = t203 * t317 + t191;
t532 = -pkin(3) * t436 + t116;
t462 = t315 * t321;
t256 = t316 * t320 + t462;
t424 = qJD(5) + qJD(6);
t195 = t424 * t256;
t542 = t256 * t248 + t195;
t431 = qJD(6) * t320;
t463 = t315 * t316;
t530 = t320 * t321 - t463;
t541 = t530 * t248 + t320 * t433 + t321 * t431 - t424 * t463;
t540 = (t434 + t482) * pkin(5);
t246 = t314 * t322 - t318 * t467;
t538 = -t124 ^ 2 + t364 ^ 2;
t241 = qJD(5) + t248;
t238 = qJD(6) + t241;
t390 = qJDD(2) * t522;
t143 = qJD(4) * t403 + t317 * t395 - t318 * t390 - t322 * (qJD(2) * (t399 + t398) + qJDD(2) * t317);
t413 = -t316 * t143 + t250 * t433 + t307 * t434;
t359 = t321 * t305 - t413;
t432 = qJD(6) * t315;
t89 = t321 * t143 + t250 * t434 - t316 * t305 - t307 * t433;
t36 = t207 * t431 + t209 * t432 - t315 * t359 + t320 * t89;
t537 = t124 * t238 - t36;
t184 = t243 * t303 - t301 * t389;
t186 = t245 * t303 + t301 * t470;
t233 = t301 * t314 + t303 * t467;
t242 = -t314 * t387 + t469;
t244 = t314 * t468 + t388;
t113 = t317 * t192 + t191;
t105 = t307 * pkin(10) + t113;
t239 = -qJD(2) * t299 - t407;
t142 = pkin(4) * t248 - pkin(10) * t250 + t239;
t381 = -t317 * t101 - t522 * t107 - t192 * t398 + t204 * t436;
t40 = pkin(10) * t305 - t381;
t426 = t318 * qJDD(2);
t369 = t317 * t426 - t322 * t390;
t144 = qJD(2) * t197 + t369;
t397 = t319 * t430;
t465 = t313 * t323;
t370 = -qJDD(1) * t465 + t313 * t397;
t182 = pkin(3) * t395 - qJDD(2) * t299 + t370;
t66 = pkin(4) * t144 + pkin(10) * t143 + t182;
t352 = t105 * t434 - t142 * t433 - t316 * t66 - t321 * t40;
t10 = pkin(11) * t359 - t352;
t70 = -t105 * t316 + t321 * t142;
t54 = -pkin(11) * t209 + t70;
t48 = pkin(5) * t241 + t54;
t71 = t105 * t321 + t142 * t316;
t55 = -pkin(11) * t207 + t71;
t13 = -qJD(5) * t71 - t316 * t40 + t321 * t66;
t139 = qJDD(5) + t144;
t9 = pkin(5) * t139 + pkin(11) * t89 + t13;
t3 = t320 * (qJD(6) * t48 + t10) + t315 * t9 - t55 * t432;
t310 = qJ(5) + qJ(6);
t300 = sin(t310);
t302 = cos(t310);
t104 = -t307 * pkin(4) - t112;
t82 = t207 * pkin(5) + t104;
t536 = t124 * t82 - g(1) * (-t186 * t302 - t244 * t300) - g(2) * (-t184 * t302 - t242 * t300) - g(3) * (-t233 * t302 + t300 * t465) - t3;
t507 = t320 * t55;
t21 = t315 * t48 + t507;
t4 = -qJD(6) * t21 - t10 * t315 + t320 * t9;
t535 = t364 * t82 - g(1) * (-t186 * t300 + t244 * t302) - g(2) * (-t184 * t300 + t242 * t302) - g(3) * (-t233 * t300 - t302 * t465) + t4;
t338 = qJD(6) * t364 + t315 * t89 + t320 * t359;
t534 = -t238 * t364 + t338;
t252 = t513 * t316;
t304 = t321 * pkin(11);
t476 = t296 * t321;
t253 = t304 + t476;
t177 = t252 * t315 + t253 * t320;
t512 = qJD(6) * t177 + t315 * t549 - t548 * t320;
t176 = t252 * t320 - t253 * t315;
t533 = qJD(6) * t176 + t548 * t315 + t320 * t549;
t503 = t540 - t532;
t372 = g(1) * t244 + g(2) * t242;
t343 = g(3) * t465 - t372;
t341 = t343 * t301;
t452 = qJD(4) * t215 - t257 * t407 - t317 * t260 + t379 * t525;
t115 = t316 * t181 + t202;
t11 = t352 * t321;
t529 = -t70 * t481 - t71 * t482 - t11;
t528 = -t296 * t434 + t551;
t326 = qJD(3) ^ 2;
t498 = qJDD(2) * pkin(2);
t227 = t370 - t498;
t360 = -t227 + t372;
t527 = -pkin(8) * t326 + t313 * (-g(3) * t323 + t397) + t360 + t498;
t114 = t321 * t181 - t215 * t316;
t478 = t257 * t321;
t83 = -pkin(5) * t355 - pkin(11) * t478 + t114;
t479 = t257 * t316;
t94 = -pkin(11) * t479 + t115;
t46 = -t315 * t94 + t320 * t83;
t524 = qJD(6) * t46 + t315 * t546 - t545 * t320;
t47 = t315 * t83 + t320 * t94;
t523 = -qJD(6) * t47 + t545 * t315 + t320 * t546;
t259 = t299 * t465;
t517 = g(3) * t259;
t516 = g(3) * t313;
t514 = t321 * pkin(5);
t510 = qJD(2) * pkin(2);
t509 = t13 * t316;
t508 = t315 * t55;
t506 = t89 * t316;
t271 = t324 * t316;
t273 = pkin(10) * t321 + t304;
t212 = t271 * t320 - t273 * t315;
t505 = qJD(6) * t212 + t315 * t543 + t320 * t544;
t214 = t271 * t315 + t273 * t320;
t504 = -qJD(6) * t214 - t315 * t544 + t320 * t543;
t501 = -qJD(5) * t115 + t547;
t500 = pkin(5) * t354 + t452;
t496 = t104 * t248;
t494 = t139 * t321;
t491 = t207 * t241;
t490 = t207 * t316;
t489 = t209 * t207;
t488 = t209 * t241;
t487 = t209 * t321;
t486 = t238 * t250;
t485 = t241 * t250;
t484 = t243 * t316;
t483 = t245 * t316;
t480 = t250 * t248;
t477 = t264 * t318;
t475 = t300 * t303;
t474 = t302 * t303;
t473 = t303 * t316;
t472 = t303 * t321;
t471 = t303 * t323;
t466 = t313 * t322;
t461 = t316 * t323;
t457 = t319 * t525;
t455 = t321 * t323;
t454 = qJDD(1) - g(3);
t297 = pkin(4) + t514;
t449 = t183 * t297 - t184 * t324;
t448 = t185 * t297 - t186 * t324;
t447 = t232 * t297 - t233 * t324;
t446 = -t242 * t299 + t243 * t525;
t445 = -t244 * t299 + t245 * t525;
t308 = t318 ^ 2;
t309 = t322 ^ 2;
t444 = t308 - t309;
t443 = t308 + t309;
t265 = -t407 - t510;
t440 = qJD(2) * t265;
t438 = qJD(2) * t319;
t435 = qJD(5) * t241;
t422 = t522 * pkin(3);
t417 = t313 * t461;
t415 = t313 * t455;
t327 = qJD(2) ^ 2;
t414 = t318 * t327 * t322;
t405 = t313 * t438;
t404 = qJD(2) * t465;
t402 = t257 * t434;
t394 = t323 * t429;
t393 = t104 * t434 - t70 * t250;
t383 = t241 * t321;
t298 = -t422 - pkin(4);
t378 = t322 * t395;
t377 = (-t245 * t318 + t312 * t466) * pkin(3);
t376 = -t113 + t540;
t373 = pkin(4) * t303 + pkin(10) * t301;
t371 = g(1) * t245 + g(2) * t243;
t368 = t316 * t71 + t321 * t70;
t365 = -t139 * t296 + t496;
t247 = t314 * t318 + t319 * t466;
t159 = t317 * t246 + t247 * t522;
t140 = -t159 * t316 - t415;
t357 = -t159 * t321 + t417;
t75 = t140 * t320 + t315 * t357;
t76 = t140 * t315 - t320 * t357;
t363 = t297 * t303 - t301 * t324;
t362 = t246 * pkin(3);
t361 = qJDD(2) * t323 - t319 * t327;
t356 = t246 * t522 - t317 * t247;
t221 = t264 * t322 + t406;
t353 = -t402 - t492;
t350 = g(1) * t186 + g(2) * t184 + g(3) * t233;
t348 = t359 * t321;
t346 = t104 * t433 + t71 * t250 - t316 * t344;
t342 = (-t243 * t318 - t322 * t389) * pkin(3);
t27 = -pkin(5) * t359 + t41;
t340 = t21 * t250 + t27 * t256 + t300 * t539 + t541 * t82;
t337 = -pkin(8) * qJDD(3) + (t265 + t407 - t510) * qJD(3);
t336 = -t239 * t250 - t382 - t539;
t335 = t239 * t248 + t350 + t381;
t20 = t320 * t48 - t508;
t334 = -t20 * t541 - t21 * t542 - t4 * t256 + t3 * t530 - t350;
t333 = -t20 * t250 - t27 * t530 - t302 * t539 + t542 * t82;
t331 = -qJD(5) * t368 - t350 - t509;
t133 = -t221 * qJD(3) - t318 * t228 + t282;
t220 = t283 - t477;
t330 = t132 * t322 - t133 * t318 + (-t220 * t322 - t221 * t318) * qJD(3) - t371;
t328 = -g(1) * (-t186 * t316 + t244 * t321) - g(2) * (-t184 * t316 + t242 * t321) - g(3) * (-t233 * t316 - t415);
t268 = t298 - t514;
t226 = t232 * pkin(4);
t201 = -qJD(3) * t247 - t318 * t404;
t200 = qJD(3) * t246 + t322 * t404;
t179 = t185 * pkin(4);
t178 = t183 * pkin(4);
t164 = t530 * t257;
t163 = t256 * t257;
t150 = pkin(5) * t479 - t531;
t145 = -t248 ^ 2 + t250 ^ 2;
t138 = qJDD(6) + t139;
t108 = t248 * t307 - t143;
t81 = qJD(4) * t159 + t317 * t200 - t201 * t522;
t80 = qJD(4) * t356 + t200 * t522 + t317 * t201;
t59 = -t196 * t462 - t315 * t402 - t432 * t479 + (t424 * t478 - t493) * t320;
t58 = t195 * t257 + t196 * t530;
t57 = t139 * t316 - t209 * t250 + t241 * t383;
t56 = -t241 ^ 2 * t316 + t207 * t250 + t494;
t52 = t241 * t490 + t348;
t51 = t209 * t383 - t506;
t50 = qJD(5) * t357 - t316 * t80 + t321 * t405;
t49 = qJD(5) * t140 + t316 * t405 + t321 * t80;
t35 = t124 * t250 + t138 * t530 - t238 * t542;
t34 = t138 * t256 + t238 * t541 + t250 * t364;
t26 = t320 * t54 - t508;
t25 = -t315 * t54 - t507;
t22 = (-t89 - t491) * t321 + (t359 - t488) * t316;
t17 = t124 * t542 + t338 * t530;
t16 = -t256 * t36 - t364 * t541;
t15 = -qJD(6) * t76 - t315 * t49 + t320 * t50;
t14 = qJD(6) * t75 + t315 * t50 + t320 * t49;
t5 = -t124 * t541 + t256 * t338 - t36 * t530 + t364 * t542;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t454, 0, 0, 0, 0, 0, 0, t361 * t313 (-qJDD(2) * t319 - t323 * t327) * t313, 0, -g(3) + (t314 ^ 2 + (t319 ^ 2 + t323 ^ 2) * t313 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, qJD(3) * t201 + qJDD(3) * t246 + (-t318 * t394 + t322 * t361) * t313, -qJD(3) * t200 - qJDD(3) * t247 + (-t318 * t361 - t322 * t394) * t313 (-t246 * t318 + t247 * t322) * qJDD(2) + (t200 * t322 - t201 * t318 + (-t246 * t322 - t247 * t318) * qJD(3)) * qJD(2), t132 * t247 + t133 * t246 + t200 * t221 + t201 * t220 - g(3) + (-t227 * t323 + t265 * t438) * t313, 0, 0, 0, 0, 0, 0, t356 * t305 - t307 * t81 + (-t144 * t323 + t248 * t438) * t313, -t159 * t305 - t307 * t80 + (t143 * t323 + t250 * t438) * t313, t143 * t356 - t144 * t159 - t248 * t80 + t250 * t81, -t112 * t81 + t113 * t80 - t356 * t382 - t159 * t381 - g(3) + (-t182 * t323 + t239 * t438) * t313, 0, 0, 0, 0, 0, 0, t140 * t139 + t81 * t207 + t50 * t241 + t356 * t359, t139 * t357 + t209 * t81 - t241 * t49 + t356 * t89, t140 * t89 - t49 * t207 - t50 * t209 - t357 * t359, t104 * t81 + t13 * t140 + t352 * t357 - t356 * t41 + t49 * t71 + t50 * t70 - g(3), 0, 0, 0, 0, 0, 0, t124 * t81 + t138 * t75 + t15 * t238 + t338 * t356, -t138 * t76 - t14 * t238 + t356 * t36 - t364 * t81, -t124 * t14 + t15 * t364 + t338 * t76 + t36 * t75, t14 * t21 + t15 * t20 - t27 * t356 + t3 * t76 + t4 * t75 + t81 * t82 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t454 * t465 + t372, -t454 * t467 + t371, 0, 0, qJDD(2) * t308 + 0.2e1 * t378, 0.2e1 * t318 * t425 - 0.2e1 * t429 * t444, qJDD(3) * t318 + t322 * t326, qJDD(2) * t309 - 0.2e1 * t378, qJDD(3) * t322 - t318 * t326, 0, t337 * t318 + t322 * t527, -t318 * t527 + t337 * t322, t443 * t497 + (-g(3) * t319 - t396 * t443) * t313 + t330, t360 * pkin(2) + t330 * pkin(8) + (-g(3) * (pkin(2) * t323 + pkin(8) * t319) + (-t265 * t319 + (t220 * t318 - t221 * t322) * t323) * qJD(1)) * t313, -t143 * t257 - t196 * t250, -t143 * t355 - t144 * t257 + t196 * t248 - t197 * t250, -t196 * t307 + t257 * t305, -t144 * t355 + t197 * t248, -t197 * t307 + t305 * t355, 0, -t144 * t299 - t182 * t355 + t197 * t239 + t248 * t347 - t303 * t343 + t305 * t531 - t307 * t452, t143 * t299 + t182 * t257 - t196 * t239 - t215 * t305 + t250 * t347 - t307 * t453 + t341, -g(3) * t467 + t112 * t196 - t113 * t197 + t143 * t531 - t144 * t215 - t248 * t453 + t250 * t452 + t257 * t382 - t355 * t381 - t371, -t381 * t215 - t382 * t531 - t182 * t299 - g(1) * t445 - g(2) * t446 - g(3) * (t313 * t457 + t259) + t347 * t239 + t453 * t113 - t452 * t112, t209 * t353 - t478 * t89 (t207 * t321 + t209 * t316) * t196 + (t348 + t506 + (-t487 + t490) * qJD(5)) * t257, t139 * t478 + t197 * t209 + t241 * t353 + t355 * t89, t207 * t354 - t359 * t479, -t139 * t479 - t207 * t197 - t241 * t354 - t355 * t359, -t139 * t355 + t197 * t241, t114 * t139 - t13 * t355 + t70 * t197 + t531 * t359 + t41 * t479 - g(1) * (-t244 * t472 + t483) - g(2) * (-t242 * t472 + t484) - (t303 * t455 + t316 * t319) * t516 + t501 * t241 + t452 * t207 + t354 * t104, -t115 * t139 - t352 * t355 - t71 * t197 + t531 * t89 + t41 * t478 - g(1) * (t244 * t473 + t245 * t321) - g(2) * (t242 * t473 + t243 * t321) - (-t303 * t461 + t319 * t321) * t516 - t502 * t241 + t452 * t209 + t353 * t104, t115 * t359 + t114 * t89 - t501 * t209 - t502 * t207 + t368 * t196 - t341 + (t352 * t316 - t13 * t321 + (t316 * t70 - t321 * t71) * qJD(5)) * t257, -t352 * t115 + t13 * t114 - t41 * t531 - g(1) * (-t244 * t373 + t445) - g(2) * (-t242 * t373 + t446) - t517 + t502 * t71 + t501 * t70 - (t323 * t373 + t457) * t516 + t452 * t104, -t164 * t36 + t364 * t58, t124 * t58 + t163 * t36 + t164 * t338 + t364 * t59, t138 * t164 - t197 * t364 - t238 * t58 + t355 * t36, t124 * t59 - t163 * t338, -t124 * t197 - t138 * t163 - t238 * t59 - t338 * t355, -t138 * t355 + t197 * t238, t46 * t138 - t4 * t355 + t20 * t197 - t150 * t338 + t27 * t163 + t82 * t59 - g(1) * (-t244 * t474 + t245 * t300) - g(2) * (-t242 * t474 + t243 * t300) - (t300 * t319 + t302 * t471) * t516 + t523 * t238 + t500 * t124, -t47 * t138 + t3 * t355 - t21 * t197 - t150 * t36 + t27 * t164 - t82 * t58 - g(1) * (t244 * t475 + t245 * t302) - g(2) * (t242 * t475 + t243 * t302) - (-t300 * t471 + t302 * t319) * t516 - t524 * t238 - t500 * t364, -t124 * t524 - t163 * t3 - t164 * t4 + t20 * t58 - t21 * t59 + t338 * t47 + t36 * t46 + t364 * t523 - t341, t3 * t47 + t4 * t46 + t27 * t150 - g(1) * (pkin(5) * t483 - t244 * t363 + t445) - g(2) * (pkin(5) * t484 - t242 * t363 + t446) - t517 + t500 * t82 + t524 * t21 + t523 * t20 - (t363 * t323 + (pkin(5) * t316 + t525) * t319) * t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t444 * t327, t426, t414, t425, qJDD(3), -g(3) * t246 + t282 + (-g(1) * t312 + g(2) * t499) * t466 + (-t228 + t371 - t440) * t318, -t322 * t440 - g(1) * (-t245 * t322 - t318 * t470) - g(2) * (-t243 * t322 + t318 * t389) + g(3) * t247 + (t220 + t477) * qJD(3) - t412, 0, 0, t480, t145, t108, -t480, -t369, t305, t116 * t307 + (-t248 * t439 + t305 * t522 - t307 * t436) * pkin(3) + t336, t117 * t307 + (-t250 * t439 - t305 * t317 - t307 * t398) * pkin(3) + t335 (t113 - t116) * t250 + (-t112 + t117) * t248 + (t522 * t143 - t144 * t317 + (-t248 * t522 + t250 * t317) * qJD(4)) * pkin(3), -g(1) * t377 - g(2) * t342 - g(3) * t362 - t239 * t421 - t381 * t521 - t422 * t382 + (-t117 + t380) * t113 + t532 * t112, t51, t22, t57, t52, t56, -t485, t298 * t413 - t73 * t241 - t532 * t207 + (-t241 * t380 + t365) * t316 + (-t296 * t435 - t298 * t305 + t344) * t321 + t393, -t209 * t532 - t241 * t528 - t298 * t89 + t365 * t321 + t346, t74 * t207 + t73 * t209 + (-t207 * t380 - qJD(5) * t70 + (qJD(5) * t209 + t359) * t296) * t321 + (t209 * t380 - t296 * t89 - t13 + (t207 * t296 - t71) * qJD(5)) * t316 - t350 + t529, -t352 * t476 - t296 * t509 + t41 * t298 - g(1) * (pkin(10) * t186 + t179 + t377) - g(2) * (t184 * pkin(10) + t178 + t342) - g(3) * (pkin(10) * t233 + t226 + t362) - t532 * t104 + t528 * t71 + (-t296 * t433 + t550) * t70, t16, t5, t34, t17, t35, -t486, t124 * t503 + t138 * t176 - t238 * t512 - t268 * t338 + t333, -t138 * t177 - t238 * t533 - t268 * t36 - t364 * t503 + t340, -t124 * t533 + t176 * t36 + t177 * t338 - t364 * t512 + t334, t3 * t177 + t4 * t176 + t27 * t268 - g(1) * (t377 + t448) - g(2) * (t342 + t449) - g(3) * (t362 + t447) + t503 * t82 + t533 * t21 - t512 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t145, t108, -t480, -t369, t305, t113 * t307 + t336, t112 * t307 + t335, 0, 0, t51, t22, t57, t52, t56, -t485, -pkin(4) * t413 - t78 * t241 - t113 * t207 + (-pkin(10) * t139 + t496) * t316 + (-pkin(10) * t435 + t344 + t515) * t321 + t393, t104 * t481 + pkin(4) * t89 - t113 * t209 + t241 * t79 + (t241 * t434 - t494) * pkin(10) + t346, t79 * t207 + t78 * t209 + (t348 - t506 + (t487 + t490) * qJD(5)) * pkin(10) + t331 + t529, -t41 * pkin(4) - g(1) * t179 - g(2) * t178 - g(3) * t226 - t104 * t113 - t70 * t78 - t71 * t79 + (t331 - t11) * pkin(10), t16, t5, t34, t17, t35, -t486, t124 * t376 + t138 * t212 + t238 * t504 + t297 * t338 + t333, -t138 * t214 - t238 * t505 + t297 * t36 - t364 * t376 + t340, -t124 * t505 + t212 * t36 + t214 * t338 + t364 * t504 + t334, -g(1) * t448 - g(2) * t449 - g(3) * t447 + t20 * t504 + t21 * t505 + t4 * t212 + t3 * t214 - t27 * t297 + t376 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, -t207 ^ 2 + t209 ^ 2, -t89 + t491, -t489, t359 + t488, t139, -t104 * t209 + t71 * t241 + t13 + t328, t70 * t241 + t104 * t207 - g(1) * (-t186 * t321 - t244 * t316) - g(2) * (-t184 * t321 - t242 * t316) - g(3) * (-t233 * t321 + t417) + t352, 0, 0, -t495, t538, t537, t495, t534, t138, -t238 * t25 + (-t124 * t209 + t138 * t320 - t238 * t432) * pkin(5) + t535, t238 * t26 + (-t138 * t315 + t209 * t364 - t238 * t431) * pkin(5) + t536, -t364 * t21 + t124 * t26 - t124 * t20 - t364 * t25 + (t315 * t338 + t320 * t36 + (-t124 * t320 - t315 * t364) * qJD(6)) * pkin(5), -t20 * t25 - t21 * t26 + (t3 * t315 + t4 * t320 - t82 * t209 + (-t20 * t315 + t21 * t320) * qJD(6) + t328) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, t538, t537, t495, t534, t138, t21 * t238 + t535, t20 * t238 + t536, 0, 0;];
tau_reg  = t1;
