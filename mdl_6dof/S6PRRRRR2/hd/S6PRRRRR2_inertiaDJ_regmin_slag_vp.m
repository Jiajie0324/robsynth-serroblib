% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6PRRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRR2_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR2_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR2_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR2_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:45:22
% EndTime: 2019-03-09 00:45:28
% DurationCPUTime: 1.77s
% Computational Cost: add. (2643->242), mult. (6629->413), div. (0->0), fcn. (6601->12), ass. (0->182)
t126 = sin(qJ(5));
t130 = cos(qJ(6));
t125 = sin(qJ(6));
t131 = cos(qJ(5));
t192 = t125 * t131;
t97 = t130 * t126 + t192;
t127 = sin(qJ(4));
t128 = sin(qJ(3));
t132 = cos(qJ(4));
t133 = cos(qJ(3));
t98 = t127 * t133 + t132 * t128;
t58 = t97 * t98;
t122 = t131 ^ 2;
t189 = t126 ^ 2 - t122;
t158 = t189 * qJD(5);
t219 = qJD(3) + qJD(4);
t218 = qJD(5) + qJD(6);
t217 = pkin(8) + pkin(9);
t216 = -pkin(10) - pkin(11);
t71 = t219 * t98;
t215 = t71 * pkin(5);
t96 = t127 * t128 - t132 * t133;
t214 = t96 * pkin(5);
t213 = pkin(5) * t130;
t119 = qJD(5) * t131;
t185 = qJD(5) * t126;
t183 = t128 * qJD(3);
t178 = pkin(3) * t183;
t70 = t219 * t96;
t39 = t71 * pkin(4) + t70 * pkin(10) + t178;
t108 = t217 * t128;
t110 = t217 * t133;
t166 = qJD(3) * t217;
t154 = t133 * t166;
t155 = t128 * t166;
t186 = qJD(4) * t132;
t187 = qJD(4) * t127;
t44 = t108 * t186 + t110 * t187 + t127 * t154 + t132 * t155;
t118 = -t133 * pkin(3) - pkin(2);
t64 = t96 * pkin(4) - t98 * pkin(10) + t118;
t76 = -t127 * t108 + t132 * t110;
t10 = -t64 * t119 - t126 * t39 + t131 * t44 + t76 * t185;
t171 = t98 * t119;
t199 = t126 * t70;
t140 = t171 - t199;
t8 = -t140 * pkin(11) - t10;
t212 = t130 * t8;
t211 = t132 * pkin(3);
t210 = t98 * t70;
t115 = t127 * pkin(3) + pkin(10);
t209 = -pkin(11) - t115;
t45 = t76 * qJD(4) - t127 * t155 + t132 * t154;
t22 = t140 * pkin(5) + t45;
t198 = t126 * t98;
t75 = t132 * t108 + t127 * t110;
t52 = pkin(5) * t198 + t75;
t69 = t218 * t97;
t95 = t125 * t126 - t130 * t131;
t208 = t22 * t95 + t52 * t69;
t68 = t218 * t95;
t207 = t22 * t97 - t52 * t68;
t67 = t75 * t119;
t206 = t45 * t126 + t67;
t74 = t131 * t76;
t205 = t126 * t64 + t74;
t175 = pkin(5) * t185;
t177 = pkin(3) * t187;
t102 = t175 + t177;
t117 = -t131 * pkin(5) - pkin(4);
t106 = t117 - t211;
t204 = t102 * t95 + t106 * t69;
t203 = t102 * t97 - t106 * t68;
t202 = t117 * t69 + t95 * t175;
t201 = -t117 * t68 + t97 * t175;
t33 = -pkin(11) * t198 + t205;
t200 = t125 * t33;
t197 = t130 * t33;
t196 = t131 * t70;
t195 = t131 * t98;
t123 = sin(pkin(6));
t129 = sin(qJ(2));
t194 = t123 * t129;
t134 = cos(qJ(2));
t193 = t123 * t134;
t191 = t126 * t131;
t116 = -pkin(4) - t211;
t190 = t116 * t119 + t126 * t177;
t188 = qJD(2) * t129;
t184 = qJD(6) * t125;
t182 = t133 * qJD(3);
t181 = -0.2e1 * pkin(2) * qJD(3);
t180 = pkin(4) * t185;
t179 = pkin(4) * t119;
t176 = pkin(3) * t186;
t174 = pkin(5) * t184;
t173 = qJD(6) * t213;
t172 = t98 * t185;
t124 = cos(pkin(6));
t85 = t124 * t133 - t128 * t194;
t86 = t124 * t128 + t133 * t194;
t55 = t127 * t86 - t132 * t85;
t170 = t55 * t185;
t169 = t55 * t119;
t66 = t75 * t185;
t61 = t131 * t64;
t26 = -pkin(11) * t195 - t126 * t76 + t214 + t61;
t168 = -t26 - t214;
t161 = t126 * t44 + t131 * t39;
t7 = pkin(11) * t196 + t215 + (-t74 + (pkin(11) * t98 - t64) * t126) * qJD(5) + t161;
t167 = -t125 * t8 + t130 * t7;
t165 = qJD(5) * t216;
t164 = t123 * t188;
t163 = qJD(2) * t193;
t162 = t126 * t119;
t160 = qJD(5) * t209;
t159 = -0.4e1 * t98 * t191;
t157 = t126 * t176;
t156 = t131 * t176;
t56 = t127 * t85 + t132 * t86;
t72 = t85 * qJD(3) + t133 * t163;
t73 = -t86 * qJD(3) - t128 * t163;
t25 = t56 * qJD(4) + t127 * t72 - t132 * t73;
t153 = t25 * t98 - t55 * t70;
t152 = t45 * t98 - t75 * t70;
t151 = -t70 * t96 + t98 * t71;
t150 = t115 * t96 - t116 * t98;
t149 = -t130 * t26 + t200;
t148 = t125 * t26 + t197;
t136 = t126 * t193 - t131 * t56;
t137 = t126 * t56 + t131 * t193;
t147 = -t125 * t136 + t130 * t137;
t146 = -t125 * t137 - t130 * t136;
t90 = t209 * t126;
t120 = t131 * pkin(11);
t91 = t131 * t115 + t120;
t145 = t125 * t91 - t130 * t90;
t144 = t125 * t90 + t130 * t91;
t107 = t216 * t126;
t109 = t131 * pkin(10) + t120;
t143 = t130 * t107 - t125 * t109;
t142 = t125 * t107 + t130 * t109;
t141 = t116 * t185 - t131 * t177;
t139 = t172 + t196;
t138 = -t131 * t71 + t96 * t185;
t135 = -t115 * t71 - t116 * t70 + (t127 * t98 - t132 * t96) * qJD(4) * pkin(3);
t112 = 0.2e1 * t162;
t101 = t131 * t165;
t100 = t126 * t165;
t94 = -0.2e1 * t158;
t93 = t98 ^ 2;
t80 = t131 * t160 - t157;
t79 = t126 * t160 + t156;
t59 = t95 * t98;
t51 = -0.2e1 * t97 * t68;
t50 = 0.2e1 * t96 * t71;
t49 = t96 * t119 + t126 * t71;
t43 = -t142 * qJD(6) - t125 * t100 + t130 * t101;
t42 = -t143 * qJD(6) - t130 * t100 - t125 * t101;
t38 = -t98 * t158 - t70 * t191;
t32 = -t69 * t96 - t95 * t71;
t31 = -t68 * t96 + t97 * t71;
t30 = qJD(5) * t159 + t189 * t70;
t29 = 0.2e1 * t68 * t95 - 0.2e1 * t97 * t69;
t28 = -t144 * qJD(6) - t125 * t79 + t130 * t80;
t27 = t145 * qJD(6) - t125 * t80 - t130 * t79;
t24 = t55 * qJD(4) - t127 * t73 - t132 * t72;
t19 = -t70 * t192 - t125 * t172 - t184 * t198 + (t195 * t218 - t199) * t130;
t18 = -t218 * t58 + t95 * t70;
t17 = -t25 * t131 + t170;
t16 = t25 * t126 + t169;
t15 = t136 * qJD(5) + t126 * t24 + t131 * t164;
t14 = t137 * qJD(5) - t126 * t164 + t131 * t24;
t13 = t25 * t97 - t55 * t68;
t12 = t25 * t95 + t55 * t69;
t11 = -t205 * qJD(5) + t161;
t9 = t18 * t97 + t59 * t68;
t5 = -t18 * t95 - t97 * t19 + t68 * t58 + t59 * t69;
t4 = -t146 * qJD(6) + t125 * t14 + t130 * t15;
t3 = t147 * qJD(6) - t125 * t15 + t130 * t14;
t2 = -t148 * qJD(6) + t167;
t1 = t149 * qJD(6) - t125 * t7 - t212;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t164, -t163, 0, 0, 0, 0, 0 (-t133 * t188 - t134 * t183) * t123 (t128 * t188 - t134 * t182) * t123, 0, 0, 0, 0, 0 (-t134 * t71 + t96 * t188) * t123 (t134 * t70 + t98 * t188) * t123, 0, 0, 0, 0, 0, t153 * t126 - t137 * t71 + t15 * t96 + t98 * t169, t153 * t131 + t136 * t71 + t14 * t96 - t98 * t170, 0, 0, 0, 0, 0, -t147 * t71 + t55 * t19 + t25 * t58 + t4 * t96, -t146 * t71 + t55 * t18 - t25 * t59 + t3 * t96; 0, 0, 0, 0, 0.2e1 * t128 * t182, 0.2e1 * (-t128 ^ 2 + t133 ^ 2) * qJD(3), 0, 0, 0, t128 * t181, t133 * t181, -0.2e1 * t210, -0.2e1 * t151, 0, 0, 0, 0.2e1 * t118 * t71 + 0.2e1 * t96 * t178, -0.2e1 * t118 * t70 + 0.2e1 * t98 * t178, -0.2e1 * t122 * t210 - 0.2e1 * t93 * t162, 0.2e1 * t158 * t93 - t70 * t159, 0.2e1 * t151 * t131 - 0.2e1 * t96 * t172, -0.2e1 * t151 * t126 - 0.2e1 * t96 * t171, t50, 0.2e1 * t98 * t67 + 0.2e1 * t11 * t96 + 0.2e1 * t61 * t71 + 0.2e1 * (-t76 * t71 + t152) * t126, 0.2e1 * t10 * t96 + 0.2e1 * t152 * t131 - 0.2e1 * t205 * t71 - 0.2e1 * t98 * t66, -0.2e1 * t59 * t18, -0.2e1 * t18 * t58 + 0.2e1 * t59 * t19, 0.2e1 * t18 * t96 - 0.2e1 * t59 * t71, -0.2e1 * t19 * t96 - 0.2e1 * t58 * t71, t50, -0.2e1 * t149 * t71 + 0.2e1 * t52 * t19 + 0.2e1 * t2 * t96 + 0.2e1 * t22 * t58, 0.2e1 * t1 * t96 - 0.2e1 * t148 * t71 + 0.2e1 * t52 * t18 - 0.2e1 * t22 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t72, 0, 0, 0, 0, 0, -t25, t24, 0, 0, 0, 0, 0, t17, t16, 0, 0, 0, 0, 0, t12, t13; 0, 0, 0, 0, 0, 0, t182, -t183, 0, -pkin(8) * t182, pkin(8) * t183, 0, 0, -t70, -t71, 0, -t45, t44, t38, t30, t49, -t138, 0, t66 + (-t150 * qJD(5) - t45) * t131 + t135 * t126, t131 * t135 + t150 * t185 + t206, t9, t5, t31, t32, 0, t102 * t58 + t106 * t19 - t145 * t71 + t28 * t96 + t208, -t102 * t59 + t106 * t18 - t144 * t71 + t27 * t96 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t177, -0.2e1 * t176, t112, t94, 0, 0, 0, 0.2e1 * t141, 0.2e1 * t190, t51, t29, 0, 0, 0, 0.2e1 * t204, 0.2e1 * t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25, t24, 0, 0, 0, 0, 0, t17, t16, 0, 0, 0, 0, 0, t12, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t71, 0, -t45, t44, t38, t30, t49, -t138, 0, t66 + (pkin(4) * t70 - pkin(10) * t71) * t126 + (-t45 + (-pkin(4) * t98 - pkin(10) * t96) * qJD(5)) * t131, pkin(4) * t139 + pkin(10) * t138 + t206, t9, t5, t31, t32, 0, t117 * t19 + t143 * t71 + t175 * t58 + t43 * t96 + t208, t117 * t18 - t142 * t71 - t175 * t59 + t42 * t96 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t176, t112, t94, 0, 0, 0, t141 - t180, -t179 + t190, t51, t29, 0, 0, 0, t202 + t204, t201 + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t94, 0, 0, 0, -0.2e1 * t180, -0.2e1 * t179, t51, t29, 0, 0, 0, 0.2e1 * t202, 0.2e1 * t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, t14, 0, 0, 0, 0, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, -t140, t71, t11, t10, 0, 0, t18, -t19, t71, t71 * t213 + (t125 * t168 - t197) * qJD(6) + t167, -t212 + (-t7 - t215) * t125 + (t130 * t168 + t200) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, -t185, 0, -t115 * t119 - t157, t115 * t185 - t156, 0, 0, -t68, -t69, 0, t28, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, -t185, 0, -pkin(10) * t119, pkin(10) * t185, 0, 0, -t68, -t69, 0, t43, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t174, -0.2e1 * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, -t19, t71, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, -t69, 0, t28, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, -t69, 0, t43, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
