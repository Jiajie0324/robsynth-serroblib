% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 03:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRPR15_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR15_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR15_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 03:42:02
% EndTime: 2019-05-08 03:45:16
% DurationCPUTime: 169.91s
% Computational Cost: add. (856696->1142), mult. (2123696->1827), div. (0->0), fcn. (1796029->14), ass. (0->852)
t1413 = sin(qJ(1));
t1418 = cos(qJ(1));
t1408 = cos(pkin(6));
t1659 = qJD(1) * t1408;
t1397 = qJD(2) + t1659;
t1411 = sin(qJ(3));
t1416 = cos(qJ(3));
t1407 = cos(pkin(7));
t1406 = sin(pkin(6));
t1417 = cos(qJ(2));
t1622 = t1406 * t1417;
t1603 = qJD(1) * t1622;
t1587 = t1407 * t1603;
t1412 = sin(qJ(2));
t1623 = t1406 * t1412;
t1604 = qJD(1) * t1623;
t1405 = sin(pkin(7));
t1624 = t1405 * t1416;
t1354 = -t1397 * t1624 + t1411 * t1604 - t1416 * t1587;
t1350 = qJD(4) + t1354;
t1349 = t1350 ^ 2;
t1621 = t1407 * t1411;
t1625 = t1405 * t1411;
t1356 = t1397 * t1625 + (t1412 * t1416 + t1417 * t1621) * t1406 * qJD(1);
t1410 = sin(qJ(4));
t1415 = cos(qJ(4));
t1628 = t1397 * t1407;
t1589 = -t1405 * t1603 + t1628;
t1582 = qJD(3) + t1589;
t1333 = t1415 * t1356 + t1410 * t1582;
t1677 = t1333 ^ 2;
t1266 = t1677 + t1349;
t1609 = qJDD(1) * t1412;
t1657 = qJD(1) * t1417;
t1375 = (qJD(2) * t1657 + t1609) * t1406;
t1395 = qJD(2) * t1604;
t1608 = qJDD(1) * t1417;
t1575 = t1406 * t1608 - t1395;
t1480 = t1407 * t1575;
t1588 = qJDD(1) * t1408 + qJDD(2);
t1428 = t1405 * t1588 + t1480;
t1580 = t1411 * t1375 - t1416 * t1428;
t1306 = -t1356 * qJD(3) - t1580;
t1305 = qJDD(4) - t1306;
t1331 = t1356 * t1410 - t1415 * t1582;
t1640 = t1333 * t1331;
t1689 = t1640 + t1305;
t1706 = t1689 * t1410;
t1155 = t1266 * t1415 + t1706;
t1705 = t1689 * t1415;
t1158 = t1266 * t1410 - t1705;
t1425 = t1416 * t1375 + t1411 * t1428;
t1307 = -t1354 * qJD(3) + t1425;
t1607 = t1407 * t1588 + qJDD(3);
t1435 = t1405 * t1575 - t1607;
t1427 = t1415 * t1307 - t1410 * t1435;
t1199 = (qJD(4) + t1350) * t1331 - t1427;
t1519 = t1158 * t1411 + t1199 * t1416;
t1037 = -t1407 * t1155 + t1405 * t1519;
t1039 = t1405 * t1155 + t1407 * t1519;
t1085 = t1158 * t1416 - t1199 * t1411;
t1543 = t1039 * t1417 + t1085 * t1412;
t916 = -t1406 * t1037 + t1408 * t1543;
t959 = t1039 * t1412 - t1085 * t1417;
t868 = -t1413 * t959 + t1418 * t916;
t1817 = pkin(8) * t868;
t869 = t1413 * t916 + t1418 * t959;
t1816 = pkin(8) * t869;
t1678 = t1331 ^ 2;
t1250 = -t1349 - t1678;
t1215 = -t1640 + t1305;
t1731 = t1215 * t1415;
t1149 = t1250 * t1410 + t1731;
t1732 = t1215 * t1410;
t1152 = -t1250 * t1415 + t1732;
t1239 = qJD(4) * t1333 + t1307 * t1410 + t1415 * t1435;
t1639 = t1350 * t1333;
t1191 = t1239 + t1639;
t1522 = t1152 * t1411 + t1191 * t1416;
t1030 = -t1407 * t1149 + t1405 * t1522;
t1032 = t1405 * t1149 + t1407 * t1522;
t1083 = t1152 * t1416 - t1191 * t1411;
t1546 = t1032 * t1417 + t1083 * t1412;
t909 = -t1406 * t1030 + t1408 * t1546;
t955 = t1032 * t1412 - t1083 * t1417;
t862 = -t1413 * t955 + t1418 * t909;
t1815 = pkin(8) * t862;
t863 = t1413 * t909 + t1418 * t955;
t1814 = pkin(8) * t863;
t914 = t1408 * t1037 + t1406 * t1543;
t1813 = pkin(9) * (t1406 * t914 + t1408 * t916);
t1812 = pkin(1) * t914;
t1811 = pkin(1) * t916;
t907 = t1408 * t1030 + t1406 * t1546;
t1810 = pkin(9) * (t1406 * t907 + t1408 * t909);
t1294 = t1678 - t1349;
t1168 = t1294 * t1410 + t1705;
t1172 = t1294 * t1415 - t1706;
t1190 = t1239 - t1639;
t1513 = t1172 * t1411 + t1190 * t1416;
t1044 = t1407 * t1168 + t1405 * t1513;
t1048 = -t1405 * t1168 + t1407 * t1513;
t1093 = t1172 * t1416 - t1190 * t1411;
t1539 = t1048 * t1417 + t1093 * t1412;
t921 = -t1406 * t1044 + t1408 * t1539;
t968 = t1048 * t1412 - t1093 * t1417;
t1809 = t1413 * t921 + t1418 * t968;
t1808 = -t1413 * t968 + t1418 * t921;
t1806 = pkin(1) * t907;
t1805 = pkin(1) * t909;
t1803 = pkin(9) * t959;
t1798 = t1408 * t1044 + t1406 * t1539;
t1797 = pkin(9) * t955;
t1796 = pkin(10) * (t1037 * t1405 + t1039 * t1407);
t1793 = pkin(2) * t1037;
t1792 = pkin(2) * t1039;
t1791 = pkin(10) * (t1030 * t1405 + t1032 * t1407);
t1785 = pkin(2) * t1030;
t1784 = pkin(2) * t1032;
t1780 = pkin(10) * t1085;
t1775 = pkin(10) * t1083;
t1772 = pkin(3) * t1155;
t1771 = pkin(11) * t1155;
t1770 = pkin(11) * t1158;
t1295 = -t1677 + t1349;
t1169 = -t1295 * t1410 + t1731;
t1769 = t1169 * t1411;
t1768 = t1169 * t1416;
t1165 = t1295 * t1415 + t1732;
t1766 = t1405 * t1165;
t1763 = t1407 * t1165;
t1637 = t1350 * t1415;
t1481 = t1239 * t1410 + t1331 * t1637;
t1598 = t1411 * t1640;
t1684 = t1416 * t1481 - t1598;
t1638 = t1350 * t1410;
t1584 = -t1415 * t1239 + t1331 * t1638;
t1597 = t1416 * t1640;
t1687 = t1411 * t1481 + t1597;
t1701 = -t1405 * t1584 + t1407 * t1687;
t1720 = -t1412 * t1701 + t1417 * t1684;
t1703 = t1405 * t1687 + t1407 * t1584;
t1718 = t1412 * t1684 + t1417 * t1701;
t1745 = -t1406 * t1703 + t1408 * t1718;
t1761 = -t1413 * t1745 + t1418 * t1720;
t1240 = -t1331 * qJD(4) + t1427;
t1583 = t1415 * t1240 - t1333 * t1638;
t1683 = t1416 * t1583 + t1598;
t1585 = t1410 * t1240 + t1333 * t1637;
t1686 = t1411 * t1583 - t1597;
t1702 = -t1405 * t1585 + t1407 * t1686;
t1719 = -t1412 * t1702 + t1417 * t1683;
t1704 = t1405 * t1686 + t1407 * t1585;
t1717 = t1412 * t1683 + t1417 * t1702;
t1746 = -t1406 * t1704 + t1408 * t1717;
t1760 = -t1413 * t1746 + t1418 * t1719;
t1759 = t1413 * t1720 + t1418 * t1745;
t1758 = t1413 * t1719 + t1418 * t1746;
t1757 = pkin(3) * t1149;
t1756 = pkin(11) * t1149;
t1755 = pkin(11) * t1152;
t1748 = t1406 * t1717 + t1408 * t1704;
t1747 = t1406 * t1718 + t1408 * t1703;
t1477 = (-t1331 * t1410 - t1333 * t1415) * t1350;
t1478 = (-t1331 * t1415 + t1333 * t1410) * t1350;
t1620 = t1407 * t1416;
t1681 = -t1305 * t1620 - t1405 * t1477 + t1478 * t1621;
t1685 = t1305 * t1411 + t1416 * t1478;
t1699 = -t1412 * t1681 + t1417 * t1685;
t1682 = -t1305 * t1624 + t1407 * t1477 + t1478 * t1625;
t1700 = t1412 * t1685 + t1417 * t1681;
t1721 = -t1406 * t1682 + t1408 * t1700;
t1744 = -t1413 * t1721 + t1418 * t1699;
t1743 = t1413 * t1699 + t1418 * t1721;
t1243 = t1678 + t1677;
t1742 = pkin(3) * t1243;
t1741 = t1190 * t1410;
t1739 = t1190 * t1415;
t1737 = t1191 * t1410;
t1653 = t1191 * t1415;
t1730 = t1243 * t1411;
t1729 = t1243 * t1416;
t1722 = t1406 * t1700 + t1408 * t1682;
t1409 = sin(qJ(6));
t1414 = cos(qJ(6));
t1284 = -t1414 * t1331 + t1350 * t1409;
t1286 = t1331 * t1409 + t1350 * t1414;
t1222 = t1286 * t1284;
t1236 = qJDD(6) + t1240;
t1692 = -t1222 + t1236;
t1714 = t1409 * t1692;
t1688 = -t1677 + t1678;
t1713 = t1411 * t1688;
t1710 = t1414 * t1692;
t1709 = t1416 * t1688;
t1297 = t1331 * t1350;
t1194 = -t1297 + t1240;
t1552 = t1582 ^ 2;
t1636 = t1356 * t1354;
t1430 = -t1435 - t1636;
t1694 = t1411 * t1430;
t1693 = t1416 * t1430;
t1198 = -t1297 - t1240;
t1337 = t1582 * t1354;
t1261 = -t1337 + t1307;
t1449 = t1397 * t1405 + t1587;
t1691 = -t1375 * t1405 - t1449 * t1603;
t1486 = t1582 * t1356;
t1690 = -t1411 * t1337 - t1416 * t1486;
t1271 = pkin(4) * t1331 - qJ(5) * t1333;
t1396 = t1397 ^ 2;
t1398 = g(3) * t1623;
t1394 = g(1) * t1418 + t1413 * g(2);
t1669 = pkin(9) * t1406;
t1440 = qJDD(1) * t1669 - t1394;
t1393 = t1413 * g(1) - t1418 * g(2);
t1492 = qJDD(1) * pkin(1) + t1393;
t1457 = t1408 * t1492;
t1667 = pkin(10) * t1405;
t1674 = pkin(2) * t1417;
t1476 = (-t1412 * t1667 - t1674) * t1406;
t1606 = pkin(10) * t1628;
t1668 = pkin(9) * t1408;
t1270 = t1417 * t1440 + t1412 * t1457 - t1398 - t1396 * pkin(2) + t1428 * pkin(10) + (-pkin(1) * t1657 + (t1412 * t1606 + (t1412 * t1668 + t1417 * t1476) * qJD(1)) * t1406) * qJD(1);
t1402 = t1406 ^ 2;
t1680 = qJD(1) ^ 2;
t1436 = t1669 * t1680 + t1492;
t1366 = t1408 * g(3) + t1406 * t1436;
t1423 = -pkin(2) * t1575 - t1366;
t1433 = t1408 * t1436;
t1562 = t1588 * pkin(2);
t1629 = t1397 * t1406;
t1630 = t1375 * t1407;
t1146 = t1416 * t1270 + (t1407 * (-g(3) * t1622 + t1417 * t1433 + t1562) + t1405 * t1423 + (t1407 * (t1397 * t1449 - t1630) + t1405 * t1691) * pkin(10) + (-t1407 * t1440 + (t1405 * pkin(2) * t1629 + t1407 * (t1402 * t1674 + pkin(1)) * qJD(1)) * qJD(1)) * t1412) * t1411;
t1318 = pkin(3) * t1354 - pkin(11) * t1356;
t1120 = -pkin(3) * t1552 - pkin(11) * t1435 - t1354 * t1318 + t1146;
t1658 = qJD(1) * t1412;
t1665 = t1406 * g(3);
t1420 = -t1412 * t1440 + t1562 + (t1457 - t1665) * t1417 + (t1396 * t1405 - t1630) * pkin(10) + (pkin(1) * t1658 + (t1417 * t1606 + (-t1412 * t1476 + t1417 * t1668) * qJD(1)) * t1406) * qJD(1);
t1666 = pkin(10) * t1407;
t1421 = (pkin(2) * t1397 - t1604 * t1666) * t1604 + t1423 + t1691 * pkin(10);
t1205 = t1405 * t1420 - t1407 * t1421;
t1123 = -t1261 * pkin(11) + (-t1306 + t1486) * pkin(3) - t1205;
t1611 = -t1410 * t1120 + t1415 * t1123;
t1479 = -t1305 * pkin(4) - t1349 * qJ(5) + t1333 * t1271 + qJDD(5) - t1611;
t942 = -pkin(5) * t1198 - pkin(12) * t1215 + t1479;
t1288 = pkin(5) * t1333 - pkin(12) * t1350;
t1145 = t1411 * t1270 - t1420 * t1620 - t1421 * t1624;
t1119 = t1435 * pkin(3) - t1552 * pkin(11) + t1356 * t1318 + t1145;
t1429 = t1239 * pkin(4) - qJ(5) * t1194 + t1119;
t1676 = -2 * qJD(5);
t1594 = pkin(4) * t1350 + t1676;
t965 = -t1678 * pkin(5) + t1239 * pkin(12) + (-t1288 + t1594) * t1333 + t1429;
t1593 = -t1409 * t965 + t1414 * t942;
t884 = t1409 * t942 + t1414 * t965;
t824 = -t1409 * t1593 + t1414 * t884;
t823 = t1409 * t884 + t1414 * t1593;
t1282 = t1284 ^ 2;
t1679 = t1286 ^ 2;
t1326 = qJD(6) + t1333;
t1324 = t1326 ^ 2;
t1351 = t1354 ^ 2;
t1352 = t1356 ^ 2;
t1675 = pkin(4) + pkin(12);
t1673 = pkin(3) * t1411;
t1672 = pkin(3) * t1416;
t1671 = pkin(4) * t1410;
t1670 = pkin(4) * t1415;
t1664 = t1305 * qJ(5);
t1028 = t1415 * t1120 + t1410 * t1123;
t1491 = t1349 * pkin(4) + t1331 * t1271 - t1028;
t948 = t1664 - t1239 * pkin(5) - t1678 * pkin(12) + ((2 * qJD(5)) + t1288) * t1350 - t1491;
t1662 = t1409 * t948;
t1660 = t1414 * t948;
t1656 = t1119 * t1410;
t1655 = t1119 * t1415;
t1142 = t1222 + t1236;
t1654 = t1142 * t1414;
t1646 = t1284 * t1326;
t1289 = t1435 - t1636;
t1645 = t1289 * t1411;
t1644 = t1289 * t1416;
t1642 = t1326 * t1409;
t1641 = t1326 * t1414;
t1616 = t1412 * t1680;
t1626 = t1402 * t1417;
t1392 = t1616 * t1626;
t1373 = t1392 + t1588;
t1635 = t1373 * t1412;
t1634 = t1373 * t1417;
t1374 = -t1392 + t1588;
t1633 = t1374 * t1412;
t1632 = t1374 * t1417;
t1627 = t1402 * t1680;
t1619 = t1409 * t1142;
t1618 = t1411 * t1205;
t1617 = t1411 * t1307;
t1615 = t1412 * t1366;
t1614 = t1416 * t1205;
t1613 = t1417 * t1366;
t1403 = t1412 ^ 2;
t1404 = t1417 ^ 2;
t1610 = t1403 + t1404;
t1605 = qJD(1) * t1629;
t1602 = t1403 * t1627;
t1601 = t1404 * t1627;
t1600 = t1410 * t1222;
t1599 = t1415 * t1222;
t1144 = -t1284 * qJD(6) + t1409 * t1239 + t1414 * t1305;
t1596 = -t1324 - t1679;
t1595 = qJ(5) * t1410 + pkin(3);
t1592 = -t1397 + t1659;
t928 = t1415 * t1028 - t1410 * t1611;
t1591 = -t1414 * t1239 + t1409 * t1305;
t1369 = -t1393 * t1413 - t1418 * t1394;
t1391 = qJDD(1) * t1418 - t1413 * t1680;
t1586 = -pkin(8) * t1391 - g(3) * t1413;
t1581 = 0.2e1 * qJD(3) + t1589;
t1372 = -t1602 - t1396;
t1342 = -t1372 * t1412 - t1632;
t1579 = pkin(9) * t1342 - t1615;
t1379 = -t1396 - t1601;
t1346 = t1379 * t1417 - t1635;
t1578 = pkin(9) * t1346 + t1613;
t1304 = -t1552 - t1351;
t1229 = t1304 * t1416 - t1694;
t1577 = pkin(10) * t1229 + t1614;
t1313 = -t1352 - t1552;
t1245 = -t1313 * t1411 + t1644;
t1576 = pkin(10) * t1245 - t1618;
t808 = t1410 * t823 + t1415 * t948;
t1574 = t1411 * t808 - t1416 * t824;
t807 = t1410 * t948 - t1415 * t823;
t762 = -t1405 * t807 + t1407 * t1574;
t777 = t1411 * t824 + t1416 * t808;
t1573 = t1412 * t777 + t1417 * t762;
t1008 = t1333 * t1594 + t1429;
t1438 = t1350 * t1676 + t1491;
t978 = -t1438 + t1664;
t901 = t1410 * t1479 + t1415 * t978;
t1561 = -t1008 * t1416 + t1411 * t901;
t900 = t1410 * t978 - t1415 * t1479;
t826 = -t1405 * t900 + t1407 * t1561;
t871 = t1008 * t1411 + t1416 * t901;
t1572 = t1412 * t871 + t1417 * t826;
t1553 = -t1119 * t1416 + t1411 * t928;
t927 = t1028 * t1410 + t1415 * t1611;
t850 = -t1405 * t927 + t1407 * t1553;
t911 = t1119 * t1411 + t1416 * t928;
t1571 = t1412 * t911 + t1417 * t850;
t1441 = (-qJD(6) + t1326) * t1286 - t1591;
t1489 = t1144 + t1646;
t1025 = t1409 * t1489 + t1414 * t1441;
t1023 = t1409 * t1441 - t1414 * t1489;
t1177 = -t1282 - t1679;
t980 = t1023 * t1410 + t1177 * t1415;
t1559 = -t1025 * t1416 + t1411 * t980;
t979 = -t1023 * t1415 + t1177 * t1410;
t874 = -t1405 * t979 + t1407 * t1559;
t917 = t1025 * t1411 + t1416 * t980;
t1570 = t1412 * t917 + t1417 * t874;
t1111 = (qJD(6) + t1326) * t1286 + t1591;
t1490 = t1144 - t1646;
t1024 = t1111 * t1414 + t1409 * t1490;
t1022 = t1111 * t1409 - t1414 * t1490;
t1221 = -t1282 + t1679;
t993 = -t1022 * t1410 + t1221 * t1415;
t1560 = t1024 * t1416 + t1411 * t993;
t992 = t1022 * t1415 + t1221 * t1410;
t879 = -t1405 * t992 + t1407 * t1560;
t922 = -t1024 * t1411 + t1416 * t993;
t1569 = t1412 * t922 + t1417 * t879;
t1203 = -t1324 - t1282;
t1079 = t1409 * t1203 + t1710;
t1000 = -t1079 * t1415 + t1111 * t1410;
t1001 = t1079 * t1410 + t1111 * t1415;
t1080 = t1203 * t1414 - t1714;
t1551 = t1001 * t1411 - t1080 * t1416;
t894 = -t1405 * t1000 + t1407 * t1551;
t943 = t1001 * t1416 + t1080 * t1411;
t1568 = t1412 * t943 + t1417 * t894;
t1086 = t1414 * t1596 - t1619;
t1005 = -t1086 * t1415 + t1410 * t1490;
t1006 = t1086 * t1410 + t1415 * t1490;
t1087 = -t1409 * t1596 - t1654;
t1550 = t1006 * t1411 - t1087 * t1416;
t896 = -t1405 * t1005 + t1407 * t1550;
t952 = t1006 * t1416 + t1087 * t1411;
t1567 = t1412 * t952 + t1417 * t896;
t1246 = t1282 - t1324;
t1103 = -t1246 * t1409 - t1654;
t1016 = t1103 * t1415 + t1410 * t1441;
t1018 = -t1103 * t1410 + t1415 * t1441;
t1105 = -t1246 * t1414 + t1619;
t1549 = t1018 * t1411 + t1105 * t1416;
t904 = -t1405 * t1016 + t1407 * t1549;
t957 = t1018 * t1416 - t1105 * t1411;
t1566 = t1412 * t957 + t1417 * t904;
t1247 = t1324 - t1679;
t1102 = -t1247 * t1414 - t1714;
t1017 = t1415 * t1102 + t1410 * t1489;
t1019 = -t1410 * t1102 + t1415 * t1489;
t1104 = t1247 * t1409 - t1710;
t1548 = t1019 * t1411 + t1104 * t1416;
t905 = -t1405 * t1017 + t1407 * t1548;
t958 = t1019 * t1416 - t1104 * t1411;
t1565 = t1412 * t958 + t1417 * t905;
t1143 = -qJD(6) * t1286 - t1591;
t1106 = -t1143 * t1414 - t1284 * t1642;
t1062 = t1106 * t1415 - t1600;
t1064 = -t1106 * t1410 - t1599;
t1107 = t1143 * t1409 - t1284 * t1641;
t1538 = t1064 * t1411 + t1107 * t1416;
t936 = -t1405 * t1062 + t1407 * t1538;
t990 = t1064 * t1416 - t1107 * t1411;
t1564 = t1412 * t990 + t1417 * t936;
t1108 = -t1144 * t1409 - t1286 * t1641;
t1063 = t1108 * t1415 + t1600;
t1065 = -t1108 * t1410 + t1599;
t1109 = -t1144 * t1414 + t1286 * t1642;
t1537 = t1065 * t1411 + t1109 * t1416;
t937 = -t1405 * t1063 + t1407 * t1537;
t991 = t1065 * t1416 - t1109 * t1411;
t1563 = t1412 * t991 + t1417 * t937;
t1161 = (t1284 * t1409 + t1286 * t1414) * t1326;
t1125 = -t1161 * t1410 + t1236 * t1415;
t1162 = (t1284 * t1414 - t1286 * t1409) * t1326;
t1054 = t1125 * t1416 - t1162 * t1411;
t1124 = t1161 * t1415 + t1236 * t1410;
t1528 = t1125 * t1411 + t1162 * t1416;
t982 = -t1405 * t1124 + t1407 * t1528;
t1558 = t1054 * t1412 + t1417 * t982;
t1195 = (-qJD(4) + t1350) * t1331 + t1427;
t1098 = t1195 * t1410 - t1739;
t1066 = t1098 * t1416 - t1730;
t1094 = -t1195 * t1415 - t1741;
t1532 = t1098 * t1411 + t1729;
t988 = -t1405 * t1094 + t1407 * t1532;
t1557 = t1066 * t1412 + t1417 * t988;
t1101 = -t1198 * t1410 - t1739;
t1067 = t1101 * t1416 - t1730;
t1097 = t1198 * t1415 - t1741;
t1529 = t1101 * t1411 + t1729;
t989 = -t1405 * t1097 + t1407 * t1529;
t1556 = t1067 * t1412 + t1417 * t989;
t1099 = -t1194 * t1410 - t1653;
t1076 = t1099 * t1416 - t1713;
t1095 = t1194 * t1415 - t1737;
t1531 = t1099 * t1411 + t1709;
t998 = -t1405 * t1095 + t1407 * t1531;
t1555 = t1076 * t1412 + t1417 * t998;
t1100 = t1199 * t1410 - t1653;
t1077 = t1100 * t1416 - t1713;
t1096 = -t1199 * t1415 - t1737;
t1530 = t1100 * t1411 + t1709;
t999 = -t1405 * t1096 + t1407 * t1530;
t1554 = t1077 * t1412 + t1417 * t999;
t1524 = -t1416 * t1145 + t1411 * t1146;
t1035 = t1405 * t1205 + t1407 * t1524;
t1061 = t1145 * t1411 + t1146 * t1416;
t1545 = t1035 * t1417 + t1061 * t1412;
t1516 = t1198 * t1416 + t1769;
t1045 = t1407 * t1516 - t1766;
t1090 = -t1198 * t1411 + t1768;
t1542 = t1045 * t1417 + t1090 * t1412;
t1515 = t1195 * t1416 - t1769;
t1046 = t1407 * t1515 + t1766;
t1091 = -t1195 * t1411 - t1768;
t1541 = t1046 * t1417 + t1091 * t1412;
t1283 = -t1351 - t1352;
t1262 = t1337 + t1307;
t1432 = t1356 * t1589 - t1580;
t1506 = -t1262 * t1416 + t1411 * t1432;
t1139 = -t1405 * t1283 + t1407 * t1506;
t1181 = t1262 * t1411 + t1416 * t1432;
t1525 = t1139 * t1417 + t1181 * t1412;
t1319 = t1352 - t1351;
t1257 = t1356 * t1581 + t1580;
t1507 = -t1257 * t1411 + t1261 * t1416;
t1154 = -t1405 * t1319 + t1407 * t1507;
t1180 = -t1257 * t1416 - t1261 * t1411;
t1521 = t1154 * t1417 + t1180 * t1412;
t1502 = t1304 * t1411 + t1693;
t1160 = -t1405 * t1257 + t1407 * t1502;
t1518 = t1160 * t1417 + t1229 * t1412;
t1260 = -t1354 * t1581 + t1425;
t1505 = t1313 * t1416 + t1645;
t1164 = -t1405 * t1260 + t1407 * t1505;
t1517 = t1164 * t1417 + t1245 * t1412;
t1336 = -t1352 + t1552;
t1503 = t1336 * t1416 + t1694;
t1175 = -t1405 * t1262 + t1407 * t1503;
t1248 = -t1336 * t1411 + t1693;
t1512 = t1175 * t1417 + t1248 * t1412;
t1335 = t1351 - t1552;
t1504 = t1335 * t1411 - t1644;
t1176 = -t1405 * t1432 + t1407 * t1504;
t1249 = t1335 * t1416 + t1645;
t1511 = t1176 * t1417 + t1249 * t1412;
t1488 = t1411 * t1582;
t1211 = t1306 * t1620 + (t1405 * t1356 + t1407 * t1488) * t1354;
t1451 = t1416 * t1337;
t1255 = -t1411 * t1306 + t1451;
t1510 = t1211 * t1417 + t1255 * t1412;
t1487 = t1416 * t1582;
t1213 = t1407 * t1617 + (-t1405 * t1354 + t1407 * t1487) * t1356;
t1452 = t1411 * t1486;
t1256 = t1416 * t1307 - t1452;
t1509 = t1213 * t1417 + t1256 * t1412;
t1254 = t1405 * t1435 + t1407 * t1690;
t1280 = -t1451 + t1452;
t1508 = t1254 * t1417 + t1280 * t1412;
t1434 = -pkin(1) * t1680 + t1440;
t1340 = t1412 * t1434 + (-t1433 + t1665) * t1417;
t1341 = t1412 * t1433 + t1417 * t1434 - t1398;
t1501 = -t1417 * t1340 + t1412 * t1341;
t1287 = t1340 * t1412 + t1341 * t1417;
t1383 = t1397 * t1603;
t1361 = t1383 + t1375;
t1382 = t1397 * t1604;
t1364 = -t1382 + t1575;
t1500 = t1361 * t1417 + t1364 * t1412;
t1362 = -t1383 + t1375;
t1363 = t1382 + t1575;
t1499 = -t1362 * t1417 + t1363 * t1412;
t1498 = t1372 * t1417 - t1633;
t1377 = t1396 - t1602;
t1497 = t1377 * t1417 + t1635;
t1496 = t1379 * t1412 + t1634;
t1378 = -t1396 + t1601;
t1495 = t1378 * t1412 + t1632;
t1368 = t1393 * t1418 - t1413 * t1394;
t1493 = t1406 * t1588;
t778 = pkin(5) * t948 - t1675 * t824;
t785 = pkin(5) * t823 - qJ(5) * t824;
t745 = -pkin(11) * t807 - t1410 * t778 + t1415 * t785;
t763 = -pkin(3) * t807 - qJ(5) * t948 + t1675 * t823;
t1462 = pkin(10) * t777 + t1411 * t745 + t1416 * t763;
t741 = -pkin(3) * t824 + pkin(11) * t808 + t1410 * t785 + t1415 * t778;
t761 = t1405 * t1574 + t1407 * t807;
t725 = -pkin(2) * t761 - t1405 * t741 + t1407 * t1462;
t727 = -t1411 * t763 + t1416 * t745 + (-t1405 * t761 - t1407 * t762) * pkin(10);
t744 = -t1412 * t762 + t1417 * t777;
t1475 = pkin(9) * t744 + t1412 * t727 + t1417 * t725;
t806 = pkin(5) * t1177 - t1025 * t1675 - t824;
t926 = pkin(5) * t1023 - qJ(5) * t1025;
t788 = -pkin(11) * t979 - t1410 * t806 + t1415 * t926;
t795 = -pkin(3) * t979 - qJ(5) * t1177 + t1023 * t1675 + t823;
t1461 = pkin(10) * t917 + t1411 * t788 + t1416 * t795;
t783 = -pkin(3) * t1025 + pkin(11) * t980 + t1410 * t926 + t1415 * t806;
t873 = t1405 * t1559 + t1407 * t979;
t743 = -pkin(2) * t873 - t1405 * t783 + t1407 * t1461;
t747 = -t1411 * t795 + t1416 * t788 + (-t1405 * t873 - t1407 * t874) * pkin(10);
t827 = -t1412 * t874 + t1417 * t917;
t1474 = pkin(9) * t827 + t1412 * t747 + t1417 * t743;
t852 = pkin(5) * t1079 - qJ(5) * t1080 + t1593;
t880 = pkin(5) * t1111 - t1080 * t1675 + t1660;
t803 = -pkin(11) * t1000 - t1410 * t880 + t1415 * t852;
t848 = -pkin(3) * t1000 - qJ(5) * t1111 + t1079 * t1675 - t1662;
t1460 = pkin(10) * t943 + t1411 * t803 + t1416 * t848;
t799 = -pkin(3) * t1080 + pkin(11) * t1001 + t1410 * t852 + t1415 * t880;
t893 = t1407 * t1000 + t1405 * t1551;
t749 = -pkin(2) * t893 - t1405 * t799 + t1407 * t1460;
t765 = -t1411 * t848 + t1416 * t803 + (-t1405 * t893 - t1407 * t894) * pkin(10);
t847 = -t1412 * t894 + t1417 * t943;
t1473 = pkin(9) * t847 + t1412 * t765 + t1417 * t749;
t855 = pkin(5) * t1086 - qJ(5) * t1087 - t884;
t882 = pkin(5) * t1490 - t1087 * t1675 - t1662;
t805 = -pkin(11) * t1005 - t1410 * t882 + t1415 * t855;
t853 = -pkin(3) * t1005 - qJ(5) * t1490 + t1086 * t1675 - t1660;
t1459 = pkin(10) * t952 + t1411 * t805 + t1416 * t853;
t801 = -pkin(3) * t1087 + pkin(11) * t1006 + t1410 * t855 + t1415 * t882;
t895 = t1407 * t1005 + t1405 * t1550;
t751 = -pkin(2) * t895 - t1405 * t801 + t1407 * t1459;
t766 = -t1411 * t853 + t1416 * t805 + (-t1405 * t895 - t1407 * t896) * pkin(10);
t851 = -t1412 * t896 + t1417 * t952;
t1472 = pkin(9) * t851 + t1412 * t766 + t1417 * t751;
t834 = -pkin(3) * t900 + pkin(4) * t1479 - qJ(5) * t978;
t844 = -pkin(11) * t900 + (-qJ(5) * t1415 + t1671) * t1008;
t1458 = pkin(10) * t871 + t1411 * t844 + t1416 * t834;
t825 = t1405 * t1561 + t1407 * t900;
t829 = pkin(11) * t901 + (-t1595 - t1670) * t1008;
t756 = -pkin(2) * t825 - t1405 * t829 + t1407 * t1458;
t760 = -t1411 * t834 + t1416 * t844 + (-t1405 * t825 - t1407 * t826) * pkin(10);
t796 = -t1412 * t826 + t1417 * t871;
t1471 = pkin(9) * t796 + t1412 * t760 + t1417 * t756;
t1437 = pkin(10) * t911 + (-pkin(11) * t1411 - t1672) * t927;
t849 = t1405 * t1553 + t1407 * t927;
t912 = -pkin(3) * t1119 + pkin(11) * t928;
t782 = -pkin(2) * t849 - t1405 * t912 + t1407 * t1437;
t784 = (-pkin(11) * t1416 + t1673) * t927 + (-t1405 * t849 - t1407 * t850) * pkin(10);
t819 = -t1412 * t850 + t1417 * t911;
t1470 = pkin(9) * t819 + t1412 * t784 + t1417 * t782;
t1011 = -pkin(3) * t1094 + pkin(4) * t1195 + qJ(5) * t1190;
t961 = pkin(4) * t1243 + t978;
t963 = qJ(5) * t1243 + t1479;
t877 = -pkin(11) * t1094 - t1410 * t961 + t1415 * t963;
t1448 = pkin(10) * t1066 + t1011 * t1416 + t1411 * t877;
t872 = pkin(11) * t1098 + t1410 * t963 + t1415 * t961 + t1742;
t986 = t1407 * t1094 + t1405 * t1532;
t794 = -pkin(2) * t986 - t1405 * t872 + t1407 * t1448;
t820 = -t1411 * t1011 + t1416 * t877 + (-t1405 * t986 - t1407 * t988) * pkin(10);
t932 = t1066 * t1417 - t1412 * t988;
t1469 = pkin(9) * t932 + t1412 * t820 + t1417 * t794;
t929 = pkin(4) * t1215 + qJ(5) * t1250 - t1479 + t1757;
t1426 = t1333 * t1676 + t1429;
t974 = (t1191 + t1639) * pkin(4) + t1426;
t931 = qJ(5) * t1653 - t1410 * t974 + t1756;
t1455 = t1411 * t931 + t1416 * t929 + t1775;
t923 = t1191 * t1595 + t1415 * t974 + t1755;
t810 = -t1405 * t923 + t1407 * t1455 - t1785;
t828 = -t1411 * t929 + t1416 * t931 - t1791;
t1468 = t1412 * t828 + t1417 * t810 - t1797;
t910 = -pkin(11) * t1097 - t927;
t1439 = pkin(10) * t1067 - t1097 * t1672 + t1411 * t910;
t897 = pkin(11) * t1101 + t1742 + t928;
t987 = t1407 * t1097 + t1405 * t1529;
t812 = -pkin(2) * t987 - t1405 * t897 + t1407 * t1439;
t833 = t1097 * t1673 + t1416 * t910 + (-t1405 * t987 - t1407 * t989) * pkin(10);
t933 = t1067 * t1417 - t1412 * t989;
t1467 = pkin(9) * t933 + t1412 * t833 + t1417 * t812;
t930 = -t1772 - pkin(4) * t1266 + (-t1689 - t1305) * qJ(5) + t1438;
t973 = -pkin(4) * t1639 - qJ(5) * t1199 - t1426;
t938 = t1199 * t1671 + t1415 * t973 - t1771;
t1454 = t1411 * t938 + t1416 * t930 - t1780;
t924 = -t1770 + t1410 * t973 - (pkin(3) + t1670) * t1199;
t814 = -t1405 * t924 + t1407 * t1454 + t1793;
t831 = -t1411 * t930 + t1416 * t938 + t1796;
t1466 = t1412 * t831 + t1417 * t814 + t1803;
t1002 = -pkin(3) * t1191 - t1655 - t1755;
t1050 = t1656 - t1756;
t972 = -t1611 - t1757;
t1447 = t1050 * t1411 + t1416 * t972 - t1775;
t842 = -t1405 * t1002 + t1407 * t1447 + t1785;
t865 = t1416 * t1050 - t1411 * t972 + t1791;
t1465 = t1412 * t865 + t1417 * t842 + t1797;
t1007 = pkin(3) * t1199 + t1656 + t1770;
t1053 = t1655 + t1771;
t977 = t1028 + t1772;
t1446 = t1053 * t1411 + t1416 * t977 + t1780;
t846 = -t1405 * t1007 + t1407 * t1446 - t1793;
t866 = t1416 * t1053 - t1411 * t977 - t1796;
t1464 = t1412 * t866 + t1417 * t846 - t1803;
t1034 = -t1407 * t1205 + t1405 * t1524;
t939 = (-t1034 * t1405 - t1035 * t1407) * pkin(10);
t949 = -t1035 * t1412 + t1061 * t1417;
t950 = -pkin(2) * t1034 + t1061 * t1666;
t1463 = pkin(9) * t949 + t1412 * t939 + t1417 * t950;
t1078 = -t1139 * t1412 + t1181 * t1417;
t1138 = t1407 * t1283 + t1405 * t1506;
t964 = (-t1138 * t1405 - t1139 * t1407) * pkin(10) - t1524;
t1442 = pkin(10) * t1181 + t1061;
t971 = -pkin(2) * t1138 + t1407 * t1442;
t1456 = pkin(9) * t1078 + t1412 * t964 + t1417 * t971;
t1159 = t1407 * t1257 + t1405 * t1502;
t1004 = -pkin(2) * t1159 + t1405 * t1145 + t1407 * t1577;
t1040 = -t1618 + (-t1159 * t1405 - t1160 * t1407) * pkin(10);
t1118 = -t1160 * t1412 + t1229 * t1417;
t1445 = pkin(9) * t1118 + t1004 * t1417 + t1040 * t1412;
t1163 = t1407 * t1260 + t1405 * t1505;
t1010 = -pkin(2) * t1163 + t1405 * t1146 + t1407 * t1576;
t1049 = -t1614 + (-t1163 * t1405 - t1164 * t1407) * pkin(10);
t1126 = -t1164 * t1412 + t1245 * t1417;
t1444 = pkin(9) * t1126 + t1010 * t1417 + t1049 * t1412;
t1320 = t1362 * t1412 + t1363 * t1417;
t1443 = pkin(9) * t1320 + t1287;
t1401 = t1406 * t1402;
t1390 = t1413 * qJDD(1) + t1418 * t1680;
t1381 = t1610 * t1627;
t1380 = (t1403 - t1404) * t1627;
t1376 = -pkin(8) * t1390 + g(3) * t1418;
t1365 = t1610 * t1605;
t1360 = (t1609 + (qJD(2) + t1397) * t1657) * t1406;
t1358 = t1375 * t1417 - t1403 * t1605;
t1357 = -t1404 * t1605 - t1412 * t1575;
t1345 = t1378 * t1417 - t1633;
t1344 = -t1377 * t1412 + t1634;
t1339 = (t1375 * t1408 + (qJD(1) * t1401 + t1408 * t1629) * t1657) * t1412;
t1338 = (-t1401 * t1616 + (-t1395 + (-t1397 * t1658 + t1608) * t1406) * t1408) * t1417;
t1321 = -t1361 * t1412 + t1364 * t1417;
t1317 = t1406 * t1364 + t1408 * t1496;
t1316 = -t1406 * t1363 + t1408 * t1495;
t1315 = -t1406 * t1362 + t1408 * t1497;
t1314 = -t1408 * t1364 + t1406 * t1496;
t1312 = -t1406 * t1360 + t1408 * t1498;
t1311 = t1408 * t1360 + t1406 * t1498;
t1310 = -t1406 * t1380 + t1408 * t1500;
t1309 = t1406 * t1381 + t1408 * t1499;
t1308 = -t1408 * t1381 + t1406 * t1499;
t1279 = -t1413 * t1317 + t1346 * t1418;
t1278 = t1317 * t1418 + t1413 * t1346;
t1269 = -t1413 * t1312 + t1342 * t1418;
t1268 = t1312 * t1418 + t1413 * t1342;
t1264 = t1406 * t1366 + t1408 * t1501;
t1263 = -t1408 * t1366 + t1406 * t1501;
t1253 = t1407 * t1607 + (t1690 - t1480) * t1405;
t1252 = -t1413 * t1309 + t1320 * t1418;
t1251 = t1309 * t1418 + t1413 * t1320;
t1244 = -t1615 + (-t1314 * t1406 - t1317 * t1408) * pkin(9);
t1228 = -t1613 + (-t1311 * t1406 - t1312 * t1408) * pkin(9);
t1227 = -pkin(1) * t1314 + t1406 * t1340 + t1408 * t1578;
t1220 = -pkin(1) * t1311 + t1406 * t1341 + t1408 * t1579;
t1212 = t1405 * t1617 + (t1407 * t1354 + t1405 * t1487) * t1356;
t1210 = t1306 * t1624 + (-t1407 * t1356 + t1405 * t1488) * t1354;
t1208 = -pkin(1) * t1263 + t1287 * t1668;
t1207 = -t1413 * t1264 + t1287 * t1418;
t1206 = t1264 * t1418 + t1413 * t1287;
t1204 = -pkin(1) * t1308 + t1408 * t1443;
t1202 = -t1254 * t1412 + t1280 * t1417;
t1201 = (-t1263 * t1406 - t1264 * t1408) * pkin(9);
t1200 = (-t1308 * t1406 - t1309 * t1408) * pkin(9) - t1501;
t1174 = t1405 * t1504 + t1407 * t1432;
t1173 = t1407 * t1262 + t1405 * t1503;
t1153 = t1407 * t1319 + t1405 * t1507;
t1148 = -t1213 * t1412 + t1256 * t1417;
t1147 = -t1211 * t1412 + t1255 * t1417;
t1133 = -t1406 * t1253 + t1408 * t1508;
t1132 = -t1176 * t1412 + t1249 * t1417;
t1131 = -t1175 * t1412 + t1248 * t1417;
t1089 = -t1406 * t1212 + t1408 * t1509;
t1088 = -t1406 * t1210 + t1408 * t1510;
t1081 = -t1154 * t1412 + t1180 * t1417;
t1058 = -t1406 * t1174 + t1408 * t1511;
t1057 = -t1406 * t1173 + t1408 * t1512;
t1056 = -t1406 * t1163 + t1408 * t1517;
t1055 = t1408 * t1163 + t1406 * t1517;
t1052 = -t1406 * t1159 + t1408 * t1518;
t1051 = t1408 * t1159 + t1406 * t1518;
t1042 = t1405 * t1515 - t1763;
t1041 = t1405 * t1516 + t1763;
t1033 = -t1406 * t1153 + t1408 * t1521;
t1021 = -t1406 * t1138 + t1408 * t1525;
t1020 = t1408 * t1138 + t1406 * t1525;
t1009 = pkin(2) * t1164 - t1407 * t1146 + t1405 * t1576;
t1003 = pkin(2) * t1160 - t1407 * t1145 + t1405 * t1577;
t997 = t1407 * t1096 + t1405 * t1530;
t996 = t1407 * t1095 + t1405 * t1531;
t985 = -t1413 * t1056 + t1126 * t1418;
t984 = t1056 * t1418 + t1413 * t1126;
t981 = t1407 * t1124 + t1405 * t1528;
t976 = -t1413 * t1052 + t1118 * t1418;
t975 = t1052 * t1418 + t1413 * t1118;
t970 = pkin(2) * t1139 + t1405 * t1442;
t967 = -t1046 * t1412 + t1091 * t1417;
t966 = -t1045 * t1412 + t1090 * t1417;
t954 = -t1413 * t1021 + t1078 * t1418;
t953 = t1021 * t1418 + t1413 * t1078;
t951 = pkin(2) * t1035 + t1061 * t1667;
t941 = t1077 * t1417 - t1412 * t999;
t940 = t1076 * t1417 - t1412 * t998;
t935 = t1407 * t1063 + t1405 * t1537;
t934 = t1407 * t1062 + t1405 * t1538;
t925 = t1054 * t1417 - t1412 * t982;
t919 = -t1406 * t1042 + t1408 * t1541;
t918 = -t1406 * t1041 + t1408 * t1542;
t903 = t1407 * t1017 + t1405 * t1548;
t902 = t1407 * t1016 + t1405 * t1549;
t899 = -t1406 * t1034 + t1408 * t1545;
t898 = t1408 * t1034 + t1406 * t1545;
t892 = -t1406 * t997 + t1408 * t1554;
t891 = -t1406 * t996 + t1408 * t1555;
t890 = -t1412 * t937 + t1417 * t991;
t889 = -t1412 * t936 + t1417 * t990;
t888 = -t1406 * t987 + t1408 * t1556;
t887 = -t1406 * t986 + t1408 * t1557;
t886 = t1406 * t1556 + t1408 * t987;
t885 = t1406 * t1557 + t1408 * t986;
t881 = -t1406 * t981 + t1408 * t1558;
t878 = t1405 * t1560 + t1407 * t992;
t876 = -t1412 * t1010 + t1417 * t1049 + (-t1055 * t1406 - t1056 * t1408) * pkin(9);
t875 = -t1412 * t1004 + t1417 * t1040 + (-t1051 * t1406 - t1052 * t1408) * pkin(9);
t860 = -t1412 * t905 + t1417 * t958;
t859 = -t1412 * t904 + t1417 * t957;
t858 = -pkin(1) * t1055 - t1406 * t1009 + t1408 * t1444;
t857 = -t1413 * t899 + t1418 * t949;
t856 = t1413 * t949 + t1418 * t899;
t854 = -pkin(1) * t1051 - t1406 * t1003 + t1408 * t1445;
t845 = t1407 * t1007 + t1405 * t1446 + t1792;
t843 = -t1412 * t971 + t1417 * t964 + (-t1020 * t1406 - t1021 * t1408) * pkin(9);
t841 = t1407 * t1002 + t1405 * t1447 - t1784;
t840 = -t1406 * t935 + t1408 * t1563;
t839 = -t1406 * t934 + t1408 * t1564;
t838 = -t1413 * t888 + t1418 * t933;
t837 = -t1413 * t887 + t1418 * t932;
t836 = t1413 * t933 + t1418 * t888;
t835 = t1413 * t932 + t1418 * t887;
t832 = -t1412 * t879 + t1417 * t922;
t830 = -pkin(1) * t1020 - t1406 * t970 + t1408 * t1456;
t822 = -t1406 * t903 + t1408 * t1565;
t821 = -t1406 * t902 + t1408 * t1566;
t818 = -t1406 * t895 + t1408 * t1567;
t817 = t1406 * t1567 + t1408 * t895;
t816 = -t1406 * t893 + t1408 * t1568;
t815 = t1406 * t1568 + t1408 * t893;
t813 = t1405 * t1454 + t1407 * t924 - t1792;
t811 = pkin(2) * t989 + t1405 * t1439 + t1407 * t897;
t809 = t1405 * t1455 + t1407 * t923 + t1784;
t804 = -t1412 * t950 + t1417 * t939 + (-t1406 * t898 - t1408 * t899) * pkin(9);
t802 = -t1406 * t878 + t1408 * t1569;
t800 = -pkin(1) * t898 - t1406 * t951 + t1408 * t1463;
t798 = -t1406 * t873 + t1408 * t1570;
t797 = t1406 * t1570 + t1408 * t873;
t793 = pkin(2) * t988 + t1405 * t1448 + t1407 * t872;
t792 = -t1406 * t849 + t1408 * t1571;
t791 = t1406 * t1571 + t1408 * t849;
t790 = -t1413 * t818 + t1418 * t851;
t789 = t1413 * t851 + t1418 * t818;
t787 = -t1413 * t816 + t1418 * t847;
t786 = t1413 * t847 + t1418 * t816;
t781 = pkin(2) * t850 + t1405 * t1437 + t1407 * t912;
t780 = -t1412 * t846 + t1417 * t866 - t1813;
t779 = -t1412 * t842 + t1417 * t865 + t1810;
t776 = -t1413 * t798 + t1418 * t827;
t775 = t1413 * t827 + t1418 * t798;
t774 = -t1406 * t825 + t1408 * t1572;
t773 = t1406 * t1572 + t1408 * t825;
t772 = -t1406 * t845 + t1408 * t1464 - t1812;
t771 = -t1406 * t841 + t1408 * t1465 + t1806;
t770 = -t1412 * t814 + t1417 * t831 + t1813;
t769 = -t1413 * t792 + t1418 * t819;
t768 = t1413 * t819 + t1418 * t792;
t767 = -t1412 * t810 + t1417 * t828 - t1810;
t764 = -t1412 * t812 + t1417 * t833 + (-t1406 * t886 - t1408 * t888) * pkin(9);
t759 = -t1412 * t794 + t1417 * t820 + (-t1406 * t885 - t1408 * t887) * pkin(9);
t758 = -t1406 * t813 + t1408 * t1466 + t1812;
t757 = -t1406 * t809 + t1408 * t1468 - t1806;
t755 = pkin(2) * t826 + t1405 * t1458 + t1407 * t829;
t754 = -pkin(1) * t886 - t1406 * t811 + t1408 * t1467;
t753 = -t1413 * t774 + t1418 * t796;
t752 = t1413 * t796 + t1418 * t774;
t750 = pkin(2) * t896 + t1405 * t1459 + t1407 * t801;
t748 = pkin(2) * t894 + t1405 * t1460 + t1407 * t799;
t746 = -pkin(1) * t885 - t1406 * t793 + t1408 * t1469;
t742 = pkin(2) * t874 + t1405 * t1461 + t1407 * t783;
t740 = -t1412 * t782 + t1417 * t784 + (-t1406 * t791 - t1408 * t792) * pkin(9);
t739 = -pkin(1) * t791 - t1406 * t781 + t1408 * t1470;
t738 = -t1406 * t761 + t1408 * t1573;
t737 = t1406 * t1573 + t1408 * t761;
t736 = -t1412 * t751 + t1417 * t766 + (-t1406 * t817 - t1408 * t818) * pkin(9);
t735 = -t1412 * t749 + t1417 * t765 + (-t1406 * t815 - t1408 * t816) * pkin(9);
t734 = -t1412 * t756 + t1417 * t760 + (-t1406 * t773 - t1408 * t774) * pkin(9);
t733 = -pkin(1) * t817 - t1406 * t750 + t1408 * t1472;
t732 = -pkin(1) * t815 - t1406 * t748 + t1408 * t1473;
t731 = -t1412 * t743 + t1417 * t747 + (-t1406 * t797 - t1408 * t798) * pkin(9);
t730 = -t1413 * t738 + t1418 * t744;
t729 = t1413 * t744 + t1418 * t738;
t728 = -pkin(1) * t773 - t1406 * t755 + t1408 * t1471;
t726 = -pkin(1) * t797 - t1406 * t742 + t1408 * t1474;
t724 = pkin(2) * t762 + t1405 * t1462 + t1407 * t741;
t723 = -t1412 * t725 + t1417 * t727 + (-t1406 * t737 - t1408 * t738) * pkin(9);
t722 = -pkin(1) * t737 - t1406 * t724 + t1408 * t1475;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1390, -t1391, 0, t1369, 0, 0, 0, 0, 0, 0, t1279, t1269, t1252, t1207, 0, 0, 0, 0, 0, 0, t976, t985, t954, t857, 0, 0, 0, 0, 0, 0, t863, -t869, t838, t769, 0, 0, 0, 0, 0, 0, t837, -t863, t869, t753, 0, 0, 0, 0, 0, 0, t787, t790, t776, t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1391, -t1390, 0, t1368, 0, 0, 0, 0, 0, 0, t1278, t1268, t1251, t1206, 0, 0, 0, 0, 0, 0, t975, t984, t953, t856, 0, 0, 0, 0, 0, 0, -t862, t868, t836, t768, 0, 0, 0, 0, 0, 0, t835, t862, -t868, t752, 0, 0, 0, 0, 0, 0, t786, t789, t775, t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1314, t1311, t1308, t1263, 0, 0, 0, 0, 0, 0, t1051, t1055, t1020, t898, 0, 0, 0, 0, 0, 0, -t907, t914, t886, t791, 0, 0, 0, 0, 0, 0, t885, t907, -t914, t773, 0, 0, 0, 0, 0, 0, t815, t817, t797, t737; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1391, 0, -t1390, 0, t1586, -t1376, -t1368, -pkin(8) * t1368, -t1413 * t1339 + t1358 * t1418, -t1413 * t1310 + t1321 * t1418, -t1413 * t1315 + t1344 * t1418, -t1413 * t1338 + t1357 * t1418, -t1413 * t1316 + t1345 * t1418, t1418 * t1365 + t1413 * t1493, -pkin(8) * t1278 - t1413 * t1227 + t1244 * t1418, -pkin(8) * t1268 - t1413 * t1220 + t1228 * t1418, -pkin(8) * t1251 + t1200 * t1418 - t1413 * t1204, -pkin(8) * t1206 + t1201 * t1418 - t1413 * t1208, -t1413 * t1089 + t1148 * t1418, -t1413 * t1033 + t1081 * t1418, -t1413 * t1057 + t1131 * t1418, -t1413 * t1088 + t1147 * t1418, -t1413 * t1058 + t1132 * t1418, -t1413 * t1133 + t1202 * t1418, -pkin(8) * t975 - t1413 * t854 + t1418 * t875, -pkin(8) * t984 - t1413 * t858 + t1418 * t876, -pkin(8) * t953 - t1413 * t830 + t1418 * t843, -pkin(8) * t856 - t1413 * t800 + t1418 * t804, t1760, -t1413 * t891 + t1418 * t940, -t1413 * t918 + t1418 * t966, t1761, -t1809, t1744, -t1413 * t771 + t1418 * t779 + t1815, -t1413 * t772 + t1418 * t780 - t1817, -pkin(8) * t836 - t1413 * t754 + t1418 * t764, -pkin(8) * t768 - t1413 * t739 + t1418 * t740, t1744, -t1413 * t919 + t1418 * t967, t1809, t1760, -t1413 * t892 + t1418 * t941, t1761, -pkin(8) * t835 - t1413 * t746 + t1418 * t759, -t1413 * t757 + t1418 * t767 - t1815, -t1413 * t758 + t1418 * t770 + t1817, -pkin(8) * t752 - t1413 * t728 + t1418 * t734, -t1413 * t840 + t1418 * t890, -t1413 * t802 + t1418 * t832, -t1413 * t822 + t1418 * t860, -t1413 * t839 + t1418 * t889, -t1413 * t821 + t1418 * t859, -t1413 * t881 + t1418 * t925, -pkin(8) * t786 - t1413 * t732 + t1418 * t735, -pkin(8) * t789 - t1413 * t733 + t1418 * t736, -pkin(8) * t775 - t1413 * t726 + t1418 * t731, -pkin(8) * t729 - t1413 * t722 + t1418 * t723; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1390, 0, t1391, 0, t1376, t1586, t1369, pkin(8) * t1369, t1339 * t1418 + t1413 * t1358, t1310 * t1418 + t1413 * t1321, t1315 * t1418 + t1413 * t1344, t1338 * t1418 + t1413 * t1357, t1316 * t1418 + t1413 * t1345, t1413 * t1365 - t1418 * t1493, pkin(8) * t1279 + t1227 * t1418 + t1413 * t1244, pkin(8) * t1269 + t1220 * t1418 + t1413 * t1228, pkin(8) * t1252 + t1413 * t1200 + t1204 * t1418, pkin(8) * t1207 + t1413 * t1201 + t1208 * t1418, t1089 * t1418 + t1413 * t1148, t1033 * t1418 + t1413 * t1081, t1057 * t1418 + t1413 * t1131, t1088 * t1418 + t1413 * t1147, t1058 * t1418 + t1413 * t1132, t1133 * t1418 + t1413 * t1202, pkin(8) * t976 + t1413 * t875 + t1418 * t854, pkin(8) * t985 + t1413 * t876 + t1418 * t858, pkin(8) * t954 + t1413 * t843 + t1418 * t830, pkin(8) * t857 + t1413 * t804 + t1418 * t800, t1758, t1413 * t940 + t1418 * t891, t1413 * t966 + t1418 * t918, t1759, t1808, t1743, t1413 * t779 + t1418 * t771 + t1814, t1413 * t780 + t1418 * t772 - t1816, pkin(8) * t838 + t1413 * t764 + t1418 * t754, pkin(8) * t769 + t1413 * t740 + t1418 * t739, t1743, t1413 * t967 + t1418 * t919, -t1808, t1758, t1413 * t941 + t1418 * t892, t1759, pkin(8) * t837 + t1413 * t759 + t1418 * t746, t1413 * t767 + t1418 * t757 - t1814, t1413 * t770 + t1418 * t758 + t1816, pkin(8) * t753 + t1413 * t734 + t1418 * t728, t1413 * t890 + t1418 * t840, t1413 * t832 + t1418 * t802, t1413 * t860 + t1418 * t822, t1413 * t889 + t1418 * t839, t1413 * t859 + t1418 * t821, t1413 * t925 + t1418 * t881, pkin(8) * t787 + t1413 * t735 + t1418 * t732, pkin(8) * t790 + t1413 * t736 + t1418 * t733, pkin(8) * t776 + t1413 * t731 + t1418 * t726, pkin(8) * t730 + t1413 * t723 + t1418 * t722; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1393, t1394, 0, 0, (-qJD(1) * t1592 * t1626 + t1375 * t1406) * t1412, t1408 * t1380 + t1406 * t1500, t1408 * t1362 + t1406 * t1497, (t1402 * t1592 * t1658 + t1406 * t1575) * t1417, t1408 * t1363 + t1406 * t1495, t1408 * t1588, pkin(1) * t1317 - t1408 * t1340 + t1406 * t1578, pkin(1) * t1312 - t1408 * t1341 + t1406 * t1579, pkin(1) * t1309 + t1406 * t1443, pkin(1) * t1264 + t1287 * t1669, t1408 * t1212 + t1406 * t1509, t1408 * t1153 + t1406 * t1521, t1408 * t1173 + t1406 * t1512, t1408 * t1210 + t1406 * t1510, t1408 * t1174 + t1406 * t1511, t1408 * t1253 + t1406 * t1508, pkin(1) * t1052 + t1408 * t1003 + t1406 * t1445, pkin(1) * t1056 + t1408 * t1009 + t1406 * t1444, pkin(1) * t1021 + t1406 * t1456 + t1408 * t970, pkin(1) * t899 + t1406 * t1463 + t1408 * t951, t1748, t1406 * t1555 + t1408 * t996, t1408 * t1041 + t1406 * t1542, t1747, t1798, t1722, t1406 * t1465 + t1408 * t841 - t1805, t1406 * t1464 + t1408 * t845 + t1811, pkin(1) * t888 + t1406 * t1467 + t1408 * t811, pkin(1) * t792 + t1406 * t1470 + t1408 * t781, t1722, t1408 * t1042 + t1406 * t1541, -t1798, t1748, t1406 * t1554 + t1408 * t997, t1747, pkin(1) * t887 + t1406 * t1469 + t1408 * t793, t1406 * t1468 + t1408 * t809 + t1805, t1406 * t1466 + t1408 * t813 - t1811, pkin(1) * t774 + t1406 * t1471 + t1408 * t755, t1406 * t1563 + t1408 * t935, t1406 * t1569 + t1408 * t878, t1406 * t1565 + t1408 * t903, t1406 * t1564 + t1408 * t934, t1406 * t1566 + t1408 * t902, t1406 * t1558 + t1408 * t981, pkin(1) * t816 + t1406 * t1473 + t1408 * t748, pkin(1) * t818 + t1406 * t1472 + t1408 * t750, pkin(1) * t798 + t1406 * t1474 + t1408 * t742, pkin(1) * t738 + t1406 * t1475 + t1408 * t724;];
tauB_reg  = t1;
