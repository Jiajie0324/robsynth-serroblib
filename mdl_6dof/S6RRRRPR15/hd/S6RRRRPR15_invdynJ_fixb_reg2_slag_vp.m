% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR15_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR15_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR15_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:50:23
% EndTime: 2019-03-10 00:51:33
% DurationCPUTime: 41.08s
% Computational Cost: add. (44515->1086), mult. (127551->1421), div. (0->0), fcn. (107154->14), ass. (0->480)
t408 = sin(pkin(6));
t412 = sin(qJ(2));
t415 = cos(qJ(2));
t411 = sin(qJ(3));
t677 = cos(pkin(7));
t604 = t411 * t677;
t710 = cos(qJ(3));
t481 = -t412 * t604 + t415 * t710;
t325 = t481 * t408;
t307 = qJD(1) * t325;
t676 = sin(pkin(7));
t567 = t676 * t710;
t527 = qJD(3) * t567;
t495 = t527 - t307;
t678 = cos(pkin(6));
t621 = pkin(1) * t678;
t399 = t415 * t621;
t387 = qJD(1) * t399;
t520 = t408 * (-pkin(10) * t677 - pkin(9));
t498 = t412 * t520;
t289 = qJD(1) * t498 + t387;
t398 = t412 * t621;
t453 = t415 * t520 - t398;
t290 = t453 * qJD(1);
t598 = t415 * t676;
t496 = pkin(2) * t412 - pkin(10) * t598;
t641 = qJD(1) * t408;
t329 = t496 * t641;
t568 = t677 * t710;
t603 = t411 * t676;
t353 = pkin(2) * t568 - pkin(10) * t603;
t723 = t353 * qJD(3) - t710 * t289 - t290 * t604 - t329 * t603;
t201 = -t290 * t676 + t677 * t329;
t479 = t411 * t415 + t412 * t568;
t324 = t479 * t408;
t306 = qJD(1) * t324;
t750 = -t306 * pkin(3) + t307 * pkin(11) - t201 + (pkin(3) * t603 - pkin(11) * t567) * qJD(3);
t606 = t408 * t676;
t566 = qJD(1) * t606;
t531 = t412 * t566;
t749 = pkin(11) * t531 - t723;
t410 = sin(qJ(4));
t414 = cos(qJ(4));
t349 = t410 * t603 - t414 * t677;
t647 = qJD(4) * t349 + t410 * t531 - t414 * t495;
t355 = pkin(2) * t604 + pkin(10) * t567;
t722 = t355 * qJD(3) - t411 * t289 + t290 * t568 + t329 * t567;
t416 = cos(qJ(1));
t597 = t416 * t678;
t709 = sin(qJ(1));
t351 = t412 * t597 + t415 * t709;
t656 = t408 * t416;
t519 = t709 * t412 - t415 * t597;
t724 = t519 * t677;
t224 = -t351 * t710 + t411 * t724 + t603 * t656;
t607 = t408 * t677;
t733 = -t416 * t607 + t519 * t676;
t161 = t224 * t410 + t414 * t733;
t221 = t351 * t411 + t567 * t656 + t710 * t724;
t409 = sin(qJ(6));
t413 = cos(qJ(6));
t748 = t161 * t409 - t221 * t413;
t747 = t161 * t413 + t221 * t409;
t600 = t414 * t676;
t350 = t410 * t677 + t411 * t600;
t648 = -qJD(4) * t350 - t495 * t410 - t414 * t531;
t646 = pkin(3) * t531 + t722;
t333 = pkin(11) * t677 + t355;
t619 = t676 * pkin(2);
t334 = -pkin(3) * t567 - pkin(11) * t603 - t619;
t636 = qJD(4) * t414;
t637 = qJD(4) * t410;
t683 = -t333 * t636 - t334 * t637 + t749 * t410 + t414 * t750;
t744 = qJ(5) * t647 - t350 * qJD(5) + t646;
t562 = qJD(3) * t603;
t516 = t562 - t306;
t534 = t415 * t568;
t514 = t408 * t534;
t595 = t678 * qJD(1);
t537 = t595 + qJD(2);
t487 = t676 * t537;
t618 = t412 * t641;
t735 = t411 * t618 - t710 * t487;
t255 = -qJD(1) * t514 + t735;
t249 = qJD(4) + t255;
t162 = t224 * t414 - t410 * t733;
t639 = qJD(3) * t411;
t712 = pkin(4) + pkin(12);
t743 = -t683 + (-t639 * t676 + t306) * t712 - t647 * pkin(5);
t742 = -t648 * t712 + t744;
t684 = -t333 * t637 + t334 * t636 + t410 * t750 - t749 * t414;
t657 = t408 * t415;
t644 = pkin(9) * t657 + t398;
t338 = t644 * qJD(1);
t599 = t415 * t677;
t572 = t408 * t599;
t246 = t338 + (qJD(1) * t572 + t487) * pkin(10);
t458 = pkin(2) * t678 + t498;
t254 = qJD(2) * pkin(2) + qJD(1) * t458 + t387;
t602 = t412 * t676;
t491 = -pkin(2) * t415 - pkin(10) * t602 - pkin(1);
t302 = t491 * t641;
t127 = t710 * t246 + (t254 * t677 + t302 * t676) * t411;
t662 = t255 * t410;
t739 = -qJD(5) * t410 - t127 + (t637 + t662) * pkin(4);
t585 = t678 * qJDD(1);
t529 = t585 + qJDD(2);
t486 = t676 * t529;
t631 = qJD(1) * qJD(2);
t558 = t677 * t631;
t526 = t412 * t558;
t427 = (t408 * t526 - t486) * t411 + t735 * qJD(3);
t528 = qJD(3) * t568;
t470 = qJD(2) * t710 + t528;
t591 = qJDD(1) * t677;
t620 = t710 * t412;
t422 = t408 * (qJDD(1) * t620 + t415 * (qJD(1) * t470 + t411 * t591)) - t427;
t687 = -qJ(5) * t516 + qJD(5) * t567 - t684;
t673 = qJ(5) * t414;
t738 = t739 + t249 * (pkin(12) * t410 - t673);
t126 = -t411 * t246 + t254 * t568 + t302 * t567;
t120 = t410 * t126;
t480 = t411 * t599 + t620;
t467 = t480 * t408;
t474 = t411 * t487;
t257 = qJD(1) * t467 + t474;
t168 = pkin(3) * t257 + pkin(11) * t255;
t711 = pkin(5) + pkin(11);
t382 = t711 * t414;
t737 = qJD(4) * t382 - t120 - (-pkin(5) * t255 - t168) * t414 + t712 * t257;
t575 = t408 * t598;
t456 = -qJDD(1) * t575 + t529 * t677 + qJDD(3);
t565 = qJD(2) * t602;
t530 = t408 * t565;
t433 = qJD(1) * t530 + t456;
t182 = -t254 * t676 + t302 * t677;
t451 = t255 * pkin(3) - t257 * pkin(11) + t182;
t581 = pkin(9) * t618;
t557 = qJD(2) * t595;
t535 = pkin(1) * t557;
t577 = pkin(1) * t585;
t629 = qJDD(1) * t415;
t612 = t408 * t629;
t622 = pkin(9) * t612 + t412 * t577 + t415 * t535;
t252 = -qJD(2) * t581 + t622;
t174 = (t486 + (t415 * t591 - t526) * t408) * pkin(10) + t252;
t386 = t415 * t577;
t489 = -t412 * t535 + t386;
t613 = t415 * t631;
t630 = qJDD(1) * t412;
t507 = -t613 - t630;
t490 = t507 * pkin(9);
t185 = t529 * pkin(2) + ((-t412 * t591 - t415 * t558) * pkin(10) + t490) * t408 + t489;
t483 = qJD(2) * t496;
t227 = (qJD(1) * t483 + qJDD(1) * t491) * t408;
t478 = -t710 * t174 - t185 * t604 - t227 * t603 + t246 * t639 - t254 * t528 - t302 * t527;
t736 = pkin(11) * t433 + qJD(4) * t451 - t478;
t632 = t415 * t566 - qJD(3);
t461 = -t537 * t677 + t632;
t108 = -pkin(11) * t461 + t127;
t56 = t108 * t410 - t414 * t451;
t651 = qJD(5) + t56;
t569 = t678 * t709;
t482 = t416 * t412 + t415 * t569;
t734 = t482 * t676 + t709 * t607;
t429 = qJD(2) * t479 + qJD(3) * t480;
t144 = qJD(3) * t474 - qJDD(1) * t514 + t408 * (qJD(1) * t429 + t411 * t630) - t710 * t486;
t405 = t408 ^ 2;
t731 = 0.2e1 * t405;
t192 = t414 * t257 - t410 * t461;
t564 = qJD(3) * t604;
t615 = qJD(3) * t710;
t518 = t411 * t174 - t185 * t568 - t227 * t567 + t246 * t615 + t254 * t564 + t302 * t562;
t41 = -pkin(3) * t433 + t518;
t452 = t414 * t461;
t83 = qJD(4) * t452 + t257 * t637 - t410 * t433 - t414 * t422;
t423 = t83 * qJ(5) - t192 * qJD(5) + t41;
t638 = qJD(4) * t192;
t84 = t410 * t422 - t414 * t433 + t638;
t10 = t712 * t84 + t423;
t652 = pkin(5) * t192 + t651;
t32 = -t249 * t712 + t652;
t190 = t257 * t410 + t452;
t107 = pkin(3) * t461 - t126;
t424 = -t192 * qJ(5) + t107;
t45 = t190 * t712 + t424;
t16 = t32 * t413 - t409 * t45;
t141 = qJDD(4) + t144;
t115 = -t185 * t676 + t677 * t227;
t50 = t144 * pkin(3) - pkin(11) * t422 + t115;
t583 = t108 * t636 + t736 * t410 - t414 * t50;
t545 = qJDD(5) + t583;
t6 = -pkin(5) * t83 - t141 * t712 + t545;
t1 = qJD(6) * t16 + t413 * t10 + t409 * t6;
t187 = qJD(6) + t192;
t730 = -t16 * t187 + t1;
t17 = t32 * t409 + t413 * t45;
t2 = -qJD(6) * t17 - t409 * t10 + t413 * t6;
t729 = t17 * t187 + t2;
t228 = -t410 * t333 + t414 * t334;
t220 = pkin(4) * t567 - t228;
t169 = t350 * pkin(5) + pkin(12) * t567 + t220;
t332 = -pkin(3) * t677 - t353;
t449 = -t350 * qJ(5) + t332;
t183 = t349 * t712 + t449;
t98 = t169 * t413 - t183 * t409;
t728 = qJD(6) * t98 + t409 * t743 + t742 * t413;
t99 = t169 * t409 + t183 * t413;
t698 = -qJD(6) * t99 - t742 * t409 + t413 * t743;
t688 = pkin(5) * t648 - t687;
t634 = qJD(6) * t413;
t635 = qJD(6) * t409;
t33 = -t413 * t141 - t190 * t634 + t249 * t635 - t409 * t84;
t130 = -t413 * t190 + t249 * t409;
t586 = t130 * t187;
t727 = t33 - t586;
t132 = t190 * t409 + t249 * t413;
t34 = qJD(6) * t132 + t141 * t409 - t413 * t84;
t670 = t132 * t187;
t726 = -t34 + t670;
t666 = t192 * t249;
t725 = t84 - t666;
t721 = t482 * t677 - t709 * t606;
t720 = (qJDD(2) + 0.2e1 * t585) * t408;
t342 = t644 * qJD(2);
t57 = t414 * t108 + t410 * t451;
t49 = -t249 * qJ(5) - t57;
t705 = t190 * pkin(5);
t37 = -t49 - t705;
t82 = -qJDD(6) + t83;
t719 = t187 * t37 + t712 * t82;
t716 = t141 * t349 + t190 * t516 - t249 * t648 - t567 * t84;
t715 = t350 * t141 + t192 * t516 - t249 * t647 + t567 * t83;
t714 = t192 ^ 2;
t713 = t249 ^ 2;
t418 = qJD(1) ^ 2;
t708 = pkin(4) * t141;
t707 = pkin(11) * t141;
t706 = pkin(11) * t324;
t548 = t678 * t676;
t522 = t411 * t548;
t285 = t522 + t467;
t549 = t678 * t677;
t348 = t575 - t549;
t216 = t285 * t410 + t348 * t414;
t704 = t216 * pkin(12);
t703 = t221 * pkin(11);
t352 = -t412 * t569 + t415 * t416;
t225 = t352 * t411 + t710 * t721;
t702 = t225 * pkin(11);
t241 = t351 * t568 - t411 * t519;
t701 = t241 * pkin(11);
t243 = t352 * t568 - t411 * t482;
t700 = t243 * pkin(11);
t695 = t249 * t49;
t694 = t249 * t56;
t693 = t249 * t57;
t692 = t33 * t413;
t691 = t34 * t409;
t690 = t409 * t82;
t77 = t413 * t82;
t686 = -t516 * pkin(4) - t683;
t685 = -t648 * pkin(4) + t744;
t674 = qJ(5) * t410;
t610 = -pkin(3) - t674;
t358 = -t414 * t712 + t610;
t381 = t711 * t410;
t282 = -t358 * t409 + t381 * t413;
t682 = qJD(6) * t282 + t737 * t409 + t738 * t413;
t283 = t358 * t413 + t381 * t409;
t681 = -qJD(6) * t283 - t738 * t409 + t737 * t413;
t680 = -qJ(5) * t636 - t255 * t673 + t739;
t91 = t414 * t126 + t410 * t168;
t70 = -qJ(5) * t257 - t91;
t679 = -pkin(5) * t662 - t711 * t637 + t70;
t675 = qJ(5) * t190;
t672 = t130 * t249;
t671 = t132 * t130;
t669 = t132 * t249;
t138 = t141 * qJ(5);
t668 = t190 * t192;
t667 = t190 * t249;
t665 = t221 * t414;
t664 = t225 * t414;
t663 = t249 * t257;
t661 = t257 * t255;
t497 = t710 * t548;
t653 = t411 * t412;
t284 = t408 * t653 - t497 - t514;
t660 = t284 * t414;
t659 = t405 * t418;
t658 = t408 * t412;
t655 = t409 * t410;
t654 = t410 * t413;
t288 = t399 + t458;
t576 = t408 * t602;
t645 = pkin(2) * t657 + pkin(10) * t576;
t316 = -pkin(1) * t408 - t645;
t198 = -t288 * t676 + t677 * t316;
t281 = t284 * pkin(3);
t122 = -t285 * pkin(11) + t198 + t281;
t273 = (t572 + t548) * pkin(10) + t644;
t146 = t710 * t273 + t288 * t604 + t316 * t603;
t129 = -pkin(11) * t348 + t146;
t67 = t410 * t122 + t414 * t129;
t295 = t413 * t349 + t409 * t567;
t650 = qJD(6) * t295 - t648 * t409 + t516 * t413;
t296 = -t409 * t349 + t413 * t567;
t649 = qJD(6) * t296 - t516 * t409 - t648 * t413;
t229 = t414 * t333 + t410 * t334;
t643 = t709 * t408 * pkin(9) + t416 * pkin(1);
t406 = t412 ^ 2;
t407 = t415 ^ 2;
t642 = t406 - t407;
t640 = qJD(2) * t408;
t633 = qJD(6) * t414;
t627 = t415 * t659;
t212 = t221 * pkin(3);
t626 = -pkin(4) * t665 - t221 * t674 - t212;
t214 = t225 * pkin(3);
t625 = -pkin(4) * t664 - t225 * t674 - t214;
t624 = -pkin(4) * t660 - t284 * t674 - t281;
t623 = t325 * pkin(3) + t645;
t617 = t412 * t640;
t616 = -t190 ^ 2 + t714;
t614 = pkin(1) * t731;
t609 = t351 * t676;
t608 = t352 * t676;
t605 = t410 * t676;
t594 = pkin(4) * t161 - qJ(5) * t162;
t226 = t352 * t710 - t411 * t721;
t163 = t226 * t410 - t414 * t734;
t164 = t226 * t414 + t410 * t734;
t593 = -t163 * pkin(4) + qJ(5) * t164;
t217 = t285 * t414 - t348 * t410;
t592 = -t216 * pkin(4) + t217 * qJ(5);
t90 = t168 * t414 - t120;
t66 = t122 * t414 - t410 * t129;
t589 = t249 * t410;
t588 = t249 * t414;
t587 = t187 * t409;
t584 = t108 * t637 - t410 * t50 - t736 * t414;
t580 = t412 * t627;
t578 = t412 * t613;
t570 = -pkin(1) * t709 + pkin(9) * t656;
t563 = t408 * t418 * t678;
t561 = g(1) * t161 + g(2) * t163;
t560 = -g(1) * t162 - g(2) * t164;
t559 = -g(1) * t221 + g(2) * t225;
t64 = -qJ(5) * t284 - t67;
t165 = t255 * t654 + t257 * t409;
t554 = t413 * t637 + t165;
t166 = -t255 * t655 + t257 * t413;
t553 = t409 * t637 - t166;
t551 = (qJD(4) * t190 - t83) * pkin(11);
t550 = (-t84 + t638) * pkin(11);
t546 = -t16 * t409 + t17 * t413;
t44 = pkin(5) * t217 - t284 * t712 - t66;
t145 = -t411 * t273 + t288 * t568 + t316 * t567;
t128 = t348 * pkin(3) - t145;
t75 = t128 - t592;
t62 = t75 + t704;
t21 = -t409 * t62 + t413 * t44;
t22 = t409 * t44 + t413 * t62;
t292 = t453 * qJD(2);
t330 = t408 * t483;
t202 = -t292 * t676 + t677 * t330;
t200 = qJD(3) * t497 + ((t534 - t653) * qJD(3) + t481 * qJD(2)) * t408;
t113 = qJD(4) * t217 + t200 * t410 - t414 * t530;
t544 = t113 * t190 + t216 * t84;
t114 = t410 * t530 - t285 * t637 + (-qJD(4) * t348 + t200) * t414;
t543 = t114 * t192 - t217 * t83;
t542 = -t141 * t414 - t190 * t257;
t541 = -t141 * t410 + t192 * t257;
t540 = t216 * t413 - t284 * t409;
t152 = t216 * t409 + t284 * t413;
t536 = 0.2e1 * t595 + qJD(2);
t388 = qJD(2) * t399;
t291 = qJD(2) * t498 + t388;
t93 = -t273 * t639 + t288 * t528 + t710 * t291 + t292 * t604 + t316 * t527 + t330 * t603;
t87 = pkin(11) * t530 + t93;
t199 = qJD(3) * t522 + t408 * t429;
t97 = t199 * pkin(3) - t200 * pkin(11) + t202;
t24 = -t122 * t637 - t129 * t636 - t410 * t87 + t414 * t97;
t525 = -t519 * pkin(2) + pkin(10) * t609;
t524 = -t482 * pkin(2) + pkin(10) * t608;
t523 = g(1) * t416 + g(2) * t709;
t245 = t249 * qJD(5);
t8 = -t138 - t245 + t584;
t517 = -t187 * t587 - t77;
t63 = t190 * pkin(4) + t424;
t515 = -t249 * t63 + t707;
t23 = t122 * t636 - t129 * t637 + t410 * t97 + t414 * t87;
t513 = t107 * t249 - t707;
t512 = -t190 * t648 + t349 * t84;
t511 = -t192 * t647 - t350 * t83;
t258 = t325 * t410 - t414 * t576;
t259 = t325 * t414 + t410 * t576;
t510 = t259 * pkin(4) + qJ(5) * t258 + t623;
t242 = -t351 * t604 - t519 * t710;
t509 = t242 * pkin(3) + t525;
t244 = -t352 * t604 - t482 * t710;
t508 = t244 * pkin(3) + t524;
t505 = g(1) * t163 - g(2) * t161 + g(3) * t216;
t504 = -g(1) * t164 + g(2) * t162 - g(3) * t217;
t194 = t242 * t410 - t351 * t600;
t196 = t244 * t410 - t352 * t600;
t503 = g(1) * t196 + g(2) * t194 + g(3) * t258;
t195 = t242 * t414 + t351 * t605;
t197 = t244 * t414 + t352 * t605;
t502 = -g(1) * t197 - g(2) * t195 - g(3) * t259;
t501 = g(1) * t225 + g(2) * t221 + g(3) * t284;
t500 = -g(1) * t226 + g(2) * t224 - g(3) * t285;
t499 = -g(1) * t243 - g(2) * t241 - g(3) * t324;
t494 = -t187 ^ 2 * t413 + t690;
t493 = t192 * t588 - t410 * t83;
t492 = t190 * t589 - t414 * t84;
t218 = qJ(5) * t567 - t229;
t473 = t83 - t667;
t471 = -t113 * t192 - t114 * t190 + t216 * t83 - t217 * t84;
t469 = t113 * t249 + t141 * t216 + t190 * t199 + t284 * t84;
t468 = t114 * t249 + t141 * t217 + t192 * t199 - t284 * t83;
t466 = t195 * pkin(4) + t194 * qJ(5) + t509;
t465 = t197 * pkin(4) + t196 * qJ(5) + t508;
t464 = pkin(11) * qJD(4) * t249 - t501;
t463 = t505 - t583;
t462 = t504 - t584;
t14 = t84 * pkin(4) + t423;
t460 = t14 + t464;
t459 = t41 + t464;
t7 = -pkin(5) * t84 - t8;
t457 = qJD(6) * t187 * t712 + t504 + t7;
t18 = -qJ(5) * t199 - qJD(5) * t284 - t23;
t448 = t190 * t647 + t192 * t648 + t349 * t83 - t350 * t84;
t447 = t461 * t676;
t445 = t192 * t63 + qJDD(5) - t463;
t442 = (-t83 - t667) * t414 + (-t84 - t666) * t410;
t440 = qJD(3) * t447;
t94 = -t273 * t615 - t288 * t564 - t411 * t291 + t292 * t568 - t316 * t562 + t330 * t567;
t439 = -t351 * pkin(2) - t733 * pkin(10) + t570;
t438 = t352 * pkin(2) + t734 * pkin(10) + t643;
t437 = t224 * pkin(3) + t439;
t436 = t226 * pkin(3) + t438;
t432 = t162 * pkin(4) + t161 * qJ(5) + t437;
t431 = t164 * pkin(4) + t163 * qJ(5) + t436;
t430 = t433 * t676;
t88 = -pkin(3) * t530 - t94;
t425 = -t114 * qJ(5) - t217 * qJD(5) + t88;
t420 = t422 * t676;
t374 = -pkin(4) * t414 + t610;
t354 = -pkin(9) * t658 + t399;
t341 = -pkin(9) * t617 + t388;
t336 = t387 - t581;
t253 = t408 * t490 + t489;
t211 = t349 * pkin(4) + t449;
t186 = -t349 * pkin(5) - t218;
t109 = pkin(4) * t192 + t675;
t106 = t163 * t409 + t225 * t413;
t105 = t163 * t413 - t225 * t409;
t89 = t192 * t712 + t675;
t76 = -t141 * t567 + t249 * t516;
t73 = t141 * t284 + t199 * t249;
t72 = -pkin(4) * t257 - t90;
t65 = -pkin(4) * t284 - t66;
t60 = qJD(6) * t540 + t113 * t409 + t199 * t413;
t59 = qJD(6) * t152 - t113 * t413 + t199 * t409;
t51 = -pkin(5) * t216 - t64;
t46 = -pkin(4) * t249 + t651;
t43 = t57 - t705;
t31 = t113 * pkin(4) + t425;
t26 = t409 * t43 + t413 * t89;
t25 = -t409 * t89 + t413 * t43;
t20 = t113 * t712 + t425;
t19 = -pkin(4) * t199 - t24;
t15 = -pkin(5) * t113 - t18;
t13 = pkin(5) * t114 - t199 * t712 - t24;
t9 = t545 - t708;
t4 = -qJD(6) * t22 + t13 * t413 - t20 * t409;
t3 = qJD(6) * t21 + t13 * t409 + t20 * t413;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t709 - g(2) * t416, t523, 0, 0 (qJDD(1) * t406 + 0.2e1 * t578) * t405 (t412 * t629 - t631 * t642) * t731, t415 * t536 * t640 + t412 * t720 (qJDD(1) * t407 - 0.2e1 * t578) * t405, t415 * t720 - t536 * t617, t529 * t678, -t342 * t537 + t354 * t529 + t253 * t678 + g(1) * t351 - g(2) * t352 + (-t412 * t631 + t629) * t614, -g(1) * t519 + g(2) * t482 - t252 * t678 - t341 * t537 + t507 * t614 - t529 * t644 ((-t336 * qJD(2) + qJDD(1) * t644 + t252 + (-qJD(2) * t354 + t341) * qJD(1)) * t415 + (-t338 * qJD(2) - qJDD(1) * t354 - t253) * t412 - t523) * t408, t405 * qJDD(1) * pkin(1) ^ 2 - g(1) * t570 - g(2) * t643 + t252 * t644 + t253 * t354 - t336 * t342 + t338 * t341, t257 * t200 + t285 * t422, -t285 * t144 - t257 * t199 - t200 * t255 - t284 * t422, -t200 * t461 + t285 * t456 + t427 * t348 + (t257 * t565 - t480 * t348 * qJDD(1) + (-t348 * t415 * t470 + t285 * t565) * qJD(1)) * t408, t144 * t284 + t199 * t255, t144 * t348 + t199 * t461 - t255 * t530 - t284 * t433, -t348 * t433 - t447 * t617, -g(1) * t224 - g(2) * t226 + t115 * t284 + t126 * t530 + t198 * t144 + t145 * t433 + t182 * t199 + t202 * t255 + t348 * t518 - t461 * t94, t115 * t285 - t127 * t530 - t146 * t433 + t182 * t200 + t198 * t422 + t202 * t257 - t348 * t478 + t461 * t93 + t559, g(1) * t733 - g(2) * t734 - t126 * t200 - t127 * t199 - t146 * t144 - t145 * t422 - t93 * t255 - t94 * t257 + t284 * t478 + t285 * t518, -g(1) * t439 - g(2) * t438 + t115 * t198 + t126 * t94 + t127 * t93 - t145 * t518 - t146 * t478 + t182 * t202, t543, t471, t468, t544, -t469, t73, t107 * t113 + t128 * t84 + t141 * t66 + t190 * t88 - t199 * t56 + t216 * t41 + t24 * t249 - t284 * t583 + t560, t107 * t114 - t128 * t83 - t141 * t67 + t192 * t88 - t199 * t57 + t217 * t41 - t23 * t249 + t284 * t584 + t561, -t113 * t57 + t114 * t56 - t190 * t23 - t192 * t24 + t216 * t584 + t217 * t583 + t66 * t83 - t67 * t84 - t559, -t584 * t67 + t57 * t23 - t583 * t66 - t56 * t24 + t41 * t128 + t107 * t88 - g(1) * (t437 - t703) - g(2) * (t436 + t702) t73, -t468, t469, t543, t471, t544, t113 * t49 + t114 * t46 + t18 * t190 + t19 * t192 + t216 * t8 + t217 * t9 + t64 * t84 - t65 * t83 - t559, -t113 * t63 - t14 * t216 + t141 * t65 + t19 * t249 - t190 * t31 + t199 * t46 + t284 * t9 - t75 * t84 - t560, -t114 * t63 - t14 * t217 - t141 * t64 - t18 * t249 - t192 * t31 - t199 * t49 - t284 * t8 + t75 * t83 - t561, t14 * t75 + t63 * t31 + t8 * t64 + t49 * t18 + t9 * t65 + t46 * t19 - g(1) * (t432 - t703) - g(2) * (t431 + t702) t132 * t60 - t152 * t33, -t130 * t60 - t132 * t59 - t152 * t34 - t33 * t540, t114 * t132 - t152 * t82 + t187 * t60 - t217 * t33, t130 * t59 - t34 * t540, -t114 * t130 - t187 * t59 - t217 * t34 - t540 * t82, t114 * t187 - t217 * t82, -g(1) * t748 - g(2) * t106 + t16 * t114 + t15 * t130 + t4 * t187 + t2 * t217 - t21 * t82 + t51 * t34 + t37 * t59 - t7 * t540, -g(1) * t747 - g(2) * t105 - t1 * t217 - t17 * t114 + t15 * t132 + t7 * t152 - t3 * t187 + t22 * t82 - t51 * t33 + t37 * t60, t1 * t540 - t130 * t3 - t132 * t4 - t152 * t2 - t16 * t60 - t17 * t59 + t21 * t33 - t22 * t34 + t560, t1 * t22 + t17 * t3 + t2 * t21 + t16 * t4 + t7 * t51 + t37 * t15 - g(1) * (t162 * pkin(12) - t221 * t711 + t432) - g(2) * (t164 * pkin(12) + t225 * t711 + t431); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580, t642 * t659, t408 * t630 - t415 * t563, t580, t412 * t563 + t612, t529, t386 + t338 * t537 + g(1) * t482 + g(2) * t519 + (-t557 + t659) * t412 * pkin(1) + (-g(3) * t415 + t490) * t408, pkin(1) * t627 + t336 * t537 + g(1) * t352 + g(2) * t351 + (pkin(9) * t631 + g(3)) * t658 - t622, 0, 0, t257 * t495 + t411 * t420, -t144 * t603 - t255 * t495 - t257 * t516 + t420 * t710, -t257 * t531 + t307 * t461 + t411 * t430 + t422 * t677 - t440 * t710, -t144 * t567 + t255 * t516, -t144 * t677 + t255 * t531 - t306 * t461 + t411 * t440 + t430 * t710, t456 * t677 - (qJD(1) * t549 - t632) * t531, -g(1) * t244 - g(2) * t242 - g(3) * t325 - t115 * t567 - t126 * t531 - t144 * t619 + t182 * t516 - t201 * t255 + t353 * t433 + t461 * t722 - t518 * t677, -pkin(2) * t420 + t115 * t603 + t127 * t531 + t182 * t495 - t201 * t257 - t355 * t433 + t461 * t723 + t478 * t677 - t499, -g(1) * t608 - g(2) * t609 - g(3) * t576 - t126 * t495 - t127 * t516 - t355 * t144 - t255 * t723 + t257 * t722 - t353 * t422 - t478 * t567 + t518 * t603, -g(1) * t524 - g(2) * t525 - g(3) * t645 - t115 * t619 - t126 * t722 + t127 * t723 - t182 * t201 - t353 * t518 - t355 * t478, t511, t448, t715, t512, -t716, t76, -t107 * t648 + t228 * t141 + t190 * t646 + t249 * t683 + t332 * t84 + t41 * t349 - t516 * t56 + t567 * t583 + t502, -t107 * t647 - t229 * t141 + t192 * t646 - t249 * t684 - t332 * t83 + t41 * t350 - t516 * t57 - t567 * t584 + t503, -t190 * t684 - t192 * t683 + t228 * t83 - t229 * t84 + t349 * t584 + t350 * t583 - t56 * t647 + t57 * t648 + t499, -t584 * t229 - t583 * t228 + t41 * t332 - g(1) * (t508 + t700) - g(2) * (t509 + t701) - g(3) * (t623 + t706) + t684 * t57 - t683 * t56 + t646 * t107, t76, -t715, t716, t511, t448, t512, t190 * t687 + t192 * t686 + t218 * t84 - t220 * t83 + t349 * t8 + t350 * t9 - t46 * t647 - t49 * t648 + t499, -t14 * t349 + t220 * t141 - t190 * t685 - t211 * t84 + t249 * t686 + t46 * t516 - t567 * t9 + t63 * t648 - t502, -t14 * t350 - t218 * t141 - t192 * t685 + t211 * t83 - t249 * t687 - t49 * t516 + t567 * t8 + t63 * t647 - t503, t14 * t211 + t8 * t218 + t9 * t220 - g(1) * (t465 + t700) - g(2) * (t466 + t701) - g(3) * (t510 + t706) + t685 * t63 + t687 * t49 + t686 * t46, t132 * t650 + t296 * t33, -t130 * t650 + t132 * t649 - t295 * t33 + t296 * t34, -t132 * t647 + t187 * t650 + t296 * t82 - t33 * t350, -t130 * t649 - t295 * t34, t130 * t647 + t187 * t649 - t295 * t82 - t34 * t350, -t187 * t647 - t350 * t82, -t98 * t82 + t2 * t350 + t186 * t34 - t7 * t295 - g(1) * (t196 * t409 + t243 * t413) - g(2) * (t194 * t409 + t241 * t413) - g(3) * (t258 * t409 + t324 * t413) - t649 * t37 + t698 * t187 - t647 * t16 + t688 * t130, t99 * t82 - t1 * t350 - t186 * t33 - t7 * t296 - g(1) * (t196 * t413 - t243 * t409) - g(2) * (t194 * t413 - t241 * t409) - g(3) * (t258 * t413 - t324 * t409) + t650 * t37 - t728 * t187 + t647 * t17 + t688 * t132, t1 * t295 - t130 * t728 - t132 * t698 - t16 * t650 + t17 * t649 + t2 * t296 + t33 * t98 - t34 * t99 + t502, t1 * t99 + t2 * t98 + t7 * t186 - g(1) * (t197 * pkin(12) + t243 * t711 + t465) - g(2) * (t195 * pkin(12) + t241 * t711 + t466) - g(3) * (pkin(12) * t259 + t324 * t711 + t510) + t688 * t37 + t728 * t17 + t698 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661, -t255 ^ 2 + t257 ^ 2, -t255 * t461 + t422, -t661, -t257 * t461 - t144, t433, -t127 * t461 - t182 * t257 + t501 - t518, -t126 * t461 + t182 * t255 + t478 - t500, 0, 0, t493, t442, t249 * t588 - t541, t492, -t410 * t713 - t542, -t663, -pkin(3) * t84 - t127 * t190 - t249 * t90 + t257 * t56 + t410 * t513 - t414 * t459, pkin(3) * t83 - t127 * t192 + t249 * t91 + t257 * t57 + t410 * t459 + t414 * t513, t190 * t91 + t192 * t90 + (-t584 + t550 + t694) * t414 + (t583 + t551 - t693) * t410 + t500, -t41 * pkin(3) + g(1) * t214 + g(2) * t212 + g(3) * t281 - t107 * t127 + t56 * t90 - t57 * t91 + (-t584 * t414 + t583 * t410 + (-t410 * t57 + t414 * t56) * qJD(4) + t500) * pkin(11), -t663, -t414 * t713 + t541, t249 * t589 + t542, t493, t442, t492, -t190 * t70 - t192 * t72 + (t249 * t46 + t550 - t8) * t414 + (t551 + t9 + t695) * t410 + t500, -t190 * t680 - t249 * t72 - t257 * t46 - t374 * t84 + t410 * t515 + t414 * t460, -t192 * t680 + t249 * t70 + t257 * t49 + t374 * t83 - t410 * t460 + t414 * t515, t14 * t374 - t49 * t70 - t46 * t72 - g(1) * t625 - g(2) * t626 - g(3) * t624 + t680 * t63 + (t9 * t410 - t8 * t414 + (t410 * t49 + t414 * t46) * qJD(4) + t500) * pkin(11), t33 * t409 * t414 + (-t413 * t633 + t553) * t132, t130 * t166 + t132 * t165 + (-t130 * t409 + t132 * t413) * t637 + (t692 + t691 + (t130 * t413 + t132 * t409) * qJD(6)) * t414, -t33 * t410 + t553 * t187 + (-t187 * t634 + t669 + t690) * t414, t34 * t413 * t414 + (-t409 * t633 - t554) * t130, -t34 * t410 + t554 * t187 + (t187 * t635 - t672 + t77) * t414, t187 * t588 - t410 * t82, -t282 * t82 + t2 * t410 + t382 * t34 - g(1) * (-t225 * t655 + t226 * t413) - g(2) * (-t221 * t655 - t224 * t413) - g(3) * (-t284 * t655 + t285 * t413) - t554 * t37 + t681 * t187 + t679 * t130 + (t16 * t249 - t37 * t635 + t7 * t413) * t414, t283 * t82 - t1 * t410 - t382 * t33 - g(1) * (-t225 * t654 - t226 * t409) - g(2) * (-t221 * t654 + t224 * t409) - g(3) * (-t284 * t654 - t285 * t409) + t553 * t37 - t682 * t187 + t679 * t132 + (-t17 * t249 - t37 * t634 - t7 * t409) * t414, t16 * t166 + t165 * t17 + t282 * t33 - t283 * t34 - t681 * t132 - t682 * t130 + t546 * t637 + (-t1 * t413 + t2 * t409 + (t16 * t413 + t17 * t409) * qJD(6) + t501) * t414, t1 * t283 + t2 * t282 + t7 * t382 - g(1) * (-pkin(12) * t664 + t226 * t711 + t625) - g(2) * (-pkin(12) * t665 - t224 * t711 + t626) - g(3) * (-pkin(12) * t660 + t285 * t711 + t624) + t679 * t37 + t682 * t17 + t681 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t668, t616, -t473, -t668, -t725, t141, -t107 * t192 + t463 + t693, t107 * t190 - t462 - t694, 0, 0, t141, t473, t725, t668, t616, -t668, pkin(4) * t83 - qJ(5) * t84 + (-t49 - t57) * t192 + (t46 - t651) * t190, t109 * t190 + t445 - t693 - 0.2e1 * t708, t109 * t192 - t190 * t63 + t249 * t651 + 0.2e1 * t138 + t245 + t462, -t9 * pkin(4) - g(1) * t593 - g(2) * t594 - g(3) * t592 - t8 * qJ(5) - t63 * t109 - t46 * t57 - t49 * t651, -t132 * t587 - t692 (-t34 - t670) * t413 + (t33 + t586) * t409, t132 * t190 + t517, t413 * t586 + t691, -t130 * t190 + t494, t187 * t190, qJ(5) * t34 + t652 * t130 + t16 * t190 - t187 * t25 + t457 * t409 + t413 * t719, -qJ(5) * t33 + t652 * t132 - t17 * t190 + t187 * t26 - t409 * t719 + t457 * t413, t130 * t26 + t132 * t25 + (-t17 * t192 - t33 * t712 - t2 + (t130 * t712 - t17) * qJD(6)) * t413 + (t16 * t192 + t34 * t712 - t1 + (-t132 * t712 + t16) * qJD(6)) * t409 + t505, t7 * qJ(5) - t17 * t26 - t16 * t25 - g(1) * (-pkin(12) * t163 + t593) - g(2) * (pkin(12) * t161 + t594) - g(3) * (t592 - t704) + t652 * t37 - (qJD(6) * t546 + t1 * t409 + t2 * t413) * t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, t141 - t668, -t713 - t714, t445 + t695 - t708, 0, 0, 0, 0, 0, 0, t517 - t672, t494 - t669, t409 * t726 + t413 * t727, -t249 * t37 + t409 * t730 + t413 * t729 - t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, -t130 ^ 2 + t132 ^ 2, -t727, -t671, t726, -t82, -g(1) * t105 + g(2) * t747 - g(3) * t540 - t37 * t132 + t729, g(1) * t106 - g(2) * t748 + g(3) * t152 + t37 * t130 - t730, 0, 0;];
tau_reg  = t5;
