% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR15_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:50:13
% EndTime: 2019-03-10 00:50:45
% DurationCPUTime: 12.51s
% Computational Cost: add. (19150->668), mult. (58001->922), div. (0->0), fcn. (47859->12), ass. (0->314)
t288 = sin(qJ(2));
t291 = cos(qJ(2));
t287 = sin(qJ(3));
t458 = cos(pkin(7));
t402 = t287 * t458;
t475 = cos(qJ(3));
t325 = -t288 * t402 + t291 * t475;
t284 = sin(pkin(6));
t431 = qJD(1) * t284;
t224 = t325 * t431;
t283 = sin(pkin(7));
t406 = qJD(3) * t475;
t382 = t283 * t406;
t485 = t224 - t382;
t459 = cos(pkin(6));
t413 = pkin(1) * t459;
t385 = t291 * t413;
t268 = qJD(1) * t385;
t346 = t284 * (-pkin(10) * t458 - pkin(9));
t336 = t288 * t346;
t205 = qJD(1) * t336 + t268;
t386 = t288 * t413;
t309 = t291 * t346 - t386;
t206 = t309 * qJD(1);
t335 = (-pkin(10) * t283 * t291 + pkin(2) * t288) * t284;
t237 = qJD(1) * t335;
t376 = t458 * t475;
t446 = t283 * t287;
t337 = pkin(2) * t376 - pkin(10) * t446;
t493 = t337 * qJD(3) - t475 * t205 - t206 * t402 - t237 * t446;
t147 = -t206 * t283 + t458 * t237;
t323 = t287 * t291 + t288 * t376;
t223 = t323 * t431;
t429 = qJD(3) * t283;
t491 = pkin(3) * t223 - pkin(11) * t224 + t147 - (pkin(3) * t287 - pkin(11) * t475) * t429;
t409 = t288 * t431;
t384 = t283 * t409;
t492 = pkin(11) * t384 - t493;
t412 = t283 * t475;
t433 = pkin(2) * t402 + pkin(10) * t412;
t241 = pkin(11) * t458 + t433;
t242 = (-pkin(3) * t475 - pkin(11) * t287 - pkin(2)) * t283;
t286 = sin(qJ(4));
t290 = cos(qJ(4));
t425 = qJD(4) * t290;
t426 = qJD(4) * t286;
t483 = t241 * t425 + t242 * t426 - t286 * t492 + t290 * t491;
t248 = t286 * t446 - t290 * t458;
t437 = qJD(4) * t248 + t286 * t384 + t290 * t485;
t375 = qJD(3) * t402;
t490 = pkin(2) * t375 + pkin(10) * t382 - t287 * t205 + t206 * t376;
t400 = t291 * t458;
t324 = t287 * t400 + t288 * t475;
t314 = t324 * t284;
t394 = t459 * qJD(1);
t355 = t394 + qJD(2);
t338 = t283 * t355;
t329 = t287 * t338;
t175 = qJD(1) * t314 + t329;
t444 = t284 * t291;
t418 = t283 * t444;
t422 = qJD(1) * t418 - qJD(3);
t312 = -t355 * t458 + t422;
t140 = t290 * t175 - t286 * t312;
t137 = qJD(6) + t140;
t311 = pkin(2) * t459 + t336;
t172 = qJD(2) * pkin(2) + qJD(1) * t311 + t268;
t445 = t283 * t288;
t233 = (-pkin(2) * t291 - pkin(10) * t445 - pkin(1)) * t284;
t219 = qJD(1) * t233;
t130 = -t172 * t283 + t458 * t219;
t328 = t355 * t475;
t253 = t283 * t328;
t351 = t291 * t376;
t340 = t284 * t351;
t173 = -qJD(1) * t340 + t287 * t409 - t253;
t82 = pkin(3) * t173 - pkin(11) * t175 + t130;
t327 = pkin(9) * t444 + t386;
t379 = t284 * t400;
t167 = t327 * qJD(1) + (qJD(1) * t379 + t338) * pkin(10);
t103 = t475 * t167 + t172 * t402 + t219 * t446;
t85 = -pkin(11) * t312 + t103;
t33 = t286 * t85 - t290 * t82;
t441 = qJD(5) + t33;
t249 = t286 * t458 + t290 * t446;
t436 = qJD(4) * t249 - t286 * t485 + t290 * t384;
t428 = qJD(3) * t287;
t407 = t283 * t428;
t486 = t223 - t407;
t411 = t475 * t237;
t434 = -(-pkin(3) * t409 - t411) * t283 + t490;
t488 = t241 * t426 - t242 * t425 + t286 * t491 + t492 * t290;
t170 = qJD(4) + t173;
t34 = t286 * t82 + t290 * t85;
t29 = -qJ(5) * t170 - t34;
t370 = qJD(2) * t394;
t353 = pkin(1) * t370;
t263 = t291 * t353;
t326 = qJD(2) * t336;
t189 = qJD(1) * t326 + t263;
t208 = t309 * qJD(2);
t190 = qJD(1) * t208;
t238 = qJD(2) * t335;
t228 = qJD(1) * t238;
t348 = qJD(3) * t376;
t321 = t167 * t428 - t172 * t348 - t475 * t189 - t190 * t402 - t219 * t382 - t228 * t446;
t421 = qJD(1) * qJD(2);
t404 = t284 * t421;
t381 = t288 * t404;
t356 = t283 * t381;
t50 = pkin(11) * t356 - t321;
t480 = qJD(2) * t323 + qJD(3) * t324;
t301 = t480 * t284;
t319 = qJD(3) * t329;
t142 = qJD(1) * t301 + t319;
t215 = t458 * t228;
t443 = t287 * t288;
t322 = t351 - t443;
t313 = t322 * qJD(3);
t300 = (qJD(2) * t325 + t313) * t284;
t299 = qJD(1) * t300;
t318 = qJD(3) * t328;
t65 = t142 * pkin(3) + t215 + (-pkin(11) * t318 - t190) * t283 - pkin(11) * t299;
t397 = t286 * t50 - t290 * t65 + t85 * t425 + t82 * t426;
t474 = pkin(4) * t142;
t9 = t397 - t474;
t487 = t170 * t29 + t9;
t316 = t283 * t318;
t296 = t316 + t299;
t427 = qJD(4) * t140;
t75 = t286 * t296 - t290 * t356 + t427;
t484 = qJ(5) * t437 - qJD(5) * t249 + t434;
t448 = t173 * t286;
t482 = -qJD(5) * t286 - t103 + (t426 + t448) * pkin(4);
t442 = pkin(5) * t140 + t441;
t308 = t290 * t312;
t138 = t175 * t286 + t308;
t473 = pkin(5) * t138;
t21 = -t29 - t473;
t477 = pkin(4) + pkin(12);
t74 = qJD(4) * t308 + t175 * t426 - t286 * t356 - t290 * t296;
t481 = t477 * t74 + (t21 - t34 + t473) * t137;
t285 = sin(qJ(6));
t289 = cos(qJ(6));
t108 = t138 * t285 + t170 * t289;
t27 = qJD(6) * t108 + t142 * t285 - t289 * t75;
t465 = qJ(5) * t223 - t283 * (qJ(5) * t428 - qJD(5) * t475) + t488;
t479 = t140 ^ 2;
t478 = t170 ^ 2;
t293 = qJD(1) ^ 2;
t476 = pkin(5) + pkin(11);
t472 = pkin(11) * t142;
t471 = -pkin(5) * t436 - t465;
t102 = -t287 * t167 + t172 * t376 + t219 * t412;
t84 = pkin(3) * t312 - t102;
t297 = -t140 * qJ(5) + t84;
t40 = t138 * pkin(4) + t297;
t470 = t140 * t40;
t423 = qJD(6) * t289;
t424 = qJD(6) * t285;
t26 = t138 * t423 + t289 * t142 - t170 * t424 + t285 * t75;
t468 = t26 * t289;
t467 = t285 * t74;
t71 = t289 * t74;
t365 = t459 * t458;
t247 = -t365 + t418;
t399 = t459 * t283;
t192 = (t379 + t399) * pkin(10) + t327;
t204 = t385 + t311;
t416 = t475 * t192 + t204 * t402 + t233 * t446;
t105 = -pkin(11) * t247 + t416;
t144 = -t204 * t283 + t458 * t233;
t352 = t475 * t399;
t197 = t284 * t443 - t340 - t352;
t380 = t287 * t399;
t198 = t380 + t314;
t98 = pkin(3) * t197 - pkin(11) * t198 + t144;
t466 = t290 * t105 + t286 * t98;
t464 = pkin(4) * t486 + t483;
t463 = pkin(4) * t436 + t484;
t456 = qJ(5) * t290;
t462 = -qJ(5) * t425 - t173 * t456 + t482;
t123 = pkin(3) * t175 + pkin(11) * t173;
t460 = t290 * t102 + t286 * t123;
t47 = -qJ(5) * t175 - t460;
t461 = -pkin(5) * t448 - t476 * t426 + t47;
t457 = qJ(5) * t138;
t106 = -t289 * t138 + t170 * t285;
t455 = t106 * t137;
t454 = t106 * t170;
t453 = t108 * t137;
t452 = t108 * t170;
t451 = t138 * t170;
t450 = t140 * t138;
t449 = t140 * t170;
t136 = t142 * qJ(5);
t280 = t284 ^ 2;
t447 = t280 * t293;
t211 = t289 * t248 + t285 * t412;
t439 = qJD(6) * t211 + t285 * t436 - t289 * t486;
t333 = -t285 * t248 + t289 * t412;
t438 = qJD(6) * t333 + t285 * t486 + t289 * t436;
t435 = t290 * t241 + t286 * t242;
t432 = t288 ^ 2 - t291 ^ 2;
t430 = qJD(2) * t288;
t420 = pkin(11) * t426;
t266 = t476 * t290;
t419 = t291 * t447;
t410 = t475 * t238;
t408 = t284 * t430;
t405 = t280 * t421;
t403 = -qJ(5) * t286 - pkin(3);
t398 = -t286 * t65 - t290 * t50 - t82 * t425 + t85 * t426;
t396 = -t286 * t105 + t290 * t98;
t148 = -t208 * t283 + t458 * t238;
t392 = -t286 * t241 + t290 * t242;
t391 = t170 * t290;
t390 = t137 * t285;
t388 = 0.2e1 * t405;
t383 = t283 * t408;
t41 = -qJ(5) * t197 - t466;
t154 = pkin(4) * t412 - t392;
t124 = t249 * pkin(5) + pkin(12) * t412 + t154;
t378 = -qJD(6) * t124 - t436 * t477 - t484;
t240 = -pkin(3) * t458 - t337;
t306 = -t249 * qJ(5) + t240;
t131 = t248 * t477 + t306;
t377 = pkin(5) * t437 + qJD(6) * t131 - t477 * t486 - t483;
t374 = t284 * t293 * t459;
t373 = -0.2e1 * pkin(1) * t405;
t265 = t476 * t286;
t372 = -qJD(6) * t265 - t482 - t170 * (pkin(12) * t286 - t456);
t252 = -t290 * t477 + t403;
t96 = t286 * t102;
t371 = qJD(6) * t252 - qJD(4) * t266 + t96 + (-pkin(5) * t173 - t123) * t290 - t477 * t175;
t120 = t175 * t285 + t289 * t448;
t368 = t289 * t426 + t120;
t121 = t175 * t289 - t285 * t448;
t367 = t285 * t426 - t121;
t54 = -t167 * t406 - t172 * t375 - t287 * t189 + t190 * t376 - t219 * t407 + t228 * t412;
t51 = -pkin(3) * t356 - t54;
t303 = qJ(5) * t74 - qJD(5) * t140 + t51;
t12 = t477 * t75 + t303;
t4 = -pkin(5) * t74 - t142 * t477 + t397;
t366 = t12 * t289 + t285 * t4;
t20 = -t170 * t477 + t442;
t25 = t138 * t477 + t297;
t10 = t20 * t289 - t25 * t285;
t11 = t20 * t285 + t25 * t289;
t152 = t198 * t290 - t247 * t286;
t24 = pkin(5) * t152 - t197 * t477 - t396;
t151 = t198 * t286 + t247 * t290;
t310 = -t287 * t192 + t204 * t376 + t233 * t412;
t104 = t247 * pkin(3) - t310;
t304 = -t152 * qJ(5) + t104;
t39 = t151 * t477 + t304;
t362 = t24 * t289 - t285 * t39;
t361 = t24 * t285 + t289 * t39;
t269 = qJD(2) * t385;
t207 = t269 + t326;
t320 = -t192 * t428 + t204 * t348 + t475 * t207 + t208 * t402 + t233 * t382 + t238 * t446;
t59 = pkin(11) * t383 + t320;
t145 = qJD(3) * t380 + t301;
t146 = qJD(3) * t352 + t300;
t68 = pkin(3) * t145 - pkin(11) * t146 + t148;
t360 = -t105 * t425 - t286 * t59 + t290 * t68 - t98 * t426;
t359 = t151 * t289 - t197 * t285;
t119 = t151 * t285 + t197 * t289;
t357 = t283 ^ 2 * t381;
t354 = 0.2e1 * t394 + qJD(2);
t8 = -t170 * qJD(5) - t136 + t398;
t347 = t170 * t34 - t397;
t345 = -t137 * t390 - t71;
t344 = -t105 * t426 + t286 * t68 + t290 * t59 + t98 * t425;
t5 = -pkin(5) * t75 - t8;
t343 = t5 + (t137 * t477 + t457) * t137;
t342 = t170 * t84 - t472;
t341 = -t170 * t40 + t472;
t153 = qJ(5) * t412 - t435;
t330 = -t137 ^ 2 * t289 + t467;
t317 = -t74 + t451;
t315 = -t192 * t406 - t204 * t375 - t287 * t207 + t208 * t376 - t233 * t407;
t2 = -qJD(6) * t11 - t12 * t285 + t289 * t4;
t15 = -qJ(5) * t145 - qJD(5) * t197 - t344;
t307 = qJD(3) * t312;
t305 = t355 * t327;
t60 = (-pkin(3) * t408 - t410) * t283 - t315;
t91 = t286 * t383 - t198 * t426 + (-qJD(4) * t247 + t146) * t290;
t298 = -t91 * qJ(5) - t152 * qJD(5) + t60;
t295 = t283 * t296;
t261 = -pkin(4) * t290 + t403;
t150 = t248 * pkin(4) + t306;
t143 = -t283 * t190 + t215;
t135 = -t248 * pkin(5) - t153;
t90 = qJD(4) * t152 + t146 * t286 - t290 * t383;
t86 = pkin(4) * t140 + t457;
t73 = t74 * t286;
t69 = t74 * t249;
t58 = t74 * t152;
t55 = t151 * pkin(4) + t304;
t49 = -pkin(4) * t175 - t123 * t290 + t96;
t42 = -pkin(4) * t197 - t396;
t37 = qJD(6) * t359 + t145 * t289 + t285 * t90;
t36 = qJD(6) * t119 + t145 * t285 - t90 * t289;
t30 = -pkin(5) * t151 - t41;
t28 = -pkin(4) * t170 + t441;
t19 = t90 * pkin(4) + t298;
t18 = pkin(4) * t75 + t303;
t17 = t477 * t90 + t298;
t16 = -pkin(4) * t145 - t360;
t7 = -pkin(5) * t90 - t15;
t6 = pkin(5) * t91 - t145 * t477 - t360;
t1 = qJD(6) * t10 + t366;
t3 = [0, 0, 0, t288 * t291 * t388, -t432 * t388, t354 * qJD(2) * t444, -t354 * t408, 0, -qJD(2) * t305 + t288 * t373 - t327 * t370, t291 * t373 - (-pkin(9) * t408 + t269) * t355 - (-pkin(9) * t381 + t263) * t459, t175 * t146 + t198 * t296, -t198 * t142 - t175 * t145 - t146 * t173 - t197 * t296, -t146 * t312 - t247 * t316 + (t175 * t283 * t430 + (-t247 * t313 + (t198 * t445 - t247 * t325) * qJD(2)) * qJD(1)) * t284, t145 * t312 + t142 * t247 + (-qJD(1) * t197 - t173) * t383 (-qJD(2) * t312 - t247 * t421) * t284 * t445 -(t283 * t410 + t315) * t312 - t54 * t247 + t148 * t173 + t144 * t142 + t143 * t197 + t130 * t145 + (qJD(1) * t310 + t102) * t383, -t103 * t383 + t130 * t146 + t143 * t198 + t144 * t296 + t148 * t175 - t247 * t321 + t312 * t320 - t356 * t416, t140 * t91 - t58, -t138 * t91 - t140 * t90 + t151 * t74 - t152 * t75, t140 * t145 + t142 * t152 + t170 * t91 - t197 * t74, -t138 * t145 - t142 * t151 - t170 * t90 - t197 * t75, t142 * t197 + t145 * t170, t104 * t75 + t60 * t138 + t142 * t396 - t33 * t145 + t51 * t151 + t170 * t360 - t197 * t397 + t84 * t90, -t104 * t74 + t60 * t140 - t142 * t466 - t34 * t145 + t51 * t152 - t170 * t344 + t197 * t398 + t84 * t91, t138 * t15 + t140 * t16 + t151 * t8 + t152 * t9 + t28 * t91 + t29 * t90 + t41 * t75 - t42 * t74, -t138 * t19 + t142 * t42 + t145 * t28 - t151 * t18 + t16 * t170 + t197 * t9 - t40 * t90 - t55 * t75, -t140 * t19 - t142 * t41 - t145 * t29 - t15 * t170 - t152 * t18 - t197 * t8 - t40 * t91 + t55 * t74, t15 * t29 + t16 * t28 + t18 * t55 + t19 * t40 + t41 * t8 + t42 * t9, t108 * t37 + t119 * t26, -t106 * t37 - t108 * t36 - t119 * t27 + t26 * t359, t108 * t91 - t119 * t74 + t137 * t37 + t152 * t26, -t106 * t91 - t137 * t36 - t152 * t27 - t359 * t74, t137 * t91 - t58 (-qJD(6) * t361 - t17 * t285 + t289 * t6) * t137 - t362 * t74 + t2 * t152 + t10 * t91 + t7 * t106 + t30 * t27 - t5 * t359 + t21 * t36 -(qJD(6) * t362 + t17 * t289 + t285 * t6) * t137 + t361 * t74 - t1 * t152 - t11 * t91 + t7 * t108 + t30 * t26 + t5 * t119 + t21 * t37; 0, 0, 0, -t288 * t419, t432 * t447, -t291 * t374, t288 * t374, 0, -pkin(9) * t291 * t404 + qJD(1) * t305 + (pkin(1) * t447 - t353) * t288, -t263 + pkin(1) * t419 + (-pkin(9) * t409 + t268) * t394 + t268 * qJD(2) (t175 * t475 + (t322 * t431 + t253) * t287) * t429 + (qJD(2) * t446 - t175) * t224, -t142 * t446 + t173 * t485 + t175 * t486 + t475 * t295, -t175 * t384 + t224 * t312 + t287 * t357 + t296 * t458 - t307 * t412, t475 * t357 - t142 * t458 - t223 * t312 + (t173 * t409 + t287 * t307) * t283 -(qJD(1) * t365 - t422) * t384, t54 * t458 - t283 * pkin(2) * t142 - t143 * t412 - t147 * t173 + (qJD(2) * t337 - t102) * t384 - t486 * t130 + (t283 * t411 + t490) * t312, -pkin(2) * t295 + t103 * t384 - t485 * t130 + t143 * t446 - t147 * t175 + t312 * t493 + t321 * t458 - t433 * t356, -t140 * t437 - t69, t138 * t437 - t140 * t436 + t248 * t74 - t249 * t75, -t140 * t486 + t249 * t142 - t170 * t437 + t412 * t74, t138 * t486 - t248 * t142 - t170 * t436 + t412 * t75, -t142 * t412 - t170 * t486, t392 * t142 + t240 * t75 + t51 * t248 + t33 * t223 + t436 * t84 + (-t33 * t428 + t397 * t475) * t283 - t483 * t170 + t434 * t138, -t435 * t142 - t240 * t74 + t51 * t249 + t34 * t223 - t437 * t84 + (-t34 * t428 - t398 * t475) * t283 + t488 * t170 + t434 * t140, t138 * t465 + t140 * t464 + t153 * t75 - t154 * t74 + t248 * t8 + t249 * t9 - t28 * t437 + t29 * t436, -t138 * t463 + t154 * t142 - t150 * t75 + t170 * t464 - t18 * t248 - t28 * t486 - t40 * t436 - t412 * t9, -t153 * t142 + t150 * t74 - t18 * t249 + t29 * t223 + t437 * t40 + (-t29 * t428 + t475 * t8) * t283 - t465 * t170 - t463 * t140, t150 * t18 + t153 * t8 + t154 * t9 + t28 * t464 + t29 * t465 + t40 * t463, t108 * t439 - t26 * t333, -t106 * t439 + t108 * t438 + t211 * t26 + t27 * t333, -t108 * t437 + t137 * t439 + t249 * t26 + t333 * t74, t106 * t437 + t137 * t438 - t211 * t74 - t249 * t27, -t137 * t437 - t69 -(t124 * t289 - t131 * t285) * t74 + t2 * t249 + t135 * t27 - t5 * t211 - t438 * t21 + (t285 * t378 - t289 * t377) * t137 + t471 * t106 - t437 * t10 (t124 * t285 + t131 * t289) * t74 - t1 * t249 + t135 * t26 - t5 * t333 + t439 * t21 + (t285 * t377 + t289 * t378) * t137 + t437 * t11 + t471 * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175 * t173, -t173 ^ 2 + t175 ^ 2, -t173 * t312 + t296, -t175 * t312 - t431 * t480 - t319, t356, -t103 * t312 - t130 * t175 + t54, -t102 * t312 + t130 * t173 + t321, t140 * t391 - t73 (-t74 - t451) * t290 + (-t75 - t449) * t286, -t140 * t175 + t142 * t286 + t170 * t391, t138 * t175 + t142 * t290 - t286 * t478, -t170 * t175, -pkin(3) * t75 - t103 * t138 + t33 * t175 - t51 * t290 + (t96 + (-pkin(11) * qJD(4) - t123) * t290) * t170 + t342 * t286, pkin(3) * t74 - t103 * t140 + t34 * t175 + t51 * t286 + (t420 + t460) * t170 + t342 * t290, -t138 * t47 - t140 * t49 + (-t8 + t170 * t28 + (-t75 + t427) * pkin(11)) * t290 + ((qJD(4) * t138 - t74) * pkin(11) + t487) * t286, -t175 * t28 + t18 * t290 - t261 * t75 + (pkin(11) * t425 - t49) * t170 - t462 * t138 + t341 * t286, t175 * t29 - t18 * t286 + t261 * t74 + (t47 - t420) * t170 - t462 * t140 + t341 * t290, t18 * t261 - t28 * t49 - t29 * t47 + t462 * t40 + (t286 * t9 - t290 * t8 + (t28 * t290 + t286 * t29) * qJD(4)) * pkin(11), -t26 * t285 * t290 + (-t290 * t423 + t367) * t108, t106 * t121 + t108 * t120 + (-t106 * t285 + t108 * t289) * t426 + (-t468 + t27 * t285 + (t106 * t289 + t108 * t285) * qJD(6)) * t290, t26 * t286 + t367 * t137 + (-t137 * t423 + t452 + t467) * t290, -t27 * t286 + t368 * t137 + (t137 * t424 - t454 + t71) * t290, t137 * t391 - t73 -(-t252 * t285 + t265 * t289) * t74 + t2 * t286 + t266 * t27 - t368 * t21 + (t285 * t372 - t289 * t371) * t137 + t461 * t106 + (t10 * t170 - t21 * t424 + t5 * t289) * t290 (t252 * t289 + t265 * t285) * t74 - t1 * t286 + t266 * t26 + t367 * t21 + (t285 * t371 + t289 * t372) * t137 + t461 * t108 + (-t11 * t170 - t21 * t423 - t5 * t285) * t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, -t138 ^ 2 + t479, t317, t449 - t75, t142, -t140 * t84 + t347, t138 * t84 - t170 * t33 + t398, pkin(4) * t74 - qJ(5) * t75 + (-t29 - t34) * t140 + (t28 - t441) * t138, t138 * t86 - t347 + t470 - 0.2e1 * t474, -t138 * t40 + t140 * t86 + t170 * t441 + t136 - t8, -pkin(4) * t9 - qJ(5) * t8 - t28 * t34 - t29 * t441 - t40 * t86, -t108 * t390 + t468 (-t27 - t453) * t289 + (-t26 + t455) * t285, t108 * t138 + t345, -t106 * t138 + t330, t137 * t138, qJ(5) * t27 + t10 * t138 + t442 * t106 + t343 * t285 + t289 * t481, qJ(5) * t26 + t442 * t108 - t11 * t138 - t285 * t481 + t343 * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, t142 - t450, -t478 - t479, t470 + t487, 0, 0, 0, 0, 0, t345 - t454, t330 - t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * t106, -t106 ^ 2 + t108 ^ 2, t26 + t455, -t27 + t453, -t74, -t108 * t21 + t11 * t137 + t2, t106 * t21 - t366 + (-qJD(6) + t137) * t10;];
tauc_reg  = t3;
