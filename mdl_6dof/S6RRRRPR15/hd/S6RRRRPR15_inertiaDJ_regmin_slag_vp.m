% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR15_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:50:13
% EndTime: 2019-03-10 00:50:36
% DurationCPUTime: 7.75s
% Computational Cost: add. (10358->544), mult. (31864->989), div. (0->0), fcn. (31856->12), ass. (0->237)
t174 = sin(pkin(7));
t182 = cos(qJ(3));
t178 = sin(qJ(3));
t268 = qJD(3) * t178;
t198 = (qJ(5) * t268 - qJD(5) * t182) * t174;
t284 = cos(pkin(7));
t242 = t178 * t284;
t163 = pkin(2) * t242;
t280 = t174 * t182;
t273 = pkin(10) * t280 + t163;
t130 = t284 * pkin(11) + t273;
t131 = (-pkin(3) * t182 - pkin(11) * t178 - pkin(2)) * t174;
t132 = (pkin(3) * t178 - pkin(11) * t182) * t174 * qJD(3);
t158 = t174 * t268;
t234 = qJD(3) * t284;
t220 = t182 * t234;
t133 = -pkin(2) * t220 + pkin(10) * t158;
t181 = cos(qJ(4));
t167 = qJD(4) * t181;
t177 = sin(qJ(4));
t265 = qJD(4) * t177;
t60 = t130 * t265 - t131 * t167 - t177 * t132 + t181 * t133;
t55 = t60 - t198;
t180 = cos(qJ(6));
t299 = pkin(4) + pkin(12);
t274 = t180 * t299;
t283 = qJ(5) * t181;
t309 = t299 * t177 - t283;
t276 = t177 * qJ(5);
t308 = t299 * t181 + t276;
t175 = sin(pkin(6));
t285 = cos(pkin(6));
t238 = t285 * t174;
t179 = sin(qJ(2));
t183 = cos(qJ(2));
t239 = t183 * t284;
t304 = -t178 * t179 + t182 * t239;
t100 = -t175 * t304 - t182 * t238;
t200 = t178 * t239 + t179 * t182;
t222 = qJD(3) * t238;
t240 = t182 * t284;
t72 = t178 * t222 + (t200 * qJD(3) + (t178 * t183 + t179 * t240) * qJD(2)) * t175;
t208 = t100 * t265 - t181 * t72;
t307 = pkin(11) * t208;
t209 = t100 * t167 + t177 * t72;
t306 = pkin(11) * t209;
t305 = -t72 * qJ(5) - t100 * qJD(5);
t281 = t174 * t178;
t139 = t177 * t281 - t181 * t284;
t173 = t181 ^ 2;
t232 = qJD(4) * (t177 ^ 2 - t173);
t176 = sin(qJ(6));
t170 = t176 ^ 2;
t272 = -t180 ^ 2 + t170;
t231 = t272 * qJD(6);
t296 = pkin(10) * t174;
t122 = (-pkin(2) * t183 - t179 * t296 - pkin(1)) * t175;
t211 = t175 * (-t284 * pkin(10) - pkin(9));
t204 = t179 * t211;
t252 = pkin(1) * t285;
t104 = t285 * pkin(2) + t183 * t252 + t204;
t237 = t284 * t104;
t229 = t179 * t252;
t279 = t175 * t183;
t197 = -pkin(9) * t279 - t229;
t95 = (t175 * t239 + t238) * pkin(10) - t197;
t303 = -t178 * t95 + t182 * (t122 * t174 + t237);
t298 = pkin(5) + pkin(11);
t154 = t298 * t181;
t262 = qJD(5) * t181;
t302 = qJD(4) * t308 - qJD(6) * t154 - t262;
t301 = 0.2e1 * t174;
t300 = 0.2e1 * qJD(5);
t297 = pkin(4) * t72;
t295 = pkin(11) * t174;
t140 = t177 * t284 + t181 * t281;
t267 = qJD(3) * t182;
t246 = t174 * t267;
t108 = qJD(4) * t140 + t177 * t246;
t294 = t108 * pkin(4);
t270 = qJD(2) * t179;
t245 = t175 * t270;
t226 = t174 * t245;
t73 = t182 * t222 + (t304 * qJD(3) + (-t179 * t242 + t182 * t183) * qJD(2)) * t175;
t101 = t200 * t175 + t178 * t238;
t138 = t174 * t279 - t285 * t284;
t78 = t101 * t181 - t138 * t177;
t43 = qJD(4) * t78 + t73 * t177 - t181 * t226;
t235 = qJD(2) * t285;
t223 = t183 * t235;
t156 = pkin(1) * t223;
t105 = qJD(2) * t204 + t156;
t126 = (pkin(2) * t179 - t183 * t296) * t175 * qJD(2);
t106 = (t183 * t211 - t229) * qJD(2);
t236 = t284 * t106;
t31 = -t104 * t220 - t182 * t105 - t122 * t246 - t126 * t281 - t178 * t236 + t95 * t268;
t29 = pkin(11) * t226 - t31;
t74 = -t106 * t174 + t284 * t126;
t37 = pkin(3) * t72 - pkin(11) * t73 + t74;
t71 = -t104 * t174 + t284 * t122;
t49 = pkin(3) * t100 - pkin(11) * t101 + t71;
t255 = t122 * t281 + t178 * t237 + t182 * t95;
t54 = -pkin(11) * t138 + t255;
t10 = -t49 * t167 - t177 * t37 - t181 * t29 + t54 * t265;
t5 = t10 + t305;
t4 = -pkin(5) * t43 - t5;
t293 = t4 * t176;
t292 = t4 * t180;
t24 = t177 * t49 + t181 * t54;
t44 = t177 * t226 - t101 * t265 + (-qJD(4) * t138 + t73) * t181;
t291 = t177 * t44;
t77 = t101 * t177 + t138 * t181;
t58 = t100 * t176 - t77 * t180;
t19 = -qJD(6) * t58 + t43 * t176 + t72 * t180;
t290 = t180 * t19;
t278 = t176 * t182;
t109 = t139 * t180 + t174 * t278;
t66 = qJD(6) * t109 + t176 * t108 + t180 * t158;
t289 = t180 * t66;
t41 = -pkin(5) * t108 - t55;
t288 = t41 * t176;
t287 = t41 * t180;
t286 = t66 * t176;
t107 = qJD(4) * t139 - t181 * t246;
t282 = t107 * t177;
t277 = t176 * t299;
t84 = t181 * t130 + t177 * t131;
t269 = qJD(2) * t183;
t266 = qJD(4) * t176;
t264 = qJD(4) * t180;
t263 = qJD(4) * t182;
t261 = qJD(6) * t176;
t260 = qJD(6) * t180;
t259 = qJD(6) * t181;
t258 = qJD(6) * t299;
t257 = t177 * qJD(5);
t256 = -0.2e1 * pkin(3) * qJD(4);
t254 = pkin(11) * t265;
t169 = t175 ^ 2;
t251 = t169 * t269;
t168 = t174 ^ 2;
t250 = t168 * t267;
t249 = t177 * t264;
t248 = t176 * t259;
t247 = t180 * t259;
t244 = t177 * t167;
t243 = t176 * t260;
t23 = -t177 * t54 + t181 * t49;
t221 = t178 * t234;
t233 = -t104 * t221 - t178 * t105 - t122 * t158 - t95 * t267;
t83 = -t177 * t130 + t131 * t181;
t230 = pkin(4) * t158;
t228 = t168 * t245;
t227 = t178 * t250;
t225 = t176 * t249;
t21 = -qJ(5) * t100 - t24;
t80 = pkin(4) * t280 - t83;
t219 = -pkin(4) * t181 - t276;
t218 = pkin(4) * t177 - t283;
t16 = t78 * pkin(5) - t299 * t100 - t23;
t53 = t138 * pkin(3) - t303;
t188 = -t78 * qJ(5) + t53;
t20 = t299 * t77 + t188;
t9 = t16 * t176 + t180 * t20;
t59 = t100 * t180 + t176 * t77;
t217 = t176 * t58 - t180 * t59;
t63 = pkin(5) * t140 + pkin(12) * t280 + t80;
t212 = pkin(2) * t240 - pkin(10) * t281;
t129 = -t284 * pkin(3) - t212;
t189 = -t140 * qJ(5) + t129;
t68 = t299 * t139 + t189;
t39 = t176 * t63 + t180 * t68;
t11 = -t54 * t167 - t177 * t29 + t181 * t37 - t49 * t265;
t110 = t139 * t176 - t180 * t280;
t215 = t109 * t176 + t110 * t180;
t144 = -pkin(3) - t308;
t153 = t298 * t177;
t99 = t144 * t180 + t153 * t176;
t214 = t107 * qJ(5) - t140 * qJD(5);
t79 = qJ(5) * t280 - t84;
t61 = -t130 * t167 - t131 * t265 + t132 * t181 + t177 * t133;
t210 = -t176 * t44 - t78 * t260;
t34 = t180 * t44 - t78 * t261;
t207 = t107 * t176 - t140 * t260;
t81 = -t107 * t180 - t140 * t261;
t203 = t177 * t263 + t181 * t268;
t202 = t177 * t268 - t181 * t263;
t201 = t176 * t265 - t247;
t199 = -pkin(5) * t107 - t61;
t147 = t298 * t265;
t196 = qJD(6) * t309 - t147;
t195 = t203 * t174;
t194 = t202 * t174;
t134 = t273 * qJD(3);
t193 = qJD(4) * t219 + t262;
t192 = pkin(5) * t44 - t299 * t72 - t11;
t22 = -pkin(4) * t100 - t23;
t6 = -t11 - t297;
t191 = t177 * t6 - t181 * t5 + (t177 * t21 + t181 * t22) * qJD(4);
t56 = -t61 - t230;
t190 = t177 * t56 - t181 * t55 + (t177 * t79 + t181 * t80) * qJD(4);
t187 = t134 + t214;
t30 = -t182 * t236 + (-pkin(3) * t245 - t126 * t182) * t174 - t233;
t186 = -t44 * qJ(5) - t78 * qJD(5) + t30;
t185 = -t299 * t43 - t186;
t166 = pkin(11) * t167;
t157 = 0.2e1 * t244;
t149 = -pkin(3) + t219;
t142 = -t176 * t167 - t177 * t260;
t141 = t180 * t167 - t177 * t261;
t137 = qJD(4) * t218 - t257;
t136 = t197 * qJD(2);
t135 = pkin(9) * t245 - t156;
t98 = -t144 * t176 + t153 * t180;
t85 = -0.2e1 * t140 * t107;
t82 = t140 * t167 - t282;
t76 = t139 * pkin(4) + t189;
t69 = -pkin(5) * t139 - t79;
t67 = -t139 * t261 - t176 * t158 + (qJD(6) * t280 + t108) * t180;
t65 = t176 * t257 + t180 * t166 - t99 * qJD(6) + (-t176 * (pkin(12) * t177 + t218) + t180 * t181 * pkin(5)) * qJD(4);
t64 = t144 * t261 - t180 * (qJD(4) * t309 - t257) - t176 * (pkin(5) * t167 + t166) - t153 * t260;
t57 = t187 + t294;
t38 = -t176 * t68 + t180 * t63;
t35 = 0.2e1 * t78 * t44;
t33 = t78 * t167 + t291;
t32 = (t126 * t174 + t236) * t182 + t233;
t26 = t77 * pkin(4) + t188;
t25 = -t107 * t78 + t140 * t44;
t18 = qJD(6) * t59 + t72 * t176 - t43 * t180;
t17 = -pkin(5) * t77 - t21;
t14 = -t176 * (t108 * pkin(12) + t214 + t294) + t180 * t199 - t39 * qJD(6) + (-t176 * t163 + (-pkin(10) * t278 - t178 * t274) * t174) * qJD(3);
t13 = t68 * t261 - t176 * (-t299 * t158 + t199) - t180 * (t299 * t108 + t187) - t63 * t260;
t12 = t43 * pkin(4) + t186;
t8 = t16 * t180 - t176 * t20;
t2 = -qJD(6) * t9 + t176 * t185 + t180 * t192;
t1 = -t16 * t260 - t176 * t192 + t180 * t185 + t20 * t261;
t3 = [0, 0, 0, 0.2e1 * t179 * t251, 0.2e1 * (-t179 ^ 2 + t183 ^ 2) * t169 * qJD(2), 0.2e1 * t175 * t223, -0.2e1 * t175 * t179 * t235, 0, -0.2e1 * t169 * pkin(1) * t270 + 0.2e1 * t136 * t285, -0.2e1 * pkin(1) * t251 + 0.2e1 * t135 * t285, 0.2e1 * t101 * t73, -0.2e1 * t100 * t73 - 0.2e1 * t101 * t72, 0.2e1 * t101 * t226 - 0.2e1 * t138 * t73, -0.2e1 * t100 * t226 + 0.2e1 * t138 * t72, -0.2e1 * t138 * t226, 0.2e1 * t74 * t100 - 0.2e1 * t32 * t138 + 0.2e1 * t226 * t303 + 0.2e1 * t71 * t72, 0.2e1 * t74 * t101 - 0.2e1 * t31 * t138 - 0.2e1 * t255 * t226 + 0.2e1 * t71 * t73, t35, -0.2e1 * t43 * t78 - 0.2e1 * t44 * t77, 0.2e1 * t100 * t44 + 0.2e1 * t72 * t78, -0.2e1 * t100 * t43 - 0.2e1 * t72 * t77, 0.2e1 * t100 * t72, 0.2e1 * t100 * t11 + 0.2e1 * t23 * t72 + 0.2e1 * t30 * t77 + 0.2e1 * t43 * t53, 0.2e1 * t10 * t100 - 0.2e1 * t24 * t72 + 0.2e1 * t30 * t78 + 0.2e1 * t44 * t53, 0.2e1 * t21 * t43 + 0.2e1 * t22 * t44 + 0.2e1 * t5 * t77 + 0.2e1 * t6 * t78, 0.2e1 * t100 * t6 - 0.2e1 * t12 * t77 + 0.2e1 * t22 * t72 - 0.2e1 * t26 * t43, -0.2e1 * t100 * t5 - 0.2e1 * t12 * t78 - 0.2e1 * t21 * t72 - 0.2e1 * t26 * t44, 0.2e1 * t12 * t26 + 0.2e1 * t21 * t5 + 0.2e1 * t22 * t6, 0.2e1 * t59 * t19, -0.2e1 * t18 * t59 - 0.2e1 * t19 * t58, 0.2e1 * t19 * t78 + 0.2e1 * t44 * t59, -0.2e1 * t18 * t78 - 0.2e1 * t44 * t58, t35, 0.2e1 * t17 * t18 + 0.2e1 * t2 * t78 + 0.2e1 * t4 * t58 + 0.2e1 * t44 * t8, 0.2e1 * t1 * t78 + 0.2e1 * t17 * t19 + 0.2e1 * t4 * t59 - 0.2e1 * t44 * t9; 0, 0, 0, 0, 0, t175 * t269, -t245, 0, t136, t135 (t101 * t267 + t178 * t73) * t174 (-t178 * t72 + t182 * t73 + (-t100 * t182 - t101 * t178) * qJD(3)) * t174, -t138 * t246 + t178 * t228 + t73 * t284, t138 * t158 + t182 * t228 - t72 * t284, t284 * t226, t32 * t284 + t134 * t138 + (-pkin(2) * t72 - t74 * t182 + t212 * t245 + t71 * t268) * t174, t31 * t284 - t133 * t138 + (-pkin(2) * t73 + t74 * t178 - t273 * t245 + t71 * t267) * t174, t25, t107 * t77 - t108 * t78 - t139 * t44 - t140 * t43, -t107 * t100 + t140 * t72 + (-t182 * t44 + t268 * t78) * t174, -t108 * t100 - t139 * t72 + (t182 * t43 - t268 * t77) * t174 (t100 * t268 - t182 * t72) * t174, t100 * t61 + t108 * t53 + t129 * t43 + t134 * t77 + t139 * t30 + t72 * t83 + (-t11 * t182 + t23 * t268) * t174, t100 * t60 - t107 * t53 + t129 * t44 + t134 * t78 + t140 * t30 - t72 * t84 + (-t10 * t182 - t24 * t268) * t174, -t107 * t22 + t108 * t21 + t139 * t5 + t140 * t6 + t43 * t79 + t44 * t80 + t55 * t77 + t56 * t78, t100 * t56 - t108 * t26 - t12 * t139 - t43 * t76 - t57 * t77 + t72 * t80 + (-t182 * t6 + t22 * t268) * t174, -t100 * t55 + t107 * t26 - t12 * t140 - t44 * t76 - t57 * t78 - t72 * t79 + (t182 * t5 - t21 * t268) * t174, t12 * t76 + t21 * t55 + t22 * t56 + t26 * t57 + t5 * t79 + t6 * t80, t110 * t19 + t59 * t66, t109 * t19 - t110 * t18 - t58 * t66 + t59 * t67, -t107 * t59 + t110 * t44 + t140 * t19 + t66 * t78, t107 * t58 + t109 * t44 - t140 * t18 + t67 * t78, t25, -t107 * t8 - t109 * t4 + t14 * t78 + t140 * t2 - t17 * t67 + t18 * t69 + t38 * t44 + t41 * t58, t1 * t140 + t107 * t9 + t110 * t4 + t13 * t78 + t17 * t66 + t19 * t69 - t39 * t44 + t41 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227, 0.2e1 * (-t178 ^ 2 + t182 ^ 2) * t168 * qJD(3), t220 * t301, -0.2e1 * t174 * t221, 0, -0.2e1 * t168 * pkin(2) * t268 - 0.2e1 * t134 * t284, -0.2e1 * pkin(2) * t250 + 0.2e1 * t133 * t284, t85, 0.2e1 * t107 * t139 - 0.2e1 * t108 * t140 (t107 * t182 + t140 * t268) * t301 (t108 * t182 - t139 * t268) * t301, -0.2e1 * t227, 0.2e1 * t129 * t108 + 0.2e1 * t134 * t139 + 0.2e1 * (-t182 * t61 + t268 * t83) * t174, -0.2e1 * t129 * t107 + 0.2e1 * t134 * t140 + 0.2e1 * (-t182 * t60 - t268 * t84) * t174, -0.2e1 * t107 * t80 + 0.2e1 * t108 * t79 + 0.2e1 * t139 * t55 + 0.2e1 * t140 * t56, -0.2e1 * t76 * t108 - 0.2e1 * t57 * t139 + 0.2e1 * (-t182 * t56 + t268 * t80) * t174, 0.2e1 * t76 * t107 - 0.2e1 * t57 * t140 + 0.2e1 * (t182 * t55 - t268 * t79) * t174, 0.2e1 * t55 * t79 + 0.2e1 * t56 * t80 + 0.2e1 * t57 * t76, 0.2e1 * t110 * t66, 0.2e1 * t109 * t66 + 0.2e1 * t110 * t67, -0.2e1 * t107 * t110 + 0.2e1 * t140 * t66, -0.2e1 * t107 * t109 + 0.2e1 * t140 * t67, t85, -0.2e1 * t107 * t38 - 0.2e1 * t109 * t41 + 0.2e1 * t14 * t140 - 0.2e1 * t67 * t69, 0.2e1 * t107 * t39 + 0.2e1 * t110 * t41 + 0.2e1 * t13 * t140 + 0.2e1 * t66 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t72, t226, t32, t31, t33, -t177 * t43 + t44 * t181 + (-t177 * t78 - t181 * t77) * qJD(4), t209, -t208, 0, -pkin(3) * t43 - t30 * t181 + t265 * t53 - t306, -pkin(3) * t44 + t167 * t53 + t30 * t177 + t307 (t291 - t181 * t43 + (t177 * t77 + t181 * t78) * qJD(4)) * pkin(11) + t191, t12 * t181 - t137 * t77 - t149 * t43 - t26 * t265 + t306, -t12 * t177 - t137 * t78 - t149 * t44 - t167 * t26 - t307, pkin(11) * t191 + t12 * t149 + t137 * t26, -t59 * t247 + (-t181 * t19 + t265 * t59) * t176, -t217 * t265 + (t176 * t18 - t290 + (t176 * t59 + t180 * t58) * qJD(6)) * t181 (t266 * t78 + t19) * t177 + (qJD(4) * t59 + t210) * t181 (t264 * t78 - t18) * t177 + (-qJD(4) * t58 - t34) * t181, t33, -t147 * t58 + t154 * t18 + t44 * t98 + t65 * t78 + (-t17 * t264 + t2) * t177 + (qJD(4) * t8 - t17 * t261 + t292) * t181, -t147 * t59 + t154 * t19 - t44 * t99 + t64 * t78 + (t17 * t266 + t1) * t177 + (-qJD(4) * t9 - t17 * t260 - t293) * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, -t158, 0, -t134, t133, t82, -t107 * t181 - t177 * t108 + (-t139 * t181 - t140 * t177) * qJD(4), t194, t195, 0, -pkin(3) * t108 + t129 * t265 - t134 * t181 - t202 * t295, pkin(3) * t107 + t129 * t167 + t134 * t177 - t203 * t295 (-t282 - t108 * t181 + (t139 * t177 + t140 * t181) * qJD(4)) * pkin(11) + t190, pkin(11) * t194 - t108 * t149 - t137 * t139 + t181 * t57 - t265 * t76, pkin(11) * t195 + t107 * t149 - t137 * t140 - t167 * t76 - t177 * t57, pkin(11) * t190 + t137 * t76 + t149 * t57, t110 * t201 - t181 * t286, t215 * t265 + (-t176 * t67 - t289 + (-t109 * t180 + t110 * t176) * qJD(6)) * t181 (t140 * t266 + t66) * t177 + (qJD(4) * t110 + t207) * t181 (t140 * t264 + t67) * t177 + (qJD(4) * t109 - t81) * t181, t82, -t107 * t98 + t109 * t147 + t140 * t65 - t154 * t67 + (-t264 * t69 + t14) * t177 + (qJD(4) * t38 - t261 * t69 + t287) * t181, t107 * t99 - t110 * t147 + t140 * t64 + t154 * t66 + (t266 * t69 + t13) * t177 + (-qJD(4) * t39 - t260 * t69 - t288) * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, -0.2e1 * t232, 0, 0, 0, t177 * t256, t181 * t256, 0, 0.2e1 * t137 * t181 - 0.2e1 * t149 * t265, -0.2e1 * t137 * t177 - 0.2e1 * t149 * t167, 0.2e1 * t149 * t137, -0.2e1 * t170 * t244 + 0.2e1 * t173 * t243, -0.2e1 * t173 * t231 - 0.4e1 * t181 * t225, 0.2e1 * t176 * t232 - 0.2e1 * t177 * t247, 0.2e1 * t177 * t248 + 0.2e1 * t180 * t232, t157, 0.2e1 * (-t154 * t264 + t65) * t177 + 0.2e1 * (qJD(4) * t98 - t147 * t180 - t154 * t261) * t181, 0.2e1 * (t154 * t266 + t64) * t177 + 0.2e1 * (-qJD(4) * t99 + t147 * t176 - t154 * t260) * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t43, t72, t11, t10, -pkin(4) * t44 - qJ(5) * t43 - qJD(5) * t77, -t11 - 0.2e1 * t297, -t5 - t305, -pkin(4) * t6 - qJ(5) * t5 - qJD(5) * t21, -t261 * t59 + t290, qJD(6) * t217 - t19 * t176 - t180 * t18, t34, t210, 0, -t44 * t274 + qJ(5) * t18 + qJD(5) * t58 + t293 + (t17 * t180 + t277 * t78) * qJD(6), t44 * t277 + qJ(5) * t19 + qJD(5) * t59 + t292 + (-t17 * t176 + t274 * t78) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, -t108, t158, t61, t60, pkin(4) * t107 - qJ(5) * t108 - qJD(5) * t139, -t61 - 0.2e1 * t230, 0.2e1 * t198 - t60, -pkin(4) * t56 - qJ(5) * t55 - qJD(5) * t79, -t110 * t261 + t289, -qJD(6) * t215 + t180 * t67 - t286, t81, t207, 0, t107 * t274 - qJ(5) * t67 - qJD(5) * t109 + t288 + (t140 * t277 + t180 * t69) * qJD(6), -t107 * t277 + qJ(5) * t66 + qJD(5) * t110 + t287 + (t140 * t274 - t176 * t69) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, -t265, 0, -t166, t254, t193, t166, -t254, t193 * pkin(11), t181 * t231 + t225, 0.4e1 * t181 * t243 - t265 * t272, t141, t142, 0, t196 * t176 - t180 * t302, t176 * t302 + t196 * t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, qJ(5) * t300, -0.2e1 * t243, 0.2e1 * t231, 0, 0, 0, 0.2e1 * qJ(5) * t260 + 0.2e1 * qJD(5) * t176, -0.2e1 * qJ(5) * t261 + 0.2e1 * qJD(5) * t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t72, 0, t6, 0, 0, 0, 0, 0, t34, t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, t158, 0, t56, 0, 0, 0, 0, 0, t81, t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, 0, 0, t166, 0, 0, 0, 0, 0, t141, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, -t18, t44, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t67, -t107, t14, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, t248 + t249, t167, t65, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t260, 0, t176 * t258, t180 * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
