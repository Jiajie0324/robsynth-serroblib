% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR15_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:50:14
% EndTime: 2019-03-10 00:51:00
% DurationCPUTime: 21.45s
% Computational Cost: add. (36428->814), mult. (109301->1095), div. (0->0), fcn. (89907->12), ass. (0->368)
t333 = sin(qJ(2));
t335 = cos(qJ(2));
t332 = sin(qJ(3));
t511 = cos(pkin(7));
t450 = t332 * t511;
t535 = cos(qJ(3));
t380 = -t333 * t450 + t535 * t335;
t329 = sin(pkin(6));
t482 = qJD(1) * t329;
t255 = t380 * t482;
t328 = sin(pkin(7));
t456 = qJD(3) * t535;
t433 = t328 * t456;
t545 = t433 - t255;
t512 = cos(pkin(6));
t471 = pkin(1) * t512;
t320 = t335 * t471;
t311 = qJD(1) * t320;
t402 = t329 * (-t511 * pkin(10) - pkin(9));
t392 = t333 * t402;
t236 = qJD(1) * t392 + t311;
t319 = t333 * t471;
t359 = t335 * t402 - t319;
t237 = t359 * qJD(1);
t532 = pkin(10) * t328;
t391 = (pkin(2) * t333 - t335 * t532) * t329;
t268 = qJD(1) * t391;
t429 = t511 * t535;
t497 = t328 * t332;
t288 = pkin(2) * t429 - pkin(10) * t497;
t547 = t288 * qJD(3) - t535 * t236 - t237 * t450 - t268 * t497;
t178 = -t237 * t328 + t511 * t268;
t378 = t332 * t335 + t333 * t429;
t254 = t378 * t482;
t569 = -pkin(3) * t254 + pkin(11) * t255 - t178 + (pkin(3) * t332 - t535 * pkin(11)) * t328 * qJD(3);
t461 = t333 * t482;
t436 = t328 * t461;
t568 = pkin(11) * t436 - t547;
t331 = sin(qJ(4));
t534 = cos(qJ(4));
t286 = t331 * t497 - t534 * t511;
t486 = t286 * qJD(4) + t331 * t436 - t545 * t534;
t469 = t328 * t535;
t290 = pkin(2) * t450 + pkin(10) * t469;
t567 = t290 * qJD(3) - t332 * t236 + t237 * t429;
t479 = qJD(4) * t331;
t445 = t512 * qJD(1);
t409 = t445 + qJD(2);
t393 = t328 * t409;
t296 = t535 * t393;
t405 = t335 * t429;
t396 = t329 * t405;
t349 = qJD(1) * t396 + t296;
t435 = t332 * t461;
t204 = t435 - t349;
t500 = t204 * t331;
t559 = t479 + t500;
t465 = t535 * t268;
t490 = -(-pkin(3) * t461 - t465) * t328 + t567;
t468 = t328 * t534;
t287 = t331 * t511 + t332 * t468;
t496 = t329 * t333;
t417 = t468 * t496;
t398 = qJD(1) * t417;
t487 = -qJD(4) * t287 - t331 * t545 - t398;
t480 = qJD(3) * t332;
t458 = t328 * t480;
t548 = t254 - t458;
t201 = qJD(4) + t204;
t274 = t511 * pkin(11) + t290;
t275 = (-t535 * pkin(3) - pkin(11) * t332 - pkin(2)) * t328;
t455 = qJD(4) * t534;
t517 = -t274 * t455 - t275 * t479 + t568 * t331 + t534 * t569;
t566 = qJ(5) * t486 - t287 * qJD(5) + t490;
t495 = t329 * t335;
t484 = pkin(9) * t495 + t319;
t279 = t484 * qJD(1);
t449 = t335 * t511;
t430 = t329 * t449;
t198 = t279 + (qJD(1) * t430 + t393) * pkin(10);
t360 = t512 * pkin(2) + t392;
t203 = qJD(2) * pkin(2) + qJD(1) * t360 + t311;
t264 = (-pkin(2) * t335 - t333 * t532 - pkin(1)) * t329;
t250 = qJD(1) * t264;
t126 = t535 * t198 + (t511 * t203 + t250 * t328) * t332;
t565 = pkin(4) * t559 - t331 * qJD(5) - t126;
t537 = pkin(4) + pkin(12);
t564 = pkin(5) * t486 - t537 * t548 + t517;
t563 = -t487 * t537 + t566;
t562 = t565 - t201 * (-pkin(12) * t331 + qJ(5) * t534);
t379 = t332 * t449 + t535 * t333;
t366 = t379 * t329;
t384 = t332 * t393;
t206 = qJD(1) * t366 + t384;
t536 = pkin(5) + pkin(11);
t310 = t536 * t534;
t125 = -t332 * t198 + t203 * t429 + t250 * t469;
t152 = pkin(3) * t206 + pkin(11) * t204;
t424 = t331 * t125 - t534 * t152;
t462 = t534 * t204;
t561 = pkin(5) * t462 + t310 * qJD(4) + t537 * t206 - t424;
t518 = -t274 * t479 + t275 * t455 + t331 * t569 - t568 * t534;
t161 = -t328 * t203 + t511 * t250;
t361 = t204 * pkin(3) - t206 * pkin(11) + t161;
t104 = t534 * t361;
t473 = t328 * t495;
t304 = qJD(1) * t473;
t368 = t511 * t409 - t304;
t362 = -qJD(3) - t368;
t108 = -pkin(11) * t362 + t126;
t47 = t108 * t331 - t104;
t491 = qJD(5) + t47;
t560 = qJD(6) * t534 + t206;
t386 = t455 + t462;
t352 = t534 * t362;
t169 = t206 * t331 + t352;
t330 = sin(qJ(6));
t334 = cos(qJ(6));
t129 = -t334 * t169 + t201 * t330;
t325 = t329 ^ 2;
t477 = qJD(1) * qJD(2);
t558 = -0.2e1 * t325 * t477;
t542 = qJD(2) * t378 + qJD(3) * t379;
t345 = t542 * t329;
t376 = qJD(3) * t384;
t173 = qJD(1) * t345 + t376;
t463 = t534 * t173;
t557 = pkin(11) * (t201 * t479 - t463);
t358 = t331 * t362;
t171 = t534 * t206 - t358;
t492 = pkin(5) * t171 + t491;
t32 = -t537 * t201 + t492;
t107 = pkin(3) * t362 - t125;
t343 = -t171 * qJ(5) + t107;
t39 = t537 * t169 + t343;
t12 = t32 * t334 - t330 * t39;
t452 = t329 * t477;
t407 = t535 * t452;
t432 = t333 * t452;
t412 = t332 * t432;
t485 = -qJD(3) * t435 - t511 * t412;
t374 = t335 * t407 + t485;
t341 = qJD(3) * t349 + t374;
t339 = -qJD(2) * t398 + t331 * t341;
t101 = qJD(4) * t171 + t339;
t410 = t328 * t432;
t100 = qJD(4) * t352 + t206 * t479 - t331 * t410 - t534 * t341;
t307 = qJD(2) * t311;
t381 = qJD(2) * t392;
t220 = qJD(1) * t381 + t307;
t239 = t359 * qJD(2);
t221 = qJD(1) * t239;
t269 = qJD(2) * t391;
t259 = qJD(1) * t269;
t427 = qJD(3) * t450;
t70 = -t198 * t456 - t203 * t427 - t332 * t220 + t221 * t429 - t250 * t458 + t259 * t469;
t67 = -pkin(3) * t410 - t70;
t348 = qJ(5) * t100 - qJD(5) * t171 + t67;
t14 = t537 * t101 + t348;
t356 = t331 * t361;
t404 = qJD(3) * t429;
t377 = t198 * t480 - t203 * t404 - t535 * t220 - t221 * t450 - t250 * t433 - t259 * t497;
t66 = pkin(11) * t410 - t377;
t174 = -t328 * t221 + t511 * t259;
t85 = t173 * pkin(3) - pkin(11) * t341 + t174;
t16 = -qJD(4) * t356 - t108 * t455 - t331 * t66 + t534 * t85;
t6 = -pkin(5) * t100 - t537 * t173 - t16;
t1 = qJD(6) * t12 + t14 * t334 + t330 * t6;
t168 = qJD(6) + t171;
t556 = -t12 * t168 + t1;
t13 = t32 * t330 + t334 * t39;
t2 = -qJD(6) * t13 - t14 * t330 + t334 * t6;
t555 = t13 * t168 + t2;
t533 = pkin(4) * t173;
t11 = -t16 - t533;
t48 = t534 * t108 + t356;
t43 = -t201 * qJ(5) - t48;
t554 = t201 * t43 + t11;
t399 = t201 * t48 + t16;
t40 = qJD(6) * t129 - t330 * t101 - t334 * t173;
t442 = t129 * t168;
t553 = t40 - t442;
t131 = t169 * t330 + t201 * t334;
t41 = qJD(6) * t131 - t334 * t101 + t173 * t330;
t506 = t131 * t168;
t552 = -t41 + t506;
t448 = t512 * t328;
t406 = t535 * t448;
t494 = t332 * t333;
t177 = qJD(3) * t406 + ((t405 - t494) * qJD(3) + t380 * qJD(2)) * t329;
t431 = t332 * t448;
t230 = t431 + t366;
t419 = t512 * t511;
t285 = -t419 + t473;
t481 = qJD(2) * t333;
t459 = t329 * t481;
t434 = t328 * t459;
t114 = t177 * t534 - t230 * t479 - t285 * t455 + t331 * t434;
t183 = t230 * t534 - t285 * t331;
t76 = t100 * t183;
t551 = t114 * t171 - t76;
t93 = t100 * t287;
t550 = -t486 * t171 - t93;
t97 = t100 * t331;
t549 = t386 * t171 - t97;
t546 = t328 * t465 + t567;
t530 = t169 * pkin(5);
t35 = -t43 - t530;
t544 = t100 * t537 + t168 * t35;
t543 = -t171 * t206 + t331 * t173 + t201 * t386;
t521 = qJ(5) * t254 - t328 * (qJ(5) * t480 - t535 * qJD(5)) - t518;
t541 = -t101 * t469 - t169 * t548 + t173 * t286 - t201 * t487;
t540 = t100 * t469 - t171 * t548 + t287 * t173 - t201 * t486;
t539 = t171 ^ 2;
t538 = t201 ^ 2;
t337 = qJD(1) ^ 2;
t531 = pkin(11) * t173;
t186 = -t331 * t274 + t534 * t275;
t185 = pkin(4) * t469 - t186;
t153 = t287 * pkin(5) + pkin(12) * t469 + t185;
t273 = -t511 * pkin(3) - t288;
t355 = -t287 * qJ(5) + t273;
t162 = t537 * t286 + t355;
t99 = t153 * t330 + t162 * t334;
t529 = qJD(6) * t99 + t563 * t330 + t334 * t564;
t98 = t153 * t334 - t162 * t330;
t528 = -qJD(6) * t98 + t330 * t564 - t563 * t334;
t54 = t169 * pkin(4) + t343;
t525 = t171 * t54;
t522 = pkin(5) * t487 - t521;
t520 = pkin(4) * t548 - t517;
t519 = -pkin(4) * t487 + t566;
t305 = -t534 * pkin(4) - t331 * qJ(5) - pkin(3);
t295 = -t534 * pkin(12) + t305;
t309 = t536 * t331;
t227 = -t295 * t330 + t309 * t334;
t516 = qJD(6) * t227 + t330 * t561 + t334 * t562;
t228 = t295 * t334 + t309 * t330;
t515 = -qJD(6) * t228 - t330 * t562 + t334 * t561;
t514 = -qJ(5) * t386 + t565;
t81 = t534 * t125 + t331 * t152;
t63 = -qJ(5) * t206 - t81;
t513 = -pkin(5) * t500 - t536 * t479 + t63;
t510 = qJ(5) * t169;
t507 = t131 * t129;
t505 = t169 * t171;
t504 = t171 * t201;
t167 = t173 * qJ(5);
t229 = t329 * t494 - t396 - t406;
t503 = t173 * t229;
t502 = t201 * t206;
t499 = t206 * t204;
t498 = t325 * t337;
t235 = t320 + t360;
t175 = -t235 * t328 + t511 * t264;
t121 = pkin(3) * t229 - pkin(11) * t230 + t175;
t222 = (t430 + t448) * pkin(10) + t484;
t140 = t535 * t222 + t235 * t450 + t264 * t497;
t128 = -pkin(11) * t285 + t140;
t58 = t331 * t121 + t534 * t128;
t242 = t334 * t286 + t330 * t469;
t489 = qJD(6) * t242 - t330 * t487 - t334 * t548;
t243 = -t330 * t286 + t334 * t469;
t488 = qJD(6) * t243 + t330 * t548 - t334 * t487;
t187 = t534 * t274 + t331 * t275;
t483 = t333 ^ 2 - t335 ^ 2;
t478 = qJD(6) * t537;
t441 = -qJD(4) * t104 + t108 * t479 - t331 * t85 - t534 * t66;
t10 = -t201 * qJD(5) - t167 + t441;
t476 = t10 * t534;
t475 = t441 * t534;
t474 = t335 * t498;
t470 = t101 * t534;
t467 = t330 * t534;
t466 = t334 * t534;
t464 = t535 * t269;
t460 = t328 * t481;
t457 = -t169 ^ 2 + t539;
t451 = t335 * t477;
t179 = -t239 * t328 + t511 * t269;
t444 = t201 * t331;
t443 = t168 * t330;
t439 = pkin(11) * t455;
t438 = t333 * t474;
t437 = t173 * t469;
t426 = t329 * t337 * t512;
t425 = pkin(1) * t558;
t55 = -qJ(5) * t229 - t58;
t423 = -t534 * t121 + t331 * t128;
t38 = t183 * pkin(5) - t537 * t229 + t423;
t182 = t230 * t331 + t285 * t534;
t139 = -t332 * t222 + t235 * t429 + t264 * t469;
t127 = t285 * pkin(3) - t139;
t350 = -t183 * qJ(5) + t127;
t53 = t537 * t182 + t350;
t20 = -t330 * t53 + t334 * t38;
t21 = t330 * t38 + t334 * t53;
t418 = (qJD(4) * t169 - t100) * pkin(11);
t113 = -qJD(2) * t417 + qJD(4) * t183 + t177 * t331;
t416 = t101 * t182 + t113 * t169;
t414 = t182 * t334 - t229 * t330;
t146 = t182 * t330 + t229 * t334;
t411 = t325 * t333 * t451;
t408 = 0.2e1 * t445 + qJD(2);
t400 = -t334 * t100 - t168 * t443;
t397 = -t206 * t169 - t463;
t312 = qJD(2) * t320;
t238 = t312 + t381;
t86 = -t222 * t480 + t235 * t404 + t535 * t238 + t239 * t450 + t264 * t433 + t269 * t497;
t77 = pkin(11) * t434 + t86;
t176 = qJD(3) * t431 + t345;
t92 = pkin(3) * t176 - pkin(11) * t177 + t179;
t23 = -t121 * t479 - t128 * t455 - t331 * t77 + t534 * t92;
t22 = t121 * t455 - t128 * t479 + t331 * t92 + t534 * t77;
t270 = -pkin(9) * t432 + t307;
t395 = t101 * t286 - t487 * t169;
t184 = qJ(5) * t469 - t187;
t383 = -t168 ^ 2 * t334 + t100 * t330;
t375 = t169 * t444 - t470;
t372 = -t169 * t201 + t100;
t371 = t330 * t560 + t334 * t559;
t370 = -t330 * t559 + t334 * t560;
t283 = t484 * qJD(2);
t369 = (t171 * t455 - t470) * pkin(11);
t367 = -t222 * t456 - t235 * t427 - t332 * t238 + t239 * t429 - t264 * t458;
t365 = t100 * t182 - t101 * t183 - t113 * t171 - t114 * t169;
t364 = t100 * t229 - t114 * t201 - t171 * t176 - t173 * t183;
t363 = t101 * t229 + t113 * t201 + t169 * t176 + t173 * t182;
t17 = -qJ(5) * t176 - qJD(5) * t229 - t22;
t357 = qJD(3) * t362;
t353 = t100 * t286 - t101 * t287 + t486 * t169 + t487 * t171;
t78 = (-pkin(3) * t459 - t464) * t328 - t367;
t346 = -t100 * t534 - t386 * t169 + (-t101 - t504) * t331;
t344 = -t114 * qJ(5) - t183 * qJD(5) + t78;
t340 = t328 * t341;
t338 = -qJD(4) * t358 + t206 * t455 + t339 - t504;
t324 = t328 ^ 2;
t289 = -pkin(9) * t496 + t320;
t282 = -pkin(9) * t459 + t312;
t277 = -pkin(9) * t461 + t311;
t271 = qJD(1) * t283;
t181 = t286 * pkin(4) + t355;
t166 = -t286 * pkin(5) - t184;
t109 = pkin(4) * t171 + t510;
t90 = -t201 * t548 - t437;
t88 = t176 * t201 + t503;
t87 = t328 * t464 + t367;
t79 = t537 * t171 + t510;
t71 = t182 * pkin(4) + t350;
t65 = -t206 * pkin(4) + t424;
t56 = -t229 * pkin(4) + t423;
t51 = qJD(6) * t414 + t113 * t330 + t176 * t334;
t50 = qJD(6) * t146 - t113 * t334 + t176 * t330;
t44 = -pkin(5) * t182 - t55;
t42 = -pkin(4) * t201 + t491;
t37 = t48 - t530;
t31 = t113 * pkin(4) + t344;
t26 = t330 * t37 + t334 * t79;
t25 = -t330 * t79 + t334 * t37;
t24 = pkin(4) * t101 + t348;
t19 = t537 * t113 + t344;
t18 = -t176 * pkin(4) - t23;
t9 = -pkin(5) * t113 - t17;
t8 = t114 * pkin(5) - t537 * t176 - t23;
t7 = -pkin(5) * t101 - t10;
t4 = -qJD(6) * t21 - t19 * t330 + t334 * t8;
t3 = qJD(6) * t20 + t19 * t334 + t330 * t8;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t411, t483 * t558, t408 * qJD(2) * t495, -0.2e1 * t411, -t408 * t459, 0, -t271 * t512 - t283 * t409 + t333 * t425, -t270 * t512 - t282 * t409 + t335 * t425 (t270 * t335 + t271 * t333 + (-t277 * t335 - t279 * t333) * qJD(2) + (t282 * t335 + t283 * t333 + (-t289 * t335 - t333 * t484) * qJD(2)) * qJD(1)) * t329, t270 * t484 - t271 * t289 - t277 * t283 + t279 * t282, t206 * t177 + t230 * t341, -t230 * t173 - t206 * t176 - t177 * t204 - t229 * t341, -t177 * t362 - (qJD(3) * t296 + t485) * t285 + (t206 * t460 + (t230 * t460 - (t535 * qJD(2) + t404) * t285 * t335) * qJD(1)) * t329, t176 * t204 + t503, t176 * t362 + t173 * t285 + (-qJD(1) * t229 - t204) * t434 (-qJD(2) * t362 - t285 * t477) * t328 * t496, -t87 * t362 - t70 * t285 + t179 * t204 + t175 * t173 + t174 * t229 + t161 * t176 + (qJD(1) * t139 + t125) * t434, -t126 * t434 - t140 * t410 + t161 * t177 + t174 * t230 + t175 * t341 + t179 * t206 - t285 * t377 + t362 * t86, -t125 * t177 - t126 * t176 - t139 * t341 - t140 * t173 - t86 * t204 - t87 * t206 + t229 * t377 - t70 * t230, t125 * t87 + t126 * t86 + t139 * t70 - t140 * t377 + t161 * t179 + t174 * t175, t551, t365, -t364, t416, -t363, t88, t101 * t127 + t107 * t113 + t16 * t229 + t169 * t78 - t173 * t423 - t176 * t47 + t182 * t67 + t201 * t23, -t100 * t127 + t107 * t114 + t171 * t78 - t173 * t58 - t176 * t48 + t183 * t67 - t201 * t22 + t229 * t441, -t100 * t423 - t101 * t58 - t113 * t48 + t114 * t47 - t16 * t183 - t169 * t22 - t171 * t23 + t182 * t441, t107 * t78 + t127 * t67 - t16 * t423 + t22 * t48 - t23 * t47 - t441 * t58, t88, t364, t363, t551, t365, t416, t10 * t182 - t100 * t56 + t101 * t55 + t11 * t183 + t113 * t43 + t114 * t42 + t169 * t17 + t171 * t18, -t101 * t71 + t11 * t229 - t113 * t54 - t169 * t31 + t173 * t56 + t176 * t42 + t18 * t201 - t182 * t24, -t10 * t229 + t100 * t71 - t114 * t54 - t17 * t201 - t171 * t31 - t173 * t55 - t176 * t43 - t183 * t24, t10 * t55 + t11 * t56 + t17 * t43 + t18 * t42 + t24 * t71 + t31 * t54, t131 * t51 - t146 * t40, -t129 * t51 - t131 * t50 - t146 * t41 - t40 * t414, -t100 * t146 + t114 * t131 + t168 * t51 - t183 * t40, t129 * t50 - t41 * t414, -t100 * t414 - t114 * t129 - t168 * t50 - t183 * t41, t114 * t168 - t76, -t100 * t20 + t114 * t12 + t129 * t9 + t168 * t4 + t183 * t2 + t35 * t50 + t41 * t44 - t414 * t7, -t1 * t183 + t100 * t21 - t114 * t13 + t131 * t9 + t146 * t7 - t168 * t3 + t35 * t51 - t40 * t44, t1 * t414 - t12 * t51 - t129 * t3 - t13 * t50 - t131 * t4 - t146 * t2 + t20 * t40 - t21 * t41, t1 * t21 + t12 * t4 + t13 * t3 + t2 * t20 + t35 * t9 + t44 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t483 * t498, -t335 * t426, t438, t333 * t426, 0, -t329 * pkin(9) * t451 + t279 * t409 + (-qJD(2) * t445 + t498) * t333 * pkin(1), pkin(1) * t474 + t277 * t409 - t270, 0, 0, t545 * t206 + t332 * t340, -t173 * t497 - t545 * t204 + t548 * t206 + t535 * t340, -t206 * t436 + t255 * t362 + t324 * t412 + t341 * t511 - t357 * t469, -t204 * t548 - t437, t324 * t333 * t407 - t173 * t511 - t254 * t362 + (t204 * t461 + t332 * t357) * t328 -(qJD(1) * t419 + qJD(3) - t304) * t436, t70 * t511 - t178 * t204 - t161 * t254 + (t161 * t480 - t174 * t535 - pkin(2) * t173 + (qJD(2) * t288 - t125) * t461) * t328 + t546 * t362, -pkin(2) * t340 + t126 * t436 + t545 * t161 + t174 * t497 - t178 * t206 - t290 * t410 + t547 * t362 + t377 * t511, -t545 * t125 + t548 * t126 - t290 * t173 - t547 * t204 + t546 * t206 - t288 * t341 - t377 * t469 - t497 * t70, -pkin(2) * t174 * t328 - t546 * t125 + t547 * t126 - t161 * t178 + t288 * t70 - t290 * t377, t550, t353, t540, t395, -t541, t90, t273 * t101 + t186 * t173 + t47 * t254 + t67 * t286 + (-t535 * t16 - t47 * t480) * t328 + t517 * t201 + t490 * t169 - t487 * t107, -t273 * t100 - t187 * t173 + t48 * t254 + t67 * t287 + (-t441 * t535 - t48 * t480) * t328 - t518 * t201 + t490 * t171 - t486 * t107, t100 * t186 - t101 * t187 - t16 * t287 - t169 * t518 - t171 * t517 + t286 * t441 - t47 * t486 + t48 * t487, t107 * t490 + t16 * t186 - t187 * t441 + t273 * t67 - t47 * t517 + t48 * t518, t90, -t540, t541, t550, t353, t395, t10 * t286 - t100 * t185 + t101 * t184 + t11 * t287 + t169 * t521 + t171 * t520 - t42 * t486 - t43 * t487, -t181 * t101 + t185 * t173 - t24 * t286 - t42 * t254 + t487 * t54 + (-t535 * t11 + t42 * t480) * t328 + t520 * t201 - t519 * t169, t181 * t100 - t184 * t173 - t24 * t287 + t43 * t254 + t486 * t54 + (t535 * t10 - t43 * t480) * t328 - t521 * t201 - t519 * t171, t10 * t184 + t11 * t185 + t181 * t24 + t42 * t520 + t43 * t521 + t519 * t54, t131 * t489 + t243 * t40, -t129 * t489 + t131 * t488 - t242 * t40 + t243 * t41, t100 * t243 - t131 * t486 + t168 * t489 - t287 * t40, -t129 * t488 - t242 * t41, -t100 * t242 + t129 * t486 + t168 * t488 - t287 * t41, -t168 * t486 - t93, -t100 * t98 - t12 * t486 + t129 * t522 + t166 * t41 - t168 * t529 + t2 * t287 - t242 * t7 - t35 * t488, -t1 * t287 + t100 * t99 + t13 * t486 + t131 * t522 - t166 * t40 + t168 * t528 - t243 * t7 + t35 * t489, t1 * t242 - t12 * t489 + t129 * t528 + t13 * t488 + t131 * t529 + t2 * t243 + t40 * t98 - t41 * t99, t1 * t99 - t12 * t529 - t13 * t528 + t166 * t7 + t2 * t98 + t35 * t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, -t204 ^ 2 + t206 ^ 2, t204 * t368 + (t204 + t349) * qJD(3) + t374, -t499, -t206 * t362 - t482 * t542 - t376, t410, -t126 * t362 - t161 * t206 + t70, -t125 * t362 + t161 * t204 + t377, 0, 0, t549, t346, t543, t375, -t538 * t331 - t397, -t502, -t67 * t534 - pkin(3) * t101 - t126 * t169 + t47 * t206 + (-t439 + t424) * t201 + (t107 * t201 - t531) * t331, pkin(3) * t100 + t107 * t386 - t126 * t171 + t81 * t201 + t48 * t206 + t67 * t331 + t557, -t475 + t81 * t169 - t424 * t171 + t386 * t47 + t369 + (t418 - t399) * t331, -t67 * pkin(3) - t107 * t126 - t47 * t424 - t48 * t81 + (-t475 - t16 * t331 + (-t331 * t48 + t534 * t47) * qJD(4)) * pkin(11), -t502, -t543, t201 * t444 + t397, t549, t346, t375, -t476 - t63 * t169 - t65 * t171 + t386 * t42 + t369 + (t418 + t554) * t331, t24 * t534 - t305 * t101 - t42 * t206 + (t439 - t65) * t201 - t514 * t169 + (-t201 * t54 + t531) * t331, t305 * t100 - t171 * t514 + t63 * t201 + t43 * t206 - t24 * t331 - t386 * t54 - t557, t24 * t305 - t42 * t65 - t43 * t63 + t514 * t54 + (-t476 + t11 * t331 + (t331 * t43 + t534 * t42) * qJD(4)) * pkin(11), -t131 * t370 + t40 * t467, t129 * t370 + t131 * t371 + t40 * t466 + t41 * t467, t100 * t467 + t131 * t386 - t168 * t370 - t40 * t331, -t129 * t371 + t41 * t466, t100 * t466 - t129 * t386 + t168 * t371 - t41 * t331, t168 * t386 - t97, -t227 * t100 + t12 * t386 + t129 * t513 + t168 * t515 + t2 * t331 + t310 * t41 - t35 * t371 + t466 * t7, -t1 * t331 + t228 * t100 - t13 * t386 + t131 * t513 - t168 * t516 - t310 * t40 - t35 * t370 - t467 * t7, -t1 * t466 + t12 * t370 - t129 * t516 + t13 * t371 - t131 * t515 + t2 * t467 + t227 * t40 - t228 * t41, t1 * t228 + t12 * t515 + t13 * t516 + t2 * t227 + t310 * t7 + t35 * t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, t457, -t372, -t505, -t338, t173, -t107 * t171 + t399, t107 * t169 - t201 * t47 + t441, 0, 0, t173, t372, t338, t505, t457, -t505, pkin(4) * t100 - qJ(5) * t101 + (-t43 - t48) * t171 + (t42 - t491) * t169, t109 * t169 - t399 + t525 - 0.2e1 * t533, t109 * t171 - t169 * t54 + t201 * t491 - t10 + t167, -pkin(4) * t11 - qJ(5) * t10 - t109 * t54 - t42 * t48 - t43 * t491, -t131 * t443 - t334 * t40 (-t41 - t506) * t334 + (t40 + t442) * t330, t131 * t169 + t400, t330 * t41 + t334 * t442, -t129 * t169 + t383, t168 * t169, qJ(5) * t41 + t12 * t169 + t330 * t7 + (t330 * t478 - t25) * t168 + t492 * t129 + t544 * t334, -qJ(5) * t40 - t13 * t169 + t334 * t7 + (t334 * t478 + t26) * t168 + t492 * t131 - t544 * t330, t129 * t26 + t131 * t25 + (-t13 * t171 - t537 * t40 - t2 + (t129 * t537 - t13) * qJD(6)) * t334 + (t12 * t171 + t537 * t41 - t1 + (-t131 * t537 + t12) * qJD(6)) * t330, qJ(5) * t7 - t12 * t25 - t13 * t26 + t492 * t35 - (t1 * t330 + t2 * t334 + (-t12 * t330 + t13 * t334) * qJD(6)) * t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t173 - t505, -t538 - t539, t525 + t554, 0, 0, 0, 0, 0, 0, -t129 * t201 + t400, -t131 * t201 + t383, t552 * t330 + t553 * t334, -t201 * t35 + t330 * t556 + t334 * t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507, -t129 ^ 2 + t131 ^ 2, -t553, -t507, t552, -t100, -t131 * t35 + t555, t129 * t35 - t556, 0, 0;];
tauc_reg  = t5;
