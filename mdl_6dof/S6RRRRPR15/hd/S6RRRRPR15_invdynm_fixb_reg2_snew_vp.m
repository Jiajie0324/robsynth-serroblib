% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 03:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRPR15_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR15_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR15_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 03:45:16
% EndTime: 2019-05-08 03:48:28
% DurationCPUTime: 203.90s
% Computational Cost: add. (1413975->1249), mult. (3503803->1855), div. (0->0), fcn. (2963483->14), ass. (0->887)
t2505 = cos(pkin(6));
t2789 = qJD(1) * t2505;
t2495 = qJD(2) + t2789;
t2508 = sin(qJ(3));
t2513 = cos(qJ(3));
t2504 = cos(pkin(7));
t2503 = sin(pkin(6));
t2514 = cos(qJ(2));
t2750 = t2503 * t2514;
t2728 = qJD(1) * t2750;
t2708 = t2504 * t2728;
t2509 = sin(qJ(2));
t2751 = t2503 * t2509;
t2729 = qJD(1) * t2751;
t2502 = sin(pkin(7));
t2752 = t2502 * t2513;
t2455 = -t2495 * t2752 + t2508 * t2729 - t2513 * t2708;
t2451 = qJD(4) + t2455;
t2809 = t2451 ^ 2;
t2747 = t2504 * t2514;
t2753 = t2502 * t2508;
t2790 = qJD(1) * t2503;
t2457 = t2495 * t2753 + (t2508 * t2747 + t2509 * t2513) * t2790;
t2507 = sin(qJ(4));
t2512 = cos(qJ(4));
t2487 = t2502 * t2728;
t2710 = t2495 * t2504 - t2487;
t2701 = qJD(3) + t2710;
t2433 = t2512 * t2457 + t2507 * t2701;
t2810 = t2433 ^ 2;
t2370 = t2810 + t2809;
t2493 = qJD(2) * t2729;
t2734 = qJDD(1) * t2514;
t2693 = t2503 * t2734 - t2493;
t2595 = t2504 * t2693;
t2709 = qJDD(1) * t2505 + qJDD(2);
t2534 = t2502 * t2709 + t2595;
t2735 = qJDD(1) * t2509;
t2788 = qJD(1) * t2514;
t2593 = qJD(2) * t2788 + t2735;
t2550 = t2593 * t2503;
t2537 = t2508 * t2550 - t2513 * t2534;
t2404 = -t2457 * qJD(3) - t2537;
t2403 = qJDD(4) - t2404;
t2431 = t2457 * t2507 - t2512 * t2701;
t2766 = t2433 * t2431;
t2828 = t2766 + t2403;
t2851 = t2828 * t2507;
t2261 = t2370 * t2512 + t2851;
t2850 = t2828 * t2512;
t2264 = t2370 * t2507 - t2850;
t2523 = t2508 * t2534 + t2513 * t2550;
t2405 = -t2455 * qJD(3) + t2523;
t2587 = t2504 * t2709 + qJDD(3);
t2531 = t2502 * t2693 - t2587;
t2525 = t2512 * t2405 - t2507 * t2531;
t2305 = t2431 * (qJD(4) + t2451) - t2525;
t2636 = t2264 * t2508 + t2305 * t2513;
t2139 = -t2261 * t2504 + t2502 * t2636;
t2141 = t2261 * t2502 + t2504 * t2636;
t2189 = t2264 * t2513 - t2305 * t2508;
t2660 = t2141 * t2514 + t2189 * t2509;
t2012 = -t2139 * t2503 + t2505 * t2660;
t2062 = t2141 * t2509 - t2189 * t2514;
t2510 = sin(qJ(1));
t2515 = cos(qJ(1));
t2969 = pkin(8) * (t2012 * t2515 - t2510 * t2062);
t2968 = pkin(8) * (t2510 * t2012 + t2062 * t2515);
t2010 = t2139 * t2505 + t2503 * t2660;
t2967 = pkin(9) * (t2010 * t2503 + t2012 * t2505);
t2966 = pkin(1) * t2010;
t2965 = pkin(1) * t2012;
t2428 = t2431 ^ 2;
t2356 = -t2809 - t2428;
t2829 = -t2766 + t2403;
t2875 = t2512 * t2829;
t2255 = t2356 * t2507 + t2875;
t2877 = t2507 * t2829;
t2258 = -t2356 * t2512 + t2877;
t2712 = t2405 * t2507 + t2512 * t2531;
t2596 = qJD(4) * t2433 + t2712;
t2765 = t2451 * t2433;
t2298 = t2765 + t2596;
t2639 = t2258 * t2508 + t2298 * t2513;
t2131 = -t2255 * t2504 + t2502 * t2639;
t2133 = t2255 * t2502 + t2504 * t2639;
t2187 = t2258 * t2513 - t2298 * t2508;
t2663 = t2133 * t2514 + t2187 * t2509;
t2005 = -t2131 * t2503 + t2505 * t2663;
t2058 = t2133 * t2509 - t2187 * t2514;
t2964 = pkin(8) * (t2005 * t2515 - t2510 * t2058);
t2963 = pkin(8) * (t2510 * t2005 + t2058 * t2515);
t2003 = t2131 * t2505 + t2503 * t2663;
t2962 = pkin(9) * (t2003 * t2503 + t2005 * t2505);
t2391 = t2809 - t2428;
t2273 = t2391 * t2507 - t2850;
t2277 = t2391 * t2512 + t2851;
t2830 = -t2765 + t2596;
t2631 = t2277 * t2508 - t2513 * t2830;
t2145 = t2273 * t2504 + t2502 * t2631;
t2149 = -t2273 * t2502 + t2504 * t2631;
t2198 = t2277 * t2513 + t2508 * t2830;
t2657 = t2149 * t2514 + t2198 * t2509;
t2020 = -t2145 * t2503 + t2505 * t2657;
t2072 = t2149 * t2509 - t2198 * t2514;
t2959 = t2510 * t2020 + t2072 * t2515;
t2958 = t2020 * t2515 - t2510 * t2072;
t2956 = pkin(1) * t2003;
t2955 = pkin(1) * t2005;
t2951 = pkin(9) * t2062;
t2016 = t2145 * t2505 + t2503 * t2657;
t2946 = pkin(9) * t2058;
t2945 = pkin(10) * (t2139 * t2502 + t2141 * t2504);
t2942 = pkin(2) * t2139;
t2941 = pkin(2) * t2141;
t2940 = pkin(10) * (t2131 * t2502 + t2133 * t2504);
t2934 = pkin(2) * t2131;
t2933 = pkin(2) * t2133;
t2929 = pkin(10) * t2189;
t2924 = pkin(10) * t2187;
t2921 = pkin(3) * t2261;
t2920 = pkin(11) * t2261;
t2919 = pkin(11) * t2264;
t2494 = t2495 ^ 2;
t2491 = g(1) * t2510 - t2515 * g(2);
t2606 = qJDD(1) * pkin(1) + t2491;
t2588 = t2505 * t2606;
t2796 = pkin(10) * t2502;
t2607 = -pkin(2) * t2514 - t2509 * t2796;
t2589 = t2607 * t2503;
t2492 = g(1) * t2515 + t2510 * g(2);
t2812 = qJD(1) ^ 2;
t2794 = t2812 * pkin(1);
t2592 = t2492 + t2794;
t2692 = t2709 * pkin(2);
t2795 = pkin(10) * t2504;
t2731 = -pkin(9) - t2795;
t2797 = pkin(9) * t2505;
t2914 = t2494 * t2796 + t2509 * t2592 + t2514 * t2588 + t2692 + (-t2514 * g(3) + t2731 * t2735 + ((-qJD(2) + t2495) * pkin(10) * t2747 + qJD(1) * (-t2509 * t2589 + t2514 * t2797)) * qJD(1)) * t2503;
t2763 = t2451 * t2512;
t2536 = t2431 * t2763 + t2507 * t2596;
t2723 = t2508 * t2766;
t2817 = t2513 * t2536 - t2723;
t2764 = t2451 * t2507;
t2703 = t2431 * t2764 - t2512 * t2596;
t2722 = t2513 * t2766;
t2819 = t2508 * t2536 + t2722;
t2844 = -t2502 * t2703 + t2504 * t2819;
t2870 = -t2509 * t2844 + t2514 * t2817;
t2846 = t2502 * t2819 + t2504 * t2703;
t2868 = t2509 * t2817 + t2514 * t2844;
t2892 = -t2503 * t2846 + t2505 * t2868;
t2913 = -t2510 * t2892 + t2515 * t2870;
t2346 = -t2431 * qJD(4) + t2525;
t2702 = t2512 * t2346 - t2433 * t2764;
t2815 = t2513 * t2702 + t2723;
t2704 = t2507 * t2346 + t2433 * t2763;
t2818 = t2508 * t2702 - t2722;
t2845 = -t2502 * t2704 + t2504 * t2818;
t2869 = -t2509 * t2845 + t2514 * t2815;
t2847 = t2502 * t2818 + t2504 * t2704;
t2867 = t2509 * t2815 + t2514 * t2845;
t2893 = -t2503 * t2847 + t2505 * t2867;
t2912 = -t2510 * t2893 + t2515 * t2869;
t2911 = t2510 * t2870 + t2515 * t2892;
t2910 = t2510 * t2869 + t2515 * t2893;
t2909 = pkin(3) * t2255;
t2908 = pkin(11) * t2255;
t2907 = pkin(11) * t2258;
t2827 = -t2810 + t2809;
t2271 = t2512 * t2827 + t2877;
t2904 = t2271 * t2502;
t2903 = t2271 * t2504;
t2276 = t2507 * t2827 - t2875;
t2902 = t2276 * t2508;
t2901 = t2276 * t2513;
t2895 = t2503 * t2867 + t2505 * t2847;
t2894 = t2503 * t2868 + t2505 * t2846;
t2590 = (-t2431 * t2507 - t2433 * t2512) * t2451;
t2591 = (-t2431 * t2512 + t2433 * t2507) * t2451;
t2748 = t2504 * t2513;
t2813 = t2504 * t2508 * t2591 - t2403 * t2748 - t2502 * t2590;
t2816 = t2403 * t2508 + t2513 * t2591;
t2842 = -t2509 * t2813 + t2514 * t2816;
t2814 = -t2403 * t2752 + t2504 * t2590 + t2591 * t2753;
t2843 = t2509 * t2816 + t2514 * t2813;
t2871 = -t2503 * t2814 + t2505 * t2843;
t2891 = -t2510 * t2871 + t2515 * t2842;
t2890 = t2510 * t2842 + t2515 * t2871;
t2347 = -t2810 - t2428;
t2889 = pkin(3) * t2347;
t2888 = t2298 * t2507;
t2782 = t2298 * t2512;
t2883 = t2347 * t2508;
t2882 = t2347 * t2513;
t2500 = t2509 ^ 2;
t2501 = t2514 ^ 2;
t2736 = t2500 + t2501;
t2741 = qJD(2) + t2495;
t2755 = t2495 * t2509;
t2793 = t2505 * g(3);
t2519 = t2493 * pkin(2) - t2793 + ((-pkin(1) + t2607) * qJDD(1) + (pkin(2) * t2755 - pkin(9) * t2790 + (-t2741 * t2514 * t2502 - t2504 * t2736 * t2790) * pkin(10)) * qJD(1) - t2491) * t2503;
t2312 = t2502 * t2914 - t2504 * t2519;
t2872 = t2503 * t2843 + t2505 * t2814;
t2506 = sin(qJ(6));
t2511 = cos(qJ(6));
t2383 = -t2511 * t2431 + t2451 * t2506;
t2385 = t2431 * t2506 + t2451 * t2511;
t2329 = t2385 * t2383;
t2343 = qJDD(6) + t2346;
t2833 = -t2329 + t2343;
t2863 = t2506 * t2833;
t2862 = t2507 * t2830;
t2826 = t2810 - t2428;
t2861 = t2508 * t2826;
t2857 = t2511 * t2833;
t2856 = t2512 * t2830;
t2855 = t2513 * t2826;
t2396 = t2431 * t2451;
t2300 = -t2396 + t2346;
t2849 = t2502 * t2519 + t2504 * t2914;
t2690 = t2701 ^ 2;
t2499 = t2503 ^ 2;
t2841 = t2499 * t2509;
t2762 = t2457 * t2455;
t2527 = -t2531 - t2762;
t2836 = t2508 * t2527;
t2835 = t2513 * t2527;
t2419 = pkin(3) * t2455 - pkin(11) * t2457;
t2496 = g(3) * t2751;
t2798 = pkin(9) * t2503;
t2551 = qJDD(1) * t2798 - t2492;
t2746 = t2505 * t2509;
t2372 = t2514 * t2551 + t2509 * t2588 - t2496 - pkin(2) * t2494 + t2534 * pkin(10) + (-pkin(1) * t2788 + (t2755 * t2795 + (pkin(9) * t2746 + t2514 * t2589) * qJD(1)) * t2503) * qJD(1);
t2742 = t2513 * t2372;
t2225 = -pkin(3) * t2690 - pkin(11) * t2531 - t2455 * t2419 + t2508 * t2849 + t2742;
t2437 = t2701 * t2455;
t2365 = -t2437 + t2405;
t2601 = t2701 * t2457;
t2227 = -t2365 * pkin(11) + (-t2404 + t2601) * pkin(3) - t2312;
t2128 = t2225 * t2507 - t2512 * t2227;
t2373 = pkin(4) * t2431 - qJ(5) * t2433;
t2084 = -t2403 * pkin(4) - t2809 * qJ(5) + t2373 * t2433 + qJDD(5) + t2128;
t2301 = t2396 + t2346;
t2042 = pkin(5) * t2301 - pkin(12) * t2829 + t2084;
t2387 = pkin(5) * t2433 - pkin(12) * t2451;
t2251 = t2508 * t2372 - t2513 * t2849;
t2224 = t2531 * pkin(3) - t2690 * pkin(11) + t2457 * t2419 + t2251;
t2535 = t2596 * pkin(4) - qJ(5) * t2300 + t2224;
t2808 = -2 * qJD(5);
t2718 = pkin(4) * t2451 + t2808;
t2068 = t2712 * pkin(12) - t2428 * pkin(5) + (pkin(12) * qJD(4) - t2387 + t2718) * t2433 + t2535;
t1977 = -t2042 * t2511 + t2506 * t2068;
t1978 = t2042 * t2506 + t2068 * t2511;
t2834 = -t2511 * t1977 + t1978 * t2506;
t2831 = -t2508 * t2437 - t2513 * t2601;
t2129 = t2225 * t2512 + t2227 * t2507;
t2544 = -t2809 * pkin(4) - t2373 * t2431 + t2129;
t2807 = 2 * qJD(5);
t2538 = t2451 * t2807 + t2544;
t2825 = pkin(4) * t2370 + (t2828 + t2403) * qJ(5) + t2538;
t2791 = qJ(5) * t2403;
t2053 = t2791 - t2596 * pkin(5) - t2428 * pkin(12) + (t2807 + t2387) * t2451 + t2544;
t2806 = pkin(4) + pkin(12);
t2823 = qJ(5) * t2053 - t2806 * t2834;
t2714 = t2403 * t2506 - t2511 * t2596;
t2427 = qJD(6) + t2433;
t2739 = qJD(6) - t2427;
t2219 = t2385 * t2739 + t2714;
t2539 = t2511 * t2403 + t2506 * t2596;
t2221 = -t2383 * t2739 + t2539;
t2124 = -t2219 * t2506 - t2221 * t2511;
t2381 = t2383 ^ 2;
t2811 = t2385 ^ 2;
t2283 = -t2381 - t2811;
t2822 = qJ(5) * t2283 - t2124 * t2806 - t2834;
t2425 = t2427 ^ 2;
t2309 = -t2425 - t2381;
t2183 = t2506 * t2309 + t2857;
t2738 = qJD(6) + t2427;
t2218 = t2385 * t2738 + t2714;
t2786 = t2053 * t2506;
t2821 = qJ(5) * t2218 - t2183 * t2806 + t2786;
t2052 = t2511 * t2053;
t2720 = -t2425 - t2811;
t2248 = t2329 + t2343;
t2745 = t2506 * t2248;
t2190 = t2511 * t2720 - t2745;
t2250 = -t2383 * qJD(6) + t2539;
t2770 = t2427 * t2383;
t2222 = t2250 - t2770;
t2820 = qJ(5) * t2222 - t2190 * t2806 + t2052;
t2452 = t2455 ^ 2;
t2453 = t2457 ^ 2;
t2805 = pkin(3) * t2508;
t2804 = pkin(3) * t2513;
t2803 = pkin(4) * t2507;
t2802 = pkin(4) * t2512;
t2801 = pkin(5) * t2834;
t2800 = pkin(5) * t2053;
t2799 = pkin(5) * t2124;
t2785 = t2224 * t2507;
t2784 = t2224 * t2512;
t2783 = t2248 * t2511;
t2781 = t2312 * t2508;
t2780 = t2312 * t2513;
t2388 = t2531 - t2762;
t2773 = t2388 * t2508;
t2772 = t2388 * t2513;
t2769 = t2427 * t2385;
t2768 = t2427 * t2506;
t2767 = t2427 * t2511;
t2543 = t2798 * t2812 + t2606;
t2467 = t2503 * t2543 + t2793;
t2761 = t2467 * t2509;
t2760 = t2467 * t2514;
t2743 = t2509 * t2812;
t2721 = t2514 * t2743;
t2490 = t2499 * t2721;
t2472 = t2490 + t2709;
t2759 = t2472 * t2509;
t2758 = t2472 * t2514;
t2473 = -t2490 + t2709;
t2757 = t2473 * t2509;
t2756 = t2473 * t2514;
t2754 = t2499 * t2812;
t2744 = t2508 * t2405;
t2733 = t2425 - t2811;
t2730 = t2495 * t2790;
t2727 = t2500 * t2754;
t2726 = t2501 * t2754;
t2725 = t2507 * t2329;
t2724 = t2512 * t2329;
t2719 = qJ(5) * t2507 + pkin(3);
t2716 = -t2495 + t2789;
t2028 = t2128 * t2507 + t2512 * t2129;
t2711 = -t2491 * t2510 - t2515 * t2492;
t2489 = qJDD(1) * t2515 - t2510 * t2812;
t2707 = -pkin(8) * t2489 - g(3) * t2510;
t2079 = t2538 + t2791;
t2706 = -pkin(4) * t2084 + qJ(5) * t2079;
t2302 = (-qJD(4) + t2451) * t2431 + t2525;
t2705 = -pkin(4) * t2302 - qJ(5) * t2830;
t2700 = 0.2e1 * qJD(3) + t2710;
t2699 = pkin(5) * t2218 + t2052;
t2698 = pkin(5) * t2222 - t2786;
t2471 = -t2727 - t2494;
t2444 = -t2471 * t2509 - t2756;
t2697 = pkin(9) * t2444 - t2761;
t2477 = -t2494 - t2726;
t2448 = t2477 * t2514 - t2759;
t2696 = pkin(9) * t2448 + t2760;
t2402 = -t2690 - t2452;
t2337 = t2402 * t2513 - t2836;
t2695 = pkin(10) * t2337 + t2780;
t2412 = -t2453 - t2690;
t2350 = -t2412 * t2508 + t2772;
t2694 = pkin(10) * t2350 - t2781;
t1905 = t2053 * t2507 - t2512 * t2834;
t1906 = t2053 * t2512 + t2507 * t2834;
t1924 = t2506 * t1977 + t1978 * t2511;
t2688 = t1906 * t2508 - t1924 * t2513;
t1864 = -t1905 * t2502 + t2504 * t2688;
t1877 = t1906 * t2513 + t1924 * t2508;
t2689 = t1864 * t2514 + t1877 * t2509;
t1996 = t2079 * t2507 - t2084 * t2512;
t1997 = t2079 * t2512 + t2084 * t2507;
t2109 = t2433 * t2718 + t2535;
t2681 = t1997 * t2508 - t2109 * t2513;
t1926 = -t1996 * t2502 + t2504 * t2681;
t1962 = t1997 * t2513 + t2109 * t2508;
t2687 = t1926 * t2514 + t1962 * t2509;
t2027 = -t2128 * t2512 + t2129 * t2507;
t2678 = t2028 * t2508 - t2224 * t2513;
t1949 = -t2027 * t2502 + t2504 * t2678;
t2007 = t2028 * t2513 + t2224 * t2508;
t2686 = t1949 * t2514 + t2007 * t2509;
t2080 = -t2124 * t2512 + t2283 * t2507;
t2081 = t2124 * t2507 + t2283 * t2512;
t2126 = -t2219 * t2511 + t2506 * t2221;
t2675 = t2081 * t2508 - t2126 * t2513;
t1965 = -t2080 * t2502 + t2504 * t2675;
t2013 = t2081 * t2513 + t2126 * t2508;
t2685 = t1965 * t2514 + t2013 * t2509;
t2529 = -t2383 * t2738 + t2539;
t2123 = -t2506 * t2218 + t2511 * t2529;
t2328 = -t2381 + t2811;
t2091 = -t2123 * t2512 + t2328 * t2507;
t2092 = t2123 * t2507 + t2328 * t2512;
t2125 = -t2218 * t2511 - t2506 * t2529;
t2671 = t2092 * t2508 - t2125 * t2513;
t1970 = -t2091 * t2502 + t2504 * t2671;
t2022 = t2092 * t2513 + t2125 * t2508;
t2684 = t1970 * t2514 + t2022 * t2509;
t2101 = -t2183 * t2512 + t2218 * t2507;
t2102 = t2183 * t2507 + t2218 * t2512;
t2184 = t2309 * t2511 - t2863;
t2668 = t2102 * t2508 - t2184 * t2513;
t1990 = -t2101 * t2502 + t2504 * t2668;
t2043 = t2102 * t2513 + t2184 * t2508;
t2683 = t1990 * t2514 + t2043 * t2509;
t2106 = -t2190 * t2512 + t2222 * t2507;
t2107 = t2190 * t2507 + t2222 * t2512;
t2191 = -t2506 * t2720 - t2783;
t2667 = t2107 * t2508 - t2191 * t2513;
t1992 = -t2106 * t2502 + t2504 * t2667;
t2057 = t2107 * t2513 + t2191 * t2508;
t2682 = t1992 * t2514 + t2057 * t2509;
t2352 = t2381 - t2425;
t2209 = t2352 * t2506 + t2783;
t2117 = -t2209 * t2512 - t2219 * t2507;
t2119 = t2209 * t2507 - t2219 * t2512;
t2211 = t2352 * t2511 - t2745;
t2666 = t2119 * t2508 - t2211 * t2513;
t2000 = -t2117 * t2502 + t2504 * t2666;
t2060 = t2119 * t2513 + t2211 * t2508;
t2680 = t2000 * t2514 + t2060 * t2509;
t2208 = t2511 * t2733 + t2863;
t2118 = -t2208 * t2512 + t2221 * t2507;
t2120 = t2208 * t2507 + t2221 * t2512;
t2210 = -t2506 * t2733 + t2857;
t2665 = t2120 * t2508 - t2210 * t2513;
t2001 = -t2118 * t2502 + t2504 * t2665;
t2061 = t2120 * t2513 + t2210 * t2508;
t2679 = t2001 * t2514 + t2061 * t2509;
t2249 = -qJD(6) * t2385 - t2714;
t2212 = -t2249 * t2511 - t2383 * t2768;
t2166 = t2212 * t2512 - t2725;
t2168 = -t2212 * t2507 - t2724;
t2213 = t2249 * t2506 - t2383 * t2767;
t2655 = t2168 * t2508 + t2213 * t2513;
t2036 = -t2166 * t2502 + t2504 * t2655;
t2089 = t2168 * t2513 - t2213 * t2508;
t2677 = t2036 * t2514 + t2089 * t2509;
t2214 = t2250 * t2506 + t2385 * t2767;
t2167 = -t2214 * t2512 + t2725;
t2169 = t2214 * t2507 + t2724;
t2215 = t2250 * t2511 - t2385 * t2768;
t2654 = t2169 * t2508 - t2215 * t2513;
t2037 = -t2167 * t2502 + t2504 * t2654;
t2090 = t2169 * t2513 + t2215 * t2508;
t2676 = t2037 * t2514 + t2090 * t2509;
t2267 = (-t2383 * t2506 - t2385 * t2511) * t2427;
t2228 = -t2267 * t2512 + t2343 * t2507;
t2229 = t2267 * t2507 + t2343 * t2512;
t2268 = (-t2383 * t2511 + t2385 * t2506) * t2427;
t2645 = t2229 * t2508 - t2268 * t2513;
t2083 = -t2228 * t2502 + t2504 * t2645;
t2156 = t2229 * t2513 + t2268 * t2508;
t2674 = t2083 * t2514 + t2156 * t2509;
t2200 = -t2302 * t2512 - t2862;
t2204 = t2302 * t2507 - t2856;
t2649 = t2204 * t2508 - t2882;
t2087 = -t2200 * t2502 + t2504 * t2649;
t2170 = t2204 * t2513 + t2883;
t2673 = t2087 * t2514 + t2170 * t2509;
t2203 = -t2301 * t2512 - t2862;
t2207 = t2301 * t2507 - t2856;
t2646 = t2207 * t2508 - t2882;
t2088 = -t2203 * t2502 + t2504 * t2646;
t2171 = t2207 * t2513 + t2883;
t2672 = t2088 * t2514 + t2171 * t2509;
t2201 = t2300 * t2512 - t2888;
t2205 = -t2300 * t2507 - t2782;
t2648 = t2205 * t2508 - t2855;
t2099 = -t2201 * t2502 + t2504 * t2648;
t2180 = t2205 * t2513 + t2861;
t2670 = t2099 * t2514 + t2180 * t2509;
t2202 = -t2305 * t2512 - t2888;
t2206 = t2305 * t2507 - t2782;
t2647 = t2206 * t2508 - t2855;
t2100 = -t2202 * t2502 + t2504 * t2647;
t2181 = t2206 * t2513 + t2861;
t2669 = t2100 * t2514 + t2181 * t2509;
t2540 = t2505 * t2543;
t2582 = t2495 * t2502 + t2708;
t2545 = t2582 * qJD(1);
t2252 = t2742 + (t2504 * (-g(3) * t2750 + t2514 * t2540 + t2692) + t2502 * (-pkin(2) * t2693 - t2467) + (t2504 * (-qJD(2) * t2708 + t2495 * t2582) + t2502 * (-qJD(2) * t2487 - t2545 * t2750)) * pkin(10) + (t2504 * t2592 + (pkin(2) * t2545 + (-t2502 ^ 2 * pkin(10) + t2504 * t2731) * qJDD(1)) * t2503) * t2509) * t2508;
t2641 = -t2251 * t2513 + t2252 * t2508;
t2137 = t2312 * t2502 + t2504 * t2641;
t2165 = t2251 * t2508 + t2252 * t2513;
t2662 = t2137 * t2514 + t2165 * t2509;
t2633 = -t2301 * t2513 - t2902;
t2147 = t2504 * t2633 - t2904;
t2196 = t2301 * t2508 - t2901;
t2659 = t2147 * t2514 + t2196 * t2509;
t2632 = t2302 * t2513 + t2902;
t2148 = t2504 * t2632 + t2904;
t2197 = -t2302 * t2508 + t2901;
t2658 = t2148 * t2514 + t2197 * t2509;
t2382 = -t2452 - t2453;
t2366 = t2437 + t2405;
t2526 = t2457 * t2710 - t2537;
t2623 = -t2366 * t2513 + t2508 * t2526;
t2244 = -t2382 * t2502 + t2504 * t2623;
t2287 = t2366 * t2508 + t2513 * t2526;
t2642 = t2244 * t2514 + t2287 * t2509;
t2420 = t2453 - t2452;
t2361 = t2457 * t2700 + t2537;
t2624 = -t2361 * t2508 + t2365 * t2513;
t2260 = -t2420 * t2502 + t2504 * t2624;
t2286 = -t2361 * t2513 - t2365 * t2508;
t2638 = t2260 * t2514 + t2286 * t2509;
t2619 = t2402 * t2508 + t2835;
t2266 = -t2361 * t2502 + t2504 * t2619;
t2635 = t2266 * t2514 + t2337 * t2509;
t2364 = -t2455 * t2700 + t2523;
t2622 = t2412 * t2513 + t2773;
t2270 = -t2364 * t2502 + t2504 * t2622;
t2634 = t2270 * t2514 + t2350 * t2509;
t2436 = -t2453 + t2690;
t2620 = t2436 * t2513 + t2836;
t2281 = -t2366 * t2502 + t2504 * t2620;
t2354 = -t2436 * t2508 + t2835;
t2629 = t2281 * t2514 + t2354 * t2509;
t2435 = t2452 - t2690;
t2621 = t2435 * t2508 - t2772;
t2282 = -t2502 * t2526 + t2504 * t2621;
t2355 = t2435 * t2513 + t2773;
t2628 = t2282 * t2514 + t2355 * t2509;
t2603 = t2508 * t2701;
t2317 = t2404 * t2748 + (t2502 * t2457 + t2504 * t2603) * t2455;
t2584 = t2513 * t2437;
t2359 = -t2508 * t2404 + t2584;
t2627 = t2317 * t2514 + t2359 * t2509;
t2602 = t2513 * t2701;
t2319 = t2504 * t2744 + (-t2502 * t2455 + t2504 * t2602) * t2457;
t2585 = t2508 * t2601;
t2360 = t2513 * t2405 - t2585;
t2626 = t2319 * t2514 + t2360 * t2509;
t2358 = t2502 * t2531 + t2504 * t2831;
t2380 = -t2584 + t2585;
t2625 = t2358 * t2514 + t2380 * t2509;
t2541 = t2551 - t2794;
t2442 = t2509 * t2541 + (t2503 * g(3) - t2540) * t2514;
t2443 = t2509 * t2540 + t2514 * t2541 - t2496;
t2618 = -t2442 * t2514 + t2443 * t2509;
t2386 = t2442 * t2509 + t2443 * t2514;
t2481 = t2495 * t2728;
t2462 = t2481 + t2550;
t2480 = t2495 * t2729;
t2465 = -t2480 + t2693;
t2617 = t2462 * t2514 + t2465 * t2509;
t2463 = -t2481 + t2550;
t2464 = t2480 + t2693;
t2616 = -t2463 * t2514 + t2464 * t2509;
t2615 = t2471 * t2514 - t2757;
t2475 = t2494 - t2727;
t2614 = t2475 * t2514 + t2759;
t2613 = t2477 * t2509 + t2758;
t2476 = -t2494 + t2726;
t2612 = t2476 * t2509 + t2756;
t2611 = t2491 * t2515 - t2510 * t2492;
t2608 = t2503 * t2709;
t2605 = -pkin(5) * t2183 + t1977;
t2581 = pkin(5) * t2283 - t1924;
t2580 = -pkin(5) * t2190 + t1978;
t1878 = -t1924 * t2806 + t2800;
t1885 = -qJ(5) * t1924 + t2801;
t1841 = -pkin(3) * t1924 + pkin(11) * t1906 + t1878 * t2512 + t1885 * t2507;
t1863 = t1905 * t2504 + t2502 * t2688;
t1845 = -pkin(11) * t1905 - t1878 * t2507 + t1885 * t2512;
t1865 = -pkin(3) * t1905 - t2823;
t2562 = pkin(10) * t1877 + t1845 * t2508 + t1865 * t2513;
t1822 = -pkin(2) * t1863 - t1841 * t2502 + t2504 * t2562;
t1825 = t1845 * t2513 - t1865 * t2508 + (-t1863 * t2502 - t1864 * t2504) * pkin(10);
t1844 = -t1864 * t2509 + t1877 * t2514;
t2579 = pkin(9) * t1844 + t1822 * t2514 + t1825 * t2509;
t1904 = -t2126 * t2806 + t2581;
t2026 = -qJ(5) * t2126 + t2799;
t1883 = -pkin(3) * t2126 + pkin(11) * t2081 + t1904 * t2512 + t2026 * t2507;
t1964 = t2080 * t2504 + t2502 * t2675;
t1886 = -pkin(11) * t2080 - t1904 * t2507 + t2026 * t2512;
t1891 = -pkin(3) * t2080 - t2822;
t2561 = pkin(10) * t2013 + t1886 * t2508 + t1891 * t2513;
t1843 = -pkin(2) * t1964 - t1883 * t2502 + t2504 * t2561;
t1848 = t1886 * t2513 - t1891 * t2508 + (-t1964 * t2502 - t1965 * t2504) * pkin(10);
t1927 = -t1965 * t2509 + t2013 * t2514;
t2578 = pkin(9) * t1927 + t1843 * t2514 + t1848 * t2509;
t1951 = -qJ(5) * t2184 - t2605;
t1971 = -t2184 * t2806 + t2699;
t1895 = -pkin(3) * t2184 + pkin(11) * t2102 + t1951 * t2507 + t1971 * t2512;
t1989 = t2101 * t2504 + t2502 * t2668;
t1901 = -pkin(11) * t2101 + t1951 * t2512 - t1971 * t2507;
t1947 = -pkin(3) * t2101 - t2821;
t2560 = pkin(10) * t2043 + t1901 * t2508 + t1947 * t2513;
t1850 = -pkin(2) * t1989 - t1895 * t2502 + t2504 * t2560;
t1867 = t1901 * t2513 - t1947 * t2508 + (-t1989 * t2502 - t1990 * t2504) * pkin(10);
t1946 = -t1990 * t2509 + t2043 * t2514;
t2577 = pkin(9) * t1946 + t1850 * t2514 + t1867 * t2509;
t1955 = -qJ(5) * t2191 - t2580;
t1974 = -t2191 * t2806 + t2698;
t1898 = -pkin(3) * t2191 + pkin(11) * t2107 + t1955 * t2507 + t1974 * t2512;
t1991 = t2106 * t2504 + t2502 * t2667;
t1903 = -pkin(11) * t2106 + t1955 * t2512 - t1974 * t2507;
t1952 = -pkin(3) * t2106 - t2820;
t2559 = pkin(10) * t2057 + t1903 * t2508 + t1952 * t2513;
t1852 = -pkin(2) * t1991 - t1898 * t2502 + t2504 * t2559;
t1868 = t1903 * t2513 - t1952 * t2508 + (-t1991 * t2502 - t1992 * t2504) * pkin(10);
t1950 = -t1992 * t2509 + t2057 * t2514;
t2576 = pkin(9) * t1950 + t1852 * t2514 + t1868 * t2509;
t1925 = t1996 * t2504 + t2502 * t2681;
t1929 = pkin(11) * t1997 + (-t2719 - t2802) * t2109;
t1935 = -pkin(3) * t1996 - t2706;
t1943 = -pkin(11) * t1996 + (-qJ(5) * t2512 + t2803) * t2109;
t2558 = pkin(10) * t1962 + t1935 * t2513 + t1943 * t2508;
t1856 = -pkin(2) * t1925 - t1929 * t2502 + t2504 * t2558;
t1862 = -t1935 * t2508 + t1943 * t2513 + (-t1925 * t2502 - t1926 * t2504) * pkin(10);
t1892 = -t1926 * t2509 + t1962 * t2514;
t2575 = pkin(9) * t1892 + t1856 * t2514 + t1862 * t2509;
t1948 = t2027 * t2504 + t2502 * t2678;
t2008 = -pkin(3) * t2224 + pkin(11) * t2028;
t2546 = pkin(10) * t2007 + (-pkin(11) * t2508 - t2804) * t2027;
t1882 = -pkin(2) * t1948 - t2008 * t2502 + t2504 * t2546;
t1884 = (-pkin(11) * t2513 + t2805) * t2027 + (-t1948 * t2502 - t1949 * t2504) * pkin(10);
t1917 = -t1949 * t2509 + t2007 * t2514;
t2574 = pkin(9) * t1917 + t1882 * t2514 + t1884 * t2509;
t2064 = -pkin(4) * t2347 + t2079;
t2066 = -qJ(5) * t2347 + t2084;
t1963 = pkin(11) * t2204 + t2064 * t2512 + t2066 * t2507 - t2889;
t2085 = t2200 * t2504 + t2502 * t2649;
t1968 = -pkin(11) * t2200 - t2064 * t2507 + t2066 * t2512;
t2112 = -pkin(3) * t2200 - t2705;
t2557 = pkin(10) * t2170 + t1968 * t2508 + t2112 * t2513;
t1890 = -pkin(2) * t2085 - t1963 * t2502 + t2504 * t2557;
t1918 = t1968 * t2513 - t2112 * t2508 + (-t2085 * t2502 - t2087 * t2504) * pkin(10);
t2032 = -t2087 * t2509 + t2170 * t2514;
t2573 = pkin(9) * t2032 + t1890 * t2514 + t1918 * t2509;
t2528 = t2433 * t2808 + t2535;
t2077 = (t2298 + t2765) * pkin(4) + t2528;
t2023 = t2077 * t2512 + t2298 * t2719 + t2907;
t2530 = -pkin(4) * t2829 - qJ(5) * t2356 + t2084;
t2029 = -t2530 + t2909;
t2031 = qJ(5) * t2782 - t2077 * t2507 + t2908;
t2556 = t2029 * t2513 + t2031 * t2508 + t2924;
t1908 = -t2023 * t2502 + t2504 * t2556 - t2934;
t1928 = -t2029 * t2508 + t2031 * t2513 - t2940;
t2572 = t1908 * t2514 + t1928 * t2509 - t2946;
t1993 = pkin(11) * t2207 + t2028 - t2889;
t2086 = t2203 * t2504 + t2502 * t2646;
t2006 = -pkin(11) * t2203 - t2027;
t2548 = pkin(10) * t2171 + t2006 * t2508 - t2203 * t2804;
t1910 = -pkin(2) * t2086 - t1993 * t2502 + t2504 * t2548;
t1934 = t2203 * t2805 + t2006 * t2513 + (-t2086 * t2502 - t2088 * t2504) * pkin(10);
t2033 = -t2088 * t2509 + t2171 * t2514;
t2571 = pkin(9) * t2033 + t1910 * t2514 + t1934 * t2509;
t2076 = -pkin(4) * t2765 - qJ(5) * t2305 - t2528;
t2024 = -t2919 + t2076 * t2507 - (pkin(3) + t2802) * t2305;
t2030 = -t2825 - t2921;
t2038 = t2076 * t2512 + t2305 * t2803 - t2920;
t2555 = t2030 * t2513 + t2038 * t2508 - t2929;
t1912 = -t2024 * t2502 + t2504 * t2555 + t2942;
t1932 = -t2030 * t2508 + t2038 * t2513 + t2945;
t2570 = t1912 * t2514 + t1932 * t2509 + t2951;
t2103 = -pkin(3) * t2298 - t2784 - t2907;
t2075 = t2128 - t2909;
t2152 = t2785 - t2908;
t2554 = t2075 * t2513 + t2152 * t2508 - t2924;
t1941 = -t2103 * t2502 + t2504 * t2554 + t2934;
t1960 = -t2075 * t2508 + t2152 * t2513 + t2940;
t2569 = t1941 * t2514 + t1960 * t2509 + t2946;
t2108 = pkin(3) * t2305 + t2785 + t2919;
t2078 = t2129 + t2921;
t2155 = t2784 + t2920;
t2553 = t2078 * t2513 + t2155 * t2508 + t2929;
t1945 = -t2108 * t2502 + t2504 * t2553 - t2942;
t1961 = -t2078 * t2508 + t2155 * t2513 - t2945;
t2568 = t1945 * t2514 + t1961 * t2509 - t2951;
t2136 = -t2312 * t2504 + t2502 * t2641;
t2039 = (-t2136 * t2502 - t2137 * t2504) * pkin(10);
t2054 = -t2137 * t2509 + t2165 * t2514;
t2055 = -pkin(2) * t2136 + t2165 * t2795;
t2567 = pkin(9) * t2054 + t2039 * t2509 + t2055 * t2514;
t2243 = t2382 * t2504 + t2502 * t2623;
t2067 = (-t2243 * t2502 - t2244 * t2504) * pkin(10) - t2641;
t2552 = pkin(10) * t2287 + t2165;
t2074 = -pkin(2) * t2243 + t2504 * t2552;
t2182 = -t2244 * t2509 + t2287 * t2514;
t2566 = pkin(9) * t2182 + t2067 * t2509 + t2074 * t2514;
t2265 = t2361 * t2504 + t2502 * t2619;
t2105 = -pkin(2) * t2265 + t2251 * t2502 + t2504 * t2695;
t2142 = -t2781 + (-t2265 * t2502 - t2266 * t2504) * pkin(10);
t2223 = -t2266 * t2509 + t2337 * t2514;
t2565 = pkin(9) * t2223 + t2105 * t2514 + t2142 * t2509;
t2269 = t2364 * t2504 + t2502 * t2622;
t2111 = -pkin(2) * t2269 + t2252 * t2502 + t2504 * t2694;
t2151 = -t2780 + (-t2269 * t2502 - t2270 * t2504) * pkin(10);
t2230 = -t2270 * t2509 + t2350 * t2514;
t2564 = pkin(9) * t2230 + t2111 * t2514 + t2151 * t2509;
t2421 = t2463 * t2509 + t2464 * t2514;
t2563 = pkin(9) * t2421 + t2386;
t2461 = (t2741 * t2788 + t2735) * t2503;
t2498 = t2503 * t2499;
t2488 = t2510 * qJDD(1) + t2515 * t2812;
t2486 = t2505 * t2709;
t2479 = t2736 * t2754;
t2478 = (t2500 - t2501) * t2754;
t2474 = -pkin(8) * t2488 + g(3) * t2515;
t2466 = t2736 * t2730;
t2459 = (-t2500 * t2495 * qJD(1) + t2514 * t2593) * t2503;
t2458 = -t2501 * t2730 - t2509 * t2693;
t2447 = t2476 * t2514 - t2757;
t2446 = -t2475 * t2509 + t2758;
t2441 = t2461 * t2746 + t2498 * t2721;
t2440 = (t2735 + (qJD(2) - t2716) * t2788) * t2841;
t2439 = (qJD(1) * t2716 * t2841 + t2503 * t2693) * t2514;
t2438 = (-t2498 * t2743 + (-t2493 + (-qJD(1) * t2755 + t2734) * t2503) * t2505) * t2514;
t2422 = -t2462 * t2509 + t2465 * t2514;
t2418 = t2465 * t2503 + t2505 * t2613;
t2417 = -t2464 * t2503 + t2505 * t2612;
t2416 = -t2463 * t2503 + t2505 * t2614;
t2415 = -t2465 * t2505 + t2503 * t2613;
t2414 = t2464 * t2505 + t2503 * t2612;
t2413 = t2463 * t2505 + t2503 * t2614;
t2411 = -t2461 * t2503 + t2505 * t2615;
t2410 = t2461 * t2505 + t2503 * t2615;
t2409 = -t2478 * t2503 + t2505 * t2617;
t2408 = t2479 * t2503 + t2505 * t2616;
t2407 = t2478 * t2505 + t2503 * t2617;
t2406 = -t2479 * t2505 + t2503 * t2616;
t2368 = t2467 * t2503 + t2505 * t2618;
t2367 = -t2467 * t2505 + t2503 * t2618;
t2357 = t2504 * t2587 + (t2831 - t2595) * t2502;
t2349 = -t2761 + (-t2415 * t2503 - t2418 * t2505) * pkin(9);
t2336 = -t2760 + (-t2410 * t2503 - t2411 * t2505) * pkin(9);
t2335 = -pkin(1) * t2415 + t2442 * t2503 + t2505 * t2696;
t2334 = pkin(1) * t2418 - t2442 * t2505 + t2503 * t2696;
t2327 = -pkin(1) * t2410 + t2443 * t2503 + t2505 * t2697;
t2326 = pkin(1) * t2411 - t2443 * t2505 + t2503 * t2697;
t2318 = t2502 * t2744 + (t2504 * t2455 + t2502 * t2602) * t2457;
t2316 = t2404 * t2752 + (-t2504 * t2457 + t2502 * t2603) * t2455;
t2314 = pkin(1) * t2368 + t2386 * t2798;
t2313 = -pkin(1) * t2367 + t2386 * t2797;
t2311 = -pkin(1) * t2406 + t2505 * t2563;
t2310 = pkin(1) * t2408 + t2503 * t2563;
t2308 = -t2358 * t2509 + t2380 * t2514;
t2307 = (-t2367 * t2503 - t2368 * t2505) * pkin(9);
t2306 = (-t2406 * t2503 - t2408 * t2505) * pkin(9) - t2618;
t2280 = t2502 * t2621 + t2504 * t2526;
t2279 = t2366 * t2504 + t2502 * t2620;
t2259 = t2420 * t2504 + t2502 * t2624;
t2254 = -t2319 * t2509 + t2360 * t2514;
t2253 = -t2317 * t2509 + t2359 * t2514;
t2238 = -t2357 * t2503 + t2505 * t2625;
t2237 = t2357 * t2505 + t2503 * t2625;
t2236 = -t2282 * t2509 + t2355 * t2514;
t2235 = -t2281 * t2509 + t2354 * t2514;
t2195 = -t2318 * t2503 + t2505 * t2626;
t2194 = -t2316 * t2503 + t2505 * t2627;
t2193 = t2318 * t2505 + t2503 * t2626;
t2192 = t2316 * t2505 + t2503 * t2627;
t2185 = -t2260 * t2509 + t2286 * t2514;
t2162 = -t2280 * t2503 + t2505 * t2628;
t2161 = -t2279 * t2503 + t2505 * t2629;
t2160 = t2280 * t2505 + t2503 * t2628;
t2159 = t2279 * t2505 + t2503 * t2629;
t2158 = -t2269 * t2503 + t2505 * t2634;
t2157 = t2269 * t2505 + t2503 * t2634;
t2154 = -t2265 * t2503 + t2505 * t2635;
t2153 = t2265 * t2505 + t2503 * t2635;
t2144 = t2502 * t2632 - t2903;
t2143 = t2502 * t2633 + t2903;
t2135 = -t2259 * t2503 + t2505 * t2638;
t2134 = t2259 * t2505 + t2503 * t2638;
t2122 = -t2243 * t2503 + t2505 * t2642;
t2121 = t2243 * t2505 + t2503 * t2642;
t2110 = pkin(2) * t2270 - t2252 * t2504 + t2502 * t2694;
t2104 = pkin(2) * t2266 - t2251 * t2504 + t2502 * t2695;
t2098 = t2202 * t2504 + t2502 * t2647;
t2097 = t2201 * t2504 + t2502 * t2648;
t2082 = t2228 * t2504 + t2502 * t2645;
t2073 = pkin(2) * t2244 + t2502 * t2552;
t2070 = -t2148 * t2509 + t2197 * t2514;
t2069 = -t2147 * t2509 + t2196 * t2514;
t2056 = pkin(2) * t2137 + t2165 * t2796;
t2041 = -t2100 * t2509 + t2181 * t2514;
t2040 = -t2099 * t2509 + t2180 * t2514;
t2035 = t2167 * t2504 + t2502 * t2654;
t2034 = t2166 * t2504 + t2502 * t2655;
t2025 = -t2083 * t2509 + t2156 * t2514;
t2019 = -t2144 * t2503 + t2505 * t2658;
t2018 = -t2143 * t2503 + t2505 * t2659;
t2015 = t2144 * t2505 + t2503 * t2658;
t2014 = t2143 * t2505 + t2503 * t2659;
t1999 = t2118 * t2504 + t2502 * t2665;
t1998 = t2117 * t2504 + t2502 * t2666;
t1995 = -t2136 * t2503 + t2505 * t2662;
t1994 = t2136 * t2505 + t2503 * t2662;
t1988 = -t2098 * t2503 + t2505 * t2669;
t1987 = -t2097 * t2503 + t2505 * t2670;
t1986 = t2098 * t2505 + t2503 * t2669;
t1985 = t2097 * t2505 + t2503 * t2670;
t1984 = -t2037 * t2509 + t2090 * t2514;
t1983 = -t2036 * t2509 + t2089 * t2514;
t1982 = -t2086 * t2503 + t2505 * t2672;
t1981 = -t2085 * t2503 + t2505 * t2673;
t1980 = t2086 * t2505 + t2503 * t2672;
t1979 = t2085 * t2505 + t2503 * t2673;
t1973 = -t2082 * t2503 + t2505 * t2674;
t1972 = t2082 * t2505 + t2503 * t2674;
t1969 = t2091 * t2504 + t2502 * t2671;
t1967 = -t2111 * t2509 + t2151 * t2514 + (-t2157 * t2503 - t2158 * t2505) * pkin(9);
t1966 = -t2105 * t2509 + t2142 * t2514 + (-t2153 * t2503 - t2154 * t2505) * pkin(9);
t1959 = -t2001 * t2509 + t2061 * t2514;
t1958 = -t2000 * t2509 + t2060 * t2514;
t1957 = -pkin(1) * t2157 - t2110 * t2503 + t2505 * t2564;
t1956 = pkin(1) * t2158 + t2110 * t2505 + t2503 * t2564;
t1954 = -pkin(1) * t2153 - t2104 * t2503 + t2505 * t2565;
t1953 = pkin(1) * t2154 + t2104 * t2505 + t2503 * t2565;
t1944 = t2108 * t2504 + t2502 * t2553 + t2941;
t1942 = t2067 * t2514 - t2074 * t2509 + (-t2121 * t2503 - t2122 * t2505) * pkin(9);
t1940 = t2103 * t2504 + t2502 * t2554 - t2933;
t1939 = -t2035 * t2503 + t2505 * t2676;
t1938 = -t2034 * t2503 + t2505 * t2677;
t1937 = t2035 * t2505 + t2503 * t2676;
t1936 = t2034 * t2505 + t2503 * t2677;
t1933 = -t1970 * t2509 + t2022 * t2514;
t1931 = -pkin(1) * t2121 - t2073 * t2503 + t2505 * t2566;
t1930 = pkin(1) * t2122 + t2073 * t2505 + t2503 * t2566;
t1922 = -t1999 * t2503 + t2505 * t2679;
t1921 = -t1998 * t2503 + t2505 * t2680;
t1920 = t1999 * t2505 + t2503 * t2679;
t1919 = t1998 * t2505 + t2503 * t2680;
t1916 = -t1991 * t2503 + t2505 * t2682;
t1915 = t1991 * t2505 + t2503 * t2682;
t1914 = -t1989 * t2503 + t2505 * t2683;
t1913 = t1989 * t2505 + t2503 * t2683;
t1911 = t2024 * t2504 + t2502 * t2555 - t2941;
t1909 = pkin(2) * t2088 + t1993 * t2504 + t2502 * t2548;
t1907 = t2023 * t2504 + t2502 * t2556 + t2933;
t1902 = t2039 * t2514 - t2055 * t2509 + (-t1994 * t2503 - t1995 * t2505) * pkin(9);
t1900 = -t1969 * t2503 + t2505 * t2684;
t1899 = t1969 * t2505 + t2503 * t2684;
t1897 = -pkin(1) * t1994 - t2056 * t2503 + t2505 * t2567;
t1896 = pkin(1) * t1995 + t2056 * t2505 + t2503 * t2567;
t1894 = -t1964 * t2503 + t2505 * t2685;
t1893 = t1964 * t2505 + t2503 * t2685;
t1889 = pkin(2) * t2087 + t1963 * t2504 + t2502 * t2557;
t1888 = -t1948 * t2503 + t2505 * t2686;
t1887 = t1948 * t2505 + t2503 * t2686;
t1881 = pkin(2) * t1949 + t2008 * t2504 + t2502 * t2546;
t1880 = -t1945 * t2509 + t1961 * t2514 - t2967;
t1879 = -t1941 * t2509 + t1960 * t2514 + t2962;
t1876 = -t1925 * t2503 + t2505 * t2687;
t1875 = t1925 * t2505 + t2503 * t2687;
t1874 = -t1944 * t2503 + t2505 * t2568 - t2966;
t1873 = t1944 * t2505 + t2503 * t2568 + t2965;
t1872 = -t1940 * t2503 + t2505 * t2569 + t2956;
t1871 = t1940 * t2505 + t2503 * t2569 - t2955;
t1870 = -t1912 * t2509 + t1932 * t2514 + t2967;
t1869 = -t1908 * t2509 + t1928 * t2514 - t2962;
t1866 = -t1910 * t2509 + t1934 * t2514 + (-t1980 * t2503 - t1982 * t2505) * pkin(9);
t1861 = -t1890 * t2509 + t1918 * t2514 + (-t1979 * t2503 - t1981 * t2505) * pkin(9);
t1860 = -t1911 * t2503 + t2505 * t2570 + t2966;
t1859 = t1911 * t2505 + t2503 * t2570 - t2965;
t1858 = -t1907 * t2503 + t2505 * t2572 - t2956;
t1857 = t1907 * t2505 + t2503 * t2572 + t2955;
t1855 = pkin(2) * t1926 + t1929 * t2504 + t2502 * t2558;
t1854 = -pkin(1) * t1980 - t1909 * t2503 + t2505 * t2571;
t1853 = pkin(1) * t1982 + t1909 * t2505 + t2503 * t2571;
t1851 = pkin(2) * t1992 + t1898 * t2504 + t2502 * t2559;
t1849 = pkin(2) * t1990 + t1895 * t2504 + t2502 * t2560;
t1847 = -pkin(1) * t1979 - t1889 * t2503 + t2505 * t2573;
t1846 = pkin(1) * t1981 + t1889 * t2505 + t2503 * t2573;
t1842 = pkin(2) * t1965 + t1883 * t2504 + t2502 * t2561;
t1840 = -t1882 * t2509 + t1884 * t2514 + (-t1887 * t2503 - t1888 * t2505) * pkin(9);
t1839 = -pkin(1) * t1887 - t1881 * t2503 + t2505 * t2574;
t1838 = pkin(1) * t1888 + t1881 * t2505 + t2503 * t2574;
t1837 = -t1863 * t2503 + t2505 * t2689;
t1836 = t1863 * t2505 + t2503 * t2689;
t1835 = -t1852 * t2509 + t1868 * t2514 + (-t1915 * t2503 - t1916 * t2505) * pkin(9);
t1834 = -t1850 * t2509 + t1867 * t2514 + (-t1913 * t2503 - t1914 * t2505) * pkin(9);
t1833 = -t1856 * t2509 + t1862 * t2514 + (-t1875 * t2503 - t1876 * t2505) * pkin(9);
t1832 = -pkin(1) * t1915 - t1851 * t2503 + t2505 * t2576;
t1831 = pkin(1) * t1916 + t1851 * t2505 + t2503 * t2576;
t1830 = -pkin(1) * t1913 - t1849 * t2503 + t2505 * t2577;
t1829 = pkin(1) * t1914 + t1849 * t2505 + t2503 * t2577;
t1828 = -t1843 * t2509 + t1848 * t2514 + (-t1893 * t2503 - t1894 * t2505) * pkin(9);
t1827 = -pkin(1) * t1875 - t1855 * t2503 + t2505 * t2575;
t1826 = pkin(1) * t1876 + t1855 * t2505 + t2503 * t2575;
t1824 = -pkin(1) * t1893 - t1842 * t2503 + t2505 * t2578;
t1823 = pkin(1) * t1894 + t1842 * t2505 + t2503 * t2578;
t1821 = pkin(2) * t1864 + t1841 * t2504 + t2502 * t2562;
t1820 = -t1822 * t2509 + t1825 * t2514 + (-t1836 * t2503 - t1837 * t2505) * pkin(9);
t1819 = -pkin(1) * t1836 - t1821 * t2503 + t2505 * t2579;
t1818 = pkin(1) * t1837 + t1821 * t2505 + t2503 * t2579;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2489, 0, -t2488, 0, t2707, -t2474, -t2611, -pkin(8) * t2611, -t2510 * t2441 + t2459 * t2515, -t2510 * t2409 + t2422 * t2515, -t2510 * t2416 + t2446 * t2515, -t2510 * t2438 + t2458 * t2515, -t2510 * t2417 + t2447 * t2515, t2515 * t2466 + t2510 * t2608, t2515 * t2349 - t2510 * t2335 - pkin(8) * (t2418 * t2515 + t2510 * t2448), t2515 * t2336 - t2510 * t2327 - pkin(8) * (t2411 * t2515 + t2510 * t2444), t2515 * t2306 - t2510 * t2311 - pkin(8) * (t2408 * t2515 + t2510 * t2421), t2515 * t2307 - t2510 * t2313 - pkin(8) * (t2368 * t2515 + t2510 * t2386), -t2510 * t2195 + t2254 * t2515, -t2510 * t2135 + t2185 * t2515, -t2510 * t2161 + t2235 * t2515, -t2510 * t2194 + t2253 * t2515, -t2510 * t2162 + t2236 * t2515, -t2510 * t2238 + t2308 * t2515, t2515 * t1966 - t2510 * t1954 - pkin(8) * (t2154 * t2515 + t2510 * t2223), t2515 * t1967 - t2510 * t1957 - pkin(8) * (t2158 * t2515 + t2510 * t2230), t2515 * t1942 - t2510 * t1931 - pkin(8) * (t2122 * t2515 + t2510 * t2182), t2515 * t1902 - t2510 * t1897 - pkin(8) * (t1995 * t2515 + t2510 * t2054), t2912, -t2510 * t1987 + t2040 * t2515, -t2510 * t2018 + t2069 * t2515, t2913, t2959, t2891, -t2510 * t1872 + t2515 * t1879 + t2964, -t2510 * t1874 + t2515 * t1880 - t2969, t2515 * t1866 - t2510 * t1854 - pkin(8) * (t1982 * t2515 + t2510 * t2033), t2515 * t1840 - t2510 * t1839 - pkin(8) * (t1888 * t2515 + t2510 * t1917), t2891, -t2510 * t2019 + t2070 * t2515, -t2959, t2912, -t2510 * t1988 + t2041 * t2515, t2913, t2515 * t1861 - t2510 * t1847 - pkin(8) * (t1981 * t2515 + t2510 * t2032), -t2510 * t1858 + t2515 * t1869 - t2964, -t2510 * t1860 + t2515 * t1870 + t2969, t2515 * t1833 - t2510 * t1827 - pkin(8) * (t1876 * t2515 + t2510 * t1892), -t2510 * t1939 + t1984 * t2515, -t2510 * t1900 + t1933 * t2515, -t2510 * t1922 + t1959 * t2515, -t2510 * t1938 + t1983 * t2515, -t2510 * t1921 + t1958 * t2515, -t2510 * t1973 + t2025 * t2515, t2515 * t1834 - t2510 * t1830 - pkin(8) * (t1914 * t2515 + t2510 * t1946), t2515 * t1835 - t2510 * t1832 - pkin(8) * (t1916 * t2515 + t2510 * t1950), t2515 * t1828 - t2510 * t1824 - pkin(8) * (t1894 * t2515 + t2510 * t1927), t2515 * t1820 - t2510 * t1819 - pkin(8) * (t1837 * t2515 + t2510 * t1844); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2488, 0, t2489, 0, t2474, t2707, t2711, pkin(8) * t2711, t2441 * t2515 + t2510 * t2459, t2409 * t2515 + t2510 * t2422, t2416 * t2515 + t2510 * t2446, t2438 * t2515 + t2510 * t2458, t2417 * t2515 + t2510 * t2447, t2510 * t2466 - t2515 * t2608, t2510 * t2349 + t2515 * t2335 + pkin(8) * (-t2510 * t2418 + t2448 * t2515), t2510 * t2336 + t2515 * t2327 + pkin(8) * (-t2510 * t2411 + t2444 * t2515), t2510 * t2306 + t2515 * t2311 + pkin(8) * (-t2510 * t2408 + t2421 * t2515), t2510 * t2307 + t2515 * t2313 + pkin(8) * (-t2510 * t2368 + t2386 * t2515), t2195 * t2515 + t2510 * t2254, t2135 * t2515 + t2510 * t2185, t2161 * t2515 + t2510 * t2235, t2194 * t2515 + t2510 * t2253, t2162 * t2515 + t2510 * t2236, t2238 * t2515 + t2510 * t2308, t2510 * t1966 + t2515 * t1954 + pkin(8) * (-t2510 * t2154 + t2223 * t2515), t2510 * t1967 + t2515 * t1957 + pkin(8) * (-t2510 * t2158 + t2230 * t2515), t2510 * t1942 + t2515 * t1931 + pkin(8) * (-t2510 * t2122 + t2182 * t2515), t2510 * t1902 + t2515 * t1897 + pkin(8) * (-t2510 * t1995 + t2054 * t2515), t2910, t1987 * t2515 + t2510 * t2040, t2018 * t2515 + t2510 * t2069, t2911, -t2958, t2890, t2515 * t1872 + t2510 * t1879 + t2963, t2515 * t1874 + t2510 * t1880 - t2968, t2510 * t1866 + t2515 * t1854 + pkin(8) * (-t2510 * t1982 + t2033 * t2515), t2510 * t1840 + t2515 * t1839 + pkin(8) * (-t2510 * t1888 + t1917 * t2515), t2890, t2019 * t2515 + t2510 * t2070, t2958, t2910, t1988 * t2515 + t2510 * t2041, t2911, t2510 * t1861 + t2515 * t1847 + pkin(8) * (-t2510 * t1981 + t2032 * t2515), t2515 * t1858 + t2510 * t1869 - t2963, t2515 * t1860 + t2510 * t1870 + t2968, t2510 * t1833 + t2515 * t1827 + pkin(8) * (-t2510 * t1876 + t1892 * t2515), t1939 * t2515 + t2510 * t1984, t1900 * t2515 + t2510 * t1933, t1922 * t2515 + t2510 * t1959, t1938 * t2515 + t2510 * t1983, t1921 * t2515 + t2510 * t1958, t1973 * t2515 + t2510 * t2025, t2510 * t1834 + t2515 * t1830 + pkin(8) * (-t2510 * t1914 + t1946 * t2515), t2510 * t1835 + t2515 * t1832 + pkin(8) * (-t2510 * t1916 + t1950 * t2515), t2510 * t1828 + t2515 * t1824 + pkin(8) * (-t2510 * t1894 + t1927 * t2515), t2510 * t1820 + t2515 * t1819 + pkin(8) * (-t2510 * t1837 + t1844 * t2515); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2491, t2492, 0, 0, t2440, t2407, t2413, t2439, t2414, t2486, t2334, t2326, t2310, t2314, t2193, t2134, t2159, t2192, t2160, t2237, t1953, t1956, t1930, t1896, t2895, t1985, t2014, t2894, -t2016, t2872, t1871, t1873, t1853, t1838, t2872, t2015, t2016, t2895, t1986, t2894, t1846, t1857, t1859, t1826, t1937, t1899, t1920, t1936, t1919, t1972, t1829, t1831, t1823, t1818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2812, 0, 0, -g(3), -t2491, 0, t2459, t2422, t2446, t2458, t2447, t2466, t2349, t2336, t2306, t2307, t2254, t2185, t2235, t2253, t2236, t2308, t1966, t1967, t1942, t1902, t2869, t2040, t2069, t2870, t2072, t2842, t1879, t1880, t1866, t1840, t2842, t2070, -t2072, t2869, t2041, t2870, t1861, t1869, t1870, t1833, t1984, t1933, t1959, t1983, t1958, t2025, t1834, t1835, t1828, t1820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2812, 0, qJDD(1), 0, g(3), 0, -t2492, 0, t2441, t2409, t2416, t2438, t2417, -t2608, t2335, t2327, t2311, t2313, t2195, t2135, t2161, t2194, t2162, t2238, t1954, t1957, t1931, t1897, t2893, t1987, t2018, t2892, -t2020, t2871, t1872, t1874, t1854, t1839, t2871, t2019, t2020, t2893, t1988, t2892, t1847, t1858, t1860, t1827, t1939, t1900, t1922, t1938, t1921, t1973, t1830, t1832, t1824, t1819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2491, t2492, 0, 0, t2440, t2407, t2413, t2439, t2414, t2486, t2334, t2326, t2310, t2314, t2193, t2134, t2159, t2192, t2160, t2237, t1953, t1956, t1930, t1896, t2895, t1985, t2014, t2894, -t2016, t2872, t1871, t1873, t1853, t1838, t2872, t2015, t2016, t2895, t1986, t2894, t1846, t1857, t1859, t1826, t1937, t1899, t1920, t1936, t1919, t1972, t1829, t1831, t1823, t1818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2550, t2465, t2472, -t2481, t2476, t2481, 0, -t2467, t2442, 0, t2360, t2286, t2354, t2359, t2355, t2380, t2142, t2151, t2067, t2039, t2815, t2180, t2196, t2817, -t2198, t2816, t1960, t1961, t1934, t1884, t2816, t2197, t2198, t2815, t2181, t2817, t1918, t1928, t1932, t1862, t2090, t2022, t2061, t2089, t2060, t2156, t1867, t1868, t1848, t1825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2480, t2462, t2475, t2693, t2473, -t2480, t2467, 0, t2443, 0, t2319, t2260, t2281, t2317, t2282, t2358, t2105, t2111, t2074, t2055, t2845, t2099, t2147, t2844, -t2149, t2813, t1941, t1945, t1910, t1882, t2813, t2148, t2149, t2845, t2100, t2844, t1890, t1908, t1912, t1856, t2037, t1970, t2001, t2036, t2000, t2083, t1850, t1852, t1843, t1822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2490, t2478, t2463, t2490, t2464, t2709, -t2442, -t2443, 0, 0, t2318, t2259, t2279, t2316, t2280, t2357, t2104, t2110, t2073, t2056, t2847, t2097, t2143, t2846, -t2145, t2814, t1940, t1944, t1909, t1881, t2814, t2144, t2145, t2847, t2098, t2846, t1889, t1907, t1911, t1855, t2035, t1969, t1999, t2034, t1998, t2082, t1849, t1851, t1842, t1821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2405, -t2361, t2527, t2437, t2435, -t2437, 0, -t2312, t2251, 0, t2702, t2205, -t2276, t2536, -t2277, t2591, t2152, t2155, t2006, -pkin(11) * t2027, t2591, t2276, t2277, t2702, t2206, t2536, t1968, t2031, t2038, t1943, t2169, t2092, t2120, t2168, t2119, t2229, t1901, t1903, t1886, t1845; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2601, t2365, t2436, t2404, -t2388, -t2601, t2312, 0, t2252, 0, -t2766, -t2826, -t2301, t2766, t2830, -t2403, t2075, t2078, -pkin(3) * t2203, -pkin(3) * t2027, -t2403, t2302, -t2830, -t2766, -t2826, t2766, t2112, t2029, t2030, t1935, -t2215, -t2125, -t2210, t2213, -t2211, -t2268, t1947, t1952, t1891, t1865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2762, t2420, t2366, -t2762, t2526, -t2531, -t2251, -t2252, 0, 0, t2704, t2201, t2271, t2703, -t2273, t2590, t2103, t2108, t1993, t2008, t2590, -t2271, t2273, t2704, t2202, t2703, t1963, t2023, t2024, t1929, t2167, t2091, t2118, t2166, t2117, t2228, t1895, t1898, t1883, t1841; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2346, -t2298, t2829, t2396, -t2391, -t2396, 0, t2224, t2128, 0, -t2396, -t2829, t2391, t2346, -t2298, t2396, t2066, qJ(5) * t2298, t2076, -qJ(5) * t2109, t2329, t2328, t2221, -t2329, -t2219, t2343, t1951, t1955, t2026, t1885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2765, t2300, t2827, -t2596, t2828, -t2765, -t2224, 0, t2129, 0, -t2765, -t2827, -t2828, t2765, -t2305, -t2596, t2064, t2077, -pkin(4) * t2305, -pkin(4) * t2109, -t2214, -t2123, -t2208, t2212, -t2209, -t2267, t1971, t1974, t1904, t1878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2766, t2826, t2301, -t2766, -t2830, t2403, -t2128, -t2129, 0, 0, t2403, -t2302, t2830, t2766, t2826, -t2766, t2705, t2530, t2825, t2706, t2215, t2125, t2210, -t2213, t2211, t2268, t2821, t2820, t2822, t2823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2403, -t2302, t2830, t2766, t2826, -t2766, 0, t2084, t2079, 0, t2215, t2125, t2210, -t2213, t2211, t2268, -pkin(12) * t2183 + t2786, -pkin(12) * t2190 + t2052, -pkin(12) * t2124 - t2834, -pkin(12) * t2834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2396, t2829, -t2391, -t2346, t2298, -t2396, -t2084, 0, t2109, 0, -t2329, -t2328, -t2221, t2329, t2219, -t2343, t2605, t2580, -t2799, -t2801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2765, t2827, t2828, -t2765, t2305, t2596, -t2079, -t2109, 0, 0, t2214, t2123, t2208, -t2212, t2209, t2267, pkin(12) * t2184 - t2699, pkin(12) * t2191 - t2698, pkin(12) * t2126 - t2581, pkin(12) * t1924 - t2800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2250, -t2218, t2833, t2770, t2352, -t2770, 0, t2053, t1977, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2769, t2529, t2733, t2249, t2248, -t2769, -t2053, 0, t1978, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2329, t2328, t2221, -t2329, -t2219, t2343, -t1977, -t1978, 0, 0;];
m_new_reg  = t1;
