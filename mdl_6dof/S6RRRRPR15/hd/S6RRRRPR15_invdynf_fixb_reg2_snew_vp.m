% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRRPR15
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 03:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRRPR15_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR15_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR15_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR15_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR15_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR15_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 03:48:28
% EndTime: 2019-05-08 03:48:44
% DurationCPUTime: 17.54s
% Computational Cost: add. (160190->414), mult. (397729->613), div. (0->0), fcn. (336441->14), ass. (0->344)
t3247 = cos(pkin(6));
t3239 = qJD(1) * t3247 + qJD(2);
t3251 = sin(qJ(2));
t3255 = cos(qJ(3));
t3256 = cos(qJ(2));
t3246 = cos(pkin(7));
t3250 = sin(qJ(3));
t3340 = t3246 * t3250;
t3244 = sin(pkin(7));
t3343 = t3244 * t3250;
t3245 = sin(pkin(6));
t3354 = qJD(1) * t3245;
t3203 = t3239 * t3343 + (t3251 * t3255 + t3256 * t3340) * t3354;
t3331 = t3256 * t3354;
t3334 = qJDD(1) * t3245;
t3221 = qJD(2) * t3331 + t3251 * t3334;
t3238 = t3247 * qJDD(1) + qJDD(2);
t3342 = t3244 * t3255;
t3341 = t3245 * t3251;
t3332 = qJD(1) * t3341;
t3222 = -qJD(2) * t3332 + t3256 * t3334;
t3346 = t3222 * t3246;
t3319 = t3250 * t3221 - t3238 * t3342 - t3255 * t3346;
t3171 = qJD(3) * t3203 + qJDD(4) + t3319;
t3345 = t3239 * t3246;
t3215 = t3244 * t3331 - qJD(3) - t3345;
t3249 = sin(qJ(4));
t3254 = cos(qJ(4));
t3186 = t3203 * t3249 + t3254 * t3215;
t3188 = t3203 * t3254 - t3215 * t3249;
t3349 = t3188 * t3186;
t3128 = t3171 + t3349;
t3322 = t3246 * t3331;
t3201 = -t3239 * t3342 + t3250 * t3332 - t3255 * t3322;
t3199 = qJD(4) + t3201;
t3198 = t3199 ^ 2;
t3361 = t3188 ^ 2;
t3329 = -t3198 - t3361;
t3109 = t3128 * t3254 + t3249 * t3329;
t3380 = t3109 * t3250;
t3379 = t3109 * t3255;
t3107 = t3128 * t3249 - t3254 * t3329;
t3378 = t3244 * t3107;
t3377 = t3246 * t3107;
t3185 = t3186 ^ 2;
t3140 = -t3198 - t3185;
t3274 = t3171 - t3349;
t3106 = -t3140 * t3254 + t3249 * t3274;
t3376 = t3106 * t3250;
t3375 = t3106 * t3255;
t3172 = -t3201 * qJD(3) + t3255 * t3221 + t3222 * t3340 + t3238 * t3343;
t3281 = -t3222 * t3244 + t3238 * t3246 + qJDD(3);
t3275 = -t3254 * t3172 - t3249 * t3281;
t3339 = qJD(4) - t3199;
t3124 = t3186 * t3339 + t3275;
t3374 = t3124 * t3249;
t3373 = t3124 * t3254;
t3103 = t3140 * t3249 + t3254 * t3274;
t3372 = t3244 * t3103;
t3371 = t3246 * t3103;
t3365 = -t3185 - t3361;
t3370 = t3250 * t3365;
t3369 = t3255 * t3365;
t3252 = sin(qJ(1));
t3257 = cos(qJ(1));
t3233 = t3252 * g(1) - t3257 * g(2);
t3258 = qJD(1) ^ 2;
t3277 = pkin(9) * t3245 * t3258 + qJDD(1) * pkin(1) + t3233;
t3272 = t3247 * t3277;
t3234 = -g(1) * t3257 - g(2) * t3252;
t3276 = -pkin(1) * t3258 + pkin(9) * t3334 + t3234;
t3190 = -t3251 * t3276 + (-t3245 * g(3) + t3272) * t3256;
t3355 = pkin(10) * t3244;
t3279 = (-pkin(2) * t3256 - t3251 * t3355) * t3354;
t3333 = pkin(10) * t3345;
t3357 = t3239 ^ 2;
t3261 = t3238 * pkin(2) + (-t3221 * t3246 + t3244 * t3357) * pkin(10) + (-t3251 * t3279 + t3256 * t3333) * t3354 + t3190;
t3209 = -t3247 * g(3) - t3245 * t3277;
t3264 = -t3221 * t3355 - t3222 * pkin(2) + (-pkin(10) * t3246 * t3332 + pkin(2) * t3239) * t3332 - (t3239 * t3244 + t3322) * pkin(10) * t3331 + t3209;
t3368 = t3244 * t3264 + t3246 * t3261;
t3269 = -t3186 * qJD(4) - t3275;
t3350 = t3186 * t3199;
t3123 = t3269 - t3350;
t3248 = sin(qJ(6));
t3253 = cos(qJ(6));
t3335 = t3251 * t3272 + t3256 * t3276;
t3152 = -t3357 * pkin(2) + (t3238 * t3244 + t3346) * pkin(10) + (-t3251 * g(3) + (t3251 * t3333 + t3256 * t3279) * qJD(1)) * t3245 + t3335;
t3102 = t3255 * t3152 + t3250 * t3368;
t3180 = pkin(3) * t3201 - pkin(11) * t3203;
t3358 = t3215 ^ 2;
t3093 = -pkin(3) * t3358 + pkin(11) * t3281 - t3201 * t3180 + t3102;
t3126 = -t3244 * t3261 + t3246 * t3264;
t3141 = (qJD(3) - t3215) * t3203 + t3319;
t3347 = t3201 * t3215;
t3324 = -t3172 - t3347;
t3095 = pkin(3) * t3141 + pkin(11) * t3324 + t3126;
t3055 = -t3249 * t3093 + t3254 * t3095;
t3280 = -t3171 * pkin(4) - t3198 * qJ(5) + qJDD(5) - t3055;
t3265 = -t3171 * pkin(12) + t3280 + (t3269 + t3350) * pkin(5);
t3325 = t3249 * t3172 - t3254 * t3281;
t3136 = qJD(4) * t3188 + t3325;
t3320 = t3250 * t3152 - t3255 * t3368;
t3092 = -t3281 * pkin(3) - t3358 * pkin(11) + t3203 * t3180 + t3320;
t3271 = t3136 * pkin(4) - qJ(5) * t3123 + t3092;
t3267 = -t3185 * pkin(5) + t3136 * pkin(12) + t3271;
t3163 = pkin(5) * t3188 - pkin(12) * t3199;
t3328 = pkin(4) * t3199 - (2 * qJD(5));
t3321 = -t3163 + t3328;
t3153 = pkin(4) * t3186 - qJ(5) * t3188;
t3327 = pkin(12) * t3186 + t3153;
t3259 = -t3248 * t3267 + t3253 * t3265 + (-t3248 * t3321 + t3253 * t3327) * t3188;
t3159 = -t3253 * t3186 + t3199 * t3248;
t3364 = t3159 ^ 2;
t3161 = t3186 * t3248 + t3199 * t3253;
t3363 = t3161 ^ 2;
t3184 = qJD(6) + t3188;
t3362 = t3184 ^ 2;
t3360 = t3201 ^ 2;
t3359 = t3203 ^ 2;
t3356 = 2 * qJD(5);
t3351 = t3161 * t3159;
t3348 = t3201 * t3203;
t3344 = t3245 ^ 2 * t3258;
t3338 = qJD(4) + t3199;
t3337 = qJD(6) - t3184;
t3336 = qJD(6) + t3184;
t3330 = -t3362 - t3363;
t3326 = t3253 * t3136 - t3248 * t3171;
t3323 = t3239 * t3331;
t3003 = t3253 * t3267 + t3248 * t3265 + (t3248 * t3327 + t3253 * t3321) * t3188;
t2990 = t3248 * t3003 + t3253 * t3259;
t3056 = t3254 * t3093 + t3249 * t3095;
t3273 = -t3198 * pkin(4) + t3171 * qJ(5) - t3186 * t3153 + t3056;
t3031 = -t3136 * pkin(5) - t3185 * pkin(12) + (t3356 + t3163) * t3199 + t3273;
t2983 = -t2990 * t3254 + t3031 * t3249;
t2984 = t2990 * t3249 + t3031 * t3254;
t2991 = t3253 * t3003 - t3248 * t3259;
t3317 = t2984 * t3250 - t2991 * t3255;
t2974 = -t3244 * t2983 + t3246 * t3317;
t2977 = t2984 * t3255 + t2991 * t3250;
t3318 = t2974 * t3256 + t2977 * t3251;
t3038 = t3199 * t3356 + t3273;
t3041 = t3188 * t3153 + t3280;
t3014 = t3038 * t3249 - t3041 * t3254;
t3015 = t3038 * t3254 + t3041 * t3249;
t3050 = t3188 * t3328 + t3271;
t3311 = t3015 * t3250 - t3050 * t3255;
t2993 = -t3244 * t3014 + t3246 * t3311;
t2999 = t3015 * t3255 + t3050 * t3250;
t3316 = t2993 * t3256 + t2999 * t3251;
t3026 = t3055 * t3254 + t3056 * t3249;
t3027 = -t3055 * t3249 + t3056 * t3254;
t3310 = t3027 * t3250 - t3092 * t3255;
t2997 = -t3244 * t3026 + t3246 * t3310;
t3020 = t3027 * t3255 + t3092 * t3250;
t3315 = t2997 * t3256 + t3020 * t3251;
t3089 = -t3161 * t3337 + t3326;
t3289 = -t3248 * t3136 - t3253 * t3171;
t3278 = t3159 * t3337 + t3289;
t3053 = t3248 * t3089 + t3253 * t3278;
t3115 = -t3363 - t3364;
t3039 = -t3053 * t3254 + t3115 * t3249;
t3040 = t3053 * t3249 + t3115 * t3254;
t3054 = t3253 * t3089 - t3248 * t3278;
t3309 = t3040 * t3250 - t3054 * t3255;
t3001 = -t3244 * t3039 + t3246 * t3309;
t3025 = t3040 * t3255 + t3054 * t3250;
t3314 = t3001 * t3256 + t3025 * t3251;
t3125 = -t3362 - t3364;
t3268 = -qJDD(6) - t3269;
t3266 = -t3268 - t3351;
t3075 = t3248 * t3125 + t3253 * t3266;
t3088 = t3161 * t3336 - t3326;
t3046 = -t3075 * t3254 + t3088 * t3249;
t3047 = t3075 * t3249 + t3088 * t3254;
t3076 = t3253 * t3125 - t3248 * t3266;
t3306 = t3047 * t3250 - t3076 * t3255;
t3009 = -t3244 * t3046 + t3246 * t3306;
t3030 = t3047 * t3255 + t3076 * t3250;
t3313 = t3009 * t3256 + t3030 * t3251;
t3100 = t3268 - t3351;
t3081 = t3248 * t3100 + t3253 * t3330;
t3090 = -t3159 * t3336 - t3289;
t3048 = -t3081 * t3254 + t3090 * t3249;
t3049 = t3081 * t3249 + t3090 * t3254;
t3082 = t3253 * t3100 - t3248 * t3330;
t3305 = t3049 * t3250 - t3082 * t3255;
t3011 = -t3244 * t3048 + t3246 * t3305;
t3033 = t3049 * t3255 + t3082 * t3250;
t3312 = t3011 * t3256 + t3033 * t3251;
t3118 = t3188 * t3339 + t3325;
t3083 = -t3118 * t3249 + t3373;
t3085 = -t3118 * t3254 - t3374;
t3299 = t3085 * t3250 - t3369;
t3044 = -t3244 * t3083 + t3246 * t3299;
t3072 = t3085 * t3255 + t3370;
t3308 = t3044 * t3256 + t3072 * t3251;
t3167 = t3199 * t3188;
t3120 = -t3136 + t3167;
t3084 = t3120 * t3249 + t3373;
t3086 = t3120 * t3254 - t3374;
t3298 = t3086 * t3250 - t3369;
t3045 = -t3244 * t3084 + t3246 * t3298;
t3073 = t3086 * t3255 + t3370;
t3307 = t3045 * t3256 + t3073 * t3251;
t3117 = t3188 * t3338 + t3325;
t3295 = -t3117 * t3255 - t3376;
t3059 = t3246 * t3295 - t3372;
t3077 = t3117 * t3250 - t3375;
t3304 = t3059 * t3256 + t3077 * t3251;
t3119 = t3136 + t3167;
t3294 = t3119 * t3255 + t3376;
t3060 = t3246 * t3294 + t3372;
t3078 = -t3119 * t3250 + t3375;
t3303 = t3060 * t3256 + t3078 * t3251;
t3296 = t3102 * t3250 - t3255 * t3320;
t3062 = -t3244 * t3126 + t3246 * t3296;
t3071 = t3102 * t3255 + t3250 * t3320;
t3302 = t3062 * t3256 + t3071 * t3251;
t3122 = -t3186 * t3338 - t3275;
t3293 = t3122 * t3255 + t3380;
t3065 = t3246 * t3293 - t3378;
t3079 = -t3122 * t3250 + t3379;
t3301 = t3065 * t3256 + t3079 * t3251;
t3292 = -t3123 * t3255 - t3380;
t3066 = t3246 * t3292 + t3378;
t3080 = t3123 * t3250 - t3379;
t3300 = t3066 * t3256 + t3080 * t3251;
t3158 = -t3359 - t3360;
t3142 = (-qJD(3) - t3215) * t3203 - t3319;
t3144 = -t3172 + t3347;
t3288 = t3142 * t3250 + t3144 * t3255;
t3098 = -t3244 * t3158 + t3246 * t3288;
t3116 = t3142 * t3255 - t3144 * t3250;
t3297 = t3098 * t3256 + t3116 * t3251;
t3165 = t3281 - t3348;
t3170 = -t3358 - t3360;
t3286 = t3165 * t3255 + t3170 * t3250;
t3112 = -t3244 * t3141 + t3246 * t3286;
t3132 = -t3165 * t3250 + t3170 * t3255;
t3291 = t3112 * t3256 + t3132 * t3251;
t3164 = -t3281 - t3348;
t3177 = -t3358 - t3359;
t3287 = t3164 * t3250 + t3177 * t3255;
t3114 = t3244 * t3324 + t3246 * t3287;
t3139 = t3164 * t3255 - t3177 * t3250;
t3290 = t3114 * t3256 + t3139 * t3251;
t3191 = -g(3) * t3341 + t3335;
t3285 = t3190 * t3256 + t3191 * t3251;
t3206 = t3323 - t3221;
t3225 = t3239 * t3332;
t3207 = t3222 + t3225;
t3284 = t3206 * t3256 + t3207 * t3251;
t3242 = t3251 ^ 2;
t3216 = -t3242 * t3344 - t3357;
t3232 = t3256 * t3251 * t3344;
t3220 = t3232 - t3238;
t3283 = t3216 * t3256 + t3220 * t3251;
t3219 = t3232 + t3238;
t3243 = t3256 ^ 2;
t3223 = -t3243 * t3344 - t3357;
t3282 = t3219 * t3256 + t3223 * t3251;
t3231 = -qJDD(1) * t3252 - t3257 * t3258;
t3230 = qJDD(1) * t3257 - t3252 * t3258;
t3224 = (-t3242 - t3243) * t3344;
t3208 = -t3222 + t3225;
t3205 = t3323 + t3221;
t3194 = -t3219 * t3251 + t3223 * t3256;
t3192 = -t3216 * t3251 + t3220 * t3256;
t3181 = -t3206 * t3251 + t3207 * t3256;
t3179 = -t3245 * t3208 + t3247 * t3282;
t3178 = t3247 * t3208 + t3245 * t3282;
t3176 = -t3245 * t3205 + t3247 * t3283;
t3175 = t3247 * t3205 + t3245 * t3283;
t3174 = -t3245 * t3224 + t3247 * t3284;
t3173 = t3247 * t3224 + t3245 * t3284;
t3162 = -t3190 * t3251 + t3191 * t3256;
t3146 = -t3245 * t3209 + t3247 * t3285;
t3145 = t3247 * t3209 + t3245 * t3285;
t3113 = t3244 * t3287 - t3246 * t3324;
t3111 = t3246 * t3141 + t3244 * t3286;
t3097 = t3246 * t3158 + t3244 * t3288;
t3096 = -t3114 * t3251 + t3139 * t3256;
t3091 = -t3112 * t3251 + t3132 * t3256;
t3074 = -t3098 * t3251 + t3116 * t3256;
t3070 = -t3245 * t3113 + t3247 * t3290;
t3069 = t3247 * t3113 + t3245 * t3290;
t3068 = -t3245 * t3111 + t3247 * t3291;
t3067 = t3247 * t3111 + t3245 * t3291;
t3064 = t3244 * t3292 - t3377;
t3063 = t3244 * t3293 + t3377;
t3061 = t3246 * t3126 + t3244 * t3296;
t3058 = t3244 * t3294 - t3371;
t3057 = t3244 * t3295 + t3371;
t3052 = -t3245 * t3097 + t3247 * t3297;
t3051 = t3247 * t3097 + t3245 * t3297;
t3043 = t3246 * t3084 + t3244 * t3298;
t3042 = t3246 * t3083 + t3244 * t3299;
t3037 = -t3066 * t3251 + t3080 * t3256;
t3036 = -t3065 * t3251 + t3079 * t3256;
t3035 = -t3060 * t3251 + t3078 * t3256;
t3034 = -t3059 * t3251 + t3077 * t3256;
t3032 = -t3062 * t3251 + t3071 * t3256;
t3029 = -t3045 * t3251 + t3073 * t3256;
t3028 = -t3044 * t3251 + t3072 * t3256;
t3024 = -t3245 * t3064 + t3247 * t3300;
t3023 = -t3245 * t3063 + t3247 * t3301;
t3022 = t3247 * t3064 + t3245 * t3300;
t3021 = t3247 * t3063 + t3245 * t3301;
t3019 = -t3245 * t3058 + t3247 * t3303;
t3018 = -t3245 * t3057 + t3247 * t3304;
t3017 = t3247 * t3058 + t3245 * t3303;
t3016 = t3247 * t3057 + t3245 * t3304;
t3013 = -t3245 * t3061 + t3247 * t3302;
t3012 = t3247 * t3061 + t3245 * t3302;
t3010 = t3246 * t3048 + t3244 * t3305;
t3008 = t3246 * t3046 + t3244 * t3306;
t3007 = -t3245 * t3043 + t3247 * t3307;
t3006 = -t3245 * t3042 + t3247 * t3308;
t3005 = t3247 * t3043 + t3245 * t3307;
t3004 = t3247 * t3042 + t3245 * t3308;
t3000 = t3246 * t3039 + t3244 * t3309;
t2998 = -t3011 * t3251 + t3033 * t3256;
t2996 = t3246 * t3026 + t3244 * t3310;
t2995 = -t3009 * t3251 + t3030 * t3256;
t2994 = -t3001 * t3251 + t3025 * t3256;
t2992 = t3246 * t3014 + t3244 * t3311;
t2989 = -t2997 * t3251 + t3020 * t3256;
t2988 = -t3245 * t3010 + t3247 * t3312;
t2987 = t3247 * t3010 + t3245 * t3312;
t2986 = -t3245 * t3008 + t3247 * t3313;
t2985 = t3247 * t3008 + t3245 * t3313;
t2982 = -t3245 * t3000 + t3247 * t3314;
t2981 = t3247 * t3000 + t3245 * t3314;
t2980 = -t2993 * t3251 + t2999 * t3256;
t2979 = -t3245 * t2996 + t3247 * t3315;
t2978 = t3247 * t2996 + t3245 * t3315;
t2976 = -t3245 * t2992 + t3247 * t3316;
t2975 = t3247 * t2992 + t3245 * t3316;
t2973 = t3246 * t2983 + t3244 * t3317;
t2972 = -t2974 * t3251 + t2977 * t3256;
t2971 = -t3245 * t2973 + t3247 * t3318;
t2970 = t3247 * t2973 + t3245 * t3318;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t3231, -t3230, 0, -t3233 * t3252 + t3234 * t3257, 0, 0, 0, 0, 0, 0, -t3179 * t3252 + t3194 * t3257, -t3176 * t3252 + t3192 * t3257, -t3174 * t3252 + t3181 * t3257, -t3146 * t3252 + t3162 * t3257, 0, 0, 0, 0, 0, 0, -t3068 * t3252 + t3091 * t3257, -t3070 * t3252 + t3096 * t3257, -t3052 * t3252 + t3074 * t3257, -t3013 * t3252 + t3032 * t3257, 0, 0, 0, 0, 0, 0, -t3018 * t3252 + t3034 * t3257, -t3024 * t3252 + t3037 * t3257, -t3007 * t3252 + t3029 * t3257, -t2979 * t3252 + t2989 * t3257, 0, 0, 0, 0, 0, 0, -t3006 * t3252 + t3028 * t3257, -t3019 * t3252 + t3035 * t3257, -t3023 * t3252 + t3036 * t3257, -t2976 * t3252 + t2980 * t3257, 0, 0, 0, 0, 0, 0, -t2986 * t3252 + t2995 * t3257, -t2988 * t3252 + t2998 * t3257, -t2982 * t3252 + t2994 * t3257, -t2971 * t3252 + t2972 * t3257; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t3230, t3231, 0, t3233 * t3257 + t3234 * t3252, 0, 0, 0, 0, 0, 0, t3179 * t3257 + t3194 * t3252, t3176 * t3257 + t3192 * t3252, t3174 * t3257 + t3181 * t3252, t3146 * t3257 + t3162 * t3252, 0, 0, 0, 0, 0, 0, t3068 * t3257 + t3091 * t3252, t3070 * t3257 + t3096 * t3252, t3052 * t3257 + t3074 * t3252, t3013 * t3257 + t3032 * t3252, 0, 0, 0, 0, 0, 0, t3018 * t3257 + t3034 * t3252, t3024 * t3257 + t3037 * t3252, t3007 * t3257 + t3029 * t3252, t2979 * t3257 + t2989 * t3252, 0, 0, 0, 0, 0, 0, t3006 * t3257 + t3028 * t3252, t3019 * t3257 + t3035 * t3252, t3023 * t3257 + t3036 * t3252, t2976 * t3257 + t2980 * t3252, 0, 0, 0, 0, 0, 0, t2986 * t3257 + t2995 * t3252, t2988 * t3257 + t2998 * t3252, t2982 * t3257 + t2994 * t3252, t2971 * t3257 + t2972 * t3252; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t3178, t3175, t3173, t3145, 0, 0, 0, 0, 0, 0, t3067, t3069, t3051, t3012, 0, 0, 0, 0, 0, 0, t3016, t3022, t3005, t2978, 0, 0, 0, 0, 0, 0, t3004, t3017, t3021, t2975, 0, 0, 0, 0, 0, 0, t2985, t2987, t2981, t2970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3258, -qJDD(1), 0, t3234, 0, 0, 0, 0, 0, 0, t3194, t3192, t3181, t3162, 0, 0, 0, 0, 0, 0, t3091, t3096, t3074, t3032, 0, 0, 0, 0, 0, 0, t3034, t3037, t3029, t2989, 0, 0, 0, 0, 0, 0, t3028, t3035, t3036, t2980, 0, 0, 0, 0, 0, 0, t2995, t2998, t2994, t2972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t3258, 0, t3233, 0, 0, 0, 0, 0, 0, t3179, t3176, t3174, t3146, 0, 0, 0, 0, 0, 0, t3068, t3070, t3052, t3013, 0, 0, 0, 0, 0, 0, t3018, t3024, t3007, t2979, 0, 0, 0, 0, 0, 0, t3006, t3019, t3023, t2976, 0, 0, 0, 0, 0, 0, t2986, t2988, t2982, t2971; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t3178, t3175, t3173, t3145, 0, 0, 0, 0, 0, 0, t3067, t3069, t3051, t3012, 0, 0, 0, 0, 0, 0, t3016, t3022, t3005, t2978, 0, 0, 0, 0, 0, 0, t3004, t3017, t3021, t2975, 0, 0, 0, 0, 0, 0, t2985, t2987, t2981, t2970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3223, t3220, t3207, t3191, 0, 0, 0, 0, 0, 0, t3132, t3139, t3116, t3071, 0, 0, 0, 0, 0, 0, t3077, t3080, t3073, t3020, 0, 0, 0, 0, 0, 0, t3072, t3078, t3079, t2999, 0, 0, 0, 0, 0, 0, t3030, t3033, t3025, t2977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3219, t3216, t3206, t3190, 0, 0, 0, 0, 0, 0, t3112, t3114, t3098, t3062, 0, 0, 0, 0, 0, 0, t3059, t3066, t3045, t2997, 0, 0, 0, 0, 0, 0, t3044, t3060, t3065, t2993, 0, 0, 0, 0, 0, 0, t3009, t3011, t3001, t2974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3208, t3205, t3224, t3209, 0, 0, 0, 0, 0, 0, t3111, t3113, t3097, t3061, 0, 0, 0, 0, 0, 0, t3057, t3064, t3043, t2996, 0, 0, 0, 0, 0, 0, t3042, t3058, t3063, t2992, 0, 0, 0, 0, 0, 0, t3008, t3010, t3000, t2973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3170, t3164, t3142, t3102, 0, 0, 0, 0, 0, 0, -t3106, -t3109, t3086, t3027, 0, 0, 0, 0, 0, 0, t3085, t3106, t3109, t3015, 0, 0, 0, 0, 0, 0, t3047, t3049, t3040, t2984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3165, t3177, t3144, -t3320, 0, 0, 0, 0, 0, 0, -t3117, -t3123, -t3365, -t3092, 0, 0, 0, 0, 0, 0, -t3365, t3119, t3122, -t3050, 0, 0, 0, 0, 0, 0, -t3076, -t3082, -t3054, -t2991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3141, -t3324, t3158, t3126, 0, 0, 0, 0, 0, 0, t3103, -t3107, t3084, t3026, 0, 0, 0, 0, 0, 0, t3083, -t3103, t3107, t3014, 0, 0, 0, 0, 0, 0, t3046, t3048, t3039, t2983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3140, -t3128, t3120, t3056, 0, 0, 0, 0, 0, 0, -t3118, -t3140, t3128, t3038, 0, 0, 0, 0, 0, 0, t3088, t3090, t3115, t3031; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3274, t3329, t3124, t3055, 0, 0, 0, 0, 0, 0, t3124, -t3274, -t3329, -t3041, 0, 0, 0, 0, 0, 0, -t3075, -t3081, -t3053, -t2990; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3117, t3123, t3365, t3092, 0, 0, 0, 0, 0, 0, t3365, -t3119, -t3122, t3050, 0, 0, 0, 0, 0, 0, t3076, t3082, t3054, t2991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3365, -t3119, -t3122, t3050, 0, 0, 0, 0, 0, 0, t3076, t3082, t3054, t2991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3118, t3140, -t3128, -t3038, 0, 0, 0, 0, 0, 0, -t3088, -t3090, -t3115, -t3031; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3124, t3274, t3329, t3041, 0, 0, 0, 0, 0, 0, t3075, t3081, t3053, t2990; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3125, t3100, t3089, t3003; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3266, t3330, t3278, t3259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3088, t3090, t3115, t3031;];
f_new_reg  = t1;
