% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRRP9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 01:54
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRRP9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP9_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP9_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRP9_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRP9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRRP9_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 01:54:18
% EndTime: 2019-05-06 01:54:22
% DurationCPUTime: 3.68s
% Computational Cost: add. (18644->250), mult. (36844->278), div. (0->0), fcn. (24840->8), ass. (0->163)
t1600 = sin(qJ(3));
t1590 = t1600 * qJD(1);
t1586 = t1590 + qJD(4);
t1583 = qJD(5) + t1586;
t1635 = qJD(5) + t1583;
t1607 = qJD(1) ^ 2;
t1601 = sin(qJ(1));
t1605 = cos(qJ(1));
t1582 = -t1605 * g(1) - t1601 * g(2);
t1608 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1582;
t1629 = pkin(7) + pkin(1);
t1561 = t1629 * t1607 + t1608;
t1599 = sin(qJ(4));
t1603 = cos(qJ(4));
t1604 = cos(qJ(3));
t1628 = qJD(1) * t1604;
t1569 = -t1603 * qJD(3) + t1599 * t1628;
t1571 = qJD(3) * t1599 + t1603 * t1628;
t1598 = sin(qJ(5));
t1602 = cos(qJ(5));
t1550 = t1602 * t1569 + t1571 * t1598;
t1549 = t1550 ^ 2;
t1552 = -t1569 * t1598 + t1571 * t1602;
t1634 = t1552 ^ 2;
t1568 = t1569 ^ 2;
t1633 = t1571 ^ 2;
t1632 = t1583 ^ 2;
t1631 = t1586 ^ 2;
t1630 = -2 * qJD(6);
t1627 = t1550 * t1552;
t1626 = t1569 * t1571;
t1625 = t1586 * t1569;
t1624 = qJD(4) - t1586;
t1623 = qJD(5) - t1583;
t1587 = qJD(3) * t1628;
t1588 = t1600 * qJDD(1);
t1572 = t1588 + 0.2e1 * t1587;
t1620 = qJD(3) * t1590;
t1621 = t1604 * qJDD(1);
t1573 = -t1620 + t1621;
t1531 = (-t1573 + t1620) * pkin(8) + t1572 * pkin(3) - t1561;
t1581 = t1601 * g(1) - t1605 * g(2);
t1609 = -t1607 * qJ(2) + qJDD(2) - t1581;
t1562 = -t1629 * qJDD(1) + t1609;
t1554 = -t1604 * g(3) + t1600 * t1562;
t1606 = qJD(3) ^ 2;
t1610 = t1607 * (pkin(3) * t1600 - pkin(8) * t1604);
t1539 = -t1606 * pkin(3) + qJDD(3) * pkin(8) - t1600 * t1610 + t1554;
t1513 = t1603 * t1531 - t1599 * t1539;
t1618 = t1588 + t1587 + qJDD(4);
t1542 = t1618 - t1626;
t1611 = -t1599 * qJDD(3) - t1603 * t1573;
t1547 = -qJD(4) * t1569 - t1611;
t1495 = (-t1547 - t1625) * pkin(9) + t1542 * pkin(4) + t1513;
t1514 = t1599 * t1531 + t1603 * t1539;
t1616 = -t1603 * qJDD(3) + t1599 * t1573;
t1546 = -qJD(4) * t1571 - t1616;
t1614 = pkin(4) * t1586 - pkin(9) * t1571;
t1497 = -t1568 * pkin(4) + t1546 * pkin(9) - t1586 * t1614 + t1514;
t1481 = t1598 * t1495 + t1602 * t1497;
t1596 = t1600 ^ 2;
t1597 = t1604 ^ 2;
t1622 = t1596 + t1597;
t1619 = t1600 * t1604 * t1607;
t1480 = t1602 * t1495 - t1598 * t1497;
t1617 = -t1602 * t1546 + t1598 * t1547;
t1615 = -qJDD(5) - t1618;
t1613 = pkin(5) * t1583 - qJ(6) * t1552;
t1553 = g(3) * t1600 + t1562 * t1604;
t1612 = -t1598 * t1546 - t1602 * t1547;
t1519 = -t1615 - t1627;
t1505 = t1623 * t1550 + t1612;
t1538 = qJDD(3) * pkin(3) + pkin(8) * t1606 - t1604 * t1610 + t1553;
t1510 = pkin(4) * t1546 + pkin(9) * t1568 - t1571 * t1614 + t1538;
t1585 = -t1597 * t1607 - t1606;
t1584 = -t1596 * t1607 - t1606;
t1580 = -qJDD(3) - t1619;
t1579 = qJDD(3) - t1619;
t1578 = t1622 * t1607;
t1577 = qJDD(1) * t1601 + t1605 * t1607;
t1576 = qJDD(1) * t1605 - t1601 * t1607;
t1575 = t1622 * qJDD(1);
t1574 = -0.2e1 * t1620 + t1621;
t1565 = qJDD(1) * pkin(1) - t1609;
t1564 = t1607 * pkin(1) + t1608;
t1559 = t1580 * t1604 - t1585 * t1600;
t1558 = -t1579 * t1600 + t1584 * t1604;
t1557 = t1580 * t1600 + t1585 * t1604;
t1556 = t1579 * t1604 + t1584 * t1600;
t1555 = -t1631 - t1633;
t1548 = -t1631 - t1568;
t1543 = -t1618 - t1626;
t1541 = -t1568 - t1633;
t1537 = -t1632 - t1634;
t1535 = t1624 * t1569 + t1611;
t1534 = t1547 - t1625;
t1533 = -t1624 * t1571 - t1616;
t1532 = (qJD(4) + t1586) * t1571 + t1616;
t1530 = -t1553 * t1600 + t1554 * t1604;
t1529 = t1553 * t1604 + t1554 * t1600;
t1526 = t1543 * t1603 - t1555 * t1599;
t1525 = t1543 * t1599 + t1555 * t1603;
t1524 = -t1632 - t1549;
t1522 = -t1542 * t1599 + t1548 * t1603;
t1521 = t1542 * t1603 + t1548 * t1599;
t1520 = t1615 - t1627;
t1518 = -t1549 - t1634;
t1517 = -qJD(5) * t1552 - t1617;
t1516 = t1533 * t1603 - t1535 * t1599;
t1515 = t1533 * t1599 + t1535 * t1603;
t1512 = t1526 * t1604 + t1534 * t1600;
t1511 = t1526 * t1600 - t1534 * t1604;
t1509 = t1520 * t1602 - t1537 * t1598;
t1508 = t1520 * t1598 + t1537 * t1602;
t1507 = t1522 * t1604 + t1532 * t1600;
t1506 = t1522 * t1600 - t1532 * t1604;
t1504 = -t1550 * t1635 - t1612;
t1503 = -t1623 * t1552 - t1617;
t1502 = t1552 * t1635 + t1617;
t1501 = -t1519 * t1598 + t1524 * t1602;
t1500 = t1519 * t1602 + t1524 * t1598;
t1499 = t1516 * t1604 + t1541 * t1600;
t1498 = t1516 * t1600 - t1541 * t1604;
t1492 = -t1513 * t1599 + t1514 * t1603;
t1491 = t1513 * t1603 + t1514 * t1599;
t1490 = -t1508 * t1599 + t1509 * t1603;
t1489 = t1508 * t1603 + t1509 * t1599;
t1488 = t1492 * t1604 - t1538 * t1600;
t1487 = t1492 * t1600 + t1538 * t1604;
t1486 = t1503 * t1602 - t1505 * t1598;
t1485 = t1503 * t1598 + t1505 * t1602;
t1484 = -t1500 * t1599 + t1501 * t1603;
t1483 = t1500 * t1603 + t1501 * t1599;
t1482 = pkin(5) * t1517 + qJ(6) * t1549 - t1552 * t1613 - qJDD(6) + t1510;
t1479 = t1490 * t1604 + t1504 * t1600;
t1478 = t1490 * t1600 - t1504 * t1604;
t1477 = t1484 * t1604 + t1502 * t1600;
t1476 = t1484 * t1600 - t1502 * t1604;
t1475 = -t1485 * t1599 + t1486 * t1603;
t1474 = t1485 * t1603 + t1486 * t1599;
t1473 = -t1549 * pkin(5) + t1517 * qJ(6) + t1550 * t1630 - t1583 * t1613 + t1481;
t1472 = t1519 * pkin(5) + t1505 * qJ(6) + t1552 * t1630 + t1480;
t1471 = t1478 * t1601 + t1489 * t1605;
t1470 = -t1478 * t1605 + t1489 * t1601;
t1469 = t1475 * t1604 + t1518 * t1600;
t1468 = t1475 * t1600 - t1518 * t1604;
t1467 = t1476 * t1601 + t1483 * t1605;
t1466 = -t1476 * t1605 + t1483 * t1601;
t1465 = -t1480 * t1598 + t1481 * t1602;
t1464 = t1480 * t1602 + t1481 * t1598;
t1463 = -t1472 * t1598 + t1473 * t1602;
t1462 = t1472 * t1602 + t1473 * t1598;
t1461 = t1468 * t1601 + t1474 * t1605;
t1460 = -t1468 * t1605 + t1474 * t1601;
t1459 = -t1464 * t1599 + t1465 * t1603;
t1458 = t1464 * t1603 + t1465 * t1599;
t1457 = t1459 * t1604 - t1510 * t1600;
t1456 = t1459 * t1600 + t1510 * t1604;
t1455 = -t1462 * t1599 + t1463 * t1603;
t1454 = t1462 * t1603 + t1463 * t1599;
t1453 = t1455 * t1604 - t1482 * t1600;
t1452 = t1455 * t1600 + t1482 * t1604;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1577, -t1576, 0, -t1581 * t1601 + t1582 * t1605, 0, 0, 0, 0, 0, 0, 0, t1577, t1576, -t1564 * t1605 - t1565 * t1601, 0, 0, 0, 0, 0, 0, t1556 * t1601 + t1572 * t1605, t1557 * t1601 + t1574 * t1605, -t1575 * t1601 - t1578 * t1605, t1529 * t1601 - t1561 * t1605, 0, 0, 0, 0, 0, 0, t1506 * t1601 + t1521 * t1605, t1511 * t1601 + t1525 * t1605, t1498 * t1601 + t1515 * t1605, t1487 * t1601 + t1491 * t1605, 0, 0, 0, 0, 0, 0, t1467, t1471, t1461, t1456 * t1601 + t1458 * t1605, 0, 0, 0, 0, 0, 0, t1467, t1471, t1461, t1452 * t1601 + t1454 * t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1576, -t1577, 0, t1581 * t1605 + t1582 * t1601, 0, 0, 0, 0, 0, 0, 0, -t1576, t1577, -t1564 * t1601 + t1565 * t1605, 0, 0, 0, 0, 0, 0, -t1556 * t1605 + t1572 * t1601, -t1557 * t1605 + t1574 * t1601, t1575 * t1605 - t1578 * t1601, -t1529 * t1605 - t1561 * t1601, 0, 0, 0, 0, 0, 0, -t1506 * t1605 + t1521 * t1601, -t1511 * t1605 + t1525 * t1601, -t1498 * t1605 + t1515 * t1601, -t1487 * t1605 + t1491 * t1601, 0, 0, 0, 0, 0, 0, t1466, t1470, t1460, -t1456 * t1605 + t1458 * t1601, 0, 0, 0, 0, 0, 0, t1466, t1470, t1460, -t1452 * t1605 + t1454 * t1601; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1558, t1559, 0, t1530, 0, 0, 0, 0, 0, 0, t1507, t1512, t1499, t1488, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1457, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1607, -qJDD(1), 0, t1582, 0, 0, 0, 0, 0, 0, 0, t1607, qJDD(1), -t1564, 0, 0, 0, 0, 0, 0, t1572, t1574, -t1578, -t1561, 0, 0, 0, 0, 0, 0, t1521, t1525, t1515, t1491, 0, 0, 0, 0, 0, 0, t1483, t1489, t1474, t1458, 0, 0, 0, 0, 0, 0, t1483, t1489, t1474, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1607, 0, t1581, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1607, t1565, 0, 0, 0, 0, 0, 0, -t1556, -t1557, t1575, -t1529, 0, 0, 0, 0, 0, 0, -t1506, -t1511, -t1498, -t1487, 0, 0, 0, 0, 0, 0, -t1476, -t1478, -t1468, -t1456, 0, 0, 0, 0, 0, 0, -t1476, -t1478, -t1468, -t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1558, t1559, 0, t1530, 0, 0, 0, 0, 0, 0, t1507, t1512, t1499, t1488, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1457, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1558, t1559, 0, t1530, 0, 0, 0, 0, 0, 0, t1507, t1512, t1499, t1488, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1457, 0, 0, 0, 0, 0, 0, t1477, t1479, t1469, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1607, -qJDD(1), t1564, 0, 0, 0, 0, 0, 0, -t1572, -t1574, t1578, t1561, 0, 0, 0, 0, 0, 0, -t1521, -t1525, -t1515, -t1491, 0, 0, 0, 0, 0, 0, -t1483, -t1489, -t1474, -t1458, 0, 0, 0, 0, 0, 0, -t1483, -t1489, -t1474, -t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1607, -t1565, 0, 0, 0, 0, 0, 0, t1556, t1557, -t1575, t1529, 0, 0, 0, 0, 0, 0, t1506, t1511, t1498, t1487, 0, 0, 0, 0, 0, 0, t1476, t1478, t1468, t1456, 0, 0, 0, 0, 0, 0, t1476, t1478, t1468, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1584, t1580, -t1588, t1554, 0, 0, 0, 0, 0, 0, t1522, t1526, t1516, t1492, 0, 0, 0, 0, 0, 0, t1484, t1490, t1475, t1459, 0, 0, 0, 0, 0, 0, t1484, t1490, t1475, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1579, t1585, -t1621, t1553, 0, 0, 0, 0, 0, 0, -t1532, -t1534, -t1541, t1538, 0, 0, 0, 0, 0, 0, -t1502, -t1504, -t1518, t1510, 0, 0, 0, 0, 0, 0, -t1502, -t1504, -t1518, t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1572, t1574, -t1578, -t1561, 0, 0, 0, 0, 0, 0, t1521, t1525, t1515, t1491, 0, 0, 0, 0, 0, 0, t1483, t1489, t1474, t1458, 0, 0, 0, 0, 0, 0, t1483, t1489, t1474, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1548, t1543, t1533, t1514, 0, 0, 0, 0, 0, 0, t1501, t1509, t1486, t1465, 0, 0, 0, 0, 0, 0, t1501, t1509, t1486, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1542, t1555, t1535, t1513, 0, 0, 0, 0, 0, 0, t1500, t1508, t1485, t1464, 0, 0, 0, 0, 0, 0, t1500, t1508, t1485, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1532, t1534, t1541, -t1538, 0, 0, 0, 0, 0, 0, t1502, t1504, t1518, -t1510, 0, 0, 0, 0, 0, 0, t1502, t1504, t1518, -t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1520, t1503, t1481, 0, 0, 0, 0, 0, 0, t1524, t1520, t1503, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1519, t1537, t1505, t1480, 0, 0, 0, 0, 0, 0, t1519, t1537, t1505, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1502, t1504, t1518, -t1510, 0, 0, 0, 0, 0, 0, t1502, t1504, t1518, -t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1520, t1503, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1519, t1537, t1505, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1502, t1504, t1518, -t1482;];
f_new_reg  = t1;
