% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPP8_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP8_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP8_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP8_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:38:29
% EndTime: 2019-03-09 21:38:46
% DurationCPUTime: 5.95s
% Computational Cost: add. (5560->455), mult. (14872->756), div. (0->0), fcn. (13617->8), ass. (0->197)
t134 = cos(qJ(4));
t210 = t134 * qJD(5);
t131 = sin(qJ(4));
t230 = qJ(5) * t131;
t248 = pkin(4) + pkin(5);
t257 = t248 * t134 + t230;
t260 = t257 * qJD(4) - t210;
t122 = qJD(4) * t134;
t132 = sin(qJ(3));
t135 = cos(qJ(3));
t218 = qJD(3) * t135;
t259 = t132 * t122 + t131 * t218;
t214 = qJD(4) * t135;
t193 = t134 * t214;
t220 = qJD(3) * t132;
t258 = -t131 * t220 + t193;
t216 = qJD(4) * t131;
t130 = sin(pkin(6));
t136 = cos(qJ(2));
t222 = qJD(2) * t136;
t191 = t130 * t222;
t133 = sin(qJ(2));
t227 = t130 * t133;
t231 = cos(pkin(6));
t88 = t231 * t132 + t135 * t227;
t52 = qJD(3) * t88 + t132 * t191;
t87 = t132 * t227 - t231 * t135;
t159 = -t134 * t52 + t87 * t216;
t256 = pkin(10) * t159;
t223 = qJD(2) * t133;
t192 = t130 * t223;
t226 = t130 * t136;
t53 = -qJD(3) * t87 + t135 * t191;
t254 = -qJD(4) * t226 + t53;
t29 = t88 * t122 + t254 * t131 - t134 * t192;
t54 = t131 * t88 + t134 * t226;
t255 = t29 * qJ(6) + t54 * qJD(6);
t128 = t134 ^ 2;
t225 = t131 ^ 2 - t128;
t186 = t225 * qJD(4);
t212 = qJD(6) * t131;
t253 = t259 * qJ(6) + t132 * t212;
t245 = pkin(10) * t132;
t179 = -pkin(3) * t135 - t245;
t102 = -pkin(2) + t179;
t195 = t131 * t214;
t219 = qJD(3) * t134;
t150 = t132 * t219 + t195;
t244 = pkin(10) * t135;
t178 = pkin(3) * t132 - t244;
t97 = t178 * qJD(3);
t44 = t150 * pkin(9) - t102 * t122 - t131 * t97;
t229 = qJ(5) * t134;
t174 = pkin(4) * t131 - t229;
t167 = pkin(9) + t174;
t77 = t167 * t132;
t213 = qJD(5) * t131;
t85 = t174 * qJD(4) - t213;
t175 = pkin(4) * t134 + t230;
t98 = -pkin(3) - t175;
t251 = qJD(3) * (-t135 * t98 + t245) - qJD(4) * t77 - t132 * t85;
t250 = t175 * qJD(4) - t210;
t249 = 0.2e1 * t130;
t138 = 0.2e1 * qJD(5);
t51 = t52 * pkin(4);
t247 = pkin(9) * t130;
t246 = pkin(9) * t135;
t243 = pkin(5) + t248;
t242 = pkin(10) - qJ(6);
t202 = pkin(1) * t231;
t74 = -t231 * pkin(2) + pkin(8) * t227 - t136 * t202;
t39 = t87 * pkin(3) - t88 * pkin(10) + t74;
t147 = pkin(8) * t226 + t133 * t202;
t75 = t231 * pkin(9) + t147;
t76 = (-pkin(2) * t136 - pkin(9) * t133 - pkin(1)) * t130;
t240 = t132 * t76 + t135 * t75;
t41 = -pkin(10) * t226 + t240;
t15 = t131 * t39 + t134 * t41;
t241 = -t132 * t75 + t135 * t76;
t30 = t131 * t192 + t254 * t134 - t88 * t216;
t238 = t131 * t30;
t157 = -t248 * t131 + t229;
t154 = -pkin(9) + t157;
t31 = -t260 * t132 + t154 * t218;
t237 = t131 * t31;
t236 = t131 * t54;
t235 = t134 * t29;
t234 = t134 * t30;
t233 = t134 * t31;
t55 = -t131 * t226 + t134 * t88;
t232 = t134 * t55;
t117 = t134 * t246;
t72 = t131 * t102 + t117;
t228 = qJ(6) * t132;
t127 = t132 ^ 2;
t224 = -t135 ^ 2 + t127;
t221 = qJD(3) * t131;
t217 = qJD(3) * t136;
t215 = qJD(4) * t132;
t211 = qJD(6) * t134;
t209 = t135 * qJD(5);
t208 = -0.2e1 * pkin(2) * qJD(3);
t207 = -0.2e1 * pkin(3) * qJD(4);
t12 = t87 * qJ(5) + t15;
t116 = t131 * t246;
t40 = pkin(3) * t226 - t241;
t206 = pkin(4) * t220;
t205 = pkin(10) * t216;
t204 = pkin(10) * t122;
t95 = pkin(3) + t257;
t203 = t95 * t122;
t201 = qJ(5) * t218;
t200 = qJ(5) * t215;
t125 = t130 ^ 2;
t199 = t125 * t222;
t190 = t131 * t122;
t189 = t132 * t218;
t188 = t134 * t218;
t104 = t242 * t134;
t14 = -t131 * t41 + t134 * t39;
t80 = (pkin(2) * t133 - pkin(9) * t136) * t130 * qJD(2);
t187 = qJD(2) * t231;
t180 = t136 * t187;
t81 = -pkin(1) * t180 + pkin(8) * t192;
t21 = -t132 * t80 + t135 * t81 - t76 * t218 + t75 * t220;
t19 = pkin(10) * t192 - t21;
t82 = t147 * qJD(2);
t27 = t52 * pkin(3) - t53 * pkin(10) + t82;
t7 = -t41 * t122 - t131 * t19 + t134 * t27 - t39 * t216;
t22 = t132 * t81 + t135 * t80 - t75 * t218 - t76 * t220;
t71 = t102 * t134 - t116;
t185 = t224 * qJD(3);
t184 = 0.2e1 * t189;
t183 = t258 * pkin(9) + t102 * t216 - t134 * t97;
t182 = t132 * t188;
t181 = t133 * t199;
t5 = -t51 - t7;
t57 = -qJ(5) * t135 + t72;
t10 = qJ(6) * t54 + t12;
t9 = -qJ(6) * t55 - t248 * t87 - t14;
t176 = t10 * t131 - t134 * t9;
t13 = -pkin(4) * t87 - t14;
t173 = -t12 * t131 + t13 * t134;
t172 = -t131 * t55 - t134 * t54;
t123 = t135 * pkin(4);
t58 = t123 - t71;
t171 = -t131 * t57 + t134 * t58;
t170 = -qJ(5) * t29 - qJD(5) * t54;
t168 = qJ(5) * t55 - t40;
t11 = -t248 * t54 + t168;
t149 = pkin(3) * t192 + t22;
t140 = qJ(5) * t30 + qJD(5) * t55 + t149;
t3 = -t248 * t29 + t140;
t166 = -t11 * t122 - t131 * t3;
t165 = -t11 * t216 + t134 * t3;
t16 = pkin(4) * t54 - t168;
t8 = pkin(4) * t29 - t140;
t164 = -t16 * t122 - t131 * t8;
t163 = -t134 * t8 + t16 * t216;
t162 = t40 * t122 - t131 * t149;
t161 = t134 * t149 + t40 * t216;
t160 = t87 * t122 + t131 * t52;
t66 = t157 * qJD(4) + t213;
t158 = t134 * t66 - t95 * t216;
t56 = t154 * t132;
t156 = qJD(4) * t56 + t95 * t218;
t6 = -t39 * t122 - t131 * t27 - t134 * t19 + t41 * t216;
t155 = -qJ(6) * t216 + t211;
t153 = t160 * pkin(10);
t152 = t132 * t217 + t135 * t223;
t151 = t132 * t223 - t135 * t217;
t49 = t52 * qJ(5);
t79 = t87 * qJD(5);
t148 = 0.2e1 * t49 - t6 + 0.2e1 * t79;
t4 = t49 - t6 + t79;
t146 = -qJ(6) * t188 + t183;
t145 = qJ(6) * t30 + qJD(6) * t55 - t5;
t142 = t173 * qJD(4) + t131 * t5 + t134 * t4;
t120 = qJ(5) * t220;
t36 = t120 - t44 - t209;
t42 = t183 - t206;
t141 = t171 * qJD(4) + t131 * t42 + t134 * t36;
t139 = 0.2e1 * t120 - 0.2e1 * t209 - t44;
t124 = qJ(5) * t138;
t111 = pkin(10) * t193;
t103 = t242 * t131;
t89 = t131 * t215 - t188;
t86 = qJD(4) * t104 - t212;
t84 = -t242 * t216 - t211;
t47 = t131 * t228 + t57;
t46 = pkin(5) * t135 + t116 + t123 + (-t102 - t228) * t134;
t43 = t250 * t132 + t167 * t218;
t26 = t36 + t253;
t23 = (-t248 * qJD(3) - t155) * t132 + t146;
t2 = t4 + t255;
t1 = -pkin(5) * t52 - t145;
t17 = [0, 0, 0, 0.2e1 * t181, 0.2e1 * (-t133 ^ 2 + t136 ^ 2) * t125 * qJD(2), t180 * t249, -0.2e1 * t187 * t227, 0, -0.2e1 * t125 * pkin(1) * t223 - 0.2e1 * t82 * t231, -0.2e1 * pkin(1) * t199 + 0.2e1 * t81 * t231, 0.2e1 * t88 * t53, -0.2e1 * t52 * t88 - 0.2e1 * t53 * t87 (-t136 * t53 + t88 * t223) * t249 (t136 * t52 - t87 * t223) * t249, -0.2e1 * t181, 0.2e1 * t74 * t52 + 0.2e1 * t82 * t87 + 0.2e1 * (-t22 * t136 + t241 * t223) * t130, 0.2e1 * t74 * t53 + 0.2e1 * t82 * t88 + 0.2e1 * (-t21 * t136 - t240 * t223) * t130, 0.2e1 * t55 * t30, -0.2e1 * t29 * t55 - 0.2e1 * t30 * t54, 0.2e1 * t30 * t87 + 0.2e1 * t52 * t55, -0.2e1 * t29 * t87 - 0.2e1 * t52 * t54, 0.2e1 * t87 * t52, 0.2e1 * t14 * t52 - 0.2e1 * t149 * t54 + 0.2e1 * t29 * t40 + 0.2e1 * t7 * t87, -0.2e1 * t149 * t55 - 0.2e1 * t15 * t52 + 0.2e1 * t30 * t40 + 0.2e1 * t6 * t87, -0.2e1 * t13 * t52 + 0.2e1 * t16 * t29 - 0.2e1 * t5 * t87 + 0.2e1 * t54 * t8, -0.2e1 * t12 * t29 + 0.2e1 * t13 * t30 - 0.2e1 * t4 * t54 + 0.2e1 * t5 * t55, 0.2e1 * t12 * t52 - 0.2e1 * t16 * t30 + 0.2e1 * t4 * t87 - 0.2e1 * t55 * t8, 0.2e1 * t12 * t4 + 0.2e1 * t13 * t5 + 0.2e1 * t16 * t8, -0.2e1 * t1 * t87 - 0.2e1 * t11 * t29 - 0.2e1 * t3 * t54 - 0.2e1 * t52 * t9, 0.2e1 * t10 * t52 + 0.2e1 * t11 * t30 + 0.2e1 * t2 * t87 + 0.2e1 * t3 * t55, -0.2e1 * t1 * t55 + 0.2e1 * t10 * t29 + 0.2e1 * t2 * t54 - 0.2e1 * t30 * t9, 0.2e1 * t1 * t9 + 0.2e1 * t10 * t2 + 0.2e1 * t11 * t3; 0, 0, 0, 0, 0, t191, -t192, 0, -t82, t81, t132 * t53 + t88 * t218, -t132 * t52 + t135 * t53 + (-t132 * t88 - t135 * t87) * qJD(3), t151 * t130, t152 * t130, 0, -pkin(2) * t52 - t135 * t82 - t151 * t247 + t74 * t220, -pkin(2) * t53 + t132 * t82 - t152 * t247 + t74 * t218, t55 * t188 + (-t55 * t216 + t234) * t132, t172 * t218 + (-t238 - t235 + (-t232 + t236) * qJD(4)) * t132 (t87 * t219 - t30) * t135 + (qJD(3) * t55 - t159) * t132 (-t87 * t221 + t29) * t135 + (-qJD(3) * t54 - t160) * t132, -t135 * t52 + t87 * t220, -t183 * t87 + t52 * t71 + (-t7 + (pkin(9) * t54 + t131 * t40) * qJD(3)) * t135 + (pkin(9) * t29 + qJD(3) * t14 + t162) * t132, t44 * t87 - t52 * t72 + (-t6 + (pkin(9) * t55 + t134 * t40) * qJD(3)) * t135 + (pkin(9) * t30 - qJD(3) * t15 - t161) * t132, t29 * t77 - t42 * t87 + t43 * t54 - t52 * t58 + (t16 * t221 + t5) * t135 + (-qJD(3) * t13 - t164) * t132, -t29 * t57 + t30 * t58 - t36 * t54 + t42 * t55 + t173 * t218 + (-t131 * t4 + t134 * t5 + (-t12 * t134 - t13 * t131) * qJD(4)) * t132, -t30 * t77 + t36 * t87 - t43 * t55 + t52 * t57 + (-t16 * t219 - t4) * t135 + (qJD(3) * t12 + t163) * t132, t12 * t36 + t13 * t42 + t16 * t43 + t4 * t57 + t5 * t58 + t77 * t8, -t23 * t87 - t29 * t56 - t31 * t54 - t46 * t52 + (-t11 * t221 + t1) * t135 + (-qJD(3) * t9 + t166) * t132, t26 * t87 + t30 * t56 + t31 * t55 + t47 * t52 + (t11 * t219 - t2) * t135 + (qJD(3) * t10 + t165) * t132, -t23 * t55 + t26 * t54 + t29 * t47 - t30 * t46 + t176 * t218 + (-t1 * t134 + t131 * t2 + (t10 * t134 + t131 * t9) * qJD(4)) * t132, t1 * t46 + t10 * t26 + t11 * t31 + t2 * t47 + t23 * t9 + t3 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, -0.2e1 * t185, 0, 0, 0, t132 * t208, t135 * t208, -0.2e1 * t127 * t190 + 0.2e1 * t128 * t189, 0.2e1 * t127 * t186 - 0.4e1 * t131 * t182, 0.2e1 * t132 * t195 + 0.2e1 * t224 * t219, -0.2e1 * t131 * t185 + 0.2e1 * t132 * t193, -0.2e1 * t189, 0.2e1 * t71 * t220 + 0.2e1 * t135 * t183 + 0.2e1 * (t122 * t127 + t131 * t184) * pkin(9), -0.2e1 * t72 * t220 - 0.2e1 * t135 * t44 + 0.2e1 * (-t127 * t216 + 0.2e1 * t182) * pkin(9), 0.2e1 * (t221 * t77 + t42) * t135 + 0.2e1 * (-qJD(3) * t58 + t122 * t77 + t131 * t43) * t132, 0.2e1 * t171 * t218 + 0.2e1 * (-t131 * t36 + t134 * t42 + (-t131 * t58 - t134 * t57) * qJD(4)) * t132, 0.2e1 * (-t219 * t77 - t36) * t135 + 0.2e1 * (qJD(3) * t57 - t134 * t43 + t216 * t77) * t132, 0.2e1 * t36 * t57 + 0.2e1 * t42 * t58 + 0.2e1 * t43 * t77, 0.2e1 * (-t221 * t56 + t23) * t135 + 0.2e1 * (-qJD(3) * t46 - t122 * t56 - t237) * t132, 0.2e1 * (t219 * t56 - t26) * t135 + 0.2e1 * (qJD(3) * t47 - t216 * t56 + t233) * t132, 0.2e1 * (t131 * t47 - t134 * t46) * t218 + 0.2e1 * (t131 * t26 - t134 * t23 + (t131 * t46 + t134 * t47) * qJD(4)) * t132, 0.2e1 * t23 * t46 + 0.2e1 * t26 * t47 + 0.2e1 * t31 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t52, t192, t22, t21, t55 * t122 + t238, qJD(4) * t172 - t131 * t29 + t234, t160, -t159, 0, -pkin(3) * t29 - t153 + t161, -pkin(3) * t30 + t162 + t256, t29 * t98 + t54 * t85 - t153 + t163 (t238 - t235 + (t232 + t236) * qJD(4)) * pkin(10) + t142, -t30 * t98 - t55 * t85 + t164 - t256, pkin(10) * t142 + t16 * t85 + t8 * t98, -t103 * t52 - t29 * t95 - t54 * t66 - t86 * t87 + t165, t104 * t52 + t30 * t95 + t55 * t66 + t84 * t87 - t166, qJD(4) * t176 - t1 * t131 - t103 * t30 + t104 * t29 - t134 * t2 + t54 * t84 - t55 * t86, t1 * t103 + t10 * t84 + t104 * t2 + t11 * t66 + t3 * t95 + t86 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t220, 0, -pkin(9) * t218, pkin(9) * t220, t131 * t188 - t132 * t186, -0.4e1 * t132 * t190 - t225 * t218, -t258, t150, 0, t111 + (-pkin(3) * t134 + pkin(9) * t131) * t215 + (t131 * t179 - t117) * qJD(3) (pkin(9) * t132 * t134 + t131 * t178) * qJD(4) + (t134 * t179 + t116) * qJD(3), t111 + (t215 * t98 - t43) * t134 - t251 * t131, t141 (-t43 + (t132 * t98 + t244) * qJD(4)) * t131 + t251 * t134, pkin(10) * t141 + t43 * t98 + t77 * t85, t233 + t135 * t86 + (-qJD(3) * t103 - t203) * t132 + (-t132 * t66 - t156) * t131, t237 - t135 * t84 + t156 * t134 + (qJD(3) * t104 + t158) * t132 (-t103 * t218 - t132 * t86 - t26 + (t104 * t132 - t46) * qJD(4)) * t134 + (t104 * t218 + t132 * t84 - t23 + (t103 * t132 + t47) * qJD(4)) * t131, t103 * t23 + t104 * t26 + t31 * t95 + t46 * t86 + t47 * t84 + t56 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t190, -0.2e1 * t186, 0, 0, 0, t131 * t207, t134 * t207, -0.2e1 * t134 * t85 + 0.2e1 * t216 * t98, 0, -0.2e1 * t122 * t98 - 0.2e1 * t131 * t85, 0.2e1 * t98 * t85, 0.2e1 * t158, 0.2e1 * t131 * t66 + 0.2e1 * t203, -0.2e1 * t131 * t86 - 0.2e1 * t134 * t84 + 0.2e1 * (-t103 * t134 + t104 * t131) * qJD(4), 0.2e1 * t103 * t86 + 0.2e1 * t104 * t84 + 0.2e1 * t66 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t29, t52, t7, t6, -t5 + t51, -pkin(4) * t30 + t170, t148, -pkin(4) * t5 + qJ(5) * t4 + qJD(5) * t12, t243 * t52 + t145, t148 + t255, t248 * t30 - t170, qJ(5) * t2 + qJD(5) * t10 - t1 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, -t259, t220, -t183, t44, -t183 + 0.2e1 * t206 (-pkin(4) * t218 - t200) * t134 + (-t201 + (pkin(4) * qJD(4) - qJD(5)) * t132) * t131, t139, -pkin(4) * t42 + qJ(5) * t36 + qJD(5) * t57 ((pkin(4) + t243) * qJD(3) + t155) * t132 - t146, t139 + t253 (t218 * t248 + t200) * t134 + (t201 + (-qJD(4) * t248 + qJD(5)) * t132) * t131, qJ(5) * t26 + qJD(5) * t47 - t23 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, -t216, 0, -t204, t205, -t204, -t250, -t205, -t250 * pkin(10), -t86, t84, t260, qJ(5) * t84 + qJD(5) * t104 - t248 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t124, 0, t138, 0, t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t30, 0, t5, -t52, 0, -t30, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220, -t89, 0, t42, -t220, 0, t89, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, t204, 0, 0, -t122, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, t30, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t89, 0, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t122, 0, t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t17;
