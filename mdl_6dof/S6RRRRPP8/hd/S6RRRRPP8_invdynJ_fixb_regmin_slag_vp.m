% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRPP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPP8_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP8_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP8_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP8_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP8_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP8_invdynJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:38:33
% EndTime: 2019-03-09 21:39:00
% DurationCPUTime: 12.32s
% Computational Cost: add. (13849->796), mult. (33751->995), div. (0->0), fcn. (26704->10), ass. (0->340)
t312 = cos(qJ(2));
t306 = sin(pkin(6));
t451 = qJD(1) * t306;
t288 = t312 * t451;
t309 = sin(qJ(2));
t487 = cos(pkin(6));
t406 = t487 * qJD(1);
t388 = pkin(1) * t406;
t229 = pkin(8) * t288 + t309 * t388;
t308 = sin(qJ(3));
t311 = cos(qJ(3));
t380 = pkin(3) * t308 - pkin(10) * t311;
t133 = t288 * t380 + t229;
t254 = t380 * qJD(3);
t544 = t133 - t254;
t368 = t406 + qJD(2);
t420 = t309 * t451;
t193 = t308 * t420 - t311 * t368;
t184 = qJD(4) + t193;
t347 = qJD(3) * t368;
t396 = t487 * qJDD(1);
t364 = t396 + qJDD(2);
t449 = qJD(2) * t312;
t418 = t308 * t449;
t437 = qJDD(1) * t309;
t445 = qJD(3) * t311;
t93 = t306 * (qJD(1) * (t309 * t445 + t418) + t308 * t437) + t308 * t347 - t311 * t364;
t87 = qJDD(4) + t93;
t195 = t308 * t368 + t311 * t420;
t307 = sin(qJ(4));
t310 = cos(qJ(4));
t372 = t288 - qJD(3);
t137 = t310 * t195 - t307 * t372;
t479 = t137 * t184;
t346 = t308 * t364;
t417 = t311 * t449;
t436 = qJDD(1) * t311;
t447 = qJD(3) * t308;
t317 = t311 * t347 + (t309 * t436 + (-t309 * t447 + t417) * qJD(1)) * t306 + t346;
t438 = qJD(1) * qJD(2);
t413 = t309 * t438;
t387 = t306 * t413;
t435 = qJDD(1) * t312;
t287 = t306 * t435;
t433 = qJDD(3) - t287;
t345 = t387 + t433;
t444 = qJD(4) * t137;
t50 = t307 * t317 - t310 * t345 + t444;
t543 = -t50 - t479;
t390 = t308 * t288;
t542 = t390 - t447;
t541 = -pkin(3) * t311 - pkin(2);
t485 = qJ(5) * t307;
t540 = pkin(3) + t485;
t539 = t87 * qJ(5) + t184 * qJD(5);
t226 = -pkin(8) * t420 + t312 * t388;
t381 = pkin(2) * t309 - pkin(9) * t312;
t227 = t381 * t451;
t458 = t311 * t226 + t308 * t227;
t107 = pkin(10) * t420 + t458;
t263 = -pkin(10) * t308 + t541;
t466 = t310 * t311;
t298 = pkin(9) * t466;
t443 = qJD(4) * t307;
t538 = -qJD(4) * t298 + t307 * t107 - t263 * t443;
t442 = qJD(4) * t310;
t537 = t310 * t107 - t263 * t442 + t544 * t307;
t514 = cos(qJ(1));
t384 = t487 * t514;
t513 = sin(qJ(1));
t244 = t309 * t384 + t312 * t513;
t422 = t306 * t514;
t159 = t244 * t311 - t308 * t422;
t243 = t309 * t513 - t312 * t384;
t108 = t159 * t307 - t243 * t310;
t109 = t159 * t310 + t243 * t307;
t303 = t306 ^ 2;
t536 = 0.2e1 * t303;
t399 = t310 * t372;
t135 = t195 * t307 + t399;
t535 = t50 * qJ(6) + t135 * qJD(6);
t534 = 0.2e1 * t539;
t533 = -qJ(5) * t542 - qJD(5) * t311 - t537;
t169 = pkin(9) * t368 + t229;
t366 = -pkin(2) * t312 - pkin(9) * t309 - pkin(1);
t181 = t366 * t451;
t92 = t311 * t169 + t308 * t181;
t532 = qJD(5) * t307 + t92;
t481 = t135 * t184;
t49 = qJD(4) * t399 + t195 * t443 - t307 * t345 - t310 * t317;
t531 = -t49 - t481;
t530 = t372 * t195;
t168 = -pkin(2) * t368 - t226;
t73 = t193 * pkin(3) - t195 * pkin(10) + t168;
t77 = -pkin(10) * t372 + t92;
t35 = -t307 * t77 + t310 * t73;
t463 = qJD(5) - t35;
t470 = t306 * t309;
t241 = t308 * t470 - t311 * t487;
t155 = -qJD(3) * t241 + t306 * t417;
t469 = t306 * t312;
t529 = -qJD(4) * t469 + t155;
t134 = t137 ^ 2;
t528 = -t184 ^ 2 - t134;
t423 = pkin(1) * t487;
t362 = -pkin(8) * t470 + t312 * t423;
t527 = (qJDD(2) + 0.2e1 * t396) * t306;
t389 = t311 * t288;
t526 = t389 - t445;
t525 = t133 * t310 - t538;
t84 = t87 * pkin(4);
t524 = t84 - qJDD(5);
t91 = -t308 * t169 + t311 * t181;
t76 = pkin(3) * t372 - t91;
t339 = -t137 * qJ(5) + t76;
t34 = t135 * pkin(4) + t339;
t515 = pkin(10) * t87;
t523 = t184 * t34 - t515;
t517 = pkin(4) + pkin(5);
t17 = -t135 * t517 + qJD(6) - t339;
t383 = t487 * t513;
t246 = -t309 * t383 + t312 * t514;
t421 = t306 * t513;
t163 = t246 * t311 + t308 * t421;
t245 = t309 * t514 + t312 * t383;
t112 = t163 * t307 - t245 * t310;
t242 = t308 * t487 + t311 * t470;
t465 = t310 * t312;
t156 = t242 * t307 + t306 * t465;
t365 = qJD(2) * t388;
t385 = pkin(1) * t396;
t426 = pkin(8) * t287 + t309 * t385 + t312 * t365;
t338 = -pkin(8) * t387 + t426;
t120 = pkin(9) * t364 + t338;
t359 = qJD(2) * t381;
t123 = (qJD(1) * t359 + qJDD(1) * t366) * t306;
t354 = -t311 * t120 - t308 * t123 + t169 * t447 - t181 * t445;
t25 = pkin(10) * t345 - t354;
t412 = t312 * t438;
t386 = t306 * t412;
t411 = t306 * t437;
t392 = t309 * t365 - t312 * t385 + (t386 + t411) * pkin(8);
t121 = -pkin(2) * t364 + t392;
t31 = t93 * pkin(3) - pkin(10) * t317 + t121;
t408 = t307 * t25 - t310 * t31 + t77 * t442 + t73 * t443;
t330 = g(1) * t112 + g(2) * t108 + g(3) * t156 - t408;
t327 = t330 + t524;
t502 = qJ(6) * t49;
t522 = (qJD(6) + t17) * t137 + t327 - t502;
t484 = qJ(5) * t310;
t521 = t307 * t517 - t484;
t520 = -t310 * t517 - t485;
t518 = t135 ^ 2;
t314 = qJD(1) ^ 2;
t516 = pkin(5) * t87;
t511 = pkin(5) * t156;
t510 = pkin(10) - qJ(6);
t197 = (t307 * t309 + t311 * t465) * t306;
t180 = qJD(1) * t197;
t424 = -pkin(9) * t307 - pkin(4);
t439 = qJD(6) * t310;
t509 = qJ(6) * t180 + t517 * t390 + (-qJ(6) * t445 - t254) * t310 + (qJ(6) * t443 - t439 + (-pkin(5) + t424) * qJD(3)) * t308 + t525;
t179 = t307 * t389 - t310 * t420;
t467 = t308 * t310;
t508 = -qJ(6) * t179 + (-pkin(9) * qJD(3) + qJ(6) * qJD(4)) * t467 + (qJD(6) * t308 + (-pkin(9) * qJD(4) + qJ(6) * qJD(3)) * t311) * t307 + t533;
t36 = t307 * t73 + t310 * t77;
t459 = -t308 * t226 + t311 * t227;
t356 = pkin(3) * t420 + t459;
t335 = qJ(5) * t180 + t356;
t352 = -pkin(9) - t521;
t440 = qJD(5) * t310;
t507 = t517 * t179 - t335 + (qJD(4) * t520 + t440) * t308 + t352 * t445;
t446 = qJD(3) * t310;
t506 = (-t308 * t446 - t311 * t443) * pkin(9) + t533;
t454 = pkin(8) * t469 + t309 * t423;
t217 = pkin(9) * t487 + t454;
t455 = -pkin(2) * t469 - pkin(9) * t470;
t218 = -pkin(1) * t306 + t455;
t460 = t311 * t217 + t308 * t218;
t100 = -pkin(10) * t469 + t460;
t216 = -pkin(2) * t487 - t362;
t233 = t241 * pkin(3);
t98 = -t242 * pkin(10) + t216 + t233;
t505 = t310 * t100 + t307 * t98;
t504 = pkin(10) * qJD(4);
t503 = qJ(5) * t50;
t175 = t184 * qJ(5);
t19 = qJ(6) * t135 + t36;
t16 = t175 + t19;
t501 = t16 * t184;
t28 = t175 + t36;
t500 = t184 * t28;
t499 = t184 * t36;
t498 = t307 * t49;
t497 = t307 * t87;
t496 = t310 * t87;
t495 = pkin(4) * t390 - t254 * t310 + t424 * t447 + t525;
t373 = pkin(4) * t307 - t484;
t363 = pkin(9) + t373;
t374 = pkin(4) * t310 + t485;
t494 = -pkin(4) * t179 + (qJD(4) * t374 - t440) * t308 + t363 * t445 + t335;
t493 = -t184 * t521 + t532;
t122 = pkin(3) * t195 + pkin(10) * t193;
t489 = t307 * t122 + t310 * t91;
t40 = t195 * qJ(5) + t489;
t483 = qJ(6) * t193;
t492 = t307 * t483 - t443 * t510 - t40 - t439;
t491 = t184 * t373 - t532;
t271 = t510 * t310;
t80 = t307 * t91;
t490 = qJD(4) * t271 - qJD(6) * t307 - t80 - (-t122 + t483) * t310 + t517 * t195;
t486 = qJ(5) * t135;
t482 = qJ(6) * t308;
t480 = t137 * t135;
t402 = -t244 * t308 - t311 * t422;
t478 = t402 * t310;
t162 = t246 * t308 - t311 * t421;
t477 = t162 * t310;
t232 = t241 * qJ(5);
t476 = t241 * t310;
t474 = t243 * t308;
t472 = t245 * t308;
t471 = t303 * t314;
t468 = t307 * t311;
t18 = qJ(6) * t137 + t35;
t464 = qJD(5) - t18;
t461 = -t308 * t217 + t311 * t218;
t453 = t307 * t263 + t298;
t304 = t309 ^ 2;
t452 = -t312 ^ 2 + t304;
t450 = qJD(2) * t309;
t448 = qJD(3) * t307;
t292 = pkin(3) * t469;
t43 = t232 + t505;
t432 = t312 * t471;
t431 = t308 * t469;
t430 = t307 * t469;
t429 = pkin(4) * t478 + t402 * t540;
t428 = -pkin(4) * t477 - t162 * t540;
t99 = t292 - t461;
t427 = -pkin(4) * t476 - t307 * t232 - t233;
t425 = -g(1) * t472 - g(2) * t474 + g(3) * t431;
t419 = t306 * t450;
t415 = t184 * t443;
t414 = pkin(1) * t536;
t409 = -t307 * t100 + t310 * t98;
t405 = -t108 * pkin(4) + qJ(5) * t109;
t113 = t163 * t310 + t245 * t307;
t404 = -t112 * pkin(4) + qJ(5) * t113;
t157 = t242 * t310 - t430;
t403 = -t156 * pkin(4) + qJ(5) * t157;
t297 = pkin(9) * t468;
t401 = t263 * t310 - t297;
t400 = t184 * t310;
t398 = t312 * t372;
t397 = t184 * t307;
t395 = qJD(3) * t372;
t394 = t308 * t120 - t311 * t123 + t169 * t445 + t181 * t447;
t228 = t306 * t359;
t230 = t362 * qJD(2);
t393 = -t217 * t445 - t218 * t447 + t311 * t228 - t308 * t230;
t382 = t306 * t314 * t487;
t379 = -g(1) * t108 + g(2) * t112;
t378 = g(1) * t109 - g(2) * t113;
t377 = g(1) * t402 + g(2) * t162;
t172 = -qJ(5) * t311 + t453;
t376 = -t307 * t445 + t179;
t375 = t310 * t445 - t180;
t27 = -pkin(4) * t184 + t463;
t371 = t27 * t310 - t28 * t307;
t26 = -t345 * pkin(3) + t394;
t353 = -t217 * t447 + t218 * t445 + t308 * t228 + t311 * t230;
t59 = pkin(10) * t419 + t353;
t154 = qJD(3) * t242 + t306 * t418;
t231 = t454 * qJD(2);
t65 = t154 * pkin(3) - t155 * pkin(10) + t231;
t370 = -t100 * t442 - t307 * t59 + t310 * t65 - t98 * t443;
t367 = 0.2e1 * t406 + qJD(2);
t5 = t408 - t524;
t6 = t310 * t25 + t307 * t31 + t73 * t442 - t443 * t77;
t358 = t184 * t76 - t515;
t357 = -t100 * t443 + t307 * t65 + t310 * t59 + t98 * t442;
t52 = -t403 + t99;
t355 = t412 + t437;
t127 = -t243 * t468 - t244 * t310;
t129 = -t245 * t468 - t246 * t310;
t196 = -t310 * t470 + t311 * t430;
t351 = g(1) * t129 + g(2) * t127 + g(3) * t196;
t128 = -t243 * t466 + t244 * t307;
t130 = -t245 * t466 + t246 * t307;
t350 = -g(1) * t130 - g(2) * t128 - g(3) * t197;
t349 = g(1) * t162 - g(2) * t402 + g(3) * t241;
t348 = g(1) * t163 + g(2) * t159 + g(3) * t242;
t8 = t50 * pkin(4) + t49 * qJ(5) - t137 * qJD(5) + t26;
t3 = -pkin(5) * t50 + qJDD(6) - t8;
t343 = t3 + t349;
t342 = t197 * pkin(4) + pkin(10) * t431 + qJ(5) * t196 + t311 * t292 - t455;
t341 = g(1) * t245 + g(2) * t243 - g(3) * t469;
t4 = t6 + t539;
t12 = t154 * qJ(5) + t241 * qJD(5) + t357;
t340 = pkin(3) * t419 + t393;
t337 = t128 * pkin(4) + pkin(9) * t244 - pkin(10) * t474 + qJ(5) * t127 + t243 * t541;
t336 = t130 * pkin(4) + pkin(9) * t246 - pkin(10) * t472 + qJ(5) * t129 + t245 * t541;
t334 = t49 - t481;
t332 = t514 * pkin(1) + t246 * pkin(2) + t163 * pkin(3) + t113 * pkin(4) + pkin(8) * t421 + pkin(9) * t245 + qJ(5) * t112;
t331 = t184 * t504 - t349;
t329 = -t331 - t8;
t328 = -pkin(1) * t513 - t244 * pkin(2) - pkin(3) * t159 - pkin(4) * t109 + pkin(8) * t422 - t243 * pkin(9) - qJ(5) * t108;
t326 = g(1) * t113 + g(2) * t109 + g(3) * t157 - t6;
t71 = -t242 * t443 + t307 * t419 + t310 * t529;
t325 = qJ(5) * t71 + qJD(5) * t157 + t340;
t323 = t137 * t34 - t327;
t321 = t184 * t35 + t326;
t318 = t480 - t87;
t301 = t311 * pkin(4);
t270 = t510 * t307;
t258 = -pkin(3) - t374;
t250 = pkin(3) - t520;
t219 = t363 * t308;
t173 = t301 - t401;
t170 = t352 * t308;
t144 = t307 * t482 + t172;
t139 = pkin(5) * t311 + t297 + t301 + (-t263 - t482) * t310;
t70 = t242 * t442 + t307 * t529 - t310 * t419;
t64 = pkin(4) * t137 + t486;
t51 = -t137 * t517 - t486;
t44 = -pkin(4) * t241 - t409;
t42 = -pkin(4) * t195 - t122 * t310 + t80;
t38 = -t52 - t511;
t32 = qJ(6) * t156 + t43;
t24 = -qJ(6) * t157 - t241 * t517 - t409;
t15 = -t184 * t517 + t464;
t14 = pkin(4) * t70 - t325;
t13 = -pkin(4) * t154 - t370;
t11 = -t517 * t70 + t325;
t10 = qJ(6) * t70 + qJD(6) * t156 + t12;
t9 = -qJ(6) * t71 - qJD(6) * t157 - t154 * t517 - t370;
t2 = t4 + t535;
t1 = -qJD(6) * t137 + t5 + t502 - t516;
t7 = [qJDD(1), g(1) * t513 - g(2) * t514, g(1) * t514 + g(2) * t513 (qJDD(1) * t304 + 0.2e1 * t309 * t412) * t303 (t309 * t435 - t438 * t452) * t536, t306 * t367 * t449 + t309 * t527, t312 * t527 - t367 * t419, t364 * t487, -t231 * t368 + t362 * t364 - t392 * t487 + g(1) * t244 - g(2) * t246 + (-t413 + t435) * t414, -g(1) * t243 + g(2) * t245 - t230 * t368 - t338 * t487 - t355 * t414 - t364 * t454, t195 * t155 + t242 * t317, -t195 * t154 - t155 * t193 - t241 * t317 - t242 * t93, -t155 * t372 + t242 * t433 + ((-t346 + (-t347 - t386) * t311) * t312 + (-(-qJD(1) * t447 + t436) * t469 + (qJD(1) * t242 + t195) * qJD(2)) * t309) * t306, t154 * t372 - t241 * t433 + (t93 * t312 + (-qJD(1) * t241 - t193) * t450) * t306 (-t433 * t312 + (-t288 - t372) * t450) * t306, -t393 * t372 + t461 * t433 + t231 * t193 + t216 * t93 + t121 * t241 + t168 * t154 + g(1) * t159 - g(2) * t163 + (t394 * t312 + (qJD(1) * t461 + t91) * t450) * t306, t121 * t242 + t168 * t155 + t231 * t195 + t216 * t317 - t345 * t460 + t353 * t372 - t354 * t469 - t419 * t92 + t377, t137 * t71 - t157 * t49, -t135 * t71 - t137 * t70 + t156 * t49 - t157 * t50, t137 * t154 + t157 * t87 + t184 * t71 - t241 * t49, -t135 * t154 - t156 * t87 - t184 * t70 - t241 * t50, t154 * t184 + t241 * t87, -t135 * t340 + t35 * t154 + t26 * t156 + t184 * t370 - t241 * t408 + t409 * t87 + t99 * t50 + t76 * t70 + t378, -t137 * t340 - t36 * t154 + t26 * t157 - t184 * t357 - t6 * t241 - t99 * t49 - t505 * t87 + t76 * t71 + t379, -t13 * t184 + t135 * t14 - t154 * t27 + t156 * t8 - t241 * t5 + t34 * t70 - t44 * t87 + t50 * t52 + t378, -t12 * t135 + t13 * t137 - t156 * t4 + t157 * t5 + t27 * t71 - t28 * t70 - t43 * t50 - t44 * t49 - t377, t12 * t184 - t137 * t14 + t154 * t28 - t157 * t8 + t241 * t4 - t34 * t71 + t43 * t87 + t49 * t52 - t379, t4 * t43 + t28 * t12 + t8 * t52 + t34 * t14 + t5 * t44 + t27 * t13 - g(1) * (pkin(10) * t402 + t328) - g(2) * (pkin(10) * t162 + t332) -t1 * t241 - t11 * t135 - t15 * t154 - t156 * t3 - t17 * t70 - t184 * t9 - t24 * t87 - t38 * t50 + t378, t10 * t184 + t11 * t137 + t154 * t16 + t157 * t3 + t17 * t71 + t2 * t241 + t32 * t87 - t38 * t49 - t379, -t1 * t157 + t10 * t135 - t137 * t9 - t15 * t71 + t156 * t2 + t16 * t70 + t24 * t49 + t32 * t50 + t377, t2 * t32 + t16 * t10 + t1 * t24 + t15 * t9 + t3 * t38 + t17 * t11 - g(1) * (-pkin(5) * t109 + t402 * t510 + t328) - g(2) * (pkin(5) * t113 + t162 * t510 + t332); 0, 0, 0, -t309 * t432, t452 * t471, -t312 * t382 + t411, t309 * t382 + t287, t364, pkin(1) * t309 * t471 + t229 * t368 + t341 - t392, pkin(1) * t432 + t226 * t368 + g(1) * t246 + g(2) * t244 + (pkin(8) * t438 + g(3)) * t470 - t426 (-qJD(3) * t420 + t364) * t308 ^ 2 + ((t306 * t355 + t347) * t308 - t530) * t311, t526 * t193 + t195 * t542 - t308 * t93 + t311 * t317, -t311 * t395 + t308 * t433 + (t311 * t398 + (qJD(2) * t308 - t195) * t309) * t451, t308 * t395 + t311 * t433 + (-t308 * t398 + (qJD(2) * t311 + t193) * t309) * t451, t372 * t420, -pkin(2) * t93 + t459 * t372 - t91 * t420 - t229 * t193 + (-pkin(9) * t345 - t168 * t372) * t308 + (pkin(9) * t395 - t121 + t341) * t311, -pkin(2) * t317 + t121 * t308 - t229 * t195 - t372 * t458 + t420 * t92 + t425 - t526 * t168 + (-t311 * t345 - t372 * t447) * pkin(9), -t49 * t467 + (-t308 * t443 + t375) * t137, t135 * t180 + t137 * t179 + (-t135 * t310 - t137 * t307) * t445 + (t498 - t310 * t50 + (t135 * t307 - t137 * t310) * qJD(4)) * t308, t311 * t49 + t375 * t184 + (-t137 * t372 - t415 + t496) * t308, t311 * t50 + t376 * t184 + (t135 * t372 - t184 * t442 - t497) * t308, -t184 * t308 * t372 - t311 * t87, t401 * t87 + t356 * t135 - t76 * t179 + (-t544 * t310 + t538) * t184 + (t408 + (pkin(9) * t135 + t307 * t76) * qJD(3)) * t311 + (t76 * t442 + t26 * t307 - t372 * t35 + (t184 * t448 + t50) * pkin(9)) * t308 + t350, -t453 * t87 + t356 * t137 - t76 * t180 + t537 * t184 + (t76 * t446 + t6 + (qJD(3) * t137 + t415) * pkin(9)) * t311 + (-t76 * t443 + t26 * t310 + t372 * t36 + (t184 * t446 - t49) * pkin(9)) * t308 + t351, -t173 * t87 - t179 * t34 + t219 * t50 + (t34 * t448 + t5) * t311 - t495 * t184 + t494 * t135 + (t27 * t372 + t307 * t8 + t34 * t442) * t308 + t350, -t172 * t50 - t173 * t49 + t179 * t28 - t180 * t27 + t495 * t137 - t506 * t135 + t371 * t445 + (-t307 * t4 + t310 * t5 + (-t27 * t307 - t28 * t310) * qJD(4)) * t308 - t425, t172 * t87 + t180 * t34 + t219 * t49 + (-t34 * t446 - t4) * t311 + t506 * t184 - t494 * t137 + (-t28 * t372 - t310 * t8 + t34 * t443) * t308 - t351, -g(1) * t336 - g(2) * t337 - g(3) * t342 + t4 * t172 + t5 * t173 + t8 * t219 + t27 * t495 + t28 * t506 + t34 * t494, t1 * t311 - t139 * t87 - t170 * t50 - t509 * t184 + t376 * t17 - t507 * t135 + (t15 * t372 - t17 * t442 - t3 * t307) * t308 + t350, t144 * t87 - t170 * t49 - t2 * t311 + t508 * t184 + t375 * t17 + t507 * t137 + (-t16 * t372 - t17 * t443 + t3 * t310) * t308 - t351, t139 * t49 + t144 * t50 + t15 * t180 - t16 * t179 - t509 * t137 + t508 * t135 + (-t15 * t310 + t16 * t307) * t445 + (-t1 * t310 + t2 * t307 + (t15 * t307 + t16 * t310) * qJD(4)) * t308 + t425, t2 * t144 + t1 * t139 + t3 * t170 - g(1) * (pkin(5) * t130 + qJ(6) * t472 + t336) - g(2) * (pkin(5) * t128 + qJ(6) * t474 + t337) - g(3) * (pkin(5) * t197 - qJ(6) * t431 + t342) + t507 * t17 + t508 * t16 + t509 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 * t193, -t193 ^ 2 + t195 ^ 2, -t193 * t372 + t317, -t93 - t530, t345, -t168 * t195 - t372 * t92 + t349 - t394, t168 * t193 - t372 * t91 + t348 + t354, t137 * t400 - t498, t307 * t543 + t531 * t310, -t137 * t195 + t184 * t400 + t497, t135 * t195 - t184 * t397 + t496, -t184 * t195, -pkin(3) * t50 - t92 * t135 + t80 * t184 - t35 * t195 + t358 * t307 + (-t26 + (-t122 - t504) * t184 + t349) * t310, pkin(3) * t49 + t489 * t184 + t36 * t195 - t92 * t137 + t358 * t310 + (t26 + t331) * t307, t491 * t135 + t184 * t42 + t195 * t27 + t258 * t50 + t307 * t523 + t329 * t310, t135 * t40 - t137 * t42 + (t4 + t184 * t27 + (-t50 + t444) * pkin(10)) * t310 + (t5 - t500 + (qJD(4) * t135 - t49) * pkin(10)) * t307 - t348, -t491 * t137 - t184 * t40 - t195 * t28 + t258 * t49 + t329 * t307 - t310 * t523, t8 * t258 - t28 * t40 - t27 * t42 - g(1) * t428 - g(2) * t429 - g(3) * t427 + t491 * t34 + (qJD(4) * t371 + t5 * t307 + t4 * t310 - t348) * pkin(10), -t135 * t493 + t15 * t195 - t17 * t397 - t184 * t490 - t250 * t50 - t270 * t87 + t310 * t343, t137 * t493 - t16 * t195 + t17 * t400 + t184 * t492 - t250 * t49 + t271 * t87 + t307 * t343, t270 * t49 + t271 * t50 - t490 * t137 + t492 * t135 + (-t15 * t184 - t2) * t310 + (-t1 + t501) * t307 + t348, t2 * t271 + t1 * t270 + t3 * t250 - g(1) * (-pkin(5) * t477 + t163 * t510 + t428) - g(2) * (pkin(5) * t478 + t159 * t510 + t429) - g(3) * (-pkin(5) * t476 + t242 * t510 + t427) + t493 * t17 + t492 * t16 + t490 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t134 - t518, -t334, -t50 + t479, t87, -t137 * t76 + t330 + t499, t135 * t76 + t321, -t135 * t64 - t323 + t499 + t84, pkin(4) * t49 - t503 + (t28 - t36) * t137 + (t27 - t463) * t135, -t135 * t34 + t137 * t64 - t321 + t534, -t5 * pkin(4) - g(1) * t404 - g(2) * t405 - g(3) * t403 + t4 * qJ(5) - t27 * t36 + t28 * t463 - t34 * t64, t135 * t51 + t184 * t19 + (pkin(5) + t517) * t87 + t522, t135 * t17 - t137 * t51 - t18 * t184 - t326 + t534 + t535, t503 - t517 * t49 + (-t16 + t19) * t137 + (-t15 + t464) * t135, t2 * qJ(5) - t1 * t517 - t15 * t19 - t17 * t51 - g(1) * (-pkin(5) * t112 + t404) - g(2) * (-pkin(5) * t108 + t405) - g(3) * (t403 - t511) + t464 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t318, -t334, t528, t323 - t500, t318, t528, t334, -t501 - t516 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, t531, -t134 - t518, -t135 * t16 + t137 * t15 + t343;];
tau_reg  = t7;
