% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP2_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:51:40
% EndTime: 2019-03-09 20:51:51
% DurationCPUTime: 4.17s
% Computational Cost: add. (7887->471), mult. (18901->566), div. (0->0), fcn. (13092->6), ass. (0->250)
t202 = sin(qJ(4));
t203 = sin(qJ(3));
t204 = sin(qJ(2));
t206 = cos(qJ(2));
t336 = cos(qJ(3));
t235 = -t203 * t204 + t206 * t336;
t224 = t235 * qJD(3);
t119 = qJD(2) * t235 + t224;
t213 = t119 * qJD(1);
t262 = qJD(1) * t336;
t297 = t203 * t206;
t157 = -qJD(1) * t297 - t204 * t262;
t205 = cos(qJ(4));
t278 = qJD(2) + qJD(3);
t228 = t205 * t157 - t202 * t278;
t210 = qJD(4) * t228 - t202 * t213;
t284 = qJD(1) * t204;
t155 = t203 * t284 - t206 * t262;
t152 = qJD(4) + t155;
t304 = t228 * t152;
t363 = t210 + t304;
t282 = qJD(4) * t202;
t301 = t155 * t202;
t362 = -t282 - t301;
t172 = t204 * t336 + t297;
t120 = t278 * t172;
t361 = t120 * qJD(1);
t337 = -pkin(8) - pkin(7);
t182 = t337 * t204;
t174 = qJD(1) * t182;
t183 = t337 * t206;
t176 = qJD(1) * t183;
t266 = t336 * t176;
t114 = t174 * t203 - t266;
t283 = qJD(3) * t203;
t249 = pkin(2) * t283 - t114;
t360 = qJ(5) * t361 + qJD(5) * t152;
t253 = t205 * t278;
t242 = qJD(4) * t253 + t157 * t282 + t205 * t213;
t127 = -t157 * t202 - t253;
t307 = t127 * t152;
t359 = t242 - t307;
t279 = qJD(1) * qJD(2);
t358 = -0.2e1 * t279;
t105 = t361 * pkin(4);
t281 = qJD(4) * t205;
t55 = t361 * pkin(3) + (-pkin(9) * t224 + (t204 * pkin(2) - pkin(9) * t235) * qJD(2)) * qJD(1);
t331 = qJD(2) * pkin(2);
t162 = t174 + t331;
t269 = qJD(2) * t337;
t250 = qJD(1) * t269;
t163 = t204 * t250;
t164 = t206 * t250;
t261 = qJD(3) * t336;
t63 = t162 * t261 + t163 * t336 + t203 * t164 + t176 * t283;
t194 = -pkin(2) * t206 - pkin(1);
t181 = t194 * qJD(1);
t90 = pkin(3) * t155 + pkin(9) * t157 + t181;
t112 = t162 * t203 - t266;
t95 = pkin(9) * t278 + t112;
t259 = t202 * t63 - t205 * t55 + t281 * t95 + t282 * t90;
t12 = -t105 + t259;
t236 = -t202 * t55 - t205 * t63 - t281 * t90 + t282 * t95;
t8 = -t236 + t360;
t357 = t12 * t202 + t8 * t205;
t158 = t203 * t176;
t111 = t162 * t336 + t158;
t94 = -pkin(3) * t278 - t111;
t222 = qJ(5) * t228 + t94;
t338 = pkin(4) + pkin(5);
t30 = -t127 * t338 + qJD(6) - t222;
t64 = t162 * t283 + t163 * t203 - t164 * t336 - t176 * t261;
t14 = -pkin(4) * t210 - qJ(5) * t242 + qJD(5) * t228 + t64;
t9 = pkin(5) * t210 - t14;
t356 = -t202 * t9 - t281 * t30;
t296 = t205 * t361;
t355 = (t152 * t282 - t296) * pkin(9);
t354 = t205 * t9 - t282 * t30;
t353 = t202 * t64 + t281 * t94;
t352 = -qJ(6) * t210 + qJD(6) * t127;
t351 = 0.2e1 * t360;
t300 = t155 * t205;
t286 = -pkin(4) * t301 + qJ(5) * t300;
t350 = -t286 + t249;
t142 = t152 * qJ(5);
t51 = t202 * t90 + t205 * t95;
t40 = t142 + t51;
t45 = t127 * pkin(4) + t222;
t349 = t40 * t157 - t300 * t45;
t348 = -t14 * t205 + t282 * t45;
t347 = t64 * t205 - t282 * t94;
t346 = (qJD(6) + t30) * t228;
t50 = -t202 * t95 + t205 * t90;
t290 = qJD(5) - t50;
t345 = qJ(5) * t120 - qJD(5) * t235;
t150 = pkin(4) * t282 - qJ(5) * t281 - qJD(5) * t202;
t344 = pkin(5) * t362 - t150;
t189 = qJ(6) * t282;
t343 = qJ(6) * t301 + t189;
t126 = t228 ^ 2;
t147 = t152 ^ 2;
t342 = -t147 - t126;
t197 = t202 * qJ(5);
t341 = pkin(4) * t205 + t197;
t340 = t182 * t336 + t183 * t203;
t132 = t182 * t203 - t183 * t336;
t175 = t204 * t269;
t177 = t206 * t269;
t77 = qJD(3) * t132 + t203 * t175 - t177 * t336;
t339 = t127 ^ 2;
t335 = t157 * pkin(4);
t334 = pkin(9) - qJ(6);
t333 = pkin(2) * qJD(3);
t332 = qJ(5) * t210;
t330 = t14 * t202;
t328 = t152 * t51;
t327 = t205 * t210;
t324 = t242 * t202;
t115 = t174 * t336 + t158;
t107 = -pkin(3) * t157 + pkin(9) * t155;
t93 = pkin(2) * t284 + t107;
t323 = t115 * t205 + t202 * t93;
t252 = pkin(2) * t261;
t241 = t252 - qJD(6);
t192 = pkin(2) * t203 + pkin(9);
t263 = t192 * t282;
t148 = t157 * qJ(5);
t43 = -t148 + t323;
t322 = t205 * t241 - t263 + t343 - t43;
t108 = t202 * t115;
t292 = -qJ(6) + t192;
t170 = t292 * t205;
t271 = t338 * t157;
t313 = qJ(6) * t155;
t321 = qJD(4) * t170 + t241 * t202 - t108 - (-t93 + t313) * t205 - t271;
t320 = t344 - t350;
t62 = t112 + t286;
t319 = t62 + t344;
t318 = t150 + t350;
t288 = t107 * t202 + t111 * t205;
t46 = -t148 + t288;
t317 = -pkin(9) * t282 - qJD(6) * t205 + t343 - t46;
t316 = t150 - t62;
t103 = t202 * t111;
t180 = t334 * t205;
t315 = qJD(4) * t180 - t202 * qJD(6) - t103 - (-t107 + t313) * t205 - t271;
t314 = qJ(5) * t205;
t312 = qJ(6) * t172;
t311 = t361 * t192;
t310 = t119 * t202;
t309 = t119 * t205;
t308 = t127 * qJ(5);
t306 = t127 * t202;
t305 = t228 * t127;
t303 = t228 * t205;
t302 = t152 * t157;
t299 = t157 * t155;
t298 = t202 * t361;
t209 = qJD(1) ^ 2;
t295 = t206 * t209;
t208 = qJD(2) ^ 2;
t294 = t208 * t204;
t293 = t208 * t206;
t31 = -qJ(6) * t228 + t50;
t291 = qJD(5) - t31;
t110 = -pkin(3) * t235 - pkin(9) * t172 + t194;
t287 = t110 * t202 + t132 * t205;
t285 = t204 ^ 2 - t206 ^ 2;
t280 = qJD(5) * t205;
t272 = t204 * t331;
t69 = pkin(3) * t120 - pkin(9) * t119 + t272;
t76 = qJD(3) * t340 + t175 * t336 + t203 * t177;
t277 = t110 * t281 + t202 * t69 + t205 * t76;
t275 = pkin(3) + t341;
t274 = t110 * t282 + t132 * t281 + t202 * t76;
t56 = -qJ(5) * t235 + t287;
t268 = t202 * t336;
t267 = t205 * t336;
t264 = t172 * t281;
t260 = t204 * t279;
t258 = pkin(1) * t358;
t257 = t205 * t107 - t103;
t121 = t202 * t132;
t256 = t205 * t110 - t121;
t254 = t152 * t205;
t193 = -pkin(2) * t336 - pkin(3);
t251 = -t51 * t157 + t353;
t32 = qJ(6) * t127 + t51;
t248 = pkin(4) * t202 - t314;
t39 = -pkin(4) * t152 + t290;
t247 = -t202 * t40 + t205 * t39;
t246 = t202 * t252;
t245 = t155 * t94 - t311;
t244 = t205 * t69 - t274;
t243 = -qJ(6) * t119 - qJD(6) * t172;
t240 = -t39 * t157 + t348;
t239 = t50 * t157 - t347;
t238 = t281 * t45 + t330;
t237 = -t202 * t338 + t314;
t166 = t193 - t341;
t233 = -t172 * t282 + t309;
t232 = -t132 * t282 + t277;
t231 = t181 * t157 - t64;
t230 = -qJ(6) * t242 + t12;
t229 = -t228 * t45 + t12;
t25 = t142 + t32;
t227 = t25 * t157 + t30 * t300 - t356;
t226 = (-t152 * t281 - t298) * pkin(9);
t19 = -t152 * t338 + t291;
t225 = -t19 * t157 - t30 * t301 + t354;
t38 = t242 + t307;
t223 = t152 * t50 + t236;
t221 = -pkin(5) * t361 + t230;
t220 = t205 * t252 - t263;
t219 = t357 + t362 * t40 + (t281 + t300) * t39;
t218 = qJD(4) * t247 + t357;
t217 = t324 + t327 + (-t303 + t306) * qJD(4);
t1 = qJD(6) * t228 + t221;
t2 = t8 + t352;
t216 = t25 * t282 + (-qJD(4) * t19 - t2) * t205 + (t155 * t25 - t1) * t202 - t19 * t300;
t215 = t181 * t155 - t63;
t211 = -t361 - t305;
t198 = t205 * pkin(5);
t179 = t334 * t202;
t169 = t292 * t202;
t167 = t198 + t275;
t141 = t198 - t166;
t81 = -t155 ^ 2 + t157 ^ 2;
t80 = -t157 * t278 - t361;
t79 = t155 * t278 + t213;
t78 = -pkin(4) * t228 + t308;
t75 = t172 * t248 - t340;
t58 = t172 * t237 + t340;
t57 = pkin(4) * t235 - t256;
t54 = t228 * t338 - t308;
t48 = -t257 + t335;
t44 = -t205 * t93 + t108 + t335;
t42 = t202 * t312 + t56;
t37 = t121 + (-t110 - t312) * t205 + t338 * t235;
t24 = t152 * t254 - t157 * t228 + t298;
t23 = -t127 * t157 - t147 * t202 + t296;
t20 = -t228 * t254 + t324;
t17 = t248 * t119 + (qJD(4) * t341 - t280) * t172 + t77;
t16 = t237 * t119 + (t280 + (-t205 * t338 - t197) * qJD(4)) * t172 - t77;
t15 = -t120 * pkin(4) - t244;
t13 = t232 + t345;
t10 = t202 * t363 + t205 * t359;
t4 = qJ(6) * t264 + (-qJD(4) * t132 - t243) * t202 + t277 + t345;
t3 = t172 * t189 - t338 * t120 + (t243 - t69) * t205 + t274;
t5 = [0, 0, 0, 0.2e1 * t206 * t260, t285 * t358, t293, -t294, 0, -pkin(7) * t293 + t204 * t258, pkin(7) * t294 + t206 * t258, -t157 * t119 + t172 * t213, -t119 * t155 + t157 * t120 - t172 * t361 + t213 * t235, t119 * t278, -t120 * t278, 0, t194 * t361 + t181 * t120 - t77 * t278 + (-qJD(1) * t235 + t155) * t272, pkin(2) * t172 * t260 + t181 * t119 - t157 * t272 + t194 * t213 - t278 * t76, t172 * t205 * t242 - t228 * t233 (-t127 * t205 + t202 * t228) * t119 + (-t324 + t327 + (t303 + t306) * qJD(4)) * t172, -t120 * t228 + t152 * t233 + t172 * t296 - t235 * t242, -t172 * t298 - t127 * t120 - t210 * t235 + (-t264 - t310) * t152, t120 * t152 - t235 * t361, t50 * t120 + t77 * t127 + t152 * t244 + t172 * t353 + t210 * t340 + t235 * t259 + t256 * t361 + t310 * t94, -t51 * t120 - t152 * t232 + t172 * t347 - t228 * t77 - t235 * t236 - t242 * t340 - t287 * t361 + t309 * t94, t12 * t235 - t39 * t120 + t17 * t127 - t15 * t152 + t172 * t238 - t210 * t75 + t310 * t45 - t361 * t57, -t13 * t127 - t15 * t228 + t56 * t210 + t57 * t242 + t247 * t119 + (t12 * t205 - t202 * t8 + (-t202 * t39 - t205 * t40) * qJD(4)) * t172, t40 * t120 + t13 * t152 + t17 * t228 + t172 * t348 - t235 * t8 - t242 * t75 - t309 * t45 + t361 * t56, t12 * t57 + t13 * t40 + t14 * t75 + t15 * t39 + t17 * t45 + t56 * t8, t1 * t235 - t19 * t120 - t16 * t127 - t3 * t152 + t172 * t356 + t210 * t58 - t30 * t310 - t361 * t37, t25 * t120 + t4 * t152 - t16 * t228 + t172 * t354 - t2 * t235 + t242 * t58 + t30 * t309 + t361 * t42, t4 * t127 + t3 * t228 - t37 * t242 - t42 * t210 + (-t19 * t205 + t202 * t25) * t119 + (-t1 * t205 + t2 * t202 + (t19 * t202 + t205 * t25) * qJD(4)) * t172, t1 * t37 + t16 * t30 + t19 * t3 + t2 * t42 + t25 * t4 + t58 * t9; 0, 0, 0, -t204 * t295, t285 * t209, 0, 0, 0, t209 * pkin(1) * t204, pkin(1) * t295, -t299, t81, t79, t80, 0, t114 * t278 + (-t155 * t284 - t278 * t283) * pkin(2) + t231, t115 * t278 + (t157 * t284 - t261 * t278) * pkin(2) + t215, t20, t10, t24, t23, t302, -t193 * t210 + t245 * t202 + t249 * t127 + (-t246 + t108 + (-qJD(4) * t192 - t93) * t205) * t152 + t239, t193 * t242 + t245 * t205 - t249 * t228 + (-t220 + t323) * t152 + t251, -t166 * t210 + (t155 * t45 - t311) * t202 + t318 * t127 + (-t192 * t281 - t246 + t44) * t152 + t240, t43 * t127 + t44 * t228 + (-t127 * t267 - t228 * t268) * t333 + t217 * t192 + t219, -t330 - t166 * t242 + (-qJD(4) * t45 + t311) * t205 + t318 * t228 + (-t43 + t220) * t152 + t349, t14 * t166 - t39 * t44 - t40 * t43 + t318 * t45 + (t267 * t40 + t268 * t39) * t333 + t218 * t192, -t127 * t320 + t141 * t210 - t152 * t321 - t169 * t361 + t225, t141 * t242 + t152 * t322 + t170 * t361 - t228 * t320 + t227, t127 * t322 - t169 * t242 - t170 * t210 + t228 * t321 + t216, t1 * t169 + t9 * t141 + t2 * t170 + t19 * t321 + t25 * t322 + t30 * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t81, t79, t80, 0, t112 * t278 + t231, t111 * t278 + t215, t20, t10, t24, t23, t302, pkin(3) * t210 - t112 * t127 - t152 * t257 + t301 * t94 + t226 + t239, -pkin(3) * t242 + t112 * t228 + t152 * t288 + t300 * t94 + t251 + t355, t127 * t316 + t48 * t152 + t210 * t275 + t301 * t45 + t226 + t240, pkin(9) * t217 + t46 * t127 + t228 * t48 + t219, -t46 * t152 + t228 * t316 + t242 * t275 - t238 + t349 - t355, pkin(9) * t218 - t14 * t275 + t316 * t45 - t39 * t48 - t40 * t46, -t127 * t319 - t152 * t315 + t167 * t210 - t179 * t361 + t225, t152 * t317 + t167 * t242 + t180 * t361 - t228 * t319 + t227, t127 * t317 - t179 * t242 - t180 * t210 + t228 * t315 + t216, t1 * t179 + t9 * t167 + t2 * t180 + t19 * t315 + t25 * t317 + t30 * t319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, t126 - t339, t38, t210 - t304, t361, t228 * t94 - t259 + t328, t127 * t94 + t223, -t127 * t78 + t105 - t229 + t328, -pkin(4) * t242 + t332 - (t40 - t51) * t228 + (t39 - t290) * t127, -t127 * t45 - t228 * t78 - t223 + t351, -t12 * pkin(4) + t8 * qJ(5) + t290 * t40 - t39 * t51 - t45 * t78, t54 * t127 + t32 * t152 - t346 + (pkin(5) + t338) * t361 - t230, t127 * t30 - t152 * t31 + t228 * t54 - t236 + t351 + t352, -t332 + t338 * t242 - (-t25 + t32) * t228 + (-t19 + t291) * t127, t2 * qJ(5) - t1 * t338 - t19 * t32 + t25 * t291 - t30 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, t38, t342, -t152 * t40 + t229, t211, t342, -t38, -t25 * t152 + t221 + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t359, -t126 - t339, -t127 * t25 - t19 * t228 + t9;];
tauc_reg  = t5;
