% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 20:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:51:40
% EndTime: 2019-03-09 20:51:55
% DurationCPUTime: 5.92s
% Computational Cost: add. (10186->579), mult. (24782->657), div. (0->0), fcn. (17272->6), ass. (0->287)
t228 = sin(qJ(2));
t227 = sin(qJ(3));
t230 = cos(qJ(2));
t340 = t227 * t230;
t386 = cos(qJ(3));
t195 = t228 * t386 + t340;
t322 = qJD(2) + qJD(3);
t147 = t322 * t195;
t132 = t147 * qJD(1);
t328 = qJD(1) * t228;
t305 = t227 * t328;
t306 = t386 * t230;
t179 = -qJD(1) * t306 + t305;
t177 = qJD(4) + t179;
t419 = t132 * qJ(5) + t177 * qJD(5);
t387 = -pkin(8) - pkin(7);
t205 = t387 * t230;
t199 = qJD(1) * t205;
t183 = t386 * t199;
t204 = t387 * t228;
t197 = qJD(1) * t204;
t141 = t197 * t227 - t183;
t327 = qJD(3) * t227;
t285 = pkin(2) * t327 - t141;
t301 = t386 * qJD(2);
t288 = t230 * t301;
t300 = t386 * qJD(3);
t341 = t227 * t228;
t146 = -t230 * t300 + t322 * t341 - t288;
t181 = t195 * qJD(1);
t226 = sin(qJ(4));
t229 = cos(qJ(4));
t155 = t226 * t181 - t229 * t322;
t157 = t229 * t181 + t226 * t322;
t351 = t157 * t229;
t354 = t155 * t226;
t250 = t230 * (t301 + t300);
t323 = qJD(1) * qJD(2);
t299 = t228 * t323;
t330 = qJD(3) * t305 + t227 * t299;
t417 = -qJD(1) * t250 + t330;
t240 = t226 * t417;
t97 = qJD(4) * t157 - t240;
t373 = t97 * t229;
t291 = qJD(4) * t322;
t326 = qJD(4) * t226;
t96 = t181 * t326 + (t417 - t291) * t229;
t374 = t96 * t226;
t418 = t195 * (qJD(4) * (-t351 + t354) - t373 + t374) + (t155 * t229 + t157 * t226) * t146;
t352 = t157 * t177;
t356 = t155 * t177;
t407 = t96 + t356;
t11 = t226 * (t97 + t352) + t229 * t407;
t416 = -0.2e1 * t323;
t131 = t132 * pkin(4);
t218 = -pkin(2) * t230 - pkin(1);
t203 = qJD(1) * t218;
t117 = t179 * pkin(3) - t181 * pkin(9) + t203;
t380 = qJD(2) * pkin(2);
t185 = t197 + t380;
t139 = t227 * t185 - t183;
t121 = pkin(9) * t322 + t139;
t325 = qJD(4) * t229;
t315 = t228 * t380;
t73 = t330 * pkin(9) + t132 * pkin(3) + (-pkin(9) * t250 + t315) * qJD(1);
t309 = qJD(2) * t387;
t289 = qJD(1) * t309;
t186 = t228 * t289;
t187 = t230 * t289;
t87 = t185 * t300 + t186 * t386 + t227 * t187 + t199 * t327;
t292 = t117 * t326 + t121 * t325 + t226 * t87 - t229 * t73;
t14 = -t131 + t292;
t265 = -t117 * t325 + t121 * t326 - t226 * t73 - t229 * t87;
t9 = -t265 + t419;
t415 = t14 * t226 + t9 * t229;
t171 = t386 * t187;
t297 = t227 * t186 - t171;
t88 = qJD(3) * t139 + t297;
t20 = t97 * pkin(4) + t96 * qJ(5) - t157 * qJD(5) + t88;
t10 = -t97 * pkin(5) - t20;
t182 = t227 * t199;
t138 = t386 * t185 + t182;
t120 = -pkin(3) * t322 - t138;
t252 = -t157 * qJ(5) + t120;
t388 = pkin(4) + pkin(5);
t45 = -t155 * t388 + qJD(6) - t252;
t414 = -t10 * t226 - t45 * t325;
t339 = t229 * t132;
t413 = pkin(9) * (t177 * t326 - t339);
t412 = t10 * t229 - t45 * t326;
t411 = t97 * qJ(6) + t155 * qJD(6);
t348 = t179 * t229;
t349 = t179 * t226;
t331 = pkin(4) * t349 - qJ(5) * t348;
t410 = t331 + t285;
t169 = t177 * qJ(5);
t69 = t117 * t226 + t121 * t229;
t55 = t169 + t69;
t63 = t155 * pkin(4) + t252;
t409 = -t55 * t181 - t63 * t348;
t408 = -t20 * t229 + t63 * t326;
t403 = (qJD(6) + t45) * t157;
t194 = -t306 + t341;
t108 = t132 * t194;
t60 = t147 * t177 + t108;
t402 = 0.2e1 * t419;
t401 = t147 * qJ(5) + t194 * qJD(5);
t175 = pkin(4) * t326 - qJ(5) * t325 - t226 * qJD(5);
t400 = -t175 + (-t326 - t349) * pkin(5);
t213 = qJ(6) * t326;
t399 = qJ(6) * t349 + t213;
t172 = t177 ^ 2;
t389 = t157 ^ 2;
t398 = -t172 - t389;
t397 = t386 * t204 + t227 * t205;
t221 = t226 * qJ(5);
t396 = t229 * pkin(4) + t221;
t390 = t155 ^ 2;
t395 = t389 - t390;
t358 = t146 * t229;
t266 = t195 * t326 + t358;
t394 = -t157 * t147 + t177 * t266 + t96 * t194 - t195 * t339;
t304 = t195 * t325;
t359 = t146 * t226;
t267 = t304 - t359;
t343 = t226 * t132;
t393 = t147 * t155 + t177 * t267 + t194 * t97 + t195 * t343;
t362 = qJ(5) * t229;
t392 = t226 * t388 - t362;
t160 = t227 * t204 - t205 * t386;
t198 = t228 * t309;
t104 = t160 * qJD(3) + t227 * t198 - t387 * t288;
t385 = pkin(2) * t227;
t384 = t181 * pkin(4);
t383 = pkin(9) - qJ(6);
t382 = pkin(2) * qJD(3);
t381 = qJ(5) * t97;
t16 = t265 * t229;
t379 = t177 * t69;
t378 = t20 * t226;
t375 = t88 * t397;
t216 = pkin(9) + t385;
t290 = pkin(2) * t300;
t280 = t229 * t290;
t372 = -t155 * t280 - t216 * t373;
t272 = t290 - qJD(6);
t303 = t216 * t326;
t173 = t181 * qJ(5);
t133 = pkin(3) * t181 + pkin(9) * t179;
t317 = pkin(2) * t328;
t119 = t133 + t317;
t142 = t197 * t386 + t182;
t78 = t226 * t119 + t229 * t142;
t61 = t173 + t78;
t371 = t229 * t272 - t303 + t399 - t61;
t135 = t226 * t142;
t335 = -qJ(6) + t216;
t193 = t335 * t229;
t313 = t388 * t181;
t361 = qJ(6) * t179;
t370 = qJD(4) * t193 + t226 * t272 - t135 - (-t119 + t361) * t229 + t313;
t369 = t400 - t410;
t86 = t139 - t331;
t368 = t86 + t400;
t367 = t175 + t410;
t85 = t226 * t133 + t229 * t138;
t64 = t173 + t85;
t366 = -pkin(9) * t326 - t229 * qJD(6) + t399 - t64;
t365 = t175 - t86;
t129 = t226 * t138;
t202 = t383 * t229;
t364 = qJD(4) * t202 - t226 * qJD(6) - t129 - (-t133 + t361) * t229 + t313;
t363 = qJ(5) * t155;
t360 = t132 * t216;
t355 = t155 * t216;
t353 = t157 * t155;
t350 = t177 * t181;
t347 = t181 * t179;
t346 = t195 * t226;
t345 = t195 * t229;
t344 = t203 * t181;
t233 = qJD(1) ^ 2;
t338 = t230 * t233;
t232 = qJD(2) ^ 2;
t337 = t232 * t228;
t336 = t232 * t230;
t68 = t229 * t117 - t226 * t121;
t46 = t157 * qJ(6) + t68;
t334 = qJD(5) - t46;
t333 = qJD(5) - t68;
t137 = pkin(3) * t194 - pkin(9) * t195 + t218;
t99 = t226 * t137 + t229 * t160;
t329 = t228 ^ 2 - t230 ^ 2;
t324 = qJD(5) * t229;
t321 = -t68 * t348 - t69 * t349 - t16;
t319 = pkin(3) + t396;
t318 = t386 * pkin(2);
t103 = qJD(3) * t397 + t386 * t198 + t309 * t340;
t94 = pkin(3) * t147 + pkin(9) * t146 + t315;
t314 = t229 * t103 + t137 * t325 + t226 * t94;
t312 = t228 * t338;
t310 = t226 * t103 + t137 * t326 + t160 * t325;
t74 = t194 * qJ(5) + t99;
t308 = t226 * t386;
t307 = t229 * t386;
t302 = t216 * t325;
t298 = pkin(1) * t416;
t77 = t229 * t119 - t135;
t84 = t229 * t133 - t129;
t148 = t226 * t160;
t98 = t229 * t137 - t148;
t294 = t177 * t226;
t293 = t177 * t229;
t217 = -t318 - pkin(3);
t287 = t230 * t299;
t286 = t120 * t325 + t69 * t181 + t88 * t226;
t284 = pkin(4) * t226 - t362;
t54 = -pkin(4) * t177 + t333;
t283 = t226 * t55 - t229 * t54;
t282 = t226 * t69 + t229 * t68;
t279 = t120 * t179 - t360;
t278 = -t181 * t155 - t339;
t277 = t157 * t181 - t343;
t274 = t351 + t354;
t273 = qJ(6) * t146 - qJD(6) * t195;
t24 = t229 * t94 - t310;
t271 = t54 * t181 + t408;
t270 = t120 * t326 - t68 * t181 - t88 * t229;
t269 = t325 * t63 + t378;
t189 = t217 - t396;
t23 = -t160 * t326 + t314;
t264 = -t55 * t349 + t415 + (t325 + t348) * t54;
t263 = t96 * qJ(6) + t14;
t262 = t157 * t63 + t14;
t47 = qJ(6) * t155 + t69;
t40 = t169 + t47;
t261 = -t40 * t181 + t348 * t45 - t414;
t260 = (-t177 * t325 - t343) * pkin(9);
t29 = -t177 * t388 + t334;
t259 = t29 * t181 - t45 * t349 + t412;
t258 = t155 * t294 - t373;
t256 = t157 * t290 - t216 * t96;
t255 = t96 - t356;
t251 = t177 * t68 + t265;
t249 = -t280 + t303;
t248 = -t226 * t290 - t302;
t247 = -t132 * pkin(5) + t263;
t246 = -t172 * t226 - t278;
t26 = t155 * t267 + t346 * t97;
t245 = -qJD(4) * t283 + t415;
t244 = -qJD(4) * t282 + t226 * t292 - t16;
t1 = -t157 * qJD(6) + t247;
t2 = t9 + t411;
t243 = t40 * t326 + (-qJD(4) * t29 - t2) * t229 + (t179 * t40 - t1) * t226 - t29 * t348;
t239 = t203 * t179 - t87;
t236 = -t181 * t322 + t353;
t235 = -t181 * t325 - t226 * t291 + t240;
t234 = -t235 - t352;
t222 = t229 * pkin(5);
t201 = t383 * t226;
t192 = t335 * t226;
t190 = t222 + t319;
t168 = t222 - t189;
t109 = -t179 ^ 2 + t181 ^ 2;
t106 = t179 * t322 - t417;
t105 = pkin(4) * t157 + t363;
t102 = t195 * t284 - t397;
t90 = pkin(9) * t373;
t80 = -t195 * t392 + t397;
t75 = -t194 * pkin(4) - t98;
t72 = -t157 * t388 - t363;
t66 = -t84 - t384;
t62 = -t77 - t384;
t59 = qJ(6) * t346 + t74;
t52 = t148 + (-qJ(6) * t195 - t137) * t229 - t388 * t194;
t39 = -t172 * t229 + t277;
t38 = t177 * t293 - t277;
t35 = t177 * t294 + t278;
t30 = t157 * t293 - t374;
t27 = -t284 * t146 + (qJD(4) * t396 - t324) * t195 + t104;
t25 = -t157 * t266 - t345 * t96;
t22 = t392 * t146 + (t324 + (-t229 * t388 - t221) * qJD(4)) * t195 - t104;
t21 = -t147 * pkin(4) - t24;
t19 = t23 + t401;
t5 = qJ(6) * t304 + (-qJD(4) * t160 - t273) * t226 + t314 + t401;
t4 = t195 * t213 - t388 * t147 + (t273 - t94) * t229 + t310;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t287, t329 * t416, t336, -0.2e1 * t287, -t337, 0, -pkin(7) * t336 + t228 * t298, pkin(7) * t337 + t230 * t298, 0, 0, -t181 * t146 - t195 * t417, -t195 * t132 + t146 * t179 - t181 * t147 + t194 * t417, -t146 * t322, t147 * t179 + t108, -t147 * t322, 0, t218 * t132 + t203 * t147 - t104 * t322 + (qJD(1) * t194 + t179) * t315, pkin(2) * t195 * t299 - t103 * t322 - t203 * t146 + t181 * t315 - t218 * t417, -t103 * t179 + t104 * t181 - t160 * t132 + t138 * t146 - t139 * t147 - t87 * t194 + t88 * t195 + t397 * t417, t139 * t103 - t138 * t104 + t87 * t160 + 0.2e1 * t203 * t315 - t375, t25, t418, -t394, t26, -t393, t60, t104 * t155 + t120 * t267 + t98 * t132 + t68 * t147 + t24 * t177 - t194 * t292 + t346 * t88 - t397 * t97, t104 * t157 - t120 * t266 - t99 * t132 - t69 * t147 - t23 * t177 + t194 * t265 + t345 * t88 + t397 * t96, -t23 * t155 - t24 * t157 + t98 * t96 - t99 * t97 + t282 * t146 + (t265 * t226 + t292 * t229 + (t226 * t68 - t229 * t69) * qJD(4)) * t195, t104 * t120 + t23 * t69 + t24 * t68 - t265 * t99 - t292 * t98 - t375, t25, -t394, -t418, t60, t393, t26, t102 * t97 - t75 * t132 - t14 * t194 - t54 * t147 + t27 * t155 - t21 * t177 + t195 * t269 - t359 * t63, -t19 * t155 + t21 * t157 - t74 * t97 - t75 * t96 + t283 * t146 + (t14 * t229 - t226 * t9 + (-t226 * t54 - t229 * t55) * qJD(4)) * t195, t102 * t96 + t74 * t132 + t55 * t147 - t27 * t157 + t19 * t177 + t9 * t194 + t195 * t408 + t63 * t358, t102 * t20 + t14 * t75 + t19 * t55 + t21 * t54 + t27 * t63 + t74 * t9, t25, -t418, t394, t26, -t393, t60, -t1 * t194 - t52 * t132 - t29 * t147 - t22 * t155 - t4 * t177 + t195 * t414 + t45 * t359 - t80 * t97, t59 * t132 + t40 * t147 + t22 * t157 + t5 * t177 + t2 * t194 + t195 * t412 - t45 * t358 - t80 * t96, t5 * t155 - t4 * t157 + t52 * t96 + t59 * t97 + (-t226 * t40 + t229 * t29) * t146 + (-t1 * t229 + t2 * t226 + (t226 * t29 + t229 * t40) * qJD(4)) * t195, t1 * t52 + t10 * t80 + t2 * t59 + t22 * t45 + t29 * t4 + t40 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, t329 * t233, 0, t312, 0, 0, t233 * pkin(1) * t228, pkin(1) * t338, 0, 0, t347, t109, t106, -t347, 0, 0, t199 * t300 + t171 - t179 * t317 - t344 + t141 * t322 + (-qJD(3) * t185 - t322 * t382 - t186) * t227, t142 * t322 + (-t181 * t328 - t300 * t322) * pkin(2) + t239, -t132 * t385 + t417 * t318 + (t139 + t285) * t181 + (-t138 + t142 - t290) * t179, t138 * t141 - t139 * t142 + (-t203 * t328 - t386 * t88 + t227 * t87 + (-t138 * t227 + t139 * t386) * qJD(3)) * pkin(2), t30, -t11, t38, t258, t246, -t350, t217 * t97 + t279 * t226 + t285 * t155 + (-t77 + t248) * t177 + t270, -t217 * t96 + t279 * t229 + t285 * t157 + (t78 + t249) * t177 + t286, t78 * t155 + t77 * t157 + (t157 * t216 - t68) * t325 + (t292 + (-t69 + t355) * qJD(4) + t256) * t226 + t321 + t372, -t120 * t141 + t88 * t217 - t68 * t77 - t69 * t78 + (t120 * t227 + t307 * t69 - t308 * t68) * t382 + t244 * t216, t30, t38, t11, -t350, t35, t258, t189 * t97 + (t179 * t63 - t360) * t226 + t367 * t155 + (t62 + t248) * t177 + t271, t61 * t155 + (-t62 + t302) * t157 + ((-t55 + t355) * qJD(4) + t256) * t226 + t264 + t372, t189 * t96 - t378 + (-qJD(4) * t63 + t360) * t229 - t367 * t157 + (-t61 - t249) * t177 + t409, t20 * t189 - t54 * t62 - t55 * t61 + t367 * t63 + (t307 * t55 + t308 * t54) * t382 + t245 * t216, t30, t11, t39, t258, t246, -t350, -t192 * t132 - t155 * t369 - t168 * t97 - t177 * t370 + t259, t193 * t132 + t157 * t369 - t168 * t96 + t177 * t371 + t261, t155 * t371 - t157 * t370 + t192 * t96 + t193 * t97 + t243, t1 * t192 + t10 * t168 + t2 * t193 + t29 * t370 + t369 * t45 + t371 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t109, t106, -t347, 0, 0, t139 * qJD(2) - t297 - t344, t138 * t322 + t239, 0, 0, t30, -t11, t38, t258, t246, -t350, -pkin(3) * t97 + t120 * t349 - t139 * t155 - t84 * t177 + t260 + t270, pkin(3) * t96 + t120 * t348 - t139 * t157 + t85 * t177 + t286 + t413, t85 * t155 + t84 * t157 - t90 + (-pkin(9) * t96 + t292) * t226 + (pkin(9) * t274 - t282) * qJD(4) + t321, -t88 * pkin(3) + pkin(9) * t244 - t120 * t139 - t68 * t84 - t69 * t85, t30, t38, t11, -t350, t35, t258, t155 * t365 + t66 * t177 - t319 * t97 + t349 * t63 + t260 + t271, -t55 * t326 + t64 * t155 - t66 * t157 - t90 + (qJD(4) * t274 - t374) * pkin(9) + t264, -t157 * t365 - t64 * t177 - t319 * t96 - t269 + t409 - t413, pkin(9) * t245 - t20 * t319 + t365 * t63 - t54 * t66 - t55 * t64, t30, t11, t39, t258, t246, -t350, -t201 * t132 - t155 * t368 - t177 * t364 - t190 * t97 + t259, t202 * t132 + t157 * t368 + t177 * t366 - t190 * t96 + t261, t155 * t366 - t157 * t364 + t201 * t96 + t202 * t97 + t243, t1 * t201 + t10 * t190 + t2 * t202 + t29 * t364 + t366 * t40 + t368 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, t395, -t255, -t353, -t234, t132, -t120 * t157 - t292 + t379, t120 * t155 + t251, 0, 0, t353, -t255, -t395, t132, t234, -t353, -t105 * t155 + t131 - t262 + t379, pkin(4) * t96 - t381 + (t55 - t69) * t157 + (t54 - t333) * t155, t105 * t157 - t155 * t63 - t251 + t402, -t14 * pkin(4) + t9 * qJ(5) - t105 * t63 + t333 * t55 - t54 * t69, t353, -t395, t255, -t353, -t234, t132, t72 * t155 + t47 * t177 + t403 + (pkin(5) + t388) * t132 - t263, t155 * t45 - t157 * t72 - t177 * t46 - t265 + t402 + t411, t381 - t388 * t96 + (-t40 + t47) * t157 + (-t29 + t334) * t155, t2 * qJ(5) - t1 * t388 - t29 * t47 + t334 * t40 - t45 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, -t255, t398, -t177 * t55 + t262, 0, 0, 0, 0, 0, 0, t236, t398, t255, -t40 * t177 + t247 - t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235 - t352, -t407, -t389 - t390, -t40 * t155 + t29 * t157 + t10;];
tauc_reg  = t3;
