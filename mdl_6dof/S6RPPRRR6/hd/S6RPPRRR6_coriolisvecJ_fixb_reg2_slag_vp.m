% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPPRRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:31:29
% EndTime: 2019-03-09 02:31:39
% DurationCPUTime: 3.66s
% Computational Cost: add. (4938->400), mult. (9742->554), div. (0->0), fcn. (5859->6), ass. (0->199)
t138 = sin(qJ(6));
t141 = cos(qJ(6));
t139 = sin(qJ(5));
t142 = cos(qJ(5));
t199 = t142 * qJD(4);
t143 = cos(qJ(4));
t210 = qJD(1) * t143;
t94 = t139 * t210 - t199;
t185 = t142 * t210;
t208 = qJD(4) * t139;
t96 = t185 + t208;
t162 = t138 * t94 - t141 * t96;
t41 = t138 * t96 + t141 * t94;
t251 = t41 * t162;
t140 = sin(qJ(4));
t211 = qJD(1) * t140;
t186 = t139 * t211;
t252 = -pkin(9) - pkin(8);
t187 = qJD(5) * t252;
t129 = qJD(1) * qJ(2) + qJD(3);
t117 = -pkin(7) * qJD(1) + t129;
t217 = t142 * t143;
t165 = pkin(4) * t143 + pkin(8) * t140;
t99 = t165 * qJD(1);
t47 = t117 * t217 + t139 * t99;
t269 = -pkin(9) * t186 + t139 * t187 - t47;
t219 = t140 * t142;
t157 = pkin(5) * t143 + pkin(9) * t219;
t220 = t139 * t143;
t46 = -t117 * t220 + t142 * t99;
t268 = qJD(1) * t157 - t142 * t187 + t46;
t136 = -pkin(7) + qJ(2);
t204 = qJD(5) * t140;
t92 = qJD(4) * t165 + qJD(3);
t267 = -t136 * t204 + t92;
t206 = qJD(4) * t143;
t266 = qJD(2) * t140 + t136 * t206;
t265 = t162 ^ 2 - t41 ^ 2;
t203 = qJD(5) * t142;
t205 = qJD(5) * t139;
t196 = qJD(1) * qJD(2);
t69 = t117 * t206 + t140 * t196;
t137 = pkin(1) + qJ(3);
t164 = pkin(4) * t140 - pkin(8) * t143;
t103 = t164 + t137;
t70 = qJD(1) * t103 - qJD(2);
t71 = t92 * qJD(1);
t102 = t140 * t117;
t84 = qJD(4) * pkin(8) + t102;
t14 = t139 * t71 + t142 * t69 + t70 * t203 - t205 * t84;
t195 = qJD(1) * qJD(4);
t175 = t140 * t195;
t202 = qJD(5) * t143;
t178 = t142 * t202;
t194 = qJD(4) * qJD(5);
t214 = qJD(1) * t178 + t139 * t194;
t153 = t139 * t175 - t214;
t11 = pkin(9) * t153 + t14;
t123 = qJD(5) + t211;
t36 = -t139 * t84 + t142 * t70;
t32 = -pkin(9) * t96 + t36;
t22 = pkin(5) * t123 + t32;
t37 = t139 * t70 + t142 * t84;
t33 = -pkin(9) * t94 + t37;
t238 = t141 * t33;
t6 = t138 * t22 + t238;
t124 = t143 * t195;
t15 = -qJD(5) * t37 - t139 * t69 + t142 * t71;
t179 = t139 * t202;
t182 = t140 * t199;
t152 = t179 + t182;
t57 = qJD(1) * t152 - t142 * t194;
t8 = pkin(5) * t124 + t57 * pkin(9) + t15;
t2 = -t6 * qJD(6) - t138 * t11 + t141 * t8;
t85 = -qJD(4) * pkin(4) - t117 * t143;
t50 = pkin(5) * t94 + t85;
t264 = t50 * t162 + t2;
t119 = qJD(6) + t123;
t200 = qJD(6) * t141;
t201 = qJD(6) * t138;
t12 = -t138 * t153 + t141 * t57 + t94 * t200 + t201 * t96;
t263 = t119 * t41 - t12;
t1 = t141 * (qJD(6) * t22 + t11) + t138 * t8 - t33 * t201;
t262 = t50 * t41 - t1;
t148 = qJD(6) * t162 + t138 * t57 + t141 * t153;
t261 = -t119 * t162 + t148;
t218 = t141 * t142;
t222 = t138 * t139;
t97 = -t218 + t222;
t74 = t97 * t140;
t98 = t138 * t142 + t139 * t141;
t72 = t98 * t140;
t260 = -t123 * t36 + t14;
t259 = -t37 * t123 - t15;
t229 = t94 * t123;
t258 = -t57 + t229;
t193 = qJD(5) + qJD(6);
t49 = t193 * t98;
t83 = t98 * qJD(1);
t243 = t140 * t83 + t49;
t257 = t243 * t119;
t134 = t140 ^ 2;
t135 = t143 ^ 2;
t256 = t134 - t135;
t255 = qJD(1) * t137;
t213 = t134 + t135;
t254 = qJD(2) * t213;
t244 = t138 * t186 - t141 * t203 - t142 * t200 + t193 * t222 - t211 * t218;
t253 = -t148 * t98 - t244 * t41;
t250 = t96 * t94;
t111 = t252 * t139;
t112 = t252 * t142;
t56 = t111 * t138 - t112 * t141;
t248 = qJD(6) * t56 + t269 * t138 + t268 * t141;
t55 = t111 * t141 + t112 * t138;
t247 = -qJD(6) * t55 + t268 * t138 - t269 * t141;
t75 = t97 * t143;
t246 = -qJD(4) * t75 - t193 * t72 - t83;
t245 = t97 * qJD(1) + t193 * t74 - t98 * t206;
t241 = t138 * t33;
t240 = t139 * t85;
t239 = t140 * t85;
t237 = t142 * t36;
t236 = t142 * t85;
t235 = t143 * t57;
t234 = t143 * t96;
t232 = t57 * t139;
t207 = qJD(4) * t140;
t68 = t117 * t207 - t143 * t196;
t231 = t68 * t139;
t230 = t68 * t142;
t60 = t139 * t103 + t136 * t219;
t228 = qJD(4) * t97;
t227 = qJD(4) * t98;
t226 = t123 * t139;
t225 = t123 * t140;
t224 = t123 * t142;
t145 = qJD(1) ^ 2;
t223 = t134 * t145;
t221 = t139 * t140;
t216 = t94 * qJD(5);
t215 = t96 * qJD(5);
t144 = qJD(4) ^ 2;
t212 = -t144 - t145;
t198 = t143 * qJD(2);
t118 = -qJD(2) + t255;
t197 = qJD(2) - t118;
t132 = 0.2e1 * t196;
t192 = 0.2e1 * qJD(3) * qJD(1);
t191 = t123 * t219;
t190 = t136 * t221;
t189 = t123 * t221;
t188 = t143 * t145 * t140;
t183 = t139 * t207;
t180 = t123 * t205;
t176 = t244 * t119;
t173 = qJD(1) * t60 + t37;
t172 = -t57 + t216;
t170 = t94 + t199;
t169 = t118 + t255;
t168 = t197 * qJD(1);
t167 = qJD(1) + t204;
t166 = -t102 + (t186 + t205) * pkin(5);
t163 = t123 * t203 + t139 * t124;
t89 = t142 * t103;
t39 = -pkin(9) * t217 + t89 + (-t136 * t139 + pkin(5)) * t140;
t45 = -pkin(9) * t220 + t60;
t20 = -t138 * t45 + t141 * t39;
t21 = t138 * t39 + t141 * t45;
t161 = -t139 * t37 - t237;
t160 = t139 * t36 - t142 * t37;
t159 = qJD(2) + t169;
t158 = -t136 * t144 + t192;
t156 = t267 * t142;
t155 = t97 * t12 + t162 * t243;
t151 = -t178 + t183;
t24 = t103 * t203 + t267 * t139 + t266 * t142;
t149 = t153 + t215;
t147 = qJD(5) * t160 - t14 * t139 - t15 * t142;
t146 = qJD(5) * t161 - t15 * t139 + t14 * t142;
t131 = t135 * t145;
t128 = -pkin(5) * t142 - pkin(4);
t114 = t140 * t124;
t91 = (pkin(5) * t139 - t136) * t143;
t73 = t98 * t143;
t59 = t89 - t190;
t51 = -pkin(5) * t151 + t207 * t136 - t198;
t34 = -pkin(5) * t153 + t68;
t29 = -t201 * t220 + (t193 * t217 - t183) * t141 - t152 * t138;
t27 = -t138 * t183 + t141 * t182 + t143 * t49;
t25 = (-qJD(5) * t103 - t266) * t139 + t156;
t19 = pkin(9) * t151 + t24;
t18 = t157 * qJD(4) + ((pkin(9) * t143 - t103) * qJD(5) - t266) * t139 + t156;
t10 = t141 * t32 - t241;
t9 = -t138 * t32 - t238;
t5 = t141 * t22 - t241;
t4 = -qJD(6) * t21 - t138 * t19 + t141 * t18;
t3 = qJD(6) * t20 + t138 * t18 + t141 * t19;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, qJ(2) * t132, 0, 0, 0, 0, 0, 0, 0, t132, t192, t129 * qJD(2) + t118 * qJD(3) + (qJ(2) * qJD(2) + qJD(3) * t137) * qJD(1), -0.2e1 * t114, 0.2e1 * t256 * t195, -t144 * t140, 0.2e1 * t114, -t144 * t143, 0, t140 * t158 + t159 * t206, t143 * t158 - t159 * t207, -t213 * t132, t169 * qJD(3) + (qJD(1) * t136 + t117) * t254, -t96 * t179 + (-t207 * t96 - t235) * t142 (t139 * t96 + t142 * t94) * t207 + (t153 * t142 + t232 + (t139 * t94 - t142 * t96) * qJD(5)) * t143, -t123 * t179 - t57 * t140 + (t234 + (qJD(1) * t135 - t225) * t142) * qJD(4), -t94 * t183 + (-t139 * t153 + t203 * t94) * t143, -t123 * t178 - t214 * t140 + (-t94 * t143 + (t256 * qJD(1) + t225) * t139) * qJD(4), t123 * t206 + t114, t25 * t123 + (t15 + (t136 * t94 - t240) * qJD(4)) * t140 + (-qJD(2) * t94 - t136 * t214 + t231 + t85 * t203 + (t36 + (t59 + t190) * qJD(1)) * qJD(4)) * t143, -t24 * t123 + (-t14 + (t136 * t96 - t236) * qJD(4)) * t140 + (-qJD(2) * t96 - qJD(4) * t173 + t136 * t57 - t205 * t85 + t230) * t143, -t24 * t94 - t60 * t214 - t25 * t96 + t59 * t57 + (t139 * t173 + t237) * t207 + t147 * t143, -t85 * t198 + t14 * t60 + t15 * t59 + t37 * t24 + t36 * t25 + (-t68 * t143 + t207 * t85) * t136, t12 * t75 + t162 * t27, t12 * t73 - t148 * t75 + t162 * t29 + t27 * t41, -t27 * t119 - t12 * t140 + (-qJD(1) * t75 - t162) * t206, -t148 * t73 + t29 * t41, -t29 * t119 + t148 * t140 + (-qJD(1) * t73 - t41) * t206, t119 * t206 + t114, t4 * t119 - t91 * t148 + t2 * t140 + t50 * t29 + t34 * t73 + t51 * t41 + (qJD(1) * t20 + t5) * t206, -t1 * t140 - t3 * t119 - t91 * t12 - t50 * t27 - t34 * t75 - t51 * t162 + (-qJD(1) * t21 - t6) * t206, -t1 * t73 + t12 * t20 + t148 * t21 + t162 * t4 + t2 * t75 + t27 * t5 - t29 * t6 - t3 * t41, t1 * t21 + t2 * t20 + t3 * t6 + t34 * t91 + t4 * t5 + t50 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t145 * qJ(2), 0, 0, 0, 0, 0, 0, 0, -t145, 0 (-qJD(3) - t129) * qJD(1), 0, 0, 0, 0, 0, 0, -0.2e1 * t124, 0.2e1 * t175, t131 + t223 (-t117 * t213 - qJD(3)) * qJD(1), 0, 0, 0, 0, 0, 0, t180 + (t189 + (t94 - t199) * t143) * qJD(1) (t191 + t234) * qJD(1) + t163, t258 * t142 + (-t215 + (-t96 - t208) * t211 + t214) * t139 (t140 * t160 + t143 * t85) * qJD(1) + t147, 0, 0, 0, 0, 0, 0, t257 + (t41 + t228) * t210, -t176 + (-t162 + t227) * t210, t155 + t253, -t1 * t98 + t2 * t97 + t210 * t50 + t243 * t5 + t244 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, t168, 0, 0, 0, 0, 0, 0, t212 * t140, t212 * t143, 0 (-t118 + t254) * qJD(1), 0, 0, 0, 0, 0, 0, -t143 * t214 - t167 * t224 + (-t123 * t220 + t140 * t94) * qJD(4), t235 + t167 * t226 + (-t123 * t217 + (t96 - t185) * t140) * qJD(4) (qJD(1) * t94 + t140 * t172 + t206 * t96) * t139 + (qJD(1) * t96 + t140 * t149 - t206 * t94) * t142, t161 * qJD(1) + (-qJD(4) * t160 - t68) * t143 + (qJD(4) * t85 + t146) * t140, 0, 0, 0, 0, 0, 0, t143 * t148 + t245 * t119 + (t140 * t41 - t210 * t72) * qJD(4), t143 * t12 - t246 * t119 + (-t140 * t162 + t210 * t74) * qJD(4), -t72 * t12 - t148 * t74 + t162 * t245 - t246 * t41, -t1 * t74 - t34 * t143 - t2 * t72 + t207 * t50 + t245 * t5 + t246 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t131 - t223, 0, -t188, 0, 0, t143 * t168, -t197 * t211, 0, 0, t224 * t96 - t232 (-t57 - t229) * t142 + (-t215 + (-t96 + t208) * t211 - t214) * t139 (t191 - t234) * qJD(1) + t163, -t214 * t142 + (t170 * t211 + t216) * t139, -t180 + (t143 * t170 - t189) * qJD(1), -t123 * t210, -pkin(4) * t214 - t230 - t46 * t123 - t94 * t102 + (-pkin(8) * t224 + t240) * qJD(5) + (-t36 * t143 + (qJD(4) * t164 + t239) * t139) * qJD(1), -t96 * t102 + pkin(4) * t57 + t47 * t123 + t231 + (pkin(8) * t226 + t236) * qJD(5) + (t143 * t37 + (-pkin(8) * t206 + t239) * t142) * qJD(1), t46 * t96 + t47 * t94 + (pkin(8) * t172 + t259) * t139 + (pkin(8) * t149 + t260) * t142, -t68 * pkin(4) + pkin(8) * t146 - t102 * t85 - t36 * t46 - t37 * t47, -t12 * t98 + t162 * t244, t155 - t253, -t176 + (t162 + t227) * t210, -t148 * t97 + t243 * t41, -t257 + (t41 - t228) * t210, -t119 * t210, -t128 * t148 + t34 * t97 + t243 * t50 + t166 * t41 - t248 * t119 + (qJD(4) * t55 - t5) * t210, -t128 * t12 + t34 * t98 - t244 * t50 - t166 * t162 + t247 * t119 + (-qJD(4) * t56 + t6) * t210, -t1 * t97 + t55 * t12 + t148 * t56 - t162 * t248 - t2 * t98 - t243 * t6 + t244 * t5 + t247 * t41, t1 * t56 + t34 * t128 + t166 * t50 + t2 * t55 - t247 * t6 - t248 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, -t94 ^ 2 + t96 ^ 2, t258, -t250, t123 * t96 + t153, t124, -t85 * t96 - t259, t85 * t94 - t260, 0, 0, -t251, t265, t263, t251, t261, t124, -t9 * t119 + (-t119 * t201 + t124 * t141 - t41 * t96) * pkin(5) + t264, t10 * t119 + (-t119 * t200 - t124 * t138 + t162 * t96) * pkin(5) + t262, t10 * t41 - t6 * t162 - t5 * t41 - t9 * t162 + (t12 * t141 + t148 * t138 + (-t138 * t162 - t141 * t41) * qJD(6)) * pkin(5), -t6 * t10 - t5 * t9 + (t1 * t138 + t141 * t2 - t50 * t96 + (-t138 * t5 + t141 * t6) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, t265, t263, t251, t261, t124, t6 * t119 + t264, t5 * t119 + t262, 0, 0;];
tauc_reg  = t7;
