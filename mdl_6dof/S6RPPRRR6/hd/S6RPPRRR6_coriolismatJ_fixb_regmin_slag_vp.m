% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:31:32
% EndTime: 2019-03-09 02:31:44
% DurationCPUTime: 5.28s
% Computational Cost: add. (2814->393), mult. (6229->524), div. (0->0), fcn. (6133->6), ass. (0->324)
t347 = qJD(5) + qJD(6);
t266 = sin(qJ(5));
t268 = cos(qJ(6));
t389 = t268 * t266;
t265 = sin(qJ(6));
t269 = cos(qJ(5));
t397 = t265 * t269;
t285 = -t397 / 0.2e1 - t389 / 0.2e1;
t251 = t268 * t269;
t398 = t265 * t266;
t190 = -t251 + t398;
t176 = t190 * qJD(6);
t267 = sin(qJ(4));
t319 = -t251 / 0.2e1;
t396 = t266 * t267;
t217 = t265 * t396;
t439 = t217 / 0.2e1;
t441 = t190 / 0.2e1;
t276 = t439 + (t319 + t441) * t267;
t445 = t276 * qJD(1);
t458 = -t190 * qJD(5) - t176 - t445;
t443 = pkin(8) + pkin(9);
t212 = t443 * t266;
t214 = t443 * t269;
t142 = -t265 * t212 + t268 * t214;
t457 = t347 * t142;
t297 = -t268 * t212 - t265 * t214;
t456 = t347 * t297;
t455 = 0.2e1 * t266;
t454 = t267 * t347;
t436 = -t267 / 0.2e1;
t275 = t190 * t436 + t267 * t319 + t439;
t453 = t275 * t347;
t452 = t276 * t347;
t195 = t389 + t397;
t314 = t347 * t195;
t260 = t267 ^ 2;
t270 = cos(qJ(4));
t262 = t270 ^ 2;
t369 = t260 + t262;
t193 = t369 * t266;
t263 = -pkin(7) + qJ(2);
t433 = pkin(5) * t266;
t317 = -t263 + t433;
t301 = t317 * t270;
t294 = -t301 / 0.2e1;
t432 = pkin(5) * t269;
t252 = -pkin(4) - t432;
t385 = t270 * t195;
t405 = t252 * t385;
t451 = t190 * t294 - t405 / 0.2e1;
t293 = t301 / 0.2e1;
t388 = t269 * t270;
t218 = t268 * t388;
t395 = t266 * t270;
t159 = t265 * t395 - t218;
t406 = t252 * t159;
t450 = t195 * t293 - t406 / 0.2e1;
t430 = t270 * pkin(4);
t431 = t267 * pkin(8);
t213 = t430 + t431;
t198 = t266 * t213;
t216 = t263 * t388;
t134 = pkin(9) * t396 + t198 + t216;
t390 = t268 * t134;
t321 = -t390 / 0.2e1;
t199 = t269 * t213;
t403 = t263 * t266;
t318 = pkin(5) - t403;
t394 = t267 * t269;
t118 = pkin(9) * t394 + t270 * t318 + t199;
t402 = t265 * t118;
t287 = -t402 / 0.2e1 + t321;
t273 = t405 / 0.2e1 + t287;
t412 = t297 * t267;
t10 = t412 / 0.2e1 + t190 * t293 + t273;
t362 = qJD(4) * t252;
t323 = t398 / 0.2e1;
t438 = -t218 / 0.2e1;
t95 = t438 + (t323 - t190 / 0.2e1) * t270;
t375 = t95 * qJD(3);
t449 = qJD(1) * t10 + t190 * t362 + t375;
t440 = t195 / 0.2e1;
t98 = (t440 + t285) * t270;
t374 = t98 * qJD(3);
t399 = t265 * t134;
t324 = -t399 / 0.2e1;
t393 = t268 * t118;
t286 = t324 + t393 / 0.2e1;
t274 = t406 / 0.2e1 + t286;
t411 = t142 * t267;
t327 = t411 / 0.2e1;
t9 = t195 * t294 + t274 + t327;
t448 = qJD(1) * t9 - t195 * t362 + t374;
t345 = t433 / 0.2e1;
t271 = -t345 * t385 + t327;
t344 = -t432 / 0.2e1;
t4 = (t268 * pkin(5) / 0.2e1 + t190 * t344 - t317 * t195 / 0.2e1) * t270 + t271 + t274;
t407 = t195 * t252;
t93 = t190 * t433 + t407;
t447 = t4 * qJD(1) - t93 * qJD(4) + t374;
t435 = t267 / 0.2e1;
t272 = t159 * t345 + t297 * t435;
t3 = (-t265 * pkin(5) / 0.2e1 + t195 * t344 + t317 * t441) * t270 + t272 + t273;
t94 = -t190 * t252 + t195 * t433;
t446 = t3 * qJD(1) - t94 * qJD(4) + t375;
t259 = t266 ^ 2;
t261 = t269 ^ 2;
t228 = t261 - t259;
t315 = t388 * t455;
t277 = qJD(1) * t315 - t228 * qJD(4);
t264 = pkin(1) + qJ(3);
t306 = t267 * pkin(4) - pkin(8) * t270;
t201 = t306 + t264;
t178 = t269 * t201;
t346 = pkin(9) * t388;
t113 = t267 * t318 + t178 - t346;
t74 = t268 * t113;
t444 = -t74 / 0.2e1;
t442 = -t113 / 0.2e1;
t434 = t270 / 0.2e1;
t33 = t195 * t159 + t190 * t385;
t429 = t347 * t33;
t49 = t159 * t441 - t385 * t440;
t428 = t347 * t49;
t387 = t270 * t159;
t163 = t251 * t267 - t217;
t408 = t163 * t267;
t288 = -t408 / 0.2e1 + t387 / 0.2e1;
t303 = t251 / 0.2e1 - t398 / 0.2e1;
t56 = -t288 + t303;
t160 = t195 * t267;
t326 = -t160 / 0.2e1;
t371 = t285 * t267;
t97 = t326 + t371;
t427 = t97 * qJD(2) + t56 * qJD(3);
t386 = t270 * t385;
t409 = t160 * t267;
t289 = t409 / 0.2e1 + t386 / 0.2e1;
t57 = t285 - t289;
t426 = qJD(2) * t276 + t57 * qJD(3);
t58 = t285 + t289;
t425 = qJD(2) * t275 + t58 * qJD(3);
t325 = t160 / 0.2e1;
t105 = t325 + t371;
t59 = t288 + t303;
t424 = t105 * qJD(2) + t59 * qJD(3);
t423 = pkin(5) * qJD(5);
t422 = pkin(5) * qJD(6);
t186 = t317 * t267;
t341 = t263 * t394;
t145 = t201 * t266 + t341;
t127 = -pkin(9) * t395 + t145;
t400 = t265 * t127;
t37 = -t74 + t400;
t1 = (t393 - t399) * t267 - t186 * t385 + (-t160 * t317 - t37) * t270;
t421 = t1 * qJD(1);
t391 = t268 * t127;
t38 = t265 * t113 + t391;
t2 = (t390 + t402) * t267 + t38 * t270 - t186 * t159 + t163 * t301;
t420 = t2 * qJD(1);
t144 = t263 * t396 - t178;
t126 = -t144 - t346;
t401 = t265 * t126;
t39 = -t391 - t401;
t21 = t39 * t267 + (-t159 * t317 + t385 * t432) * t270;
t419 = qJD(1) * t21;
t124 = t385 * t301;
t392 = t268 * t126;
t40 = t392 - t400;
t22 = t267 * t40 + t387 * t432 + t124;
t418 = qJD(1) * t22;
t23 = -t267 * t37 + t124;
t417 = qJD(1) * t23;
t24 = -t159 * t301 - t38 * t267;
t416 = qJD(1) * t24;
t91 = -t144 * t267 - t262 * t403;
t415 = qJD(1) * t91;
t404 = t262 * t269;
t92 = -t145 * t267 - t263 * t404;
t414 = qJD(1) * t92;
t343 = pkin(5) * t436;
t309 = t343 + t126 / 0.2e1;
t13 = (t442 + t309) * t265;
t413 = t13 * qJD(1);
t15 = t309 * t268 + t444;
t410 = t15 * qJD(1);
t36 = -t159 * t160 + t163 * t385;
t384 = t36 * qJD(1);
t340 = t263 * t395;
t47 = -t144 * t270 + (t199 + t340) * t267;
t383 = t47 * qJD(1);
t48 = t145 * t270 + (-t216 + t198) * t267;
t382 = t48 * qJD(1);
t381 = t56 * qJD(1);
t380 = t57 * qJD(1);
t65 = -t386 + t409;
t379 = t65 * qJD(1);
t66 = -t386 - t409;
t378 = t66 * qJD(1);
t67 = -t387 + t408;
t377 = t67 * qJD(1);
t68 = -t387 - t408;
t376 = t68 * qJD(1);
t372 = t265 * t394 / 0.2e1 + t389 * t435;
t96 = t325 + t372;
t76 = t96 * qJD(1);
t78 = t97 * qJD(1);
t349 = t270 * qJD(4);
t241 = t266 * t349;
t359 = qJD(5) * t269;
t245 = t267 * t359;
t370 = -t241 - t245;
t227 = t260 - t262;
t368 = qJD(1) * t159;
t197 = t227 * t269;
t367 = qJD(1) * t197;
t366 = qJD(2) * t267;
t365 = qJD(2) * t270;
t364 = qJD(3) * t267;
t363 = qJD(4) * t195;
t361 = qJD(4) * t269;
t360 = qJD(5) * t266;
t169 = -t385 / 0.2e1;
t114 = 0.2e1 * t169;
t358 = t114 * qJD(1);
t310 = 0.1e1 / 0.2e1 + t260 / 0.2e1 + t262 / 0.2e1;
t164 = t310 * t266;
t357 = t164 * qJD(1);
t165 = t310 * t269;
t356 = t165 * qJD(1);
t355 = t193 * qJD(1);
t194 = t227 * t266;
t354 = t194 * qJD(1);
t196 = t369 * t269;
t353 = t196 * qJD(1);
t352 = t227 * qJD(1);
t351 = t264 * qJD(1);
t253 = t267 * qJD(1);
t350 = t267 * qJD(4);
t254 = t270 * qJD(1);
t348 = t270 * qJD(5);
t342 = pkin(5) * t434;
t339 = t266 * t361;
t338 = t269 * t349;
t337 = t266 * t348;
t336 = t269 * t348;
t335 = t190 * t349;
t334 = t190 * t253;
t333 = t195 * t253;
t332 = t266 * t359;
t331 = t266 * t254;
t330 = t269 * t254;
t243 = t267 * t349;
t329 = t190 * t254;
t328 = t267 * t254;
t316 = pkin(5) * t347;
t313 = t269 * t342;
t312 = -qJD(2) + t351;
t311 = -qJD(5) - t253;
t308 = t253 + qJD(5) / 0.2e1;
t307 = t342 + t118 / 0.2e1;
t305 = qJD(4) * t315;
t244 = t267 * t360;
t302 = t244 - t338;
t298 = qJD(6) - t311;
t60 = -t159 ^ 2 + t385 ^ 2;
t7 = qJD(1) * t60 + qJD(4) * t33;
t69 = t190 ^ 2 - t195 ^ 2;
t17 = qJD(1) * t33 + qJD(4) * t69;
t296 = t311 * t270;
t295 = t431 / 0.2e1 + t430 / 0.2e1;
t280 = t295 * t266;
t132 = t198 / 0.2e1 + t280;
t292 = pkin(4) * t361 - qJD(1) * t132;
t281 = t295 * t269;
t133 = -t199 / 0.2e1 - t281;
t291 = pkin(4) * qJD(4) * t266 - qJD(1) * t133;
t26 = -qJD(4) * t49 - t368 * t385;
t35 = -qJD(1) * t49 + t190 * t363;
t283 = t269 * t296;
t179 = (t259 / 0.2e1 - t261 / 0.2e1) * t270;
t282 = -qJD(1) * t179 + t339;
t279 = qJD(1) * t266 * t404 + qJD(4) * t179;
t192 = t228 * t262;
t278 = t192 * qJD(1) + t305;
t258 = qJ(2) * qJD(1);
t257 = qJ(2) * qJD(2);
t250 = -t254 / 0.2e1;
t249 = t254 / 0.2e1;
t248 = t349 / 0.2e1;
t242 = t269 * t253;
t240 = t266 * t350;
t239 = t266 * t253;
t189 = t242 + t359;
t188 = t239 + t360;
t187 = t308 * t270;
t175 = t179 * qJD(5);
t167 = -t404 / 0.2e1 + (-t260 / 0.2e1 + 0.1e1 / 0.2e1) * t269;
t166 = -t266 / 0.2e1 + t193 / 0.2e1;
t158 = (qJD(6) / 0.2e1 + t308) * t270;
t115 = t385 / 0.2e1 + t169;
t106 = t326 + t372;
t102 = t270 * t285 + t169;
t101 = t190 * t434 + t270 * t323 + t438;
t88 = -t340 + t199 / 0.2e1 - t281;
t87 = -t216 - t198 / 0.2e1 + t280;
t51 = qJD(4) * t276 + t253 * t385;
t50 = qJD(4) * t96 - t159 * t253;
t44 = -t314 - t76;
t43 = -t78 + t314;
t30 = qJD(4) * t95 + t380;
t29 = qJD(4) * t98 + t381;
t28 = qJD(4) * t275 - t298 * t385;
t27 = t106 * qJD(4) + t159 * t298;
t20 = t102 * qJD(4) - t163 * t347 - t381;
t19 = t101 * qJD(4) + t160 * t347 - t380;
t16 = t268 * t343 + t400 + t444 - t392 / 0.2e1;
t14 = -t391 - t401 / 0.2e1 + (t343 + t442) * t265;
t12 = -t411 / 0.2e1 + t286 + t450;
t11 = -t412 / 0.2e1 + t287 + t451;
t6 = t195 * t313 - t265 * t307 - t272 + t321 + t451;
t5 = t190 * t313 + t268 * t307 - t271 + t324 + t450;
t8 = [0, 0, 0, 0, qJD(2), t257, qJD(2), qJD(3), qJD(3) * t264 + t257, -t243, t227 * qJD(4), 0, 0, 0, t264 * t349 + t364, qJD(3) * t270 - t264 * t350, -t243 * t261 - t262 * t332, -t192 * qJD(5) + t267 * t305, -t197 * qJD(4) - t267 * t337, t194 * qJD(4) - t267 * t336, t243, -qJD(2) * t193 + qJD(4) * t47 + qJD(5) * t92 + t269 * t364, -qJD(2) * t196 - qJD(4) * t48 - qJD(5) * t91 - t266 * t364 (qJD(4) * t163 + t347 * t385) * t159, t36 * qJD(4) + t347 * t60, t68 * qJD(4) - t385 * t454, t65 * qJD(4) + t159 * t454, t243, qJD(2) * t66 + qJD(4) * t1 + qJD(5) * t21 + qJD(6) * t24 - t190 * t364, -qJD(2) * t67 - qJD(4) * t2 - qJD(5) * t22 - qJD(6) * t23 - t195 * t364; 0, 0, 0, 0, qJD(1), t258, qJD(1), 0, t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, -t353, 0, 0, 0, 0, 0, t105 * t347 + t378, t115 * qJD(4) - t377 + t453; 0, 0, 0, 0, 0, 0, 0, qJD(1), t351, 0, 0, 0, 0, 0, t253, t254, 0, 0, 0, 0, 0, qJD(5) * t167 + t242, qJD(5) * t166 - t239, 0, 0, 0, 0, 0, t347 * t59 - t334, t347 * t58 - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, t352, -t350, -t349, 0, t254 * t264 - t263 * t350, -t253 * t264 - t263 * t349, -t175 + (-t254 * t261 - t339) * t267, t267 * t277 - 0.2e1 * t270 * t332, t241 - t367, t338 + t354, t187, t383 + (t266 * t306 - t341) * qJD(4) + t88 * qJD(5), -t382 + (-pkin(8) * t388 + (pkin(4) * t269 + t403) * t267) * qJD(4) + t87 * qJD(5) (-t363 + t368) * t163 + t428, t384 + (t160 * t195 + t163 * t190) * qJD(4) + t429, t195 * t349 + t376 + t453, t106 * t347 - t335 + t379, t158, t421 + (-t252 * t160 - t186 * t190 + t270 * t297) * qJD(4) + t5 * qJD(5) + t12 * qJD(6), -t420 + t115 * qJD(2) + (-t142 * t270 - t252 * t163 - t186 * t195) * qJD(4) + t6 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, -t278, t266 * t296, t283, t248, qJD(3) * t167 + qJD(4) * t88 - qJD(5) * t145 + t414, qJD(3) * t166 + qJD(4) * t87 + qJD(5) * t144 - t415, -t26, t7, t28, t27, t248, qJD(4) * t5 + qJD(5) * t39 + qJD(6) * t14 + t419 + t424, qJD(4) * t6 - qJD(5) * t40 + qJD(6) * t16 - t418 + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, t7, t28, t27, t248, qJD(4) * t12 + qJD(5) * t14 - qJD(6) * t38 + t416 + t424, qJD(4) * t11 + qJD(5) * t16 + qJD(6) * t37 - t417 + t425; 0, 0, 0, 0, -qJD(1), -t258, -qJD(1), 0, -qJD(3) - t258, 0, 0, 0, 0, 0, -t349, t350, 0, 0, 0, 0, 0, t302 + t355, t353 - t370, 0, 0, 0, 0, 0, -t347 * t97 + t335 - t378, -t114 * qJD(4) + t377 - t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t253, 0, 0, 0, 0, 0, -t330, t331, 0, 0, 0, 0, 0, t329, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t189, 0, 0, 0, 0, 0, t43, t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t458; 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t312, 0, 0, 0, 0, 0, -t253, -t254, 0, 0, 0, 0, 0, -qJD(5) * t165 - t242, qJD(5) * t164 + t239, 0, 0, 0, 0, 0, -t347 * t56 + t334, -t347 * t57 + t333; 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350, -t349, 0, 0, 0, 0, 0, -t269 * t350 - t337, t240 - t336, 0, 0, 0, 0, 0, t102 * t347 + t190 * t350, t101 * t347 + t195 * t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356 + t370, t302 + t357, 0, 0, 0, 0, 0, t20, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, -t352, 0, 0, 0, -t312 * t270, t312 * t267, t261 * t328 - t175, t283 * t455, t245 + t367, -t244 - t354, -t187, t133 * qJD(5) + t269 * t365 - t383, t132 * qJD(5) - t266 * t365 + t382, -t163 * t368 + t428, -t384 + t429, -t376 - t452, -t347 * t96 - t379, -t158, -t4 * qJD(5) - t9 * qJD(6) - t190 * t365 - t421, qJD(2) * t114 - qJD(5) * t3 - qJD(6) * t10 + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t253, 0, 0, 0, 0, 0, t330, -t331, 0, 0, 0, 0, 0, -t329, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347 * t98, -t347 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, t228 * qJD(5), 0, 0, 0, -pkin(4) * t360, -pkin(4) * t359, -t190 * t314, t347 * t69, 0, 0, 0, qJD(5) * t93 + qJD(6) * t407, qJD(5) * t94 - t176 * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, -t277, t189, -t188, t250, -pkin(8) * t359 - t291, pkin(8) * t360 - t292, -t35, t17, t458, t44, t250, -t447 - t457, -t446 - t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t17, t458, t44, t250, -t448 - t457, -t449 - t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, t278 (t331 - t361) * t267, t269 * t328 + t240, t248, qJD(3) * t165 - qJD(4) * t133 - t266 * t366 - t414, -qJD(3) * t164 - qJD(4) * t132 - t269 * t366 + t415, t26, -t7, t51, t50, t248, qJD(4) * t4 + qJD(6) * t13 - t419 + t427, qJD(4) * t3 + qJD(6) * t15 + t418 + t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t242, 0, 0, 0, 0, 0, t78, t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, -t357, 0, 0, 0, 0, 0, t29, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t282, t277, -t242, t239, t249, t291, t292, t35, -t17, t445, t76, t249, t447, t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265 * t422, -t268 * t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265 * t316 + t413, -t268 * t316 + t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, -t7, t51, t50, t248, qJD(4) * t9 - qJD(5) * t13 - t416 + t427, qJD(4) * t10 - qJD(5) * t15 + t417 + t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, -t17, t445, t76, t249, t448, t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265 * t423 - t413, t268 * t423 - t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
