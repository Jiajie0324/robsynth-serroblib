% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:31:36
% EndTime: 2019-03-09 02:31:55
% DurationCPUTime: 15.86s
% Computational Cost: add. (11543->632), mult. (21945->826), div. (0->0), fcn. (21878->6), ass. (0->472)
t555 = sin(qJ(4));
t849 = -t555 / 0.2e1;
t556 = cos(qJ(5));
t866 = -pkin(9) - pkin(8);
t481 = t866 * t556;
t553 = sin(qJ(6));
t554 = sin(qJ(5));
t845 = cos(qJ(6));
t661 = t845 * t554;
t630 = -t481 * t553 - t661 * t866;
t863 = t630 / 0.2e1;
t681 = qJD(5) + qJD(6);
t761 = t553 * t554;
t377 = -t481 * t845 + t761 * t866;
t557 = cos(qJ(4));
t756 = t554 * t557;
t486 = t553 * t756;
t528 = t845 * t556;
t421 = t528 * t557 - t486;
t551 = -pkin(7) + qJ(2);
t844 = pkin(5) * t554;
t632 = -t551 + t844;
t448 = t632 * t557;
t531 = -pkin(5) * t556 - pkin(4);
t760 = t553 * t556;
t460 = t661 + t760;
t858 = -t460 / 0.2e1;
t896 = t531 * t421 / 0.2e1 - t448 * t858 + t377 * t849;
t751 = t557 * t460;
t427 = -t751 / 0.2e1;
t453 = -t528 + t761;
t860 = -t453 / 0.2e1;
t892 = t427 * t531 + t448 * t860 + t555 * t863;
t772 = t460 * t751;
t781 = t421 * t453;
t188 = -t772 / 0.2e1 - t781 / 0.2e1;
t895 = t681 * t188;
t552 = pkin(1) + qJ(3);
t603 = t557 * t866 + t552;
t758 = t554 * t551;
t633 = pkin(5) - t758;
t838 = t556 * pkin(4);
t560 = t603 * t556 + (t633 + t838) * t555;
t255 = t845 * t560;
t841 = t555 * pkin(4);
t614 = -t557 * pkin(8) + t841;
t586 = t614 + t552;
t755 = t555 * t556;
t670 = t551 * t755;
t382 = t554 * t586 + t670;
t340 = -pkin(9) * t756 + t382;
t763 = t553 * t340;
t166 = -t255 + t763;
t757 = t554 * t555;
t672 = t551 * t757;
t339 = -t672 + (t603 + t841) * t556;
t667 = t845 * t339;
t172 = t667 - t763;
t894 = t166 + t172;
t559 = t553 * t560;
t666 = t845 * t340;
t167 = t666 + t559;
t764 = t553 * t339;
t170 = -t666 - t764;
t893 = t167 + t170;
t837 = t557 * pkin(4);
t839 = t555 * pkin(8);
t480 = t837 + t839;
t463 = t554 * t480;
t754 = t556 * t557;
t484 = t551 * t754;
t403 = t484 + t463;
t353 = pkin(9) * t757 + t403;
t665 = t845 * t353;
t620 = -t665 / 0.2e1;
t465 = t556 * t480;
t310 = pkin(9) * t755 + t557 * t633 + t465;
t765 = t553 * t310;
t578 = -t765 / 0.2e1 + t620;
t56 = t578 - t892;
t668 = t845 * t310;
t762 = t553 * t353;
t577 = -t762 / 0.2e1 + t668 / 0.2e1;
t58 = t577 + t896;
t55 = t577 - t896;
t891 = 0.2e1 * t554;
t864 = -t377 / 0.2e1;
t859 = t453 / 0.2e1;
t879 = t681 * t460;
t889 = t453 * t879;
t576 = -t760 / 0.2e1 - t661 / 0.2e1;
t437 = t453 * qJD(6);
t485 = t553 * t757;
t856 = t485 / 0.2e1;
t618 = -t528 / 0.2e1;
t875 = t618 + t859;
t566 = t555 * t875 + t856;
t872 = t566 * qJD(1);
t887 = -qJD(5) * t453 - t437 - t872;
t713 = qJD(4) * t460;
t886 = -qJD(1) * t188 + t453 * t713;
t720 = qJD(1) * t421;
t885 = qJD(4) * t188 - t720 * t751;
t855 = t486 / 0.2e1;
t291 = t855 + (t618 + t860) * t557;
t699 = t291 * qJD(3);
t884 = t630 * t681 - t699;
t883 = t681 * t377;
t631 = t754 * t891;
t882 = t166 / 0.2e1;
t865 = t167 / 0.2e1;
t548 = t555 ^ 2;
t550 = t557 ^ 2;
t499 = t548 + t550;
t458 = t499 * t554;
t565 = t453 * t849 + t555 * t618 + t856;
t881 = t565 * t681;
t880 = t566 * t681;
t539 = t550 / 0.2e1;
t853 = t548 / 0.2e1;
t678 = t853 + 0.1e1 / 0.2e1;
t877 = t539 + t678;
t547 = t554 ^ 2;
t549 = t556 ^ 2;
t876 = t547 + t549;
t857 = t460 / 0.2e1;
t288 = (t857 + t576) * t557;
t700 = t288 * qJD(3);
t712 = qJD(4) * t531;
t874 = qJD(1) * t55 - t460 * t712 + t700;
t770 = t460 * t531;
t284 = t453 * t844 + t770;
t679 = t845 / 0.2e1;
t759 = t554 * t751;
t847 = -t556 / 0.2e1;
t36 = (-t759 / 0.2e1 + (t453 * t847 + t679) * t557) * pkin(5) + t55;
t873 = qJD(1) * t36 - qJD(4) * t284 + t700;
t685 = t552 * qJD(1);
t871 = -t685 + qJD(2);
t868 = t453 ^ 2;
t867 = t460 ^ 2;
t862 = -t630 / 0.2e1;
t417 = t460 * t555;
t647 = -t417 / 0.2e1;
t646 = t417 / 0.2e1;
t420 = t528 * t555 - t485;
t861 = t420 / 0.2e1;
t854 = t547 / 0.2e1;
t852 = t553 / 0.2e1;
t851 = -t554 / 0.2e1;
t848 = t555 / 0.2e1;
t846 = -t557 / 0.2e1;
t843 = pkin(5) * t557;
t842 = t553 * pkin(5);
t840 = t555 * pkin(5);
t637 = t377 / 0.2e1 + t864;
t638 = t862 + t863;
t48 = t453 * t637 - t460 * t638;
t836 = t48 * qJD(5);
t830 = pkin(5) * qJD(5);
t662 = t845 * t453;
t769 = t460 * t553;
t579 = t769 / 0.2e1 - t662 / 0.2e1;
t639 = t172 / 0.2e1 + t882;
t640 = t865 + t170 / 0.2e1;
t766 = t550 * t556;
t9 = -t639 * t420 + t640 * t417 + (t766 / 0.2e1 + t579) * pkin(5);
t827 = t9 * qJD(1);
t669 = t551 * t756;
t402 = t465 - t669;
t530 = t557 * t555;
t791 = t382 * t557;
t573 = t556 * t586;
t381 = -t573 + t672;
t792 = t381 * t557;
t94 = -t551 * t530 + (t403 * t848 + t791 / 0.2e1) * t556 + (t402 * t849 + t792 / 0.2e1) * t554;
t820 = t94 * qJD(4);
t642 = t754 / 0.2e1;
t643 = t757 / 0.2e1;
t59 = (-t840 + t551 * t643 - t573 / 0.2e1 + pkin(9) * t642 + t339 / 0.2e1) * t553;
t818 = qJD(1) * t59;
t680 = pkin(5) * t754;
t778 = t448 * t421;
t86 = t170 * t555 + t680 * t751 + t778;
t817 = qJD(1) * t86;
t331 = t448 * t751;
t87 = t172 * t555 - t421 * t680 + t331;
t816 = qJD(1) * t87;
t773 = t460 * t417;
t774 = t453 * t420;
t89 = t773 - t774;
t815 = qJD(1) * t89;
t97 = -t166 * t555 + t331;
t814 = qJD(1) * t97;
t98 = -t167 * t555 + t778;
t813 = qJD(1) * t98;
t811 = t166 * t420;
t810 = t166 * t453;
t808 = t167 * t417;
t806 = t167 * t460;
t18 = -t421 * t893 - t751 * t894;
t805 = t18 * qJD(1);
t171 = t668 - t762;
t173 = t665 + t765;
t19 = -t171 * t421 - t173 * t751 + t808 - t811;
t804 = t19 * qJD(1);
t447 = t632 * t555;
t22 = -t166 * t171 + t167 * t173 - t447 * t448;
t803 = t22 * qJD(1);
t23 = -t166 * t170 + t167 * t172 + t448 * t680;
t802 = t23 * qJD(1);
t33 = -t166 * t557 + t171 * t555 - t417 * t448 - t447 * t751;
t801 = t33 * qJD(1);
t34 = t167 * t557 + t173 * t555 + t420 * t448 + t421 * t447;
t800 = t34 * qJD(1);
t798 = t630 * t751;
t797 = t630 * t420;
t794 = t377 * t417;
t790 = t402 * t556;
t789 = t403 * t554;
t41 = t166 * t417 + t167 * t420 - t448 * t557;
t788 = t41 * qJD(1);
t787 = t417 * t421;
t786 = t417 * t553;
t785 = t417 * t555;
t784 = t751 * t420;
t783 = t420 * t555;
t780 = t421 * t553;
t44 = t806 + t810;
t779 = t44 * qJD(1);
t775 = t453 * t751;
t771 = t460 * t421;
t753 = t557 * t751;
t752 = t557 * t421;
t674 = -t840 / 0.2e1;
t584 = -t255 / 0.2e1 + t845 * t674;
t61 = t667 / 0.2e1 + t584;
t750 = t61 * qJD(1);
t95 = t381 * t755 - t382 * t757 + (t789 + t790) * t557;
t747 = t95 * qJD(1);
t122 = -t771 + t775;
t746 = t681 * t122;
t590 = -t783 / 0.2e1 - t752 / 0.2e1;
t612 = t528 / 0.2e1 - t761 / 0.2e1;
t205 = -t590 + t612;
t733 = t576 * t555;
t287 = t647 + t733;
t740 = qJD(2) * t287 + qJD(3) * t205;
t591 = t785 / 0.2e1 + t753 / 0.2e1;
t206 = t576 - t591;
t739 = qJD(2) * t566 + qJD(3) * t206;
t207 = t576 + t591;
t738 = qJD(2) * t565 + qJD(3) * t207;
t208 = t590 + t612;
t296 = t646 + t733;
t737 = qJD(2) * t296 + qJD(3) * t208;
t734 = t643 * t845 + t755 * t852;
t683 = t557 * qJD(4);
t516 = t554 * t683;
t709 = qJD(5) * t556;
t521 = t555 * t709;
t732 = -t516 - t521;
t500 = t548 - t550;
t501 = t549 - t547;
t616 = -t868 / 0.2e1 - t867 / 0.2e1;
t617 = -t417 ^ 2 / 0.2e1 - t420 ^ 2 / 0.2e1;
t121 = -t550 / 0.2e1 + t616 + t617;
t731 = qJD(1) * t121;
t164 = -t784 + t787;
t730 = qJD(1) * t164;
t178 = t550 * t551 + (t381 * t554 + t382 * t556) * t555;
t729 = qJD(1) * t178;
t191 = -t772 + t781;
t728 = qJD(1) * t191;
t727 = qJD(1) * t205;
t726 = qJD(1) * t206;
t212 = -t381 * t556 + t382 * t554;
t725 = qJD(1) * t212;
t240 = t752 + t783;
t724 = qJD(1) * t240;
t282 = -t381 * t555 - t550 * t758;
t723 = qJD(1) * t282;
t283 = -t382 * t555 - t551 * t766;
t722 = qJD(1) * t283;
t721 = qJD(1) * t751;
t450 = t499 * t551;
t719 = qJD(1) * t450;
t462 = t500 * t556;
t718 = qJD(1) * t462;
t717 = qJD(2) * t555;
t716 = qJD(2) * t557;
t714 = qJD(3) * t555;
t711 = qJD(4) * t556;
t710 = qJD(5) * t554;
t165 = t784 + t787;
t708 = t165 * qJD(1);
t636 = t549 / 0.2e1 + t854;
t673 = t837 / 0.2e1;
t569 = t636 * t839 + t673;
t592 = -t790 / 0.2e1 - t789 / 0.2e1;
t168 = t569 - t592;
t707 = t168 * qJD(1);
t184 = -t792 + (t402 + 0.2e1 * t669) * t555;
t706 = t184 * qJD(1);
t185 = t791 + (t403 - 0.2e1 * t484) * t555;
t705 = t185 * qJD(1);
t238 = -t753 + t785;
t703 = t238 * qJD(1);
t239 = -t753 - t785;
t702 = t239 * qJD(1);
t241 = t752 - t783;
t701 = t241 * qJD(1);
t286 = t646 + t734;
t256 = t286 * qJD(1);
t258 = t287 * qJD(1);
t306 = 0.2e1 * t427;
t698 = t306 * qJD(1);
t370 = t678 * t876 + t539;
t697 = t370 * qJD(1);
t422 = t877 * t554;
t696 = t422 * qJD(1);
t423 = t877 * t556;
t695 = t423 * qJD(1);
t439 = (t854 - t549 / 0.2e1) * t557;
t694 = t439 * qJD(5);
t527 = t547 * t555;
t529 = t549 * t555;
t455 = -t527 - t529;
t693 = t455 * qJD(1);
t457 = t876 * t557;
t692 = t457 * qJD(1);
t691 = t458 * qJD(1);
t459 = t500 * t554;
t690 = t459 * qJD(1);
t461 = t499 * t556;
t689 = t461 * qJD(1);
t688 = t877 * qJD(1);
t687 = t499 * qJD(1);
t686 = t500 * qJD(1);
t541 = t555 * qJD(1);
t684 = t555 * qJD(4);
t542 = t557 * qJD(1);
t682 = t557 * qJD(5);
t186 = -t771 / 0.2e1 - t775 / 0.2e1;
t677 = t186 * qJD(4);
t676 = t844 / 0.2e1;
t675 = -t843 / 0.2e1;
t664 = t845 * t751;
t663 = t845 * t420;
t659 = t453 * t541;
t658 = t460 * t541;
t656 = t453 * t683;
t655 = t554 * t711;
t654 = t556 * t683;
t653 = t554 * t682;
t652 = t556 * t682;
t651 = t554 * t709;
t650 = t554 * t542;
t649 = t556 * t542;
t519 = t555 * t683;
t648 = t453 * t542;
t518 = t555 * t542;
t645 = -t766 / 0.2e1;
t641 = t531 * t846;
t635 = t845 * qJD(5);
t634 = t845 * qJD(6);
t628 = t681 * t555;
t626 = pkin(5) * t642;
t624 = -qJD(5) - t541;
t622 = t550 * t651;
t613 = qJD(4) * t631;
t520 = t555 * t710;
t611 = t520 - t654;
t571 = (t786 / 0.2e1 + t663 / 0.2e1) * pkin(5);
t3 = t421 * t637 + t453 * t639 + t460 * t640 + t638 * t751 + t571;
t610 = t3 * qJD(1);
t609 = -qJD(6) + t624;
t570 = (t420 * t852 + t647 * t845) * pkin(5);
t13 = -t453 * t640 + t460 * t639 + t570;
t608 = -t13 * qJD(1) + t48 * qJD(4);
t605 = -t402 * t554 + t403 * t556;
t604 = t417 * t453 + t420 * t460;
t104 = -t530 * t551 ^ 2 - t381 * t402 + t382 * t403;
t602 = t104 * qJD(1) + t94 * qJD(3);
t568 = t377 * t861 + t630 * t646 + t641;
t593 = t171 * t859 + t173 * t858;
t27 = t568 - t593;
t601 = -qJD(1) * t27 + qJD(3) * t186;
t383 = t457 * t555 - t530;
t600 = -t94 * qJD(1) - t383 * qJD(3);
t285 = -t453 * t531 + t460 * t844;
t35 = (t421 * t851 + (-t553 / 0.2e1 + t460 * t847) * t557) * pkin(5) + t56;
t598 = qJD(1) * t35 - qJD(4) * t285;
t597 = t624 * t557;
t211 = -t421 ^ 2 + t751 ^ 2;
t53 = qJD(1) * t211 + qJD(4) * t122;
t250 = -t867 + t868;
t68 = qJD(1) * t122 + qJD(4) * t250;
t596 = t839 / 0.2e1 + t673;
t582 = t596 * t554;
t351 = t463 / 0.2e1 + t582;
t595 = pkin(4) * t711 - qJD(1) * t351;
t583 = t596 * t556;
t352 = -t465 / 0.2e1 - t583;
t594 = pkin(4) * qJD(4) * t554 - qJD(1) * t352;
t589 = t377 * t857 + t630 * t859;
t588 = qJD(1) * t56 + t453 * t712;
t585 = t556 * t597;
t380 = -qJD(1) * t439 + t655;
t581 = t171 * t679 + t173 * t852;
t580 = t780 / 0.2e1 - t664 / 0.2e1;
t366 = qJD(1) * t554 * t766 + qJD(4) * t439;
t456 = t501 * t550;
t575 = qJD(1) * t456 + t613;
t574 = qJD(1) * t631 - qJD(4) * t501;
t156 = t417 * t751 + t420 * t421 - t530;
t558 = t171 * t647 + t173 * t861 + t421 * t865 - t447 * t846 + t448 * t848 + t751 * t882;
t7 = -t558 + t589;
t572 = -qJD(1) * t7 + qJD(2) * t186 + qJD(3) * t156;
t563 = t170 * t863 + t630 * t865 + t864 * t894;
t1 = (t448 * t851 + t556 * t641 + t581) * pkin(5) + t563;
t29 = -t638 * t420 + t637 * t417 + (t756 / 0.2e1 + t580) * pkin(5);
t96 = t531 * t844;
t564 = -t1 * qJD(1) + t48 * qJD(2) - t29 * qJD(3) + t96 * qJD(4);
t546 = qJ(2) * qJD(1);
t545 = qJ(2) * qJD(2);
t533 = t552 * qJD(3);
t526 = -t542 / 0.2e1;
t525 = t542 / 0.2e1;
t524 = t683 / 0.2e1;
t517 = t556 * t541;
t515 = t554 * t684;
t514 = t554 * t541;
t469 = -0.1e1 / 0.2e1 + t853 + t539;
t452 = t517 + t709;
t451 = t514 + t710;
t449 = t518 + t682 / 0.2e1;
t425 = t548 * t847 + t645 + t556 / 0.2e1;
t424 = t851 + t458 / 0.2e1;
t409 = t518 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t557;
t371 = t548 * t636 + t539 - t636;
t307 = t751 / 0.2e1 + t427;
t297 = t647 + t734;
t293 = t557 * t576 + t427;
t292 = t557 * t875 + t855;
t279 = -t669 + t465 / 0.2e1 - t583;
t278 = -t484 - t463 / 0.2e1 + t582;
t195 = qJD(4) * t286 + t421 * t541;
t194 = qJD(4) * t566 + t541 * t751;
t177 = -t879 - t256;
t176 = t879 - t258;
t169 = t569 + t592;
t120 = t539 + t616 - t617;
t114 = qJD(4) * t291 + t726;
t113 = qJD(4) * t288 + t727;
t106 = qJD(4) * t297 + t421 * t609;
t105 = qJD(4) * t565 + t609 * t751;
t71 = qJD(4) * t293 - t420 * t681 - t727;
t70 = qJD(4) * t292 + t417 * t681 - t726;
t62 = t763 - t667 / 0.2e1 + t584;
t60 = t553 * t674 - t666 - t559 / 0.2e1 - t764 / 0.2e1;
t57 = t578 + t892;
t38 = t421 * t676 + t460 * t626 + t620 + (t675 - t310 / 0.2e1) * t553 + t892;
t37 = pkin(5) * t759 / 0.2e1 + t453 * t626 + t679 * t843 + t58;
t30 = pkin(5) * t580 - t377 * t647 - t630 * t861 + t554 * t675 - t794 / 0.2e1 + t797 / 0.2e1;
t28 = t568 + t593;
t14 = t858 * t894 + t859 * t893 + t570;
t10 = t170 * t647 + t172 * t861 + t811 / 0.2e1 - t808 / 0.2e1 + (t579 + t645) * pkin(5);
t8 = t558 + t589;
t4 = -t751 * t862 + t172 * t860 + t170 * t858 + t571 - t810 / 0.2e1 - t806 / 0.2e1 - t798 / 0.2e1;
t2 = pkin(5) * t581 + t448 * t676 + t531 * t626 - t563;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t545, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJD(3), t533 + t545, -t519, t500 * qJD(4), 0, t519, 0, 0, t552 * t683 + t714, qJD(3) * t557 - t552 * t684, -t499 * qJD(2), qJD(2) * t450 + t533, -t519 * t549 - t622, -qJD(5) * t456 + t555 * t613, -qJD(4) * t462 - t555 * t653, -t519 * t547 + t622, qJD(4) * t459 - t555 * t652, t519, -qJD(2) * t458 + qJD(4) * t184 + qJD(5) * t283 + t556 * t714, -qJD(2) * t461 - qJD(4) * t185 - qJD(5) * t282 - t554 * t714, -qJD(3) * t457 - qJD(4) * t95, qJD(2) * t178 + qJD(3) * t212 + qJD(4) * t104 (-qJD(4) * t420 - t681 * t751) * t421, qJD(4) * t165 + t211 * t681, qJD(4) * t241 - t628 * t751 (-qJD(4) * t417 + t421 * t681) * t751, qJD(4) * t238 - t421 * t628, t519, qJD(2) * t239 + qJD(4) * t33 + qJD(5) * t86 + qJD(6) * t98 - t453 * t714, -qJD(2) * t240 - qJD(4) * t34 - qJD(5) * t87 - qJD(6) * t97 - t460 * t714, qJD(2) * t164 + qJD(3) * t191 + qJD(4) * t19 + qJD(5) * t18, qJD(2) * t41 + qJD(3) * t44 + qJD(4) * t22 + qJD(5) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t546, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, t546, 0, 0, 0, 0, 0, 0, 0, 0, -t687, qJD(3) * t469 + t719, 0, 0, 0, 0, 0, 0, -t691, -t689, 0, qJD(3) * t371 + qJD(4) * t169 + t729, 0, 0, 0, 0, 0, 0, t296 * t681 + t702, qJD(4) * t307 - t724 + t881, t730, -qJD(2) * t604 + qJD(3) * t120 + qJD(4) * t28 + qJD(5) * t14 + t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t685, 0, 0, 0, 0, 0, 0, t541, t542, 0, qJD(2) * t469 + t685, 0, 0, 0, 0, 0, 0, qJD(5) * t425 + t517, qJD(5) * t424 - t514, -t692, qJD(2) * t371 + t725 + t820, 0, 0, 0, 0, 0, 0, t208 * t681 - t659, t207 * t681 - t658, t728, qJD(2) * t120 + qJD(3) * t604 + qJD(4) * t8 + qJD(5) * t10 + t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, t686, -t684, t518, -t683, 0, t542 * t552 - t551 * t684, -t541 * t552 - t551 * t683, 0, 0, -t694 + (-t542 * t549 - t655) * t555 (t527 - t529) * qJD(4) + (-qJD(5) + t541) * t631, t516 - t718, t694 + (-t542 * t547 + t655) * t555, t654 + t690, t449, t706 + (t554 * t614 - t670) * qJD(4) + t279 * qJD(5), -t705 + (-pkin(8) * t754 + (t758 + t838) * t555) * qJD(4) + t278 * qJD(5), qJD(4) * t605 - t747, t169 * qJD(2) + (pkin(8) * t605 - t551 * t841) * qJD(4) + t602 (-t713 - t720) * t420 + t895, t708 + (t773 + t774) * qJD(4) + t746, t460 * t683 + t701 + t881 (-qJD(4) * t453 - t721) * t417 - t895, t297 * t681 - t656 + t703, t409, t801 + (-t417 * t531 - t447 * t453 - t557 * t630) * qJD(4) + t37 * qJD(5) + t58 * qJD(6), -t800 + t307 * qJD(2) + (-t377 * t557 - t420 * t531 - t447 * t460) * qJD(4) + t38 * qJD(5) + t57 * qJD(6), t804 + (-t171 * t460 - t173 * t453 + t794 - t797) * qJD(4) + t4 * qJD(5), t803 + t28 * qJD(2) + t8 * qJD(3) + (-t171 * t630 + t173 * t377 - t447 * t531) * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, -t575, t554 * t597, t366, t585, t524, qJD(3) * t425 + qJD(4) * t279 - qJD(5) * t382 + t722, qJD(3) * t424 + qJD(4) * t278 + qJD(5) * t381 - t723, 0, 0, t885, t53, t105, -t885, t106, t524, qJD(4) * t37 + qJD(5) * t170 + qJD(6) * t60 + t737 + t817, qJD(4) * t38 - qJD(5) * t172 + qJD(6) * t62 + t738 - t816, t805 + t4 * qJD(4) + (t664 - t780) * t830, t802 + t14 * qJD(2) + t10 * qJD(3) + t2 * qJD(4) + (t170 * t845 + t172 * t553) * t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t885, t53, t105, -t885, t106, t524, qJD(4) * t58 + qJD(5) * t60 - qJD(6) * t167 + t737 + t813, qJD(4) * t57 + qJD(5) * t62 + qJD(6) * t166 + t738 - t814, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t546, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, -qJD(3) - t546, 0, 0, 0, 0, 0, 0, -t683, t684, t687, -qJD(3) * t877 - t719, 0, 0, 0, 0, 0, 0, t611 + t691, t689 - t732, t455 * qJD(4), -qJD(3) * t370 - qJD(4) * t168 - t729, 0, 0, 0, 0, 0, 0, -t287 * t681 + t656 - t702, -qJD(4) * t306 + t724 - t880, -qJD(4) * t89 - t730, qJD(3) * t121 - qJD(4) * t27 - qJD(5) * t13 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t697, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677 + t731; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, t541, 0, 0, 0, 0, 0, 0, 0, 0, -t649, t650, t693, -t707, 0, 0, 0, 0, 0, 0, t648, -t698, -t815, t601 + t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t452, 0, 0, 0, 0, 0, 0, 0, 0, t176, t887, 0 (t453 * t553 + t460 * t845) * t830 + t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, t887, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), t871, 0, 0, 0, 0, 0, 0, -t541, -t542, 0, qJD(2) * t877 - t685, 0, 0, 0, 0, 0, 0, -qJD(5) * t423 - t517, qJD(5) * t422 + t514, t692, qJD(2) * t370 - t725 + t820, 0, 0, 0, 0, 0, 0, -t205 * t681 + t659, -t206 * t681 + t658, -t728, -qJD(2) * t121 - qJD(4) * t7 - qJD(5) * t9 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t688, 0, 0, 0, 0, 0, 0, 0, 0, 0, t697, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677 - t731; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t684, -t683, 0, 0, 0, 0, 0, 0, 0, 0, -t556 * t684 - t653, t515 - t652, t457 * qJD(4) (pkin(8) * t457 - t841) * qJD(4) - t600, 0, 0, 0, 0, 0, 0, t293 * t681 + t453 * t684, t292 * t681 + t460 * t684, -qJD(4) * t191 (t421 * t377 + t531 * t555 + t798) * qJD(4) + t30 * qJD(5) + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695 + t732, t611 + t696, 0, 0, 0, 0, 0, 0, 0, 0, t71, t70, 0, -t827 + t30 * qJD(4) + (-t663 - t786) * t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t70, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, -t686, 0, -t518, 0, 0, t871 * t557, -t871 * t555, 0, 0, t518 * t549 - t694, t585 * t891, t521 + t718, t518 * t547 + t694, -t520 - t690, -t449, qJD(5) * t352 + t556 * t716 - t706, qJD(5) * t351 - t554 * t716 + t705, -qJD(2) * t455 + t747, qJD(2) * t168 - t602, t420 * t720 + t895, -t708 + t746, -t701 - t880, t417 * t721 - t895, -t286 * t681 - t703, -t409, -qJD(5) * t36 - qJD(6) * t55 - t453 * t716 - t801, qJD(2) * t306 - qJD(5) * t35 - qJD(6) * t56 + t800, qJD(2) * t89 - qJD(5) * t3 - t804, qJD(2) * t27 + qJD(3) * t7 - qJD(5) * t1 - t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, -t541, 0, 0, 0, 0, 0, 0, 0, 0, t649, -t650, -t693, t707, 0, 0, 0, 0, 0, 0, -t648, t698, t815, -t601 + t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t600, 0, 0, 0, 0, 0, 0, -t681 * t288, -t681 * t291, 0, -qJD(5) * t29 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651, t501 * qJD(5), 0, -t651, 0, 0, -pkin(4) * t710, -pkin(4) * t709, 0, 0, -t889, t681 * t250, 0, t889, 0, 0, qJD(5) * t284 + qJD(6) * t770, qJD(5) * t285 - t437 * t531, 0, qJD(5) * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, -t574, t452, -t380, -t451, t526, -pkin(8) * t709 - t594, pkin(8) * t710 - t595, 0, 0, -t886, t68, t887, t886, t177, t526, -t873 - t883, -t598 + t884 (t662 - t769) * t830 - t610 (-t377 * t845 - t553 * t630) * t830 + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t886, t68, t887, t886, t177, t526, -t874 - t883, -t588 + t884, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, t575 (t650 - t711) * t555, -t366, t518 * t556 + t515, t524, qJD(3) * t423 - qJD(4) * t352 - t554 * t717 - t722, -qJD(3) * t422 - qJD(4) * t351 - t556 * t717 + t723, 0, 0, -t885, -t53, t194, t885, t195, t524, qJD(4) * t36 + qJD(6) * t59 + t740 - t817, qJD(4) * t35 + qJD(6) * t61 + t739 + t816, qJD(4) * t3 - t805, qJD(2) * t13 + qJD(3) * t9 + qJD(4) * t1 - t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t517, 0, 0, 0, 0, 0, 0, 0, 0, t258, t872, 0, -t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t695, -t696, 0, 0, 0, 0, 0, 0, 0, 0, t113, t114, 0, qJD(4) * t29 + t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, t574, -t517, t380, t514, t525, t594, t595, 0, 0, t886, -t68, t872, -t886, t256, t525, t873, t699 + t598, t610, -t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t842, -pkin(5) * t634, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t681 * t842 + t818, t750 + (-t635 - t634) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t885, -t53, t194, t885, t195, t524, qJD(4) * t55 - qJD(5) * t59 + t740 - t813, qJD(4) * t56 - qJD(5) * t61 + t739 + t814, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, t872, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t114, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t886, -t68, t872, -t886, t256, t525, t874, t699 + t588, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553 * t830 - t818, pkin(5) * t635 - t750, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
