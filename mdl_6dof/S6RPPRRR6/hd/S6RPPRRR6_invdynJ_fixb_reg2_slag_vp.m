% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPPRRR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:31:35
% EndTime: 2019-03-09 02:31:46
% DurationCPUTime: 5.93s
% Computational Cost: add. (6181->526), mult. (11123->650), div. (0->0), fcn. (6750->10), ass. (0->259)
t174 = sin(qJ(4));
t284 = qJD(1) * t174;
t139 = qJD(5) + t284;
t178 = cos(qJ(4));
t329 = g(3) * t174;
t175 = sin(qJ(1));
t179 = cos(qJ(1));
t341 = g(1) * t179 + g(2) * t175;
t195 = t178 * t341 - t329;
t163 = qJD(1) * qJD(2);
t164 = qJ(2) * qJDD(1);
t233 = qJDD(3) + t163 + t164;
t109 = -pkin(7) * qJDD(1) + t233;
t145 = qJ(2) * qJD(1) + qJD(3);
t129 = -pkin(7) * qJD(1) + t145;
t279 = qJD(4) * t174;
t312 = qJDD(4) * pkin(4);
t53 = -t178 * t109 + t129 * t279 - t312;
t192 = -t53 - t195;
t354 = qJD(5) * pkin(8) * t139 - t192;
t173 = sin(qJ(5));
t283 = qJD(1) * t178;
t246 = t173 * t283;
t177 = cos(qJ(5));
t270 = t177 * qJD(4);
t104 = t246 - t270;
t280 = qJD(4) * t173;
t106 = t177 * t283 + t280;
t172 = sin(qJ(6));
t176 = cos(qJ(6));
t215 = t104 * t172 - t176 * t106;
t49 = t176 * t104 + t106 * t172;
t326 = t49 * t215;
t247 = t173 * t284;
t334 = pkin(9) + pkin(8);
t248 = qJD(5) * t334;
t223 = pkin(4) * t178 + pkin(8) * t174;
t111 = t223 * qJD(1);
t294 = t177 * t178;
t57 = t173 * t111 + t129 * t294;
t353 = pkin(9) * t247 + t173 * t248 + t57;
t300 = t174 * t177;
t209 = pkin(5) * t178 + pkin(9) * t300;
t302 = t173 * t178;
t56 = t177 * t111 - t129 * t302;
t352 = -qJD(1) * t209 - t177 * t248 - t56;
t102 = qJD(4) * t223 + qJD(3);
t170 = -pkin(7) + qJ(2);
t276 = qJD(5) * t174;
t351 = -t170 * t276 + t102;
t171 = pkin(1) + qJ(3);
t222 = pkin(4) * t174 - pkin(8) * t178;
t115 = t222 + t171;
t71 = qJD(1) * t115 - qJD(2);
t114 = t174 * t129;
t88 = qJD(4) * pkin(8) + t114;
t36 = -t173 * t88 + t177 * t71;
t314 = t177 * t36;
t37 = t173 * t71 + t177 * t88;
t218 = -t173 * t37 - t314;
t350 = t218 * qJD(1) - t341;
t261 = t178 * qJDD(1);
t349 = qJD(4) * qJD(5) + t261;
t339 = qJD(1) * t171;
t130 = -qJD(2) + t339;
t220 = -qJD(1) * t130 - t341;
t348 = t215 ^ 2 - t49 ^ 2;
t131 = qJD(6) + t139;
t274 = qJD(5) * t178;
t241 = t177 * t274;
t252 = qJD(1) * t241 + t173 * t349;
t207 = t177 * qJDD(4) - t252;
t268 = qJD(1) * qJD(4);
t237 = t174 * t268;
t190 = t237 * t173 + t207;
t272 = qJD(6) * t176;
t273 = qJD(6) * t172;
t244 = t174 * t270;
t198 = t173 * t274 + t244;
t45 = qJD(1) * t198 - t173 * qJDD(4) - t177 * t349;
t14 = t104 * t272 + t106 * t273 - t172 * t190 + t176 * t45;
t347 = t131 * t49 - t14;
t33 = -pkin(9) * t106 + t36;
t23 = pkin(5) * t139 + t33;
t34 = -pkin(9) * t104 + t37;
t236 = t178 * t268;
t262 = t174 * qJDD(1);
t101 = qJDD(5) + t236 + t262;
t162 = qJDD(1) * qJ(3);
t169 = qJDD(1) * pkin(1);
t259 = t169 - qJDD(2);
t234 = -t162 - t259;
t44 = qJD(1) * t102 + qJDD(1) * t222 - t234;
t39 = t177 * t44;
t278 = qJD(4) * t178;
t54 = qJDD(4) * pkin(8) + t109 * t174 + t129 * t278;
t11 = -qJD(5) * t37 - t173 * t54 + t39;
t6 = pkin(5) * t101 + pkin(9) * t45 + t11;
t275 = qJD(5) * t177;
t277 = qJD(5) * t173;
t10 = t173 * t44 + t177 * t54 + t71 * t275 - t277 * t88;
t7 = pkin(9) * t190 + t10;
t1 = (qJD(6) * t23 + t7) * t176 + t172 * t6 - t34 * t273;
t168 = qJ(5) + qJ(6);
t151 = cos(t168);
t328 = g(3) * t178;
t319 = qJD(4) * pkin(4);
t89 = -t129 * t178 - t319;
t60 = pkin(5) * t104 + t89;
t150 = sin(t168);
t301 = t174 * t175;
t73 = -t150 * t179 - t151 * t301;
t291 = t179 * t151;
t298 = t175 * t150;
t75 = t174 * t291 - t298;
t346 = g(1) * t75 - g(2) * t73 + t151 * t328 + t49 * t60 - t1;
t315 = t176 * t34;
t9 = t172 * t23 + t315;
t2 = -t9 * qJD(6) - t172 * t7 + t176 * t6;
t72 = t174 * t298 - t291;
t299 = t174 * t179;
t74 = -t150 * t299 - t151 * t175;
t345 = -g(1) * t74 + g(2) * t72 + t150 * t328 + t215 * t60 + t2;
t191 = qJD(6) * t215 + t172 * t45 + t176 * t190;
t344 = -t131 * t215 + t191;
t210 = t104 * t139;
t343 = -t45 + t210;
t296 = t176 * t177;
t305 = t172 * t173;
t107 = -t296 + t305;
t78 = t107 * t174;
t108 = t172 * t177 + t173 * t176;
t76 = t108 * t174;
t166 = t174 ^ 2;
t167 = t178 ^ 2;
t287 = t166 + t167;
t342 = t129 * t287;
t293 = t177 * t179;
t90 = t173 * t301 - t293;
t297 = t175 * t177;
t92 = -t173 * t299 - t297;
t340 = -g(1) * t92 + g(2) * t90;
t260 = qJD(5) + qJD(6);
t321 = t172 * t247 - t176 * t275 - t177 * t272 + t260 * t305 - t284 * t296;
t338 = -t108 * t191 - t321 * t49;
t59 = t260 * t108;
t87 = t108 * qJD(1);
t320 = t174 * t87 + t59;
t96 = qJDD(6) + t101;
t337 = -t107 * t96 - t131 * t320;
t229 = qJD(1) + t276;
t336 = t173 * t278 + t177 * t229;
t335 = qJD(4) * (qJD(2) + t130 + t339) + qJDD(4) * t170;
t155 = 0.2e1 * t163;
t331 = pkin(5) * t173;
t330 = pkin(8) * t101;
t160 = g(1) * t175;
t159 = g(2) * t179;
t327 = t179 * pkin(7);
t79 = t107 * t178;
t325 = -qJD(4) * t79 - t260 * t76 - t87;
t324 = t107 * qJD(1) - t108 * t278 + t260 * t78;
t123 = t334 * t173;
t124 = t334 * t177;
t62 = -t123 * t176 - t124 * t172;
t323 = qJD(6) * t62 + t172 * t352 - t176 * t353;
t63 = -t123 * t172 + t124 * t176;
t322 = -qJD(6) * t63 + t172 * t353 + t176 * t352;
t316 = t172 * t34;
t313 = t45 * t173;
t66 = t173 * t115 + t170 * t300;
t311 = t104 * t173;
t310 = t104 * t178;
t309 = t106 * t104;
t308 = t106 * t177;
t307 = t106 * t178;
t182 = qJD(1) ^ 2;
t306 = t166 * t182;
t304 = t173 * t101;
t303 = t173 * t174;
t295 = t177 * t101;
t292 = t178 * t179;
t290 = t179 * pkin(1) + t175 * qJ(2);
t289 = t160 - t159;
t181 = qJD(4) ^ 2;
t286 = -t181 - t182;
t282 = qJD(2) * t174;
t281 = qJD(4) * t106;
t271 = t106 * qJD(5);
t269 = t178 * qJD(2);
t267 = qJD(3) * qJD(1);
t265 = qJDD(1) * t171;
t263 = qJDD(4) * t174;
t257 = t139 * t303;
t256 = t139 * t300;
t255 = t49 * t283;
t254 = t178 * t182 * t174;
t253 = t215 * t283;
t250 = t179 * qJ(3) + t290;
t249 = pkin(7) + t331;
t245 = t173 * t279;
t239 = t178 * t270;
t235 = qJDD(2) - t289;
t230 = t287 * t109;
t228 = 0.2e1 * t164 + t155 - t341;
t227 = g(2) * t250;
t226 = t174 * t236;
t225 = -t169 + t235;
t224 = -t114 + (t247 + t277) * pkin(5);
t154 = t179 * qJ(2);
t219 = -t171 * t175 + t154;
t98 = t177 * t115;
t47 = -pkin(9) * t294 + t98 + (-t170 * t173 + pkin(5)) * t174;
t55 = -pkin(9) * t302 + t66;
t20 = -t172 * t55 + t176 * t47;
t21 = t172 * t47 + t176 * t55;
t217 = t173 * t36 - t177 * t37;
t144 = pkin(5) * t177 + pkin(4);
t213 = t144 * t174 - t178 * t334;
t212 = -t162 + t225;
t110 = -t234 + t267;
t211 = t130 * qJD(3) + t110 * t171;
t208 = t351 * t177;
t206 = t341 * t174;
t205 = t107 * t14 + t215 * t320;
t204 = t108 * t96 - t131 * t321;
t203 = t139 * t275 + t304;
t202 = t139 * t277 - t295;
t201 = -t170 * t278 - t282;
t197 = -t241 + t245;
t196 = -t109 - t220;
t25 = t115 * t275 + t170 * t239 + t173 * t351 + t177 * t282;
t193 = t173 * t229 - t239;
t189 = -t170 * t181 + t110 + t160 + t265 + t267;
t188 = qJD(5) * t218 + t10 * t177 - t11 * t173;
t187 = qJD(5) * t217 - t10 * t173 - t11 * t177;
t186 = t190 * t177;
t184 = t188 - t328;
t149 = t167 * t182;
t147 = qJDD(4) * t178;
t140 = g(2) * t292;
t100 = (-t170 + t331) * t178;
t93 = -t173 * t175 + t174 * t293;
t91 = -t173 * t179 - t174 * t297;
t77 = t108 * t178;
t65 = -t170 * t303 + t98;
t61 = -pkin(5) * t197 + t279 * t170 - t269;
t30 = -t273 * t302 + (t260 * t294 - t245) * t176 - t198 * t172;
t28 = -t172 * t245 + t176 * t244 + t178 * t59;
t26 = (-qJD(5) * t115 + t201) * t173 + t208;
t22 = -pkin(5) * t190 + t53;
t19 = pkin(9) * t197 + t25;
t18 = t209 * qJD(4) + ((pkin(9) * t178 - t115) * qJD(5) + t201) * t173 + t208;
t13 = t176 * t33 - t316;
t12 = -t172 * t33 - t315;
t8 = t176 * t23 - t316;
t4 = -qJD(6) * t21 - t172 * t19 + t176 * t18;
t3 = qJD(6) * t20 + t172 * t18 + t176 * t19;
t5 = [0, 0, 0, 0, 0, qJDD(1), t289, t341, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -0.2e1 * t169 + t235, t228, t259 * pkin(1) - g(1) * (-pkin(1) * t175 + t154) - g(2) * t290 + (t155 + t164) * qJ(2), qJDD(1), 0, 0, 0, 0, 0, 0, qJDD(3) + t228, -t212 + t265 + 0.2e1 * t267, -g(1) * t219 + qJ(2) * t233 + t145 * qJD(2) + t211 - t227, qJDD(1) * t167 - 0.2e1 * t226, -0.2e1 * t174 * t261 + 0.2e1 * (t166 - t167) * t268, -t174 * t181 + t147, qJDD(1) * t166 + 0.2e1 * t226, -t178 * t181 - t263, 0, t335 * t178 + (t189 - t159) * t174, -t174 * t335 + t189 * t178 - t140, t341 + t287 * (-qJDD(1) * t170 - t109 - t163) -g(1) * (t219 - t327) - g(2) * (-pkin(7) * t175 + t250) + t170 * t230 + qJD(2) * t342 + t211, -t106 * t198 - t294 * t45 (t104 * t177 + t106 * t173) * t279 + (t186 + t313 + (-t308 + t311) * qJD(5)) * t178 (-t139 * t270 - t45) * t174 + (-t202 + t281) * t178, -t104 * t197 - t190 * t302 ((t139 + t284) * t280 + t207) * t174 + (-qJD(4) * t104 - t203) * t178, t101 * t174 + t139 * t278, -g(1) * t91 - g(2) * t93 + t65 * t101 + t26 * t139 + (t11 + (t104 * t170 - t173 * t89) * qJD(4)) * t174 + (-qJD(2) * t104 + t36 * qJD(4) + t170 * t190 + t53 * t173 + t275 * t89) * t178, -g(1) * t90 - g(2) * t92 - t101 * t66 - t139 * t25 + (-t10 + (t106 * t170 - t177 * t89) * qJD(4)) * t174 + (-qJD(2) * t106 - qJD(4) * t37 + t170 * t45 + t53 * t177 - t277 * t89) * t178, -t25 * t104 + t66 * t207 - t26 * t106 + t65 * t45 + t140 + (t314 + (qJD(1) * t66 + t37) * t173) * t279 + (t187 - t160) * t178, t10 * t66 + t37 * t25 + t11 * t65 + t36 * t26 - t89 * t269 - g(1) * (t154 - t327) - g(2) * (pkin(4) * t299 - pkin(8) * t292 + t250) + (-t178 * t53 + t279 * t89) * t170 + (g(2) * pkin(7) + g(1) * t115) * t175, t14 * t79 + t215 * t28, t14 * t77 - t191 * t79 + t215 * t30 + t28 * t49, -t131 * t28 - t14 * t174 - t215 * t278 - t79 * t96, -t191 * t77 + t30 * t49, -t131 * t30 + t174 * t191 - t278 * t49 - t77 * t96, t131 * t278 + t174 * t96, -g(1) * t73 - g(2) * t75 - t100 * t191 + t131 * t4 + t174 * t2 + t20 * t96 + t22 * t77 + t278 * t8 + t30 * t60 + t49 * t61, -g(1) * t72 - g(2) * t74 - t1 * t174 - t100 * t14 - t131 * t3 - t21 * t96 - t215 * t61 - t22 * t79 - t278 * t9 - t28 * t60, -t1 * t77 + t14 * t20 - t160 * t178 + t191 * t21 + t2 * t79 + t215 * t4 + t28 * t8 - t3 * t49 - t30 * t9 + t140, t1 * t21 + t9 * t3 + t2 * t20 + t8 * t4 + t22 * t100 + t60 * t61 - g(1) * t154 - t227 + (g(1) * t249 - g(2) * t213) * t179 + (-g(1) * (-t213 - t171) + g(2) * t249) * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t182, -qJ(2) * t182 + t225, 0, 0, 0, 0, 0, 0, 0, -t182, -qJDD(1) (-qJD(3) - t145) * qJD(1) + t212, 0, 0, 0, 0, 0, 0, -0.2e1 * t236 - t262, 0.2e1 * t237 - t261, t149 + t306 (-qJD(3) - t342) * qJD(1) + t212, 0, 0, 0, 0, 0, 0 (t257 + t310) * qJD(1) + t202 (t256 + t307) * qJD(1) + t203, t343 * t177 + (-t271 + (-t106 - t280) * t284 - t207) * t173 (t174 * t217 + t178 * t89) * qJD(1) + t187 - t289, 0, 0, 0, 0, 0, 0, t255 - t337, t204 - t253, t205 + t338, -t1 * t108 + t107 * t2 + t283 * t60 + t320 * t8 + t321 * t9 - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t182, t220 + t233, 0, 0, 0, 0, 0, 0, t174 * t286 + t147, t178 * t286 - t263, -t287 * qJDD(1), t230 + t220, 0, 0, 0, 0, 0, 0, t178 * t207 + (-t304 + (t104 + t246) * qJD(4)) * t174 - t336 * t139, t178 * t45 + (t281 - t295) * t174 + t193 * t139 (t207 * t177 + (t177 * t237 - t45) * t173) * t174 + t336 * t106 + t193 * t104 (-qJD(4) * t217 - t53) * t178 + (qJD(4) * t89 + t188) * t174 + t350, 0, 0, 0, 0, 0, 0, t131 * t324 + t178 * t191 + t279 * t49 - t76 * t96, -t131 * t325 + t14 * t178 - t215 * t279 + t78 * t96, -t14 * t76 - t191 * t78 + t215 * t324 - t325 * t49, -t1 * t78 - t178 * t22 - t2 * t76 + t279 * t60 + t324 * t8 + t325 * t9 - t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t149 - t306, t261, -t254, -t262, qJDD(4), -t178 * t196 + t329, t174 * t196 + t328, 0, 0, t139 * t308 - t313 (-t45 - t210) * t177 + (-t271 + (-t106 + t280) * t284 + t207) * t173 (t256 - t307) * qJD(1) + t203, t173 * t210 + t186 (-t257 + t310) * qJD(1) - t202, -t139 * t283, -pkin(4) * t252 - t56 * t139 - t36 * t283 - t104 * t114 + (-t330 + t89 * qJD(5) + (t89 + t319) * t284) * t173 + (t312 - t354) * t177, t37 * t283 - t106 * t114 + pkin(4) * t45 + t139 * t57 + (t139 * t89 - t330) * t177 + t354 * t173, t57 * t104 + t56 * t106 + t350 * t174 + (-t313 + t186 + (t308 + t311) * qJD(5)) * pkin(8) + t184, -t89 * t114 - t36 * t56 - t37 * t57 + t192 * pkin(4) + (-t206 + t184) * pkin(8), -t14 * t108 + t215 * t321, t205 - t338, t204 + t253, -t107 * t191 + t320 * t49, t255 + t337, -t131 * t283, t107 * t22 + t131 * t322 + t144 * t191 - t151 * t195 + t224 * t49 - t283 * t8 + t320 * t60 + t62 * t96, t108 * t22 - t131 * t323 + t14 * t144 + t150 * t195 - t215 * t224 + t283 * t9 - t321 * t60 - t63 * t96, -t1 * t107 - t108 * t2 + t14 * t62 + t191 * t63 + t215 * t322 - t320 * t9 + t321 * t8 - t323 * t49 - t206 - t328, g(3) * t213 + t1 * t63 - t22 * t144 + t2 * t62 + t224 * t60 + t322 * t8 + t323 * t9 - t341 * (t144 * t178 + t174 * t334); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, -t104 ^ 2 + t106 ^ 2, t343, -t309, t106 * t139 + t190, t101, -t88 * t275 - t106 * t89 + t139 * t37 + t39 + (-qJD(5) * t71 + t328 - t54) * t173 + t340, g(1) * t93 - g(2) * t91 + g(3) * t294 + t104 * t89 + t139 * t36 - t10, 0, 0, -t326, t348, t347, t326, t344, t96, -t12 * t131 + (-t106 * t49 - t131 * t273 + t176 * t96) * pkin(5) + t345, t13 * t131 + (t106 * t215 - t131 * t272 - t172 * t96) * pkin(5) + t346, -t12 * t215 + t13 * t49 - t215 * t9 - t49 * t8 + (t14 * t176 + t191 * t172 + (-t172 * t215 - t176 * t49) * qJD(6)) * pkin(5), -t8 * t12 - t9 * t13 + (t1 * t172 + t2 * t176 - t60 * t106 + g(3) * t302 + (-t172 * t8 + t176 * t9) * qJD(6) + t340) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326, t348, t347, t326, t344, t96, t131 * t9 + t345, t131 * t8 + t346, 0, 0;];
tau_reg  = t5;
