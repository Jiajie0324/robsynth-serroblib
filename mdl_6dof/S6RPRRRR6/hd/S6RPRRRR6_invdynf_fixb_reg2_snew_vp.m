% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 03:51
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRRR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR6_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR6_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR6_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 03:51:25
% EndTime: 2019-05-06 03:51:34
% DurationCPUTime: 9.77s
% Computational Cost: add. (99649->336), mult. (237687->467), div. (0->0), fcn. (186956->12), ass. (0->263)
t2192 = qJD(1) ^ 2;
t2186 = sin(qJ(1));
t2191 = cos(qJ(1));
t2165 = t2186 * g(1) - t2191 * g(2);
t2206 = -qJDD(2) + t2165;
t2180 = cos(pkin(11));
t2213 = pkin(2) * t2180 + pkin(1);
t2179 = sin(pkin(11));
t2176 = t2179 ^ 2;
t2177 = t2180 ^ 2;
t2216 = t2176 + t2177;
t2134 = t2213 * qJDD(1) + (pkin(7) * t2216 + qJ(2)) * t2192 + t2206;
t2162 = t2216 * t2192;
t2185 = sin(qJ(3));
t2190 = cos(qJ(3));
t2156 = (t2179 * t2185 - t2180 * t2190) * qJD(1);
t2153 = qJD(4) + t2156;
t2149 = qJD(5) + t2153;
t2146 = qJD(6) + t2149;
t2246 = qJD(6) + t2146;
t2205 = t2179 * t2190 + t2180 * t2185;
t2245 = t2205 * qJDD(1);
t2242 = qJD(3) ^ 2;
t2158 = t2205 * qJD(1);
t2184 = sin(qJ(4));
t2189 = cos(qJ(4));
t2144 = -t2189 * qJD(3) + t2158 * t2184;
t2145 = qJD(3) * t2184 + t2158 * t2189;
t2183 = sin(qJ(5));
t2188 = cos(qJ(5));
t2121 = t2188 * t2144 + t2145 * t2183;
t2123 = -t2144 * t2183 + t2145 * t2188;
t2182 = sin(qJ(6));
t2187 = cos(qJ(6));
t2091 = t2187 * t2121 + t2123 * t2182;
t2241 = t2091 ^ 2;
t2093 = -t2121 * t2182 + t2123 * t2187;
t2240 = t2093 ^ 2;
t2239 = t2121 ^ 2;
t2238 = t2123 ^ 2;
t2237 = t2144 ^ 2;
t2236 = t2145 ^ 2;
t2235 = t2146 ^ 2;
t2234 = t2149 ^ 2;
t2233 = t2153 ^ 2;
t2232 = t2156 ^ 2;
t2231 = t2158 ^ 2;
t2230 = t2180 * g(3);
t2229 = qJD(2) * qJD(1);
t2228 = t2091 * t2093;
t2227 = t2121 * t2123;
t2226 = t2144 * t2145;
t2225 = t2149 * t2121;
t2224 = t2153 * t2144;
t2223 = t2156 * qJD(3);
t2222 = t2156 * t2158;
t2152 = t2158 * qJD(3);
t2221 = t2177 * t2192;
t2220 = qJD(4) - t2153;
t2219 = qJD(5) - t2149;
t2218 = qJD(6) - t2146;
t2207 = t2191 * g(1) + t2186 * g(2);
t2198 = -t2192 * pkin(1) + qJDD(1) * qJ(2) - t2207;
t2141 = -g(3) * t2179 + (t2198 + 0.2e1 * t2229) * t2180;
t2172 = t2180 * qJDD(1);
t2130 = -pkin(2) * t2221 + pkin(7) * t2172 + t2141;
t2214 = -0.2e1 * t2229;
t2195 = -t2230 + (t2214 + t2213 * t2192 + (-pkin(7) - qJ(2)) * qJDD(1) + t2207) * t2179;
t2100 = t2190 * t2130 + t2185 * t2195;
t2132 = pkin(3) * t2156 - pkin(8) * t2158;
t2081 = -pkin(3) * t2242 + qJDD(3) * pkin(8) - t2132 * t2156 + t2100;
t2139 = t2245 - t2223;
t2215 = t2179 * qJDD(1);
t2217 = -t2190 * t2172 + t2185 * t2215;
t2212 = -t2152 - t2217;
t2086 = (-t2139 + t2223) * pkin(8) + (-t2212 + t2152) * pkin(3) - t2134;
t2045 = -t2184 * t2081 + t2189 * t2086;
t2208 = -qJDD(4) + t2212;
t2101 = -t2208 - t2226;
t2204 = -t2184 * qJDD(3) - t2189 * t2139;
t2112 = -qJD(4) * t2144 - t2204;
t2034 = (-t2112 - t2224) * pkin(9) + t2101 * pkin(4) + t2045;
t2046 = t2189 * t2081 + t2184 * t2086;
t2129 = pkin(4) * t2153 - pkin(9) * t2145;
t2209 = -t2189 * qJDD(3) + t2184 * t2139;
t2202 = -qJD(4) * t2145 - t2209;
t2036 = -pkin(4) * t2237 + pkin(9) * t2202 - t2153 * t2129 + t2046;
t2002 = t2183 * t2034 + t2188 * t2036;
t2001 = t2188 * t2034 - t2183 * t2036;
t2196 = -t2188 * t2112 - t2183 * t2202;
t2066 = -t2121 * qJD(5) - t2196;
t2210 = t2183 * t2112 - t2188 * t2202;
t2201 = qJD(5) * t2123 + t2210;
t2211 = -t2182 * t2066 - t2187 * t2201;
t2099 = -t2185 * t2130 + t2190 * t2195;
t2203 = -qJDD(5) + t2208;
t2200 = -qJDD(6) + t2203;
t2082 = -t2203 - t2227;
t2080 = -qJDD(3) * pkin(3) - pkin(8) * t2242 + t2158 * t2132 - t2099;
t2197 = -t2187 * t2066 + t2182 * t2201;
t2042 = -t2202 * pkin(4) - t2237 * pkin(9) + t2145 * t2129 + t2080;
t2167 = t2179 * t2192 * t2180;
t2164 = -qJDD(1) * t2186 - t2191 * t2192;
t2163 = qJDD(1) * t2191 - t2186 * t2192;
t2161 = t2216 * qJDD(1);
t2160 = t2180 * t2162;
t2159 = t2179 * t2162;
t2154 = qJDD(1) * pkin(1) + t2192 * qJ(2) + t2206;
t2147 = -t2231 - t2242;
t2140 = -t2230 + (-t2198 + t2214) * t2179;
t2138 = t2245 - 0.2e1 * t2223;
t2137 = 0.2e1 * t2152 + t2217;
t2136 = -qJDD(3) - t2222;
t2135 = qJDD(3) - t2222;
t2133 = -t2232 - t2242;
t2125 = -t2231 - t2232;
t2124 = t2212 + t2152;
t2118 = -t2233 - t2236;
t2117 = t2136 * t2190 - t2147 * t2185;
t2116 = t2136 * t2185 + t2147 * t2190;
t2115 = -t2233 - t2237;
t2114 = -t2140 * t2179 + t2141 * t2180;
t2113 = t2140 * t2180 + t2141 * t2179;
t2108 = -t2236 - t2237;
t2107 = t2124 * t2190 + t2185 * t2245;
t2106 = t2124 * t2185 - t2190 * t2245;
t2105 = t2133 * t2190 - t2135 * t2185;
t2104 = t2133 * t2185 + t2135 * t2190;
t2103 = pkin(5) * t2149 - pkin(10) * t2123;
t2102 = t2208 - t2226;
t2098 = -t2234 - t2238;
t2097 = t2144 * t2220 + t2204;
t2096 = t2112 - t2224;
t2095 = -t2145 * t2220 - t2209;
t2094 = (qJD(4) + t2153) * t2145 + t2209;
t2090 = -t2116 * t2179 + t2117 * t2180;
t2089 = t2116 * t2180 + t2117 * t2179;
t2088 = -t2234 - t2239;
t2083 = t2203 - t2227;
t2079 = t2102 * t2189 - t2118 * t2184;
t2078 = t2102 * t2184 + t2118 * t2189;
t2076 = -t2106 * t2179 + t2107 * t2180;
t2075 = t2106 * t2180 + t2107 * t2179;
t2074 = -t2101 * t2184 + t2115 * t2189;
t2073 = t2101 * t2189 + t2115 * t2184;
t2072 = -t2235 - t2240;
t2071 = -t2104 * t2179 + t2105 * t2180;
t2070 = t2104 * t2180 + t2105 * t2179;
t2069 = -t2238 - t2239;
t2068 = -t2099 * t2185 + t2100 * t2190;
t2067 = t2099 * t2190 + t2100 * t2185;
t2063 = t2095 * t2189 - t2097 * t2184;
t2062 = t2095 * t2184 + t2097 * t2189;
t2061 = t2083 * t2188 - t2098 * t2183;
t2060 = t2083 * t2183 + t2098 * t2188;
t2059 = -t2235 - t2241;
t2058 = t2079 * t2190 + t2096 * t2185;
t2057 = t2079 * t2185 - t2096 * t2190;
t2056 = t2200 - t2228;
t2055 = -t2200 - t2228;
t2054 = t2074 * t2190 + t2094 * t2185;
t2053 = t2074 * t2185 - t2094 * t2190;
t2052 = t2121 * t2219 + t2196;
t2051 = t2066 - t2225;
t2050 = -t2123 * t2219 - t2210;
t2049 = (qJD(5) + t2149) * t2123 + t2210;
t2048 = -t2082 * t2183 + t2088 * t2188;
t2047 = t2082 * t2188 + t2088 * t2183;
t2044 = t2063 * t2190 + t2108 * t2185;
t2043 = t2063 * t2185 - t2108 * t2190;
t2041 = -t2240 - t2241;
t2040 = -t2067 * t2179 + t2068 * t2180;
t2039 = t2067 * t2180 + t2068 * t2179;
t2038 = t2056 * t2187 - t2072 * t2182;
t2037 = t2056 * t2182 + t2072 * t2187;
t2031 = -t2060 * t2184 + t2061 * t2189;
t2030 = t2060 * t2189 + t2061 * t2184;
t2029 = -t2055 * t2182 + t2059 * t2187;
t2028 = t2055 * t2187 + t2059 * t2182;
t2027 = -t2057 * t2179 + t2058 * t2180;
t2026 = t2057 * t2180 + t2058 * t2179;
t2025 = t2050 * t2188 - t2052 * t2183;
t2024 = t2050 * t2183 + t2052 * t2188;
t2023 = -t2053 * t2179 + t2054 * t2180;
t2022 = t2053 * t2180 + t2054 * t2179;
t2021 = -t2047 * t2184 + t2048 * t2189;
t2020 = t2047 * t2189 + t2048 * t2184;
t2019 = -t2045 * t2184 + t2046 * t2189;
t2018 = t2045 * t2189 + t2046 * t2184;
t2017 = -t2043 * t2179 + t2044 * t2180;
t2016 = t2043 * t2180 + t2044 * t2179;
t2015 = t2091 * t2218 + t2197;
t2014 = -t2091 * t2246 - t2197;
t2013 = -t2093 * t2218 + t2211;
t2012 = t2093 * t2246 - t2211;
t2011 = pkin(5) * t2201 - pkin(10) * t2239 + t2123 * t2103 + t2042;
t2010 = t2019 * t2190 + t2080 * t2185;
t2009 = t2019 * t2185 - t2080 * t2190;
t2008 = t2031 * t2190 + t2051 * t2185;
t2007 = t2031 * t2185 - t2051 * t2190;
t2006 = t2021 * t2190 + t2049 * t2185;
t2005 = t2021 * t2185 - t2049 * t2190;
t2004 = -t2037 * t2183 + t2038 * t2188;
t2003 = t2037 * t2188 + t2038 * t2183;
t2000 = -t2028 * t2183 + t2029 * t2188;
t1999 = t2028 * t2188 + t2029 * t2183;
t1998 = -t2024 * t2184 + t2025 * t2189;
t1997 = t2024 * t2189 + t2025 * t2184;
t1996 = t1998 * t2190 + t2069 * t2185;
t1995 = t1998 * t2185 - t2069 * t2190;
t1994 = -pkin(5) * t2239 - pkin(10) * t2201 - t2149 * t2103 + t2002;
t1993 = t2013 * t2187 - t2015 * t2182;
t1992 = t2013 * t2182 + t2015 * t2187;
t1991 = (-t2066 - t2225) * pkin(10) + t2082 * pkin(5) + t2001;
t1990 = -t2009 * t2179 + t2010 * t2180;
t1989 = t2009 * t2180 + t2010 * t2179;
t1988 = -t2007 * t2179 + t2008 * t2180;
t1987 = t2007 * t2180 + t2008 * t2179;
t1986 = -t2005 * t2179 + t2006 * t2180;
t1985 = t2005 * t2180 + t2006 * t2179;
t1984 = -t2003 * t2184 + t2004 * t2189;
t1983 = t2003 * t2189 + t2004 * t2184;
t1982 = -t2001 * t2183 + t2002 * t2188;
t1981 = t2001 * t2188 + t2002 * t2183;
t1980 = -t1999 * t2184 + t2000 * t2189;
t1979 = t1999 * t2189 + t2000 * t2184;
t1978 = t1984 * t2190 + t2014 * t2185;
t1977 = t1984 * t2185 - t2014 * t2190;
t1976 = -t1995 * t2179 + t1996 * t2180;
t1975 = t1995 * t2180 + t1996 * t2179;
t1974 = -t1992 * t2183 + t1993 * t2188;
t1973 = t1992 * t2188 + t1993 * t2183;
t1972 = t1991 * t2182 + t1994 * t2187;
t1971 = t1991 * t2187 - t1994 * t2182;
t1970 = t1980 * t2190 + t2012 * t2185;
t1969 = t1980 * t2185 - t2012 * t2190;
t1968 = -t1981 * t2184 + t1982 * t2189;
t1967 = t1981 * t2189 + t1982 * t2184;
t1966 = t1968 * t2190 + t2042 * t2185;
t1965 = t1968 * t2185 - t2042 * t2190;
t1964 = -t1977 * t2179 + t1978 * t2180;
t1963 = t1977 * t2180 + t1978 * t2179;
t1962 = -t1973 * t2184 + t1974 * t2189;
t1961 = t1973 * t2189 + t1974 * t2184;
t1960 = -t1971 * t2182 + t1972 * t2187;
t1959 = t1971 * t2187 + t1972 * t2182;
t1958 = -t1969 * t2179 + t1970 * t2180;
t1957 = t1969 * t2180 + t1970 * t2179;
t1956 = t1962 * t2190 + t2041 * t2185;
t1955 = t1962 * t2185 - t2041 * t2190;
t1954 = -t1965 * t2179 + t1966 * t2180;
t1953 = t1965 * t2180 + t1966 * t2179;
t1952 = -t1959 * t2183 + t1960 * t2188;
t1951 = t1959 * t2188 + t1960 * t2183;
t1950 = -t1955 * t2179 + t1956 * t2180;
t1949 = t1955 * t2180 + t1956 * t2179;
t1948 = -t1951 * t2184 + t1952 * t2189;
t1947 = t1951 * t2189 + t1952 * t2184;
t1946 = t1948 * t2190 + t2011 * t2185;
t1945 = t1948 * t2185 - t2011 * t2190;
t1944 = -t1945 * t2179 + t1946 * t2180;
t1943 = t1945 * t2180 + t1946 * t2179;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2164, -t2163, 0, -t2165 * t2186 - t2191 * t2207, 0, 0, 0, 0, 0, 0, -t2160 * t2191 - t2172 * t2186, t2159 * t2191 + t2186 * t2215, t2161 * t2191 - t2162 * t2186, t2114 * t2191 - t2154 * t2186, 0, 0, 0, 0, 0, 0, t2071 * t2191 + t2137 * t2186, t2090 * t2191 + t2138 * t2186, t2076 * t2191 + t2125 * t2186, t2040 * t2191 - t2134 * t2186, 0, 0, 0, 0, 0, 0, t2023 * t2191 + t2073 * t2186, t2027 * t2191 + t2078 * t2186, t2017 * t2191 + t2062 * t2186, t1990 * t2191 + t2018 * t2186, 0, 0, 0, 0, 0, 0, t1986 * t2191 + t2020 * t2186, t1988 * t2191 + t2030 * t2186, t1976 * t2191 + t1997 * t2186, t1954 * t2191 + t1967 * t2186, 0, 0, 0, 0, 0, 0, t1958 * t2191 + t1979 * t2186, t1964 * t2191 + t1983 * t2186, t1950 * t2191 + t1961 * t2186, t1944 * t2191 + t1947 * t2186; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2163, t2164, 0, t2165 * t2191 - t2186 * t2207, 0, 0, 0, 0, 0, 0, -t2160 * t2186 + t2172 * t2191, t2159 * t2186 - t2191 * t2215, t2161 * t2186 + t2162 * t2191, t2114 * t2186 + t2154 * t2191, 0, 0, 0, 0, 0, 0, t2071 * t2186 - t2137 * t2191, t2090 * t2186 - t2138 * t2191, t2076 * t2186 - t2125 * t2191, t2040 * t2186 + t2134 * t2191, 0, 0, 0, 0, 0, 0, t2023 * t2186 - t2073 * t2191, t2027 * t2186 - t2078 * t2191, t2017 * t2186 - t2062 * t2191, t1990 * t2186 - t2018 * t2191, 0, 0, 0, 0, 0, 0, t1986 * t2186 - t2020 * t2191, t1988 * t2186 - t2030 * t2191, t1976 * t2186 - t1997 * t2191, t1954 * t2186 - t1967 * t2191, 0, 0, 0, 0, 0, 0, t1958 * t2186 - t1979 * t2191, t1964 * t2186 - t1983 * t2191, t1950 * t2186 - t1961 * t2191, t1944 * t2186 - t1947 * t2191; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2113, 0, 0, 0, 0, 0, 0, t2070, t2089, t2075, t2039, 0, 0, 0, 0, 0, 0, t2022, t2026, t2016, t1989, 0, 0, 0, 0, 0, 0, t1985, t1987, t1975, t1953, 0, 0, 0, 0, 0, 0, t1957, t1963, t1949, t1943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2192, -qJDD(1), 0, -t2207, 0, 0, 0, 0, 0, 0, -t2160, t2159, t2161, t2114, 0, 0, 0, 0, 0, 0, t2071, t2090, t2076, t2040, 0, 0, 0, 0, 0, 0, t2023, t2027, t2017, t1990, 0, 0, 0, 0, 0, 0, t1986, t1988, t1976, t1954, 0, 0, 0, 0, 0, 0, t1958, t1964, t1950, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2192, 0, t2165, 0, 0, 0, 0, 0, 0, t2172, -t2215, t2162, t2154, 0, 0, 0, 0, 0, 0, -t2137, -t2138, -t2125, t2134, 0, 0, 0, 0, 0, 0, -t2073, -t2078, -t2062, -t2018, 0, 0, 0, 0, 0, 0, -t2020, -t2030, -t1997, -t1967, 0, 0, 0, 0, 0, 0, -t1979, -t1983, -t1961, -t1947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2113, 0, 0, 0, 0, 0, 0, t2070, t2089, t2075, t2039, 0, 0, 0, 0, 0, 0, t2022, t2026, t2016, t1989, 0, 0, 0, 0, 0, 0, t1985, t1987, t1975, t1953, 0, 0, 0, 0, 0, 0, t1957, t1963, t1949, t1943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2221, t2167, t2172, t2141, 0, 0, 0, 0, 0, 0, t2105, t2117, t2107, t2068, 0, 0, 0, 0, 0, 0, t2054, t2058, t2044, t2010, 0, 0, 0, 0, 0, 0, t2006, t2008, t1996, t1966, 0, 0, 0, 0, 0, 0, t1970, t1978, t1956, t1946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2167, -t2176 * t2192, -t2215, t2140, 0, 0, 0, 0, 0, 0, t2104, t2116, t2106, t2067, 0, 0, 0, 0, 0, 0, t2053, t2057, t2043, t2009, 0, 0, 0, 0, 0, 0, t2005, t2007, t1995, t1965, 0, 0, 0, 0, 0, 0, t1969, t1977, t1955, t1945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2172, t2215, -t2162, -t2154, 0, 0, 0, 0, 0, 0, t2137, t2138, t2125, -t2134, 0, 0, 0, 0, 0, 0, t2073, t2078, t2062, t2018, 0, 0, 0, 0, 0, 0, t2020, t2030, t1997, t1967, 0, 0, 0, 0, 0, 0, t1979, t1983, t1961, t1947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2133, t2136, t2124, t2100, 0, 0, 0, 0, 0, 0, t2074, t2079, t2063, t2019, 0, 0, 0, 0, 0, 0, t2021, t2031, t1998, t1968, 0, 0, 0, 0, 0, 0, t1980, t1984, t1962, t1948; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2135, t2147, -t2245, t2099, 0, 0, 0, 0, 0, 0, -t2094, -t2096, -t2108, -t2080, 0, 0, 0, 0, 0, 0, -t2049, -t2051, -t2069, -t2042, 0, 0, 0, 0, 0, 0, -t2012, -t2014, -t2041, -t2011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2137, t2138, t2125, -t2134, 0, 0, 0, 0, 0, 0, t2073, t2078, t2062, t2018, 0, 0, 0, 0, 0, 0, t2020, t2030, t1997, t1967, 0, 0, 0, 0, 0, 0, t1979, t1983, t1961, t1947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2115, t2102, t2095, t2046, 0, 0, 0, 0, 0, 0, t2048, t2061, t2025, t1982, 0, 0, 0, 0, 0, 0, t2000, t2004, t1974, t1952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2101, t2118, t2097, t2045, 0, 0, 0, 0, 0, 0, t2047, t2060, t2024, t1981, 0, 0, 0, 0, 0, 0, t1999, t2003, t1973, t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2094, t2096, t2108, t2080, 0, 0, 0, 0, 0, 0, t2049, t2051, t2069, t2042, 0, 0, 0, 0, 0, 0, t2012, t2014, t2041, t2011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2088, t2083, t2050, t2002, 0, 0, 0, 0, 0, 0, t2029, t2038, t1993, t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2082, t2098, t2052, t2001, 0, 0, 0, 0, 0, 0, t2028, t2037, t1992, t1959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2049, t2051, t2069, t2042, 0, 0, 0, 0, 0, 0, t2012, t2014, t2041, t2011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2059, t2056, t2013, t1972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2055, t2072, t2015, t1971; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2012, t2014, t2041, t2011;];
f_new_reg  = t1;
