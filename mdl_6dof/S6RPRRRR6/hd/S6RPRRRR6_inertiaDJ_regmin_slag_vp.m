% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR6_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:14:43
% EndTime: 2019-03-09 07:14:49
% DurationCPUTime: 2.41s
% Computational Cost: add. (4786->252), mult. (11016->429), div. (0->0), fcn. (11361->10), ass. (0->155)
t131 = cos(qJ(4));
t179 = qJD(4) * t131;
t123 = sin(pkin(11));
t124 = cos(pkin(11));
t128 = sin(qJ(3));
t183 = t128 * t124;
t200 = cos(qJ(3));
t94 = t200 * t123 + t183;
t165 = t94 * t179;
t127 = sin(qJ(4));
t134 = -t128 * t123 + t200 * t124;
t81 = t134 * qJD(3);
t192 = t127 * t81;
t208 = t165 + t192;
t207 = qJD(5) * t131 + t179;
t130 = cos(qJ(5));
t126 = sin(qJ(5));
t186 = t126 * t131;
t95 = t130 * t127 + t186;
t54 = t95 * t94;
t116 = t126 * t127;
t206 = t130 * t131 - t116;
t122 = t131 ^ 2;
t181 = t127 ^ 2 - t122;
t150 = t181 * qJD(4);
t173 = qJD(4) + qJD(5);
t115 = -t124 * pkin(2) - pkin(1);
t205 = 0.2e1 * t115;
t204 = pkin(8) + pkin(9);
t82 = t94 * qJD(3);
t203 = t82 * pkin(5);
t202 = t134 * pkin(4);
t201 = t134 * pkin(5);
t199 = t130 * pkin(4);
t198 = t94 * t81;
t197 = pkin(7) + qJ(2);
t188 = t131 * t94;
t63 = -pkin(3) * t134 - t94 * pkin(8) + t115;
t57 = t131 * t63;
t102 = t197 * t124;
t101 = t197 * t123;
t184 = t128 * t101;
t73 = t200 * t102 - t184;
t30 = -pkin(9) * t188 - t127 * t73 - t202 + t57;
t191 = t127 * t94;
t69 = t131 * t73;
t195 = t127 * t63 + t69;
t36 = -pkin(9) * t191 + t195;
t33 = t130 * t36;
t196 = t126 * t30 + t33;
t103 = t204 * t127;
t104 = t204 * t131;
t194 = -t126 * t103 + t130 * t104;
t193 = t126 * t82;
t129 = cos(qJ(6));
t14 = -t54 * pkin(10) + t196;
t190 = t129 * t14;
t189 = t131 * t81;
t125 = sin(qJ(6));
t187 = t125 * t126;
t185 = t127 * t131;
t180 = qJD(4) * t127;
t178 = qJD(5) * t126;
t177 = qJD(5) * t130;
t175 = qJD(6) * t125;
t174 = qJD(6) * t129;
t172 = -0.2e1 * pkin(3) * qJD(4);
t171 = pkin(4) * t180;
t170 = pkin(4) * t178;
t169 = pkin(4) * t177;
t168 = pkin(5) * t175;
t167 = pkin(5) * t174;
t166 = t94 * t180;
t118 = -t131 * pkin(4) - pkin(3);
t156 = -t126 * t36 + t130 * t30;
t55 = t206 * t94;
t12 = -t55 * pkin(10) + t156 - t201;
t164 = -t12 + t201;
t25 = -t173 * t54 + t206 * t81;
t159 = qJD(3) * t200;
t160 = qJD(2) * t200;
t45 = -t124 * t160 + t101 * t159 + (qJD(2) * t123 + qJD(3) * t102) * t128;
t60 = t82 * pkin(3) - t81 * pkin(8);
t155 = t127 * t45 + t131 * t60;
t17 = -pkin(9) * t189 + t82 * pkin(4) + (-t69 + (pkin(9) * t94 - t63) * t127) * qJD(4) + t155;
t22 = -t127 * t60 + t131 * t45 - t63 * t179 + t73 * t180;
t20 = -pkin(9) * t208 - t22;
t157 = -t126 * t20 + t130 * t17;
t7 = -t196 * qJD(5) + t157;
t4 = -t25 * pkin(10) + t203 + t7;
t26 = t81 * t186 - t126 * t166 - t178 * t191 + (t173 * t188 + t192) * t130;
t6 = -t126 * t17 - t130 * t20 - t30 * t177 + t36 * t178;
t5 = -t26 * pkin(10) - t6;
t163 = -t125 * t5 + t129 * t4;
t162 = qJD(4) * t204;
t161 = t127 * t179;
t158 = -qJD(6) * t12 - t5;
t117 = pkin(5) + t199;
t154 = qJD(6) * (-pkin(5) - t117);
t153 = -0.4e1 * t94 * t185;
t152 = -t130 * t103 - t126 * t104;
t46 = qJD(2) * t183 - qJD(3) * t184 + t102 * t159 + t123 * t160;
t149 = t207 * t126 + t127 * t177 + t130 * t180;
t148 = 0.2e1 * (t123 ^ 2 + t124 ^ 2) * qJD(2);
t147 = -pkin(3) * t81 - pkin(8) * t82;
t146 = pkin(3) * t94 - pkin(8) * t134;
t72 = t200 * t101 + t128 * t102;
t138 = t129 * t206;
t71 = t173 * t116 - t207 * t130;
t31 = -qJD(6) * t138 + t125 * t149 + t129 * t71 + t95 * t175;
t68 = t125 * t206 + t129 * t95;
t145 = -t134 * t31 - t68 * t82;
t144 = t46 * t94 + t72 * t81;
t143 = -t134 * t71 - t95 * t82;
t142 = -t134 * t81 + t94 * t82;
t141 = t125 * t12 + t190;
t50 = -t95 * pkin(10) + t152;
t51 = pkin(10) * t206 + t194;
t140 = t125 * t51 - t129 * t50;
t139 = t125 * t50 + t129 * t51;
t38 = t125 * t55 + t129 * t54;
t39 = -t125 * t54 + t129 * t55;
t47 = pkin(4) * t191 + t72;
t40 = t208 * pkin(4) + t46;
t135 = t127 * t82 - t134 * t179;
t100 = t131 * t162;
t99 = t127 * t162;
t42 = t126 * t100 + t103 * t177 + t104 * t178 + t130 * t99;
t2 = -qJD(6) * t141 + t163;
t43 = -t194 * qJD(5) - t130 * t100 + t126 * t99;
t133 = (t126 * t175 + (-t129 * t130 + t187) * qJD(5)) * pkin(4);
t132 = (-t126 * t174 + (-t125 * t130 - t126 * t129) * qJD(5)) * pkin(4);
t90 = t94 ^ 2;
t77 = -pkin(5) * t206 + t118;
t70 = -0.2e1 * t134 * t82;
t67 = t125 * t95 - t138;
t62 = -t117 * t175 + t132;
t61 = -t117 * t174 + t133;
t59 = t149 * pkin(5) + t171;
t58 = t131 * t82 + t134 * t180;
t41 = t134 * t149 + t206 * t82;
t37 = t54 * pkin(5) + t47;
t35 = t71 * pkin(10) + t43;
t34 = -t149 * pkin(10) - t42;
t32 = t68 * qJD(6) - t125 * t71 + t129 * t149;
t23 = -t195 * qJD(4) + t155;
t21 = t134 * t32 - t67 * t82;
t18 = t26 * pkin(5) + t40;
t13 = t14 * t175;
t11 = -qJD(6) * t139 - t125 * t34 + t129 * t35;
t10 = qJD(6) * t140 - t125 * t35 - t129 * t34;
t9 = qJD(6) * t39 + t125 * t25 + t129 * t26;
t8 = -qJD(6) * t38 - t125 * t26 + t129 * t25;
t1 = -t125 * t4 + t158 * t129 + t13;
t3 = [0, 0, 0, 0, 0, t148, qJ(2) * t148, 0.2e1 * t198, -0.2e1 * t142, 0, 0, 0, t82 * t205, t81 * t205, 0.2e1 * t122 * t198 - 0.2e1 * t161 * t90, 0.2e1 * t150 * t90 + t153 * t81, 0.2e1 * t131 * t142 + 0.2e1 * t134 * t166, -0.2e1 * t127 * t142 + 0.2e1 * t134 * t165, t70, 0.2e1 * t72 * t165 - 0.2e1 * t23 * t134 + 0.2e1 * t57 * t82 + 0.2e1 * (-t73 * t82 + t144) * t127, 0.2e1 * t131 * t144 - 0.2e1 * t134 * t22 - 0.2e1 * t166 * t72 - 0.2e1 * t195 * t82, 0.2e1 * t55 * t25, -0.2e1 * t25 * t54 - 0.2e1 * t55 * t26, -0.2e1 * t134 * t25 + 0.2e1 * t55 * t82, 0.2e1 * t134 * t26 - 0.2e1 * t54 * t82, t70, -0.2e1 * t134 * t7 + 0.2e1 * t156 * t82 + 0.2e1 * t47 * t26 + 0.2e1 * t40 * t54, -0.2e1 * t134 * t6 - 0.2e1 * t196 * t82 + 0.2e1 * t47 * t25 + 0.2e1 * t40 * t55, 0.2e1 * t39 * t8, -0.2e1 * t8 * t38 - 0.2e1 * t39 * t9, -0.2e1 * t134 * t8 + 0.2e1 * t39 * t82, 0.2e1 * t134 * t9 - 0.2e1 * t38 * t82, t70, -0.2e1 * t2 * t134 + 0.2e1 * (t129 * t12 - t125 * t14) * t82 + 0.2e1 * t18 * t38 + 0.2e1 * t37 * t9, -0.2e1 * t1 * t134 - 0.2e1 * t141 * t82 + 0.2e1 * t18 * t39 + 0.2e1 * t37 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t81, 0, 0, 0, 0, 0, t58, -t135, 0, 0, 0, 0, 0, t41, t143, 0, 0, 0, 0, 0, t21, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t82, 0, -t46, t45, -t150 * t94 + t185 * t81, qJD(4) * t153 - t181 * t81, t135, t58, 0, -t46 * t131 + t147 * t127 + (t127 * t72 - t131 * t146) * qJD(4), t46 * t127 + t147 * t131 + (t127 * t146 + t131 * t72) * qJD(4), t25 * t95 - t55 * t71, -t149 * t55 + t206 * t25 - t95 * t26 + t71 * t54, -t143, t41, 0, t118 * t26 - t134 * t43 + t149 * t47 + t152 * t82 + t171 * t54 - t206 * t40, t118 * t25 - t134 * t42 + t171 * t55 - t194 * t82 + t40 * t95 - t47 * t71, -t39 * t31 + t8 * t68, t31 * t38 - t39 * t32 - t8 * t67 - t68 * t9, -t145, t21, 0, -t11 * t134 - t140 * t82 + t18 * t67 + t37 * t32 + t59 * t38 + t77 * t9, -t10 * t134 - t139 * t82 + t18 * t68 - t37 * t31 + t59 * t39 + t77 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161, -0.2e1 * t150, 0, 0, 0, t127 * t172, t131 * t172, -0.2e1 * t95 * t71, -0.2e1 * t149 * t95 - 0.2e1 * t206 * t71, 0, 0, 0, 0.2e1 * t118 * t149 - 0.2e1 * t171 * t206, -0.2e1 * t118 * t71 + 0.2e1 * t171 * t95, -0.2e1 * t68 * t31, 0.2e1 * t31 * t67 - 0.2e1 * t68 * t32, 0, 0, 0, 0.2e1 * t77 * t32 + 0.2e1 * t59 * t67, -0.2e1 * t77 * t31 + 0.2e1 * t59 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166 + t189, -t208, t82, t23, t22, 0, 0, t25, -t26, t82, t82 * t199 + (-t33 + (-t30 + t202) * t126) * qJD(5) + t157 (t134 * t177 - t193) * pkin(4) + t6, 0, 0, t8, -t9, t82, -t62 * t134 + (-pkin(4) * t187 + t129 * t117) * t82 + t2, -t61 * t134 + t13 + (-t117 * t82 - t4) * t125 + (-pkin(4) * t193 + t158) * t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t179, 0, 0, 0, 0, 0, -t149, t71, 0, 0, 0, 0, 0, -t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, -t180, 0, -pkin(8) * t179, pkin(8) * t180, 0, 0, -t71, -t149, 0, t43, t42, 0, 0, -t31, -t32, 0, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t170, -0.2e1 * t169, 0, 0, 0, 0, 0, 0.2e1 * t62, 0.2e1 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, -t26, t82, t7, t6, 0, 0, t8, -t9, t82, t129 * t203 + (t125 * t164 - t190) * qJD(6) + t163, t13 + (-t4 - t203) * t125 + (qJD(6) * t164 - t5) * t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t149, t71, 0, 0, 0, 0, 0, -t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t149, 0, t43, t42, 0, 0, -t31, -t32, 0, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t169, 0, 0, 0, 0, 0, t125 * t154 + t132, t129 * t154 + t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t168, -0.2e1 * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, -t9, t82, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, -t32, 0, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t168, -t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
