% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:14:34
% EndTime: 2019-03-09 07:14:58
% DurationCPUTime: 10.30s
% Computational Cost: add. (23885->570), mult. (60243->750), div. (0->0), fcn. (47158->10), ass. (0->254)
t277 = sin(qJ(4));
t334 = qJD(4) * t277;
t274 = cos(pkin(11));
t387 = cos(qJ(3));
t322 = t387 * t274;
t260 = qJD(1) * t322;
t273 = sin(pkin(11));
t278 = sin(qJ(3));
t343 = t278 * t273;
t320 = qJD(1) * t343;
t231 = -t260 + t320;
t354 = t231 * t277;
t428 = t334 + t354;
t279 = cos(qJ(5));
t276 = sin(qJ(5));
t280 = cos(qJ(4));
t345 = t276 * t280;
t248 = t277 * t279 + t345;
t161 = t248 * t231;
t292 = t248 * qJD(4);
t284 = t248 * qJD(5) + t292;
t283 = t161 + t284;
t244 = t273 * t387 + t278 * t274;
t233 = t244 * qJD(1);
t329 = t280 * qJD(3);
t208 = t233 * t277 - t329;
t210 = qJD(3) * t277 + t233 * t280;
t302 = -t208 * t276 + t279 * t210;
t346 = t276 * t277;
t398 = t279 * t280 - t346;
t259 = qJD(3) * t260;
t319 = qJD(3) * t343;
t221 = qJD(1) * t319 - t259;
t149 = -qJD(4) * t329 + t280 * t221 + t233 * t334;
t335 = qJD(4) * t210;
t150 = -t221 * t277 + t335;
t331 = qJD(5) * t279;
t332 = qJD(5) * t276;
t68 = t279 * t149 + t276 * t150 + t208 * t331 + t210 * t332;
t427 = -t283 * t302 - t398 * t68;
t182 = pkin(3) * t233 + pkin(8) * t231;
t382 = pkin(7) + qJ(2);
t255 = t382 * t273;
t245 = qJD(1) * t255;
t256 = t382 * t274;
t246 = qJD(1) * t256;
t400 = -t387 * t245 - t278 * t246;
t123 = t280 * t182 - t277 * t400;
t388 = -pkin(9) - pkin(8);
t324 = qJD(4) * t388;
t426 = -pkin(4) * t233 - t123 + (-pkin(9) * t231 + t324) * t280;
t124 = t277 * t182 + t280 * t400;
t425 = pkin(9) * t354 - t277 * t324 + t124;
t136 = t279 * t208 + t210 * t276;
t275 = sin(qJ(6));
t386 = cos(qJ(6));
t409 = -t275 * t136 + t302 * t386;
t82 = t386 * t136 + t275 * t302;
t383 = t82 * t409;
t191 = -t278 * t245 + t246 * t387;
t424 = t428 * pkin(4) - t191;
t327 = qJD(4) + qJD(5);
t333 = qJD(4) * t280;
t337 = -t398 * t231 - t279 * t333 - t280 * t331 + t327 * t346;
t415 = t409 ^ 2 - t82 ^ 2;
t224 = qJD(4) + t231;
t220 = qJD(5) + t224;
t405 = pkin(10) * t302;
t265 = -pkin(2) * t274 - pkin(1);
t254 = qJD(1) * t265 + qJD(2);
t155 = pkin(3) * t231 - pkin(8) * t233 + t254;
t181 = qJD(3) * pkin(8) + t191;
t112 = t280 * t155 - t181 * t277;
t94 = -pkin(9) * t210 + t112;
t73 = pkin(4) * t224 + t94;
t113 = t155 * t277 + t181 * t280;
t95 = -pkin(9) * t208 + t113;
t89 = t276 * t95;
t43 = t279 * t73 - t89;
t31 = t43 - t405;
t29 = pkin(5) * t220 + t31;
t418 = pkin(10) * t136;
t91 = t279 * t95;
t44 = t276 * t73 + t91;
t32 = t44 - t418;
t375 = t275 * t32;
t12 = t29 * t386 - t375;
t326 = t386 * t32;
t13 = t275 * t29 + t326;
t423 = -t12 * t82 + t13 * t409;
t216 = qJD(6) + t220;
t300 = -t276 * t149 + t150 * t279 - t208 * t332 + t210 * t331;
t316 = qJD(6) * t386;
t330 = qJD(6) * t275;
t25 = t136 * t316 + t275 * t300 + t302 * t330 + t386 * t68;
t413 = t216 * t82 - t25;
t236 = t244 * qJD(3);
t222 = qJD(1) * t236;
t297 = t322 - t343;
t288 = t297 * qJD(2);
t140 = qJD(1) * t288 + qJD(3) * t400;
t165 = pkin(3) * t222 + pkin(8) * t221;
t63 = -qJD(4) * t113 - t140 * t277 + t280 * t165;
t41 = pkin(4) * t222 + pkin(9) * t149 + t63;
t62 = t280 * t140 + t155 * t333 + t277 * t165 - t181 * t334;
t47 = -pkin(9) * t150 + t62;
t9 = -qJD(5) * t44 - t276 * t47 + t279 * t41;
t6 = pkin(5) * t222 + pkin(10) * t68 + t9;
t314 = -t276 * t41 - t279 * t47 - t73 * t331 + t95 * t332;
t7 = -pkin(10) * t300 - t314;
t287 = -t275 * t6 - t29 * t316 + t32 * t330 - t386 * t7;
t180 = -qJD(3) * pkin(3) - t400;
t127 = t208 * pkin(4) + t180;
t87 = t136 * pkin(5) + t127;
t412 = t87 * t82 + t287;
t257 = t388 * t277;
t258 = t388 * t280;
t207 = t276 * t257 - t279 * t258;
t373 = -qJD(5) * t207 + t425 * t276 + t279 * t426;
t419 = t257 * t331 + t276 * t426 - t425 * t279;
t2 = -qJD(6) * t13 - t275 * t7 + t386 * t6;
t396 = -t409 * t87 + t2;
t26 = qJD(6) * t409 - t275 * t68 + t386 * t300;
t394 = t216 * t409 - t26;
t347 = t276 * t258;
t385 = pkin(10) * t248;
t417 = (t347 - t385) * qJD(5) + t419 + (-t161 - t292) * pkin(10);
t416 = pkin(5) * t233 - pkin(10) * t337 - t373;
t367 = t136 * t302;
t341 = t248 * t330 + t275 * t283 - t316 * t398 + t337 * t386;
t194 = t248 * t386 + t275 * t398;
t340 = qJD(6) * t194 - t275 * t337 + t283 * t386;
t235 = -qJD(3) * t322 + t319;
t352 = t235 * t277;
t295 = t244 * t333 - t352;
t414 = -t136 ^ 2 + t302 ^ 2;
t411 = t136 * t220 - t68;
t410 = t127 * t136 + t314;
t304 = -t112 * t224 + t62;
t404 = t113 * t224 + t63;
t311 = t224 * t277;
t403 = t210 * t311;
t186 = -pkin(3) * t297 - pkin(8) * t244 + t265;
t205 = -t278 * t255 + t256 * t387;
t196 = t280 * t205;
t126 = t277 * t186 + t196;
t399 = -t387 * t255 - t278 * t256;
t395 = -t127 * t302 + t9;
t393 = t194 * t222 - t216 * t341;
t392 = t220 * t302 - t300;
t391 = -t220 * t337 + t222 * t248;
t193 = t248 * t275 - t386 * t398;
t390 = t193 * t25 - t340 * t409;
t389 = t233 ^ 2;
t206 = t279 * t257 + t347;
t167 = t206 - t385;
t168 = pkin(10) * t398 + t207;
t117 = t275 * t167 + t168 * t386;
t381 = qJD(6) * t117 + t275 * t417 + t386 * t416;
t116 = t167 * t386 - t275 * t168;
t380 = -qJD(6) * t116 + t275 * t416 - t386 * t417;
t49 = t279 * t94 - t89;
t378 = t233 * t82;
t377 = t233 * t409;
t125 = t280 * t186 - t205 * t277;
t349 = t244 * t280;
t101 = -pkin(4) * t297 - pkin(9) * t349 + t125;
t350 = t244 * t277;
t114 = -pkin(9) * t350 + t126;
t61 = t276 * t101 + t279 * t114;
t374 = t258 * t332 + t419;
t268 = pkin(4) * t279 + pkin(5);
t321 = t386 * t276;
t48 = -t276 * t94 - t91;
t33 = t48 + t418;
t34 = t49 - t405;
t372 = -t275 * t34 + t386 * t33 + t268 * t330 - (-t276 * t316 + (-t275 * t279 - t321) * qJD(5)) * pkin(4);
t348 = t275 * t276;
t371 = -t275 * t33 - t386 * t34 + t268 * t316 + (-t276 * t330 + (t279 * t386 - t348) * qJD(5)) * pkin(4);
t368 = t136 * t233;
t366 = t302 * t233;
t289 = t244 * qJD(2);
t141 = qJD(1) * t289 + t191 * qJD(3);
t365 = t141 * t399;
t364 = t149 * t277;
t363 = t150 * t280;
t361 = t208 * t231;
t360 = t208 * t233;
t359 = t210 * t208;
t358 = t210 * t233;
t192 = t222 * t297;
t355 = t222 * t277;
t353 = t233 * t231;
t351 = t235 * t280;
t145 = t277 * t150;
t212 = t280 * t222;
t339 = pkin(5) * t283 + t424;
t338 = -t208 * t333 - t145;
t336 = t273 ^ 2 + t274 ^ 2;
t328 = qJD(1) * qJD(2);
t269 = -pkin(4) * t280 - pkin(3);
t318 = t244 * t334;
t60 = t279 * t101 - t114 * t276;
t313 = t336 * qJD(1) ^ 2;
t156 = qJD(3) * t399 + t288;
t183 = pkin(3) * t236 + pkin(8) * t235;
t312 = -t156 * t277 + t280 * t183;
t310 = t224 * t280;
t309 = -t194 * t26 + t341 * t82;
t307 = -t193 * t222 - t216 * t340;
t306 = t136 * t337 - t248 * t300;
t305 = -t220 * t283 + t222 * t398;
t158 = pkin(4) * t350 - t399;
t303 = t112 * t280 + t113 * t277;
t301 = 0.2e1 * t336 * t328;
t299 = -t428 * t224 + t212;
t174 = t398 * t244;
t45 = -pkin(5) * t297 - pkin(10) * t174 + t60;
t173 = t248 * t244;
t50 = -pkin(10) * t173 + t61;
t22 = -t275 * t50 + t386 * t45;
t23 = t275 * t45 + t386 * t50;
t120 = -t275 * t173 + t174 * t386;
t294 = -t318 - t351;
t54 = pkin(9) * t351 + pkin(4) * t236 + (-t196 + (pkin(9) * t244 - t186) * t277) * qJD(4) + t312;
t69 = t280 * t156 + t277 * t183 + t186 * t333 - t205 * t334;
t59 = -pkin(9) * t295 + t69;
t16 = t101 * t331 - t114 * t332 + t276 * t54 + t279 * t59;
t293 = -pkin(8) * t222 + t180 * t224;
t17 = -qJD(5) * t61 - t276 * t59 + t279 * t54;
t157 = qJD(3) * t205 + t289;
t122 = pkin(4) * t295 + t157;
t100 = t150 * pkin(4) + t141;
t229 = pkin(4) * t321 + t275 * t268;
t228 = -pkin(4) * t348 + t268 * t386;
t227 = t231 ^ 2;
t219 = -pkin(5) * t398 + t269;
t121 = pkin(4) * t210 + pkin(5) * t302;
t119 = t173 * t386 + t174 * t275;
t118 = pkin(5) * t173 + t158;
t78 = -t235 * t345 - t276 * t318 - t332 * t350 + (t327 * t349 - t352) * t279;
t77 = t235 * t398 + t244 * t284;
t70 = -qJD(4) * t126 + t312;
t57 = t78 * pkin(5) + t122;
t38 = pkin(5) * t300 + t100;
t28 = qJD(6) * t120 - t275 * t77 + t386 * t78;
t27 = t173 * t316 + t174 * t330 + t275 * t78 + t386 * t77;
t15 = t31 * t386 - t375;
t14 = -t275 * t31 - t326;
t11 = -pkin(10) * t78 + t16;
t10 = pkin(5) * t236 + pkin(10) * t77 + t17;
t4 = -qJD(6) * t23 + t10 * t386 - t275 * t11;
t3 = qJD(6) * t22 + t275 * t10 + t11 * t386;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, qJ(2) * t301, -t221 * t244 - t233 * t235, -t221 * t297 - t222 * t244 + t231 * t235 - t233 * t236, -t235 * qJD(3), t231 * t236 - t192, -t236 * qJD(3), 0, -qJD(3) * t157 + t222 * t265 + t236 * t254, -qJD(3) * t156 - t221 * t265 - t235 * t254, t140 * t297 + t141 * t244 - t156 * t231 + t157 * t233 - t191 * t236 - t205 * t222 + t221 * t399 + t235 * t400, t140 * t205 + t156 * t191 - t157 * t400 - t365, -t149 * t349 + t210 * t294 (t208 * t280 + t210 * t277) * t235 + (t364 - t363 + (t208 * t277 - t210 * t280) * qJD(4)) * t244, t149 * t297 + t210 * t236 + t212 * t244 + t224 * t294, t145 * t244 + t208 * t295, t150 * t297 - t208 * t236 - t222 * t350 - t224 * t295, t224 * t236 - t192, t112 * t236 + t125 * t222 + t141 * t350 - t150 * t399 + t157 * t208 + t180 * t295 + t224 * t70 - t297 * t63, -t113 * t236 - t126 * t222 + t141 * t349 + t149 * t399 + t157 * t210 + t180 * t294 - t224 * t69 + t297 * t62, t125 * t149 - t126 * t150 - t208 * t69 - t210 * t70 + t303 * t235 + (-t277 * t62 - t280 * t63 + (t112 * t277 - t113 * t280) * qJD(4)) * t244, t112 * t70 + t113 * t69 + t125 * t63 + t126 * t62 + t157 * t180 - t365, -t174 * t68 - t302 * t77, t77 * t136 + t68 * t173 - t174 * t300 - t302 * t78, t174 * t222 - t220 * t77 + t236 * t302 + t297 * t68, t136 * t78 + t173 * t300, -t136 * t236 - t173 * t222 - t78 * t220 + t297 * t300, t220 * t236 - t192, t100 * t173 + t122 * t136 + t127 * t78 + t158 * t300 + t17 * t220 + t60 * t222 + t43 * t236 - t297 * t9, t100 * t174 + t122 * t302 - t127 * t77 - t158 * t68 - t16 * t220 - t222 * t61 - t236 * t44 - t297 * t314, -t16 * t136 - t17 * t302 + t173 * t314 - t9 * t174 - t300 * t61 + t43 * t77 - t44 * t78 + t60 * t68, t100 * t158 + t122 * t127 + t16 * t44 + t17 * t43 - t314 * t61 + t60 * t9, -t120 * t25 - t27 * t409, t119 * t25 - t120 * t26 + t27 * t82 - t28 * t409, t120 * t222 - t216 * t27 + t236 * t409 + t25 * t297, t119 * t26 + t28 * t82, -t119 * t222 - t216 * t28 - t236 * t82 + t26 * t297, t216 * t236 - t192, t118 * t26 + t119 * t38 + t12 * t236 - t2 * t297 + t216 * t4 + t22 * t222 + t28 * t87 + t57 * t82, -t118 * t25 + t120 * t38 - t13 * t236 - t216 * t3 - t222 * t23 - t27 * t87 - t287 * t297 + t409 * t57, t119 * t287 + t12 * t27 - t120 * t2 - t13 * t28 + t22 * t25 - t23 * t26 - t3 * t82 - t4 * t409, t118 * t38 + t12 * t4 + t13 * t3 + t2 * t22 - t23 * t287 + t57 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, -qJ(2) * t313, 0, 0, 0, 0, 0, 0, 0.2e1 * t233 * qJD(3), t259 + (-t231 - t320) * qJD(3), -t227 - t389, t191 * t231 + t233 * t400, 0, 0, 0, 0, 0, 0, t299 - t360, -t224 ^ 2 * t280 - t355 - t358 (t149 - t361) * t280 + t403 + t338, -t180 * t233 + t304 * t277 + t280 * t404, 0, 0, 0, 0, 0, 0, t305 - t368, -t366 - t391, t306 - t427, -t127 * t233 - t248 * t314 - t283 * t43 - t337 * t44 + t398 * t9, 0, 0, 0, 0, 0, 0, t307 - t378, -t377 - t393, t309 - t390, -t12 * t340 - t13 * t341 - t193 * t2 - t194 * t287 - t233 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, -t227 + t389, t259 + (t231 - t320) * qJD(3), -t353, 0, 0 -(qJD(2) + t254) * t233, t254 * t231 - t297 * t328, 0, 0, t210 * t310 - t364 (-t149 - t361) * t280 - t403 + t338, t224 * t310 + t355 - t358, t208 * t311 - t363, t299 + t360, -t224 * t233, -pkin(3) * t150 - t112 * t233 - t141 * t280 - t191 * t208 + (-pkin(8) * t333 - t123) * t224 + t293 * t277, pkin(3) * t149 + t113 * t233 + t141 * t277 - t191 * t210 + (pkin(8) * t334 + t124) * t224 + t293 * t280, t123 * t210 + t124 * t208 + ((-t150 + t335) * pkin(8) + t304) * t280 + ((qJD(4) * t208 - t149) * pkin(8) - t404) * t277, -pkin(3) * t141 - t112 * t123 - t113 * t124 - t180 * t191 + (-qJD(4) * t303 - t277 * t63 + t280 * t62) * pkin(8), -t248 * t68 - t302 * t337, t306 + t427, -t366 + t391, t136 * t283 - t300 * t398, t305 + t368, -t220 * t233, -t100 * t398 + t283 * t127 + t136 * t424 + t206 * t222 + t373 * t220 - t43 * t233 + t269 * t300, t100 * t248 - t127 * t337 - t207 * t222 - t220 * t374 + t233 * t44 - t269 * t68 + t302 * t424, -t136 * t374 + t206 * t68 - t207 * t300 - t9 * t248 - t283 * t44 - t302 * t373 - t314 * t398 + t337 * t43, t100 * t269 + t127 * t424 + t206 * t9 - t207 * t314 + t373 * t43 + t374 * t44, -t194 * t25 - t341 * t409, t309 + t390, -t377 + t393, t193 * t26 + t340 * t82, t307 + t378, -t216 * t233, t116 * t222 - t12 * t233 + t193 * t38 - t216 * t381 + t219 * t26 + t339 * t82 + t340 * t87, -t117 * t222 + t13 * t233 + t194 * t38 + t216 * t380 - t219 * t25 + t339 * t409 - t341 * t87, t116 * t25 - t117 * t26 + t12 * t341 - t13 * t340 + t193 * t287 - t194 * t2 + t380 * t82 + t381 * t409, t116 * t2 - t117 * t287 - t12 * t381 - t13 * t380 + t219 * t38 + t339 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, -t208 ^ 2 + t210 ^ 2, t208 * t224 - t149, -t359, t210 * t224 - t150, t222, -t180 * t210 + t404, t180 * t208 - t304, 0, 0, t367, t414, t411, -t367, t392, t222, -t220 * t48 + (-t136 * t210 - t220 * t332 + t222 * t279) * pkin(4) + t395, t220 * t49 + (-t210 * t302 - t220 * t331 - t222 * t276) * pkin(4) + t410, t44 * t302 + t49 * t136 - t43 * t136 + t48 * t302 + (t279 * t68 - t276 * t300 + (-t279 * t136 + t276 * t302) * qJD(5)) * pkin(4), -t43 * t48 - t44 * t49 + (-t127 * t210 - t276 * t314 + t279 * t9 + (-t276 * t43 + t279 * t44) * qJD(5)) * pkin(4), t383, t415, t413, -t383, t394, t222, -t121 * t82 - t216 * t372 + t228 * t222 + t396, -t121 * t409 - t216 * t371 - t229 * t222 + t412, t228 * t25 - t229 * t26 - t371 * t82 + t372 * t409 + t423, -t12 * t372 - t121 * t87 + t13 * t371 + t2 * t228 - t229 * t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t414, t411, -t367, t392, t222, t220 * t44 + t395, t220 * t43 + t410, 0, 0, t383, t415, t413, -t383, t394, t222, -t14 * t216 + (-t216 * t330 + t222 * t386 - t302 * t82) * pkin(5) + t396, t15 * t216 + (-t216 * t316 - t222 * t275 - t302 * t409) * pkin(5) + t412, t14 * t409 + t15 * t82 + (t386 * t25 - t26 * t275 + (t275 * t409 - t386 * t82) * qJD(6)) * pkin(5) + t423, -t12 * t14 - t13 * t15 + (t386 * t2 - t287 * t275 - t302 * t87 + (-t12 * t275 + t13 * t386) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, t415, t413, -t383, t394, t222, t13 * t216 + t396, t12 * t216 + t412, 0, 0;];
tauc_reg  = t1;
