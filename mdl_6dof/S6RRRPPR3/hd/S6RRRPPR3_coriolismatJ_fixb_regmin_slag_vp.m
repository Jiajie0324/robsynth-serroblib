% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:30:11
% EndTime: 2019-03-09 15:30:25
% DurationCPUTime: 6.42s
% Computational Cost: add. (4996->433), mult. (9431->510), div. (0->0), fcn. (9792->6), ass. (0->329)
t295 = qJD(2) + qJD(3);
t305 = cos(qJ(2));
t481 = cos(qJ(3));
t284 = t481 * t305;
t302 = sin(qJ(3));
t303 = sin(qJ(2));
t431 = t302 * t303;
t253 = -t284 + t431;
t301 = sin(qJ(6));
t304 = cos(qJ(6));
t510 = t295 * t304;
t525 = t301 * t510;
t534 = t253 * t525;
t298 = t301 ^ 2;
t299 = t304 ^ 2;
t130 = (t298 / 0.2e1 - t299 / 0.2e1) * t253;
t70 = t130 * qJD(1) + t525;
t495 = -pkin(8) - pkin(7);
t262 = t495 * t303;
t263 = t495 * t305;
t508 = t302 * t262 - t481 * t263;
t520 = t253 * qJ(5) + t508;
t533 = t520 * qJD(4);
t496 = -pkin(4) - pkin(9);
t296 = -pkin(3) + t496;
t350 = t253 * t296;
t255 = t302 * t305 + t303 * t481;
t300 = qJ(4) + pkin(5);
t441 = t255 * t300;
t334 = t441 + t350;
t374 = t305 * pkin(2) + pkin(1);
t351 = -t481 * t262 - t302 * t263;
t106 = -t255 * qJ(5) + t351;
t527 = t301 * t106;
t31 = t527 - t304 * (t374 + t334);
t532 = (t31 - t527) * t253;
t443 = t255 * qJ(4);
t329 = t374 + t443;
t524 = t304 * t106;
t32 = t524 + (t255 * pkin(5) + t329 + t350) * t301;
t531 = (t32 - t524) * t253;
t530 = t295 * t520;
t529 = 0.2e1 * t520;
t528 = qJ(4) * t351;
t511 = t295 * t255;
t67 = t253 * t511;
t493 = -t520 / 0.2e1;
t504 = t493 + t520 / 0.2e1;
t526 = t301 * t504;
t523 = t304 * t504;
t478 = t302 * pkin(2);
t283 = qJ(4) + t478;
t522 = t351 * t283;
t293 = qJD(6) * t301;
t133 = t301 * t255;
t398 = t133 * qJD(1);
t521 = t398 + t293;
t519 = t508 * qJD(4);
t353 = t481 * qJD(2);
t289 = pkin(2) * t353;
t518 = t289 - qJD(4);
t330 = t295 * t351;
t517 = t295 * t106;
t516 = t295 * t508;
t136 = t304 * t253;
t514 = 0.2e1 * t301 * t136;
t513 = t508 * pkin(3);
t377 = -t478 / 0.2e1;
t487 = t283 / 0.2e1;
t512 = t255 * (t377 + t487);
t275 = t295 * qJ(4);
t147 = t295 * t253;
t260 = t295 * t301;
t306 = -pkin(3) - pkin(4);
t429 = t306 * t253;
t281 = pkin(5) + t283;
t509 = t281 + t300;
t498 = t255 ^ 2;
t499 = t253 ^ 2;
t110 = t499 - t498;
t163 = t499 + t498;
t506 = qJD(4) * t498;
t505 = t498 * qJD(1);
t373 = t481 * t253;
t343 = t373 / 0.2e1;
t442 = t255 * t281;
t381 = t481 * pkin(2);
t285 = -t381 - pkin(3);
t282 = -pkin(4) + t285;
t272 = -pkin(9) + t282;
t444 = t253 * t272;
t503 = t350 / 0.2e1 + t441 / 0.2e1 + t444 / 0.2e1 + t442 / 0.2e1 + (-t302 * t255 / 0.2e1 + t343) * pkin(2);
t408 = qJD(1) * t301;
t502 = -t304 * t499 * t408 + t130 * t295;
t389 = t253 * qJD(1);
t217 = t301 * t389;
t276 = t299 - t298;
t111 = 0.2e1 * t304 * t217 + t276 * t295;
t484 = -t304 / 0.2e1;
t501 = t484 * t529;
t485 = -t301 / 0.2e1;
t500 = t485 * t529;
t497 = -pkin(4) / 0.2e1;
t494 = -t106 / 0.2e1;
t492 = t508 / 0.2e1;
t243 = t255 * pkin(3);
t491 = -t243 / 0.2e1;
t490 = t272 / 0.2e1;
t489 = -t282 / 0.2e1;
t488 = t282 / 0.2e1;
t486 = -t300 / 0.2e1;
t483 = -t306 / 0.2e1;
t482 = t306 / 0.2e1;
t480 = t253 * pkin(3);
t479 = t255 * pkin(4);
t477 = t303 * pkin(2);
t241 = t253 * qJ(4);
t149 = t241 + t243;
t58 = -t253 * pkin(5) + t255 * t496 - t149;
t57 = t58 - t477;
t469 = t304 * t57;
t1 = t469 * t255 + t532;
t476 = t1 * qJD(1);
t471 = t301 * t57;
t2 = -t471 * t255 + t531;
t475 = t2 * qJD(1);
t73 = t329 + t429;
t474 = t253 * t73;
t473 = t255 * t73;
t468 = t304 * t58;
t3 = t468 * t255 + t532;
t472 = t3 * qJD(1);
t470 = t301 * t58;
t4 = -t470 * t255 + t531;
t467 = t4 * qJD(1);
t97 = -t149 - t479;
t75 = t97 - t477;
t7 = t73 * t75;
t466 = t7 * qJD(1);
t8 = t73 * t97;
t465 = t8 * qJD(1);
t132 = t301 * t253;
t23 = -t132 * t520 + t255 * t31;
t464 = qJD(1) * t23;
t24 = t136 * t520 - t255 * t32;
t463 = qJD(1) * t24;
t33 = t253 * t75 + t473;
t462 = qJD(1) * t33;
t34 = t255 * t75 - t474;
t461 = qJD(1) * t34;
t36 = t253 * t97 + t473;
t460 = qJD(1) * t36;
t37 = t255 * t97 - t474;
t459 = qJD(1) * t37;
t40 = -t106 * t255 + t253 * t520;
t458 = qJD(1) * t40;
t138 = t149 + t477;
t129 = -t329 + t480;
t449 = t129 * t255;
t44 = t138 * t253 + t449;
t457 = qJD(1) * t44;
t450 = t129 * t253;
t45 = -t138 * t255 + t450;
t456 = qJD(1) * t45;
t48 = t149 * t253 + t449;
t455 = qJD(1) * t48;
t49 = -t149 * t255 + t450;
t454 = qJD(1) * t49;
t453 = t106 * t302;
t342 = t377 + t281 / 0.2e1;
t346 = t381 / 0.2e1;
t307 = (t486 + t342) * t255 + (t490 + t346 - t296 / 0.2e1) * t253;
t356 = t106 / 0.2e1 + t494;
t16 = t301 * t356 + t304 * t307;
t448 = t16 * qJD(1);
t27 = t129 * t138;
t440 = t27 * qJD(1);
t28 = t129 * t149;
t439 = t28 * qJD(1);
t438 = t282 * t253;
t437 = t283 * t253;
t436 = t283 * t255;
t435 = t285 * t253;
t227 = -t443 / 0.2e1;
t316 = pkin(2) * t343 + t512;
t39 = t227 + (t488 + t483) * t253 + t316;
t428 = t39 * qJD(1);
t228 = t443 / 0.2e1;
t317 = -t512 - pkin(2) * t373 / 0.2e1;
t43 = t228 + (-t285 / 0.2e1 - pkin(3) / 0.2e1) * t253 + t317;
t427 = t43 * qJD(1);
t327 = -t241 / 0.2e1 + t491 - t477 / 0.2e1;
t46 = -t437 / 0.2e1 + (t497 + t488) * t255 + t327;
t426 = t46 * qJD(1);
t63 = -t241 + t491 + (t497 + t482) * t255;
t425 = t63 * qJD(1);
t81 = t163 * t301;
t424 = t81 * qJD(1);
t82 = t110 * t301;
t423 = t82 * qJD(1);
t83 = t110 * t304;
t422 = t83 * qJD(1);
t417 = t136 * qJD(5);
t416 = t132 * qJD(4);
t352 = t481 * qJD(3);
t291 = pkin(2) * t352;
t294 = qJD(4) * t304;
t413 = t304 * t291 + t294;
t385 = t283 * qJD(2);
t412 = t283 * qJD(3) + t385;
t288 = qJD(2) * t478;
t290 = qJD(3) * t478;
t411 = t288 + t290;
t116 = t253 * t477 - t255 * t374;
t410 = qJD(1) * t116;
t117 = t253 * t374 + t255 * t477;
t409 = qJD(1) * t117;
t407 = qJD(1) * t305;
t406 = qJD(2) * t281;
t405 = qJD(3) * t374;
t404 = qJD(3) * t300;
t403 = qJD(4) * t255;
t402 = qJD(4) * t301;
t401 = qJD(6) * t304;
t400 = t110 * qJD(1);
t397 = t133 * qJD(6);
t396 = t136 * qJD(1);
t141 = t276 * t499;
t395 = t141 * qJD(1);
t143 = t163 * t304;
t394 = t143 * qJD(1);
t393 = t163 * qJD(1);
t244 = t431 / 0.2e1 - t284 / 0.2e1;
t392 = t244 * qJD(1);
t388 = t253 * qJD(4);
t233 = t253 * qJD(5);
t387 = t255 * qJD(1);
t239 = t255 * qJD(5);
t277 = -t303 ^ 2 + t305 ^ 2;
t386 = t277 * qJD(1);
t384 = t303 * qJD(2);
t383 = t305 * qJD(2);
t271 = t291 + qJD(4);
t380 = pkin(1) * t303 * qJD(1);
t379 = pkin(1) * t407;
t378 = -t479 / 0.2e1;
t376 = t73 * t387;
t371 = t481 * t283;
t370 = t129 * t387;
t369 = t374 * t389;
t368 = t374 * t387;
t367 = t255 * t388;
t366 = t301 * t233;
t365 = t255 * t293;
t364 = t255 * t401;
t164 = t253 * t387;
t280 = t301 * t401;
t363 = t301 * t387;
t362 = t498 * t408;
t361 = t303 * t407;
t218 = t304 * t387;
t349 = -qJ(4) * qJD(3) - t385;
t96 = qJD(6) * t244 + t164;
t347 = qJD(6) + t387;
t339 = t253 * t260;
t338 = t253 * t510;
t185 = (t282 * t302 + t371) * pkin(2);
t323 = t106 * t487 + t489 * t520;
t324 = qJ(4) * t494 + t482 * t520;
t5 = (-t453 / 0.2e1 + t481 * t493) * pkin(2) + t323 + t324;
t336 = -t5 * qJD(1) + t185 * qJD(2);
t335 = t442 + t444;
t188 = (t285 * t302 + t371) * pkin(2);
t308 = (t481 * t492 + t351 * t302 / 0.2e1) * pkin(2) - t522 / 0.2e1 + t285 * t492;
t328 = t513 / 0.2e1 + t528 / 0.2e1;
t26 = t308 + t328;
t333 = t26 * qJD(1) + t188 * qJD(2);
t332 = t347 * t304;
t326 = t300 / 0.2e1 + t342;
t322 = t255 * t490 - t281 * t253 / 0.2e1;
t315 = t57 / 0.2e1 + t322;
t9 = t301 * t315 + t523;
t325 = -qJD(1) * t9 + t304 * t406;
t321 = t296 * t255 / 0.2e1 + t253 * t486;
t11 = -t304 * t315 + t526;
t319 = -qJD(1) * t11 + t301 * t406;
t318 = -0.2e1 * t534;
t314 = t58 / 0.2e1 + t321;
t13 = t301 * t307 - t304 * t356;
t313 = -t13 * qJD(1) - t289 * t304;
t167 = t326 * t301;
t21 = -t304 * t314 + t526;
t311 = -qJD(1) * t21 + qJD(2) * t167 + t301 * t404;
t168 = t326 * t304;
t19 = t301 * t314 + t523;
t310 = -qJD(1) * t19 + qJD(2) * t168 + t304 * t404;
t297 = qJ(4) * qJD(4);
t292 = qJ(4) * t381;
t267 = t283 * qJD(4);
t261 = t276 * qJD(6);
t219 = t304 * t388;
t184 = -t218 - t401;
t183 = t293 + t363;
t170 = t304 * t377 + t484 * t509;
t169 = t301 * t377 + t485 * t509;
t140 = t295 * t244;
t118 = t130 * qJD(6);
t99 = t271 + t289;
t76 = t255 * t483 + t378 + t491;
t66 = t347 * t514;
t62 = -t364 + t422;
t61 = t365 - t423;
t60 = -t164 * t299 + t118;
t51 = t339 - t422;
t50 = t338 + t423;
t47 = t255 * t489 + t437 / 0.2e1 + t378 + t327;
t42 = -t435 / 0.2e1 + t227 + t480 / 0.2e1 + t317;
t41 = t118 + (t299 * t389 - t525) * t255;
t38 = t438 / 0.2e1 + t429 / 0.2e1 + t228 + t316;
t35 = (qJD(6) - t387) * t514 - t276 * t511;
t25 = t308 - t328;
t22 = t468 / 0.2e1 - t321 * t304 + t500;
t20 = -t470 / 0.2e1 + t321 * t301 + t501;
t15 = t503 * t304 + t527;
t14 = t503 * t301 - t524;
t12 = t469 / 0.2e1 - t322 * t304 + t500;
t10 = -t471 / 0.2e1 + t322 * t301 + t501;
t6 = pkin(2) * t453 / 0.2e1 + t520 * t346 - t323 + t324;
t17 = [0, 0, 0, t303 * t383, t277 * qJD(2), 0, 0, 0, -pkin(1) * t384, -pkin(1) * t383, -t67, t295 * t110, 0, 0, 0, qJD(2) * t116 - t255 * t405, qJD(2) * t117 + t253 * t405, qJD(2) * t44 + qJD(3) * t48 - t367, 0, qJD(2) * t45 + qJD(3) * t49 + t506, qJD(2) * t27 + qJD(3) * t28 - t129 * t403, qJD(2) * t34 + qJD(3) * t37 + t506, qJD(2) * t33 + qJD(3) * t36 + t367, qJD(5) * t163, qJD(2) * t7 + qJD(3) * t8 + qJD(5) * t40 + t403 * t73, -t280 * t499 + t299 * t67, -t141 * qJD(6) + t255 * t318, -t253 * t365 - t295 * t83, -t253 * t364 + t295 * t82, -t67, qJD(2) * t1 + qJD(3) * t3 + qJD(5) * t81 + qJD(6) * t24 + t294 * t498, qJD(2) * t2 + qJD(3) * t4 + qJD(5) * t143 + qJD(6) * t23 - t402 * t498; 0, 0, 0, t361, t386, t383, -t384, 0, -pkin(7) * t383 - t380, pkin(7) * t384 - t379, -t164, t400, -t147, -t511, 0, t410 - t516, t330 + t409, -t516 + t457 (-t435 - t436) * qJD(2) + t42 * qJD(3) - t388, -t330 + t456, t440 + (t285 * t508 - t522) * qJD(2) + t25 * qJD(3) + t519, t461 - t517, t462 + t530 (t436 + t438) * qJD(2) + t38 * qJD(3) + t388, t466 + (-t106 * t283 + t282 * t520) * qJD(2) + t6 * qJD(3) + t533 + t47 * qJD(5), t41, t35, t51, t50, -t96, t476 + (t301 * t335 - t524) * qJD(2) + t14 * qJD(3) + t12 * qJD(6) + t416, t475 + (t304 * t335 + t527) * qJD(2) + t15 * qJD(3) + t219 + t10 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, t400, -t147, -t511, 0, -t368 - t516, t330 + t369, -t516 + t455, t42 * qJD(2) + (-t443 + t480) * qJD(3) - t388, -t330 + t454, t439 + t25 * qJD(2) + (-t513 - t528) * qJD(3) + t519, t459 - t517, t460 + t530, t38 * qJD(2) + (t429 + t443) * qJD(3) + t388, t465 + t6 * qJD(2) + (-t106 * qJ(4) + t306 * t520) * qJD(3) + t533 + t76 * qJD(5), t41, t35, t51, t50, -t96, t472 + t14 * qJD(2) + (t301 * t334 - t524) * qJD(3) + t22 * qJD(6) + t416, t467 + t15 * qJD(2) + (t304 * t334 + t527) * qJD(3) + t219 + t20 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, -t147, t505, -t370 + t516, t505, t164, t147, t376 + t530, 0, 0, 0, 0, 0, t132 * t295 + t304 * t505, t338 - t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, qJD(2) * t47 + qJD(3) * t76 + t458, 0, 0, 0, 0, 0, t424, t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, -t395 + 0.2e1 * t534, -t347 * t132, -t253 * t332, -t140, qJD(2) * t12 + qJD(3) * t22 - qJD(6) * t32 + t463, qJD(2) * t10 + qJD(3) * t20 + qJD(6) * t31 + t464; 0, 0, 0, -t361, -t386, 0, 0, 0, t380, t379, t164, -t400, 0, 0, 0, -t410, -t409, -t457, qJD(3) * t43, -t456, qJD(3) * t26 - t440, t233 - t461, -t239 - t462, qJD(3) * t39, -qJD(3) * t5 - qJD(5) * t46 - t466, t60, t66, t62, t61, t96, qJD(3) * t13 + qJD(6) * t11 + t417 - t476, qJD(3) * t16 + qJD(6) * t9 - t366 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t290, -t291, -t290, 0, t271, qJD(3) * t188 + t267, t271, t290, 0, qJD(3) * t185 + t267, t280, t261, 0, 0, 0, -t281 * t293 + t413, -t271 * t301 - t281 * t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t411, -t291 - t289, -t411, t427, t99 (-pkin(3) * t478 + t292) * qJD(3) + t267 + t333, t99, t411, t428 (t306 * t478 + t292) * qJD(3) + t267 + t336, t280, t261, 0, 0, 0, t169 * qJD(6) - t313 + t413, t448 + t170 * qJD(6) + (-qJD(4) + (-t353 - t352) * pkin(2)) * t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, t412, t295, 0, 0, t412, 0, 0, 0, 0, 0, t510, -t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t389, -t387, 0, -t426, 0, 0, 0, 0, 0, t396, -t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t111, t184, t183, t392, qJD(3) * t169 - t272 * t401 - t319, qJD(3) * t170 + t272 * t293 - t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t400, 0, 0, 0, t368, -t369, -t455, -t43 * qJD(2), -t454, -qJD(2) * t26 - t439, t233 - t459, -t239 - t460, -qJD(2) * t39, qJD(2) * t5 - qJD(5) * t63 - t465, t60, t66, t62, t61, t96, -qJD(2) * t13 + qJD(6) * t21 + t417 - t472, -qJD(2) * t16 + qJD(6) * t19 - t366 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, t289, t288, -t427, -t518, t297 - t333, -t518, -t288, -t428, t297 - t336, t280, t261, 0, 0, 0, -t167 * qJD(6) + t294 + t313, -t168 * qJD(6) + t301 * t518 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t297, qJD(4), 0, 0, t297, t280, t261, 0, 0, 0, -t293 * t300 + t294, -t300 * t401 - t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, t275, t295, 0, 0, t275, 0, 0, 0, 0, 0, t510, -t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t389, -t387, 0, -t425, 0, 0, 0, 0, 0, t396, -t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t111, t184, t183, t392, -t296 * t401 - t311, t293 * t296 - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, 0, -t505, t370, -t505, -t164, 0, -t239 - t376, 0, 0, 0, 0, 0 (-qJD(6) * t255 - t505) * t304, t362 + t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t349, -t295, 0, 0, t349, 0, 0, 0, 0, 0, -t510, t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, -t275, -t295, 0, 0, -t275, 0, 0, 0, 0, 0, -t510, t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t387, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, t521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, t511, -t393, qJD(2) * t46 + qJD(3) * t63 + t403 - t458, 0, 0, 0, 0, 0, -t136 * t295 - t397 - t424, t339 - t364 - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, t387, 0, t426, 0, 0, 0, 0, 0, -t396, t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, t387, 0, t425, 0, 0, 0, 0, 0, -t396, t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t521, -t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, t318 + t395 (t510 + t217) * t255 (t304 * t389 - t260) * t255, -t140, -qJD(2) * t11 - qJD(3) * t21 + qJD(5) * t133 + t255 * t294 - t463, -qJD(2) * t9 - qJD(3) * t19 - qJD(4) * t133 + t239 * t304 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t111, t218, -t363, -t392, qJD(3) * t167 + t319, qJD(3) * t168 + t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t111, t218, -t363, -t392, t311, t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
