% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPPR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:30:07
% EndTime: 2019-03-09 15:30:19
% DurationCPUTime: 3.84s
% Computational Cost: add. (6752->418), mult. (16094->485), div. (0->0), fcn. (11025->6), ass. (0->216)
t169 = sin(qJ(2));
t275 = qJD(2) * pkin(2);
t226 = t169 * t275;
t297 = 0.2e1 * t226;
t168 = sin(qJ(3));
t171 = cos(qJ(2));
t281 = cos(qJ(3));
t134 = t168 * t171 + t281 * t169;
t234 = qJD(1) * t134;
t291 = qJD(6) + t234;
t223 = t281 * t171;
t208 = qJD(1) * t223;
t233 = qJD(1) * t169;
t222 = t168 * t233;
t118 = -t208 + t222;
t160 = qJD(2) + qJD(3);
t167 = sin(qJ(6));
t170 = cos(qJ(6));
t95 = t167 * t118 + t170 * t160;
t216 = t291 * t95;
t230 = qJD(6) * t170;
t231 = qJD(6) * t167;
t94 = t160 * t134;
t82 = t94 * qJD(1);
t46 = t118 * t231 + t160 * t230 - t170 * t82;
t294 = t46 - t216;
t155 = -t171 * pkin(2) - pkin(1);
t138 = qJD(1) * t155;
t71 = t118 * pkin(3) - qJ(4) * t234 + t138;
t197 = qJD(5) - t71;
t283 = -pkin(4) - pkin(9);
t34 = pkin(5) * t234 + t283 * t118 + t197;
t162 = -pkin(3) + t283;
t245 = t234 * qJ(5);
t282 = -pkin(8) - pkin(7);
t139 = t282 * t169;
t136 = qJD(1) * t139;
t126 = t136 + t275;
t140 = t282 * t171;
t137 = qJD(1) * t140;
t242 = t168 * t137;
t213 = -t281 * t126 - t242;
t292 = qJD(4) + t213;
t189 = -t245 + t292;
t45 = t162 * t160 + t189;
t15 = t167 * t34 + t170 * t45;
t221 = qJD(2) * t281;
t196 = t282 * t221;
t125 = t171 * t196;
t127 = qJD(2) * t136;
t220 = qJD(3) * t281;
t232 = qJD(3) * t168;
t44 = -qJD(1) * t125 + t126 * t232 + t168 * t127 - t137 * t220;
t241 = t168 * t169;
t203 = t160 * t241;
t236 = t160 * t208;
t81 = qJD(1) * t203 - t236;
t194 = t81 * qJ(5) + t44;
t27 = -qJD(5) * t234 + t194;
t228 = qJD(1) * qJD(2);
t219 = t169 * t228;
t33 = pkin(2) * t219 + t82 * pkin(3) + t81 * qJ(4) - qJD(4) * t234;
t8 = -t81 * pkin(5) + t283 * t82 - t33;
t3 = -qJD(6) * t15 - t167 * t27 + t170 * t8;
t296 = t15 * t291 + t3;
t199 = t167 * t45 - t170 * t34;
t2 = -qJD(6) * t199 + t167 * t8 + t170 * t27;
t295 = t199 * t291 + t2;
t243 = t160 * t234;
t212 = t167 * t291;
t261 = t170 * t81;
t187 = t212 * t291 + t261;
t293 = t15 * t167 - t199 * t170;
t290 = -0.2e1 * t228;
t289 = -t3 * t167 + t2 * t170;
t92 = t281 * t136 + t242;
t249 = pkin(2) * t220 + qJD(4) - t92;
t64 = t81 * t134;
t93 = t203 + (-t220 - t221) * t171;
t35 = -t234 * t93 - t64;
t115 = t118 ^ 2;
t285 = t234 ^ 2;
t68 = -t285 + t115;
t287 = -t160 ^ 2 - t285;
t172 = -pkin(3) - pkin(4);
t280 = t234 * pkin(4);
t157 = t160 * qJD(4);
t209 = qJD(2) * t168 * t282;
t122 = t171 * t209;
t190 = -qJD(1) * t122 - t126 * t220 - t281 * t127 - t137 * t232;
t40 = t157 - t190;
t26 = -t82 * qJ(5) - t118 * qJD(5) - t40;
t133 = -t223 + t241;
t99 = t168 * t139 - t281 * t140;
t75 = t133 * qJ(5) + t99;
t278 = t26 * t75;
t98 = -t281 * t139 - t168 * t140;
t277 = t44 * t98;
t97 = t170 * t118 - t167 * t160;
t276 = t97 * t95;
t274 = t118 * t95;
t273 = t118 * t97;
t152 = t168 * pkin(2) + qJ(4);
t269 = t152 * t82;
t268 = t160 * t94;
t267 = t167 * t46;
t266 = t167 * t81;
t265 = t167 * t82;
t264 = t167 * t94;
t263 = t167 * t95;
t262 = t167 * t97;
t260 = t170 * t94;
t259 = t170 * t95;
t258 = t170 * t97;
t257 = t26 * t167;
t25 = t26 * t170;
t47 = qJD(6) * t97 + t265;
t256 = t47 * t170;
t52 = t139 * t220 + t140 * t232 + t169 * t196 + t122;
t255 = t52 * t160;
t53 = qJD(3) * t99 + t169 * t209 - t125;
t254 = t53 * t160;
t253 = t82 * qJ(4);
t252 = t213 * t160;
t124 = t281 * t137;
t87 = t168 * t126 - t124;
t251 = t87 * t160;
t85 = t93 * t160;
t250 = -t245 + t249;
t248 = t291 * t118;
t247 = t118 * qJ(5);
t246 = t118 * t160;
t244 = t234 * t118;
t174 = qJD(1) ^ 2;
t240 = t171 * t174;
t173 = qJD(2) ^ 2;
t239 = t173 * t169;
t238 = t173 * t171;
t83 = pkin(3) * t234 + t118 * qJ(4);
t235 = t169 ^ 2 - t171 ^ 2;
t227 = pkin(2) * t232;
t225 = pkin(2) * t233;
t224 = t169 * t240;
t218 = -t118 * t199 - t25;
t158 = t160 * qJ(4);
t63 = t87 + t247;
t55 = -t158 - t63;
t50 = t160 * pkin(5) - t55;
t217 = t291 * t50;
t215 = t291 * t97;
t214 = pkin(1) * t290;
t91 = t168 * t136 - t124;
t211 = t170 * t291;
t210 = -t133 * pkin(3) + t134 * qJ(4) - t155;
t154 = -t281 * pkin(2) - pkin(3);
t207 = t171 * t219;
t66 = t91 + t247;
t206 = -t66 + t227;
t205 = -t91 + t227;
t151 = -pkin(4) + t154;
t36 = t118 * t94 + t82 * t133;
t202 = -t15 * t118 + t257;
t200 = -t15 * t170 - t167 * t199;
t41 = t134 * pkin(5) + t283 * t133 + t210;
t74 = -t134 * qJ(5) + t98;
t28 = -t167 * t74 + t170 * t41;
t29 = t167 * t41 + t170 * t74;
t198 = -t47 + t215;
t73 = t225 + t83;
t39 = t94 * pkin(3) + t93 * qJ(4) - t134 * qJD(4) + t226;
t195 = t15 * t231 - t199 * t230 + t293 * t234 - t289;
t193 = -t234 * t71 - t44;
t192 = t162 * t81 - t217;
t191 = -t138 * t234 - t44;
t188 = -t211 * t291 + t266;
t38 = -t118 * pkin(5) + t234 * t283 - t83;
t186 = -t160 * t222 + t236;
t185 = -t52 * t118 + t44 * t134 + t234 * t53 - t98 * t81 - t99 * t82;
t184 = -t71 * t118 - t190;
t183 = t138 * t118 + t190;
t24 = -t82 * pkin(4) - t33;
t182 = t118 * t93 + t133 * t81 - t134 * t82 - t234 * t94;
t49 = -t118 * pkin(4) + t197;
t181 = (-qJD(5) - t49) * t234 + t194;
t145 = -pkin(9) + t151;
t180 = t145 * t81 - t227 * t291 - t217;
t179 = t186 + t246;
t178 = -qJD(6) * t293 + t289;
t177 = -t267 - t256 + (t258 + t263) * qJD(6);
t176 = t49 * t118 - t26;
t166 = qJ(4) + pkin(5);
t149 = pkin(5) + t152;
t76 = t158 + t87;
t72 = -t160 * pkin(3) + t292;
t65 = -t133 * pkin(4) + t210;
t61 = -t83 - t280;
t58 = t82 - t243;
t54 = -t73 - t280;
t48 = t172 * t160 + t189;
t37 = t38 - t225;
t32 = t93 * qJ(5) - t134 * qJD(5) + t53;
t31 = -t94 * qJ(5) - t133 * qJD(5) - t52;
t30 = -t94 * pkin(4) - t39;
t23 = t188 + t273;
t22 = t187 - t274;
t21 = t167 * t38 + t170 * t63;
t20 = -t167 * t63 + t170 * t38;
t19 = t167 * t37 + t170 * t66;
t18 = -t167 * t66 + t170 * t37;
t17 = -t212 * t95 + t256;
t16 = -t211 * t97 + t267;
t11 = -t93 * pkin(5) + t283 * t94 - t39;
t6 = (t46 + t216) * t170 + (t47 + t215) * t167;
t5 = -qJD(6) * t29 + t170 * t11 - t167 * t32;
t4 = qJD(6) * t28 + t167 * t11 + t170 * t32;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t207, t235 * t290, t238, -0.2e1 * t207, -t239, 0, -pkin(7) * t238 + t169 * t214, pkin(7) * t239 + t171 * t214, 0, 0, t35, t182, -t85, t36, -t268, 0, t138 * t94 + t155 * t82 - t254 + (qJD(1) * t133 + t118) * t226, -t138 * t93 - t155 * t81 + t234 * t297 - t255, t133 * t190 - t213 * t93 - t87 * t94 + t185, t138 * t297 - t190 * t99 + t213 * t53 + t87 * t52 + t277, t35, -t85, -t182, 0, t268, t36, t39 * t118 + t33 * t133 - t210 * t82 + t71 * t94 - t254, -t40 * t133 - t72 * t93 - t76 * t94 + t185, -t33 * t134 - t210 * t81 - t234 * t39 + t71 * t93 + t255, -t210 * t33 + t39 * t71 + t40 * t99 + t52 * t76 + t53 * t72 + t277, t36, t182, -t268, t35, -t85, 0, t24 * t134 - t31 * t160 + t234 * t30 - t49 * t93 - t65 * t81, t30 * t118 + t24 * t133 + t32 * t160 + t49 * t94 + t65 * t82, -t31 * t118 - t26 * t133 - t27 * t134 - t234 * t32 + t48 * t93 - t55 * t94 + t74 * t81 + t75 * t82, t24 * t65 + t27 * t74 + t30 * t49 + t31 * t55 + t32 * t48 - t278, t94 * t258 + (-t170 * t46 - t231 * t97) * t133 (-t259 - t262) * t94 + (t267 - t256 + (-t258 + t263) * qJD(6)) * t133, -t133 * t261 - t46 * t134 - t97 * t93 + (-t133 * t231 + t260) * t291, t94 * t263 + (t167 * t47 + t230 * t95) * t133, t133 * t266 - t47 * t134 + t95 * t93 + (-t133 * t230 - t264) * t291, -t291 * t93 - t64, t50 * t264 + t5 * t291 + t3 * t134 + t199 * t93 - t28 * t81 - t31 * t95 + t75 * t47 + (t230 * t50 - t257) * t133, t50 * t260 - t4 * t291 - t2 * t134 + t15 * t93 + t29 * t81 - t31 * t97 - t75 * t46 + (-t231 * t50 - t25) * t133, t28 * t46 - t29 * t47 - t4 * t95 - t5 * t97 - t293 * t94 + (qJD(6) * t200 - t2 * t167 - t3 * t170) * t133, t15 * t4 - t199 * t5 + t2 * t29 + t28 * t3 - t31 * t50 - t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224, t235 * t174, 0, t224, 0, 0, t174 * pkin(1) * t169, pkin(1) * t240, 0, 0, t244, -t68, t179, -t244, 0, 0, t91 * t160 + (-t118 * t233 - t160 * t232) * pkin(2) + t191, t92 * t160 + (-t160 * t220 - t233 * t234) * pkin(2) + t183 (t87 - t91) * t234 + (t213 + t92) * t118 + (t281 * t81 - t168 * t82 + (-t281 * t118 + t168 * t234) * qJD(3)) * pkin(2), -t213 * t91 - t87 * t92 + (-t138 * t233 - t281 * t44 - t168 * t190 + (t168 * t213 + t281 * t87) * qJD(3)) * pkin(2), t244, t179, t68, 0, t58, -t244, -t73 * t118 - t160 * t205 + t193, -t269 - t154 * t81 + (t205 + t76) * t234 + (t72 - t249) * t118, t160 * t249 + t234 * t73 + t157 + t184, t40 * t152 + t44 * t154 + t205 * t72 + t249 * t76 - t71 * t73, -t244, -t68, 0, t244, t179, 0, t160 * t250 - t234 * t54 + t176, -t54 * t118 + t160 * t206 + t181, t151 * t81 + t269 + (-t206 + t55) * t234 + (-t48 + t250) * t118, t27 * t151 - t26 * t152 + t206 * t48 - t250 * t55 - t49 * t54, t16, t6, t23, t17, t22, t248, t149 * t47 + t250 * t95 + (-t145 * t230 - t18) * t291 + t180 * t167 + t218, -t149 * t46 + t250 * t97 + (t145 * t231 + t19) * t291 + t180 * t170 + t202, t18 * t97 + t19 * t95 + (-t259 + t262) * t227 + t177 * t145 + t195, t145 * t178 - t26 * t149 - t15 * t19 + t18 * t199 - t200 * t227 + t250 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, -t68, t179, -t244, 0, 0, t191 + t251, t183 - t252, 0, 0, t244, t179, t68, 0, t58, -t244, -t83 * t118 + t193 + t251, pkin(3) * t81 - t253 + (t76 - t87) * t234 + (t72 - t292) * t118, t234 * t83 + 0.2e1 * t157 + t184 + t252, -pkin(3) * t44 + qJ(4) * t40 + t292 * t76 - t71 * t83 - t72 * t87, -t244, -t68, 0, t244, t179, 0, t160 * t189 - t234 * t61 + t176, -t61 * t118 - t63 * t160 + t181, t253 + t172 * t81 + (t55 + t63) * t234 + (-t48 + t189) * t118, -t26 * qJ(4) + t27 * t172 - t189 * t55 - t48 * t63 - t49 * t61, t16, t6, t23, t17, t22, t248, t166 * t47 + t189 * t95 + (-t162 * t230 - t20) * t291 + t192 * t167 + t218, -t166 * t46 + t189 * t97 + (t162 * t231 + t21) * t291 + t192 * t170 + t202, t162 * t177 + t20 * t97 + t21 * t95 + t195, -t15 * t21 + t162 * t178 - t26 * t166 + t189 * t50 + t199 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t179, t287, -t76 * t160 - t193, 0, 0, 0, 0, 0, 0, t287, -t244, t81 - t246, t55 * t160 + t181, 0, 0, 0, 0, 0, 0, -t160 * t95 + t188, -t160 * t97 + t187, -t294 * t167 + t198 * t170, -t50 * t160 - t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186 - t246, t82 + t243, -t285 - t115, t55 * t118 + t234 * t48 + t24, 0, 0, 0, 0, 0, 0, -t274 - t187, t188 - t273, t198 * t167 + t294 * t170, -t50 * t118 + t295 * t167 + t296 * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, -t95 ^ 2 + t97 ^ 2, -t294, -t276, -t265 + (-qJD(6) + t291) * t97, -t81, -t50 * t97 + t296, t50 * t95 - t295, 0, 0;];
tauc_reg  = t1;
