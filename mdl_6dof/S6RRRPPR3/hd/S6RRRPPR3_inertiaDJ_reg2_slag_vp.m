% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPPR3_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:30:07
% EndTime: 2019-03-09 15:30:14
% DurationCPUTime: 1.93s
% Computational Cost: add. (2847->206), mult. (6078->330), div. (0->0), fcn. (5531->6), ass. (0->122)
t75 = sin(qJ(6));
t72 = t75 ^ 2;
t78 = cos(qJ(6));
t73 = t78 ^ 2;
t130 = t72 - t73;
t144 = t130 * qJD(6);
t140 = cos(qJ(3));
t79 = cos(qJ(2));
t114 = t140 * t79;
t76 = sin(qJ(3));
t77 = sin(qJ(2));
t133 = t76 * t77;
t47 = -t114 + t133;
t80 = -pkin(3) - pkin(4);
t71 = -pkin(9) + t80;
t108 = t71 * t47;
t132 = t76 * t79;
t48 = t140 * t77 + t132;
t115 = t79 * pkin(2) + pkin(1);
t94 = t48 * qJ(4) + t115;
t145 = t48 * pkin(5) + t108 + t94;
t143 = qJD(2) + qJD(3);
t141 = -pkin(8) - pkin(7);
t105 = t141 * t140;
t49 = t77 * t105;
t52 = t141 * t79;
t36 = -t52 * t76 - t49;
t29 = -qJ(5) * t48 + t36;
t8 = t145 * t78 - t75 * t29;
t9 = t145 * t75 + t78 * t29;
t101 = t75 * t8 - t78 * t9;
t35 = t143 * t48;
t109 = t71 * t35;
t125 = qJD(6) * t78;
t111 = t140 * qJD(3);
t113 = t141 * qJD(2);
t95 = qJD(2) * t105;
t22 = -t52 * t111 - t79 * t95 + (qJD(3) * t141 + t113) * t133;
t34 = -qJD(2) * t114 - t79 * t111 + t133 * t143;
t14 = t34 * qJ(5) - t48 * qJD(5) + t22;
t68 = qJD(6) * t75;
t74 = qJ(4) + pkin(5);
t122 = t77 * qJD(2);
t118 = pkin(2) * t122;
t91 = t48 * qJD(4) - t118;
t3 = t29 * t68 - t78 * t14 - (t48 * t74 + t108 + t115) * t125 - t75 * (-t34 * t74 + t109 + t91);
t87 = -t34 * qJ(4) + t91;
t4 = -qJD(6) * t9 - t75 * t14 + (-t34 * pkin(5) + t109 + t87) * t78;
t142 = qJD(6) * t101 + t3 * t75 - t4 * t78;
t81 = 0.2e1 * qJD(4);
t128 = qJD(3) * t76;
t21 = -qJD(3) * t49 - t113 * t132 - t128 * t52 - t77 * t95;
t13 = -qJ(5) * t35 - qJD(5) * t47 + t21;
t139 = t13 * t47;
t12 = t13 * t78;
t37 = t133 * t141 - t140 * t52;
t30 = t47 * qJ(5) + t37;
t138 = t30 * t13;
t106 = pkin(2) * t111;
t55 = t106 + qJD(4);
t137 = t30 * t55;
t136 = t47 * t35;
t63 = pkin(2) * t76 + qJ(4);
t135 = t63 * t55;
t134 = t75 * t35;
t131 = t78 * t35;
t129 = t72 + t73;
t127 = qJD(6) * t30;
t124 = t30 * qJD(4);
t123 = t47 * qJD(4);
t121 = t79 * qJD(2);
t27 = 0.2e1 * t136;
t28 = -0.2e1 * t48 * t34;
t120 = -0.2e1 * pkin(1) * qJD(2);
t119 = t75 * t131;
t67 = pkin(2) * t128;
t117 = t75 * t125;
t116 = t77 * t121;
t112 = -t21 * t37 + t22 * t36;
t60 = pkin(5) + t63;
t110 = qJD(6) * (-t60 - t74);
t45 = t47 ^ 2;
t107 = t45 * t117;
t65 = -pkin(2) * t140 - pkin(3);
t104 = -t3 * t78 - t4 * t75;
t102 = -t75 * t9 - t78 * t8;
t100 = t34 * t47 - t35 * t48;
t61 = -pkin(4) + t65;
t57 = -pkin(9) + t61;
t99 = t47 * t60 - t48 * t57;
t98 = t47 * t74 - t48 * t71;
t39 = t129 * t67;
t97 = -qJ(4) * t35 - t123;
t96 = qJ(4) * t55 + qJD(4) * t63;
t25 = -t125 * t48 + t34 * t75;
t24 = t34 * t78 + t48 * t68;
t93 = t125 * t47 + t134;
t92 = -t47 * t68 + t131;
t90 = -t47 * t55 + t48 * t67;
t89 = 0.2e1 * t100;
t86 = 0.2e1 * t21 * t47 + 0.2e1 * t22 * t48 - 0.2e1 * t34 * t36 - 0.2e1 * t35 * t37;
t85 = t35 * t63 - t90;
t84 = t34 * t71 + t35 * t74 + t123 - t127;
t83 = qJD(6) * t102 + t104;
t82 = t34 * t57 + t35 * t60 - t127 - t90;
t70 = qJ(4) * t81;
t69 = qJD(4) * t78;
t62 = -0.2e1 * t67;
t56 = t81 + t106;
t54 = -0.2e1 * t117;
t53 = 0.2e1 * t117;
t51 = 0.2e1 * t55;
t50 = t55 * t78;
t46 = -0.2e1 * t144;
t32 = t47 * pkin(3) - t94;
t26 = t47 * t80 + t94;
t20 = t144 * t47 - t119;
t17 = t35 * pkin(3) - t87;
t15 = 0.4e1 * t117 * t47 + t130 * t35;
t10 = t35 * t80 + t87;
t1 = -t125 * t8 - t68 * t9 + t104;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t116, 0.2e1 * (-t77 ^ 2 + t79 ^ 2) * qJD(2), 0, -0.2e1 * t116, 0, 0, t77 * t120, t79 * t120, 0, 0, t28, t89, 0, t27, 0, 0, -0.2e1 * t115 * t35 + 0.2e1 * t118 * t47, 0.2e1 * t115 * t34 + 0.2e1 * t118 * t48, t86, -0.2e1 * t115 * t118 + 0.2e1 * t112, t28, 0, -0.2e1 * t100, 0, 0, t27, 0.2e1 * t17 * t47 + 0.2e1 * t32 * t35, t86, -0.2e1 * t17 * t48 + 0.2e1 * t32 * t34, 0.2e1 * t17 * t32 + 0.2e1 * t112, t27, t89, 0, t28, 0, 0, 0.2e1 * t10 * t48 - 0.2e1 * t26 * t34, 0.2e1 * t10 * t47 + 0.2e1 * t26 * t35, -0.2e1 * t14 * t48 + 0.2e1 * t29 * t34 + 0.2e1 * t30 * t35 - 0.2e1 * t139, 0.2e1 * t10 * t26 + 0.2e1 * t14 * t29 - 0.2e1 * t138, 0.2e1 * t136 * t73 - 0.2e1 * t107, -0.4e1 * t119 * t47 + 0.2e1 * t144 * t45, 0.2e1 * t131 * t48 - 0.2e1 * t24 * t47, 0.2e1 * t136 * t72 + 0.2e1 * t107, -0.2e1 * t134 * t48 + 0.2e1 * t25 * t47, t28, -0.2e1 * t139 * t75 + 0.2e1 * t30 * t93 - 0.2e1 * t8 * t34 + 0.2e1 * t4 * t48, -0.2e1 * t12 * t47 + 0.2e1 * t3 * t48 + 0.2e1 * t30 * t92 + 0.2e1 * t9 * t34, 0.2e1 * t102 * t35 + 0.2e1 * t142 * t47, -0.2e1 * t3 * t9 + 0.2e1 * t4 * t8 - 0.2e1 * t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, 0, -t122, 0, -pkin(7) * t121, pkin(7) * t122, 0, 0, 0, 0, -t34, 0, -t35, 0, -t22, t21 (t140 * t34 - t35 * t76 + (-t140 * t47 + t48 * t76) * qJD(3)) * pkin(2) (-t140 * t22 - t21 * t76 + (t140 * t37 + t36 * t76) * qJD(3)) * pkin(2), 0, -t34, 0, 0, t35, 0, -t22, -t34 * t65 - t85, -t21, -t21 * t63 + t22 * t65 + t36 * t67 + t37 * t55, 0, 0, -t35, 0, -t34, 0, -t13, t14, t34 * t61 + t85, -t13 * t63 + t14 * t61 + t29 * t67 + t137, t20, t15, t25, -t20, t24, 0, t125 * t99 + t75 * t82 - t12 (-qJD(6) * t99 + t13) * t75 + t82 * t78, -t1, -t101 * t67 - t13 * t60 + t57 * t83 + t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, -0.2e1 * t106, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, t51, 0.2e1 * t65 * t67 + 0.2e1 * t135, 0, 0, 0, 0, 0, 0, t51, 0.2e1 * t67, 0, 0.2e1 * t61 * t67 + 0.2e1 * t135, t53, t46, 0, t54, 0, 0, -0.2e1 * t60 * t68 + 0.2e1 * t50, -0.2e1 * t125 * t60 - 0.2e1 * t55 * t75, -0.2e1 * t39, 0.2e1 * t39 * t57 + 0.2e1 * t60 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, 0, -t35, 0, -t22, t21, 0, 0, 0, -t34, 0, 0, t35, 0, -t22, pkin(3) * t34 + t97, -t21, -pkin(3) * t22 - qJ(4) * t21 + qJD(4) * t37, 0, 0, -t35, 0, -t34, 0, -t13, t14, t34 * t80 - t97, -qJ(4) * t13 + t14 * t80 + t124, t20, t15, t25, -t20, t24, 0, t125 * t98 + t75 * t84 - t12 (-qJD(6) * t98 + t13) * t75 + t84 * t78, -t1, -t13 * t74 + t71 * t83 + t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t106, 0, 0, 0, 0, 0, 0, 0, 0, -t67, 0, t56, -pkin(3) * t67 + t96, 0, 0, 0, 0, 0, 0, t56, t67, 0, t67 * t80 + t96, t53, t46, 0, t54, 0, 0, t110 * t75 + t50 + t69 (-qJD(4) - t55) * t75 + t78 * t110, -t39, t60 * qJD(4) + t39 * t71 + t55 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t70, 0, 0, 0, 0, 0, 0, t81, 0, 0, t70, t53, t46, 0, t54, 0, 0, -0.2e1 * t68 * t74 + 0.2e1 * t69, -0.2e1 * qJD(4) * t75 - 0.2e1 * t125 * t74, 0, t74 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, 0, t22, 0, 0, 0, 0, 0, 0, 0, 0, t34, t14, 0, 0, 0, 0, 0, 0, t25, t24, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, t35, 0, t10, 0, 0, 0, 0, 0, 0, -t24, t25, -t129 * t35, -t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, -t93, -t34, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, 0, t68, 0, -t125 * t57 - t67 * t75, t57 * t68 - t67 * t78, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, 0, t68, 0, -t71 * t125, t71 * t68, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, t68, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, -t125, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
