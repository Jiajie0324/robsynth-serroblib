% Calculate inertial parameters regressor of coriolis matrix for
% S6RRRPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:30:15
% EndTime: 2019-03-09 15:30:32
% DurationCPUTime: 13.32s
% Computational Cost: add. (10909->605), mult. (19802->659), div. (0->0), fcn. (21367->6), ass. (0->430)
t415 = sin(qJ(6));
t419 = cos(qJ(2));
t662 = cos(qJ(3));
t397 = t662 * t419;
t416 = sin(qJ(3));
t417 = sin(qJ(2));
t592 = t416 * t417;
t363 = -t397 + t592;
t611 = t363 * qJ(5);
t678 = -pkin(8) - pkin(7);
t373 = t678 * t419;
t368 = t662 * t373;
t481 = t678 * t592;
t695 = -t368 + t481;
t709 = t695 + t611;
t676 = -t709 / 0.2e1;
t725 = t676 + t709 / 0.2e1;
t734 = t415 * t725;
t418 = cos(qJ(6));
t733 = t418 * t725;
t409 = qJD(2) + qJD(3);
t518 = t662 * pkin(2);
t398 = -t518 - pkin(3);
t395 = -pkin(4) + t398;
t384 = -pkin(9) + t395;
t508 = t662 * t417;
t365 = t416 * t419 + t508;
t484 = -t373 * t416 - t508 * t678;
t193 = -qJ(5) * t365 + t484;
t659 = t416 * pkin(2);
t396 = qJ(4) + t659;
t394 = pkin(5) + t396;
t621 = t193 * t394;
t349 = t363 * qJ(4);
t352 = t365 * pkin(3);
t243 = t349 + t352;
t679 = -pkin(4) - pkin(9);
t125 = -pkin(5) * t363 + t365 * t679 - t243;
t596 = t415 * t125;
t728 = t418 * t709;
t98 = t728 + t596;
t640 = t98 * t418;
t590 = t418 * t125;
t729 = t415 * t709;
t97 = t590 - t729;
t643 = t97 * t415;
t657 = t643 / 0.2e1 - t640 / 0.2e1;
t732 = t657 * t384 + t621 / 0.2e1;
t414 = qJ(4) + pkin(5);
t731 = -t414 / 0.2e1;
t620 = t193 * t709;
t699 = t409 * t418;
t717 = t415 * t699;
t730 = t363 * t717;
t681 = t365 ^ 2;
t682 = t363 ^ 2;
t691 = t682 - t681;
t719 = t409 * t691;
t673 = -t368 / 0.2e1;
t452 = t673 + t368 / 0.2e1;
t690 = qJD(1) * t452;
t727 = -qJD(2) * t396 - t690;
t413 = t418 ^ 2;
t412 = t415 ^ 2;
t668 = t412 / 0.2e1;
t222 = (t668 - t413 / 0.2e1) * t363;
t148 = t222 * qJD(1) + t717;
t726 = t691 * qJD(1);
t718 = t415 * t193;
t604 = t365 * t414;
t410 = -pkin(3) + t679;
t608 = t363 * t410;
t460 = t604 + t608;
t511 = pkin(2) * t419 + pkin(1);
t426 = t511 + t460;
t82 = -t418 * t426 + t718;
t724 = (t82 - t718) * t363;
t716 = t418 * t193;
t83 = t415 * t426 + t716;
t723 = (t83 - t716) * t363;
t677 = -t193 / 0.2e1;
t722 = t695 * pkin(3);
t721 = qJ(4) * t484;
t700 = t409 * t365;
t720 = t363 * t700;
t715 = t484 * t396;
t714 = t484 * t416;
t347 = t365 * qJD(5);
t529 = t452 * qJD(2);
t713 = -t347 - t529;
t407 = qJD(6) * t415;
t225 = t415 * t365;
t536 = t225 * qJD(1);
t712 = t536 + t407;
t711 = -qJ(4) * qJD(3) + t727;
t654 = qJD(2) * pkin(2);
t220 = t416 * t654 + t690;
t710 = qJD(3) * t396 - t727;
t487 = t662 * qJD(2);
t403 = pkin(2) * t487;
t707 = t403 - qJD(4);
t514 = -t659 / 0.2e1;
t706 = t514 - t394 / 0.2e1 + t731;
t705 = t409 * t484;
t704 = t409 * t193;
t333 = t611 / 0.2e1;
t703 = 0.2e1 * t333;
t228 = t418 * t363;
t702 = 0.2e1 * t415 * t228;
t510 = t662 * t363;
t603 = t365 * t416;
t701 = (-t510 / 0.2e1 + t603 / 0.2e1) * pkin(2);
t387 = t409 * qJ(4);
t240 = t409 * t363;
t371 = t409 * t415;
t420 = -pkin(3) - pkin(4);
t586 = t420 * t363;
t669 = t396 / 0.2e1;
t696 = (t514 + t669) * t365;
t567 = t412 + t413;
t132 = t567 * t365;
t655 = pkin(2) * qJD(3);
t404 = t416 * t655;
t693 = t404 + t220;
t648 = t83 * t418;
t649 = t82 * t415;
t692 = t648 + t649;
t257 = t682 + t681;
t687 = qJD(4) * t452;
t686 = qJD(4) * t681;
t684 = t681 * qJD(1);
t605 = t365 * t394;
t610 = t363 * t384;
t683 = t608 / 0.2e1 + t604 / 0.2e1 + t610 / 0.2e1 + t605 / 0.2e1 - t701;
t558 = qJD(1) * t415;
t111 = -t418 * t558 * t682 + t222 * t409;
t525 = t363 * qJD(1);
t324 = t415 * t525;
t388 = t413 - t412;
t200 = 0.2e1 * t324 * t418 + t388 * t409;
t680 = -pkin(4) / 0.2e1;
t675 = t695 / 0.2e1;
t674 = -t352 / 0.2e1;
t672 = t384 / 0.2e1;
t671 = -t395 / 0.2e1;
t670 = t395 / 0.2e1;
t667 = t414 / 0.2e1;
t664 = -t420 / 0.2e1;
t663 = t420 / 0.2e1;
t661 = t363 * pkin(3);
t660 = t365 * pkin(4);
t658 = t417 * pkin(2);
t124 = t125 - t658;
t591 = t418 * t124;
t92 = t591 - t729;
t597 = t415 * t124;
t93 = t728 + t597;
t3 = -t82 * t92 + t83 * t93 - t620;
t653 = t3 * qJD(1);
t4 = -t82 * t97 + t83 * t98 - t620;
t652 = t4 * qJD(1);
t23 = (t415 * t83 - t418 * t82) * t365;
t645 = t93 * t415;
t646 = t92 * t418;
t5 = t23 + (t645 + t646) * t363;
t651 = t5 * qJD(1);
t641 = t98 * t415;
t642 = t97 * t418;
t6 = t23 + (t641 + t642) * t363;
t650 = t6 * qJD(1);
t647 = t92 * t415;
t644 = t93 * t418;
t617 = t709 * t363;
t14 = -t365 * t692 + t617;
t637 = qJD(1) * t14;
t636 = qJD(1) * t23;
t224 = t415 * t363;
t54 = -t224 * t709 + t365 * t82;
t635 = qJD(1) * t54;
t55 = t228 * t709 - t365 * t83;
t634 = qJD(1) * t55;
t178 = -t243 - t660;
t154 = t178 - t658;
t606 = t365 * qJ(4);
t453 = t511 + t606;
t152 = t453 + t586;
t624 = t152 * t365;
t90 = t154 * t363 + t624;
t633 = qJD(1) * t90;
t625 = t152 * t363;
t91 = t154 * t365 - t625;
t632 = qJD(1) * t91;
t95 = t178 * t363 + t624;
t631 = qJD(1) * t95;
t96 = t178 * t365 - t625;
t630 = qJD(1) * t96;
t10 = (t92 + t729) * t365 + t724;
t629 = t10 * qJD(1);
t11 = (-t93 + t728) * t365 + t723;
t628 = t11 * qJD(1);
t12 = (t97 + t729) * t365 + t724;
t627 = t12 * qJD(1);
t13 = (-t98 + t728) * t365 + t723;
t626 = t13 * qJD(1);
t488 = t413 / 0.2e1 + t668;
t472 = t365 * t488;
t609 = t363 * t394;
t429 = -t384 * t472 + t609 / 0.2e1;
t450 = -t646 / 0.2e1 - t645 / 0.2e1;
t16 = t429 + t450;
t623 = t16 * qJD(1);
t607 = t363 * t414;
t428 = -t410 * t472 + t607 / 0.2e1;
t448 = -t642 / 0.2e1 - t641 / 0.2e1;
t18 = t428 + t448;
t622 = t18 * qJD(1);
t221 = -t453 + t661;
t614 = t221 * t363;
t613 = t221 * t365;
t36 = t152 * t154;
t612 = t36 * qJD(1);
t39 = t152 * t178;
t602 = t39 * qJD(1);
t601 = t395 * t363;
t600 = t396 * t363;
t599 = t396 * t365;
t598 = t398 * t363;
t474 = t514 + t394 / 0.2e1;
t480 = t518 / 0.2e1;
t421 = (t731 + t474) * t365 + (t672 + t480 - t410 / 0.2e1) * t363;
t491 = t193 / 0.2e1 + t677;
t47 = t415 * t491 + t418 * t421;
t585 = t47 * qJD(1);
t230 = t243 + t658;
t58 = t221 * t230;
t582 = t58 * qJD(1);
t59 = t221 * t243;
t581 = t59 * qJD(1);
t99 = t511 * t658;
t578 = t99 * qJD(1);
t203 = 0.2e1 * t673 + t481;
t577 = -qJD(2) * t695 - qJD(3) * t203;
t576 = -qJD(2) * t203 - qJD(3) * t695;
t574 = t228 * qJD(5);
t573 = t224 * qJD(4);
t486 = t662 * qJD(3);
t405 = pkin(2) * t486;
t408 = qJD(4) * t418;
t570 = t405 * t418 + t408;
t102 = -t193 * t365 + t617;
t566 = qJD(1) * t102;
t108 = t230 * t363 + t613;
t565 = qJD(1) * t108;
t109 = -t230 * t365 + t614;
t564 = qJD(1) * t109;
t114 = t243 * t363 + t613;
t563 = qJD(1) * t114;
t115 = -t243 * t365 + t614;
t562 = qJD(1) * t115;
t206 = t363 * t658 - t365 * t511;
t560 = qJD(1) * t206;
t207 = t363 * t511 + t365 * t658;
t559 = qJD(1) * t207;
t557 = qJD(1) * t419;
t556 = qJD(2) * t394;
t555 = qJD(3) * t511;
t554 = qJD(3) * t414;
t553 = qJD(4) * t365;
t552 = qJD(4) * t415;
t551 = qJD(6) * t418;
t335 = -t606 / 0.2e1;
t437 = t363 * t480 + t696;
t101 = t335 + (t670 + t664) * t363 + t437;
t550 = t101 * qJD(1);
t336 = t606 / 0.2e1;
t106 = t336 - t696 + (-t518 / 0.2e1 - t398 / 0.2e1 - pkin(3) / 0.2e1) * t363;
t549 = t106 * qJD(1);
t447 = -t349 / 0.2e1 + t674 - t658 / 0.2e1;
t112 = -t600 / 0.2e1 + (t680 + t670) * t365 + t447;
t548 = t112 * qJD(1);
t547 = t132 * qJD(1);
t128 = t132 * qJD(5);
t139 = -t349 + t674 + (t680 + t663) * t365;
t546 = t139 * qJD(1);
t140 = t363 * t132;
t545 = t140 * qJD(1);
t161 = t257 * t415;
t544 = t161 * qJD(1);
t162 = t691 * t415;
t543 = t162 * qJD(1);
t163 = t691 * t418;
t542 = t163 * qJD(1);
t537 = t222 * qJD(6);
t535 = t225 * qJD(6);
t534 = t228 * qJD(1);
t233 = t388 * t682;
t533 = t233 * qJD(1);
t235 = t257 * t418;
t532 = t235 * qJD(1);
t531 = t257 * qJD(1);
t250 = t452 * qJD(3);
t353 = t592 / 0.2e1 - t397 / 0.2e1;
t528 = t353 * qJD(1);
t524 = t363 * qJD(4);
t341 = t363 * qJD(5);
t523 = t365 * qJD(1);
t389 = -t417 ^ 2 + t419 ^ 2;
t522 = t389 * qJD(1);
t520 = t417 * qJD(2);
t519 = t419 * qJD(2);
t383 = t405 + qJD(4);
t517 = pkin(1) * t417 * qJD(1);
t516 = pkin(1) * t557;
t515 = -t660 / 0.2e1;
t513 = t659 / 0.2e1;
t509 = t662 * t396;
t507 = t152 * t523;
t506 = t221 * t523;
t505 = t511 * t525;
t504 = t511 * t523;
t503 = t365 * t524;
t502 = t415 * t341;
t501 = t365 * t407;
t500 = t365 * t551;
t499 = t363 * t523;
t392 = t415 * t551;
t498 = t415 * t523;
t497 = t681 * t558;
t496 = t417 * t519;
t325 = t418 * t523;
t485 = t416 * t567;
t177 = qJD(6) * t353 + t499;
t482 = qJD(6) + t523;
t479 = t682 * t392;
t476 = t662 * t676;
t470 = t363 * t371;
t469 = t363 * t699;
t467 = -t644 + t647;
t466 = -t640 + t643;
t465 = t709 * t480;
t449 = t644 / 0.2e1 - t647 / 0.2e1;
t425 = -t193 * t667 + t410 * t449;
t1 = (t476 + (-t648 / 0.2e1 - t649 / 0.2e1) * t416) * pkin(2) + t425 + t732;
t191 = (t384 * t485 + t394 * t662) * pkin(2);
t464 = -t1 * qJD(1) + t191 * qJD(2);
t351 = pkin(2) * t485;
t7 = -t449 - t657;
t463 = qJD(1) * t7 + qJD(2) * t351;
t461 = t605 + t610;
t424 = t333 + t673 + t481 / 0.2e1;
t20 = t424 - t449;
t459 = -qJD(1) * t20 - t556;
t444 = t193 * t669 + t671 * t709;
t445 = qJ(4) * t677 + t663 * t709;
t26 = (t416 * t677 + t476) * pkin(2) + t444 + t445;
t286 = (t395 * t416 + t509) * pkin(2);
t458 = -qJD(1) * t26 + qJD(2) * t286;
t290 = (t398 * t416 + t509) * pkin(2);
t422 = (t662 * t675 + t714 / 0.2e1) * pkin(2) - t715 / 0.2e1 + t398 * t675;
t451 = t722 / 0.2e1 + t721 / 0.2e1;
t57 = t422 + t451;
t457 = qJD(1) * t57 + qJD(2) * t290;
t456 = t482 * t418;
t446 = t667 + t474;
t443 = t365 * t672 - t609 / 0.2e1;
t442 = t410 * t365 / 0.2e1 - t607 / 0.2e1;
t436 = t124 / 0.2e1 + t443;
t40 = t415 * t436 + t733;
t441 = -qJD(1) * t40 + t418 * t556;
t42 = -t418 * t436 + t734;
t440 = -qJD(1) * t42 + t415 * t556;
t439 = -0.2e1 * t730;
t435 = t125 / 0.2e1 + t442;
t22 = t424 + t657;
t282 = (-0.1e1 / 0.2e1 + t488) * t659 - t414;
t434 = qJD(1) * t22 - qJD(2) * t282 + t554;
t44 = t415 * t421 - t418 * t491;
t433 = -qJD(1) * t44 - t403 * t418;
t264 = t446 * t415;
t52 = -t418 * t435 + t734;
t431 = -qJD(1) * t52 + qJD(2) * t264 + t415 * t554;
t265 = t446 * t418;
t50 = t415 * t435 + t733;
t430 = -qJD(1) * t50 + qJD(2) * t265 + t418 * t554;
t411 = qJ(4) * qJD(4);
t406 = qJ(4) * t518;
t393 = t417 * t557;
t379 = t396 * qJD(4);
t372 = t388 * qJD(6);
t329 = t351 * qJD(3);
t326 = t418 * t524;
t285 = -t325 - t551;
t284 = t407 + t498;
t283 = t488 * t659 + t414 + t513;
t267 = t706 * t418;
t266 = t706 * t415;
t232 = t409 * t353;
t181 = t383 + t403;
t155 = t365 * t664 + t515 + t674;
t147 = t203 + t611;
t143 = t482 * t702;
t142 = t703 + t695;
t136 = -t500 + t542;
t135 = t501 - t543;
t134 = -t413 * t499 + t537;
t133 = -t412 * t499 - t537;
t126 = t703 + t203;
t117 = t470 - t542;
t116 = t469 + t543;
t113 = t365 * t671 + t600 / 0.2e1 + t515 + t447;
t105 = -t599 / 0.2e1 - t598 / 0.2e1 + t335 + t661 / 0.2e1 + t701;
t104 = t537 + (t413 * t525 - t717) * t365;
t103 = -t537 + (t412 * t525 + t717) * t365;
t100 = t601 / 0.2e1 + t586 / 0.2e1 + t336 + t437;
t94 = (qJD(6) - t523) * t702 - t388 * t700;
t56 = t422 - t451;
t53 = -t729 + t590 / 0.2e1 - t442 * t418;
t51 = -t728 - t596 / 0.2e1 + t442 * t415;
t46 = t418 * t683 + t718;
t45 = t415 * t683 - t716;
t43 = -t729 + t591 / 0.2e1 - t443 * t418;
t41 = -t728 - t597 / 0.2e1 + t443 * t415;
t27 = t193 * t513 - t444 + t445 + t465;
t21 = t424 - t657;
t19 = t424 + t449;
t17 = t428 - t448;
t15 = t429 - t450;
t8 = -t449 + t657;
t2 = t513 * t692 + t425 + t465 - t732;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, t389 * qJD(2), 0, -t496, 0, 0, -pkin(1) * t520, -pkin(1) * t519, 0, 0, -t720, t719, 0, t720, 0, 0, qJD(2) * t206 - t365 * t555, qJD(2) * t207 + t363 * t555, 0, -qJD(2) * t99, -t720, 0, -t719, 0, 0, t720, qJD(2) * t108 + qJD(3) * t114 - t503, 0, qJD(2) * t109 + qJD(3) * t115 + t686, qJD(2) * t58 + qJD(3) * t59 - t221 * t553, t720, t719, 0, -t720, 0, 0, qJD(2) * t91 + qJD(3) * t96 + t686, qJD(2) * t90 + qJD(3) * t95 + t503, qJD(5) * t257, qJD(2) * t36 + qJD(3) * t39 + qJD(5) * t102 + t152 * t553, t413 * t720 - t479, -t233 * qJD(6) + t365 * t439, -t163 * t409 - t363 * t501, t412 * t720 + t479, t162 * t409 - t363 * t500, -t720, qJD(2) * t10 + qJD(3) * t12 + qJD(5) * t161 + qJD(6) * t55 + t408 * t681, qJD(2) * t11 + qJD(3) * t13 + qJD(5) * t235 + qJD(6) * t54 - t552 * t681, -qJD(2) * t5 - qJD(3) * t6 - qJD(4) * t140, qJD(2) * t3 + qJD(3) * t4 + qJD(4) * t23 + qJD(5) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t522, t519, -t393, -t520, 0, -pkin(7) * t519 - t517, pkin(7) * t520 - t516, 0, 0, -t499, t726, -t240, t499, -t700, 0, t560 + t577, t705 + t559 (t510 - t603) * t654, -t578 + (-t662 * t695 - t714) * t654, -t499, -t240, -t726, 0, t700, t499, t565 + t577 (-t598 - t599) * qJD(2) + t105 * qJD(3) - t524, -t705 + t564, t582 + (t398 * t695 - t715) * qJD(2) + t56 * qJD(3) + t203 * qJD(4), t499, t726, -t700, -t499, -t240, 0, t632 - t704, qJD(2) * t709 + qJD(3) * t147 + t633 (t599 + t601) * qJD(2) + t100 * qJD(3) + t524, t612 + (-t193 * t396 + t395 * t709) * qJD(2) + t27 * qJD(3) + t126 * qJD(4) + t113 * qJD(5), t104, t94, t117, t103, t116, -t177, t629 + (t415 * t461 - t716) * qJD(2) + t45 * qJD(3) + t43 * qJD(6) + t573, t628 + (t418 * t461 + t718) * qJD(2) + t46 * qJD(3) + t326 + t41 * qJD(6), qJD(2) * t467 + qJD(3) * t8 - t651, t653 + (-t384 * t467 - t621) * qJD(2) + t2 * qJD(3) + t19 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, t726, -t240, t499, -t700, 0, -t504 + t576, t705 + t505, 0, 0, -t499, -t240, -t726, 0, t700, t499, t563 + t576, t105 * qJD(2) + (-t606 + t661) * qJD(3) - t524, -t705 + t562, t581 + t56 * qJD(2) + (-t721 - t722) * qJD(3) + t695 * qJD(4), t499, t726, -t700, -t499, -t240, 0, t630 - t704, qJD(2) * t147 + qJD(3) * t709 + t631, t100 * qJD(2) + (t586 + t606) * qJD(3) + t524, t602 + t27 * qJD(2) + (-qJ(4) * t193 + t420 * t709) * qJD(3) + t142 * qJD(4) + t155 * qJD(5), t104, t94, t117, t103, t116, -t177, t627 + t45 * qJD(2) + (t415 * t460 - t716) * qJD(3) + t53 * qJD(6) + t573, t626 + t46 * qJD(2) + (t418 * t460 + t718) * qJD(3) + t326 + t51 * qJD(6), qJD(2) * t8 + qJD(3) * t466 - t650, t652 + t2 * qJD(2) + (-t193 * t414 - t410 * t466) * qJD(3) + t21 * qJD(4) + t17 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, -t240, t684, -t506 - t576, 0, 0, 0, 0, 0, 0, t684, t499, t240, qJD(2) * t126 + qJD(3) * t142 + t507, 0, 0, 0, 0, 0, 0, t224 * t409 + t418 * t684, t469 - t497, -t545, qJD(2) * t19 + qJD(3) * t21 + t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, qJD(2) * t113 + qJD(3) * t155 + t566, 0, 0, 0, 0, 0, 0, t544, t532, 0, qJD(2) * t15 + qJD(3) * t17 + t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t533 + 0.2e1 * t730, -t482 * t224, -t111, -t363 * t456, -t232, qJD(2) * t43 + qJD(3) * t53 - qJD(6) * t83 + t634, qJD(2) * t41 + qJD(3) * t51 + qJD(6) * t82 + t635, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, -t522, 0, t393, 0, 0, t517, t516, 0, 0, t499, -t726, 0, -t499, 0, 0, -t250 - t560, -t559, 0, t578, t499, 0, t726, 0, 0, -t499, -t250 - t565, qJD(3) * t106, -t564, qJD(3) * t57 - t582 + t687, -t499, -t726, 0, t499, 0, 0, t341 - t632, t250 - t347 - t633, qJD(3) * t101, -qJD(3) * t26 - qJD(5) * t112 - t612 + t687, t134, t143, t136, t133, t135, t177, qJD(3) * t44 + qJD(6) * t42 + t574 - t629, qJD(3) * t47 + qJD(6) * t40 - t502 - t628, -qJD(3) * t7 + t128 + t651, -qJD(3) * t1 + qJD(4) * t20 + qJD(5) * t16 - t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, -t405, 0, 0, 0, 0, 0, 0, 0, 0, -t404, 0, t383, qJD(3) * t290 + t379, 0, 0, 0, 0, 0, 0, t383, t404, 0, qJD(3) * t286 + t379, t392, t372, 0, -t392, 0, 0, -t394 * t407 + t570, -t383 * t415 - t394 * t551, -t329, qJD(3) * t191 + qJD(4) * t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t693, -t405 - t403, 0, 0, 0, 0, 0, 0, 0, 0, -t693, t549, t181 (-pkin(3) * t659 + t406) * qJD(3) + t379 + t457, 0, 0, 0, 0, 0, 0, t181, t693, t550 (t420 * t659 + t406) * qJD(3) + t379 + t458, t392, t372, 0, -t392, 0, 0, qJD(6) * t266 - t433 + t570, t585 + t267 * qJD(6) + (-qJD(4) + (-t487 - t486) * pkin(2)) * t415, -t329 - t463 (t410 * t485 + t414 * t662) * t655 + t283 * qJD(4) + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, t710, 0, 0, 0, 0, 0, 0, t409, 0, 0, t710, 0, 0, 0, 0, 0, 0, t699, -t371, 0, qJD(3) * t283 - t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525, -t523, 0, -t548, 0, 0, 0, 0, 0, 0, t534, -t324, t547, t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, t200, t285, -t148, t284, t528, qJD(3) * t266 - t384 * t551 - t440, qJD(3) * t267 + t384 * t407 - t441, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, -t726, 0, -t499, 0, 0, t529 + t504, -t505, 0, 0, t499, 0, t726, 0, 0, -t499, t529 - t563, -qJD(2) * t106, -t562, -qJD(2) * t57 - t581, -t499, -t726, 0, t499, 0, 0, t341 - t630, -t631 + t713, -qJD(2) * t101, qJD(2) * t26 - qJD(5) * t139 - t602, t134, t143, t136, t133, t135, t177, -qJD(2) * t44 + qJD(6) * t52 + t574 - t627, -qJD(2) * t47 + qJD(6) * t50 - t502 - t626, qJD(2) * t7 + t128 + t650, qJD(2) * t1 + qJD(4) * t22 + qJD(5) * t18 - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, t403, 0, 0, 0, 0, 0, 0, 0, 0, t220, -t549, -t707, t411 - t457, 0, 0, 0, 0, 0, 0, -t707, -t220, -t550, t411 - t458, t392, t372, 0, -t392, 0, 0, -qJD(6) * t264 + t408 + t433, -t265 * qJD(6) + t415 * t707 - t585, t463, -qJD(4) * t282 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t411, 0, 0, 0, 0, 0, 0, qJD(4), 0, 0, t411, t392, t372, 0, -t392, 0, 0, -t407 * t414 + t408, -t414 * t551 - t552, 0, t414 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, t387, 0, 0, 0, 0, 0, 0, t409, 0, 0, t387, 0, 0, 0, 0, 0, 0, t699, -t371, 0, t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525, -t523, 0, -t546, 0, 0, 0, 0, 0, 0, t534, -t324, t547, t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, t200, t285, -t148, t284, t528, -t410 * t551 - t431, t407 * t410 - t430, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, 0, -t684, -t529 + t506, 0, 0, 0, 0, 0, 0, -t684, -t499, 0, -t507 + t713, 0, 0, 0, 0, 0, 0 (-qJD(6) * t365 - t684) * t418, t497 + t535, t545, -qJD(2) * t20 - qJD(3) * t22 - t128 - t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, t711, 0, 0, 0, 0, 0, 0, -t409, 0, 0, t711, 0, 0, 0, 0, 0, 0, -t699, t371, 0, qJD(3) * t282 + t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, -t387, 0, 0, 0, 0, 0, 0, -t409, 0, 0, -t387, 0, 0, 0, 0, 0, 0, -t699, t371, 0, -t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t523, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t712, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t700, -t531, qJD(2) * t112 + qJD(3) * t139 + t553 - t566, 0, 0, 0, 0, 0, 0, -t228 * t409 - t535 - t544, t470 - t500 - t532, -t409 * t132, -qJD(2) * t16 - qJD(3) * t18 + qJD(4) * t132 - t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525, t523, 0, t548, 0, 0, 0, 0, 0, 0, -t534, t324, -t547, -t623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525, t523, 0, t546, 0, 0, 0, 0, 0, 0, -t534, t324, -t547, -t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -t456, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t439 + t533 (t699 + t324) * t365, t111 (t418 * t525 - t371) * t365, -t232, -qJD(2) * t42 - qJD(3) * t52 + qJD(5) * t225 + t365 * t408 - t634, -qJD(2) * t40 - qJD(3) * t50 - qJD(4) * t225 + t347 * t418 - t635, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t200, t325, t148, -t498, -t528, qJD(3) * t264 + t440, qJD(3) * t265 + t441, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t200, t325, t148, -t498, -t528, t431, t430, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, -t536, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, t325, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
