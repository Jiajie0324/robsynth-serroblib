% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRPRR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:27:46
% EndTime: 2019-03-08 22:28:25
% DurationCPUTime: 23.02s
% Computational Cost: add. (19659->813), mult. (50277->1153), div. (0->0), fcn. (43330->18), ass. (0->364)
t313 = sin(pkin(6));
t315 = cos(pkin(7));
t323 = cos(qJ(3));
t324 = cos(qJ(2));
t463 = t323 * t324;
t320 = sin(qJ(3));
t321 = sin(qJ(2));
t467 = t320 * t321;
t364 = -t315 * t467 + t463;
t231 = t364 * t313;
t441 = qJD(3) * t323;
t414 = t315 * t441;
t312 = sin(pkin(7));
t442 = qJD(3) * t320;
t416 = t312 * t442;
t455 = pkin(2) * t414 - pkin(9) * t416 - qJD(1) * t231;
t374 = pkin(3) * t320 - qJ(4) * t323;
t333 = qJD(3) * t374 - qJD(4) * t320;
t471 = t313 * t321;
t419 = qJD(1) * t471;
t539 = (t333 - t419) * t312;
t538 = -qJD(4) * t315 - t455;
t311 = sin(pkin(13));
t314 = cos(pkin(13));
t459 = t311 * t538 + t314 * t539;
t458 = t311 * t539 - t314 * t538;
t346 = (-pkin(10) * t314 * t323 + pkin(4) * t320) * t312;
t537 = qJD(3) * t346 + t459;
t415 = t312 * t441;
t386 = t311 * t415;
t536 = -pkin(10) * t386 + t458;
t465 = t321 * t323;
t466 = t320 * t324;
t366 = t315 * t465 + t466;
t230 = t366 * t313;
t469 = t315 * t320;
t472 = t312 * t323;
t256 = pkin(2) * t469 + pkin(9) * t472;
t244 = qJD(3) * t256;
t454 = -qJD(1) * t230 + t244;
t445 = qJD(2) * t323;
t293 = t312 * t445;
t319 = sin(qJ(5));
t511 = cos(qJ(5));
t357 = -t311 * t319 + t314 * t511;
t413 = qJD(5) * t511;
t440 = qJD(5) * t319;
t453 = t293 * t357 + t311 * t440 - t314 * t413;
t262 = t311 * t511 + t314 * t319;
t336 = t262 * t472;
t452 = -qJD(2) * t336 + qJD(5) * t262;
t235 = qJ(4) * t315 + t256;
t375 = -pkin(3) * t323 - qJ(4) * t320;
t236 = (-pkin(2) + t375) * t312;
t153 = -t235 * t311 + t236 * t314;
t473 = t312 * t320;
t250 = t311 * t315 + t314 * t473;
t106 = -pkin(4) * t472 - pkin(10) * t250 + t153;
t154 = t235 * t314 + t236 * t311;
t248 = t311 * t473 - t314 * t315;
t120 = -pkin(10) * t248 + t154;
t502 = t106 * t413 - t120 * t440 + t319 * t537 + t511 * t536;
t504 = pkin(10) + qJ(4);
t283 = t504 * t311;
t284 = t504 * t314;
t358 = -t283 * t511 - t284 * t319;
t447 = qJD(2) * t312;
t258 = pkin(9) * t447 + t419;
t316 = cos(pkin(6));
t449 = qJD(1) * t316;
t420 = t312 * t449;
t448 = qJD(1) * t324;
t273 = qJD(2) * pkin(2) + t313 * t448;
t480 = t273 * t315;
t356 = t420 + t480;
t155 = -t258 * t320 + t323 * t356;
t242 = t374 * t447;
t108 = -t155 * t311 + t242 * t314;
t85 = qJD(2) * t346 + t108;
t109 = t155 * t314 + t242 * t311;
t388 = t311 * t293;
t89 = -pkin(10) * t388 + t109;
t491 = qJD(4) * t357 + qJD(5) * t358 - t319 * t85 - t511 * t89;
t318 = sin(qJ(6));
t322 = cos(qJ(6));
t446 = qJD(2) * t315;
t296 = qJD(3) + t446;
t418 = t320 * t447;
t225 = t296 * t314 - t311 * t418;
t226 = t296 * t311 + t314 * t418;
t359 = t225 * t319 + t226 * t511;
t434 = t293 - qJD(5);
t118 = -t318 * t434 + t322 * t359;
t146 = -t225 * t511 + t226 * t319;
t524 = qJD(6) + t146;
t485 = t524 * t318;
t535 = t118 * t485;
t456 = pkin(4) * t386 + t454;
t156 = t258 * t323 + t320 * t356;
t135 = qJ(4) * t296 + t156;
t290 = t315 * t449;
t174 = t290 + (qJD(2) * t375 - t273) * t312;
t78 = -t135 * t311 + t174 * t314;
t60 = -pkin(4) * t293 - pkin(10) * t226 + t78;
t79 = t135 * t314 + t174 * t311;
t67 = pkin(10) * t225 + t79;
t33 = t319 * t60 + t511 * t67;
t24 = -pkin(11) * t434 + t33;
t132 = -pkin(3) * t296 + qJD(4) - t155;
t93 = -pkin(4) * t225 + t132;
t43 = pkin(5) * t146 - pkin(11) * t359 + t93;
t12 = t24 * t322 + t318 * t43;
t431 = qJDD(2) * t315;
t295 = qJDD(3) + t431;
t274 = t314 * t295;
t433 = qJD(2) * qJD(3);
t411 = t323 * t433;
t430 = qJDD(2) * t320;
t353 = t411 + t430;
t338 = t312 * t353;
t184 = t311 * t338 - t274;
t509 = pkin(4) * t184;
t470 = t313 * t324;
t292 = qJDD(1) * t470;
t417 = qJD(2) * t471;
t384 = qJD(1) * t417;
t233 = qJDD(2) * pkin(2) + t292 - t384;
t432 = qJDD(1) * t316;
t410 = t312 * t432;
t468 = t315 * t323;
t507 = pkin(9) * t312;
t525 = qJDD(2) * t507 + (qJD(2) * t448 + qJDD(1) * t321) * t313 + qJD(3) * t420;
t368 = -t233 * t468 + t258 * t441 + t320 * t525 - t323 * t410 + t442 * t480;
t514 = -pkin(3) * t295 + qJDD(4);
t68 = t368 + t514;
t47 = t68 + t509;
t479 = t295 * t311;
t185 = t314 * t338 + t479;
t65 = t184 * t319 - t185 * t511 - t225 * t413 + t226 * t440;
t397 = t184 * t511 + t185 * t319;
t515 = qJD(5) * t359;
t66 = t397 + t515;
t14 = pkin(5) * t66 + pkin(11) * t65 + t47;
t412 = t320 * t433;
t429 = qJDD(2) * t323;
t291 = t312 * t429;
t428 = qJDD(5) - t291;
t345 = t312 * t412 + t428;
t352 = t412 - t429;
t337 = t352 * t312;
t74 = t233 * t469 - t258 * t442 + t273 * t414 + t320 * t410 + t323 * t525;
t62 = qJ(4) * t295 + qJD(4) * t296 + t74;
t289 = t315 * t432;
t92 = t289 + (qJD(2) * t333 + qJDD(2) * t375 - t233) * t312;
t39 = -t311 * t62 + t314 * t92;
t31 = pkin(4) * t337 - pkin(10) * t185 + t39;
t40 = t311 * t92 + t314 * t62;
t35 = -pkin(10) * t184 + t40;
t363 = -t31 * t319 - t35 * t511 - t413 * t60 + t440 * t67;
t3 = pkin(11) * t345 - t363;
t2 = -qJD(6) * t12 + t14 * t322 - t318 * t3;
t534 = t12 * t524 + t2;
t373 = t24 * t318 - t322 * t43;
t1 = -t373 * qJD(6) + t318 * t14 + t322 * t3;
t532 = t373 * t524 + t1;
t533 = t146 ^ 2;
t531 = pkin(11) * t416 + t502;
t530 = -pkin(11) * t418 + t491;
t131 = pkin(4) * t388 + t156;
t529 = pkin(5) * t452 + pkin(11) * t453 - t131;
t385 = t314 * t415;
t113 = t248 * t413 - t511 * t385 + (qJD(5) * t250 + t386) * t319;
t176 = -t248 * t319 + t250 * t511;
t114 = qJD(3) * t336 + qJD(5) * t176;
t528 = pkin(5) * t114 + pkin(11) * t113 + t456;
t394 = t322 * t434;
t116 = t318 * t359 + t394;
t527 = t116 * t146;
t526 = t146 * t434;
t523 = t359 ^ 2;
t517 = t106 * t319 + t120 * t511;
t501 = -qJD(5) * t517 - t319 * t536 + t511 * t537;
t198 = -t283 * t319 + t284 * t511;
t489 = qJD(4) * t262 + qJD(5) * t198 - t319 * t89 + t511 * t85;
t521 = t116 * t359;
t520 = t118 * t359;
t519 = t293 * t359;
t308 = pkin(13) + qJ(5);
t304 = sin(t308);
t487 = sin(pkin(12));
t401 = t487 * t324;
t488 = cos(pkin(12));
t404 = t488 * t321;
t251 = t316 * t404 + t401;
t402 = t487 * t321;
t403 = t488 * t324;
t334 = -t316 * t403 + t402;
t330 = t334 * t323;
t406 = t313 * t488;
t380 = t312 * t406;
t138 = t251 * t320 + t315 * t330 + t323 * t380;
t252 = -t316 * t402 + t403;
t335 = t316 * t401 + t404;
t332 = t335 * t323;
t405 = t313 * t487;
t379 = t312 * t405;
t140 = t252 * t320 + t315 * t332 - t323 * t379;
t516 = t315 * t463 - t467;
t189 = -t313 * t516 - t316 * t472;
t350 = g(1) * t140 + g(2) * t138 + g(3) * t189;
t518 = t350 * t304;
t187 = t189 * t322;
t365 = t315 * t466 + t465;
t190 = t313 * t365 + t316 * t473;
t249 = -t312 * t470 + t315 * t316;
t136 = -t190 * t311 + t249 * t314;
t137 = t190 * t314 + t249 * t311;
t73 = t136 * t319 + t137 * t511;
t50 = -t318 * t73 + t187;
t439 = qJD(6) * t118;
t38 = -t318 * t65 - t322 * t345 + t439;
t377 = g(1) * t252 + g(2) * t251;
t407 = -t31 * t511 + t319 * t35;
t6 = -qJD(5) * t33 - t407;
t53 = -pkin(11) * t472 + t517;
t175 = t248 * t511 + t250 * t319;
t297 = pkin(9) * t473;
t238 = t297 + (-pkin(2) * t323 - pkin(3)) * t315;
t180 = pkin(4) * t248 + t238;
t71 = pkin(5) * t175 - pkin(11) * t176 + t180;
t25 = -t318 * t53 + t322 * t71;
t513 = qJD(6) * t25 + t318 * t528 + t322 * t531;
t26 = t318 * t71 + t322 * t53;
t512 = -qJD(6) * t26 - t318 * t531 + t322 * t528;
t508 = pkin(4) * t311;
t503 = -pkin(5) * t416 - t501;
t303 = pkin(4) * t314 + pkin(3);
t183 = -pkin(5) * t357 - pkin(11) * t262 - t303;
t111 = t183 * t322 - t198 * t318;
t500 = qJD(6) * t111 + t318 * t529 + t322 * t530;
t112 = t183 * t318 + t198 * t322;
t499 = -qJD(6) * t112 - t318 * t530 + t322 * t529;
t438 = qJD(6) * t318;
t37 = qJD(6) * t394 - t318 * t345 + t322 * t65 + t359 * t438;
t496 = t318 * t37;
t64 = qJDD(6) + t66;
t495 = t318 * t64;
t493 = t322 * t38;
t437 = qJD(6) * t322;
t492 = -t116 * t437 - t318 * t38;
t490 = pkin(5) * t418 + t489;
t486 = t118 * t116;
t484 = t359 * t146;
t483 = t189 * t318;
t482 = t262 * t318;
t481 = t262 * t322;
t478 = t304 * t312;
t305 = cos(t308);
t477 = t305 * t312;
t476 = t305 * t318;
t475 = t305 * t322;
t306 = t312 ^ 2;
t325 = qJD(2) ^ 2;
t474 = t306 * t325;
t464 = t321 * t325;
t462 = qJDD(1) - g(3);
t331 = t334 * t320;
t139 = t251 * t323 - t315 * t331 - t320 * t380;
t461 = -t138 * t303 + t139 * t504;
t141 = t252 * t323 + (-t315 * t335 + t379) * t320;
t460 = -t140 * t303 + t141 * t504;
t457 = -t189 * t303 + t190 * t504;
t426 = t312 * t471;
t451 = pkin(2) * t470 + pkin(9) * t426;
t309 = t320 ^ 2;
t310 = t323 ^ 2;
t450 = t309 - t310;
t444 = qJD(3) * t311;
t443 = qJD(3) * t314;
t436 = qJD(3) - t296;
t427 = t310 * t474;
t425 = t318 * t472;
t164 = t251 * t468 - t331;
t165 = -t251 * t469 - t330;
t245 = t334 * pkin(2);
t423 = t164 * t504 + t165 * t303 - t245;
t166 = t252 * t468 - t320 * t335;
t167 = -t252 * t469 - t332;
t246 = t335 * pkin(2);
t422 = t166 * t504 + t167 * t303 - t246;
t409 = t311 * t429;
t408 = t314 * t429;
t399 = t318 * t453 - t322 * t418;
t398 = t318 * t418 + t322 * t453;
t396 = t524 ^ 2;
t395 = t524 * t322;
t392 = t296 + t446;
t391 = t295 + t431;
t390 = t306 * t313 * t464;
t387 = t312 * t417;
t382 = t306 * t310 * t433;
t381 = t320 * t411;
t378 = -pkin(5) * t305 - pkin(11) * t304;
t372 = t230 * t504 + t231 * t303 + t426 * t508 + t451;
t51 = t322 * t73 + t483;
t371 = t225 * t314 - t226 * t311;
t370 = qJD(2) * (-t225 + t443);
t369 = qJD(2) * (-t226 + t444);
t32 = -t319 * t67 + t511 * t60;
t142 = t176 * t318 + t322 * t472;
t23 = pkin(5) * t434 - t32;
t362 = -pkin(11) * t64 + t23 * t524;
t54 = t106 * t511 - t120 * t319;
t360 = t136 * t511 - t137 * t319;
t191 = t312 * t334 - t315 * t406;
t192 = t312 * t335 + t315 * t405;
t355 = -g(1) * (-t141 * t304 + t192 * t305) - g(2) * (-t139 * t304 + t191 * t305) - g(3) * (-t190 * t304 + t249 * t305);
t125 = t190 * t305 + t249 * t304;
t81 = t139 * t305 + t191 * t304;
t83 = t141 * t305 + t192 * t304;
t354 = -g(1) * t83 - g(2) * t81 - g(3) * t125;
t101 = t165 * t304 - t251 * t477;
t103 = t167 * t304 - t252 * t477;
t170 = t231 * t304 - t305 * t426;
t351 = -g(1) * t103 - g(2) * t101 - g(3) * t170;
t349 = -g(1) * t141 - g(2) * t139 - g(3) * t190;
t348 = g(1) * t166 + g(2) * t164 + g(3) * t230;
t347 = g(1) * t167 + g(2) * t165 + g(3) * t231;
t344 = t262 * t437 - t399;
t343 = -t262 * t438 - t398;
t4 = -pkin(5) * t345 - t6;
t342 = t355 - t4;
t341 = t350 - t68;
t340 = -g(3) * t471 - t377;
t339 = -qJ(4) * t442 + (qJD(4) - t132) * t323;
t329 = pkin(11) * qJD(6) * t524 - t342;
t328 = t350 - t368;
t327 = t377 * (pkin(9) + t508) * t312;
t326 = -t328 + t514;
t279 = t320 * t323 * t474;
t255 = pkin(2) * t468 - t297;
t234 = (qJDD(2) * t310 - 0.2e1 * t381) * t306;
t214 = -t273 * t312 + t290;
t188 = -t233 * t312 + t289;
t171 = t231 * t305 + t304 * t426;
t143 = t176 * t322 - t425;
t128 = t316 * t415 + (qJD(2) * t364 + qJD(3) * t516) * t313;
t127 = t316 * t416 + (qJD(2) * t366 + qJD(3) * t365) * t313;
t104 = t167 * t305 + t252 * t478;
t102 = t165 * t305 + t251 * t478;
t99 = t128 * t314 + t311 * t387;
t98 = -t128 * t311 + t314 * t387;
t77 = pkin(5) * t359 + pkin(11) * t146;
t61 = t322 * t64;
t58 = -qJD(6) * t425 - t113 * t318 + t176 * t437 - t322 * t416;
t57 = qJD(6) * t142 + t113 * t322 - t318 * t416;
t52 = pkin(5) * t472 - t54;
t30 = qJD(5) * t73 + t319 * t99 - t511 * t98;
t29 = qJD(5) * t360 + t319 * t98 + t511 * t99;
t16 = t318 * t77 + t32 * t322;
t15 = -t318 * t32 + t322 * t77;
t10 = -qJD(6) * t51 + t127 * t322 - t29 * t318;
t9 = qJD(6) * t50 + t127 * t318 + t29 * t322;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t462, 0, 0, 0, 0, 0, 0 (qJDD(2) * t324 - t464) * t313 (-qJDD(2) * t321 - t324 * t325) * t313, 0, -g(3) + (t316 ^ 2 + (t321 ^ 2 + t324 ^ 2) * t313 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -t127 * t296 - t189 * t295 + t249 * t337 - t323 * t390, -t128 * t296 - t190 * t295 + t249 * t338 + t320 * t390 ((t189 * t320 + t190 * t323) * qJDD(2) + (t127 * t320 + t128 * t323 + (t189 * t323 - t190 * t320) * qJD(3)) * qJD(2)) * t312, -t127 * t155 + t128 * t156 + t188 * t249 + t189 * t368 + t190 * t74 + t214 * t387 - g(3), 0, 0, 0, 0, 0, 0, -t127 * t225 + t184 * t189 + (-t136 * t429 + (t136 * t442 - t323 * t98) * qJD(2)) * t312, t127 * t226 + t185 * t189 + (t137 * t429 + (-t137 * t442 + t323 * t99) * qJD(2)) * t312, -t136 * t185 - t137 * t184 + t225 * t99 - t226 * t98, t127 * t132 + t136 * t39 + t137 * t40 + t189 * t68 + t78 * t98 + t79 * t99 - g(3), 0, 0, 0, 0, 0, 0, t127 * t146 + t189 * t66 + t30 * t434 + t345 * t360, t127 * t359 - t189 * t65 + t29 * t434 - t345 * t73, -t146 * t29 + t30 * t359 + t360 * t65 - t66 * t73, t127 * t93 + t189 * t47 + t29 * t33 - t30 * t32 + t360 * t6 - t363 * t73 - g(3), 0, 0, 0, 0, 0, 0, t10 * t524 + t116 * t30 - t360 * t38 + t50 * t64, t118 * t30 + t360 * t37 - t51 * t64 - t524 * t9, -t10 * t118 - t116 * t9 + t37 * t50 - t38 * t51, t1 * t51 - t10 * t373 + t12 * t9 + t2 * t50 + t23 * t30 - t360 * t4 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), g(1) * t335 + g(2) * t334 - g(3) * t470 + t292, -t462 * t471 + t377, 0, 0 (qJDD(2) * t309 + 0.2e1 * t381) * t306, 0.2e1 * (t320 * t429 - t433 * t450) * t306 (t320 * t391 + t392 * t441) * t312, t234 (t323 * t391 - t392 * t442) * t312, t295 * t315, t255 * t295 - t315 * t368 + (-t188 * t323 + t214 * t442) * t312 - t454 * t296 + (-pkin(2) * t352 + t323 * t384) * t306 - t347, -t256 * t295 - t315 * t74 + (t188 * t320 + t214 * t441) * t312 - t455 * t296 + (-pkin(2) * t353 - t320 * t384) * t306 + t348 ((-qJD(3) * t155 + qJDD(2) * t256 + t74) * t323 + (-qJD(3) * t156 - qJDD(2) * t255 + t368) * t320 + ((-qJD(3) * t255 + t455) * t323 + (t454 - t244) * t320) * qJD(2) + t340) * t312, t74 * t256 - t368 * t255 + g(1) * t246 + g(2) * t245 - g(3) * t451 + (-pkin(2) * t188 - pkin(9) * t377 - t214 * t419) * t312 + t455 * t156 - t454 * t155, t185 * t250 + t226 * t385, -t184 * t250 - t185 * t248 + t371 * t415, -t314 * t382 + ((-qJDD(2) * t250 - t185) * t323 + (qJD(2) * t250 + t226) * t442) * t312, t184 * t248 - t225 * t386, t311 * t382 + ((qJDD(2) * t248 + t184) * t323 + (-qJD(2) * t248 + t225) * t442) * t312, t234, t238 * t184 + t68 * t248 - t454 * t225 - t347 * t314 + ((qJD(2) * t153 + t78) * t442 + t340 * t311 + (-qJD(2) * t459 - qJDD(2) * t153 + t132 * t444 - t39) * t323) * t312, t238 * t185 + t68 * t250 + t454 * t226 + t347 * t311 + ((-qJD(2) * t154 - t79) * t442 + t340 * t314 + (qJD(2) * t458 + qJDD(2) * t154 + t132 * t443 + t40) * t323) * t312, -t153 * t185 - t154 * t184 - t248 * t40 - t250 * t39 - t459 * t226 + t458 * t225 + (-t311 * t79 - t314 * t78) * t415 - t348, t40 * t154 + t39 * t153 + t68 * t238 - g(1) * (pkin(3) * t167 + qJ(4) * t166 + t252 * t507 - t246) - g(2) * (pkin(3) * t165 + qJ(4) * t164 + t251 * t507 - t245) - g(3) * (pkin(3) * t231 + qJ(4) * t230 + t451) + t458 * t79 + t459 * t78 + t454 * t132, -t113 * t359 - t176 * t65, t113 * t146 - t114 * t359 + t175 * t65 - t176 * t66, t113 * t434 + t176 * t428 + (t65 * t323 + (qJD(2) * t176 + t359) * t442) * t312, t114 * t146 + t175 * t66, t114 * t434 - t175 * t428 + (t66 * t323 + (-qJD(2) * t175 - t146) * t442) * t312 (-t428 * t323 + (-0.2e1 * t293 + qJD(5)) * t442) * t312, t54 * t428 + t180 * t66 + t47 * t175 + t93 * t114 - g(1) * t104 - g(2) * t102 - g(3) * t171 + (-t6 * t323 + (qJD(2) * t54 + t32) * t442) * t312 + t456 * t146 - t501 * t434, -t517 * t428 - t180 * t65 + t47 * t176 - t93 * t113 + (-t363 * t323 + (-qJD(2) * t517 - t33) * t442) * t312 + t456 * t359 - t351 + t502 * t434, t113 * t32 - t114 * t33 - t146 * t502 + t175 * t363 - t176 * t6 - t359 * t501 - t517 * t66 + t54 * t65 - t348, -g(1) * t422 - g(2) * t423 - g(3) * t372 + t47 * t180 + t32 * t501 + t33 * t502 - t363 * t517 + t456 * t93 + t6 * t54 - t327, -t118 * t57 - t143 * t37, t116 * t57 - t118 * t58 + t142 * t37 - t143 * t38, t114 * t118 + t143 * t64 - t175 * t37 - t524 * t57, t116 * t58 + t142 * t38, -t114 * t116 - t142 * t64 - t175 * t38 - t524 * t58, t114 * t524 + t175 * t64, t25 * t64 + t2 * t175 - t373 * t114 + t52 * t38 + t4 * t142 + t23 * t58 - g(1) * (t104 * t322 + t166 * t318) - g(2) * (t102 * t322 + t164 * t318) - g(3) * (t171 * t322 + t230 * t318) + t512 * t524 + t503 * t116, -t26 * t64 - t1 * t175 - t12 * t114 - t52 * t37 + t4 * t143 - t23 * t57 - g(1) * (-t104 * t318 + t166 * t322) - g(2) * (-t102 * t318 + t164 * t322) - g(3) * (-t171 * t318 + t230 * t322) - t513 * t524 + t503 * t118, -t1 * t142 - t116 * t513 - t118 * t512 - t12 * t58 - t143 * t2 + t25 * t37 - t26 * t38 - t373 * t57 + t351, t1 * t26 + t2 * t25 + t4 * t52 - g(1) * (pkin(5) * t104 + pkin(11) * t103 + t422) - g(2) * (pkin(5) * t102 + pkin(11) * t101 + t423) - g(3) * (pkin(5) * t171 + pkin(11) * t170 + t372) - t327 + t503 * t23 + t513 * t12 - t512 * t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, t450 * t474 (t436 * t445 + t430) * t312, t279, -t418 * t436 + t291, t295, t156 * t296 - t214 * t418 + t328, t155 * t296 - t214 * t293 - t349 - t74, 0, 0, -t226 * t293 * t314 + t185 * t311, -t184 * t311 + t185 * t314 - t293 * t371, t314 * t427 + (t320 * t369 - t409) * t312, -t184 * t314 + t225 * t388, -t311 * t427 + (t320 * t370 - t408) * t312, t279, -pkin(3) * t184 + t156 * t225 + t341 * t314 + (qJ(4) * t409 + (t108 * t323 + t311 * t339 - t320 * t78) * qJD(2)) * t312, -pkin(3) * t185 - t156 * t226 - t341 * t311 + (qJ(4) * t408 + (-t109 * t323 + t314 * t339 + t320 * t79) * qJD(2)) * t312, t108 * t226 - t109 * t225 + (-qJ(4) * t184 + qJD(4) * t225 + t293 * t78 + t40) * t314 + (qJ(4) * t185 + qJD(4) * t226 + t293 * t79 - t39) * t311 + t349, -t78 * t108 - t79 * t109 - t132 * t156 + (-t311 * t78 + t314 * t79) * qJD(4) + t341 * pkin(3) + (-t311 * t39 + t314 * t40 + t349) * qJ(4), -t262 * t65 - t359 * t453, t146 * t453 - t262 * t66 - t357 * t65 - t359 * t452, t262 * t345 - t359 * t418 + t434 * t453, t146 * t452 - t357 * t66, t146 * t418 + t345 * t357 + t434 * t452, t434 * t418, -t131 * t146 - t303 * t66 + t305 * t350 - t32 * t418 + t345 * t358 - t357 * t47 + t434 * t489 + t452 * t93, -t131 * t359 - t198 * t345 + t47 * t262 + t303 * t65 + t33 * t418 + t434 * t491 - t453 * t93 - t518, -t146 * t491 - t198 * t66 - t262 * t6 + t32 * t453 - t33 * t452 - t357 * t363 + t358 * t65 + t359 * t489 + t349, -g(1) * t460 - g(2) * t461 - g(3) * t457 - t131 * t93 - t198 * t363 - t303 * t47 - t32 * t489 + t33 * t491 + t358 * t6, t118 * t343 - t37 * t481, t399 * t118 + t398 * t116 + (t496 - t493 + (t116 * t318 - t118 * t322) * qJD(6)) * t262, t118 * t452 + t343 * t524 + t357 * t37 + t481 * t64, t116 * t344 + t38 * t482, -t116 * t452 - t344 * t524 + t357 * t38 - t482 * t64, -t357 * t64 + t452 * t524, t111 * t64 - t2 * t357 - t358 * t38 + t4 * t482 - g(1) * (-t140 * t475 + t141 * t318) - g(2) * (-t138 * t475 + t139 * t318) - g(3) * (-t189 * t475 + t190 * t318) + t499 * t524 + t490 * t116 - t452 * t373 + t344 * t23, -t112 * t64 + t1 * t357 + t358 * t37 + t4 * t481 - g(1) * (t140 * t476 + t141 * t322) - g(2) * (t138 * t476 + t139 * t322) - g(3) * (t189 * t476 + t190 * t322) - t500 * t524 - t452 * t12 + t490 * t118 + t343 * t23, t111 * t37 - t112 * t38 + t399 * t12 - t499 * t118 - t500 * t116 - t398 * t373 + t518 + (-t1 * t318 - t2 * t322 + (-t12 * t322 - t318 * t373) * qJD(6)) * t262, t1 * t112 + t2 * t111 - t4 * t358 - g(1) * (t140 * t378 + t460) - g(2) * (t138 * t378 + t461) - g(3) * (t189 * t378 + t457) + t490 * t23 + t500 * t12 - t499 * t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274 + (t311 * t430 + t323 * t369) * t312, t479 + (t314 * t430 + t323 * t370) * t312, -t225 ^ 2 - t226 ^ 2, -t225 * t79 + t226 * t78 + t326, 0, 0, 0, 0, 0, 0, t397 + 0.2e1 * t515 - t519, -t65 + t526, -t523 - t533, t146 * t33 + t32 * t359 + t326 + t509, 0, 0, 0, 0, 0, 0, -t318 * t396 - t521 + t61, -t322 * t396 - t495 - t520 (t37 - t527) * t322 + t535 + t492, -t359 * t23 + t318 * t532 + t322 * t534 - t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, t523 - t533, -t65 - t526, -t484, -t397 - t519, t345, -t293 * t33 - t359 * t93 + t355 - t407, t146 * t93 - t32 * t434 - t354 + t363, 0, 0, t118 * t395 - t496 (-t37 - t527) * t322 - t535 + t492, t395 * t524 + t495 - t520, t116 * t485 - t493, -t485 * t524 + t521 + t61, -t524 * t359, -pkin(5) * t38 - t116 * t33 - t15 * t524 + t318 * t362 - t322 * t329 + t359 * t373, pkin(5) * t37 - t118 * t33 + t12 * t359 + t16 * t524 + t318 * t329 + t322 * t362, t116 * t16 + t118 * t15 + ((-t38 + t439) * pkin(11) + t532) * t322 + ((qJD(6) * t116 - t37) * pkin(11) - t534) * t318 + t354, t373 * t15 - t12 * t16 - t23 * t33 + t342 * pkin(5) + (t1 * t322 - t2 * t318 + (-t12 * t318 + t322 * t373) * qJD(6) + t354) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, -t116 ^ 2 + t118 ^ 2, t116 * t524 - t37, -t486, t118 * t524 - t38, t64, -t23 * t118 - g(1) * (t140 * t322 - t318 * t83) - g(2) * (t138 * t322 - t318 * t81) - g(3) * (-t125 * t318 + t187) + t534, t23 * t116 - g(1) * (-t140 * t318 - t322 * t83) - g(2) * (-t138 * t318 - t322 * t81) - g(3) * (-t125 * t322 - t483) - t532, 0, 0;];
tau_reg  = t5;
