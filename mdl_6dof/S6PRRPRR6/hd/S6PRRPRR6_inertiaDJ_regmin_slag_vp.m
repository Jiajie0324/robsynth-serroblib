% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6PRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x29]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRPRR6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR6_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:27:38
% EndTime: 2019-03-08 22:27:45
% DurationCPUTime: 2.33s
% Computational Cost: add. (3188->300), mult. (9409->578), div. (0->0), fcn. (9836->14), ass. (0->156)
t123 = cos(qJ(6));
t112 = t123 ^ 2;
t119 = sin(qJ(6));
t178 = t119 ^ 2 - t112;
t155 = t178 * qJD(6);
t120 = sin(qJ(5));
t124 = cos(qJ(5));
t114 = sin(pkin(7));
t125 = cos(qJ(3));
t186 = t114 * t125;
t113 = sin(pkin(13));
t116 = cos(pkin(13));
t117 = cos(pkin(7));
t169 = pkin(9) * t186;
t121 = sin(qJ(3));
t192 = pkin(2) * t121;
t82 = t169 + (qJ(4) + t192) * t117;
t141 = -pkin(3) * t125 - qJ(4) * t121;
t83 = (-pkin(2) + t141) * t114;
t57 = -t113 * t82 + t116 * t83;
t187 = t114 * t121;
t90 = t113 * t117 + t116 * t187;
t37 = -pkin(4) * t186 - t90 * pkin(10) + t57;
t58 = t113 * t83 + t116 * t82;
t88 = t113 * t187 - t116 * t117;
t45 = -t88 * pkin(10) + t58;
t135 = t120 * t37 + t124 * t45;
t185 = t116 * t125;
t77 = (-qJD(4) * t121 + (pkin(3) * t121 - qJ(4) * t125) * qJD(3)) * t114;
t176 = qJD(3) * t121;
t160 = t114 * t176;
t175 = qJD(3) * t125;
t86 = -t117 * pkin(2) * t175 + pkin(9) * t160;
t81 = t117 * qJD(4) - t86;
t50 = -t113 * t81 + t116 * t77;
t33 = (pkin(4) * t121 - pkin(10) * t185) * t114 * qJD(3) + t50;
t159 = t114 * t175;
t151 = t113 * t159;
t51 = t113 * t77 + t116 * t81;
t44 = -pkin(10) * t151 + t51;
t8 = -t135 * qJD(5) - t120 * t44 + t124 * t33;
t107 = -t116 * pkin(4) - pkin(3);
t194 = 0.2e1 * t107;
t193 = 0.2e1 * t114;
t180 = t124 * t116;
t95 = t120 * t113 - t180;
t91 = t95 * qJD(5);
t96 = t124 * t113 + t120 * t116;
t191 = t96 * t91;
t190 = pkin(10) + qJ(4);
t61 = t120 * t90 + t124 * t88;
t41 = -t61 * qJD(5) - t95 * t159;
t62 = -t120 * t88 + t124 * t90;
t54 = t119 * t62 + t123 * t186;
t21 = -t54 * qJD(6) + t119 * t160 + t123 * t41;
t189 = t21 * t119;
t188 = t113 * t125;
t184 = t119 * t123;
t122 = sin(qJ(2));
t183 = t121 * t122;
t126 = cos(qJ(2));
t182 = t121 * t126;
t181 = t122 * t125;
t179 = t125 * t126;
t115 = sin(pkin(6));
t177 = qJD(2) * t115;
t174 = qJD(5) * t120;
t173 = qJD(5) * t124;
t172 = qJD(6) * t119;
t171 = qJD(6) * t123;
t170 = -0.2e1 * pkin(5) * qJD(6);
t168 = t96 * t172;
t167 = t96 * t171;
t166 = t119 * t186;
t136 = -t120 * t45 + t124 * t37;
t19 = pkin(5) * t186 - t136;
t165 = t19 * t172;
t164 = t19 * t171;
t118 = cos(pkin(6));
t130 = t117 * t182 + t181;
t70 = t130 * t115 + t118 * t187;
t89 = -t115 * t126 * t114 + t118 * t117;
t52 = -t70 * t113 + t89 * t116;
t53 = t89 * t113 + t70 * t116;
t26 = t120 * t53 - t124 * t52;
t163 = t26 * t172;
t162 = t26 * t171;
t109 = t114 ^ 2;
t161 = t109 * t175;
t158 = t122 * t177;
t157 = t119 * t171;
t156 = -0.4e1 * t96 * t184;
t154 = t109 * t158;
t153 = t114 * t158;
t152 = t121 * t161;
t150 = 0.2e1 * (t113 ^ 2 + t116 ^ 2) * qJD(4);
t92 = t96 * qJD(5);
t149 = t92 * pkin(5) + t91 * pkin(11);
t148 = pkin(5) * t91 - pkin(11) * t92;
t147 = pkin(5) * t96 + pkin(11) * t95;
t6 = -pkin(5) * t160 - t8;
t146 = -t19 * t91 + t6 * t96;
t27 = t120 * t52 + t124 * t53;
t131 = t117 * t179 - t183;
t49 = t118 * t159 + (t131 * qJD(3) + (-t117 * t183 + t179) * qJD(2)) * t115;
t34 = -t49 * t113 + t116 * t153;
t35 = t113 * t153 + t49 * t116;
t13 = t27 * qJD(5) + t120 * t35 - t124 * t34;
t145 = t13 * t96 - t26 * t91;
t42 = t62 * qJD(5) + t96 * t159;
t144 = t96 * t42 - t91 * t61;
t100 = t190 * t113;
t101 = t190 * t116;
t75 = -t120 * t100 + t124 * t101;
t60 = t96 * qJD(4) + t75 * qJD(5);
t74 = t124 * t100 + t120 * t101;
t143 = t60 * t96 - t74 * t91;
t142 = -t91 * t95 + t96 * t92;
t140 = -t34 * t113 + t35 * t116;
t139 = -t50 * t113 + t51 * t116;
t20 = -pkin(11) * t186 + t135;
t85 = pkin(9) * t187 + (-pkin(2) * t125 - pkin(3)) * t117;
t66 = t88 * pkin(4) + t85;
t24 = t61 * pkin(5) - t62 * pkin(11) + t66;
t11 = t119 * t24 + t123 * t20;
t69 = -t131 * t115 - t118 * t186;
t18 = t69 * t119 + t123 * t27;
t55 = t123 * t62 - t166;
t138 = -t119 * t55 - t123 * t54;
t67 = t95 * pkin(5) - t96 * pkin(11) + t107;
t40 = t119 * t67 + t123 * t75;
t134 = t119 * t42 + t61 * t171;
t133 = -t123 * t42 + t61 * t172;
t132 = t119 * t92 + t95 * t171;
t7 = -t120 * t33 - t124 * t44 - t37 * t173 + t45 * t174;
t87 = (t117 * t192 + t169) * qJD(3);
t73 = pkin(4) * t151 + t87;
t129 = pkin(11) * t160 - t7;
t128 = (t141 * qJD(3) + qJD(4) * t125) * t114;
t127 = t42 * pkin(5) - t41 * pkin(11) + t73;
t94 = t96 ^ 2;
t65 = t123 * t92 - t95 * t172;
t59 = -qJD(4) * t180 + t100 * t173 + (qJD(4) * t113 + qJD(5) * t101) * t120;
t48 = t118 * t160 + (t130 * qJD(3) + (t117 * t181 + t182) * qJD(2)) * t115;
t39 = -t119 * t75 + t123 * t67;
t22 = -qJD(6) * t166 + t119 * t41 - t123 * t160 + t62 * t171;
t17 = -t119 * t27 + t69 * t123;
t16 = -t40 * qJD(6) + t119 * t59 + t123 * t149;
t15 = -t119 * t149 + t123 * t59 - t67 * t171 + t75 * t172;
t12 = -t120 * t34 - t124 * t35 - t52 * t173 + t53 * t174;
t10 = -t119 * t20 + t123 * t24;
t4 = -t18 * qJD(6) + t119 * t12 + t48 * t123;
t3 = -t48 * t119 + t123 * t12 - t69 * t171 + t27 * t172;
t2 = -t11 * qJD(6) - t119 * t129 + t123 * t127;
t1 = -t119 * t127 - t123 * t129 - t24 * t171 + t20 * t172;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t52 * t34 + 0.2e1 * t53 * t35 + 0.2e1 * t69 * t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t158, -t126 * t177, 0, 0, 0, 0, 0, -t48 * t117 - t125 * t154 + t89 * t160, -t49 * t117 + t121 * t154 + t89 * t159, t48 * t88 + (-t125 * t34 + (t121 * t52 + t69 * t188) * qJD(3)) * t114, t48 * t90 + (t125 * t35 + (-t121 * t53 + t69 * t185) * qJD(3)) * t114, -t34 * t90 - t35 * t88 + (-t113 * t53 - t116 * t52) * t159, t34 * t57 + t35 * t58 + t48 * t85 + t52 * t50 + t53 * t51 + t69 * t87, 0, 0, 0, 0, 0, t69 * t42 + t48 * t61 + (t125 * t13 - t26 * t176) * t114, t69 * t41 + t48 * t62 + (-t12 * t125 - t27 * t176) * t114, 0, 0, 0, 0, 0, t13 * t54 + t17 * t42 + t26 * t22 + t4 * t61, t13 * t55 - t18 * t42 + t26 * t21 + t3 * t61; 0, 0, 0, 0, 0.2e1 * t152, 0.2e1 * (-t121 ^ 2 + t125 ^ 2) * t109 * qJD(3), 0.2e1 * t117 * t159, -0.2e1 * t117 * t160, 0, -0.2e1 * t109 * pkin(2) * t176 - 0.2e1 * t87 * t117, -0.2e1 * pkin(2) * t161 + 0.2e1 * t86 * t117, 0.2e1 * t87 * t88 + 0.2e1 * (-t125 * t50 + (t121 * t57 + t85 * t188) * qJD(3)) * t114, 0.2e1 * t87 * t90 + 0.2e1 * (t125 * t51 + (-t121 * t58 + t85 * t185) * qJD(3)) * t114, -0.2e1 * t50 * t90 - 0.2e1 * t51 * t88 + 0.2e1 * (-t113 * t58 - t116 * t57) * t159, 0.2e1 * t57 * t50 + 0.2e1 * t58 * t51 + 0.2e1 * t85 * t87, 0.2e1 * t62 * t41, -0.2e1 * t41 * t61 - 0.2e1 * t62 * t42 (-t125 * t41 + t62 * t176) * t193 (t125 * t42 - t61 * t176) * t193, -0.2e1 * t152, 0.2e1 * t66 * t42 + 0.2e1 * t73 * t61 + 0.2e1 * (-t8 * t125 + t136 * t176) * t114, 0.2e1 * t66 * t41 + 0.2e1 * t73 * t62 + 0.2e1 * (-t7 * t125 - t135 * t176) * t114, 0.2e1 * t55 * t21, -0.2e1 * t21 * t54 - 0.2e1 * t55 * t22, 0.2e1 * t21 * t61 + 0.2e1 * t55 * t42, -0.2e1 * t22 * t61 - 0.2e1 * t54 * t42, 0.2e1 * t61 * t42, 0.2e1 * t10 * t42 + 0.2e1 * t19 * t22 + 0.2e1 * t2 * t61 + 0.2e1 * t6 * t54, 0.2e1 * t1 * t61 - 0.2e1 * t11 * t42 + 0.2e1 * t19 * t21 + 0.2e1 * t6 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, -t49, -t48 * t116, t48 * t113, t140, -t48 * pkin(3) + (-t113 * t52 + t116 * t53) * qJD(4) + t140 * qJ(4), 0, 0, 0, 0, 0, t48 * t95 + t69 * t92, t48 * t96 - t69 * t91, 0, 0, 0, 0, 0, t119 * t145 + t162 * t96 + t17 * t92 + t4 * t95, t123 * t145 - t163 * t96 - t18 * t92 + t3 * t95; 0, 0, 0, 0, 0, 0, t159, -t160, 0, -t87, t86, t113 * t128 - t87 * t116, t87 * t113 + t116 * t128 (t113 * t90 - t116 * t88) * qJD(4) + t139, -t87 * pkin(3) + (-t113 * t57 + t116 * t58) * qJD(4) + t139 * qJ(4), t41 * t96 - t62 * t91, -t41 * t95 - t62 * t92 - t144 (t125 * t91 + t96 * t176) * t114 (t125 * t92 - t95 * t176) * t114, 0, t107 * t42 + t66 * t92 + t73 * t95 + (t125 * t60 - t74 * t176) * t114, t107 * t41 - t66 * t91 + t73 * t96 + (-t125 * t59 - t75 * t176) * t114, -t55 * t168 + (t21 * t96 - t55 * t91) * t123, -t138 * t91 + (-t189 - t123 * t22 + (t119 * t54 - t123 * t55) * qJD(6)) * t96, t123 * t144 - t168 * t61 + t21 * t95 + t55 * t92, -t119 * t144 - t167 * t61 - t22 * t95 - t54 * t92, t42 * t95 + t61 * t92, t10 * t92 + t119 * t146 + t16 * t61 + t164 * t96 + t2 * t95 + t74 * t22 + t39 * t42 + t60 * t54, t1 * t95 - t11 * t92 + t123 * t146 + t15 * t61 - t165 * t96 + t74 * t21 - t40 * t42 + t60 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, qJ(4) * t150, -0.2e1 * t191, -0.2e1 * t142, 0, 0, 0, t92 * t194, -t91 * t194, -0.2e1 * t112 * t191 - 0.2e1 * t157 * t94, 0.2e1 * t94 * t155 - t91 * t156, 0.2e1 * t123 * t142 - 0.2e1 * t168 * t95, -0.2e1 * t119 * t142 - 0.2e1 * t167 * t95, 0.2e1 * t95 * t92, 0.2e1 * t119 * t143 + 0.2e1 * t16 * t95 + 0.2e1 * t167 * t74 + 0.2e1 * t39 * t92, 0.2e1 * t123 * t143 + 0.2e1 * t15 * t95 - 0.2e1 * t168 * t74 - 0.2e1 * t40 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t116 * t159, 0, t87, 0, 0, 0, 0, 0, t42, t41, 0, 0, 0, 0, 0, -t133, -t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t91, 0, 0, 0, 0, 0, t65, -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, t12, 0, 0, 0, 0, 0, -t13 * t123 + t163, t13 * t119 + t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t42, t160, t8, t7, t55 * t171 + t189, qJD(6) * t138 - t119 * t22 + t21 * t123, t134, -t133, 0, -pkin(5) * t22 - pkin(11) * t134 - t6 * t123 + t165, -pkin(5) * t21 + pkin(11) * t133 + t6 * t119 + t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t91, -t92, 0, -t60, t59, -t155 * t96 - t91 * t184, qJD(6) * t156 + t178 * t91, t132, t65, 0, -t60 * t123 + t148 * t119 + (t119 * t74 - t123 * t147) * qJD(6), t60 * t119 + t148 * t123 + (t119 * t147 + t123 * t74) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t157, -0.2e1 * t155, 0, 0, 0, t119 * t170, t123 * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t22, t42, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123 * t91 - t168, t119 * t91 - t167, t92, t16, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, -t172, 0, -pkin(11) * t171, pkin(11) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
