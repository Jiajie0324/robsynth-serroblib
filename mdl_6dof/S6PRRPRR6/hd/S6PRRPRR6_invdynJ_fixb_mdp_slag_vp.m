% Calculate vector of inverse dynamics joint torques for
% S6PRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% MDP [29x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRPRR6_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRPRR6_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1),zeros(29,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [29 1]), ...
  'S6PRRPRR6_invdynJ_fixb_mdp_slag_vp: MDP has to be [29x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:28:04
% EndTime: 2019-03-08 22:28:28
% DurationCPUTime: 18.49s
% Computational Cost: add. (8770->694), mult. (22458->992), div. (0->0), fcn. (19718->18), ass. (0->300)
t686 = sin(pkin(6));
t689 = cos(pkin(7));
t697 = cos(qJ(3));
t698 = cos(qJ(2));
t821 = t697 * t698;
t693 = sin(qJ(3));
t694 = sin(qJ(2));
t825 = t693 * t694;
t731 = -t689 * t825 + t821;
t615 = t731 * t686;
t799 = qJD(3) * t697;
t775 = t689 * t799;
t685 = sin(pkin(7));
t800 = qJD(3) * t693;
t778 = t685 * t800;
t869 = -pkin(2) * t775 + pkin(9) * t778 + qJD(1) * t615;
t744 = pkin(3) * t693 - qJ(4) * t697;
t703 = qJD(3) * t744 - qJD(4) * t693;
t832 = t686 * t694;
t782 = qJD(1) * t832;
t868 = (t703 - t782) * t685;
t867 = -qJD(4) * t689 + t869;
t684 = sin(pkin(13));
t687 = cos(pkin(13));
t816 = t867 * t684 + t687 * t868;
t815 = t684 * t868 - t867 * t687;
t720 = (-pkin(10) * t687 * t697 + pkin(4) * t693) * t685;
t866 = qJD(3) * t720 + t816;
t777 = t685 * t799;
t754 = t684 * t777;
t865 = -pkin(10) * t754 + t815;
t804 = qJD(2) * t689;
t671 = qJD(3) + t804;
t805 = qJD(2) * t685;
t781 = t693 * t805;
t609 = t671 * t687 - t684 * t781;
t610 = t671 * t684 + t687 * t781;
t692 = sin(qJ(5));
t696 = cos(qJ(5));
t541 = -t696 * t609 + t610 * t692;
t539 = qJD(6) + t541;
t864 = t539 ^ 2;
t803 = qJD(2) * t697;
t780 = t685 * t803;
t660 = -qJD(5) + t780;
t863 = t541 * t660;
t690 = cos(pkin(6));
t807 = qJD(1) * t690;
t783 = t685 * t807;
t806 = qJD(1) * t698;
t852 = pkin(9) * t685;
t862 = qJDD(2) * t852 + (qJD(2) * t806 + qJDD(1) * t694) * t686 + qJD(3) * t783;
t823 = t694 * t697;
t824 = t693 * t698;
t733 = t689 * t823 + t824;
t614 = t733 * t686;
t776 = t689 * t800;
t812 = pkin(2) * t776 + pkin(9) * t777 - qJD(1) * t614;
t639 = t684 * t692 - t696 * t687;
t834 = t685 * t697;
t714 = t639 * t834;
t811 = qJD(2) * t714 - t639 * qJD(5);
t640 = t684 * t696 + t687 * t692;
t715 = t640 * t834;
t810 = -qJD(2) * t715 + t640 * qJD(5);
t828 = t689 * t693;
t809 = pkin(2) * t828 + pkin(9) * t834;
t617 = qJ(4) * t689 + t809;
t745 = -pkin(3) * t697 - qJ(4) * t693;
t618 = (-pkin(2) + t745) * t685;
t546 = -t617 * t684 + t687 * t618;
t835 = t685 * t693;
t632 = t684 * t689 + t687 * t835;
t509 = -pkin(4) * t834 - pkin(10) * t632 + t546;
t547 = t687 * t617 + t684 * t618;
t630 = t684 * t835 - t687 * t689;
t520 = -pkin(10) * t630 + t547;
t817 = t692 * t509 + t696 * t520;
t861 = qJD(5) * t817 + t865 * t692 - t696 * t866;
t797 = qJD(5) * t696;
t798 = qJD(5) * t692;
t860 = t509 * t797 - t520 * t798 + t692 * t866 + t865 * t696;
t638 = pkin(9) * t805 + t782;
t649 = qJD(2) * pkin(2) + t686 * t806;
t548 = -t693 * t638 + t697 * (t649 * t689 + t783);
t625 = t744 * t805;
t510 = -t548 * t684 + t687 * t625;
t492 = qJD(2) * t720 + t510;
t511 = t687 * t548 + t684 * t625;
t756 = t684 * t780;
t496 = -pkin(10) * t756 + t511;
t851 = pkin(10) + qJ(4);
t658 = t851 * t684;
t659 = t851 * t687;
t736 = -t658 * t696 - t659 * t692;
t859 = -qJD(4) * t639 + qJD(5) * t736 - t692 * t492 - t696 * t496;
t584 = -t658 * t692 + t659 * t696;
t858 = qJD(4) * t640 + qJD(5) * t584 + t492 * t696 - t496 * t692;
t732 = t689 * t824 + t823;
t577 = t686 * t732 + t690 * t835;
t831 = t686 * t698;
t631 = -t685 * t831 + t689 * t690;
t531 = -t577 * t684 + t631 * t687;
t532 = t577 * t687 + t631 * t684;
t482 = t531 * t692 + t532 * t696;
t856 = t689 * t821 - t825;
t576 = -t686 * t856 - t690 * t834;
t695 = cos(qJ(6));
t574 = t576 * t695;
t691 = sin(qJ(6));
t857 = -t482 * t691 + t574;
t813 = pkin(4) * t754 + t812;
t790 = qJDD(2) * t689;
t670 = qJDD(3) + t790;
t855 = -pkin(3) * t670 + qJDD(4);
t788 = qJDD(2) * t697;
t668 = t685 * t788;
t792 = qJD(2) * qJD(3);
t773 = t693 * t792;
t621 = t685 * t773 + qJDD(5) - t668;
t669 = qJDD(1) * t831;
t779 = qJD(2) * t832;
t753 = qJD(1) * t779;
t616 = qJDD(2) * pkin(2) + t669 - t753;
t791 = qJDD(1) * t690;
t771 = t685 * t791;
t708 = t616 * t828 - t638 * t800 + t649 * t775 + t693 * t771 + t697 * t862;
t473 = qJ(4) * t670 + qJD(4) * t671 + t708;
t666 = t689 * t791;
t499 = t666 + (qJD(2) * t703 + qJDD(2) * t745 - t616) * t685;
t458 = -t473 * t684 + t687 * t499;
t772 = t697 * t792;
t789 = qJDD(2) * t693;
t729 = t772 + t789;
t709 = t685 * t729;
t840 = t670 * t684;
t573 = t687 * t709 + t840;
t728 = t773 - t788;
t451 = pkin(4) * t685 * t728 - pkin(10) * t573 + t458;
t549 = t697 * t638 + t649 * t828 + t693 * t783;
t530 = qJ(4) * t671 + t549;
t667 = t689 * t807;
t563 = t667 + (qJD(2) * t745 - t649) * t685;
t485 = -t530 * t684 + t687 * t563;
t471 = -pkin(4) * t780 - pkin(10) * t610 + t485;
t486 = t687 * t530 + t684 * t563;
t478 = pkin(10) * t609 + t486;
t453 = t471 * t692 + t478 * t696;
t459 = t687 * t473 + t684 * t499;
t650 = t687 * t670;
t572 = t684 * t709 - t650;
t455 = -pkin(10) * t572 + t459;
t702 = -qJD(5) * t453 + t696 * t451 - t455 * t692;
t438 = -pkin(5) * t621 - t702;
t850 = sin(pkin(12));
t768 = t850 * t698;
t688 = cos(pkin(12));
t830 = t688 * t694;
t633 = t690 * t830 + t768;
t769 = t850 * t694;
t829 = t688 * t698;
t716 = -t690 * t829 + t769;
t706 = t716 * t693;
t833 = t686 * t688;
t787 = t685 * t833;
t534 = t633 * t697 - t689 * t706 - t693 * t787;
t634 = -t690 * t769 + t829;
t717 = t690 * t768 + t830;
t770 = t686 * t850;
t751 = t685 * t770;
t536 = t634 * t697 + (-t689 * t717 + t751) * t693;
t578 = t685 * t716 - t689 * t833;
t579 = t685 * t717 + t689 * t770;
t681 = pkin(13) + qJ(5);
t678 = sin(t681);
t679 = cos(t681);
t725 = g(1) * (-t536 * t678 + t579 * t679) + g(2) * (-t534 * t678 + t578 * t679) + g(3) * (-t577 * t678 + t631 * t679);
t737 = t609 * t692 + t610 * t696;
t854 = t539 * (pkin(5) * t737 + pkin(11) * t539) + t438 + t725;
t477 = qJD(5) * t737 + t696 * t572 + t573 * t692;
t849 = MDP(7) * t685;
t476 = -t692 * t572 + t696 * t573 + t609 * t797 - t610 * t798;
t795 = qJD(6) * t695;
t784 = t695 * t476 + t691 * t621 - t660 * t795;
t796 = qJD(6) * t691;
t456 = -t737 * t796 + t784;
t848 = t456 * t691;
t844 = t737 * t691;
t516 = t695 * t660 + t844;
t846 = t516 * t539;
t518 = -t660 * t691 + t695 * t737;
t845 = t518 * t539;
t843 = t576 * t691;
t842 = t640 * t695;
t841 = t670 * MDP(9);
t839 = t678 * t685;
t838 = t679 * t691;
t837 = t679 * t695;
t827 = t689 * t697;
t475 = qJDD(6) + t477;
t826 = t691 * t475;
t699 = qJD(2) ^ 2;
t822 = t694 * t699;
t472 = t695 * t475;
t820 = qJDD(1) - g(3);
t819 = -pkin(5) * t778 + t861;
t814 = pkin(5) * t781 + t858;
t682 = t693 ^ 2;
t808 = -t697 ^ 2 + t682;
t802 = qJD(3) * t684;
t801 = qJD(3) * t687;
t794 = qJD(3) - t671;
t786 = t691 * t834;
t677 = -pkin(4) * t687 - pkin(3);
t774 = qJ(4) * t788;
t727 = t692 * t451 + t696 * t455 + t471 * t797 - t478 * t798;
t437 = pkin(11) * t621 + t727;
t734 = -t616 * t827 + t638 * t799 + t649 * t776 + t693 * t862 - t697 * t771;
t479 = t734 + t855;
t464 = pkin(4) * t572 + t479;
t442 = pkin(5) * t477 - pkin(11) * t476 + t464;
t766 = -t691 * t437 + t695 * t442;
t764 = t476 * t691 - t695 * t621;
t763 = -t691 * t811 - t695 * t781;
t762 = t691 * t781 - t695 * t811;
t760 = t539 * t695;
t759 = t671 + t804;
t758 = t670 + t790;
t526 = pkin(4) * t756 + t549;
t755 = t685 * t779;
t750 = g(1) * t634 + g(2) * t633;
t564 = t696 * t630 + t632 * t692;
t565 = -t630 * t692 + t632 * t696;
t672 = pkin(9) * t835;
t620 = t672 + (-pkin(2) * t697 - pkin(3)) * t689;
t569 = pkin(4) * t630 + t620;
t480 = pkin(5) * t564 - pkin(11) * t565 + t569;
t749 = -pkin(11) * t778 - qJD(6) * t480 - t860;
t571 = pkin(5) * t639 - pkin(11) * t640 + t677;
t748 = pkin(11) * t781 - qJD(6) * t571 - t859;
t466 = -pkin(11) * t834 + t817;
t513 = -qJD(3) * t714 - qJD(5) * t564;
t514 = qJD(3) * t715 + qJD(5) * t565;
t747 = -pkin(5) * t514 + pkin(11) * t513 + qJD(6) * t466 - t813;
t746 = -pkin(5) * t810 + pkin(11) * t811 + qJD(6) * t584 + t526;
t743 = t695 * t437 + t691 * t442;
t446 = -pkin(11) * t660 + t453;
t527 = -pkin(3) * t671 + qJD(4) - t548;
t500 = -pkin(4) * t609 + t527;
t462 = pkin(5) * t541 - pkin(11) * t737 + t500;
t440 = t446 * t695 + t462 * t691;
t742 = t446 * t691 - t462 * t695;
t452 = t471 * t696 - t478 * t692;
t741 = t482 * t695 + t843;
t739 = t509 * t696 - t520 * t692;
t738 = t531 * t696 - t532 * t692;
t537 = t565 * t691 + t695 * t834;
t705 = t716 * t697;
t533 = t633 * t693 + t689 * t705 + t697 * t787;
t707 = t717 * t697;
t535 = t634 * t693 + t689 * t707 - t697 * t751;
t724 = g(1) * t535 + g(2) * t533 + g(3) * t576;
t723 = -g(1) * t536 - g(2) * t534 - g(3) * t577;
t554 = t633 * t827 - t706;
t556 = t634 * t827 - t693 * t717;
t722 = g(1) * t556 + g(2) * t554 + g(3) * t614;
t555 = -t633 * t828 - t705;
t557 = -t634 * t828 - t707;
t721 = g(1) * t557 + g(2) * t555 + g(3) * t615;
t719 = t640 * t795 - t763;
t718 = -t640 * t796 - t762;
t713 = -g(3) * t832 - t750;
t711 = -t479 + t724;
t710 = -qJ(4) * t800 + (qJD(4) - t527) * t697;
t445 = pkin(5) * t660 - t452;
t704 = -pkin(11) * t475 + (t445 + t452) * t539;
t700 = t724 - t734;
t680 = t685 ^ 2;
t598 = -t649 * t685 + t667;
t575 = -t616 * t685 + t666;
t560 = t615 * t679 + t832 * t839;
t538 = t565 * t695 - t786;
t525 = t690 * t777 + (t731 * qJD(2) + qJD(3) * t856) * t686;
t524 = t690 * t778 + (qJD(2) * t733 + qJD(3) * t732) * t686;
t523 = t577 * t679 + t631 * t678;
t508 = t557 * t679 + t634 * t839;
t507 = t555 * t679 + t633 * t839;
t505 = t525 * t687 + t684 * t755;
t504 = -t525 * t684 + t687 * t755;
t490 = t536 * t679 + t579 * t678;
t488 = t534 * t679 + t578 * t678;
t469 = -qJD(6) * t786 + t513 * t691 + t565 * t795 - t695 * t778;
t468 = -qJD(6) * t537 + t513 * t695 + t691 * t778;
t465 = pkin(5) * t834 - t739;
t457 = qJD(6) * t518 + t764;
t450 = qJD(5) * t482 - t504 * t696 + t505 * t692;
t449 = qJD(5) * t738 + t504 * t692 + t505 * t696;
t436 = -t440 * qJD(6) + t766;
t435 = -qJD(6) * t742 + t743;
t1 = [t820 * MDP(1) + (-t524 * t671 - t576 * t670) * MDP(10) + (-t525 * t671 - t577 * t670) * MDP(11) + (-t524 * t609 + t572 * t576) * MDP(12) + (t524 * t610 + t573 * t576) * MDP(13) + (-t504 * t610 + t505 * t609 - t531 * t573 - t532 * t572) * MDP(14) + (t458 * t531 + t459 * t532 + t479 * t576 + t485 * t504 + t486 * t505 + t524 * t527 - g(3)) * MDP(15) + (t450 * t660 + t477 * t576 + t524 * t541 + t621 * t738) * MDP(21) + (t449 * t660 + t476 * t576 - t482 * t621 + t524 * t737) * MDP(22) + ((-qJD(6) * t741 - t449 * t691 + t524 * t695) * t539 + t857 * t475 + t450 * t516 - t738 * t457) * MDP(28) + (-(qJD(6) * t857 + t449 * t695 + t524 * t691) * t539 - t741 * t475 + t450 * t518 - t738 * t456) * MDP(29) + ((qJDD(2) * t698 - t822) * MDP(3) + (-qJDD(2) * t694 - t698 * t699) * MDP(4) + (-MDP(10) * t697 + MDP(11) * t693) * t680 * t822) * t686 + ((-MDP(12) * t531 + MDP(13) * t532) * t788 + ((-t504 * t697 + t531 * t800) * MDP(12) + (t505 * t697 - t532 * t800) * MDP(13)) * qJD(2) + (MDP(10) * t728 + MDP(11) * t729) * t631) * t685; (g(1) * t717 + g(2) * t716 - g(3) * t831 + t669) * MDP(3) + (-t820 * t832 + t750) * MDP(4) + (-t809 * t670 + t671 * t869 - t708 * t689 + t722) * MDP(11) + ((-t575 * t697 + t598 * t800) * MDP(10) + (t452 * t800 - t697 * t702) * MDP(21) + ((-qJD(2) * t547 - t486) * t800 + t713 * t687 + (qJD(2) * t815 + qJDD(2) * t547 + t527 * t801 + t459) * t697) * MDP(13) + ((qJD(2) * t546 + t485) * t800 + t713 * t684 + (-qJD(2) * t816 - qJDD(2) * t546 + t527 * t802 - t458) * t697) * MDP(12) + (-t453 * t800 + t679 * t713 + t697 * t727) * MDP(22) + (t575 * t693 + t598 * t799) * MDP(11) + (t477 * t697 - t541 * t800) * MDP(19) + (-t476 * t697 + t737 * t800) * MDP(18) + (t697 * t758 - t759 * t800) * MDP(8) + (-t621 * t697 - t660 * t800) * MDP(20)) * t685 + (t476 * t565 + t513 * t737) * MDP(16) + (-t476 * t564 - t477 * t565 - t513 * t541 - t514 * t737) * MDP(17) + (t479 * t632 + t620 * t573 + t812 * t610 + t721 * t684) * MDP(13) + (t479 * t630 + t620 * t572 - t812 * t609 - t721 * t687) * MDP(12) + (-t458 * t632 - t459 * t630 - t546 * t573 - t547 * t572 - t816 * t610 + t815 * t609 + (-t485 * t687 - t486 * t684) * t777 - t722) * MDP(14) + (-(t466 * t695 + t480 * t691) * t475 - t435 * t564 - t440 * t514 + t465 * t456 + t438 * t538 + t445 * t468 - g(1) * (-t508 * t691 + t556 * t695) - g(2) * (-t507 * t691 + t554 * t695) - g(3) * (-t560 * t691 + t614 * t695) + (t691 * t747 + t695 * t749) * t539 + t819 * t518) * MDP(29) + ((-t466 * t691 + t480 * t695) * t475 + t436 * t564 - t742 * t514 + t465 * t457 + t438 * t537 + t445 * t469 - g(1) * (t508 * t695 + t556 * t691) - g(2) * (t507 * t695 + t554 * t691) - g(3) * (t560 * t695 + t614 * t691) + (t691 * t749 - t695 * t747) * t539 + t819 * t516) * MDP(28) + (t514 * t660 - t564 * t621) * MDP(19) + (-t513 * t660 + t565 * t621) * MDP(18) + (t459 * t547 + t458 * t546 + t479 * t620 - g(1) * (-pkin(2) * t717 + t557 * pkin(3) + t556 * qJ(4) + t634 * t852) - g(2) * (-pkin(2) * t716 + t555 * pkin(3) + t554 * qJ(4) + t633 * t852) - g(3) * (pkin(3) * t615 + qJ(4) * t614 + (pkin(2) * t698 + t694 * t852) * t686) + t812 * t527 + t815 * t486 + t816 * t485) * MDP(15) + qJDD(2) * MDP(2) + ((pkin(2) * t827 - t672) * t670 - t734 * t689 - t812 * t671 - t721) * MDP(10) + (t693 * t758 + t759 * t799) * t849 + ((-pkin(2) * t728 + t697 * t753) * MDP(10) + (-pkin(2) * t729 - t693 * t753) * MDP(11) + 0.2e1 * (t693 * t788 - t792 * t808) * MDP(6) + (qJDD(2) * t682 + 0.2e1 * t693 * t772) * MDP(5)) * t680 + t689 * t841 + (t464 * t565 + t569 * t476 + t500 * t513 - t817 * t621 + t860 * t660 + t721 * t678 + t813 * t737) * MDP(22) + (-g(1) * t508 - g(2) * t507 - g(3) * t560 + t464 * t564 + t569 * t477 + t500 * t514 + t813 * t541 + t739 * t621 + t861 * t660) * MDP(21) + (t456 * t538 + t468 * t518) * MDP(23) + (-t456 * t537 - t457 * t538 - t468 * t516 - t469 * t518) * MDP(24) + (t475 * t564 + t514 * t539) * MDP(27) + (-t457 * t564 - t469 * t539 - t475 * t537 - t514 * t516) * MDP(26) + (t456 * t564 + t468 * t539 + t475 * t538 + t514 * t518) * MDP(25); (-t457 * t639 - t516 * t810 - t539 * t719 - t640 * t826) * MDP(26) + (t548 * t671 - t598 * t780 - t708 - t723) * MDP(11) + (t510 * t610 - t511 * t609 + (-qJ(4) * t572 + qJD(4) * t609 + t485 * t780 + t459) * t687 + (qJ(4) * t573 + qJD(4) * t610 + t486 * t780 - t458) * t684 + t723) * MDP(14) + (t549 * t671 - t598 * t781 + t700) * MDP(10) + (t456 * t639 + t472 * t640 + t518 * t810 + t539 * t718) * MDP(25) + t841 + (t453 * t781 + t464 * t640 + t677 * t476 + t811 * t500 - t526 * t737 - t584 * t621 + t660 * t859 - t724 * t678) * MDP(22) + (-pkin(3) * t573 - t549 * t610 - t711 * t684 + (t687 * t774 + (t486 * t693 - t511 * t697 + t687 * t710) * qJD(2)) * t685) * MDP(13) + (-pkin(3) * t572 + t549 * t609 + t711 * t687 + (t684 * t774 + (-t485 * t693 + t510 * t697 + t684 * t710) * qJD(2)) * t685) * MDP(12) + (t475 * t639 + t539 * t810) * MDP(27) + (-t452 * t781 + t464 * t639 + t677 * t477 + t810 * t500 - t526 * t541 + t621 * t736 + t660 * t858 + t724 * t679) * MDP(21) + (t541 * t781 - t621 * t639 + t660 * t810) * MDP(19) + (t476 * t640 + t737 * t811) * MDP(16) + (t621 * t640 - t660 * t811 - t737 * t781) * MDP(18) + (-t476 * t639 - t477 * t640 - t541 * t811 - t737 * t810) * MDP(17) + (-t781 * t794 + t668) * MDP(8) + (-t485 * t510 - t486 * t511 - t527 * t549 + (-t485 * t684 + t486 * t687) * qJD(4) + t711 * pkin(3) + (-t458 * t684 + t459 * t687 + t723) * qJ(4)) * MDP(15) + (t763 * t518 + t762 * t516 + (-t848 - t457 * t695 + (t516 * t691 - t518 * t695) * qJD(6)) * t640) * MDP(24) + (t794 * t803 + t789) * t849 + ((t571 * t695 - t584 * t691) * t475 + t436 * t639 - t736 * t457 + t438 * t691 * t640 - g(1) * (-t535 * t837 + t536 * t691) - g(2) * (-t533 * t837 + t534 * t691) - g(3) * (-t576 * t837 + t577 * t691) + (t691 * t748 - t695 * t746) * t539 + t814 * t516 - t810 * t742 + t719 * t445) * MDP(28) + (t456 * t842 + t518 * t718) * MDP(23) + (-(t571 * t691 + t584 * t695) * t475 - t435 * t639 - t736 * t456 + t438 * t842 - g(1) * (t535 * t838 + t536 * t695) - g(2) * (t533 * t838 + t534 * t695) - g(3) * (t576 * t838 + t577 * t695) + (t691 * t746 + t695 * t748) * t539 + t814 * t518 - t810 * t440 + t718 * t445) * MDP(29) + t660 * MDP(20) * t781 + (-MDP(5) * t693 * t697 + MDP(6) * t808) * t680 * t699; -t650 * MDP(12) + MDP(13) * t840 + (-t609 ^ 2 - t610 ^ 2) * MDP(14) + (t485 * t610 - t486 * t609 - t700 + t855) * MDP(15) + (-t660 * t737 + t477) * MDP(21) + (t476 + t863) * MDP(22) + (-t516 * t737 + t472) * MDP(28) + (-t518 * t737 - t826) * MDP(29) + ((MDP(12) * t684 + MDP(13) * t687) * t789 + ((-t610 + t802) * MDP(12) + (-t609 + t801) * MDP(13)) * t803) * t685 - (MDP(28) * t691 + MDP(29) * t695) * t864; -t541 ^ 2 * MDP(17) + (t476 - t863) * MDP(18) - t477 * MDP(19) + t621 * MDP(20) + (-t453 * t660 + t702 - t725) * MDP(21) + (g(1) * t490 + g(2) * t488 + g(3) * t523 - t452 * t660 + t500 * t541 - t727) * MDP(22) + (t518 * t760 + t848) * MDP(23) + ((t456 - t846) * t695 + (-t457 - t845) * t691) * MDP(24) + (t539 * t760 + t826) * MDP(25) + (-t691 * t864 + t472) * MDP(26) + (-pkin(5) * t457 - t453 * t516 + t704 * t691 - t695 * t854) * MDP(28) + (-pkin(5) * t456 - t453 * t518 + t691 * t854 + t704 * t695) * MDP(29) + (MDP(16) * t541 + MDP(17) * t737 - MDP(19) * t660 - MDP(21) * t500 - MDP(25) * t518 + MDP(26) * t516 - MDP(27) * t539 + MDP(28) * t742 + MDP(29) * t440) * t737; t518 * t516 * MDP(23) + (-t516 ^ 2 + t518 ^ 2) * MDP(24) + (t784 + t846) * MDP(25) + (-t764 + t845) * MDP(26) + t475 * MDP(27) + (t440 * t539 - t445 * t518 - g(1) * (-t490 * t691 + t535 * t695) - g(2) * (-t488 * t691 + t533 * t695) - g(3) * (-t523 * t691 + t574) + t766) * MDP(28) + (-t742 * t539 + t445 * t516 - g(1) * (-t490 * t695 - t535 * t691) - g(2) * (-t488 * t695 - t533 * t691) - g(3) * (-t523 * t695 - t843) - t743) * MDP(29) + (-MDP(25) * t844 - MDP(26) * t518 - MDP(28) * t440 + MDP(29) * t742) * qJD(6);];
tau  = t1;
