% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:27:38
% EndTime: 2019-03-08 22:28:07
% DurationCPUTime: 13.09s
% Computational Cost: add. (15554->576), mult. (42448->858), div. (0->0), fcn. (35686->14), ass. (0->280)
t238 = cos(pkin(7));
t245 = cos(qJ(3));
t246 = cos(qJ(2));
t349 = t245 * t246;
t242 = sin(qJ(3));
t243 = sin(qJ(2));
t353 = t242 * t243;
t273 = -t238 * t353 + t349;
t329 = qJD(3) * t245;
t309 = t238 * t329;
t235 = sin(pkin(7));
t330 = qJD(3) * t242;
t311 = t235 * t330;
t236 = sin(pkin(6));
t339 = qJD(1) * t236;
t343 = -pkin(2) * t309 + pkin(9) * t311 + t273 * t339;
t282 = pkin(3) * t242 - qJ(4) * t245;
t252 = qJD(3) * t282 - qJD(4) * t242;
t314 = t243 * t339;
t414 = (t252 - t314) * t235;
t413 = -qJD(4) * t238 + t343;
t234 = sin(pkin(13));
t237 = cos(pkin(13));
t348 = t413 * t234 + t237 * t414;
t347 = t234 * t414 - t413 * t237;
t355 = t237 * t245;
t262 = t235 * (pkin(4) * t242 - pkin(10) * t355);
t256 = qJD(3) * t262;
t412 = t256 + t348;
t310 = t235 * t329;
t287 = t234 * t310;
t411 = -pkin(10) * t287 + t347;
t354 = t238 * t242;
t357 = t235 * t245;
t192 = pkin(2) * t354 + pkin(9) * t357;
t184 = qJD(3) * t192;
t351 = t243 * t245;
t352 = t242 * t246;
t275 = t238 * t351 + t352;
t344 = t275 * t339 - t184;
t333 = qJD(2) * t245;
t222 = t235 * t333;
t241 = sin(qJ(5));
t389 = cos(qJ(5));
t266 = -t241 * t234 + t237 * t389;
t308 = qJD(5) * t389;
t328 = qJD(5) * t241;
t342 = t266 * t222 + t234 * t328 - t237 * t308;
t198 = t234 * t389 + t241 * t237;
t253 = t198 * t357;
t341 = -qJD(2) * t253 + t198 * qJD(5);
t177 = qJ(4) * t238 + t192;
t283 = -pkin(3) * t245 - qJ(4) * t242;
t178 = (-pkin(2) + t283) * t235;
t129 = t237 * t177 + t234 * t178;
t358 = t235 * t242;
t186 = t234 * t358 - t237 * t238;
t107 = -pkin(10) * t186 + t129;
t128 = -t177 * t234 + t237 * t178;
t188 = t234 * t238 + t237 * t358;
t93 = -pkin(4) * t357 - pkin(10) * t188 + t128;
t383 = -t107 * t328 + t241 * t412 + t93 * t308 + t411 * t389;
t387 = pkin(10) + qJ(4);
t217 = t387 * t234;
t218 = t387 * t237;
t267 = -t217 * t389 - t241 * t218;
t337 = qJD(2) * t235;
t195 = pkin(9) * t337 + t314;
t239 = cos(pkin(6));
t338 = qJD(1) * t239;
t380 = qJD(2) * pkin(2);
t210 = t246 * t339 + t380;
t361 = t210 * t238;
t265 = t235 * t338 + t361;
t130 = -t242 * t195 + t245 * t265;
t182 = t282 * t337;
t95 = -t130 * t234 + t237 * t182;
t70 = qJD(2) * t262 + t95;
t292 = t234 * t222;
t96 = t237 * t130 + t234 * t182;
t79 = -pkin(10) * t292 + t96;
t371 = qJD(4) * t266 + qJD(5) * t267 - t241 * t70 - t389 * t79;
t240 = sin(qJ(6));
t244 = cos(qJ(6));
t335 = qJD(2) * t238;
t224 = qJD(3) + t335;
t334 = qJD(2) * t242;
t313 = t235 * t334;
t171 = t224 * t237 - t234 * t313;
t172 = t224 * t234 + t237 * t313;
t268 = t241 * t171 + t172 * t389;
t322 = t222 - qJD(5);
t105 = -t240 * t322 + t244 * t268;
t123 = -t389 * t171 + t172 * t241;
t400 = qJD(6) + t123;
t367 = t400 * t240;
t410 = t105 * t367;
t346 = pkin(4) * t287 - t344;
t350 = t245 * t195;
t131 = t242 * t265 + t350;
t116 = qJ(4) * t224 + t131;
t221 = t238 * t338;
t144 = t221 + (qJD(2) * t283 - t210) * t235;
t67 = -t116 * t234 + t237 * t144;
t56 = -pkin(4) * t222 - pkin(10) * t172 + t67;
t68 = t237 * t116 + t234 * t144;
t59 = pkin(10) * t171 + t68;
t28 = t241 * t56 + t389 * t59;
t22 = -pkin(11) * t322 + t28;
t113 = -pkin(3) * t224 + qJD(4) - t130;
t82 = -pkin(4) * t171 + t113;
t33 = pkin(5) * t123 - pkin(11) * t268 + t82;
t12 = t22 * t244 + t240 * t33;
t321 = qJD(2) * qJD(3);
t307 = t245 * t321;
t286 = t235 * t307;
t279 = t234 * t286;
t257 = t275 * qJD(2);
t289 = t239 * t311;
t87 = (t210 * t354 + t350) * qJD(3) + (t236 * t257 + t289) * qJD(1);
t73 = pkin(4) * t279 + t87;
t290 = t237 * t310;
t271 = t389 * t290;
t80 = t241 * (qJD(5) * t172 + t279) - qJD(2) * t271 - t171 * t308;
t251 = qJD(3) * t253;
t249 = qJD(2) * t251;
t392 = qJD(5) * t268;
t81 = t249 + t392;
t30 = pkin(5) * t81 + pkin(11) * t80 + t73;
t141 = (t252 + t314) * t337;
t293 = t238 * t314;
t255 = -qJD(2) * t293 - qJD(3) * t195;
t288 = t239 * t310;
t336 = qJD(2) * t236;
t312 = t246 * t336;
t315 = t210 * t309 + (t245 * t312 + t288) * qJD(1);
t86 = t242 * t255 + t315;
t78 = qJD(4) * t224 + t86;
t57 = t237 * t141 - t234 * t78;
t44 = qJD(2) * t256 + t57;
t58 = t234 * t141 + t237 * t78;
t50 = -pkin(10) * t279 + t58;
t272 = -t241 * t44 - t56 * t308 + t328 * t59 - t389 * t50;
t285 = qJD(2) * t311;
t5 = pkin(11) * t285 - t272;
t2 = -qJD(6) * t12 - t240 * t5 + t244 * t30;
t409 = t12 * t400 + t2;
t281 = t22 * t240 - t244 * t33;
t1 = -qJD(6) * t281 + t240 * t30 + t244 * t5;
t407 = t281 * t400 + t1;
t408 = t123 ^ 2;
t406 = pkin(11) * t311 + t383;
t405 = -pkin(11) * t313 + t371;
t112 = pkin(4) * t292 + t131;
t404 = -pkin(5) * t341 - pkin(11) * t342 + t112;
t100 = t186 * t308 - t271 + (qJD(5) * t188 + t287) * t241;
t146 = -t241 * t186 + t188 * t389;
t101 = qJD(5) * t146 + t251;
t403 = pkin(5) * t101 + pkin(11) * t100 + t346;
t301 = t244 * t322;
t103 = t240 * t268 + t301;
t402 = t103 * t123;
t401 = t123 * t322;
t399 = t268 ^ 2;
t397 = t389 * t107 + t241 * t93;
t382 = -qJD(5) * t397 - t411 * t241 + t389 * t412;
t156 = -t241 * t217 + t218 * t389;
t369 = qJD(4) * t198 + qJD(5) * t156 - t241 * t79 + t389 * t70;
t396 = t103 * t268;
t395 = t105 * t268;
t394 = t222 * t268;
t327 = qJD(6) * t105;
t39 = -t240 * t80 - t244 * t285 + t327;
t393 = t238 * t349 - t353;
t306 = t241 * t50 - t389 * t44;
t8 = -qJD(5) * t28 - t306;
t48 = -pkin(11) * t357 + t397;
t145 = t186 * t389 + t188 * t241;
t225 = pkin(9) * t358;
t388 = pkin(2) * t245;
t180 = t225 + (-pkin(3) - t388) * t238;
t147 = pkin(4) * t186 + t180;
t62 = pkin(5) * t145 - pkin(11) * t146 + t147;
t23 = -t240 * t48 + t244 * t62;
t391 = qJD(6) * t23 + t240 * t403 + t244 * t406;
t24 = t240 * t62 + t244 * t48;
t390 = -qJD(6) * t24 - t240 * t406 + t244 * t403;
t230 = -pkin(4) * t237 - pkin(3);
t149 = -pkin(5) * t266 - pkin(11) * t198 + t230;
t99 = t149 * t240 + t156 * t244;
t386 = qJD(6) * t99 + t240 * t405 + t244 * t404;
t98 = t149 * t244 - t156 * t240;
t385 = -qJD(6) * t98 + t240 * t404 - t244 * t405;
t384 = -pkin(5) * t311 - t382;
t325 = qJD(6) * t244;
t381 = -t103 * t325 - t240 * t39;
t377 = t145 * t81;
t150 = -t236 * t393 - t239 * t357;
t376 = t150 * t87;
t375 = t240 * t81;
t326 = qJD(6) * t240;
t38 = qJD(6) * t301 - t240 * t285 + t244 * t80 + t268 * t326;
t374 = t38 * t240;
t373 = t39 * t244;
t372 = t81 * t266;
t370 = pkin(5) * t313 + t369;
t368 = t105 * t103;
t366 = t268 * t123;
t365 = t150 * t245;
t166 = -t210 * t235 + t221;
t364 = t166 * t235;
t363 = t198 * t240;
t362 = t198 * t244;
t231 = t235 ^ 2;
t233 = t245 ^ 2;
t360 = t231 * t233;
t247 = qJD(2) ^ 2;
t359 = t231 * t247;
t356 = t236 * t247;
t340 = t242 ^ 2 - t233;
t332 = qJD(3) * t234;
t331 = qJD(3) * t237;
t324 = qJD(3) - t224;
t320 = t231 * t380;
t319 = t233 * t359;
t318 = t240 * t357;
t317 = t243 * t356;
t304 = t240 * t342 - t244 * t313;
t303 = t240 * t313 + t244 * t342;
t302 = t400 ^ 2;
t299 = t400 * t244;
t298 = t322 * t235;
t297 = t224 + t335;
t296 = -t171 + t331;
t295 = t231 * t317;
t291 = t235 * t243 * t336;
t274 = t238 * t352 + t351;
t151 = t236 * t274 + t239 * t358;
t187 = -t235 * t236 * t246 + t238 * t239;
t117 = -t151 * t234 + t187 * t237;
t118 = t151 * t237 + t187 * t234;
t64 = t241 * t117 + t118 * t389;
t45 = t150 * t244 - t240 * t64;
t46 = t150 * t240 + t244 * t64;
t280 = -t171 * t237 + t172 * t234;
t278 = t231 * t242 * t307;
t27 = -t241 * t59 + t389 * t56;
t51 = -t241 * t107 + t389 * t93;
t119 = t146 * t240 + t244 * t357;
t21 = pkin(5) * t322 - t27;
t270 = -pkin(11) * t81 + t21 * t400;
t269 = t117 * t389 - t241 * t118;
t264 = t296 * t337;
t263 = (-t172 + t332) * t337;
t261 = t198 * t325 - t304;
t260 = -t198 * t326 - t303;
t259 = t245 * t263;
t258 = qJD(3) * (-t320 + t364);
t250 = -qJ(4) * t330 + (-pkin(3) * qJD(3) + qJD(4) - t113) * t245;
t213 = t242 * t245 * t359;
t202 = -0.2e1 * t278;
t191 = t238 * t388 - t225;
t120 = t146 * t244 - t318;
t111 = t288 + (t273 * qJD(2) + qJD(3) * t393) * t236;
t110 = t289 + (qJD(3) * t274 + t257) * t236;
t90 = t111 * t237 + t234 * t291;
t89 = -t111 * t234 + t237 * t291;
t77 = t244 * t81;
t66 = pkin(5) * t268 + pkin(11) * t123;
t55 = -qJD(6) * t318 - t100 * t240 + t146 * t325 - t244 * t311;
t54 = qJD(6) * t119 + t244 * t100 - t240 * t311;
t47 = pkin(5) * t357 - t51;
t26 = qJD(5) * t64 + t241 * t90 - t389 * t89;
t25 = qJD(5) * t269 + t241 * t89 + t389 * t90;
t14 = t240 * t66 + t244 * t27;
t13 = -t240 * t27 + t244 * t66;
t10 = -qJD(6) * t46 + t110 * t244 - t240 * t25;
t9 = qJD(6) * t45 + t110 * t240 + t244 * t25;
t6 = -pkin(5) * t285 - t8;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t246 * t356, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * t224 + t187 * t285 - t245 * t295, -t111 * t224 + t187 * t286 + t242 * t295 (t110 * t242 + t111 * t245 + (-t151 * t242 + t365) * qJD(3)) * t337, -t110 * t130 + t111 * t131 + t376 + t151 * t86 + (qJD(1) * t187 + t166) * t291, 0, 0, 0, 0, 0, 0, -t110 * t171 + (-t245 * t89 + (t117 * t242 + t234 * t365) * qJD(3)) * t337, t110 * t172 + (t245 * t90 + (-t118 * t242 + t150 * t355) * qJD(3)) * t337, t171 * t90 - t172 * t89 + (-t117 * t237 - t118 * t234) * t286, t110 * t113 + t117 * t57 + t118 * t58 + t67 * t89 + t68 * t90 + t376, 0, 0, 0, 0, 0, 0, t110 * t123 + t150 * t81 + t26 * t322 + t269 * t285, t110 * t268 - t150 * t80 + t25 * t322 - t285 * t64, -t123 * t25 + t26 * t268 + t269 * t80 - t64 * t81, t110 * t82 + t150 * t73 + t25 * t28 - t26 * t27 + t269 * t8 - t272 * t64, 0, 0, 0, 0, 0, 0, t10 * t400 + t103 * t26 - t269 * t39 + t45 * t81, t105 * t26 + t269 * t38 - t400 * t9 - t46 * t81, -t10 * t105 - t103 * t9 + t38 * t45 - t39 * t46, t1 * t46 - t10 * t281 + t12 * t9 + t2 * t45 + t21 * t26 - t269 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t278, -0.2e1 * t340 * t231 * t321, t297 * t310, t202, -t297 * t311, 0, t224 * t344 - t238 * t87 + t242 * t258, t224 * t343 - t238 * t86 + t245 * t258 (t242 * t87 + t245 * t86 + (-t130 * t245 - t131 * t242) * qJD(3) + ((-qJD(3) * t191 - t343) * t245 + (-t344 - t184) * t242) * qJD(2)) * t235, -t191 * t87 + t192 * t86 - t343 * t131 + t344 * t130 + (-t320 - t364) * t314 (qJD(2) * t188 + t172) * t290 ((-t186 * t237 - t188 * t234) * qJD(2) - t280) * t310 (t172 * t358 + (t188 * t358 - 0.2e1 * t237 * t360) * qJD(2)) * qJD(3) (qJD(2) * t186 - t171) * t287 (t171 * t358 + (-t186 * t358 + 0.2e1 * t234 * t360) * qJD(2)) * qJD(3), t202, t186 * t87 + t344 * t171 + ((qJD(2) * t128 + t67) * t330 + (t113 * t332 - t57 + (t180 * t332 - t348) * qJD(2)) * t245) * t235, t188 * t87 - t344 * t172 + ((-qJD(2) * t129 - t68) * t330 + (t113 * t331 + t58 + (t180 * t331 + t347) * qJD(2)) * t245) * t235, -t186 * t58 - t188 * t57 - t348 * t172 + t347 * t171 + (-t234 * t68 - t237 * t67 + (-t128 * t237 - t129 * t234) * qJD(2)) * t310, -t113 * t344 + t128 * t57 + t129 * t58 + t180 * t87 + t347 * t68 + t348 * t67, -t100 * t268 - t146 * t80, t100 * t123 - t101 * t268 + t145 * t80 - t146 * t81, t100 * t322 + (t80 * t245 + (qJD(2) * t146 + t268) * t330) * t235, t101 * t123 + t377, t101 * t322 + (t81 * t245 + (-qJD(2) * t145 - t123) * t330) * t235 (-t231 * t333 - t298) * t330, t147 * t81 + t73 * t145 + t82 * t101 + t346 * t123 + (-t8 * t245 + (qJD(2) * t51 + t27) * t330) * t235 - t382 * t322, -t147 * t80 + t73 * t146 - t82 * t100 + t346 * t268 + (-t272 * t245 + (-qJD(2) * t397 - t28) * t330) * t235 + t383 * t322, t100 * t27 - t101 * t28 - t123 * t383 + t145 * t272 - t146 * t8 - t268 * t382 - t397 * t81 + t51 * t80, t147 * t73 + t27 * t382 - t272 * t397 + t28 * t383 + t346 * t82 + t51 * t8, -t105 * t54 - t120 * t38, t103 * t54 - t105 * t55 + t119 * t38 - t120 * t39, t101 * t105 + t120 * t81 - t145 * t38 - t400 * t54, t103 * t55 + t119 * t39, -t101 * t103 - t119 * t81 - t145 * t39 - t400 * t55, t101 * t400 + t377, -t101 * t281 + t103 * t384 + t119 * t6 + t145 * t2 + t21 * t55 + t23 * t81 + t39 * t47 + t390 * t400, -t1 * t145 - t101 * t12 + t384 * t105 + t120 * t6 - t21 * t54 - t24 * t81 - t38 * t47 - t391 * t400, -t1 * t119 - t103 * t391 - t390 * t105 - t12 * t55 - t120 * t2 + t23 * t38 - t24 * t39 - t281 * t54, t1 * t24 + t12 * t391 + t2 * t23 + t384 * t21 - t281 * t390 + t47 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, t340 * t359, t324 * t222, t213, -t324 * t313, 0, t131 * t224 + t255 * t245 + (-t166 * t337 - qJD(3) * t361 + (-qJD(3) * t235 * t239 - t312) * qJD(1)) * t242, t195 * t330 + t130 * t224 + (-t166 * t357 + t242 * t293) * qJD(2) - t315, 0, 0, t237 * t259 ((-t234 ^ 2 + t237 ^ 2) * qJD(3) + t280) * t222, t237 * t319 + t242 * t263, -t296 * t292, -t234 * t319 + t242 * t264, t213, t131 * t171 - t237 * t87 + (t234 * t250 - t242 * t67 + t245 * t95) * t337, -t131 * t172 + t234 * t87 + (t237 * t250 + t242 * t68 - t245 * t96) * t337, -t171 * t96 + t172 * t95 + (qJD(4) * t171 + t222 * t67 + t58) * t237 + (qJD(4) * t172 + t222 * t68 - t57) * t234, -pkin(3) * t87 - t113 * t131 - t67 * t95 - t68 * t96 + (-t234 * t67 + t237 * t68) * qJD(4) + (-t234 * t57 + t237 * t58) * qJ(4), -t80 * t198 - t268 * t342, t123 * t342 - t198 * t81 - t266 * t80 - t268 * t341 (qJD(3) * t198 - t268) * t313 + t342 * t322, t123 * t341 - t372 (qJD(3) * t266 + t123) * t313 + t341 * t322, t298 * t334, t230 * t81 - t73 * t266 - t112 * t123 + t341 * t82 + (qJD(3) * t267 - t27) * t313 + t369 * t322, -t230 * t80 + t73 * t198 - t112 * t268 - t342 * t82 + (-qJD(3) * t156 + t28) * t313 + t371 * t322, -t123 * t371 - t156 * t81 - t198 * t8 - t266 * t272 + t267 * t80 + t268 * t369 + t27 * t342 - t28 * t341, -t112 * t82 - t156 * t272 + t230 * t73 + t267 * t8 - t27 * t369 + t28 * t371, t105 * t260 - t362 * t38, t304 * t105 + t303 * t103 + (t374 - t373 + (t103 * t240 - t105 * t244) * qJD(6)) * t198, t105 * t341 + t260 * t400 + t266 * t38 + t362 * t81, t103 * t261 + t363 * t39, -t103 * t341 - t261 * t400 + t266 * t39 - t363 * t81, t341 * t400 - t372, t103 * t370 - t2 * t266 + t21 * t261 - t267 * t39 - t281 * t341 + t363 * t6 - t386 * t400 + t81 * t98, t1 * t266 + t105 * t370 - t12 * t341 + t21 * t260 + t267 * t38 + t362 * t6 + t385 * t400 - t81 * t99, t38 * t98 - t39 * t99 + t304 * t12 - t303 * t281 + t386 * t105 + t385 * t103 + (-t1 * t240 - t2 * t244 + (-t12 * t244 - t240 * t281) * qJD(6)) * t198, t1 * t99 - t12 * t385 + t2 * t98 + t21 * t370 - t267 * t6 + t281 * t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, t245 * t264, -t171 ^ 2 - t172 ^ 2, -t171 * t68 + t172 * t67 + t87, 0, 0, 0, 0, 0, 0, t249 + 0.2e1 * t392 - t394, -t80 + t401, -t399 - t408, t123 * t28 + t268 * t27 + t73, 0, 0, 0, 0, 0, 0, -t240 * t302 - t396 + t77, -t244 * t302 - t375 - t395 (t38 - t402) * t244 + t410 + t381, -t268 * t21 + t240 * t407 + t244 * t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, t399 - t408, -t80 - t401, -t366, -t198 * t286 - t394, t285, -t28 * t222 - t268 * t82 - t306, t82 * t123 - t27 * t322 + t272, 0, 0, t105 * t299 - t374 (-t38 - t402) * t244 - t410 + t381, t299 * t400 + t375 - t395, t103 * t367 - t373, -t367 * t400 + t396 + t77, -t400 * t268, -pkin(5) * t39 - t103 * t28 + t281 * t268 - t244 * t6 + (-pkin(11) * t325 - t13) * t400 + t270 * t240, pkin(5) * t38 - t105 * t28 + t12 * t268 + t240 * t6 + (pkin(11) * t326 + t14) * t400 + t270 * t244, t103 * t14 + t105 * t13 + ((-t39 + t327) * pkin(11) + t407) * t244 + ((qJD(6) * t103 - t38) * pkin(11) - t409) * t240, -pkin(5) * t6 + t281 * t13 - t12 * t14 - t21 * t28 + (t1 * t244 - t2 * t240 + (-t12 * t240 + t244 * t281) * qJD(6)) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, -t103 ^ 2 + t105 ^ 2, t103 * t400 - t38, -t368, t105 * t400 - t39, t81, -t105 * t21 + t409, t103 * t21 - t407, 0, 0;];
tauc_reg  = t3;
