% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:08:49
% EndTime: 2019-03-09 06:09:11
% DurationCPUTime: 12.85s
% Computational Cost: add. (17341->561), mult. (33302->749), div. (0->0), fcn. (39635->8), ass. (0->448)
t372 = sin(pkin(10));
t373 = cos(pkin(10));
t376 = sin(qJ(3));
t378 = cos(qJ(3));
t337 = -t376 * t372 + t373 * t378;
t338 = t372 * t378 + t376 * t373;
t375 = sin(qJ(4));
t624 = cos(qJ(4));
t295 = -t624 * t337 + t375 * t338;
t377 = cos(qJ(5));
t671 = t377 * t295;
t685 = t671 / 0.2e1;
t686 = -t671 / 0.2e1;
t689 = t686 + t685;
t700 = qJD(5) * t689;
t575 = t295 ^ 2;
t324 = t624 * t338;
t557 = t375 * t337;
t653 = t324 + t557;
t678 = t653 ^ 2;
t681 = t678 - t575;
t692 = t681 * t377;
t702 = qJD(1) * t692;
t705 = t700 + t702;
t491 = qJD(3) + qJD(4);
t374 = sin(qJ(5));
t704 = 0.2e1 * t374;
t615 = pkin(7) + qJ(2);
t343 = t615 * t372;
t344 = t615 * t373;
t417 = t376 * t343 - t344 * t378;
t238 = t337 * pkin(8) - t417;
t558 = t375 * t238;
t447 = t378 * t343 + t344 * t376;
t411 = -pkin(8) * t338 - t447;
t655 = t624 * t411;
t139 = t655 - t558;
t694 = t377 * t139;
t465 = -t694 / 0.2e1;
t695 = t374 * t139;
t703 = pkin(5) * t653 + qJ(6) * t671 - t695;
t693 = t681 * t374;
t701 = qJD(1) * t693;
t620 = t295 * pkin(5);
t554 = t377 * t653;
t359 = -pkin(2) * t373 - pkin(1);
t311 = -pkin(3) * t337 + t359;
t621 = pkin(9) * t653;
t432 = pkin(4) * t295 - t621;
t390 = t311 + t432;
t477 = t624 * t238;
t657 = t375 * t411;
t668 = t477 + t657;
t683 = t668 * t374;
t91 = -t377 * t390 + t683;
t82 = -qJ(6) * t554 - t91;
t57 = t82 + t620;
t648 = -t57 / 0.2e1;
t481 = t82 / 0.2e1 + t648;
t687 = pkin(5) * t685 + t481 * t377;
t699 = t687 * qJD(5);
t669 = t653 * t374;
t280 = t669 / 0.2e1;
t464 = -t669 / 0.2e1;
t691 = t464 + t280;
t698 = t691 * qJD(2);
t113 = pkin(5) * t669 - t139;
t672 = t374 * t295;
t680 = -pkin(5) * t672 + t668;
t697 = t113 * t680;
t696 = t139 * t295;
t662 = t653 * qJD(1);
t470 = t295 * t662;
t436 = t324 / 0.2e1;
t651 = t436 + t557 / 0.2e1;
t690 = qJD(5) * t651 + t470;
t688 = t681 * qJD(1);
t371 = t377 ^ 2;
t673 = t371 * t295;
t271 = -t673 / 0.2e1;
t272 = t673 / 0.2e1;
t684 = qJ(6) * t672;
t682 = t668 * t377;
t618 = t653 * pkin(4);
t619 = t295 * pkin(9);
t184 = t618 + t619;
t549 = t657 / 0.2e1 + t477 / 0.2e1;
t677 = -t295 / 0.2e1;
t642 = t295 / 0.2e1;
t676 = -t653 / 0.2e1;
t675 = t653 / 0.2e1;
t645 = -t655 / 0.2e1;
t92 = t374 * t390 + t682;
t83 = -qJ(6) * t669 + t92;
t426 = t83 * t374 + t57 * t377;
t670 = t426 * t295;
t667 = t491 * t295;
t666 = qJD(1) * t295;
t665 = qJD(2) * t295;
t663 = t651 * qJD(1);
t660 = -0.2e1 * t653;
t488 = t624 * pkin(3);
t659 = -t57 + t82;
t370 = t374 ^ 2;
t356 = t371 - t370;
t658 = t356 * t491;
t355 = t370 + t371;
t656 = t491 * t355;
t173 = 0.2e1 * t686;
t617 = t375 * pkin(3);
t360 = pkin(9) + t617;
t552 = qJ(6) + t360;
t330 = t552 * t377;
t572 = t330 * t377;
t317 = t572 / 0.2e1;
t329 = t552 * t374;
t574 = t329 * t374;
t654 = t317 + t574 / 0.2e1;
t614 = -qJ(6) - pkin(9);
t347 = t614 * t377;
t569 = t347 * t377;
t334 = -t569 / 0.2e1;
t346 = t614 * t374;
t571 = t346 * t374;
t652 = t334 - t571 / 0.2e1;
t629 = -t371 / 0.2e1;
t630 = t370 / 0.2e1;
t156 = (t630 + t629) * t653;
t532 = qJD(1) * t377;
t473 = t374 * t532;
t650 = t156 * t491 + t473 * t678;
t623 = pkin(3) * t338;
t146 = t623 + t184;
t145 = t377 * t146;
t62 = t145 + t703;
t647 = t62 / 0.2e1;
t182 = t377 * t184;
t69 = t182 + t703;
t646 = t69 / 0.2e1;
t639 = -t329 / 0.2e1;
t638 = -t330 / 0.2e1;
t637 = t330 / 0.2e1;
t361 = -t488 - pkin(4);
t616 = t377 * pkin(5);
t345 = t361 - t616;
t636 = t345 / 0.2e1;
t635 = t346 / 0.2e1;
t634 = t347 / 0.2e1;
t633 = -t347 / 0.2e1;
t632 = -t361 / 0.2e1;
t362 = -pkin(4) - t616;
t631 = -t362 / 0.2e1;
t628 = -t374 / 0.2e1;
t627 = t374 / 0.2e1;
t626 = t375 / 0.2e1;
t625 = -t377 / 0.2e1;
t622 = pkin(5) * t374;
t603 = t83 * t377;
t610 = t57 * t374;
t613 = -t610 / 0.2e1 + t603 / 0.2e1;
t612 = pkin(3) * qJD(4);
t611 = pkin(5) * qJD(5);
t609 = t62 * t374;
t608 = t62 * t377;
t607 = t69 * t374;
t606 = t69 * t377;
t144 = t374 * t146;
t550 = t694 + t144;
t87 = t550 + t684;
t7 = t57 * t62 + t83 * t87 + t697;
t605 = t7 * qJD(1);
t181 = t374 * t184;
t551 = -t694 - t181;
t90 = -t551 + t684;
t8 = t57 * t69 + t83 * t90 + t697;
t604 = t8 * qJD(1);
t602 = t87 * t374;
t601 = t87 * t377;
t600 = t90 * t374;
t599 = t90 * t377;
t489 = pkin(5) * t554;
t12 = t113 * t489 + t659 * t83;
t598 = qJD(1) * t12;
t435 = pkin(5) * t642 - t82 / 0.2e1;
t13 = (t648 - t435) * t377;
t597 = qJD(1) * t13;
t15 = (-t620 / 0.2e1 + t481) * t377;
t596 = qJD(1) * t15;
t17 = t659 * t669;
t595 = qJD(1) * t17;
t23 = t113 * t653 - (t603 - t610) * t295;
t594 = qJD(1) * t23;
t384 = -t295 * t654 + t636 * t653;
t410 = -t608 / 0.2e1 - t602 / 0.2e1;
t30 = t384 + t410;
t593 = qJD(1) * t30;
t383 = -t652 * t295 + t362 * t675;
t409 = -t606 / 0.2e1 - t600 / 0.2e1;
t32 = t383 + t409;
t592 = qJD(1) * t32;
t34 = t426 * t653;
t591 = qJD(1) * t34;
t381 = t360 * t676 + t295 * t632 + (t624 * t677 + t626 * t653) * pkin(3);
t380 = t621 / 0.2e1 + pkin(4) * t677 + t381;
t35 = t374 * t380;
t590 = qJD(1) * t35;
t43 = t139 * t669 + t295 * t91;
t589 = qJD(1) * t43;
t44 = -t139 * t554 - t295 * t92;
t588 = qJD(1) * t44;
t285 = t370 * t295;
t262 = -t285 / 0.2e1;
t461 = t295 * t630;
t429 = t272 + t461;
t97 = t271 + t262 + t429;
t586 = qJD(1) * t97;
t11 = (t602 + t608) * t653 - t670;
t585 = t11 * qJD(1);
t18 = (t600 + t606) * t653 - t670;
t581 = t18 * qJD(1);
t421 = t653 * t668 + t696;
t26 = t145 * t295 - t91 * t653 + (t421 - t696) * t374;
t580 = t26 * qJD(1);
t27 = -t295 * t550 + t377 * t421 - t653 * t92;
t579 = t27 * qJD(1);
t28 = t182 * t295 + (-t91 + t683) * t653;
t578 = t28 * qJD(1);
t29 = (-t92 + t682) * t653 + (t551 + t694) * t295;
t577 = t29 * qJD(1);
t573 = t329 * t377;
t570 = t346 * t377;
t563 = t374 * t330;
t562 = t374 * t347;
t561 = t374 * t377;
t94 = t645 + t655 / 0.2e1;
t553 = t94 * qJD(1);
t451 = 0.2e1 * t676;
t168 = t451 * t377;
t527 = qJD(3) * t377;
t547 = -t168 * qJD(4) + t527 * t653;
t328 = t355 * t488;
t348 = t355 * qJD(6);
t546 = t328 * qJD(4) + t348;
t354 = t372 ^ 2 + t373 ^ 2;
t420 = t575 + t678;
t102 = t420 * t374;
t544 = qJD(1) * t102;
t104 = t420 * t377;
t542 = qJD(1) * t104;
t119 = -t295 * t623 - t311 * t653;
t539 = qJD(1) * t119;
t120 = t295 * t311 - t623 * t653;
t538 = qJD(1) * t120;
t149 = (t677 + t642) * t561;
t537 = qJD(1) * t149;
t536 = qJD(1) * t156;
t180 = t356 * t678;
t535 = qJD(1) * t180;
t533 = qJD(1) * t311;
t531 = qJD(2) * t653;
t530 = qJD(3) * t653;
t528 = qJD(3) * t374;
t525 = qJD(4) * t653;
t524 = qJD(4) * t311;
t523 = qJD(4) * t374;
t522 = qJD(4) * t377;
t521 = qJD(5) * t374;
t367 = qJD(5) * t377;
t263 = t285 / 0.2e1;
t100 = t272 + t263 + t429;
t520 = t100 * qJD(1);
t322 = -t324 / 0.2e1;
t439 = t370 * t676 + t629 * t653;
t116 = -t557 / 0.2e1 + t322 + t439;
t518 = t116 * qJD(1);
t516 = t669 * qJD(1);
t515 = t672 * qJD(1);
t161 = t677 * t704;
t153 = t161 * qJD(1);
t450 = t675 + t676;
t164 = t450 * t374;
t514 = t164 * qJD(1);
t166 = t451 * t374;
t513 = t166 * qJD(1);
t167 = t450 * t377;
t512 = t167 * qJD(1);
t511 = t168 * qJD(1);
t510 = t671 * qJD(1);
t172 = 0.2e1 * t685;
t509 = t172 * qJD(1);
t508 = t173 * qJD(1);
t178 = t285 + t673;
t507 = t178 * qJD(1);
t179 = t355 * t678;
t506 = t179 * qJD(1);
t203 = 0.2e1 * t436 + t557;
t504 = t203 * qJD(1);
t243 = t337 ^ 2 - t338 ^ 2;
t503 = t243 * qJD(1);
t292 = t436 + t322;
t500 = t292 * qJD(1);
t499 = t292 * qJD(4);
t496 = t337 * qJD(1);
t327 = t337 * qJD(3);
t495 = t338 * qJD(1);
t494 = t338 * qJD(3);
t340 = t354 * qJ(2);
t493 = t340 * qJD(1);
t492 = t354 * qJD(1);
t487 = qJD(3) * t617;
t486 = pkin(5) * t367;
t485 = qJD(6) * t622;
t484 = t375 * t612;
t483 = t622 / 0.2e1;
t482 = t617 / 0.2e1;
t480 = t374 * t624;
t479 = t377 * t624;
t476 = t295 * t533;
t475 = t653 * t533;
t474 = t371 * t662;
t472 = t653 * t521;
t471 = t653 * t367;
t469 = t653 * t666;
t468 = t337 * t495;
t357 = t374 * t367;
t467 = t377 * t662;
t466 = t113 * t628;
t460 = -t672 / 0.2e1;
t459 = t672 / 0.2e1;
t458 = t562 / 0.2e1;
t455 = -t554 / 0.2e1;
t454 = t694 / 0.2e1 + t181 / 0.2e1;
t453 = t465 - t144 / 0.2e1;
t449 = t624 * qJD(3);
t448 = t624 * qJD(4);
t446 = t491 * t374;
t445 = t489 / 0.2e1;
t444 = pkin(5) * t459;
t443 = -qJD(1) * t359 - qJD(2);
t442 = -t488 / 0.2e1;
t440 = t653 * t473;
t438 = t271 + t461;
t437 = -t480 / 0.2e1;
t433 = t491 * t617;
t431 = -0.2e1 * t440;
t430 = 0.2e1 * t440;
t428 = t491 * t561;
t427 = t377 * t446;
t425 = pkin(3) * t437;
t424 = t295 * t440;
t191 = (t329 * t480 + t330 * t479 + t345 * t375) * pkin(3);
t379 = (t83 * t479 / 0.2e1 + t57 * t437 + t113 * t626) * pkin(3) + t680 * t636 + t69 * t639 + t90 * t637;
t391 = t680 * t631 - t62 * t346 / 0.2e1 + t87 * t634;
t2 = t379 + t391;
t423 = t2 * qJD(1) + t191 * qJD(3);
t9 = (t90 / 0.2e1 - t87 / 0.2e1) * t377 + (-t69 / 0.2e1 + t647) * t374 + ((t639 - t635) * t377 + (t637 - t633) * t374) * t295;
t422 = -qJD(1) * t9 - qJD(3) * t328;
t418 = -t361 * t295 - t360 * t653;
t385 = t444 - t549;
t407 = t563 / 0.2e1 - t573 / 0.2e1;
t389 = -t407 * t653 + t613;
t22 = t385 + t389;
t288 = t572 + t574;
t416 = qJD(1) * t22 + qJD(3) * t288;
t415 = t653 * (-qJD(5) - t666);
t414 = qJD(4) * t203 + t530;
t412 = t619 / 0.2e1 + t618 / 0.2e1;
t408 = t360 * t642 + t653 * t632;
t397 = t408 * t377;
t41 = -t145 / 0.2e1 - t397;
t406 = -qJD(1) * t41 - t361 * t528;
t382 = t374 * t408 + t465;
t39 = t382 - t453;
t405 = -qJD(1) * t39 - t361 * t527;
t402 = t442 + pkin(4) / 0.2e1 + t632;
t401 = t667 * t653;
t38 = t377 * t380;
t400 = -qJD(1) * t38 - t374 * t487;
t399 = t412 * t377;
t183 = t345 * t622;
t283 = t317 - t572 / 0.2e1;
t3 = -t481 * t330 + (t345 * t455 + t466 + t647) * pkin(5);
t396 = -qJD(1) * t3 + qJD(2) * t283 + qJD(3) * t183;
t185 = t482 + (t634 + t638) * t377 + (t635 + t639) * t374;
t388 = (t458 - t570 / 0.2e1) * t653 + t613;
t25 = t295 * t483 + t388 - t549;
t302 = -t569 - t571;
t395 = qJD(1) * t25 - qJD(3) * t185 + t302 * qJD(4);
t19 = t610 / 0.2e1 + t435 * t374;
t300 = t334 + t569 / 0.2e1;
t394 = qJD(1) * t19 - qJD(3) * t283 - qJD(4) * t300;
t307 = t402 * t374;
t47 = -t182 / 0.2e1 - t399;
t393 = pkin(4) * t523 - qJD(1) * t47 + qJD(3) * t307;
t308 = t402 * t377;
t386 = t374 * t412 + t465;
t45 = t386 + t454;
t392 = pkin(4) * t522 - qJD(1) * t45 + qJD(3) * t308;
t110 = (t442 + t631 - t345 / 0.2e1) * t622;
t205 = t362 * t622;
t5 = t481 * t347 + (t362 * t455 + t466 + t646) * pkin(5);
t387 = -qJD(1) * t5 + qJD(2) * t300 - qJD(3) * t110 + qJD(4) * t205;
t366 = pkin(5) * t521;
t353 = t374 * t484;
t349 = t356 * qJD(5);
t310 = pkin(4) * t625 + (t361 / 0.2e1 + t442) * t377;
t309 = pkin(4) * t628 + t361 * t627 + t425;
t299 = t300 * qJD(5);
t260 = t283 * qJD(5);
t244 = t357 * t660;
t204 = (t532 * t653 + t446) * pkin(5);
t190 = t431 + t658;
t189 = t430 - t658;
t186 = t482 + t652 + t654;
t177 = t491 * t651;
t163 = 0.2e1 * t280;
t162 = t460 + t459;
t155 = t167 * qJD(4);
t152 = t162 * qJD(5);
t151 = t161 * qJD(5);
t150 = t156 * qJD(5);
t148 = t173 * t374;
t147 = t153 - t521;
t136 = t427 - t536;
t135 = -t428 + t536;
t115 = t651 + t439;
t111 = pkin(5) * t425 + (t345 + t362) * t483;
t108 = t113 * t483;
t99 = t272 + t262 + t438;
t98 = t271 + t263 + t438;
t96 = -0.2e1 * t549;
t95 = t558 + 0.2e1 * t645;
t48 = -t695 + t182 / 0.2e1 - t399;
t46 = t386 - t454;
t42 = -t695 + t145 / 0.2e1 - t397;
t40 = t382 + t453;
t37 = pkin(4) * t685 + t381 * t377 + t621 * t625 + t683;
t36 = pkin(4) * t459 + pkin(9) * t464 + t381 * t374 - t682;
t33 = t383 - t409;
t31 = t384 - t410;
t24 = pkin(5) * t460 + t388 + t549;
t21 = -t385 + t389;
t20 = t82 * t627 - t603 / 0.2e1 + t444 + t613;
t10 = t599 / 0.2e1 - t607 / 0.2e1 + t601 / 0.2e1 + t346 * t685 - t609 / 0.2e1 + (-t458 + t407) * t295;
t6 = pkin(5) * t646 + t362 * t445 + t57 * t634 + t633 * t82 + t108;
t4 = pkin(5) * t647 + t345 * t445 + t57 * t638 + t637 * t82 + t108;
t1 = t379 - t391;
t14 = [0, 0, 0, 0, 0, t354 * qJD(2), t340 * qJD(2), t337 * t494, t243 * qJD(3), 0, 0, 0, t359 * t494, t359 * t327, -t401, -t491 * t681, 0, 0, 0, -qJD(3) * t119 + t524 * t653, -qJD(3) * t120 - t295 * t524, -t357 * t678 - t371 * t401, t554 * t667 * t704 - qJD(5) * t180, -t295 * t472 + t491 * t692, -t295 * t471 - t491 * t693 (t525 + t530) * t295, qJD(2) * t102 + qJD(3) * t26 + qJD(4) * t28 + qJD(5) * t44, qJD(2) * t104 + qJD(3) * t27 + qJD(4) * t29 + qJD(5) * t43, -qJD(3) * t11 - qJD(4) * t18 - qJD(5) * t17 + qJD(6) * t179, qJD(2) * t23 + qJD(3) * t7 + qJD(4) * t8 + qJD(5) * t12 - qJD(6) * t34; 0, 0, 0, 0, 0, t492, t493, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, 0, 0, 0, 0, 0, 0, t152 + t155 + t544, t491 * t691 + t542 + t700, t99 * qJD(4), qJD(3) * t31 + qJD(4) * t33 + qJD(5) * t20 + qJD(6) * t115 + t594; 0, 0, 0, 0, 0, 0, 0, t468, t503, t327, -t494, 0, qJD(3) * t417 + t359 * t495, qJD(3) * t447 + t359 * t496, -t469, -t688, -t667, -t414, 0, -qJD(3) * t668 + qJD(4) * t96 - t539, -qJD(3) * t139 + qJD(4) * t95 - t538, qJD(4) * t148 - t150 - (t374 * t527 + t474) * t295, 0.2e1 * t424 + (t285 - t673) * qJD(3) + t98 * qJD(4) + t244, qJD(4) * t163 + t528 * t653 + t705, t152 - t701 + t547, t690, t580 + (t374 * t418 - t682) * qJD(3) + t36 * qJD(4) + t42 * qJD(5), t579 + t698 + (t377 * t418 + t683) * qJD(3) + t37 * qJD(4) + t40 * qJD(5), -t585 + (-t609 + t601 - (-t563 + t573) * t295) * qJD(3) + t10 * qJD(4) + t699, t605 + t31 * qJD(2) + (-t329 * t62 + t330 * t87 + t345 * t680) * qJD(3) + t1 * qJD(4) + t4 * qJD(5) + t21 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, -t688, -t667, -qJD(3) * t203 - t525, 0, qJD(2) * t292 + qJD(3) * t96 - qJD(4) * t668 + t475, qJD(3) * t95 - qJD(4) * t139 - t476, qJD(3) * t148 - t150 + (-t374 * t522 - t474) * t295, t98 * qJD(3) + t244 + (-qJD(4) * t356 + t430) * t295, qJD(3) * t163 + t523 * t653 + t705, -qJD(3) * t168 + t522 * t653 - t701, t690, t578 + t167 * qJD(2) + t36 * qJD(3) + (t374 * t432 - t682) * qJD(4) + t48 * qJD(5), t577 + t698 + t37 * qJD(3) + (t377 * t432 + t683) * qJD(4) + t46 * qJD(5), -t581 + t99 * qJD(2) + t10 * qJD(3) + (-t607 + t599 + (-t562 + t570) * t295) * qJD(4) + t699, t604 + t33 * qJD(2) + t1 * qJD(3) + (t346 * t69 - t347 * t90 + t362 * t680) * qJD(4) + t6 * qJD(5) + t24 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t650, t428 * t660 - t535, t374 * t415 + t491 * t689, qJD(3) * t162 + t377 * t415, t177, qJD(2) * t162 + qJD(3) * t42 + qJD(4) * t48 - qJD(5) * t92 + t588, qJD(2) * t689 + qJD(3) * t40 + qJD(4) * t46 + qJD(5) * t91 + t589, pkin(5) * t472 + t491 * t687 - t595, qJD(2) * t20 + qJD(3) * t4 + qJD(4) * t6 - t611 * t83 + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, qJD(2) * t115 + qJD(3) * t21 + qJD(4) * t24 - t591; 0, 0, 0, 0, 0, -t492, -t493, 0, 0, 0, 0, 0, t494, t327, 0, 0, 0, 0, 0, t414, -t667, 0, 0, 0, 0, 0, t151 - t544 + t547, -qJD(3) * t669 + qJD(4) * t166 + qJD(5) * t173 - t542, qJD(3) * t178 + qJD(4) * t100, -qJD(3) * t30 - qJD(4) * t32 - qJD(5) * t19 + qJD(6) * t116 - t594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, t496, 0, 0, 0, 0, 0, t662, -t666, 0, 0, 0, 0, 0, t467, -t516, t507, t260 - t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t504, -t666, 0, 0, 0, 0, 0, -t511, t513, t520, t299 - t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, -t367 + t508, 0, -t366 - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518; 0, 0, 0, 0, 0, 0, 0, -t468, -t503, 0, 0, 0, t443 * t338, t443 * t337, t469, t688, 0, -t499, 0, -t531 + t539, qJD(4) * t94 + t538 + t665, qJD(4) * t149 + t371 * t469 - t150, qJD(4) * t97 + t244 - 0.2e1 * t424, qJD(4) * t164 + qJD(5) * t172 - t702, t151 + t155 + t701, -t690, qJD(4) * t35 + qJD(5) * t41 - t377 * t531 - t580, qJD(2) * t669 + qJD(4) * t38 + qJD(5) * t39 - t579, -qJD(2) * t178 + qJD(4) * t9 + qJD(5) * t13 + t585, qJD(2) * t30 + qJD(4) * t2 - qJD(5) * t3 + qJD(6) * t22 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, -t496, 0, 0, 0, 0, 0, -t662, t666, 0, 0, 0, 0, 0, -t467, t516, -t507, t260 + t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t484, -pkin(3) * t448, t357, t349, 0, 0, 0, t361 * t521 - t377 * t484, t361 * t367 + t353, t546, qJD(4) * t191 + qJD(5) * t183 + qJD(6) * t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, 0, -t433, t553 + (-t449 - t448) * pkin(3), t357 + t537, t349 + t586, t514, t512, 0, qJD(5) * t309 - t377 * t433 + t590, qJD(5) * t310 + t353 - t400, -t422 + t546 (-t346 * t480 - t347 * t479 + t362 * t375) * t612 + t111 * qJD(5) + t186 * qJD(6) + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t190, t367 + t509, t147, -t663, qJD(4) * t309 - t360 * t367 - t406, qJD(4) * t310 + t360 * t521 - t405, -t486 + t597, qJD(4) * t111 - t330 * t611 + t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t656, qJD(4) * t186 + t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t688, 0, t292 * qJD(3), 0, -qJD(2) * t203 - t475, -qJD(3) * t94 + t476 + t665, -qJD(3) * t149 + t371 * t470 - t150, -qJD(3) * t97 + t295 * t431 + t244, -qJD(3) * t164 + qJD(5) * t671 - t702, -qJD(3) * t167 - qJD(5) * t672 + t701, -t690, qJD(2) * t168 - qJD(3) * t35 + qJD(5) * t47 - t578, -qJD(2) * t166 - qJD(3) * t38 + qJD(5) * t45 - t577, -qJD(2) * t100 - qJD(3) * t9 + qJD(5) * t15 + t581, qJD(2) * t32 - qJD(3) * t2 - qJD(5) * t5 + qJD(6) * t25 - t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, t666, 0, 0, 0, 0, 0, t511, -t513, -t520, t299 + t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, 0, t487, pkin(3) * t449 - t553, t357 - t537, t349 - t586, -t514, -t512, 0, -qJD(5) * t307 + t377 * t487 - t590, -qJD(5) * t308 + t400, t348 + t422, -qJD(5) * t110 - qJD(6) * t185 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, t349, 0, 0, 0, -pkin(4) * t521, -pkin(4) * t367, t348, qJD(5) * t205 + qJD(6) * t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t190, t367 + t510, -t515 - t521, -t663, -pkin(9) * t367 - t393, pkin(9) * t521 - t392, -t486 + t596, t347 * t611 + t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t656, t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t650, 0.2e1 * t427 * t653 + t535, -qJD(3) * t172 - qJD(4) * t671 + t374 * t470, -qJD(3) * t161 + qJD(4) * t672 + t377 * t470, t177, -qJD(2) * t161 - qJD(3) * t41 - qJD(4) * t47 - t588, -qJD(2) * t173 - qJD(3) * t39 - qJD(4) * t45 - t589, -qJD(3) * t13 - qJD(4) * t15 + t595, qJD(2) * t19 + qJD(3) * t3 + qJD(4) * t5 - qJD(6) * t489 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153, -t508, 0, t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t189, -t509, -t153, t663, qJD(4) * t307 + t406, qJD(4) * t308 + t405, -t597, qJD(4) * t110 - t396 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t189, -t510, t515, t663, t393, t392, -t596, -t387 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, pkin(5) * t471 - qJD(2) * t116 - qJD(3) * t22 - qJD(4) * t25 + t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t656, qJD(4) * t185 + t366 - t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t656, t366 - t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t14;
