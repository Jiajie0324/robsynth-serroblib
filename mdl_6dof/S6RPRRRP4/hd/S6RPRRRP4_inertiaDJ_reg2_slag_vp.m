% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP4_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:08:45
% EndTime: 2019-03-09 06:08:55
% DurationCPUTime: 3.38s
% Computational Cost: add. (6889->288), mult. (14923->462), div. (0->0), fcn. (15511->8), ass. (0->155)
t108 = sin(pkin(10));
t109 = cos(pkin(10));
t191 = pkin(7) + qJ(2);
t198 = cos(qJ(3));
t207 = t191 * t198;
t196 = sin(qJ(3));
t208 = t191 * t196;
t59 = -t108 * t207 - t109 * t208;
t78 = t198 * t108 + t196 * t109;
t120 = -t78 * pkin(8) + t59;
t132 = t196 * t108 - t198 * t109;
t60 = -t108 * t208 + t109 * t207;
t123 = -t132 * pkin(8) + t60;
t195 = sin(qJ(4));
t197 = cos(qJ(4));
t41 = -t197 * t120 + t195 * t123;
t129 = t132 * qJD(3);
t210 = -t198 * qJD(2) + qJD(3) * t208;
t211 = -t196 * qJD(2) - qJD(3) * t207;
t49 = t210 * t108 + t211 * t109;
t114 = pkin(8) * t129 + t49;
t186 = t78 * qJD(3);
t48 = -t211 * t108 + t210 * t109;
t115 = -t186 * pkin(8) - t48;
t113 = t41 * qJD(4) - t195 * t114 - t197 * t115;
t125 = t197 * t132;
t54 = t195 * t78 + t125;
t124 = t195 * t132;
t55 = t197 * t78 - t124;
t94 = -t109 * pkin(2) - pkin(1);
t61 = t132 * pkin(3) + t94;
t118 = t54 * pkin(4) - t55 * pkin(9) + t61;
t212 = -qJD(5) * t118 + t113;
t209 = 0.2e1 * t186;
t110 = sin(qJ(5));
t106 = t110 ^ 2;
t111 = cos(qJ(5));
t107 = t111 ^ 2;
t206 = t106 + t107;
t42 = t195 * t120 + t197 * t123;
t102 = qJD(5) * t111;
t164 = t55 * t102;
t159 = qJD(4) * t195;
t203 = qJD(3) + qJD(4);
t44 = t203 * t125 + t78 * t159 + t195 * t186;
t182 = t110 * t44;
t33 = t164 - t182;
t18 = -t110 * t42 + t111 * t118;
t19 = t110 * t118 + t111 * t42;
t205 = -t110 * t18 + t111 * t19;
t175 = t106 - t107;
t204 = t175 * qJD(5);
t101 = qJD(5) * t110;
t166 = t186 * pkin(3);
t160 = qJD(4) * t197;
t45 = -t203 * t124 + t78 * t160 + t197 * t186;
t131 = t45 * pkin(4) + t44 * pkin(9) + t166;
t173 = -t110 * t131 + t212 * t111;
t5 = t42 * t101 + t173;
t6 = -t42 * t102 + t212 * t110 + t111 * t131;
t202 = -qJD(5) * t205 + t5 * t110 - t6 * t111;
t103 = t111 * qJ(6);
t11 = t54 * pkin(5) - t55 * t103 + t18;
t181 = t110 * t55;
t14 = -qJ(6) * t181 + t19;
t100 = t111 * qJD(6);
t165 = t55 * t101;
t112 = qJ(6) * t165 - t55 * t100 + t44 * t103 + t6;
t200 = t45 * pkin(5);
t2 = t112 + t200;
t4 = qJ(6) * t164 + (-qJ(6) * t44 + qJD(5) * t42 + qJD(6) * t55) * t110 + t173;
t201 = t4 * t110 - t2 * t111 + (t11 * t110 - t111 * t14) * qJD(5);
t28 = pkin(5) * t181 + t41;
t27 = t28 * t102;
t15 = t42 * qJD(4) - t197 * t114 + t195 * t115;
t8 = t33 * pkin(5) + t15;
t199 = t8 * t110 + t27;
t194 = t111 * pkin(5);
t193 = t41 * t15;
t192 = t55 * t44;
t190 = -qJ(6) - pkin(9);
t36 = t41 * t102;
t189 = t15 * t110 + t36;
t155 = pkin(3) * t159;
t99 = pkin(5) * t101;
t80 = t155 + t99;
t172 = t197 * pkin(3);
t96 = -t172 - pkin(4);
t85 = t96 - t194;
t188 = t85 * t102 + t80 * t110;
t187 = t96 * t102 + t110 * t155;
t174 = qJD(5) * t106;
t97 = -pkin(4) - t194;
t185 = pkin(5) * t174 + t97 * t102;
t184 = pkin(3) * qJD(4);
t179 = t111 * t44;
t178 = t111 * t97;
t171 = t195 * pkin(3);
t95 = t171 + pkin(9);
t177 = qJ(6) + t95;
t176 = qJD(5) * t55;
t34 = 0.2e1 * t54 * t45;
t170 = pkin(4) * t101;
t169 = pkin(4) * t102;
t168 = pkin(5) * t102;
t167 = t110 * t179;
t26 = t28 * t101;
t35 = t41 * t101;
t72 = t85 * t101;
t83 = t97 * t101;
t161 = t110 * t102;
t156 = pkin(3) * t160;
t53 = t55 ^ 2;
t154 = t53 * t161;
t153 = 0.2e1 * (t108 ^ 2 + t109 ^ 2) * qJD(2);
t148 = -t28 * t44 + t55 * t8;
t145 = t15 * t55 - t41 * t44;
t144 = t44 * t54 - t45 * t55;
t143 = -t44 * t85 + t55 * t80;
t142 = t54 * t95 - t55 * t96;
t140 = t110 * t19 + t111 * t18;
t136 = t165 + t179;
t31 = t54 * t102 + t110 * t45;
t135 = t54 * t101 - t111 * t45;
t134 = t96 * t101 - t111 * t155;
t133 = t206 * t197;
t130 = (t195 * t55 - t197 * t54) * qJD(4);
t128 = -0.2e1 * t129;
t1 = -t140 * qJD(5) - t6 * t110 - t5 * t111;
t119 = pkin(3) * t130 - t44 * t96 - t45 * t95;
t91 = -0.2e1 * t161;
t90 = 0.2e1 * t161;
t88 = t111 * t156;
t87 = pkin(9) * t111 + t103;
t86 = t190 * t110;
t79 = -0.2e1 * t204;
t75 = t111 * t95 + t103;
t74 = t177 * t110;
t69 = -t110 * qJD(6) + t190 * t102;
t68 = -t190 * t101 - t100;
t67 = t133 * t184;
t62 = t68 * t111;
t58 = (-t156 - qJD(6)) * t110 - t177 * t102;
t57 = t177 * t101 - t100 - t88;
t56 = t57 * t111;
t25 = -0.2e1 * t107 * t192 - 0.2e1 * t154;
t24 = -0.2e1 * t106 * t192 + 0.2e1 * t154;
t23 = t206 * t44;
t22 = -t107 * t176 + t55 * t174 + t167;
t17 = 0.4e1 * t55 * t167 + 0.2e1 * t53 * t204;
t16 = -0.4e1 * t55 * t161 + t175 * t44;
t10 = 0.2e1 * t144 * t110 - 0.2e1 * t54 * t164;
t9 = -0.2e1 * t144 * t111 - 0.2e1 * t54 * t165;
t3 = t4 * t111;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, qJ(2) * t153, t78 * t128, 0.2e1 * t132 ^ 2 * qJD(3) - 0.2e1 * t186 * t78, 0, t132 * t209, 0, 0, t94 * t209, t94 * t128, -0.2e1 * t60 * t186 - 0.2e1 * t49 * t78 + 0.2e1 * (qJD(3) * t59 + t48) * t132, -0.2e1 * t48 * t60 + 0.2e1 * t49 * t59, -0.2e1 * t192, 0.2e1 * t144, 0, t34, 0, 0, 0.2e1 * t54 * t166 + 0.2e1 * t61 * t45, 0.2e1 * t55 * t166 - 0.2e1 * t61 * t44, 0.2e1 * t113 * t54 - 0.2e1 * t42 * t45 + 0.2e1 * t145, -0.2e1 * t42 * t113 + 0.2e1 * t61 * t166 + 0.2e1 * t193, t25, t17, t9, t24, t10, t34, 0.2e1 * t145 * t110 + 0.2e1 * t18 * t45 + 0.2e1 * t55 * t36 + 0.2e1 * t6 * t54, 0.2e1 * t145 * t111 - 0.2e1 * t19 * t45 - 0.2e1 * t55 * t35 + 0.2e1 * t5 * t54, 0.2e1 * t140 * t44 + 0.2e1 * t202 * t55, 0.2e1 * t18 * t6 - 0.2e1 * t19 * t5 + 0.2e1 * t193, t25, t17, t9, t24, t10, t34, 0.2e1 * t11 * t45 + 0.2e1 * t110 * t148 + 0.2e1 * t2 * t54 + 0.2e1 * t27 * t55, 0.2e1 * t148 * t111 - 0.2e1 * t14 * t45 - 0.2e1 * t26 * t55 + 0.2e1 * t4 * t54, 0.2e1 * (t11 * t111 + t110 * t14) * t44 + 0.2e1 * t201 * t55, 0.2e1 * t11 * t2 - 0.2e1 * t14 * t4 + 0.2e1 * t28 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, -t129, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t44, 0, t166, 0, 0, 0, 0, 0, 0, -t135, -t31, t23, -t202, 0, 0, 0, 0, 0, 0, -t135, -t31, t23, -t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, 0, -t186, 0, t49, t48, 0, 0, 0, 0, -t44, 0, -t45, 0, -t15, t113 (-t195 * t45 + t197 * t44 + t130) * pkin(3), -t113 * t171 - t15 * t172 + t41 * t155 + t42 * t156, -t22, t16, t31, t22, -t135, 0, t35 + (-t142 * qJD(5) - t15) * t111 + t119 * t110, t142 * t101 + t119 * t111 + t189, t1, t15 * t96 + (t41 * t195 + t205 * t197) * t184 + t1 * t95, -t22, t16, t31, t22, -t135, 0, -t74 * t45 + t58 * t54 + t26 + (t176 * t85 - t8) * t111 + t143 * t110, t143 * t111 - t75 * t45 + t57 * t54 - t55 * t72 + t199, -t3 + (-t44 * t74 - t55 * t58 + (-t55 * t75 - t11) * qJD(5)) * t111 + (t44 * t75 + t55 * t57 - t2 + (-t55 * t74 - t14) * qJD(5)) * t110, t11 * t58 - t14 * t57 - t2 * t74 + t28 * t80 - t4 * t75 + t8 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * t57 + t111 * t58 + (t110 * t74 + t111 * t75) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t155, -0.2e1 * t156, 0, 0, t90, t79, 0, t91, 0, 0, 0.2e1 * t134, 0.2e1 * t187, 0.2e1 * t67, 0.2e1 * (t133 * t95 + t195 * t96) * t184, t90, t79, 0, t91, 0, 0, -0.2e1 * t111 * t80 + 0.2e1 * t72, 0.2e1 * t188, -0.2e1 * t58 * t110 - 0.2e1 * t56 + 0.2e1 * (-t110 * t75 + t111 * t74) * qJD(5), -0.2e1 * t57 * t75 - 0.2e1 * t58 * t74 + 0.2e1 * t80 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, 0, -t45, 0, -t15, t113, 0, 0, -t22, t16, t31, t22, -t135, 0, t35 + (pkin(4) * t44 - pkin(9) * t45) * t110 + (-t15 + (-pkin(4) * t55 - pkin(9) * t54) * qJD(5)) * t111, pkin(4) * t136 + pkin(9) * t135 + t189, t1, -t15 * pkin(4) + pkin(9) * t1, -t22, t16, t31, t22, -t135, 0, -t97 * t182 - t111 * t8 + t86 * t45 + t69 * t54 + t26 + (pkin(5) * t106 + t178) * t176, -t44 * t178 - t87 * t45 + t68 * t54 + (-t97 + t194) * t165 + t199, -t3 + (t44 * t86 - t55 * t69 + (-t55 * t87 - t11) * qJD(5)) * t111 + (t44 * t87 + t55 * t68 - t2 + (t55 * t86 - t14) * qJD(5)) * t110, pkin(5) * t26 + t11 * t69 - t14 * t68 + t2 * t86 - t4 * t87 + t8 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * t68 + t111 * t69 + (-t110 * t86 + t111 * t87) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155, -t156, 0, 0, t90, t79, 0, t91, 0, 0, t134 - t170, -t169 + t187, t67 (-t195 * pkin(4) + t133 * pkin(9)) * t184, t90, t79, 0, t91, 0, 0, t72 + t83 + (-t80 - t99) * t111, t185 + t188, -t56 - t62 + (-t58 - t69) * t110 + ((t74 - t86) * t111 + (-t75 - t87) * t110) * qJD(5), pkin(5) * t72 - t57 * t87 + t58 * t86 - t68 * t75 - t69 * t74 + t80 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t79, 0, t91, 0, 0, -0.2e1 * t170, -0.2e1 * t169, 0, 0, t90, t79, 0, t91, 0, 0, -0.2e1 * pkin(5) * t161 + 0.2e1 * t83, 0.2e1 * t185, -0.2e1 * t69 * t110 - 0.2e1 * t62 + 0.2e1 * (-t110 * t87 - t111 * t86) * qJD(5), 0.2e1 * pkin(5) * t83 - 0.2e1 * t68 * t87 + 0.2e1 * t69 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, 0, -t33, t45, t6, t5, 0, 0, 0, 0, -t136, 0, -t33, t45, t112 + 0.2e1 * t200, t4, t136 * pkin(5), t2 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t102, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t102, 0, -t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, -t101, 0, -t95 * t102 - t110 * t156, t95 * t101 - t88, 0, 0, 0, 0, t102, 0, -t101, 0, t58, t57, -t168, t58 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, -t101, 0, -pkin(9) * t102, pkin(9) * t101, 0, 0, 0, 0, t102, 0, -t101, 0, t69, t68, -t168, t69 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, -t136, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t102, 0, t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t102, 0, t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
