% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:47:57
% EndTime: 2019-03-09 09:48:10
% DurationCPUTime: 6.56s
% Computational Cost: add. (10679->502), mult. (27505->637), div. (0->0), fcn. (20372->8), ass. (0->244)
t213 = sin(pkin(9));
t215 = sin(qJ(2));
t217 = cos(qJ(2));
t304 = cos(pkin(9));
t189 = t213 * t217 + t304 * t215;
t276 = qJD(1) * t189;
t214 = sin(qJ(4));
t216 = cos(qJ(4));
t271 = t216 * qJD(2);
t144 = t214 * t276 - t271;
t146 = t214 * qJD(2) + t216 * t276;
t212 = sin(pkin(10));
t303 = cos(pkin(10));
t83 = t303 * t144 + t212 * t146;
t312 = t276 * t83;
t176 = t189 * qJD(2);
t164 = qJD(1) * t176;
t258 = t304 * t217;
t199 = qJD(1) * t258;
t274 = qJD(1) * t215;
t174 = t213 * t274 - t199;
t168 = qJD(4) + t174;
t256 = t303 * t216;
t332 = -t212 * t214 + t256;
t188 = t212 * t216 + t303 * t214;
t173 = t188 * qJD(4);
t339 = t188 * t174 + t173;
t330 = -t164 * t332 + t168 * t339;
t347 = -t312 - t330;
t346 = -t330 + t312;
t273 = qJD(4) * t214;
t177 = qJD(4) * t256 - t212 * t273;
t338 = t332 * t174 + t177;
t270 = qJD(1) * qJD(2);
t261 = t215 * t270;
t197 = t213 * t261;
t225 = qJD(2) * t199 - t197;
t223 = t214 * t225;
t100 = qJD(4) * t146 + t223;
t99 = -qJD(4) * t271 - t216 * t225 + t273 * t276;
t60 = t303 * t100 - t212 * t99;
t247 = -t188 * t60 - t338 * t83;
t227 = -t212 * t144 + t303 * t146;
t61 = -t212 * t100 - t303 * t99;
t342 = t227 * t339 - t61 * t332;
t345 = t247 - t342;
t344 = t247 + t342;
t238 = t188 * t164 + t168 * t338;
t308 = t227 * t276;
t343 = t238 + t308;
t309 = t83 * t168;
t42 = t61 + t309;
t293 = t174 * t214;
t341 = t273 + t293;
t340 = t83 * t227;
t228 = -t213 * t215 + t258;
t180 = t228 * qJD(2);
t272 = qJD(4) * t216;
t263 = t189 * t272;
t231 = t180 * t214 + t263;
t325 = t227 ^ 2;
t337 = -0.2e1 * t270;
t204 = t213 * pkin(2) + pkin(8);
t282 = qJ(5) + t204;
t252 = qJD(4) * t282;
t153 = t216 * qJD(5) - t214 * t252;
t224 = -t214 * qJD(5) - t216 * t252;
t266 = pkin(2) * t274;
t114 = pkin(3) * t276 + t174 * pkin(8) + t266;
t321 = -qJ(3) - pkin(7);
t196 = t321 * t217;
t192 = qJD(1) * t196;
t181 = t213 * t192;
t195 = t321 * t215;
t191 = qJD(1) * t195;
t136 = t304 * t191 + t181;
t73 = t216 * t114 - t214 * t136;
t56 = t216 * t174 * qJ(5) + pkin(4) * t276 + t73;
t74 = t214 * t114 + t216 * t136;
t65 = qJ(5) * t293 + t74;
t318 = (-t224 + t56) * t303 + (t153 - t65) * t212;
t315 = qJD(2) * pkin(2);
t184 = t191 + t315;
t129 = t304 * t184 + t181;
t122 = -qJD(2) * pkin(3) - t129;
t81 = t144 * pkin(4) + qJD(5) + t122;
t41 = t83 * pkin(5) - qJ(6) * t227 + t81;
t336 = t41 * t227;
t200 = pkin(2) * t261;
t102 = t164 * pkin(3) - pkin(8) * t225 + t200;
t208 = -t217 * pkin(2) - pkin(1);
t275 = qJD(1) * t208;
t193 = qJD(3) + t275;
t103 = t174 * pkin(3) - pkin(8) * t276 + t193;
t259 = t304 * t192;
t130 = t213 * t184 - t259;
t123 = qJD(2) * pkin(8) + t130;
t260 = qJD(2) * t321;
t170 = t217 * qJD(3) + t215 * t260;
t156 = t170 * qJD(1);
t171 = -t215 * qJD(3) + t217 * t260;
t157 = t171 * qJD(1);
t98 = t304 * t156 + t213 * t157;
t37 = t214 * t102 + t103 * t272 - t123 * t273 + t216 * t98;
t67 = t216 * t103 - t214 * t123;
t335 = -t168 * t67 + t37;
t68 = t214 * t103 + t216 * t123;
t38 = -qJD(4) * t68 + t216 * t102 - t214 * t98;
t334 = t68 * t168 + t38;
t135 = t213 * t191 - t259;
t243 = t341 * pkin(4) - t135;
t251 = t168 * t214;
t333 = t146 * t251;
t128 = -pkin(3) * t228 - t189 * pkin(8) + t208;
t142 = t213 * t195 - t304 * t196;
t137 = t216 * t142;
t79 = t214 * t128 + t137;
t329 = t168 ^ 2;
t328 = t276 ^ 2;
t327 = pkin(2) * t215;
t58 = -t144 * qJ(5) + t68;
t52 = t303 * t58;
t57 = -t146 * qJ(5) + t67;
t26 = t212 * t57 + t52;
t326 = t26 * t227;
t323 = t83 ^ 2;
t15 = t164 * pkin(4) + t99 * qJ(5) - t146 * qJD(5) + t38;
t21 = -t100 * qJ(5) - t144 * qJD(5) + t37;
t3 = t303 * t15 - t212 * t21;
t4 = t212 * t15 + t303 * t21;
t31 = t212 * t56 + t303 * t65;
t24 = qJ(6) * t276 + t31;
t93 = t303 * t153 + t212 * t224;
t320 = -t24 + t93;
t319 = -pkin(5) * t276 - t318;
t317 = t31 - t93;
t235 = -qJ(5) * t180 - qJD(5) * t189;
t113 = t304 * t170 + t213 * t171;
t268 = t215 * t315;
t115 = t176 * pkin(3) - t180 * pkin(8) + t268;
t253 = -t214 * t113 + t216 * t115;
t29 = t176 * pkin(4) + t235 * t216 + (-t137 + (qJ(5) * t189 - t128) * t214) * qJD(4) + t253;
t264 = t216 * t113 + t214 * t115 + t128 * t272;
t33 = -qJ(5) * t263 + (-qJD(4) * t142 + t235) * t214 + t264;
t8 = t212 * t29 + t303 * t33;
t316 = -pkin(5) * t339 + qJ(6) * t338 + t188 * qJD(6) - t243;
t49 = t168 * pkin(4) + t57;
t23 = t212 * t49 + t52;
t289 = t189 * t216;
t78 = t216 * t128 - t214 * t142;
t64 = -pkin(4) * t228 - qJ(5) * t289 + t78;
t290 = t189 * t214;
t70 = -qJ(5) * t290 + t79;
t40 = t212 * t64 + t303 * t70;
t313 = t168 * t227;
t311 = t212 * t58;
t141 = -t304 * t195 - t213 * t196;
t278 = -t213 * t156 + t304 * t157;
t307 = t278 * t141;
t306 = t99 * t214;
t90 = t214 * t100;
t305 = -t144 * t272 - t90;
t302 = t100 * t216;
t185 = t282 * t216;
t255 = t282 * t214;
t124 = t212 * t185 + t303 * t255;
t301 = t124 * t164;
t125 = t303 * t185 - t212 * t255;
t300 = t125 * t164;
t299 = t144 * t174;
t298 = t144 * t276;
t297 = t146 * t144;
t296 = t146 * t276;
t295 = t164 * t228;
t294 = t168 * t276;
t292 = t276 * t174;
t286 = t214 * t164;
t154 = t216 * t164;
t219 = qJD(1) ^ 2;
t285 = t217 * t219;
t218 = qJD(2) ^ 2;
t284 = t218 * t215;
t283 = t218 * t217;
t27 = t303 * t57 - t311;
t281 = qJD(6) - t27;
t277 = t215 ^ 2 - t217 ^ 2;
t269 = t164 * qJ(6) + t4;
t265 = t215 * t285;
t254 = pkin(1) * t337;
t112 = t213 * t170 - t304 * t171;
t250 = t168 * t216;
t249 = 0.2e1 * t276;
t2 = -t164 * pkin(5) - t3;
t246 = t26 * t168 + t3;
t245 = t124 * t61 - t125 * t60 - t93 * t83;
t244 = t217 * t261;
t66 = t100 * pkin(4) - t278;
t206 = -t304 * pkin(2) - pkin(3);
t241 = -t323 - t325;
t240 = -t323 + t325;
t111 = pkin(4) * t290 + t141;
t118 = t188 * t189;
t71 = -t177 * t189 - t180 * t188;
t237 = t60 * t118 - t83 * t71;
t236 = -t214 * t68 - t216 * t67;
t75 = pkin(4) * t231 + t112;
t234 = -t341 * t168 + t154;
t233 = t60 + t313;
t232 = -t60 + t313;
t7 = -t212 * t33 + t303 * t29;
t22 = t303 * t49 - t311;
t39 = -t212 * t70 + t303 * t64;
t230 = t180 * t216 - t189 * t273;
t229 = -t332 * t60 + t339 * t83;
t194 = -t216 * pkin(4) + t206;
t226 = t168 * t122 - t164 * t204;
t222 = -t61 + t309;
t119 = t332 * t189;
t72 = t189 * t173 - t180 * t332;
t221 = t61 * t118 + t119 * t60 - t227 * t71 - t72 * t83;
t220 = t164 * t118 - t71 * t168 + t176 * t83 - t228 * t60;
t9 = t60 * pkin(5) - t61 * qJ(6) - qJD(6) * t227 + t66;
t205 = -t303 * pkin(4) - pkin(5);
t201 = t212 * pkin(4) + qJ(6);
t172 = t174 ^ 2;
t116 = -pkin(5) * t332 - t188 * qJ(6) + t194;
t80 = t168 * t176 - t295;
t50 = t118 * pkin(5) - t119 * qJ(6) + t111;
t46 = t146 * pkin(4) + pkin(5) * t227 + qJ(6) * t83;
t44 = -qJD(4) * t79 + t253;
t43 = -t142 * t273 + t264;
t36 = t238 - t308;
t35 = pkin(5) * t228 - t39;
t34 = -qJ(6) * t228 + t40;
t18 = t168 * qJ(6) + t23;
t17 = -t168 * pkin(5) + qJD(6) - t22;
t16 = t61 * t119 - t227 * t72;
t14 = t61 * t188 + t227 * t338;
t13 = -t71 * pkin(5) + t72 * qJ(6) - t119 * qJD(6) + t75;
t10 = t119 * t164 - t72 * t168 + t176 * t227 - t228 * t61;
t6 = -t176 * pkin(5) - t7;
t5 = t176 * qJ(6) - qJD(6) * t228 + t8;
t1 = t168 * qJD(6) + t269;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t244, t277 * t337, t283, -0.2e1 * t244, -t284, 0, -pkin(7) * t283 + t215 * t254, pkin(7) * t284 + t217 * t254, 0, 0, t180 * t276 + t189 * t225, -t189 * t164 - t180 * t174 - t176 * t276 + t225 * t228, t180 * qJD(2), t174 * t176 - t295, -t176 * qJD(2), 0, t208 * t164 + t193 * t176 + (-t112 + (-qJD(1) * t228 + t174) * t327) * qJD(2), t193 * t180 - t208 * t197 + (t199 * t208 + t249 * t327 - t113) * qJD(2), t112 * t276 - t113 * t174 - t129 * t180 - t130 * t176 + t141 * t225 - t142 * t164 - t189 * t278 + t228 * t98, -t129 * t112 + t130 * t113 - t307 + t98 * t142 + (t193 + t275) * t268, t146 * t230 - t289 * t99 (-t144 * t216 - t146 * t214) * t180 + (-t302 + t306 + (t144 * t214 - t146 * t216) * qJD(4)) * t189, t146 * t176 + t154 * t189 + t168 * t230 + t228 * t99, t144 * t231 + t189 * t90, t100 * t228 - t144 * t176 - t168 * t231 - t189 * t286, t80, t141 * t100 + t112 * t144 + t122 * t231 + t78 * t164 + t44 * t168 + t67 * t176 - t228 * t38 - t278 * t290, t112 * t146 + t122 * t230 - t141 * t99 - t79 * t164 - t43 * t168 - t68 * t176 + t228 * t37 - t278 * t289, -t79 * t100 - t43 * t144 - t44 * t146 + t78 * t99 + t236 * t180 + (-t37 * t214 - t38 * t216 + (t214 * t67 - t216 * t68) * qJD(4)) * t189, t122 * t112 + t37 * t79 + t38 * t78 + t68 * t43 + t67 * t44 - t307, t16, -t221, t10, t237, -t220, t80, t111 * t60 + t66 * t118 + t39 * t164 + t7 * t168 + t22 * t176 - t228 * t3 - t81 * t71 + t75 * t83, t111 * t61 + t66 * t119 - t40 * t164 - t8 * t168 - t23 * t176 + t227 * t75 + t228 * t4 - t81 * t72, -t4 * t118 - t3 * t119 + t22 * t72 - t227 * t7 + t23 * t71 - t39 * t61 - t40 * t60 - t8 * t83, t66 * t111 + t22 * t7 + t23 * t8 + t3 * t39 + t4 * t40 + t81 * t75, t16, t10, t221, t80, t220, t237, t118 * t9 + t13 * t83 - t164 * t35 - t168 * t6 - t17 * t176 + t2 * t228 - t41 * t71 + t50 * t60, -t1 * t118 + t119 * t2 - t17 * t72 + t18 * t71 + t227 * t6 - t34 * t60 + t35 * t61 - t5 * t83, -t1 * t228 - t119 * t9 - t13 * t227 + t164 * t34 + t168 * t5 + t176 * t18 + t41 * t72 - t50 * t61, t1 * t34 + t13 * t41 + t17 * t6 + t18 * t5 + t2 * t35 + t50 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265, t277 * t219, 0, t265, 0, 0, t219 * pkin(1) * t215, pkin(1) * t285, 0, 0, t292, -t172 + t328, -t197 + (t199 + t174) * qJD(2), -t292, 0, 0, qJD(2) * t135 - t174 * t266 - t193 * t276 + t278, t136 * qJD(2) + t193 * t174 - t266 * t276 - t98 (t130 - t135) * t276 + (t136 - t129) * t174 + (-t213 * t164 - t304 * t225) * pkin(2), t129 * t135 - t130 * t136 + (-t193 * t274 + t213 * t98 + t278 * t304) * pkin(2), t146 * t250 - t306 (-t99 - t299) * t216 - t333 + t305, t168 * t250 + t286 - t296, t144 * t251 - t302, t234 + t298, -t294, t206 * t100 - t135 * t144 - t67 * t276 + t278 * t216 + (-t204 * t272 - t73) * t168 + t226 * t214, -t135 * t146 + t68 * t276 - t206 * t99 - t278 * t214 + (t204 * t273 + t74) * t168 + t226 * t216, t74 * t144 + t73 * t146 + (-t100 * t204 - t174 * t67 + t37 + (t146 * t204 - t67) * qJD(4)) * t216 + (-t174 * t68 - t204 * t99 - t38 + (t144 * t204 - t68) * qJD(4)) * t214, -t122 * t135 - t278 * t206 - t67 * t73 - t68 * t74 + (qJD(4) * t236 - t38 * t214 + t37 * t216) * t204, t14, t345, t36, t229, t346, -t294, -t318 * t168 + t194 * t60 - t22 * t276 + t243 * t83 - t332 * t66 + t339 * t81 - t301, t317 * t168 + t66 * t188 + t194 * t61 + t227 * t243 + t23 * t276 + t338 * t81 - t300, -t3 * t188 - t22 * t338 + t227 * t318 - t23 * t339 + t31 * t83 + t332 * t4 + t245, -t3 * t124 + t4 * t125 + t66 * t194 - t318 * t22 - t317 * t23 + t243 * t81, t14, t36, -t345, -t294, -t346, t229, t116 * t60 + t319 * t168 + t17 * t276 - t316 * t83 - t332 * t9 + t339 * t41 - t301, t1 * t332 + t17 * t338 - t18 * t339 + t2 * t188 - t227 * t319 + t24 * t83 + t245, -t116 * t61 + t168 * t320 - t18 * t276 - t9 * t188 + t227 * t316 - t338 * t41 + t300, t1 * t125 + t9 * t116 + t2 * t124 - t17 * t319 + t18 * t320 - t316 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249 * qJD(2), -t197 + (t199 - t174) * qJD(2), -t172 - t328, t129 * t276 + t130 * t174 + t200, 0, 0, 0, 0, 0, 0, t234 - t298, -t329 * t216 - t286 - t296 (t99 - t299) * t216 + t333 + t305, -t122 * t276 + t214 * t335 + t216 * t334, 0, 0, 0, 0, 0, 0, t347, -t343, t344, t4 * t188 - t22 * t339 + t23 * t338 - t276 * t81 + t3 * t332, 0, 0, 0, 0, 0, 0, t347, t344, t343, t1 * t188 + t17 * t339 + t18 * t338 - t2 * t332 - t276 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, -t144 ^ 2 + t146 ^ 2, t144 * t168 - t99, -t297, -t223 + (-qJD(4) + t168) * t146, t164, -t122 * t146 + t334, t122 * t144 - t335, 0, 0, t340, t240, t42, -t340, t232, t164, -t81 * t227 + (-t146 * t83 + t303 * t164) * pkin(4) + t246, t27 * t168 + t81 * t83 + (-t146 * t227 - t164 * t212) * pkin(4) - t4, t23 * t227 - t326 + (-t212 * t60 - t303 * t61) * pkin(4) + (-t22 + t27) * t83, t22 * t26 - t23 * t27 + (-t146 * t81 + t212 * t4 + t303 * t3) * pkin(4), t340, t42, -t240, t164, -t232, -t340, -t336 - t46 * t83 + (pkin(5) - t205) * t164 + t246, t18 * t227 - t201 * t60 + t205 * t61 - t326 + (t17 - t281) * t83, t201 * t164 - t41 * t83 + t46 * t227 + (0.2e1 * qJD(6) - t27) * t168 + t269, t1 * t201 - t17 * t26 + t18 * t281 + t2 * t205 - t41 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, -t222, t241, t22 * t227 + t23 * t83 + t66, 0, 0, 0, 0, 0, 0, t233, t241, t222, -t17 * t227 + t18 * t83 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t276 + t340, t42, -t329 - t325, -t18 * t168 + t2 + t336;];
tauc_reg  = t11;
