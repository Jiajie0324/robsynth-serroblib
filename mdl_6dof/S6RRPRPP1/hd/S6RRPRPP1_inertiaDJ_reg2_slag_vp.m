% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPP1_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:47:52
% EndTime: 2019-03-09 09:48:00
% DurationCPUTime: 2.98s
% Computational Cost: add. (4894->273), mult. (11169->483), div. (0->0), fcn. (10643->8), ass. (0->147)
t113 = sin(qJ(4));
t112 = sin(pkin(9));
t116 = cos(qJ(2));
t182 = cos(pkin(9));
t155 = t182 * t116;
t114 = sin(qJ(2));
t175 = qJD(2) * t114;
t135 = qJD(2) * t155 - t112 * t175;
t129 = t113 * t135;
t115 = cos(qJ(4));
t172 = qJD(4) * t115;
t94 = t112 * t116 + t114 * t182;
t163 = t94 * t172;
t203 = t129 + t163;
t111 = sin(pkin(10));
t181 = cos(pkin(10));
t123 = t135 * t181;
t128 = t115 * t135;
t154 = t181 * t115;
t173 = qJD(4) * t113;
t88 = qJD(4) * t154 - t111 * t173;
t30 = -t111 * t128 - t113 * t123 - t88 * t94;
t93 = t111 * t115 + t113 * t181;
t55 = t93 * t94;
t187 = t93 * t30 - t88 * t55;
t198 = -t111 * t113 + t154;
t86 = t93 * qJD(4);
t31 = t111 * t129 - t115 * t123 + t86 * t94;
t56 = t198 * t94;
t199 = t198 * t31 + t56 * t86;
t202 = t199 - t187;
t201 = t199 + t187;
t200 = -0.4e1 * t94;
t185 = -t198 * t88 + t93 * t86;
t109 = t113 ^ 2;
t110 = t115 ^ 2;
t151 = qJD(4) * (t109 - t110);
t188 = -qJ(3) - pkin(7);
t156 = qJD(2) * t188;
t127 = -t114 * qJD(3) + t116 * t156;
t85 = t116 * qJD(3) + t114 * t156;
t51 = t112 * t85 - t182 * t127;
t97 = t188 * t114;
t98 = t188 * t116;
t70 = -t112 * t98 - t182 * t97;
t122 = t135 * t70 + t51 * t94;
t165 = pkin(2) * t175;
t87 = t94 * qJD(2);
t117 = t87 * pkin(3) - pkin(8) * t135 + t165;
t52 = t112 * t127 + t182 * t85;
t107 = -t116 * pkin(2) - pkin(1);
t92 = t112 * t114 - t155;
t138 = -t92 * pkin(3) - t107;
t132 = -t94 * pkin(8) - t138;
t58 = t115 * t132;
t167 = qJD(4) * t58 + t113 * t117 + t115 * t52;
t71 = t112 * t97 - t182 * t98;
t15 = t173 * t71 - t167;
t157 = -t113 * t52 + t115 * t117;
t64 = t115 * t71;
t34 = t113 * t132 + t64;
t16 = -t34 * qJD(4) + t157;
t33 = -t113 * t71 + t58;
t196 = t15 * t113 - t16 * t115 + (t113 * t33 - t115 * t34) * qJD(4);
t195 = 2 * qJD(6);
t119 = -qJ(5) * t135 - t94 * qJD(5);
t10 = -qJ(5) * t163 + (-qJD(4) * t71 + t119) * t113 + t167;
t8 = t87 * pkin(4) + t119 * t115 + (-t64 + ((pkin(8) + qJ(5)) * t94 + t138) * t113) * qJD(4) + t157;
t4 = t181 * t10 + t111 * t8;
t194 = pkin(4) * t111;
t193 = t51 * t70;
t190 = t198 * t86;
t23 = -qJ(5) * t115 * t94 + pkin(4) * t92 + t33;
t183 = t113 * t94;
t29 = -qJ(5) * t183 + t34;
t14 = t111 * t23 + t181 * t29;
t180 = qJD(6) * t92;
t179 = qJD(6) * t93;
t104 = pkin(2) * t112 + pkin(8);
t177 = qJ(5) + t104;
t174 = qJD(2) * t116;
t171 = -0.2e1 * t55 * t30;
t170 = -0.2e1 * t190;
t62 = 0.2e1 * t92 * t87;
t169 = t87 * qJ(6) + t4;
t168 = -0.2e1 * pkin(1) * qJD(2);
t106 = -pkin(2) * t182 - pkin(3);
t166 = 0.2e1 * qJD(4) * t106;
t108 = pkin(4) * t173;
t164 = t94 * t173;
t162 = t181 * pkin(4);
t160 = t113 * t172;
t159 = t114 * t174;
t3 = -t111 * t10 + t181 * t8;
t152 = qJD(4) * t177;
t126 = -t113 * qJD(5) - t115 * t152;
t76 = t115 * qJD(5) - t113 * t152;
t45 = t111 * t76 - t126 * t181;
t46 = t111 * t126 + t181 * t76;
t153 = t177 * t113;
t89 = t177 * t115;
t60 = t111 * t89 + t153 * t181;
t61 = -t111 * t153 + t181 * t89;
t158 = t45 * t60 + t61 * t46;
t90 = t94 ^ 2;
t150 = t90 * t160;
t50 = pkin(4) * t183 + t70;
t148 = t30 * t56 + t31 * t55;
t147 = t198 * t30 + t55 * t86;
t146 = t30 * t92 - t55 * t87;
t144 = -t45 * t92 - t60 * t87;
t143 = t46 * t92 + t61 * t87;
t142 = -t198 * t87 + t86 * t92;
t38 = t87 * t93 + t88 * t92;
t141 = t104 * t92 - t106 * t94;
t32 = t203 * pkin(4) + t51;
t69 = t93 * t88;
t137 = 0.2e1 * t69 - 0.2e1 * t190;
t136 = t113 * t87 + t172 * t92;
t13 = -t111 * t29 + t181 * t23;
t134 = t61 * t30 - t31 * t60 + t45 * t56 - t46 * t55;
t133 = -t198 * t45 + t46 * t93 + t60 * t86 + t61 * t88;
t96 = -t115 * pkin(4) + t106;
t131 = t109 * t135;
t130 = t110 * t135;
t125 = 0.2e1 * t198 * t46 + 0.2e1 * t45 * t93 + 0.2e1 * t60 * t88 - 0.2e1 * t61 * t86;
t124 = t113 * t128;
t121 = t135 * t92 + t94 * t87;
t120 = -t104 * t87 + t106 * t135;
t118 = -t16 * t113 - t15 * t115 + (-t113 * t34 - t115 * t33) * qJD(4);
t105 = -t162 - pkin(5);
t101 = qJ(6) + t194;
t63 = 0.2e1 * t69;
t59 = t115 * t87 - t173 * t92;
t53 = -pkin(5) * t198 - t93 * qJ(6) + t96;
t40 = pkin(5) * t86 - qJ(6) * t88 + t108 - t179;
t39 = t151 * t94 - t124;
t20 = pkin(5) * t55 - qJ(6) * t56 + t50;
t19 = -0.2e1 * t56 * t31;
t18 = -t31 * t93 + t56 * t88;
t17 = -0.2e1 * t31 * t92 + 0.2e1 * t56 * t87;
t12 = -t92 * pkin(5) - t13;
t11 = qJ(6) * t92 + t14;
t5 = -pkin(5) * t30 + qJ(6) * t31 - qJD(6) * t56 + t32;
t2 = -pkin(5) * t87 - t3;
t1 = t169 + t180;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t159, 0.2e1 * (-t114 ^ 2 + t116 ^ 2) * qJD(2), 0, -0.2e1 * t159, 0, 0, t114 * t168, t116 * t168, 0, 0, 0.2e1 * t94 * t135, -0.2e1 * t121, 0, t62, 0, 0, 0.2e1 * t107 * t87 + 0.2e1 * t165 * t92, 0.2e1 * t107 * t135 + 0.2e1 * t165 * t94, -0.2e1 * t52 * t92 - 0.2e1 * t71 * t87 + 0.2e1 * t122, 0.2e1 * t107 * t165 + 0.2e1 * t52 * t71 + 0.2e1 * t193, 0.2e1 * t130 * t94 - 0.2e1 * t150, t124 * t200 + 0.2e1 * t151 * t90, 0.2e1 * t115 * t121 - 0.2e1 * t164 * t92, 0.2e1 * t131 * t94 + 0.2e1 * t150, -0.2e1 * t113 * t121 - 0.2e1 * t163 * t92, t62, 0.2e1 * t113 * t122 + 0.2e1 * t16 * t92 + 0.2e1 * t163 * t70 + 0.2e1 * t33 * t87, 0.2e1 * t115 * t122 + 0.2e1 * t15 * t92 - 0.2e1 * t164 * t70 - 0.2e1 * t34 * t87, -0.2e1 * t33 * t128 - 0.2e1 * t34 * t129 + 0.2e1 * t196 * t94, -0.2e1 * t15 * t34 + 0.2e1 * t16 * t33 + 0.2e1 * t193, t19, 0.2e1 * t148, t17, t171, 0.2e1 * t146, t62, 0.2e1 * t13 * t87 + 0.2e1 * t3 * t92 - 0.2e1 * t30 * t50 + 0.2e1 * t32 * t55, -0.2e1 * t14 * t87 - 0.2e1 * t31 * t50 + 0.2e1 * t32 * t56 - 0.2e1 * t4 * t92, 0.2e1 * t13 * t31 + 0.2e1 * t14 * t30 - 0.2e1 * t3 * t56 - 0.2e1 * t4 * t55, 0.2e1 * t13 * t3 + 0.2e1 * t14 * t4 + 0.2e1 * t32 * t50, t19, t17, -0.2e1 * t148, t62, -0.2e1 * t146, t171, -0.2e1 * t12 * t87 - 0.2e1 * t2 * t92 - 0.2e1 * t20 * t30 + 0.2e1 * t5 * t55, -0.2e1 * t1 * t55 + 0.2e1 * t11 * t30 - 0.2e1 * t12 * t31 + 0.2e1 * t2 * t56, 0.2e1 * t1 * t92 + 0.2e1 * t11 * t87 + 0.2e1 * t20 * t31 - 0.2e1 * t5 * t56, 0.2e1 * t1 * t11 + 0.2e1 * t12 * t2 + 0.2e1 * t20 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, 0, -t175, 0, -pkin(7) * t174, pkin(7) * t175, 0, 0, 0, 0, t135, 0, -t87, 0, -t51, -t52 (-t112 * t87 - t135 * t182) * pkin(2) (t112 * t52 - t182 * t51) * pkin(2), -t39, t160 * t200 + t130 - t131, t136, t39, t59, 0, -t51 * t115 + t120 * t113 + (t70 * t113 - t115 * t141) * qJD(4), t51 * t113 + t120 * t115 + (t113 * t141 + t70 * t115) * qJD(4), t118, t104 * t118 + t51 * t106, t18, -t202, t38, t147, -t142, 0, t108 * t55 - t198 * t32 - t30 * t96 + t50 * t86 + t144, t108 * t56 - t31 * t96 + t32 * t93 + t50 * t88 - t143, -t13 * t88 - t14 * t86 + t198 * t4 - t3 * t93 + t134, t108 * t50 - t13 * t45 + t14 * t46 - t3 * t60 + t32 * t96 + t4 * t61, t18, t38, t202, 0, t142, t147, -t198 * t5 + t20 * t86 - t30 * t53 + t40 * t55 + t144, t1 * t198 - t11 * t86 + t12 * t88 + t2 * t93 + t134, -t20 * t88 + t31 * t53 - t40 * t56 - t5 * t93 + t143, t1 * t61 + t11 * t46 + t12 * t45 + t2 * t60 + t20 * t40 + t5 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t160, -0.2e1 * t151, 0, -0.2e1 * t160, 0, 0, t113 * t166, t115 * t166, 0, 0, t63, -0.2e1 * t185, 0, t170, 0, 0, -0.2e1 * t108 * t198 + 0.2e1 * t86 * t96, 0.2e1 * t108 * t93 + 0.2e1 * t88 * t96, t125, 0.2e1 * t108 * t96 + 0.2e1 * t158, t63, 0, 0.2e1 * t185, 0, 0, t170, -0.2e1 * t198 * t40 + 0.2e1 * t53 * t86, t125, -0.2e1 * t40 * t93 - 0.2e1 * t53 * t88, 0.2e1 * t40 * t53 + 0.2e1 * t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t135, 0, t165, 0, 0, 0, 0, 0, 0, t59, -t136, -t131 - t130, -t196, 0, 0, 0, 0, 0, 0, -t142, -t38, t201, -t13 * t86 + t14 * t88 + t198 * t3 + t4 * t93, 0, 0, 0, 0, 0, 0, -t142, t201, t38, t1 * t93 + t11 * t88 + t12 * t86 - t198 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 - t164, 0, -t203, t87, t16, t15, 0, 0, 0, 0, -t31, 0, t30, t87, t162 * t87 + t3, -t87 * t194 - t4 (t111 * t30 + t181 * t31) * pkin(4) (t111 * t4 + t181 * t3) * pkin(4), 0, -t31, 0, t87, -t30, 0 (pkin(5) - t105) * t87 + t3, -qJD(6) * t55 + t101 * t30 - t105 * t31, t101 * t87 + t169 + 0.2e1 * t180, qJD(6) * t11 + t1 * t101 + t105 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, 0, -t173, 0, -t104 * t172, t104 * t173, 0, 0, 0, 0, t88, 0, -t86, 0, -t45, -t46 (-t111 * t86 - t181 * t88) * pkin(4) (t111 * t46 - t181 * t45) * pkin(4), 0, t88, 0, 0, t86, 0, -t45, qJD(6) * t198 - t101 * t86 + t105 * t88, t46, qJD(6) * t61 + t101 * t46 + t105 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t172, 0, 0, 0, 0, 0, 0, 0, 0, -t86, -t88, 0 (t111 * t88 - t181 * t86) * pkin(4), 0, 0, 0, 0, 0, 0, -t86, 0, t88, t101 * t88 + t105 * t86 + t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t101 * t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, -t31, 0, t32, 0, 0, 0, 0, 0, 0, -t30, 0, t31, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t88, 0, t108, 0, 0, 0, 0, 0, 0, t86, 0, -t88, t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, -t31, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, 0, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
