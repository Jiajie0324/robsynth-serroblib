% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPP1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPP1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:47:55
% EndTime: 2019-03-09 09:48:15
% DurationCPUTime: 11.20s
% Computational Cost: add. (18139->619), mult. (34979->811), div. (0->0), fcn. (40131->8), ass. (0->446)
t418 = sin(qJ(2));
t659 = -qJ(3) - pkin(7);
t396 = t659 * t418;
t420 = cos(qJ(2));
t397 = t659 * t420;
t415 = sin(pkin(9));
t647 = cos(pkin(9));
t327 = -t647 * t396 - t397 * t415;
t419 = cos(qJ(4));
t724 = t327 * t419;
t728 = t724 / 0.2e1;
t416 = cos(pkin(10));
t417 = sin(qJ(4));
t596 = t416 * t417;
t414 = sin(pkin(10));
t602 = t414 * t419;
t389 = t596 + t602;
t383 = t389 ^ 2;
t595 = t416 * t419;
t385 = t414 * t417 - t595;
t311 = t385 ^ 2 + t383;
t727 = qJD(5) * t311;
t505 = t647 * t418;
t600 = t415 * t420;
t391 = t505 + t600;
t207 = t389 * t391;
t298 = t417 * t391;
t592 = t419 * t391;
t277 = -t298 * t414 + t416 * t592;
t488 = t207 * t385 + t389 * t277;
t726 = qJD(1) * t488 + qJD(2) * t311;
t406 = pkin(2) * t415 + pkin(8);
t716 = qJ(5) + t406;
t379 = t716 * t419;
t504 = t716 * t417;
t286 = t379 * t414 + t416 * t504;
t684 = t286 / 0.2e1;
t680 = -t385 / 0.2e1;
t676 = -t389 / 0.2e1;
t675 = t389 / 0.2e1;
t355 = t416 * t379;
t497 = t414 * t504;
t714 = t355 - t497;
t725 = -t714 / 0.2e1;
t683 = -t286 / 0.2e1;
t508 = t683 + t684;
t429 = t207 * t508;
t394 = t647 * t397;
t601 = t415 * t396;
t712 = -t394 + t601;
t617 = t712 * t417;
t723 = t712 * t419;
t387 = t415 * t418 - t420 * t647;
t273 = t389 * t387;
t295 = t417 * t387;
t346 = t414 * t295;
t300 = t419 * t387;
t533 = t416 * t300;
t276 = t346 - t533;
t489 = -t273 * t389 - t385 * t276;
t692 = t488 * qJD(5);
t722 = qJD(3) * t489 + t692;
t490 = -t207 * t276 - t273 * t277;
t707 = qJD(1) * t490;
t721 = -qJD(2) * t489 - t707;
t548 = t207 * qJD(1);
t271 = t277 ^ 2;
t715 = t207 ^ 2 + t271;
t720 = qJD(1) * t715 + qJD(2) * t488;
t719 = qJD(3) * t490 + qJD(5) * t715;
t718 = 0.2e1 * t417;
t528 = -pkin(2) * t420 - pkin(1);
t293 = t387 * pkin(3) - t391 * pkin(8) + t528;
t191 = -t419 * t293 + t617;
t160 = -qJ(5) * t592 - t191;
t147 = pkin(4) * t387 + t160;
t141 = t414 * t147;
t161 = t723 + (-qJ(5) * t391 + t293) * t417;
t598 = t416 * t161;
t99 = t598 + t141;
t717 = t99 / 0.2e1;
t613 = t385 * qJ(6);
t661 = t417 * pkin(4);
t663 = t389 * pkin(5);
t301 = t613 + t661 + t663;
t682 = t301 / 0.2e1;
t669 = t414 / 0.2e1;
t382 = t387 ^ 2;
t384 = t391 ^ 2;
t713 = -t384 - t382;
t622 = t276 * qJ(6);
t665 = t273 * pkin(5);
t711 = -t622 / 0.2e1 - t665 / 0.2e1;
t609 = t389 * t207;
t514 = t609 / 0.2e1;
t587 = -t600 / 0.2e1 - t505 / 0.2e1;
t612 = t385 * t277;
t424 = t514 - t612 / 0.2e1 - t587;
t710 = qJD(1) * t424;
t708 = qJD(1) * t489;
t430 = t389 * t508;
t706 = qJD(2) * t430;
t486 = t286 * t389 - t385 * t714;
t704 = qJD(2) * t486;
t701 = qJD(3) * t424;
t515 = t612 / 0.2e1;
t427 = -t609 / 0.2e1 + t515 - t587;
t700 = qJD(3) * t427;
t699 = qJD(3) * t430;
t695 = qJD(5) * t424;
t694 = qJD(5) * t486;
t693 = t430 * qJD(4);
t691 = t207 * t725 + t277 * t684;
t629 = t161 * t414;
t98 = t147 * t416 - t629;
t657 = t676 * t98 + t680 * t99;
t611 = t387 * qJ(6);
t76 = t99 + t611;
t77 = -pkin(5) * t387 - t98;
t658 = t675 * t77 + t680 * t76;
t412 = t417 ^ 2;
t413 = t419 ^ 2;
t401 = t413 - t412;
t503 = t592 * t718;
t446 = qJD(1) * t503 - qJD(2) * t401;
t690 = qJD(5) * t427 + (-t273 * t385 + t276 * t389) * qJD(3);
t605 = t414 * t160;
t102 = t598 + t605;
t688 = -t102 / 0.2e1;
t103 = t160 * t416 - t629;
t687 = t103 / 0.2e1;
t408 = -pkin(2) * t647 - pkin(3);
t395 = -t419 * pkin(4) + t408;
t272 = t385 * pkin(5) - t389 * qJ(6) + t395;
t686 = t272 / 0.2e1;
t685 = t714 / 0.2e1;
t681 = t327 / 0.2e1;
t512 = t355 / 0.2e1;
t679 = t385 / 0.2e1;
t678 = -t387 / 0.2e1;
t677 = t387 / 0.2e1;
t674 = -t391 / 0.2e1;
t673 = t391 / 0.2e1;
t403 = pkin(4) * t414 + qJ(6);
t672 = -t403 / 0.2e1;
t671 = t403 / 0.2e1;
t407 = -pkin(4) * t416 - pkin(5);
t670 = t407 / 0.2e1;
t668 = -t416 / 0.2e1;
t667 = t416 / 0.2e1;
t666 = -t417 / 0.2e1;
t664 = t277 * pkin(5);
t662 = t391 * pkin(5);
t660 = t418 * pkin(2);
t656 = pkin(4) * qJD(4);
t655 = qJD(2) * pkin(2);
t365 = pkin(4) * t295;
t259 = t712 - t365;
t119 = t259 - t622 - t665;
t260 = pkin(4) * t298 + t327;
t120 = pkin(5) * t207 - qJ(6) * t277 + t260;
t302 = pkin(3) * t391 + pkin(8) * t387 + t660;
t284 = t419 * t302;
t594 = t327 * t417;
t148 = pkin(4) * t391 + qJ(5) * t300 + t284 + t594;
t142 = t414 * t148;
t283 = t417 * t302;
t589 = -t283 + t724;
t163 = qJ(5) * t295 - t589;
t157 = t416 * t163;
t101 = t157 + t142;
t80 = t391 * qJ(6) + t101;
t599 = t416 * t148;
t604 = t414 * t163;
t100 = t599 - t604;
t81 = -t100 - t662;
t9 = t119 * t120 + t76 * t80 + t77 * t81;
t652 = t9 * qJD(1);
t517 = t273 * t684;
t466 = t272 * t673 - t517;
t471 = t675 * t80 + t679 * t81;
t621 = t276 * t714;
t29 = -t621 / 0.2e1 - t466 + t471;
t646 = qJD(1) * t29;
t174 = t621 / 0.2e1;
t449 = t395 * t673 + t174 - t517;
t469 = t100 * t679 + t101 * t676;
t35 = t449 + t469;
t645 = qJD(1) * t35;
t538 = pkin(4) * t592;
t623 = t207 * qJ(6);
t149 = t538 + t623 + t664;
t632 = t120 * t277;
t37 = -t102 * t387 + t149 * t207 + t632;
t644 = qJD(1) * t37;
t38 = t103 * t387 + t120 * t207 - t149 * t277;
t643 = qJD(1) * t38;
t39 = -t207 * t76 + t277 * t77;
t642 = qJD(1) * t39;
t42 = -t207 * t99 - t277 * t98;
t641 = qJD(1) * t42;
t45 = t387 * t76 - t632;
t640 = qJD(1) * t45;
t10 = t102 * t77 + t103 * t76 + t120 * t149;
t637 = t10 * qJD(1);
t636 = t102 * t286;
t635 = t103 * t714;
t11 = -t207 * t80 + t273 * t76 + t276 * t77 + t277 * t81;
t634 = t11 * qJD(1);
t12 = (t102 - t76) * t277 + (-t103 - t77) * t207;
t633 = t12 * qJD(1);
t13 = -t100 * t277 - t101 * t207 + t273 * t99 - t276 * t98;
t631 = t13 * qJD(1);
t16 = (t102 - t99) * t277 + (-t103 + t98) * t207;
t630 = t16 * qJD(1);
t19 = t100 * t98 + t101 * t99 + t259 * t260;
t628 = t19 * qJD(1);
t20 = -t102 * t98 + t103 * t99 + t260 * t538;
t627 = t20 * qJD(1);
t21 = -t119 * t277 - t120 * t276 + t387 * t80 + t391 * t76;
t626 = t21 * qJD(1);
t22 = t119 * t207 - t120 * t273 - t387 * t81 - t391 * t77;
t625 = t22 * qJD(1);
t31 = t120 * t391 - t273 * t77 + t276 * t76;
t618 = t31 * qJD(1);
t36 = t260 * t391 + t273 * t98 + t276 * t99;
t614 = t36 * qJD(1);
t610 = t387 * t391;
t467 = t120 * t675 + t277 * t686;
t432 = t677 * t714 - t467;
t461 = t604 / 0.2e1 - t599 / 0.2e1;
t434 = -t662 / 0.2e1 + t461;
t40 = -t432 + t434;
t608 = t40 * qJD(1);
t607 = t403 * t385;
t606 = t407 * t389;
t603 = t414 * t385;
t597 = t416 * t389;
t46 = (-t191 + t617) * t391 + t284 * t387;
t591 = t46 * qJD(1);
t192 = t293 * t417 + t723;
t47 = (-t192 + t723) * t391 + (t589 - t724) * t387;
t590 = t47 * qJD(1);
t117 = t191 * t387 - t298 * t327;
t584 = qJD(1) * t117;
t118 = -t192 * t387 + t327 * t592;
t583 = qJD(1) * t118;
t134 = t276 * t387 - t277 * t391;
t580 = qJD(1) * t134;
t137 = t207 * t391 + t273 * t387;
t579 = qJD(1) * t137;
t166 = t327 * t391 - t387 * t712;
t578 = qJD(1) * t166;
t539 = t384 - t382;
t250 = t539 * t417;
t577 = qJD(1) * t250;
t251 = t713 * t417;
t576 = qJD(1) * t251;
t252 = t539 * t419;
t575 = qJD(1) * t252;
t574 = qJD(1) * t277;
t304 = t713 * t419;
t573 = qJD(1) * t304;
t572 = qJD(1) * t387;
t571 = qJD(1) * t391;
t570 = qJD(1) * t419;
t569 = qJD(1) * t420;
t567 = qJD(2) * t389;
t566 = qJD(2) * t417;
t565 = qJD(2) * t418;
t564 = qJD(2) * t419;
t563 = qJD(2) * t420;
t562 = qJD(3) * t419;
t561 = qJD(4) * t385;
t560 = qJD(4) * t417;
t559 = qJD(4) * t419;
t558 = qJD(5) * t277;
t557 = qJD(5) * t387;
t556 = qJD(6) * t207;
t127 = t528 * t660;
t554 = t127 * qJD(1);
t458 = -t602 / 0.2e1 - t596 / 0.2e1;
t193 = (t676 + t458) * t387;
t553 = t193 * qJD(1);
t194 = (t675 + t458) * t387;
t552 = t194 * qJD(1);
t513 = t387 * t675;
t195 = t295 * t667 + t300 * t669 + t513;
t551 = t195 * qJD(1);
t196 = -t533 / 0.2e1 + t346 / 0.2e1 + t385 * t677;
t190 = t196 * qJD(1);
t197 = -t346 / 0.2e1 + (t595 / 0.2e1 + t679) * t387;
t550 = t197 * qJD(1);
t204 = t391 * t385;
t549 = t204 * qJD(1);
t442 = t415 * t678 + t647 * t674;
t269 = (-t418 / 0.2e1 + t442) * pkin(2);
t547 = t269 * qJD(1);
t546 = t295 * qJD(1);
t545 = t298 * qJD(1);
t544 = t300 * qJD(1);
t543 = t713 * qJD(1);
t542 = t587 * qJD(1);
t376 = t387 * qJD(6);
t377 = t389 * qJD(4);
t541 = t389 * qJD(6);
t402 = -t418 ^ 2 + t420 ^ 2;
t540 = t402 * qJD(1);
t537 = pkin(1) * t418 * qJD(1);
t536 = pkin(1) * t569;
t409 = t661 / 0.2e1;
t534 = t670 - pkin(5) / 0.2e1;
t532 = t687 + t77 / 0.2e1;
t531 = t687 - t98 / 0.2e1;
t530 = t76 / 0.2e1 + t688;
t529 = t717 + t688;
t527 = t207 * t574;
t526 = t387 * t571;
t525 = t413 * t571;
t524 = t417 * t564;
t523 = t387 * t559;
t522 = qJD(2) * t610;
t521 = t417 * t559;
t520 = t418 * t569;
t519 = t391 * t570;
t518 = -t635 / 0.2e1;
t511 = -t592 / 0.2e1;
t510 = -t141 / 0.2e1 - t598 / 0.2e1;
t509 = -t283 / 0.2e1 + t728;
t506 = t672 - qJ(6) / 0.2e1;
t502 = t273 * t714 + t276 * t286;
t231 = t207 * t572;
t501 = qJD(2) * t196 + t231;
t353 = t538 / 0.2e1;
t500 = qJD(4) + t572;
t499 = t102 * t679 + t103 * t675;
t496 = qJD(2) * t503;
t494 = t598 / 0.2e1 + t605 / 0.2e1;
t463 = -t273 * t672 + t276 * t670;
t5 = t385 * t532 + t389 * t530 + t429 + t463;
t493 = t5 * qJD(1);
t465 = -t273 * t670 + t276 * t671;
t14 = t385 * t530 - t389 * t532 + t465;
t492 = t14 * qJD(1) - t706;
t445 = (-t273 * t668 + t276 * t669) * pkin(4);
t17 = t385 * t529 - t389 * t531 + t445;
t491 = t17 * qJD(1) - t706;
t485 = -t387 * t408 - t391 * t406;
t143 = t272 * t389 + t301 * t385;
t421 = t149 * t679 + t207 * t682 + t678 * t714 + t467;
t28 = t391 * t534 + t421 + t461;
t483 = qJD(1) * t28 + qJD(2) * t143;
t144 = t272 * t385 - t301 * t389;
t422 = t120 * t680 + t149 * t675 - t207 * t686 + t277 * t682 - t286 * t678;
t436 = -t506 * t391 + t142 / 0.2e1 + t157 / 0.2e1;
t25 = t422 + t436;
t482 = -qJD(1) * t25 + qJD(2) * t144;
t457 = -t365 / 0.2e1 - t394 / 0.2e1 + t601 / 0.2e1;
t425 = t457 - t691;
t23 = t425 - t658 + t711;
t481 = -qJD(1) * t23 + t704;
t32 = t425 - t657;
t480 = -qJD(1) * t32 + t704;
t184 = -t385 * t506 - t389 * t534 + t409;
t90 = -t207 * t506 - t277 * t534 + t353;
t479 = qJD(1) * t90 + qJD(2) * t184;
t478 = t500 * t419;
t460 = -t207 * t669 + t277 * t668;
t133 = (t511 + t460) * pkin(4);
t459 = -t603 / 0.2e1 - t597 / 0.2e1;
t267 = (t666 + t459) * pkin(4);
t477 = qJD(1) * t133 + qJD(2) * t267;
t472 = -qJD(2) * t385 - t548;
t201 = t567 + t574;
t470 = t670 * t81 + t671 * t80;
t468 = t100 * t667 + t101 * t669;
t464 = t515 + t514;
t462 = t406 * t677 + t408 * t674;
t456 = t391 * t478;
t428 = t462 * t417 + t728;
t109 = t428 - t509;
t455 = -qJD(1) * t109 - t408 * t564;
t439 = t462 * t419;
t111 = -t284 / 0.2e1 - t439 + (t681 - t327 / 0.2e1) * t417;
t454 = -qJD(1) * t111 - t408 * t566;
t123 = t464 + t587;
t453 = qJD(1) * t123 + t385 * t567;
t294 = (t412 / 0.2e1 - t413 / 0.2e1) * t391;
t452 = -qJD(1) * t294 + t524;
t451 = -qJD(4) * t587 + t526;
t450 = qJD(2) * t197 + qJD(4) * t207 + t231;
t448 = t384 * t417 * t570 + qJD(2) * t294;
t303 = t401 * t384;
t447 = qJD(1) * t303 + t496;
t444 = (t273 * t669 + t276 * t668) * pkin(4);
t423 = t636 / 0.2e1 + t120 * t682 + t149 * t686 + t76 * t683 + t77 * t685;
t1 = t518 - t423 + t470;
t56 = t272 * t301;
t443 = -t1 * qJD(1) + t56 * qJD(2) + t699;
t104 = t395 * t661;
t435 = -t636 / 0.2e1 + t98 * t685 + t286 * t717;
t3 = t518 + (t260 * t666 + t395 * t511 + t468) * pkin(4) + t435;
t441 = -t3 * qJD(1) + t104 * qJD(2) + t699;
t7 = t385 * t531 + t389 * t529 + t429 + t444;
t440 = t7 * qJD(1);
t281 = t512 - t355 / 0.2e1;
t43 = t387 * t506 + t494 + t510;
t438 = qJD(1) * t43 - qJD(2) * t281 - qJD(4) * t403;
t213 = t271 + t382;
t433 = qJD(1) * t213 + qJD(4) * t387 + t277 * t567;
t431 = t457 + t691;
t426 = t102 * t675 + t103 * t680 + (t685 + t725) * t277 - t429;
t367 = t587 * qJD(2);
t364 = t391 * t564;
t290 = t295 * qJD(4);
t289 = t294 * qJD(4);
t268 = t660 / 0.2e1 + t442 * pkin(2);
t266 = pkin(4) * t459 + t409;
t263 = -t546 - t560;
t232 = t277 * t541;
t203 = 0.2e1 * t512 - t497;
t198 = t387 * t458 + t513;
t189 = qJD(2) * t383 + t389 * t574;
t185 = -t607 / 0.2e1 + t606 / 0.2e1 + t409 + t613 / 0.2e1 + t663 / 0.2e1;
t162 = -t190 - t561;
t132 = pkin(4) * t460 + t353;
t126 = -t464 + t587;
t112 = t417 * t681 + t594 / 0.2e1 + t284 / 0.2e1 - t439;
t110 = t428 + t509;
t91 = -t207 * t671 + t277 * t670 + t353 + t623 / 0.2e1 + t664 / 0.2e1;
t61 = t635 / 0.2e1;
t44 = t387 * t671 + t611 / 0.2e1 + t494 - t510;
t41 = t432 + t434;
t34 = t449 - t469;
t33 = t431 + t657;
t30 = t174 + t466 + t471;
t27 = t407 * t674 + t421 - t434;
t26 = -t422 + t436;
t24 = t431 + t658 + t711;
t18 = t445 + t499 + t657;
t15 = t465 + t499 + t658;
t8 = t676 * t99 + t679 * t98 + t426 + t444;
t6 = t676 * t76 + t680 * t77 + t426 + t463;
t4 = pkin(4) * t468 + t260 * t409 + t353 * t395 - t435 + t61;
t2 = t61 + t423 + t470;
t48 = [0, 0, 0, t418 * t563, t402 * qJD(2), 0, 0, 0, -pkin(1) * t565, -pkin(1) * t563, -qJD(3) * t713, qJD(2) * t127 + qJD(3) * t166, -t384 * t521 - t413 * t522, -qJD(4) * t303 + t387 * t496, qJD(2) * t252 - t560 * t610, -qJD(2) * t250 - t391 * t523, t522, qJD(2) * t46 - qJD(3) * t251 + qJD(4) * t118, qJD(2) * t47 - qJD(3) * t304 + qJD(4) * t117, qJD(2) * t13 + qJD(4) * t16 + t719, qJD(2) * t19 + qJD(3) * t36 + qJD(4) * t20 + qJD(5) * t42, t22 * qJD(2) + t137 * qJD(3) + t37 * qJD(4) + (-t556 - t557) * t277, qJD(2) * t11 + qJD(4) * t12 - t207 * t376 + t719, qJD(2) * t21 + qJD(3) * t134 + qJD(4) * t38 + qJD(6) * t213 - t207 * t557, qJD(2) * t9 + qJD(3) * t31 + qJD(4) * t10 + qJD(5) * t39 + qJD(6) * t45; 0, 0, 0, t520, t540, t563, -t565, 0, -pkin(7) * t563 - t537, pkin(7) * t565 - t536 (t387 * t647 - t391 * t415) * t655, t554 + (-t327 * t415 - t647 * t712) * t655 + t268 * qJD(3), -t289 + (-t524 - t525) * t387, t387 * t446 - 0.2e1 * t391 * t521, t391 * t566 + t575, t364 - t577, t451, t591 + (t417 * t485 - t723) * qJD(2) + t112 * qJD(4), t590 + (t419 * t485 + t617) * qJD(2) + t110 * qJD(4), t631 + (-t100 * t389 - t101 * t385 + t502) * qJD(2) + t8 * qJD(4) + t692, t628 + (-t100 * t286 + t101 * t714 + t259 * t395) * qJD(2) + t34 * qJD(3) + t4 * qJD(4) + t33 * qJD(5), t625 + (t119 * t385 - t272 * t273 - t286 * t391) * qJD(2) + t27 * qJD(4) - t195 * qJD(5) + t126 * qJD(6), t634 + (-t385 * t80 + t389 * t81 + t502) * qJD(2) + t6 * qJD(4) + t692 - t197 * qJD(6), t626 + (-t119 * t389 - t272 * t276 + t391 * t714) * qJD(2) + t26 * qJD(4) - t196 * qJD(5) + t232, t652 + (t119 * t272 + t286 * t81 + t714 * t80) * qJD(2) + t30 * qJD(3) + t2 * qJD(4) + t24 * qJD(5) + t41 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t543, qJD(2) * t268 + t578, 0, 0, 0, 0, 0, -t576, -t573, t707, t34 * qJD(2) + t18 * qJD(4) + t614 + t690, -qJD(4) * t194 + t579, t707, -qJD(4) * t197 + t580, t30 * qJD(2) + t15 * qJD(4) + t198 * qJD(6) + t618 + t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, -t447, -t500 * t298, -t456, -t367, qJD(2) * t112 - qJD(4) * t192 + t583, qJD(2) * t110 + qJD(4) * t191 + t584, t630 + t8 * qJD(2) + (t207 * t416 - t277 * t414) * t656, t627 + t4 * qJD(2) + t18 * qJD(3) + t132 * qJD(5) + (-t102 * t416 + t103 * t414) * t656, qJD(2) * t27 - qJD(3) * t194 - qJD(4) * t102 + t644, t633 + t6 * qJD(2) + (-t207 * t407 - t277 * t403) * qJD(4) - t556, qJD(2) * t26 - qJD(3) * t197 + qJD(4) * t103 + t376 + t643, t637 + t2 * qJD(2) + t15 * qJD(3) + (t102 * t407 + t103 * t403) * qJD(4) + t91 * qJD(5) + t44 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, qJD(2) * t33 + qJD(4) * t132 + t641 + t700, -qJD(2) * t195 - t277 * t572, t720, -t501, qJD(2) * t24 + qJD(4) * t91 + t642 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t126 - t527, -t450, t433, qJD(2) * t41 + qJD(3) * t198 + qJD(4) * t44 + t640; 0, 0, 0, -t520, -t540, 0, 0, 0, t537, t536, 0, qJD(3) * t269 - t554, t387 * t525 - t289, -t456 * t718, qJD(4) * t300 - t575, -t290 + t577, -t451, qJD(4) * t111 - t391 * t562 - t591, qJD(3) * t298 + qJD(4) * t109 - t590, -qJD(4) * t7 - t631 + t722, qJD(3) * t35 - qJD(4) * t3 - qJD(5) * t32 - t628, qJD(3) * t204 + qJD(4) * t28 - qJD(5) * t194 - qJD(6) * t123 - t625, -qJD(4) * t5 - qJD(6) * t196 - t634 + t722, -qJD(3) * t207 - qJD(4) * t25 - qJD(5) * t197 + t232 - t626, -qJD(3) * t29 - qJD(4) * t1 - qJD(5) * t23 - qJD(6) * t40 - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t521, t401 * qJD(4), 0, 0, 0, t408 * t560, t408 * t559, t727, qJD(4) * t104 + t694, qJD(4) * t143 - t385 * t541, t727, qJD(4) * t144 + qJD(6) * t383, qJD(4) * t56 - t272 * t541 + t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547, 0, 0, 0, 0, 0, -t519, t545, t708, t645 + t693, t549, t708, -t548, -t646 + t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, -t446, t544 + t559, t263, t542, -t406 * t559 - t454, t406 * t560 - t455 (t385 * t416 - t389 * t414) * t656 - t440, t266 * qJD(5) + (-t286 * t414 - t416 * t714) * t656 + t441, -qJD(4) * t714 + t483 (-t385 * t407 - t389 * t403) * qJD(4) - qJD(6) * t385 - t493, -qJD(4) * t286 + t482 (-t286 * t403 + t407 * t714) * qJD(4) + t185 * qJD(5) + t203 * qJD(6) + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t726, qJD(4) * t266 + t480, -t552, t726, -t550, qJD(4) * t185 + t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t453, t162, t189, qJD(4) * t203 - t272 * t567 - t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, -qJD(2) * t269 - t578, 0, 0, 0, 0, 0, -t290 + t364 + t576, -qJD(2) * t298 - t523 + t573, t721, -qJD(2) * t35 - qJD(4) * t17 - t614 - t695, -qJD(2) * t204 - qJD(4) * t195 - t579, t721, qJD(2) * t207 - qJD(4) * t196 - t580, qJD(2) * t29 - qJD(4) * t14 - qJD(6) * t193 - t618 - t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, 0, 0, 0, 0, 0, t519, -t545, -t708, -t645 + t693, -t549, -t708, t548, t646 + t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t478, 0 (-t597 - t603) * t656 - t491, -t377 - t551, 0, t162 (t606 - t607) * qJD(4) + t541 - t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t710, 0, 0, 0, -t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377 - t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t447, -qJD(2) * t300 + t417 * t526, qJD(2) * t295 + t387 * t519, -t367, -qJD(2) * t111 + qJD(3) * t295 - t583, -qJD(2) * t109 + t387 * t562 - t584, qJD(2) * t7 - t630, qJD(2) * t3 + qJD(3) * t17 + qJD(5) * t133 - t627, -qJD(2) * t28 + qJD(3) * t195 - t558 - t644, qJD(2) * t5 - t633, qJD(2) * t25 + qJD(3) * t196 - qJD(5) * t207 + t376 - t643, qJD(2) * t1 + qJD(3) * t14 - qJD(5) * t90 - qJD(6) * t43 - t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452, t446, -t544, t546, -t542, t454, t455, t440, qJD(5) * t267 - t441, -qJD(5) * t389 - t483, t493, -qJD(5) * t385 - t482, -qJD(5) * t184 + qJD(6) * t281 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t546, t387 * t570, 0, t491, t551, 0, t190, t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t403 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, -t201, 0, t472, -t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, -t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, qJD(2) * t32 - qJD(4) * t133 - t641 + t701, t194 * qJD(2) + t277 * t500, -t720, t450, qJD(2) * t23 + qJD(4) * t90 - qJD(6) * t277 - t642 + t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t726, -qJD(4) * t267 - t480, t377 + t552, -t726, t550 + t561, qJD(4) * t184 - t481 - t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t710, 0, 0, 0, t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, t201, 0, -t472, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t123 + t527, t501, -t433, qJD(2) * t40 + qJD(3) * t193 + qJD(4) * t43 + t558 - t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453, t190, -t189, t608 - t281 * qJD(4) + (qJD(2) * t272 + qJD(5)) * t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
