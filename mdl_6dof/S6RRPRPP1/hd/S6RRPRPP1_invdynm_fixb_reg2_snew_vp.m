% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRPP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 12:21
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRPP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPP1_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 12:20:30
% EndTime: 2019-05-06 12:21:32
% DurationCPUTime: 66.50s
% Computational Cost: add. (305016->947), mult. (710912->1187), div. (0->0), fcn. (517835->10), ass. (0->651)
t2041 = sin(pkin(9));
t2043 = cos(pkin(9));
t2049 = cos(qJ(2));
t2181 = qJD(1) * t2049;
t2046 = sin(qJ(2));
t2182 = qJD(1) * t2046;
t2006 = t2041 * t2181 + t2043 * t2182;
t2045 = sin(qJ(4));
t2048 = cos(qJ(4));
t1971 = -t2048 * qJD(2) + t2006 * t2045;
t1972 = qJD(2) * t2045 + t2006 * t2048;
t2040 = sin(pkin(10));
t2042 = cos(pkin(10));
t1920 = -t2040 * t1971 + t2042 * t1972;
t1916 = t1920 ^ 2;
t2004 = t2041 * t2182 - t2043 * t2181;
t2000 = qJD(4) + t2004;
t2195 = t2000 ^ 2;
t1831 = t2195 + t1916;
t2178 = qJD(2) * t2046;
t2113 = qJD(1) * t2178;
t2124 = t2049 * qJDD(1);
t2074 = t2113 - t2124;
t2111 = qJD(2) * t2181;
t2126 = t2046 * qJDD(1);
t2075 = t2111 + t2126;
t2060 = t2041 * t2075 + t2043 * t2074;
t1960 = qJDD(4) + t2060;
t1918 = t2042 * t1971 + t1972 * t2040;
t2153 = t1920 * t1918;
t2214 = t1960 + t2153;
t2160 = t2214 * t2040;
t1715 = t1831 * t2042 + t2160;
t2159 = t2214 * t2042;
t1735 = t1831 * t2040 - t2159;
t1657 = t1715 * t2045 + t1735 * t2048;
t2056 = -t2041 * t2074 + t2043 * t2075;
t2052 = -t2045 * qJDD(2) - t2048 * t2056;
t1898 = -t1971 * qJD(4) - t2052;
t2053 = t2048 * qJDD(2) - t2045 * t2056;
t2051 = -t1972 * qJD(4) + t2053;
t1820 = t2042 * t1898 + t2040 * t2051;
t2154 = t1918 * t2000;
t2218 = t1820 - t2154;
t1594 = t1657 * t2041 - t2043 * t2218;
t1598 = t1657 * t2043 + t2041 * t2218;
t1513 = t1594 * t2046 - t1598 * t2049;
t1621 = t1715 * t2048 - t1735 * t2045;
t2047 = sin(qJ(1));
t2050 = cos(qJ(1));
t2351 = pkin(6) * (t1513 * t2050 + t2047 * t1621);
t2350 = pkin(6) * (t2047 * t1513 - t1621 * t2050);
t1522 = t1594 * t2049 + t1598 * t2046;
t2349 = pkin(1) * t1522;
t2348 = pkin(7) * t1522;
t2347 = -pkin(1) * t1621 + pkin(7) * t1513;
t1819 = t1898 * t2040 - t2042 * t2051;
t1889 = t2000 * t1920;
t2219 = t1819 + t1889;
t1680 = -t2219 * t2040 + t2042 * t2218;
t2161 = t2218 * t2040;
t1682 = t2219 * t2042 + t2161;
t1579 = t1680 * t2045 + t1682 * t2048;
t2197 = t1918 ^ 2;
t2216 = t1916 - t2197;
t1566 = t1579 * t2041 + t2043 * t2216;
t1568 = t1579 * t2043 - t2041 * t2216;
t1498 = t1566 * t2046 - t1568 * t2049;
t1575 = -t1680 * t2048 + t1682 * t2045;
t2346 = t2047 * t1498 + t1575 * t2050;
t2345 = t1498 * t2050 - t2047 * t1575;
t1884 = t2197 - t2195;
t1740 = t1884 * t2040 + t2159;
t1744 = t1884 * t2042 - t2160;
t1667 = t1740 * t2045 - t1744 * t2048;
t1768 = t1819 - t1889;
t1607 = t1667 * t2041 - t1768 * t2043;
t1611 = t1667 * t2043 + t1768 * t2041;
t1533 = t1607 * t2046 - t1611 * t2049;
t1664 = t1740 * t2048 + t1744 * t2045;
t2342 = t2047 * t1533 - t1664 * t2050;
t2341 = t1533 * t2050 + t2047 * t1664;
t2340 = pkin(2) * t1594;
t2339 = qJ(3) * t1594;
t2338 = -pkin(2) * t1621 - qJ(3) * t1598;
t1495 = t1566 * t2049 + t1568 * t2046;
t1528 = t1607 * t2049 + t1611 * t2046;
t1786 = -t2197 - t1916;
t2211 = t2154 + t1820;
t2254 = -t1768 * t2042 + t2211 * t2040;
t2255 = -t1768 * t2040 - t2042 * t2211;
t2269 = -t2045 * t2255 + t2048 * t2254;
t2289 = t1786 * t2041 + t2043 * t2269;
t2291 = -t1786 * t2043 + t2041 * t2269;
t2310 = t2046 * t2289 + t2049 * t2291;
t2336 = pkin(1) * t2310;
t2334 = pkin(3) * t1621;
t2333 = pkin(7) * t2310;
t2332 = pkin(8) * t1621;
t2268 = t2045 * t2254 + t2048 * t2255;
t2311 = -t2046 * t2291 + t2049 * t2289;
t2325 = -pkin(1) * t2268 + pkin(7) * t2311;
t2324 = pkin(3) * t2218 - pkin(8) * t1657;
t1885 = t1916 - t2195;
t2212 = -t2153 + t1960;
t2158 = t2212 * t2040;
t2256 = -t2042 * t1885 + t2158;
t1806 = t2042 * t2212;
t2257 = t1885 * t2040 + t1806;
t2267 = t2045 * t2257 + t2048 * t2256;
t2266 = -t2045 * t2256 + t2048 * t2257;
t2290 = t2041 * t2211 + t2043 * t2266;
t2292 = t2041 * t2266 - t2043 * t2211;
t2309 = -t2046 * t2292 + t2049 * t2290;
t2323 = t2047 * t2309 - t2050 * t2267;
t2322 = t2047 * t2267 + t2050 * t2309;
t2321 = pkin(6) * (t2047 * t2311 - t2050 * t2268);
t2320 = pkin(6) * (t2047 * t2268 + t2050 * t2311);
t2210 = -t2195 - t2197;
t2225 = t2042 * t2210 - t2158;
t2228 = t2040 * t2210 + t1806;
t2253 = -t2045 * t2228 + t2048 * t2225;
t2274 = t2041 * t2219 + t2043 * t2253;
t2275 = t2041 * t2253 - t2043 * t2219;
t2287 = t2046 * t2274 + t2049 * t2275;
t2319 = pkin(1) * t2287;
t2318 = pkin(2) * t2291;
t2317 = pkin(7) * t2287;
t2316 = qJ(3) * t2291;
t2252 = t2045 * t2225 + t2048 * t2228;
t2288 = -t2046 * t2275 + t2049 * t2274;
t2315 = -pkin(1) * t2252 + pkin(7) * t2288;
t2314 = -pkin(2) * t2268 + qJ(3) * t2289;
t2313 = pkin(6) * (t2047 * t2288 - t2050 * t2252);
t2312 = pkin(6) * (t2047 * t2252 + t2050 * t2288);
t2308 = t2046 * t2290 + t2049 * t2292;
t2305 = pkin(2) * t2275;
t2304 = pkin(3) * t2268;
t2303 = pkin(4) * t1715;
t2302 = pkin(8) * t2268;
t2301 = qJ(3) * t2275;
t2300 = qJ(5) * t1715;
t2299 = qJ(5) * t1735;
t2294 = -pkin(3) * t1786 + pkin(8) * t2269;
t2293 = -pkin(2) * t2252 + qJ(3) * t2274;
t2189 = pkin(4) * t2255;
t2284 = pkin(8) * t2252;
t2283 = qJ(5) * t2255;
t2263 = pkin(4) * t2228;
t2278 = -pkin(3) * t2252 - t2263;
t2277 = -pkin(3) * t2219 + pkin(8) * t2253;
t2276 = -pkin(4) * t1786 + qJ(5) * t2254;
t2064 = (-t1918 * t2040 - t1920 * t2042) * t2000;
t2147 = t2000 * t2040;
t1880 = t1920 * t2147;
t2146 = t2000 * t2042;
t2118 = t1918 * t2146;
t2083 = t1880 - t2118;
t2205 = t2045 * t2083 + t2048 * t2064;
t2148 = t1960 * t2041;
t2204 = -t2045 * t2064 + t2048 * t2083;
t2223 = t2043 * t2204 + t2148;
t1950 = t2043 * t1960;
t2227 = t2041 * t2204 - t1950;
t2251 = -t2046 * t2227 + t2049 * t2223;
t2273 = t2047 * t2251 - t2050 * t2205;
t2076 = t1819 * t2040 + t2118;
t2084 = -t2042 * t1819 + t1918 * t2147;
t2202 = t2045 * t2076 + t2048 * t2084;
t2120 = t2041 * t2153;
t2203 = -t2045 * t2084 + t2048 * t2076;
t2224 = t2043 * t2203 - t2120;
t2119 = t2043 * t2153;
t2226 = t2041 * t2203 + t2119;
t2249 = -t2046 * t2226 + t2049 * t2224;
t2272 = t2047 * t2249 - t2050 * t2202;
t2271 = t2047 * t2205 + t2050 * t2251;
t2270 = t2047 * t2202 + t2050 * t2249;
t2262 = qJ(5) * t2225;
t2261 = qJ(5) * t2228;
t2260 = qJ(6) * t2218;
t2250 = t2046 * t2223 + t2049 * t2227;
t2248 = t2046 * t2224 + t2049 * t2226;
t1961 = t2006 * t2004;
t2209 = -t1961 + qJDD(2);
t2245 = t2041 * t2209;
t2240 = t2043 * t2209;
t1932 = t1972 * t1971;
t2215 = -t1932 + t1960;
t2235 = t2045 * t2215;
t2232 = t2048 * t2215;
t2179 = qJD(2) * t2006;
t1933 = t2060 + t2179;
t2022 = t2047 * g(1) - t2050 * g(2);
t2038 = t2049 ^ 2;
t2122 = pkin(2) * t2049 + pkin(1);
t1930 = ((qJ(3) * t2038 + pkin(7)) * qJD(1) - pkin(2) * t2178) * qJD(1) + t2122 * qJDD(1) - qJDD(3) - (qJD(2) * pkin(2) - qJ(3) * t2182) * t2182 + t2022;
t1754 = t1820 * t2040 + t1920 * t2146;
t1755 = t1820 * t2042 - t1880;
t1674 = t1754 * t2048 + t1755 * t2045;
t1677 = -t1754 * t2045 + t1755 * t2048;
t2085 = t2043 * t1677 + t2120;
t2086 = t2041 * t1677 - t2119;
t2201 = -t2046 * t2086 + t2049 * t2085;
t2229 = -t2050 * t1674 + t2047 * t2201;
t2222 = t2047 * t1674 + t2050 * t2201;
t2177 = qJD(3) * t2004;
t1994 = -0.2e1 * t2177;
t2023 = t2050 * g(1) + t2047 * g(2);
t2199 = qJD(1) ^ 2;
t2061 = -pkin(1) * t2199 + qJDD(1) * pkin(7) - t2023;
t1984 = -t2046 * g(3) + t2049 * t2061;
t2035 = t2038 * t2199;
t2198 = qJD(2) ^ 2;
t2030 = -t2035 - t2198;
t1925 = pkin(2) * t2030 + qJ(3) * t2124 + t1984;
t2185 = t2049 * g(3);
t2054 = qJDD(2) * pkin(2) - t2185 + ((-qJ(3) - pkin(7)) * qJDD(1) + t2122 * t2199 + t2023) * t2046;
t2129 = t2043 * t1925 + t2041 * t2054;
t1824 = t1994 + t2129;
t1951 = pkin(3) * t2004 - pkin(8) * t2006;
t1781 = -pkin(3) * t2198 + qJDD(2) * pkin(8) - t1951 * t2004 + t1824;
t1998 = qJD(2) * t2004;
t2213 = -t2056 + t1998;
t1804 = pkin(3) * t1933 + t2213 * pkin(8) - t1930;
t1699 = t2045 * t1781 - t2048 * t1804;
t1700 = t2048 * t1781 + t2045 * t1804;
t1604 = t2045 * t1699 + t2048 * t1700;
t2221 = pkin(5) * t1831 + qJ(6) * t2214;
t2220 = -pkin(5) * t2212 - qJ(6) * t2210;
t2175 = qJD(5) * t1918;
t1907 = -0.2e1 * t2175;
t2173 = qJD(6) * t2000;
t2217 = t1907 + 0.2e1 * t2173;
t1948 = t2000 * t1971;
t1861 = t1948 + t1898;
t2208 = t1819 * pkin(5) - t2260;
t2200 = t2046 * t2085 + t2049 * t2086;
t2196 = t1971 ^ 2;
t1970 = t1972 ^ 2;
t2002 = t2004 ^ 2;
t2003 = t2006 ^ 2;
t2104 = t2041 * t1925 - t2043 * t2054;
t2176 = qJD(3) * t2006;
t1823 = t2104 + 0.2e1 * t2176;
t1721 = -t1823 * t2043 + t1824 * t2041;
t2194 = pkin(2) * t1721;
t1934 = t2060 - t2179;
t1937 = t1998 + t2056;
t1864 = -t1934 * t2041 - t1937 * t2043;
t2193 = pkin(2) * t1864;
t1952 = -t2002 - t2198;
t1878 = t1952 * t2041 + t2240;
t2192 = pkin(2) * t1878;
t2191 = pkin(3) * t2041;
t1641 = pkin(4) * t2215 - qJ(5) * t1861 - t1699;
t1940 = pkin(4) * t2000 - qJ(5) * t1972;
t1647 = -pkin(4) * t2196 + qJ(5) * t2051 - t2000 * t1940 + t1700;
t2105 = -t2042 * t1641 + t2040 * t1647;
t2174 = qJD(5) * t1920;
t1556 = t2105 + 0.2e1 * t2174;
t2132 = t2040 * t1641 + t2042 * t1647;
t1557 = t1907 + t2132;
t1488 = -t1556 * t2042 + t1557 * t2040;
t2190 = pkin(4) * t1488;
t2186 = pkin(5) * t2042;
t2184 = qJ(6) * t2042;
t2183 = qJD(1) * qJD(2);
t2037 = t2046 ^ 2;
t2180 = t2199 * t2037;
t2172 = t1488 * t2045;
t2171 = t1488 * t2048;
t2077 = -qJDD(2) * pkin(3) - t2198 * pkin(8) + t2104;
t2058 = -t2051 * pkin(4) - t2196 * qJ(5) + t1972 * t1940 + qJDD(5) + t2077;
t2106 = (0.2e1 * qJD(3) + t1951) * t2006;
t1695 = t2106 + t2058;
t2170 = t1695 * t2040;
t2169 = t1695 * t2042;
t2168 = t1721 * t2046;
t2167 = t1721 * t2049;
t1875 = t1932 + t1960;
t2157 = t1875 * t2045;
t2156 = t1875 * t2048;
t2152 = t1930 * t2041;
t2151 = t1930 * t2043;
t1954 = qJDD(2) + t1961;
t2150 = t1954 * t2041;
t2149 = t1954 * t2043;
t2145 = t2000 * t2045;
t2144 = t2000 * t2048;
t2143 = t2004 * t2041;
t2142 = t2004 * t2043;
t2008 = qJDD(1) * pkin(1) + pkin(7) * t2199 + t2022;
t2141 = t2008 * t2046;
t2140 = t2008 * t2049;
t2013 = 0.2e1 * t2111 + t2126;
t1974 = t2013 * t2046;
t2014 = -0.2e1 * t2113 + t2124;
t1973 = t2014 * t2049;
t2031 = t2049 * t2199 * t2046;
t2020 = qJDD(2) + t2031;
t2139 = t2020 * t2046;
t2021 = qJDD(2) - t2031;
t2138 = t2021 * t2046;
t2137 = t2021 * t2049;
t2136 = t2041 * t2006;
t2135 = t2043 * t2006;
t1780 = t2106 + t2077;
t1776 = t2045 * t1780;
t1777 = t2048 * t1780;
t1844 = pkin(5) * t1918 - qJ(6) * t1920;
t2082 = -pkin(5) * t2195 + t1960 * qJ(6) - t1918 * t1844 + t2132;
t1535 = t2082 + t2217;
t2063 = -t1960 * pkin(5) - qJ(6) * t2195 + qJDD(6) + t2105;
t1537 = (0.2e1 * qJD(5) + t1844) * t1920 + t2063;
t2133 = -pkin(5) * t1537 + qJ(6) * t1535;
t2131 = -pkin(5) * t2211 - qJ(6) * t1768;
t2130 = -pkin(3) * t1780 + pkin(8) * t1604;
t2128 = t2037 + t2038;
t2127 = qJDD(2) * t2050;
t2125 = t2047 * qJDD(1);
t2121 = -pkin(3) * t2043 - pkin(2);
t2117 = t2041 * t1932;
t2116 = t2043 * t1932;
t2115 = t2050 * t1961;
t2114 = t1971 * t2145;
t2112 = t2047 * t1961;
t1905 = -t1970 - t2195;
t1808 = -t1905 * t2045 - t2156;
t1862 = (qJD(4) + t2000) * t1971 + t2052;
t2110 = pkin(3) * t1862 + pkin(8) * t1808 + t1776;
t1896 = -t2195 - t2196;
t1797 = t1896 * t2048 - t2235;
t1949 = t2000 * t1972;
t1858 = -t1949 + t2051;
t2109 = pkin(3) * t1858 + pkin(8) * t1797 - t1777;
t2108 = -qJ(6) * t2040 - pkin(4);
t1489 = t1556 * t2040 + t2042 * t1557;
t1722 = t1823 * t2041 + t2043 * t1824;
t1983 = t2046 * t2061 + t2185;
t1928 = t1983 * t2046 + t2049 * t1984;
t2103 = -t2022 * t2047 - t2050 * t2023;
t2102 = t2050 * t2031;
t2101 = t2047 * t2031;
t1479 = t1535 * t2040 - t1537 * t2042;
t1480 = t1535 * t2042 + t1537 * t2040;
t1448 = -t1479 * t2045 + t1480 * t2048;
t1586 = (pkin(5) * t2000 - 0.2e1 * qJD(6)) * t1920 + t1695 + t2208;
t1450 = qJ(5) * t1480 + (t2108 - t2186) * t1586;
t1461 = -qJ(5) * t1479 + (pkin(5) * t2040 - t2184) * t1586;
t2100 = -pkin(3) * t1586 + pkin(8) * t1448 + t2048 * t1450 + t2045 * t1461;
t1518 = -pkin(5) * t1786 + t1535;
t1520 = -qJ(6) * t1786 + t1537;
t1468 = t1518 * t2042 + t1520 * t2040 + t2276;
t1471 = -t1518 * t2040 + t1520 * t2042 - t2283;
t2099 = t2048 * t1468 + t2045 * t1471 + t2294;
t1478 = t1489 + t2276;
t1482 = -t1488 - t2283;
t2098 = t2048 * t1478 + t2045 * t1482 + t2294;
t1996 = -0.2e1 * t2176;
t2055 = 0.2e1 * qJD(6) * t1920 - t2006 * t1951 + t1996 - t2058 - t2208;
t1559 = -pkin(5) * t1889 + t2055 + t2260;
t1506 = -t2299 + t2040 * t1559 + (pkin(4) + t2186) * t2218;
t1516 = -pkin(5) * t2161 + t1559 * t2042 - t2300;
t2097 = t2048 * t1506 + t2045 * t1516 + t2324;
t1560 = t2055 + (-t2219 - t1889) * pkin(5);
t1508 = t2042 * t1560 + t2108 * t2219 + t2262;
t1519 = -t1560 * t2040 - t2184 * t2219 - t2261;
t2096 = t2048 * t1508 + t2045 * t1519 + t2277;
t1584 = -pkin(4) * t2219 - t2169 + t2262;
t1614 = t2170 - t2261;
t2095 = t2048 * t1584 + t2045 * t1614 + t2277;
t1589 = -pkin(4) * t2218 + t2170 + t2299;
t1618 = t2169 + t2300;
t2094 = t2048 * t1589 + t2045 * t1618 - t2324;
t1859 = (-qJD(4) + t2000) * t1972 + t2053;
t1749 = t1859 * t2048 + t1861 * t2045;
t1887 = t1970 + t2196;
t2093 = pkin(3) * t1887 + pkin(8) * t1749 + t1604;
t1571 = t1604 * t2041 - t1780 * t2043;
t2092 = pkin(2) * t1571 + t2130;
t1991 = -t2003 - t2198;
t1901 = t1991 * t2043 - t2150;
t2091 = pkin(2) * t1901 - t2129;
t2090 = pkin(4) * t1479 + t2133;
t2089 = -t2132 - t2303;
t2088 = t2131 + t2189;
t2017 = qJDD(1) * t2050 - t2047 * t2199;
t2087 = -pkin(6) * t2017 - g(3) * t2047;
t1603 = -t1699 * t2048 + t1700 * t2045;
t1927 = t1983 * t2049 - t1984 * t2046;
t2081 = t2022 * t2050 - t2047 * t2023;
t1723 = t1797 * t2041 + t1858 * t2043;
t2080 = pkin(2) * t1723 + t2109;
t1727 = t1808 * t2041 + t1862 * t2043;
t2079 = pkin(2) * t1727 + t2110;
t1442 = t1448 * t2041 - t1586 * t2043;
t2073 = pkin(2) * t1442 + t2100;
t2072 = t2099 + t2318;
t2071 = t2098 + t2318;
t2070 = t2097 - t2340;
t2069 = t2096 + t2305;
t2068 = t2095 + t2305;
t2067 = t2094 + t2340;
t1713 = t1749 * t2041 + t1887 * t2043;
t2066 = pkin(2) * t1713 + t2093;
t1459 = t1489 * t2048 - t2172;
t1484 = -pkin(4) * t1695 + qJ(5) * t1489;
t2065 = -pkin(3) * t1695 + pkin(8) * t1459 - qJ(5) * t2172 + t2048 * t1484;
t1453 = t1459 * t2041 - t1695 * t2043;
t2062 = pkin(2) * t1453 + t2065;
t2059 = t2082 + t2221 + t2303;
t1909 = -0.2e1 * t2174;
t2057 = -t1844 * t1920 + t1909 - t2063 - t2220;
t2033 = t2047 * qJDD(2);
t2029 = t2035 - t2198;
t2028 = -t2180 - t2198;
t2027 = -t2180 + t2198;
t2019 = -t2035 + t2180;
t2018 = t2035 + t2180;
t2016 = t2050 * t2199 + t2125;
t2015 = t2128 * qJDD(1);
t2011 = t2049 * t2020;
t2010 = t2128 * t2183;
t2001 = -pkin(6) * t2016 + g(3) * t2050;
t1990 = -t2003 + t2198;
t1989 = t2002 - t2198;
t1986 = -t2037 * t2183 + t2049 * t2075;
t1985 = -t2038 * t2183 + t2046 * t2074;
t1982 = -t2028 * t2046 - t2137;
t1981 = -t2027 * t2046 + t2011;
t1980 = t2030 * t2049 - t2139;
t1979 = t2029 * t2049 - t2138;
t1978 = t2028 * t2049 - t2138;
t1977 = t2027 * t2049 + t2139;
t1976 = t2030 * t2046 + t2011;
t1975 = t2029 * t2046 + t2137;
t1964 = t1973 - t1974;
t1963 = t2013 * t2049 + t2014 * t2046;
t1959 = t2003 - t2002;
t1947 = (t2136 - t2142) * qJD(2);
t1946 = (-t2135 - t2143) * qJD(2);
t1945 = -t1970 + t2195;
t1944 = -t2195 + t2196;
t1943 = -pkin(7) * t1978 - t2140;
t1942 = -pkin(7) * t1976 - t2141;
t1941 = t1972 * t2144;
t1939 = -pkin(1) * t1978 + t1984;
t1938 = -pkin(1) * t1976 + t1983;
t1931 = -t2002 - t2003;
t1929 = t1970 - t2196;
t1924 = -qJD(2) * t2136 + t2043 * t2056;
t1923 = qJD(2) * t2135 + t2041 * t2056;
t1922 = qJD(2) * t2142 + t2041 * t2060;
t1921 = qJD(2) * t2143 - t2043 * t2060;
t1913 = pkin(1) * t2014 + pkin(7) * t1980 + t2140;
t1912 = -pkin(1) * t2013 + pkin(7) * t1982 - t2141;
t1908 = 0.2e1 * t2175;
t1904 = -t1991 * t2041 - t2149;
t1903 = -t1990 * t2041 + t2240;
t1902 = t1989 * t2043 - t2150;
t1900 = t1990 * t2043 + t2245;
t1899 = t1989 * t2041 + t2149;
t1893 = pkin(1) * t2008 + pkin(7) * t1928;
t1882 = pkin(1) * t2018 + pkin(7) * t2015 + t1928;
t1879 = t1952 * t2043 - t2245;
t1873 = (-t1971 * t2048 + t1972 * t2045) * t2000;
t1872 = -t1941 - t2114;
t1871 = -t1946 * t2046 + t1947 * t2049;
t1870 = t1946 * t2049 + t1947 * t2046;
t1866 = -t1934 * t2043 + t1937 * t2041;
t1865 = -t1933 * t2043 + t2041 * t2213;
t1863 = -t1933 * t2041 - t2043 * t2213;
t1860 = -t1948 + t1898;
t1857 = -t1949 - t2051;
t1851 = t1898 * t2048 - t1972 * t2145;
t1850 = -t2045 * t1898 - t1941;
t1849 = t1971 * t2144 - t2045 * t2051;
t1848 = t2048 * t2051 + t2114;
t1845 = -qJ(3) * t1901 - t2151;
t1843 = -t1923 * t2046 + t1924 * t2049;
t1842 = -t1921 * t2046 + t1922 * t2049;
t1841 = t1923 * t2049 + t1924 * t2046;
t1840 = t1921 * t2049 + t1922 * t2046;
t1839 = -t1901 * t2046 + t1904 * t2049;
t1838 = -t1900 * t2046 + t1903 * t2049;
t1837 = -t1899 * t2046 + t1902 * t2049;
t1836 = t1901 * t2049 + t1904 * t2046;
t1835 = t1900 * t2049 + t1903 * t2046;
t1834 = t1899 * t2049 + t1902 * t2046;
t1833 = t1873 * t2043 + t2148;
t1832 = t1873 * t2041 - t1950;
t1829 = t1944 * t2048 - t2157;
t1828 = -t1945 * t2045 + t2232;
t1827 = t1944 * t2045 + t2156;
t1826 = t1945 * t2048 + t2235;
t1825 = -qJ(3) * t1878 - t2152;
t1807 = t1905 * t2048 - t2157;
t1796 = t1896 * t2045 + t2232;
t1794 = -t1878 * t2046 + t1879 * t2049;
t1793 = t1878 * t2049 + t1879 * t2046;
t1792 = pkin(2) * t2213 + qJ(3) * t1904 - t2152;
t1791 = t1851 * t2043 + t2117;
t1790 = t1849 * t2043 - t2117;
t1789 = t1851 * t2041 - t2116;
t1788 = t1849 * t2041 + t2116;
t1782 = -pkin(2) * t1933 + qJ(3) * t1879 + t2151;
t1760 = -t1864 * t2046 + t1866 * t2049;
t1759 = -t1863 * t2046 + t1865 * t2049;
t1758 = t1864 * t2049 + t1866 * t2046;
t1757 = t1863 * t2049 + t1865 * t2046;
t1748 = t1858 * t2048 - t1860 * t2045;
t1747 = t1859 * t2045 - t1861 * t2048;
t1746 = t1858 * t2045 + t1860 * t2048;
t1732 = t1829 * t2043 - t1857 * t2041;
t1731 = t1828 * t2043 + t1861 * t2041;
t1730 = t1829 * t2041 + t1857 * t2043;
t1729 = t1828 * t2041 - t1861 * t2043;
t1728 = t1808 * t2043 - t1862 * t2041;
t1726 = -t1832 * t2046 + t1833 * t2049;
t1725 = t1832 * t2049 + t1833 * t2046;
t1724 = t1797 * t2043 - t1858 * t2041;
t1720 = t1748 * t2043 + t1929 * t2041;
t1719 = t1748 * t2041 - t1929 * t2043;
t1714 = t1749 * t2043 - t1887 * t2041;
t1708 = -pkin(1) * t1758 - t2193;
t1707 = -pkin(1) * t1836 + t1994 - t2091;
t1706 = pkin(2) * t1930 + qJ(3) * t1722;
t1705 = -pkin(8) * t1807 + t1777;
t1704 = -t1789 * t2046 + t1791 * t2049;
t1703 = -t1788 * t2046 + t1790 * t2049;
t1702 = t1789 * t2049 + t1791 * t2046;
t1701 = t1788 * t2049 + t1790 * t2046;
t1696 = -pkin(8) * t1796 + t1776;
t1689 = -pkin(1) * t1793 + t1823 - t2192;
t1688 = -qJ(3) * t1864 - t1721;
t1687 = -pkin(7) * t1836 - t1792 * t2046 + t1845 * t2049;
t1686 = -pkin(2) * t1931 + qJ(3) * t1866 + t1722;
t1660 = pkin(1) * t2213 + pkin(7) * t1839 + t1792 * t2049 + t1845 * t2046;
t1659 = -pkin(7) * t1793 - t1782 * t2046 + t1825 * t2049;
t1654 = -pkin(3) * t1807 + t1700;
t1651 = -t1730 * t2046 + t1732 * t2049;
t1650 = -t1729 * t2046 + t1731 * t2049;
t1649 = t1730 * t2049 + t1732 * t2046;
t1648 = t1729 * t2049 + t1731 * t2046;
t1646 = -pkin(3) * t1796 + t1699;
t1644 = -pkin(1) * t1933 + pkin(7) * t1794 + t1782 * t2049 + t1825 * t2046;
t1643 = -t1727 * t2046 + t1728 * t2049;
t1642 = t1727 * t2049 + t1728 * t2046;
t1638 = -t1723 * t2046 + t1724 * t2049;
t1637 = t1723 * t2049 + t1724 * t2046;
t1636 = t1722 * t2049 - t2168;
t1635 = t1722 * t2046 + t2167;
t1626 = -t1719 * t2046 + t1720 * t2049;
t1625 = t1719 * t2049 + t1720 * t2046;
t1616 = -t1713 * t2046 + t1714 * t2049;
t1615 = t1713 * t2049 + t1714 * t2046;
t1587 = -pkin(1) * t1635 - t2194;
t1572 = t1604 * t2043 + t1780 * t2041;
t1570 = -pkin(8) * t1747 - t1603;
t1565 = -pkin(7) * t1758 - t1686 * t2046 + t1688 * t2049;
t1558 = -pkin(1) * t1931 + pkin(7) * t1760 + t1686 * t2049 + t1688 * t2046;
t1554 = -qJ(3) * t1727 - t1654 * t2041 + t1705 * t2043;
t1553 = -qJ(3) * t1723 - t1646 * t2041 + t1696 * t2043;
t1544 = -pkin(7) * t1635 - qJ(3) * t2167 - t1706 * t2046;
t1543 = pkin(1) * t1930 + pkin(7) * t1636 - qJ(3) * t2168 + t1706 * t2049;
t1542 = -pkin(1) * t1642 - t2079;
t1541 = -pkin(2) * t1807 + qJ(3) * t1728 + t1654 * t2043 + t1705 * t2041;
t1540 = -pkin(1) * t1637 - t2080;
t1539 = -pkin(2) * t1796 + qJ(3) * t1724 + t1646 * t2043 + t1696 * t2041;
t1538 = -t2189 - t2304;
t1521 = -qJ(3) * t1713 + t1570 * t2043 + t1747 * t2191;
t1510 = qJ(3) * t1714 + t2041 * t1570 + t1747 * t2121;
t1509 = -t2088 - t2304;
t1504 = -t1571 * t2046 + t1572 * t2049;
t1503 = t1571 * t2049 + t1572 * t2046;
t1502 = t1907 - t2089 + t2334;
t1501 = -pkin(1) * t1615 - t2066;
t1500 = -t1589 * t2045 + t1618 * t2048 + t2332;
t1499 = t1556 + t2278;
t1494 = -t1584 * t2045 + t1614 * t2048 - t2284;
t1487 = -qJ(3) * t1571 + (-pkin(8) * t2043 + t2191) * t1603;
t1486 = t1537 + t2220 + t2278;
t1485 = t1908 - t2059 - 0.2e1 * t2173 - t2334;
t1476 = -pkin(7) * t1642 - t1541 * t2046 + t1554 * t2049;
t1475 = -pkin(7) * t1637 - t1539 * t2046 + t1553 * t2049;
t1474 = qJ(3) * t1572 + (-pkin(8) * t2041 + t2121) * t1603;
t1473 = -pkin(1) * t1807 + pkin(7) * t1643 + t1541 * t2049 + t1554 * t2046;
t1472 = -pkin(1) * t1796 + pkin(7) * t1638 + t1539 * t2049 + t1553 * t2046;
t1469 = -pkin(1) * t1503 - t2092;
t1466 = -pkin(7) * t1615 - t1510 * t2046 + t1521 * t2049;
t1465 = -t1508 * t2045 + t1519 * t2048 - t2284;
t1464 = -t1506 * t2045 + t1516 * t2048 - t2332;
t1463 = -pkin(1) * t1747 + pkin(7) * t1616 + t1510 * t2049 + t1521 * t2046;
t1462 = -t2067 - t2349;
t1458 = t1489 * t2045 + t2171;
t1456 = t1500 * t2043 - t1502 * t2041 - t2339;
t1455 = -t2068 - t2319;
t1454 = t1459 * t2043 + t1695 * t2041;
t1452 = t1494 * t2043 - t1499 * t2041 - t2301;
t1451 = t1500 * t2041 + t1502 * t2043 - t2338;
t1447 = t1479 * t2048 + t1480 * t2045;
t1445 = t1494 * t2041 + t1499 * t2043 + t2293;
t1444 = -t2069 - t2319;
t1443 = t1448 * t2043 + t1586 * t2041;
t1441 = -t1478 * t2045 + t1482 * t2048 - t2302;
t1440 = -t2070 + t2349;
t1439 = -pkin(3) * t1458 - t2190;
t1438 = t1465 * t2043 - t1486 * t2041 - t2301;
t1437 = -pkin(7) * t1503 - t1474 * t2046 + t1487 * t2049;
t1436 = t1464 * t2043 - t1485 * t2041 + t2339;
t1435 = t1465 * t2041 + t1486 * t2043 + t2293;
t1434 = t1464 * t2041 + t1485 * t2043 + t2338;
t1433 = -pkin(1) * t1603 + pkin(7) * t1504 + t1474 * t2049 + t1487 * t2046;
t1432 = -t1468 * t2045 + t1471 * t2048 - t2302;
t1431 = t1441 * t2043 - t1538 * t2041 - t2316;
t1430 = -pkin(8) * t1458 - qJ(5) * t2171 - t1484 * t2045;
t1429 = t1441 * t2041 + t1538 * t2043 + t2314;
t1428 = -t1453 * t2046 + t1454 * t2049;
t1427 = t1453 * t2049 + t1454 * t2046;
t1426 = -t2071 - t2336;
t1425 = -pkin(3) * t1447 - t2090;
t1424 = t1432 * t2043 - t1509 * t2041 - t2316;
t1423 = -t1451 * t2046 + t1456 * t2049 - t2348;
t1422 = -t2072 - t2336;
t1421 = t1451 * t2049 + t1456 * t2046 - t2347;
t1420 = t1432 * t2041 + t1509 * t2043 + t2314;
t1419 = -t1445 * t2046 + t1452 * t2049 - t2317;
t1418 = t1445 * t2049 + t1452 * t2046 + t2315;
t1417 = -t1442 * t2046 + t1443 * t2049;
t1416 = t1442 * t2049 + t1443 * t2046;
t1415 = -pkin(8) * t1447 - t1450 * t2045 + t1461 * t2048;
t1414 = -t1435 * t2046 + t1438 * t2049 - t2317;
t1413 = t1435 * t2049 + t1438 * t2046 + t2315;
t1412 = -t1434 * t2046 + t1436 * t2049 + t2348;
t1411 = t1434 * t2049 + t1436 * t2046 + t2347;
t1410 = -t1429 * t2046 + t1431 * t2049 - t2333;
t1409 = -qJ(3) * t1453 + t1430 * t2043 - t1439 * t2041;
t1408 = t1429 * t2049 + t1431 * t2046 + t2325;
t1407 = -pkin(1) * t1427 - t2062;
t1406 = -t1420 * t2046 + t1424 * t2049 - t2333;
t1405 = -pkin(2) * t1458 + qJ(3) * t1454 + t1430 * t2041 + t1439 * t2043;
t1404 = t1420 * t2049 + t1424 * t2046 + t2325;
t1403 = -qJ(3) * t1442 + t1415 * t2043 - t1425 * t2041;
t1402 = -pkin(1) * t1416 - t2073;
t1401 = -pkin(2) * t1447 + qJ(3) * t1443 + t1415 * t2041 + t1425 * t2043;
t1400 = -pkin(7) * t1427 - t1405 * t2046 + t1409 * t2049;
t1399 = -pkin(1) * t1458 + pkin(7) * t1428 + t1405 * t2049 + t1409 * t2046;
t1398 = -pkin(7) * t1416 - t1401 * t2046 + t1403 * t2049;
t1397 = -pkin(1) * t1447 + pkin(7) * t1417 + t1401 * t2049 + t1403 * t2046;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2017, 0, -t2016, 0, t2087, -t2001, -t2081, -pkin(6) * t2081, t1986 * t2050 - t2101, t1964 * t2050 + t2047 * t2019, t1981 * t2050 + t2046 * t2125, t1985 * t2050 + t2101, t1979 * t2050 + t2047 * t2124, t2010 * t2050 + t2033, t2050 * t1942 - t2047 * t1938 - pkin(6) * (t2047 * t1980 + t2014 * t2050), t2050 * t1943 - t2047 * t1939 - pkin(6) * (t2047 * t1982 - t2013 * t2050), t2050 * t1927 - pkin(6) * (t2047 * t2015 + t2018 * t2050), -pkin(6) * (t2047 * t1928 + t2008 * t2050) - (pkin(1) * t2047 - pkin(7) * t2050) * t1927, t1843 * t2050 + t2112, t1759 * t2050 + t2047 * t1959, t1838 * t2050 + t2047 * t1937, t1842 * t2050 - t2112, t1837 * t2050 - t2047 * t1934, t1871 * t2050 + t2033, t2050 * t1659 - t2047 * t1689 - pkin(6) * (t2047 * t1794 - t1933 * t2050), t2050 * t1687 - t2047 * t1707 - pkin(6) * (t2047 * t1839 + t2050 * t2213), t2050 * t1565 - t2047 * t1708 - pkin(6) * (t2047 * t1760 - t1931 * t2050), t2050 * t1544 - t2047 * t1587 - pkin(6) * (t2047 * t1636 + t1930 * t2050), t1704 * t2050 - t2047 * t1850, t1626 * t2050 + t2047 * t1746, t1650 * t2050 + t2047 * t1826, t1703 * t2050 + t2047 * t1848, t1651 * t2050 + t2047 * t1827, t1726 * t2050 + t2047 * t1872, t2050 * t1475 - t2047 * t1540 - pkin(6) * (t2047 * t1638 - t1796 * t2050), t2050 * t1476 - t2047 * t1542 - pkin(6) * (t2047 * t1643 - t1807 * t2050), t2050 * t1466 - t2047 * t1501 - pkin(6) * (t2047 * t1616 - t1747 * t2050), t2050 * t1437 - t2047 * t1469 - pkin(6) * (t2047 * t1504 - t1603 * t2050), t2222, t2345, t2322, t2270, t2341, t2271, t2050 * t1419 - t2047 * t1455 - t2313, t2050 * t1423 - t2047 * t1462 + t2350, t2050 * t1410 - t2047 * t1426 - t2321, t2050 * t1400 - t2047 * t1407 - pkin(6) * (t2047 * t1428 - t1458 * t2050), t2222, t2322, -t2345, t2271, -t2341, t2270, t2050 * t1414 - t2047 * t1444 - t2313, t2050 * t1406 - t2047 * t1422 - t2321, t2050 * t1412 - t2047 * t1440 - t2350, t2050 * t1398 - t2047 * t1402 - pkin(6) * (t2047 * t1417 - t1447 * t2050); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2016, 0, t2017, 0, t2001, t2087, t2103, pkin(6) * t2103, t2047 * t1986 + t2102, t2047 * t1964 - t2019 * t2050, t2047 * t1981 - t2050 * t2126, t2047 * t1985 - t2102, t2047 * t1979 - t2050 * t2124, t2047 * t2010 - t2127, t2047 * t1942 + t2050 * t1938 + pkin(6) * (t1980 * t2050 - t2047 * t2014), t2047 * t1943 + t2050 * t1939 + pkin(6) * (t1982 * t2050 + t2047 * t2013), t2047 * t1927 + pkin(6) * (t2015 * t2050 - t2047 * t2018), pkin(6) * (t1928 * t2050 - t2047 * t2008) - (-pkin(1) * t2050 - pkin(7) * t2047) * t1927, t2047 * t1843 - t2115, t2047 * t1759 - t1959 * t2050, t2047 * t1838 - t1937 * t2050, t2047 * t1842 + t2115, t2047 * t1837 + t1934 * t2050, t2047 * t1871 - t2127, t2047 * t1659 + t2050 * t1689 + pkin(6) * (t1794 * t2050 + t2047 * t1933), t2047 * t1687 + t2050 * t1707 + pkin(6) * (t1839 * t2050 - t2047 * t2213), t2047 * t1565 + t2050 * t1708 + pkin(6) * (t1760 * t2050 + t2047 * t1931), t2047 * t1544 + t2050 * t1587 + pkin(6) * (t1636 * t2050 - t2047 * t1930), t2047 * t1704 + t1850 * t2050, t2047 * t1626 - t1746 * t2050, t2047 * t1650 - t1826 * t2050, t2047 * t1703 - t1848 * t2050, t2047 * t1651 - t1827 * t2050, t2047 * t1726 - t1872 * t2050, t2047 * t1475 + t2050 * t1540 + pkin(6) * (t1638 * t2050 + t2047 * t1796), t2047 * t1476 + t2050 * t1542 + pkin(6) * (t1643 * t2050 + t2047 * t1807), t2047 * t1466 + t2050 * t1501 + pkin(6) * (t1616 * t2050 + t2047 * t1747), t2047 * t1437 + t2050 * t1469 + pkin(6) * (t1504 * t2050 + t2047 * t1603), t2229, t2346, t2323, t2272, t2342, t2273, t2047 * t1419 + t2050 * t1455 + t2312, t2047 * t1423 + t2050 * t1462 - t2351, t2047 * t1410 + t2050 * t1426 + t2320, t2047 * t1400 + t2050 * t1407 + pkin(6) * (t1428 * t2050 + t2047 * t1458), t2229, t2323, -t2346, t2273, -t2342, t2272, t2047 * t1414 + t2050 * t1444 + t2312, t2047 * t1406 + t2050 * t1422 + t2320, t2047 * t1412 + t2050 * t1440 + t2351, t2047 * t1398 + t2050 * t1402 + pkin(6) * (t1417 * t2050 + t2047 * t1447); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2022, t2023, 0, 0, t1974, t1963, t1977, t1973, t1975, 0, t1913, t1912, t1882, t1893, t1841, t1757, t1835, t1840, t1834, t1870, t1644, t1660, t1558, t1543, t1702, t1625, t1648, t1701, t1649, t1725, t1472, t1473, t1463, t1433, t2200, -t1495, t2308, t2248, -t1528, t2250, t1418, t1421, t1408, t1399, t2200, t2308, t1495, t2250, t1528, t2248, t1413, t1404, t1411, t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2199, 0, 0, -g(3), -t2022, 0, t1986, t1964, t1981, t1985, t1979, t2010, t1942, t1943, t1927, pkin(7) * t1927, t1843, t1759, t1838, t1842, t1837, t1871, t1659, t1687, t1565, t1544, t1704, t1626, t1650, t1703, t1651, t1726, t1475, t1476, t1466, t1437, t2201, t1498, t2309, t2249, t1533, t2251, t1419, t1423, t1410, t1400, t2201, t2309, -t1498, t2251, -t1533, t2249, t1414, t1406, t1412, t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2199, 0, qJDD(1), 0, g(3), 0, -t2023, 0, t2031, -t2019, -t2126, -t2031, -t2124, -qJDD(2), t1938, t1939, 0, pkin(1) * t1927, -t1961, -t1959, -t1937, t1961, t1934, -qJDD(2), t1689, t1707, t1708, t1587, t1850, -t1746, -t1826, -t1848, -t1827, -t1872, t1540, t1542, t1501, t1469, -t1674, t1575, -t2267, -t2202, -t1664, -t2205, t1455, t1462, t1426, t1407, -t1674, -t2267, -t1575, -t2205, t1664, -t2202, t1444, t1422, t1440, t1402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2022, t2023, 0, 0, t1974, t1963, t1977, t1973, t1975, 0, t1913, t1912, t1882, t1893, t1841, t1757, t1835, t1840, t1834, t1870, t1644, t1660, t1558, t1543, t1702, t1625, t1648, t1701, t1649, t1725, t1472, t1473, t1463, t1433, t2200, -t1495, t2308, t2248, -t1528, t2250, t1418, t1421, t1408, t1399, t2200, t2308, t1495, t2250, t1528, t2248, t1413, t1404, t1411, t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2075, t2014, t2020, -t2111, t2029, t2111, 0, -t2008, t1983, 0, t1924, t1865, t1903, t1922, t1902, t1947, t1825, t1845, t1688, -qJ(3) * t1721, t1791, t1720, t1731, t1790, t1732, t1833, t1553, t1554, t1521, t1487, t2085, -t1568, t2290, t2224, -t1611, t2223, t1452, t1456, t1431, t1409, t2085, t2290, t1568, t2223, t1611, t2224, t1438, t1424, t1436, t1403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2113, t2013, t2027, -t2074, t2021, -t2113, t2008, 0, t1984, 0, t1923, t1863, t1900, t1921, t1899, t1946, t1782, t1792, t1686, t1706, t1789, t1719, t1729, t1788, t1730, t1832, t1539, t1541, t1510, t1474, t2086, -t1566, t2292, t2226, -t1607, t2227, t1445, t1451, t1429, t1405, t2086, t2292, t1566, t2227, t1607, t2226, t1435, t1420, t1434, t1401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2031, t2019, t2126, t2031, t2124, qJDD(2), -t1983, -t1984, 0, 0, t1961, t1959, t1937, -t1961, -t1934, qJDD(2), t1996 - t2104 + t2192, t2091 + 0.2e1 * t2177, t2193, t2194, -t1850, t1746, t1826, t1848, t1827, t1872, t2080, t2079, t2066, t2092, t1674, -t1575, t2267, t2202, t1664, t2205, t2068, t2067, t2071, t2062, t1674, t2267, t1575, t2205, -t1664, t2202, t2069, t2072, t2070, t2073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2056, -t1933, t2209, t1998, t1989, -t1998, 0, -t1930, t1823, 0, t1851, t1748, t1828, t1849, t1829, t1873, t1696, t1705, t1570, -pkin(8) * t1603, t1677, -t1579, t2266, t2203, -t1667, t2204, t1494, t1500, t1441, t1430, t1677, t2266, t1579, t2204, t1667, t2203, t1465, t1432, t1464, t1415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2179, -t2213, t1990, -t2060, t1954, -t2179, t1930, 0, t1824, 0, -t1932, -t1929, -t1861, t1932, t1857, -t1960, t1646, t1654, -pkin(3) * t1747, -pkin(3) * t1603, -t2153, -t2216, -t2211, t2153, t1768, -t1960, t1499, t1502, t1538, t1439, -t2153, -t2211, t2216, -t1960, -t1768, t2153, t1486, t1509, t1485, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1961, t1959, t1937, -t1961, -t1934, qJDD(2), -t1823, -t1824, 0, 0, -t1850, t1746, t1826, t1848, t1827, t1872, t2109, t2110, t2093, t2130, t1674, -t1575, t2267, t2202, t1664, t2205, t2095, t2094, t2098, t2065, t1674, t2267, t1575, t2205, -t1664, t2202, t2096, t2099, t2097, t2100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1898, t1858, t2215, t1948, t1944, -t1948, 0, t1780, t1699, 0, t1755, -t1682, t2257, t2076, t1744, t2083, t1614, t1618, t1482, -qJ(5) * t1488, t1755, t2257, t1682, t2083, -t1744, t2076, t1519, t1471, t1516, t1461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1949, t1860, t1945, t2051, t1875, -t1949, -t1780, 0, t1700, 0, t1754, t1680, t2256, t2084, t1740, t2064, t1584, t1589, t1478, t1484, t1754, t2256, -t1680, t2064, -t1740, t2084, t1508, t1468, t1506, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1932, t1929, t1861, -t1932, -t1857, t1960, -t1699, -t1700, 0, 0, t2153, t2216, t2211, -t2153, -t1768, t1960, t1909 - t2105 + t2263, t1908 + t2089, t2189, t2190, t2153, t2211, -t2216, t1960, t1768, -t2153, t2057 + t2263, t2088, t2059 + t2217, t2090; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1820, -t2219, t2212, t2154, t1884, -t2154, 0, t1695, t1556, 0, t1820, t2212, t2219, -t2154, -t1884, t2154, -qJ(6) * t2219, t1520, t1559, -qJ(6) * t1586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1889, t2218, -t1885, -t1819, t2214, -t1889, -t1695, 0, t1557, 0, t1889, -t1885, -t2218, -t1889, -t2214, -t1819, t1560, t1518, pkin(5) * t2218, -pkin(5) * t1586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2153, t2216, t2211, -t2153, -t1768, t1960, -t1556, -t1557, 0, 0, t2153, t2211, -t2216, t1960, t1768, -t2153, t2057, t2131, t1535 + t2221, t2133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1820, t2212, t2219, -t2154, -t1884, t2154, 0, t1537, -t1586, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2153, t2211, -t2216, t1960, t1768, -t2153, -t1537, 0, t1535, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1889, t1885, t2218, t1889, t2214, t1819, t1586, -t1535, 0, 0;];
m_new_reg  = t1;
