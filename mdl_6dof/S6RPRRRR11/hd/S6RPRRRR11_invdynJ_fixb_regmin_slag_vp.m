% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RPRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR11_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR11_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR11_invdynJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:46:10
% EndTime: 2019-03-09 07:46:45
% DurationCPUTime: 15.67s
% Computational Cost: add. (23299->712), mult. (73900->1011), div. (0->0), fcn. (65706->18), ass. (0->332)
t322 = sin(pkin(13));
t325 = cos(pkin(13));
t333 = cos(qJ(1));
t478 = cos(pkin(6));
t418 = t333 * t478;
t494 = sin(qJ(1));
t263 = t322 * t418 + t325 * t494;
t329 = sin(qJ(3));
t324 = sin(pkin(6));
t464 = t324 * t333;
t323 = sin(pkin(7));
t466 = t323 * t329;
t495 = cos(qJ(3));
t370 = t494 * t322 - t325 * t418;
t477 = cos(pkin(7));
t501 = t370 * t477;
t185 = -t263 * t495 + t329 * t501 + t464 * t466;
t420 = t324 * t477;
t233 = t323 * t370 - t333 * t420;
t328 = sin(qJ(4));
t332 = cos(qJ(4));
t148 = t185 * t332 - t233 * t328;
t433 = t323 * t495;
t182 = t263 * t329 + t433 * t464 + t495 * t501;
t321 = qJ(5) + qJ(6);
t316 = sin(t321);
t317 = cos(t321);
t532 = t148 * t316 + t182 * t317;
t531 = t148 * t317 - t182 * t316;
t327 = sin(qJ(5));
t331 = cos(qJ(5));
t530 = t148 * t327 + t182 * t331;
t529 = t148 * t331 - t182 * t327;
t449 = qJD(1) * t324;
t432 = t322 * t449;
t393 = t477 * t495;
t374 = t325 * t393;
t416 = t478 * t323;
t376 = t495 * t416;
t523 = t324 * t374 + t376;
t510 = t523 * qJD(1) - t329 * t432;
t210 = qJD(4) - t510;
t419 = t329 * t477;
t346 = t324 * (-t322 * t419 + t325 * t495);
t248 = qJD(1) * t346;
t426 = qJD(3) * t495;
t400 = t323 * t426;
t524 = t248 - t400;
t522 = t185 * t328 + t233 * t332;
t413 = qJD(1) * t478;
t401 = pkin(1) * t413;
t305 = t325 * t401;
t469 = t322 * t324;
t338 = t478 * pkin(2) + (-pkin(9) * t477 - qJ(2)) * t469;
t211 = qJD(1) * t338 + t305;
t197 = t211 * t419;
t431 = t325 * t449;
t259 = qJ(2) * t431 + t322 * t401;
t344 = (t325 * t420 + t416) * pkin(9);
t204 = qJD(1) * t344 + t259;
t252 = (-pkin(9) * t322 * t323 - pkin(2) * t325 - pkin(1)) * t324;
t239 = qJD(1) * t252 + qJD(2);
t132 = t495 * t204 + t239 * t466 + t197;
t521 = -t132 + t210 * (pkin(4) * t328 - pkin(11) * t332);
t395 = t325 * t419;
t396 = t329 * t416;
t228 = t324 * (t322 * t495 + t395) + t396;
t220 = t228 * qJD(1);
t155 = t327 * t332 * t510 - t331 * t220;
t445 = qJD(4) * t332;
t515 = -t327 * t445 + t155;
t461 = t331 * t332;
t156 = t220 * t327 + t461 * t510;
t384 = t331 * t445 - t156;
t443 = qJD(5) * t327;
t518 = -t328 * t443 + t384;
t381 = t478 * t477;
t439 = -t323 * t431 + qJD(3);
t350 = -qJD(1) * t381 - t439;
t175 = t332 * t220 - t328 * t350;
t136 = t175 * t327 - t331 * t210;
t138 = t175 * t331 + t210 * t327;
t326 = sin(qJ(6));
t330 = cos(qJ(6));
t378 = t136 * t326 - t330 * t138;
t80 = t330 * t136 + t138 * t326;
t517 = t378 * t80;
t442 = qJD(5) * t331;
t516 = t328 * t442 - t515;
t251 = t332 * t350;
t173 = t220 * t328 + t251;
t498 = qJD(5) + qJD(6);
t514 = t173 + t498;
t267 = t328 * t466 - t332 * t477;
t404 = t323 * t432;
t513 = qJD(4) * t267 + t328 * t404 + t524 * t332;
t345 = t324 * (t322 * t393 + t325 * t329);
t247 = qJD(1) * t345;
t448 = qJD(3) * t329;
t430 = t323 * t448;
t512 = t247 - t430;
t509 = t378 ^ 2 - t80 ^ 2;
t440 = qJD(6) * t330;
t441 = qJD(6) * t326;
t219 = t228 * qJD(3);
t437 = qJDD(1) * t324;
t424 = t322 * t437;
t358 = -qJDD(1) * t523 + t329 * t424;
t163 = qJD(1) * t219 + t358;
t161 = qJDD(4) + t163;
t162 = qJD(3) * t510 + qJDD(1) * t396 + t395 * t437 + t495 * t424;
t465 = t324 * t325;
t262 = t323 * t465 - t381;
t256 = qJDD(1) * t262 - qJDD(3);
t447 = qJD(4) * t328;
t92 = -qJD(4) * t251 + t332 * t162 - t220 * t447 - t328 * t256;
t45 = t327 * t161 - t175 * t443 + t210 * t442 + t331 * t92;
t46 = qJD(5) * t138 - t331 * t161 + t327 * t92;
t13 = -t136 * t440 - t138 * t441 - t326 * t46 + t330 * t45;
t172 = qJD(5) + t173;
t171 = qJD(6) + t172;
t508 = t171 * t80 + t13;
t181 = t228 * t332 - t262 * t328;
t169 = -t211 * t323 + t477 * t239;
t106 = -pkin(3) * t510 - pkin(10) * t220 + t169;
t110 = -pkin(10) * t350 + t132;
t55 = t328 * t106 + t332 * t110;
t48 = pkin(11) * t210 + t55;
t375 = t211 * t393;
t131 = -t329 * t204 + t239 * t433 + t375;
t109 = pkin(3) * t350 - t131;
t65 = t173 * pkin(4) - t175 * pkin(11) + t109;
t31 = t327 * t65 + t331 * t48;
t22 = -pkin(12) * t136 + t31;
t20 = t22 * t441;
t468 = t322 * t329;
t227 = t324 * t468 - t523;
t54 = t106 * t332 - t328 * t110;
t47 = -pkin(4) * t210 - t54;
t39 = pkin(5) * t136 + t47;
t394 = t478 * t494;
t264 = -t322 * t394 + t333 * t325;
t352 = t333 * t322 + t325 * t394;
t467 = t323 * t324;
t500 = t352 * t477 - t494 * t467;
t187 = t264 * t495 - t329 * t500;
t234 = t323 * t352 + t420 * t494;
t150 = t187 * t332 + t234 * t328;
t186 = t264 * t329 + t495 * t500;
t99 = t150 * t317 + t186 * t316;
t507 = t39 * t80 + g(1) * t99 - g(2) * t531 - g(3) * (-t181 * t317 - t227 * t316) + t20;
t30 = -t327 * t48 + t331 * t65;
t21 = -pkin(12) * t138 + t30;
t18 = pkin(5) * t172 + t21;
t486 = t22 * t330;
t11 = t18 * t326 + t486;
t308 = qJ(2) * t465;
t435 = pkin(1) * t478;
t398 = qJDD(1) * t435;
t438 = qJD(1) * qJD(2);
t425 = t324 * t438;
t243 = qJDD(1) * t308 + t322 * t398 + t325 * t425;
t192 = qJDD(1) * t344 + t243;
t303 = t325 * t398;
t193 = qJDD(1) * t338 - t322 * t425 + t303;
t235 = qJDD(1) * t252 + qJDD(2);
t349 = -qJD(3) * t375 - t495 * t192 - t193 * t419 + t204 * t448 - t235 * t466 - t239 * t400;
t61 = -pkin(10) * t256 - t349;
t154 = -t193 * t323 + t477 * t235;
t76 = pkin(3) * t163 - pkin(10) * t162 + t154;
t365 = t106 * t445 - t110 * t447 + t328 * t76 + t332 * t61;
t16 = pkin(11) * t161 + t365;
t369 = -qJD(3) * t197 - t329 * t192 + t193 * t393 - t204 * t426 + t235 * t433 - t239 * t430;
t62 = pkin(3) * t256 - t369;
t93 = qJD(4) * t175 + t328 * t162 + t332 * t256;
t28 = pkin(4) * t93 - pkin(11) * t92 + t62;
t7 = -qJD(5) * t31 - t327 * t16 + t331 * t28;
t91 = qJDD(5) + t93;
t4 = pkin(5) * t91 - pkin(12) * t45 + t7;
t368 = -t331 * t16 - t327 * t28 - t65 * t442 + t443 * t48;
t5 = -pkin(12) * t46 - t368;
t2 = -qJD(6) * t11 - t326 * t5 + t330 * t4;
t98 = -t150 * t316 + t186 * t317;
t506 = t39 * t378 - g(1) * t98 - g(2) * t532 - g(3) * (-t181 * t316 + t227 * t317) + t2;
t341 = qJD(6) * t378 - t326 * t45 - t330 * t46;
t505 = -t171 * t378 + t341;
t491 = pkin(10) * t327;
t504 = t521 * t331 + t447 * t491;
t503 = t210 * t328;
t279 = t326 * t331 + t327 * t330;
t260 = t279 * t328;
t319 = t324 ^ 2;
t502 = t319 * (t322 ^ 2 + t325 ^ 2);
t266 = t322 * t435 + t308;
t223 = t344 + t266;
t310 = t325 * t435;
t229 = t310 + t338;
t336 = -t329 * t223 + t229 * t393 + t252 * t433;
t293 = -pkin(4) * t332 - pkin(11) * t328 - pkin(3);
t164 = pkin(3) * t220 - pkin(10) * t510;
t459 = t332 * t131 + t328 * t164;
t69 = pkin(11) * t220 + t459;
t499 = -t293 * t442 - t521 * t327 + t331 * t69;
t423 = qJD(6) * t18 + t5;
t497 = t326 * t4 + t423 * t330;
t496 = pkin(11) + pkin(12);
t493 = pkin(1) * t319;
t492 = pkin(5) * t328;
t177 = -t229 * t323 + t477 * t252;
t123 = pkin(3) * t227 - pkin(10) * t228 + t177;
t209 = t495 * t223;
t415 = t477 * t229;
t436 = t252 * t466 + t329 * t415 + t209;
t130 = -pkin(10) * t262 + t436;
t460 = t328 * t123 + t332 * t130;
t60 = pkin(11) * t227 + t460;
t129 = t262 * pkin(3) - t336;
t180 = t228 * t328 + t262 * t332;
t75 = t180 * pkin(4) - t181 * pkin(11) + t129;
t489 = t327 * t75 + t331 * t60;
t487 = pkin(10) * qJD(4);
t485 = t327 * t45;
t484 = t327 * t91;
t483 = t331 * t91;
t278 = t326 * t327 - t330 * t331;
t482 = t155 * t326 - t156 * t330 - t260 * t498 - t278 * t445;
t462 = t328 * t331;
t463 = t327 * t328;
t481 = -t441 * t463 + (t462 * t498 - t515) * t330 + t518 * t326;
t127 = t328 * t131;
t68 = -pkin(4) * t220 - t164 * t332 + t127;
t480 = pkin(5) * t516 + pkin(10) * t445 - t68;
t121 = pkin(4) * t175 + pkin(11) * t173;
t479 = t327 * t121 + t331 * t54;
t476 = t136 * t172;
t475 = t138 * t172;
t474 = t173 * t210;
t473 = t173 * t327;
t472 = t175 * t210;
t471 = t316 * t332;
t470 = t317 * t332;
t268 = t328 * t477 + t332 * t466;
t357 = -t331 * t268 + t327 * t433;
t458 = qJD(5) * t357 + t327 * t513 - t331 * t512;
t240 = -t327 * t268 - t331 * t433;
t457 = -qJD(5) * t240 + t327 * t512 + t331 * t513;
t456 = t514 * t278;
t455 = t514 * t279;
t454 = qJD(4) * t268 - t524 * t328 + t332 * t404;
t311 = pkin(10) * t461;
t451 = t327 * t293 + t311;
t446 = qJD(4) * t331;
t444 = qJD(5) * t172;
t434 = qJD(5) * t496;
t421 = -t327 * t60 + t331 * t75;
t334 = qJD(1) ^ 2;
t417 = t334 * t478;
t412 = t123 * t332 - t328 * t130;
t408 = t210 * t332;
t407 = t172 * t331;
t406 = -t106 * t447 - t110 * t445 - t328 * t61 + t332 * t76;
t402 = qJD(2) * t322 * t467;
t399 = -t55 + (t443 + t473) * pkin(5);
t244 = -pkin(12) * t463 + t451;
t391 = -pkin(12) * t156 + qJD(6) * t244 + t510 * t492 - t327 * t69 - (-pkin(12) * t461 + t492) * qJD(4) - (-t311 + (pkin(12) * t328 - t293) * t327) * qJD(5) - t504;
t277 = t331 * t293;
t226 = -pkin(12) * t462 + t277 + (-pkin(5) - t491) * t332;
t390 = -qJD(6) * t226 - (-t328 * t446 - t332 * t443) * pkin(10) + t499 + t516 * pkin(12);
t300 = t496 * t327;
t389 = pkin(12) * t473 + qJD(6) * t300 + t327 * t434 + t479;
t116 = t331 * t121;
t301 = t496 * t331;
t388 = pkin(5) * t175 + qJD(6) * t301 - t327 * t54 + t116 + (pkin(12) * t173 + t434) * t331;
t387 = qJD(2) * t413;
t383 = -qJD(6) * t357 - t458;
t382 = -qJD(6) * t240 + t457;
t145 = t181 * t331 + t227 * t327;
t23 = pkin(5) * t180 - pkin(12) * t145 + t421;
t144 = t181 * t327 - t227 * t331;
t29 = -pkin(12) * t144 + t489;
t380 = t23 * t330 - t29 * t326;
t379 = t23 * t326 + t29 * t330;
t87 = t330 * t144 + t145 * t326;
t88 = -t144 * t326 + t145 * t330;
t377 = (-qJ(2) * t432 + t305) * t322 - t259 * t325;
t117 = qJD(2) * t346 + qJD(3) * t336;
t218 = (t376 + (t374 - t468) * t324) * qJD(3);
t152 = pkin(3) * t219 - pkin(10) * t218 + t402;
t373 = -t328 * t117 - t123 * t447 - t130 * t445 + t152 * t332;
t372 = g(1) * t494 - g(2) * t333;
t371 = -g(1) * t333 - g(2) * t494;
t59 = -pkin(4) * t227 - t412;
t17 = -pkin(4) * t161 - t406;
t362 = t332 * t117 + t123 * t445 - t130 * t447 + t328 * t152;
t36 = pkin(11) * t219 + t362;
t118 = qJD(2) * t345 + (t209 + (t252 * t323 + t415) * t329) * qJD(3);
t142 = qJD(4) * t181 + t218 * t328;
t143 = -qJD(4) * t180 + t218 * t332;
t51 = t142 * pkin(4) - t143 * pkin(11) + t118;
t367 = t327 * t51 + t331 * t36 + t75 * t442 - t443 * t60;
t366 = -pkin(11) * t91 + t172 * t47;
t363 = -pkin(10) * t161 + t109 * t210;
t149 = -t187 * t328 + t234 * t332;
t361 = g(1) * t149 + g(2) * t522 - g(3) * t180;
t360 = g(1) * t186 + g(2) * t182 + g(3) * t227;
t359 = g(1) * t187 - g(2) * t185 + g(3) * t228;
t354 = t360 - t62;
t37 = -pkin(4) * t219 - t373;
t343 = pkin(10) * t444 - t360;
t342 = -qJD(5) * t489 - t327 * t36 + t331 * t51;
t339 = pkin(11) * t444 + t17 + t361;
t315 = -pkin(5) * t331 - pkin(4);
t306 = -pkin(1) * t437 + qJDD(2);
t287 = (pkin(5) * t327 + pkin(10)) * t328;
t265 = -qJ(2) * t469 + t310;
t261 = t278 * t328;
t242 = t303 + (-qJ(2) * qJDD(1) - t438) * t469;
t101 = t150 * t331 + t186 * t327;
t100 = -t150 * t327 + t186 * t331;
t90 = qJDD(6) + t91;
t78 = -qJD(5) * t144 + t143 * t331 + t219 * t327;
t77 = qJD(5) * t145 + t143 * t327 - t219 * t331;
t40 = pkin(5) * t144 + t59;
t25 = qJD(6) * t88 + t326 * t78 + t330 * t77;
t24 = -qJD(6) * t87 - t326 * t77 + t330 * t78;
t19 = pkin(5) * t77 + t37;
t12 = pkin(5) * t46 + t17;
t10 = t18 * t330 - t22 * t326;
t9 = -pkin(12) * t77 + t367;
t8 = pkin(5) * t142 - pkin(12) * t78 + t342;
t1 = -t20 + t497;
t3 = [qJDD(1), t372, -t371, t242 * t478 + g(1) * t263 - g(2) * t264 + (-t306 * t325 - t322 * t387) * t324 + (t265 * t478 + t325 * t493) * qJDD(1), -t243 * t478 - g(1) * t370 + g(2) * t352 + (t306 * t322 - t325 * t387) * t324 + (-t266 * t478 - t322 * t493) * qJDD(1), t438 * t502 + (-t242 * t322 + t243 * t325 + (-t265 * t322 + t266 * t325) * qJDD(1) + t371) * t324, t242 * t265 + t243 * t266 + t372 * pkin(1) + (-t306 * pkin(1) + qJ(2) * t371 - qJD(2) * t377) * t324, t162 * t228 + t218 * t220, -t162 * t227 - t163 * t228 + t218 * t510 - t219 * t220, -t162 * t262 - t218 * t350 - t228 * t256, t163 * t262 + t219 * t350 + t227 * t256, t256 * t262, -g(1) * t185 - g(2) * t187 + t118 * t350 + t154 * t227 + t177 * t163 + t169 * t219 - t256 * t336 - t262 * t369 - t402 * t510, -g(1) * t182 + g(2) * t186 + t117 * t350 + t154 * t228 + t177 * t162 + t169 * t218 + t220 * t402 + t256 * t436 - t262 * t349, t143 * t175 + t181 * t92, -t142 * t175 - t143 * t173 - t180 * t92 - t181 * t93, t143 * t210 + t161 * t181 + t175 * t219 + t227 * t92, -t142 * t210 - t161 * t180 - t173 * t219 - t227 * t93, t161 * t227 + t210 * t219, -g(1) * t148 - g(2) * t150 + t109 * t142 + t118 * t173 + t129 * t93 + t161 * t412 + t62 * t180 + t210 * t373 + t54 * t219 + t227 * t406, g(1) * t522 - g(2) * t149 + t109 * t143 + t118 * t175 + t129 * t92 - t460 * t161 + t62 * t181 - t362 * t210 - t55 * t219 - t365 * t227, t138 * t78 + t145 * t45, -t136 * t78 - t138 * t77 - t144 * t45 - t145 * t46, t138 * t142 + t145 * t91 + t172 * t78 + t180 * t45, -t136 * t142 - t144 * t91 - t172 * t77 - t180 * t46, t142 * t172 + t180 * t91, -g(1) * t529 - g(2) * t101 + t37 * t136 + t30 * t142 + t17 * t144 + t342 * t172 + t7 * t180 + t421 * t91 + t59 * t46 + t47 * t77, g(1) * t530 - g(2) * t100 + t37 * t138 - t31 * t142 + t17 * t145 - t367 * t172 + t368 * t180 + t59 * t45 + t47 * t78 - t489 * t91, t13 * t88 - t24 * t378, -t13 * t87 - t24 * t80 + t25 * t378 + t341 * t88, t13 * t180 - t142 * t378 + t171 * t24 + t88 * t90, -t142 * t80 - t171 * t25 + t180 * t341 - t87 * t90, t142 * t171 + t180 * t90 (-qJD(6) * t379 - t326 * t9 + t330 * t8) * t171 + t380 * t90 + t2 * t180 + t10 * t142 + t19 * t80 - t40 * t341 + t12 * t87 + t39 * t25 - g(1) * t531 - g(2) * t99 -(qJD(6) * t380 + t326 * t8 + t330 * t9) * t171 - t379 * t90 - t1 * t180 - t11 * t142 - t19 * t378 + t40 * t13 + t12 * t88 + t39 * t24 + g(1) * t532 - g(2) * t98; 0, 0, 0 (-qJDD(1) * t325 + t322 * t417) * t324 (qJDD(1) * t322 + t325 * t417) * t324, -t334 * t502, -g(3) * t478 + qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t377 - t372) * t324, 0, 0, 0, 0, 0, t477 * t163 - t247 * t350 + (-t256 * t495 + t350 * t448 + t432 * t510) * t323, t477 * t162 - t248 * t350 + (-t220 * t432 + t329 * t256 + t350 * t426) * t323, 0, 0, 0, 0, 0, -t267 * t161 - t173 * t512 - t210 * t454 - t433 * t93, -t268 * t161 - t175 * t512 + t210 * t513 - t92 * t433, 0, 0, 0, 0, 0, t136 * t454 + t172 * t458 + t240 * t91 + t267 * t46, t138 * t454 + t172 * t457 + t267 * t45 + t357 * t91, 0, 0, 0, 0, 0 (t240 * t330 + t326 * t357) * t90 - t267 * t341 + t454 * t80 + (t326 * t382 - t330 * t383) * t171 -(t240 * t326 - t330 * t357) * t90 + t267 * t13 - t454 * t378 + (t326 * t383 + t330 * t382) * t171; 0, 0, 0, 0, 0, 0, 0, -t220 * t510, t220 ^ 2 - t510 ^ 2, t350 * t510 + t162, t220 * t439 + (t220 * t381 - t219) * qJD(1) - t358, -t256, -t132 * t350 - t169 * t220 + t360 + t369, -t131 * t350 - t169 * t510 + t349 + t359, t175 * t408 + t328 * t92 (t92 - t474) * t332 + (-t93 - t472) * t328, t161 * t328 - t175 * t220 + t210 * t408, t161 * t332 + t173 * t220 - t210 * t503, -t210 * t220, -pkin(3) * t93 + t127 * t210 - t132 * t173 - t54 * t220 + t363 * t328 + ((-t164 - t487) * t210 + t354) * t332, -pkin(3) * t92 + t459 * t210 + t55 * t220 - t132 * t175 + t363 * t332 + (t210 * t487 - t354) * t328, t518 * t138 + t45 * t462, t136 * t156 + t138 * t155 + (-t136 * t331 - t138 * t327) * t445 + (-t485 - t331 * t46 + (t136 * t327 - t138 * t331) * qJD(5)) * t328, -t332 * t45 + t384 * t172 + (t138 * t210 - t172 * t443 + t483) * t328, t332 * t46 + t515 * t172 + (-t136 * t210 - t172 * t442 - t484) * t328, t172 * t503 - t332 * t91, -t68 * t136 - t47 * t155 + t277 * t91 + t504 * t172 + ((-qJD(5) * t293 + t69) * t172 - t359) * t327 + (t47 * t327 * qJD(4) - t7 + (qJD(4) * t136 - t484) * pkin(10) - t343 * t331) * t332 + (pkin(10) * t46 + t17 * t327 + t210 * t30 + t442 * t47) * t328, -t451 * t91 - t68 * t138 - t47 * t156 + t499 * t172 - t359 * t331 + (-t368 + (pkin(10) * t138 + t331 * t47) * qJD(4) + t343 * t327) * t332 + (-t47 * t443 + t17 * t331 - t210 * t31 + (t172 * t446 + t45) * pkin(10)) * t328, -t13 * t261 - t378 * t482, -t13 * t260 - t261 * t341 + t378 * t481 - t482 * t80, -t13 * t332 + t171 * t482 - t261 * t90 - t378 * t503, -t171 * t481 - t260 * t90 - t332 * t341 - t503 * t80, t171 * t503 - t332 * t90 (t226 * t330 - t244 * t326) * t90 - t2 * t332 - t287 * t341 + t12 * t260 - g(1) * (-t186 * t470 + t187 * t316) - g(2) * (-t182 * t470 - t185 * t316) - g(3) * (-t227 * t470 + t228 * t316) + t480 * t80 + t481 * t39 + (t326 * t390 - t330 * t391) * t171 + t10 * t503 -(t226 * t326 + t244 * t330) * t90 + t1 * t332 + t287 * t13 - t12 * t261 - g(1) * (t186 * t471 + t187 * t317) - g(2) * (t182 * t471 - t185 * t317) - g(3) * (t227 * t471 + t228 * t317) - t480 * t378 + t482 * t39 + (t326 * t391 + t330 * t390) * t171 - t11 * t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175 * t173, -t173 ^ 2 + t175 ^ 2, t92 + t474, t472 - t93, t161, -t109 * t175 + t210 * t55 - t361 + t406, g(1) * t150 - g(2) * t148 + g(3) * t181 + t109 * t173 + t210 * t54 - t365, t138 * t407 + t485 (t45 - t476) * t331 + (-t46 - t475) * t327, -t138 * t175 + t172 * t407 + t484, -t172 ^ 2 * t327 + t136 * t175 + t483, -t172 * t175, -pkin(4) * t46 - t116 * t172 - t55 * t136 - t30 * t175 + (t54 * t172 + t366) * t327 - t339 * t331, -pkin(4) * t45 - t55 * t138 + t172 * t479 + t31 * t175 + t327 * t339 + t331 * t366, t13 * t279 + t378 * t456, -t13 * t278 + t279 * t341 + t378 * t455 + t456 * t80, -t171 * t456 + t175 * t378 + t279 * t90, -t171 * t455 + t175 * t80 - t278 * t90, -t171 * t175 (-t300 * t330 - t301 * t326) * t90 - t315 * t341 + t12 * t278 - t10 * t175 + t399 * t80 + t455 * t39 + (t326 * t389 - t330 * t388) * t171 - t361 * t317 -(-t300 * t326 + t301 * t330) * t90 + t315 * t13 + t12 * t279 + t11 * t175 - t399 * t378 - t456 * t39 + (t326 * t388 + t330 * t389) * t171 + t361 * t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138 * t136, -t136 ^ 2 + t138 ^ 2, t45 + t476, -t46 + t475, t91, -g(1) * t100 - g(2) * t530 + g(3) * t144 - t47 * t138 + t31 * t172 + t7, g(1) * t101 - g(2) * t529 + g(3) * t145 + t47 * t136 + t30 * t172 + t368, -t517, t509, t508, t505, t90 -(-t21 * t326 - t486) * t171 + (-t138 * t80 - t171 * t441 + t330 * t90) * pkin(5) + t506 (-t171 * t22 - t4) * t326 + (t171 * t21 - t423) * t330 + (t138 * t378 - t171 * t440 - t326 * t90) * pkin(5) + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, t509, t508, t505, t90, t11 * t171 + t506, t10 * t171 - t497 + t507;];
tau_reg  = t3;
