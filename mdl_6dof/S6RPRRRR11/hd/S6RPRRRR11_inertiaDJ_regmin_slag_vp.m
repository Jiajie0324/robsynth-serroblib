% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR11_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR11_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR11_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR11_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:46:05
% EndTime: 2019-03-09 07:46:21
% DurationCPUTime: 5.52s
% Computational Cost: add. (10457->396), mult. (30814->728), div. (0->0), fcn. (33518->14), ass. (0->200)
t157 = sin(pkin(13));
t159 = sin(pkin(6));
t161 = cos(pkin(7));
t162 = cos(pkin(6));
t170 = cos(qJ(3));
t160 = cos(pkin(13));
t166 = sin(qJ(3));
t246 = t160 * t166;
t158 = sin(pkin(7));
t249 = t158 * t166;
t100 = t162 * t249 + (t157 * t170 + t161 * t246) * t159;
t93 = t100 * qJD(3);
t269 = -0.2e1 * t93;
t245 = t161 * t170;
t248 = t158 * t170;
t268 = (-t157 * t166 + t160 * t245) * t159 + t162 * t248;
t165 = sin(qJ(4));
t267 = -0.4e1 * t165;
t163 = sin(qJ(6));
t164 = sin(qJ(5));
t167 = cos(qJ(6));
t168 = cos(qJ(5));
t131 = t163 * t168 + t164 * t167;
t118 = t131 * t165;
t169 = cos(qJ(4));
t189 = -pkin(4) * t169 - pkin(11) * t165;
t136 = -pkin(3) + t189;
t238 = t168 * t169;
t148 = pkin(10) * t238;
t116 = t164 * t136 + t148;
t227 = qJD(4) * t169;
t207 = t168 * t227;
t225 = qJD(5) * t164;
t266 = -t165 * t225 + t207;
t155 = t168 ^ 2;
t234 = t164 ^ 2 - t155;
t195 = t234 * qJD(5);
t264 = qJD(5) + qJD(6);
t223 = qJD(5) * t169;
t205 = t164 * t223;
t228 = qJD(4) * t168;
t174 = t165 * t228 + t205;
t188 = pkin(4) * t165 - pkin(11) * t169;
t177 = t188 * qJD(4);
t224 = qJD(5) * t168;
t86 = pkin(10) * t174 - t136 * t224 - t164 * t177;
t92 = t268 * qJD(3);
t263 = 0.2e1 * t92;
t262 = pkin(11) + pkin(12);
t247 = t159 * t160;
t196 = -t158 * t247 + t161 * t162;
t84 = t100 * t165 - t196 * t169;
t261 = pkin(5) * t84;
t260 = pkin(1) * t162;
t259 = pkin(5) * t167;
t258 = pkin(10) * t164;
t147 = t160 * t260;
t251 = t157 * t159;
t101 = t162 * pkin(2) + t147 + (-pkin(9) * t161 - qJ(2)) * t251;
t113 = (-pkin(9) * t157 * t158 - pkin(2) * t160 - pkin(1)) * t159;
t79 = -t101 * t158 + t161 * t113;
t53 = -pkin(3) * t268 - pkin(10) * t100 + t79;
t253 = t101 * t161;
t186 = t113 * t158 + t253;
t235 = qJ(2) * t247 + t157 * t260;
t95 = (t158 * t162 + t161 * t247) * pkin(9) + t235;
t172 = t166 * t186 + t170 * t95;
t58 = t196 * pkin(10) + t172;
t257 = t165 * t53 + t169 * t58;
t30 = -pkin(11) * t268 + t257;
t57 = -t196 * pkin(3) + t166 * t95 - t186 * t170;
t85 = t100 * t169 + t196 * t165;
t35 = t84 * pkin(4) - t85 * pkin(11) + t57;
t19 = t164 * t35 + t168 * t30;
t62 = t164 * t85 + t168 * t268;
t17 = -pkin(12) * t62 + t19;
t256 = t167 * t17;
t61 = -qJD(4) * t84 + t92 * t169;
t37 = -qJD(5) * t62 + t93 * t164 + t61 * t168;
t255 = t37 * t164;
t254 = t37 * t168;
t141 = t262 * t164;
t252 = t141 * t163;
t243 = t164 * t165;
t241 = t165 * t168;
t109 = -pkin(12) * t243 + t116;
t240 = t167 * t109;
t239 = t167 * t168;
t151 = qJD(4) * t165;
t208 = t164 * t151;
t236 = pkin(10) * t208 + t168 * t177;
t154 = t165 ^ 2;
t233 = -t169 ^ 2 + t154;
t232 = qJD(2) * t159;
t231 = qJD(3) * t166;
t230 = qJD(3) * t170;
t229 = qJD(4) * t164;
t226 = qJD(4) * t170;
t222 = qJD(6) * t163;
t221 = qJD(6) * t167;
t220 = -0.2e1 * pkin(3) * qJD(4);
t219 = -0.2e1 * pkin(4) * qJD(5);
t218 = t169 * t258;
t217 = pkin(5) * t225;
t216 = pkin(10) * t227;
t215 = pkin(5) * t222;
t214 = pkin(5) * t221;
t60 = qJD(4) * t85 + t92 * t165;
t49 = (t157 * t245 + t246) * t232 + t172 * qJD(3);
t171 = t60 * pkin(4) - t61 * pkin(11) + t49;
t202 = t158 * t230;
t209 = t157 * t232;
t48 = -t113 * t202 - t170 * t160 * t232 - t230 * t253 + (qJD(3) * t95 + t161 * t209) * t166;
t191 = t158 * t209;
t65 = pkin(3) * t93 - pkin(10) * t92 + t191;
t23 = t58 * t151 - t165 * t65 + t169 * t48 - t53 * t227;
t21 = pkin(11) * t93 - t23;
t9 = -t19 * qJD(5) - t164 * t21 + t168 * t171;
t5 = t60 * pkin(5) - t37 * pkin(12) + t9;
t63 = -t164 * t268 + t168 * t85;
t36 = qJD(5) * t63 + t61 * t164 - t93 * t168;
t8 = -t164 * t171 - t168 * t21 - t35 * t224 + t30 * t225;
t7 = -pkin(12) * t36 - t8;
t211 = -t163 * t7 + t167 * t5;
t204 = t168 * t223;
t203 = t158 * t231;
t201 = t164 * t227;
t200 = t164 * t224;
t199 = t165 * t227;
t72 = (pkin(5) * t165 - pkin(12) * t238) * qJD(4) + (-t148 + (pkin(12) * t165 - t136) * t164) * qJD(5) + t236;
t173 = t165 * t224 + t201;
t78 = -pkin(12) * t173 - t86;
t198 = -t163 * t78 + t167 * t72;
t18 = -t164 * t30 + t168 * t35;
t197 = -t165 * t58 + t169 * t53;
t194 = t233 * qJD(4);
t193 = -0.2e1 * t162 * t232;
t192 = 0.2e1 * t199;
t190 = t168 * t201;
t14 = -pkin(12) * t63 + t18 + t261;
t11 = t14 * t163 + t256;
t42 = t163 * t63 + t167 * t62;
t43 = -t163 * t62 + t167 * t63;
t187 = -t164 * t63 - t168 * t62;
t129 = t168 * t136;
t98 = -pkin(12) * t241 + t129 + (-pkin(5) - t258) * t169;
t74 = t163 * t98 + t240;
t24 = -t53 * t151 + t165 * t48 + t169 * t65 - t58 * t227;
t121 = t161 * t165 + t169 * t249;
t178 = -t168 * t121 + t164 * t248;
t179 = t164 * t121 + t168 * t248;
t77 = -t163 * t179 - t167 * t178;
t142 = t262 * t168;
t112 = t142 * t167 - t252;
t130 = t163 * t164 - t239;
t29 = pkin(4) * t268 - t197;
t1 = -t14 * t221 - t163 * t5 - t167 * t7 + t17 * t222;
t185 = t165 * t93 - t227 * t268;
t184 = -t151 * t268 - t169 * t93;
t22 = -pkin(4) * t93 - t24;
t183 = t22 * t164 + t29 * t224;
t182 = -t22 * t168 + t29 * t225;
t181 = t164 * t60 + t84 * t224;
t180 = -t168 * t60 + t84 * t225;
t120 = -t161 * t169 + t165 * t249;
t106 = qJD(4) * t121 + t165 * t202;
t176 = t106 * t164 + t120 * t224;
t175 = -t106 * t168 + t120 * t225;
t40 = t109 * t222 - t163 * t72 - t167 * t78 - t98 * t221;
t150 = -pkin(5) * t168 - pkin(4);
t144 = -0.2e1 * t199;
t133 = (pkin(5) * t164 + pkin(10)) * t165;
t119 = t130 * t165;
t115 = t129 - t218;
t114 = pkin(5) * t173 + t216;
t111 = -t141 * t167 - t142 * t163;
t105 = qJD(4) * t120 - t169 * t202;
t104 = t264 * t131;
t103 = t264 * t130;
t87 = -t116 * qJD(5) + t236;
t83 = -t112 * qJD(6) + (-t262 * t239 + t252) * qJD(5);
t82 = t131 * qJD(5) * t262 + t141 * t221 + t142 * t222;
t81 = -t222 * t243 + (t264 * t241 + t201) * t167 + t266 * t163;
t80 = -t264 * t118 - t130 * t227;
t76 = t163 * t178 - t167 * t179;
t73 = -t109 * t163 + t167 * t98;
t69 = qJD(5) * t178 + t164 * t105 + t168 * t203;
t68 = qJD(5) * t179 + t168 * t105 - t164 * t203;
t45 = 0.2e1 * t84 * t60;
t44 = t84 * t151 - t169 * t60;
t41 = -qJD(6) * t74 + t198;
t39 = -qJD(6) * t77 + t163 * t68 + t167 * t69;
t38 = -t163 * t69 + t167 * t68 - t178 * t222 + t179 * t221;
t25 = pkin(5) * t62 + t29;
t16 = t43 * qJD(6) + t163 * t37 + t167 * t36;
t15 = -t42 * qJD(6) - t163 * t36 + t167 * t37;
t12 = pkin(5) * t36 + t22;
t10 = t14 * t167 - t163 * t17;
t2 = -t11 * qJD(6) + t211;
t3 = [0, 0, 0, t157 * t193, t160 * t193, 0.2e1 * (t157 ^ 2 + t160 ^ 2) * t159 ^ 2 * qJD(2), 0.2e1 * (t235 * t160 + (qJ(2) * t251 - t147) * t157) * t232, t100 * t263, -0.2e1 * t100 * t93 + 0.2e1 * t268 * t92, t196 * t263, t196 * t269, 0, -0.2e1 * t191 * t268 - 0.2e1 * t196 * t49 + 0.2e1 * t79 * t93, 0.2e1 * t100 * t191 + 0.2e1 * t196 * t48 + 0.2e1 * t79 * t92, 0.2e1 * t85 * t61, -0.2e1 * t60 * t85 - 0.2e1 * t61 * t84, -0.2e1 * t268 * t61 + 0.2e1 * t85 * t93, 0.2e1 * t268 * t60 - 0.2e1 * t84 * t93, t268 * t269, 0.2e1 * t197 * t93 - 0.2e1 * t24 * t268 + 0.2e1 * t49 * t84 + 0.2e1 * t57 * t60, -0.2e1 * t23 * t268 - 0.2e1 * t257 * t93 + 0.2e1 * t49 * t85 + 0.2e1 * t57 * t61, 0.2e1 * t63 * t37, -0.2e1 * t36 * t63 - 0.2e1 * t37 * t62, 0.2e1 * t37 * t84 + 0.2e1 * t60 * t63, -0.2e1 * t36 * t84 - 0.2e1 * t60 * t62, t45, 0.2e1 * t18 * t60 + 0.2e1 * t22 * t62 + 0.2e1 * t29 * t36 + 0.2e1 * t84 * t9, -0.2e1 * t19 * t60 + 0.2e1 * t22 * t63 + 0.2e1 * t29 * t37 + 0.2e1 * t8 * t84, 0.2e1 * t43 * t15, -0.2e1 * t15 * t42 - 0.2e1 * t16 * t43, 0.2e1 * t15 * t84 + 0.2e1 * t43 * t60, -0.2e1 * t16 * t84 - 0.2e1 * t42 * t60, t45, 0.2e1 * t10 * t60 + 0.2e1 * t12 * t42 + 0.2e1 * t16 * t25 + 0.2e1 * t2 * t84, 0.2e1 * t1 * t84 - 0.2e1 * t11 * t60 + 0.2e1 * t12 * t43 + 0.2e1 * t15 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161 * t93 - t196 * t203, t161 * t92 - t196 * t202, 0, 0, 0, 0, 0, t106 * t268 - t120 * t93 + (-t170 * t60 + t84 * t231) * t158, -t105 * t268 - t121 * t93 + (-t170 * t61 + t85 * t231) * t158, 0, 0, 0, 0, 0, t106 * t62 + t120 * t36 - t179 * t60 + t69 * t84, t106 * t63 + t120 * t37 + t178 * t60 + t68 * t84, 0, 0, 0, 0, 0, t106 * t42 + t120 * t16 + t39 * t84 + t60 * t76, t106 * t43 + t120 * t15 + t38 * t84 - t60 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t93, 0, -t49, t48, t165 * t61 + t85 * t227, -t165 * t60 + t61 * t169 + (-t165 * t85 - t169 * t84) * qJD(4), t185, -t184, 0, -pkin(3) * t60 - pkin(10) * t185 + t57 * t151 - t49 * t169, -pkin(3) * t61 + pkin(10) * t184 + t49 * t165 + t57 * t227, t63 * t207 + (-t63 * t225 + t254) * t165, t187 * t227 + (-t255 - t168 * t36 + (t164 * t62 - t168 * t63) * qJD(5)) * t165 (t228 * t84 - t37) * t169 + (qJD(4) * t63 - t180) * t165 (-t229 * t84 + t36) * t169 + (-qJD(4) * t62 - t181) * t165, t44, t115 * t60 + t84 * t87 + (-t9 + (pkin(10) * t62 + t164 * t29) * qJD(4)) * t169 + (pkin(10) * t36 + qJD(4) * t18 + t183) * t165, -t116 * t60 + t84 * t86 + (-t8 + (pkin(10) * t63 + t168 * t29) * qJD(4)) * t169 + (pkin(10) * t37 - qJD(4) * t19 - t182) * t165, -t119 * t15 + t43 * t80, -t118 * t15 + t119 * t16 - t42 * t80 - t43 * t81, -t119 * t60 - t15 * t169 + t151 * t43 + t80 * t84, -t118 * t60 - t151 * t42 + t16 * t169 - t81 * t84, t44, t10 * t151 + t114 * t42 + t118 * t12 + t133 * t16 - t169 * t2 + t25 * t81 + t41 * t84 + t60 * t73, -t1 * t169 - t11 * t151 + t114 * t43 - t119 * t12 + t133 * t15 + t25 * t80 + t40 * t84 - t60 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t202, 0, 0, 0, 0, 0 (-t165 * t226 - t169 * t231) * t158 (t165 * t231 - t169 * t226) * t158, 0, 0, 0, 0, 0 (t120 * t229 - t69) * t169 + (-qJD(4) * t179 + t176) * t165 (t120 * t228 - t68) * t169 + (qJD(4) * t178 - t175) * t165, 0, 0, 0, 0, 0, t106 * t118 + t120 * t81 + t151 * t76 - t169 * t39, -t106 * t119 + t120 * t80 - t151 * t77 - t169 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, -0.2e1 * t194, 0, 0, 0, t165 * t220, t169 * t220, -0.2e1 * t154 * t200 + 0.2e1 * t155 * t199, 0.2e1 * t154 * t195 + t190 * t267, 0.2e1 * t165 * t205 + 0.2e1 * t228 * t233, -0.2e1 * t164 * t194 + 0.2e1 * t165 * t204, t144, 0.2e1 * t115 * t151 - 0.2e1 * t87 * t169 + 0.2e1 * (t154 * t224 + t164 * t192) * pkin(10), -0.2e1 * t116 * t151 - 0.2e1 * t86 * t169 + 0.2e1 * (-t154 * t225 + t168 * t192) * pkin(10), -0.2e1 * t119 * t80, -0.2e1 * t118 * t80 + 0.2e1 * t119 * t81, -0.2e1 * t119 * t151 - 0.2e1 * t169 * t80, -0.2e1 * t118 * t151 + 0.2e1 * t169 * t81, t144, 0.2e1 * t114 * t118 + 0.2e1 * t133 * t81 + 0.2e1 * t151 * t73 - 0.2e1 * t169 * t41, -0.2e1 * t114 * t119 + 0.2e1 * t133 * t80 - 0.2e1 * t151 * t74 - 0.2e1 * t169 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t60, t93, t24, t23, t224 * t63 + t255, qJD(5) * t187 - t164 * t36 + t254, t181, -t180, 0, -pkin(4) * t36 - pkin(11) * t181 + t182, -pkin(4) * t37 + pkin(11) * t180 + t183, -t103 * t43 + t131 * t15, t103 * t42 - t104 * t43 - t130 * t15 - t131 * t16, -t103 * t84 + t131 * t60, -t104 * t84 - t130 * t60, 0, t104 * t25 + t111 * t60 + t12 * t130 + t150 * t16 + t217 * t42 + t83 * t84, -t103 * t25 - t112 * t60 + t12 * t131 + t15 * t150 + t217 * t43 + t82 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, t105, 0, 0, 0, 0, 0, t175, t176, 0, 0, 0, 0, 0, t104 * t120 + t106 * t130, -t103 * t120 + t106 * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227, -t151, 0, -t216, pkin(10) * t151, -t165 * t195 + t190, t200 * t267 - t227 * t234, -t204 + t208, t174, 0 (pkin(11) * t238 + (-pkin(4) * t168 + t258) * t165) * qJD(5) + (t164 * t189 - t148) * qJD(4) (pkin(10) * t241 + t164 * t188) * qJD(5) + (t168 * t189 + t218) * qJD(4), t103 * t119 + t131 * t80, t103 * t118 + t104 * t119 - t130 * t80 - t131 * t81, t103 * t169 + t131 * t151, t104 * t169 - t130 * t151, 0, t104 * t133 + t111 * t151 + t114 * t130 + t118 * t217 + t150 * t81 - t169 * t83, -t103 * t133 - t112 * t151 + t114 * t131 - t119 * t217 + t150 * t80 - t169 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t200, -0.2e1 * t195, 0, 0, 0, t164 * t219, t168 * t219, -0.2e1 * t131 * t103, 0.2e1 * t103 * t130 - 0.2e1 * t104 * t131, 0, 0, 0, 0.2e1 * t104 * t150 + 0.2e1 * t130 * t217, -0.2e1 * t103 * t150 + 0.2e1 * t131 * t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t36, t60, t9, t8, 0, 0, t15, -t16, t60, t60 * t259 + (-t256 + (-t14 - t261) * t163) * qJD(6) + t211 (-t163 * t60 - t221 * t84) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t68, 0, 0, 0, 0, 0, t39, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, -t173, t151, t87, t86, 0, 0, t80, -t81, t151, t151 * t259 + (-t240 + (pkin(5) * t169 - t98) * t163) * qJD(6) + t198 (-t151 * t163 + t169 * t221) * pkin(5) + t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, -t225, 0, -pkin(11) * t224, pkin(11) * t225, 0, 0, -t103, -t104, 0, t83, t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t215, -0.2e1 * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, -t16, t60, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, -t81, t151, t41, t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, -t104, 0, t83, t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
