% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:46:15
% EndTime: 2019-03-09 07:47:05
% DurationCPUTime: 29.16s
% Computational Cost: add. (56807->954), mult. (179949->1294), div. (0->0), fcn. (156054->18), ass. (0->388)
t393 = sin(qJ(3));
t386 = sin(pkin(13));
t387 = sin(pkin(6));
t558 = t386 * t387;
t507 = qJD(1) * t558;
t389 = cos(pkin(6));
t571 = cos(pkin(7));
t593 = cos(qJ(3));
t473 = t571 * t593;
t388 = cos(pkin(13));
t557 = t387 * t388;
t442 = t473 * t557;
t570 = sin(pkin(7));
t472 = t570 * t593;
t616 = -t389 * t472 - t442;
t619 = t616 * qJD(1);
t264 = t393 * t507 + t619;
t258 = qJD(4) + t264;
t495 = t393 * t571;
t419 = t387 * (-t386 * t495 + t593 * t388);
t297 = qJD(1) * t419;
t452 = qJD(3) * t472;
t645 = t297 - t452;
t591 = sin(qJ(1));
t508 = t591 * t388;
t594 = cos(qJ(1));
t511 = t594 * t386;
t314 = t389 * t511 + t508;
t375 = t591 * t386;
t510 = t594 * t388;
t451 = -t389 * t510 + t375;
t497 = t387 * t570;
t634 = t451 * t571 + t594 * t497;
t233 = -t314 * t593 + t393 * t634;
t392 = sin(qJ(4));
t395 = cos(qJ(4));
t498 = t387 * t571;
t617 = t451 * t570 - t594 * t498;
t186 = t233 * t395 - t392 * t617;
t230 = t314 * t393 + t593 * t634;
t385 = qJ(5) + qJ(6);
t379 = sin(t385);
t380 = cos(t385);
t644 = t186 * t379 + t230 * t380;
t643 = t186 * t380 - t230 * t379;
t391 = sin(qJ(5));
t394 = cos(qJ(5));
t642 = t186 * t391 + t230 * t394;
t641 = t186 * t394 - t230 * t391;
t300 = (-t570 * pkin(9) * t386 - pkin(2) * t388 - pkin(1)) * t387;
t287 = qJD(1) * t300 + qJD(2);
t590 = pkin(1) * t389;
t520 = qJD(1) * t590;
t363 = t388 * t520;
t420 = t389 * pkin(2) + (-t571 * pkin(9) - qJ(2)) * t558;
t259 = qJD(1) * t420 + t363;
t493 = t571 * t259;
t366 = qJ(2) * t557;
t309 = qJD(1) * t366 + t386 * t520;
t490 = t570 * t389;
t417 = (t388 * t498 + t490) * pkin(9);
t252 = qJD(1) * t417 + t309;
t509 = t593 * t252;
t166 = t509 + (t570 * t287 + t493) * t393;
t640 = -t166 + t258 * (pkin(4) * t392 - pkin(11) * t395);
t475 = t388 * t495;
t476 = t393 * t490;
t278 = t387 * (t593 * t386 + t475) + t476;
t268 = t278 * qJD(1);
t552 = t391 * t395;
t193 = -t264 * t552 - t394 * t268;
t533 = qJD(4) * t395;
t621 = -t391 * t533 + t193;
t531 = qJD(5) * t394;
t635 = -t392 * t531 + t621;
t494 = t393 * t570;
t318 = t392 * t494 - t395 * t571;
t489 = qJD(1) * t570;
t471 = t387 * t489;
t455 = t386 * t471;
t541 = qJD(4) * t318 + t392 * t455 + t395 * t645;
t418 = t387 * (t386 * t473 + t388 * t393);
t296 = qJD(1) * t418;
t470 = qJD(3) * t494;
t449 = t470 - t296;
t633 = t233 * t392 + t395 * t617;
t601 = -pkin(4) * t395 - pkin(11) * t392;
t350 = -pkin(3) + t601;
t532 = qJD(5) * t391;
t534 = qJD(4) * t392;
t459 = t259 * t473;
t165 = -t393 * t252 + t287 * t472 + t459;
t200 = pkin(3) * t268 + pkin(10) * t264;
t118 = t395 * t165 + t392 * t200;
t94 = pkin(11) * t268 + t118;
t574 = -t394 * t94 + t350 * t531 + (-t394 * t534 - t395 * t532) * pkin(10) + t640 * t391;
t587 = pkin(10) * t391;
t632 = t391 * t94 + t640 * t394 + t534 * t587;
t550 = t394 * t395;
t194 = -t264 * t550 + t268 * t391;
t374 = pkin(10) * t550;
t588 = pkin(5) * t392;
t629 = pkin(12) * t194 + t264 * t588 + (-pkin(12) * t550 + t588) * qJD(4) + (-t374 + (pkin(12) * t392 - t350) * t391) * qJD(5) + t632;
t628 = pkin(12) * t635 + t574;
t396 = -pkin(12) - pkin(11);
t514 = qJD(5) * t396;
t496 = t389 * t571;
t529 = -t388 * t471 + qJD(3);
t433 = -qJD(1) * t496 - t529;
t487 = t392 * t268 + t395 * t433;
t564 = t487 * t391;
t217 = t395 * t268 - t392 * t433;
t155 = pkin(4) * t217 + pkin(11) * t487;
t205 = -t570 * t259 + t571 * t287;
t141 = t264 * pkin(3) - t268 * pkin(10) + t205;
t144 = -pkin(10) * t433 + t166;
t75 = t141 * t395 - t392 * t144;
t61 = t391 * t155 + t394 * t75;
t627 = -pkin(12) * t564 + t391 * t514 - t61;
t60 = t394 * t155 - t391 * t75;
t626 = -pkin(5) * t217 - t60 + (-pkin(12) * t487 + t514) * t394;
t170 = t391 * t217 - t258 * t394;
t172 = t217 * t394 + t258 * t391;
t390 = sin(qJ(6));
t592 = cos(qJ(6));
t107 = t592 * t170 + t172 * t390;
t446 = -t390 * t170 + t592 * t172;
t569 = t107 * t446;
t599 = qJD(5) + t487;
t625 = t170 * t599;
t624 = t172 * t599;
t503 = t592 * qJD(6);
t623 = t394 * (t592 * qJD(5) + t503);
t319 = t392 * t571 + t395 * t494;
t288 = -t391 * t319 - t394 * t472;
t545 = -qJD(5) * t288 - t391 * t449 + t394 * t541;
t424 = -t394 * t319 + t391 * t472;
t544 = qJD(5) * t424 + t391 * t541 + t394 * t449;
t428 = t389 * t508 + t511;
t618 = t428 * t570 + t591 * t498;
t465 = t394 * t533 - t194;
t615 = -t392 * t532 + t465;
t421 = t388 * t497 - t496;
t614 = -t107 ^ 2 + t446 ^ 2;
t76 = t141 * t392 + t144 * t395;
t69 = pkin(11) * t258 + t76;
t143 = pkin(3) * t433 - t165;
t86 = pkin(4) * t487 - t217 * pkin(11) + t143;
t45 = t391 * t86 + t394 * t69;
t267 = t278 * qJD(3);
t525 = qJDD(1) * t387;
t501 = t386 * t525;
t435 = qJDD(1) * t616 + t393 * t501;
t199 = qJD(1) * t267 + t435;
t197 = qJDD(4) + t199;
t523 = qJDD(1) * t389;
t518 = pkin(1) * t523;
t361 = t388 * t518;
t527 = qJD(1) * qJD(2);
t502 = t387 * t527;
t479 = t386 * t502;
t243 = qJDD(1) * t420 + t361 - t479;
t283 = qJDD(1) * t300 + qJDD(2);
t192 = -t570 * t243 + t571 * t283;
t517 = t393 * t558;
t481 = qJD(3) * t517;
t198 = qJD(1) * t481 + qJD(3) * t619 - qJDD(1) * t476 - t475 * t525 - t593 * t501;
t103 = t199 * pkin(3) + t198 * pkin(10) + t192;
t291 = qJDD(1) * t366 + t386 * t518 + t388 * t502;
t240 = qJDD(1) * t417 + t291;
t536 = qJD(3) * t393;
t422 = -qJD(3) * t459 - t593 * t240 - t243 * t495 + t252 * t536 - t283 * t494 - t287 * t452;
t431 = qJDD(1) * t421 - qJDD(3);
t82 = -pkin(10) * t431 - t422;
t30 = t392 * t103 + t141 * t533 - t144 * t534 + t395 * t82;
t28 = pkin(11) * t197 + t30;
t600 = qJD(4) * t487;
t126 = t395 * t198 + t392 * t431 + t600;
t535 = qJD(4) * t217;
t127 = -t392 * t198 + t395 * t431 + t535;
t450 = qJD(3) * t509 + t393 * t240 - t243 * t473 - t283 * t472 + t287 * t470 + t493 * t536;
t83 = pkin(3) * t431 + t450;
t42 = t127 * pkin(4) + t126 * pkin(11) + t83;
t9 = -qJD(5) * t45 - t391 * t28 + t394 * t42;
t613 = -t599 * t45 - t9;
t209 = qJD(6) + t599;
t516 = -t391 * t126 + t217 * t531 + t258 * t532;
t453 = t394 * t197 - t516;
t530 = qJD(6) * t390;
t67 = t394 * t126 - t391 * t197 + t217 * t532 - t258 * t531;
t25 = t170 * t503 + t172 * t530 - t390 * t453 + t592 * t67;
t612 = t107 * t209 - t25;
t44 = -t391 * t69 + t394 * t86;
t35 = -pkin(12) * t172 + t44;
t32 = pkin(5) * t599 + t35;
t36 = -pkin(12) * t170 + t45;
t125 = qJDD(5) + t127;
t6 = pkin(5) * t125 + pkin(12) * t67 + t9;
t447 = -t394 * t28 - t391 * t42 - t86 * t531 + t532 * t69;
t7 = pkin(12) * t453 - t447;
t1 = t32 * t503 - t36 * t530 + t390 * t6 + t592 * t7;
t315 = -t375 * t389 + t510;
t603 = t428 * t571 - t591 * t497;
t235 = t315 * t593 - t393 * t603;
t188 = t235 * t395 + t392 * t618;
t234 = t315 * t393 + t593 * t603;
t133 = t188 * t380 + t234 * t379;
t229 = t278 * t395 - t392 * t421;
t277 = t517 + t616;
t68 = -pkin(4) * t258 - t75;
t59 = pkin(5) * t170 + t68;
t611 = t59 * t107 + g(1) * t133 - g(2) * t643 - g(3) * (-t229 * t380 - t277 * t379) - t1;
t610 = -t44 * t599 - t447;
t317 = t386 * t590 + t366;
t270 = t417 + t317;
t370 = t388 * t590;
t279 = t370 + t420;
t174 = t593 * t270 + (t571 * t279 + t570 * t300) * t393;
t608 = -t258 * t75 + t30;
t31 = t395 * t103 - t141 * t534 - t144 * t533 - t392 * t82;
t607 = -t258 * t76 - t31;
t606 = t258 * t392;
t382 = t386 ^ 2;
t383 = t387 ^ 2;
t384 = t388 ^ 2;
t605 = t383 * (t382 + t384);
t173 = -t393 * t270 + t279 * t473 + t300 * t472;
t306 = t391 * t350 + t374;
t598 = qJD(5) + qJD(6);
t136 = -t188 * t391 + t234 * t394;
t181 = t229 * t391 - t277 * t394;
t597 = -g(1) * t136 - g(2) * t642 + g(3) * t181;
t132 = -t188 * t379 + t234 * t380;
t519 = t592 * t36;
t13 = t390 * t32 + t519;
t2 = -qJD(6) * t13 - t390 * t7 + t592 * t6;
t596 = -t59 * t446 - g(1) * t132 - g(2) * t644 - g(3) * (-t229 * t379 + t277 * t380) + t2;
t26 = qJD(6) * t446 - t390 * t67 - t592 * t453;
t595 = t209 * t446 - t26;
t583 = t197 * pkin(4);
t163 = pkin(3) * t421 - t173;
t228 = t278 * t392 + t395 * t421;
t102 = t228 * pkin(4) - t229 * pkin(11) + t163;
t219 = -t570 * t279 + t571 * t300;
t274 = t277 * pkin(3);
t157 = -t278 * pkin(10) + t219 + t274;
t164 = -pkin(10) * t421 + t174;
t90 = t392 * t157 + t395 * t164;
t81 = pkin(11) * t277 + t90;
t49 = t391 * t102 + t394 * t81;
t580 = t390 * t36;
t579 = t67 * t391;
t330 = t394 * t350;
t551 = t392 * t394;
t276 = -pkin(12) * t551 + t330 + (-pkin(5) - t587) * t395;
t553 = t391 * t392;
t292 = -pkin(12) * t553 + t306;
t210 = t592 * t276 - t390 * t292;
t578 = t210 * qJD(6) + t390 * t629 + t628 * t592;
t211 = t390 * t276 + t592 * t292;
t577 = -t211 * qJD(6) - t628 * t390 + t592 * t629;
t358 = t396 * t391;
t359 = t396 * t394;
t294 = t592 * t358 + t390 * t359;
t576 = t294 * qJD(6) + t390 * t626 + t592 * t627;
t295 = t390 * t358 - t592 * t359;
t575 = -t295 * qJD(6) - t390 * t627 + t592 * t626;
t573 = -qJD(5) * t306 + t632;
t117 = -t392 * t165 + t200 * t395;
t93 = -pkin(4) * t268 - t117;
t572 = -pkin(5) * t635 + pkin(10) * t533 - t93;
t568 = t125 * t394;
t567 = t170 * t391;
t566 = t172 * t170;
t565 = t487 * t258;
t563 = t217 * t487;
t562 = t217 * t258;
t561 = t268 * t264;
t560 = t379 * t395;
t559 = t380 * t395;
t397 = qJD(1) ^ 2;
t556 = t389 * t397;
t555 = t390 * t391;
t554 = t391 * t125;
t213 = t592 * t288 + t390 * t424;
t549 = t213 * qJD(6) + t390 * t544 - t545 * t592;
t214 = t390 * t288 - t424 * t592;
t548 = -t214 * qJD(6) + t390 * t545 + t544 * t592;
t332 = t390 * t394 + t592 * t391;
t281 = t598 * t332;
t547 = -t332 * t487 - t281;
t445 = t592 * t394 - t555;
t546 = -t445 * t487 + t555 * t598 - t623;
t480 = t592 * t533;
t543 = -t592 * t194 - t281 * t392 + t390 * t621 + t394 * t480;
t542 = -t592 * t193 + t390 * t615 + t391 * t480 + t392 * t623 - t530 * t553;
t540 = qJD(4) * t319 - t392 * t645 + t395 * t455;
t512 = t387 * t591;
t538 = t594 * pkin(1) + qJ(2) * t512;
t526 = qJDD(1) * t383;
t524 = qJDD(1) * t388;
t522 = g(1) * t591;
t521 = g(2) * t594;
t515 = pkin(5) * t391 + pkin(10);
t513 = t387 * t594;
t500 = g(2) * t513 - g(3) * t389;
t48 = t394 * t102 - t391 * t81;
t89 = t157 * t395 - t392 * t164;
t484 = t258 * t395;
t483 = t599 * t394;
t482 = 0.2e1 * t387 * t523;
t478 = -t76 + (t532 + t564) * pkin(5);
t474 = -t591 * pkin(1) + qJ(2) * t513;
t187 = t235 * t392 - t395 * t618;
t468 = -g(1) * t633 - g(2) * t187;
t467 = -g(1) * t230 + g(2) * t234;
t464 = -t391 * t45 - t394 * t44;
t182 = t229 * t394 + t277 * t391;
t463 = (-qJ(2) * t507 + t363) * t386 - t309 * t388;
t378 = pkin(5) * t394 + pkin(4);
t462 = -t378 * t395 + t392 * t396;
t454 = t386 * qJD(2) * t497;
t151 = qJD(2) * t419 + qJD(3) * t173;
t266 = -qJD(3) * t442 - t389 * t452 + t481;
t190 = t267 * pkin(3) + t266 * pkin(10) + t454;
t56 = -t392 * t151 - t157 * t534 - t164 * t533 + t190 * t395;
t80 = -pkin(4) * t277 - t89;
t37 = pkin(5) * t228 - pkin(12) * t182 + t48;
t43 = -pkin(12) * t181 + t49;
t18 = t592 * t37 - t390 * t43;
t19 = t390 * t37 + t592 * t43;
t29 = -t31 - t583;
t364 = -pkin(1) * t525 + qJDD(2);
t448 = pkin(1) * t526 - t364 * t387;
t55 = t395 * t151 + t157 * t533 - t164 * t534 + t392 * t190;
t52 = pkin(11) * t267 + t55;
t152 = qJD(2) * t418 + qJD(3) * t174;
t179 = qJD(4) * t229 - t266 * t392;
t180 = -qJD(4) * t228 - t266 * t395;
t72 = t179 * pkin(4) - t180 * pkin(11) + t152;
t16 = t102 * t531 + t391 * t72 + t394 * t52 - t532 * t81;
t121 = -t390 * t181 + t592 * t182;
t443 = -pkin(11) * t125 + t599 * t68;
t441 = -pkin(10) * t197 + t143 * t258;
t440 = g(1) * t594 + g(2) * t591;
t439 = g(1) * t187 - g(2) * t633 + g(3) * t228;
t438 = -g(1) * t188 + g(2) * t186 - g(3) * t229;
t437 = g(1) * t234 + g(2) * t230 + g(3) * t277;
t436 = g(1) * t235 - g(2) * t233 + g(3) * t278;
t434 = t453 * t394;
t430 = -g(1) * t512 + t500;
t429 = -t29 + t439;
t53 = -pkin(4) * t267 - t56;
t17 = -t49 * qJD(5) - t391 * t52 + t394 * t72;
t415 = pkin(10) * qJD(4) * t258 - t437 + t83;
t414 = pkin(11) * qJD(5) * t599 - t429;
t406 = -t314 * pkin(2) - pkin(9) * t617 + t474;
t405 = t315 * pkin(2) + pkin(9) * t618 + t538;
t404 = t233 * pkin(3) + t406;
t403 = t235 * pkin(3) + t405;
t399 = -pkin(10) * t230 + t404;
t398 = t234 * pkin(10) + t403;
t340 = t515 * t392;
t316 = -qJ(2) * t558 + t370;
t311 = t445 * t392;
t310 = t332 * t392;
t305 = -pkin(10) * t552 + t330;
t290 = t361 + (-qJ(2) * qJDD(1) - t527) * t558;
t226 = t234 * pkin(3);
t224 = t230 * pkin(3);
t137 = t188 * t394 + t234 * t391;
t124 = qJDD(6) + t125;
t120 = t181 * t592 + t182 * t390;
t105 = -qJD(5) * t181 + t180 * t394 + t267 * t391;
t104 = qJD(5) * t182 + t180 * t391 - t267 * t394;
t62 = pkin(5) * t181 + t80;
t39 = qJD(6) * t121 + t104 * t592 + t390 * t105;
t38 = t390 * t104 - t105 * t592 + t181 * t503 + t182 * t530;
t33 = pkin(5) * t104 + t53;
t20 = -pkin(5) * t453 + t29;
t15 = t35 * t592 - t580;
t14 = -t390 * t35 - t519;
t12 = t32 * t592 - t580;
t11 = -pkin(12) * t104 + t16;
t10 = pkin(5) * t179 - pkin(12) * t105 + t17;
t4 = -qJD(6) * t19 + t10 * t592 - t390 * t11;
t3 = qJD(6) * t18 + t390 * t10 + t11 * t592;
t5 = [0, 0, 0, 0, 0, qJDD(1), t522 - t521, t440, 0, 0, t382 * t526, 0.2e1 * t383 * t386 * t524, t386 * t482, t384 * t526, t388 * t482, t389 ^ 2 * qJDD(1), g(1) * t314 - g(2) * t315 + t448 * t388 + (qJDD(1) * t316 + t290 - t479) * t389, -g(1) * t375 + (t521 - t448) * t386 + (-t317 * qJDD(1) - t291 + (t440 - t502) * t388) * t389, t527 * t605 + (-t290 * t386 + t291 * t388 + (-t316 * t386 + t317 * t388) * qJDD(1) - t440) * t387, t291 * t317 + t290 * t316 - g(1) * t474 - g(2) * t538 + (-t364 * pkin(1) - qJD(2) * t463) * t387, -t198 * t278 - t266 * t268, t198 * t277 - t199 * t278 + t264 * t266 - t267 * t268, t198 * t421 + t266 * t433 - t278 * t431, t199 * t277 + t264 * t267, t199 * t421 + t267 * t433 + t277 * t431, t431 * t421, -g(1) * t233 - g(2) * t235 + t152 * t433 - t173 * t431 + t192 * t277 + t219 * t199 + t205 * t267 + t264 * t454 + t421 * t450, t151 * t433 + t174 * t431 + t192 * t278 - t219 * t198 - t205 * t266 + t268 * t454 - t421 * t422 + t467, g(1) * t617 - g(2) * t618 - t151 * t264 + t152 * t268 + t165 * t266 - t166 * t267 + t173 * t198 - t174 * t199 + t277 * t422 + t278 * t450, -g(1) * t406 - g(2) * t405 + t166 * t151 - t165 * t152 - t173 * t450 - t174 * t422 + t192 * t219 + t205 * t454, -t126 * t229 + t180 * t217, t126 * t228 - t127 * t229 - t179 * t217 - t180 * t487, -t126 * t277 + t180 * t258 + t197 * t229 + t217 * t267, t127 * t228 + t179 * t487, -t127 * t277 - t179 * t258 - t197 * t228 - t267 * t487, t197 * t277 + t258 * t267, -g(1) * t186 - g(2) * t188 + t127 * t163 + t143 * t179 + t152 * t487 + t197 * t89 + t228 * t83 + t258 * t56 + t267 * t75 + t277 * t31, -t126 * t163 + t143 * t180 + t152 * t217 - t197 * t90 + t229 * t83 - t258 * t55 - t267 * t76 - t277 * t30 - t468, t126 * t89 - t127 * t90 - t179 * t76 - t180 * t75 - t217 * t56 - t228 * t30 - t229 * t31 - t487 * t55 - t467, -g(1) * t399 - g(2) * t398 + t143 * t152 + t83 * t163 + t30 * t90 + t31 * t89 + t76 * t55 + t75 * t56, t105 * t172 - t182 * t67, -t172 * t104 - t105 * t170 + t67 * t181 + t182 * t453, t105 * t599 + t125 * t182 + t172 * t179 - t228 * t67, t170 * t104 - t181 * t453, -t104 * t599 - t181 * t125 - t170 * t179 + t228 * t453, t125 * t228 + t179 * t599, -g(1) * t641 - g(2) * t137 + t68 * t104 + t48 * t125 + t17 * t599 + t53 * t170 + t44 * t179 + t29 * t181 + t9 * t228 - t80 * t453, g(1) * t642 - g(2) * t136 + t68 * t105 - t49 * t125 - t16 * t599 + t53 * t172 - t45 * t179 + t29 * t182 + t447 * t228 - t80 * t67, -t45 * t104 - t44 * t105 - t16 * t170 - t17 * t172 + t181 * t447 - t9 * t182 + t453 * t49 + t48 * t67 + t468, -t447 * t49 + t45 * t16 + t9 * t48 + t44 * t17 + t29 * t80 + t68 * t53 - g(1) * (t186 * pkin(4) + pkin(11) * t633 + t399) - g(2) * (t188 * pkin(4) + t187 * pkin(11) + t398) -t121 * t25 - t38 * t446, t107 * t38 + t120 * t25 - t121 * t26 - t39 * t446, t121 * t124 + t179 * t446 - t209 * t38 - t228 * t25, t107 * t39 + t120 * t26, -t107 * t179 - t120 * t124 - t209 * t39 - t228 * t26, t124 * t228 + t179 * t209, -g(1) * t643 - g(2) * t133 + t33 * t107 + t12 * t179 + t20 * t120 + t18 * t124 + t2 * t228 + t4 * t209 + t62 * t26 + t59 * t39, g(1) * t644 - g(2) * t132 - t1 * t228 + t20 * t121 - t19 * t124 - t13 * t179 - t3 * t209 - t62 * t25 + t33 * t446 - t59 * t38, -t1 * t120 - t107 * t3 + t12 * t38 - t121 * t2 - t13 * t39 + t18 * t25 - t19 * t26 - t4 * t446 + t468, t1 * t19 + t13 * t3 + t2 * t18 + t12 * t4 + t20 * t62 + t59 * t33 - g(1) * (t186 * t378 - t230 * t515 - t396 * t633 + t404) - g(2) * (-t187 * t396 + t188 * t378 + t234 * t515 + t403); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t386 * t556 - t524) * t387 (qJDD(1) * t386 + t388 * t556) * t387, -t397 * t605, qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t463 - t522) * t387 + t500, 0, 0, 0, 0, 0, 0, t571 * t199 - t264 * t455 - t431 * t472 + t433 * t449, -t571 * t198 - t268 * t455 + t431 * t494 - t433 * t645, t198 * t472 - t199 * t494 + t297 * t264 - t296 * t268 + (-t264 * t472 + t268 * t494) * qJD(3), -t450 * t472 - t422 * t494 + t192 * t571 + t165 * t296 - t166 * t297 + (-t205 * t386 * t489 - t522) * t387 + (-t165 * t494 + t166 * t472) * qJD(3) + t500, 0, 0, 0, 0, 0, 0, -t127 * t472 - t318 * t197 - t258 * t540 + t449 * t487, t126 * t472 - t319 * t197 + t217 * t449 + t258 * t541, -t126 * t318 - t127 * t319 + t217 * t540 + t487 * t541, t143 * t449 + t30 * t319 - t31 * t318 - t472 * t83 - t540 * t75 - t541 * t76 + t430, 0, 0, 0, 0, 0, 0, t288 * t125 + t170 * t540 - t318 * t453 + t544 * t599, t125 * t424 + t172 * t540 - t318 * t67 + t545 * t599, t170 * t545 - t172 * t544 + t288 * t67 - t424 * t453, t9 * t288 + t29 * t318 + t424 * t447 + t44 * t544 - t45 * t545 + t540 * t68 + t430, 0, 0, 0, 0, 0, 0, t107 * t540 + t124 * t213 + t209 * t548 + t26 * t318, -t124 * t214 - t209 * t549 - t25 * t318 + t446 * t540, -t107 * t549 + t213 * t25 - t214 * t26 - t446 * t548, t1 * t214 + t12 * t548 + t13 * t549 + t2 * t213 + t20 * t318 + t540 * t59 + t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, -t264 ^ 2 + t268 ^ 2, -t264 * t433 - t198, -t561, t268 * t529 + (t268 * t496 - t267) * qJD(1) - t435, -t431, -t166 * t433 - t205 * t268 + t437 - t450, -t165 * t433 + t205 * t264 + t422 + t436, 0, 0, -t126 * t392 + t217 * t484 (-t126 - t565) * t395 + (-t127 - t562) * t392, t197 * t392 - t217 * t268 + t258 * t484, -t127 * t395 + t487 * t606, t197 * t395 - t258 * t606 + t268 * t487, -t258 * t268, -pkin(3) * t127 - t117 * t258 - t166 * t487 - t268 * t75 + t392 * t441 - t395 * t415, pkin(3) * t126 + t118 * t258 - t166 * t217 + t268 * t76 + t392 * t415 + t395 * t441, t117 * t217 + t118 * t487 + ((-t127 + t535) * pkin(10) + t608) * t395 + ((-t126 + t600) * pkin(10) + t607) * t392 - t436, -t83 * pkin(3) + g(1) * t226 + g(2) * t224 + g(3) * t274 - t75 * t117 - t76 * t118 - t143 * t166 + (t30 * t395 - t31 * t392 + (-t392 * t76 - t395 * t75) * qJD(4) - t436) * pkin(10), t172 * t615 - t67 * t551, t194 * t170 + t172 * t193 + (-t170 * t394 - t172 * t391) * t533 + (t434 + t579 + (-t172 * t394 + t567) * qJD(5)) * t392, t395 * t67 + t465 * t599 + (t172 * t258 - t532 * t599 + t568) * t392, -t170 * t635 - t453 * t553, -t453 * t395 + t621 * t599 + (-t170 * t258 - t531 * t599 - t554) * t392, -t125 * t395 + t599 * t606, t305 * t125 - t93 * t170 - t68 * t193 + t573 * t599 - t436 * t391 + (-t9 + (pkin(10) * t170 + t391 * t68) * qJD(4) + t437 * t394) * t395 + (-pkin(10) * t453 + t258 * t44 + t29 * t391 + t531 * t68) * t392, -t306 * t125 - t93 * t172 - t68 * t194 - t574 * t599 - t436 * t394 + (-t447 + (pkin(10) * t172 + t394 * t68) * qJD(4) - t437 * t391) * t395 + (-pkin(10) * t67 - t258 * t45 + t29 * t394 - t532 * t68) * t392, t306 * t453 + t305 * t67 + t45 * t193 + t44 * t194 - t573 * t172 - t574 * t170 + t464 * t533 + (t447 * t391 - t9 * t394 + (t391 * t44 - t394 * t45) * qJD(5) + t437) * t392, -t447 * t306 + t9 * t305 - t68 * t93 - g(1) * (t234 * t601 - t226) - g(2) * (t230 * t601 - t224) - g(3) * (t277 * t601 - t274) + t574 * t45 + t573 * t44 + (t29 * t392 + t533 * t68 - t436) * pkin(10), -t25 * t311 + t446 * t543, -t107 * t543 + t25 * t310 - t26 * t311 - t446 * t542, t124 * t311 + t209 * t543 + t25 * t395 + t446 * t606, t107 * t542 + t26 * t310, -t107 * t606 - t124 * t310 - t209 * t542 + t26 * t395, -t124 * t395 + t209 * t606, t210 * t124 - t2 * t395 + t340 * t26 + t20 * t310 - g(1) * (-t234 * t559 + t235 * t379) - g(2) * (-t230 * t559 - t233 * t379) - g(3) * (-t277 * t559 + t278 * t379) + t542 * t59 + t577 * t209 + t12 * t606 + t572 * t107, -t211 * t124 + t1 * t395 - t340 * t25 + t20 * t311 - g(1) * (t234 * t560 + t235 * t380) - g(2) * (t230 * t560 - t233 * t380) - g(3) * (t277 * t560 + t278 * t380) + t543 * t59 - t578 * t209 - t13 * t606 + t572 * t446, -t1 * t310 - t107 * t578 - t12 * t543 - t13 * t542 - t2 * t311 + t210 * t25 - t211 * t26 + t392 * t437 - t446 * t577, t1 * t211 + t2 * t210 + t20 * t340 - g(1) * (t234 * t462 + t235 * t515 - t226) - g(2) * (t230 * t462 - t233 * t515 - t224) - g(3) * (t277 * t462 + t278 * t515 - t274) + t572 * t59 + t578 * t13 + t577 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t563, t217 ^ 2 - t487 ^ 2, -t126 + t565, -t563, t562 - t127, t197, -t143 * t217 + t439 - t607, t143 * t487 - t438 - t608, 0, 0, t172 * t483 - t579 (-t67 - t625) * t394 + (t453 - t624) * t391, -t172 * t217 + t483 * t599 + t554, t567 * t599 + t434, -t391 * t599 ^ 2 + t170 * t217 + t568, -t599 * t217, -pkin(4) * t516 - t60 * t599 - t44 * t217 - t76 * t170 + t443 * t391 + (-t414 + t583) * t394, pkin(4) * t67 - t172 * t76 + t217 * t45 + t391 * t414 + t394 * t443 + t599 * t61, t61 * t170 + t60 * t172 + ((qJD(5) * t172 + t453) * pkin(11) + t610) * t394 + ((qJD(5) * t170 - t67) * pkin(11) + t613) * t391 + t438, -t44 * t60 - t45 * t61 - t68 * t76 + t429 * pkin(4) + (qJD(5) * t464 - t9 * t391 - t394 * t447 + t438) * pkin(11), -t25 * t332 - t446 * t546, t107 * t546 - t25 * t445 - t26 * t332 + t446 * t547, t124 * t332 - t209 * t546 - t217 * t446, -t107 * t547 - t26 * t445, t107 * t217 + t124 * t445 + t209 * t547, -t209 * t217, t107 * t478 - t12 * t217 + t124 * t294 - t20 * t445 + t209 * t575 - t26 * t378 + t380 * t439 - t547 * t59, -t124 * t295 + t13 * t217 + t20 * t332 - t209 * t576 + t25 * t378 - t379 * t439 + t446 * t478 - t546 * t59, t1 * t445 - t107 * t576 + t12 * t546 + t13 * t547 - t2 * t332 + t25 * t294 - t26 * t295 - t446 * t575 + t438, t1 * t295 + t2 * t294 - t20 * t378 - g(1) * (-t187 * t378 - t188 * t396) - g(2) * (t186 * t396 + t378 * t633) - g(3) * (-t228 * t378 - t229 * t396) + t478 * t59 + t576 * t13 + t575 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t566, -t170 ^ 2 + t172 ^ 2, -t67 + t625, -t566, t453 + t624, t125, -t68 * t172 + t597 - t613, g(1) * t137 - g(2) * t641 + g(3) * t182 + t68 * t170 - t610, 0, 0, t569, t614, t612, -t569, t595, t124, -t14 * t209 + (-t107 * t172 + t124 * t592 - t209 * t530) * pkin(5) + t596, t15 * t209 + (-t124 * t390 - t172 * t446 - t209 * t503) * pkin(5) + t611, t13 * t446 + t15 * t107 - t12 * t107 + t14 * t446 + (t592 * t25 - t26 * t390 + (-t107 * t592 + t390 * t446) * qJD(6)) * pkin(5), -t12 * t14 - t13 * t15 + (t1 * t390 + t2 * t592 - t59 * t172 + (-t12 * t390 + t13 * t592) * qJD(6) + t597) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, t614, t612, -t569, t595, t124, t13 * t209 + t596, t12 * t209 + t611, 0, 0;];
tau_reg  = t5;
