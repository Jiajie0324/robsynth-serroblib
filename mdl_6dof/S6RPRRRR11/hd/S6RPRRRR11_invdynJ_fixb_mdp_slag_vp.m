% Calculate vector of inverse dynamics joint torques for
% S6RPRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RPRRRR11_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRRRR11_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RPRRRR11_invdynJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:46:45
% EndTime: 2019-03-09 07:47:17
% DurationCPUTime: 23.79s
% Computational Cost: add. (23402->819), mult. (74017->1125), div. (0->0), fcn. (65706->18), ass. (0->336)
t857 = sin(pkin(6));
t866 = cos(qJ(1));
t1007 = t857 * t866;
t856 = sin(pkin(7));
t862 = sin(qJ(3));
t1009 = t856 * t862;
t1035 = cos(qJ(3));
t1025 = cos(pkin(7));
t1034 = sin(qJ(1));
t855 = sin(pkin(13));
t858 = cos(pkin(13));
t1026 = cos(pkin(6));
t953 = t866 * t1026;
t901 = t1034 * t855 - t858 * t953;
t1040 = t901 * t1025;
t796 = t1034 * t858 + t855 * t953;
t718 = t1007 * t1009 - t1035 * t796 + t1040 * t862;
t955 = t857 * t1025;
t766 = t856 * t901 - t866 * t955;
t861 = sin(qJ(4));
t865 = cos(qJ(4));
t681 = t718 * t865 - t766 * t861;
t965 = t856 * t1035;
t715 = t1007 * t965 + t1035 * t1040 + t796 * t862;
t860 = sin(qJ(5));
t864 = cos(qJ(5));
t1074 = t681 * t860 + t715 * t864;
t1073 = t681 * t864 - t715 * t860;
t854 = qJ(5) + qJ(6);
t849 = sin(t854);
t850 = cos(t854);
t1072 = t681 * t849 + t715 * t850;
t1071 = t681 * t850 - t715 * t849;
t924 = t1025 * t1035;
t905 = t858 * t924;
t951 = t1026 * t856;
t907 = t1035 * t951;
t1064 = t857 * t905 + t907;
t983 = qJD(1) * t857;
t964 = t855 * t983;
t1050 = qJD(1) * t1064 - t862 * t964;
t1070 = t1050 - qJD(4);
t954 = t862 * t1025;
t877 = t857 * (t1035 * t858 - t855 * t954);
t781 = qJD(1) * t877;
t958 = qJD(3) * t1035;
t931 = t856 * t958;
t1065 = t781 - t931;
t1063 = t718 * t861 + t766 * t865;
t949 = qJD(1) * t1026;
t932 = pkin(1) * t949;
t838 = t858 * t932;
t1012 = t855 * t857;
t870 = t1026 * pkin(2) + (-pkin(9) * t1025 - qJ(2)) * t1012;
t744 = qJD(1) * t870 + t838;
t730 = t744 * t954;
t963 = t858 * t983;
t792 = qJ(2) * t963 + t855 * t932;
t875 = (t858 * t955 + t951) * pkin(9);
t737 = qJD(1) * t875 + t792;
t785 = (-pkin(9) * t855 * t856 - pkin(2) * t858 - pkin(1)) * t857;
t772 = qJD(1) * t785 + qJD(2);
t665 = t772 * t1009 + t1035 * t737 + t730;
t1060 = t665 + t1070 * (pkin(4) * t861 - pkin(11) * t865);
t927 = t858 * t954;
t928 = t862 * t951;
t761 = t857 * (t1035 * t855 + t927) + t928;
t753 = t761 * qJD(1);
t688 = t1050 * t860 * t865 - t864 * t753;
t979 = qJD(4) * t865;
t1055 = -t860 * t979 + t688;
t1002 = t864 * t865;
t689 = t1002 * t1050 + t753 * t860;
t919 = t864 * t979 - t689;
t977 = qJD(5) * t860;
t1059 = -t861 * t977 + t919;
t912 = t1026 * t1025;
t1037 = qJD(1) * t912 - t856 * t963 + qJD(3);
t708 = t1037 * t861 + t865 * t753;
t671 = -t1070 * t860 + t708 * t864;
t859 = sin(qJ(6));
t1018 = t671 * t859;
t669 = t1070 * t864 + t708 * t860;
t863 = cos(qJ(6));
t612 = t863 * t669 + t1018;
t784 = t865 * t1037;
t706 = t753 * t861 - t784;
t705 = qJD(5) + t706;
t704 = qJD(6) + t705;
t1058 = t612 * t704;
t909 = t669 * t859 - t863 * t671;
t1057 = t704 * t909;
t976 = qJD(5) * t864;
t1056 = t861 * t976 - t1055;
t800 = t1009 * t861 - t1025 * t865;
t935 = t856 * t964;
t1054 = qJD(4) * t800 + t1065 * t865 + t861 * t935;
t876 = t857 * (t855 * t924 + t858 * t862);
t780 = qJD(1) * t876;
t982 = qJD(3) * t862;
t962 = t856 * t982;
t1053 = t780 - t962;
t1039 = qJD(5) + qJD(6);
t1051 = t1039 + t706;
t752 = t761 * qJD(3);
t970 = qJDD(1) * t857;
t956 = t855 * t970;
t696 = qJD(1) * t752 - qJDD(1) * t1064 + t862 * t956;
t702 = t1025 * t772 - t744 * t856;
t639 = -pkin(3) * t1050 - pkin(10) * t753 + t702;
t643 = pkin(10) * t1037 + t665;
t587 = t861 * t639 + t865 * t643;
t580 = -pkin(11) * t1070 + t587;
t906 = t744 * t924;
t664 = -t862 * t737 + t772 * t965 + t906;
t642 = -pkin(3) * t1037 - t664;
t597 = t706 * pkin(4) - t708 * pkin(11) + t642;
t563 = t580 * t864 + t597 * t860;
t554 = -pkin(12) * t669 + t563;
t975 = qJD(6) * t859;
t552 = t554 * t975;
t586 = t639 * t865 - t861 * t643;
t579 = pkin(4) * t1070 - t586;
t571 = pkin(5) * t669 + t579;
t1010 = t856 * t857;
t925 = t1026 * t1034;
t883 = t866 * t855 + t858 * t925;
t1043 = -t1034 * t1010 + t883 * t1025;
t797 = -t855 * t925 + t866 * t858;
t720 = t797 * t1035 - t1043 * t862;
t767 = t1034 * t955 + t856 * t883;
t683 = t720 * t865 + t767 * t861;
t719 = t1035 * t1043 + t797 * t862;
t632 = t683 * t850 + t719 * t849;
t1008 = t857 * t858;
t795 = t1008 * t856 - t912;
t714 = t761 * t865 - t795 * t861;
t1011 = t855 * t862;
t760 = t1011 * t857 - t1064;
t1049 = t571 * t612 + g(1) * t632 - g(2) * t1071 - g(3) * (-t714 * t850 - t760 * t849) + t552;
t631 = -t683 * t849 + t719 * t850;
t1048 = t571 * t909 - g(3) * (-t714 * t849 + t760 * t850) - g(2) * t1072 - g(1) * t631;
t695 = qJD(3) * t1050 + qJDD(1) * t928 + t1035 * t956 + t927 * t970;
t789 = qJDD(1) * t795 - qJDD(3);
t943 = t861 * t695 + t865 * t789;
t626 = qJD(4) * t708 + t943;
t624 = qJDD(5) + t626;
t623 = qJDD(6) + t624;
t1047 = t623 * MDP(33) + (-t612 ^ 2 + t909 ^ 2) * MDP(30) - t612 * MDP(29) * t909;
t1046 = t1070 * t861;
t812 = t859 * t864 + t860 * t863;
t793 = t812 * t861;
t852 = t857 ^ 2;
t1045 = t852 * (t855 ^ 2 + t858 ^ 2);
t967 = pkin(1) * t1026;
t843 = t858 * t967;
t762 = t843 + t870;
t710 = t1025 * t785 - t762 * t856;
t656 = pkin(3) * t760 - pkin(10) * t761 + t710;
t841 = qJ(2) * t1008;
t799 = t855 * t967 + t841;
t756 = t875 + t799;
t742 = t1035 * t756;
t950 = t1025 * t762;
t968 = t785 * t1009 + t862 * t950 + t742;
t663 = -pkin(10) * t795 + t968;
t998 = t861 * t656 + t865 * t663;
t592 = pkin(11) * t760 + t998;
t868 = -t862 * t756 + t762 * t924 + t785 * t965;
t662 = t795 * pkin(3) - t868;
t713 = t761 * t861 + t795 * t865;
t607 = t713 * pkin(4) - t714 * pkin(11) + t662;
t1000 = t864 * t592 + t860 * t607;
t1031 = pkin(10) * t860;
t981 = qJD(4) * t861;
t1044 = t981 * t1031 - t1060 * t864;
t697 = pkin(3) * t753 - pkin(10) * t1050;
t997 = t865 * t664 + t861 * t697;
t601 = pkin(11) * t753 + t997;
t826 = -pkin(4) * t865 - pkin(11) * t861 - pkin(3);
t1042 = t1060 * t860 + t864 * t601 - t826 * t976;
t625 = qJD(4) * t784 + t865 * t695 - t753 * t981 - t861 * t789;
t694 = qJDD(4) + t696;
t578 = qJD(5) * t671 + t625 * t860 - t864 * t694;
t577 = -t1070 * t976 + t864 * t625 + t860 * t694 - t708 * t977;
t947 = t577 * t859 + t863 * t578;
t546 = -qJD(6) * t909 + t947;
t1036 = pkin(11) + pkin(12);
t1033 = pkin(1) * t852;
t1032 = pkin(5) * t861;
t1027 = pkin(10) * qJD(4);
t562 = -t580 * t860 + t864 * t597;
t553 = -pkin(12) * t671 + t562;
t550 = pkin(5) * t705 + t553;
t1024 = t550 * t863;
t1023 = t554 * t863;
t1022 = t577 * t860;
t1021 = t624 * t864;
t1020 = t669 * t705;
t1019 = t671 * t705;
t1017 = t706 * t1070;
t1016 = t706 * t860;
t1015 = t708 * t1070;
t1014 = t849 * t865;
t1013 = t850 * t865;
t930 = qJDD(1) * t967;
t971 = qJD(1) * qJD(2);
t957 = t857 * t971;
t776 = qJDD(1) * t841 + t855 * t930 + t858 * t957;
t725 = qJDD(1) * t875 + t776;
t836 = t858 * t930;
t726 = qJDD(1) * t870 - t855 * t957 + t836;
t768 = qJDD(1) * t785 + qJDD(2);
t880 = -qJD(3) * t906 - t768 * t1009 - t1035 * t725 - t726 * t954 + t737 * t982 - t772 * t931;
t593 = -pkin(10) * t789 - t880;
t687 = t1025 * t768 - t726 * t856;
t608 = pkin(3) * t696 - pkin(10) * t695 + t687;
t896 = t865 * t593 + t861 * t608 + t639 * t979 - t643 * t981;
t548 = pkin(11) * t694 + t896;
t900 = -qJD(3) * t730 - t862 * t725 + t726 * t924 - t737 * t958 + t768 * t965 - t772 * t962;
t594 = pkin(3) * t789 - t900;
t560 = pkin(4) * t626 - pkin(11) * t625 + t594;
t539 = -qJD(5) * t563 - t860 * t548 + t864 * t560;
t536 = pkin(5) * t624 - pkin(12) * t577 + t539;
t1006 = t859 * t536;
t1005 = t860 * t624;
t1004 = t860 * t861;
t1003 = t861 * t864;
t654 = pkin(4) * t708 + pkin(11) * t706;
t1001 = t864 * t586 + t860 * t654;
t801 = t1009 * t865 + t1025 * t861;
t888 = -t864 * t801 + t860 * t965;
t996 = qJD(5) * t888 - t1053 * t864 + t1054 * t860;
t773 = -t860 * t801 - t864 * t965;
t995 = -qJD(5) * t773 + t1053 * t860 + t1054 * t864;
t811 = t859 * t860 - t863 * t864;
t994 = -t1039 * t793 + t688 * t859 - t689 * t863 - t811 * t979;
t993 = -t975 * t1004 + (t1003 * t1039 - t1055) * t863 + t1059 * t859;
t992 = t1051 * t811;
t991 = t1051 * t812;
t990 = qJD(4) * t801 - t1065 * t861 + t865 * t935;
t660 = t861 * t664;
t600 = -pkin(4) * t753 - t697 * t865 + t660;
t989 = pkin(5) * t1056 + pkin(10) * t979 - t600;
t844 = pkin(10) * t1002;
t986 = t860 * t826 + t844;
t980 = qJD(4) * t864;
t978 = qJD(5) * t705;
t974 = qJD(6) * t863;
t973 = t789 * MDP(12);
t969 = t863 * t577 - t859 * t578 - t669 * t974;
t966 = qJD(5) * t1036;
t867 = qJD(1) ^ 2;
t952 = t867 * t1026;
t894 = -t864 * t548 - t860 * t560 + t580 * t977 - t597 * t976;
t537 = -pkin(12) * t578 - t894;
t948 = t863 * t536 - t859 * t537;
t946 = -t592 * t860 + t864 * t607;
t944 = t656 * t865 - t861 * t663;
t940 = t1070 * t865;
t939 = t705 * t864;
t938 = qJD(6) * t550 + t537;
t937 = t861 * t593 - t865 * t608 + t639 * t981 + t643 * t979;
t933 = qJD(2) * t855 * t1010;
t926 = -t587 + (t1016 + t977) * pkin(5);
t922 = qJD(2) * t949;
t649 = t864 * t654;
t834 = t1036 * t864;
t918 = pkin(5) * t708 + qJD(6) * t834 - t586 * t860 + t649 + (pkin(12) * t706 + t966) * t864;
t777 = -pkin(12) * t1004 + t986;
t917 = -pkin(12) * t689 + qJD(6) * t777 + t1032 * t1050 - t601 * t860 - (-pkin(12) * t1002 + t1032) * qJD(4) - (-t844 + (pkin(12) * t861 - t826) * t860) * qJD(5) - t1044;
t810 = t864 * t826;
t759 = -pkin(12) * t1003 + t810 + (-pkin(5) - t1031) * t865;
t916 = -qJD(6) * t759 - (-t861 * t980 - t865 * t977) * pkin(10) + t1042 + t1056 * pkin(12);
t833 = t1036 * t860;
t915 = pkin(12) * t1016 + qJD(6) * t833 + t860 * t966 + t1001;
t914 = -qJD(6) * t888 - t996;
t913 = -qJD(6) * t773 + t995;
t543 = t550 * t859 + t1023;
t678 = t714 * t864 + t760 * t860;
t555 = pkin(5) * t713 - pkin(12) * t678 + t946;
t677 = t714 * t860 - t760 * t864;
t561 = -pkin(12) * t677 + t1000;
t911 = t555 * t863 - t561 * t859;
t910 = t555 * t859 + t561 * t863;
t619 = t863 * t677 + t678 * t859;
t620 = -t677 * t859 + t678 * t863;
t908 = (-qJ(2) * t964 + t838) * t855 - t792 * t858;
t650 = qJD(2) * t877 + qJD(3) * t868;
t751 = (t907 + (t905 - t1011) * t857) * qJD(3);
t685 = pkin(3) * t752 - pkin(10) * t751 + t933;
t904 = -t861 * t650 - t656 * t981 - t663 * t979 + t685 * t865;
t903 = g(1) * t1034 - g(2) * t866;
t902 = -g(1) * t866 - g(2) * t1034;
t591 = -pkin(4) * t760 - t944;
t549 = -pkin(4) * t694 + t937;
t898 = -pkin(10) * t694 - t1070 * t642;
t897 = -pkin(11) * t624 + t579 * t705;
t895 = t865 * t650 + t656 * t979 - t663 * t981 + t861 * t685;
t568 = pkin(11) * t752 + t895;
t651 = qJD(2) * t876 + (t742 + (t785 * t856 + t950) * t862) * qJD(3);
t675 = qJD(4) * t714 + t751 * t861;
t676 = -qJD(4) * t713 + t751 * t865;
t583 = t675 * pkin(4) - t676 * pkin(11) + t651;
t893 = t864 * t568 + t860 * t583 - t592 * t977 + t607 * t976;
t545 = -t671 * t975 + t969;
t682 = -t720 * t861 + t767 * t865;
t892 = g(1) * t682 + g(2) * t1063 - g(3) * t713;
t891 = g(1) * t719 + g(2) * t715 + g(3) * t760;
t890 = g(1) * t720 - g(2) * t718 + g(3) * t761;
t885 = -t594 + t891;
t569 = -pkin(4) * t752 - t904;
t874 = pkin(10) * t978 - t891;
t872 = -qJD(5) * t1000 - t568 * t860 + t864 * t583;
t534 = -qJD(6) * t543 + t948;
t871 = pkin(11) * t978 + t549 + t892;
t848 = -pkin(5) * t864 - pkin(4);
t839 = -pkin(1) * t970 + qJDD(2);
t820 = (pkin(5) * t860 + pkin(10)) * t861;
t798 = -qJ(2) * t1012 + t843;
t794 = t811 * t861;
t775 = t836 + (-qJ(2) * qJDD(1) - t971) * t1012;
t634 = t683 * t864 + t719 * t860;
t633 = -t683 * t860 + t719 * t864;
t610 = -qJD(5) * t677 + t676 * t864 + t752 * t860;
t609 = qJD(5) * t678 + t676 * t860 - t752 * t864;
t572 = pkin(5) * t677 + t591;
t557 = qJD(6) * t620 + t863 * t609 + t610 * t859;
t556 = -qJD(6) * t619 - t609 * t859 + t610 * t863;
t551 = pkin(5) * t609 + t569;
t544 = pkin(5) * t578 + t549;
t542 = -t554 * t859 + t1024;
t541 = -pkin(12) * t609 + t893;
t540 = pkin(5) * t675 - pkin(12) * t610 + t872;
t533 = t938 * t863 + t1006 - t552;
t1 = [(t545 * t620 - t556 * t909) * MDP(29) + (-t545 * t619 - t546 * t620 - t556 * t612 + t557 * t909) * MDP(30) + (t545 * t713 + t556 * t704 + t620 * t623 - t675 * t909) * MDP(31) + (g(1) * t1074 - g(2) * t633 - t1000 * t624 + t549 * t678 - t563 * t675 + t569 * t671 + t591 * t577 + t579 * t610 - t893 * t705 + t894 * t713) * MDP(28) + (-t776 * t1026 - g(1) * t901 + g(2) * t883 + (t839 * t855 - t858 * t922) * t857 + (-t1026 * t799 - t1033 * t855) * qJDD(1)) * MDP(5) + (t775 * t1026 + g(1) * t796 - g(2) * t797 + (-t839 * t858 - t855 * t922) * t857 + (t1026 * t798 + t1033 * t858) * qJDD(1)) * MDP(4) + t795 * t973 + t903 * MDP(2) + (-g(1) * t715 + g(2) * t719 - t1037 * t650 + t687 * t761 + t710 * t695 + t702 * t751 + t753 * t933 + t789 * t968 - t795 * t880) * MDP(14) + (-g(1) * t718 - g(2) * t720 - t1037 * t651 - t1050 * t933 + t687 * t760 + t710 * t696 + t702 * t752 - t789 * t868 - t795 * t900) * MDP(13) + (t1050 * t751 - t695 * t760 - t696 * t761 - t752 * t753) * MDP(9) - t902 * MDP(3) + (t775 * t798 + t776 * t799 + t903 * pkin(1) + (-t839 * pkin(1) + qJ(2) * t902 - qJD(2) * t908) * t857) * MDP(7) + (-t1037 * t752 + t696 * t795 + t760 * t789) * MDP(11) + (t1037 * t751 - t695 * t795 - t761 * t789) * MDP(10) + (t577 * t678 + t610 * t671) * MDP(22) + (-t577 * t677 - t578 * t678 - t609 * t671 - t610 * t669) * MDP(23) + (t695 * t761 + t751 * t753) * MDP(8) + ((-qJD(6) * t910 + t540 * t863 - t541 * t859) * t704 + t911 * t623 + t534 * t713 + t542 * t675 + t551 * t612 + t572 * t546 + t544 * t619 + t571 * t557 - g(1) * t1071 - g(2) * t632) * MDP(34) + (-(qJD(6) * t911 + t540 * t859 + t541 * t863) * t704 - t910 * t623 - t533 * t713 - t543 * t675 - t551 * t909 + t572 * t545 + t544 * t620 + t571 * t556 + g(1) * t1072 - g(2) * t631) * MDP(35) + (-g(1) * t1073 - g(2) * t634 + t539 * t713 + t549 * t677 + t562 * t675 + t569 * t669 + t591 * t578 + t579 * t609 + t946 * t624 + t872 * t705) * MDP(27) + qJDD(1) * MDP(1) + (-t625 * t713 - t626 * t714 - t675 * t708 - t676 * t706) * MDP(16) + (t971 * t1045 + (-t775 * t855 + t776 * t858 + (-t798 * t855 + t799 * t858) * qJDD(1) + t902) * t857) * MDP(6) + (t623 * t713 + t675 * t704) * MDP(33) + (-t546 * t713 - t557 * t704 - t612 * t675 - t619 * t623) * MDP(32) + (t577 * t713 + t610 * t705 + t624 * t678 + t671 * t675) * MDP(24) + (-t578 * t713 - t609 * t705 - t624 * t677 - t669 * t675) * MDP(25) + (t624 * t713 + t675 * t705) * MDP(26) + (-g(1) * t681 - g(2) * t683 - t1070 * t904 + t586 * t752 + t594 * t713 + t662 * t626 + t642 * t675 + t651 * t706 + t694 * t944 - t760 * t937) * MDP(20) + (g(1) * t1063 - g(2) * t682 + t1070 * t895 - t587 * t752 + t594 * t714 + t662 * t625 + t642 * t676 + t651 * t708 - t998 * t694 - t896 * t760) * MDP(21) + (-t1070 * t752 + t694 * t760) * MDP(19) + (t1070 * t675 - t626 * t760 - t694 * t713 - t706 * t752) * MDP(18) + (-t1070 * t676 + t625 * t760 + t694 * t714 + t708 * t752) * MDP(17) + (t625 * t714 + t676 * t708) * MDP(15); -t867 * MDP(6) * t1045 + (-g(3) * t1026 + qJDD(2)) * MDP(7) + (t1025 * t696 + t780 * t1037 + (-t1035 * t789 - t1037 * t982 + t1050 * t964) * t856) * MDP(13) + (t1025 * t695 + t781 * t1037 + (-t1037 * t958 - t753 * t964 + t862 * t789) * t856) * MDP(14) + (-t1053 * t706 + t1070 * t990 - t626 * t965 - t800 * t694) * MDP(20) + (-t1053 * t708 - t1054 * t1070 - t625 * t965 - t801 * t694) * MDP(21) + (t578 * t800 + t624 * t773 + t669 * t990 + t705 * t996) * MDP(27) + (t577 * t800 + t624 * t888 + t671 * t990 + t705 * t995) * MDP(28) + ((t773 * t863 + t859 * t888) * t623 + t800 * t546 + (t859 * t913 - t863 * t914) * t704 + t990 * t612) * MDP(34) + (-(t773 * t859 - t863 * t888) * t623 + t800 * t545 + (t859 * t914 + t863 * t913) * t704 - t990 * t909) * MDP(35) + ((-qJDD(1) * t858 + t855 * t952) * MDP(4) + (qJDD(1) * t855 + t858 * t952) * MDP(5) + (-pkin(1) * qJDD(1) + qJD(1) * t908 - t903) * MDP(7)) * t857; -t696 * MDP(11) + (-t545 * t794 - t909 * t994) * MDP(29) + (-t545 * t793 + t546 * t794 - t612 * t994 + t909 * t993) * MDP(30) + (t625 * t861 - t708 * t940) * MDP(15) + ((t625 + t1017) * t865 + (-t626 + t1015) * t861) * MDP(16) + (t1046 * t909 - t545 * t865 - t623 * t794 + t704 * t994) * MDP(31) + (-t1046 * t705 - t624 * t865) * MDP(26) + (-t1046 * t704 - t623 * t865) * MDP(33) + (t1046 * t612 + t546 * t865 - t623 * t793 - t704 * t993) * MDP(32) + (-(t759 * t859 + t777 * t863) * t623 + t533 * t865 + t820 * t545 - t544 * t794 - g(1) * (t1014 * t719 + t720 * t850) - g(2) * (t1014 * t715 - t718 * t850) - g(3) * (t1014 * t760 + t761 * t850) + (t859 * t917 + t863 * t916) * t704 - t989 * t909 + t994 * t571 + t543 * t1046) * MDP(35) + ((t759 * t863 - t777 * t859) * t623 - t534 * t865 + t820 * t546 + t544 * t793 - g(1) * (-t1013 * t719 + t720 * t849) - g(2) * (-t1013 * t715 - t718 * t849) - g(3) * (-t1013 * t760 + t761 * t849) + (t859 * t916 - t863 * t917) * t704 + t989 * t612 + t993 * t571 - t542 * t1046) * MDP(34) - t973 + (t669 * t689 + t671 * t688 + (-t669 * t864 - t671 * t860) * t979 + (-t1022 - t578 * t864 + (t669 * t860 - t671 * t864) * qJD(5)) * t861) * MDP(23) - t1050 ^ 2 * MDP(9) + (-t1037 * t1050 + t695) * MDP(10) + (t1037 * t664 - t1050 * t702 + t880 + t890) * MDP(14) + (t577 * t1003 + t1059 * t671) * MDP(22) + (t1037 * t665 + t891 + t900) * MDP(13) + (t1070 * t940 + t694 * t861) * MDP(17) + (-t1046 * t1070 + t694 * t865) * MDP(18) + (-t577 * t865 + t919 * t705 + (-t1070 * t671 - t705 * t977 + t1021) * t861) * MDP(24) + (MDP(11) * t1037 - t702 * MDP(13) - t708 * MDP(17) + t706 * MDP(18) + MDP(19) * t1070 - t586 * MDP(20) + t587 * MDP(21) - MDP(8) * t1050 + MDP(9) * t753) * t753 + (t578 * t865 + t1055 * t705 + (t1070 * t669 - t705 * t976 - t1005) * t861) * MDP(25) + (-pkin(3) * t625 - t997 * t1070 - t665 * t708 + t898 * t865 + (-t1027 * t1070 - t885) * t861) * MDP(21) + (-pkin(3) * t626 - t660 * t1070 - t665 * t706 + t898 * t861 + (-(-t697 - t1027) * t1070 + t885) * t865) * MDP(20) + (-t986 * t624 - t600 * t671 - t579 * t689 + t1042 * t705 - t890 * t864 + (-t894 + (pkin(10) * t671 + t579 * t864) * qJD(4) + t874 * t860) * t865 + (-t579 * t977 + t549 * t864 + t1070 * t563 + (t705 * t980 + t577) * pkin(10)) * t861) * MDP(28) + (-t579 * t688 - t600 * t669 + t810 * t624 + t1044 * t705 + ((-qJD(5) * t826 + t601) * t705 - t890) * t860 + (t579 * t860 * qJD(4) - t539 + (qJD(4) * t669 - t1005) * pkin(10) - t874 * t864) * t865 + (pkin(10) * t578 - t1070 * t562 + t549 * t860 + t579 * t976) * t861) * MDP(27); -t706 ^ 2 * MDP(16) + (t625 - t1017) * MDP(17) + (-t1015 - t943) * MDP(18) + t694 * MDP(19) + (-t1070 * t587 - t892 - t937) * MDP(20) + (g(1) * t683 - g(2) * t681 + g(3) * t714 - t1070 * t586 + t642 * t706 - t896) * MDP(21) + (t671 * t939 + t1022) * MDP(22) + ((t577 - t1020) * t864 + (-t578 - t1019) * t860) * MDP(23) + (t705 * t939 + t1005) * MDP(24) + (-t705 ^ 2 * t860 + t1021) * MDP(25) + (-pkin(4) * t578 - t587 * t669 - t649 * t705 + (t586 * t705 + t897) * t860 - t871 * t864) * MDP(27) + (-pkin(4) * t577 + t1001 * t705 - t587 * t671 + t860 * t871 + t864 * t897) * MDP(28) + (t545 * t812 + t909 * t992) * MDP(29) + (-t545 * t811 - t546 * t812 + t612 * t992 + t909 * t991) * MDP(30) + (t623 * t812 - t704 * t992) * MDP(31) + (-t623 * t811 - t704 * t991) * MDP(32) + ((-t833 * t863 - t834 * t859) * t623 + t848 * t546 + t544 * t811 + (t859 * t915 - t863 * t918) * t704 + t926 * t612 + t991 * t571 - t892 * t850) * MDP(34) + (-(-t833 * t859 + t834 * t863) * t623 + t848 * t545 + t544 * t812 + (t859 * t918 + t863 * t915) * t704 - t926 * t909 - t992 * t571 + t892 * t849) * MDP(35) + (MDP(15) * t706 + MDP(16) * t708 - MDP(18) * qJD(4) - MDP(20) * t642 - MDP(24) * t671 + MDP(25) * t669 - MDP(26) * t705 - MDP(27) * t562 + MDP(28) * t563 + MDP(31) * t909 + MDP(32) * t612 - MDP(33) * t704 - MDP(34) * t542 + MDP(35) * t543) * t708; t671 * t669 * MDP(22) + (-t669 ^ 2 + t671 ^ 2) * MDP(23) + (t577 + t1020) * MDP(24) + (t1019 - t578) * MDP(25) + t624 * MDP(26) + (-g(1) * t633 - g(2) * t1074 + g(3) * t677 + t563 * t705 - t579 * t671 + t539) * MDP(27) + (g(1) * t634 - g(2) * t1073 + g(3) * t678 + t562 * t705 + t579 * t669 + t894) * MDP(28) + (t545 + t1058) * MDP(31) + (-t546 - t1057) * MDP(32) + (-(-t553 * t859 - t1023) * t704 + (-t612 * t671 + t623 * t863 - t704 * t975) * pkin(5) + t534 + t1048) * MDP(34) + ((-t554 * t704 - t536) * t859 + (t553 * t704 - t938) * t863 + (-t623 * t859 + t671 * t909 - t704 * t974) * pkin(5) + t1049) * MDP(35) + t1047; (t969 + t1058) * MDP(31) + (-t947 - t1057) * MDP(32) + (t543 * t704 + t1048 + t948) * MDP(34) + (-t863 * t537 + t542 * t704 - t1006 + t1049) * MDP(35) + (-MDP(31) * t1018 + MDP(32) * t909 - MDP(34) * t543 - MDP(35) * t1024) * qJD(6) + t1047;];
tau  = t1;
