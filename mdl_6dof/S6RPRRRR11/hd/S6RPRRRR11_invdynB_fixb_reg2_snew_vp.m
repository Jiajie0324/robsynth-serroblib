% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 05:48
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRRR11_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR11_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR11_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR11_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR11_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR11_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 05:41:01
% EndTime: 2019-05-06 05:43:45
% DurationCPUTime: 170.36s
% Computational Cost: add. (1843027->1280), mult. (5723374->2154), div. (0->0), fcn. (4966969->16), ass. (0->935)
t1371 = sin(pkin(13));
t1372 = sin(pkin(7));
t1373 = sin(pkin(6));
t1374 = cos(pkin(13));
t1375 = cos(pkin(7));
t1376 = cos(pkin(6));
t1381 = sin(qJ(1));
t1386 = cos(qJ(1));
t1360 = t1381 * g(1) - t1386 * g(2);
t1443 = qJDD(1) * pkin(1) + t1360;
t1538 = t1376 * g(3) - qJDD(2);
t1563 = qJDD(1) * t1374;
t1540 = t1373 * t1563;
t1391 = -pkin(2) * t1540 - t1373 * t1443 - t1538;
t1427 = t1376 * t1443;
t1562 = qJDD(1) * t1376;
t1560 = pkin(2) * t1562;
t1578 = t1373 * t1374;
t1392 = -g(3) * t1578 + t1374 * t1427 + t1560;
t1361 = t1386 * g(1) + t1381 * g(2);
t1564 = qJDD(1) * t1373;
t1403 = qJ(2) * t1564 - t1361;
t1370 = t1376 ^ 2;
t1624 = pkin(9) * t1372;
t1437 = (t1371 * pkin(1) + t1370 * t1624) * qJD(1);
t1585 = t1371 * t1372;
t1444 = -pkin(2) * t1374 - pkin(9) * t1585;
t1366 = t1371 ^ 2;
t1369 = t1374 ^ 2;
t1566 = t1366 + t1369;
t1614 = qJD(1) * t1373;
t1623 = pkin(9) * t1375;
t1628 = pkin(2) * t1371;
t1630 = -2 * qJD(2);
t1192 = qJD(1) * (t1372 * t1437 + t1373 * (qJD(1) * t1376 * ((qJ(2) + 0.2e1 * t1623) * t1372 * t1374 - t1375 * t1628) - (t1444 * t1585 + t1375 * (-t1566 * t1623 - qJ(2))) * t1614 + t1585 * t1630)) + t1372 * (-t1371 * t1403 + t1392) - t1375 * t1391;
t1377 = sin(qJ(6));
t1385 = cos(qJ(3));
t1380 = sin(qJ(3));
t1574 = t1375 * t1380;
t1581 = t1372 * t1380;
t1395 = t1376 * t1581 + (t1371 * t1385 + t1374 * t1574) * t1373;
t1321 = t1395 * qJD(1);
t1575 = t1375 * t1376;
t1637 = -t1372 * t1578 + t1575;
t1334 = qJD(1) * t1637 + qJD(3);
t1379 = sin(qJ(4));
t1384 = cos(qJ(4));
t1302 = t1321 * t1384 + t1334 * t1379;
t1584 = t1371 * t1380;
t1577 = t1373 * t1375;
t1548 = t1374 * t1577;
t1580 = t1372 * t1385;
t1648 = -t1376 * t1580 - t1385 * t1548;
t1319 = qJD(1) * t1648 + t1584 * t1614;
t1314 = qJD(4) + t1319;
t1378 = sin(qJ(5));
t1383 = cos(qJ(5));
t1261 = t1302 * t1378 - t1383 * t1314;
t1263 = t1302 * t1383 + t1314 * t1378;
t1382 = cos(qJ(6));
t1196 = t1382 * t1261 + t1263 * t1377;
t1198 = -t1261 * t1377 + t1263 * t1382;
t1128 = t1198 * t1196;
t1394 = t1395 * qJDD(1);
t1282 = -t1319 * qJD(3) + t1394;
t1333 = -t1372 * t1540 + t1375 * t1562 + qJDD(3);
t1545 = t1302 * qJD(4) + t1379 * t1282 - t1384 * t1333;
t1225 = qJDD(5) + t1545;
t1445 = qJDD(6) + t1225;
t1641 = -t1128 + t1445;
t1654 = t1377 * t1641;
t1206 = t1263 * t1261;
t1639 = -t1206 + t1225;
t1653 = t1378 * t1639;
t1300 = t1321 * t1379 - t1384 * t1334;
t1249 = t1302 * t1300;
t1542 = t1371 * t1564;
t1438 = qJDD(1) * t1648 + t1380 * t1542;
t1400 = -qJD(3) * t1321 - t1438;
t1277 = qJDD(4) - t1400;
t1638 = -t1249 + t1277;
t1652 = t1379 * t1638;
t1651 = t1382 * t1641;
t1650 = t1383 * t1639;
t1649 = t1384 * t1638;
t1295 = qJD(5) + t1300;
t1222 = t1295 * t1261;
t1227 = -t1300 * qJD(4) + t1384 * t1282 + t1379 * t1333;
t1546 = t1261 * qJD(5) - t1383 * t1227 - t1378 * t1277;
t1115 = -t1222 + t1546;
t1598 = t1302 * t1314;
t1647 = t1545 + t1598;
t1582 = t1372 * t1376;
t1440 = t1548 + t1582;
t1645 = pkin(9) * t1440;
t1595 = t1319 * t1321;
t1399 = t1333 - t1595;
t1644 = t1380 * t1399;
t1643 = t1385 * t1399;
t1368 = t1373 ^ 2;
t1634 = qJD(1) ^ 2;
t1552 = t1371 * t1374 * t1634;
t1642 = (t1368 + t1370) * t1373 * t1552;
t1291 = qJD(6) + t1295;
t1175 = t1291 * t1196;
t1536 = t1378 * t1227 - t1383 * t1277;
t1146 = -qJD(5) * t1263 - t1536;
t1406 = qJD(6) * t1196 - t1146 * t1377 + t1382 * t1546;
t1640 = -t1175 - t1406;
t1266 = t1314 * t1300;
t1187 = -t1266 + t1227;
t1305 = t1334 * t1319;
t1244 = -t1305 + t1282;
t1116 = t1546 + t1222;
t1537 = -t1382 * t1146 - t1377 * t1546;
t996 = (qJD(6) - t1291) * t1198 + t1537;
t1111 = t1263 * (qJD(5) - t1295) + t1536;
t1194 = t1196 ^ 2;
t1195 = t1198 ^ 2;
t1633 = t1261 ^ 2;
t1259 = t1263 ^ 2;
t1290 = t1291 ^ 2;
t1294 = t1295 ^ 2;
t1298 = t1300 ^ 2;
t1299 = t1302 ^ 2;
t1632 = t1314 ^ 2;
t1317 = t1319 ^ 2;
t1318 = t1321 ^ 2;
t1631 = t1334 ^ 2;
t1629 = 2 * qJD(2);
t1627 = pkin(3) * t1380;
t1626 = pkin(3) * t1385;
t1625 = pkin(4) * t1379;
t1622 = t1373 * g(3);
t1363 = t1371 * t1622;
t1436 = t1444 * t1373;
t1544 = qJ(2) + t1623;
t1532 = t1376 * t1544;
t1235 = t1374 * t1403 + t1371 * t1427 - t1363 + qJDD(1) * t1645 + ((-t1374 * pkin(1) - pkin(2) * t1370) * qJD(1) + (t1374 * t1629 + (t1371 * t1532 + t1374 * t1436) * qJD(1)) * t1373) * qJD(1);
t1573 = t1375 * t1385;
t1579 = t1373 * t1634;
t1621 = qJ(2) * t1373;
t1132 = t1235 * t1380 - (t1560 + (t1427 - t1622) * t1374 + (-t1544 * t1564 + t1361) * t1371 + (t1437 + (t1371 * t1630 + (-t1371 * t1436 + t1374 * t1532) * qJD(1)) * t1373) * qJD(1)) * t1573 - (((-pkin(1) + t1444) * qJDD(1) - t1360) * t1373 + (t1376 * t1628 - t1621 + (-t1374 * t1582 - t1566 * t1577) * pkin(9)) * t1579 - t1538) * t1580;
t1278 = pkin(3) * t1319 - pkin(10) * t1321;
t1100 = -t1333 * pkin(3) - t1631 * pkin(10) + t1278 * t1321 + t1132;
t1025 = pkin(4) * t1647 - t1187 * pkin(11) + t1100;
t1133 = t1385 * t1235 + (t1375 * (t1634 * pkin(1) + t1361) + ((-pkin(9) * t1372 ^ 2 - t1375 * t1544) * qJDD(1) + (pkin(2) * qJD(1) * t1440 + t1375 * t1630) * qJD(1)) * t1373) * t1584 + (t1372 * t1391 + t1375 * t1392 + ((-t1372 * t1373 + t1374 * t1575) * t1621 + t1637 * t1645) * t1634) * t1380;
t1101 = -pkin(3) * t1631 + t1333 * pkin(10) - t1319 * t1278 + t1133;
t1569 = qJD(3) + t1334;
t1240 = t1321 * t1569 + t1438;
t1388 = t1240 * pkin(3) - t1244 * pkin(10) - t1192;
t1028 = t1384 * t1101 + t1379 * t1388;
t1239 = pkin(4) * t1300 - pkin(11) * t1302;
t979 = -pkin(4) * t1632 + pkin(11) * t1277 - t1239 * t1300 + t1028;
t920 = -t1383 * t1025 + t1378 * t979;
t875 = t1639 * pkin(5) + pkin(12) * t1115 - t920;
t1217 = pkin(5) * t1295 - pkin(12) * t1263;
t921 = t1378 * t1025 + t1383 * t979;
t884 = -pkin(5) * t1633 + pkin(12) * t1146 - t1217 * t1295 + t921;
t806 = t1377 * t875 + t1382 * t884;
t1027 = t1101 * t1379 - t1384 * t1388;
t978 = -t1277 * pkin(4) - t1632 * pkin(11) + t1239 * t1302 + t1027;
t935 = -t1146 * pkin(5) - pkin(12) * t1633 + t1217 * t1263 + t978;
t1620 = t1377 * t935;
t805 = t1377 * t884 - t1382 * t875;
t753 = t1377 * t806 - t1382 * t805;
t1619 = t1378 * t753;
t1618 = t1378 * t978;
t1617 = t1382 * t935;
t1616 = t1383 * t753;
t1615 = t1383 * t978;
t1087 = t1128 + t1445;
t1612 = t1087 * t1377;
t1611 = t1087 * t1382;
t1610 = t1100 * t1379;
t1609 = t1100 * t1384;
t1137 = t1206 + t1225;
t1608 = t1137 * t1378;
t1607 = t1137 * t1383;
t1210 = t1249 + t1277;
t1606 = t1210 * t1379;
t1605 = t1210 * t1384;
t1268 = -t1333 - t1595;
t1604 = t1268 * t1380;
t1603 = t1268 * t1385;
t1602 = t1291 * t1377;
t1601 = t1291 * t1382;
t1600 = t1295 * t1378;
t1599 = t1295 * t1383;
t1597 = t1314 * t1379;
t1596 = t1314 * t1384;
t1594 = t1321 * t1380;
t1352 = t1368 * t1552;
t1339 = t1352 + t1562;
t1593 = t1339 * t1371;
t1592 = t1339 * t1374;
t1340 = -t1352 + t1562;
t1591 = t1340 * t1371;
t1590 = t1340 * t1374;
t1589 = t1366 * t1368;
t1588 = t1368 * t1634;
t1587 = t1368 * t1369;
t1401 = qJ(2) * t1579 + t1443;
t1322 = t1373 * t1401 + t1538;
t1586 = t1371 * t1322;
t1576 = t1374 * t1322;
t1572 = t1376 * t1634;
t1571 = t1380 * t1192;
t1570 = t1385 * t1192;
t1565 = qJDD(1) * t1368;
t1559 = -pkin(4) * t1384 - pkin(3);
t1558 = t1379 * t1128;
t1557 = t1384 * t1128;
t1556 = t1379 * t1206;
t1555 = t1384 * t1206;
t1554 = t1380 * t1249;
t1553 = t1385 * t1249;
t1547 = t1373 * t1572;
t1541 = t1371 * t1563;
t1539 = t1373 * t1562;
t754 = t1377 * t805 + t1382 * t806;
t934 = t1027 * t1379 + t1384 * t1028;
t1324 = -t1360 * t1381 - t1386 * t1361;
t1358 = qJDD(1) * t1386 - t1381 * t1634;
t1533 = -pkin(8) * t1358 - g(3) * t1381;
t1267 = -t1631 - t1317;
t1212 = t1267 * t1385 - t1644;
t1531 = pkin(9) * t1212 + t1570;
t1271 = -t1318 - t1631;
t1214 = -t1271 * t1380 + t1603;
t1530 = pkin(9) * t1214 - t1571;
t703 = t1383 * t754 - t1619;
t699 = t1379 * t935 + t1384 * t703;
t702 = t1378 * t754 + t1616;
t1509 = t1380 * t699 - t1385 * t702;
t698 = t1379 * t703 - t1384 * t935;
t658 = -t1372 * t698 + t1375 * t1509;
t677 = t1380 * t702 + t1385 * t699;
t1529 = t1371 * t677 + t1374 * t658;
t836 = t1378 * t920 + t1383 * t921;
t811 = t1379 * t978 + t1384 * t836;
t835 = t1378 * t921 - t1383 * t920;
t1508 = t1380 * t811 - t1385 * t835;
t810 = t1379 * t836 - t1384 * t978;
t729 = -t1372 * t810 + t1375 * t1508;
t764 = t1380 * t835 + t1385 * t811;
t1528 = t1371 * t764 + t1374 * t729;
t1079 = -t1194 - t1195;
t1000 = -t1175 + t1406;
t923 = t1000 * t1382 - t1377 * t996;
t925 = -t1000 * t1377 - t1382 * t996;
t840 = -t1378 * t923 + t1383 * t925;
t819 = t1079 * t1379 + t1384 * t840;
t838 = t1378 * t925 + t1383 * t923;
t1507 = t1380 * t819 - t1385 * t838;
t818 = -t1079 * t1384 + t1379 * t840;
t736 = -t1372 * t818 + t1375 * t1507;
t766 = t1380 * t838 + t1385 * t819;
t1527 = t1371 * t766 + t1374 * t736;
t1127 = -t1195 + t1194;
t995 = (qJD(6) + t1291) * t1198 + t1537;
t922 = -t1377 * t995 + t1382 * t1640;
t924 = -t1377 * t1640 - t1382 * t995;
t839 = -t1378 * t922 + t1383 * t924;
t825 = -t1127 * t1379 + t1384 * t839;
t837 = -t1378 * t924 - t1383 * t922;
t1506 = t1380 * t825 + t1385 * t837;
t824 = t1127 * t1384 + t1379 * t839;
t739 = -t1372 * t824 + t1375 * t1506;
t767 = -t1380 * t837 + t1385 * t825;
t1526 = t1371 * t767 + t1374 * t739;
t1121 = -t1290 - t1194;
t1015 = t1121 * t1377 + t1651;
t1016 = t1121 * t1382 - t1654;
t932 = -t1015 * t1378 + t1016 * t1383;
t872 = t1379 * t995 + t1384 * t932;
t931 = t1015 * t1383 + t1016 * t1378;
t1505 = t1380 * t872 - t1385 * t931;
t871 = t1379 * t932 - t1384 * t995;
t779 = -t1372 * t871 + t1375 * t1505;
t817 = t1380 * t931 + t1385 * t872;
t1525 = t1371 * t817 + t1374 * t779;
t1044 = -qJD(6) * t1198 - t1537;
t991 = t1044 * t1382 + t1196 * t1602;
t992 = -t1044 * t1377 + t1196 * t1601;
t918 = -t1378 * t991 + t1383 * t992;
t899 = t1384 * t918 - t1558;
t916 = -t1378 * t992 - t1383 * t991;
t1501 = t1380 * t899 + t1385 * t916;
t897 = t1379 * t918 + t1557;
t783 = -t1372 * t897 + t1375 * t1501;
t822 = -t1380 * t916 + t1385 * t899;
t1524 = t1371 * t822 + t1374 * t783;
t993 = t1198 * t1601 - t1377 * t1406;
t994 = -t1198 * t1602 - t1382 * t1406;
t919 = -t1378 * t993 + t1383 * t994;
t900 = t1384 * t919 + t1558;
t917 = -t1378 * t994 - t1383 * t993;
t1500 = t1380 * t900 + t1385 * t917;
t898 = t1379 * t919 - t1557;
t784 = -t1372 * t898 + t1375 * t1500;
t823 = -t1380 * t917 + t1385 * t900;
t1523 = t1371 * t823 + t1374 * t784;
t1148 = -t1195 - t1290;
t1042 = t1148 * t1382 - t1612;
t1043 = -t1148 * t1377 - t1611;
t945 = -t1042 * t1378 + t1043 * t1383;
t882 = t1379 * t1640 + t1384 * t945;
t944 = t1042 * t1383 + t1043 * t1378;
t1504 = t1380 * t882 - t1385 * t944;
t881 = t1379 * t945 - t1384 * t1640;
t786 = -t1372 * t881 + t1375 * t1504;
t830 = t1380 * t944 + t1385 * t882;
t1522 = t1371 * t830 + t1374 * t786;
t1173 = -t1195 + t1290;
t1048 = t1173 * t1382 + t1654;
t1050 = -t1173 * t1377 + t1651;
t953 = -t1048 * t1378 + t1050 * t1383;
t893 = -t1000 * t1379 + t1384 * t953;
t951 = -t1048 * t1383 - t1050 * t1378;
t1503 = t1380 * t893 + t1385 * t951;
t891 = t1000 * t1384 + t1379 * t953;
t793 = -t1372 * t891 + t1375 * t1503;
t841 = -t1380 * t951 + t1385 * t893;
t1521 = t1371 * t841 + t1374 * t793;
t1172 = t1194 - t1290;
t1049 = t1172 * t1377 + t1611;
t1051 = t1172 * t1382 - t1612;
t954 = -t1049 * t1378 + t1051 * t1383;
t894 = -t1379 * t996 + t1384 * t954;
t952 = -t1049 * t1383 - t1051 * t1378;
t1502 = t1380 * t894 + t1385 * t952;
t892 = t1379 * t954 + t1384 * t996;
t794 = -t1372 * t892 + t1375 * t1502;
t842 = -t1380 * t952 + t1385 * t894;
t1520 = t1371 * t842 + t1374 * t794;
t1492 = -t1100 * t1385 + t1380 * t934;
t933 = -t1027 * t1384 + t1028 * t1379;
t844 = -t1372 * t933 + t1375 * t1492;
t910 = t1100 * t1380 + t1385 * t934;
t1519 = t1371 * t910 + t1374 * t844;
t1093 = (-t1196 * t1377 - t1198 * t1382) * t1291;
t1094 = (-t1196 * t1382 + t1198 * t1377) * t1291;
t1009 = -t1093 * t1383 - t1094 * t1378;
t1010 = -t1093 * t1378 + t1094 * t1383;
t981 = t1010 * t1384 + t1379 * t1445;
t1497 = t1009 * t1385 + t1380 * t981;
t980 = t1010 * t1379 - t1384 * t1445;
t861 = -t1372 * t980 + t1375 * t1497;
t915 = -t1009 * t1380 + t1385 * t981;
t1518 = t1371 * t915 + t1374 * t861;
t1030 = -t1111 * t1378 + t1115 * t1383;
t1032 = -t1111 * t1383 - t1115 * t1378;
t1157 = t1259 + t1633;
t976 = t1032 * t1384 - t1157 * t1379;
t1495 = -t1030 * t1385 + t1380 * t976;
t975 = t1032 * t1379 + t1157 * t1384;
t864 = -t1372 * t975 + t1375 * t1495;
t926 = t1030 * t1380 + t1385 * t976;
t1517 = t1371 * t926 + t1374 * t864;
t1112 = (-qJD(5) - t1295) * t1263 - t1536;
t1029 = -t1112 * t1378 + t1116 * t1383;
t1031 = t1112 * t1383 + t1116 * t1378;
t1199 = -t1259 + t1633;
t990 = t1031 * t1384 - t1199 * t1379;
t1496 = t1029 * t1385 + t1380 * t990;
t989 = t1031 * t1379 + t1199 * t1384;
t870 = -t1372 * t989 + t1375 * t1496;
t929 = -t1029 * t1380 + t1385 * t990;
t1516 = t1371 * t929 + t1374 * t870;
t1177 = -t1294 - t1633;
t1078 = t1177 * t1383 - t1653;
t1003 = t1078 * t1379 + t1112 * t1384;
t1004 = t1078 * t1384 - t1112 * t1379;
t1077 = t1177 * t1378 + t1650;
t1490 = t1004 * t1380 - t1077 * t1385;
t890 = -t1372 * t1003 + t1375 * t1490;
t947 = t1004 * t1385 + t1077 * t1380;
t1515 = t1371 * t947 + t1374 * t890;
t1193 = -t1259 - t1294;
t1083 = -t1193 * t1378 - t1607;
t1011 = t1083 * t1379 + t1116 * t1384;
t1012 = t1083 * t1384 - t1116 * t1379;
t1082 = t1193 * t1383 - t1608;
t1489 = t1012 * t1380 - t1082 * t1385;
t896 = -t1372 * t1011 + t1375 * t1489;
t957 = t1012 * t1385 + t1082 * t1380;
t1514 = t1371 * t957 + t1374 * t896;
t1221 = -t1259 + t1294;
t1097 = -t1221 * t1378 + t1650;
t1019 = t1097 * t1379 + t1115 * t1384;
t1021 = t1097 * t1384 - t1115 * t1379;
t1095 = -t1221 * t1383 - t1653;
t1488 = t1021 * t1380 + t1095 * t1385;
t906 = -t1372 * t1019 + t1375 * t1488;
t961 = t1021 * t1385 - t1095 * t1380;
t1513 = t1371 * t961 + t1374 * t906;
t1220 = -t1294 + t1633;
t1098 = t1220 * t1383 - t1608;
t1020 = t1098 * t1379 + t1111 * t1384;
t1022 = t1098 * t1384 - t1111 * t1379;
t1096 = -t1220 * t1378 - t1607;
t1487 = t1022 * t1380 + t1096 * t1385;
t907 = -t1372 * t1020 + t1375 * t1487;
t962 = t1022 * t1385 - t1096 * t1380;
t1512 = t1371 * t962 + t1374 * t907;
t1107 = -t1146 * t1378 + t1261 * t1599;
t1067 = t1107 * t1379 + t1555;
t1069 = t1107 * t1384 - t1556;
t1106 = -t1146 * t1383 - t1261 * t1600;
t1481 = t1069 * t1380 + t1106 * t1385;
t939 = -t1372 * t1067 + t1375 * t1481;
t985 = t1069 * t1385 - t1106 * t1380;
t1511 = t1371 * t985 + t1374 * t939;
t1109 = -t1263 * t1600 - t1383 * t1546;
t1068 = t1109 * t1379 - t1555;
t1070 = t1109 * t1384 + t1556;
t1108 = -t1263 * t1599 + t1378 * t1546;
t1480 = t1070 * t1380 + t1108 * t1385;
t940 = -t1372 * t1068 + t1375 * t1480;
t986 = t1070 * t1385 - t1108 * t1380;
t1510 = t1371 * t986 + t1374 * t940;
t1347 = (-t1370 - t1587) * t1634;
t1310 = t1347 * t1374 - t1593;
t1499 = qJ(2) * t1310 + t1576;
t1345 = (-t1370 - t1589) * t1634;
t1312 = -t1345 * t1371 - t1590;
t1498 = qJ(2) * t1312 - t1586;
t1150 = (-t1261 * t1383 + t1263 * t1378) * t1295;
t1118 = t1150 * t1384 + t1225 * t1379;
t1149 = (t1261 * t1378 + t1263 * t1383) * t1295;
t1058 = t1118 * t1385 - t1149 * t1380;
t1117 = t1150 * t1379 - t1225 * t1384;
t1475 = t1118 * t1380 + t1149 * t1385;
t972 = -t1372 * t1117 + t1375 * t1475;
t1494 = t1058 * t1371 + t1374 * t972;
t1186 = -t1545 + t1598;
t1188 = -t1266 - t1227;
t1105 = t1186 * t1384 - t1188 * t1379;
t1213 = t1298 + t1299;
t1071 = t1105 * t1385 - t1213 * t1380;
t1103 = t1186 * t1379 + t1188 * t1384;
t1476 = t1105 * t1380 + t1213 * t1385;
t988 = -t1372 * t1103 + t1375 * t1476;
t1493 = t1071 * t1371 + t1374 * t988;
t1102 = t1187 * t1384 - t1379 * t1647;
t1104 = -t1187 * t1379 - t1384 * t1647;
t1246 = -t1299 + t1298;
t1477 = t1104 * t1380 + t1246 * t1385;
t1002 = -t1372 * t1102 + t1375 * t1477;
t1076 = t1104 * t1385 - t1246 * t1380;
t1491 = t1002 * t1374 + t1076 * t1371;
t1473 = -t1385 * t1132 + t1380 * t1133;
t1034 = t1372 * t1192 + t1375 * t1473;
t1064 = t1132 * t1380 + t1133 * t1385;
t1486 = t1034 * t1374 + t1064 * t1371;
t1228 = -t1632 - t1298;
t1139 = t1228 * t1379 + t1649;
t1140 = t1228 * t1384 - t1652;
t1471 = t1140 * t1380 - t1385 * t1647;
t1038 = -t1372 * t1139 + t1375 * t1471;
t1081 = t1140 * t1385 + t1380 * t1647;
t1485 = t1038 * t1374 + t1081 * t1371;
t1234 = -t1299 - t1632;
t1153 = t1234 * t1384 - t1606;
t1154 = -t1234 * t1379 - t1605;
t1469 = t1154 * t1380 - t1187 * t1385;
t1041 = -t1372 * t1153 + t1375 * t1469;
t1085 = t1154 * t1385 + t1187 * t1380;
t1484 = t1041 * t1374 + t1085 * t1371;
t1265 = -t1299 + t1632;
t1163 = t1265 * t1384 + t1652;
t1165 = -t1265 * t1379 + t1649;
t1466 = t1165 * t1380 + t1188 * t1385;
t1054 = -t1372 * t1163 + t1375 * t1466;
t1091 = t1165 * t1385 - t1188 * t1380;
t1483 = t1054 * t1374 + t1091 * t1371;
t1264 = t1298 - t1632;
t1164 = t1264 * t1379 + t1605;
t1166 = t1264 * t1384 - t1606;
t1465 = t1166 * t1380 - t1186 * t1385;
t1055 = -t1372 * t1164 + t1375 * t1465;
t1092 = t1166 * t1385 + t1186 * t1380;
t1482 = t1055 * t1374 + t1092 * t1371;
t1179 = t1300 * t1597 - t1384 * t1545;
t1180 = t1300 * t1596 + t1379 * t1545;
t1442 = t1180 * t1380 + t1553;
t1074 = -t1372 * t1179 + t1375 * t1442;
t1130 = t1180 * t1385 - t1554;
t1479 = t1074 * t1374 + t1130 * t1371;
t1181 = t1227 * t1379 + t1302 * t1596;
t1182 = t1227 * t1384 - t1302 * t1597;
t1441 = t1182 * t1380 - t1553;
t1075 = -t1372 * t1181 + t1375 * t1441;
t1131 = t1182 * t1385 + t1554;
t1478 = t1075 * t1374 + t1131 * t1371;
t1207 = (-t1300 * t1379 - t1302 * t1384) * t1314;
t1208 = (-t1300 * t1384 + t1302 * t1379) * t1314;
t1460 = t1208 * t1380 - t1277 * t1385;
t1123 = -t1372 * t1207 + t1375 * t1460;
t1174 = t1208 * t1385 + t1277 * t1380;
t1474 = t1123 * t1374 + t1174 * t1371;
t1260 = -t1317 - t1318;
t1245 = t1305 + t1282;
t1396 = (-qJD(3) + t1334) * t1321 - t1438;
t1457 = -t1245 * t1385 + t1380 * t1396;
t1135 = -t1372 * t1260 + t1375 * t1457;
t1191 = t1245 * t1380 + t1385 * t1396;
t1472 = t1135 * t1374 + t1191 * t1371;
t1283 = t1318 - t1317;
t1458 = -t1240 * t1380 + t1244 * t1385;
t1152 = -t1372 * t1283 + t1375 * t1458;
t1190 = -t1240 * t1385 - t1244 * t1380;
t1470 = t1152 * t1374 + t1190 * t1371;
t1456 = t1267 * t1380 + t1643;
t1156 = -t1372 * t1240 + t1375 * t1456;
t1468 = t1156 * t1374 + t1212 * t1371;
t1243 = -t1319 * t1569 + t1394;
t1455 = t1271 * t1385 + t1604;
t1159 = -t1372 * t1243 + t1375 * t1455;
t1467 = t1159 * t1374 + t1214 * t1371;
t1304 = -t1318 + t1631;
t1453 = t1304 * t1385 + t1644;
t1169 = -t1372 * t1245 + t1375 * t1453;
t1229 = -t1304 * t1380 + t1643;
t1464 = t1169 * t1374 + t1229 * t1371;
t1303 = t1317 - t1631;
t1454 = t1303 * t1380 - t1603;
t1170 = -t1372 * t1396 + t1375 * t1454;
t1230 = t1303 * t1385 + t1604;
t1463 = t1170 * t1374 + t1230 * t1371;
t1397 = t1385 * t1400;
t1201 = t1375 * t1397 + (t1321 * t1372 + t1334 * t1574) * t1319;
t1236 = t1305 * t1385 - t1380 * t1400;
t1462 = t1201 * t1374 + t1236 * t1371;
t1203 = t1282 * t1574 + (-t1319 * t1372 + t1334 * t1573) * t1321;
t1238 = t1282 * t1385 - t1334 * t1594;
t1461 = t1203 * t1374 + t1238 * t1371;
t1439 = t1334 * (-t1319 * t1380 - t1321 * t1385);
t1232 = -t1372 * t1333 + t1375 * t1439;
t1250 = (-t1319 * t1385 + t1594) * t1334;
t1459 = t1232 * t1374 + t1250 * t1371;
t1393 = (-pkin(1) * qJD(1) + t1373 * t1629) * qJD(1) + t1403;
t1398 = t1376 * t1401;
t1296 = (-t1398 + t1622) * t1374 + t1393 * t1371;
t1297 = t1371 * t1398 + t1374 * t1393 - t1363;
t1452 = -t1374 * t1296 + t1371 * t1297;
t1237 = t1296 * t1371 + t1297 * t1374;
t1354 = t1374 * t1547;
t1335 = t1354 + t1542;
t1353 = t1371 * t1547;
t1338 = -t1353 + t1540;
t1451 = t1335 * t1374 + t1338 * t1371;
t1336 = -t1354 + t1542;
t1337 = t1353 + t1540;
t1450 = -t1336 * t1374 + t1337 * t1371;
t1344 = (t1370 - t1589) * t1634;
t1449 = t1344 * t1374 + t1593;
t1448 = t1347 * t1371 + t1592;
t1447 = t1345 * t1374 - t1591;
t1346 = (-t1370 + t1587) * t1634;
t1446 = t1346 * t1371 + t1590;
t1323 = t1360 * t1386 - t1381 * t1361;
t741 = -pkin(5) * t935 + pkin(12) * t754;
t678 = -pkin(11) * t702 - pkin(12) * t1616 - t1378 * t741;
t689 = -pkin(4) * t702 - pkin(5) * t753;
t654 = -pkin(10) * t698 - t1379 * t689 + t1384 * t678;
t656 = -pkin(3) * t698 + pkin(4) * t935 - pkin(11) * t703 + pkin(12) * t1619 - t1383 * t741;
t1435 = pkin(9) * t677 + t1380 * t654 + t1385 * t656;
t733 = -pkin(5) * t1079 + pkin(12) * t925 + t754;
t740 = -pkin(12) * t923 - t753;
t692 = -pkin(11) * t838 - t1378 * t733 + t1383 * t740;
t799 = -pkin(4) * t838 - pkin(5) * t923;
t682 = -pkin(10) * t818 - t1379 * t799 + t1384 * t692;
t685 = -pkin(3) * t818 + pkin(4) * t1079 - pkin(11) * t840 - t1378 * t740 - t1383 * t733;
t1434 = pkin(9) * t766 + t1380 * t682 + t1385 * t685;
t850 = -pkin(5) * t995 + pkin(12) * t1016 - t1617;
t880 = -pkin(12) * t1015 + t1620;
t771 = -pkin(11) * t931 - t1378 * t850 + t1383 * t880;
t772 = -pkin(4) * t931 - pkin(5) * t1015 + t805;
t710 = -pkin(10) * t871 - t1379 * t772 + t1384 * t771;
t744 = -pkin(3) * t871 + pkin(4) * t995 - pkin(11) * t932 - t1378 * t880 - t1383 * t850;
t1433 = pkin(9) * t817 + t1380 * t710 + t1385 * t744;
t776 = -pkin(4) * t944 - pkin(5) * t1042 + t806;
t856 = -pkin(5) * t1640 + pkin(12) * t1043 + t1620;
t887 = -pkin(12) * t1042 + t1617;
t777 = -pkin(11) * t944 - t1378 * t856 + t1383 * t887;
t715 = -pkin(10) * t881 - t1379 * t776 + t1384 * t777;
t749 = -pkin(3) * t881 + pkin(4) * t1640 - pkin(11) * t945 - t1378 * t887 - t1383 * t856;
t1432 = pkin(9) * t830 + t1380 * t715 + t1385 * t749;
t734 = -pkin(10) * t810 + (-pkin(11) * t1384 + t1625) * t835;
t759 = -pkin(3) * t810 + pkin(4) * t978 - pkin(11) * t836;
t1431 = pkin(9) * t764 + t1380 * t734 + t1385 * t759;
t815 = -pkin(11) * t1030 - t835;
t780 = -pkin(10) * t975 + t1030 * t1625 + t1384 * t815;
t797 = -pkin(3) * t975 - pkin(4) * t1157 - pkin(11) * t1032 - t836;
t1430 = pkin(9) * t926 + t1380 * t780 + t1385 * t797;
t886 = -pkin(4) * t1077 + t920;
t941 = -pkin(11) * t1077 + t1618;
t807 = -pkin(10) * t1003 - t1379 * t886 + t1384 * t941;
t865 = -pkin(3) * t1003 - pkin(4) * t1112 - pkin(11) * t1078 + t1615;
t1429 = pkin(9) * t947 + t1380 * t807 + t1385 * t865;
t888 = -pkin(4) * t1082 + t921;
t943 = -pkin(11) * t1082 + t1615;
t812 = -pkin(10) * t1011 - t1379 * t888 + t1384 * t943;
t868 = -pkin(3) * t1011 - pkin(4) * t1116 - pkin(11) * t1083 - t1618;
t1428 = pkin(9) * t957 + t1380 * t812 + t1385 * t868;
t1046 = -pkin(10) * t1139 + t1610;
t969 = -pkin(3) * t1139 + t1027;
t1426 = pkin(9) * t1081 + t1046 * t1380 + t1385 * t969;
t1056 = -pkin(10) * t1153 + t1609;
t970 = -pkin(3) * t1153 + t1028;
t1425 = pkin(9) * t1085 + t1056 * t1380 + t1385 * t970;
t651 = -pkin(3) * t702 + pkin(10) * t699 + t1379 * t678 + t1384 * t689;
t657 = t1372 * t1509 + t1375 * t698;
t636 = -pkin(2) * t657 - t1372 * t651 + t1375 * t1435;
t638 = -t1380 * t656 + t1385 * t654 + (-t1372 * t657 - t1375 * t658) * pkin(9);
t652 = -t1371 * t658 + t1374 * t677;
t1424 = qJ(2) * t652 + t1371 * t638 + t1374 * t636;
t676 = -pkin(3) * t838 + pkin(10) * t819 + t1379 * t692 + t1384 * t799;
t735 = t1372 * t1507 + t1375 * t818;
t649 = -pkin(2) * t735 - t1372 * t676 + t1375 * t1434;
t653 = -t1380 * t685 + t1385 * t682 + (-t1372 * t735 - t1375 * t736) * pkin(9);
t701 = -t1371 * t736 + t1374 * t766;
t1423 = qJ(2) * t701 + t1371 * t653 + t1374 * t649;
t705 = -pkin(3) * t931 + pkin(10) * t872 + t1379 * t771 + t1384 * t772;
t778 = t1372 * t1505 + t1375 * t871;
t660 = -pkin(2) * t778 - t1372 * t705 + t1375 * t1433;
t674 = -t1380 * t744 + t1385 * t710 + (-t1372 * t778 - t1375 * t779) * pkin(9);
t743 = -t1371 * t779 + t1374 * t817;
t1422 = qJ(2) * t743 + t1371 * t674 + t1374 * t660;
t720 = pkin(10) * t811 + (-pkin(11) * t1379 + t1559) * t835;
t728 = t1372 * t1508 + t1375 * t810;
t662 = -pkin(2) * t728 - t1372 * t720 + t1375 * t1431;
t672 = -t1380 * t759 + t1385 * t734 + (-t1372 * t728 - t1375 * t729) * pkin(9);
t697 = -t1371 * t729 + t1374 * t764;
t1421 = qJ(2) * t697 + t1371 * t672 + t1374 * t662;
t708 = -pkin(3) * t944 + pkin(10) * t882 + t1379 * t777 + t1384 * t776;
t785 = t1372 * t1504 + t1375 * t881;
t668 = -pkin(2) * t785 - t1372 * t708 + t1375 * t1432;
t681 = -t1380 * t749 + t1385 * t715 + (-t1372 * t785 - t1375 * t786) * pkin(9);
t752 = -t1371 * t786 + t1374 * t830;
t1420 = qJ(2) * t752 + t1371 * t681 + t1374 * t668;
t775 = pkin(10) * t976 + t1030 * t1559 + t1379 * t815;
t863 = t1372 * t1495 + t1375 * t975;
t696 = -pkin(2) * t863 - t1372 * t775 + t1375 * t1430;
t709 = -t1380 * t797 + t1385 * t780 + (-t1372 * t863 - t1375 * t864) * pkin(9);
t809 = -t1371 * t864 + t1374 * t926;
t1419 = qJ(2) * t809 + t1371 * t709 + t1374 * t696;
t802 = -pkin(3) * t1077 + pkin(10) * t1004 + t1379 * t941 + t1384 * t886;
t889 = t1375 * t1003 + t1372 * t1490;
t712 = -pkin(2) * t889 - t1372 * t802 + t1375 * t1429;
t732 = -t1380 * t865 + t1385 * t807 + (-t1372 * t889 - t1375 * t890) * pkin(9);
t834 = -t1371 * t890 + t1374 * t947;
t1418 = qJ(2) * t834 + t1371 * t732 + t1374 * t712;
t803 = -pkin(3) * t1082 + pkin(10) * t1012 + t1379 * t943 + t1384 * t888;
t895 = t1375 * t1011 + t1372 * t1489;
t719 = -pkin(2) * t895 - t1372 * t803 + t1375 * t1428;
t737 = -t1380 * t868 + t1385 * t812 + (-t1372 * t895 - t1375 * t896) * pkin(9);
t847 = -t1371 * t896 + t1374 * t957;
t1417 = qJ(2) * t847 + t1371 * t737 + t1374 * t719;
t1402 = pkin(9) * t910 + (-pkin(10) * t1380 - t1626) * t933;
t843 = t1372 * t1492 + t1375 * t933;
t911 = -pkin(3) * t1100 + pkin(10) * t934;
t747 = -pkin(2) * t843 - t1372 * t911 + t1375 * t1402;
t748 = (-pkin(10) * t1385 + t1627) * t933 + (-t1372 * t843 - t1375 * t844) * pkin(9);
t798 = -t1371 * t844 + t1374 * t910;
t1416 = qJ(2) * t798 + t1371 * t748 + t1374 * t747;
t912 = -pkin(10) * t1103 - t933;
t1405 = pkin(9) * t1071 - t1103 * t1626 + t1380 * t912;
t903 = pkin(3) * t1213 + pkin(10) * t1105 + t934;
t987 = t1375 * t1103 + t1372 * t1476;
t788 = -pkin(2) * t987 - t1372 * t903 + t1375 * t1405;
t816 = t1103 * t1627 + t1385 * t912 + (-t1372 * t987 - t1375 * t988) * pkin(9);
t942 = t1071 * t1374 - t1371 * t988;
t1415 = qJ(2) * t942 + t1371 * t816 + t1374 * t788;
t1005 = -pkin(3) * t1647 + pkin(10) * t1140 - t1609;
t1037 = t1375 * t1139 + t1372 * t1471;
t829 = -pkin(2) * t1037 - t1005 * t1372 + t1375 * t1426;
t853 = t1385 * t1046 - t1380 * t969 + (-t1037 * t1372 - t1038 * t1375) * pkin(9);
t960 = -t1038 * t1371 + t1081 * t1374;
t1414 = qJ(2) * t960 + t1371 * t853 + t1374 * t829;
t1008 = -pkin(3) * t1187 + pkin(10) * t1154 + t1610;
t1040 = t1375 * t1153 + t1372 * t1469;
t833 = -pkin(2) * t1040 - t1008 * t1372 + t1375 * t1425;
t857 = t1385 * t1056 - t1380 * t970 + (-t1040 * t1372 - t1041 * t1375) * pkin(9);
t963 = -t1041 * t1371 + t1085 * t1374;
t1413 = qJ(2) * t963 + t1371 * t857 + t1374 * t833;
t1033 = -t1375 * t1192 + t1372 * t1473;
t936 = (-t1033 * t1372 - t1034 * t1375) * pkin(9);
t948 = -t1034 * t1371 + t1064 * t1374;
t949 = -pkin(2) * t1033 + t1064 * t1623;
t1412 = qJ(2) * t948 + t1371 * t936 + t1374 * t949;
t1411 = pkin(9) * t1191 + t1064;
t1080 = -t1135 * t1371 + t1191 * t1374;
t1134 = t1375 * t1260 + t1372 * t1457;
t964 = (-t1134 * t1372 - t1135 * t1375) * pkin(9) - t1473;
t968 = -pkin(2) * t1134 + t1375 * t1411;
t1410 = qJ(2) * t1080 + t1371 * t964 + t1374 * t968;
t1155 = t1375 * t1240 + t1372 * t1456;
t1007 = -pkin(2) * t1155 + t1372 * t1132 + t1375 * t1531;
t1047 = -t1571 + (-t1155 * t1372 - t1156 * t1375) * pkin(9);
t1110 = -t1156 * t1371 + t1212 * t1374;
t1409 = qJ(2) * t1110 + t1007 * t1374 + t1047 * t1371;
t1158 = t1375 * t1243 + t1372 * t1455;
t1014 = -pkin(2) * t1158 + t1372 * t1133 + t1375 * t1530;
t1057 = -t1570 + (-t1158 * t1372 - t1159 * t1375) * pkin(9);
t1124 = -t1159 * t1371 + t1214 * t1374;
t1408 = qJ(2) * t1124 + t1014 * t1374 + t1057 * t1371;
t1306 = t1336 * t1371 + t1337 * t1374;
t1407 = qJ(2) * t1306 + t1237;
t1357 = t1381 * qJDD(1) + t1386 * t1634;
t1343 = -pkin(8) * t1357 + g(3) * t1386;
t1342 = t1566 * t1588;
t1341 = (t1366 - t1369) * t1588;
t1331 = t1566 * t1547;
t1330 = (-t1366 * t1572 + t1541) * t1373;
t1329 = (-t1369 * t1572 - t1541) * t1373;
t1316 = t1366 * t1539 + t1642;
t1315 = t1369 * t1539 - t1642;
t1311 = -t1344 * t1371 + t1592;
t1309 = t1346 * t1374 - t1591;
t1307 = -t1335 * t1371 + t1338 * t1374;
t1289 = -t1373 * t1335 + t1376 * t1447;
t1288 = -t1373 * t1336 + t1376 * t1449;
t1287 = t1373 * t1338 + t1376 * t1448;
t1286 = -t1373 * t1337 + t1376 * t1446;
t1285 = t1376 * t1335 + t1373 * t1447;
t1284 = -t1376 * t1338 + t1373 * t1448;
t1281 = -t1373 * t1341 + t1376 * t1451;
t1280 = t1373 * t1342 + t1376 * t1450;
t1279 = -t1376 * t1342 + t1373 * t1450;
t1254 = -t1381 * t1289 + t1312 * t1386;
t1253 = -t1381 * t1287 + t1310 * t1386;
t1252 = t1289 * t1386 + t1381 * t1312;
t1251 = t1287 * t1386 + t1381 * t1310;
t1248 = -t1381 * t1280 + t1306 * t1386;
t1247 = t1280 * t1386 + t1381 * t1306;
t1231 = t1375 * t1333 + t1372 * t1439;
t1219 = t1373 * t1322 + t1376 * t1452;
t1218 = -t1376 * t1322 + t1373 * t1452;
t1216 = -t1576 + (-t1285 * t1373 - t1289 * t1376) * qJ(2);
t1215 = -t1586 + (-t1284 * t1373 - t1287 * t1376) * qJ(2);
t1205 = -pkin(1) * t1284 + t1373 * t1296 + t1376 * t1499;
t1204 = -pkin(1) * t1285 + t1373 * t1297 + t1376 * t1498;
t1202 = t1282 * t1581 + (t1319 * t1375 + t1334 * t1580) * t1321;
t1200 = t1372 * t1397 + (-t1321 * t1375 + t1334 * t1581) * t1319;
t1183 = -pkin(1) * t1279 + t1376 * t1407;
t1178 = -t1232 * t1371 + t1250 * t1374;
t1171 = (-t1279 * t1373 - t1280 * t1376) * qJ(2) - t1452;
t1168 = t1372 * t1454 + t1375 * t1396;
t1167 = t1375 * t1245 + t1372 * t1453;
t1162 = qJ(2) * t1237 * t1376 - pkin(1) * t1218;
t1161 = -t1381 * t1219 + t1237 * t1386;
t1160 = t1219 * t1386 + t1381 * t1237;
t1151 = t1375 * t1283 + t1372 * t1458;
t1145 = (-t1218 * t1373 - t1219 * t1376) * qJ(2);
t1143 = -t1203 * t1371 + t1238 * t1374;
t1142 = -t1201 * t1371 + t1236 * t1374;
t1129 = -t1373 * t1231 + t1376 * t1459;
t1126 = -t1170 * t1371 + t1230 * t1374;
t1125 = -t1169 * t1371 + t1229 * t1374;
t1122 = t1375 * t1207 + t1372 * t1460;
t1090 = -t1373 * t1202 + t1376 * t1461;
t1089 = -t1373 * t1200 + t1376 * t1462;
t1084 = -t1152 * t1371 + t1190 * t1374;
t1073 = t1375 * t1181 + t1372 * t1441;
t1072 = t1375 * t1179 + t1372 * t1442;
t1066 = -t1373 * t1168 + t1376 * t1463;
t1065 = -t1373 * t1167 + t1376 * t1464;
t1063 = -t1123 * t1371 + t1174 * t1374;
t1062 = -t1373 * t1158 + t1376 * t1467;
t1061 = t1376 * t1158 + t1373 * t1467;
t1060 = -t1373 * t1155 + t1376 * t1468;
t1059 = t1376 * t1155 + t1373 * t1468;
t1053 = t1375 * t1164 + t1372 * t1465;
t1052 = t1375 * t1163 + t1372 * t1466;
t1039 = -t1373 * t1151 + t1376 * t1470;
t1036 = -t1373 * t1134 + t1376 * t1472;
t1035 = t1376 * t1134 + t1373 * t1472;
t1018 = -t1075 * t1371 + t1131 * t1374;
t1017 = -t1074 * t1371 + t1130 * t1374;
t1013 = pkin(2) * t1159 - t1375 * t1133 + t1372 * t1530;
t1006 = pkin(2) * t1156 - t1375 * t1132 + t1372 * t1531;
t1001 = t1375 * t1102 + t1372 * t1477;
t984 = -t1373 * t1122 + t1376 * t1474;
t983 = -t1381 * t1062 + t1124 * t1386;
t982 = t1062 * t1386 + t1381 * t1124;
t974 = -t1381 * t1060 + t1110 * t1386;
t973 = t1060 * t1386 + t1381 * t1110;
t971 = t1375 * t1117 + t1372 * t1475;
t967 = pkin(2) * t1135 + t1372 * t1411;
t966 = -t1055 * t1371 + t1092 * t1374;
t965 = -t1054 * t1371 + t1091 * t1374;
t959 = -t1381 * t1036 + t1080 * t1386;
t958 = t1036 * t1386 + t1381 * t1080;
t956 = -t1373 * t1073 + t1376 * t1478;
t955 = -t1373 * t1072 + t1376 * t1479;
t950 = pkin(2) * t1034 + t1064 * t1624;
t946 = -t1002 * t1371 + t1076 * t1374;
t938 = t1375 * t1068 + t1372 * t1480;
t937 = t1375 * t1067 + t1372 * t1481;
t930 = t1058 * t1374 - t1371 * t972;
t928 = -t1373 * t1053 + t1376 * t1482;
t927 = -t1373 * t1052 + t1376 * t1483;
t914 = -t1373 * t1040 + t1376 * t1484;
t913 = t1376 * t1040 + t1373 * t1484;
t909 = -t1373 * t1037 + t1376 * t1485;
t908 = t1376 * t1037 + t1373 * t1485;
t905 = t1375 * t1020 + t1372 * t1487;
t904 = t1375 * t1019 + t1372 * t1488;
t902 = -t1373 * t1033 + t1376 * t1486;
t901 = t1376 * t1033 + t1373 * t1486;
t885 = -t1373 * t1001 + t1376 * t1491;
t879 = -t1373 * t987 + t1376 * t1493;
t878 = t1373 * t1493 + t1376 * t987;
t877 = -t1371 * t940 + t1374 * t986;
t876 = -t1371 * t939 + t1374 * t985;
t869 = t1372 * t1496 + t1375 * t989;
t867 = -t1371 * t1014 + t1374 * t1057 + (-t1061 * t1373 - t1062 * t1376) * qJ(2);
t866 = -t1373 * t971 + t1376 * t1494;
t862 = -t1371 * t1007 + t1374 * t1047 + (-t1059 * t1373 - t1060 * t1376) * qJ(2);
t860 = t1372 * t1497 + t1375 * t980;
t859 = -t1381 * t914 + t1386 * t963;
t858 = t1381 * t963 + t1386 * t914;
t855 = -t1381 * t909 + t1386 * t960;
t854 = t1381 * t960 + t1386 * t909;
t852 = -t1371 * t907 + t1374 * t962;
t851 = -t1371 * t906 + t1374 * t961;
t849 = -pkin(1) * t1061 - t1373 * t1013 + t1376 * t1408;
t848 = -pkin(1) * t1059 - t1373 * t1006 + t1376 * t1409;
t846 = -t1381 * t902 + t1386 * t948;
t845 = t1381 * t948 + t1386 * t902;
t832 = pkin(2) * t1041 + t1008 * t1375 + t1372 * t1425;
t831 = -t1371 * t968 + t1374 * t964 + (-t1035 * t1373 - t1036 * t1376) * qJ(2);
t828 = pkin(2) * t1038 + t1005 * t1375 + t1372 * t1426;
t827 = -t1381 * t879 + t1386 * t942;
t826 = t1381 * t942 + t1386 * t879;
t821 = -t1373 * t938 + t1376 * t1510;
t820 = -t1373 * t937 + t1376 * t1511;
t814 = -t1371 * t870 + t1374 * t929;
t813 = -pkin(1) * t1035 - t1373 * t967 + t1376 * t1410;
t808 = -t1371 * t861 + t1374 * t915;
t801 = -t1373 * t905 + t1376 * t1512;
t800 = -t1373 * t904 + t1376 * t1513;
t796 = -t1373 * t895 + t1376 * t1514;
t795 = t1373 * t1514 + t1376 * t895;
t792 = t1372 * t1502 + t1375 * t892;
t791 = t1372 * t1503 + t1375 * t891;
t790 = -t1373 * t889 + t1376 * t1515;
t789 = t1373 * t1515 + t1376 * t889;
t787 = pkin(2) * t988 + t1372 * t1405 + t1375 * t903;
t782 = t1372 * t1500 + t1375 * t898;
t781 = t1372 * t1501 + t1375 * t897;
t774 = -t1373 * t869 + t1376 * t1516;
t773 = -t1371 * t949 + t1374 * t936 + (-t1373 * t901 - t1376 * t902) * qJ(2);
t770 = -t1373 * t863 + t1376 * t1517;
t769 = t1373 * t1517 + t1376 * t863;
t768 = -t1373 * t860 + t1376 * t1518;
t765 = -pkin(1) * t901 - t1373 * t950 + t1376 * t1412;
t763 = -t1373 * t843 + t1376 * t1519;
t762 = t1373 * t1519 + t1376 * t843;
t761 = -t1381 * t796 + t1386 * t847;
t760 = t1381 * t847 + t1386 * t796;
t758 = -t1371 * t794 + t1374 * t842;
t757 = -t1371 * t793 + t1374 * t841;
t756 = -t1381 * t790 + t1386 * t834;
t755 = t1381 * t834 + t1386 * t790;
t751 = -t1371 * t784 + t1374 * t823;
t750 = -t1371 * t783 + t1374 * t822;
t746 = pkin(2) * t844 + t1372 * t1402 + t1375 * t911;
t745 = -t1371 * t833 + t1374 * t857 + (-t1373 * t913 - t1376 * t914) * qJ(2);
t742 = -t1371 * t829 + t1374 * t853 + (-t1373 * t908 - t1376 * t909) * qJ(2);
t738 = t1372 * t1506 + t1375 * t824;
t731 = -t1381 * t770 + t1386 * t809;
t730 = t1381 * t809 + t1386 * t770;
t727 = -pkin(1) * t913 - t1373 * t832 + t1376 * t1413;
t726 = -pkin(1) * t908 - t1373 * t828 + t1376 * t1414;
t725 = -t1381 * t763 + t1386 * t798;
t724 = t1381 * t798 + t1386 * t763;
t723 = -t1371 * t788 + t1374 * t816 + (-t1373 * t878 - t1376 * t879) * qJ(2);
t722 = -t1373 * t792 + t1376 * t1520;
t721 = -t1373 * t791 + t1376 * t1521;
t718 = pkin(2) * t896 + t1372 * t1428 + t1375 * t803;
t717 = -t1373 * t785 + t1376 * t1522;
t716 = t1373 * t1522 + t1376 * t785;
t714 = -t1373 * t782 + t1376 * t1523;
t713 = -t1373 * t781 + t1376 * t1524;
t711 = pkin(2) * t890 + t1372 * t1429 + t1375 * t802;
t707 = -t1373 * t778 + t1376 * t1525;
t706 = t1373 * t1525 + t1376 * t778;
t704 = -t1371 * t739 + t1374 * t767;
t700 = -pkin(1) * t878 - t1373 * t787 + t1376 * t1415;
t695 = pkin(2) * t864 + t1372 * t1430 + t1375 * t775;
t694 = -t1381 * t717 + t1386 * t752;
t693 = t1381 * t752 + t1386 * t717;
t691 = -t1381 * t707 + t1386 * t743;
t690 = t1381 * t743 + t1386 * t707;
t688 = -t1373 * t738 + t1376 * t1526;
t687 = -t1373 * t735 + t1376 * t1527;
t686 = t1373 * t1527 + t1376 * t735;
t684 = -t1373 * t728 + t1376 * t1528;
t683 = t1373 * t1528 + t1376 * t728;
t680 = -t1371 * t719 + t1374 * t737 + (-t1373 * t795 - t1376 * t796) * qJ(2);
t679 = -t1371 * t747 + t1374 * t748 + (-t1373 * t762 - t1376 * t763) * qJ(2);
t675 = -t1371 * t712 + t1374 * t732 + (-t1373 * t789 - t1376 * t790) * qJ(2);
t673 = -pkin(1) * t762 - t1373 * t746 + t1376 * t1416;
t671 = -t1381 * t687 + t1386 * t701;
t670 = t1381 * t701 + t1386 * t687;
t669 = -pkin(1) * t795 - t1373 * t718 + t1376 * t1417;
t667 = pkin(2) * t786 + t1372 * t1432 + t1375 * t708;
t666 = -pkin(1) * t789 - t1373 * t711 + t1376 * t1418;
t665 = -t1381 * t684 + t1386 * t697;
t664 = t1381 * t697 + t1386 * t684;
t663 = -t1371 * t696 + t1374 * t709 + (-t1373 * t769 - t1376 * t770) * qJ(2);
t661 = pkin(2) * t729 + t1372 * t1431 + t1375 * t720;
t659 = pkin(2) * t779 + t1372 * t1433 + t1375 * t705;
t655 = -pkin(1) * t769 - t1373 * t695 + t1376 * t1419;
t650 = -t1371 * t668 + t1374 * t681 + (-t1373 * t716 - t1376 * t717) * qJ(2);
t648 = pkin(2) * t736 + t1372 * t1434 + t1375 * t676;
t647 = -t1371 * t660 + t1374 * t674 + (-t1373 * t706 - t1376 * t707) * qJ(2);
t646 = -t1373 * t657 + t1376 * t1529;
t645 = t1373 * t1529 + t1376 * t657;
t644 = -pkin(1) * t716 - t1373 * t667 + t1376 * t1420;
t643 = -t1371 * t662 + t1374 * t672 + (-t1373 * t683 - t1376 * t684) * qJ(2);
t642 = -pkin(1) * t706 - t1373 * t659 + t1376 * t1422;
t641 = -pkin(1) * t683 - t1373 * t661 + t1376 * t1421;
t640 = -t1381 * t646 + t1386 * t652;
t639 = t1381 * t652 + t1386 * t646;
t637 = -t1371 * t649 + t1374 * t653 + (-t1373 * t686 - t1376 * t687) * qJ(2);
t635 = pkin(2) * t658 + t1372 * t1435 + t1375 * t651;
t634 = -pkin(1) * t686 - t1373 * t648 + t1376 * t1423;
t633 = -t1371 * t636 + t1374 * t638 + (-t1373 * t645 - t1376 * t646) * qJ(2);
t632 = -pkin(1) * t645 - t1373 * t635 + t1376 * t1424;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1357, -t1358, 0, t1324, 0, 0, 0, 0, 0, 0, t1253, t1254, t1248, t1161, 0, 0, 0, 0, 0, 0, t974, t983, t959, t846, 0, 0, 0, 0, 0, 0, t855, t859, t827, t725, 0, 0, 0, 0, 0, 0, t756, t761, t731, t665, 0, 0, 0, 0, 0, 0, t691, t694, t671, t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1358, -t1357, 0, t1323, 0, 0, 0, 0, 0, 0, t1251, t1252, t1247, t1160, 0, 0, 0, 0, 0, 0, t973, t982, t958, t845, 0, 0, 0, 0, 0, 0, t854, t858, t826, t724, 0, 0, 0, 0, 0, 0, t755, t760, t730, t664, 0, 0, 0, 0, 0, 0, t690, t693, t670, t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1284, t1285, t1279, t1218, 0, 0, 0, 0, 0, 0, t1059, t1061, t1035, t901, 0, 0, 0, 0, 0, 0, t908, t913, t878, t762, 0, 0, 0, 0, 0, 0, t789, t795, t769, t683, 0, 0, 0, 0, 0, 0, t706, t716, t686, t645; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1358, 0, -t1357, 0, t1533, -t1343, -t1323, -pkin(8) * t1323, -t1381 * t1316 + t1330 * t1386, -t1381 * t1281 + t1307 * t1386, -t1381 * t1288 + t1311 * t1386, -t1381 * t1315 + t1329 * t1386, -t1381 * t1286 + t1309 * t1386, t1331 * t1386 + t1381 * t1539, -pkin(8) * t1251 - t1381 * t1205 + t1215 * t1386, -pkin(8) * t1252 - t1381 * t1204 + t1216 * t1386, -pkin(8) * t1247 + t1171 * t1386 - t1381 * t1183, -pkin(8) * t1160 + t1145 * t1386 - t1381 * t1162, -t1381 * t1090 + t1143 * t1386, -t1381 * t1039 + t1084 * t1386, -t1381 * t1065 + t1125 * t1386, -t1381 * t1089 + t1142 * t1386, -t1381 * t1066 + t1126 * t1386, -t1381 * t1129 + t1178 * t1386, -pkin(8) * t973 - t1381 * t848 + t1386 * t862, -pkin(8) * t982 - t1381 * t849 + t1386 * t867, -pkin(8) * t958 - t1381 * t813 + t1386 * t831, -pkin(8) * t845 - t1381 * t765 + t1386 * t773, t1018 * t1386 - t1381 * t956, -t1381 * t885 + t1386 * t946, -t1381 * t927 + t1386 * t965, t1017 * t1386 - t1381 * t955, -t1381 * t928 + t1386 * t966, t1063 * t1386 - t1381 * t984, -pkin(8) * t854 - t1381 * t726 + t1386 * t742, -pkin(8) * t858 - t1381 * t727 + t1386 * t745, -pkin(8) * t826 - t1381 * t700 + t1386 * t723, -pkin(8) * t724 - t1381 * t673 + t1386 * t679, -t1381 * t821 + t1386 * t877, -t1381 * t774 + t1386 * t814, -t1381 * t800 + t1386 * t851, -t1381 * t820 + t1386 * t876, -t1381 * t801 + t1386 * t852, -t1381 * t866 + t1386 * t930, -pkin(8) * t755 - t1381 * t666 + t1386 * t675, -pkin(8) * t760 - t1381 * t669 + t1386 * t680, -pkin(8) * t730 - t1381 * t655 + t1386 * t663, -pkin(8) * t664 - t1381 * t641 + t1386 * t643, -t1381 * t714 + t1386 * t751, -t1381 * t688 + t1386 * t704, -t1381 * t721 + t1386 * t757, -t1381 * t713 + t1386 * t750, -t1381 * t722 + t1386 * t758, -t1381 * t768 + t1386 * t808, -pkin(8) * t690 - t1381 * t642 + t1386 * t647, -pkin(8) * t693 - t1381 * t644 + t1386 * t650, -pkin(8) * t670 - t1381 * t634 + t1386 * t637, -pkin(8) * t639 - t1381 * t632 + t1386 * t633; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1357, 0, t1358, 0, t1343, t1533, t1324, pkin(8) * t1324, t1316 * t1386 + t1381 * t1330, t1281 * t1386 + t1381 * t1307, t1288 * t1386 + t1381 * t1311, t1315 * t1386 + t1381 * t1329, t1286 * t1386 + t1381 * t1309, t1381 * t1331 - t1386 * t1539, pkin(8) * t1253 + t1205 * t1386 + t1381 * t1215, pkin(8) * t1254 + t1204 * t1386 + t1381 * t1216, pkin(8) * t1248 + t1381 * t1171 + t1183 * t1386, pkin(8) * t1161 + t1381 * t1145 + t1162 * t1386, t1090 * t1386 + t1381 * t1143, t1039 * t1386 + t1381 * t1084, t1065 * t1386 + t1381 * t1125, t1089 * t1386 + t1381 * t1142, t1066 * t1386 + t1381 * t1126, t1129 * t1386 + t1381 * t1178, pkin(8) * t974 + t1381 * t862 + t1386 * t848, pkin(8) * t983 + t1381 * t867 + t1386 * t849, pkin(8) * t959 + t1381 * t831 + t1386 * t813, pkin(8) * t846 + t1381 * t773 + t1386 * t765, t1381 * t1018 + t1386 * t956, t1381 * t946 + t1386 * t885, t1381 * t965 + t1386 * t927, t1381 * t1017 + t1386 * t955, t1381 * t966 + t1386 * t928, t1381 * t1063 + t1386 * t984, pkin(8) * t855 + t1381 * t742 + t1386 * t726, pkin(8) * t859 + t1381 * t745 + t1386 * t727, pkin(8) * t827 + t1381 * t723 + t1386 * t700, pkin(8) * t725 + t1381 * t679 + t1386 * t673, t1381 * t877 + t1386 * t821, t1381 * t814 + t1386 * t774, t1381 * t851 + t1386 * t800, t1381 * t876 + t1386 * t820, t1381 * t852 + t1386 * t801, t1381 * t930 + t1386 * t866, pkin(8) * t756 + t1381 * t675 + t1386 * t666, pkin(8) * t761 + t1381 * t680 + t1386 * t669, pkin(8) * t731 + t1381 * t663 + t1386 * t655, pkin(8) * t665 + t1381 * t643 + t1386 * t641, t1381 * t751 + t1386 * t714, t1381 * t704 + t1386 * t688, t1381 * t757 + t1386 * t721, t1381 * t750 + t1386 * t713, t1381 * t758 + t1386 * t722, t1381 * t808 + t1386 * t768, pkin(8) * t691 + t1381 * t647 + t1386 * t642, pkin(8) * t694 + t1381 * t650 + t1386 * t644, pkin(8) * t671 + t1381 * t637 + t1386 * t634, pkin(8) * t640 + t1381 * t633 + t1386 * t632; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1360, t1361, 0, 0, t1366 * t1565, t1376 * t1341 + t1373 * t1451, t1376 * t1336 + t1373 * t1449, t1369 * t1565, t1376 * t1337 + t1373 * t1446, t1370 * qJDD(1), pkin(1) * t1287 - t1376 * t1296 + t1373 * t1499, pkin(1) * t1289 - t1376 * t1297 + t1373 * t1498, pkin(1) * t1280 + t1373 * t1407, pkin(1) * t1219 + t1237 * t1621, t1376 * t1202 + t1373 * t1461, t1376 * t1151 + t1373 * t1470, t1376 * t1167 + t1373 * t1464, t1376 * t1200 + t1373 * t1462, t1376 * t1168 + t1373 * t1463, t1376 * t1231 + t1373 * t1459, pkin(1) * t1060 + t1376 * t1006 + t1373 * t1409, pkin(1) * t1062 + t1376 * t1013 + t1373 * t1408, pkin(1) * t1036 + t1373 * t1410 + t1376 * t967, pkin(1) * t902 + t1373 * t1412 + t1376 * t950, t1376 * t1073 + t1373 * t1478, t1376 * t1001 + t1373 * t1491, t1376 * t1052 + t1373 * t1483, t1376 * t1072 + t1373 * t1479, t1376 * t1053 + t1373 * t1482, t1376 * t1122 + t1373 * t1474, pkin(1) * t909 + t1373 * t1414 + t1376 * t828, pkin(1) * t914 + t1373 * t1413 + t1376 * t832, pkin(1) * t879 + t1373 * t1415 + t1376 * t787, pkin(1) * t763 + t1373 * t1416 + t1376 * t746, t1373 * t1510 + t1376 * t938, t1373 * t1516 + t1376 * t869, t1373 * t1513 + t1376 * t904, t1373 * t1511 + t1376 * t937, t1373 * t1512 + t1376 * t905, t1373 * t1494 + t1376 * t971, pkin(1) * t790 + t1373 * t1418 + t1376 * t711, pkin(1) * t796 + t1373 * t1417 + t1376 * t718, pkin(1) * t770 + t1373 * t1419 + t1376 * t695, pkin(1) * t684 + t1373 * t1421 + t1376 * t661, t1373 * t1523 + t1376 * t782, t1373 * t1526 + t1376 * t738, t1373 * t1521 + t1376 * t791, t1373 * t1524 + t1376 * t781, t1373 * t1520 + t1376 * t792, t1373 * t1518 + t1376 * t860, pkin(1) * t707 + t1373 * t1422 + t1376 * t659, pkin(1) * t717 + t1373 * t1420 + t1376 * t667, pkin(1) * t687 + t1373 * t1423 + t1376 * t648, pkin(1) * t646 + t1373 * t1424 + t1376 * t635;];
tauB_reg  = t1;
