% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 04:54
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRPRR3_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR3_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR3_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR3_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR3_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR3_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 04:50:58
% EndTime: 2019-05-05 04:52:14
% DurationCPUTime: 75.17s
% Computational Cost: add. (652495->1156), mult. (1599485->1949), div. (0->0), fcn. (1298864->16), ass. (0->849)
t1110 = sin(pkin(13));
t1114 = cos(pkin(13));
t1112 = sin(pkin(7));
t1124 = cos(qJ(3));
t1298 = qJD(2) * t1124;
t1259 = t1112 * t1298;
t1120 = sin(qJ(3));
t1299 = qJD(2) * t1112;
t1260 = t1120 * t1299;
t1060 = t1110 * t1260 - t1114 * t1259;
t1062 = t1110 * t1259 + t1114 * t1260;
t1015 = t1062 * t1060;
t1116 = cos(pkin(7));
t1101 = qJDD(2) * t1116 + qJDD(3);
t1326 = -t1015 + t1101;
t1338 = t1110 * t1326;
t1337 = t1114 * t1326;
t1118 = sin(qJ(6));
t1266 = qJDD(2) * t1120;
t1068 = (qJD(3) * t1298 + t1266) * t1112;
t1268 = qJDD(2) * t1112;
t1069 = -qJD(3) * t1260 + t1124 * t1268;
t1016 = t1114 * t1068 + t1110 * t1069;
t1102 = qJD(2) * t1116 + qJD(3);
t1119 = sin(qJ(5));
t1123 = cos(qJ(5));
t1032 = t1062 * t1123 + t1102 * t1119;
t1252 = t1032 * qJD(5) + t1119 * t1016 - t1123 * t1101;
t1247 = qJDD(6) + t1252;
t1056 = qJD(5) + t1060;
t1122 = cos(qJ(6));
t985 = t1032 * t1118 - t1122 * t1056;
t987 = t1032 * t1122 + t1056 * t1118;
t913 = t987 * t985;
t1328 = -t913 + t1247;
t1336 = t1118 * t1328;
t1249 = t1068 * t1110 - t1114 * t1069;
t1014 = qJDD(5) + t1249;
t1030 = t1062 * t1119 - t1123 * t1102;
t971 = t1032 * t1030;
t1329 = t1014 - t971;
t1335 = t1119 * t1329;
t1334 = t1122 * t1328;
t1333 = t1123 * t1329;
t1126 = qJD(2) ^ 2;
t1111 = sin(pkin(12));
t1115 = cos(pkin(12));
t1094 = g(1) * t1111 - t1115 * g(2);
t1095 = g(1) * t1115 + g(2) * t1111;
t1109 = g(3) - qJDD(1);
t1121 = sin(qJ(2));
t1117 = cos(pkin(6));
t1125 = cos(qJ(2));
t1273 = t1117 * t1125;
t1113 = sin(pkin(6));
t1276 = t1113 * t1125;
t1020 = -t1094 * t1273 - t1095 * t1121 + t1109 * t1276;
t1133 = qJDD(2) * pkin(2) - t1020;
t1316 = pkin(9) * t1112;
t1131 = t1126 * t1316 + t1133;
t1083 = t1113 * t1094;
t1248 = t1109 * t1117 + t1083;
t1332 = -t1112 * t1248 + t1116 * t1131;
t1292 = t1032 * t1056;
t1331 = t1252 + t1292;
t947 = -t1030 * qJD(5) + t1123 * t1016 + t1119 * t1101;
t864 = -t985 * qJD(6) + t1118 * t1014 + t1122 * t947;
t1026 = qJD(6) + t1030;
t932 = t1026 * t985;
t811 = -t932 + t864;
t994 = t1056 * t1030;
t900 = -t994 + t947;
t1279 = t1109 * t1113;
t1021 = -t1125 * t1095 + (t1094 * t1117 - t1279) * t1121;
t956 = t1020 * t1121 + t1021 * t1125;
t1330 = t956 * t1113;
t1081 = t1102 * t1260;
t1042 = t1069 - t1081;
t1327 = t1116 * t1042;
t1173 = t1121 * t1248;
t1172 = t1125 * t1248;
t1046 = t1102 * t1060;
t1325 = -t1046 + t1016;
t1082 = t1102 * t1259;
t1040 = -t1082 + t1068;
t1039 = t1082 + t1068;
t1271 = t1124 * t1126;
t1106 = t1112 ^ 2;
t1281 = t1106 * t1120;
t1093 = t1271 * t1281;
t1066 = t1101 + t1093;
t1108 = t1124 ^ 2;
t1280 = t1106 * t1126;
t1255 = t1108 * t1280;
t1323 = t1102 ^ 2;
t1072 = -t1255 - t1323;
t1005 = -t1126 * pkin(2) + pkin(9) * t1268 + t1021;
t914 = t1120 * t1005 - t1124 * t1332;
t1129 = pkin(3) * t1066 - qJ(4) * t1040 - t914;
t1272 = t1124 * t1005;
t1274 = t1116 * t1126;
t1300 = qJD(2) * t1102;
t879 = t1069 * qJ(4) + t1272 + t1072 * pkin(3) + (t1116 * t1133 + (pkin(9) * t1274 + qJ(4) * t1300 - t1248) * t1112) * t1120;
t769 = -0.2e1 * qJD(4) * t1060 + t1110 * t1129 + t1114 * t879;
t1250 = -t1122 * t1014 + t1118 * t947;
t808 = (qJD(6) - t1026) * t987 + t1250;
t983 = t985 ^ 2;
t984 = t987 ^ 2;
t1024 = t1026 ^ 2;
t1027 = t1030 ^ 2;
t1028 = t1032 ^ 2;
t1324 = t1056 ^ 2;
t1058 = t1060 ^ 2;
t1059 = t1062 ^ 2;
t1322 = 0.2e1 * qJD(4);
t1321 = pkin(3) * t1112;
t1320 = pkin(3) * t1116;
t1319 = pkin(4) * t1110;
t1318 = pkin(5) * t1119;
t1317 = pkin(8) * t1117;
t968 = t1112 * t1131 + t1116 * t1248;
t916 = t1069 * pkin(3) + qJ(4) * t1255 - qJDD(4) - (pkin(3) * t1102 - qJ(4) * t1260) * t1260 + t968;
t1288 = t1062 * t1102;
t972 = t1249 + t1288;
t1128 = t972 * pkin(4) - pkin(10) * t1325 - t916;
t1009 = pkin(4) * t1060 - pkin(10) * t1062;
t748 = -pkin(4) * t1323 + pkin(10) * t1101 - t1009 * t1060 + t769;
t705 = t1119 * t1128 + t1123 * t748;
t969 = pkin(5) * t1030 - pkin(11) * t1032;
t677 = -pkin(5) * t1324 + pkin(11) * t1014 - t1030 * t969 + t705;
t1251 = t1110 * t879 - t1114 * t1129;
t747 = -t1101 * pkin(4) - t1323 * pkin(10) + (t1322 + t1009) * t1062 + t1251;
t693 = pkin(5) * t1331 - t900 * pkin(11) + t747;
t610 = t1118 * t693 + t1122 * t677;
t1314 = t1110 * t916;
t1313 = t1114 * t916;
t704 = t1119 * t748 - t1123 * t1128;
t676 = -t1014 * pkin(5) - pkin(11) * t1324 + t1032 * t969 + t704;
t1312 = t1118 * t676;
t851 = t913 + t1247;
t1311 = t1118 * t851;
t1310 = t1119 * t747;
t923 = t1014 + t971;
t1309 = t1119 * t923;
t768 = t1062 * t1322 + t1251;
t689 = t1110 * t769 - t1114 * t768;
t1308 = t1120 * t689;
t1307 = t1120 * t968;
t1306 = t1122 * t676;
t1305 = t1122 * t851;
t1304 = t1123 * t747;
t1303 = t1123 * t923;
t1302 = t1124 * t689;
t1301 = t1124 * t968;
t1002 = t1015 + t1101;
t1296 = t1002 * t1110;
t1295 = t1002 * t1114;
t1294 = t1026 * t1118;
t1293 = t1026 * t1122;
t1261 = t1102 * t1299;
t1107 = t1120 ^ 2;
t1269 = t1107 + t1108;
t1045 = t1269 * t1261;
t1291 = t1045 * t1121;
t1290 = t1056 * t1119;
t1289 = t1056 * t1123;
t1287 = t1066 * t1120;
t1286 = t1066 * t1124;
t1067 = -t1093 + t1101;
t1285 = t1067 * t1120;
t1284 = t1067 * t1124;
t1283 = t1102 * t1110;
t1282 = t1102 * t1114;
t1278 = t1111 * t1109;
t1277 = t1112 * t1101;
t1275 = t1115 * t1109;
t1267 = qJDD(2) * t1113;
t1265 = t1119 * t913;
t1264 = t1123 * t913;
t1263 = -pkin(4) * t1114 - pkin(3);
t1262 = -pkin(5) * t1123 - pkin(4);
t1258 = t1110 * t971;
t1257 = t1114 * t971;
t1256 = t1107 * t1280;
t1254 = t1112 * t1015;
t1253 = t1116 * t1015;
t690 = t1110 * t768 + t1114 * t769;
t609 = t1118 * t677 - t1122 * t693;
t622 = t1119 * t704 + t1123 * t705;
t1048 = -t1094 * t1111 - t1115 * t1095;
t1057 = -t1323 - t1256;
t1004 = -t1057 * t1120 - t1284;
t1246 = pkin(9) * t1004 - t1307;
t1019 = t1072 * t1124 - t1287;
t1245 = pkin(9) * t1019 + t1301;
t550 = t1118 * t610 - t1122 * t609;
t551 = t1118 * t609 + t1122 * t610;
t621 = t1119 * t705 - t1123 * t704;
t533 = t1119 * t676 + t1123 * t551;
t487 = t1110 * t533 - t1114 * t550;
t488 = t1110 * t550 + t1114 * t533;
t1244 = t1120 * t488 + t1124 * t487;
t595 = t1110 * t622 - t1114 * t747;
t596 = t1110 * t747 + t1114 * t622;
t1243 = t1120 * t596 + t1124 * t595;
t812 = -t932 - t864;
t731 = -t1118 * t812 - t1122 * t808;
t873 = t983 + t984;
t688 = -t1119 * t873 + t1123 * t731;
t729 = -t1118 * t808 + t1122 * t812;
t625 = t1110 * t688 - t1114 * t729;
t626 = t1110 * t729 + t1114 * t688;
t1242 = t1120 * t626 + t1124 * t625;
t810 = (-qJD(6) - t1026) * t987 - t1250;
t732 = -t1118 * t811 + t1122 * t810;
t912 = -t984 + t983;
t700 = -t1119 * t912 + t1123 * t732;
t730 = -t1118 * t810 - t1122 * t811;
t628 = t1110 * t700 + t1114 * t730;
t629 = -t1110 * t730 + t1114 * t700;
t1241 = t1120 * t629 + t1124 * t628;
t888 = -t1024 - t983;
t766 = t1122 * t888 - t1336;
t711 = -t1119 * t810 + t1123 * t766;
t765 = t1118 * t888 + t1334;
t648 = t1110 * t711 - t1114 * t765;
t649 = t1110 * t765 + t1114 * t711;
t1240 = t1120 * t649 + t1124 * t648;
t910 = -t984 - t1024;
t781 = -t1118 * t910 - t1305;
t715 = t1119 * t811 + t1123 * t781;
t780 = t1122 * t910 - t1311;
t656 = t1110 * t715 - t1114 * t780;
t657 = t1110 * t780 + t1114 * t715;
t1239 = t1120 * t657 + t1124 * t656;
t931 = -t984 + t1024;
t801 = -t1118 * t931 + t1334;
t723 = -t1119 * t812 + t1123 * t801;
t799 = -t1122 * t931 - t1336;
t662 = t1110 * t723 + t1114 * t799;
t664 = -t1110 * t799 + t1114 * t723;
t1238 = t1120 * t664 + t1124 * t662;
t930 = t983 - t1024;
t802 = t1122 * t930 - t1311;
t724 = -t1119 * t808 + t1123 * t802;
t800 = -t1118 * t930 - t1305;
t663 = t1110 * t724 + t1114 * t800;
t665 = -t1110 * t800 + t1114 * t724;
t1237 = t1120 * t665 + t1124 * t663;
t1236 = t1120 * t690 + t1302;
t863 = -qJD(6) * t987 - t1250;
t804 = -t1118 * t863 + t1293 * t985;
t754 = t1123 * t804 - t1265;
t803 = -t1122 * t863 - t1294 * t985;
t695 = t1110 * t754 + t1114 * t803;
t697 = -t1110 * t803 + t1114 * t754;
t1235 = t1120 * t697 + t1124 * t695;
t806 = t1122 * t864 - t1294 * t987;
t755 = t1123 * t806 + t1265;
t805 = -t1118 * t864 - t1293 * t987;
t696 = t1110 * t755 + t1114 * t805;
t698 = -t1110 * t805 + t1114 * t755;
t1234 = t1120 * t698 + t1124 * t696;
t866 = (t1118 * t987 - t1122 * t985) * t1026;
t815 = t1119 * t1247 + t1123 * t866;
t865 = (t1118 * t985 + t1122 * t987) * t1026;
t739 = t1110 * t815 + t1114 * t865;
t740 = -t1110 * t865 + t1114 * t815;
t1233 = t1120 * t740 + t1124 * t739;
t898 = -t1252 + t1292;
t901 = -t994 - t947;
t818 = -t1119 * t901 + t1123 * t898;
t929 = t1027 + t1028;
t763 = t1110 * t818 + t1114 * t929;
t764 = -t1110 * t929 + t1114 * t818;
t1232 = t1120 * t764 + t1124 * t763;
t819 = -t1119 * t900 - t1123 * t1331;
t970 = -t1028 + t1027;
t770 = t1110 * t819 + t1114 * t970;
t771 = -t1110 * t970 + t1114 * t819;
t1231 = t1120 * t771 + t1124 * t770;
t940 = -t1324 - t1027;
t858 = t1123 * t940 - t1335;
t778 = t1110 * t858 - t1114 * t1331;
t779 = t1110 * t1331 + t1114 * t858;
t1230 = t1120 * t779 + t1124 * t778;
t957 = -t1028 - t1324;
t868 = -t1119 * t957 - t1303;
t782 = t1110 * t868 - t1114 * t900;
t783 = t1110 * t900 + t1114 * t868;
t1229 = t1120 * t783 + t1124 * t782;
t993 = -t1028 + t1324;
t882 = -t1119 * t993 + t1333;
t795 = t1110 * t882 + t1114 * t901;
t797 = -t1110 * t901 + t1114 * t882;
t1228 = t1120 * t797 + t1124 * t795;
t992 = t1027 - t1324;
t883 = t1123 * t992 - t1309;
t796 = t1110 * t883 - t1114 * t898;
t798 = t1110 * t898 + t1114 * t883;
t1227 = t1120 * t798 + t1124 * t796;
t894 = t1030 * t1289 + t1119 * t1252;
t843 = t1110 * t894 + t1257;
t845 = t1114 * t894 - t1258;
t1226 = t1120 * t845 + t1124 * t843;
t896 = -t1032 * t1290 + t1123 * t947;
t844 = t1110 * t896 - t1257;
t846 = t1114 * t896 + t1258;
t1225 = t1120 * t846 + t1124 * t844;
t921 = (-t1030 * t1123 + t1032 * t1119) * t1056;
t884 = -t1014 * t1114 + t1110 * t921;
t885 = t1014 * t1110 + t1114 * t921;
t1224 = t1120 * t885 + t1124 * t884;
t905 = -t1110 * t972 + t1114 * t1325;
t907 = -t1110 * t1325 - t1114 * t972;
t1223 = t1120 * t907 + t1124 * t905;
t1162 = -t1249 + t1288;
t977 = t1046 + t1016;
t906 = t1110 * t1162 - t1114 * t977;
t908 = t1110 * t977 + t1114 * t1162;
t1222 = t1120 * t908 + t1124 * t906;
t915 = t1120 * t1332 + t1272;
t1221 = t1120 * t915 - t1124 * t914;
t833 = t1120 * t914 + t1124 * t915;
t1000 = -t1323 - t1058;
t927 = t1000 * t1110 + t1337;
t928 = t1000 * t1114 - t1338;
t1220 = t1120 * t928 + t1124 * t927;
t1025 = -t1059 - t1323;
t938 = t1025 * t1114 - t1296;
t939 = -t1025 * t1110 - t1295;
t1219 = t1120 * t939 + t1124 * t938;
t1044 = -t1059 + t1323;
t949 = t1044 * t1114 + t1338;
t951 = -t1044 * t1110 + t1337;
t1218 = t1120 * t951 + t1124 * t949;
t1043 = t1058 - t1323;
t950 = t1043 * t1110 + t1295;
t952 = t1043 * t1114 - t1296;
t1217 = t1120 * t952 + t1124 * t950;
t964 = t1060 * t1283 - t1114 * t1249;
t965 = t1060 * t1282 + t1110 * t1249;
t1216 = t1120 * t965 + t1124 * t964;
t966 = t1016 * t1110 + t1062 * t1282;
t967 = t1016 * t1114 - t1062 * t1283;
t1215 = t1120 * t967 + t1124 * t966;
t990 = (-t1060 * t1110 - t1062 * t1114) * t1102;
t991 = (-t1060 * t1114 + t1062 * t1110) * t1102;
t1214 = t1120 * t991 + t1124 * t990;
t532 = t1119 * t551 - t1123 * t676;
t458 = -t1112 * t532 + t1116 * t1244;
t463 = -t1120 * t487 + t1124 * t488;
t1213 = t1121 * t463 + t1125 * t458;
t515 = -t1112 * t621 + t1116 * t1243;
t540 = -t1120 * t595 + t1124 * t596;
t1212 = t1121 * t540 + t1125 * t515;
t687 = t1119 * t731 + t1123 * t873;
t544 = -t1112 * t687 + t1116 * t1242;
t559 = -t1120 * t625 + t1124 * t626;
t1211 = t1121 * t559 + t1125 * t544;
t699 = t1119 * t732 + t1123 * t912;
t548 = -t1112 * t699 + t1116 * t1241;
t563 = -t1120 * t628 + t1124 * t629;
t1210 = t1121 * t563 + t1125 * t548;
t710 = t1119 * t766 + t1123 * t810;
t558 = -t1112 * t710 + t1116 * t1240;
t583 = -t1120 * t648 + t1124 * t649;
t1209 = t1121 * t583 + t1125 * t558;
t714 = t1119 * t781 - t1123 * t811;
t562 = -t1112 * t714 + t1116 * t1239;
t585 = -t1120 * t656 + t1124 * t657;
t1208 = t1121 * t585 + t1125 * t562;
t721 = t1119 * t801 + t1123 * t812;
t571 = -t1112 * t721 + t1116 * t1238;
t597 = -t1120 * t662 + t1124 * t664;
t1207 = t1121 * t597 + t1125 * t571;
t722 = t1119 * t802 + t1123 * t808;
t572 = -t1112 * t722 + t1116 * t1237;
t598 = -t1120 * t663 + t1124 * t665;
t1206 = t1121 * t598 + t1125 * t572;
t752 = t1119 * t804 + t1264;
t592 = -t1112 * t752 + t1116 * t1235;
t619 = -t1120 * t695 + t1124 * t697;
t1205 = t1121 * t619 + t1125 * t592;
t753 = t1119 * t806 - t1264;
t593 = -t1112 * t753 + t1116 * t1234;
t620 = -t1120 * t696 + t1124 * t698;
t1204 = t1121 * t620 + t1125 * t593;
t608 = t1112 * t916 + t1116 * t1236;
t616 = t1124 * t690 - t1308;
t1203 = t1121 * t616 + t1125 * t608;
t814 = t1119 * t866 - t1123 * t1247;
t633 = -t1112 * t814 + t1116 * t1233;
t658 = -t1120 * t739 + t1124 * t740;
t1202 = t1121 * t658 + t1125 * t633;
t816 = t1119 * t898 + t1123 * t901;
t645 = -t1112 * t816 + t1116 * t1232;
t683 = -t1120 * t763 + t1124 * t764;
t1201 = t1121 * t683 + t1125 * t645;
t817 = -t1119 * t1331 + t1123 * t900;
t652 = -t1112 * t817 + t1116 * t1231;
t694 = -t1120 * t770 + t1124 * t771;
t1200 = t1121 * t694 + t1125 * t652;
t857 = t1119 * t940 + t1333;
t667 = -t1112 * t857 + t1116 * t1230;
t706 = -t1120 * t778 + t1124 * t779;
t1199 = t1121 * t706 + t1125 * t667;
t867 = t1123 * t957 - t1309;
t674 = -t1112 * t867 + t1116 * t1229;
t707 = -t1120 * t782 + t1124 * t783;
t1198 = t1121 * t707 + t1125 * t674;
t880 = t1123 * t993 + t1335;
t681 = -t1112 * t880 + t1116 * t1228;
t718 = -t1120 * t795 + t1124 * t797;
t1197 = t1121 * t718 + t1125 * t681;
t881 = t1119 * t992 + t1303;
t682 = -t1112 * t881 + t1116 * t1227;
t719 = -t1120 * t796 + t1124 * t798;
t1196 = t1121 * t719 + t1125 * t682;
t893 = t1030 * t1290 - t1123 * t1252;
t727 = -t1112 * t893 + t1116 * t1226;
t749 = -t1120 * t843 + t1124 * t845;
t1195 = t1121 * t749 + t1125 * t727;
t895 = t1032 * t1289 + t1119 * t947;
t728 = -t1112 * t895 + t1116 * t1225;
t750 = -t1120 * t844 + t1124 * t846;
t1194 = t1121 * t750 + t1125 * t728;
t920 = (-t1030 * t1119 - t1032 * t1123) * t1056;
t744 = -t1112 * t920 + t1116 * t1224;
t788 = -t1120 * t884 + t1124 * t885;
t1193 = t1121 * t788 + t1125 * t744;
t982 = -t1058 - t1059;
t777 = -t1112 * t982 + t1116 * t1222;
t823 = -t1120 * t906 + t1124 * t908;
t1192 = t1121 * t823 + t1125 * t777;
t1013 = t1059 - t1058;
t785 = -t1112 * t1013 + t1116 * t1223;
t822 = -t1120 * t905 + t1124 * t907;
t1191 = t1121 * t822 + t1125 * t785;
t792 = t1112 * t968 + t1116 * t1221;
t1190 = t1121 * t833 + t1125 * t792;
t821 = -t1112 * t972 + t1116 * t1220;
t849 = -t1120 * t927 + t1124 * t928;
t1189 = t1121 * t849 + t1125 * t821;
t829 = -t1112 * t1325 + t1116 * t1219;
t872 = -t1120 * t938 + t1124 * t939;
t1188 = t1121 * t872 + t1125 * t829;
t836 = -t1112 * t977 + t1116 * t1218;
t877 = -t1120 * t949 + t1124 * t951;
t1187 = t1121 * t877 + t1125 * t836;
t837 = -t1112 * t1162 + t1116 * t1217;
t878 = -t1120 * t950 + t1124 * t952;
t1186 = t1121 * t878 + t1125 * t837;
t861 = t1116 * t1216 + t1254;
t889 = -t1120 * t964 + t1124 * t965;
t1185 = t1121 * t889 + t1125 * t861;
t862 = t1116 * t1215 - t1254;
t890 = -t1120 * t966 + t1124 * t967;
t1184 = t1121 * t890 + t1125 * t862;
t904 = t1116 * t1214 - t1277;
t911 = -t1120 * t990 + t1124 * t991;
t1183 = t1121 * t911 + t1125 * t904;
t1078 = t1269 * t1280;
t1041 = t1069 + t1081;
t1169 = -t1040 * t1124 + t1041 * t1120;
t944 = t1112 * t1078 + t1116 * t1169;
t978 = t1040 * t1120 + t1041 * t1124;
t1182 = t1121 * t978 + t1125 * t944;
t1077 = (t1107 - t1108) * t1280;
t1170 = t1039 * t1124 + t1042 * t1120;
t945 = -t1112 * t1077 + t1116 * t1170;
t979 = -t1039 * t1120 + t1042 * t1124;
t1181 = t1121 * t979 + t1125 * t945;
t1038 = (t1266 + (qJD(3) + t1102) * t1298) * t1112;
t1168 = t1057 * t1124 - t1285;
t954 = -t1112 * t1038 + t1116 * t1168;
t1180 = t1004 * t1121 + t1125 * t954;
t1070 = t1323 - t1256;
t1017 = -t1070 * t1120 + t1286;
t1167 = t1070 * t1124 + t1287;
t961 = -t1112 * t1040 + t1116 * t1167;
t1179 = t1017 * t1121 + t1125 * t961;
t1071 = -t1323 + t1255;
t1018 = t1071 * t1124 - t1285;
t1165 = t1071 * t1120 + t1284;
t962 = -t1112 * t1041 + t1116 * t1165;
t1178 = t1018 * t1121 + t1125 * t962;
t1166 = t1072 * t1120 + t1286;
t963 = t1112 * t1042 + t1116 * t1166;
t1177 = t1019 * t1121 + t1125 * t963;
t1029 = -t1069 * t1120 - t1108 * t1261;
t1105 = t1112 * t1106;
t995 = (-t1105 * t1120 * t1126 + t1327) * t1124;
t1176 = t1029 * t1121 + t1125 * t995;
t1033 = t1068 * t1124 - t1107 * t1261;
t998 = (t1039 * t1116 + t1105 * t1271) * t1120;
t1175 = t1033 * t1121 + t1125 * t998;
t1171 = -t1274 + t1300;
t955 = t1020 * t1125 - t1021 * t1121;
t1163 = qJDD(2) * t1121 + t1125 * t1126;
t1075 = t1163 * t1117;
t1091 = qJDD(2) * t1125 - t1121 * t1126;
t1164 = t1075 * t1115 + t1091 * t1111;
t1036 = t1075 * t1111 - t1091 * t1115;
t1047 = t1094 * t1115 - t1095 * t1111;
t472 = -pkin(10) * t532 + (-pkin(11) * t1123 + t1318) * t550;
t480 = -pkin(4) * t532 + pkin(5) * t676 - pkin(11) * t551;
t438 = -pkin(3) * t532 + qJ(4) * t488 + t1110 * t472 + t1114 * t480;
t439 = -qJ(4) * t487 - t1110 * t480 + t1114 * t472;
t1145 = pkin(9) * t463 + t1120 * t439 + t1124 * t438;
t453 = pkin(3) * t487 + pkin(10) * t533 + (-pkin(11) * t1119 + t1262) * t550;
t457 = t1112 * t1244 + t1116 * t532;
t420 = -pkin(2) * t457 - t1112 * t453 + t1116 * t1145;
t421 = -t1120 * t438 + t1124 * t439 + (-t1112 * t457 - t1116 * t458) * pkin(9);
t435 = -t1121 * t458 + t1125 * t463;
t1161 = pkin(8) * t435 + t1121 * t421 + t1125 * t420;
t539 = -pkin(11) * t729 - t550;
t513 = -pkin(10) * t687 + t1123 * t539 + t1318 * t729;
t522 = -pkin(4) * t687 - pkin(5) * t873 - pkin(11) * t731 - t551;
t468 = -pkin(3) * t687 + qJ(4) * t626 + t1110 * t513 + t1114 * t522;
t471 = -qJ(4) * t625 - t1110 * t522 + t1114 * t513;
t1144 = pkin(9) * t559 + t1120 * t471 + t1124 * t468;
t494 = pkin(3) * t625 + pkin(10) * t688 + t1119 * t539 + t1262 * t729;
t543 = t1112 * t1242 + t1116 * t687;
t434 = -pkin(2) * t543 - t1112 * t494 + t1116 * t1144;
t437 = -t1120 * t468 + t1124 * t471 + (-t1112 * t543 - t1116 * t544) * pkin(9);
t502 = -t1121 * t544 + t1125 * t559;
t1160 = pkin(8) * t502 + t1121 * t437 + t1125 * t434;
t586 = -pkin(5) * t765 + t609;
t635 = -pkin(11) * t765 + t1312;
t536 = -pkin(10) * t710 - t1119 * t586 + t1123 * t635;
t579 = -pkin(4) * t710 - pkin(5) * t810 - pkin(11) * t766 + t1306;
t483 = -pkin(3) * t710 + qJ(4) * t649 + t1110 * t536 + t1114 * t579;
t493 = -qJ(4) * t648 - t1110 * t579 + t1114 * t536;
t1143 = pkin(9) * t583 + t1120 * t493 + t1124 * t483;
t510 = pkin(3) * t648 - pkin(4) * t765 + pkin(10) * t711 + t1119 * t635 + t1123 * t586;
t557 = t1112 * t1240 + t1116 * t710;
t441 = -pkin(2) * t557 - t1112 * t510 + t1116 * t1143;
t454 = -t1120 * t483 + t1124 * t493 + (-t1112 * t557 - t1116 * t558) * pkin(9);
t520 = -t1121 * t558 + t1125 * t583;
t1159 = pkin(8) * t520 + t1121 * t454 + t1125 * t441;
t587 = -pkin(5) * t780 + t610;
t637 = -pkin(11) * t780 + t1306;
t538 = -pkin(10) * t714 - t1119 * t587 + t1123 * t637;
t581 = -pkin(4) * t714 + pkin(5) * t811 - pkin(11) * t781 - t1312;
t486 = -pkin(3) * t714 + qJ(4) * t657 + t1110 * t538 + t1114 * t581;
t495 = -qJ(4) * t656 - t1110 * t581 + t1114 * t538;
t1142 = pkin(9) * t585 + t1120 * t495 + t1124 * t486;
t516 = pkin(3) * t656 - pkin(4) * t780 + pkin(10) * t715 + t1119 * t637 + t1123 * t587;
t561 = t1112 * t1239 + t1116 * t714;
t443 = -pkin(2) * t561 - t1112 * t516 + t1116 * t1142;
t455 = -t1120 * t486 + t1124 * t495 + (-t1112 * t561 - t1116 * t562) * pkin(9);
t526 = -t1121 * t562 + t1125 * t585;
t1158 = pkin(8) * t526 + t1121 * t455 + t1125 * t443;
t503 = qJ(4) * t596 + (-pkin(10) * t1110 + t1263) * t621;
t525 = -qJ(4) * t595 + (-pkin(10) * t1114 + t1319) * t621;
t1141 = pkin(9) * t540 + t1120 * t525 + t1124 * t503;
t514 = t1112 * t1243 + t1116 * t621;
t541 = pkin(3) * t595 - pkin(4) * t747 + pkin(10) * t622;
t447 = -pkin(2) * t514 - t1112 * t541 + t1116 * t1141;
t452 = -t1120 * t503 + t1124 * t525 + (-t1112 * t514 - t1116 * t515) * pkin(9);
t479 = -t1121 * t515 + t1125 * t540;
t1157 = pkin(8) * t479 + t1121 * t452 + t1125 * t447;
t600 = -pkin(10) * t816 - t621;
t560 = qJ(4) * t764 + t1110 * t600 + t1263 * t816;
t575 = -qJ(4) * t763 + t1114 * t600 + t1319 * t816;
t1140 = pkin(9) * t683 + t1120 * t575 + t1124 * t560;
t580 = pkin(3) * t763 + pkin(4) * t929 + pkin(10) * t818 + t622;
t644 = t1112 * t1232 + t1116 * t816;
t478 = -pkin(2) * t644 - t1112 * t580 + t1116 * t1140;
t491 = -t1120 * t560 + t1124 * t575 + (-t1112 * t644 - t1116 * t645) * pkin(9);
t589 = -t1121 * t645 + t1125 * t683;
t1156 = pkin(8) * t589 + t1121 * t491 + t1125 * t478;
t670 = -pkin(4) * t857 + t704;
t713 = -pkin(10) * t857 + t1310;
t582 = -pkin(3) * t857 + qJ(4) * t779 + t1110 * t713 + t1114 * t670;
t588 = -qJ(4) * t778 - t1110 * t670 + t1114 * t713;
t1139 = pkin(9) * t706 + t1120 * t588 + t1124 * t582;
t641 = pkin(3) * t778 - pkin(4) * t1331 + pkin(10) * t858 - t1304;
t666 = t1112 * t1230 + t1116 * t857;
t499 = -pkin(2) * t666 - t1112 * t641 + t1116 * t1139;
t505 = -t1120 * t582 + t1124 * t588 + (-t1112 * t666 - t1116 * t667) * pkin(9);
t606 = -t1121 * t667 + t1125 * t706;
t1155 = pkin(8) * t606 + t1121 * t505 + t1125 * t499;
t671 = -pkin(4) * t867 + t705;
t717 = -pkin(10) * t867 + t1304;
t584 = -pkin(3) * t867 + qJ(4) * t783 + t1110 * t717 + t1114 * t671;
t594 = -qJ(4) * t782 - t1110 * t671 + t1114 * t717;
t1138 = pkin(9) * t707 + t1120 * t594 + t1124 * t584;
t642 = pkin(3) * t782 - pkin(4) * t900 + pkin(10) * t868 + t1310;
t673 = t1112 * t1229 + t1116 * t867;
t501 = -pkin(2) * t673 - t1112 * t642 + t1116 * t1138;
t506 = -t1120 * t584 + t1124 * t594 + (-t1112 * t673 - t1116 * t674) * pkin(9);
t611 = -t1121 * t674 + t1125 * t707;
t1154 = pkin(8) * t611 + t1121 * t506 + t1125 * t501;
t678 = pkin(3) * t916 + qJ(4) * t690;
t1132 = pkin(9) * t616 - qJ(4) * t1308 + t1124 * t678;
t607 = t1112 * t1236 - t1116 * t916;
t508 = -pkin(2) * t607 + t1116 * t1132 - t1321 * t689;
t521 = -qJ(4) * t1302 - t1120 * t678 + (-t1112 * t607 - t1116 * t608) * pkin(9);
t552 = -t1121 * t608 + t1125 * t616;
t1153 = pkin(8) * t552 + t1121 * t521 + t1125 * t508;
t661 = -pkin(3) * t982 + qJ(4) * t908 + t690;
t672 = -qJ(4) * t906 - t689;
t1137 = pkin(9) * t823 + t1120 * t672 + t1124 * t661;
t776 = t1112 * t1222 + t1116 * t982;
t565 = -pkin(2) * t776 + t1116 * t1137 - t1321 * t906;
t566 = -t1120 * t661 + t1124 * t672 + (-t1112 * t776 - t1116 * t777) * pkin(9);
t716 = -t1121 * t777 + t1125 * t823;
t1152 = pkin(8) * t716 + t1121 * t566 + t1125 * t565;
t807 = -pkin(3) * t972 + qJ(4) * t928 + t1313;
t840 = -qJ(4) * t927 - t1314;
t1136 = pkin(9) * t849 + t1120 * t840 + t1124 * t807;
t741 = pkin(3) * t927 - t768;
t820 = t1112 * t1220 + t1116 * t972;
t613 = -pkin(2) * t820 - t1112 * t741 + t1116 * t1136;
t643 = -t1120 * t807 + t1124 * t840 + (-t1112 * t820 - t1116 * t821) * pkin(9);
t738 = -t1121 * t821 + t1125 * t849;
t1151 = pkin(8) * t738 + t1121 * t643 + t1125 * t613;
t824 = -pkin(3) * t1325 + qJ(4) * t939 - t1314;
t848 = -qJ(4) * t938 - t1313;
t1135 = pkin(9) * t872 + t1120 * t848 + t1124 * t824;
t742 = pkin(3) * t938 - t769;
t828 = t1112 * t1219 + t1116 * t1325;
t624 = -pkin(2) * t828 - t1112 * t742 + t1116 * t1135;
t653 = -t1120 * t824 + t1124 * t848 + (-t1112 * t828 - t1116 * t829) * pkin(9);
t746 = -t1121 * t829 + t1125 * t872;
t1150 = pkin(8) * t746 + t1121 * t653 + t1125 * t624;
t791 = t1112 * t1221 - t1116 * t968;
t712 = (-t1112 * t791 - t1116 * t792) * pkin(9);
t733 = -t1121 * t792 + t1125 * t833;
t734 = pkin(9) * t1116 * t833 - pkin(2) * t791;
t1149 = pkin(8) * t733 + t1121 * t712 + t1125 * t734;
t942 = -t1116 * t1078 + t1112 * t1169;
t751 = (-t1112 * t942 - t1116 * t944) * pkin(9) - t1221;
t1134 = pkin(9) * t978 + t833;
t762 = -pkin(2) * t942 + t1116 * t1134;
t886 = -t1121 * t944 + t1125 * t978;
t1148 = pkin(8) * t886 + t1121 * t751 + t1125 * t762;
t953 = t1116 * t1038 + t1112 * t1168;
t787 = -pkin(2) * t953 + t1112 * t915 + t1116 * t1246;
t838 = -t1301 + (-t1112 * t953 - t1116 * t954) * pkin(9);
t909 = t1004 * t1125 - t1121 * t954;
t1147 = pkin(8) * t909 + t1121 * t838 + t1125 * t787;
t960 = t1112 * t1166 - t1327;
t794 = -pkin(2) * t960 + t1112 * t914 + t1116 * t1245;
t839 = -t1307 + (-t1112 * t960 - t1116 * t963) * pkin(9);
t919 = t1019 * t1125 - t1121 * t963;
t1146 = pkin(8) * t919 + t1121 * t839 + t1125 * t794;
t1076 = t1091 * t1117;
t1074 = t1091 * t1113;
t1073 = t1163 * t1113;
t1037 = -t1076 * t1111 - t1115 * t1163;
t1035 = t1076 * t1115 - t1111 * t1163;
t1006 = t1045 * t1125 + t1121 * t1277;
t997 = (t1106 * t1124 * t1171 + t1068 * t1112) * t1120;
t996 = (t1069 * t1112 - t1171 * t1281) * t1124;
t989 = -t1172 + (t1073 * t1113 + t1075 * t1117) * pkin(8);
t988 = -t1173 + (-t1074 * t1113 - t1076 * t1117) * pkin(8);
t981 = t1117 * t1291 + (-t1112 * t1273 - t1113 * t1116) * t1101;
t959 = t1116 * t1041 + t1112 * t1165;
t958 = t1116 * t1040 + t1112 * t1167;
t948 = t956 * t1117;
t943 = t1116 * t1077 + t1112 * t1170;
t937 = t1033 * t1125 - t1121 * t998;
t936 = t1029 * t1125 - t1121 * t995;
t934 = -pkin(1) * t1074 + t1113 * t1020 + t1117 * t1172 - t1163 * t1317;
t933 = pkin(1) * t1073 + t1113 * t1021 - t1091 * t1317 - t1117 * t1173;
t926 = t1113 * t1083 + (-t955 + t1279) * t1117;
t925 = -t1113 * t955 - t1117 * t1248;
t918 = t1018 * t1125 - t1121 * t962;
t917 = t1017 * t1125 - t1121 * t961;
t903 = t1116 * t1101 + t1112 * t1214;
t892 = -t1113 * t997 + t1117 * t1175;
t891 = -t1113 * t996 + t1117 * t1176;
t887 = -t1121 * t945 + t1125 * t979;
t871 = -pkin(1) * t925 + t1317 * t956;
t870 = -t1111 * t926 + t1115 * t956;
t869 = t1111 * t956 + t1115 * t926;
t860 = t1112 * t1215 + t1253;
t859 = t1112 * t1216 - t1253;
t856 = -t1113 * t960 + t1117 * t1177;
t855 = -t1113 * t959 + t1117 * t1178;
t854 = -t1113 * t958 + t1117 * t1179;
t853 = t1113 * t1177 + t1117 * t960;
t847 = (-t1113 * t925 - t1117 * t926) * pkin(8);
t842 = -t1113 * t953 + t1117 * t1180;
t841 = t1113 * t1180 + t1117 * t953;
t835 = t1112 * t1217 + t1116 * t1162;
t834 = t1112 * t1218 + t1116 * t977;
t832 = -t1113 * t943 + t1117 * t1181;
t831 = -t1113 * t942 + t1117 * t1182;
t830 = t1113 * t1182 + t1117 * t942;
t825 = -t1121 * t904 + t1125 * t911;
t793 = pkin(2) * t963 + t1112 * t1245 - t1116 * t914;
t790 = -t1111 * t856 + t1115 * t919;
t789 = t1111 * t919 + t1115 * t856;
t786 = pkin(2) * t954 + t1112 * t1246 - t1116 * t915;
t784 = t1116 * t1013 + t1112 * t1223;
t775 = -t1121 * t862 + t1125 * t890;
t774 = -t1121 * t861 + t1125 * t889;
t773 = -t1111 * t842 + t1115 * t909;
t772 = t1111 * t909 + t1115 * t842;
t761 = pkin(2) * t944 + t1112 * t1134;
t760 = -t1121 * t837 + t1125 * t878;
t759 = -t1121 * t836 + t1125 * t877;
t758 = -t1111 * t831 + t1115 * t886;
t757 = t1111 * t886 + t1115 * t831;
t756 = -t1113 * t903 + t1117 * t1183;
t743 = t1112 * t1224 + t1116 * t920;
t737 = -t1113 * t860 + t1117 * t1184;
t736 = -t1113 * t859 + t1117 * t1185;
t735 = pkin(2) * t792 + t1316 * t833;
t726 = t1112 * t1225 + t1116 * t895;
t725 = t1112 * t1226 + t1116 * t893;
t720 = -t1121 * t785 + t1125 * t822;
t709 = -t1113 * t835 + t1117 * t1186;
t708 = -t1113 * t834 + t1117 * t1187;
t702 = -t1113 * t828 + t1117 * t1188;
t701 = t1113 * t1188 + t1117 * t828;
t686 = -t1121 * t744 + t1125 * t788;
t685 = -t1113 * t820 + t1117 * t1189;
t684 = t1113 * t1189 + t1117 * t820;
t680 = t1112 * t1227 + t1116 * t881;
t679 = t1112 * t1228 + t1116 * t880;
t669 = -t1113 * t791 + t1117 * t1190;
t668 = t1113 * t1190 + t1117 * t791;
t660 = -t1113 * t784 + t1117 * t1191;
t659 = -t1121 * t794 + t1125 * t839 + (-t1113 * t853 - t1117 * t856) * pkin(8);
t655 = -t1113 * t776 + t1117 * t1192;
t654 = t1113 * t1192 + t1117 * t776;
t651 = t1112 * t1231 + t1116 * t817;
t650 = -t1121 * t787 + t1125 * t838 + (-t1113 * t841 - t1117 * t842) * pkin(8);
t647 = -t1121 * t728 + t1125 * t750;
t646 = -t1121 * t727 + t1125 * t749;
t640 = -t1111 * t702 + t1115 * t746;
t639 = t1111 * t746 + t1115 * t702;
t638 = -pkin(1) * t853 - t1113 * t793 + t1117 * t1146;
t636 = -t1113 * t743 + t1117 * t1193;
t634 = -pkin(1) * t841 - t1113 * t786 + t1117 * t1147;
t632 = t1112 * t1233 + t1116 * t814;
t631 = -t1111 * t685 + t1115 * t738;
t630 = t1111 * t738 + t1115 * t685;
t627 = -t1121 * t762 + t1125 * t751 + (-t1113 * t830 - t1117 * t831) * pkin(8);
t623 = pkin(2) * t829 + t1112 * t1135 + t1116 * t742;
t618 = -t1121 * t682 + t1125 * t719;
t617 = -t1121 * t681 + t1125 * t718;
t615 = -t1111 * t669 + t1115 * t733;
t614 = t1111 * t733 + t1115 * t669;
t612 = pkin(2) * t821 + t1112 * t1136 + t1116 * t741;
t605 = -t1111 * t655 + t1115 * t716;
t604 = t1111 * t716 + t1115 * t655;
t603 = -t1113 * t726 + t1117 * t1194;
t602 = -t1113 * t725 + t1117 * t1195;
t601 = -pkin(1) * t830 - t1113 * t761 + t1117 * t1148;
t599 = -t1121 * t652 + t1125 * t694;
t591 = t1112 * t1234 + t1116 * t753;
t590 = t1112 * t1235 + t1116 * t752;
t578 = -t1121 * t633 + t1125 * t658;
t577 = -t1113 * t680 + t1117 * t1196;
t576 = -t1113 * t679 + t1117 * t1197;
t574 = -t1113 * t673 + t1117 * t1198;
t573 = t1113 * t1198 + t1117 * t673;
t570 = t1112 * t1237 + t1116 * t722;
t569 = t1112 * t1238 + t1116 * t721;
t568 = -t1113 * t666 + t1117 * t1199;
t567 = t1113 * t1199 + t1117 * t666;
t564 = pkin(2) * t777 + t1112 * t1137 + t1320 * t906;
t556 = -t1113 * t651 + t1117 * t1200;
t555 = -t1113 * t644 + t1117 * t1201;
t554 = t1113 * t1201 + t1117 * t644;
t553 = -t1121 * t734 + t1125 * t712 + (-t1113 * t668 - t1117 * t669) * pkin(8);
t549 = -pkin(1) * t668 - t1113 * t735 + t1117 * t1149;
t547 = t1112 * t1241 + t1116 * t699;
t546 = -t1121 * t593 + t1125 * t620;
t545 = -t1121 * t592 + t1125 * t619;
t542 = -t1113 * t632 + t1117 * t1202;
t537 = -t1121 * t624 + t1125 * t653 + (-t1113 * t701 - t1117 * t702) * pkin(8);
t535 = -t1111 * t574 + t1115 * t611;
t534 = t1111 * t611 + t1115 * t574;
t531 = -t1111 * t568 + t1115 * t606;
t530 = t1111 * t606 + t1115 * t568;
t529 = -t1121 * t613 + t1125 * t643 + (-t1113 * t684 - t1117 * t685) * pkin(8);
t528 = -t1121 * t572 + t1125 * t598;
t527 = -t1121 * t571 + t1125 * t597;
t524 = -t1113 * t607 + t1117 * t1203;
t523 = t1113 * t1203 + t1117 * t607;
t519 = -t1111 * t555 + t1115 * t589;
t518 = t1111 * t589 + t1115 * t555;
t517 = -pkin(1) * t701 - t1113 * t623 + t1117 * t1150;
t512 = -t1113 * t591 + t1117 * t1204;
t511 = -t1113 * t590 + t1117 * t1205;
t509 = -pkin(1) * t684 - t1113 * t612 + t1117 * t1151;
t507 = pkin(2) * t608 + t1112 * t1132 + t1320 * t689;
t504 = -t1121 * t548 + t1125 * t563;
t500 = pkin(2) * t674 + t1112 * t1138 + t1116 * t642;
t498 = pkin(2) * t667 + t1112 * t1139 + t1116 * t641;
t497 = -t1113 * t570 + t1117 * t1206;
t496 = -t1113 * t569 + t1117 * t1207;
t492 = -t1121 * t565 + t1125 * t566 + (-t1113 * t654 - t1117 * t655) * pkin(8);
t490 = -t1113 * t561 + t1117 * t1208;
t489 = t1113 * t1208 + t1117 * t561;
t485 = -t1113 * t557 + t1117 * t1209;
t484 = t1113 * t1209 + t1117 * t557;
t482 = -t1111 * t524 + t1115 * t552;
t481 = t1111 * t552 + t1115 * t524;
t477 = pkin(2) * t645 + t1112 * t1140 + t1116 * t580;
t476 = -t1113 * t547 + t1117 * t1210;
t475 = -pkin(1) * t654 - t1113 * t564 + t1117 * t1152;
t474 = -t1113 * t543 + t1117 * t1211;
t473 = t1113 * t1211 + t1117 * t543;
t470 = -t1111 * t490 + t1115 * t526;
t469 = t1111 * t526 + t1115 * t490;
t467 = -t1111 * t485 + t1115 * t520;
t466 = t1111 * t520 + t1115 * t485;
t465 = -t1113 * t514 + t1117 * t1212;
t464 = t1113 * t1212 + t1117 * t514;
t462 = -t1111 * t474 + t1115 * t502;
t461 = t1111 * t502 + t1115 * t474;
t460 = -t1121 * t501 + t1125 * t506 + (-t1113 * t573 - t1117 * t574) * pkin(8);
t459 = -t1121 * t499 + t1125 * t505 + (-t1113 * t567 - t1117 * t568) * pkin(8);
t456 = -t1121 * t508 + t1125 * t521 + (-t1113 * t523 - t1117 * t524) * pkin(8);
t451 = -t1121 * t478 + t1125 * t491 + (-t1113 * t554 - t1117 * t555) * pkin(8);
t450 = -pkin(1) * t573 - t1113 * t500 + t1117 * t1154;
t449 = -t1111 * t465 + t1115 * t479;
t448 = t1111 * t479 + t1115 * t465;
t446 = pkin(2) * t515 + t1112 * t1141 + t1116 * t541;
t445 = -pkin(1) * t523 - t1113 * t507 + t1117 * t1153;
t444 = -pkin(1) * t567 - t1113 * t498 + t1117 * t1155;
t442 = pkin(2) * t562 + t1112 * t1142 + t1116 * t516;
t440 = pkin(2) * t558 + t1112 * t1143 + t1116 * t510;
t436 = -pkin(1) * t554 - t1113 * t477 + t1117 * t1156;
t433 = pkin(2) * t544 + t1112 * t1144 + t1116 * t494;
t432 = -t1113 * t457 + t1117 * t1213;
t431 = t1113 * t1213 + t1117 * t457;
t430 = -t1121 * t443 + t1125 * t455 + (-t1113 * t489 - t1117 * t490) * pkin(8);
t429 = -t1121 * t441 + t1125 * t454 + (-t1113 * t484 - t1117 * t485) * pkin(8);
t428 = -t1121 * t447 + t1125 * t452 + (-t1113 * t464 - t1117 * t465) * pkin(8);
t427 = -pkin(1) * t489 - t1113 * t442 + t1117 * t1158;
t426 = -pkin(1) * t484 - t1113 * t440 + t1117 * t1159;
t425 = -t1111 * t432 + t1115 * t435;
t424 = t1111 * t435 + t1115 * t432;
t423 = -t1121 * t434 + t1125 * t437 + (-t1113 * t473 - t1117 * t474) * pkin(8);
t422 = -pkin(1) * t464 - t1113 * t446 + t1117 * t1157;
t419 = pkin(2) * t458 + t1112 * t1145 + t1116 * t453;
t418 = -pkin(1) * t473 - t1113 * t433 + t1117 * t1160;
t417 = -t1121 * t420 + t1125 * t421 + (-t1113 * t431 - t1117 * t432) * pkin(8);
t416 = -pkin(1) * t431 - t1113 * t419 + t1117 * t1161;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1048, 0, 0, 0, 0, 0, 0, t1037, t1036, 0, t870, 0, 0, 0, 0, 0, 0, t790, t773, t758, t615, 0, 0, 0, 0, 0, 0, t631, t640, t605, t482, 0, 0, 0, 0, 0, 0, t531, t535, t519, t449, 0, 0, 0, 0, 0, 0, t467, t470, t462, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1047, 0, 0, 0, 0, 0, 0, t1035, -t1164, 0, t869, 0, 0, 0, 0, 0, 0, t789, t772, t757, t614, 0, 0, 0, 0, 0, 0, t630, t639, t604, t481, 0, 0, 0, 0, 0, 0, t530, t534, t518, t448, 0, 0, 0, 0, 0, 0, t466, t469, t461, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1109, 0, 0, 0, 0, 0, 0, t1074, -t1073, 0, t925, 0, 0, 0, 0, 0, 0, t853, t841, t830, t668, 0, 0, 0, 0, 0, 0, t684, t701, t654, t523, 0, 0, 0, 0, 0, 0, t567, t573, t554, t464, 0, 0, 0, 0, 0, 0, t484, t489, t473, t431; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1278, -t1275, -t1047, -qJ(1) * t1047, 0, 0, -t1036, 0, t1037, t1111 * t1267, -qJ(1) * t1035 - t1111 * t934 + t1115 * t988, qJ(1) * t1164 - t1111 * t933 + t1115 * t989, -t1111 * t948 + t1115 * t955, -qJ(1) * t869 - t1111 * t871 + t1115 * t847, -t1111 * t892 + t1115 * t937, -t1111 * t832 + t1115 * t887, -t1111 * t854 + t1115 * t917, -t1111 * t891 + t1115 * t936, -t1111 * t855 + t1115 * t918, t1006 * t1115 - t1111 * t981, -qJ(1) * t789 - t1111 * t638 + t1115 * t659, -qJ(1) * t772 - t1111 * t634 + t1115 * t650, -qJ(1) * t757 - t1111 * t601 + t1115 * t627, -qJ(1) * t614 - t1111 * t549 + t1115 * t553, -t1111 * t737 + t1115 * t775, -t1111 * t660 + t1115 * t720, -t1111 * t708 + t1115 * t759, -t1111 * t736 + t1115 * t774, -t1111 * t709 + t1115 * t760, -t1111 * t756 + t1115 * t825, -qJ(1) * t630 - t1111 * t509 + t1115 * t529, -qJ(1) * t639 - t1111 * t517 + t1115 * t537, -qJ(1) * t604 - t1111 * t475 + t1115 * t492, -qJ(1) * t481 - t1111 * t445 + t1115 * t456, -t1111 * t603 + t1115 * t647, -t1111 * t556 + t1115 * t599, -t1111 * t576 + t1115 * t617, -t1111 * t602 + t1115 * t646, -t1111 * t577 + t1115 * t618, -t1111 * t636 + t1115 * t686, -qJ(1) * t530 - t1111 * t444 + t1115 * t459, -qJ(1) * t534 - t1111 * t450 + t1115 * t460, -qJ(1) * t518 - t1111 * t436 + t1115 * t451, -qJ(1) * t448 - t1111 * t422 + t1115 * t428, -t1111 * t512 + t1115 * t546, -t1111 * t476 + t1115 * t504, -t1111 * t496 + t1115 * t527, -t1111 * t511 + t1115 * t545, -t1111 * t497 + t1115 * t528, -t1111 * t542 + t1115 * t578, -qJ(1) * t466 - t1111 * t426 + t1115 * t429, -qJ(1) * t469 - t1111 * t427 + t1115 * t430, -qJ(1) * t461 - t1111 * t418 + t1115 * t423, -qJ(1) * t424 - t1111 * t416 + t1115 * t417; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1275, -t1278, t1048, qJ(1) * t1048, 0, 0, t1164, 0, t1035, -t1115 * t1267, qJ(1) * t1037 + t1111 * t988 + t1115 * t934, qJ(1) * t1036 + t1111 * t989 + t1115 * t933, t1111 * t955 + t1115 * t948, qJ(1) * t870 + t1111 * t847 + t1115 * t871, t1111 * t937 + t1115 * t892, t1111 * t887 + t1115 * t832, t1111 * t917 + t1115 * t854, t1111 * t936 + t1115 * t891, t1111 * t918 + t1115 * t855, t1006 * t1111 + t1115 * t981, qJ(1) * t790 + t1111 * t659 + t1115 * t638, qJ(1) * t773 + t1111 * t650 + t1115 * t634, qJ(1) * t758 + t1111 * t627 + t1115 * t601, qJ(1) * t615 + t1111 * t553 + t1115 * t549, t1111 * t775 + t1115 * t737, t1111 * t720 + t1115 * t660, t1111 * t759 + t1115 * t708, t1111 * t774 + t1115 * t736, t1111 * t760 + t1115 * t709, t1111 * t825 + t1115 * t756, qJ(1) * t631 + t1111 * t529 + t1115 * t509, qJ(1) * t640 + t1111 * t537 + t1115 * t517, qJ(1) * t605 + t1111 * t492 + t1115 * t475, qJ(1) * t482 + t1111 * t456 + t1115 * t445, t1111 * t647 + t1115 * t603, t1111 * t599 + t1115 * t556, t1111 * t617 + t1115 * t576, t1111 * t646 + t1115 * t602, t1111 * t618 + t1115 * t577, t1111 * t686 + t1115 * t636, qJ(1) * t531 + t1111 * t459 + t1115 * t444, qJ(1) * t535 + t1111 * t460 + t1115 * t450, qJ(1) * t519 + t1111 * t451 + t1115 * t436, qJ(1) * t449 + t1111 * t428 + t1115 * t422, t1111 * t546 + t1115 * t512, t1111 * t504 + t1115 * t476, t1111 * t527 + t1115 * t496, t1111 * t545 + t1115 * t511, t1111 * t528 + t1115 * t497, t1111 * t578 + t1115 * t542, qJ(1) * t467 + t1111 * t429 + t1115 * t426, qJ(1) * t470 + t1111 * t430 + t1115 * t427, qJ(1) * t462 + t1111 * t423 + t1115 * t418, qJ(1) * t425 + t1111 * t417 + t1115 * t416; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1094, t1095, 0, 0, 0, 0, t1073, 0, t1074, t1117 * qJDD(2), pkin(1) * t1076 - t1117 * t1020 + (-pkin(8) * t1163 + t1172) * t1113, -pkin(1) * t1075 - t1117 * t1021 + (-pkin(8) * t1091 - t1173) * t1113, t1330, pkin(1) * t926 + pkin(8) * t1330, t1113 * t1175 + t1117 * t997, t1113 * t1181 + t1117 * t943, t1113 * t1179 + t1117 * t958, t1113 * t1176 + t1117 * t996, t1113 * t1178 + t1117 * t959, t1113 * t1291 + (-t1112 * t1276 + t1116 * t1117) * t1101, pkin(1) * t856 + t1113 * t1146 + t1117 * t793, pkin(1) * t842 + t1113 * t1147 + t1117 * t786, pkin(1) * t831 + t1113 * t1148 + t1117 * t761, pkin(1) * t669 + t1113 * t1149 + t1117 * t735, t1113 * t1184 + t1117 * t860, t1113 * t1191 + t1117 * t784, t1113 * t1187 + t1117 * t834, t1113 * t1185 + t1117 * t859, t1113 * t1186 + t1117 * t835, t1113 * t1183 + t1117 * t903, pkin(1) * t685 + t1113 * t1151 + t1117 * t612, pkin(1) * t702 + t1113 * t1150 + t1117 * t623, pkin(1) * t655 + t1113 * t1152 + t1117 * t564, pkin(1) * t524 + t1113 * t1153 + t1117 * t507, t1113 * t1194 + t1117 * t726, t1113 * t1200 + t1117 * t651, t1113 * t1197 + t1117 * t679, t1113 * t1195 + t1117 * t725, t1113 * t1196 + t1117 * t680, t1113 * t1193 + t1117 * t743, pkin(1) * t568 + t1113 * t1155 + t1117 * t498, pkin(1) * t574 + t1113 * t1154 + t1117 * t500, pkin(1) * t555 + t1113 * t1156 + t1117 * t477, pkin(1) * t465 + t1113 * t1157 + t1117 * t446, t1113 * t1204 + t1117 * t591, t1113 * t1210 + t1117 * t547, t1113 * t1207 + t1117 * t569, t1113 * t1205 + t1117 * t590, t1113 * t1206 + t1117 * t570, t1113 * t1202 + t1117 * t632, pkin(1) * t485 + t1113 * t1159 + t1117 * t440, pkin(1) * t490 + t1113 * t1158 + t1117 * t442, pkin(1) * t474 + t1113 * t1160 + t1117 * t433, pkin(1) * t432 + t1113 * t1161 + t1117 * t419;];
tauB_reg  = t1;
