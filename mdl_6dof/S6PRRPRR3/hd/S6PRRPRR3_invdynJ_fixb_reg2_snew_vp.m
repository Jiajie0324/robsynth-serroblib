% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 04:54
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRPRR3_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR3_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR3_invdynJ_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 04:50:40
% EndTime: 2019-05-05 04:50:58
% DurationCPUTime: 9.74s
% Computational Cost: add. (58990->576), mult. (144642->903), div. (0->0), fcn. (117376->16), ass. (0->360)
t296 = sin(pkin(13));
t299 = cos(pkin(13));
t297 = sin(pkin(7));
t308 = cos(qJ(3));
t367 = qJD(2) * t308;
t349 = t297 * t367;
t304 = sin(qJ(3));
t350 = qJD(2) * t297 * t304;
t264 = t296 * t350 - t299 * t349;
t266 = t296 * t349 + t299 * t350;
t233 = t266 * t264;
t300 = cos(pkin(7));
t291 = qJDD(2) * t300 + qJDD(3);
t404 = -t233 + t291;
t415 = t296 * t404;
t414 = t299 * t404;
t302 = sin(qJ(6));
t292 = qJD(2) * t300 + qJD(3);
t303 = sin(qJ(5));
t307 = cos(qJ(5));
t245 = t266 * t307 + t292 * t303;
t260 = qJD(5) + t264;
t306 = cos(qJ(6));
t215 = t245 * t302 - t306 * t260;
t217 = t245 * t306 + t260 * t302;
t176 = t217 * t215;
t360 = qJDD(2) * t304;
t272 = (qJD(3) * t367 + t360) * t297;
t361 = qJDD(2) * t297;
t273 = -qJD(3) * t350 + t308 * t361;
t234 = t299 * t272 + t296 * t273;
t346 = t234 * t303 - t307 * t291;
t196 = -qJD(5) * t245 - t346;
t194 = qJDD(6) - t196;
t406 = -t176 + t194;
t413 = t302 * t406;
t243 = t266 * t303 - t307 * t292;
t204 = t245 * t243;
t345 = t272 * t296 - t299 * t273;
t232 = qJDD(5) + t345;
t405 = -t204 + t232;
t412 = t303 * t405;
t411 = t306 * t406;
t410 = t307 * t405;
t305 = sin(qJ(2));
t309 = cos(qJ(2));
t298 = sin(pkin(6));
t369 = -g(3) + qJDD(1);
t301 = cos(pkin(6));
t389 = sin(pkin(12));
t390 = cos(pkin(12));
t319 = g(1) * t389 - g(2) * t390;
t407 = t301 * t319;
t316 = t298 * t369 + t407;
t320 = -g(1) * t390 - g(2) * t389;
t236 = -t305 * t320 + t309 * t316;
t310 = qJD(2) ^ 2;
t396 = pkin(9) * t297;
t313 = qJDD(2) * pkin(2) + t310 * t396 + t236;
t317 = -t298 * t319 + t301 * t369;
t409 = t297 * t317 + t300 * t313;
t293 = t297 ^ 2;
t408 = t293 * (qJD(2) * t292 - t300 * t310);
t329 = -t234 * t307 - t291 * t303;
t197 = -qJD(5) * t243 - t329;
t220 = t260 * t243;
t169 = t197 - t220;
t252 = t292 * t264;
t403 = -t252 + t234;
t279 = t292 * t349;
t247 = -t279 + t272;
t373 = t293 * t310;
t286 = t304 * t308 * t373;
t270 = t286 + t291;
t376 = t266 * t292;
t205 = t345 + t376;
t237 = t305 * t316 + t309 * t320;
t227 = -t310 * pkin(2) + pkin(9) * t361 + t237;
t178 = t308 * t227 + t304 * t409;
t323 = pkin(3) * t292 - qJ(4) * t350;
t295 = t308 ^ 2;
t354 = t295 * t373;
t156 = -pkin(3) * t354 + t273 * qJ(4) - t292 * t323 + t178;
t177 = t227 * t304 - t308 * t409;
t314 = pkin(3) * t270 - qJ(4) * t247 - t177;
t104 = -0.2e1 * qJD(4) * t264 + t299 * t156 + t296 * t314;
t240 = qJD(6) + t243;
t347 = t197 * t302 - t306 * t232;
t121 = (qJD(6) - t240) * t217 + t347;
t166 = (qJD(5) - t260) * t245 + t346;
t213 = t215 ^ 2;
t214 = t217 ^ 2;
t238 = t240 ^ 2;
t241 = t243 ^ 2;
t242 = t245 ^ 2;
t402 = t260 ^ 2;
t262 = t264 ^ 2;
t263 = t266 ^ 2;
t401 = t292 ^ 2;
t400 = 0.2e1 * qJD(4);
t399 = pkin(3) * t300;
t398 = pkin(4) * t296;
t397 = pkin(5) * t303;
t202 = pkin(5) * t243 - pkin(11) * t245;
t201 = t297 * t313 - t300 * t317;
t179 = t273 * pkin(3) + qJ(4) * t354 - t323 * t350 - qJDD(4) + t201;
t311 = pkin(4) * t205 - pkin(10) * t403 - t179;
t229 = pkin(4) * t264 - pkin(10) * t266;
t93 = -pkin(4) * t401 + pkin(10) * t291 - t229 * t264 + t104;
t71 = t303 * t93 - t307 * t311;
t59 = -t232 * pkin(5) - pkin(11) * t402 + t202 * t245 + t71;
t395 = t302 * t59;
t348 = t156 * t296 - t299 * t314;
t92 = -t291 * pkin(4) - t401 * pkin(10) + (t400 + t229) * t266 + t348;
t394 = t303 * t92;
t103 = t266 * t400 + t348;
t64 = -t103 * t299 + t104 * t296;
t393 = t304 * t64;
t392 = t306 * t59;
t391 = t307 * t92;
t72 = t303 * t311 + t307 * t93;
t141 = t176 + t194;
t388 = t141 * t302;
t387 = t141 * t306;
t386 = t179 * t296;
t385 = t179 * t299;
t183 = t204 + t232;
t384 = t183 * t303;
t383 = t183 * t307;
t224 = t233 + t291;
t382 = t224 * t296;
t381 = t224 * t299;
t380 = t240 * t302;
t379 = t240 * t306;
t378 = t260 * t303;
t377 = t260 * t307;
t375 = t292 * t296;
t374 = t292 * t299;
t372 = t304 * t270;
t271 = -t286 + t291;
t370 = t308 * t271;
t364 = qJD(5) + t260;
t362 = qJD(6) + t240;
t359 = t303 * t176;
t358 = t307 * t176;
t357 = t296 * t204;
t356 = t299 * t204;
t294 = t304 ^ 2;
t355 = t294 * t373;
t353 = t300 * t233;
t352 = -pkin(4) * t299 - pkin(3);
t351 = -pkin(5) * t307 - pkin(4);
t60 = -pkin(5) * t402 + pkin(11) * t232 - t202 * t243 + t72;
t67 = -t169 * pkin(11) + (t245 * t260 - t196) * pkin(5) + t92;
t39 = t302 * t60 - t306 * t67;
t40 = t302 * t67 + t306 * t60;
t23 = t302 * t39 + t306 * t40;
t43 = t303 * t71 + t307 * t72;
t65 = t103 * t296 + t299 * t104;
t344 = -pkin(5) * t59 + pkin(11) * t23;
t15 = t23 * t307 + t303 * t59;
t22 = t302 * t40 - t306 * t39;
t6 = t15 * t296 - t22 * t299;
t7 = t15 * t299 + t22 * t296;
t343 = t304 * t7 + t308 * t6;
t42 = t303 * t72 - t307 * t71;
t34 = t296 * t43 - t299 * t92;
t35 = t296 * t92 + t299 * t43;
t342 = t304 * t35 + t308 * t34;
t19 = -t304 * t34 + t308 * t35;
t152 = t213 + t214;
t330 = -t197 * t306 - t232 * t302;
t146 = -qJD(6) * t215 - t330;
t190 = t240 * t215;
t125 = t146 + t190;
t87 = -t121 * t306 + t125 * t302;
t63 = -t152 * t303 + t307 * t87;
t85 = -t121 * t302 - t125 * t306;
t44 = t296 * t63 - t299 * t85;
t45 = t296 * t85 + t299 * t63;
t341 = t304 * t45 + t308 * t44;
t161 = -t238 - t213;
t100 = t161 * t302 + t411;
t101 = t161 * t306 - t413;
t123 = -t217 * t362 - t347;
t76 = t101 * t307 - t123 * t303;
t51 = -t100 * t299 + t296 * t76;
t52 = t100 * t296 + t299 * t76;
t340 = t304 * t52 + t308 * t51;
t174 = -t214 - t238;
t108 = t174 * t306 - t388;
t109 = -t174 * t302 - t387;
t126 = t215 * t362 + t330;
t79 = t109 * t307 - t126 * t303;
t53 = -t108 * t299 + t296 * t79;
t54 = t108 * t296 + t299 * t79;
t339 = t304 * t54 + t308 * t53;
t338 = t304 * t65 + t308 * t64;
t170 = t197 + t220;
t131 = -t166 * t307 + t170 * t303;
t187 = t241 + t242;
t98 = t131 * t296 + t187 * t299;
t99 = t131 * t299 - t187 * t296;
t337 = t304 * t99 + t308 * t98;
t193 = -t402 - t241;
t144 = t193 * t307 - t412;
t168 = -t245 * t364 - t346;
t106 = t144 * t296 + t168 * t299;
t107 = t144 * t299 - t168 * t296;
t336 = t106 * t308 + t107 * t304;
t199 = -t242 - t402;
t150 = -t199 * t303 - t383;
t171 = t243 * t364 + t329;
t110 = t150 * t296 + t171 * t299;
t111 = t150 * t299 - t171 * t296;
t335 = t110 * t308 + t111 * t304;
t210 = t252 + t234;
t324 = -t345 + t376;
t172 = -t210 * t299 + t296 * t324;
t173 = t210 * t296 + t299 * t324;
t334 = t172 * t308 + t173 * t304;
t333 = -t177 * t308 + t178 * t304;
t138 = t177 * t304 + t178 * t308;
t222 = -t401 - t262;
t185 = t222 * t296 + t414;
t186 = t222 * t299 - t415;
t332 = t185 * t308 + t186 * t304;
t239 = -t263 - t401;
t191 = t239 * t299 - t382;
t192 = -t239 * t296 - t381;
t331 = t191 * t308 + t192 * t304;
t278 = t292 * t350;
t248 = t273 + t278;
t328 = -t247 * t308 + t248 * t304;
t261 = -t401 - t355;
t327 = t261 * t308 - t271 * t304;
t274 = -t401 - t354;
t326 = t270 * t308 + t274 * t304;
t322 = pkin(5) * t123 + pkin(11) * t101 - t392;
t321 = pkin(5) * t126 + pkin(11) * t109 + t395;
t318 = pkin(5) * t152 + pkin(11) * t87 + t23;
t280 = t300 * t291;
t276 = (-t294 - t295) * t373;
t275 = (t294 - t295) * t373;
t251 = -t263 + t401;
t250 = t262 - t401;
t249 = t273 - t278;
t246 = (t360 + (qJD(3) + t292) * t367) * t297;
t235 = t274 * t308 - t372;
t231 = t263 - t262;
t226 = -t261 * t304 - t370;
t219 = -t242 + t402;
t218 = t241 - t402;
t212 = -t262 - t263;
t211 = t247 * t304 + t248 * t308;
t203 = t242 - t241;
t200 = t249 * t297 + t300 * t326;
t198 = -t246 * t297 + t300 * t327;
t195 = -t276 * t297 + t300 * t328;
t189 = -t214 + t238;
t188 = t213 - t238;
t181 = (-t243 * t307 + t245 * t303) * t260;
t180 = (-t243 * t303 - t245 * t307) * t260;
t175 = t214 - t213;
t165 = t197 * t307 - t245 * t378;
t164 = t197 * t303 + t245 * t377;
t163 = -t196 * t303 + t243 * t377;
t162 = t196 * t307 + t243 * t378;
t160 = t218 * t307 - t384;
t159 = -t219 * t303 + t410;
t158 = t218 * t303 + t383;
t157 = t219 * t307 + t412;
t151 = -t191 * t304 + t192 * t308;
t149 = t199 * t307 - t384;
t148 = (-t215 * t306 + t217 * t302) * t240;
t147 = (-t215 * t302 - t217 * t306) * t240;
t145 = -qJD(6) * t217 - t347;
t143 = t193 * t303 + t410;
t139 = -t185 * t304 + t186 * t308;
t137 = -t297 * t403 + t300 * t331;
t134 = -t172 * t304 + t173 * t308;
t133 = -t205 * t297 + t300 * t332;
t132 = t168 * t307 - t169 * t303;
t130 = t168 * t303 + t169 * t307;
t129 = -t166 * t303 - t170 * t307;
t128 = t148 * t307 + t194 * t303;
t127 = t148 * t303 - t194 * t307;
t124 = t146 - t190;
t120 = t146 * t306 - t217 * t380;
t119 = t146 * t302 + t217 * t379;
t118 = -t145 * t302 + t215 * t379;
t117 = -t145 * t306 - t215 * t380;
t116 = t188 * t306 - t388;
t115 = -t189 * t302 + t411;
t114 = t188 * t302 + t387;
t113 = t189 * t306 + t413;
t112 = t201 * t297 + t300 * t333;
t105 = -t212 * t297 + t300 * t334;
t97 = t120 * t307 + t359;
t96 = t118 * t307 - t359;
t95 = t120 * t303 - t358;
t94 = t118 * t303 + t358;
t90 = pkin(3) * t191 - t104;
t89 = pkin(3) * t185 - t103;
t88 = t123 * t306 - t124 * t302;
t86 = t123 * t302 + t124 * t306;
t84 = t116 * t307 - t121 * t303;
t83 = t115 * t307 + t125 * t303;
t82 = t116 * t303 + t121 * t307;
t81 = t115 * t303 - t125 * t307;
t80 = -pkin(10) * t149 + t391;
t78 = t109 * t303 + t126 * t307;
t77 = -pkin(10) * t143 + t394;
t75 = t101 * t303 + t123 * t307;
t74 = -t304 * t110 + t308 * t111;
t73 = -t304 * t106 + t308 * t107;
t69 = t175 * t303 + t307 * t88;
t68 = -t175 * t307 + t303 * t88;
t62 = t152 * t307 + t303 * t87;
t61 = -t304 * t98 + t308 * t99;
t58 = -t149 * t297 + t300 * t335;
t57 = -pkin(4) * t149 + t72;
t56 = -pkin(4) * t143 + t71;
t55 = -t143 * t297 + t300 * t336;
t50 = -t129 * t297 + t300 * t337;
t49 = pkin(3) * t110 + pkin(4) * t171 + pkin(10) * t150 + t394;
t48 = pkin(3) * t106 + pkin(4) * t168 + pkin(10) * t144 - t391;
t47 = -pkin(11) * t108 + t392;
t46 = -pkin(11) * t100 + t395;
t41 = t308 * t65 - t393;
t37 = t179 * t297 + t300 * t338;
t36 = -pkin(10) * t129 - t42;
t33 = -pkin(5) * t108 + t40;
t32 = -pkin(5) * t100 + t39;
t31 = -t304 * t53 + t308 * t54;
t30 = -t304 * t51 + t308 * t52;
t29 = -pkin(4) * t78 - t321;
t28 = pkin(3) * t98 + pkin(4) * t187 + pkin(10) * t131 + t43;
t27 = -pkin(4) * t75 - t322;
t26 = -t297 * t78 + t300 * t339;
t25 = -t304 * t44 + t308 * t45;
t24 = -t297 * t75 + t300 * t340;
t21 = -t297 * t62 + t300 * t341;
t20 = pkin(3) * t34 - pkin(4) * t92 + pkin(10) * t43;
t18 = -pkin(11) * t85 - t22;
t17 = -pkin(10) * t78 - t303 * t33 + t307 * t47;
t16 = -pkin(10) * t75 - t303 * t32 + t307 * t46;
t14 = t23 * t303 - t307 * t59;
t13 = -pkin(4) * t62 - t318;
t12 = pkin(3) * t53 - pkin(4) * t108 + pkin(10) * t79 + t303 * t47 + t307 * t33;
t11 = -t297 * t42 + t300 * t342;
t10 = -pkin(10) * t62 + t18 * t307 + t397 * t85;
t9 = pkin(3) * t51 - pkin(4) * t100 + pkin(10) * t76 + t303 * t46 + t307 * t32;
t8 = pkin(3) * t44 + pkin(10) * t63 + t18 * t303 + t351 * t85;
t5 = -pkin(4) * t14 - t344;
t4 = -pkin(10) * t14 + (-pkin(11) * t307 + t397) * t22;
t3 = -t304 * t6 + t308 * t7;
t2 = -t14 * t297 + t300 * t343;
t1 = pkin(3) * t6 + pkin(10) * t15 + (-pkin(11) * t303 + t351) * t22;
t38 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t369, 0, 0, 0, 0, 0, 0, (qJDD(2) * t309 - t305 * t310) * t298, (-qJDD(2) * t305 - t309 * t310) * t298, 0, t301 ^ 2 * t369 + (t309 * t236 + t305 * t237 - t407) * t298, 0, 0, 0, 0, 0, 0, t301 * (-t300 * t249 + t297 * t326) + (t200 * t309 + t235 * t305) * t298, t301 * (t300 * t246 + t297 * t327) + (t198 * t309 + t226 * t305) * t298, t301 * (t300 * t276 + t297 * t328) + (t195 * t309 + t211 * t305) * t298, t301 * (-t300 * t201 + t297 * t333) + (t112 * t309 + t138 * t305) * t298, 0, 0, 0, 0, 0, 0, t301 * (t300 * t205 + t297 * t332) + (t133 * t309 + t139 * t305) * t298, t301 * (t297 * t331 + t300 * t403) + (t137 * t309 + t151 * t305) * t298, t301 * (t300 * t212 + t297 * t334) + (t105 * t309 + t134 * t305) * t298, t301 * (-t300 * t179 + t297 * t338) + (t305 * t41 + t309 * t37) * t298, 0, 0, 0, 0, 0, 0, t301 * (t300 * t143 + t297 * t336) + (t305 * t73 + t309 * t55) * t298, t301 * (t300 * t149 + t297 * t335) + (t305 * t74 + t309 * t58) * t298, t301 * (t300 * t129 + t297 * t337) + (t305 * t61 + t309 * t50) * t298, t301 * (t297 * t342 + t300 * t42) + (t11 * t309 + t19 * t305) * t298, 0, 0, 0, 0, 0, 0, t301 * (t297 * t340 + t300 * t75) + (t24 * t309 + t30 * t305) * t298, t301 * (t297 * t339 + t300 * t78) + (t26 * t309 + t305 * t31) * t298, t301 * (t297 * t341 + t300 * t62) + (t21 * t309 + t25 * t305) * t298, t301 * (t300 * t14 + t297 * t343) + (t2 * t309 + t3 * t305) * t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t236, -t237, 0, 0, (t272 * t297 + t308 * t408) * t304, t300 * t275 + (t304 * t249 + (t272 + t279) * t308) * t297, t300 * t247 + (t372 + t308 * (t401 - t355)) * t297, (t273 * t297 - t304 * t408) * t308, t300 * t248 + (t304 * (-t401 + t354) + t370) * t297, t280, pkin(2) * t200 - t177 * t300 + (pkin(9) * t235 + t201 * t308) * t297, pkin(2) * t198 - t178 * t300 + (pkin(9) * t226 - t201 * t304) * t297, pkin(2) * t195 + (pkin(9) * t211 + t138) * t297, pkin(2) * t112 + t138 * t396, t353 + (t304 * (t234 * t299 - t266 * t375) + t308 * (t234 * t296 + t266 * t374)) * t297, t300 * t231 + (t304 * (-t205 * t299 - t296 * t403) + t308 * (-t205 * t296 + t299 * t403)) * t297, t300 * t210 + (t304 * (-t251 * t296 + t414) + t308 * (t251 * t299 + t415)) * t297, -t353 + (t304 * (t264 * t374 + t296 * t345) + t308 * (t264 * t375 - t299 * t345)) * t297, t300 * t324 + (t304 * (t250 * t299 - t382) + t308 * (t250 * t296 + t381)) * t297, t280 + (t304 * (-t264 * t299 + t266 * t296) + t308 * (-t264 * t296 - t266 * t299)) * t297 * t292, pkin(2) * t133 + t300 * t89 + (t304 * (-qJ(4) * t185 - t386) + t308 * (-pkin(3) * t205 + qJ(4) * t186 + t385) + pkin(9) * t139) * t297, pkin(2) * t137 + t300 * t90 + (t304 * (-qJ(4) * t191 - t385) + t308 * (-pkin(3) * t403 + qJ(4) * t192 - t386) + pkin(9) * t151) * t297, t172 * t399 + pkin(2) * t105 + (t304 * (-qJ(4) * t172 - t64) + t308 * (-pkin(3) * t212 + qJ(4) * t173 + t65) + pkin(9) * t134) * t297, t64 * t399 + pkin(2) * t37 + (-qJ(4) * t393 + t308 * (pkin(3) * t179 + qJ(4) * t65) + pkin(9) * t41) * t297, t300 * t164 + (t304 * (t165 * t299 + t357) + t308 * (t165 * t296 - t356)) * t297, t300 * t130 + (t304 * (t132 * t299 + t203 * t296) + t308 * (t132 * t296 - t203 * t299)) * t297, t300 * t157 + (t304 * (t159 * t299 + t170 * t296) + t308 * (t159 * t296 - t170 * t299)) * t297, t300 * t162 + (t304 * (t163 * t299 - t357) + t308 * (t163 * t296 + t356)) * t297, t300 * t158 + (t304 * (t160 * t299 - t166 * t296) + t308 * (t160 * t296 + t166 * t299)) * t297, t300 * t180 + (t304 * (t181 * t299 + t232 * t296) + t308 * (t181 * t296 - t232 * t299)) * t297, pkin(2) * t55 + t300 * t48 + (t304 * (-qJ(4) * t106 - t296 * t56 + t299 * t77) + t308 * (-pkin(3) * t143 + qJ(4) * t107 + t296 * t77 + t299 * t56) + pkin(9) * t73) * t297, pkin(2) * t58 + t300 * t49 + (t304 * (-qJ(4) * t110 - t296 * t57 + t299 * t80) + t308 * (-pkin(3) * t149 + qJ(4) * t111 + t296 * t80 + t299 * t57) + pkin(9) * t74) * t297, pkin(2) * t50 + t300 * t28 + (t304 * (-qJ(4) * t98 + t129 * t398 + t299 * t36) + t308 * (qJ(4) * t99 + t129 * t352 + t296 * t36) + pkin(9) * t61) * t297, pkin(2) * t11 + t300 * t20 + ((t304 * (-pkin(10) * t299 + t398) + t308 * (-pkin(10) * t296 + t352)) * t42 + (pkin(9) + qJ(4)) * t19) * t297, t300 * t95 + (t304 * (t119 * t296 + t299 * t97) + t308 * (-t119 * t299 + t296 * t97)) * t297, t300 * t68 + (t304 * (t296 * t86 + t299 * t69) + t308 * (t296 * t69 - t299 * t86)) * t297, t300 * t81 + (t304 * (t113 * t296 + t299 * t83) + t308 * (-t113 * t299 + t296 * t83)) * t297, t300 * t94 + (t304 * (-t117 * t296 + t299 * t96) + t308 * (t117 * t299 + t296 * t96)) * t297, t300 * t82 + (t304 * (t114 * t296 + t299 * t84) + t308 * (-t114 * t299 + t296 * t84)) * t297, t300 * t127 + (t304 * (t128 * t299 + t147 * t296) + t308 * (t128 * t296 - t147 * t299)) * t297, pkin(2) * t24 + t300 * t9 + (t304 * (-qJ(4) * t51 + t16 * t299 - t27 * t296) + t308 * (-pkin(3) * t75 + qJ(4) * t52 + t16 * t296 + t27 * t299) + pkin(9) * t30) * t297, pkin(2) * t26 + t300 * t12 + (t304 * (-qJ(4) * t53 + t17 * t299 - t29 * t296) + t308 * (-pkin(3) * t78 + qJ(4) * t54 + t17 * t296 + t29 * t299) + pkin(9) * t31) * t297, pkin(2) * t21 + t300 * t8 + (t304 * (-qJ(4) * t44 + t10 * t299 - t13 * t296) + t308 * (-pkin(3) * t62 + qJ(4) * t45 + t10 * t296 + t13 * t299) + pkin(9) * t25) * t297, pkin(2) * t2 + t300 * t1 + (t304 * (-qJ(4) * t6 - t296 * t5 + t299 * t4) + t308 * (-pkin(3) * t14 + qJ(4) * t7 + t296 * t4 + t299 * t5) + pkin(9) * t3) * t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, t275, t247, t286, t248, t291, -t177, -t178, 0, 0, t233, t231, t210, -t233, t324, t291, t89, t90, pkin(3) * t172, pkin(3) * t64, t164, t130, t157, t162, t158, t180, t48, t49, t28, t20, t95, t68, t81, t94, t82, t127, t9, t12, t8, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, t403, t212, -t179, 0, 0, 0, 0, 0, 0, t143, t149, t129, t42, 0, 0, 0, 0, 0, 0, t75, t78, t62, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t203, t170, -t204, -t166, t232, -t71, -t72, 0, 0, t119, t86, t113, -t117, t114, t147, t322, t321, t318, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, t175, t125, -t176, -t121, t194, -t39, -t40, 0, 0;];
tauJ_reg  = t38;
