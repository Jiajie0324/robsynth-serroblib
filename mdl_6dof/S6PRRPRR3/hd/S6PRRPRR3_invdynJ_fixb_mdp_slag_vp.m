% Calculate vector of inverse dynamics joint torques for
% S6PRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% MDP [27x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRPRR3_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRPRR3_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1),zeros(27,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [27 1]), ...
  'S6PRRPRR3_invdynJ_fixb_mdp_slag_vp: MDP has to be [27x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:08:09
% EndTime: 2019-03-08 22:08:26
% DurationCPUTime: 15.43s
% Computational Cost: add. (7655->668), mult. (21662->968), div. (0->0), fcn. (19066->16), ass. (0->302)
t637 = sin(pkin(6));
t640 = cos(pkin(7));
t648 = cos(qJ(3));
t649 = cos(qJ(2));
t763 = t648 * t649;
t644 = sin(qJ(3));
t645 = sin(qJ(2));
t769 = t644 * t645;
t676 = -t640 * t769 + t763;
t664 = t676 * t637;
t743 = qJD(3) * t648;
t721 = t640 * t743;
t817 = pkin(2) * t721 - qJD(1) * t664;
t636 = sin(pkin(7));
t804 = -pkin(9) - qJ(4);
t718 = t804 * t644;
t816 = (qJD(3) * t718 + qJD(4) * t648) * t636 + t817;
t767 = t645 * t648;
t768 = t644 * t649;
t678 = -t640 * t767 - t768;
t665 = t678 * t637;
t572 = qJD(1) * t665;
t774 = t640 * t644;
t624 = pkin(2) * t774;
t719 = t804 * t636;
t782 = t636 * t644;
t815 = -qJD(4) * t782 + (t648 * t719 - t624) * qJD(3) - t572;
t634 = sin(pkin(13));
t638 = cos(pkin(13));
t757 = t815 * t634 + t638 * t816;
t683 = t634 * t648 + t638 * t644;
t669 = t683 * qJD(3);
t580 = t636 * t669;
t764 = t648 * t638;
t600 = t634 * t644 - t764;
t581 = t600 * t636 * qJD(3);
t744 = qJD(3) * t644;
t723 = t636 * t744;
t777 = t637 * t645;
t726 = qJD(1) * t777;
t814 = pkin(3) * t723 + pkin(4) * t580 + pkin(10) * t581 - t636 * t726;
t748 = qJD(2) * t636;
t725 = t644 * t748;
t729 = t636 * t764;
t579 = qJD(2) * t729 - t634 * t725;
t576 = qJD(5) - t579;
t670 = qJD(2) * t683;
t582 = t636 * t670;
t647 = cos(qJ(5));
t747 = qJD(2) * t640;
t705 = qJD(3) + t747;
t614 = t647 * t705;
t643 = sin(qJ(5));
t545 = t582 * t643 - t614;
t544 = qJD(6) + t545;
t646 = cos(qJ(6));
t642 = sin(qJ(6));
t659 = -t647 * t582 - t643 * t705;
t792 = t659 * t642;
t495 = -t646 * t576 - t792;
t813 = t495 * t576;
t758 = t634 * t816 - t815 * t638;
t812 = -t643 * t757 + t814 * t647;
t773 = t640 * t648;
t625 = pkin(2) * t773;
t562 = pkin(3) * t640 + t636 * t718 + t625;
t780 = t636 * t648;
t752 = pkin(9) * t780 + t624;
t577 = qJ(4) * t780 + t752;
t519 = t634 * t562 + t638 * t577;
t505 = pkin(10) * t640 + t519;
t586 = t634 * t782 - t729;
t587 = t683 * t636;
t630 = pkin(3) * t648 + pkin(2);
t529 = pkin(4) * t586 - pkin(10) * t587 - t630 * t636;
t739 = qJD(5) * t647;
t740 = qJD(5) * t643;
t811 = t505 * t740 - t529 * t739 - t814 * t643 - t647 * t757;
t810 = t647 * t505 + t643 * t529;
t641 = cos(pkin(6));
t679 = t640 * t763 - t769;
t553 = t637 * t679 + t641 * t780;
t677 = t640 * t768 + t767;
t554 = t637 * t677 + t641 * t782;
t490 = t553 * t634 + t554 * t638;
t776 = t637 * t649;
t593 = -t636 * t776 + t640 * t641;
t585 = t593 * t647;
t809 = -t490 * t643 + t585;
t731 = qJDD(2) * t648;
t713 = t636 * t731;
t609 = t638 * t713;
t732 = qJDD(2) * t644;
t714 = t634 * t732;
t538 = qJDD(5) - t609 + (qJD(2) * t669 + t714) * t636;
t599 = pkin(9) * t748 + t726;
t694 = -qJ(4) * t748 - t599;
t749 = qJD(1) * t649;
t803 = qJD(2) * pkin(2);
t606 = t637 * t749 + t803;
t750 = qJD(1) * t641;
t727 = t636 * t750;
t612 = t648 * t727;
t753 = t606 * t773 + t612;
t527 = t644 * t694 + t753;
t503 = pkin(3) * t705 + t527;
t746 = qJD(2) * t648;
t528 = t606 * t774 + t599 * t648 + (qJ(4) * t746 + t644 * t750) * t636;
t775 = t638 * t528;
t457 = t634 * t503 + t775;
t451 = pkin(10) * t705 + t457;
t620 = t640 * t750;
t551 = qJD(4) + t620 + (-pkin(3) * t746 - t606) * t636;
t481 = -pkin(4) * t579 - pkin(10) * t582 + t551;
t430 = t451 * t647 + t481 * t643;
t574 = pkin(9) * qJDD(2) * t636 + (qJD(2) * t749 + qJDD(1) * t645) * t637;
t733 = qJDD(2) * t640;
t622 = qJDD(3) + t733;
t735 = qJD(2) * qJD(4);
t745 = qJD(3) * t640;
t621 = qJDD(1) * t776;
t724 = qJD(2) * t777;
t699 = qJD(1) * t724;
t584 = qJDD(2) * pkin(2) + t621 - t699;
t734 = qJDD(1) * t641;
t715 = t636 * t734;
t754 = t584 * t773 + t648 * t715;
t439 = pkin(3) * t622 + t694 * t743 + (-t606 * t745 - t574 + (-qJ(4) * qJDD(2) - qJD(3) * t750 - t735) * t636) * t644 + t754;
t691 = qJD(3) * t612 + t648 * t574 + t584 * t774 + t606 * t721 + t644 * t715;
t656 = -t599 * t744 + t691;
t736 = qJD(2) * qJD(3);
t717 = t644 * t736;
t673 = t717 - t731;
t447 = (-qJ(4) * t673 + t648 * t735) * t636 + t656;
t422 = t634 * t439 + t638 * t447;
t420 = pkin(10) * t622 + t422;
t619 = t640 * t734;
t698 = t636 * t717;
t532 = qJDD(4) + pkin(3) * t698 + t619 + (-pkin(3) * t731 - t584) * t636;
t539 = t609 + (-qJD(3) * t670 - t714) * t636;
t716 = t648 * t736;
t540 = -t634 * t698 + (qJDD(2) * t683 + t638 * t716) * t636;
t442 = -pkin(4) * t539 - pkin(10) * t540 + t532;
t710 = t420 * t643 - t647 * t442;
t806 = qJD(5) * t430 + t710;
t413 = -pkin(5) * t538 + t806;
t635 = sin(pkin(12));
t639 = cos(pkin(12));
t771 = t641 * t649;
t594 = -t635 * t645 + t639 * t771;
t778 = t637 * t640;
t556 = -t594 * t636 - t639 * t778;
t596 = -t635 * t771 - t639 * t645;
t557 = -t596 * t636 + t635 * t778;
t589 = t683 * t640;
t654 = t587 * t641 + (t589 * t649 - t600 * t645) * t637;
t772 = t641 * t645;
t597 = -t635 * t772 + t639 * t649;
t784 = t635 * t637;
t657 = t587 * t784 + t589 * t596 - t597 * t600;
t595 = t635 * t649 + t639 * t772;
t779 = t637 * t639;
t658 = -t587 * t779 + t589 * t594 - t595 * t600;
t667 = g(1) * (t557 * t647 - t643 * t657) + g(2) * (t556 * t647 - t643 * t658) + g(3) * (-t643 * t654 + t585);
t808 = t544 * (-pkin(5) * t659 + pkin(11) * t544) + t413 + t667;
t462 = t527 * t634 + t775;
t467 = -qJD(5) * t659 + t643 * t540 - t647 * t622;
t465 = qJDD(6) + t467;
t629 = -pkin(3) * t638 - pkin(4);
t598 = -pkin(5) * t647 - pkin(11) * t643 + t629;
t807 = t544 * (t462 - t576 * (pkin(5) * t643 - pkin(11) * t647)) - t598 * t465;
t805 = g(1) * (t596 * t640 + t636 * t784) - g(2) * (-t594 * t640 + t636 * t779);
t650 = qJD(2) ^ 2;
t466 = qJD(5) * t614 + t647 * t540 - t582 * t740 + t643 * t622;
t737 = qJD(6) * t646;
t728 = t646 * t466 + t642 * t538 + t576 * t737;
t738 = qJD(6) * t642;
t431 = t659 * t738 + t728;
t802 = t431 * t642;
t800 = t495 * t544;
t497 = t576 * t642 - t646 * t659;
t799 = t497 * t544;
t798 = t497 * t579;
t628 = pkin(3) * t634 + pkin(10);
t797 = t544 * t628;
t706 = t544 * t646;
t796 = t545 * t576;
t795 = t545 * t582;
t794 = t659 * t576;
t793 = t659 * t582;
t791 = t576 * t643;
t790 = t579 * t647;
t789 = t593 * t636;
t788 = t593 * t643;
t786 = t622 * MDP(9);
t510 = t634 * t528;
t783 = t636 * t643;
t781 = t636 * t647;
t770 = t642 * t465;
t766 = t645 * t650;
t765 = t646 * t465;
t762 = qJDD(1) - g(3);
t761 = -pkin(5) * t580 + qJD(5) * t810 - t812;
t463 = t527 * t638 - t510;
t523 = pkin(3) * t725 + pkin(4) * t582 - pkin(10) * t579;
t759 = t647 * t463 + t643 * t523;
t755 = t647 * t538 + t579 * t791;
t632 = t644 ^ 2;
t751 = -t648 ^ 2 + t632;
t742 = qJD(5) * t544;
t741 = qJD(5) * t628;
t730 = t636 * t777;
t722 = t636 * t743;
t720 = t636 * t640 * t650;
t672 = t647 * t420 + t643 * t442 - t451 * t740 + t481 * t739;
t412 = pkin(11) * t538 + t672;
t421 = t439 * t638 - t634 * t447;
t419 = -pkin(4) * t622 - t421;
t415 = pkin(5) * t467 - pkin(11) * t466 + t419;
t711 = -t642 * t412 + t646 * t415;
t709 = t466 * t642 - t646 * t538;
t456 = t638 * t503 - t510;
t518 = t562 * t638 - t634 * t577;
t707 = t576 * t647;
t704 = qJD(3) + 0.2e1 * t747;
t703 = t622 + t733;
t631 = t636 ^ 2;
t702 = t631 * t637 * t766;
t700 = t636 * t724;
t696 = -g(1) * t596 - g(2) * t594;
t695 = g(1) * t597 + g(2) * t595;
t504 = -pkin(4) * t640 - t518;
t558 = t587 * t643 - t647 * t640;
t559 = t587 * t647 + t640 * t643;
t460 = pkin(5) * t558 - pkin(11) * t559 + t504;
t693 = -pkin(11) * t580 - qJD(6) * t460 + t811;
t449 = pkin(11) * t586 + t810;
t516 = -qJD(5) * t558 - t581 * t647;
t517 = qJD(5) * t559 - t581 * t643;
t692 = -pkin(5) * t517 + pkin(11) * t516 + qJD(6) * t449 - t758;
t690 = t646 * t412 + t642 * t415;
t426 = pkin(11) * t576 + t430;
t450 = -pkin(4) * t705 - t456;
t433 = t545 * pkin(5) + pkin(11) * t659 + t450;
t417 = t426 * t646 + t433 * t642;
t689 = t426 * t642 - t433 * t646;
t429 = -t451 * t643 + t481 * t647;
t471 = t490 * t647 + t788;
t489 = -t638 * t553 + t554 * t634;
t688 = t471 * t646 + t489 * t642;
t687 = -t471 * t642 + t489 * t646;
t684 = -t505 * t643 + t529 * t647;
t526 = t559 * t646 + t586 * t642;
t525 = t559 * t642 - t646 * t586;
t682 = -t574 + t695;
t675 = -t544 * t737 - t770;
t674 = t716 + t732;
t668 = t450 * t576 - t628 * t538;
t588 = t600 * t640;
t473 = t586 * t779 - t588 * t594 - t595 * t683;
t476 = -t586 * t784 - t588 * t596 - t597 * t683;
t492 = -t586 * t641 + (-t588 * t649 - t645 * t683) * t637;
t666 = g(1) * t476 + g(2) * t473 + g(3) * t492;
t663 = -g(3) * t777 - t695;
t661 = -t419 - t666;
t531 = t582 * t642 + t646 * t790;
t660 = -t643 * t738 + t646 * t739 - t531;
t425 = -pkin(5) * t576 - t429;
t655 = -pkin(11) * t465 + (t425 + t429) * t544;
t653 = qJD(6) * t797 + t666;
t652 = -g(1) * t657 - g(2) * t658 - g(3) * t654 + (pkin(11) * t582 - qJD(6) * t598 + t759) * t544;
t592 = pkin(3) * t774 + t719;
t575 = -t606 * t636 + t620;
t552 = -t584 * t636 + t619;
t542 = (-t589 * t645 - t600 * t649) * t637;
t541 = (-t588 * t645 + t649 * t683) * t637;
t530 = -t646 * t582 + t642 * t790;
t515 = t641 * t722 + (qJD(2) * t676 + qJD(3) * t679) * t637;
t514 = -t641 * t723 + (qJD(2) * t678 - qJD(3) * t677) * t637;
t507 = t542 * t647 + t643 * t730;
t501 = -t589 * t597 - t596 * t600;
t500 = -t588 * t597 + t596 * t683;
t499 = -t589 * t595 - t594 * t600;
t498 = -t588 * t595 + t594 * t683;
t488 = t497 * t740;
t479 = t647 * t654 + t788;
t469 = t501 * t647 + t597 * t783;
t468 = t499 * t647 + t595 * t783;
t459 = t514 * t634 + t515 * t638;
t458 = -t638 * t514 + t515 * t634;
t455 = t557 * t643 + t647 * t657;
t453 = t556 * t643 + t647 * t658;
t448 = -pkin(5) * t586 - t684;
t446 = qJD(6) * t526 + t516 * t642 - t646 * t580;
t445 = -qJD(6) * t525 + t516 * t646 + t580 * t642;
t434 = -pkin(5) * t582 + t463 * t643 - t523 * t647;
t432 = qJD(6) * t497 + t709;
t428 = qJD(5) * t471 + t459 * t643 - t647 * t700;
t427 = qJD(5) * t809 + t459 * t647 + t643 * t700;
t411 = -qJD(6) * t417 + t711;
t410 = -qJD(6) * t689 + t690;
t1 = [t762 * MDP(1) + (t514 * t705 + t553 * t622 - t648 * t702 + t673 * t789) * MDP(10) + (-t515 * t705 - t554 * t622 + t644 * t702 + t674 * t789) * MDP(11) + (t458 * t582 + t459 * t579 + t489 * t540 + t490 * t539) * MDP(12) + (-t421 * t489 + t422 * t490 - t456 * t458 + t457 * t459 + t532 * t593 + t551 * t700 - g(3)) * MDP(13) + (-t428 * t576 + t458 * t545 + t467 * t489 + t538 * t809) * MDP(19) + (-t427 * t576 - t458 * t659 + t466 * t489 - t471 * t538) * MDP(20) + ((-qJD(6) * t688 - t427 * t642 + t458 * t646) * t544 + t687 * t465 + t428 * t495 - t809 * t432) * MDP(26) + (-(qJD(6) * t687 + t427 * t646 + t458 * t642) * t544 - t688 * t465 + t428 * t497 - t809 * t431) * MDP(27) + ((qJDD(2) * t649 - t766) * MDP(3) + (-qJDD(2) * t645 - t649 * t650) * MDP(4)) * t637; (-t752 * t622 - t656 * t640 + t552 * t782 + t575 * t722 - g(1) * (-t596 * t644 - t597 * t773) - g(2) * (-t594 * t644 - t595 * t773) - g(3) * t665 + (pkin(9) * t723 - t817) * t705) * MDP(11) + (t466 * t586 + t516 * t576 + t538 * t559 - t580 * t659) * MDP(16) + (-t466 * t558 - t467 * t559 - t516 * t545 + t517 * t659) * MDP(15) + (t466 * t559 - t516 * t659) * MDP(14) + (t684 * t538 - t710 * t586 + t429 * t580 + t504 * t467 + t419 * t558 + t450 * t517 - g(1) * t469 - g(2) * t468 - g(3) * t507 + t812 * t576 + t758 * t545 + (-t430 * t586 - t576 * t810) * qJD(5)) * MDP(19) + (-t810 * t538 - t672 * t586 - t430 * t580 + t504 * t466 + t419 * t559 + t450 * t516 - g(1) * (-t501 * t643 + t597 * t781) - g(2) * (-t499 * t643 + t595 * t781) - g(3) * (-t542 * t643 + t647 * t730) + t811 * t576 - t758 * t659) * MDP(20) + (-t421 * t587 - t422 * t586 + t456 * t581 - t457 * t580 - t518 * t540 + t519 * t539 + t579 * t757 + t582 * t758 + t636 * t663) * MDP(12) + ((-t449 * t642 + t460 * t646) * t465 + t411 * t558 - t689 * t517 + t448 * t432 + t413 * t525 + t425 * t446 - g(1) * (t469 * t646 + t500 * t642) - g(2) * (t468 * t646 + t498 * t642) - g(3) * (t507 * t646 + t541 * t642) + (t642 * t693 - t646 * t692) * t544 + t761 * t495) * MDP(26) + (t625 * t622 + t754 * t640 - t572 * t705 + (-t599 * t745 + (-pkin(9) * qJD(3) * t705 - t552) * t636 + t696) * t648 + ((-pkin(9) * t622 + qJD(3) * t575) * t636 + ((-t727 + (-t606 - t803) * t640 - pkin(2) * qJD(3)) * qJD(3) + t682) * t640) * t644 - g(3) * t664) * MDP(10) + ((-pkin(2) * t673 + t648 * t699) * MDP(10) + (-pkin(2) * t674 - t644 * t699) * MDP(11) + 0.2e1 * (t644 * t731 - t736 * t751) * MDP(6) + (qJDD(2) * t632 + 0.2e1 * t644 * t716) * MDP(5)) * t631 + (-t762 * t777 + t695) * MDP(4) + (-g(3) * t776 + t621 + t696) * MDP(3) + (t422 * t519 + t421 * t518 - g(1) * (-t592 * t597 + t596 * t630) - g(2) * (-t592 * t595 + t594 * t630) - g(3) * (-t592 * t645 + t630 * t649) * t637 + t757 * t457 - t758 * t456 + (-t532 * t630 + (pkin(3) * t744 - t726) * t551) * t636) * MDP(13) + (-(t449 * t646 + t460 * t642) * t465 - t410 * t558 - t417 * t517 + t448 * t431 + t413 * t526 + t425 * t445 - g(1) * (-t469 * t642 + t500 * t646) - g(2) * (-t468 * t642 + t498 * t646) - g(3) * (-t507 * t642 + t541 * t646) + (t642 * t692 + t646 * t693) * t544 + t761 * t497) * MDP(27) + (t644 * t703 + t704 * t743) * t636 * MDP(7) + (t648 * t703 - t704 * t744) * t636 * MDP(8) + qJDD(2) * MDP(2) + (t538 * t586 + t576 * t580) * MDP(18) + (-t467 * t586 - t517 * t576 - t538 * t558 - t545 * t580) * MDP(17) + (-t432 * t558 - t446 * t544 - t465 * t525 - t495 * t517) * MDP(24) + (t431 * t558 + t445 * t544 + t465 * t526 + t497 * t517) * MDP(23) + (t465 * t558 + t517 * t544) * MDP(25) + (-t431 * t525 - t432 * t526 - t445 * t495 - t446 * t497) * MDP(22) + (t431 * t526 + t445 * t497) * MDP(21) + t640 * t786; (t636 * t732 - t648 * t720) * MDP(7) + (t644 * t720 + t713) * MDP(8) + t786 + (-g(3) * t553 + t682 * t644 - t805 * t648 + (t599 * t773 + (-(-t606 * t640 - t727) * t640 - t575 * t636) * t644) * qJD(2) + t754) * MDP(10) + (g(3) * t554 + t695 * t648 + t805 * t644 + ((-t644 * t599 + t753) * t640 - t575 * t780) * qJD(2) + t753 * qJD(3) - t691) * MDP(11) + ((t457 - t462) * t582 + (t456 - t463) * t579 + (t539 * t634 - t540 * t638) * pkin(3)) * MDP(12) + (t456 * t462 - t457 * t463 + (t421 * t638 + t422 * t634 + (-t551 * t748 - t663) * t644 + (-g(3) * (t636 * t641 + t640 * t776) - t805) * t648) * pkin(3)) * MDP(13) + (t466 * t643 - t659 * t707) * MDP(14) + ((t466 - t796) * t647 + (-t467 + t794) * t643) * MDP(15) + (t538 * t643 + t576 * t707 + t793) * MDP(16) + (-t576 * t740 + t755 + t795) * MDP(17) - t576 * t582 * MDP(18) + (-t429 * t582 - t462 * t545 + t629 * t467 + (t463 * t576 + t668) * t643 + ((-t523 - t741) * t576 + t661) * t647) * MDP(19) + (t629 * t466 + t759 * t576 + t430 * t582 + t462 * t659 + t668 * t647 + (t576 * t741 - t661) * t643) * MDP(20) + (t431 * t643 * t646 + t497 * t660) * MDP(21) + (t495 * t531 + t497 * t530 + (-t495 * t646 - t497 * t642) * t739 + (-t802 - t432 * t646 + (t495 * t642 - t497 * t646) * qJD(6)) * t643) * MDP(22) + (-t431 * t647 + t488 + (t765 - t798) * t643 + t660 * t544) * MDP(23) + (t432 * t647 + (-t642 * t739 + t530) * t544 + (t675 - t813) * t643) * MDP(24) + (-t465 * t647 + t544 * t791) * MDP(25) + (-t425 * t530 - t434 * t495 - t807 * t646 + t652 * t642 + (-t628 * t770 - t411 + (t425 * t642 + t495 * t628) * qJD(5) - t653 * t646) * t647 + (t425 * t737 + t413 * t642 + t689 * t579 + t628 * t432 + (t642 * t797 - t689) * qJD(5)) * t643) * MDP(26) + (-t425 * t531 - t434 * t497 + t807 * t642 + t652 * t646 + (-t628 * t765 + t410 + (t425 * t646 + t497 * t628) * qJD(5) + t653 * t642) * t647 + (-t425 * t738 + t413 * t646 + t417 * t579 + t628 * t431 + (t628 * t706 - t417) * qJD(5)) * t643) * MDP(27) + (-MDP(5) * t644 * t648 + MDP(6) * t751) * t631 * t650; (-t579 ^ 2 - t582 ^ 2) * MDP(12) + (-g(1) * t557 - g(2) * t556 - g(3) * t593 + t456 * t582 - t457 * t579 + t532) * MDP(13) + (t755 - t795) * MDP(19) + MDP(20) * t793 + t530 * t544 * MDP(26) + (t531 * t544 + t488) * MDP(27) + ((-t642 * t742 - t432) * MDP(26) + (-t646 * t742 - t431) * MDP(27) - t576 ^ 2 * MDP(20)) * t647 + (-qJD(5) * t576 * MDP(19) - t538 * MDP(20) + (t675 + t813) * MDP(26) + (t544 * t738 - t765 - t798) * MDP(27)) * t643; -t545 ^ 2 * MDP(15) + (t466 + t796) * MDP(16) + (-t467 - t794) * MDP(17) + t538 * MDP(18) + (t430 * t576 - t667 - t806) * MDP(19) + (g(1) * t455 + g(2) * t453 + g(3) * t479 + t429 * t576 + t450 * t545 - t672) * MDP(20) + (t497 * t706 + t802) * MDP(21) + ((t431 - t800) * t646 + (-t432 - t799) * t642) * MDP(22) + (t544 * t706 + t770) * MDP(23) + (-t544 ^ 2 * t642 + t765) * MDP(24) + (-pkin(5) * t432 - t430 * t495 + t655 * t642 - t646 * t808) * MDP(26) + (-pkin(5) * t431 - t430 * t497 + t642 * t808 + t655 * t646) * MDP(27) - (MDP(14) * t545 - MDP(15) * t659 - t450 * MDP(19) - MDP(23) * t497 + t495 * MDP(24) - t544 * MDP(25) + MDP(26) * t689 + MDP(27) * t417) * t659; t497 * t495 * MDP(21) + (-t495 ^ 2 + t497 ^ 2) * MDP(22) + (t728 + t800) * MDP(23) + (-t709 + t799) * MDP(24) + t465 * MDP(25) + (t417 * t544 - t425 * t497 - g(1) * (-t455 * t642 - t476 * t646) - g(2) * (-t453 * t642 - t473 * t646) - g(3) * (-t479 * t642 - t492 * t646) + t711) * MDP(26) + (-t689 * t544 + t425 * t495 - g(1) * (-t455 * t646 + t476 * t642) - g(2) * (-t453 * t646 + t473 * t642) - g(3) * (-t479 * t646 + t492 * t642) - t690) * MDP(27) + (MDP(23) * t792 - MDP(24) * t497 - MDP(26) * t417 + MDP(27) * t689) * qJD(6);];
tau  = t1;
