% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:07:43
% EndTime: 2019-03-08 22:08:12
% DurationCPUTime: 12.42s
% Computational Cost: add. (14433->592), mult. (43106->832), div. (0->0), fcn. (35992->14), ass. (0->292)
t215 = cos(pkin(7));
t223 = cos(qJ(3));
t224 = cos(qJ(2));
t329 = t223 * t224;
t219 = sin(qJ(3));
t220 = sin(qJ(2));
t335 = t219 * t220;
t249 = -t215 * t335 + t329;
t317 = qJD(3) * t223;
t297 = t215 * t317;
t214 = sin(pkin(6));
t324 = qJD(1) * t214;
t413 = pkin(2) * t297 - t249 * t324;
t213 = sin(pkin(7));
t376 = -pkin(9) - qJ(4);
t291 = t376 * t219;
t315 = qJD(4) * t223;
t412 = (qJD(3) * t291 + t315) * t213 + t413;
t212 = sin(pkin(13));
t333 = t220 * t223;
t334 = t219 * t224;
t251 = -t215 * t333 - t334;
t159 = t251 * t324;
t345 = t212 * t159;
t359 = cos(pkin(13));
t341 = t215 * t219;
t204 = pkin(2) * t341;
t316 = qJD(4) * t219;
t343 = t213 * t223;
t387 = (t343 * t376 - t204) * qJD(3) - t213 * t316;
t360 = -t212 * t387 - t359 * t412 + t345;
t266 = t359 * t343;
t318 = qJD(3) * t219;
t299 = t213 * t318;
t169 = -qJD(3) * t266 + t212 * t299;
t389 = (t212 * t223 + t219 * t359) * t213;
t170 = qJD(3) * t389;
t302 = t220 * t324;
t411 = pkin(3) * t299 + pkin(4) * t170 + pkin(10) * t169 - t213 * t302;
t196 = qJD(2) * t266;
t322 = qJD(2) * t213;
t300 = t219 * t322;
t167 = t212 * t300 - t196;
t241 = qJD(5) + t167;
t344 = t213 * t219;
t174 = t212 * t344 - t266;
t187 = (-pkin(3) * t223 - pkin(2)) * t213;
t122 = t174 * pkin(4) - pkin(10) * t389 + t187;
t218 = sin(qJ(5));
t222 = cos(qJ(5));
t313 = qJD(5) * t222;
t314 = qJD(5) * t218;
t340 = t215 * t223;
t205 = pkin(2) * t340;
t149 = t215 * pkin(3) + t213 * t291 + t205;
t182 = pkin(9) * t343 + t204;
t165 = qJ(4) * t343 + t182;
t112 = t212 * t149 + t359 * t165;
t96 = pkin(10) * t215 + t112;
t372 = t122 * t313 + t411 * t218 - t222 * t360 - t314 * t96;
t361 = (t159 - t387) * t359 + t412 * t212;
t157 = qJD(2) * t170;
t385 = qJD(5) * t241;
t401 = t167 * t241 + t385;
t410 = -t218 * t157 - t222 * t401;
t409 = pkin(11) * t170 + t372;
t171 = qJD(2) * t389;
t320 = qJD(2) * t215;
t278 = qJD(3) + t320;
t282 = t218 * t171 - t222 * t278;
t384 = qJD(6) + t282;
t133 = t222 * t171 + t218 * t278;
t217 = sin(qJ(6));
t221 = cos(qJ(6));
t237 = t221 * t241;
t90 = t133 * t217 - t237;
t408 = t384 * t90;
t92 = t221 * t133 + t217 * t241;
t407 = t384 * t92;
t109 = t222 * t169 - t215 * t313 + t314 * t389;
t143 = t215 * t218 + t222 * t389;
t110 = qJD(5) * t143 - t218 * t169;
t406 = pkin(5) * t110 + pkin(11) * t109 + t361;
t184 = pkin(9) * t322 + t302;
t370 = qJD(2) * pkin(2);
t193 = t224 * t324 + t370;
t216 = cos(pkin(6));
t323 = qJD(1) * t216;
t303 = t213 * t323;
t326 = t193 * t340 + t223 * t303;
t120 = (-qJ(4) * t322 - t184) * t219 + t326;
t330 = t223 * t184;
t253 = t193 * t341 + t330;
t301 = t219 * t323;
t319 = qJD(2) * t223;
t121 = (qJ(4) * t319 + t301) * t213 + t253;
t285 = t359 * t121;
t62 = t212 * t120 + t285;
t405 = t62 - t241 * (pkin(5) * t218 - pkin(11) * t222);
t207 = pkin(3) * t212 + pkin(10);
t279 = pkin(3) * t300;
t116 = pkin(4) * t171 + pkin(10) * t167 + t279;
t103 = t212 * t121;
t63 = t120 * t359 - t103;
t39 = t218 * t116 + t222 * t63;
t404 = pkin(11) * t171 + t207 * t314 + t39;
t331 = t222 * t167;
t124 = t171 * t217 - t221 * t331;
t403 = -t221 * t313 + t124;
t273 = t219 * t302;
t298 = t213 * t317;
t270 = t216 * t298;
t321 = qJD(2) * t214;
t289 = qJD(1) * t321;
t304 = qJD(1) * t270 + t193 * t297 + t289 * t329;
t65 = -t184 * t318 + (-t215 * t273 + (-qJ(4) * t318 + t315) * t213) * qJD(2) + t304;
t290 = t359 * t65;
t348 = t193 * t215;
t127 = t219 * (t303 + t348) + t330;
t244 = -qJ(4) * t317 - t316;
t388 = -t127 * qJD(3) + (t213 * t244 + t159) * qJD(2);
t36 = t212 * t388 + t290;
t94 = pkin(3) * t278 + t120;
t55 = t212 * t94 + t285;
t53 = pkin(10) * t278 + t55;
t201 = t215 * t323;
t136 = qJD(4) + t201 + (-pkin(3) * t319 - t193) * t213;
t69 = pkin(4) * t167 - pkin(10) * t171 + t136;
t267 = qJD(2) * t299;
t158 = qJD(3) * t196 - t212 * t267;
t268 = t220 * t289;
t163 = pkin(3) * t267 + t213 * t268;
t78 = pkin(4) * t157 - pkin(10) * t158 + t163;
t248 = -t218 * t78 - t222 * t36 - t69 * t313 + t314 * t53;
t29 = -t218 * t53 + t222 * t69;
t402 = -t241 * t29 - t248;
t30 = t218 * t69 + t222 * t53;
t26 = pkin(11) * t241 + t30;
t54 = t359 * t94 - t103;
t52 = -pkin(4) * t278 - t54;
t31 = pkin(5) * t282 - t133 * pkin(11) + t52;
t12 = t217 * t31 + t221 * t26;
t35 = t212 * t65 - t359 * t388;
t332 = t222 * t158;
t88 = qJD(5) * t282 - t332;
t338 = t218 * t158;
t89 = qJD(5) * t133 + t338;
t16 = pkin(5) * t89 + pkin(11) * t88 + t35;
t7 = pkin(11) * t157 - t248;
t2 = -qJD(6) * t12 + t221 * t16 - t217 * t7;
t400 = -t12 * t384 - t2;
t260 = t217 * t26 - t221 * t31;
t1 = -qJD(6) * t260 + t217 * t16 + t221 * t7;
t399 = t384 * t260 + t1;
t398 = t207 * t385 + t35;
t394 = t218 * t122 + t222 * t96;
t371 = -qJD(5) * t394 + t360 * t218 + t222 * t411;
t396 = t241 * t90;
t123 = -t221 * t171 - t217 * t331;
t311 = qJD(6) * t221;
t264 = t218 * t311 - t123;
t395 = t264 * t92;
t281 = t218 * t241;
t393 = t133 * t281;
t392 = t167 * t278;
t391 = t217 * t384;
t312 = qJD(6) * t217;
t236 = -t218 * t312 - t403;
t390 = t236 * t384;
t357 = qJD(6) * t92;
t45 = -t221 * t157 - t217 * t88 + t357;
t386 = qJD(3) * t182;
t287 = t218 * t36 - t222 * t78;
t10 = -qJD(5) * t30 - t287;
t383 = t171 ^ 2;
t225 = qJD(2) ^ 2;
t49 = pkin(11) * t174 + t394;
t142 = -t222 * t215 + t218 * t389;
t111 = t149 * t359 - t212 * t165;
t95 = -t215 * pkin(4) - t111;
t58 = t142 * pkin(5) - t143 * pkin(11) + t95;
t21 = -t217 * t49 + t221 * t58;
t382 = qJD(6) * t21 + t406 * t217 + t221 * t409;
t22 = t217 * t58 + t221 * t49;
t381 = -qJD(6) * t22 - t217 * t409 + t406 * t221;
t8 = -t157 * pkin(5) - t10;
t380 = t217 * t8;
t379 = t221 * t8;
t252 = t215 * t329 - t335;
t137 = t214 * t252 + t216 * t343;
t250 = t215 * t334 + t333;
t138 = t214 * t250 + t216 * t344;
t85 = -t137 * t359 + t138 * t212;
t378 = t35 * t85;
t377 = t92 * t90;
t208 = -pkin(3) * t359 - pkin(4);
t183 = -t222 * pkin(5) - t218 * pkin(11) + t208;
t347 = t207 * t222;
t141 = t183 * t217 + t221 * t347;
t375 = qJD(6) * t141 - t217 * t404 + t221 * t405;
t140 = t183 * t221 - t217 * t347;
t374 = -qJD(6) * t140 + t217 * t405 + t221 * t404;
t373 = -t170 * pkin(5) - t371;
t369 = t142 * t89;
t368 = t167 * t30;
t367 = t167 * t92;
t366 = t217 * t89;
t365 = t221 * t89;
t364 = t222 * t45;
t363 = t89 * t222;
t362 = -t218 * t89 - t282 * t313;
t358 = qJD(6) * t90;
t356 = t282 * t167;
t355 = t133 * t282;
t354 = t133 * t171;
t353 = t157 * t174;
t162 = -t193 * t213 + t201;
t352 = t162 * t213;
t351 = t171 * t282;
t350 = t171 * t167;
t349 = t171 * t215;
t209 = t213 ^ 2;
t346 = t209 * t225;
t342 = t214 * t225;
t337 = t218 * t221;
t336 = t219 * t184;
t328 = -t159 - t386;
t327 = pkin(9) * t299 - t413;
t325 = t219 ^ 2 - t223 ^ 2;
t310 = t171 * qJD(3);
t308 = qJD(2) * qJD(3);
t307 = t209 * t370;
t306 = t92 * t313;
t305 = t220 * t342;
t296 = t217 * t313;
t294 = t213 * t215 * t225;
t288 = t223 * t308;
t44 = -qJD(6) * t237 + t133 * t312 - t217 * t157 + t221 * t88;
t286 = t222 * t44 + t92 * t314;
t284 = -t44 + t358;
t280 = t384 * t221;
t277 = qJD(3) + 0.2e1 * t320;
t276 = t209 * t305;
t275 = t219 * t223 * t346;
t272 = t213 * t220 * t321;
t271 = t216 * t299;
t269 = -t45 * t337 + t403 * t90;
t262 = -t12 * t217 + t221 * t260;
t261 = -t12 * t221 - t217 * t260;
t180 = -t213 * t214 * t224 + t215 * t216;
t86 = t212 * t137 + t138 * t359;
t67 = t180 * t218 + t222 * t86;
t43 = t217 * t85 + t221 * t67;
t42 = -t217 * t67 + t221 * t85;
t38 = t116 * t222 - t218 * t63;
t59 = t122 * t222 - t218 * t96;
t257 = t180 * t222 - t218 * t86;
t119 = t143 * t221 + t174 * t217;
t256 = t209 * t219 * t288;
t255 = -t307 + t352;
t254 = -t311 * t384 - t366;
t247 = (t123 - t296) * t384;
t25 = -pkin(5) * t241 - t29;
t246 = -pkin(11) * t89 + t25 * t384;
t242 = -t207 * t157 + t241 * t52;
t240 = t251 * qJD(2);
t232 = -qJD(3) * t184 - t215 * t268;
t231 = (pkin(3) * t318 - t302) * t213;
t229 = qJD(6) * t262 + t1 * t221 - t2 * t217;
t228 = t222 * t157 - t218 * t401;
t181 = -pkin(9) * t344 + t205;
t164 = t167 ^ 2;
t126 = t326 - t336;
t118 = t143 * t217 - t221 * t174;
t108 = t270 + (qJD(2) * t249 + qJD(3) * t252) * t214;
t107 = -t271 + (-qJD(3) * t250 + t240) * t214;
t77 = pkin(5) * t133 + pkin(11) * t282;
t74 = -t253 * qJD(3) + (t214 * t240 - t271) * qJD(1);
t73 = t219 * t232 + t304;
t57 = t212 * t107 + t108 * t359;
t56 = -t107 * t359 + t108 * t212;
t48 = -pkin(5) * t174 - t59;
t47 = qJD(6) * t119 - t217 * t109 - t221 * t170;
t46 = t221 * t109 + t143 * t312 - t217 * t170 - t174 * t311;
t32 = -pkin(5) * t171 - t38;
t28 = qJD(5) * t67 + t218 * t57 - t222 * t272;
t27 = qJD(5) * t257 + t218 * t272 + t222 * t57;
t18 = t217 * t77 + t221 * t29;
t17 = -t217 * t29 + t221 * t77;
t6 = -qJD(6) * t43 - t217 * t27 + t221 * t56;
t5 = qJD(6) * t42 + t217 * t56 + t221 * t27;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, -t224 * t342, 0, 0, 0, 0, 0, 0, 0, 0, t107 * t278 + t180 * t267 - t223 * t276, t180 * t213 * t288 - t108 * t278 + t219 * t276 (-t107 * t219 + t108 * t223 + (-t137 * t223 - t138 * t219) * qJD(3)) * t322, t107 * t126 + t108 * t127 + t137 * t74 + t138 * t73 + (qJD(1) * t180 + t162) * t272, 0, 0, 0, 0, 0, 0, t180 * t157 + t167 * t272 - t278 * t56, t180 * t158 + t171 * t272 - t278 * t57, -t157 * t86 + t158 * t85 - t167 * t57 + t171 * t56, t136 * t272 + t163 * t180 + t36 * t86 - t54 * t56 + t55 * t57 + t378, 0, 0, 0, 0, 0, 0, t157 * t257 - t241 * t28 + t282 * t56 + t85 * t89, t56 * t133 - t67 * t157 - t241 * t27 - t85 * t88, t133 * t28 + t257 * t88 - t27 * t282 - t67 * t89, t10 * t257 - t248 * t67 + t27 * t30 - t28 * t29 + t52 * t56 + t378, 0, 0, 0, 0, 0, 0, -t257 * t45 + t28 * t90 + t384 * t6 + t42 * t89, t257 * t44 + t28 * t92 - t384 * t5 - t43 * t89, t42 * t44 - t43 * t45 - t5 * t90 - t6 * t92, t1 * t43 + t12 * t5 + t2 * t42 + t25 * t28 - t257 * t8 - t260 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t256, -0.2e1 * t325 * t209 * t308, t277 * t298, -0.2e1 * t256, -t277 * t299, 0 (qJD(2) * t328 + t74) * t215 + (t219 * t255 + t328) * qJD(3) (qJD(2) * t327 - t73) * t215 + (t223 * t255 + t327) * qJD(3) (-t219 * t74 + t223 * t73 + (-t126 * t223 - t127 * t219) * qJD(3) + ((-qJD(3) * t181 - t327) * t223 + (-t328 - t386) * t219) * qJD(2)) * t213, t181 * t74 + t182 * t73 - t327 * t127 + t328 * t126 + (-t307 - t352) * t302, t158 * t389 - t169 * t171, -t157 * t389 - t158 * t174 + t167 * t169 - t170 * t171, t158 * t215 - t169 * t278, t167 * t170 + t353, -t157 * t215 - t170 * t278, 0, t136 * t170 + t187 * t157 + t163 * t174 + t167 * t231 - t35 * t215 - t278 * t361, -t136 * t169 + t187 * t158 + t163 * t389 + t171 * t231 - t36 * t215 + t278 * t360, -t111 * t158 - t112 * t157 + t167 * t360 + t169 * t54 - t170 * t55 + t171 * t361 - t174 * t36 + t35 * t389, -t111 * t35 + t112 * t36 + t136 * t231 + t163 * t187 - t360 * t55 - t361 * t54, -t109 * t133 - t143 * t88, t109 * t282 - t110 * t133 + t142 * t88 - t143 * t89, -t109 * t241 + t133 * t170 + t143 * t157 - t88 * t174, t110 * t282 + t369, -t110 * t241 - t142 * t157 - t170 * t282 - t89 * t174, t170 * t241 + t353, t10 * t174 + t52 * t110 + t35 * t142 + t59 * t157 + t29 * t170 + t241 * t371 + t282 * t361 + t95 * t89, -t52 * t109 + t133 * t361 + t35 * t143 - t157 * t394 - t30 * t170 + t174 * t248 - t241 * t372 - t95 * t88, -t10 * t143 + t109 * t29 - t110 * t30 - t133 * t371 + t142 * t248 - t282 * t372 - t394 * t89 + t59 * t88, t10 * t59 - t248 * t394 + t29 * t371 + t30 * t372 + t35 * t95 + t361 * t52, -t119 * t44 - t46 * t92, t118 * t44 - t119 * t45 + t46 * t90 - t47 * t92, t110 * t92 + t119 * t89 - t142 * t44 - t384 * t46, t118 * t45 + t47 * t90, -t110 * t90 - t118 * t89 - t142 * t45 - t384 * t47, t110 * t384 + t369, -t110 * t260 + t118 * t8 + t142 * t2 + t21 * t89 + t25 * t47 + t373 * t90 + t381 * t384 + t45 * t48, -t1 * t142 - t110 * t12 + t119 * t8 - t22 * t89 - t25 * t46 + t373 * t92 - t382 * t384 - t44 * t48, -t1 * t118 - t119 * t2 - t12 * t47 + t21 * t44 - t22 * t45 - t260 * t46 - t381 * t92 - t382 * t90, t1 * t22 + t12 * t382 + t2 * t21 + t25 * t373 - t260 * t381 + t48 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, t325 * t346, -t223 * t294, t275, t219 * t294, 0, t127 * t278 + t232 * t223 + (-t162 * t322 - qJD(3) * t348 + (-qJD(3) * t213 * t216 - t224 * t321) * qJD(1)) * t219 (t126 + t336) * qJD(3) + (-t162 * t343 + (t126 + t273) * t215) * qJD(2) - t304, 0, 0, t350, -t164 + t383, t158 + t392, -t350, t310 + (t349 - t170) * qJD(2), 0, -t136 * t171 - t167 * t279 + t278 * t62 - t35, -t290 + t136 * t167 + (-t212 * (-t213 * t301 - t253) + t63) * qJD(3) + (t63 * t215 - t345 + (-t219 * pkin(3) * t171 - t212 * t244) * t213) * qJD(2) (t55 - t62) * t171 + (-t54 + t63) * t167 + (-t157 * t212 - t158 * t359) * pkin(3), t54 * t62 - t55 * t63 + (-t136 * t300 + t212 * t36 - t35 * t359) * pkin(3), t133 * t222 * t241 - t88 * t218 (-t88 - t356) * t222 - t393 + t362, -t354 - t410, t281 * t282 - t363, t228 + t351, -t241 * t171, -t29 * t171 + t208 * t89 + t242 * t218 - t222 * t398 - t38 * t241 - t62 * t282, -t62 * t133 + t30 * t171 - t208 * t88 + t218 * t398 + t242 * t222 + t39 * t241, t282 * t39 + t133 * t38 + (-t167 * t29 - t207 * t89 - t248 + (t133 * t207 - t29) * qJD(5)) * t222 + (-t368 - t207 * t88 - t10 + (t207 * t282 - t30) * qJD(5)) * t218, t208 * t35 - t29 * t38 - t30 * t39 - t52 * t62 + (-t10 * t218 - t222 * t248 + (-t218 * t30 - t222 * t29) * qJD(5)) * t207, t236 * t92 - t337 * t44, -t395 + (-t306 + (t44 + t358) * t218) * t217 + t269 (t365 + t367) * t218 + t390 + t286, t45 * t217 * t218 + (t264 + t296) * t90, t364 + t247 + (t254 - t396) * t218, t281 * t384 - t363, -t123 * t25 + t140 * t89 - t32 * t90 - t375 * t384 + (-t2 + (t207 * t90 + t217 * t25) * qJD(5)) * t222 + (t207 * t45 - t241 * t260 + t25 * t311 + t380) * t218, -t124 * t25 - t141 * t89 - t32 * t92 + t374 * t384 + (t1 + (t207 * t92 + t221 * t25) * qJD(5)) * t222 + (-t12 * t241 - t207 * t44 - t25 * t312 + t379) * t218, -t260 * t124 + t12 * t123 + t140 * t44 - t141 * t45 + t375 * t92 + t374 * t90 + t262 * t313 + (qJD(6) * t261 - t1 * t217 - t2 * t221) * t218, t1 * t141 + t140 * t2 - t25 * t32 + (t218 * t8 + t25 * t313) * t207 - t374 * t12 + t375 * t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310 + (t170 + t349) * qJD(2), t158 - t392, -t164 - t383, t167 * t55 + t171 * t54 + t163, 0, 0, 0, 0, 0, 0, t228 - t351, -t354 + t410 (t88 - t356) * t222 + t393 + t362, -t171 * t52 + (t241 * t30 + t10) * t222 + t402 * t218, 0, 0, 0, 0, 0, 0, -t364 + t247 + (t254 + t396) * t218 (-t365 + t367) * t218 - t390 + t286, t395 + (t218 * t284 + t306) * t217 + t269, -t260 * t123 - t12 * t124 + (-qJD(5) * t261 - t8) * t222 + (t241 * t25 + t229) * t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t133 ^ 2 - t282 ^ 2, t332 + t356, -t355, t133 * t167 - t338, t157, -t52 * t133 - t287 + t368, t282 * t52 - t402, 0, 0, -t44 * t217 + t280 * t92 (-t44 - t408) * t221 + (-t45 - t407) * t217, -t92 * t133 + t280 * t384 + t366, -t45 * t221 + t391 * t90, t90 * t133 - t384 * t391 + t365, -t384 * t133, -pkin(5) * t45 + t260 * t133 - t379 - t30 * t90 + (-pkin(11) * t311 - t17) * t384 + t246 * t217, pkin(5) * t44 + t12 * t133 + t380 - t30 * t92 + (pkin(11) * t312 + t18) * t384 + t246 * t221, t17 * t92 + t18 * t90 + ((-t45 + t357) * pkin(11) + t399) * t221 + (pkin(11) * t284 + t400) * t217, -pkin(5) * t8 + pkin(11) * t229 - t12 * t18 + t17 * t260 - t25 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, -t90 ^ 2 + t92 ^ 2, -t44 + t408, -t377, -t45 + t407, t89, -t25 * t92 - t400, t25 * t90 - t399, 0, 0;];
tauc_reg  = t3;
