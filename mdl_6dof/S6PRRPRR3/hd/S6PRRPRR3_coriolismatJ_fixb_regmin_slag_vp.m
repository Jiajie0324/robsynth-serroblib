% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRPRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:07:47
% EndTime: 2019-03-08 22:08:19
% DurationCPUTime: 16.38s
% Computational Cost: add. (12915->777), mult. (36959->1163), div. (0->0), fcn. (43308->14), ass. (0->596)
t494 = sin(pkin(13));
t495 = sin(pkin(7));
t503 = cos(qJ(3));
t797 = t495 * t503;
t499 = sin(qJ(3));
t798 = t495 * t499;
t824 = cos(pkin(13));
t438 = t494 * t798 - t797 * t824;
t437 = t438 ^ 2;
t502 = cos(qJ(5));
t864 = t437 * t502;
t497 = sin(qJ(6));
t825 = cos(pkin(7));
t635 = t503 * t825;
t483 = pkin(2) * t635;
t828 = pkin(9) + qJ(4);
t430 = -t798 * t828 + t483;
t399 = pkin(3) * t825 + t430;
t636 = t499 * t825;
t624 = pkin(2) * t636;
t431 = t797 * t828 + t624;
t633 = t824 * t431;
t298 = t494 * t399 + t633;
t277 = pkin(10) * t825 + t298;
t498 = sin(qJ(5));
t632 = t824 * t499;
t799 = t494 * t503;
t440 = (-t632 - t799) * t495;
t458 = (-pkin(3) * t503 - pkin(2)) * t495;
t521 = t438 * pkin(4) + t440 * pkin(10) + t458;
t171 = t277 * t498 - t502 * t521;
t141 = -pkin(5) * t438 + t171;
t643 = t171 / 0.2e1 - t141 / 0.2e1;
t863 = t497 * t643;
t501 = cos(qJ(6));
t862 = t501 * t643;
t345 = t502 * t438;
t645 = -t345 / 0.2e1;
t784 = t497 * t440;
t861 = t501 * t645 - t784 / 0.2e1;
t644 = t345 / 0.2e1;
t860 = t501 * t644 + t784 / 0.2e1;
t490 = t497 ^ 2;
t492 = t501 ^ 2;
t477 = t492 - t490;
t859 = qJD(5) * t477;
t637 = t498 * t825;
t755 = t502 * t440;
t394 = t637 - t755;
t777 = t498 * t440;
t392 = -t502 * t825 - t777;
t836 = -t498 / 0.2e1;
t668 = t392 * t836;
t833 = t502 / 0.2e1;
t559 = t394 * t833 + t668;
t858 = t559 * qJD(5);
t698 = t502 * qJD(3);
t482 = t498 * t698;
t629 = t559 * qJD(2) + t482;
t703 = t392 * qJD(2);
t554 = -qJD(3) * t559 + t394 * t703;
t857 = t392 ^ 2;
t496 = sin(pkin(6));
t504 = cos(qJ(2));
t634 = t504 * t825;
t826 = cos(pkin(6));
t638 = t495 * t826;
t500 = sin(qJ(2));
t796 = t496 * t500;
t688 = t499 * t796;
t385 = t688 + (-t496 * t634 - t638) * t503;
t774 = t500 * t503;
t386 = t499 * t638 + (t499 * t634 + t774) * t496;
t552 = -t494 * t385 + t386 * t824;
t856 = t552 / 0.2e1;
t249 = t824 * t385 + t386 * t494;
t855 = -t249 / 0.2e1;
t854 = t249 / 0.2e1;
t853 = -t552 / 0.2e1;
t307 = t497 * t394 - t501 * t438;
t852 = t307 / 0.2e1;
t764 = t501 * t394;
t785 = t497 * t438;
t309 = t764 + t785;
t851 = -t309 / 0.2e1;
t850 = t309 / 0.2e1;
t433 = t501 * t440;
t338 = -t345 * t497 + t433;
t849 = t338 / 0.2e1;
t339 = -t345 * t501 - t784;
t848 = -t339 / 0.2e1;
t847 = t339 / 0.2e1;
t846 = -t392 / 0.2e1;
t845 = t392 / 0.2e1;
t844 = -t394 / 0.2e1;
t843 = t394 / 0.2e1;
t842 = -t433 / 0.2e1;
t841 = -t438 / 0.2e1;
t840 = t438 / 0.2e1;
t839 = t440 / 0.2e1;
t485 = pkin(3) * t494 + pkin(10);
t838 = -t485 / 0.2e1;
t837 = -t497 / 0.2e1;
t835 = t498 / 0.2e1;
t834 = -t502 / 0.2e1;
t832 = t392 * pkin(11);
t831 = t438 * pkin(11);
t830 = t498 * pkin(5);
t829 = t502 * pkin(11);
t827 = pkin(3) * qJD(3);
t823 = t141 * t501;
t697 = pkin(3) * t798;
t332 = -pkin(4) * t440 + pkin(10) * t438 + t697;
t758 = t502 * t332;
t800 = t494 * t431;
t320 = t430 * t824 - t800;
t779 = t498 * t320;
t152 = pkin(5) * t440 - t758 + t779;
t822 = t152 * t497;
t821 = t152 * t501;
t689 = t495 * t796;
t618 = t500 * t636;
t754 = t503 * t504;
t434 = (-t618 + t754) * t496;
t617 = t500 * t635;
t775 = t499 * t504;
t544 = -t617 - t775;
t526 = t496 * t544;
t331 = t434 * t824 + t494 * t526;
t778 = t498 * t331;
t260 = -t502 * t689 + t778;
t820 = t260 * t497;
t819 = t260 * t501;
t297 = t399 * t824 - t800;
t276 = -pkin(4) * t825 - t297;
t818 = t276 * t502;
t817 = t307 * t502;
t816 = t309 * t497;
t815 = t309 * t501;
t814 = t309 * t502;
t330 = t494 * t434 - t526 * t824;
t813 = t330 * t498;
t812 = t330 * t502;
t811 = t338 * t392;
t810 = t339 * t392;
t809 = t339 * t497;
t486 = -pkin(3) * t824 - pkin(4);
t610 = -t502 * pkin(5) - t498 * pkin(11);
t529 = t610 + t486;
t761 = t501 * t502;
t684 = t485 * t761;
t389 = t497 * t529 + t684;
t808 = t389 * t394;
t807 = t394 * t440;
t806 = t394 * t498;
t805 = t437 * t498;
t804 = t440 * t392;
t642 = t854 + t855;
t48 = -(t853 + t856) * t440 + t642 * t438;
t803 = t48 * qJD(2);
t489 = t495 ^ 2;
t802 = t489 * t503;
t491 = t498 ^ 2;
t801 = t491 * t497;
t795 = t496 * t504;
t306 = t502 * t320;
t326 = t498 * t332;
t747 = t306 + t326;
t153 = -pkin(11) * t440 + t747;
t794 = t497 * t153;
t793 = t497 * t171;
t319 = t494 * t430 + t633;
t470 = -t829 + t830;
t199 = -t438 * t470 + t319;
t792 = t497 * t199;
t530 = -t495 * t795 + t825 * t826;
t205 = t498 * t530 + t502 * t552;
t791 = t497 * t205;
t790 = t497 * t552;
t625 = t498 * t689;
t759 = t502 * t331;
t261 = t625 + t759;
t789 = t497 * t261;
t275 = pkin(5) * t394 + t832;
t788 = t497 * t275;
t787 = t497 * t307;
t786 = t497 * t330;
t783 = t497 * t470;
t782 = t497 * t498;
t781 = t497 * t502;
t780 = t498 * t307;
t340 = t498 * t438;
t776 = t498 * t501;
t773 = t501 * t153;
t772 = t501 * t171;
t771 = t501 * t199;
t770 = t501 * t205;
t769 = t501 * t552;
t768 = t501 * t261;
t767 = t501 * t275;
t766 = t501 * t307;
t765 = t501 * t330;
t256 = t501 * t392;
t763 = t501 * t470;
t762 = t501 * t491;
t760 = t249 * t502;
t757 = t502 * t338;
t756 = t502 * t392;
t353 = t256 * t782;
t669 = -t814 / 0.2e1;
t62 = t353 + (-t817 / 0.2e1 + t848) * t501 + (t669 + t849) * t497;
t752 = t62 * qJD(2);
t515 = t530 * t495;
t63 = t249 * t330 + t331 * t552 + t515 * t796;
t751 = t63 * qJD(1);
t73 = -t307 * t339 - t309 * t338;
t750 = t73 * qJD(2);
t655 = -t776 / 0.2e1;
t404 = t438 * t655;
t646 = -t756 / 0.2e1;
t539 = (t646 - t806 / 0.2e1) * t497;
t658 = t780 / 0.2e1;
t659 = t781 / 0.2e1;
t511 = t392 * t659 + t539 + t658;
t87 = t404 + t511;
t749 = t87 * qJD(2);
t748 = -t141 + t171;
t493 = t502 ^ 2;
t478 = t493 - t491;
t692 = t307 * t340;
t108 = -t692 - t811;
t746 = qJD(2) * t108;
t691 = t309 * t340;
t111 = -t691 - t810;
t745 = qJD(2) * t111;
t123 = t307 * t394 - t497 * t857;
t744 = qJD(2) * t123;
t124 = t309 * t394 - t501 * t857;
t743 = qJD(2) * t124;
t210 = t804 - t805;
t742 = qJD(2) * t210;
t211 = -t804 - t805;
t741 = qJD(2) * t211;
t212 = -t807 - t864;
t740 = qJD(2) * t212;
t241 = -t807 + t864;
t739 = qJD(2) * t241;
t738 = qJD(2) * t309;
t737 = qJD(2) * t438;
t736 = qJD(2) * t496;
t735 = qJD(2) * t502;
t734 = qJD(3) * t438;
t733 = qJD(4) * t502;
t732 = qJD(5) * t392;
t731 = qJD(5) * t438;
t730 = qJD(5) * t497;
t729 = qJD(5) * t498;
t728 = qJD(5) * t501;
t727 = qJD(5) * t502;
t726 = qJD(6) * t392;
t725 = qJD(6) * t497;
t724 = qJD(6) * t501;
t723 = qJD(6) * t502;
t589 = t766 + t816;
t100 = t589 * t392;
t722 = t100 * qJD(2);
t109 = t692 - t811;
t721 = t109 * qJD(2);
t110 = -t691 + t810;
t720 = t110 * qJD(2);
t648 = t761 / 0.2e1;
t533 = t309 * t648 + t492 * t668;
t114 = -t809 / 0.2e1 + t533;
t719 = t114 * qJD(2);
t661 = -t782 / 0.2e1;
t619 = t392 * t661;
t670 = t817 / 0.2e1;
t547 = t670 + t619;
t134 = t547 + t860;
t718 = t134 * qJD(2);
t660 = t782 / 0.2e1;
t546 = t392 * t660 + t670;
t135 = t546 + t861;
t717 = t135 * qJD(2);
t654 = t776 / 0.2e1;
t575 = t392 * t654 + t842;
t662 = t785 / 0.2e1;
t605 = t662 + t850;
t137 = t502 * t605 + t575;
t716 = t137 * qJD(2);
t138 = (t662 + t851) * t502 + t575;
t715 = t138 * qJD(2);
t413 = t491 * t785;
t151 = t413 - t757;
t714 = t151 * qJD(2);
t649 = t764 / 0.2e1;
t174 = (t649 - t605) * t498;
t713 = t174 * qJD(2);
t588 = t756 + t806;
t182 = t588 * t438;
t712 = t182 * qJD(2);
t327 = t339 * t502;
t414 = t438 * t762;
t227 = t414 - t327;
t711 = t227 * qJD(2);
t252 = t497 * t392;
t710 = t252 * qJD(2);
t709 = t256 * qJD(2);
t542 = t494 * t841 + t824 * t839;
t300 = (-t798 / 0.2e1 + t542) * pkin(3);
t708 = t300 * qJD(2);
t707 = t340 * qJD(2);
t706 = t777 * qJD(2);
t705 = t345 * qJD(2);
t352 = t440 ^ 2 + t437;
t704 = t352 * qJD(2);
t435 = (t632 / 0.2e1 + t799 / 0.2e1) * t495;
t702 = t435 * qJD(2);
t450 = (-t499 ^ 2 + t503 ^ 2) * t489;
t701 = t450 * qJD(2);
t700 = t498 * qJD(3);
t699 = t498 * qJD(6);
t696 = pkin(5) * t852;
t695 = pkin(5) * t851;
t694 = pkin(5) * t848;
t693 = t832 / 0.2e1;
t690 = t499 * t802;
t687 = t485 * t781;
t460 = t485 * t782;
t686 = t485 * t776;
t685 = t501 * t756;
t683 = t309 * t703;
t681 = t501 * t700;
t680 = t497 * t728;
t679 = t498 * t728;
t678 = t497 * t723;
t677 = t501 * t723;
t481 = t497 * t729;
t676 = t497 * t724;
t675 = t498 * t727;
t674 = t438 * t735;
t673 = t440 * t735;
t672 = -t820 / 0.2e1;
t671 = -t819 / 0.2e1;
t288 = t309 * t835;
t667 = t309 * t838;
t666 = t485 * t833;
t665 = t486 * t843;
t664 = t791 / 0.2e1;
t663 = -t788 / 0.2e1;
t657 = -t340 / 0.2e1;
t656 = t340 / 0.2e1;
t653 = -t773 / 0.2e1;
t652 = t767 / 0.2e1;
t651 = -t256 / 0.2e1;
t650 = -t764 / 0.2e1;
t647 = t760 / 0.2e1;
t641 = -t306 / 0.2e1 - t326 / 0.2e1;
t640 = t385 * t825;
t639 = t386 * t825;
t631 = t825 * qJD(2);
t630 = t460 + t763;
t628 = -qJD(5) - t737;
t627 = -qJD(6) - t703;
t626 = -qJD(6) + t698;
t623 = t501 * t481;
t622 = qJD(2) * t690;
t621 = t497 * t681;
t620 = t689 / 0.2e1;
t363 = t498 * t651;
t405 = t438 * t654;
t616 = t693 + t275 / 0.2e1;
t615 = t703 + qJD(6) / 0.2e1;
t172 = t502 * t277 + t498 * t521;
t614 = t831 / 0.2e1 - t172 / 0.2e1;
t613 = t495 * t631;
t612 = qJD(3) * t495 * t825;
t611 = t392 * pkin(5) - t394 * pkin(11);
t129 = t642 * t498;
t130 = t642 * t502;
t609 = 0.2e1 * t621;
t204 = t498 * t552 - t502 * t530;
t608 = t204 * t836 + t856;
t106 = t249 * t497 + t770;
t607 = -t249 * t837 - t106 / 0.2e1;
t105 = -t501 * t249 + t791;
t606 = t501 * t854 + t105 / 0.2e1;
t142 = t172 + t831;
t505 = t276 + t611;
t59 = t497 * t142 - t501 * t505;
t69 = t771 - t794;
t5 = t141 * t338 + t152 * t307 + t340 * t59 + t392 * t69;
t590 = t765 - t789;
t550 = t590 * t502;
t125 = t497 * t760 + t769;
t564 = t125 * t845 + t204 * t849;
t568 = t105 * t840 - t249 * t852;
t9 = t550 / 0.2e1 + (t672 + t568) * t498 + t564;
t604 = t9 * qJD(1) + t5 * qJD(2);
t591 = t768 + t786;
t551 = t591 * t502;
t126 = -t501 * t760 + t790;
t563 = t126 * t846 + t204 * t847;
t565 = t106 * t840 - t249 * t850;
t12 = -t551 / 0.2e1 + (t671 + t565) * t498 + t563;
t60 = t501 * t142 + t497 * t505;
t70 = t773 + t792;
t6 = t141 * t339 + t152 * t309 + t340 * t60 - t392 * t70;
t603 = t12 * qJD(1) + t6 * qJD(2);
t569 = t105 * t844 + t205 * t852;
t17 = t819 / 0.2e1 + t569;
t7 = t172 * t307 - t59 * t394 + (t497 * t748 + t767) * t392;
t602 = t17 * qJD(1) + t7 * qJD(2);
t566 = t106 * t844 + t205 * t850;
t20 = t672 + t566;
t8 = t172 * t309 - t60 * t394 + (t501 * t748 - t788) * t392;
t601 = t20 * qJD(1) + t8 * qJD(2);
t600 = t497 * t657 + t288;
t508 = t297 * t856 + t298 * t854 + t319 * t855 + t320 * t853;
t514 = -t515 / 0.2e1;
t543 = t331 * t494 / 0.2e1 - t330 * t824 / 0.2e1;
t21 = (t499 * t514 + t543) * pkin(3) + t508;
t68 = -t297 * t319 + t298 * t320 + t458 * t697;
t599 = -t21 * qJD(1) + t68 * qJD(2);
t27 = -t141 * t307 + t392 * t59;
t556 = -t786 / 0.2e1 - t768 / 0.2e1;
t570 = t105 * t845 - t204 * t307 / 0.2e1;
t30 = t556 - t570;
t598 = qJD(1) * t30 - qJD(2) * t27;
t28 = t141 * t309 - t392 * t60;
t557 = -t789 / 0.2e1 + t765 / 0.2e1;
t567 = t106 * t846 + t204 * t850;
t29 = t557 - t567;
t597 = qJD(1) * t29 - qJD(2) * t28;
t510 = t129 * t438 + t204 * t839 + t552 * t845;
t33 = t812 / 0.2e1 + t510;
t37 = t171 * t440 + t319 * t392 + (t758 + (-t276 - t320) * t498) * t438;
t596 = t33 * qJD(1) + t37 * qJD(2);
t509 = t130 * t438 + t205 * t839 + t552 * t843;
t36 = -t813 / 0.2e1 + t509;
t38 = t172 * t440 + t319 * t394 + (-t747 - t818) * t438;
t595 = t36 * qJD(1) + t38 * qJD(2);
t49 = -(-t298 + t319) * t440 + (t297 - t320) * t438;
t594 = -t48 * qJD(1) - t49 * qJD(2);
t535 = -t778 / 0.2e1 + t502 * t620;
t561 = t205 * t841 + t249 * t843;
t50 = t535 - t561;
t72 = -t172 * t438 + t276 * t394;
t593 = qJD(1) * t50 - qJD(2) * t72;
t534 = -t759 / 0.2e1 - t625 / 0.2e1;
t562 = t204 * t840 + t249 * t846;
t51 = t534 - t562;
t71 = t171 * t438 - t276 * t392;
t592 = -qJD(1) * t51 + qJD(2) * t71;
t587 = -t438 * t486 + t440 * t485;
t586 = t631 + qJD(3);
t112 = t297 * t440 - t298 * t438;
t560 = t440 * t855 + t552 * t841;
t92 = t620 - t560;
t585 = -qJD(1) * t92 + qJD(2) * t112;
t456 = t478 * t497;
t512 = t497 * t646 + t539 - t780 / 0.2e1;
t86 = t405 + t512;
t584 = qJD(2) * t86 + qJD(3) * t456;
t457 = t493 * t501 - t762;
t84 = -t685 + (t650 - t605) * t498;
t583 = -qJD(2) * t84 - qJD(3) * t457;
t582 = t626 * t498;
t506 = -t795 / 0.2e1 + t514;
t576 = -t617 / 0.2e1;
t221 = t496 * t576 + t639 / 0.2e1 + t506 * t499;
t446 = -pkin(9) * t797 - t624;
t401 = -t489 * pkin(2) * t499 + t446 * t825;
t581 = qJD(1) * t221 - qJD(2) * t401;
t577 = t618 / 0.2e1;
t222 = t496 * t577 - t640 / 0.2e1 + t506 * t503;
t445 = pkin(9) * t798 - t483;
t400 = pkin(2) * t802 - t445 * t825;
t580 = qJD(1) * t222 + qJD(2) * t400;
t219 = -t394 ^ 2 + t857;
t579 = qJD(2) * t219 - qJD(3) * t588;
t578 = -qJD(2) * t588 + qJD(3) * t478;
t574 = t829 / 0.2e1 - t830 / 0.2e1;
t573 = -pkin(5) * t338 / 0.2e1 - t821 / 0.2e1;
t384 = -t755 / 0.2e1 + t637 / 0.2e1;
t572 = t384 * qJD(2) + t700 / 0.2e1;
t571 = t389 * t845 + t60 * t834;
t558 = -t794 / 0.2e1 + t771 / 0.2e1;
t555 = -t766 / 0.2e1 - t816 / 0.2e1;
t553 = -qJD(5) * t435 + t440 * t737;
t549 = t497 * t644 + t363 + t842;
t548 = -t699 / 0.2e1 + t629;
t545 = -t470 / 0.2e1 + t574;
t388 = -t501 * t529 + t687;
t522 = t388 * t843 + t630 * t846;
t1 = (t307 * t838 + t652 + t863) * t502 + (t59 / 0.2e1 + (t485 * t845 + t614) * t497) * t498 + t522 + t573;
t225 = t388 * t498 + (t630 - 0.2e1 * t460) * t502;
t23 = (t664 - t606) * t498;
t541 = t23 * qJD(1) - t1 * qJD(2) - t225 * qJD(3);
t2 = t694 + t808 / 0.2e1 + (t152 / 0.2e1 + t470 * t845) * t497 + (t663 + t667 + t862) * t502 + (t60 / 0.2e1 + t614 * t501) * t498;
t226 = t470 * t781 + (-t389 + t684) * t498;
t25 = (-t770 / 0.2e1 - t607) * t498;
t540 = -t25 * qJD(1) - t2 * qJD(2) + t226 * qJD(3);
t13 = (t667 - t823 / 0.2e1) * t498 + t558 + t571;
t347 = -t389 * t502 - t485 * t762;
t43 = t501 * t608 + t502 * t607;
t538 = qJD(1) * t43 + qJD(2) * t13 + qJD(3) * t347;
t517 = t388 * t846 + t485 * t658 + t59 * t833;
t14 = t653 + (-t199 / 0.2e1 + t141 * t835) * t497 + t517;
t346 = -t388 * t502 - t485 * t801;
t44 = -t497 * t608 + t502 * t606;
t537 = qJD(1) * t44 + qJD(2) * t14 - qJD(3) * t346;
t107 = t307 ^ 2 - t309 ^ 2;
t95 = (-t787 + t815) * t498;
t536 = qJD(2) * t107 - qJD(3) * t95 - qJD(5) * t589;
t39 = t497 * t616 + t696 - t862;
t395 = t545 * t497;
t532 = pkin(5) * t728 - qJD(2) * t39 + qJD(3) * t395;
t396 = t545 * t501;
t41 = -t501 * t616 + t695 - t863;
t531 = pkin(5) * t730 - qJD(2) * t41 - qJD(3) * t396;
t66 = t665 + (t438 * t838 - t332 / 0.2e1) * t502 + (t276 / 0.2e1 + t320 / 0.2e1) * t498;
t528 = qJD(1) * t129 - qJD(2) * t66 - t486 * t700;
t516 = t818 / 0.2e1 + t486 * t846 + t485 * t656;
t64 = t516 - t641;
t527 = qJD(1) * t130 - qJD(2) * t64 - t486 * t698;
t168 = t555 * t498;
t176 = -t787 / 0.2e1 + t815 / 0.2e1;
t525 = -qJD(3) * t168 - qJD(5) * t176 + t307 * t738;
t447 = (t490 / 0.2e1 - t492 / 0.2e1) * t498;
t524 = qJD(2) * t176 - qJD(3) * t447 + t680;
t523 = qJD(6) * t384 + t554;
t455 = t477 * t491;
t520 = qJD(2) * t95 + qJD(3) * t455 + 0.2e1 * t623;
t519 = qJD(2) * t589 + t609 - t859;
t518 = qJD(3) * t497 * t762 - qJD(2) * t168 + qJD(5) * t447;
t513 = t515 / 0.2e1;
t507 = t499 * t513;
t487 = t729 / 0.2e1;
t462 = -0.2e1 * t498 * t676;
t443 = t447 * qJD(6);
t429 = t435 * qJD(3);
t428 = t440 * t698;
t351 = t460 + t763 / 0.2e1 + t574 * t501;
t350 = t686 - t783 / 0.2e1 - t574 * t497;
t335 = t340 * qJD(5);
t316 = -t707 - t729;
t299 = t697 / 0.2e1 + t542 * pkin(3);
t294 = qJD(3) * t657 + t384 * qJD(5);
t224 = -t639 / 0.2e1 + t507 + (-t775 / 0.2e1 + t576) * t496;
t223 = t640 / 0.2e1 + t503 * t513 + (-t754 / 0.2e1 + t577) * t496;
t185 = t588 * qJD(5);
t175 = t498 * t650 + t600;
t173 = t176 * qJD(6);
t162 = t168 * qJD(6);
t140 = t814 / 0.2e1 + t549;
t139 = t669 + t549;
t136 = t546 + t860;
t133 = t547 + t861;
t132 = t249 * t833 + t647;
t131 = (t835 - t836) * t249;
t113 = t809 / 0.2e1 + t533;
t96 = t589 * qJD(6);
t94 = t95 * qJD(6);
t93 = t620 + t560;
t89 = t498 * t649 + t600 + t685;
t88 = t405 + t511;
t85 = t404 + t512;
t83 = t204 * t501;
t82 = t204 * t497;
t67 = t485 * t645 + t665 + t276 * t835 - t779 / 0.2e1 + t758 / 0.2e1;
t65 = t516 + t641;
t61 = t338 * t837 + t501 * t847 + t502 * t555 + t353;
t53 = t535 + t561;
t52 = t534 + t562;
t47 = t48 * qJD(3);
t46 = t106 * t833 + t204 * t654 + t497 * t647 + t769 / 0.2e1;
t45 = t105 * t834 + t204 * t661 + t501 * t647 - t790 / 0.2e1;
t42 = pkin(11) * t651 + t695 + t141 * t497 / 0.2e1 + t793 / 0.2e1 + t652;
t40 = t497 * t693 + t696 + t823 / 0.2e1 + t772 / 0.2e1 + t663;
t35 = t813 / 0.2e1 + t509;
t34 = -t812 / 0.2e1 + t510;
t32 = t557 + t567;
t31 = t556 + t570;
t26 = t106 * t836 + t205 * t654 - t249 * t660;
t24 = -t249 * t655 + (-t105 / 0.2e1 + t664) * t498;
t22 = -t508 + (t507 + t543) * pkin(3);
t19 = t820 / 0.2e1 + t566;
t18 = t671 + t569;
t16 = t141 * t654 + t288 * t485 + t558 - t571;
t15 = t141 * t661 + t653 - t792 / 0.2e1 - t517;
t11 = t551 / 0.2e1 + t260 * t654 + t565 * t498 + t563;
t10 = -t550 / 0.2e1 + t260 * t660 + t568 * t498 + t564;
t4 = (-t686 + t783) * t846 - t808 / 0.2e1 + (-t772 + t788) * t833 + t60 * t836 + t309 * t666 + t485 * t363 + t172 * t654 + t141 * t648 + pkin(11) * t405 + t694 + t822 / 0.2e1;
t3 = (t767 + t793) * t834 + t59 * t836 + t307 * t666 + t485 * t619 + t172 * t660 + t141 * t659 + t497 * pkin(11) * t656 - t522 + t573;
t54 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t500 * t736, -t504 * t736, 0, 0, 0, 0, 0, t224 * qJD(3) + (-t489 * t774 + t544 * t825) * t736 (-t434 * t825 + t489 * t688) * qJD(2) + t223 * qJD(3) (-t330 * t440 - t331 * t438) * qJD(2) + t47, t751 + (-t297 * t330 + t298 * t331 + t458 * t689) * qJD(2) + t22 * qJD(3) + t93 * qJD(4), 0, 0, 0, 0, 0 (-t260 * t438 + t330 * t392) * qJD(2) + t34 * qJD(3) + t53 * qJD(5) (-t261 * t438 + t330 * t394) * qJD(2) + t35 * qJD(3) + t52 * qJD(5), 0, 0, 0, 0, 0 (t260 * t307 + t392 * t590) * qJD(2) + t10 * qJD(3) + t18 * qJD(5) + t32 * qJD(6) (t260 * t309 - t392 * t591) * qJD(2) + t11 * qJD(3) + t19 * qJD(5) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t224 - qJD(3) * t386, qJD(2) * t223 + qJD(3) * t385, t803, t22 * qJD(2) + (-t249 * t494 - t552 * t824) * t827, 0, 0, 0, 0, 0, qJD(2) * t34 + qJD(5) * t131 - t552 * t698, qJD(2) * t35 + qJD(5) * t132 + t552 * t700, 0, 0, 0, 0, 0, t10 * qJD(2) + (-t125 * t502 - t249 * t801) * qJD(3) + t24 * qJD(5) + t46 * qJD(6), t11 * qJD(2) + (t126 * t502 - t249 * t762) * qJD(3) + t26 * qJD(5) + t45 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + qJD(3) * t131 - qJD(5) * t205, qJD(2) * t52 + qJD(3) * t132 + qJD(5) * t204, 0, 0, 0, 0, 0, qJD(2) * t18 + qJD(3) * t24 + qJD(6) * t82 - t205 * t728, qJD(2) * t19 + qJD(3) * t26 + qJD(6) * t83 + t205 * t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(3) * t46 + qJD(5) * t82 - qJD(6) * t106, qJD(2) * t31 + qJD(3) * t45 + qJD(5) * t83 + qJD(6) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221 * qJD(3), -t222 * qJD(3), t47, -qJD(3) * t21 - qJD(4) * t92 - t751, 0, 0, 0, 0, 0, qJD(3) * t33 - qJD(5) * t50, qJD(3) * t36 - qJD(5) * t51, 0, 0, 0, 0, 0, qJD(3) * t9 + qJD(5) * t17 - qJD(6) * t29, qJD(3) * t12 + qJD(5) * t20 - qJD(6) * t30; 0, 0, 0, 0, qJD(3) * t690, t450 * qJD(3), t503 * t612, -t499 * t612, 0, t401 * qJD(3), -t400 * qJD(3), qJD(3) * t49 + qJD(4) * t352, qJD(3) * t68 + qJD(4) * t112 (-t438 * t698 - t732) * t394, qJD(3) * t182 + qJD(5) * t219, qJD(3) * t212 - t392 * t731, -qJD(3) * t211 - t394 * t731, -t440 * t734, qJD(3) * t37 - qJD(4) * t210 + qJD(5) * t72, qJD(3) * t38 + qJD(4) * t241 + qJD(5) * t71 (qJD(3) * t339 - qJD(6) * t307 - t392 * t728) * t309, qJD(3) * t73 + qJD(5) * t100 + qJD(6) * t107, qJD(3) * t110 + qJD(5) * t124 - t307 * t726, qJD(3) * t109 - qJD(5) * t123 - t309 * t726 (qJD(5) * t394 - t438 * t700) * t392, qJD(3) * t5 + qJD(4) * t108 + qJD(5) * t7 + qJD(6) * t28, qJD(3) * t6 + qJD(4) * t111 + qJD(5) * t8 + qJD(6) * t27; 0, 0, 0, 0, t622, t701, t586 * t797, -t586 * t798, 0, qJD(3) * t446 - t581, qJD(3) * t445 - t580 (t438 * t824 + t440 * t494) * t827 - t594 (-t319 * t824 + t320 * t494) * t827 + t299 * qJD(4) + t599, t858 + (-qJD(2) * t394 - t700) * t345, -t478 * t734 - t185 + t712, -t440 * t700 + t740, -t428 - t741, -t553 (-t319 * t502 + t498 * t587) * qJD(3) + t67 * qJD(5) + t596 (t319 * t498 + t502 * t587) * qJD(3) + t65 * qJD(5) + t595, t113 * qJD(5) + t162 + (t681 + t738) * t339, t750 + t61 * qJD(5) - t94 + (-t338 * t501 - t809) * t700, t720 + (-t414 - t327) * qJD(3) + t89 * qJD(5) + t133 * qJD(6), t721 + (t413 + t757) * qJD(3) + t85 * qJD(5) + t140 * qJD(6), -t858 + (-t615 + t698) * t340, -t69 * t698 + t3 * qJD(5) + t16 * qJD(6) + (t338 * t485 + t388 * t438 + t822) * t700 + t604, t70 * t698 + t4 * qJD(5) + t15 * qJD(6) + (t339 * t485 + t389 * t438 + t821) * t700 + t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t704, qJD(3) * t299 + t585, 0, 0, 0, 0, 0, -t742, t739, 0, 0, 0, 0, 0, qJD(5) * t88 + qJD(6) * t139 + t746, qJD(5) * t175 + qJD(6) * t136 + t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t554, t579, t628 * t392, t628 * t394, t429, qJD(3) * t67 - qJD(5) * t172 - t593, qJD(3) * t65 + qJD(5) * t171 + t592, t113 * qJD(3) + t173 + (-t730 - t738) * t256, t61 * qJD(3) - t477 * t732 + t722 - t96, qJD(3) * t89 + t394 * t730 + t743, qJD(3) * t85 + t394 * t728 - t744, t523, t3 * qJD(3) + t88 * qJD(4) + (-t172 * t501 + t497 * t611) * qJD(5) + t42 * qJD(6) + t602, t4 * qJD(3) + t175 * qJD(4) + (t172 * t497 + t501 * t611) * qJD(5) + t40 * qJD(6) + t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525, t536, t133 * qJD(3) + t307 * t627, t140 * qJD(3) + t309 * t627, t294, qJD(3) * t16 + qJD(4) * t139 + qJD(5) * t42 - qJD(6) * t60 - t597, qJD(3) * t15 + qJD(4) * t136 + qJD(5) * t40 + qJD(6) * t59 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, t221 * qJD(2), t222 * qJD(2), -t803, qJD(2) * t21, 0, 0, 0, 0, 0, -qJD(2) * t33 - qJD(5) * t129, -qJD(2) * t36 - qJD(5) * t130, 0, 0, 0, 0, 0, -qJD(2) * t9 + qJD(5) * t23 - qJD(6) * t43, -qJD(2) * t12 - qJD(5) * t25 - qJD(6) * t44; 0, 0, 0, 0, -t622, -t701, -t503 * t613, t499 * t613, 0, t581, t580, t594, qJD(4) * t300 - t599, t394 * t674 + t858, -t185 - t712, qJD(5) * t345 - t740, -t335 + t741, t553, qJD(5) * t66 + t440 * t733 - t596, -qJD(4) * t777 + qJD(5) * t64 - t595, qJD(5) * t114 - t339 * t738 + t162, qJD(5) * t62 - t750 - t94, -qJD(5) * t84 + qJD(6) * t134 - t720, qJD(5) * t86 - qJD(6) * t138 - t721, t340 * t615 - t858, -qJD(4) * t151 - qJD(5) * t1 - qJD(6) * t13 - t604, -qJD(4) * t227 - qJD(5) * t2 - qJD(6) * t14 - t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t675, t478 * qJD(5), 0, 0, 0, t486 * t729, t486 * t727, -t491 * t676 + t492 * t675, -qJD(6) * t455 - 0.2e1 * t502 * t623, -qJD(5) * t457 + t498 * t678, qJD(5) * t456 + t498 * t677, -t675, -qJD(5) * t225 - qJD(6) * t347, qJD(5) * t226 + qJD(6) * t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t708, 0, 0, 0, 0, 0, t673, -t706, 0, 0, 0, 0, 0, -t714, -t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t629, t578, t705 + t727, t316, -t702, -t485 * t727 - t528, t485 * t729 - t527, t719 - t443 + (t492 * t700 + t680) * t502, t752 + t462 + (-0.2e1 * t621 + t859) * t502, t481 + t583, t584 + t679, -t548 (t497 * t610 - t684) * qJD(5) + t351 * qJD(6) + t541 (t501 * t610 + t687) * qJD(5) + t350 * qJD(6) + t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, -t520, t497 * t582 + t718, t501 * t582 - t715, qJD(2) * t656 + t487, qJD(5) * t351 - qJD(6) * t389 - t538, qJD(5) * t350 + qJD(6) * t388 - t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t704, -qJD(3) * t300 - t585, 0, 0, 0, 0, 0, -t335 - t428 + t742, qJD(3) * t777 - t438 * t727 - t739, 0, 0, 0, 0, 0, qJD(3) * t151 + qJD(5) * t87 - qJD(6) * t137 - t746, qJD(3) * t227 - qJD(5) * t174 + qJD(6) * t135 - t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t708, 0, 0, 0, 0, 0, -t673, t706, 0, 0, 0, 0, 0, t714, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t628 * t502, 0, 0, 0, 0, 0, -t678 - t679 + t749, t481 - t677 - t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497 * t727 - t501 * t699 - t716, t497 * t699 - t501 * t727 + t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t50 + qJD(3) * t129, qJD(2) * t51 + qJD(3) * t130, 0, 0, 0, 0, 0, -qJD(2) * t17 - qJD(3) * t23, -qJD(2) * t20 + qJD(3) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, -t579, -qJD(3) * t345 + t438 * t703, qJD(3) * t340 + t394 * t737, t429, -qJD(3) * t66 + qJD(4) * t340 + t593, -qJD(3) * t64 + t438 * t733 - t592, -qJD(3) * t114 + t501 * t683 + t173, -qJD(3) * t62 - t722 - t96, qJD(3) * t84 + qJD(6) * t256 - t743, -qJD(3) * t86 - qJD(6) * t252 + t744, -t523, qJD(3) * t1 - qJD(4) * t87 + qJD(6) * t41 - t602, qJD(3) * t2 + qJD(4) * t174 + qJD(6) * t39 - t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t629, -t578, -t705, t707, t702, t528, t527, -t482 * t492 - t443 - t719, t502 * t609 + t462 - t752, -t583 - t677, -t584 + t678, t548, qJD(6) * t396 - t541, -qJD(6) * t395 - t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t707, t674, 0, 0, 0, 0, 0, -t749, t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t676, t477 * qJD(6), 0, 0, 0, -pkin(5) * t725, -pkin(5) * t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, -t519, -t501 * t626 + t709, t497 * t626 - t710, -t572, -pkin(11) * t724 - t531, pkin(11) * t725 - t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t29 + qJD(3) * t43, qJD(2) * t30 + qJD(3) * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525, -t536, -qJD(3) * t134 - qJD(5) * t256 + t307 * t703, qJD(3) * t138 + qJD(5) * t252 + t683, t294, qJD(3) * t13 + qJD(4) * t137 - qJD(5) * t41 + t597, qJD(3) * t14 - qJD(4) * t135 - qJD(5) * t39 + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, t520, -t718 + (-t497 * t700 + t728) * t502, t715 + (-t681 - t730) * t502, qJD(2) * t657 + t487, -qJD(5) * t396 + t538, qJD(5) * t395 + t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t716, -t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, t519, t501 * t698 - t709, -t497 * t698 + t710, t572, t531, t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t54;
