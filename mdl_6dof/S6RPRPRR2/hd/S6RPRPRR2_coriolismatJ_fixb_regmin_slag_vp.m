% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:39:01
% EndTime: 2019-03-09 03:39:13
% DurationCPUTime: 5.99s
% Computational Cost: add. (6899->354), mult. (13980->510), div. (0->0), fcn. (15980->10), ass. (0->321)
t312 = sin(pkin(11));
t316 = sin(qJ(3));
t319 = cos(qJ(3));
t469 = cos(pkin(11));
t291 = t312 * t316 - t319 * t469;
t524 = -t291 / 0.2e1;
t362 = t469 * t316;
t437 = t312 * t319;
t293 = t362 + t437;
t315 = sin(qJ(5));
t317 = cos(qJ(6));
t431 = t317 * t315;
t314 = sin(qJ(6));
t318 = cos(qJ(5));
t435 = t314 * t318;
t297 = t431 + t435;
t136 = t297 * t293;
t305 = sin(pkin(10)) * pkin(1) + pkin(7);
t425 = qJ(4) + t305;
t284 = t425 * t316;
t286 = t425 * t319;
t197 = t469 * t284 + t286 * t312;
t216 = t315 * t293;
t140 = pkin(5) * t216 + t197;
t306 = -pkin(3) * t469 - pkin(4);
t298 = -t318 * pkin(5) + t306;
t304 = t312 * pkin(3) + pkin(8);
t491 = pkin(9) + t304;
t287 = t491 * t315;
t288 = t491 * t318;
t345 = -t317 * t287 - t314 * t288;
t430 = t317 * t318;
t436 = t314 * t315;
t295 = -t430 + t436;
t499 = -t295 / 0.2e1;
t522 = t140 * t499 - t298 * t136 / 0.2e1 + t345 * t524;
t497 = t297 / 0.2e1;
t521 = t197 * t318;
t523 = t521 / 0.2e1;
t384 = qJD(5) + qJD(6);
t193 = -t216 * t314 + t293 * t430;
t211 = -t314 * t287 + t317 * t288;
t519 = t140 * t497 + t298 * t193 / 0.2e1 + t211 * t524;
t214 = t315 * t291;
t492 = t316 * pkin(3);
t219 = pkin(4) * t293 + pkin(8) * t291 + t492;
t194 = t315 * t219;
t419 = t521 - t194;
t95 = pkin(9) * t214 - t419;
t476 = t317 * t95;
t378 = -t476 / 0.2e1;
t195 = t318 * t219;
t218 = t318 * t291;
t432 = t197 * t315;
t493 = t293 * pkin(5);
t67 = pkin(9) * t218 + t195 + t432 + t493;
t483 = t314 * t67;
t341 = -t483 / 0.2e1 + t378;
t14 = t341 - t522;
t510 = -t312 * t284 + t469 * t286;
t451 = t510 * t315;
t450 = t510 * t318;
t412 = qJD(1) * t293;
t234 = t291 * t412;
t285 = t362 / 0.2e1 + t437 / 0.2e1;
t511 = t285 * qJD(5) + t234;
t480 = t314 * t95;
t379 = -t480 / 0.2e1;
t479 = t317 * t67;
t340 = t379 + t479 / 0.2e1;
t13 = t340 - t519;
t518 = t384 * t211;
t517 = t384 * t345;
t516 = pkin(5) / 0.2e1;
t515 = t136 * t384;
t514 = t295 * t384;
t205 = t214 * qJD(5);
t404 = qJD(3) * t318;
t275 = t293 * t404;
t509 = -t275 + t205;
t289 = t291 ^ 2;
t290 = t293 ^ 2;
t508 = -t290 - t289;
t507 = t285 * qJD(6) + t511;
t337 = t430 / 0.2e1 - t436 / 0.2e1;
t498 = t295 / 0.2e1;
t125 = (t498 + t337) * t291;
t397 = t125 * qJD(2);
t406 = qJD(3) * t298;
t506 = qJD(1) * t14 + t295 * t406 + t397;
t495 = pkin(5) * t315;
t183 = -t295 * t298 + t297 * t495;
t433 = t315 * t193;
t496 = -t318 / 0.2e1;
t3 = (-t433 / 0.2e1 + (-t314 / 0.2e1 + t297 * t496) * t293) * pkin(5) + t14;
t505 = t3 * qJD(1) - t183 * qJD(3) + t397;
t338 = t435 / 0.2e1 + t431 / 0.2e1;
t122 = (-t297 / 0.2e1 + t338) * t291;
t399 = t122 * qJD(2);
t504 = qJD(1) * t13 - t297 * t406 + t399;
t182 = t295 * t495 + t297 * t298;
t434 = t315 * t136;
t4 = (-t434 / 0.2e1 + (t317 / 0.2e1 + t295 * t496) * t293) * pkin(5) + t13;
t503 = t4 * qJD(1) - t182 * qJD(3) + t399;
t310 = t315 ^ 2;
t311 = t318 ^ 2;
t301 = t311 - t310;
t360 = 0.2e1 * t318 * t216;
t326 = qJD(1) * t360 - qJD(3) * t301;
t494 = t291 * pkin(5);
t442 = t293 * t318;
t307 = -cos(pkin(10)) * pkin(1) - pkin(2);
t343 = -pkin(3) * t319 + t307;
t185 = t291 * pkin(4) - t293 * pkin(8) + t343;
t99 = -t318 * t185 + t451;
t88 = -pkin(9) * t442 - t99;
t64 = t88 + t494;
t62 = t317 * t64;
t502 = -t62 / 0.2e1;
t501 = -t64 / 0.2e1;
t500 = t197 / 0.2e1;
t52 = t136 * t295 - t297 * t193;
t490 = t384 * t52;
t80 = -t136 * t497 + t193 * t499;
t489 = t384 * t80;
t488 = pkin(5) * qJD(5);
t487 = pkin(5) * qJD(6);
t486 = qJD(3) * pkin(3);
t139 = -pkin(5) * t214 + t510;
t100 = t185 * t315 + t450;
t89 = -pkin(9) * t216 + t100;
t481 = t314 * t89;
t28 = -t62 + t481;
t441 = t297 * t291;
t1 = (t479 - t480) * t291 - t28 * t293 + t139 * t136 - t140 * t441;
t485 = t1 * qJD(1);
t192 = t295 * t291;
t477 = t317 * t89;
t29 = t314 * t64 + t477;
t2 = -(t476 + t483) * t291 - t29 * t293 + t139 * t193 + t140 * t192;
t484 = t2 * qJD(1);
t482 = t314 * t88;
t478 = t317 * t88;
t381 = -t494 / 0.2e1;
t354 = t381 + t88 / 0.2e1;
t7 = (t501 + t354) * t314;
t475 = t7 * qJD(1);
t9 = t317 * t354 + t502;
t474 = t9 * qJD(1);
t123 = (t497 + t338) * t291;
t473 = t123 * qJD(4);
t126 = (t499 + t337) * t291;
t472 = t126 * qJD(4);
t366 = t291 * t498;
t127 = t291 * t337 + t366;
t471 = t127 * qJD(4);
t323 = t338 * t291;
t129 = -t441 / 0.2e1 + t323;
t470 = t129 * qJD(4);
t32 = -t477 - t482;
t382 = pkin(5) * t442;
t456 = t140 * t193;
t17 = t136 * t382 + t291 * t32 + t456;
t468 = qJD(1) * t17;
t33 = t478 - t481;
t457 = t140 * t136;
t18 = t193 * t382 - t291 * t33 - t457;
t467 = qJD(1) * t18;
t19 = t28 * t291 - t457;
t466 = qJD(1) * t19;
t20 = -t29 * t291 + t456;
t465 = qJD(1) * t20;
t54 = -t197 * t216 + t291 * t99;
t464 = qJD(1) * t54;
t55 = -t100 * t291 + t197 * t442;
t463 = qJD(1) * t55;
t443 = t293 * t136;
t445 = t291 * t441;
t76 = -t443 + t445;
t462 = qJD(1) * t76;
t77 = t443 + t445;
t461 = qJD(1) * t77;
t452 = t193 * t293;
t453 = t192 * t291;
t78 = t452 + t453;
t460 = qJD(1) * t78;
t87 = t197 * t293 - t291 * t510;
t459 = qJD(1) * t87;
t21 = (-t99 + t451) * t293 + t195 * t291;
t448 = t21 * qJD(1);
t444 = t291 * t312;
t364 = -t197 / 0.2e1 + t500;
t34 = t364 * t293;
t429 = t34 * qJD(1);
t53 = -t136 * t192 + t193 * t441;
t428 = t53 * qJD(1);
t79 = t452 - t453;
t427 = t79 * qJD(1);
t424 = t384 * t125;
t367 = t317 * t524;
t124 = t318 * t367 + t314 * t214 / 0.2e1 + t366;
t423 = t384 * t124;
t422 = t384 * t123;
t421 = t384 * t129;
t420 = t384 * t193;
t383 = t290 - t289;
t167 = t383 * t315;
t417 = qJD(1) * t167;
t168 = t508 * t315;
t416 = qJD(1) * t168;
t169 = t383 * t318;
t415 = qJD(1) * t169;
t414 = qJD(1) * t193;
t413 = qJD(1) * t291;
t411 = qJD(1) * t318;
t410 = qJD(1) * t319;
t409 = qJD(3) * t218;
t408 = qJD(3) * t293;
t407 = qJD(3) * t297;
t405 = qJD(3) * t315;
t403 = qJD(4) * t318;
t402 = qJD(5) * t315;
t401 = qJD(5) * t318;
t400 = qJD(6) * t298;
t103 = t123 * qJD(1);
t104 = t124 * qJD(1);
t398 = t124 * qJD(3);
t42 = t125 * qJD(3);
t107 = t126 * qJD(1);
t132 = t293 * t295;
t396 = t132 * qJD(1);
t395 = t136 * qJD(1);
t363 = t469 * t293;
t325 = -t444 / 0.2e1 - t363 / 0.2e1;
t175 = (-t316 / 0.2e1 + t325) * pkin(3);
t394 = t175 * qJD(1);
t204 = t214 * qJD(1);
t393 = t216 * qJD(1);
t392 = t218 * qJD(1);
t221 = t508 * t318;
t391 = t221 * qJD(1);
t390 = t508 * qJD(1);
t389 = t285 * qJD(1);
t302 = -t316 ^ 2 + t319 ^ 2;
t387 = t302 * qJD(1);
t386 = t316 * qJD(3);
t385 = t319 * qJD(3);
t380 = t493 / 0.2e1;
t377 = t193 * t413;
t376 = t315 * t404;
t375 = t293 * t402;
t374 = t293 * t401;
t233 = t291 * t408;
t373 = t295 * t408;
t372 = t307 * t316 * qJD(1);
t371 = t307 * t410;
t370 = t315 * t401;
t369 = t316 * t410;
t368 = t293 * t411;
t365 = t523 - t194 / 0.2e1;
t361 = pkin(5) * t384;
t358 = t384 * t291;
t357 = t384 * t297;
t356 = t318 * t380;
t355 = -qJD(5) - t413;
t353 = t380 + t67 / 0.2e1;
t352 = qJD(3) * t360;
t22 = (-t100 + t450) * t293 + (t419 - t521) * t291;
t350 = t22 * qJD(1);
t48 = t343 * t492;
t349 = t48 * qJD(1) + t34 * qJD(2);
t63 = t136 ^ 2 - t193 ^ 2;
t23 = qJD(1) * t63 + qJD(3) * t52;
t344 = -t291 * t306 - t293 * t304;
t186 = t295 ^ 2 - t297 ^ 2;
t38 = qJD(1) * t52 + qJD(3) * t186;
t342 = t355 * t318;
t339 = t304 * t291 / 0.2e1 - t306 * t293 / 0.2e1;
t40 = qJD(3) * t80 - t136 * t414;
t57 = -qJD(1) * t80 + t295 * t407;
t324 = t339 * t318;
t46 = -t195 / 0.2e1 - t324 + t364 * t315;
t334 = -qJD(1) * t46 - t306 * t405;
t322 = t339 * t315 + t523;
t44 = t322 - t365;
t333 = -qJD(1) * t44 - t306 * t404;
t332 = t293 * t342;
t212 = (t310 / 0.2e1 - t311 / 0.2e1) * t293;
t331 = -qJD(1) * t212 + t376;
t328 = t290 * t315 * t411 + qJD(3) * t212;
t220 = t301 * t290;
t327 = qJD(1) * t220 + t352;
t278 = t285 * qJD(3);
t274 = t293 * t405;
t243 = t293 * t407;
t209 = t218 * qJD(5);
t203 = t214 * qJD(3);
t202 = t212 * qJD(5);
t174 = t492 / 0.2e1 + t325 * pkin(3);
t173 = -t204 - t402;
t128 = t441 / 0.2e1 + t323;
t94 = -t357 - t103;
t93 = -t107 + t514;
t92 = -t104 - t514;
t59 = qJD(3) * t123 + t377;
t58 = t136 * t413 + t398;
t47 = t315 * t500 + t432 / 0.2e1 + t195 / 0.2e1 - t324;
t45 = t322 + t365;
t43 = t122 * qJD(3);
t36 = qJD(3) * t129 - t377 - t420;
t35 = -t42 + (-qJD(6) + t355) * t136;
t27 = qJD(3) * t128 - t420;
t26 = -t398 + t515;
t25 = t34 * qJD(3);
t16 = t340 + t519;
t15 = t341 + t522;
t10 = pkin(5) * t367 + t481 + t502 - t478 / 0.2e1;
t8 = -t477 - t482 / 0.2e1 + (t381 + t501) * t314;
t6 = t297 * t356 - t353 * t314 + t433 * t516 + t378 + t522;
t5 = t295 * t356 + t353 * t317 + t434 * t516 + t379 + t519;
t11 = [0, 0, 0, 0, t316 * t385, t302 * qJD(3), 0, 0, 0, t307 * t386, t307 * t385, -qJD(4) * t508, qJD(3) * t48 + qJD(4) * t87, -t233 * t311 - t290 * t370, -qJD(5) * t220 + t291 * t352, qJD(3) * t169 - t291 * t375, -qJD(3) * t167 - t291 * t374, t233, qJD(3) * t21 - qJD(4) * t168 + qJD(5) * t55, qJD(3) * t22 - qJD(4) * t221 + qJD(5) * t54 (qJD(3) * t192 - t515) * t193, t53 * qJD(3) + t384 * t63, t78 * qJD(3) - t136 * t358, t76 * qJD(3) - t193 * t358, t233, qJD(3) * t1 + qJD(4) * t77 + qJD(5) * t17 + qJD(6) * t20, qJD(3) * t2 + qJD(4) * t79 + qJD(5) * t18 + qJD(6) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t369, t387, t385, -t386, 0, -t305 * t385 + t372, t305 * t386 + t371 (t291 * t469 - t293 * t312) * t486 (-t197 * t312 - t469 * t510) * t486 + t174 * qJD(4) + t349, -t202 + (-t311 * t412 - t376) * t291, t291 * t326 - 0.2e1 * t293 * t370, t274 + t415, t275 - t417, t511, t448 + (t315 * t344 - t450) * qJD(3) + t47 * qJD(5) (t318 * t344 + t451) * qJD(3) + t45 * qJD(5) + t350 (t407 + t414) * t192 + t489, t428 + (-t192 * t295 + t297 * t441) * qJD(3) + t490, t243 - t424 + t460, -t373 + t421 + t462, t507, t485 + (t139 * t295 + t293 * t345 - t298 * t441) * qJD(3) + t5 * qJD(5) + t16 * qJD(6), t484 + (t139 * t297 + t192 * t298 - t211 * t293) * qJD(3) + t6 * qJD(5) + t15 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t390, qJD(3) * t174 + t459, 0, 0, 0, 0, 0, -t416, -t391, 0, 0, 0, 0, 0, t421 + t461, t127 * t384 + t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, -t327, t355 * t216, t332, t278, qJD(3) * t47 - qJD(5) * t100 + t463, qJD(3) * t45 + qJD(5) * t99 + t464, t40, t23, t35, t36, t278, qJD(3) * t5 + qJD(5) * t32 + qJD(6) * t8 + t468 + t470, qJD(3) * t6 - qJD(5) * t33 + qJD(6) * t10 + t467 + t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t23, t35, t36, t278, qJD(3) * t16 + qJD(5) * t8 - qJD(6) * t29 + t465 + t470, qJD(3) * t15 + qJD(5) * t10 + qJD(6) * t28 + t466 + t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, -t385, 0, t429 + (-t363 - t444) * t486, 0, 0, 0, 0, 0, t509, t209 + t274, 0, 0, 0, 0, 0, t128 * t384 + t373, t243 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203 - t374, t375 + t409, 0, 0, 0, 0, 0, t27, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, t26; 0, 0, 0, 0, -t369, -t387, 0, 0, 0, -t372, -t371, 0, qJD(4) * t175 - t349, t234 * t311 - t202, 0.2e1 * t315 * t332, t209 - t415, -t205 + t417, -t511, qJD(5) * t46 - t293 * t403 - t448, qJD(4) * t216 + qJD(5) * t44 - t350, -t192 * t414 + t489, -t428 + t490, -t423 - t460, -t422 - t462, -t507, qJD(4) * t132 - qJD(5) * t4 - qJD(6) * t13 - t485, qJD(4) * t136 - qJD(5) * t3 - qJD(6) * t14 - t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384 * t122, -t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, t301 * qJD(5), 0, 0, 0, t306 * t402, t306 * t401, -t295 * t357, t384 * t186, 0, 0, 0, qJD(5) * t182 + t297 * t400, qJD(5) * t183 - t295 * t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, 0, 0, 0, 0, 0, -t368, t393, 0, 0, 0, 0, 0, t396, t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, -t326, t392 + t401, t173, -t389, -t304 * t401 - t334, t304 * t402 - t333, -t57, t38, t92, t94, -t389, -t503 - t518, -t505 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, t38, t92, t94, -t389, -t504 - t518, -t506 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, -qJD(3) * t175 - t459, 0, 0, 0, 0, 0, t416 - t509, -qJD(3) * t216 - t291 * t401 + t391, 0, 0, 0, 0, 0, -qJD(3) * t132 - t422 - t461, -t136 * qJD(3) - t126 * t384 - t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, 0, 0, 0, 0, 0, t368, -t393, 0, 0, 0, 0, 0, -t396, -t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, t342, 0, 0, 0, 0, 0, t94, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, t327, t234 * t315 - t409, t291 * t368 + t203, t278, -qJD(3) * t46 + qJD(4) * t214 - t463, -qJD(3) * t44 + t291 * t403 - t464, -t40, -t23, t58, t59, t278, qJD(3) * t4 + qJD(6) * t7 - t468 + t473, qJD(3) * t3 + qJD(6) * t9 - t467 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331, t326, -t392, t204, t389, t334, t333, t57, -t38, t104, t103, t389, t503, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t291 * t411, 0, 0, 0, 0, 0, t103, t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314 * t487, -t317 * t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314 * t361 + t475, -t317 * t361 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, -t23, t58, t59, t278, qJD(3) * t13 - qJD(5) * t7 - t465 + t473, qJD(3) * t14 - qJD(5) * t9 - t466 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t38, t104, t103, t389, t504, t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314 * t488 - t475, t317 * t488 - t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
