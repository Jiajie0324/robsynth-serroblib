% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:49:34
% EndTime: 2019-03-08 19:49:41
% DurationCPUTime: 2.53s
% Computational Cost: add. (1740->247), mult. (4369->448), div. (0->0), fcn. (4137->10), ass. (0->128)
t150 = sin(qJ(6));
t151 = cos(qJ(6));
t77 = sin(pkin(11));
t79 = cos(pkin(11));
t91 = -t150 * t77 + t151 * t79;
t117 = qJD(6) * t150;
t118 = qJD(6) * t151;
t42 = t77 * t117 - t79 * t118;
t83 = cos(qJ(4));
t159 = t42 * t83;
t81 = sin(qJ(4));
t39 = t91 * t81;
t78 = sin(pkin(6));
t84 = cos(qJ(2));
t143 = t78 * t84;
t131 = t81 * t143;
t134 = t83 * qJD(4);
t82 = sin(qJ(2));
t144 = t78 * t82;
t65 = qJD(2) * t144;
t80 = cos(pkin(6));
t31 = -qJD(4) * t131 + t80 * t134 - t83 * t65;
t149 = t31 * t83;
t44 = t83 * t143 + t80 * t81;
t71 = t81 * qJD(4);
t36 = t44 * t71;
t158 = t36 - t149;
t40 = t91 * t83;
t157 = (t81 ^ 2 - t83 ^ 2) * qJD(4);
t156 = -0.2e1 * t42;
t124 = t151 * t77;
t50 = t150 * t79 + t124;
t43 = t50 * qJD(6);
t155 = 0.2e1 * t43;
t154 = 2 * qJD(3);
t153 = pkin(4) * t83;
t152 = t81 * pkin(4);
t148 = t43 * t81;
t147 = t43 * t83;
t15 = t44 * t31;
t146 = t44 * t81;
t145 = t77 * t83;
t85 = -pkin(2) - pkin(8);
t142 = t81 * t85;
t141 = t83 * t85;
t140 = pkin(9) + qJ(5);
t136 = qJD(2) * t84;
t127 = t78 * t136;
t139 = qJ(3) * t127 + qJD(3) * t144;
t62 = t79 * t142;
t101 = -qJ(5) * t83 + t152;
t93 = qJ(3) + t101;
t35 = t77 * t93 + t62;
t73 = t77 ^ 2;
t74 = t79 ^ 2;
t138 = t73 + t74;
t135 = qJD(5) * t81;
t133 = qJ(3) * qJD(4);
t132 = t77 * t142;
t130 = t79 * t141;
t129 = t50 * t134;
t128 = t77 * t71;
t126 = t79 * t71;
t68 = t85 * t71;
t125 = t81 * t134;
t121 = -t77 * t85 + pkin(5);
t120 = t138 * t83;
t119 = qJD(5) * t150;
t116 = t151 * qJD(5);
t115 = t138 * qJD(5);
t114 = -0.2e1 * t125;
t63 = 0.2e1 * t125;
t113 = t77 * t126;
t112 = -qJD(5) * t83 + qJD(3);
t109 = 0.2e1 * t115;
t108 = 0.2e1 * t157;
t107 = t150 * t71;
t104 = t151 * t71;
t103 = t140 * t150;
t102 = qJ(5) * t81 + t153;
t30 = t44 * qJD(4) - t81 * t65;
t17 = t79 * t127 + t30 * t77;
t18 = t77 * t127 - t30 * t79;
t100 = -t17 * t77 + t18 * t79;
t95 = t79 * t112;
t25 = t95 + (t79 * t102 - t77 * t141) * qJD(4);
t96 = t77 * t112;
t26 = t96 + (t77 * t102 + t130) * qJD(4);
t99 = -t25 * t77 + t26 * t79;
t45 = t80 * t83 - t131;
t28 = t79 * t144 - t45 * t77;
t29 = t77 * t144 + t45 * t79;
t98 = -t28 * t77 + t29 * t79;
t34 = t79 * t93 - t132;
t97 = -t34 * t77 + t35 * t79;
t94 = t140 * t124;
t92 = t140 * t81 + t153;
t9 = t150 * t28 + t151 * t29;
t5 = -t30 * t81 - t149 + (t45 * t83 + t146) * qJD(4);
t90 = t121 * t81 + (-t140 * t83 + qJ(3) + t152) * t79;
t89 = t151 * t90;
t88 = t150 * t90;
t87 = t96 + (t92 * t77 + t130) * qJD(4);
t86 = t95 + (t121 * t83 + t92 * t79) * qJD(4);
t72 = qJ(3) * t154;
t70 = -pkin(5) * t79 - pkin(4);
t59 = t140 * t79;
t48 = (pkin(5) * t77 - t85) * t83;
t41 = -pkin(5) * t128 + t68;
t38 = t50 * t83;
t37 = t50 * t81;
t33 = -t77 * t103 + t151 * t59;
t32 = -t150 * t59 - t94;
t27 = -pkin(9) * t145 + t35;
t22 = -t77 * t104 - t79 * t107 - t159;
t21 = -qJD(6) * t39 - t129;
t20 = t79 * t104 - t77 * t107 + t147;
t19 = -qJD(4) * t40 + t148;
t14 = -t59 * t118 - t79 * t119 + (qJD(6) * t103 - t116) * t77;
t13 = qJD(6) * t94 - t79 * t116 + t59 * t117 + t77 * t119;
t8 = -t150 * t29 + t151 * t28;
t7 = t151 * t27 + t88;
t6 = -t150 * t27 + t89;
t4 = -t9 * qJD(6) - t150 * t18 + t151 * t17;
t3 = t29 * t117 - t28 * t118 - t150 * t17 - t151 * t18;
t2 = -qJD(6) * t88 - t27 * t118 - t150 * t87 + t151 * t86;
t1 = -qJD(6) * t89 + t27 * t117 - t150 * t86 - t151 * t87;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t78 ^ 2 * t82 * t136 - 0.2e1 * t30 * t45 + 0.2e1 * t15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t17 * t28 + 0.2e1 * t18 * t29 + 0.2e1 * t15, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t3 * t9 + 0.2e1 * t4 * t8 + 0.2e1 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, -t127, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t127, -pkin(2) * t65 + t139, 0, 0, 0, 0, 0, 0 (t82 * t134 + t81 * t136) * t78 (t83 * t136 - t82 * t71) * t78, -t5, t5 * t85 + t139, 0, 0, 0, 0, 0, 0, t31 * t145 + t17 * t81 + (-t77 * t146 + t28 * t83) * qJD(4), t79 * t149 - t18 * t81 + (-t79 * t146 - t29 * t83) * qJD(4) (-t17 * t79 - t18 * t77) * t83 + (t28 * t79 + t29 * t77) * t71, t158 * t85 + t17 * t34 + t18 * t35 + t28 * t25 + t29 * t26, 0, 0, 0, 0, 0, 0, t134 * t8 + t22 * t44 + t31 * t38 + t4 * t81, -t134 * t9 - t20 * t44 + t3 * t81 + t31 * t40, t20 * t8 - t22 * t9 + t3 * t38 - t4 * t40, -t1 * t9 + t2 * t8 - t3 * t7 + t31 * t48 + t4 * t6 + t41 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t72, t114, t108, 0, t63, 0, 0, 0.2e1 * qJD(3) * t81 + 0.2e1 * t83 * t133, 0.2e1 * qJD(3) * t83 - 0.2e1 * t81 * t133, 0, t72, t74 * t114, 0.4e1 * t83 * t113, -0.2e1 * t79 * t157, t73 * t114, t77 * t108, t63, 0.2e1 * t25 * t81 + 0.2e1 * (t34 + 0.2e1 * t132) * t134, -0.2e1 * t26 * t81 + 0.2e1 * (-t35 + 0.2e1 * t62) * t134, 0.2e1 * (-t25 * t79 - t26 * t77) * t83 + 0.2e1 * (t34 * t79 + t35 * t77) * t71, -0.2e1 * t85 ^ 2 * t125 + 0.2e1 * t34 * t25 + 0.2e1 * t35 * t26, -0.2e1 * t40 * t20, 0.2e1 * t20 * t38 - 0.2e1 * t22 * t40, 0.2e1 * t134 * t40 - 0.2e1 * t20 * t81, 0.2e1 * t38 * t22, -0.2e1 * t134 * t38 - 0.2e1 * t22 * t81, t63, 0.2e1 * t134 * t6 + 0.2e1 * t2 * t81 + 0.2e1 * t22 * t48 + 0.2e1 * t38 * t41, 0.2e1 * t1 * t81 - 0.2e1 * t134 * t7 - 0.2e1 * t20 * t48 + 0.2e1 * t40 * t41, 0.2e1 * t1 * t38 - 0.2e1 * t2 * t40 + 0.2e1 * t20 * t6 - 0.2e1 * t22 * t7, -0.2e1 * t1 * t7 + 0.2e1 * t2 * t6 + 0.2e1 * t41 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36 + t100 * t81 + (t98 * qJD(4) - t31) * t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t9 + t21 * t8 - t3 * t39 - t37 * t4 + t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99 * t81 + (t97 - 0.2e1 * t142) * t134, 0, 0, 0, 0, 0, 0, t21 * t81 - t22 * t83 + (-t37 * t83 + t38 * t81) * qJD(4), t19 * t81 + t20 * t83 + (-t39 * t83 + t40 * t81) * qJD(4), t19 * t38 - t20 * t37 - t21 * t40 - t22 * t39, -t1 * t39 - t19 * t7 - t2 * t37 + t21 * t6 - t41 * t83 + t48 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t138) * t63, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t19 * t39 - 0.2e1 * t21 * t37 - 0.2e1 * t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, t30, 0, 0, 0, 0, 0, 0, 0, 0, -t31 * t79, t31 * t77, t100, -pkin(4) * t31 + t100 * qJ(5) + t98 * qJD(5), 0, 0, 0, 0, 0, 0, -t31 * t91 + t43 * t44, t31 * t50 - t42 * t44, -t3 * t91 - t4 * t50 + t42 * t8 - t43 * t9, -t13 * t9 + t14 * t8 - t3 * t33 + t31 * t70 + t32 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, 0, -t134, 0, -t68, -t85 * t134, 0, 0, -t113 (t73 - t74) * t71, t77 * t134, t113, t79 * t134, 0, -t77 * t135 + (t101 * t77 - t62) * qJD(4), -t79 * t135 + (t101 * t79 + t132) * qJD(4), t99, -pkin(4) * t68 + t99 * qJ(5) + t97 * qJD(5), -t20 * t50 - t40 * t42, -t20 * t91 - t22 * t50 + t38 * t42 - t40 * t43, -t42 * t81 + t129, -t22 * t91 + t38 * t43, t134 * t91 - t148, 0, t134 * t32 + t14 * t81 + t22 * t70 - t41 * t91 + t43 * t48, t13 * t81 - t134 * t33 - t20 * t70 + t41 * t50 - t42 * t48, -t1 * t91 + t13 * t38 - t14 * t40 - t2 * t50 + t20 * t32 - t22 * t33 + t42 * t6 - t43 * t7, -t1 * t33 - t13 * t7 + t14 * t6 + t2 * t32 + t41 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t134, 0, 0, 0, 0, 0, 0, 0, 0, -t126, t128, qJD(4) * t120, t81 * t115 + (qJ(5) * t120 - t152) * qJD(4), 0, 0, 0, 0, 0, 0, -t71 * t91 - t147, t50 * t71 + t159, -t19 * t91 - t21 * t50 - t37 * t42 - t39 * t43, -t13 * t39 - t14 * t37 - t19 * t33 + t21 * t32 + t70 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, qJ(5) * t109, t50 * t156, -0.2e1 * t42 * t91 - 0.2e1 * t43 * t50, 0, -t91 * t155, 0, 0, t70 * t155, t70 * t156, -0.2e1 * t13 * t91 - 0.2e1 * t14 * t50 + 0.2e1 * t32 * t42 - 0.2e1 * t33 * t43, -0.2e1 * t13 * t33 + 0.2e1 * t14 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t126, 0, t68, 0, 0, 0, 0, 0, 0, t22, -t20, 0, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t42, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, 0, -t22, t134, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, t19, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, -t43, 0, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
