% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRPR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:49:34
% EndTime: 2019-03-08 19:49:44
% DurationCPUTime: 3.56s
% Computational Cost: add. (4006->382), mult. (9204->562), div. (0->0), fcn. (6626->10), ass. (0->208)
t144 = cos(pkin(11));
t150 = cos(qJ(4));
t152 = -pkin(2) - pkin(8);
t213 = qJD(4) * t152;
t195 = t150 * t213;
t129 = t144 * t195;
t142 = sin(pkin(11));
t151 = cos(qJ(2));
t143 = sin(pkin(6));
t221 = qJD(1) * t143;
t147 = sin(qJ(4));
t148 = sin(qJ(2));
t228 = t147 * t148;
t171 = pkin(4) * t150 + qJ(5) * t147;
t89 = qJD(4) * t171 - t150 * qJD(5) + qJD(3);
t250 = t142 * t89 + t129 - (t142 * t151 + t144 * t228) * t221;
t268 = (-t142 * t228 + t144 * t151) * t221 - t144 * t89;
t216 = qJD(2) * t150;
t192 = t142 * t216;
t208 = t144 * qJD(4);
t105 = -t192 + t208;
t189 = t144 * t216;
t209 = t142 * qJD(4);
t106 = t189 + t209;
t146 = sin(qJ(6));
t149 = cos(qJ(6));
t54 = -t149 * t105 + t146 * t106;
t267 = t54 ^ 2;
t57 = t146 * t105 + t149 * t106;
t266 = t57 ^ 2;
t185 = -t142 * t152 + pkin(5);
t230 = t144 * t147;
t205 = pkin(9) * t230;
t265 = -(t150 * t185 + t205) * qJD(4) + t268;
t264 = pkin(9) * t147 * t209 + t250;
t207 = t147 * qJD(2);
t135 = qJD(6) + t207;
t263 = t54 * t135;
t226 = t149 * t144;
t109 = t146 * t142 - t226;
t87 = t109 * t147;
t211 = qJD(6) * t149;
t212 = qJD(6) * t146;
t262 = -t142 * t212 + t144 * t211;
t191 = t148 * t221;
t176 = qJD(2) * t191;
t118 = t150 * t176;
t190 = t151 * t221;
t170 = qJD(3) - t190;
t101 = t152 * qJD(2) + t170;
t145 = cos(pkin(6));
t220 = qJD(1) * t145;
t188 = t150 * t220;
t72 = t147 * t101 + t188;
t46 = t72 * qJD(4) - t118;
t243 = t46 * t150;
t133 = t147 * t220;
t214 = qJD(4) * t150;
t242 = t101 * t214 + t147 * t176;
t45 = -qJD(4) * t133 + t242;
t71 = t150 * t101 - t133;
t155 = -(t147 * t71 - t150 * t72) * qJD(4) + t45 * t147 - t243;
t38 = (qJD(5) - t133) * qJD(4) + t242;
t58 = (t89 + t190) * qJD(2);
t14 = -t142 * t38 + t144 * t58;
t159 = (pkin(5) * t150 + t205) * qJD(2);
t12 = qJD(4) * t159 + t14;
t15 = t142 * t58 + t144 * t38;
t200 = t142 * t207;
t180 = pkin(9) * t200;
t13 = qJD(4) * t180 + t15;
t64 = qJD(4) * qJ(5) + t72;
t119 = t147 * pkin(4) - t150 * qJ(5) + qJ(3);
t79 = qJD(2) * t119 + t191;
t22 = -t142 * t64 + t144 * t79;
t16 = pkin(5) * t207 - t106 * pkin(9) + t22;
t23 = t142 * t79 + t144 * t64;
t17 = t105 * pkin(9) + t23;
t165 = t146 * t17 - t149 * t16;
t1 = -qJD(6) * t165 + t146 * t12 + t149 * t13;
t103 = t144 * t119;
t258 = pkin(9) * t150;
t51 = -t144 * t258 + t147 * t185 + t103;
t227 = t147 * t152;
t78 = t142 * t119 + t144 * t227;
t63 = -t142 * t258 + t78;
t19 = t146 * t51 + t149 * t63;
t261 = qJD(6) * t19 + t264 * t146 + t265 * t149;
t18 = -t146 * t63 + t149 * t51;
t260 = -qJD(6) * t18 + t265 * t146 - t264 * t149;
t110 = t149 * t142 + t146 * t144;
t112 = t171 * qJD(2);
t32 = t144 * t112 - t142 * t71;
t24 = t159 + t32;
t33 = t142 * t112 + t144 * t71;
t29 = t180 + t33;
t255 = pkin(9) + qJ(5);
t127 = t255 * t142;
t128 = t255 * t144;
t70 = -t146 * t127 + t149 * t128;
t259 = -qJD(5) * t110 - qJD(6) * t70 + t146 * t29 - t149 * t24;
t232 = t143 * t151;
t97 = t145 * t147 + t150 * t232;
t257 = t46 * t97;
t256 = t57 * t54;
t69 = -t149 * t127 - t146 * t128;
t254 = qJD(5) * t109 - qJD(6) * t69 + t146 * t24 + t149 * t29;
t85 = t110 * t147;
t88 = t109 * t150;
t94 = t110 * qJD(2);
t253 = -qJD(4) * t88 - qJD(6) * t85 - t94;
t252 = t109 * qJD(2) + qJD(6) * t87 - t110 * t214;
t179 = t142 * t195;
t251 = -t179 - t268;
t96 = t110 * qJD(6);
t249 = t147 * t94 + t96;
t248 = -t146 * t200 + t207 * t226 + t262;
t247 = qJD(2) * pkin(2);
t183 = qJD(4) * pkin(4) - qJD(5);
t61 = -t183 - t71;
t246 = t147 * t61;
t245 = t46 * t142;
t244 = t46 * t144;
t241 = t105 * t142;
t240 = t105 * t144;
t239 = t106 * t142;
t238 = t106 * t144;
t108 = (qJD(3) + t190) * qJD(2);
t237 = t108 * t148;
t219 = qJD(2) * qJ(3);
t113 = t191 + t219;
t236 = t113 * t151;
t235 = t142 * t147;
t154 = qJD(2) ^ 2;
t234 = t142 * t154;
t233 = t143 * t148;
t231 = t143 * t154;
t229 = t144 * t154;
t206 = qJD(2) * qJD(4);
t187 = t147 * t206;
t174 = t149 * t187;
t175 = t146 * t187;
t225 = -t142 * t174 - t144 * t175;
t140 = t147 ^ 2;
t141 = t150 ^ 2;
t224 = t140 - t141;
t223 = 0.2e1 * t140 - t141;
t153 = qJD(4) ^ 2;
t222 = -t153 - t154;
t218 = qJD(2) * t142;
t217 = qJD(2) * t143;
t215 = qJD(4) * t147;
t210 = t113 * qJD(2);
t204 = t147 * t232;
t203 = t148 * t231;
t202 = t151 * t231;
t201 = t150 * t154 * t147;
t199 = t148 * t217;
t198 = t151 * t217;
t197 = t146 * t215;
t196 = t149 * t215;
t186 = t150 * t206;
t184 = pkin(5) * t142 - t152;
t182 = -t105 + t208;
t181 = -t106 + t209;
t178 = t150 * t199;
t177 = t147 * t199;
t173 = t147 * t186;
t172 = -t113 + t191;
t168 = -t14 * t142 + t15 * t144;
t167 = -t142 * t23 - t144 * t22;
t166 = -t142 * t22 + t144 * t23;
t6 = t146 * t16 + t149 * t17;
t98 = t145 * t150 - t204;
t65 = -t98 * t142 + t144 * t233;
t66 = t142 * t233 + t98 * t144;
t20 = -t146 * t66 + t149 * t65;
t21 = t146 * t65 + t149 * t66;
t162 = t108 * qJ(3) + t113 * qJD(3);
t161 = qJD(2) * t182;
t160 = t181 * t207;
t158 = t172 - t219;
t26 = qJD(6) * t57 + t225;
t157 = -qJ(5) * t214 + (t183 + t61) * t147;
t50 = t188 + (-pkin(5) * t218 + t101) * t147;
t2 = -qJD(6) * t6 + t149 * t12 - t146 * t13;
t156 = qJD(2) * t170 - t152 * t153 + t108;
t25 = -t105 * t211 + t106 * t212 - t142 * t175 + t144 * t174;
t30 = qJD(4) * t50 - t118;
t139 = t144 ^ 2;
t138 = t142 ^ 2;
t137 = -t144 * pkin(5) - pkin(4);
t130 = 0.2e1 * t173;
t111 = t170 - t247;
t104 = t184 * t150;
t92 = t184 * t215;
t86 = t110 * t150;
t77 = -t142 * t227 + t103;
t68 = -qJD(4) * t204 + t145 * t214 - t178;
t67 = -qJD(4) * t97 + t177;
t44 = -t142 * t196 - t144 * t197 + t262 * t150;
t42 = -t142 * t197 + t144 * t196 + t150 * t96;
t40 = t142 * t198 + t67 * t144;
t39 = -t67 * t142 + t144 * t198;
t35 = -t105 * pkin(5) + t61;
t8 = -qJD(6) * t21 - t146 * t40 + t149 * t39;
t7 = qJD(6) * t20 + t146 * t39 + t149 * t40;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t202, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202 (t237 + (t236 + (t111 - t190) * t148) * qJD(2)) * t143, 0, 0, 0, 0, 0, 0, t147 * t202 + (-t68 + t178) * qJD(4), t150 * t202 + (-t67 - t177) * qJD(4) (-t147 * t67 + t150 * t68 + (-t147 * t97 - t150 * t98) * qJD(4)) * qJD(2), t45 * t98 + t257 + t72 * t67 - t71 * t68 + (t151 * t210 + t237) * t143, 0, 0, 0, 0, 0, 0, -t68 * t105 + (t147 * t39 + (t150 * t65 - t235 * t97) * qJD(4)) * qJD(2), t68 * t106 + (-t147 * t40 + (-t150 * t66 - t230 * t97) * qJD(4)) * qJD(2), t40 * t105 - t39 * t106 + (t142 * t66 + t144 * t65) * t187, t14 * t65 + t15 * t66 + t22 * t39 + t23 * t40 + t61 * t68 + t257, 0, 0, 0, 0, 0, 0, t8 * t135 + t186 * t20 + t97 * t26 + t68 * t54, -t7 * t135 - t186 * t21 - t97 * t25 + t68 * t57, t20 * t25 - t21 * t26 - t7 * t54 - t8 * t57, t1 * t21 - t165 * t8 + t2 * t20 + t30 * t97 + t35 * t68 + t6 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(2) * qJD(3) (-t236 + (-t111 - t247) * t148) * t221 + t162, -0.2e1 * t173, 0.2e1 * t224 * t206, -t153 * t147, t130, -t153 * t150, 0, t147 * t156 - t158 * t214, t150 * t156 + t158 * t215 (t140 + t141) * t176 - t155 (-t236 + (-t147 * t72 - t150 * t71) * t148) * t221 + t155 * t152 + t162 (-t139 * t216 - t238) * t215 (-t240 + (t106 + 0.2e1 * t189) * t142) * t215 (-qJD(2) * t144 * t223 + t106 * t150) * qJD(4) (-t138 * t216 + t241) * t215 (t105 * t150 + t218 * t223) * qJD(4), t130 (-t105 * t191 + t245 + (qJD(2) * t77 + t22) * qJD(4)) * t150 + (t14 + (-t105 * t152 - t142 * t61) * qJD(4) + (t179 + t251) * qJD(2)) * t147 (t106 * t191 + t244 + (-qJD(2) * t78 - t23) * qJD(4)) * t150 + (-t15 + (t106 * t152 - t144 * t61) * qJD(4) + (t129 - t250) * qJD(2)) * t147 (-t14 * t144 - t142 * t15) * t150 - t251 * t106 + t250 * t105 + ((t142 * t78 + t144 * t77) * qJD(2) - t167) * t215, t213 * t246 + t14 * t77 + t15 * t78 + t250 * t23 + t251 * t22 + (-t152 * t46 + t191 * t61) * t150, t25 * t88 - t57 * t42, t25 * t86 + t88 * t26 + t42 * t54 - t57 * t44, -t42 * t135 - t25 * t147 + (-qJD(2) * t88 + t57) * t214, t26 * t86 + t54 * t44, -t44 * t135 - t26 * t147 + (-qJD(2) * t86 - t54) * t214 (t135 + t207) * t214, t104 * t26 + t2 * t147 + t30 * t86 + t35 * t44 - t92 * t54 - t261 * t135 + (t54 * t191 + (qJD(2) * t18 - t165) * qJD(4)) * t150, -t1 * t147 - t104 * t25 - t30 * t88 - t35 * t42 - t92 * t57 + t260 * t135 + (t57 * t191 + (-qJD(2) * t19 - t6) * qJD(4)) * t150, -t1 * t86 - t165 * t42 + t18 * t25 - t19 * t26 + t2 * t88 + t260 * t54 + t261 * t57 - t6 * t44, t1 * t19 + t30 * t104 + t2 * t18 - t260 * t6 + t261 * t165 + (t150 * t191 - t92) * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, t172 * qJD(2), 0, 0, 0, 0, 0, 0, t222 * t147, t222 * t150, 0, t155 - t210, 0, 0, 0, 0, 0, 0 (-t229 + (-t105 - t192) * qJD(4)) * t147 (t234 + (t106 - t189) * qJD(4)) * t147 (t239 + t240) * t214 + (t238 - t241) * qJD(2), -t243 + t168 * t147 + t167 * qJD(2) + (t150 * t166 + t246) * qJD(4), 0, 0, 0, 0, 0, 0, -t150 * t26 + t252 * t135 + (t147 * t54 - t216 * t85) * qJD(4), t150 * t25 - t253 * t135 + (t147 * t57 + t216 * t87) * qJD(4), -t85 * t25 - t252 * t57 - t253 * t54 + t87 * t26, -t1 * t87 - t30 * t150 - t165 * t252 - t2 * t85 + t35 * t215 + t253 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t224 * t154, 0, -t201, 0, 0, -t150 * t210 + t118, t113 * t207 + (t71 + t133) * qJD(4) - t242, 0, 0, -t144 * t160 (t240 - t239 + (t138 - t139) * qJD(4)) * t207, t140 * t229 + t181 * t216, t161 * t235, -t140 * t234 + t150 * t161, -t201, t72 * t105 - t244 + (t142 * t157 - t147 * t32 - t150 * t22) * qJD(2), -t72 * t106 + t245 + (t144 * t157 + t147 * t33 + t150 * t23) * qJD(2), -t33 * t105 + t32 * t106 + (qJD(5) * t105 - t207 * t22 + t15) * t144 + (qJD(5) * t106 - t207 * t23 - t14) * t142, -t46 * pkin(4) + qJ(5) * t168 + qJD(5) * t166 - t22 * t32 - t23 * t33 - t61 * t72, -t25 * t110 + t248 * t57, t25 * t109 - t110 * t26 - t248 * t54 - t249 * t57, t248 * t135 + (qJD(4) * t110 - t57) * t216, t26 * t109 + t249 * t54, -t249 * t135 + (-qJD(4) * t109 + t54) * t216, -t135 * t216, t30 * t109 + t137 * t26 - t50 * t54 + t249 * t35 + t259 * t135 + (qJD(4) * t69 + t165) * t216, t30 * t110 - t137 * t25 - t50 * t57 + t248 * t35 + t254 * t135 + (-qJD(4) * t70 + t6) * t216, -t1 * t109 - t2 * t110 + t165 * t248 - t249 * t6 + t69 * t25 + t254 * t54 - t259 * t57 - t70 * t26, t1 * t70 + t30 * t137 - t165 * t259 + t2 * t69 - t254 * t6 - t35 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, -t182 * t207, -t105 ^ 2 - t106 ^ 2, -t23 * t105 + t22 * t106 + t46, 0, 0, 0, 0, 0, 0, t57 * t135 + t26, -t25 - t263, -t266 - t267, -t165 * t57 + t54 * t6 + t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t266 - t267, -t25 + t263, -t256, -t225 + (-qJD(6) + t135) * t57, t186, t6 * t135 - t35 * t57 + t2, -t135 * t165 + t35 * t54 - t1, 0, 0;];
tauc_reg  = t3;
