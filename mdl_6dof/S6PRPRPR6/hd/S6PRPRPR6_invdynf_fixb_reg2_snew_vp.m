% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6PRPRPR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 23:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6PRPRPR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR6_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR6_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRPR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRPR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR6_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:11:53
% EndTime: 2019-05-04 23:11:57
% DurationCPUTime: 4.70s
% Computational Cost: add. (21015->280), mult. (42693->382), div. (0->0), fcn. (29824->12), ass. (0->218)
t1747 = sin(pkin(10));
t1750 = cos(pkin(10));
t1722 = g(1) * t1747 - g(2) * t1750;
t1743 = -g(3) + qJDD(1);
t1748 = sin(pkin(6));
t1751 = cos(pkin(6));
t1811 = t1722 * t1751 + t1743 * t1748;
t1754 = sin(qJ(4));
t1800 = qJD(2) * t1754;
t1732 = qJD(6) + t1800;
t1810 = qJD(6) + t1732;
t1757 = cos(qJ(4));
t1799 = qJD(2) * t1757;
t1733 = qJD(4) * t1799;
t1736 = t1754 * qJDD(2);
t1715 = t1736 + t1733;
t1746 = sin(pkin(11));
t1749 = cos(pkin(11));
t1709 = -t1749 * qJD(4) + t1746 * t1799;
t1711 = qJD(4) * t1746 + t1749 * t1799;
t1797 = t1709 * t1711;
t1676 = t1715 - t1797;
t1755 = sin(qJ(2));
t1758 = cos(qJ(2));
t1759 = qJD(2) ^ 2;
t1719 = qJDD(2) * t1758 - t1755 * t1759;
t1809 = qJD(4) ^ 2;
t1753 = sin(qJ(6));
t1756 = cos(qJ(6));
t1680 = t1756 * t1709 + t1711 * t1753;
t1808 = t1680 ^ 2;
t1682 = -t1709 * t1753 + t1711 * t1756;
t1807 = t1682 ^ 2;
t1806 = t1709 ^ 2;
t1805 = t1711 ^ 2;
t1804 = t1732 ^ 2;
t1803 = 2 * qJD(3);
t1802 = -2 * qJD(5);
t1801 = t1759 * pkin(8);
t1798 = t1680 * t1682;
t1741 = t1754 ^ 2;
t1795 = t1741 * t1759;
t1697 = -t1722 * t1748 + t1743 * t1751;
t1793 = t1748 * t1697;
t1791 = qJD(6) - t1732;
t1723 = -g(1) * t1750 - g(2) * t1747;
t1678 = -t1723 * t1755 + t1758 * t1811;
t1667 = -qJDD(2) * pkin(2) - t1759 * qJ(3) + qJDD(3) - t1678;
t1760 = -qJDD(2) * pkin(8) + t1667;
t1654 = t1757 * t1697 + t1754 * t1760;
t1742 = t1757 ^ 2;
t1790 = t1741 + t1742;
t1788 = t1757 * qJDD(2);
t1787 = qJD(4) * t1800;
t1786 = t1709 * t1800;
t1785 = t1711 * t1800;
t1784 = t1754 * t1757 * t1759;
t1713 = (pkin(4) * t1754 - qJ(5) * t1757) * qJD(2);
t1642 = -pkin(4) * t1809 + qJDD(4) * qJ(5) - t1713 * t1800 + t1654;
t1716 = -t1787 + t1788;
t1679 = t1758 * t1723 + t1755 * t1811;
t1762 = -t1759 * pkin(2) + qJDD(2) * qJ(3) + t1679;
t1645 = t1715 * pkin(4) - t1801 - t1716 * qJ(5) + (t1803 + (pkin(4) * t1757 + qJ(5) * t1754) * qJD(4)) * qJD(2) + t1762;
t1614 = t1749 * t1642 + t1746 * t1645 + t1709 * t1802;
t1783 = -qJDD(6) - t1715;
t1653 = -t1754 * t1697 + t1757 * t1760;
t1695 = qJDD(4) * t1746 + t1716 * t1749;
t1781 = -t1749 * qJDD(4) + t1716 * t1746;
t1782 = -t1753 * t1695 - t1756 * t1781;
t1675 = -t1695 - t1786;
t1613 = -t1746 * t1642 + t1749 * t1645 + t1711 * t1802;
t1605 = pkin(5) * t1676 + t1675 * pkin(9) + t1613;
t1696 = pkin(5) * t1800 - pkin(9) * t1711;
t1608 = -pkin(5) * t1806 - pkin(9) * t1781 - t1696 * t1800 + t1614;
t1583 = t1605 * t1756 - t1608 * t1753;
t1584 = t1605 * t1753 + t1608 * t1756;
t1573 = t1583 * t1756 + t1584 * t1753;
t1574 = -t1583 * t1753 + t1584 * t1756;
t1566 = -t1573 * t1746 + t1574 * t1749;
t1641 = -qJDD(4) * pkin(4) - qJ(5) * t1809 + t1713 * t1799 + qJDD(5) - t1653;
t1617 = pkin(5) * t1781 - pkin(9) * t1806 + t1711 * t1696 + t1641;
t1563 = t1566 * t1754 - t1617 * t1757;
t1565 = t1573 * t1749 + t1574 * t1746;
t1780 = -t1563 * t1758 + t1565 * t1755;
t1629 = -t1682 * t1791 + t1782;
t1761 = -t1756 * t1695 + t1753 * t1781;
t1631 = t1680 * t1791 + t1761;
t1609 = t1629 * t1753 + t1631 * t1756;
t1610 = t1629 * t1756 - t1631 * t1753;
t1588 = -t1609 * t1746 + t1610 * t1749;
t1639 = -t1807 - t1808;
t1581 = t1588 * t1754 - t1639 * t1757;
t1587 = t1609 * t1749 + t1610 * t1746;
t1779 = -t1581 * t1758 + t1587 * t1755;
t1592 = -t1613 * t1746 + t1614 * t1749;
t1585 = t1592 * t1754 - t1641 * t1757;
t1591 = t1613 * t1749 + t1614 * t1746;
t1778 = -t1585 * t1758 + t1591 * t1755;
t1649 = -t1783 - t1798;
t1659 = -t1804 - t1808;
t1618 = t1649 * t1756 + t1659 * t1753;
t1619 = -t1649 * t1753 + t1659 * t1756;
t1602 = -t1618 * t1746 + t1619 * t1749;
t1628 = t1682 * t1810 - t1782;
t1589 = t1602 * t1754 - t1628 * t1757;
t1601 = t1618 * t1749 + t1619 * t1746;
t1777 = -t1589 * t1758 + t1601 * t1755;
t1650 = t1783 - t1798;
t1665 = -t1804 - t1807;
t1622 = t1650 * t1753 + t1665 * t1756;
t1623 = t1650 * t1756 - t1665 * t1753;
t1607 = -t1622 * t1746 + t1623 * t1749;
t1630 = -t1680 * t1810 - t1761;
t1593 = t1607 * t1754 - t1630 * t1757;
t1606 = t1622 * t1749 + t1623 * t1746;
t1776 = -t1593 * t1758 + t1606 * t1755;
t1620 = t1653 * t1757 + t1654 * t1754;
t1666 = qJD(2) * t1803 + t1762;
t1664 = t1666 - t1801;
t1775 = -t1620 * t1758 + t1664 * t1755;
t1673 = -t1781 + t1785;
t1647 = t1673 * t1749 - t1675 * t1746;
t1670 = -t1805 - t1806;
t1624 = t1647 * t1754 - t1670 * t1757;
t1646 = t1673 * t1746 + t1675 * t1749;
t1774 = -t1624 * t1758 + t1646 * t1755;
t1685 = -t1795 - t1806;
t1652 = -t1676 * t1746 + t1685 * t1749;
t1672 = t1781 + t1785;
t1632 = t1652 * t1754 - t1672 * t1757;
t1651 = t1676 * t1749 + t1685 * t1746;
t1773 = -t1632 * t1758 + t1651 * t1755;
t1677 = -t1715 - t1797;
t1698 = -t1795 - t1805;
t1661 = t1677 * t1749 - t1698 * t1746;
t1674 = t1695 - t1786;
t1636 = t1661 * t1754 - t1674 * t1757;
t1660 = t1677 * t1746 + t1698 * t1749;
t1772 = -t1636 * t1758 + t1660 * t1755;
t1771 = t1666 * t1755 - t1667 * t1758;
t1770 = t1678 * t1758 + t1679 * t1755;
t1724 = qJDD(4) - t1784;
t1730 = -t1795 - t1809;
t1689 = t1724 * t1757 + t1730 * t1754;
t1714 = t1736 + 0.2e1 * t1733;
t1769 = -t1689 * t1758 + t1714 * t1755;
t1725 = -qJDD(4) - t1784;
t1731 = -t1742 * t1759 - t1809;
t1690 = t1725 * t1754 + t1731 * t1757;
t1717 = -0.2e1 * t1787 + t1788;
t1768 = -t1690 * t1758 + t1717 * t1755;
t1720 = qJDD(2) * t1755 + t1758 * t1759;
t1702 = t1720 * t1751;
t1767 = t1702 * t1750 + t1719 * t1747;
t1766 = t1702 * t1747 - t1719 * t1750;
t1703 = t1719 * t1751;
t1765 = -t1703 * t1750 + t1720 * t1747;
t1764 = -t1703 * t1747 - t1720 * t1750;
t1718 = t1790 * qJDD(2);
t1721 = t1790 * t1759;
t1763 = t1718 * t1758 - t1721 * t1755;
t1701 = t1719 * t1748;
t1700 = t1720 * t1748;
t1692 = t1725 * t1757 - t1731 * t1754;
t1691 = -t1724 * t1754 + t1730 * t1757;
t1688 = t1751 * t1697;
t1686 = -t1718 * t1755 - t1721 * t1758;
t1684 = t1763 * t1751;
t1683 = t1763 * t1748;
t1669 = t1690 * t1755 + t1717 * t1758;
t1668 = t1689 * t1755 + t1714 * t1758;
t1658 = -t1748 * t1692 + t1751 * t1768;
t1657 = -t1748 * t1691 + t1751 * t1769;
t1656 = t1751 * t1692 + t1748 * t1768;
t1655 = t1751 * t1691 + t1748 * t1769;
t1648 = -t1678 * t1755 + t1679 * t1758;
t1640 = t1666 * t1758 + t1667 * t1755;
t1637 = t1661 * t1757 + t1674 * t1754;
t1635 = t1751 * t1770 - t1793;
t1634 = t1748 * t1770 + t1688;
t1633 = t1652 * t1757 + t1672 * t1754;
t1627 = t1751 * t1771 - t1793;
t1626 = t1748 * t1771 + t1688;
t1625 = t1647 * t1757 + t1670 * t1754;
t1621 = -t1653 * t1754 + t1654 * t1757;
t1616 = t1636 * t1755 + t1660 * t1758;
t1615 = t1632 * t1755 + t1651 * t1758;
t1612 = t1620 * t1755 + t1664 * t1758;
t1611 = t1624 * t1755 + t1646 * t1758;
t1604 = -t1748 * t1637 + t1751 * t1772;
t1603 = t1751 * t1637 + t1748 * t1772;
t1600 = -t1748 * t1633 + t1751 * t1773;
t1599 = t1751 * t1633 + t1748 * t1773;
t1598 = -t1748 * t1625 + t1751 * t1774;
t1597 = t1751 * t1625 + t1748 * t1774;
t1596 = -t1748 * t1621 + t1751 * t1775;
t1595 = t1751 * t1621 + t1748 * t1775;
t1594 = t1607 * t1757 + t1630 * t1754;
t1590 = t1602 * t1757 + t1628 * t1754;
t1586 = t1592 * t1757 + t1641 * t1754;
t1582 = t1588 * t1757 + t1639 * t1754;
t1580 = t1593 * t1755 + t1606 * t1758;
t1579 = t1589 * t1755 + t1601 * t1758;
t1578 = t1585 * t1755 + t1591 * t1758;
t1577 = -t1748 * t1594 + t1751 * t1776;
t1576 = t1751 * t1594 + t1748 * t1776;
t1575 = t1581 * t1755 + t1587 * t1758;
t1572 = -t1748 * t1590 + t1751 * t1777;
t1571 = t1751 * t1590 + t1748 * t1777;
t1570 = -t1748 * t1586 + t1751 * t1778;
t1569 = t1751 * t1586 + t1748 * t1778;
t1568 = -t1748 * t1582 + t1751 * t1779;
t1567 = t1751 * t1582 + t1748 * t1779;
t1564 = t1566 * t1757 + t1617 * t1754;
t1562 = t1563 * t1755 + t1565 * t1758;
t1561 = -t1748 * t1564 + t1751 * t1780;
t1560 = t1751 * t1564 + t1748 * t1780;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1722 * t1747 + t1723 * t1750, 0, 0, 0, 0, 0, 0, t1764, t1766, 0, -t1635 * t1747 + t1648 * t1750, 0, 0, 0, 0, 0, 0, 0, -t1764, -t1766, -t1627 * t1747 + t1640 * t1750, 0, 0, 0, 0, 0, 0, -t1657 * t1747 + t1668 * t1750, -t1658 * t1747 + t1669 * t1750, -t1684 * t1747 + t1686 * t1750, -t1596 * t1747 + t1612 * t1750, 0, 0, 0, 0, 0, 0, -t1600 * t1747 + t1615 * t1750, -t1604 * t1747 + t1616 * t1750, -t1598 * t1747 + t1611 * t1750, -t1570 * t1747 + t1578 * t1750, 0, 0, 0, 0, 0, 0, -t1572 * t1747 + t1579 * t1750, -t1577 * t1747 + t1580 * t1750, -t1568 * t1747 + t1575 * t1750, -t1561 * t1747 + t1562 * t1750; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1722 * t1750 + t1723 * t1747, 0, 0, 0, 0, 0, 0, -t1765, -t1767, 0, t1635 * t1750 + t1648 * t1747, 0, 0, 0, 0, 0, 0, 0, t1765, t1767, t1627 * t1750 + t1640 * t1747, 0, 0, 0, 0, 0, 0, t1657 * t1750 + t1668 * t1747, t1658 * t1750 + t1669 * t1747, t1684 * t1750 + t1686 * t1747, t1596 * t1750 + t1612 * t1747, 0, 0, 0, 0, 0, 0, t1600 * t1750 + t1615 * t1747, t1604 * t1750 + t1616 * t1747, t1598 * t1750 + t1611 * t1747, t1570 * t1750 + t1578 * t1747, 0, 0, 0, 0, 0, 0, t1572 * t1750 + t1579 * t1747, t1577 * t1750 + t1580 * t1747, t1568 * t1750 + t1575 * t1747, t1561 * t1750 + t1562 * t1747; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1743, 0, 0, 0, 0, 0, 0, t1701, -t1700, 0, t1634, 0, 0, 0, 0, 0, 0, 0, -t1701, t1700, t1626, 0, 0, 0, 0, 0, 0, t1655, t1656, t1683, t1595, 0, 0, 0, 0, 0, 0, t1599, t1603, t1597, t1569, 0, 0, 0, 0, 0, 0, t1571, t1576, t1567, t1560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1723, 0, 0, 0, 0, 0, 0, -t1720, -t1719, 0, t1648, 0, 0, 0, 0, 0, 0, 0, t1720, t1719, t1640, 0, 0, 0, 0, 0, 0, t1668, t1669, t1686, t1612, 0, 0, 0, 0, 0, 0, t1615, t1616, t1611, t1578, 0, 0, 0, 0, 0, 0, t1579, t1580, t1575, t1562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1722, 0, 0, 0, 0, 0, 0, t1703, -t1702, 0, t1635, 0, 0, 0, 0, 0, 0, 0, -t1703, t1702, t1627, 0, 0, 0, 0, 0, 0, t1657, t1658, t1684, t1596, 0, 0, 0, 0, 0, 0, t1600, t1604, t1598, t1570, 0, 0, 0, 0, 0, 0, t1572, t1577, t1568, t1561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1743, 0, 0, 0, 0, 0, 0, t1701, -t1700, 0, t1634, 0, 0, 0, 0, 0, 0, 0, -t1701, t1700, t1626, 0, 0, 0, 0, 0, 0, t1655, t1656, t1683, t1595, 0, 0, 0, 0, 0, 0, t1599, t1603, t1597, t1569, 0, 0, 0, 0, 0, 0, t1571, t1576, t1567, t1560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1759, -qJDD(2), 0, t1679, 0, 0, 0, 0, 0, 0, 0, t1759, qJDD(2), t1666, 0, 0, 0, 0, 0, 0, t1714, t1717, -t1721, t1664, 0, 0, 0, 0, 0, 0, t1651, t1660, t1646, t1591, 0, 0, 0, 0, 0, 0, t1601, t1606, t1587, t1565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1759, 0, t1678, 0, 0, 0, 0, 0, 0, 0, -qJDD(2), t1759, -t1667, 0, 0, 0, 0, 0, 0, -t1689, -t1690, t1718, -t1620, 0, 0, 0, 0, 0, 0, -t1632, -t1636, -t1624, -t1585, 0, 0, 0, 0, 0, 0, -t1589, -t1593, -t1581, -t1563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1697, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1697, 0, 0, 0, 0, 0, 0, t1691, t1692, 0, t1621, 0, 0, 0, 0, 0, 0, t1633, t1637, t1625, t1586, 0, 0, 0, 0, 0, 0, t1590, t1594, t1582, t1564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1697, 0, 0, 0, 0, 0, 0, t1691, t1692, 0, t1621, 0, 0, 0, 0, 0, 0, t1633, t1637, t1625, t1586, 0, 0, 0, 0, 0, 0, t1590, t1594, t1582, t1564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1759, -qJDD(2), -t1666, 0, 0, 0, 0, 0, 0, -t1714, -t1717, t1721, -t1664, 0, 0, 0, 0, 0, 0, -t1651, -t1660, -t1646, -t1591, 0, 0, 0, 0, 0, 0, -t1601, -t1606, -t1587, -t1565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1759, t1667, 0, 0, 0, 0, 0, 0, t1689, t1690, -t1718, t1620, 0, 0, 0, 0, 0, 0, t1632, t1636, t1624, t1585, 0, 0, 0, 0, 0, 0, t1589, t1593, t1581, t1563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1730, t1725, -t1736, t1654, 0, 0, 0, 0, 0, 0, t1652, t1661, t1647, t1592, 0, 0, 0, 0, 0, 0, t1602, t1607, t1588, t1566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1724, t1731, -t1788, t1653, 0, 0, 0, 0, 0, 0, -t1672, -t1674, -t1670, -t1641, 0, 0, 0, 0, 0, 0, -t1628, -t1630, -t1639, -t1617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1714, t1717, -t1721, t1664, 0, 0, 0, 0, 0, 0, t1651, t1660, t1646, t1591, 0, 0, 0, 0, 0, 0, t1601, t1606, t1587, t1565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1685, t1677, t1673, t1614, 0, 0, 0, 0, 0, 0, t1619, t1623, t1610, t1574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1676, t1698, t1675, t1613, 0, 0, 0, 0, 0, 0, t1618, t1622, t1609, t1573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1672, t1674, t1670, t1641, 0, 0, 0, 0, 0, 0, t1628, t1630, t1639, t1617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1659, t1650, t1629, t1584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1649, t1665, t1631, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1628, t1630, t1639, t1617;];
f_new_reg  = t1;
