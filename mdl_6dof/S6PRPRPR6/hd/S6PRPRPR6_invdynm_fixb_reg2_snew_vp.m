% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPRPR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 23:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPRPR6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR6_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR6_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRPR6_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRPR6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR6_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:11:25
% EndTime: 2019-05-04 23:11:53
% DurationCPUTime: 28.90s
% Computational Cost: add. (168057->896), mult. (340182->1265), div. (0->0), fcn. (235862->12), ass. (0->604)
t1360 = sin(pkin(6));
t1371 = cos(qJ(2));
t1478 = t1360 * qJDD(2);
t1368 = sin(qJ(2));
t1372 = qJD(2) ^ 2;
t1483 = t1368 * t1372;
t1305 = t1360 * t1483 - t1371 * t1478;
t1363 = cos(pkin(6));
t1345 = t1363 * qJDD(2);
t1307 = -t1345 * t1371 + t1363 * t1483;
t1359 = sin(pkin(10));
t1362 = cos(pkin(10));
t1465 = g(1) * t1359 - t1362 * g(2);
t1517 = g(3) - qJDD(1);
t1297 = t1360 * t1465 + t1363 * t1517;
t1484 = t1368 * t1297;
t1208 = (t1305 * t1360 + t1307 * t1363) * pkin(7) - t1484;
t1325 = qJDD(2) * t1368 + t1371 * t1372;
t1263 = t1307 * t1359 - t1325 * t1362;
t1559 = -qJ(1) * t1263 - t1208 * t1359;
t1258 = t1307 * t1362 + t1325 * t1359;
t1558 = -qJ(1) * t1258 - t1208 * t1362;
t1304 = t1325 * t1360;
t1306 = t1325 * t1363;
t1482 = t1371 * t1297;
t1211 = (t1304 * t1360 + t1306 * t1363) * pkin(7) - t1482;
t1324 = qJDD(2) * t1371 - t1483;
t1261 = t1306 * t1359 - t1324 * t1362;
t1557 = -qJ(1) * t1261 - t1211 * t1359;
t1256 = t1306 * t1362 + t1324 * t1359;
t1556 = -qJ(1) * t1256 - t1211 * t1362;
t1358 = sin(pkin(11));
t1361 = cos(pkin(11));
t1370 = cos(qJ(4));
t1509 = qJD(2) * t1370;
t1313 = -t1361 * qJD(4) + t1358 * t1509;
t1314 = qJD(4) * t1358 + t1361 * t1509;
t1276 = t1314 * t1313;
t1469 = qJD(4) * t1509;
t1367 = sin(qJ(4));
t1477 = t1367 * qJDD(2);
t1320 = t1469 + t1477;
t1541 = -t1276 + t1320;
t1551 = t1358 * t1541;
t1550 = t1361 * t1541;
t1366 = sin(qJ(6));
t1369 = cos(qJ(6));
t1264 = t1369 * t1313 + t1314 * t1366;
t1266 = -t1313 * t1366 + t1314 * t1369;
t1200 = t1266 * t1264;
t1316 = qJDD(6) + t1320;
t1543 = -t1200 + t1316;
t1549 = t1366 * t1543;
t1548 = t1369 * t1543;
t1547 = -t1360 * t1517 + t1363 * t1465;
t1520 = pkin(4) * t1370;
t1446 = qJ(5) * t1367 + t1520;
t1516 = qJ(5) * t1370;
t1521 = pkin(4) * t1367;
t1318 = (-t1516 + t1521) * qJD(2);
t1357 = qJDD(2) * pkin(2);
t1328 = g(1) * t1362 + g(2) * t1359;
t1248 = -t1328 * t1368 - t1371 * t1547;
t1405 = qJDD(3) + t1248;
t1221 = -t1372 * qJ(3) - t1357 + t1405;
t1374 = -qJDD(2) * pkin(8) + t1221;
t1480 = t1370 * t1297 - t1367 * t1374;
t1487 = t1367 * qJD(2);
t1533 = qJD(4) ^ 2;
t1152 = -pkin(4) * t1533 + qJDD(4) * qJ(5) - t1318 * t1487 - t1480;
t1347 = t1370 * qJDD(2);
t1470 = qJD(4) * t1487;
t1321 = t1347 - t1470;
t1364 = t1372 * pkin(8);
t1249 = -t1371 * t1328 + t1368 * t1547;
t1508 = qJDD(2) * qJ(3);
t1373 = -t1372 * pkin(2) + t1249 + t1508;
t1531 = 2 * qJD(3);
t1156 = t1320 * pkin(4) - t1321 * qJ(5) - t1364 + (qJD(4) * t1446 + t1531) * qJD(2) + t1373;
t1063 = 0.2e1 * qJD(5) * t1314 + t1358 * t1152 - t1361 * t1156;
t1064 = -0.2e1 * qJD(5) * t1313 + t1361 * t1152 + t1358 * t1156;
t991 = -t1063 * t1361 + t1064 * t1358;
t1546 = (pkin(3) + t1446) * t991;
t1545 = t1359 * t1517;
t1544 = t1362 * t1517;
t992 = t1358 * t1063 + t1361 * t1064;
t1456 = t1297 * t1367 + t1370 * t1374;
t1457 = t1367 * t1480 - t1370 * t1456;
t1295 = qJDD(4) * t1358 + t1321 * t1361;
t1411 = qJDD(4) * t1361 - t1321 * t1358;
t1170 = -t1264 * qJD(6) + t1369 * t1295 + t1366 * t1411;
t1341 = qJD(6) + t1487;
t1237 = t1341 * t1264;
t1542 = -t1237 + t1170;
t1301 = t1313 * t1487;
t1244 = t1295 + t1301;
t1302 = t1314 * t1487;
t1241 = t1411 + t1302;
t1165 = t1241 * t1358 - t1244 * t1361;
t970 = -qJ(5) * t1165 - t991;
t1540 = -t1165 * (pkin(3) + t1520) + t1367 * t970;
t1455 = t1366 * t1295 - t1369 * t1411;
t1111 = (qJD(6) - t1341) * t1266 + t1455;
t1539 = -t1362 * t1328 - t1359 * t1465;
t1441 = pkin(7) * t1325 - t1482;
t1538 = pkin(1) * t1307 + t1360 * t1441;
t1442 = pkin(7) * t1324 + t1484;
t1537 = pkin(1) * t1306 + t1360 * t1442;
t1536 = -t1359 * t1328 + t1362 * t1465;
t1535 = -pkin(1) * t1305 + t1363 * t1441;
t1534 = -pkin(1) * t1304 + t1363 * t1442;
t1254 = t1264 ^ 2;
t1255 = t1266 ^ 2;
t1532 = t1313 ^ 2;
t1312 = t1314 ^ 2;
t1339 = t1341 ^ 2;
t1530 = -pkin(8) - pkin(2);
t1034 = pkin(5) * t1541 - pkin(9) * t1244 - t1063;
t1296 = pkin(5) * t1487 - pkin(9) * t1314;
t1040 = -pkin(5) * t1532 + pkin(9) * t1411 - t1296 * t1487 + t1064;
t964 = -t1369 * t1034 + t1040 * t1366;
t965 = t1034 * t1366 + t1040 * t1369;
t922 = t1366 * t965 - t1369 * t964;
t1529 = pkin(5) * t922;
t1524 = pkin(3) * t1457;
t1476 = qJD(2) * t1531;
t1219 = t1373 + t1476;
t1217 = -t1364 + t1219;
t1523 = pkin(3) * t1217;
t1354 = t1367 ^ 2;
t1355 = t1370 ^ 2;
t1479 = t1354 + t1355;
t1323 = t1479 * qJDD(2);
t1522 = pkin(3) * t1323;
t1115 = t1237 + t1170;
t1050 = -t1111 * t1366 - t1115 * t1369;
t1519 = pkin(5) * t1050;
t1172 = t1248 * t1368 + t1249 * t1371;
t1518 = pkin(7) * t1172;
t1515 = t1358 * t922;
t1514 = t1361 * t922;
t1147 = -qJDD(4) * pkin(4) - qJ(5) * t1533 + t1318 * t1509 + qJDD(5) - t1456;
t1512 = -pkin(4) * t1147 + qJ(5) * t992;
t1511 = t1165 * t1521 + t1370 * t970;
t1510 = qJD(2) * qJD(4);
t1083 = -pkin(5) * t1411 - pkin(9) * t1532 + t1296 * t1314 + t1147;
t1507 = t1083 * t1366;
t1506 = t1083 * t1369;
t1174 = t1200 + t1316;
t1505 = t1174 * t1366;
t1504 = t1174 * t1369;
t1246 = t1276 + t1320;
t1503 = t1246 * t1358;
t1502 = t1246 * t1361;
t1501 = t1266 * t1341;
t1500 = t1320 * t1370;
t1499 = t1323 * t1368;
t1498 = t1323 * t1371;
t1340 = t1370 * t1372 * t1367;
t1329 = qJDD(4) + t1340;
t1497 = t1329 * t1367;
t1496 = t1329 * t1370;
t1330 = qJDD(4) - t1340;
t1495 = t1330 * t1367;
t1494 = t1330 * t1370;
t1493 = t1341 * t1366;
t1492 = t1341 * t1369;
t1491 = t1354 * t1372;
t1490 = t1355 * t1372;
t1139 = t1358 * t1147;
t1488 = t1360 * t1297;
t1140 = t1361 * t1147;
t1485 = t1367 * t1217;
t1214 = t1370 * t1217;
t1474 = t1367 * t1200;
t1473 = t1370 * t1200;
t1472 = t1367 * t1276;
t1471 = t1370 * t1276;
t1300 = -t1312 - t1491;
t1206 = -t1300 * t1358 - t1502;
t1243 = t1295 - t1301;
t1468 = -pkin(4) * t1243 + qJ(5) * t1206 + t1139;
t1269 = -t1491 - t1532;
t1183 = t1269 * t1361 - t1551;
t1242 = -t1302 + t1411;
t1467 = pkin(4) * t1242 + qJ(5) * t1183 - t1140;
t1466 = t1362 * t1478;
t923 = t1366 * t964 + t1369 * t965;
t898 = t1358 * t923 + t1514;
t919 = -pkin(5) * t1083 + pkin(9) * t923;
t877 = -pkin(9) * t1514 - qJ(5) * t898 - t1358 * t919;
t881 = -pkin(4) * t898 - t1529;
t1463 = -t1367 * t881 + t1370 * t877;
t1052 = -t1111 * t1369 + t1115 * t1366;
t1144 = -t1254 - t1255;
t914 = -pkin(5) * t1144 + pkin(9) * t1052 + t923;
t917 = -pkin(9) * t1050 - t922;
t971 = t1050 * t1361 + t1052 * t1358;
t883 = -qJ(5) * t971 - t1358 * t914 + t1361 * t917;
t949 = -pkin(4) * t971 - t1519;
t1462 = -t1367 * t949 + t1370 * t883;
t1190 = -t1339 - t1254;
t1086 = t1190 * t1366 + t1548;
t1019 = -pkin(9) * t1086 + t1507;
t1087 = t1190 * t1369 - t1549;
t1021 = t1086 * t1361 + t1087 * t1358;
t1110 = (qJD(6) + t1341) * t1266 + t1455;
t981 = -pkin(5) * t1110 + pkin(9) * t1087 - t1506;
t926 = -qJ(5) * t1021 + t1019 * t1361 - t1358 * t981;
t1406 = pkin(5) * t1086 - t964;
t934 = -pkin(4) * t1021 - t1406;
t1461 = -t1367 * t934 + t1370 * t926;
t1218 = -t1255 - t1339;
t1090 = t1218 * t1369 - t1505;
t1026 = -pkin(9) * t1090 + t1506;
t1091 = -t1218 * t1366 - t1504;
t1038 = t1090 * t1361 + t1091 * t1358;
t987 = -pkin(5) * t1542 + pkin(9) * t1091 + t1507;
t936 = -qJ(5) * t1038 + t1026 * t1361 - t1358 * t987;
t1381 = pkin(5) * t1090 - t965;
t937 = -pkin(4) * t1038 - t1381;
t1460 = -t1367 * t937 + t1370 * t936;
t1182 = t1269 * t1358 + t1550;
t1035 = -pkin(4) * t1182 + t1063;
t1073 = -qJ(5) * t1182 + t1139;
t1459 = -t1367 * t1035 + t1370 * t1073;
t1203 = t1300 * t1361 - t1503;
t1037 = -pkin(4) * t1203 + t1064;
t1084 = -qJ(5) * t1203 + t1140;
t1458 = -t1367 * t1037 + t1370 * t1084;
t973 = -t1050 * t1358 + t1052 * t1361;
t1454 = -pkin(4) * t1144 + qJ(5) * t973 + t1358 * t917 + t1361 * t914;
t1022 = -t1086 * t1358 + t1087 * t1361;
t1453 = -pkin(4) * t1110 + qJ(5) * t1022 + t1358 * t1019 + t1361 * t981;
t1039 = -t1090 * t1358 + t1091 * t1361;
t1452 = -pkin(4) * t1542 + qJ(5) * t1039 + t1358 * t1026 + t1361 * t987;
t966 = -t1147 * t1370 + t1367 * t992;
t1451 = -pkin(3) * t966 - t1512;
t1450 = t1368 * t1340;
t1449 = t1371 * t1340;
t1167 = t1241 * t1361 + t1244 * t1358;
t1235 = t1312 + t1532;
t1448 = pkin(4) * t1235 + qJ(5) * t1167 + t992;
t1338 = -t1490 - t1533;
t1284 = t1338 * t1370 - t1497;
t1447 = -pkin(3) * t1284 - t1480;
t1319 = 0.2e1 * t1469 + t1477;
t1444 = pkin(3) * t1319 + t1214;
t1322 = t1347 - 0.2e1 * t1470;
t1443 = pkin(3) * t1322 - t1485;
t899 = t1361 * t923 - t1515;
t891 = -t1083 * t1370 + t1367 * t899;
t1440 = t1368 * t898 - t1371 * t891;
t955 = -t1144 * t1370 + t1367 * t973;
t1439 = t1368 * t971 - t1371 * t955;
t1191 = t1255 - t1254;
t1051 = -t1110 * t1366 + t1369 * t1542;
t1053 = -t1110 * t1369 - t1366 * t1542;
t974 = -t1051 * t1358 + t1053 * t1361;
t961 = -t1191 * t1370 + t1367 * t974;
t972 = t1051 * t1361 + t1053 * t1358;
t1438 = t1368 * t972 - t1371 * t961;
t1437 = t1368 * t991 - t1371 * t966;
t982 = t1022 * t1367 - t1110 * t1370;
t1436 = t1021 * t1368 - t1371 * t982;
t995 = t1039 * t1367 - t1370 * t1542;
t1435 = t1038 * t1368 - t1371 * t995;
t1232 = -t1255 + t1339;
t1102 = t1232 * t1369 + t1549;
t1104 = -t1232 * t1366 + t1548;
t1045 = t1102 * t1361 + t1104 * t1358;
t1047 = -t1102 * t1358 + t1104 * t1361;
t997 = t1047 * t1367 - t1115 * t1370;
t1434 = t1045 * t1368 - t1371 * t997;
t1231 = t1254 - t1339;
t1103 = t1231 * t1366 + t1504;
t1105 = t1231 * t1369 - t1505;
t1046 = t1103 * t1361 + t1105 * t1358;
t1048 = -t1103 * t1358 + t1105 * t1361;
t998 = t1048 * t1367 + t1111 * t1370;
t1433 = t1046 * t1368 - t1371 * t998;
t1169 = -qJD(6) * t1266 - t1455;
t1096 = t1169 * t1369 + t1264 * t1493;
t1097 = -t1169 * t1366 + t1264 * t1492;
t1043 = -t1096 * t1358 + t1097 * t1361;
t1011 = t1043 * t1367 + t1473;
t1041 = t1096 * t1361 + t1097 * t1358;
t1432 = -t1011 * t1371 + t1041 * t1368;
t1098 = t1170 * t1366 + t1266 * t1492;
t1099 = t1170 * t1369 - t1266 * t1493;
t1044 = -t1098 * t1358 + t1099 * t1361;
t1012 = t1044 * t1367 - t1473;
t1042 = t1098 * t1361 + t1099 * t1358;
t1431 = -t1012 * t1371 + t1042 * t1368;
t1160 = (-t1264 * t1366 - t1266 * t1369) * t1341;
t1161 = (-t1264 * t1369 + t1266 * t1366) * t1341;
t1078 = -t1160 * t1358 + t1161 * t1361;
t1069 = t1078 * t1367 - t1316 * t1370;
t1077 = t1160 * t1361 + t1161 * t1358;
t1430 = -t1069 * t1371 + t1077 * t1368;
t1429 = t1217 * t1368 + t1371 * t1457;
t1092 = t1167 * t1367 + t1235 * t1370;
t1428 = -t1092 * t1371 + t1165 * t1368;
t1116 = t1183 * t1367 + t1242 * t1370;
t1427 = -t1116 * t1371 + t1182 * t1368;
t1168 = t1242 * t1361 - t1243 * t1358;
t1272 = t1312 - t1532;
t1118 = t1168 * t1367 - t1272 * t1370;
t1166 = t1242 * t1358 + t1243 * t1361;
t1426 = -t1118 * t1371 + t1166 * t1368;
t1299 = -t1312 + t1491;
t1205 = -t1299 * t1358 + t1550;
t1126 = t1205 * t1367 - t1244 * t1370;
t1202 = t1299 * t1361 + t1551;
t1425 = -t1126 * t1371 + t1202 * t1368;
t1127 = t1206 * t1367 - t1243 * t1370;
t1424 = -t1127 * t1371 + t1203 * t1368;
t1298 = -t1491 + t1532;
t1207 = t1298 * t1361 - t1503;
t1128 = t1207 * t1367 - t1241 * t1370;
t1204 = t1298 * t1358 + t1502;
t1423 = -t1128 * t1371 + t1204 * t1368;
t1223 = t1301 * t1361 - t1358 * t1411;
t1178 = t1223 * t1367 + t1471;
t1222 = -t1301 * t1358 - t1361 * t1411;
t1422 = -t1178 * t1371 - t1222 * t1368;
t1225 = t1295 * t1361 - t1302 * t1358;
t1179 = t1225 * t1367 - t1471;
t1224 = t1295 * t1358 + t1302 * t1361;
t1421 = -t1179 * t1371 + t1224 * t1368;
t1089 = -t1367 * t1456 - t1370 * t1480;
t1234 = (-t1313 * t1361 + t1314 * t1358) * t1487;
t1212 = t1234 * t1367 - t1500;
t1233 = (-t1313 * t1358 - t1314 * t1361) * t1487;
t1420 = -t1212 * t1371 + t1233 * t1368;
t1146 = t1219 * t1371 + t1221 * t1368;
t1419 = t1219 * t1368 - t1221 * t1371;
t1171 = t1248 * t1371 - t1249 * t1368;
t1270 = -t1319 * t1367 + t1322 * t1370;
t1327 = (-t1354 + t1355) * t1372;
t1418 = -t1270 * t1371 + t1327 * t1368;
t1336 = -t1491 - t1533;
t1282 = t1336 * t1367 + t1494;
t1417 = -t1282 * t1371 + t1319 * t1368;
t1416 = -t1284 * t1371 + t1322 * t1368;
t1326 = t1479 * t1372;
t1413 = -t1326 * t1368 + t1498;
t1317 = t1479 * t1510;
t1412 = qJDD(4) * t1368 + t1317 * t1371;
t1409 = -pkin(3) * t1116 - t1467;
t1408 = -pkin(3) * t1127 - t1468;
t1407 = -pkin(3) * t1282 - t1456;
t1404 = -pkin(3) * t955 - t1454;
t1403 = -pkin(4) * t1083 - pkin(9) * t1515 + qJ(5) * t899 + t1361 * t919;
t1402 = -pkin(3) * t982 - t1453;
t1401 = -pkin(3) * t995 - t1452;
t1335 = t1491 - t1533;
t1281 = t1335 * t1367 + t1496;
t1400 = -t1281 * t1371 - t1368 * t1477;
t1337 = -t1490 + t1533;
t1283 = t1337 * t1370 + t1495;
t1399 = -t1283 * t1371 + t1347 * t1368;
t1398 = -pkin(3) * t1092 - t1448;
t1397 = pkin(3) * t898 - t1367 * t877 - t1370 * t881;
t1396 = pkin(3) * t971 - t1367 * t883 - t1370 * t949;
t892 = t1083 * t1367 + t1370 * t899;
t859 = t1530 * t892 + t1397;
t1376 = -pkin(3) * t891 - t1403;
t865 = -qJ(3) * t892 - t1376;
t875 = t1368 * t891 + t1371 * t898;
t1395 = pkin(7) * t875 + t1368 * t865 + t1371 * t859;
t956 = t1144 * t1367 + t1370 * t973;
t874 = t1530 * t956 + t1396;
t878 = -qJ(3) * t956 - t1404;
t924 = t1368 * t955 + t1371 * t971;
t1394 = pkin(7) * t924 + t1368 * t878 + t1371 * t874;
t1390 = pkin(3) * t1021 - t1367 * t926 - t1370 * t934;
t983 = t1022 * t1370 + t1110 * t1367;
t880 = t1530 * t983 + t1390;
t900 = -qJ(3) * t983 - t1402;
t948 = t1021 * t1371 + t1368 * t982;
t1393 = pkin(7) * t948 + t1368 * t900 + t1371 * t880;
t1389 = pkin(3) * t1038 - t1367 * t936 - t1370 * t937;
t996 = t1039 * t1370 + t1367 * t1542;
t887 = t1530 * t996 + t1389;
t901 = -qJ(3) * t996 - t1401;
t952 = t1038 * t1371 + t1368 * t995;
t1392 = pkin(7) * t952 + t1368 * t901 + t1371 * t887;
t967 = t1147 * t1367 + t1370 * t992;
t896 = t1530 * t967 + t1546;
t910 = -qJ(3) * t967 - t1451;
t938 = t1368 * t966 + t1371 * t991;
t1391 = pkin(7) * t938 + t1368 * t910 + t1371 * t896;
t1055 = t1092 * t1368 + t1165 * t1371;
t1093 = t1167 * t1370 - t1235 * t1367;
t944 = t1093 * t1530 - t1540;
t945 = -qJ(3) * t1093 - t1398;
t1388 = pkin(7) * t1055 + t1368 * t945 + t1371 * t944;
t1066 = t1116 * t1368 + t1182 * t1371;
t1117 = t1183 * t1370 - t1242 * t1367;
t1383 = pkin(3) * t1182 - t1370 * t1035 - t1367 * t1073;
t947 = t1117 * t1530 + t1383;
t979 = -qJ(3) * t1117 - t1409;
t1387 = pkin(7) * t1066 + t1368 * t979 + t1371 * t947;
t1075 = t1127 * t1368 + t1203 * t1371;
t1130 = t1206 * t1370 + t1243 * t1367;
t1382 = pkin(3) * t1203 - t1370 * t1037 - t1367 * t1084;
t951 = t1130 * t1530 + t1382;
t989 = -qJ(3) * t1130 - t1408;
t1386 = pkin(7) * t1075 + t1368 * t989 + t1371 * t951;
t1292 = t1354 * t1510 - t1500;
t1385 = -t1292 * t1371 - t1450;
t1293 = t1321 * t1367 + t1355 * t1510;
t1384 = -t1293 * t1371 + t1450;
t1007 = t1089 * t1530 + t1523;
t1023 = -qJ(3) * t1089 - t1524;
t1060 = t1217 * t1371 - t1368 * t1457;
t1380 = pkin(7) * t1060 + t1007 * t1371 + t1023 * t1368;
t1286 = t1336 * t1370 - t1495;
t1106 = -qJ(3) * t1286 - t1407;
t1123 = t1286 * t1530 + t1444;
t1229 = t1282 * t1368 + t1319 * t1371;
t1379 = pkin(7) * t1229 + t1106 * t1368 + t1123 * t1371;
t1289 = -t1338 * t1367 - t1496;
t1107 = -qJ(3) * t1289 - t1447;
t1122 = t1289 * t1530 + t1443;
t1230 = t1284 * t1368 + t1322 * t1371;
t1378 = pkin(7) * t1230 + t1107 * t1368 + t1122 * t1371;
t1085 = pkin(3) * t1326 + t1089;
t1273 = -t1326 * t1371 - t1499;
t1377 = -pkin(3) * t1499 + pkin(7) * t1273 - t1085 * t1371;
t1375 = pkin(7) * t1146 + (pkin(2) * t1371 + qJ(3) * t1368) * t1297;
t1332 = t1359 * t1478;
t1294 = qJDD(4) * t1371 - t1317 * t1368;
t1288 = -t1337 * t1367 + t1494;
t1287 = (t1321 - t1470) * t1370;
t1285 = t1335 * t1370 - t1497;
t1280 = (t1320 + t1469) * t1367;
t1279 = t1363 * t1297;
t1275 = t1412 * t1363;
t1274 = t1412 * t1360;
t1271 = -t1319 * t1370 - t1322 * t1367;
t1268 = t1413 * t1363;
t1267 = t1413 * t1360;
t1253 = t1292 * t1368 - t1449;
t1252 = t1293 * t1368 + t1449;
t1251 = t1283 * t1368 + t1347 * t1371;
t1250 = t1281 * t1368 - t1371 * t1477;
t1227 = -0.2e1 * t1357 + t1405;
t1226 = t1249 + t1476 + 0.2e1 * t1508;
t1220 = t1270 * t1368 + t1327 * t1371;
t1213 = t1234 * t1370 + t1320 * t1367;
t1199 = -t1360 * t1280 + t1363 * t1385;
t1198 = -t1360 * t1287 + t1363 * t1384;
t1197 = t1363 * t1280 + t1360 * t1385;
t1196 = t1363 * t1287 + t1360 * t1384;
t1195 = -t1360 * t1288 + t1363 * t1399;
t1194 = -t1360 * t1285 + t1363 * t1400;
t1193 = t1363 * t1288 + t1360 * t1399;
t1192 = t1363 * t1285 + t1360 * t1400;
t1189 = -t1360 * t1289 + t1363 * t1416;
t1188 = -t1360 * t1286 + t1363 * t1417;
t1187 = t1363 * t1289 + t1360 * t1416;
t1186 = t1363 * t1286 + t1360 * t1417;
t1181 = t1225 * t1370 + t1472;
t1180 = t1223 * t1370 - t1472;
t1164 = -t1360 * t1271 + t1363 * t1418;
t1163 = t1363 * t1271 + t1360 * t1418;
t1158 = t1172 * t1363;
t1157 = t1172 * t1360;
t1153 = -pkin(2) * t1221 + qJ(3) * t1219;
t1151 = t1360 * t1248 - t1535;
t1150 = t1360 * t1249 - t1534;
t1149 = -t1363 * t1248 - t1538;
t1148 = -t1363 * t1249 - t1537;
t1138 = -t1360 * t1227 + t1535;
t1137 = t1363 * t1227 + t1538;
t1136 = t1146 * t1363;
t1135 = t1146 * t1360;
t1134 = -t1360 * t1226 + t1534;
t1133 = t1363 * t1226 + t1537;
t1132 = t1212 * t1368 + t1233 * t1371;
t1131 = t1207 * t1370 + t1241 * t1367;
t1129 = t1205 * t1370 + t1244 * t1367;
t1125 = -t1171 * t1363 + t1488;
t1124 = -t1171 * t1360 - t1279;
t1121 = qJ(3) * t1322 + t1284 * t1530 + t1214;
t1120 = qJ(3) * t1319 + t1282 * t1530 + t1485;
t1119 = t1168 * t1370 + t1272 * t1367;
t1101 = t1363 * t1419 + t1488;
t1100 = t1360 * t1419 - t1279;
t1095 = t1179 * t1368 + t1224 * t1371;
t1094 = t1178 * t1368 - t1222 * t1371;
t1080 = -t1360 * t1213 + t1363 * t1420;
t1079 = t1363 * t1213 + t1360 * t1420;
t1076 = t1128 * t1368 + t1204 * t1371;
t1074 = t1126 * t1368 + t1202 * t1371;
t1071 = -qJ(3) * t1326 - t1323 * t1530 + t1457;
t1070 = t1078 * t1370 + t1316 * t1367;
t1068 = pkin(1) * t1125 + t1360 * t1518;
t1067 = -pkin(1) * t1124 + t1363 * t1518;
t1065 = t1118 * t1368 + t1166 * t1371;
t1059 = -t1360 * t1181 + t1363 * t1421;
t1058 = -t1360 * t1180 + t1363 * t1422;
t1057 = t1363 * t1181 + t1360 * t1421;
t1056 = t1363 * t1180 + t1360 * t1422;
t1054 = (-t1124 * t1360 - t1125 * t1363) * pkin(7);
t1049 = -pkin(3) * t1498 + t1368 * t1085 + (-t1267 * t1360 - t1268 * t1363) * pkin(7);
t1032 = -t1360 * t1131 + t1363 * t1423;
t1031 = -t1360 * t1130 + t1363 * t1424;
t1030 = -t1360 * t1129 + t1363 * t1425;
t1029 = t1363 * t1131 + t1360 * t1423;
t1028 = t1363 * t1130 + t1360 * t1424;
t1027 = t1363 * t1129 + t1360 * t1425;
t1024 = (-pkin(2) * t1368 + qJ(3) * t1371) * t1297 + (-t1100 * t1360 - t1101 * t1363) * pkin(7);
t1018 = -t1360 * t1119 + t1363 * t1426;
t1017 = t1363 * t1119 + t1360 * t1426;
t1016 = -t1360 * t1117 + t1363 * t1427;
t1015 = t1363 * t1117 + t1360 * t1427;
t1014 = t1044 * t1370 + t1474;
t1013 = t1043 * t1370 - t1474;
t1009 = -t1360 * t1093 + t1363 * t1428;
t1008 = t1363 * t1093 + t1360 * t1428;
t1006 = qJ(3) * t1217 - t1457 * t1530;
t1005 = -t1360 * t1089 + t1363 * t1429;
t1004 = t1363 * t1089 + t1360 * t1429;
t1003 = t1069 * t1368 + t1077 * t1371;
t1002 = -pkin(1) * t1100 - t1360 * t1153 + t1363 * t1375;
t1001 = pkin(1) * t1101 + t1363 * t1153 + t1360 * t1375;
t1000 = t1048 * t1370 - t1111 * t1367;
t999 = t1047 * t1370 + t1115 * t1367;
t994 = t1371 * t1107 - t1368 * t1122 + (-t1187 * t1360 - t1189 * t1363) * pkin(7);
t993 = t1371 * t1106 - t1368 * t1123 + (-t1186 * t1360 - t1188 * t1363) * pkin(7);
t988 = t991 * t1521;
t985 = -pkin(1) * t1267 - t1360 * t1071 + t1363 * t1377;
t984 = pkin(1) * t1268 + t1363 * t1071 + t1360 * t1377;
t978 = -pkin(1) * t1187 - t1360 * t1121 + t1363 * t1378;
t977 = -pkin(1) * t1186 - t1360 * t1120 + t1363 * t1379;
t976 = pkin(1) * t1189 + t1363 * t1121 + t1360 * t1378;
t975 = pkin(1) * t1188 + t1363 * t1120 + t1360 * t1379;
t962 = t1191 * t1367 + t1370 * t974;
t960 = -t1360 * t1070 + t1363 * t1430;
t959 = t1363 * t1070 + t1360 * t1430;
t958 = t1012 * t1368 + t1042 * t1371;
t957 = t1011 * t1368 + t1041 * t1371;
t954 = t1046 * t1371 + t1368 * t998;
t953 = t1045 * t1371 + t1368 * t997;
t950 = qJ(3) * t1203 + t1127 * t1530 + t1458;
t946 = qJ(3) * t1182 + t1116 * t1530 + t1459;
t943 = qJ(3) * t1165 + t1092 * t1530 + t1511;
t942 = -t1360 * t1014 + t1363 * t1431;
t941 = -t1360 * t1013 + t1363 * t1432;
t940 = t1363 * t1014 + t1360 * t1431;
t939 = t1363 * t1013 + t1360 * t1432;
t933 = -t1360 * t1000 + t1363 * t1433;
t932 = -t1360 * t999 + t1363 * t1434;
t931 = t1363 * t1000 + t1360 * t1433;
t930 = t1360 * t1434 + t1363 * t999;
t929 = -t1360 * t996 + t1363 * t1435;
t928 = t1360 * t1435 + t1363 * t996;
t927 = t1368 * t961 + t1371 * t972;
t921 = -t1360 * t983 + t1363 * t1436;
t920 = t1360 * t1436 + t1363 * t983;
t915 = -t1368 * t1007 + t1371 * t1023 + (-t1004 * t1360 - t1005 * t1363) * pkin(7);
t912 = -t1360 * t967 + t1363 * t1437;
t911 = t1360 * t1437 + t1363 * t967;
t909 = -pkin(1) * t1004 - t1360 * t1006 + t1363 * t1380;
t908 = pkin(1) * t1005 + t1363 * t1006 + t1360 * t1380;
t907 = -t1360 * t962 + t1363 * t1438;
t906 = t1360 * t1438 + t1363 * t962;
t905 = -t1360 * t956 + t1363 * t1439;
t904 = t1360 * t1439 + t1363 * t956;
t903 = -t1368 * t951 + t1371 * t989 + (-t1028 * t1360 - t1031 * t1363) * pkin(7);
t902 = -t1368 * t947 + t1371 * t979 + (-t1015 * t1360 - t1016 * t1363) * pkin(7);
t895 = t988 + (qJ(3) - t1516) * t991 + t1530 * t966;
t894 = -pkin(1) * t1028 - t1360 * t950 + t1363 * t1386;
t893 = pkin(1) * t1031 + t1360 * t1386 + t1363 * t950;
t890 = -t1368 * t944 + t1371 * t945 + (-t1008 * t1360 - t1009 * t1363) * pkin(7);
t889 = -pkin(1) * t1015 - t1360 * t946 + t1363 * t1387;
t888 = pkin(1) * t1016 + t1360 * t1387 + t1363 * t946;
t886 = qJ(3) * t1038 + t1530 * t995 + t1460;
t885 = -pkin(1) * t1008 - t1360 * t943 + t1363 * t1388;
t884 = pkin(1) * t1009 + t1360 * t1388 + t1363 * t943;
t879 = qJ(3) * t1021 + t1530 * t982 + t1461;
t873 = qJ(3) * t971 + t1530 * t955 + t1462;
t872 = -t1368 * t896 + t1371 * t910 + (-t1360 * t911 - t1363 * t912) * pkin(7);
t871 = -t1360 * t892 + t1363 * t1440;
t870 = t1360 * t1440 + t1363 * t892;
t869 = -t1368 * t887 + t1371 * t901 + (-t1360 * t928 - t1363 * t929) * pkin(7);
t868 = -t1368 * t880 + t1371 * t900 + (-t1360 * t920 - t1363 * t921) * pkin(7);
t867 = -pkin(1) * t911 - t1360 * t895 + t1363 * t1391;
t866 = pkin(1) * t912 + t1360 * t1391 + t1363 * t895;
t864 = -pkin(1) * t928 - t1360 * t886 + t1363 * t1392;
t863 = pkin(1) * t929 + t1360 * t1392 + t1363 * t886;
t862 = -pkin(1) * t920 - t1360 * t879 + t1363 * t1393;
t861 = pkin(1) * t921 + t1360 * t1393 + t1363 * t879;
t860 = -t1368 * t874 + t1371 * t878 + (-t1360 * t904 - t1363 * t905) * pkin(7);
t858 = qJ(3) * t898 + t1530 * t891 + t1463;
t857 = -pkin(1) * t904 - t1360 * t873 + t1363 * t1394;
t856 = pkin(1) * t905 + t1360 * t1394 + t1363 * t873;
t855 = -t1368 * t859 + t1371 * t865 + (-t1360 * t870 - t1363 * t871) * pkin(7);
t854 = -pkin(1) * t870 - t1360 * t858 + t1363 * t1395;
t853 = pkin(1) * t871 + t1360 * t1395 + t1363 * t858;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1545, -t1544, -t1536, -qJ(1) * t1536, 0, 0, -t1261, 0, t1263, t1332, -t1151 * t1359 - t1558, -t1150 * t1359 - t1556, -t1158 * t1359 + t1171 * t1362, t1362 * t1054 - t1359 * t1067 - qJ(1) * (t1125 * t1362 + t1172 * t1359), t1332, t1261, -t1263, 0, 0, 0, -t1136 * t1359 - t1362 * t1419, -t1138 * t1359 + t1558, -t1134 * t1359 + t1556, t1362 * t1024 - t1359 * t1002 - qJ(1) * (t1101 * t1362 + t1146 * t1359), -t1198 * t1359 + t1252 * t1362, -t1164 * t1359 + t1220 * t1362, -t1195 * t1359 + t1251 * t1362, -t1199 * t1359 + t1253 * t1362, -t1194 * t1359 + t1250 * t1362, -t1275 * t1359 + t1294 * t1362, t1362 * t993 - t1359 * t977 - qJ(1) * (t1188 * t1362 + t1229 * t1359), t1362 * t994 - t1359 * t978 - qJ(1) * (t1189 * t1362 + t1230 * t1359), t1362 * t1049 - t1359 * t985 - qJ(1) * (t1268 * t1362 + t1273 * t1359), t1362 * t915 - t1359 * t909 - qJ(1) * (t1005 * t1362 + t1060 * t1359), -t1059 * t1359 + t1095 * t1362, -t1018 * t1359 + t1065 * t1362, -t1030 * t1359 + t1074 * t1362, -t1058 * t1359 + t1094 * t1362, -t1032 * t1359 + t1076 * t1362, -t1080 * t1359 + t1132 * t1362, t1362 * t902 - t1359 * t889 - qJ(1) * (t1016 * t1362 + t1066 * t1359), t1362 * t903 - t1359 * t894 - qJ(1) * (t1031 * t1362 + t1075 * t1359), t1362 * t890 - t1359 * t885 - qJ(1) * (t1009 * t1362 + t1055 * t1359), t1362 * t872 - t1359 * t867 - qJ(1) * (t1359 * t938 + t1362 * t912), -t1359 * t942 + t1362 * t958, -t1359 * t907 + t1362 * t927, -t1359 * t932 + t1362 * t953, -t1359 * t941 + t1362 * t957, -t1359 * t933 + t1362 * t954, t1003 * t1362 - t1359 * t960, t1362 * t868 - t1359 * t862 - qJ(1) * (t1359 * t948 + t1362 * t921), t1362 * t869 - t1359 * t864 - qJ(1) * (t1359 * t952 + t1362 * t929), t1362 * t860 - t1359 * t857 - qJ(1) * (t1359 * t924 + t1362 * t905), t1362 * t855 - t1359 * t854 - qJ(1) * (t1359 * t875 + t1362 * t871); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1544, -t1545, t1539, qJ(1) * t1539, 0, 0, t1256, 0, -t1258, -t1466, t1151 * t1362 - t1559, t1150 * t1362 - t1557, t1158 * t1362 + t1171 * t1359, t1359 * t1054 + t1362 * t1067 + qJ(1) * (-t1125 * t1359 + t1172 * t1362), -t1466, -t1256, t1258, 0, 0, 0, t1136 * t1362 - t1359 * t1419, t1138 * t1362 + t1559, t1134 * t1362 + t1557, t1359 * t1024 + t1362 * t1002 + qJ(1) * (-t1101 * t1359 + t1146 * t1362), t1198 * t1362 + t1252 * t1359, t1164 * t1362 + t1220 * t1359, t1195 * t1362 + t1251 * t1359, t1199 * t1362 + t1253 * t1359, t1194 * t1362 + t1250 * t1359, t1275 * t1362 + t1294 * t1359, t1359 * t993 + t1362 * t977 + qJ(1) * (-t1188 * t1359 + t1229 * t1362), t1359 * t994 + t1362 * t978 + qJ(1) * (-t1189 * t1359 + t1230 * t1362), t1359 * t1049 + t1362 * t985 + qJ(1) * (-t1268 * t1359 + t1273 * t1362), t1359 * t915 + t1362 * t909 + qJ(1) * (-t1005 * t1359 + t1060 * t1362), t1059 * t1362 + t1095 * t1359, t1018 * t1362 + t1065 * t1359, t1030 * t1362 + t1074 * t1359, t1058 * t1362 + t1094 * t1359, t1032 * t1362 + t1076 * t1359, t1080 * t1362 + t1132 * t1359, t1359 * t902 + t1362 * t889 + qJ(1) * (-t1016 * t1359 + t1066 * t1362), t1359 * t903 + t1362 * t894 + qJ(1) * (-t1031 * t1359 + t1075 * t1362), t1359 * t890 + t1362 * t885 + qJ(1) * (-t1009 * t1359 + t1055 * t1362), t1359 * t872 + t1362 * t867 + qJ(1) * (-t1359 * t912 + t1362 * t938), t1359 * t958 + t1362 * t942, t1359 * t927 + t1362 * t907, t1359 * t953 + t1362 * t932, t1359 * t957 + t1362 * t941, t1359 * t954 + t1362 * t933, t1003 * t1359 + t1362 * t960, t1359 * t868 + t1362 * t862 + qJ(1) * (-t1359 * t921 + t1362 * t948), t1359 * t869 + t1362 * t864 + qJ(1) * (-t1359 * t929 + t1362 * t952), t1359 * t860 + t1362 * t857 + qJ(1) * (-t1359 * t905 + t1362 * t924), t1359 * t855 + t1362 * t854 + qJ(1) * (-t1359 * t871 + t1362 * t875); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1328, 0, 0, 0, 0, t1304, 0, -t1305, t1345, t1149, t1148, t1157, t1068, t1345, -t1304, t1305, 0, 0, 0, t1135, t1137, t1133, t1001, t1196, t1163, t1193, t1197, t1192, t1274, t975, t976, t984, t908, t1057, t1017, t1027, t1056, t1029, t1079, t888, t893, t884, t866, t940, t906, t930, t939, t931, t959, t861, t863, t856, t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1517, -t1465, 0, 0, 0, t1324, 0, -t1325, 0, t1208, t1211, t1171, t1054, 0, -t1324, t1325, 0, 0, 0, -t1419, -t1208, -t1211, t1024, t1252, t1220, t1251, t1253, t1250, t1294, t993, t994, t1049, t915, t1095, t1065, t1074, t1094, t1076, t1132, t902, t903, t890, t872, t958, t927, t953, t957, t954, t1003, t868, t869, t860, t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1517, 0, -t1328, 0, 0, 0, t1306, 0, -t1307, -t1478, t1151, t1150, t1158, t1067, -t1478, -t1306, t1307, 0, 0, 0, t1136, t1138, t1134, t1002, t1198, t1164, t1195, t1199, t1194, t1275, t977, t978, t985, t909, t1059, t1018, t1030, t1058, t1032, t1080, t889, t894, t885, t867, t942, t907, t932, t941, t933, t960, t862, t864, t857, t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1328, 0, 0, 0, 0, t1304, 0, -t1305, t1345, t1149, t1148, t1157, t1068, t1345, -t1304, t1305, 0, 0, 0, t1135, t1137, t1133, t1001, t1196, t1163, t1193, t1197, t1192, t1274, t975, t976, t984, t908, t1057, t1017, t1027, t1056, t1029, t1079, t888, t893, t884, t866, t940, t906, t930, t939, t931, t959, t861, t863, t856, t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1372, 0, 0, -t1297, t1248, 0, 0, -qJDD(2), t1372, 0, 0, 0, t1221, 0, t1297, qJ(3) * t1297, t1340, t1327, t1347, -t1340, -t1477, qJDD(4), t1106, t1107, -t1522, t1023, t1224, t1166, t1202, -t1222, t1204, t1233, t979, t989, t945, t910, t1042, t972, t1045, t1041, t1046, t1077, t900, t901, t878, t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, 0, qJDD(2), 0, t1297, 0, t1249, 0, 0, -t1372, -qJDD(2), 0, 0, 0, t1219, -t1297, 0, pkin(2) * t1297, -t1293, -t1270, -t1283, -t1292, -t1281, t1317, t1123, t1122, -t1085, t1007, -t1179, -t1118, -t1126, -t1178, -t1128, -t1212, t947, t951, t944, t896, -t1012, -t961, -t997, -t1011, -t998, -t1069, t880, t887, t874, t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1248, -t1249, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1227, t1226, t1153, t1287, t1271, t1288, t1280, t1285, 0, t1120, t1121, t1071, t1006, t1181, t1119, t1129, t1180, t1131, t1213, t946, t950, t943, t895, t1014, t962, t999, t1013, t1000, t1070, t879, t886, t873, t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1221, t1219, 0, t1287, t1271, t1288, t1280, t1285, 0, -pkin(8) * t1282 + t1485, -pkin(8) * t1284 + t1214, pkin(8) * t1323 + t1457, pkin(8) * t1457, t1181, t1119, t1129, t1180, t1131, t1213, -pkin(8) * t1116 + t1459, -pkin(8) * t1127 + t1458, -pkin(8) * t1092 + t1511, -pkin(8) * t966 - t1516 * t991 + t988, t1014, t962, t999, t1013, t1000, t1070, -pkin(8) * t982 + t1461, -pkin(8) * t995 + t1460, -pkin(8) * t955 + t1462, -pkin(8) * t891 + t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1372, 0, 0, 0, -t1221, 0, -t1297, 0, -t1340, -t1327, -t1347, t1340, t1477, -qJDD(4), t1407, t1447, t1522, t1524, -t1224, -t1166, -t1202, t1222, -t1204, -t1233, t1409, t1408, t1398, t1451, -t1042, -t972, -t1045, -t1041, -t1046, -t1077, t1402, t1401, t1404, t1376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, qJDD(2), 0, 0, 0, -t1219, t1297, 0, 0, t1293, t1270, t1283, t1292, t1281, -t1317, pkin(8) * t1286 - t1444, pkin(8) * t1289 - t1443, t1085, pkin(8) * t1089 - t1523, t1179, t1118, t1126, t1178, t1128, t1212, pkin(8) * t1117 - t1383, pkin(8) * t1130 - t1382, pkin(8) * t1093 + t1540, pkin(8) * t967 - t1546, t1012, t961, t997, t1011, t998, t1069, pkin(8) * t983 - t1390, pkin(8) * t996 - t1389, pkin(8) * t956 - t1396, pkin(8) * t892 - t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1321, -t1319, t1330, t1470, t1335, -t1470, 0, t1217, -t1456, 0, t1225, t1168, t1205, t1223, t1207, t1234, t1073, t1084, t970, -qJ(5) * t991, t1044, t974, t1047, t1043, t1048, t1078, t926, t936, t883, t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1469, t1322, t1337, -t1320, t1329, -t1469, -t1217, 0, -t1480, 0, -t1276, -t1272, -t1244, t1276, -t1241, -t1320, t1035, t1037, -pkin(4) * t1165, -pkin(4) * t991, -t1200, -t1191, -t1115, t1200, t1111, -t1316, t934, t937, t949, t881; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1340, t1327, t1347, -t1340, -t1477, qJDD(4), t1456, t1480, 0, 0, t1224, t1166, t1202, -t1222, t1204, t1233, t1467, t1468, t1448, t1512, t1042, t972, t1045, t1041, t1046, t1077, t1453, t1452, t1454, t1403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1295, t1242, t1541, t1301, t1298, -t1301, 0, t1147, t1063, 0, t1099, t1053, t1104, t1097, t1105, t1161, t1019, t1026, t917, -pkin(9) * t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1302, t1243, t1299, t1411, t1246, -t1302, -t1147, 0, t1064, 0, t1098, t1051, t1102, t1096, t1103, t1160, t981, t987, t914, t919; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1276, t1272, t1244, -t1276, t1241, t1320, -t1063, -t1064, 0, 0, t1200, t1191, t1115, -t1200, -t1111, t1316, t1406, t1381, t1519, t1529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1170, -t1110, t1543, t1237, t1231, -t1237, 0, t1083, t964, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1501, t1542, t1232, t1169, t1174, -t1501, -t1083, 0, t965, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1200, t1191, t1115, -t1200, -t1111, t1316, -t964, -t965, 0, 0;];
m_new_reg  = t1;
