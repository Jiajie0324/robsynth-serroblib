% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:08:40
% EndTime: 2019-03-09 18:08:58
% DurationCPUTime: 7.85s
% Computational Cost: add. (25522->586), mult. (64673->771), div. (0->0), fcn. (49422->10), ass. (0->316)
t302 = cos(qJ(3));
t295 = sin(pkin(11));
t298 = sin(qJ(3));
t389 = t295 * t298;
t418 = cos(pkin(11));
t430 = pkin(2) * qJD(3);
t232 = (t302 * t418 - t389) * t430;
t297 = sin(qJ(5));
t303 = cos(qJ(2));
t437 = -pkin(8) - pkin(7);
t269 = t437 * t303;
t263 = qJD(1) * t269;
t242 = t298 * t263;
t299 = sin(qJ(2));
t268 = t437 * t299;
t261 = qJD(1) * t268;
t208 = t302 * t261 + t242;
t257 = t298 * t303 + t299 * t302;
t241 = qJD(1) * t257;
t235 = t241 * qJ(4);
t179 = -t235 + t208;
t246 = t302 * t263;
t207 = -t261 * t298 + t246;
t370 = qJD(1) * t299;
t352 = t298 * t370;
t380 = t302 * t303;
t240 = qJD(1) * t380 - t352;
t417 = qJ(4) * t240;
t320 = t207 - t417;
t125 = t179 * t418 + t295 * t320;
t195 = -t418 * t240 + t241 * t295;
t317 = t295 * t240 + t241 * t418;
t436 = pkin(3) * t241;
t129 = pkin(4) * t317 + pkin(9) * t195 + t436;
t289 = pkin(2) * t370;
t126 = t129 + t289;
t301 = cos(qJ(5));
t71 = -t125 * t297 + t301 * t126;
t464 = -t297 * t232 - t71;
t72 = t301 * t125 + t297 * t126;
t463 = -t301 * t232 + t72;
t367 = qJD(5) * t297;
t397 = t195 * t297;
t462 = t367 + t397;
t429 = qJD(2) * pkin(2);
t248 = t261 + t429;
t202 = t302 * t248 + t242;
t172 = t202 - t235;
t292 = qJD(2) + qJD(3);
t161 = pkin(3) * t292 + t172;
t203 = t248 * t298 - t246;
t173 = t203 + t417;
t345 = t418 * t173;
t106 = t295 * t161 + t345;
t104 = pkin(9) * t292 + t106;
t288 = -pkin(2) * t303 - pkin(1);
t267 = qJD(1) * t288;
t213 = -t240 * pkin(3) + qJD(4) + t267;
t114 = t195 * pkin(4) - pkin(9) * t317 + t213;
t366 = qJD(5) * t301;
t355 = qJD(2) * t437;
t337 = qJD(1) * t355;
t249 = t299 * t337;
t250 = t303 * t337;
t368 = qJD(3) * t302;
t369 = qJD(3) * t298;
t151 = t248 * t368 + t302 * t249 + t298 * t250 + t263 * t369;
t442 = t241 * t292;
t96 = -qJ(4) * t442 + t240 * qJD(4) + t151;
t341 = -t298 * t249 + t302 * t250;
t152 = -qJD(3) * t203 + t341;
t383 = t298 * t299;
t330 = t292 * t383;
t362 = qJD(1) * qJD(2);
t350 = t303 * t362;
t354 = t303 * t368;
t372 = -qJD(1) * t354 - t302 * t350;
t201 = qJD(1) * t330 + t372;
t97 = t201 * qJ(4) - t241 * qJD(4) + t152;
t59 = t295 * t97 + t418 * t96;
t146 = -t201 * t295 + t418 * t442;
t147 = -t201 * t418 - t295 * t442;
t181 = pkin(3) * t442 + qJD(2) * t289;
t75 = t146 * pkin(4) - t147 * pkin(9) + t181;
t15 = -t104 * t367 + t114 * t366 + t297 * t75 + t301 * t59;
t451 = qJD(5) + t195;
t63 = -t104 * t297 + t301 * t114;
t461 = -t451 * t63 + t15;
t64 = t104 * t301 + t114 * t297;
t16 = -qJD(5) * t64 - t297 * t59 + t301 * t75;
t460 = t451 * t64 + t16;
t287 = pkin(2) * t302 + pkin(3);
t344 = t418 * t298;
t234 = pkin(2) * t344 + t295 * t287;
t226 = pkin(9) + t234;
t434 = -pkin(10) - t226;
t347 = qJD(5) * t434;
t359 = pkin(10) * t397;
t459 = t297 * t347 - t359 - t463;
t396 = t195 * t301;
t334 = pkin(5) * t317 + pkin(10) * t396;
t458 = -t301 * t347 + t334 - t464;
t283 = pkin(3) * t295 + pkin(9);
t433 = -pkin(10) - t283;
t346 = qJD(5) * t433;
t164 = t295 * t173;
t112 = t172 * t418 - t164;
t70 = t301 * t112 + t297 * t129;
t457 = t297 * t346 - t359 - t70;
t69 = -t112 * t297 + t301 * t129;
t456 = t301 * t346 - t334 - t69;
t176 = -t301 * t292 + t297 * t317;
t178 = t292 * t297 + t301 * t317;
t296 = sin(qJ(6));
t300 = cos(qJ(6));
t119 = t300 * t176 + t178 * t296;
t324 = t176 * t296 - t300 * t178;
t414 = t119 * t324;
t455 = t195 * t317;
t387 = t296 * t301;
t256 = t297 * t300 + t387;
t361 = qJD(5) + qJD(6);
t210 = t361 * t256;
t454 = t256 * t195 + t210;
t364 = qJD(6) * t300;
t388 = t296 * t297;
t382 = t300 * t301;
t440 = t382 - t388;
t453 = t440 * t195 + t300 * t366 + t301 * t364 - t361 * t388;
t339 = t451 * t301;
t386 = t297 * t146;
t452 = -t339 * t451 - t386;
t450 = -t119 ^ 2 + t324 ^ 2;
t356 = t297 * t147 + t292 * t367 + t317 * t366;
t10 = -pkin(10) * t356 + t15;
t50 = -pkin(10) * t178 + t63;
t42 = pkin(5) * t451 + t50;
t51 = -pkin(10) * t176 + t64;
t424 = t300 * t51;
t21 = t296 * t42 + t424;
t94 = -t301 * t147 - t292 * t366 + t317 * t367;
t9 = t146 * pkin(5) + t94 * pkin(10) + t16;
t4 = -qJD(6) * t21 - t296 * t10 + t300 * t9;
t105 = t161 * t418 - t164;
t103 = -t292 * pkin(4) - t105;
t83 = t176 * pkin(5) + t103;
t449 = t83 * t324 + t4;
t186 = qJD(6) + t451;
t365 = qJD(6) * t296;
t39 = t176 * t364 + t178 * t365 + t296 * t356 + t300 * t94;
t448 = t119 * t186 - t39;
t3 = (qJD(6) * t42 + t10) * t300 + t296 * t9 - t51 * t365;
t447 = t83 * t119 - t3;
t309 = qJD(6) * t324 + t296 * t94 - t300 * t356;
t446 = -t186 * t324 + t309;
t290 = t299 * t429;
t445 = 0.2e1 * t290;
t444 = -0.2e1 * t362;
t216 = t302 * t268 + t269 * t298;
t191 = -qJ(4) * t257 + t216;
t217 = t298 * t268 - t302 * t269;
t255 = -t380 + t383;
t192 = -qJ(4) * t255 + t217;
t139 = t295 * t191 + t192 * t418;
t134 = t301 * t139;
t205 = t255 * t418 + t295 * t257;
t206 = -t295 * t255 + t257 * t418;
t221 = pkin(3) * t255 + t288;
t137 = pkin(4) * t205 - pkin(9) * t206 + t221;
t79 = t297 * t137 + t134;
t373 = -t179 * t295 + t418 * t320 + (t295 * t302 + t344) * t430;
t441 = t462 * pkin(5);
t439 = t324 * t454 - t39 * t440;
t438 = t256 * t146 + t186 * t453;
t435 = t301 * pkin(5);
t214 = t434 * t297;
t291 = t301 * pkin(10);
t215 = t226 * t301 + t291;
t157 = t214 * t296 + t215 * t300;
t432 = qJD(6) * t157 + t296 * t459 + t458 * t300;
t156 = t214 * t300 - t215 * t296;
t431 = -qJD(6) * t156 + t458 * t296 - t300 * t459;
t138 = -t418 * t191 + t192 * t295;
t58 = t295 * t96 - t418 * t97;
t428 = t138 * t58;
t14 = t15 * t301;
t427 = t16 * t297;
t425 = t296 * t51;
t423 = t94 * t297;
t251 = t433 * t297;
t252 = t283 * t301 + t291;
t199 = t251 * t300 - t252 * t296;
t422 = qJD(6) * t199 + t296 * t456 + t300 * t457;
t200 = t251 * t296 + t252 * t300;
t421 = -qJD(6) * t200 - t296 * t457 + t300 * t456;
t420 = t441 + t373;
t90 = t297 * t356;
t419 = -t176 * t366 - t90;
t416 = t103 * t195;
t415 = t119 * t317;
t413 = t324 * t317;
t108 = t146 * t205;
t211 = -qJD(2) * t380 + t330 - t354;
t313 = t257 * qJD(3);
t212 = qJD(2) * t257 + t313;
t155 = -t211 * t418 - t295 * t212;
t412 = t155 * t301;
t411 = t176 * t317;
t410 = t176 * t195;
t409 = t176 * t297;
t408 = t178 * t176;
t407 = t178 * t317;
t406 = t178 * t297;
t405 = t178 * t301;
t404 = t186 * t317;
t403 = t451 * t317;
t402 = t317 ^ 2;
t401 = t317 * t292;
t399 = t195 ^ 2;
t398 = t195 * t292;
t394 = t206 * t297;
t393 = t206 * t301;
t392 = t241 * t240;
t390 = t267 * t241;
t385 = t297 * t155;
t141 = t301 * t146;
t305 = qJD(1) ^ 2;
t379 = t303 * t305;
t304 = qJD(2) ^ 2;
t378 = t304 * t299;
t377 = t304 * t303;
t376 = t125 - t232;
t371 = t299 ^ 2 - t303 ^ 2;
t360 = -t63 * t396 - t64 * t397 + t14;
t357 = t299 * t379;
t353 = t206 * t367;
t198 = pkin(3) * t212 + t290;
t262 = t299 * t355;
t264 = t303 * t355;
t159 = t302 * t262 + t298 * t264 + t268 * t368 + t269 * t369;
t123 = -qJ(4) * t212 - qJD(4) * t255 + t159;
t160 = -qJD(3) * t217 - t298 * t262 + t302 * t264;
t307 = t211 * qJ(4) - t257 * qJD(4) + t160;
t68 = t123 * t418 + t295 * t307;
t154 = -t295 * t211 + t212 * t418;
t82 = pkin(4) * t154 - pkin(9) * t155 + t198;
t348 = -t297 * t68 + t301 * t82;
t342 = pkin(1) * t444;
t67 = t295 * t123 - t418 * t307;
t78 = t301 * t137 - t139 * t297;
t111 = t172 * t295 + t345;
t340 = t451 * t297;
t338 = t103 * t366 + t58 * t297 + t317 * t64;
t336 = t299 * t350;
t335 = -t111 + t441;
t333 = -t119 * t453 + t256 * t309;
t284 = -pkin(3) * t418 - pkin(4);
t332 = t356 * t301;
t331 = t146 * t440 - t186 * t454;
t62 = pkin(5) * t205 - pkin(10) * t393 + t78;
t65 = -pkin(10) * t394 + t79;
t31 = -t296 * t65 + t300 * t62;
t32 = t296 * t62 + t300 * t65;
t329 = -t64 * t297 - t63 * t301;
t328 = t297 * t63 - t301 * t64;
t233 = -pkin(2) * t389 + t287 * t418;
t327 = -t146 * t226 + t416;
t326 = -t146 * t283 + t416;
t325 = -t105 * t195 + t106 * t317;
t225 = -pkin(4) - t233;
t323 = -t451 * t462 + t141;
t322 = t103 * t367 - t58 * t301 - t317 * t63;
t321 = -t213 * t317 - t58;
t319 = t206 * t366 + t385;
t318 = -t353 + t412;
t22 = t137 * t366 - t139 * t367 + t297 * t82 + t301 * t68;
t20 = t300 * t42 - t425;
t37 = pkin(5) * t356 + t58;
t316 = -t20 * t317 - t37 * t440 + t454 * t83;
t315 = t21 * t317 + t37 * t256 + t453 * t83;
t314 = -t267 * t240 - t151;
t312 = -t20 * t453 - t21 * t454 - t4 * t256 + t3 * t440;
t310 = t195 * t213 - t59;
t308 = qJD(5) * t329 + t14 - t427;
t265 = t284 - t435;
t220 = t225 - t435;
t219 = t289 + t436;
t180 = -t240 ^ 2 + t241 ^ 2;
t162 = -t372 + (-t240 - t352) * t292;
t149 = t440 * t206;
t148 = t256 * t206;
t102 = t147 + t398;
t101 = -t146 + t401;
t100 = pkin(5) * t394 + t138;
t86 = -t399 + t402;
t53 = t176 * t340 - t332;
t52 = t178 * t339 - t423;
t47 = -t407 - t452;
t46 = t323 + t411;
t44 = t155 * t387 - t296 * t353 - t365 * t394 + (t361 * t393 + t385) * t300;
t43 = -t155 * t382 + t206 * t210 + t296 * t385;
t41 = pkin(5) * t319 + t67;
t34 = t331 + t415;
t33 = t413 + t438;
t26 = (-t94 - t410) * t301 - t451 * t406 + t419;
t25 = t300 * t50 - t425;
t24 = -t296 * t50 - t424;
t23 = -qJD(5) * t79 + t348;
t17 = -pkin(10) * t319 + t22;
t13 = t119 * t454 + t309 * t440;
t12 = -t39 * t256 - t324 * t453;
t11 = -pkin(10) * t412 + t154 * pkin(5) + (-t134 + (pkin(10) * t206 - t137) * t297) * qJD(5) + t348;
t7 = t333 + t439;
t6 = -qJD(6) * t32 + t300 * t11 - t296 * t17;
t5 = qJD(6) * t31 + t296 * t11 + t300 * t17;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t336, t371 * t444, t377, -0.2e1 * t336, -t378, 0, -pkin(7) * t377 + t299 * t342, pkin(7) * t378 + t303 * t342, 0, 0, -t201 * t257 - t211 * t241, t201 * t255 - t211 * t240 - t241 * t212 - t257 * t442, -t211 * t292, -t240 * t212 + t255 * t442, -t212 * t292, 0, -t240 * t290 + t160 * t292 + t267 * t212 + (t288 * t313 + (t299 * pkin(2) * t255 + t257 * t288) * qJD(2)) * qJD(1), -t159 * t292 - t288 * t201 - t267 * t211 + t241 * t445, -t151 * t255 - t152 * t257 + t159 * t240 - t160 * t241 + t216 * t201 + t202 * t211 - t203 * t212 - t217 * t442, t151 * t217 + t152 * t216 + t203 * t159 + t202 * t160 + t267 * t445, t147 * t206 + t155 * t317, -t146 * t206 - t147 * t205 - t154 * t317 - t155 * t195, t155 * t292, t154 * t195 + t108, -t154 * t292, 0, t146 * t221 + t154 * t213 + t181 * t205 + t195 * t198 - t292 * t67, t147 * t221 + t155 * t213 + t181 * t206 + t198 * t317 - t292 * t68, -t105 * t155 - t106 * t154 + t138 * t147 - t139 * t146 - t195 * t68 - t205 * t59 + t206 * t58 + t317 * t67, -t105 * t67 + t106 * t68 + t139 * t59 + t181 * t221 + t198 * t213 + t428, t178 * t318 - t393 * t94 (-t176 * t301 - t406) * t155 + (-t332 + t423 + (-t405 + t409) * qJD(5)) * t206, t141 * t206 + t178 * t154 - t94 * t205 + t318 * t451, t176 * t319 + t206 * t90, -t176 * t154 - t205 * t356 - t206 * t386 - t319 * t451, t154 * t451 + t108, t103 * t319 + t138 * t356 + t78 * t146 + t63 * t154 + t16 * t205 + t67 * t176 + t23 * t451 + t394 * t58, t103 * t318 - t138 * t94 - t79 * t146 - t15 * t205 - t64 * t154 + t67 * t178 - t22 * t451 + t393 * t58, -t22 * t176 - t79 * t356 - t23 * t178 + t78 * t94 + t329 * t155 + (qJD(5) * t328 - t15 * t297 - t16 * t301) * t206, t103 * t67 + t15 * t79 + t16 * t78 + t22 * t64 + t23 * t63 + t428, -t149 * t39 + t324 * t43, t119 * t43 + t148 * t39 + t149 * t309 + t324 * t44, t146 * t149 - t154 * t324 - t186 * t43 - t205 * t39, t119 * t44 - t148 * t309, -t119 * t154 - t146 * t148 - t186 * t44 + t205 * t309, t154 * t186 + t108, -t100 * t309 + t119 * t41 + t146 * t31 + t148 * t37 + t154 * t20 + t186 * t6 + t205 * t4 + t44 * t83, -t100 * t39 - t146 * t32 + t149 * t37 - t154 * t21 - t186 * t5 - t205 * t3 - t324 * t41 - t43 * t83, -t119 * t5 - t148 * t3 - t149 * t4 + t20 * t43 - t21 * t44 + t309 * t32 + t31 * t39 + t324 * t6, t100 * t37 + t20 * t6 + t21 * t5 + t3 * t32 + t31 * t4 + t41 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, t371 * t305, 0, t357, 0, 0, t305 * pkin(1) * t299, pkin(1) * t379, 0, 0, -t392, t180, t162, t392, 0, 0, t240 * t289 - t207 * t292 - t390 + (t246 + (-pkin(2) * t292 - t248) * t298) * qJD(3) + t341, t208 * t292 + (-t241 * t370 - t292 * t368) * pkin(2) + t314 (t203 + t207) * t241 + (t202 - t208) * t240 + (t302 * t201 + (t240 * t302 + t241 * t298) * qJD(3) - t298 * t442) * pkin(2), -t202 * t207 - t203 * t208 + (-t267 * t370 + t151 * t298 + t152 * t302 + (-t202 * t298 + t203 * t302) * qJD(3)) * pkin(2), t455, t86, t102, -t455, t101, 0, -t219 * t195 - t292 * t373 + t321, -t219 * t317 + t292 * t376 + t310, -t234 * t146 - t233 * t147 + t195 * t376 + t317 * t373 + t325, -t105 * t373 - t106 * t376 - t213 * t219 - t58 * t233 + t59 * t234, t52, t26, t47, t53, t46, -t403, t225 * t356 + t327 * t297 + t373 * t176 + (-t226 * t366 + t464) * t451 + t322, -t225 * t94 + t327 * t301 + t373 * t178 + (t226 * t367 + t463) * t451 + t338, t72 * t176 + t71 * t178 + (-t232 * t176 - t226 * t356 + (t178 * t226 - t63) * qJD(5)) * t301 + (t232 * t178 - t226 * t94 - t16 + (t176 * t226 - t64) * qJD(5)) * t297 + t360, t103 * t373 + t58 * t225 + t226 * t308 - t232 * t328 - t63 * t71 - t64 * t72, t12, t7, t33, t13, t34, -t404, t119 * t420 + t156 * t146 - t186 * t432 - t220 * t309 + t316, -t157 * t146 + t186 * t431 - t220 * t39 - t324 * t420 + t315, t119 * t431 + t156 * t39 + t157 * t309 - t324 * t432 + t312, t4 * t156 + t3 * t157 - t20 * t432 - t21 * t431 + t37 * t220 + t420 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, t180, t162, t392, 0, 0, t203 * t292 + t152 - t390, t202 * t292 + t314, 0, 0, t455, t86, t102, -t455, t101, 0, t111 * t292 - t195 * t436 + t321, t112 * t292 - t317 * t436 + t310, -t111 * t317 + t112 * t195 + (-t146 * t295 - t147 * t418) * pkin(3) + t325, t105 * t111 - t106 * t112 + (-t213 * t241 + t295 * t59 - t418 * t58) * pkin(3), t52, t26, t47, t53, t46, -t403, t284 * t356 - t111 * t176 + t326 * t297 + (-t283 * t366 - t69) * t451 + t322, -t111 * t178 - t284 * t94 + t326 * t301 + (t283 * t367 + t70) * t451 + t338, -t427 + t70 * t176 + t69 * t178 + (-t332 - t423) * t283 + ((t405 + t409) * t283 + t329) * qJD(5) + t360, -t103 * t111 + t283 * t308 + t58 * t284 - t63 * t69 - t64 * t70, t12, t7, t33, t13, t34, -t404, t119 * t335 + t199 * t146 + t186 * t421 - t265 * t309 + t316, -t200 * t146 - t186 * t422 - t265 * t39 - t324 * t335 + t315, -t119 * t422 + t199 * t39 + t200 * t309 + t324 * t421 + t312, t4 * t199 + t20 * t421 + t3 * t200 + t21 * t422 + t37 * t265 + t335 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146 + t401, t147 - t398, -t399 - t402, t105 * t317 + t106 * t195 + t181, 0, 0, 0, 0, 0, 0, t323 - t411, -t407 + t452 (t94 - t410) * t301 + t178 * t340 + t419, -t103 * t317 + t297 * t461 + t301 * t460, 0, 0, 0, 0, 0, 0, t331 - t415, t413 - t438, t333 - t439, -t20 * t454 + t21 * t453 + t3 * t256 - t317 * t83 + t4 * t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, -t176 ^ 2 + t178 ^ 2, t176 * t451 - t94, -t408, t178 * t451 - t356, t146, -t103 * t178 + t460, t103 * t176 - t461, 0, 0, -t414, t450, t448, t414, t446, t146, -t24 * t186 + (-t119 * t178 + t146 * t300 - t186 * t365) * pkin(5) + t449, t25 * t186 + (-t146 * t296 + t178 * t324 - t186 * t364) * pkin(5) + t447, -t21 * t324 + t25 * t119 - t20 * t119 - t24 * t324 + (t296 * t309 + t300 * t39 + (-t119 * t300 - t296 * t324) * qJD(6)) * pkin(5), -t20 * t24 - t21 * t25 + (-t178 * t83 + t296 * t3 + t300 * t4 + (-t20 * t296 + t21 * t300) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t450, t448, t414, t446, t146, t21 * t186 + t449, t20 * t186 + t447, 0, 0;];
tauc_reg  = t1;
