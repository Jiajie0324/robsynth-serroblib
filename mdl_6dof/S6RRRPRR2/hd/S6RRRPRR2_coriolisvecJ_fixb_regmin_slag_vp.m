% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR2_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR2_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:08:39
% EndTime: 2019-03-09 18:08:52
% DurationCPUTime: 5.00s
% Computational Cost: add. (10082->429), mult. (25907->584), div. (0->0), fcn. (20298->10), ass. (0->259)
t227 = sin(qJ(3));
t228 = sin(qJ(2));
t231 = cos(qJ(3));
t232 = cos(qJ(2));
t191 = t227 * t228 - t231 * t232;
t175 = t191 * qJD(1);
t304 = qJD(1) * t232;
t305 = qJD(1) * t228;
t177 = -t227 * t304 - t231 * t305;
t224 = sin(pkin(11));
t328 = cos(pkin(11));
t278 = -t328 * t175 + t224 * t177;
t350 = qJD(5) + qJD(6);
t370 = t278 - t350;
t348 = pkin(7) + pkin(8);
t202 = t348 * t232;
t196 = qJD(1) * t202;
t182 = t231 * t196;
t201 = t348 * t228;
t194 = qJD(1) * t201;
t274 = t227 * t194 - t182;
t319 = t175 * qJ(4);
t130 = t274 + t319;
t170 = t177 * qJ(4);
t178 = t227 * t196;
t307 = -t231 * t194 - t178;
t131 = t170 + t307;
t316 = t224 * t227;
t340 = pkin(2) * qJD(3);
t329 = -t224 * t130 - t131 * t328 + (t231 * t328 - t316) * t340;
t226 = sin(qJ(5));
t301 = qJD(5) * t226;
t322 = t278 * t226;
t369 = t301 - t322;
t230 = cos(qJ(5));
t218 = pkin(2) * t305;
t245 = -t224 * t175 - t177 * t328;
t347 = t177 * pkin(3);
t91 = pkin(4) * t245 - pkin(9) * t278 - t347;
t88 = t218 + t91;
t368 = -t226 * t329 - t230 * t88;
t221 = qJD(2) + qJD(3);
t127 = -t230 * t221 + t226 * t245;
t129 = t226 * t221 + t230 * t245;
t225 = sin(qJ(6));
t229 = cos(qJ(6));
t258 = t225 * t127 - t229 * t129;
t80 = t229 * t127 + t225 * t129;
t367 = t258 * t80;
t190 = t225 * t226 - t229 * t230;
t332 = t370 * t190;
t192 = t225 * t230 + t229 * t226;
t366 = t370 * t192;
t351 = qJD(5) - t278;
t365 = t127 * t351;
t273 = t351 * t230;
t296 = qJD(1) * qJD(2);
t289 = t232 * t296;
t302 = qJD(3) * t231;
t147 = -t221 * t227 * t305 + t231 * t289 + t302 * t304;
t193 = t227 * t232 + t231 * t228;
t352 = qJD(1) * t193;
t236 = t221 * t352;
t105 = t224 * t147 + t236 * t328;
t315 = t226 * t105;
t364 = -t351 * t273 - t315;
t363 = t258 ^ 2 - t80 ^ 2;
t339 = qJD(2) * pkin(2);
t184 = -t194 + t339;
t277 = t231 * t184 - t178;
t123 = t170 + t277;
t113 = t221 * pkin(3) + t123;
t257 = -t227 * t184 - t182;
t124 = -t257 - t319;
t281 = t328 * t124;
t67 = t224 * t113 + t281;
t65 = t221 * pkin(9) + t67;
t217 = -t232 * pkin(2) - pkin(1);
t200 = t217 * qJD(1);
t155 = t175 * pkin(3) + qJD(4) + t200;
t75 = -pkin(4) * t278 - pkin(9) * t245 + t155;
t38 = t226 * t75 + t230 * t65;
t28 = -t127 * pkin(10) + t38;
t299 = qJD(6) * t225;
t26 = t28 * t299;
t116 = t224 * t124;
t66 = t113 * t328 - t116;
t64 = -t221 * pkin(4) - t66;
t51 = t127 * pkin(5) + t64;
t362 = t51 * t80 + t26;
t135 = qJD(6) + t351;
t298 = qJD(6) * t229;
t106 = t147 * t328 - t224 * t236;
t300 = qJD(5) * t230;
t57 = t230 * t106 + t221 * t300 - t245 * t301;
t314 = t226 * t106;
t58 = qJD(5) * t129 + t314;
t16 = -t127 * t298 - t129 * t299 - t225 * t58 + t229 * t57;
t361 = t80 * t135 + t16;
t292 = qJD(2) * t348;
t270 = qJD(1) * t292;
t185 = t228 * t270;
t186 = t232 * t270;
t276 = t227 * t185 - t231 * t186;
t239 = qJD(3) * t257 + t276;
t237 = -t147 * qJ(4) + t177 * qJD(4) + t239;
t303 = qJD(3) * t227;
t275 = -t227 * t186 - t196 * t303;
t355 = (qJD(3) * t184 - t185) * t231;
t60 = -qJ(4) * t236 - t175 * qJD(4) + t275 + t355;
t33 = t224 * t237 + t328 * t60;
t235 = pkin(3) * t236 + qJD(2) * t218;
t45 = t105 * pkin(4) - t106 * pkin(9) + t235;
t44 = t230 * t45;
t241 = -qJD(5) * t38 - t226 * t33 + t44;
t3 = t105 * pkin(5) - t57 * pkin(10) + t241;
t251 = t226 * t45 + t230 * t33 + t75 * t300 - t301 * t65;
t4 = -t58 * pkin(10) + t251;
t293 = -t225 * t4 + t229 * t3;
t37 = -t226 * t65 + t230 * t75;
t27 = -t129 * pkin(10) + t37;
t19 = pkin(5) * t351 + t27;
t336 = t229 * t28;
t9 = t225 * t19 + t336;
t360 = -qJD(6) * t9 + t51 * t258 + t293;
t240 = qJD(6) * t258 - t225 * t57 - t229 * t58;
t359 = -t135 * t258 + t240;
t358 = -0.2e1 * t296;
t280 = t328 * t227;
t330 = t328 * t130 - t224 * t131 + (t224 * t231 + t280) * t340;
t32 = t224 * t60 - t328 * t237;
t357 = t32 * t230 - t64 * t301;
t150 = -t224 * t191 + t193 * t328;
t107 = t192 * t150;
t153 = t221 * t191;
t243 = t193 * qJD(3);
t154 = qJD(2) * t193 + t243;
t111 = -t153 * t328 - t224 * t154;
t312 = t230 * t111;
t249 = -t150 * t301 + t312;
t354 = t369 * pkin(5);
t353 = t226 * t88 - t230 * t329;
t349 = -t105 * t192 - t135 * t332;
t346 = t230 * pkin(5);
t220 = t230 * pkin(10);
t216 = t231 * pkin(2) + pkin(3);
t169 = pkin(2) * t280 + t224 * t216;
t163 = pkin(9) + t169;
t345 = -pkin(10) - t163;
t212 = t224 * pkin(3) + pkin(9);
t344 = -pkin(10) - t212;
t73 = t123 * t328 - t116;
t343 = t226 * t91 + t230 * t73;
t140 = -t193 * qJ(4) - t231 * t201 - t227 * t202;
t256 = t227 * t201 - t231 * t202;
t141 = -t191 * qJ(4) - t256;
t101 = t224 * t140 + t141 * t328;
t96 = t230 * t101;
t149 = t191 * t328 + t224 * t193;
t255 = t191 * pkin(3) + t217;
t99 = t149 * pkin(4) - t150 * pkin(9) + t255;
t341 = t226 * t99 + t96;
t338 = t245 * t80;
t337 = t245 * t258;
t334 = t57 * t226;
t333 = t64 * t278;
t331 = t354 + t330;
t326 = t129 * t245;
t325 = t135 * t245;
t324 = t351 * t245;
t323 = t245 * t127;
t321 = t150 * t226;
t320 = t150 * t230;
t318 = t177 * t175;
t317 = t200 * t177;
t313 = t226 * t111;
t102 = t230 * t105;
t234 = qJD(1) ^ 2;
t310 = t232 * t234;
t233 = qJD(2) ^ 2;
t309 = t233 * t228;
t308 = t233 * t232;
t306 = t228 ^ 2 - t232 ^ 2;
t295 = pkin(10) * t322;
t219 = t228 * t339;
t290 = t150 * t300;
t288 = -pkin(2) * t221 - t184;
t287 = t154 * pkin(3) + t219;
t286 = qJD(6) * t19 + t4;
t195 = t228 * t292;
t197 = t232 * t292;
t244 = -t231 * t195 - t227 * t197 - t201 * t302 - t202 * t303;
t84 = -t154 * qJ(4) - t191 * qJD(4) + t244;
t238 = qJD(3) * t256 + t227 * t195 - t231 * t197;
t85 = t153 * qJ(4) - t193 * qJD(4) + t238;
t41 = t224 * t84 - t328 * t85;
t284 = t226 * t73 - t230 * t91;
t283 = qJD(5) * t345;
t282 = qJD(5) * t344;
t279 = pkin(1) * t358;
t72 = t224 * t123 + t281;
t100 = -t328 * t140 + t224 * t141;
t271 = t32 * t226 + t245 * t38 + t64 * t300;
t269 = -t72 + t354;
t268 = pkin(5) * t245 - t220 * t278;
t267 = -t190 * t105 + t135 * t366;
t213 = -pkin(3) * t328 - pkin(4);
t156 = t345 * t226;
t266 = -qJD(6) * t156 - t226 * t283 - t295 + t353;
t157 = t230 * t163 + t220;
t265 = qJD(6) * t157 - t230 * t283 + t268 - t368;
t187 = t344 * t226;
t264 = -qJD(6) * t187 - t226 * t282 - t295 + t343;
t188 = t230 * t212 + t220;
t263 = qJD(6) * t188 - t230 * t282 + t268 - t284;
t262 = t245 * t67 + t278 * t66;
t168 = -pkin(2) * t316 + t216 * t328;
t261 = -t101 * t105 + t150 * t32;
t260 = -t163 * t105 - t333;
t259 = -t212 * t105 - t333;
t162 = -pkin(4) - t168;
t254 = -t351 * t369 + t102;
t253 = -t245 * t37 - t357;
t252 = t200 * t175 - t275;
t250 = t290 + t313;
t42 = t224 * t85 + t328 * t84;
t110 = -t224 * t153 + t154 * t328;
t50 = t110 * pkin(4) - t111 * pkin(9) + t287;
t248 = -t101 * t301 + t226 * t50 + t230 * t42 + t99 * t300;
t15 = t58 * pkin(5) + t32;
t8 = t229 * t19 - t225 * t28;
t247 = t15 * t190 - t245 * t8 - t366 * t51;
t246 = t15 * t192 + t245 * t9 + t332 * t51;
t198 = t213 - t346;
t159 = t162 - t346;
t132 = -t175 ^ 2 + t177 ^ 2;
t115 = -t177 * t221 - t236;
t114 = t175 * t221 + t147;
t108 = t190 * t150;
t94 = t230 * t99;
t69 = t105 * t149;
t63 = pkin(5) * t321 + t100;
t49 = t230 * t50;
t39 = -pkin(10) * t321 + t341;
t36 = t149 * pkin(5) - pkin(10) * t320 - t226 * t101 + t94;
t29 = t129 * t273 + t334;
t24 = -t326 - t364;
t23 = t254 + t323;
t21 = -t299 * t321 + (t320 * t350 + t313) * t229 + t249 * t225;
t20 = -t107 * t350 - t190 * t111;
t18 = pkin(5) * t250 + t41;
t12 = t267 + t338;
t11 = t337 - t349;
t10 = (t57 - t365) * t230 + (-t129 * t351 - t58) * t226;
t7 = -pkin(10) * t250 + t248;
t6 = t16 * t192 - t258 * t332;
t5 = -pkin(10) * t312 + t110 * pkin(5) - t226 * t42 + t49 + (-t96 + (pkin(10) * t150 - t99) * t226) * qJD(5);
t1 = -t16 * t190 + t192 * t240 - t258 * t366 - t332 * t80;
t2 = [0, 0, 0, 0.2e1 * t228 * t289, t306 * t358, t308, -t309, 0, -pkin(7) * t308 + t228 * t279, pkin(7) * t309 + t232 * t279, t147 * t193 + t153 * t177, -t147 * t191 + t153 * t175 + t177 * t154 - t193 * t236, -t153 * t221, -t154 * t221, 0, t175 * t219 + t200 * t154 + t238 * t221 + (t217 * t243 + (t228 * pkin(2) * t191 + t193 * t217) * qJD(2)) * qJD(1), t217 * t147 - t200 * t153 - t244 * t221 + (-t177 + t352) * t219, t100 * t106 - t110 * t67 - t111 * t66 - t149 * t33 + t245 * t41 + t278 * t42 + t261, t32 * t100 + t33 * t101 + t155 * t287 + t235 * t255 - t66 * t41 + t67 * t42, t129 * t249 + t320 * t57 (-t127 * t230 - t129 * t226) * t111 + (-t334 - t230 * t58 + (t127 * t226 - t129 * t230) * qJD(5)) * t150, t102 * t150 + t129 * t110 + t57 * t149 + t249 * t351, -t127 * t110 - t58 * t149 - t150 * t315 - t250 * t351, t110 * t351 + t69 (-t101 * t300 + t49) * t351 + t94 * t105 + (-t65 * t300 + t44) * t149 + t37 * t110 + t41 * t127 + t100 * t58 + t64 * t290 + ((-qJD(5) * t99 - t42) * t351 + (-qJD(5) * t75 - t33) * t149 + t64 * t111 + t261) * t226, t100 * t57 - t341 * t105 - t38 * t110 + t41 * t129 - t251 * t149 + t150 * t357 - t248 * t351 + t64 * t312, -t108 * t16 - t20 * t258, -t107 * t16 - t108 * t240 - t20 * t80 + t21 * t258, -t105 * t108 - t110 * t258 + t135 * t20 + t149 * t16, -t105 * t107 - t110 * t80 - t135 * t21 + t149 * t240, t110 * t135 + t69 (-t225 * t7 + t229 * t5) * t135 + (-t225 * t39 + t229 * t36) * t105 + t293 * t149 + t8 * t110 + t18 * t80 - t63 * t240 + t15 * t107 + t51 * t21 + ((-t225 * t36 - t229 * t39) * t135 - t9 * t149) * qJD(6), -t15 * t108 - t9 * t110 + t26 * t149 + t63 * t16 - t18 * t258 + t51 * t20 + (-(-qJD(6) * t39 + t5) * t135 - t36 * t105 - t3 * t149) * t225 + (-(qJD(6) * t36 + t7) * t135 - t39 * t105 - t286 * t149) * t229; 0, 0, 0, -t228 * t310, t306 * t234, 0, 0, 0, t234 * pkin(1) * t228, pkin(1) * t310, -t318, t132, t114, t115, 0, -t175 * t218 + t317 - t274 * t221 + (t227 * t288 - t182) * qJD(3) + t276, t177 * t218 + t307 * t221 + (qJD(3) * t288 + t185) * t231 + t252, -t105 * t169 - t106 * t168 + t245 * t330 + t278 * t329 + t262, t33 * t169 - t32 * t168 - t155 * (t218 - t347) + t329 * t67 - t330 * t66, t29, t10, t24, t23, -t324, t162 * t58 + t260 * t226 + t330 * t127 + (-t163 * t300 + t368) * t351 + t253, t162 * t57 + t260 * t230 + t330 * t129 + (t163 * t301 + t353) * t351 + t271, t6, t1, t11, t12, -t325 (t229 * t156 - t225 * t157) * t105 - t159 * t240 + t331 * t80 + (t225 * t266 - t229 * t265) * t135 + t247 -(t225 * t156 + t229 * t157) * t105 + t159 * t16 - t331 * t258 + (t225 * t265 + t229 * t266) * t135 + t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t318, t132, t114, t115, 0, -t221 * t257 + t239 + t317, t221 * t277 + t252 - t355, -t73 * t278 - t72 * t245 + (-t105 * t224 - t106 * t328) * pkin(3) + t262, t66 * t72 - t67 * t73 + (t155 * t177 + t224 * t33 - t32 * t328) * pkin(3), t29, t10, t24, t23, -t324, -t72 * t127 + t213 * t58 + t259 * t226 + (-t212 * t300 + t284) * t351 + t253, -t72 * t129 + t213 * t57 + t259 * t230 + (t212 * t301 + t343) * t351 + t271, t6, t1, t11, t12, -t325 (t229 * t187 - t225 * t188) * t105 - t198 * t240 + t269 * t80 + (t225 * t264 - t229 * t263) * t135 + t247 -(t225 * t187 + t229 * t188) * t105 + t198 * t16 - t269 * t258 + (t225 * t263 + t229 * t264) * t135 + t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245 ^ 2 - t278 ^ 2, t245 * t66 - t278 * t67 + t235, 0, 0, 0, 0, 0, t254 - t323, -t326 + t364, 0, 0, 0, 0, 0, t267 - t338, t337 + t349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * t127, -t127 ^ 2 + t129 ^ 2, t57 + t365, -t314 + (-qJD(5) + t351) * t129, t105, -t64 * t129 + t351 * t38 + t241, t64 * t127 + t351 * t37 - t251, -t367, t363, t361, t359, t105 -(-t225 * t27 - t336) * t135 + (t229 * t105 - t129 * t80 - t135 * t299) * pkin(5) + t360 (-t28 * t135 - t3) * t225 + (t27 * t135 - t286) * t229 + (-t225 * t105 + t129 * t258 - t135 * t298) * pkin(5) + t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, t363, t361, t359, t105, t9 * t135 + t360, t8 * t135 - t225 * t3 - t229 * t286 + t362;];
tauc_reg  = t2;
