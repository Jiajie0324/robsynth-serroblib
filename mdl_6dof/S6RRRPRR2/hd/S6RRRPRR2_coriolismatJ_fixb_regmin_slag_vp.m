% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:08:44
% EndTime: 2019-03-09 18:09:16
% DurationCPUTime: 19.06s
% Computational Cost: add. (21907->649), mult. (43483->845), div. (0->0), fcn. (53099->10), ass. (0->566)
t632 = qJD(2) + qJD(3);
t487 = sin(qJ(3));
t488 = sin(qJ(2));
t491 = cos(qJ(3));
t492 = cos(qJ(2));
t460 = -t487 * t492 - t491 * t488;
t785 = cos(pkin(11));
t445 = t785 * t460;
t458 = t487 * t488 - t491 * t492;
t484 = sin(pkin(11));
t716 = t484 * t458;
t836 = -t445 - t716;
t822 = pkin(7) + pkin(8);
t467 = t822 * t488;
t468 = t822 * t492;
t363 = t487 * t467 - t491 * t468;
t519 = qJ(4) * t458 + t363;
t545 = -t491 * t467 - t487 * t468;
t835 = t460 * qJ(4) + t545;
t870 = t484 * t835 - t785 * t519;
t758 = t870 * t836;
t404 = -t785 * t458 + t460 * t484;
t869 = t484 * t519 + t835 * t785;
t880 = t404 * t869;
t874 = t758 - t880;
t887 = t874 + t880;
t894 = t887 - t758;
t895 = t894 * qJD(1);
t490 = cos(qJ(5));
t480 = -pkin(2) * t492 - pkin(1);
t429 = t458 * pkin(3) + t480;
t503 = -pkin(4) * t404 - pkin(9) * t836 + t429;
t486 = sin(qJ(5));
t877 = t870 * t486;
t127 = -t490 * t503 + t877;
t893 = -t127 * t836 + t486 * t887;
t820 = t404 / 0.2e1;
t489 = cos(qJ(6));
t700 = t489 * t490;
t485 = sin(qJ(6));
t711 = t485 * t486;
t456 = -t700 + t711;
t851 = t836 * t456;
t892 = -t851 / 0.2e1;
t701 = t489 * t486;
t710 = t485 * t490;
t461 = t701 + t710;
t855 = t461 * t836;
t881 = -t855 / 0.2e1;
t878 = t490 * t869;
t891 = -t878 / 0.2e1;
t707 = t486 * t404;
t875 = pkin(5) * t707 + t870;
t890 = t875 * t456;
t889 = t875 * t461;
t399 = t836 * pkin(5);
t853 = t490 * t404;
t879 = t486 * t869;
t888 = -pkin(10) * t853 + t399 - t879;
t808 = t486 / 0.2e1;
t886 = -t869 * t808 - t879 / 0.2e1;
t876 = t870 * t490;
t128 = t486 * t503 + t876;
t885 = -t128 * t836 + t490 * t874;
t854 = t486 * t836;
t166 = pkin(5) * t854 - t869;
t116 = -pkin(10) * t854 + t128;
t704 = t489 * t116;
t735 = t836 * t490;
t115 = -pkin(10) * t735 - t127;
t804 = t404 * pkin(5);
t93 = t115 - t804;
t60 = t485 * t93 + t704;
t857 = t456 * t404;
t884 = -t166 * t857 - t60 * t836 - t875 * t851;
t714 = t485 * t116;
t92 = t489 * t93;
t59 = -t92 + t714;
t856 = t461 * t404;
t883 = t166 * t856 - t59 * t836 + t875 * t855;
t806 = pkin(2) * t491;
t479 = pkin(3) + t806;
t579 = t785 * t487;
t442 = pkin(2) * t579 + t484 * t479;
t438 = pkin(9) + t442;
t801 = pkin(10) + t438;
t418 = t801 * t486;
t419 = t801 * t490;
t576 = t489 * t418 + t485 * t419;
t882 = -t576 / 0.2e1;
t474 = -pkin(3) * t785 - pkin(4);
t802 = t490 * pkin(5);
t464 = t474 - t802;
t473 = t484 * pkin(3) + pkin(9);
t800 = pkin(10) + t473;
t450 = t800 * t486;
t451 = t800 * t490;
t546 = -t489 * t450 - t485 * t451;
t866 = t464 * t881 + t546 * t820;
t398 = -t485 * t450 + t489 * t451;
t865 = t398 * t820 + t464 * t892;
t299 = -t485 * t418 + t489 * t419;
t472 = t484 * t487 * pkin(2);
t441 = t479 * t785 - t472;
t437 = -pkin(4) - t441;
t424 = t437 - t802;
t867 = t299 * t820 + t424 * t892;
t871 = -t853 / 0.2e1;
t381 = t853 / 0.2e1;
t868 = t851 * qJD(1);
t850 = qJD(1) * t404;
t567 = -qJD(5) + t850;
t631 = qJD(5) + qJD(6);
t627 = pkin(10) * t707;
t803 = t460 * pkin(3);
t255 = pkin(4) * t836 - pkin(9) * t404 - t803;
t482 = t488 * pkin(2);
t243 = t255 + t482;
t231 = t486 * t243;
t687 = t878 + t231;
t119 = -t627 + t687;
t713 = t485 * t119;
t594 = -t713 / 0.2e1;
t232 = t490 * t243;
t96 = t232 + t888;
t787 = t489 * t96;
t541 = t594 + t787 / 0.2e1;
t864 = t541 - t867;
t250 = t486 * t255;
t688 = t878 + t250;
t122 = -t627 + t688;
t712 = t485 * t122;
t593 = -t712 / 0.2e1;
t251 = t490 * t255;
t97 = t251 + t888;
t786 = t489 * t97;
t540 = t593 + t786 / 0.2e1;
t863 = t540 - t865;
t702 = t489 * t122;
t589 = -t702 / 0.2e1;
t788 = t485 * t97;
t538 = -t788 / 0.2e1 + t589;
t862 = t538 - t866;
t849 = t404 * t882 + t424 * t881;
t861 = t836 ^ 2;
t843 = 0.2e1 * t836;
t860 = -t404 / 0.2e1;
t859 = t836 / 0.2e1;
t858 = t404 * t836;
t400 = -t716 / 0.2e1 - t445 / 0.2e1;
t176 = t400 * qJD(5) - t836 * t850;
t703 = t489 * t119;
t590 = -t703 / 0.2e1;
t789 = t485 * t96;
t539 = -t789 / 0.2e1 + t590;
t848 = t539 - t849;
t847 = t632 * t545;
t846 = t631 * t299;
t845 = t631 * t398;
t844 = t631 * t546;
t842 = 0.2e1 * t486 * t735;
t841 = t404 * t631;
t840 = t456 * t631;
t834 = t474 + t437;
t447 = (t484 * t491 + t579) * pkin(2);
t448 = t785 * t806 - t472;
t812 = -t448 / 0.2e1;
t534 = -t404 * t812 + t447 * t859;
t737 = t404 * t437;
t740 = t836 * t473;
t741 = t836 * t438;
t829 = -t740 / 0.2e1 - t741 / 0.2e1 + t737 / 0.2e1 + t534;
t133 = qJD(6) * t400 + t176;
t828 = t632 * t363;
t101 = -t851 ^ 2 + t855 ^ 2;
t86 = t456 * t855 + t461 * t851;
t29 = qJD(1) * t101 + t632 * t86;
t125 = t461 * t881 + t851 * t456 / 0.2e1;
t46 = t125 * t632 + t855 * t868;
t483 = t490 ^ 2;
t825 = t486 ^ 2;
t274 = (t825 / 0.2e1 - t483 / 0.2e1) * t836;
t670 = qJD(1) * t490;
t613 = t486 * t670;
t827 = t274 * t632 + t613 * t861;
t360 = t456 ^ 2 - t461 ^ 2;
t71 = qJD(1) * t86 + t360 * t632;
t629 = -t483 + t825;
t296 = t613 * t843 + t629 * t632;
t826 = t631 * t576;
t824 = -t92 / 0.2e1;
t823 = -t93 / 0.2e1;
t817 = t424 / 0.2e1;
t816 = -t437 / 0.2e1;
t815 = t441 / 0.2e1;
t814 = -t442 / 0.2e1;
t813 = -t447 / 0.2e1;
t811 = t473 / 0.2e1;
t810 = -t474 / 0.2e1;
t809 = t484 / 0.2e1;
t807 = t490 / 0.2e1;
t805 = pkin(5) * t486;
t799 = t631 * t86;
t798 = pkin(2) * qJD(3);
t797 = pkin(3) * qJD(3);
t796 = pkin(5) * qJD(5);
t795 = pkin(5) * qJD(6);
t794 = qJD(2) * pkin(2);
t1 = -(-t713 + t787) * t404 + t883;
t793 = t1 * qJD(1);
t2 = (t703 + t789) * t404 + t884;
t792 = t2 * qJD(1);
t3 = -(-t712 + t786) * t404 + t883;
t791 = t3 * qJD(1);
t4 = (t702 + t788) * t404 + t884;
t790 = t4 * qJD(1);
t715 = t485 * t115;
t61 = -t704 - t715;
t628 = pkin(5) * t735;
t767 = t166 * t851;
t27 = -t404 * t61 + t628 * t855 - t767;
t784 = qJD(1) * t27;
t705 = t489 * t115;
t62 = t705 - t714;
t766 = t166 * t855;
t28 = t404 * t62 - t628 * t851 - t766;
t783 = qJD(1) * t28;
t35 = -t404 * t59 - t766;
t782 = qJD(1) * t35;
t36 = t404 * t60 - t767;
t781 = qJD(1) * t36;
t77 = -t127 * t404 + t854 * t869;
t780 = qJD(1) * t77;
t78 = t128 * t404 - t735 * t869;
t779 = qJD(1) * t78;
t79 = t851 * t856 + t855 * t857;
t778 = qJD(1) * t79;
t98 = t404 * t870 - t836 * t869;
t776 = qJD(1) * t98;
t621 = t804 / 0.2e1;
t561 = t621 + t115 / 0.2e1;
t10 = (t823 + t561) * t485;
t775 = t10 * qJD(1);
t12 = t489 * t561 + t824;
t774 = t12 * qJD(1);
t765 = t166 * t456;
t764 = t166 * t461;
t757 = t851 * t836;
t756 = t856 * t404;
t755 = t855 * t836;
t754 = t857 * t404;
t753 = t576 * t836;
t751 = t299 * t836;
t38 = -t232 * t404 + t893;
t749 = t38 * qJD(1);
t39 = t404 * t687 + t885;
t748 = t39 * qJD(1);
t747 = t546 * t836;
t745 = t398 * t836;
t40 = -t251 * t404 + t893;
t743 = t40 * qJD(1);
t739 = t836 * t484;
t738 = t404 ^ 2;
t41 = t404 * t688 + t885;
t734 = t41 * qJD(1);
t732 = t424 * t856;
t730 = t424 * t857;
t729 = t424 * t456;
t728 = t424 * t461;
t727 = t441 * t404;
t726 = t442 * t836;
t722 = t464 * t856;
t720 = t464 * t857;
t719 = t464 * t456;
t718 = t464 * t461;
t706 = t486 * t448;
t493 = (t437 / 0.2e1 + t810) * t404 + (-t438 / 0.2e1 + t811) * t836 + t534;
t55 = t486 * t493;
t695 = t55 * qJD(1);
t63 = t429 * (t482 - t803);
t694 = t63 * qJD(1);
t64 = t429 * t803;
t693 = t64 * qJD(1);
t497 = -t727 / 0.2e1 - t726 / 0.2e1 + t534;
t580 = t785 * t404;
t508 = (-t739 / 0.2e1 - t580 / 0.2e1) * pkin(3);
t84 = t508 - t497;
t692 = t84 * qJD(1);
t691 = t631 * t125;
t532 = -t710 / 0.2e1 - t701 / 0.2e1;
t513 = t532 * t404;
t158 = -t856 / 0.2e1 + t513;
t690 = t631 * t158;
t597 = t856 / 0.2e1;
t163 = t597 + t513;
t689 = t631 * t163;
t591 = t707 / 0.2e1;
t686 = t485 * t591 + t489 * t871;
t592 = -t707 / 0.2e1;
t685 = t489 * t381 + t485 * t592;
t660 = qJD(3) * t490;
t665 = qJD(2) * t490;
t684 = (t660 + t665) * t836;
t683 = -t729 / 0.2e1 - t719 / 0.2e1;
t588 = t490 * t812;
t682 = t485 * t706 / 0.2e1 + t489 * t588;
t110 = t755 + t756;
t680 = qJD(1) * t110;
t112 = -t754 - t757;
t679 = qJD(1) * t112;
t549 = -t738 + t861;
t135 = t549 * t486;
t678 = qJD(1) * t135;
t146 = t738 + t861;
t136 = t146 * t486;
t677 = qJD(1) * t136;
t138 = t146 * t490;
t676 = qJD(1) * t138;
t672 = qJD(1) * t836;
t671 = qJD(1) * t480;
t669 = qJD(1) * t492;
t668 = qJD(2) * t456;
t667 = qJD(2) * t461;
t666 = qJD(2) * t486;
t664 = qJD(3) * t447;
t663 = qJD(3) * t464;
t662 = qJD(3) * t480;
t661 = qJD(3) * t486;
t659 = qJD(5) * t486;
t658 = qJD(5) * t490;
t657 = qJD(6) * t424;
t656 = qJD(6) * t464;
t109 = -t755 + t756;
t655 = t109 * qJD(1);
t111 = t754 - t757;
t654 = t111 * qJD(1);
t653 = t125 * qJD(1);
t137 = t549 * t490;
t652 = t137 * qJD(1);
t651 = t146 * qJD(1);
t148 = t158 * qJD(1);
t598 = -t857 / 0.2e1;
t159 = t598 + t685;
t149 = t159 * qJD(1);
t599 = t857 / 0.2e1;
t160 = t599 + t686;
t151 = t160 * qJD(1);
t536 = t404 * t814 + t815 * t836;
t446 = -t803 / 0.2e1;
t630 = t446 + t482 / 0.2e1;
t167 = t536 + t630;
t650 = t167 * qJD(1);
t648 = t855 * qJD(1);
t619 = -t785 / 0.2e1;
t520 = t404 * t809 + t619 * t836;
t229 = (t460 / 0.2e1 + t520) * pkin(3);
t647 = t229 * qJD(1);
t646 = t274 * qJD(1);
t645 = t854 * qJD(1);
t583 = 0.2e1 * t860;
t277 = t583 * t486;
t272 = t277 * qJD(1);
t280 = t583 * t490;
t273 = t280 * qJD(1);
t281 = 0.2e1 * t381;
t644 = t281 * qJD(1);
t285 = t629 * t861;
t643 = t285 * qJD(1);
t361 = t458 ^ 2 - t460 ^ 2;
t642 = t361 * qJD(1);
t395 = t458 * t482 - t460 * t480;
t639 = t395 * qJD(1);
t396 = -t458 * t480 - t460 * t482;
t638 = t396 * qJD(1);
t637 = t400 * qJD(1);
t470 = -t488 ^ 2 + t492 ^ 2;
t635 = t470 * qJD(1);
t634 = t488 * qJD(2);
t633 = t492 * qJD(2);
t626 = t461 * t805;
t625 = pkin(1) * t488 * qJD(1);
t624 = pkin(1) * t669;
t623 = -t805 / 0.2e1;
t622 = t399 / 0.2e1;
t143 = -t765 / 0.2e1;
t568 = t628 / 0.2e1;
t618 = t461 * t568 + t623 * t851 + t143;
t144 = t764 / 0.2e1;
t617 = t456 * t568 - t623 * t855 + t144;
t615 = t404 * t672;
t614 = t483 * t672;
t612 = qJD(4) * t735;
t611 = qJD(5) * t858;
t610 = t458 * t671;
t609 = t460 * t671;
t471 = t486 * t658;
t608 = t488 * t669;
t607 = t765 / 0.2e1;
t606 = -t764 / 0.2e1;
t604 = t869 * t807;
t602 = -t735 / 0.2e1;
t586 = -t231 / 0.2e1 + t891;
t585 = t891 - t250 / 0.2e1;
t582 = t817 - t464 / 0.2e1;
t581 = t464 / 0.2e1 + t817;
t578 = pkin(2) * t632;
t577 = pkin(5) * t631;
t574 = t404 * t632;
t573 = t632 * t456;
t572 = t632 * t490;
t411 = t632 * t460;
t571 = t632 * t461;
t570 = t632 * t486;
t569 = t631 * t461;
t564 = t622 + t96 / 0.2e1;
t563 = t622 + t97 / 0.2e1;
t560 = t812 + t810 + t816;
t559 = t486 * t572;
t558 = t490 * t570;
t555 = qJD(6) - t567;
t443 = t456 * t805;
t311 = t443 + t728;
t494 = (t456 * t602 + t489 * t859 - t808 * t855) * pkin(5) + t606;
t7 = t494 + t864;
t553 = -t7 * qJD(1) + t311 * qJD(2);
t312 = t626 - t729;
t495 = (-t485 * t836 / 0.2e1 + t851 * t808 + t461 * t602) * pkin(5) + t607;
t6 = t495 + t848;
t552 = -t6 * qJD(1) + t312 * qJD(2);
t548 = t737 - t741;
t547 = t404 * t474 - t740;
t293 = -t441 * t447 + t442 * t448;
t498 = (t812 + t815) * t870 + (-t813 + t814) * t869;
t509 = (t619 * t870 + t809 * t869) * pkin(3);
t42 = t509 + t498;
t544 = t42 * qJD(1) - t293 * qJD(2);
t543 = t626 + t683;
t542 = t836 * t567;
t535 = t438 * t860 + t816 * t836;
t533 = -t404 * t811 + t810 * t836;
t19 = t606 + t864;
t531 = qJD(1) * t19 - t424 * t667;
t20 = t607 + t848;
t530 = qJD(1) * t20 + t424 * t668;
t499 = t448 * t597 - t813 * t855;
t24 = (t882 - t546 / 0.2e1) * t836 + t582 * t856 + t499;
t529 = -qJD(1) * t24 - t447 * t668;
t500 = t448 * t598 + t813 * t851;
t26 = (-t299 / 0.2e1 + t398 / 0.2e1) * t836 - t582 * t857 + t500;
t528 = -qJD(1) * t26 - t447 * t667;
t515 = t535 * t490;
t67 = -t232 / 0.2e1 - t515;
t527 = -qJD(1) * t67 - t437 * t666;
t502 = t486 * t535 - t604;
t65 = t502 - t586;
t526 = -qJD(1) * t65 - t437 * t665;
t58 = t490 * t493;
t525 = -qJD(1) * t58 - t447 * t666;
t521 = t559 * t843;
t514 = t533 * t490;
t512 = t532 * t448;
t14 = t495 + t862;
t171 = (t700 / 0.2e1 - t711 / 0.2e1) * t448 + t543;
t350 = t626 - t719;
t511 = t14 * qJD(1) - t171 * qJD(2) - t350 * qJD(3);
t15 = t494 + t863;
t180 = -t461 * t581 + t512;
t169 = -t443 + t180;
t349 = t443 + t718;
t510 = t15 * qJD(1) + t169 * qJD(2) - t349 * qJD(3);
t31 = t606 + t863;
t507 = qJD(1) * t31 + qJD(2) * t180 - t461 * t663;
t181 = t456 * t581 + t682;
t32 = t607 + t862;
t506 = qJD(1) * t32 + qJD(2) * t181 + t456 * t663;
t321 = t560 * t486;
t75 = -t251 / 0.2e1 - t514;
t505 = -qJD(1) * t75 + qJD(2) * t321 - t474 * t661;
t322 = t560 * t490;
t501 = t486 * t533 - t604;
t73 = t501 - t585;
t504 = -qJD(1) * t73 + qJD(2) * t322 - t474 * t660;
t183 = t718 / 0.2e1 + t728 / 0.2e1 + t512;
t466 = t629 * qJD(5);
t432 = t447 * t661;
t415 = t460 * t458 * qJD(1);
t413 = t461 * t664;
t412 = t456 * t664;
t410 = t632 * t458;
t384 = t836 * t670;
t324 = t807 * t834 + t588;
t323 = -t706 / 0.2e1 + t834 * t808;
t308 = t456 * t569;
t283 = t632 * t400;
t282 = (t820 + t860) * t490;
t279 = t871 + t381;
t278 = t486 * t820 + t592;
t271 = t278 * qJD(5);
t270 = t277 * qJD(5);
t267 = t854 * qJD(4);
t265 = t274 * qJD(5);
t257 = t273 + t658;
t256 = -t272 - t659;
t252 = t631 * t360;
t230 = pkin(3) * t520 + t446;
t228 = t558 - t646;
t227 = -t559 + t646;
t193 = t855 * qJD(4);
t189 = t851 * qJD(4);
t182 = t682 + t683;
t173 = t567 * t842;
t172 = t543 + t682;
t170 = t443 + t183;
t168 = -t536 + t630;
t162 = t598 + t686;
t161 = t599 + t685;
t157 = t163 * qJD(4);
t152 = t162 * qJD(4);
t150 = t160 * qJD(4);
t147 = t158 * qJD(4);
t145 = t632 * t858;
t132 = -t404 * t614 - t265;
t131 = -t569 - t148;
t130 = -t151 + t840;
t129 = -t149 - t840;
t121 = qJD(5) * t280 - t652;
t120 = -t270 + t678;
t102 = -t265 + (t558 + t614) * t404;
t100 = t456 * t571 - t653;
t99 = -t461 * t573 + t653;
t87 = (-qJD(5) - t850) * t842 - t629 * t574;
t85 = t508 + t497;
t81 = t279 * qJD(5) + t570 * t836 + t652;
t80 = t271 - t678 + t684;
t76 = t251 / 0.2e1 - t514 + t886;
t74 = t501 + t585;
t70 = t159 * t632 - t850 * t855;
t69 = t158 * t632 + t850 * t851;
t68 = t232 / 0.2e1 - t515 + t886;
t66 = t502 + t586;
t57 = t474 * t381 + t829 * t490 + t877;
t56 = t474 * t591 + t829 * t486 - t876;
t54 = -t159 * t631 - t654;
t53 = -t655 - t690;
t50 = t161 * t632 - t555 * t855;
t49 = t163 * t632 + t555 * t851;
t48 = -t857 * t868 + t691;
t45 = t161 * t631 + t571 * t836 + t654;
t44 = -t573 * t836 + t655 + t689;
t43 = t509 - t498;
t37 = -(t571 - t868) * t857 + t691;
t34 = t144 + t540 + t865;
t33 = t143 + t538 + t866;
t25 = -t751 / 0.2e1 - t730 / 0.2e1 + t889 - t745 / 0.2e1 - t720 / 0.2e1 + t500;
t23 = -t753 / 0.2e1 + t732 / 0.2e1 + t890 + t747 / 0.2e1 + t722 / 0.2e1 + t499;
t22 = t144 + t541 + t867;
t21 = t143 + t539 + t849;
t18 = -t778 + t799;
t17 = -t563 * t485 + t589 + t618 + t866;
t16 = t563 * t489 + t593 + t617 + t865;
t13 = t489 * t621 + t714 + t824 - t705 / 0.2e1;
t11 = -t704 - t715 / 0.2e1 + (t621 + t823) * t485;
t9 = -t564 * t485 + t590 + t618 + t849;
t8 = t564 * t489 + t594 + t617 + t867;
t5 = t778 + t632 * (t456 * t857 - t461 * t856) + t799;
t30 = [0, 0, 0, t488 * t633, t470 * qJD(2), 0, 0, 0, -pkin(1) * t634, -pkin(1) * t633, t458 * t411, t632 * t361, 0, 0, 0, qJD(2) * t395 - t460 * t662, qJD(2) * t396 - t458 * t662, qJD(4) * t146 + t632 * t894, qJD(2) * t63 - qJD(3) * t64 + qJD(4) * t98, t483 * t574 * t836 - t471 * t861, t285 * qJD(5) - t404 * t521, t137 * t632 + t486 * t611, -t135 * t632 + t490 * t611, -t145, qJD(2) * t38 + qJD(3) * t40 + qJD(4) * t136 + qJD(5) * t78, qJD(2) * t39 + qJD(3) * t41 + qJD(4) * t138 + qJD(5) * t77 (t631 * t855 + t632 * t857) * t851, t101 * t631 + t632 * t79, t111 * t632 + t841 * t855, t109 * t632 - t841 * t851, -t145, qJD(2) * t1 + qJD(3) * t3 + qJD(4) * t110 + qJD(5) * t27 + qJD(6) * t36, qJD(2) * t2 + qJD(3) * t4 + qJD(4) * t112 + qJD(5) * t28 + qJD(6) * t35; 0, 0, 0, t608, t635, t633, -t634, 0, -pkin(7) * t633 - t625, pkin(7) * t634 - t624, t415, t642, -t410, t411, 0, t639 + t828, t638 - t847, t895 + (-t726 - t727) * qJD(2) + t85 * qJD(3), t694 + (-t441 * t870 + t442 * t869) * qJD(2) + t43 * qJD(3) + t168 * qJD(4), t102, t87, t81, t80, t176, t749 + (t486 * t548 - t876) * qJD(2) + t56 * qJD(3) + t68 * qJD(5), t748 + (t490 * t548 + t877) * qJD(2) + t57 * qJD(3) + t66 * qJD(5), t37, t5, t45, t44, t133, t793 + (t732 - t753 + t890) * qJD(2) + t23 * qJD(3) + t8 * qJD(5) + t22 * qJD(6), t792 + (-t730 - t751 + t889) * qJD(2) + t25 * qJD(3) + t9 * qJD(5) + t21 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t642, -t410, t411, 0, -t609 + t828, -t610 - t847, t895 + t85 * qJD(2) + (-t580 - t739) * t797, -t693 + t43 * qJD(2) + (t484 * t869 - t785 * t870) * t797 + t230 * qJD(4), t102, t87, t81, t80, t176, t743 + t56 * qJD(2) + (t486 * t547 - t876) * qJD(3) + t76 * qJD(5), t734 + t57 * qJD(2) + (t490 * t547 + t877) * qJD(3) + t74 * qJD(5), t37, t5, t45, t44, t133, t791 + t23 * qJD(2) + (t722 + t747 + t890) * qJD(3) + t16 * qJD(5) + t34 * qJD(6), t790 + t25 * qJD(2) + (-t720 - t745 + t889) * qJD(3) + t17 * qJD(5) + t33 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651, qJD(2) * t168 + qJD(3) * t230 + t776, 0, 0, 0, 0, 0, t271 + t677, qJD(5) * t282 + t676, 0, 0, 0, 0, 0, t680 + t689, t162 * t631 + t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t827, -t521 + t643, t279 * t632 + t486 * t542, t278 * t632 + t490 * t542, t283, qJD(2) * t68 + qJD(3) * t76 + qJD(4) * t278 - qJD(5) * t128 + t779, qJD(2) * t66 + qJD(3) * t74 + qJD(4) * t282 + qJD(5) * t127 + t780, t46, t29, t50, t49, t283, qJD(2) * t8 + qJD(3) * t16 + qJD(5) * t61 + qJD(6) * t11 + t157 + t784, qJD(2) * t9 + qJD(3) * t17 - qJD(5) * t62 + qJD(6) * t13 + t152 + t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t29, t50, t49, t283, qJD(2) * t22 + qJD(3) * t34 + qJD(5) * t11 - qJD(6) * t60 + t157 + t781, qJD(2) * t21 + qJD(3) * t33 + qJD(5) * t13 + qJD(6) * t59 + t152 + t782; 0, 0, 0, -t608, -t635, 0, 0, 0, t625, t624, -t415, -t642, 0, 0, 0, -t639, -t638, -qJD(3) * t84 - t895, -qJD(3) * t42 - qJD(4) * t167 - t694, t132, t173, t121, t120, -t176, qJD(3) * t55 + qJD(5) * t67 - t612 - t749, qJD(3) * t58 + qJD(5) * t65 + t267 - t748, t48, t18, t54, t53, -t133, qJD(3) * t24 - qJD(5) * t7 - qJD(6) * t19 + t189 - t793, qJD(3) * t26 - qJD(5) * t6 - qJD(6) * t20 + t193 - t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487 * t798, -t491 * t798, 0, t293 * qJD(3), t471, -t466, 0, 0, 0, t437 * t659 - t447 * t660, t437 * t658 + t432, -t308, t252, 0, 0, 0, qJD(5) * t311 + t461 * t657 + t412, qJD(5) * t312 - t456 * t657 + t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487 * t578, -t491 * t578, -t692 (-t447 * t785 + t448 * t484) * t797 - t544, t471, -t466, 0, 0, 0, t323 * qJD(5) - t447 * t572 + t695, qJD(5) * t324 + t432 - t525, -t308, t252, 0, 0, 0, qJD(5) * t170 + qJD(6) * t183 + t412 - t529, qJD(5) * t172 + qJD(6) * t182 + t413 - t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t650, 0, 0, 0, 0, 0, -t384, t645, 0, 0, 0, 0, 0, t868, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, -t296, t257, t256, -t637, qJD(3) * t323 - t438 * t658 - t527, qJD(3) * t324 + t438 * t659 - t526, t99, t71, t129, t131, -t637, t170 * qJD(3) + t553 - t846, t172 * qJD(3) + t552 + t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t71, t129, t131, -t637, qJD(3) * t183 - t531 - t846, qJD(3) * t182 - t530 + t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t415, -t642, 0, 0, 0, t609, t610, qJD(2) * t84 - t895, qJD(2) * t42 + qJD(4) * t229 + t693, t132, t173, t121, t120, -t176, -qJD(2) * t55 + qJD(5) * t75 - t612 - t743, -qJD(2) * t58 + qJD(5) * t73 + t267 - t734, t48, t18, t54, t53, -t133, -qJD(2) * t24 - qJD(5) * t15 - qJD(6) * t31 + t189 - t791, -qJD(2) * t26 - qJD(5) * t14 - qJD(6) * t32 + t193 - t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487 * t794, t491 * t794, t692, t544, t471, -t466, 0, 0, 0, -qJD(5) * t321 + t447 * t665 - t695, -qJD(5) * t322 + t525, -t308, t252, 0, 0, 0, -qJD(5) * t169 - qJD(6) * t180 + t529, qJD(5) * t171 - qJD(6) * t181 + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, -t466, 0, 0, 0, t474 * t659, t474 * t658, -t308, t252, 0, 0, 0, qJD(5) * t349 + t461 * t656, qJD(5) * t350 - t456 * t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t647, 0, 0, 0, 0, 0, -t384, t645, 0, 0, 0, 0, 0, t868, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, -t296, t257, t256, -t637, -t473 * t658 - t505, t473 * t659 - t504, t99, t71, t129, t131, -t637, -t510 - t845, -t511 - t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t71, t129, t131, -t637, -t507 - t845, -t506 - t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t651, qJD(2) * t167 - qJD(3) * t229 - t776, 0, 0, 0, 0, 0, -t270 - t677 + t684, qJD(5) * t281 - t632 * t854 - t676, 0, 0, 0, 0, 0, -t632 * t851 - t680 - t690, -t160 * t631 - t632 * t855 - t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t650, 0, 0, 0, 0, 0, t384, -t645, 0, 0, 0, 0, 0, -t868, -t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t647, 0, 0, 0, 0, 0, t384, -t645, 0, 0, 0, 0, 0, -t868, -t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t644 - t658, 0, 0, 0, 0, 0, t131, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827, t558 * t843 - t643, -t280 * t632 - t486 * t615, t277 * t632 - t490 * t615, t283, -qJD(2) * t67 - qJD(3) * t75 + qJD(4) * t277 - t779, -qJD(2) * t65 - qJD(3) * t73 - qJD(4) * t281 - t780, -t46, -t29, t70, t69, t283, qJD(2) * t7 + qJD(3) * t15 + qJD(6) * t10 + t147 - t784, qJD(2) * t6 + qJD(3) * t14 + qJD(6) * t12 + t150 - t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227, t296, -t273, t272, t637, qJD(3) * t321 + t527, qJD(3) * t322 + t526, t100, -t71, t149, t148, t637, qJD(3) * t169 - t553, -qJD(3) * t171 - t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227, t296, -t273, t272, t637, t505, t504, t100, -t71, t149, t148, t637, t510, t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t644, 0, 0, 0, 0, 0, t148, t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485 * t795, -t489 * t795; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485 * t577 + t775, -t489 * t577 + t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, -t29, t70, t69, t283, qJD(2) * t19 + qJD(3) * t31 - qJD(5) * t10 + t147 - t781, qJD(2) * t20 + qJD(3) * t32 - qJD(5) * t12 + t150 - t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, -t71, t149, t148, t637, qJD(3) * t180 + t531, qJD(3) * t181 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, -t71, t149, t148, t637, t507, t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t485 * t796 - t775, t489 * t796 - t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t30;
