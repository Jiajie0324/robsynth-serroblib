% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PPPRRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d4,d5,d6,theta1,theta2,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 19:36
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PPPRRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPPRRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPPRRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPPRRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPPRRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PPPRRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 19:35:17
% EndTime: 2019-05-04 19:36:38
% DurationCPUTime: 85.35s
% Computational Cost: add. (961447->969), mult. (1657222->1600), div. (0->0), fcn. (1509497->18), ass. (0->701)
t1504 = sin(pkin(8));
t1517 = sin(qJ(4));
t1520 = cos(qJ(4));
t1521 = qJD(4) ^ 2;
t1565 = qJDD(4) * t1517 + t1520 * t1521;
t1452 = t1565 * t1504;
t1505 = sin(pkin(7));
t1511 = cos(pkin(7));
t1510 = cos(pkin(8));
t1454 = t1565 * t1510;
t1471 = qJDD(4) * t1520 - t1517 * t1521;
t1501 = sin(pkin(14));
t1507 = cos(pkin(14));
t1569 = t1454 * t1507 + t1471 * t1501;
t1386 = t1511 * t1452 + t1505 * t1569;
t1506 = sin(pkin(6));
t1512 = cos(pkin(6));
t1389 = -t1505 * t1452 + t1511 * t1569;
t1418 = t1454 * t1501 - t1471 * t1507;
t1502 = sin(pkin(13));
t1508 = cos(pkin(13));
t1578 = t1389 * t1508 - t1418 * t1502;
t1299 = -t1506 * t1386 + t1512 * t1578;
t1337 = t1389 * t1502 + t1418 * t1508;
t1503 = sin(pkin(12));
t1509 = cos(pkin(12));
t1705 = t1299 * t1503 + t1337 * t1509;
t1704 = t1299 * t1509 - t1337 * t1503;
t1296 = t1512 * t1386 + t1506 * t1578;
t1476 = g(1) * t1509 + g(2) * t1503;
t1475 = g(1) * t1503 - t1509 * g(2);
t1687 = g(3) - qJDD(1);
t1692 = -t1512 * t1475 + t1506 * t1687;
t1405 = -t1508 * t1476 - t1502 * t1692;
t1404 = -t1476 * t1502 + t1508 * t1692;
t1441 = t1475 * t1506 + t1512 * t1687 - qJDD(2);
t1575 = t1404 * t1511 + t1441 * t1505;
t1323 = t1501 * t1405 + t1507 * t1575;
t1364 = -t1404 * t1505 + t1511 * t1441 - qJDD(3);
t1697 = t1323 * t1510 + t1364 * t1504;
t1696 = t1503 * t1687;
t1695 = t1509 * t1687;
t1515 = sin(qJ(6));
t1516 = sin(qJ(5));
t1683 = qJD(4) * t1516;
t1490 = qJD(5) * t1683;
t1519 = cos(qJ(5));
t1649 = t1519 * qJDD(4);
t1468 = -t1490 + t1649;
t1459 = -qJDD(6) + t1468;
t1518 = cos(qJ(6));
t1462 = -t1518 * qJD(5) + t1515 * t1683;
t1464 = qJD(5) * t1515 + t1518 * t1683;
t1673 = t1464 * t1462;
t1543 = -t1459 - t1673;
t1694 = t1515 * t1543;
t1693 = t1518 * t1543;
t1691 = qJD(5) ^ 2;
t1457 = t1462 ^ 2;
t1458 = t1464 ^ 2;
t1682 = qJD(4) * t1519;
t1486 = -qJD(6) + t1682;
t1484 = t1486 ^ 2;
t1690 = pkin(5) * t1516;
t1689 = pkin(5) * t1519;
t1324 = t1507 * t1405 - t1501 * t1575;
t1238 = t1517 * t1324 + t1520 * t1697;
t1239 = t1520 * t1324 - t1517 * t1697;
t1168 = t1238 * t1517 + t1239 * t1520;
t1688 = pkin(9) * t1168;
t1348 = t1404 * t1502 + t1405 * t1508;
t1686 = qJ(2) * t1348;
t1263 = t1323 * t1501 + t1324 * t1507;
t1685 = qJ(3) * t1263;
t1684 = qJD(4) * qJD(5);
t1235 = -t1521 * pkin(4) + qJDD(4) * pkin(10) + t1239;
t1284 = -t1323 * t1504 + t1364 * t1510;
t1279 = t1519 * t1284;
t1639 = -pkin(11) * t1516 - t1689;
t1465 = t1639 * qJD(4);
t1188 = t1279 - qJDD(5) * pkin(5) - t1691 * pkin(11) + (qJD(4) * t1465 + t1235) * t1516;
t1681 = t1188 * t1515;
t1680 = t1188 * t1518;
t1234 = -qJDD(4) * pkin(4) - t1521 * pkin(10) + t1238;
t1679 = t1234 * t1516;
t1678 = t1234 * t1519;
t1407 = t1459 - t1673;
t1675 = t1407 * t1515;
t1674 = t1407 * t1518;
t1485 = t1516 * t1521 * t1519;
t1478 = qJDD(5) + t1485;
t1672 = t1478 * t1516;
t1479 = qJDD(5) - t1485;
t1671 = t1479 * t1516;
t1670 = t1479 * t1519;
t1669 = t1486 * t1515;
t1668 = t1486 * t1518;
t1497 = t1516 ^ 2;
t1667 = t1497 * t1521;
t1666 = t1501 * t1364;
t1665 = t1502 * t1441;
t1664 = t1504 * t1507;
t1663 = t1505 * t1364;
t1661 = t1506 * t1441;
t1660 = t1507 * t1364;
t1659 = t1508 * t1441;
t1658 = t1511 * t1364;
t1656 = t1512 * t1441;
t1654 = t1517 * t1284;
t1653 = t1520 * t1284;
t1194 = t1519 * t1235 - t1516 * t1284;
t1498 = t1519 ^ 2;
t1652 = t1497 + t1498;
t1651 = t1504 * qJDD(4);
t1650 = t1516 * qJDD(4);
t1648 = t1516 * t1673;
t1647 = t1519 * t1673;
t1491 = qJD(5) * t1682;
t1646 = t1501 * t1651;
t1189 = -pkin(5) * t1691 + qJDD(5) * pkin(11) + t1465 * t1682 + t1194;
t1637 = -t1468 + t1490;
t1467 = t1491 + t1650;
t1638 = t1467 + t1491;
t1222 = pkin(5) * t1637 - pkin(11) * t1638 + t1234;
t1143 = t1189 * t1515 - t1518 * t1222;
t1144 = t1189 * t1518 + t1222 * t1515;
t1092 = t1143 * t1515 + t1518 * t1144;
t1193 = t1235 * t1516 + t1279;
t1133 = t1193 * t1516 + t1519 * t1194;
t1644 = -t1475 * t1503 - t1509 * t1476;
t1643 = t1518 * qJDD(5) - t1515 * t1467;
t1642 = t1517 * t1485;
t1641 = t1520 * t1485;
t1640 = -pkin(5) * t1188 + pkin(11) * t1092;
t1132 = t1193 * t1519 - t1194 * t1516;
t1470 = t1652 * qJDD(4);
t1495 = t1498 * t1521;
t1473 = t1495 + t1667;
t1426 = t1470 * t1520 - t1473 * t1517;
t1636 = pkin(9) * t1426 + t1132 * t1517;
t1635 = -pkin(9) * t1471 - t1654;
t1634 = -pkin(9) * t1565 + t1653;
t1072 = t1092 * t1516 - t1188 * t1519;
t1073 = t1092 * t1519 + t1188 * t1516;
t1091 = -t1143 * t1518 + t1144 * t1515;
t1629 = t1073 * t1517 - t1091 * t1520;
t1024 = -t1504 * t1072 + t1510 * t1629;
t1040 = t1073 * t1520 + t1091 * t1517;
t1007 = -t1024 * t1501 + t1040 * t1507;
t1023 = t1510 * t1072 + t1504 * t1629;
t1632 = t1024 * t1507 + t1040 * t1501;
t993 = -t1505 * t1023 + t1511 * t1632;
t1633 = t1007 * t1502 + t1508 * t993;
t1624 = t1133 * t1517 - t1234 * t1520;
t1070 = -t1132 * t1510 + t1504 * t1624;
t1071 = t1132 * t1504 + t1510 * t1624;
t1116 = t1133 * t1520 + t1234 * t1517;
t1630 = t1071 * t1507 + t1116 * t1501;
t1026 = -t1505 * t1070 + t1511 * t1630;
t1050 = -t1071 * t1501 + t1116 * t1507;
t1631 = t1026 * t1508 + t1050 * t1502;
t1167 = t1238 * t1520 - t1239 * t1517;
t1151 = -t1167 * t1504 - t1510 * t1284;
t1152 = -t1167 * t1510 + t1504 * t1284;
t1619 = t1152 * t1507 + t1168 * t1501;
t1076 = -t1505 * t1151 + t1511 * t1619;
t1103 = -t1152 * t1501 + t1168 * t1507;
t1628 = t1076 * t1508 + t1103 * t1502;
t1164 = t1168 * t1504;
t1165 = t1168 * t1510;
t1616 = t1165 * t1507 + t1167 * t1501;
t1086 = -t1505 * t1164 + t1511 * t1616;
t1120 = -t1165 * t1501 + t1167 * t1507;
t1627 = t1086 * t1508 + t1120 * t1502;
t1395 = (-qJD(6) - t1486) * t1464 + t1643;
t1563 = -t1515 * qJDD(5) - t1518 * t1467;
t1416 = -qJD(6) * t1462 - t1563;
t1448 = t1462 * t1486;
t1397 = t1416 - t1448;
t1329 = t1395 * t1518 + t1397 * t1515;
t1406 = t1457 + t1458;
t1302 = t1329 * t1516 + t1406 * t1519;
t1303 = t1329 * t1519 - t1406 * t1516;
t1327 = t1395 * t1515 - t1397 * t1518;
t1596 = t1303 * t1517 - t1327 * t1520;
t1210 = t1510 * t1302 + t1504 * t1596;
t1211 = -t1504 * t1302 + t1510 * t1596;
t1247 = t1303 * t1520 + t1327 * t1517;
t1614 = t1211 * t1507 + t1247 * t1501;
t1122 = -t1505 * t1210 + t1511 * t1614;
t1158 = -t1211 * t1501 + t1247 * t1507;
t1626 = t1122 * t1508 + t1158 * t1502;
t1415 = -qJD(6) * t1464 + t1643;
t1447 = t1464 * t1486;
t1394 = t1415 + t1447;
t1396 = t1416 + t1448;
t1328 = t1394 * t1518 - t1396 * t1515;
t1429 = t1458 - t1457;
t1307 = t1328 * t1516 - t1429 * t1519;
t1308 = t1328 * t1519 + t1429 * t1516;
t1326 = t1394 * t1515 + t1396 * t1518;
t1595 = t1308 * t1517 - t1326 * t1520;
t1212 = t1510 * t1307 + t1504 * t1595;
t1213 = -t1504 * t1307 + t1510 * t1595;
t1252 = t1308 * t1520 + t1326 * t1517;
t1613 = t1213 * t1507 + t1252 * t1501;
t1124 = -t1505 * t1212 + t1511 * t1613;
t1159 = -t1213 * t1501 + t1252 * t1507;
t1625 = t1124 * t1508 + t1159 * t1502;
t1420 = -t1484 - t1457;
t1352 = t1420 * t1518 - t1694;
t1310 = t1352 * t1516 + t1394 * t1519;
t1311 = t1352 * t1519 - t1394 * t1516;
t1351 = t1420 * t1515 + t1693;
t1594 = t1311 * t1517 - t1351 * t1520;
t1217 = t1510 * t1310 + t1504 * t1594;
t1218 = -t1504 * t1310 + t1510 * t1594;
t1268 = t1311 * t1520 + t1351 * t1517;
t1612 = t1218 * t1507 + t1268 * t1501;
t1137 = -t1505 * t1217 + t1511 * t1612;
t1173 = -t1218 * t1501 + t1268 * t1507;
t1623 = t1137 * t1508 + t1173 * t1502;
t1425 = -t1458 - t1484;
t1359 = -t1425 * t1515 + t1674;
t1398 = (qJD(6) - t1486) * t1462 + t1563;
t1312 = t1359 * t1516 + t1398 * t1519;
t1313 = t1359 * t1519 - t1398 * t1516;
t1358 = t1425 * t1518 + t1675;
t1593 = t1313 * t1517 - t1358 * t1520;
t1223 = t1510 * t1312 + t1504 * t1593;
t1224 = -t1504 * t1312 + t1510 * t1593;
t1269 = t1313 * t1520 + t1358 * t1517;
t1611 = t1224 * t1507 + t1269 * t1501;
t1139 = -t1505 * t1223 + t1511 * t1611;
t1174 = -t1224 * t1501 + t1269 * t1507;
t1622 = t1139 * t1508 + t1174 * t1502;
t1446 = -t1458 + t1484;
t1376 = -t1446 * t1515 + t1693;
t1314 = t1376 * t1516 - t1397 * t1519;
t1316 = t1376 * t1519 + t1397 * t1516;
t1374 = t1446 * t1518 + t1694;
t1592 = t1316 * t1517 - t1374 * t1520;
t1229 = t1510 * t1314 + t1504 * t1592;
t1231 = -t1504 * t1314 + t1510 * t1592;
t1276 = t1316 * t1520 + t1374 * t1517;
t1610 = t1231 * t1507 + t1276 * t1501;
t1149 = -t1505 * t1229 + t1511 * t1610;
t1190 = -t1231 * t1501 + t1276 * t1507;
t1621 = t1149 * t1508 + t1190 * t1502;
t1445 = t1457 - t1484;
t1377 = t1445 * t1518 + t1675;
t1393 = -t1415 + t1447;
t1315 = t1377 * t1516 + t1393 * t1519;
t1317 = t1377 * t1519 - t1393 * t1516;
t1375 = t1445 * t1515 - t1674;
t1591 = t1317 * t1517 - t1375 * t1520;
t1230 = t1510 * t1315 + t1504 * t1591;
t1232 = -t1504 * t1315 + t1510 * t1591;
t1277 = t1317 * t1520 + t1375 * t1517;
t1609 = t1232 * t1507 + t1277 * t1501;
t1150 = -t1505 * t1230 + t1511 * t1609;
t1191 = -t1232 * t1501 + t1277 * t1507;
t1620 = t1150 * t1508 + t1191 * t1502;
t1383 = -t1415 * t1515 - t1462 * t1668;
t1339 = t1383 * t1516 + t1647;
t1341 = t1383 * t1519 - t1648;
t1382 = -t1415 * t1518 + t1462 * t1669;
t1589 = t1341 * t1517 + t1382 * t1520;
t1253 = t1510 * t1339 + t1504 * t1589;
t1255 = -t1504 * t1339 + t1510 * t1589;
t1304 = t1341 * t1520 - t1382 * t1517;
t1607 = t1255 * t1507 + t1304 * t1501;
t1162 = -t1505 * t1253 + t1511 * t1607;
t1214 = -t1255 * t1501 + t1304 * t1507;
t1618 = t1162 * t1508 + t1214 * t1502;
t1385 = t1416 * t1518 + t1464 * t1669;
t1340 = t1385 * t1516 - t1647;
t1342 = t1385 * t1519 + t1648;
t1384 = t1416 * t1515 - t1464 * t1668;
t1588 = t1342 * t1517 - t1384 * t1520;
t1254 = t1510 * t1340 + t1504 * t1588;
t1256 = -t1504 * t1340 + t1510 * t1588;
t1305 = t1342 * t1520 + t1384 * t1517;
t1606 = t1256 * t1507 + t1305 * t1501;
t1163 = -t1505 * t1254 + t1511 * t1606;
t1215 = -t1256 * t1501 + t1305 * t1507;
t1617 = t1163 * t1508 + t1215 * t1502;
t1401 = (t1462 * t1518 - t1464 * t1515) * t1486;
t1378 = t1401 * t1516 + t1459 * t1519;
t1379 = t1401 * t1519 - t1459 * t1516;
t1400 = (t1462 * t1515 + t1464 * t1518) * t1486;
t1579 = t1379 * t1517 - t1400 * t1520;
t1285 = t1510 * t1378 + t1504 * t1579;
t1286 = -t1504 * t1378 + t1510 * t1579;
t1325 = t1379 * t1520 + t1400 * t1517;
t1601 = t1286 * t1507 + t1325 * t1501;
t1196 = -t1505 * t1285 + t1511 * t1601;
t1240 = -t1286 * t1501 + t1325 * t1507;
t1615 = t1196 * t1508 + t1240 * t1502;
t1262 = t1323 * t1507 - t1324 * t1501;
t1237 = -t1262 * t1511 + t1663;
t1608 = t1237 * t1508 + t1263 * t1502;
t1260 = t1263 * t1511;
t1605 = t1260 * t1508 + t1262 * t1502;
t1466 = 0.2e1 * t1491 + t1650;
t1469 = -0.2e1 * t1490 + t1649;
t1423 = t1466 * t1519 + t1469 * t1516;
t1424 = -t1466 * t1516 + t1469 * t1519;
t1474 = -t1495 + t1667;
t1573 = t1424 * t1517 - t1474 * t1520;
t1349 = t1510 * t1423 + t1504 * t1573;
t1350 = -t1504 * t1423 + t1510 * t1573;
t1399 = t1424 * t1520 + t1474 * t1517;
t1586 = t1350 * t1507 + t1399 * t1501;
t1267 = -t1505 * t1349 + t1511 * t1586;
t1309 = -t1350 * t1501 + t1399 * t1507;
t1604 = t1267 * t1508 + t1309 * t1502;
t1461 = t1519 * t1478;
t1483 = -t1495 - t1691;
t1434 = t1483 * t1516 + t1461;
t1438 = t1483 * t1519 - t1672;
t1571 = t1438 * t1517 + t1469 * t1520;
t1354 = t1510 * t1434 + t1504 * t1571;
t1356 = -t1504 * t1434 + t1510 * t1571;
t1402 = t1438 * t1520 - t1469 * t1517;
t1585 = t1356 * t1507 + t1402 * t1501;
t1274 = -t1505 * t1354 + t1511 * t1585;
t1318 = -t1356 * t1501 + t1402 * t1507;
t1603 = t1274 * t1508 + t1318 * t1502;
t1481 = -t1667 - t1691;
t1436 = t1481 * t1519 - t1671;
t1440 = -t1481 * t1516 - t1670;
t1570 = t1440 * t1517 - t1466 * t1520;
t1355 = t1510 * t1436 + t1504 * t1570;
t1357 = -t1504 * t1436 + t1510 * t1570;
t1403 = t1440 * t1520 + t1466 * t1517;
t1584 = t1357 * t1507 + t1403 * t1501;
t1275 = -t1505 * t1355 + t1511 * t1584;
t1319 = -t1357 * t1501 + t1403 * t1507;
t1602 = t1275 * t1508 + t1319 * t1502;
t1482 = t1495 - t1691;
t1433 = t1482 * t1516 + t1670;
t1437 = t1482 * t1519 - t1671;
t1560 = t1437 * t1517 - t1520 * t1649;
t1365 = t1510 * t1433 + t1504 * t1560;
t1367 = -t1504 * t1433 + t1510 * t1560;
t1410 = t1437 * t1520 + t1517 * t1649;
t1583 = t1367 * t1507 + t1410 * t1501;
t1289 = -t1505 * t1365 + t1511 * t1583;
t1330 = -t1367 * t1501 + t1410 * t1507;
t1600 = t1289 * t1508 + t1330 * t1502;
t1480 = -t1667 + t1691;
t1435 = t1480 * t1519 + t1672;
t1439 = -t1480 * t1516 + t1461;
t1559 = t1439 * t1517 - t1520 * t1650;
t1366 = t1510 * t1435 + t1504 * t1559;
t1368 = -t1504 * t1435 + t1510 * t1559;
t1411 = t1439 * t1520 + t1517 * t1650;
t1582 = t1368 * t1507 + t1411 * t1501;
t1290 = -t1505 * t1366 + t1511 * t1582;
t1331 = -t1368 * t1501 + t1411 * t1507;
t1599 = t1290 * t1508 + t1331 * t1502;
t1431 = t1637 * t1519;
t1442 = -t1468 * t1516 - t1498 * t1684;
t1556 = t1442 * t1517 - t1641;
t1369 = -t1510 * t1431 + t1504 * t1556;
t1371 = t1504 * t1431 + t1510 * t1556;
t1412 = t1442 * t1520 + t1642;
t1581 = t1371 * t1507 + t1412 * t1501;
t1293 = -t1505 * t1369 + t1511 * t1581;
t1332 = -t1371 * t1501 + t1412 * t1507;
t1598 = t1293 * t1508 + t1332 * t1502;
t1432 = t1638 * t1516;
t1443 = t1467 * t1519 - t1497 * t1684;
t1555 = t1443 * t1517 + t1641;
t1370 = t1510 * t1432 + t1504 * t1555;
t1372 = -t1504 * t1432 + t1510 * t1555;
t1413 = t1443 * t1520 - t1642;
t1580 = t1372 * t1507 + t1413 * t1501;
t1294 = -t1505 * t1370 + t1511 * t1580;
t1333 = -t1372 * t1501 + t1413 * t1507;
t1597 = t1294 * t1508 + t1333 * t1502;
t1567 = t1470 * t1517 + t1473 * t1520;
t1421 = t1567 * t1504;
t1422 = t1567 * t1510;
t1574 = t1422 * t1507 + t1426 * t1501;
t1335 = -t1505 * t1421 + t1511 * t1574;
t1373 = -t1422 * t1501 + t1426 * t1507;
t1590 = t1335 * t1508 + t1373 * t1502;
t1460 = t1652 * t1684;
t1564 = -qJDD(5) * t1520 + t1460 * t1517;
t1427 = t1564 * t1504;
t1428 = t1564 * t1510;
t1444 = qJDD(5) * t1517 + t1460 * t1520;
t1572 = t1428 * t1507 + t1444 * t1501;
t1344 = -t1505 * t1427 + t1511 * t1572;
t1392 = -t1428 * t1501 + t1444 * t1507;
t1587 = t1344 * t1508 + t1392 * t1502;
t1453 = t1471 * t1504;
t1455 = t1471 * t1510;
t1568 = t1455 * t1507 - t1501 * t1565;
t1391 = -t1505 * t1453 + t1511 * t1568;
t1419 = -t1455 * t1501 - t1507 * t1565;
t1576 = t1391 * t1508 + t1419 * t1502;
t1347 = t1404 * t1508 - t1405 * t1502;
t1566 = t1475 * t1509 - t1476 * t1503;
t1282 = t1324 * t1505 - t1501 * t1658;
t1562 = t1282 * t1508 - t1502 * t1660;
t1283 = t1323 * t1505 + t1507 * t1658;
t1561 = t1283 * t1508 - t1502 * t1666;
t1558 = pkin(5) * t1394 + pkin(11) * t1352 - t1680;
t1557 = pkin(5) * t1398 + pkin(11) * t1359 + t1681;
t1016 = pkin(10) * t1073 + (-pkin(4) + t1639) * t1091;
t1029 = -pkin(10) * t1072 + (-pkin(11) * t1519 + t1690) * t1091;
t1039 = -pkin(4) * t1072 - t1640;
t1552 = pkin(9) * t1040 + t1029 * t1517 + t1039 * t1520;
t985 = -pkin(3) * t1023 - t1504 * t1016 + t1510 * t1552;
t989 = t1520 * t1029 - t1517 * t1039 + (-t1023 * t1504 - t1024 * t1510) * pkin(9);
t1544 = qJ(3) * t1007 + t1501 * t989 + t1507 * t985;
t984 = pkin(3) * t1024 + t1510 * t1016 + t1504 * t1552;
t992 = t1511 * t1023 + t1505 * t1632;
t966 = -pkin(2) * t992 - t1505 * t984 + t1511 * t1544;
t968 = -t1501 * t985 + t1507 * t989 + (-t1505 * t992 - t1511 * t993) * qJ(3);
t987 = t1007 * t1508 - t1502 * t993;
t1554 = qJ(2) * t987 + t1502 * t968 + t1508 * t966;
t1450 = (-t1505 * t1510 - t1511 * t1664) * qJDD(4);
t1553 = t1450 * t1508 + t1502 * t1646;
t1087 = -pkin(11) * t1327 - t1091;
t1081 = -pkin(10) * t1302 + t1087 * t1519 + t1327 * t1690;
t1523 = pkin(5) * t1406 + pkin(11) * t1329 + t1092;
t1084 = -pkin(4) * t1302 - t1523;
t1551 = pkin(9) * t1247 + t1081 * t1517 + t1084 * t1520;
t1134 = -pkin(5) * t1351 + t1143;
t1169 = -pkin(11) * t1351 + t1681;
t1098 = -pkin(10) * t1310 - t1134 * t1516 + t1169 * t1519;
t1154 = -pkin(4) * t1310 - t1558;
t1550 = pkin(9) * t1268 + t1098 * t1517 + t1154 * t1520;
t1135 = -pkin(5) * t1358 + t1144;
t1170 = -pkin(11) * t1358 + t1680;
t1099 = -pkin(10) * t1312 - t1135 * t1516 + t1170 * t1519;
t1155 = -pkin(4) * t1312 - t1557;
t1549 = pkin(9) * t1269 + t1099 * t1517 + t1155 * t1520;
t1186 = -pkin(4) * t1434 + t1193;
t1225 = -pkin(10) * t1434 + t1679;
t1548 = pkin(9) * t1402 + t1186 * t1520 + t1225 * t1517;
t1187 = -pkin(4) * t1436 + t1194;
t1226 = -pkin(10) * t1436 + t1678;
t1547 = pkin(9) * t1403 + t1187 * t1520 + t1226 * t1517;
t1010 = -t1026 * t1502 + t1050 * t1508;
t1117 = -pkin(4) * t1234 + pkin(10) * t1133;
t1522 = pkin(9) * t1116 - (-pkin(4) * t1520 - pkin(10) * t1517) * t1132;
t1020 = pkin(3) * t1071 + t1510 * t1117 + t1504 * t1522;
t1025 = t1511 * t1070 + t1505 * t1630;
t1021 = -pkin(3) * t1070 - t1504 * t1117 + t1510 * t1522;
t1022 = -(pkin(4) * t1517 - pkin(10) * t1520) * t1132 + (-t1070 * t1504 - t1071 * t1510) * pkin(9);
t1532 = qJ(3) * t1050 + t1021 * t1507 + t1022 * t1501;
t981 = -pkin(2) * t1025 - t1505 * t1020 + t1511 * t1532;
t988 = -t1501 * t1021 + t1507 * t1022 + (-t1025 * t1505 - t1026 * t1511) * qJ(3);
t1546 = qJ(2) * t1010 + t1502 * t988 + t1508 * t981;
t1088 = -t1122 * t1502 + t1158 * t1508;
t1074 = pkin(10) * t1303 + t1516 * t1087 + (-pkin(4) - t1689) * t1327;
t1018 = pkin(3) * t1211 + t1510 * t1074 + t1504 * t1551;
t1121 = t1511 * t1210 + t1505 * t1614;
t1019 = -pkin(3) * t1210 - t1504 * t1074 + t1510 * t1551;
t1032 = t1520 * t1081 - t1517 * t1084 + (-t1210 * t1504 - t1211 * t1510) * pkin(9);
t1533 = qJ(3) * t1158 + t1019 * t1507 + t1032 * t1501;
t991 = -pkin(2) * t1121 - t1505 * t1018 + t1511 * t1533;
t998 = -t1501 * t1019 + t1507 * t1032 + (-t1121 * t1505 - t1122 * t1511) * qJ(3);
t1545 = qJ(2) * t1088 + t1502 * t998 + t1508 * t991;
t1089 = -pkin(4) * t1351 + pkin(10) * t1311 + t1134 * t1519 + t1169 * t1516;
t1035 = pkin(3) * t1218 + t1510 * t1089 + t1504 * t1550;
t1136 = t1511 * t1217 + t1505 * t1612;
t1036 = -pkin(3) * t1217 - t1504 * t1089 + t1510 * t1550;
t1052 = t1520 * t1098 - t1517 * t1154 + (-t1217 * t1504 - t1218 * t1510) * pkin(9);
t1531 = qJ(3) * t1173 + t1036 * t1507 + t1052 * t1501;
t1000 = -pkin(2) * t1136 - t1505 * t1035 + t1511 * t1531;
t1008 = -t1501 * t1036 + t1507 * t1052 + (-t1136 * t1505 - t1137 * t1511) * qJ(3);
t1101 = -t1137 * t1502 + t1173 * t1508;
t1542 = qJ(2) * t1101 + t1000 * t1508 + t1008 * t1502;
t1097 = -pkin(4) * t1358 + pkin(10) * t1313 + t1135 * t1519 + t1170 * t1516;
t1037 = pkin(3) * t1224 + t1510 * t1097 + t1504 * t1549;
t1138 = t1511 * t1223 + t1505 * t1611;
t1038 = -pkin(3) * t1223 - t1504 * t1097 + t1510 * t1549;
t1053 = t1520 * t1099 - t1517 * t1155 + (-t1223 * t1504 - t1224 * t1510) * pkin(9);
t1530 = qJ(3) * t1174 + t1038 * t1507 + t1053 * t1501;
t1002 = -pkin(2) * t1138 - t1505 * t1037 + t1511 * t1530;
t1009 = -t1501 * t1038 + t1507 * t1053 + (-t1138 * t1505 - t1139 * t1511) * qJ(3);
t1102 = -t1139 * t1502 + t1174 * t1508;
t1541 = qJ(2) * t1102 + t1002 * t1508 + t1009 * t1502;
t1075 = t1511 * t1151 + t1505 * t1619;
t1105 = pkin(3) * t1152 + t1504 * t1688;
t1100 = (-t1151 * t1504 - t1152 * t1510) * pkin(9);
t1104 = -pkin(3) * t1151 + t1510 * t1688;
t1528 = qJ(3) * t1103 + t1100 * t1501 + t1104 * t1507;
t1013 = -pkin(2) * t1075 - t1505 * t1105 + t1511 * t1528;
t1017 = t1507 * t1100 - t1501 * t1104 + (-t1075 * t1505 - t1076 * t1511) * qJ(3);
t1049 = -t1076 * t1502 + t1103 * t1508;
t1540 = qJ(2) * t1049 + t1013 * t1508 + t1017 * t1502;
t1128 = pkin(4) * t1473 + pkin(10) * t1470 + t1133;
t1082 = pkin(3) * t1422 + t1510 * t1128 + t1504 * t1636;
t1334 = t1511 * t1421 + t1505 * t1574;
t1083 = -pkin(3) * t1421 - t1504 * t1128 + t1510 * t1636;
t1125 = t1520 * t1132 + (-t1421 * t1504 - t1422 * t1510) * pkin(9);
t1529 = qJ(3) * t1373 + t1083 * t1507 + t1125 * t1501;
t1031 = -pkin(2) * t1334 - t1505 * t1082 + t1511 * t1529;
t1051 = -t1501 * t1083 + t1507 * t1125 + (-t1334 * t1505 - t1335 * t1511) * qJ(3);
t1295 = -t1335 * t1502 + t1373 * t1508;
t1539 = qJ(2) * t1295 + t1031 * t1508 + t1051 * t1502;
t1221 = pkin(4) * t1469 + pkin(10) * t1438 - t1678;
t1112 = pkin(3) * t1356 + t1510 * t1221 + t1504 * t1548;
t1272 = t1511 * t1354 + t1505 * t1585;
t1114 = -pkin(3) * t1354 - t1504 * t1221 + t1510 * t1548;
t1129 = -t1517 * t1186 + t1520 * t1225 + (-t1354 * t1504 - t1356 * t1510) * pkin(9);
t1527 = qJ(3) * t1318 + t1114 * t1507 + t1129 * t1501;
t1043 = -pkin(2) * t1272 - t1505 * t1112 + t1511 * t1527;
t1062 = -t1501 * t1114 + t1507 * t1129 + (-t1272 * t1505 - t1274 * t1511) * qJ(3);
t1227 = -t1274 * t1502 + t1318 * t1508;
t1538 = qJ(2) * t1227 + t1043 * t1508 + t1062 * t1502;
t1220 = -pkin(4) * t1466 + pkin(10) * t1440 + t1679;
t1113 = pkin(3) * t1357 + t1510 * t1220 + t1504 * t1547;
t1273 = t1511 * t1355 + t1505 * t1584;
t1115 = -pkin(3) * t1355 - t1504 * t1220 + t1510 * t1547;
t1130 = -t1517 * t1187 + t1520 * t1226 + (-t1355 * t1504 - t1357 * t1510) * pkin(9);
t1526 = qJ(3) * t1319 + t1115 * t1507 + t1130 * t1501;
t1044 = -pkin(2) * t1273 - t1505 * t1113 + t1511 * t1526;
t1063 = -t1501 * t1115 + t1507 * t1130 + (-t1273 * t1505 - t1275 * t1511) * qJ(3);
t1228 = -t1275 * t1502 + t1319 * t1508;
t1537 = qJ(2) * t1228 + t1044 * t1508 + t1063 * t1502;
t1183 = pkin(3) * t1455 - t1510 * t1238 + t1504 * t1634;
t1388 = t1511 * t1453 + t1505 * t1568;
t1185 = -pkin(3) * t1453 + t1504 * t1238 + t1510 * t1634;
t1264 = -t1654 + (-t1453 * t1504 - t1455 * t1510) * pkin(9);
t1524 = qJ(3) * t1419 + t1185 * t1507 + t1264 * t1501;
t1108 = -pkin(2) * t1388 - t1505 * t1183 + t1511 * t1524;
t1140 = -t1501 * t1185 + t1507 * t1264 + (-t1388 * t1505 - t1391 * t1511) * qJ(3);
t1338 = -t1391 * t1502 + t1419 * t1508;
t1536 = qJ(2) * t1338 + t1108 * t1508 + t1140 * t1502;
t1182 = -pkin(3) * t1454 - t1510 * t1239 + t1504 * t1635;
t1184 = pkin(3) * t1452 + t1504 * t1239 + t1510 * t1635;
t1265 = -t1653 + (t1452 * t1504 + t1454 * t1510) * pkin(9);
t1525 = qJ(3) * t1418 + t1184 * t1507 + t1265 * t1501;
t1109 = pkin(2) * t1386 - t1505 * t1182 + t1511 * t1525;
t1141 = -t1501 * t1184 + t1507 * t1265 + (t1386 * t1505 + t1389 * t1511) * qJ(3);
t1535 = qJ(2) * t1337 + t1109 * t1508 + t1141 * t1502;
t1236 = -t1262 * t1505 - t1658;
t1166 = (-t1236 * t1505 - t1237 * t1511) * qJ(3);
t1175 = -t1237 * t1502 + t1263 * t1508;
t1176 = -pkin(2) * t1236 + t1511 * t1685;
t1534 = qJ(2) * t1175 + t1166 * t1502 + t1176 * t1508;
t1449 = (-t1505 * t1664 + t1510 * t1511) * qJDD(4);
t1414 = -t1450 * t1502 + t1508 * t1646;
t1381 = -t1506 * t1449 + t1512 * t1553;
t1380 = t1512 * t1449 + t1506 * t1553;
t1363 = t1404 * t1506 + t1508 * t1656;
t1362 = t1405 * t1506 - t1502 * t1656;
t1361 = -t1404 * t1512 + t1506 * t1659;
t1360 = -t1405 * t1512 - t1502 * t1661;
t1346 = t1348 * t1512;
t1345 = t1348 * t1506;
t1343 = t1511 * t1427 + t1505 * t1572;
t1322 = -t1347 * t1512 + t1661;
t1321 = -t1347 * t1506 - t1656;
t1306 = -t1344 * t1502 + t1392 * t1508;
t1301 = -t1506 * t1388 + t1512 * t1576;
t1298 = t1512 * t1388 + t1506 * t1576;
t1292 = t1511 * t1370 + t1505 * t1580;
t1291 = t1511 * t1369 + t1505 * t1581;
t1288 = t1511 * t1366 + t1505 * t1582;
t1287 = t1511 * t1365 + t1505 * t1583;
t1281 = -t1323 * t1511 + t1505 * t1660;
t1280 = -t1324 * t1511 - t1501 * t1663;
t1271 = pkin(1) * t1322 + t1506 * t1686;
t1270 = -pkin(1) * t1321 + t1512 * t1686;
t1266 = t1511 * t1349 + t1505 * t1586;
t1261 = (-t1321 * t1506 - t1322 * t1512) * qJ(2);
t1259 = t1263 * t1505;
t1258 = -t1506 * t1343 + t1512 * t1587;
t1257 = t1512 * t1343 + t1506 * t1587;
t1251 = -t1301 * t1503 + t1338 * t1509;
t1250 = t1301 * t1509 + t1338 * t1503;
t1249 = -t1282 * t1502 - t1508 * t1660;
t1248 = -t1283 * t1502 - t1508 * t1666;
t1246 = -t1506 * t1334 + t1512 * t1590;
t1245 = t1512 * t1334 + t1506 * t1590;
t1244 = -t1294 * t1502 + t1333 * t1508;
t1243 = -t1293 * t1502 + t1332 * t1508;
t1242 = -t1290 * t1502 + t1331 * t1508;
t1241 = -t1289 * t1502 + t1330 * t1508;
t1216 = -t1267 * t1502 + t1309 * t1508;
t1209 = -t1506 * t1280 + t1512 * t1562;
t1208 = -t1506 * t1281 + t1512 * t1561;
t1207 = t1512 * t1280 + t1506 * t1562;
t1206 = t1512 * t1281 + t1506 * t1561;
t1205 = -t1260 * t1502 + t1262 * t1508;
t1204 = -t1506 * t1292 + t1512 * t1597;
t1203 = -t1506 * t1291 + t1512 * t1598;
t1202 = t1512 * t1292 + t1506 * t1597;
t1201 = t1512 * t1291 + t1506 * t1598;
t1200 = -t1506 * t1288 + t1512 * t1599;
t1199 = -t1506 * t1287 + t1512 * t1600;
t1198 = t1512 * t1288 + t1506 * t1599;
t1197 = t1512 * t1287 + t1506 * t1600;
t1195 = t1511 * t1285 + t1505 * t1601;
t1181 = -t1506 * t1273 + t1512 * t1602;
t1180 = -t1506 * t1272 + t1512 * t1603;
t1179 = t1512 * t1273 + t1506 * t1602;
t1178 = t1512 * t1272 + t1506 * t1603;
t1177 = pkin(2) * t1237 + t1505 * t1685;
t1172 = -t1506 * t1266 + t1512 * t1604;
t1171 = t1512 * t1266 + t1506 * t1604;
t1161 = t1511 * t1254 + t1505 * t1606;
t1160 = t1511 * t1253 + t1505 * t1607;
t1157 = -t1506 * t1259 + t1512 * t1605;
t1156 = t1512 * t1259 + t1506 * t1605;
t1153 = -t1196 * t1502 + t1240 * t1508;
t1148 = t1511 * t1230 + t1505 * t1609;
t1147 = t1511 * t1229 + t1505 * t1610;
t1146 = -t1506 * t1236 + t1512 * t1608;
t1145 = t1512 * t1236 + t1506 * t1608;
t1127 = -t1163 * t1502 + t1215 * t1508;
t1126 = -t1162 * t1502 + t1214 * t1508;
t1123 = t1511 * t1212 + t1505 * t1613;
t1119 = -t1506 * t1195 + t1512 * t1615;
t1118 = t1512 * t1195 + t1506 * t1615;
t1111 = -t1150 * t1502 + t1191 * t1508;
t1110 = -t1149 * t1502 + t1190 * t1508;
t1107 = -pkin(2) * t1389 + t1511 * t1182 + t1505 * t1525;
t1106 = pkin(2) * t1391 + t1511 * t1183 + t1505 * t1524;
t1096 = -t1506 * t1161 + t1512 * t1617;
t1095 = -t1506 * t1160 + t1512 * t1618;
t1094 = t1512 * t1161 + t1506 * t1617;
t1093 = t1512 * t1160 + t1506 * t1618;
t1090 = -t1124 * t1502 + t1159 * t1508;
t1085 = t1511 * t1164 + t1505 * t1616;
t1080 = -t1506 * t1148 + t1512 * t1620;
t1079 = -t1506 * t1147 + t1512 * t1621;
t1078 = t1512 * t1148 + t1506 * t1620;
t1077 = t1512 * t1147 + t1506 * t1621;
t1069 = -t1506 * t1138 + t1512 * t1622;
t1068 = t1512 * t1138 + t1506 * t1622;
t1067 = -t1506 * t1136 + t1512 * t1623;
t1066 = t1512 * t1136 + t1506 * t1623;
t1065 = -t1502 * t1109 + t1508 * t1141 + (t1296 * t1506 + t1299 * t1512) * qJ(2);
t1064 = -t1502 * t1108 + t1508 * t1140 + (-t1298 * t1506 - t1301 * t1512) * qJ(2);
t1061 = -t1506 * t1123 + t1512 * t1625;
t1060 = t1512 * t1123 + t1506 * t1625;
t1059 = t1508 * t1166 - t1502 * t1176 + (-t1145 * t1506 - t1146 * t1512) * qJ(2);
t1058 = -t1506 * t1121 + t1512 * t1626;
t1057 = t1512 * t1121 + t1506 * t1626;
t1056 = -t1086 * t1502 + t1120 * t1508;
t1055 = -pkin(1) * t1145 - t1506 * t1177 + t1512 * t1534;
t1054 = pkin(1) * t1146 + t1512 * t1177 + t1506 * t1534;
t1048 = pkin(1) * t1296 - t1506 * t1107 + t1512 * t1535;
t1047 = -pkin(1) * t1298 - t1506 * t1106 + t1512 * t1536;
t1046 = -pkin(1) * t1299 + t1512 * t1107 + t1506 * t1535;
t1045 = pkin(1) * t1301 + t1512 * t1106 + t1506 * t1536;
t1042 = pkin(2) * t1275 + t1511 * t1113 + t1505 * t1526;
t1041 = pkin(2) * t1274 + t1511 * t1112 + t1505 * t1527;
t1034 = -t1506 * t1085 + t1512 * t1627;
t1033 = t1512 * t1085 + t1506 * t1627;
t1030 = pkin(2) * t1335 + t1511 * t1082 + t1505 * t1529;
t1028 = -t1506 * t1075 + t1512 * t1628;
t1027 = t1512 * t1075 + t1506 * t1628;
t1015 = -t1502 * t1044 + t1508 * t1063 + (-t1179 * t1506 - t1181 * t1512) * qJ(2);
t1014 = -t1502 * t1043 + t1508 * t1062 + (-t1178 * t1506 - t1180 * t1512) * qJ(2);
t1012 = pkin(2) * t1076 + t1511 * t1105 + t1505 * t1528;
t1011 = -t1502 * t1031 + t1508 * t1051 + (-t1245 * t1506 - t1246 * t1512) * qJ(2);
t1006 = -pkin(1) * t1179 - t1506 * t1042 + t1512 * t1537;
t1005 = -pkin(1) * t1178 - t1506 * t1041 + t1512 * t1538;
t1004 = pkin(1) * t1181 + t1512 * t1042 + t1506 * t1537;
t1003 = pkin(1) * t1180 + t1512 * t1041 + t1506 * t1538;
t1001 = pkin(2) * t1139 + t1511 * t1037 + t1505 * t1530;
t999 = pkin(2) * t1137 + t1511 * t1035 + t1505 * t1531;
t997 = -pkin(1) * t1245 - t1506 * t1030 + t1512 * t1539;
t996 = pkin(1) * t1246 + t1512 * t1030 + t1506 * t1539;
t995 = -t1506 * t1025 + t1512 * t1631;
t994 = t1512 * t1025 + t1506 * t1631;
t990 = pkin(2) * t1122 + t1511 * t1018 + t1505 * t1533;
t986 = -t1502 * t1013 + t1508 * t1017 + (-t1027 * t1506 - t1028 * t1512) * qJ(2);
t983 = -t1502 * t1002 + t1508 * t1009 + (-t1068 * t1506 - t1069 * t1512) * qJ(2);
t982 = -t1502 * t1000 + t1508 * t1008 + (-t1066 * t1506 - t1067 * t1512) * qJ(2);
t980 = pkin(2) * t1026 + t1511 * t1020 + t1505 * t1532;
t979 = -pkin(1) * t1027 - t1506 * t1012 + t1512 * t1540;
t978 = pkin(1) * t1028 + t1512 * t1012 + t1506 * t1540;
t977 = -pkin(1) * t1068 - t1506 * t1001 + t1512 * t1541;
t976 = pkin(1) * t1069 + t1512 * t1001 + t1506 * t1541;
t975 = -t1502 * t991 + t1508 * t998 + (-t1057 * t1506 - t1058 * t1512) * qJ(2);
t974 = -pkin(1) * t1066 - t1506 * t999 + t1512 * t1542;
t973 = pkin(1) * t1067 + t1506 * t1542 + t1512 * t999;
t972 = -t1506 * t992 + t1512 * t1633;
t971 = t1506 * t1633 + t1512 * t992;
t970 = -pkin(1) * t1057 - t1506 * t990 + t1512 * t1545;
t969 = pkin(1) * t1058 + t1506 * t1545 + t1512 * t990;
t967 = -t1502 * t981 + t1508 * t988 + (-t1506 * t994 - t1512 * t995) * qJ(2);
t965 = pkin(2) * t993 + t1505 * t1544 + t1511 * t984;
t964 = -pkin(1) * t994 - t1506 * t980 + t1512 * t1546;
t963 = pkin(1) * t995 + t1506 * t1546 + t1512 * t980;
t962 = -t1502 * t966 + t1508 * t968 + (-t1506 * t971 - t1512 * t972) * qJ(2);
t961 = -pkin(1) * t971 - t1506 * t965 + t1512 * t1554;
t960 = pkin(1) * t972 + t1506 * t1554 + t1512 * t965;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1696, -t1695, -t1566, -qJ(1) * t1566, 0, 0, 0, 0, 0, 0, -t1363 * t1503 - t1509 * t1665, -t1362 * t1503 - t1509 * t1659, -t1346 * t1503 + t1347 * t1509, t1509 * t1261 - t1503 * t1270 - qJ(1) * (t1322 * t1509 + t1348 * t1503), 0, 0, 0, 0, 0, 0, -t1208 * t1503 + t1248 * t1509, -t1209 * t1503 + t1249 * t1509, -t1157 * t1503 + t1205 * t1509, t1509 * t1059 - t1503 * t1055 - qJ(1) * (t1146 * t1509 + t1175 * t1503), 0, 0, -t1705, 0, t1251, -t1381 * t1503 + t1414 * t1509, -qJ(1) * t1250 - t1047 * t1503 + t1064 * t1509, qJ(1) * t1704 - t1503 * t1048 + t1509 * t1065, -t1034 * t1503 + t1056 * t1509, t1509 * t986 - t1503 * t979 - qJ(1) * (t1028 * t1509 + t1049 * t1503), -t1204 * t1503 + t1244 * t1509, -t1172 * t1503 + t1216 * t1509, -t1200 * t1503 + t1242 * t1509, -t1203 * t1503 + t1243 * t1509, -t1199 * t1503 + t1241 * t1509, -t1258 * t1503 + t1306 * t1509, t1509 * t1014 - t1503 * t1005 - qJ(1) * (t1180 * t1509 + t1227 * t1503), t1509 * t1015 - t1503 * t1006 - qJ(1) * (t1181 * t1509 + t1228 * t1503), t1509 * t1011 - t1503 * t997 - qJ(1) * (t1246 * t1509 + t1295 * t1503), t1509 * t967 - t1503 * t964 - qJ(1) * (t1010 * t1503 + t1509 * t995), -t1096 * t1503 + t1127 * t1509, -t1061 * t1503 + t1090 * t1509, -t1079 * t1503 + t1110 * t1509, -t1095 * t1503 + t1126 * t1509, -t1080 * t1503 + t1111 * t1509, -t1119 * t1503 + t1153 * t1509, t1509 * t982 - t1503 * t974 - qJ(1) * (t1067 * t1509 + t1101 * t1503), t1509 * t983 - t1503 * t977 - qJ(1) * (t1069 * t1509 + t1102 * t1503), t1509 * t975 - t1503 * t970 - qJ(1) * (t1058 * t1509 + t1088 * t1503), t1509 * t962 - t1503 * t961 - qJ(1) * (t1503 * t987 + t1509 * t972); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1695, -t1696, t1644, qJ(1) * t1644, 0, 0, 0, 0, 0, 0, t1363 * t1509 - t1503 * t1665, t1362 * t1509 - t1503 * t1659, t1346 * t1509 + t1347 * t1503, t1503 * t1261 + t1509 * t1270 + qJ(1) * (-t1322 * t1503 + t1348 * t1509), 0, 0, 0, 0, 0, 0, t1208 * t1509 + t1248 * t1503, t1209 * t1509 + t1249 * t1503, t1157 * t1509 + t1205 * t1503, t1503 * t1059 + t1509 * t1055 + qJ(1) * (-t1146 * t1503 + t1175 * t1509), 0, 0, t1704, 0, t1250, t1381 * t1509 + t1414 * t1503, qJ(1) * t1251 + t1047 * t1509 + t1064 * t1503, qJ(1) * t1705 + t1509 * t1048 + t1503 * t1065, t1034 * t1509 + t1056 * t1503, t1503 * t986 + t1509 * t979 + qJ(1) * (-t1028 * t1503 + t1049 * t1509), t1204 * t1509 + t1244 * t1503, t1172 * t1509 + t1216 * t1503, t1200 * t1509 + t1242 * t1503, t1203 * t1509 + t1243 * t1503, t1199 * t1509 + t1241 * t1503, t1258 * t1509 + t1306 * t1503, t1503 * t1014 + t1509 * t1005 + qJ(1) * (-t1180 * t1503 + t1227 * t1509), t1503 * t1015 + t1509 * t1006 + qJ(1) * (-t1181 * t1503 + t1228 * t1509), t1503 * t1011 + t1509 * t997 + qJ(1) * (-t1246 * t1503 + t1295 * t1509), t1503 * t967 + t1509 * t964 + qJ(1) * (t1010 * t1509 - t1503 * t995), t1096 * t1509 + t1127 * t1503, t1061 * t1509 + t1090 * t1503, t1079 * t1509 + t1110 * t1503, t1095 * t1509 + t1126 * t1503, t1080 * t1509 + t1111 * t1503, t1119 * t1509 + t1153 * t1503, t1503 * t982 + t1509 * t974 + qJ(1) * (-t1067 * t1503 + t1101 * t1509), t1503 * t983 + t1509 * t977 + qJ(1) * (-t1069 * t1503 + t1102 * t1509), t1503 * t975 + t1509 * t970 + qJ(1) * (-t1058 * t1503 + t1088 * t1509), t1503 * t962 + t1509 * t961 + qJ(1) * (-t1503 * t972 + t1509 * t987); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1475, t1476, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1360, t1345, t1271, 0, 0, 0, 0, 0, 0, t1206, t1207, t1156, t1054, 0, 0, t1296, 0, t1298, t1380, t1045, t1046, t1033, t978, t1202, t1171, t1198, t1201, t1197, t1257, t1003, t1004, t996, t963, t1094, t1060, t1077, t1093, t1078, t1118, t973, t976, t969, t960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1687, -t1475, 0, 0, 0, 0, 0, 0, 0, -t1665, -t1659, t1347, t1261, 0, 0, 0, 0, 0, 0, t1248, t1249, t1205, t1059, 0, 0, -t1337, 0, t1338, t1414, t1064, t1065, t1056, t986, t1244, t1216, t1242, t1243, t1241, t1306, t1014, t1015, t1011, t967, t1127, t1090, t1110, t1126, t1111, t1153, t982, t983, t975, t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1687, 0, -t1476, 0, 0, 0, 0, 0, 0, 0, t1363, t1362, t1346, t1270, 0, 0, 0, 0, 0, 0, t1208, t1209, t1157, t1055, 0, 0, t1299, 0, t1301, t1381, t1047, t1048, t1034, t979, t1204, t1172, t1200, t1203, t1199, t1258, t1005, t1006, t997, t964, t1096, t1061, t1079, t1095, t1080, t1119, t974, t977, t970, t961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1475, t1476, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1360, t1345, t1271, 0, 0, 0, 0, 0, 0, t1206, t1207, t1156, t1054, 0, 0, t1296, 0, t1298, t1380, t1045, t1046, t1033, t978, t1202, t1171, t1198, t1201, t1197, t1257, t1003, t1004, t996, t963, t1094, t1060, t1077, t1093, t1078, t1118, t973, t976, t969, t960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1441, t1404, 0, 0, 0, 0, 0, 0, 0, -t1666, -t1660, t1262, t1166, 0, 0, -t1418, 0, t1419, t1646, t1140, t1141, t1120, t1017, t1333, t1309, t1331, t1332, t1330, t1392, t1062, t1063, t1051, t988, t1215, t1159, t1190, t1214, t1191, t1240, t1008, t1009, t998, t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, 0, t1405, 0, 0, 0, 0, 0, 0, 0, t1283, t1282, t1260, t1176, 0, 0, t1389, 0, t1391, t1450, t1108, t1109, t1086, t1013, t1294, t1267, t1290, t1293, t1289, t1344, t1043, t1044, t1031, t981, t1163, t1124, t1149, t1162, t1150, t1196, t1000, t1002, t991, t966; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1404, -t1405, 0, 0, 0, 0, 0, 0, 0, 0, t1281, t1280, t1259, t1177, 0, 0, t1386, 0, t1388, t1449, t1106, t1107, t1085, t1012, t1292, t1266, t1288, t1291, t1287, t1343, t1041, t1042, t1030, t980, t1161, t1123, t1147, t1160, t1148, t1195, t999, t1001, t990, t965; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1364, t1323, 0, 0, 0, t1471, 0, -t1565, 0, t1264, t1265, t1167, t1100, t1413, t1399, t1411, t1412, t1410, t1444, t1129, t1130, t1125, t1022, t1305, t1252, t1276, t1304, t1277, t1325, t1052, t1053, t1032, t989; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1364, 0, t1324, 0, 0, 0, t1454, 0, t1455, -t1651, t1185, t1184, t1165, t1104, t1372, t1350, t1368, t1371, t1367, t1428, t1114, t1115, t1083, t1021, t1256, t1213, t1231, t1255, t1232, t1286, t1036, t1038, t1019, t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1323, -t1324, 0, 0, 0, 0, t1452, 0, t1453, t1510 * qJDD(4), t1183, t1182, t1164, t1105, t1370, t1349, t1366, t1369, t1365, t1427, t1112, t1113, t1082, t1020, t1254, t1212, t1229, t1253, t1230, t1285, t1035, t1037, t1018, t984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), 0, -t1521, 0, 0, -t1284, t1238, 0, t1443, t1424, t1439, t1442, t1437, t1460, t1225, t1226, t1132, pkin(10) * t1132, t1342, t1308, t1316, t1341, t1317, t1379, t1098, t1099, t1081, t1029; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1521, 0, qJDD(4), 0, t1284, 0, t1239, 0, t1485, -t1474, -t1650, -t1485, -t1649, -qJDD(5), t1186, t1187, 0, pkin(4) * t1132, -t1384, -t1326, -t1374, t1382, -t1375, -t1400, t1154, t1155, t1084, t1039; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), -t1238, -t1239, 0, 0, t1432, t1423, t1435, -t1431, t1433, 0, t1221, t1220, t1128, t1117, t1340, t1307, t1314, t1339, t1315, t1378, t1089, t1097, t1074, t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1467, t1469, t1478, -t1491, t1482, t1491, 0, t1234, t1193, 0, t1385, t1328, t1376, t1383, t1377, t1401, t1169, t1170, t1087, -pkin(11) * t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1490, t1466, t1480, t1468, t1479, -t1490, -t1234, 0, t1194, 0, -t1673, -t1429, -t1397, t1673, t1393, t1459, t1134, t1135, -pkin(5) * t1327, -pkin(5) * t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1485, t1474, t1650, t1485, t1649, qJDD(5), -t1193, -t1194, 0, 0, t1384, t1326, t1374, -t1382, t1375, t1400, t1558, t1557, t1523, t1640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1416, t1394, t1543, -t1448, t1445, t1448, 0, t1188, t1143, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1447, t1396, t1446, t1415, -t1407, t1447, -t1188, 0, t1144, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1673, t1429, t1397, -t1673, -t1393, -t1459, -t1143, -t1144, 0, 0;];
m_new_reg  = t1;
