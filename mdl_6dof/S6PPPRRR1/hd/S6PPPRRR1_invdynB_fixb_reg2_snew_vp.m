% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PPPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d4,d5,d6,theta1,theta2,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 19:36
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PPPRRR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPPRRR1_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPPRRR1_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPPRRR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPPRRR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PPPRRR1_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 19:34:14
% EndTime: 2019-05-04 19:35:17
% DurationCPUTime: 64.81s
% Computational Cost: add. (579399->919), mult. (999093->1593), div. (0->0), fcn. (910834->18), ass. (0->683)
t760 = sin(pkin(8));
t776 = cos(qJ(4));
t778 = qJD(4) ^ 2;
t773 = sin(qJ(4));
t904 = qJDD(4) * t773;
t818 = t776 * t778 + t904;
t706 = t818 * t760;
t761 = sin(pkin(7));
t767 = cos(pkin(7));
t766 = cos(pkin(8));
t708 = t818 * t766;
t903 = qJDD(4) * t776;
t727 = -t773 * t778 + t903;
t757 = sin(pkin(14));
t763 = cos(pkin(14));
t821 = t708 * t763 + t727 * t757;
t640 = t767 * t706 + t761 * t821;
t762 = sin(pkin(6));
t768 = cos(pkin(6));
t643 = -t761 * t706 + t767 * t821;
t672 = t708 * t757 - t727 * t763;
t758 = sin(pkin(13));
t764 = cos(pkin(13));
t830 = t643 * t764 - t672 * t758;
t556 = -t762 * t640 + t768 * t830;
t594 = t643 * t758 + t672 * t764;
t759 = sin(pkin(12));
t765 = cos(pkin(12));
t508 = t556 * t759 + t594 * t765;
t959 = t556 * t765 - t594 * t759;
t956 = t768 * t640 + t762 * t830;
t731 = g(1) * t765 + g(2) * t759;
t897 = g(1) * t759 - t765 * g(2);
t911 = g(3) - qJDD(1);
t946 = -t762 * t911 + t768 * t897;
t659 = -t764 * t731 + t758 * t946;
t658 = -t731 * t758 - t764 * t946;
t696 = t762 * t897 + t768 * t911 - qJDD(2);
t827 = t658 * t767 + t696 * t761;
t580 = t757 * t659 + t763 * t827;
t619 = -t658 * t761 + t696 * t767 - qJDD(3);
t951 = t580 * t766 + t619 * t760;
t950 = t759 * t911;
t949 = t765 * t911;
t771 = sin(qJ(6));
t772 = sin(qJ(5));
t906 = qJD(4) * qJD(5);
t745 = t772 * t906;
t775 = cos(qJ(5));
t748 = t775 * qJDD(4);
t724 = t748 - t745;
t715 = -qJDD(6) + t724;
t774 = cos(qJ(6));
t909 = qJD(4) * t772;
t718 = -t774 * qJD(5) + t771 * t909;
t720 = qJD(5) * t771 + t774 * t909;
t928 = t718 * t720;
t816 = -t715 - t928;
t948 = t771 * t816;
t947 = t774 * t816;
t908 = qJD(4) * t775;
t741 = -qJD(6) + t908;
t702 = t718 * t741;
t898 = t775 * t906;
t905 = qJDD(4) * t772;
t723 = t898 + t905;
t900 = t718 * qJD(6) - t771 * qJDD(5) - t774 * t723;
t651 = t900 - t702;
t684 = -t765 * t731 - t759 * t897;
t895 = -t774 * qJDD(5) + t723 * t771;
t647 = (qJD(6) + t741) * t720 + t895;
t683 = -t759 * t731 + t765 * t897;
t713 = t718 ^ 2;
t714 = t720 ^ 2;
t739 = t741 ^ 2;
t945 = pkin(5) * t772;
t944 = pkin(5) * t775;
t581 = t763 * t659 - t757 * t827;
t494 = t581 * t773 + t776 * t951;
t495 = t776 * t581 - t773 * t951;
t427 = t494 * t773 + t495 * t776;
t943 = pkin(9) * t427;
t604 = t658 * t758 + t659 * t764;
t942 = qJ(2) * t604;
t520 = t580 * t757 + t581 * t763;
t941 = qJ(3) * t520;
t491 = -pkin(4) * t778 + qJDD(4) * pkin(10) + t495;
t542 = -t580 * t760 + t766 * t619;
t537 = t775 * t542;
t892 = -pkin(11) * t772 - t944;
t721 = t892 * qJD(4);
t777 = qJD(5) ^ 2;
t447 = t537 - qJDD(5) * pkin(5) - t777 * pkin(11) + (qJD(4) * t721 + t491) * t772;
t940 = t447 * t771;
t939 = t447 * t774;
t490 = -qJDD(4) * pkin(4) - t778 * pkin(10) + t494;
t938 = t490 * t772;
t937 = t490 * t775;
t935 = t619 * t758;
t933 = t619 * t764;
t661 = t715 - t928;
t932 = t661 * t771;
t931 = t661 * t774;
t930 = t696 * t759;
t929 = t696 * t765;
t740 = t772 * t778 * t775;
t733 = qJDD(5) + t740;
t927 = t733 * t772;
t734 = qJDD(5) - t740;
t926 = t734 * t772;
t925 = t734 * t775;
t924 = t741 * t771;
t923 = t741 * t774;
t753 = t772 ^ 2;
t922 = t753 * t778;
t920 = t761 * t619;
t918 = t761 * t763;
t917 = t762 * t696;
t916 = t767 * t619;
t914 = t768 * t696;
t913 = t773 * t542;
t912 = t776 * t542;
t453 = t775 * t491 - t772 * t542;
t448 = -pkin(5) * t777 + qJDD(5) * pkin(11) + t721 * t908 + t453;
t886 = -t724 + t745;
t887 = t723 + t898;
t478 = pkin(5) * t886 - pkin(11) * t887 + t490;
t400 = t774 * t448 + t771 * t478;
t754 = t775 ^ 2;
t910 = t753 + t754;
t902 = t772 * t928;
t901 = t775 * t928;
t899 = qJDD(4) * t757 * t760;
t399 = t448 * t771 - t774 * t478;
t452 = t491 * t772 + t537;
t390 = t452 * t772 + t775 * t453;
t894 = t773 * t740;
t893 = t776 * t740;
t389 = t452 * t775 - t453 * t772;
t726 = t910 * qJDD(4);
t751 = t754 * t778;
t729 = t751 + t922;
t680 = t726 * t776 - t729 * t773;
t890 = pkin(9) * t680 + t389 * t773;
t889 = -pkin(9) * t727 - t913;
t888 = -pkin(9) * t818 + t912;
t350 = t399 * t771 + t400 * t774;
t332 = t350 * t772 - t447 * t775;
t333 = t350 * t775 + t447 * t772;
t349 = -t399 * t774 + t400 * t771;
t881 = t333 * t773 - t349 * t776;
t282 = t766 * t332 + t760 * t881;
t283 = -t760 * t332 + t766 * t881;
t300 = t333 * t776 + t349 * t773;
t884 = t283 * t763 + t300 * t757;
t253 = -t761 * t282 + t767 * t884;
t264 = -t283 * t757 + t300 * t763;
t885 = t253 * t764 + t264 * t758;
t876 = t390 * t773 - t490 * t776;
t330 = -t389 * t766 + t760 * t876;
t331 = t389 * t760 + t766 * t876;
t374 = t390 * t776 + t490 * t773;
t882 = t331 * t763 + t374 * t757;
t285 = -t761 * t330 + t767 * t882;
t312 = -t331 * t757 + t374 * t763;
t883 = t285 * t764 + t312 * t758;
t426 = t494 * t776 - t495 * t773;
t411 = -t426 * t760 - t766 * t542;
t412 = -t426 * t766 + t760 * t542;
t871 = t412 * t763 + t427 * t757;
t336 = -t761 * t411 + t767 * t871;
t359 = -t412 * t757 + t427 * t763;
t880 = t336 * t764 + t359 * t758;
t423 = t427 * t760;
t424 = t427 * t766;
t868 = t424 * t763 + t426 * t757;
t344 = -t761 * t423 + t767 * t868;
t377 = -t424 * t757 + t426 * t763;
t879 = t344 * t764 + t377 * t758;
t652 = t702 + t900;
t586 = -t647 * t774 - t652 * t771;
t660 = t713 + t714;
t559 = t586 * t772 + t660 * t775;
t560 = t586 * t775 - t660 * t772;
t584 = -t647 * t771 + t652 * t774;
t848 = t560 * t773 - t584 * t776;
t465 = t766 * t559 + t760 * t848;
t466 = -t760 * t559 + t766 * t848;
t503 = t560 * t776 + t584 * t773;
t866 = t466 * t763 + t503 * t757;
t379 = -t761 * t465 + t767 * t866;
t417 = -t466 * t757 + t503 * t763;
t878 = t379 * t764 + t417 * t758;
t648 = (-qJD(6) + t741) * t720 - t895;
t585 = t648 * t774 + t651 * t771;
t685 = -t714 + t713;
t564 = t585 * t772 + t685 * t775;
t565 = t585 * t775 - t685 * t772;
t583 = -t648 * t771 + t651 * t774;
t847 = t565 * t773 + t583 * t776;
t467 = t766 * t564 + t760 * t847;
t468 = -t760 * t564 + t766 * t847;
t510 = t565 * t776 - t583 * t773;
t865 = t468 * t763 + t510 * t757;
t381 = -t761 * t467 + t767 * t865;
t418 = -t468 * t757 + t510 * t763;
t877 = t381 * t764 + t418 * t758;
t674 = -t739 - t713;
t608 = t674 * t774 - t948;
t567 = t608 * t772 + t648 * t775;
t568 = t608 * t775 - t648 * t772;
t607 = t674 * t771 + t947;
t846 = t568 * t773 - t607 * t776;
t472 = t766 * t567 + t760 * t846;
t473 = -t760 * t567 + t766 * t846;
t525 = t568 * t776 + t607 * t773;
t864 = t473 * t763 + t525 * t757;
t394 = -t761 * t472 + t767 * t864;
t431 = -t473 * t757 + t525 * t763;
t875 = t394 * t764 + t431 * t758;
t679 = -t714 - t739;
t616 = -t679 * t771 + t931;
t569 = t616 * t772 + t651 * t775;
t570 = t616 * t775 - t651 * t772;
t615 = t679 * t774 + t932;
t845 = t570 * t773 - t615 * t776;
t479 = t766 * t569 + t760 * t845;
t480 = -t760 * t569 + t766 * t845;
t526 = t570 * t776 + t615 * t773;
t863 = t480 * t763 + t526 * t757;
t396 = -t761 * t479 + t767 * t863;
t432 = -t480 * t757 + t526 * t763;
t874 = t396 * t764 + t432 * t758;
t701 = -t714 + t739;
t631 = -t701 * t771 + t947;
t571 = t631 * t772 + t652 * t775;
t573 = t631 * t775 - t652 * t772;
t629 = -t701 * t774 - t948;
t844 = t573 * t773 + t629 * t776;
t485 = t766 * t571 + t760 * t844;
t487 = -t760 * t571 + t766 * t844;
t534 = t573 * t776 - t629 * t773;
t862 = t487 * t763 + t534 * t757;
t409 = -t761 * t485 + t767 * t862;
t449 = -t487 * t757 + t534 * t763;
t873 = t409 * t764 + t449 * t758;
t700 = t713 - t739;
t632 = t700 * t774 + t932;
t572 = t632 * t772 + t647 * t775;
t574 = t632 * t775 - t647 * t772;
t630 = -t700 * t771 + t931;
t843 = t574 * t773 + t630 * t776;
t486 = t766 * t572 + t760 * t843;
t488 = -t760 * t572 + t766 * t843;
t535 = t574 * t776 - t630 * t773;
t861 = t488 * t763 + t535 * t757;
t410 = -t761 * t486 + t767 * t861;
t450 = -t488 * t757 + t535 * t763;
t872 = t410 * t764 + t450 * t758;
t669 = -qJD(6) * t720 - t895;
t637 = -t669 * t771 - t718 * t923;
t596 = t637 * t772 + t901;
t598 = t637 * t775 - t902;
t636 = -t669 * t774 + t718 * t924;
t841 = t598 * t773 + t636 * t776;
t511 = t766 * t596 + t760 * t841;
t513 = -t760 * t596 + t766 * t841;
t561 = t598 * t776 - t636 * t773;
t859 = t513 * t763 + t561 * t757;
t421 = -t761 * t511 + t767 * t859;
t469 = -t513 * t757 + t561 * t763;
t870 = t421 * t764 + t469 * t758;
t639 = t720 * t924 - t774 * t900;
t597 = t639 * t772 - t901;
t599 = t639 * t775 + t902;
t638 = t720 * t923 + t771 * t900;
t840 = t599 * t773 + t638 * t776;
t512 = t766 * t597 + t760 * t840;
t514 = -t760 * t597 + t766 * t840;
t562 = t599 * t776 - t638 * t773;
t858 = t514 * t763 + t562 * t757;
t422 = -t761 * t512 + t767 * t858;
t470 = -t514 * t757 + t562 * t763;
t869 = t422 * t764 + t470 * t758;
t655 = (t718 * t774 - t720 * t771) * t741;
t633 = t655 * t772 + t715 * t775;
t634 = t655 * t775 - t715 * t772;
t654 = (-t718 * t771 - t720 * t774) * t741;
t831 = t634 * t773 + t654 * t776;
t543 = t766 * t633 + t760 * t831;
t544 = -t760 * t633 + t766 * t831;
t582 = t634 * t776 - t654 * t773;
t853 = t544 * t763 + t582 * t757;
t455 = -t761 * t543 + t767 * t853;
t496 = -t544 * t757 + t582 * t763;
t867 = t455 * t764 + t496 * t758;
t519 = t580 * t763 - t581 * t757;
t493 = -t519 * t767 + t920;
t860 = t493 * t764 + t520 * t758;
t517 = t520 * t767;
t857 = t517 * t764 + t519 * t758;
t722 = 0.2e1 * t898 + t905;
t725 = t748 - 0.2e1 * t745;
t677 = t722 * t775 + t725 * t772;
t678 = -t722 * t772 + t725 * t775;
t730 = t751 - t922;
t825 = t678 * t773 + t730 * t776;
t605 = t766 * t677 + t760 * t825;
t606 = -t760 * t677 + t766 * t825;
t653 = t678 * t776 - t730 * t773;
t838 = t606 * t763 + t653 * t757;
t524 = -t761 * t605 + t767 * t838;
t566 = -t606 * t757 + t653 * t763;
t856 = t524 * t764 + t566 * t758;
t717 = t775 * t733;
t738 = -t751 - t777;
t689 = t738 * t772 + t717;
t693 = t738 * t775 - t927;
t823 = t693 * t773 + t725 * t776;
t610 = t766 * t689 + t760 * t823;
t612 = -t760 * t689 + t766 * t823;
t656 = t693 * t776 - t725 * t773;
t837 = t612 * t763 + t656 * t757;
t532 = -t761 * t610 + t767 * t837;
t575 = -t612 * t757 + t656 * t763;
t855 = t532 * t764 + t575 * t758;
t736 = -t777 - t922;
t691 = t736 * t775 - t926;
t695 = -t736 * t772 - t925;
t822 = t695 * t773 - t722 * t776;
t611 = t766 * t691 + t760 * t822;
t613 = -t760 * t691 + t766 * t822;
t657 = t695 * t776 + t722 * t773;
t836 = t613 * t763 + t657 * t757;
t533 = -t761 * t611 + t767 * t836;
t576 = -t613 * t757 + t657 * t763;
t854 = t533 * t764 + t576 * t758;
t737 = t751 - t777;
t688 = t737 * t772 + t925;
t692 = t737 * t775 - t926;
t813 = t692 * t773 - t748 * t776;
t620 = t766 * t688 + t760 * t813;
t622 = -t760 * t688 + t766 * t813;
t664 = t692 * t776 + t748 * t773;
t835 = t622 * t763 + t664 * t757;
t547 = -t761 * t620 + t767 * t835;
t587 = -t622 * t757 + t664 * t763;
t852 = t547 * t764 + t587 * t758;
t735 = t777 - t922;
t690 = t735 * t775 + t927;
t694 = -t735 * t772 + t717;
t812 = t694 * t773 - t772 * t903;
t621 = t766 * t690 + t760 * t812;
t623 = -t760 * t690 + t766 * t812;
t665 = t694 * t776 + t772 * t904;
t834 = t623 * t763 + t665 * t757;
t548 = -t761 * t621 + t767 * t834;
t588 = -t623 * t757 + t665 * t763;
t851 = t548 * t764 + t588 * t758;
t686 = t886 * t775;
t697 = -t724 * t772 - t754 * t906;
t811 = t697 * t773 - t893;
t624 = -t686 * t766 + t760 * t811;
t626 = t686 * t760 + t766 * t811;
t666 = t697 * t776 + t894;
t833 = t626 * t763 + t666 * t757;
t551 = -t761 * t624 + t767 * t833;
t589 = -t626 * t757 + t666 * t763;
t850 = t551 * t764 + t589 * t758;
t687 = t887 * t772;
t698 = t723 * t775 - t753 * t906;
t810 = t698 * t773 + t893;
t625 = t687 * t766 + t760 * t810;
t627 = -t687 * t760 + t766 * t810;
t667 = t698 * t776 - t894;
t832 = t627 * t763 + t667 * t757;
t552 = -t761 * t625 + t767 * t832;
t590 = -t627 * t757 + t667 * t763;
t849 = t552 * t764 + t590 * t758;
t819 = t726 * t773 + t729 * t776;
t675 = t819 * t760;
t676 = t819 * t766;
t826 = t676 * t763 + t680 * t757;
t592 = -t761 * t675 + t767 * t826;
t628 = -t676 * t757 + t680 * t763;
t842 = t592 * t764 + t628 * t758;
t716 = t910 * t906;
t817 = -qJDD(5) * t776 + t716 * t773;
t681 = t817 * t760;
t682 = t817 * t766;
t699 = qJDD(5) * t773 + t716 * t776;
t824 = t682 * t763 + t699 * t757;
t601 = -t761 * t681 + t767 * t824;
t646 = -t682 * t757 + t699 * t763;
t839 = t601 * t764 + t646 * t758;
t707 = t727 * t760;
t709 = t727 * t766;
t820 = t709 * t763 - t757 * t818;
t645 = -t761 * t707 + t767 * t820;
t673 = -t709 * t757 - t763 * t818;
t828 = t645 * t764 + t673 * t758;
t603 = t658 * t764 - t659 * t758;
t540 = t581 * t761 - t757 * t916;
t815 = t540 * t764 - t763 * t935;
t541 = t580 * t761 + t763 * t916;
t814 = t541 * t764 - t757 * t935;
t704 = (-t760 * t763 * t767 - t761 * t766) * qJDD(4);
t809 = t704 * t764 + t758 * t899;
t288 = -pkin(10) * t332 + (-pkin(11) * t775 + t945) * t349;
t299 = -pkin(4) * t332 + pkin(5) * t447 - pkin(11) * t350;
t808 = pkin(9) * t300 + t288 * t773 + t299 * t776;
t345 = -pkin(11) * t584 - t349;
t339 = -pkin(10) * t559 + t345 * t775 + t584 * t945;
t342 = -pkin(4) * t559 - pkin(5) * t660 - pkin(11) * t586 - t350;
t807 = pkin(9) * t503 + t339 * t773 + t342 * t776;
t391 = -pkin(5) * t607 + t399;
t428 = -pkin(11) * t607 + t940;
t354 = -pkin(10) * t567 - t391 * t772 + t428 * t775;
t414 = -pkin(4) * t567 - pkin(5) * t648 - pkin(11) * t608 + t939;
t806 = pkin(9) * t525 + t354 * t773 + t414 * t776;
t392 = -pkin(5) * t615 + t400;
t429 = -pkin(11) * t615 + t939;
t355 = -pkin(10) * t569 - t392 * t772 + t429 * t775;
t415 = -pkin(4) * t569 - pkin(5) * t651 - pkin(11) * t616 - t940;
t805 = pkin(9) * t526 + t355 * t773 + t415 * t776;
t444 = -pkin(4) * t689 + t452;
t481 = -pkin(10) * t689 + t938;
t804 = pkin(9) * t656 + t444 * t776 + t481 * t773;
t445 = -pkin(4) * t691 + t453;
t482 = -pkin(10) * t691 + t937;
t803 = pkin(9) * t657 + t445 * t776 + t482 * t773;
t275 = pkin(10) * t333 + (-pkin(4) + t892) * t349;
t242 = pkin(3) * t283 + t275 * t766 + t760 * t808;
t252 = t767 * t282 + t761 * t884;
t243 = -pkin(3) * t282 - t275 * t760 + t766 * t808;
t249 = t288 * t776 - t299 * t773 + (-t282 * t760 - t283 * t766) * pkin(9);
t790 = qJ(3) * t264 + t243 * t763 + t249 * t757;
t226 = -pkin(2) * t252 - t242 * t761 + t767 * t790;
t228 = -t243 * t757 + t249 * t763 + (-t252 * t761 - t253 * t767) * qJ(3);
t245 = -t253 * t758 + t264 * t764;
t802 = qJ(2) * t245 + t226 * t764 + t228 * t758;
t375 = -pkin(4) * t490 + pkin(10) * t390;
t779 = pkin(9) * t374 - (-pkin(4) * t776 - pkin(10) * t773) * t389;
t279 = pkin(3) * t331 + t375 * t766 + t760 * t779;
t284 = t767 * t330 + t761 * t882;
t280 = -pkin(3) * t330 - t375 * t760 + t766 * t779;
t281 = -(pkin(4) * t773 - pkin(10) * t776) * t389 + (-t330 * t760 - t331 * t766) * pkin(9);
t788 = qJ(3) * t312 + t280 * t763 + t281 * t757;
t239 = -pkin(2) * t284 - t279 * t761 + t767 * t788;
t246 = -t280 * t757 + t281 * t763 + (-t284 * t761 - t285 * t767) * qJ(3);
t267 = -t285 * t758 + t312 * t764;
t801 = qJ(2) * t267 + t239 * t764 + t246 * t758;
t334 = pkin(10) * t560 + t345 * t772 + (-pkin(4) - t944) * t584;
t277 = pkin(3) * t466 + t334 * t766 + t760 * t807;
t378 = t767 * t465 + t761 * t866;
t278 = -pkin(3) * t465 - t334 * t760 + t766 * t807;
t291 = t339 * t776 - t342 * t773 + (-t465 * t760 - t466 * t766) * pkin(9);
t789 = qJ(3) * t417 + t278 * t763 + t291 * t757;
t251 = -pkin(2) * t378 - t277 * t761 + t767 * t789;
t257 = -t278 * t757 + t291 * t763 + (-t378 * t761 - t379 * t767) * qJ(3);
t346 = -t379 * t758 + t417 * t764;
t800 = qJ(2) * t346 + t251 * t764 + t257 * t758;
t347 = -pkin(4) * t607 + pkin(10) * t568 + t391 * t775 + t428 * t772;
t295 = pkin(3) * t473 + t347 * t766 + t760 * t806;
t393 = t767 * t472 + t761 * t864;
t296 = -pkin(3) * t472 - t347 * t760 + t766 * t806;
t314 = t354 * t776 - t414 * t773 + (-t472 * t760 - t473 * t766) * pkin(9);
t787 = qJ(3) * t431 + t296 * t763 + t314 * t757;
t259 = -pkin(2) * t393 - t295 * t761 + t767 * t787;
t265 = -t296 * t757 + t314 * t763 + (-t393 * t761 - t394 * t767) * qJ(3);
t357 = -t394 * t758 + t431 * t764;
t799 = qJ(2) * t357 + t259 * t764 + t265 * t758;
t353 = -pkin(4) * t615 + pkin(10) * t570 + t392 * t775 + t429 * t772;
t297 = pkin(3) * t480 + t353 * t766 + t760 * t805;
t395 = t767 * t479 + t761 * t863;
t298 = -pkin(3) * t479 - t353 * t760 + t766 * t805;
t315 = t355 * t776 - t415 * t773 + (-t479 * t760 - t480 * t766) * pkin(9);
t786 = qJ(3) * t432 + t298 * t763 + t315 * t757;
t261 = -pkin(2) * t395 - t297 * t761 + t767 * t786;
t266 = -t298 * t757 + t315 * t763 + (-t395 * t761 - t396 * t767) * qJ(3);
t358 = -t396 * t758 + t432 * t764;
t798 = qJ(2) * t358 + t261 * t764 + t266 * t758;
t335 = t767 * t411 + t761 * t871;
t361 = pkin(3) * t412 + t760 * t943;
t356 = (-t411 * t760 - t412 * t766) * pkin(9);
t360 = -pkin(3) * t411 + t766 * t943;
t784 = qJ(3) * t359 + t356 * t757 + t360 * t763;
t272 = -pkin(2) * t335 - t361 * t761 + t767 * t784;
t276 = t356 * t763 - t360 * t757 + (-t335 * t761 - t336 * t767) * qJ(3);
t311 = -t336 * t758 + t359 * t764;
t797 = qJ(2) * t311 + t272 * t764 + t276 * t758;
t385 = pkin(4) * t729 + pkin(10) * t726 + t390;
t340 = pkin(3) * t676 + t385 * t766 + t760 * t890;
t591 = t767 * t675 + t761 * t826;
t341 = -pkin(3) * t675 - t385 * t760 + t766 * t890;
t382 = t776 * t389 + (-t675 * t760 - t676 * t766) * pkin(9);
t785 = qJ(3) * t628 + t341 * t763 + t382 * t757;
t290 = -pkin(2) * t591 - t340 * t761 + t767 * t785;
t313 = -t341 * t757 + t382 * t763 + (-t591 * t761 - t592 * t767) * qJ(3);
t553 = -t592 * t758 + t628 * t764;
t796 = qJ(2) * t553 + t290 * t764 + t313 * t758;
t477 = pkin(4) * t725 + pkin(10) * t693 - t937;
t370 = pkin(3) * t612 + t477 * t766 + t760 * t804;
t530 = t767 * t610 + t761 * t837;
t372 = -pkin(3) * t610 - t477 * t760 + t766 * t804;
t386 = -t444 * t773 + t481 * t776 + (-t610 * t760 - t612 * t766) * pkin(9);
t783 = qJ(3) * t575 + t372 * t763 + t386 * t757;
t303 = -pkin(2) * t530 - t370 * t761 + t767 * t783;
t322 = -t372 * t757 + t386 * t763 + (-t530 * t761 - t532 * t767) * qJ(3);
t483 = -t532 * t758 + t575 * t764;
t795 = qJ(2) * t483 + t303 * t764 + t322 * t758;
t476 = -pkin(4) * t722 + pkin(10) * t695 + t938;
t371 = pkin(3) * t613 + t476 * t766 + t760 * t803;
t531 = t767 * t611 + t761 * t836;
t373 = -pkin(3) * t611 - t476 * t760 + t766 * t803;
t387 = -t445 * t773 + t482 * t776 + (-t611 * t760 - t613 * t766) * pkin(9);
t782 = qJ(3) * t576 + t373 * t763 + t387 * t757;
t304 = -pkin(2) * t531 - t371 * t761 + t767 * t782;
t323 = -t373 * t757 + t387 * t763 + (-t531 * t761 - t533 * t767) * qJ(3);
t484 = -t533 * t758 + t576 * t764;
t794 = qJ(2) * t484 + t304 * t764 + t323 * t758;
t441 = pkin(3) * t709 - t494 * t766 + t760 * t888;
t642 = t767 * t707 + t761 * t820;
t443 = -pkin(3) * t707 + t494 * t760 + t766 * t888;
t521 = -t913 + (-t707 * t760 - t709 * t766) * pkin(9);
t780 = qJ(3) * t673 + t443 * t763 + t521 * t757;
t366 = -pkin(2) * t642 - t441 * t761 + t767 * t780;
t397 = -t443 * t757 + t521 * t763 + (-t642 * t761 - t645 * t767) * qJ(3);
t595 = -t645 * t758 + t673 * t764;
t793 = qJ(2) * t595 + t366 * t764 + t397 * t758;
t440 = -pkin(3) * t708 - t495 * t766 + t760 * t889;
t442 = pkin(3) * t706 + t495 * t760 + t766 * t889;
t522 = -t912 + (t706 * t760 + t708 * t766) * pkin(9);
t781 = qJ(3) * t672 + t442 * t763 + t522 * t757;
t367 = pkin(2) * t640 - t440 * t761 + t767 * t781;
t398 = -t442 * t757 + t522 * t763 + (t640 * t761 + t643 * t767) * qJ(3);
t792 = qJ(2) * t594 + t367 * t764 + t398 * t758;
t492 = -t519 * t761 - t916;
t425 = (-t492 * t761 - t493 * t767) * qJ(3);
t433 = -t493 * t758 + t520 * t764;
t434 = -pkin(2) * t492 + t767 * t941;
t791 = qJ(2) * t433 + t425 * t758 + t434 * t764;
t703 = (-t760 * t918 + t766 * t767) * qJDD(4);
t668 = -t704 * t758 + t764 * t899;
t635 = -t703 * t762 + t768 * t809;
t618 = t658 * t762 + t764 * t914;
t617 = t659 * t762 - t758 * t914;
t602 = t604 * t768;
t600 = t767 * t681 + t761 * t824;
t579 = -t603 * t768 + t917;
t578 = -t603 * t762 - t914;
t563 = -t601 * t758 + t646 * t764;
t558 = -t762 * t642 + t768 * t828;
t555 = t768 * t642 + t762 * t828;
t550 = t767 * t625 + t761 * t832;
t549 = t767 * t624 + t761 * t833;
t546 = t767 * t621 + t761 * t834;
t545 = t767 * t620 + t761 * t835;
t539 = -t580 * t767 + t619 * t918;
t538 = -t581 * t767 - t757 * t920;
t529 = -pkin(1) * t578 + t768 * t942;
t528 = -t579 * t759 + t604 * t765;
t527 = t579 * t765 + t604 * t759;
t523 = t767 * t605 + t761 * t838;
t518 = (-t578 * t762 - t579 * t768) * qJ(2);
t516 = t520 * t761;
t515 = -t762 * t600 + t768 * t839;
t509 = -t558 * t759 + t595 * t765;
t507 = t558 * t765 + t595 * t759;
t505 = -t540 * t758 - t763 * t933;
t504 = -t541 * t758 - t757 * t933;
t502 = -t762 * t591 + t768 * t842;
t501 = t768 * t591 + t762 * t842;
t500 = -t552 * t758 + t590 * t764;
t499 = -t551 * t758 + t589 * t764;
t498 = -t548 * t758 + t588 * t764;
t497 = -t547 * t758 + t587 * t764;
t471 = -t524 * t758 + t566 * t764;
t464 = -t762 * t538 + t768 * t815;
t463 = -t762 * t539 + t768 * t814;
t462 = -t502 * t759 + t553 * t765;
t461 = -t517 * t758 + t519 * t764;
t460 = t502 * t765 + t553 * t759;
t459 = -t762 * t550 + t768 * t849;
t458 = -t762 * t549 + t768 * t850;
t457 = -t762 * t546 + t768 * t851;
t456 = -t762 * t545 + t768 * t852;
t454 = t767 * t543 + t761 * t853;
t439 = -t762 * t531 + t768 * t854;
t438 = -t762 * t530 + t768 * t855;
t437 = t768 * t531 + t762 * t854;
t436 = t768 * t530 + t762 * t855;
t435 = pkin(2) * t493 + t761 * t941;
t430 = -t762 * t523 + t768 * t856;
t420 = t767 * t512 + t761 * t858;
t419 = t767 * t511 + t761 * t859;
t416 = -t762 * t516 + t768 * t857;
t413 = -t455 * t758 + t496 * t764;
t408 = t767 * t486 + t761 * t861;
t407 = t767 * t485 + t761 * t862;
t406 = -t762 * t492 + t768 * t860;
t405 = t768 * t492 + t762 * t860;
t404 = -t439 * t759 + t484 * t765;
t403 = -t438 * t759 + t483 * t765;
t402 = t439 * t765 + t484 * t759;
t401 = t438 * t765 + t483 * t759;
t384 = -t422 * t758 + t470 * t764;
t383 = -t421 * t758 + t469 * t764;
t380 = t767 * t467 + t761 * t865;
t376 = -t762 * t454 + t768 * t867;
t369 = -t410 * t758 + t450 * t764;
t368 = -t409 * t758 + t449 * t764;
t365 = -pkin(2) * t643 + t440 * t767 + t761 * t781;
t364 = pkin(2) * t645 + t441 * t767 + t761 * t780;
t363 = -t406 * t759 + t433 * t765;
t362 = t406 * t765 + t433 * t759;
t352 = -t762 * t420 + t768 * t869;
t351 = -t762 * t419 + t768 * t870;
t348 = -t381 * t758 + t418 * t764;
t343 = t767 * t423 + t761 * t868;
t338 = -t762 * t408 + t768 * t872;
t337 = -t762 * t407 + t768 * t873;
t329 = -t762 * t395 + t768 * t874;
t328 = t768 * t395 + t762 * t874;
t327 = -t762 * t393 + t768 * t875;
t326 = t768 * t393 + t762 * t875;
t325 = -t367 * t758 + t398 * t764 + (t556 * t768 + t762 * t956) * qJ(2);
t324 = -t366 * t758 + t397 * t764 + (-t555 * t762 - t558 * t768) * qJ(2);
t321 = -t762 * t380 + t768 * t877;
t320 = t425 * t764 - t434 * t758 + (-t405 * t762 - t406 * t768) * qJ(2);
t319 = -t762 * t378 + t768 * t878;
t318 = t768 * t378 + t762 * t878;
t317 = -t344 * t758 + t377 * t764;
t316 = -pkin(1) * t405 - t435 * t762 + t768 * t791;
t310 = -t329 * t759 + t358 * t765;
t309 = t329 * t765 + t358 * t759;
t308 = pkin(1) * t956 - t365 * t762 + t768 * t792;
t307 = -pkin(1) * t555 - t364 * t762 + t768 * t793;
t306 = -t327 * t759 + t357 * t765;
t305 = t327 * t765 + t357 * t759;
t302 = pkin(2) * t533 + t371 * t767 + t761 * t782;
t301 = pkin(2) * t532 + t370 * t767 + t761 * t783;
t294 = -t319 * t759 + t346 * t765;
t293 = t319 * t765 + t346 * t759;
t292 = -t762 * t343 + t768 * t879;
t289 = pkin(2) * t592 + t340 * t767 + t761 * t785;
t287 = -t762 * t335 + t768 * t880;
t286 = t768 * t335 + t762 * t880;
t274 = -t304 * t758 + t323 * t764 + (-t437 * t762 - t439 * t768) * qJ(2);
t273 = -t303 * t758 + t322 * t764 + (-t436 * t762 - t438 * t768) * qJ(2);
t271 = pkin(2) * t336 + t361 * t767 + t761 * t784;
t270 = -t290 * t758 + t313 * t764 + (-t501 * t762 - t502 * t768) * qJ(2);
t269 = -t287 * t759 + t311 * t765;
t268 = t287 * t765 + t311 * t759;
t263 = -pkin(1) * t437 - t302 * t762 + t768 * t794;
t262 = -pkin(1) * t436 - t301 * t762 + t768 * t795;
t260 = pkin(2) * t396 + t297 * t767 + t761 * t786;
t258 = pkin(2) * t394 + t295 * t767 + t761 * t787;
t256 = -pkin(1) * t501 - t289 * t762 + t768 * t796;
t255 = -t762 * t284 + t768 * t883;
t254 = t768 * t284 + t762 * t883;
t250 = pkin(2) * t379 + t277 * t767 + t761 * t789;
t248 = -t255 * t759 + t267 * t765;
t247 = t255 * t765 + t267 * t759;
t244 = -t272 * t758 + t276 * t764 + (-t286 * t762 - t287 * t768) * qJ(2);
t241 = -t261 * t758 + t266 * t764 + (-t328 * t762 - t329 * t768) * qJ(2);
t240 = -t259 * t758 + t265 * t764 + (-t326 * t762 - t327 * t768) * qJ(2);
t238 = pkin(2) * t285 + t279 * t767 + t761 * t788;
t237 = -pkin(1) * t286 - t271 * t762 + t768 * t797;
t236 = -pkin(1) * t328 - t260 * t762 + t768 * t798;
t235 = -t251 * t758 + t257 * t764 + (-t318 * t762 - t319 * t768) * qJ(2);
t234 = -pkin(1) * t326 - t258 * t762 + t768 * t799;
t233 = -t762 * t252 + t768 * t885;
t232 = t768 * t252 + t762 * t885;
t231 = -pkin(1) * t318 - t250 * t762 + t768 * t800;
t230 = -t233 * t759 + t245 * t765;
t229 = t233 * t765 + t245 * t759;
t227 = -t239 * t758 + t246 * t764 + (-t254 * t762 - t255 * t768) * qJ(2);
t225 = pkin(2) * t253 + t242 * t767 + t761 * t790;
t224 = -pkin(1) * t254 - t238 * t762 + t768 * t801;
t223 = -t226 * t758 + t228 * t764 + (-t232 * t762 - t233 * t768) * qJ(2);
t222 = -pkin(1) * t232 - t225 * t762 + t768 * t802;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t684, 0, 0, 0, 0, 0, 0, 0, 0, 0, t528, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, 0, 0, 0, 0, 0, 0, t509, t508, 0, t269, 0, 0, 0, 0, 0, 0, t403, t404, t462, t248, 0, 0, 0, 0, 0, 0, t306, t310, t294, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t683, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, 0, 0, 0, 0, 0, 0, t507, -t959, 0, t268, 0, 0, 0, 0, 0, 0, t401, t402, t460, t247, 0, 0, 0, 0, 0, 0, t305, t309, t293, t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t911, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, 0, 0, 0, 0, 0, 0, t555, -t956, 0, t286, 0, 0, 0, 0, 0, 0, t436, t437, t501, t254, 0, 0, 0, 0, 0, 0, t326, t328, t318, t232; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t950, -t949, -t683, -qJ(1) * t683, 0, 0, 0, 0, 0, 0, -t618 * t759 - t758 * t929, -t617 * t759 - t764 * t929, -t602 * t759 + t603 * t765, -qJ(1) * t527 + t518 * t765 - t529 * t759, 0, 0, 0, 0, 0, 0, -t463 * t759 + t504 * t765, -t464 * t759 + t505 * t765, -t416 * t759 + t461 * t765, -qJ(1) * t362 - t316 * t759 + t320 * t765, 0, 0, -t508, 0, t509, -t635 * t759 + t668 * t765, -qJ(1) * t507 - t307 * t759 + t324 * t765, qJ(1) * t959 - t308 * t759 + t325 * t765, -t292 * t759 + t317 * t765, -qJ(1) * t268 - t237 * t759 + t244 * t765, -t459 * t759 + t500 * t765, -t430 * t759 + t471 * t765, -t457 * t759 + t498 * t765, -t458 * t759 + t499 * t765, -t456 * t759 + t497 * t765, -t515 * t759 + t563 * t765, -qJ(1) * t401 - t262 * t759 + t273 * t765, -qJ(1) * t402 - t263 * t759 + t274 * t765, -qJ(1) * t460 - t256 * t759 + t270 * t765, -qJ(1) * t247 - t224 * t759 + t227 * t765, -t352 * t759 + t384 * t765, -t321 * t759 + t348 * t765, -t337 * t759 + t368 * t765, -t351 * t759 + t383 * t765, -t338 * t759 + t369 * t765, -t376 * t759 + t413 * t765, -qJ(1) * t305 - t234 * t759 + t240 * t765, -qJ(1) * t309 - t236 * t759 + t241 * t765, -qJ(1) * t293 - t231 * t759 + t235 * t765, -qJ(1) * t229 - t222 * t759 + t223 * t765; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t949, -t950, t684, qJ(1) * t684, 0, 0, 0, 0, 0, 0, t618 * t765 - t758 * t930, t617 * t765 - t764 * t930, t602 * t765 + t603 * t759, qJ(1) * t528 + t518 * t759 + t529 * t765, 0, 0, 0, 0, 0, 0, t463 * t765 + t504 * t759, t464 * t765 + t505 * t759, t416 * t765 + t461 * t759, qJ(1) * t363 + t316 * t765 + t320 * t759, 0, 0, t959, 0, t507, t635 * t765 + t668 * t759, qJ(1) * t509 + t307 * t765 + t324 * t759, qJ(1) * t508 + t308 * t765 + t325 * t759, t292 * t765 + t317 * t759, qJ(1) * t269 + t237 * t765 + t244 * t759, t459 * t765 + t500 * t759, t430 * t765 + t471 * t759, t457 * t765 + t498 * t759, t458 * t765 + t499 * t759, t456 * t765 + t497 * t759, t515 * t765 + t563 * t759, qJ(1) * t403 + t262 * t765 + t273 * t759, qJ(1) * t404 + t263 * t765 + t274 * t759, qJ(1) * t462 + t256 * t765 + t270 * t759, qJ(1) * t248 + t224 * t765 + t227 * t759, t352 * t765 + t384 * t759, t321 * t765 + t348 * t759, t337 * t765 + t368 * t759, t351 * t765 + t383 * t759, t338 * t765 + t369 * t759, t376 * t765 + t413 * t759, qJ(1) * t306 + t234 * t765 + t240 * t759, qJ(1) * t310 + t236 * t765 + t241 * t759, qJ(1) * t294 + t231 * t765 + t235 * t759, qJ(1) * t230 + t222 * t765 + t223 * t759; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t897, t731, 0, 0, 0, 0, 0, 0, 0, 0, -t658 * t768 + t764 * t917, -t659 * t768 - t758 * t917, t604 * t762, pkin(1) * t579 + t762 * t942, 0, 0, 0, 0, 0, 0, t539 * t768 + t762 * t814, t768 * t538 + t762 * t815, t768 * t516 + t762 * t857, pkin(1) * t406 + t435 * t768 + t762 * t791, 0, 0, t956, 0, t555, t703 * t768 + t762 * t809, pkin(1) * t558 + t364 * t768 + t762 * t793, -pkin(1) * t556 + t365 * t768 + t762 * t792, t768 * t343 + t762 * t879, pkin(1) * t287 + t271 * t768 + t762 * t797, t768 * t550 + t762 * t849, t768 * t523 + t762 * t856, t768 * t546 + t762 * t851, t768 * t549 + t762 * t850, t768 * t545 + t762 * t852, t768 * t600 + t762 * t839, pkin(1) * t438 + t301 * t768 + t762 * t795, pkin(1) * t439 + t302 * t768 + t762 * t794, pkin(1) * t502 + t289 * t768 + t762 * t796, pkin(1) * t255 + t238 * t768 + t762 * t801, t768 * t420 + t762 * t869, t768 * t380 + t762 * t877, t768 * t407 + t762 * t873, t768 * t419 + t762 * t870, t768 * t408 + t762 * t872, t768 * t454 + t762 * t867, pkin(1) * t327 + t258 * t768 + t762 * t799, pkin(1) * t329 + t260 * t768 + t762 * t798, pkin(1) * t319 + t250 * t768 + t762 * t800, pkin(1) * t233 + t225 * t768 + t762 * t802;];
tauB_reg  = t1;
