% Calculate inertial parameters regressor of coriolis matrix for
% S6PPPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d4,d5,d6,theta1,theta2,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPPRRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PPPRRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:40:42
% EndTime: 2019-03-08 18:40:52
% DurationCPUTime: 8.20s
% Computational Cost: add. (17118->435), mult. (51438->762), div. (0->0), fcn. (65276->16), ass. (0->332)
t465 = sin(qJ(6));
t677 = 0.2e1 * t465;
t469 = cos(qJ(5));
t654 = -t469 / 0.2e1;
t460 = t465 ^ 2;
t468 = cos(qJ(6));
t462 = t468 ^ 2;
t450 = t460 - t462;
t464 = sin(pkin(8));
t641 = sin(pkin(6));
t529 = cos(pkin(13)) * t641;
t644 = cos(pkin(7));
t508 = t644 * t529;
t527 = t641 * sin(pkin(13));
t640 = sin(pkin(7));
t642 = cos(pkin(14));
t528 = t642 * t640;
t639 = sin(pkin(14));
t645 = cos(pkin(6));
t472 = -t508 * t642 + t527 * t639 - t528 * t645;
t476 = -t529 * t640 + t644 * t645;
t643 = cos(pkin(8));
t676 = -t476 * t464 + t472 * t643;
t675 = t644 * t464 + t643 * t528;
t466 = sin(qJ(5));
t589 = t466 * qJD(4);
t570 = t468 * t589;
t503 = qJD(5) * t450 + t570 * t677;
t526 = t640 * t639;
t375 = t508 * t639 + t526 * t645 + t527 * t642;
t467 = sin(qJ(4));
t652 = cos(qJ(4));
t255 = t375 * t467 + t652 * t676;
t635 = t255 * t468;
t256 = t375 * t652 - t467 * t676;
t470 = t464 * t472 + t476 * t643;
t180 = t256 * t469 + t466 * t470;
t637 = t180 * t465;
t109 = -t635 + t637;
t674 = t109 / 0.2e1;
t607 = t468 * t469;
t634 = t256 * t465;
t133 = -t255 * t607 + t634;
t673 = t133 / 0.2e1;
t378 = t467 * t526 - t652 * t675;
t611 = t468 * t378;
t379 = t467 * t675 + t652 * t526;
t480 = -t464 * t528 + t643 * t644;
t319 = t469 * t379 + t466 * t480;
t621 = t465 * t319;
t257 = -t611 + t621;
t671 = -t257 / 0.2e1;
t620 = t465 * t379;
t282 = -t378 * t607 + t620;
t670 = t282 / 0.2e1;
t669 = t319 / 0.2e1;
t668 = -t378 / 0.2e1;
t575 = t464 * t652;
t544 = t468 * t575;
t623 = t464 * t467;
t425 = t466 * t643 + t469 * t623;
t618 = t465 * t425;
t382 = t544 + t618;
t667 = -t382 / 0.2e1;
t573 = t469 * t652;
t612 = t467 * t468;
t408 = (-t465 * t573 + t612) * t464;
t666 = -t408 / 0.2e1;
t615 = t465 * t467;
t409 = (t468 * t573 + t615) * t464;
t665 = t409 / 0.2e1;
t616 = t465 * t466;
t456 = pkin(10) * t616;
t646 = t469 * pkin(11);
t648 = t466 * pkin(5);
t445 = -t646 + t648;
t608 = t468 * t445;
t419 = t456 + t608;
t664 = -t419 / 0.2e1;
t613 = t466 * t468;
t585 = pkin(10) * t613;
t617 = t465 * t445;
t420 = -t585 + t617;
t663 = t420 / 0.2e1;
t424 = t466 * t623 - t469 * t643;
t662 = -t424 / 0.2e1;
t661 = t425 / 0.2e1;
t660 = -t465 / 0.2e1;
t659 = t465 / 0.2e1;
t658 = -t466 / 0.2e1;
t657 = t467 / 0.2e1;
t656 = -t468 / 0.2e1;
t655 = t468 / 0.2e1;
t653 = t469 / 0.2e1;
t461 = t466 ^ 2;
t651 = pkin(10) * t461;
t463 = t469 ^ 2;
t650 = pkin(10) * t463;
t649 = t180 * pkin(10);
t647 = t469 * pkin(10);
t179 = t256 * t466 - t469 * t470;
t638 = t179 * t466;
t636 = t180 * t469;
t136 = t255 * t466;
t633 = t256 * t468;
t632 = t257 * t465;
t631 = t257 * t469;
t318 = t379 * t466 - t469 * t480;
t630 = t318 * t466;
t286 = t378 * t466;
t629 = t382 * t465;
t628 = t382 * t469;
t534 = -pkin(5) * t469 - t466 * pkin(11);
t522 = -pkin(4) + t534;
t614 = t465 * t469;
t586 = pkin(10) * t614;
t410 = -t468 * t522 + t586;
t627 = t410 * t469;
t584 = pkin(10) * t607;
t411 = t465 * t522 + t584;
t626 = t411 * t469;
t625 = t461 * t465;
t624 = t461 * t468;
t622 = t465 * t109;
t365 = t465 * t378;
t619 = t465 * t410;
t315 = t468 * t319;
t610 = t468 * t379;
t609 = t468 * t411;
t421 = t468 * t425;
t606 = t469 * t319;
t605 = t315 + t365;
t604 = -t460 - t462;
t451 = t463 - t461;
t603 = qJD(4) * t464;
t602 = qJD(4) * t469;
t601 = qJD(5) * t465;
t600 = qJD(5) * t468;
t599 = qJD(6) * t465;
t598 = qJD(6) * t468;
t597 = qJD(6) * t469;
t596 = t256 * qJD(4);
t595 = t379 * qJD(4);
t594 = t425 * qJD(5);
t426 = (t462 / 0.2e1 - t460 / 0.2e1) * t466;
t593 = t426 * qJD(6);
t435 = t451 * t465;
t592 = t435 * qJD(4);
t436 = t451 * t468;
t591 = t436 * qJD(4);
t590 = t451 * qJD(4);
t588 = t466 * qJD(5);
t587 = t469 * qJD(5);
t583 = -t652 / 0.2e1;
t582 = pkin(4) * t602;
t581 = pkin(4) * t589;
t580 = pkin(11) * t660;
t579 = pkin(11) * t655;
t578 = pkin(10) * t669;
t577 = pkin(10) * t661;
t576 = t648 / 0.2e1;
t574 = t466 * t652;
t572 = t652 * t461;
t571 = t652 * t463;
t569 = t465 * t600;
t568 = t468 * t588;
t567 = t465 * t597;
t566 = t468 * t597;
t565 = t465 * t598;
t564 = t466 * t587;
t454 = t469 * t589;
t563 = t408 * t659;
t562 = t424 * t658;
t561 = t621 / 0.2e1;
t560 = -t616 / 0.2e1;
t559 = t616 / 0.2e1;
t558 = t614 / 0.2e1;
t557 = t613 / 0.2e1;
t556 = t612 / 0.2e1;
t555 = t611 / 0.2e1;
t554 = t607 / 0.2e1;
t553 = pkin(11) * t604;
t552 = qJD(5) * t652;
t550 = t605 * t468;
t549 = qJD(4) * (-t461 - t463);
t548 = qJD(5) * t604;
t547 = -qJD(6) + t602;
t546 = t424 * t574;
t545 = t465 * t575;
t543 = t465 * t568;
t542 = t461 * t565;
t540 = qJD(4) * t575;
t539 = -t575 / 0.2e1;
t538 = t575 / 0.2e1;
t537 = t574 / 0.2e1;
t536 = -t573 / 0.2e1;
t535 = t573 / 0.2e1;
t533 = -t256 / 0.2e1 + t638 / 0.2e1;
t532 = t379 / 0.2e1 - t630 / 0.2e1;
t531 = t635 / 0.2e1 + t674;
t530 = t555 + t257 / 0.2e1;
t525 = t180 * t468 + t255 * t465;
t524 = -t419 * t465 + t420 * t468;
t523 = t468 * t539;
t521 = t547 * t466;
t520 = t421 - t545;
t519 = t646 / 0.2e1 - t648 / 0.2e1;
t505 = -t445 / 0.2e1 + t519;
t380 = t505 * t465;
t518 = pkin(5) * t600 + qJD(4) * t380;
t381 = t505 * t468;
t517 = pkin(5) * t601 - qJD(4) * t381;
t132 = t255 * t614 + t633;
t516 = t132 * t660 + t133 * t655;
t281 = t378 * t614 + t610;
t515 = t281 * t659 + t282 * t656;
t514 = t409 * t656 + t563;
t513 = t425 * t654 + t562;
t511 = t468 * t521;
t393 = qJD(4) * t426 + t569;
t510 = t525 * t468;
t509 = t520 * t468;
t506 = -t628 / 0.2e1 + t424 * t560;
t383 = qJD(4) * t465 * t624 - qJD(5) * t426;
t437 = t450 * t461;
t504 = -qJD(4) * t437 + 0.2e1 * t543;
t502 = t516 * pkin(11);
t11 = t520 * t673 + t525 * t665 + t132 * t667 + t109 * t666 + (t179 * t538 + t255 * t662) * t466;
t13 = -t109 * t132 + t133 * t525 - t136 * t179;
t6 = t605 * t673 + t525 * t670 + t132 * t671 - t109 * t281 / 0.2e1 + (-t255 * t318 / 0.2e1 + t179 * t668) * t466;
t501 = t13 * qJD(1) + t6 * qJD(2) + t11 * qJD(3);
t477 = -t509 / 0.2e1 - t629 / 0.2e1 + t661;
t478 = -t510 / 0.2e1 - t622 / 0.2e1 + t180 / 0.2e1;
t12 = t179 * t477 + t424 * t478;
t14 = (t180 - t510 - t622) * t179;
t488 = -t550 / 0.2e1 - t632 / 0.2e1 + t669;
t7 = t179 * t488 + t318 * t478;
t500 = t14 * qJD(1) + t7 * qJD(2) + t12 * qJD(3);
t38 = t520 * t670 + t605 * t665 + t281 * t667 + t257 * t666 + (t318 * t538 + t378 * t662) * t466;
t51 = -t257 * t281 + t282 * t605 - t286 * t318;
t499 = t6 * qJD(1) + t51 * qJD(2) + t38 * qJD(3);
t40 = t318 * t477 + t424 * t488;
t52 = (t319 - t550 - t632) * t318;
t498 = t7 * qJD(1) + t52 * qJD(2) + t40 * qJD(3);
t496 = -t636 / 0.2e1 - t533;
t19 = t496 * t378 + (-t606 / 0.2e1 + t532) * t255;
t27 = t513 * t255 + (t179 * t537 + t180 * t535 + t255 * t657 + t256 * t583) * t464;
t28 = (t256 - t636 - t638) * t255;
t497 = t28 * qJD(1) + t19 * qJD(2) + t27 * qJD(3);
t192 = -t382 * t408 + t409 * t520 + t464 * t546;
t495 = t11 * qJD(1) + t38 * qJD(2) + t192 * qJD(3);
t112 = (t379 - t606 - t630) * t378;
t77 = t513 * t378 + (t318 * t537 + t319 * t535 + t378 * t657 + t379 * t583) * t464;
t494 = t19 * qJD(1) + t112 * qJD(2) + t77 * qJD(3);
t190 = (t425 - t509 - t629) * t424;
t493 = t12 * qJD(1) + t40 * qJD(2) + t190 * qJD(3);
t314 = (t425 * t573 - t467 * t575 + t546) * t464;
t492 = t27 * qJD(1) + t77 * qJD(2) + t314 * qJD(3);
t317 = t420 * t469 + (-t411 + 0.2e1 * t584) * t466;
t491 = t317 * qJD(4);
t490 = t520 * t660;
t489 = t609 / 0.2e1 + t619 / 0.2e1 - t647 / 0.2e1;
t487 = (t468 * t536 - t615 / 0.2e1) * t464;
t258 = pkin(10) ^ 2 * t466 * t469 - t410 * t419 + t411 * t420;
t474 = t257 * t664 - t318 * t489 + t605 * t663;
t31 = (pkin(5) * t668 + t578) * t466 + t515 * pkin(11) + t474;
t481 = t419 * t674 - t525 * t420 / 0.2e1;
t4 = t179 * t489 + t255 * t576 + t649 * t658 + t481 + t502;
t473 = t382 * t664 - t424 * t489 + t520 * t663;
t96 = (pkin(5) * t538 + t577) * t466 + t514 * pkin(11) + t473;
t486 = -t4 * qJD(1) + t31 * qJD(2) + t96 * qJD(3) + t258 * qJD(4);
t200 = t469 * t490 + t563 + (t628 / 0.2e1 - t409 / 0.2e1) * t468;
t479 = (t109 * t655 + t525 * t660) * t469;
t21 = t479 - t516;
t227 = (t419 * t466 - t627) * t468 + (t420 * t466 + t626) * t465;
t60 = (t631 / 0.2e1 - t282 / 0.2e1) * t468 + (t605 * t654 + t281 / 0.2e1) * t465;
t485 = t21 * qJD(1) + t60 * qJD(2) + t200 * qJD(3) - t227 * qJD(4);
t222 = (t523 + t382 / 0.2e1 - t618 / 0.2e1) * t466;
t23 = (-t637 / 0.2e1 + t531) * t466;
t316 = t410 * t466 + (t419 - 0.2e1 * t456) * t469;
t73 = (t561 - t530) * t466;
t484 = -t23 * qJD(1) + t73 * qJD(2) - t222 * qJD(3) - t316 * qJD(4);
t115 = t315 * t654 + t532 * t468;
t267 = t421 * t654 + t464 * t556 + t468 * t562;
t33 = t496 * t468;
t377 = -pkin(10) * t624 - t626;
t483 = qJD(1) * t33 + qJD(2) * t115 + qJD(3) * t267 + qJD(4) * t377;
t116 = -t465 * t532 + t469 * t530;
t268 = t487 - t506;
t34 = t465 * t533 + t469 * t531;
t376 = -pkin(10) * t625 - t627;
t482 = qJD(1) * t34 + qJD(2) * t116 + qJD(3) * t268 - qJD(4) * t376;
t458 = t588 / 0.2e1;
t443 = t464 * pkin(10) * t572;
t429 = qJD(6) * t658 + t454;
t364 = t378 * t651;
t363 = t456 + t608 / 0.2e1 + t519 * t468;
t362 = t585 - t617 / 0.2e1 - t519 * t465;
t342 = t424 * t468;
t341 = t424 * t465;
t287 = t378 * t469;
t270 = t520 * t653 + t424 * t557 + (t465 * t536 + t556) * t464;
t269 = t487 + t506;
t241 = t255 * t651;
t224 = t464 * t465 * t537 + t425 * t557 + t520 * t658;
t223 = t382 * t658 + t425 * t559 + t466 * t523;
t205 = t318 * t468;
t204 = t318 * t465;
t199 = (t382 * t655 + t490) * t469 - t514;
t138 = t255 * t469;
t118 = t605 * t653 + t318 * t557 + t378 * t558 + t610 / 0.2e1;
t117 = -t631 / 0.2e1 + t318 * t560 + t378 * t554 - t620 / 0.2e1;
t95 = t408 * t580 + t409 * t579 + t466 * t577 + t539 * t648 + t473;
t76 = t319 * t557 + t378 * t560 + t605 * t658;
t74 = (t555 + t671 + t561) * t466;
t69 = t179 * t468;
t67 = t179 * t465;
t59 = (t257 * t655 + t605 * t660) * t469 - t515;
t37 = qJD(4) * t77;
t36 = t525 * t653 + t179 * t557 + t255 * t558 + t633 / 0.2e1;
t35 = t109 * t654 + t179 * t560 + t255 * t554 - t634 / 0.2e1;
t30 = t281 * t580 + t282 * t579 + t378 * t576 + t466 * t578 + t474;
t25 = t180 * t557 + t255 * t560 + t525 * t658;
t24 = t109 * t658 + t180 * t559 + t255 * t557;
t20 = t479 + t516;
t9 = qJD(4) * t27;
t8 = qJD(4) * t38 + qJD(5) * t40;
t5 = t179 * t647 / 0.2e1 + (t649 / 0.2e1 + t255 * pkin(5) / 0.2e1) * t466 + t502 - t481 - (t609 + t619) * t179 / 0.2e1;
t3 = qJD(4) * t19;
t2 = qJD(4) * t11 + qJD(5) * t12;
t1 = qJD(4) * t6 + qJD(5) * t7;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t13 + qJD(5) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t596, t255 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, t136 * qJD(5) - t469 * t596, qJD(5) * t138 + t256 * t589, t255 * t549 (-pkin(4) * t256 - t255 * t650 - t241) * qJD(4) + t497, 0, 0, 0, 0, 0, 0 (-t132 * t469 - t255 * t625) * qJD(4) + t24 * qJD(5) + t36 * qJD(6) (t133 * t469 - t255 * t624) * qJD(4) + t25 * qJD(5) + t35 * qJD(6), t20 * qJD(5) + (-t132 * t468 - t133 * t465) * t589 (-t132 * t410 + t133 * t411 - t241) * qJD(4) + t5 * qJD(5) + t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t136 - qJD(5) * t180, qJD(4) * t138 + qJD(5) * t179, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t24 + qJD(6) * t67 - t180 * t600, qJD(4) * t25 + qJD(6) * t69 + t180 * t601, t20 * qJD(4) + t179 * t548, t5 * qJD(4) + (-pkin(5) * t180 + t179 * t553) * qJD(5) + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36 * qJD(4) + t67 * qJD(5) - qJD(6) * t525, qJD(4) * t35 + qJD(5) * t69 + qJD(6) * t109, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t112, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t51 + qJD(5) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t595, t378 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, t286 * qJD(5) - t469 * t595, qJD(5) * t287 + t379 * t589, t378 * t549 (-pkin(4) * t379 - t378 * t650 - t364) * qJD(4) + t494, 0, 0, 0, 0, 0, 0 (-t281 * t469 - t365 * t461) * qJD(4) + t74 * qJD(5) + t118 * qJD(6) (t282 * t469 - t461 * t611) * qJD(4) + t76 * qJD(5) + t117 * qJD(6), t59 * qJD(5) + (-t281 * t468 - t282 * t465) * t589 (-t281 * t410 + t282 * t411 - t364) * qJD(4) + t30 * qJD(5) + t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t286 - qJD(5) * t319, qJD(4) * t287 + qJD(5) * t318, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t74 + qJD(6) * t204 - t319 * t600, qJD(4) * t76 + qJD(6) * t205 + t319 * t601, t59 * qJD(4) + t318 * t548, t30 * qJD(4) + (-pkin(5) * t319 + t318 * t553) * qJD(5) + t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118 * qJD(4) + t204 * qJD(5) - qJD(6) * t605, qJD(4) * t117 + qJD(5) * t205 + qJD(6) * t257, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t314, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t192 + qJD(5) * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t467 * t603, -t540, 0, 0, 0, 0, 0, 0, 0, 0 (-t466 * t552 - t467 * t602) * t464 (t467 * t589 - t469 * t552) * t464 (t572 + t571) * t603 (t443 + (-pkin(4) * t467 + pkin(10) * t571) * t464) * qJD(4) + t492, 0, 0, 0, 0, 0, 0 (-t408 * t469 + t461 * t545) * qJD(4) + t223 * qJD(5) + t270 * qJD(6) (t409 * t469 + t461 * t544) * qJD(4) + t224 * qJD(5) + t269 * qJD(6), t199 * qJD(5) + (-t408 * t468 - t409 * t465) * t589 (-t408 * t410 + t409 * t411 + t443) * qJD(4) + t95 * qJD(5) + t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466 * t540 - t594, t424 * qJD(5) - t469 * t540, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t223 + qJD(6) * t341 - t468 * t594, qJD(4) * t224 + qJD(6) * t342 + t465 * t594, t199 * qJD(4) + t424 * t548, t95 * qJD(4) + (-pkin(5) * t425 + t424 * t553) * qJD(5) + t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270 * qJD(4) + t341 * qJD(5) - qJD(6) * t520, qJD(4) * t269 + qJD(5) * t342 + qJD(6) * t382, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497, 0, 0, 0, 0, 0, 0, -qJD(5) * t23 - qJD(6) * t33, -qJD(6) * t34, qJD(5) * t21, -qJD(5) * t4 - t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, 0, 0, 0, 0, 0, 0, qJD(5) * t73 - qJD(6) * t115, -qJD(6) * t116, qJD(5) * t60, qJD(5) * t31 - t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, 0, 0, 0, 0, 0, 0, -qJD(5) * t222 - qJD(6) * t267, -qJD(6) * t268, qJD(5) * t200, qJD(5) * t96 - t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t564, t451 * qJD(5), 0, -t564, 0, 0, -pkin(4) * t588, -pkin(4) * t587, 0, 0, t462 * t564 - t542, t437 * qJD(6) - 0.2e1 * t469 * t543, -t436 * qJD(5) + t466 * t567, t460 * t564 + t542, t435 * qJD(5) + t466 * t566, -t564, -qJD(5) * t316 - qJD(6) * t377, qJD(5) * t317 + qJD(6) * t376, -qJD(5) * t227, qJD(5) * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t590, t587, -t454, -t588, 0, -pkin(10) * t587 - t581, pkin(10) * t588 - t582, 0, 0, t593 + (t462 * t589 + t569) * t469, -0.2e1 * t466 * t565 - t469 * t503, t465 * t588 - t591, -t593 + (t460 * t589 - t569) * t469, t568 + t592, -t429 (t465 * t534 - t584) * qJD(5) + t363 * qJD(6) + t484 (t468 * t534 + t586) * qJD(5) + t362 * qJD(6) + t491, qJD(5) * t524 + t485 (-pkin(5) * t647 + pkin(11) * t524) * qJD(5) + t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383, -t504, t465 * t521, t383, t511, t458, qJD(5) * t363 - qJD(6) * t411 - t483, qJD(5) * t362 + qJD(6) * t410 - t482, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t23, 0, -qJD(4) * t21, qJD(4) * t4 - t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t73, 0, -qJD(4) * t60, -qJD(4) * t31 - t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t222, 0, -qJD(4) * t200, -qJD(4) * t96 - t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, -t590, 0, t454, 0, 0, t581, t582, 0, 0, -t454 * t462 + t593, t511 * t677, -t566 + t591, -t454 * t460 - t593, t567 - t592, t429, qJD(6) * t381 - t484, -qJD(6) * t380 - t491, -t485, -t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t565, -t450 * qJD(6), 0, -t565, 0, 0, -pkin(5) * t599, -pkin(5) * t598, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, -t503, -t547 * t468, -t393, t547 * t465, -t589 / 0.2e1, -pkin(11) * t598 - t517, pkin(11) * t599 - t518, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t33, qJD(4) * t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t115, qJD(4) * t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t267, qJD(4) * t268, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, t504 (-t465 * t589 + t600) * t469, -t383 (-t570 - t601) * t469, t458, -qJD(5) * t381 + t483, qJD(5) * t380 + t482, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, t503, t468 * t602, t393, -t465 * t602, t589 / 0.2e1, t517, t518, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
