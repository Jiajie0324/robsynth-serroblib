% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:45:10
% EndTime: 2019-03-09 01:45:14
% DurationCPUTime: 4.14s
% Computational Cost: add. (5960->292), mult. (10044->385), div. (0->0), fcn. (10754->8), ass. (0->240)
t248 = cos(qJ(4));
t232 = -cos(pkin(9)) * pkin(1) - pkin(2) - pkin(7);
t391 = qJ(5) - t232;
t204 = t391 * t248;
t244 = cos(pkin(10));
t246 = sin(qJ(4));
t284 = t391 * t246;
t371 = sin(pkin(10));
t125 = -t244 * t204 + t371 * t284;
t245 = sin(qJ(6));
t394 = t245 * t125;
t247 = cos(qJ(6));
t393 = t247 * t125;
t392 = 0.2e1 * t245;
t385 = -t371 * t204 - t244 * t284;
t360 = t385 * t245;
t359 = t385 * t247;
t242 = t245 ^ 2;
t243 = t247 ^ 2;
t342 = t242 + t243;
t218 = t244 * t246 + t371 * t248;
t234 = t371 * t246;
t351 = t244 * t248;
t220 = -t234 + t351;
t356 = t220 * t218;
t388 = (-0.1e1 + t342) * t356;
t390 = t388 * qJD(4);
t217 = t220 ^ 2;
t306 = t217 / 0.2e1;
t216 = t218 ^ 2;
t308 = t216 / 0.2e1;
t281 = t308 + t306;
t85 = 0.1e1 / 0.2e1 - t281;
t144 = t247 * t220;
t285 = t144 * t392;
t380 = qJD(4) * pkin(4);
t389 = (-t218 * t244 + t371 * t220) * t380;
t138 = t245 * t218;
t130 = t138 * qJD(6);
t213 = t220 * qJD(4);
t198 = t247 * t213;
t387 = -t198 + t130;
t386 = -t217 - t216;
t304 = t217 - t216;
t384 = -t125 / 0.2e1;
t383 = -t385 / 0.2e1;
t233 = sin(pkin(9)) * pkin(1) + qJ(3);
t222 = t246 * pkin(4) + t233;
t249 = t218 * pkin(5) - t220 * pkin(8) + t222;
t71 = t245 * t249 + t359;
t375 = t71 * t247;
t70 = -t247 * t249 + t360;
t376 = t70 * t245;
t256 = t375 / 0.2e1 + t376 / 0.2e1 + t383;
t381 = t248 * pkin(4);
t145 = t220 * pkin(5) + t218 * pkin(8) + t381;
t349 = t245 * t145;
t77 = t393 + t349;
t378 = t247 * t77;
t347 = t247 * t145;
t76 = t347 - t394;
t379 = t245 * t76;
t257 = t378 / 0.2e1 - t379 / 0.2e1 + t384;
t3 = t218 * t257 + t220 * t256;
t382 = t3 * qJD(4);
t28 = t71 * t245 - t247 * t70;
t373 = t77 * t245;
t374 = t76 * t247;
t6 = (t373 + t374) * t220 - t28 * t218;
t377 = t6 * qJD(1);
t8 = (-t70 + t360) * t220 + (t76 + t394) * t218;
t372 = t8 * qJD(1);
t370 = qJD(1) * t28;
t140 = t245 * t220;
t35 = t125 * t140 + t70 * t218;
t369 = qJD(1) * t35;
t36 = -t125 * t144 - t71 * t218;
t368 = qJD(1) * t36;
t363 = t125 * t220;
t43 = -t218 * t385 - t363;
t367 = qJD(1) * t43;
t307 = -t217 / 0.2e1;
t164 = t247 * t307;
t309 = -t216 / 0.2e1;
t73 = t308 + t309;
t270 = t306 + t73;
t60 = t247 * t270 + t164;
t366 = qJD(1) * t60;
t86 = -0.1e1 / 0.2e1 - t281;
t78 = t86 * t245;
t365 = qJD(1) * t78;
t288 = t243 / 0.2e1 + t242 / 0.2e1;
t235 = t371 * pkin(4) + pkin(8);
t352 = t235 * t218;
t236 = -pkin(4) * t244 - pkin(5);
t354 = t220 * t236;
t250 = -t288 * t352 + t354 / 0.2e1;
t268 = -t374 / 0.2e1 - t373 / 0.2e1;
t13 = t250 + t268;
t358 = t13 * qJD(1);
t357 = t218 * t236;
t355 = t220 * t235;
t353 = t220 * t244;
t260 = -t288 * t216 + t307;
t57 = t260 - t288;
t346 = t57 * qJD(1);
t280 = 0.1e1 / 0.2e1 - t288;
t65 = t280 * t356;
t345 = t65 * qJD(1);
t344 = t73 * qJD(1);
t343 = t86 * qJD(1);
t230 = t243 - t242;
t102 = t86 * t247;
t341 = qJD(1) * t102;
t104 = t304 * t245;
t340 = qJD(1) * t104;
t105 = t386 * t245;
t339 = qJD(1) * t105;
t106 = t304 * t247;
t338 = qJD(1) * t106;
t114 = t218 * t381 + t222 * t220;
t337 = qJD(1) * t114;
t115 = -t222 * t218 + t220 * t381;
t336 = qJD(1) * t115;
t149 = t386 * t247;
t335 = qJD(1) * t149;
t334 = qJD(1) * t222;
t333 = qJD(3) * t218;
t142 = t247 * t218;
t332 = qJD(4) * t142;
t331 = qJD(4) * t247;
t330 = qJD(5) * t247;
t329 = qJD(6) * t245;
t328 = qJD(6) * t247;
t286 = t371 * t218;
t253 = -t286 / 0.2e1 - t353 / 0.2e1;
t118 = (-t248 / 0.2e1 + t253) * pkin(4);
t327 = t118 * qJD(1);
t326 = t304 * qJD(1);
t201 = t242 * t220;
t203 = t243 * t220;
t136 = t201 / 0.2e1 - t203 / 0.2e1;
t325 = t136 * qJD(6);
t129 = t138 * qJD(1);
t324 = t140 * qJD(1);
t323 = t142 * qJD(1);
t200 = t242 * t218;
t202 = t243 * t218;
t146 = t200 + t202;
t322 = t146 * qJD(1);
t321 = t146 * qJD(4);
t148 = -t201 - t203;
t320 = t148 * qJD(1);
t319 = t386 * qJD(1);
t215 = t351 / 0.2e1 - t234 / 0.2e1;
t318 = t215 * qJD(1);
t317 = t218 * qJD(1);
t210 = t218 * qJD(4);
t316 = t220 * qJD(1);
t229 = t246 ^ 2 - t248 ^ 2;
t315 = t229 * qJD(1);
t314 = t233 * qJD(1);
t313 = t246 * qJD(1);
t312 = t246 * qJD(4);
t311 = t248 * qJD(1);
t310 = t248 * qJD(4);
t302 = t245 * t317;
t301 = t245 * t331;
t300 = t220 * t329;
t299 = t220 * t328;
t298 = t218 * t316;
t297 = t218 * t213;
t296 = t233 * t313;
t295 = t233 * t311;
t294 = t245 * t328;
t293 = t247 * t317;
t292 = t247 * t316;
t291 = t246 * t310;
t290 = t385 / 0.2e1 + t383;
t289 = t125 / 0.2e1 + t384;
t283 = -qJD(6) - t317;
t282 = t217 * t294;
t279 = qJD(4) * t285;
t278 = -t140 * qJD(4) - t218 * t328;
t277 = t378 - t379;
t9 = (-t71 + t359) * t220 + (-t77 + t393) * t218;
t276 = t9 * qJD(1) + t60 * qJD(2);
t11 = -t363 + (-t375 - t376) * t218;
t275 = qJD(1) * t11 + qJD(2) * t65;
t15 = t289 * t218 + t290 * t220;
t72 = t307 + t270;
t274 = -t15 * qJD(1) - t72 * qJD(2);
t273 = t73 * qJD(2);
t16 = -t290 * t218 + t289 * t220;
t272 = -t16 * qJD(1) - t72 * qJD(3);
t271 = -t355 - t357;
t269 = t283 * t247;
t267 = t352 / 0.2e1 - t354 / 0.2e1;
t251 = t145 / 0.2e1 + t267;
t32 = t289 * t245 - t251 * t247;
t266 = -qJD(4) * t236 * t245 - qJD(1) * t32;
t30 = t251 * t245 + t289 * t247;
t265 = -qJD(1) * t30 - t236 * t331;
t264 = t220 * t269;
t108 = -qJD(1) * t136 + t301;
t263 = qJD(6) * t215 + t298;
t4 = -t218 * t256 + t220 * t257;
t5 = -t125 * t385 - t70 * t76 + t71 * t77;
t261 = t5 * qJD(1) + t4 * qJD(2) + t3 * qJD(3);
t83 = qJD(1) * t217 * t245 * t247 + qJD(4) * t136;
t147 = t230 * t217;
t259 = qJD(1) * t147 + t279;
t258 = qJD(1) * t285 - qJD(4) * t230;
t38 = t280 * t216 + t288 * t217 + t307;
t255 = t3 * qJD(1) + t38 * qJD(2) + qJD(3) * t388;
t254 = t4 * qJD(1) - qJD(2) * t388 + t38 * qJD(3);
t29 = t222 * t381;
t252 = t29 * qJD(1) + t16 * qJD(2) + t15 * qJD(3);
t231 = t246 * t311;
t224 = t233 * qJD(3);
t199 = t215 * qJD(4);
t197 = t245 * t213;
t134 = t142 * qJD(6);
t128 = t138 * qJD(4);
t117 = t381 / 0.2e1 + t253 * pkin(4);
t116 = -t129 - t329;
t103 = t164 + (t309 + 0.1e1 / 0.2e1) * t247;
t79 = t85 * t245;
t67 = t73 * qJD(4);
t66 = t72 * qJD(4);
t56 = t260 + t288;
t37 = t38 * qJD(4);
t34 = qJD(4) * t60;
t33 = -t394 + t347 / 0.2e1 - t267 * t247;
t31 = -t393 - t349 / 0.2e1 + t267 * t245;
t14 = t15 * qJD(4);
t12 = t250 - t268;
t10 = qJD(4) * t16;
t1 = qJD(4) * t4 + qJD(5) * t65;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t224, -t291, t229 * qJD(4), 0, t291, 0, 0, qJD(3) * t246 + t233 * t310, qJD(3) * t248 - t233 * t312, 0, t224, -t297, -t304 * qJD(4), 0, t297, 0, 0, qJD(4) * t114 + t333, qJD(3) * t220 + qJD(4) * t115, -qJD(5) * t386, qJD(3) * t222 + qJD(4) * t29 + qJD(5) * t43, -t243 * t297 - t282, -qJD(6) * t147 + t218 * t279, qJD(4) * t106 - t218 * t300, -t242 * t297 + t282, -qJD(4) * t104 - t218 * t299, t297, qJD(4) * t8 - qJD(5) * t105 + qJD(6) * t36 + t247 * t333, qJD(4) * t9 - qJD(5) * t149 + qJD(6) * t35 - t245 * t333, qJD(3) * t148 - qJD(4) * t6, qJD(3) * t28 + qJD(4) * t5 + qJD(5) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t10, 0, 0, 0, 0, 0, 0, 0, t34, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t314, 0, 0, 0, 0, 0, 0, t313, t311, 0, t314, 0, 0, 0, 0, 0, 0, t317, t316, 0, qJD(5) * t85 + t14 + t334, 0, 0, 0, 0, 0, 0, qJD(6) * t103 + t293, -qJD(6) * t79 - t302, t320, qJD(5) * t56 + t370 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, t315, -t312, t231, -t310, 0, -t232 * t312 + t295, -t232 * t310 - t296, 0, 0, -t298, -t326, -t210, t298, -t213, 0, -qJD(4) * t385 + t337, -qJD(4) * t125 + t336, t273 - t389 (t371 * t125 - t244 * t385) * t380 + t117 * qJD(5) + t252, -t325 + (-t243 * t316 - t301) * t218 (t200 - t202) * qJD(4) + (-qJD(6) + t317) * t285, t197 + t338, t325 + (-t242 * t316 + t301) * t218, t198 - t340, t263, t372 + (t245 * t271 - t359) * qJD(4) + t33 * qJD(6) (t247 * t271 + t360) * qJD(4) + t31 * qJD(6) + t276, qJD(4) * t277 - t377 (t235 * t277 + t236 * t385) * qJD(4) + t12 * qJD(5) + t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, qJD(3) * t85 + qJD(4) * t117 + t367, 0, 0, 0, 0, 0, 0, -t339, -t335, 0, qJD(3) * t56 + qJD(4) * t12 + t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t259, t283 * t140, t83, t264, t199, qJD(3) * t103 + qJD(4) * t33 - qJD(6) * t71 + t368, -qJD(3) * t79 + qJD(4) * t31 + qJD(6) * t70 + t369, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t10, 0, 0, 0, 0, 0, 0, 0, t34, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310, t312, 0, 0, 0, 0, 0, 0, 0, 0, -t213, t210, t344 (-t286 - t353) * t380 - t272, 0, 0, 0, 0, 0, 0, t387, t134 + t197 + t366, -t321 (-t342 * t352 + t354) * qJD(4) + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 - t299, t300 + t332, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t314, 0, 0, 0, 0, 0, 0, -t313, -t311, 0, -t314, 0, 0, 0, 0, 0, 0, -t317, -t316, 0, qJD(5) * t86 + t14 - t334, 0, 0, 0, 0, 0, 0, qJD(6) * t102 - t293, -qJD(6) * t78 + t302, -t320, qJD(5) * t57 - t370 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, -t310, 0, 0, 0, 0, 0, 0, 0, 0, -t210, -t213, 0, -t274 + t389, 0, 0, 0, 0, 0, 0, -qJD(6) * t140 - t210 * t247, -qJD(6) * t144 + t210 * t245, -t148 * qJD(4) (t342 * t355 + t357) * qJD(4) + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278 + t341, -qJD(4) * t144 + t218 * t329 - t365, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t315, 0, -t231, 0, 0, -t295, t296, 0, 0, t298, t326, 0, -t298, 0, 0, -qJD(5) * t220 - t337, qJD(5) * t218 - t336, -t273, qJD(5) * t118 - t252, t243 * t298 - t325, t264 * t392, t134 - t338, t242 * t298 + t325, -t130 + t340, -t263, qJD(6) * t32 - t220 * t330 - t372, qJD(5) * t140 + qJD(6) * t30 - t276, -qJD(5) * t146 + t377, qJD(5) * t13 - t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t272, 0, 0, 0, 0, 0, 0, 0, -t366, 0, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t230 * qJD(6), 0, -t294, 0, 0, t236 * t329, t236 * t328, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t317, 0, t327, 0, 0, 0, 0, 0, 0, -t292, t324, -t322, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, -t258, t323 + t328, -t108, t116, -t318, -t235 * t328 - t266, t235 * t329 - t265, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, -t210, t319, -qJD(3) * t86 - qJD(4) * t118 - t367, 0, 0, 0, 0, 0, 0, t339 - t387, t278 + t335, t321, -qJD(3) * t57 - qJD(4) * t13 - t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t317, 0, -t327, 0, 0, 0, 0, 0, 0, t292, -t324, t322, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, t269, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t259, t245 * t298 - t332, -t83, t218 * t292 + t128, t199, -qJD(3) * t102 - qJD(4) * t32 + qJD(5) * t138 - t368, qJD(3) * t78 - qJD(4) * t30 + t218 * t330 - t369, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341, t365, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t258, -t323, t108, t129, t318, t266, t265, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t293, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t2;
