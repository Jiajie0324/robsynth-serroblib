% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP6_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:31:27
% EndTime: 2019-03-10 01:31:47
% DurationCPUTime: 7.92s
% Computational Cost: add. (11079->465), mult. (26223->749), div. (0->0), fcn. (23610->8), ass. (0->200)
t296 = qJD(3) + qJD(4);
t280 = sin(qJ(4));
t228 = t280 * qJD(4);
t229 = t280 * qJD(3);
t295 = t229 + t228;
t282 = cos(qJ(4));
t230 = t282 * qJD(4);
t294 = qJD(3) * t282 + t230;
t146 = sin(qJ(5));
t281 = cos(qJ(5));
t212 = t281 * t280;
t293 = (qJD(4) + qJD(5)) * pkin(3) * (t146 * t282 + t212);
t147 = sin(qJ(3));
t148 = sin(qJ(2));
t149 = cos(qJ(3));
t260 = qJD(3) * t149;
t150 = cos(qJ(2));
t262 = qJD(2) * t150;
t292 = t147 * t262 + t148 * t260;
t186 = t147 * t282 + t149 * t280;
t233 = qJD(2) * t280;
t210 = t150 * t233;
t234 = qJD(2) * t282;
t211 = t150 * t234;
t243 = t282 * t149;
t216 = t148 * t243;
t221 = t147 * t211 + t149 * t210 + t216 * t296;
t288 = t147 * t295;
t162 = -t148 * t288 + t221;
t283 = -pkin(9) - pkin(8);
t218 = t282 * t283;
t287 = t283 * t280;
t291 = t147 * t218 + t149 * t287;
t220 = t147 * t294 + t149 * t295;
t98 = t147 * t287;
t80 = -t243 * t283 + t98;
t54 = (t149 * t218 - t98) * qJD(3) - t80 * qJD(4);
t133 = t280 * t147;
t203 = t133 - t243;
t75 = -t146 * t203 + t186 * t281;
t74 = t146 * t186 + t203 * t281;
t142 = t147 ^ 2;
t144 = t149 ^ 2;
t265 = t142 - t144;
t226 = qJD(3) * t265;
t259 = qJD(3) * t150;
t240 = t147 * t259;
t263 = qJD(2) * t149;
t185 = t148 * t263 + t240;
t276 = t150 * pkin(2);
t209 = -pkin(8) * t148 - t276;
t199 = -pkin(1) + t209;
t190 = t149 * t199;
t208 = pkin(2) * t148 - pkin(8) * t150;
t193 = t208 * t147;
t55 = pkin(7) * t185 - qJD(2) * t193 - qJD(3) * t190;
t285 = t148 * t283 - pkin(1) - t276;
t121 = t147 * t229;
t284 = t147 * t228 - t149 * t294 + t121;
t251 = t282 * pkin(3);
t213 = t251 + pkin(4);
t189 = t281 * t213;
t223 = pkin(3) * t230;
t67 = (qJD(5) * t280 + t228) * pkin(3) * t146 - qJD(5) * t189 - t281 * t223;
t269 = t149 * t150;
t129 = pkin(7) * t269;
t278 = t147 * pkin(7);
t246 = -pkin(3) - t278;
t277 = t149 * pkin(2);
t157 = (-t147 * t285 - t129) * qJD(3) + (t283 * t269 + (-t246 + t277) * t148) * qJD(2);
t161 = -pkin(9) * t292 - t55;
t154 = t157 * t282 - t161 * t280;
t164 = t149 * t285 + t150 * t246;
t69 = t280 * t164;
t270 = t147 * t148;
t86 = t147 * t199 + t129;
t78 = -pkin(9) * t270 + t86;
t153 = -qJD(4) * t69 - t230 * t78 + t154;
t173 = t147 * t210 + t148 * t220 - t149 * t211;
t140 = qJD(2) * t148;
t249 = pkin(4) * t140;
t152 = pkin(10) * t173 + t153 + t249;
t70 = t282 * t164;
t20 = -qJD(4) * t70 - t157 * t280 - t161 * t282 + t228 * t78;
t16 = -pkin(10) * t162 - t20;
t47 = -t280 * t78 + t70;
t89 = -t133 * t148 + t216;
t39 = -pkin(4) * t150 - pkin(10) * t89 + t47;
t267 = t186 * t148;
t48 = t282 * t78 + t69;
t44 = -pkin(10) * t267 + t48;
t272 = t146 * t39 + t281 * t44;
t4 = -qJD(5) * t272 - t146 * t16 + t152 * t281;
t53 = t296 * t291;
t151 = 2 * qJD(6);
t141 = t148 * pkin(7);
t160 = (-pkin(10) * t280 + t287) * t149 + (-pkin(10) * t282 + t218) * t147;
t158 = t281 * t160;
t62 = -pkin(10) * t203 + t80;
t42 = t146 * t62 - t158;
t258 = qJD(5) * t146;
t248 = pkin(4) * t258;
t68 = t248 + t293;
t275 = t42 * t68;
t59 = -t146 * t267 + t281 * t89;
t274 = t59 * t68;
t273 = t68 * t75;
t93 = pkin(3) * t212 + t146 * t213;
t100 = pkin(3) * t270 + t141;
t143 = t148 ^ 2;
t264 = -t150 ^ 2 + t143;
t261 = qJD(3) * t147;
t257 = qJD(6) * t150;
t28 = qJD(5) * t59 - t146 * t173 + t162 * t281;
t204 = t281 * t267;
t58 = t146 * t89 + t204;
t256 = 0.2e1 * t58 * t28;
t33 = qJD(5) * t75 - t146 * t284 + t281 * t220;
t255 = 0.2e1 * t74 * t33;
t254 = -0.2e1 * pkin(1) * qJD(2);
t253 = -0.2e1 * pkin(2) * qJD(3);
t252 = t150 * t278;
t250 = t280 * pkin(3);
t138 = pkin(3) * t261;
t136 = pkin(7) * t262;
t82 = pkin(3) * t292 + t136;
t135 = -t149 * pkin(3) - pkin(2);
t155 = -pkin(10) * t284 - t54;
t156 = -pkin(10) * t220 + t53;
t13 = -qJD(5) * t158 + t146 * t155 - t156 * t281 + t258 * t62;
t159 = t146 * t160;
t232 = qJD(5) * t281;
t14 = qJD(5) * t159 + t146 * t156 + t155 * t281 + t232 * t62;
t43 = t281 * t62 + t159;
t245 = -t13 * t43 + t14 * t42;
t238 = t149 * t259;
t237 = t147 * t260;
t236 = t148 * t262;
t235 = t149 * t262;
t130 = -0.2e1 * t248;
t225 = t264 * qJD(2);
t224 = 0.2e1 * t236;
t222 = pkin(3) * t228;
t215 = t148 * t235;
t214 = t143 * t237;
t27 = qJD(5) * t204 + t146 * t162 + t173 * t281 + t258 * t89;
t207 = t27 * t58 - t28 * t59;
t206 = t28 * t74 + t33 * t58;
t32 = qJD(5) * t74 + t146 * t220 + t281 * t284;
t205 = t32 * t74 - t33 * t75;
t85 = t190 - t252;
t202 = -t147 * t86 - t149 * t85;
t76 = pkin(4) * t267 + t100;
t25 = -t146 * t44 + t281 * t39;
t197 = t13 * t150 + t140 * t43;
t196 = t14 * t150 - t140 * t42;
t195 = t140 * t58 - t150 * t28;
t194 = t140 * t74 - t150 * t33;
t3 = -t146 * t152 - t16 * t281 - t232 * t39 + t258 * t44;
t192 = t13 * t58 + t14 * t59 - t27 * t42 - t28 * t43;
t64 = pkin(4) * t220 + t138;
t132 = qJ(6) * t140;
t188 = t132 - t3;
t180 = 0.2e1 * t13 * t74 + 0.2e1 * t14 * t75 - 0.2e1 * t32 * t42 - 0.2e1 * t33 * t43;
t177 = t27 * t74 - t28 * t75 + t32 * t58 - t33 * t59;
t87 = pkin(4) * t203 + t135;
t92 = -t146 * t250 + t189;
t56 = -t86 * qJD(3) + (pkin(7) * t270 + t149 * t208) * qJD(2);
t168 = qJD(3) * t202 - t147 * t56 - t149 * t55;
t166 = t150 * t248 + t4;
t165 = t151 - t67;
t163 = t68 * t150 + t4;
t45 = pkin(4) * t162 + t82;
t139 = pkin(5) * t140;
t137 = pkin(4) * t232;
t134 = -pkin(4) * t281 - pkin(5);
t131 = t146 * pkin(4) + qJ(6);
t120 = t137 + qJD(6);
t119 = -0.2e1 * t236;
t90 = -pkin(5) - t92;
t88 = qJ(6) + t93;
t81 = -t147 * t235 + t148 * t226;
t65 = qJD(6) - t67;
t63 = 0.2e1 * t68;
t61 = t130 - t293;
t41 = t74 * pkin(5) - t75 * qJ(6) + t87;
t31 = pkin(5) * t58 - qJ(6) * t59 + t76;
t30 = -0.2e1 * t75 * t32;
t29 = t140 * t75 + t150 * t32;
t24 = pkin(5) * t150 - t25;
t23 = -qJ(6) * t150 + t272;
t21 = -qJD(4) * t48 + t154;
t19 = -0.2e1 * t59 * t27;
t18 = 0.2e1 * t140 * t59 + 0.2e1 * t150 * t27;
t10 = pkin(5) * t33 + qJ(6) * t32 - qJD(6) * t75 + t64;
t7 = -t27 * t75 - t32 * t59;
t5 = t28 * pkin(5) + t27 * qJ(6) - t59 * qJD(6) + t45;
t2 = -t139 - t4;
t1 = t188 - t257;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, -0.2e1 * t225, 0, t119, 0, 0, t148 * t254, t150 * t254, 0, 0, 0.2e1 * t144 * t236 - 0.2e1 * t214, 0.2e1 * t143 * t226 - 0.4e1 * t147 * t215, 0.2e1 * t148 * t240 + 0.2e1 * t263 * t264, 0.2e1 * t142 * t236 + 0.2e1 * t214, -0.2e1 * t147 * t225 + 0.2e1 * t148 * t238, t119, 0.2e1 * t85 * t140 - 0.2e1 * t150 * t56 + 0.2e1 * (t143 * t260 + t147 * t224) * pkin(7), -0.2e1 * t86 * t140 - 0.2e1 * t150 * t55 + 0.2e1 * (-t143 * t261 + 0.2e1 * t215) * pkin(7), 0.2e1 * t202 * t262 + 0.2e1 * (t147 * t55 - t149 * t56 + (t147 * t85 - t149 * t86) * qJD(3)) * t148, 0.2e1 * pkin(7) ^ 2 * t236 - 0.2e1 * t55 * t86 + 0.2e1 * t56 * t85, -0.2e1 * t89 * t173, -0.2e1 * t162 * t89 + 0.2e1 * t173 * t267, 0.2e1 * t140 * t89 + 0.2e1 * t150 * t173, 0.2e1 * t267 * t162, 0.2e1 * t221 * t150 + 0.2e1 * (-qJD(2) * t267 - t150 * t288) * t148, t119, -0.2e1 * t21 * t150 + 0.2e1 * t82 * t267 + 0.2e1 * t100 * t221 + 0.2e1 * (t47 * qJD(2) - t100 * t288) * t148, -0.2e1 * t100 * t173 - 0.2e1 * t140 * t48 - 0.2e1 * t20 * t150 + 0.2e1 * t82 * t89, -0.2e1 * t162 * t48 + 0.2e1 * t173 * t47 + 0.2e1 * t20 * t267 - 0.2e1 * t21 * t89, 0.2e1 * t100 * t82 - 0.2e1 * t20 * t48 + 0.2e1 * t21 * t47, t19, 0.2e1 * t207, t18, t256, -0.2e1 * t195, t119, 0.2e1 * t140 * t25 - 0.2e1 * t150 * t4 + 0.2e1 * t28 * t76 + 0.2e1 * t45 * t58, -0.2e1 * t140 * t272 - 0.2e1 * t150 * t3 - 0.2e1 * t27 * t76 + 0.2e1 * t45 * t59, 0.2e1 * t25 * t27 - 0.2e1 * t272 * t28 + 0.2e1 * t3 * t58 - 0.2e1 * t4 * t59, 0.2e1 * t25 * t4 - 0.2e1 * t272 * t3 + 0.2e1 * t45 * t76, t19, t18, -0.2e1 * t207, t119, 0.2e1 * t195, t256, -0.2e1 * t140 * t24 + 0.2e1 * t150 * t2 + 0.2e1 * t28 * t31 + 0.2e1 * t5 * t58, -0.2e1 * t1 * t58 + 0.2e1 * t2 * t59 - 0.2e1 * t23 * t28 - 0.2e1 * t24 * t27, -0.2e1 * t1 * t150 + 0.2e1 * t140 * t23 + 0.2e1 * t27 * t31 - 0.2e1 * t5 * t59, 0.2e1 * t1 * t23 + 0.2e1 * t2 * t24 + 0.2e1 * t31 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, 0, -t140, 0, -t136, pkin(7) * t140, 0, 0, -t81, -0.4e1 * t148 * t237 - t262 * t265, t140 * t147 - t238, t81, t185, 0 (pkin(8) * t269 + (-t277 + t278) * t148) * qJD(3) + (t147 * t209 - t129) * qJD(2) (t141 * t149 + t193) * qJD(3) + (t149 * t209 + t252) * qJD(2), t168, -pkin(2) * t136 + pkin(8) * t168, -t173 * t186 - t284 * t89, -t162 * t186 + t173 * t203 - t220 * t89 + t267 * t284, t140 * t186 + t150 * t284, t162 * t203 + t220 * t267, -t140 * t203 + t150 * t220, 0, t100 * t220 + t135 * t162 + t138 * t267 + t140 * t291 - t54 * t150 + t203 * t82, -t100 * t284 - t135 * t173 + t138 * t89 - t140 * t80 + t53 * t150 + t186 * t82, -t162 * t80 + t173 * t291 - t186 * t21 + t20 * t203 - t220 * t48 - t267 * t53 + t284 * t47 - t54 * t89, t100 * t138 + t135 * t82 - t20 * t80 + t21 * t291 + t47 * t54 + t48 * t53, t7, t177, t29, t206, -t194, 0, t28 * t87 + t33 * t76 + t45 * t74 + t58 * t64 + t196, -t27 * t87 - t32 * t76 + t45 * t75 + t59 * t64 - t197, t25 * t32 - t272 * t33 + t3 * t74 - t4 * t75 + t192, -t13 * t272 - t14 * t25 - t3 * t43 - t4 * t42 + t45 * t87 + t64 * t76, t7, t29, -t177, 0, t194, t206, t10 * t58 + t28 * t41 + t31 * t33 + t5 * t74 + t196, -t1 * t74 + t2 * t75 - t23 * t33 - t24 * t32 + t192, -t10 * t59 + t27 * t41 + t31 * t32 - t5 * t75 + t197, t1 * t43 + t10 * t31 - t13 * t23 + t14 * t24 + t2 * t42 + t41 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t237, -0.2e1 * t226, 0, -0.2e1 * t237, 0, 0, t147 * t253, t149 * t253, 0, 0, -0.2e1 * t186 * t284, -0.2e1 * t186 * t220 + 0.2e1 * t203 * t284, 0, 0.2e1 * t203 * t220, 0, 0, 0.2e1 * t135 * t220 + 0.2e1 * t138 * t203, -0.2e1 * t135 * t284 + 0.2e1 * t138 * t186, -0.2e1 * t186 * t54 - 0.2e1 * t203 * t53 - 0.2e1 * t220 * t80 + 0.2e1 * t284 * t291, 0.2e1 * t135 * t138 + 0.2e1 * t291 * t54 + 0.2e1 * t53 * t80, t30, 0.2e1 * t205, 0, t255, 0, 0, 0.2e1 * t33 * t87 + 0.2e1 * t64 * t74, -0.2e1 * t32 * t87 + 0.2e1 * t64 * t75, t180, 0.2e1 * t64 * t87 + 0.2e1 * t245, t30, 0, -0.2e1 * t205, 0, 0, t255, 0.2e1 * t10 * t74 + 0.2e1 * t33 * t41, t180, -0.2e1 * t10 * t75 + 0.2e1 * t32 * t41, 0.2e1 * t10 * t41 + 0.2e1 * t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148 * t261 + t235, 0, -t292, t140, t56, t55, 0, 0, 0, 0, -t173, 0, -t162, t140, pkin(3) * t148 * t234 + t150 * t222 + t153 (-t148 * t233 + t150 * t230) * pkin(3) + t20 (t280 * (t121 * t148 - t221) + t282 * t173 + (-t282 * t267 + (t270 * t280 + t89) * t280) * qJD(4)) * pkin(3) (t282 * t21 - t280 * t20 + (-t280 * t47 + t282 * t48) * qJD(4)) * pkin(3), 0, 0, -t27, 0, -t28, t140, t140 * t92 + t163, -t140 * t93 - t150 * t67 + t3, t27 * t92 - t28 * t93 + t58 * t67 + t274, -t25 * t68 - t272 * t67 - t3 * t93 + t4 * t92, 0, -t27, 0, t140, t28, 0, -t140 * t90 + t139 + t163, -t27 * t90 - t28 * t88 - t58 * t65 + t274, t88 * t140 + (-qJD(6) - t65) * t150 + t188, t1 * t88 + t2 * t90 + t23 * t65 + t24 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, 0, -t261, 0, -pkin(8) * t260, pkin(8) * t261, 0, 0, 0, 0, -t284, 0, -t220, 0, t54, -t53, t186 * t222 - t203 * t223 - t220 * t250 + t251 * t284 (t282 * t54 + t280 * t53 + (-t280 * t291 + t282 * t80) * qJD(4)) * pkin(3), 0, 0, -t32, 0, -t33, 0, -t14, t13, t32 * t92 - t33 * t93 + t67 * t74 + t273, -t13 * t93 - t14 * t92 - t43 * t67 + t275, 0, -t32, 0, 0, t33, 0, -t14, -t32 * t90 - t33 * t88 - t65 * t74 + t273, -t13, -t13 * t88 + t14 * t90 + t43 * t65 + t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t222, -0.2e1 * t223, 0, 0, 0, 0, 0, 0, 0, 0, -t63, 0.2e1 * t67, 0, -0.2e1 * t67 * t93 - 0.2e1 * t68 * t92, 0, 0, 0, 0, 0, 0, -t63, 0, 0.2e1 * t65, 0.2e1 * t65 * t88 + 0.2e1 * t68 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, 0, -t162, t140, t21, t20, 0, 0, 0, 0, -t27, 0, -t28, t140, t249 * t281 + t166 (-t140 * t146 + t150 * t232) * pkin(4) + t3 (t281 * t27 - t146 * t28 + (t146 * t59 - t281 * t58) * qJD(5)) * pkin(4) (t281 * t4 - t146 * t3 + (-t146 * t25 + t272 * t281) * qJD(5)) * pkin(4), 0, -t27, 0, t140, t28, 0, -t134 * t140 + t139 + t166, -t120 * t58 - t131 * t28 - t134 * t27 + t248 * t59, t131 * t140 + (-qJD(6) - t120) * t150 + t188, t1 * t131 + t120 * t23 + t134 * t2 + t24 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, 0, -t220, 0, t54, -t53, 0, 0, 0, 0, -t32, 0, -t33, 0, -t14, t13 (t281 * t32 - t146 * t33 + (t146 * t75 - t281 * t74) * qJD(5)) * pkin(4) (-t281 * t14 - t13 * t146 + (t146 * t42 + t281 * t43) * qJD(5)) * pkin(4), 0, -t32, 0, 0, t33, 0, -t14, -t120 * t74 - t131 * t33 - t134 * t32 + t248 * t75, -t13, t120 * t43 - t13 * t131 + t134 * t14 + t248 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -t223, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t137 + t67, 0 (-t281 * t68 - t146 * t67 + (-t146 * t92 + t281 * t93) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, t61, 0, t137 + t165, t120 * t88 + t131 * t65 + t134 * t68 + t248 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -0.2e1 * t137, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, 0.2e1 * t120, 0.2e1 * t120 * t131 + 0.2e1 * t134 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, -t28, t140, t4, t3, 0, 0, 0, -t27, 0, t140, t28, 0, 0.2e1 * t139 + t4, pkin(5) * t27 - qJ(6) * t28 - qJD(6) * t58, 0.2e1 * t132 - t3 - 0.2e1 * t257, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, -t33, 0, -t14, t13, 0, 0, 0, -t32, 0, 0, t33, 0, -t14, pkin(5) * t32 - qJ(6) * t33 - qJD(6) * t74, -t13, -pkin(5) * t14 - qJ(6) * t13 + qJD(6) * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t67, 0, 0, 0, 0, 0, 0, 0, 0, -t68, 0, t165, -pkin(5) * t68 + qJ(6) * t65 + qJD(6) * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, -t137, 0, 0, 0, 0, 0, 0, 0, 0, -t248, 0, t151 + t137, -pkin(5) * t248 + qJ(6) * t120 + qJD(6) * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, qJ(6) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, -t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
