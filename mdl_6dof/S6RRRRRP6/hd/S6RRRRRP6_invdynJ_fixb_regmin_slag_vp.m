% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP6_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP6_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP6_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP6_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP6_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP6_invdynJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:31:32
% EndTime: 2019-03-10 01:31:58
% DurationCPUTime: 12.65s
% Computational Cost: add. (16752->695), mult. (36858->879), div. (0->0), fcn. (26657->14), ass. (0->331)
t287 = cos(qJ(3));
t284 = sin(qJ(2));
t288 = cos(qJ(2));
t419 = t287 * t288;
t343 = pkin(3) * t284 - pkin(9) * t419;
t458 = pkin(8) + pkin(9);
t376 = qJD(3) * t458;
t354 = pkin(2) * t284 - pkin(8) * t288;
t221 = t354 * qJD(1);
t283 = sin(qJ(3));
t403 = qJD(1) * t284;
t374 = t283 * t403;
t407 = pkin(7) * t374 + t287 * t221;
t500 = qJD(1) * t343 + t287 * t376 + t407;
t196 = t283 * t221;
t422 = t284 * t287;
t423 = t283 * t288;
t499 = -t196 - (-pkin(7) * t422 - pkin(9) * t423) * qJD(1) - t283 * t376;
t282 = sin(qJ(4));
t286 = cos(qJ(4));
t213 = t282 * t283 - t286 * t287;
t326 = t213 * t288;
t471 = qJD(3) + qJD(4);
t411 = qJD(1) * t326 - t471 * t213;
t498 = t499 * t282 + t500 * t286;
t214 = t282 * t287 + t283 * t286;
t402 = qJD(1) * t288;
t165 = t214 * t402;
t321 = t214 * qJD(3);
t298 = -qJD(4) * t214 - t321;
t491 = t165 + t298;
t280 = qJ(3) + qJ(4);
t274 = qJ(5) + t280;
t261 = cos(t274);
t260 = sin(t274);
t289 = cos(qJ(1));
t417 = t289 * t260;
t285 = sin(qJ(1));
t420 = t285 * t288;
t161 = t261 * t420 - t417;
t418 = t288 * t289;
t163 = t260 * t285 + t261 * t418;
t356 = qJD(3) + t402;
t384 = t284 * qJDD(1);
t309 = qJD(2) * t356 + t384;
t305 = t309 * t283;
t386 = qJD(1) * qJD(3);
t347 = t284 * t386 - qJDD(2);
t124 = t287 * t347 + t305;
t388 = t287 * qJD(2);
t210 = t374 - t388;
t400 = qJD(2) * t283;
t212 = t287 * t403 + t400;
t327 = t347 * t283;
t293 = t287 * t309 - t327;
t392 = qJD(4) * t286;
t394 = qJD(4) * t282;
t379 = -t210 * t394 + t212 * t392 + t282 * t293;
t342 = t286 * t124 + t379;
t231 = -pkin(2) * t288 - pkin(8) * t284 - pkin(1);
t203 = t231 * qJD(1);
t267 = pkin(7) * t402;
t237 = qJD(2) * pkin(8) + t267;
t147 = t287 * t203 - t237 * t283;
t109 = -pkin(9) * t212 + t147;
t254 = -qJD(3) + t402;
t101 = -pkin(3) * t254 + t109;
t148 = t283 * t203 + t287 * t237;
t110 = -pkin(9) * t210 + t148;
t224 = t354 * qJD(2);
t152 = qJD(1) * t224 + qJDD(1) * t231;
t142 = t287 * t152;
t270 = t288 * qJDD(1);
t387 = qJD(1) * qJD(2);
t473 = -t284 * t387 + t270;
t185 = pkin(7) * t473 + qJDD(2) * pkin(8);
t207 = qJDD(3) - t473;
t365 = t288 * t387;
t385 = t283 * qJDD(2);
t51 = -t283 * t185 + t142 - (t385 + (t365 + t384) * t287) * pkin(9) + t207 * pkin(3) - t110 * qJD(3);
t395 = qJD(3) * t287;
t396 = qJD(3) * t283;
t324 = t283 * t152 + t287 * t185 + t203 * t395 - t237 * t396;
t56 = -pkin(9) * t124 + t324;
t362 = t101 * t392 - t110 * t394 + t282 * t51 + t286 * t56;
t11 = -pkin(10) * t342 + t362;
t281 = sin(qJ(5));
t457 = cos(qJ(5));
t367 = qJD(5) * t457;
t391 = qJD(5) * t281;
t245 = -qJD(4) + t254;
t345 = -t210 * t282 + t286 * t212;
t481 = pkin(10) * t345;
t104 = t282 * t110;
t62 = t286 * t101 - t104;
t49 = t62 - t481;
t43 = -pkin(4) * t245 + t49;
t346 = -t210 * t286 - t282 * t212;
t480 = pkin(10) * t346;
t106 = t286 * t110;
t63 = t101 * t282 + t106;
t50 = t63 + t480;
t202 = qJDD(4) + t207;
t48 = t286 * t51;
t363 = -t282 * t56 + t48;
t378 = -t282 * t124 - t210 * t392 + t286 * t293;
t8 = -t378 * pkin(10) + t202 * pkin(4) + (-t106 + (pkin(10) * t212 - t101) * t282) * qJD(4) + t363;
t364 = t457 * t11 + t281 * t8 + t43 * t367 - t50 * t391;
t427 = t261 * t284;
t313 = g(1) * t163 + g(2) * t161 + g(3) * t427 - t364;
t187 = qJDD(5) + t202;
t174 = t187 * qJ(6);
t234 = -qJD(5) + t245;
t226 = t234 * qJD(6);
t474 = t174 - t226;
t460 = t281 * t346 + t345 * t457;
t82 = t281 * t345 - t346 * t457;
t439 = qJD(2) * pkin(2);
t236 = pkin(7) * t403 - t439;
t155 = pkin(3) * t210 + t236;
t98 = -pkin(4) * t346 + t155;
t33 = pkin(5) * t82 - qJ(6) * t460 + t98;
t489 = t33 * t82;
t496 = -t313 + t474 - t489;
t488 = t82 * t98;
t495 = t313 + t488;
t238 = t458 * t283;
t494 = -t238 * t392 - t500 * t282 + t499 * t286;
t239 = t458 * t287;
t408 = -t282 * t238 + t286 * t239;
t493 = pkin(4) * t403 + t411 * pkin(10) + qJD(4) * t408 + t498;
t425 = t282 * t239;
t453 = pkin(10) * t214;
t492 = (-t425 - t453) * qJD(4) + t494 + (t165 - t321) * pkin(10);
t446 = t460 * t82;
t459 = t460 ^ 2;
t485 = -t82 ^ 2 + t459;
t323 = t212 * t394 - t378;
t14 = t281 * t342 + t457 * t323 + t345 * t391 - t346 * t367;
t13 = -t234 * t82 - t14;
t44 = pkin(5) * t460 + qJ(6) * t82;
t351 = g(1) * t289 + g(2) * t285;
t447 = g(3) * t288;
t312 = t284 * t351 - t447;
t358 = -t286 * t238 - t425;
t118 = t358 - t453;
t119 = -pkin(10) * t213 + t408;
t77 = t281 * t118 + t119 * t457;
t490 = -t77 * t187 - t260 * t312;
t487 = t460 * t98;
t432 = -t213 * t367 - t214 * t391 + t491 * t281 + t411 * t457;
t144 = -t281 * t213 + t214 * t457;
t431 = qJD(5) * t144 + t411 * t281 - t491 * t457;
t456 = pkin(3) * t283;
t205 = t402 * t456 + t267;
t486 = pkin(3) * t396 - t205;
t398 = qJD(2) * t288;
t373 = t283 * t398;
t318 = t284 * t395 + t373;
t176 = t187 * pkin(5);
t470 = t176 - qJDD(6);
t484 = t33 * t460 - t470;
t15 = qJD(5) * t460 - t281 * t323 + t457 * t342;
t464 = -t234 * t460 - t15;
t483 = pkin(4) * t345;
t332 = t118 * t457 - t281 * t119;
t479 = qJD(5) * t332 - t493 * t281 + t492 * t457;
t478 = qJD(5) * t77 + t492 * t281 + t493 * t457;
t263 = pkin(3) * t286 + pkin(4);
t383 = t281 * t282 * pkin(3);
t359 = -t109 * t282 - t106;
t53 = t359 - t480;
t415 = t286 * t109 - t104;
t54 = t415 - t481;
t477 = -t281 * t53 + t263 * t367 + (-qJD(4) - qJD(5)) * t383 + (pkin(3) * t392 - t54) * t457;
t179 = t213 * t284;
t475 = t345 * t346;
t414 = -t491 * pkin(4) + t486;
t209 = t287 * t231;
t455 = pkin(7) * t283;
t146 = -pkin(9) * t422 + t209 + (-pkin(3) - t455) * t288;
t257 = pkin(7) * t419;
t405 = t283 * t231 + t257;
t424 = t283 * t284;
t153 = -pkin(9) * t424 + t405;
t412 = t282 * t146 + t286 * t153;
t322 = qJD(2) * t214;
t292 = t471 * t179 - t288 * t322;
t265 = pkin(7) * t384;
t430 = qJDD(2) * pkin(2);
t186 = pkin(7) * t365 + t265 - t430;
t472 = qJD(3) * pkin(8) * t254 - t186;
t272 = sin(t280);
t273 = cos(t280);
t170 = t272 * t420 + t273 * t289;
t172 = -t272 * t418 + t273 * t285;
t448 = g(3) * t284;
t469 = -g(1) * t172 + g(2) * t170 + t272 * t448;
t468 = t345 ^ 2 - t346 ^ 2;
t426 = t261 * t289;
t160 = t260 * t420 + t426;
t421 = t285 * t261;
t162 = t288 * t417 - t421;
t368 = t281 * t11 + t50 * t367 + t43 * t391 - t457 * t8;
t428 = t260 * t284;
t314 = g(1) * t162 + g(2) * t160 + g(3) * t428 - t368;
t299 = -t314 + t484;
t467 = t314 - t487;
t466 = -qJD(4) * t63 - t155 * t345 + t363 + t469;
t171 = t272 * t289 - t273 * t420;
t173 = t272 * t285 + t273 * t418;
t465 = g(1) * t173 - g(2) * t171 - t155 * t346 + t273 * t448 - t362;
t463 = t245 * t346 - t323;
t462 = -t245 * t345 - t342;
t399 = qJD(2) * t284;
t409 = t287 * t224 + t399 * t455;
t90 = t343 * qJD(2) + (-t257 + (pkin(9) * t284 - t231) * t283) * qJD(3) + t409;
t89 = t286 * t90;
t410 = t283 * t224 + t231 * t395;
t95 = -t318 * pkin(9) + (-t284 * t388 - t288 * t396) * pkin(7) + t410;
t96 = -qJD(2) * t326 + t284 * t298;
t26 = pkin(4) * t399 - pkin(10) * t96 - qJD(4) * t412 - t282 * t95 + t89;
t370 = t284 * t396;
t393 = qJD(4) * t283;
t302 = -t284 * t393 + t288 * t388 - t370;
t382 = t146 * t392 + t282 * t90 + t286 * t95;
t30 = (-t422 * t471 - t373) * pkin(10) * t286 + (-pkin(10) * t302 - qJD(4) * t153) * t282 + t382;
t133 = t286 * t146;
t73 = -pkin(4) * t288 + pkin(10) * t179 - t153 * t282 + t133;
t178 = t214 * t284;
t78 = -pkin(10) * t178 + t412;
t335 = t281 * t73 + t457 * t78;
t461 = -qJD(5) * t335 + t26 * t457 - t281 * t30;
t275 = t284 * pkin(7);
t276 = t287 * pkin(3);
t445 = pkin(2) + t276;
t227 = pkin(4) * t272 + t456;
t444 = pkin(7) + t227;
t443 = t431 * pkin(5) - t432 * qJ(6) - t144 * qJD(6) + t414;
t442 = -qJ(6) * t403 + t479;
t441 = pkin(5) * t403 + t478;
t380 = t457 * t50;
t19 = t281 * t43 + t380;
t438 = t19 * t234;
t437 = t281 * t50;
t435 = qJD(6) + t477;
t375 = t457 * t282;
t434 = -t281 * t54 + t457 * t53 + t263 * t391 + (t282 * t367 + (t281 * t286 + t375) * qJD(4)) * pkin(3);
t21 = t457 * t49 - t437;
t433 = pkin(4) * t367 + qJD(6) - t21;
t429 = t212 * t254;
t18 = t43 * t457 - t437;
t416 = qJD(6) - t18;
t406 = pkin(3) * t375 + t281 * t263;
t228 = pkin(4) * t273 + t276;
t225 = pkin(3) * t424 + t275;
t278 = t284 ^ 2;
t404 = -t288 ^ 2 + t278;
t401 = qJD(2) * t210;
t397 = qJD(3) * t210;
t390 = t212 * qJD(2);
t389 = t236 * qJD(3);
t158 = pkin(3) * t318 + pkin(7) * t398;
t372 = t254 * t395;
t371 = t254 * t396;
t361 = -t160 * pkin(5) + qJ(6) * t161;
t360 = -t162 * pkin(5) + qJ(6) * t163;
t357 = -qJD(3) * t203 - t185;
t167 = pkin(4) * t213 - t445;
t20 = t281 * t49 + t380;
t355 = pkin(4) * t391 - t20;
t149 = pkin(4) * t178 + t225;
t103 = pkin(3) * t212 + t483;
t353 = -g(1) * t160 + g(2) * t162;
t352 = g(1) * t161 - g(2) * t163;
t350 = g(1) * t285 - g(2) * t289;
t349 = t237 * t395 - t142;
t348 = -pkin(8) * t207 + t389;
t341 = qJD(2) * qJD(3) + t384;
t220 = pkin(2) + t228;
t277 = -pkin(10) - t458;
t340 = t220 * t288 - t277 * t284 + pkin(1);
t339 = pkin(5) * t261 + qJ(6) * t260 + t220;
t337 = -t281 * t78 + t457 * t73;
t334 = -0.2e1 * pkin(1) * t387 - pkin(7) * qJDD(2);
t333 = t281 * t26 + t457 * t30 + t73 * t367 - t391 * t78;
t112 = -t281 * t178 - t179 * t457;
t330 = t207 * t283 - t372;
t329 = t287 * t207 + t371;
t328 = t155 * t214;
t325 = qJDD(1) * t287 - t283 * t386;
t291 = qJD(1) ^ 2;
t320 = pkin(1) * t291 + t351;
t100 = t124 * pkin(3) + t186;
t319 = t263 * t457 - t383;
t317 = t332 * t187 - t261 * t447 + (g(1) * t426 + g(2) * t421) * t284;
t290 = qJD(2) ^ 2;
t307 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t290 + t350;
t301 = -t18 * t234 + t313;
t300 = t234 * t434 + t314;
t40 = pkin(4) * t342 + t100;
t230 = qJ(6) * t427;
t295 = -g(1) * t360 - g(2) * t361 - g(3) * (-pkin(5) * t428 + t230);
t79 = -pkin(4) * t292 + t158;
t262 = -pkin(4) * t457 - pkin(5);
t258 = pkin(4) * t281 + qJ(6);
t194 = t283 * t285 + t287 * t418;
t193 = -t283 * t418 + t285 * t287;
t192 = t283 * t289 - t285 * t419;
t191 = t283 * t420 + t287 * t289;
t180 = -pkin(5) - t319;
t177 = qJ(6) + t406;
t143 = t213 * t457 + t214 * t281;
t111 = t178 * t457 - t179 * t281;
t75 = pkin(5) * t143 - qJ(6) * t144 + t167;
t57 = pkin(5) * t111 - qJ(6) * t112 + t149;
t39 = qJD(5) * t112 + t281 * t96 - t292 * t457;
t38 = t178 * t367 - t179 * t391 - t281 * t292 - t457 * t96;
t37 = t44 + t483;
t36 = t288 * pkin(5) - t337;
t35 = -qJ(6) * t288 + t335;
t34 = t103 + t44;
t17 = -t234 * qJ(6) + t19;
t16 = t234 * pkin(5) + t416;
t12 = t39 * pkin(5) + t38 * qJ(6) - t112 * qJD(6) + t79;
t5 = -pkin(5) * t399 - t461;
t4 = qJ(6) * t399 - qJD(6) * t288 + t333;
t3 = t15 * pkin(5) + t14 * qJ(6) - qJD(6) * t460 + t40;
t2 = t368 - t470;
t1 = t364 + t474;
t6 = [qJDD(1), t350, t351, qJDD(1) * t278 + 0.2e1 * t284 * t365, 0.2e1 * t270 * t284 - 0.2e1 * t387 * t404, qJDD(2) * t284 + t288 * t290, qJDD(2) * t288 - t284 * t290, 0, t284 * t334 + t288 * t307, -t284 * t307 + t288 * t334, -t212 * t370 + (t288 * t390 + (t341 + t365) * t422 - t284 * t327) * t287 (-t210 * t287 - t212 * t283) * t398 + ((-t212 * qJD(3) - t124) * t287 + (-t293 + t397) * t283) * t284 (-t385 + (-t254 - t356) * t388) * t288 + (-t288 * t325 + t329 + t390) * t284 (t254 * t400 + t124) * t288 + (-t330 - t401) * t284, -t207 * t288 - t254 * t399 -(-t231 * t396 + t409) * t254 + t209 * t207 - g(1) * t192 - g(2) * t194 + ((t372 + t401) * pkin(7) + (-pkin(7) * t207 + qJD(2) * t236 - t357) * t283 + t349) * t288 + (pkin(7) * t124 + qJD(2) * t147 + t186 * t283 + t287 * t389) * t284, t410 * t254 - t405 * t207 - g(1) * t191 - g(2) * t193 + (t236 * t388 + (-t371 + t390) * pkin(7) + t324) * t288 + (-t283 * t389 - t148 * qJD(2) + t186 * t287 + (t385 + t325 * t284 + (-t254 + t356) * t388) * pkin(7)) * t284, t179 * t323 + t345 * t96, t178 * t323 + t179 * t342 + t292 * t345 + t96 * t346, -t179 * t202 - t96 * t245 + t288 * t323 + t345 * t399, -t178 * t202 + (t245 * t322 + t342) * t288 + (-(-t286 * t395 - t287 * t392 + (t393 + t396) * t282) * t245 + t346 * qJD(2)) * t284, -t202 * t288 - t245 * t399, -t89 * t245 + t133 * t202 - t48 * t288 + t62 * t399 - t158 * t346 + t225 * t379 + t100 * t178 - g(1) * t171 - g(2) * t173 + (t225 * t124 + t155 * t318 + (t110 * t288 + t153 * t245 + t155 * t422) * qJD(4)) * t286 + (-(-qJD(4) * t146 - t95) * t245 - t153 * t202 - (-qJD(4) * t101 - t56) * t288 + t155 * t302) * t282 (-t153 * t394 + t382) * t245 - t412 * t202 + t362 * t288 - t63 * t399 + t158 * t345 - t225 * t323 - t100 * t179 + t155 * t96 - g(1) * t170 - g(2) * t172, -t112 * t14 - t38 * t460, t111 * t14 - t112 * t15 + t38 * t82 - t39 * t460, t112 * t187 + t14 * t288 + t234 * t38 + t399 * t460, -t111 * t187 + t15 * t288 + t234 * t39 - t399 * t82, -t187 * t288 - t234 * t399, t40 * t111 + t149 * t15 + t18 * t399 + t337 * t187 - t234 * t461 + t368 * t288 + t98 * t39 + t79 * t82 + t352, t40 * t112 - t149 * t14 - t187 * t335 - t19 * t399 + t234 * t333 + t288 * t364 - t98 * t38 + t460 * t79 + t353, t111 * t3 + t12 * t82 + t15 * t57 - t16 * t399 - t187 * t36 + t2 * t288 + t234 * t5 + t33 * t39 + t352, -t1 * t111 + t112 * t2 - t14 * t36 - t15 * t35 - t16 * t38 - t17 * t39 + t284 * t350 - t4 * t82 + t460 * t5, -t1 * t288 - t112 * t3 - t12 * t460 + t14 * t57 + t17 * t399 + t187 * t35 - t234 * t4 + t33 * t38 - t353, t1 * t35 + t17 * t4 + t3 * t57 + t33 * t12 + t2 * t36 + t16 * t5 - g(1) * (-pkin(5) * t161 - t160 * qJ(6)) - g(2) * (pkin(5) * t163 + qJ(6) * t162) + (-g(1) * t444 - g(2) * t340) * t289 + (g(1) * t340 - g(2) * t444) * t285; 0, 0, 0, -t284 * t291 * t288, t404 * t291, t384, t270, qJDD(2), t284 * t320 - t265 - t447, t448 + (-pkin(7) * qJDD(1) + t320) * t288, -t347 * t283 ^ 2 + (t305 - t429) * t287 (-t124 + t429) * t283 + (-t397 + t385 + t341 * t287 + (-t370 + (t210 + t388) * t288) * qJD(1)) * t287 (-t212 * t284 + t254 * t419) * qJD(1) + t330 (t210 * t284 - t254 * t423) * qJD(1) + t329, t254 * t403, -pkin(2) * t124 + t407 * t254 + t348 * t283 + (-t147 * t284 + (-pkin(7) * t210 - t236 * t283) * t288) * qJD(1) + (t312 + t472) * t287, -t196 * t254 + (-t288 * pkin(7) * t212 + t148 * t284) * qJD(1) + (-pkin(2) * t341 + (t254 * t275 + (-t236 - t439) * t288) * qJD(1) + t348) * t287 + (-t430 + t447 + (pkin(2) * t386 - t351) * t284 - t472) * t283, -t214 * t323 + t345 * t411, t323 * t213 - t214 * t342 + t491 * t345 + t411 * t346, t202 * t214 - t245 * t411 - t345 * t403, -t346 * t403 - t213 * t202 + (t214 * t471 - t165) * t245, t245 * t403, t358 * t202 - t445 * t342 + t100 * t213 - t62 * t403 + t205 * t346 - t155 * t165 + t498 * t245 + (t245 * t408 + t328) * qJD(4) + (-t346 * t456 + t328) * qJD(3) + t312 * t273, -t408 * t202 + t445 * t323 + t100 * t214 + t63 * t403 + (-t239 * t394 + t494) * t245 + t411 * t155 + t486 * t345 - t312 * t272, -t14 * t144 + t432 * t460, t14 * t143 - t144 * t15 - t431 * t460 - t432 * t82, t144 * t187 - t234 * t432 - t403 * t460, -t143 * t187 + t234 * t431 + t403 * t82, t234 * t403, t40 * t143 + t167 * t15 - t18 * t403 + t234 * t478 + t414 * t82 + t431 * t98 + t317, -t167 * t14 + t40 * t144 + t19 * t403 + t234 * t479 + t414 * t460 + t432 * t98 + t490, t143 * t3 + t15 * t75 + t16 * t403 + t234 * t441 + t33 * t431 + t443 * t82 + t317, -t1 * t143 + t14 * t332 + t144 * t2 - t15 * t77 + t16 * t432 - t17 * t431 - t288 * t351 + t441 * t460 - t442 * t82 - t448, t14 * t75 - t144 * t3 - t17 * t403 - t234 * t442 - t33 * t432 - t443 * t460 - t490, t1 * t77 - t2 * t332 + t3 * t75 + t443 * t33 + t442 * t17 + t441 * t16 + (-g(3) * t339 + t277 * t351) * t288 + (g(3) * t277 + t339 * t351) * t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212 * t210, -t210 ^ 2 + t212 ^ 2, -t210 * t254 + t293, -t429 - t124, t207, -g(1) * t193 + g(2) * t191 - t148 * t254 - t212 * t236 + (t357 + t448) * t283 - t349, g(1) * t194 - g(2) * t192 + g(3) * t422 - t147 * t254 + t210 * t236 - t324, -t475, t468, t463, t462, t202, t359 * t245 + (t202 * t286 + t212 * t346 + t245 * t394) * pkin(3) + t466, -t415 * t245 + (-t202 * t282 - t212 * t345 + t245 * t392) * pkin(3) + t465, t446, t485, t13, t464, t187, -t103 * t82 + t187 * t319 + t300 - t487, -t103 * t460 - t406 * t187 + t234 * t477 + t495, -t180 * t187 - t34 * t82 + t300 - t484, -t14 * t180 - t15 * t177 + (t17 + t434) * t460 + (t16 - t435) * t82, t177 * t187 - t234 * t435 + t34 * t460 + t496, t1 * t177 + t2 * t180 - t33 * t34 - g(1) * (-t227 * t418 + t228 * t285 + t360) - g(2) * (-t227 * t420 - t228 * t289 + t361) - g(3) * (t230 + (-pkin(5) * t260 - t227) * t284) + t435 * t17 + t434 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t475, t468, t463, t462, t202, -t245 * t63 + t466, -t245 * t62 + t465, t446, t485, t13, t464, t187, -t20 * t234 + (t187 * t457 + t234 * t391 - t345 * t82) * pkin(4) + t467, -t21 * t234 + (-t281 * t187 + t234 * t367 - t345 * t460) * pkin(4) + t495, -t187 * t262 + t234 * t355 - t37 * t82 - t299, -t14 * t262 - t15 * t258 + (t17 + t355) * t460 + (t16 - t433) * t82, t187 * t258 - t234 * t433 + t37 * t460 + t496, t1 * t258 + t2 * t262 - t33 * t37 - t16 * t20 + t433 * t17 + (t16 * t391 + t469) * pkin(4) + t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t485, t13, t464, t187, -t438 + t467, t301 + t488, -t44 * t82 + t176 - t299 - t438, pkin(5) * t14 - qJ(6) * t15 + (t17 - t19) * t460 + (t16 - t416) * t82, t44 * t460 + 0.2e1 * t174 - 0.2e1 * t226 - t301 - t489, -t2 * pkin(5) + t1 * qJ(6) - t16 * t19 + t17 * t416 - t33 * t44 + t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187 + t446, t13, -t234 ^ 2 - t459, t17 * t234 + t299;];
tau_reg  = t6;
