% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRRP6_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP6_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP6_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t78 = sin(qJ(2));
t81 = cos(qJ(3));
t109 = t81 * t78;
t77 = sin(qJ(3));
t80 = cos(qJ(4));
t110 = t80 * t77;
t76 = sin(qJ(4));
t43 = -t76 * t109 - t78 * t110;
t114 = t77 * t78;
t44 = t80 * t109 - t76 * t114;
t75 = sin(qJ(5));
t79 = cos(qJ(5));
t23 = -t79 * t43 + t75 * t44;
t136 = t23 ^ 2;
t50 = -t76 * t77 + t80 * t81;
t51 = t76 * t81 + t110;
t30 = -t79 * t50 + t75 * t51;
t135 = t30 ^ 2;
t66 = -t81 * pkin(3) - pkin(2);
t41 = -t50 * pkin(4) + t66;
t134 = 0.2e1 * t41;
t133 = 0.2e1 * t51;
t132 = -0.2e1 * t78;
t82 = cos(qJ(2));
t131 = -0.2e1 * t82;
t130 = 0.2e1 * t82;
t129 = -pkin(9) - pkin(8);
t128 = pkin(2) * t81;
t127 = pkin(7) * t77;
t72 = t78 ^ 2;
t126 = t72 * pkin(7);
t125 = t76 * pkin(3);
t69 = t78 * pkin(7);
t124 = t79 * pkin(4);
t123 = t82 * pkin(3);
t122 = t82 * pkin(4);
t121 = t82 * pkin(5);
t53 = -t82 * pkin(2) - t78 * pkin(8) - pkin(1);
t49 = t81 * t53;
t33 = -pkin(9) * t109 + t49 + (-pkin(3) - t127) * t82;
t108 = t81 * t82;
t101 = pkin(7) * t108;
t35 = t101 + (-pkin(9) * t78 + t53) * t77;
t19 = t80 * t33 - t76 * t35;
t10 = -t44 * pkin(10) - t122 + t19;
t111 = t80 * t35;
t20 = t76 * t33 + t111;
t17 = t43 * pkin(10) + t20;
t4 = t75 * t10 + t79 * t17;
t97 = t129 * t77;
t98 = t129 * t81;
t37 = t76 * t97 - t80 * t98;
t27 = t50 * pkin(10) + t37;
t36 = t76 * t98 + t80 * t97;
t89 = -t51 * pkin(10) + t36;
t14 = t75 * t27 - t79 * t89;
t120 = t14 * t82;
t16 = t79 * t27 + t75 * t89;
t119 = t16 * t82;
t118 = t23 * t30;
t25 = t75 * t43 + t79 * t44;
t117 = t25 * t23;
t32 = t75 * t50 + t79 * t51;
t116 = t32 * t30;
t115 = t32 * t82;
t113 = t77 * t81;
t112 = t77 * t82;
t107 = t82 * t23;
t106 = t82 * t30;
t70 = t80 * pkin(3);
t65 = t70 + pkin(4);
t47 = t79 * t125 + t75 * t65;
t52 = pkin(3) * t114 + t69;
t71 = t77 ^ 2;
t73 = t81 ^ 2;
t105 = t71 + t73;
t104 = t82 * qJ(6);
t103 = t78 * t130;
t102 = t14 ^ 2 + t16 ^ 2;
t100 = t77 * t109;
t83 = 0.2e1 * qJ(6);
t99 = t83 + t47;
t96 = t14 * t25 - t16 * t23;
t95 = -t79 * t10 + t75 * t17;
t94 = t75 * t125 - t79 * t65;
t34 = -t43 * pkin(4) + t52;
t93 = t32 * t23 + t25 * t30;
t39 = -pkin(7) * t112 + t49;
t40 = t77 * t53 + t101;
t92 = -t39 * t77 + t40 * t81;
t91 = 0.2e1 * t14 * t32 - 0.2e1 * t16 * t30;
t90 = -t94 + t124;
t86 = pkin(7) ^ 2;
t84 = 0.2e1 * pkin(5);
t74 = t82 ^ 2;
t68 = t72 * t86;
t67 = t75 * pkin(4);
t63 = pkin(5) + t124;
t61 = t67 + qJ(6);
t45 = -pkin(5) + t94;
t42 = qJ(6) + t47;
t29 = t32 ^ 2;
t22 = t25 ^ 2;
t21 = t25 * t131;
t18 = t25 * t32;
t12 = t30 * pkin(5) - t32 * qJ(6) + t41;
t6 = t23 * pkin(5) - t25 * qJ(6) + t34;
t2 = t95 + t121;
t1 = -t104 + t4;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t72, t103, 0, t74, 0, 0, pkin(1) * t130, pkin(1) * t132, 0.2e1 * (t72 + t74) * pkin(7), pkin(1) ^ 2 + t74 * t86 + t68, t73 * t72, -0.2e1 * t72 * t113, t108 * t132, t71 * t72, t77 * t103, t74, 0.2e1 * t77 * t126 - 0.2e1 * t39 * t82, 0.2e1 * t81 * t126 + 0.2e1 * t40 * t82, 0.2e1 * (-t39 * t81 - t40 * t77) * t78, t39 ^ 2 + t40 ^ 2 + t68, t44 ^ 2, 0.2e1 * t44 * t43, t44 * t131, t43 ^ 2, t43 * t131, t74, -0.2e1 * t19 * t82 - 0.2e1 * t52 * t43, 0.2e1 * t20 * t82 + 0.2e1 * t52 * t44, -0.2e1 * t19 * t44 + 0.2e1 * t20 * t43, t19 ^ 2 + t20 ^ 2 + t52 ^ 2, t22, -0.2e1 * t117, t21, t136, 0.2e1 * t107, t74, 0.2e1 * t34 * t23 + 0.2e1 * t82 * t95, 0.2e1 * t34 * t25 + 0.2e1 * t4 * t82, -0.2e1 * t4 * t23 + 0.2e1 * t25 * t95, t34 ^ 2 + t4 ^ 2 + t95 ^ 2, t22, t21, 0.2e1 * t117, t74, -0.2e1 * t107, t136, 0.2e1 * t2 * t82 + 0.2e1 * t6 * t23, -0.2e1 * t1 * t23 + 0.2e1 * t2 * t25, -0.2e1 * t1 * t82 - 0.2e1 * t6 * t25, t1 ^ 2 + t2 ^ 2 + t6 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, 0, t82, 0, -t69, -t82 * pkin(7), 0, 0, t100 (-t71 + t73) * t78, -t112, -t100, -t108, 0, -pkin(7) * t109 + (-pkin(2) * t78 + pkin(8) * t82) * t77, pkin(8) * t108 + (t127 - t128) * t78, t92, -pkin(2) * t69 + t92 * pkin(8), t44 * t51, t51 * t43 + t44 * t50, -t51 * t82, t43 * t50, -t50 * t82, 0, -t36 * t82 - t66 * t43 - t52 * t50, t37 * t82 + t66 * t44 + t52 * t51, -t19 * t51 + t20 * t50 - t36 * t44 + t37 * t43, t19 * t36 + t20 * t37 + t52 * t66, t18, -t93, -t115, t118, t106, 0, t41 * t23 + t34 * t30 + t120, t41 * t25 + t34 * t32 + t119, -t4 * t30 + t32 * t95 + t96, t14 * t95 + t4 * t16 + t34 * t41, t18, -t115, t93, 0, -t106, t118, t12 * t23 + t6 * t30 + t120, -t1 * t30 + t2 * t32 + t96, -t12 * t25 - t6 * t32 - t119, t1 * t16 + t6 * t12 + t2 * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t71, 0.2e1 * t113, 0, t73, 0, 0, 0.2e1 * t128, -0.2e1 * pkin(2) * t77, 0.2e1 * t105 * pkin(8), t105 * pkin(8) ^ 2 + pkin(2) ^ 2, t51 ^ 2, t50 * t133, 0, t50 ^ 2, 0, 0, -0.2e1 * t66 * t50, t66 * t133, -0.2e1 * t36 * t51 + 0.2e1 * t37 * t50, t36 ^ 2 + t37 ^ 2 + t66 ^ 2, t29, -0.2e1 * t116, 0, t135, 0, 0, t30 * t134, t32 * t134, t91, t41 ^ 2 + t102, t29, 0, 0.2e1 * t116, 0, 0, t135, 0.2e1 * t12 * t30, t91, -0.2e1 * t12 * t32, t12 ^ 2 + t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, -t114, -t82, t39, -t40, 0, 0, 0, 0, t44, 0, t43, -t82, -t80 * t123 + t19, -t111 + (-t33 + t123) * t76 (t43 * t76 - t44 * t80) * pkin(3) (t19 * t80 + t20 * t76) * pkin(3), 0, 0, t25, 0, -t23, -t82, t82 * t94 - t95, t47 * t82 - t4, -t47 * t23 + t25 * t94, t4 * t47 + t94 * t95, 0, t25, 0, -t82, t23, 0 (-pkin(5) + t45) * t82 - t95, -t42 * t23 + t45 * t25 (-qJ(6) - t42) * t82 + t4, t1 * t42 + t2 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, t81, 0, -t77 * pkin(8), -t81 * pkin(8), 0, 0, 0, 0, t51, 0, t50, 0, t36, -t37 (t50 * t76 - t51 * t80) * pkin(3) (t36 * t80 + t37 * t76) * pkin(3), 0, 0, t32, 0, -t30, 0, -t14, -t16, -t47 * t30 + t32 * t94, t14 * t94 + t16 * t47, 0, t32, 0, 0, t30, 0, -t14, -t42 * t30 + t45 * t32, t16, t14 * t45 + t16 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t70, -0.2e1 * t125, 0 (t76 ^ 2 + t80 ^ 2) * pkin(3) ^ 2, 0, 0, 0, 0, 0, 1, -0.2e1 * t94, -0.2e1 * t47, 0, t47 ^ 2 + t94 ^ 2, 0, 0, 0, 1, 0, 0, -0.2e1 * t45, 0, 0.2e1 * t42, t42 ^ 2 + t45 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, t43, -t82, t19, -t20, 0, 0, 0, 0, t25, 0, -t23, -t82, -t79 * t122 - t95, t75 * t122 - t4 (-t23 * t75 - t25 * t79) * pkin(4) (t4 * t75 - t79 * t95) * pkin(4), 0, t25, 0, -t82, t23, 0 (-pkin(5) - t63) * t82 - t95, -t61 * t23 - t63 * t25 (-qJ(6) - t61) * t82 + t4, t1 * t61 - t2 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, 0, t50, 0, t36, -t37, 0, 0, 0, 0, t32, 0, -t30, 0, -t14, -t16 (-t30 * t75 - t32 * t79) * pkin(4) (-t14 * t79 + t16 * t75) * pkin(4), 0, t32, 0, 0, t30, 0, -t14, -t61 * t30 - t63 * t32, t16, -t14 * t63 + t16 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t70, -t125, 0, 0, 0, 0, 0, 0, 0, 1, t90, -t67 - t47, 0 (t47 * t75 - t79 * t94) * pkin(4), 0, 0, 0, 1, 0, 0, t84 + t90, 0, t67 + t99, t42 * t61 - t45 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t124, -0.2e1 * t67, 0 (t75 ^ 2 + t79 ^ 2) * pkin(4) ^ 2, 0, 0, 0, 1, 0, 0, 0.2e1 * t63, 0, 0.2e1 * t61, t61 ^ 2 + t63 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, -t23, -t82, -t95, -t4, 0, 0, 0, t25, 0, -t82, t23, 0, -t95 - 0.2e1 * t121, -pkin(5) * t25 - t23 * qJ(6), -0.2e1 * t104 + t4, -t2 * pkin(5) + t1 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, -t30, 0, -t14, -t16, 0, 0, 0, t32, 0, 0, t30, 0, -t14, -pkin(5) * t32 - t30 * qJ(6), t16, -t14 * pkin(5) + t16 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, -t94, -t47, 0, 0, 0, 0, 0, 1, 0, 0, t84 - t94, 0, t99, -t45 * pkin(5) + t42 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t124, -t67, 0, 0, 0, 0, 0, 1, 0, 0, t84 + t124, 0, t83 + t67, t63 * pkin(5) + t61 * qJ(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t84, 0, t83, pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t25, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
