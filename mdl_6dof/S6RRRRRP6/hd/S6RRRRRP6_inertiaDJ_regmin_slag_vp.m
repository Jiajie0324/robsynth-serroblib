% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP6_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:31:27
% EndTime: 2019-03-10 01:31:41
% DurationCPUTime: 4.67s
% Computational Cost: add. (7353->366), mult. (17402->589), div. (0->0), fcn. (15629->8), ass. (0->177)
t131 = sin(qJ(2));
t130 = sin(qJ(3));
t132 = cos(qJ(3));
t242 = sin(qJ(4));
t211 = t242 * t132;
t244 = cos(qJ(4));
t255 = t244 * t130 + t211;
t234 = t255 * t131;
t198 = t244 * qJD(4);
t160 = t244 * qJD(3) + t198;
t196 = t242 * qJD(4);
t159 = t242 * qJD(3) + t196;
t258 = t159 * t132;
t129 = sin(qJ(5));
t243 = cos(qJ(5));
t186 = t243 * t242;
t257 = (qJD(4) * (t244 * t129 + t186) + qJD(5) * t186) * pkin(3);
t133 = cos(qJ(2));
t224 = qJD(2) * t133;
t206 = t130 * t224;
t222 = qJD(3) * t132;
t256 = t131 * t222 + t206;
t201 = qJD(2) * t242;
t254 = t131 * t160 + t133 * t201;
t202 = qJD(2) * t244;
t185 = t133 * t202;
t195 = t130 * t185 + t254 * t132;
t248 = t130 * t159;
t143 = -t131 * t248 + t195;
t245 = pkin(8) + pkin(9);
t189 = t245 * t244;
t212 = t244 * t132;
t188 = t245 * t242;
t85 = t130 * t188;
t235 = t245 * t212 - t85;
t45 = (-t132 * t189 + t85) * qJD(3) - t235 * qJD(4);
t253 = -0.4e1 * t131;
t139 = t160 * t130 + t258;
t252 = pkin(10) * t139;
t175 = t242 * t130 - t212;
t75 = t175 * t131;
t251 = t75 * t159;
t230 = t130 * t131;
t88 = pkin(3) * t230 + t131 * pkin(7);
t250 = t88 * t139;
t228 = t132 * t133;
t111 = pkin(7) * t228;
t177 = -t133 * pkin(2) - t131 * pkin(8);
t90 = -pkin(1) + t177;
t231 = t130 * t90 + t111;
t247 = t133 * t139;
t155 = qJD(2) * t175;
t151 = t133 * t155;
t137 = -t151 - (qJD(3) + qJD(4)) * t234;
t127 = t132 ^ 2;
t227 = t130 ^ 2 - t127;
t194 = t227 * qJD(3);
t221 = qJD(3) * t133;
t209 = t130 * t221;
t225 = qJD(2) * t132;
t162 = t131 * t225 + t209;
t176 = pkin(2) * t131 - pkin(8) * t133;
t87 = t176 * qJD(2);
t46 = pkin(7) * t162 - t130 * t87 - t90 * t222;
t117 = t244 * pkin(3) + pkin(4);
t191 = pkin(3) * t198;
t200 = qJD(5) * t243;
t57 = (t242 * qJD(5) + t196) * pkin(3) * t129 - t117 * t200 - t243 * t191;
t123 = qJD(2) * t131;
t210 = t130 * t123;
t236 = pkin(7) * t210 + t132 * t87;
t240 = pkin(3) * t131;
t38 = (-pkin(9) * t228 + t240) * qJD(2) + (-t111 + (pkin(9) * t131 - t90) * t130) * qJD(3) + t236;
t43 = -pkin(9) * t256 - t46;
t179 = -t242 * t43 + t244 * t38;
t229 = t131 * t132;
t239 = pkin(7) * t130;
t83 = t132 * t90;
t66 = -pkin(9) * t229 + t83 + (-pkin(3) - t239) * t133;
t69 = -pkin(9) * t230 + t231;
t238 = t242 * t66 + t244 * t69;
t15 = -qJD(4) * t238 + t179;
t11 = pkin(10) * t151 + (qJD(2) * pkin(4) + t252) * t131 + t15;
t14 = t196 * t69 - t66 * t198 - t242 * t38 - t244 * t43;
t13 = -pkin(10) * t143 - t14;
t178 = -t242 * t69 + t244 * t66;
t29 = -t133 * pkin(4) + t75 * pkin(10) + t178;
t34 = -t234 * pkin(10) + t238;
t169 = t129 * t29 + t243 * t34;
t4 = -qJD(5) * t169 + t243 * t11 - t129 * t13;
t174 = t130 * t189;
t149 = t245 * t211 + t174;
t44 = -qJD(3) * (-t132 * t188 - t174) + qJD(4) * t149;
t128 = t133 ^ 2;
t134 = 2 * qJD(6);
t232 = pkin(3) * t186 + t129 * t117;
t126 = t131 ^ 2;
t226 = t126 - t128;
t223 = qJD(3) * t130;
t220 = qJD(5) * t129;
t219 = qJD(6) * t133;
t218 = -0.2e1 * pkin(1) * qJD(2);
t217 = -0.2e1 * pkin(2) * qJD(3);
t216 = t243 * pkin(4);
t215 = t242 * pkin(3);
t121 = pkin(3) * t223;
t214 = pkin(4) * t220;
t119 = pkin(7) * t224;
t70 = t256 * pkin(3) + t119;
t118 = -t132 * pkin(3) - pkin(2);
t207 = t132 * t221;
t205 = t130 * t222;
t204 = t131 * t224;
t3 = -t129 * t11 - t243 * t13 - t29 * t200 + t34 * t220;
t193 = t226 * qJD(2);
t192 = 0.2e1 * t204;
t190 = pkin(3) * t196;
t187 = t132 * t206;
t114 = qJ(6) * t123;
t181 = t114 - t3;
t180 = t243 * t234;
t67 = t234 * pkin(4) + t88;
t145 = -pkin(10) * t255 - t149;
t142 = t129 * t145;
t52 = -pkin(10) * t175 + t235;
t33 = t243 * t52 + t142;
t154 = t175 * qJD(4);
t140 = -qJD(3) * t175 - t154;
t135 = pkin(10) * t140 - t45;
t136 = -t44 - t252;
t141 = t243 * t145;
t9 = -qJD(5) * t141 + t129 * t135 - t243 * t136 + t52 * t220;
t171 = t123 * t33 + t133 * t9;
t170 = -t129 * t34 + t243 * t29;
t10 = qJD(5) * t142 + t129 * t136 + t243 * t135 + t52 * t200;
t32 = t129 * t52 - t141;
t168 = t10 * t133 - t123 * t32;
t167 = t129 * t175;
t54 = pkin(4) * t139 + t121;
t165 = t243 * t175;
t50 = -t129 * t234 - t243 * t75;
t157 = t243 * t117 - t129 * t215;
t73 = pkin(4) * t175 + t118;
t147 = t133 * t214 + t4;
t146 = t134 - t57;
t58 = t117 * t220 + t257;
t144 = t58 * t133 + t4;
t35 = pkin(4) * t143 + t70;
t122 = pkin(5) * t123;
t120 = pkin(4) * t200;
t116 = -t216 - pkin(5);
t113 = t129 * pkin(4) + qJ(6);
t112 = -0.2e1 * t214;
t104 = t120 + qJD(6);
t103 = -0.2e1 * t204;
t76 = -pkin(5) - t157;
t74 = qJ(6) + t232;
t65 = t243 * t255 - t167;
t64 = t129 * t255 + t165;
t55 = qJD(6) - t57;
t53 = 0.2e1 * t58;
t51 = (-pkin(4) - t117) * t220 - t257;
t49 = -t129 * t75 + t180;
t47 = -t231 * qJD(3) + t236;
t31 = t64 * pkin(5) - t65 * qJ(6) + t73;
t22 = -qJD(5) * t167 + t129 * t140 + t243 * t139 + t200 * t255;
t21 = qJD(5) * t165 + t129 * t139 - t243 * t140 + t220 * t255;
t20 = t49 * pkin(5) - t50 * qJ(6) + t67;
t19 = t50 * qJD(5) + t137 * t129 + t243 * t143;
t18 = qJD(5) * t180 + t129 * t143 - t243 * t137 - t75 * t220;
t17 = t133 * pkin(5) - t170;
t16 = -t133 * qJ(6) + t169;
t6 = t22 * pkin(5) + t21 * qJ(6) - t65 * qJD(6) + t54;
t5 = t19 * pkin(5) + t18 * qJ(6) - t50 * qJD(6) + t35;
t2 = -t122 - t4;
t1 = t181 - t219;
t7 = [0, 0, 0, t192, -0.2e1 * t193, 0, 0, 0, t131 * t218, t133 * t218, -0.2e1 * t126 * t205 + 0.2e1 * t127 * t204, 0.2e1 * t126 * t194 + t187 * t253, 0.2e1 * t131 * t209 + 0.2e1 * t225 * t226, -0.2e1 * t130 * t193 + 0.2e1 * t131 * t207, t103, 0.2e1 * t83 * t123 - 0.2e1 * t47 * t133 + 0.2e1 * (t126 * t222 + t130 * t204) * pkin(7), -0.2e1 * t46 * t133 - 0.2e1 * t231 * t123 + 0.2e1 * (-t126 * t223 + t132 * t192) * pkin(7), -0.2e1 * t75 * t137, 0.2e1 * t75 * t195 + 0.2e1 * t234 * t151 + 0.2e1 * (t234 * t258 + (t160 * t234 - t251) * t130) * t131, 0.2e1 * t128 * t155 + 0.2e1 * (-t75 * qJD(2) + t247) * t131, 0.2e1 * t195 * t133 + 0.2e1 * (-t234 * qJD(2) - t133 * t248) * t131, t103, -0.2e1 * t15 * t133 + 0.2e1 * t70 * t234 + 0.2e1 * t88 * t195 + 0.2e1 * (qJD(2) * t178 - t248 * t88) * t131, -0.2e1 * t70 * t75 + 0.2e1 * (-t155 * t88 - t14) * t133 + 0.2e1 * (-t238 * qJD(2) - t250) * t131, -0.2e1 * t50 * t18, 0.2e1 * t18 * t49 - 0.2e1 * t19 * t50, 0.2e1 * t123 * t50 + 0.2e1 * t133 * t18, -0.2e1 * t123 * t49 + 0.2e1 * t133 * t19, t103, 0.2e1 * t123 * t170 - 0.2e1 * t4 * t133 + 0.2e1 * t67 * t19 + 0.2e1 * t35 * t49, -0.2e1 * t123 * t169 - 0.2e1 * t3 * t133 - 0.2e1 * t67 * t18 + 0.2e1 * t35 * t50, -0.2e1 * t123 * t17 + 0.2e1 * t133 * t2 + 0.2e1 * t19 * t20 + 0.2e1 * t49 * t5, -0.2e1 * t1 * t49 - 0.2e1 * t16 * t19 - 0.2e1 * t17 * t18 + 0.2e1 * t2 * t50, -0.2e1 * t1 * t133 + 0.2e1 * t123 * t16 + 0.2e1 * t18 * t20 - 0.2e1 * t5 * t50, 0.2e1 * t1 * t16 + 0.2e1 * t17 * t2 + 0.2e1 * t20 * t5; 0, 0, 0, 0, 0, t224, -t123, 0, -t119, pkin(7) * t123, -t131 * t194 + t187, t205 * t253 - t227 * t224, -t207 + t210, t162, 0 (pkin(8) * t228 + (-pkin(2) * t132 + t239) * t131) * qJD(3) + (t130 * t177 - t111) * qJD(2) (pkin(7) * t229 + t130 * t176) * qJD(3) + (t132 * t177 + t133 * t239) * qJD(2) ((-t159 * t131 + t185) * t255 - t75 * t160) * t132 + (-t254 * t255 + t251) * t130, -t137 * t175 + t75 * t139 - t140 * t234 - t143 * t255, t123 * t255 - t133 * t140, -t123 * t175 + t247, 0, t118 * t143 + t234 * t121 - t149 * t123 - t45 * t133 + t70 * t175 + t250, t118 * t137 - t75 * t121 - t235 * t123 - t44 * t133 + t88 * t140 + t255 * t70, -t18 * t65 - t21 * t50, t18 * t64 - t19 * t65 + t21 * t49 - t22 * t50, t123 * t65 + t133 * t21, -t123 * t64 + t133 * t22, 0, t19 * t73 + t22 * t67 + t35 * t64 + t49 * t54 + t168, -t18 * t73 - t21 * t67 + t35 * t65 + t50 * t54 - t171, t19 * t31 + t20 * t22 + t49 * t6 + t5 * t64 + t168, -t1 * t64 + t10 * t50 - t16 * t22 - t17 * t21 - t18 * t32 - t19 * t33 + t2 * t65 + t49 * t9, t18 * t31 + t20 * t21 - t5 * t65 - t50 * t6 + t171, t1 * t33 + t10 * t17 - t16 * t9 + t2 * t32 + t20 * t6 + t31 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t205, -0.2e1 * t194, 0, 0, 0, t130 * t217, t132 * t217, 0.2e1 * t255 * t140, -0.2e1 * t139 * t255 - 0.2e1 * t140 * t175, 0, 0, 0, 0.2e1 * t118 * t139 + 0.2e1 * t121 * t175, -0.2e1 * t118 * t154 + 0.2e1 * (pkin(3) * t130 * t255 - t118 * t175) * qJD(3), -0.2e1 * t65 * t21, 0.2e1 * t21 * t64 - 0.2e1 * t22 * t65, 0, 0, 0, 0.2e1 * t22 * t73 + 0.2e1 * t54 * t64, -0.2e1 * t21 * t73 + 0.2e1 * t54 * t65, 0.2e1 * t22 * t31 + 0.2e1 * t6 * t64, 0.2e1 * t10 * t65 - 0.2e1 * t21 * t32 - 0.2e1 * t22 * t33 + 0.2e1 * t64 * t9, 0.2e1 * t21 * t31 - 0.2e1 * t6 * t65, 0.2e1 * t10 * t32 + 0.2e1 * t31 * t6 - 0.2e1 * t33 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131 * t223 + t132 * t224, -t256, t123, t47, t46, 0, 0, t137, -t143, t123, t202 * t240 + (t133 * t215 - t238) * qJD(4) + t179 (-t131 * t201 + t133 * t198) * pkin(3) + t14, 0, 0, -t18, -t19, t123, t123 * t157 + t144, -t123 * t232 - t57 * t133 + t3, -t123 * t76 + t122 + t144, -t18 * t76 - t19 * t74 - t49 * t55 + t50 * t58, t74 * t123 + (-qJD(6) - t55) * t133 + t181, t1 * t74 + t16 * t55 + t17 * t58 + t2 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, -t223, 0, -pkin(8) * t222, pkin(8) * t223, 0, 0, t140, -t139, 0, t45, t44, 0, 0, -t21, -t22, 0, -t10, t9, -t10, -t21 * t76 - t22 * t74 - t55 * t64 + t58 * t65, -t9, t10 * t76 + t32 * t58 + t33 * t55 - t74 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t190, -0.2e1 * t191, 0, 0, 0, 0, 0, -t53, 0.2e1 * t57, -t53, 0, 0.2e1 * t55, 0.2e1 * t55 * t74 + 0.2e1 * t58 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, -t143, t123, t15, t14, 0, 0, -t18, -t19, t123, t123 * t216 + t147 (-t123 * t129 + t133 * t200) * pkin(4) + t3, -t116 * t123 + t122 + t147, -t104 * t49 - t113 * t19 - t116 * t18 + t214 * t50, t113 * t123 + (-qJD(6) - t104) * t133 + t181, t1 * t113 + t104 * t16 + t116 * t2 + t17 * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, -t139, 0, t45, t44, 0, 0, -t21, -t22, 0, -t10, t9, -t10, -t104 * t64 - t113 * t22 - t116 * t21 + t214 * t65, -t9, t10 * t116 + t104 * t33 - t113 * t9 + t214 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, -t191, 0, 0, 0, 0, 0, t51, -t120 + t57, t51, 0, t120 + t146, t104 * t74 + t113 * t55 + t116 * t58 + t214 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, -0.2e1 * t120, t112, 0, 0.2e1 * t104, 0.2e1 * t104 * t113 + 0.2e1 * t116 * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t18, -t19, t123, t4, t3, 0.2e1 * t122 + t4, pkin(5) * t18 - qJ(6) * t19 - qJD(6) * t49, 0.2e1 * t114 - t3 - 0.2e1 * t219, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, -t22, 0, -t10, t9, -t10, pkin(5) * t21 - qJ(6) * t22 - qJD(6) * t64, -t9, -pkin(5) * t10 - qJ(6) * t9 + qJD(6) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t57, -t58, 0, t146, -pkin(5) * t58 + qJ(6) * t55 + qJD(6) * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t120, -t214, 0, t134 + t120, -pkin(5) * t214 + qJ(6) * t104 + qJD(6) * t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, qJ(6) * t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t18, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
