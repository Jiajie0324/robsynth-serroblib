% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:31:27
% EndTime: 2019-03-10 01:31:54
% DurationCPUTime: 10.92s
% Computational Cost: add. (21359->683), mult. (51589->868), div. (0->0), fcn. (36746->8), ass. (0->308)
t287 = cos(qJ(2));
t385 = qJD(1) * t287;
t264 = -qJD(3) + t385;
t253 = -qJD(4) + t264;
t245 = -qJD(5) + t253;
t242 = t245 * qJD(6);
t284 = sin(qJ(2));
t372 = qJD(1) * qJD(2);
t269 = t284 * t372;
t261 = qJ(6) * t269;
t282 = sin(qJ(4));
t285 = cos(qJ(4));
t244 = -pkin(2) * t287 - pkin(8) * t284 - pkin(1);
t223 = t244 * qJD(1);
t274 = pkin(7) * t385;
t249 = qJD(2) * pkin(8) + t274;
t283 = sin(qJ(3));
t286 = cos(qJ(3));
t176 = t286 * t223 - t249 * t283;
t386 = qJD(1) * t284;
t361 = t286 * t386;
t381 = qJD(2) * t283;
t232 = t361 + t381;
t141 = -pkin(9) * t232 + t176;
t132 = -pkin(3) * t264 + t141;
t177 = t223 * t283 + t249 * t286;
t362 = t283 * t386;
t373 = t286 * qJD(2);
t230 = t362 - t373;
t142 = -pkin(9) * t230 + t177;
t416 = t142 * t285;
t76 = t132 * t282 + t416;
t337 = pkin(2) * t284 - pkin(8) * t287;
t240 = t337 * qJD(2);
t224 = qJD(1) * t240;
t341 = pkin(7) * t269;
t125 = -qJD(3) * t177 + t286 * t224 + t283 * t341;
t378 = qJD(3) * t283;
t359 = t284 * t378;
t306 = t287 * t373 - t359;
t371 = qJD(2) * qJD(3);
t186 = -qJD(1) * t306 - t286 * t371;
t87 = pkin(3) * t269 + t186 * pkin(9) + t125;
t377 = qJD(3) * t286;
t124 = t223 * t377 + t283 * t224 - t249 * t378 - t286 * t341;
t379 = qJD(2) * t287;
t360 = t283 * t379;
t305 = t284 * t377 + t360;
t187 = qJD(1) * t305 + t283 * t371;
t99 = -pkin(9) * t187 + t124;
t30 = -qJD(4) * t76 - t282 * t99 + t285 * t87;
t375 = qJD(4) * t285;
t376 = qJD(4) * t282;
t94 = t285 * t186 + t282 * t187 + t230 * t375 + t232 * t376;
t16 = pkin(4) * t269 + t94 * pkin(10) + t30;
t323 = -t282 * t186 + t285 * t187 - t230 * t376 + t232 * t375;
t346 = -t132 * t375 + t142 * t376 - t282 * t87 - t285 * t99;
t19 = -pkin(10) * t323 - t346;
t281 = sin(qJ(5));
t442 = cos(qJ(5));
t354 = qJD(5) * t442;
t374 = qJD(5) * t281;
t329 = -t230 * t282 + t285 * t232;
t464 = pkin(10) * t329;
t135 = t282 * t142;
t75 = t285 * t132 - t135;
t67 = t75 - t464;
t62 = -pkin(4) * t253 + t67;
t330 = -t230 * t285 - t282 * t232;
t463 = pkin(10) * t330;
t68 = t76 + t463;
t349 = -t281 * t16 - t442 * t19 - t62 * t354 + t68 * t374;
t1 = t261 - t242 - t349;
t108 = t281 * t329 - t330 * t442;
t273 = pkin(7) * t386;
t432 = qJD(2) * pkin(2);
t248 = t273 - t432;
t192 = pkin(3) * t230 + t248;
t130 = -pkin(4) * t330 + t192;
t446 = t281 * t330 + t329 * t442;
t51 = pkin(5) * t108 - qJ(6) * t446 + t130;
t476 = t108 * t51;
t484 = t1 - t476;
t233 = t282 * t286 + t283 * t285;
t198 = t233 * t385;
t310 = t233 * qJD(4);
t311 = t233 * qJD(3);
t295 = -t311 - t310;
t481 = t198 + t295;
t326 = t282 * t283 - t285 * t286;
t199 = t326 * t385;
t309 = t326 * qJD(3);
t293 = -t326 * qJD(4) - t309;
t456 = t199 + t293;
t473 = t108 * t130;
t483 = t349 + t473;
t44 = qJD(5) * t446 - t281 * t94 + t442 * t323;
t474 = t245 * t446 + t44;
t482 = t108 * t446;
t443 = -pkin(9) - pkin(8);
t250 = t443 * t283;
t251 = t443 * t286;
t185 = t282 * t250 - t285 * t251;
t480 = t326 * pkin(10) - t185;
t444 = t446 ^ 2;
t355 = t108 ^ 2 - t444;
t43 = t281 * t323 + t329 * t374 - t330 * t354 + t442 * t94;
t479 = -t108 * t245 - t43;
t430 = t281 * t68;
t27 = t442 * t62 - t430;
t368 = t442 * t68;
t28 = t281 * t62 + t368;
t478 = -t108 * t27 + t28 * t446;
t63 = pkin(5) * t446 + qJ(6) * t108;
t263 = pkin(5) * t269;
t348 = -t442 * t16 + t281 * t19 + t68 * t354 + t62 * t374;
t2 = -t263 + t348;
t431 = t446 * t51;
t477 = t2 + t431;
t173 = t233 * t442 - t281 * t326;
t428 = -qJD(5) * t173 - t456 * t281 + t481 * t442;
t303 = t442 * t326;
t427 = qJD(5) * t303 + t233 * t374 - t481 * t281 - t456 * t442;
t461 = t130 * t446;
t441 = pkin(3) * t283;
t226 = t385 * t441 + t274;
t470 = pkin(3) * t378 - t226;
t467 = -0.2e1 * t372;
t466 = pkin(4) * t329;
t400 = t282 * t251;
t184 = t285 * t250 + t400;
t439 = pkin(10) * t233;
t148 = t184 - t439;
t101 = t281 * t148 - t442 * t480;
t364 = qJD(3) * t443;
t238 = t283 * t364;
t239 = t286 * t364;
t328 = -t282 * t238 + t285 * t239;
t455 = qJD(4) * t480 + t328;
t237 = t337 * qJD(1);
t188 = pkin(7) * t362 + t286 * t237;
t396 = t286 * t287;
t324 = pkin(3) * t284 - pkin(9) * t396;
t150 = qJD(1) * t324 + t188;
t218 = t283 * t237;
t397 = t284 * t286;
t398 = t283 * t287;
t174 = t218 + (-pkin(7) * t397 - pkin(9) * t398) * qJD(1);
t104 = t285 * t150 - t174 * t282;
t77 = pkin(4) * t386 + pkin(10) * t199 + t104;
t105 = t282 * t150 + t285 * t174;
t81 = -pkin(10) * t198 + t105;
t365 = t285 * t238 + t282 * t239 + t250 * t375;
t95 = -pkin(10) * t311 + (t400 - t439) * qJD(4) + t365;
t434 = t101 * qJD(5) + (-pkin(10) * t309 - t455 + t77) * t442 + (t95 - t81) * t281;
t271 = pkin(3) * t285 + pkin(4);
t82 = -t141 * t282 - t416;
t304 = t82 - t463;
t369 = t281 * t282 * pkin(3);
t83 = t285 * t141 - t135;
t71 = t83 - t464;
t425 = -t281 * t304 + t271 * t354 + (-qJD(4) - qJD(5)) * t369 + (pkin(3) * t375 - t71) * t442;
t460 = t233 * t323;
t414 = t330 * t329;
t458 = t176 * t264 + t124;
t457 = t177 * t264 - t125;
t389 = -pkin(4) * t481 + t470;
t229 = t286 * t244;
t440 = pkin(7) * t283;
t175 = -pkin(9) * t397 + t229 + (-pkin(3) - t440) * t287;
t267 = pkin(7) * t396;
t197 = t283 * t244 + t267;
t399 = t283 * t284;
t180 = -pkin(9) * t399 + t197;
t118 = t282 * t175 + t285 * t180;
t454 = qJD(3) + qJD(4);
t292 = t454 * t326;
t382 = qJD(2) * t233;
t302 = t287 * t382;
t290 = t292 * t284 - t302;
t453 = t329 ^ 2 - t330 ^ 2;
t452 = -t329 * t192 + t30;
t451 = t253 * t330 - t94;
t450 = -t330 * t192 + t346;
t449 = -t253 * t329 - t323;
t206 = t326 * t284;
t313 = t233 * t284;
t301 = t442 * t313;
t143 = -t206 * t281 + t301;
t380 = qJD(2) * t284;
t126 = -t284 * t295 + t326 * t379;
t144 = -t206 * t442 - t281 * t313;
t59 = qJD(5) * t144 - t281 * t126 - t290 * t442;
t448 = -t245 * t59 - t287 * t44 + (qJD(1) * t143 + t108) * t380;
t388 = t286 * t240 + t380 * t440;
t116 = t324 * qJD(2) + (-t267 + (pkin(9) * t284 - t244) * t283) * qJD(3) + t388;
t139 = t283 * t240 + t244 * t377 + (-t284 * t373 - t287 * t378) * pkin(7);
t123 = -pkin(9) * t305 + t139;
t50 = -qJD(4) * t118 + t285 * t116 - t282 * t123;
t38 = pkin(4) * t380 + t126 * pkin(10) + t50;
t366 = t282 * t116 + t285 * t123 + t175 * t375;
t42 = (-t454 * t397 - t360) * pkin(10) * t285 + (-qJD(4) * t180 + (qJD(4) * t399 - t306) * pkin(10)) * t282 + t366;
t102 = -pkin(10) * t313 + t118;
t117 = t285 * t175 - t180 * t282;
t96 = -pkin(4) * t287 + pkin(10) * t206 + t117;
t433 = t442 * t102 + t281 * t96;
t8 = -qJD(5) * t433 - t281 * t42 + t38 * t442;
t172 = t233 * t281 + t303;
t447 = t245 * t428 + (qJD(2) * t172 - t108) * t386;
t445 = t108 * t427 + t172 * t43 - t173 * t44 + t428 * t446;
t438 = -t428 * pkin(5) + t427 * qJ(6) - t173 * qJD(6) + t389;
t318 = t148 * t442 + t281 * t480;
t36 = t318 * qJD(5) + t442 * t95 + (-(-t282 * t378 + t285 * t377) * pkin(10) + t455) * t281;
t48 = t281 * t77 + t442 * t81;
t45 = qJ(6) * t386 + t48;
t437 = t36 - t45;
t436 = t36 - t48;
t435 = pkin(5) * t386 + t434;
t429 = t94 * t233;
t426 = qJD(6) + t425;
t363 = t442 * t282;
t424 = -t281 * t71 + t442 * t304 + t271 * t374 + (t282 * t354 + (t281 * t285 + t363) * qJD(4)) * pkin(3);
t32 = t442 * t67 - t430;
t423 = pkin(4) * t354 + qJD(6) - t32;
t164 = t187 * pkin(3) + qJD(2) * t274;
t415 = t164 * t233;
t411 = t186 * t283;
t410 = t187 * t286;
t409 = t230 * t264;
t408 = t232 * t230;
t407 = t232 * t264;
t404 = t248 * t283;
t403 = t248 * t286;
t402 = t264 * t283;
t401 = t264 * t286;
t289 = qJD(1) ^ 2;
t395 = t287 * t289;
t288 = qJD(2) ^ 2;
t394 = t288 * t284;
t393 = t288 * t287;
t392 = qJD(6) - t27;
t391 = t251 * t376 - t105 + t365;
t390 = qJD(4) * t185 + t104 - t328;
t213 = pkin(3) * t363 + t281 * t271;
t241 = pkin(3) * t399 + t284 * pkin(7);
t279 = t284 ^ 2;
t387 = -t287 ^ 2 + t279;
t384 = qJD(2) * t318;
t383 = qJD(2) * t101;
t370 = pkin(7) * t398;
t275 = pkin(7) * t379;
t367 = t284 * t395;
t193 = t305 * pkin(3) + t275;
t272 = -t286 * pkin(3) - pkin(2);
t357 = t264 * t377;
t356 = t245 * t386;
t350 = t424 * t446;
t347 = pkin(1) * t467;
t343 = t230 + t373;
t342 = -t232 + t381;
t340 = -t101 * t44 - t36 * t108 + t318 * t43;
t339 = t287 * t269;
t31 = t281 * t67 + t368;
t338 = pkin(4) * t374 - t31;
t134 = pkin(3) * t232 + t466;
t336 = t108 * t59 + t143 * t44;
t331 = -t176 * t286 - t177 * t283;
t325 = qJD(1) * t279 - t264 * t287;
t322 = -t245 * t27 + t349;
t321 = -t245 * t28 - t348;
t56 = -t281 * t102 + t442 * t96;
t7 = -t102 * t374 + t281 * t38 + t96 * t354 + t442 * t42;
t315 = -t108 * t428 + t172 * t44;
t314 = t192 * t233;
t212 = t271 * t442 - t369;
t307 = t245 * t424 - t348;
t58 = qJD(5) * t301 + t126 * t442 - t206 * t374 - t281 * t290;
t300 = t108 * t58 + t143 * t43 - t144 * t44 - t446 * t59;
t200 = pkin(4) * t326 + t272;
t178 = pkin(4) * t313 + t241;
t72 = pkin(4) * t323 + t164;
t103 = -pkin(4) * t290 + t193;
t270 = -pkin(4) * t442 - pkin(5);
t268 = pkin(4) * t281 + qJ(6);
t207 = -pkin(5) - t212;
t205 = qJ(6) + t213;
t196 = t229 - t370;
t191 = (-t245 - t385) * t380;
t189 = -pkin(7) * t361 + t218;
t140 = -qJD(3) * t197 + t388;
t98 = t172 * pkin(5) - t173 * qJ(6) + t200;
t73 = t143 * pkin(5) - t144 * qJ(6) + t178;
t55 = t466 + t63;
t54 = t287 * pkin(5) - t56;
t53 = -qJ(6) * t287 + t433;
t52 = t134 + t63;
t49 = -t180 * t376 + t366;
t33 = t427 * t245 + (qJD(2) * t173 - t446) * t386;
t26 = -t245 * qJ(6) + t28;
t25 = t245 * pkin(5) + t392;
t13 = t59 * pkin(5) + t58 * qJ(6) - t144 * qJD(6) + t103;
t12 = -t144 * t43 - t446 * t58;
t11 = t58 * t245 + t43 * t287 + (qJD(1) * t144 + t446) * t380;
t10 = -t173 * t43 - t427 * t446;
t9 = t44 * pkin(5) + t43 * qJ(6) - qJD(6) * t446 + t72;
t6 = -pkin(5) * t380 - t8;
t5 = qJ(6) * t380 - qJD(6) * t287 + t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t339, t387 * t467, t393, -0.2e1 * t339, -t394, 0, -pkin(7) * t393 + t284 * t347, pkin(7) * t394 + t287 * t347, 0, 0, -t186 * t397 + t232 * t306 (-t230 * t286 - t232 * t283) * t379 + (t411 - t410 + (t230 * t283 - t232 * t286) * qJD(3)) * t284, t264 * t359 + t186 * t287 + (t232 * t284 + t286 * t325) * qJD(2), t187 * t399 + t230 * t305, t284 * t357 + t187 * t287 + (-t230 * t284 - t283 * t325) * qJD(2) (-t264 - t385) * t380, -t125 * t287 - t140 * t264 + (pkin(7) * t187 + t248 * t377) * t284 + ((pkin(7) * t230 + t404) * t287 + (t176 + (t196 + t370) * qJD(1)) * t284) * qJD(2), t124 * t287 + t139 * t264 + (-pkin(7) * t186 - t248 * t378) * t284 + ((pkin(7) * t232 + t403) * t287 + (-t177 + (-t197 + t267) * qJD(1)) * t284) * qJD(2), -t139 * t230 - t140 * t232 + t186 * t196 - t187 * t197 + t331 * t379 + (-t124 * t283 - t125 * t286 + (t176 * t283 - t177 * t286) * qJD(3)) * t284, t124 * t197 + t125 * t196 + t177 * t139 + t176 * t140 + (t248 + t273) * t275, -t126 * t329 + t206 * t94, -t126 * t330 + t206 * t323 - t329 * t302 + (t292 * t329 + t429) * t284, t126 * t253 + t94 * t287 + (-qJD(1) * t206 + t329) * t380, -t330 * t302 + (t292 * t330 + t460) * t284 (t253 * t382 + t323) * t287 + (-t292 * t253 + (-qJD(1) * t313 + t330) * qJD(2)) * t284 (-t253 - t385) * t380, -t50 * t253 - t193 * t330 + t241 * t323 + (qJD(2) * t314 - t30) * t287 + (t415 + t192 * t293 + (qJD(1) * t117 + t75) * qJD(2)) * t284, -t192 * t126 - t164 * t206 + t193 * t329 - t241 * t94 + t49 * t253 - t346 * t287 + (-qJD(1) * t118 - t76) * t380, t49 * t330 - t118 * t323 - t50 * t329 + t117 * t94 + t30 * t206 + t75 * t126 - t76 * t302 + (t233 * t346 + t292 * t76) * t284, t117 * t30 - t118 * t346 + t164 * t241 + t192 * t193 + t49 * t76 + t50 * t75, t12, t300, t11, t336, -t448, t191, t103 * t108 + t130 * t59 + t72 * t143 + t178 * t44 - t8 * t245 + t348 * t287 + (qJD(1) * t56 + t27) * t380, t103 * t446 - t130 * t58 + t72 * t144 - t178 * t43 + t7 * t245 - t349 * t287 + (-qJD(1) * t433 - t28) * t380, -t108 * t7 + t143 * t349 + t144 * t348 + t27 * t58 - t28 * t59 + t43 * t56 - t433 * t44 - t446 * t8, t103 * t130 + t178 * t72 + t27 * t8 + t28 * t7 - t348 * t56 - t349 * t433, t12, t11, -t300, t191, t448, t336, t13 * t108 + t9 * t143 + t2 * t287 + t6 * t245 + t73 * t44 + t51 * t59 + (-qJD(1) * t54 - t25) * t380, -t1 * t143 - t108 * t5 + t144 * t2 - t25 * t58 - t26 * t59 - t43 * t54 - t44 * t53 + t446 * t6, -t1 * t287 - t13 * t446 - t9 * t144 - t5 * t245 + t73 * t43 + t51 * t58 + (qJD(1) * t53 + t26) * t380, t1 * t53 + t13 * t51 + t2 * t54 + t25 * t6 + t26 * t5 + t73 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, t387 * t289, 0, t367, 0, 0, t289 * pkin(1) * t284, pkin(1) * t395, 0, 0, -t232 * t401 - t411 (-t186 + t409) * t286 + (-t187 + t407) * t283, -t357 + (t264 * t396 + t284 * t342) * qJD(1), -t230 * t402 - t410, t264 * t378 + (-t264 * t398 + t284 * t343) * qJD(1), t264 * t386, -pkin(2) * t187 + t188 * t264 + (pkin(8) * t401 + t404) * qJD(3) + ((-pkin(8) * t381 - t176) * t284 + (-pkin(7) * t343 - t404) * t287) * qJD(1), pkin(2) * t186 - t189 * t264 + (-pkin(8) * t402 + t403) * qJD(3) + ((-pkin(8) * t373 + t177) * t284 + (pkin(7) * t342 - t403) * t287) * qJD(1), t188 * t232 + t189 * t230 + ((qJD(3) * t232 - t187) * pkin(8) + t458) * t286 + ((qJD(3) * t230 - t186) * pkin(8) + t457) * t283, -t176 * t188 - t177 * t189 + (-t248 - t432) * t274 + (qJD(3) * t331 + t124 * t286 - t125 * t283) * pkin(8), t329 * t456 - t429, t199 * t330 + t329 * t198 - t460 + t326 * t94 + t454 * (-t233 * t329 - t326 * t330) (-t199 + t292) * t253 + (-t329 + t382) * t386, t323 * t326 + t330 * t481, -t481 * t253 + (-qJD(2) * t326 - t330) * t386, t253 * t386, t272 * t323 + t164 * t326 + t226 * t330 + t390 * t253 + (-t330 * t441 + t314) * qJD(3) + (qJD(2) * t184 - t75) * t386 + (-t198 + t310) * t192, t415 - t272 * t94 + t391 * t253 + (-qJD(2) * t185 + t76) * t386 + (qJD(3) * t441 - t226) * t329 + t456 * t192, t330 * t391 + t329 * t390 + t184 * t94 - t185 * t323 + t76 * t198 - t75 * t199 - t30 * t233 + t346 * t326 + t454 * (-t233 * t76 + t326 * t75) t164 * t272 + t184 * t30 - t185 * t346 + t470 * t192 - t390 * t75 + t391 * t76, t10, t445, t33, t315, -t447, t356, t172 * t72 + t200 * t44 + t434 * t245 - t428 * t130 + t389 * t108 + (-t27 + t384) * t386, t173 * t72 - t200 * t43 + t436 * t245 - t427 * t130 + t389 * t446 + (t28 - t383) * t386, t108 * t48 + t172 * t349 + t173 * t348 + t27 * t427 + t28 * t428 + t434 * t446 + t340, -t101 * t349 + t130 * t389 + t200 * t72 - t27 * t434 + t28 * t436 - t318 * t348, t10, t33, -t445, t356, t447, t315, t172 * t9 + t44 * t98 - t428 * t51 + t435 * t245 + t438 * t108 + (t25 + t384) * t386, -t1 * t172 + t108 * t45 + t173 * t2 - t25 * t427 + t26 * t428 + t435 * t446 + t340, -t173 * t9 + t43 * t98 + t427 * t51 - t437 * t245 - t438 * t446 + (-t26 + t383) * t386, t1 * t101 - t2 * t318 + t25 * t435 + t26 * t437 + t438 * t51 + t9 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, -t230 ^ 2 + t232 ^ 2, -t186 - t409, -t408, -t187 - t407, t269, -t248 * t232 - t457, t230 * t248 - t458, 0, 0, -t414, t453, t451, t414, t449, t269, t253 * t82 + (t232 * t330 + t253 * t376 + t269 * t285) * pkin(3) + t452, -t253 * t83 + (-t232 * t329 + t253 * t375 - t269 * t282) * pkin(3) + t450, t76 * t329 - t83 * t330 + t75 * t330 + t82 * t329 + (-t323 * t282 + t94 * t285 + (t282 * t329 + t285 * t330) * qJD(4)) * pkin(3), -t75 * t82 - t76 * t83 + (-t192 * t232 - t346 * t282 + t285 * t30 + (-t282 * t75 + t285 * t76) * qJD(4)) * pkin(3), t482, -t355, t479, -t482, -t474, t269, -t134 * t108 + t212 * t269 + t307 - t461, -t134 * t446 - t213 * t269 + t245 * t425 + t483, -t108 * t425 + t212 * t43 - t213 * t44 + t350 + t478, -t130 * t134 - t212 * t348 - t213 * t349 - t27 * t424 + t28 * t425, t482, t479, t355, t269, t474, -t482, -t108 * t52 - t207 * t269 + t263 + t307 - t431, -t205 * t44 - t207 * t43 + t26 * t446 + t350 + (t25 - t426) * t108, t205 * t269 - t245 * t426 + t446 * t52 + t484, t1 * t205 + t2 * t207 + t25 * t424 + t26 * t426 - t51 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t453, t451, t414, t449, t269, -t76 * t253 + t452, -t253 * t75 + t450, 0, 0, t482, -t355, t479, -t482, -t474, t269, -t461 - t31 * t245 + (-t108 * t329 + t245 * t374 + t269 * t442) * pkin(4) - t348, -t32 * t245 + (t245 * t354 - t269 * t281 - t329 * t446) * pkin(4) + t483, t32 * t108 - t31 * t446 + (t442 * t43 - t281 * t44 + (-t108 * t442 + t281 * t446) * qJD(5)) * pkin(4) + t478, t27 * t31 - t28 * t32 + (-t442 * t348 - t130 * t329 - t281 * t349 + (-t27 * t281 + t28 * t442) * qJD(5)) * pkin(4), t482, t479, t355, t269, t474, -t482, -t108 * t55 + t245 * t338 - t269 * t270 - t477, -t268 * t44 - t270 * t43 + (t26 + t338) * t446 + (-t423 + t25) * t108, -t245 * t423 + t268 * t269 + t446 * t55 + t484, t1 * t268 + t2 * t270 + t25 * t338 + t26 * t423 - t51 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, -t355, t479, -t482, -t474, t269, t321 - t461, t322 + t473, 0, 0, t482, t479, t355, t269, t474, -t482, -t108 * t63 + 0.2e1 * t263 + t321 - t431, pkin(5) * t43 - qJ(6) * t44 + (t26 - t28) * t446 + (t25 - t392) * t108, t446 * t63 - 0.2e1 * t242 + 0.2e1 * t261 - t322 - t476, -pkin(5) * t2 + qJ(6) * t1 - t25 * t28 + t26 * t392 - t51 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269 + t482, t479, -t245 ^ 2 - t444, t245 * t26 + t477;];
tauc_reg  = t3;
