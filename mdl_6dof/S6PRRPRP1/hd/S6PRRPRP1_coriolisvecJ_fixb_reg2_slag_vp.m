% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:26:34
% EndTime: 2019-03-08 21:26:45
% DurationCPUTime: 4.29s
% Computational Cost: add. (6004->427), mult. (15615->575), div. (0->0), fcn. (11929->10), ass. (0->233)
t169 = sin(qJ(2));
t165 = sin(pkin(6));
t231 = qJD(1) * t165;
t209 = t169 * t231;
t168 = sin(qJ(3));
t226 = qJD(3) * t168;
t296 = pkin(3) * t226 - t209;
t164 = sin(pkin(11));
t171 = cos(qJ(3));
t259 = cos(pkin(11));
t142 = t164 * t171 + t259 * t168;
t133 = t142 * qJD(3);
t203 = t259 * t171;
t182 = -t164 * t168 + t203;
t136 = t182 * qJD(3);
t295 = pkin(4) * t133 - pkin(9) * t136 + t296;
t282 = -qJ(4) - pkin(8);
t205 = qJD(3) * t282;
t224 = qJD(4) * t171;
t128 = t168 * t205 + t224;
t179 = -qJD(4) * t168 + t171 * t205;
t172 = cos(qJ(2));
t214 = t172 * t231;
t260 = -t259 * t128 - t164 * t179 + t182 * t214;
t153 = qJD(2) * t203;
t228 = qJD(2) * t168;
t131 = t164 * t228 - t153;
t127 = qJD(5) + t131;
t167 = sin(qJ(5));
t170 = cos(qJ(5));
t222 = qJD(5) * t170;
t223 = qJD(5) * t167;
t145 = qJD(2) * pkin(8) + t209;
t166 = cos(pkin(6));
t237 = t166 * t171;
t154 = qJD(1) * t237;
t229 = qJD(2) * t165;
t208 = qJD(1) * t229;
t194 = t172 * t208;
t233 = -qJD(3) * t154 - t171 * t194;
t92 = -t145 * t226 - t233;
t71 = (-qJ(4) * t226 + t224) * qJD(2) + t92;
t230 = qJD(1) * t168;
t213 = t166 * t230;
t118 = t145 * t171 + t213;
t225 = qJD(3) * t171;
t72 = -qJD(3) * t118 + (-qJ(4) * t225 + (-qJD(4) - t214) * t168) * qJD(2);
t39 = t164 * t72 + t259 * t71;
t197 = qJ(4) * qJD(2) + t145;
t106 = -t197 * t168 + t154;
t101 = qJD(3) * pkin(3) + t106;
t107 = t197 * t171 + t213;
t204 = t259 * t107;
t55 = t164 * t101 + t204;
t50 = qJD(3) * pkin(9) + t55;
t125 = qJD(2) * t133;
t220 = qJD(2) * qJD(3);
t207 = t168 * t220;
t129 = pkin(3) * t207 + t169 * t208;
t150 = t164 * t207;
t180 = qJD(3) * t153 - t150;
t64 = t125 * pkin(4) - pkin(9) * t180 + t129;
t160 = -pkin(3) * t171 - pkin(2);
t126 = t160 * qJD(2) + qJD(4) - t214;
t134 = t142 * qJD(2);
t67 = pkin(4) * t131 - pkin(9) * t134 + t126;
t202 = -t167 * t64 - t170 * t39 - t67 * t222 + t50 * t223;
t27 = -t167 * t50 + t170 * t67;
t294 = -t127 * t27 - t202;
t115 = t167 * qJD(3) + t170 * t134;
t221 = t170 * qJD(3);
t187 = qJD(5) * t221 - t134 * t223 + t170 * t180;
t28 = t167 * t67 + t170 * t50;
t7 = -qJD(5) * t28 - t167 * t39 + t170 * t64;
t175 = -qJ(6) * t187 + t7;
t285 = pkin(5) * t125;
t2 = -qJD(6) * t115 + t175 + t285;
t113 = t134 * t167 - t221;
t20 = -qJ(6) * t113 + t28;
t274 = t127 * t20;
t293 = t2 + t274;
t292 = t127 * t28 + t7;
t148 = t282 * t168;
t149 = t282 * t171;
t111 = t164 * t148 - t259 * t149;
t102 = t170 * t111;
t96 = -pkin(4) * t182 - pkin(9) * t142 + t160;
t52 = t167 * t96 + t102;
t291 = t260 * t167 + t170 * t295;
t290 = t167 * t295 - t260 * t170 + t96 * t222;
t261 = t128 * t164 - t142 * t214 - t259 * t179;
t199 = t127 * t167;
t289 = t115 * t199;
t74 = t115 * qJD(5) + t167 * t180;
t288 = t115 ^ 2;
t287 = t134 ^ 2;
t286 = pkin(3) * t168;
t284 = t113 * pkin(5);
t38 = t164 * t71 - t259 * t72;
t240 = t165 * t169;
t137 = -t168 * t240 + t237;
t138 = t166 * t168 + t171 * t240;
t88 = -t259 * t137 + t138 * t164;
t283 = t38 * t88;
t189 = -qJ(6) * t136 - qJD(6) * t142;
t281 = pkin(5) * t133 + t189 * t170 + (-t102 + (qJ(6) * t142 - t96) * t167) * qJD(5) + t291;
t210 = t142 * t222;
t280 = -qJ(6) * t210 + (-qJD(5) * t111 + t189) * t167 + t290;
t19 = -qJ(6) * t115 + t27;
t15 = pkin(5) * t127 + t19;
t279 = t15 - t19;
t278 = -t111 * t223 + t290;
t277 = -qJD(5) * t52 + t291;
t97 = t164 * t107;
t60 = t259 * t106 - t97;
t218 = pkin(3) * t228;
t83 = pkin(4) * t134 + pkin(9) * t131 + t218;
t36 = t167 * t83 + t170 * t60;
t276 = qJD(2) * pkin(2);
t110 = -t259 * t148 - t149 * t164;
t275 = t110 * t38;
t18 = pkin(5) * t74 + t38;
t271 = t167 * t18;
t270 = t167 * t38;
t269 = t167 * t187;
t268 = t170 * t18;
t267 = t170 * t38;
t266 = t170 * t74;
t265 = -t113 * t222 - t167 * t74;
t245 = t136 * t167;
t184 = t210 + t245;
t264 = pkin(5) * t184 + t261;
t157 = pkin(3) * t164 + pkin(9);
t234 = qJ(6) + t157;
t200 = qJD(5) * t234;
t248 = t131 * t167;
t263 = -qJ(6) * t248 + qJD(6) * t170 - t167 * t200 - t36;
t247 = t131 * t170;
t35 = -t167 * t60 + t170 * t83;
t262 = -pkin(5) * t134 - qJ(6) * t247 - qJD(6) * t167 - t170 * t200 - t35;
t258 = t113 * t127;
t257 = t113 * t131;
t256 = t113 * t134;
t255 = t115 * t113;
t254 = t115 * t127;
t253 = t115 * t134;
t252 = t115 * t167;
t251 = t125 * t182;
t250 = t125 * t167;
t249 = t127 * t134;
t246 = t134 * t131;
t244 = t136 * t170;
t243 = t142 * t167;
t242 = t142 * t170;
t241 = t145 * t168;
t239 = t165 * t172;
t174 = qJD(2) ^ 2;
t238 = t165 * t174;
t121 = t170 * t125;
t173 = qJD(3) ^ 2;
t236 = t173 * t168;
t235 = t173 * t171;
t162 = t168 ^ 2;
t163 = t171 ^ 2;
t232 = t162 - t163;
t227 = qJD(2) * t169;
t216 = t169 * t238;
t215 = t168 * t174 * t171;
t212 = t165 * t227;
t211 = t172 * t229;
t201 = qJD(6) + t284;
t51 = -t111 * t167 + t170 * t96;
t58 = t106 * t164 + t204;
t198 = t127 * t170;
t196 = t168 * t211;
t195 = t171 * t211;
t193 = t171 * t207;
t158 = -t259 * pkin(3) - pkin(4);
t146 = -t214 - t276;
t192 = -t146 - t214;
t186 = qJ(6) * t74 + t202;
t5 = -qJD(6) * t113 - t186;
t191 = -t127 * t15 + t5;
t54 = t259 * t101 - t97;
t190 = -t167 * t28 - t170 * t27;
t188 = t121 + (-t223 - t248) * t127;
t89 = t164 * t137 + t259 * t138;
t69 = -t167 * t89 - t170 * t239;
t185 = t167 * t239 - t170 * t89;
t183 = -t142 * t223 + t244;
t49 = -qJD(3) * pkin(4) - t54;
t181 = -t125 * t157 + t127 * t49;
t178 = qJD(3) * (-t192 - t276);
t117 = t154 - t241;
t93 = -t145 * t225 + (-qJD(3) * t166 - t211) * t230;
t176 = -t168 * t93 + t171 * t92 + (-t117 * t171 - t118 * t168) * qJD(3);
t147 = -t170 * pkin(5) + t158;
t140 = t234 * t170;
t139 = t234 * t167;
t130 = t131 ^ 2;
t112 = t113 ^ 2;
t105 = -t138 * qJD(3) - t196;
t104 = t137 * qJD(3) + t195;
t80 = pkin(5) * t243 + t110;
t59 = t259 * t104 + t164 * t105;
t57 = t104 * t164 - t259 * t105;
t56 = t127 * t133 - t251;
t48 = -t112 + t288;
t45 = -pkin(5) * t248 + t58;
t44 = -qJ(6) * t243 + t52;
t43 = t254 - t74;
t42 = t187 + t258;
t41 = t201 + t49;
t40 = -pkin(5) * t182 - qJ(6) * t242 + t51;
t34 = -t127 ^ 2 * t170 - t250 - t253;
t33 = t127 * t198 + t250 - t253;
t32 = t188 + t256;
t31 = t188 - t256;
t30 = t113 * t199 - t266;
t29 = t115 * t198 + t269;
t26 = t185 * qJD(5) - t167 * t59 + t170 * t212;
t25 = t69 * qJD(5) + t167 * t212 + t170 * t59;
t22 = t113 * t184 + t74 * t243;
t21 = t115 * t183 + t187 * t242;
t14 = -t113 * t133 - t125 * t243 - t127 * t184 + t182 * t74;
t13 = t115 * t133 + t142 * t121 + t127 * t183 - t182 * t187;
t10 = (t187 - t257) * t170 - t289 + t265;
t9 = (-t187 - t257) * t170 + t289 + t265;
t8 = (-t113 * t170 - t252) * t136 + (-t269 - t266 + (t113 * t167 - t115 * t170) * qJD(5)) * t142;
t4 = t113 * t57 + t125 * t69 + t127 * t26 + t74 * t88;
t3 = t115 * t57 + t125 * t185 - t127 * t25 + t187 * t88;
t1 = -t113 * t25 - t115 * t26 + t185 * t74 - t187 * t69;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, -t172 * t238, 0, 0, 0, 0, 0, 0, 0, 0, -t171 * t216 + (t105 - t196) * qJD(3), t168 * t216 + (-t104 - t195) * qJD(3) (t104 * t171 - t105 * t168 + (-t137 * t171 - t138 * t168) * qJD(3)) * qJD(2), t104 * t118 + t105 * t117 + t137 * t93 + t138 * t92 + (t146 - t214) * t212, 0, 0, 0, 0, 0, 0, -qJD(3) * t57 + (-t125 * t172 + t131 * t227) * t165, -t59 * qJD(3) + (t134 * t227 - t172 * t180) * t165, -t89 * t125 - t59 * t131 + t57 * t134 + t180 * t88, t283 + t39 * t89 - t54 * t57 + t55 * t59 + (t126 * t227 - t129 * t172) * t165, 0, 0, 0, 0, 0, 0, t4, t3, t1, t185 * t202 + t25 * t28 + t26 * t27 + t49 * t57 + t69 * t7 + t283, 0, 0, 0, 0, 0, 0, t4, t3, t1, t15 * t26 + t18 * t88 - t185 * t5 + t2 * t69 + t20 * t25 + t41 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t193, -0.2e1 * t232 * t220, t235, -0.2e1 * t193, -t236, 0, -pkin(8) * t235 + t168 * t178, pkin(8) * t236 + t171 * t178 (-t162 - t163) * t194 + t176 ((t117 * t168 - t118 * t171) * t172 + (-t146 - t276) * t169) * t231 + t176 * pkin(8), t134 * t136 + t142 * t180, -t142 * t125 - t136 * t131 - t134 * t133 + t180 * t182, t136 * qJD(3), t131 * t133 - t251, -t133 * qJD(3), 0, -t131 * t209 + t125 * t160 + t126 * t133 - t129 * t182 + (t131 * t286 - t261) * qJD(3), -t134 * t209 + t126 * t136 + t129 * t142 - t160 * t150 + (t134 * t286 + t153 * t160 + t260) * qJD(3), t110 * t180 - t111 * t125 + t260 * t131 - t55 * t133 + t261 * t134 - t54 * t136 + t38 * t142 + t182 * t39, t111 * t39 + t296 * t126 + t129 * t160 - t260 * t55 - t261 * t54 + t275, t21, t8, t13, t22, t14, t56, t49 * t245 + t110 * t74 + t125 * t51 + t133 * t27 - t182 * t7 + (t222 * t49 + t270) * t142 + t277 * t127 + t261 * t113, t49 * t244 + t110 * t187 - t125 * t52 - t133 * t28 - t182 * t202 + (-t223 * t49 + t267) * t142 - t278 * t127 + t261 * t115, -t51 * t187 - t52 * t74 + t190 * t136 - t277 * t115 - t278 * t113 + (t167 * t202 - t170 * t7 + (t167 * t27 - t170 * t28) * qJD(5)) * t142, -t202 * t52 + t261 * t49 + t27 * t277 + t278 * t28 + t51 * t7 + t275, t21, t8, t13, t22, t14, t56, t41 * t245 + t125 * t40 + t133 * t15 - t182 * t2 + t74 * t80 + (t222 * t41 + t271) * t142 + t281 * t127 + t264 * t113, t41 * t244 - t125 * t44 - t133 * t20 + t182 * t5 + t187 * t80 + (-t223 * t41 + t268) * t142 - t280 * t127 + t264 * t115, -t40 * t187 - t44 * t74 + (-t15 * t170 - t167 * t20) * t136 - t281 * t115 - t280 * t113 + (-t167 * t5 - t170 * t2 + (t15 * t167 - t170 * t20) * qJD(5)) * t142, t15 * t281 + t18 * t80 + t2 * t40 + t20 * t280 + t264 * t41 + t44 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, t232 * t174, 0, t215, 0, 0, t192 * t228, -qJD(2) * t146 * t171 + (t117 + t241) * qJD(3) + t233, 0, 0, t246, -t130 + t287, -t150 + (t153 + t131) * qJD(3), -t246, 0, 0, qJD(3) * t58 - t126 * t134 - t131 * t218 - t38, t60 * qJD(3) + t126 * t131 - t134 * t218 - t39 (t55 - t58) * t134 + (t60 - t54) * t131 + (-t164 * t125 - t259 * t180) * pkin(3), t54 * t58 - t55 * t60 + (-t126 * t228 + t164 * t39 - t259 * t38) * pkin(3), t29, t10, t33, t30, t32, -t249, -t113 * t58 - t134 * t27 + t158 * t74 - t267 + (-t157 * t222 - t35) * t127 + t181 * t167, -t115 * t58 + t134 * t28 + t158 * t187 + t270 + (t157 * t223 + t36) * t127 + t181 * t170, t113 * t36 + t115 * t35 + (-t131 * t27 - t157 * t74 - t202 + (t115 * t157 - t27) * qJD(5)) * t170 + (-t131 * t28 + t157 * t187 - t7 + (t113 * t157 - t28) * qJD(5)) * t167, t158 * t38 - t27 * t35 - t28 * t36 - t49 * t58 + (qJD(5) * t190 - t167 * t7 - t170 * t202) * t157, t29, t10, t33, t30, t32, -t249, -t113 * t45 - t125 * t139 - t134 * t15 + t147 * t74 - t268 + t262 * t127 + (t131 * t41 + (t41 + t284) * qJD(5)) * t167, t41 * t247 - t115 * t45 - t125 * t140 + t134 * t20 + t147 * t187 + t271 - t263 * t127 + (pkin(5) * t252 + t170 * t41) * qJD(5), -t263 * t113 - t262 * t115 + t139 * t187 - t140 * t74 - t167 * t293 + t191 * t170, -t139 * t2 + t140 * t5 + t147 * t18 + (pkin(5) * t223 - t45) * t41 + t263 * t20 + t262 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t134 * qJD(3), -t150 + (t153 - t131) * qJD(3), -t130 - t287, t131 * t55 + t134 * t54 + t129, 0, 0, 0, 0, 0, 0, t31, t34, t9, -t134 * t49 + t294 * t167 + t292 * t170, 0, 0, 0, 0, 0, 0, t31, t34, t9, -t134 * t41 + t191 * t167 + t170 * t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, t48, t42, -t255, t43, t125, -t115 * t49 + t292, t113 * t49 - t294, 0, 0, t255, t48, t42, -t255, t43, t125, 0.2e1 * t285 + t274 + (-t201 - t41) * t115 + t175, -pkin(5) * t288 + t127 * t19 + (qJD(6) + t41) * t113 + t186, -pkin(5) * t187 - t113 * t279, t279 * t20 + (-t115 * t41 + t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74 + t254, t187 - t258, -t112 - t288, t113 * t20 + t115 * t15 + t18;];
tauc_reg  = t6;
