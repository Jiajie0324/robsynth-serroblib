% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:26:41
% EndTime: 2019-03-08 21:27:00
% DurationCPUTime: 13.69s
% Computational Cost: add. (11395->598), mult. (25841->805), div. (0->0), fcn. (29525->10), ass. (0->493)
t507 = sin(qJ(3));
t749 = cos(pkin(11));
t578 = t749 * t507;
t504 = sin(pkin(11));
t510 = cos(qJ(3));
t688 = t504 * t510;
t467 = t578 + t688;
t505 = sin(pkin(6));
t511 = cos(qJ(2));
t686 = t505 * t511;
t403 = t467 * t686;
t805 = -t403 / 0.2e1;
t760 = -qJ(4) - pkin(8);
t481 = t760 * t507;
t482 = t760 * t510;
t398 = -t749 * t481 - t482 * t504;
t509 = cos(qJ(5));
t797 = t398 * t509;
t804 = t797 / 0.2e1;
t506 = sin(qJ(5));
t798 = t398 * t506;
t803 = t798 / 0.2e1;
t476 = t749 * t482;
t690 = t504 * t481;
t793 = -t476 + t690;
t508 = sin(qJ(2));
t687 = t505 * t508;
t750 = cos(pkin(6));
t454 = t507 * t687 - t510 * t750;
t455 = t507 * t750 + t510 * t687;
t324 = t749 * t454 + t455 * t504;
t800 = t324 / 0.2e1;
t802 = t793 * t800;
t495 = pkin(3) * t504 + pkin(9);
t496 = -pkin(3) * t749 - pkin(4);
t577 = t749 * t510;
t689 = t504 * t507;
t535 = t577 - t689;
t404 = t535 * t686;
t683 = t506 * t404;
t335 = t509 * t687 - t683;
t612 = t506 * t687;
t680 = t509 * t404;
t336 = t612 + t680;
t767 = -t506 / 0.2e1;
t785 = t336 * t509 / 0.2e1 + t335 * t767;
t801 = -t785 * t495 + t496 * t805;
t588 = t686 / 0.2e1;
t799 = t688 / 0.2e1;
t711 = t793 * t506;
t710 = t793 * t509;
t682 = t506 * t509;
t613 = t467 * t682;
t574 = 0.2e1 * t613;
t497 = -pkin(3) * t510 - pkin(2);
t533 = -pkin(4) * t535 - pkin(9) * t467 + t497;
t223 = -t509 * t533 + t711;
t681 = t509 * qJ(6);
t191 = t467 * t681 + t223;
t763 = t535 * pkin(5);
t170 = -t191 - t763;
t796 = t170 + t191;
t426 = t749 * t455;
t691 = t504 * t454;
t795 = t426 - t691;
t622 = t467 * qJD(2);
t447 = t509 * t622;
t654 = qJD(3) * t506;
t413 = t447 + t654;
t462 = t535 ^ 2;
t463 = t467 ^ 2;
t794 = -t463 - t462;
t618 = t463 - t462;
t478 = -t509 * pkin(5) + t496;
t695 = t478 * t506;
t417 = pkin(5) * t682 - t695;
t580 = t800 - t324 / 0.2e1;
t187 = t580 * t506;
t636 = t187 * qJD(1);
t669 = qJ(6) + t495;
t459 = t669 * t509;
t500 = t506 ^ 2;
t502 = t509 ^ 2;
t768 = -t502 / 0.2e1;
t579 = t500 / 0.2e1 + t768;
t694 = t478 * t509;
t592 = -t694 / 0.2e1;
t361 = t506 * t467;
t307 = pkin(5) * t361 + t398;
t724 = t307 * t506;
t598 = -t724 / 0.2e1;
t761 = t507 * pkin(3);
t364 = pkin(4) * t467 - pkin(9) * t535 + t761;
t334 = t509 * t364;
t666 = t334 / 0.2e1 + t803;
t76 = t598 - (t681 / 0.2e1 + t459 / 0.2e1) * t535 + (t592 + (0.1e1 - t579) * pkin(5)) * t467 + t666;
t792 = -qJD(2) * t76 - qJD(3) * t417 - t636;
t766 = t506 / 0.2e1;
t189 = (t766 - t767) * t324;
t693 = t495 * t535;
t697 = t467 * t496;
t539 = -t693 / 0.2e1 - t697 / 0.2e1;
t517 = t539 * t506 + t804;
t333 = t506 * t364;
t667 = -t333 / 0.2e1 + t804;
t118 = t517 - t667;
t188 = t580 * t509;
t635 = t188 * qJD(1);
t652 = qJD(3) * t509;
t791 = -qJD(2) * t118 - t496 * t652 + t635;
t437 = t500 * pkin(5) + t694;
t457 = t669 * t506;
t769 = t467 / 0.2e1;
t594 = t478 * t769;
t723 = t307 * t509;
t525 = -pkin(5) * t613 - t723 / 0.2e1 + t506 * t594;
t587 = qJ(6) * t767;
t87 = -(t587 - t457 / 0.2e1) * t535 + t525 + t667;
t790 = qJD(2) * t87 - qJD(3) * t437 + t635;
t527 = t539 * t509;
t774 = t398 / 0.2e1;
t120 = -t334 / 0.2e1 - t527 + (t774 - t398 / 0.2e1) * t506;
t789 = -qJD(2) * t120 - t496 * t654 + t636;
t581 = t191 / 0.2e1 + t170 / 0.2e1;
t614 = -t763 / 0.2e1;
t547 = t614 + t581;
t26 = t547 * t506;
t278 = -t506 * t686 + t509 * t795;
t728 = t278 * t509;
t263 = t728 / 0.2e1;
t599 = -t728 / 0.2e1;
t157 = t263 + t599;
t638 = t157 * qJD(1);
t788 = qJD(2) * t26 - t638;
t725 = t307 * t467;
t224 = t506 * t533 + t710;
t192 = -qJ(6) * t361 + t224;
t736 = t192 * t509;
t740 = t170 * t506;
t48 = t725 - (-t736 + t740) * t535;
t277 = t506 * t795 + t509 * t686;
t730 = t277 * t506;
t543 = t599 - t730 / 0.2e1;
t720 = t324 * t467;
t596 = t720 / 0.2e1;
t519 = -t535 * t543 + t596;
t716 = t336 * t506;
t717 = t335 * t509;
t541 = -t717 / 0.2e1 - t716 / 0.2e1;
t55 = t519 + t541;
t679 = t55 * qJD(1);
t787 = -qJD(2) * t48 - t679;
t685 = t506 * t223;
t708 = t398 * t467;
t734 = t224 * t509;
t89 = t708 - (-t685 - t734) * t535;
t786 = qJD(2) * t89 + t679;
t664 = t578 * t588 + t686 * t799;
t458 = t578 / 0.2e1 + t799;
t784 = pkin(5) / 0.2e1;
t233 = t334 + t798;
t363 = t509 * t535;
t762 = t467 * pkin(5);
t171 = -qJ(6) * t363 + t233 + t762;
t783 = t171 / 0.2e1;
t782 = -t277 / 0.2e1;
t780 = t278 / 0.2e1;
t779 = t795 / 0.2e1;
t776 = -t795 / 0.2e1;
t775 = t335 / 0.2e1;
t773 = t457 / 0.2e1;
t772 = -t459 / 0.2e1;
t771 = t535 / 0.2e1;
t770 = -t467 / 0.2e1;
t765 = -t509 / 0.2e1;
t764 = pkin(5) * t463;
t54 = t519 - t541;
t721 = t324 * t403;
t75 = -t277 * t335 + t278 * t336 + t721;
t673 = t75 * qJD(1);
t759 = t54 * qJD(4) + t673;
t758 = t55 * qJD(4) - t673;
t757 = qJD(3) * pkin(3);
t566 = t580 * t535;
t524 = t769 * t795 - t566;
t514 = t278 * t770 + t509 * t524;
t704 = t403 * t506;
t66 = -t704 / 0.2e1 + t514;
t676 = t66 * qJD(1);
t753 = t361 * qJD(4) - t676;
t452 = t500 * t535;
t453 = t502 * t535;
t365 = -t452 - t453;
t544 = t277 * t765 + t278 * t766;
t528 = t544 * t535;
t82 = -t528 - t785;
t672 = t82 * qJD(1);
t752 = -t365 * qJD(4) - t672;
t358 = t506 * t535;
t590 = t687 / 0.2e1;
t597 = -t720 / 0.2e1;
t538 = t590 + t597;
t585 = -t683 / 0.2e1;
t729 = t278 * t535;
t103 = t585 - t729 / 0.2e1 + t538 * t509;
t642 = t103 * qJD(1);
t751 = -t358 * qJD(4) + t642;
t16 = t547 * t509;
t748 = qJD(2) * t16;
t21 = t796 * t361;
t747 = qJD(2) * t21;
t698 = t459 * t509;
t701 = t457 * t506;
t518 = -(-t698 / 0.2e1 - t701 / 0.2e1) * t535 + t594;
t234 = -t797 + t333;
t198 = -qJ(6) * t358 + t234;
t735 = t198 * t506;
t738 = t171 * t509;
t546 = -t738 / 0.2e1 - t735 / 0.2e1;
t47 = t518 + t546;
t745 = qJD(2) * t47;
t93 = t192 * t535 + (t506 * t764 + t725) * t509;
t742 = qJD(2) * t93;
t94 = -t191 * t535 - t307 * t361 + t502 * t764;
t741 = qJD(2) * t94;
t739 = t170 * t509;
t558 = t192 * t506 + t739;
t18 = (t735 + t738) * t467 + t558 * t535;
t737 = t18 * qJD(2);
t733 = t233 * t509;
t732 = t234 * t506;
t731 = t277 * t535;
t306 = pkin(5) * t358 + t793;
t727 = t306 * t506;
t726 = t306 * t509;
t719 = t795 * t535;
t35 = (t170 + t727) * t467 - (t171 - t724) * t535;
t714 = t35 * qJD(2);
t36 = (t732 + t733) * t467 - (t223 * t509 - t224 * t506) * t535;
t713 = t36 * qJD(2);
t709 = t398 * t403;
t703 = t403 * t509;
t41 = (-t192 + t726) * t467 - (-t198 - t723) * t535;
t702 = t41 * qJD(2);
t700 = t457 * t509;
t699 = t459 * t506;
t696 = t467 * t509;
t692 = t500 * t467;
t58 = (t795 - t728 - t730) * t324;
t678 = t58 * qJD(1);
t515 = t277 * t770 + t506 * t524;
t63 = t703 / 0.2e1 + t515;
t677 = t63 * qJD(1);
t71 = (-t223 + t711) * t467 - (t233 - t798) * t535;
t675 = t71 * qJD(2);
t72 = (-t224 + t710) * t467 - (-t234 - t797) * t535;
t674 = t72 * qJD(2);
t84 = (t776 + t779) * t467 - t566;
t671 = t84 * qJD(2);
t522 = -(t768 - t500 / 0.2e1) * t693 + t697 / 0.2e1;
t545 = -t733 / 0.2e1 - t732 / 0.2e1;
t91 = t522 + t545;
t670 = t91 * qJD(2);
t668 = -t740 / 0.2e1 + t736 / 0.2e1;
t488 = t500 + t502;
t489 = t502 - t500;
t134 = -t223 * t535 - t361 * t398;
t662 = qJD(2) * t134;
t135 = t224 * t535 + t398 * t696;
t661 = qJD(2) * t135;
t289 = t618 * t506;
t660 = qJD(2) * t289;
t290 = t794 * t506;
t659 = qJD(2) * t290;
t291 = t618 * t509;
t658 = qJD(2) * t291;
t368 = t794 * t509;
t211 = qJD(2) * t368;
t657 = qJD(2) * t505;
t656 = qJD(2) * t508;
t655 = qJD(2) * t510;
t653 = qJD(3) * t507;
t651 = qJD(3) * t510;
t650 = qJD(3) * t511;
t649 = qJD(4) * t509;
t648 = qJD(5) * t192;
t647 = qJD(5) * t278;
t646 = qJD(5) * t459;
t645 = qJD(5) * t506;
t499 = qJD(5) * t509;
t644 = qJD(6) * t506;
t643 = qJD(6) * t509;
t583 = -t680 / 0.2e1;
t104 = t583 + t731 / 0.2e1 - t538 * t506;
t641 = t104 * qJD(1);
t484 = t505 ^ 2 * t508 * t511;
t131 = t404 * t795 - t484 + t721;
t639 = t131 * qJD(1);
t637 = t157 * qJD(4);
t248 = -t484 + (t454 * t507 + t455 * t510) * t686;
t634 = t248 * qJD(1);
t591 = t467 * t768;
t569 = -t692 / 0.2e1 + t591;
t283 = t569 - t458;
t633 = t283 * qJD(2);
t611 = -t749 / 0.2e1;
t531 = t467 * t611 + t504 * t771;
t312 = (-t507 / 0.2e1 + t531) * pkin(3);
t632 = t312 * qJD(2);
t631 = t618 * qJD(2);
t357 = t579 * t467;
t630 = t357 * qJD(5);
t629 = t358 * qJD(2);
t628 = t361 * qJD(2);
t348 = t363 * qJD(2);
t627 = t365 * qJD(2);
t366 = t488 * t463;
t626 = t366 * qJD(2);
t625 = t794 * qJD(2);
t624 = t458 * qJD(2);
t623 = t535 * qJD(2);
t621 = t467 * qJD(3);
t620 = t488 * qJD(3);
t501 = t507 ^ 2;
t503 = t510 ^ 2;
t490 = t503 - t501;
t619 = t490 * qJD(2);
t617 = pkin(2) * t507 * qJD(2);
t616 = pkin(2) * t655;
t615 = pkin(5) * t645;
t610 = t506 * t652;
t609 = t467 * t645;
t608 = t467 * t499;
t607 = t467 * t644;
t606 = t467 * t643;
t605 = t535 * t622;
t394 = t535 * t621;
t604 = t505 * t656;
t603 = t511 * t657;
t491 = t506 * t499;
t602 = t507 * t651;
t601 = t509 * t623;
t600 = t535 * t643;
t593 = t696 / 0.2e1;
t589 = -t686 / 0.2e1;
t584 = -t361 / 0.2e1;
t582 = -t363 / 0.2e1;
t576 = t488 * t324;
t575 = (t501 + t503) * t511;
t380 = t535 * t447;
t232 = -qJD(3) * t358 - t380;
t573 = t506 * t614;
t571 = t463 * t491;
t570 = t324 * t593;
t568 = -t535 * t649 + t641;
t567 = -t467 * t649 - t677;
t565 = qJD(3) * t574;
t564 = t426 / 0.2e1 - t691 / 0.2e1;
t563 = -t380 + t608;
t15 = t170 * t171 + t192 * t198 + t306 * t307;
t513 = t171 * t782 + t198 * t780 + t306 * t800 + t307 * t779 - t324 * t668;
t521 = t335 * t773 + t336 * t772 + t478 * t805;
t2 = t513 + t521;
t562 = t2 * qJD(1) + t15 * qJD(2);
t23 = t307 * pkin(5) * t696 - t192 * t796;
t6 = t581 * t278 + (t509 * t597 + t775) * pkin(5);
t561 = -qJD(1) * t6 + qJD(2) * t23;
t40 = -t223 * t233 + t224 * t234 + t793 * t398;
t542 = t774 * t795 + t802;
t512 = -(t734 / 0.2e1 + t685 / 0.2e1) * t324 + t233 * t782 + t234 * t780 + t542;
t5 = t512 + t801;
t560 = t5 * qJD(1) + t40 * qJD(2);
t80 = t558 * t467;
t96 = t467 * t544 + t664;
t559 = -qJD(1) * t96 - qJD(2) * t80;
t557 = -t233 * t506 + t234 * t509;
t351 = t698 + t701;
t556 = -t467 * t495 + t496 * t535;
t555 = t84 * qJD(1);
t143 = t497 * t761;
t516 = -t398 * t776 - t542 + t802;
t532 = t404 * t504 / 0.2e1 + t403 * t611;
t37 = (t507 * t588 + t532) * pkin(3) + t516;
t554 = -t37 * qJD(1) + t143 * qJD(2);
t146 = -t719 / 0.2e1 + t538;
t201 = t535 * t793 + t708;
t550 = -qJD(1) * t146 + qJD(2) * t201;
t292 = t467 * t588 - t664;
t331 = t467 * t497 - t535 * t761;
t549 = -qJD(1) * t292 + qJD(2) * t331;
t530 = -t577 / 0.2e1 + t689 / 0.2e1;
t293 = (t771 + t530) * t686;
t332 = t467 * t761 + t497 * t535;
t548 = -qJD(1) * t293 + qJD(2) * t332;
t193 = (-qJD(5) + t623) * t361;
t299 = -qJD(2) * t357 + t610;
t411 = t506 * t622 - t652;
t296 = qJD(5) * t458 - t605;
t534 = t467 * t592 + t598;
t249 = qJD(2) * t463 * t682 + qJD(3) * t357;
t367 = t489 * t463;
t267 = qJD(2) * t367 + t565;
t381 = qJD(2) * t574 - qJD(3) * t489;
t206 = pkin(5) * t695;
t31 = pkin(5) * t187;
t8 = t581 * t459 + (t783 + t534) * pkin(5);
t529 = -qJD(1) * t31 - qJD(2) * t8 + qJD(3) * t206;
t112 = t543 + t564;
t520 = (-t699 / 0.2e1 + t700 / 0.2e1) * t467 + t668;
t523 = t476 / 0.2e1 - t690 / 0.2e1 + t573;
t45 = t520 + t523;
t526 = -qJD(1) * t112 + qJD(2) * t45 + qJD(3) * t351;
t492 = t507 * t655;
t483 = t489 * qJD(5);
t456 = t535 * qJD(3);
t449 = t458 * qJD(3);
t446 = t509 * t621;
t412 = -t499 + t601;
t402 = t413 * pkin(5);
t356 = t368 * qJD(4);
t352 = t365 * qJD(3);
t339 = t358 * qJD(5);
t311 = t761 / 0.2e1 + t531 * pkin(3);
t310 = t499 - t348;
t309 = t629 - t645;
t295 = t467 * t589 - t664;
t294 = t530 * t686 - t535 * t588;
t284 = t290 * qJD(4);
t282 = t569 + t458;
t280 = t394 * t502 - t571;
t279 = t394 * t500 + t571;
t260 = 0.2e1 * t509 * t193;
t231 = -t502 * t605 - t630;
t230 = qJD(3) * t363 - t506 * t605;
t229 = -t500 * t605 + t630;
t222 = -qJD(5) * t367 - t535 * t565;
t203 = qJD(3) * t291 + t535 * t609;
t202 = -qJD(3) * t289 + t535 * t608;
t197 = -qJD(5) * t363 - t658;
t195 = t339 + t660;
t190 = -t324 * t765 + t509 * t800;
t186 = -t630 - (-t502 * t622 - t610) * t535;
t185 = t630 - (-t500 * t622 + t610) * t535;
t180 = (-t452 + t453) * qJD(3) + (-qJD(5) - t623) * t574;
t178 = -qJD(3) * t361 + t499 * t535 + t211;
t165 = t506 * t621 + t658;
t164 = t446 - t660;
t163 = t339 + t446 + t659;
t151 = t157 * qJD(5);
t147 = t719 / 0.2e1 + t596 + t590;
t121 = t803 - t527 + t666;
t119 = t517 + t667;
t113 = t263 + t730 / 0.2e1 + t564;
t106 = t729 / 0.2e1 + t570 + t585 + t509 * t590;
t105 = -t731 / 0.2e1 + t324 * t584 + t583 - t612 / 0.2e1;
t97 = t277 * t593 + t278 * t584 + t664;
t90 = t522 - t545;
t88 = -t525 + t667 - (t587 + t773) * t535;
t83 = t84 * qJD(3);
t81 = -t528 + t785;
t77 = pkin(5) * t591 + qJ(6) * t582 + t459 * t771 + t692 * t784 - t534 + t666 + t762;
t70 = qJD(2) * t104 + qJD(3) * t188;
t69 = qJD(2) * t103 + qJD(3) * t187;
t65 = t704 / 0.2e1 + t514;
t64 = -t703 / 0.2e1 + t515;
t46 = t518 - t546;
t44 = t520 - t523;
t43 = qJD(2) * t106 + qJD(3) * t189 - t647;
t42 = qJD(2) * t105 + qJD(3) * t190 + qJD(5) * t277;
t39 = qJD(2) * t82;
t38 = pkin(3) * t532 + t589 * t761 - t516;
t34 = -qJD(2) * t63 - qJD(5) * t187;
t33 = -qJD(2) * t66 - qJD(5) * t188;
t32 = t189 * pkin(5);
t30 = qJD(3) * t82;
t29 = -qJD(2) * t55 + t151;
t28 = qJD(2) * t54 + t151;
t27 = t191 * t767 - t736 / 0.2e1 + t573 + t668;
t25 = qJD(2) * t65 + qJD(5) * t190 + t654 * t795;
t24 = qJD(2) * t64 + qJD(5) * t189 - t652 * t795;
t22 = t81 * qJD(2) - qJD(3) * t576;
t20 = qJD(3) * t66 - qJD(5) * t104;
t19 = qJD(3) * t63 - qJD(5) * t103;
t17 = t191 * t765 - t739 / 0.2e1 + pkin(5) * t582;
t14 = t81 * qJD(3) + (-t716 - t717) * t622;
t11 = (t336 * t535 + t403 * t696) * qJD(2) + t65 * qJD(3) + t105 * qJD(5);
t10 = (-t335 * t535 + t361 * t403) * qJD(2) + t64 * qJD(3) + t106 * qJD(5);
t9 = t724 * t784 + t796 * t772 + (t478 * t593 + t783) * pkin(5);
t7 = -t796 * t278 / 0.2e1 + (t570 + t775) * pkin(5);
t4 = t512 - t801;
t3 = qJD(2) * t75 + qJD(3) * t58;
t1 = t513 - t521;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t248, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t131, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t604, -t603, 0, 0, 0, 0, 0, 0, 0, 0 (-t507 * t650 - t508 * t655) * t505 (t507 * t656 - t510 * t650) * t505, t575 * t657, t634 + (-pkin(2) * t508 + pkin(8) * t575) * t657, 0, 0, 0, 0, 0, 0, qJD(3) * t295 - t535 * t604, qJD(3) * t294 + t467 * t604 (t403 * t467 + t404 * t535) * qJD(2) + t83, t639 + (t404 * t793 + t497 * t687 + t709) * qJD(2) + t38 * qJD(3) + t147 * qJD(4), 0, 0, 0, 0, 0, 0, t10, t11, t14 (-t223 * t335 + t224 * t336 + t709) * qJD(2) + t4 * qJD(3) + t759, 0, 0, 0, 0, 0, 0, t10, t11, t14 (t170 * t335 + t192 * t336 + t307 * t403) * qJD(2) + t1 * qJD(3) + t7 * qJD(5) + t97 * qJD(6) + t759; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455 * qJD(3) - t507 * t603, t454 * qJD(3) - t510 * t603, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t295 - qJD(3) * t795, qJD(2) * t294 + qJD(3) * t324, t671, t38 * qJD(2) + (-t324 * t504 - t749 * t795) * t757, 0, 0, 0, 0, 0, 0, t24, t25, t22, t678 + t4 * qJD(2) + (-t495 * t576 + t496 * t795) * qJD(3), 0, 0, 0, 0, 0, 0, t24, t25, t22, t678 + t1 * qJD(2) + (-t324 * t351 + t478 * t795) * qJD(3) + t32 * qJD(5) + t113 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t42, 0, t637, 0, 0, 0, 0, 0, 0, t43, t42, 0, -pkin(5) * t647 + qJD(2) * t7 + qJD(3) * t32 + t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t97 + qJD(3) * t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t634, 0, 0, 0, 0, 0, 0, -t292 * qJD(3), -t293 * qJD(3), t83, -qJD(3) * t37 - qJD(4) * t146 - t639, 0, 0, 0, 0, 0, 0, t19, t20, t30, qJD(3) * t5 + t758, 0, 0, 0, 0, 0, 0, t19, t20, t30, qJD(3) * t2 - qJD(5) * t6 - qJD(6) * t96 + t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, t490 * qJD(3), 0, -t602, 0, 0, -pkin(2) * t653, -pkin(2) * t651, 0, 0, t394, -t618 * qJD(3), 0, -t394, 0, 0, t331 * qJD(3), t332 * qJD(3), -qJD(4) * t794, qJD(3) * t143 + qJD(4) * t201, t280, t222, t203, t279, t202, -t394, qJD(3) * t71 + qJD(5) * t135 - t284, qJD(3) * t72 + qJD(5) * t134 - t356, -qJD(3) * t36, qJD(3) * t40 + qJD(4) * t89, t280, t222, t203, t279, t202, -t394, qJD(3) * t35 + qJD(5) * t93 + t467 * t600 - t284, qJD(3) * t41 + qJD(5) * t94 - t535 * t607 - t356, -qJD(3) * t18 + qJD(5) * t21 + qJD(6) * t366, qJD(3) * t15 + qJD(4) * t48 + qJD(5) * t23 - qJD(6) * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, t619, t651, -t492, -t653, 0, -pkin(8) * t651 - t617, pkin(8) * t653 - t616, 0, 0, t605, -t631, t456, -t605, -t621, 0, -qJD(3) * t793 + t549, qJD(3) * t398 + t548 (-t467 * t504 - t535 * t749) * t757 + t555 (-t398 * t504 - t749 * t793) * t757 + t311 * qJD(4) + t554, t186, t180, t165, t185, t164, t296, t677 + t675 + (t506 * t556 - t710) * qJD(3) + t121 * qJD(5), t674 + (t509 * t556 + t711) * qJD(3) + t119 * qJD(5) + t676, qJD(3) * t557 + t672 - t713 (t495 * t557 + t496 * t793) * qJD(3) + t90 * qJD(4) + t560, t186, t180, t165, t185, t164, t296, t677 + t714 + (t358 * t478 - t457 * t467 - t726) * qJD(3) + t77 * qJD(5) + t358 * qJD(6), t702 + (t363 * t478 - t459 * t467 + t727) * qJD(3) + t88 * qJD(5) + t600 + t676, t672 - t737 + (-t171 * t506 + t198 * t509 - (t699 - t700) * t535) * qJD(3) + t17 * qJD(5) (-t171 * t457 + t198 * t459 + t306 * t478) * qJD(3) + t46 * qJD(4) + t9 * qJD(5) + t44 * qJD(6) + t562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t625, qJD(3) * t311 + t550, 0, 0, 0, 0, 0, 0, -t659, -t211, 0, qJD(3) * t90 + t786, 0, 0, 0, 0, 0, 0, -t659, -t211, 0, qJD(3) * t46 + qJD(5) * t27 + qJD(6) * t282 - t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, -t267, t193, t249, -t563, t449, qJD(3) * t121 - qJD(5) * t224 - t642 + t661, qJD(3) * t119 + qJD(5) * t223 - t641 + t662, 0, 0, -t249, -t267, t193, t249, -t563, t449, qJD(3) * t77 - t642 - t648 + t742, qJD(3) * t88 + qJD(5) * t191 - t641 + t741, pkin(5) * t609 + qJD(3) * t17 + t747, -pkin(5) * t648 + qJD(3) * t9 + qJD(4) * t27 + t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, -t411 * t535, t626, qJD(3) * t44 + qJD(4) * t282 + t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292 * qJD(2), t293 * qJD(2), -t671, qJD(2) * t37, 0, 0, 0, 0, 0, 0, t34, t33, -t39, -qJD(2) * t5 - t678, 0, 0, 0, 0, 0, 0, t34, t33, -t39, -qJD(2) * t2 - qJD(5) * t31 - qJD(6) * t112 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, -t619, 0, t492, 0, 0, t617, t616, 0, 0, -t605, t631, 0, t605, 0, 0, -qJD(4) * t467 - t549, -qJD(4) * t535 - t548, -t555, qJD(4) * t312 - t554, t231, t260, t197, t229, t195, -t296, qJD(5) * t120 + t567 - t675, qJD(5) * t118 - t674 + t753, t713 + t752, qJD(4) * t91 - t560, t231, t260, t197, t229, t195, -t296, -qJD(5) * t76 + t567 - t714, -qJD(5) * t87 - t702 + t753, -qJD(5) * t16 + t737 + t752, qJD(4) * t47 - qJD(5) * t8 + qJD(6) * t45 - t562; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, t483, 0, -t491, 0, 0, t496 * t645, t496 * t499, 0, 0, t491, t483, 0, -t491, 0, 0, -t417 * qJD(5), t437 * qJD(5), qJD(6) * t488, qJD(5) * t206 + qJD(6) * t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t622, -t623, 0, t632, 0, 0, 0, 0, 0, 0, -t447, t628, -t627, t670, 0, 0, 0, 0, 0, 0, -t447, t628, -t627, t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, -t381, t310, -t299, t309, -t624, -t495 * t499 - t789, t495 * t645 - t791, 0, 0, t299, -t381, t310, -t299, t309, -t624, -t646 + t792, qJD(5) * t457 - t790, -pkin(5) * t499 - t748, -pkin(5) * t646 + t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t621, t456, t625, -qJD(3) * t312 - t550, 0, 0, 0, 0, 0, 0, t163, t178, t352, -qJD(3) * t91 - t786, 0, 0, 0, 0, 0, 0, t163, t178, t352, -qJD(3) * t47 - qJD(5) * t26 + qJD(6) * t283 + t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t622, t623, 0, -t632, 0, 0, 0, 0, 0, 0, t447, -t628, t627, -t670, 0, 0, 0, 0, 0, 0, t447, -t628, t627, -t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t412, 0, t638, 0, 0, 0, 0, 0, 0, t309, t412, 0, -t615 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t70, 0, -t637, 0, 0, 0, 0, 0, 0, t69, t70, 0, qJD(2) * t6 + qJD(3) * t31 - t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, t267, t230, -t249, t232, t449, -qJD(3) * t120 - t661 + t751, -qJD(3) * t118 + t568 - t662, 0, 0, t249, t267, t230, -t249, t232, t449, qJD(3) * t76 - t606 - t742 + t751, qJD(3) * t87 + t568 + t607 - t741, qJD(3) * t16 - t747, -pkin(5) * t606 + qJD(3) * t8 + qJD(4) * t26 - t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t381, t348, t299, -t629, t624, t789, t791, 0, 0, -t299, t381, t348, t299, -t629, t624, -t644 - t792, -t643 + t790, t748, -pkin(5) * t644 - t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t629, -t601, 0, -t638, 0, 0, 0, 0, 0, 0, -t629, -t601, 0, t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, t411, 0, -t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t96 + qJD(3) * t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t563, t193, -t626, pkin(5) * t608 - qJD(3) * t45 - qJD(4) * t283 - t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t645, t499, -t620, -t526 + t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, -t411, 0, t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
