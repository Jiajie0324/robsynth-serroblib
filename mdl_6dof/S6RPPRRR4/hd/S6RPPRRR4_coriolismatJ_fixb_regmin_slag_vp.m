% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:26:50
% EndTime: 2019-03-09 02:27:04
% DurationCPUTime: 6.52s
% Computational Cost: add. (3915->434), mult. (8262->629), div. (0->0), fcn. (8415->8), ass. (0->370)
t305 = sin(qJ(4));
t304 = sin(qJ(5));
t306 = cos(qJ(6));
t465 = t306 * t304;
t303 = sin(qJ(6));
t307 = cos(qJ(5));
t478 = t303 * t307;
t346 = t465 + t478;
t556 = t346 * t305;
t369 = t556 / 0.2e1;
t408 = qJD(5) + qJD(6);
t550 = 0.2e1 * t304;
t332 = t478 / 0.2e1 + t465 / 0.2e1;
t301 = sin(pkin(10));
t488 = t301 * t305;
t102 = (-t346 / 0.2e1 + t332) * t488;
t464 = t306 * t307;
t475 = t304 * t305;
t217 = -t303 * t475 + t305 * t464;
t308 = cos(qJ(4));
t460 = t307 * t308;
t302 = cos(pkin(10));
t476 = t304 * t302;
t225 = t301 * t460 - t476;
t467 = t306 * t225;
t461 = t307 * t302;
t474 = t304 * t308;
t223 = t301 * t474 + t461;
t483 = t303 * t223;
t69 = -t467 + t483;
t325 = t69 * t308;
t462 = t307 * t301;
t224 = -t302 * t474 + t462;
t468 = t306 * t224;
t477 = t304 * t301;
t226 = t302 * t460 + t477;
t480 = t303 * t226;
t333 = -t480 / 0.2e1 + t468 / 0.2e1;
t377 = t488 / 0.2e1;
t311 = -t325 / 0.2e1 + t217 * t377 + t333;
t539 = t311 * qJD(1);
t558 = t102 * qJD(4) + t539;
t366 = t464 / 0.2e1;
t479 = t303 * t304;
t331 = t366 - t479 / 0.2e1;
t243 = -t464 + t479;
t531 = t243 / 0.2e1;
t103 = (t531 + t331) * t488;
t469 = t306 * t223;
t481 = t303 * t225;
t68 = t469 + t481;
t326 = t68 * t308;
t466 = t306 * t226;
t482 = t303 * t224;
t334 = -t482 / 0.2e1 - t466 / 0.2e1;
t378 = -t488 / 0.2e1;
t310 = -t326 / 0.2e1 + t556 * t378 + t334;
t540 = t310 * qJD(1);
t557 = t103 * qJD(4) + t540;
t446 = t556 * t408;
t555 = t346 * t308;
t105 = t301 * t369 + t332 * t488;
t554 = t105 * qJD(4) + t408 * t69 - t539;
t528 = -t305 / 0.2e1;
t370 = t243 * t528;
t104 = t301 * t370 + t331 * t488;
t553 = t104 * qJD(4) + t408 * t68 - t540;
t534 = pkin(8) + pkin(9);
t263 = t534 * t304;
t264 = t534 * t307;
t172 = -t303 * t263 + t306 * t264;
t380 = t555 / 0.2e1;
t363 = -t460 / 0.2e1;
t527 = -t308 / 0.2e1;
t365 = t306 * t527;
t443 = t303 * t363 + t304 * t365;
t147 = t380 + t443;
t508 = t102 * qJD(2) + t147 * qJD(3);
t552 = -t172 * t408 - t508;
t347 = -t306 * t263 - t303 * t264;
t267 = t303 * t474;
t324 = t243 * t308;
t149 = -t324 / 0.2e1 + t306 * t363 + t267 / 0.2e1;
t507 = t103 * qJD(2) + t149 * qJD(3);
t551 = -t347 * t408 - t507;
t532 = -t243 / 0.2e1;
t148 = -t267 / 0.2e1 + (t532 + t366) * t308;
t549 = t148 * t408;
t548 = t408 * t149;
t309 = -pkin(1) - pkin(2);
t442 = t302 * qJ(2) + t301 * t309;
t242 = -pkin(7) + t442;
t525 = pkin(5) * t304;
t362 = -t242 + t525;
t350 = t362 * t305;
t340 = t350 / 0.2e1;
t523 = pkin(5) * t307;
t294 = -pkin(4) - t523;
t490 = t294 * t556;
t547 = t243 * t340 + t490 / 0.2e1;
t489 = t294 * t217;
t546 = -t346 * t340 - t489 / 0.2e1;
t411 = t305 * qJD(5);
t282 = t304 * t411;
t409 = t308 * qJD(4);
t545 = -t307 * t409 + t282;
t544 = qJD(2) * t310;
t543 = qJD(2) * t311;
t312 = t325 / 0.2e1 + t217 * t378 + t333;
t542 = qJD(2) * t312;
t313 = t326 / 0.2e1 + t556 * t377 + t334;
t541 = qJD(2) * t313;
t297 = t304 ^ 2;
t299 = t307 ^ 2;
t278 = t299 - t297;
t413 = t305 * qJD(1);
t399 = t307 * t413;
t319 = qJD(4) * t278 + t399 * t550;
t360 = -t301 * qJ(2) + t302 * t309;
t241 = pkin(3) - t360;
t351 = t308 * pkin(4) + t305 * pkin(8);
t191 = t241 + t351;
t179 = t307 * t191;
t472 = t305 * t307;
t283 = pkin(9) * t472;
t492 = t242 * t304;
t80 = t179 + t283 + (pkin(5) - t492) * t308;
t72 = t306 * t80;
t536 = -t72 / 0.2e1;
t535 = -t80 / 0.2e1;
t533 = t225 / 0.2e1;
t530 = t346 / 0.2e1;
t298 = t305 ^ 2;
t529 = t298 / 0.2e1;
t526 = t308 / 0.2e1;
t524 = pkin(5) * t305;
t522 = t305 * pkin(4);
t521 = t308 * pkin(8);
t50 = t217 * t346 - t243 * t556;
t520 = t408 * t50;
t65 = t217 * t531 + t530 * t556;
t519 = t408 * t65;
t518 = pkin(5) * qJD(5);
t517 = pkin(5) * qJD(6);
t404 = pkin(5) * t527;
t403 = t242 * t474;
t113 = -t179 + t403;
t81 = -t113 + t283;
t354 = t404 + t81 / 0.2e1;
t7 = (t535 + t354) * t303;
t516 = qJD(1) * t7;
t9 = t354 * t306 + t536;
t515 = qJD(1) * t9;
t181 = t362 * t308;
t402 = t242 * t460;
t82 = t402 + (pkin(9) * t305 + t191) * t304;
t511 = t303 * t82;
t30 = -t72 + t511;
t214 = t242 * t475;
t265 = t521 - t522;
t250 = t307 * t265;
t445 = t214 + t250;
t119 = pkin(9) * t460 + t445 - t524;
t471 = t306 * t119;
t249 = t304 * t265;
t401 = t242 * t472;
t132 = pkin(9) * t474 + t249 - t401;
t484 = t303 * t132;
t1 = (t471 - t484) * t308 + t181 * t556 + (t362 * t555 + t30) * t305;
t514 = t1 * qJD(1);
t218 = t306 * t460 - t267;
t509 = t306 * t82;
t31 = t303 * t80 + t509;
t470 = t306 * t132;
t485 = t303 * t119;
t2 = (t470 + t485) * t308 - t31 * t305 - t181 * t217 - t218 * t350;
t513 = t2 * qJD(1);
t512 = t303 * t81;
t510 = t306 * t81;
t40 = -t509 - t512;
t16 = t40 * t308 + (t217 * t362 + t523 * t556) * t305;
t504 = qJD(1) * t16;
t124 = t556 * t350;
t41 = t510 - t511;
t17 = -pkin(5) * t217 * t472 + t308 * t41 + t124;
t503 = qJD(1) * t17;
t18 = -t30 * t308 + t124;
t502 = qJD(1) * t18;
t19 = t217 * t350 - t31 * t308;
t501 = qJD(1) * t19;
t487 = t301 * t308;
t22 = (t302 * t531 - t469 / 0.2e1 - t481 / 0.2e1) * t305 + t487 * t369;
t500 = qJD(1) * t22;
t23 = (t302 * t530 + t483 / 0.2e1 - t467 / 0.2e1) * t305 + (t217 * t526 + (t324 / 0.2e1 + t218 / 0.2e1) * t305) * t301;
t499 = qJD(1) * t23;
t486 = t302 * t305;
t59 = (t468 - t480) * t308 - t556 * t486;
t498 = qJD(1) * t59;
t60 = (t466 + t482) * t308 + t217 * t486;
t497 = qJD(1) * t60;
t63 = -t113 * t308 - t298 * t492;
t496 = qJD(1) * t63;
t114 = t191 * t304 + t402;
t463 = t307 * t298;
t64 = -t114 * t308 - t242 * t463;
t495 = qJD(1) * t64;
t494 = t347 * t308;
t493 = t172 * t308;
t44 = t445 * t308 + (t113 - 0.2e1 * t403) * t305;
t455 = t44 * qJD(1);
t45 = -t114 * t305 + (t249 + t401) * t308;
t454 = t45 * qJD(1);
t56 = -t217 * t555 - t218 * t556;
t453 = t56 * qJD(1);
t372 = -t476 / 0.2e1;
t407 = 0.1e1 / 0.2e1 + t529;
t87 = (t372 + t533) * t308 + t407 * t462;
t448 = t87 * qJD(1);
t364 = -t461 / 0.2e1;
t88 = (t364 - t223 / 0.2e1) * t308 - t407 * t477;
t447 = t88 * qJD(1);
t444 = t332 * t308;
t300 = t308 ^ 2;
t279 = t300 - t298;
t441 = qJ(2) * qJD(1);
t117 = -t305 * t556 + t308 * t555;
t440 = qJD(1) * t117;
t118 = t217 * t305 - t218 * t308;
t439 = qJD(1) * t118;
t163 = t224 * t308 - t298 * t476;
t438 = qJD(1) * t163;
t164 = t226 * t308 + t298 * t461;
t437 = qJD(1) * t164;
t436 = qJD(1) * t217;
t247 = t279 * t304;
t435 = qJD(1) * t247;
t248 = t300 * t307 - t463;
t434 = qJD(1) * t248;
t433 = qJD(4) * t346;
t432 = qJD(4) * t294;
t431 = qJD(4) * t304;
t430 = qJD(4) * t307;
t429 = qJD(5) * t304;
t428 = qJD(5) * t307;
t427 = qJD(5) * t308;
t426 = qJD(6) * t294;
t371 = -t474 / 0.2e1;
t342 = t301 * t371 + t223 / 0.2e1;
t120 = (t461 / 0.2e1 + t342) * t305;
t423 = t120 * qJD(1);
t341 = t301 * t363 + t533;
t123 = (t372 + t341) * t305;
t422 = t123 * qJD(1);
t146 = t380 + t444;
t135 = t146 * qJD(1);
t142 = t148 * qJD(1);
t156 = -t301 * t360 + t302 * t442;
t419 = t156 * qJD(1);
t418 = t279 * qJD(1);
t417 = t301 * qJD(1);
t416 = t301 * qJD(2);
t415 = t302 * qJD(1);
t414 = t302 * qJD(2);
t412 = t305 * qJD(4);
t410 = t308 * qJD(1);
t406 = t525 / 0.2e1;
t405 = t523 / 0.2e1;
t400 = t556 * t410;
t398 = t243 * t412;
t397 = t346 * t412;
t396 = t301 * t409;
t395 = t304 * t412;
t394 = t304 * t430;
t393 = t307 * t412;
t391 = t304 * t427;
t390 = t307 * t427;
t389 = t302 * t410;
t388 = t304 * t428;
t387 = t305 * t409;
t386 = t307 * t411;
t385 = t301 * t413;
t384 = t302 * t413;
t383 = t305 * t410;
t382 = t301 * t410;
t381 = t493 / 0.2e1;
t379 = -t555 / 0.2e1;
t376 = -t487 / 0.2e1;
t375 = t486 / 0.2e1;
t374 = -t484 / 0.2e1;
t368 = -t470 / 0.2e1;
t361 = pkin(5) * t408;
t359 = t408 * t346;
t358 = t408 * t308;
t357 = qJD(5) + t410;
t356 = t304 * t393;
t353 = t524 / 0.2e1 - t119 / 0.2e1;
t352 = t410 + qJD(5) / 0.2e1;
t144 = t243 * t525 + t294 * t346;
t314 = t406 * t556 + t381;
t335 = t374 + t471 / 0.2e1;
t316 = t489 / 0.2e1 + t335;
t4 = (-t306 * pkin(5) / 0.2e1 + t243 * t405 + t362 * t530) * t305 + t314 + t316;
t349 = -t4 * qJD(1) + t144 * qJD(4);
t145 = -t243 * t294 + t346 * t525;
t315 = t217 * t406 + t347 * t526;
t336 = -t485 / 0.2e1 + t368;
t317 = -t490 / 0.2e1 + t336;
t3 = (t303 * pkin(5) / 0.2e1 + t523 * t530 + t362 * t532) * t305 + t315 + t317;
t348 = -t3 * qJD(1) + t145 * qJD(4);
t73 = -t217 ^ 2 + t556 ^ 2;
t20 = qJD(1) * t73 + qJD(4) * t50;
t129 = t243 ^ 2 - t346 ^ 2;
t26 = qJD(1) * t50 + qJD(4) * t129;
t345 = t357 * t307;
t344 = qJD(1) * t241 - t414;
t343 = t521 / 0.2e1 - t522 / 0.2e1;
t339 = -t350 / 0.2e1;
t322 = t343 * t304;
t161 = t249 / 0.2e1 + t322;
t338 = pkin(4) * t430 - qJD(1) * t161;
t323 = t343 * t307;
t162 = -t250 / 0.2e1 - t323;
t337 = pkin(4) * t431 - qJD(1) * t162;
t12 = -t339 * t346 + t316 + t381;
t330 = qJD(1) * t12 - t346 * t432;
t13 = t494 / 0.2e1 + t243 * t339 + t317;
t329 = qJD(1) * t13 + t243 * t432;
t43 = -qJD(4) * t65 + t436 * t556;
t51 = qJD(1) * t65 - t243 * t433;
t328 = t305 * t345;
t227 = (t297 / 0.2e1 - t299 / 0.2e1) * t305;
t327 = qJD(1) * t227 + t394;
t321 = qJD(1) * t304 * t463 - qJD(4) * t227;
t246 = t278 * t298;
t320 = -qJD(1) * t246 + 0.2e1 * t356;
t318 = t304 * t409 + t386;
t288 = -t413 / 0.2e1;
t287 = t413 / 0.2e1;
t286 = -t412 / 0.2e1;
t234 = t352 * t305;
t222 = t227 * qJD(5);
t212 = (qJD(6) / 0.2e1 + t352) * t305;
t151 = t379 + t443;
t150 = t379 + t444;
t141 = t148 * qJD(4);
t138 = t149 * qJD(4);
t136 = t147 * qJD(4);
t122 = t304 * t375 + t305 * t341;
t121 = (t342 + t364) * t305;
t90 = t225 * t527 + t302 * t371 + (-t298 / 0.2e1 + 0.1e1 / 0.2e1) * t462;
t89 = t223 * t526 + t302 * t363 + (t529 - 0.1e1 / 0.2e1) * t477;
t84 = t214 + t250 / 0.2e1 - t323;
t83 = t401 - t249 / 0.2e1 + t322;
t67 = qJD(4) * t146 - t217 * t410;
t66 = -t141 - t400;
t58 = -t359 - t135;
t57 = -t243 * t408 + t142;
t55 = qJD(4) * t151 - t217 * t408;
t47 = qJD(4) * t150 + (qJD(6) + t357) * t217;
t46 = t138 + t400 + t446;
t28 = -t141 + t446;
t25 = t217 * t376 + t302 * t369 + t69 * t528 + (t218 + t324) * t378;
t24 = t68 * t305 / 0.2e1 + t556 * t376 + t243 * t375;
t15 = -t493 / 0.2e1 + t335 + t546;
t14 = -t494 / 0.2e1 + t336 + t547;
t10 = pkin(5) * t365 + t511 + t536 - t510 / 0.2e1;
t8 = -t509 - t512 / 0.2e1 + (t404 + t535) * t303;
t6 = t303 * t353 - t405 * t556 - t315 + t368 + t547;
t5 = -t306 * t353 + t370 * t523 - t314 + t374 + t546;
t11 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), t416, t414, t156 * qJD(2), t387, t279 * qJD(4), 0, 0, 0, -t241 * t412 + t308 * t416, -t241 * t409 - t305 * t416, -t298 * t388 + t299 * t387, -qJD(5) * t246 - 0.2e1 * t308 * t356, -qJD(4) * t248 + t305 * t391, qJD(4) * t247 + t308 * t386, -t387, qJD(2) * t163 + qJD(4) * t44 + qJD(5) * t64, -qJD(2) * t164 - qJD(4) * t45 - qJD(5) * t63 (qJD(4) * t218 - t446) * t217, qJD(4) * t56 + t408 * t73, qJD(4) * t118 + t358 * t556, qJD(4) * t117 + t217 * t358, -t387, qJD(2) * t59 + qJD(4) * t1 + qJD(5) * t16 + qJD(6) * t19, -qJD(2) * t60 - qJD(4) * t2 - qJD(5) * t17 - qJD(6) * t18; 0, 0, 0, 0, qJD(1), t441, t417, t415, t419, 0, 0, 0, 0, 0, t382, -t385, 0, 0, 0, 0, 0, qJD(4) * t121 + qJD(5) * t90 + t438, qJD(4) * t122 + qJD(5) * t89 - t437, 0, 0, 0, 0, 0, qJD(4) * t24 + t312 * t408 + t498, qJD(4) * t25 + t313 * t408 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, t418, -t409, t412, 0, -t241 * t413 - t242 * t409, -t241 * t410 + t242 * t412, t222 + (t299 * t413 - t394) * t308, -t308 * t319 + t386 * t550, -t395 - t434, -t393 + t435, -t234, t455 + t121 * qJD(2) + (t304 * t351 - t402) * qJD(4) + t84 * qJD(5), -t454 + t122 * qJD(2) + (t307 * t351 + t403) * qJD(4) + t83 * qJD(5) (-t433 + t436) * t218 + t519, t453 + (t218 * t243 + t346 * t555) * qJD(4) + t520, -t397 + t439 + t548, t150 * t408 + t398 + t440, -t212, t514 + t24 * qJD(2) + (-t181 * t243 - t294 * t555 - t305 * t347) * qJD(4) + t5 * qJD(5) + t15 * qJD(6), -t513 + t25 * qJD(2) + (t172 * t305 - t181 * t346 - t218 * t294) * qJD(4) + t6 * qJD(5) + t14 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, t320, t304 * t383 + t282, t328, t286, qJD(2) * t90 + qJD(4) * t84 - qJD(5) * t114 + t495, qJD(2) * t89 + qJD(4) * t83 + qJD(5) * t113 - t496, -t43, t20, t46, t47, t286, qJD(4) * t5 + qJD(5) * t40 + qJD(6) * t8 + t504 + t542, qJD(4) * t6 - qJD(5) * t41 + qJD(6) * t10 - t503 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t20, t46, t47, t286, qJD(4) * t15 + qJD(5) * t8 - qJD(6) * t31 + t501 + t542, qJD(4) * t14 + qJD(5) * t10 + qJD(6) * t30 - t502 + t541; 0, 0, 0, 0, -qJD(1), -t441, -t417, -t415, -t419, 0, 0, 0, 0, 0, t302 * t412 - t382, t302 * t409 + t385, 0, 0, 0, 0, 0, qJD(4) * t120 - qJD(5) * t87 - t438, qJD(4) * t123 - qJD(5) * t88 + t437, 0, 0, 0, 0, 0, -qJD(4) * t22 - t311 * t408 - t498, -qJD(4) * t23 - t310 * t408 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384 - t396, t301 * t412 + t389, 0, 0, 0, 0, 0, t301 * t545 + t423, t301 * t318 + t422, 0, 0, 0, 0, 0, t105 * t408 + t243 * t396 - t500, t104 * t408 + t346 * t396 - t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t225 + t301 * t395 - t448, qJD(5) * t223 + t301 * t393 - t447, 0, 0, 0, 0, 0, t554, t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, -t409, 0, 0, 0, 0, 0, -t391 - t393, -t390 + t395, 0, 0, 0, 0, 0, t151 * t408 + t398, t397 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t318, t545, 0, 0, 0, 0, 0, t55, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383, -t418, 0, 0, 0, t344 * t305, t344 * t308, -t299 * t383 + t222, t328 * t550, t390 + t434, -t391 - t435, t234, -qJD(2) * t120 + qJD(5) * t162 - t455, -qJD(2) * t123 + qJD(5) * t161 + t454, -t218 * t436 + t519, -t453 + t520, -t439 + t549, -t146 * t408 - t440, t212, qJD(2) * t22 - qJD(5) * t4 - qJD(6) * t12 - t514, qJD(2) * t23 - qJD(5) * t3 - qJD(6) * t13 + t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, -t389, 0, 0, 0, 0, 0, -t423, -t422, 0, 0, 0, 0, 0, -t102 * t408 + t500, -t103 * t408 + t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408 * t147, -t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, t278 * qJD(5), 0, 0, 0, -pkin(4) * t429, -pkin(4) * t428, -t243 * t359, t408 * t129, 0, 0, 0, qJD(5) * t144 + t346 * t426, qJD(5) * t145 - t243 * t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, t319, t345, -t357 * t304, t287, -pkin(8) * t428 - t337, pkin(8) * t429 - t338, t51, t26, t57, t58, t287, t349 + t552, t348 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t26, t57, t58, t287, -t330 + t552, -t329 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, -t320 (-t304 * t413 - t430) * t308 (-t399 + t431) * t308, t286, qJD(2) * t87 - qJD(4) * t162 - t495, qJD(2) * t88 - qJD(4) * t161 + t496, t43, -t20, t66, t67, t286, qJD(4) * t4 + qJD(6) * t7 - t504 + t543, qJD(4) * t3 + qJD(6) * t9 + t503 + t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t447, 0, 0, 0, 0, 0, t558, t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, -t319, -t307 * t410, t304 * t410, t288, t337, t338, -t51, -t26, -t142, t135, t288, -t349 + t508, -t348 + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303 * t517, -t306 * t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303 * t361 + t516, -t306 * t361 + t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t20, t66, t67, t286, qJD(4) * t12 - qJD(5) * t7 - t501 + t543, qJD(4) * t13 - qJD(5) * t9 + t502 + t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, -t26, -t142, t135, t288, t330 + t508, t329 + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303 * t518 - t516, t306 * t518 - t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
