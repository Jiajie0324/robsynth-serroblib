% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:26:54
% EndTime: 2019-03-09 02:27:19
% DurationCPUTime: 19.60s
% Computational Cost: add. (17235->712), mult. (31015->1011), div. (0->0), fcn. (32094->8), ass. (0->526)
t634 = cos(qJ(4));
t944 = -t634 / 0.2e1;
t633 = cos(qJ(5));
t978 = -pkin(9) - pkin(8);
t587 = t978 * t633;
t629 = sin(qJ(6));
t632 = cos(qJ(6));
t630 = sin(qJ(5));
t776 = t978 * t630;
t715 = -t629 * t587 - t632 * t776;
t1002 = t715 / 0.2e1;
t863 = t632 * t630;
t876 = t629 * t633;
t563 = t863 + t876;
t631 = sin(qJ(4));
t525 = t631 * t563;
t628 = cos(pkin(10));
t857 = t634 * t628;
t627 = sin(pkin(10));
t874 = t630 * t627;
t539 = t633 * t857 + t874;
t864 = t632 * t539;
t860 = t633 * t627;
t537 = -t630 * t857 + t860;
t879 = t629 * t537;
t675 = -t879 / 0.2e1 - t864 / 0.2e1;
t886 = t627 * t631;
t749 = -t886 / 0.2e1;
t859 = t633 * t628;
t871 = t630 * t634;
t536 = t627 * t871 + t859;
t858 = t633 * t634;
t873 = t630 * t628;
t538 = t627 * t858 - t873;
t716 = t632 * t536 + t629 * t538;
t998 = t716 * t634;
t1009 = -t998 / 0.2e1 + t525 * t749 + t675;
t1019 = qJD(1) * t1009;
t862 = t632 * t633;
t877 = t629 * t630;
t559 = -t862 + t877;
t734 = t862 / 0.2e1;
t672 = t734 - t877 / 0.2e1;
t328 = t559 * t749 + t672 * t886;
t782 = qJD(5) + qJD(6);
t1024 = t328 * qJD(4) + t716 * t782 - t1019;
t696 = t629 * t536 - t632 * t538;
t1000 = t696 * t634;
t872 = t630 * t631;
t527 = -t629 * t872 + t631 * t862;
t865 = t632 * t537;
t878 = t629 * t539;
t674 = -t878 / 0.2e1 + t865 / 0.2e1;
t748 = t886 / 0.2e1;
t1007 = -t1000 / 0.2e1 + t527 * t748 + t674;
t1020 = qJD(1) * t1007;
t735 = t863 / 0.2e1;
t673 = t876 / 0.2e1 + t735;
t738 = t525 / 0.2e1;
t329 = t627 * t738 + t673 * t886;
t1023 = t329 * qJD(4) + t696 * t782 - t1020;
t958 = -t563 / 0.2e1;
t326 = (t958 + t673) * t886;
t1022 = t326 * qJD(4) + t1020;
t959 = t559 / 0.2e1;
t327 = (t959 + t672) * t886;
t1021 = t327 * qJD(4) + t1019;
t979 = -pkin(1) - pkin(2);
t686 = -t627 * qJ(2) + t628 * t979;
t557 = pkin(3) - t686;
t938 = t634 * pkin(4);
t652 = t557 + t938;
t640 = -t631 * t978 + t652;
t638 = t640 * t633;
t840 = t628 * qJ(2) + t627 * t979;
t558 = -pkin(7) + t840;
t875 = t630 * t558;
t637 = (pkin(5) - t875) * t634 + t638;
t255 = t632 * t637;
t773 = t558 * t858;
t280 = t630 * t640 + t773;
t882 = t629 * t280;
t147 = -t255 + t882;
t775 = t558 * t871;
t279 = t638 - t775;
t869 = t632 * t279;
t160 = t869 - t882;
t1012 = t147 + t160;
t635 = t629 * t637;
t868 = t632 * t280;
t148 = t635 + t868;
t883 = t629 * t279;
t159 = -t868 - t883;
t1011 = t148 + t159;
t1006 = t1000 / 0.2e1 + t527 * t749 + t674;
t1018 = qJD(2) * t1006;
t1017 = qJD(2) * t1007;
t1008 = t998 / 0.2e1 + t525 * t748 + t675;
t1016 = qJD(2) * t1008;
t1015 = qJD(2) * t1009;
t621 = -pkin(5) * t633 - pkin(4);
t1014 = t621 / 0.2e1;
t942 = pkin(5) * t630;
t720 = t558 - t942;
t459 = t720 * t631;
t960 = -t559 / 0.2e1;
t1010 = t1002 * t634 + t525 * t1014 + t459 * t960;
t445 = -t632 * t587 + t629 * t776;
t1005 = t459 * t563 / 0.2e1 - t621 * t527 / 0.2e1 + t445 * t944;
t223 = t527 * t959 + t563 * t738;
t1013 = t782 * t223;
t936 = t634 * pkin(8);
t941 = t631 * pkin(4);
t588 = t936 - t941;
t565 = t630 * t588;
t870 = t631 * t633;
t774 = t558 * t870;
t415 = t565 - t774;
t377 = pkin(9) * t871 + t415;
t866 = t632 * t377;
t736 = -t866 / 0.2e1;
t522 = t558 * t872;
t567 = t633 * t588;
t414 = t522 + t567;
t940 = t631 * pkin(5);
t353 = pkin(9) * t858 + t414 - t940;
t881 = t629 * t353;
t677 = -t881 / 0.2e1 + t736;
t71 = t677 - t1010;
t880 = t629 * t377;
t744 = -t880 / 0.2e1;
t867 = t632 * t353;
t676 = t744 + t867 / 0.2e1;
t70 = t676 - t1005;
t1004 = -t445 / 0.2e1;
t965 = -t525 / 0.2e1;
t964 = t527 / 0.2e1;
t1003 = t696 / 0.2e1;
t974 = -t716 / 0.2e1;
t843 = t525 * t782;
t820 = qJD(4) * t563;
t997 = -qJD(1) * t223 + t559 * t820;
t822 = qJD(1) * t527;
t996 = -qJD(4) * t223 + t525 * t822;
t592 = t629 * t871;
t729 = -t858 / 0.2e1;
t401 = t559 * t944 + t632 * t729 + t592 / 0.2e1;
t847 = t327 * qJD(2) + t401 * qJD(3);
t995 = t715 * t782 - t847;
t526 = t563 * t634;
t751 = t526 / 0.2e1;
t733 = t632 * t944;
t841 = t629 * t729 + t630 * t733;
t399 = t751 + t841;
t848 = t326 * qJD(2) + t399 * qJD(3);
t992 = -t445 * t782 - t848;
t991 = 0.2e1 * t630;
t990 = t148 / 0.2e1;
t400 = -t592 / 0.2e1 + (t960 + t734) * t634;
t989 = t400 * t782;
t988 = t527 * t782;
t714 = t782 * t563;
t987 = t559 * t714;
t986 = t782 * t401;
t784 = t631 * qJD(5);
t611 = t630 * t784;
t783 = t634 * qJD(4);
t983 = -t633 * t783 + t611;
t977 = -t255 / 0.2e1;
t976 = t279 / 0.2e1;
t973 = t716 / 0.2e1;
t971 = -t696 / 0.2e1;
t458 = t559 * t886;
t966 = t458 / 0.2e1;
t528 = t632 * t858 - t592;
t963 = t528 / 0.2e1;
t962 = t536 / 0.2e1;
t961 = t538 / 0.2e1;
t623 = t630 ^ 2;
t957 = t623 / 0.2e1;
t624 = t631 ^ 2;
t956 = t624 / 0.2e1;
t626 = t634 ^ 2;
t955 = -t626 / 0.2e1;
t954 = t627 / 0.2e1;
t953 = t628 / 0.2e1;
t952 = t629 / 0.2e1;
t951 = -t630 / 0.2e1;
t950 = t630 / 0.2e1;
t949 = t631 / 0.2e1;
t948 = -t632 / 0.2e1;
t947 = t632 / 0.2e1;
t946 = -t633 / 0.2e1;
t945 = t633 / 0.2e1;
t943 = t634 / 0.2e1;
t939 = t631 * pkin(8);
t937 = t634 * pkin(5);
t723 = t971 + t1003;
t724 = t974 + t973;
t50 = t525 * t724 + t527 * t723;
t935 = t50 * qJD(5);
t67 = -t559 * t724 - t563 * t723;
t934 = t67 * qJD(5);
t933 = pkin(5) * qJD(5);
t932 = pkin(5) * qJD(6);
t780 = pkin(5) * t870;
t902 = t459 * t527;
t76 = t159 * t634 + t525 * t780 - t902;
t930 = qJD(1) * t76;
t360 = t459 * t525;
t77 = t160 * t634 - t527 * t780 - t360;
t929 = qJD(1) * t77;
t83 = -t147 * t634 - t360;
t928 = qJD(1) * t83;
t84 = -t148 * t634 - t902;
t927 = qJD(1) * t84;
t187 = t867 - t880;
t188 = t866 + t881;
t21 = -t147 * t528 + t148 * t526 + t187 * t527 + t188 * t525;
t921 = t21 * qJD(1);
t457 = t627 * t525;
t643 = t457 * t964 + t458 * t738 + t528 * t974 - t696 * t751;
t371 = t865 - t878;
t374 = t864 + t879;
t682 = t371 * t958 + t374 * t960;
t31 = t643 - t682;
t920 = t31 * qJD(1);
t460 = t720 * t634;
t32 = t147 * t631 + t187 * t634 - t459 * t526 - t460 * t525;
t919 = t32 * qJD(1);
t33 = -t148 * t631 + t188 * t634 + t459 * t528 + t460 * t527;
t918 = t33 * qJD(1);
t647 = t652 + t939;
t639 = t633 * t647;
t347 = -t639 + t775;
t917 = t347 * t634;
t348 = t630 * t647 + t773;
t916 = t348 * t631;
t915 = t348 * t634;
t910 = t414 * t631;
t909 = t415 * t631;
t899 = t459 * t630;
t897 = t526 * t563;
t895 = t528 * t559;
t894 = t536 * t634;
t893 = t538 * t634;
t737 = -t870 / 0.2e1;
t739 = t871 / 0.2e1;
t58 = (-t937 + t558 * t739 - t639 / 0.2e1 + pkin(9) * t737 + t976) * t629;
t892 = t58 * qJD(1);
t777 = -t937 / 0.2e1;
t60 = t977 + (t777 + t976) * t632;
t891 = t60 * qJD(1);
t625 = t633 ^ 2;
t888 = t625 * t634;
t887 = t627 * t628;
t885 = t627 * t634;
t884 = t628 * t631;
t618 = t631 * t634;
t861 = t633 * t624;
t79 = (t910 - t917) * t633 + (t909 + t915) * t630;
t856 = t79 * qJD(1);
t746 = t559 * t953;
t98 = (t526 * t954 + t746 + t974) * t631;
t855 = t98 * qJD(1);
t99 = (t527 * t954 + t966) * t634 + (t528 * t954 + t563 * t953 + t1003) * t631;
t854 = t99 * qJD(1);
t178 = -t525 * t559 + t563 * t527;
t852 = t782 * t178;
t195 = (t536 * t951 + t538 * t946) * t634 + (t626 / 0.2e1 + (t625 / 0.2e1 + t957 - 0.1e1 / 0.2e1) * t624) * t627;
t849 = t195 * qJD(4);
t728 = t858 / 0.2e1;
t842 = t629 * t728 + t634 * t735;
t839 = t623 + t625;
t606 = t625 - t623;
t607 = t626 - t624;
t838 = qJ(2) * qJD(1);
t727 = -t857 / 0.2e1;
t131 = t371 * t965 + t374 * t964 + t631 * t727;
t837 = qJD(1) * t131;
t141 = t371 * t527 + t374 * t525;
t836 = qJD(1) * t141;
t203 = t371 * t634 - t525 * t884;
t831 = qJD(1) * t203;
t204 = t374 * t634 + t527 * t884;
t830 = qJD(1) * t204;
t219 = -t624 * t875 - t917;
t829 = qJD(1) * t219;
t220 = -t558 * t861 - t915;
t828 = qJD(1) * t220;
t678 = t537 * t951 + t539 * t945;
t257 = (t727 + t678) * t631;
t827 = qJD(1) * t257;
t334 = (t537 * t633 + t539 * t630) * t631;
t826 = qJD(1) * t334;
t430 = t537 * t634 - t624 * t873;
t825 = qJD(1) * t430;
t431 = t539 * t634 + t624 * t859;
t824 = qJD(1) * t431;
t823 = qJD(1) * t525;
t821 = qJD(1) * t634;
t819 = qJD(4) * t621;
t818 = qJD(4) * t627;
t817 = qJD(4) * t630;
t816 = qJD(4) * t633;
t815 = qJD(5) * t630;
t814 = qJD(5) * t633;
t813 = qJD(5) * t634;
t812 = qJD(6) * t621;
t166 = t414 * t634 + (t347 - 0.2e1 * t775) * t631;
t811 = t166 * qJD(1);
t167 = -t916 + (t415 + 0.2e1 * t774) * t634;
t810 = t167 * qJD(1);
t191 = (-t894 / 0.2e1 - t539 / 0.2e1) * t633 + (t893 / 0.2e1 + t537 / 0.2e1) * t630;
t809 = t191 * qJD(1);
t200 = -t528 * t525 - t527 * t526;
t808 = t200 * qJD(1);
t550 = (t624 + t626) * t628;
t264 = t550 * t558 + t557 * t627;
t807 = t264 * qJD(1);
t742 = -t873 / 0.2e1;
t779 = 0.1e1 / 0.2e1 + t956;
t295 = (t742 + t961) * t634 + t779 * t860;
t806 = t295 * qJD(1);
t730 = -t859 / 0.2e1;
t296 = (t730 - t536 / 0.2e1) * t634 - t779 * t874;
t805 = t296 * qJD(1);
t351 = -t525 * t631 + t526 * t634;
t802 = t351 * qJD(1);
t352 = t527 * t631 - t528 * t634;
t801 = t352 * qJD(1);
t740 = -t871 / 0.2e1;
t688 = t627 * t740 + t962;
t355 = (t859 / 0.2e1 + t688) * t631;
t800 = t355 * qJD(1);
t687 = t627 * t729 + t961;
t358 = (t742 + t687) * t631;
t799 = t358 * qJD(1);
t398 = t751 + t842;
t380 = t398 * qJD(1);
t387 = t400 * qJD(1);
t416 = -t627 * t686 + t628 * t840;
t796 = t416 * qJD(1);
t540 = (t957 - t625 / 0.2e1) * t631;
t795 = t540 * qJD(5);
t794 = t550 * qJD(1);
t562 = t607 * t630;
t793 = t562 * qJD(1);
t564 = t626 * t633 - t861;
t792 = t564 * qJD(1);
t791 = t607 * qJD(1);
t790 = t627 * qJD(1);
t789 = t627 * qJD(2);
t788 = t628 * qJD(1);
t787 = t628 * qJD(2);
t786 = t631 * qJD(1);
t785 = t631 * qJD(4);
t51 = -t525 * t723 + t527 * t724;
t750 = t624 * t954;
t63 = t457 * t965 + t458 * t964 + t627 * t955 - t696 * t963 + t716 * t751 + t750;
t781 = t63 * qJD(4) + t51 * qJD(5);
t778 = -t942 / 0.2e1;
t771 = t525 * t821;
t770 = t633 * t786;
t768 = t627 * t783;
t767 = t630 * t816;
t766 = t559 * t785;
t764 = t630 * t813;
t763 = t633 * t813;
t762 = t563 * t785;
t761 = t634 * t788;
t760 = t630 * t785;
t759 = t630 * t814;
t758 = t631 * t783;
t757 = t627 * t786;
t756 = t627 * t785;
t755 = t628 * t786;
t610 = t634 * t786;
t754 = t633 * t785;
t753 = t634 * t790;
t752 = -t526 / 0.2e1;
t747 = -t885 / 0.2e1;
t745 = -t884 / 0.2e1;
t743 = -t874 / 0.2e1;
t741 = t872 / 0.2e1;
t732 = -t860 / 0.2e1;
t731 = t860 / 0.2e1;
t726 = t990 + t159 / 0.2e1;
t725 = t160 / 0.2e1 + t147 / 0.2e1;
t722 = t1002 - t715 / 0.2e1;
t721 = t445 / 0.2e1 + t1004;
t719 = pkin(5) * t782;
t718 = t839 * t631;
t717 = t839 * t634;
t713 = t782 * t634;
t712 = pkin(5) * t737;
t711 = qJD(5) + t821;
t709 = t630 * t754;
t708 = t624 * t759;
t707 = t624 * t732;
t706 = t631 * t743;
t705 = t940 / 0.2e1 - t353 / 0.2e1;
t704 = t938 + t939;
t17 = -t525 * t726 + t527 * t725 + t728 * t940;
t703 = t17 * qJD(1) + t51 * qJD(2);
t20 = t1011 * t527 + t1012 * t525;
t702 = t20 * qJD(1) + t50 * qJD(2);
t16 = t147 * t751 + t148 * t963 + t187 * t965 + t188 * t964 + t459 * t949 + t460 * t944;
t23 = -t147 * t187 + t148 * t188 + t459 * t460;
t701 = t23 * qJD(1) + t16 * qJD(3);
t22 = -t147 * t159 + t148 * t160 - t459 * t780;
t700 = t22 * qJD(1) + t17 * qJD(3);
t68 = (t909 / 0.2e1 + t915 / 0.2e1) * t633 + (-t910 / 0.2e1 + t917 / 0.2e1) * t630 + (t956 + t955) * t558;
t80 = t558 ^ 2 * t618 - t347 * t414 + t348 * t415;
t699 = t80 * qJD(1) + t68 * qJD(3);
t698 = qJD(1) * t50 + qJD(4) * t67;
t697 = -t414 * t630 + t415 * t633;
t27 = -t147 * t371 + t148 * t374 + t459 * t884;
t695 = t27 * qJD(1) + t131 * qJD(3);
t396 = t559 * t942 + t563 * t621;
t55 = (t525 * t950 + (t559 * t945 + t948) * t631) * pkin(5) + t70;
t694 = qJD(1) * t55 - qJD(4) * t396;
t397 = -t559 * t621 + t563 * t942;
t54 = (t527 * t950 + (t563 * t945 + t952) * t631) * pkin(5) + t71;
t693 = qJD(1) * t54 - qJD(4) * t397;
t692 = t711 * t633;
t691 = qJD(1) * t557 - t787;
t104 = t558 * t624 * t628 - t347 * t537 + t348 * t539;
t690 = t104 * qJD(1) + t257 * qJD(3);
t256 = t525 ^ 2 - t527 ^ 2;
t87 = qJD(1) * t256 + qJD(4) * t178;
t366 = t559 ^ 2 - t563 ^ 2;
t102 = qJD(1) * t178 + qJD(4) * t366;
t689 = t936 / 0.2e1 - t941 / 0.2e1;
t667 = t689 * t630;
t428 = t565 / 0.2e1 + t667;
t685 = pkin(4) * t816 - qJD(1) * t428;
t668 = t689 * t633;
t429 = -t567 / 0.2e1 - t668;
t684 = pkin(4) * t817 - qJD(1) * t429;
t683 = t187 * t947 + t188 * t952;
t681 = t371 * t947 + t374 * t952;
t680 = t457 * t947 + t458 * t952;
t679 = t526 * t948 + t528 * t952;
t671 = qJD(1) * t71 + t559 * t819;
t670 = qJD(1) * t70 - t563 * t819;
t669 = t631 * t692;
t453 = qJD(1) * t540 + t767;
t664 = -t558 * t627 * t618 + t414 * t962 - t415 * t538 / 0.2e1;
t438 = qJD(1) * t630 * t861 - qJD(4) * t540;
t561 = t606 * t624;
t663 = -qJD(1) * t561 + 0.2e1 * t709;
t662 = qJD(4) * t606 + t770 * t991;
t661 = t630 * t783 + t633 * t784;
t660 = t678 * pkin(8);
t659 = (t526 * t952 + t528 * t947) * pkin(5);
t646 = t1003 * t1012 + t159 * t973 + t716 * t990;
t8 = (t624 * t731 + t681) * pkin(5) + t646;
t658 = -t8 * qJD(1) + t51 * qJD(3);
t6 = t525 * t722 - t527 * t721 + t559 * t725 + t563 * t726 + t659;
t657 = -t6 * qJD(1) + t67 * qJD(2);
t589 = t627 ^ 2 * t618;
t113 = -t457 * t716 - t458 * t696 + t589;
t636 = (t459 * t943 + t460 * t949) * t627 - t147 * t457 / 0.2e1 + t148 * t966 + t187 * t974 + t188 * t971;
t650 = t1002 * t371 + t1004 * t374 + t621 * t745;
t5 = t636 + t650;
t656 = t5 * qJD(1) + t113 * qJD(2) + t63 * qJD(3);
t194 = t525 * t526 + t527 * t528 - t618;
t655 = t16 * qJD(1) + t63 * qJD(2) + t194 * qJD(3);
t234 = t536 * t627 * t872 + t538 * t631 * t860 - t589;
t34 = t660 + (-t628 * pkin(4) / 0.2e1 + (t347 * t950 + t348 * t945) * t627) * t631 + t664;
t654 = -t34 * qJD(1) - t234 * qJD(2) - t195 * qJD(3);
t456 = t631 * t717 - t618;
t653 = t68 * qJD(1) - t195 * qJD(2) + t456 * qJD(3);
t145 = t621 * t942;
t645 = t1011 * t1002 + t1004 * t1012;
t2 = (t870 * t1014 - t899 / 0.2e1 + t683) * pkin(5) + t645;
t28 = (t706 + t680) * pkin(5);
t52 = t722 * t527 + t721 * t525 + (t739 + t679) * pkin(5);
t651 = -t2 * qJD(1) - t28 * qJD(2) - t52 * qJD(3) + t145 * qJD(4);
t617 = t623 * t634;
t615 = -t786 / 0.2e1;
t614 = t786 / 0.2e1;
t613 = -t785 / 0.2e1;
t586 = t624 * t887;
t548 = t610 + t784 / 0.2e1;
t520 = t610 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t631;
t403 = t752 + t842;
t402 = t752 + t841;
t386 = t400 * qJD(4);
t383 = t401 * qJD(4);
t381 = t399 * qJD(4);
t357 = t628 * t741 + t631 * t687;
t356 = (t688 + t730) * t631;
t298 = -t893 / 0.2e1 + t707 + t630 * t727 + t731;
t297 = t894 / 0.2e1 + t630 * t750 + t633 * t727 + t743;
t292 = t522 + t567 / 0.2e1 - t668;
t291 = t774 - t565 / 0.2e1 + t667;
t231 = t398 * qJD(4) - t527 * t821;
t230 = -t386 - t771;
t202 = -t714 - t380;
t201 = -t559 * t782 + t387;
t196 = t402 * qJD(4) - t988;
t190 = (t536 * t946 + t538 * t950) * t634 + t678;
t169 = t403 * qJD(4) + (qJD(6) + t711) * t527;
t168 = t383 + t771 + t843;
t136 = -t386 + t843;
t101 = t458 * t944 + t527 * t747 + t528 * t749 + t628 * t738 - t696 * t949;
t100 = t457 * t943 + t525 * t747 + t526 * t749 + t631 * t746 + t716 * t949;
t73 = t676 + t1005;
t72 = t677 + t1010;
t61 = pkin(5) * t733 + t882 + t977 - t869 / 0.2e1;
t59 = t629 * t777 - t868 - t635 / 0.2e1 - t883 / 0.2e1;
t57 = t527 * t778 + t563 * t712 + t705 * t629 + t1010 + t736;
t56 = t525 * t778 + t559 * t712 - t705 * t632 + t1005 + t744;
t53 = -t715 * t964 + t527 * t1002 + (t679 + t740) * pkin(5);
t35 = pkin(4) * t745 + t347 * t706 + t732 * t916 + t660 - t664;
t30 = t643 + t682;
t29 = (t627 * t741 + t680) * pkin(5);
t26 = qJD(2) * t257 + qJD(4) * t68;
t9 = -t646 + (t681 + t707) * pkin(5);
t7 = t525 * t1002 + t1011 * t958 + t1012 * t960 - t715 * t738 + t659;
t4 = t636 - t650;
t3 = t621 * t712 - t645 + (t899 / 0.2e1 + t683) * pkin(5);
t1 = qJD(2) * t131 + qJD(4) * t16 + qJD(5) * t17;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t789, t787, 0, t416 * qJD(2), t758, t607 * qJD(4), 0, -t758, 0, 0, -t557 * t785 + t634 * t789, -t557 * t783 - t631 * t789, -t550 * qJD(2), t264 * qJD(2), t625 * t758 - t708, -t561 * qJD(5) - 0.2e1 * t634 * t709, -t564 * qJD(4) + t631 * t764, t623 * t758 + t708, t562 * qJD(4) + t631 * t763, -t758, qJD(2) * t430 + qJD(4) * t166 + qJD(5) * t220, -qJD(2) * t431 - qJD(4) * t167 - qJD(5) * t219, qJD(2) * t334 + qJD(4) * t79, qJD(2) * t104 + qJD(4) * t80 (qJD(4) * t528 - t843) * t527, qJD(4) * t200 + t256 * t782, t352 * qJD(4) + t525 * t713 (qJD(4) * t526 + t988) * t525, t351 * qJD(4) + t527 * t713, -t758, qJD(2) * t203 + qJD(4) * t32 + qJD(5) * t76 + qJD(6) * t84, -qJD(2) * t204 - qJD(4) * t33 - qJD(5) * t77 - qJD(6) * t83, qJD(2) * t141 + qJD(4) * t21 + qJD(5) * t20, qJD(2) * t27 + qJD(4) * t23 + qJD(5) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t838, 0, 0, 0, 0, 0, 0, t790, t788, 0, t796, 0, 0, 0, 0, 0, 0, t753, -t757, -t794, t807 + (t586 + (t626 - 0.1e1) * t887) * qJD(2), 0, 0, 0, 0, 0, 0, qJD(4) * t356 + qJD(5) * t298 + t825, qJD(4) * t357 + qJD(5) * t297 - t824, qJD(4) * t190 + t826 (-t536 * t537 + t538 * t539 + t586) * qJD(2) + t35 * qJD(4) + t690, 0, 0, 0, 0, 0, 0, qJD(4) * t100 + t1006 * t782 + t831, qJD(4) * t101 + t1008 * t782 - t830, qJD(4) * t30 + t836 + t935 (-t371 * t716 - t374 * t696 + t586) * qJD(2) + t4 * qJD(4) + t9 * qJD(5) + t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t610, t791, -t783, -t610, t785, 0, -t557 * t786 - t558 * t783, -t557 * t821 + t558 * t785, 0, 0, t795 + (t625 * t786 - t767) * t634 (t617 - t888) * qJD(4) + (qJD(5) - t821) * t870 * t991, -t760 - t792, -t795 + (t623 * t786 + t767) * t634, -t754 + t793, -t548, t811 + t356 * qJD(2) + (t630 * t704 - t773) * qJD(4) + t292 * qJD(5), -t810 + t357 * qJD(2) + (t633 * t704 + t775) * qJD(4) + t291 * qJD(5), t190 * qJD(2) + qJD(4) * t697 + t856, t35 * qJD(2) + (pkin(8) * t697 - t558 * t938) * qJD(4) + t699 (-t820 + t822) * t528 + t1013, t808 + (t895 + t897) * qJD(4) + t852, -t762 + t801 + t986 (-qJD(4) * t559 + t823) * t526 - t1013, t403 * t782 + t766 + t802, -t520, t919 + t100 * qJD(2) + (t460 * t559 - t526 * t621 + t631 * t715) * qJD(4) + t56 * qJD(5) + t73 * qJD(6), -t918 + t101 * qJD(2) + (t445 * t631 + t460 * t563 - t528 * t621) * qJD(4) + t57 * qJD(5) + t72 * qJD(6), t921 + t30 * qJD(2) + (-t187 * t563 - t188 * t559 + t445 * t526 - t528 * t715) * qJD(4) + t7 * qJD(5), t4 * qJD(2) + (-t187 * t715 + t188 * t445 + t460 * t621) * qJD(4) + t3 * qJD(5) + t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t663, t610 * t630 + t611, t438, t669, t613, qJD(2) * t298 + qJD(4) * t292 - qJD(5) * t348 + t828, qJD(2) * t297 + qJD(4) * t291 + qJD(5) * t347 - t829, 0, 0, -t996, t87, t168, t996, t169, t613, qJD(4) * t56 + qJD(5) * t159 + qJD(6) * t59 + t1018 + t930, qJD(4) * t57 - qJD(5) * t160 + qJD(6) * t61 + t1016 - t929, t7 * qJD(4) + (-t525 * t632 + t527 * t629) * t933 + t702, t9 * qJD(2) + t3 * qJD(4) + (t159 * t632 + t160 * t629) * t933 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t996, t87, t168, t996, t169, t613, qJD(4) * t73 + qJD(5) * t59 - qJD(6) * t148 + t1018 + t927, qJD(4) * t72 + qJD(5) * t61 + qJD(6) * t147 + t1016 - t928, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t838, 0, 0, 0, 0, 0, 0, -t790, -t788, 0, -t796, 0, 0, 0, 0, 0, 0, t628 * t785 - t753, t628 * t783 + t757, t794, -t807, 0, 0, 0, 0, 0, 0, qJD(4) * t355 - qJD(5) * t295 - t825, qJD(4) * t358 - qJD(5) * t296 + t824, qJD(4) * t191 - t826, -qJD(4) * t34 - t690, 0, 0, 0, 0, 0, 0, -qJD(4) * t98 - t1007 * t782 - t831, -qJD(4) * t99 - t1009 * t782 + t830, qJD(4) * t31 - t836 + t935, qJD(4) * t5 - qJD(5) * t8 - t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t234, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t827 - t849, 0, 0, 0, 0, 0, 0, 0, 0, 0, t781 - t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t755 - t768, t756 + t761, 0, 0, 0, 0, 0, 0, 0, 0, t627 * t983 + t800, t627 * t661 + t799, -t718 * t818 + t809 (-pkin(8) * t718 - t938) * t818 + t654, 0, 0, 0, 0, 0, 0, t329 * t782 + t559 * t768 - t855, t328 * t782 + t563 * t768 - t854, t920 + (-t457 * t563 - t458 * t559) * qJD(4) + t934 (t458 * t445 - t457 * t715 + t621 * t885) * qJD(4) + t29 * qJD(5) + t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t538 + t630 * t756 - t806, qJD(5) * t536 + t627 * t754 - t805, 0, 0, 0, 0, 0, 0, 0, 0, t1023, t1024, t698, t29 * qJD(4) + (-t629 * t716 + t632 * t696) * t933 + t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1023, t1024, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827 - t849, 0, 0, 0, 0, 0, 0, 0, 0, 0, t781 + t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t785, -t783, 0, 0, 0, 0, 0, 0, 0, 0, -t754 - t764, t760 - t763 (t617 + t888) * qJD(4) (pkin(8) * t717 - t941) * qJD(4) + t653, 0, 0, 0, 0, 0, 0, t402 * t782 + t766, t762 - t989 (-t895 + t897) * qJD(4) (t445 * t528 + t526 * t715 + t621 * t631) * qJD(4) + t53 * qJD(5) + t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661, t983, 0, 0, 0, 0, 0, 0, 0, 0, t196, t136, 0, t53 * qJD(4) + (-t525 * t629 - t527 * t632) * t933 + t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, t136, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610, -t791, 0, t610, 0, 0, t691 * t631, t691 * t634, 0, 0, -t610 * t625 + t795, t669 * t991, t763 + t792, -t610 * t623 - t795, -t764 - t793, t548, -qJD(2) * t355 + qJD(5) * t429 - t811, -qJD(2) * t358 + qJD(5) * t428 + t810, -qJD(2) * t191 - t856, qJD(2) * t34 - t699, -t528 * t822 + t1013, -t808 + t852, -t801 + t989, -t526 * t823 - t1013, -t398 * t782 - t802, t520, qJD(2) * t98 - qJD(5) * t55 - qJD(6) * t70 - t919, qJD(2) * t99 - qJD(5) * t54 - qJD(6) * t71 + t918, -qJD(2) * t31 - qJD(5) * t6 - t921, -qJD(2) * t5 - qJD(5) * t2 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t755, -t761, 0, 0, 0, 0, 0, 0, 0, 0, -t800, -t799, -t809, -t654, 0, 0, 0, 0, 0, 0, -t326 * t782 + t855, -t327 * t782 + t854, -t920 + t934, -qJD(5) * t28 - t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t653, 0, 0, 0, 0, 0, 0, -t782 * t399, -t986, 0, -qJD(5) * t52 - t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t759, t606 * qJD(5), 0, -t759, 0, 0, -pkin(4) * t815, -pkin(4) * t814, 0, 0, -t987, t782 * t366, 0, t987, 0, 0, qJD(5) * t396 + t563 * t812, qJD(5) * t397 - t559 * t812, 0, qJD(5) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453, t662, t692, -t453, -t711 * t630, t614, -pkin(8) * t814 - t684, pkin(8) * t815 - t685, 0, 0, -t997, t102, t201, t997, t202, t614, -t694 + t992, -t693 + t995 (t559 * t632 - t563 * t629) * t933 + t657 (-t445 * t632 - t629 * t715) * t933 + t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t997, t102, t201, t997, t202, t614, -t670 + t992, -t671 + t995, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, -t663 (-t630 * t786 - t816) * t634, -t438 (-t770 + t817) * t634, t613, qJD(2) * t295 - qJD(4) * t429 - t828, qJD(2) * t296 - qJD(4) * t428 + t829, 0, 0, t996, -t87, t230, -t996, t231, t613, qJD(4) * t55 + qJD(6) * t58 + t1017 - t930, qJD(4) * t54 + qJD(6) * t60 + t1015 + t929, qJD(4) * t6 - t702, qJD(2) * t8 + qJD(4) * t2 - t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t806, t805, 0, 0, 0, 0, 0, 0, 0, 0, t1022, t1021, -t698, qJD(4) * t28 - t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, t383, 0, qJD(4) * t52 - t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t453, -t662, -t633 * t821, t453, t630 * t821, t615, t684, t685, 0, 0, t997, -t102, -t387, -t997, t380, t615, t694 + t848, t693 + t847, -t657, -t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t629 * t932, -t632 * t932, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t629 * t719 + t892, -t632 * t719 + t891, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t996, -t87, t230, -t996, t231, t613, qJD(4) * t70 - qJD(5) * t58 + t1017 - t927, qJD(4) * t71 - qJD(5) * t60 + t1015 + t928, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1022, t1021, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, t383, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t997, -t102, -t387, -t997, t380, t615, t670 + t848, t671 + t847, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t629 * t933 - t892, t632 * t933 - t891, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
