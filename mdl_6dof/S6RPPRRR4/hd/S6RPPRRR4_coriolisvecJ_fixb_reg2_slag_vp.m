% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPPRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPPRRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:26:47
% EndTime: 2019-03-09 02:26:58
% DurationCPUTime: 4.13s
% Computational Cost: add. (6938->442), mult. (13523->624), div. (0->0), fcn. (8311->8), ass. (0->225)
t146 = cos(pkin(10));
t152 = cos(qJ(5));
t145 = sin(pkin(10));
t149 = sin(qJ(5));
t153 = cos(qJ(4));
t249 = t149 * t153;
t216 = t145 * t249;
t105 = -t146 * t152 - t216;
t150 = sin(qJ(4));
t230 = qJD(4) * t152;
t205 = t150 * t230;
t246 = t152 * t153;
t280 = qJD(5) * t105 - t145 * t205 - (t145 * t149 + t146 * t246) * qJD(1);
t106 = t145 * t246 - t146 * t149;
t224 = t149 * qJD(4);
t207 = t150 * t224;
t279 = -qJD(5) * t106 + t145 * t207 - (t145 * t152 - t146 * t249) * qJD(1);
t236 = qJD(1) * t150;
t109 = t149 * t236 + t230;
t210 = t152 * t236;
t110 = t210 - t224;
t148 = sin(qJ(6));
t151 = cos(qJ(6));
t176 = t109 * t148 - t110 * t151;
t64 = t109 * t151 + t110 * t148;
t287 = t176 * t64;
t235 = qJD(1) * t153;
t211 = t149 * t235;
t289 = -pkin(9) - pkin(8);
t213 = qJD(5) * t289;
t184 = -pkin(4) * t150 + pkin(8) * t153;
t115 = t184 * qJD(1);
t154 = -pkin(1) - pkin(2);
t130 = qJD(1) * t154 + qJD(2);
t237 = qJD(1) * t146;
t97 = qJ(2) * t237 + t130 * t145;
t86 = -qJD(1) * pkin(7) + t97;
t296 = qJD(3) * t153 - t150 * t86;
t42 = t115 * t149 + t152 * t296;
t304 = -pkin(9) * t211 + t149 * t213 - t42;
t173 = -pkin(5) * t150 + pkin(9) * t246;
t41 = t115 * t152 - t149 * t296;
t303 = qJD(1) * t173 - t152 * t213 + t41;
t302 = t176 ^ 2 - t64 ^ 2;
t233 = qJD(3) * t150;
t67 = t153 * t86 + t233;
t59 = qJD(4) * pkin(8) + t67;
t185 = pkin(4) * t153 + pkin(8) * t150;
t140 = t145 * qJ(2);
t96 = -qJD(1) * t140 + t130 * t146;
t85 = qJD(1) * pkin(3) - t96;
t60 = qJD(1) * t185 + t85;
t31 = t149 * t60 + t152 * t59;
t223 = qJD(1) * qJD(2);
t199 = t146 * t223;
t49 = qJD(4) * t296 + t153 * t199;
t102 = qJD(2) * t145 + qJD(4) * t184;
t87 = t102 * qJD(1);
t13 = -qJD(5) * t31 - t149 * t49 + t152 * t87;
t222 = qJD(1) * qJD(4);
t198 = t150 * t222;
t200 = t153 * t222;
t81 = qJD(5) * t109 - t152 * t200;
t10 = -pkin(5) * t198 - pkin(9) * t81 + t13;
t227 = qJD(5) * t152;
t228 = qJD(5) * t149;
t12 = t149 * t87 + t152 * t49 + t227 * t60 - t228 * t59;
t136 = qJD(5) * t224;
t202 = t150 * t227;
t206 = t153 * t224;
t164 = t202 + t206;
t161 = qJD(1) * t164 - t136;
t11 = pkin(9) * t161 + t12;
t226 = qJD(6) * t148;
t133 = qJD(5) + t235;
t30 = -t149 * t59 + t152 * t60;
t28 = pkin(9) * t110 + t30;
t24 = pkin(5) * t133 + t28;
t29 = pkin(9) * t109 + t31;
t1 = t151 * (qJD(6) * t24 + t11) + t10 * t148 - t29 * t226;
t58 = -qJD(4) * pkin(4) - t296;
t43 = -pkin(5) * t109 + t58;
t301 = -t43 * t64 - t1;
t129 = qJD(6) + t133;
t225 = qJD(6) * t151;
t167 = t109 * t225 + t110 * t226 + t148 * t161 + t151 * t81;
t300 = -t129 * t64 + t167;
t298 = -t133 * t30 + t12;
t297 = -t133 * t31 - t13;
t155 = qJD(4) ^ 2;
t156 = qJD(1) ^ 2;
t295 = t145 * (t155 + t156);
t294 = (qJD(1) * t202 - t136) * t153;
t143 = t150 ^ 2;
t144 = t153 ^ 2;
t242 = t143 - t144;
t241 = t143 + t144;
t203 = t150 * t228;
t229 = qJD(4) * t153;
t204 = t152 * t229;
t293 = -t203 + t204;
t221 = qJD(5) + qJD(6);
t270 = t151 * t29;
t6 = t148 * t24 + t270;
t2 = -qJD(6) * t6 + t10 * t151 - t11 * t148;
t292 = -t176 * t43 + t2;
t234 = qJD(2) * t146;
t201 = t150 * t234;
t291 = -pkin(5) * t164 + t201;
t27 = qJD(6) * t176 + t148 * t81 - t151 * t161;
t290 = t129 * t176 - t27;
t166 = qJD(4) * t67;
t50 = t150 * t199 + t166;
t271 = t150 * t50;
t158 = -(t150 * t67 + t153 * t296) * qJD(4) + t153 * t49 + t271;
t288 = pkin(5) * t149;
t124 = t289 * t149;
t125 = t289 * t152;
t77 = t124 * t148 - t125 * t151;
t286 = qJD(6) * t77 + t148 * t304 + t151 * t303;
t76 = t124 * t151 + t125 * t148;
t285 = -qJD(6) * t76 + t148 * t303 - t151 * t304;
t52 = t105 * t151 - t106 * t148;
t284 = qJD(6) * t52 + t148 * t279 + t151 * t280;
t53 = t105 * t148 + t106 * t151;
t283 = -qJD(6) * t53 - t148 * t280 + t151 * t279;
t247 = t151 * t152;
t251 = t148 * t149;
t282 = t148 * t211 - t151 * t227 - t152 * t225 + t221 * t251 - t235 * t247;
t114 = t148 * t152 + t149 * t151;
t69 = t221 * t114;
t281 = t114 * t235 + t69;
t192 = t146 * t154 - t140;
t111 = pkin(3) - t192;
t88 = t111 + t185;
t243 = qJ(2) * t146 + t145 * t154;
t112 = -pkin(7) + t243;
t98 = t112 * t246;
t48 = t149 * t88 + t98;
t34 = t148 * t206 + t150 * t69 - t151 * t204;
t278 = t129 * t34;
t250 = t149 * t150;
t215 = t148 * t250;
t248 = t150 * t152;
t35 = -qJD(6) * t215 + (t221 * t248 + t206) * t151 + t293 * t148;
t277 = t129 * t35;
t274 = t148 * t29;
t273 = t149 * t30;
t272 = t149 * t58;
t269 = t152 * t30;
t268 = t153 * t167;
t267 = t153 * t27;
t266 = t153 * t81;
t265 = t50 * t149;
t264 = t50 * t152;
t263 = t58 * t152;
t262 = t81 * t149;
t99 = t114 * t150;
t261 = qJD(1) * t99;
t260 = t109 * t110;
t259 = t109 * t149;
t258 = t109 * t150;
t257 = t109 * t152;
t256 = t110 * t149;
t255 = t110 * t150;
t254 = t133 * t152;
t253 = t133 * t153;
t252 = t146 * t156;
t245 = t155 * t150;
t244 = t155 * t153;
t100 = t150 * t247 - t215;
t239 = qJD(1) * t100;
t238 = qJD(1) * t111;
t231 = qJD(4) * t150;
t220 = 0.2e1 * t223;
t219 = 0.2e1 * t222;
t218 = t112 * t249;
t217 = t133 * t246;
t214 = t150 * t156 * t153;
t212 = t146 * t236;
t209 = t153 * t234;
t208 = t145 * t229;
t195 = qJD(1) * t48 + t31;
t193 = -t85 - t234;
t191 = t110 + t224;
t190 = t146 * t219;
t189 = t145 * t220;
t188 = t133 * t202;
t187 = t153 * t198;
t186 = pkin(5) * t228 - t233 - (-qJD(1) * t288 + t86) * t153;
t183 = t167 * t99 + t176 * t35;
t182 = -t100 * t27 - t34 * t64;
t181 = t96 * t145 - t97 * t146;
t83 = t152 * t88;
t39 = pkin(9) * t248 + t83 + (-t112 * t149 + pkin(5)) * t153;
t40 = pkin(9) * t250 + t48;
t18 = -t148 * t40 + t151 * t39;
t19 = t148 * t39 + t151 * t40;
t178 = t150 * t296 - t153 * t67;
t175 = t256 + t257;
t174 = qJD(1) * (t85 - t234);
t172 = t143 * t152 * t222 + t133 * t203;
t170 = t229 * t58 + t271;
t169 = -t112 * t155 + t189;
t168 = t102 * t152 + t112 * t207 - t149 * t209;
t165 = (t149 * t200 - t136) * t152;
t163 = qJD(4) * (t193 - t238);
t159 = t12 * t152 - t13 * t149 + (-t149 * t31 - t269) * qJD(5);
t22 = t152 * t209 + t88 * t227 + t149 * t102 + (-t153 * t228 - t205) * t112;
t157 = t165 + t262 + (-t259 + (-t110 + t210) * t152) * qJD(5);
t139 = -pkin(5) * t152 - pkin(4);
t113 = -t247 + t251;
t84 = (t112 - t288) * t150;
t51 = t112 * t229 + t291;
t47 = t83 - t218;
t32 = t136 * pkin(5) + qJD(1) * t291 + t166;
t23 = -qJD(5) * t48 + t168;
t17 = pkin(9) * t164 + t22;
t16 = t173 * qJD(4) + (-t98 + (-pkin(9) * t150 - t88) * t149) * qJD(5) + t168;
t8 = t151 * t28 - t274;
t7 = -t148 * t28 - t270;
t5 = t151 * t24 - t274;
t4 = -qJD(6) * t19 - t148 * t17 + t151 * t16;
t3 = qJD(6) * t18 + t148 * t16 + t151 * t17;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, qJ(2) * t220, 0, 0, 0, 0, 0, 0, t189, 0.2e1 * t199, 0 ((-t145 * t192 + t146 * t243) * qJD(1) - t181) * qJD(2), 0.2e1 * t187, -t242 * t219, -t244, -0.2e1 * t187, t245, 0, t150 * t163 + t153 * t169, -t150 * t169 + t153 * t163, -t199 * t241 - t158, t158 * t112 + (-t178 * t146 + (t85 + t238) * t145) * qJD(2), t110 * t293 - t248 * t81, -t175 * t229 + (-t165 + t262 + (t259 + (-t110 - t210) * t152) * qJD(5)) * t150, t266 + (-t217 + t255) * qJD(4) + t172, t109 * t164 + t161 * t250, t188 + t294 + (-t258 + (-qJD(1) * t242 + t253) * t149) * qJD(4) (-t133 - t235) * t231, t23 * t133 + (t13 + (-t109 * t112 - t272) * qJD(4)) * t153 + (-t109 * t234 - t58 * t227 - t30 * qJD(4) + t112 * t136 - t265 + (-t112 * t202 + (-t47 - t218) * qJD(4)) * qJD(1)) * t150, -t133 * t22 + (-t12 + (-t110 * t112 - t263) * qJD(4)) * t153 + (qJD(4) * t195 - t110 * t234 + t112 * t81 + t228 * t58 - t264) * t150, t22 * t109 + t23 * t110 - t48 * t136 - t47 * t81 + (t149 * t195 + t269) * t229 + (t12 * t149 + t13 * t152 + (t152 * t195 - t273) * qJD(5)) * t150, t112 * t170 + t12 * t48 + t13 * t47 + t201 * t58 + t22 * t31 + t23 * t30, -t100 * t167 + t176 * t34, -t182 + t183, t278 + t268 + (-t176 + t239) * t231, -t27 * t99 + t35 * t64, t277 - t267 + (-t64 - t261) * t231 (-t129 - t235) * t231, t129 * t4 + t153 * t2 + t27 * t84 - t32 * t99 - t35 * t43 - t51 * t64 + (-qJD(1) * t18 - t5) * t231, -t1 * t153 - t100 * t32 - t129 * t3 + t167 * t84 + t34 * t43 + t51 * t176 + (qJD(1) * t19 + t6) * t231, t1 * t99 + t100 * t2 - t167 * t18 - t176 * t4 - t19 * t27 + t3 * t64 - t34 * t5 + t35 * t6, t1 * t19 + t18 * t2 + t3 * t6 + t32 * t84 + t4 * t5 + t43 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t156 * qJ(2), 0, 0, 0, 0, 0, 0, -t145 * t156, -t252, 0, t181 * qJD(1), 0, 0, 0, 0, 0, 0, t150 * t190 - t153 * t295, t150 * t295 + t153 * t190, t241 * t252, t178 * t237 + (qJD(1) * t193 + t158) * t145, 0, 0, 0, 0, 0, 0 (-t109 * t229 + t136 * t150) * t145 + t279 * t133 + (-t145 * t202 + t146 * t109 + (-t105 - t216) * qJD(4)) * t236, -t110 * t208 - t280 * t133 + (t145 * t81 + (qJD(4) * t106 + t110 * t146) * qJD(1)) * t150, -t105 * t81 + t106 * t161 + t109 * t280 + t110 * t279, t105 * t13 + t106 * t12 + t145 * t170 - t212 * t58 + t279 * t30 + t280 * t31, 0, 0, 0, 0, 0, 0, -t64 * t208 + t283 * t129 + (t145 * t27 + (-qJD(4) * t52 + t146 * t64) * qJD(1)) * t150, t176 * t208 - t284 * t129 + (t145 * t167 + (qJD(4) * t53 - t146 * t176) * qJD(1)) * t150, -t167 * t52 - t176 * t283 - t27 * t53 + t284 * t64, -t43 * t212 + t1 * t53 + t2 * t52 + t284 * t6 + t283 * t5 + (t150 * t32 + t229 * t43) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245, -t244, 0, -qJD(4) * t178 + t150 * t49 - t153 * t50, 0, 0, 0, 0, 0, 0, -t188 + t294 + (-t258 + (qJD(1) * t241 - t253) * t149) * qJD(4), -t266 + (-t217 - t255) * qJD(4) + t172 (-t256 + t257) * t229 + t157 * t150 (-t50 + (t152 * t31 - t273) * qJD(4)) * t153 + (qJD(4) * t58 + t159) * t150, 0, 0, 0, 0, 0, 0, -t277 - t267 + (-t64 + t261) * t231, t278 - t268 + (t176 + t239) * t231, t182 + t183, t1 * t100 - t153 * t32 - t2 * t99 + t231 * t43 - t34 * t6 - t35 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, t242 * t156, 0, t214, 0, 0, t150 * t174, t153 * t174, 0, 0, -t110 * t254 + t262, -t136 * t149 + t81 * t152 + t175 * qJD(5) + (t109 * t246 + (t153 * t191 + t202) * t149) * qJD(1), t133 * t227 + (-t150 * t191 + t217) * qJD(1), -t109 * t228 - t136 * t152 + (-t109 * t249 + t152 * t164) * qJD(1), -t133 * t228 + (-t133 * t249 + (t109 - t230) * t150) * qJD(1), t133 * t236, -pkin(4) * t136 + t67 * t109 - t41 * t133 - t264 + (-pkin(8) * t254 + t272) * qJD(5) + ((pkin(4) * t227 + t30) * t150 + (qJD(4) * t185 + t153 * t58) * t149) * qJD(1), -pkin(4) * t81 + t110 * t67 + t133 * t42 + t265 + (pkin(8) * t133 * t149 + t263) * qJD(5) + (t58 * t246 + (pkin(8) * t230 - t31) * t150) * qJD(1), pkin(8) * t157 - t42 * t109 - t41 * t110 + t149 * t297 + t152 * t298, -pkin(4) * t50 + pkin(8) * t159 - t30 * t41 - t31 * t42 - t58 * t67, t114 * t167 - t176 * t282, -t113 * t167 - t114 * t27 - t176 * t281 - t282 * t64, -t282 * t129 + (-qJD(4) * t114 + t176) * t236, t113 * t27 - t281 * t64, -t281 * t129 + (qJD(4) * t113 + t64) * t236, t129 * t236, t113 * t32 + t139 * t27 - t186 * t64 + t281 * t43 - t286 * t129 + (-qJD(4) * t76 + t5) * t236, t114 * t32 + t139 * t167 + t186 * t176 - t282 * t43 + t285 * t129 + (qJD(4) * t77 - t6) * t236, -t1 * t113 - t114 * t2 - t167 * t76 + t176 * t286 - t27 * t77 - t281 * t6 + t282 * t5 - t285 * t64, t1 * t77 + t139 * t32 + t186 * t43 + t2 * t76 - t285 * t6 - t286 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, -t109 ^ 2 + t110 ^ 2, -t109 * t133 + t81, -t260, -t110 * t133 + t161, -t198, t110 * t58 - t297, -t109 * t58 - t298, 0, 0, -t287, t302, t300, t287, t290, -t198, -t129 * t7 + (-t110 * t64 - t129 * t226 - t151 * t198) * pkin(5) + t292, t129 * t8 + (t110 * t176 - t129 * t225 + t148 * t198) * pkin(5) + t301, t5 * t64 + t6 * t176 - t64 * t8 + t176 * t7 + (-t148 * t27 - t151 * t167 + (t148 * t176 + t151 * t64) * qJD(6)) * pkin(5), -t5 * t7 - t6 * t8 + (t1 * t148 + t110 * t43 + t151 * t2 + (-t148 * t5 + t151 * t6) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, t302, t300, t287, t290, -t198, t129 * t6 + t292, t129 * t5 + t301, 0, 0;];
tauc_reg  = t9;
