% Calculate matrix of centrifugal and coriolis load on the joints for
% S6RPPPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Cq [6x6]
%   matrix of coriolis and centrifugal joint torques.
%   Gives coriolis joint torques when multiplied with joint velocities

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Cq = S6RPPPRR5_coriolismatJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPPPRR5_coriolismatJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolismat_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:37:15
% EndTime: 2019-03-09 01:37:32
% DurationCPUTime: 15.23s
% Computational Cost: add. (33237->600), mult. (74486->896), div. (0->0), fcn. (93839->8), ass. (0->359)
t371 = cos(pkin(9));
t374 = sin(qJ(1));
t377 = cos(qJ(1));
t514 = sin(pkin(9));
t341 = t374 * t371 + t377 * t514;
t373 = sin(qJ(5));
t491 = t341 * t373;
t340 = t371 * t377 - t374 * t514;
t375 = cos(qJ(6));
t372 = sin(qJ(6));
t376 = cos(qJ(5));
t485 = t372 * t376;
t295 = -t340 * t375 - t341 * t485;
t481 = t375 * t376;
t296 = -t340 * t372 + t341 * t481;
t508 = Icges(7,4) * t375;
t414 = -Icges(7,2) * t372 + t508;
t317 = -Icges(7,6) * t376 + t373 * t414;
t509 = Icges(7,4) * t372;
t416 = Icges(7,1) * t375 - t509;
t319 = -Icges(7,5) * t376 + t373 * t416;
t412 = Icges(7,5) * t375 - Icges(7,6) * t372;
t315 = -Icges(7,3) * t376 + t373 * t412;
t484 = t373 * t315;
t170 = t295 * t317 + t296 * t319 + t341 * t484;
t208 = Icges(7,5) * t296 + Icges(7,6) * t295 + Icges(7,3) * t491;
t511 = Icges(7,4) * t296;
t211 = Icges(7,2) * t295 + Icges(7,6) * t491 + t511;
t289 = Icges(7,4) * t295;
t214 = Icges(7,1) * t296 + Icges(7,5) * t491 + t289;
t104 = t208 * t491 + t295 * t211 + t296 * t214;
t294 = t340 * t481 + t341 * t372;
t490 = t341 * t375;
t297 = t340 * t485 - t490;
t494 = t340 * t373;
t207 = Icges(7,5) * t294 - Icges(7,6) * t297 + Icges(7,3) * t494;
t510 = Icges(7,4) * t294;
t210 = -Icges(7,2) * t297 + Icges(7,6) * t494 + t510;
t290 = Icges(7,4) * t297;
t213 = Icges(7,1) * t294 + Icges(7,5) * t494 - t290;
t616 = t210 * t295 + t213 * t296;
t105 = -t207 * t491 - t616;
t411 = t104 * t341 - t105 * t340;
t620 = -t376 * t170 + t373 * t411;
t618 = -t104 * t340 - t105 * t341;
t525 = m(7) * qJD(6);
t522 = rSges(7,2) * t372;
t523 = rSges(7,1) * t375;
t418 = -t522 + t523;
t321 = -rSges(7,3) * t376 + t373 * t418;
t419 = t294 * rSges(7,1) - rSges(7,2) * t297;
t218 = -rSges(7,3) * t494 - t419;
t497 = t218 * t376;
t617 = -t321 * t494 + t497;
t407 = t210 * t372 - t213 * t375;
t499 = t207 * t376;
t119 = t373 * t407 + t499;
t598 = t207 * t494 - t210 * t297 + t213 * t294;
t169 = t294 * t319 - t297 * t317 + t340 * t484;
t615 = t169 * t376;
t363 = pkin(5) * t373 - pkin(8) * t376;
t451 = -t321 - t363;
t264 = t451 * t340;
t404 = t340 * t377 + t341 * t374;
t422 = t451 * t341;
t576 = m(7) / 0.2e1;
t359 = rSges(6,1) * t373 + rSges(6,2) * t376;
t578 = m(6) / 0.2e1;
t602 = t359 * t578;
t470 = (-t264 * t377 - t374 * t422) * t576 + t404 * t602;
t489 = t341 * t376;
t331 = pkin(8) * t489;
t454 = rSges(7,3) * t489 + t491 * t522;
t219 = t331 + (-pkin(5) - t523) * t491 + t454;
t554 = rSges(7,3) + pkin(8);
t220 = (t554 * t376 + (-pkin(5) - t418) * t373) * t340;
t305 = t359 * t341;
t306 = t359 * t340;
t473 = (t374 * t219 + t220 * t377) * t576 + (-t374 * t305 - t306 * t377) * t578;
t56 = t473 - t470;
t613 = t56 * qJD(1);
t403 = t340 * t374 - t341 * t377;
t469 = (-t264 * t374 + t377 * t422) * t576 + t403 * t602;
t474 = (-t219 * t377 + t374 * t220) * t576 + (t305 * t377 - t374 * t306) * t578;
t603 = t469 - t474;
t612 = t603 * qJD(1);
t611 = t340 * t598;
t354 = Icges(6,5) * t376 - Icges(6,6) * t373;
t610 = t341 * (-Icges(6,3) * t340 + t341 * t354);
t609 = t341 * t598;
t608 = t374 ^ 2;
t577 = -m(7) / 0.2e1;
t368 = Icges(6,4) * t376;
t505 = Icges(6,2) * t373;
t415 = t368 - t505;
t276 = -Icges(6,6) * t340 + t341 * t415;
t604 = t276 * t491;
t599 = -t297 * t211 + t214 * t294;
t562 = -t340 / 0.2e1;
t560 = -t341 / 0.2e1;
t558 = t341 / 0.2e1;
t367 = t377 * qJ(2);
t526 = pkin(1) + qJ(3);
t401 = t377 * pkin(3) - t374 * t526 + t367;
t390 = t341 * pkin(7) + t401;
t382 = t340 * pkin(4) + t390;
t492 = t340 * t376;
t595 = pkin(5) * t492 + pkin(8) * t494 - t218;
t159 = t382 + t595;
t527 = pkin(5) * t376;
t391 = t373 * t554 + pkin(4) + t527;
t160 = t340 * t391 + t390 + t419;
t472 = t159 - t160;
t596 = m(7) * t472;
t364 = pkin(8) * t373 + t527;
t455 = t364 * t340 - t218;
t115 = (-t455 + t595) * t341;
t420 = t296 * rSges(7,1) + t295 * rSges(7,2);
t217 = rSges(7,3) * t491 + t420;
t116 = t455 * t340 + (t341 * t364 + t217) * t341;
t335 = t341 * rSges(6,3);
t524 = rSges(6,1) * t376;
t361 = -rSges(6,2) * t373 + t524;
t284 = -t340 * t361 - t335;
t423 = -rSges(6,2) * t491 - t340 * rSges(6,3);
t186 = -t340 * t284 + t341 * (rSges(6,1) * t489 + t423);
t402 = rSges(6,1) * t492 - rSges(6,2) * t494 + t335;
t387 = t341 * (t284 + t402);
t594 = -m(6) * t186 * t387 - m(7) * t115 * t116;
t142 = (t217 * t340 + t341 * t218) * t373;
t593 = t115 * t142 * t577;
t272 = Icges(6,3) * t341 + t340 * t354;
t512 = Icges(6,4) * t373;
t358 = Icges(6,1) * t376 - t512;
t278 = Icges(6,5) * t341 + t340 * t358;
t275 = Icges(6,6) * t341 + t340 * t415;
t316 = Icges(7,3) * t373 + t376 * t412;
t483 = t375 * t319;
t487 = t372 * t317;
t406 = t483 - t487;
t396 = t316 - t406;
t495 = t315 * t376;
t592 = t373 * t396 + t495;
t397 = t315 * t340 - t407;
t591 = t373 * t397 - t499;
t408 = -t211 * t372 + t214 * t375;
t398 = -t315 * t341 - t408;
t500 = t208 * t376;
t590 = t373 * t398 + t500;
t333 = (-Icges(7,2) * t375 - t509) * t373;
t334 = (-Icges(7,1) * t372 - t508) * t373;
t589 = -t372 * (t319 / 0.2e1 + t333 / 0.2e1) + t375 * (t334 / 0.2e1 - t317 / 0.2e1);
t355 = Icges(6,2) * t376 + t512;
t302 = t355 * t340;
t513 = Icges(6,1) * t373;
t417 = t368 + t513;
t304 = t417 * t340;
t588 = t373 * (-t278 + t302) + t376 * (-t275 - t304);
t279 = -Icges(6,5) * t340 + t341 * t358;
t301 = t355 * t341;
t303 = t417 * t341;
t587 = -t373 * (t279 - t301) - t376 * (t276 + t303);
t586 = t340 ^ 2;
t585 = t341 ^ 2;
t365 = t377 ^ 2 + t608;
t584 = 0.2e1 * t365;
t583 = 0.2e1 * qJD(1);
t582 = 0.4e1 * qJD(1);
t581 = 2 * qJD(5);
t579 = -m(6) / 0.2e1;
t106 = -t208 * t494 - t599;
t410 = t106 * t341 - t611;
t46 = t373 * t410 + t615;
t575 = t46 / 0.2e1;
t574 = t618 / 0.2e1;
t52 = -t106 * t340 - t609;
t573 = -t52 / 0.2e1;
t228 = Icges(7,5) * t295 - Icges(7,6) * t296;
t465 = -Icges(7,2) * t296 + t214 + t289;
t467 = Icges(7,1) * t295 - t211 - t511;
t99 = -t228 * t376 + (-t372 * t465 + t375 * t467) * t373;
t572 = t99 / 0.2e1;
t255 = -rSges(7,1) * t373 * t490 + t454;
t256 = t321 * t340;
t498 = t217 * t376;
t108 = (t256 * t373 + t497) * t341 + (t255 * t373 + t498) * t340;
t322 = rSges(7,3) * t373 + t376 * t418;
t405 = -t321 * t376 - t322 * t373;
t138 = t217 * t373 - t255 * t376 + t341 * t405;
t139 = -t218 * t373 + t256 * t376 + t340 * t405;
t178 = t321 * t491 + t498;
t570 = m(7) * (t108 * t142 - t138 * t178 + t139 * t617);
t389 = t526 * t377 + (pkin(3) + qJ(2)) * t374;
t383 = -t340 * pkin(7) + t389;
t161 = t341 * t391 + t383 + t420;
t569 = m(7) * (t138 * t161 + t139 * t160 - t178 * t219 + t220 * t617);
t235 = rSges(7,1) * t295 - rSges(7,2) * t296;
t236 = rSges(7,1) * t297 + rSges(7,2) * t294;
t339 = (-rSges(7,1) * t372 - rSges(7,2) * t375) * t373;
t567 = m(7) * (-t235 * t264 - t236 * t422 + (-t160 * t341 + t161 * t340) * t339);
t564 = m(7) * (t160 * t220 + t161 * t219);
t563 = t278 / 0.2e1;
t561 = -t340 / 0.4e1;
t559 = -t341 / 0.4e1;
t557 = t354 / 0.2e1;
t555 = -t376 / 0.2e1;
t553 = m(3) * ((rSges(3,3) * t377 + t367) * t377 + (rSges(3,3) + qJ(2)) * t608);
t442 = rSges(4,3) + t526;
t311 = rSges(4,1) * t377 - t374 * t442 + t367;
t312 = (rSges(4,1) + qJ(2)) * t374 + t442 * t377;
t552 = m(4) * (-t311 * t374 + t377 * t312);
t551 = m(4) * (t311 * t377 + t374 * t312);
t287 = t341 * rSges(5,1) + t340 * rSges(5,2) + t389;
t380 = rSges(5,1) * t340 - rSges(5,2) * t341 + t401;
t550 = m(5) * (t377 * t287 - t374 * t380);
t549 = m(5) * (t374 * t287 + t377 * t380);
t204 = t335 + (pkin(4) + t361) * t340 + t390;
t205 = (pkin(4) + t524) * t341 + t383 + t423;
t547 = m(6) * (-t204 * t306 - t205 * t305);
t546 = m(6) * (-t374 * t204 + t377 * t205);
t200 = t374 * t205;
t144 = t377 * t204 + t200;
t545 = m(6) * t144;
t539 = m(7) * (-t374 * t160 + t377 * t161);
t156 = t374 * t161;
t110 = t377 * t160 + t156;
t538 = m(7) * t110;
t537 = m(7) * (-t178 * t377 - t374 * t617);
t536 = m(7) * (-t178 * t374 + t377 * t617);
t531 = m(7) * (-t235 * t377 - t374 * t236);
t530 = m(7) * (t374 * t235 - t236 * t377);
t521 = t340 * t46;
t520 = t341 * t620;
t517 = t105 + (t207 * t341 + t208 * t340) * t373 + t599 + t616;
t496 = t276 * t373;
t318 = Icges(7,6) * t373 + t376 * t414;
t486 = t372 * t318;
t320 = Icges(7,5) * t373 + t376 * t416;
t482 = t375 * t320;
t332 = (-Icges(7,5) * t372 - Icges(7,6) * t375) * t373;
t479 = t376 * t332;
t98 = t115 * t576 + t387 * t578;
t478 = t98 * qJD(4);
t206 = t382 + t402;
t468 = -t204 + t206;
t466 = Icges(7,1) * t297 + t210 + t510;
t464 = Icges(7,2) * t294 - t213 + t290;
t463 = -t279 * t492 - t610;
t453 = -t317 + t334;
t452 = t319 + t333;
t450 = t322 + t364;
t448 = qJD(1) * t373;
t447 = qJD(1) * t376;
t446 = qJD(6) * t373;
t445 = qJD(6) * t376;
t222 = (t577 + t579 - m(4) / 0.2e1 - m(5) / 0.2e1) * t584;
t443 = t222 * qJD(1);
t10 = -t615 + (t341 * t517 + t611) * t373;
t440 = t10 / 0.2e1 + t575;
t129 = t295 * t318 + t296 * t320 + t341 * t592;
t251 = t317 * t341;
t253 = t319 * t341;
t69 = -t251 * t295 - t253 * t296 + t341 * t590;
t252 = t317 * t340;
t254 = t319 * t340;
t70 = t252 * t295 + t254 * t296 + t341 * t591;
t12 = (-t129 + t411) * t376 + (-t340 * t70 + t341 * t69 + t170) * t373;
t73 = t228 * t491 + t295 * t465 + t296 * t467;
t229 = Icges(7,5) * t297 + Icges(7,6) * t294;
t74 = t229 * t491 + t295 * t464 + t296 * t466;
t33 = -t340 * t73 - t341 * t74;
t439 = t33 / 0.2e1 - t12 / 0.2e1;
t130 = -t294 * t320 + t297 * t318 - t340 * t592;
t71 = -t251 * t297 + t253 * t294 - t340 * t590;
t72 = t252 * t297 - t254 * t294 - t340 * t591;
t13 = (-t130 + t410) * t376 + (-t340 * t72 + t341 * t71 - t169) * t373;
t75 = -t228 * t494 - t294 * t467 + t297 * t465;
t76 = -t229 * t494 - t294 * t466 + t297 * t464;
t34 = -t340 * t75 - t341 * t76;
t438 = -t34 / 0.2e1 + t13 / 0.2e1;
t430 = -t494 / 0.4e1;
t428 = t491 / 0.4e1;
t424 = m(6) * t468;
t100 = -t229 * t376 + (-t372 * t464 + t375 * t466) * t373;
t131 = t295 * t452 + t296 * t453 + t332 * t491;
t132 = -t294 * t453 + t297 * t452 - t332 * t494;
t421 = t567 / 0.2e1 + (t131 + t99) * t561 + (t132 + t100) * t559;
t413 = Icges(6,5) * t373 + Icges(6,6) * t376;
t118 = t373 * t408 - t500;
t409 = t118 * t341 - t119 * t340;
t147 = t276 * t494 + t463;
t400 = (t147 - t463) * t560 + t574 - t618 / 0.2e1 - t604 * t562;
t16 = -t340 * t517 + t609;
t399 = ((t272 + t496) * t341 - t604) * t560 + (-t275 * t491 + t278 * t489 - t610 + (-t279 * t376 + t496) * t340) * t562 + t147 * t340 / 0.2e1 + (t272 * t341 + (-t275 * t373 + t278 * t376) * t340) * t558 - t16 / 0.2e1 + t573;
t394 = m(7) * (-t138 * t377 + t139 * t374);
t393 = m(7) * (t138 * t374 + t139 * t377);
t392 = t98 * qJD(5);
t155 = t235 * t341 - t236 * t340;
t77 = 0.2e1 * (t108 / 0.4e1 - t155 / 0.4e1) * m(7);
t385 = t404 * t339 * t577;
t84 = -t394 / 0.2e1 + t385;
t384 = t403 * t339 * t576;
t86 = -t393 / 0.2e1 + t384;
t388 = -t84 * qJD(2) - t86 * qJD(3) + t77 * qJD(4);
t386 = t10 * t561 + t620 * t559 + t520 / 0.4e1 - t521 / 0.4e1 - t593 + (t16 + t52) * t428 + (t430 + t494 / 0.4e1) * t618;
t172 = -t396 * t376 + (t315 + t482 - t486) * t373;
t237 = t373 * t406 - t495;
t91 = -t398 * t376 + (t251 * t372 - t253 * t375 + t208) * t373;
t92 = -t397 * t376 + (-t252 * t372 + t254 * t375 - t207) * t373;
t381 = t172 * t555 + t237 * t373 / 0.2e1 + t569 / 0.2e1 + (t130 + t92) * t430 - (t119 - t169) * t492 / 0.4e1 + (t129 + t91) * t428 + (t118 + t170) * t489 / 0.4e1;
t379 = t483 / 0.2e1 - t487 / 0.2e1 - t316 / 0.2e1 + t368 + t513 / 0.2e1 - t505 / 0.2e1;
t378 = t482 / 0.2e1 - t486 / 0.2e1 + t315 / 0.2e1 + t358 / 0.2e1 - t355 / 0.2e1;
t300 = t413 * t340;
t299 = t413 * t341;
t265 = t450 * t340;
t263 = t450 * t341;
t221 = (-m(7) / 0.4e1 - m(6) / 0.4e1 - m(4) / 0.4e1 - m(5) / 0.4e1) * t584 + (m(4) + m(5) + m(6) + m(7)) * t365 / 0.2e1;
t203 = -t305 * t341 - t306 * t340;
t193 = -t479 + (-t372 * t452 + t375 * t453) * t373;
t192 = t236 * t376 - t339 * t494;
t191 = -t235 * t376 - t339 * t491;
t165 = t530 / 0.2e1;
t164 = t531 / 0.2e1;
t153 = (t235 * t340 + t236 * t341) * t373;
t135 = (-pkin(5) * t491 + t255 + t331) * t341 + (-t340 * t363 - t256) * t340;
t123 = t536 / 0.2e1;
t122 = t537 / 0.2e1;
t97 = t98 * qJD(1);
t90 = -t160 * t236 + t161 * t235;
t85 = t393 / 0.2e1 + t384;
t83 = t394 / 0.2e1 + t385;
t78 = (t108 + t155) * t576;
t68 = -t479 / 0.2e1 + m(7) * t90 + t589 * t373;
t67 = t116 * t155 + (-t264 * t340 - t341 * t422) * t339;
t64 = -t237 * t376 + t373 * t409;
t63 = t539 + t546 + t550 + t552;
t55 = t470 + t473;
t54 = t469 + t474;
t50 = t538 + t545 + t549 + t551 + t553;
t41 = t123 - t531 / 0.2e1;
t40 = t122 - t530 / 0.2e1;
t39 = t165 + t122;
t38 = t165 - t537 / 0.2e1;
t37 = t164 + t123;
t36 = t164 - t536 / 0.2e1;
t35 = t373 * t378 + t376 * t379 + t547 + t564;
t32 = -t340 * t71 - t341 * t72;
t31 = -t340 * t69 - t341 * t70;
t22 = -t132 * t376 + (-t340 * t76 + t341 * t75) * t373;
t21 = -t131 * t376 + (-t340 * t74 + t341 * t73) * t373;
t18 = (-t172 + t409) * t376 + (-t92 * t340 + t91 * t341 + t237) * t373;
t7 = m(7) * t67 + t33 * t562 + t34 * t560;
t6 = t440 * t491;
t5 = t570 + (t520 / 0.2e1 - t521 / 0.2e1 - t18 / 0.2e1) * t376 + (t12 * t558 + t13 * t562 + t64 / 0.2e1) * t373;
t4 = t340 * t399 + t341 * t400 - t594;
t3 = (-t52 / 0.4e1 - t16 / 0.4e1) * t491 + t381 + (t10 / 0.4e1 + t46 / 0.4e1) * t340 + t421 + t593;
t2 = t381 + (t132 / 0.4e1 + t100 / 0.4e1) * t341 + (t131 / 0.4e1 + t99 / 0.4e1) * t340 - t567 / 0.2e1 + t386;
t1 = (-t237 / 0.2e1 + (-t129 / 0.4e1 - t91 / 0.4e1) * t341 + (t130 / 0.4e1 + t92 / 0.4e1) * t340) * t373 + (t172 / 0.2e1 + (-t170 / 0.4e1 - t118 / 0.4e1) * t341 + (-t169 / 0.4e1 + t119 / 0.4e1) * t340) * t376 - t569 / 0.2e1 + t386 + t421;
t8 = [(t205 * t424 / 0.4e1 + t161 * t596 / 0.4e1) * t582 + t50 * qJD(2) + t63 * qJD(3) + t35 * qJD(5) + t68 * qJD(6), qJD(1) * t50 + qJD(3) * t221 + qJD(5) * t54 + qJD(6) * t37, qJD(1) * t63 + qJD(2) * t221 + qJD(5) * t55 + qJD(6) * t39, -t392, t35 * qJD(1) + t54 * qJD(2) + t55 * qJD(3) + t3 * qJD(6) - t478 + (m(7) * (-t160 * t263 + t161 * t265 - t219 * t264 + t220 * t422) + (-t130 / 0.2e1 - t92 / 0.2e1 + m(6) * (-t204 * t361 + t306 * t359) + t341 * t557 + (t563 - t302 / 0.2e1) * t376 + (-t275 / 0.2e1 - t304 / 0.2e1) * t373 - t400) * t341 + (-t91 / 0.2e1 - t129 / 0.2e1 + m(6) * (t205 * t361 - t305 * t359) + t340 * t557 + (-t279 / 0.2e1 + t301 / 0.2e1) * t376 + (t276 / 0.2e1 + t303 / 0.2e1) * t373 - t399) * t340 + t594) * qJD(5), t68 * qJD(1) + t37 * qJD(2) + t39 * qJD(3) + t3 * qJD(5) - t193 * t445 + (t160 * t192 + t161 * t191 - t178 * t235 - t236 * t617) * t525 + ((t572 + t131 / 0.2e1 - t440) * t341 + (-t132 / 0.2e1 - t100 / 0.2e1) * t340) * t446; t222 * qJD(3) - t603 * qJD(5) + t36 * qJD(6) + (-t538 / 0.4e1 - t545 / 0.4e1 - t551 / 0.4e1 - t549 / 0.4e1 - t553 / 0.4e1) * t582 + ((-t159 * t377 + t110 - t156) * t576 + (-t206 * t377 + t144 - t200) * t578) * t583, 0, t443, 0, -t612 + ((-t263 * t374 - t265 * t377) * t576 + t404 * t361 * t579) * t581 + t83 * qJD(6), t36 * qJD(1) + t83 * qJD(5) + (-t191 * t377 + t192 * t374) * t525; -t222 * qJD(2) + t56 * qJD(5) + t38 * qJD(6) + (-t539 / 0.4e1 - t546 / 0.4e1 - t552 / 0.4e1 - t550 / 0.4e1) * t582 + (t468 * t578 + t472 * t576) * t583 * t374, -t443, 0, 0, t613 + ((-t263 * t377 + t265 * t374) * t576 + t403 * t361 * t578) * t581 + t85 * qJD(6), t38 * qJD(1) + t85 * qJD(5) + (t191 * t374 + t192 * t377) * t525; t392, 0, 0, 0, t97 + (t135 * t576 + t203 * t578) * t581 + t78 * qJD(6), t78 * qJD(5) + t153 * t525; t603 * qJD(2) - t56 * qJD(3) + t478 + t4 * qJD(5) + t1 * qJD(6) + (-t547 / 0.4e1 - t564 / 0.4e1) * t582 - t379 * t447 - t378 * t448 + (-t264 * t596 + ((-t278 / 0.2e1 + t563) * t373 + t359 * t424) * t340) * qJD(1), qJD(6) * t84 + t612, qJD(6) * t86 - t613, -qJD(6) * t77 + t97, t4 * qJD(1) + (m(6) * (t186 * t203 + (t585 + t586) * t361 * t359) + m(7) * (t116 * t135 - t263 * t422 - t264 * t265) + (-t586 * t299 + (t588 * t341 + (t300 - t587) * t340) * t341 + t31) * t562 + (t585 * t300 + (t587 * t340 + (-t299 - t588) * t341) * t340 + t32) * t560) * qJD(5) + t7 * qJD(6), t1 * qJD(1) + t7 * qJD(5) + (t21 * t562 + t22 * t560 + m(7) * (t116 * t153 + t142 * t155 - t191 * t264 + t192 * t422 + (-t178 * t340 - t341 * t617) * t339) - t570) * qJD(6) + (t18 / 0.2e1 + (t100 / 0.2e1 - t620 / 0.2e1) * t341 + (t572 + t575) * t340) * t445 + (-t64 / 0.2e1 + t439 * t341 + t438 * t340) * t446 - t388; t332 * t447 / 0.2e1 + t41 * qJD(2) + t40 * qJD(3) + t2 * qJD(5) + t6 * qJD(6) + (-t178 * t472 - t90) * qJD(1) * m(7) - t589 * t448, qJD(1) * t41 - qJD(5) * t84, qJD(1) * t40 - qJD(5) * t86, qJD(5) * t77, t2 * qJD(1) + (((t574 + t92 / 0.2e1) * t376 + (t31 / 0.2e1 - t119 / 0.2e1) * t373 - t438) * t341 + ((t573 + t91 / 0.2e1) * t376 + (-t32 / 0.2e1 - t118 / 0.2e1) * t373 + t439) * t340 + (t108 * t116 + t135 * t142 - t138 * t264 + t139 * t422 - t178 * t265 - t263 * t617 - t67) * m(7)) * qJD(5) + t5 * qJD(6) + t388, t6 * qJD(1) + t5 * qJD(5) + (t376 ^ 2 * t193 / 0.2e1 + m(7) * (t142 * t153 - t178 * t191 + t192 * t617) + (t21 * t558 + t22 * t562 + (-t100 * t340 + t341 * t99) * t555) * t373) * qJD(6);];
Cq  = t8;
