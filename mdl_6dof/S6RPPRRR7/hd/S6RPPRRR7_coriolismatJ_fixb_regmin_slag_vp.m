% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:33:51
% EndTime: 2019-03-09 02:34:06
% DurationCPUTime: 7.34s
% Computational Cost: add. (6889->374), mult. (12900->506), div. (0->0), fcn. (15662->8), ass. (0->292)
t278 = cos(qJ(6));
t263 = qJD(6) * t278;
t273 = sin(pkin(10));
t274 = cos(pkin(10));
t279 = cos(qJ(4));
t451 = sin(qJ(4));
t238 = -t279 * t273 - t274 * t451;
t452 = cos(qJ(5));
t228 = t452 * t238;
t239 = -t273 * t451 + t274 * t279;
t277 = sin(qJ(5));
t406 = t277 * t239;
t470 = -t228 + t406;
t486 = t278 * t470;
t498 = t486 / 0.2e1;
t509 = 0.2e1 * t498;
t510 = t509 * qJD(1);
t522 = t263 + t510;
t415 = t470 ^ 2;
t229 = t452 * t239;
t407 = t277 * t238;
t469 = t229 + t407;
t491 = t469 ^ 2;
t493 = t491 - t415;
t506 = t493 * t278;
t519 = qJD(1) * t506;
t521 = qJD(6) * t509 - t519;
t499 = -t486 / 0.2e1;
t505 = t498 + t499;
t513 = qJD(6) * t505;
t520 = t513 + t519;
t358 = qJD(4) + qJD(5);
t276 = sin(qJ(6));
t507 = t493 * t276;
t518 = qJD(1) * t507;
t485 = t469 * t276;
t500 = t485 / 0.2e1;
t501 = -t485 / 0.2e1;
t504 = t501 + t500;
t517 = qJD(4) * t504;
t516 = qJD(4) * t505;
t515 = qJD(5) * t504;
t514 = qJD(5) * t505;
t511 = t504 * qJD(3);
t508 = 0.2e1 * t499;
t503 = t493 * qJD(1);
t275 = -pkin(1) - qJ(3);
t445 = -pkin(7) + t275;
t240 = t445 * t273;
t241 = t445 * t274;
t300 = -t279 * t240 - t241 * t451;
t150 = t238 * pkin(8) - t300;
t315 = t240 * t451 - t279 * t241;
t295 = -t239 * pkin(8) - t315;
t483 = t452 * t150 + t277 * t295;
t502 = t358 * t483;
t487 = t276 * t470;
t497 = -t487 / 0.2e1;
t496 = t487 / 0.2e1;
t495 = t483 * t276;
t494 = t483 * t278;
t447 = t469 * pkin(5);
t448 = t470 * pkin(9);
t130 = t447 + t448;
t272 = t278 ^ 2;
t477 = t469 * qJD(1);
t484 = t470 * t477;
t271 = t276 ^ 2;
t330 = t271 / 0.2e1 - t272 / 0.2e1;
t79 = t330 * t469;
t73 = t79 * qJD(6);
t492 = t272 * t484 - t73;
t458 = -t469 / 0.2e1;
t457 = t469 / 0.2e1;
t489 = -t470 / 0.2e1;
t488 = t470 / 0.2e1;
t471 = t452 * t295;
t463 = -t471 / 0.2e1;
t449 = pkin(9) * t469;
t382 = qJD(5) * t469;
t387 = qJD(4) * t469;
t482 = t382 + t387;
t383 = qJD(5) * t470;
t386 = qJD(4) * t470;
t481 = -t383 - t386;
t408 = t277 * t150;
t61 = t471 - t408;
t411 = t276 * t278;
t472 = t358 * t411;
t65 = -qJD(1) * t79 + t472;
t480 = qJD(3) * t470;
t321 = t229 / 0.2e1;
t468 = t321 + t407 / 0.2e1;
t479 = qJD(6) * t468;
t478 = t468 * qJD(1);
t476 = t470 * qJD(1);
t475 = -0.2e1 * t469;
t251 = t272 - t271;
t474 = t251 * t358;
t402 = t278 * t469;
t199 = -t402 / 0.2e1;
t323 = 0.2e1 * t199;
t467 = qJD(6) * t323;
t392 = 0.2e1 * t501;
t466 = qJD(6) * t392;
t344 = qJD(1) * t411;
t465 = t344 * t491 + t358 * t79;
t322 = t228 / 0.2e1;
t356 = t452 * pkin(4);
t258 = -t356 - pkin(5);
t456 = -t258 / 0.2e1;
t455 = -t276 / 0.2e1;
t454 = -t278 / 0.2e1;
t453 = t278 / 0.2e1;
t450 = pkin(4) * t239;
t446 = t277 * pkin(4);
t283 = -t457 * t470 + t469 * t488;
t22 = t283 * t278;
t444 = t22 * qJD(4);
t38 = t283 * t276;
t443 = t38 * qJD(4);
t253 = t273 * pkin(3) + qJ(2);
t220 = -pkin(4) * t238 + t253;
t319 = pkin(5) * t470 - t449;
t286 = t220 + t319;
t27 = -t278 * t286 + t495;
t3 = (-t27 + t495) * t469 + t130 * t486;
t440 = t3 * qJD(1);
t28 = t276 * t286 + t494;
t4 = (-t28 + t494) * t469 - t130 * t487;
t439 = t4 * qJD(1);
t436 = t276 * t61;
t435 = t278 * t61;
t384 = qJD(4) * t278;
t332 = 0.2e1 * t458;
t96 = t332 * t278;
t434 = -t96 * qJD(5) + t384 * t469;
t13 = t27 * t470 + t485 * t61;
t433 = qJD(1) * t13;
t14 = -t28 * t470 - t402 * t61;
t432 = qJD(1) * t14;
t431 = qJD(1) * t22;
t282 = 0.1e1 / 0.2e1 + t470 * t488 + t491 / 0.2e1;
t31 = t282 * t276;
t429 = qJD(1) * t31;
t32 = t282 * t278;
t428 = qJD(1) * t32;
t427 = qJD(1) * t38;
t309 = t415 + t491;
t40 = t309 * t276;
t425 = qJD(1) * t40;
t42 = t309 * t278;
t423 = qJD(1) * t42;
t46 = -t220 * t469 - t450 * t470;
t420 = qJD(1) * t46;
t47 = t220 * t470 - t450 * t469;
t419 = qJD(1) * t47;
t72 = (t489 + t488) * t411;
t418 = qJD(1) * t72;
t24 = t463 + t471 / 0.2e1;
t414 = t24 * qJD(1);
t399 = t485 * qJD(1);
t398 = t487 * qJD(1);
t86 = 0.2e1 * t489 * t276;
t76 = t86 * qJD(1);
t397 = t504 * qJD(1);
t93 = t332 * t276;
t396 = t93 * qJD(1);
t95 = (t457 + t458) * t278;
t395 = t95 * qJD(1);
t394 = t96 * qJD(1);
t267 = t273 ^ 2;
t268 = t274 ^ 2;
t250 = t267 + t268;
t113 = t251 * t491;
t391 = qJD(1) * t113;
t237 = t250 * t275;
t390 = qJD(1) * t237;
t389 = qJD(2) * t470;
t388 = qJD(3) * t469;
t385 = qJD(4) * t276;
t381 = qJD(5) * t220;
t380 = qJD(5) * t276;
t379 = qJD(5) * t278;
t378 = qJD(6) * t276;
t376 = t508 * qJD(1);
t138 = 0.2e1 * t321 + t407;
t374 = t138 * qJD(1);
t163 = t238 ^ 2 - t239 ^ 2;
t373 = t163 * qJD(1);
t208 = t321 - t229 / 0.2e1;
t370 = t208 * qJD(1);
t369 = t208 * qJD(5);
t364 = t238 * qJD(1);
t231 = t238 * qJD(4);
t363 = t239 * qJD(1);
t234 = t239 * qJD(4);
t331 = -t267 / 0.2e1 - t268 / 0.2e1;
t243 = -0.1e1 / 0.2e1 + t331;
t362 = t243 * qJD(1);
t361 = t250 * qJD(1);
t360 = t273 * qJD(1);
t359 = t274 * qJD(1);
t355 = qJD(4) * t446;
t354 = qJD(5) * t446;
t349 = t220 * t476;
t348 = t276 * t476;
t347 = t278 * t476;
t346 = t220 * t477;
t345 = t272 * t477;
t343 = qJD(6) * t470 * t469;
t340 = t238 * t363;
t252 = t276 * t263;
t339 = t278 * t477;
t336 = t470 * t455;
t329 = t452 * qJD(4);
t328 = t452 * qJD(5);
t327 = -qJD(1) * t253 - qJD(3);
t326 = -t356 / 0.2e1;
t324 = t469 * t344;
t320 = t358 * t446;
t317 = -0.2e1 * t324;
t316 = 0.2e1 * t324;
t293 = t469 * t483;
t69 = t450 + t130;
t1 = -t27 * t469 + t276 * t293 + t486 * t69;
t312 = t1 * qJD(1) - t38 * qJD(2);
t2 = t278 * t293 - t28 * t469 - t487 * t69;
t311 = t2 * qJD(1) - t22 * qJD(2);
t257 = pkin(9) + t446;
t281 = t257 * t458 + t470 * t456 + (t277 * t457 + t452 * t489) * pkin(4);
t280 = t449 / 0.2e1 + pkin(5) * t489 + t281;
t5 = t276 * t280;
t310 = qJD(1) * t5 - qJD(2) * t505;
t307 = -t257 * t469 - t258 * t470;
t206 = t322 - t228 / 0.2e1;
t306 = qJD(2) * t206;
t305 = t469 * (-qJD(6) - t476);
t304 = qJD(5) * t138 + t387;
t302 = t448 / 0.2e1 + t447 / 0.2e1;
t301 = t257 * t488 + t469 * t456;
t299 = t469 * t476 + t479;
t298 = t484 + t479;
t297 = t326 + pkin(5) / 0.2e1 + t456;
t296 = t481 * t469;
t294 = t130 / 0.2e1 + t302;
t292 = t69 / 0.2e1 + t301;
t15 = t294 * t276;
t217 = t297 * t278;
t290 = pkin(5) * t379 - qJD(1) * t15 + qJD(4) * t217;
t17 = t294 * t278;
t216 = t297 * t276;
t289 = pkin(5) * t380 + qJD(1) * t17 + qJD(4) * t216;
t105 = (t458 + t468) * t278;
t9 = t276 * t292;
t288 = -qJD(1) * t9 + qJD(2) * t105 - t258 * t384;
t11 = t278 * t292;
t287 = qJD(1) * t11 + qJD(2) * t504 - t258 * t385;
t8 = t278 * t280;
t83 = t496 + t497;
t284 = -qJD(1) * t8 + qJD(2) * t83 - t276 * t355;
t270 = qJ(2) * qJD(2);
t269 = qJD(1) * qJ(2);
t249 = t276 * t354;
t246 = t251 * qJD(6);
t242 = 0.1e1 / 0.2e1 + t331;
t219 = pkin(5) * t454 + t258 * t453 + t278 * t326;
t218 = pkin(5) * t455 + (t258 / 0.2e1 + t326) * t276;
t164 = t252 * t475;
t137 = 0.2e1 * t322 - t406;
t132 = t317 + t474;
t131 = t316 - t474;
t112 = t358 * t468;
t89 = 0.2e1 * t500;
t88 = 0.2e1 * t496;
t87 = t497 - t336;
t78 = t95 * qJD(5);
t75 = t87 * qJD(6);
t74 = t86 * qJD(6);
t71 = t508 * t276;
t70 = -t378 + t76;
t34 = t199 * t469 + t470 * t499 + t453;
t33 = t469 * t500 + t470 * t496 + t455;
t30 = t271 * t488 + t272 * t489 + t330 * t470;
t25 = t408 + 0.2e1 * t463;
t18 = t130 * t453 - t278 * t302 - t436;
t16 = t130 * t455 + t276 * t302 - t435;
t12 = -t436 / 0.2e1 + t61 * t455 + t69 * t453 - t301 * t278;
t10 = -t435 / 0.2e1 + t61 * t454 + t69 * t455 + t301 * t276;
t7 = pkin(5) * t498 + t281 * t278 + t449 * t454 + t495;
t6 = -pkin(5) * t336 + pkin(9) * t501 + t281 * t276 - t494;
t19 = [0, 0, 0, 0, qJD(2), t270, qJD(2) * t273, qJD(2) * t274, t250 * qJD(3), -qJD(3) * t237 + t270, t238 * t234, t163 * qJD(4), 0, 0, 0, -qJD(2) * t238 + t234 * t253, qJD(2) * t239 + t231 * t253, t296, -t358 * t493, 0, 0, 0, -qJD(4) * t46 + t381 * t469 + t389, qJD(2) * t469 - qJD(4) * t47 - t381 * t470, -t252 * t491 + t272 * t296, -0.2e1 * t276 * t402 * t481 - qJD(6) * t113, -t276 * t343 + t358 * t506, -t278 * t343 - t358 * t507, t482 * t470, qJD(3) * t40 + qJD(4) * t1 + qJD(5) * t3 + qJD(6) * t14 + t278 * t389, qJD(3) * t42 + qJD(4) * t2 + qJD(5) * t4 + qJD(6) * t13 - t276 * t389; 0, 0, 0, 0, qJD(1), t269, t360, t359, 0, qJD(3) * t242 + t269, 0, 0, 0, 0, 0, -t364, t363, 0, 0, 0, 0, 0, t476, t477, 0, 0, 0, 0, 0, qJD(6) * t34 + t347 - t443, qJD(6) * t33 - t348 - t444; 0, 0, 0, 0, 0, 0, 0, 0, t361, qJD(2) * t242 - t390, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, 0, 0, 0, 0, 0, 0, t75 - t78 + t425, t423 + t513 + t515 + t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, t373, t231, -t234, 0, qJD(4) * t300 + t253 * t363, qJD(4) * t315 + t253 * t364, -t484, -t503, t481, -t304, 0, -t420 - t502, -qJD(4) * t61 + qJD(5) * t25 - t419, qJD(5) * t71 - t73 - (t276 * t384 + t345) * t470, t30 * qJD(5) + t164 - (qJD(4) * t251 + t317) * t470, qJD(5) * t89 + t385 * t469 + t520, t75 - t518 + t434, t299 (t276 * t307 - t494) * qJD(4) + t6 * qJD(5) + t12 * qJD(6) + t312, t511 + (t278 * t307 + t495) * qJD(4) + t7 * qJD(5) + t10 * qJD(6) + t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t484, -t503, t481, -qJD(4) * t138 - t382, 0, qJD(3) * t208 + t346 - t502, qJD(4) * t25 - qJD(5) * t61 - t349, qJD(4) * t71 - t73 + (-t276 * t379 - t345) * t470, t30 * qJD(4) + t164 + (-qJD(5) * t251 + t316) * t470, qJD(4) * t89 + t380 * t469 + t520, -qJD(4) * t96 + t379 * t469 - t518, t298, t440 - t95 * qJD(3) + t6 * qJD(4) + (t276 * t319 - t494) * qJD(5) + t18 * qJD(6), t439 + t511 + t7 * qJD(4) + (t278 * t319 + t495) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t465, t472 * t475 - t391, t276 * t305 + t514 + t516, qJD(4) * t87 + t278 * t305, t112, qJD(2) * t34 + qJD(3) * t87 + qJD(4) * t12 + qJD(5) * t18 - qJD(6) * t28 + t432, qJD(2) * t33 + qJD(3) * t505 + qJD(4) * t10 + qJD(5) * t16 + qJD(6) * t27 + t433; 0, 0, 0, 0, -qJD(1), -t269, -t360, -t359, 0, qJD(3) * t243 - t269, 0, 0, 0, 0, 0, t364, -t363, 0, 0, 0, 0, 0, -t476, -t477, 0, 0, 0, 0, 0, -qJD(6) * t32 - t347 - t443, qJD(6) * t31 + t348 - t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t234, 0, 0, 0, 0, 0, qJD(5) * t137 - t386, -t482, 0, 0, 0, 0, 0, qJD(5) * t508 - t384 * t470 - t427 + t466, qJD(5) * t88 + t385 * t470 - t431 + t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t137 - t383, -t482, 0, 0, 0, 0, 0, qJD(4) * t508 - t379 * t470 + t466, qJD(4) * t88 + t380 * t470 + t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470 * t263 + t358 * t392 - t428, t323 * t358 + t470 * t378 + t429; 0, 0, 0, 0, 0, 0, 0, 0, -t361, -qJD(2) * t243 + t390, 0, 0, 0, 0, 0, t234, t231, 0, 0, 0, 0, 0, t304, t481, 0, 0, 0, 0, 0, t74 - t425 + t434, -qJD(4) * t485 + qJD(5) * t93 + qJD(6) * t508 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t364, 0, 0, 0, 0, 0, t477, -t476, 0, 0, 0, 0, 0, t339, -t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, -t476, 0, 0, 0, 0, 0, -t394, t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, -t263 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, -t373, 0, 0, 0, t327 * t239, t327 * t238, t484, t503, 0, -t369, 0, -t388 + t420, qJD(5) * t24 + t419 + t480, qJD(5) * t72 + t492, -t316 * t470 + t164, t515 + t521, t74 - t78 + t518, -t299, qJD(5) * t5 - qJD(6) * t11 - t278 * t388 - t312, qJD(3) * t485 + qJD(5) * t8 + qJD(6) * t9 - t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206 * qJD(5), 0, 0, 0, 0, 0, 0, -qJD(6) * t504 + t427 - t514, -qJD(5) * t83 - qJD(6) * t105 + t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t363, -t364, 0, 0, 0, 0, 0, -t477, t476, 0, 0, 0, 0, 0, -t339, t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, -pkin(4) * t328, t252, t246, 0, 0, 0, t258 * t378 - t278 * t354, t258 * t263 + t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, 0, -t320 + t306, t414 + (-t329 - t328) * pkin(4), t252 + t418, t246, t397, -t395, 0, qJD(6) * t218 - t278 * t320 + t310, qJD(6) * t219 + t249 - t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t132, t522, t70, -t478, qJD(5) * t218 - t257 * t263 - t287, qJD(5) * t219 + t257 * t378 - t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, t503, 0, t208 * qJD(4), 0, -qJD(3) * t138 - t346, -qJD(4) * t24 + t349 + t480, -qJD(4) * t72 + t492, t317 * t470 + t164, -t517 + t521, qJD(4) * t95 - qJD(6) * t487 + t518, -t298, qJD(3) * t96 - qJD(4) * t5 - qJD(6) * t17 - t440, -qJD(3) * t93 - qJD(4) * t8 + qJD(6) * t15 - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206 * qJD(4), 0, 0, 0, 0, 0, 0, t516, qJD(4) * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374, t476, 0, 0, 0, 0, 0, t394, -t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, 0, -t306 + t355, pkin(4) * t329 - t414, t252 - t418, t246, -t397, t395, 0, -qJD(6) * t216 + t278 * t355 - t310, -qJD(6) * t217 + t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t246, 0, 0, 0, -pkin(5) * t378, -pkin(5) * t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t132, t522, -t378 - t398, -t478, -pkin(9) * t263 - t289, pkin(9) * t378 - t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t465, 0.2e1 * t469 * t472 + t391, t276 * t484 - t358 * t509, -qJD(4) * t86 + qJD(5) * t487 + t278 * t484, t112, qJD(2) * t32 - qJD(3) * t86 + qJD(4) * t11 + qJD(5) * t17 - t432, -qJD(2) * t31 - qJD(3) * t508 - qJD(4) * t9 - qJD(5) * t15 - t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428 + t517, qJD(4) * t105 - t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, -t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, t131, -t510, -t76, t478, qJD(5) * t216 + t287, qJD(5) * t217 + t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, t131, -t510, t398, t478, t289, t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t19;
