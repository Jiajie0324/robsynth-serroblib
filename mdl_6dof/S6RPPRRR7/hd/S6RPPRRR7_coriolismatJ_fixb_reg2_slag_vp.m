% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:33:56
% EndTime: 2019-03-09 02:34:17
% DurationCPUTime: 16.93s
% Computational Cost: add. (20402->564), mult. (35118->734), div. (0->0), fcn. (41958->8), ass. (0->442)
t599 = qJD(4) + qJD(5);
t474 = cos(qJ(6));
t461 = qJD(6) * t474;
t470 = sin(pkin(10));
t471 = cos(pkin(10));
t744 = sin(qJ(4));
t746 = cos(qJ(4));
t435 = -t470 * t746 - t471 * t744;
t745 = cos(qJ(5));
t422 = t745 * t435;
t436 = -t470 * t744 + t471 * t746;
t473 = sin(qJ(5));
t685 = t473 * t436;
t778 = -t422 + t685;
t802 = t474 * t778;
t824 = t802 / 0.2e1;
t837 = 0.2e1 * t824;
t838 = t837 * qJD(1);
t852 = t461 + t838;
t698 = t778 ^ 2;
t423 = t745 * t436;
t686 = t473 * t435;
t777 = t423 + t686;
t811 = t777 ^ 2;
t814 = t811 - t698;
t832 = t814 * t474;
t848 = qJD(1) * t832;
t851 = qJD(6) * t837 - t848;
t825 = -t802 / 0.2e1;
t831 = t824 + t825;
t842 = qJD(6) * t831;
t850 = t842 + t848;
t734 = -pkin(1) - qJ(3);
t597 = pkin(7) - t734;
t529 = t597 * t744;
t530 = t597 * t746;
t401 = -t470 * t529 + t471 * t530;
t305 = -t436 * pkin(8) - t401;
t402 = -t470 * t530 - t471 * t529;
t306 = t435 * pkin(8) + t402;
t98 = -t473 * t305 - t745 * t306;
t849 = t599 * t98;
t472 = sin(qJ(6));
t833 = t814 * t472;
t847 = qJD(1) * t833;
t799 = t777 * t472;
t826 = t799 / 0.2e1;
t827 = -t799 / 0.2e1;
t830 = t827 + t826;
t846 = qJD(4) * t830;
t845 = qJD(4) * t831;
t844 = qJD(5) * t830;
t843 = qJD(5) * t831;
t835 = 0.2e1 * t827;
t841 = qJD(6) * t835;
t839 = t830 * qJD(3);
t836 = 0.2e1 * t825;
t592 = t745 * t778;
t696 = t777 * t473;
t730 = qJD(4) * pkin(4);
t834 = t730 * (-t696 + t592);
t809 = t777 / 0.2e1;
t810 = -t777 / 0.2e1;
t813 = (t809 + t810) * t474;
t829 = qJD(4) * t813;
t828 = t814 * qJD(1);
t795 = t98 * t474;
t767 = t795 / 0.2e1;
t803 = t472 * t778;
t823 = -t803 / 0.2e1;
t822 = t803 / 0.2e1;
t469 = t474 ^ 2;
t804 = t469 * t778;
t365 = -t804 / 0.2e1;
t366 = t804 / 0.2e1;
t184 = t745 * t305 - t473 * t306;
t709 = t184 * t98;
t807 = t778 / 0.2e1;
t821 = t184 * t807;
t468 = t472 ^ 2;
t789 = t777 * qJD(1);
t797 = t778 * t789;
t820 = t468 * t797;
t819 = t469 * t797;
t818 = t472 * t184;
t817 = t474 * t184;
t753 = t468 / 0.2e1;
t557 = t469 / 0.2e1 + t753;
t816 = t777 * t557;
t739 = t778 * pkin(9);
t805 = t777 * pkin(5);
t268 = t805 + t739;
t521 = t184 * t778 - t777 * t98;
t812 = t599 * t184;
t808 = -t778 / 0.2e1;
t806 = pkin(9) * t777;
t740 = t778 * pkin(5);
t742 = t98 * pkin(5);
t449 = pkin(3) * t470 + qJ(2);
t414 = -pkin(4) * t435 + t449;
t542 = -t806 + t740;
t481 = t414 + t542;
t796 = t98 * t472;
t101 = -t474 * t481 - t796;
t102 = t472 * t481 - t795;
t524 = t101 * t474 - t102 * t472;
t801 = t524 * t778;
t672 = t468 + t469;
t800 = t672 * t777;
t701 = t777 * t778;
t595 = t745 * pkin(4);
t454 = -t595 - pkin(5);
t697 = t778 * t454;
t649 = qJD(5) * t777;
t655 = qJD(4) * t777;
t794 = t649 + t655;
t650 = qJD(5) * t778;
t654 = qJD(4) * t778;
t793 = -t650 - t654;
t752 = -t469 / 0.2e1;
t213 = (t753 + t752) * t777;
t688 = t472 * t474;
t780 = t599 * t688;
t189 = -t213 * qJD(1) + t780;
t792 = qJD(3) * t778;
t545 = t423 / 0.2e1;
t776 = t545 + t686 / 0.2e1;
t791 = qJD(6) * t776;
t790 = t776 * qJD(1);
t788 = t778 * qJD(1);
t736 = t436 * pkin(4);
t196 = t736 + t268;
t692 = t472 * t196;
t110 = t817 + t692;
t716 = t110 * t474;
t683 = t474 * t196;
t109 = t683 - t818;
t719 = t109 * t472;
t508 = t716 / 0.2e1 - t719 / 0.2e1;
t787 = t508 * pkin(9) + t742 / 0.2e1;
t785 = -0.2e1 * t777;
t784 = t98 / 0.2e1;
t447 = t469 - t468;
t781 = t447 * t599;
t464 = t470 ^ 2;
t465 = t471 ^ 2;
t446 = t464 + t465;
t720 = t102 * t474;
t721 = t101 * t472;
t510 = t720 / 0.2e1 + t721 / 0.2e1;
t200 = t836 * t472;
t631 = t213 * qJD(6);
t775 = -t200 * qJD(5) + t631;
t774 = -t200 * qJD(4) + t631;
t201 = (t808 + t807) * t688;
t773 = -qJD(5) * t201 + t631;
t772 = qJD(4) * t201 + t631;
t448 = t472 * t461;
t633 = t201 * qJD(1);
t771 = t633 - t448;
t770 = t633 + t448;
t583 = qJD(1) * t688;
t99 = t213 * t599 + t583 * t811;
t433 = t435 ^ 2;
t768 = t436 ^ 2;
t766 = -t184 / 0.2e1;
t765 = -t98 / 0.2e1;
t546 = t422 / 0.2e1;
t755 = -t454 / 0.2e1;
t754 = t454 / 0.2e1;
t750 = -t472 / 0.2e1;
t749 = t473 / 0.2e1;
t748 = -t474 / 0.2e1;
t747 = t474 / 0.2e1;
t735 = t473 * pkin(4);
t505 = t777 * t784 - t821;
t23 = t765 * t777 + t505 + t821;
t733 = t23 * qJD(4);
t731 = pkin(4) * qJD(5);
t717 = t110 * t472;
t718 = t109 * t474;
t9 = (t717 + t718) * t777 + t801;
t729 = t9 * qJD(1);
t706 = t184 * t777;
t18 = -t706 - (t720 + t721) * t778;
t728 = qJD(1) * t18;
t727 = qJD(1) * t524;
t54 = t101 * t778 + t184 * t799;
t726 = qJD(1) * t54;
t678 = t474 * t777;
t55 = -t102 * t778 - t184 * t678;
t725 = qJD(1) * t55;
t68 = t778 * t98 - t706;
t723 = qJD(1) * t68;
t691 = t472 * t268;
t121 = t691 + t817;
t713 = t121 * t472;
t682 = t474 * t268;
t120 = t682 - t818;
t714 = t120 * t474;
t10 = (t713 + t714) * t777 + t801;
t722 = t10 * qJD(1);
t715 = t120 * t472;
t712 = t121 * t474;
t16 = (-t101 - t796) * t777 + (t120 + t818) * t778;
t711 = t16 * qJD(1);
t17 = (-t102 - t795) * t777 + (-t121 + t817) * t778;
t710 = t17 * qJD(1);
t453 = pkin(9) + t735;
t541 = t557 * t778;
t483 = -t453 * t541 + t754 * t777;
t509 = t718 / 0.2e1 + t717 / 0.2e1;
t26 = t483 - t509;
t703 = t26 * qJD(1);
t487 = -pkin(9) * t541 - t805 / 0.2e1;
t507 = t714 / 0.2e1 + t713 / 0.2e1;
t28 = t487 - t507;
t702 = t28 * qJD(1);
t569 = t777 * t809;
t484 = -t541 * t778 - t569;
t78 = t484 - t557;
t676 = t78 * qJD(1);
t559 = 0.2e1 * t810;
t230 = t559 * t474;
t652 = qJD(4) * t474;
t673 = -t230 * qJD(5) + t652 * t777;
t382 = t468 * t778;
t352 = -t382 / 0.2e1;
t567 = t778 * t753;
t537 = t366 + t567;
t122 = t365 + t352 + t537;
t671 = qJD(1) * t122;
t493 = 0.1e1 / 0.2e1 + t778 * t807 - t777 * t810;
t128 = t493 * t472;
t670 = qJD(1) * t128;
t144 = t698 + t811;
t137 = t144 * t472;
t668 = qJD(1) * t137;
t139 = t144 * t474;
t666 = qJD(1) * t139;
t164 = -t414 * t777 - t736 * t778;
t664 = qJD(1) * t164;
t165 = t414 * t778 - t736 * t777;
t663 = qJD(1) * t165;
t195 = t401 * t436 + t402 * t435;
t662 = qJD(1) * t195;
t661 = qJD(1) * t414;
t434 = t446 * t734;
t660 = qJD(1) * t434;
t659 = qJD(1) * t449;
t658 = qJD(2) * t778;
t657 = qJD(3) * t777;
t653 = qJD(4) * t472;
t648 = qJD(5) * t414;
t647 = qJD(5) * t472;
t646 = qJD(5) * t474;
t645 = qJD(6) * t472;
t353 = t382 / 0.2e1;
t125 = t366 + t353 + t537;
t644 = t125 * qJD(1);
t129 = t493 * t474;
t643 = t129 * qJD(1);
t504 = t778 * t808 - t569;
t141 = -0.1e1 / 0.2e1 + t504;
t641 = t141 * qJD(1);
t640 = t144 * qJD(1);
t495 = t745 * t810 - t749 * t778;
t190 = (-t436 / 0.2e1 + t495) * pkin(4);
t636 = t190 * qJD(1);
t630 = t799 * qJD(1);
t629 = t803 * qJD(1);
t220 = 0.2e1 * t808 * t472;
t208 = t220 * qJD(1);
t628 = t830 * qJD(1);
t227 = t559 * t472;
t627 = t227 * qJD(1);
t626 = t813 * qJD(1);
t625 = t230 * qJD(1);
t622 = t836 * qJD(1);
t247 = t382 + t804;
t621 = t247 * qJD(1);
t248 = t447 * t811;
t620 = t248 * qJD(1);
t619 = t800 * qJD(1);
t544 = -t433 / 0.2e1 - t768 / 0.2e1;
t283 = -0.1e1 / 0.2e1 + t544;
t618 = t283 * qJD(1);
t290 = 0.2e1 * t545 + t686;
t616 = t290 * qJD(1);
t325 = t433 - t768;
t615 = t325 * qJD(1);
t392 = t545 - t423 / 0.2e1;
t612 = t392 * qJD(1);
t611 = t392 * qJD(5);
t403 = t433 + t768;
t606 = t403 * qJD(1);
t605 = t435 * qJD(1);
t427 = t435 * qJD(4);
t604 = t436 * qJD(1);
t430 = t436 * qJD(4);
t558 = -t464 / 0.2e1 - t465 / 0.2e1;
t439 = -0.1e1 / 0.2e1 + t558;
t603 = t439 * qJD(1);
t602 = t446 * qJD(1);
t601 = t470 * qJD(1);
t600 = t471 * qJD(1);
t4 = t508 * t778 + t510 * t777 + t505;
t506 = t712 / 0.2e1 - t715 / 0.2e1;
t6 = (t766 + t506) * t778 - (t765 - t510) * t777;
t598 = t4 * qJD(4) + t6 * qJD(5);
t594 = t473 * t730;
t593 = t473 * t731;
t591 = t745 * t468;
t590 = t745 * t469;
t589 = t414 * t788;
t588 = t472 * t788;
t587 = t474 * t788;
t586 = t414 * t789;
t585 = t468 * t789;
t584 = t469 * t789;
t582 = t472 * t652;
t581 = t472 * t646;
t580 = qJD(6) * t701;
t579 = t777 * t788;
t576 = t435 * t604;
t575 = t435 * t430;
t574 = t474 * t789;
t378 = t777 * t747;
t564 = t778 * t750;
t560 = t766 + t184 / 0.2e1;
t556 = t745 * qJD(4);
t555 = t745 * qJD(5);
t553 = -qJD(3) - t659;
t552 = -t595 / 0.2e1;
t551 = t811 * t448;
t549 = t777 * t583;
t548 = t365 + t567;
t543 = t599 * t735;
t540 = -0.2e1 * t549;
t539 = 0.2e1 * t549;
t7 = -t101 * t109 + t102 * t110 + t709;
t534 = t7 * qJD(1) + t4 * qJD(2);
t8 = -t101 * t120 + t102 * t121 + t709;
t533 = t8 * qJD(1) + t6 * qJD(2);
t82 = t778 * t800 - t701;
t532 = t4 * qJD(1) + t82 * qJD(2);
t81 = (0.1e1 - t672) * t701;
t531 = t6 * qJD(1) - t81 * qJD(2);
t528 = t778 * t549;
t15 = -t102 * t777 - t110 * t778 + t474 * t521;
t527 = t15 * qJD(1);
t37 = t414 * t736;
t526 = t37 * qJD(1) + t23 * qJD(2);
t523 = t716 - t719;
t522 = t712 - t715;
t519 = -t453 * t777 - t697;
t14 = -t101 * t777 + t109 * t778 + t472 * t521;
t518 = t14 * qJD(1);
t517 = t23 * qJD(1);
t480 = t453 * t810 - t697 / 0.2e1 + (-t592 / 0.2e1 + t696 / 0.2e1) * pkin(4);
t478 = t806 / 0.2e1 + pkin(5) * t808 + t480;
t33 = t767 - t795 / 0.2e1 + t478 * t472;
t516 = t33 * qJD(1) - qJD(2) * t831;
t390 = t546 - t422 / 0.2e1;
t515 = t390 * qJD(2);
t514 = t777 * (-qJD(6) - t788);
t513 = qJD(5) * t290 + t655;
t511 = t739 / 0.2e1 + t805 / 0.2e1;
t502 = t453 * t807 + t755 * t777;
t501 = t579 + t791;
t500 = t797 + t791;
t499 = t552 + pkin(5) / 0.2e1 + t755;
t498 = t794 * t778;
t497 = t793 * t777;
t496 = t268 / 0.2e1 + t511;
t494 = t591 + t590;
t475 = t506 * t453 + (-t184 * t749 + t510 * t745) * pkin(4) - t98 * t754;
t2 = t475 - t787;
t386 = (t453 * t494 + t454 * t473) * pkin(4);
t476 = (-t777 * t749 + (t590 / 0.2e1 + t591 / 0.2e1) * t778) * pkin(4) + t453 * t816 + t778 * t754;
t57 = t740 / 0.2e1 - t557 * t806 + t476;
t492 = t2 * qJD(1) + t57 * qJD(2) + t386 * qJD(4);
t491 = t196 / 0.2e1 + t502;
t13 = (t121 / 0.2e1 - t110 / 0.2e1) * t474 + (-t120 / 0.2e1 + t109 / 0.2e1) * t472;
t432 = t494 * pkin(4);
t490 = -qJD(1) * t13 - qJD(4) * t432;
t410 = t499 * t472;
t60 = t496 * t474;
t489 = pkin(5) * t647 + t60 * qJD(1) + t410 * qJD(4);
t411 = t499 * t474;
t58 = t496 * t472;
t488 = pkin(5) * t646 - t58 * qJD(1) + t411 * qJD(4);
t52 = t472 * t560 - t474 * t491;
t486 = -t52 * qJD(1) + qJD(2) * t830 - t454 * t653;
t50 = t472 * t491 + t474 * t560;
t485 = -t50 * qJD(1) + qJD(2) * t813 - t454 * t652;
t217 = t822 + t823;
t36 = (t765 + t784) * t472 + t478 * t474;
t482 = -qJD(1) * t36 + qJD(2) * t217 - t472 * t594;
t467 = qJ(2) * qJD(2);
t466 = qJD(1) * qJ(2);
t445 = t472 * t593;
t442 = t447 * qJD(6);
t438 = 0.1e1 / 0.2e1 + t558;
t424 = t432 * qJD(5);
t413 = pkin(5) * t748 + t454 * t747 + t474 * t552;
t412 = pkin(5) * t750 + (t552 + t754) * t472;
t326 = t448 * t785;
t289 = 0.2e1 * t546 - t685;
t282 = 0.1e1 / 0.2e1 + t544;
t281 = t540 + t781;
t280 = t539 - t781;
t246 = t599 * t776;
t243 = -t378 - t678 / 0.2e1;
t242 = -0.2e1 * t378;
t223 = 0.2e1 * t826;
t222 = 0.2e1 * t822;
t221 = t823 - t564;
t210 = t813 * qJD(5);
t207 = t221 * qJD(6);
t206 = t220 * qJD(6);
t197 = t208 - t645;
t191 = t736 / 0.2e1 + t495 * pkin(4);
t140 = 0.1e1 / 0.2e1 + t504;
t131 = -t378 * t777 + t778 * t825 + t747;
t130 = -t777 * t827 + t778 * t822 + t750;
t127 = t468 * t809 - t752 * t777 + t816;
t124 = t366 + t352 + t548;
t123 = t365 + t353 + t548;
t77 = t484 + t557;
t61 = -t818 + t682 / 0.2e1 - t511 * t474;
t59 = -t817 - t691 / 0.2e1 + t511 * t472;
t56 = -t740 / 0.2e1 + t476 + t816 * pkin(9);
t53 = -t818 + t683 / 0.2e1 - t502 * t474;
t51 = -t817 - t692 / 0.2e1 + t502 * t472;
t35 = pkin(5) * t824 + t480 * t474 + t748 * t806 - t796;
t34 = -pkin(5) * t564 + pkin(9) * t827 + t480 * t472 + 0.2e1 * t767;
t29 = t487 + t507;
t27 = t483 + t509;
t12 = t506 + t508;
t1 = t475 + t787;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t467, 0, 0, 0, 0, 0, 0, qJD(2) * t470, qJD(2) * t471, t446 * qJD(3), -qJD(3) * t434 + t467, t575, t325 * qJD(4), 0, -t575, 0, 0, -qJD(2) * t435 + t430 * t449, qJD(2) * t436 + t427 * t449, qJD(3) * t403, qJD(2) * t449 + qJD(3) * t195, t497, -t599 * t814, 0, t498, 0, 0, -qJD(4) * t164 + t648 * t777 + t658, qJD(2) * t777 - qJD(4) * t165 - t648 * t778, qJD(3) * t144, qJD(2) * t414 + qJD(3) * t68 + qJD(4) * t37, t469 * t497 - t551, -0.2e1 * t472 * t678 * t793 - t248 * qJD(6), -t472 * t580 + t599 * t832, t468 * t497 + t551, -t474 * t580 - t599 * t833, t498, t137 * qJD(3) + t14 * qJD(4) + t16 * qJD(5) + t55 * qJD(6) + t474 * t658, qJD(3) * t139 + qJD(4) * t15 + qJD(5) * t17 + qJD(6) * t54 - t472 * t658, -qJD(2) * t800 - qJD(4) * t9 - qJD(5) * t10, -qJD(2) * t524 + qJD(3) * t18 + qJD(4) * t7 + qJD(5) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t466, 0, 0, 0, 0, 0, 0, t601, t600, 0, qJD(3) * t438 + t466, 0, 0, 0, 0, 0, 0, -t605, t604, 0, qJD(3) * t282 + t659, 0, 0, 0, 0, 0, 0, t788, t789, 0, qJD(3) * t140 + t661 + t733, 0, 0, 0, 0, 0, 0, t131 * qJD(6) + t587, qJD(6) * t130 - t588, -t619, qJD(3) * t77 + t598 - t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, qJD(2) * t438 - t660, 0, 0, 0, 0, 0, 0, 0, 0, t606, qJD(2) * t282 + t662, 0, 0, 0, 0, 0, 0, t611, 0, t640, qJD(2) * t140 + qJD(4) * t191 + t723, 0, 0, 0, 0, 0, 0, t207 - t210 + t668, t666 + t842 + t844 + t846, t124 * qJD(5), qJD(2) * t77 + qJD(4) * t27 + qJD(5) * t29 + t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t576, t615, t427, -t576, -t430, 0, -qJD(4) * t402 + t449 * t604, qJD(4) * t401 + t449 * t605, 0, 0, -t797, -t828, t793, t579, -t513, 0, -t664 + t849, -t663 - t812, t834, t191 * qJD(3) + (t184 * t473 + t745 * t98) * t730 + t526 -(t582 + t584) * t778 - t775, 0.2e1 * t528 + (t382 - t804) * qJD(4) + t123 * qJD(5) + t326, qJD(5) * t223 + t653 * t777 + t850 -(-t582 + t585) * t778 + t775, t207 - t847 + t673, t501 (t472 * t519 + t795) * qJD(4) + t34 * qJD(5) + t53 * qJD(6) + t518, t839 + (t474 * t519 - t796) * qJD(4) + t35 * qJD(5) + t51 * qJD(6) + t527, qJD(4) * t523 + t12 * qJD(5) - t729, t27 * qJD(3) + (t453 * t523 - t454 * t98) * qJD(4) + t1 * qJD(5) + t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t797, -t828, t793, t797, -qJD(4) * t290 - t649, 0, qJD(3) * t392 + t586 + t849, -t589 - t812, 0, 0 (-t581 - t584) * t778 - t774, t123 * qJD(4) + t326 + (-qJD(5) * t447 + t539) * t778, qJD(4) * t223 + t647 * t777 + t850 (t581 - t585) * t778 + t774, -t230 * qJD(4) + t646 * t777 - t847, t500, t711 - t813 * qJD(3) + t34 * qJD(4) + (t472 * t542 + t795) * qJD(5) + t61 * qJD(6), t710 + t839 + t35 * qJD(4) + (t474 * t542 - t796) * qJD(5) + t59 * qJD(6), t124 * qJD(3) + t12 * qJD(4) + qJD(5) * t522 - t722, t29 * qJD(3) + t1 * qJD(4) + (pkin(9) * t522 + t742) * qJD(5) + t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t780 * t785 - t620, t472 * t514 + t843 + t845, t99, t221 * qJD(4) + t474 * t514, t246, qJD(2) * t131 + qJD(3) * t221 + qJD(4) * t53 + qJD(5) * t61 - qJD(6) * t102 + t725, qJD(2) * t130 + qJD(3) * t831 + qJD(4) * t51 + qJD(5) * t59 + qJD(6) * t101 + t726, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t466, 0, 0, 0, 0, 0, 0, -t601, -t600, 0, qJD(3) * t439 - t466, 0, 0, 0, 0, 0, 0, t605, -t604, 0, qJD(3) * t283 - t659, 0, 0, 0, 0, 0, 0, -t788, -t789, 0, qJD(3) * t141 - t661 + t733, 0, 0, 0, 0, 0, 0, -t129 * qJD(6) - t587, qJD(6) * t128 + t588, t619, qJD(3) * t78 + t598 + t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t82 - qJD(5) * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t603, 0, 0, 0, 0, 0, 0, 0, 0, 0, t618, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641, 0, 0, 0, 0, 0, 0, 0, 0, 0, t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, -t430, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t289 - t654, -t794, 0, t517 - t834, 0, 0, 0, 0, 0, 0, qJD(5) * t836 - t652 * t778 + t841, qJD(5) * t222 + qJD(6) * t243 + t653 * t778, qJD(4) * t800 + qJD(5) * t127 (t453 * t800 + t697) * qJD(4) + t56 * qJD(5) + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t289 - t650, -t794, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t836 - t646 * t778 + t841, qJD(4) * t222 + qJD(6) * t242 + t647 * t778, t127 * qJD(4) + qJD(5) * t800, t56 * qJD(4) + (pkin(9) * t800 - t740) * qJD(5) + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461 * t778 + t599 * t835 - t643, qJD(4) * t243 + qJD(5) * t242 + t645 * t778 + t670, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t602, -qJD(2) * t439 + t660, 0, 0, 0, 0, 0, 0, t430, t427, -t606, -qJD(2) * t283 - t662, 0, 0, 0, 0, 0, 0, t513, t793, -t640, -qJD(2) * t141 - qJD(4) * t190 - t723, 0, 0, 0, 0, 0, 0, t206 - t668 + t673, -qJD(4) * t799 + qJD(5) * t227 + qJD(6) * t836 - t666, qJD(4) * t247 + qJD(5) * t125, -qJD(2) * t78 - qJD(4) * t26 - qJD(5) * t28 - t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t603, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t618, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t641, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t604, t605, 0, 0, 0, 0, 0, 0, 0, 0, t789, -t788, 0, -t636, 0, 0, 0, 0, 0, 0, t574, -t630, t621, -t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t616, -t788, 0, 0, 0, 0, 0, 0, 0, 0, -t625, t627, t644, -t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, -t461 + t622, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t576, -t615, 0, t576, 0, 0, t553 * t436, t553 * t435, 0, 0, t797, t828, 0, -t579, -t611, 0, -t657 + t664, t663 + t792, 0, qJD(3) * t190 - t526, -t773 + t819, t122 * qJD(5) + t326 - 0.2e1 * t528, t844 + t851, t773 + t820, t206 - t210 + t847, -t501, t33 * qJD(5) + t52 * qJD(6) - t474 * t657 - t518, qJD(3) * t799 + qJD(5) * t36 + qJD(6) * t50 - t527, -qJD(3) * t247 + qJD(5) * t13 + t729, qJD(3) * t26 + qJD(5) * t2 - t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390 * qJD(5), 0, 0, -t517, 0, 0, 0, 0, 0, 0, -qJD(6) * t830 - t843, -qJD(5) * t217 - qJD(6) * t813, 0, qJD(5) * t57 - t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t604, -t605, 0, 0, 0, 0, 0, 0, 0, 0, -t789, t788, 0, t636, 0, 0, 0, 0, 0, 0, -t574, t630, -t621, t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t593, -pkin(4) * t555, 0, 0, t448, t442, 0, -t448, 0, 0, t454 * t645 - t474 * t593, t454 * t461 + t445, t424, t386 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t612, 0, -t543 + t515 (-t556 - t555) * pkin(4), 0, 0, t770, t442 + t671, t628, -t770, -t626, 0, t412 * qJD(6) - t474 * t543 + t516, qJD(6) * t413 + t445 - t482, t424 - t490 (-pkin(5) * t473 + pkin(9) * t494) * t731 + t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t281, t852, -t189, t197, -t790, t412 * qJD(5) - t453 * t461 - t486, t413 * qJD(5) + t453 * t645 - t485, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t797, t828, 0, -t797, t392 * qJD(4), 0, -qJD(3) * t290 - t586, t589 + t792, 0, 0, -t772 + t819, -t122 * qJD(4) + t540 * t778 + t326, -t846 + t851, t772 + t820, -qJD(6) * t803 + t829 + t847, -t500, qJD(3) * t230 - qJD(4) * t33 - qJD(6) * t60 - t711, -qJD(3) * t227 - qJD(4) * t36 + qJD(6) * t58 - t710, -qJD(3) * t125 - qJD(4) * t13 + t722, qJD(3) * t28 - qJD(4) * t2 - t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t390 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, qJD(4) * t217, 0, -qJD(4) * t57 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t616, t788, 0, 0, 0, 0, 0, 0, 0, 0, t625, -t627, -t644, t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t612, 0, -t515 + t594, pkin(4) * t556, 0, 0, -t771, t442 - t671, -t628, t771, t626, 0, -t410 * qJD(6) + t474 * t594 - t516, -qJD(6) * t411 + t482, t490, -t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t442, 0, -t448, 0, 0, -pkin(5) * t645, -pkin(5) * t461, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t281, t852, -t189, -t629 - t645, -t790, -pkin(9) * t461 - t489, pkin(9) * t645 - t488, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0.2e1 * t777 * t780 + t620, t472 * t797 - t599 * t837, -t99, -t220 * qJD(4) + qJD(5) * t803 + t474 * t797, t246, qJD(2) * t129 - qJD(3) * t220 - qJD(4) * t52 + qJD(5) * t60 - t725, -qJD(2) * t128 - qJD(3) * t836 - qJD(4) * t50 - qJD(5) * t58 - t726, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t643 + t846, -t670 + t829, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t622, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t280, -t838, t189, -t208, t790, qJD(5) * t410 + t486, t411 * qJD(5) + t485, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t280, -t838, t189, t629, t790, t489, t488, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
