% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPPRRR7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:33:48
% EndTime: 2019-03-09 02:34:00
% DurationCPUTime: 4.79s
% Computational Cost: add. (10051->395), mult. (22133->511), div. (0->0), fcn. (16469->8), ass. (0->210)
t148 = sin(qJ(6));
t151 = cos(qJ(6));
t202 = qJD(4) + qJD(5);
t149 = sin(qJ(5));
t243 = cos(qJ(5));
t145 = sin(pkin(10));
t146 = cos(pkin(10));
t152 = cos(qJ(4));
t208 = qJD(1) * t152;
t150 = sin(qJ(4));
t209 = qJD(1) * t150;
t114 = -t145 * t208 - t146 * t209;
t147 = -pkin(1) - qJ(3);
t257 = t147 * qJD(1);
t126 = qJD(2) + t257;
t190 = -pkin(7) * qJD(1) + t126;
t106 = t190 * t145;
t107 = t190 * t146;
t75 = t106 * t152 + t107 * t150;
t62 = pkin(8) * t114 + t75;
t198 = t243 * t62;
t193 = t145 * t209;
t194 = t146 * t208;
t277 = t193 - t194;
t218 = t106 * t150;
t74 = t152 * t107 - t218;
t61 = pkin(8) * t277 + t74;
t60 = qJD(4) * pkin(4) + t61;
t33 = t149 * t60 + t198;
t31 = pkin(9) * t202 + t33;
t165 = t149 * t114 - t243 * t277;
t78 = -t243 * t114 - t149 * t277;
t144 = qJD(1) * qJ(2);
t139 = qJD(3) + t144;
t140 = t145 * pkin(3);
t123 = qJD(1) * t140 + t139;
t88 = -pkin(4) * t114 + t123;
t36 = pkin(5) * t78 - pkin(9) * t165 + t88;
t10 = t148 * t36 + t151 * t31;
t264 = t152 * t145 + t150 * t146;
t161 = t264 * qJD(4);
t206 = qJD(4) * t152;
t131 = t146 * t206;
t207 = qJD(4) * t150;
t176 = t145 * t207 - t131;
t215 = t145 * t150;
t169 = -t146 * t152 + t215;
t82 = t149 * t264 + t243 * t169;
t295 = -qJD(5) * t82 - t149 * t161 - t243 * t176;
t309 = t10 * t295;
t308 = t295 * t202;
t177 = t243 * t264;
t278 = -t149 * t169 + t177;
t260 = qJD(1) * t264;
t104 = qJD(4) * t260;
t125 = qJD(4) * t193;
t105 = qJD(1) * t131 - t125;
t189 = t149 * t104 - t243 * t105;
t258 = qJD(5) * t165;
t46 = -t189 + t258;
t239 = t46 * t278;
t307 = t295 * t78 + t239;
t67 = t148 * t202 + t151 * t165;
t219 = qJD(6) * t67;
t192 = qJD(5) * t243;
t205 = qJD(5) * t149;
t45 = t243 * t104 + t149 * t105 - t114 * t192 - t205 * t277;
t29 = -t148 * t45 + t219;
t182 = t151 * t202;
t65 = t148 * t165 - t182;
t306 = -t278 * t29 - t295 * t65;
t204 = qJD(6) * t148;
t28 = -qJD(6) * t182 + t151 * t45 + t165 * t204;
t305 = -t278 * t28 + t295 * t67;
t172 = t148 * t31 - t151 * t36;
t167 = t277 * qJD(3);
t58 = -qJD(4) * t75 + t167;
t155 = pkin(8) * t104 + t58;
t162 = t264 * qJD(3);
t90 = t107 * t206;
t57 = -qJD(1) * t162 - t106 * t207 + t90;
t47 = -pkin(8) * t105 + t57;
t154 = -t149 * t155 - t60 * t192 + t62 * t205 - t243 * t47;
t143 = qJD(1) * qJD(2);
t89 = pkin(4) * t105 + t143;
t18 = pkin(5) * t46 + pkin(9) * t45 + t89;
t3 = -qJD(6) * t10 + t148 * t154 + t151 * t18;
t304 = t172 * t295 - t278 * t3;
t44 = t243 * t155;
t191 = t149 * t47 - t44;
t8 = qJD(5) * t33 + t191;
t302 = t8 * t82;
t303 = -t154 * t278 + t295 * t33 + t302;
t301 = t28 * t82;
t300 = t29 * t82;
t299 = t45 * t82;
t275 = qJD(6) * t172;
t2 = t148 * t18 - t151 * t154 - t275;
t280 = qJD(6) + t78;
t247 = t280 * t172;
t298 = t2 + t247;
t290 = t148 * t280;
t297 = t67 * t290;
t25 = t29 * t151;
t296 = t290 * t65 - t25;
t270 = t202 * t78;
t291 = -t45 + t270;
t231 = -pkin(7) + t147;
t121 = t231 * t145;
t122 = t231 * t146;
t87 = t152 * t121 + t150 * t122;
t72 = -pkin(8) * t264 + t87;
t233 = t78 ^ 2;
t234 = t165 ^ 2;
t288 = -t233 + t234;
t287 = t10 * t280 + t3;
t203 = qJD(6) * t151;
t230 = -t148 * t29 - t65 * t203;
t281 = t151 * t78;
t286 = -t151 * t28 - t281 * t65 + t230;
t23 = t28 * t148;
t285 = -t23 + (t203 + t281) * t67;
t41 = t148 * t46;
t229 = t203 * t280 + t41;
t235 = t67 * t165;
t284 = t280 * t281 + t229 - t235;
t222 = t149 * t62;
t32 = t243 * t60 - t222;
t30 = -pkin(5) * t202 - t32;
t282 = t30 * t78;
t232 = t78 * t165;
t279 = t114 - t260;
t49 = pkin(5) * t165 + pkin(9) * t78;
t274 = t88 * t78 + t154;
t273 = -qJD(4) * (t75 * t215 + t264 * t74) + t75 * t131 - t169 * t58 + t264 * t57;
t237 = t65 * t165;
t269 = t280 * t165;
t268 = t88 * t165;
t43 = t151 * t46;
t267 = t204 * t280 - t43;
t265 = t264 * t105;
t160 = t169 * qJD(3);
t263 = -qJD(4) * t72 + t160;
t213 = t165 * qJD(4);
t262 = t213 + t189;
t261 = t10 * t151 + t148 * t172;
t210 = t145 ^ 2 + t146 ^ 2;
t259 = qJD(3) * t210;
t256 = t176 * qJD(4);
t26 = t30 * t204;
t255 = t165 * t172 + t26;
t27 = t30 * t203;
t254 = t10 * t165 + t8 * t148 + t27;
t251 = -t149 * t176 + t243 * t161;
t249 = t277 ^ 2;
t199 = 0.2e1 * t143;
t86 = -t121 * t150 + t152 * t122;
t71 = pkin(8) * t169 + t86;
t166 = -t149 * t72 + t243 * t71;
t248 = t166 * t8;
t242 = pkin(4) * t277;
t1 = t2 * t151;
t238 = t46 * t82;
t236 = t67 * t65;
t227 = pkin(4) * qJD(5);
t224 = t148 * t67;
t217 = t277 * t114;
t216 = t169 * t104;
t133 = qJ(2) + t140;
t196 = t82 * t204;
t195 = t82 * t203;
t184 = qJD(1) * t210;
t183 = qJD(6) * t278 + qJD(1);
t181 = pkin(4) * t192;
t34 = t149 * t61 + t198;
t180 = pkin(4) * t205 - t34;
t51 = qJD(5) * t177 - t169 * t205 + t251;
t179 = -t30 * t51 - t302;
t178 = -t280 * t51 - t238;
t175 = t10 * t148 - t151 * t172;
t39 = t149 * t71 + t243 * t72;
t95 = pkin(4) * t264 + t133;
t40 = pkin(5) * t278 + pkin(9) * t82 + t95;
t20 = t148 * t40 + t151 * t39;
t19 = -t148 * t39 + t151 * t40;
t168 = -t290 * t78 - t267;
t98 = -pkin(4) * t176 + qJD(2);
t137 = pkin(4) * t149 + pkin(9);
t158 = -t137 * t46 - t181 * t280 + t282;
t157 = -qJD(6) * t175 - t3 * t148 + t1;
t68 = -t121 * t207 + t122 * t206 - t162;
t153 = qJD(1) ^ 2;
t138 = -t243 * pkin(4) - pkin(5);
t110 = t114 ^ 2;
t108 = t264 * qJD(4) ^ 2;
t69 = -qJD(4) * t87 + t160;
t56 = pkin(8) * t176 + t68;
t52 = qJD(5) * t278 + t251;
t37 = -t242 + t49;
t35 = t243 * t61 - t222;
t21 = pkin(5) * t295 + t51 * pkin(9) + t98;
t16 = t148 * t49 + t151 * t32;
t15 = -t148 * t32 + t151 * t49;
t14 = t148 * t37 + t151 * t35;
t13 = -t148 * t35 + t151 * t37;
t12 = t39 * qJD(5) + t149 * t56 - t243 * t263;
t11 = t166 * qJD(5) + t149 * t263 + t243 * t56;
t5 = -qJD(6) * t20 - t11 * t148 + t151 * t21;
t4 = qJD(6) * t19 + t11 * t151 + t148 * t21;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, qJ(2) * t199, 0, 0, 0, 0, 0, 0, t145 * t199, t146 * t199, 0.2e1 * qJD(3) * t184 (t139 + t144) * qJD(2) + (-t126 - t257) * t259, t161 * t277 + t216, t169 * t105 + t104 * t264 + t277 * t131 + (-t114 * t264 - t215 * t277) * qJD(4), -t108, t114 * t176 + t265, t256, 0, -t279 * qJD(2) + t69 * qJD(4) + t133 * t105 - t123 * t176, -t133 * t104 + (-qJD(1) * t169 - t277) * qJD(2) + (-t123 * t264 - t68) * qJD(4), t86 * t104 - t87 * t105 + t68 * t114 + t277 * t69 - t273, t57 * t87 + t58 * t86 + t68 * t75 + t69 * t74 + (qJD(1) * t133 + t123) * qJD(2), -t165 * t51 + t299, -t165 * t295 + t278 * t45 + t51 * t78 + t238, -t51 * t202, t307, -t308, 0, -t12 * t202 + t278 * t89 + t295 * t88 + t95 * t46 + t98 * t78, -t11 * t202 + t165 * t98 - t95 * t45 - t88 * t51 - t82 * t89, -t11 * t78 + t12 * t165 + t166 * t45 + t32 * t51 - t39 * t46 - t303, t11 * t33 - t12 * t32 - t154 * t39 + t88 * t98 + t89 * t95 - t248, t67 * t196 + (-t51 * t67 + t301) * t151 (t151 * t65 + t224) * t51 - (t23 - t25 + (t148 * t65 - t151 * t67) * qJD(6)) * t82, t151 * t178 + t196 * t280 + t305, -t65 * t195 + (-t51 * t65 - t300) * t148, -t148 * t178 + t195 * t280 + t306, t280 * t295 + t239, t12 * t65 + t148 * t179 - t166 * t29 + t19 * t46 - t27 * t82 + t280 * t5 - t304, t12 * t67 + t151 * t179 + t166 * t28 - t2 * t278 - t20 * t46 + t26 * t82 - t280 * t4 - t309, t19 * t28 - t20 * t29 - t4 * t65 - t5 * t67 + t175 * t51 - (-qJD(6) * t261 - t148 * t2 - t151 * t3) * t82, t10 * t4 + t12 * t30 - t172 * t5 + t19 * t3 + t2 * t20 - t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153, -t153 * qJ(2), 0, 0, 0, 0, 0, 0, -t153 * t145, -t153 * t146, 0 (-t139 - t259) * qJD(1), 0, 0, 0, 0, 0, 0, qJD(1) * t114 - t108, qJD(1) * t277 + t256, t131 * t114 - t265 - t216 + (-t114 * t215 - t264 * t277) * qJD(4), -t123 * qJD(1) + t273, 0, 0, 0, 0, 0, 0, -qJD(1) * t78 - t202 * t52, -qJD(1) * t165 - t308, t165 * t52 - t299 - t307, -qJD(1) * t88 - t32 * t52 + t303, 0, 0, 0, 0, 0, 0, -t278 * t41 + t300 + t52 * t65 + (-t148 * t295 - t151 * t183) * t280, -t278 * t43 - t301 + t52 * t67 + (t148 * t183 - t151 * t295) * t280 (t183 * t67 + t306) * t151 + (t183 * t65 + t305) * t148, t30 * t52 + t302 + (qJD(1) * t172 + t309 + (t2 + t275) * t278) * t151 + (-t10 * t183 + t304) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210 * t153, t126 * t184 + t143, 0, 0, 0, 0, 0, 0, -t125 + (-t277 + t194) * qJD(4), t279 * qJD(4), -t110 - t249, -t114 * t75 - t277 * t74 + t143, 0, 0, 0, 0, 0, 0, -t189 + t213 + 0.2e1 * t258, -t45 - t270, -t233 - t234, t165 * t32 + t33 * t78 + t89, 0, 0, 0, 0, 0, 0, t168 - t237, -t151 * t280 ^ 2 - t235 - t41 (-t65 * t78 + t28) * t151 + t297 + t230, t148 * t298 + t287 * t151 - t30 * t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t110 + t249 (-t114 - t260) * qJD(4), -t217, t125 + (-t277 - t194) * qJD(4), 0, t123 * t277 + t167, -t114 * t123 - t90 + (t74 + t218) * qJD(4) + qJD(3) * t260, 0, 0, t232, t288, t291, -t232, t262, 0, -t62 * t192 + t44 + t78 * t242 - t268 + t34 * t202 + (-qJD(5) * t60 - t202 * t227 - t47) * t149, t35 * t202 + (t165 * t277 - t192 * t202) * pkin(4) + t274, -t32 * t78 + t33 * t165 - t34 * t165 + t35 * t78 + (t243 * t45 - t149 * t46 + (t149 * t165 - t243 * t78) * qJD(5)) * pkin(4), t32 * t34 - t33 * t35 + (-t243 * t8 + t277 * t88 - t149 * t154 + (-t149 * t32 + t243 * t33) * qJD(5)) * pkin(4), t285, -t224 * t280 + t286, t284, t296, t168 + t237, -t269, -t13 * t280 + t138 * t29 + t180 * t65 + (-qJD(6) * t137 * t280 - t8) * t151 + t158 * t148 + t255, -t138 * t28 + (t137 * t204 + t14) * t280 + t180 * t67 + t158 * t151 + t254, t13 * t67 + t14 * t65 + t1 + (-t65 * t181 - t137 * t29 + t78 * t172 + (t137 * t67 + t172) * qJD(6)) * t151 + (t67 * t181 - t10 * t78 - t137 * t28 - t3 + (t137 * t65 - t10) * qJD(6)) * t148, -t10 * t14 + t172 * t13 + t8 * t138 - t30 * t34 + (t149 * t30 + t243 * t261) * t227 + t157 * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, t288, t291, -t232, t262, 0, t33 * qJD(4) - t191 - t268, t202 * t32 + t274, 0, 0, t285, t286 - t297, t284, t296, -t280 * t290 + t237 + t43, -t269, -pkin(5) * t29 - pkin(9) * t229 + t148 * t282 - t15 * t280 - t8 * t151 - t33 * t65 + t255, pkin(5) * t28 + t267 * pkin(9) + t16 * t280 + t281 * t30 - t33 * t67 + t254, t15 * t67 + t16 * t65 + t1 + (t247 + (-t29 + t219) * pkin(9)) * t151 + ((qJD(6) * t65 - t28) * pkin(9) - t287) * t148, -pkin(5) * t8 + pkin(9) * t157 - t10 * t16 + t15 * t172 - t30 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, -t65 ^ 2 + t67 ^ 2, t280 * t65 - t28, -t236, t280 * t67 - t29, t46, -t30 * t67 + t287, t30 * t65 - t298, 0, 0;];
tauc_reg  = t6;
