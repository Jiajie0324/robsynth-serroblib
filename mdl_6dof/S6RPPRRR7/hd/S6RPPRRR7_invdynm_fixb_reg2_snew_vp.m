% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 16:07
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 16:06:38
% EndTime: 2019-05-05 16:07:07
% DurationCPUTime: 30.92s
% Computational Cost: add. (224968->833), mult. (522929->1073), div. (0->0), fcn. (398335->10), ass. (0->544)
t1360 = qJD(1) ^ 2;
t1349 = sin(pkin(10));
t1452 = t1349 * qJDD(1);
t1345 = t1349 ^ 2;
t1350 = cos(pkin(10));
t1346 = t1350 ^ 2;
t1455 = t1345 + t1346;
t1499 = -qJ(3) - pkin(1);
t1515 = -pkin(3) * t1452 + (pkin(7) * t1455 - t1499) * t1360;
t1353 = sin(qJ(4));
t1357 = cos(qJ(4));
t1399 = t1349 * t1357 + t1350 * t1353;
t1310 = t1399 * qJD(1);
t1305 = t1310 ^ 2;
t1311 = (-t1349 * t1353 + t1350 * t1357) * qJD(1);
t1470 = t1311 * qJD(4);
t1504 = t1399 * qJDD(1);
t1366 = t1504 + t1470;
t1354 = sin(qJ(1));
t1358 = cos(qJ(1));
t1323 = t1358 * g(1) + t1354 * g(2);
t1348 = qJDD(1) * qJ(2);
t1397 = -t1323 + t1348;
t1514 = -pkin(4) * t1366 + t1305 * pkin(8) - qJDD(3) - t1311 * (qJD(4) * pkin(4) - pkin(8) * t1311) - t1397 + t1515;
t1351 = sin(qJ(6));
t1352 = sin(qJ(5));
t1356 = cos(qJ(5));
t1268 = -t1310 * t1352 + t1311 * t1356;
t1299 = t1310 * qJD(4);
t1339 = t1350 * qJDD(1);
t1308 = t1339 * t1357 - t1353 * t1452;
t1279 = -t1299 + t1308;
t1420 = -t1352 * t1279 - t1356 * t1366;
t1392 = qJD(5) * t1268 - t1420;
t1186 = qJDD(6) + t1392;
t1347 = qJD(4) + qJD(5);
t1355 = cos(qJ(6));
t1246 = t1268 * t1351 - t1347 * t1355;
t1248 = t1268 * t1355 + t1347 * t1351;
t1196 = t1248 * t1246;
t1506 = t1186 - t1196;
t1513 = t1351 * t1506;
t1266 = t1310 * t1356 + t1311 * t1352;
t1215 = t1268 * t1266;
t1344 = qJDD(4) + qJDD(5);
t1505 = -t1215 + t1344;
t1512 = t1352 * t1505;
t1283 = t1310 * t1311;
t1503 = qJDD(4) - t1283;
t1511 = t1353 * t1503;
t1510 = t1355 * t1506;
t1509 = t1356 * t1505;
t1508 = t1357 * t1503;
t1256 = t1347 * t1268;
t1149 = t1256 + t1392;
t1322 = t1354 * g(1) - g(2) * t1358;
t1408 = qJDD(2) - t1322;
t1489 = qJD(3) * qJD(1);
t1450 = -0.2e1 * t1489;
t1494 = t1349 * g(3);
t1243 = t1494 + (t1450 + (-pkin(3) * t1349 - qJ(2)) * t1360 + (-pkin(7) + t1499) * qJDD(1) + t1408) * t1350;
t1386 = -t1360 * qJ(2) + t1408;
t1365 = qJDD(1) * t1499 + t1386;
t1272 = g(3) * t1350 + (-t1365 + 0.2e1 * t1489) * t1349;
t1465 = t1345 * t1360;
t1251 = -pkin(3) * t1465 - pkin(7) * t1452 - t1272;
t1194 = t1243 * t1353 + t1251 * t1357;
t1359 = qJD(4) ^ 2;
t1273 = -t1359 - t1305;
t1137 = pkin(4) * t1273 - pkin(8) * t1504 + t1194;
t1193 = -t1243 * t1357 + t1353 * t1251;
t1364 = (-t1279 - t1299) * pkin(8) + t1503 * pkin(4) - t1193;
t1067 = t1137 * t1356 + t1352 * t1364;
t1211 = pkin(5) * t1266 - pkin(9) * t1268;
t1500 = t1347 ^ 2;
t1053 = -pkin(5) * t1500 + pkin(9) * t1344 - t1211 * t1266 + t1067;
t1189 = -t1266 * qJD(5) + t1356 * t1279 - t1352 * t1366;
t1255 = t1347 * t1266;
t1153 = -t1255 + t1189;
t1490 = qJD(2) * qJD(1);
t1342 = 0.2e1 * t1490;
t1057 = pkin(5) * t1149 - pkin(9) * t1153 + t1342 - t1514;
t994 = t1053 * t1351 - t1057 * t1355;
t995 = t1053 * t1355 + t1057 * t1351;
t947 = t1351 * t994 + t1355 * t995;
t1507 = t1455 * t1360;
t1271 = t1494 + (t1365 + t1450) * t1350;
t1213 = t1271 * t1350 - t1349 * t1272;
t1244 = t1246 ^ 2;
t1245 = t1248 ^ 2;
t1261 = qJD(6) + t1266;
t1260 = t1261 ^ 2;
t1263 = t1266 ^ 2;
t1264 = t1268 ^ 2;
t1306 = t1311 ^ 2;
t1498 = pkin(2) * t1213;
t1451 = -0.2e1 * t1490;
t1368 = -t1397 + t1451;
t1367 = -qJDD(3) + t1368;
t1288 = -t1360 * t1499 + t1367;
t1497 = pkin(2) * t1288;
t1316 = t1455 * qJDD(1);
t1496 = pkin(2) * t1316;
t1495 = pkin(5) * t1352;
t1493 = qJDD(1) * pkin(1);
t1066 = t1137 * t1352 - t1356 * t1364;
t1001 = t1066 * t1352 + t1067 * t1356;
t1000 = -t1066 * t1356 + t1067 * t1352;
t1487 = t1000 * t1357;
t950 = t1001 * t1353 + t1487;
t999 = pkin(4) * t1000;
t1492 = pkin(3) * t950 + t999;
t1052 = -pkin(5) * t1344 - pkin(9) * t1500 + t1211 * t1268 + t1066;
t1491 = -pkin(5) * t1052 + pkin(9) * t947;
t1488 = t1000 * t1353;
t1123 = t1186 + t1196;
t1486 = t1123 * t1351;
t1485 = t1123 * t1355;
t1125 = -t1193 * t1357 + t1194 * t1353;
t1484 = t1125 * t1349;
t1483 = t1125 * t1350;
t1172 = t1451 + t1514;
t1482 = t1172 * t1352;
t1481 = t1172 * t1356;
t1209 = t1215 + t1344;
t1480 = t1209 * t1352;
t1479 = t1209 * t1356;
t1259 = t1367 + t1515;
t1478 = t1259 * t1353;
t1477 = t1259 * t1357;
t1476 = t1261 * t1351;
t1475 = t1261 * t1355;
t1275 = qJDD(4) + t1283;
t1474 = t1275 * t1353;
t1473 = t1275 * t1357;
t1472 = t1310 * t1353;
t1471 = t1310 * t1357;
t1469 = t1311 * t1353;
t1468 = t1311 * t1357;
t1467 = t1316 * t1354;
t1466 = t1316 * t1358;
t1464 = t1347 * t1352;
t1463 = t1347 * t1356;
t1461 = t1349 * t1288;
t1460 = t1349 * t1350;
t1284 = t1350 * t1288;
t1049 = t1351 * t1052;
t1050 = t1355 * t1052;
t1151 = (-qJD(5) + t1347) * t1268 + t1420;
t1154 = t1255 + t1189;
t1088 = t1151 * t1352 - t1154 * t1356;
t1090 = t1151 * t1356 + t1154 * t1352;
t1017 = t1088 * t1357 + t1090 * t1353;
t1086 = pkin(4) * t1088;
t1457 = pkin(3) * t1017 + t1086;
t1456 = t1345 - t1346;
t1454 = t1345 * qJDD(1);
t1453 = t1346 * qJDD(1);
t938 = -t1052 * t1356 + t1352 * t947;
t1449 = pkin(4) * t938 + t1491;
t1448 = -pkin(5) * t1356 - pkin(4);
t1447 = t1352 * t1196;
t1446 = t1356 * t1196;
t1445 = t1246 * t1476;
t1444 = t1354 * t1215;
t1443 = t1358 * t1215;
t1442 = t1354 * t1283;
t1441 = t1358 * t1283;
t1171 = -t1245 - t1260;
t1077 = -t1171 * t1351 - t1485;
t1402 = -t1355 * t1189 - t1351 * t1344;
t1119 = (qJD(6) + t1261) * t1246 + t1402;
t1440 = pkin(5) * t1119 + pkin(9) * t1077 + t1049;
t1163 = -t1260 - t1244;
t1074 = t1163 * t1355 - t1513;
t1422 = -t1351 * t1189 + t1344 * t1355;
t1138 = -qJD(6) * t1248 + t1422;
t1206 = t1261 * t1248;
t1115 = t1138 - t1206;
t1439 = pkin(5) * t1115 + pkin(9) * t1074 - t1050;
t1250 = -t1264 - t1500;
t1165 = t1250 * t1356 - t1480;
t1438 = pkin(4) * t1165 - t1067;
t1294 = -t1306 - t1359;
t1229 = t1294 * t1357 - t1474;
t1437 = pkin(3) * t1229 - t1194;
t1126 = t1193 * t1353 + t1194 * t1357;
t1058 = t1126 * t1349 + t1483;
t1121 = pkin(3) * t1125;
t1436 = -pkin(2) * t1058 - t1121;
t1220 = -t1308 * t1357 - t1353 * t1504;
t1222 = t1308 * t1353 - t1357 * t1504;
t1156 = t1220 * t1350 + t1222 * t1349;
t1219 = pkin(3) * t1220;
t1435 = -pkin(2) * t1156 - t1219;
t939 = t1052 * t1352 + t1356 * t947;
t946 = t1351 * t995 - t1355 * t994;
t896 = pkin(8) * t939 + (-pkin(9) * t1352 + t1448) * t946;
t905 = -pkin(8) * t938 + (-pkin(9) * t1356 + t1495) * t946;
t908 = -t1353 * t938 + t1357 * t939;
t878 = -pkin(3) * t946 + pkin(7) * t908 + t1353 * t905 + t1357 * t896;
t907 = t1353 * t939 + t1357 * t938;
t884 = -pkin(7) * t907 - t1353 * t896 + t1357 * t905;
t1434 = -t1349 * t878 + t1350 * t884;
t1116 = (-qJD(6) + t1261) * t1248 + t1422;
t1205 = t1261 * t1246;
t1372 = -qJD(6) * t1246 - t1402;
t1118 = t1205 + t1372;
t1046 = t1116 * t1351 - t1118 * t1355;
t1048 = t1116 * t1355 + t1118 * t1351;
t1161 = t1244 + t1245;
t1010 = t1048 * t1356 - t1161 * t1352;
t936 = -pkin(9) * t1046 - t946;
t909 = pkin(8) * t1010 + t1046 * t1448 + t1352 * t936;
t1009 = t1048 * t1352 + t1161 * t1356;
t912 = -pkin(8) * t1009 + t1046 * t1495 + t1356 * t936;
t960 = -t1009 * t1353 + t1010 * t1357;
t888 = -pkin(3) * t1046 + pkin(7) * t960 + t1353 * t912 + t1357 * t909;
t959 = t1009 * t1357 + t1010 * t1353;
t892 = -pkin(7) * t959 - t1353 * t909 + t1357 * t912;
t1433 = -t1349 * t888 + t1350 * t892;
t1073 = t1163 * t1351 + t1510;
t1026 = t1074 * t1356 - t1115 * t1352;
t961 = -pkin(5) * t1073 + t994;
t997 = -pkin(9) * t1073 + t1049;
t918 = -pkin(4) * t1073 + pkin(8) * t1026 + t1352 * t997 + t1356 * t961;
t1025 = t1074 * t1352 + t1115 * t1356;
t926 = -pkin(8) * t1025 - t1352 * t961 + t1356 * t997;
t972 = -t1025 * t1353 + t1026 * t1357;
t899 = -pkin(3) * t1073 + pkin(7) * t972 + t1353 * t926 + t1357 * t918;
t971 = t1025 * t1357 + t1026 * t1353;
t902 = -pkin(7) * t971 - t1353 * t918 + t1357 * t926;
t1432 = -t1349 * t899 + t1350 * t902;
t1076 = t1171 * t1355 - t1486;
t1029 = t1077 * t1356 - t1119 * t1352;
t962 = -pkin(5) * t1076 + t995;
t998 = -pkin(9) * t1076 + t1050;
t920 = -pkin(4) * t1076 + pkin(8) * t1029 + t1352 * t998 + t1356 * t962;
t1028 = t1077 * t1352 + t1119 * t1356;
t927 = -pkin(8) * t1028 - t1352 * t962 + t1356 * t998;
t975 = -t1028 * t1353 + t1029 * t1357;
t900 = -pkin(3) * t1076 + pkin(7) * t975 + t1353 * t927 + t1357 * t920;
t974 = t1028 * t1357 + t1029 * t1353;
t904 = -pkin(7) * t974 - t1353 * t920 + t1357 * t927;
t1431 = -t1349 * t900 + t1350 * t904;
t951 = t1001 * t1357 - t1488;
t996 = pkin(4) * t1172 + pkin(8) * t1001;
t916 = pkin(3) * t1172 + pkin(7) * t951 - pkin(8) * t1488 + t1357 * t996;
t919 = -pkin(7) * t950 - pkin(8) * t1487 - t1353 * t996;
t1430 = -t1349 * t916 + t1350 * t919;
t1019 = -t1088 * t1353 + t1090 * t1357;
t1185 = -t1263 - t1264;
t978 = -pkin(4) * t1185 + pkin(8) * t1090 + t1001;
t987 = -pkin(8) * t1088 - t1000;
t923 = -pkin(3) * t1185 + pkin(7) * t1019 + t1353 * t987 + t1357 * t978;
t925 = -pkin(7) * t1017 - t1353 * t978 + t1357 * t987;
t1429 = -t1349 * t923 + t1350 * t925;
t1207 = -t1500 - t1263;
t1141 = t1207 * t1356 - t1512;
t1055 = -pkin(4) * t1149 + pkin(8) * t1141 + t1481;
t1140 = t1207 * t1352 + t1509;
t1080 = -t1140 * t1353 + t1141 * t1357;
t1097 = -pkin(8) * t1140 - t1482;
t969 = -pkin(3) * t1149 + pkin(7) * t1080 + t1055 * t1357 + t1097 * t1353;
t1079 = t1140 * t1357 + t1141 * t1353;
t985 = -pkin(7) * t1079 - t1055 * t1353 + t1097 * t1357;
t1428 = -t1349 * t969 + t1350 * t985;
t1166 = -t1250 * t1352 - t1479;
t1060 = -pkin(4) * t1153 + pkin(8) * t1166 - t1482;
t1102 = -t1165 * t1353 + t1166 * t1357;
t1111 = -pkin(8) * t1165 - t1481;
t983 = -pkin(3) * t1153 + pkin(7) * t1102 + t1060 * t1357 + t1111 * t1353;
t1101 = t1165 * t1357 + t1166 * t1353;
t991 = -pkin(7) * t1101 - t1060 * t1353 + t1111 * t1357;
t1427 = -t1349 * t983 + t1350 * t991;
t1249 = -t1305 - t1306;
t1081 = -pkin(3) * t1249 + pkin(7) * t1222 + t1126;
t1099 = -pkin(7) * t1220 - t1125;
t1426 = -t1349 * t1081 + t1099 * t1350;
t1218 = t1273 * t1357 - t1511;
t1277 = t1504 + 0.2e1 * t1470;
t1155 = -pkin(3) * t1277 + pkin(7) * t1218 + t1477;
t1217 = t1273 * t1353 + t1508;
t1184 = -pkin(7) * t1217 - t1478;
t1425 = -t1349 * t1155 + t1184 * t1350;
t1232 = -t1294 * t1353 - t1473;
t1278 = -0.2e1 * t1299 + t1308;
t1162 = -pkin(3) * t1278 + pkin(7) * t1232 - t1478;
t1192 = -pkin(7) * t1229 - t1477;
t1424 = -t1349 * t1162 + t1192 * t1350;
t1296 = t1360 * pkin(1) + t1368;
t1300 = -t1386 + t1493;
t1419 = -t1296 * t1358 - t1300 * t1354;
t1418 = -t1322 * t1354 - t1323 * t1358;
t1417 = pkin(3) * t907 + t1449;
t1416 = pkin(5) * t1161 + pkin(9) * t1048 + t947;
t921 = t1349 * t951 + t1350 * t950;
t1415 = -pkin(2) * t921 - t1492;
t1414 = pkin(4) * t1028 + t1440;
t1413 = pkin(4) * t1025 + t1439;
t1412 = pkin(3) * t1101 + t1438;
t964 = t1017 * t1350 + t1019 * t1349;
t1411 = -pkin(2) * t964 - t1457;
t1320 = qJDD(1) * t1358 - t1354 * t1360;
t1410 = pkin(6) * t1320 + g(3) * t1354;
t1321 = qJDD(1) * t1354 + t1358 * t1360;
t1409 = -pkin(6) * t1321 + g(3) * t1358;
t1407 = pkin(4) * t1140 - t1066;
t1406 = pkin(3) * t1217 - t1193;
t1405 = pkin(4) * t1009 + t1416;
t1404 = pkin(3) * t971 + t1413;
t1403 = pkin(3) * t974 + t1414;
t1214 = -t1271 * t1349 - t1272 * t1350;
t1401 = t1296 * t1354 - t1300 * t1358;
t1400 = t1322 * t1358 - t1323 * t1354;
t1175 = t1229 * t1350 + t1232 * t1349;
t1398 = -pkin(2) * t1175 - t1437;
t1396 = pkin(3) * t1079 + t1407;
t1395 = pkin(3) * t959 + t1405;
t1120 = pkin(3) * t1259 + pkin(7) * t1126;
t1394 = -pkin(7) * t1483 - t1349 * t1120;
t889 = t1349 * t908 + t1350 * t907;
t1393 = -pkin(2) * t889 - t1417;
t1314 = t1349 * t1507;
t1391 = -t1314 * t1354 + t1358 * t1452;
t1390 = t1314 * t1358 + t1354 * t1452;
t1036 = t1101 * t1350 + t1102 * t1349;
t1389 = -pkin(2) * t1036 - t1412;
t1146 = t1217 * t1350 + t1218 * t1349;
t1387 = -pkin(2) * t1146 - t1406;
t1385 = pkin(2) * t946 - t1349 * t884 - t1350 * t878;
t1384 = pkin(2) * t1046 - t1349 * t892 - t1350 * t888;
t1383 = pkin(2) * t1073 - t1349 * t902 - t1350 * t899;
t1382 = pkin(2) * t1076 - t1349 * t904 - t1350 * t900;
t1381 = pkin(2) * t1149 - t1349 * t985 - t1350 * t969;
t1380 = pkin(2) * t1153 - t1349 * t991 - t1350 * t983;
t1379 = -pkin(2) * t1172 - t1349 * t919 - t1350 * t916;
t1378 = pkin(2) * t1185 - t1349 * t925 - t1350 * t923;
t932 = t1349 * t972 + t1350 * t971;
t1377 = -pkin(2) * t932 - t1404;
t934 = t1349 * t975 + t1350 * t974;
t1376 = -pkin(2) * t934 - t1403;
t1375 = pkin(2) * t1249 - t1350 * t1081 - t1349 * t1099;
t1374 = pkin(2) * t1277 - t1350 * t1155 - t1349 * t1184;
t1373 = pkin(2) * t1278 - t1350 * t1162 - t1349 * t1192;
t1006 = t1079 * t1350 + t1080 * t1349;
t1371 = -pkin(2) * t1006 - t1396;
t928 = t1349 * t960 + t1350 * t959;
t1370 = -pkin(2) * t928 - t1395;
t1369 = -pkin(2) * t1259 + pkin(7) * t1484 - t1350 * t1120;
t1326 = t1360 * t1460;
t1325 = t1349 * t1339;
t1324 = -0.2e1 * t1325;
t1319 = t1456 * t1360;
t1317 = t1456 * qJDD(1);
t1313 = t1350 * t1507;
t1312 = t1408 - 0.2e1 * t1493;
t1309 = -t1323 + t1342 + 0.2e1 * t1348;
t1293 = -t1306 + t1359;
t1292 = t1305 - t1359;
t1291 = t1321 * t1460;
t1290 = t1320 * t1460;
t1286 = -t1313 * t1354 + t1339 * t1358;
t1285 = t1313 * t1358 + t1339 * t1354;
t1282 = t1306 - t1305;
t1281 = -pkin(2) * t1452 + t1284;
t1280 = -pkin(2) * t1339 - t1461;
t1262 = pkin(1) * t1300 - qJ(2) * t1296;
t1258 = (t1469 - t1471) * qJD(4);
t1257 = (-t1468 - t1472) * qJD(4);
t1253 = -t1264 + t1500;
t1252 = t1263 - t1500;
t1241 = -pkin(2) * t1314 + t1271;
t1240 = -pkin(2) * t1313 + t1272;
t1236 = -qJD(4) * t1469 + t1279 * t1357;
t1235 = qJD(4) * t1468 + t1279 * t1353;
t1234 = qJD(4) * t1471 + t1353 * t1366;
t1233 = qJD(4) * t1472 - t1357 * t1366;
t1231 = -t1293 * t1353 + t1508;
t1230 = t1292 * t1357 - t1474;
t1228 = t1293 * t1357 + t1511;
t1227 = t1292 * t1353 + t1473;
t1225 = qJ(2) * t1339 - t1313 * t1499 - t1284;
t1224 = (-t1288 + t1348) * t1349 - t1499 * t1314;
t1223 = -t1277 * t1357 - t1278 * t1353;
t1221 = -t1277 * t1353 + t1278 * t1357;
t1212 = t1264 - t1263;
t1204 = pkin(2) * t1507 + t1214;
t1203 = -t1257 * t1349 + t1258 * t1350;
t1202 = t1257 * t1350 + t1258 * t1349;
t1201 = -t1245 + t1260;
t1200 = t1244 - t1260;
t1199 = (-t1266 * t1356 + t1268 * t1352) * t1347;
t1198 = (-t1266 * t1352 - t1268 * t1356) * t1347;
t1197 = t1248 * t1475;
t1195 = t1245 - t1244;
t1187 = -qJ(2) * t1507 - t1316 * t1499 - t1213;
t1183 = -t1235 * t1349 + t1236 * t1350;
t1182 = -t1233 * t1349 + t1234 * t1350;
t1181 = t1235 * t1350 + t1236 * t1349;
t1180 = t1233 * t1350 + t1234 * t1349;
t1178 = -t1229 * t1349 + t1232 * t1350;
t1177 = -t1228 * t1349 + t1231 * t1350;
t1176 = -t1227 * t1349 + t1230 * t1350;
t1174 = t1228 * t1350 + t1231 * t1349;
t1173 = t1227 * t1350 + t1230 * t1349;
t1170 = t1252 * t1356 - t1480;
t1169 = -t1253 * t1352 + t1509;
t1168 = t1252 * t1352 + t1479;
t1167 = t1253 * t1356 + t1512;
t1159 = -t1221 * t1349 + t1223 * t1350;
t1158 = -t1220 * t1349 + t1222 * t1350;
t1157 = t1221 * t1350 + t1223 * t1349;
t1150 = -t1256 + t1392;
t1148 = -qJ(2) * t1214 + t1498;
t1147 = -t1217 * t1349 + t1218 * t1350;
t1145 = t1189 * t1356 - t1268 * t1464;
t1144 = t1189 * t1352 + t1268 * t1463;
t1143 = t1266 * t1463 + t1352 * t1392;
t1142 = t1266 * t1464 - t1356 * t1392;
t1134 = (-t1246 * t1355 + t1248 * t1351) * t1261;
t1133 = -t1197 - t1445;
t1132 = t1214 * t1499 - t1497;
t1131 = -qJ(2) * t1288 + t1213 * t1499;
t1130 = -t1198 * t1353 + t1199 * t1357;
t1129 = t1198 * t1357 + t1199 * t1353;
t1117 = -t1205 + t1372;
t1114 = -t1138 - t1206;
t1110 = -t1168 * t1353 + t1170 * t1357;
t1109 = -t1167 * t1353 + t1169 * t1357;
t1108 = t1168 * t1357 + t1170 * t1353;
t1107 = t1167 * t1357 + t1169 * t1353;
t1106 = -t1248 * t1476 + t1355 * t1372;
t1105 = -t1351 * t1372 - t1197;
t1104 = -t1138 * t1351 + t1246 * t1475;
t1103 = t1138 * t1355 + t1445;
t1096 = t1134 * t1356 + t1186 * t1352;
t1095 = t1134 * t1352 - t1186 * t1356;
t1094 = t1200 * t1355 - t1486;
t1093 = -t1201 * t1351 + t1510;
t1092 = t1200 * t1351 + t1485;
t1091 = t1201 * t1355 + t1513;
t1089 = -t1149 * t1356 - t1153 * t1352;
t1087 = -t1149 * t1352 + t1153 * t1356;
t1085 = -t1144 * t1353 + t1145 * t1357;
t1084 = -t1142 * t1353 + t1143 * t1357;
t1083 = t1144 * t1357 + t1145 * t1353;
t1082 = t1142 * t1357 + t1143 * t1353;
t1071 = t1106 * t1356 + t1447;
t1070 = t1104 * t1356 - t1447;
t1069 = t1106 * t1352 - t1446;
t1068 = t1104 * t1352 + t1446;
t1064 = -t1129 * t1349 + t1130 * t1350;
t1063 = t1129 * t1350 + t1130 * t1349;
t1062 = -qJ(2) * t1158 - t1435;
t1061 = -qJ(2) * t1178 - t1398;
t1059 = t1126 * t1350 - t1484;
t1054 = -qJ(2) * t1147 - t1387;
t1047 = t1115 * t1355 - t1117 * t1351;
t1045 = t1115 * t1351 + t1117 * t1355;
t1043 = -t1108 * t1349 + t1110 * t1350;
t1042 = -t1107 * t1349 + t1109 * t1350;
t1041 = t1108 * t1350 + t1110 * t1349;
t1040 = t1107 * t1350 + t1109 * t1349;
t1039 = t1178 * t1499 + t1373;
t1038 = qJ(2) * t1278 + t1175 * t1499 + t1424;
t1037 = -t1101 * t1349 + t1102 * t1350;
t1035 = t1094 * t1356 - t1114 * t1352;
t1034 = t1093 * t1356 + t1118 * t1352;
t1033 = t1094 * t1352 + t1114 * t1356;
t1032 = t1093 * t1352 - t1118 * t1356;
t1031 = -t1095 * t1353 + t1096 * t1357;
t1030 = t1095 * t1357 + t1096 * t1353;
t1023 = t1147 * t1499 + t1374;
t1022 = qJ(2) * t1277 + t1146 * t1499 + t1425;
t1021 = t1047 * t1356 + t1195 * t1352;
t1020 = t1047 * t1352 - t1195 * t1356;
t1018 = -t1087 * t1353 + t1089 * t1357;
t1016 = t1087 * t1357 + t1089 * t1353;
t1014 = -t1083 * t1349 + t1085 * t1350;
t1013 = -t1082 * t1349 + t1084 * t1350;
t1012 = t1083 * t1350 + t1085 * t1349;
t1011 = t1082 * t1350 + t1084 * t1349;
t1007 = -t1079 * t1349 + t1080 * t1350;
t1005 = -t1069 * t1353 + t1071 * t1357;
t1004 = -t1068 * t1353 + t1070 * t1357;
t1003 = t1069 * t1357 + t1071 * t1353;
t1002 = t1068 * t1357 + t1070 * t1353;
t989 = t1158 * t1499 + t1375;
t988 = qJ(2) * t1249 + t1156 * t1499 + t1426;
t986 = -qJ(2) * t1059 - t1436;
t982 = -t1033 * t1353 + t1035 * t1357;
t981 = -t1032 * t1353 + t1034 * t1357;
t980 = t1033 * t1357 + t1035 * t1353;
t979 = t1032 * t1357 + t1034 * t1353;
t977 = -t1030 * t1349 + t1031 * t1350;
t976 = t1030 * t1350 + t1031 * t1349;
t968 = -t1020 * t1353 + t1021 * t1357;
t967 = t1020 * t1357 + t1021 * t1353;
t966 = -t1017 * t1349 + t1019 * t1350;
t965 = -t1016 * t1349 + t1018 * t1350;
t963 = t1016 * t1350 + t1018 * t1349;
t958 = t1059 * t1499 + t1369;
t956 = -qJ(2) * t1259 + t1058 * t1499 + t1394;
t955 = -t1003 * t1349 + t1005 * t1350;
t954 = -t1002 * t1349 + t1004 * t1350;
t953 = t1003 * t1350 + t1005 * t1349;
t952 = t1002 * t1350 + t1004 * t1349;
t948 = -qJ(2) * t1037 - t1389;
t944 = -qJ(2) * t1007 - t1371;
t943 = -t1349 * t980 + t1350 * t982;
t942 = -t1349 * t979 + t1350 * t981;
t941 = t1349 * t982 + t1350 * t980;
t940 = t1349 * t981 + t1350 * t979;
t935 = -t1349 * t974 + t1350 * t975;
t933 = -t1349 * t971 + t1350 * t972;
t931 = -t1349 * t967 + t1350 * t968;
t930 = t1349 * t968 + t1350 * t967;
t929 = -t1349 * t959 + t1350 * t960;
t922 = -t1349 * t950 + t1350 * t951;
t915 = t1037 * t1499 + t1380;
t914 = qJ(2) * t1153 + t1036 * t1499 + t1427;
t913 = -qJ(2) * t966 - t1411;
t911 = t1007 * t1499 + t1381;
t910 = qJ(2) * t1149 + t1006 * t1499 + t1428;
t898 = -qJ(2) * t935 - t1376;
t897 = -qJ(2) * t933 - t1377;
t895 = -qJ(2) * t922 - t1415;
t894 = t1499 * t966 + t1378;
t893 = qJ(2) * t1185 + t1499 * t964 + t1429;
t890 = -t1349 * t907 + t1350 * t908;
t887 = -qJ(2) * t929 - t1370;
t886 = t1499 * t922 + t1379;
t885 = -qJ(2) * t1172 + t1499 * t921 + t1430;
t882 = t1499 * t935 + t1382;
t881 = qJ(2) * t1076 + t1499 * t934 + t1431;
t880 = t1499 * t933 + t1383;
t879 = qJ(2) * t1073 + t1499 * t932 + t1432;
t877 = t1499 * t929 + t1384;
t876 = qJ(2) * t1046 + t1499 * t928 + t1433;
t875 = -qJ(2) * t890 - t1393;
t874 = t1499 * t890 + t1385;
t873 = qJ(2) * t946 + t1499 * t889 + t1434;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1320, 0, -t1321, 0, -t1410, -t1409, -t1400, -pkin(6) * t1400, 0, -t1320, t1321, 0, 0, 0, t1401, t1410, t1409, pkin(6) * t1401 + (-pkin(1) * t1354 + qJ(2) * t1358) * g(3), t1291, -t1317 * t1354 - t1319 * t1358, t1286, -t1291, -t1391, 0, -pkin(6) * t1390 + t1358 * t1241 + t1354 * t1281, -pkin(6) * t1285 + t1240 * t1358 + t1280 * t1354, -pkin(2) * t1466 + t1354 * t1204 - pkin(6) * (-t1354 * t1507 + t1466), t1358 * t1148 - t1354 * t1132 - pkin(6) * (-t1213 * t1358 - t1288 * t1354), t1181 * t1354 + t1441, t1157 * t1354 + t1282 * t1358, t1174 * t1354 + t1308 * t1358, t1180 * t1354 - t1441, t1173 * t1354 - t1358 * t1504, qJDD(4) * t1358 + t1202 * t1354, t1358 * t1054 - t1354 * t1023 - pkin(6) * (-t1146 * t1358 + t1277 * t1354), t1358 * t1061 - t1354 * t1039 - pkin(6) * (-t1175 * t1358 + t1278 * t1354), t1358 * t1062 - t1354 * t989 - pkin(6) * (-t1156 * t1358 + t1249 * t1354), t1358 * t986 - t1354 * t958 - pkin(6) * (-t1058 * t1358 - t1259 * t1354), t1012 * t1354 + t1443, t1212 * t1358 + t1354 * t963, t1040 * t1354 + t1154 * t1358, t1011 * t1354 - t1443, t1041 * t1354 - t1150 * t1358, t1063 * t1354 + t1344 * t1358, t1358 * t944 - t1354 * t911 - pkin(6) * (-t1006 * t1358 + t1149 * t1354), t1358 * t948 - t1354 * t915 - pkin(6) * (-t1036 * t1358 + t1153 * t1354), t1358 * t913 - t1354 * t894 - pkin(6) * (t1185 * t1354 - t1358 * t964), t1358 * t895 - t1354 * t886 - pkin(6) * (-t1172 * t1354 - t1358 * t921), -t1105 * t1358 + t1354 * t953, t1045 * t1358 + t1354 * t930, t1091 * t1358 + t1354 * t940, t1103 * t1358 + t1354 * t952, t1092 * t1358 + t1354 * t941, t1133 * t1358 + t1354 * t976, t1358 * t897 - t1354 * t880 - pkin(6) * (t1073 * t1354 - t1358 * t932), t1358 * t898 - t1354 * t882 - pkin(6) * (t1076 * t1354 - t1358 * t934), t1358 * t887 - t1354 * t877 - pkin(6) * (t1046 * t1354 - t1358 * t928), t1358 * t875 - t1354 * t874 - pkin(6) * (t1354 * t946 - t1358 * t889); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1321, 0, t1320, 0, t1409, -t1410, t1418, pkin(6) * t1418, 0, -t1321, -t1320, 0, 0, 0, t1419, -t1409, t1410, pkin(6) * t1419 + (pkin(1) * t1358 + qJ(2) * t1354) * g(3), -t1290, t1317 * t1358 - t1319 * t1354, t1285, t1290, -t1390, 0, pkin(6) * t1391 + t1354 * t1241 - t1358 * t1281, pkin(6) * t1286 + t1240 * t1354 - t1280 * t1358, -pkin(2) * t1467 - t1358 * t1204 + pkin(6) * (-t1358 * t1507 - t1467), t1354 * t1148 + t1358 * t1132 + pkin(6) * (t1213 * t1354 - t1288 * t1358), -t1181 * t1358 + t1442, -t1157 * t1358 + t1282 * t1354, -t1174 * t1358 + t1308 * t1354, -t1180 * t1358 - t1442, -t1173 * t1358 - t1354 * t1504, qJDD(4) * t1354 - t1202 * t1358, t1354 * t1054 + t1358 * t1023 + pkin(6) * (t1146 * t1354 + t1277 * t1358), t1354 * t1061 + t1358 * t1039 + pkin(6) * (t1175 * t1354 + t1278 * t1358), t1354 * t1062 + t1358 * t989 + pkin(6) * (t1156 * t1354 + t1249 * t1358), t1354 * t986 + t1358 * t958 + pkin(6) * (t1058 * t1354 - t1259 * t1358), -t1012 * t1358 + t1444, t1212 * t1354 - t1358 * t963, -t1040 * t1358 + t1154 * t1354, -t1011 * t1358 - t1444, -t1041 * t1358 - t1150 * t1354, -t1063 * t1358 + t1344 * t1354, t1354 * t944 + t1358 * t911 + pkin(6) * (t1006 * t1354 + t1149 * t1358), t1354 * t948 + t1358 * t915 + pkin(6) * (t1036 * t1354 + t1153 * t1358), t1354 * t913 + t1358 * t894 + pkin(6) * (t1185 * t1358 + t1354 * t964), t1354 * t895 + t1358 * t886 + pkin(6) * (-t1172 * t1358 + t1354 * t921), -t1105 * t1354 - t1358 * t953, t1045 * t1354 - t1358 * t930, t1091 * t1354 - t1358 * t940, t1103 * t1354 - t1358 * t952, t1092 * t1354 - t1358 * t941, t1133 * t1354 - t1358 * t976, t1354 * t897 + t1358 * t880 + pkin(6) * (t1073 * t1358 + t1354 * t932), t1354 * t898 + t1358 * t882 + pkin(6) * (t1076 * t1358 + t1354 * t934), t1354 * t887 + t1358 * t877 + pkin(6) * (t1046 * t1358 + t1354 * t928), t1354 * t875 + t1358 * t874 + pkin(6) * (t1354 * t889 + t1358 * t946); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1322, t1323, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1312, t1309, t1262, t1453, t1324, 0, t1454, 0, 0, t1224, t1225, t1187, t1131, t1183, t1159, t1177, t1182, t1176, t1203, t1022, t1038, t988, t956, t1014, t965, t1042, t1013, t1043, t1064, t910, t914, t893, t885, t955, t931, t942, t954, t943, t977, t879, t881, t876, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1360, 0, 0, -g(3), -t1322, 0, 0, -qJDD(1), t1360, 0, 0, 0, -t1300, 0, g(3), qJ(2) * g(3), t1326, -t1319, t1339, -t1326, -t1452, 0, t1241, t1240, -t1496, t1148, t1283, t1282, t1308, -t1283, -t1504, qJDD(4), t1054, t1061, t1062, t986, t1215, t1212, t1154, -t1215, -t1150, t1344, t944, t948, t913, t895, -t1105, t1045, t1091, t1103, t1092, t1133, t897, t898, t887, t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1360, 0, qJDD(1), 0, g(3), 0, -t1323, 0, 0, -t1360, -qJDD(1), 0, 0, 0, -t1296, -g(3), 0, pkin(1) * g(3), -t1325, t1317, t1313, t1325, -t1314, 0, -t1281, -t1280, -t1204, t1132, -t1181, -t1157, -t1174, -t1180, -t1173, -t1202, t1023, t1039, t989, t958, -t1012, -t963, -t1040, -t1011, -t1041, -t1063, t911, t915, t894, t886, -t953, -t930, -t940, -t952, -t941, -t976, t880, t882, t877, t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1322, t1323, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1312, t1309, t1262, t1453, t1324, 0, t1454, 0, 0, t1224, t1225, t1187, t1131, t1183, t1159, t1177, t1182, t1176, t1203, t1022, t1038, t988, t956, t1014, t965, t1042, t1013, t1043, t1064, t910, t914, t893, t885, t955, t931, t942, t954, t943, t977, t879, t881, t876, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1300, -t1296, 0, t1453, t1324, 0, t1454, 0, 0, qJ(3) * t1314 - t1461, qJ(3) * t1313 - t1284, qJ(3) * t1316 - t1213, -qJ(3) * t1213, t1183, t1159, t1177, t1182, t1176, t1203, -qJ(3) * t1146 + t1425, -qJ(3) * t1175 + t1424, -qJ(3) * t1156 + t1426, -qJ(3) * t1058 + t1394, t1014, t965, t1042, t1013, t1043, t1064, -qJ(3) * t1006 + t1428, -qJ(3) * t1036 + t1427, -qJ(3) * t964 + t1429, -qJ(3) * t921 + t1430, t955, t931, t942, t954, t943, t977, -qJ(3) * t932 + t1432, -qJ(3) * t934 + t1431, -qJ(3) * t928 + t1433, -qJ(3) * t889 + t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1360, 0, 0, 0, t1300, 0, -g(3), 0, -t1326, t1319, -t1339, t1326, t1452, 0, -t1241, -t1240, t1496, -t1498, -t1283, -t1282, -t1308, t1283, t1504, -qJDD(4), t1387, t1398, t1435, t1436, -t1215, -t1212, -t1154, t1215, t1150, -t1344, t1371, t1389, t1411, t1415, t1105, -t1045, -t1091, -t1103, -t1092, -t1133, t1377, t1376, t1370, t1393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1360, qJDD(1), 0, 0, 0, t1296, g(3), 0, 0, t1325, -t1317, -t1313, -t1325, t1314, 0, t1281, t1280, t1204, qJ(3) * t1214 + t1497, t1181, t1157, t1174, t1180, t1173, t1202, qJ(3) * t1147 - t1374, qJ(3) * t1178 - t1373, qJ(3) * t1158 - t1375, qJ(3) * t1059 - t1369, t1012, t963, t1040, t1011, t1041, t1063, qJ(3) * t1007 - t1381, qJ(3) * t1037 - t1380, qJ(3) * t966 - t1378, qJ(3) * t922 - t1379, t953, t930, t940, t952, t941, t976, qJ(3) * t933 - t1383, qJ(3) * t935 - t1382, qJ(3) * t929 - t1384, qJ(3) * t890 - t1385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1339, -t1452, -t1326, 0, t1465, 0, 0, -t1288, -t1271, 0, t1236, t1223, t1231, t1234, t1230, t1258, t1184, t1192, t1099, -pkin(7) * t1125, t1085, t1018, t1109, t1084, t1110, t1130, t985, t991, t925, t919, t1005, t968, t981, t1004, t982, t1031, t902, t904, t892, t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1339, -t1346 * t1360, -t1452, t1326, 0, t1288, 0, -t1272, 0, t1235, t1221, t1228, t1233, t1227, t1257, t1155, t1162, t1081, t1120, t1083, t1016, t1107, t1082, t1108, t1129, t969, t983, t923, t916, t1003, t967, t979, t1002, t980, t1030, t899, t900, t888, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1326, -t1319, t1339, -t1326, -t1452, 0, t1271, t1272, 0, 0, t1283, t1282, t1308, -t1283, -t1504, qJDD(4), t1406, t1437, t1219, t1121, t1215, t1212, t1154, -t1215, -t1150, t1344, t1396, t1412, t1457, t1492, -t1105, t1045, t1091, t1103, t1092, t1133, t1404, t1403, t1395, t1417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, -t1277, t1503, t1299, t1292, -t1299, 0, -t1259, t1193, 0, t1145, t1089, t1169, t1143, t1170, t1199, t1097, t1111, t987, -pkin(8) * t1000, t1071, t1021, t1034, t1070, t1035, t1096, t926, t927, t912, t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1470, t1278, t1293, -t1366, t1275, -t1470, t1259, 0, t1194, 0, t1144, t1087, t1167, t1142, t1168, t1198, t1055, t1060, t978, t996, t1069, t1020, t1032, t1068, t1033, t1095, t918, t920, t909, t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, t1282, t1308, -t1283, -t1504, qJDD(4), -t1193, -t1194, 0, 0, t1215, t1212, t1154, -t1215, -t1150, t1344, t1407, t1438, t1086, t999, -t1105, t1045, t1091, t1103, t1092, t1133, t1413, t1414, t1405, t1449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1189, -t1149, t1505, t1255, t1252, -t1255, 0, -t1172, t1066, 0, t1106, t1047, t1093, t1104, t1094, t1134, t997, t998, t936, -pkin(9) * t946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, t1153, t1253, -t1392, t1209, -t1256, t1172, 0, t1067, 0, -t1196, -t1195, -t1118, t1196, t1114, -t1186, t961, t962, -pkin(5) * t1046, -pkin(5) * t946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1215, t1212, t1154, -t1215, -t1150, t1344, -t1066, -t1067, 0, 0, -t1105, t1045, t1091, t1103, t1092, t1133, t1439, t1440, t1416, t1491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, t1115, t1506, t1205, t1200, -t1205, 0, t1052, t994, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1206, t1117, t1201, t1138, t1123, -t1206, -t1052, 0, t995, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1196, t1195, t1118, -t1196, -t1114, t1186, -t994, -t995, 0, 0;];
m_new_reg  = t1;
