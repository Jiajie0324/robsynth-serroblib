% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RPPRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RPPRRP8_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPPRRP8_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:15:17
% EndTime: 2019-03-09 02:16:10
% DurationCPUTime: 48.81s
% Computational Cost: add. (25949->995), mult. (38140->1292), div. (0->0), fcn. (35814->8), ass. (0->487)
t858 = Icges(6,1) + Icges(7,1);
t836 = Icges(7,4) + Icges(6,5);
t835 = Icges(6,6) - Icges(7,6);
t417 = sin(qJ(5));
t880 = (Icges(6,4) - Icges(7,5)) * t417;
t857 = Icges(6,2) + Icges(7,3);
t879 = Icges(7,2) + Icges(6,3);
t419 = cos(qJ(5));
t878 = -t417 * t835 + t419 * t836;
t877 = t419 * t858 - t880;
t413 = pkin(9) + qJ(4);
t399 = cos(t413);
t418 = sin(qJ(1));
t604 = qJD(5) * t418;
t420 = cos(qJ(1));
t606 = qJD(4) * t420;
t341 = -t399 * t604 + t606;
t398 = sin(t413);
t377 = qJD(5) * t398 + qJD(1);
t663 = t418 * t419;
t666 = t417 * t420;
t331 = t398 * t666 + t663;
t662 = t420 * t419;
t664 = t418 * t417;
t332 = t398 * t662 - t664;
t669 = t399 * t420;
t831 = t398 * t836 + t877 * t399;
t849 = t398 * t879 + t399 * t878;
t670 = t399 * t419;
t373 = Icges(7,5) * t670;
t672 = t399 * t417;
t692 = Icges(6,4) * t419;
t500 = -Icges(6,2) * t417 + t692;
t873 = t398 * t835 + t399 * t500;
t850 = Icges(7,3) * t672 + t373 - t873;
t788 = -t331 * t850 - t332 * t831 + t669 * t849;
t330 = t398 * t663 + t666;
t671 = t399 * t418;
t329 = t398 * t664 - t662;
t688 = Icges(7,5) * t329;
t175 = Icges(7,1) * t330 - Icges(7,4) * t671 + t688;
t300 = Icges(6,4) * t329;
t178 = Icges(6,1) * t330 - Icges(6,5) * t671 - t300;
t851 = t175 + t178;
t166 = Icges(6,5) * t330 - Icges(6,6) * t329 - Icges(6,3) * t671;
t169 = Icges(7,4) * t330 - Icges(7,2) * t671 + Icges(7,6) * t329;
t852 = t166 + t169;
t297 = Icges(7,5) * t330;
t163 = -Icges(7,6) * t671 + Icges(7,3) * t329 + t297;
t694 = Icges(6,4) * t330;
t172 = -Icges(6,2) * t329 - Icges(6,6) * t671 + t694;
t853 = t163 - t172;
t791 = -t331 * t853 - t851 * t332 + t852 * t669;
t876 = -t341 * t791 - t788 * t377;
t168 = -Icges(6,5) * t332 + Icges(6,6) * t331 + Icges(6,3) * t669;
t171 = -Icges(7,4) * t332 + Icges(7,2) * t669 - Icges(7,6) * t331;
t777 = t168 + t171;
t846 = t329 * t853 + t330 * t851;
t298 = Icges(7,5) * t331;
t177 = -Icges(7,1) * t332 + Icges(7,4) * t669 - t298;
t301 = Icges(6,4) * t331;
t179 = Icges(6,1) * t332 - Icges(6,5) * t669 - t301;
t774 = -t179 + t177;
t299 = Icges(7,5) * t332;
t164 = -Icges(7,6) * t669 + Icges(7,3) * t331 + t299;
t302 = Icges(6,4) * t332;
t174 = Icges(6,2) * t331 + Icges(6,6) * t669 - t302;
t775 = -t174 - t164;
t847 = t775 * t331 + t774 * t332;
t875 = (-t418 * t852 - t420 * t777) * t399 + t846 + t847;
t840 = t329 * t775 + t330 * t774 - t671 * t777;
t686 = Icges(7,5) * t419;
t496 = Icges(7,3) * t417 + t686;
t767 = -t835 * t399 + (-t496 + t500) * t398;
t867 = -t398 * t878 + t399 * t879;
t766 = -t877 * t398 + t399 * t836;
t866 = (t419 * t857 + t880) * t399;
t865 = (-t417 * t836 - t835 * t419) * t399;
t602 = qJD(5) * t420;
t570 = t398 * t602;
t611 = qJD(1) * t420;
t547 = qJD(1) * t398 + qJD(5);
t571 = t399 * t606;
t758 = t547 * t418 - t571;
t147 = (-t570 - t611) * t419 + t758 * t417;
t148 = t377 * t666 + t419 * t758;
t612 = qJD(1) * t418;
t455 = -t398 * t606 - t399 * t612;
t75 = Icges(7,5) * t148 + Icges(7,6) * t455 + Icges(7,3) * t147;
t81 = Icges(6,4) * t148 - Icges(6,2) * t147 + Icges(6,6) * t455;
t864 = t75 - t81;
t479 = t547 * t420;
t608 = qJD(4) * t418;
t572 = t399 * t608;
t149 = t377 * t663 + (t479 + t572) * t417;
t607 = qJD(4) * t419;
t150 = t419 * t479 + (-t377 * t417 + t399 * t607) * t418;
t574 = t398 * t608;
t579 = t399 * t611;
t456 = t574 - t579;
t76 = Icges(7,5) * t150 + Icges(7,6) * t456 + Icges(7,3) * t149;
t82 = Icges(6,4) * t150 - Icges(6,2) * t149 + Icges(6,6) * t456;
t863 = t76 - t82;
t77 = Icges(6,5) * t148 - Icges(6,6) * t147 + Icges(6,3) * t455;
t79 = Icges(7,4) * t148 + Icges(7,2) * t455 + Icges(7,6) * t147;
t862 = t77 + t79;
t78 = Icges(6,5) * t150 - Icges(6,6) * t149 + Icges(6,3) * t456;
t80 = Icges(7,4) * t150 + Icges(7,2) * t456 + Icges(7,6) * t149;
t861 = t78 + t80;
t83 = Icges(7,1) * t148 + Icges(7,4) * t455 + Icges(7,5) * t147;
t85 = Icges(6,1) * t148 - Icges(6,4) * t147 + Icges(6,5) * t455;
t860 = t83 + t85;
t84 = Icges(7,1) * t150 + Icges(7,4) * t456 + Icges(7,5) * t149;
t86 = Icges(6,1) * t150 - Icges(6,4) * t149 + Icges(6,5) * t456;
t859 = t84 + t86;
t789 = t329 * t850 + t330 * t831 - t671 * t849;
t856 = qJD(4) * t767 + qJD(5) * t866;
t855 = qJD(4) * t867 + qJD(5) * t865;
t292 = (-Icges(6,1) * t417 - t692) * t399;
t605 = qJD(5) * t399;
t854 = (-Icges(7,1) * t417 + t686) * t605 + qJD(5) * t292 + t766 * qJD(4);
t848 = -t417 * t850 - t419 * t831;
t818 = rSges(7,1) + pkin(5);
t793 = -t671 * t852 + t846;
t839 = t669 * t777 - t847;
t817 = rSges(7,3) + qJ(6);
t340 = t399 * t602 + t608;
t489 = t174 * t417 + t179 * t419;
t491 = t172 * t417 - t178 * t419;
t492 = -t164 * t417 + t177 * t419;
t494 = t163 * t417 + t175 * t419;
t763 = t340 * (-t420 * t849 + t489 - t492) + t341 * (t418 * t849 + t491 - t494) + t377 * (t848 + t867);
t845 = t763 * t399;
t843 = t340 * (-t331 * t858 + t299 - t302 - t775) + t341 * (t329 * t858 - t297 + t694 - t853) + t377 * (Icges(7,1) * t672 - t292 - t373 - t850);
t842 = t340 * (t332 * t857 - t298 + t301 + t774) + t341 * (-t330 * t857 - t300 + t688 + t851) + t377 * (t831 - t866);
t805 = t147 * t853 + t148 * t851 - t331 * t863 - t332 * t859 + t455 * t852 + t669 * t861;
t804 = t147 * t775 + t148 * t774 - t331 * t864 - t332 * t860 + t455 * t777 + t669 * t862;
t802 = t149 * t853 + t150 * t851 + t329 * t863 + t330 * t859 + t456 * t852 - t671 * t861;
t801 = t149 * t775 + t150 * t774 + t329 * t864 + t330 * t860 + t456 * t777 - t671 * t862;
t795 = t147 * t850 + t148 * t831 - t331 * t856 - t332 * t854 + t455 * t849 + t669 * t855;
t794 = t149 * t850 + t150 * t831 + t329 * t856 + t330 * t854 + t456 * t849 - t671 * t855;
t841 = (t854 * t419 + t856 * t417 + (-t417 * t831 + t419 * t850) * qJD(5) + t849 * qJD(4)) * t399 + (qJD(4) * t848 + t855) * t398;
t67 = t169 * t398 + t399 * t494;
t69 = t166 * t398 - t399 * t491;
t838 = t67 + t69;
t68 = t171 * t398 + t399 * t492;
t70 = t168 * t398 - t399 * t489;
t837 = t68 + t70;
t786 = t398 * t849 - t399 * t848;
t832 = -t399 * t496 + t873;
t820 = t340 * t840 + t789 * t377;
t296 = qJD(6) * t329;
t815 = t817 * t331 + t332 * t818;
t646 = rSges(7,2) * t669 - t815;
t819 = -t377 * t646 + t296;
t798 = t341 * t793 + t820;
t797 = t340 * t839 - t876;
t525 = rSges(6,1) * t332 - rSges(6,2) * t331;
t186 = rSges(6,3) * t669 - t525;
t816 = t186 * t377;
t521 = rSges(7,1) * t419 + rSges(7,3) * t417;
t258 = rSges(7,2) * t398 + t399 * t521;
t520 = pkin(5) * t419 + qJ(6) * t417;
t636 = t520 * t399 + t258;
t601 = qJD(6) * t417;
t367 = t399 * t601;
t674 = t398 * t418;
t378 = pkin(4) * t674;
t316 = -pkin(8) * t671 + t378;
t379 = pkin(8) * t669;
t673 = t398 * t420;
t318 = pkin(4) * t673 - t379;
t533 = -t316 * t608 - t318 * t606;
t772 = t817 * t329 + t330 * t818;
t649 = -rSges(7,2) * t671 + t772;
t41 = -t340 * t649 + t341 * t646 + t367 + t533;
t371 = t420 * pkin(1) + t418 * qJ(2);
t414 = sin(pkin(9));
t668 = t414 * t418;
t388 = pkin(3) * t668;
t586 = t388 + t371;
t416 = -pkin(7) - qJ(3);
t661 = qJ(3) + t416;
t680 = qJ(3) * t420;
t534 = -t420 * t661 + t586 + t680;
t477 = t316 + t534;
t351 = pkin(4) * t399 + pkin(8) * t398;
t402 = qJD(2) * t420;
t746 = qJD(3) * t418;
t548 = -t402 + t746;
t530 = -t351 * t606 + t548;
t429 = t477 * qJD(1) + t530;
t295 = t331 * qJD(6);
t811 = -t341 * t636 + t649 * t377 - t295;
t46 = t429 + t811;
t553 = t46 * t636;
t814 = -t41 * t646 + t553;
t569 = t419 * t605;
t610 = qJD(4) * t398;
t813 = -t417 * t610 + t569;
t812 = t398 * t611 + t572;
t374 = Icges(5,4) * t671;
t690 = Icges(5,5) * t420;
t267 = Icges(5,1) * t674 + t374 + t690;
t695 = Icges(5,4) * t399;
t504 = Icges(5,1) * t398 + t695;
t268 = -Icges(5,5) * t418 + t420 * t504;
t345 = -Icges(5,2) * t398 + t695;
t290 = t345 * t420;
t441 = t418 * (t268 + t290) - t420 * (-Icges(5,2) * t674 + t267 + t374);
t696 = Icges(5,4) * t398;
t501 = Icges(5,2) * t399 + t696;
t265 = Icges(5,6) * t420 + t418 * t501;
t266 = -Icges(5,6) * t418 + t420 * t501;
t347 = Icges(5,1) * t399 - t696;
t293 = t347 * t418;
t294 = t347 * t420;
t442 = t418 * (t266 - t294) - t420 * (t265 - t293);
t810 = -t442 * t398 + t441 * t399;
t624 = t345 + t504;
t625 = -t501 + t347;
t809 = (t398 * t624 - t399 * t625) * qJD(1);
t808 = 0.2e1 * qJD(4);
t596 = qJD(4) * qJD(5);
t563 = t398 * t596;
t237 = -qJD(1) * t340 + t418 * t563;
t238 = qJD(1) * t341 - t420 * t563;
t562 = t399 * t596;
t807 = t237 * t791 + t238 * t839 + t340 * t804 + t341 * t805 + t377 * t795 + t562 * t788;
t806 = t237 * t793 + t238 * t840 + t340 * t801 + t341 * t802 + t377 * t794 + t562 * t789;
t587 = -pkin(4) * t571 + pkin(8) * t455;
t190 = qJD(1) * t378 + t587;
t187 = t190 * t606;
t588 = pkin(4) * t812 + pkin(8) * t574;
t191 = -pkin(8) * t579 + t588;
t436 = -t191 * t418 + (-t316 * t420 + t318 * t418) * qJD(1);
t568 = t398 * t601;
t782 = rSges(7,2) * t574 + t817 * t149 + t150 * t818 + t296;
t719 = -rSges(7,2) * t579 + t782;
t785 = -t817 * t147 - t148 * t818 + t295;
t720 = rSges(7,2) * t455 - t785;
t5 = qJD(6) * t569 + t187 + t720 * t341 - t719 * t340 - t649 * t238 + t646 * t237 + (t436 - t568) * qJD(4);
t803 = t5 * t646;
t16 = (-qJD(4) * t494 + t80) * t398 + (qJD(4) * t169 + t417 * t76 + t419 * t84 + (t163 * t419 - t175 * t417) * qJD(5)) * t399;
t18 = (qJD(4) * t491 + t78) * t398 + (qJD(4) * t166 - t417 * t82 + t419 * t86 + (-t172 * t419 - t178 * t417) * qJD(5)) * t399;
t800 = t16 + t18;
t17 = (-qJD(4) * t492 + t79) * t398 + (qJD(4) * t171 + t417 * t75 + t419 * t83 + (-t164 * t419 - t177 * t417) * qJD(5)) * t399;
t19 = (qJD(4) * t489 + t77) * t398 + (qJD(4) * t168 - t417 * t81 + t419 * t85 + (-t174 * t419 + t179 * t417) * qJD(5)) * t399;
t799 = t17 + t19;
t796 = t340 * t837 + t341 * t838 + t377 * t786;
t483 = t266 * t399 + t268 * t398;
t778 = t483 * t420;
t319 = t351 * t420;
t665 = t418 * t351;
t773 = t420 * t190 + t319 * t606 + t608 * t665;
t771 = t832 * t418;
t770 = t832 * t420;
t769 = t831 * t418;
t768 = t831 * t420;
t717 = rSges(4,2) * cos(pkin(9));
t745 = -rSges(4,1) * t668 - t420 * rSges(4,3) - t418 * t717;
t765 = t371 + t680 - t745;
t551 = -rSges(3,2) * t420 + t418 * rSges(3,3);
t764 = t371 + t551;
t760 = t865 * t377 + (-t329 * t836 - t330 * t835) * t341 + (t331 * t836 + t332 * t835) * t340;
t759 = -t340 * t777 - t341 * t852 - t377 * t849;
t757 = t418 * t838 - t420 * t837;
t756 = t418 * t837 + t420 * t838;
t755 = t418 * t791 - t420 * t839;
t754 = t418 * t839 + t420 * t791;
t753 = t418 * t793 - t420 * t840;
t752 = t418 * t840 + t420 * t793;
t747 = t377 * t841 + t562 * t786;
t524 = rSges(6,1) * t419 - rSges(6,2) * t417;
t259 = rSges(6,3) * t398 + t399 * t524;
t128 = t266 * t398 - t268 * t399;
t155 = qJD(1) * t265 - qJD(4) * t290;
t157 = -qJD(4) * t294 + (t418 * t504 + t690) * qJD(1);
t498 = Icges(5,5) * t398 + Icges(5,6) * t399;
t264 = -Icges(5,3) * t418 + t420 * t498;
t614 = qJD(1) * t264;
t742 = qJD(4) * t128 + t155 * t399 + t157 * t398 + t614;
t334 = t501 * qJD(4);
t335 = t504 * qJD(4);
t343 = Icges(5,5) * t399 - Icges(5,6) * t398;
t741 = qJD(1) * t343 + qJD(4) * (t345 * t398 - t347 * t399) + t334 * t399 + t335 * t398;
t156 = qJD(1) * t266 + t345 * t608;
t158 = qJD(1) * t268 + qJD(4) * t293;
t484 = t265 * t398 - t267 * t399;
t263 = Icges(5,3) * t420 + t418 * t498;
t615 = qJD(1) * t263;
t740 = qJD(4) * t484 - t156 * t399 - t158 * t398 + t615;
t738 = t237 / 0.2e1;
t737 = t238 / 0.2e1;
t736 = -t340 / 0.2e1;
t735 = t340 / 0.2e1;
t734 = -t341 / 0.2e1;
t733 = t341 / 0.2e1;
t732 = -t377 / 0.2e1;
t731 = t377 / 0.2e1;
t729 = t418 / 0.2e1;
t728 = -t420 / 0.2e1;
t726 = rSges(3,2) - pkin(1);
t725 = pkin(3) * t414;
t724 = pkin(4) * t398;
t723 = -pkin(1) + t416;
t715 = rSges(7,2) * t399;
t714 = rSges(3,3) * t420;
t712 = rSges(6,3) * t399;
t711 = t16 * t341;
t710 = t17 * t340;
t709 = t18 * t341;
t708 = t19 * t340;
t410 = t420 * rSges(5,3);
t627 = t330 * rSges(6,1) - t329 * rSges(6,2);
t182 = -rSges(6,3) * t671 + t627;
t61 = t182 * t377 - t259 * t341 + t429;
t703 = t61 * t259;
t702 = t67 * t237;
t701 = t68 * t238;
t700 = t69 * t237;
t699 = t70 * t238;
t593 = rSges(5,2) * t610;
t474 = -rSges(5,3) * qJD(1) - t593;
t589 = rSges(5,1) * t812 + rSges(5,2) * t579;
t162 = t418 * t474 + t589;
t349 = rSges(5,1) * t399 - rSges(5,2) * t398;
t320 = t349 * t608;
t527 = rSges(5,1) * t398 + rSges(5,2) * t399;
t338 = t527 * qJD(4);
t598 = qJD(1) * qJD(3);
t599 = qJD(1) * qJD(2);
t393 = qJ(2) * t611;
t401 = qJD(2) * t418;
t620 = t393 + t401;
t626 = qJD(1) * (-pkin(1) * t612 + t620) + t418 * t599;
t679 = qJ(3) * qJD(1) ^ 2;
t462 = -t418 * t679 + 0.2e1 * t420 * t598 + t626;
t577 = qJ(3) * t612;
t578 = t414 * t611;
t622 = pkin(3) * t578 + t416 * t612;
t454 = qJD(1) * (t577 + t622) + t462;
t71 = t338 * t606 + (t162 + t320) * qJD(1) + t454;
t698 = t71 * t420;
t309 = t349 * t420;
t161 = -qJD(4) * t309 + (t418 * t527 + t410) * qJD(1);
t392 = t420 * t599;
t478 = -0.2e1 * t418 * t598 - t420 * t679 + t392;
t576 = t349 * t606;
t336 = qJD(1) * t371 - t402;
t384 = t416 * t611;
t631 = t384 - (t388 - t680) * qJD(1) - t336;
t72 = -t338 * t608 + (-t161 + t576 + t631) * qJD(1) + t478;
t697 = t72 * t418;
t681 = qJ(3) * t418;
t350 = pkin(8) * t399 - t724;
t339 = qJD(4) * t350;
t676 = t339 * t420;
t675 = t343 * t420;
t667 = t414 * t420;
t285 = t418 * t343;
t256 = -t398 * t521 + t715;
t306 = (-rSges(7,1) * t417 + rSges(7,3) * t419) * t399;
t658 = t367 + t813 * qJ(6) + (-t398 * t607 - t417 * t605) * pkin(5) + qJD(4) * t256 + qJD(5) * t306;
t648 = -t182 - t316;
t645 = -t329 * t818 + t817 * t330;
t644 = t331 * t818 - t817 * t332;
t643 = t636 * t418;
t642 = -t258 * t420 - t520 * t669;
t637 = -t520 * t398 + t256;
t630 = t418 * t339 + t351 * t611;
t629 = (-pkin(5) * t417 + qJ(6) * t419) * t399 + t306;
t594 = t420 * t717;
t623 = rSges(4,1) * t578 + qJD(1) * t594;
t621 = t384 + t402;
t619 = rSges(3,2) * t612 + rSges(3,3) * t611;
t400 = qJD(3) * t420;
t618 = t400 + t401;
t404 = t420 * qJ(2);
t368 = pkin(1) * t418 - t404;
t617 = -qJD(1) * t368 + t401;
t616 = t404 - t379;
t613 = qJD(1) * t498;
t609 = qJD(4) * t399;
t482 = t345 * t399 + t347 * t398;
t126 = t420 * t482 - t285;
t600 = t126 * qJD(1);
t597 = qJD(1) * qJD(4);
t595 = -rSges(4,3) - pkin(1) - qJ(3);
t591 = t150 * rSges(6,1) - t149 * rSges(6,2) + rSges(6,3) * t574;
t590 = -t316 - t649;
t104 = t420 * t263 + t265 * t671 + t267 * t674;
t105 = -t420 * t264 - t266 * t671 - t268 * t674;
t269 = rSges(5,1) * t674 + rSges(5,2) * t671 + t410;
t585 = t393 + t618;
t584 = t400 + t617;
t583 = t399 * (-rSges(7,2) - pkin(8));
t582 = t399 * (-rSges(6,3) - pkin(8));
t564 = t351 * t597;
t561 = -t612 / 0.2e1;
t559 = t609 / 0.2e1;
t558 = -t608 / 0.2e1;
t557 = t608 / 0.2e1;
t556 = -t606 / 0.2e1;
t550 = -t368 - t681;
t549 = qJD(1) * t319 + t350 * t608;
t321 = pkin(3) * t667 + t418 * t661;
t546 = qJD(1) * t321 + t584;
t545 = t378 + t586;
t537 = qJD(5) * t559;
t536 = t724 + t725;
t535 = t321 + t550;
t531 = qJD(1) * t665 - t350 * t606;
t528 = rSges(4,1) * t414 + t717;
t526 = rSges(6,1) * t148 - rSges(6,2) * t147;
t257 = -t398 * t524 + t712;
t307 = (-rSges(6,1) * t417 - rSges(6,2) * t419) * t399;
t152 = qJD(4) * t257 + qJD(5) * t307;
t437 = qJD(1) * t191 + t418 * t564 + t454;
t90 = -rSges(6,3) * t579 + t591;
t27 = -t152 * t341 - t237 * t259 + t377 * t90 + (t182 * t605 - t676) * qJD(4) + t437;
t428 = t339 * t608 + t420 * t564 + (-t190 + t631) * qJD(1) + t478;
t88 = rSges(6,3) * t455 + t526;
t28 = t152 * t340 - t186 * t562 + t238 * t259 - t377 * t88 + t428;
t519 = t27 * t418 + t28 * t420;
t506 = -t587 + t621;
t505 = t585 + t622;
t408 = t418 * rSges(5,3);
t270 = t420 * t527 - t408;
t108 = t320 + (t270 + t535) * qJD(1) + t618;
t109 = -t576 + (t269 + t534) * qJD(1) + t548;
t495 = t108 * t418 - t109 * t420;
t488 = t182 * t420 + t186 * t418;
t485 = t265 * t399 + t267 * t398;
t324 = t351 * t608;
t475 = qJD(1) * t318 + t324 + t546;
t461 = (t104 * t420 + t105 * t418) * qJD(4);
t241 = t418 * t263;
t106 = -t420 * t485 + t241;
t107 = -t264 * t418 + t778;
t460 = (t106 * t420 + t107 * t418) * qJD(4);
t129 = (-t269 * t418 - t270 * t420) * qJD(4);
t459 = t536 - t715;
t458 = t536 - t712;
t457 = t527 + t725;
t435 = t324 + (t318 + t535) * qJD(1) + t618;
t45 = t340 * t636 + t435 + t819;
t7 = qJD(6) * t149 + t238 * t636 + t340 * t658 - t377 * t720 - t562 * t646 + t428;
t449 = t45 * t658 + t636 * t7;
t445 = -t45 * t646 + t46 * t649;
t444 = t41 * t649 - t45 * t636;
t443 = t505 + t588;
t440 = -qJD(1) * t483 - qJD(4) * t675 + t615;
t439 = qJD(1) * t485 + qJD(4) * t285 + t614;
t438 = t482 * qJD(1) - t498 * qJD(4);
t60 = t259 * t340 + t435 - t816;
t64 = -t182 * t340 + t186 * t341 + t533;
t425 = t64 * t488 + (-t418 * t61 - t420 * t60) * t259;
t424 = -t418 * t814 + t444 * t420;
t369 = rSges(3,2) * t418 + t714;
t326 = t351 * t612;
t304 = t349 * t418;
t279 = -rSges(4,3) * t418 + t420 * t528;
t274 = t420 * t318;
t240 = qJD(1) * t764 - t402;
t239 = t401 + (-t368 + t369) * qJD(1);
t230 = t259 * t420;
t228 = t259 * t418;
t212 = rSges(6,1) * t331 + rSges(6,2) * t332;
t208 = -rSges(6,1) * t329 - rSges(6,2) * t330;
t193 = t392 + (-qJD(1) * t551 - t336) * qJD(1);
t192 = qJD(1) * t619 + t626;
t160 = qJD(1) * t765 + t548;
t159 = (t279 + t550) * qJD(1) + t618;
t125 = t418 * t482 + t675;
t124 = (qJD(1) * t745 - t336) * qJD(1) + t478;
t123 = qJD(1) * (-rSges(4,3) * t612 + t623) + t462;
t122 = t125 * qJD(1);
t66 = qJD(4) * t483 - t155 * t398 + t157 * t399;
t65 = -qJD(4) * t485 - t156 * t398 + t158 * t399;
t63 = -t418 * t741 + t438 * t420;
t62 = t438 * t418 + t420 * t741;
t48 = t460 - t600;
t47 = t122 + t461;
t20 = qJD(4) * t436 - t182 * t238 + t186 * t237 - t340 * t90 + t341 * t88 + t187;
t6 = qJD(6) * t147 + t719 * t377 - t658 * t341 - t636 * t237 + (t605 * t649 - t676) * qJD(4) + t437;
t1 = [((t839 + t875) * t341 + t820) * t736 + ((-t793 + t875) * t340 + t797 + t876) * t734 + (t122 + ((-t106 + t241 + t105) * t418 + (t107 - t778 + (t264 - t485) * t418 + t104) * t420) * qJD(4)) * t558 - (t420 * t126 + (-t484 + t125) * t418) * t597 / 0.2e1 + (-(t475 - t577 - t60 - t816) * t61 - t703 * t340 + t28 * (t525 + t616) + t60 * (t506 - t526) + t27 * (t545 + t627) + t61 * (t443 + t591) + (rSges(6,3) * t60 * t610 - t27 * t416 + t28 * t458) * t420 + (-t60 * qJD(3) + t27 * t582 + t28 * t723) * t418 + ((-t60 * pkin(1) + t582 * t61) * t420 + (t60 * (-qJ(2) - t458) - t61 * pkin(1)) * t418) * qJD(1)) * m(6) + t794 * t733 + (t795 + t798) * t735 + (t66 + t62 + t47) * t557 + ((-t416 * t420 + t269 + t586) * t71 + (t418 * t723 + t420 * t457 + t404 - t408) * t72 + (t621 + (rSges(5,1) * t609 - pkin(1) * qJD(1) + t474) * t420 + (-qJD(3) + (-qJ(2) - t457) * qJD(1)) * t418) * t108 + (t108 - t320 - (t270 - t681) * qJD(1) - t546 + t505 + t589 + (-t593 + (-rSges(5,3) - pkin(1)) * qJD(1)) * t418) * t109) * m(5) + (t600 + (t264 * t418 ^ 2 + (-t241 + t105 + (t264 + t485) * t420) * t420) * qJD(4) + t48) * t556 + t747 + (-qJD(4) * t482 + t334 * t398 - t335 * t399) * qJD(1) + (-(qJD(1) * t369 - t239 + t617) * t240 + t193 * (t418 * t726 + t404 + t714) + t239 * t402 + t192 * t764 + t240 * (t619 + t620) + (t239 * t726 * t420 + (t239 * (-rSges(3,3) - qJ(2)) - t240 * pkin(1)) * t418) * qJD(1)) * m(3) + (t124 * (rSges(4,1) * t667 + t404 + t594) + t159 * t402 + t123 * t765 + t160 * (t585 + t623) + (-t159 * qJD(3) + t124 * t595) * t418 + (t159 * t595 * t420 + (t159 * (-qJ(2) - t528) + t160 * t595) * t418) * qJD(1) - (-t159 + (t279 - t681) * qJD(1) + t584) * t160) * m(4) + t708 / 0.2e1 + t709 / 0.2e1 + t788 * t737 + t789 * t738 + t710 / 0.2e1 + t711 / 0.2e1 + (qJD(1) * t128 + t63 + t65) * t606 / 0.2e1 + t699 / 0.2e1 + t700 / 0.2e1 + t701 / 0.2e1 + t702 / 0.2e1 + ((-t417 * t775 - t419 * t774) * t399 - t777 * t398 + t837) * t341 * t732 + (-t553 * t340 + t7 * (t616 + t815) + t6 * (t545 + t772) + (-t6 * t416 + t459 * t7) * t420 + (t583 * t6 + t7 * t723) * t418 + (t443 - t475 + t782 - t819) * t46 + (rSges(7,2) * t610 * t420 + t506 + t530 - t746 + t785 + t811) * t45 + (t45 * t477 + t46 * t681 + (-t45 * pkin(1) + t46 * t583) * t420 + (t45 * (-qJ(2) - t459) - t46 * pkin(1)) * t418) * qJD(1)) * m(7); 0.2e1 * (t6 * t728 + t7 * t729) * m(7) + 0.2e1 * (t27 * t728 + t28 * t729) * m(6) + 0.2e1 * (t697 / 0.2e1 - t698 / 0.2e1) * m(5) + 0.2e1 * (t123 * t728 + t124 * t729) * m(4) + 0.2e1 * (t192 * t728 + t193 * t729) * m(3); m(4) * (t123 * t418 + t124 * t420) + m(5) * (t418 * t71 + t420 * t72) + m(6) * t519 + m(7) * (t418 * t6 + t420 * t7); -qJD(1) * ((-t398 * t625 - t399 * t624) * qJD(1) + (t398 * t441 + t399 * t442) * qJD(4)) / 0.2e1 + ((t285 * t606 - t613) * t420 + (-t809 + (-t420 * t675 - t810) * qJD(4)) * t418) * t556 + qJD(1) * (t66 * t418 + t65 * t420 + (t128 * t420 + t418 * t484) * qJD(1)) / 0.2e1 + ((-t608 * t675 - t613) * t418 + (t809 + (t418 * t285 + t810) * qJD(4)) * t420) * t558 + t752 * t738 + t754 * t737 + ((t399 * t788 + t674 * t791) * qJD(5) + (t845 + (-qJD(5) * t839 + t759) * t398) * t420 + (-t331 * t767 - t332 * t766) * t377 + (t331 * t771 - t332 * t769) * t341 + (-t331 * t770 + t332 * t768) * t340) * t736 + (-qJD(1) * t755 + t418 * t804 + t420 * t805) * t735 + ((t767 * t329 + t766 * t330) * t377 + (-t771 * t329 + t769 * t330) * t341 + (t770 * t329 - t768 * t330) * t340 + (t399 * t789 - t673 * t840) * qJD(5) + (-t845 + (qJD(5) * t793 - t759) * t398) * t418) * t734 + (-qJD(1) * t753 + t418 * t801 + t420 * t802) * t733 + (((t417 * t767 + t419 * t766 + t849) * t377 + (-t417 * t771 + t419 * t769 + t852) * t341 + (t417 * t770 - t419 * t768 + t777) * t340 + t786 * qJD(5)) * t399 + (qJD(5) * t757 + t763) * t398) * t732 + (-qJD(1) * t757 + t418 * t799 + t420 * t800) * t731 - t796 * t605 / 0.2e1 - t798 * t398 * t604 / 0.2e1 + t797 * t570 / 0.2e1 + t756 * t537 + (-(t398 * t424 + t399 * t445) * qJD(5) + t7 * t665 - t5 * t274 + (qJD(1) * t553 + t5 * t590 + t449) * t418 + (t6 * (-t351 - t636) + t803) * t420 + (t637 * t341 - t643 * t377 + t326 - t531 + (t367 - t339 - t658) * t420) * t46 + (-t340 * t637 - t367 * t418 + t377 * t642 + t611 * t636 - t549 + t630) * t45 + (t568 - t642 * t341 + t643 * t340 + (-t191 - t719 + (t318 - t646) * qJD(1)) * t418 + (qJD(1) * t590 + t720) * t420 + t773) * t41) * m(7) + (-t60 * (t230 * t377 + t257 * t340 + t549) - t61 * (t228 * t377 - t257 * t341 + t531) - ((t182 * t61 - t186 * t60) * t399 + t425 * t398) * qJD(5) + t28 * t665 + t60 * t630 + t61 * t326 - t20 * t274 + (qJD(1) * t703 + t60 * t152 + t20 * t648 + t28 * t259) * t418 + (t27 * (-t259 - t351) + t61 * (-t152 - t339) + t20 * t186 + t60 * t259 * qJD(1)) * t420 + (t228 * t340 + t230 * t341 + (-t191 - t90 + (-t186 + t318) * qJD(1)) * t418 + (qJD(1) * t648 + t88) * t420 + t773) * t64) * m(6) + (-(t108 * t309 + t109 * t304) * qJD(1) - (t129 * (-t304 * t418 - t309 * t420) - t495 * t527) * qJD(4) + 0.2e1 * t129 * (t161 * t420 - t162 * t418 + (-t269 * t420 + t270 * t418) * qJD(1)) - t495 * t338 + (t697 - t698 + (t108 * t420 + t109 * t418) * qJD(1)) * t349) * m(5) + (qJD(1) * t62 + ((t439 * t418 + t420 * t740) * t420 + (t440 * t418 - t420 * t742) * t418 + (-t106 * t418 + t107 * t420) * qJD(1)) * t808 + t807) * t729 + (qJD(1) * t63 + ((-t418 * t740 + t439 * t420) * t420 + (t418 * t742 + t440 * t420) * t418 + (-t104 * t418 + t105 * t420) * qJD(1)) * t808 + t806) * t420 / 0.2e1 + (t461 + t47 + t798) * t561 + (t460 + t48 + t797) * t611 / 0.2e1; (t398 * t789 - t399 * t753) * t738 + (t398 * t788 - t399 * t755) * t737 + (t331 * t842 + t332 * t843 + t760 * t669) * t736 + ((-qJD(1) * t754 + qJD(4) * t788 - t418 * t805 + t420 * t804) * t399 + (qJD(4) * t755 + t795) * t398) * t735 + (-t329 * t842 - t330 * t843 - t671 * t760) * t734 + ((-qJD(1) * t752 + qJD(4) * t789 - t418 * t802 + t420 * t801) * t399 + (qJD(4) * t753 + t794) * t398) * t733 + ((-t417 * t842 - t419 * t843) * t399 + t760 * t398) * t732 + ((-qJD(1) * t756 + qJD(4) * t786 - t418 * t800 + t420 * t799) * t399 + (qJD(4) * t757 + t841) * t398) * t731 + (t699 + t700 + t708 + t709 + t701 + t702 + t710 + t711 + t747) * t398 / 0.2e1 - t806 * t671 / 0.2e1 + t807 * t669 / 0.2e1 + t796 * t559 + (t398 * t786 - t399 * t757) * t537 + (-(t330 * t45 - t332 * t46 + t41 * t670) * qJD(6) - (-t45 * t644 + t46 * t645) * t377 - (t41 * t644 - t46 * t629) * t341 - (-t41 * t645 + t45 * t629) * t340 + (qJD(4) * t424 - t45 * t720 + t46 * t719 + t6 * t649 - t646 * t7) * t398 + (t445 * qJD(4) + (qJD(1) * t814 - t41 * t719 - t5 * t649 + t449) * t420 + (qJD(1) * t444 - t41 * t720 + t46 * t658 + t6 * t636 - t803) * t418) * t399) * m(7) + ((qJD(4) * t425 + t27 * t182 - t28 * t186 - t60 * t88 + t61 * t90) * t398 + (t60 * (-qJD(4) * t186 + t152 * t420) + t61 * (qJD(4) * t182 + t152 * t418) - t20 * t488 + t64 * (t182 * t612 - t186 * t611 - t418 * t88 - t420 * t90) + ((-t418 * t60 + t420 * t61) * qJD(1) + t519) * t259) * t399 - t60 * (-t212 * t377 + t307 * t340) - t61 * (t208 * t377 - t307 * t341) - t64 * (-t208 * t340 + t212 * t341)) * m(6) + t797 * (t398 * t556 + t399 * t561) + t798 * (t398 * t557 - t579 / 0.2e1); (t5 * t672 + t329 * t7 - t331 * t6 + (-t329 * t377 + t341 * t672 + t147) * t46 + (-t331 * t377 - t340 * t672 + t149) * t45 + (t329 * t340 + t331 * t341 + t813) * t41) * m(7);];
tauc  = t1(:);
