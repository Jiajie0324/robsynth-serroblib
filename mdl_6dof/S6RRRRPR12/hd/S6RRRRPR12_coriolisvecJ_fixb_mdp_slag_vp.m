% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% MDP [33x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRPR12_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPR12_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(33,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [33 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [33x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:45:20
% EndTime: 2019-03-09 23:45:59
% DurationCPUTime: 23.11s
% Computational Cost: add. (28150->740), mult. (84188->1025), div. (0->0), fcn. (70466->14), ass. (0->323)
t855 = cos(pkin(7));
t862 = cos(qJ(3));
t863 = cos(qJ(2));
t994 = t862 * t863;
t858 = sin(qJ(3));
t859 = sin(qJ(2));
t997 = t858 * t859;
t887 = -t855 * t997 + t994;
t853 = sin(pkin(6));
t974 = qJD(1) * t853;
t788 = t887 * t974;
t852 = sin(pkin(7));
t969 = qJD(3) * t862;
t948 = t852 * t969;
t1048 = t788 - t948;
t1000 = t855 * t858;
t1003 = t852 * t858;
t839 = pkin(10) * t1003;
t999 = t855 * t862;
t1024 = pkin(2) * t999 - t839;
t1014 = cos(pkin(6));
t953 = pkin(1) * t1014;
t923 = t863 * t953;
t836 = qJD(1) * t923;
t916 = t853 * (-pkin(10) * t855 - pkin(9));
t892 = t859 * t916;
t768 = qJD(1) * t892 + t836;
t924 = t859 * t953;
t868 = t863 * t916 - t924;
t769 = t868 * qJD(1);
t1016 = pkin(10) * t852;
t880 = (pkin(2) * t859 - t1016 * t863) * t853;
t799 = qJD(1) * t880;
t1047 = t1024 * qJD(3) - t769 * t1000 - t799 * t1003 - t862 * t768;
t705 = -t769 * t852 + t855 * t799;
t995 = t859 * t862;
t996 = t858 * t863;
t889 = t855 * t995 + t996;
t787 = t889 * t974;
t1046 = pkin(3) * t787 - pkin(11) * t788 + t705 - (pkin(3) * t858 - pkin(11) * t862) * t852 * qJD(3);
t952 = t859 * t974;
t922 = t852 * t952;
t1045 = pkin(11) * t922 - t1047;
t857 = sin(qJ(4));
t861 = cos(qJ(4));
t815 = t1003 * t861 + t855 * t857;
t981 = -qJD(4) * t815 + t1048 * t857 - t861 * t922;
t814 = t1003 * t857 - t861 * t855;
t980 = -qJD(4) * t814 - t1048 * t861 - t857 * t922;
t970 = qJD(3) * t858;
t949 = t852 * t970;
t1034 = t787 - t949;
t1044 = t1046 * t861;
t1002 = t852 * t862;
t976 = pkin(2) * t1000 + pkin(10) * t1002;
t804 = pkin(11) * t855 + t976;
t805 = (-pkin(3) * t862 - pkin(11) * t858 - pkin(2)) * t852;
t967 = qJD(4) * t861;
t968 = qJD(4) * t857;
t1043 = t1045 * t861 + t1046 * t857 + t804 * t968 - t805 * t967;
t951 = t863 * t974;
t919 = t855 * t951;
t825 = t862 * t919;
t939 = t1014 * qJD(1);
t895 = t939 + qJD(2);
t882 = t852 * t895;
t921 = t858 * t952;
t734 = -t862 * t882 - t825 + t921;
t732 = qJD(4) + t734;
t979 = t861 * t804 + t857 * t805;
t1042 = -t1034 * pkin(4) - t980 * qJ(5) - qJD(4) * t979 - qJD(5) * t815 + t1045 * t857 - t1044;
t1001 = t853 * t863;
t874 = pkin(9) * t1001 + t924;
t726 = t874 * qJD(1) + (t882 + t919) * pkin(10);
t869 = pkin(2) * t1014 + t892;
t733 = qJD(2) * pkin(2) + qJD(1) * t869 + t836;
t795 = (-pkin(2) * t863 - t1016 * t859 - pkin(1)) * t853;
t783 = qJD(1) * t795;
t662 = -t858 * t726 + t862 * (t733 * t855 + t783 * t852);
t888 = t855 * t996 + t995;
t877 = t888 * t853;
t736 = qJD(1) * t877 + t858 * t882;
t681 = pkin(3) * t736 + pkin(11) * t734;
t680 = t861 * t681;
t1015 = -qJ(5) - pkin(11);
t941 = qJD(4) * t1015;
t1041 = -pkin(4) * t736 - t680 + (-qJ(5) * t734 + t941) * t861 + (-qJD(5) + t662) * t857;
t1040 = -qJ(5) * t981 + qJD(5) * t814 + t1043;
t1006 = t734 * t857;
t988 = t861 * t662 + t857 * t681;
t1039 = qJ(5) * t1006 - qJD(5) * t861 - t857 * t941 + t988;
t947 = t855 * t970;
t1033 = pkin(2) * t947 + pkin(10) * t948 - t858 * t768 + t769 * t999;
t978 = t852 * (pkin(3) * t952 + t799 * t862) + t1033;
t1038 = -pkin(4) * t981 + t978;
t851 = sin(pkin(13));
t854 = cos(pkin(13));
t1036 = -t851 * t981 - t980 * t854;
t821 = t851 * t857 - t854 * t861;
t1035 = t732 * t821;
t985 = t980 * t851 - t854 * t981;
t822 = t851 * t861 + t854 * t857;
t977 = t732 * t822;
t790 = t852 * t951 - t855 * t895 - qJD(3);
t690 = t736 * t857 + t861 * t790;
t692 = t736 * t861 - t790 * t857;
t933 = -t854 * t690 - t692 * t851;
t1021 = qJD(6) - t933;
t856 = sin(qJ(6));
t900 = -t690 * t851 + t854 * t692;
t1009 = t900 * t856;
t860 = cos(qJ(6));
t617 = -t860 * t732 + t1009;
t1032 = t1021 * t617;
t619 = t732 * t856 + t860 * t900;
t1031 = t1021 * t619;
t929 = t1021 * t860;
t875 = qJD(3) * t882;
t963 = qJD(1) * qJD(2);
t943 = t853 * t963;
t917 = t863 * t943;
t971 = qJD(2) * t855;
t693 = qJD(3) * t825 + (-qJD(3) - t971) * t921 + (t875 + t917) * t862;
t918 = t859 * t943;
t896 = t852 * t918;
t625 = t861 * t693 - t736 * t968 - t790 * t967 + t857 * t896;
t626 = qJD(4) * t692 + t693 * t857 - t861 * t896;
t584 = t625 * t851 + t854 * t626;
t998 = t856 * t584;
t1030 = -t1021 * t929 - t998;
t848 = t853 ^ 2;
t1029 = -0.2e1 * t848 * t963;
t1028 = MDP(5) * (t859 ^ 2 - t863 ^ 2);
t1027 = MDP(6) * t863;
t767 = t923 + t869;
t898 = t767 * t855 + t795 * t852;
t1025 = t862 * t898;
t992 = t1040 * t851 + t1042 * t854;
t991 = -t1040 * t854 + t1042 * t851;
t701 = -t767 * t852 + t855 * t795;
t1022 = t855 * t994 - t997;
t940 = t1014 * t852;
t760 = -t1022 * t853 - t862 * t940;
t761 = t858 * t940 + t877;
t658 = pkin(3) * t760 - pkin(11) * t761 + t701;
t811 = t1001 * t852 - t1014 * t855;
t754 = (t1001 * t855 + t940) * pkin(10) + t874;
t956 = t767 * t1000 + t795 * t1003 + t862 * t754;
t666 = -pkin(11) * t811 + t956;
t987 = t857 * t658 + t861 * t666;
t984 = t1039 * t851 + t1041 * t854;
t982 = -t1039 * t854 + t1041 * t851;
t663 = t733 * t1000 + t783 * t1003 + t862 * t726;
t1023 = -t663 + (t1006 + t968) * pkin(4);
t683 = -t733 * t852 + t855 * t783;
t632 = pkin(3) * t734 - pkin(11) * t736 + t683;
t637 = -pkin(11) * t790 + t663;
t589 = t632 * t857 + t637 * t861;
t911 = qJD(2) * t939;
t893 = pkin(1) * t911;
t832 = t863 * t893;
t885 = qJD(2) * t892;
t751 = qJD(1) * t885 + t832;
t771 = t868 * qJD(2);
t752 = qJD(1) * t771;
t800 = qJD(2) * t880;
t791 = qJD(1) * t800;
t946 = t855 * t969;
t608 = t752 * t1000 + t791 * t1003 - t726 * t970 + t733 * t946 + t862 * t751 + t783 * t948;
t606 = pkin(11) * t896 + t608;
t1019 = qJD(2) * t889 + qJD(3) * t888;
t865 = t1019 * t853;
t871 = t858 * t875;
t694 = qJD(1) * t865 + t871;
t698 = -t752 * t852 + t855 * t791;
t616 = pkin(3) * t694 - pkin(11) * t693 + t698;
t549 = -qJD(4) * t589 - t606 * t857 + t861 * t616;
t534 = pkin(4) * t694 - qJ(5) * t625 - qJD(5) * t692 + t549;
t548 = t861 * t606 + t857 * t616 + t632 * t967 - t637 * t968;
t538 = -qJ(5) * t626 - qJD(5) * t690 + t548;
t525 = t534 * t854 - t538 * t851;
t523 = -pkin(5) * t694 - t525;
t845 = pkin(4) * t851 + pkin(12);
t1020 = t1021 * (pkin(4) * t692 + pkin(5) * t900 - pkin(12) * t933 + qJD(6) * t845) + t523;
t864 = qJD(1) ^ 2;
t915 = qJD(3) * t940;
t703 = t862 * t915 + (t887 * qJD(2) + qJD(3) * t1022) * t853;
t708 = t761 * t861 - t811 * t857;
t972 = qJD(2) * t853;
t950 = t859 * t972;
t920 = t852 * t950;
t652 = qJD(4) * t708 + t703 * t857 - t861 * t920;
t1018 = pkin(4) * t652;
t707 = t761 * t857 + t811 * t861;
t1017 = pkin(4) * t707;
t585 = t625 * t854 - t626 * t851;
t965 = qJD(6) * t860;
t957 = t860 * t585 + t856 * t694 + t732 * t965;
t966 = qJD(6) * t856;
t558 = -t900 * t966 + t957;
t1013 = t558 * t856;
t576 = -qJ(5) * t690 + t589;
t1012 = t576 * t851;
t1011 = t617 * t900;
t1010 = t619 * t900;
t1008 = t690 * t732;
t1007 = t692 * t732;
t1005 = t822 * t860;
t1004 = t848 * t864;
t573 = t854 * t576;
t582 = t860 * t584;
t526 = t851 * t534 + t854 * t538;
t653 = -qJD(4) * t707 + t703 * t861 + t857 * t920;
t702 = t858 * t915 + t865;
t837 = qJD(2) * t923;
t770 = t837 + t885;
t872 = t771 * t1000 + t800 * t1003 - t754 * t970 + t767 * t946 + t862 * t770 + t795 * t948;
t612 = pkin(11) * t920 + t872;
t706 = -t771 * t852 + t855 * t800;
t623 = pkin(3) * t702 - pkin(11) * t703 + t706;
t867 = -qJD(4) * t987 - t612 * t857 + t861 * t623;
t540 = pkin(4) * t702 - qJ(5) * t653 - qJD(5) * t708 + t867;
t884 = t861 * t612 + t857 * t623 + t658 * t967 - t666 * t968;
t543 = -qJ(5) * t652 - qJD(5) * t707 + t884;
t530 = t851 * t540 + t854 * t543;
t588 = t861 * t632 - t637 * t857;
t575 = -qJ(5) * t692 + t588;
t570 = pkin(4) * t732 + t575;
t547 = t851 * t570 + t573;
t934 = t861 * t658 - t666 * t857;
t580 = pkin(4) * t760 - qJ(5) * t708 + t934;
t587 = -qJ(5) * t707 + t987;
t555 = t851 * t580 + t854 * t587;
t993 = pkin(5) * t1034 - t992;
t729 = -t814 * t851 + t815 * t854;
t709 = t1002 * t860 + t729 * t856;
t990 = -qJD(6) * t709 - t1034 * t856 - t1036 * t860;
t959 = t856 * t1002;
t989 = -qJD(6) * t959 + t1034 * t860 - t1036 * t856 + t729 * t965;
t931 = -t804 * t857 + t861 * t805;
t689 = -pkin(4) * t1002 - qJ(5) * t815 + t931;
t699 = -qJ(5) * t814 + t979;
t645 = t851 * t689 + t854 * t699;
t983 = pkin(5) * t736 - t984;
t973 = qJD(2) * t852 ^ 2;
t962 = pkin(1) * t1004;
t954 = -pkin(4) * t861 - pkin(3);
t945 = t857 * t1015;
t743 = t858 * t754;
t942 = pkin(3) * t811 + t743;
t524 = pkin(12) * t694 + t526;
t890 = -t791 * t1002 + t726 * t969 + t733 * t947 + t858 * t751 - t752 * t999 + t783 * t949;
t607 = -pkin(3) * t896 + t890;
t572 = pkin(4) * t626 + t607;
t536 = pkin(5) * t584 - pkin(12) * t585 + t572;
t938 = -t524 * t856 + t860 * t536;
t937 = t585 * t856 - t860 * t694;
t936 = t1035 * t856 - t860 * t736;
t935 = t1035 * t860 + t736 * t856;
t930 = t732 * t861;
t927 = t848 * t859 * t863 * MDP(4);
t925 = t754 * t969 + t767 * t947 + t858 * t770 + t795 * t949;
t914 = t853 * t864 * t1014;
t913 = pkin(1) * t1029;
t728 = t854 * t814 + t815 * t851;
t803 = t839 + (-pkin(2) * t862 - pkin(3)) * t855;
t873 = pkin(4) * t814 + t803;
t664 = pkin(5) * t728 - pkin(12) * t729 + t873;
t908 = pkin(12) * t1034 - qJD(6) * t664 - t991;
t747 = pkin(5) * t821 - pkin(12) * t822 + t954;
t907 = pkin(12) * t736 - qJD(6) * t747 - t982;
t833 = t1015 * t861;
t781 = -t854 * t833 + t851 * t945;
t906 = -pkin(5) * t977 - pkin(12) * t1035 + qJD(6) * t781 - t1023;
t634 = -pkin(12) * t1002 + t645;
t905 = -pkin(5) * t985 - pkin(12) * t1036 + qJD(6) * t634 - t1038;
t904 = t524 * t860 + t536 * t856;
t529 = t540 * t854 - t543 * t851;
t545 = pkin(12) * t732 + t547;
t636 = pkin(3) * t790 - t662;
t610 = pkin(4) * t690 + qJD(5) + t636;
t566 = -pkin(5) * t933 - pkin(12) * t900 + t610;
t532 = t545 * t860 + t566 * t856;
t903 = t545 * t856 - t566 * t860;
t553 = pkin(12) * t760 + t555;
t665 = t942 - t1025;
t667 = t854 * t707 + t708 * t851;
t668 = -t707 * t851 + t708 * t854;
t571 = pkin(5) * t667 - pkin(12) * t668 + t1017 + t665;
t902 = t553 * t860 + t571 * t856;
t901 = -t553 * t856 + t571 * t860;
t546 = t570 * t854 - t1012;
t554 = t580 * t854 - t587 * t851;
t629 = t668 * t860 + t760 * t856;
t628 = t668 * t856 - t760 * t860;
t644 = t689 * t854 - t699 * t851;
t897 = t771 * t855 + t800 * t852;
t891 = t582 + (t856 * t933 - t966) * t1021;
t886 = -pkin(11) * t694 + t636 * t732;
t879 = t822 * t965 - t936;
t878 = -t822 * t966 - t935;
t544 = -pkin(5) * t732 - t546;
t551 = t575 * t854 - t1012;
t870 = -t845 * t584 + (t544 + t551) * t1021;
t866 = t895 * t874;
t613 = -t771 * t999 + (-pkin(3) * t950 - t800 * t862) * t852 + t925;
t846 = -pkin(4) * t854 - pkin(5);
t780 = -t833 * t851 - t854 * t945;
t710 = t729 * t860 - t959;
t633 = pkin(5) * t1002 - t644;
t600 = -t652 * t851 + t653 * t854;
t599 = t854 * t652 + t653 * t851;
t568 = qJD(6) * t629 + t600 * t856 - t702 * t860;
t567 = -qJD(6) * t628 + t600 * t860 + t702 * t856;
t559 = qJD(6) * t619 + t937;
t552 = -pkin(5) * t760 - t554;
t550 = t575 * t851 + t573;
t541 = pkin(5) * t599 - pkin(12) * t600 + t1018 + t613;
t528 = pkin(12) * t702 + t530;
t527 = -pkin(5) * t702 - t529;
t522 = -qJD(6) * t532 + t938;
t521 = -qJD(6) * t903 + t904;
t1 = [(-t525 * t668 - t526 * t667 - t529 * t900 + t530 * t933 - t546 * t600 - t547 * t599 - t554 * t585 - t555 * t584) * MDP(25) + (-qJD(2) * t866 + t859 * t913 - t874 * t911) * MDP(9) + (-(t862 * t897 - t925) * t790 + t890 * t811 + t706 * t734 + t701 * t694 + t698 * t760 + t683 * t702 + (t662 + (-t743 + t1025) * qJD(1)) * t920) * MDP(16) + ((-qJD(6) * t902 - t528 * t856 + t541 * t860) * t1021 + t901 * t584 + t522 * t667 - t903 * t599 + t527 * t617 + t552 * t559 + t523 * t628 + t544 * t568) * MDP(32) + (-(qJD(6) * t901 + t528 * t860 + t541 * t856) * t1021 - t902 * t584 - t521 * t667 - t532 * t599 + t527 * t619 + t552 * t558 + t523 * t629 + t544 * t567) * MDP(33) + (t1021 * t567 + t558 * t667 + t584 * t629 + t599 * t619) * MDP(29) + (-t1021 * t568 - t559 * t667 - t584 * t628 - t599 * t617) * MDP(30) + (t1021 * t599 + t584 * t667) * MDP(31) + (-MDP(7) * t950 + t1027 * t972) * (0.2e1 * t939 + qJD(2)) + (-t548 * t760 - t589 * t702 + t607 * t708 + t613 * t692 + t665 * t625 + t636 * t653 - t694 * t987 - t732 * t884) * MDP(24) + (t549 * t760 + t588 * t702 + t607 * t707 + t613 * t690 + t665 * t626 + t636 * t652 + t694 * t934 + t732 * t867) * MDP(23) + (t526 * t555 + t547 * t530 + t525 * t554 + t546 * t529 + t572 * (t942 + t1017) + t610 * (-pkin(3) * t920 + t1018 + t925) + (-t572 * t898 - t610 * t897) * t862) * MDP(26) + (t863 * t913 - (-pkin(9) * t950 + t837) * t895 - (-pkin(9) * t918 + t832) * t1014) * MDP(10) + (t872 * t790 + t608 * t811 + t706 * t736 + t701 * t693 + t698 * t761 + t683 * t703 + (-qJD(1) * t956 - t663) * t920) * MDP(17) + (t625 * t708 + t653 * t692) * MDP(18) + (-t625 * t707 - t626 * t708 - t652 * t692 - t653 * t690) * MDP(19) + (-t558 * t628 - t559 * t629 - t567 * t617 - t568 * t619) * MDP(28) + (t558 * t629 + t567 * t619) * MDP(27) + (-t693 * t811 - t703 * t790 + (qJD(1) * t761 + t736) * t920) * MDP(13) + (t694 * t811 + t702 * t790 + (-qJD(1) * t760 - t734) * t920) * MDP(14) + t1028 * t1029 + 0.2e1 * t927 * t963 + (-t626 * t760 - t652 * t732 - t690 * t702 - t694 * t707) * MDP(21) + (t625 * t760 + t653 * t732 + t692 * t702 + t694 * t708) * MDP(20) + (t694 * t760 + t702 * t732) * MDP(22) + (-t693 * t760 - t694 * t761 - t702 * t736 - t703 * t734) * MDP(12) + (t693 * t761 + t703 * t736) * MDP(11) + (-qJD(1) * t811 - t790) * MDP(15) * t920; (t548 * t1002 + t1034 * t589 + t1043 * t732 + t607 * t815 + t803 * t625 + t980 * t636 + t978 * t692 - t979 * t694) * MDP(24) + (-t890 * t855 - t683 * t787 - t705 * t734 + t1033 * t790 + (t683 * t970 - pkin(2) * t694 + (t790 * t799 - t698) * t862 + (qJD(2) * t1024 - t662) * t952) * t852) * MDP(16) + (t931 * t694 - t549 * t1002 + t803 * t626 + t607 * t814 + (-t804 * t967 + (-qJD(4) * t805 + t1045) * t857 - t1044) * t732 + t978 * t690 - t981 * t636 - t1034 * t588) * MDP(23) + (-pkin(9) * t917 + qJD(1) * t866) * MDP(9) + (-t608 * t855 - t683 * t788 - t705 * t736 + t1047 * t790 + (t683 * t969 - pkin(2) * t693 + t698 * t858 + (-qJD(2) * t976 + t663) * t952) * t852) * MDP(17) + ((-t634 * t856 + t664 * t860) * t584 + t522 * t728 + t633 * t559 + t523 * t709 + (t856 * t908 - t860 * t905) * t1021 + t993 * t617 + t989 * t544 - t985 * t903) * MDP(32) + (t1021 * t985 + t584 * t728) * MDP(31) + (-t1021 * t989 - t559 * t728 - t584 * t709 - t617 * t985) * MDP(30) + (t1021 * t990 + t558 * t728 + t584 * t710 + t619 * t985) * MDP(29) + (-(t634 * t860 + t664 * t856) * t584 - t521 * t728 + t633 * t558 + t523 * t710 + (t856 * t905 + t860 * t908) * t1021 + t993 * t619 + t990 * t544 - t985 * t532) * MDP(33) + (MDP(7) * t914 + (-t893 + t962) * MDP(9)) * t859 - t864 * t927 - t914 * t1027 + (t734 * t788 + t736 * t787 + (t693 * t862 - t694 * t858 + (-t734 * t862 - t736 * t858) * qJD(3)) * t852) * MDP(12) + (t625 * t815 + t692 * t980) * MDP(18) + (-t625 * t814 - t626 * t815 - t690 * t980 + t692 * t981) * MDP(19) + (-t1002 * t694 - t1034 * t732) * MDP(22) + (-t1002 * t625 - t1034 * t692 + t694 * t815 + t732 * t980) * MDP(20) + (t1002 * t626 + t1034 * t690 - t694 * t814 + t732 * t981) * MDP(21) + (-t694 * t855 - t1034 * t790 + (t734 * t852 + t862 * t973) * t952) * MDP(14) + (t1003 * t693 - t1048 * t736) * MDP(11) + (t693 * t855 + t1048 * t790 + (-t736 * t852 + t858 * t973) * t952) * MDP(13) + (t558 * t710 + t619 * t990) * MDP(27) + (t1036 * t546 - t525 * t729 - t526 * t728 - t985 * t547 - t584 * t645 - t585 * t644 - t992 * t900 + t991 * t933) * MDP(25) + (-t558 * t709 - t559 * t710 - t617 * t990 - t619 * t989) * MDP(28) + (t1038 * t610 + t525 * t644 + t526 * t645 + t992 * t546 + t991 * t547 + t572 * t873) * MDP(26) + t1004 * t1028 + (t790 + t971) * MDP(15) * t922 + (-t832 + t863 * t962 + (-pkin(9) * t952 + t836) * t939 + t836 * qJD(2)) * MDP(10); -t734 ^ 2 * MDP(12) + (-t734 * t790 + t693) * MDP(13) + (-t1019 * t974 - t871) * MDP(14) + MDP(15) * t896 + (-t663 * t790 - t890) * MDP(16) + (-t662 * t790 + t683 * t734 - t608) * MDP(17) + (t625 * t857 + t692 * t930) * MDP(18) + ((t625 - t1008) * t861 + (-t626 - t1007) * t857) * MDP(19) + (t694 * t857 + t732 * t930) * MDP(20) + (-t732 ^ 2 * t857 + t694 * t861) * MDP(21) + (-pkin(3) * t626 - t607 * t861 - t663 * t690 + (-pkin(11) * t967 - t680) * t732 + (t662 * t732 + t886) * t857) * MDP(23) + (-pkin(3) * t625 + t607 * t857 - t663 * t692 + (pkin(11) * t968 + t988) * t732 + t886 * t861) * MDP(24) + (t1035 * t546 - t525 * t822 - t526 * t821 - t977 * t547 - t584 * t781 + t585 * t780 - t984 * t900 + t982 * t933) * MDP(25) + (t1023 * t610 - t525 * t780 + t526 * t781 + t984 * t546 + t982 * t547 + t572 * t954) * MDP(26) + (t1005 * t558 + t619 * t878) * MDP(27) + (t936 * t619 + t935 * t617 + (-t1013 - t559 * t860 + (t617 * t856 - t619 * t860) * qJD(6)) * t822) * MDP(28) + (t1021 * t878 + t558 * t821 + t582 * t822 + t619 * t977) * MDP(29) + (-t1021 * t879 - t559 * t821 - t617 * t977 - t822 * t998) * MDP(30) + (t1021 * t977 + t584 * t821) * MDP(31) + ((t747 * t860 - t781 * t856) * t584 + t522 * t821 + t780 * t559 + t523 * t856 * t822 + (t856 * t907 - t860 * t906) * t1021 + t983 * t617 - t977 * t903 + t879 * t544) * MDP(32) + (-(t747 * t856 + t781 * t860) * t584 - t521 * t821 + t780 * t558 + t523 * t1005 + (t856 * t906 + t860 * t907) * t1021 + t983 * t619 - t977 * t532 + t878 * t544) * MDP(33) + (MDP(11) * t734 + MDP(12) * t736 - MDP(14) * t790 - MDP(16) * t683 - MDP(20) * t692 + MDP(21) * t690 - MDP(22) * t732 - MDP(23) * t588 + MDP(24) * t589) * t736; t692 * t690 * MDP(18) + (-t690 ^ 2 + t692 ^ 2) * MDP(19) + (t625 + t1008) * MDP(20) + (t1007 - t626) * MDP(21) + t694 * MDP(22) + (t589 * t732 - t636 * t692 + t549) * MDP(23) + (t588 * t732 + t636 * t690 - t548) * MDP(24) + ((-t584 * t851 - t585 * t854) * pkin(4) + (t546 - t551) * t933 + (t547 - t550) * t900) * MDP(25) + (t546 * t550 - t547 * t551 + (t525 * t854 + t526 * t851 - t610 * t692) * pkin(4)) * MDP(26) + (t619 * t929 + t1013) * MDP(27) + ((t558 - t1032) * t860 + (-t559 - t1031) * t856) * MDP(28) + (-t1010 - t1030) * MDP(29) + (t891 + t1011) * MDP(30) - t1021 * t900 * MDP(31) + (-t1020 * t860 - t550 * t617 + t846 * t559 + t870 * t856 + t900 * t903) * MDP(32) + (t1020 * t856 + t532 * t900 - t550 * t619 + t846 * t558 + t870 * t860) * MDP(33); (-t900 ^ 2 - t933 ^ 2) * MDP(25) + (t546 * t900 - t547 * t933 + t572) * MDP(26) + (t891 - t1011) * MDP(32) + (-t1010 + t1030) * MDP(33); t619 * t617 * MDP(27) + (-t617 ^ 2 + t619 ^ 2) * MDP(28) + (t957 + t1032) * MDP(29) + (-t937 + t1031) * MDP(30) + t584 * MDP(31) + (t1021 * t532 - t544 * t619 + t938) * MDP(32) + (-t1021 * t903 + t544 * t617 - t904) * MDP(33) + (-MDP(29) * t1009 - MDP(30) * t619 - MDP(32) * t532 + MDP(33) * t903) * qJD(6);];
tauc  = t1;
