% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR12_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:44:41
% EndTime: 2019-03-09 23:44:59
% DurationCPUTime: 6.17s
% Computational Cost: add. (15669->514), mult. (47312->966), div. (0->0), fcn. (48422->14), ass. (0->232)
t190 = cos(pkin(7));
t193 = sin(qJ(3));
t274 = t190 * t193;
t188 = sin(pkin(7));
t197 = cos(qJ(3));
t276 = t188 * t197;
t264 = pkin(2) * t274 + pkin(10) * t276;
t148 = t190 * pkin(11) + t264;
t149 = (-pkin(3) * t197 - pkin(11) * t193 - pkin(2)) * t188;
t192 = sin(qJ(4));
t196 = cos(qJ(4));
t98 = t196 * t148 + t192 * t149;
t198 = cos(qJ(2));
t265 = t197 * t198;
t194 = sin(qJ(2));
t270 = t193 * t194;
t297 = t190 * t265 - t270;
t284 = cos(pkin(6));
t247 = pkin(1) * t284;
t231 = t194 * t247;
t189 = sin(pkin(6));
t275 = t189 * t198;
t204 = -pkin(9) * t275 - t231;
t238 = t284 * t188;
t117 = (t190 * t275 + t238) * pkin(10) - t204;
t227 = t189 * (-pkin(10) * t190 - pkin(9));
t218 = t194 * t227;
t125 = t284 * pkin(2) + t198 * t247 + t218;
t293 = pkin(10) * t188;
t140 = (-pkin(2) * t198 - t194 * t293 - pkin(1)) * t189;
t296 = -t193 * t117 + (t125 * t190 + t140 * t188) * t197;
t295 = 0.2e1 * t188;
t294 = 2 * qJD(6);
t292 = pkin(11) * t188;
t291 = -qJ(5) - pkin(11);
t187 = sin(pkin(13));
t121 = -t297 * t189 - t197 * t238;
t268 = t194 * t197;
t269 = t193 * t198;
t213 = t190 * t269 + t268;
t122 = t189 * t213 + t193 * t238;
t87 = -t188 * t125 + t190 * t140;
t67 = t121 * pkin(3) - t122 * pkin(11) + t87;
t156 = t188 * t275 - t284 * t190;
t111 = t125 * t274;
t277 = t188 * t193;
t248 = t197 * t117 + t140 * t277 + t111;
t72 = -t156 * pkin(11) + t248;
t38 = -t192 * t72 + t196 * t67;
t93 = t122 * t196 - t156 * t192;
t27 = t121 * pkin(4) - t93 * qJ(5) + t38;
t283 = cos(pkin(13));
t39 = t192 * t67 + t196 * t72;
t92 = t122 * t192 + t156 * t196;
t30 = -t92 * qJ(5) + t39;
t17 = t187 * t27 + t283 * t30;
t160 = t192 * t190 + t196 * t277;
t97 = -t192 * t148 + t196 * t149;
t79 = -pkin(4) * t276 - t160 * qJ(5) + t97;
t159 = -t196 * t190 + t192 * t277;
t85 = -t159 * qJ(5) + t98;
t57 = t187 * t79 + t283 * t85;
t191 = sin(qJ(6));
t195 = cos(qJ(6));
t74 = -t187 * t92 + t283 * t93;
t222 = t121 * t195 - t191 * t74;
t262 = qJD(2) * t194;
t241 = t189 * t262;
t228 = t188 * t241;
t225 = qJD(3) * t238;
t89 = t197 * t225 + (t297 * qJD(3) + (-t190 * t270 + t265) * qJD(2)) * t189;
t62 = qJD(4) * t93 + t89 * t192 - t196 * t228;
t63 = -qJD(4) * t92 + t192 * t228 + t89 * t196;
t37 = -t187 * t62 + t283 * t63;
t88 = t193 * t225 + (t213 * qJD(3) + (t190 * t268 + t269) * qJD(2)) * t189;
t20 = qJD(6) * t222 + t88 * t191 + t195 * t37;
t290 = t20 * t191;
t289 = t20 * t195;
t260 = qJD(3) * t193;
t243 = t188 * t260;
t259 = qJD(3) * t197;
t242 = t188 * t259;
t128 = -qJD(4) * t159 + t196 * t242;
t244 = t190 * t259;
t151 = -pkin(2) * t244 + pkin(10) * t243;
t209 = qJD(3) * t188 * (pkin(3) * t193 - pkin(11) * t197);
t77 = -t98 * qJD(4) + t192 * t151 + t196 * t209;
t55 = pkin(4) * t243 - t128 * qJ(5) - t160 * qJD(5) + t77;
t129 = qJD(4) * t160 + t192 * t242;
t257 = qJD(4) * t196;
t258 = qJD(4) * t192;
t76 = t148 * t258 - t149 * t257 + t196 * t151 - t192 * t209;
t58 = -t129 * qJ(5) - t159 * qJD(5) - t76;
t32 = -t187 * t58 + t283 * t55;
t31 = -pkin(5) * t243 - t32;
t288 = t31 * t191;
t287 = t31 * t195;
t84 = t283 * t128 - t187 * t129;
t105 = -t187 * t159 + t283 * t160;
t94 = t191 * t105 + t195 * t276;
t60 = -qJD(6) * t94 + t191 * t243 + t195 * t84;
t286 = t60 * t191;
t285 = t60 * t195;
t237 = t283 * t192;
t163 = t187 * t196 + t237;
t282 = t163 * t191;
t281 = t163 * t195;
t180 = t187 * pkin(4) + pkin(12);
t280 = t180 * t191;
t279 = t180 * t195;
t278 = t187 * t192;
t273 = t190 * t197;
t157 = t163 * qJD(4);
t272 = t191 * t157;
t236 = t283 * t196;
t158 = qJD(4) * t236 - t187 * t258;
t271 = t191 * t158;
t267 = t195 * t157;
t266 = t195 * t158;
t186 = t195 ^ 2;
t263 = t191 ^ 2 - t186;
t261 = qJD(2) * t198;
t256 = qJD(4) * t197;
t255 = qJD(6) * t191;
t254 = qJD(6) * t195;
t253 = -0.2e1 * pkin(3) * qJD(4);
t181 = -t283 * pkin(4) - pkin(5);
t252 = t181 * t294;
t251 = pkin(4) * t258;
t249 = t191 * t276;
t182 = -t196 * pkin(4) - pkin(3);
t184 = t189 ^ 2;
t246 = t184 * t261;
t183 = t188 ^ 2;
t245 = t183 * t259;
t240 = t191 * t254;
t239 = qJD(4) * t291;
t235 = qJD(2) * t284;
t234 = -0.4e1 * t191 * t281;
t127 = (t198 * t227 - t231) * qJD(2);
t144 = (pkin(2) * t194 - t198 * t293) * t189 * qJD(2);
t91 = -t188 * t127 + t190 * t144;
t233 = t263 * qJD(6);
t226 = t198 * t235;
t172 = pkin(1) * t226;
t126 = qJD(2) * t218 + t172;
t232 = -qJD(3) * t111 - t117 * t259 - t193 * t126 - t140 * t243;
t230 = t183 * t241;
t229 = t193 * t245;
t15 = t121 * pkin(12) + t17;
t71 = t156 * pkin(3) - t296;
t48 = t92 * pkin(4) + t71;
t73 = t187 * t93 + t283 * t92;
t23 = t73 * pkin(5) - t74 * pkin(12) + t48;
t8 = t195 * t15 + t191 * t23;
t52 = t121 * t191 + t195 * t74;
t224 = -t191 * t52 + t195 * t222;
t54 = -pkin(12) * t276 + t57;
t104 = t283 * t159 + t187 * t160;
t174 = pkin(10) * t277;
t147 = t174 + (-pkin(2) * t197 - pkin(3)) * t190;
t110 = t159 * pkin(4) + t147;
t70 = t104 * pkin(5) - t105 * pkin(12) + t110;
t35 = t191 * t70 + t195 * t54;
t95 = t195 * t105 - t249;
t223 = -t191 * t95 - t195 * t94;
t162 = -t236 + t278;
t115 = t162 * pkin(5) - t163 * pkin(12) + t182;
t169 = t291 * t196;
t133 = -t283 * t169 + t291 * t278;
t81 = t191 * t115 + t195 * t133;
t220 = -t157 * t180 + t158 * t181;
t219 = t162 * t180 - t163 * t181;
t36 = t187 * t63 + t283 * t62;
t217 = t191 * t36 + t73 * t254;
t24 = t195 * t36 - t73 * t255;
t205 = t88 * pkin(3) - t89 * pkin(11) + t91;
t43 = t117 * t260 - t125 * t244 - t197 * t126 - t127 * t274 - t140 * t242 - t144 * t277;
t41 = pkin(11) * t228 - t43;
t18 = -t192 * t205 - t196 * t41 - t67 * t257 + t72 * t258;
t11 = -t62 * qJ(5) - t92 * qJD(5) - t18;
t19 = -t39 * qJD(4) - t192 * t41 + t196 * t205;
t9 = t88 * pkin(4) - t63 * qJ(5) - t93 * qJD(5) + t19;
t5 = -t187 * t11 + t283 * t9;
t6 = t283 * t11 + t187 * t9;
t216 = t121 * t257 + t192 * t88;
t215 = t121 * t258 - t196 * t88;
t83 = t187 * t128 + t283 * t129;
t214 = t104 * t254 + t191 * t83;
t16 = -t187 * t30 + t283 * t27;
t56 = -t187 * t85 + t283 * t79;
t33 = t187 * t55 + t283 * t58;
t212 = t162 * t254 + t272;
t211 = t163 * t254 + t271;
t210 = -t163 * t255 + t266;
t208 = t192 * t256 + t196 * t260;
t207 = t192 * t260 - t196 * t256;
t206 = -t192 * qJD(5) + t196 * t239;
t203 = t157 * pkin(5) - t158 * pkin(12) + t251;
t152 = t264 * qJD(3);
t202 = t88 * pkin(12) + t6;
t201 = pkin(12) * t243 + t33;
t96 = t129 * pkin(4) + t152;
t200 = t83 * pkin(5) - t84 * pkin(12) + t96;
t42 = -t127 * t273 + (-pkin(3) * t241 - t144 * t197) * t188 - t232;
t25 = t62 * pkin(4) + t42;
t199 = t36 * pkin(5) - t37 * pkin(12) + t25;
t161 = t163 ^ 2;
t155 = t196 * qJD(5) + t192 * t239;
t154 = t204 * qJD(2);
t153 = pkin(9) * t241 - t172;
t132 = -t187 * t169 - t291 * t237;
t106 = -t162 * t255 + t267;
t102 = t283 * t155 + t187 * t206;
t101 = t187 * t155 - t283 * t206;
t80 = t195 * t115 - t191 * t133;
t75 = -t104 * t255 + t195 * t83;
t61 = -qJD(6) * t249 + t105 * t254 + t191 * t84 - t195 * t243;
t53 = pkin(5) * t276 - t56;
t50 = -qJD(6) * t81 - t191 * t102 + t195 * t203;
t49 = -t195 * t102 - t115 * t254 + t133 * t255 - t191 * t203;
t44 = (t127 * t190 + t144 * t188) * t197 + t232;
t34 = -t191 * t54 + t195 * t70;
t21 = qJD(6) * t52 + t191 * t37 - t88 * t195;
t14 = -t121 * pkin(5) - t16;
t13 = -qJD(6) * t35 - t191 * t201 + t195 * t200;
t12 = -t191 * t200 - t195 * t201 - t70 * t254 + t54 * t255;
t7 = -t191 * t15 + t195 * t23;
t4 = -t88 * pkin(5) - t5;
t2 = -qJD(6) * t8 - t191 * t202 + t195 * t199;
t1 = t15 * t255 - t191 * t199 - t195 * t202 - t23 * t254;
t3 = [0, 0, 0, 0.2e1 * t194 * t246, 0.2e1 * (-t194 ^ 2 + t198 ^ 2) * t184 * qJD(2), 0.2e1 * t189 * t226, -0.2e1 * t189 * t194 * t235, 0, -0.2e1 * t184 * pkin(1) * t262 + 0.2e1 * t154 * t284, -0.2e1 * pkin(1) * t246 + 0.2e1 * t153 * t284, 0.2e1 * t122 * t89, -0.2e1 * t89 * t121 - 0.2e1 * t122 * t88, 0.2e1 * t122 * t228 - 0.2e1 * t89 * t156, -0.2e1 * t121 * t228 + 0.2e1 * t88 * t156, -0.2e1 * t156 * t228, 0.2e1 * t91 * t121 - 0.2e1 * t44 * t156 + 0.2e1 * t296 * t228 + 0.2e1 * t87 * t88, 0.2e1 * t91 * t122 - 0.2e1 * t43 * t156 - 0.2e1 * t248 * t228 + 0.2e1 * t87 * t89, 0.2e1 * t93 * t63, -0.2e1 * t93 * t62 - 0.2e1 * t63 * t92, 0.2e1 * t63 * t121 + 0.2e1 * t93 * t88, -0.2e1 * t62 * t121 - 0.2e1 * t92 * t88, 0.2e1 * t121 * t88, 0.2e1 * t19 * t121 + 0.2e1 * t38 * t88 + 0.2e1 * t42 * t92 + 0.2e1 * t71 * t62, 0.2e1 * t18 * t121 - 0.2e1 * t39 * t88 + 0.2e1 * t42 * t93 + 0.2e1 * t71 * t63, -0.2e1 * t16 * t37 - 0.2e1 * t17 * t36 - 0.2e1 * t5 * t74 - 0.2e1 * t6 * t73, 0.2e1 * t16 * t5 + 0.2e1 * t17 * t6 + 0.2e1 * t48 * t25, 0.2e1 * t52 * t20, 0.2e1 * t20 * t222 - 0.2e1 * t52 * t21, 0.2e1 * t20 * t73 + 0.2e1 * t52 * t36, -0.2e1 * t21 * t73 + 0.2e1 * t222 * t36, 0.2e1 * t73 * t36, 0.2e1 * t14 * t21 + 0.2e1 * t2 * t73 - 0.2e1 * t222 * t4 + 0.2e1 * t7 * t36, 0.2e1 * t1 * t73 + 0.2e1 * t14 * t20 - 0.2e1 * t8 * t36 + 0.2e1 * t4 * t52; 0, 0, 0, 0, 0, t189 * t261, -t241, 0, t154, t153 (t122 * t259 + t193 * t89) * t188 (-t193 * t88 + t197 * t89 + (-t121 * t197 - t122 * t193) * qJD(3)) * t188, -t156 * t242 + t89 * t190 + t193 * t230, t156 * t243 - t88 * t190 + t197 * t230, t190 * t228, t152 * t156 + t44 * t190 + ((pkin(2) * t273 - t174) * t241 - pkin(2) * t88 - t91 * t197 + t87 * t260) * t188, -t151 * t156 + t43 * t190 + (-pkin(2) * t89 + t91 * t193 - t264 * t241 + t87 * t259) * t188, t93 * t128 + t63 * t160, -t128 * t92 - t93 * t129 - t63 * t159 - t160 * t62, t128 * t121 + t160 * t88 + (-t197 * t63 + t260 * t93) * t188, -t129 * t121 - t159 * t88 + (t197 * t62 - t260 * t92) * t188 (t121 * t260 - t197 * t88) * t188, t77 * t121 + t71 * t129 + t147 * t62 + t152 * t92 + t42 * t159 + t97 * t88 + (-t19 * t197 + t260 * t38) * t188, t76 * t121 + t71 * t128 + t147 * t63 + t152 * t93 + t42 * t160 - t98 * t88 + (-t18 * t197 - t260 * t39) * t188, -t6 * t104 - t5 * t105 - t16 * t84 - t17 * t83 - t32 * t74 - t33 * t73 - t57 * t36 - t56 * t37, t25 * t110 + t16 * t32 + t17 * t33 + t48 * t96 + t5 * t56 + t6 * t57, t20 * t95 + t52 * t60, -t20 * t94 - t95 * t21 + t222 * t60 - t52 * t61, t20 * t104 + t95 * t36 + t52 * t83 + t60 * t73, -t21 * t104 + t222 * t83 - t94 * t36 - t61 * t73, t36 * t104 + t73 * t83, t2 * t104 + t13 * t73 + t14 * t61 + t53 * t21 - t222 * t31 + t34 * t36 + t4 * t94 + t7 * t83, t1 * t104 + t12 * t73 + t14 * t60 + t53 * t20 + t31 * t52 - t35 * t36 + t4 * t95 - t8 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t229, 0.2e1 * (-t193 ^ 2 + t197 ^ 2) * t183 * qJD(3), 0.2e1 * t190 * t242, -0.2e1 * t190 * t243, 0, -0.2e1 * t183 * pkin(2) * t260 - 0.2e1 * t152 * t190, -0.2e1 * pkin(2) * t245 + 0.2e1 * t151 * t190, 0.2e1 * t160 * t128, -0.2e1 * t128 * t159 - 0.2e1 * t160 * t129 (-t128 * t197 + t160 * t260) * t295 (t129 * t197 - t159 * t260) * t295, -0.2e1 * t229, 0.2e1 * t147 * t129 + 0.2e1 * t152 * t159 + 0.2e1 * (-t197 * t77 + t260 * t97) * t188, 0.2e1 * t147 * t128 + 0.2e1 * t152 * t160 + 0.2e1 * (-t197 * t76 - t260 * t98) * t188, -0.2e1 * t33 * t104 - 0.2e1 * t32 * t105 - 0.2e1 * t56 * t84 - 0.2e1 * t57 * t83, 0.2e1 * t110 * t96 + 0.2e1 * t56 * t32 + 0.2e1 * t57 * t33, 0.2e1 * t95 * t60, -0.2e1 * t60 * t94 - 0.2e1 * t95 * t61, 0.2e1 * t60 * t104 + 0.2e1 * t95 * t83, -0.2e1 * t61 * t104 - 0.2e1 * t94 * t83, 0.2e1 * t104 * t83, 0.2e1 * t13 * t104 + 0.2e1 * t31 * t94 + 0.2e1 * t34 * t83 + 0.2e1 * t53 * t61, 0.2e1 * t12 * t104 + 0.2e1 * t31 * t95 - 0.2e1 * t35 * t83 + 0.2e1 * t53 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t88, t228, t44, t43, t63 * t192 + t93 * t257, -t192 * t62 + t63 * t196 + (-t192 * t93 - t196 * t92) * qJD(4), t216, -t215, 0, -pkin(3) * t62 - pkin(11) * t216 - t42 * t196 + t258 * t71, -pkin(3) * t63 + pkin(11) * t215 + t42 * t192 + t257 * t71, t101 * t74 - t102 * t73 + t132 * t37 - t133 * t36 - t17 * t157 - t16 * t158 - t6 * t162 - t5 * t163, -t16 * t101 + t17 * t102 - t5 * t132 + t6 * t133 + t25 * t182 + t251 * t48, t52 * t266 + (-t255 * t52 + t289) * t163, t224 * t158 + (-t290 - t195 * t21 + (-t191 * t222 - t195 * t52) * qJD(6)) * t163, t52 * t157 + t20 * t162 + t163 * t24 + t266 * t73, t157 * t222 - t21 * t162 - t163 * t217 - t271 * t73, t73 * t157 + t36 * t162, -t101 * t222 + t132 * t21 + t14 * t211 + t7 * t157 + t2 * t162 + t282 * t4 + t80 * t36 + t50 * t73, t1 * t162 + t101 * t52 + t132 * t20 + t14 * t210 - t8 * t157 + t281 * t4 - t81 * t36 + t49 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, -t243, 0, -t152, t151, t128 * t192 + t160 * t257, t128 * t196 - t192 * t129 + (-t159 * t196 - t160 * t192) * qJD(4), t207 * t188, t208 * t188, 0, -pkin(3) * t129 + t147 * t258 - t152 * t196 - t207 * t292, -pkin(3) * t128 + t147 * t257 + t152 * t192 - t208 * t292, t101 * t105 - t102 * t104 + t132 * t84 - t133 * t83 - t57 * t157 - t56 * t158 - t33 * t162 - t32 * t163, -t56 * t101 + t57 * t102 + t110 * t251 - t32 * t132 + t33 * t133 + t96 * t182, t95 * t266 + (-t255 * t95 + t285) * t163, t223 * t158 + (-t286 - t195 * t61 + (t191 * t94 - t195 * t95) * qJD(6)) * t163, t104 * t210 + t95 * t157 + t60 * t162 + t281 * t83, -t104 * t211 - t94 * t157 - t61 * t162 - t282 * t83, t104 * t157 + t83 * t162, t53 * t271 + t101 * t94 + t50 * t104 + t13 * t162 + t132 * t61 + t34 * t157 + t80 * t83 + (t254 * t53 + t288) * t163, t53 * t266 + t101 * t95 + t49 * t104 + t12 * t162 + t132 * t60 - t35 * t157 - t81 * t83 + (-t255 * t53 + t287) * t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t192 * t257, 0.2e1 * (-t192 ^ 2 + t196 ^ 2) * qJD(4), 0, 0, 0, t192 * t253, t196 * t253, 0.2e1 * t101 * t163 - 0.2e1 * t102 * t162 + 0.2e1 * t132 * t158 - 0.2e1 * t133 * t157, 0.2e1 * t132 * t101 + 0.2e1 * t133 * t102 + 0.2e1 * t182 * t251, 0.2e1 * t186 * t163 * t158 - 0.2e1 * t161 * t240, t161 * t263 * t294 + t158 * t234, 0.2e1 * t162 * t210 + 0.2e1 * t163 * t267, -0.2e1 * t162 * t211 - 0.2e1 * t163 * t272, 0.2e1 * t162 * t157, 0.2e1 * t101 * t282 + 0.2e1 * t132 * t211 + 0.2e1 * t80 * t157 + 0.2e1 * t50 * t162, 0.2e1 * t101 * t281 + 0.2e1 * t132 * t210 - 0.2e1 * t81 * t157 + 0.2e1 * t49 * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, -t62, t88, t19, t18 (-t187 * t36 - t283 * t37) * pkin(4) (t187 * t6 + t283 * t5) * pkin(4), t254 * t52 + t290, qJD(6) * t224 - t191 * t21 + t289, t217, t24, 0, -t36 * t280 + t181 * t21 - t4 * t195 + (t14 * t191 - t279 * t73) * qJD(6), -t36 * t279 + t181 * t20 + t4 * t191 + (t14 * t195 + t280 * t73) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -t129, t243, t77, t76 (-t187 * t83 - t283 * t84) * pkin(4) (t187 * t33 + t283 * t32) * pkin(4), t254 * t95 + t286, qJD(6) * t223 - t191 * t61 + t285, t214, t75, 0, -t83 * t280 + t181 * t61 - t287 + (-t104 * t279 + t191 * t53) * qJD(6), -t83 * t279 + t181 * t60 + t288 + (t104 * t280 + t195 * t53) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, -t258, 0, -pkin(11) * t257, pkin(11) * t258 (-t157 * t187 - t158 * t283) * pkin(4) (-t101 * t283 + t102 * t187) * pkin(4), -t163 * t233 + t191 * t266, qJD(6) * t234 - t158 * t263, t212, t106, 0, -t101 * t195 + t220 * t191 + (t132 * t191 - t195 * t219) * qJD(6), t101 * t191 + t220 * t195 + (t132 * t195 + t191 * t219) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t240, -0.2e1 * t233, 0, 0, 0, t191 * t252, t195 * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, 0, 0, 0, 0, t24, -t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, 0, 0, 0, 0, 0, t75, -t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, 0, 0, 0, 0, t106, -t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, -t21, t36, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, -t61, t83, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, -t211, t157, t50, t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t255, 0, -t180 * t254, t180 * t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
