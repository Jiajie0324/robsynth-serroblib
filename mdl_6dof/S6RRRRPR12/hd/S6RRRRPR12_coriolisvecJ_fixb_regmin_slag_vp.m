% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR12_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR12_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:44:41
% EndTime: 2019-03-09 23:45:20
% DurationCPUTime: 15.56s
% Computational Cost: add. (28054->648), mult. (84080->930), div. (0->0), fcn. (70466->14), ass. (0->319)
t335 = cos(pkin(7));
t342 = cos(qJ(3));
t343 = cos(qJ(2));
t464 = t342 * t343;
t338 = sin(qJ(3));
t339 = sin(qJ(2));
t467 = t338 * t339;
t367 = -t335 * t467 + t464;
t333 = sin(pkin(6));
t450 = qJD(1) * t333;
t268 = t367 * t450;
t332 = sin(pkin(7));
t445 = qJD(3) * t342;
t425 = t332 * t445;
t520 = t268 - t425;
t479 = cos(pkin(6));
t430 = pkin(1) * t479;
t403 = t343 * t430;
t316 = qJD(1) * t403;
t395 = t333 * (-pkin(10) * t335 - pkin(9));
t371 = t339 * t395;
t248 = qJD(1) * t371 + t316;
t404 = t339 * t430;
t348 = t343 * t395 - t404;
t249 = t348 * qJD(1);
t492 = pkin(10) * t332;
t360 = t333 * (pkin(2) * t339 - t343 * t492);
t279 = qJD(1) * t360;
t469 = t335 * t338;
t472 = t332 * t338;
t319 = pkin(10) * t472;
t468 = t335 * t342;
t500 = pkin(2) * t468 - t319;
t519 = t500 * qJD(3) - t342 * t248 - t249 * t469 - t279 * t472;
t185 = -t249 * t332 + t335 * t279;
t465 = t339 * t342;
t466 = t338 * t343;
t369 = t335 * t465 + t466;
t267 = t369 * t450;
t518 = pkin(3) * t267 - pkin(11) * t268 + t185 - (pkin(3) * t338 - pkin(11) * t342) * t332 * qJD(3);
t429 = t339 * t450;
t402 = t332 * t429;
t517 = pkin(11) * t402 - t519;
t337 = sin(qJ(4));
t341 = cos(qJ(4));
t295 = t335 * t337 + t341 * t472;
t457 = -qJD(4) * t295 + t337 * t520 - t341 * t402;
t294 = -t341 * t335 + t337 * t472;
t456 = -qJD(4) * t294 - t337 * t402 - t341 * t520;
t446 = qJD(3) * t338;
t426 = t332 * t446;
t505 = t267 - t426;
t516 = t518 * t341;
t471 = t332 * t342;
t452 = pkin(2) * t469 + pkin(10) * t471;
t284 = pkin(11) * t335 + t452;
t285 = (-pkin(3) * t342 - pkin(11) * t338 - pkin(2)) * t332;
t443 = qJD(4) * t341;
t444 = qJD(4) * t337;
t515 = t284 * t444 - t285 * t443 + t337 * t518 + t517 * t341;
t428 = t343 * t450;
t399 = t335 * t428;
t305 = t342 * t399;
t415 = t479 * qJD(1);
t375 = t415 + qJD(2);
t362 = t332 * t375;
t401 = t338 * t429;
t214 = -t342 * t362 - t305 + t401;
t212 = qJD(4) + t214;
t455 = t341 * t284 + t337 * t285;
t514 = -t505 * pkin(4) - t456 * qJ(5) - qJD(4) * t455 - qJD(5) * t295 + t337 * t517 - t516;
t513 = qJ(5) * t457 - qJD(5) * t294 - t515;
t491 = -qJ(5) - pkin(11);
t418 = qJD(4) * t491;
t470 = t333 * t343;
t354 = pkin(9) * t470 + t404;
t206 = t354 * qJD(1) + (t362 + t399) * pkin(10);
t349 = pkin(2) * t479 + t371;
t213 = qJD(2) * pkin(2) + qJD(1) * t349 + t316;
t275 = (-pkin(2) * t343 - t339 * t492 - pkin(1)) * t333;
t263 = qJD(1) * t275;
t142 = -t338 * t206 + (t213 * t335 + t263 * t332) * t342;
t368 = t335 * t466 + t465;
t357 = t368 * t333;
t216 = qJD(1) * t357 + t338 * t362;
t161 = pkin(3) * t216 + pkin(11) * t214;
t461 = t341 * t142 + t337 * t161;
t476 = t214 * t337;
t512 = -qJ(5) * t476 + qJD(5) * t341 + t337 * t418 - t461;
t160 = t341 * t161;
t511 = -pkin(4) * t216 - t160 + (-qJ(5) * t214 + t418) * t341 + (-qJD(5) + t142) * t337;
t424 = t335 * t446;
t504 = pkin(2) * t424 + pkin(10) * t425 - t338 * t248 + t249 * t468;
t454 = t332 * (pkin(3) * t429 + t279 * t342) + t504;
t510 = -pkin(4) * t457 + t454;
t270 = t332 * t428 - t335 * t375 - qJD(3);
t170 = t216 * t337 + t341 * t270;
t172 = t216 * t341 - t270 * t337;
t331 = sin(pkin(13));
t334 = cos(pkin(13));
t412 = -t334 * t170 - t172 * t331;
t497 = qJD(6) - t412;
t336 = sin(qJ(6));
t340 = cos(qJ(6));
t380 = -t170 * t331 + t334 * t172;
t97 = -t340 * t212 + t336 * t380;
t508 = t497 * t97;
t507 = -t331 * t457 - t456 * t334;
t301 = t331 * t337 - t334 * t341;
t158 = t301 * t214;
t293 = t301 * qJD(4);
t506 = t158 + t293;
t458 = t456 * t331 - t334 * t457;
t302 = t331 * t341 + t334 * t337;
t453 = t212 * t302;
t408 = t497 * t340;
t355 = qJD(3) * t362;
t439 = qJD(1) * qJD(2);
t420 = t333 * t439;
t397 = t343 * t420;
t447 = qJD(2) * t335;
t173 = qJD(3) * t305 + (-qJD(3) - t447) * t401 + (t355 + t397) * t342;
t398 = t339 * t420;
t376 = t332 * t398;
t105 = t341 * t173 - t216 * t444 - t270 * t443 + t337 * t376;
t106 = qJD(4) * t172 + t173 * t337 - t341 * t376;
t64 = t105 * t331 + t334 * t106;
t503 = -t336 * t64 - t497 * t408;
t489 = -t513 * t331 + t334 * t514;
t488 = t331 * t514 + t513 * t334;
t481 = t331 * t512 - t334 * t511;
t480 = t331 * t511 + t334 * t512;
t247 = t403 + t349;
t378 = t247 * t335 + t275 * t332;
t501 = t342 * t378;
t181 = -t247 * t332 + t335 * t275;
t417 = t479 * t332;
t498 = t335 * t464 - t467;
t240 = -t333 * t498 - t342 * t417;
t241 = t338 * t417 + t357;
t138 = pkin(3) * t240 - pkin(11) * t241 + t181;
t291 = t332 * t470 - t335 * t479;
t234 = (t335 * t470 + t417) * pkin(10) + t354;
t433 = t342 * t234 + t247 * t469 + t275 * t472;
t146 = -pkin(11) * t291 + t433;
t460 = t337 * t138 + t341 * t146;
t143 = t342 * t206 + t213 * t469 + t263 * t472;
t499 = -t143 + (t444 + t476) * pkin(4);
t495 = qJD(2) * t369 + qJD(3) * t368;
t345 = t495 * t333;
t351 = t338 * t355;
t174 = qJD(1) * t345 + t351;
t163 = -t213 * t332 + t335 * t263;
t112 = pkin(3) * t214 - pkin(11) * t216 + t163;
t117 = -pkin(11) * t270 + t143;
t69 = t112 * t337 + t117 * t341;
t387 = qJD(2) * t415;
t373 = pkin(1) * t387;
t312 = t343 * t373;
t364 = qJD(2) * t371;
t231 = qJD(1) * t364 + t312;
t251 = t348 * qJD(2);
t232 = qJD(1) * t251;
t280 = qJD(2) * t360;
t271 = qJD(1) * t280;
t423 = t335 * t445;
t88 = -t206 * t446 + t213 * t423 + t342 * t231 + t232 * t469 + t263 * t425 + t271 * t472;
t86 = pkin(11) * t376 + t88;
t178 = -t232 * t332 + t335 * t271;
t96 = pkin(3) * t174 - pkin(11) * t173 + t178;
t29 = -qJD(4) * t69 - t337 * t86 + t341 * t96;
t14 = pkin(4) * t174 - qJ(5) * t105 - qJD(5) * t172 + t29;
t28 = t112 * t443 - t117 * t444 + t337 * t96 + t341 * t86;
t18 = -qJ(5) * t106 - qJD(5) * t170 + t28;
t5 = t14 * t334 - t18 * t331;
t3 = -pkin(5) * t174 - t5;
t325 = pkin(4) * t331 + pkin(12);
t496 = t497 * (pkin(4) * t172 + pkin(5) * t380 - pkin(12) * t412 + qJD(6) * t325) + t3;
t370 = t206 * t445 + t213 * t424 + t338 * t231 - t232 * t468 + t263 * t426 - t271 * t471;
t87 = -pkin(3) * t376 + t370;
t52 = pkin(4) * t106 + t87;
t65 = t105 * t334 - t106 * t331;
t16 = pkin(5) * t64 - pkin(12) * t65 + t52;
t68 = t341 * t112 - t117 * t337;
t55 = -qJ(5) * t172 + t68;
t50 = pkin(4) * t212 + t55;
t56 = -qJ(5) * t170 + t69;
t53 = t334 * t56;
t27 = t331 * t50 + t53;
t25 = pkin(12) * t212 + t27;
t116 = pkin(3) * t270 - t142;
t90 = pkin(4) * t170 + qJD(5) + t116;
t46 = -pkin(5) * t412 - pkin(12) * t380 + t90;
t383 = t25 * t336 - t340 * t46;
t6 = t331 * t14 + t334 * t18;
t4 = pkin(12) * t174 + t6;
t1 = -qJD(6) * t383 + t16 * t336 + t340 * t4;
t344 = qJD(1) ^ 2;
t394 = qJD(3) * t417;
t183 = t342 * t394 + (t367 * qJD(2) + qJD(3) * t498) * t333;
t188 = t241 * t341 - t291 * t337;
t448 = qJD(2) * t333;
t427 = t339 * t448;
t400 = t332 * t427;
t132 = qJD(4) * t188 + t183 * t337 - t341 * t400;
t494 = pkin(4) * t132;
t187 = t241 * t337 + t291 * t341;
t493 = pkin(4) * t187;
t133 = -qJD(4) * t187 + t183 * t341 + t337 * t400;
t182 = t338 * t394 + t345;
t186 = -t251 * t332 + t335 * t280;
t103 = pkin(3) * t182 - pkin(11) * t183 + t186;
t317 = qJD(2) * t403;
t250 = t317 + t364;
t352 = -t234 * t446 + t247 * t423 + t342 * t250 + t251 * t469 + t275 * t425 + t280 * t472;
t92 = pkin(11) * t400 + t352;
t347 = -qJD(4) * t460 + t341 * t103 - t337 * t92;
t20 = pkin(4) * t182 - qJ(5) * t133 - qJD(5) * t188 + t347;
t365 = t337 * t103 + t138 * t443 - t146 * t444 + t341 * t92;
t23 = -qJ(5) * t132 - qJD(5) * t187 + t365;
t10 = t331 * t20 + t334 * t23;
t413 = t341 * t138 - t146 * t337;
t60 = pkin(4) * t240 - qJ(5) * t188 + t413;
t67 = -qJ(5) * t187 + t460;
t35 = t331 * t60 + t334 * t67;
t490 = pkin(5) * t505 - t489;
t487 = t380 * t97;
t99 = t212 * t336 + t340 * t380;
t486 = t380 * t99;
t485 = t331 * t56;
t441 = qJD(6) * t340;
t442 = qJD(6) * t336;
t38 = t336 * t174 + t212 * t441 + t340 * t65 - t380 * t442;
t484 = t336 * t38;
t482 = pkin(5) * t216 + t481;
t478 = t170 * t212;
t477 = t172 * t212;
t475 = t302 * t336;
t474 = t302 * t340;
t328 = t333 ^ 2;
t473 = t328 * t344;
t209 = -t294 * t331 + t295 * t334;
t189 = t209 * t336 + t340 * t471;
t463 = -qJD(6) * t189 - t336 * t505 - t340 * t507;
t435 = t336 * t471;
t462 = -qJD(6) * t435 + t209 * t441 - t336 * t507 + t340 * t505;
t410 = -t284 * t337 + t341 * t285;
t169 = -pkin(4) * t471 - qJ(5) * t295 + t410;
t179 = -qJ(5) * t294 + t455;
t125 = t331 * t169 + t334 * t179;
t451 = t339 ^ 2 - t343 ^ 2;
t449 = qJD(2) * t332 ^ 2;
t436 = t343 * t473;
t431 = -pkin(4) * t341 - pkin(3);
t422 = t491 * t337;
t421 = t328 * t439;
t223 = t338 * t234;
t419 = pkin(3) * t291 + t223;
t416 = -t340 * t174 + t336 * t65;
t409 = t212 * t341;
t407 = 0.2e1 * t421;
t405 = t234 * t445 + t247 * t424 + t338 * t250 + t275 * t426;
t208 = t334 * t294 + t295 * t331;
t283 = t319 + (-pkin(2) * t342 - pkin(3)) * t335;
t353 = pkin(4) * t294 + t283;
t144 = pkin(5) * t208 - pkin(12) * t209 + t353;
t396 = pkin(12) * t505 - qJD(6) * t144 - t488;
t393 = t333 * t344 * t479;
t392 = -0.2e1 * pkin(1) * t421;
t114 = -pkin(12) * t471 + t125;
t390 = -pkin(5) * t458 - pkin(12) * t507 + qJD(6) * t114 - t510;
t227 = pkin(5) * t301 - pkin(12) * t302 + t431;
t389 = pkin(12) * t216 - qJD(6) * t227 - t480;
t313 = t491 * t341;
t261 = -t334 * t313 + t331 * t422;
t388 = -pkin(5) * t453 - pkin(12) * t506 + qJD(6) * t261 - t499;
t9 = t20 * t334 - t23 * t331;
t12 = t25 * t340 + t336 * t46;
t33 = pkin(12) * t240 + t35;
t145 = t419 - t501;
t147 = t334 * t187 + t188 * t331;
t148 = -t187 * t331 + t188 * t334;
t51 = pkin(5) * t147 - pkin(12) * t148 + t145 + t493;
t382 = t33 * t340 + t336 * t51;
t381 = -t33 * t336 + t340 * t51;
t26 = t334 * t50 - t485;
t34 = -t331 * t67 + t334 * t60;
t109 = t148 * t340 + t240 * t336;
t108 = t148 * t336 - t240 * t340;
t124 = t169 * t334 - t179 * t331;
t377 = t251 * t335 + t280 * t332;
t374 = 0.2e1 * t415 + qJD(2);
t372 = t340 * t64 + (t336 * t412 - t442) * t497;
t366 = -pkin(11) * t174 + t116 * t212;
t130 = t158 * t336 - t340 * t216;
t359 = -t293 * t336 + t302 * t441 - t130;
t131 = t158 * t340 + t216 * t336;
t358 = -t293 * t340 - t302 * t442 - t131;
t24 = -pkin(5) * t212 - t26;
t31 = t334 * t55 - t485;
t350 = -t325 * t64 + (t24 + t31) * t497;
t2 = -qJD(6) * t12 + t340 * t16 - t336 * t4;
t346 = t375 * t354;
t93 = -t251 * t468 + (-pkin(3) * t427 - t280 * t342) * t332 + t405;
t326 = -pkin(4) * t334 - pkin(5);
t260 = -t313 * t331 - t334 * t422;
t190 = t209 * t340 - t435;
t113 = pkin(5) * t471 - t124;
t80 = -t132 * t331 + t133 * t334;
t79 = t334 * t132 + t133 * t331;
t48 = qJD(6) * t109 - t182 * t340 + t336 * t80;
t47 = -qJD(6) * t108 + t182 * t336 + t340 * t80;
t39 = qJD(6) * t99 + t416;
t32 = -pkin(5) * t240 - t34;
t30 = t331 * t55 + t53;
t21 = pkin(5) * t79 - pkin(12) * t80 + t494 + t93;
t8 = pkin(12) * t182 + t10;
t7 = -pkin(5) * t182 - t9;
t11 = [0, 0, 0, t339 * t343 * t407, -t451 * t407, t374 * t343 * t448, -t374 * t427, 0, -qJD(2) * t346 + t339 * t392 - t354 * t387, t343 * t392 - (-pkin(9) * t427 + t317) * t375 - (-pkin(9) * t398 + t312) * t479, t173 * t241 + t183 * t216, -t173 * t240 - t174 * t241 - t182 * t216 - t183 * t214, -t173 * t291 - t183 * t270 + (qJD(1) * t241 + t216) * t400, t174 * t291 + t182 * t270 + (-qJD(1) * t240 - t214) * t400 (-qJD(1) * t291 - t270) * t400 -(t342 * t377 - t405) * t270 + t370 * t291 + t186 * t214 + t181 * t174 + t178 * t240 + t163 * t182 + (t142 + (-t223 + t501) * qJD(1)) * t400, t352 * t270 + t88 * t291 + t186 * t216 + t181 * t173 + t178 * t241 + t163 * t183 + (-qJD(1) * t433 - t143) * t400, t105 * t188 + t133 * t172, -t105 * t187 - t106 * t188 - t132 * t172 - t133 * t170, t105 * t240 + t133 * t212 + t172 * t182 + t174 * t188, -t106 * t240 - t132 * t212 - t170 * t182 - t174 * t187, t174 * t240 + t182 * t212, t145 * t106 + t116 * t132 + t93 * t170 + t174 * t413 + t68 * t182 + t87 * t187 + t212 * t347 + t29 * t240, t145 * t105 + t116 * t133 + t93 * t172 - t174 * t460 - t69 * t182 + t87 * t188 - t212 * t365 - t28 * t240, t10 * t412 - t147 * t6 - t148 * t5 - t26 * t80 - t27 * t79 - t34 * t65 - t35 * t64 - t380 * t9, t6 * t35 + t27 * t10 + t5 * t34 + t26 * t9 + t52 * (t419 + t493) + t90 * (-pkin(3) * t400 + t405 + t494) + (-t377 * t90 - t378 * t52) * t342, t109 * t38 + t47 * t99, -t108 * t38 - t109 * t39 - t47 * t97 - t48 * t99, t109 * t64 + t147 * t38 + t47 * t497 + t79 * t99, -t108 * t64 - t147 * t39 - t48 * t497 - t79 * t97, t147 * t64 + t497 * t79 (-qJD(6) * t382 + t21 * t340 - t336 * t8) * t497 + t381 * t64 + t2 * t147 - t383 * t79 + t7 * t97 + t32 * t39 + t3 * t108 + t24 * t48 -(qJD(6) * t381 + t21 * t336 + t340 * t8) * t497 - t382 * t64 - t1 * t147 - t12 * t79 + t7 * t99 + t32 * t38 + t3 * t109 + t24 * t47; 0, 0, 0, -t339 * t436, t451 * t473, -t343 * t393, t339 * t393, 0, -pkin(9) * t397 + qJD(1) * t346 + (pkin(1) * t473 - t373) * t339, -t312 + pkin(1) * t436 + (-pkin(9) * t429 + t316) * t415 + t316 * qJD(2), t173 * t472 - t216 * t520, t214 * t268 + t216 * t267 + (t173 * t342 - t174 * t338 + (-t214 * t342 - t216 * t338) * qJD(3)) * t332, t173 * t335 + t520 * t270 + (-t216 * t332 + t338 * t449) * t429, -t174 * t335 - t505 * t270 + (t214 * t332 + t342 * t449) * t429 (t270 + t447) * t402, -t163 * t267 - t185 * t214 - t370 * t335 + t504 * t270 + (t163 * t446 - pkin(2) * t174 + (t270 * t279 - t178) * t342 + (qJD(2) * t500 - t142) * t429) * t332, -t163 * t268 - t185 * t216 - t88 * t335 + t519 * t270 + (t163 * t445 - pkin(2) * t173 + t178 * t338 + (-qJD(2) * t452 + t143) * t429) * t332, t105 * t295 + t172 * t456, -t105 * t294 - t106 * t295 - t170 * t456 + t172 * t457, -t105 * t471 - t172 * t505 + t174 * t295 + t212 * t456, t106 * t471 + t170 * t505 - t174 * t294 + t212 * t457, -t174 * t471 - t212 * t505, t410 * t174 + t283 * t106 + t87 * t294 - t68 * t267 + (-t29 * t342 + t446 * t68) * t332 + (-t284 * t443 + (-qJD(4) * t285 + t517) * t337 - t516) * t212 + t454 * t170 - t457 * t116, -t455 * t174 + t283 * t105 + t87 * t295 + t69 * t267 + (t28 * t342 - t446 * t69) * t332 + t515 * t212 + t454 * t172 + t456 * t116, -t124 * t65 - t125 * t64 - t208 * t6 - t209 * t5 + t26 * t507 - t458 * t27 - t489 * t380 + t488 * t412, t5 * t124 + t6 * t125 + t489 * t26 + t488 * t27 + t52 * t353 + t510 * t90, t190 * t38 + t463 * t99, -t189 * t38 - t190 * t39 - t462 * t99 - t463 * t97, t190 * t64 + t208 * t38 + t458 * t99 + t463 * t497, -t189 * t64 - t208 * t39 - t458 * t97 - t462 * t497, t208 * t64 + t458 * t497 (-t114 * t336 + t144 * t340) * t64 + t2 * t208 + t113 * t39 + t3 * t189 + t490 * t97 + t462 * t24 + (t336 * t396 - t340 * t390) * t497 - t458 * t383 -(t114 * t340 + t144 * t336) * t64 - t1 * t208 + t113 * t38 + t3 * t190 + t490 * t99 + t463 * t24 - t458 * t12 + (t336 * t390 + t340 * t396) * t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216 * t214, -t214 ^ 2 + t216 ^ 2, -t214 * t270 + t173, -t216 * t270 - t450 * t495 - t351, t376, -t143 * t270 - t163 * t216 - t370, -t142 * t270 + t163 * t214 - t88, t105 * t337 + t172 * t409 (t105 - t478) * t341 + (-t106 - t477) * t337, -t172 * t216 + t174 * t337 + t212 * t409, -t212 ^ 2 * t337 + t170 * t216 + t174 * t341, -t212 * t216, -pkin(3) * t106 - t143 * t170 - t68 * t216 - t87 * t341 + (-pkin(11) * t443 - t160) * t212 + (t142 * t212 + t366) * t337, -pkin(3) * t105 - t143 * t172 + t69 * t216 + t87 * t337 + (pkin(11) * t444 + t461) * t212 + t366 * t341, t26 * t506 + t260 * t65 - t261 * t64 - t453 * t27 - t301 * t6 - t302 * t5 + t481 * t380 + t480 * t412, -t481 * t26 - t5 * t260 + t6 * t261 + t480 * t27 + t52 * t431 + t499 * t90, t358 * t99 + t38 * t474, t130 * t99 + t131 * t97 - (-t336 * t99 - t340 * t97) * t293 + (-t484 - t340 * t39 + (t336 * t97 - t340 * t99) * qJD(6)) * t302, t301 * t38 + t358 * t497 + t453 * t99 + t474 * t64, -t301 * t39 - t359 * t497 - t453 * t97 - t475 * t64, t301 * t64 + t453 * t497 (t227 * t340 - t261 * t336) * t64 + t2 * t301 + t260 * t39 + t3 * t475 + t482 * t97 + (t336 * t389 - t340 * t388) * t497 - t453 * t383 + t359 * t24 -(t227 * t336 + t261 * t340) * t64 - t1 * t301 + t260 * t38 + t3 * t474 + t482 * t99 - t453 * t12 + (t336 * t388 + t340 * t389) * t497 + t358 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172 * t170, -t170 ^ 2 + t172 ^ 2, t105 + t478, -t106 + t477, t174, -t116 * t172 + t212 * t69 + t29, t116 * t170 + t212 * t68 - t28 (-t331 * t64 - t334 * t65) * pkin(4) + (-t31 + t26) * t412 + (t27 - t30) * t380, t26 * t30 - t27 * t31 + (-t172 * t90 + t331 * t6 + t334 * t5) * pkin(4), t408 * t99 + t484 (t38 - t508) * t340 + (-t497 * t99 - t39) * t336, -t486 - t503, t372 + t487, -t497 * t380, -t30 * t97 + t326 * t39 + t350 * t336 - t340 * t496 + t380 * t383, t12 * t380 - t30 * t99 + t326 * t38 + t336 * t496 + t350 * t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380 ^ 2 - t412 ^ 2, t26 * t380 - t27 * t412 + t52, 0, 0, 0, 0, 0, t372 - t487, -t486 + t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99 * t97, -t97 ^ 2 + t99 ^ 2, t38 + t508, -t416 + (-qJD(6) + t497) * t99, t64, t12 * t497 - t24 * t99 + t2, t24 * t97 - t383 * t497 - t1;];
tauc_reg  = t11;
