% Calculate vector of inverse dynamics joint torques for
% S6PRPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRPRRP1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRPRRP1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:55:17
% EndTime: 2019-03-08 19:58:28
% DurationCPUTime: 186.18s
% Computational Cost: add. (99237->1752), mult. (272404->2434), div. (0->0), fcn. (330341->12), ass. (0->669)
t1173 = Icges(6,4) + Icges(7,4);
t1152 = Icges(6,1) + Icges(7,1);
t1151 = Icges(6,5) + Icges(7,5);
t1172 = Icges(6,2) + Icges(7,2);
t1171 = Icges(6,6) + Icges(7,6);
t1170 = Icges(6,3) + Icges(7,3);
t1003 = cos(qJ(4));
t1002 = sin(qJ(2));
t1004 = cos(qJ(2));
t990 = sin(pkin(11));
t991 = cos(pkin(11));
t674 = t1002 * t990 - t1004 * t991;
t701 = sin(pkin(10));
t703 = cos(pkin(10));
t992 = cos(pkin(6));
t813 = t992 * t990;
t814 = t992 * t991;
t905 = -t1002 * t814 - t1004 * t813;
t582 = t701 * t674 + t703 * t905;
t702 = sin(pkin(6));
t706 = sin(qJ(4));
t945 = t702 * t706;
t488 = -t1003 * t582 - t703 * t945;
t723 = -t1002 * t813 + t1004 * t814;
t741 = t1002 * t991 + t1004 * t990;
t583 = -t701 * t741 + t703 * t723;
t705 = sin(qJ(5));
t707 = cos(qJ(5));
t367 = -t488 * t705 - t583 * t707;
t1192 = t1173 * t367;
t587 = -t703 * t674 + t701 * t905;
t490 = t1003 * t587 + t701 * t945;
t586 = -t701 * t723 - t703 * t741;
t369 = -t490 * t705 - t586 * t707;
t1191 = t1173 * t369;
t648 = t741 * t702;
t613 = t1003 * t648 + t706 * t992;
t647 = t674 * t702;
t477 = -t613 * t705 + t647 * t707;
t1190 = t1173 * t477;
t952 = t647 * t705;
t478 = t613 * t707 + t952;
t1189 = t1173 * t478;
t958 = t586 * t705;
t370 = t490 * t707 - t958;
t1188 = t1173 * t370;
t962 = t583 * t705;
t368 = t488 * t707 - t962;
t1187 = t1173 * t368;
t634 = t723 * qJD(2);
t667 = t741 * qJD(2);
t526 = t634 * t703 - t667 * t701;
t865 = t702 * t1003;
t769 = t582 * t706 - t703 * t865;
t344 = qJD(4) * t769 + t1003 * t526;
t666 = t674 * qJD(2);
t719 = qJD(2) * t905;
t525 = t701 * t666 + t703 * t719;
t168 = -qJD(5) * t368 - t344 * t705 - t525 * t707;
t745 = qJD(5) * t367 - t525 * t705;
t169 = t344 * t707 + t745;
t343 = qJD(4) * t488 + t526 * t706;
t1186 = -t1151 * t169 - t1170 * t343 - t1171 * t168;
t528 = -t634 * t701 - t667 * t703;
t770 = -t587 * t706 + t701 * t865;
t346 = qJD(4) * t770 + t1003 * t528;
t527 = t666 * t703 - t701 * t719;
t170 = -qJD(5) * t370 - t346 * t705 - t527 * t707;
t744 = qJD(5) * t369 - t527 * t705;
t171 = t346 * t707 + t744;
t345 = qJD(4) * t490 + t528 * t706;
t1185 = -t1151 * t171 - t1170 * t345 - t1171 * t170;
t1184 = t1171 * t343 + t1172 * t168 + t1173 * t169;
t1183 = t1171 * t345 + t1172 * t170 + t1173 * t171;
t1182 = t1151 * t343 + t1152 * t169 + t1173 * t168;
t1181 = t1151 * t345 + t1152 * t171 + t1173 * t170;
t1180 = Icges(4,3) + Icges(3,3);
t904 = qJD(2) * t702;
t633 = t674 * t904;
t758 = t1003 * t992 - t648 * t706;
t474 = qJD(4) * t758 - t1003 * t633;
t632 = qJD(2) * t648;
t280 = -qJD(5) * t478 - t474 * t705 + t632 * t707;
t743 = qJD(5) * t477 + t632 * t705;
t281 = t474 * t707 + t743;
t473 = qJD(4) * t613 - t633 * t706;
t1179 = -t1151 * t281 - t1170 * t473 - t1171 * t280;
t1178 = t1171 * t473 + t1172 * t280 + t1173 * t281;
t1177 = t1151 * t473 + t1152 * t281 + t1173 * t280;
t1127 = t1151 * t368 - t1170 * t769 + t1171 * t367;
t1126 = t1151 * t370 - t1170 * t770 + t1171 * t369;
t1125 = -t1171 * t769 + t1172 * t367 + t1187;
t1124 = -t1171 * t770 + t1172 * t369 + t1188;
t1123 = -t1151 * t769 + t1152 * t368 + t1192;
t1122 = -t1151 * t770 + t1152 * t370 + t1191;
t1106 = t1151 * t478 - t1170 * t758 + t1171 * t477;
t1105 = -t1171 * t758 + t1172 * t477 + t1189;
t1104 = -t1151 * t758 + t1152 * t478 + t1190;
t704 = -qJ(6) - pkin(9);
t1174 = rSges(7,3) - t704;
t987 = Icges(4,4) * t648;
t519 = -Icges(4,2) * t647 + Icges(4,6) * t992 + t987;
t1165 = Icges(4,1) * t647 + t519 + t987;
t1154 = Icges(4,4) * t582;
t946 = t702 * t703;
t398 = Icges(4,2) * t583 - Icges(4,6) * t946 - t1154;
t1169 = -Icges(4,1) * t583 - t1154 + t398;
t1176 = -t1165 * t992 + t1169 * t946;
t1175 = -t904 / 0.2e1;
t1142 = t1123 * t169 + t1125 * t168 + t1127 * t343 + t1182 * t368 + t1184 * t367 + t1186 * t769;
t1141 = t1122 * t169 + t1124 * t168 + t1126 * t343 + t1181 * t368 + t1183 * t367 + t1185 * t769;
t1140 = t1123 * t171 + t1125 * t170 + t1127 * t345 + t1182 * t370 + t1184 * t369 + t1186 * t770;
t1139 = t1122 * t171 + t1124 * t170 + t1126 * t345 + t1181 * t370 + t1183 * t369 + t1185 * t770;
t1138 = t1123 * t281 + t1125 * t280 + t1127 * t473 + t1182 * t478 + t1184 * t477 + t1186 * t758;
t1137 = t1122 * t281 + t1124 * t280 + t1126 * t473 + t1181 * t478 + t1183 * t477 + t1185 * t758;
t1133 = t1104 * t169 + t1105 * t168 + t1106 * t343 + t1177 * t368 + t1178 * t367 + t1179 * t769;
t1132 = t1104 * t171 + t1105 * t170 + t1106 * t345 + t1177 * t370 + t1178 * t369 + t1179 * t770;
t1131 = t1104 * t281 + t1105 * t280 + t1106 * t473 + t1177 * t478 + t1178 * t477 + t1179 * t758;
t1075 = t1123 * t368 + t1125 * t367 - t1127 * t769;
t1074 = t1122 * t368 + t1124 * t367 - t1126 * t769;
t1073 = t1123 * t370 + t1125 * t369 - t1127 * t770;
t1072 = t1122 * t370 + t1124 * t369 - t1126 * t770;
t1071 = t1123 * t478 + t1125 * t477 - t1127 * t758;
t1070 = t1122 * t478 + t1124 * t477 - t1126 * t758;
t1069 = t1104 * t368 + t1105 * t367 - t1106 * t769;
t1068 = t1104 * t370 + t1105 * t369 - t1106 * t770;
t1155 = -pkin(9) + t1174;
t1067 = t1104 * t478 + t1105 * t477 - t1106 * t758;
t1153 = Icges(4,4) * t587;
t947 = t701 * t702;
t399 = Icges(4,2) * t586 + Icges(4,6) * t947 + t1153;
t1168 = -Icges(4,1) * t586 + t1153 + t399;
t508 = -Icges(4,5) * t633 - Icges(4,6) * t632;
t668 = (Icges(3,5) * t1004 - Icges(3,6) * t1002) * t702;
t653 = qJD(2) * t668;
t1167 = t508 + t653;
t1166 = Icges(4,5) * t648 - Icges(4,6) * t647 + (Icges(3,5) * t1002 + Icges(3,6) * t1004) * t702 + t1180 * t992;
t819 = t992 * t1004;
t662 = -t701 * t1002 + t703 * t819;
t818 = t992 * t1002;
t746 = -t1004 * t701 - t703 * t818;
t1164 = Icges(3,5) * t746 + Icges(4,5) * t582 - Icges(3,6) * t662 - Icges(4,6) * t583 + t1180 * t946;
t664 = -t1002 * t703 - t701 * t819;
t747 = -t1004 * t703 + t701 * t818;
t1163 = -Icges(3,5) * t747 + Icges(4,5) * t587 + Icges(3,6) * t664 + Icges(4,6) * t586 + t1180 * t947;
t649 = t662 * qJD(2);
t650 = t746 * qJD(2);
t1162 = -Icges(3,5) * t649 - Icges(4,5) * t526 - Icges(3,6) * t650 - Icges(4,6) * t525;
t651 = t664 * qJD(2);
t652 = t747 * qJD(2);
t1161 = Icges(3,5) * t651 + Icges(4,5) * t528 + Icges(3,6) * t652 + Icges(4,6) * t527;
t1160 = -t1151 * t707 + t1171 * t705;
t1159 = -t1172 * t705 + t1173 * t707;
t1158 = t1152 * t707 - t1173 * t705;
t883 = 0.2e1 * t702;
t1157 = t702 / 0.2e1;
t1156 = rSges(7,1) + pkin(5);
t694 = pkin(5) * t707 + pkin(4);
t1081 = t694 * t1003 - t704 * t706;
t863 = t705 * t1003;
t511 = t647 * t863 + t648 * t707;
t862 = t707 * t1003;
t949 = t648 * t705;
t512 = -t647 * t862 + t949;
t951 = t647 * t706;
t1148 = t512 * rSges(7,1) + t511 * rSges(7,2) - rSges(7,3) * t951 + pkin(5) * t949 - t1081 * t647;
t889 = qJDD(2) * t702;
t432 = Icges(4,5) * t583 + Icges(4,6) * t582;
t433 = Icges(4,5) * t586 - Icges(4,6) * t587;
t554 = -Icges(4,5) * t647 - Icges(4,6) * t648;
t588 = Icges(3,5) * t662 + Icges(3,6) * t746;
t589 = Icges(3,5) * t664 + Icges(3,6) * t747;
t1147 = -(t589 + t433) * t947 - (t554 + t668) * t992 + (t432 + t588) * t946;
t853 = t703 * t889;
t379 = -qJD(4) * t525 - qJDD(4) * t583 - t853;
t153 = qJD(5) * t343 - qJDD(5) * t769 + t379;
t697 = qJDD(2) * t992;
t493 = qJD(4) * t632 + qJDD(4) * t647 + t697;
t286 = qJD(5) * t473 - qJDD(5) * t758 + t493;
t858 = t703 * t904;
t495 = -qJD(4) * t583 - t858;
t341 = -qJD(5) * t769 + t495;
t699 = qJD(2) * t992;
t617 = qJD(4) * t647 + t699;
t463 = -qJD(5) * t758 + t617;
t208 = pkin(4) * t344 + pkin(9) * t343;
t312 = pkin(4) * t474 + pkin(9) * t473;
t336 = pkin(4) * t488 - pkin(9) * t769;
t460 = pkin(4) * t613 - pkin(9) * t758;
t685 = qJDD(3) * t947;
t441 = -pkin(3) * t582 - pkin(8) * t583;
t849 = pkin(2) * t818 - qJ(3) * t702;
t880 = t1004 * pkin(2);
t552 = t701 * t880 + t703 * t849;
t846 = t992 * t552;
t753 = -t441 * t992 - t846;
t864 = t702 * t1002;
t676 = pkin(2) * t864 + qJ(3) * t992;
t912 = -pkin(3) * t648 - pkin(8) * t647 - t676;
t726 = t912 * t946 + t753;
t392 = pkin(3) * t526 - pkin(8) * t525;
t894 = t702 * qJD(3);
t995 = pkin(2) * qJD(2);
t673 = t819 * t995 - t894;
t833 = t1002 * t995;
t615 = t703 * t673 - t701 * t833;
t845 = t992 * t615;
t754 = -t392 * t992 - t845;
t690 = t702 * t880;
t698 = qJD(3) * t992;
t672 = qJD(2) * t690 + t698;
t918 = pkin(3) * t633 - pkin(8) * t632 - t672;
t710 = t685 + (t918 * t946 + t754) * qJD(2) + t726 * qJDD(2);
t709 = -t617 * t208 + t495 * t312 - t493 * t336 + t379 * t460 + t710;
t999 = -pkin(4) + t694;
t932 = rSges(7,1) * t478 + rSges(7,2) * t477 + pkin(5) * t952 - t1155 * t758 + t613 * t999;
t941 = rSges(7,1) * t368 + rSges(7,2) * t367 - pkin(5) * t962 - t1155 * t769 + t488 * t999;
t896 = qJD(6) * t758;
t942 = rSges(7,1) * t281 + rSges(7,2) * t280 + pkin(5) * t743 + t1155 * t473 + t474 * t999 - t896;
t898 = qJD(6) * t769;
t997 = rSges(7,1) * t169 + rSges(7,2) * t168 + pkin(5) * t745 + t1155 * t343 + t344 * t999 - t898;
t11 = qJD(6) * t345 - qJDD(6) * t770 + t153 * t932 - t286 * t941 + t341 * t942 - t463 * t997 + t709;
t1146 = -0.2e1 * t11;
t686 = t701 * t889;
t378 = -qJD(4) * t527 - qJDD(4) * t586 + t686;
t152 = qJD(5) * t345 - qJDD(5) * t770 + t378;
t688 = t701 * t904;
t494 = -qJD(4) * t586 + t688;
t340 = -qJD(5) * t770 + t494;
t1145 = t1069 * t286 + t1074 * t152 + t1075 * t153 + t1133 * t463 + t1141 * t340 + t1142 * t341;
t1144 = t1068 * t286 + t1072 * t152 + t1073 * t153 + t1132 * t463 + t1139 * t340 + t1140 * t341;
t1143 = t1067 * t286 + t1070 * t152 + t1071 * t153 + t1131 * t463 + t1137 * t340 + t1138 * t341;
t1136 = t1069 * t463 + t1074 * t340 + t1075 * t341;
t1135 = t1068 * t463 + t1072 * t340 + t1073 * t341;
t1134 = t1067 * t463 + t1070 * t340 + t1071 * t341;
t509 = -Icges(4,4) * t633 - Icges(4,2) * t632;
t510 = -Icges(4,1) * t633 - Icges(4,4) * t632;
t637 = Icges(4,4) * t647;
t520 = Icges(4,1) * t648 + Icges(4,5) * t992 - t637;
t860 = t1002 * Icges(3,4);
t643 = Icges(3,6) * t992 + (Icges(3,2) * t1004 + t860) * t702;
t861 = t1004 * Icges(3,4);
t689 = t702 * t861;
t644 = Icges(3,1) * t864 + Icges(3,5) * t992 + t689;
t859 = t1002 * Icges(3,2);
t654 = (t861 - t859) * t904;
t670 = (Icges(3,1) * t1004 - t860) * t702;
t655 = qJD(2) * t670;
t1130 = -t1167 * t946 + t509 * t583 - t510 * t582 + t519 * t525 + t520 * t526 + t643 * t650 + t644 * t649 + t654 * t662 - t655 * t746;
t1129 = t1167 * t947 + t509 * t586 + t510 * t587 + t519 * t527 + t520 * t528 + t643 * t652 + t644 * t651 + t654 * t664 - t655 * t747;
t1121 = -t1166 * t946 + t519 * t583 - t520 * t582 + t643 * t662 - t644 * t746;
t1120 = t1166 * t947 + t519 * t586 + t520 * t587 + t643 * t664 - t644 * t747;
t420 = -t582 * t707 - t583 * t863;
t963 = t582 * t705;
t421 = t583 * t862 - t963;
t961 = t583 * t706;
t1119 = -t1151 * t421 - t1170 * t961 - t1171 * t420;
t422 = -t586 * t863 + t587 * t707;
t959 = t587 * t705;
t423 = t586 * t862 + t959;
t957 = t586 * t706;
t1118 = -t1151 * t423 - t1170 * t957 - t1171 * t422;
t1117 = t1171 * t961 + t1172 * t420 + t1173 * t421;
t1116 = t1171 * t957 + t1172 * t422 + t1173 * t423;
t1115 = t1151 * t961 + t1152 * t421 + t1173 * t420;
t1114 = t1151 * t957 + t1152 * t423 + t1173 * t422;
t1112 = t1159 * t769 + t1171 * t488;
t1111 = t1159 * t770 + t1171 * t490;
t1110 = t1151 * t488 + t1158 * t769;
t1109 = t1151 * t490 + t1158 * t770;
t969 = t769 * t707;
t970 = t769 * t705;
t1108 = rSges(7,1) * t969 - rSges(7,2) * t970 + t1174 * t488 + t694 * t769;
t966 = t770 * t707;
t967 = t770 * t705;
t1107 = rSges(7,1) * t966 - rSges(7,2) * t967 + t1174 * t490 + t694 * t770;
t1103 = -t1151 * t512 + t1170 * t951 - t1171 * t511;
t1102 = -t1171 * t951 + t1172 * t511 + t1173 * t512;
t1101 = -t1151 * t951 + t1152 * t512 + t1173 * t511;
t868 = t647 * t1003;
t908 = pkin(4) * t868 + pkin(9) * t951;
t1100 = t908 + t1148;
t1099 = -t336 - t941;
t338 = pkin(4) * t490 - pkin(9) * t770;
t939 = -rSges(7,1) * t370 - rSges(7,2) * t369 + pkin(5) * t958 + t1155 * t770 - t490 * t999;
t1098 = t338 - t939;
t1097 = t1159 * t758 + t1171 * t613;
t1096 = t1151 * t613 + t1158 * t758;
t954 = t758 * t707;
t955 = t758 * t705;
t1095 = rSges(7,1) * t954 - rSges(7,2) * t955 + t1174 * t613 + t694 * t758;
t1093 = t460 + t932;
t1090 = (t1104 * t707 - t1105 * t705 + t1160 * t758 - t1170 * t613) * t463 + (t1123 * t707 - t1125 * t705 + t1160 * t769 - t1170 * t488) * t341 + (t1122 * t707 - t1124 * t705 + t1160 * t770 - t1170 * t490) * t340;
t1089 = t423 * rSges(7,1) + t422 * rSges(7,2) + rSges(7,3) * t957 + pkin(5) * t959 + t1081 * t586;
t1088 = t421 * rSges(7,1) + t420 * rSges(7,2) + rSges(7,3) * t961 - pkin(5) * t963 + t1081 * t583;
t568 = Icges(4,4) * t583;
t400 = -Icges(4,1) * t582 - Icges(4,5) * t946 + t568;
t569 = Icges(4,4) * t586;
t401 = Icges(4,1) * t587 + Icges(4,5) * t947 + t569;
t989 = Icges(3,4) * t746;
t532 = Icges(3,2) * t662 - Icges(3,6) * t946 - t989;
t988 = Icges(3,4) * t747;
t533 = Icges(3,2) * t664 + Icges(3,6) * t947 - t988;
t657 = Icges(3,4) * t662;
t534 = -Icges(3,1) * t746 - Icges(3,5) * t946 + t657;
t658 = Icges(3,4) * t664;
t535 = -Icges(3,1) * t747 + Icges(3,5) * t947 + t658;
t1087 = (-(t1002 * t534 + t1004 * t532) * t702 + t647 * t398 - t648 * t400 + t1164 * t992) * t703 + ((t1002 * t535 + t1004 * t533) * t702 - t647 * t399 + t648 * t401 + t1163 * t992) * t701;
t1086 = (t1164 * t947 - t398 * t586 - t400 * t587 - t532 * t664 + t534 * t747) * t703 + (t1163 * t947 + t399 * t586 + t401 * t587 + t533 * t664 - t535 * t747) * t701;
t1085 = (-t1164 * t946 - t398 * t583 + t400 * t582 - t532 * t662 + t534 * t746) * t703 + (-t1163 * t946 + t399 * t583 - t401 * t582 + t533 * t662 - t535 * t746) * t701;
t386 = Icges(4,4) * t526 + Icges(4,2) * t525;
t387 = Icges(4,4) * t528 + Icges(4,2) * t527;
t388 = Icges(4,1) * t526 + Icges(4,4) * t525;
t389 = Icges(4,1) * t528 + Icges(4,4) * t527;
t562 = Icges(3,4) * t649 + Icges(3,2) * t650;
t563 = Icges(3,4) * t651 + Icges(3,2) * t652;
t564 = Icges(3,1) * t649 + Icges(3,4) * t650;
t565 = Icges(3,1) * t651 + Icges(3,4) * t652;
t764 = -t1002 * t533 + t1004 * t535;
t765 = -t1002 * t532 + t1004 * t534;
t1084 = (-(qJD(2) * t765 + t1002 * t564 + t1004 * t562) * t702 + t647 * t386 - t648 * t388 + t632 * t398 + t633 * t400 + t1162 * t992) * t703 + ((qJD(2) * t764 + t1002 * t565 + t1004 * t563) * t702 - t647 * t387 + t648 * t389 - t632 * t399 - t633 * t401 + t1161 * t992) * t701;
t260 = Icges(5,5) * t488 + Icges(5,6) * t769 - Icges(5,3) * t583;
t986 = Icges(5,4) * t488;
t262 = Icges(5,2) * t769 - Icges(5,6) * t583 + t986;
t479 = Icges(5,4) * t769;
t264 = Icges(5,1) * t488 - Icges(5,5) * t583 + t479;
t100 = -t260 * t583 + t262 * t769 + t264 * t488;
t261 = Icges(5,5) * t490 + Icges(5,6) * t770 - Icges(5,3) * t586;
t985 = Icges(5,4) * t490;
t263 = Icges(5,2) * t770 - Icges(5,6) * t586 + t985;
t480 = Icges(5,4) * t770;
t265 = Icges(5,1) * t490 - Icges(5,5) * t586 + t480;
t101 = -t261 * t583 + t263 * t769 + t265 * t488;
t444 = Icges(5,5) * t613 + Icges(5,6) * t758 + Icges(5,3) * t647;
t984 = Icges(5,4) * t613;
t445 = Icges(5,2) * t758 + Icges(5,6) * t647 + t984;
t607 = Icges(5,4) * t758;
t446 = Icges(5,1) * t613 + Icges(5,5) * t647 + t607;
t117 = -t444 * t583 + t445 * t769 + t446 * t488;
t146 = Icges(5,5) * t344 - Icges(5,6) * t343 - Icges(5,3) * t525;
t148 = Icges(5,4) * t344 - Icges(5,2) * t343 - Icges(5,6) * t525;
t150 = Icges(5,1) * t344 - Icges(5,4) * t343 - Icges(5,5) * t525;
t46 = -t146 * t583 + t148 * t769 + t150 * t488 - t260 * t525 - t262 * t343 + t264 * t344;
t147 = Icges(5,5) * t346 - Icges(5,6) * t345 - Icges(5,3) * t527;
t149 = Icges(5,4) * t346 - Icges(5,2) * t345 - Icges(5,6) * t527;
t151 = Icges(5,1) * t346 - Icges(5,4) * t345 - Icges(5,5) * t527;
t47 = -t147 * t583 + t149 * t769 + t151 * t488 - t261 * t525 - t263 * t343 + t265 * t344;
t282 = Icges(5,5) * t474 - Icges(5,6) * t473 + Icges(5,3) * t632;
t283 = Icges(5,4) * t474 - Icges(5,2) * t473 + Icges(5,6) * t632;
t284 = Icges(5,1) * t474 - Icges(5,4) * t473 + Icges(5,5) * t632;
t56 = -t282 * t583 + t283 * t769 + t284 * t488 - t343 * t445 + t344 * t446 - t444 * t525;
t1080 = t100 * t379 + t101 * t378 + t117 * t493 + t46 * t495 + t47 * t494 + t56 * t617 + t1145;
t102 = -t260 * t586 + t262 * t770 + t264 * t490;
t103 = -t261 * t586 + t263 * t770 + t265 * t490;
t118 = -t444 * t586 + t445 * t770 + t446 * t490;
t48 = -t146 * t586 + t148 * t770 + t150 * t490 - t260 * t527 - t262 * t345 + t264 * t346;
t49 = -t147 * t586 + t149 * t770 + t151 * t490 - t261 * t527 - t263 * t345 + t265 * t346;
t57 = -t282 * t586 + t283 * t770 + t284 * t490 - t345 * t445 + t346 * t446 - t444 * t527;
t1079 = t102 * t379 + t103 * t378 + t118 * t493 + t48 * t495 + t49 * t494 + t57 * t617 + t1144;
t109 = t260 * t647 + t262 * t758 + t264 * t613;
t110 = t261 * t647 + t263 * t758 + t265 * t613;
t132 = t444 * t647 + t445 * t758 + t446 * t613;
t51 = t146 * t647 + t148 * t758 + t150 * t613 + t260 * t632 - t262 * t473 + t264 * t474;
t52 = t147 * t647 + t149 * t758 + t151 * t613 + t261 * t632 - t263 * t473 + t265 * t474;
t72 = t282 * t647 + t283 * t758 + t284 * t613 + t444 * t632 - t445 * t473 + t446 * t474;
t1078 = t109 * t379 + t110 * t378 + t132 * t493 + t494 * t52 + t495 * t51 + t617 * t72 + t1143;
t443 = pkin(3) * t587 - pkin(8) * t586;
t553 = -t701 * t849 + t703 * t880;
t922 = t552 * t947 + t553 * t946;
t828 = t441 * t947 + t443 * t946 + t922;
t1077 = 0.2e1 * t336 * t947 + 0.2e1 * t338 * t946 + 0.2e1 * t828;
t1042 = m(4) / 0.2e1;
t1076 = 0.2e1 * t1042;
t897 = qJD(6) * t770;
t996 = -rSges(7,1) * t171 - rSges(7,2) * t170 - pkin(5) * t744 - t1155 * t345 - t346 * t999 + t897;
t871 = t583 * t1003;
t424 = pkin(4) * t871 + pkin(9) * t961;
t1066 = -t424 + t1088;
t869 = t586 * t1003;
t425 = pkin(4) * t869 + pkin(9) * t957;
t1065 = -t425 + t1089;
t335 = pkin(4) * t769 + pkin(9) * t488;
t1064 = -t335 + t1108;
t337 = pkin(4) * t770 + pkin(9) * t490;
t1063 = -t337 + t1107;
t459 = pkin(4) * t758 + pkin(9) * t613;
t1062 = -t459 + t1095;
t1061 = (-t1172 * t478 + t1104 + t1190) * t463 + (-t1172 * t368 + t1123 + t1192) * t341 + (-t1172 * t370 + t1122 + t1191) * t340;
t1060 = (t1152 * t477 - t1105 - t1189) * t463 + (t1152 * t367 - t1125 - t1187) * t341 + (t1152 * t369 - t1124 - t1188) * t340;
t1059 = (t1151 * t477 - t1171 * t478) * t463 + (t1151 * t367 - t1171 * t368) * t341 + (t1151 * t369 - t1171 * t370) * t340;
t1058 = -m(4) - m(5) - m(6) - m(7);
t404 = -rSges(4,1) * t582 + rSges(4,2) * t583 - rSges(4,3) * t946;
t405 = rSges(4,1) * t587 + rSges(4,2) * t586 + rSges(4,3) * t947;
t790 = t404 * t701 + t405 * t703;
t390 = rSges(4,1) * t526 + rSges(4,2) * t525;
t391 = rSges(4,1) * t528 + rSges(4,2) * t527;
t791 = t390 * t701 + t391 * t703;
t1057 = (t791 * qJD(2) + t790 * qJDD(2)) * t702;
t515 = t553 * t699;
t736 = t443 * t699 + t515 + (qJD(2) * t701 * t912 - qJD(3) * t703) * t702;
t722 = t617 * t338 - t460 * t494 + t736;
t44 = -t340 * t932 - t463 * t939 + t722 - t898;
t1051 = 0.2e1 * t44;
t1056 = t939 * t1051;
t1055 = t941 * t152 + t939 * t153 + t997 * t340 + t996 * t341;
t827 = t552 * t688 + t553 * t858 + qJD(1) + t698;
t780 = t441 * t688 + t443 * t858 + t827;
t748 = t494 * t336 - t338 * t495 + t780;
t38 = t340 * t941 + t341 * t939 + t748 - t896;
t145 = t494 * t208;
t212 = t378 * t336;
t350 = t392 * t688;
t393 = pkin(3) * t528 - pkin(8) * t527;
t351 = t393 * t858;
t402 = t441 * t686;
t403 = t443 * t853;
t496 = t552 * t686;
t497 = t553 * t853;
t599 = t615 * t688;
t616 = -t701 * t673 - t703 * t833;
t600 = t616 * t858;
t696 = qJDD(3) * t992;
t776 = qJDD(1) + t496 + t497 + t599 + t600 + t696;
t740 = t350 + t351 + t402 + t403 + t776;
t209 = pkin(4) * t346 + pkin(9) * t345;
t964 = t495 * t209;
t971 = t379 * t338;
t717 = t145 + t212 + t740 - t964 - t971;
t887 = qJDD(6) * t758;
t899 = qJD(6) * t473;
t7 = t717 - t887 + t899 + t1055;
t1054 = -t38 * t997 - t7 * t941;
t777 = Icges(5,5) * t1003 - Icges(5,6) * t706;
t711 = t494 * (-Icges(5,3) * t587 + t1003 * t265 - t263 * t706 - t586 * t777) + t495 * (Icges(5,3) * t582 + t1003 * t264 - t262 * t706 - t583 * t777) + t617 * (-Icges(5,3) * t648 + t1003 * t446 - t445 * t706 + t647 * t777);
t888 = qJDD(3) * t703;
t921 = t553 * t697 + t616 * t699;
t716 = t393 * t699 + t443 * t697 + (-t888 + (qJD(2) * t918 + qJDD(2) * t912) * t701) * t702 + t921;
t712 = t617 * t209 - t494 * t312 + t493 * t338 - t378 * t460 + t716;
t12 = qJD(6) * t343 - qJDD(6) * t769 - t152 * t932 - t286 * t939 - t340 * t942 - t463 * t996 + t712;
t1053 = 0.2e1 * t12;
t1052 = 0.2e1 * t38;
t687 = t701 * t894;
t721 = qJD(2) * t726 + t687;
t715 = -t617 * t336 + t495 * t460 + t721;
t45 = t341 * t932 - t463 * t941 + t715 - t897;
t1050 = 0.2e1 * t45;
t173 = rSges(6,1) * t368 + rSges(6,2) * t367 - rSges(6,3) * t769;
t175 = rSges(6,1) * t370 + rSges(6,2) * t369 - rSges(6,3) * t770;
t53 = t173 * t340 - t175 * t341 + t748;
t1049 = 0.2e1 * t53;
t279 = rSges(6,1) * t478 + rSges(6,2) * t477 - rSges(6,3) * t758;
t66 = t175 * t463 - t279 * t340 + t722;
t1048 = 0.2e1 * t66;
t67 = -t463 * t173 + t341 * t279 + t715;
t1047 = 0.2e1 * t67;
t266 = rSges(5,1) * t488 + rSges(5,2) * t769 - rSges(5,3) * t583;
t267 = rSges(5,1) * t490 + rSges(5,2) * t770 - rSges(5,3) * t586;
t73 = t266 * t494 - t267 * t495 + t780;
t1046 = 0.2e1 * t73;
t447 = rSges(5,1) * t613 + rSges(5,2) * t758 + rSges(5,3) * t647;
t111 = t267 * t617 - t447 * t494 + t736;
t1045 = 0.2e1 * t111;
t112 = -t617 * t266 + t495 * t447 + t721;
t1044 = 0.2e1 * t112;
t1043 = qJD(2) ^ 2;
t1041 = m(5) / 0.2e1;
t1040 = m(6) / 0.2e1;
t1039 = -m(7) / 0.2e1;
t1038 = m(7) / 0.2e1;
t1037 = t152 / 0.2e1;
t1036 = t153 / 0.2e1;
t1035 = t286 / 0.2e1;
t1034 = -t340 / 0.2e1;
t1033 = t340 / 0.2e1;
t1032 = -t341 / 0.2e1;
t1031 = t341 / 0.2e1;
t1028 = t378 / 0.2e1;
t1027 = t379 / 0.2e1;
t1024 = -t463 / 0.2e1;
t1023 = t463 / 0.2e1;
t1019 = t493 / 0.2e1;
t1018 = -t494 / 0.2e1;
t1017 = t494 / 0.2e1;
t1016 = -t495 / 0.2e1;
t1015 = t495 / 0.2e1;
t1008 = -t617 / 0.2e1;
t1007 = t617 / 0.2e1;
t97 = rSges(6,1) * t169 + rSges(6,2) * t168 + rSges(6,3) * t343;
t994 = t340 * t97;
t99 = rSges(6,1) * t171 + rSges(6,2) * t170 + rSges(6,3) * t345;
t993 = t341 * t99;
t977 = t152 * t173;
t976 = t153 * t175;
t154 = rSges(5,1) * t344 - rSges(5,2) * t343 - rSges(5,3) * t525;
t975 = t154 * t494;
t155 = rSges(5,1) * t346 - rSges(5,2) * t345 - rSges(5,3) * t527;
t974 = t155 * t495;
t973 = t266 * t378;
t972 = t267 * t379;
t940 = -t173 - t336;
t938 = t175 + t338;
t937 = -t586 * t208 - t527 * t336;
t936 = t647 * t209 + t632 * t338;
t935 = -t368 * rSges(7,2) + t1156 * t367;
t934 = -t370 * rSges(7,2) + t1156 * t369;
t933 = -t583 * t312 - t525 * t460;
t931 = t279 + t460;
t930 = -t478 * rSges(7,2) + t1156 * t477;
t611 = t992 * t616;
t929 = t992 * t393 + t611;
t928 = Icges(4,2) * t582 + t400 + t568;
t927 = -Icges(4,2) * t587 + t401 + t569;
t442 = t586 * pkin(3) + pkin(8) * t587;
t660 = t664 * pkin(2);
t629 = t660 * t699;
t926 = t442 * t699 + t629;
t524 = t992 * t553;
t925 = t992 * t443 + t524;
t920 = rSges(4,1) * t633 + rSges(4,2) * t632 - t672;
t919 = -Icges(4,2) * t648 + t520 - t637;
t917 = -t648 * rSges(4,1) + t647 * rSges(4,2) - rSges(4,3) * t992 - t676;
t592 = Icges(3,1) * t662 + t989;
t916 = -t532 + t592;
t593 = Icges(3,1) * t664 + t988;
t915 = -t533 + t593;
t590 = Icges(3,2) * t746 + t657;
t914 = t534 + t590;
t591 = Icges(3,2) * t747 + t658;
t913 = t535 + t591;
t438 = t583 * rSges(4,1) + t582 * rSges(4,2);
t439 = t586 * rSges(4,1) - rSges(4,2) * t587;
t910 = t615 * t947 + t616 * t946;
t659 = t662 * pkin(2);
t909 = t659 * t688 + t660 * t858;
t559 = -t647 * rSges(4,1) - t648 * rSges(4,2);
t907 = -t643 + t670;
t669 = -t702 * t859 + t689;
t906 = t644 + t669;
t903 = qJD(4) * t582;
t902 = qJD(4) * t587;
t901 = qJD(4) * t648;
t900 = qJD(5) * t706;
t895 = qJD(6) * t706;
t893 = 2 * m(3);
t892 = 0.2e1 * m(5);
t891 = 0.2e1 * m(6);
t890 = 0.2e1 * m(7);
t885 = 0.2e1 * t992;
t884 = 0.2e1 * t701;
t882 = 0.2e1 * t703;
t881 = 0.2e1 * qJD(2);
t877 = t992 * t209 + t929;
t285 = rSges(5,1) * t474 - rSges(5,2) * t473 + rSges(5,3) * t632;
t876 = -t285 + t918;
t875 = -t312 + t918;
t874 = t992 * t338 + t925;
t200 = t421 * rSges(6,1) + t420 * rSges(6,2) + rSges(6,3) * t961;
t202 = t423 * rSges(6,1) + t422 * rSges(6,2) + rSges(6,3) * t957;
t873 = -t447 + t912;
t872 = -t460 + t912;
t311 = t512 * rSges(6,1) + t511 * rSges(6,2) - rSges(6,3) * t951;
t857 = t947 / 0.2e1;
t856 = -t946 / 0.2e1;
t440 = t583 * pkin(3) - t582 * pkin(8);
t571 = -t647 * pkin(3) + pkin(8) * t648;
t848 = t701 * t992;
t847 = t703 * t992;
t844 = t992 * t659;
t843 = -t891 / 0.2e1;
t842 = t891 / 0.2e1;
t841 = t702 * t920;
t840 = t702 * t917;
t837 = t494 * t335 - t337 * t495;
t836 = t617 * t337 - t459 * t494;
t835 = -t335 * t617 + t495 * t459;
t834 = t702 ^ 2 * t880;
t131 = rSges(6,1) * t281 + rSges(6,2) * t280 + rSges(6,3) * t473;
t832 = -t131 + t875;
t831 = -t279 + t872;
t830 = t392 * t947 + t393 * t946 + t910;
t829 = t440 * t688 + t442 * t858 + t909;
t822 = t571 + t690;
t809 = t875 - t942;
t808 = t872 - t932;
t550 = -rSges(3,1) * t746 + rSges(3,2) * t662 - rSges(3,3) * t946;
t551 = -rSges(3,1) * t747 + rSges(3,2) * t664 + rSges(3,3) * t947;
t789 = t550 * t701 + t551 * t703;
t570 = rSges(3,1) * t649 + rSges(3,2) * t650;
t573 = rSges(3,1) * t651 + rSges(3,2) * t652;
t788 = t570 * t701 + t573 * t703;
t297 = rSges(5,1) * t871 - rSges(5,2) * t961 - t582 * rSges(5,3);
t298 = rSges(5,1) * t869 - rSges(5,2) * t957 + rSges(5,3) * t587;
t454 = -rSges(5,1) * t868 + rSges(5,2) * t951 + t648 * rSges(5,3);
t249 = rSges(6,1) * t969 - rSges(6,2) * t970 + t488 * rSges(6,3);
t251 = rSges(6,1) * t966 - rSges(6,2) * t967 + t490 * rSges(6,3);
t381 = rSges(6,1) * t954 - rSges(6,2) * t955 + t613 * rSges(6,3);
t783 = t208 * t947 + t209 * t946 + t830;
t708 = 0.2e1 * qJDD(1);
t781 = 0.2e1 * t496 + 0.2e1 * t497 + 0.2e1 * t599 + 0.2e1 * t600 + 0.2e1 * t696 + t708;
t779 = Icges(5,1) * t1003 - Icges(5,4) * t706;
t778 = Icges(5,4) * t1003 - Icges(5,2) * t706;
t775 = t790 * t702;
t774 = t789 * t702;
t771 = -t571 * t702 - t834;
t763 = -t1002 * t643 + t1004 * t644;
t646 = t992 * rSges(3,3) + (rSges(3,1) * t1002 + rSges(3,2) * t1004) * t702;
t762 = t551 * t992 - t646 * t947;
t671 = (rSges(3,1) * t1004 - rSges(3,2) * t1002) * t702;
t656 = qJD(2) * t671;
t761 = t573 * t992 - t656 * t947;
t760 = -t550 * t992 - t646 * t946;
t759 = -t570 * t992 - t656 * t946;
t755 = (Icges(5,5) * t769 - Icges(5,6) * t488) * t495 + (Icges(5,5) * t770 - Icges(5,6) * t490) * t494 + (Icges(5,5) * t758 - Icges(5,6) * t613) * t617;
t752 = -t336 * t901 - t617 * t424 - t460 * t903 - t495 * t908;
t751 = t701 * t771;
t750 = t440 + t659;
t749 = t405 * t992 + t701 * t840;
t742 = 0.2e1 * t350 + 0.2e1 * t351 + 0.2e1 * t402 + 0.2e1 * t403 + t781;
t739 = t338 * t901 + t617 * t425 - t460 * t902 + t494 * t908 + t926;
t738 = -t208 * t992 + t754;
t737 = -t336 * t992 + t753;
t735 = t336 * t902 + t338 * t903 + t494 * t424 - t425 * t495 + t829;
t730 = (Icges(5,1) * t770 - t263 - t985) * t494 + (Icges(5,1) * t769 - t262 - t986) * t495 + (Icges(5,1) * t758 - t445 - t984) * t617;
t729 = (Icges(5,2) * t490 - t265 - t480) * t494 + (Icges(5,2) * t488 - t264 - t479) * t495 + (Icges(5,2) * t613 - t446 - t607) * t617;
t728 = -t390 * t992 + t703 * t841 - t845;
t727 = -t404 * t992 + t703 * t840 - t846;
t725 = -0.2e1 * t964 + t742 - 0.2e1 * t971 + 0.2e1 * t212 + 0.2e1 * t145;
t724 = t442 + t660;
t720 = (qJD(2) * t788 + qJDD(2) * t789) * t702;
t718 = -t440 * t992 + t703 * t771 - t844;
t595 = rSges(3,1) * t664 + rSges(3,2) * t747;
t594 = rSges(3,1) * t662 + rSges(3,2) * t746;
t529 = -t647 * t900 + t901;
t458 = rSges(5,1) * t758 - rSges(5,2) * t613;
t453 = Icges(5,5) * t648 - t647 * t779;
t452 = Icges(5,6) * t648 - t647 * t778;
t450 = t760 * qJD(2);
t449 = t762 * qJD(2);
t430 = t586 * t900 + t902;
t429 = t583 * t900 - t903;
t352 = t583 * t460;
t342 = qJD(2) * t774 + qJD(1);
t334 = rSges(5,1) * t770 - rSges(5,2) * t490;
t333 = rSges(5,1) * t769 - rSges(5,2) * t488;
t323 = rSges(6,1) * t477 - rSges(6,2) * t478;
t301 = t647 * t338;
t296 = Icges(5,5) * t587 + t586 * t779;
t295 = -Icges(5,5) * t582 + t583 * t779;
t294 = Icges(5,6) * t587 + t586 * t778;
t293 = -Icges(5,6) * t582 + t583 * t778;
t269 = t586 * t336;
t228 = rSges(6,1) * t369 - rSges(6,2) * t370;
t226 = rSges(6,1) * t367 - rSges(6,2) * t368;
t196 = qJD(2) * t727 + t687;
t195 = qJD(2) * t749 - t703 * t894 + t515;
t136 = qJD(2) * t775 + t827;
t114 = qJD(2) * t728 + qJDD(2) * t727 + t685;
t113 = t391 * t699 + t405 * t697 + (-t888 + (qJD(2) * t920 + qJDD(2) * t917) * t701) * t702 + t921;
t104 = t1057 + t776;
t55 = -t617 * t154 - t493 * t266 + t495 * t285 + t379 * t447 + t710;
t54 = t155 * t617 + t267 * t493 - t285 * t494 - t378 * t447 + t716;
t50 = t109 * t495 + t110 * t494 + t132 * t617;
t43 = t740 - t972 + t973 - t974 + t975;
t42 = t102 * t495 + t103 * t494 + t118 * t617;
t41 = t100 * t495 + t101 * t494 + t117 * t617;
t27 = t341 * t131 + t153 * t279 - t286 * t173 - t463 * t97 + t709;
t26 = -t131 * t340 - t152 * t279 + t175 * t286 + t463 * t99 + t712;
t13 = t717 - t976 + t977 - t993 + t994;
t1 = [t781 * t1042 + (t742 - 0.2e1 * t972 + 0.2e1 * t973 - 0.2e1 * t974 + 0.2e1 * t975) * t1041 + (t725 - 0.2e1 * t976 + 0.2e1 * t977 - 0.2e1 * t993 + 0.2e1 * t994) * t1040 + m(2) * qJDD(1) + (-m(2) + t1058) * g(3) + (t708 / 0.2e1 - g(3) + t720) * m(3) + t1057 * t1076 + (t725 - 0.2e1 * t887 + 0.2e1 * t899 + 0.2e1 * t1055) * t1038; ((qJD(2) * t759 + qJDD(2) * t760) * t760 + t450 * t759 + (qJD(2) * t761 + qJDD(2) * t762) * t762 + t449 * t761 + (qJDD(1) + t720) * t774 + t342 * t788 * t702) * t893 / 0.2e1 + ((qJD(2) * t1084 + qJDD(2) * t1087) * t702 + t1078) * t992 / 0.2e1 + ((-t582 * t261 + t294 * t769 + t488 * t296) * t494 + (-t582 * t260 + t293 * t769 + t488 * t295) * t495 + (-t582 * t444 + t452 * t769 + t488 * t453) * t617 + (-t100 * t582 + t101 * t587 + t117 * t648) * qJD(4) + t711 * t583) * t1016 + ((t648 * t261 + t294 * t758 + t613 * t296) * t494 + (t648 * t260 + t293 * t758 + t613 * t295) * t495 + (t648 * t444 + t452 * t758 + t613 * t453) * t617 + (-t109 * t582 + t110 * t587 + t132 * t648) * qJD(4) - t711 * t647) * t1008 + ((t261 * t587 + t294 * t770 + t490 * t296) * t494 + (t260 * t587 + t293 * t770 + t490 * t295) * t495 + (t444 * t587 + t452 * t770 + t490 * t453) * t617 + (-t102 * t582 + t103 * t587 + t118 * t648) * qJD(4) + t711 * t586) * t1018 - m(5) * ((-t266 * t901 - t617 * t297 - t447 * t903 + t495 * t454) * t1044 + (t267 * t901 + t617 * t298 - t447 * t902 - t494 * t454 + t926) * t1045 + (t297 * t494 - t298 * t495 + (t266 * t587 + t267 * t582) * qJD(4) + t829) * t1046 + (t111 * t751 + t112 * t718) * t881) / 0.2e1 + ((t583 * t919 + t662 * t906 - t746 * t907) * t992 + (t583 * t927 + t662 * t913 - t746 * t915) * t947 + (-t583 * t928 - t662 * t914 + t746 * t916 + t1147) * t946 + (t1168 * t947 - t1176) * t582) * t1043 * t946 / 0.2e1 - t50 * t901 / 0.2e1 + (t1069 * t992 + (t1074 * t701 - t1075 * t703) * t702) * t1036 - t1134 * t529 / 0.2e1 - t1135 * t430 / 0.2e1 - t1136 * t429 / 0.2e1 + (t1131 * t992 + (t1137 * t701 - t1138 * t703) * t702) * t1023 + (-t195 * t629 - t136 * t909 - (t196 * (-t438 * t992 - t559 * t946 - t703 * t834 - t844) + t195 * (t439 * t992 - t559 * t947 - t701 * t834) + t136 * (t438 * t947 + t439 * t946)) * t881 / 0.2e1 - g(1) * (t660 + t439) - g(2) * (t659 + t438) - g(3) * (t690 + t559)) * m(4) + (t1086 * t702 + t1120 * t992) * t686 / 0.2e1 - (t1085 * t702 + t1121 * t992) * t853 / 0.2e1 - t42 * t902 / 0.2e1 + t41 * t903 / 0.2e1 + (0.2e1 * t55 * (-t266 * t992 + t753) + (-t154 * t992 + t754) * t1044 + 0.2e1 * t54 * (t267 * t992 + t925) + (t155 * t992 + t929) * t1045 + 0.2e1 * t43 * t828 + t830 * t1046 + ((t112 * t876 + t73 * t155 + t43 * t267 + t55 * t873) * t882 + (t111 * t876 + t73 * t154 + t43 * t266 + t54 * t873) * t884) * t702) * t1041 - m(6) * ((-t529 * t173 - t463 * t200 + t429 * t279 + t341 * t311 + t752) * t1047 + (t529 * t175 + t463 * t202 - t430 * t279 - t340 * t311 + t739) * t1048 + (t173 * t430 - t175 * t429 + t200 * t340 - t202 * t341 + t735) * t1049 + (t66 * t751 + t67 * t718) * t881) / 0.2e1 + (t1132 * t992 + (t1139 * t701 - t1140 * t703) * t702) * t1033 + (t1133 * t992 + (t1141 * t701 - t1142 * t703) * t702) * t1031 + (t1086 * t889 + t1079 + (((t1162 * t947 - t386 * t586 - t388 * t587 - t398 * t527 - t400 * t528 - t532 * t652 - t534 * t651 - t562 * t664 + t564 * t747) * t703 + (t1161 * t947 + t387 * t586 + t389 * t587 + t399 * t527 + t401 * t528 + t533 * t652 + t535 * t651 + t563 * t664 - t565 * t747) * t701) * t883 + t1129 * t992) * qJD(2)) * t857 + (t1085 * t889 + t1080 + (((-t1162 * t946 - t386 * t583 + t388 * t582 - t398 * t525 - t400 * t526 - t532 * t650 - t534 * t649 - t562 * t662 + t564 * t746) * t703 + (-t1161 * t946 + t387 * t583 - t389 * t582 + t399 * t525 + t401 * t526 + t533 * t650 + t535 * t649 + t563 * t662 - t565 * t746) * t701) * t883 + t1130 * t992) * qJD(2)) * t856 + (t1087 * t1157 + t1120 * t857 + t1121 * t856 + (-t647 * t519 + t648 * t520 + (t1002 * t644 + t1004 * t643) * t702 + t1166 * t992) * t992) * t697 - m(5) * (g(1) * (t298 + t724) + g(2) * (t297 + t750) + g(3) * (t454 + t822)) - m(6) * (g(1) * (t724 + t202 + t425) + g(2) * (t750 + t200 + t424) + g(3) * (t822 + t311 - t908)) + (t57 * t992 + (-t48 * t703 + t49 * t701) * t702) * t1017 + (t132 * t992 + (-t109 * t703 + t110 * t701) * t702) * t1019 + (t117 * t992 + (-t100 * t703 + t101 * t701) * t702) * t1027 + (t118 * t992 + (-t102 * t703 + t103 * t701) * t702) * t1028 + (0.2e1 * t11 * t737 + t738 * t1050 + t874 * t1053 + t877 * t1051 + t7 * t1077 + t783 * t1052 + ((t11 * t808 - t38 * t996 + t45 * t809 - t7 * t939) * t882 + (t12 * t808 + t44 * t809 - t1054) * t884) * t702 + (-t1050 * t997 - t1051 * t996 - t1053 * t939 + t1146 * t941) * t992) * t1038 + (t72 * t992 + (-t51 * t703 + t52 * t701) * t702) * t1007 + (t56 * t992 + (-t46 * t703 + t47 * t701) * t702) * t1015 + (t1067 * t529 + (t1101 * t478 + t1102 * t477 + t1103 * t758 + t1104 * t512 + t1105 * t511 - t1106 * t951) * t463 + t1070 * t430 + t1071 * t429 + (t1115 * t478 + t1117 * t477 + t1119 * t758 + t1123 * t512 + t1125 * t511 - t1127 * t951) * t341 + (t1114 * t478 + t1116 * t477 + t1118 * t758 + t1122 * t512 + t1124 * t511 - t1126 * t951) * t340) * t1024 + (t1067 * t992 + (t1070 * t701 - t1071 * t703) * t702) * t1035 + (t1068 * t529 + (t1101 * t370 + t1102 * t369 + t1103 * t770 + t1104 * t423 + t1105 * t422 + t1106 * t957) * t463 + t1072 * t430 + t1073 * t429 + (t1115 * t370 + t1117 * t369 + t1119 * t770 + t1123 * t423 + t1125 * t422 + t1127 * t957) * t341 + (t1114 * t370 + t1116 * t369 + t1118 * t770 + t1122 * t423 + t1124 * t422 + t1126 * t957) * t340) * t1034 + (t1068 * t992 + (t1072 * t701 - t1073 * t703) * t702) * t1037 + (t1069 * t529 + (t1101 * t368 + t1102 * t367 + t1103 * t769 + t1104 * t421 + t1105 * t420 + t1106 * t961) * t463 + t1074 * t430 + t1075 * t429 + (t1115 * t368 + t1117 * t367 + t1119 * t769 + t1123 * t421 + t1125 * t420 + t1127 * t961) * t341 + (t1114 * t368 + t1116 * t367 + t1118 * t769 + t1122 * t421 + t1124 * t420 + t1126 * t961) * t340) * t1032 + ((t1100 * t341 + t429 * t932 + t586 * t895 + t752) * t1050 + (-t1100 * t340 - t430 * t932 + t583 * t895 + t739) * t1051 + (-t1065 * t341 + t1066 * t340 + t939 * t429 + t941 * t430 - t647 * t895 + t735) * t1052 + (t44 * t751 + t45 * t718) * t881 + (-t1050 * t941 - t1056) * t529 + (-t1050 * t1066 + t1051 * t1065) * t463) * t1039 + (t1084 * t1157 + t1129 * t857 + t1130 * t856 + (t589 * t848 - t588 * t847 + ((t1002 * t593 + t1004 * t591 + t764) * t701 - (t1002 * t592 + t1004 * t590 + t765) * t703) * t702) * t1175 + (-t647 * t509 + t648 * t510 - t632 * t519 - t633 * t520 + (qJD(2) * t763 + t1002 * t655 + t1004 * t654) * t702 + (t1002 * t670 + t1004 * t669 + t763) * t1175 + (t508 + t653 / 0.2e1) * t992) * t992) * t699 - m(7) * (g(1) * (t724 + t1089) + g(2) * (t750 + t1088) + g(3) * (t822 + t1148)) + (0.2e1 * t27 * (-t173 * t992 + t737) + (-t97 * t992 + t738) * t1047 + 0.2e1 * t26 * (t175 * t992 + t874) + (t99 * t992 + t877) * t1048 + t13 * t1077 + t783 * t1049 + ((t13 * t175 + t27 * t831 + t53 * t99 + t67 * t832) * t882 + (t13 * t173 + t26 * t831 + t53 * t97 + t66 * t832) * t884) * t702) * t1040 - (t992 * ((-t1165 * t648 + t992 * t554 - t919 * t647) * t992 + (-t432 * t847 + t433 * t848 + (-t1168 * t701 + t1169 * t703) * t648 + (-t701 * t927 + t703 * t928) * t647) * t702) + ((t586 * t919 + t664 * t906 - t747 * t907) * t992 + (-t586 * t928 - t664 * t914 + t747 * t916) * t946 + t1176 * t587 + (-t1168 * t587 + t586 * t927 + t664 * t913 - t747 * t915 - t1147) * t947) * t947) * t1043 / 0.2e1 - (t342 * (t594 * t701 + t595 * t703) * t904 + (t450 * (-t594 * t992 - t671 * t946) + t449 * (t595 * t992 - t671 * t947)) * qJD(2)) * t893 / 0.2e1 + (t114 * t727 + t196 * t728 + t113 * (t524 + t749) + t195 * (t391 * t992 + t701 * t841 + t611) + t104 * (t775 + t922) + t136 * (t702 * t791 + t910)) * t1076 - m(3) * (g(1) * t595 + g(2) * t594 + g(3) * t671); (t104 * t885 + (-t113 * t703 + t114 * t701) * t883) * t1042 + (t43 * t885 + (-t54 * t703 + t55 * t701) * t883) * t1041 + (t13 * t885 + (-t26 * t703 + t27 * t701) * t883) * t1040 + (t7 * t885 + (t11 * t701 - t12 * t703) * t883) * t1038 + t1058 * (g(3) * t992 + (g(1) * t701 - g(2) * t703) * t702); (t488 * t730 - t583 * t755 - t729 * t769) * t1016 - (t1134 * t613 + t1135 * t490 + t1136 * t488) * qJD(5) / 0.2e1 + (t50 + t1134) * t632 / 0.2e1 - (t42 + t1135) * t527 / 0.2e1 - (t41 + t1136) * t525 / 0.2e1 + (t1067 * t632 - t1070 * t527 - t1071 * t525 + t1131 * t647 - t1137 * t586 - t1138 * t583) * t1023 + (t55 * (-t266 * t647 - t447 * t583) + t112 * (-t154 * t647 - t266 * t632 - t285 * t583 - t447 * t525) + t54 * (t267 * t647 + t447 * t586) + t111 * (t155 * t647 + t267 * t632 + t285 * t586 + t447 * t527) + t43 * (-t266 * t586 + t267 * t583) + t73 * (-t154 * t586 + t155 * t583 - t266 * t527 + t267 * t525)) * t892 / 0.2e1 - (t112 * (-t333 * t617 + t458 * t495) + t111 * (t334 * t617 - t458 * t494) + t73 * (t333 * t494 - t334 * t495)) * t892 / 0.2e1 - m(6) * (g(1) * (t251 + t337) + g(2) * (t249 + t335) + g(3) * (t381 + t459)) + (t27 * (-t279 * t583 + t647 * t940 - t352) + t67 * (-t131 * t583 - t279 * t525 + (-t208 - t97) * t647 + t940 * t632 + t933) + t26 * (t175 * t647 + t586 * t931 + t301) + t66 * (t175 * t632 + t647 * t99 + (t131 + t312) * t586 + t931 * t527 + t936) + t13 * (-t173 * t586 + t583 * t938 - t269) + t53 * (-t173 * t527 - t586 * t97 + (t209 + t99) * t583 + t938 * t525 + t937)) * t842 + (t1068 * t632 - t1072 * t527 - t1073 * t525 + t1132 * t647 - t1139 * t586 - t1140 * t583) * t1033 + (t1069 * t632 - t1074 * t527 - t1075 * t525 + t1133 * t647 - t1141 * t586 - t1142 * t583) * t1031 + (-t102 * t525 - t103 * t527 + t118 * t632 - t48 * t583 - t49 * t586 + t57 * t647) * t1017 + (-t109 * t583 - t110 * t586 + t132 * t647) * t1019 + (-t100 * t583 - t101 * t586 + t117 * t647) * t1027 + (-t102 * t583 - t103 * t586 + t118 * t647) * t1028 + (t933 * t1050 + t936 * t1051 + t937 * t1052 + t301 * t1053 + t352 * t1146 - 0.2e1 * t7 * t269 + (t1050 * t1099 - t1056) * t632 + (t1051 * t1093 - t941 * t1052) * t527 + (-t932 * t1050 + t1052 * t1098) * t525 + 0.2e1 * (t11 * t1099 + t45 * (-t208 - t997) - t12 * t939 - t44 * t996) * t647 + 0.2e1 * (t12 * t1093 + t44 * (t312 + t942) + t1054) * t586 + 0.2e1 * (-t11 * t932 - t45 * t942 + t7 * t1098 + t38 * (t209 - t996)) * t583) * t1038 + (t490 * t730 - t586 * t755 - t729 * t770) * t1018 + (t613 * t730 + t647 * t755 - t729 * t758) * t1008 + ((qJD(6) * t490 + t1062 * t341 - t1064 * t463 + t835) * t1050 + (qJD(6) * t488 - t1062 * t340 + t1063 * t463 + t836) * t1051 + (qJD(6) * t613 - t1063 * t341 + t1064 * t340 + t837) * t1052 + 0.2e1 * ((-t44 * t939 - t45 * t941) * t613 + (t38 * t941 - t44 * t932) * t490 + (t38 * t939 + t45 * t932) * t488) * qJD(5)) * t1039 + (-t109 * t525 - t110 * t527 + t132 * t632 - t51 * t583 - t52 * t586 + t647 * t72) * t1007 + (-t100 * t525 - t101 * t527 + t117 * t632 - t46 * t583 - t47 * t586 + t56 * t647) * t1015 + (t1067 * t647 - t1070 * t586 - t1071 * t583) * t1035 + (t1090 * t770 + (t1096 * t370 + t1097 * t369 + t1106 * t490) * t463 + (t1110 * t370 + t1112 * t369 + t1127 * t490) * t341 + (t1109 * t370 + t1111 * t369 + t1126 * t490) * t340 + (t1068 * t613 + t1072 * t490 + t1073 * t488) * qJD(5)) * t1034 + (t1068 * t647 - t1072 * t586 - t1073 * t583) * t1037 + (t1090 * t769 + (t1096 * t368 + t1097 * t367 + t1106 * t488) * t463 + (t1110 * t368 + t1112 * t367 + t1127 * t488) * t341 + (t1109 * t368 + t1111 * t367 + t1126 * t488) * t340 + (t1069 * t613 + t1074 * t490 + t1075 * t488) * qJD(5)) * t1032 + (t1069 * t647 - t1074 * t586 - t1075 * t583) * t1036 - m(7) * (g(1) * t1107 + g(2) * t1108 + g(3) * t1095) + (t1090 * t758 + (t1096 * t478 + t1097 * t477 + t1106 * t613) * t463 + (t1110 * t478 + t1112 * t477 + t1127 * t613) * t341 + (t1109 * t478 + t1111 * t477 + t1126 * t613) * t340 + (t1067 * t613 + t1070 * t490 + t1071 * t488) * qJD(5)) * t1024 + t1078 * t647 / 0.2e1 - t1079 * t586 / 0.2e1 - t1080 * t583 / 0.2e1 - m(5) * (g(1) * t334 + g(2) * t333 + g(3) * t458) + (t67 * (-t249 * t463 + t341 * t381 + (-t173 * t613 + t279 * t488) * qJD(5) + t835) + t66 * (t251 * t463 - t340 * t381 + (t175 * t613 - t279 * t490) * qJD(5) + t836) + t53 * (t249 * t340 - t251 * t341 + (t173 * t490 - t175 * t488) * qJD(5) + t837)) * t843; -m(7) * (g(1) * t934 + g(2) * t935 + g(3) * t930) - (t45 * (t341 * t930 - t463 * t935) + t44 * (-t340 * t930 + t463 * t934) + t38 * (t340 * t935 - t341 * t934)) * t890 / 0.2e1 - m(6) * (g(1) * t228 + g(2) * t226 + g(3) * t323) + (t11 * (t758 * t941 - t769 * t932) + t45 * (t343 * t932 - t473 * t941 + t758 * t997 - t769 * t942) + t12 * (t758 * t939 + t770 * t932) + t44 * (-t345 * t932 - t473 * t939 + t758 * t996 + t770 * t942) + t7 * (-t769 * t939 - t770 * t941) + t38 * (t343 * t939 + t345 * t941 - t769 * t996 - t770 * t997)) * t890 / 0.2e1 + (t27 * (t173 * t758 - t279 * t769) + t67 * (-t131 * t769 - t173 * t473 + t279 * t343 + t758 * t97) + t26 * (-t175 * t758 + t279 * t770) + t66 * (t131 * t770 + t175 * t473 - t279 * t345 - t758 * t99) + t13 * (-t173 * t770 + t175 * t769) + t53 * (t173 * t345 - t175 * t343 + t769 * t99 - t770 * t97)) * t842 + (t67 * (-t226 * t463 + t323 * t341) + t66 * (t228 * t463 - t323 * t340) + t53 * (t226 * t340 - t228 * t341)) * t843 + (-t1068 * t758 - t1072 * t770 - t1073 * t769) * t1037 + (-t1069 * t758 - t1074 * t770 - t1075 * t769) * t1036 + (-t1067 * t758 - t1070 * t770 - t1071 * t769) * t1035 + (-t1059 * t770 + t1060 * t370 + t1061 * t369) * t1034 + (t1068 * t473 + t1072 * t345 + t1073 * t343 - t1132 * t758 - t1139 * t770 - t1140 * t769) * t1033 + (-t1059 * t769 + t1060 * t368 + t1061 * t367) * t1032 + (t1069 * t473 + t1074 * t345 + t1075 * t343 - t1133 * t758 - t1141 * t770 - t1142 * t769) * t1031 + t1136 * t343 / 0.2e1 + t1135 * t345 / 0.2e1 + (-t1059 * t758 + t1060 * t478 + t1061 * t477) * t1024 + (t1067 * t473 + t1070 * t345 + t1071 * t343 - t1131 * t758 - t1137 * t770 - t1138 * t769) * t1023 + t1134 * t473 / 0.2e1 - t1145 * t769 / 0.2e1 - t1144 * t770 / 0.2e1 - t1143 * t758 / 0.2e1; (-(-g(3) + t7) * t758 - (t11 - g(1)) * t770 - (-g(2) + t12) * t769 + (t341 * t758 - t463 * t769 + t345) * t45 + (-t340 * t758 + t463 * t770 + t343) * t44 + (t340 * t769 - t341 * t770 + t473) * t38) * m(7);];
tau  = t1;
