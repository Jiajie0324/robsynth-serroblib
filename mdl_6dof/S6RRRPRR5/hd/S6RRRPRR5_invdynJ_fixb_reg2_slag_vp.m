% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRR5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:23:17
% EndTime: 2019-03-09 18:23:39
% DurationCPUTime: 12.96s
% Computational Cost: add. (18130->712), mult. (39179->860), div. (0->0), fcn. (28328->14), ass. (0->362)
t514 = qJD(5) + qJD(6);
t307 = sin(qJ(6));
t308 = sin(qJ(5));
t312 = cos(qJ(5));
t504 = cos(qJ(6));
t515 = -t307 * t312 - t504 * t308;
t171 = t514 * t515;
t309 = sin(qJ(3));
t310 = sin(qJ(2));
t313 = cos(qJ(2));
t505 = cos(qJ(3));
t234 = t309 * t313 + t310 * t505;
t218 = t234 * qJD(1);
t536 = -t515 * t218 - t171;
t414 = t505 * t313;
t388 = qJD(1) * t414;
t436 = qJD(1) * t310;
t411 = t309 * t436;
t216 = -t388 + t411;
t301 = qJD(2) + qJD(3);
t183 = -t312 * t216 + t301 * t308;
t185 = t216 * t308 + t301 * t312;
t112 = t504 * t183 + t185 * t307;
t357 = -t307 * t183 + t185 * t504;
t174 = t301 * t234;
t401 = qJDD(1) * t505;
t426 = t310 * qJDD(1);
t377 = t309 * t426 - t313 * t401;
t135 = qJD(1) * t174 + t377;
t300 = qJDD(2) + qJDD(3);
t433 = qJD(5) * t312;
t434 = qJD(5) * t308;
t417 = -t216 * t434 - t308 * t300 - t301 * t433;
t364 = t312 * t135 + t417;
t125 = t308 * t135;
t92 = -t216 * t433 - t312 * t300 + t301 * t434 - t125;
t36 = qJD(6) * t357 - t307 * t92 - t504 * t364;
t233 = -t307 * t308 + t504 * t312;
t407 = t504 * qJD(6);
t431 = qJD(6) * t307;
t526 = t233 * t218 - t307 * t434 - t308 * t431 + (qJD(5) * t504 + t407) * t312;
t14 = t112 * t526 - t515 * t36;
t453 = t309 * t310;
t378 = t301 * t453;
t425 = t313 * qJDD(1);
t392 = t301 * t388 + t309 * t425 + t310 * t401;
t134 = qJD(1) * t378 - t392;
t127 = -qJDD(5) + t134;
t126 = -qJDD(6) + t127;
t525 = qJD(5) + t218;
t204 = qJD(6) + t525;
t537 = -t126 * t515 - t204 * t526;
t35 = t183 * t407 + t185 * t431 - t307 * t364 + t504 * t92;
t13 = -t233 * t35 - t357 * t536;
t316 = -pkin(8) - pkin(7);
t247 = t316 * t310;
t236 = qJD(1) * t247;
t488 = qJD(2) * pkin(2);
t224 = t236 + t488;
t205 = t505 * t224;
t248 = t316 * t313;
t237 = qJD(1) * t248;
t454 = t309 * t237;
t164 = -t205 - t454;
t429 = qJD(4) + t164;
t494 = t218 * pkin(4);
t430 = t494 + t429;
t506 = pkin(3) + pkin(9);
t107 = -t301 * t506 + t430;
t503 = pkin(2) * t313;
t287 = pkin(1) + t503;
t246 = t287 * qJD(1);
t343 = -qJ(4) * t218 - t246;
t110 = t216 * t506 + t343;
t64 = t312 * t107 - t110 * t308;
t51 = -pkin(10) * t185 + t64;
t41 = pkin(5) * t525 + t51;
t65 = t107 * t308 + t110 * t312;
t52 = -pkin(10) * t183 + t65;
t485 = t307 * t52;
t19 = t41 * t504 - t485;
t420 = t504 * t52;
t20 = t307 * t41 + t420;
t427 = qJD(1) * qJD(2);
t406 = t310 * t427;
t213 = pkin(2) * t406 - qJDD(1) * t287;
t331 = qJ(4) * t134 - qJD(4) * t218 + t213;
t40 = t135 * t506 + t331;
t405 = t313 * t427;
t179 = qJDD(2) * pkin(2) - t316 * (-t405 - t426);
t182 = t316 * (-t406 + t425);
t408 = qJD(3) * t505;
t435 = qJD(3) * t309;
t393 = -t505 * t179 - t309 * t182 + t224 * t435 - t237 * t408;
t366 = qJDD(4) + t393;
t48 = -pkin(4) * t134 - t300 * t506 + t366;
t422 = t107 * t433 + t308 * t48 + t312 * t40;
t11 = -t110 * t434 + t422;
t10 = pkin(10) * t364 + t11;
t12 = -qJD(5) * t65 - t308 * t40 + t312 * t48;
t9 = -pkin(5) * t127 + pkin(10) * t92 + t12;
t3 = t10 * t504 + t307 * t9 + t407 * t41 - t52 * t431;
t4 = -qJD(6) * t20 - t307 * t10 + t504 * t9;
t306 = qJ(2) + qJ(3);
t298 = cos(t306);
t283 = g(3) * t298;
t296 = sin(t306);
t314 = cos(qJ(1));
t465 = t296 * t314;
t311 = sin(qJ(1));
t466 = t296 * t311;
t416 = -g(1) * t465 - g(2) * t466 + t283;
t333 = t19 * t536 - t526 * t20 - t4 * t233 + t3 * t515 - t416;
t398 = t525 * t185;
t535 = t364 + t398;
t534 = -t233 * t126 - t204 * t536;
t397 = t525 * t183;
t533 = t92 - t397;
t532 = t216 * pkin(5) + pkin(10) * t434;
t299 = t308 * pkin(5);
t315 = -pkin(10) - pkin(9);
t531 = t296 * t315 + t298 * t299;
t511 = t525 * t65 + t12;
t162 = pkin(3) * t218 + qJ(4) * t216;
t151 = pkin(2) * t436 + t162;
t211 = t218 * pkin(9);
t118 = t151 + t211;
t222 = t505 * t237;
t168 = t236 * t309 - t222;
t495 = t216 * pkin(4);
t140 = t168 - t495;
t131 = t312 * t140;
t286 = -pkin(2) * t505 - pkin(3);
t276 = -pkin(9) + t286;
t421 = pkin(2) * t435;
t396 = t312 * t421;
t501 = pkin(10) * t218;
t530 = -t276 * t434 + t396 - t131 - (-t118 - t501) * t308 + t532;
t469 = t218 * t312;
t199 = pkin(10) * t469;
t492 = -pkin(10) + t276;
t226 = t492 * t312;
t73 = t312 * t118 + t308 * t140;
t529 = qJD(5) * t226 + t308 * t421 - t199 - t73;
t165 = t309 * t224 - t222;
t133 = t165 - t495;
t124 = t312 * t133;
t128 = t162 + t211;
t432 = qJD(5) * t506;
t528 = -t124 + t532 + (t432 + t128 + t501) * t308;
t491 = -pkin(10) - t506;
t241 = t491 * t312;
t77 = t312 * t128 + t308 * t133;
t527 = qJD(5) * t241 - t199 - t77;
t478 = t112 * t357;
t232 = -t414 + t453;
t155 = t233 * t232;
t524 = -t112 ^ 2 + t357 ^ 2;
t523 = t112 * t204 - t35;
t305 = qJ(5) + qJ(6);
t295 = sin(t305);
t297 = cos(t305);
t463 = t297 * t311;
t192 = t295 * t465 + t463;
t462 = t297 * t314;
t194 = -t295 * t466 + t462;
t294 = t301 * qJ(4);
t119 = t294 + t133;
t94 = t183 * pkin(5) + t119;
t522 = g(1) * t192 - g(2) * t194 + t94 * t112 - t283 * t295 - t3;
t365 = -qJ(4) * t234 - t287;
t137 = t232 * t506 + t365;
t188 = -t505 * t247 - t248 * t309;
t152 = pkin(4) * t234 + t188;
t148 = t308 * t152;
t84 = t312 * t137 + t148;
t519 = t531 * t311;
t518 = t531 * t314;
t361 = t296 * t299 - t298 * t315;
t415 = t505 * t236;
t169 = t415 + t454;
t263 = pkin(2) * t408 + qJD(4);
t442 = -t263 + t169;
t440 = t298 * pkin(3) + t296 * qJ(4);
t288 = t300 * qJ(4);
t517 = -t301 * qJD(4) - t288;
t285 = pkin(5) * t312 + pkin(4);
t516 = pkin(5) * t433 + t218 * t285 - t454;
t381 = g(1) * t314 + g(2) * t311;
t451 = t312 * t314;
t456 = t308 * t311;
t206 = t296 * t451 - t456;
t452 = t311 * t312;
t455 = t308 * t314;
t208 = t296 * t452 + t455;
t512 = -g(1) * t206 - g(2) * t208 + t312 * t283;
t191 = -t295 * t311 + t296 * t462;
t193 = t295 * t314 + t296 * t463;
t510 = -g(1) * t191 - g(2) * t193 + t297 * t283 - t94 * t357 + t4;
t509 = t204 * t357 - t36;
t409 = qJD(2) * t505;
t367 = t316 * t409;
t391 = qJD(2) * t309 * t316;
t116 = -t247 * t408 - t248 * t435 - t310 * t367 - t313 * t391;
t189 = t309 * t247 - t248 * t505;
t380 = g(1) * t311 - g(2) * t314;
t508 = -t116 * t301 + t189 * t300 + t296 * t380;
t507 = t218 ^ 2;
t502 = pkin(3) * t300;
t282 = g(3) * t296;
t496 = g(3) * t313;
t280 = t298 * pkin(9);
t493 = pkin(4) - t316;
t225 = t492 * t308;
t157 = -t307 * t225 + t226 * t504;
t490 = qJD(6) * t157 + t530 * t307 + t529 * t504;
t158 = t225 * t504 + t307 * t226;
t489 = -qJD(6) * t158 - t529 * t307 + t530 * t504;
t484 = t308 * t64;
t483 = t312 * t92;
t240 = t491 * t308;
t180 = -t307 * t240 + t241 * t504;
t482 = qJD(6) * t180 + t528 * t307 + t527 * t504;
t181 = t240 * t504 + t307 * t241;
t481 = -qJD(6) * t181 - t527 * t307 + t528 * t504;
t480 = qJD(4) - t205 + t516;
t479 = pkin(7) * qJDD(1);
t476 = t165 * t301;
t475 = t185 * t183;
t474 = t204 * t216;
t473 = t525 * t216;
t472 = t216 * t218;
t471 = t216 * t301;
t468 = t232 * t308;
t467 = t232 * t312;
t461 = t298 * t311;
t460 = t298 * t314;
t121 = t312 * t127;
t450 = t314 * t316;
t449 = t506 * t127;
t443 = t263 - t415 + t516;
t441 = t494 - t442;
t439 = t285 - t316;
t303 = t310 ^ 2;
t304 = t313 ^ 2;
t438 = t303 - t304;
t437 = t303 + t304;
t292 = t310 * t488;
t319 = qJD(1) ^ 2;
t418 = t310 * t319 * t313;
t410 = -t216 ^ 2 + t507;
t278 = pkin(2) * t309 + qJ(4);
t404 = -pkin(10) * t232 - t137;
t394 = -t309 * t179 + t505 * t182 - t224 * t408 - t237 * t435;
t75 = t394 + t517;
t50 = -t135 * pkin(4) - t75;
t403 = -t216 * t65 + t50 * t312;
t400 = t525 ^ 2;
t399 = t525 * t119;
t395 = -t64 * t434 + t416;
t252 = t314 * t287;
t389 = g(2) * (pkin(3) * t460 + qJ(4) * t465 + t252);
t387 = t310 * t405;
t249 = qJ(4) * t461;
t386 = -pkin(3) * t466 + t249;
t251 = qJ(4) * t460;
t385 = -pkin(3) * t465 + t251;
t384 = -g(1) * t461 + g(2) * t460;
t383 = -t168 + t421;
t382 = -pkin(2) * t310 - pkin(3) * t296;
t379 = t218 * t484 - t395;
t376 = t308 * t65 + t312 * t64;
t375 = t312 * t65 - t484;
t173 = t378 + (-t408 - t409) * t313;
t372 = -t134 * t234 - t173 * t218;
t371 = t135 * t232 + t174 * t216;
t370 = t173 * t301 - t234 * t300;
t369 = t174 * t301 + t232 * t300;
t368 = t64 * t216 + t50 * t308 + (t433 + t469) * t119;
t363 = t440 + t361;
t362 = qJD(5) * t185 + t417;
t360 = -t287 - t440;
t149 = t312 * t152;
t67 = pkin(5) * t234 + t308 * t404 + t149;
t74 = pkin(10) * t467 + t84;
t37 = -t307 * t74 + t504 * t67;
t38 = t307 * t67 + t504 * t74;
t359 = -0.2e1 * pkin(1) * t427 - pkin(7) * qJDD(2);
t358 = -qJD(5) * t183 + t125 + t92;
t356 = -t308 * t400 - t121;
t355 = t174 * t308 + t232 * t433;
t354 = -t174 * t312 + t232 * t434;
t353 = qJ(4) * t173 - qJD(4) * t234 + t292;
t69 = t174 * t506 + t353;
t117 = qJD(3) * t189 + t310 * t391 - t313 * t367;
t91 = -t173 * pkin(4) + t117;
t24 = -t137 * t434 + t152 * t433 + t308 * t91 + t312 * t69;
t350 = t393 + t416;
t349 = g(1) * t460 + g(2) * t461 + t282 + t394;
t348 = t364 * t308;
t347 = t311 * t382 + t249;
t346 = t314 * t382 + t251;
t342 = t127 * t308 - t312 * t400;
t341 = -t298 * t381 - t282;
t90 = -pkin(4) * t174 - t116;
t318 = qJD(2) ^ 2;
t340 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t318 + t380;
t339 = pkin(1) * t319 + t381 - t479;
t338 = t117 * t301 + t188 * t300 + t384;
t337 = -t246 * t216 + t349;
t336 = t246 * t218 - t350;
t335 = t134 * t232 - t135 * t234 + t173 * t216 - t174 * t218;
t143 = pkin(3) * t216 + t343;
t334 = t143 * t218 + qJDD(4) + t350;
t332 = -t143 * t216 - t349 - t517;
t329 = qJD(5) * t375 + t11 * t308 + t12 * t312;
t328 = -qJD(5) * t276 * t525 + t341;
t327 = t432 * t525 + t341;
t98 = -t301 * t411 + t392 + t471;
t326 = t116 * t216 + t117 * t218 - t134 * t188 - t135 * t189 - t381;
t34 = -pkin(5) * t364 + t50;
t324 = t19 * t216 + t295 * t341 - t34 * t515 + t526 * t94;
t323 = -t20 * t216 + t34 * t233 + t297 * t341 - t536 * t94;
t321 = -g(1) * t251 - g(2) * t249 - g(3) * (t280 + t440) + t381 * t296 * t506;
t279 = qJ(4) + t299;
t243 = t278 + t299;
t209 = -t296 * t456 + t451;
t207 = t296 * t455 + t452;
t163 = pkin(3) * t232 + t365;
t156 = t515 * t232;
t154 = -t294 - t165;
t153 = -t232 * pkin(4) + t189;
t150 = -pkin(3) * t301 + t429;
t120 = -t232 * t285 + t189;
t99 = -t218 * t301 + t135;
t97 = t134 - t471;
t93 = pkin(3) * t174 + t353;
t86 = t312 * t91;
t83 = -t137 * t308 + t149;
t78 = t366 - t502;
t76 = -t128 * t308 + t124;
t72 = -t118 * t308 + t131;
t61 = pkin(3) * t135 + t331;
t60 = pkin(5) * t354 + t90;
t56 = -t171 * t232 - t174 * t233;
t55 = -t155 * t514 + t174 * t515;
t54 = -t183 * t216 + t342;
t53 = t185 * t216 + t356;
t43 = t312 * t397 - t348;
t42 = -t308 * t398 - t483;
t33 = -t112 * t216 + t537;
t32 = t216 * t357 + t534;
t25 = -qJD(5) * t84 - t308 * t69 + t86;
t23 = t504 * t51 - t485;
t22 = -t307 * t51 - t420;
t21 = (-t398 + t364) * t312 + (t92 + t397) * t308;
t18 = -pkin(10) * t354 + t24;
t15 = -pkin(5) * t173 + t86 + (-pkin(10) * t174 - t69) * t308 + (t312 * t404 - t148) * qJD(5);
t7 = t112 * t536 - t233 * t36 - t35 * t515 - t357 * t526;
t6 = -qJD(6) * t38 + t15 * t504 - t307 * t18;
t5 = qJD(6) * t37 + t307 * t15 + t18 * t504;
t1 = [0, 0, 0, 0, 0, qJDD(1), t380, t381, 0, 0, qJDD(1) * t303 + 0.2e1 * t387, 0.2e1 * t310 * t425 - 0.2e1 * t427 * t438, qJDD(2) * t310 + t313 * t318, qJDD(1) * t304 - 0.2e1 * t387, qJDD(2) * t313 - t310 * t318, 0, t310 * t359 + t313 * t340, -t310 * t340 + t313 * t359, 0.2e1 * t437 * t479 - t381, -g(1) * (-pkin(1) * t311 + pkin(7) * t314) - g(2) * (pkin(1) * t314 + pkin(7) * t311) + (pkin(7) ^ 2 * t437 + pkin(1) ^ 2) * qJDD(1), t372, t335, -t370, t371, -t369, 0, -t135 * t287 - t174 * t246 + t213 * t232 + t216 * t292 - t338, t134 * t287 + t173 * t246 + t213 * t234 + t218 * t292 - t508, -t164 * t173 - t165 * t174 + t232 * t394 + t234 * t393 + t326, -t394 * t189 - t165 * t116 + t393 * t188 + t164 * t117 - t213 * t287 - t246 * t292 - g(1) * (-t287 * t311 - t450) - g(2) * (-t311 * t316 + t252) 0, t370, t369, t372, t335, t371, -t150 * t173 + t154 * t174 + t232 * t75 + t234 * t78 + t326, -t135 * t163 - t143 * t174 - t216 * t93 - t232 * t61 + t338, t134 * t163 + t143 * t173 - t218 * t93 - t234 * t61 + t508, t61 * t163 + t143 * t93 - t75 * t189 + t154 * t116 + t78 * t188 + t150 * t117 + g(1) * t450 - t389 + (-g(1) * t360 + g(2) * t316) * t311, t185 * t355 - t468 * t92 (-t183 * t308 + t185 * t312) * t174 + (t348 - t483 + (-t183 * t312 - t185 * t308) * qJD(5)) * t232, -t127 * t468 - t173 * t185 - t234 * t92 + t355 * t525, t183 * t354 + t364 * t467, -t121 * t232 + t183 * t173 + t234 * t364 - t354 * t525, -t127 * t234 - t173 * t525, -g(1) * t209 - g(2) * t207 + t119 * t354 + t12 * t234 - t83 * t127 - t153 * t364 - t64 * t173 + t90 * t183 + t25 * t525 - t467 * t50, g(1) * t208 - g(2) * t206 - t11 * t234 + t119 * t355 + t127 * t84 - t153 * t92 + t173 * t65 + t185 * t90 - t24 * t525 + t468 * t50, -t24 * t183 + t84 * t364 - t25 * t185 + t83 * t92 + t375 * t174 + (-qJD(5) * t376 + t11 * t312 - t12 * t308) * t232 - t384, t11 * t84 + t65 * t24 + t12 * t83 + t64 * t25 + t50 * t153 + t119 * t90 - t389 + (-g(1) * t493 - g(2) * t280) * t314 + (-g(1) * (t360 - t280) - g(2) * t493) * t311, t156 * t35 - t357 * t55, t112 * t55 - t155 * t35 + t156 * t36 - t357 * t56, t126 * t156 - t173 * t357 - t204 * t55 - t234 * t35, t112 * t56 - t155 * t36, t112 * t173 - t126 * t155 - t204 * t56 - t234 * t36, -t126 * t234 - t173 * t204, -g(1) * t194 - g(2) * t192 + t112 * t60 + t120 * t36 - t126 * t37 - t155 * t34 - t173 * t19 + t204 * t6 + t234 * t4 + t56 * t94, g(1) * t193 - g(2) * t191 - t120 * t35 + t126 * t38 - t156 * t34 + t173 * t20 - t204 * t5 - t234 * t3 + t357 * t60 - t55 * t94, -t112 * t5 + t155 * t3 + t156 * t4 + t19 * t55 - t20 * t56 + t35 * t37 - t357 * t6 - t36 * t38 - t384, t3 * t38 + t20 * t5 + t4 * t37 + t19 * t6 + t34 * t120 + t94 * t60 - t389 + (-g(1) * t439 - g(2) * t361) * t314 + (-g(1) * (t360 - t361) - g(2) * t439) * t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, t438 * t319, t426, t418, t425, qJDD(2), t310 * t339 - t496, g(3) * t310 + t313 * t339, 0, 0, t472, t410, t98, -t472, -t377, t300, t168 * t301 + (-t216 * t436 + t300 * t505 - t301 * t435) * pkin(2) + t336, t169 * t301 + (-t218 * t436 - t300 * t309 - t301 * t408) * pkin(2) + t337 (t165 - t168) * t218 + (t164 + t169) * t216 + (t505 * t134 - t135 * t309 + (-t216 * t505 + t218 * t309) * qJD(3)) * pkin(2), -t164 * t168 - t165 * t169 + (-t505 * t393 - t496 - t309 * t394 + (t164 * t309 + t165 * t505) * qJD(3) + (qJD(1) * t246 + t381) * t310) * pkin(2), t300, t97, t99, t472, t410, -t472, -t134 * t286 - t278 * t135 + (-t154 + t383) * t218 + (t150 + t442) * t216, t151 * t216 + t383 * t301 + (-pkin(3) + t286) * t300 + t334, t151 * t218 + t278 * t300 - t301 * t442 + t332, -t75 * t278 + t78 * t286 - t143 * t151 - g(1) * t346 - g(2) * t347 - g(3) * (t440 + t503) + t442 * t154 + t383 * t150, t42, t21, t53, t43, t54, t473, -t276 * t121 - t278 * t364 + (-t72 + t396) * t525 + t441 * t183 + t328 * t308 + t368, t525 * t73 - t278 * t92 + t441 * t185 + t328 * t312 + (t276 * t127 - t421 * t525 - t399) * t308 + t403, t73 * t183 + t72 * t185 + (-t183 * t421 + t276 * t362 - t11) * t308 + (-t185 * t421 + t276 * t358 - t511) * t312 + t379, t50 * t278 - t65 * t73 - t64 * t72 + t441 * t119 + (t310 * t381 + t376 * t435 - t496) * pkin(2) + t329 * t276 + t321, t13, t7, t32, t14, t33, t474, t112 * t443 - t126 * t157 + t204 * t489 + t243 * t36 + t324, t126 * t158 - t204 * t490 - t243 * t35 + t357 * t443 + t323, -t112 * t490 + t157 * t35 - t158 * t36 - t357 * t489 + t333, t3 * t158 + t4 * t157 + t34 * t243 - g(1) * (t346 + t518) - g(2) * (t347 + t519) - g(3) * (t363 + t503) + t443 * t94 + t490 * t20 + t489 * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472, t410, t98, -t472, -t377, t300, t336 + t476, -t164 * t301 + t337, 0, 0, t300, t97, t99, t472, t410, -t472, pkin(3) * t134 - qJ(4) * t135 + (-t154 - t165) * t218 + (t150 - t429) * t216, t162 * t216 + t334 - t476 - 0.2e1 * t502, t162 * t218 + t301 * t429 + t288 + t332, -t78 * pkin(3) - g(1) * t385 - g(2) * t386 - g(3) * t440 - t75 * qJ(4) - t143 * t162 - t150 * t165 - t154 * t429, t42, t21, t53, t43, t54, t473, -qJ(4) * t364 + t183 * t430 + t308 * t327 + t312 * t449 - t525 * t76 + t368, -qJ(4) * t92 + t525 * t77 + t430 * t185 + (-t399 - t449) * t308 + t327 * t312 + t403, t77 * t183 + t76 * t185 + (-t362 * t506 - t11) * t308 + (-t358 * t506 - t511) * t312 + t379, t50 * qJ(4) + t119 * t430 - t329 * t506 - t64 * t76 - t65 * t77 + t321, t13, t7, t32, t14, t33, t474, t112 * t480 - t126 * t180 + t204 * t481 + t279 * t36 + t324, t126 * t181 - t204 * t482 - t279 * t35 + t357 * t480 + t323, -t112 * t482 + t180 * t35 - t181 * t36 - t357 * t481 + t333, t3 * t181 + t4 * t180 + t34 * t279 - g(1) * (t385 + t518) - g(2) * (t386 + t519) - g(3) * t363 + t480 * t94 + t482 * t20 + t481 * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t300 - t472, -t301 ^ 2 - t507, t154 * t301 + t334 - t502, 0, 0, 0, 0, 0, 0, -t183 * t301 + t356, -t185 * t301 + t342, t535 * t308 + t533 * t312, -t119 * t301 + (-t218 * t64 + t11) * t308 + t511 * t312 + t395, 0, 0, 0, 0, 0, 0, -t112 * t301 + t534, -t301 * t357 + t537, -t13 - t14, -t301 * t94 - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, -t183 ^ 2 + t185 ^ 2, -t533, -t475, t535, -t127, -t119 * t185 + t511 + t512, g(1) * t207 - g(2) * t209 + t119 * t183 + t525 * t64 + (qJD(5) * t110 - t283) * t308 - t422, 0, 0, t478, t524, t523, -t478, t509, -t126, -t22 * t204 + (-t112 * t185 - t126 * t504 - t204 * t431) * pkin(5) + t510, t23 * t204 + (t126 * t307 - t185 * t357 - t204 * t407) * pkin(5) + t522, t20 * t357 + t23 * t112 - t19 * t112 + t22 * t357 + (t504 * t35 - t307 * t36 + (-t112 * t504 + t307 * t357) * qJD(6)) * pkin(5), -t19 * t22 - t20 * t23 + (t3 * t307 + t4 * t504 - t94 * t185 + (-t19 * t307 + t20 * t504) * qJD(6) + t512) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, t524, t523, -t478, t509, -t126, t20 * t204 + t510, t19 * t204 + t522, 0, 0;];
tau_reg  = t1;
