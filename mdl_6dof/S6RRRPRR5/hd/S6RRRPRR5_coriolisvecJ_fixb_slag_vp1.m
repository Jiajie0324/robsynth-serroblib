% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR5_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRR5_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:20:39
% EndTime: 2019-03-09 18:22:54
% DurationCPUTime: 117.72s
% Computational Cost: add. (61145->1698), mult. (70844->2200), div. (0->0), fcn. (64681->10), ass. (0->826)
t1421 = Icges(5,4) - Icges(4,5);
t1420 = Icges(5,5) - Icges(4,6);
t1419 = Icges(5,1) + Icges(4,3);
t763 = qJ(2) + qJ(3);
t741 = cos(t763);
t723 = Icges(4,4) * t741;
t739 = sin(t763);
t632 = Icges(4,1) * t739 + t723;
t1219 = Icges(5,6) * t741;
t932 = Icges(5,2) * t739 + t1219;
t1418 = t632 + t932;
t766 = sin(qJ(1));
t1172 = t741 * t766;
t1177 = t739 * t766;
t769 = cos(qJ(1));
t1221 = Icges(4,6) * t769;
t500 = Icges(4,4) * t1172 - Icges(4,2) * t1177 - t1221;
t1227 = Icges(5,5) * t769;
t505 = Icges(5,6) * t1172 - Icges(5,3) * t1177 + t1227;
t1417 = t500 + t505;
t944 = -Icges(4,2) * t739 + t723;
t501 = Icges(4,6) * t766 + t769 * t944;
t931 = -Icges(5,3) * t739 + t1219;
t504 = Icges(5,5) * t766 - t769 * t931;
t1413 = t501 - t504;
t1228 = Icges(4,5) * t769;
t697 = Icges(4,4) * t1177;
t502 = Icges(4,1) * t1172 - t1228 - t697;
t1236 = Icges(5,4) * t769;
t692 = Icges(5,6) * t1177;
t507 = Icges(5,2) * t1172 + t1236 - t692;
t1401 = t502 + t507;
t1238 = Icges(4,4) * t739;
t633 = Icges(4,1) * t741 - t1238;
t503 = Icges(4,5) * t766 + t633 * t769;
t1170 = t741 * t769;
t1237 = Icges(5,4) * t766;
t1176 = t739 * t769;
t693 = Icges(5,6) * t1176;
t506 = -Icges(5,2) * t1170 + t1237 + t693;
t1416 = t503 - t506;
t1400 = t1420 * t739 - t1421 * t741;
t1220 = Icges(5,6) * t739;
t933 = Icges(5,2) * t741 - t1220;
t1415 = -t633 - t933;
t1414 = t931 + t944;
t626 = Icges(4,5) * t739 + Icges(4,6) * t741;
t942 = Icges(5,4) * t739 + Icges(5,5) * t741;
t1412 = t626 - t942;
t630 = Icges(4,2) * t741 + t1238;
t1411 = t630 * t769 - t1416;
t1410 = t1419 * t769;
t1409 = -t1414 - t1418;
t930 = Icges(5,3) * t741 + t1220;
t1408 = -t930 - t630 - t1415;
t1407 = t1418 * t766 + t1417;
t1406 = -t1418 * t769 - t1413;
t1402 = t1172 * t1421 - t1420 * t1177 + t1410;
t1405 = t1400 * t769 + t1419 * t766;
t900 = t630 * t739 - t632 * t741;
t1404 = -t739 * t930 + t741 * t932 - t900;
t1399 = -t1401 * t741 + t1417 * t739;
t1403 = -t503 * t1172 - t504 * t1177;
t759 = qJD(2) + qJD(3);
t1398 = t1408 * t759;
t1397 = t1409 * t759;
t1396 = t1412 * t766;
t1183 = t626 * t769;
t576 = t942 * t769;
t1395 = -t576 + t1183;
t1394 = t1406 * t759 + (t1415 * t766 + t1228 - t1236) * qJD(1);
t1393 = t1407 * t759 + (-t769 * t933 + t1237 - t503) * qJD(1);
t870 = t759 * t930;
t1392 = t769 * t870 + t1411 * t759 + (t1414 * t766 - t1221 + t1227) * qJD(1);
t1168 = t759 * t766;
t1391 = qJD(1) * t1413 - t1168 * t630 + t1401 * t759 - t766 * t870;
t1390 = t501 * t739 + t506 * t741;
t1389 = t1404 * t769 + t1396;
t1388 = t1399 * t766;
t1387 = t1405 * t769 + t1403;
t1386 = t1405 * qJD(1);
t1330 = -t503 * t1170 - t504 * t1176 - t1405 * t766;
t1385 = -t502 * t1170 + t505 * t1176 + t1402 * t766;
t1384 = t1402 * t769;
t1358 = t1384 - t1388;
t1357 = -t1172 * t506 - t1177 * t501 - t1387;
t1356 = t1170 * t507 - t1176 * t500 - t1385;
t1355 = -t1170 * t506 - t1176 * t501 - t1330;
t1383 = qJD(1) * t1412 + t1397 * t739 + t1398 * t741;
t1382 = qJD(1) * t1402 + t1391 * t739 + t1393 * t741;
t1381 = t1392 * t739 + t1394 * t741 + t1386;
t737 = qJD(2) * t766;
t667 = qJD(3) * t766 + t737;
t668 = t759 * t769;
t1380 = qJD(1) * t1408 + t1406 * t667 + t1407 * t668;
t1379 = (-t692 - t697 + (-Icges(4,2) - Icges(5,3)) * t1172 + t1401) * t668 + (Icges(5,3) * t1170 + t1411 + t693) * t667 + t1409 * qJD(1);
t1378 = qJD(1) * t1404 - t1400 * t759;
t1377 = t1395 * t759 + (t1400 * t766 + t503 * t741 + t504 * t739 - t1390 - t1410) * qJD(1);
t1376 = qJD(1) * t1399 - t1396 * t759 + t1386;
t1375 = t1389 * qJD(1);
t257 = -t766 * t900 - t1183;
t260 = -t1172 * t932 + t1177 * t930 - t576;
t1374 = (-t257 + t260) * qJD(1);
t762 = qJ(5) + qJ(6);
t740 = cos(t762);
t1174 = t740 * t769;
t738 = sin(t762);
t532 = t1174 * t739 - t738 * t766;
t1175 = t740 * t766;
t533 = t1176 * t738 + t1175;
t283 = Icges(7,5) * t533 + Icges(7,6) * t532 + Icges(7,3) * t1170;
t1232 = Icges(7,4) * t533;
t286 = Icges(7,2) * t532 + Icges(7,6) * t1170 + t1232;
t519 = Icges(7,4) * t532;
t289 = Icges(7,1) * t533 + Icges(7,5) * t1170 + t519;
t534 = t1175 * t739 + t738 * t769;
t535 = -t1177 * t738 + t1174;
t134 = t283 * t1172 + t534 * t286 - t535 * t289;
t285 = -Icges(7,5) * t535 + Icges(7,6) * t534 + Icges(7,3) * t1172;
t521 = Icges(7,4) * t535;
t288 = Icges(7,2) * t534 + Icges(7,6) * t1172 - t521;
t520 = Icges(7,4) * t534;
t290 = Icges(7,1) * t535 - Icges(7,5) * t1172 - t520;
t135 = t1172 * t285 + t288 * t534 + t290 * t535;
t934 = Icges(7,5) * t738 + Icges(7,6) * t740;
t821 = -Icges(7,3) * t739 + t741 * t934;
t1231 = Icges(7,4) * t738;
t938 = Icges(7,2) * t740 + t1231;
t823 = -Icges(7,6) * t739 + t741 * t938;
t1230 = Icges(7,4) * t740;
t946 = Icges(7,1) * t738 + t1230;
t825 = -Icges(7,5) * t739 + t741 * t946;
t177 = -t1172 * t821 - t534 * t823 + t535 * t825;
t1076 = qJD(6) * t741;
t1077 = qJD(5) * t769;
t684 = t741 * t1077;
t555 = t684 + t667;
t448 = t1076 * t769 + t555;
t1078 = qJD(5) * t766;
t556 = -t741 * t1078 + t668;
t449 = -t1076 * t766 + t556;
t721 = qJD(5) * t739;
t1319 = qJD(1) + t721;
t607 = qJD(6) * t739 + t1319;
t65 = t134 * t448 - t135 * t449 + t177 * t607;
t767 = cos(qJ(5));
t1160 = t767 * t769;
t764 = sin(qJ(5));
t1166 = t764 * t766;
t597 = t1160 * t739 - t1166;
t1165 = t764 * t769;
t1057 = t739 * t1165;
t1162 = t766 * t767;
t598 = t1057 + t1162;
t336 = Icges(6,5) * t598 + Icges(6,6) * t597 + Icges(6,3) * t1170;
t1235 = Icges(6,4) * t598;
t339 = Icges(6,2) * t597 + Icges(6,6) * t1170 + t1235;
t562 = Icges(6,4) * t597;
t342 = Icges(6,1) * t598 + Icges(6,5) * t1170 + t562;
t599 = t1162 * t739 + t1165;
t1054 = t739 * t1166;
t600 = -t1054 + t1160;
t151 = t336 * t1172 + t599 * t339 - t600 * t342;
t338 = -Icges(6,5) * t600 + Icges(6,6) * t599 + Icges(6,3) * t1172;
t564 = Icges(6,4) * t600;
t341 = Icges(6,2) * t599 + Icges(6,6) * t1172 - t564;
t563 = Icges(6,4) * t599;
t343 = Icges(6,1) * t600 - Icges(6,5) * t1172 - t563;
t152 = t1172 * t338 + t341 * t599 + t343 * t600;
t936 = Icges(6,5) * t764 + Icges(6,6) * t767;
t822 = -Icges(6,3) * t739 + t741 * t936;
t1234 = Icges(6,4) * t764;
t940 = Icges(6,2) * t767 + t1234;
t824 = -Icges(6,6) * t739 + t741 * t940;
t1233 = Icges(6,4) * t767;
t948 = Icges(6,1) * t764 + t1233;
t826 = -Icges(6,5) * t739 + t741 * t948;
t196 = -t1172 * t822 - t599 * t824 + t600 * t826;
t77 = t1319 * t196 + t151 * t555 - t152 * t556;
t149 = t336 * t1170 + t597 * t339 + t598 * t342;
t150 = t338 * t1170 + t597 * t341 - t343 * t598;
t195 = -t1170 * t822 - t597 * t824 - t598 * t826;
t76 = t1319 * t195 + t149 * t555 - t150 * t556;
t132 = t283 * t1170 + t532 * t286 + t533 * t289;
t133 = t285 * t1170 + t532 * t288 - t290 * t533;
t176 = -t1170 * t821 - t532 * t823 - t533 * t825;
t64 = t132 * t448 - t133 * t449 + t176 * t607;
t912 = t341 * t767 - t343 * t764;
t162 = t338 * t739 - t741 * t912;
t914 = t288 * t740 - t290 * t738;
t147 = t285 * t739 - t741 * t914;
t771 = -pkin(8) - pkin(7);
t1371 = t766 * t771;
t1370 = -t1376 * t766 + t1382 * t769;
t1369 = -t1377 * t766 + t1381 * t769;
t1368 = t1376 * t769 + t1382 * t766;
t1367 = t1377 * t769 + t1381 * t766;
t1366 = t1357 * t667 - t1358 * t668 - t1374;
t1365 = t1355 * t667 - t1356 * t668 + t1375;
t1364 = -t1378 * t766 + t1383 * t769;
t1363 = t1378 * t769 + t1383 * t766;
t1362 = -t1391 * t741 + t1393 * t739;
t1361 = -t1392 * t741 + t1394 * t739;
t1083 = qJD(1) * t769;
t1040 = t741 * t1083;
t1060 = t739 * t1168;
t852 = t1040 - t1060;
t1056 = t741 * t1168;
t1086 = qJD(1) * t739;
t758 = qJD(5) + qJD(6);
t987 = t758 + t1086;
t830 = t769 * t987 + t1056;
t988 = t739 * t758 + qJD(1);
t898 = t738 * t988;
t236 = t740 * t830 - t766 * t898;
t897 = t740 * t988;
t237 = t738 * t830 + t766 * t897;
t957 = rSges(7,1) * t237 + rSges(7,2) * t236;
t171 = rSges(7,3) * t852 + t957;
t770 = -pkin(10) - pkin(9);
t1167 = t759 * t770;
t1058 = t739 * t1167;
t1266 = pkin(5) * t764;
t1069 = t739 * t1266;
t1260 = pkin(9) + t770;
t511 = -t1260 * t741 + t1069;
t654 = pkin(9) * t1060;
t1265 = pkin(5) * t767;
t728 = pkin(4) + t1265;
t199 = t766 * t1058 + t654 + (qJD(5) * t599 + t1056 * t764) * pkin(5) + ((-pkin(4) + t728) * t766 + t511 * t769) * qJD(1);
t1360 = t171 + t199;
t1055 = t668 * t741;
t829 = -t766 * t987 + t1055;
t238 = t740 * t829 - t769 * t898;
t239 = t738 * t829 + t769 * t897;
t1155 = t239 * rSges(7,1) + t238 * rSges(7,2);
t1084 = qJD(1) * t766;
t1041 = t741 * t1084;
t1059 = t739 * t668;
t1331 = t1041 + t1059;
t172 = -rSges(7,3) * t1331 + t1155;
t1085 = qJD(1) * t741;
t735 = pkin(4) * t1083;
t1031 = t739 * t1077;
t952 = t1031 * t1265 + t770 * t1041 + t1055 * t1266 + t769 * t1058 + t728 * t1083;
t982 = qJD(5) + t1086;
t200 = pkin(9) * t1059 - t735 + (pkin(9) * t1085 - t1266 * t982) * t766 + t952;
t1359 = t172 + t200;
t1354 = t1401 * t739 + t1417 * t741;
t1353 = t1413 * t741 + t1416 * t739;
t298 = t533 * rSges(7,1) + t532 * rSges(7,2) + rSges(7,3) * t1170;
t1169 = t741 * t770;
t1328 = pkin(5) * t1057 - t1169 * t769 + t766 * t728;
t755 = t766 * pkin(4);
t620 = pkin(9) * t1170 + t755;
t366 = t1328 - t620;
t1352 = t298 + t366;
t956 = rSges(7,1) * t535 - rSges(7,2) * t534;
t300 = rSges(7,3) * t1172 - t956;
t1103 = -t766 * t1169 - t769 * t728;
t709 = pkin(9) * t1172;
t621 = pkin(4) * t769 - t709;
t367 = pkin(5) * t1054 + t1103 + t621;
t1351 = t300 + t367;
t1343 = t1379 * t739 + t1380 * t741;
t1342 = qJD(1) * t1400 - t1395 * t667 + t1396 * t668;
t1023 = t1083 / 0.2e1;
t1178 = t739 * t759;
t1029 = -t1178 / 0.2e1;
t1339 = t741 * t1023 + t766 * t1029;
t1338 = t769 * t1029 - t1041 / 0.2e1;
t1337 = t1390 + t1402;
t1264 = pkin(9) * t739;
t634 = pkin(3) * t739 - qJ(4) * t741;
t1015 = -t634 - t1264;
t648 = qJ(4) * t1055;
t1080 = qJD(4) * t769;
t686 = t739 * t1080;
t1106 = t648 + t686;
t768 = cos(qJ(2));
t729 = pkin(2) * t768 + pkin(1);
t733 = t769 * t771;
t1099 = -t766 * t729 - t733;
t756 = t769 * pkin(7);
t688 = pkin(1) * t766 - t756;
t496 = t688 + t1099;
t659 = qJD(1) * t688;
t1320 = qJD(1) * t496 - t659;
t1212 = qJ(4) * t739;
t637 = pkin(3) * t741 + t1212;
t588 = t637 * t766;
t1082 = qJD(2) * t769;
t765 = sin(qJ(2));
t1035 = t765 * t1082;
t984 = pkin(2) * t1035;
t890 = t686 - t984;
t837 = -qJD(1) * t588 + t1320 + t890;
t1332 = -qJD(1) * t621 - t1015 * t668 + t1106 - t837;
t954 = rSges(7,1) * t738 + rSges(7,2) * t740;
t831 = -rSges(7,3) * t739 + t741 * t954;
t853 = t1260 * t739 + t741 * t1266;
t1329 = t1319 * t367 + t300 * t607 - t449 * t831 - t556 * t853;
t960 = rSges(6,1) * t600 - rSges(6,2) * t599;
t349 = rSges(6,3) * t1172 - t960;
t958 = rSges(6,1) * t764 + rSges(6,2) * t767;
t832 = -rSges(6,3) * t739 + t741 * t958;
t1327 = t349 * t1319 - t556 * t832;
t1326 = 0.2e1 * qJD(2);
t1268 = -rSges(7,3) - pkin(3);
t1325 = rSges(3,2) * t765;
t1079 = qJD(5) * t741;
t1030 = t759 * t1079;
t1251 = rSges(7,3) * t759;
t875 = t954 * t739;
t955 = -rSges(7,1) * t740 + rSges(7,2) * t738;
t235 = t759 * t875 + (t758 * t955 + t1251) * t741;
t558 = t758 * t1176;
t1071 = qJD(1) * qJD(3);
t1072 = qJD(1) * qJD(2);
t727 = t769 * t1072;
t641 = t769 * t1071 + t727;
t985 = t766 * t758;
t263 = -t1085 * t985 - t558 * t759 + t641;
t1249 = pkin(5) * qJD(5);
t1061 = t767 * t1249;
t368 = t759 * t1069 + (-t1260 * t759 - t1061) * t741;
t411 = -qJD(5) * t1331 + t641;
t617 = t758 * t741;
t531 = t759 * t617;
t1173 = t741 * t759;
t453 = -pkin(9) * t1331 + t735;
t465 = qJ(4) * t1178 + (pkin(3) * t759 - qJD(4)) * t741;
t1043 = t739 * t1084;
t292 = -pkin(3) * t1331 - qJ(4) * t1043 + t1106;
t1081 = qJD(4) * t766;
t685 = t741 * t1081;
t1158 = t768 * qJD(2) ^ 2;
t1261 = pkin(1) - t729;
t734 = pkin(7) * t1083;
t397 = -t984 - t734 + (t1261 * t766 - t733) * qJD(1);
t618 = qJD(1) * (-pkin(1) * t1084 + t734);
t813 = qJD(1) * t397 + t618 + (-t1158 * t766 - t727 * t765) * pkin(2);
t789 = t759 * t685 + t813 + (t292 + t686) * qJD(1);
t778 = qJD(1) * t453 + (-t1173 * t667 - t641 * t739) * pkin(9) - t641 * t634 - t667 * t465 + t789;
t32 = t1030 * t366 + t1319 * t200 + t607 * t172 - t448 * t235 + t263 * t831 + t531 * t298 - t555 * t368 + t411 * t853 + t778;
t1324 = t32 * t766;
t828 = -t766 * t982 + t1055;
t892 = t1319 * t764;
t307 = t767 * t828 - t769 * t892;
t893 = t767 * t1319;
t308 = t764 * t828 + t769 * t893;
t1147 = t308 * rSges(6,1) + t307 * rSges(6,2);
t192 = -rSges(6,3) * t1331 + t1147;
t876 = t958 * t739;
t959 = -rSges(6,1) * t767 + rSges(6,2) * t764;
t279 = t759 * t876 + (rSges(6,3) * t759 + qJD(5) * t959) * t741;
t347 = t598 * rSges(6,1) + t597 * rSges(6,2) + rSges(6,3) * t1170;
t66 = t1030 * t347 + t1319 * t192 - t279 * t555 + t411 * t832 + t778;
t1323 = t66 * t766;
t953 = rSges(5,2) * t739 + rSges(5,3) * t741;
t1107 = -t634 + t953;
t1255 = rSges(5,3) * t739;
t1256 = rSges(5,2) * t741;
t638 = t1255 - t1256;
t546 = t638 * t759;
t1130 = -t465 - t546;
t977 = rSges(5,1) * t1083 + rSges(5,2) * t1331 + rSges(5,3) * t1055;
t327 = -rSges(5,3) * t1043 + t977;
t113 = qJD(1) * t327 + t1107 * t641 + t1130 * t667 + t789;
t1322 = t113 * t766;
t754 = t766 * pkin(7);
t689 = t769 * pkin(1) + t754;
t701 = t769 * t729;
t990 = t701 - t1371;
t497 = t990 - t689;
t1123 = t497 + t689;
t690 = qJ(4) * t1176;
t593 = pkin(3) * t1170 + t690;
t1046 = t593 + t1123;
t1033 = t739 * t1081;
t1250 = pkin(2) * qJD(2);
t1064 = t765 * t1250;
t713 = t766 * t1064;
t886 = -t667 * t634 + t1033 - t713;
t804 = (t620 + t1046) * qJD(1) - t667 * t1264 + t886;
t102 = t1319 * t366 + t298 * t607 + t448 * t831 + t555 * t853 + t804;
t1032 = t739 * t1078;
t726 = t766 * t1072;
t640 = t766 * t1071 + t726;
t410 = qJD(1) * t684 - t1032 * t759 + t640;
t262 = qJD(6) * t852 + t410;
t452 = qJD(1) * t620 - t654;
t605 = pkin(9) * t1055;
t687 = t741 * t1080;
t896 = -pkin(2) * t1158 * t769 + qJD(1) * t713;
t838 = -t668 * t465 + t640 * t634 + t759 * t687 + t896;
t1097 = t771 * t1084 + t713;
t398 = (-t1261 * t769 - t754) * qJD(1) - t1097;
t656 = t689 * qJD(1);
t1142 = -t398 - t656;
t1042 = t739 * t1083;
t655 = pkin(3) * t1060;
t293 = pkin(3) * t1040 + t1033 - t655 + (t1042 + t1056) * qJ(4);
t861 = -t293 - t1033 + t1142;
t786 = t640 * t1264 + (-t452 + t861) * qJD(1) - t759 * t605 + t838;
t33 = -t1030 * t367 - t1319 * t199 - t607 * t171 - t449 * t235 - t262 * t831 - t531 * t300 - t556 * t368 - t410 * t853 + t786;
t1321 = qJD(1) * t102 + t33;
t595 = t634 * t1084;
t669 = pkin(9) * t1043;
t1110 = t595 + t669;
t420 = t832 * t766;
t1253 = rSges(6,3) * t741;
t487 = t876 + t1253;
t1100 = -t668 * t637 + t687;
t585 = t634 * t766;
t964 = qJD(1) * t585 + t1100;
t860 = -t605 + t669 + t964;
t1318 = -t1084 * t832 + t1319 * t420 + t556 * t487 + t1110 - t860;
t586 = t953 * t766;
t751 = t766 * rSges(5,1);
t326 = t759 * t586 + (t638 * t769 + t751) * qJD(1);
t114 = -t546 * t668 - t953 * t640 + (-t326 + t861) * qJD(1) + t838;
t515 = -rSges(5,2) * t1170 + rSges(5,3) * t1176 + t751;
t175 = t953 * t667 + (t515 + t1046) * qJD(1) + t886;
t1317 = qJD(1) * t175 + t114;
t748 = Icges(3,4) * t768;
t945 = -Icges(3,2) * t765 + t748;
t675 = Icges(3,1) * t765 + t748;
t1132 = t497 * t1082 - t496 * t737;
t513 = rSges(4,1) * t1172 - rSges(4,2) * t1177 - t769 * rSges(4,3);
t749 = t766 * rSges(4,3);
t514 = rSges(4,1) * t1170 - rSges(4,2) * t1176 + t749;
t194 = t513 * t667 + t514 * t668 + t1132;
t1124 = t496 - t688;
t636 = rSges(4,1) * t739 + rSges(4,2) * t741;
t854 = -t636 * t668 - t984;
t204 = (-t513 + t1124) * qJD(1) + t854;
t205 = -t636 * t667 - t713 + (t514 + t1123) * qJD(1);
t587 = t636 * t766;
t592 = t636 * t769;
t1258 = rSges(4,1) * t741;
t639 = -rSges(4,2) * t739 + t1258;
t1311 = -t204 * (qJD(1) * t587 - t668 * t639) - t194 * (-t667 * t587 - t592 * t668) - t205 * (-qJD(1) * t592 - t639 * t667);
t1216 = Icges(3,3) * t769;
t672 = Icges(3,5) * t768 - Icges(3,6) * t765;
t671 = Icges(3,5) * t765 + Icges(3,6) * t768;
t857 = qJD(2) * t671;
t552 = Icges(3,6) * t766 + t769 * t945;
t1187 = t552 * t765;
t1239 = Icges(3,4) * t765;
t676 = Icges(3,1) * t768 - t1239;
t554 = Icges(3,5) * t766 + t676 * t769;
t902 = -t554 * t768 + t1187;
t1306 = -t769 * t857 + (-t672 * t766 + t1216 + t902) * qJD(1);
t550 = Icges(3,3) * t766 + t672 * t769;
t1088 = qJD(1) * t550;
t1161 = t766 * t768;
t1164 = t765 * t766;
t1222 = Icges(3,6) * t769;
t551 = Icges(3,4) * t1161 - Icges(3,2) * t1164 - t1222;
t1188 = t551 * t765;
t1229 = Icges(3,5) * t769;
t718 = Icges(3,4) * t1164;
t553 = Icges(3,1) * t1161 - t1229 - t718;
t903 = -t553 * t768 + t1188;
t1305 = qJD(1) * t903 - t766 * t857 + t1088;
t673 = Icges(3,2) * t768 + t1239;
t899 = t673 * t765 - t675 * t768;
t1302 = t899 * qJD(1) + t672 * qJD(2);
t549 = Icges(3,5) * t1161 - Icges(3,6) * t1164 - t1216;
t225 = -t549 * t769 - t766 * t903;
t1301 = (-t673 * t769 + t554) * t766 - (-Icges(3,2) * t1161 + t553 - t718) * t769;
t131 = t1319 * t347 + t555 * t832 + t804;
t1171 = t741 * t767;
t891 = t982 * t769;
t305 = t767 * t891 + (t1171 * t759 - t892) * t766;
t306 = t766 * t893 + (t891 + t1056) * t764;
t961 = rSges(6,1) * t306 + rSges(6,2) * t305;
t191 = rSges(6,3) * t852 + t961;
t67 = -t1030 * t349 - t1319 * t191 - t279 * t556 - t410 * t832 + t786;
t1300 = (qJD(1) * t131 + t67) * t769 + t1323;
t941 = Icges(6,2) * t764 - t1233;
t809 = (t941 * t741 - t826) * t1319 - (Icges(6,2) * t600 - t343 + t563) * t556 + (-Icges(6,2) * t598 + t342 + t562) * t555;
t949 = -Icges(6,1) * t767 + t1234;
t810 = (-t949 * t741 - t824) * t1319 - (-Icges(6,1) * t599 + t341 - t564) * t556 + (-Icges(6,1) * t597 + t1235 + t339) * t555;
t939 = Icges(7,2) * t738 - t1230;
t811 = (t939 * t741 - t825) * t607 - (Icges(7,2) * t535 - t290 + t520) * t449 + (-Icges(7,2) * t533 + t289 + t519) * t448;
t947 = -Icges(7,1) * t740 + t1231;
t812 = (-t947 * t741 - t823) * t607 - (-Icges(7,1) * t534 + t288 - t521) * t449 + (-Icges(7,1) * t532 + t1232 + t286) * t448;
t1297 = m(5) / 0.2e1;
t1296 = m(6) / 0.2e1;
t1295 = m(7) / 0.2e1;
t1294 = t262 / 0.2e1;
t1293 = t263 / 0.2e1;
t1292 = t410 / 0.2e1;
t1291 = t411 / 0.2e1;
t1290 = -t448 / 0.2e1;
t1289 = t448 / 0.2e1;
t1288 = -t449 / 0.2e1;
t1287 = t449 / 0.2e1;
t1286 = t531 / 0.2e1;
t1285 = -t555 / 0.2e1;
t1284 = t555 / 0.2e1;
t1283 = -t556 / 0.2e1;
t1282 = t556 / 0.2e1;
t1281 = -t607 / 0.2e1;
t1280 = t607 / 0.2e1;
t1279 = t640 / 0.2e1;
t1278 = t641 / 0.2e1;
t1277 = -t667 / 0.2e1;
t1276 = t667 / 0.2e1;
t1275 = -t668 / 0.2e1;
t1274 = t668 / 0.2e1;
t1273 = -t1319 / 0.2e1;
t1272 = t1319 / 0.2e1;
t1271 = t739 / 0.2e1;
t1270 = t766 / 0.2e1;
t1269 = -t769 / 0.2e1;
t1267 = pkin(2) * t765;
t1263 = -qJD(1) / 0.2e1;
t1262 = qJD(1) / 0.2e1;
t1259 = rSges(3,1) * t768;
t1257 = rSges(3,2) * t768;
t166 = Icges(7,5) * t239 + Icges(7,6) * t238 - Icges(7,3) * t1331;
t168 = Icges(7,4) * t239 + Icges(7,2) * t238 - Icges(7,6) * t1331;
t170 = Icges(7,1) * t239 + Icges(7,4) * t238 - Icges(7,5) * t1331;
t915 = t286 * t740 + t289 * t738;
t46 = (t759 * t915 + t166) * t739 + (t283 * t759 + (-t289 * t758 - t168) * t740 + (t286 * t758 - t170) * t738) * t741;
t1248 = t46 * t448;
t165 = Icges(7,5) * t237 + Icges(7,6) * t236 + Icges(7,3) * t852;
t167 = Icges(7,4) * t237 + Icges(7,2) * t236 + Icges(7,6) * t852;
t169 = Icges(7,1) * t237 + Icges(7,4) * t236 + Icges(7,5) * t852;
t47 = (t759 * t914 + t165) * t739 + (t285 * t759 + (t290 * t758 - t167) * t740 + (t288 * t758 - t169) * t738) * t741;
t1247 = t47 * t449;
t186 = Icges(6,5) * t308 + Icges(6,6) * t307 - Icges(6,3) * t1331;
t188 = Icges(6,4) * t308 + Icges(6,2) * t307 - Icges(6,6) * t1331;
t190 = Icges(6,1) * t308 + Icges(6,4) * t307 - Icges(6,5) * t1331;
t913 = t339 * t767 + t342 * t764;
t52 = (t759 * t913 + t186) * t739 + (-t188 * t767 - t190 * t764 + t336 * t759 + (t339 * t764 - t342 * t767) * qJD(5)) * t741;
t1246 = t52 * t555;
t185 = Icges(6,5) * t306 + Icges(6,6) * t305 + Icges(6,3) * t852;
t187 = Icges(6,4) * t306 + Icges(6,2) * t305 + Icges(6,6) * t852;
t189 = Icges(6,1) * t306 + Icges(6,4) * t305 + Icges(6,5) * t852;
t53 = (t759 * t912 + t185) * t739 + (-t187 * t767 - t189 * t764 + t338 * t759 + (t341 * t764 + t343 * t767) * qJD(5)) * t741;
t1245 = t53 * t556;
t750 = t766 * rSges(3,3);
t909 = -t738 * t825 - t740 * t823;
t201 = -t739 * t821 - t741 * t909;
t864 = t934 * t739;
t935 = -Icges(7,5) * t740 + Icges(7,6) * t738;
t230 = t759 * t864 + (Icges(7,3) * t759 + t758 * t935) * t741;
t866 = t938 * t739;
t231 = t759 * t866 + (Icges(7,6) * t759 + t758 * t939) * t741;
t868 = t946 * t739;
t232 = t759 * t868 + (Icges(7,5) * t759 + t758 * t947) * t741;
t91 = (t759 * t909 + t230) * t739 + (-t821 * t759 + (t758 * t825 - t231) * t740 + (-t758 * t823 - t232) * t738) * t741;
t1244 = t201 * t531 + t91 * t607;
t865 = t936 * t739;
t937 = -Icges(6,5) * t767 + Icges(6,6) * t764;
t275 = t759 * t865 + (Icges(6,3) * t759 + qJD(5) * t937) * t741;
t867 = t940 * t739;
t276 = t759 * t867 + (Icges(6,6) * t759 + qJD(5) * t941) * t741;
t869 = t948 * t739;
t277 = t759 * t869 + (Icges(6,5) * t759 + qJD(5) * t949) * t741;
t908 = -t764 * t826 - t767 * t824;
t100 = (t759 * t908 + t275) * t739 + (-t276 * t767 - t277 * t764 - t822 * t759 + (-t764 * t824 + t767 * t826) * qJD(5)) * t741;
t203 = -t739 * t822 - t741 * t908;
t1243 = t100 * t1319 + t203 * t1030;
t1112 = t593 + t620;
t885 = -qJD(4) * t741 + t667 * t588 + t1132;
t818 = t1112 * t668 - t667 * t621 + t885;
t87 = t298 * t449 + t300 * t448 + t366 * t556 + t367 * t555 + t818;
t1211 = qJD(1) * t87;
t1047 = -t588 + t1124;
t604 = t668 * t1264;
t874 = -t668 * t634 + t890;
t803 = (t621 + t1047) * qJD(1) - t604 + t874;
t101 = -t1329 + t803;
t1210 = t101 * t759;
t130 = -t1327 + t803;
t1209 = t130 * t769;
t146 = t283 * t739 - t741 * t915;
t1206 = t146 * t263;
t1205 = t147 * t262;
t161 = t336 * t739 - t741 * t913;
t1202 = t161 * t411;
t1201 = t162 * t410;
t1198 = t204 * t766;
t678 = rSges(3,1) * t765 + t1257;
t1036 = t678 * t1082;
t1096 = rSges(3,2) * t1164 + t769 * rSges(3,3);
t559 = rSges(3,1) * t1161 - t1096;
t351 = -t1036 + (-t559 - t688) * qJD(1);
t1197 = t351 * t766;
t1196 = t351 * t769;
t1037 = t678 * t737;
t1159 = t768 * t769;
t1163 = t765 * t769;
t560 = rSges(3,1) * t1159 - rSges(3,2) * t1163 + t750;
t1113 = t560 + t689;
t352 = qJD(1) * t1113 - t1037;
t616 = t678 * t769;
t1195 = t352 * t616;
t1182 = t667 * t766;
t1181 = t671 * t766;
t1180 = t671 * t769;
t1157 = t298 * t1060 + t171 * t1170;
t1156 = -t1040 * t831 + t235 * t1172;
t1154 = -t235 - t368;
t722 = qJD(4) * t739;
t1137 = -t667 * t585 + t722;
t1134 = t831 + t853;
t1131 = -t766 * t496 + t769 * t497;
t1129 = t766 * t513 + t769 * t514;
t1128 = -t553 * t1159 - t766 * t549;
t1127 = t554 * t1159 + t766 * t550;
t1118 = t515 + t593;
t1117 = t766 * t588 + t769 * t593;
t590 = t634 * t769;
t1116 = -qJD(1) * t590 + t685;
t1111 = -t1084 * t953 + t595;
t1104 = rSges(4,2) * t1043 + rSges(4,3) * t1083;
t1102 = -t673 + t676;
t1101 = t675 + t945;
t1098 = rSges(3,3) * t1083 + t1084 * t1325;
t117 = t347 * t556 + t349 * t555 + t818;
t1094 = qJD(1) * t117;
t1013 = rSges(5,1) * t769 - rSges(5,3) * t1177;
t516 = rSges(5,2) * t1172 + t1013;
t148 = t1118 * t668 - t516 * t667 + t885;
t1092 = qJD(1) * t148;
t1087 = qJD(1) * t672;
t363 = -t766 * t899 - t1180;
t1073 = t363 * qJD(1);
t1070 = -rSges(6,3) - pkin(3) - pkin(9);
t1067 = pkin(5) * t1171;
t1066 = pkin(9) * t1182;
t1065 = pkin(9) * t1173;
t1063 = t768 * t1250;
t1062 = t764 * t1249;
t1053 = t588 * t1083 + t769 * t292 + t766 * t293;
t324 = -rSges(4,1) * t1331 - rSges(4,2) * t1055 + t1104;
t325 = -t759 * t587 + (t639 * t769 + t749) * qJD(1);
t1052 = t513 * t1083 + t769 * t324 + t766 * t325;
t1051 = -t347 - t1112;
t1050 = -t496 * t1083 + t769 * t397 + t766 * t398;
t1045 = t655 + t1097;
t1044 = t701 + t593;
t1038 = t765 * t1083;
t413 = t831 * t1084;
t1028 = t1173 / 0.2e1;
t1027 = t1172 / 0.2e1;
t1026 = t1170 / 0.2e1;
t1025 = -pkin(1) - t1259;
t1024 = t1084 / 0.2e1;
t1022 = -t737 / 0.2e1;
t1019 = t1082 / 0.2e1;
t1017 = -t636 - t1267;
t1016 = -qJ(4) - t1266;
t1012 = t765 * (-t766 ^ 2 - t769 ^ 2);
t361 = rSges(7,1) * t532 - rSges(7,2) * t533;
t362 = rSges(7,1) * t534 + rSges(7,2) * t535;
t1011 = t361 * t449 + t448 * t362;
t527 = t955 * t741;
t1010 = t607 * t361 - t448 * t527;
t1001 = -t362 * t607 - t449 * t527;
t476 = t554 * t1161;
t998 = t550 * t769 - t476;
t991 = -t549 + t1187;
t986 = t131 * t1070;
t981 = -t1112 - t1352;
t980 = -t1084 * t853 + t1110 - t413;
t979 = t769 * t515 - t766 * t516 + t1117;
t978 = t769 * t620 - t766 * t621 + t1117;
t972 = qJD(5) * t1028;
t971 = -t465 - t1065;
t970 = t1107 - t1267;
t966 = -t465 - t1063;
t547 = t639 * t759;
t965 = -t547 - t1063;
t962 = t1259 - t1325;
t929 = t131 * t766 + t1209;
t928 = t132 * t769 + t133 * t766;
t927 = t132 * t766 - t133 * t769;
t926 = t134 * t769 + t135 * t766;
t925 = t134 * t766 - t135 * t769;
t924 = t146 * t769 + t147 * t766;
t923 = t146 * t766 - t147 * t769;
t922 = t149 * t769 + t150 * t766;
t921 = t149 * t766 - t150 * t769;
t920 = t151 * t769 + t152 * t766;
t919 = t151 * t766 - t152 * t769;
t918 = t161 * t769 + t162 * t766;
t917 = t161 * t766 - t162 * t769;
t916 = -t204 * t769 - t205 * t766;
t911 = t347 * t766 - t349 * t769;
t910 = -t352 * t766 - t1196;
t353 = t551 * t768 + t553 * t765;
t354 = t552 * t768 + t554 * t765;
t895 = -t279 + t971;
t889 = -t546 + t966;
t888 = t1015 - t1267;
t887 = -t590 * t668 - t769 * t604 + t1137;
t884 = -t516 * t1083 + t766 * t326 + t769 * t327 + t1053;
t883 = -t621 * t1083 + t766 * t452 + t769 * t453 + t1053;
t882 = t769 * t347 + t766 * t349 + t978;
t485 = t667 * t741 + t1042;
t877 = t971 + t1154;
t615 = t678 * t766;
t872 = -t102 * t853 - t1351 * t87;
t859 = qJD(2) * t675;
t858 = qJD(2) * t673;
t226 = -t1164 * t552 - t998;
t856 = (-t225 * t769 + t226 * t766) * qJD(2);
t227 = -t1163 * t551 - t1128;
t228 = -t1163 * t552 + t1127;
t855 = (-t227 * t769 + t228 * t766) * qJD(2);
t335 = (t559 * t766 + t560 * t769) * qJD(2);
t850 = t888 + t1134;
t849 = t1319 * t822 - t336 * t555 + t338 * t556;
t848 = (Icges(7,5) * t532 - Icges(7,6) * t533) * t448 - (Icges(7,5) * t534 + Icges(7,6) * t535) * t449 + t935 * t741 * t607;
t847 = (Icges(6,5) * t597 - Icges(6,6) * t598) * t555 - (Icges(6,5) * t599 + Icges(6,6) * t600) * t556 + t937 * t741 * t1319;
t846 = t966 - t1065;
t843 = t397 * t1082 + t398 * t737 - t496 * t727 - t497 * t726;
t842 = t1351 * t766 + t1352 * t769 + t978;
t840 = t551 * t769 - t552 * t766;
t839 = -t637 - t729 - t1255;
t836 = -t279 + t846;
t835 = t349 * t1083 + t766 * t191 + t769 * t192 + t883;
t834 = t741 * t848;
t833 = t741 * t847;
t827 = t846 + t1154;
t820 = (-t1101 * t765 + t1102 * t768) * qJD(1);
t817 = t667 * t293 + t641 * t588 + t759 * t722 + t843;
t784 = t667 * t452 + (t292 + t453) * t668 - t1112 * t640 - t641 * t621 + t817;
t23 = t448 * t171 + t449 * t172 + t555 * t199 + t556 * t200 - t262 * t298 + t263 * t300 - t410 * t366 + t411 * t367 + t784;
t816 = t102 * (-t1059 * t831 + t298 * t1173 + t739 * t172 - t741 * t413) + t23 * t300 * t1170 + t32 * t739 * t298;
t814 = t1083 * t1351 + t1359 * t769 + t1360 * t766 + t883;
t805 = -pkin(9) * t485 - t637 * t667 + t1116;
t37 = t1172 * t166 + t168 * t534 - t170 * t535 + t236 * t286 + t237 * t289 + t283 * t852;
t38 = t1172 * t165 + t167 * t534 - t169 * t535 + t236 * t288 - t237 * t290 + t285 * t852;
t39 = t1170 * t166 - t1331 * t283 + t168 * t532 + t170 * t533 + t238 * t286 + t239 * t289;
t40 = t1170 * t165 - t1331 * t285 + t167 * t532 + t169 * t533 + t238 * t288 - t239 * t290;
t79 = t1172 * t230 + t231 * t534 - t232 * t535 - t236 * t823 - t237 * t825 - t821 * t852;
t7 = t134 * t263 + t135 * t262 + t177 * t531 + t37 * t448 - t38 * t449 + t607 * t79;
t70 = t146 * t448 - t147 * t449 + t201 * t607;
t80 = t1170 * t230 + t1331 * t821 + t231 * t532 + t232 * t533 - t238 * t823 - t239 * t825;
t8 = t132 * t263 + t133 * t262 + t176 * t531 + t39 * t448 - t40 * t449 + t607 * t80;
t802 = ((-t759 * t928 + t80) * t739 + (-qJD(1) * t927 + t176 * t759 + t39 * t769 + t40 * t766) * t741) * t1289 + (t1205 + t1206 + t1244 - t1247 + t1248) * t1271 + ((-t759 * t926 + t79) * t739 + (-qJD(1) * t925 + t177 * t759 + t37 * t769 + t38 * t766) * t741) * t1288 + t7 * t1027 + (t811 * t532 - t533 * t812 + t769 * t834) * t1290 + (t534 * t811 + t535 * t812 + t766 * t834) * t1287 + t8 * t1026 + (t848 * t739 + (t812 * t738 - t740 * t811) * t741) * t1281 + (t177 * t739 + t741 * t926) * t1294 + (t176 * t739 + t741 * t928) * t1293 + t70 * t1028 + (t201 * t739 + t741 * t924) * t1286 + ((-t759 * t924 + t91) * t739 + (-qJD(1) * t923 + t201 * t759 + t46 * t769 + t47 * t766) * t741) * t1280 + t1339 * t65 + t1338 * t64;
t378 = qJD(1) * t552 - t766 * t858;
t380 = qJD(1) * t554 - t766 * t859;
t792 = qJD(1) * t549 - qJD(2) * t353 - t378 * t765 + t380 * t768;
t377 = -t769 * t858 + (-t766 * t945 + t1222) * qJD(1);
t379 = -t769 * t859 + (-t676 * t766 + t1229) * qJD(1);
t791 = -qJD(2) * t354 - t377 * t765 + t379 * t768 + t1088;
t646 = t945 * qJD(2);
t647 = t676 * qJD(2);
t790 = qJD(1) * t671 - t646 * t765 + t647 * t768 + (-t673 * t768 - t675 * t765) * qJD(2);
t407 = t831 * t766;
t432 = t853 * t766;
t450 = rSges(7,3) * t741 + t875;
t557 = t739 * t985;
t788 = -t1319 * t432 - t300 * t617 - t407 * t607 - t449 * t450 - t556 * t511 + t557 * t831 + t860;
t591 = t953 * t769;
t787 = t148 * (t667 * t586 + (-t590 + t591) * t668 + t1137) + t175 * (qJD(1) * t591 + (-t637 - t638) * t667 + t1116);
t785 = -t1301 * t765 + t840 * t768;
t783 = (t821 * t769 + t915) * t448 - (t821 * t766 + t914) * t449 + (Icges(7,3) * t741 + t864 + t909) * t607;
t782 = (t822 * t769 + t913) * t555 - (t822 * t766 + t912) * t556 + (Icges(6,3) * t741 + t865 + t908) * t1319;
t781 = t782 * t741;
t777 = (-t283 * t448 + t285 * t449 + t607 * t821) * t739 + t783 * t741;
t421 = t832 * t769;
t776 = t117 * (t421 * t556 + t347 * t1032 + t555 * t420 + (-t1077 * t349 - t1066) * t739 + t887) + t131 * (-t1031 * t832 + t347 * t1079 + t1319 * t421 - t487 * t555 + t805);
t48 = t1172 * t186 + t188 * t599 - t190 * t600 + t305 * t339 + t306 * t342 + t336 * t852;
t49 = t1172 * t185 + t187 * t599 - t189 * t600 + t305 * t341 - t306 * t343 + t338 * t852;
t89 = t1172 * t275 + t276 * t599 - t277 * t600 - t305 * t824 - t306 * t826 - t822 * t852;
t13 = t1030 * t196 + t1319 * t89 + t151 * t411 + t152 * t410 + t48 * t555 - t49 * t556;
t50 = t1170 * t186 - t1331 * t336 + t188 * t597 + t190 * t598 + t307 * t339 + t308 * t342;
t51 = t1170 * t185 - t1331 * t338 + t187 * t597 + t189 * t598 + t307 * t341 - t308 * t343;
t90 = t1170 * t275 + t1331 * t822 + t276 * t597 + t277 * t598 - t307 * t824 - t308 * t826;
t14 = t1030 * t195 + t1319 * t90 + t149 * t411 + t150 * t410 + t50 * t555 - t51 * t556;
t402 = t823 * t766;
t403 = t823 * t769;
t404 = t825 * t766;
t405 = t825 * t769;
t416 = t824 * t766;
t417 = t824 * t769;
t418 = t826 * t766;
t419 = t826 * t769;
t444 = Icges(7,6) * t741 + t866;
t446 = Icges(7,5) * t741 + t868;
t481 = Icges(6,6) * t741 + t867;
t483 = Icges(6,5) * t741 + t869;
t86 = t1319 * t203 + t161 * t555 - t162 * t556;
t775 = (t1357 * t766 - t1358 * t769) * t1279 + (t1362 * t769 + t1361 * t766 + (t1353 * t769 + t1354 * t766) * qJD(1)) * t1262 + t917 * t972 + (t1355 * t766 - t1356 * t769) * t1278 + (t76 + t64 + t1365) * t1023 + (t77 + t65 + t1366) * t1024 + (t1368 * t769 + t1367 * t766 + (t1357 * t769 + t1358 * t766) * qJD(1)) * t1275 + (qJD(1) * t1363 + t1357 * t641 + t1358 * t640 + t1367 * t667 + t1368 * t668 + t13 + t7) * t1269 + (qJD(1) * t1364 + t1355 * t641 + t1356 * t640 + t1369 * t667 + t1370 * t668 + t14 + t8) * t1270 + (t1370 * t769 + t1369 * t766 + (t1355 * t769 + t1356 * t766) * qJD(1)) * t1276 - t86 * t1079 / 0.2e1 + (qJD(1) * t918 + t52 * t766 - t53 * t769) * t1272 + (-t146 * t558 - t147 * t557 + t201 * t617 + ((-t403 * t740 - t405 * t738 + t283) * t448 - (-t402 * t740 - t404 * t738 + t285) * t449 + (-t444 * t740 - t446 * t738 - t821) * t607) * t741 + t783 * t739) * t1281 + (((-t417 * t767 - t419 * t764 + t336) * t555 - (-t416 * t767 - t418 * t764 + t338) * t556 + (-t481 * t767 - t483 * t764 - t822) * t1319 + t203 * qJD(5)) * t741 + (-qJD(5) * t918 + t782) * t739) * t1273 + (qJD(1) * t924 + t46 * t766 - t47 * t769) * t1280 + (qJD(1) * t920 + t48 * t766 - t49 * t769) * t1283 + (qJD(1) * t922 + t50 * t766 - t51 * t769) * t1284 + ((t417 * t597 + t419 * t598) * t555 - (t416 * t597 + t418 * t598) * t556 + (t481 * t597 + t483 * t598) * t1319 + (-t1177 * t150 + t195 * t741) * qJD(5) + ((-qJD(5) * t149 + t849) * t739 + t781) * t769) * t1285 + ((t417 * t599 - t419 * t600) * t555 - (t416 * t599 - t418 * t600) * t556 + (t481 * t599 - t483 * t600) * t1319 + (-t1176 * t151 + t196 * t741) * qJD(5) + ((-qJD(5) * t152 + t849) * t739 + t781) * t766) * t1282 - t617 * t70 / 0.2e1 + (t76 * t769 + t766 * t77) * t721 / 0.2e1 + t923 * t1286 + (qJD(1) * t926 + t37 * t766 - t38 * t769) * t1288 + (qJD(1) * t928 + t39 * t766 - t40 * t769) * t1289 + t921 * t1291 + t919 * t1292 + t927 * t1293 + t925 * t1294 + (-t1379 * t741 + t1380 * t739) * t1263 + ((t403 * t534 - t405 * t535) * t448 - t134 * t558 - (t402 * t534 - t404 * t535) * t449 - t135 * t557 + (t444 * t534 - t446 * t535) * t607 + t177 * t617 + t777 * t766) * t1287 + ((t403 * t532 + t405 * t533) * t448 - t132 * t558 - (t402 * t532 + t404 * t533) * t449 - t133 * t557 + (t444 * t532 + t446 * t533) * t607 + t176 * t617 + t777 * t769) * t1290 + t557 * t65 / 0.2e1 + t558 * t64 / 0.2e1 + (t1342 * t766 + t1343 * t769) * t1277 + (-t1342 * t769 + t1343 * t766) * t1274;
t408 = t831 * t769;
t433 = t853 * t769;
t774 = t102 * (-t1031 * t853 + t366 * t1079 + t1319 * t433 + t617 * t298 + t607 * t408 - t448 * t450 - t511 * t555 - t558 * t831 + t805) + t87 * (t298 * t557 + t408 * t449 + t433 * t556 - t558 * t300 + t448 * t407 + t366 * t1032 + t555 * t432 + (-t1077 * t367 - t1066) * t739 + t887);
t652 = t962 * qJD(2);
t589 = t959 * t741;
t566 = t599 * pkin(5);
t565 = t597 * pkin(5);
t494 = t668 * t638;
t486 = -t1043 + t1055;
t409 = t831 * t1172;
t406 = (t668 * t769 + t1182) * t739;
t394 = rSges(6,1) * t599 + rSges(6,2) * t600;
t393 = rSges(6,1) * t597 - rSges(6,2) * t598;
t383 = -qJD(2) * t615 + (t769 * t962 + t750) * qJD(1);
t382 = -t1082 * t1257 + (-t1084 * t768 - t1035) * rSges(3,1) + t1098;
t364 = -t769 * t899 + t1181;
t350 = t364 * qJD(1);
t215 = -t652 * t1082 + (-t383 - t656 + t1037) * qJD(1);
t214 = -t652 * t737 + t618 + (t382 - t1036) * qJD(1);
t181 = -t1302 * t769 + t790 * t766;
t180 = t1302 * t766 + t790 * t769;
t179 = -qJD(2) * t902 + t377 * t768 + t379 * t765;
t178 = -qJD(2) * t903 + t378 * t768 + t380 * t765;
t174 = t953 * t668 + (t516 + t1047) * qJD(1) + t874;
t154 = -t547 * t668 + t636 * t640 + (-t325 + t1142) * qJD(1) + t896;
t153 = qJD(1) * t324 - t547 * t667 - t636 * t641 + t813;
t137 = t350 + t855;
t136 = t856 + t1073;
t104 = t324 * t668 + t325 * t667 + t513 * t641 - t514 * t640 + t843;
t75 = t326 * t667 - t516 * t641 + (t292 + t327) * t668 - t1118 * t640 + t817;
t36 = t191 * t555 + t192 * t556 - t347 * t410 + t349 * t411 + t784;
t1 = [(t1361 + t1364) * t1276 + (t257 + t1354) * t1279 + (-t1362 + t1363 + t1365) * t1275 + (t154 * (-t513 + t1099) + t204 * t1097 + t153 * (t514 + t990) + t205 * (-t984 + t1104) + (t1198 * t636 - t205 * t592) * t759 + ((-t204 * rSges(4,3) + t205 * (-t729 - t1258)) * t766 + (t204 * (-t639 - t729) - t205 * t771) * t769) * qJD(1) - (-qJD(1) * t513 + t1320 - t204 + t854) * t205) * m(4) + (t1353 + t1389) * t1278 + (t79 + t64) * t1288 + (((t506 * t766 - t507 * t769) * t741 + (t500 * t769 + t501 * t766) * t739 + t1357 + t1385 + t1387) * t668 + (t505 * t1177 + (-t506 * t769 - t507 * t766) * t741 - t502 * t1172 + (t500 * t766 - t501 * t769) * t739 - t1330 + t1358 - t1384) * t667 + t1375) * t1274 + (t215 * (t1025 * t766 + t1096 + t756) + t214 * t1113 + t352 * (t734 + t1098) + (t1197 * t678 - t1195) * qJD(2) + ((-pkin(1) - t962) * t1196 + (t351 * (-rSges(3,3) - pkin(7)) + t352 * t1025) * t766) * qJD(1) - (-qJD(1) * t559 - t1036 - t351 - t659) * t352) * m(3) + ((t354 + t364) * t769 + (t353 + t363) * t766) * t1072 / 0.2e1 + (-t1073 + ((t769 * t991 - t1127 + t228) * t769 + (t766 * t991 + t227 + t998) * t766) * qJD(2) + t136) * t1022 + (t89 + t76) * t1283 + t90 * t1284 + (-(qJD(1) * t516 + t1107 * t668 - t174 + t837) * t175 + t114 * (t1013 + t1099) + t174 * t1045 + t113 * (t515 + t1044) + t175 * (-pkin(3) * t1059 + t648 + t890 + t977) + (-t113 * t771 + (-t114 * qJ(4) + t174 * (-rSges(5,2) * t759 - qJD(4))) * t739 + (t114 * (rSges(5,2) - pkin(3)) + t174 * (-rSges(5,3) - qJ(4)) * t759) * t741) * t766 + ((-t174 * rSges(5,1) + t175 * t839) * t766 + (t174 * (t839 + t1256) - t175 * t771) * t769) * qJD(1)) * m(5) + t1246 / 0.2e1 - t1245 / 0.2e1 - (t178 + t181 + t137) * t1082 / 0.2e1 + (t179 + t180) * t737 / 0.2e1 + t1243 + t1244 - t1247 / 0.2e1 + t1248 / 0.2e1 + t80 * t1289 + t195 * t1291 + t196 * t1292 + t176 * t1293 + t177 * t1294 + ((t1337 * t769 + t1330 + t1355 - t1388) * t668 + ((t1399 + t1405) * t769 + t1337 * t766 + t1356 + t1403) * t667 + t1366 + t1374) * t1277 - t640 * t260 / 0.2e1 + (t350 + ((t226 - t476 + (t550 + t1188) * t769 + t1128) * t769 + t1127 * t766) * qJD(2)) * t1019 + (t67 * (-t709 + t960 + t1099) + t130 * (t654 - t961 + t1045) + t66 * (t1044 + t347 + t620) + (t67 * pkin(4) + t1178 * t986) * t769 + (t67 * (-t637 - t1253) + t130 * (rSges(6,3) * t1178 - qJ(4) * t1173 - t722) - t66 * t771) * t766 + (t130 * (-t690 - t701 - t755) + (t1070 * t1209 + t766 * t986) * t741) * qJD(1) + (t130 + t735 + t1147 - t1064 * t769 + (-qJ(4) * t1177 + t1099) * qJD(1) + t1327 + t1332) * t131) * m(6) + (t33 * (t956 + t1099 - t1103) + ((t1016 * t1210 + t1268 * t1321) * t741 + t1321 * t1016 * t739) * t766 + (t1044 + t1328 + t298 - t1371) * t32 + (-t957 + t1045 + (-t1062 + (-t1069 - t729 - t1212 + (t770 + t1268) * t741) * qJD(1)) * t769 + (-qJD(1) * t728 + (-qJD(4) - t1061 - t1167 + t1251) * t739) * t766) * t101 + (t952 + t1155 + (-qJD(1) * t771 + t1178 * t1268 - t1064) * t769 + (-qJD(1) * t729 - t1062) * t766 + t101 + t1329 + t1332) * t102) * m(7) + t1206 / 0.2e1 + t1205 / 0.2e1 + t1201 / 0.2e1 + t1202 / 0.2e1 + t64 * t1287 + t76 * t1282 + (-qJD(2) * t899 - t1397 * t741 + t1398 * t739 + t646 * t768 + t647 * t765) * qJD(1); (-t178 * t769 + t179 * t766 + (t353 * t766 + t354 * t769) * qJD(1)) * t1262 + ((t1101 * t768 + t1102 * t765) * qJD(1) + (t1301 * t768 + t840 * t765) * qJD(2)) * t1263 + ((-t1082 * t1181 - t1087) * t769 + (t820 + (t1180 * t769 + t785) * qJD(2)) * t766) * t1019 + ((-t1180 * t737 + t1087) * t766 + (t820 + (t1181 * t766 + t785) * qJD(2)) * t769) * t1022 + t775 + (qJD(1) * t180 + (-(t1305 * t766 + t792 * t769) * t769 + (t1306 * t766 + t791 * t769) * t766 + (t227 * t766 + t228 * t769) * qJD(1)) * t1326) * t1270 + (qJD(1) * t181 + (-(-t1305 * t769 + t792 * t766) * t769 + (-t1306 * t769 + t791 * t766) * t766 + (t225 * t766 + t226 * t769) * qJD(1)) * t1326) * t1269 + (t856 + t136) * t1024 + (t855 + t137) * t1023 + (t101 * t980 + t23 * (t842 + t1131) + t87 * (t814 + t1050) + (t101 * t827 + t1321 * t850) * t769 + (t32 * t850 + t102 * t827 + (-t497 + t981) * t1211) * t766 - t101 * (t1032 * t853 - t1079 * t367 + t788) - (-t102 * t1038 + ((-t101 * t769 - t102 * t766) * t768 + t87 * t1012) * qJD(2)) * pkin(2) - t774) * m(7) + (-(-t131 * t1038 + (t1012 * t117 - t768 * t929) * qJD(2)) * pkin(2) - t776 + t36 * (t882 + t1131) + t117 * (t835 + t1050) + (t131 * t836 + (-t497 + t1051) * t1094) * t766 + t1300 * (t832 + t888) + (-t1032 * t832 + t1079 * t349 + t769 * t836 + t1318) * t130) * m(6) + (t174 * t1111 + t75 * (t979 + t1131) + t148 * (t884 + t1050) + (t1317 * t970 + t174 * t889) * t769 + (t113 * t970 + t175 * t889 + (-t497 - t1118) * t1092) * t766 - t174 * (-qJD(1) * t586 - t494 + t964) - (-t175 * t1038 + ((-t174 * t769 - t175 * t766) * t768 + t148 * t1012) * qJD(2)) * pkin(2) - t787) * m(5) + (-(-t205 * t1038 + (t1012 * t194 + t768 * t916) * qJD(2)) * pkin(2) + t104 * (t1129 + t1131) + t194 * (t1050 + t1052) + (t204 * t965 + (qJD(1) * t205 + t154) * t1017) * t769 + (t153 * t1017 + t205 * t965 + (t204 * t636 + t194 * (-t497 - t514)) * qJD(1)) * t766 + t1311) * m(4) + (-(t351 * t615 - t1195) * qJD(1) - (t335 * (-t615 * t766 - t616 * t769) + t910 * t962) * qJD(2) + 0.2e1 * t335 * (t382 * t769 + t383 * t766 + (t559 * t769 - t560 * t766) * qJD(1)) + t910 * t652 + (-t214 * t766 - t215 * t769 + (-t352 * t769 + t1197) * qJD(1)) * t678) * m(3); t775 + (t23 * t842 + t87 * t814 + (t102 * t877 + t1211 * t981) * t766 - t774 + (t1321 * t769 + t1324) * (t1015 + t1134) + (t980 + t877 * t769 - (t1177 * t853 - t367 * t741) * qJD(5) - t788) * t101) * m(7) + (-t776 + t36 * t882 + t117 * t835 + (t1051 * t1094 + t131 * t895) * t766 + t1300 * (t1015 + t832) + (-(t1177 * t832 - t349 * t741) * qJD(5) + t895 * t769 + t1318) * t130) * m(6) + (t75 * t979 + t148 * t884 + (-t1092 * t1118 + t1130 * t175) * t766 - t787 + (t1317 * t769 + t1322) * t1107 + (t1111 + t1130 * t769 + t494 - (t585 - t586) * qJD(1) - t1100) * t174) * m(5) + (t104 * t1129 + t194 * (-t1084 * t514 + t1052) + t916 * t547 + (-t153 * t766 - t154 * t769 + (-t205 * t769 + t1198) * qJD(1)) * t636 + t1311) * m(4); -m(5) * (t148 * t406 + t174 * t486 + t175 * t485) - m(6) * (t117 * t406 + t130 * t486 + t131 * t485) - m(7) * (t101 * t486 + t102 * t485 + t406 * t87) + 0.2e1 * ((t1168 * t175 + t174 * t668 - t75) * t1297 + (t1168 * t131 + t130 * t668 - t36) * t1296 + (t101 * t668 + t102 * t1168 - t23) * t1295) * t741 + 0.2e1 * ((t1083 * t175 - t1084 * t174 + t114 * t769 + t148 * t759 + t1322) * t1297 + (t1083 * t131 - t1084 * t130 + t117 * t759 + t67 * t769 + t1323) * t1296 + (-t101 * t1084 + t102 * t1083 + t33 * t769 + t759 * t87 + t1324) * t1295) * t739; (t196 * t739 + t741 * t920) * t1292 + (t195 * t739 + t741 * t922) * t1291 + ((-t759 * t918 + t100) * t739 + (-qJD(1) * t917 + t203 * t759 + t52 * t769 + t53 * t766) * t741) * t1272 + ((-t759 * t922 + t90) * t739 + (-qJD(1) * t921 + t195 * t759 + t50 * t769 + t51 * t766) * t741) * t1284 + ((-t759 * t920 + t89) * t739 + (-qJD(1) * t919 + t196 * t759 + t48 * t769 + t49 * t766) * t741) * t1283 + (t203 * t739 + t741 * t918) * t972 + (t599 * t809 + t600 * t810 + t766 * t833) * t1282 + t802 + t86 * t1028 + (t847 * t739 + (t810 * t764 - t767 * t809) * t741) * t1273 + (t1201 + t1202 + t1243 - t1245 + t1246) * t1271 + t14 * t1026 + (t809 * t597 - t598 * t810 + t769 * t833) * t1285 + t13 * t1027 + t1339 * t77 + t1338 * t76 + (-t101 * (t1067 * t556 - t1319 * t566 + t1001) - t102 * (t1067 * t555 + t1319 * t565 + t1010) - t87 * (t555 * t566 + t556 * t565 + t1011) - t33 * t409 + t101 * t1156 + t87 * t1157 + (-t33 * t1351 - t101 * t1360 + t32 * t366 + t102 * t200 + (t872 * t769 + (t101 * t1134 + t87 * t366) * t766) * t759) * t739 + ((-t101 * t1351 + t102 * t366) * t759 + (t32 * t1134 + t102 * t1154 + t23 * t367 + t87 * t199 + (-t101 * t853 - t1352 * t87) * qJD(1)) * t769 + (t872 * qJD(1) + t101 * t368 - t1352 * t23 - t1359 * t87 - t33 * t853) * t766) * t741 + t816) * m(7) + ((-t130 * t191 + t131 * t192 + t66 * t347 - t67 * t349 + (t117 * t911 - (-t130 * t766 + t131 * t769) * t832) * t759) * t739 + (t130 * (t279 * t766 - t349 * t759) + t131 * (-t279 * t769 + t347 * t759) - t36 * t911 + t117 * (-t1083 * t347 - t1084 * t349 + t191 * t769 - t192 * t766) - (qJD(1) * t929 - t66 * t769 + t67 * t766) * t832) * t741 - t130 * (-t1319 * t394 - t556 * t589) - t131 * (t1319 * t393 - t555 * t589) - t117 * (t393 * t556 + t394 * t555)) * m(6); t802 + (t33 * (-t300 * t739 - t409) + t87 * (-t1059 * t300 + t1157) + (-t300 * t1210 + (-t102 * t235 - t1211 * t298 + t32 * t831) * t769 + (-t23 * t298 + t87 * (-qJD(1) * t300 - t172)) * t766) * t741 + t816 - t1010 * t102 - t1011 * t87 + (t1060 * t831 - t171 * t739 - t1001 + t1156) * t101) * m(7);];
tauc  = t1(:);
