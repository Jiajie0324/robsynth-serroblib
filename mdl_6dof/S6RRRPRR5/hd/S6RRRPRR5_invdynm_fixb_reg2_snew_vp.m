% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 10:45
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 10:44:46
% EndTime: 2019-05-07 10:45:38
% DurationCPUTime: 55.98s
% Computational Cost: add. (293181->943), mult. (604958->1203), div. (0->0), fcn. (433147->10), ass. (0->621)
t1740 = qJD(2) + qJD(3);
t1906 = t1740 ^ 2;
t1745 = sin(qJ(3));
t1746 = sin(qJ(2));
t1750 = cos(qJ(3));
t1751 = cos(qJ(2));
t1703 = (t1745 * t1751 + t1746 * t1750) * qJD(1);
t1907 = t1703 ^ 2;
t1673 = t1907 + t1906;
t1739 = qJDD(2) + qJDD(3);
t1893 = qJD(1) * t1751;
t1894 = qJD(1) * t1746;
t1701 = t1745 * t1894 - t1750 * t1893;
t1868 = t1703 * t1701;
t1943 = t1868 + t1739;
t1951 = t1943 * t1745;
t1586 = t1673 * t1750 + t1951;
t1950 = t1943 * t1750;
t1588 = -t1673 * t1745 + t1950;
t1505 = t1586 * t1751 + t1588 * t1746;
t1983 = pkin(1) * t1505;
t1982 = pkin(7) * t1505;
t1508 = t1586 * t1746 - t1588 * t1751;
t1981 = pkin(7) * t1508;
t1747 = sin(qJ(1));
t1980 = t1508 * t1747;
t1752 = cos(qJ(1));
t1979 = t1508 * t1752;
t1916 = -t1907 + t1906;
t1642 = t1868 - t1739;
t1964 = t1642 * t1745;
t1591 = -t1750 * t1916 + t1964;
t1963 = t1642 * t1750;
t1595 = t1745 * t1916 + t1963;
t1521 = t1591 * t1746 - t1595 * t1751;
t1978 = t1521 * t1747;
t1977 = t1521 * t1752;
t1698 = t1701 ^ 2;
t1682 = t1906 - t1698;
t1593 = -t1682 * t1745 + t1950;
t1598 = t1682 * t1750 + t1951;
t1523 = t1593 * t1746 + t1598 * t1751;
t1733 = qJD(2) * t1893;
t1847 = t1746 * qJDD(1);
t1713 = t1733 + t1847;
t1837 = qJD(2) * t1894;
t1846 = t1751 * qJDD(1);
t1795 = t1837 - t1846;
t1799 = -qJD(3) * t1703 - t1713 * t1745 - t1750 * t1795;
t1861 = t1740 * t1703;
t1945 = -t1861 - t1799;
t1976 = t1523 * t1747 - t1752 * t1945;
t1975 = t1523 * t1752 + t1747 * t1945;
t1974 = pkin(2) * t1586;
t1641 = -t1906 - t1698;
t1556 = t1641 * t1745 - t1963;
t1559 = -t1641 * t1750 - t1964;
t1481 = t1556 * t1746 + t1559 * t1751;
t1944 = t1861 - t1799;
t1973 = pkin(6) * (t1481 * t1752 - t1747 * t1944);
t1972 = pkin(6) * (t1481 * t1747 + t1752 * t1944);
t1971 = pkin(8) * t1586;
t1970 = pkin(8) * t1588;
t1516 = t1591 * t1751 + t1595 * t1746;
t1518 = t1593 * t1751 - t1598 * t1746;
t1478 = t1556 * t1751 - t1559 * t1746;
t1969 = pkin(1) * t1478;
t1968 = pkin(7) * t1478;
t1967 = pkin(1) * t1944 + pkin(7) * t1481;
t1961 = pkin(2) * t1556;
t1960 = pkin(8) * t1556;
t1959 = pkin(8) * t1559;
t1958 = t1745 * t1944;
t1957 = t1745 * t1945;
t1954 = t1750 * t1945;
t1882 = t1944 * t1750;
t1905 = 2 * qJD(4);
t1917 = -t1698 - t1907;
t1942 = pkin(1) * t1917;
t1941 = pkin(2) * t1917;
t1743 = sin(qJ(6));
t1744 = sin(qJ(5));
t1749 = cos(qJ(5));
t1659 = -t1749 * t1701 + t1740 * t1744;
t1661 = t1701 * t1744 + t1740 * t1749;
t1748 = cos(qJ(6));
t1601 = t1748 * t1659 + t1661 * t1743;
t1603 = -t1659 * t1743 + t1661 * t1748;
t1534 = t1603 * t1601;
t1768 = t1750 * t1713 - t1745 * t1795;
t1624 = -t1701 * qJD(3) + t1768;
t1619 = qJDD(5) + t1624;
t1618 = qJDD(6) + t1619;
t1922 = -t1534 + t1618;
t1940 = t1743 * t1922;
t1613 = t1661 * t1659;
t1920 = -t1613 + t1619;
t1939 = t1744 * t1920;
t1915 = t1907 - t1698;
t1937 = t1747 * t1915;
t1936 = t1747 * t1917;
t1935 = t1748 * t1922;
t1934 = t1749 * t1920;
t1932 = t1752 * t1915;
t1931 = t1752 * t1917;
t1742 = t1751 ^ 2;
t1754 = qJD(1) ^ 2;
t1722 = t1747 * g(1) - t1752 * g(2);
t1808 = qJDD(1) * pkin(1) + t1722;
t1627 = (pkin(8) * t1742 + pkin(7)) * t1754 - pkin(2) * t1795 - (qJD(2) * pkin(2) - pkin(8) * t1894) * t1894 + t1808;
t1930 = pkin(3) * t1861 - t1703 * t1905 - t1627;
t1791 = (-t1701 * t1745 - t1703 * t1750) * t1740;
t1792 = (-t1701 * t1750 + t1703 * t1745) * t1740;
t1911 = -t1746 * t1791 + t1751 * t1792;
t1929 = -t1752 * t1739 + t1747 * t1911;
t1838 = t1752 * t1868;
t1860 = t1740 * t1745;
t1819 = t1750 * t1624 - t1703 * t1860;
t1859 = t1740 * t1750;
t1821 = t1745 * t1624 + t1703 * t1859;
t1910 = -t1746 * t1821 + t1751 * t1819;
t1928 = t1747 * t1910 - t1838;
t1765 = t1701 * t1859 - t1745 * t1799;
t1820 = t1701 * t1860 + t1750 * t1799;
t1914 = -t1746 * t1820 + t1751 * t1765;
t1927 = t1747 * t1914 + t1838;
t1839 = t1747 * t1868;
t1926 = t1752 * t1910 + t1839;
t1925 = t1752 * t1914 - t1839;
t1924 = t1739 * t1747 + t1752 * t1911;
t1686 = t1701 * t1740;
t1584 = -t1686 + t1624;
t1923 = qJ(4) * t1584;
t1677 = pkin(4) * t1703 - pkin(9) * t1740;
t1756 = -t1923 + t1930;
t1788 = t1799 * pkin(3);
t1410 = -pkin(4) * t1698 - pkin(9) * t1799 - t1703 * t1677 + t1756 - t1788;
t1853 = t1746 * t1754;
t1723 = g(1) * t1752 + g(2) * t1747;
t1706 = -pkin(1) * t1754 + qJDD(1) * pkin(7) - t1723;
t1854 = t1746 * t1706;
t1895 = qJD(1) * qJD(2);
t1607 = qJDD(2) * pkin(2) - t1713 * pkin(8) - t1854 + (pkin(2) * t1853 + pkin(8) * t1895 - g(3)) * t1751;
t1676 = -t1746 * g(3) + t1751 * t1706;
t1737 = t1742 * t1754;
t1753 = qJD(2) ^ 2;
t1727 = -t1737 - t1753;
t1612 = pkin(2) * t1727 + pkin(8) * t1846 + t1676;
t1536 = -t1750 * t1607 + t1745 * t1612;
t1648 = pkin(3) * t1701 - qJ(4) * t1703;
t1470 = -t1739 * pkin(3) - t1906 * qJ(4) + t1703 * t1648 + qJDD(4) + t1536;
t1585 = t1686 + t1624;
t1430 = pkin(4) * t1585 + pkin(9) * t1642 + t1470;
t1343 = t1744 * t1410 - t1749 * t1430;
t1344 = t1749 * t1410 + t1744 * t1430;
t1276 = -t1749 * t1343 + t1344 * t1744;
t1551 = -t1659 * qJD(5) + t1749 * t1739 - t1744 * t1799;
t1831 = t1744 * t1739 + t1749 * t1799;
t1798 = qJD(5) * t1661 + t1831;
t1450 = -t1601 * qJD(6) + t1748 * t1551 - t1743 * t1798;
t1696 = qJD(5) + t1703;
t1692 = qJD(6) + t1696;
t1560 = t1692 * t1601;
t1921 = -t1560 + t1450;
t1636 = t1696 * t1659;
t1919 = -t1636 + t1551;
t1530 = t1636 + t1551;
t1528 = (qJD(5) - t1696) * t1661 + t1831;
t1913 = t1746 * t1765 + t1751 * t1820;
t1912 = t1746 * t1792 + t1751 * t1791;
t1909 = t1746 * t1819 + t1751 * t1821;
t1599 = t1601 ^ 2;
t1600 = t1603 ^ 2;
t1908 = t1659 ^ 2;
t1657 = t1661 ^ 2;
t1689 = t1692 ^ 2;
t1694 = t1696 ^ 2;
t1904 = -pkin(3) - pkin(9);
t1537 = t1745 * t1607 + t1750 * t1612;
t1451 = -t1536 * t1750 + t1537 * t1745;
t1903 = pkin(2) * t1451;
t1500 = -t1585 * t1750 - t1957;
t1902 = pkin(2) * t1500;
t1901 = pkin(3) * t1745;
t1900 = pkin(3) * t1750;
t1899 = pkin(4) * t1276;
t1767 = -t1906 * pkin(3) + t1739 * qJ(4) - t1701 * t1648 + t1537;
t1435 = t1799 * pkin(4) - t1698 * pkin(9) + (t1905 + t1677) * t1740 + t1767;
t1898 = pkin(4) * t1435;
t1442 = -t1528 * t1744 - t1530 * t1749;
t1897 = pkin(4) * t1442;
t1896 = pkin(9) * t1276;
t1300 = pkin(5) * t1920 - pkin(10) * t1530 - t1343;
t1628 = pkin(5) * t1696 - pkin(10) * t1661;
t1310 = -pkin(5) * t1908 - pkin(10) * t1798 - t1696 * t1628 + t1344;
t1255 = -t1748 * t1300 + t1310 * t1743;
t1256 = t1300 * t1743 + t1310 * t1748;
t1220 = -t1255 * t1748 + t1256 * t1743;
t1891 = t1220 * t1749;
t1367 = pkin(5) * t1798 - pkin(10) * t1908 + t1661 * t1628 + t1435;
t1889 = t1367 * t1743;
t1888 = t1367 * t1748;
t1887 = t1451 * t1746;
t1886 = t1451 * t1751;
t1475 = t1534 + t1618;
t1885 = t1475 * t1743;
t1884 = t1475 * t1748;
t1541 = t1613 + t1619;
t1883 = t1541 * t1749;
t1881 = t1627 * t1745;
t1880 = t1627 * t1750;
t1873 = t1692 * t1743;
t1872 = t1692 * t1748;
t1871 = t1696 * t1661;
t1870 = t1696 * t1744;
t1869 = t1696 * t1749;
t1705 = t1754 * pkin(7) + t1808;
t1867 = t1705 * t1746;
t1866 = t1705 * t1751;
t1714 = -0.2e1 * t1837 + t1846;
t1663 = t1714 * t1751;
t1729 = t1751 * t1853;
t1720 = qJDD(2) + t1729;
t1865 = t1720 * t1746;
t1721 = qJDD(2) - t1729;
t1864 = t1721 * t1746;
t1863 = t1721 * t1751;
t1741 = t1746 ^ 2;
t1858 = t1741 * t1754;
t1857 = t1744 * t1220;
t1856 = t1744 * t1435;
t1855 = t1744 * t1541;
t1432 = t1749 * t1435;
t1463 = t1740 * t1905 + t1767;
t1851 = -pkin(3) * t1470 + qJ(4) * t1463;
t1580 = (-qJD(3) + t1740) * t1701 + t1768;
t1850 = -pkin(3) * t1580 - qJ(4) * t1945;
t1849 = -t1657 + t1694;
t1848 = t1741 + t1742;
t1845 = -t1657 - t1694;
t1843 = t1745 * t1534;
t1842 = t1750 * t1534;
t1841 = t1745 * t1613;
t1840 = t1750 * t1613;
t1836 = qJ(4) * t1745 + pkin(2);
t1221 = t1255 * t1743 + t1748 * t1256;
t1204 = t1221 * t1744 + t1891;
t1219 = pkin(5) * t1220;
t1835 = -pkin(4) * t1204 - t1219;
t1832 = -t1743 * t1551 - t1748 * t1798;
t1399 = (-qJD(6) + t1692) * t1603 + t1832;
t1401 = t1560 + t1450;
t1330 = t1399 * t1743 - t1401 * t1748;
t1332 = t1399 * t1748 + t1401 * t1743;
t1272 = t1330 * t1749 + t1332 * t1744;
t1329 = pkin(5) * t1330;
t1834 = -pkin(4) * t1272 - t1329;
t1472 = t1749 * t1845 - t1855;
t1833 = -pkin(9) * t1472 + t1432;
t1452 = t1536 * t1745 + t1750 * t1537;
t1675 = t1751 * g(3) + t1854;
t1611 = t1675 * t1746 + t1751 * t1676;
t1829 = -t1722 * t1747 - t1752 * t1723;
t1828 = t1747 * t1729;
t1827 = t1752 * t1729;
t1381 = t1463 * t1745 - t1470 * t1750;
t1826 = pkin(2) * t1381 + t1851;
t1497 = -t1580 * t1750 - t1957;
t1825 = pkin(2) * t1497 + t1850;
t1824 = -pkin(4) * t1472 + t1344;
t1823 = -pkin(3) * t1276 + qJ(4) * t1435 - t1896;
t1717 = qJDD(1) * t1752 - t1747 * t1754;
t1822 = -pkin(6) * t1717 - g(3) * t1747;
t1509 = -t1689 - t1599;
t1407 = t1509 * t1743 + t1935;
t1818 = pkin(5) * t1407 - t1255;
t1527 = (qJD(5) + t1696) * t1661 + t1831;
t1817 = pkin(4) * t1527 + t1432;
t1816 = pkin(4) * t1919 - t1856;
t1573 = -t1694 - t1908;
t1466 = t1744 * t1573 + t1934;
t1815 = -pkin(9) * t1466 + t1856;
t1277 = t1744 * t1343 + t1749 * t1344;
t1561 = t1692 * t1603;
t1797 = qJD(6) * t1603 - t1832;
t1397 = t1561 + t1797;
t1814 = -t1397 * t1743 + t1748 * t1921;
t1555 = -t1600 + t1689;
t1813 = t1555 * t1748 + t1940;
t1554 = t1599 - t1689;
t1812 = t1554 * t1743 + t1884;
t1610 = t1675 * t1751 - t1676 * t1746;
t1811 = t1722 * t1752 - t1723 * t1747;
t1809 = -pkin(3) * t1472 + qJ(4) * t1919 + t1833;
t1807 = -t1536 + t1961;
t1806 = -pkin(4) * t1466 + t1343;
t1468 = -t1599 - t1600;
t1213 = -pkin(5) * t1468 + pkin(10) * t1332 + t1221;
t1215 = -pkin(10) * t1330 - t1220;
t1805 = -pkin(9) * t1272 - t1213 * t1744 + t1749 * t1215;
t1408 = t1509 * t1748 - t1940;
t1282 = -pkin(5) * t1397 + pkin(10) * t1408 - t1888;
t1307 = -pkin(10) * t1407 + t1889;
t1336 = t1407 * t1749 + t1408 * t1744;
t1804 = -pkin(9) * t1336 - t1282 * t1744 + t1749 * t1307;
t1542 = -t1600 - t1689;
t1437 = -t1542 * t1743 - t1884;
t1285 = -pkin(5) * t1921 + pkin(10) * t1437 + t1889;
t1436 = t1542 * t1748 - t1885;
t1314 = -pkin(10) * t1436 + t1888;
t1352 = t1436 * t1749 + t1437 * t1744;
t1803 = -pkin(9) * t1352 - t1285 * t1744 + t1749 * t1314;
t1802 = -pkin(9) * t1442 - t1276;
t1801 = t1601 * t1873 - t1748 * t1797;
t1800 = t1450 * t1743 + t1603 * t1872;
t1796 = pkin(5) * t1436 - t1256;
t1263 = -t1276 * t1750 + t1435 * t1745;
t1794 = pkin(2) * t1263 + t1823;
t1793 = (-t1601 * t1743 - t1603 * t1748) * t1692;
t1790 = -pkin(4) * t1336 - t1818;
t1789 = -pkin(3) * t1466 + qJ(4) * t1527 + t1815;
t1787 = -t1537 - t1974;
t1786 = pkin(4) * t1468 - t1749 * t1213 - t1744 * t1215;
t1785 = pkin(4) * t1397 - t1749 * t1282 - t1744 * t1307;
t1784 = pkin(4) * t1921 - t1749 * t1285 - t1744 * t1314;
t1553 = -t1657 - t1908;
t1783 = pkin(4) * t1553 - t1277;
t1411 = -t1472 * t1750 + t1745 * t1919;
t1782 = pkin(2) * t1411 + t1809;
t1781 = -pkin(3) * t1272 + qJ(4) * t1468 + t1805;
t1780 = -pkin(3) * t1336 + qJ(4) * t1397 + t1804;
t1779 = -pkin(3) * t1352 + qJ(4) * t1921 + t1803;
t1778 = -pkin(3) * t1442 + qJ(4) * t1553 + t1802;
t1216 = -pkin(5) * t1367 + pkin(10) * t1221;
t1777 = pkin(4) * t1367 + pkin(10) * t1857 - t1749 * t1216;
t1776 = -pkin(9) * t1204 - pkin(10) * t1891 - t1216 * t1744;
t1775 = -pkin(4) * t1352 - t1796;
t1404 = -t1466 * t1750 + t1527 * t1745;
t1774 = pkin(2) * t1404 + t1789;
t1773 = -pkin(3) * t1204 + qJ(4) * t1367 + t1776;
t1265 = -t1272 * t1750 + t1468 * t1745;
t1772 = pkin(2) * t1265 + t1781;
t1289 = -t1336 * t1750 + t1397 * t1745;
t1771 = pkin(2) * t1289 + t1780;
t1293 = -t1352 * t1750 + t1745 * t1921;
t1770 = pkin(2) * t1293 + t1779;
t1384 = -t1442 * t1750 + t1553 * t1745;
t1769 = pkin(2) * t1384 + t1778;
t1766 = pkin(3) * t1642 - qJ(4) * t1641 + t1470;
t1199 = -t1204 * t1750 + t1367 * t1745;
t1764 = pkin(2) * t1199 + t1773;
t1763 = t1766 - t1961;
t1760 = (-qJD(3) - t1740) * t1701 + t1768;
t1759 = pkin(3) * t1673 + qJ(4) * t1943 + t1463;
t1757 = t1759 + t1974;
t1755 = t1788 - t1930;
t1726 = t1737 - t1753;
t1725 = -t1753 - t1858;
t1724 = t1753 - t1858;
t1719 = -t1737 + t1858;
t1718 = t1737 + t1858;
t1716 = qJDD(1) * t1747 + t1752 * t1754;
t1715 = t1848 * qJDD(1);
t1712 = 0.2e1 * t1733 + t1847;
t1710 = t1751 * t1720;
t1709 = t1848 * t1895;
t1697 = -pkin(6) * t1716 + g(3) * t1752;
t1679 = t1713 * t1751 - t1741 * t1895;
t1678 = -t1742 * t1895 + t1746 * t1795;
t1672 = -t1725 * t1746 - t1863;
t1671 = -t1724 * t1746 + t1710;
t1670 = t1727 * t1751 - t1865;
t1669 = t1726 * t1751 - t1864;
t1668 = t1725 * t1751 - t1864;
t1667 = t1724 * t1751 + t1865;
t1666 = t1727 * t1746 + t1710;
t1665 = t1726 * t1746 + t1863;
t1664 = (t1713 + t1733) * t1746;
t1654 = -t1712 * t1746 + t1663;
t1653 = t1712 * t1751 + t1714 * t1746;
t1635 = -t1694 + t1908;
t1630 = -pkin(7) * t1668 - t1866;
t1629 = -pkin(7) * t1666 - t1867;
t1622 = -pkin(1) * t1668 + t1676;
t1621 = -pkin(1) * t1666 + t1675;
t1608 = t1657 - t1908;
t1605 = pkin(1) * t1714 + pkin(7) * t1670 + t1866;
t1604 = -pkin(1) * t1712 + pkin(7) * t1672 - t1867;
t1572 = pkin(1) * t1705 + pkin(7) * t1611;
t1563 = pkin(1) * t1718 + pkin(7) * t1715 + t1611;
t1548 = (-t1659 * t1749 + t1661 * t1744) * t1696;
t1547 = (-t1659 * t1744 - t1661 * t1749) * t1696;
t1533 = -t1880 + t1971;
t1532 = t1600 - t1599;
t1526 = -t1881 - t1960;
t1513 = t1551 * t1749 - t1661 * t1870;
t1512 = t1551 * t1744 + t1661 * t1869;
t1511 = -t1659 * t1869 - t1744 * t1798;
t1510 = -t1659 * t1870 + t1749 * t1798;
t1504 = t1585 * t1745 - t1954;
t1503 = -t1745 * t1760 - t1882;
t1502 = -t1584 * t1745 - t1882;
t1501 = t1580 * t1745 - t1954;
t1499 = t1750 * t1760 - t1958;
t1498 = t1584 * t1750 - t1958;
t1496 = t1547 * t1745 + t1619 * t1750;
t1495 = -t1547 * t1750 + t1619 * t1745;
t1494 = t1635 * t1749 - t1855;
t1493 = -t1744 * t1849 + t1934;
t1492 = t1635 * t1744 + t1883;
t1491 = t1749 * t1849 + t1939;
t1482 = (-t1601 * t1748 + t1603 * t1743) * t1692;
t1473 = -t1744 * t1845 - t1883;
t1467 = t1573 * t1749 - t1939;
t1461 = -pkin(2) * t1584 - t1881 - t1970;
t1460 = t1512 * t1745 + t1840;
t1459 = -t1510 * t1745 - t1840;
t1458 = -t1512 * t1750 + t1841;
t1457 = t1510 * t1750 - t1841;
t1456 = -pkin(2) * t1944 + t1880 - t1959;
t1455 = t1755 + t1923;
t1454 = -qJ(4) * t1917 + t1470;
t1453 = -pkin(3) * t1917 + t1463;
t1448 = t1554 * t1748 - t1885;
t1447 = -t1555 * t1743 + t1935;
t1444 = -t1528 * t1749 + t1744 * t1530;
t1443 = -t1527 * t1749 - t1744 * t1919;
t1441 = -t1744 * t1527 + t1749 * t1919;
t1439 = (t1944 - t1799) * pkin(3) + t1756;
t1438 = (t1760 + t1584) * qJ(4) + t1755;
t1427 = pkin(2) * t1627 + pkin(8) * t1452;
t1426 = -t1500 * t1746 + t1504 * t1751;
t1425 = -t1499 * t1746 + t1503 * t1751;
t1424 = -t1498 * t1746 + t1502 * t1751;
t1423 = -t1497 * t1746 + t1501 * t1751;
t1422 = t1500 * t1751 + t1504 * t1746;
t1421 = t1499 * t1751 + t1503 * t1746;
t1420 = t1498 * t1751 + t1502 * t1746;
t1419 = t1497 * t1751 + t1501 * t1746;
t1418 = t1491 * t1745 + t1530 * t1750;
t1417 = t1492 * t1745 - t1528 * t1750;
t1416 = -t1491 * t1750 + t1530 * t1745;
t1415 = -t1492 * t1750 - t1528 * t1745;
t1414 = -t1495 * t1746 + t1496 * t1751;
t1413 = t1495 * t1751 + t1496 * t1746;
t1412 = t1472 * t1745 + t1750 * t1919;
t1405 = t1466 * t1745 + t1527 * t1750;
t1398 = -t1561 + t1797;
t1394 = -t1787 + t1983;
t1393 = t1450 * t1748 - t1603 * t1873;
t1392 = t1601 * t1872 + t1743 * t1797;
t1391 = t1441 * t1745 + t1608 * t1750;
t1390 = -t1441 * t1750 + t1608 * t1745;
t1387 = t1482 * t1749 - t1744 * t1793;
t1386 = t1744 * t1482 + t1749 * t1793;
t1385 = t1442 * t1745 + t1553 * t1750;
t1383 = -t1807 - t1969;
t1382 = t1463 * t1750 + t1470 * t1745;
t1380 = -pkin(8) * t1500 - t1451;
t1379 = t1386 * t1745 + t1618 * t1750;
t1378 = -t1386 * t1750 + t1618 * t1745;
t1377 = -t1458 * t1746 + t1460 * t1751;
t1376 = -t1457 * t1746 + t1459 * t1751;
t1375 = t1458 * t1751 + t1460 * t1746;
t1374 = t1457 * t1751 + t1459 * t1746;
t1373 = t1438 * t1750 - t1760 * t1901 - t1971;
t1372 = qJ(4) * t1882 - t1439 * t1745 + t1960;
t1371 = pkin(8) * t1504 + t1452 - t1941;
t1370 = -pkin(1) * t1422 - t1902;
t1369 = -t1757 - t1983;
t1368 = -t1461 * t1746 + t1533 * t1751 + t1982;
t1365 = t1452 * t1751 - t1887;
t1364 = t1452 * t1746 + t1886;
t1363 = t1970 + t1745 * t1438 + (pkin(2) + t1900) * t1760;
t1362 = -t1763 + t1969;
t1361 = t1750 * t1439 + t1836 * t1944 + t1959;
t1360 = -t1456 * t1746 + t1526 * t1751 - t1968;
t1359 = t1448 * t1749 - t1744 * t1812;
t1358 = t1447 * t1749 - t1744 * t1813;
t1357 = t1744 * t1448 + t1749 * t1812;
t1356 = t1744 * t1447 + t1749 * t1813;
t1355 = -pkin(1) * t1584 + t1461 * t1751 + t1533 * t1746 + t1981;
t1354 = -qJ(4) * t1444 + t1897;
t1353 = -t1744 * t1436 + t1437 * t1749;
t1350 = t1456 * t1751 + t1526 * t1746 - t1967;
t1349 = -pkin(1) * t1419 - t1825;
t1348 = -t1416 * t1746 + t1418 * t1751;
t1347 = -t1415 * t1746 + t1417 * t1751;
t1346 = t1416 * t1751 + t1418 * t1746;
t1345 = t1415 * t1751 + t1417 * t1746;
t1340 = -pkin(8) * t1497 - t1453 * t1745 + t1454 * t1750;
t1339 = -t1411 * t1746 + t1412 * t1751;
t1338 = t1411 * t1751 + t1412 * t1746;
t1337 = -t1744 * t1407 + t1408 * t1749;
t1334 = -t1404 * t1746 + t1405 * t1751;
t1333 = t1404 * t1751 + t1405 * t1746;
t1331 = -t1397 * t1748 - t1743 * t1921;
t1326 = pkin(8) * t1501 + t1453 * t1750 + t1454 * t1745 - t1941;
t1325 = t1393 * t1749 - t1744 * t1800;
t1324 = t1392 * t1749 - t1744 * t1801;
t1323 = t1744 * t1393 + t1749 * t1800;
t1322 = t1744 * t1392 + t1749 * t1801;
t1321 = -t1390 * t1746 + t1391 * t1751;
t1320 = t1390 * t1751 + t1391 * t1746;
t1319 = -t1384 * t1746 + t1385 * t1751;
t1318 = t1384 * t1751 + t1385 * t1746;
t1317 = -pkin(1) * t1364 - t1903;
t1316 = -t1381 * t1746 + t1382 * t1751;
t1315 = t1381 * t1751 + t1382 * t1746;
t1312 = t1473 * t1904 + t1816;
t1311 = t1467 * t1904 + t1817;
t1309 = -t1378 * t1746 + t1379 * t1751;
t1308 = t1378 * t1751 + t1379 * t1746;
t1306 = t1323 * t1745 + t1842;
t1305 = t1322 * t1745 - t1842;
t1304 = -t1323 * t1750 + t1843;
t1303 = -t1322 * t1750 - t1843;
t1302 = -pkin(8) * t1381 + (qJ(4) * t1750 - t1901) * t1455;
t1298 = t1356 * t1745 + t1401 * t1750;
t1297 = t1357 * t1745 - t1398 * t1750;
t1296 = -t1356 * t1750 + t1401 * t1745;
t1295 = -t1357 * t1750 - t1398 * t1745;
t1294 = t1352 * t1745 + t1750 * t1921;
t1292 = -qJ(4) * t1473 - t1824;
t1291 = -qJ(4) * t1467 - t1806;
t1290 = t1336 * t1745 + t1397 * t1750;
t1288 = pkin(8) * t1382 + (t1836 + t1900) * t1455;
t1287 = -pkin(7) * t1364 - pkin(8) * t1886 - t1427 * t1746;
t1286 = -t1363 * t1746 + t1373 * t1751 - t1982;
t1284 = pkin(1) * t1627 + pkin(7) * t1365 - pkin(8) * t1887 + t1427 * t1751;
t1283 = -t1361 * t1746 + t1372 * t1751 + t1968;
t1281 = -pkin(7) * t1422 - t1371 * t1746 + t1380 * t1751;
t1280 = pkin(1) * t1760 + t1363 * t1751 + t1373 * t1746 - t1981;
t1279 = pkin(7) * t1426 + t1371 * t1751 + t1380 * t1746 - t1942;
t1278 = t1361 * t1751 + t1372 * t1746 + t1967;
t1274 = -t1744 * t1330 + t1332 * t1749;
t1273 = t1331 * t1749 - t1744 * t1814;
t1271 = t1744 * t1331 + t1749 * t1814;
t1269 = t1271 * t1745 + t1532 * t1750;
t1268 = -t1271 * t1750 + t1532 * t1745;
t1267 = -pkin(1) * t1315 - t1826;
t1266 = t1272 * t1745 + t1468 * t1750;
t1264 = t1276 * t1745 + t1435 * t1750;
t1262 = -pkin(7) * t1419 - t1326 * t1746 + t1340 * t1751;
t1261 = -t1304 * t1746 + t1306 * t1751;
t1260 = -t1303 * t1746 + t1305 * t1751;
t1259 = t1304 * t1751 + t1306 * t1746;
t1258 = t1303 * t1751 + t1305 * t1746;
t1257 = pkin(7) * t1423 + t1326 * t1751 + t1340 * t1746 - t1942;
t1253 = -pkin(1) * t1338 - t1782;
t1252 = -t1296 * t1746 + t1298 * t1751;
t1251 = -t1295 * t1746 + t1297 * t1751;
t1250 = t1296 * t1751 + t1298 * t1746;
t1249 = t1295 * t1751 + t1297 * t1746;
t1248 = -pkin(1) * t1333 - t1774;
t1247 = -t1293 * t1746 + t1294 * t1751;
t1246 = t1293 * t1751 + t1294 * t1746;
t1245 = t1444 * t1904 + t1783;
t1244 = -t1289 * t1746 + t1290 * t1751;
t1243 = t1289 * t1751 + t1290 * t1746;
t1242 = -pkin(8) * t1411 + t1292 * t1750 - t1312 * t1745;
t1241 = -pkin(8) * t1404 + t1291 * t1750 - t1311 * t1745;
t1240 = -pkin(2) * t1473 + pkin(8) * t1412 + t1292 * t1745 + t1312 * t1750;
t1239 = -pkin(2) * t1467 + pkin(8) * t1405 + t1291 * t1745 + t1311 * t1750;
t1238 = -qJ(4) * t1277 + t1899;
t1237 = -pkin(7) * t1315 - t1288 * t1746 + t1302 * t1751;
t1236 = t1277 * t1904 + t1898;
t1235 = -pkin(8) * t1384 - t1245 * t1745 + t1354 * t1750;
t1234 = pkin(1) * t1455 + pkin(7) * t1316 + t1288 * t1751 + t1302 * t1746;
t1233 = -t1268 * t1746 + t1269 * t1751;
t1232 = t1268 * t1751 + t1269 * t1746;
t1231 = -pkin(1) * t1318 - t1769;
t1230 = -t1265 * t1746 + t1266 * t1751;
t1229 = t1265 * t1751 + t1266 * t1746;
t1228 = -t1263 * t1746 + t1264 * t1751;
t1227 = t1263 * t1751 + t1264 * t1746;
t1226 = -pkin(2) * t1444 + pkin(8) * t1385 + t1245 * t1750 + t1354 * t1745;
t1225 = -qJ(4) * t1353 - t1775;
t1224 = -qJ(4) * t1337 - t1790;
t1223 = t1353 * t1904 + t1784;
t1222 = -qJ(4) * t1274 - t1834;
t1217 = t1337 * t1904 + t1785;
t1212 = -pkin(7) * t1338 - t1240 * t1746 + t1242 * t1751;
t1211 = -pkin(7) * t1333 - t1239 * t1746 + t1241 * t1751;
t1210 = -pkin(1) * t1473 + pkin(7) * t1339 + t1240 * t1751 + t1242 * t1746;
t1209 = -pkin(1) * t1467 + pkin(7) * t1334 + t1239 * t1751 + t1241 * t1746;
t1208 = -pkin(1) * t1246 - t1770;
t1207 = -pkin(1) * t1243 - t1771;
t1206 = -pkin(7) * t1318 - t1226 * t1746 + t1235 * t1751;
t1205 = t1221 * t1749 - t1857;
t1202 = -pkin(8) * t1263 - t1236 * t1745 + t1238 * t1750;
t1201 = -pkin(1) * t1444 + pkin(7) * t1319 + t1226 * t1751 + t1235 * t1746;
t1200 = t1204 * t1745 + t1367 * t1750;
t1198 = -pkin(8) * t1293 - t1223 * t1745 + t1225 * t1750;
t1197 = -pkin(1) * t1227 - t1794;
t1196 = -pkin(8) * t1289 - t1217 * t1745 + t1224 * t1750;
t1195 = -pkin(2) * t1353 + pkin(8) * t1294 + t1223 * t1750 + t1225 * t1745;
t1194 = -pkin(2) * t1277 + pkin(8) * t1264 + t1236 * t1750 + t1238 * t1745;
t1193 = -pkin(2) * t1337 + pkin(8) * t1290 + t1217 * t1750 + t1224 * t1745;
t1192 = t1274 * t1904 + t1786;
t1191 = -t1199 * t1746 + t1200 * t1751;
t1190 = t1199 * t1751 + t1200 * t1746;
t1189 = -pkin(1) * t1229 - t1772;
t1188 = -pkin(8) * t1265 - t1192 * t1745 + t1222 * t1750;
t1187 = -qJ(4) * t1205 - t1835;
t1186 = -pkin(7) * t1246 - t1195 * t1746 + t1198 * t1751;
t1185 = -pkin(2) * t1274 + pkin(8) * t1266 + t1192 * t1750 + t1222 * t1745;
t1184 = -pkin(1) * t1353 + pkin(7) * t1247 + t1195 * t1751 + t1198 * t1746;
t1183 = -pkin(7) * t1227 - t1194 * t1746 + t1202 * t1751;
t1182 = -pkin(7) * t1243 - t1193 * t1746 + t1196 * t1751;
t1181 = -pkin(1) * t1337 + pkin(7) * t1244 + t1193 * t1751 + t1196 * t1746;
t1180 = -pkin(1) * t1277 + pkin(7) * t1228 + t1194 * t1751 + t1202 * t1746;
t1179 = t1205 * t1904 + t1777;
t1178 = -pkin(7) * t1229 - t1185 * t1746 + t1188 * t1751;
t1177 = -pkin(1) * t1274 + pkin(7) * t1230 + t1185 * t1751 + t1188 * t1746;
t1176 = -pkin(1) * t1190 - t1764;
t1175 = -pkin(8) * t1199 - t1179 * t1745 + t1187 * t1750;
t1174 = -pkin(2) * t1205 + pkin(8) * t1200 + t1179 * t1750 + t1187 * t1745;
t1173 = -pkin(7) * t1190 - t1174 * t1746 + t1175 * t1751;
t1172 = -pkin(1) * t1205 + pkin(7) * t1191 + t1174 * t1751 + t1175 * t1746;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1717, 0, -t1716, 0, t1822, -t1697, -t1811, -pkin(6) * t1811, t1679 * t1752 - t1828, t1654 * t1752 + t1719 * t1747, t1671 * t1752 + t1747 * t1847, t1678 * t1752 + t1828, t1669 * t1752 + t1747 * t1846, qJDD(2) * t1747 + t1709 * t1752, t1752 * t1629 - t1747 * t1621 - pkin(6) * (t1670 * t1747 + t1714 * t1752), t1752 * t1630 - t1747 * t1622 - pkin(6) * (t1672 * t1747 - t1712 * t1752), t1752 * t1610 - pkin(6) * (t1715 * t1747 + t1718 * t1752), -pkin(6) * (t1611 * t1747 + t1705 * t1752) - (pkin(1) * t1747 - pkin(7) * t1752) * t1610, t1926, t1424 * t1752 + t1937, t1585 * t1747 + t1977, t1925, -t1975, t1924, t1752 * t1360 - t1747 * t1383 + t1972, t1752 * t1368 - t1747 * t1394 - pkin(6) * (-t1584 * t1752 + t1980), t1752 * t1281 - t1747 * t1370 - pkin(6) * (t1426 * t1747 - t1931), t1752 * t1287 - t1747 * t1317 - pkin(6) * (t1365 * t1747 + t1627 * t1752), t1924, -t1580 * t1747 - t1977, t1975, t1926, t1425 * t1752 + t1937, t1925, t1752 * t1262 - t1747 * t1349 - pkin(6) * (t1423 * t1747 - t1931), t1752 * t1283 - t1747 * t1362 - t1972, t1752 * t1286 - t1747 * t1369 - pkin(6) * (t1752 * t1760 - t1980), t1752 * t1237 - t1747 * t1267 - pkin(6) * (t1316 * t1747 + t1455 * t1752), t1377 * t1752 + t1513 * t1747, t1321 * t1752 + t1443 * t1747, t1348 * t1752 + t1493 * t1747, t1376 * t1752 - t1511 * t1747, t1347 * t1752 + t1494 * t1747, t1414 * t1752 + t1548 * t1747, t1752 * t1211 - t1747 * t1248 - pkin(6) * (t1334 * t1747 - t1467 * t1752), t1752 * t1212 - t1747 * t1253 - pkin(6) * (t1339 * t1747 - t1473 * t1752), t1752 * t1206 - t1747 * t1231 - pkin(6) * (t1319 * t1747 - t1444 * t1752), t1752 * t1183 - t1747 * t1197 - pkin(6) * (t1228 * t1747 - t1277 * t1752), t1261 * t1752 + t1325 * t1747, t1233 * t1752 + t1273 * t1747, t1252 * t1752 + t1358 * t1747, t1260 * t1752 + t1324 * t1747, t1251 * t1752 + t1359 * t1747, t1309 * t1752 + t1387 * t1747, t1752 * t1182 - t1747 * t1207 - pkin(6) * (t1244 * t1747 - t1337 * t1752), t1752 * t1186 - t1747 * t1208 - pkin(6) * (t1247 * t1747 - t1353 * t1752), t1752 * t1178 - t1747 * t1189 - pkin(6) * (t1230 * t1747 - t1274 * t1752), t1752 * t1173 - t1747 * t1176 - pkin(6) * (t1191 * t1747 - t1205 * t1752); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1716, 0, t1717, 0, t1697, t1822, t1829, pkin(6) * t1829, t1679 * t1747 + t1827, t1654 * t1747 - t1719 * t1752, t1671 * t1747 - t1752 * t1847, t1678 * t1747 - t1827, t1669 * t1747 - t1752 * t1846, -qJDD(2) * t1752 + t1709 * t1747, t1747 * t1629 + t1752 * t1621 + pkin(6) * (t1670 * t1752 - t1714 * t1747), t1747 * t1630 + t1752 * t1622 + pkin(6) * (t1672 * t1752 + t1712 * t1747), t1747 * t1610 + pkin(6) * (t1715 * t1752 - t1718 * t1747), pkin(6) * (t1611 * t1752 - t1705 * t1747) - (-pkin(1) * t1752 - pkin(7) * t1747) * t1610, t1928, t1424 * t1747 - t1932, -t1585 * t1752 + t1978, t1927, -t1976, t1929, t1747 * t1360 + t1752 * t1383 - t1973, t1747 * t1368 + t1752 * t1394 + pkin(6) * (t1584 * t1747 + t1979), t1747 * t1281 + t1752 * t1370 + pkin(6) * (t1426 * t1752 + t1936), t1747 * t1287 + t1752 * t1317 + pkin(6) * (t1365 * t1752 - t1627 * t1747), t1929, t1580 * t1752 - t1978, t1976, t1928, t1425 * t1747 - t1932, t1927, t1747 * t1262 + t1752 * t1349 + pkin(6) * (t1423 * t1752 + t1936), t1747 * t1283 + t1752 * t1362 + t1973, t1747 * t1286 + t1752 * t1369 + pkin(6) * (-t1747 * t1760 - t1979), t1747 * t1237 + t1752 * t1267 + pkin(6) * (t1316 * t1752 - t1455 * t1747), t1377 * t1747 - t1513 * t1752, t1321 * t1747 - t1443 * t1752, t1348 * t1747 - t1493 * t1752, t1376 * t1747 + t1511 * t1752, t1347 * t1747 - t1494 * t1752, t1414 * t1747 - t1548 * t1752, t1747 * t1211 + t1752 * t1248 + pkin(6) * (t1334 * t1752 + t1467 * t1747), t1747 * t1212 + t1752 * t1253 + pkin(6) * (t1339 * t1752 + t1473 * t1747), t1747 * t1206 + t1752 * t1231 + pkin(6) * (t1319 * t1752 + t1444 * t1747), t1747 * t1183 + t1752 * t1197 + pkin(6) * (t1228 * t1752 + t1277 * t1747), t1261 * t1747 - t1325 * t1752, t1233 * t1747 - t1273 * t1752, t1252 * t1747 - t1358 * t1752, t1260 * t1747 - t1324 * t1752, t1251 * t1747 - t1359 * t1752, t1309 * t1747 - t1387 * t1752, t1747 * t1182 + t1752 * t1207 + pkin(6) * (t1244 * t1752 + t1337 * t1747), t1747 * t1186 + t1752 * t1208 + pkin(6) * (t1247 * t1752 + t1353 * t1747), t1747 * t1178 + t1752 * t1189 + pkin(6) * (t1230 * t1752 + t1274 * t1747), t1747 * t1173 + t1752 * t1176 + pkin(6) * (t1191 * t1752 + t1205 * t1747); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1722, t1723, 0, 0, t1664, t1653, t1667, t1663, t1665, 0, t1605, t1604, t1563, t1572, t1909, t1420, -t1516, t1913, t1518, t1912, t1350, t1355, t1279, t1284, t1912, t1516, -t1518, t1909, t1421, t1913, t1257, t1278, t1280, t1234, t1375, t1320, t1346, t1374, t1345, t1413, t1209, t1210, t1201, t1180, t1259, t1232, t1250, t1258, t1249, t1308, t1181, t1184, t1177, t1172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1754, 0, 0, -g(3), -t1722, 0, t1679, t1654, t1671, t1678, t1669, t1709, t1629, t1630, t1610, pkin(7) * t1610, t1910, t1424, t1521, t1914, -t1523, t1911, t1360, t1368, t1281, t1287, t1911, -t1521, t1523, t1910, t1425, t1914, t1262, t1283, t1286, t1237, t1377, t1321, t1348, t1376, t1347, t1414, t1211, t1212, t1206, t1183, t1261, t1233, t1252, t1260, t1251, t1309, t1182, t1186, t1178, t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1754, 0, qJDD(1), 0, g(3), 0, -t1723, 0, t1729, -t1719, -t1847, -t1729, -t1846, -qJDD(2), t1621, t1622, 0, pkin(1) * t1610, -t1868, -t1915, -t1585, t1868, t1945, -t1739, t1383, t1394, t1370, t1317, -t1739, t1580, -t1945, -t1868, -t1915, t1868, t1349, t1362, t1369, t1267, -t1513, -t1443, -t1493, t1511, -t1494, -t1548, t1248, t1253, t1231, t1197, -t1325, -t1273, -t1358, -t1324, -t1359, -t1387, t1207, t1208, t1189, t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1722, t1723, 0, 0, t1664, t1653, t1667, t1663, t1665, 0, t1605, t1604, t1563, t1572, t1909, t1420, -t1516, t1913, t1518, t1912, t1350, t1355, t1279, t1284, t1912, t1516, -t1518, t1909, t1421, t1913, t1257, t1278, t1280, t1234, t1375, t1320, t1346, t1374, t1345, t1413, t1209, t1210, t1201, t1180, t1259, t1232, t1250, t1258, t1249, t1308, t1181, t1184, t1177, t1172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1713, t1714, t1720, -t1733, t1726, t1733, 0, -t1705, t1675, 0, t1819, t1502, -t1595, t1765, -t1598, t1792, t1526, t1533, t1380, -pkin(8) * t1451, t1792, t1595, t1598, t1819, t1503, t1765, t1340, t1372, t1373, t1302, t1460, t1391, t1418, t1459, t1417, t1496, t1241, t1242, t1235, t1202, t1306, t1269, t1298, t1305, t1297, t1379, t1196, t1198, t1188, t1175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1837, t1712, t1724, -t1795, t1721, -t1837, t1705, 0, t1676, 0, t1821, t1498, -t1591, t1820, t1593, t1791, t1456, t1461, t1371, t1427, t1791, t1591, -t1593, t1821, t1499, t1820, t1326, t1361, t1363, t1288, t1458, t1390, t1416, t1457, t1415, t1495, t1239, t1240, t1226, t1194, t1304, t1268, t1296, t1303, t1295, t1378, t1193, t1195, t1185, t1174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1729, t1719, t1847, t1729, t1846, qJDD(2), -t1675, -t1676, 0, 0, t1868, t1915, t1585, -t1868, -t1945, t1739, t1807, t1787, t1902, t1903, t1739, -t1580, t1945, t1868, t1915, -t1868, t1825, t1763, t1757, t1826, t1513, t1443, t1493, -t1511, t1494, t1548, t1774, t1782, t1769, t1794, t1325, t1273, t1358, t1324, t1359, t1387, t1771, t1770, t1772, t1764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1624, -t1944, -t1642, t1686, -t1682, -t1686, 0, -t1627, t1536, 0, -t1686, t1642, t1682, t1624, -t1944, t1686, t1454, qJ(4) * t1944, t1438, qJ(4) * t1455, t1613, t1608, t1530, -t1613, -t1528, t1619, t1291, t1292, t1354, t1238, t1534, t1532, t1401, -t1534, -t1398, t1618, t1224, t1225, t1222, t1187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1861, t1584, t1916, t1799, t1943, -t1861, t1627, 0, t1537, 0, -t1861, -t1916, -t1943, t1861, t1760, t1799, t1453, t1439, pkin(3) * t1760, pkin(3) * t1455, -t1512, -t1441, -t1491, t1510, -t1492, -t1547, t1311, t1312, t1245, t1236, -t1323, -t1271, -t1356, -t1322, -t1357, -t1386, t1217, t1223, t1192, t1179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1868, t1915, t1585, -t1868, -t1945, t1739, -t1536, -t1537, 0, 0, t1739, -t1580, t1945, t1868, t1915, -t1868, t1850, t1766, t1759, t1851, t1513, t1443, t1493, -t1511, t1494, t1548, t1789, t1809, t1778, t1823, t1325, t1273, t1358, t1324, t1359, t1387, t1780, t1779, t1781, t1773; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1739, -t1580, t1945, t1868, t1915, -t1868, 0, t1470, t1463, 0, t1513, t1443, t1493, -t1511, t1494, t1548, t1815, t1833, t1802, -t1896, t1325, t1273, t1358, t1324, t1359, t1387, t1804, t1803, t1805, t1776; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1686, -t1642, -t1682, -t1624, t1944, -t1686, -t1470, 0, -t1455, 0, -t1613, -t1608, -t1530, t1613, t1528, -t1619, t1806, t1824, -t1897, -t1899, -t1534, -t1532, -t1401, t1534, t1398, -t1618, t1790, t1775, t1834, t1835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1861, t1916, t1943, -t1861, -t1760, -t1799, -t1463, t1455, 0, 0, t1512, t1441, t1491, -t1510, t1492, t1547, pkin(9) * t1467 - t1817, pkin(9) * t1473 - t1816, pkin(9) * t1444 - t1783, pkin(9) * t1277 - t1898, t1323, t1271, t1356, t1322, t1357, t1386, pkin(9) * t1337 - t1785, pkin(9) * t1353 - t1784, pkin(9) * t1274 - t1786, pkin(9) * t1205 - t1777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1551, -t1527, t1920, t1636, t1635, -t1636, 0, t1435, t1343, 0, t1393, t1331, t1447, t1392, t1448, t1482, t1307, t1314, t1215, -pkin(10) * t1220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1871, t1919, t1849, -t1798, t1541, -t1871, -t1435, 0, t1344, 0, t1800, t1814, t1813, t1801, t1812, t1793, t1282, t1285, t1213, t1216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1613, t1608, t1530, -t1613, -t1528, t1619, -t1343, -t1344, 0, 0, t1534, t1532, t1401, -t1534, -t1398, t1618, t1818, t1796, t1329, t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1450, -t1397, t1922, t1560, t1554, -t1560, 0, t1367, t1255, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1561, t1921, t1555, -t1797, t1475, -t1561, -t1367, 0, t1256, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1534, t1532, t1401, -t1534, -t1398, t1618, -t1255, -t1256, 0, 0;];
m_new_reg  = t1;
