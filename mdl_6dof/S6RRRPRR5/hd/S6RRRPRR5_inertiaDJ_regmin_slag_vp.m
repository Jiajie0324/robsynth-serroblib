% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR5_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:23:10
% EndTime: 2019-03-09 18:23:16
% DurationCPUTime: 1.92s
% Computational Cost: add. (2742->239), mult. (6146->382), div. (0->0), fcn. (5795->8), ass. (0->169)
t124 = sin(qJ(6));
t125 = sin(qJ(5));
t128 = cos(qJ(6));
t129 = cos(qJ(5));
t179 = t128 * t129;
t209 = t124 * t125 - t179;
t122 = t125 ^ 2;
t177 = -t129 ^ 2 + t122;
t154 = t177 * qJD(5);
t208 = qJD(2) + qJD(3);
t207 = qJD(5) + qJD(6);
t130 = cos(qJ(2));
t200 = cos(qJ(3));
t158 = t200 * t130;
t126 = sin(qJ(3));
t127 = sin(qJ(2));
t181 = t126 * t127;
t85 = -t158 + t181;
t206 = t207 * t85;
t132 = 2 * qJD(4);
t205 = pkin(3) + pkin(9);
t204 = -pkin(8) - pkin(7);
t203 = pkin(10) * t85;
t151 = qJD(2) * t158;
t155 = t200 * qJD(3);
t62 = -t130 * t155 + t181 * t208 - t151;
t202 = t62 * pkin(5);
t180 = t126 * t130;
t87 = t127 * t200 + t180;
t201 = t87 * pkin(5);
t199 = pkin(5) * t128;
t175 = qJD(5) * t125;
t165 = t85 * t175;
t63 = t208 * t87;
t184 = t129 * t63;
t139 = t165 - t184;
t171 = t127 * qJD(2);
t118 = pkin(2) * t171;
t138 = t62 * qJ(4) - t87 * qJD(4) + t118;
t17 = t205 * t63 + t138;
t174 = qJD(5) * t129;
t98 = t204 * t127;
t99 = t204 * t130;
t69 = -t126 * t98 + t200 * t99;
t159 = qJD(2) * t204;
t91 = t127 * t159;
t38 = -qJD(3) * t69 + t126 * t91 - t151 * t204;
t26 = -t62 * pkin(4) + t38;
t114 = -t130 * pkin(2) - pkin(1);
t140 = -t87 * qJ(4) + t114;
t43 = t205 * t85 + t140;
t68 = -t126 * t99 - t200 * t98;
t52 = pkin(4) * t87 + t68;
t7 = -t125 * t26 - t129 * t17 - t174 * t52 + t175 * t43;
t6 = -pkin(10) * t139 - t7;
t198 = t128 * t6;
t113 = -pkin(2) * t200 - pkin(3);
t108 = -pkin(9) + t113;
t197 = -pkin(10) + t108;
t196 = -pkin(10) - t205;
t176 = qJD(3) * t126;
t37 = -t155 * t98 - t159 * t180 - t176 * t99 - t200 * t91;
t25 = -t63 * pkin(4) - t37;
t14 = pkin(5) * t139 + t25;
t39 = (-pkin(5) * t129 - pkin(4)) * t85 - t69;
t172 = qJD(6) * t124;
t61 = -t124 * t175 - t125 * t172 + t179 * t207;
t84 = t124 * t129 + t125 * t128;
t195 = t14 * t84 + t39 * t61;
t60 = t207 * t84;
t194 = -t14 * t209 - t39 * t60;
t53 = -pkin(4) * t85 - t69;
t44 = t53 * t174;
t193 = t125 * t25 + t44;
t48 = t125 * t52;
t192 = t129 * t43 + t48;
t152 = pkin(2) * t155;
t102 = t152 + qJD(4);
t116 = pkin(5) * t174;
t81 = t116 + t102;
t109 = pkin(2) * t126 + qJ(4);
t121 = t125 * pkin(5);
t97 = t109 + t121;
t191 = t61 * t97 + t81 * t84;
t190 = -t209 * t81 - t60 * t97;
t103 = qJD(4) + t116;
t110 = qJ(4) + t121;
t189 = t103 * t84 + t110 * t61;
t188 = -t103 * t209 - t110 * t60;
t187 = t102 * t125 + t109 * t174;
t18 = t129 * t203 + t192;
t186 = t124 * t18;
t185 = t128 * t18;
t183 = qJD(5) * t53;
t178 = qJ(4) * t174 + qJD(4) * t125;
t173 = qJD(5) * t205;
t170 = t130 * qJD(2);
t169 = -0.2e1 * pkin(1) * qJD(2);
t117 = pkin(2) * t176;
t168 = pkin(5) * t172;
t167 = qJD(6) * t199;
t166 = t125 * t184;
t164 = t87 * t175;
t163 = t87 * t174;
t161 = -t43 - t203;
t49 = t129 * t52;
t15 = t125 * t161 + t201 + t49;
t162 = -t15 - t201;
t22 = t129 * t26;
t5 = -t202 + t22 + (-pkin(10) * t63 - t17) * t125 + (t129 * t161 - t48) * qJD(5);
t160 = -t124 * t6 + t128 * t5;
t157 = t125 * t173;
t156 = t125 * t174;
t77 = t197 * t129;
t96 = t196 * t129;
t153 = t125 * t117;
t150 = t25 * t85 + t53 * t63;
t30 = -t61 * t87 + t62 * t84;
t149 = t62 * t85 - t63 * t87;
t148 = -t108 * t175 + t117 * t129;
t147 = -t128 * t15 + t186;
t146 = t124 * t15 + t185;
t76 = t197 * t125;
t145 = t124 * t77 + t128 * t76;
t144 = t124 * t76 - t128 * t77;
t95 = t196 * t125;
t143 = t124 * t96 + t128 * t95;
t142 = t124 * t95 - t128 * t96;
t141 = -qJ(4) * t63 - qJD(4) * t85;
t42 = t125 * t62 - t163;
t137 = qJD(5) * (qJ(4) * t85 + t205 * t87);
t136 = qJD(5) * (-t108 * t87 + t109 * t85);
t135 = t205 * t62 + t141;
t134 = -t102 * t85 - t109 * t63 + t117 * t87;
t133 = -t108 * t62 + t134;
t120 = qJD(4) * t129;
t115 = pkin(10) * t175;
t101 = -0.2e1 * t156;
t93 = t102 * t129;
t83 = 0.2e1 * t154;
t82 = t85 ^ 2;
t80 = qJD(5) * t96;
t79 = t115 + t157;
t67 = qJD(5) * t77 + t153;
t66 = t115 + t148;
t59 = pkin(3) * t85 + t140;
t55 = t84 * t85;
t54 = t209 * t85;
t47 = -0.2e1 * t87 * t62;
t46 = 0.2e1 * t209 * t60;
t41 = -t129 * t62 - t164;
t36 = -qJD(6) * t143 - t124 * t80 + t128 * t79;
t35 = qJD(6) * t142 - t124 * t79 - t128 * t80;
t34 = -t154 * t85 + t166;
t33 = pkin(3) * t63 + t138;
t29 = t209 * t62 - t60 * t87;
t28 = -0.4e1 * t156 * t85 - t177 * t63;
t27 = 0.2e1 * t209 * t61 + 0.2e1 * t60 * t84;
t24 = t25 * t129;
t20 = -qJD(6) * t145 - t124 * t67 + t128 * t66;
t19 = qJD(6) * t144 - t124 * t66 - t128 * t67;
t13 = t206 * t84 + t209 * t63;
t12 = -t206 * t209 + t84 * t63;
t9 = -t12 * t209 - t55 * t60;
t8 = -qJD(5) * t192 - t125 * t17 + t22;
t3 = -t12 * t84 + t13 * t209 + t54 * t60 - t55 * t61;
t2 = -qJD(6) * t146 + t160;
t1 = qJD(6) * t147 - t124 * t5 - t198;
t4 = [0, 0, 0, 0.2e1 * t127 * t170, 0.2e1 * (-t127 ^ 2 + t130 ^ 2) * qJD(2), 0, 0, 0, t127 * t169, t130 * t169, t47, 0.2e1 * t149, 0, 0, 0, 0.2e1 * t114 * t63 + 0.2e1 * t118 * t85, -0.2e1 * t114 * t62 + 0.2e1 * t118 * t87, 0.2e1 * t37 * t85 + 0.2e1 * t38 * t87 - 0.2e1 * t62 * t68 + 0.2e1 * t63 * t69, -0.2e1 * t33 * t85 - 0.2e1 * t59 * t63, -0.2e1 * t33 * t87 + 0.2e1 * t59 * t62, 0.2e1 * t33 * t59 + 0.2e1 * t37 * t69 + 0.2e1 * t38 * t68, 0.2e1 * t122 * t63 * t85 + 0.2e1 * t156 * t82, -0.2e1 * t154 * t82 + 0.4e1 * t166 * t85, -0.2e1 * t125 * t149 + 0.2e1 * t163 * t85, -0.2e1 * t129 * t149 - 0.2e1 * t164 * t85, t47, 0.2e1 * t8 * t87 - 0.2e1 * (-t125 * t43 + t49) * t62 + 0.2e1 * t53 * t165 - 0.2e1 * t150 * t129, 0.2e1 * t125 * t150 + 0.2e1 * t192 * t62 + 0.2e1 * t44 * t85 + 0.2e1 * t7 * t87, 0.2e1 * t55 * t12, -0.2e1 * t12 * t54 - 0.2e1 * t13 * t55, 0.2e1 * t12 * t87 - 0.2e1 * t55 * t62, -0.2e1 * t13 * t87 + 0.2e1 * t54 * t62, t47, 0.2e1 * t13 * t39 + 0.2e1 * t14 * t54 + 0.2e1 * t147 * t62 + 0.2e1 * t2 * t87, 0.2e1 * t1 * t87 + 0.2e1 * t12 * t39 + 0.2e1 * t14 * t55 + 0.2e1 * t146 * t62; 0, 0, 0, 0, 0, t170, -t171, 0, -pkin(7) * t170, pkin(7) * t171, 0, 0, -t62, -t63, 0, -t38, t37, -t113 * t62 + t134, t38, -t37, -t102 * t69 - t109 * t37 + t113 * t38 + t117 * t68, t34, t28, t41, t42, 0, t125 * t136 + t129 * t133 + t193, t24 + t129 * t136 + (-t133 - t183) * t125, t9, t3, t29, t30, 0, t13 * t97 + t144 * t62 + t20 * t87 + t54 * t81 + t195, t12 * t97 + t145 * t62 + t19 * t87 + t55 * t81 + t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t117, -0.2e1 * t152, 0, 0.2e1 * t117, 0.2e1 * t102, 0.2e1 * t102 * t109 + 0.2e1 * t113 * t117, t101, t83, 0, 0, 0, 0.2e1 * t187, -0.2e1 * t109 * t175 + 0.2e1 * t93, t46, t27, 0, 0, 0, 0.2e1 * t191, 0.2e1 * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t63, 0, -t38, t37, pkin(3) * t62 + t141, t38, -t37, -pkin(3) * t38 - qJ(4) * t37 - qJD(4) * t69, t34, t28, t41, t42, 0, t125 * t137 + t129 * t135 + t193, t24 + t129 * t137 + (-t135 - t183) * t125, t9, t3, t29, t30, 0, t103 * t54 + t110 * t13 + t142 * t62 + t36 * t87 + t195, t103 * t55 + t110 * t12 + t143 * t62 + t35 * t87 + t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t117, -t152, 0, t117, t132 + t152, -pkin(3) * t117 + qJ(4) * t102 + qJD(4) * t109, t101, t83, 0, 0, 0, t178 + t187, t120 + t93 + (-qJ(4) - t109) * t175, t46, t27, 0, 0, 0, t189 + t191, t188 + t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, qJ(4) * t132, t101, t83, 0, 0, 0, 0.2e1 * t178, -0.2e1 * qJ(4) * t175 + 0.2e1 * t120, t46, t27, 0, 0, 0, 0.2e1 * t189, 0.2e1 * t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, 0, 0, t38, 0, 0, 0, 0, 0, t41, t42, 0, 0, 0, 0, 0, t29, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125 * t63 + t174 * t85, -t139, -t62, t8, t7, 0, 0, t12, -t13, -t62, -t62 * t199 + (t124 * t162 - t185) * qJD(6) + t160, -t198 + (-t5 + t202) * t124 + (t128 * t162 + t186) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t174, 0, t148, -t108 * t174 - t153, 0, 0, -t60, -t61, 0, t20, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t174, 0, t157, t129 * t173, 0, 0, -t60, -t61, 0, t36, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t174, 0, 0, 0, 0, 0, -t60, -t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t168, -0.2e1 * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, -t13, -t62, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t61, 0, t20, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t61, 0, t36, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t168, -t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
