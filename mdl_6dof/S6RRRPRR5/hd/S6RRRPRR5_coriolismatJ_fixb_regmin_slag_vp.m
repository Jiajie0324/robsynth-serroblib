% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:24
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:23:13
% EndTime: 2019-03-09 18:23:41
% DurationCPUTime: 14.94s
% Computational Cost: add. (11739->684), mult. (23421->809), div. (0->0), fcn. (26425->8), ass. (0->530)
t489 = cos(qJ(2));
t773 = cos(qJ(3));
t468 = t773 * t489;
t486 = sin(qJ(3));
t487 = sin(qJ(2));
t694 = t486 * t487;
t433 = -t468 + t694;
t488 = cos(qJ(5));
t772 = cos(qJ(6));
t615 = t772 * t488;
t378 = t433 * t615;
t484 = sin(qJ(6));
t485 = sin(qJ(5));
t698 = t484 * t485;
t266 = t433 * t698 - t378;
t848 = -t266 / 0.2e1;
t435 = t486 * t489 + t487 * t773;
t779 = -t435 / 0.2e1;
t847 = t435 / 0.2e1;
t766 = t486 * pkin(2);
t463 = qJ(4) + t766;
t478 = t485 * pkin(5);
t446 = t463 + t478;
t846 = t446 / 0.2e1;
t464 = qJ(4) + t478;
t845 = t464 / 0.2e1;
t427 = t433 ^ 2;
t482 = t485 ^ 2;
t483 = t488 ^ 2;
t458 = t482 - t483;
t294 = t458 * t427;
t480 = qJD(2) + qJD(3);
t812 = t480 * t488;
t834 = t485 * t812;
t527 = 0.2e1 * t834 * t433;
t844 = t294 * qJD(1) + t527;
t477 = t485 * pkin(10);
t789 = pkin(3) + pkin(9);
t444 = -t485 * t789 - t477;
t445 = (-pkin(10) - t789) * t488;
t541 = -t444 * t484 + t445 * t772;
t843 = t464 * t848 + t541 * t779;
t287 = (t483 / 0.2e1 - t482 / 0.2e1) * t433;
t202 = -t287 * qJD(1) + t834;
t633 = qJD(5) + qJD(6);
t717 = t435 * t488;
t398 = pkin(10) * t717;
t721 = t433 * qJ(4);
t304 = pkin(3) * t435 + t721;
t421 = t435 * pkin(9);
t233 = t304 + t421;
t212 = t488 * t233;
t788 = -pkin(8) - pkin(7);
t450 = t788 * t487;
t451 = t788 * t489;
t542 = t450 * t486 - t451 * t773;
t511 = -pkin(4) * t433 + t542;
t811 = t485 * t511;
t685 = t212 + t811;
t108 = t398 + t685;
t617 = t772 * t108;
t568 = -t617 / 0.2e1;
t770 = pkin(10) * t435;
t420 = t433 * pkin(5);
t810 = t488 * t511;
t828 = t810 - t420;
t93 = (-t233 - t770) * t485 + t828;
t758 = t484 * t93;
t529 = -t758 / 0.2e1 + t568;
t842 = t529 - t843;
t288 = t488 * t433;
t376 = t484 * t288;
t616 = t772 * t485;
t377 = t433 * t616;
t269 = -t376 - t377;
t312 = t444 * t772 + t445 * t484;
t841 = t269 * t845 + t312 * t847;
t629 = t773 * pkin(2);
t469 = -t629 - pkin(3);
t462 = -pkin(9) + t469;
t411 = t485 * t462 - t477;
t412 = (-pkin(10) + t462) * t488;
t274 = t411 * t772 + t412 * t484;
t840 = t269 * t846 + t274 * t847;
t583 = t411 * t484 - t412 * t772;
t827 = t446 * t848 + t583 * t847;
t470 = -t489 * pkin(2) - pkin(1);
t718 = t435 * qJ(4);
t549 = t470 - t718;
t836 = t433 * t789;
t208 = t549 + t836;
t582 = -t450 * t773 - t486 * t451;
t548 = pkin(4) * t435 + t582;
t835 = t485 * t548;
t127 = t488 * t208 + t835;
t839 = (t127 - t835) * t433;
t833 = t488 * t548;
t126 = t208 * t485 - t833;
t838 = (t126 + t833) * t433 - t511 * t717;
t786 = t810 / 0.2e1;
t837 = -t811 / 0.2e1;
t831 = t582 * t463;
t665 = qJD(1) * t435;
t320 = t433 * t665;
t422 = t694 / 0.2e1 - t468 / 0.2e1;
t232 = qJD(5) * t422 + t320;
t625 = -t766 / 0.2e1;
t778 = t463 / 0.2e1;
t566 = t625 + t778;
t787 = -qJ(4) / 0.2e1;
t523 = (t787 + t566) * t435;
t573 = t629 / 0.2e1;
t774 = t789 / 0.2e1;
t830 = t523 + t433 * (t462 / 0.2e1 + t573 + t774);
t588 = t376 / 0.2e1 + t377 / 0.2e1;
t697 = t484 * t488;
t431 = t616 + t697;
t722 = t431 * t433;
t165 = -t722 / 0.2e1 + t588;
t540 = t615 - t698;
t580 = t480 * t540;
t121 = -t165 * qJD(1) - t580;
t416 = t431 * qJD(6);
t525 = t616 / 0.2e1 + t697 / 0.2e1;
t780 = t431 / 0.2e1;
t498 = (t780 + t525) * t435;
t798 = t498 * qJD(1);
t829 = -qJD(5) * t431 - t416 - t798;
t592 = t698 / 0.2e1;
t782 = t540 / 0.2e1;
t784 = -t378 / 0.2e1;
t161 = t784 + (t592 + t782) * t433;
t815 = t480 * t431;
t118 = t161 * qJD(1) + t815;
t771 = pkin(5) * t488;
t621 = -pkin(4) - t771;
t184 = t433 * t621 + t542;
t742 = t184 * t540;
t146 = t742 / 0.2e1;
t623 = t772 * t93;
t699 = t484 * t108;
t531 = -t699 / 0.2e1 + t623 / 0.2e1;
t32 = t146 + t531 - t841;
t479 = t487 * pkin(2);
t291 = t304 + t479;
t211 = t291 + t421;
t91 = (-t211 - t770) * t485 + t828;
t624 = t772 * t91;
t203 = t488 * t211;
t686 = t203 + t811;
t107 = t398 + t686;
t700 = t484 * t107;
t532 = -t700 / 0.2e1 + t624 / 0.2e1;
t24 = t146 + t532 - t840;
t826 = t532 + t840;
t825 = t531 + t841;
t618 = t772 * t107;
t569 = -t618 / 0.2e1;
t759 = t484 * t91;
t530 = -t759 / 0.2e1 + t569;
t824 = t530 - t827;
t781 = -t540 / 0.2e1;
t114 = t266 * t781 + t269 * t780;
t74 = -t114 * qJD(1) + t540 * t815;
t823 = t480 * t582;
t822 = t633 * t274;
t821 = t633 * t312;
t820 = t633 * t541;
t818 = t542 * pkin(3);
t816 = t435 * t633;
t814 = t480 * t433;
t303 = t480 * t435;
t813 = t480 * t485;
t497 = t431 * t779 + t435 * t525;
t809 = t497 * t633;
t808 = t498 * t633;
t510 = t435 * t621 - t582;
t807 = t510 * t540;
t806 = t510 * t431;
t776 = t486 / 0.2e1;
t591 = t435 * t776;
t710 = t463 * t435;
t496 = (-t773 * t433 / 0.2e1 + t591) * pkin(2) - t710 / 0.2e1;
t804 = t496 - t718 / 0.2e1;
t179 = qJD(6) * t422 + t232;
t790 = t435 ^ 2;
t632 = t790 - t427;
t797 = t542 * qJD(4);
t630 = -t772 / 0.2e1;
t572 = pkin(5) * t630;
t719 = t433 * t485;
t599 = t719 / 0.2e1;
t693 = t488 * t266;
t796 = t433 * t572 + (t693 / 0.2e1 + t431 * t599) * pkin(5);
t102 = t266 ^ 2 - t269 ^ 2;
t79 = t266 * t431 + t269 * t540;
t19 = qJD(1) * t102 + t480 * t79;
t668 = qJD(1) * t269;
t44 = t114 * t480 + t266 * t668;
t254 = t431 ^ 2 - t540 ^ 2;
t51 = t79 * qJD(1) + t254 * t480;
t285 = t485 * t435;
t379 = t435 * t615;
t268 = t285 * t484 - t379;
t584 = pkin(10) * t433 + t208;
t104 = t488 * t584 + t835;
t701 = t484 * t104;
t103 = -t485 * t584 + t833;
t768 = t435 * pkin(5);
t88 = t103 + t768;
t85 = t772 * t88;
t49 = -t85 + t701;
t795 = t184 * t268 + t266 * t510 + t433 * t49;
t619 = t772 * t104;
t50 = t484 * t88 + t619;
t518 = t431 * t435;
t794 = t184 * t518 - t269 * t510 + t433 * t50;
t662 = qJD(1) * t488;
t611 = t485 * t662;
t793 = t287 * t480 + t427 * t611;
t261 = -0.2e1 * t433 * t611 + t458 * t480;
t792 = t480 * t542;
t791 = t633 * t583;
t785 = t542 / 0.2e1;
t783 = t379 / 0.2e1;
t777 = -t485 / 0.2e1;
t769 = t433 * pkin(3);
t767 = t484 * pkin(5);
t765 = t633 * t79;
t764 = pkin(2) * qJD(3);
t1 = (t624 - t700) * t435 + t795;
t763 = t1 * qJD(1);
t2 = -(t618 + t759) * t435 + t794;
t762 = t2 * qJD(1);
t3 = (t623 - t699) * t435 + t795;
t761 = t3 * qJD(1);
t4 = -(t617 + t758) * t435 + t794;
t760 = t4 * qJD(1);
t702 = t484 * t103;
t55 = -t619 - t702;
t631 = pkin(5) * t719;
t743 = t184 * t269;
t34 = t266 * t631 + t435 * t55 - t743;
t757 = qJD(1) * t34;
t620 = t772 * t103;
t56 = t620 - t701;
t744 = t184 * t266;
t35 = -t269 * t631 - t435 * t56 - t744;
t756 = qJD(1) * t35;
t36 = t435 * t49 - t744;
t755 = qJD(1) * t36;
t37 = -t435 * t50 - t743;
t754 = qJD(1) * t37;
t71 = t126 * t435 + t288 * t511;
t753 = qJD(1) * t71;
t72 = -t127 * t435 + t511 * t719;
t752 = qJD(1) * t72;
t80 = -t266 * t518 + t268 * t269;
t751 = qJD(1) * t80;
t567 = -t768 / 0.2e1 - t88 / 0.2e1;
t10 = (t103 / 0.2e1 + t567) * t484;
t750 = t10 * qJD(1);
t534 = -t85 / 0.2e1 + t435 * t572;
t12 = t620 / 0.2e1 + t534;
t749 = t12 * qJD(1);
t741 = t184 * t431;
t736 = t583 * t433;
t734 = t274 * t433;
t282 = t549 + t769;
t732 = t282 * t433;
t731 = t282 * t435;
t730 = t541 * t433;
t728 = t312 * t433;
t696 = t485 * t211;
t38 = (t810 - t696) * t435 + t838;
t726 = t38 * qJD(1);
t39 = (-t686 + t811) * t435 + t839;
t725 = t39 * qJD(1);
t695 = t485 * t233;
t40 = (t810 - t695) * t435 + t838;
t724 = t40 * qJD(1);
t41 = (-t685 + t811) * t435 + t839;
t723 = t41 * qJD(1);
t720 = t433 * t462;
t715 = t446 * t268;
t713 = t446 * t518;
t712 = t446 * t540;
t711 = t446 * t431;
t708 = t464 * t268;
t706 = t464 * t518;
t705 = t464 * t540;
t704 = t464 * t431;
t703 = t469 * t433;
t692 = t488 * t269;
t69 = t282 * t291;
t691 = t69 * qJD(1);
t70 = t282 * t304;
t690 = t70 * qJD(1);
t687 = t633 * t114;
t415 = t431 * qJD(4);
t474 = qJD(3) * t629;
t681 = t431 * t474 + t415;
t419 = t540 * qJD(4);
t680 = t474 * t540 + t419;
t413 = t540 * qJD(6);
t679 = -qJD(5) * t540 - t413;
t475 = qJD(4) * t485;
t677 = t474 * t485 + t475;
t476 = qJD(4) * t488;
t676 = t474 * t488 + t476;
t471 = qJD(2) * t766;
t473 = t486 * t764;
t675 = t471 + t473;
t674 = qJ(4) * qJD(3);
t128 = -t291 * t433 - t731;
t672 = qJD(1) * t128;
t129 = -t291 * t435 + t732;
t671 = qJD(1) * t129;
t130 = -t304 * t433 - t731;
t670 = qJD(1) * t130;
t131 = -t304 * t435 + t732;
t669 = qJD(1) * t131;
t277 = t433 * t479 + t435 * t470;
t667 = qJD(1) * t277;
t278 = -t433 * t470 + t435 * t479;
t666 = qJD(1) * t278;
t664 = qJD(1) * t470;
t663 = qJD(1) * t485;
t661 = qJD(1) * t489;
t660 = qJD(2) * t446;
t659 = qJD(2) * t463;
t658 = qJD(3) * t464;
t657 = qJD(3) * t470;
t656 = qJD(4) * t435;
t655 = qJD(5) * t485;
t654 = qJD(5) * t488;
t653 = qJD(5) * t789;
t574 = -t629 / 0.2e1;
t112 = -t523 + (t574 - t469 / 0.2e1 - pkin(3) / 0.2e1) * t433;
t652 = t112 * qJD(1);
t115 = t266 * t433 - t268 * t435;
t650 = t115 * qJD(1);
t116 = t269 * t433 + t435 * t518;
t649 = t116 * qJD(1);
t593 = -t698 / 0.2e1;
t162 = t783 + (t593 + t782) * t435;
t149 = t162 * qJD(1);
t524 = t615 / 0.2e1 + t593;
t167 = (t782 + t524) * t435;
t156 = t167 * qJD(1);
t219 = t632 * t485;
t646 = t219 * qJD(1);
t220 = t632 * t488;
t645 = t220 * qJD(1);
t644 = t632 * qJD(1);
t643 = t285 * qJD(1);
t640 = t422 * qJD(1);
t638 = t790 * qJD(1);
t418 = t433 * qJD(4);
t459 = -t487 ^ 2 + t489 ^ 2;
t637 = t459 * qJD(1);
t636 = t487 * qJD(2);
t635 = t489 * qJD(2);
t634 = t474 + qJD(4);
t628 = pkin(1) * t487 * qJD(1);
t627 = pkin(1) * t661;
t626 = t420 / 0.2e1;
t145 = -t741 / 0.2e1;
t622 = t145 - pkin(5) * t692 / 0.2e1 + t631 * t782;
t614 = t282 * t665;
t613 = t433 * t664;
t612 = t435 * t664;
t610 = t435 * t655;
t609 = t435 * t654;
t607 = t518 * t665;
t272 = t540 * t435;
t606 = t272 * t665;
t605 = t790 * t663;
t604 = t487 * t661;
t603 = t485 * t654;
t396 = t435 * t662;
t602 = -t742 / 0.2e1;
t601 = t741 / 0.2e1;
t600 = t435 * t781;
t590 = -t203 / 0.2e1 + t837;
t587 = t845 + t846;
t586 = t772 * qJD(5);
t585 = t772 * qJD(6);
t575 = qJD(5) + t665;
t472 = qJD(2) * t629;
t564 = t433 * t813;
t559 = qJD(6) + t575;
t557 = t718 - t836;
t399 = t431 * t771;
t252 = t399 + t712;
t493 = (-t693 / 0.2e1 + (t431 * t777 + t630) * t433) * pkin(5) + t602;
t7 = t493 + t826;
t556 = -qJD(1) * t7 + qJD(2) * t252;
t400 = t540 * t771;
t253 = t400 - t711;
t495 = (t692 / 0.2e1 + (t484 / 0.2e1 + t485 * t781) * t433) * pkin(5) + t601;
t6 = t495 + t824;
t555 = -qJD(1) * t6 + qJD(2) * t253;
t554 = t710 + t720;
t343 = -t463 * t629 - t469 * t766;
t494 = (t582 * t776 + t773 * t785) * pkin(2) - t831 / 0.2e1 + t469 * t785;
t547 = t818 / 0.2e1 - t582 * t787;
t67 = t494 + t547;
t553 = t67 * qJD(1) - t343 * qJD(2);
t545 = t787 - t566;
t544 = t433 * t778 + t462 * t779;
t543 = t435 * t774 + t721 / 0.2e1;
t21 = t602 + t826;
t539 = qJD(1) * t21 - t540 * t660;
t22 = t601 + t824;
t538 = qJD(1) * t22 + t431 * t660;
t499 = t488 * t544 + t837;
t65 = t499 - t590;
t537 = -qJD(1) * t65 + t485 * t659;
t63 = t786 - t810 / 0.2e1 + (t211 / 0.2e1 + t544) * t485;
t536 = -qJD(1) * t63 - t488 * t659;
t535 = t575 * t719;
t520 = t543 * t488;
t500 = t524 * t766;
t172 = -t540 * t587 + t500;
t137 = -t399 + t172;
t15 = t493 + t825;
t275 = t399 + t705;
t517 = qJD(1) * t15 + qJD(2) * t137 - qJD(3) * t275;
t501 = t525 * t766;
t173 = t431 * t587 - t501;
t138 = -t400 + t173;
t14 = t495 + t842;
t276 = t400 - t704;
t516 = qJD(1) * t14 + qJD(2) * t138 - qJD(3) * t276;
t491 = t806 / 0.2e1 + t736 / 0.2e1 + t715 / 0.2e1 + t266 * t573 + t540 * pkin(2) * t591;
t502 = -t806 / 0.2e1 + t730 / 0.2e1 - t708 / 0.2e1;
t26 = t491 + t502;
t515 = -qJD(1) * t26 - t431 * t472;
t58 = t830 * t485;
t514 = -qJD(1) * t58 - t472 * t488;
t60 = t830 * t488;
t513 = qJD(1) * t60 - t472 * t485;
t492 = t807 / 0.2e1 + t734 / 0.2e1 + t713 / 0.2e1 + t269 * t574 + t518 * t625;
t503 = -t807 / 0.2e1 - t728 / 0.2e1 - t706 / 0.2e1;
t28 = t492 + t503;
t512 = -qJD(1) * t28 - t472 * t540;
t29 = t602 + t825;
t509 = qJD(1) * t29 + qJD(2) * t172 - t540 * t658;
t30 = t601 + t842;
t508 = qJD(1) * t30 + qJD(2) * t173 + t431 * t658;
t132 = (t233 / 0.2e1 + t543) * t485;
t334 = t545 * t488;
t507 = -qJD(1) * t132 + qJD(2) * t334 - t488 * t674;
t133 = t212 / 0.2e1 + t520;
t333 = t545 * t485;
t506 = -qJD(1) * t133 - qJD(2) * t333 + t485 * t674;
t174 = -t704 / 0.2e1 - t711 / 0.2e1 - t501;
t175 = t705 / 0.2e1 + t712 / 0.2e1 + t500;
t481 = qJ(4) * qJD(4);
t457 = t480 * qJ(4);
t456 = t463 * qJD(4);
t449 = t458 * qJD(5);
t397 = t485 * t418;
t395 = t435 * t663;
t342 = -t396 - t654;
t341 = -t395 - t655;
t336 = t463 * t488;
t335 = t485 * t625 + (qJ(4) + t463) * t777;
t293 = t480 * t422;
t280 = t288 * qJD(4);
t279 = t287 * qJD(5);
t188 = t433 * t303;
t187 = t633 * t431 * t540;
t185 = -0.2e1 * t488 * t535;
t177 = -t609 - t645;
t176 = -t610 - t646;
t171 = t435 * t524 + t600;
t168 = t435 * t593 + t600 + t783;
t164 = t722 / 0.2e1 + t588;
t160 = t784 + (t592 + t781) * t433;
t159 = -t320 * t482 + t279;
t158 = t171 * qJD(4);
t157 = t497 * qJD(4);
t155 = t167 * qJD(4);
t153 = t165 * qJD(4);
t152 = t164 * qJD(4);
t150 = t498 * qJD(4);
t148 = t161 * qJD(4);
t147 = t160 * qJD(4);
t140 = t400 + t174;
t139 = t399 + t175;
t136 = t564 + t645;
t135 = -t433 * t812 + t646;
t134 = t633 * t254;
t125 = -t156 + t679;
t120 = -t149 + t679;
t113 = -t703 / 0.2e1 + t769 / 0.2e1 + t804;
t109 = t279 + (qJD(1) * t433 * t482 + t834) * t435;
t92 = 0.2e1 * (-qJD(5) + t665) * t485 * t288 - t458 * t303;
t87 = -t811 - t212 / 0.2e1 + t520;
t86 = t810 - t695 / 0.2e1 + t543 * t485;
t68 = t494 - t547;
t66 = t499 + t590;
t64 = 0.2e1 * t786 - t696 / 0.2e1 + t544 * t485;
t62 = t162 * t480 - t269 * t665;
t61 = t266 * t665 + t480 * t498;
t59 = -t835 + t288 * t774 + (-t720 / 0.2e1 + t804) * t488;
t57 = -t833 - t789 * t599 + qJ(4) * t285 / 0.2e1 + (t720 / 0.2e1 - t496) * t485;
t54 = -t649 - t808;
t53 = -t162 * t633 - t650;
t48 = t168 * t480 + t269 * t559;
t47 = -t266 * t559 + t480 * t497;
t46 = t518 * t668 + t687;
t43 = -t540 * t814 + t649 + t809;
t42 = t168 * t633 + t431 * t814 + t650;
t33 = (t580 - t668) * t518 + t687;
t31 = t145 + t529 + t843;
t27 = t492 - t503;
t25 = t491 - t502;
t23 = t145 + t530 + t827;
t18 = -t751 + t765;
t17 = t568 + (t626 - t93 / 0.2e1) * t484 + t622 + t843;
t16 = t796 + t32;
t13 = t701 - t620 / 0.2e1 + t534;
t11 = -t619 - t702 / 0.2e1 + t567 * t484;
t9 = t569 + (t626 - t91 / 0.2e1) * t484 + t622 + t827;
t8 = t796 + t24;
t5 = t751 + t480 * (-t268 * t540 - t431 * t518) + t765;
t20 = [0, 0, 0, t487 * t635, t459 * qJD(2), 0, 0, 0, -pkin(1) * t636, -pkin(1) * t635, -t188, -t480 * t632, 0, 0, 0, qJD(2) * t277 + t435 * t657, qJD(2) * t278 - t433 * t657, 0, qJD(2) * t128 + qJD(3) * t130 + t418 * t435, qJD(2) * t129 + qJD(3) * t131 + qJD(4) * t790, qJD(2) * t69 + qJD(3) * t70 - t282 * t656, t435 * t482 * t814 + t427 * t603, -t294 * qJD(5) + t435 * t527, t219 * t480 + t433 * t609, t220 * t480 - t433 * t610, -t188, qJD(2) * t38 + qJD(3) * t40 + qJD(5) * t72 + t475 * t790, qJD(2) * t39 + qJD(3) * t41 + qJD(5) * t71 + t476 * t790 (t266 * t633 - t480 * t518) * t269, t102 * t633 + t480 * t80, t116 * t480 - t266 * t816, t115 * t480 + t269 * t816, -t188, qJD(2) * t1 + qJD(3) * t3 + qJD(5) * t34 + qJD(6) * t37 + t518 * t656, qJD(2) * t2 + qJD(3) * t4 + qJD(5) * t35 + qJD(6) * t36 + t272 * t656; 0, 0, 0, t604, t637, t635, -t636, 0, -pkin(7) * t635 - t628, pkin(7) * t636 - t627, -t320, -t644, -t814, -t303, 0, -t792 + t667, t823 + t666 (-t703 - t710) * qJD(2) + t113 * qJD(3) - t418, t792 + t672, -t823 + t671, t691 + (t469 * t542 - t831) * qJD(2) + t68 * qJD(3) + t797, t109, t92, t135, t136, -t232, t726 + (-t488 * t554 - t835) * qJD(2) + t59 * qJD(3) - t280 + t64 * qJD(5), t725 + (t485 * t554 - t833) * qJD(2) + t57 * qJD(3) + t397 + t66 * qJD(5), t33, t5, t43, t42, -t179, t763 + (t715 + t736 + t806) * qJD(2) + t25 * qJD(3) + t147 + t8 * qJD(5) + t24 * qJD(6), t762 + (t713 + t734 + t807) * qJD(2) + t27 * qJD(3) + t152 + t9 * qJD(5) + t23 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t644, -t814, -t303, 0, t612 - t792, t823 - t613, t113 * qJD(2) + (-t718 + t769) * qJD(3) - t418, t670 + t792, -t823 + t669, t690 + t68 * qJD(2) + (-qJ(4) * t582 - t818) * qJD(3) + t797, t109, t92, t135, t136, -t232, t724 + t59 * qJD(2) + (-t488 * t557 - t835) * qJD(3) - t280 + t86 * qJD(5), t723 + t57 * qJD(2) + (t485 * t557 - t833) * qJD(3) + t397 + t87 * qJD(5), t33, t5, t43, t42, -t179, t761 + t25 * qJD(2) + (t708 - t730 + t806) * qJD(3) + t147 + t16 * qJD(5) + t32 * qJD(6), t760 + t27 * qJD(2) + (t706 + t728 + t807) * qJD(3) + t152 + t17 * qJD(5) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t814, t320, t638, -t614 + t792, 0, 0, 0, 0, 0, -t288 * t480 + t605, t488 * t638 + t564, 0, 0, 0, 0, 0, t160 * t480 + t607 + t809, t164 * t480 + t171 * t633 + t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t793, -t844, t575 * t288, -t535, -t293, qJD(2) * t64 + qJD(3) * t86 - qJD(5) * t127 + t752, qJD(2) * t66 + qJD(3) * t87 + qJD(5) * t126 + t753, t44, t19, t47, t48, -t293, qJD(2) * t8 + qJD(3) * t16 + qJD(5) * t55 + qJD(6) * t11 + t157 + t757, qJD(2) * t9 + qJD(3) * t17 - qJD(5) * t56 + qJD(6) * t13 + t158 + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t19, t47, t48, -t293, qJD(2) * t24 + qJD(3) * t32 + qJD(5) * t11 - qJD(6) * t50 + t157 + t754, qJD(2) * t23 + qJD(3) * t31 + qJD(5) * t13 + qJD(6) * t49 + t158 + t755; 0, 0, 0, -t604, -t637, 0, 0, 0, t628, t627, t320, t644, 0, 0, 0, -t667, -t666, qJD(3) * t112, -t672, -t671, qJD(3) * t67 - t691, t159, t185, t176, t177, t232, -qJD(3) * t60 + qJD(5) * t63 - t726, qJD(3) * t58 + qJD(5) * t65 - t725, t46, t18, t54, t53, t179, qJD(3) * t26 - qJD(5) * t7 - qJD(6) * t21 + t148 - t763, qJD(3) * t28 - qJD(5) * t6 - qJD(6) * t22 + t153 - t762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, -t474, 0, t473, t634, -qJD(3) * t343 + t456, -t603, t449, 0, 0, 0, t463 * t654 + t677, -t463 * t655 + t676, -t187, t134, 0, 0, 0, qJD(5) * t252 + t413 * t446 + t681, qJD(5) * t253 - t416 * t446 + t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t675, -t474 - t472, t652, t675, t634 + t472 (-pkin(3) * t486 + qJ(4) * t773) * t764 + t456 + t553, -t603, t449, 0, 0, 0, qJD(5) * t336 - t513 + t677, qJD(5) * t335 - t514 + t676, -t187, t134, 0, 0, 0, qJD(5) * t139 + qJD(6) * t175 - t515 + t681, qJD(5) * t140 + qJD(6) * t174 - t512 + t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t463 * t480, 0, 0, 0, 0, 0, t813, t812, 0, 0, 0, 0, 0, t118, -t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t261, t341, t342, t640, qJD(3) * t336 - t462 * t655 - t536, qJD(3) * t335 - t462 * t654 - t537, -t74, t51, t829, t120, t640, qJD(3) * t139 + t556 - t822, qJD(3) * t140 + t555 + t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t51, t829, t120, t640, qJD(3) * t175 - t539 - t822, qJD(3) * t174 - t538 + t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t644, 0, 0, 0, -t612, t613, -qJD(2) * t112, -t670, -t669, -qJD(2) * t67 - t690, t159, t185, t176, t177, t232, qJD(2) * t60 + qJD(5) * t132 - t724, -qJD(2) * t58 + qJD(5) * t133 - t723, t46, t18, t54, t53, t179, -qJD(2) * t26 - qJD(5) * t15 - qJD(6) * t29 + t148 - t761, -qJD(2) * t28 - qJD(5) * t14 - qJD(6) * t30 + t153 - t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t472, -t652, -t471, qJD(4) - t472, t481 - t553, -t603, t449, 0, 0, 0, -qJD(5) * t334 + t475 + t513, qJD(5) * t333 + t476 + t514, -t187, t134, 0, 0, 0, -qJD(5) * t137 - qJD(6) * t172 + t415 + t515, -qJD(5) * t138 - qJD(6) * t173 + t419 + t512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t481, -t603, t449, 0, 0, 0, qJ(4) * t654 + t475, -qJ(4) * t655 + t476, -t187, t134, 0, 0, 0, qJD(5) * t275 + t413 * t464 + t415, qJD(5) * t276 - t416 * t464 + t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t457, 0, 0, 0, 0, 0, t813, t812, 0, 0, 0, 0, 0, t118, -t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t261, t341, t342, t640, t485 * t653 - t507, t488 * t653 - t506, -t74, t51, t829, t120, t640, -t517 - t821, -t516 - t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t51, t829, t120, t640, -t509 - t821, -t508 - t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t638, t614, 0, 0, 0, 0, 0, -t285 * qJD(5) - t605 (-qJD(5) * t435 - t638) * t488, 0, 0, 0, 0, 0, -t161 * t480 - t607 - t808, -t165 * t480 - t167 * t633 - t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, -t659 - t674, 0, 0, 0, 0, 0, -t813, -t812, 0, 0, 0, 0, 0, -t118, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, -t457, 0, 0, 0, 0, 0, -t813, -t812, 0, 0, 0, 0, 0, -t118, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643 - t655, -t575 * t488, 0, 0, 0, 0, 0, t829, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t793, t844 (-t433 * t662 + t813) * t435 (t433 * t663 + t812) * t435, -t293, -qJD(2) * t63 - qJD(3) * t132 + qJD(4) * t285 - t752, -qJD(2) * t65 - qJD(3) * t133 + t435 * t476 - t753, -t44, -t19, t61, t62, -t293, qJD(2) * t7 + qJD(3) * t15 + qJD(6) * t10 + t150 - t757, qJD(2) * t6 + qJD(3) * t14 + qJD(6) * t12 + t155 - t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, -t261, t395, t396, -t640, qJD(3) * t334 + t536, -qJD(3) * t333 + t537, t74, -t51, t798, t149, -t640, qJD(3) * t137 - t556, qJD(3) * t138 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, -t261, t395, t396, -t640, t507, t506, t74, -t51, t798, t149, -t640, t517, t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t643, t396, 0, 0, 0, 0, 0, t798, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t767, -pkin(5) * t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633 * t767 + t750, t749 + (-t586 - t585) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t19, t61, t62, -t293, qJD(2) * t21 + qJD(3) * t29 - qJD(5) * t10 + t150 - t754, qJD(2) * t22 + qJD(3) * t30 - qJD(5) * t12 + t155 - t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t51, t798, t149, -t640, qJD(3) * t172 + t539, qJD(3) * t173 + t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t51, t798, t149, -t640, t509, t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t798, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t767 - t750, pkin(5) * t586 - t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
