% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 10:45
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRPRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 10:44:01
% EndTime: 2019-05-07 10:44:46
% DurationCPUTime: 42.63s
% Computational Cost: add. (151738->814), mult. (313217->1195), div. (0->0), fcn. (224358->10), ass. (0->570)
t1002 = sin(qJ(1));
t1001 = sin(qJ(2));
t1006 = cos(qJ(2));
t1005 = cos(qJ(3));
t1000 = sin(qJ(3));
t1056 = qJD(1) * t1006;
t1057 = qJD(1) * t1001;
t952 = t1000 * t1057 - t1005 * t1056;
t954 = (t1000 * t1006 + t1001 * t1005) * qJD(1);
t1097 = t954 * t952;
t994 = qJDD(2) + qJDD(3);
t1138 = t994 - t1097;
t1149 = t1000 * t1138;
t1106 = t954 ^ 2;
t995 = qJD(2) + qJD(3);
t993 = t995 ^ 2;
t935 = -t993 + t1106;
t842 = t1005 * t935 - t1149;
t1147 = t1005 * t1138;
t847 = t1000 * t935 + t1147;
t780 = t1001 * t842 + t1006 * t847;
t1171 = t1002 * t780;
t1007 = cos(qJ(1));
t1170 = t1007 * t780;
t1139 = t1097 + t994;
t1148 = t1000 * t1139;
t925 = t1106 + t993;
t837 = t1005 * t925 + t1148;
t1146 = t1005 * t1139;
t839 = -t1000 * t925 + t1146;
t769 = t1001 * t839 + t1006 * t837;
t1169 = pkin(7) * t769;
t772 = t1001 * t837 - t1006 * t839;
t1168 = pkin(7) * t772;
t1167 = t1002 * t772;
t949 = t952 ^ 2;
t934 = t993 - t949;
t844 = -t1000 * t934 + t1146;
t849 = t1005 * t934 + t1148;
t782 = t1001 * t844 + t1006 * t849;
t1166 = t1002 * t782;
t1165 = t1007 * t772;
t1164 = t1007 * t782;
t1163 = -pkin(1) * t769 - pkin(2) * t837;
t1162 = t1001 * t847 - t1006 * t842;
t1160 = pkin(8) * t837;
t1159 = pkin(8) * t839;
t1158 = t1001 * t849 - t1006 * t844;
t893 = -t993 - t949;
t811 = t1000 * t893 + t1147;
t814 = -t1005 * t893 + t1149;
t746 = t1001 * t814 - t1006 * t811;
t1157 = pkin(7) * t746;
t748 = t1001 * t811 + t1006 * t814;
t1156 = pkin(7) * t748;
t1155 = t1002 * t748;
t1154 = t1007 * t748;
t1153 = pkin(1) * t746 - pkin(2) * t811;
t1151 = pkin(8) * t811;
t1150 = pkin(8) * t814;
t1137 = 2 * qJD(4);
t1113 = -t949 - t1106;
t1136 = pkin(1) * t1113;
t1135 = pkin(2) * t1113;
t1004 = cos(qJ(5));
t999 = sin(qJ(5));
t914 = -t1004 * t952 + t995 * t999;
t916 = t1004 * t995 + t952 * t999;
t863 = t916 * t914;
t1042 = qJD(2) * t1056;
t1054 = qJDD(1) * t1001;
t964 = t1042 + t1054;
t1043 = qJD(2) * t1057;
t989 = t1006 * qJDD(1);
t965 = t989 - t1043;
t1029 = t1000 * t965 + t1005 * t964;
t1017 = qJD(3) * t952 - t1029;
t871 = qJDD(5) - t1017;
t1118 = -t863 + t871;
t1134 = t1118 * t999;
t1003 = cos(qJ(6));
t998 = sin(qJ(6));
t852 = t1003 * t914 + t916 * t998;
t854 = t1003 * t916 - t914 * t998;
t792 = t854 * t852;
t869 = qJDD(6) + t871;
t1119 = -t792 + t869;
t1133 = t1119 * t998;
t938 = t952 * t995;
t836 = t1017 - t938;
t1038 = t1017 + t938;
t1095 = t995 * t954;
t1009 = qJD(1) ^ 2;
t974 = t1002 * g(1) - t1007 * g(2);
t1024 = qJDD(1) * pkin(1) + t974;
t1025 = qJD(2) * pkin(2) - pkin(8) * t1057;
t997 = t1006 ^ 2;
t879 = t965 * pkin(2) + (pkin(8) * t997 + pkin(7)) * t1009 - t1025 * t1057 + t1024;
t1132 = pkin(3) * t1095 - t1137 * t954 - t879;
t1131 = t1002 * t1113;
t1115 = -t1106 + t949;
t1130 = t1002 * t1115;
t1129 = t1003 * t1119;
t1128 = t1004 * t1118;
t1127 = t1007 * t1113;
t1126 = t1007 * t1115;
t1020 = (-t1000 * t952 - t1005 * t954) * t995;
t1021 = (t1000 * t954 - t1005 * t952) * t995;
t1111 = -t1001 * t1020 + t1006 * t1021;
t1125 = t1002 * t1111 - t1007 * t994;
t1044 = t1007 * t1097;
t1066 = t1005 * t995;
t1031 = -t1000 * t1017 + t1066 * t954;
t1085 = t1000 * t995;
t1032 = -t1005 * t1017 - t1085 * t954;
t1107 = -t1001 * t1031 + t1006 * t1032;
t1124 = t1002 * t1107 - t1044;
t1037 = t1000 * t964 - t1005 * t965;
t875 = qJD(3) * t954 + t1037;
t1022 = t1000 * t875 + t1066 * t952;
t1033 = -t1005 * t875 + t1085 * t952;
t1110 = -t1001 * t1033 + t1006 * t1022;
t1123 = t1002 * t1110 + t1044;
t1047 = t1002 * t1097;
t1122 = t1007 * t1107 + t1047;
t1121 = t1007 * t1110 - t1047;
t1120 = t1002 * t994 + t1007 * t1111;
t1117 = qJ(4) * t1038;
t947 = qJD(5) + t954;
t1100 = t914 * t947;
t807 = -t914 * qJD(5) + t1004 * t994 + t999 * t875;
t788 = t807 + t1100;
t1112 = t1001 * t1021 + t1006 * t1020;
t1109 = t1001 * t1022 + t1006 * t1033;
t1108 = t1001 * t1032 + t1006 * t1031;
t850 = t852 ^ 2;
t851 = t854 ^ 2;
t911 = t914 ^ 2;
t912 = t916 ^ 2;
t943 = qJD(6) + t947;
t940 = t943 ^ 2;
t945 = t947 ^ 2;
t1105 = pkin(3) + pkin(9);
t1104 = pkin(3) * t1000;
t1103 = pkin(3) * t1005;
t1055 = t1001 * t1009;
t1058 = qJD(1) * qJD(2);
t975 = g(1) * t1007 + g(2) * t1002;
t957 = -pkin(1) * t1009 + qJDD(1) * pkin(7) - t975;
t1082 = t1001 * t957;
t857 = qJDD(2) * pkin(2) - t964 * pkin(8) - t1082 + (pkin(2) * t1055 + pkin(8) * t1058 - g(3)) * t1006;
t928 = -t1001 * g(3) + t1006 * t957;
t991 = t997 * t1009;
t862 = -pkin(2) * t991 + t965 * pkin(8) - qJD(2) * t1025 + t928;
t795 = t1000 * t857 + t1005 * t862;
t900 = pkin(3) * t952 - qJ(4) * t954;
t1016 = -t993 * pkin(3) - t952 * t900 + t795;
t1096 = t994 * qJ(4);
t929 = pkin(4) * t954 - pkin(9) * t995;
t701 = t1096 - t875 * pkin(4) - t949 * pkin(9) + (t1137 + t929) * t995 + t1016;
t1039 = -t1004 * t875 + t999 * t994;
t806 = -qJD(5) * t916 - t1039;
t880 = pkin(5) * t947 - pkin(10) * t916;
t640 = -t806 * pkin(5) - t911 * pkin(10) + t916 * t880 + t701;
t1102 = t640 * t998;
t743 = t792 + t869;
t1101 = t743 * t998;
t1099 = t943 * t998;
t1098 = t947 * t999;
t1010 = t1117 + t1132;
t682 = -pkin(4) * t949 + t1105 * t875 - t954 * t929 + t1010;
t794 = t1000 * t862 - t1005 * t857;
t1023 = -t994 * pkin(3) - t993 * qJ(4) + t954 * t900 + qJDD(4) + t794;
t699 = -pkin(4) * t836 - pkin(9) * t1138 + t1023;
t620 = -t1004 * t699 + t999 * t682;
t580 = pkin(5) * t1118 - pkin(10) * t788 - t620;
t621 = t1004 * t682 + t999 * t699;
t592 = -pkin(5) * t911 + pkin(10) * t806 - t880 * t947 + t621;
t540 = -t1003 * t580 + t592 * t998;
t541 = t1003 * t592 + t580 * t998;
t505 = -t1003 * t540 + t541 * t998;
t1094 = t999 * t505;
t1093 = t999 * t701;
t798 = t863 + t871;
t1092 = t999 * t798;
t996 = t1001 ^ 2;
t1091 = t996 + t997;
t1089 = t1000 * t879;
t720 = t1000 * t795 - t1005 * t794;
t1084 = t1001 * t720;
t956 = t1009 * pkin(7) + t1024;
t1083 = t1001 * t956;
t981 = t1006 * t1055;
t972 = qJDD(2) + t981;
t1081 = t1001 * t972;
t973 = qJDD(2) - t981;
t1080 = t1001 * t973;
t1078 = t1003 * t640;
t1077 = t1003 * t743;
t1076 = t1003 * t943;
t1075 = t1004 * t505;
t1074 = t1004 * t701;
t1073 = t1004 * t798;
t1072 = t1004 * t947;
t829 = t875 + t1095;
t1071 = t1005 * t829;
t1070 = t1005 * t879;
t1065 = t1006 * t720;
t1064 = t1006 * t956;
t1063 = t1006 * t973;
t1062 = t1009 * t996;
t1061 = qJD(3) - t995;
t1060 = qJD(3) + t995;
t1059 = qJD(6) + t943;
t1053 = qJDD(1) * t1002;
t1052 = qJDD(1) * t1007;
t1051 = -t912 - t945;
t1049 = t1000 * t792;
t1048 = t1000 * t863;
t1046 = t1005 * t792;
t1045 = t1005 * t863;
t1041 = qJ(4) * t1000 + pkin(2);
t506 = t1003 * t541 + t540 * t998;
t1040 = -t1003 * t806 + t998 * t807;
t721 = t1000 * t794 + t1005 * t795;
t927 = t1006 * g(3) + t1082;
t861 = t1001 * t927 + t1006 * t928;
t918 = -t1002 * t974 - t1007 * t975;
t1036 = t1002 * t981;
t1035 = t1007 * t981;
t969 = -t1002 * t1009 + t1052;
t1034 = -pkin(6) * t969 - g(3) * t1002;
t1030 = t1003 * t807 + t998 * t806;
t557 = t1004 * t621 + t999 * t620;
t556 = -t1004 * t620 + t999 * t621;
t859 = t1001 * t928 - t1006 * t927;
t1028 = t1002 * t975 - t1007 * t974;
t1027 = t807 - t1100;
t1019 = (-qJD(6) + t943) * t854 - t1040;
t1018 = (-qJD(5) + t947) * t916 - t1039;
t715 = -qJD(6) * t852 + t1030;
t1014 = -t1060 * t952 + t1029;
t1013 = -0.2e1 * qJD(4) * t995 - t1016;
t735 = -t1013 + t1096;
t1011 = -t875 * pkin(3) - t1132;
t1008 = qJD(2) ^ 2;
t979 = -t991 - t1008;
t978 = t991 - t1008;
t977 = -t1008 - t1062;
t976 = t1008 - t1062;
t971 = t991 - t1062;
t970 = t991 + t1062;
t968 = t1007 * t1009 + t1053;
t967 = t1091 * qJDD(1);
t966 = t989 - 0.2e1 * t1043;
t963 = 0.2e1 * t1042 + t1054;
t961 = t1006 * t972;
t960 = t1091 * t1058;
t948 = -pkin(6) * t968 + g(3) * t1007;
t931 = t1006 * t964 - t1058 * t996;
t930 = -t1001 * t965 - t1058 * t997;
t924 = -t1001 * t977 - t1063;
t923 = -t1001 * t976 + t961;
t922 = t1006 * t979 - t1081;
t921 = t1006 * t978 - t1080;
t920 = t1006 * t977 - t1080;
t919 = t1001 * t979 + t961;
t909 = -t1002 * t970 + t1007 * t967;
t908 = t1002 * t967 + t1007 * t970;
t905 = -t1001 * t963 + t1006 * t966;
t892 = t1002 * t963 + t1007 * t924;
t891 = -t1002 * t966 + t1007 * t922;
t890 = t1002 * t924 - t1007 * t963;
t889 = t1002 * t922 + t1007 * t966;
t888 = -t912 + t945;
t887 = t911 - t945;
t882 = -pkin(7) * t920 - t1064;
t881 = -pkin(7) * t919 - t1083;
t874 = -pkin(1) * t920 + t928;
t873 = -pkin(1) * t919 + t927;
t858 = t912 - t911;
t831 = -t1061 * t952 + t1029;
t830 = -t875 + t1095;
t828 = t1061 * t954 + t1037;
t827 = t1060 * t954 + t1037;
t826 = -t945 - t911;
t817 = -t1002 * t956 + t1007 * t861;
t816 = t1002 * t861 + t1007 * t956;
t815 = t943 * t852;
t810 = -t851 + t940;
t809 = t850 - t940;
t808 = -t911 - t912;
t803 = (t1004 * t914 - t916 * t999) * t947;
t802 = (t1004 * t916 + t914 * t999) * t947;
t799 = -t851 - t940;
t791 = -t1070 + t1160;
t790 = t851 - t850;
t784 = (qJD(5) + t947) * t916 + t1039;
t783 = -t1089 - t1151;
t777 = -t1004 * t807 + t1098 * t916;
t776 = -t1072 * t916 - t807 * t999;
t775 = -t1072 * t914 + t806 * t999;
t774 = -t1004 * t806 - t1098 * t914;
t773 = -t940 - t850;
t768 = -t1000 * t836 + t1005 * t830;
t767 = -t1000 * t1014 - t1071;
t766 = t1000 * t1038 - t1005 * t827;
t765 = t1000 * t831 - t1005 * t828;
t764 = t1000 * t830 + t1005 * t836;
t763 = -t1000 * t829 + t1005 * t1014;
t762 = -t1000 * t827 - t1005 * t1038;
t761 = -t1000 * t828 - t1005 * t831;
t760 = -t1000 * t802 + t1005 * t871;
t759 = t1000 * t871 + t1005 * t802;
t758 = -t1004 * t887 + t1092;
t757 = t888 * t999 - t1128;
t756 = -t887 * t999 - t1073;
t755 = -t1004 * t888 - t1134;
t750 = (-t1003 * t852 + t854 * t998) * t943;
t749 = (-t1003 * t854 - t852 * t998) * t943;
t741 = -t1051 * t999 - t1073;
t740 = t1004 * t1051 - t1092;
t738 = -t850 - t851;
t737 = t1004 * t826 - t1134;
t736 = t999 * t826 + t1128;
t734 = pkin(2) * t1038 - t1089 - t1159;
t733 = -t1000 * t776 + t1045;
t732 = -t1000 * t774 - t1045;
t731 = t1005 * t776 + t1048;
t730 = t1005 * t774 - t1048;
t729 = -pkin(2) * t827 + t1070 - t1150;
t728 = t1011 - t1117;
t727 = -t1002 * t1038 + t1165;
t726 = -t1002 * t1014 - t1165;
t725 = t1007 * t1038 + t1167;
t724 = t1007 * t1014 - t1167;
t723 = -qJ(4) * t1113 + t1023;
t722 = -pkin(3) * t1113 + t735;
t719 = -t1002 * t829 + t1154;
t718 = t1002 * t827 - t1154;
t717 = t1007 * t829 + t1155;
t716 = -t1007 * t827 - t1155;
t714 = -qJD(6) * t854 - t1040;
t713 = t1003 * t809 - t1101;
t712 = -t810 * t998 + t1129;
t711 = t809 * t998 + t1077;
t710 = t1003 * t810 + t1133;
t709 = t1004 * t1018 + t999 * t788;
t708 = t1004 * t784 + t1027 * t999;
t707 = -t1004 * t788 + t1018 * t999;
t706 = -t1004 * t1027 + t784 * t999;
t705 = (t829 + t875) * pkin(3) + t1010;
t704 = (-t1038 + t1014) * qJ(4) + t1011;
t703 = -t799 * t998 - t1077;
t702 = t1003 * t799 - t1101;
t696 = pkin(2) * t879 + pkin(8) * t721;
t695 = -t1001 * t764 + t1006 * t768;
t694 = -t1001 * t763 + t1006 * t767;
t693 = -t1001 * t762 + t1006 * t766;
t692 = -t1001 * t761 + t1006 * t765;
t691 = t1001 * t768 + t1006 * t764;
t690 = t1001 * t765 + t1006 * t761;
t689 = -t1000 * t755 + t1005 * t788;
t688 = -t1000 * t756 + t1005 * t1018;
t687 = t1000 * t788 + t1005 * t755;
t686 = t1000 * t1018 + t1005 * t756;
t685 = -t1001 * t759 + t1006 * t760;
t684 = t1000 * t740 + t1005 * t1027;
t683 = t1000 * t1027 - t1005 * t740;
t680 = t1003 * t773 - t1133;
t679 = t773 * t998 + t1129;
t678 = t1000 * t736 + t1005 * t784;
t677 = t1000 * t784 - t1005 * t736;
t675 = -t1059 * t852 + t1030;
t674 = t715 + t815;
t673 = t715 - t815;
t670 = t1059 * t854 + t1040;
t669 = -t1163 + t795;
t668 = t1003 * t715 - t1099 * t854;
t667 = t1076 * t854 + t715 * t998;
t666 = t1076 * t852 - t714 * t998;
t665 = t1003 * t714 + t1099 * t852;
t664 = -t1000 * t706 + t1005 * t858;
t663 = t1000 * t858 + t1005 * t706;
t662 = -t1004 * t750 + t749 * t999;
t661 = -t1004 * t749 - t750 * t999;
t660 = t1007 * t695 + t1131;
t659 = t1007 * t692 + t1131;
t658 = t1002 * t695 - t1127;
t657 = t1002 * t692 - t1127;
t656 = t1000 * t707 + t1005 * t808;
t655 = t1000 * t808 - t1005 * t707;
t654 = t1153 + t794;
t653 = t1000 * t1023 + t1005 * t735;
t652 = t1000 * t735 - t1005 * t1023;
t651 = -pkin(8) * t764 - t720;
t650 = -t1000 * t661 + t1005 * t869;
t649 = t1000 * t869 + t1005 * t661;
t648 = -t1001 * t731 + t1006 * t733;
t647 = -t1001 * t730 + t1006 * t732;
t646 = t1005 * t704 - t1014 * t1104 - t1160;
t645 = qJ(4) * t1071 - t1000 * t705 + t1151;
t644 = pkin(8) * t768 - t1135 + t721;
t643 = -pkin(1) * t691 - pkin(2) * t764;
t642 = -pkin(3) * t925 + (-t1139 - t994) * qJ(4) + t1013 + t1163;
t641 = -t1001 * t734 + t1006 * t791 + t1169;
t639 = t1006 * t721 - t1084;
t638 = t1001 * t721 + t1065;
t637 = t1159 + t1000 * t704 + (pkin(2) + t1103) * t1014;
t636 = pkin(3) * t1138 + qJ(4) * t893 - t1023 - t1153;
t635 = t1005 * t705 + t1041 * t829 + t1150;
t634 = -t1001 * t729 + t1006 * t783 + t1157;
t633 = -t1004 * t713 + t711 * t999;
t632 = -t1004 * t712 + t710 * t999;
t631 = -t1004 * t711 - t713 * t999;
t630 = -t1004 * t710 - t712 * t999;
t629 = -t1002 * t879 + t1007 * t639;
t628 = t1002 * t639 + t1007 * t879;
t627 = pkin(4) * t707 - qJ(4) * t709;
t626 = t1004 * t703 - t999 * t702;
t625 = t1004 * t702 + t703 * t999;
t624 = -pkin(1) * t690 - pkin(2) * t761 + pkin(3) * t831 + qJ(4) * t828;
t623 = -t1001 * t687 + t1006 * t689;
t622 = -t1001 * t686 + t1006 * t688;
t618 = -pkin(8) * t761 - t1000 * t722 + t1005 * t723;
t617 = -t1001 * t683 + t1006 * t684;
t616 = t1001 * t684 + t1006 * t683;
t615 = t1004 * t680 - t999 * t679;
t614 = t1004 * t679 + t680 * t999;
t613 = -t1001 * t677 + t1006 * t678;
t612 = t1001 * t678 + t1006 * t677;
t611 = t1003 * t1019 + t674 * t998;
t610 = -t1003 * t670 - t673 * t998;
t609 = -t1003 * t674 + t1019 * t998;
t608 = t1003 * t673 - t670 * t998;
t606 = pkin(8) * t765 + t1000 * t723 + t1005 * t722 - t1135;
t605 = -t1004 * t668 + t667 * t999;
t604 = -t1004 * t666 + t665 * t999;
t603 = -t1004 * t667 - t668 * t999;
t602 = -t1004 * t665 - t666 * t999;
t601 = -t1001 * t663 + t1006 * t664;
t600 = -t1001 * t655 + t1006 * t656;
t599 = t1001 * t656 + t1006 * t655;
t598 = -pkin(1) * t638 - pkin(2) * t720;
t597 = -t1001 * t652 + t1006 * t653;
t596 = t1001 * t653 + t1006 * t652;
t595 = -pkin(10) * t702 + t1078;
t594 = pkin(4) * t1027 - t1105 * t741 - t1093;
t593 = pkin(4) * t784 - t1105 * t737 + t1074;
t591 = -t1001 * t649 + t1006 * t650;
t590 = -pkin(10) * t679 + t1102;
t589 = -t1000 * t603 + t1046;
t588 = -t1000 * t602 - t1046;
t587 = t1005 * t603 + t1049;
t586 = t1005 * t602 - t1049;
t585 = -pkin(8) * t652 + (qJ(4) * t1005 - t1104) * t728;
t584 = t1002 * t741 + t1007 * t617;
t583 = t1002 * t617 - t1007 * t741;
t582 = t1002 * t737 + t1007 * t613;
t581 = t1002 * t613 - t1007 * t737;
t578 = -t1000 * t630 + t1005 * t674;
t577 = -t1000 * t631 + t1005 * t1019;
t576 = t1000 * t674 + t1005 * t630;
t575 = t1000 * t1019 + t1005 * t631;
t574 = t1000 * t625 + t1005 * t675;
t573 = t1000 * t675 - t1005 * t625;
t572 = pkin(4) * t740 - qJ(4) * t741 - t621;
t571 = -t1002 * t728 + t1007 * t597;
t570 = t1002 * t597 + t1007 * t728;
t569 = pkin(4) * t736 - qJ(4) * t737 - t620;
t568 = t1000 * t614 + t1005 * t670;
t567 = t1000 * t670 - t1005 * t614;
t566 = t1002 * t709 + t1007 * t600;
t565 = t1002 * t600 - t1007 * t709;
t564 = pkin(8) * t653 + (t1041 + t1103) * t728;
t563 = -pkin(7) * t638 - pkin(8) * t1065 - t1001 * t696;
t562 = -t1001 * t637 + t1006 * t646 - t1169;
t561 = -pkin(5) * t675 + pkin(10) * t703 + t1102;
t560 = -t1001 * t635 + t1006 * t645 - t1157;
t559 = -pkin(5) * t670 + pkin(10) * t680 - t1078;
t558 = -pkin(7) * t691 - t1001 * t644 + t1006 * t651;
t555 = t1004 * t611 - t999 * t609;
t554 = -t1004 * t610 + t608 * t999;
t553 = t1004 * t609 + t611 * t999;
t552 = -t1004 * t608 - t610 * t999;
t551 = -t1000 * t552 + t1005 * t790;
t550 = t1000 * t790 + t1005 * t552;
t549 = -pkin(1) * t596 - pkin(2) * t652 + pkin(3) * t1023 - qJ(4) * t735;
t548 = t1000 * t553 + t1005 * t738;
t547 = t1000 * t738 - t1005 * t553;
t546 = t1000 * t556 + t1005 * t701;
t545 = t1000 * t701 - t1005 * t556;
t544 = -pkin(7) * t690 - t1001 * t606 + t1006 * t618;
t543 = -t1001 * t587 + t1006 * t589;
t542 = -t1001 * t586 + t1006 * t588;
t538 = -pkin(1) * t616 - pkin(2) * t683 - qJ(4) * t1027 + t1105 * t740 - t1074;
t537 = -t1001 * t576 + t1006 * t578;
t536 = -t1001 * t575 + t1006 * t577;
t535 = -pkin(1) * t612 - pkin(2) * t677 - qJ(4) * t784 + t1105 * t736 - t1093;
t534 = -t1001 * t573 + t1006 * t574;
t533 = t1001 * t574 + t1006 * t573;
t532 = pkin(4) * t808 - t1105 * t709 - t557;
t531 = -t1001 * t567 + t1006 * t568;
t530 = t1001 * t568 + t1006 * t567;
t529 = -pkin(8) * t683 - t1000 * t594 + t1005 * t572;
t528 = -pkin(8) * t677 - t1000 * t593 + t1005 * t569;
t527 = -pkin(2) * t741 + pkin(8) * t684 + t1000 * t572 + t1005 * t594;
t526 = -pkin(2) * t737 + pkin(8) * t678 + t1000 * t569 + t1005 * t593;
t525 = t1002 * t626 + t1007 * t534;
t524 = t1002 * t534 - t1007 * t626;
t523 = pkin(4) * t556 - qJ(4) * t557;
t522 = -pkin(7) * t596 - t1001 * t564 + t1006 * t585;
t521 = t1002 * t615 + t1007 * t531;
t520 = t1002 * t531 - t1007 * t615;
t519 = pkin(4) * t701 - t1105 * t557;
t518 = -pkin(8) * t655 - t1000 * t532 + t1005 * t627;
t517 = -t1001 * t550 + t1006 * t551;
t516 = -pkin(1) * t599 - pkin(2) * t655 - qJ(4) * t808 + t1105 * t707 + t556;
t515 = -t1001 * t547 + t1006 * t548;
t514 = t1001 * t548 + t1006 * t547;
t513 = -t1001 * t545 + t1006 * t546;
t512 = t1001 * t546 + t1006 * t545;
t511 = -pkin(2) * t709 + pkin(8) * t656 + t1000 * t627 + t1005 * t532;
t510 = pkin(4) * t625 + pkin(5) * t702 - qJ(4) * t626 - t541;
t509 = pkin(4) * t614 + pkin(5) * t679 - qJ(4) * t615 - t540;
t508 = pkin(4) * t675 - t1004 * t561 - t1105 * t626 - t999 * t595;
t507 = pkin(4) * t553 + pkin(5) * t609 - qJ(4) * t555;
t503 = pkin(4) * t670 - t1004 * t559 - t1105 * t615 - t999 * t590;
t502 = -pkin(5) * t640 + pkin(10) * t506;
t501 = -pkin(10) * t609 - t505;
t500 = -pkin(5) * t738 + pkin(10) * t611 + t506;
t499 = t1002 * t557 + t1007 * t513;
t498 = t1002 * t513 - t1007 * t557;
t497 = t1002 * t555 + t1007 * t515;
t496 = t1002 * t515 - t1007 * t555;
t495 = -pkin(7) * t616 - t1001 * t527 + t1006 * t529;
t494 = -pkin(7) * t612 - t1001 * t526 + t1006 * t528;
t493 = -pkin(1) * t533 - pkin(2) * t573 - qJ(4) * t675 - t1004 * t595 + t1105 * t625 + t999 * t561;
t492 = -pkin(1) * t530 - pkin(2) * t567 - qJ(4) * t670 - t1004 * t590 + t1105 * t614 + t999 * t559;
t491 = -pkin(7) * t599 - t1001 * t511 + t1006 * t518;
t490 = t1004 * t506 - t1094;
t489 = t506 * t999 + t1075;
t488 = -pkin(8) * t545 - t1000 * t519 + t1005 * t523;
t487 = t1000 * t489 + t1005 * t640;
t486 = t1000 * t640 - t1005 * t489;
t485 = -pkin(8) * t573 - t1000 * t508 + t1005 * t510;
t484 = -pkin(1) * t512 - pkin(2) * t545 - qJ(4) * t701 + t1105 * t556;
t483 = -pkin(8) * t567 - t1000 * t503 + t1005 * t509;
t482 = -pkin(2) * t626 + pkin(8) * t574 + t1000 * t510 + t1005 * t508;
t481 = -pkin(2) * t557 + pkin(8) * t546 + t1000 * t523 + t1005 * t519;
t480 = -pkin(2) * t615 + pkin(8) * t568 + t1000 * t509 + t1005 * t503;
t479 = pkin(4) * t738 - t1004 * t500 - t1105 * t555 - t999 * t501;
t478 = -t1001 * t486 + t1006 * t487;
t477 = t1001 * t487 + t1006 * t486;
t476 = -pkin(1) * t514 - pkin(2) * t547 - qJ(4) * t738 - t1004 * t501 + t1105 * t553 + t999 * t500;
t475 = -pkin(8) * t547 - t1000 * t479 + t1005 * t507;
t474 = pkin(4) * t489 + pkin(5) * t505 - qJ(4) * t490;
t473 = -pkin(7) * t533 - t1001 * t482 + t1006 * t485;
t472 = -pkin(2) * t555 + pkin(8) * t548 + t1000 * t507 + t1005 * t479;
t471 = -pkin(7) * t512 - t1001 * t481 + t1006 * t488;
t470 = -pkin(7) * t530 - t1001 * t480 + t1006 * t483;
t469 = pkin(4) * t640 + pkin(10) * t1094 - t1004 * t502 - t1105 * t490;
t468 = t1002 * t490 + t1007 * t478;
t467 = t1002 * t478 - t1007 * t490;
t466 = -pkin(7) * t514 - t1001 * t472 + t1006 * t475;
t465 = -pkin(1) * t477 - pkin(2) * t486 + pkin(10) * t1075 - qJ(4) * t640 + t1105 * t489 + t999 * t502;
t464 = -pkin(8) * t486 - t1000 * t469 + t1005 * t474;
t463 = -pkin(2) * t490 + pkin(8) * t487 + t1000 * t474 + t1005 * t469;
t462 = -pkin(7) * t477 - t1001 * t463 + t1006 * t464;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t968, -t969, 0, t918, 0, 0, 0, 0, 0, 0, t891, t892, t909, t817, 0, 0, 0, 0, 0, 0, t718, t727, t660, t629, 0, 0, 0, 0, 0, 0, t659, t719, t726, t571, 0, 0, 0, 0, 0, 0, t582, t584, t566, t499, 0, 0, 0, 0, 0, 0, t521, t525, t497, t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t969, -t968, 0, -t1028, 0, 0, 0, 0, 0, 0, t889, t890, t908, t816, 0, 0, 0, 0, 0, 0, t716, t725, t658, t628, 0, 0, 0, 0, 0, 0, t657, t717, t724, t570, 0, 0, 0, 0, 0, 0, t581, t583, t565, t498, 0, 0, 0, 0, 0, 0, t520, t524, t496, t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t919, t920, 0, t859, 0, 0, 0, 0, 0, 0, -t746, -t769, t691, t638, 0, 0, 0, 0, 0, 0, t690, t746, t769, t596, 0, 0, 0, 0, 0, 0, t612, t616, t599, t512, 0, 0, 0, 0, 0, 0, t530, t533, t514, t477; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t969, 0, -t968, 0, t1034, -t948, t1028, pkin(6) * t1028, t1007 * t931 - t1036, -t1002 * t971 + t1007 * t905, t1001 * t1053 + t1007 * t923, t1007 * t930 + t1036, t1002 * t989 + t1007 * t921, qJDD(2) * t1002 + t1007 * t960, -pkin(6) * t889 - t1002 * t873 + t1007 * t881, -pkin(6) * t890 - t1002 * t874 + t1007 * t882, -pkin(6) * t908 - t1007 * t859, -pkin(6) * t816 + (pkin(1) * t1002 - pkin(7) * t1007) * t859, t1122, t1007 * t693 - t1130, -t1002 * t836 + t1170, t1121, -t1002 * t828 - t1164, t1120, -pkin(6) * t716 - t1002 * t654 + t1007 * t634, -pkin(6) * t725 - t1002 * t669 + t1007 * t641, -pkin(6) * t658 - t1002 * t643 + t1007 * t558, -pkin(6) * t628 - t1002 * t598 + t1007 * t563, t1120, -t1002 * t831 - t1170, -t1002 * t830 + t1164, t1122, t1007 * t694 - t1130, t1121, -pkin(6) * t657 - t1002 * t624 + t1007 * t544, -pkin(6) * t717 - t1002 * t636 + t1007 * t560, -pkin(6) * t724 - t1002 * t642 + t1007 * t562, -pkin(6) * t570 - t1002 * t549 + t1007 * t522, -t1002 * t777 + t1007 * t648, -t1002 * t708 + t1007 * t601, -t1002 * t757 + t1007 * t623, -t1002 * t775 + t1007 * t647, -t1002 * t758 + t1007 * t622, -t1002 * t803 + t1007 * t685, -pkin(6) * t581 - t1002 * t535 + t1007 * t494, -pkin(6) * t583 - t1002 * t538 + t1007 * t495, -pkin(6) * t565 - t1002 * t516 + t1007 * t491, -pkin(6) * t498 - t1002 * t484 + t1007 * t471, -t1002 * t605 + t1007 * t543, -t1002 * t554 + t1007 * t517, -t1002 * t632 + t1007 * t537, -t1002 * t604 + t1007 * t542, -t1002 * t633 + t1007 * t536, -t1002 * t662 + t1007 * t591, -pkin(6) * t520 - t1002 * t492 + t1007 * t470, -pkin(6) * t524 - t1002 * t493 + t1007 * t473, -pkin(6) * t496 - t1002 * t476 + t1007 * t466, -pkin(6) * t467 - t1002 * t465 + t1007 * t462; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t968, 0, t969, 0, t948, t1034, t918, pkin(6) * t918, t1002 * t931 + t1035, t1002 * t905 + t1007 * t971, -t1001 * t1052 + t1002 * t923, t1002 * t930 - t1035, t1002 * t921 - t1007 * t989, -qJDD(2) * t1007 + t1002 * t960, pkin(6) * t891 + t1002 * t881 + t1007 * t873, pkin(6) * t892 + t1002 * t882 + t1007 * t874, pkin(6) * t909 - t1002 * t859, pkin(6) * t817 + (-pkin(1) * t1007 - pkin(7) * t1002) * t859, t1124, t1002 * t693 + t1126, t1007 * t836 + t1171, t1123, t1007 * t828 - t1166, t1125, pkin(6) * t718 + t1002 * t634 + t1007 * t654, pkin(6) * t727 + t1002 * t641 + t1007 * t669, pkin(6) * t660 + t1002 * t558 + t1007 * t643, pkin(6) * t629 + t1002 * t563 + t1007 * t598, t1125, t1007 * t831 - t1171, t1007 * t830 + t1166, t1124, t1002 * t694 + t1126, t1123, pkin(6) * t659 + t1002 * t544 + t1007 * t624, pkin(6) * t719 + t1002 * t560 + t1007 * t636, pkin(6) * t726 + t1002 * t562 + t1007 * t642, pkin(6) * t571 + t1002 * t522 + t1007 * t549, t1002 * t648 + t1007 * t777, t1002 * t601 + t1007 * t708, t1002 * t623 + t1007 * t757, t1002 * t647 + t1007 * t775, t1002 * t622 + t1007 * t758, t1002 * t685 + t1007 * t803, pkin(6) * t582 + t1002 * t494 + t1007 * t535, pkin(6) * t584 + t1002 * t495 + t1007 * t538, pkin(6) * t566 + t1002 * t491 + t1007 * t516, pkin(6) * t499 + t1002 * t471 + t1007 * t484, t1002 * t543 + t1007 * t605, t1002 * t517 + t1007 * t554, t1002 * t537 + t1007 * t632, t1002 * t542 + t1007 * t604, t1002 * t536 + t1007 * t633, t1002 * t591 + t1007 * t662, pkin(6) * t521 + t1002 * t470 + t1007 * t492, pkin(6) * t525 + t1002 * t473 + t1007 * t493, pkin(6) * t497 + t1002 * t466 + t1007 * t476, pkin(6) * t468 + t1002 * t462 + t1007 * t465; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t974, t975, 0, 0, (t964 + t1042) * t1001, t1001 * t966 + t1006 * t963, t1006 * t976 + t1081, (t965 - t1043) * t1006, t1001 * t978 + t1063, 0, pkin(1) * t966 + pkin(7) * t922 + t1064, -pkin(1) * t963 + pkin(7) * t924 - t1083, pkin(1) * t970 + pkin(7) * t967 + t861, pkin(1) * t956 + pkin(7) * t861, t1108, t1001 * t766 + t1006 * t762, t1162, t1109, -t1158, t1112, -pkin(1) * t827 + t1001 * t783 + t1006 * t729 - t1156, pkin(1) * t1038 + t1001 * t791 + t1006 * t734 + t1168, pkin(7) * t695 + t1001 * t651 + t1006 * t644 - t1136, pkin(1) * t879 + pkin(7) * t639 - pkin(8) * t1084 + t1006 * t696, t1112, -t1162, t1158, t1108, t1001 * t767 + t1006 * t763, t1109, pkin(7) * t692 + t1001 * t618 + t1006 * t606 - t1136, pkin(1) * t829 + t1001 * t645 + t1006 * t635 + t1156, pkin(1) * t1014 + t1001 * t646 + t1006 * t637 - t1168, pkin(1) * t728 + pkin(7) * t597 + t1001 * t585 + t1006 * t564, t1001 * t733 + t1006 * t731, t1001 * t664 + t1006 * t663, t1001 * t689 + t1006 * t687, t1001 * t732 + t1006 * t730, t1001 * t688 + t1006 * t686, t1001 * t760 + t1006 * t759, -pkin(1) * t737 + pkin(7) * t613 + t1001 * t528 + t1006 * t526, -pkin(1) * t741 + pkin(7) * t617 + t1001 * t529 + t1006 * t527, -pkin(1) * t709 + pkin(7) * t600 + t1001 * t518 + t1006 * t511, -pkin(1) * t557 + pkin(7) * t513 + t1001 * t488 + t1006 * t481, t1001 * t589 + t1006 * t587, t1001 * t551 + t1006 * t550, t1001 * t578 + t1006 * t576, t1001 * t588 + t1006 * t586, t1001 * t577 + t1006 * t575, t1001 * t650 + t1006 * t649, -pkin(1) * t615 + pkin(7) * t531 + t1001 * t483 + t1006 * t480, -pkin(1) * t626 + pkin(7) * t534 + t1001 * t485 + t1006 * t482, -pkin(1) * t555 + pkin(7) * t515 + t1001 * t475 + t1006 * t472, -pkin(1) * t490 + pkin(7) * t478 + t1001 * t464 + t1006 * t463;];
tauB_reg  = t1;
