% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 18:51
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRP10_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP10_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP10_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP10_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP10_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP10_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 18:46:31
% EndTime: 2019-05-06 18:47:26
% DurationCPUTime: 26.86s
% Computational Cost: add. (105897->683), mult. (240890->955), div. (0->0), fcn. (196084->12), ass. (0->434)
t380 = sin(pkin(11));
t382 = cos(pkin(11));
t383 = cos(pkin(6));
t452 = qJD(1) * t383 + qJD(2);
t386 = sin(qJ(2));
t381 = sin(pkin(6));
t475 = qJD(1) * t381;
t461 = t386 * t475;
t354 = -t380 * t461 + t382 * t452;
t355 = t380 * t452 + t382 * t461;
t385 = sin(qJ(4));
t388 = cos(qJ(4));
t328 = -t388 * t354 + t355 * t385;
t325 = qJD(5) + t328;
t531 = t325 ^ 2;
t330 = t354 * t385 + t355 * t388;
t384 = sin(qJ(5));
t387 = cos(qJ(5));
t389 = cos(qJ(2));
t474 = qJD(1) * t389;
t460 = t381 * t474;
t435 = -qJD(4) + t460;
t303 = t330 * t384 + t387 * t435;
t532 = t303 ^ 2;
t275 = t532 - t531;
t470 = qJD(1) * qJD(2);
t458 = t389 * t470;
t469 = qJDD(1) * t381;
t359 = t381 * t458 + t386 * t469;
t450 = qJDD(1) * t383 + qJDD(2);
t334 = t382 * t359 + t380 * t450;
t454 = t380 * t359 - t382 * t450;
t455 = t385 * t334 + t388 * t454;
t269 = -t330 * qJD(4) - t455;
t268 = qJDD(5) - t269;
t305 = t387 * t330 - t384 * t435;
t491 = t305 * t303;
t216 = -t491 - t268;
t505 = t216 * t384;
t175 = -t275 * t387 - t505;
t282 = t325 * t305;
t270 = -qJD(4) * t328 + t334 * t388 - t385 * t454;
t419 = -qJDD(1) * t389 + t386 * t470;
t556 = t419 * t381;
t404 = qJDD(4) + t556;
t456 = -t270 * t384 + t387 * t404;
t425 = qJD(5) * t305 - t456;
t199 = -t282 + t425;
t119 = t175 * t385 - t199 * t388;
t123 = t175 * t388 + t199 * t385;
t504 = t216 * t387;
t171 = -t275 * t384 + t504;
t79 = t119 * t382 + t123 * t380;
t628 = t381 * (t389 * t171 + t386 * (t119 * t380 - t123 * t382)) - t383 * t79;
t394 = -t387 * t270 - t384 * t404;
t393 = -t303 * qJD(5) - t394;
t492 = t303 * t325;
t546 = -t492 + t393;
t506 = t546 * t384;
t554 = t282 + t425;
t129 = t554 * t387 + t506;
t302 = t305 ^ 2;
t552 = t302 - t532;
t100 = t129 * t385 + t388 * t552;
t102 = t129 * t388 - t385 * t552;
t127 = -t554 * t384 + t387 * t546;
t64 = t100 * t382 + t102 * t380;
t626 = t381 * (-t389 * t127 + t386 * (t100 * t380 - t102 * t382)) - t383 * t64;
t553 = -t302 - t531;
t160 = t387 * t553 + t505;
t622 = pkin(2) * t160;
t621 = pkin(3) * t160;
t620 = pkin(4) * t160;
t619 = pkin(10) * t160;
t162 = -t384 * t553 + t504;
t618 = pkin(10) * t162;
t617 = t160 * t389;
t616 = t162 * t385;
t615 = t162 * t388;
t614 = t386 * t160;
t276 = -t302 + t531;
t547 = -t491 + t268;
t503 = t547 * t384;
t586 = t276 * t387 + t503;
t545 = t492 + t393;
t502 = t547 * t387;
t585 = -t276 * t384 + t502;
t598 = t385 * t545 + t388 * t585;
t599 = t385 * t585 - t388 * t545;
t607 = t380 * t598 + t382 * t599;
t612 = t383 * t607 + (t386 * (-t380 * t599 + t382 * t598) - t389 * t586) * t381;
t544 = -t531 - t532;
t565 = t387 * t544 - t503;
t581 = t385 * t554 + t388 * t565;
t582 = t385 * t565 - t388 * t554;
t596 = t380 * t581 + t382 * t582;
t611 = qJ(3) * t596;
t610 = -pkin(2) * t596 - pkin(3) * t582;
t566 = t384 * t544 + t502;
t597 = -t380 * t582 + t382 * t581;
t609 = -pkin(2) * t566 + qJ(3) * t597;
t608 = pkin(1) * (t386 * t597 - t389 * t566);
t606 = pkin(8) * (t386 * t566 + t389 * t597) - pkin(1) * t596;
t603 = pkin(9) * t582;
t600 = -pkin(3) * t566 + pkin(9) * t581;
t593 = pkin(4) * t566;
t592 = pkin(10) * t565;
t591 = pkin(10) * t566;
t488 = t325 * t384;
t193 = t303 * t488 - t387 * t425;
t487 = t325 * t387;
t466 = t303 * t487;
t426 = t384 * t425 + t466;
t468 = t385 * t491;
t536 = t388 * t426 - t468;
t467 = t388 * t491;
t537 = t385 * t426 + t467;
t563 = t380 * t536 + t382 * t537;
t584 = t383 * t563 + (t386 * (-t380 * t537 + t382 * t536) - t389 * t193) * t381;
t271 = t305 * t488;
t443 = t271 - t466;
t535 = t268 * t385 + t388 * t443;
t538 = -t388 * t268 + t385 * t443;
t555 = (t303 * t384 + t305 * t387) * t325;
t564 = t380 * t535 + t382 * t538;
t583 = t383 * t564 + (t386 * (-t380 * t538 + t382 * t535) + t389 * t555) * t381;
t551 = t302 + t532;
t580 = pkin(4) * t551;
t579 = qJ(6) * t546;
t576 = t385 * t551;
t571 = t388 * t551;
t317 = t328 * t435;
t568 = t270 + t317;
t196 = t305 * t487 + t384 * t393;
t197 = t387 * t393 - t271;
t444 = t388 * t197 + t468;
t445 = t385 * t197 - t467;
t483 = t381 * t389;
t484 = t381 * t386;
t534 = t380 * t444 + t382 * t445;
t567 = t383 * t534 + (-t380 * t445 + t382 * t444) * t484 - t196 * t483;
t430 = t435 ^ 2;
t447 = t452 ^ 2;
t377 = t381 ^ 2;
t530 = qJD(1) ^ 2;
t471 = t377 * t530;
t485 = t354 * t355;
t401 = t556 + t485;
t560 = t380 * t401;
t559 = t382 * t401;
t486 = t330 * t328;
t399 = t404 - t486;
t558 = t385 * t399;
t479 = t386 * t377;
t557 = t388 * t399;
t342 = t354 * t460;
t310 = -t342 - t334;
t343 = t355 * t460;
t550 = t343 + t454;
t549 = -t447 * pkin(2) + t450 * qJ(3);
t527 = sin(qJ(1));
t528 = cos(qJ(1));
t418 = g(1) * t528 + g(2) * t527;
t403 = pkin(8) * t469 - t418;
t519 = t530 * pkin(1);
t398 = t403 - t519;
t417 = g(1) * t527 - g(2) * t528;
t406 = qJDD(1) * pkin(1) + t417;
t521 = pkin(8) * t381;
t397 = t521 * t530 + t406;
t395 = t383 * t397;
t448 = g(3) * t483 - t389 * t395;
t321 = t386 * t398 + t448;
t376 = g(3) * t484;
t322 = t386 * t395 + t389 * t398 - t376;
t548 = t386 * t321 + t389 * t322;
t254 = pkin(5) * t303 - qJ(6) * t305;
t525 = pkin(2) * t389;
t439 = -qJ(3) * t386 - t525;
t295 = t386 * t403 - t447 * qJ(3) - t450 * pkin(2) + qJDD(3) + (-t386 * pkin(1) + t439 * t479) * t530 + t448;
t335 = -pkin(3) * t460 - t355 * pkin(9);
t351 = t354 ^ 2;
t229 = pkin(3) * t454 - t351 * pkin(9) + t355 * t335 + t295;
t423 = t435 * t330;
t141 = -t568 * pkin(10) + (-t269 - t423) * pkin(4) + t229;
t424 = t389 * t439;
t391 = t424 * t471 + t322 + t549;
t514 = qJ(3) * t389;
t526 = pkin(2) * t386;
t421 = (-t514 + 0.2e1 * t526) * qJD(2);
t520 = t383 * g(3);
t436 = -t359 * qJ(3) - t520;
t438 = -t514 + t526;
t464 = -pkin(1) - t525;
t392 = (t464 * qJDD(1) + ((t383 * t438 - t521) * qJD(1) + t421) * qJD(1) - t417) * t381 + t436;
t225 = 0.2e1 * qJD(3) * t354 + t380 * t392 + t382 * t391;
t208 = -t351 * pkin(3) - pkin(9) * t454 + t335 * t460 + t225;
t473 = qJD(3) * t355;
t390 = pkin(3) * t401 + pkin(9) * t310 - t380 * t391 + t382 * t392 - 0.2e1 * t473;
t135 = t388 * t208 + t385 * t390;
t286 = pkin(4) * t328 - pkin(10) * t330;
t99 = -pkin(4) * t430 + pkin(10) * t404 - t328 * t286 + t135;
t83 = t384 * t141 + t387 * t99;
t453 = -t268 * qJ(6) + t303 * t254 - t83;
t542 = -pkin(5) * (t553 + t531) - qJ(6) * t216 - t453;
t472 = qJD(6) * t325;
t319 = 0.2e1 * t472;
t440 = t319 - t453;
t55 = -pkin(5) * t531 + t440;
t82 = -t387 * t141 + t384 * t99;
t57 = -t268 * pkin(5) - qJ(6) * t531 + t254 * t305 + qJDD(6) + t82;
t39 = t384 * t57 + t387 * t55;
t457 = qJ(6) * t384 + pkin(4);
t523 = pkin(5) * t387;
t134 = t208 * t385 - t388 * t390;
t98 = -t404 * pkin(4) - t430 * pkin(10) + t286 * t330 + t134;
t402 = t425 * pkin(5) - t579 + t98;
t66 = (pkin(5) * t325 - 0.2e1 * qJD(6)) * t305 + t402;
t541 = -(t457 + t523) * t66 + pkin(10) * t39;
t400 = 0.2e1 * qJD(6) * t305 - t402;
t52 = (-t554 - t282) * pkin(5) + t400;
t540 = t387 * t52 - t457 * t554 + t592;
t51 = -pkin(5) * t282 + t400 + t579;
t539 = -t618 + t546 * (pkin(4) + t523) + t384 * t51;
t326 = t328 ^ 2;
t327 = t330 ^ 2;
t352 = t355 ^ 2;
t524 = pkin(4) * t385;
t522 = pkin(8) * t380;
t85 = -t134 * t388 + t135 * t385;
t518 = t380 * t85;
t517 = t382 * t85;
t516 = t384 * t98;
t515 = t387 * t98;
t513 = qJ(6) * t387;
t508 = t545 * t384;
t507 = t545 * t387;
t501 = t229 * t385;
t500 = t229 * t388;
t278 = -t486 - t404;
t496 = t278 * t385;
t495 = t278 * t388;
t494 = t295 * t380;
t493 = t295 * t382;
t314 = -t556 + t485;
t490 = t314 * t380;
t489 = t314 * t382;
t482 = t383 * t386;
t370 = t389 * t386 * t471;
t358 = t370 + t450;
t480 = t386 * t358;
t357 = -t370 + t450;
t477 = t389 * t357;
t465 = t389 * t486;
t463 = -pkin(4) * t388 - pkin(3);
t459 = t386 ^ 2 * t471;
t42 = t384 * t82 + t387 * t83;
t86 = t134 * t385 + t388 * t135;
t224 = t380 * (t389 * (-t418 - t519) + t406 * t482 - t376 + t549) - t382 * t436 + 0.2e1 * t473 + (t382 * t417 + (-t382 * t464 + t389 * t522) * qJDD(1) + (((t382 * pkin(8) + t380 * t424) * t381 + (-t382 * t438 + t386 * t522) * t383) * qJD(1) - t382 * t421) * qJD(1)) * t381;
t159 = t224 * t380 + t382 * t225;
t451 = t483 * t485;
t449 = -pkin(4) * t98 + pkin(10) * t42;
t446 = -pkin(5) * t57 + qJ(6) * t55;
t437 = -pkin(5) * t545 - qJ(6) * t199;
t41 = t384 * t83 - t387 * t82;
t433 = t224 * t382 - t225 * t380;
t431 = t458 * t479;
t429 = -pkin(1) + t439;
t420 = t452 * t475;
t416 = -pkin(4) * t554 - t515 + t592;
t206 = (qJD(5) + t325) * t303 + t394;
t415 = pkin(4) * t206 + t516 + t618;
t414 = t385 * t317;
t413 = t385 * t423;
t412 = t388 * t317;
t411 = t388 * t423;
t201 = (-qJD(5) + t325) * t305 + t456;
t132 = t201 * t387 + t508;
t410 = pkin(10) * t132 + t42 + t580;
t407 = -t330 * t460 - t455;
t130 = -t199 * t387 + t508;
t49 = (t551 - t531) * pkin(5) + t440;
t50 = qJ(6) * t551 + t57;
t405 = pkin(10) * t130 + t384 * t50 + t387 * t49 + t580;
t396 = pkin(5) * t547 + qJ(6) * t544 - t57;
t375 = t389 ^ 2 * t471;
t363 = t389 * t420;
t362 = t386 * t420;
t361 = -t375 + t459;
t360 = -t375 - t447;
t350 = -t459 - t447;
t348 = t377 * t389 * t419;
t344 = t381 * t397 + t520;
t341 = -t352 - t375;
t340 = -t352 + t375;
t339 = t351 - t375;
t338 = -t362 - t556;
t337 = t362 - t556;
t336 = -t363 + t359;
t324 = -t375 - t351;
t313 = -t342 + t334;
t311 = -t343 + t454;
t309 = -t327 + t430;
t308 = t326 - t430;
t307 = (-t354 * t380 + t355 * t382) * t460;
t306 = -t351 - t352;
t299 = t380 * t334 - t343 * t382;
t298 = t342 * t380 - t382 * t454;
t296 = -t327 - t430;
t292 = -t341 * t380 + t489;
t291 = t339 * t380 - t489;
t290 = t340 * t382 + t560;
t289 = t341 * t382 + t490;
t288 = t327 - t326;
t285 = -t430 - t326;
t273 = t324 * t382 - t560;
t272 = t324 * t380 + t559;
t267 = t412 - t413;
t266 = t414 + t411;
t262 = -t310 * t380 - t382 * t550;
t260 = -t311 * t380 + t313 * t382;
t253 = -t326 - t327;
t249 = t270 - t317;
t245 = (0.2e1 * qJD(4) - t460) * t330 + t455;
t242 = t308 * t388 + t496;
t241 = -t309 * t385 + t557;
t240 = t308 * t385 - t495;
t239 = t309 * t388 + t558;
t238 = t388 * t270 + t413;
t237 = t385 * t270 - t411;
t236 = -t385 * t269 - t412;
t235 = t388 * t269 - t414;
t234 = -t296 * t385 + t495;
t233 = t296 * t388 + t496;
t222 = t285 * t388 - t558;
t221 = t285 * t385 + t557;
t211 = t266 * t382 + t267 * t380;
t210 = -pkin(2) * t313 + qJ(3) * t292 + t494;
t209 = -pkin(2) * t311 + qJ(3) * t273 - t493;
t186 = t249 * t385 + t388 * t407;
t185 = -t245 * t388 - t385 * t568;
t184 = -t249 * t388 + t385 * t407;
t183 = -t245 * t385 + t388 * t568;
t178 = t240 * t382 + t242 * t380;
t177 = t239 * t382 + t241 * t380;
t168 = t237 * t382 + t238 * t380;
t167 = t235 * t382 + t236 * t380;
t166 = -t233 * t380 + t234 * t382;
t165 = t233 * t382 + t234 * t380;
t164 = -pkin(9) * t233 + t500;
t157 = -pkin(9) * t221 + t501;
t144 = -t221 * t380 + t222 * t382;
t143 = t221 * t382 + t222 * t380;
t142 = -pkin(2) * t295 + qJ(3) * t159;
t138 = -pkin(3) * t568 + pkin(9) * t234 + t501;
t137 = -pkin(3) * t245 + pkin(9) * t222 - t500;
t136 = -pkin(2) * t306 + qJ(3) * t262 + t159;
t128 = t201 * t384 - t507;
t126 = -t199 * t384 - t507;
t116 = -t184 * t380 + t186 * t382;
t115 = t184 * t382 + t186 * t380;
t114 = t183 * t382 + t185 * t380;
t110 = -t206 * t385 + t615;
t108 = t206 * t388 + t616;
t106 = -t385 * t546 - t615;
t104 = t388 * t546 - t616;
t96 = t132 * t388 - t576;
t95 = t130 * t388 - t576;
t94 = t132 * t385 + t571;
t93 = t130 * t385 + t571;
t88 = t515 - t619;
t87 = t516 - t591;
t84 = -pkin(4) * t126 - t437;
t76 = -pkin(3) * t229 + pkin(9) * t86;
t74 = -t108 * t380 + t110 * t382;
t72 = t108 * t382 + t110 * t380;
t70 = -t104 * t380 + t106 * t382;
t68 = t104 * t382 + t106 * t380;
t67 = -pkin(2) * t568 + qJ(3) * t166 + t138 * t382 + t164 * t380;
t63 = -pkin(9) * t184 - t85;
t62 = -pkin(2) * t245 + qJ(3) * t144 + t137 * t382 + t157 * t380;
t61 = -t380 * t94 + t382 * t96;
t60 = -t380 * t93 + t382 * t95;
t59 = t380 * t96 + t382 * t94;
t58 = t380 * t95 + t382 * t93;
t56 = -pkin(3) * t253 + pkin(9) * t186 + t86;
t54 = t83 - t620;
t53 = t82 - t593;
t48 = -t396 - t593;
t47 = t382 * t86 - t518;
t46 = t380 * t86 + t517;
t45 = -t384 * t52 - t513 * t554 - t591;
t44 = -pkin(5) * t506 + t387 * t51 + t619;
t43 = -0.2e1 * t472 - t542 + t620;
t40 = -pkin(10) * t128 - t41;
t38 = t384 * t55 - t387 * t57;
t37 = t385 * t98 + t388 * t42;
t36 = t385 * t42 - t388 * t98;
t35 = -pkin(9) * t108 - t385 * t54 + t388 * t88;
t34 = -t385 * t53 + t388 * t87 - t603;
t33 = pkin(9) * t110 + t385 * t88 + t388 * t54 - t621;
t32 = t385 * t87 + t388 * t53 + t600;
t31 = -pkin(2) * t253 + qJ(3) * t116 + t380 * t63 + t382 * t56;
t30 = -pkin(10) * t126 - t384 * t49 + t387 * t50;
t29 = -pkin(9) * t94 + t128 * t524 + t388 * t40;
t28 = t385 * t66 + t388 * t39;
t27 = t385 * t39 - t388 * t66;
t26 = -pkin(2) * t229 - pkin(9) * t518 + qJ(3) * t47 + t382 * t76;
t25 = pkin(9) * t96 + t128 * t463 + t385 * t40;
t24 = -t385 * t48 + t388 * t45 - t603;
t23 = -pkin(9) * t104 - t385 * t43 + t388 * t44;
t22 = t385 * t45 + t388 * t48 + t600;
t21 = pkin(9) * t106 + t385 * t44 + t388 * t43 + t621;
t20 = -pkin(10) * t38 + (pkin(5) * t384 - t513) * t66;
t19 = -pkin(9) * t93 + t30 * t388 - t385 * t84;
t18 = -pkin(4) * t38 - t446;
t17 = -t36 * t380 + t37 * t382;
t16 = t36 * t382 + t37 * t380;
t15 = -pkin(3) * t126 + pkin(9) * t95 + t30 * t385 + t388 * t84;
t14 = -pkin(9) * t36 + (-pkin(10) * t388 + t524) * t41;
t13 = qJ(3) * t74 + t33 * t382 + t35 * t380 - t622;
t12 = t32 * t382 + t34 * t380 + t609;
t11 = -t27 * t380 + t28 * t382;
t10 = t27 * t382 + t28 * t380;
t9 = pkin(9) * t37 + (-pkin(10) * t385 + t463) * t41;
t8 = -pkin(2) * t128 + qJ(3) * t61 + t25 * t382 + t29 * t380;
t7 = t22 * t382 + t24 * t380 + t609;
t6 = qJ(3) * t70 + t21 * t382 + t23 * t380 + t622;
t5 = -pkin(2) * t126 + qJ(3) * t60 + t15 * t382 + t19 * t380;
t4 = -pkin(9) * t27 - t18 * t385 + t20 * t388;
t3 = -pkin(3) * t38 + pkin(9) * t28 + t18 * t388 + t20 * t385;
t2 = -pkin(2) * t41 + qJ(3) * t17 + t14 * t380 + t382 * t9;
t1 = -pkin(2) * t38 + qJ(3) * t11 + t3 * t382 + t380 * t4;
t65 = [0, 0, 0, 0, 0, qJDD(1), t417, t418, 0, 0, t359 * t484 + t431, t383 * t361 + (t386 * t338 + t389 * (t363 + t359)) * t381, t383 * t336 + (t480 + t389 * (t447 - t459)) * t381, -t348 - t431, t383 * t337 + (t386 * (t375 - t447) + t477) * t381, t383 * t450, (-t321 + pkin(1) * (t358 * t389 + t360 * t386)) * t383 + (t389 * t344 + pkin(1) * t338 + pkin(8) * (t360 * t389 - t480)) * t381, -t344 * t484 - t383 * t322 + pkin(1) * (-t357 * t482 + t383 * t389 * t350 - t381 * (t452 * t460 + t359)) + (-t386 * t350 - t477) * t521, pkin(1) * (-t336 * t389 + t337 * t386) * t383 + (t386 * t336 + t337 * t389) * t521 + (pkin(1) * (t375 + t459) + t548) * t381, pkin(1) * (t381 * t344 + (-t321 * t389 + t322 * t386) * t383) + t548 * t521, (t382 * t334 + t343 * t380) * t484 + t451 + t383 * t299, t383 * t260 + (t386 * (-t311 * t382 - t313 * t380) + t389 * (-t352 + t351)) * t381, t383 * t290 + (t386 * (-t340 * t380 + t559) + t389 * t310) * t381, (t342 * t382 + t380 * t454) * t484 - t451 + t383 * t298, t383 * t291 + (t386 * (t339 * t382 + t490) + t389 * t550) * t381, t383 * t307 - t348 + (-t354 * t382 - t355 * t380) * t474 * t479, (-qJ(3) * t272 + t494) * t484 + (-pkin(2) * t272 + t224) * t483 + t383 * t209 + pkin(1) * (-t381 * t272 + (t273 * t386 - t311 * t389) * t383) + (t273 * t389 + t386 * t311) * t521, (t210 + pkin(1) * (t292 * t386 - t313 * t389)) * t383 + (t386 * (-qJ(3) * t289 + t493) + t389 * (-pkin(2) * t289 + t225) - pkin(1) * t289 + pkin(8) * (t292 * t389 + t386 * t313)) * t381, (t136 + pkin(1) * (t262 * t386 - t306 * t389)) * t383 + (t386 * t433 + pkin(8) * (t262 * t389 + t386 * t306) + t429 * (t310 * t382 - t380 * t550)) * t381, (t142 + pkin(1) * (t159 * t386 - t295 * t389)) * t383 + (pkin(8) * (t159 * t389 + t386 * t295) - t429 * t433) * t381, t383 * t168 + (t386 * (-t237 * t380 + t238 * t382) - t465) * t381, t383 * t114 + (t386 * (-t183 * t380 + t185 * t382) - t389 * t288) * t381, t383 * t177 + (t386 * (-t239 * t380 + t241 * t382) - t389 * t249) * t381, t383 * t167 + (t386 * (-t235 * t380 + t236 * t382) + t465) * t381, t383 * t178 + (t386 * (-t240 * t380 + t242 * t382) - t389 * t407) * t381, t383 * t211 + (t386 * (-t266 * t380 + t267 * t382) - t404 * t389) * t381, (t62 + pkin(1) * (t144 * t386 - t245 * t389)) * t383 + (t386 * (-qJ(3) * t143 - t137 * t380 + t157 * t382) + t389 * (-pkin(2) * t143 - pkin(3) * t221 + t134) - pkin(1) * t143 + pkin(8) * (t144 * t389 + t386 * t245)) * t381, (t67 + pkin(1) * (t166 * t386 - t389 * t568)) * t383 + (t386 * (-qJ(3) * t165 - t138 * t380 + t164 * t382) + t389 * (-pkin(2) * t165 - pkin(3) * t233 + t135) - pkin(1) * t165 + pkin(8) * (t166 * t389 + t386 * t568)) * t381, (t31 + pkin(1) * (t116 * t386 - t253 * t389)) * t383 + (t386 * (-qJ(3) * t115 - t380 * t56 + t382 * t63) + t389 * (-pkin(2) * t115 - pkin(3) * t184) - pkin(1) * t115 + pkin(8) * (t116 * t389 + t386 * t253)) * t381, (t26 + pkin(1) * (-t229 * t389 + t386 * t47)) * t383 + (t386 * (-pkin(9) * t517 - qJ(3) * t46 - t380 * t76) + t389 * (-pkin(2) * t46 - pkin(3) * t85) - pkin(1) * t46 + pkin(8) * (t386 * t229 + t389 * t47)) * t381, t567, t626, t612, t584, t628, t583, (t12 + t608) * t383 + (t386 * (-t32 * t380 + t34 * t382 - t611) + t389 * (-t416 + t610) + t606) * t381, (t13 + pkin(1) * (t386 * t74 - t617)) * t383 + (t386 * (-qJ(3) * t72 - t33 * t380 + t35 * t382) + t389 * (-pkin(2) * t72 - pkin(3) * t108 - t415) - pkin(1) * t72 + pkin(8) * (t389 * t74 + t614)) * t381, (t8 + pkin(1) * (-t128 * t389 + t386 * t61)) * t383 + (t386 * (-qJ(3) * t59 - t25 * t380 + t29 * t382) + t389 * (-pkin(2) * t59 - pkin(3) * t94 - t410) - pkin(1) * t59 + pkin(8) * (t386 * t128 + t389 * t61)) * t381, (t2 + pkin(1) * (t17 * t386 - t389 * t41)) * t383 + (t386 * (-qJ(3) * t16 + t14 * t382 - t380 * t9) + t389 * (-pkin(2) * t16 - pkin(3) * t36 - t449) - pkin(1) * t16 + pkin(8) * (t17 * t389 + t386 * t41)) * t381, t567, t612, -t626, t583, -t628, t584, (t7 + t608) * t383 + (t386 * (-t22 * t380 + t24 * t382 - t611) + t389 * (-t540 + t610) + t606) * t381, (t5 + pkin(1) * (-t126 * t389 + t386 * t60)) * t383 + (t386 * (-qJ(3) * t58 - t15 * t380 + t19 * t382) + t389 * (-pkin(2) * t58 - pkin(3) * t93 - t405) - pkin(1) * t58 + pkin(8) * (t386 * t126 + t389 * t60)) * t381, (t6 + pkin(1) * (t386 * t70 + t617)) * t383 + (t386 * (-qJ(3) * t68 - t21 * t380 + t23 * t382) + t389 * (-pkin(2) * t68 - pkin(3) * t104 - t539) - pkin(1) * t68 + pkin(8) * (t389 * t70 - t614)) * t381, (t1 + pkin(1) * (t11 * t386 - t38 * t389)) * t383 + (-pkin(1) * t10 + (pkin(8) * t38 - qJ(3) * t10 - t3 * t380 + t382 * t4) * t386 + (-pkin(2) * t10 - pkin(3) * t27 + pkin(8) * t11 - t541) * t389) * t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370, t361, t336, t370, t337, t450, -t321, -t322, 0, 0, t299, t260, t290, t298, t291, t307, t209, t210, t136, t142, t168, t114, t177, t167, t178, t211, t62, t67, t31, t26, t534, -t64, t607, t563, -t79, t564, t12, t13, t8, t2, t534, t607, t64, t564, t79, t563, t7, t5, t6, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t313, t306, t295, 0, 0, 0, 0, 0, 0, t245, t568, t253, t229, 0, 0, 0, 0, 0, 0, t566, t160, t128, t41, 0, 0, 0, 0, 0, 0, t566, t126, -t160, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, t288, t249, -t486, t407, t404, -t134, -t135, 0, 0, t196, t127, t586, t193, -t171, -t555, t416, t415, t410, t449, t196, t586, -t127, -t555, t171, t193, t540, t405, t539, t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, t552, t545, -t491, -t199, t268, -t82, -t83, 0, 0, t491, t545, -t552, t268, t199, -t491, t396, t437, t319 + t542, t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, t545, t553, t57;];
tauJ_reg  = t65;
