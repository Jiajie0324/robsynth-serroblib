% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP10_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP10_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP10_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP10_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:42:32
% EndTime: 2019-03-09 12:42:54
% DurationCPUTime: 8.00s
% Computational Cost: add. (13976->536), mult. (36909->742), div. (0->0), fcn. (29827->10), ass. (0->247)
t232 = sin(pkin(6));
t231 = sin(pkin(11));
t233 = cos(pkin(11));
t236 = sin(qJ(4));
t239 = cos(qJ(4));
t196 = t231 * t236 - t239 * t233;
t240 = cos(qJ(2));
t259 = t240 * t196;
t252 = t232 * t259;
t165 = qJD(1) * t252;
t193 = t196 * qJD(4);
t364 = t193 - t165;
t197 = t231 * t239 + t233 * t236;
t328 = t232 * t240;
t253 = t197 * t328;
t322 = -qJD(1) * t253 + t197 * qJD(4);
t237 = sin(qJ(2));
t277 = pkin(2) * t237 - qJ(3) * t240;
t320 = qJD(1) * t232;
t186 = t277 * t320;
t318 = qJD(1) * t237;
t300 = t232 * t318;
t234 = cos(pkin(6));
t319 = qJD(1) * t234;
t306 = pkin(1) * t319;
t187 = -pkin(8) * t300 + t240 * t306;
t135 = t233 * t186 - t231 * t187;
t327 = t233 * t240;
t256 = (pkin(3) * t237 - pkin(9) * t327) * t232;
t111 = qJD(1) * t256 + t135;
t136 = t231 * t186 + t233 * t187;
t317 = qJD(1) * t240;
t221 = t232 * t317;
t282 = t231 * t221;
t120 = -pkin(9) * t282 + t136;
t355 = pkin(9) + qJ(3);
t210 = t355 * t231;
t211 = t355 * t233;
t268 = -t239 * t210 - t236 * t211;
t301 = -t196 * qJD(3) + t268 * qJD(4) - t236 * t111 - t239 * t120;
t222 = qJD(2) + t319;
t175 = t222 * t233 - t231 * t300;
t176 = t222 * t231 + t233 * t300;
t270 = t239 * t175 - t176 * t236;
t370 = qJD(5) - t270;
t289 = t370 ^ 2;
t375 = pkin(10) * t300 - t301;
t188 = pkin(8) * t221 + t237 * t306;
t157 = pkin(3) * t282 + t188;
t374 = t322 * pkin(4) + pkin(10) * t364 - t157;
t235 = sin(qJ(5));
t238 = cos(qJ(5));
t269 = t175 * t236 + t176 * t239;
t308 = t221 - qJD(4);
t104 = -t235 * t308 + t238 * t269;
t287 = t370 * t235;
t378 = t104 * t287;
t257 = t270 * qJD(4);
t314 = qJD(4) * t239;
t315 = qJD(4) * t236;
t166 = qJ(3) * t222 + t188;
t183 = (-pkin(2) * t240 - qJ(3) * t237 - pkin(1)) * t232;
t170 = qJD(1) * t183;
t113 = -t166 * t231 + t233 * t170;
t70 = -pkin(3) * t221 - pkin(9) * t176 + t113;
t168 = (t277 * qJD(2) - qJD(3) * t237) * t232;
t153 = qJD(1) * t168;
t307 = qJD(1) * qJD(2);
t296 = t232 * t307;
t279 = t237 * t296;
t305 = pkin(1) * qJD(2) * t234;
t283 = qJD(1) * t305;
t260 = -pkin(8) * t279 + t240 * t283;
t154 = qJD(3) * t222 + t260;
t107 = t233 * t153 - t231 * t154;
t250 = qJD(2) * t256;
t71 = qJD(1) * t250 + t107;
t114 = t233 * t166 + t231 * t170;
t85 = pkin(9) * t175 + t114;
t108 = t231 * t153 + t233 * t154;
t280 = t240 * t296;
t267 = t231 * t280;
t86 = -pkin(9) * t267 + t108;
t264 = -t236 * t71 - t239 * t86 - t70 * t314 + t85 * t315;
t13 = pkin(10) * t279 - t264;
t311 = qJD(5) * t238;
t312 = qJD(5) * t235;
t181 = pkin(8) * t280 + t237 * t283;
t149 = pkin(3) * t267 + t181;
t248 = qJD(2) * t252;
t245 = qJD(1) * t248;
t243 = t257 - t245;
t249 = qJD(2) * t253;
t246 = qJD(1) * t249;
t362 = t269 * qJD(4);
t84 = t246 + t362;
t33 = t84 * pkin(4) - pkin(10) * t243 + t149;
t40 = t236 * t70 + t239 * t85;
t37 = -t308 * pkin(10) + t40;
t159 = -pkin(2) * t222 + qJD(3) - t187;
t124 = -pkin(3) * t175 + t159;
t49 = -pkin(4) * t270 - pkin(10) * t269 + t124;
t3 = t238 * t13 + t235 * t33 + t49 * t311 - t37 * t312;
t344 = t84 * qJ(6);
t1 = qJD(6) * t370 + t3 + t344;
t15 = -t235 * t37 + t238 * t49;
t326 = qJD(6) - t15;
t9 = -pkin(5) * t370 + t326;
t377 = t370 * t9 + t1;
t16 = t235 * t49 + t238 * t37;
t10 = qJ(6) * t370 + t16;
t295 = t235 * t13 - t238 * t33 + t37 * t311 + t49 * t312;
t358 = pkin(5) * t84;
t2 = t295 - t358;
t376 = t10 * t370 - t2;
t288 = t238 * t308;
t102 = t235 * t269 + t288;
t373 = t102 * t270;
t372 = t270 * t221;
t163 = -t210 * t236 + t211 * t239;
t371 = t197 * qJD(3) + t163 * qJD(4) + t111 * t239 - t236 * t120;
t336 = t370 * t238;
t74 = t235 * t84;
t369 = -t270 * t336 + t311 * t370 + t74;
t341 = pkin(4) * t300 + t371;
t366 = t102 * t269;
t76 = t238 * t84;
t367 = -t235 * t289 - t366 + t76;
t335 = t269 * t104;
t365 = t269 * t221;
t227 = -pkin(3) * t233 - pkin(2);
t146 = pkin(4) * t196 - pkin(10) * t197 + t227;
t324 = t235 * t146 + t238 * t163;
t313 = qJD(5) * t104;
t46 = t235 * t243 - t238 * t279 + t313;
t363 = -t146 * t311 + t163 * t312 - t235 * t374 + t238 * t375;
t39 = -t236 * t85 + t239 * t70;
t36 = t308 * pkin(4) - t39;
t19 = t102 * pkin(5) - t104 * qJ(6) + t36;
t357 = pkin(10) * t84;
t361 = t19 * t370 - t357;
t316 = qJD(2) * t237;
t299 = t232 * t316;
t266 = -pkin(8) * t299 + t240 * t305;
t174 = qJD(3) * t234 + t266;
t119 = t231 * t168 + t233 * t174;
t298 = qJD(2) * t328;
t281 = t231 * t298;
t106 = -pkin(9) * t281 + t119;
t356 = pkin(1) * t237;
t182 = pkin(8) * t328 + (qJ(3) + t356) * t234;
t132 = t233 * t182 + t231 * t183;
t329 = t232 * t237;
t191 = t231 * t329 - t234 * t233;
t110 = -pkin(9) * t191 + t132;
t118 = t233 * t168 - t231 * t174;
t90 = t118 + t250;
t131 = -t182 * t231 + t233 * t183;
t192 = t231 * t234 + t233 * t329;
t93 = -pkin(3) * t328 - pkin(9) * t192 + t131;
t261 = t239 * t106 - t110 * t315 + t236 * t90 + t93 * t314;
t23 = pkin(10) * t299 + t261;
t343 = t239 * t110 + t236 * t93;
t52 = -pkin(10) * t328 + t343;
t139 = t239 * t191 + t192 * t236;
t140 = -t191 * t236 + t192 * t239;
t185 = pkin(8) * t329 + (-pkin(1) * t240 - pkin(2)) * t234;
t144 = t191 * pkin(3) + t185;
t62 = t139 * pkin(4) - t140 * pkin(10) + t144;
t273 = t235 * t62 + t238 * t52;
t189 = pkin(8) * t298 + t237 * t305;
t158 = pkin(3) * t281 + t189;
t98 = -t139 * qJD(4) - t248;
t99 = t140 * qJD(4) + t249;
t44 = pkin(4) * t99 - pkin(10) * t98 + t158;
t360 = -t273 * qJD(5) - t235 * t23 + t238 * t44;
t359 = t104 ^ 2;
t230 = t240 ^ 2;
t354 = -t322 * qJ(6) - qJD(6) * t196 + t363;
t353 = t322 * pkin(5) - qJD(5) * t324 + t375 * t235 + t374 * t238;
t137 = -t165 * t235 - t238 * t300;
t138 = -t165 * t238 + t235 * t300;
t275 = pkin(5) * t235 - qJ(6) * t238;
t276 = pkin(5) * t238 + qJ(6) * t235;
t352 = pkin(5) * t137 - qJ(6) * t138 + t275 * t193 - (t276 * qJD(5) - qJD(6) * t238) * t197 - t341;
t64 = pkin(4) * t269 - pkin(10) * t270;
t351 = t235 * t64 + t238 * t39;
t350 = -t102 * t311 - t235 * t46;
t347 = t104 * t19;
t346 = t40 * t237;
t45 = qJD(5) * t288 - t235 * t279 - t238 * t243 + t269 * t312;
t345 = t45 * t235;
t340 = -t235 * qJD(6) + t370 * t275 - t40;
t339 = t104 * t102;
t338 = t113 * t237;
t337 = t114 * t237;
t333 = t197 * t235;
t332 = t197 * t238;
t228 = t232 ^ 2;
t331 = t228 * qJD(1) ^ 2;
t330 = t231 * t240;
t321 = t237 ^ 2 - t230;
t310 = qJD(2) - t222;
t304 = pkin(10) * t312;
t303 = t240 * t331;
t302 = t235 * t328;
t297 = t228 * t307;
t294 = -t236 * t86 + t239 * t71 - t85 * t314 - t70 * t315;
t293 = -t236 * t110 + t239 * t93;
t291 = t193 * t235 + t137;
t290 = -t193 * t238 - t138;
t286 = t308 * t232;
t285 = t222 + t319;
t284 = 0.2e1 * t297;
t51 = pkin(4) * t328 - t293;
t278 = -0.2e1 * pkin(1) * t297;
t272 = -t235 * t52 + t238 * t62;
t271 = -t236 * t106 - t110 * t314 + t239 * t90 - t93 * t315;
t265 = t16 * t370 - t295;
t121 = t140 * t235 + t238 * t328;
t263 = t238 * t23 + t235 * t44 + t62 * t311 - t52 * t312;
t262 = t36 * t370 - t357;
t255 = t197 * t311 - t291;
t254 = t197 * t312 - t290;
t14 = -pkin(4) * t279 - t294;
t24 = -pkin(4) * t299 - t271;
t247 = t197 * t280;
t244 = -qJ(3) * t316 + (-pkin(2) * qJD(2) + qJD(3) - t159) * t240;
t205 = -pkin(4) - t276;
t122 = t140 * t238 - t302;
t112 = t275 * t197 - t268;
t81 = -pkin(5) * t196 - t146 * t238 + t163 * t235;
t80 = qJ(6) * t196 + t324;
t56 = -qJD(5) * t302 + t140 * t311 + t235 * t98 - t238 * t299;
t55 = qJD(5) * t121 - t235 * t299 - t238 * t98;
t54 = pkin(5) * t104 + qJ(6) * t102;
t27 = pkin(5) * t121 - qJ(6) * t122 + t51;
t26 = t102 * t370 - t45;
t21 = -pkin(5) * t139 - t272;
t20 = qJ(6) * t139 + t273;
t18 = -pkin(5) * t269 + t235 * t39 - t238 * t64;
t17 = qJ(6) * t269 + t351;
t8 = pkin(5) * t56 + qJ(6) * t55 - qJD(6) * t122 + t24;
t7 = pkin(5) * t46 + qJ(6) * t45 - qJD(6) * t104 + t14;
t6 = -t99 * pkin(5) - t360;
t5 = qJ(6) * t99 + qJD(6) * t139 + t263;
t4 = [0, 0, 0, t237 * t240 * t284, -t321 * t284, t285 * t298, -t285 * t299, 0, -t181 * t234 - t189 * t222 + t237 * t278, -t222 * t266 - t234 * t260 + t240 * t278, -t189 * t175 + t181 * t191 + ((-qJD(1) * t118 - t107) * t240 + (t159 * t330 + t338 + (t131 * t237 + t185 * t330) * qJD(1)) * qJD(2)) * t232, t189 * t176 + t181 * t192 + ((qJD(1) * t119 + t108) * t240 + (t159 * t327 - t337 + (-t132 * t237 + t185 * t327) * qJD(1)) * qJD(2)) * t232, -t107 * t192 - t108 * t191 - t118 * t176 + t119 * t175 + (-t113 * t233 - t114 * t231 + (-t131 * t233 - t132 * t231) * qJD(1)) * t298, t107 * t131 + t108 * t132 + t113 * t118 + t114 * t119 + t159 * t189 + t181 * t185, t140 * t243 + t269 * t98, -t139 * t243 - t140 * t84 - t269 * t99 + t270 * t98, -t98 * t308 + (-t240 * t257 + (t269 * t237 + (t196 * t232 * t230 + t140 * t237) * qJD(1)) * qJD(2)) * t232, t99 * t308 + (t84 * t240 + (-qJD(1) * t139 + t270) * t316) * t232 (-t228 * t317 - t286) * t316, -t271 * t308 - t158 * t270 + t144 * t84 + t149 * t139 + t124 * t99 + (-t294 * t240 + (qJD(1) * t293 + t39) * t316) * t232, t261 * t308 + t158 * t269 + t144 * (t175 * t314 - t176 * t315) + t149 * t140 + t124 * t98 + (-t264 * t240 + (-t346 + (-t144 * t259 - t237 * t343) * qJD(1)) * qJD(2)) * t232, -t104 * t55 - t122 * t45, t102 * t55 - t104 * t56 + t121 * t45 - t122 * t46, t104 * t99 + t122 * t84 - t139 * t45 - t370 * t55, -t102 * t99 - t121 * t84 - t139 * t46 - t370 * t56, t139 * t84 + t370 * t99, t24 * t102 + t14 * t121 - t139 * t295 + t15 * t99 + t272 * t84 + t36 * t56 + t360 * t370 + t51 * t46, t24 * t104 + t14 * t122 - t3 * t139 - t16 * t99 - t263 * t370 - t273 * t84 - t36 * t55 - t51 * t45, t102 * t8 + t121 * t7 - t139 * t2 + t19 * t56 - t21 * t84 + t27 * t46 - t370 * t6 - t9 * t99, -t1 * t121 - t10 * t56 - t102 * t5 + t104 * t6 + t122 * t2 - t20 * t46 - t21 * t45 - t55 * t9, t1 * t139 + t10 * t99 - t104 * t8 - t122 * t7 + t19 * t55 + t20 * t84 + t27 * t45 + t370 * t5, t1 * t20 + t10 * t5 + t19 * t8 + t2 * t21 + t27 * t7 + t6 * t9; 0, 0, 0, -t237 * t303, t321 * t331, t310 * t221, -t310 * t300, 0, t188 * t222 + t331 * t356 - t181, pkin(1) * t303 + t187 * t222 - t260, t188 * t175 - t181 * t233 + (t135 * t240 + t231 * t244 - t338) * t320, -t188 * t176 + t181 * t231 + (-t136 * t240 + t233 * t244 + t337) * t320, t135 * t176 - t136 * t175 + (qJD(3) * t175 + t113 * t221 + t108) * t233 + (qJD(3) * t176 + t114 * t221 - t107) * t231, -t181 * pkin(2) - t113 * t135 - t114 * t136 - t159 * t188 + (-t113 * t231 + t114 * t233) * qJD(3) + (-t107 * t231 + t108 * t233) * qJ(3), t197 * t243 - t269 * t364, -t196 * t243 - t197 * t84 - t269 * t322 - t270 * t364 (qJD(2) * t197 - t269) * t300 + t364 * t308 (-qJD(2) * t196 - t270) * t300 + t322 * t308, t286 * t318, t227 * t84 + t149 * t196 + t157 * t270 + t322 * t124 + (qJD(2) * t268 - t39) * t300 + t371 * t308, -t157 * t269 + t149 * t197 + t301 * t221 + (t227 * t270 - t301) * qJD(4) - t364 * t124 + (t346 + (-t163 * t237 - t227 * t259) * qJD(2)) * t320, -t104 * t254 - t332 * t45, t291 * t104 - t290 * t102 + (t345 - t238 * t46 + (t102 * t235 - t104 * t238) * qJD(5)) * t197, t104 * t322 - t45 * t196 - t254 * t370 + t332 * t84, -t102 * t322 - t46 * t196 - t255 * t370 - t333 * t84, t84 * t196 + t322 * t370, -t36 * t137 - t268 * t46 - t295 * t196 + t322 * t15 + t341 * t102 + (t36 * qJD(5) * t197 + t146 * t84 + (-qJD(5) * t163 + t374) * t370) * t238 + (t14 * t197 - t163 * t84 - t36 * t193 + (-qJD(5) * t146 + t375) * t370) * t235, t341 * t104 + t14 * t332 - t322 * t16 - t3 * t196 - t254 * t36 + t268 * t45 - t324 * t84 + t363 * t370, -t102 * t352 + t112 * t46 + t19 * t255 - t2 * t196 - t322 * t9 + t333 * t7 + t353 * t370 - t81 * t84, -t81 * t45 - t80 * t46 + t290 * t9 - t353 * t104 + t354 * t102 + t291 * t10 + (-t1 * t235 + t2 * t238 + (-t10 * t238 - t235 * t9) * qJD(5)) * t197, t1 * t196 + t10 * t322 + t104 * t352 + t112 * t45 + t19 * t254 - t332 * t7 - t354 * t370 + t80 * t84, t1 * t80 - t10 * t354 + t112 * t7 - t19 * t352 + t2 * t81 - t353 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(2) * t231 - t176) * t221 (qJD(2) * t233 - t175) * t221, -t175 ^ 2 - t176 ^ 2, t113 * t176 - t114 * t175 + t181, 0, 0, 0, 0, 0, t246 + 0.2e1 * t362 - t365, -t245 - t372 + 0.2e1 * t257, 0, 0, 0, 0, 0, t367, -t238 * t289 - t335 - t74, t367 (t45 + t373) * t238 + t378 + t350, t335 + t369, -t19 * t269 + t235 * t377 + t238 * t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269 * t270, t269 ^ 2 - t270 ^ 2, t372 - t245, -t247 - t365, t279, -t124 * t269 - t308 * t40 + t294, -t124 * t270 - t308 * t39 + t264, t104 * t336 - t345 (-t45 + t373) * t238 - t378 + t350, -t335 + t369, -t287 * t370 + t366 + t76, -t370 * t269, -pkin(4) * t46 - t40 * t102 - t15 * t269 + (-t14 + (-pkin(10) * qJD(5) - t64) * t370) * t238 + (t370 * t39 + t262) * t235, pkin(4) * t45 - t40 * t104 + t16 * t269 + t14 * t235 + (t304 + t351) * t370 + t262 * t238, t9 * t269 + t205 * t46 - t7 * t238 + (-pkin(10) * t311 + t18) * t370 + t340 * t102 + t361 * t235, t17 * t102 - t18 * t104 + ((-t46 + t313) * pkin(10) + t377) * t238 + ((qJD(5) * t102 - t45) * pkin(10) - t376) * t235, -t10 * t269 + t205 * t45 - t7 * t235 + (-t17 - t304) * t370 - t340 * t104 - t361 * t238, -t10 * t17 - t9 * t18 + t7 * t205 + t340 * t19 + (t1 * t238 + t2 * t235 + (-t10 * t235 + t238 * t9) * qJD(5)) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, -t102 ^ 2 + t359, t26, t104 * t370 - t46, t84, -t104 * t36 + t265, t102 * t36 + t15 * t370 - t3, -t102 * t54 + t265 - t347 + 0.2e1 * t358, pkin(5) * t45 - t46 * qJ(6) + (t10 - t16) * t104 + (t9 - t326) * t102, 0.2e1 * t344 - t19 * t102 + t54 * t104 + (0.2e1 * qJD(6) - t15) * t370 + t3, -pkin(5) * t2 + qJ(6) * t1 + t10 * t326 - t16 * t9 - t19 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247 + t339 - t362, t26, -t359 - t289, t347 - t376;];
tauc_reg  = t4;
