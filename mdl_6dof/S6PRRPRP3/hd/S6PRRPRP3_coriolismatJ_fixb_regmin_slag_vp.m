% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:38:24
% EndTime: 2019-03-08 21:38:50
% DurationCPUTime: 14.98s
% Computational Cost: add. (8766->624), mult. (21282->845), div. (0->0), fcn. (23528->10), ass. (0->443)
t439 = sin(pkin(11));
t440 = sin(pkin(6));
t441 = cos(pkin(11));
t444 = sin(qJ(2));
t446 = cos(qJ(3));
t447 = cos(qJ(2));
t634 = t446 * t447;
t355 = (-t439 * t634 + t441 * t444) * t440;
t445 = cos(qJ(5));
t638 = t445 * t355;
t356 = (t439 * t444 + t441 * t634) * t440;
t442 = sin(qJ(5));
t644 = t442 * t356;
t622 = t644 / 0.2e1 - t638 / 0.2e1;
t648 = t440 * t447;
t577 = t439 * t648;
t443 = sin(qJ(3));
t678 = cos(pkin(6));
t544 = t678 * t443;
t649 = t440 * t444;
t578 = t446 * t649;
t386 = t544 + t578;
t652 = t386 * t441;
t309 = -t577 + t652;
t576 = t441 * t648;
t494 = -t386 * t439 - t576;
t183 = t445 * t309 + t442 * t494;
t635 = t445 * t441;
t643 = t442 * t439;
t715 = t635 - t643;
t377 = t715 * t443;
t385 = t443 * t649 - t446 * t678;
t695 = t385 / 0.2e1;
t730 = t183 * t446 / 0.2e1 + t377 * t695;
t55 = t622 + t730;
t726 = qJD(1) * t55;
t747 = qJD(2) * t55;
t63 = t622 - t730;
t746 = -qJD(2) * t63 - t183 * qJD(5);
t636 = t445 * t439;
t642 = t442 * t441;
t398 = t636 + t642;
t555 = -t648 / 0.2e1;
t539 = t443 * t555;
t379 = t715 * t446;
t232 = t385 * t715;
t560 = t232 / 0.2e1;
t684 = t443 / 0.2e1;
t694 = t386 / 0.2e1;
t735 = -t183 * t684 + t377 * t694 + t379 * t695 - t446 * t560;
t39 = t398 * t539 + t735;
t745 = qJD(2) * t39;
t744 = t39 * qJD(1);
t554 = t648 / 0.2e1;
t538 = t443 * t554;
t42 = t398 * t538 + t735;
t588 = t386 * qJD(3);
t743 = -qJD(2) * t42 - t398 * t588;
t374 = t398 * t443;
t182 = t442 * t309 - t445 * t494;
t701 = t182 / 0.2e1;
t536 = t374 * t695 + t446 * t701;
t637 = t445 * t356;
t645 = t442 * t355;
t624 = t645 / 0.2e1 + t637 / 0.2e1;
t59 = t536 - t624;
t742 = qJD(3) * t39 - qJD(5) * t59;
t214 = t637 + t645;
t575 = t443 * t648;
t61 = t536 + t624;
t741 = t42 * qJD(3) - t61 * qJD(5) + qJD(2) * (t214 * t446 + t377 * t575);
t740 = qJD(1) * t59;
t739 = qJD(2) * t59;
t483 = t642 / 0.2e1 + t636 / 0.2e1;
t737 = t483 * t385;
t736 = t483 * t446;
t734 = qJD(2) * t61 - qJD(5) * t182;
t732 = -t385 / 0.2e1;
t731 = -t386 / 0.2e1;
t654 = t385 * t398;
t557 = t654 / 0.2e1;
t388 = t398 * qJD(5);
t691 = -t398 / 0.2e1;
t466 = (t691 + t483) * t446;
t710 = t466 * qJD(2);
t728 = t388 + t710;
t484 = t643 / 0.2e1 - t635 / 0.2e1;
t681 = t446 * pkin(3);
t531 = -qJ(4) * t443 - t681;
t499 = -pkin(2) + t531;
t650 = t439 * t446;
t357 = -pkin(8) * t650 + t441 * t499;
t647 = t441 * t446;
t424 = pkin(8) * t647;
t358 = t439 * t499 + t424;
t686 = -t441 / 0.2e1;
t487 = t358 * t686 + t357 * t439 / 0.2e1;
t433 = t446 * pkin(8);
t688 = t433 / 0.2e1;
t195 = t688 + t487;
t558 = -t654 / 0.2e1;
t140 = t558 + t737;
t725 = t140 * qJD(3) - t747;
t145 = t557 + t737;
t724 = t145 * qJD(3) + t746;
t213 = -t638 + t644;
t685 = -t443 / 0.2e1;
t376 = t398 * t446;
t706 = t374 * t731 + t376 * t732 + t446 * t557;
t453 = t182 * t685 - t538 * t715 - t706;
t723 = -qJD(5) * t63 + qJD(3) * t453 + (t213 * t446 + t374 * t575) * qJD(2);
t449 = (-t554 * t715 + t701) * t443 + t706;
t722 = -qJD(3) * t449 + qJD(5) * t55;
t582 = t446 * qJD(2);
t354 = t377 * t582;
t371 = t377 * qJD(5);
t717 = -qJD(3) * t466 + t354 - t371;
t387 = t715 * qJD(5);
t693 = t715 / 0.2e1;
t248 = (t693 + t484) * t446;
t590 = t248 * qJD(2);
t716 = t590 - t387;
t714 = qJD(1) * t449;
t711 = qJD(4) * t466;
t415 = pkin(3) * t443 - qJ(4) * t446;
t651 = t439 * t443;
t423 = pkin(8) * t651;
t369 = t441 * t415 + t423;
t291 = pkin(4) * t443 - pkin(9) * t647 + t369;
t274 = t442 * t291;
t432 = t443 * pkin(8);
t370 = t439 * t415 - t432 * t441;
t312 = -pkin(9) * t650 + t370;
t298 = t445 * t312;
t627 = -t274 / 0.2e1 - t298 / 0.2e1;
t640 = t445 * t291;
t646 = t442 * t312;
t626 = t640 / 0.2e1 - t646 / 0.2e1;
t709 = qJD(2) * t449 - t140 * qJD(5);
t708 = qJD(2) * t453 + t145 * qJD(5) - t588 * t715;
t705 = t377 ^ 2;
t392 = t398 ^ 2;
t704 = -pkin(5) / 0.2e1;
t310 = -pkin(9) * t651 + t358;
t680 = pkin(9) + qJ(4);
t534 = -t443 * t680 - pkin(2);
t573 = -pkin(8) * t439 - pkin(4);
t450 = t573 * t446 + (t534 - t681) * t441;
t173 = t310 * t442 - t445 * t450;
t151 = pkin(5) * t446 + t173;
t703 = t151 / 0.2e1;
t625 = t298 + t274;
t641 = t443 * qJ(6);
t153 = t625 + t641;
t702 = t153 / 0.2e1;
t559 = -t232 / 0.2e1;
t413 = t680 * t441;
t545 = t680 * t439;
t315 = t442 * t413 + t445 * t545;
t700 = -t315 / 0.2e1;
t316 = t445 * t413 - t442 * t545;
t699 = -t316 / 0.2e1;
t698 = -t374 / 0.2e1;
t697 = -t376 / 0.2e1;
t696 = t377 / 0.2e1;
t692 = -t715 / 0.2e1;
t690 = t398 / 0.2e1;
t428 = -pkin(4) * t441 - pkin(3);
t689 = -t428 / 0.2e1;
t687 = -t439 / 0.2e1;
t683 = t376 * pkin(5);
t682 = t443 * pkin(5);
t498 = qJ(6) * t697 + t379 * t704;
t546 = t173 / 0.2e1 - t151 / 0.2e1;
t639 = t445 * t310;
t150 = t639 + t534 * t642 + (t442 * (-pkin(3) * t441 + t573) - qJ(6)) * t446;
t174 = t442 * t450 + t639;
t547 = t150 / 0.2e1 - t174 / 0.2e1;
t7 = t398 * t547 + t546 * t715 + t498;
t679 = t7 * qJD(2);
t16 = (-t150 + t174) * t377 + (-t151 + t173) * t374;
t677 = t16 * qJD(2);
t676 = t173 * t446;
t675 = t174 * t446;
t404 = pkin(4) * t651 + t432;
t530 = pkin(5) * t374 - qJ(6) * t377;
t207 = t530 + t404;
t671 = t207 * t377;
t668 = t309 * t441;
t667 = t315 * t443;
t666 = t315 * t446;
t665 = t316 * t443;
t664 = t316 * t446;
t540 = t385 * t575;
t32 = t182 * t213 + t183 * t214 + t540;
t663 = t32 * qJD(1);
t33 = -t182 * t654 - t183 * t232 + t385 * t386;
t662 = t33 * qJD(1);
t661 = t374 * t715;
t660 = t377 * t398;
t659 = t379 * qJ(6);
t307 = pkin(5) * t398 - qJ(6) * t715;
t658 = t385 * t307;
t475 = t494 * t439;
t76 = (t386 + t475 - t668) * t385;
t633 = t76 * qJD(1);
t77 = t309 * t356 + t355 * t494 + t540;
t632 = t77 * qJD(1);
t597 = t140 * qJD(1);
t631 = -t398 * qJD(4) + t597;
t308 = t316 * qJD(5);
t630 = -t597 - t308;
t620 = t635 * t695 + t643 * t732;
t619 = t484 * t385;
t422 = pkin(4) * t650;
t405 = t433 + t422;
t418 = t439 ^ 2 + t441 ^ 2;
t233 = t374 * t443 - t376 * t446;
t616 = qJD(2) * t233;
t234 = -t377 * t443 + t379 * t446;
t615 = qJD(2) * t234;
t614 = qJD(2) * t377;
t613 = qJD(2) * t440;
t612 = qJD(3) * t398;
t611 = qJD(3) * t428;
t610 = qJD(3) * t443;
t609 = qJD(3) * t446;
t608 = qJD(3) * t447;
t607 = qJD(4) * t248;
t606 = qJD(4) * t374;
t605 = qJD(4) * t446;
t604 = qJD(5) * t173;
t602 = qJD(5) * t315;
t601 = qJD(5) * t374;
t600 = qJD(5) * t446;
t599 = qJD(6) * t398;
t598 = qJD(6) * t446;
t147 = -t374 * t379 - t376 * t377;
t596 = t147 * qJD(2);
t192 = -t357 * t443 + (t369 - 0.2e1 * t423) * t446;
t595 = t192 * qJD(2);
t246 = t697 - t736;
t592 = t246 * qJD(2);
t247 = (t693 - t484) * t446;
t240 = t247 * qJD(2);
t591 = t247 * qJD(4);
t589 = t374 * qJD(6);
t372 = t377 * qJD(4);
t437 = t443 ^ 2;
t395 = t418 * t437;
t587 = t395 * qJD(2);
t586 = t715 * qJD(6);
t585 = t418 * qJD(3);
t438 = t446 ^ 2;
t420 = t438 - t437;
t584 = t420 * qJD(2);
t583 = t443 * qJD(2);
t581 = pkin(2) * t583;
t580 = pkin(2) * t582;
t579 = pkin(8) * t609;
t572 = t374 * t614;
t570 = t715 * t612;
t569 = t374 * t605;
t568 = t443 * t605;
t567 = t447 * t613;
t566 = t443 * t609;
t565 = t443 * t582;
t564 = t309 * t685;
t295 = -t664 / 0.2e1;
t556 = t386 * t684;
t543 = t418 * t385;
t541 = qJD(3) * t246 - t354;
t353 = t374 * t582;
t189 = qJD(3) * t247 - t353;
t425 = -qJD(5) + t582;
t535 = t626 + t682;
t533 = t641 - t627;
t532 = -t682 / 0.2e1 - t626;
t239 = pkin(5) * t377 + qJ(6) * t374;
t529 = -pkin(5) * t715 - qJ(6) * t398;
t512 = t640 - t646;
t154 = -t512 - t682;
t208 = t405 - t659 + t683;
t13 = t150 * t153 + t151 * t154 + t207 * t208;
t448 = t150 * t559 + t154 * t701 + t183 * t702 + t207 * t694 + t208 * t695 - t654 * t703;
t273 = t428 + t529;
t463 = t213 * t700 + t214 * t699 + t273 * t539;
t2 = t448 + t463;
t528 = t2 * qJD(1) + t13 * qJD(2);
t14 = -t150 * t173 + t151 * t174 + t207 * t239;
t451 = -t182 * t547 - t183 * t546 + t239 * t695;
t496 = t213 * pkin(5) / 0.2e1 - t214 * qJ(6) / 0.2e1;
t4 = t451 + t496;
t527 = t4 * qJD(1) + t14 * qJD(2);
t456 = t183 * t697 - t232 * t698 + t379 * t701 - t654 * t696;
t489 = t213 * t690 + t214 * t693;
t12 = t456 - t489;
t15 = -t150 * t376 + t151 * t379 - t153 * t374 + t154 * t377;
t525 = t12 * qJD(1) + t15 * qJD(2);
t27 = -t150 * t443 + t153 * t446 + t207 * t379 + t208 * t377;
t524 = -t27 * qJD(2) - t744;
t28 = -t151 * t443 + t154 * t446 + t207 * t376 + t208 * t374;
t523 = t28 * qJD(2) - t714;
t44 = t173 * t443 - t405 * t374 - t404 * t376 + t446 * t512;
t522 = -t44 * qJD(2) - t714;
t45 = -t174 * t443 + t405 * t377 + t404 * t379 + t446 * t625;
t521 = t45 * qJD(2) + t744;
t46 = -t207 * t374 + t239 * t377 - t676;
t520 = qJD(2) * t46 - t740;
t47 = t239 * t374 + t671 + t675;
t519 = qJD(2) * t47 + t726;
t48 = -t150 * t374 + t151 * t377;
t493 = t182 * t696 + t183 * t698;
t49 = t538 - t493;
t518 = -qJD(1) * t49 + qJD(2) * t48;
t69 = t150 * t446 + t671;
t517 = -qJD(2) * t69 - t726;
t88 = -t404 * t377 - t675;
t516 = -qJD(2) * t88 + t726;
t87 = -t374 * t404 - t676;
t515 = -qJD(2) * t87 + t740;
t469 = t494 * t686;
t459 = t309 * t687 + t469;
t452 = t459 * t446;
t488 = t356 * t441 / 0.2e1 + t355 * t687;
t79 = t452 - t488;
t86 = (t357 * t446 + t369 * t443) * t441 + (t358 * t446 + t370 * t443) * t439;
t514 = -t79 * qJD(1) + t86 * qJD(2);
t490 = t207 * t690 + t273 * t696;
t454 = t239 * t693 + t307 * t698 - t490;
t21 = t295 + t454 + t535;
t99 = t273 * t398 - t307 * t715;
t513 = qJD(2) * t21 - qJD(3) * t99;
t511 = -t369 * t439 + t370 * t441;
t101 = pkin(8) ^ 2 * t443 * t446 + t357 * t369 + t358 * t370;
t460 = -t309 * t370 / 0.2e1 - t494 * t369 / 0.2e1;
t474 = t488 * qJ(4);
t29 = (pkin(3) * t555 + pkin(8) * t731) * t443 + t474 + (-t433 / 0.2e1 - t487) * t385 + t460;
t509 = -t29 * qJD(1) + t101 * qJD(2);
t139 = t557 - t737;
t294 = t664 / 0.2e1;
t34 = t294 + t490 + t532;
t508 = t139 * qJD(1) + t34 * qJD(2);
t142 = t559 + t620;
t293 = t666 / 0.2e1;
t485 = -t374 * t689 + t404 * t692;
t66 = t293 + t485 + t627;
t507 = t142 * qJD(1) + t66 * qJD(2);
t193 = t370 * t446 + (-t358 + 0.2e1 * t424) * t443;
t82 = (t439 * t554 + t309 / 0.2e1 - t652 / 0.2e1) * t443;
t506 = t82 * qJD(1) - t193 * qJD(2);
t373 = t374 ^ 2;
t197 = t373 - t705;
t92 = -t660 - t661;
t505 = qJD(2) * t197 + qJD(3) * t92;
t391 = t715 ^ 2;
t238 = t391 - t392;
t504 = qJD(2) * t92 + qJD(3) * t238;
t121 = (t554 - t459) * t443;
t198 = (t357 * t441 + t358 * t439) * t443;
t503 = qJD(1) * t121 + qJD(2) * t198;
t186 = t660 - t661;
t243 = t373 + t705;
t502 = qJD(2) * t243 + qJD(3) * t186;
t311 = t391 + t392;
t501 = qJD(2) * t186 + qJD(3) * t311;
t500 = -qJD(2) * t239 - qJD(3) * t307;
t259 = -qJD(2) * t374 + qJD(3) * t715;
t260 = t612 + t614;
t497 = qJ(6) * t702 + t154 * t704;
t495 = qJ(6) * t559 - t654 * t704;
t492 = t182 * t690 + t183 * t693;
t491 = -t207 * t307 / 0.2e1 - t239 * t273 / 0.2e1;
t181 = -t374 * t690 + t377 * t693;
t465 = t377 * t689 + t404 * t691 + t295;
t65 = t465 + t626;
t482 = qJD(2) * t65 - t398 * t611;
t171 = t685 - t181;
t481 = qJD(2) * t171 - t570;
t480 = qJD(3) * t181 - t572;
t479 = -qJD(2) * t181 - t570;
t478 = qJD(3) * t248 - t353 + t601;
t5 = t315 * t547 + t316 * t546 + t491 + t497;
t51 = t273 * t307;
t9 = -t658 / 0.2e1 + t495;
t476 = -t9 * qJD(1) - t5 * qJD(2) + t51 * qJD(3);
t120 = t315 * t398 + t316 * t715;
t457 = t150 * t692 + t151 * t691 - t374 * t699 + t377 * t700;
t468 = t422 / 0.2e1 + t688 + t683 / 0.2e1 - t659 / 0.2e1;
t23 = t457 + t468;
t470 = t544 / 0.2e1 + t578 / 0.2e1;
t52 = t470 - t492;
t473 = -qJD(1) * t52 - qJD(2) * t23 + qJD(3) * t120;
t100 = -t273 * t715 - t307 * t398;
t141 = t560 + t619;
t292 = -t666 / 0.2e1;
t455 = t207 * t693 + t239 * t690 + t273 * t698 + t307 * t696;
t19 = t292 + t455 + t533;
t472 = qJD(1) * t141 + qJD(2) * t19 - qJD(3) * t100;
t458 = t668 / 0.2e1 - t475 / 0.2e1;
t115 = -t458 + t470;
t407 = t418 * qJ(4);
t471 = qJD(1) * t115 + qJD(2) * t195 - qJD(3) * t407;
t352 = t438 + t705;
t467 = qJD(2) * t352 + t377 * t612 - t600;
t464 = qJD(3) * t531 + t605;
t429 = t610 / 0.2e1;
t414 = t425 * qJ(6);
t393 = (t582 - qJD(5) / 0.2e1) * t443;
t285 = t377 * t599;
t249 = t376 / 0.2e1 + t736;
t215 = qJD(3) * t392 + t398 * t614;
t204 = t387 - t240;
t196 = t688 - t487;
t180 = t186 * qJD(4);
t175 = t181 * qJD(5);
t172 = t685 + t181;
t159 = t174 * qJD(5);
t146 = t558 - t737;
t144 = t560 + t620;
t143 = t559 + t619;
t122 = t439 * t564 + t443 * t469 + t538;
t116 = t458 + t470;
t91 = t92 * qJD(5);
t85 = t439 * t538 + t441 * t556 + t564;
t84 = t439 * t556 + t441 * t539 + t494 * t684;
t78 = t452 + t488;
t68 = -t465 + t626;
t67 = t292 - t485 + t627;
t53 = t470 + t492;
t50 = t538 + t493;
t35 = t295 - t490 + t532;
t30 = pkin(3) * t539 + pkin(8) * t556 + t195 * t385 - t460 + t474;
t24 = -t457 + t468;
t22 = t294 - t454 + t535;
t20 = t293 - t455 + t533;
t11 = t456 + t489;
t10 = t658 / 0.2e1 + t495;
t8 = t150 * t691 + t151 * t693 + t173 * t692 + t174 * t690 + t498;
t6 = t173 * t699 + t150 * t700 + t174 * t315 / 0.2e1 + t316 * t703 - t491 + t497;
t3 = t451 - t496;
t1 = t448 - t463;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t77 + qJD(3) * t76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(3) * t33; 0, 0, -t444 * t613, -t567, 0, 0, 0, 0, 0 (-t443 * t608 - t444 * t582) * t440 (t444 * t583 - t446 * t608) * t440 (-t355 * t446 + t437 * t577) * qJD(2) + t84 * qJD(3) (t356 * t446 + t437 * t576) * qJD(2) + t85 * qJD(3), t78 * qJD(3) + (-t355 * t441 - t356 * t439) * t583, t632 + (pkin(8) * t437 * t648 + t355 * t357 + t356 * t358) * qJD(2) + t30 * qJD(3) + t122 * qJD(4), 0, 0, 0, 0, 0, t723, t741, t723 (t213 * t377 - t214 * t374) * qJD(2) + t11 * qJD(3), -t741, t663 + (t214 * t150 + t213 * t151 + t207 * t575) * qJD(2) + t1 * qJD(3) + t50 * qJD(4) + t3 * qJD(5) + t63 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443 * t567 - t588, t385 * qJD(3) - t446 * t567, qJD(2) * t84 - t441 * t588, qJD(2) * t85 + t439 * t588, t78 * qJD(2) - qJD(3) * t543, t633 + t30 * qJD(2) + (-t386 * pkin(3) - qJ(4) * t543) * qJD(3) + t116 * qJD(4), 0, 0, 0, 0, 0, t708, qJD(5) * t144 - t743, t708, t11 * qJD(2) + (-t232 * t715 - t398 * t654) * qJD(3), qJD(5) * t143 + t743, t662 + t1 * qJD(2) + (-t232 * t316 + t273 * t386 - t315 * t654) * qJD(3) + t53 * qJD(4) + t10 * qJD(5) + t146 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t122 + qJD(3) * t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t50 + qJD(3) * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t724, qJD(3) * t144 - t734, t724, 0, qJD(3) * t143 + t734, t3 * qJD(2) + t10 * qJD(3) + (-pkin(5) * t183 - qJ(6) * t182) * qJD(5) + t183 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t146 - t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82 * qJD(3), t79 * qJD(3), -qJD(3) * t29 - qJD(4) * t121 - t632, 0, 0, 0, 0, 0, t722, t742, t722, qJD(3) * t12, -t742, qJD(3) * t2 - qJD(4) * t49 + qJD(5) * t4 - qJD(6) * t55 - t663; 0, 0, 0, 0, t566, t420 * qJD(3), 0, 0, 0, -pkin(2) * t610, -pkin(2) * t609, -qJD(3) * t192 + t441 * t568, qJD(3) * t193 - t439 * t568, -qJD(3) * t86 + qJD(4) * t395, qJD(3) * t101 - qJD(4) * t198 (qJD(3) * t379 - t601) * t377, qJD(3) * t147 + qJD(5) * t197, -qJD(3) * t234 + t374 * t600, -qJD(3) * t233 + t371 * t446, -t566, -qJD(3) * t44 - qJD(5) * t88 + t372 * t446, qJD(3) * t45 + qJD(5) * t87 - t569, t28 * qJD(3) + t47 * qJD(5) + (-t589 + t605) * t377, qJD(3) * t15 + qJD(4) * t243 + qJD(5) * t16 + t446 * t589, -qJD(3) * t27 - qJD(5) * t46 + qJD(6) * t352 + t569, qJD(3) * t13 + qJD(4) * t48 + qJD(5) * t14 - qJD(6) * t69; 0, 0, 0, 0, t565, t584, t609, -t610, 0, -t579 - t581, pkin(8) * t610 - t580, -t424 * qJD(3) + t439 * t464 - t595, t439 * t579 + t441 * t464 - t506, qJD(3) * t511 - t514 (-pkin(3) * t433 + qJ(4) * t511) * qJD(3) + t196 * qJD(4) + t509, t260 * t379 + t175, t596 + (-t376 * t398 + t379 * t715) * qJD(3) + t91, -qJD(5) * t248 + t398 * t610 - t615, -qJD(5) * t466 + t610 * t715 - t616, -t393 (t376 * t428 - t405 * t715 - t667) * qJD(3) - t246 * qJD(4) + t68 * qJD(5) + t522 (t379 * t428 + t398 * t405 - t665) * qJD(3) + t591 + t67 * qJD(5) + t521 (-t208 * t715 + t273 * t376 - t667) * qJD(3) + t249 * qJD(4) + t22 * qJD(5) + t172 * qJD(6) + t523 (t153 * t715 + t154 * t398 + t315 * t379 - t316 * t376) * qJD(3) + t180 + t8 * qJD(5) - t248 * qJD(6) + t525 (-t208 * t398 - t273 * t379 + t665) * qJD(3) - t591 + t20 * qJD(5) + t285 + t524 (t153 * t316 + t154 * t315 + t208 * t273) * qJD(3) + t24 * qJD(4) + t6 * qJD(5) + t35 * qJD(6) + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(3) * t439 + t441 * t583) * t446 (qJD(3) * t441 - t439 * t583) * t446, t587, qJD(3) * t196 - t503, 0, 0, 0, 0, 0, -t541, t189, qJD(3) * t249 + t354, t502, -t189, qJD(3) * t24 + t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t505, -t478, t717, t429, qJD(3) * t68 - t159 + t516, qJD(3) * t67 - t515 + t604, qJD(3) * t22 - t159 + t519, t8 * qJD(3) + qJD(5) * t530 - t589 + t677, qJD(3) * t20 - t520 - t598 - t604, t6 * qJD(3) + (-pkin(5) * t174 - qJ(6) * t173) * qJD(5) + t150 * qJD(6) + t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t172 - t572, -t478, t467, qJD(3) * t35 + qJD(5) * t150 + t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 * qJD(2), -t79 * qJD(2), qJD(2) * t29 - qJD(4) * t115 - t633, 0, 0, 0, 0, 0, t709, -qJD(5) * t142 - t745, t709, -qJD(2) * t12, -qJD(5) * t141 + t745, -qJD(2) * t2 - qJD(4) * t52 - qJD(5) * t9 - qJD(6) * t139 - t662; 0, 0, 0, 0, -t565, -t584, 0, 0, 0, t581, t580, t595, t506, t514, -qJD(4) * t195 - t509, -t379 * t614 + t175, t91 - t596, -qJD(5) * t247 + t615, -qJD(5) * t246 + t616, t393, -qJD(5) * t65 - t522 - t711, -qJD(5) * t66 - t521 + t607, -qJD(5) * t21 - qJD(6) * t171 - t523 - t711, -qJD(5) * t7 - qJD(6) * t247 + t180 - t525, -qJD(5) * t19 + t285 - t524 - t607, -qJD(4) * t23 - qJD(5) * t5 - qJD(6) * t34 - t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418 * qJD(4), t407 * qJD(4), t715 * t388, t238 * qJD(5), 0, 0, 0, t428 * t388, t428 * t387, qJD(5) * t99 + t398 * t586, t311 * qJD(4), qJD(5) * t100 + qJD(6) * t392, qJD(4) * t120 + qJD(5) * t51 - t273 * t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t585, -t471, 0, 0, 0, 0, 0, -t710, t590, -t710, t501, -t590, t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t479, t504, t204, -t388 - t592, -t583 / 0.2e1, -t482 + t630, t611 * t715 - t507 + t602, -t513 + t630, qJD(5) * t529 + t586 - t679, -t472 - t602 (-pkin(5) * t316 - qJ(6) * t315) * qJD(5) + t316 * qJD(6) + t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t481, t204, t215, -t273 * t612 + t308 - t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t121 + qJD(3) * t115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t49 + qJD(3) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441 * t565, t439 * t565, -t587, qJD(3) * t195 + t503, 0, 0, 0, 0, 0, -t717, -t478, -t717, -t502, t478, qJD(3) * t23 + qJD(5) * t239 - qJD(6) * t377 - t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585, t471, 0, 0, 0, 0, 0, t728, -t716, t728, -t501, t716, qJD(5) * t307 - t473 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t259, t260, 0, -t259, -t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t725, qJD(3) * t142 + t739, t725, 0, qJD(3) * t141 - t739, -qJD(2) * t4 + qJD(3) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, -t505, t189, t541, t429, qJD(3) * t65 - t372 - t516, qJD(3) * t66 + t515 + t606, qJD(3) * t21 - t372 - t519, qJD(3) * t7 - t677, qJD(3) * t19 + t520 - t598 - t606, -qJ(6) * t598 + qJD(3) * t5 - qJD(4) * t239 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, -t504, t240, t592, t583 / 0.2e1, t482 + t631 -(qJD(4) + t611) * t715 + t507, t513 + t631, t679, qJD(4) * t715 + t472, -qJD(4) * t307 - t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t259, -t260, 0, t259, t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, -t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t139 + t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t171 + t572, t189, -t467, qJ(6) * t600 + qJD(3) * t34 + t372 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, t240, -t215 (qJD(3) * t273 + qJD(4)) * t398 + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
