% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6PRRPRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 03:59
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6PRRPRP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP3_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 03:58:58
% EndTime: 2019-05-05 03:59:08
% DurationCPUTime: 11.95s
% Computational Cost: add. (34185->309), mult. (71516->420), div. (0->0), fcn. (52327->12), ass. (0->235)
t2546 = sin(qJ(3));
t2595 = qJD(2) * t2546;
t2531 = qJD(3) * t2595;
t2549 = cos(qJ(3));
t2584 = t2549 * qJDD(2);
t2579 = -t2531 + t2584;
t2577 = -qJDD(5) + t2579;
t2538 = sin(pkin(11));
t2541 = cos(pkin(11));
t2507 = -t2541 * qJD(3) + t2538 * t2595;
t2508 = qJD(3) * t2538 + t2541 * t2595;
t2545 = sin(qJ(5));
t2548 = cos(qJ(5));
t2477 = t2507 * t2548 + t2508 * t2545;
t2479 = -t2507 * t2545 + t2508 * t2548;
t2591 = t2477 * t2479;
t2437 = t2577 - t2591;
t2476 = t2479 ^ 2;
t2594 = qJD(2) * t2549;
t2529 = qJD(5) - t2594;
t2598 = t2529 ^ 2;
t2605 = -t2476 - t2598;
t2404 = t2437 * t2545 + t2548 * t2605;
t2406 = t2437 * t2548 - t2545 * t2605;
t2375 = t2404 * t2538 - t2406 * t2541;
t2582 = qJD(3) * t2594;
t2585 = t2546 * qJDD(2);
t2512 = t2582 + t2585;
t2492 = qJDD(3) * t2538 + t2512 * t2541;
t2558 = qJDD(3) * t2541 - t2512 * t2538;
t2554 = -t2477 * qJD(5) + t2548 * t2492 + t2545 * t2558;
t2590 = t2477 * t2529;
t2553 = t2554 - t2590;
t2356 = t2375 * t2546 + t2549 * t2553;
t2540 = sin(pkin(6));
t2543 = cos(pkin(6));
t2358 = t2375 * t2549 - t2546 * t2553;
t2381 = t2404 * t2541 + t2406 * t2538;
t2547 = sin(qJ(2));
t2550 = cos(qJ(2));
t2571 = t2358 * t2547 + t2381 * t2550;
t2327 = -t2540 * t2356 + t2543 * t2571;
t2338 = t2358 * t2550 - t2381 * t2547;
t2539 = sin(pkin(10));
t2542 = cos(pkin(10));
t2640 = t2327 * t2539 - t2338 * t2542;
t2639 = t2327 * t2542 + t2338 * t2539;
t2325 = t2543 * t2356 + t2540 * t2571;
t2417 = t2554 + t2590;
t2580 = t2545 * t2492 - t2548 * t2558;
t2555 = (-qJD(5) + t2529) * t2479 - t2580;
t2602 = t2417 * t2545 + t2548 * t2555;
t2603 = -t2548 * t2417 + t2545 * t2555;
t2608 = t2538 * t2602 + t2541 * t2603;
t2451 = t2477 ^ 2;
t2425 = t2476 + t2451;
t2609 = -t2538 * t2603 + t2541 * t2602;
t2615 = -t2425 * t2546 + t2549 * t2609;
t2619 = t2547 * t2608 + t2550 * t2615;
t2616 = t2425 * t2549 + t2546 * t2609;
t2620 = t2547 * t2615 - t2550 * t2608;
t2627 = -t2540 * t2616 + t2543 * t2620;
t2632 = -t2539 * t2627 + t2542 * t2619;
t2631 = t2539 * t2619 + t2542 * t2627;
t2628 = t2540 * t2620 + t2543 * t2616;
t2438 = t2577 + t2591;
t2604 = -t2598 - t2451;
t2610 = t2438 * t2545 + t2548 * t2604;
t2611 = -t2548 * t2438 + t2545 * t2604;
t2614 = -t2538 * t2611 + t2541 * t2610;
t2624 = t2546 * t2614;
t2613 = t2538 * t2610 + t2541 * t2611;
t2623 = t2547 * t2613;
t2622 = t2549 * t2614;
t2621 = t2550 * t2613;
t2596 = -g(3) + qJDD(1);
t2581 = t2540 * t2596;
t2518 = g(1) * t2539 - g(2) * t2542;
t2588 = t2518 * t2543;
t2612 = t2581 + t2588;
t2495 = t2507 * t2594;
t2470 = -t2492 + t2495;
t2601 = qJD(3) ^ 2;
t2600 = t2507 ^ 2;
t2599 = t2508 ^ 2;
t2597 = -2 * qJD(4);
t2589 = t2507 * t2508;
t2535 = t2549 ^ 2;
t2551 = qJD(2) ^ 2;
t2587 = t2535 * t2551;
t2519 = -g(1) * t2542 - g(2) * t2539;
t2474 = t2550 * t2519 + t2547 * t2612;
t2458 = -pkin(2) * t2551 + qJDD(2) * pkin(8) + t2474;
t2556 = -t2540 * t2518 + t2543 * t2596;
t2449 = t2549 * t2458 + t2546 * t2556;
t2510 = (-pkin(3) * t2549 - qJ(4) * t2546) * qJD(2);
t2428 = -pkin(3) * t2601 + qJDD(3) * qJ(4) + t2510 * t2594 + t2449;
t2578 = t2547 * t2519 - t2550 * t2612;
t2457 = -qJDD(2) * pkin(2) - t2551 * pkin(8) + t2578;
t2434 = (-t2512 - t2582) * qJ(4) + (-t2579 + t2531) * pkin(3) + t2457;
t2395 = t2541 * t2428 + t2538 * t2434 + t2507 * t2597;
t2493 = -pkin(4) * t2594 - pkin(9) * t2508;
t2386 = -pkin(4) * t2600 + pkin(9) * t2558 + t2493 * t2594 + t2395;
t2394 = -t2538 * t2428 + t2541 * t2434 + t2508 * t2597;
t2473 = -t2579 - t2589;
t2552 = t2473 * pkin(4) + pkin(9) * t2470 + t2394;
t2349 = t2548 * t2386 + t2545 * t2552;
t2534 = t2546 ^ 2;
t2586 = t2534 + t2535;
t2583 = t2508 * t2594;
t2348 = -t2545 * t2386 + t2548 * t2552;
t2450 = pkin(5) * t2477 - qJ(6) * t2479;
t2342 = -pkin(5) * t2598 - qJ(6) * t2577 + 0.2e1 * qJD(6) * t2529 - t2477 * t2450 + t2349;
t2343 = pkin(5) * t2577 - qJ(6) * t2598 + t2479 * t2450 + qJDD(6) - t2348;
t2323 = t2342 * t2545 - t2343 * t2548;
t2324 = t2342 * t2548 + t2343 * t2545;
t2312 = -t2323 * t2538 + t2324 * t2541;
t2490 = t2549 * t2556;
t2427 = qJDD(4) - t2490 - t2601 * qJ(4) - qJDD(3) * pkin(3) + (qJD(2) * t2510 + t2458) * t2546;
t2397 = -t2558 * pkin(4) - t2600 * pkin(9) + t2508 * t2493 + t2427;
t2557 = -qJD(5) * t2479 - t2580;
t2360 = -t2557 * pkin(5) + (pkin(5) * t2529 - 0.2e1 * qJD(6)) * t2479 + t2397 - t2553 * qJ(6);
t2310 = t2312 * t2549 + t2360 * t2546;
t2311 = t2323 * t2541 + t2324 * t2538;
t2576 = t2310 * t2547 - t2311 * t2550;
t2335 = t2348 * t2548 + t2349 * t2545;
t2336 = -t2348 * t2545 + t2349 * t2548;
t2316 = -t2335 * t2538 + t2336 * t2541;
t2314 = t2316 * t2549 + t2397 * t2546;
t2315 = t2335 * t2541 + t2336 * t2538;
t2575 = t2314 * t2547 - t2315 * t2550;
t2366 = -t2394 * t2538 + t2395 * t2541;
t2355 = t2366 * t2549 + t2427 * t2546;
t2365 = t2394 * t2541 + t2395 * t2538;
t2572 = t2355 * t2547 - t2365 * t2550;
t2412 = (qJD(5) + t2529) * t2479 + t2580;
t2359 = t2412 * t2546 + t2622;
t2570 = t2359 * t2547 - t2621;
t2411 = t2479 * t2529 - t2557;
t2364 = t2411 * t2546 + t2622;
t2568 = t2364 * t2547 - t2621;
t2448 = -t2546 * t2458 + t2490;
t2403 = -t2448 * t2546 + t2449 * t2549;
t2567 = t2403 * t2547 - t2457 * t2550;
t2468 = t2558 - t2583;
t2433 = t2468 * t2541 - t2470 * t2538;
t2462 = -t2599 - t2600;
t2409 = t2433 * t2549 + t2462 * t2546;
t2432 = t2468 * t2538 + t2470 * t2541;
t2566 = t2409 * t2547 - t2432 * t2550;
t2482 = -t2587 - t2600;
t2441 = -t2473 * t2538 + t2482 * t2541;
t2467 = -t2558 - t2583;
t2419 = t2441 * t2549 + t2467 * t2546;
t2440 = t2473 * t2541 + t2482 * t2538;
t2565 = t2419 * t2547 - t2440 * t2550;
t2472 = t2579 - t2589;
t2494 = -t2587 - t2599;
t2453 = t2472 * t2541 - t2494 * t2538;
t2469 = t2492 + t2495;
t2423 = t2453 * t2549 + t2469 * t2546;
t2452 = t2472 * t2538 + t2494 * t2541;
t2564 = t2423 * t2547 - t2452 * t2550;
t2563 = t2547 * t2474 - t2550 * t2578;
t2528 = t2546 * t2551 * t2549;
t2520 = qJDD(3) + t2528;
t2526 = -t2587 - t2601;
t2487 = -t2520 * t2546 + t2526 * t2549;
t2513 = -0.2e1 * t2531 + t2584;
t2562 = t2487 * t2547 + t2513 * t2550;
t2521 = -qJDD(3) + t2528;
t2525 = -t2534 * t2551 - t2601;
t2488 = t2521 * t2549 - t2525 * t2546;
t2511 = 0.2e1 * t2582 + t2585;
t2561 = t2488 * t2547 - t2511 * t2550;
t2514 = t2586 * qJDD(2);
t2517 = t2586 * t2551;
t2560 = t2514 * t2547 + t2517 * t2550;
t2559 = qJDD(2) * t2550 - t2547 * t2551;
t2516 = -qJDD(2) * t2547 - t2550 * t2551;
t2500 = t2559 * t2543;
t2499 = t2516 * t2543;
t2498 = t2559 * t2540;
t2497 = t2516 * t2540;
t2486 = t2521 * t2546 + t2525 * t2549;
t2485 = t2520 * t2549 + t2526 * t2546;
t2483 = t2514 * t2550 - t2517 * t2547;
t2481 = t2560 * t2543;
t2480 = t2560 * t2540;
t2460 = t2488 * t2550 + t2511 * t2547;
t2459 = t2487 * t2550 - t2513 * t2547;
t2445 = -t2540 * t2486 + t2543 * t2561;
t2444 = -t2540 * t2485 + t2543 * t2562;
t2443 = t2543 * t2486 + t2540 * t2561;
t2442 = t2543 * t2485 + t2540 * t2562;
t2435 = t2474 * t2550 + t2547 * t2578;
t2422 = t2453 * t2546 - t2469 * t2549;
t2421 = t2540 ^ 2 * t2518 + (-t2581 + t2563) * t2543;
t2420 = t2543 ^ 2 * t2596 + (t2563 - t2588) * t2540;
t2418 = t2441 * t2546 - t2467 * t2549;
t2408 = t2433 * t2546 - t2462 * t2549;
t2402 = t2448 * t2549 + t2449 * t2546;
t2396 = t2423 * t2550 + t2452 * t2547;
t2393 = t2403 * t2550 + t2457 * t2547;
t2392 = t2419 * t2550 + t2440 * t2547;
t2391 = t2409 * t2550 + t2432 * t2547;
t2378 = -t2540 * t2422 + t2543 * t2564;
t2377 = t2543 * t2422 + t2540 * t2564;
t2372 = -t2540 * t2418 + t2543 * t2565;
t2371 = t2543 * t2418 + t2540 * t2565;
t2370 = -t2540 * t2402 + t2543 * t2567;
t2369 = t2543 * t2402 + t2540 * t2567;
t2368 = -t2540 * t2408 + t2543 * t2566;
t2367 = t2543 * t2408 + t2540 * t2566;
t2362 = -t2411 * t2549 + t2624;
t2357 = -t2412 * t2549 + t2624;
t2354 = t2366 * t2546 - t2427 * t2549;
t2341 = t2364 * t2550 + t2623;
t2339 = t2359 * t2550 + t2623;
t2337 = t2355 * t2550 + t2365 * t2547;
t2334 = -t2540 * t2362 + t2543 * t2568;
t2332 = t2543 * t2362 + t2540 * t2568;
t2328 = -t2540 * t2357 + t2543 * t2570;
t2326 = t2543 * t2357 + t2540 * t2570;
t2322 = -t2540 * t2354 + t2543 * t2572;
t2321 = t2543 * t2354 + t2540 * t2572;
t2313 = t2316 * t2546 - t2397 * t2549;
t2309 = t2312 * t2546 - t2360 * t2549;
t2308 = t2314 * t2550 + t2315 * t2547;
t2307 = t2310 * t2550 + t2311 * t2547;
t2306 = -t2540 * t2313 + t2543 * t2575;
t2305 = t2543 * t2313 + t2540 * t2575;
t2304 = -t2540 * t2309 + t2543 * t2576;
t2303 = t2543 * t2309 + t2540 * t2576;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2518 * t2539 + t2519 * t2542, 0, 0, 0, 0, 0, 0, -t2500 * t2539 + t2516 * t2542, -t2499 * t2539 - t2542 * t2559, 0, -t2421 * t2539 + t2435 * t2542, 0, 0, 0, 0, 0, 0, -t2444 * t2539 + t2459 * t2542, -t2445 * t2539 + t2460 * t2542, -t2481 * t2539 + t2483 * t2542, -t2370 * t2539 + t2393 * t2542, 0, 0, 0, 0, 0, 0, -t2372 * t2539 + t2392 * t2542, -t2378 * t2539 + t2396 * t2542, -t2368 * t2539 + t2391 * t2542, -t2322 * t2539 + t2337 * t2542, 0, 0, 0, 0, 0, 0, -t2328 * t2539 + t2339 * t2542, t2640, t2632, -t2306 * t2539 + t2308 * t2542, 0, 0, 0, 0, 0, 0, -t2334 * t2539 + t2341 * t2542, t2632, -t2640, -t2304 * t2539 + t2307 * t2542; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2518 * t2542 + t2519 * t2539, 0, 0, 0, 0, 0, 0, t2500 * t2542 + t2516 * t2539, t2499 * t2542 - t2539 * t2559, 0, t2421 * t2542 + t2435 * t2539, 0, 0, 0, 0, 0, 0, t2444 * t2542 + t2459 * t2539, t2445 * t2542 + t2460 * t2539, t2481 * t2542 + t2483 * t2539, t2370 * t2542 + t2393 * t2539, 0, 0, 0, 0, 0, 0, t2372 * t2542 + t2392 * t2539, t2378 * t2542 + t2396 * t2539, t2368 * t2542 + t2391 * t2539, t2322 * t2542 + t2337 * t2539, 0, 0, 0, 0, 0, 0, t2328 * t2542 + t2339 * t2539, -t2639, t2631, t2306 * t2542 + t2308 * t2539, 0, 0, 0, 0, 0, 0, t2334 * t2542 + t2341 * t2539, t2631, t2639, t2304 * t2542 + t2307 * t2539; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2596, 0, 0, 0, 0, 0, 0, t2498, t2497, 0, t2420, 0, 0, 0, 0, 0, 0, t2442, t2443, t2480, t2369, 0, 0, 0, 0, 0, 0, t2371, t2377, t2367, t2321, 0, 0, 0, 0, 0, 0, t2326, -t2325, t2628, t2305, 0, 0, 0, 0, 0, 0, t2332, t2628, t2325, t2303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2519, 0, 0, 0, 0, 0, 0, t2516, -t2559, 0, t2435, 0, 0, 0, 0, 0, 0, t2459, t2460, t2483, t2393, 0, 0, 0, 0, 0, 0, t2392, t2396, t2391, t2337, 0, 0, 0, 0, 0, 0, t2339, -t2338, t2619, t2308, 0, 0, 0, 0, 0, 0, t2341, t2619, t2338, t2307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2518, 0, 0, 0, 0, 0, 0, t2500, t2499, 0, t2421, 0, 0, 0, 0, 0, 0, t2444, t2445, t2481, t2370, 0, 0, 0, 0, 0, 0, t2372, t2378, t2368, t2322, 0, 0, 0, 0, 0, 0, t2328, -t2327, t2627, t2306, 0, 0, 0, 0, 0, 0, t2334, t2627, t2327, t2304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2596, 0, 0, 0, 0, 0, 0, t2498, t2497, 0, t2420, 0, 0, 0, 0, 0, 0, t2442, t2443, t2480, t2369, 0, 0, 0, 0, 0, 0, t2371, t2377, t2367, t2321, 0, 0, 0, 0, 0, 0, t2326, -t2325, t2628, t2305, 0, 0, 0, 0, 0, 0, t2332, t2628, t2325, t2303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2551, -qJDD(2), 0, t2474, 0, 0, 0, 0, 0, 0, t2487, t2488, t2514, t2403, 0, 0, 0, 0, 0, 0, t2419, t2423, t2409, t2355, 0, 0, 0, 0, 0, 0, t2359, -t2358, t2615, t2314, 0, 0, 0, 0, 0, 0, t2364, t2615, t2358, t2310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t2551, 0, -t2578, 0, 0, 0, 0, 0, 0, t2513, -t2511, t2517, -t2457, 0, 0, 0, 0, 0, 0, -t2440, -t2452, -t2432, -t2365, 0, 0, 0, 0, 0, 0, -t2613, -t2381, -t2608, -t2315, 0, 0, 0, 0, 0, 0, -t2613, -t2608, t2381, -t2311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2556, 0, 0, 0, 0, 0, 0, t2485, t2486, 0, t2402, 0, 0, 0, 0, 0, 0, t2418, t2422, t2408, t2354, 0, 0, 0, 0, 0, 0, t2357, -t2356, t2616, t2313, 0, 0, 0, 0, 0, 0, t2362, t2616, t2356, t2309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2526, t2521, t2584, t2449, 0, 0, 0, 0, 0, 0, t2441, t2453, t2433, t2366, 0, 0, 0, 0, 0, 0, t2614, -t2375, t2609, t2316, 0, 0, 0, 0, 0, 0, t2614, t2609, t2375, t2312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2520, t2525, -t2585, t2448, 0, 0, 0, 0, 0, 0, -t2467, -t2469, -t2462, -t2427, 0, 0, 0, 0, 0, 0, -t2412, -t2553, t2425, -t2397, 0, 0, 0, 0, 0, 0, -t2411, t2425, t2553, -t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2513, t2511, -t2517, t2457, 0, 0, 0, 0, 0, 0, t2440, t2452, t2432, t2365, 0, 0, 0, 0, 0, 0, t2613, t2381, t2608, t2315, 0, 0, 0, 0, 0, 0, t2613, t2608, -t2381, t2311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2482, t2472, t2468, t2395, 0, 0, 0, 0, 0, 0, t2610, t2406, t2602, t2336, 0, 0, 0, 0, 0, 0, t2610, t2602, -t2406, t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2473, t2494, t2470, t2394, 0, 0, 0, 0, 0, 0, t2611, t2404, t2603, t2335, 0, 0, 0, 0, 0, 0, t2611, t2603, -t2404, t2323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2467, t2469, t2462, t2427, 0, 0, 0, 0, 0, 0, t2412, t2553, -t2425, t2397, 0, 0, 0, 0, 0, 0, t2411, -t2425, -t2553, t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2604, t2437, t2555, t2349, 0, 0, 0, 0, 0, 0, t2604, t2555, -t2437, t2342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2438, t2605, -t2417, t2348, 0, 0, 0, 0, 0, 0, -t2438, -t2417, -t2605, -t2343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2412, t2553, -t2425, t2397, 0, 0, 0, 0, 0, 0, t2411, -t2425, -t2553, t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2604, t2555, -t2437, t2342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2411, -t2425, -t2553, t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2438, t2417, t2605, t2343;];
f_new_reg  = t1;
