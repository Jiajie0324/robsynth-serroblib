% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRPRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP3_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:38:21
% EndTime: 2019-03-08 21:38:30
% DurationCPUTime: 2.97s
% Computational Cost: add. (2652->275), mult. (7146->488), div. (0->0), fcn. (6782->10), ass. (0->157)
t97 = sin(pkin(11));
t93 = t97 ^ 2;
t99 = cos(pkin(11));
t94 = t99 ^ 2;
t205 = t93 + t94;
t101 = sin(qJ(3));
t102 = cos(qJ(3));
t184 = cos(pkin(6));
t192 = sin(qJ(2));
t98 = sin(pkin(6));
t118 = t98 * t192 * t102 + t184 * t101;
t115 = t118 * qJD(3);
t194 = cos(qJ(2));
t155 = qJD(2) * t194;
t140 = t102 * t155;
t148 = t184 * t102;
t159 = t101 * t192;
t67 = t98 * t159 - t148;
t200 = t67 * qJD(3) - t98 * t140;
t204 = -t101 * t115 - t102 * t200;
t193 = cos(qJ(5));
t152 = qJD(5) * t193;
t100 = sin(qJ(5));
t178 = qJD(5) * t100;
t203 = t99 * t152 - t97 * t178;
t180 = qJD(3) * t102;
t142 = t98 * t155;
t57 = t101 * t142 + t115;
t185 = t57 * t101;
t202 = t67 * t180 + t185;
t201 = (t101 ^ 2 - t102 ^ 2) * qJD(3);
t199 = 0.2e1 * t203;
t167 = t193 * t97;
t74 = t100 * t99 + t167;
t66 = t74 * qJD(5);
t198 = 0.2e1 * t66;
t197 = 2 * qJD(6);
t196 = t97 * pkin(8);
t195 = t99 * pkin(3);
t191 = pkin(3) * t101;
t40 = t67 * t57;
t190 = pkin(9) + qJ(4);
t169 = -pkin(4) - t196;
t187 = t101 * t99;
t182 = t101 * qJ(4);
t76 = -t102 * pkin(3) - pkin(2) - t182;
t71 = t99 * t76;
t50 = -pkin(9) * t187 + t169 * t102 + t71;
t188 = t101 * t97;
t186 = t102 * t99;
t86 = pkin(8) * t186;
t62 = t97 * t76 + t86;
t58 = -pkin(9) * t188 + t62;
t23 = t100 * t50 + t193 * t58;
t163 = t97 * t180;
t90 = pkin(8) * t180;
t68 = pkin(4) * t163 + t90;
t75 = pkin(4) * t188 + t101 * pkin(8);
t183 = qJD(4) * t97;
t181 = t99 * qJD(4);
t91 = qJD(3) * t101;
t179 = qJD(4) * t102;
t177 = t101 * qJD(4);
t176 = t102 * qJD(6);
t43 = t101 * t203 + t74 * t180;
t63 = t74 * t101;
t175 = 0.2e1 * t63 * t43;
t166 = t193 * t99;
t73 = t100 * t97 - t166;
t174 = t73 * t198;
t173 = -0.2e1 * pkin(2) * qJD(3);
t172 = t102 * t196;
t171 = pkin(8) * t187;
t170 = pkin(5) * t91;
t89 = -t99 * pkin(4) - pkin(3);
t168 = t98 * t194;
t162 = t97 * t177;
t161 = t99 * t180;
t160 = t99 * t177;
t158 = qJ(6) * t91;
t157 = t101 * t180;
t131 = t190 * t167;
t149 = t193 * qJD(4);
t79 = t190 * t99;
t38 = qJD(5) * t131 - t99 * t149 + (qJD(5) * t79 + t183) * t100;
t151 = t100 * t190;
t39 = t79 * t152 + t100 * t181 + (-qJD(5) * t151 + t149) * t97;
t59 = t100 * t79 + t131;
t60 = -t97 * t151 + t193 * t79;
t156 = -t60 * t38 + t59 * t39;
t154 = qJD(2) * t192;
t153 = qJD(3) * t194;
t150 = t190 * t102;
t147 = 0.2e1 * t157;
t146 = t97 * t161;
t145 = 0.2e1 * t205 * qJD(4);
t144 = -0.2e1 * t201;
t141 = t98 * t154;
t139 = qJD(3) * t148;
t42 = t100 * t163 + t101 * t66 - t193 * t161;
t64 = -t100 * t188 + t101 * t166;
t138 = t42 * t63 - t64 * t43;
t137 = t43 * t73 + t63 * t66;
t133 = -qJ(4) * t102 + t191;
t54 = -t160 + (pkin(8) * t188 + t99 * t133) * qJD(3);
t55 = -t162 + (t97 * t133 - t171) * qJD(3);
t136 = -t54 * t97 + t55 * t99;
t135 = t203 * t67 + t57 * t74;
t134 = -t203 * t73 - t74 * t66;
t112 = t118 * t97 + t99 * t168;
t107 = t193 * t112;
t56 = t118 * t99 - t97 * t168;
t24 = t100 * t56 + t107;
t111 = t100 * t112;
t25 = t193 * t56 - t111;
t116 = -qJD(3) * t159 + t140;
t103 = t99 * t139 + (t116 * t99 + t97 * t154) * t98;
t104 = t97 * t139 - (-t116 * t97 + t99 * t154) * t98;
t7 = qJD(5) * t107 + t100 * t104 - t193 * t103 + t56 * t178;
t8 = -qJD(5) * t111 + t100 * t103 + t193 * t104 + t56 * t152;
t130 = 0.2e1 * t24 * t8 - 0.2e1 * t25 * t7 + 0.2e1 * t40;
t22 = -t100 * t58 + t193 * t50;
t129 = -t38 * t102 - t60 * t91;
t128 = t39 * t102 - t59 * t91;
t127 = -t102 * t43 + t63 * t91;
t126 = -t102 * t66 + t73 * t91;
t125 = t24 * t39 - t25 * t38 + t8 * t59 - t7 * t60;
t124 = -t24 * t42 - t25 * t43 + t7 * t63 + t8 * t64;
t123 = t203 * t24 - t25 * t66 + t7 * t73 + t8 * t74;
t106 = -t160 + (-t99 * t150 + (-t169 + t195) * t101) * qJD(3);
t108 = -t162 + (-t171 + (-t150 + t191) * t97) * qJD(3);
t9 = -t100 * t106 - t193 * t108 - t50 * t152 + t58 * t178;
t122 = t38 * t63 + t39 * t64 - t59 * t42 - t60 * t43;
t121 = t202 * pkin(8);
t120 = t8 * t102 - t24 * t91 + t67 * t43 + t57 * t63;
t119 = 0.2e1 * t203 * t59 + 0.2e1 * t38 * t73 + 0.2e1 * t39 * t74 - 0.2e1 * t60 * t66;
t117 = -t203 * t63 + t42 * t73 - t74 * t43 - t64 * t66;
t114 = t7 * t102 + t25 * t91 + t67 * t42 - t57 * t64;
t109 = qJD(3) * t112;
t10 = -t100 * t108 + t193 * t106 - t58 * t152 - t50 * t178;
t82 = -0.2e1 * t157;
t61 = t71 - t172;
t53 = t74 * t199;
t48 = t73 * pkin(5) - t74 * qJ(6) + t89;
t45 = -t102 * t203 + t74 * t91;
t31 = t66 * pkin(5) - qJ(6) * t203 - t74 * qJD(6);
t30 = t63 * pkin(5) - t64 * qJ(6) + t75;
t27 = -0.2e1 * t64 * t42;
t20 = 0.2e1 * t42 * t102 + 0.2e1 * t64 * t91;
t19 = t102 * pkin(5) - t22;
t17 = -t102 * qJ(6) + t23;
t16 = t57 * t73 + t67 * t66;
t14 = t203 * t64 - t42 * t74;
t11 = t43 * pkin(5) + t42 * qJ(6) - t64 * qJD(6) + t68;
t6 = -t10 - t170;
t5 = t158 - t9 - t176;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t98 ^ 2 * t194 * t154 - 0.2e1 * t118 * t200 + 0.2e1 * t40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t103 * t56 + 0.2e1 * t104 * t112 + 0.2e1 * t40, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141, -t142, 0, 0, 0, 0, 0, 0, 0, 0 (-t101 * t153 - t102 * t154) * t98 (t101 * t154 - t102 * t153) * t98, t202 + t204, -pkin(2) * t141 + pkin(8) * t204 + t121, 0, 0, 0, 0, 0, 0, -t101 * t109 + t102 * t104 + t67 * t163 + t97 * t185, t102 * t103 + t67 * t161 + t99 * t185 - t56 * t91, -t103 * t188 + t104 * t187 + t109 * t186 - t56 * t163, t103 * t62 - t104 * t61 - t112 * t54 + t56 * t55 + t121, 0, 0, 0, 0, 0, 0, t120, -t114, t124, -t24 * t10 - t8 * t22 - t7 * t23 - t25 * t9 + t57 * t75 + t67 * t68, 0, 0, 0, 0, 0, 0, t120, t124, t114, t67 * t11 - t7 * t17 + t8 * t19 + t24 * t6 + t25 * t5 + t57 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, t144, 0, t82, 0, 0, t101 * t173, t102 * t173, 0, 0, t94 * t147, -0.4e1 * t101 * t146, 0.2e1 * t99 * t201, t93 * t147, t97 * t144, t82, -0.2e1 * t54 * t102 + 0.2e1 * (t61 + 0.2e1 * t172) * t91, 0.2e1 * t55 * t102 + 0.2e1 * (-t62 + 0.2e1 * t86) * t91, 0.2e1 * (-t54 * t99 - t55 * t97) * t101 + 0.2e1 * (-t61 * t99 - t62 * t97) * t180, 0.2e1 * pkin(8) ^ 2 * t157 + 0.2e1 * t61 * t54 + 0.2e1 * t62 * t55, t27, 0.2e1 * t138, t20, t175, -0.2e1 * t127, t82, -0.2e1 * t10 * t102 + 0.2e1 * t22 * t91 + 0.2e1 * t75 * t43 + 0.2e1 * t68 * t63, -0.2e1 * t9 * t102 - 0.2e1 * t23 * t91 - 0.2e1 * t75 * t42 + 0.2e1 * t68 * t64, -0.2e1 * t10 * t64 + 0.2e1 * t22 * t42 - 0.2e1 * t23 * t43 + 0.2e1 * t9 * t63, 0.2e1 * t22 * t10 - 0.2e1 * t23 * t9 + 0.2e1 * t75 * t68, t27, t20, -0.2e1 * t138, t82, 0.2e1 * t127, t175, 0.2e1 * t6 * t102 + 0.2e1 * t11 * t63 - 0.2e1 * t19 * t91 + 0.2e1 * t30 * t43, -0.2e1 * t17 * t43 - 0.2e1 * t19 * t42 - 0.2e1 * t5 * t63 + 0.2e1 * t6 * t64, -0.2e1 * t5 * t102 - 0.2e1 * t11 * t64 + 0.2e1 * t17 * t91 + 0.2e1 * t30 * t42, 0.2e1 * t30 * t11 + 0.2e1 * t17 * t5 + 0.2e1 * t19 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, t200, 0, 0, 0, 0, 0, 0, 0, 0, -t57 * t99, t57 * t97, -t205 * t200, -t57 * pkin(3) + t112 * t183 + t56 * t181 + (t103 * t99 + t104 * t97) * qJ(4), 0, 0, 0, 0, 0, 0, t16, t135, t123, t57 * t89 + t125, 0, 0, 0, 0, 0, 0, t16, t123, -t135, t67 * t31 + t57 * t48 + t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, 0, -t91, 0, -t90, pkin(8) * t91, 0, 0, t146 (-t93 + t94) * t180, t97 * t91, -t146, t99 * t91, 0, t97 * t179 + (-t97 * t182 + (-t97 * pkin(3) - t99 * pkin(8)) * t102) * qJD(3), t99 * t179 + (-t99 * t182 + (-t195 + t196) * t102) * qJD(3), t136, -pkin(3) * t90 + (-t61 * t97 + t62 * t99) * qJD(4) + t136 * qJ(4), t14, t117, t45, t137, -t126, 0, t89 * t43 + t75 * t66 + t68 * t73 + t128, t203 * t75 - t89 * t42 + t68 * t74 + t129, -t10 * t74 - t203 * t22 - t23 * t66 + t9 * t73 + t122, -t10 * t59 - t22 * t39 - t23 * t38 - t9 * t60 + t68 * t89, t14, t45, -t117, 0, t126, t137, t11 * t73 + t30 * t66 + t31 * t63 + t48 * t43 + t128, -t17 * t66 + t19 * t203 - t5 * t73 + t6 * t74 + t122, -t11 * t74 - t203 * t30 - t31 * t64 + t48 * t42 - t129, t11 * t48 - t17 * t38 + t19 * t39 + t30 * t31 + t5 * t60 + t6 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, qJ(4) * t145, t53, 0.2e1 * t134, 0, t174, 0, 0, t89 * t198, t89 * t199, t119, 0.2e1 * t156, t53, 0, -0.2e1 * t134, 0, 0, t174, 0.2e1 * t31 * t73 + 0.2e1 * t48 * t66, t119, -0.2e1 * t203 * t48 - 0.2e1 * t31 * t74, 0.2e1 * t48 * t31 + 0.2e1 * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, t161, 0, t90, 0, 0, 0, 0, 0, 0, t43, -t42, 0, t68, 0, 0, 0, 0, 0, 0, t43, 0, t42, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t203, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, -t203, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t8, t7, 0, 0, 0, 0, 0, 0, 0, 0, -t8, 0, -t7, -t8 * pkin(5) - t7 * qJ(6) + t25 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, -t43, t91, t10, t9, 0, 0, 0, -t42, 0, t91, t43, 0, t10 + 0.2e1 * t170, pkin(5) * t42 - t43 * qJ(6) - t63 * qJD(6), 0.2e1 * t158 - t9 - 0.2e1 * t176, -t6 * pkin(5) + t5 * qJ(6) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, 0, -t66, 0, -t39, t38, 0, 0, 0, t203, 0, 0, t66, 0, -t39, -pkin(5) * t203 - t66 * qJ(6) - t73 * qJD(6), -t38, -t39 * pkin(5) - t38 * qJ(6) + t60 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, qJ(6) * t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t91, -t42, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, 0, t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
