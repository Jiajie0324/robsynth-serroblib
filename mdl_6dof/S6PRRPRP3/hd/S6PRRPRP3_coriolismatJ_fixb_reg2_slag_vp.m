% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:39
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:38:27
% EndTime: 2019-03-08 21:39:00
% DurationCPUTime: 23.27s
% Computational Cost: add. (13033->731), mult. (31444->955), div. (0->0), fcn. (34909->10), ass. (0->536)
t566 = sin(pkin(11));
t567 = sin(pkin(6));
t568 = cos(pkin(11));
t571 = sin(qJ(2));
t572 = cos(qJ(3));
t573 = cos(qJ(2));
t810 = t572 * t573;
t466 = (-t566 * t810 + t568 * t571) * t567;
t881 = cos(qJ(5));
t444 = t881 * t466;
t467 = (t566 * t571 + t568 * t810) * t567;
t569 = sin(qJ(5));
t815 = t569 * t467;
t800 = t815 / 0.2e1 - t444 / 0.2e1;
t570 = sin(qJ(3));
t734 = t881 * t568;
t814 = t569 * t566;
t940 = t734 - t814;
t493 = t940 * t570;
t821 = t567 * t571;
t874 = cos(pkin(6));
t502 = t570 * t821 - t572 * t874;
t893 = t502 / 0.2e1;
t820 = t567 * t573;
t743 = t566 * t820;
t702 = t874 * t570;
t744 = t572 * t821;
t503 = t702 + t744;
t827 = t503 * t568;
t417 = -t743 + t827;
t742 = t568 * t820;
t631 = -t503 * t566 - t742;
t264 = t417 * t881 + t569 * t631;
t899 = t264 / 0.2e1;
t974 = t493 * t893 + t572 * t899;
t86 = t800 + t974;
t965 = qJD(1) * t86;
t998 = qJD(2) * t86;
t94 = t800 - t974;
t997 = -qJD(2) * t94 - t264 * qJD(5);
t735 = t881 * t566;
t813 = t569 * t568;
t518 = t735 + t813;
t710 = -t820 / 0.2e1;
t693 = t570 * t710;
t538 = t572 * t814;
t495 = t572 * t734 - t538;
t325 = t502 * t940;
t716 = t325 / 0.2e1;
t892 = t503 / 0.2e1;
t984 = t570 / 0.2e1;
t987 = -t264 * t984 + t493 * t892 + t495 * t893 - t572 * t716;
t64 = t518 * t693 + t987;
t996 = qJD(2) * t64;
t995 = t64 * qJD(1);
t709 = t820 / 0.2e1;
t692 = t570 * t709;
t67 = t518 * t692 + t987;
t756 = t503 * qJD(3);
t994 = -qJD(2) * t67 - t518 * t756;
t490 = t518 * t570;
t263 = t569 * t417 - t631 * t881;
t900 = t263 / 0.2e1;
t690 = t490 * t893 + t572 * t900;
t736 = t881 * t467;
t816 = t569 * t466;
t802 = t816 / 0.2e1 + t736 / 0.2e1;
t90 = t690 - t802;
t993 = qJD(3) * t64 - qJD(5) * t90;
t303 = t736 + t816;
t741 = t570 * t820;
t92 = t690 + t802;
t992 = t67 * qJD(3) - t92 * qJD(5) + qJD(2) * (t303 * t572 + t493 * t741);
t991 = qJD(1) * t90;
t990 = qJD(2) * t90;
t613 = -t813 / 0.2e1 - t735 / 0.2e1;
t988 = t613 * t502;
t986 = qJD(2) * t92 - qJD(5) * t263;
t790 = qJD(2) * t490;
t359 = qJD(3) * t940 - t790;
t492 = t518 * t572;
t889 = t518 / 0.2e1;
t891 = t940 / 0.2e1;
t262 = -t490 * t889 + t493 * t891;
t957 = t262 * qJD(5);
t983 = -t359 * t492 - t957;
t982 = -t492 * t790 - t957;
t218 = -t490 * t495 - t492 * t493;
t958 = t218 * qJD(2);
t835 = t493 * t518;
t836 = t490 * t940;
t138 = t835 + t836;
t959 = t138 * qJD(5);
t981 = t959 + t958;
t508 = t940 ^ 2;
t902 = t518 ^ 2;
t335 = t902 - t508;
t980 = t335 * qJD(5);
t979 = t959 - t958 + qJD(3) * (t492 * t518 - t495 * t940);
t487 = t490 ^ 2;
t903 = t493 ^ 2;
t285 = t903 - t487;
t643 = qJD(2) * t285 + qJD(3) * t138;
t642 = qJD(2) * t138 + qJD(3) * t335;
t978 = -qJD(3) * t218 + qJD(5) * t285;
t877 = pkin(9) + qJ(4);
t684 = -t570 * t877 - pkin(2);
t818 = t568 * t572;
t547 = pkin(8) * t818;
t878 = t572 * pkin(3);
t681 = -qJ(4) * t570 - t878;
t636 = -pkin(2) + t681;
t469 = t566 * t636 + t547;
t823 = t566 * t570;
t418 = -pkin(9) * t823 + t469;
t737 = t881 * t418;
t739 = -pkin(8) * t566 - pkin(4);
t221 = t737 + t684 * t813 + (t569 * (-pkin(3) * t568 + t739) - qJ(6)) * t572;
t977 = -t221 / 0.2e1;
t976 = -t263 / 0.2e1;
t896 = -t490 / 0.2e1;
t895 = -t492 / 0.2e1;
t894 = t493 / 0.2e1;
t890 = -t518 / 0.2e1;
t829 = t502 * t518;
t975 = -t829 / 0.2e1;
t713 = t829 / 0.2e1;
t787 = qJD(2) * t572;
t465 = t493 * t787;
t485 = t493 * qJD(5);
t972 = t465 - t485;
t783 = qJD(3) * t570;
t661 = t570 * t490 - t492 * t572;
t932 = qJD(2) * t661;
t970 = t783 * t940 - t932;
t601 = t702 / 0.2e1 + t744 / 0.2e1;
t918 = t263 * t889 + t264 * t891;
t579 = t601 - t918;
t610 = -t263 * t829 - t264 * t325 + t502 * t503;
t921 = t610 * qJD(1);
t969 = -qJD(4) * t579 - t921;
t584 = t601 + t918;
t968 = t584 * qJD(4) + t921;
t917 = t490 * t899 + t493 * t976;
t602 = t692 - t917;
t302 = -t444 + t815;
t695 = t502 * t741;
t595 = t263 * t302 + t264 * t303 + t695;
t923 = t595 * qJD(1);
t967 = t602 * qJD(4) + t923;
t593 = t692 + t917;
t966 = -qJD(4) * t593 - t923;
t943 = t508 + t902;
t961 = qJD(4) * t943;
t944 = t487 + t903;
t960 = qJD(4) * t944;
t210 = t975 - t988;
t956 = t210 * qJD(3) - t998;
t786 = qJD(3) * t518;
t730 = t940 * t786;
t955 = -qJD(2) * t262 - t730;
t215 = t713 - t988;
t954 = t215 * qJD(3) + t997;
t660 = t835 - t836;
t953 = qJD(2) * t944 + qJD(3) * t660;
t789 = qJD(2) * t493;
t732 = t490 * t789;
t952 = qJD(3) * t262 - t732;
t951 = qJD(2) * t660 + qJD(3) * t943;
t882 = -t570 / 0.2e1;
t908 = t502 * t895 + t503 * t896 + t572 * t713;
t583 = t263 * t882 - t692 * t940 - t908;
t950 = -qJD(5) * t94 + qJD(3) * t583 + (t302 * t572 + t490 * t741) * qJD(2);
t577 = (-t709 * t940 + t900) * t570 + t908;
t949 = -qJD(3) * t577 + qJD(5) * t86;
t564 = t570 ^ 2;
t565 = t572 ^ 2;
t542 = t565 - t564;
t794 = t613 * t572;
t344 = t895 - t794;
t942 = -qJD(3) * t344 + t972;
t834 = t495 * qJ(6);
t880 = t492 * pkin(5);
t941 = -t834 / 0.2e1 + t880 / 0.2e1;
t504 = t940 * qJD(5);
t687 = -t734 / 0.2e1;
t347 = t538 / 0.2e1 + (t891 + t687) * t572;
t760 = t347 * qJD(2);
t939 = t760 - t504;
t587 = t264 * t895 - t325 * t896 + t495 * t900 - t829 * t894;
t919 = t302 * t889 + t303 * t891;
t574 = t587 - t919;
t938 = qJD(1) * t574;
t937 = qJD(1) * t577;
t936 = qJD(1) * t593;
t935 = qJD(2) * t574;
t931 = qJD(3) * t574;
t533 = t877 * t568;
t703 = t877 * t566;
t425 = t569 * t533 + t703 * t881;
t426 = t533 * t881 - t569 * t703;
t663 = t425 * t518 + t426 * t940;
t925 = qJD(4) * t663;
t258 = t660 * qJD(4);
t536 = pkin(3) * t570 - qJ(4) * t572;
t546 = pkin(8) * t823;
t481 = t568 * t536 + t546;
t397 = pkin(4) * t570 - pkin(9) * t818 + t481;
t374 = t569 * t397;
t819 = t568 * t570;
t482 = -pkin(8) * t819 + t566 * t536;
t822 = t566 * t572;
t422 = -pkin(9) * t822 + t482;
t404 = t881 * t422;
t804 = -t374 / 0.2e1 - t404 / 0.2e1;
t738 = t881 * t397;
t817 = t569 * t422;
t803 = t738 / 0.2e1 - t817 / 0.2e1;
t920 = t425 * t894 + t426 * t896;
t580 = t739 * t572 + (t684 - t878) * t568;
t247 = t418 * t569 - t881 * t580;
t248 = t569 * t580 + t737;
t916 = t247 * t889 + t248 * t891;
t222 = pkin(5) * t572 + t247;
t915 = t222 * t890 + t940 * t977;
t914 = qJD(2) * t577 - t210 * qJD(5);
t578 = t587 + t919;
t913 = qJD(2) * t578 + (-t325 * t940 - t518 * t829) * qJD(3);
t912 = qJD(2) * t583 + t215 * qJD(5) - t756 * t940;
t911 = qJD(3) * t578 + (t302 * t493 - t303 * t490) * qJD(2);
t909 = qJD(3) * t661 - t572 * t485;
t907 = -qJD(1) * t579 + qJD(3) * t663;
t906 = qJD(2) * t593 + qJD(3) * t579;
t905 = qJD(2) * t602 + qJD(3) * t584;
t904 = qJD(2) * t595 + qJD(3) * t610;
t901 = -pkin(5) / 0.2e1;
t715 = -t325 / 0.2e1;
t897 = t425 / 0.2e1;
t524 = pkin(4) * t823 + t570 * pkin(8);
t888 = t524 / 0.2e1;
t552 = -pkin(4) * t568 - pkin(3);
t887 = -t552 / 0.2e1;
t560 = t572 * pkin(8);
t886 = t560 / 0.2e1;
t885 = -t566 / 0.2e1;
t884 = t566 / 0.2e1;
t883 = -t568 / 0.2e1;
t879 = t570 * pkin(5);
t635 = qJ(6) * t895 + t495 * t901;
t705 = t247 / 0.2e1 - t222 / 0.2e1;
t706 = t221 / 0.2e1 - t248 / 0.2e1;
t9 = t518 * t706 + t705 * t940 + t635;
t876 = t9 * qJD(2);
t866 = t247 * t940;
t598 = -t866 / 0.2e1;
t14 = t866 / 0.2e1 + t598;
t875 = t14 * qJD(5) + t258;
t873 = qJD(2) * t14;
t872 = qJD(3) * t14;
t867 = t247 * t426;
t139 = -t867 / 0.2e1;
t23 = t139 + t867 / 0.2e1;
t871 = qJD(3) * t23;
t864 = t247 * t572;
t862 = t248 * t572;
t28 = (-t221 + t248) * t493 + (-t222 + t247) * t490;
t852 = t28 * qJD(2);
t680 = pkin(5) * t490 - qJ(6) * t493;
t296 = t680 + t524;
t851 = t296 * t493;
t849 = t303 * t426;
t845 = t417 * t568;
t842 = t425 * t570;
t841 = t425 * t572;
t838 = t426 * t570;
t837 = t426 * t572;
t413 = pkin(5) * t518 - qJ(6) * t940;
t833 = t502 * t413;
t826 = t503 * t570;
t811 = t570 * qJ(6);
t768 = t210 * qJD(1);
t808 = -t518 * qJD(4) + t768;
t416 = t426 * qJD(5);
t807 = -t768 - t416;
t257 = t404 + t374;
t686 = t734 / 0.2e1;
t798 = (-t814 / 0.2e1 + t686) * t502;
t712 = t502 * t884;
t797 = t502 * t687 + t569 * t712;
t545 = pkin(4) * t822;
t525 = t560 + t545;
t562 = t566 ^ 2;
t563 = t568 ^ 2;
t540 = t563 + t562;
t328 = -t493 * t570 + t495 * t572;
t791 = qJD(2) * t328;
t788 = qJD(2) * t567;
t785 = qJD(3) * t552;
t784 = qJD(3) * t568;
t782 = qJD(3) * t572;
t781 = qJD(3) * t573;
t780 = qJD(4) * t347;
t779 = qJD(4) * t490;
t778 = qJD(4) * t572;
t777 = qJD(5) * t247;
t775 = qJD(5) * t425;
t774 = qJD(5) * t490;
t773 = qJD(5) * t572;
t772 = qJD(6) * t518;
t771 = qJD(6) * t572;
t611 = t631 * t566;
t113 = (t503 + t611 - t845) * t502;
t770 = t113 * qJD(1);
t114 = t417 * t467 + t466 * t631 + t695;
t769 = t114 * qJD(1);
t468 = -pkin(8) * t822 + t568 * t636;
t278 = -t468 * t570 + (t481 - 0.2e1 * t546) * t572;
t765 = t278 * qJD(2);
t280 = (t502 * t570 + t503 * t572 - t821) * t820;
t764 = t280 * qJD(1);
t763 = t344 * qJD(2);
t345 = (t890 + t613) * t572;
t762 = t345 * qJD(2);
t346 = -t538 / 0.2e1 + (t891 + t686) * t572;
t339 = t346 * qJD(2);
t761 = t346 * qJD(4);
t348 = t492 / 0.2e1 - t794;
t759 = t348 * qJD(2);
t349 = (t889 + t613) * t572;
t758 = t349 * qJD(2);
t757 = t490 * qJD(6);
t486 = t493 * qJD(4);
t513 = t540 * t564;
t755 = t513 * qJD(2);
t514 = t542 * t566;
t754 = t514 * qJD(2);
t753 = t940 * qJD(6);
t517 = t542 * t568;
t752 = t517 * qJD(2);
t505 = t518 * qJD(5);
t751 = t540 * qJD(3);
t750 = t542 * qJD(2);
t749 = t570 * qJD(2);
t748 = pkin(2) * t749;
t747 = pkin(2) * t787;
t746 = pkin(8) * t782;
t728 = t566 * t784;
t727 = t490 * t778;
t726 = t570 * t778;
t421 = t940 * t505;
t724 = t573 * t788;
t723 = t570 * t782;
t543 = t572 * t749;
t722 = t302 * t897;
t721 = -t849 / 0.2e1;
t720 = t417 * t882;
t401 = -t837 / 0.2e1;
t719 = t469 * t883;
t711 = t826 / 0.2e1;
t704 = t545 / 0.2e1 + t886;
t701 = t540 * t502;
t700 = -0.2e1 * t566 * t819;
t699 = -t325 * t426 - t425 * t829;
t698 = t425 * t495 - t426 * t492;
t696 = qJD(3) * t345 - t465;
t464 = t490 * t787;
t274 = qJD(3) * t346 - t464;
t548 = -qJD(5) + t787;
t694 = t568 * t543;
t685 = t803 + t879;
t683 = t811 - t804;
t682 = -t879 / 0.2e1 - t803;
t337 = pkin(5) * t493 + qJ(6) * t490;
t679 = -pkin(5) * t940 - qJ(6) * t518;
t225 = t257 + t811;
t256 = t738 - t817;
t226 = -t256 - t879;
t297 = t525 - t834 + t880;
t576 = t221 * t715 + t222 * t975 + t225 * t899 + t226 * t900 + t296 * t892 + t297 * t893;
t373 = t552 + t679;
t604 = t373 * t692 + t722;
t2 = t721 + t576 - t604;
t21 = t221 * t225 + t222 * t226 + t296 * t297;
t678 = t2 * qJD(1) + t21 * qJD(2);
t25 = -t221 * t247 + t222 * t248 + t296 * t337;
t581 = -t263 * t706 - t264 * t705 + t337 * t893;
t633 = t302 * pkin(5) / 0.2e1 - t303 * qJ(6) / 0.2e1;
t6 = t581 + t633;
t677 = t6 * qJD(1) + t25 * qJD(2);
t575 = t247 * t975 + t248 * t715 + t256 * t976 + t257 * t899 + t503 * t888 + t525 * t893;
t603 = t552 * t692 + t722;
t4 = t721 + t575 - t603;
t45 = -t247 * t256 + t248 * t257 + t524 * t525;
t676 = t4 * qJD(1) + t45 * qJD(2);
t27 = -t221 * t492 + t222 * t495 - t225 * t490 + t226 * t493;
t674 = t27 * qJD(2) + t938;
t30 = t247 * t495 - t248 * t492 - t256 * t493 - t257 * t490;
t673 = t30 * qJD(2) + t938;
t672 = qJD(2) * t23;
t46 = -t221 * t570 + t225 * t572 + t296 * t495 + t297 * t493;
t671 = -t46 * qJD(2) - t995;
t47 = -t222 * t570 + t226 * t572 + t296 * t492 + t297 * t490;
t670 = t47 * qJD(2) - t937;
t69 = t247 * t570 + t256 * t572 - t525 * t490 - t524 * t492;
t669 = -t69 * qJD(2) - t937;
t70 = -t248 * t570 + t257 * t572 + t493 * t525 + t495 * t524;
t668 = t70 * qJD(2) + t995;
t71 = -t296 * t490 + t337 * t493 - t864;
t667 = qJD(2) * t71 - t991;
t72 = t337 * t490 + t851 + t862;
t666 = qJD(2) * t72 + t965;
t73 = -t221 * t490 + t222 * t493;
t665 = qJD(2) * t73 - t936;
t83 = t247 * t493 - t248 * t490;
t664 = -qJD(2) * t83 + t936;
t662 = -t481 * t566 + t482 * t568;
t100 = t221 * t572 + t851;
t655 = -qJD(2) * t100 - t965;
t130 = -t490 * t524 - t864;
t654 = -qJD(2) * t130 + t991;
t131 = -t524 * t493 - t862;
t653 = -qJD(2) * t131 + t965;
t154 = pkin(8) ^ 2 * t570 * t572 + t468 * t481 + t469 * t482;
t590 = -t417 * t482 / 0.2e1 - t631 * t481 / 0.2e1;
t628 = t467 * t568 / 0.2e1 + t466 * t885;
t609 = t628 * qJ(4);
t627 = t468 * t884 + t719;
t48 = pkin(3) * t693 - pkin(8) * t826 / 0.2e1 + t609 + (-t560 / 0.2e1 - t627) * t502 + t590;
t652 = -t48 * qJD(1) + t154 * qJD(2);
t209 = t713 + t988;
t400 = t837 / 0.2e1;
t629 = t296 * t889 + t373 * t894;
t59 = t400 + t629 + t682;
t651 = t209 * qJD(1) + t59 * qJD(2);
t212 = t715 + t798;
t399 = t841 / 0.2e1;
t625 = -t490 * t887 - t888 * t940;
t97 = t399 + t625 + t804;
t650 = t212 * qJD(1) + t97 * qJD(2);
t152 = t373 * t518 - t413 * t940;
t585 = t337 * t891 + t413 * t896 - t629;
t37 = t401 + t585 + t685;
t649 = qJD(2) * t37 - qJD(3) * t152;
t600 = t631 * t883;
t589 = t417 * t885 + t600;
t582 = t589 * t572;
t116 = t582 - t628;
t126 = (t468 * t572 + t481 * t570) * t568 + (t469 * t572 + t482 * t570) * t566;
t648 = -t116 * qJD(1) + t126 * qJD(2);
t121 = (t566 * t709 + t417 / 0.2e1 - t827 / 0.2e1) * t570;
t279 = t482 * t572 + (-t469 + 0.2e1 * t547) * t570;
t647 = t121 * qJD(1) - t279 * qJD(2);
t186 = (t709 - t589) * t570;
t287 = (t468 * t568 + t469 * t566) * t570;
t646 = qJD(1) * t186 + qJD(2) * t287;
t637 = -qJD(2) * t337 - qJD(3) * t413;
t360 = t786 + t789;
t634 = t225 * qJ(6) / 0.2e1 + t226 * t901;
t632 = qJ(6) * t715 - t829 * t901;
t630 = -t296 * t413 / 0.2e1 - t337 * t373 / 0.2e1;
t597 = t493 * t887 + t524 * t890 + t401;
t96 = t597 + t803;
t624 = qJD(2) * t96 - t518 * t785;
t243 = t882 - t262;
t623 = qJD(2) * t243 - t730;
t618 = qJD(3) * t347 - t464 + t774;
t616 = (qJD(3) * t492 + t485) * t490;
t614 = t704 + t920;
t15 = -t833 / 0.2e1 + t632;
t7 = t425 * t706 + t426 * t705 + t630 + t634;
t78 = t373 * t413;
t612 = -t15 * qJD(1) - t7 * qJD(2) + t78 * qJD(3);
t596 = t704 - t920;
t39 = t596 + t915 + t941;
t608 = -qJD(2) * t39 + t907;
t51 = t596 - t916;
t607 = qJD(2) * t51 - t907;
t153 = -t373 * t940 - t413 * t518;
t211 = t716 + t797;
t398 = -t841 / 0.2e1;
t586 = t296 * t891 + t337 * t889 + t373 * t896 + t413 * t894;
t35 = t398 + t586 + t683;
t606 = qJD(1) * t211 + qJD(2) * t35 - qJD(3) * t153;
t588 = t845 / 0.2e1 - t611 / 0.2e1;
t173 = -t588 + t601;
t283 = t886 + t627;
t527 = t540 * qJ(4);
t605 = qJD(1) * t173 + qJD(2) * t283 - qJD(3) * t527;
t463 = t565 + t903;
t599 = qJD(2) * t463 + t493 * t786 - t773;
t594 = qJD(3) * t681 + t778;
t556 = t783 / 0.2e1;
t555 = -t749 / 0.2e1;
t554 = t749 / 0.2e1;
t535 = t564 * pkin(8) * t820;
t534 = t548 * qJ(6);
t511 = qJD(5) * t882 + t543;
t391 = t493 * t772;
t304 = qJD(3) * t902 + t518 * t789;
t293 = t504 - t339;
t284 = t886 - t627;
t275 = qJD(3) * t348 + t465;
t245 = -qJD(3) * t328 + t490 * t773;
t244 = t882 + t262;
t231 = t248 * qJD(5);
t216 = t975 + t988;
t214 = t716 + t798;
t213 = t715 + t797;
t207 = (qJD(3) * t495 - t774) * t493;
t199 = t849 / 0.2e1;
t187 = t566 * t720 + t570 * t600 + t692;
t183 = -qJD(3) * t349 - t972;
t174 = t588 + t601;
t171 = -qJD(5) * t346 + t791;
t132 = -qJD(5) * t347 + t518 * t783 - t791;
t129 = -t495 * t789 + t957;
t124 = t566 * t692 + t568 * t711 + t720;
t123 = t566 * t711 + t568 * t693 + t631 * t984;
t115 = t582 + t628;
t101 = t360 * t495 + t957;
t99 = -t597 + t803;
t98 = t398 - t625 + t804;
t60 = t401 - t629 + t682;
t52 = t614 + t916;
t49 = t468 * t712 + (pkin(3) * t710 + pkin(8) * t892) * t570 + t609 - t590 + (t719 + t886) * t502;
t40 = t614 - t915 + t941;
t38 = t400 - t585 + t685;
t36 = t399 - t586 + t683;
t22 = t23 * qJD(5);
t16 = t833 / 0.2e1 + t632;
t10 = t221 * t890 + t222 * t891 + t248 * t889 + t598 + t635;
t8 = t139 + t425 * t977 + t248 * t897 + t222 * t426 / 0.2e1 - t630 + t634;
t5 = t581 - t633;
t3 = t199 + t575 + t603;
t1 = t199 + t576 + t604;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t280, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t114 + qJD(3) * t113, 0, 0, 0, 0, 0, 0, 0, 0, 0, t904, 0, 0, 0, 0, 0, 0, 0, 0, 0, t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571 * t788, -t724, 0, 0, 0, 0, 0, 0, 0, 0 (-t570 * t781 - t571 * t787) * t567 (t571 * t749 - t572 * t781) * t567 (t564 + t565) * t724, t764 + (t535 + (pkin(8) * t565 * t573 - pkin(2) * t571) * t567) * qJD(2), 0, 0, 0, 0, 0, 0 (-t466 * t572 + t564 * t743) * qJD(2) + t123 * qJD(3) (t467 * t572 + t564 * t742) * qJD(2) + t124 * qJD(3), t115 * qJD(3) + (-t466 * t568 - t467 * t566) * t749, t769 + (t466 * t468 + t467 * t469 + t535) * qJD(2) + t49 * qJD(3) + t187 * qJD(4), 0, 0, 0, 0, 0, 0, t950, t992, t911 (t302 * t247 + t303 * t248 + t524 * t741) * qJD(2) + t3 * qJD(3) + t967, 0, 0, 0, 0, 0, 0, t950, t911, -t992 (t303 * t221 + t302 * t222 + t296 * t741) * qJD(2) + t1 * qJD(3) + t5 * qJD(5) + t94 * qJD(6) + t967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570 * t724 - t756, t502 * qJD(3) - t572 * t724, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t123 - t568 * t756, qJD(2) * t124 + t566 * t756, t115 * qJD(2) - qJD(3) * t701, t770 + t49 * qJD(2) + (-t503 * pkin(3) - qJ(4) * t701) * qJD(3) + t174 * qJD(4), 0, 0, 0, 0, 0, 0, t912, qJD(5) * t214 - t994, t913, t3 * qJD(2) + (t503 * t552 + t699) * qJD(3) + t968, 0, 0, 0, 0, 0, 0, t912, t913, qJD(5) * t213 + t994, t1 * qJD(2) + (t373 * t503 + t699) * qJD(3) + t16 * qJD(5) + t216 * qJD(6) + t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t187 + qJD(3) * t174, 0, 0, 0, 0, 0, 0, 0, 0, 0, t905, 0, 0, 0, 0, 0, 0, 0, 0, 0, t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t954, qJD(3) * t214 - t986, 0, 0, 0, 0, 0, 0, 0, 0, t954, 0, qJD(3) * t213 + t986, t5 * qJD(2) + t16 * qJD(3) + (-pkin(5) * t264 - qJ(6) * t263) * qJD(5) + t264 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t216 - t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t764, 0, 0, 0, 0, 0, 0, 0, -t121 * qJD(3), t116 * qJD(3), -qJD(3) * t48 - qJD(4) * t186 - t769, 0, 0, 0, 0, 0, 0, t949, t993, t931, qJD(3) * t4 + t966, 0, 0, 0, 0, 0, 0, t949, t931, -t993, qJD(3) * t2 + qJD(5) * t6 - qJD(6) * t86 + t966; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t723, t542 * qJD(3), 0, -t723, 0, 0, -pkin(2) * t783, -pkin(2) * t782, 0, 0, t563 * t723, t700 * t782, -t517 * qJD(3), t562 * t723, t514 * qJD(3), -t723, -qJD(3) * t278 + t568 * t726, qJD(3) * t279 - t566 * t726, -qJD(3) * t126 + qJD(4) * t513, qJD(3) * t154 - qJD(4) * t287, t207, -t978, t245, t616, -t909, -t723, -qJD(3) * t69 - qJD(5) * t131 + t486 * t572, qJD(3) * t70 + qJD(5) * t130 - t727, qJD(3) * t30 + t960, qJD(3) * t45 + qJD(4) * t83, t207, t245, t978, -t723, t909, t616, t47 * qJD(3) + t72 * qJD(5) + (-t757 + t778) * t493, qJD(3) * t27 + qJD(5) * t28 + t572 * t757 + t960, -qJD(3) * t46 - qJD(5) * t71 + qJD(6) * t463 + t727, qJD(3) * t21 + qJD(4) * t73 + qJD(5) * t25 - qJD(6) * t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t543, t750, t782, -t543, -t783, 0, -t746 - t748, pkin(8) * t783 - t747, 0, 0 (t563 * t749 + t728) * t572 (qJD(2) * t700 + (-t562 + t563) * qJD(3)) * t572, t566 * t783 - t752 (t562 * t749 - t728) * t572, t568 * t783 + t754, -t543, -t547 * qJD(3) + t566 * t594 - t765, t566 * t746 + t568 * t594 - t647, qJD(3) * t662 - t648 (-pkin(3) * t560 + qJ(4) * t662) * qJD(3) + t284 * qJD(4) + t652, t101, -t979, t132, t983, -qJD(5) * t344 + t970, -t511 (t492 * t552 - t525 * t940 - t842) * qJD(3) - t345 * qJD(4) + t99 * qJD(5) + t669 (t495 * t552 + t518 * t525 - t838) * qJD(3) + t761 + t98 * qJD(5) + t668 (-t256 * t518 + t257 * t940 + t698) * qJD(3) + t673 + t875 (-t256 * t425 + t257 * t426 + t525 * t552) * qJD(3) + t52 * qJD(4) + t22 + t676, t101, t132, t979, -t511, -qJD(5) * t349 - t970, t983 (-t297 * t940 + t373 * t492 - t842) * qJD(3) + t348 * qJD(4) + t38 * qJD(5) + t244 * qJD(6) + t670 (t225 * t940 + t226 * t518 + t698) * qJD(3) + t258 + t10 * qJD(5) - t347 * qJD(6) + t674 (-t297 * t518 - t373 * t495 + t838) * qJD(3) - t761 + t36 * qJD(5) + t391 + t671 (t225 * t426 + t226 * t425 + t297 * t373) * qJD(3) + t40 * qJD(4) + t8 * qJD(5) + t60 * qJD(6) + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(3) * t566 + t568 * t749) * t572 (-t566 * t749 + t784) * t572, t755, qJD(3) * t284 - t646, 0, 0, 0, 0, 0, 0, -t696, t274, t953, qJD(3) * t52 - t664, 0, 0, 0, 0, 0, 0, t275, t953, -t274, qJD(3) * t40 + t665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t952, -t643, -t618, -t952, t942, t556, qJD(3) * t99 - t231 + t653, qJD(3) * t98 - t654 + t777, t872, t871, t952, -t618, t643, t556, t183, -t952, qJD(3) * t38 - t231 + t666, t10 * qJD(3) + qJD(5) * t680 - t757 + t852, qJD(3) * t36 - t667 - t771 - t777, t8 * qJD(3) + (-pkin(5) * t248 - qJ(6) * t247) * qJD(5) + t221 * qJD(6) + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t244 - t732, -t618, t599, qJD(3) * t60 + qJD(5) * t221 + t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121 * qJD(2), -t116 * qJD(2), qJD(2) * t48 - qJD(4) * t173 - t770, 0, 0, 0, 0, 0, 0, t914, -qJD(5) * t212 - t996, -t935, -qJD(2) * t4 + t969, 0, 0, 0, 0, 0, 0, t914, -t935, -qJD(5) * t211 + t996, -qJD(2) * t2 - qJD(5) * t15 - qJD(6) * t209 + t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t543, -t750, 0, t543, 0, 0, t748, t747, 0, 0, -t563 * t543, 0.2e1 * t566 * t694, t752, -t562 * t543, -t754, t543, t765, t647, t648, -qJD(4) * t283 - t652, t129, -t981, t171, t982, -qJD(5) * t345 + t932, t511, -qJD(4) * t344 - qJD(5) * t96 - t669, -qJD(5) * t97 - t668 + t780, -t673 + t875, -qJD(4) * t51 + t22 - t676, t129, t171, t981, t511, -qJD(5) * t348 - t932, t982, qJD(4) * t349 - qJD(5) * t37 - qJD(6) * t243 - t670, -qJD(5) * t9 - qJD(6) * t346 + t258 - t674, -qJD(5) * t35 + t391 - t671 - t780, -qJD(4) * t39 - qJD(5) * t7 - qJD(6) * t59 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540 * qJD(4), t527 * qJD(4), t421, -t980, 0, -t421, 0, 0, t552 * t505, t552 * t504, t961, t925, t421, 0, t980, 0, 0, -t421, qJD(5) * t152 + t518 * t753, t961, qJD(5) * t153 + qJD(6) * t902, qJD(5) * t78 - t373 * t772 + t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t751, -t605, 0, 0, 0, 0, 0, 0, -t763, t760, t951, -t607, 0, 0, 0, 0, 0, 0, t758, t951, -t760, t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t955, -t642, t293, t955, -t505 - t762, t555, -t624 + t807, t785 * t940 - t650 + t775, t873, t672, -t955, t293, t642, t555, t505 - t759, t955, -t649 + t807, qJD(5) * t679 + t753 - t876, -t606 - t775 (-pkin(5) * t426 - qJ(6) * t425) * qJD(5) + t426 * qJD(6) + t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, t293, t304, -t373 * t786 + t416 - t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t186 + qJD(3) * t173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t694, t566 * t543, -t755, qJD(3) * t283 + t646, 0, 0, 0, 0, 0, 0, -t942, -t618, -t953, qJD(3) * t51 + t664, 0, 0, 0, 0, 0, 0, t183, -t953, t618, qJD(3) * t39 + qJD(5) * t337 - qJD(6) * t493 - t665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t751, t605, 0, 0, 0, 0, 0, 0, t505 + t763, -t939, -t951, t607, 0, 0, 0, 0, 0, 0, t505 - t758, -t951, t939, qJD(5) * t413 - t608 - t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360, t359, 0, 0, 0, 0, 0, 0, 0, 0, t360, 0, -t359, -t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t956, qJD(3) * t212 + t990, 0, 0, 0, 0, 0, 0, 0, 0, t956, 0, qJD(3) * t211 - t990, -qJD(2) * t6 + qJD(3) * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t952, t643, t274, t952, t696, t556, qJD(3) * t96 - t486 - t653, qJD(3) * t97 + t654 + t779, -t872, -t871, -t952, t274, -t643, t556, t275, t952, qJD(3) * t37 - t486 - t666, qJD(3) * t9 - t852, qJD(3) * t35 + t667 - t771 - t779, -qJ(6) * t771 + qJD(3) * t7 - qJD(4) * t337 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t955, t642, t339, -t955, t762, t554, t624 + t808 -(qJD(4) + t785) * t940 + t650, -t873, -t672, t955, t339, -t642, t554, t759, -t955, t649 + t808, t876, qJD(4) * t940 + t606, -qJD(4) * t413 - t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, -t359, 0, 0, 0, 0, 0, 0, 0, 0, -t360, 0, t359, t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t548, -t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t209 + t998; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t243 + t732, t274, -t599, qJ(6) * t773 + qJD(3) * t59 + t486 - t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, t339, -t304 (qJD(3) * t373 + qJD(4)) * t518 + t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t548, t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
