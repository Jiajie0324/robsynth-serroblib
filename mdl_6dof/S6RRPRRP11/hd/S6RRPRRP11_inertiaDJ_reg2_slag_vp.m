% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP11_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP11_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP11_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP11_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:48:36
% EndTime: 2019-03-09 12:48:47
% DurationCPUTime: 3.75s
% Computational Cost: add. (4240->295), mult. (9096->500), div. (0->0), fcn. (7670->6), ass. (0->167)
t203 = cos(qJ(5));
t179 = t203 * pkin(4);
t103 = t179 + pkin(5);
t115 = sin(qJ(5));
t186 = qJD(5) * t115;
t116 = sin(qJ(4));
t118 = cos(qJ(4));
t167 = t203 * t118;
t83 = -t115 * t116 + t167;
t169 = t83 * t186;
t157 = t203 * qJD(5);
t152 = pkin(4) * t157;
t202 = t115 * pkin(4);
t189 = qJD(4) * t116;
t56 = -t115 * t189 - t116 * t186 + (t203 * qJD(4) + t157) * t118;
t82 = t115 * t118 + t203 * t116;
t197 = t82 * t152 + t56 * t202;
t209 = qJD(4) + qJD(5);
t55 = t209 * t82;
t215 = pkin(4) * t169 + t103 * t55 - t197;
t214 = t197 - (t203 * t55 + t169) * pkin(4);
t205 = pkin(3) + pkin(7);
t200 = t83 * t55;
t201 = t82 * t56;
t213 = 0.2e1 * t200 - 0.2e1 * t201;
t119 = cos(qJ(2));
t117 = sin(qJ(2));
t158 = qJD(2) * t203;
t148 = t117 * t158;
t185 = t117 * qJD(2);
t164 = t116 * t185;
t35 = -t115 * t164 + t118 * t148 + t55 * t119;
t151 = t119 * t167;
t195 = t116 * t119;
t66 = t115 * t195 - t151;
t211 = -t35 * qJ(6) - t66 * qJD(6);
t136 = t118 * qJ(3) - t116 * t205;
t210 = t136 * t119;
t206 = pkin(2) + pkin(8);
t182 = pkin(9) + t206;
t154 = t182 * t118;
t172 = t206 * t117;
t114 = t119 ^ 2;
t156 = qJD(2) * (t117 ^ 2 - t114);
t111 = t116 ^ 2;
t113 = t118 ^ 2;
t192 = t111 - t113;
t155 = t192 * qJD(4);
t137 = t116 * qJ(3) + t118 * t205;
t173 = t206 * t119;
t147 = pkin(1) + t173;
t53 = t116 * t147 + t137 * t117;
t194 = t117 * qJ(3);
t135 = -t173 - t194;
t190 = qJD(3) * t119;
t91 = t205 * t119;
t208 = qJD(2) * t135 + t91 * qJD(4) + t190;
t207 = 0.2e1 * qJD(3);
t204 = t55 * pkin(5);
t199 = t66 * t152 + t35 * t202;
t133 = pkin(4) + t137;
t141 = t182 * t119 + pkin(1);
t124 = t141 * t116 + t133 * t117;
t40 = t115 * t124;
t193 = t118 * t119;
t171 = t205 * t117;
t54 = t118 * (-pkin(1) + t135) + t116 * t171;
t48 = -pkin(9) * t193 + t54;
t25 = t203 * t48 + t40;
t78 = t115 * t154;
t86 = t182 * t116;
t58 = -t203 * t86 - t78;
t196 = qJ(3) * t119;
t101 = t116 * pkin(4) + qJ(3);
t188 = qJD(4) * t118;
t187 = qJD(4) * t119;
t184 = t117 * qJD(3);
t183 = t118 * qJD(2);
t106 = t119 * qJD(2);
t95 = pkin(4) * t188 + qJD(3);
t181 = -0.2e1 * pkin(1) * qJD(2);
t178 = pkin(4) * t186;
t177 = pkin(7) * t185;
t176 = pkin(7) * t106;
t73 = pkin(4) * t193 + t91;
t175 = t116 * t206;
t174 = t118 * t206;
t67 = t82 * t119;
t170 = t67 * t186;
t168 = qJD(4) * t206;
t166 = t116 * t187;
t165 = t118 * t187;
t163 = t116 * t184;
t162 = t117 * t106;
t161 = t117 * t183;
t160 = t116 * t188;
t159 = t118 * t184;
t41 = t203 * t124;
t24 = -t115 * t48 + t41;
t80 = t203 * t154;
t57 = t115 * t86 - t80;
t153 = t117 * t178;
t150 = t116 * t161;
t149 = t114 * t160;
t34 = t116 * t148 + (t209 * t195 + t161) * t115 - t209 * t151;
t10 = t34 * t83 + t55 * t67;
t11 = -t35 * t82 - t56 * t66;
t145 = t182 * t189;
t143 = -pkin(2) * t119 - t194;
t142 = -t116 * t53 + t118 * t54;
t138 = -t82 * t106 - t56 * t117;
t131 = t136 * t117;
t121 = t163 + (t141 * t118 + t131) * qJD(4) + (-t117 * t86 + t133 * t119) * qJD(2);
t122 = -t159 + (t118 * t171 + (t141 + t194) * t116) * qJD(4) + (t117 * t154 - t210) * qJD(2);
t3 = -qJD(5) * t41 - t115 * t121 - t203 * t122 + t48 * t186;
t30 = -t115 * t145 - t86 * t186 + t209 * t80;
t105 = pkin(5) * t106;
t4 = -qJD(5) * t40 - t115 * t122 + t203 * t121 - t48 * t157;
t120 = -t34 * qJ(6) + t67 * qJD(6) + t4;
t1 = t105 + t120;
t14 = pkin(5) * t117 + qJ(6) * t67 + t24;
t15 = qJ(6) * t66 + t25;
t2 = t3 + t211;
t130 = t1 * t83 - t14 * t55 + t15 * t56 - t2 * t82;
t129 = -t24 * t55 + t25 * t56 - t3 * t82 + t4 * t83;
t12 = t56 * qJ(6) + t82 * qJD(6) + t30;
t31 = t203 * t145 + t86 * t157 + t209 * t78;
t13 = t55 * qJ(6) - t83 * qJD(6) + t31;
t44 = -qJ(6) * t83 + t57;
t45 = -qJ(6) * t82 + t58;
t128 = t12 * t82 - t13 * t83 + t44 * t55 - t45 * t56;
t127 = t30 * t82 - t31 * t83 + t55 * t57 - t56 * t58;
t85 = t205 * t185;
t126 = -t85 + (-t196 + t172) * qJD(4);
t125 = t143 * qJD(2) + t190;
t59 = -pkin(4) * t166 + (-pkin(4) * t118 - t205) * t185;
t123 = (-t115 * t106 - t117 * t157) * pkin(4) + t3;
t110 = qJ(3) * t207;
t100 = -0.2e1 * t152;
t99 = -0.2e1 * t178;
t94 = -0.2e1 * t162;
t93 = 0.2e1 * t162;
t87 = -pkin(1) + t143;
t81 = -0.2e1 * t156;
t75 = -t116 * t106 - t117 * t188;
t74 = t118 * t106 - t117 * t189;
t69 = -t184 + (pkin(2) * t117 - t196) * qJD(2);
t62 = pkin(5) * t82 + t101;
t60 = -t119 * t155 - t150;
t49 = -pkin(5) * t66 + t73;
t47 = pkin(5) * t56 + t95;
t43 = -0.2e1 * t200;
t42 = 0.2e1 * t201;
t37 = t83 * t106 - t117 * t55;
t29 = t163 + (t118 * t147 + t131) * qJD(4) + (-t116 * t172 + t137 * t119) * qJD(2);
t28 = t159 - t53 * qJD(4) + (-t118 * t172 + t210) * qJD(2);
t27 = -0.2e1 * t67 * t34;
t26 = 0.2e1 * t66 * t35;
t23 = -0.2e1 * t67 * t106 + 0.2e1 * t117 * t34;
t22 = 0.2e1 * t66 * t106 + 0.2e1 * t117 * t35;
t20 = 0.2e1 * t55 * t82 - 0.2e1 * t56 * t83;
t19 = -t35 * pkin(5) + t59;
t9 = 0.2e1 * t34 * t66 - 0.2e1 * t35 * t67;
t7 = t142 * qJD(4) - t116 * t28 + t118 * t29;
t6 = -t10 - t11;
t5 = -t34 * t82 + t35 * t83 - t55 * t66 + t56 * t67;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t81, 0, t94, 0, 0, t117 * t181, t119 * t181, 0, 0, 0, 0, 0, t93, t81, t94, 0, 0.2e1 * t119 * t69 - 0.2e1 * t87 * t185, -0.2e1 * t87 * t106 - 0.2e1 * t69 * t117, 0.2e1 * t87 * t69, -0.2e1 * t111 * t162 + 0.2e1 * t149, -0.2e1 * t114 * t155 - 0.4e1 * t119 * t150, 0.2e1 * t116 * t156 - 0.2e1 * t117 * t165, -0.2e1 * t113 * t162 - 0.2e1 * t149, 0.2e1 * t117 * t166 + 0.2e1 * t118 * t156, t93, 0.2e1 * (-t91 * t183 + t29) * t117 + 0.2e1 * (qJD(2) * t53 - t85 * t118 - t91 * t189) * t119, 0.2e1 * (qJD(2) * t116 * t91 + t28) * t117 + 0.2e1 * (-qJD(2) * t54 + t85 * t116 - t91 * t188) * t119, 0.2e1 * t142 * t185 + 0.2e1 * (t116 * t29 + t118 * t28 + (t116 * t54 + t118 * t53) * qJD(4)) * t119, -0.2e1 * t28 * t54 + 0.2e1 * t29 * t53 - 0.2e1 * t85 * t91, t27, t9, t23, t26, t22, t93, 0.2e1 * t24 * t106 + 0.2e1 * t4 * t117 - 0.2e1 * t73 * t35 - 0.2e1 * t59 * t66, -0.2e1 * t106 * t25 + 0.2e1 * t3 * t117 + 0.2e1 * t73 * t34 - 0.2e1 * t59 * t67, -0.2e1 * t24 * t34 + 0.2e1 * t25 * t35 - 0.2e1 * t3 * t66 + 0.2e1 * t4 * t67, 0.2e1 * t24 * t4 - 0.2e1 * t25 * t3 + 0.2e1 * t59 * t73, t27, t9, t23, t26, t22, t93, 0.2e1 * t1 * t117 + 0.2e1 * t106 * t14 - 0.2e1 * t19 * t66 - 0.2e1 * t49 * t35, -0.2e1 * t106 * t15 + 0.2e1 * t2 * t117 - 0.2e1 * t19 * t67 + 0.2e1 * t49 * t34, 0.2e1 * t1 * t67 - 0.2e1 * t14 * t34 + 0.2e1 * t15 * t35 - 0.2e1 * t2 * t66, 0.2e1 * t1 * t14 - 0.2e1 * t15 * t2 + 0.2e1 * t19 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t185, 0, -t176, t177, 0, 0, 0, -t106, t185, 0, 0, 0, t125, t176, -t177, t125 * pkin(7), -t60, 0.4e1 * t119 * t160 - t192 * t185, t74, t60, t75, 0, t126 * t116 + t208 * t118, -t208 * t116 + t126 * t118, -t7, t28 * t175 - t29 * t174 - t85 * qJ(3) + t91 * qJD(3) + (-t54 * t174 + t53 * t175) * qJD(4), t10, t5, t37, t11, t138, 0, -t101 * t35 + t57 * t106 + t31 * t117 + t73 * t56 + t59 * t82 - t95 * t66, t101 * t34 - t106 * t58 + t30 * t117 - t73 * t55 + t59 * t83 - t95 * t67, -t30 * t66 + t31 * t67 - t34 * t57 + t35 * t58 - t129, t101 * t59 + t24 * t31 - t25 * t30 - t3 * t58 + t4 * t57 + t73 * t95, t10, t5, t37, t11, t138, 0, t106 * t44 + t13 * t117 + t19 * t82 - t62 * t35 - t47 * t66 + t49 * t56, -t106 * t45 + t12 * t117 + t19 * t83 + t62 * t34 - t47 * t67 - t49 * t55, -t12 * t66 + t13 * t67 - t34 * t44 + t35 * t45 - t130, t1 * t44 - t12 * t15 + t13 * t14 + t19 * t62 - t2 * t45 + t47 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, t110, -0.2e1 * t160, 0.2e1 * t155, 0, 0.2e1 * t160, 0, 0, 0.2e1 * qJ(3) * t188 + 0.2e1 * qJD(3) * t116, -0.2e1 * qJ(3) * t189 + 0.2e1 * qJD(3) * t118, 0, t110, t43, t20, 0, t42, 0, 0, 0.2e1 * t101 * t56 + 0.2e1 * t82 * t95, -0.2e1 * t101 * t55 + 0.2e1 * t83 * t95, 0.2e1 * t127, 0.2e1 * t101 * t95 - 0.2e1 * t30 * t58 + 0.2e1 * t31 * t57, t43, t20, 0, t42, 0, 0, 0.2e1 * t47 * t82 + 0.2e1 * t56 * t62, 0.2e1 * t47 * t83 - 0.2e1 * t55 * t62, 0.2e1 * t128, -0.2e1 * t12 * t45 + 0.2e1 * t13 * t44 + 0.2e1 * t47 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, 0, t176, 0, 0, 0, 0, 0, 0, t74, t75, 0, t7, 0, 0, 0, 0, 0, 0, t37, t138, t6, t129, 0, 0, 0, 0, 0, 0, t37, t138, t6, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, -t127, 0, 0, 0, 0, 0, 0, 0, 0, t213, -t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164 - t165, 0, t161 + t166, t106, t29, t28, 0, 0, 0, 0, t34, 0, t35, t106, pkin(4) * t119 * t158 - t153 + t4, t123 (-t203 * t34 - t170) * pkin(4) + t199 (t203 * t4 - t115 * t3 + (-t115 * t24 + t203 * t25) * qJD(5)) * pkin(4), 0, 0, t34, 0, t35, t106, t103 * t106 + t1 - t153, t123 + t211, -pkin(4) * t170 - t103 * t34 + t199, t1 * t103 + (-t115 * t2 + (-t115 * t14 + t203 * t15) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, 0, -t188, 0, t116 * t168, t118 * t168, 0, 0, 0, 0, -t55, 0, -t56, 0, t31, t30, -t214 (t203 * t31 - t115 * t30 + (-t115 * t57 + t203 * t58) * qJD(5)) * pkin(4), 0, 0, -t55, 0, -t56, 0, t13, t12, t215, t13 * t103 + (-t115 * t12 + (-t115 * t44 + t203 * t45) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t188, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t56, 0, t214, 0, 0, 0, 0, 0, 0, -t55, -t56, 0, -t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t100, 0, 0, 0, 0, 0, 0, 0, 0, t99, t100, 0, 0.2e1 * (t179 - t103) * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, t35, t106, t4, t3, 0, 0, 0, 0, t34, 0, t35, t106, 0.2e1 * t105 + t120, t2, -t34 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, 0, -t56, 0, t31, t30, 0, 0, 0, 0, -t55, 0, -t56, 0, t13, t12, t204, t13 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t56, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t56, 0, -t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t152, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t152, 0, -pkin(5) * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t34, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t55, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t8;
