% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR10_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:25:24
% EndTime: 2019-03-09 14:25:50
% DurationCPUTime: 10.33s
% Computational Cost: add. (18856->566), mult. (47771->1018), div. (0->0), fcn. (49804->12), ass. (0->247)
t143 = sin(pkin(12));
t301 = cos(pkin(6));
t255 = t301 * t143;
t144 = sin(pkin(6));
t145 = cos(pkin(12));
t147 = sin(qJ(2));
t290 = t145 * t147;
t276 = t144 * t290;
t202 = t255 + t276;
t254 = t301 * t145;
t292 = t144 * t147;
t203 = t143 * t292 - t254;
t317 = sin(qJ(4));
t319 = cos(qJ(4));
t178 = t319 * t202 - t317 * t203;
t85 = t317 * t202 + t319 * t203;
t149 = cos(qJ(2));
t273 = pkin(1) * t301;
t199 = pkin(8) * t292 - t149 * t273;
t106 = -pkin(2) * t301 + t199;
t92 = pkin(3) * t203 + t106;
t160 = t85 * pkin(4) - pkin(10) * t178 + t92;
t108 = t199 * qJD(2);
t315 = pkin(2) * t147;
t224 = -qJ(3) * t149 + t315;
t286 = qJD(2) * t149;
t262 = t144 * t286;
t240 = t145 * t262;
t251 = t301 * qJD(3);
t287 = qJD(2) * t147;
t263 = t144 * t287;
t285 = qJD(3) * t147;
t161 = t143 * (t251 - t108) - t145 * (qJD(2) * t224 - t285) * t144 + pkin(9) * t240 - pkin(3) * t263;
t253 = qJD(2) * t301;
t233 = t149 * t253;
t192 = pkin(1) * t233 + t251;
t186 = t145 * t192;
t264 = t143 * t285;
t281 = pkin(8) * t290;
t312 = pkin(9) + qJ(3);
t168 = t186 + (-t264 + (-t281 + (-t312 * t149 + t315) * t143) * qJD(2)) * t144;
t245 = t147 * t273;
t198 = qJ(3) * t301 + t245;
t182 = pkin(9) * t301 + t198;
t314 = pkin(2) * t149;
t206 = -t312 * t147 - pkin(1) - t314;
t171 = -t182 * t143 + ((-pkin(8) * t143 - pkin(3)) * t149 + t206 * t145) * t144;
t289 = t145 * t149;
t280 = pkin(8) * t289;
t174 = t182 * t145 + (t143 * t206 + t280) * t144;
t36 = t319 * t171 - t317 * t174;
t20 = -t36 * qJD(4) + t317 * t161 - t319 * t168;
t338 = -pkin(10) * t263 - qJD(5) * t160 + t20;
t291 = t144 * t149;
t37 = t317 * t171 + t319 * t174;
t157 = -pkin(10) * t291 + t37;
t241 = t143 * t262;
t180 = -qJD(4) * t85 - t317 * t241;
t272 = t319 * t145;
t274 = pkin(3) * t143 + pkin(8);
t120 = t319 * t143 + t317 * t145;
t63 = qJD(4) * t178 + t120 * t262;
t337 = qJD(5) * t157 + t180 * pkin(10) - t63 * pkin(4) - (t245 + (-pkin(10) * t272 + t274) * t291) * qJD(2);
t331 = t312 * t317;
t333 = -t319 * qJD(3) + qJD(4) * t331;
t330 = t312 * t319;
t334 = t317 * qJD(3) + qJD(4) * t330;
t176 = -t143 * t334 - t145 * t333;
t119 = t317 * t143 - t272;
t134 = -t145 * pkin(3) - pkin(2);
t201 = t119 * pkin(4) - pkin(10) * t120 + t134;
t336 = -qJD(5) * t201 - t176;
t110 = t119 * qJD(4);
t111 = t120 * qJD(4);
t184 = -t143 * t331 + t145 * t330;
t335 = -pkin(4) * t111 - pkin(10) * t110 + qJD(5) * t184;
t332 = 0.2e1 * t286;
t146 = sin(qJ(5));
t148 = cos(qJ(5));
t128 = t148 * t291;
t177 = qJD(5) * t178;
t179 = -t319 * t240 - t180;
t172 = qJD(5) * t128 + t148 * t179 + (t177 - t263) * t146;
t170 = t172 * t146;
t318 = cos(qJ(6));
t257 = t318 * qJD(6);
t329 = t318 * qJD(5) + t257;
t283 = qJD(5) * t148;
t300 = t110 * t146;
t209 = t120 * t283 - t300;
t284 = qJD(5) * t146;
t299 = t110 * t148;
t328 = t120 * t284 + t299;
t316 = sin(qJ(6));
t268 = t316 * t146;
t270 = t318 * t148;
t122 = t268 - t270;
t140 = t146 ^ 2;
t141 = t148 ^ 2;
t288 = t140 - t141;
t250 = qJD(5) * t288;
t327 = qJD(5) + qJD(6);
t309 = -t146 * t179 + t148 * t177;
t326 = -t144 * (t148 * t287 + t149 * t284) + t309;
t74 = -t146 * t291 + t148 * t178;
t163 = -t148 * t172 - t74 * t284;
t31 = t146 * t335 + t148 * t336;
t32 = t146 * t336 - t148 * t335;
t60 = -t146 * t184 + t148 * t201;
t61 = t146 * t201 + t148 * t184;
t325 = t146 * t31 - t148 * t32 + (t146 * t60 - t148 * t61) * qJD(5);
t22 = -t146 * t157 + t148 * t160;
t23 = t146 * t160 + t148 * t157;
t6 = t337 * t146 + t148 * t338;
t7 = t146 * t338 - t337 * t148;
t324 = t6 * t146 - t7 * t148 + (t146 * t22 - t148 * t23) * qJD(5);
t139 = t145 ^ 2;
t323 = 0.2e1 * t111;
t322 = 0.2e1 * t144;
t321 = 0.2e1 * qJD(2);
t320 = -pkin(11) - pkin(10);
t78 = -t143 * t333 + t145 * t334;
t98 = t143 * t330 + t145 * t331;
t313 = t98 * t78;
t271 = t318 * t146;
t123 = t316 * t148 + t271;
t82 = t146 * t178;
t302 = t82 + t128;
t51 = -t316 * t302 + t318 * t74;
t15 = t51 * qJD(6) - t316 * t172 + t318 * t326;
t234 = t318 * t302;
t50 = t316 * t74 + t234;
t260 = qJD(6) * t316;
t95 = (t316 * qJD(5) + t260) * t146 - t329 * t148;
t311 = -t123 * t15 + t95 * t50;
t252 = t302 * qJD(5);
t310 = -t146 * t326 - t148 * t252;
t244 = t120 * t268;
t46 = -t110 * t271 + (-t316 * t110 + t120 * t329) * t148 - t327 * t244;
t88 = t123 * t120;
t308 = -t123 * t46 + t95 * t88;
t96 = t327 * t123;
t307 = t122 * t96;
t306 = t123 * t95;
t305 = t146 * t78;
t304 = t148 * t78;
t303 = t74 * t148;
t298 = t120 * t110;
t297 = t120 * t146;
t296 = t120 * t148;
t138 = t144 ^ 2;
t142 = t149 ^ 2;
t295 = t138 * t142;
t294 = t143 * t147;
t293 = t143 * t149;
t52 = 0.2e1 * t85 * t63;
t282 = -0.2e1 * pkin(4) * qJD(5);
t94 = t119 * t323;
t279 = t318 * pkin(5);
t278 = pkin(5) * t284;
t277 = t146 * t299;
t267 = t138 * t286;
t261 = t146 * t283;
t249 = pkin(5) * t257;
t248 = pkin(5) * t260;
t247 = t320 * t318;
t246 = t320 * t316;
t116 = t120 ^ 2;
t243 = t116 * t261;
t242 = t147 * t267;
t137 = t143 ^ 2;
t239 = 0.2e1 * (t137 + t139) * qJD(3);
t231 = pkin(4) * t110 - pkin(10) * t111;
t230 = pkin(4) * t120 + pkin(10) * t119;
t14 = qJD(6) * t234 + t318 * t172 + t74 * t260 + t316 * t326;
t228 = -t122 * t14 + t51 * t96;
t45 = -t110 * t122 + t120 * t96;
t89 = t120 * t270 - t244;
t227 = -t122 * t45 + t89 * t96;
t226 = t123 * t63 - t85 * t95;
t225 = -qJ(3) * t147 - t314;
t43 = t111 * t85 + t119 * t63;
t223 = t23 * t146 + t22 * t148;
t220 = t146 * t61 + t148 * t60;
t218 = t111 * t123 - t119 * t95;
t217 = t146 * t247;
t216 = t146 * t246;
t215 = t143 * t240;
t214 = -pkin(1) + t225;
t21 = -qJD(4) * t37 - t319 * t161 - t317 * t168;
t19 = -pkin(4) * t263 - t21;
t35 = pkin(4) * t291 - t36;
t213 = t19 * t146 + t283 * t35;
t212 = t19 * t148 - t284 * t35;
t211 = t146 * t63 + t283 * t85;
t210 = -t148 * t63 + t284 * t85;
t207 = t111 * t146 + t119 * t283;
t205 = (t82 + 0.2e1 * t128) * t146;
t150 = t63 * pkin(5) + pkin(11) * t172 + t7;
t154 = t85 * pkin(5) - t74 * pkin(11) + t22;
t153 = t318 * t154;
t155 = -pkin(11) * t326 - t6;
t17 = -pkin(11) * t302 + t23;
t1 = -qJD(6) * t153 - t316 * t150 - t318 * t155 + t17 * t260;
t158 = t111 * pkin(5) + pkin(11) * t328 + t32;
t173 = t119 * pkin(5) - pkin(11) * t296 + t60;
t167 = t318 * t173;
t175 = -pkin(11) * t209 - t31;
t54 = -pkin(11) * t297 + t61;
t10 = -qJD(6) * t167 - t316 * t158 - t318 * t175 + t260 * t54;
t200 = (t148 * t263 - t309) * t148;
t115 = pkin(8) * t291 + t245;
t197 = t144 * t203;
t196 = t144 * t202;
t126 = t320 * t148;
t100 = -t318 * t126 + t216;
t187 = t144 * (qJD(2) * t225 + qJD(3) * t149);
t185 = -qJD(5) * t223 - t7 * t146 - t6 * t148;
t183 = -qJD(5) * t220 - t146 * t32 - t148 * t31;
t166 = t316 * t173;
t11 = -qJD(6) * t166 + t318 * t158 - t316 * t175 - t54 * t257;
t152 = t316 * t154;
t2 = -qJD(6) * t152 + t318 * t150 - t316 * t155 - t17 * t257;
t136 = -pkin(5) * t148 - pkin(4);
t124 = -0.2e1 * t242;
t109 = t115 * qJD(2);
t99 = t316 * t126 + t217;
t97 = (t274 * t291 + t245) * qJD(2);
t91 = t111 * t148 - t119 * t284;
t81 = pkin(5) * t297 + t98;
t77 = t145 * t198 + (t143 * t214 + t280) * t144;
t76 = -t143 * t198 + (-pkin(8) * t293 + t145 * t214) * t144;
t72 = t186 + (-t264 + (t143 * t224 - t281) * qJD(2)) * t144;
t71 = -t143 * t192 + (-t145 * t285 + (pkin(8) * t294 + t145 * t224) * qJD(2)) * t144;
t68 = t120 * t250 + t277;
t67 = -t100 * qJD(6) + (t148 * t247 - t216) * qJD(5);
t66 = -t126 * t260 - t217 * t327 - t246 * t283;
t57 = -t111 * t122 - t119 * t96;
t55 = pkin(5) * t209 + t78;
t34 = -t122 * t63 - t85 * t96;
t29 = t318 * t54 + t166;
t28 = -t316 * t54 + t167;
t26 = pkin(5) * t302 + t35;
t12 = pkin(5) * t326 + t19;
t9 = t318 * t17 + t152;
t8 = -t316 * t17 + t153;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t242 (-t147 ^ 2 + t142) * t138 * t321, t233 * t322, t124, -0.2e1 * t253 * t292, 0, -0.2e1 * pkin(1) * t138 * t287 - 0.2e1 * t109 * t301, -0.2e1 * pkin(1) * t267 + 0.2e1 * t108 * t301 (-t108 * t149 + t109 * t147 + (-t115 * t147 + t149 * t199) * qJD(2)) * t322, -0.2e1 * t108 * t115 + 0.2e1 * t109 * t199, t145 * t196 * t332, 0.2e1 * (t301 * t139 + (-t255 - 0.2e1 * t276) * t143) * t262 (-t145 * t295 + t147 * t196) * t321, t143 * t197 * t332 (t143 * t295 - t147 * t197) * t321, t124, -0.2e1 * t109 * t254 + 0.2e1 * (t109 * t294 - t71 * t149 + (t106 * t293 + t147 * t76) * qJD(2)) * t144, 0.2e1 * t109 * t255 + 0.2e1 * (t109 * t290 + t72 * t149 + (t106 * t289 - t147 * t77) * qJD(2)) * t144, -0.2e1 * t72 * t203 - 0.2e1 * t71 * t202 + 0.2e1 * (-t143 * t77 - t145 * t76) * t262, 0.2e1 * t106 * t109 + 0.2e1 * t71 * t76 + 0.2e1 * t72 * t77, -0.2e1 * t178 * t179, -0.2e1 * t178 * t63 + 0.2e1 * t179 * t85, 0.2e1 * t178 * t263 + 0.2e1 * t179 * t291, t52 (t149 * t63 - t287 * t85) * t322, t124, 0.2e1 * t92 * t63 + 0.2e1 * t97 * t85 + 0.2e1 * (-t149 * t21 + t287 * t36) * t144, 0.2e1 * t178 * t97 - 0.2e1 * t179 * t92 - 0.2e1 * t20 * t291 - 0.2e1 * t263 * t37, -0.2e1 * t178 * t21 + 0.2e1 * t179 * t36 + 0.2e1 * t20 * t85 - 0.2e1 * t37 * t63, -0.2e1 * t20 * t37 + 0.2e1 * t21 * t36 + 0.2e1 * t92 * t97, -0.2e1 * t74 * t172, 0.2e1 * t172 * t302 - 0.2e1 * t326 * t74, -0.2e1 * t172 * t85 + 0.2e1 * t74 * t63, 0.2e1 * t302 * t326, -0.2e1 * t302 * t63 - 0.2e1 * t326 * t85, t52, 0.2e1 * t19 * t302 + 0.2e1 * t22 * t63 + 0.2e1 * t326 * t35 + 0.2e1 * t7 * t85, -0.2e1 * t172 * t35 + 0.2e1 * t19 * t74 - 0.2e1 * t23 * t63 + 0.2e1 * t6 * t85, 0.2e1 * t172 * t22 - 0.2e1 * t23 * t326 + 0.2e1 * t302 * t6 - 0.2e1 * t7 * t74, 0.2e1 * t19 * t35 + 0.2e1 * t22 * t7 - 0.2e1 * t23 * t6, -0.2e1 * t51 * t14, 0.2e1 * t14 * t50 - 0.2e1 * t15 * t51, -0.2e1 * t14 * t85 + 0.2e1 * t51 * t63, 0.2e1 * t50 * t15, -0.2e1 * t15 * t85 - 0.2e1 * t50 * t63, t52, 0.2e1 * t12 * t50 + 0.2e1 * t15 * t26 + 0.2e1 * t2 * t85 + 0.2e1 * t63 * t8, 0.2e1 * t1 * t85 + 0.2e1 * t12 * t51 - 0.2e1 * t14 * t26 - 0.2e1 * t63 * t9, 0.2e1 * t1 * t50 + 0.2e1 * t14 * t8 - 0.2e1 * t15 * t9 - 0.2e1 * t2 * t51, -0.2e1 * t1 * t9 + 0.2e1 * t12 * t26 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, 0, -t263, 0, -t109, t108, 0, 0, t215 (-t137 + t139) * t262, t143 * t263, -t215, t145 * t263, 0, -t109 * t145 + t143 * t187, t109 * t143 + t145 * t187 (t145 * t251 + t72) * t145 + (t143 * t251 - t71) * t143, -pkin(2) * t109 + (-t143 * t76 + t145 * t77) * qJD(3) + (-t71 * t143 + t72 * t145) * qJ(3), -t110 * t178 - t120 * t179, t110 * t85 - t111 * t178 + t119 * t179 - t120 * t63 (t110 * t149 + t120 * t287) * t144, t43 (t111 * t149 - t119 * t287) * t144, 0, t92 * t111 + t97 * t119 + t134 * t63 + (t149 * t78 - t287 * t98) * t144, -t92 * t110 + t97 * t120 - t134 * t179 + t176 * t291 - t184 * t263, t36 * t110 - t37 * t111 + t20 * t119 - t21 * t120 - t176 * t85 + t178 * t78 - t179 * t98 - t184 * t63, t97 * t134 + t176 * t37 - t184 * t20 - t21 * t98 - t36 * t78, t120 * t163 - t299 * t74 (t74 * t146 + t148 * t302) * t110 + (t200 + t170 + (t205 - t303) * qJD(5)) * t120, t74 * t111 - t119 * t172 - t120 * t210 - t299 * t85, -t120 * t310 - t300 * t302, -t111 * t302 - t119 * t326 - t120 * t211 + t300 * t85, t43, t22 * t111 + t7 * t119 + t120 * t213 - t300 * t35 + t302 * t78 + t32 * t85 + t326 * t98 + t60 * t63, -t23 * t111 + t6 * t119 + t120 * t212 - t172 * t98 - t299 * t35 + t31 * t85 - t61 * t63 + t78 * t74, t223 * t110 + t120 * t324 + t60 * t172 + t31 * t302 - t32 * t74 - t326 * t61, t19 * t98 + t22 * t32 - t23 * t31 + t35 * t78 - t6 * t61 + t60 * t7, -t14 * t89 - t45 * t51, t14 * t88 - t15 * t89 + t45 * t50 - t46 * t51, t111 * t51 - t119 * t14 - t45 * t85 + t63 * t89, t15 * t88 + t46 * t50, -t111 * t50 - t119 * t15 - t46 * t85 - t63 * t88, t43, t11 * t85 + t111 * t8 + t119 * t2 + t12 * t88 + t15 * t81 + t26 * t46 + t28 * t63 + t50 * t55, t1 * t119 + t10 * t85 - t111 * t9 + t12 * t89 - t14 * t81 - t26 * t45 - t29 * t63 + t51 * t55, t1 * t88 + t10 * t50 - t11 * t51 + t14 * t28 - t15 * t29 - t2 * t89 + t45 * t8 - t46 * t9, -t1 * t29 - t10 * t9 + t11 * t8 + t12 * t81 + t2 * t28 + t26 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, qJ(3) * t239, -0.2e1 * t298, 0.2e1 * t110 * t119 - 0.2e1 * t111 * t120, 0, t94, 0, 0, t134 * t323, -0.2e1 * t134 * t110, -0.2e1 * t98 * t110 - 0.2e1 * t111 * t184 - 0.2e1 * t119 * t176 + 0.2e1 * t78 * t120, 0.2e1 * t176 * t184 + 0.2e1 * t313, -0.2e1 * t141 * t298 - 0.2e1 * t243, 0.2e1 * t116 * t250 + 0.4e1 * t120 * t277, 0.2e1 * t111 * t296 - 0.2e1 * t119 * t328, -0.2e1 * t140 * t298 + 0.2e1 * t243, -0.2e1 * t111 * t297 - 0.2e1 * t119 * t209, t94, -0.2e1 * t98 * t300 + 0.2e1 * t111 * t60 + 0.2e1 * t119 * t32 + 0.2e1 * (t283 * t98 + t305) * t120, -0.2e1 * t98 * t299 - 0.2e1 * t111 * t61 + 0.2e1 * t119 * t31 + 0.2e1 * (-t284 * t98 + t304) * t120, 0.2e1 * t220 * t110 + 0.2e1 * t120 * t325, -0.2e1 * t31 * t61 + 0.2e1 * t32 * t60 + 0.2e1 * t313, -0.2e1 * t89 * t45, 0.2e1 * t45 * t88 - 0.2e1 * t46 * t89, 0.2e1 * t111 * t89 - 0.2e1 * t119 * t45, 0.2e1 * t88 * t46, -0.2e1 * t111 * t88 - 0.2e1 * t119 * t46, t94, 0.2e1 * t11 * t119 + 0.2e1 * t111 * t28 + 0.2e1 * t46 * t81 + 0.2e1 * t55 * t88, 0.2e1 * t10 * t119 - 0.2e1 * t111 * t29 - 0.2e1 * t45 * t81 + 0.2e1 * t55 * t89, 0.2e1 * t10 * t88 - 0.2e1 * t11 * t89 + 0.2e1 * t28 * t45 - 0.2e1 * t29 * t46, -0.2e1 * t10 * t29 + 0.2e1 * t11 * t28 + 0.2e1 * t55 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, t240, 0, t109, 0, 0, 0, 0, 0, 0, t63, -t179, 0, t97, 0, 0, 0, 0, 0, 0, -t210, -t211, -t163 + t310, -t324, 0, 0, 0, 0, 0, 0, t34, -t226, t228 + t311, -t1 * t123 - t122 * t2 - t8 * t96 - t9 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -t110, 0, 0, 0, 0, 0, 0, 0, 0, t91, -t207 (t140 + t141) * t110, -t325, 0, 0, 0, 0, 0, 0, t57, -t218, t227 + t308, -t10 * t123 - t11 * t122 - t28 * t96 - t29 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t306 + 0.2e1 * t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, 0, -t63, t263, t21, t20, 0, 0, t283 * t74 - t170, t163 + t310, t211, t146 * t252 - t148 * t326, -t210, 0, -pkin(4) * t326 - pkin(10) * t211 - t212, pkin(4) * t172 + pkin(10) * t210 + t213 (t200 - t170 + (t205 + t303) * qJD(5)) * pkin(10) + t185, -pkin(4) * t19 + pkin(10) * t185, -t123 * t14 - t51 * t95, -t228 + t311, t226, t122 * t15 + t50 * t96, t34, 0, t12 * t122 + t136 * t15 + t26 * t96 + t278 * t50 + t63 * t99 + t67 * t85, -t100 * t63 + t12 * t123 - t136 * t14 - t26 * t95 + t278 * t51 + t66 * t85, t1 * t122 - t100 * t15 - t123 * t2 + t14 * t99 + t50 * t66 - t51 * t67 + t8 * t95 - t9 * t96, -t1 * t100 + t12 * t136 + t2 * t99 + t26 * t278 - t66 * t9 + t67 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110, 0, -t111, 0, -t78, -t176, 0, 0, -t68, t110 * t288 - 0.4e1 * t120 * t261, t207, t68, t91, 0, -t304 + t231 * t146 + (t146 * t98 - t148 * t230) * qJD(5), t305 + t231 * t148 + (t146 * t230 + t148 * t98) * qJD(5), t183, -pkin(4) * t78 + pkin(10) * t183, -t123 * t45 - t89 * t95, -t227 + t308, t218, t122 * t46 + t88 * t96, t57, 0, t111 * t99 + t119 * t67 + t122 * t55 + t136 * t46 + t278 * t88 + t81 * t96, -t100 * t111 + t119 * t66 + t123 * t55 - t136 * t45 + t278 * t89 - t81 * t95, t10 * t122 - t100 * t46 - t11 * t123 + t28 * t95 - t29 * t96 + t45 * t99 + t66 * t88 - t67 * t89, -t10 * t100 + t11 * t99 + t136 * t55 + t278 * t81 + t28 * t67 - t29 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100 * t95 - t122 * t67 - t123 * t66 - t96 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t261, -0.2e1 * t250, 0, -0.2e1 * t261, 0, 0, t146 * t282, t148 * t282, 0, 0, -0.2e1 * t306, 0.2e1 * t122 * t95 - 0.2e1 * t123 * t96, 0, 0.2e1 * t307, 0, 0, 0.2e1 * t122 * t278 + 0.2e1 * t136 * t96, 0.2e1 * t123 * t278 - 0.2e1 * t136 * t95, -0.2e1 * t100 * t96 + 0.2e1 * t122 * t66 - 0.2e1 * t123 * t67 + 0.2e1 * t95 * t99, -0.2e1 * t100 * t66 + 0.2e1 * t136 * t278 + 0.2e1 * t67 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, 0, -t326, t63, t7, t6, 0, 0, 0, 0, -t14, 0, -t15, t63, -t248 * t85 + t279 * t63 + t2 (-t257 * t85 - t316 * t63) * pkin(5) + t1 (t318 * t14 - t316 * t15 + (t316 * t51 - t318 * t50) * qJD(6)) * pkin(5) (t318 * t2 - t316 * t1 + (-t316 * t8 + t318 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, 0, -t209, t111, t32, t31, 0, 0, 0, 0, -t45, 0, -t46, t111, t111 * t279 - t119 * t248 + t11 (-t111 * t316 - t119 * t257) * pkin(5) + t10 (t318 * t45 - t316 * t46 + (t316 * t89 - t318 * t88) * qJD(6)) * pkin(5) (t318 * t11 - t316 * t10 + (-t28 * t316 + t29 * t318) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, -t283, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t95, 0 (-t318 * t96 - t316 * t95 + (t122 * t316 + t123 * t318) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, 0, -t284, 0, -pkin(10) * t283, pkin(10) * t284, 0, 0, 0, 0, -t95, 0, -t96, 0, t67, t66 (t318 * t95 - t316 * t96 + (-t122 * t318 + t123 * t316) * qJD(6)) * pkin(5) (t318 * t67 - t316 * t66 + (t100 * t318 - t316 * t99) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t248, -0.2e1 * t249, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, -t15, t63, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, 0, -t46, t111, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t95, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t95, 0, -t96, 0, t67, t66, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, -t249, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
