% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:25:28
% EndTime: 2019-03-09 14:26:56
% DurationCPUTime: 61.02s
% Computational Cost: add. (36983->1251), mult. (90490->1667), div. (0->0), fcn. (106516->12), ass. (0->912)
t1366 = cos(qJ(4));
t872 = cos(pkin(12));
t1128 = t1366 * t872;
t870 = sin(pkin(12));
t876 = sin(qJ(4));
t1264 = t876 * t870;
t967 = t1128 - t1264;
t1201 = qJD(2) * t967;
t871 = sin(pkin(6));
t879 = cos(qJ(2));
t1289 = t871 * t879;
t757 = t967 * t1289;
t878 = cos(qJ(5));
t1257 = t878 * t757;
t877 = sin(qJ(2));
t1290 = t871 * t877;
t875 = sin(qJ(5));
t691 = t1290 * t875 + t1257;
t874 = sin(qJ(6));
t1277 = t874 * t691;
t1365 = cos(qJ(6));
t1266 = t875 * t757;
t847 = t878 * t1290;
t690 = -t847 + t1266;
t666 = t1365 * t690;
t1020 = -t666 / 0.2e1 - t1277 / 0.2e1;
t1381 = -t967 / 0.2e1;
t1115 = t1365 * t878;
t1129 = t1366 * t870;
t1263 = t876 * t872;
t830 = t1129 + t1263;
t702 = t875 * t830;
t678 = -t1115 * t830 + t702 * t874;
t1392 = -t678 / 0.2e1;
t873 = cos(pkin(6));
t810 = -t1290 * t870 + t872 * t873;
t1265 = t876 * t810;
t811 = t1290 * t872 + t870 * t873;
t781 = t1366 * t811;
t1415 = t781 + t1265;
t1269 = t875 * t1415;
t580 = t1289 * t878 + t1269;
t1279 = t874 * t580;
t1260 = t878 * t1415;
t582 = -t1289 * t875 + t1260;
t552 = t1365 * t582;
t1416 = t552 - t1279;
t668 = -t1366 * t810 + t876 * t811;
t1478 = t1416 * t1381 + t1392 * t668;
t1461 = t1020 + t1478;
t1491 = qJD(1) * t1461 + t678 * t1201;
t1116 = t1365 * t875;
t1275 = t874 * t878;
t966 = -t1116 - t1275;
t1449 = t966 * t830;
t1389 = -t1449 / 0.2e1;
t361 = t1365 * t580 + t874 * t582;
t1479 = t1381 * t361 + t1389 * t668;
t1117 = t1365 * t691;
t1278 = t874 * t690;
t950 = -t1278 / 0.2e1 + t1117 / 0.2e1;
t1458 = t950 + t1479;
t1490 = qJD(1) * t1458 + t1449 * t1201;
t1142 = qJD(5) + qJD(6);
t1376 = t966 / 0.2e1;
t949 = t1275 / 0.2e1 + t1116 / 0.2e1;
t514 = (t1376 + t949) * t967;
t1489 = -t514 * qJD(4) + t1142 * t678 - t1491;
t1446 = t1142 * t1449;
t1276 = t874 * t875;
t965 = t1115 - t1276;
t1451 = t965 * t967;
t1093 = -t1451 / 0.2e1;
t948 = -t1115 / 0.2e1 + t1276 / 0.2e1;
t1236 = t948 * t967;
t512 = t1093 - t1236;
t1488 = t512 * qJD(4) + t1446 - t1490;
t1375 = -t966 / 0.2e1;
t929 = t1375 + t949;
t509 = t929 * t967;
t1487 = -t509 * qJD(4) + t1491;
t1473 = t1451 / 0.2e1;
t510 = t1473 - t1236;
t1486 = t510 * qJD(4) + t1490;
t1453 = t878 * t668;
t632 = -t1453 / 0.2e1;
t1459 = t1453 / 0.2e1 + t632;
t1483 = qJD(5) * t1459;
t1450 = t966 * t668;
t931 = t668 * t949;
t1471 = t1450 / 0.2e1 + t931;
t1482 = t1142 * t1471;
t1200 = qJD(2) * t830;
t1206 = qJD(1) * t1415;
t1481 = t1200 + t1206;
t864 = -pkin(5) * t878 - pkin(4);
t1374 = -t864 / 0.2e1;
t1352 = pkin(9) + qJ(3);
t1066 = t1352 * t870;
t842 = t1352 * t872;
t745 = t1366 * t1066 + t842 * t876;
t637 = pkin(5) * t702 + t745;
t1400 = pkin(10) + pkin(11);
t844 = t1400 * t875;
t845 = t1400 * t878;
t754 = t1365 * t845 - t874 * t844;
t1480 = -t1374 * t678 - t1375 * t637 + t1381 * t754;
t1457 = t950 - t1479;
t1452 = t965 * t668;
t1095 = t1452 / 0.2e1;
t930 = t668 * t948;
t300 = t1095 + t930;
t1477 = qJD(2) * t1457 + t300 * qJD(4);
t1460 = t1020 - t1478;
t1476 = qJD(2) * t1460 + t1471 * qJD(4);
t1207 = qJD(1) * t668;
t296 = t929 * t668;
t1475 = qJD(2) * t1461 + t296 * qJD(4) + t1207 * t1416;
t1377 = -t965 / 0.2e1;
t298 = (t1377 + t948) * t668;
t1474 = qJD(2) * t1458 + t298 * qJD(4) + t1207 * t361;
t1378 = t965 / 0.2e1;
t1388 = t1449 / 0.2e1;
t1454 = t875 * t668;
t1472 = t1454 / 0.2e1;
t1470 = t1450 * t668;
t1469 = t1452 * t668;
t1316 = t668 * t830;
t376 = t1415 * t1381 + t1316 / 0.2e1;
t964 = t376 * qJD(2) + t668 * t1206;
t1203 = qJD(1) * t879;
t1113 = t871 * t1203;
t1039 = t1113 * t668;
t1087 = -t1289 / 0.2e1;
t1035 = t876 * t1087;
t1041 = t1366 * t1289;
t1371 = t872 / 0.2e1;
t617 = t1035 * t870 + t1041 * t1371 - t1087 * t967;
t1468 = t617 * qJD(2) - t1039;
t735 = t967 * t1200;
t963 = t376 * qJD(1) - t735;
t1427 = -t1416 ^ 2 + t361 ^ 2;
t1467 = qJD(1) * t1427;
t1151 = t1415 * qJD(4);
t1040 = t1415 * t1113;
t1372 = -t870 / 0.2e1;
t616 = t1035 * t872 + t1041 * t1372 + t1087 * t830;
t1466 = t616 * qJD(2) - t1040;
t1437 = t1416 * t966;
t103 = -t361 * t965 + t1437;
t263 = t1449 * t965 - t678 * t966;
t674 = t965 ^ 2 - t966 ^ 2;
t1248 = t263 * qJD(2) + t674 * qJD(4);
t1465 = qJD(1) * t103 + t1248;
t1422 = t361 / 0.2e1;
t1072 = 0.2e1 * t1422;
t70 = -t1072 * t965 + t1437;
t1464 = qJD(1) * t70 + t1248;
t353 = t1449 ^ 2 - t678 ^ 2;
t1249 = t353 * qJD(2) + t263 * qJD(4);
t1438 = t1416 * t678;
t76 = -t1449 * t361 + t1438;
t1463 = qJD(1) * t76 + t1249;
t60 = -t1072 * t1449 + t1438;
t1462 = qJD(1) * t60 + t1249;
t1307 = t745 * t875;
t1355 = t830 * pkin(4);
t1356 = t967 * pkin(10);
t723 = t1355 - t1356;
t714 = t878 * t723;
t1062 = t714 + t1307;
t1354 = t830 * pkin(5);
t705 = t878 * t967;
t403 = -pkin(11) * t705 + t1062 + t1354;
t1121 = t1365 * t403;
t713 = t875 * t723;
t722 = t745 * t878;
t1238 = t722 - t713;
t700 = t875 * t967;
t449 = -pkin(11) * t700 - t1238;
t1280 = t874 * t449;
t951 = -t1280 / 0.2e1 + t1121 / 0.2e1;
t116 = t951 + t1480;
t119 = t951 - t1480;
t1061 = t1365 * t844 + t874 * t845;
t1428 = t1061 * t1381 + t1378 * t637 + t864 * t1388;
t1395 = t668 / 0.2e1;
t1394 = -t1415 / 0.2e1;
t856 = pkin(8) * t1289;
t857 = t873 * t877 * pkin(1);
t816 = t856 + t857;
t778 = qJ(3) * t873 + t816;
t1018 = -pkin(2) * t879 - qJ(3) * t877;
t779 = (-pkin(1) + t1018) * t871;
t598 = -t870 * t778 + t872 * t779;
t471 = -pkin(3) * t1289 - t811 * pkin(9) + t598;
t599 = t872 * t778 + t870 * t779;
t517 = pkin(9) * t810 + t599;
t304 = -t1366 * t471 + t517 * t876;
t281 = pkin(4) * t1289 + t304;
t210 = pkin(5) * t580 + t281;
t1456 = t210 * t361;
t1448 = qJD(5) * t361;
t1447 = qJD(6) * t361;
t1213 = qJD(1) * t1416;
t1445 = t1213 * t361;
t1444 = t1374 * t361;
t1399 = -t637 / 0.2e1;
t1443 = t1399 * t361;
t1442 = t1415 * t361;
t1441 = t1415 * t580;
t1440 = t1415 * t582;
t1439 = t1416 * t210;
t1433 = t376 * qJD(4);
t1152 = t668 * qJD(4);
t1202 = qJD(2) * t678;
t399 = t1375 * t1449 + t1377 * t678;
t1432 = t399 * qJD(4) - t1202 * t1449;
t1191 = qJD(4) * t966;
t1431 = t399 * qJD(2) - t965 * t1191;
t1034 = t781 / 0.2e1;
t652 = t1034 + t1265 / 0.2e1;
t1407 = t652 * qJD(5) + t964;
t817 = t1129 / 0.2e1 + t1263 / 0.2e1;
t1408 = t817 * qJD(5) + t963;
t1430 = t1415 * t1416;
t1196 = qJD(2) * t878;
t1111 = t875 * t1196;
t1023 = 0.2e1 * t830 * t1111;
t868 = t875 ^ 2;
t869 = t878 ^ 2;
t854 = t869 - t868;
t1060 = qJD(4) * t854;
t1429 = t1023 - t1060;
t1118 = t1365 * t449;
t1031 = -t1118 / 0.2e1;
t1282 = t874 * t403;
t952 = -t1282 / 0.2e1 + t1031;
t117 = t952 - t1428;
t1379 = t830 / 0.2e1;
t1424 = t1416 * t1379 + t1415 * t1392;
t1423 = t1142 * t754;
t820 = t967 ^ 2;
t821 = t830 ^ 2;
t1420 = -t821 - t820;
t1141 = t821 - t820;
t1418 = t1142 * t967;
t1052 = t1142 * t965;
t752 = t817 * t1289;
t756 = t830 * t1289;
t1417 = -t752 * qJD(5) - t756 * t1207;
t1101 = t1416 * t1378;
t168 = -t1375 * t361 + t1101;
t1414 = qJD(1) * t168 + t1431;
t167 = t1376 * t361 + t1101;
t1413 = qJD(1) * t167 + t1431;
t1103 = t1416 * t1388;
t126 = -t1392 * t361 + t1103;
t1412 = qJD(1) * t126 + t1432;
t1391 = t678 / 0.2e1;
t125 = t1391 * t361 + t1103;
t1411 = qJD(1) * t125 + t1432;
t305 = t1366 * t517 + t876 * t471;
t282 = -pkin(10) * t1289 + t305;
t1026 = pkin(4) * t668 - pkin(10) * t1415;
t1364 = pkin(1) * t879;
t815 = pkin(8) * t1290 - t873 * t1364;
t782 = -pkin(2) * t873 + t815;
t689 = -pkin(3) * t810 + t782;
t890 = t1026 + t689;
t151 = t878 * t282 + t875 * t890;
t115 = -t580 * pkin(11) + t151;
t1126 = t1365 * t115;
t1361 = t582 * pkin(11);
t1274 = t875 * t282;
t338 = t878 * t890;
t150 = -t338 + t1274;
t114 = -t150 - t1361;
t55 = -t874 * t114 - t1126;
t1405 = qJD(6) * t817 + t1408;
t1404 = qJD(6) * t652 + t1407;
t1403 = t1142 * t1061;
t1402 = t668 ^ 2;
t1401 = -pkin(4) / 0.2e1;
t1030 = -t552 / 0.2e1;
t1398 = t637 / 0.2e1;
t746 = -t1066 * t876 + t1366 * t842;
t638 = pkin(5) * t700 + t746;
t1397 = t638 / 0.2e1;
t1396 = -t668 / 0.2e1;
t1393 = t1415 / 0.2e1;
t679 = t966 * t967;
t1390 = t679 / 0.2e1;
t1386 = -t714 / 0.2e1;
t1385 = t745 / 0.2e1;
t1384 = -t746 / 0.2e1;
t1383 = -t756 / 0.2e1;
t1382 = t967 / 0.2e1;
t1380 = -t830 / 0.2e1;
t1373 = t864 / 0.2e1;
t1370 = -t874 / 0.2e1;
t1369 = -t875 / 0.2e1;
t1368 = t875 / 0.2e1;
t1367 = -t878 / 0.2e1;
t1363 = pkin(5) * t582;
t1362 = pkin(5) * t875;
t1360 = t668 * pkin(5);
t1359 = t1415 * pkin(5);
t1358 = t756 * pkin(5);
t1357 = t967 * pkin(5);
t1353 = t874 * pkin(5);
t1351 = t60 * qJD(5) + t76 * qJD(6);
t1350 = t70 * qJD(5) + t103 * qJD(6);
t216 = -pkin(5) * t1454 + t305;
t939 = t114 + t1360;
t104 = t1365 * t939;
t1287 = t874 * t115;
t51 = -t104 + t1287;
t1273 = t875 * t304;
t443 = pkin(4) * t1415 + pkin(10) * t668;
t440 = t878 * t443;
t1063 = t440 + t1273;
t122 = pkin(11) * t1453 + t1063 + t1359;
t1125 = t1365 * t122;
t295 = t878 * t304;
t439 = t875 * t443;
t1245 = t295 - t439;
t149 = pkin(11) * t1454 - t1245;
t1285 = t874 * t149;
t61 = t1125 - t1285;
t9 = -t1415 * t51 + t1450 * t210 + t216 * t361 + t61 * t668;
t1349 = t9 * qJD(1);
t29 = t1363 * t361 + t55 * t668 + t1439;
t1348 = qJD(1) * t29;
t1127 = t1365 * t114;
t56 = t1127 - t1287;
t30 = t1363 * t1416 - t56 * t668 - t1456;
t1347 = qJD(1) * t30;
t31 = t51 * t668 - t1456;
t1346 = qJD(1) * t31;
t52 = t874 * t939 + t1126;
t32 = -t52 * t668 + t1439;
t1345 = qJD(1) * t32;
t65 = t150 * t668 - t281 * t580;
t1343 = qJD(1) * t65;
t66 = -t151 * t668 + t281 * t582;
t1342 = qJD(1) * t66;
t1124 = t1365 * t149;
t1286 = t874 * t122;
t62 = t1124 + t1286;
t10 = -t1415 * t52 + t1416 * t216 - t1452 * t210 - t62 * t668;
t1339 = t10 * qJD(1);
t813 = (pkin(2) * t877 - qJ(3) * t879) * t871;
t687 = t872 * t813 + t870 * t815;
t561 = (-pkin(9) * t872 * t879 + pkin(3) * t877) * t871 + t687;
t1130 = t1366 * t561;
t1133 = t870 * t1289;
t688 = t870 * t813 - t872 * t815;
t595 = -pkin(9) * t1133 + t688;
t591 = t876 * t595;
t1021 = -t591 + t1130;
t354 = -pkin(4) * t1290 - t1021;
t269 = t690 * pkin(5) + t354;
t450 = t666 + t1277;
t528 = t876 * t561;
t592 = t1366 * t595;
t1239 = t592 + t528;
t355 = pkin(10) * t1290 + t1239;
t1272 = t875 * t355;
t755 = pkin(3) * t1133 + t816;
t469 = pkin(4) * t756 - pkin(10) * t757 + t755;
t464 = t878 * t469;
t211 = t464 - t1272;
t162 = -pkin(11) * t691 + t1358 + t211;
t1123 = t1365 * t162;
t348 = t878 * t355;
t463 = t875 * t469;
t212 = t348 + t463;
t187 = -pkin(11) * t690 + t212;
t1283 = t874 * t187;
t67 = t1123 - t1283;
t15 = t210 * t450 + t269 * t361 - t51 * t756 + t668 * t67;
t1338 = t15 * qJD(1);
t451 = t1117 - t1278;
t1122 = t1365 * t187;
t1284 = t874 * t162;
t68 = t1122 + t1284;
t16 = t1416 * t269 + t210 * t451 - t52 * t756 - t668 * t68;
t1337 = t16 * qJD(1);
t1336 = t210 * t678;
t1335 = t210 * t1449;
t1334 = t210 * t965;
t1333 = t210 * t966;
t1332 = t281 * t878;
t37 = -t150 * t1415 + t305 * t580 + (t440 + (-t281 + t304) * t875) * t668;
t1327 = t37 * qJD(1);
t38 = -t151 * t1415 + t305 * t582 + (t1245 - t1332) * t668;
t1326 = t38 * qJD(1);
t39 = -t150 * t756 + t211 * t668 + t281 * t690 + t354 * t580;
t1325 = t39 * qJD(1);
t40 = -t151 * t756 - t212 * t668 + t281 * t691 + t354 * t582;
t1324 = t40 * qJD(1);
t1323 = t451 * t966;
t1322 = t582 * t875;
t1321 = t582 * t878;
t1320 = t637 * t678;
t1319 = t637 * t1449;
t1314 = t678 * t830;
t1313 = t679 * t967;
t1311 = t1449 * t830;
t1310 = t1451 * t668;
t1309 = t1451 * t967;
t1308 = t691 * t875;
t1305 = t754 * t668;
t1303 = t810 * t872;
t1302 = t811 * t870;
t1301 = t830 * t361;
t1300 = t830 * t878;
t1298 = t965 * t756;
t1296 = t965 * t864;
t1294 = t966 * t756;
t866 = t871 ^ 2;
t1291 = t866 * t877;
t1259 = t878 * t746;
t1025 = -pkin(4) * t967 - pkin(10) * t830;
t860 = -pkin(3) * t872 - pkin(2);
t947 = t1025 + t860;
t483 = t875 * t947 + t1259;
t438 = -pkin(11) * t702 + t483;
t1281 = t874 * t438;
t1271 = t875 * t580;
t1268 = t875 * t746;
t1267 = t875 * t756;
t1262 = t878 * t580;
t1258 = t878 * t756;
t90 = -t1416 * t1450 + t1452 * t361;
t1256 = t90 * qJD(1);
t95 = t1021 * t1289 + t1290 * t304 - t755 * t668 - t689 * t756;
t1255 = t95 * qJD(1);
t96 = t755 * t1415 + t689 * t757 + (t1239 * t879 - t305 * t877) * t871;
t1254 = t96 * qJD(1);
t97 = -t1416 * t450 - t361 * t451;
t1253 = t97 * qJD(1);
t1252 = t126 * qJD(5) + t125 * qJD(6);
t1251 = t168 * qJD(5) + t167 * qJD(6);
t1250 = t1142 * t263;
t1244 = t1142 * t399;
t1241 = t1142 * t509;
t1240 = t1142 * t514;
t1081 = t700 / 0.2e1;
t1237 = t874 * t1081 + t1115 * t1381;
t851 = t870 ^ 2 + t872 ^ 2;
t973 = -t1392 * t1452 + t1416 * t1473;
t100 = t1323 / 0.2e1 + t973;
t1235 = qJD(1) * t100;
t141 = -t1442 - t1470;
t1229 = qJD(1) * t141;
t142 = t1442 - t1470;
t1228 = qJD(1) * t142;
t143 = t1430 - t1469;
t1227 = qJD(1) * t143;
t144 = t1430 + t1469;
t1226 = qJD(1) * t144;
t192 = -t1289 * t304 - t689 * t668;
t1225 = qJD(1) * t192;
t193 = -t1289 * t305 - t1415 * t689;
t1224 = qJD(1) * t193;
t222 = -t1402 * t875 + t1441;
t1223 = qJD(1) * t222;
t223 = -t1454 * t668 - t1441;
t1222 = qJD(1) * t223;
t224 = -t1402 * t878 + t1440;
t1221 = qJD(1) * t224;
t225 = t1453 * t668 + t1440;
t1220 = qJD(1) * t225;
t1077 = t705 / 0.2e1;
t1099 = -t1316 / 0.2e1;
t938 = t1077 * t582 + t1099 * t869;
t237 = -t1308 / 0.2e1 + t938;
t1219 = qJD(1) * t237;
t1089 = -t1290 / 0.2e1;
t1100 = t580 * t1382;
t243 = t1100 - t1257 / 0.2e1 + (t1099 + t1089) * t875;
t1218 = qJD(1) * t243;
t1019 = t847 / 0.2e1 - t1266 / 0.2e1;
t957 = t1382 * t582 + t632 * t830;
t244 = t957 - t1019;
t1217 = qJD(1) * t244;
t1216 = qJD(1) * t296;
t297 = -t1450 / 0.2e1 + t931;
t1215 = qJD(1) * t297;
t320 = -t598 * t811 + t599 * t810;
t1214 = qJD(1) * t320;
t1212 = qJD(1) * t1454;
t1070 = 0.2e1 * t1395;
t425 = t1070 * t875;
t1211 = qJD(1) * t425;
t467 = -t1289 * t756 + t1290 * t668;
t1210 = qJD(1) * t467;
t468 = t1289 * t757 - t1290 * t1415;
t1209 = qJD(1) * t468;
t1208 = qJD(1) * t582;
t1205 = qJD(1) * t752;
t1204 = qJD(1) * t873;
t1199 = qJD(2) * t860;
t1198 = qJD(2) * t870;
t1197 = qJD(2) * t872;
t1195 = qJD(2) * t879;
t1194 = qJD(3) * t878;
t1193 = qJD(3) * t879;
t1192 = qJD(4) * t830;
t1190 = qJD(4) * t864;
t1189 = qJD(4) * t875;
t1188 = qJD(4) * t878;
t1187 = qJD(5) * t668;
t1186 = qJD(5) * t875;
t1185 = qJD(5) * t878;
t1184 = qJD(6) * t752;
t968 = t1262 / 0.2e1 + t1322 / 0.2e1;
t917 = t1453 * t702 - t967 * t968;
t971 = t691 * t878 / 0.2e1 + t690 * t1369;
t148 = t917 - t971;
t1183 = t148 * qJD(1);
t163 = -t361 * t756 - t450 * t668;
t1182 = t163 * qJD(1);
t164 = t1416 * t756 + t451 * t668;
t1181 = t164 * qJD(1);
t1071 = -t528 / 0.2e1 - t592 / 0.2e1;
t905 = t1087 * t745 + t1382 * t689 + t1396 * t860;
t181 = t905 - t1071;
t1180 = t181 * qJD(1);
t904 = t689 * t1379 + t860 * t1393 + t746 * t1289 / 0.2e1;
t977 = -t591 / 0.2e1 + t1130 / 0.2e1;
t183 = t904 - t977;
t1179 = t183 * qJD(1);
t198 = -t687 * t811 + t688 * t810 + (-t598 * t872 - t599 * t870) * t1289;
t1178 = t198 * qJD(1);
t209 = t598 * t687 + t599 * t688 + t782 * t816;
t1177 = t209 * qJD(1);
t1009 = t1262 + t1322;
t215 = t1009 * t668;
t1176 = t215 * qJD(1);
t221 = -t580 * t691 - t582 * t690;
t1175 = t221 * qJD(1);
t261 = -t1133 * t782 + t1289 * t687 - t1290 * t598 + t816 * t810;
t1174 = t261 * qJD(1);
t262 = t816 * t811 + (-t599 * t877 + (t782 * t872 + t688) * t879) * t871;
t1173 = t262 * qJD(1);
t267 = -t580 * t756 - t668 * t690;
t1170 = t267 * qJD(1);
t268 = t582 * t756 + t668 * t691;
t1169 = t268 * qJD(1);
t319 = -t1415 * t756 - t668 * t757;
t1168 = t319 * qJD(1);
t359 = t1030 + t552 / 0.2e1;
t1166 = t359 * qJD(1);
t431 = 0.2e1 * t632;
t1161 = t431 * qJD(1);
t1160 = t509 * qJD(2);
t615 = (t1380 + t817) * t1289;
t1159 = t615 * qJD(1);
t1158 = t615 * qJD(2);
t1157 = t616 * qJD(1);
t1155 = t617 * qJD(1);
t618 = (t1382 - t1128 / 0.2e1 + t1264 / 0.2e1) * t1289;
t1154 = t618 * qJD(1);
t1149 = t700 * qJD(2);
t750 = pkin(1) * t1291 + t816 * t873;
t1148 = t750 * qJD(1);
t751 = t1364 * t866 - t815 * t873;
t1147 = t751 * qJD(1);
t814 = t967 * qJD(4);
t829 = (-t877 ^ 2 + t879 ^ 2) * t866;
t1144 = t829 * qJD(1);
t818 = t966 * qJD(6);
t1143 = t871 * qJD(4);
t1140 = pkin(5) * t1300;
t1139 = t1365 / 0.2e1;
t1138 = t1365 * pkin(5);
t1137 = -t1363 / 0.2e1;
t1136 = t1363 / 0.2e1;
t1135 = -t1362 / 0.2e1;
t1134 = t1362 / 0.2e1;
t1132 = qJD(5) * t966 + t1160 + t818;
t1131 = t1433 + t1417;
t686 = t878 * t947;
t482 = -t686 + t1268;
t437 = -pkin(11) * t1300 - t482;
t1120 = t1365 * t437;
t1119 = t1365 * t438;
t1114 = t582 * t1207;
t1112 = t830 * t1196;
t1110 = t871 * t1193;
t1109 = t879 * t1143;
t1108 = t875 * t1188;
t1107 = t967 * t1185;
t734 = t830 * t814;
t1106 = t866 * t1203;
t1105 = qJD(2) * t1290;
t1104 = t875 * t1185;
t805 = t830 * t1188;
t1098 = t668 * t1390;
t1097 = -t1300 / 0.2e1;
t1096 = t1300 / 0.2e1;
t1094 = -t1298 / 0.2e1;
t1091 = t1294 / 0.2e1;
t1090 = -t1294 / 0.2e1;
t1088 = t1290 / 0.2e1;
t1085 = -t1454 / 0.2e1;
t1084 = -t1269 / 0.2e1;
t1083 = -t1267 / 0.2e1;
t1082 = t1267 / 0.2e1;
t1080 = t702 / 0.2e1;
t1079 = t1260 / 0.2e1;
t1078 = -t1258 / 0.2e1;
t1076 = t281 / 0.2e1 - t304 / 0.2e1;
t1075 = -t295 / 0.2e1 + t439 / 0.2e1;
t1074 = -t348 / 0.2e1 - t463 / 0.2e1;
t1069 = 0.2e1 * t1394;
t1068 = t713 / 0.2e1 - t722 / 0.2e1;
t1067 = -t856 / 0.2e1 - t857 / 0.2e1;
t1065 = t1365 * qJD(5);
t1064 = t1365 * qJD(6);
t1055 = t1149 - t1186;
t1051 = pkin(5) * t1096;
t1050 = qJD(2) + t1204;
t1049 = qJD(5) + t1207;
t1048 = -qJD(6) - t1207;
t1047 = qJD(3) + t1199;
t1046 = -qJD(5) + t1201;
t1045 = -t1138 / 0.2e1;
t1042 = -t756 * t1201 - t1417 + t1433;
t1038 = t1195 * t1291;
t1037 = t877 * t1106;
t1033 = -t1124 / 0.2e1;
t1032 = -t1122 / 0.2e1;
t1029 = t1415 * t1139;
t1028 = t756 * t1139;
t1024 = 0.2e1 * t875 * t805;
t1022 = t464 / 0.2e1 - t1272 / 0.2e1;
t1017 = -qJD(4) + t1113;
t922 = t437 - t1357;
t400 = t1365 * t922;
t213 = -t400 + t1281;
t217 = t1121 - t1280;
t881 = -t210 * t679 / 0.2e1 + t213 * t1394 + t216 * t1389 + t217 * t1395 + t51 * t1380 + t61 * t1381 + t1450 * t1398 + t361 * t1397;
t914 = t1061 * t1383 + t1373 * t450 + t1377 * t269;
t2 = t881 - t914;
t63 = -t1449 * t638 - t213 * t830 - t217 * t967 - t637 * t679;
t1016 = t2 * qJD(1) + t63 * qJD(2);
t214 = t874 * t922 + t1119;
t218 = t1118 + t1282;
t880 = t1380 * t52 + t1382 * t62 + t1392 * t216 + t1394 * t214 + t1396 * t218 + t1397 * t1416 - t1398 * t1452 + t1473 * t210;
t913 = t1373 * t451 + t1375 * t269 + t1383 * t754;
t4 = t880 - t913;
t64 = t1451 * t637 - t214 * t830 + t218 * t967 - t638 * t678;
t1015 = t4 * qJD(1) + t64 * qJD(2);
t219 = -t874 * t437 - t1119;
t112 = -t1140 * t1449 - t219 * t967 - t1320;
t953 = -t1283 / 0.2e1 + t1123 / 0.2e1;
t903 = t1336 / 0.2e1 + t953;
t919 = t1382 * t55 + t1396 * t219 + t1399 * t1416;
t6 = (t1097 * t361 + t1388 * t582 + t1028) * pkin(5) + t903 + t919;
t1013 = qJD(1) * t6 - qJD(2) * t112;
t220 = t1120 - t1281;
t113 = -t1140 * t678 + t220 * t967 + t1319;
t954 = -t1284 / 0.2e1 + t1032;
t902 = -t1335 / 0.2e1 + t954;
t918 = t1381 * t56 + t1395 * t220 - t1443;
t5 = (t1097 * t1416 + t1370 * t756 + t1391 * t582) * pkin(5) + t902 + t918;
t1012 = qJD(1) * t5 - qJD(2) * t113;
t17 = (-t1360 + t1361 / 0.2e1 + t1274 / 0.2e1 - t338 / 0.2e1 + t114 / 0.2e1) * t874;
t91 = (t1357 + pkin(11) * t1096 + t1268 / 0.2e1 - t686 / 0.2e1 + t437 / 0.2e1) * t874;
t1011 = qJD(1) * t17 + qJD(2) * t91;
t961 = -t104 / 0.2e1 + t668 * t1045;
t19 = t1127 / 0.2e1 + t961;
t960 = -t400 / 0.2e1 - t967 * t1045;
t93 = t1120 / 0.2e1 + t960;
t1010 = -t19 * qJD(1) - t93 * qJD(2);
t1008 = -t687 * t870 + t688 * t872;
t920 = t1382 * t52 + t1396 * t214 + t1398 * t1416;
t11 = t903 - t920;
t132 = t214 * t967 - t1320;
t1007 = qJD(1) * t11 - qJD(2) * t132;
t921 = t1381 * t51 + t1395 * t213 + t1443;
t12 = t902 - t921;
t131 = -t213 * t967 + t1319;
t1006 = qJD(1) * t12 - qJD(2) * t131;
t171 = -t714 * t967 + (-t482 + t1268) * t830;
t915 = t1379 * t150 + t1384 * t580 + t1393 * t482;
t974 = pkin(10) * t1383 + t1380 * t305;
t976 = t1367 * t354 + t1401 * t690;
t21 = t668 * t1386 + t440 * t1382 + (-t1076 * t967 + t974) * t875 + t915 + t976;
t1005 = -t21 * qJD(1) + t171 * qJD(2);
t172 = (-t483 + t1259) * t830 - (t1238 - t722) * t967;
t882 = t1238 * t1396 + t1245 * t1382 + t1379 * t151 + t1384 * t582 + t1393 * t483;
t975 = t1368 * t354 + t1401 * t691;
t22 = (t1381 * t281 + t1385 * t668 + t974) * t878 + t882 + t975;
t1004 = -t22 * qJD(1) + t172 * qJD(2);
t264 = t1449 * t1451 - t678 * t679;
t895 = -t1388 * t1452 + t1390 * t1416 + t1391 * t1450 - t1422 * t1451;
t972 = t1376 * t450 + t1378 * t451;
t46 = t895 - t972;
t1003 = t46 * qJD(1) + t264 * qJD(2);
t321 = -t482 * t967 - t702 * t745;
t889 = t1080 * t281 + t1382 * t150 + t1385 * t580 + t1396 * t482;
t42 = t889 + t1074;
t1002 = -qJD(1) * t42 + qJD(2) * t321;
t322 = t1300 * t745 + t483 * t967;
t888 = t1096 * t281 + t1382 * t151 + t1385 * t582 + t1396 * t483;
t41 = -t888 + t1022;
t1001 = qJD(1) * t41 - qJD(2) * t322;
t395 = t1311 - t1313;
t892 = t1450 * t1382 + t1098 + t1415 * t1388 - t1301 / 0.2e1;
t79 = t1094 + t892;
t1000 = -qJD(1) * t79 - qJD(2) * t395;
t396 = -t1311 - t1313;
t891 = -t1450 * t1381 + t1415 * t1389 + t1098 + t1301 / 0.2e1;
t81 = t1094 + t891;
t999 = qJD(1) * t81 + qJD(2) * t396;
t397 = -t1309 - t1314;
t894 = -t1452 * t1381 + t1310 / 0.2e1 + t1424;
t83 = t1091 + t894;
t998 = -qJD(1) * t83 - qJD(2) * t397;
t398 = t1309 - t1314;
t893 = -t1452 * t1382 - t1310 / 0.2e1 + t1424;
t85 = t1090 + t893;
t997 = qJD(1) * t85 + qJD(2) * t398;
t996 = t1046 * t878;
t907 = (t1084 - t580 / 0.2e1) * t830 - t668 * t700;
t155 = t1078 + t907;
t608 = t1141 * t875;
t995 = -qJD(1) * t155 + qJD(2) * t608;
t937 = -t1070 * t967 + t1379 * t1415;
t887 = t1379 * t580 + t875 * t937;
t157 = t1078 + t887;
t609 = t1420 * t875;
t994 = qJD(1) * t157 - qJD(2) * t609;
t906 = (t1079 + t582 / 0.2e1) * t830 + t668 * t705;
t159 = t1083 + t906;
t610 = t1141 * t878;
t993 = -qJD(1) * t159 - qJD(2) * t610;
t886 = t1379 * t582 + t878 * t937;
t161 = t1082 + t886;
t712 = t1420 * t878;
t992 = qJD(1) * t161 - qJD(2) * t712;
t239 = -t1415 * t830 - t668 * t967;
t339 = -t1415 ^ 2 + t1402;
t991 = qJD(1) * t339 + qJD(2) * t239;
t990 = qJD(1) * t239 - qJD(2) * t1141;
t883 = (t1303 / 0.2e1 + t1302 / 0.2e1) * qJ(3) + t598 * t1372 + t599 * t1371;
t241 = t883 + t1067;
t839 = t851 * qJ(3);
t989 = qJD(1) * t241 + qJD(2) * t839;
t205 = qJD(1) * t298 + qJD(2) * t510;
t299 = t1095 - t930;
t511 = t1093 + t1237;
t206 = qJD(1) * t299 + qJD(2) * t511;
t378 = t1069 * t965;
t563 = t830 * t965;
t988 = -qJD(1) * t378 + qJD(2) * t563;
t379 = t1069 * t966;
t987 = qJD(1) * t379 - qJD(2) * t1449;
t428 = t1069 * t875;
t986 = qJD(1) * t428 - qJD(2) * t702;
t985 = -qJD(1) * t1453 + qJD(2) * t705;
t983 = t1201 - t1207;
t521 = qJD(1) * t652 + qJD(2) * t817;
t657 = t1302 + t1303;
t706 = t810 ^ 2 + t811 ^ 2;
t982 = qJD(1) * t706 + qJD(2) * t657;
t981 = qJD(1) * t657 + qJD(2) * t851;
t980 = -t1447 - t1448;
t979 = -t1356 / 0.2e1 + t1355 / 0.2e1;
t970 = t1061 * t1395 + t1444;
t969 = -t1305 / 0.2e1 + t1416 * t1373;
t433 = t1069 * t878;
t962 = -qJD(1) * t433 + t1112;
t959 = pkin(10) * t632 + t1401 * t582;
t958 = t979 * t878;
t956 = -t1286 / 0.2e1 + t1033;
t955 = -t1285 / 0.2e1 + t1125 / 0.2e1;
t946 = qJD(2) * t60 + qJD(4) * t70 + t1467;
t901 = -t1334 / 0.2e1 + t956;
t916 = t1061 * t1396 - t1444;
t25 = (t1369 * t1416 + t1370 * t1415 + t1376 * t582) * pkin(5) + t901 + t916;
t698 = -t1362 * t966 + t1296;
t86 = (t678 * t1368 + (-t1367 * t966 + t1370) * t830) * pkin(5) + t117;
t943 = t25 * qJD(1) + t86 * qJD(2) - t698 * qJD(4);
t896 = t1416 * t1374 + t1305 / 0.2e1;
t900 = t1333 / 0.2e1 + t955;
t26 = (t1369 * t361 + t1378 * t582 + t1029) * pkin(5) + t896 + t900;
t697 = -t1362 * t965 - t864 * t966;
t87 = (t1449 * t1368 + (-t1367 * t965 + t1139) * t830) * pkin(5) + t116;
t942 = t26 * qJD(1) + t87 * qJD(2) - t697 * qJD(4);
t941 = qJD(2) * t76 + qJD(4) * t103 + t1467;
t208 = (-t1271 + t1321) * t830;
t248 = t580 ^ 2 - t582 ^ 2;
t940 = qJD(1) * t248 - qJD(2) * t208 - qJD(4) * t1009;
t936 = -t1336 / 0.2e1 + t953;
t935 = -t1333 / 0.2e1 + t955;
t898 = t979 * t875 + t722 / 0.2e1;
t313 = t898 + t1068;
t911 = pkin(4) * t580 / 0.2e1 + t1332 / 0.2e1 + pkin(10) * t1472;
t71 = t911 + t1075;
t933 = pkin(4) * t1188 - qJD(1) * t71 - qJD(2) * t313;
t315 = t1386 - t958;
t73 = -t440 / 0.2e1 + t1076 * t875 + t959;
t932 = pkin(4) * t1189 - qJD(1) * t73 - qJD(2) * t315;
t33 = t900 - t969;
t928 = qJD(1) * t33 + qJD(2) * t116 + t1190 * t966;
t34 = t901 - t970;
t927 = qJD(1) * t34 + qJD(2) * t117 - t1190 * t965;
t926 = -qJD(2) * t125 - qJD(4) * t167 + t1445;
t925 = qJD(2) * t126 + qJD(4) * t168 - t1445;
t307 = t968 * t830;
t358 = -t1271 / 0.2e1 + t1321 / 0.2e1;
t924 = qJD(2) * t307 - qJD(4) * t358 + t1208 * t580;
t699 = (t868 / 0.2e1 - t869 / 0.2e1) * t830;
t923 = qJD(1) * t358 - qJD(2) * t699 + t1108;
t711 = t854 * t821;
t910 = qJD(1) * t208 + qJD(2) * t711 + t1024;
t909 = qJD(1) * t1009 + t1429;
t908 = qJD(1) * t307 + qJD(4) * t699 + t1111 * t821;
t897 = (qJD(2) * t1018 + t1193) * t871;
t846 = qJD(2) * t1088;
t808 = t817 * qJD(4);
t783 = (t1106 - t1143 / 0.2e1) * t877;
t763 = -0.2e1 * t830 * t1104;
t731 = t1258 / 0.2e1;
t693 = t700 * qJD(5);
t692 = t699 * qJD(5);
t683 = t1298 / 0.2e1;
t653 = t1034 - t781 / 0.2e1;
t643 = t657 * qJD(3);
t626 = t808 - t1205;
t625 = t808 + t1205;
t597 = t618 * qJD(2);
t513 = t1473 + t1237;
t497 = t514 * qJD(3);
t490 = t513 * qJD(3);
t488 = t511 * qJD(3);
t485 = t509 * qJD(3);
t474 = qJD(2) * t752 + qJD(4) * t652;
t434 = t1367 * t1415 + t1079;
t427 = t1368 * t1415 + t1084;
t426 = t1085 + t1472;
t380 = (t1375 + t1376) * t1415;
t377 = (t1377 + t1378) * t1415;
t356 = t358 * qJD(5);
t316 = t1307 + t714 / 0.2e1 - t958;
t314 = t898 - t1068;
t306 = t307 * qJD(5);
t301 = -t1452 / 0.2e1 - t930;
t294 = (qJD(2) * t756 + t1151) * t668;
t291 = t1471 * qJD(3);
t289 = t301 * qJD(3);
t287 = t299 * qJD(3);
t285 = t297 * qJD(3);
t245 = t957 + t1019;
t242 = t830 * t1085 + t1100 + t1257 / 0.2e1 + t875 * t1088;
t240 = t883 - t1067;
t238 = t239 * qJD(4);
t236 = t1308 / 0.2e1 + t938;
t228 = 0.2e1 * t1030 + t1279;
t226 = t1009 * qJD(5);
t207 = t208 * qJD(5);
t204 = -t1160 + t1215;
t203 = -t1160 + t1216;
t201 = t1334 / 0.2e1;
t184 = t904 + t977;
t182 = t905 + t1071;
t178 = t1335 / 0.2e1;
t176 = t1132 - t1215;
t175 = t1132 - t1216;
t174 = -t206 - t1052;
t173 = t1052 - t205;
t160 = t1083 + t886;
t158 = t1082 + t906;
t156 = t731 + t887;
t154 = t731 + t907;
t147 = t917 + t971;
t118 = t952 + t1428;
t99 = -t1323 / 0.2e1 + t973;
t94 = t1281 - t1120 / 0.2e1 + t960;
t92 = t1353 * t967 + t219;
t89 = t678 * t1135 - t966 * t1051 + t1031 + (-t1354 / 0.2e1 - t403 / 0.2e1) * t874 + t1428;
t88 = -t965 * t1051 + t1449 * t1135 + t1138 * t1379 + t119;
t84 = t1091 + t893;
t82 = t1090 + t894;
t80 = t683 + t891;
t78 = t683 + t892;
t74 = t281 * t1368 + t1273 / 0.2e1 + t440 / 0.2e1 + t959;
t72 = t911 - t1075;
t45 = t895 + t972;
t44 = t888 + t1022;
t43 = -t889 + t1074;
t36 = t935 + t969;
t35 = t201 + t956 + t970;
t28 = t1416 * t1134 - t966 * t1136 + t201 + t1033 + (-t1359 / 0.2e1 - t122 / 0.2e1) * t874 - t916;
t27 = pkin(5) * t1029 + t1134 * t361 - t1136 * t965 - t896 + t935;
t24 = pkin(10) * t1078 + t1077 * t281 + t1096 * t305 + t632 * t745 - t882 + t975;
t23 = pkin(10) * t1083 + t1062 * t1395 + t1063 * t1381 + t1080 * t305 + t1081 * t281 + t1085 * t745 - t915 + t976;
t20 = t1287 - t1127 / 0.2e1 + t961;
t18 = -t1353 * t668 + t55;
t14 = t920 + t936;
t13 = t178 + t921 + t954;
t8 = t1416 * t1051 + t678 * t1137 + t178 + t1032 + (-t1358 / 0.2e1 - t162 / 0.2e1) * t874 - t918;
t7 = pkin(5) * t1028 + t1051 * t361 + t1137 * t1449 - t919 + t936;
t3 = t880 + t913;
t1 = t881 + t914;
t47 = [0, 0, 0, t1038, t829 * qJD(2), t871 * t873 * t1195, -t873 * t1105, 0, -t750 * qJD(2), -t751 * qJD(2), -t261 * qJD(2) + t1110 * t811, t262 * qJD(2) + t1110 * t810, qJD(2) * t198 + qJD(3) * t706, qJD(2) * t209 + qJD(3) * t320 (qJD(2) * t757 - t1152) * t1415, qJD(2) * t319 + qJD(4) * t339, -t468 * qJD(2) + t1109 * t668, -t467 * qJD(2) + t1109 * t1415, -t1038, -t95 * qJD(2) - t193 * qJD(4) + t1110 * t1415, t96 * qJD(2) + t192 * qJD(4) - t1110 * t668 (qJD(2) * t691 - qJD(5) * t580 - t1152 * t878) * t582, qJD(2) * t221 + qJD(4) * t215 + qJD(5) * t248, qJD(2) * t268 + qJD(4) * t224 - t1187 * t580, qJD(2) * t267 - qJD(4) * t222 - t1187 * t582, t294, qJD(2) * t39 - qJD(3) * t223 + qJD(4) * t37 + qJD(5) * t66, qJD(2) * t40 + qJD(3) * t225 + qJD(4) * t38 + qJD(5) * t65 (qJD(2) * t451 - qJD(4) * t1452 + t980) * t1416, qJD(2) * t97 + qJD(4) * t90 + t1142 * t1427, qJD(2) * t164 + qJD(4) * t143 + t668 * t980, -t1142 * t1416 * t668 + qJD(2) * t163 + qJD(4) * t141, t294, qJD(2) * t15 + qJD(3) * t142 + qJD(4) * t9 + qJD(5) * t29 + qJD(6) * t32, qJD(2) * t16 + qJD(3) * t144 + qJD(4) * t10 + qJD(5) * t30 + qJD(6) * t31; 0, 0, 0, t1037, t1144, t1050 * t1289, -t1050 * t1290, 0, -qJD(2) * t816 - t1148, qJD(2) * t815 - t1147, -t1197 * t816 + t870 * t897 - t1174, t1198 * t816 + t872 * t897 + t1173, qJD(2) * t1008 + t1178 + t643, t1177 + (-t816 * pkin(2) + qJ(3) * t1008) * qJD(2) + t240 * qJD(3), t1481 * t757 - t1433, t1168 + (-t756 * t830 + t757 * t967) * qJD(2) + t238, -qJD(4) * t618 + t1105 * t830 - t1209, -qJD(4) * t615 + t1105 * t967 - t1210, -t783, -t1255 + (-t1290 * t745 - t755 * t967 + t756 * t860) * qJD(2) - t616 * qJD(3) + t184 * qJD(4), t1254 + (-t1290 * t746 + t755 * t830 + t757 * t860) * qJD(2) + t617 * qJD(3) + t182 * qJD(4), qJD(4) * t236 - t306 + (t1112 + t1208) * t691, t1175 + t147 * qJD(4) - t207 + (-t690 * t878 - t1308) * t1200, t1169 + (t1258 * t830 - t691 * t967) * qJD(2) + t158 * qJD(4) + t242 * qJD(5), t1170 + (t690 * t967 - t702 * t756) * qJD(2) + t154 * qJD(4) + t245 * qJD(5), t1042, t1325 + (-t211 * t967 + t354 * t702 - t482 * t756 + t690 * t745) * qJD(2) + t156 * qJD(3) + t23 * qJD(4) + t44 * qJD(5), t1324 + (t1300 * t354 + t212 * t967 - t483 * t756 + t691 * t745) * qJD(2) + t160 * qJD(3) + t24 * qJD(4) + t43 * qJD(5), qJD(4) * t99 + (-t1202 + t1213) * t451 + t1252, t1253 + (t1449 * t451 + t450 * t678) * qJD(2) + t45 * qJD(4) + t1351, t1181 + (-t451 * t967 - t678 * t756) * qJD(2) + t82 * qJD(4) + t1142 * t1457, t1182 + (t1449 * t756 + t450 * t967) * qJD(2) + t78 * qJD(4) + t1142 * t1460, t1042 + t1184, t1338 + (-t1449 * t269 - t213 * t756 + t450 * t637 - t67 * t967) * qJD(2) + t80 * qJD(3) + t1 * qJD(4) + t7 * qJD(5) + t14 * qJD(6), t1337 + (-t214 * t756 - t269 * t678 + t451 * t637 + t68 * t967) * qJD(2) + t84 * qJD(3) + t3 * qJD(4) + t8 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(1) * t811 + t1198) * t1289 (qJD(1) * t810 + t1197) * t1289, t982, qJD(2) * t240 + t1214, 0, 0, 0, 0, 0, t653 * qJD(4) - t1466, t1468, 0, 0, 0, 0, 0, qJD(2) * t156 + qJD(4) * t434 + qJD(5) * t426 - t1222, qJD(2) * t160 + qJD(4) * t427 + t1220 + t1483, 0, 0, 0, 0, 0, qJD(2) * t80 + qJD(4) * t377 + t1228 + t1482, qJD(2) * t84 + qJD(4) * t380 + t1142 * t301 + t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t964, t991, t1017 * t668 - t597, t1017 * t1415 - t1158, t846, qJD(2) * t184 + qJD(3) * t653 - qJD(4) * t305 - t1224, qJD(2) * t182 + qJD(4) * t304 + t1225, qJD(2) * t236 + t356 + (-t1189 - t1208) * t1453, t147 * qJD(2) - t1060 * t668 + t1176 - t226, qJD(2) * t158 + t1151 * t875 + t1221 + t1483, qJD(2) * t154 + t1151 * t878 - t1223, t1407, t1327 + t23 * qJD(2) + t434 * qJD(3) + (t1026 * t875 - t305 * t878) * qJD(4) + t74 * qJD(5), t1326 + t24 * qJD(2) + t427 * qJD(3) + (t1026 * t878 + t305 * t875) * qJD(4) + t72 * qJD(5), qJD(2) * t99 - (-t1191 + t1213) * t1452 + t1251, t1256 + t45 * qJD(2) + (t1450 * t966 - t1452 * t965) * qJD(4) + t1350, qJD(2) * t82 + t1142 * t300 - t1151 * t966 + t1227, qJD(2) * t78 + t1151 * t965 + t1229 + t1482, t1404, t1349 + t1 * qJD(2) + t377 * qJD(3) + (-t1061 * t1415 + t1450 * t864 - t216 * t965) * qJD(4) + t27 * qJD(5) + t36 * qJD(6), t1339 + t3 * qJD(2) + t380 * qJD(3) + (-t1415 * t754 - t1452 * t864 - t216 * t966) * qJD(4) + t28 * qJD(5) + t35 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t924, t940, qJD(2) * t242 + qJD(4) * t1459 - t1049 * t580, qJD(2) * t245 - t1049 * t582, t474, qJD(2) * t44 + qJD(3) * t426 + qJD(4) * t74 - qJD(5) * t151 + t1342, qJD(2) * t43 + qJD(3) * t1459 + qJD(4) * t72 + qJD(5) * t150 + t1343, t925, t946, -t1049 * t361 - t1447 + t1477, qJD(6) * t228 - t1049 * t1416 + t1476, t474, qJD(2) * t7 + qJD(4) * t27 + qJD(5) * t55 + qJD(6) * t18 + t1348 + t291, qJD(2) * t8 + qJD(4) * t28 - qJD(5) * t56 + qJD(6) * t20 + t1347 + t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t926, t941, t1048 * t361 - t1448 + t1477, qJD(5) * t228 + t1048 * t1416 + t1476, t474, qJD(2) * t14 + qJD(4) * t36 + qJD(5) * t18 - qJD(6) * t52 + t1345 + t291, qJD(2) * t13 + qJD(4) * t35 + qJD(5) * t20 + qJD(6) * t51 + t1346 + t289; 0, 0, 0, -t1037, -t1144, -t873 * t1113, t1204 * t1290, 0, t1148, t1147, t1174, -t1173, t643 - t1178, qJD(3) * t241 - t1177, -t1206 * t757 - t1433, t238 - t1168, -qJD(4) * t617 + t1209, -qJD(4) * t616 + t1210, t783, -qJD(3) * t615 + qJD(4) * t183 + t1255, qJD(3) * t618 + qJD(4) * t181 - t1254, qJD(4) * t237 - t1208 * t691 - t306, qJD(4) * t148 - t1175 - t207, qJD(4) * t159 + qJD(5) * t243 - t1169, qJD(4) * t155 + qJD(5) * t244 - t1170, t1131, qJD(3) * t157 - qJD(4) * t21 - qJD(5) * t41 - t1325, qJD(3) * t161 - qJD(4) * t22 - qJD(5) * t42 - t1324, qJD(4) * t100 - t1213 * t451 + t1252, qJD(4) * t46 - t1253 + t1351, qJD(4) * t83 - t1142 * t1458 - t1181, qJD(4) * t79 - t1142 * t1461 - t1182, t1131 - t1184, qJD(3) * t81 + qJD(4) * t2 - qJD(5) * t6 - qJD(6) * t11 - t1338, qJD(3) * t85 + qJD(4) * t4 - qJD(5) * t5 - qJD(6) * t12 - t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t851 * qJD(3), t839 * qJD(3), t734, -t1141 * qJD(4), 0, 0, 0, t860 * t1192, t860 * t814, -t1104 * t821 + t734 * t869, -qJD(5) * t711 - t1024 * t967, t1186 * t830 * t967 + qJD(4) * t610, -qJD(4) * t608 + t1107 * t830, -t734, -qJD(3) * t609 + qJD(4) * t171 + qJD(5) * t322, -qJD(3) * t712 + qJD(4) * t172 + qJD(5) * t321 (-qJD(4) * t1451 - t1446) * t678, qJD(4) * t264 + t1142 * t353, t397 * qJD(4) - t1418 * t1449, t395 * qJD(4) - t1418 * t678, -t734, qJD(3) * t396 + qJD(4) * t63 + qJD(5) * t112 + qJD(6) * t132, qJD(3) * t398 + qJD(4) * t64 + qJD(5) * t113 + qJD(6) * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t981, t989, 0, 0, 0, 0, 0, -t1159, t1154, 0, 0, 0, 0, 0, t994, t992, 0, 0, 0, 0, 0, t999 - t1240, t1142 * t513 + t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t963, t990, t814 - t1155, -t1157 - t1192, qJD(1) * t1089, -qJD(4) * t746 + t1199 * t830 + t1179, qJD(4) * t745 + t1199 * t967 + t1180, t1219 - t692 - (-t1200 * t869 - t1108) * t967, -t1429 * t967 + t1183 + t763, t1189 * t830 - t993, t805 - t995, t1408 (t1025 * t875 - t1259) * qJD(4) + t316 * qJD(5) + t1005 (t1025 * t878 + t1268) * qJD(4) + t314 * qJD(5) + t1004, t1235 + (-t1191 - t1202) * t1451 + t1244 (t1451 * t965 - t679 * t966) * qJD(4) + t1003 + t1250, t1142 * t512 - t1191 * t830 - t998, t1192 * t965 - t1000 - t1240, t1405 (-t1061 * t830 - t638 * t965 - t679 * t864) * qJD(4) + t88 * qJD(5) + t119 * qJD(6) + t1016 (t1451 * t864 - t638 * t966 - t754 * t830) * qJD(4) + t89 * qJD(5) + t118 * qJD(6) + t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t908, -t910, t1046 * t702 + t1218, t830 * t996 + t1217, t626, qJD(4) * t316 - qJD(5) * t483 - t1001, qJD(4) * t314 + qJD(5) * t482 + t1002, t1412, t1462, t1488, t1489, t626, qJD(4) * t88 + qJD(5) * t219 + qJD(6) * t92 - t1013 - t497, qJD(4) * t89 - qJD(5) * t220 + qJD(6) * t94 - t1012 + t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1411, t1463, t1488, t1489, t626, qJD(4) * t119 + qJD(5) * t92 - qJD(6) * t214 - t1007 - t497, qJD(4) * t118 + qJD(5) * t94 + qJD(6) * t213 - t1006 + t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t811 * t1113, -t810 * t1113, -t982, -qJD(2) * t241 - t1214, 0, 0, 0, 0, 0, -t1040 + t1158 + t1151, t1039 - t597 - t1152, 0, 0, 0, 0, 0, -qJD(2) * t157 - qJD(4) * t433 - qJD(5) * t425 + t1222, -qJD(2) * t161 + qJD(4) * t428 + qJD(5) * t431 - t1220, 0, 0, 0, 0, 0, -qJD(2) * t81 - qJD(4) * t378 - t1142 * t297 - t1228, -qJD(2) * t85 - qJD(4) * t379 - t1142 * t299 - t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t981, -t989, 0, 0, 0, 0, 0, t1159 + t1192, t814 - t1154, 0, 0, 0, 0, 0, t693 + t805 - t994, -qJD(4) * t702 + t1107 - t992, 0, 0, 0, 0, 0, qJD(4) * t563 + t1241 - t999, qJD(4) * t1449 - t1142 * t511 - t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1481, t983, 0, 0, 0, 0, 0, t962, t986, 0, 0, 0, 0, 0, t988, -t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1055 - t1211, t996 + t1161, 0, 0, 0, 0, 0, t176, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t964, -t991, t1468, t1466, t846, -qJD(2) * t183 - qJD(3) * t1415 + t1224, -qJD(2) * t181 + qJD(3) * t668 - t1225, -qJD(2) * t237 + t1114 * t878 + t356, -qJD(2) * t148 - t1176 - t226, -qJD(2) * t159 + qJD(5) * t1453 - t1221, -qJD(2) * t155 - qJD(5) * t1454 + t1223, -t1407, qJD(2) * t21 + qJD(3) * t433 + qJD(5) * t73 - t1327, qJD(2) * t22 - qJD(3) * t428 + qJD(5) * t71 - t1326, -qJD(2) * t100 + t1213 * t1452 + t1251, -qJD(2) * t46 - t1256 + t1350, -qJD(2) * t83 - t1142 * t298 - t1227, -qJD(2) * t79 - t1142 * t296 - t1229, -t1404, -qJD(2) * t2 + qJD(3) * t378 - qJD(5) * t26 - qJD(6) * t33 - t1349, -qJD(2) * t4 + qJD(3) * t379 - qJD(5) * t25 - qJD(6) * t34 - t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t963, -t990, t1155, t1157, qJD(1) * t1088, -t1047 * t830 - t1179, -t1047 * t967 - t1180, -t735 * t869 - t1219 - t692, t1023 * t967 - t1183 + t763, -qJD(5) * t705 + t993, t693 + t995, -t1408, qJD(5) * t315 - t1194 * t830 - t1005, qJD(3) * t702 + qJD(5) * t313 - t1004, t1202 * t1451 - t1235 + t1244, -t1003 + t1250, -t1142 * t510 + t998, t1000 + t1241, -t1405, -qJD(3) * t563 - qJD(5) * t87 - qJD(6) * t116 - t1016, -qJD(3) * t1449 - qJD(5) * t86 - qJD(6) * t117 - t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1481, -t983, 0, 0, 0, 0, 0, -t962, -t986, 0, 0, 0, 0, 0, -t988, t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1104, t854 * qJD(5), 0, 0, 0, -pkin(4) * t1186, -pkin(4) * t1185, -t966 * t1052, t1142 * t674, 0, 0, 0, qJD(5) * t697 - t818 * t864, qJD(5) * t698 + qJD(6) * t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t923, -t909, -t985 + t1185, t1055 - t1212, -t521, -pkin(10) * t1185 - t932, pkin(10) * t1186 - t933, t1414, t1464, t173, t175, -t521, -t1423 - t942, t1403 - t943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, t1465, t173, t175, -t521, -t1423 - t928, t1403 - t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t924, -t940, -qJD(2) * t243 - qJD(4) * t1453 + t1207 * t580, -qJD(2) * t244 + qJD(4) * t1454 + t1114, t474, qJD(2) * t41 + qJD(3) * t425 - qJD(4) * t73 - t1342, qJD(2) * t42 - qJD(3) * t431 - qJD(4) * t71 - t1343, -t925, -t946, t1474, qJD(6) * t359 + t1475, t474, qJD(2) * t6 + qJD(4) * t26 + qJD(6) * t17 - t1348 + t285, qJD(2) * t5 + qJD(4) * t25 + qJD(6) * t19 - t1347 + t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t908, t910, qJD(4) * t705 - t735 * t875 - t1218, -qJD(4) * t700 - t735 * t878 - t1217, t625, -qJD(3) * t700 - qJD(4) * t315 + t1001, -qJD(4) * t313 - t1194 * t967 - t1002, -t1412, -t1462, t1486, t1487, t625, qJD(4) * t87 + qJD(6) * t91 + t1013 - t485, qJD(4) * t86 + qJD(6) * t93 + t1012 + t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1149 + t1211, -t1196 * t967 - t1161, 0, 0, 0, 0, 0, t204, t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t923, t909, t985, -t1149 + t1212, t521, t932, t933, -t1414, -t1464, t205, t203, t521, t942, t943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1353, -pkin(5) * t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, 0, -t1142 * t1353 + t1011 (-t1065 - t1064) * pkin(5) - t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t926, -t941, t1474, -qJD(5) * t359 + t1475, t474, qJD(2) * t11 + qJD(4) * t33 - qJD(5) * t17 - t1345 + t285, qJD(2) * t12 + qJD(4) * t34 - qJD(5) * t19 - t1346 + t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1411, -t1463, t1486, t1487, t625, qJD(4) * t116 - qJD(5) * t91 + t1007 - t485, qJD(4) * t117 - qJD(5) * t93 + t1006 + t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1413, -t1465, t205, t203, t521, t928, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1166, 0, qJD(5) * t1353 - t1011, pkin(5) * t1065 + t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t47;
