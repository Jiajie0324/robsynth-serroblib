% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR10_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:25:32
% EndTime: 2019-03-09 14:26:20
% DurationCPUTime: 27.32s
% Computational Cost: add. (40977->948), mult. (100424->1285), div. (0->0), fcn. (83334->18), ass. (0->404)
t397 = sin(pkin(12));
t399 = cos(pkin(12));
t404 = sin(qJ(4));
t603 = cos(qJ(4));
t440 = -t404 * t397 + t399 * t603;
t398 = sin(pkin(6));
t408 = cos(qJ(2));
t523 = qJD(1) * t408;
t491 = t398 * t523;
t272 = t440 * t491;
t487 = qJD(4) * t603;
t518 = qJD(4) * t404;
t320 = t397 * t518 - t399 * t487;
t532 = t272 + t320;
t332 = t397 * t603 + t404 * t399;
t551 = t398 * t408;
t420 = t332 * t551;
t529 = -qJD(1) * t420 + t332 * qJD(4);
t405 = sin(qJ(2));
t454 = pkin(2) * t405 - qJ(3) * t408;
t525 = qJD(1) * t398;
t313 = t454 * t525;
t492 = t405 * t525;
t400 = cos(pkin(6));
t600 = pkin(1) * t408;
t507 = t400 * t600;
t314 = -pkin(8) * t492 + qJD(1) * t507;
t227 = t399 * t313 - t314 * t397;
t429 = (-pkin(9) * t399 * t408 + pkin(3) * t405) * t398;
t184 = qJD(1) * t429 + t227;
t228 = t397 * t313 + t399 * t314;
t467 = t397 * t491;
t206 = -pkin(9) * t467 + t228;
t593 = pkin(9) + qJ(3);
t350 = t593 * t397;
t351 = t593 * t399;
t612 = -t603 * t350 - t404 * t351;
t535 = t440 * qJD(3) + qJD(4) * t612 - t404 * t184 - t603 * t206;
t652 = pkin(10) * t492 - t535;
t601 = pkin(1) * t405;
t528 = pkin(8) * t551 + t400 * t601;
t315 = t528 * qJD(1);
t264 = pkin(3) * t467 + t315;
t651 = t529 * pkin(4) + pkin(10) * t532 - t264;
t403 = sin(qJ(5));
t407 = cos(qJ(5));
t229 = t272 * t403 - t407 * t492;
t650 = t320 * t403 + t229;
t524 = qJD(1) * t400;
t374 = qJD(2) + t524;
t291 = t374 * t399 - t397 * t492;
t292 = t374 * t397 + t399 * t492;
t215 = -t603 * t291 + t292 * t404;
t402 = sin(qJ(6));
t549 = t402 * t403;
t602 = cos(qJ(6));
t438 = t602 * t407 - t549;
t608 = qJD(5) + qJD(6);
t485 = t602 * qJD(6);
t633 = t407 * (t602 * qJD(5) + t485);
t645 = -t438 * t215 + t549 * t608 - t633;
t494 = t602 * t403;
t335 = t402 * t407 + t494;
t261 = t608 * t335;
t538 = t335 * t215 + t261;
t357 = -qJD(4) + t491;
t441 = t404 * t291 + t292 * t603;
t178 = t357 * t407 + t403 * t441;
t180 = -t357 * t403 + t407 * t441;
t508 = qJDD(1) * t408;
t369 = t398 * t508;
t511 = qJD(1) * qJD(2);
t483 = t405 * t511;
t463 = t398 * t483;
t308 = qJDD(4) - t369 + t463;
t482 = t408 * t511;
t509 = qJDD(1) * t405;
t433 = t482 + t509;
t421 = t398 * t433;
t510 = qJDD(1) * t400;
t371 = qJDD(2) + t510;
t560 = t371 * t399;
t250 = t397 * t421 - t560;
t561 = t371 * t397;
t251 = t399 * t421 + t561;
t121 = t404 * t250 - t603 * t251 - t291 * t487 + t292 * t518;
t516 = qJD(5) * t407;
t517 = qJD(5) * t403;
t500 = -t403 * t121 - t357 * t517 + t441 * t516;
t444 = t308 * t407 - t500;
t515 = qJD(6) * t402;
t70 = t407 * t121 - t403 * t308 + t357 * t516 + t441 * t517;
t26 = t178 * t485 + t180 * t515 - t402 * t444 + t602 * t70;
t439 = -t402 * t178 + t180 * t602;
t649 = -t26 * t438 - t439 * t538;
t427 = t332 * t516 - t650;
t230 = t272 * t407 + t403 * t492;
t571 = t320 * t407;
t478 = t230 + t571;
t426 = -t332 * t517 - t478;
t122 = qJD(4) * t441 + t603 * t250 + t404 * t251;
t120 = qJDD(5) + t122;
t119 = qJDD(6) + t120;
t630 = qJD(5) + t215;
t208 = qJD(6) + t630;
t648 = t119 * t335 - t208 * t645;
t384 = pkin(3) * t399 + pkin(2);
t249 = -pkin(4) * t440 - pkin(10) * t332 - t384;
t270 = -t404 * t350 + t351 * t603;
t589 = t249 * t516 - t270 * t517 + t651 * t403 - t407 * t652;
t647 = t403 * t652 + t651 * t407;
t575 = t630 * t403;
t646 = t180 * t575;
t273 = qJ(3) * t374 + t315;
t447 = -pkin(2) * t408 - qJ(3) * t405 - pkin(1);
t305 = t447 * t398;
t281 = qJD(1) * t305;
t190 = -t273 * t397 + t399 * t281;
t145 = -pkin(3) * t491 - pkin(9) * t292 + t190;
t191 = t399 * t273 + t397 * t281;
t157 = pkin(9) * t291 + t191;
t80 = t404 * t145 + t157 * t603;
t77 = -t357 * pkin(10) + t80;
t266 = -pkin(2) * t374 + qJD(3) - t314;
t213 = -pkin(3) * t291 + t266;
t95 = pkin(4) * t215 - pkin(10) * t441 + t213;
t45 = t403 * t95 + t407 * t77;
t506 = pkin(1) * qJD(2) * t400;
t469 = qJD(1) * t506;
t504 = pkin(1) * t510;
t499 = -pkin(8) * t369 - t405 * t504 - t408 * t469;
t240 = -pkin(8) * t463 - t499;
t199 = qJ(3) * t371 + qJD(3) * t374 + t240;
t417 = qJD(2) * t454 - qJD(3) * t405;
t209 = (qJD(1) * t417 + qJDD(1) * t447) * t398;
t131 = -t199 * t397 + t399 * t209;
t432 = t483 - t508;
t87 = pkin(3) * t398 * t432 - pkin(9) * t251 + t131;
t132 = t399 * t199 + t397 * t209;
t97 = -pkin(9) * t250 + t132;
t33 = t145 * t487 - t157 * t518 + t404 * t87 + t603 * t97;
t31 = pkin(10) * t308 + t33;
t553 = t398 * t405;
t375 = pkin(8) * t553;
t468 = t398 * pkin(8) * t482 + qJDD(1) * t375 + t405 * t469 - t408 * t504;
t607 = -pkin(2) * t371 + qJDD(3);
t220 = t468 + t607;
t598 = pkin(3) * t250;
t155 = t220 + t598;
t49 = pkin(4) * t122 + pkin(10) * t121 + t155;
t9 = -qJD(5) * t45 - t403 * t31 + t407 * t49;
t644 = t45 * t630 + t9;
t44 = -t403 * t77 + t407 * t95;
t442 = -t407 * t31 - t403 * t49 - t95 * t516 + t517 * t77;
t631 = -t44 * t630 - t442;
t104 = t602 * t178 + t180 * t402;
t27 = qJD(6) * t439 - t402 * t70 - t602 * t444;
t643 = t104 * t645 - t335 * t27;
t642 = t119 * t438 - t208 * t538;
t641 = t215 ^ 2;
t258 = t407 * t270;
t640 = pkin(11) * t230 + pkin(11) * t571 + (-t258 + (pkin(11) * t332 - t249) * t403) * qJD(5) + t647 + t529 * pkin(5);
t639 = t427 * pkin(11) - t589;
t409 = -pkin(11) - pkin(10);
t498 = qJD(5) * t409;
t574 = t215 * t403;
t141 = pkin(4) * t441 + pkin(10) * t215;
t79 = t145 * t603 - t404 * t157;
t58 = t403 * t141 + t407 * t79;
t638 = -pkin(11) * t574 + t403 * t498 - t58;
t57 = t407 * t141 - t403 * t79;
t637 = -pkin(5) * t441 - t57 + (-pkin(11) * t215 + t498) * t407;
t578 = t104 * t439;
t636 = t178 * t215;
t635 = t215 * t357;
t534 = -qJD(3) * t332 - qJD(4) * t270 - t184 * t603 + t404 * t206;
t629 = -t104 ^ 2 + t439 ^ 2;
t628 = t104 * t208 - t26;
t38 = -pkin(11) * t180 + t44;
t35 = pkin(5) * t630 + t38;
t39 = -pkin(11) * t178 + t45;
t6 = pkin(5) * t120 + pkin(11) * t70 + t9;
t7 = pkin(11) * t444 - t442;
t1 = t35 * t485 - t39 * t515 + t402 * t6 + t602 * t7;
t604 = cos(qJ(1));
t495 = t604 * t408;
t406 = sin(qJ(1));
t545 = t405 * t406;
t325 = -t400 * t545 + t495;
t393 = pkin(12) + qJ(4);
t387 = sin(t393);
t388 = cos(t393);
t552 = t398 * t406;
t257 = t325 * t388 + t387 * t552;
t496 = t604 * t405;
t544 = t406 * t408;
t324 = t400 * t544 + t496;
t396 = qJ(5) + qJ(6);
t389 = sin(t396);
t390 = cos(t396);
t189 = t257 * t390 + t324 * t389;
t302 = t387 * t400 + t388 * t553;
t76 = t357 * pkin(4) - t79;
t62 = t178 * pkin(5) + t76;
t323 = t400 * t496 + t544;
t497 = t398 * t604;
t253 = t323 * t388 - t387 * t497;
t322 = -t400 * t495 + t545;
t625 = t253 * t390 + t322 * t389;
t627 = t62 * t104 + g(1) * t189 + g(2) * t625 - g(3) * (-t302 * t390 + t389 * t551) - t1;
t626 = t253 * t389 - t322 * t390;
t624 = t253 * t403 - t322 * t407;
t568 = t322 * t403;
t623 = t253 * t407 + t568;
t621 = t441 ^ 2;
t392 = t398 ^ 2;
t620 = 0.2e1 * t392;
t619 = pkin(3) * t397;
t318 = t397 * t553 - t400 * t399;
t319 = t397 * t400 + t399 * t553;
t231 = t318 * t603 + t319 * t404;
t232 = -t404 * t318 + t319 * t603;
t307 = t375 + (-pkin(2) - t600) * t400;
t245 = pkin(3) * t318 + t307;
t130 = pkin(4) * t231 - pkin(10) * t232 + t245;
t304 = qJ(3) * t400 + t528;
t221 = -t304 * t397 + t399 * t305;
t165 = -pkin(3) * t551 - pkin(9) * t319 + t221;
t222 = t399 * t304 + t397 * t305;
t183 = -pkin(9) * t318 + t222;
t102 = t404 * t165 + t603 * t183;
t99 = -pkin(10) * t551 + t102;
t60 = t403 * t130 + t407 * t99;
t617 = t104 * t441;
t616 = t178 * t441;
t615 = t180 * t441;
t614 = t357 * t441;
t458 = g(1) * t324 + g(2) * t322;
t611 = g(3) * t551 - t458;
t419 = t611 * t387;
t613 = t439 * t441;
t533 = pkin(4) * t492 - t534;
t172 = t403 * t249 + t258;
t204 = -t257 * t403 + t324 * t407;
t543 = t407 * t408;
t501 = t398 * t543;
t610 = g(2) * t624 - g(3) * (-t302 * t403 - t501) - g(1) * t204;
t317 = t528 * qJD(2);
t188 = -t257 * t389 + t324 * t390;
t505 = t602 * t39;
t12 = t402 * t35 + t505;
t2 = -qJD(6) * t12 - t402 * t7 + t602 * t6;
t606 = -t62 * t439 - g(1) * t188 + g(2) * t626 - g(3) * (-t302 * t389 - t390 * t551) + t2;
t605 = t208 * t439 - t27;
t336 = t384 * t551;
t596 = g(3) * t336;
t595 = g(3) * t398;
t594 = t308 * pkin(4);
t171 = t407 * t249 - t270 * t403;
t562 = t332 * t407;
t142 = -pkin(5) * t440 - pkin(11) * t562 + t171;
t563 = t332 * t403;
t150 = -pkin(11) * t563 + t172;
t74 = t142 * t602 - t402 * t150;
t592 = qJD(6) * t74 + t402 * t640 - t602 * t639;
t75 = t402 * t142 + t150 * t602;
t591 = -qJD(6) * t75 + t402 * t639 + t602 * t640;
t588 = -qJD(5) * t172 + t647;
t586 = t402 * t39;
t583 = t70 * t403;
t582 = pkin(5) * t427 + t533;
t358 = t409 * t403;
t359 = t409 * t407;
t277 = t358 * t602 + t402 * t359;
t581 = qJD(6) * t277 + t402 * t637 + t602 * t638;
t278 = t402 * t358 - t359 * t602;
t580 = -qJD(6) * t278 - t402 * t638 + t602 * t637;
t65 = t403 * t444;
t579 = -t178 * t516 + t65;
t576 = t180 * t178;
t573 = t441 * t215;
t566 = t323 * t403;
t565 = t324 * t403;
t564 = t325 * t403;
t559 = t388 * t389;
t558 = t388 * t390;
t557 = t388 * t403;
t556 = t388 * t407;
t555 = t388 * t408;
t554 = t392 * qJD(1) ^ 2;
t550 = t593 * t405;
t548 = t403 * t120;
t547 = t403 * t408;
t116 = t407 * t120;
t541 = -t402 * t229 + t602 * t230 + t261 * t332 + t320 * t438;
t540 = -t602 * t229 - t320 * t494 + t332 * t633 + t426 * t402 - t515 * t563;
t276 = t417 * t398;
t520 = qJD(2) * t405;
t490 = t398 * t520;
t316 = -pkin(8) * t490 + t408 * t506;
t285 = qJD(3) * t400 + t316;
t201 = t397 * t276 + t399 * t285;
t531 = -t322 * t384 + t323 * t593;
t530 = -t324 * t384 + t325 * t593;
t527 = t604 * pkin(1) + pkin(8) * t552;
t394 = t405 ^ 2;
t395 = t408 ^ 2;
t526 = t394 - t395;
t522 = qJD(2) * t397;
t521 = qJD(2) * t399;
t519 = qJD(2) * t408;
t514 = qJD(2) - t374;
t512 = qJ(3) * qJDD(1);
t503 = t395 * t554;
t502 = t408 * t554;
t361 = t398 * t547;
t489 = t398 * t519;
t484 = pkin(1) * t620;
t481 = -pkin(1) * t406 + pkin(8) * t497;
t59 = t407 * t130 - t403 * t99;
t200 = t399 * t276 - t285 * t397;
t476 = -t323 * t387 - t388 * t497;
t475 = t630 ^ 2;
t473 = t630 * t407;
t472 = t145 * t518 + t157 * t487 + t404 * t97 - t603 * t87;
t471 = t374 + t524;
t470 = t371 + t510;
t466 = t397 * t489;
t465 = t399 * t489;
t464 = t392 * t395 * t511;
t462 = t405 * t482;
t461 = -t80 + (t517 + t574) * pkin(5);
t460 = pkin(4) * t388 + pkin(10) * t387;
t256 = t325 * t387 - t388 * t552;
t459 = g(1) * t476 + g(2) * t256;
t457 = g(1) * t322 - g(2) * t324;
t456 = g(1) * t325 + g(2) * t323;
t455 = g(1) * t323 - g(2) * t325;
t101 = t165 * t603 - t404 * t183;
t453 = t403 * t45 + t407 * t44;
t452 = t324 * t593 + t325 * t384 + t552 * t619 + t527;
t451 = t291 * t399 - t292 * t397;
t386 = pkin(5) * t407 + pkin(4);
t450 = t386 * t388 - t387 * t409;
t449 = qJD(1) * (-t291 + t521);
t448 = qJD(1) * (-t292 + t522);
t446 = -t220 + t458;
t443 = g(1) * t604 + g(2) * t406;
t98 = pkin(4) * t551 - t101;
t211 = t232 * t407 - t361;
t43 = pkin(5) * t231 - pkin(11) * t211 + t59;
t210 = t232 * t403 + t501;
t50 = -pkin(11) * t210 + t60;
t21 = -t402 * t50 + t43 * t602;
t22 = t402 * t43 + t50 * t602;
t32 = t472 - t594;
t138 = -t402 * t210 + t211 * t602;
t161 = qJD(2) * t429 + t200;
t181 = -pkin(9) * t466 + t201;
t55 = t404 * t161 + t165 * t487 + t603 * t181 - t183 * t518;
t52 = pkin(10) * t490 + t55;
t174 = t318 * t487 - t603 * t465 + (qJD(4) * t319 + t466) * t404;
t175 = qJD(2) * t420 + qJD(4) * t232;
t265 = pkin(3) * t466 + t317;
t88 = pkin(4) * t175 + pkin(10) * t174 + t265;
t16 = t130 * t516 + t403 * t88 + t407 * t52 - t517 * t99;
t436 = -t322 * t593 - t323 * t384 + t497 * t619 + t481;
t435 = -pkin(10) * t120 + t630 * t76;
t56 = t161 * t603 - t165 * t518 - t404 * t181 - t183 * t487;
t301 = -t387 * t553 + t388 * t400;
t431 = g(1) * t256 - g(2) * t476 - g(3) * t301;
t430 = -g(1) * t257 - g(2) * t253 - g(3) * t302;
t428 = t444 * t407;
t425 = -t32 + t431;
t423 = -g(3) * t553 - t456;
t422 = -qJ(3) * t520 + (qJD(3) - t266) * t408;
t418 = -t611 - t468;
t17 = -qJD(5) * t60 - t403 * t52 + t407 * t88;
t53 = -pkin(4) * t490 - t56;
t416 = pkin(10) * qJD(5) * t630 - t425;
t414 = -t418 + t607;
t345 = t405 * t502;
t326 = -t375 + t507;
t303 = (qJDD(1) * t395 - 0.2e1 * t462) * t392;
t237 = t438 * t332;
t236 = t335 * t332;
t225 = pkin(5) * t563 - t612;
t205 = t257 * t407 + t565;
t137 = t210 * t602 + t211 * t402;
t112 = -qJD(5) * t361 - t174 * t403 + t232 * t516 - t407 * t490;
t111 = qJD(5) * t210 + t407 * t174 - t403 * t490;
t72 = t210 * pkin(5) + t98;
t42 = qJD(6) * t138 - t402 * t111 + t112 * t602;
t41 = t111 * t602 + t402 * t112 + t210 * t485 + t211 * t515;
t36 = t112 * pkin(5) + t53;
t18 = -pkin(5) * t444 + t32;
t15 = t38 * t602 - t586;
t14 = -t402 * t38 - t505;
t13 = -pkin(11) * t112 + t16;
t11 = t35 * t602 - t586;
t10 = pkin(5) * t175 + pkin(11) * t111 + t17;
t4 = -qJD(6) * t22 + t10 * t602 - t402 * t13;
t3 = qJD(6) * t21 + t402 * t10 + t13 * t602;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t406 - g(2) * t604, t443, 0, 0 (qJDD(1) * t394 + 0.2e1 * t462) * t392 (t405 * t508 - t511 * t526) * t620 (t405 * t470 + t471 * t519) * t398, t303 (t408 * t470 - t471 * t520) * t398, t371 * t400, -t317 * t374 + t326 * t371 - t400 * t468 - t432 * t484 + t455, -t240 * t400 - t316 * t374 - t371 * t528 - t433 * t484 - t457 ((-qJD(2) * t314 + qJDD(1) * t528 + t240 + (-qJD(2) * t326 + t316) * qJD(1)) * t408 + (-qJD(2) * t315 - qJDD(1) * t326 + t468) * t405 - t443) * t398, t392 * qJDD(1) * pkin(1) ^ 2 - g(1) * t481 - g(2) * t527 + t240 * t528 - t314 * t317 + t315 * t316 - t326 * t468, t251 * t319 + t292 * t465, -t250 * t319 - t251 * t318 + t451 * t489, -t399 * t464 + ((-qJDD(1) * t319 - t251) * t408 + (qJD(1) * t319 + t292) * t520) * t398, t250 * t318 - t291 * t466, t397 * t464 + ((qJDD(1) * t318 + t250) * t408 + (-qJD(1) * t318 + t291) * t520) * t398, t303, t220 * t318 + t307 * t250 - t317 * t291 + t455 * t399 + (-t443 * t397 + (qJD(1) * t221 + t190) * t520 + (-qJD(1) * t200 - qJDD(1) * t221 + t266 * t522 - t131) * t408) * t398, t220 * t319 + t307 * t251 + t317 * t292 - t455 * t397 + (-t443 * t399 + (-qJD(1) * t222 - t191) * t520 + (qJD(1) * t201 + qJDD(1) * t222 + t266 * t521 + t132) * t408) * t398, -t131 * t319 - t132 * t318 - t200 * t292 + t201 * t291 - t221 * t251 - t222 * t250 + (-t190 * t399 - t191 * t397) * t489 + t457, t132 * t222 + t191 * t201 + t131 * t221 + t190 * t200 + t220 * t307 + t266 * t317 - g(1) * (-pkin(2) * t323 - qJ(3) * t322 + t481) - g(2) * (pkin(2) * t325 + qJ(3) * t324 + t527) -t121 * t232 - t174 * t441, t121 * t231 - t122 * t232 + t174 * t215 - t175 * t441, t174 * t357 + t232 * t308 + (t121 * t408 + t441 * t520) * t398, t122 * t231 + t175 * t215, t175 * t357 - t231 * t308 + (t122 * t408 - t215 * t520) * t398 (-t308 * t408 - t357 * t520) * t398, g(1) * t253 - g(2) * t257 + t101 * t308 + t122 * t245 + t155 * t231 + t175 * t213 + t215 * t265 - t357 * t56 + (t408 * t472 + t520 * t79) * t398, -t102 * t308 - t121 * t245 + t155 * t232 - t174 * t213 + t441 * t265 + t357 * t55 + (t33 * t408 - t520 * t80) * t398 + t459, t101 * t121 - t102 * t122 + t174 * t79 - t175 * t80 - t215 * t55 - t231 * t33 + t232 * t472 - t441 * t56 + t457, -g(1) * t436 - g(2) * t452 - t101 * t472 + t33 * t102 + t155 * t245 + t213 * t265 + t80 * t55 + t79 * t56, -t111 * t180 - t211 * t70, t111 * t178 - t180 * t112 + t70 * t210 + t211 * t444, -t111 * t630 + t120 * t211 + t175 * t180 - t231 * t70, t178 * t112 - t210 * t444, -t112 * t630 - t210 * t120 - t178 * t175 + t231 * t444, t120 * t231 + t175 * t630, g(1) * t623 - g(2) * t205 + t76 * t112 + t59 * t120 + t17 * t630 + t44 * t175 + t53 * t178 + t32 * t210 + t9 * t231 - t98 * t444, -g(1) * t624 - g(2) * t204 - t76 * t111 - t60 * t120 - t16 * t630 - t45 * t175 + t53 * t180 + t32 * t211 + t442 * t231 - t98 * t70, t44 * t111 - t45 * t112 - t16 * t178 - t17 * t180 + t210 * t442 - t9 * t211 + t444 * t60 + t59 * t70 - t459, -t442 * t60 + t45 * t16 + t9 * t59 + t44 * t17 + t32 * t98 + t76 * t53 - g(1) * (-pkin(4) * t253 + pkin(10) * t476 + t436) - g(2) * (pkin(4) * t257 + pkin(10) * t256 + t452) -t138 * t26 - t41 * t439, t104 * t41 + t137 * t26 - t138 * t27 - t42 * t439, t119 * t138 + t175 * t439 - t208 * t41 - t231 * t26, t104 * t42 + t137 * t27, -t104 * t175 - t119 * t137 - t208 * t42 - t231 * t27, t119 * t231 + t175 * t208, g(1) * t625 - g(2) * t189 + t36 * t104 + t11 * t175 + t21 * t119 + t18 * t137 + t2 * t231 + t4 * t208 + t72 * t27 + t62 * t42, -g(1) * t626 - g(2) * t188 - t1 * t231 - t22 * t119 - t12 * t175 + t18 * t138 - t3 * t208 - t72 * t26 + t36 * t439 - t62 * t41, -t1 * t137 - t104 * t3 + t11 * t41 - t12 * t42 - t138 * t2 + t21 * t26 - t22 * t27 - t4 * t439 - t459, t1 * t22 + t12 * t3 + t2 * t21 + t11 * t4 + t18 * t72 + t62 * t36 - g(1) * (-pkin(5) * t568 - t253 * t386 - t409 * t476 + t436) - g(2) * (pkin(5) * t565 - t256 * t409 + t257 * t386 + t452); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t526 * t554 (t514 * t523 + t509) * t398, t345, -t492 * t514 + t369, t371, t315 * t374 + t554 * t601 + t418, pkin(1) * t502 + t314 * t374 + (pkin(8) * t511 + g(3)) * t553 + t456 + t499, 0, 0, -t292 * t399 * t491 + t251 * t397, -t250 * t397 + t251 * t399 - t451 * t491, t399 * t503 + (-t397 * t508 + t405 * t448) * t398, -t250 * t399 + t291 * t467, -t397 * t503 + (-t399 * t508 + t405 * t449) * t398, t345, -pkin(2) * t250 + t291 * t315 + t446 * t399 + ((-g(3) * t399 + t397 * t512) * t408 + (-t190 * t405 + t227 * t408 + t397 * t422) * qJD(1)) * t398, -pkin(2) * t251 - t292 * t315 - t446 * t397 + ((g(3) * t397 + t399 * t512) * t408 + (t191 * t405 - t228 * t408 + t399 * t422) * qJD(1)) * t398, t227 * t292 - t228 * t291 + (-qJ(3) * t250 + qJD(3) * t291 + t190 * t491 + t132) * t399 + (qJ(3) * t251 + qJD(3) * t292 + t191 * t491 - t131) * t397 + t423, -t190 * t227 - t191 * t228 - t266 * t315 + (-t190 * t397 + t191 * t399) * qJD(3) + (-t220 - t611) * pkin(2) + (-t131 * t397 + t132 * t399 + t423) * qJ(3), -t121 * t332 - t441 * t532, -t121 * t440 - t122 * t332 + t215 * t532 - t441 * t529, t308 * t332 + t357 * t532 - t441 * t492, -t122 * t440 + t215 * t529, t215 * t492 + t308 * t440 + t357 * t529, t357 * t492, -t122 * t384 - t155 * t440 + t213 * t529 - t215 * t264 + t308 * t612 - t357 * t534 - t388 * t611 - t492 * t79, t121 * t384 + t155 * t332 - t213 * t532 - t264 * t441 - t270 * t308 + t357 * t535 + t492 * t80 + t419, t121 * t612 - t122 * t270 - t215 * t535 + t33 * t440 + t332 * t472 - t441 * t534 - t529 * t80 + t532 * t79 + t423, t33 * t270 - t472 * t612 - t155 * t384 - t213 * t264 - g(1) * t530 - g(2) * t531 - g(3) * (t398 * t550 + t336) + t535 * t80 + t534 * t79, t180 * t426 - t562 * t70, t650 * t180 + t478 * t178 + (t428 + t583 + (t178 * t403 - t180 * t407) * qJD(5)) * t332, t116 * t332 + t180 * t529 + t426 * t630 + t440 * t70, t178 * t427 - t332 * t65, -t178 * t529 - t332 * t548 - t427 * t630 - t440 * t444, -t120 * t440 + t529 * t630, t171 * t120 - t9 * t440 + t612 * t444 + t32 * t563 - g(1) * (-t324 * t556 + t564) - g(2) * (-t322 * t556 + t566) + t529 * t44 - (t388 * t543 + t403 * t405) * t595 + t588 * t630 + t533 * t178 + t427 * t76, -t172 * t120 - t442 * t440 + t612 * t70 + t32 * t562 - g(1) * (t324 * t557 + t325 * t407) - g(2) * (t322 * t557 + t323 * t407) - t529 * t45 - (-t388 * t547 + t405 * t407) * t595 - t589 * t630 + t533 * t180 + t426 * t76, t172 * t444 + t171 * t70 + t45 * t229 + t44 * t230 + t453 * t320 - t588 * t180 - t589 * t178 - t419 + (t442 * t403 - t9 * t407 + (t403 * t44 - t407 * t45) * qJD(5)) * t332, -t442 * t172 + t9 * t171 - t32 * t612 - g(1) * (-t324 * t460 + t530) - g(2) * (-t322 * t460 + t531) - t596 + t533 * t76 + t589 * t45 + t588 * t44 - (t408 * t460 + t550) * t595, -t237 * t26 - t439 * t541, t104 * t541 + t236 * t26 - t237 * t27 - t439 * t540, t119 * t237 - t208 * t541 + t26 * t440 + t439 * t529, t104 * t540 + t236 * t27, -t104 * t529 - t119 * t236 - t208 * t540 + t27 * t440, -t119 * t440 + t208 * t529, t74 * t119 - t2 * t440 + t225 * t27 + t18 * t236 - g(1) * (-t324 * t558 + t325 * t389) - g(2) * (-t322 * t558 + t323 * t389) + t540 * t62 - (t389 * t405 + t390 * t555) * t595 + t591 * t208 + t529 * t11 + t582 * t104, -t75 * t119 + t1 * t440 - t225 * t26 + t18 * t237 - g(1) * (t324 * t559 + t325 * t390) - g(2) * (t322 * t559 + t323 * t390) - t541 * t62 - (-t389 * t555 + t390 * t405) * t595 - t592 * t208 - t529 * t12 + t582 * t439, -t1 * t236 - t104 * t592 + t11 * t541 - t12 * t540 - t2 * t237 + t26 * t74 - t27 * t75 - t439 * t591 - t419, t1 * t75 + t2 * t74 + t18 * t225 - g(1) * (pkin(5) * t564 - t324 * t450 + t530) - g(2) * (pkin(5) * t566 - t322 * t450 + t531) - t596 + t582 * t62 + t592 * t12 + t591 * t11 - (t450 * t408 + (pkin(5) * t403 + t593) * t405) * t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t560 + (t397 * t509 + t408 * t448) * t398, t561 + (t399 * t509 + t408 * t449) * t398, -t291 ^ 2 - t292 ^ 2, t190 * t292 - t191 * t291 + t414, 0, 0, 0, 0, 0, 0, t122 - t614, -t121 + t635, -t621 - t641, t215 * t80 + t441 * t79 + t414 + t598, 0, 0, 0, 0, 0, 0, -t403 * t475 + t116 - t616, -t407 * t475 - t548 - t615 (t70 - t636) * t407 + t646 + t579, t403 * t631 + t407 * t644 - t441 * t76 + t611, 0, 0, 0, 0, 0, 0, -t617 + t642, -t613 - t648, t643 - t649, t1 * t335 - t11 * t538 - t12 * t645 + t2 * t438 - t441 * t62 + t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t573, t621 - t641, -t121 - t635, -t573, -t122 - t614, t308, -t213 * t441 - t357 * t80 + t431 - t472, t213 * t215 - t357 * t79 - t33 - t430, 0, 0, t180 * t473 - t583 (-t70 - t636) * t407 - t646 + t579, t473 * t630 + t548 - t615, t178 * t575 + t428, -t575 * t630 + t116 + t616, -t630 * t441, -pkin(4) * t500 - t57 * t630 - t44 * t441 - t80 * t178 + t435 * t403 + (-t416 + t594) * t407, pkin(4) * t70 - t180 * t80 + t403 * t416 + t407 * t435 + t441 * t45 + t58 * t630, t58 * t178 + t57 * t180 + ((qJD(5) * t180 + t444) * pkin(10) + t631) * t407 + ((qJD(5) * t178 - t70) * pkin(10) - t644) * t403 + t430, -t44 * t57 - t45 * t58 - t76 * t80 + t425 * pkin(4) + (-qJD(5) * t453 - t9 * t403 - t407 * t442 + t430) * pkin(10), -t26 * t335 - t439 * t645, t643 + t649, -t613 + t648, t104 * t538 - t27 * t438, t617 + t642, -t208 * t441, t104 * t461 - t11 * t441 + t119 * t277 - t18 * t438 + t208 * t580 - t27 * t386 + t390 * t431 + t538 * t62, -t119 * t278 + t12 * t441 + t18 * t335 - t208 * t581 + t26 * t386 - t389 * t431 + t439 * t461 - t62 * t645, t1 * t438 - t104 * t581 + t11 * t645 - t12 * t538 - t2 * t335 + t26 * t277 - t27 * t278 - t439 * t580 + t430, t1 * t278 + t2 * t277 - t18 * t386 - g(1) * (-t256 * t386 - t257 * t409) - g(2) * (-t253 * t409 + t386 * t476) - g(3) * (t301 * t386 - t302 * t409) + t461 * t62 + t581 * t12 + t580 * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t576, -t178 ^ 2 + t180 ^ 2, t178 * t630 - t70, -t576, t180 * t630 + t444, t120, -t76 * t180 + t610 + t644, t76 * t178 + g(1) * t205 + g(2) * t623 - g(3) * (-t302 * t407 + t361) - t631, 0, 0, t578, t629, t628, -t578, t605, t119, -t14 * t208 + (-t104 * t180 + t119 * t602 - t208 * t515) * pkin(5) + t606, t15 * t208 + (-t119 * t402 - t180 * t439 - t208 * t485) * pkin(5) + t627, t12 * t439 + t15 * t104 - t11 * t104 + t14 * t439 + (t602 * t26 - t27 * t402 + (-t104 * t602 + t402 * t439) * qJD(6)) * pkin(5), -t11 * t14 - t12 * t15 + (t1 * t402 + t2 * t602 - t62 * t180 + (-t11 * t402 + t12 * t602) * qJD(6) + t610) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, t629, t628, -t578, t605, t119, t12 * t208 + t606, t11 * t208 + t627, 0, 0;];
tau_reg  = t5;
