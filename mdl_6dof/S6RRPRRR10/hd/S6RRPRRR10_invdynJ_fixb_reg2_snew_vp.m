% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 23:51
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR10_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 23:46:33
% EndTime: 2019-05-06 23:47:22
% DurationCPUTime: 26.07s
% Computational Cost: add. (242999->777), mult. (549968->1168), div. (0->0), fcn. (454460->14), ass. (0->488)
t412 = sin(qJ(6));
t408 = sin(pkin(12));
t410 = cos(pkin(12));
t411 = cos(pkin(6));
t464 = qJD(1) * t411 + qJD(2);
t415 = sin(qJ(2));
t409 = sin(pkin(6));
t489 = qJD(1) * t409;
t472 = t415 * t489;
t381 = -t408 * t472 + t410 * t464;
t382 = t408 * t464 + t410 * t472;
t414 = sin(qJ(4));
t418 = cos(qJ(4));
t358 = t381 * t414 + t382 * t418;
t419 = cos(qJ(2));
t488 = qJD(1) * t419;
t471 = t409 * t488;
t398 = -qJD(4) + t471;
t413 = sin(qJ(5));
t417 = cos(qJ(5));
t332 = t358 * t413 + t417 * t398;
t333 = t358 * t417 - t398 * t413;
t416 = cos(qJ(6));
t293 = t416 * t332 + t333 * t412;
t295 = -t332 * t412 + t333 * t416;
t249 = t295 * t293;
t481 = qJD(1) * qJD(2);
t469 = t419 * t481;
t480 = qJDD(1) * t409;
t386 = t409 * t469 + t415 * t480;
t462 = qJDD(1) * t411 + qJDD(2);
t362 = t410 * t386 + t408 * t462;
t465 = t408 * t386 - t410 * t462;
t466 = t362 * t414 + t418 * t465;
t305 = -qJD(4) * t358 - t466;
t304 = qJDD(5) - t305;
t301 = qJDD(6) + t304;
t547 = -t249 + t301;
t556 = t412 * t547;
t297 = t333 * t332;
t545 = -t297 + t304;
t555 = t413 * t545;
t554 = t416 * t547;
t553 = t417 * t545;
t446 = -qJDD(1) * t419 + t415 * t481;
t548 = t446 * t409;
t432 = qJDD(4) + t548;
t460 = t464 ^ 2;
t405 = t409 ^ 2;
t538 = qJD(1) ^ 2;
t486 = t405 * t538;
t501 = t381 * t382;
t430 = t548 + t501;
t552 = t408 * t430;
t551 = t410 * t430;
t356 = -t418 * t381 + t382 * t414;
t502 = t358 * t356;
t429 = t432 - t502;
t550 = t414 * t429;
t492 = t415 * t405;
t549 = t418 * t429;
t306 = -qJD(4) * t356 + t362 * t418 - t414 * t465;
t425 = -t417 * t306 - t413 * t432;
t265 = -t332 * qJD(5) - t425;
t424 = -t413 * t306 + t417 * t432;
t423 = t333 * qJD(5) - t424;
t191 = -t293 * qJD(6) + t416 * t265 - t412 * t423;
t353 = qJD(5) + t356;
t348 = qJD(6) + t353;
t272 = t348 * t293;
t546 = -t272 + t191;
t345 = t356 * t398;
t286 = t306 + t345;
t315 = t353 * t332;
t242 = t315 + t265;
t370 = t381 * t471;
t341 = -t370 - t362;
t371 = t382 * t471;
t544 = t371 + t465;
t543 = -t460 * pkin(2) + t462 * qJ(3);
t535 = sin(qJ(1));
t536 = cos(qJ(1));
t445 = g(1) * t536 + g(2) * t535;
t431 = pkin(8) * t480 - t445;
t527 = t538 * pkin(1);
t428 = t431 - t527;
t444 = g(1) * t535 - g(2) * t536;
t436 = qJDD(1) * pkin(1) + t444;
t529 = t409 * pkin(8);
t427 = t529 * t538 + t436;
t426 = t411 * t427;
t496 = t409 * t419;
t461 = g(3) * t496 - t419 * t426;
t349 = t415 * t428 + t461;
t497 = t409 * t415;
t404 = g(3) * t497;
t350 = t415 * t426 + t419 * t428 - t404;
t542 = t415 * t349 + t419 * t350;
t468 = t265 * t412 + t416 * t423;
t159 = (qJD(6) - t348) * t295 + t468;
t238 = (qJD(5) - t353) * t333 - t424;
t284 = (qJD(4) + t398) * t358 + t466;
t291 = t293 ^ 2;
t292 = t295 ^ 2;
t540 = t332 ^ 2;
t331 = t333 ^ 2;
t347 = t348 ^ 2;
t351 = t353 ^ 2;
t354 = t356 ^ 2;
t355 = t358 ^ 2;
t379 = t381 ^ 2;
t380 = t382 ^ 2;
t539 = t398 ^ 2;
t533 = pkin(2) * t419;
t458 = -qJ(3) * t415 - t533;
t449 = t419 * t458;
t421 = t449 * t486 + t350 + t543;
t524 = qJ(3) * t419;
t534 = pkin(2) * t415;
t448 = (-t524 + 0.2e1 * t534) * qJD(2);
t528 = t411 * g(3);
t456 = -t386 * qJ(3) - t528;
t457 = -t524 + t534;
t474 = -pkin(1) - t533;
t422 = (t474 * qJDD(1) + ((t411 * t457 - t529) * qJD(1) + t448) * qJD(1) - t444) * t409 + t456;
t263 = 0.2e1 * qJD(3) * t381 + t408 * t422 + t410 * t421;
t363 = -pkin(3) * t471 - t382 * pkin(9);
t246 = -t379 * pkin(3) - pkin(9) * t465 + t363 * t471 + t263;
t487 = qJD(3) * t382;
t420 = pkin(3) * t430 + pkin(9) * t341 - t408 * t421 + t410 * t422 - 0.2e1 * t487;
t180 = t418 * t246 + t414 * t420;
t317 = pkin(4) * t356 - pkin(10) * t358;
t145 = -pkin(4) * t539 + pkin(10) * t432 - t356 * t317 + t180;
t325 = t415 * t431 - t460 * qJ(3) - t462 * pkin(2) + qJDD(3) + (-t415 * pkin(1) + t458 * t492) * t538 + t461;
t266 = pkin(3) * t465 - t379 * pkin(9) + t382 * t363 + t325;
t194 = -t286 * pkin(10) + (-t358 * t398 - t305) * pkin(4) + t266;
t124 = t145 * t413 - t417 * t194;
t85 = pkin(5) * t545 - pkin(11) * t242 - t124;
t125 = t417 * t145 + t413 * t194;
t307 = pkin(5) * t353 - pkin(11) * t333;
t91 = -pkin(5) * t540 - pkin(11) * t423 - t353 * t307 + t125;
t58 = t412 * t91 - t416 * t85;
t59 = t412 * t85 + t416 * t91;
t31 = t412 * t59 - t416 * t58;
t537 = pkin(5) * t31;
t532 = pkin(4) * t414;
t162 = t272 + t191;
t115 = -t159 * t412 - t162 * t416;
t531 = pkin(5) * t115;
t530 = pkin(8) * t408;
t526 = t31 * t413;
t525 = t31 * t417;
t179 = t246 * t414 - t418 * t420;
t126 = -t179 * t418 + t180 * t414;
t523 = t126 * t408;
t522 = t126 * t410;
t144 = -t432 * pkin(4) - t539 * pkin(10) + t317 * t358 + t179;
t128 = pkin(5) * t423 - pkin(11) * t540 + t307 * t333 + t144;
t521 = t128 * t412;
t520 = t128 * t416;
t519 = t144 * t413;
t518 = t144 * t417;
t212 = t249 + t301;
t517 = t212 * t412;
t516 = t212 * t416;
t253 = t297 + t304;
t515 = t253 * t413;
t514 = t253 * t417;
t513 = t266 * t414;
t512 = t266 * t418;
t312 = -t502 - t432;
t511 = t312 * t414;
t510 = t312 * t418;
t509 = t325 * t410;
t342 = -t548 + t501;
t508 = t342 * t408;
t507 = t342 * t410;
t506 = t348 * t412;
t505 = t348 * t416;
t504 = t353 * t413;
t503 = t353 * t417;
t500 = t398 * t414;
t499 = t398 * t418;
t498 = t408 * t325;
t495 = t411 * t415;
t397 = t419 * t415 * t486;
t385 = t397 + t462;
t493 = t415 * t385;
t384 = -t397 + t462;
t490 = t419 * t384;
t483 = qJD(5) + t353;
t479 = t414 * t249;
t478 = t418 * t249;
t477 = t414 * t297;
t476 = t418 * t297;
t475 = t419 * t502;
t473 = -pkin(4) * t418 - pkin(3);
t470 = t415 ^ 2 * t486;
t32 = t412 * t58 + t416 * t59;
t74 = t124 * t413 + t417 * t125;
t127 = t179 * t414 + t418 * t180;
t262 = t408 * (t419 * (-t445 - t527) + t436 * t495 - t404 + t543) - t410 * t456 + 0.2e1 * t487 + (t410 * t444 + (-t410 * t474 + t419 * t530) * qJDD(1) + (((t410 * pkin(8) + t408 * t449) * t409 + (-t410 * t457 + t415 * t530) * t411) * qJD(1) - t410 * t448) * qJD(1)) * t409;
t206 = t262 * t408 + t410 * t263;
t463 = t496 * t501;
t459 = -pkin(4) * t144 + pkin(10) * t74;
t73 = -t124 * t417 + t125 * t413;
t454 = t262 * t410 - t263 * t408;
t453 = t469 * t492;
t452 = -pkin(1) + t458;
t244 = -t347 - t291;
t168 = t244 * t412 + t554;
t451 = pkin(5) * t168 - t58;
t447 = t464 * t489;
t282 = -t351 - t540;
t203 = t282 * t417 - t555;
t239 = -t333 * t483 + t424;
t443 = pkin(4) * t239 + pkin(10) * t203 - t518;
t289 = -t331 - t351;
t208 = -t289 * t413 - t514;
t243 = t332 * t483 + t425;
t442 = pkin(4) * t243 + pkin(10) * t208 + t519;
t255 = -t292 - t347;
t181 = t255 * t416 - t517;
t441 = pkin(5) * t181 - t59;
t177 = -t238 * t417 + t242 * t413;
t267 = t331 + t540;
t440 = pkin(4) * t267 + pkin(10) * t177 + t74;
t209 = -t291 - t292;
t117 = -t159 * t416 + t162 * t412;
t27 = -pkin(5) * t209 + pkin(11) * t117 + t32;
t29 = -pkin(11) * t115 - t31;
t72 = -t115 * t413 + t117 * t417;
t437 = -pkin(4) * t209 + pkin(10) * t72 + t27 * t417 + t29 * t413;
t169 = t244 * t416 - t556;
t120 = -t168 * t413 + t169 * t417;
t158 = (qJD(6) + t348) * t295 + t468;
t75 = -pkin(5) * t158 + pkin(11) * t169 - t520;
t83 = -pkin(11) * t168 + t521;
t435 = -pkin(4) * t158 + pkin(10) * t120 + t413 * t83 + t417 * t75;
t182 = -t255 * t412 - t516;
t130 = -t181 * t413 + t182 * t417;
t76 = -pkin(5) * t546 + pkin(11) * t182 + t521;
t90 = -pkin(11) * t181 + t520;
t434 = -pkin(4) * t546 + pkin(10) * t130 + t413 * t90 + t417 * t76;
t19 = t32 * t417 - t526;
t30 = -pkin(5) * t128 + pkin(11) * t32;
t433 = -pkin(4) * t128 + pkin(10) * t19 - pkin(11) * t526 + t30 * t417;
t403 = t419 ^ 2 * t486;
t390 = t419 * t447;
t389 = t415 * t447;
t388 = -t403 + t470;
t387 = -t403 - t460;
t378 = -t470 - t460;
t376 = t405 * t419 * t446;
t372 = t409 * t427 + t528;
t369 = -t380 - t403;
t368 = -t380 + t403;
t367 = t379 - t403;
t366 = -t389 - t548;
t365 = t389 - t548;
t364 = -t390 + t386;
t352 = -t403 - t379;
t340 = -t370 + t362;
t338 = -t371 + t465;
t337 = -t355 + t539;
t336 = t354 - t539;
t335 = (-t381 * t408 + t382 * t410) * t471;
t334 = -t379 - t380;
t329 = t408 * t362 - t371 * t410;
t328 = t370 * t408 - t410 * t465;
t326 = -t355 - t539;
t322 = -t369 * t408 + t507;
t321 = t367 * t408 - t507;
t320 = t368 * t410 + t552;
t319 = t369 * t410 + t508;
t318 = t355 - t354;
t316 = -t539 - t354;
t311 = -t331 + t351;
t310 = -t351 + t540;
t309 = t352 * t410 - t552;
t308 = t352 * t408 + t551;
t303 = (t356 * t418 - t358 * t414) * t398;
t302 = (t356 * t414 + t358 * t418) * t398;
t300 = -t341 * t408 - t410 * t544;
t298 = -t338 * t408 + t340 * t410;
t296 = t331 - t540;
t290 = -t354 - t355;
t287 = t306 - t345;
t283 = (qJD(4) - t398) * t358 + t466;
t281 = t336 * t418 + t511;
t280 = -t337 * t414 + t549;
t279 = t336 * t414 - t510;
t278 = t337 * t418 + t550;
t277 = t306 * t418 + t358 * t500;
t276 = t306 * t414 - t358 * t499;
t275 = -t305 * t414 - t356 * t499;
t274 = t305 * t418 - t356 * t500;
t271 = -t292 + t347;
t270 = t291 - t347;
t269 = -t326 * t414 + t510;
t268 = t326 * t418 + t511;
t259 = t316 * t418 - t550;
t258 = t316 * t414 + t549;
t257 = (-t332 * t417 + t333 * t413) * t353;
t256 = (-t332 * t413 - t333 * t417) * t353;
t251 = t302 * t410 + t303 * t408;
t250 = -pkin(2) * t340 + qJ(3) * t322 + t498;
t248 = t292 - t291;
t247 = -pkin(2) * t338 + qJ(3) * t309 - t509;
t241 = -t315 + t265;
t237 = t265 * t417 - t333 * t504;
t236 = t265 * t413 + t333 * t503;
t235 = t332 * t503 + t413 * t423;
t234 = -t332 * t504 + t417 * t423;
t231 = -t284 * t418 + t287 * t414;
t230 = -t283 * t418 - t286 * t414;
t229 = -t284 * t414 - t287 * t418;
t228 = -t283 * t414 + t286 * t418;
t227 = t257 * t418 + t304 * t414;
t226 = t257 * t414 - t304 * t418;
t225 = t279 * t410 + t281 * t408;
t224 = t278 * t410 + t280 * t408;
t223 = t310 * t417 - t515;
t222 = -t311 * t413 + t553;
t221 = t310 * t413 + t514;
t220 = t311 * t417 + t555;
t219 = t276 * t410 + t277 * t408;
t218 = t274 * t410 + t275 * t408;
t217 = (-t293 * t416 + t295 * t412) * t348;
t216 = (-t293 * t412 - t295 * t416) * t348;
t215 = -t268 * t408 + t269 * t410;
t214 = t268 * t410 + t269 * t408;
t210 = -pkin(9) * t268 + t512;
t207 = t289 * t417 - t515;
t204 = -pkin(9) * t258 + t513;
t202 = t282 * t413 + t553;
t201 = t237 * t418 + t477;
t200 = t235 * t418 - t477;
t199 = t237 * t414 - t476;
t198 = t235 * t414 + t476;
t197 = -t258 * t408 + t259 * t410;
t196 = t258 * t410 + t259 * t408;
t195 = -pkin(2) * t325 + qJ(3) * t206;
t190 = -qJD(6) * t295 - t468;
t189 = -pkin(3) * t286 + pkin(9) * t269 + t513;
t188 = t270 * t416 - t517;
t187 = -t271 * t412 + t554;
t186 = t270 * t412 + t516;
t185 = t271 * t416 + t556;
t184 = -pkin(3) * t283 + pkin(9) * t259 - t512;
t183 = -pkin(2) * t334 + qJ(3) * t300 + t206;
t176 = t239 * t417 - t241 * t413;
t175 = -t238 * t413 - t242 * t417;
t174 = t239 * t413 + t241 * t417;
t173 = t223 * t418 - t238 * t414;
t172 = t222 * t418 + t242 * t414;
t171 = t223 * t414 + t238 * t418;
t170 = t222 * t414 - t242 * t418;
t167 = -t229 * t408 + t231 * t410;
t166 = t229 * t410 + t231 * t408;
t165 = t228 * t410 + t230 * t408;
t164 = t226 * t410 + t227 * t408;
t157 = t208 * t418 - t243 * t414;
t156 = t208 * t414 + t243 * t418;
t155 = t191 * t416 - t295 * t506;
t154 = t191 * t412 + t295 * t505;
t153 = -t190 * t412 + t293 * t505;
t152 = t190 * t416 + t293 * t506;
t151 = -t216 * t413 + t217 * t417;
t150 = t216 * t417 + t217 * t413;
t149 = t203 * t418 - t239 * t414;
t148 = t203 * t414 + t239 * t418;
t147 = t176 * t418 + t296 * t414;
t146 = t176 * t414 - t296 * t418;
t142 = t177 * t418 - t267 * t414;
t141 = t177 * t414 + t267 * t418;
t140 = t151 * t418 + t301 * t414;
t139 = t151 * t414 - t301 * t418;
t138 = t199 * t410 + t201 * t408;
t137 = t198 * t410 + t200 * t408;
t136 = -t186 * t413 + t188 * t417;
t135 = -t185 * t413 + t187 * t417;
t134 = t186 * t417 + t188 * t413;
t133 = t185 * t417 + t187 * t413;
t132 = -pkin(10) * t207 + t518;
t131 = -pkin(10) * t202 + t519;
t129 = t181 * t417 + t182 * t413;
t122 = t171 * t410 + t173 * t408;
t121 = t170 * t410 + t172 * t408;
t119 = t168 * t417 + t169 * t413;
t118 = -pkin(3) * t266 + pkin(9) * t127;
t116 = -t158 * t416 - t412 * t546;
t114 = -t158 * t412 + t416 * t546;
t113 = -t156 * t408 + t157 * t410;
t112 = t156 * t410 + t157 * t408;
t111 = -t154 * t413 + t155 * t417;
t110 = -t152 * t413 + t153 * t417;
t109 = t154 * t417 + t155 * t413;
t108 = t152 * t417 + t153 * t413;
t107 = -t148 * t408 + t149 * t410;
t106 = t148 * t410 + t149 * t408;
t105 = -pkin(2) * t286 + qJ(3) * t215 + t189 * t410 + t210 * t408;
t104 = t146 * t410 + t147 * t408;
t103 = -pkin(9) * t229 - t126;
t102 = -pkin(2) * t283 + qJ(3) * t197 + t184 * t410 + t204 * t408;
t101 = -t141 * t408 + t142 * t410;
t100 = t141 * t410 + t142 * t408;
t99 = t139 * t410 + t140 * t408;
t98 = t111 * t418 + t479;
t97 = t110 * t418 - t479;
t96 = t111 * t414 - t478;
t95 = t110 * t414 + t478;
t94 = -pkin(3) * t290 + pkin(9) * t231 + t127;
t93 = -pkin(4) * t207 + t125;
t92 = -pkin(4) * t202 + t124;
t89 = t136 * t418 - t159 * t414;
t88 = t135 * t418 + t162 * t414;
t87 = t136 * t414 + t159 * t418;
t86 = t135 * t414 - t162 * t418;
t82 = t130 * t418 + t414 * t546;
t81 = t130 * t414 - t418 * t546;
t80 = t120 * t418 + t158 * t414;
t79 = t120 * t414 - t158 * t418;
t78 = t127 * t410 - t523;
t77 = t127 * t408 + t522;
t71 = -t114 * t413 + t116 * t417;
t70 = t115 * t417 + t117 * t413;
t69 = t114 * t417 + t116 * t413;
t68 = t248 * t414 + t418 * t71;
t67 = -t248 * t418 + t414 * t71;
t66 = t209 * t414 + t418 * t72;
t65 = -t209 * t418 + t414 * t72;
t64 = -pkin(10) * t175 - t73;
t63 = t408 * t98 + t410 * t96;
t62 = t408 * t97 + t410 * t95;
t61 = t144 * t414 + t418 * t74;
t60 = -t144 * t418 + t414 * t74;
t56 = -pkin(9) * t156 + t132 * t418 - t414 * t93;
t55 = -pkin(9) * t148 + t131 * t418 - t414 * t92;
t54 = t408 * t89 + t410 * t87;
t53 = t408 * t88 + t410 * t86;
t52 = -t408 * t81 + t410 * t82;
t51 = t408 * t82 + t410 * t81;
t50 = -pkin(3) * t207 + pkin(9) * t157 + t132 * t414 + t418 * t93;
t49 = -pkin(3) * t202 + pkin(9) * t149 + t131 * t414 + t418 * t92;
t48 = -pkin(2) * t290 + qJ(3) * t167 + t103 * t408 + t410 * t94;
t47 = -t408 * t79 + t410 * t80;
t46 = t408 * t80 + t410 * t79;
t45 = -pkin(4) * t70 - t531;
t44 = -pkin(9) * t141 + t175 * t532 + t418 * t64;
t43 = -pkin(2) * t266 - pkin(9) * t523 + qJ(3) * t78 + t118 * t410;
t42 = pkin(9) * t142 + t175 * t473 + t414 * t64;
t41 = -pkin(4) * t129 - t441;
t40 = -pkin(10) * t129 - t413 * t76 + t417 * t90;
t39 = -pkin(4) * t119 - t451;
t38 = -pkin(10) * t119 - t413 * t75 + t417 * t83;
t37 = t408 * t68 + t410 * t67;
t36 = -t408 * t65 + t410 * t66;
t35 = t408 * t66 + t410 * t65;
t34 = -t408 * t60 + t410 * t61;
t33 = t408 * t61 + t410 * t60;
t28 = -pkin(9) * t60 + (-pkin(10) * t418 + t532) * t73;
t26 = -pkin(2) * t207 + qJ(3) * t113 + t408 * t56 + t410 * t50;
t25 = -pkin(2) * t202 + qJ(3) * t107 + t408 * t55 + t410 * t49;
t24 = pkin(9) * t61 + (-pkin(10) * t414 + t473) * t73;
t23 = -pkin(2) * t175 + qJ(3) * t101 + t408 * t44 + t410 * t42;
t22 = -pkin(9) * t81 + t40 * t418 - t41 * t414;
t21 = -pkin(9) * t79 + t38 * t418 - t39 * t414;
t20 = -pkin(3) * t129 + pkin(9) * t82 + t40 * t414 + t41 * t418;
t18 = t32 * t413 + t525;
t17 = -pkin(3) * t119 + pkin(9) * t80 + t38 * t414 + t39 * t418;
t16 = t128 * t414 + t19 * t418;
t15 = -t128 * t418 + t19 * t414;
t14 = -pkin(10) * t70 - t27 * t413 + t29 * t417;
t13 = -pkin(4) * t18 - t537;
t12 = -pkin(9) * t65 + t14 * t418 - t414 * t45;
t11 = -pkin(2) * t73 + qJ(3) * t34 + t24 * t410 + t28 * t408;
t10 = -pkin(10) * t18 - pkin(11) * t525 - t30 * t413;
t9 = -pkin(3) * t70 + pkin(9) * t66 + t14 * t414 + t418 * t45;
t8 = -t15 * t408 + t16 * t410;
t7 = t15 * t410 + t16 * t408;
t6 = -pkin(2) * t129 + qJ(3) * t52 + t20 * t410 + t22 * t408;
t5 = -pkin(2) * t119 + qJ(3) * t47 + t17 * t410 + t21 * t408;
t4 = -pkin(9) * t15 + t10 * t418 - t13 * t414;
t3 = -pkin(2) * t70 + qJ(3) * t36 + t12 * t408 + t410 * t9;
t2 = -pkin(3) * t18 + pkin(9) * t16 + t10 * t414 + t13 * t418;
t1 = -pkin(2) * t18 + qJ(3) * t8 + t2 * t410 + t4 * t408;
t57 = [0, 0, 0, 0, 0, qJDD(1), t444, t445, 0, 0, t386 * t497 + t453, t411 * t388 + (t415 * t366 + t419 * (t390 + t386)) * t409, t411 * t364 + (t493 + t419 * (t460 - t470)) * t409, -t376 - t453, t411 * t365 + (t415 * (t403 - t460) + t490) * t409, t411 * t462, (-t349 + pkin(1) * (t385 * t419 + t387 * t415)) * t411 + (t419 * t372 + pkin(1) * t366 + pkin(8) * (t387 * t419 - t493)) * t409, -t372 * t497 - t411 * t350 + pkin(1) * (-t384 * t495 + t411 * t419 * t378 - t409 * (t464 * t471 + t386)) + (-t415 * t378 - t490) * t529, pkin(1) * (-t364 * t419 + t365 * t415) * t411 + (t415 * t364 + t365 * t419) * t529 + (pkin(1) * (t403 + t470) + t542) * t409, pkin(1) * (t409 * t372 + (-t349 * t419 + t350 * t415) * t411) + t542 * t529, (t410 * t362 + t371 * t408) * t497 + t463 + t411 * t329, t411 * t298 + (t415 * (-t338 * t410 - t340 * t408) + t419 * (-t380 + t379)) * t409, t411 * t320 + (t415 * (-t368 * t408 + t551) + t419 * t341) * t409, (t370 * t410 + t408 * t465) * t497 - t463 + t411 * t328, t411 * t321 + (t415 * (t367 * t410 + t508) + t419 * t544) * t409, t411 * t335 - t376 + (-t381 * t410 - t382 * t408) * t488 * t492, (-qJ(3) * t308 + t498) * t497 + (-pkin(2) * t308 + t262) * t496 + t411 * t247 + pkin(1) * (-t409 * t308 + (t309 * t415 - t338 * t419) * t411) + (t419 * t309 + t415 * t338) * t529, (t250 + pkin(1) * (t322 * t415 - t340 * t419)) * t411 + (t415 * (-qJ(3) * t319 + t509) + t419 * (-pkin(2) * t319 + t263) - pkin(1) * t319 + pkin(8) * (t322 * t419 + t415 * t340)) * t409, (t183 + pkin(1) * (t300 * t415 - t334 * t419)) * t411 + (t415 * t454 + pkin(8) * (t300 * t419 + t415 * t334) + t452 * (t341 * t410 - t408 * t544)) * t409, (t195 + pkin(1) * (t206 * t415 - t325 * t419)) * t411 + (pkin(8) * (t206 * t419 + t415 * t325) - t452 * t454) * t409, t411 * t219 + (t415 * (-t276 * t408 + t277 * t410) - t475) * t409, t411 * t165 + (t415 * (-t228 * t408 + t230 * t410) - t419 * t318) * t409, t411 * t224 + (t415 * (-t278 * t408 + t280 * t410) - t419 * t287) * t409, t411 * t218 + (t415 * (-t274 * t408 + t275 * t410) + t475) * t409, t411 * t225 + (t415 * (-t279 * t408 + t281 * t410) + t419 * t284) * t409, t411 * t251 + (t415 * (-t302 * t408 + t303 * t410) - t432 * t419) * t409, (t102 + pkin(1) * (t197 * t415 - t283 * t419)) * t411 + (t415 * (-qJ(3) * t196 - t184 * t408 + t204 * t410) + t419 * (-pkin(2) * t196 - pkin(3) * t258 + t179) - pkin(1) * t196 + pkin(8) * (t197 * t419 + t415 * t283)) * t409, (t105 + pkin(1) * (t215 * t415 - t286 * t419)) * t411 + (t415 * (-qJ(3) * t214 - t189 * t408 + t210 * t410) + t419 * (-pkin(2) * t214 - pkin(3) * t268 + t180) - pkin(1) * t214 + pkin(8) * (t215 * t419 + t286 * t415)) * t409, (t48 + pkin(1) * (t167 * t415 - t290 * t419)) * t411 + (t415 * (-qJ(3) * t166 + t103 * t410 - t408 * t94) + t419 * (-pkin(2) * t166 - pkin(3) * t229) - pkin(1) * t166 + pkin(8) * (t167 * t419 + t415 * t290)) * t409, (t43 + pkin(1) * (-t266 * t419 + t415 * t78)) * t411 + (t415 * (-pkin(9) * t522 - qJ(3) * t77 - t118 * t408) + t419 * (-pkin(2) * t77 - pkin(3) * t126) - pkin(1) * t77 + pkin(8) * (t415 * t266 + t419 * t78)) * t409, t411 * t138 + (t415 * (-t199 * t408 + t201 * t410) - t419 * t236) * t409, t411 * t104 + (t415 * (-t146 * t408 + t147 * t410) - t419 * t174) * t409, t411 * t121 + (t415 * (-t170 * t408 + t172 * t410) - t419 * t220) * t409, t411 * t137 + (t415 * (-t198 * t408 + t200 * t410) + t419 * t234) * t409, t411 * t122 + (t415 * (-t171 * t408 + t173 * t410) - t419 * t221) * t409, t411 * t164 + (t415 * (-t226 * t408 + t227 * t410) - t419 * t256) * t409, (t25 + pkin(1) * (t107 * t415 - t202 * t419)) * t411 + (t415 * (-qJ(3) * t106 - t408 * t49 + t410 * t55) + t419 * (-pkin(2) * t106 - pkin(3) * t148 - t443) - pkin(1) * t106 + pkin(8) * (t107 * t419 + t415 * t202)) * t409, (t26 + pkin(1) * (t113 * t415 - t207 * t419)) * t411 + (t415 * (-qJ(3) * t112 - t408 * t50 + t410 * t56) + t419 * (-pkin(2) * t112 - pkin(3) * t156 - t442) - pkin(1) * t112 + pkin(8) * (t113 * t419 + t415 * t207)) * t409, (t23 + pkin(1) * (t101 * t415 - t175 * t419)) * t411 + (t415 * (-qJ(3) * t100 - t408 * t42 + t410 * t44) + t419 * (-pkin(2) * t100 - pkin(3) * t141 - t440) - pkin(1) * t100 + pkin(8) * (t101 * t419 + t415 * t175)) * t409, (t11 + pkin(1) * (t34 * t415 - t419 * t73)) * t411 + (t415 * (-qJ(3) * t33 - t24 * t408 + t28 * t410) + t419 * (-pkin(2) * t33 - pkin(3) * t60 - t459) - pkin(1) * t33 + pkin(8) * (t34 * t419 + t415 * t73)) * t409, t411 * t63 + (t415 * (-t408 * t96 + t410 * t98) - t419 * t109) * t409, t411 * t37 + (t415 * (-t408 * t67 + t410 * t68) - t419 * t69) * t409, t411 * t53 + (t415 * (-t408 * t86 + t410 * t88) - t419 * t133) * t409, t411 * t62 + (t415 * (-t408 * t95 + t410 * t97) - t419 * t108) * t409, t411 * t54 + (t415 * (-t408 * t87 + t410 * t89) - t419 * t134) * t409, t411 * t99 + (t415 * (-t139 * t408 + t140 * t410) - t419 * t150) * t409, (t5 + pkin(1) * (-t119 * t419 + t415 * t47)) * t411 + (t415 * (-qJ(3) * t46 - t17 * t408 + t21 * t410) + t419 * (-pkin(2) * t46 - pkin(3) * t79 - t435) - pkin(1) * t46 + pkin(8) * (t415 * t119 + t419 * t47)) * t409, (t6 + pkin(1) * (-t129 * t419 + t415 * t52)) * t411 + (t415 * (-qJ(3) * t51 - t20 * t408 + t22 * t410) + t419 * (-pkin(2) * t51 - pkin(3) * t81 - t434) - pkin(1) * t51 + pkin(8) * (t415 * t129 + t419 * t52)) * t409, (t3 + pkin(1) * (t36 * t415 - t419 * t70)) * t411 + (t415 * (-qJ(3) * t35 + t12 * t410 - t408 * t9) + t419 * (-pkin(2) * t35 - pkin(3) * t65 - t437) - pkin(1) * t35 + pkin(8) * (t36 * t419 + t415 * t70)) * t409, (t1 + pkin(1) * (-t18 * t419 + t415 * t8)) * t411 + (t415 * (-qJ(3) * t7 - t2 * t408 + t4 * t410) + t419 * (-pkin(2) * t7 - pkin(3) * t15 - t433) - pkin(1) * t7 + pkin(8) * (t415 * t18 + t419 * t8)) * t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t397, t388, t364, t397, t365, t462, -t349, -t350, 0, 0, t329, t298, t320, t328, t321, t335, t247, t250, t183, t195, t219, t165, t224, t218, t225, t251, t102, t105, t48, t43, t138, t104, t121, t137, t122, t164, t25, t26, t23, t11, t63, t37, t53, t62, t54, t99, t5, t6, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t340, t334, t325, 0, 0, 0, 0, 0, 0, t283, t286, t290, t266, 0, 0, 0, 0, 0, 0, t202, t207, t175, t73, 0, 0, 0, 0, 0, 0, t119, t129, t70, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, t318, t287, -t502, -t284, t432, -t179, -t180, 0, 0, t236, t174, t220, -t234, t221, t256, t443, t442, t440, t459, t109, t69, t133, t108, t134, t150, t435, t434, t437, t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t296, t242, -t297, -t238, t304, -t124, -t125, 0, 0, t249, t248, t162, -t249, -t159, t301, t451, t441, t531, t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, t248, t162, -t249, -t159, t301, -t58, -t59, 0, 0;];
tauJ_reg  = t57;
