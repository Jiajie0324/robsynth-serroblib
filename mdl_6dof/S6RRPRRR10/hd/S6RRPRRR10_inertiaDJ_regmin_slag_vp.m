% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR10_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:25:23
% EndTime: 2019-03-09 14:25:33
% DurationCPUTime: 3.65s
% Computational Cost: add. (7567->381), mult. (19979->688), div. (0->0), fcn. (20983->12), ass. (0->196)
t163 = sin(pkin(12));
t165 = cos(pkin(12));
t169 = sin(qJ(4));
t173 = cos(qJ(4));
t138 = t163 * t173 + t165 * t169;
t168 = sin(qJ(5));
t171 = cos(qJ(6));
t167 = sin(qJ(6));
t172 = cos(qJ(5));
t230 = t167 * t172;
t140 = t168 * t171 + t230;
t97 = t140 * t138;
t162 = t172 ^ 2;
t224 = t168 ^ 2 - t162;
t196 = t224 * qJD(5);
t215 = qJD(5) + qJD(6);
t155 = -pkin(3) * t165 - pkin(2);
t256 = 0.2e1 * t155;
t164 = sin(pkin(6));
t255 = 0.2e1 * t164;
t254 = pkin(10) + pkin(11);
t166 = cos(pkin(6));
t170 = sin(qJ(2));
t235 = t164 * t170;
t129 = t163 * t166 + t165 * t235;
t209 = t163 * t235;
t233 = t165 * t166;
t180 = -t209 + t233;
t92 = t169 * t129 - t173 * t180;
t253 = pkin(5) * t92;
t174 = cos(qJ(2));
t222 = qJD(2) * t174;
t202 = t164 * t222;
t93 = t173 * t129 + t169 * t180;
t74 = t93 * qJD(4) + t138 * t202;
t252 = t74 * pkin(5);
t251 = pkin(1) * t170;
t250 = pkin(1) * t174;
t225 = t173 * t165;
t137 = t163 * t169 - t225;
t249 = pkin(5) * t137;
t131 = t138 * qJD(4);
t248 = t131 * pkin(5);
t247 = pkin(9) + qJ(3);
t234 = t164 * t174;
t213 = pkin(8) * t234;
t123 = t213 + (qJ(3) + t251) * t166;
t189 = -pkin(2) * t174 - qJ(3) * t170;
t124 = (-pkin(1) + t189) * t164;
t87 = -t163 * t123 + t165 * t124;
t67 = -pkin(3) * t234 - t129 * pkin(9) + t87;
t88 = t165 * t123 + t163 * t124;
t78 = t180 * pkin(9) + t88;
t246 = t169 * t67 + t173 * t78;
t42 = -pkin(10) * t234 + t246;
t152 = pkin(8) * t235;
t102 = pkin(3) * t209 + t152 + (t155 - t250) * t166;
t52 = t92 * pkin(4) - t93 * pkin(10) + t102;
t26 = t168 * t52 + t172 * t42;
t84 = t168 * t93 + t172 * t234;
t19 = -pkin(11) * t84 + t26;
t245 = t171 * t19;
t238 = t138 * t168;
t103 = pkin(4) * t137 - pkin(10) * t138 + t155;
t144 = t247 * t163;
t145 = t247 * t165;
t112 = -t144 * t169 + t145 * t173;
t104 = t172 * t112;
t71 = t168 * t103 + t104;
t59 = -pkin(11) * t238 + t71;
t244 = t171 * t59;
t223 = qJD(2) * t170;
t203 = t164 * t223;
t73 = -t92 * qJD(4) - t137 * t202;
t45 = -t84 * qJD(5) + t168 * t203 + t172 * t73;
t243 = t45 * t168;
t242 = t45 * t172;
t128 = (t166 * t251 + t213) * qJD(2);
t241 = t128 * t163;
t130 = t137 * qJD(4);
t240 = t130 * t172;
t239 = t138 * t130;
t237 = t138 * t172;
t146 = t254 * t168;
t236 = t146 * t167;
t232 = t165 * t174;
t231 = t167 * t168;
t229 = t168 * t130;
t227 = t168 * t172;
t226 = t171 * t172;
t114 = (-qJD(3) * t170 + (pkin(2) * t170 - qJ(3) * t174) * qJD(2)) * t164;
t127 = -t166 * pkin(1) * t222 + pkin(8) * t203;
t120 = qJD(3) * t166 - t127;
t82 = t163 * t114 + t165 * t120;
t221 = qJD(4) * t169;
t220 = qJD(4) * t173;
t219 = qJD(5) * t168;
t218 = qJD(5) * t172;
t217 = qJD(6) * t167;
t216 = qJD(6) * t171;
t214 = -0.2e1 * pkin(4) * qJD(5);
t212 = pkin(5) * t219;
t211 = pkin(5) * t217;
t210 = pkin(5) * t216;
t208 = t168 * t234;
t194 = t163 * t202;
t110 = pkin(3) * t194 + t128;
t175 = t74 * pkin(4) - t73 * pkin(10) + t110;
t81 = t165 * t114 - t163 * t120;
t64 = (pkin(3) * t170 - pkin(9) * t232) * t164 * qJD(2) + t81;
t77 = -pkin(9) * t194 + t82;
t23 = -t169 * t64 - t173 * t77 - t67 * t220 + t78 * t221;
t21 = pkin(10) * t203 - t23;
t9 = -t26 * qJD(5) - t168 * t21 + t172 * t175;
t5 = -t45 * pkin(11) + t252 + t9;
t46 = -qJD(5) * t208 + t168 * t73 - t172 * t203 + t93 * t218;
t8 = -t168 * t175 - t172 * t21 - t52 * t218 + t42 * t219;
t7 = -pkin(11) * t46 - t8;
t207 = -t167 * t7 + t171 * t5;
t159 = t164 ^ 2;
t205 = t159 * t222;
t204 = t138 * t219;
t201 = t168 * t218;
t192 = pkin(4) * t131 + pkin(10) * t130;
t89 = t144 * t220 - qJD(3) * t225 + (qJD(3) * t163 + qJD(4) * t145) * t169;
t199 = t168 * t89 + t172 * t192;
t29 = pkin(11) * t240 + t248 + (-t104 + (pkin(11) * t138 - t103) * t168) * qJD(5) + t199;
t179 = t138 * t218 - t229;
t37 = -t103 * t218 + t112 * t219 - t168 * t192 + t172 * t89;
t32 = -t179 * pkin(11) - t37;
t200 = -t167 * t32 + t171 * t29;
t25 = -t168 * t42 + t172 * t52;
t198 = -t169 * t78 + t173 * t67;
t197 = -0.4e1 * t138 * t227;
t70 = t172 * t103 - t112 * t168;
t195 = t170 * t205;
t193 = 0.2e1 * (t163 ^ 2 + t165 ^ 2) * qJD(3);
t41 = pkin(4) * t234 - t198;
t191 = pkin(4) * t130 - pkin(10) * t131;
t190 = pkin(4) * t138 + pkin(10) * t137;
t106 = -t171 * t218 - t172 * t216 + t215 * t231;
t188 = t106 * t92 - t140 * t74;
t187 = -t81 * t163 + t82 * t165;
t85 = t172 * t93 - t208;
t18 = -pkin(11) * t85 + t25 + t253;
t11 = t167 * t18 + t245;
t58 = -pkin(11) * t237 + t249 + t70;
t34 = t167 * t58 + t244;
t54 = t167 * t85 + t171 * t84;
t55 = -t167 * t84 + t171 * t85;
t186 = -t168 * t85 - t172 * t84;
t24 = -t169 * t77 + t173 * t64 - t78 * t220 - t67 * t221;
t185 = t106 * t137 - t131 * t140;
t111 = t144 * t173 + t145 * t169;
t147 = t254 * t172;
t116 = t147 * t171 - t236;
t139 = -t226 + t231;
t1 = -t167 * t5 - t171 * t7 - t18 * t216 + t19 * t217;
t22 = -pkin(4) * t203 - t24;
t184 = t22 * t168 + t41 * t218;
t183 = t22 * t172 - t41 * t219;
t182 = t168 * t74 + t92 * t218;
t181 = -t172 * t74 + t92 * t219;
t12 = -t167 * t29 - t171 * t32 - t58 * t216 + t59 * t217;
t178 = -t204 - t240;
t177 = t131 * t168 + t137 * t218;
t176 = t164 * (t189 * qJD(2) + qJD(3) * t174);
t90 = t138 * qJD(3) + t112 * qJD(4);
t157 = -pkin(5) * t172 - pkin(4);
t135 = t138 ^ 2;
t126 = t152 + (-pkin(2) - t250) * t166;
t115 = -t146 * t171 - t147 * t167;
t107 = t215 * t140;
t105 = 0.2e1 * t137 * t131;
t101 = t131 * t172 - t137 * t219;
t98 = t139 * t138;
t91 = pkin(5) * t238 + t111;
t80 = -t116 * qJD(6) + (-t254 * t226 + t236) * qJD(5);
t79 = t140 * qJD(5) * t254 + t146 * t216 + t147 * t217;
t66 = -t107 * t137 - t131 * t139;
t60 = t179 * pkin(5) + t90;
t56 = 0.2e1 * t92 * t74;
t48 = -t130 * t230 - t167 * t204 - t217 * t238 + (t215 * t237 - t229) * t171;
t47 = t139 * t130 - t215 * t97;
t44 = t131 * t92 + t137 * t74;
t40 = -t107 * t92 - t139 * t74;
t38 = -t71 * qJD(5) + t199;
t33 = -t167 * t59 + t171 * t58;
t30 = pkin(5) * t84 + t41;
t16 = t55 * qJD(6) + t167 * t45 + t171 * t46;
t15 = -t54 * qJD(6) - t167 * t46 + t171 * t45;
t14 = pkin(5) * t46 + t22;
t13 = -t34 * qJD(6) + t200;
t10 = -t167 * t19 + t171 * t18;
t2 = -t11 * qJD(6) + t207;
t3 = [0, 0, 0, 0.2e1 * t195, 0.2e1 * (-t170 ^ 2 + t174 ^ 2) * t159 * qJD(2), 0.2e1 * t166 * t202, -0.2e1 * t166 * t203, 0, -0.2e1 * pkin(1) * t159 * t223 - 0.2e1 * t128 * t166, -0.2e1 * pkin(1) * t205 + 0.2e1 * t127 * t166, -0.2e1 * t128 * t233 + 0.2e1 * (t170 * t241 - t81 * t174 + (t126 * t163 * t174 + t170 * t87) * qJD(2)) * t164, 0.2e1 * t128 * t129 + 0.2e1 * (t174 * t82 + (t126 * t232 - t170 * t88) * qJD(2)) * t164, 0.2e1 * t82 * t180 - 0.2e1 * t81 * t129 + 0.2e1 * (-t163 * t88 - t165 * t87) * t202, 0.2e1 * t126 * t128 + 0.2e1 * t81 * t87 + 0.2e1 * t82 * t88, 0.2e1 * t93 * t73, -0.2e1 * t73 * t92 - 0.2e1 * t74 * t93 (-t174 * t73 + t223 * t93) * t255 (t174 * t74 - t223 * t92) * t255, -0.2e1 * t195, 0.2e1 * t102 * t74 + 0.2e1 * t110 * t92 + 0.2e1 * (-t24 * t174 + t198 * t223) * t164, 0.2e1 * t102 * t73 + 0.2e1 * t110 * t93 + 0.2e1 * (-t23 * t174 - t246 * t223) * t164, 0.2e1 * t85 * t45, -0.2e1 * t45 * t84 - 0.2e1 * t46 * t85, 0.2e1 * t45 * t92 + 0.2e1 * t74 * t85, -0.2e1 * t46 * t92 - 0.2e1 * t74 * t84, t56, 0.2e1 * t22 * t84 + 0.2e1 * t25 * t74 + 0.2e1 * t41 * t46 + 0.2e1 * t9 * t92, 0.2e1 * t22 * t85 - 0.2e1 * t26 * t74 + 0.2e1 * t41 * t45 + 0.2e1 * t8 * t92, 0.2e1 * t55 * t15, -0.2e1 * t15 * t54 - 0.2e1 * t16 * t55, 0.2e1 * t15 * t92 + 0.2e1 * t55 * t74, -0.2e1 * t16 * t92 - 0.2e1 * t54 * t74, t56, 0.2e1 * t10 * t74 + 0.2e1 * t14 * t54 + 0.2e1 * t16 * t30 + 0.2e1 * t2 * t92, 0.2e1 * t1 * t92 - 0.2e1 * t11 * t74 + 0.2e1 * t14 * t55 + 0.2e1 * t15 * t30; 0, 0, 0, 0, 0, t202, -t203, 0, -t128, t127, -t128 * t165 + t163 * t176, t165 * t176 + t241 (t163 * t129 + t165 * t180) * qJD(3) + t187, -t128 * pkin(2) + (-t163 * t87 + t165 * t88) * qJD(3) + t187 * qJ(3), -t130 * t93 + t138 * t73, t130 * t92 - t131 * t93 - t137 * t73 - t138 * t74 (t130 * t174 + t138 * t223) * t164 (t131 * t174 - t137 * t223) * t164, 0, t102 * t131 + t110 * t137 + t155 * t74 + (-t111 * t223 + t174 * t90) * t164, -t102 * t130 + t110 * t138 + t155 * t73 + (-t112 * t223 - t174 * t89) * t164, -t85 * t240 + (-t219 * t85 + t242) * t138, -t186 * t130 + (-t243 - t172 * t46 + (t168 * t84 - t172 * t85) * qJD(5)) * t138, t85 * t131 + t45 * t137 - t138 * t181 - t240 * t92, -t84 * t131 - t46 * t137 - t138 * t182 + t229 * t92, t44, t111 * t46 + t25 * t131 + t9 * t137 + t138 * t184 - t229 * t41 + t38 * t92 + t70 * t74 + t90 * t84, t111 * t45 - t26 * t131 + t8 * t137 + t138 * t183 - t240 * t41 + t37 * t92 - t71 * t74 + t90 * t85, -t15 * t98 + t47 * t55, -t15 * t97 + t16 * t98 - t47 * t54 - t48 * t55, t131 * t55 + t137 * t15 + t47 * t92 - t74 * t98, -t131 * t54 - t137 * t16 - t48 * t92 - t74 * t97, t44, t10 * t131 + t13 * t92 + t137 * t2 + t14 * t97 + t16 * t91 + t30 * t48 + t33 * t74 + t54 * t60, t1 * t137 - t11 * t131 + t12 * t92 - t14 * t98 + t15 * t91 + t30 * t47 - t34 * t74 + t55 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, qJ(3) * t193, -0.2e1 * t239, 0.2e1 * t130 * t137 - 0.2e1 * t131 * t138, 0, 0, 0, t131 * t256, -t130 * t256, -0.2e1 * t135 * t201 - 0.2e1 * t162 * t239, -t130 * t197 + 0.2e1 * t135 * t196, 0.2e1 * t131 * t237 + 0.2e1 * t137 * t178, -0.2e1 * t131 * t238 - 0.2e1 * t137 * t179, t105, 0.2e1 * t111 * t179 + 0.2e1 * t70 * t131 + 0.2e1 * t38 * t137 + 0.2e1 * t238 * t90, 0.2e1 * t111 * t178 - 0.2e1 * t71 * t131 + 0.2e1 * t37 * t137 + 0.2e1 * t237 * t90, -0.2e1 * t98 * t47, -0.2e1 * t47 * t97 + 0.2e1 * t48 * t98, -0.2e1 * t131 * t98 + 0.2e1 * t137 * t47, -0.2e1 * t131 * t97 - 0.2e1 * t137 * t48, t105, 0.2e1 * t13 * t137 + 0.2e1 * t131 * t33 + 0.2e1 * t48 * t91 + 0.2e1 * t60 * t97, 0.2e1 * t12 * t137 - 0.2e1 * t131 * t34 + 0.2e1 * t47 * t91 - 0.2e1 * t60 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t165 * t202, 0, t128, 0, 0, 0, 0, 0, t74, t73, 0, 0, 0, 0, 0, -t181, -t182, 0, 0, 0, 0, 0, t40, t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, -t130, 0, 0, 0, 0, 0, t101, -t177, 0, 0, 0, 0, 0, t66, t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t74, t203, t24, t23, t218 * t85 + t243, qJD(5) * t186 - t168 * t46 + t242, t182, -t181, 0, -pkin(4) * t46 - pkin(10) * t182 - t183, -pkin(4) * t45 + pkin(10) * t181 + t184, -t106 * t55 + t140 * t15, t106 * t54 - t107 * t55 - t139 * t15 - t140 * t16, -t188, t40, 0, t107 * t30 + t115 * t74 + t139 * t14 + t157 * t16 + t212 * t54 + t80 * t92, -t106 * t30 - t116 * t74 + t14 * t140 + t15 * t157 + t212 * t55 + t79 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, -t131, 0, -t90, t89, -t130 * t227 - t138 * t196, qJD(5) * t197 + t130 * t224, t177, t101, 0, -t90 * t172 + t191 * t168 + (t111 * t168 - t172 * t190) * qJD(5), t90 * t168 + t191 * t172 + (t111 * t172 + t168 * t190) * qJD(5), t106 * t98 + t140 * t47, t106 * t97 + t107 * t98 - t139 * t47 - t140 * t48, -t185, t66, 0, t107 * t91 + t115 * t131 + t137 * t80 + t139 * t60 + t157 * t48 + t212 * t97, -t106 * t91 - t116 * t131 + t137 * t79 + t140 * t60 + t157 * t47 - t212 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t201, -0.2e1 * t196, 0, 0, 0, t168 * t214, t172 * t214, -0.2e1 * t140 * t106, 0.2e1 * t106 * t139 - 0.2e1 * t107 * t140, 0, 0, 0, 0.2e1 * t107 * t157 + 0.2e1 * t139 * t212, -0.2e1 * t106 * t157 + 0.2e1 * t140 * t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t46, t74, t9, t8, 0, 0, t15, -t16, t74, t171 * t252 + (-t245 + (-t18 - t253) * t167) * qJD(6) + t207 (-t167 * t74 - t216 * t92) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, -t179, t131, t38, t37, 0, 0, t47, -t48, t131, t171 * t248 + (-t244 + (-t58 - t249) * t167) * qJD(6) + t200 (-t131 * t167 - t137 * t216) * pkin(5) + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, -t218, 0, 0, 0, 0, 0, -t107, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t219, 0, -pkin(10) * t218, pkin(10) * t219, 0, 0, -t106, -t107, 0, t80, t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t211, -0.2e1 * t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, -t16, t74, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t48, t131, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, -t107, 0, t80, t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, -t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
