% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR10_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR10_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR10_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR10_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:25:28
% EndTime: 2019-03-09 14:26:00
% DurationCPUTime: 15.24s
% Computational Cost: add. (17324->705), mult. (42572->981), div. (0->0), fcn. (36146->18), ass. (0->341)
t323 = cos(pkin(6));
t437 = qJD(1) * t323;
t301 = qJD(2) + t437;
t320 = sin(pkin(12));
t322 = cos(pkin(12));
t327 = sin(qJ(2));
t321 = sin(pkin(6));
t438 = qJD(1) * t321;
t407 = t327 * t438;
t235 = t301 * t322 - t320 * t407;
t236 = t301 * t320 + t322 * t407;
t326 = sin(qJ(4));
t331 = cos(qJ(4));
t169 = -t331 * t235 + t236 * t326;
t496 = qJD(5) + qJD(6);
t528 = t169 + t496;
t325 = sin(qJ(5));
t329 = cos(qJ(6));
t324 = sin(qJ(6));
t330 = cos(qJ(5));
t451 = t324 * t330;
t267 = t325 * t329 + t451;
t477 = t528 * t267;
t332 = cos(qJ(2));
t424 = qJD(1) * qJD(2);
t401 = t332 * t424;
t422 = qJDD(1) * t327;
t354 = t401 + t422;
t514 = t354 * t321;
t263 = t320 * t326 - t331 * t322;
t452 = t321 * t332;
t346 = t263 * t452;
t222 = qJD(1) * t346;
t256 = t263 * qJD(4);
t443 = t222 - t256;
t264 = t320 * t331 + t322 * t326;
t347 = t264 * t452;
t442 = -qJD(1) * t347 + t264 * qJD(4);
t370 = pkin(2) * t327 - qJ(3) * t332;
t250 = t370 * t438;
t418 = pkin(1) * t437;
t251 = -pkin(8) * t407 + t332 * t418;
t181 = t322 * t250 - t251 * t320;
t349 = (-pkin(9) * t322 * t332 + pkin(3) * t327) * t321;
t143 = qJD(1) * t349 + t181;
t182 = t320 * t250 + t322 * t251;
t436 = qJD(1) * t332;
t406 = t321 * t436;
t384 = t320 * t406;
t161 = -pkin(9) * t384 + t182;
t487 = pkin(9) + qJ(3);
t279 = t487 * t320;
t280 = t487 * t322;
t365 = -t279 * t331 - t280 * t326;
t527 = -qJD(3) * t263 + qJD(4) * t365 - t326 * t143 - t331 * t161;
t166 = qJD(5) + t169;
t522 = t166 ^ 2;
t423 = qJDD(1) * t323;
t300 = qJDD(2) + t423;
t461 = t300 * t320;
t202 = t322 * t514 + t461;
t366 = t235 * t326 + t236 * t331;
t441 = t514 * t320;
t371 = t300 * t322 - t441;
t87 = qJD(4) * t366 + t202 * t326 - t331 * t371;
t85 = qJDD(5) + t87;
t526 = -t325 * t522 + t330 * t85;
t162 = qJD(6) + t166;
t266 = t324 * t325 - t329 * t330;
t508 = t528 * t266;
t84 = qJDD(6) + t85;
t525 = -t162 * t508 + t267 * t84;
t519 = -pkin(10) * t407 + t527;
t252 = pkin(8) * t406 + t327 * t418;
t214 = pkin(3) * t384 + t252;
t524 = -pkin(4) * t442 + pkin(10) * t443 + t214;
t183 = -t222 * t325 - t330 * t407;
t515 = t325 * t256 + t183;
t523 = -t162 * t477 - t266 * t84;
t284 = -qJD(4) + t406;
t137 = t330 * t284 + t325 * t366;
t139 = -t284 * t325 + t330 * t366;
t367 = t137 * t324 - t329 * t139;
t72 = t329 * t137 + t139 * t324;
t520 = t367 * t72;
t518 = t169 * t284;
t220 = -t279 * t326 + t280 * t331;
t517 = qJD(3) * t264 + qJD(4) * t220 + t143 * t331 - t326 * t161;
t429 = qJD(5) * t330;
t516 = -t264 * t429 + t515;
t184 = -t222 * t330 + t325 * t407;
t393 = t256 * t330 + t184;
t513 = t367 ^ 2 - t72 ^ 2;
t427 = qJD(6) * t329;
t428 = qJD(6) * t324;
t421 = qJDD(1) * t332;
t299 = t321 * t421;
t402 = t327 * t424;
t382 = t321 * t402;
t249 = qJDD(4) - t299 + t382;
t430 = qJD(5) * t325;
t431 = qJD(4) * t331;
t432 = qJD(4) * t326;
t86 = t331 * t202 + t235 * t431 - t236 * t432 + t326 * t371;
t44 = t325 * t249 - t284 * t429 + t330 * t86 - t366 * t430;
t45 = qJD(5) * t139 - t330 * t249 + t325 * t86;
t13 = -t137 * t427 - t139 * t428 - t324 * t45 + t329 * t44;
t512 = t162 * t72 + t13;
t492 = cos(qJ(1));
t408 = t492 * t332;
t328 = sin(qJ(1));
t448 = t327 * t328;
t261 = -t323 * t448 + t408;
t316 = pkin(12) + qJ(4);
t311 = sin(t316);
t312 = cos(t316);
t453 = t321 * t328;
t207 = t261 * t312 + t311 * t453;
t409 = t492 * t327;
t447 = t328 * t332;
t260 = t323 * t447 + t409;
t319 = qJ(5) + qJ(6);
t313 = sin(t319);
t314 = cos(t319);
t148 = t207 * t314 + t260 * t313;
t223 = qJ(3) * t301 + t252;
t363 = -pkin(2) * t332 - qJ(3) * t327 - pkin(1);
t246 = t363 * t321;
t228 = qJD(1) * t246;
t149 = -t223 * t320 + t322 * t228;
t107 = -pkin(3) * t406 - pkin(9) * t236 + t149;
t150 = t322 * t223 + t320 * t228;
t120 = pkin(9) * t235 + t150;
t53 = t326 * t107 + t331 * t120;
t50 = -pkin(10) * t284 + t53;
t216 = -pkin(2) * t301 + qJD(3) - t251;
t167 = -pkin(3) * t235 + t216;
t65 = pkin(4) * t169 - pkin(10) * t366 + t167;
t28 = t325 * t65 + t330 * t50;
t22 = -pkin(11) * t137 + t28;
t20 = t22 * t428;
t454 = t321 * t327;
t244 = t311 * t323 + t312 * t454;
t52 = t107 * t331 - t326 * t120;
t49 = pkin(4) * t284 - t52;
t39 = pkin(5) * t137 + t49;
t259 = t323 * t409 + t447;
t410 = t321 * t492;
t204 = t259 * t312 - t311 * t410;
t258 = -t323 * t408 + t448;
t506 = t204 * t314 + t258 * t313;
t511 = t39 * t72 + g(1) * t148 + g(2) * t506 - g(3) * (-t244 * t314 + t313 * t452) + t20;
t147 = -t207 * t313 + t260 * t314;
t27 = -t325 * t50 + t330 * t65;
t21 = -pkin(11) * t139 + t27;
t18 = pkin(5) * t166 + t21;
t485 = t22 * t329;
t10 = t18 * t324 + t485;
t353 = t402 - t421;
t417 = pkin(1) * qJD(2) * t323;
t386 = qJD(1) * t417;
t416 = pkin(1) * t423;
t412 = -pkin(8) * t299 - t327 * t416 - t332 * t386;
t341 = -pkin(8) * t382 - t412;
t155 = qJ(3) * t300 + qJD(3) * t301 + t341;
t339 = qJD(2) * t370 - qJD(3) * t327;
t163 = (qJD(1) * t339 + qJDD(1) * t363) * t321;
t94 = -t155 * t320 + t322 * t163;
t59 = pkin(3) * t321 * t353 - pkin(9) * t202 + t94;
t95 = t322 * t155 + t320 * t163;
t67 = pkin(9) * t371 + t95;
t355 = t107 * t431 - t120 * t432 + t326 * t59 + t331 * t67;
t16 = pkin(10) * t249 + t355;
t385 = pkin(8) * t514 + t327 * t386 - t332 * t416;
t489 = t300 * pkin(2);
t495 = qJDD(3) - t489;
t174 = t385 + t495;
t118 = -pkin(3) * t371 + t174;
t32 = t87 * pkin(4) - t86 * pkin(10) + t118;
t7 = -qJD(5) * t28 - t325 * t16 + t330 * t32;
t4 = pkin(5) * t85 - pkin(11) * t44 + t7;
t359 = -t330 * t16 - t325 * t32 - t65 * t429 + t430 * t50;
t5 = -pkin(11) * t45 - t359;
t2 = -qJD(6) * t10 - t324 * t5 + t329 * t4;
t507 = t204 * t313 - t258 * t314;
t510 = t39 * t367 - g(1) * t147 + g(2) * t507 - g(3) * (-t244 * t313 - t314 * t452) + t2;
t337 = qJD(6) * t367 - t324 * t44 - t329 * t45;
t509 = -t162 * t367 + t337;
t505 = t204 * t325 - t258 * t330;
t504 = t204 * t330 + t258 * t325;
t315 = t321 ^ 2;
t420 = 0.2e1 * t315;
t503 = t366 * t72;
t502 = t366 * t367;
t479 = pkin(4) * t407 + t517;
t501 = t137 * t366;
t500 = t139 * t366;
t190 = t267 * t264;
t499 = t284 * t366;
t498 = t524 * t330;
t308 = -pkin(3) * t322 - pkin(2);
t201 = pkin(4) * t263 - pkin(10) * t264 + t308;
t497 = -t201 * t429 + t220 * t430 + t524 * t325 - t330 * t519;
t399 = qJD(6) * t18 + t5;
t494 = t324 * t4 + t399 * t329;
t493 = pkin(10) + pkin(11);
t491 = pkin(1) * t327;
t490 = g(3) * t321;
t440 = pkin(8) * t452 + t323 * t491;
t245 = qJ(3) * t323 + t440;
t175 = -t245 * t320 + t322 * t246;
t255 = t320 * t323 + t322 * t454;
t127 = -pkin(3) * t452 - pkin(9) * t255 + t175;
t176 = t322 * t245 + t320 * t246;
t254 = t320 * t454 - t323 * t322;
t142 = -pkin(9) * t254 + t176;
t446 = t326 * t127 + t331 * t142;
t69 = -pkin(10) * t452 + t446;
t185 = t331 * t254 + t255 * t326;
t186 = -t254 * t326 + t255 * t331;
t302 = pkin(8) * t454;
t248 = t302 + (-pkin(1) * t332 - pkin(2)) * t323;
t197 = pkin(3) * t254 + t248;
t93 = pkin(4) * t185 - pkin(10) * t186 + t197;
t486 = t325 * t93 + t330 * t69;
t483 = t325 * t44;
t482 = t325 * t85;
t480 = -pkin(5) * t516 + t479;
t102 = pkin(4) * t366 + pkin(10) * t169;
t476 = t325 * t102 + t330 * t52;
t474 = t183 * t324 - t184 * t329 - t190 * t496 + t266 * t256;
t403 = t264 * t430;
t462 = t264 * t330;
t463 = t264 * t325;
t473 = -t256 * t451 - t428 * t463 + (t462 * t496 - t515) * t329 + (-t403 - t184) * t324;
t472 = t137 * t166;
t471 = t139 * t166;
t470 = t169 * t325;
t464 = t259 * t311;
t460 = t300 * t323;
t459 = t312 * t313;
t458 = t312 * t314;
t457 = t312 * t325;
t456 = t312 * t332;
t455 = t315 * qJD(1) ^ 2;
t449 = t325 * t332;
t208 = t330 * t220;
t444 = t325 * t201 + t208;
t226 = t339 * t321;
t434 = qJD(2) * t327;
t405 = t321 * t434;
t364 = -pkin(8) * t405 + t332 * t417;
t232 = qJD(3) * t323 + t364;
t157 = t320 * t226 + t322 * t232;
t433 = qJD(2) * t332;
t404 = t321 * t433;
t253 = pkin(8) * t404 + t327 * t417;
t317 = t327 ^ 2;
t439 = -t332 ^ 2 + t317;
t435 = qJD(2) * t322;
t426 = qJD(2) - t301;
t425 = qJ(3) * qJDD(1);
t419 = g(1) * t492;
t415 = t332 * t455;
t414 = t321 * t449;
t413 = t330 * t452;
t383 = t320 * t404;
t215 = pkin(3) * t383 + t253;
t411 = qJD(5) * t493;
t397 = -t325 * t69 + t330 * t93;
t395 = t127 * t331 - t326 * t142;
t156 = t322 * t226 - t232 * t320;
t390 = t166 * t330;
t389 = -t107 * t432 - t120 * t431 - t326 * t67 + t331 * t59;
t388 = t301 + t437;
t387 = t300 + t423;
t380 = -t53 + (t430 + t470) * pkin(5);
t193 = t330 * t201;
t103 = pkin(5) * t263 - pkin(11) * t462 - t220 * t325 + t193;
t379 = -pkin(11) * t516 - qJD(6) * t103 + t497;
t112 = -pkin(11) * t463 + t444;
t378 = t208 * qJD(5) + qJD(6) * t112 + t498 - t393 * pkin(11) + (-(pkin(11) * t264 - t201) * qJD(5) + t519) * t325 - t442 * pkin(5);
t377 = g(1) * t260 + g(2) * t258;
t376 = -g(1) * t258 + g(2) * t260;
t375 = g(1) * t261 + g(2) * t259;
t374 = g(1) * t259 - g(2) * t261;
t101 = t330 * t102;
t286 = t493 * t330;
t373 = pkin(5) * t366 + qJD(6) * t286 - t325 * t52 + t101 + (pkin(11) * t169 + t411) * t330;
t285 = t493 * t325;
t372 = pkin(11) * t470 + qJD(6) * t285 + t325 * t411 + t476;
t68 = pkin(4) * t452 - t395;
t165 = t186 * t330 - t414;
t26 = pkin(5) * t185 - pkin(11) * t165 + t397;
t164 = t186 * t325 + t413;
t33 = -pkin(11) * t164 + t486;
t369 = t26 * t329 - t324 * t33;
t368 = t26 * t324 + t329 * t33;
t98 = t329 * t164 + t165 * t324;
t99 = -t164 * t324 + t165 * t329;
t362 = -t174 + t377;
t124 = qJD(2) * t349 + t156;
t140 = -pkin(9) * t383 + t157;
t361 = t124 * t331 - t127 * t432 - t326 * t140 - t142 * t431;
t360 = g(2) * t328 + t419;
t17 = -pkin(4) * t249 - t389;
t352 = t326 * t124 + t127 * t431 + t331 * t140 - t142 * t432;
t35 = pkin(10) * t405 + t352;
t133 = -qJD(2) * t346 - qJD(4) * t185;
t134 = qJD(2) * t347 + qJD(4) * t186;
t60 = pkin(4) * t134 - pkin(10) * t133 + t215;
t358 = t325 * t60 + t330 * t35 + t93 * t429 - t430 * t69;
t357 = -pkin(10) * t85 + t166 * t49;
t206 = -t261 * t311 + t312 * t453;
t350 = g(1) * t206 + g(2) * (-t312 * t410 - t464) + g(3) * (-t311 * t454 + t312 * t323);
t348 = -t393 - t403;
t344 = g(3) * t452 - t377;
t343 = -g(3) * t454 - t375;
t342 = -qJ(3) * t434 + (qJD(3) - t216) * t332;
t340 = t344 * t312;
t36 = -pkin(4) * t405 - t361;
t338 = -qJD(5) * t486 - t325 * t35 + t330 * t60;
t336 = pkin(10) * qJD(5) * t166 + t17 + t350;
t335 = -t344 - t385;
t310 = -pkin(5) * t330 - pkin(4);
t191 = t266 * t264;
t179 = pkin(5) * t463 - t365;
t160 = t207 * t330 + t260 * t325;
t159 = -t207 * t325 + t260 * t330;
t78 = -qJD(5) * t414 + t133 * t325 + t186 * t429 - t330 * t405;
t77 = -qJD(5) * t164 + t133 * t330 + t325 * t405;
t47 = pkin(5) * t164 + t68;
t25 = qJD(6) * t99 + t324 * t77 + t329 * t78;
t24 = -qJD(6) * t98 - t324 * t78 + t329 * t77;
t19 = pkin(5) * t78 + t36;
t12 = pkin(5) * t45 + t17;
t11 = -pkin(11) * t78 + t358;
t9 = t18 * t329 - t22 * t324;
t8 = pkin(5) * t134 - pkin(11) * t77 + t338;
t1 = -t20 + t494;
t3 = [qJDD(1), g(1) * t328 - g(2) * t492, t360 (qJDD(1) * t317 + 0.2e1 * t327 * t401) * t315 (t327 * t421 - t424 * t439) * t420 (t327 * t387 + t388 * t433) * t321 (t332 * t387 - t388 * t434) * t321, t460, -t253 * t301 - t302 * t300 - t385 * t323 + (t332 * t460 - t353 * t420) * pkin(1) + t374, -pkin(1) * t354 * t420 - t300 * t440 - t301 * t364 - t323 * t341 + t376, -t253 * t235 + t248 * t441 + t174 * t254 + (-t248 * t300 + t374) * t322 + (-t360 * t320 + (qJD(1) * t175 + t149) * t434 + (qJD(2) * t216 * t320 - qJD(1) * t156 - qJDD(1) * t175 - t94) * t332) * t321, t174 * t255 + t248 * t202 + t253 * t236 - t374 * t320 + (-t360 * t322 + (-qJD(1) * t176 - t150) * t434 + (qJD(1) * t157 + qJDD(1) * t176 + t216 * t435 + t95) * t332) * t321, t157 * t235 + t176 * t371 - t95 * t254 - t156 * t236 - t175 * t202 - t94 * t255 + (-t149 * t322 - t150 * t320) * t404 - t376, t95 * t176 + t150 * t157 + t94 * t175 + t149 * t156 + t174 * t248 + t216 * t253 - g(1) * (-t328 * pkin(1) - t259 * pkin(2) + pkin(8) * t410 - t258 * qJ(3)) - g(2) * (pkin(1) * t492 + t261 * pkin(2) + pkin(8) * t453 + t260 * qJ(3)) t133 * t366 + t186 * t86, -t133 * t169 - t134 * t366 - t185 * t86 - t186 * t87, -t133 * t284 + t186 * t249 + (-t332 * t86 + t366 * t434) * t321, t134 * t284 - t185 * t249 + (-t169 * t434 + t332 * t87) * t321 (-t249 * t332 - t284 * t434) * t321, -t361 * t284 + t395 * t249 + t215 * t169 + t197 * t87 + t118 * t185 + t167 * t134 + g(1) * t204 - g(2) * t207 + (-t332 * t389 + t434 * t52) * t321, t352 * t284 - t446 * t249 + t215 * t366 + t197 * t86 + t118 * t186 + t167 * t133 - g(1) * t464 - g(2) * t206 + (-t312 * t419 + t332 * t355 - t434 * t53) * t321, t139 * t77 + t165 * t44, -t137 * t77 - t139 * t78 - t164 * t44 - t165 * t45, t134 * t139 + t165 * t85 + t166 * t77 + t185 * t44, -t134 * t137 - t164 * t85 - t166 * t78 - t185 * t45, t134 * t166 + t185 * t85, g(1) * t504 - g(2) * t160 + t27 * t134 + t36 * t137 + t17 * t164 + t338 * t166 + t7 * t185 + t397 * t85 + t68 * t45 + t49 * t78, -g(1) * t505 - g(2) * t159 - t28 * t134 + t36 * t139 + t17 * t165 - t358 * t166 + t359 * t185 + t68 * t44 - t486 * t85 + t49 * t77, t13 * t99 - t24 * t367, -t13 * t98 - t24 * t72 + t25 * t367 + t337 * t99, t13 * t185 - t134 * t367 + t162 * t24 + t84 * t99, -t134 * t72 - t162 * t25 + t185 * t337 - t84 * t98, t134 * t162 + t185 * t84 (-qJD(6) * t368 - t11 * t324 + t329 * t8) * t162 + t369 * t84 + t2 * t185 + t9 * t134 + t19 * t72 - t47 * t337 + t12 * t98 + t39 * t25 + g(1) * t506 - g(2) * t148 -(qJD(6) * t369 + t11 * t329 + t324 * t8) * t162 - t368 * t84 - t1 * t185 - t10 * t134 - t19 * t367 + t47 * t13 + t12 * t99 + t39 * t24 - g(1) * t507 - g(2) * t147; 0, 0, 0, -t327 * t415, t439 * t455 (t426 * t436 + t422) * t321, -t407 * t426 + t299, t300, t252 * t301 + t455 * t491 + t335, pkin(1) * t415 + t251 * t301 + (pkin(8) * t424 + g(3)) * t454 + t375 + t412, -pkin(2) * t441 + t252 * t235 + (t362 + t489) * t322 + ((-g(3) * t322 + t320 * t425) * t332 + (-t149 * t327 + t181 * t332 + t320 * t342) * qJD(1)) * t321, -pkin(2) * t202 - t236 * t252 - t362 * t320 + ((g(3) * t320 + t322 * t425) * t332 + (t150 * t327 - t182 * t332 + t322 * t342) * qJD(1)) * t321, t181 * t236 - t182 * t235 + (qJ(3) * t371 + qJD(3) * t235 + t149 * t406 + t95) * t322 + (qJ(3) * t202 + qJD(3) * t236 + t150 * t406 - t94) * t320 + t343, -t149 * t181 - t150 * t182 - t216 * t252 + (-t149 * t320 + t150 * t322) * qJD(3) + (-t174 - t344) * pkin(2) + (-t94 * t320 + t95 * t322 + t343) * qJ(3), t264 * t86 + t366 * t443, -t169 * t443 - t263 * t86 - t264 * t87 - t366 * t442, t249 * t264 - t284 * t443 - t366 * t407, t169 * t407 - t249 * t263 + t284 * t442, t284 * t407, t118 * t263 + t442 * t167 - t214 * t169 + t365 * t249 + t284 * t517 + t308 * t87 - t52 * t407 - t340, t118 * t264 + t443 * t167 - t214 * t366 - t220 * t249 + t284 * t527 + t308 * t86 + t344 * t311 + t53 * t407, t139 * t348 + t44 * t462, t515 * t139 + t393 * t137 + (-t483 - t330 * t45 + (t137 * t325 - t139 * t330) * qJD(5)) * t264, t139 * t442 + t166 * t348 + t263 * t44 + t462 * t85, -t442 * t137 + t166 * t516 - t263 * t45 - t85 * t463, t166 * t442 + t263 * t85, -t49 * t183 + t193 * t85 - t365 * t45 + t7 * t263 + t442 * t27 - t498 * t166 + t479 * t137 + ((-t166 * t220 + t264 * t49) * qJD(5) - t340) * t330 + (t17 * t264 - t220 * t85 - t49 * t256 + (-qJD(5) * t201 - t519) * t166 + t343) * t325, -t444 * t85 + t359 * t263 - t365 * t44 + t17 * t462 - g(1) * (t260 * t457 + t261 * t330) - g(2) * (t258 * t457 + t259 * t330) - (-t312 * t449 + t327 * t330) * t490 - t442 * t28 + t497 * t166 + t479 * t139 + t348 * t49, -t13 * t191 - t367 * t474, -t13 * t190 - t191 * t337 + t367 * t473 - t474 * t72, t13 * t263 + t162 * t474 - t191 * t84 - t367 * t442, -t162 * t473 - t190 * t84 + t263 * t337 - t442 * t72, t162 * t442 + t263 * t84 (t103 * t329 - t112 * t324) * t84 + t2 * t263 - t179 * t337 + t12 * t190 - g(1) * (-t260 * t458 + t261 * t313) - g(2) * (-t258 * t458 + t259 * t313) + t442 * t9 + t480 * t72 + t473 * t39 - (t313 * t327 + t314 * t456) * t490 + (t324 * t379 - t329 * t378) * t162 -(t103 * t324 + t112 * t329) * t84 - t1 * t263 + t179 * t13 - t12 * t191 - g(1) * (t260 * t459 + t261 * t314) - g(2) * (t258 * t459 + t259 * t314) - t480 * t367 + t474 * t39 - (-t313 * t456 + t314 * t327) * t490 + (t324 * t378 + t329 * t379) * t162 - t442 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236 * t406 - t371, t461 + (t322 * t422 + (-t235 + t435) * t436) * t321, -t235 ^ 2 - t236 ^ 2, t149 * t236 - t150 * t235 - t335 + t495, 0, 0, 0, 0, 0, t87 - t499, t86 + t518, 0, 0, 0, 0, 0, -t501 + t526, -t330 * t522 - t482 - t500, 0, 0, 0, 0, 0, -t503 + t523, t502 - t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366 * t169, -t169 ^ 2 + t366 ^ 2, t86 - t518, -t87 - t499, t249, -t167 * t366 - t284 * t53 - t350 + t389, g(1) * t207 + g(2) * t204 + g(3) * t244 + t167 * t169 - t284 * t52 - t355, t139 * t390 + t483 (t44 - t472) * t330 + (-t45 - t471) * t325, t166 * t390 + t482 - t500, t501 + t526, -t166 * t366, -pkin(4) * t45 - t101 * t166 - t53 * t137 - t27 * t366 + (t52 * t166 + t357) * t325 - t336 * t330, -pkin(4) * t44 - t53 * t139 + t166 * t476 + t28 * t366 + t325 * t336 + t330 * t357, t13 * t267 + t367 * t508, -t13 * t266 + t267 * t337 + t367 * t477 + t508 * t72, t502 + t525, t503 + t523, -t162 * t366 (-t285 * t329 - t286 * t324) * t84 - t310 * t337 + t12 * t266 - t9 * t366 + t380 * t72 + t477 * t39 + (t324 * t372 - t329 * t373) * t162 - t350 * t314 -(-t285 * t324 + t286 * t329) * t84 + t310 * t13 + t12 * t267 + t10 * t366 - t380 * t367 - t508 * t39 + (t324 * t373 + t329 * t372) * t162 + t350 * t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139 * t137, -t137 ^ 2 + t139 ^ 2, t44 + t472, -t45 + t471, t85, t28 * t166 - t49 * t139 - g(1) * t159 + g(2) * t505 - g(3) * (-t244 * t325 - t413) + t7, t27 * t166 + t49 * t137 + g(1) * t160 + g(2) * t504 - g(3) * (-t244 * t330 + t414) + t359, -t520, t513, t512, t509, t84 -(-t21 * t324 - t485) * t162 + (-t139 * t72 - t162 * t428 + t329 * t84) * pkin(5) + t510 (-t162 * t22 - t4) * t324 + (t162 * t21 - t399) * t329 + (t139 * t367 - t162 * t427 - t324 * t84) * pkin(5) + t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t520, t513, t512, t509, t84, t10 * t162 + t510, t162 * t9 - t494 + t511;];
tau_reg  = t3;
