% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:32:54
% EndTime: 2019-03-09 14:33:43
% DurationCPUTime: 32.34s
% Computational Cost: add. (13180->732), mult. (26481->948), div. (0->0), fcn. (28479->8), ass. (0->581)
t965 = qJD(5) + qJD(6);
t974 = qJD(4) + t965;
t525 = sin(qJ(4));
t531 = -pkin(2) - pkin(8);
t899 = -pkin(9) + t531;
t458 = t899 * t525;
t528 = cos(qJ(5));
t443 = t528 * t458;
t529 = cos(qJ(4));
t459 = t899 * t529;
t524 = sin(qJ(5));
t790 = t524 * t459;
t364 = t443 + t790;
t769 = t528 * t525;
t788 = t524 * t529;
t450 = t769 + t788;
t278 = -pkin(10) * t450 + t364;
t523 = sin(qJ(6));
t527 = cos(qJ(6));
t768 = t528 * t529;
t789 = t524 * t525;
t449 = -t768 + t789;
t640 = t524 * t458 - t528 * t459;
t886 = t449 * pkin(10) - t640;
t155 = t527 * t278 + t523 * t886;
t971 = t974 * t155;
t968 = t523 * t278 - t527 * t886;
t970 = t974 * t968;
t526 = sin(qJ(2));
t857 = -t526 / 0.2e1;
t969 = t155 * t857;
t856 = t526 / 0.2e1;
t966 = t856 * t968;
t696 = qJD(4) + qJD(5);
t952 = qJD(6) + t696;
t530 = cos(qJ(2));
t407 = t450 * t530;
t864 = t407 / 0.2e1;
t888 = t527 * t449 + t523 * t450;
t902 = t888 * qJD(6);
t479 = t526 * t768;
t784 = t525 * t526;
t405 = t524 * t784 - t479;
t390 = t527 * t405;
t408 = t450 * t526;
t797 = t523 * t408;
t883 = -t390 / 0.2e1 - t797 / 0.2e1;
t929 = t888 * t526;
t937 = -t929 / 0.2e1 + t883;
t953 = t937 * qJD(1);
t963 = t696 * t888 + t902 - t953;
t430 = t527 * t450;
t796 = t523 * t449;
t887 = -t430 + t796;
t639 = t696 * t887;
t707 = qJD(6) * t887;
t906 = t639 + t707;
t393 = t527 * t408;
t800 = t523 * t405;
t625 = t393 / 0.2e1 - t800 / 0.2e1;
t908 = t887 * t526;
t924 = -t908 / 0.2e1 + t625;
t940 = t924 * qJD(1);
t62 = -t940 + t906;
t936 = t929 / 0.2e1 + t883;
t954 = qJD(2) * t936;
t503 = t525 * pkin(4) + qJ(3);
t951 = t364 * t856 + t503 * t864;
t950 = t952 * t936;
t949 = t952 * t937;
t392 = t527 * t407;
t765 = t529 * t530;
t480 = t528 * t765;
t783 = t525 * t530;
t406 = t524 * t783 - t480;
t799 = t523 * t406;
t214 = t392 - t799;
t737 = qJD(1) * t526;
t948 = qJD(2) * t937 - t214 * t737;
t391 = t527 * t406;
t798 = t523 * t407;
t644 = t391 + t798;
t922 = -t214 ^ 2 + t644 ^ 2;
t945 = qJD(1) * t922;
t921 = t887 ^ 2 - t888 ^ 2;
t944 = qJD(2) * t921;
t923 = t908 / 0.2e1 + t625;
t943 = qJD(2) * t923;
t164 = t923 * qJD(3);
t162 = t924 * qJD(3);
t165 = t936 * qJD(3);
t163 = t937 * qJD(3);
t764 = t530 * qJ(3);
t473 = t526 * pkin(2) - t764;
t445 = pkin(8) * t526 + t473;
t878 = pkin(3) + pkin(7);
t475 = t878 * t530;
t457 = t475 * t529;
t844 = t530 * pkin(4);
t850 = pkin(9) * t526;
t289 = t844 + t457 + (-t445 - t850) * t525;
t261 = t528 * t289;
t422 = t529 * t445;
t456 = t475 * t525;
t748 = t422 + t456;
t315 = t529 * t850 + t748;
t791 = t524 * t315;
t628 = t261 / 0.2e1 - t791 / 0.2e1;
t938 = t628 + t951;
t604 = pkin(4) * t765 + t475;
t564 = t604 * t449;
t85 = -t564 / 0.2e1 + t628 - t951;
t81 = qJD(2) * t924 - t644 * t737;
t935 = t952 * t923;
t934 = t952 * t924;
t933 = t888 / 0.2e1;
t932 = t214 * t696;
t556 = -pkin(5) * t406 + t604;
t541 = t556 * t214;
t928 = t214 * qJD(6);
t920 = -t503 * t406 / 0.2e1 + t640 * t857;
t396 = pkin(5) * t450 + t503;
t821 = t396 * t644;
t917 = t821 / 0.2e1;
t190 = t556 * t644;
t742 = qJD(1) * t214;
t911 = t644 * t742;
t734 = qJD(2) * t888;
t909 = t734 * t887;
t436 = t449 * qJD(5);
t661 = -t789 / 0.2e1;
t860 = t479 / 0.2e1;
t863 = -t449 / 0.2e1;
t546 = t860 + (t661 + t863) * t526;
t882 = t546 * qJD(1);
t903 = t449 * qJD(4) + t436 - t882;
t260 = t524 * t289;
t291 = t528 * t315;
t651 = -t260 / 0.2e1 - t291 / 0.2e1;
t901 = t651 + t920;
t563 = t604 * t450;
t84 = -t563 / 0.2e1 + t651 - t920;
t898 = t450 * t696;
t542 = t449 * t856 + t526 * t661 + t860;
t895 = t542 * t696;
t894 = t546 * t696;
t892 = t644 * t696;
t540 = t556 * t888;
t822 = t396 * t214;
t891 = -t540 / 0.2e1 - t822 / 0.2e1;
t539 = t556 * t887;
t890 = t539 / 0.2e1 + t917;
t889 = t390 + t797;
t782 = t526 * qJ(3);
t619 = -t530 * t531 + t782;
t438 = -pkin(1) - t619;
t474 = t878 * t526;
t455 = t529 * t474;
t355 = t438 * t525 - t455;
t304 = pkin(9) * t783 - t355;
t846 = t526 * pkin(4);
t286 = t304 + t846;
t257 = t528 * t286;
t785 = t525 * t474;
t356 = t438 * t529 + t785;
t305 = -pkin(9) * t765 + t356;
t792 = t524 * t305;
t156 = -t257 + t792;
t847 = t407 * pkin(10);
t594 = -t156 + t847;
t561 = t523 * t594;
t544 = t561 / 0.2e1;
t372 = t523 * pkin(5);
t686 = -t372 / 0.2e1;
t290 = t528 * t305;
t157 = t524 * t286 + t290;
t849 = pkin(10) * t406;
t126 = t157 + t849;
t780 = t527 * t126;
t659 = -t780 / 0.2e1;
t118 = t526 * pkin(5) + t594;
t811 = t523 * t118;
t761 = -t811 / 0.2e1 + t659;
t596 = t526 * t686 + t761;
t17 = t544 + t780 / 0.2e1 + t596;
t655 = -t430 / 0.2e1;
t341 = t655 + t430 / 0.2e1;
t708 = t341 * qJD(3);
t885 = qJD(1) * t17 - qJD(4) * t372 + t708;
t770 = t528 * t304;
t167 = t770 - t792;
t133 = t167 + t847;
t793 = t524 * t304;
t166 = -t290 - t793;
t132 = t166 - t849;
t652 = t132 / 0.2e1 + t126 / 0.2e1;
t629 = t652 * t527;
t845 = t528 * pkin(4);
t681 = pkin(5) + t845;
t631 = t523 * t681;
t771 = t527 * t524;
t424 = pkin(4) * t771 + t631;
t818 = t424 * t526;
t13 = t818 / 0.2e1 + t629 + (-t133 / 0.2e1 + t118 / 0.2e1) * t523;
t884 = qJD(1) * t13 + qJD(4) * t424 - t708;
t519 = t525 ^ 2;
t521 = t529 ^ 2;
t491 = t519 - t521;
t699 = t530 * qJD(1);
t677 = t529 * t699;
t557 = qJD(2) * t491 + 0.2e1 * t525 * t677;
t698 = t530 * qJD(3);
t880 = qJD(2) * t619 - t698;
t879 = t696 * t640;
t877 = -t257 / 0.2e1;
t876 = -t214 / 0.2e1;
t873 = -t286 / 0.2e1;
t654 = -t290 / 0.2e1;
t871 = t887 / 0.2e1;
t870 = -t887 / 0.2e1;
t868 = -t888 / 0.2e1;
t851 = pkin(5) * t449;
t853 = pkin(4) * t529;
t397 = -t851 + t853;
t866 = -t397 / 0.2e1;
t865 = t406 / 0.2e1;
t653 = -t443 / 0.2e1;
t862 = t449 / 0.2e1;
t861 = t450 / 0.2e1;
t859 = t480 / 0.2e1;
t858 = -t524 / 0.2e1;
t855 = t529 / 0.2e1;
t854 = -t530 / 0.2e1;
t852 = pkin(5) * t407;
t843 = t530 * pkin(5);
t842 = pkin(4) * qJD(4);
t841 = pkin(4) * qJD(5);
t840 = pkin(5) * qJD(5);
t839 = pkin(5) * qJD(6);
t428 = (-t853 - t878) * t526;
t332 = t405 * pkin(5) + t428;
t109 = t527 * t118;
t809 = t523 * t126;
t52 = -t109 + t809;
t645 = t261 - t791;
t121 = -pkin(10) * t408 + t645 + t843;
t781 = t527 * t121;
t751 = t291 + t260;
t131 = -pkin(10) * t405 + t751;
t808 = t523 * t131;
t1 = (t781 - t808) * t526 - t52 * t530 - t332 * t644 + t556 * t889;
t838 = t1 * qJD(1);
t53 = t780 + t811;
t643 = t393 - t800;
t779 = t527 * t131;
t810 = t523 * t121;
t2 = (t779 + t810) * t526 + t53 * t530 + t332 * t214 - t556 * t643;
t837 = t2 * qJD(1);
t56 = -t561 - t780;
t31 = t56 * t526 + t644 * t852 - t541;
t836 = qJD(1) * t31;
t560 = t527 * t594;
t57 = t560 - t809;
t32 = -t214 * t852 + t526 * t57 - t190;
t835 = qJD(1) * t32;
t778 = t527 * t132;
t806 = t523 * t133;
t58 = t778 - t806;
t693 = pkin(4) * t783;
t598 = -t693 - t852;
t33 = t58 * t526 - t598 * t644 - t541;
t834 = qJD(1) * t33;
t777 = t527 * t133;
t807 = t523 * t132;
t59 = t777 + t807;
t34 = t214 * t598 + t526 * t59 - t190;
t833 = qJD(1) * t34;
t38 = -t52 * t526 - t190;
t832 = qJD(1) * t38;
t39 = -t53 * t526 - t541;
t831 = qJD(1) * t39;
t565 = t604 * t407;
t95 = t166 * t526 + t406 * t693 - t565;
t830 = qJD(1) * t95;
t336 = t604 * t406;
t96 = t167 * t526 - t407 * t693 - t336;
t829 = qJD(1) * t96;
t42 = -t156 * t530 + t405 * t604 - t428 * t406 + t526 * t645;
t820 = t42 * qJD(1);
t476 = t527 * t681;
t500 = t523 * t524 * pkin(4);
t423 = t500 - t476;
t819 = t423 * t526;
t43 = t157 * t530 + t428 * t407 - t408 * t604 + t526 * t751;
t817 = t43 * qJD(1);
t794 = t523 * t528;
t439 = (t771 + t794) * pkin(4);
t816 = t439 * t526;
t440 = t527 * t845 - t500;
t815 = t440 * t526;
t814 = t450 * t503;
t787 = t525 * t445;
t786 = t525 * t449;
t767 = t529 * t449;
t766 = t529 * t450;
t685 = -t846 / 0.2e1;
t633 = t685 + t304 / 0.2e1;
t78 = t528 * t633 + t877;
t763 = t78 * qJD(1);
t87 = t214 * t889 + t643 * t644;
t762 = t87 * qJD(1);
t665 = t809 / 0.2e1;
t760 = -t109 / 0.2e1 + t665;
t759 = -t561 / 0.2e1 + t659;
t758 = t665 - t560 / 0.2e1;
t149 = -t406 * t450 - t407 * t449;
t757 = t696 * t149;
t219 = t406 * t863 + t407 * t861;
t756 = t696 * t219;
t585 = t769 / 0.2e1 + t788 / 0.2e1;
t330 = t450 * t857 + t526 * t585;
t750 = t696 * t330;
t326 = (t861 + t585) * t526;
t749 = t696 * t326;
t520 = t526 ^ 2;
t522 = t530 ^ 2;
t492 = t522 - t520;
t101 = -t156 * t526 - t336;
t746 = qJD(1) * t101;
t102 = -t157 * t526 - t565;
t745 = qJD(1) * t102;
t233 = -t355 * t526 + t475 * t765;
t744 = qJD(1) * t233;
t234 = -t356 * t526 - t475 * t783;
t743 = qJD(1) * t234;
t274 = -t407 * t530 + t408 * t526;
t741 = qJD(1) * t274;
t740 = qJD(1) * t407;
t452 = t492 * t525;
t739 = qJD(1) * t452;
t454 = t492 * t529;
t738 = qJD(1) * t454;
t736 = qJD(1) * t529;
t735 = qJD(2) * qJ(3);
t733 = qJD(2) * t396;
t732 = qJD(2) * t449;
t731 = qJD(2) * t450;
t730 = qJD(2) * t503;
t729 = qJD(2) * t526;
t513 = qJD(2) * t530;
t728 = qJD(3) * t525;
t727 = qJD(3) * t526;
t726 = qJD(3) * t529;
t725 = qJD(4) * t525;
t724 = qJD(4) * t526;
t723 = qJD(4) * t529;
t722 = qJD(4) * t531;
t139 = (-t355 - t455) * t530 - t787 * t526;
t721 = t139 * qJD(1);
t140 = t748 * t526 - t475 * t784 + (t356 - t785) * t530;
t720 = t140 * qJD(1);
t152 = -t526 * t889 + t530 * t644;
t719 = t152 * qJD(1);
t153 = -t214 * t530 + t526 * t643;
t718 = t153 * qJD(1);
t202 = t405 * t407 + t406 * t408;
t711 = t202 * qJD(1);
t273 = -t405 * t526 + t406 * t530;
t709 = t273 * qJD(1);
t297 = t326 * qJD(1);
t624 = -pkin(2) * t530 - t782;
t462 = -pkin(1) + t624;
t365 = t462 * t530 + t473 * t526;
t705 = t365 * qJD(1);
t366 = -t462 * t526 + t473 * t530;
t704 = t366 * qJD(1);
t703 = t492 * qJD(1);
t702 = t520 * qJD(1);
t701 = t525 * qJD(2);
t700 = t529 * qJD(2);
t697 = t530 * qJD(4);
t37 = (-t870 + t871) * t644 - 0.2e1 * t933 * t214;
t47 = -t214 * t888 + t644 * t887;
t695 = t47 * qJD(6) + t37 * t696;
t93 = t644 * t868 + t876 * t887;
t94 = -t214 * t871 - t644 * t933;
t694 = t94 * qJD(6) + t696 * t93;
t692 = pkin(1) * t737;
t691 = pkin(1) * t699;
t690 = pkin(7) * t729;
t689 = -t853 / 0.2e1;
t688 = -t852 / 0.2e1;
t687 = -t851 / 0.2e1;
t684 = -t527 * pkin(5) / 0.2e1;
t683 = -t845 / 0.2e1;
t682 = t844 / 0.2e1;
t680 = t643 * t737;
t679 = t889 * t737;
t678 = t408 * t737;
t676 = t525 * t700;
t675 = t530 * t701;
t674 = t526 * t697;
t673 = t405 * t737;
t672 = t462 * t473 * qJD(1);
t671 = t462 * t737;
t497 = t526 * t513;
t496 = t526 * t699;
t499 = t530 * t700;
t670 = t525 * t723;
t667 = t822 / 0.2e1;
t666 = -t821 / 0.2e1;
t664 = -t808 / 0.2e1;
t663 = -t806 / 0.2e1;
t660 = -t783 / 0.2e1;
t658 = -t779 / 0.2e1;
t657 = -t777 / 0.2e1;
t656 = -t392 / 0.2e1;
t648 = qJD(4) / 0.2e1 + qJD(5) / 0.2e1;
t647 = pkin(4) * t696;
t646 = pkin(5) * t965;
t638 = t696 * t526;
t637 = qJD(4) + t737;
t636 = -qJD(6) - t737;
t635 = t525 * t499;
t632 = t843 / 0.2e1 + t121 / 0.2e1;
t626 = -t391 / 0.2e1 - t798 / 0.2e1;
t623 = qJD(5) + t637;
t229 = t396 * t888;
t127 = -t397 * t887 - t229;
t533 = t598 * t871 - t644 * t866 - t969;
t592 = t664 + t781 / 0.2e1;
t538 = t423 * t854 + t592;
t3 = t667 + t540 / 0.2e1 + t533 + t538;
t618 = -t3 * qJD(1) + t127 * qJD(2);
t230 = t396 * t887;
t128 = -t397 * t888 + t230;
t532 = -t214 * t866 + t598 * t933 - t966;
t593 = -t810 / 0.2e1 + t658;
t537 = t424 * t854 + t593;
t4 = t666 - t539 / 0.2e1 + t532 + t537;
t617 = -t4 * qJD(1) + t128 * qJD(2);
t136 = -t851 * t887 + t229;
t571 = t155 * t526;
t8 = t571 / 0.2e1 + t667 + t604 * t933 + (t527 * t530 / 0.2e1 - t644 * t862 - t887 * t864 - t888 * t865) * pkin(5) + t592;
t616 = -t8 * qJD(1) - t136 * qJD(2);
t137 = -t851 * t888 - t230;
t572 = t968 * t526;
t7 = -t572 / 0.2e1 + t666 + t604 * t870 + (-t214 * t862 + t523 * t854 - t864 * t888 + t865 * t887) * pkin(5) + t593;
t615 = -t7 * qJD(1) - t137 * qJD(2);
t11 = qJD(2) * t37 + t945;
t29 = qJD(1) * t37 + t944;
t609 = qJD(2) * t47 + t945;
t608 = qJD(1) * t47 + t944;
t316 = pkin(4) * t766 - t449 * t503;
t49 = t475 * t862 + (t406 * t855 + (t528 / 0.2e1 + t525 * t861 + t767 / 0.2e1) * t530) * pkin(4) + t938;
t607 = -t49 * qJD(1) + t316 * qJD(2);
t317 = -pkin(4) * t767 - t814;
t48 = t475 * t861 + (t407 * t855 + (t858 - t786 / 0.2e1 + t766 / 0.2e1) * t530) * pkin(4) + t901;
t606 = t48 * qJD(1) - t317 * qJD(2);
t360 = t653 + t443 / 0.2e1;
t76 = t654 + t290 / 0.2e1 + (t873 + t633) * t524;
t605 = t76 * qJD(1) + t360 * qJD(2);
t228 = t406 ^ 2 - t407 ^ 2;
t91 = qJD(1) * t228 + qJD(2) * t149;
t292 = -t449 ^ 2 + t450 ^ 2;
t97 = qJD(1) * t149 + qJD(2) * t292;
t569 = t888 * t530;
t173 = t569 / 0.2e1 + t626;
t603 = qJD(1) * t173 - qJD(2) * t887;
t568 = t887 * t530;
t587 = t799 / 0.2e1 + t656;
t178 = -t568 / 0.2e1 + t587;
t602 = qJD(1) * t178 - t734;
t259 = t392 / 0.2e1 + t656;
t160 = qJD(1) * t259;
t325 = t859 + (t661 + t862) * t530;
t601 = qJD(1) * t325 + t731;
t327 = (t861 - t585) * t530;
t600 = qJD(1) * t327 - t732;
t599 = -t702 - t724;
t595 = t526 * t684 + t760;
t591 = -t807 / 0.2e1 + t657;
t590 = t663 + t778 / 0.2e1;
t584 = t531 * t857 - t764 / 0.2e1;
t534 = t396 * t876 + t556 * t868 + t969;
t21 = -t534 + t592;
t582 = qJD(1) * t21 + t733 * t888;
t535 = t556 * t871 + t917 + t966;
t22 = -t535 + t593;
t581 = qJD(1) * t22 - t733 * t887;
t580 = -qJD(2) * t94 + t911;
t44 = qJD(2) * t93 - t911;
t579 = -qJD(1) * t94 + t909;
t54 = qJD(1) * t93 - t909;
t82 = t564 / 0.2e1 + t938;
t578 = qJD(1) * t82 + t449 * t730;
t83 = t563 / 0.2e1 + t901;
t577 = qJD(1) * t83 + t450 * t730;
t576 = t637 * t783;
t333 = (t445 / 0.2e1 + t584) * t525;
t575 = -qJ(3) * t700 - t333 * qJD(1);
t555 = t584 * t529;
t334 = t422 / 0.2e1 + t555;
t574 = qJ(3) * t701 - t334 * qJD(1);
t130 = -qJD(2) * t219 + t406 * t740;
t150 = qJD(1) * t219 + t449 * t731;
t442 = (t521 / 0.2e1 - t519 / 0.2e1) * t530;
t573 = qJD(1) * t442 + t676;
t562 = qJD(6) * t644 + t892;
t559 = t522 * t525 * t736 - qJD(2) * t442;
t453 = t491 * t522;
t558 = -qJD(1) * t453 + 0.2e1 * t635;
t545 = -t523 * t652 + t657;
t14 = -t819 / 0.2e1 + t109 / 0.2e1 + t545;
t551 = qJD(1) * t14 - qJD(4) * t423;
t543 = t560 / 0.2e1;
t19 = t543 - t809 / 0.2e1 + t595;
t373 = t476 / 0.2e1 + (t683 + pkin(5) / 0.2e1) * t527;
t549 = qJD(1) * t19 - qJD(4) * t373;
t25 = t663 + t816 / 0.2e1 + t544 + t629;
t548 = qJD(1) * t25 + qJD(4) * t439;
t26 = t815 / 0.2e1 + t543 + t545;
t547 = qJD(1) * t26 + qJD(4) * t440;
t536 = qJD(2) * t624 + t698;
t512 = pkin(7) * t513;
t508 = t513 / 0.2e1;
t507 = -t699 / 0.2e1;
t506 = t699 / 0.2e1;
t498 = t526 * t736;
t495 = t525 * t737;
t448 = -t498 - t723;
t447 = -t495 - t725;
t446 = t496 + t697 / 0.2e1;
t427 = t442 * qJD(4);
t426 = t440 * qJD(5);
t425 = t439 * qJD(5);
t402 = t424 * qJD(6);
t401 = t423 * qJD(6);
t400 = t530 * t648 + t496;
t369 = t496 + (qJD(6) / 0.2e1 + t648) * t530;
t362 = t684 + t500 - t476 / 0.2e1 + t527 * t683;
t361 = t686 - t631 / 0.2e1 + (-t771 - t794 / 0.2e1) * pkin(4);
t328 = -t407 / 0.2e1 - t585 * t530;
t324 = t449 * t854 + t524 * t660 + t859;
t303 = t542 * qJD(3);
t300 = t330 * qJD(3);
t296 = t326 * qJD(3);
t294 = t546 * qJD(3);
t263 = 0.2e1 * t653 - t790;
t240 = -t456 - t422 / 0.2e1 + t555;
t239 = t457 - t787 / 0.2e1 + t584 * t525;
t237 = 0.2e1 * t655 + t796;
t225 = qJD(2) * t546 - t407 * t737;
t224 = qJD(2) * t326 - t406 * t737;
t209 = -t297 - t898;
t179 = t568 / 0.2e1 + t587;
t172 = -t569 / 0.2e1 + t626;
t135 = qJD(2) * t542 + t407 * t623;
t134 = t330 * qJD(2) + t406 * t623;
t103 = qJD(6) * t341 + t940;
t80 = -qJD(6) * t259 + t948;
t79 = t526 * t683 + t792 + t877 - t770 / 0.2e1;
t77 = 0.2e1 * t654 - t793 / 0.2e1 + (t685 + t873) * t524;
t61 = t237 * qJD(6) + t639 - t940;
t51 = t407 * t689 + t682 * t786 + t844 * t858 + t84;
t50 = pkin(4) * t450 * t660 + t406 * t689 + t528 * t682 + t85;
t41 = t943 + (qJD(6) + t623) * t644;
t40 = t214 * t623 + t928 + t954;
t28 = -t815 / 0.2e1 + t591 + t758;
t27 = -t816 / 0.2e1 + t590 + t759;
t24 = t534 + t592;
t23 = t535 + t593;
t20 = t595 + t758;
t18 = t596 + t759;
t16 = -t818 / 0.2e1 + t590 + t761;
t15 = t819 / 0.2e1 + t591 + t760;
t10 = t572 / 0.2e1 - t214 * t687 - t888 * t688 + t658 - t632 * t523 + t890;
t9 = -t571 / 0.2e1 - t644 * t687 - t887 * t688 + t664 + t632 * t527 + t891;
t6 = -t532 + t537 + t890;
t5 = -t533 + t538 + t891;
t12 = [0, 0, 0, t497, t492 * qJD(2), 0, 0, 0, -pkin(1) * t729, -pkin(1) * t513, 0, qJD(2) * t366 - t526 * t698, -qJD(2) * t365 + qJD(3) * t520 (qJD(2) * t473 - t727) * t462, -t497 * t519 + t522 * t670, -qJD(4) * t453 - 0.2e1 * t526 * t635, -qJD(2) * t452 - t529 * t674, -qJD(2) * t454 + t525 * t674, t497, qJD(2) * t139 + qJD(4) * t234 + t520 * t728, -qJD(2) * t140 - qJD(4) * t233 + t520 * t726 (-qJD(2) * t408 - t406 * t696) * t407, t202 * qJD(2) + t228 * t696, t274 * qJD(2) + t406 * t638, t273 * qJD(2) + t407 * t638, t497, qJD(2) * t42 + qJD(4) * t95 + qJD(5) * t102 + t408 * t727, -qJD(2) * t43 - qJD(4) * t96 - qJD(5) * t101 - t405 * t727 -(qJD(2) * t643 + t562) * t214, t87 * qJD(2) + t922 * t952, t153 * qJD(2) + t526 * t562, t152 * qJD(2) + (t928 + t932) * t526, t497, qJD(2) * t1 + qJD(4) * t33 + qJD(5) * t31 + qJD(6) * t39 + t643 * t727, -qJD(2) * t2 - qJD(4) * t34 - qJD(5) * t32 - qJD(6) * t38 - t727 * t889; 0, 0, 0, t496, t703, t513, -t729, 0, -t512 - t692, t690 - t691, t536, t512 + t704, -t690 - t705, pkin(7) * t536 + t672, -t427 + (-t519 * t699 + t676) * t526, -t526 * t557 + 0.2e1 * t530 * t670, t499 - t739, -t675 - t738, t446, t239 * qJD(4) - t474 * t701 - t529 * t880 + t721, t240 * qJD(4) - t474 * t700 + t525 * t880 - t720 (-t732 - t740) * t408 + t756, t711 + (t405 * t449 - t408 * t450) * qJD(2) + t757, -t449 * t513 + t741 + t750, -t450 * t513 + t709 + t895, t400, t820 + (t405 * t503 + t428 * t450 - t530 * t640) * qJD(2) + t324 * qJD(3) + t50 * qJD(4) + t85 * qJD(5), -t817 + (-t364 * t530 + t408 * t503 - t428 * t449) * qJD(2) + t328 * qJD(3) + t51 * qJD(4) + t84 * qJD(5) (-t734 - t742) * t643 + t694, t762 + (t643 * t887 + t888 * t889) * qJD(2) + t695, -t513 * t888 + t718 + t935, t513 * t887 + t719 + t950, t369, t838 + (-t332 * t887 + t396 * t889 - t530 * t968) * qJD(2) + t172 * qJD(3) + t5 * qJD(4) + t9 * qJD(5) + t24 * qJD(6), -t837 + (-t155 * t530 - t332 * t888 + t396 * t643) * qJD(2) + t179 * qJD(3) + t6 * qJD(4) + t10 * qJD(5) + t23 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, -t496, t702, t512 - t671, 0, 0, 0, 0, 0, t525 * t702 + t499, t529 * t702 - t675, 0, 0, 0, 0, 0, qJD(2) * t324 + t678 + t750, t328 * qJD(2) - t673 + t895, 0, 0, 0, 0, 0, qJD(2) * t172 + t680 + t935, qJD(2) * t179 - t679 + t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, t558, -t637 * t765, t576, t508, qJD(2) * t239 - qJD(4) * t356 + t743, qJD(2) * t240 + qJD(4) * t355 - t744, -t130, t91, t134, t135, t508, qJD(2) * t50 + qJD(4) * t166 + qJD(5) * t77 + t300 + t830, qJD(2) * t51 - qJD(4) * t167 + qJD(5) * t79 + t303 - t829, t44, t11, t41, t40, t508, qJD(2) * t5 + qJD(4) * t58 + qJD(5) * t27 + qJD(6) * t16 + t164 + t834, qJD(2) * t6 - qJD(4) * t59 + qJD(5) * t28 + qJD(6) * t15 + t165 - t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, t91, t134, t135, t508, qJD(2) * t85 + qJD(4) * t77 - qJD(5) * t157 + t300 + t745, qJD(2) * t84 + qJD(4) * t79 + qJD(5) * t156 + t303 - t746, t44, t11, t41, t40, t508, qJD(2) * t9 + qJD(4) * t27 + qJD(5) * t56 + qJD(6) * t18 + t164 + t836, qJD(2) * t10 + qJD(4) * t28 - qJD(5) * t57 + qJD(6) * t20 + t165 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580, t609, -t636 * t644 + t892 + t943, -t214 * t636 + t932 + t954, t508, qJD(2) * t24 + qJD(4) * t16 + qJD(5) * t18 - qJD(6) * t53 + t164 + t831, qJD(2) * t23 + qJD(4) * t15 + qJD(5) * t20 + qJD(6) * t52 + t165 - t832; 0, 0, 0, -t496, -t703, 0, 0, 0, t692, t691, 0, -t704, t705, -t672, t496 * t519 - t427, 0.2e1 * t529 * t576, -t525 * t724 + t739, -t526 * t723 + t738, -t446, qJD(4) * t333 - t721, qJD(4) * t334 + t720, t408 * t740 + t756, -t711 + t757, -t741 - t749, -t709 - t894, -t400, qJD(3) * t325 - qJD(4) * t49 - qJD(5) * t82 - t820, qJD(3) * t327 - qJD(4) * t48 - qJD(5) * t83 + t817, t643 * t742 + t694, t695 - t762, -t718 - t934, -t719 - t949, -t369, qJD(3) * t173 - qJD(4) * t3 - qJD(5) * t8 - qJD(6) * t21 - t838, qJD(3) * t178 - qJD(4) * t4 - qJD(5) * t7 - qJD(6) * t22 + t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t670, t491 * qJD(4), 0, 0, 0, qJ(3) * t723 + t728, -qJ(3) * t725 + t726, t449 * t898, t696 * t292, 0, 0, 0, qJD(3) * t450 + qJD(4) * t316 - t436 * t503, -qJD(3) * t449 + qJD(4) * t317 - qJD(5) * t814, -t906 * t888, t952 * t921, 0, 0, 0, -qJD(3) * t887 + qJD(4) * t127 - qJD(5) * t136 - t396 * t902, -qJD(3) * t888 + qJD(4) * t128 - qJD(5) * t137 + t396 * t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t735, 0, 0, 0, 0, 0, t701, t700, 0, 0, 0, 0, 0, t601, t600, 0, 0, 0, 0, 0, t603, t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t573, t557, t447, t448, t507, -t525 * t722 - t575, -t529 * t722 - t574, t150, t97, t209, t903, t507, -qJD(4) * t364 + t263 * qJD(5) + t607, -t606 + t879, t54, t29, t62, t963, t507, t618 - t971, t617 + t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t97, t209, t903, t507, qJD(4) * t263 - qJD(5) * t364 - t578, -t577 + t879, t54, t29, t62, t963, t507, t616 - t971, t615 + t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, t608, t62, t963, t507, -t582 - t971, -t581 + t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, -t702, t671, 0, 0, 0, 0, 0, t599 * t525, t599 * t529, 0, 0, 0, 0, 0, -qJD(2) * t325 - t678 - t749, -t327 * qJD(2) + t673 - t894, 0, 0, 0, 0, 0, -qJD(2) * t173 - t680 - t934, -qJD(2) * t178 + t679 - t949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t735, 0, 0, 0, 0, 0, -t701, -t700, 0, 0, 0, 0, 0, -t601, -t600, 0, 0, 0, 0, 0, -t603, -t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, t448, 0, 0, 0, 0, 0, t209, t903, 0, 0, 0, 0, 0, t61, t963; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, t903, 0, 0, 0, 0, 0, t61, t963; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237 * t696 + t707 - t940, t963; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, -t558 (t677 + t701) * t526 (-t525 * t699 + t700) * t526, t508, -qJD(2) * t333 + t525 * t727 - t743, -qJD(2) * t334 + t526 * t726 + t744, t130, -t91, t224, t225, t508, qJD(2) * t49 + qJD(5) * t76 + t296 - t830, qJD(2) * t48 + qJD(5) * t78 + t294 + t829, -t44, -t11, t81, t80, t508, qJD(2) * t3 - qJD(5) * t25 - qJD(6) * t13 + t162 - t834, qJD(2) * t4 - qJD(5) * t26 - qJD(6) * t14 + t163 + t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t573, -t557, t495, t498, t506, t575, t574, -t150, -t97, t297, t882, t506, qJD(5) * t360 - t607, t606, -t54, -t29, t940, t953, t506, -t618, -t617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, t498, 0, 0, 0, 0, 0, t297, t882, 0, 0, 0, 0, 0, t103, t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524 * t841, -t528 * t841, 0, 0, 0, 0, 0, -t425 - t402, -t426 + t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524 * t647 + t605, -t528 * t647 + t763, 0, 0, 0, 0, 0, qJD(6) * t361 - t425 - t548, qJD(6) * t362 - t426 - t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, 0, qJD(5) * t361 - t402 - t884, qJD(5) * t362 + t401 - t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -t91, t224, t225, t508, qJD(2) * t82 - qJD(4) * t76 + t296 - t745, qJD(2) * t83 - qJD(4) * t78 + t294 + t746, -t44, -t11, t81, t80, t508, qJD(2) * t8 + qJD(4) * t25 + qJD(6) * t17 + t162 - t836, qJD(2) * t7 + qJD(4) * t26 + qJD(6) * t19 + t163 + t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150, -t97, t297, t882, t506, -qJD(4) * t360 + t578, t577, -t54, -t29, t940, t953, t506, -t616, -t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t882, 0, 0, 0, 0, 0, t103, t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524 * t842 - t605, t528 * t842 - t763, 0, 0, 0, 0, 0, -qJD(6) * t372 + t548, -qJD(6) * t373 + t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t523 * t839, -t527 * t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, 0, -t523 * t646 + t885, -t527 * t646 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t580, -t609, t81, t259 * t696 + t948, t508, qJD(2) * t21 + qJD(4) * t13 - qJD(5) * t17 + t162 - t831, qJD(2) * t22 + qJD(4) * t14 - qJD(5) * t19 + t163 + t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, -t608, t940, t953, t506, t582, t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341 * t696 + t940, t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, 0, qJD(5) * t372 + t884, qJD(5) * t373 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, 0, t523 * t840 - t885, t527 * t840 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
