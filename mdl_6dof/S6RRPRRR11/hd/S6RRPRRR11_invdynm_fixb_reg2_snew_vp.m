% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRRR11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 00:23
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRRR11_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR11_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR11_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR11_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR11_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR11_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 00:22:17
% EndTime: 2019-05-07 00:22:55
% DurationCPUTime: 40.83s
% Computational Cost: add. (329342->928), mult. (686898->1160), div. (0->0), fcn. (456348->10), ass. (0->603)
t1556 = sin(qJ(2));
t1550 = t1556 ^ 2;
t1563 = qJD(1) ^ 2;
t1545 = t1550 * t1563;
t1733 = qJD(2) ^ 2;
t1532 = -t1545 - t1733;
t1561 = cos(qJ(2));
t1673 = t1561 * t1563;
t1653 = t1556 * t1673;
t1525 = -qJDD(2) + t1653;
t1674 = t1561 * t1525;
t1474 = -t1532 * t1556 + t1674;
t1714 = qJD(1) * t1561;
t1542 = qJD(2) * t1714;
t1665 = t1556 * qJDD(1);
t1513 = 0.2e1 * t1542 + t1665;
t1557 = sin(qJ(1));
t1562 = cos(qJ(1));
t1782 = pkin(6) * (t1474 * t1562 + t1513 * t1557);
t1781 = pkin(6) * (t1474 * t1557 - t1513 * t1562);
t1730 = t1561 ^ 2;
t1672 = t1730 * t1563;
t1533 = t1672 + t1733;
t1524 = qJDD(2) + t1653;
t1675 = t1561 * t1524;
t1471 = -t1533 * t1556 + t1675;
t1780 = pkin(1) * t1471;
t1690 = t1524 * t1556;
t1476 = t1533 * t1561 + t1690;
t1544 = t1561 * qJDD(1);
t1715 = qJD(1) * t1556;
t1654 = qJD(2) * t1715;
t1515 = t1544 - 0.2e1 * t1654;
t1779 = pkin(6) * (t1476 * t1562 + t1515 * t1557);
t1778 = pkin(6) * (t1476 * t1557 - t1515 * t1562);
t1777 = pkin(7) * t1471;
t1776 = pkin(7) * t1474;
t1531 = -t1545 + t1733;
t1473 = -t1531 * t1556 + t1675;
t1775 = t1473 * t1557 - t1562 * t1665;
t1774 = t1473 * t1562 + t1557 * t1665;
t1771 = 2 * qJD(3);
t1689 = t1525 * t1556;
t1465 = t1532 * t1561 + t1689;
t1770 = pkin(1) * t1465;
t1769 = pkin(7) * t1465;
t1768 = pkin(7) * t1476;
t1553 = sin(qJ(6));
t1555 = sin(qJ(4));
t1560 = cos(qJ(4));
t1507 = qJD(2) * t1555 + t1560 * t1714;
t1508 = qJD(2) * t1560 - t1555 * t1714;
t1554 = sin(qJ(5));
t1559 = cos(qJ(5));
t1451 = t1559 * t1507 + t1508 * t1554;
t1453 = -t1507 * t1554 + t1508 * t1559;
t1558 = cos(qJ(6));
t1388 = t1558 * t1451 + t1453 * t1553;
t1390 = -t1451 * t1553 + t1453 * t1558;
t1321 = t1390 * t1388;
t1514 = t1542 + t1665;
t1500 = qJDD(4) + t1514;
t1497 = qJDD(5) + t1500;
t1492 = qJDD(6) + t1497;
t1754 = -t1321 + t1492;
t1767 = t1553 * t1754;
t1398 = t1453 * t1451;
t1752 = -t1398 + t1497;
t1766 = t1554 * t1752;
t1461 = t1508 * t1507;
t1750 = -t1461 + t1500;
t1765 = t1555 * t1750;
t1764 = t1558 * t1754;
t1763 = t1559 * t1752;
t1762 = t1560 * t1750;
t1547 = t1556 * g(3);
t1528 = g(1) * t1562 + g(2) * t1557;
t1495 = -pkin(1) * t1563 + qJDD(1) * pkin(7) - t1528;
t1717 = qJ(3) * t1556;
t1726 = pkin(2) * t1561;
t1624 = -t1717 - t1726;
t1644 = t1563 * t1624 + t1495;
t1573 = -pkin(2) * t1733 + t1561 * t1644 - t1547;
t1568 = qJD(2) * t1771 + t1573;
t1761 = t1568 + (qJDD(2) - t1525) * qJ(3) - pkin(2) * t1532;
t1534 = t1672 - t1733;
t1477 = t1534 * t1561 + t1689;
t1758 = t1477 * t1557 - t1562 * t1544;
t1757 = t1477 * t1562 + t1557 * t1544;
t1622 = t1514 + t1542;
t1756 = qJ(3) * t1622;
t1526 = pkin(3) * t1715 - qJD(2) * pkin(8);
t1527 = t1557 * g(1) - t1562 * g(2);
t1603 = -qJDD(1) * pkin(1) - t1527;
t1748 = -pkin(2) * t1654 + t1715 * t1771;
t1565 = t1603 - t1748 - t1756;
t1621 = -t1544 + t1654;
t1601 = t1621 * pkin(2);
t1355 = t1601 + t1621 * pkin(8) - t1526 * t1715 + (-pkin(3) * t1730 - pkin(7)) * t1563 + t1565;
t1721 = t1561 * g(3);
t1604 = -qJDD(2) * pkin(2) - qJ(3) * t1733 + qJDD(3) + t1721;
t1378 = -qJDD(2) * pkin(8) + (t1514 - t1542) * pkin(3) + (-pkin(8) * t1673 + t1644) * t1556 + t1604;
t1292 = t1555 * t1355 - t1560 * t1378;
t1293 = t1560 * t1355 + t1555 * t1378;
t1755 = -t1560 * t1292 + t1555 * t1293;
t1447 = -t1507 * qJD(4) + t1560 * qJDD(2) + t1555 * t1621;
t1632 = t1555 * qJDD(2) - t1560 * t1621;
t1586 = -qJD(4) * t1508 - t1632;
t1349 = -t1451 * qJD(5) + t1559 * t1447 + t1554 * t1586;
t1634 = -t1554 * t1447 + t1559 * t1586;
t1589 = qJD(5) * t1453 - t1634;
t1260 = -t1388 * qJD(6) + t1558 * t1349 - t1553 * t1589;
t1538 = qJD(4) + t1715;
t1530 = qJD(5) + t1538;
t1523 = qJD(6) + t1530;
t1369 = t1523 * t1388;
t1753 = -t1369 + t1260;
t1434 = t1530 * t1451;
t1751 = -t1434 + t1349;
t1315 = t1434 + t1349;
t1490 = t1538 * t1507;
t1749 = -t1490 + t1447;
t1414 = t1490 + t1447;
t1470 = -t1534 * t1556 + t1674;
t1422 = t1556 * t1644 + t1604;
t1747 = -pkin(2) * t1524 + qJ(3) * t1533 + t1422;
t1268 = pkin(4) * t1750 - pkin(9) * t1414 - t1292;
t1483 = pkin(4) * t1538 - pkin(9) * t1508;
t1731 = t1507 ^ 2;
t1275 = -pkin(4) * t1731 + pkin(9) * t1586 - t1538 * t1483 + t1293;
t1195 = -t1559 * t1268 + t1554 * t1275;
t1166 = pkin(5) * t1752 - pkin(10) * t1315 - t1195;
t1196 = t1554 * t1268 + t1559 * t1275;
t1429 = pkin(5) * t1530 - pkin(10) * t1453;
t1732 = t1451 ^ 2;
t1173 = -pkin(5) * t1732 - pkin(10) * t1589 - t1530 * t1429 + t1196;
t1124 = -t1558 * t1166 + t1173 * t1553;
t1125 = t1166 * t1553 + t1173 * t1558;
t1090 = t1124 * t1553 + t1558 * t1125;
t1089 = -t1124 * t1558 + t1125 * t1553;
t1710 = t1089 * t1559;
t1066 = t1090 * t1554 + t1710;
t1711 = t1089 * t1554;
t1067 = t1090 * t1559 - t1711;
t1050 = t1066 * t1560 + t1067 * t1555;
t1712 = qJDD(2) * qJ(3);
t1377 = t1712 - t1621 * pkin(3) - pkin(8) * t1672 + (t1771 + t1526) * qJD(2) + t1573;
t1296 = -t1586 * pkin(4) - t1731 * pkin(9) + t1508 * t1483 + t1377;
t1227 = pkin(5) * t1589 - pkin(10) * t1732 + t1453 * t1429 + t1296;
t1078 = -pkin(5) * t1227 + pkin(10) * t1090;
t1045 = -pkin(4) * t1227 + pkin(9) * t1067 - pkin(10) * t1711 + t1078 * t1559;
t1049 = -pkin(9) * t1066 - pkin(10) * t1710 - t1078 * t1554;
t1643 = t1555 * t1045 - t1560 * t1049;
t1729 = pkin(2) + pkin(8);
t1745 = qJ(3) * t1227 - t1050 * t1729 - t1643;
t1635 = -t1553 * t1349 - t1558 * t1589;
t1230 = (-qJD(6) + t1523) * t1390 + t1635;
t1232 = t1369 + t1260;
t1169 = t1230 * t1553 - t1232 * t1558;
t1171 = t1230 * t1558 + t1232 * t1553;
t1120 = t1169 * t1559 + t1171 * t1554;
t1122 = -t1169 * t1554 + t1171 * t1559;
t1085 = t1120 * t1560 + t1122 * t1555;
t1385 = t1388 ^ 2;
t1386 = t1390 ^ 2;
t1284 = -t1385 - t1386;
t1073 = -pkin(5) * t1284 + pkin(10) * t1171 + t1090;
t1074 = -pkin(10) * t1169 - t1089;
t1053 = -pkin(4) * t1284 + pkin(9) * t1122 + t1073 * t1559 + t1074 * t1554;
t1055 = -pkin(9) * t1120 - t1073 * t1554 + t1074 * t1559;
t1642 = t1555 * t1053 - t1560 * t1055;
t1744 = qJ(3) * t1284 - t1085 * t1729 - t1642;
t1147 = t1195 * t1554 + t1559 * t1196;
t1146 = -t1195 * t1559 + t1196 * t1554;
t1709 = t1146 * t1560;
t1100 = t1147 * t1555 + t1709;
t1140 = -pkin(4) * t1296 + pkin(9) * t1147;
t1600 = pkin(9) * t1709 + t1555 * t1140;
t1743 = qJ(3) * t1296 - t1100 * t1729 - t1600;
t1520 = t1523 ^ 2;
t1310 = -t1520 - t1385;
t1249 = t1310 * t1553 + t1764;
t1250 = t1310 * t1558 - t1767;
t1187 = t1249 * t1559 + t1250 * t1554;
t1188 = -t1249 * t1554 + t1250 * t1559;
t1137 = t1187 * t1560 + t1188 * t1555;
t1370 = t1523 * t1390;
t1588 = qJD(6) * t1390 - t1635;
t1228 = t1370 + t1588;
t1707 = t1227 * t1558;
t1143 = -pkin(5) * t1228 + pkin(10) * t1250 - t1707;
t1708 = t1227 * t1553;
t1179 = -pkin(10) * t1249 + t1708;
t1091 = -pkin(4) * t1228 + pkin(9) * t1188 + t1143 * t1559 + t1179 * t1554;
t1094 = -pkin(9) * t1187 - t1143 * t1554 + t1179 * t1559;
t1641 = t1555 * t1091 - t1560 * t1094;
t1742 = qJ(3) * t1228 - t1137 * t1729 - t1641;
t1361 = -t1386 - t1520;
t1306 = t1321 + t1492;
t1704 = t1306 * t1553;
t1276 = t1361 * t1558 - t1704;
t1703 = t1306 * t1558;
t1277 = -t1361 * t1553 - t1703;
t1199 = t1276 * t1559 + t1277 * t1554;
t1200 = -t1276 * t1554 + t1277 * t1559;
t1148 = t1199 * t1560 + t1200 * t1555;
t1151 = -pkin(5) * t1753 + pkin(10) * t1277 + t1708;
t1185 = -pkin(10) * t1276 + t1707;
t1092 = -pkin(4) * t1753 + pkin(9) * t1200 + t1151 * t1559 + t1185 * t1554;
t1099 = -pkin(9) * t1199 - t1151 * t1554 + t1185 * t1559;
t1640 = t1555 * t1092 - t1560 * t1099;
t1741 = qJ(3) * t1753 - t1148 * t1729 - t1640;
t1313 = (-qJD(5) + t1530) * t1453 + t1634;
t1255 = t1313 * t1554 - t1315 * t1559;
t1257 = t1313 * t1559 + t1315 * t1554;
t1191 = t1255 * t1560 + t1257 * t1555;
t1450 = t1453 ^ 2;
t1352 = -t1450 - t1732;
t1126 = -pkin(4) * t1352 + pkin(9) * t1257 + t1147;
t1135 = -pkin(9) * t1255 - t1146;
t1639 = t1555 * t1126 - t1560 * t1135;
t1740 = qJ(3) * t1352 - t1191 * t1729 - t1639;
t1739 = qJ(3) * t1377 - t1729 * t1755;
t1529 = t1530 ^ 2;
t1381 = -t1529 - t1732;
t1303 = t1381 * t1554 + t1763;
t1304 = t1381 * t1559 - t1766;
t1242 = t1303 * t1560 + t1304 * t1555;
t1435 = t1530 * t1453;
t1311 = t1435 + t1589;
t1705 = t1296 * t1559;
t1207 = -pkin(4) * t1311 + pkin(9) * t1304 - t1705;
t1706 = t1296 * t1554;
t1240 = -pkin(9) * t1303 + t1706;
t1638 = t1555 * t1207 - t1560 * t1240;
t1738 = qJ(3) * t1311 - t1242 * t1729 - t1638;
t1418 = -t1450 - t1529;
t1373 = t1398 + t1497;
t1702 = t1373 * t1554;
t1326 = t1418 * t1559 - t1702;
t1701 = t1373 * t1559;
t1327 = -t1418 * t1554 - t1701;
t1264 = t1326 * t1560 + t1327 * t1555;
t1208 = -pkin(4) * t1751 + pkin(9) * t1327 + t1706;
t1258 = -pkin(9) * t1326 + t1705;
t1637 = t1555 * t1208 - t1560 * t1258;
t1737 = qJ(3) * t1751 - t1264 * t1729 - t1637;
t1411 = (qJD(4) - t1538) * t1508 + t1632;
t1344 = -t1411 * t1555 - t1414 * t1560;
t1499 = t1508 ^ 2;
t1437 = -t1499 - t1731;
t1736 = qJ(3) * t1437 - t1344 * t1729 - t1755;
t1535 = t1538 ^ 2;
t1448 = -t1535 - t1731;
t1375 = t1555 * t1448 + t1762;
t1410 = (qJD(4) + t1538) * t1508 + t1632;
t1677 = t1555 * t1377;
t1735 = qJ(3) * t1410 - t1375 * t1729 + t1677;
t1366 = t1560 * t1377;
t1663 = -t1499 - t1535;
t1439 = t1461 + t1500;
t1676 = t1555 * t1439;
t1383 = t1560 * t1663 - t1676;
t1734 = qJ(3) * t1749 - t1383 * t1729 + t1366;
t1725 = pkin(3) * t1755;
t1724 = pkin(3) * t1344;
t1723 = pkin(3) * t1377;
t1662 = t1550 + t1730;
t1517 = t1662 * qJDD(1);
t1521 = t1545 + t1672;
t1722 = pkin(6) * (t1517 * t1557 + t1521 * t1562);
t1720 = t1563 * pkin(7);
t1716 = qJD(1) * qJD(2);
t1700 = t1439 * t1560;
t1494 = -t1603 + t1720;
t1699 = t1494 * t1556;
t1698 = t1494 * t1561;
t1697 = t1513 * t1556;
t1463 = t1515 * t1561;
t1692 = t1523 * t1553;
t1691 = t1523 * t1558;
t1688 = t1530 * t1554;
t1687 = t1530 * t1559;
t1682 = t1538 * t1508;
t1681 = t1538 * t1555;
t1680 = t1538 * t1560;
t1679 = t1555 * t1146;
t1088 = pkin(5) * t1089;
t1670 = pkin(4) * t1066 + t1088;
t1167 = pkin(5) * t1169;
t1669 = pkin(4) * t1120 + t1167;
t1668 = -t1499 + t1535;
t1667 = pkin(1) * t1521 + pkin(7) * t1517;
t1660 = t1556 * t1321;
t1659 = t1561 * t1321;
t1658 = t1556 * t1398;
t1657 = t1561 * t1398;
t1656 = t1556 * t1461;
t1655 = t1561 * t1461;
t1652 = pkin(4) * t1326 - t1196;
t1145 = pkin(4) * t1146;
t1647 = -pkin(3) * t1100 - t1145;
t1253 = pkin(4) * t1255;
t1646 = -pkin(3) * t1191 - t1253;
t1481 = t1556 * t1495 + t1721;
t1482 = t1561 * t1495 - t1547;
t1417 = t1481 * t1556 + t1561 * t1482;
t1633 = -t1527 * t1557 - t1562 * t1528;
t1631 = t1557 * t1653;
t1630 = t1562 * t1653;
t1629 = -pkin(3) * t1050 - t1670;
t1628 = -pkin(3) * t1085 - t1669;
t1627 = -pkin(3) * t1383 + t1293;
t1519 = qJDD(1) * t1562 - t1557 * t1563;
t1626 = -pkin(6) * t1519 - g(3) * t1557;
t1419 = t1568 + t1712;
t1625 = -pkin(2) * t1422 + qJ(3) * t1419;
t1623 = pkin(2) * t1556 - qJ(3) * t1561;
t1620 = pkin(5) * t1249 - t1124;
t1619 = pkin(4) * t1303 - t1195;
t1618 = pkin(3) * t1410 + t1366;
t1617 = pkin(3) * t1749 - t1677;
t1168 = -t1228 * t1553 + t1558 * t1753;
t1170 = -t1228 * t1558 - t1553 * t1753;
t1615 = t1168 * t1559 + t1170 * t1554;
t1223 = t1388 * t1692 - t1558 * t1588;
t1224 = t1388 * t1691 + t1553 * t1588;
t1614 = t1223 * t1559 + t1224 * t1554;
t1225 = t1260 * t1553 + t1390 * t1691;
t1226 = t1260 * t1558 - t1390 * t1692;
t1613 = t1225 * t1559 + t1226 * t1554;
t1365 = -t1386 + t1520;
t1278 = t1365 * t1558 + t1767;
t1280 = -t1365 * t1553 + t1764;
t1612 = t1278 * t1559 + t1280 * t1554;
t1364 = t1385 - t1520;
t1279 = t1364 * t1553 + t1703;
t1281 = t1364 * t1558 - t1704;
t1611 = t1279 * t1559 + t1281 * t1554;
t1235 = t1555 * t1292 + t1560 * t1293;
t1294 = (-t1388 * t1553 - t1390 * t1558) * t1523;
t1295 = (-t1388 * t1558 + t1390 * t1553) * t1523;
t1610 = t1294 * t1559 + t1295 * t1554;
t1609 = -t1311 * t1554 + t1559 * t1751;
t1431 = -t1450 + t1529;
t1608 = t1431 * t1559 + t1766;
t1430 = -t1529 + t1732;
t1607 = t1430 * t1554 + t1701;
t1416 = t1481 * t1561 - t1482 * t1556;
t1464 = t1531 * t1561 + t1690;
t1606 = t1527 * t1562 - t1528 * t1557;
t1605 = -pkin(3) * t1264 - t1652;
t1602 = pkin(4) * t1187 + t1620;
t1599 = -pkin(3) * t1375 + t1292;
t1590 = t1349 * t1554 + t1453 * t1687;
t1587 = pkin(5) * t1276 - t1125;
t1585 = (-t1451 * t1554 - t1453 * t1559) * t1530;
t1584 = -pkin(3) * t1242 - t1619;
t1583 = pkin(4) * t1199 + t1587;
t1582 = pkin(3) * t1227 - t1560 * t1045 - t1555 * t1049;
t1581 = pkin(3) * t1284 - t1560 * t1053 - t1555 * t1055;
t1580 = pkin(3) * t1228 - t1560 * t1091 - t1555 * t1094;
t1579 = pkin(3) * t1753 - t1560 * t1092 - t1555 * t1099;
t1578 = pkin(3) * t1352 - t1560 * t1126 - t1555 * t1135;
t1577 = pkin(3) * t1311 - t1560 * t1207 - t1555 * t1240;
t1576 = pkin(3) * t1751 - t1560 * t1208 - t1555 * t1258;
t1575 = pkin(3) * t1437 - t1235;
t1572 = -pkin(3) * t1137 - t1602;
t1571 = pkin(3) * t1296 + pkin(9) * t1679 - t1560 * t1140;
t1569 = -pkin(3) * t1148 - t1583;
t1567 = t1451 * t1688 - t1559 * t1589;
t1564 = t1494 - t1601 + t1748;
t1522 = t1545 - t1672;
t1518 = qJDD(1) * t1557 + t1562 * t1563;
t1509 = t1623 * qJDD(1);
t1502 = t1662 * t1716;
t1491 = -pkin(6) * t1518 + g(3) * t1562;
t1488 = -t1535 + t1731;
t1487 = qJDD(2) * t1557 + t1502 * t1562;
t1486 = t1514 * t1561 - t1550 * t1716;
t1485 = -qJDD(2) * t1562 + t1502 * t1557;
t1484 = t1556 * t1621 - t1716 * t1730;
t1467 = t1622 * t1556;
t1459 = t1499 - t1731;
t1457 = pkin(6) * (t1517 * t1562 - t1521 * t1557);
t1456 = t1463 - t1697;
t1455 = t1513 * t1561 + t1515 * t1556;
t1446 = t1486 * t1562 - t1631;
t1445 = t1484 * t1562 + t1631;
t1444 = t1486 * t1557 + t1630;
t1443 = t1484 * t1557 - t1630;
t1428 = -t1698 - t1769;
t1427 = -t1699 - t1777;
t1426 = (-t1507 * t1560 + t1508 * t1555) * t1538;
t1425 = (-t1507 * t1555 - t1508 * t1560) * t1538;
t1424 = t1456 * t1562 + t1522 * t1557;
t1423 = t1456 * t1557 - t1522 * t1562;
t1421 = t1481 - t1780;
t1420 = t1482 - t1770;
t1409 = pkin(1) * t1515 + t1698 - t1768;
t1408 = -pkin(1) * t1513 - t1699 + t1776;
t1405 = qJ(3) * t1521 + t1422;
t1404 = pkin(2) * t1521 + t1419;
t1403 = t1447 * t1560 - t1508 * t1681;
t1402 = t1447 * t1555 + t1508 * t1680;
t1401 = -t1507 * t1680 + t1555 * t1586;
t1400 = -t1507 * t1681 - t1560 * t1586;
t1399 = t1564 + t1756;
t1397 = t1425 * t1556 + t1500 * t1561;
t1396 = -t1425 * t1561 + t1500 * t1556;
t1395 = t1450 - t1732;
t1394 = t1488 * t1560 - t1676;
t1393 = -t1555 * t1668 + t1762;
t1392 = t1488 * t1555 + t1700;
t1391 = t1560 * t1668 + t1765;
t1387 = pkin(1) * t1494 + pkin(7) * t1417;
t1384 = -t1555 * t1663 - t1700;
t1382 = -t1720 + (-t1515 + t1621) * pkin(2) + t1565;
t1380 = (t1513 + t1622) * qJ(3) + t1564;
t1379 = t1417 + t1667;
t1376 = t1448 * t1560 - t1765;
t1363 = (-t1451 * t1559 + t1453 * t1554) * t1530;
t1360 = -t1747 + t1780;
t1359 = t1402 * t1556 + t1655;
t1358 = -t1400 * t1556 - t1655;
t1357 = -t1402 * t1561 + t1656;
t1356 = t1400 * t1561 - t1656;
t1354 = -t1761 + t1770;
t1351 = t1419 * t1561 + t1422 * t1556;
t1350 = t1419 * t1556 - t1422 * t1561;
t1346 = -t1411 * t1560 + t1555 * t1414;
t1345 = -t1410 * t1560 - t1555 * t1749;
t1343 = -t1555 * t1410 + t1560 * t1749;
t1342 = -pkin(2) * t1697 + t1380 * t1561 + t1769;
t1341 = -qJ(3) * t1463 - t1382 * t1556 + t1777;
t1340 = -t1404 * t1556 + t1405 * t1561;
t1339 = t1391 * t1556 + t1414 * t1561;
t1338 = t1392 * t1556 - t1411 * t1561;
t1337 = -t1391 * t1561 + t1414 * t1556;
t1336 = -t1392 * t1561 - t1411 * t1556;
t1335 = t1430 * t1559 - t1702;
t1334 = -t1431 * t1554 + t1763;
t1331 = -t1776 + t1556 * t1380 + (pkin(1) + t1726) * t1513;
t1330 = t1768 + t1561 * t1382 + (-pkin(1) - t1717) * t1515;
t1329 = t1383 * t1556 + t1561 * t1749;
t1328 = -t1383 * t1561 + t1556 * t1749;
t1323 = t1375 * t1556 + t1410 * t1561;
t1322 = -t1375 * t1561 + t1410 * t1556;
t1320 = t1386 - t1385;
t1319 = t1404 * t1561 + t1405 * t1556 + t1667;
t1318 = t1343 * t1556 + t1459 * t1561;
t1317 = -t1343 * t1561 + t1459 * t1556;
t1312 = -t1435 + t1589;
t1309 = t1349 * t1559 - t1453 * t1688;
t1308 = t1451 * t1687 + t1554 * t1589;
t1299 = t1344 * t1556 + t1437 * t1561;
t1298 = -t1344 * t1561 + t1437 * t1556;
t1289 = t1363 * t1560 - t1555 * t1585;
t1288 = t1555 * t1363 + t1560 * t1585;
t1287 = t1288 * t1556 + t1497 * t1561;
t1286 = -t1288 * t1561 + t1497 * t1556;
t1285 = -pkin(1) * t1350 - t1625;
t1283 = -qJ(3) * t1346 + t1724;
t1282 = -pkin(7) * t1350 - t1399 * t1623;
t1272 = t1335 * t1560 - t1555 * t1607;
t1271 = t1334 * t1560 - t1555 * t1608;
t1270 = t1555 * t1335 + t1560 * t1607;
t1269 = t1555 * t1334 + t1560 * t1608;
t1265 = -t1555 * t1326 + t1327 * t1560;
t1263 = -t1384 * t1729 + t1617;
t1262 = pkin(7) * t1351 + (pkin(1) - t1624) * t1399;
t1261 = -t1376 * t1729 + t1618;
t1256 = -t1311 * t1559 - t1554 * t1751;
t1247 = t1309 * t1560 - t1555 * t1590;
t1246 = t1308 * t1560 - t1555 * t1567;
t1245 = t1555 * t1309 + t1560 * t1590;
t1244 = t1555 * t1308 + t1560 * t1567;
t1243 = -t1555 * t1303 + t1304 * t1560;
t1241 = -qJ(3) * t1384 - t1627;
t1238 = -qJ(3) * t1376 - t1599;
t1237 = -t1294 * t1554 + t1295 * t1559;
t1229 = -t1370 + t1588;
t1222 = t1245 * t1556 + t1657;
t1221 = t1244 * t1556 - t1657;
t1220 = -t1245 * t1561 + t1658;
t1219 = -t1244 * t1561 - t1658;
t1218 = t1269 * t1556 + t1315 * t1561;
t1217 = t1270 * t1556 - t1312 * t1561;
t1216 = -t1269 * t1561 + t1315 * t1556;
t1215 = -t1270 * t1561 - t1312 * t1556;
t1214 = -pkin(1) * t1328 - t1734;
t1213 = t1264 * t1556 + t1561 * t1751;
t1212 = -t1264 * t1561 + t1556 * t1751;
t1211 = -pkin(1) * t1322 - t1735;
t1210 = t1377 * t1561 + t1556 * t1755;
t1209 = t1377 * t1556 - t1561 * t1755;
t1206 = t1242 * t1556 + t1311 * t1561;
t1205 = -t1242 * t1561 + t1311 * t1556;
t1204 = -t1279 * t1554 + t1281 * t1559;
t1203 = -t1278 * t1554 + t1280 * t1559;
t1193 = -t1555 * t1255 + t1257 * t1560;
t1192 = t1256 * t1560 - t1555 * t1609;
t1190 = t1555 * t1256 + t1560 * t1609;
t1189 = -t1346 * t1729 + t1575;
t1183 = t1237 * t1560 - t1555 * t1610;
t1182 = t1555 * t1237 + t1560 * t1610;
t1181 = t1190 * t1556 + t1395 * t1561;
t1180 = -t1190 * t1561 + t1395 * t1556;
t1178 = t1182 * t1556 + t1492 * t1561;
t1177 = -t1182 * t1561 + t1492 * t1556;
t1176 = -qJ(3) * t1235 + t1725;
t1175 = t1191 * t1556 + t1352 * t1561;
t1174 = -t1191 * t1561 + t1352 * t1556;
t1172 = -pkin(7) * t1328 + t1241 * t1561 - t1263 * t1556;
t1164 = -t1225 * t1554 + t1226 * t1559;
t1163 = -t1223 * t1554 + t1224 * t1559;
t1160 = -pkin(7) * t1322 + t1238 * t1561 - t1261 * t1556;
t1159 = -pkin(1) * t1298 - t1736;
t1158 = -t1235 * t1729 + t1723;
t1157 = -pkin(1) * t1384 + pkin(7) * t1329 + t1241 * t1556 + t1263 * t1561;
t1156 = -pkin(1) * t1376 + pkin(7) * t1323 + t1238 * t1556 + t1261 * t1561;
t1155 = t1204 * t1560 - t1555 * t1611;
t1154 = t1203 * t1560 - t1555 * t1612;
t1153 = t1555 * t1204 + t1560 * t1611;
t1152 = t1555 * t1203 + t1560 * t1612;
t1150 = -pkin(7) * t1298 - t1189 * t1556 + t1283 * t1561;
t1149 = -t1555 * t1199 + t1200 * t1560;
t1142 = -pkin(1) * t1346 + pkin(7) * t1299 + t1189 * t1561 + t1283 * t1556;
t1141 = -qJ(3) * t1265 - t1605;
t1139 = -pkin(1) * t1209 - t1739;
t1138 = -t1555 * t1187 + t1188 * t1560;
t1136 = -qJ(3) * t1243 - t1584;
t1133 = t1152 * t1556 + t1232 * t1561;
t1132 = t1153 * t1556 - t1229 * t1561;
t1131 = -t1152 * t1561 + t1232 * t1556;
t1130 = -t1153 * t1561 - t1229 * t1556;
t1129 = t1148 * t1556 + t1561 * t1753;
t1128 = -t1148 * t1561 + t1556 * t1753;
t1127 = -t1265 * t1729 + t1576;
t1121 = -t1168 * t1554 + t1170 * t1559;
t1116 = -qJ(3) * t1193 - t1646;
t1115 = t1164 * t1560 - t1555 * t1613;
t1114 = t1163 * t1560 - t1555 * t1614;
t1113 = t1555 * t1164 + t1560 * t1613;
t1112 = t1555 * t1163 + t1560 * t1614;
t1111 = -t1243 * t1729 + t1577;
t1110 = t1137 * t1556 + t1228 * t1561;
t1109 = -t1137 * t1561 + t1228 * t1556;
t1108 = t1113 * t1556 + t1659;
t1107 = t1112 * t1556 - t1659;
t1106 = -t1113 * t1561 + t1660;
t1105 = -t1112 * t1561 - t1660;
t1104 = -pkin(1) * t1212 - t1737;
t1103 = -pkin(7) * t1209 - t1158 * t1556 + t1176 * t1561;
t1102 = -pkin(1) * t1205 - t1738;
t1101 = t1147 * t1560 - t1679;
t1097 = t1100 * t1556 + t1296 * t1561;
t1096 = -t1100 * t1561 + t1296 * t1556;
t1095 = -pkin(1) * t1235 + pkin(7) * t1210 + t1158 * t1561 + t1176 * t1556;
t1087 = -t1555 * t1120 + t1122 * t1560;
t1086 = t1121 * t1560 - t1555 * t1615;
t1084 = t1555 * t1121 + t1560 * t1615;
t1083 = -pkin(7) * t1212 - t1127 * t1556 + t1141 * t1561;
t1082 = t1084 * t1556 + t1320 * t1561;
t1081 = -t1084 * t1561 + t1320 * t1556;
t1080 = t1085 * t1556 + t1284 * t1561;
t1079 = -t1085 * t1561 + t1284 * t1556;
t1077 = -pkin(1) * t1265 + pkin(7) * t1213 + t1127 * t1561 + t1141 * t1556;
t1076 = -pkin(7) * t1205 - t1111 * t1556 + t1136 * t1561;
t1075 = -pkin(1) * t1243 + pkin(7) * t1206 + t1111 * t1561 + t1136 * t1556;
t1072 = -t1193 * t1729 + t1578;
t1071 = -qJ(3) * t1149 - t1569;
t1070 = -pkin(1) * t1174 - t1740;
t1069 = -qJ(3) * t1138 - t1572;
t1068 = -qJ(3) * t1101 - t1647;
t1063 = -pkin(7) * t1174 - t1072 * t1556 + t1116 * t1561;
t1062 = -t1101 * t1729 + t1571;
t1061 = -pkin(1) * t1193 + pkin(7) * t1175 + t1072 * t1561 + t1116 * t1556;
t1060 = -t1149 * t1729 + t1579;
t1059 = -t1138 * t1729 + t1580;
t1058 = -qJ(3) * t1087 - t1628;
t1057 = -pkin(1) * t1128 - t1741;
t1056 = -pkin(1) * t1096 - t1743;
t1052 = -pkin(1) * t1109 - t1742;
t1051 = -t1555 * t1066 + t1067 * t1560;
t1047 = t1050 * t1556 + t1227 * t1561;
t1046 = -t1050 * t1561 + t1227 * t1556;
t1044 = -pkin(7) * t1128 - t1060 * t1556 + t1071 * t1561;
t1043 = -pkin(1) * t1149 + pkin(7) * t1129 + t1060 * t1561 + t1071 * t1556;
t1042 = -pkin(7) * t1096 - t1062 * t1556 + t1068 * t1561;
t1041 = -pkin(7) * t1109 - t1059 * t1556 + t1069 * t1561;
t1040 = -pkin(1) * t1138 + pkin(7) * t1110 + t1059 * t1561 + t1069 * t1556;
t1039 = -pkin(1) * t1101 + pkin(7) * t1097 + t1062 * t1561 + t1068 * t1556;
t1038 = -t1087 * t1729 + t1581;
t1037 = -pkin(1) * t1079 - t1744;
t1036 = -qJ(3) * t1051 - t1629;
t1035 = -pkin(7) * t1079 - t1038 * t1556 + t1058 * t1561;
t1034 = -pkin(1) * t1087 + pkin(7) * t1080 + t1038 * t1561 + t1058 * t1556;
t1033 = -t1051 * t1729 + t1582;
t1032 = -pkin(1) * t1046 - t1745;
t1031 = -pkin(7) * t1046 - t1033 * t1556 + t1036 * t1561;
t1030 = -pkin(1) * t1051 + pkin(7) * t1047 + t1033 * t1561 + t1036 * t1556;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1519, 0, -t1518, 0, t1626, -t1491, -t1606, -pkin(6) * t1606, t1446, t1424, t1774, t1445, t1757, t1487, -t1557 * t1421 + t1562 * t1427 + t1778, -t1557 * t1420 + t1562 * t1428 - t1781, t1416 * t1562 - t1722, -pkin(6) * (t1417 * t1557 + t1494 * t1562) - (pkin(1) * t1557 - pkin(7) * t1562) * t1416, t1487, -t1774, -t1757, t1446, t1424, t1445, t1340 * t1562 - t1509 * t1557 - t1722, t1562 * t1341 - t1557 * t1360 - t1778, t1562 * t1342 - t1557 * t1354 + t1781, t1562 * t1282 - t1557 * t1285 - pkin(6) * (t1351 * t1557 + t1399 * t1562), t1359 * t1562 + t1403 * t1557, t1318 * t1562 + t1345 * t1557, t1339 * t1562 + t1393 * t1557, t1358 * t1562 - t1401 * t1557, t1338 * t1562 + t1394 * t1557, t1397 * t1562 + t1426 * t1557, t1562 * t1160 - t1557 * t1211 - pkin(6) * (t1323 * t1557 - t1376 * t1562), t1562 * t1172 - t1557 * t1214 - pkin(6) * (t1329 * t1557 - t1384 * t1562), t1562 * t1150 - t1557 * t1159 - pkin(6) * (t1299 * t1557 - t1346 * t1562), t1562 * t1103 - t1557 * t1139 - pkin(6) * (t1210 * t1557 - t1235 * t1562), t1222 * t1562 + t1247 * t1557, t1181 * t1562 + t1192 * t1557, t1218 * t1562 + t1271 * t1557, t1221 * t1562 + t1246 * t1557, t1217 * t1562 + t1272 * t1557, t1287 * t1562 + t1289 * t1557, t1562 * t1076 - t1557 * t1102 - pkin(6) * (t1206 * t1557 - t1243 * t1562), t1562 * t1083 - t1557 * t1104 - pkin(6) * (t1213 * t1557 - t1265 * t1562), t1562 * t1063 - t1557 * t1070 - pkin(6) * (t1175 * t1557 - t1193 * t1562), t1562 * t1042 - t1557 * t1056 - pkin(6) * (t1097 * t1557 - t1101 * t1562), t1108 * t1562 + t1115 * t1557, t1082 * t1562 + t1086 * t1557, t1133 * t1562 + t1154 * t1557, t1107 * t1562 + t1114 * t1557, t1132 * t1562 + t1155 * t1557, t1178 * t1562 + t1183 * t1557, t1562 * t1041 - t1557 * t1052 - pkin(6) * (t1110 * t1557 - t1138 * t1562), t1562 * t1044 - t1557 * t1057 - pkin(6) * (t1129 * t1557 - t1149 * t1562), t1562 * t1035 - t1557 * t1037 - pkin(6) * (t1080 * t1557 - t1087 * t1562), t1562 * t1031 - t1557 * t1032 - pkin(6) * (t1047 * t1557 - t1051 * t1562); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1518, 0, t1519, 0, t1491, t1626, t1633, pkin(6) * t1633, t1444, t1423, t1775, t1443, t1758, t1485, t1562 * t1421 + t1557 * t1427 - t1779, t1562 * t1420 + t1557 * t1428 + t1782, t1416 * t1557 + t1457, pkin(6) * (t1417 * t1562 - t1494 * t1557) - (-pkin(1) * t1562 - pkin(7) * t1557) * t1416, t1485, -t1775, -t1758, t1444, t1423, t1443, t1340 * t1557 + t1509 * t1562 + t1457, t1557 * t1341 + t1562 * t1360 + t1779, t1557 * t1342 + t1562 * t1354 - t1782, t1557 * t1282 + t1562 * t1285 + pkin(6) * (t1351 * t1562 - t1399 * t1557), t1359 * t1557 - t1403 * t1562, t1318 * t1557 - t1345 * t1562, t1339 * t1557 - t1393 * t1562, t1358 * t1557 + t1401 * t1562, t1338 * t1557 - t1394 * t1562, t1397 * t1557 - t1426 * t1562, t1557 * t1160 + t1562 * t1211 + pkin(6) * (t1323 * t1562 + t1376 * t1557), t1557 * t1172 + t1562 * t1214 + pkin(6) * (t1329 * t1562 + t1384 * t1557), t1557 * t1150 + t1562 * t1159 + pkin(6) * (t1299 * t1562 + t1346 * t1557), t1557 * t1103 + t1562 * t1139 + pkin(6) * (t1210 * t1562 + t1235 * t1557), t1222 * t1557 - t1247 * t1562, t1181 * t1557 - t1192 * t1562, t1218 * t1557 - t1271 * t1562, t1221 * t1557 - t1246 * t1562, t1217 * t1557 - t1272 * t1562, t1287 * t1557 - t1289 * t1562, t1557 * t1076 + t1562 * t1102 + pkin(6) * (t1206 * t1562 + t1243 * t1557), t1557 * t1083 + t1562 * t1104 + pkin(6) * (t1213 * t1562 + t1265 * t1557), t1557 * t1063 + t1562 * t1070 + pkin(6) * (t1175 * t1562 + t1193 * t1557), t1557 * t1042 + t1562 * t1056 + pkin(6) * (t1097 * t1562 + t1101 * t1557), t1108 * t1557 - t1115 * t1562, t1082 * t1557 - t1086 * t1562, t1133 * t1557 - t1154 * t1562, t1107 * t1557 - t1114 * t1562, t1132 * t1557 - t1155 * t1562, t1178 * t1557 - t1183 * t1562, t1557 * t1041 + t1562 * t1052 + pkin(6) * (t1110 * t1562 + t1138 * t1557), t1557 * t1044 + t1562 * t1057 + pkin(6) * (t1129 * t1562 + t1149 * t1557), t1557 * t1035 + t1562 * t1037 + pkin(6) * (t1080 * t1562 + t1087 * t1557), t1557 * t1031 + t1562 * t1032 + pkin(6) * (t1047 * t1562 + t1051 * t1557); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1527, t1528, 0, 0, t1467, t1455, t1464, t1463, -t1470, 0, t1409, t1408, t1379, t1387, 0, -t1464, t1470, t1467, t1455, t1463, t1319, t1330, t1331, t1262, t1357, t1317, t1337, t1356, t1336, t1396, t1156, t1157, t1142, t1095, t1220, t1180, t1216, t1219, t1215, t1286, t1075, t1077, t1061, t1039, t1106, t1081, t1131, t1105, t1130, t1177, t1040, t1043, t1034, t1030; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1563, 0, 0, -g(3), -t1527, 0, t1486, t1456, t1473, t1484, t1477, t1502, t1427, t1428, t1416, pkin(7) * t1416, t1502, -t1473, -t1477, t1486, t1456, t1484, t1340, t1341, t1342, t1282, t1359, t1318, t1339, t1358, t1338, t1397, t1160, t1172, t1150, t1103, t1222, t1181, t1218, t1221, t1217, t1287, t1076, t1083, t1063, t1042, t1108, t1082, t1133, t1107, t1132, t1178, t1041, t1044, t1035, t1031; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, 0, qJDD(1), 0, g(3), 0, -t1528, 0, t1653, -t1522, -t1665, -t1653, -t1544, -qJDD(2), t1421, t1420, 0, pkin(1) * t1416, -qJDD(2), t1665, t1544, t1653, -t1522, -t1653, t1509, t1360, t1354, t1285, -t1403, -t1345, -t1393, t1401, -t1394, -t1426, t1211, t1214, t1159, t1139, -t1247, -t1192, -t1271, -t1246, -t1272, -t1289, t1102, t1104, t1070, t1056, -t1115, -t1086, -t1154, -t1114, -t1155, -t1183, t1052, t1057, t1037, t1032; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1527, t1528, 0, 0, t1467, t1455, t1464, t1463, -t1470, 0, t1409, t1408, t1379, t1387, 0, -t1464, t1470, t1467, t1455, t1463, t1319, t1330, t1331, t1262, t1357, t1317, t1337, t1356, t1336, t1396, t1156, t1157, t1142, t1095, t1220, t1180, t1216, t1219, t1215, t1286, t1075, t1077, t1061, t1039, t1106, t1081, t1131, t1105, t1130, t1177, t1040, t1043, t1034, t1030; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514, t1515, t1524, -t1542, t1534, t1542, 0, -t1494, t1481, 0, t1542, -t1524, -t1534, t1514, t1515, -t1542, t1405, -qJ(3) * t1515, t1380, qJ(3) * t1399, t1461, t1459, t1414, -t1461, -t1411, t1500, t1238, t1241, t1283, t1176, t1398, t1395, t1315, -t1398, -t1312, t1497, t1136, t1141, t1116, t1068, t1321, t1320, t1232, -t1321, -t1229, t1492, t1069, t1071, t1058, t1036; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1654, t1513, t1531, -t1621, -t1525, -t1654, t1494, 0, t1482, 0, -t1654, -t1531, t1525, t1654, t1513, -t1621, t1404, t1382, pkin(2) * t1513, pkin(2) * t1399, -t1402, -t1343, -t1391, t1400, -t1392, -t1425, t1261, t1263, t1189, t1158, -t1245, -t1190, -t1269, -t1244, -t1270, -t1288, t1111, t1127, t1072, t1062, -t1113, -t1084, -t1152, -t1112, -t1153, -t1182, t1059, t1060, t1038, t1033; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1653, t1522, t1665, t1653, t1544, qJDD(2), -t1481, -t1482, 0, 0, qJDD(2), -t1665, -t1544, -t1653, t1522, t1653, -t1509, t1747, t1761, t1625, t1403, t1345, t1393, -t1401, t1394, t1426, t1735, t1734, t1736, t1739, t1247, t1192, t1271, t1246, t1272, t1289, t1738, t1737, t1740, t1743, t1115, t1086, t1154, t1114, t1155, t1183, t1742, t1741, t1744, t1745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1665, -t1544, -t1653, t1522, t1653, 0, t1422, t1419, 0, t1403, t1345, t1393, -t1401, t1394, t1426, -pkin(8) * t1375 + t1677, -pkin(8) * t1383 + t1366, -pkin(8) * t1344 - t1755, -pkin(8) * t1755, t1247, t1192, t1271, t1246, t1272, t1289, -pkin(8) * t1242 - t1638, -pkin(8) * t1264 - t1637, -pkin(8) * t1191 - t1639, -pkin(8) * t1100 - t1600, t1115, t1086, t1154, t1114, t1155, t1183, -pkin(8) * t1137 - t1641, -pkin(8) * t1148 - t1640, -pkin(8) * t1085 - t1642, -pkin(8) * t1050 - t1643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1542, t1524, t1534, -t1514, -t1515, t1542, -t1422, 0, -t1399, 0, -t1461, -t1459, -t1414, t1461, t1411, -t1500, t1599, t1627, -t1724, -t1725, -t1398, -t1395, -t1315, t1398, t1312, -t1497, t1584, t1605, t1646, t1647, -t1321, -t1320, -t1232, t1321, t1229, -t1492, t1572, t1569, t1628, t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1654, t1531, -t1525, -t1654, -t1513, t1621, -t1419, t1399, 0, 0, t1402, t1343, t1391, -t1400, t1392, t1425, pkin(8) * t1376 - t1618, pkin(8) * t1384 - t1617, pkin(8) * t1346 - t1575, pkin(8) * t1235 - t1723, t1245, t1190, t1269, t1244, t1270, t1288, pkin(8) * t1243 - t1577, pkin(8) * t1265 - t1576, pkin(8) * t1193 - t1578, pkin(8) * t1101 - t1571, t1113, t1084, t1152, t1112, t1153, t1182, pkin(8) * t1138 - t1580, pkin(8) * t1149 - t1579, pkin(8) * t1087 - t1581, pkin(8) * t1051 - t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1447, -t1410, t1750, t1490, t1488, -t1490, 0, t1377, t1292, 0, t1309, t1256, t1334, t1308, t1335, t1363, t1240, t1258, t1135, -pkin(9) * t1146, t1164, t1121, t1203, t1163, t1204, t1237, t1094, t1099, t1055, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1682, t1749, t1668, t1586, t1439, -t1682, -t1377, 0, t1293, 0, t1590, t1609, t1608, t1567, t1607, t1585, t1207, t1208, t1126, t1140, t1613, t1615, t1612, t1614, t1611, t1610, t1091, t1092, t1053, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1461, t1459, t1414, -t1461, -t1411, t1500, -t1292, -t1293, 0, 0, t1398, t1395, t1315, -t1398, -t1312, t1497, t1619, t1652, t1253, t1145, t1321, t1320, t1232, -t1321, -t1229, t1492, t1602, t1583, t1669, t1670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1349, -t1311, t1752, t1434, t1430, -t1434, 0, t1296, t1195, 0, t1226, t1170, t1280, t1224, t1281, t1295, t1179, t1185, t1074, -pkin(10) * t1089; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1435, t1751, t1431, -t1589, t1373, -t1435, -t1296, 0, t1196, 0, t1225, t1168, t1278, t1223, t1279, t1294, t1143, t1151, t1073, t1078; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1398, t1395, t1315, -t1398, -t1312, t1497, -t1195, -t1196, 0, 0, t1321, t1320, t1232, -t1321, -t1229, t1492, t1620, t1587, t1167, t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1260, -t1228, t1754, t1369, t1364, -t1369, 0, t1227, t1124, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1370, t1753, t1365, -t1588, t1306, -t1370, -t1227, 0, t1125, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1321, t1320, t1232, -t1321, -t1229, t1492, -t1124, -t1125, 0, 0;];
m_new_reg  = t1;
