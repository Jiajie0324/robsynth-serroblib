% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR9_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:55:44
% EndTime: 2019-03-09 22:56:14
% DurationCPUTime: 11.56s
% Computational Cost: add. (18781->605), mult. (48620->844), div. (0->0), fcn. (39120->12), ass. (0->281)
t317 = cos(pkin(6));
t392 = qJD(1) * t317;
t300 = qJD(2) + t392;
t320 = sin(qJ(3));
t324 = cos(qJ(3));
t321 = sin(qJ(2));
t315 = sin(pkin(6));
t393 = qJD(1) * t315;
t374 = t321 * t393;
t239 = t300 * t324 - t320 * t374;
t240 = t300 * t320 + t324 * t374;
t319 = sin(qJ(4));
t323 = cos(qJ(4));
t191 = -t323 * t239 + t240 * t319;
t189 = qJD(6) + t191;
t325 = cos(qJ(2));
t381 = pkin(1) * t392;
t255 = -pkin(8) * t374 + t325 * t381;
t338 = t315 * (pkin(2) * t321 - pkin(9) * t325);
t256 = qJD(1) * t338;
t362 = -t255 * t320 + t324 * t256;
t430 = -pkin(10) - pkin(9);
t376 = qJD(3) * t430;
t407 = t324 * t325;
t472 = (pkin(3) * t321 - pkin(10) * t407) * t393 + t362 - t324 * t376;
t391 = qJD(1) * t325;
t373 = t315 * t391;
t357 = t320 * t373;
t395 = t324 * t255 + t320 * t256;
t471 = pkin(10) * t357 + t320 * t376 - t395;
t270 = t319 * t320 - t323 * t324;
t439 = qJD(3) + qJD(4);
t214 = t439 * t270;
t225 = t270 * t373;
t398 = -t214 + t225;
t271 = t319 * t324 + t320 * t323;
t397 = (-t373 + t439) * t271;
t314 = sin(pkin(12));
t316 = cos(pkin(12));
t318 = sin(qJ(6));
t322 = cos(qJ(6));
t268 = t314 * t318 - t322 * t316;
t470 = t189 * t268;
t269 = t314 * t322 + t316 * t318;
t262 = t269 * qJD(6);
t469 = t269 * t191 + t262;
t291 = t430 * t320;
t292 = t430 * t324;
t340 = t291 * t323 + t292 * t319;
t468 = qJD(4) * t340 - t319 * t472 + t471 * t323;
t296 = t321 * t381;
t258 = pkin(8) * t373 + t296;
t388 = qJD(3) * t320;
t352 = -t258 + (-t357 + t388) * pkin(3);
t454 = t191 * t314;
t467 = pkin(5) * t454;
t466 = pkin(11) * t454;
t465 = qJ(5) * t374 - t468;
t464 = -t397 * pkin(4) + qJ(5) * t398 + qJD(5) * t271 - t352;
t382 = qJD(1) * qJD(2);
t369 = t315 * t382;
t293 = t321 * t369;
t223 = pkin(9) * t300 + t258;
t253 = (-pkin(2) * t325 - pkin(9) * t321 - pkin(1)) * t315;
t235 = qJD(1) * t253;
t257 = qJD(2) * t338;
t247 = qJD(1) * t257;
t409 = t315 * t321;
t301 = pkin(8) * t409;
t429 = pkin(1) * t325;
t259 = (t317 * t429 - t301) * qJD(2);
t248 = qJD(1) * t259;
t387 = qJD(3) * t324;
t333 = -t223 * t388 + t235 * t387 + t320 * t247 + t324 * t248;
t355 = qJD(3) * t374;
t356 = t325 * t369;
t377 = t300 * t388 + t320 * t356 + t324 * t355;
t101 = -pkin(10) * t377 + t333;
t181 = -t223 * t320 + t324 * t235;
t155 = -pkin(10) * t240 + t181;
t290 = -qJD(3) + t373;
t141 = -pkin(3) * t290 + t155;
t182 = t223 * t324 + t235 * t320;
t156 = pkin(10) * t239 + t182;
t385 = qJD(4) * t323;
t386 = qJD(4) * t319;
t211 = t300 * t387 - t320 * t355 + t324 * t356;
t328 = -qJD(3) * t182 + t324 * t247 - t320 * t248;
t84 = pkin(3) * t293 - pkin(10) * t211 + t328;
t360 = t319 * t101 + t141 * t386 + t156 * t385 - t323 * t84;
t22 = -pkin(4) * t293 + t360;
t108 = t323 * t211 + t239 * t385 - t240 * t386 - t319 * t377;
t96 = t108 * t314 - t316 * t293;
t17 = pkin(5) * t96 + t22;
t341 = t239 * t319 + t323 * t240;
t280 = -qJD(4) + t290;
t164 = t316 * t280 + t314 * t341;
t153 = t319 * t156;
t71 = t141 * t323 - t153;
t67 = pkin(4) * t280 + qJD(5) - t71;
t59 = pkin(5) * t164 + t67;
t166 = -t280 * t314 + t316 * t341;
t154 = t323 * t156;
t72 = t319 * t141 + t154;
t68 = -qJ(5) * t280 + t72;
t222 = -pkin(2) * t300 - t255;
t195 = -pkin(3) * t239 + t222;
t85 = pkin(4) * t191 - qJ(5) * t341 + t195;
t42 = -t314 * t68 + t316 * t85;
t23 = pkin(5) * t191 - pkin(11) * t166 + t42;
t43 = t314 * t85 + t316 * t68;
t29 = -pkin(11) * t164 + t43;
t7 = t23 * t322 - t29 * t318;
t463 = t17 * t268 - t7 * t341 + t469 * t59;
t8 = t23 * t318 + t29 * t322;
t462 = t17 * t269 + t8 * t341 - t470 * t59;
t109 = qJD(4) * t341 + t319 * t211 + t323 * t377;
t342 = t164 * t318 - t166 * t322;
t461 = t269 * t109 - t189 * t470 + t341 * t342;
t98 = t322 * t164 + t166 * t318;
t460 = -t268 * t109 - t189 * t469 + t341 * t98;
t383 = qJD(6) * t322;
t384 = qJD(6) * t318;
t97 = t108 * t316 + t293 * t314;
t27 = -t164 * t383 - t166 * t384 - t318 * t96 + t322 * t97;
t459 = t27 * t269 + t342 * t470;
t28 = -qJD(6) * t342 + t318 * t97 + t322 * t96;
t458 = -t27 * t268 - t269 * t28 + t342 * t469 + t470 * t98;
t457 = t189 * t98;
t456 = t191 * t42;
t455 = t189 * t342;
t451 = t341 * t191;
t228 = t291 * t319 - t292 * t323;
t450 = qJD(4) * t228 + t471 * t319 + t323 * t472;
t199 = -t225 * t314 - t316 * t374;
t449 = -t214 * t314 - t199;
t448 = -t191 ^ 2 + t341 ^ 2;
t361 = -t323 * t101 - t141 * t385 + t156 * t386 - t319 * t84;
t20 = qJ(5) * t293 - qJD(5) * t280 - t361;
t249 = pkin(8) * t356 + qJD(2) * t296;
t180 = pkin(3) * t377 + t249;
t37 = t109 * pkin(4) - t108 * qJ(5) - qJD(5) * t341 + t180;
t10 = -t20 * t314 + t316 * t37;
t447 = -t191 * t43 - t10;
t135 = pkin(4) * t341 + qJ(5) * t191;
t446 = -t191 * t280 + t108;
t445 = t191 * t195 + t361;
t310 = t316 * pkin(11);
t444 = pkin(5) * t341 + t191 * t310;
t424 = -t314 * t465 + t316 * t464;
t423 = t314 * t464 + t316 * t465;
t75 = t155 * t319 + t154;
t353 = pkin(3) * t386 - t75;
t440 = t189 * t341;
t403 = pkin(4) * t374 + t450;
t408 = t315 * t325;
t252 = pkin(8) * t408 + (pkin(1) * t321 + pkin(9)) * t317;
t396 = t324 * t252 + t320 * t253;
t438 = t22 * t314 + t341 * t43;
t434 = -t22 * t316 - t341 * t42;
t432 = -t341 * t195 - t360;
t431 = -t280 * t341 - t109;
t428 = pkin(3) * t323;
t11 = t316 * t20 + t314 * t37;
t263 = -t317 * t324 + t320 * t409;
t371 = qJD(2) * t408;
t218 = -qJD(3) * t263 + t324 * t371;
t327 = -t396 * qJD(3) + t324 * t257 - t320 * t259;
t390 = qJD(2) * t321;
t372 = t315 * t390;
t112 = pkin(3) * t372 - pkin(10) * t218 + t327;
t264 = t317 * t320 + t324 * t409;
t217 = qJD(3) * t264 + t320 * t371;
t332 = -t252 * t388 + t253 * t387 + t320 * t257 + t324 * t259;
t119 = -pkin(10) * t217 + t332;
t363 = -t252 * t320 + t324 * t253;
t162 = -pkin(3) * t408 - pkin(10) * t264 + t363;
t175 = -pkin(10) * t263 + t396;
t331 = t319 * t112 + t323 * t119 + t162 * t385 - t175 * t386;
t31 = (qJ(5) * t390 - qJD(5) * t325) * t315 + t331;
t204 = t323 * t263 + t264 * t319;
t133 = -qJD(4) * t204 - t319 * t217 + t323 * t218;
t205 = -t263 * t319 + t264 * t323;
t134 = qJD(4) * t205 + t323 * t217 + t319 * t218;
t260 = t317 * pkin(1) * t390 + pkin(8) * t371;
t196 = pkin(3) * t217 + t260;
t48 = pkin(4) * t134 - qJ(5) * t133 - qJD(5) * t205 + t196;
t14 = t316 * t31 + t314 * t48;
t9 = t11 * t316;
t421 = t449 * pkin(5) + t403;
t53 = t314 * t135 + t316 * t71;
t113 = pkin(3) * t240 + t135;
t76 = t155 * t323 - t153;
t50 = t314 * t113 + t316 * t76;
t251 = t301 + (-pkin(2) - t429) * t317;
t210 = t263 * pkin(3) + t251;
t122 = pkin(4) * t204 - qJ(5) * t205 + t210;
t400 = t319 * t162 + t323 * t175;
t92 = -qJ(5) * t408 + t400;
t57 = t314 * t122 + t316 * t92;
t420 = qJ(5) * t316;
t416 = t239 * t290;
t415 = t240 * t290;
t414 = t271 * t314;
t413 = t271 * t316;
t412 = t290 * t320;
t411 = t290 * t324;
t311 = t315 ^ 2;
t410 = t311 * qJD(1) ^ 2;
t406 = -qJD(5) + t67;
t200 = -t225 * t316 + t314 * t374;
t402 = t199 * t318 - t200 * t322 + t214 * t268 - t271 * t262;
t401 = -t322 * t199 - t200 * t318 - t214 * t269 + t383 * t413 - t384 * t414;
t309 = -pkin(3) * t324 - pkin(2);
t212 = pkin(4) * t270 - qJ(5) * t271 + t309;
t171 = t314 * t212 + t316 * t228;
t394 = t321 ^ 2 - t325 ^ 2;
t389 = qJD(2) * t324;
t378 = t321 * t410;
t306 = -pkin(5) * t316 - pkin(4);
t375 = t311 * t391;
t370 = t311 * t382;
t13 = -t31 * t314 + t316 * t48;
t49 = t316 * t113 - t314 * t76;
t56 = t316 * t122 - t314 * t92;
t52 = t316 * t135 - t314 * t71;
t366 = t162 * t323 - t319 * t175;
t170 = t316 * t212 - t228 * t314;
t359 = t300 + t392;
t358 = 0.2e1 * t370;
t354 = t353 + t467;
t136 = pkin(5) * t270 - pkin(11) * t413 + t170;
t351 = t449 * pkin(11) - qJD(6) * t136 + t423;
t151 = -pkin(11) * t414 + t171;
t350 = -t397 * pkin(5) - pkin(11) * t200 + qJD(6) * t151 - t214 * t310 + t424;
t349 = -0.2e1 * pkin(1) * t370;
t4 = pkin(5) * t109 - pkin(11) * t97 + t10;
t5 = -pkin(11) * t96 + t11;
t348 = t318 * t4 + t322 * t5;
t93 = pkin(4) * t408 - t366;
t347 = -t10 * t314 + t9;
t346 = -t214 * t67 + t22 * t271;
t345 = -t314 * t42 + t316 * t43;
t188 = t205 * t316 - t314 * t408;
t38 = pkin(5) * t204 - pkin(11) * t188 + t56;
t187 = t205 * t314 + t316 * t408;
t45 = -pkin(11) * t187 + t57;
t344 = -t318 * t45 + t322 * t38;
t343 = t318 * t38 + t322 * t45;
t129 = t322 * t187 + t188 * t318;
t130 = -t187 * t318 + t188 * t322;
t339 = t112 * t323 - t319 * t119 - t162 * t386 - t175 * t385;
t305 = pkin(3) * t319 + qJ(5);
t265 = (-pkin(11) - t305) * t314;
t299 = pkin(3) * t385 + qJD(5);
t337 = -qJD(6) * t265 - t299 * t316 + t466 + t50;
t266 = t305 * t316 + t310;
t336 = qJD(6) * t266 + t299 * t314 + t444 + t49;
t286 = (-pkin(11) - qJ(5)) * t314;
t335 = -qJD(5) * t316 - qJD(6) * t286 + t466 + t53;
t287 = t310 + t420;
t334 = qJD(5) * t314 + qJD(6) * t287 + t444 + t52;
t330 = -t109 * t305 + (-t299 + t67) * t191;
t32 = -pkin(4) * t372 - t339;
t2 = -qJD(6) * t8 - t318 * t5 + t322 * t4;
t308 = -pkin(4) - t428;
t284 = t306 - t428;
t207 = t268 * t271;
t206 = t269 * t271;
t198 = pkin(5) * t414 - t340;
t121 = t133 * t316 + t314 * t372;
t120 = t133 * t314 - t316 * t372;
t65 = pkin(5) * t187 + t93;
t60 = t72 - t467;
t40 = qJD(6) * t130 + t322 * t120 + t318 * t121;
t39 = -qJD(6) * t129 - t318 * t120 + t322 * t121;
t18 = pkin(5) * t120 + t32;
t12 = -pkin(11) * t120 + t14;
t6 = pkin(5) * t134 - pkin(11) * t121 + t13;
t1 = qJD(6) * t7 + t348;
t3 = [0, 0, 0, t321 * t325 * t358, -t394 * t358, t359 * t371, -t359 * t372, 0, -t249 * t317 - t260 * t300 + t321 * t349, -t248 * t317 - t259 * t300 + t325 * t349, t211 * t264 + t218 * t240, -t211 * t263 - t240 * t217 + t218 * t239 - t264 * t377, -t218 * t290 + (-t211 * t325 + (qJD(1) * t264 + t240) * t390) * t315, t217 * t290 + (t377 * t325 + (-qJD(1) * t263 + t239) * t390) * t315 (-t290 * t315 - t375) * t390, -t327 * t290 - t260 * t239 + t251 * t377 + t249 * t263 + t222 * t217 + (-t328 * t325 + (qJD(1) * t363 + t181) * t390) * t315, t332 * t290 + t260 * t240 + t251 * t211 + t249 * t264 + t222 * t218 + (t333 * t325 + (-qJD(1) * t396 - t182) * t390) * t315, t108 * t205 + t133 * t341, -t108 * t204 - t109 * t205 - t133 * t191 - t134 * t341, -t133 * t280 + (-t108 * t325 + (qJD(1) * t205 + t341) * t390) * t315, t134 * t280 + (t109 * t325 + (-qJD(1) * t204 - t191) * t390) * t315 (-t280 * t315 - t375) * t390, -t339 * t280 + t196 * t191 + t210 * t109 + t180 * t204 + t195 * t134 + (t360 * t325 + (qJD(1) * t366 + t71) * t390) * t315, t331 * t280 + t196 * t341 + t210 * t108 + t180 * t205 + t195 * t133 + (-t361 * t325 + (-qJD(1) * t400 - t72) * t390) * t315, t10 * t204 + t109 * t56 + t120 * t67 + t13 * t191 + t134 * t42 + t164 * t32 + t187 * t22 + t93 * t96, -t109 * t57 - t11 * t204 + t121 * t67 - t134 * t43 - t14 * t191 + t166 * t32 + t188 * t22 + t93 * t97, -t10 * t188 - t11 * t187 - t120 * t43 - t121 * t42 - t13 * t166 - t14 * t164 - t56 * t97 - t57 * t96, t10 * t56 + t11 * t57 + t13 * t42 + t14 * t43 + t22 * t93 + t32 * t67, t130 * t27 - t342 * t39, -t129 * t27 - t130 * t28 + t342 * t40 - t39 * t98, t109 * t130 - t134 * t342 + t189 * t39 + t204 * t27, -t109 * t129 - t134 * t98 - t189 * t40 - t204 * t28, t109 * t204 + t134 * t189 (-qJD(6) * t343 - t318 * t12 + t322 * t6) * t189 + t344 * t109 + t2 * t204 + t7 * t134 + t18 * t98 + t65 * t28 + t17 * t129 + t59 * t40 -(qJD(6) * t344 + t322 * t12 + t318 * t6) * t189 - t343 * t109 - t1 * t204 - t8 * t134 - t18 * t342 + t65 * t27 + t17 * t130 + t59 * t39; 0, 0, 0, -t325 * t378, t394 * t410 (qJD(2) - t300) * t373, t300 * t374 - t293, 0, pkin(1) * t378 + t258 * t300 - t249, pkin(8) * t293 + t255 * t300 + (-t317 * t382 + t410) * t429, t211 * t320 - t240 * t411 (t211 - t416) * t324 + (-t377 + t415) * t320, -t290 * t387 + (t290 * t407 + (qJD(2) * t320 - t240) * t321) * t393, t290 * t388 + (-t325 * t412 + (-t239 + t389) * t321) * t393, t290 * t374, -pkin(2) * t377 - t249 * t324 + t362 * t290 + t258 * t239 + (pkin(9) * t411 + t222 * t320) * qJD(3) + (-t181 * t321 + (-pkin(9) * t390 - t222 * t325) * t320) * t393, -pkin(2) * t211 + t249 * t320 - t395 * t290 - t258 * t240 + (-pkin(9) * t412 + t222 * t324) * qJD(3) + (-t222 * t407 + (-pkin(9) * t389 + t182) * t321) * t393, t108 * t271 + t341 * t398, -t108 * t270 - t109 * t271 - t191 * t398 - t341 * t397, -t398 * t280 + (qJD(2) * t271 - t341) * t374, t397 * t280 + (-qJD(2) * t270 + t191) * t374, t280 * t374, t309 * t109 + t180 * t270 + t450 * t280 + t397 * t195 + t352 * t191 + (qJD(2) * t340 - t71) * t374, t309 * t108 + t180 * t271 + t468 * t280 + t398 * t195 + t352 * t341 + (-qJD(2) * t228 + t72) * t374, t10 * t270 + t109 * t170 + t164 * t403 - t191 * t424 - t199 * t67 + t314 * t346 - t340 * t96 + t397 * t42, -t109 * t171 - t11 * t270 + t166 * t403 + t191 * t423 - t200 * t67 + t316 * t346 - t340 * t97 - t397 * t43, -t170 * t97 - t171 * t96 + t199 * t43 + t200 * t42 + (-t10 * t316 - t11 * t314) * t271 - (-t314 * t43 - t316 * t42) * t214 + t424 * t166 + t423 * t164, t10 * t170 + t11 * t171 - t22 * t340 + t403 * t67 - t42 * t424 - t423 * t43, -t27 * t207 - t342 * t402, -t206 * t27 + t207 * t28 + t342 * t401 - t402 * t98, -t109 * t207 + t189 * t402 + t27 * t270 - t342 * t397, -t109 * t206 - t189 * t401 - t270 * t28 - t397 * t98, t109 * t270 + t189 * t397 (t136 * t322 - t151 * t318) * t109 + t2 * t270 + t198 * t28 + t17 * t206 + t421 * t98 + t397 * t7 + t401 * t59 + (t318 * t351 - t322 * t350) * t189 -(t136 * t318 + t151 * t322) * t109 - t1 * t270 + t198 * t27 - t17 * t207 - t397 * t8 + t402 * t59 + (t318 * t350 + t322 * t351) * t189 - t421 * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240 * t239, -t239 ^ 2 + t240 ^ 2, t211 + t416, -t377 - t415, t293, -t182 * t290 - t222 * t240 + t328, -t181 * t290 - t222 * t239 - t333, t451, t448, t446, t431, t293, -t280 * t75 + (-t191 * t240 + t280 * t386 + t293 * t323) * pkin(3) + t432, -t280 * t76 + (-t240 * t341 + t280 * t385 - t293 * t319) * pkin(3) + t445, t164 * t353 - t191 * t49 + t308 * t96 + t314 * t330 + t434, t166 * t353 + t191 * t50 + t308 * t97 + t316 * t330 + t438, t164 * t50 + t166 * t49 + t9 + (-t164 * t299 - t305 * t96 - t456) * t316 + (t166 * t299 + t305 * t97 + t447) * t314, t22 * t308 + t299 * t345 + t305 * t347 + t353 * t67 - t42 * t49 - t43 * t50, t459, t458, t461, t460, -t440 (t265 * t322 - t266 * t318) * t109 + t284 * t28 + t354 * t98 + (t318 * t337 - t322 * t336) * t189 + t463 -(t265 * t318 + t266 * t322) * t109 + t284 * t27 + (t318 * t336 + t322 * t337) * t189 - t354 * t342 + t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t448, t446, t431, t293, -t280 * t72 + t432, -t280 * t71 + t445, -qJ(5) * t109 * t314 - pkin(4) * t96 - t164 * t72 + (t314 * t406 - t52) * t191 + t434, -t109 * t420 - pkin(4) * t97 - t166 * t72 + (t316 * t406 + t53) * t191 + t438, t164 * t53 + t166 * t52 + t9 + (-qJ(5) * t96 - qJD(5) * t164 - t456) * t316 + (qJ(5) * t97 + qJD(5) * t166 + t447) * t314, -pkin(4) * t22 + qJ(5) * t347 + qJD(5) * t345 - t42 * t52 - t43 * t53 - t67 * t72, t459, t458, t461, t460, -t440 (t286 * t322 - t287 * t318) * t109 + t306 * t28 - t60 * t98 + (t318 * t335 - t322 * t334) * t189 + t463 -(t286 * t318 + t287 * t322) * t109 + t306 * t27 + t60 * t342 + (t318 * t334 + t322 * t335) * t189 + t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166 * t191 + t96, -t164 * t191 + t97, -t164 ^ 2 - t166 ^ 2, t164 * t43 + t166 * t42 + t22, 0, 0, 0, 0, 0, t28 - t455, t27 - t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342 * t98, t342 ^ 2 - t98 ^ 2, t27 + t457, -t28 - t455, t109, t189 * t8 + t342 * t59 + t2, t59 * t98 - t348 + (-qJD(6) + t189) * t7;];
tauc_reg  = t3;
