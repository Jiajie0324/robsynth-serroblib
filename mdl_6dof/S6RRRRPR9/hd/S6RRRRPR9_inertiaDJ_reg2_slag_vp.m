% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:55:45
% EndTime: 2019-03-09 22:56:18
% DurationCPUTime: 13.03s
% Computational Cost: add. (19829->598), mult. (50995->1048), div. (0->0), fcn. (51109->12), ass. (0->280)
t193 = sin(pkin(12));
t190 = t193 ^ 2;
t195 = cos(pkin(12));
t192 = t195 ^ 2;
t335 = t190 + t192;
t391 = t335 * qJD(5);
t392 = 0.2e1 * t391;
t373 = cos(qJ(4));
t302 = qJD(4) * t373;
t283 = pkin(3) * t302;
t172 = t283 + qJD(5);
t390 = t335 * t172;
t196 = sin(qJ(4));
t194 = sin(pkin(6));
t197 = sin(qJ(3));
t199 = cos(qJ(3));
t200 = cos(qJ(2));
t198 = sin(qJ(2));
t356 = cos(pkin(6));
t314 = pkin(1) * t356;
t280 = t198 * t314;
t242 = pkin(9) * t356 + t280;
t231 = pkin(10) * t356 + t242;
t316 = -pkin(2) * t200 - pkin(1);
t374 = -pkin(10) - pkin(9);
t254 = t198 * t374 + t316;
t220 = -t231 * t197 + ((-pkin(8) * t197 - pkin(3)) * t200 + t254 * t199) * t194;
t369 = pkin(8) * t200;
t323 = t199 * t369;
t221 = t231 * t199 + (t197 * t254 + t323) * t194;
t57 = t196 * t220 + t373 * t221;
t344 = t194 * t198;
t250 = t197 * t356 + t199 * t344;
t297 = t356 * t199;
t251 = t197 * t344 - t297;
t115 = t196 * t250 + t373 * t251;
t313 = t373 * t199;
t341 = t196 * t197;
t379 = qJD(3) + qJD(4);
t389 = -qJD(3) * t313 + t379 * t341;
t291 = t356 * qJD(3);
t333 = qJD(2) * t200;
t305 = t194 * t333;
t388 = t291 + t305;
t129 = -t199 * t302 + t389;
t159 = t196 * t199 + t197 * t373;
t130 = t379 * t159;
t158 = -t313 + t341;
t260 = t129 * t158 - t130 * t159;
t387 = 0.2e1 * t260;
t334 = qJD(2) * t198;
t173 = t194 * t334;
t284 = pkin(3) * t173;
t332 = qJD(3) * t194;
t307 = t198 * t332;
t165 = t197 * t307;
t378 = -t199 * t388 + t165;
t243 = pkin(8) * t344 - t200 * t314;
t238 = t243 * qJD(2);
t259 = -pkin(9) * t198 + t316;
t382 = -t259 * t332 + t238;
t343 = t194 * t200;
t322 = pkin(8) * t343;
t383 = qJD(3) * (t242 + t322) - qJD(2) * t194 * (pkin(2) * t198 - pkin(9) * t200);
t79 = t197 * t382 - t199 * t383;
t209 = pkin(10) * t378 + t284 + t79;
t317 = t197 * t388 + t199 * t307;
t78 = t197 * t383 + t199 * t382;
t210 = -pkin(10) * t317 - t78;
t56 = -t196 * t221 + t373 * t220;
t26 = -qJD(4) * t56 - t196 * t209 - t373 * t210;
t203 = qJ(5) * t173 - qJD(5) * t343 - t26;
t217 = qJD(4) * t115 + t196 * t317 + t378 * t373;
t223 = -t196 * t251 + t373 * t250;
t295 = qJD(2) * t356;
t270 = t198 * t295;
t277 = t317 * pkin(3);
t75 = qJD(4) * t223 - t196 * t378 + t373 * t317;
t207 = pkin(1) * t270 + t75 * pkin(4) + pkin(8) * t305 + qJ(5) * t217 - qJD(5) * t223 + t277;
t10 = t193 * t207 + t195 * t203;
t9 = -t193 * t203 + t195 * t207;
t386 = t10 * t195 - t9 * t193;
t214 = t173 * t193 - t195 * t217;
t384 = t214 * t193;
t278 = t195 * t173;
t70 = t193 * t217;
t255 = t70 + t278;
t60 = t255 * t195;
t385 = t384 + t60;
t239 = qJD(3) * t251;
t381 = t197 * t239 - t317 * t199;
t371 = sin(qJ(6));
t299 = qJD(6) * t371;
t372 = cos(qJ(6));
t300 = qJD(6) * t372;
t147 = t193 * t299 - t195 * t300;
t104 = -t193 * t343 + t195 * t223;
t340 = t193 * t223 + t195 * t343;
t380 = t104 * t193 - t195 * t340;
t156 = t371 * t193 - t372 * t195;
t281 = t374 * t373;
t160 = t197 * t281;
t171 = t374 * t199;
t328 = qJD(4) * t196;
t247 = qJD(4) * t160 + t171 * t328;
t318 = t196 * t374;
t282 = t199 * t318;
t377 = -qJD(3) * (t282 + t160) - t247;
t375 = t199 ^ 2;
t370 = pkin(3) * t196;
t368 = pkin(9) * t194;
t367 = t195 * pkin(5);
t181 = qJ(5) + t370;
t365 = -pkin(11) - t181;
t364 = pkin(11) + qJ(5);
t309 = t371 * t195;
t312 = t372 * t193;
t157 = t312 + t309;
t148 = t157 * qJD(6);
t27 = -qJD(4) * t57 - t196 * t210 + t373 * t209;
t25 = -pkin(4) * t173 - t27;
t21 = -pkin(5) * t255 + t25;
t54 = pkin(4) * t343 - t56;
t42 = pkin(5) * t340 + t54;
t363 = t42 * t148 + t21 * t156;
t362 = -t42 * t147 + t21 * t157;
t208 = -qJ(5) * t343 + t57;
t141 = -pkin(2) * t356 + t243;
t121 = pkin(3) * t251 + t141;
t211 = t115 * pkin(4) - qJ(5) * t223 + t121;
t35 = t193 * t211 + t195 * t208;
t136 = -t171 * t196 - t160;
t352 = t159 * t193;
t114 = pkin(5) * t352 + t136;
t346 = t193 * t129;
t99 = -t171 * t302 + t374 * t389;
t77 = -pkin(5) * t346 + t99;
t361 = t114 * t148 + t77 * t156;
t360 = -t114 * t147 + t77 * t157;
t359 = t136 * t99;
t358 = t195 * t99;
t357 = t25 * t195;
t355 = qJ(5) * t195;
t151 = t280 + t322;
t146 = qJD(2) * t151;
t353 = t146 * t197;
t351 = t159 * t195;
t350 = t172 * t115;
t349 = t181 * t195;
t182 = -pkin(4) - t367;
t348 = t182 * t147;
t347 = t182 * t148;
t137 = -t171 * t373 + t197 * t318;
t345 = t193 * t137;
t342 = t195 * t129;
t185 = -pkin(3) * t199 - pkin(2);
t258 = pkin(4) * t158 + t185;
t245 = -qJ(5) * t159 + t258;
t91 = t195 * t137 + t193 * t245;
t321 = t373 * pkin(3);
t184 = -t321 - pkin(4);
t164 = t184 - t367;
t186 = pkin(3) * t328;
t339 = t164 * t148 + t156 * t186;
t338 = -t164 * t147 + t157 * t186;
t331 = qJD(3) * t197;
t330 = qJD(3) * t199;
t329 = qJD(3) * t200;
t327 = qJD(5) * t115;
t326 = t141 * qJD(3);
t325 = -0.2e1 * pkin(2) * qJD(3);
t55 = 0.2e1 * t115 * t75;
t112 = 0.2e1 * t158 * t130;
t324 = -0.2e1 * t159 * t129;
t320 = pkin(3) * t331;
t319 = pkin(9) * t330;
t122 = t193 * t342;
t191 = t194 ^ 2;
t308 = t191 * t333;
t306 = t197 * t329;
t304 = t197 * t330;
t34 = -t193 * t208 + t195 * t211;
t206 = t115 * pkin(5) - t104 * pkin(11) + t34;
t205 = t372 * t206;
t32 = -pkin(11) * t340 + t35;
t13 = -t32 * t371 + t205;
t204 = t371 * t206;
t14 = t32 * t372 + t204;
t201 = t75 * pkin(5) - pkin(11) * t214 + t9;
t202 = pkin(11) * t255 + t10;
t3 = -qJD(6) * t205 - t201 * t371 - t202 * t372 + t299 * t32;
t4 = -qJD(6) * t204 + t201 * t372 - t202 * t371 - t300 * t32;
t303 = t13 * t147 - t14 * t148 + t3 * t156 - t4 * t157;
t301 = qJD(5) * t371;
t298 = t372 * qJD(5);
t263 = pkin(4) * t130 - qJD(5) * t159;
t248 = qJ(5) * t129 + t263;
t212 = t193 * t377 + t195 * (t248 + t320) + pkin(11) * t342 + t130 * pkin(5);
t222 = t195 * t247 + (t195 * t282 + (t193 * pkin(3) + t195 * t281) * t197) * qJD(3);
t215 = (t129 * t364 + t263) * t193 + t222;
t228 = t158 * pkin(5) - t345 + (-t159 * t364 + t258) * t195;
t227 = t372 * t228;
t80 = -pkin(11) * t352 + t91;
t17 = -qJD(6) * t227 - t212 * t371 - t215 * t372 + t299 * t80;
t226 = t371 * t228;
t18 = -qJD(6) * t226 + t212 * t372 - t215 * t371 - t300 * t80;
t43 = -t371 * t80 + t227;
t44 = t372 * t80 + t226;
t296 = t43 * t147 - t44 * t148 + t17 * t156 - t18 * t157;
t293 = t340 * t129;
t189 = t195 * pkin(11);
t152 = t189 + t349;
t256 = t365 * t312;
t119 = -t152 * t371 + t256;
t272 = t365 * t371;
t120 = t152 * t372 + t193 * t272;
t87 = -qJD(6) * t256 + t152 * t299 + t156 * t172;
t88 = -t152 * t300 - t172 * t309 + (-qJD(6) * t272 - t172 * t372) * t193;
t289 = t119 * t147 - t120 * t148 + t87 * t156 - t88 * t157;
t168 = t189 + t355;
t257 = t364 * t312;
t108 = qJD(6) * t257 + t168 * t299 + t193 * t301 - t195 * t298;
t273 = t364 * t371;
t109 = -t168 * t300 - t195 * t301 + (qJD(6) * t273 - t298) * t193;
t132 = -t168 * t371 - t257;
t133 = t168 * t372 - t193 * t273;
t288 = t108 * t156 - t109 * t157 + t132 * t147 - t133 * t148;
t287 = t193 * t186;
t286 = t195 * t186;
t285 = t136 * t186;
t279 = t198 * t308;
t269 = t372 * t340;
t268 = t371 * t340;
t266 = -t193 * t34 + t195 * t35;
t52 = -t193 * t247 + t195 * t248 + (-t193 * t282 + (t195 * pkin(3) - t193 * t281) * t197) * qJD(3);
t53 = t193 * t248 + t222;
t33 = -t193 * t52 + t195 * t53;
t90 = t195 * t245 - t345;
t265 = -t193 * t90 + t195 * t91;
t264 = -t79 * t197 - t78 * t199;
t262 = t129 * t115 - t159 * t75;
t45 = t115 * t130 + t158 * t75;
t261 = -t136 * t129 + t99 * t159;
t252 = t197 * t334 - t199 * t329;
t249 = pkin(4) * t129 - qJ(5) * t130 - qJD(5) * t158;
t230 = -t129 * t184 - t130 * t181 - t158 * t172 + t159 * t186;
t163 = -0.2e1 * t279;
t128 = -0.2e1 * t157 * t147;
t127 = 0.2e1 * t156 * t148;
t125 = t195 * t130;
t124 = t193 * t130;
t117 = t156 * t159;
t116 = t157 * t159;
t107 = t199 * t242 + (t197 * t259 + t323) * t194;
t106 = -t197 * t242 + (-t197 * t369 + t199 * t259) * t194;
t105 = t277 + t146;
t94 = t99 * t193;
t93 = 0.2e1 * t147 * t156 - 0.2e1 * t148 * t157;
t89 = (t190 - t192) * t129;
t85 = -t130 * t156 - t148 * t158;
t84 = t130 * t157 - t147 * t158;
t72 = t195 * t75;
t71 = t193 * t75;
t69 = t104 * t372 - t268;
t68 = t104 * t371 + t269;
t67 = -t129 * t157 - t147 * t159;
t66 = -t129 * t156 + t148 * t159;
t50 = -t115 * t148 - t156 * t75;
t49 = -t115 * t147 + t157 * t75;
t48 = t116 * t148 + t156 * t67;
t47 = t117 * t147 - t157 * t66;
t36 = -t192 * t217 + (t70 + 0.2e1 * t278) * t193;
t31 = -qJD(6) * t268 + t104 * t300 + t214 * t371 - t255 * t372;
t30 = qJD(6) * t269 + t104 * t299 - t214 * t372 - t255 * t371;
t29 = t116 * t147 + t117 * t148 + t156 * t66 - t157 * t67;
t24 = t25 * t193;
t23 = t148 * t68 + t156 * t31;
t22 = -t147 * t69 - t157 * t30;
t5 = t147 * t68 - t148 * t69 + t156 * t30 - t157 * t31;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t279, 0.2e1 * (-t198 ^ 2 + t200 ^ 2) * t191 * qJD(2), 0.2e1 * t295 * t343, t163, -0.2e1 * t194 * t270, 0, -0.2e1 * pkin(1) * t191 * t334 - 0.2e1 * t146 * t356, -0.2e1 * pkin(1) * t308 + 0.2e1 * t238 * t356, 0.2e1 * t146 * t344 - 0.2e1 * t151 * t173 - 0.2e1 * t238 * t343 + 0.2e1 * t243 * t305, 0.2e1 * t146 * t243 - 0.2e1 * t151 * t238, -0.2e1 * t250 * t378, -0.2e1 * t250 * t317 + 0.2e1 * t251 * t378, 0.2e1 * t173 * t250 + 0.2e1 * t343 * t378, 0.2e1 * t251 * t317, -0.2e1 * t173 * t251 + 0.2e1 * t317 * t343, t163, -0.2e1 * t146 * t297 + 0.2e1 * t141 * t317 + 0.2e1 * (-t79 * t200 + (qJD(2) * t106 + t353) * t198) * t194, -0.2e1 * t107 * t173 - 0.2e1 * t141 * t378 + 0.2e1 * t146 * t250 - 0.2e1 * t343 * t78, 0.2e1 * t106 * t378 - 0.2e1 * t107 * t317 - 0.2e1 * t250 * t79 + 0.2e1 * t251 * t78, 0.2e1 * t106 * t79 - 0.2e1 * t107 * t78 + 0.2e1 * t141 * t146, -0.2e1 * t223 * t217, 0.2e1 * t115 * t217 - 0.2e1 * t223 * t75, 0.2e1 * t173 * t223 + 0.2e1 * t217 * t343, t55, 0.2e1 * (-t115 * t334 + t200 * t75) * t194, t163, 0.2e1 * t105 * t115 + 0.2e1 * t121 * t75 + 0.2e1 * (-t200 * t27 + t334 * t56) * t194, 0.2e1 * t105 * t223 - 0.2e1 * t121 * t217 - 0.2e1 * t173 * t57 - 0.2e1 * t26 * t343, 0.2e1 * t26 * t115 + 0.2e1 * t217 * t56 - 0.2e1 * t223 * t27 - 0.2e1 * t57 * t75, 0.2e1 * t105 * t121 - 0.2e1 * t26 * t57 + 0.2e1 * t27 * t56, 0.2e1 * t104 * t214, 0.2e1 * t104 * t255 - 0.2e1 * t214 * t340, 0.2e1 * t104 * t75 + 0.2e1 * t115 * t214, -0.2e1 * t340 * t255, 0.2e1 * t115 * t255 - 0.2e1 * t340 * t75, t55, 0.2e1 * t9 * t115 + 0.2e1 * t25 * t340 - 0.2e1 * t255 * t54 + 0.2e1 * t34 * t75, -0.2e1 * t10 * t115 + 0.2e1 * t25 * t104 + 0.2e1 * t214 * t54 - 0.2e1 * t35 * t75, -0.2e1 * t10 * t340 - 0.2e1 * t9 * t104 - 0.2e1 * t214 * t34 + 0.2e1 * t255 * t35, 0.2e1 * t10 * t35 + 0.2e1 * t25 * t54 + 0.2e1 * t34 * t9, -0.2e1 * t69 * t30, 0.2e1 * t30 * t68 - 0.2e1 * t31 * t69, -0.2e1 * t115 * t30 + 0.2e1 * t69 * t75, 0.2e1 * t68 * t31, -0.2e1 * t115 * t31 - 0.2e1 * t68 * t75, t55, 0.2e1 * t115 * t4 + 0.2e1 * t13 * t75 + 0.2e1 * t21 * t68 + 0.2e1 * t31 * t42, 0.2e1 * t115 * t3 - 0.2e1 * t14 * t75 + 0.2e1 * t21 * t69 - 0.2e1 * t30 * t42, 0.2e1 * t13 * t30 - 0.2e1 * t14 * t31 + 0.2e1 * t3 * t68 - 0.2e1 * t4 * t69, 0.2e1 * t13 * t4 - 0.2e1 * t14 * t3 + 0.2e1 * t21 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, 0, -t173, 0, -t146, t238, 0, 0, t375 * t307 + (-t165 + (0.2e1 * t291 + t305) * t199) * t197, -t197 * t317 - t250 * t331 + (-t378 - t239) * t199, t252 * t194, t381 (t199 * t334 + t306) * t194, 0, -pkin(2) * t317 - t146 * t199 + t197 * t326 - t252 * t368, pkin(2) * t378 - t306 * t368 + t353 + (-pkin(9) * t173 + t326) * t199, -t106 * t330 - t107 * t331 + t250 * t319 + t264 + (-t197 * t378 + t381) * pkin(9), -pkin(2) * t146 + ((-t106 * t199 - t107 * t197) * qJD(3) + t264) * pkin(9), -t129 * t223 - t159 * t217, -t130 * t223 + t158 * t217 + t262 (t129 * t200 + t159 * t334) * t194, t45 (t130 * t200 - t158 * t334) * t194, 0, t115 * t320 + t105 * t158 + t121 * t130 + t185 * t75 + (-t136 * t334 + t200 * t99) * t194, t105 * t159 - t121 * t129 - t137 * t173 - t185 * t217 + t223 * t320 - t343 * t377, t115 * t377 + t56 * t129 - t57 * t130 - t136 * t217 - t137 * t75 + t26 * t158 - t27 * t159 + t223 * t99, t105 * t185 + t121 * t320 - t27 * t136 - t26 * t137 - t377 * t57 - t56 * t99 (-t104 * t129 + t159 * t214) * t195, t104 * t346 + t195 * t293 + (t60 - t384) * t159, t104 * t130 - t115 * t342 + t158 * t214 + t351 * t75 (-t159 * t255 - t293) * t193, -t130 * t340 + t158 * t255 + t193 * t262, t45, t52 * t115 + t90 * t75 + t9 * t158 + t34 * t130 + t99 * t340 - t136 * t255 + (-t54 * t129 + t25 * t159) * t193, -t10 * t158 + t99 * t104 - t53 * t115 - t35 * t130 + t136 * t214 + t25 * t351 - t342 * t54 - t91 * t75, -t10 * t352 - t52 * t104 - t214 * t90 + t255 * t91 + t34 * t342 - t340 * t53 + t346 * t35 - t351 * t9, t10 * t91 + t136 * t25 + t34 * t52 + t35 * t53 + t54 * t99 + t9 * t90, t117 * t30 - t66 * t69, t116 * t30 + t117 * t31 + t66 * t68 - t67 * t69, -t115 * t66 - t117 * t75 + t130 * t69 - t158 * t30, t116 * t31 + t67 * t68, -t115 * t67 - t116 * t75 - t130 * t68 - t158 * t31, t45, t114 * t31 + t115 * t18 + t116 * t21 + t13 * t130 + t158 * t4 + t42 * t67 + t43 * t75 + t68 * t77, -t114 * t30 + t115 * t17 - t117 * t21 - t130 * t14 + t158 * t3 - t42 * t66 - t44 * t75 + t69 * t77, t116 * t3 + t117 * t4 + t13 * t66 - t14 * t67 + t17 * t68 - t18 * t69 + t30 * t43 - t31 * t44, t114 * t21 + t13 * t18 - t14 * t17 - t3 * t44 + t4 * t43 + t42 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t304, 0.2e1 * (-t197 ^ 2 + t375) * qJD(3), 0, -0.2e1 * t304, 0, 0, t197 * t325, t199 * t325, 0, 0, t324, t387, 0, t112, 0, 0, 0.2e1 * t130 * t185 + 0.2e1 * t158 * t320, -0.2e1 * t129 * t185 + 0.2e1 * t159 * t320, -0.2e1 * t137 * t130 + 0.2e1 * t158 * t377 + 0.2e1 * t261, 0.2e1 * t137 * t247 + 0.2e1 * t359 + 0.2e1 * (t137 * t282 + (t185 * pkin(3) + t137 * t281) * t197) * qJD(3), t192 * t324, 0.4e1 * t159 * t122, -0.2e1 * t260 * t195, t190 * t324, t193 * t387, t112, 0.2e1 * t130 * t90 + 0.2e1 * t158 * t52 + 0.2e1 * t193 * t261, -0.2e1 * t130 * t91 - 0.2e1 * t158 * t53 + 0.2e1 * t195 * t261, 0.2e1 * (-t193 * t53 - t195 * t52) * t159 + 0.2e1 * (t193 * t91 + t195 * t90) * t129, 0.2e1 * t52 * t90 + 0.2e1 * t53 * t91 + 0.2e1 * t359, 0.2e1 * t117 * t66, 0.2e1 * t116 * t66 + 0.2e1 * t117 * t67, -0.2e1 * t117 * t130 - 0.2e1 * t158 * t66, 0.2e1 * t116 * t67, -0.2e1 * t116 * t130 - 0.2e1 * t158 * t67, t112, 0.2e1 * t114 * t67 + 0.2e1 * t116 * t77 + 0.2e1 * t130 * t43 + 0.2e1 * t158 * t18, -0.2e1 * t114 * t66 - 0.2e1 * t117 * t77 - 0.2e1 * t130 * t44 + 0.2e1 * t158 * t17, 0.2e1 * t116 * t17 + 0.2e1 * t117 * t18 + 0.2e1 * t43 * t66 - 0.2e1 * t44 * t67, 0.2e1 * t114 * t77 - 0.2e1 * t17 * t44 + 0.2e1 * t18 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, 0, -t317, t173, t79, t78, 0, 0, 0, 0, -t217, 0, -t75, t173 (t200 * t328 + t334 * t373) * t194 * pkin(3) + t27, -t196 * t284 + t283 * t343 + t26, -t115 * t283 + t186 * t223 + t217 * t321 - t370 * t75 (t373 * t27 - t196 * t26 + (-t196 * t56 + t373 * t57) * qJD(4)) * pkin(3), t384, t36, t71, t60, t72, 0, t340 * t186 - t184 * t255 - t357 + (-t181 * t75 - t350) * t193, t104 * t186 + t184 * t214 - t195 * t350 - t349 * t75 + t24, t172 * t380 + t181 * t385 + t386, t172 * t266 + t181 * t386 + t184 * t25 + t186 * t54, t22, t5, t49, t23, t50, 0, t115 * t88 + t119 * t75 + t164 * t31 + t186 * t68 + t363, t115 * t87 - t120 * t75 - t164 * t30 + t186 * t69 + t362, t119 * t30 - t120 * t31 + t68 * t87 - t69 * t88 + t303, t119 * t4 - t120 * t3 + t13 * t88 - t14 * t87 + t164 * t21 + t186 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330, 0, -t331, 0, -t319, pkin(9) * t331, 0, 0, 0, 0, -t129, 0, -t130, 0, -t99, t377 (t373 * t129 - t130 * t196 + (-t158 * t373 + t159 * t196) * qJD(4)) * pkin(3), t137 * t283 - t321 * t99 - t370 * t377 + t285, -t122, t89, t124, t122, t125, 0, t193 * t230 - t358, t195 * t230 + t94, t33, t172 * t265 + t181 * t33 + t184 * t99 + t285, t47, t29, t84, t48, t85, 0, t116 * t186 + t119 * t130 + t158 * t88 + t164 * t67 + t361, -t117 * t186 - t120 * t130 + t158 * t87 - t164 * t66 + t360, t116 * t87 + t117 * t88 + t119 * t66 - t120 * t67 + t296, t114 * t186 + t119 * t18 - t120 * t17 + t164 * t77 + t43 * t88 - t44 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t186, -0.2e1 * t283, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t286, 0.2e1 * t287, 0.2e1 * t390, 0.2e1 * t181 * t390 + 0.2e1 * t184 * t186, t128, t93, 0, t127, 0, 0, 0.2e1 * t339, 0.2e1 * t338, 0.2e1 * t289, 0.2e1 * t119 * t88 - 0.2e1 * t120 * t87 + 0.2e1 * t164 * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, 0, -t75, t173, t27, t26, 0, 0, t384, t36, t71, t60, t72, 0, pkin(4) * t255 - t357 + (-qJ(5) * t75 - t327) * t193, -pkin(4) * t214 - t195 * t327 - t355 * t75 + t24, qJ(5) * t385 + qJD(5) * t380 + t386, -pkin(4) * t25 + qJ(5) * t386 + qJD(5) * t266, t22, t5, t49, t23, t50, 0, t109 * t115 + t132 * t75 + t182 * t31 + t363, t108 * t115 - t133 * t75 - t182 * t30 + t362, t108 * t68 - t109 * t69 + t132 * t30 - t133 * t31 + t303, -t108 * t14 + t109 * t13 + t132 * t4 - t133 * t3 + t182 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, 0, -t130, 0, -t99, t377, 0, 0, -t122, t89, t124, t122, t125, 0, t193 * t249 - t358, t195 * t249 + t94, t33, -pkin(4) * t99 + qJ(5) * t33 + qJD(5) * t265, t47, t29, t84, t48, t85, 0, t109 * t158 + t130 * t132 + t182 * t67 + t361, t108 * t158 - t130 * t133 - t182 * t66 + t360, t108 * t116 + t109 * t117 + t132 * t66 - t133 * t67 + t296, -t108 * t44 + t109 * t43 + t132 * t18 - t133 * t17 + t182 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t283, 0, 0, 0, 0, 0, 0, 0, 0, -t286, t287, t391 + t390, -pkin(4) * t186 + qJ(5) * t390 + t181 * t391, t128, t93, 0, t127, 0, 0, t339 + t347, t338 - t348, t288 + t289, -t108 * t120 + t109 * t119 + t132 * t88 - t133 * t87 + t182 * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, qJ(5) * t392, t128, t93, 0, t127, 0, 0, 0.2e1 * t347, -0.2e1 * t348, 0.2e1 * t288, -0.2e1 * t108 * t133 + 0.2e1 * t109 * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, t214, 0, t25, 0, 0, 0, 0, 0, 0, t31, -t30, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, -t342, 0, t99, 0, 0, 0, 0, 0, 0, t67, -t66, 0, t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, 0, 0, 0, 0, 0, 0, t148, -t147, 0, t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, -t147, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, 0, -t31, t75, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, 0, -t67, t130, t18, t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, 0, -t148, 0, t88, t87, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, 0, -t148, 0, t109, t108, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
