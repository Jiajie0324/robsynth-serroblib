% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR9_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR9_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:55:44
% EndTime: 2019-03-09 22:56:01
% DurationCPUTime: 5.59s
% Computational Cost: add. (9841->414), mult. (25915->745), div. (0->0), fcn. (25785->12), ass. (0->206)
t193 = sin(pkin(12));
t195 = cos(pkin(12));
t250 = t193 ^ 2 + t195 ^ 2;
t284 = t250 * qJD(5);
t285 = 0.2e1 * t284;
t279 = cos(qJ(4));
t231 = qJD(4) * t279;
t224 = pkin(3) * t231;
t175 = t224 + qJD(5);
t283 = t250 * t175;
t196 = cos(pkin(6));
t194 = sin(pkin(6));
t203 = cos(qJ(2));
t259 = t194 * t203;
t240 = pkin(8) * t259;
t200 = sin(qJ(2));
t278 = pkin(1) * t200;
t139 = t240 + (pkin(9) + t278) * t196;
t140 = (-pkin(2) * t203 - pkin(9) * t200 - pkin(1)) * t194;
t199 = sin(qJ(3));
t202 = cos(qJ(3));
t255 = t202 * t139 + t199 * t140;
t197 = sin(qJ(6));
t201 = cos(qJ(6));
t159 = t201 * t193 + t197 * t195;
t148 = t159 * qJD(6);
t282 = qJD(3) + qJD(4);
t281 = 0.2e1 * t194;
t280 = -pkin(10) - pkin(9);
t277 = pkin(3) * t194;
t276 = pkin(9) * t194;
t275 = t195 * pkin(5);
t274 = t203 * pkin(1);
t198 = sin(qJ(4));
t244 = qJD(4) * t198;
t260 = t194 * t200;
t237 = t199 * t260;
t257 = t196 * t202;
t211 = -t237 + t257;
t248 = qJD(2) * t203;
t232 = t194 * t248;
t122 = qJD(3) * t211 + t202 * t232;
t249 = qJD(2) * t200;
t176 = t194 * t249;
t144 = (pkin(2) * t200 - pkin(9) * t203) * t194 * qJD(2);
t145 = -t196 * pkin(1) * t248 + pkin(8) * t176;
t74 = -t255 * qJD(3) + t202 * t144 + t199 * t145;
t52 = pkin(3) * t176 - t122 * pkin(10) + t74;
t236 = t202 * t260;
t247 = qJD(3) * t199;
t235 = qJD(3) * t236 + t196 * t247 + t199 * t232;
t246 = qJD(3) * t202;
t73 = t139 * t247 - t140 * t246 - t199 * t144 + t202 * t145;
t58 = -pkin(10) * t235 - t73;
t149 = t196 * t199 + t236;
t229 = -t199 * t139 + t202 * t140;
t84 = -pkin(3) * t259 - t149 * pkin(10) + t229;
t92 = pkin(10) * t211 + t255;
t21 = -t198 * t52 - t84 * t231 + t92 * t244 - t279 * t58;
t18 = (qJ(5) * t249 - qJD(5) * t203) * t194 - t21;
t146 = (t196 * t278 + t240) * qJD(2);
t103 = pkin(3) * t235 + t146;
t108 = t279 * t149 + t198 * t211;
t107 = t198 * t149 - t279 * t211;
t68 = -t107 * qJD(4) + t279 * t122 - t198 * t235;
t69 = t108 * qJD(4) + t198 * t122 + t279 * t235;
t32 = t69 * pkin(4) - t68 * qJ(5) - t108 * qJD(5) + t103;
t8 = t195 * t18 + t193 * t32;
t6 = t8 * t195;
t22 = -t198 * t58 - t92 * t231 - t84 * t244 + t279 * t52;
t20 = -pkin(4) * t176 - t22;
t59 = -t176 * t195 + t193 * t68;
t15 = t59 * pkin(5) + t20;
t256 = t201 * t195;
t158 = t197 * t193 - t256;
t101 = t193 * t108 + t195 * t259;
t221 = -t198 * t92 + t279 * t84;
t49 = pkin(4) * t259 - t221;
t38 = t101 * pkin(5) + t49;
t273 = t38 * t148 + t15 * t158;
t147 = t158 * qJD(6);
t272 = -t38 * t147 + t15 * t159;
t269 = t198 * t84 + t279 * t92;
t48 = -qJ(5) * t259 + t269;
t179 = pkin(8) * t260;
t186 = -t202 * pkin(3) - pkin(2);
t115 = pkin(3) * t237 + t179 + (t186 - t274) * t196;
t61 = t107 * pkin(4) - t108 * qJ(5) + t115;
t34 = t193 * t61 + t195 * t48;
t172 = t280 * t199;
t173 = t280 * t202;
t127 = -t279 * t172 - t198 * t173;
t161 = t198 * t202 + t279 * t199;
t265 = t161 * t193;
t106 = pkin(5) * t265 + t127;
t210 = -t198 * t199 + t279 * t202;
t119 = t282 * t210;
t261 = t193 * t119;
t128 = t198 * t172 - t279 * t173;
t234 = qJD(3) * t280;
t212 = t279 * t234;
t223 = t198 * t234;
t99 = qJD(4) * t128 + t199 * t223 - t202 * t212;
t72 = pkin(5) * t261 + t99;
t271 = t106 * t148 + t72 * t158;
t270 = -t106 * t147 + t72 * t159;
t120 = t282 * t161;
t239 = pkin(3) * t247;
t78 = t120 * pkin(4) - t119 * qJ(5) - t161 * qJD(5) + t239;
t98 = -t172 * t231 - t173 * t244 - t199 * t212 - t202 * t223;
t47 = t193 * t78 - t195 * t98;
t268 = t20 * t195;
t267 = t99 * t195;
t266 = t146 * t199;
t264 = t161 * t195;
t183 = -pkin(4) - t275;
t263 = t183 * t147;
t262 = t183 * t148;
t258 = t195 * t119;
t116 = -pkin(4) * t210 - t161 * qJ(5) + t186;
t89 = t193 * t116 + t195 * t128;
t185 = -t279 * pkin(3) - pkin(4);
t166 = t185 - t275;
t238 = pkin(3) * t244;
t254 = t166 * t148 + t158 * t238;
t253 = -t166 * t147 + t159 * t238;
t245 = qJD(3) * t203;
t243 = qJD(6) * t197;
t242 = qJD(6) * t201;
t241 = -0.2e1 * pkin(2) * qJD(3);
t191 = t194 ^ 2;
t233 = t191 * t248;
t7 = -t193 * t18 + t195 * t32;
t33 = -t193 * t48 + t195 * t61;
t46 = t193 * t98 + t195 * t78;
t88 = t195 * t116 - t193 * t128;
t227 = t193 * t238;
t226 = t195 * t238;
t225 = t59 * pkin(11) - t8;
t222 = t200 * t233;
t220 = -t7 * t193 + t6;
t219 = t119 * t49 + t161 * t20;
t218 = -t193 * t33 + t195 * t34;
t29 = -t46 * t193 + t47 * t195;
t217 = -t193 * t88 + t195 * t89;
t102 = t195 * t108 - t193 * t259;
t24 = t107 * pkin(5) - t102 * pkin(11) + t33;
t28 = -t101 * pkin(11) + t34;
t10 = t197 * t24 + t201 * t28;
t71 = -pkin(5) * t210 - pkin(11) * t264 + t88;
t77 = -pkin(11) * t265 + t89;
t40 = t197 * t71 + t201 * t77;
t182 = t198 * pkin(3) + qJ(5);
t216 = -t107 * t175 - t182 * t69;
t215 = t119 * t127 + t161 * t99;
t214 = pkin(11) * t261 - t47;
t213 = -qJ(5) * t69 - qJD(5) * t107;
t64 = t201 * t101 + t197 * t102;
t65 = -t197 * t101 + t201 * t102;
t153 = (-pkin(11) - t182) * t193;
t189 = t195 * pkin(11);
t154 = t195 * t182 + t189;
t114 = t197 * t153 + t201 * t154;
t169 = (-pkin(11) - qJ(5)) * t193;
t170 = t195 * qJ(5) + t189;
t124 = t197 * t169 + t201 * t170;
t209 = t199 * t245 + t202 * t249;
t208 = t199 * t249 - t202 * t245;
t207 = -pkin(4) * t119 - qJ(5) * t120 + qJD(5) * t210;
t60 = t176 * t193 + t195 * t68;
t206 = t69 * pkin(5) - t60 * pkin(11) + t7;
t205 = t120 * pkin(5) - pkin(11) * t258 + t46;
t204 = t119 * t185 - t120 * t182 + t161 * t238 + t175 * t210;
t164 = -0.2e1 * t222;
t138 = t179 + (-pkin(2) - t274) * t196;
t123 = t201 * t169 - t197 * t170;
t118 = -0.2e1 * t159 * t147;
t113 = t201 * t153 - t197 * t154;
t110 = t158 * t161;
t109 = t159 * t161;
t105 = -qJD(5) * t159 - qJD(6) * t124;
t104 = -t169 * t242 - qJD(5) * t256 + (qJD(5) * t193 + qJD(6) * t170) * t197;
t95 = t99 * t193;
t93 = 0.2e1 * t147 * t158 - 0.2e1 * t159 * t148;
t87 = -qJD(6) * t114 - t159 * t175;
t86 = -t153 * t242 - t175 * t256 + (qJD(6) * t154 + t175 * t193) * t197;
t83 = -t158 * t120 + t148 * t210;
t82 = t159 * t120 + t147 * t210;
t63 = t119 * t159 + t242 * t264 - t243 * t265;
t62 = -t119 * t158 - t161 * t148;
t44 = -t148 * t107 - t158 * t69;
t43 = -t147 * t107 + t159 * t69;
t42 = t110 * t147 + t62 * t159;
t39 = -t197 * t77 + t201 * t71;
t27 = qJD(6) * t65 + t197 * t60 + t201 * t59;
t26 = -qJD(6) * t64 - t197 * t59 + t201 * t60;
t25 = t147 * t109 + t110 * t148 - t62 * t158 - t159 * t63;
t19 = t20 * t193;
t16 = -t65 * t147 + t26 * t159;
t12 = -qJD(6) * t40 + t197 * t214 + t201 * t205;
t11 = -t197 * t205 + t201 * t214 - t71 * t242 + t77 * t243;
t9 = -t197 * t28 + t201 * t24;
t3 = t147 * t64 - t65 * t148 - t26 * t158 - t159 * t27;
t2 = -qJD(6) * t10 + t197 * t225 + t201 * t206;
t1 = -t197 * t206 + t201 * t225 - t24 * t242 + t28 * t243;
t4 = [0, 0, 0, 0.2e1 * t222, 0.2e1 * (-t200 ^ 2 + t203 ^ 2) * t191 * qJD(2), 0.2e1 * t196 * t232, -0.2e1 * t196 * t176, 0, -0.2e1 * t191 * pkin(1) * t249 - 0.2e1 * t146 * t196, -0.2e1 * pkin(1) * t233 + 0.2e1 * t145 * t196, 0.2e1 * t149 * t122, 0.2e1 * t122 * t211 - 0.2e1 * t149 * t235 (-t122 * t203 + t149 * t249) * t281, 0.2e1 * t176 * t211 + 0.2e1 * t235 * t259, t164, -0.2e1 * t146 * t257 + 0.2e1 * t138 * t235 + 0.2e1 * (-t74 * t203 + (qJD(2) * t229 + t266) * t200) * t194, 0.2e1 * t138 * t122 + 0.2e1 * t146 * t149 + 0.2e1 * (-t73 * t203 - t249 * t255) * t194, 0.2e1 * t108 * t68, -0.2e1 * t68 * t107 - 0.2e1 * t108 * t69 (t108 * t249 - t203 * t68) * t281 (-t107 * t249 + t203 * t69) * t281, t164, 0.2e1 * t103 * t107 + 0.2e1 * t115 * t69 + 0.2e1 * (-t22 * t203 + t221 * t249) * t194, 0.2e1 * t103 * t108 + 0.2e1 * t115 * t68 + 0.2e1 * (-t21 * t203 - t269 * t249) * t194, 0.2e1 * t20 * t101 + 0.2e1 * t7 * t107 + 0.2e1 * t33 * t69 + 0.2e1 * t49 * t59, 0.2e1 * t20 * t102 - 0.2e1 * t8 * t107 - 0.2e1 * t34 * t69 + 0.2e1 * t49 * t60, -0.2e1 * t8 * t101 - 0.2e1 * t7 * t102 - 0.2e1 * t33 * t60 - 0.2e1 * t34 * t59, 0.2e1 * t49 * t20 + 0.2e1 * t33 * t7 + 0.2e1 * t34 * t8, 0.2e1 * t65 * t26, -0.2e1 * t26 * t64 - 0.2e1 * t65 * t27, 0.2e1 * t26 * t107 + 0.2e1 * t65 * t69, -0.2e1 * t27 * t107 - 0.2e1 * t64 * t69, 0.2e1 * t107 * t69, 0.2e1 * t2 * t107 + 0.2e1 * t15 * t64 + 0.2e1 * t38 * t27 + 0.2e1 * t9 * t69, 0.2e1 * t1 * t107 - 0.2e1 * t10 * t69 + 0.2e1 * t15 * t65 + 0.2e1 * t38 * t26; 0, 0, 0, 0, 0, t232, -t176, 0, -t146, t145, t122 * t199 + t149 * t246, -t199 * t235 + t122 * t202 + (-t149 * t199 + t202 * t211) * qJD(3), t208 * t194, t209 * t194, 0, -pkin(2) * t235 + t138 * t247 - t146 * t202 - t208 * t276, -pkin(2) * t122 + t138 * t246 - t209 * t276 + t266, t108 * t119 + t68 * t161, -t119 * t107 - t108 * t120 - t161 * t69 + t210 * t68 (-t119 * t203 + t161 * t249) * t194 (t120 * t203 + t210 * t249) * t194, 0, t107 * t239 - t103 * t210 + t115 * t120 + t186 * t69 + (-t127 * t249 + t203 * t99) * t194, t108 * t239 + t103 * t161 + t115 * t119 + t186 * t68 + (-t128 * t249 - t203 * t98) * t194, t99 * t101 + t46 * t107 + t33 * t120 + t127 * t59 + t193 * t219 - t210 * t7 + t88 * t69, t99 * t102 - t47 * t107 - t34 * t120 + t127 * t60 + t195 * t219 + t210 * t8 - t89 * t69, -t47 * t101 - t46 * t102 - t89 * t59 - t88 * t60 + (-t193 * t8 - t195 * t7) * t161 + (-t193 * t34 - t195 * t33) * t119, t20 * t127 + t33 * t46 + t34 * t47 + t49 * t99 + t7 * t88 + t8 * t89, -t26 * t110 + t65 * t62, -t26 * t109 + t110 * t27 - t62 * t64 - t65 * t63, t62 * t107 - t110 * t69 + t65 * t120 - t210 * t26, -t63 * t107 - t109 * t69 - t64 * t120 + t210 * t27, t107 * t120 - t210 * t69, t106 * t27 + t12 * t107 + t15 * t109 + t9 * t120 - t2 * t210 + t38 * t63 + t39 * t69 + t72 * t64, -t1 * t210 - t10 * t120 + t106 * t26 + t11 * t107 - t15 * t110 + t38 * t62 - t40 * t69 + t72 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t199 * t246, 0.2e1 * (-t199 ^ 2 + t202 ^ 2) * qJD(3), 0, 0, 0, t199 * t241, t202 * t241, 0.2e1 * t161 * t119, 0.2e1 * t119 * t210 - 0.2e1 * t161 * t120, 0, 0, 0, 0.2e1 * t186 * t120 - 0.2e1 * t210 * t239, 0.2e1 * t186 * t119 + 0.2e1 * t161 * t239, 0.2e1 * t88 * t120 + 0.2e1 * t193 * t215 - 0.2e1 * t210 * t46, -0.2e1 * t89 * t120 + 0.2e1 * t195 * t215 + 0.2e1 * t210 * t47, 0.2e1 * (-t193 * t47 - t195 * t46) * t161 + 0.2e1 * (-t193 * t89 - t195 * t88) * t119, 0.2e1 * t127 * t99 + 0.2e1 * t88 * t46 + 0.2e1 * t89 * t47, -0.2e1 * t110 * t62, -0.2e1 * t62 * t109 + 0.2e1 * t110 * t63, -0.2e1 * t110 * t120 - 0.2e1 * t210 * t62, -0.2e1 * t109 * t120 + 0.2e1 * t210 * t63, -0.2e1 * t210 * t120, 0.2e1 * t106 * t63 + 0.2e1 * t72 * t109 - 0.2e1 * t12 * t210 + 0.2e1 * t39 * t120, 0.2e1 * t106 * t62 - 0.2e1 * t11 * t210 - 0.2e1 * t72 * t110 - 0.2e1 * t40 * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, -t235, t176, t74, t73, 0, 0, t68, -t69, t176 (t203 * t244 + t279 * t249) * t277 + t22 (-t198 * t249 + t203 * t231) * t277 + t21, t101 * t238 + t185 * t59 + t193 * t216 - t268, t102 * t238 + t185 * t60 + t195 * t216 + t19, t6 + (-t101 * t175 - t182 * t59) * t195 + (t102 * t175 + t182 * t60 - t7) * t193, t175 * t218 + t182 * t220 + t20 * t185 + t238 * t49, t16, t3, t43, t44, 0, t87 * t107 + t113 * t69 + t166 * t27 + t238 * t64 + t273, t86 * t107 - t114 * t69 + t166 * t26 + t238 * t65 + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, -t247, 0, -pkin(9) * t246, pkin(9) * t247, 0, 0, t119, -t120, 0, -t99, t98, t193 * t204 - t267, t195 * t204 + t95, t29, t127 * t238 + t175 * t217 + t182 * t29 + t99 * t185, t42, t25, t82, t83, 0, t109 * t238 + t113 * t120 + t166 * t63 - t210 * t87 + t271, -t110 * t238 - t114 * t120 + t166 * t62 - t210 * t86 + t270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t238, -0.2e1 * t224, -0.2e1 * t226, 0.2e1 * t227, 0.2e1 * t283, 0.2e1 * t182 * t283 + 0.2e1 * t185 * t238, t118, t93, 0, 0, 0, 0.2e1 * t254, 0.2e1 * t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, -t69, t176, t22, t21, -pkin(4) * t59 + t193 * t213 - t268, -pkin(4) * t60 + t195 * t213 + t19, t6 + (-qJ(5) * t59 - qJD(5) * t101) * t195 + (qJ(5) * t60 + qJD(5) * t102 - t7) * t193, -t20 * pkin(4) + qJ(5) * t220 + qJD(5) * t218, t16, t3, t43, t44, 0, t105 * t107 + t123 * t69 + t183 * t27 + t273, t104 * t107 - t124 * t69 + t183 * t26 + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, -t120, 0, -t99, t98, t193 * t207 - t267, t195 * t207 + t95, t29, -t99 * pkin(4) + qJ(5) * t29 + qJD(5) * t217, t42, t25, t82, t83, 0, -t105 * t210 + t123 * t120 + t183 * t63 + t271, -t104 * t210 - t124 * t120 + t183 * t62 + t270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, -t224, -t226, t227, t284 + t283, -pkin(4) * t238 + qJ(5) * t283 + t182 * t284, t118, t93, 0, 0, 0, t254 + t262, t253 - t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, qJ(5) * t285, t118, t93, 0, 0, 0, 0.2e1 * t262, -0.2e1 * t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t60, 0, t20, 0, 0, 0, 0, 0, t27, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t258, 0, t99, 0, 0, 0, 0, 0, t63, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, 0, 0, 0, 0, 0, t148, -t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, -t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, -t27, t69, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, -t63, t120, t12, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, -t148, 0, t87, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, -t148, 0, t105, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
