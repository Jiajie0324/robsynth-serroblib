% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRPR9_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPR9_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRRPR9_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:56:14
% EndTime: 2019-03-09 22:56:42
% DurationCPUTime: 18.65s
% Computational Cost: add. (18884->699), mult. (48738->944), div. (0->0), fcn. (39120->12), ass. (0->279)
t789 = cos(pkin(6));
t869 = qJD(1) * t789;
t772 = qJD(2) + t869;
t792 = sin(qJ(3));
t796 = cos(qJ(3));
t793 = sin(qJ(2));
t787 = sin(pkin(6));
t870 = qJD(1) * t787;
t848 = t793 * t870;
t711 = t772 * t796 - t792 * t848;
t712 = t772 * t792 + t796 * t848;
t791 = sin(qJ(4));
t795 = cos(qJ(4));
t663 = -t795 * t711 + t712 * t791;
t661 = qJD(6) + t663;
t797 = cos(qJ(2));
t855 = pkin(1) * t869;
t727 = -pkin(8) * t848 + t797 * t855;
t810 = t787 * (pkin(2) * t793 - pkin(9) * t797);
t728 = qJD(1) * t810;
t834 = -t727 * t792 + t796 * t728;
t912 = -pkin(10) - pkin(9);
t850 = qJD(3) * t912;
t890 = t796 * t797;
t953 = (pkin(3) * t793 - pkin(10) * t890) * t870 + t834 - t796 * t850;
t868 = qJD(1) * t797;
t847 = t787 * t868;
t828 = t792 * t847;
t873 = t796 * t727 + t792 * t728;
t952 = pkin(10) * t828 + t792 * t850 - t873;
t763 = -qJD(3) + t847;
t752 = -qJD(4) + t763;
t786 = sin(pkin(12));
t788 = cos(pkin(12));
t813 = t711 * t791 + t795 * t712;
t636 = t788 * t752 + t786 * t813;
t794 = cos(qJ(6));
t638 = -t752 * t786 + t788 * t813;
t790 = sin(qJ(6));
t906 = t638 * t790;
t943 = -t794 * t636 - t906;
t951 = t661 * t943;
t742 = t791 * t792 - t795 * t796;
t921 = qJD(3) + qJD(4);
t686 = t921 * t742;
t697 = t742 * t847;
t876 = -t686 + t697;
t743 = t791 * t796 + t792 * t795;
t875 = (-t847 + t921) * t743;
t740 = t786 * t790 - t794 * t788;
t950 = t661 * t740;
t741 = t786 * t794 + t788 * t790;
t734 = t741 * qJD(6);
t949 = t741 * t663 + t734;
t764 = t912 * t792;
t765 = t912 * t796;
t812 = t764 * t795 + t765 * t791;
t948 = qJD(4) * t812 - t953 * t791 + t952 * t795;
t768 = t793 * t855;
t730 = pkin(8) * t847 + t768;
t865 = qJD(3) * t792;
t824 = -t730 + (-t828 + t865) * pkin(3);
t937 = t663 * t786;
t947 = pkin(5) * t937;
t946 = pkin(11) * t937;
t945 = qJ(5) * t848 - t948;
t944 = -pkin(4) * t875 + qJ(5) * t876 + qJD(5) * t743 - t824;
t695 = pkin(9) * t772 + t730;
t725 = (-pkin(2) * t797 - pkin(9) * t793 - pkin(1)) * t787;
t707 = qJD(1) * t725;
t653 = -t695 * t792 + t796 * t707;
t627 = -pkin(10) * t712 + t653;
t613 = -pkin(3) * t763 + t627;
t654 = t695 * t796 + t707 * t792;
t628 = pkin(10) * t711 + t654;
t626 = t795 * t628;
t544 = t791 * t613 + t626;
t540 = -qJ(5) * t752 + t544;
t694 = -pkin(2) * t772 - t727;
t667 = -pkin(3) * t711 + t694;
t557 = pkin(4) * t663 - qJ(5) * t813 + t667;
t514 = -t540 * t786 + t788 * t557;
t495 = pkin(5) * t663 - pkin(11) * t638 + t514;
t515 = t788 * t540 + t786 * t557;
t501 = -pkin(11) * t636 + t515;
t480 = t495 * t790 + t501 * t794;
t856 = qJD(1) * qJD(2);
t843 = t787 * t856;
t827 = t793 * t843;
t825 = qJD(3) * t848;
t826 = t797 * t843;
t864 = qJD(3) * t796;
t683 = t772 * t864 - t792 * t825 + t796 * t826;
t729 = qJD(2) * t810;
t719 = qJD(1) * t729;
t892 = t787 * t793;
t773 = pkin(8) * t892;
t910 = pkin(1) * t797;
t731 = (t789 * t910 - t773) * qJD(2);
t720 = qJD(1) * t731;
t799 = -qJD(3) * t654 + t796 * t719 - t792 * t720;
t556 = pkin(3) * t827 - pkin(10) * t683 + t799;
t805 = -t695 * t865 + t707 * t864 + t792 * t719 + t796 * t720;
t851 = t772 * t865 + t792 * t826 + t796 * t825;
t573 = -pkin(10) * t851 + t805;
t862 = qJD(4) * t795;
t863 = qJD(4) * t791;
t829 = -t795 * t556 + t791 * t573 + t613 * t863 + t628 * t862;
t494 = -pkin(4) * t827 + t829;
t580 = t795 * t683 + t711 * t862 - t712 * t863 - t791 * t851;
t568 = t580 * t786 - t788 * t827;
t489 = pkin(5) * t568 + t494;
t625 = t791 * t628;
t543 = t613 * t795 - t625;
t539 = pkin(4) * t752 + qJD(5) - t543;
t531 = pkin(5) * t636 + t539;
t942 = t480 * t813 + t489 * t741 - t531 * t950;
t479 = t495 * t794 - t501 * t790;
t941 = -t479 * t813 + t489 * t740 + t531 * t949;
t569 = t580 * t788 + t786 * t827;
t860 = qJD(6) * t794;
t852 = -t790 * t568 + t794 * t569 - t636 * t860;
t861 = qJD(6) * t790;
t499 = -t638 * t861 + t852;
t814 = t636 * t790 - t638 * t794;
t841 = t794 * t568 + t790 * t569;
t500 = -qJD(6) * t814 + t841;
t581 = qJD(4) * t813 + t683 * t791 + t795 * t851;
t940 = MDP(22) * t827 - t663 ^ 2 * MDP(19) + (-t663 * t752 + t580) * MDP(20) + (MDP(18) * t663 + MDP(19) * t813 - MDP(21) * t752) * t813 + t499 * t741 * MDP(29) + (-t499 * t740 - t741 * t500) * MDP(30) + (-MDP(30) * t950 - t813 * MDP(32)) * t943 + (MDP(31) * t741 - MDP(32) * t740 - MDP(21)) * t581 + (MDP(29) * t950 + MDP(30) * t949 + t813 * MDP(31)) * t814 + (-MDP(31) * t950 - MDP(32) * t949 - MDP(33) * t813) * t661;
t939 = t514 * t663;
t938 = t661 * t814;
t700 = t764 * t791 - t765 * t795;
t933 = qJD(4) * t700 + t952 * t791 + t953 * t795;
t671 = -t697 * t786 - t788 * t848;
t838 = -t686 * t786 - t671;
t672 = -t697 * t788 + t786 * t848;
t837 = -t686 * t788 - t672;
t607 = pkin(4) * t813 + qJ(5) * t663;
t830 = -t791 * t556 - t795 * t573 - t613 * t862 + t628 * t863;
t492 = qJ(5) * t827 - qJD(5) * t752 - t830;
t721 = pkin(8) * t826 + qJD(2) * t768;
t652 = pkin(3) * t851 + t721;
t509 = t581 * pkin(4) - t580 * qJ(5) - qJD(5) * t813 + t652;
t482 = -t492 * t786 + t788 * t509;
t932 = -t515 * t663 - t482;
t931 = t663 * t667 + t830;
t782 = t788 * pkin(11);
t930 = pkin(5) * t813 + t663 * t782;
t783 = t787 ^ 2;
t927 = -0.2e1 * t783 * t856;
t924 = MDP(5) * (t793 ^ 2 - t797 ^ 2);
t548 = t627 * t795 - t625;
t585 = pkin(3) * t712 + t607;
t521 = -t548 * t786 + t788 * t585;
t771 = pkin(3) * t862 + qJD(5);
t923 = -t771 * t786 - t521;
t522 = t788 * t548 + t786 * t585;
t922 = t771 * t788 - t522;
t886 = -t786 * t945 + t788 * t944;
t885 = t786 * t944 + t788 * t945;
t547 = t627 * t791 + t626;
t822 = pkin(3) * t863 - t547;
t882 = pkin(4) * t848 + t933;
t891 = t787 * t797;
t911 = pkin(1) * t793;
t724 = pkin(8) * t891 + (pkin(9) + t911) * t789;
t874 = t796 * t724 + t792 * t725;
t918 = t494 * t786 + t515 * t813;
t917 = -t494 * t788 - t514 * t813;
t914 = -t813 * t667 - t829;
t909 = pkin(3) * t795;
t908 = qJ(5) * t788;
t483 = t788 * t492 + t786 * t509;
t481 = t483 * t788;
t901 = t711 * t763;
t900 = t712 * t763;
t899 = t743 * t786;
t898 = t743 * t788;
t897 = t763 * t792;
t896 = t763 * t796;
t798 = qJD(1) ^ 2;
t893 = t783 * t798;
t735 = -t789 * t796 + t792 * t892;
t845 = qJD(2) * t891;
t690 = -qJD(3) * t735 + t796 * t845;
t800 = -qJD(3) * t874 + t796 * t729 - t731 * t792;
t867 = qJD(2) * t793;
t846 = t787 * t867;
t584 = pkin(3) * t846 - pkin(10) * t690 + t800;
t736 = t789 * t792 + t796 * t892;
t689 = qJD(3) * t736 + t792 * t845;
t804 = -t724 * t865 + t725 * t864 + t792 * t729 + t796 * t731;
t591 = -pkin(10) * t689 + t804;
t835 = -t724 * t792 + t796 * t725;
t634 = -pkin(3) * t891 - pkin(10) * t736 + t835;
t647 = -pkin(10) * t735 + t874;
t803 = t791 * t584 + t795 * t591 + t634 * t862 - t647 * t863;
t503 = (qJ(5) * t867 - qJD(5) * t797) * t787 + t803;
t676 = t795 * t735 + t736 * t791;
t605 = -qJD(4) * t676 - t689 * t791 + t690 * t795;
t677 = -t735 * t791 + t736 * t795;
t606 = qJD(4) * t677 + t795 * t689 + t690 * t791;
t732 = t789 * pkin(1) * t867 + pkin(8) * t845;
t668 = pkin(3) * t689 + t732;
t520 = pkin(4) * t606 - qJ(5) * t605 - qJD(5) * t677 + t668;
t486 = t788 * t503 + t786 * t520;
t525 = t788 * t543 + t786 * t607;
t878 = t791 * t634 + t795 * t647;
t564 = -qJ(5) * t891 + t878;
t723 = t773 + (-pkin(2) - t910) * t789;
t682 = pkin(3) * t735 + t723;
t594 = pkin(4) * t676 - qJ(5) * t677 + t682;
t529 = t788 * t564 + t786 * t594;
t881 = t671 * t790 - t672 * t794 + t686 * t740 - t734 * t743;
t880 = -t794 * t671 - t672 * t790 - t686 * t741 + t860 * t898 - t861 * t899;
t879 = pkin(5) * t838 + t882;
t781 = -pkin(3) * t796 - pkin(2);
t684 = pkin(4) * t742 - qJ(5) * t743 + t781;
t643 = t786 * t684 + t788 * t700;
t866 = qJD(2) * t796;
t858 = qJD(2) - t772;
t857 = -qJD(5) + t539;
t778 = -pkin(5) * t788 - pkin(4);
t849 = t783 * t868;
t476 = pkin(5) * t581 - pkin(11) * t569 + t482;
t477 = -pkin(11) * t568 + t483;
t842 = t794 * t476 - t477 * t790;
t485 = -t503 * t786 + t788 * t520;
t524 = -t543 * t786 + t788 * t607;
t528 = -t564 * t786 + t788 * t594;
t840 = t634 * t795 - t791 * t647;
t642 = t788 * t684 - t700 * t786;
t832 = t783 * t793 * t797 * MDP(4);
t823 = t822 + t947;
t821 = pkin(1) * t927;
t565 = pkin(4) * t891 - t840;
t623 = -pkin(11) * t899 + t643;
t820 = -pkin(5) * t875 + pkin(11) * t837 + qJD(6) * t623 + t886;
t608 = pkin(5) * t742 - pkin(11) * t898 + t642;
t819 = pkin(11) * t838 - qJD(6) * t608 + t885;
t818 = t476 * t790 + t477 * t794;
t817 = -t482 * t786 + t481;
t660 = t677 * t788 - t786 * t891;
t510 = pkin(5) * t676 - pkin(11) * t660 + t528;
t659 = t677 * t786 + t788 * t891;
t517 = -pkin(11) * t659 + t529;
t816 = t510 * t794 - t517 * t790;
t815 = t510 * t790 + t517 * t794;
t601 = t794 * t659 + t660 * t790;
t602 = -t659 * t790 + t660 * t794;
t811 = t584 * t795 - t791 * t591 - t634 * t863 - t647 * t862;
t777 = pkin(3) * t791 + qJ(5);
t738 = t777 * t788 + t782;
t809 = qJD(6) * t738 - t923 + t930;
t737 = (-pkin(11) - t777) * t786;
t808 = -qJD(6) * t737 - t922 + t946;
t760 = t782 + t908;
t807 = qJD(5) * t786 + qJD(6) * t760 + t524 + t930;
t759 = (-pkin(11) - qJ(5)) * t786;
t806 = -qJD(5) * t788 - qJD(6) * t759 + t525 + t946;
t802 = -t581 * t777 + (t539 - t771) * t663;
t504 = -pkin(4) * t846 - t811;
t780 = -pkin(4) - t909;
t757 = t778 - t909;
t679 = t740 * t743;
t678 = t741 * t743;
t670 = pkin(5) * t899 - t812;
t593 = t605 * t788 + t786 * t846;
t592 = t605 * t786 - t788 * t846;
t537 = pkin(5) * t659 + t565;
t532 = t544 - t947;
t512 = qJD(6) * t602 + t794 * t592 + t593 * t790;
t511 = -qJD(6) * t601 - t592 * t790 + t593 * t794;
t490 = pkin(5) * t592 + t504;
t484 = -pkin(11) * t592 + t486;
t478 = pkin(5) * t606 - pkin(11) * t593 + t485;
t474 = -qJD(6) * t480 + t842;
t473 = qJD(6) * t479 + t818;
t1 = [(-t499 * t601 - t500 * t602 + t511 * t943 + t512 * t814) * MDP(30) + (-t500 * t676 - t512 * t661 - t581 * t601 + t606 * t943) * MDP(32) + ((-qJD(6) * t815 + t478 * t794 - t484 * t790) * t661 + t816 * t581 + t474 * t676 + t479 * t606 - t490 * t943 + t537 * t500 + t489 * t601 + t531 * t512) * MDP(34) + (MDP(6) * t845 - MDP(7) * t846) * (t772 + t869) + (-t580 * t676 - t581 * t677 - t605 * t663 - t606 * t813) * MDP(19) + (t580 * t677 + t605 * t813) * MDP(18) + (t803 * t752 + t668 * t813 + t682 * t580 + t652 * t677 + t667 * t605 + (-t830 * t797 + (-qJD(1) * t878 - t544) * t867) * t787) * MDP(24) + (-t605 * t752 + (-t580 * t797 + (qJD(1) * t677 + t813) * t867) * t787) * MDP(20) + (-(qJD(6) * t816 + t478 * t790 + t484 * t794) * t661 - t815 * t581 - t473 * t676 - t480 * t606 - t490 * t814 + t537 * t499 + t489 * t602 + t531 * t511) * MDP(35) + (t499 * t676 + t511 * t661 + t581 * t602 - t606 * t814) * MDP(31) + (t499 * t602 - t511 * t814) * MDP(29) + (t683 * t736 + t690 * t712) * MDP(11) + (-t483 * t676 - t486 * t663 + t494 * t660 + t504 * t638 - t515 * t606 - t529 * t581 + t539 * t593 + t565 * t569) * MDP(26) + (t482 * t676 + t485 * t663 + t494 * t659 + t504 * t636 + t514 * t606 + t528 * t581 + t539 * t592 + t565 * t568) * MDP(25) + (t581 * t676 + t606 * t661) * MDP(33) + (-t482 * t660 - t483 * t659 - t485 * t638 - t486 * t636 - t514 * t593 - t515 * t592 - t528 * t569 - t529 * t568) * MDP(27) + (t804 * t763 + t732 * t712 + t723 * t683 + t721 * t736 + t694 * t690 + (t805 * t797 + (-qJD(1) * t874 - t654) * t867) * t787) * MDP(17) + (-t690 * t763 + (-t683 * t797 + (qJD(1) * t736 + t712) * t867) * t787) * MDP(13) + (t689 * t763 + (t851 * t797 + (-qJD(1) * t735 + t711) * t867) * t787) * MDP(14) + (t606 * t752 + (t581 * t797 + (-qJD(1) * t676 - t663) * t867) * t787) * MDP(21) + (-t800 * t763 - t732 * t711 + t723 * t851 + t721 * t735 + t694 * t689 + (-t799 * t797 + (qJD(1) * t835 + t653) * t867) * t787) * MDP(16) + (-t811 * t752 + t668 * t663 + t682 * t581 + t652 * t676 + t667 * t606 + (t829 * t797 + (qJD(1) * t840 + t543) * t867) * t787) * MDP(23) + 0.2e1 * t832 * t856 + (-t683 * t735 - t712 * t689 + t690 * t711 - t736 * t851) * MDP(12) + (t482 * t528 + t483 * t529 + t485 * t514 + t486 * t515 + t494 * t565 + t504 * t539) * MDP(28) + (-t720 * t789 - t731 * t772 + t797 * t821) * MDP(10) + (-t721 * t789 - t732 * t772 + t793 * t821) * MDP(9) + (-t763 * t787 - t849) * MDP(15) * t867 + (-t752 * t787 - t849) * MDP(22) * t867 + t924 * t927; (-t876 * MDP(20) + t875 * MDP(21) + t933 * MDP(23) + MDP(24) * t948) * t752 + (-t499 * t678 + t500 * t679 + t814 * t880 + t881 * t943) * MDP(30) + ((t608 * t794 - t623 * t790) * t581 + t474 * t742 + t670 * t500 + t489 * t678 + (t790 * t819 - t794 * t820) * t661 - t879 * t943 + t880 * t531 + t875 * t479) * MDP(34) + (-t500 * t742 - t581 * t678 - t661 * t880 + t875 * t943) * MDP(32) + (t781 * t581 + t652 * t742 + t824 * t663 + t875 * t667) * MDP(23) + (t781 * t580 + t652 * t743 + t876 * t667 + t813 * t824) * MDP(24) + (t580 * t743 + t813 * t876) * MDP(18) + (-t580 * t742 - t581 * t743 - t663 * t876 - t813 * t875) * MDP(19) + (-t499 * t679 - t814 * t881) * MDP(29) + (-(t608 * t790 + t623 * t794) * t581 - t473 * t742 + t670 * t499 - t489 * t679 + (t790 * t820 + t794 * t819) * t661 - t879 * t814 + t881 * t531 - t875 * t480) * MDP(35) + (t499 * t742 - t581 * t679 + t661 * t881 - t814 * t875) * MDP(31) + ((-qJD(2) * t742 + t663) * MDP(21) + (qJD(2) * t812 - t543) * MDP(23) + (qJD(2) * t743 - t813) * MDP(20) + (-qJD(2) * t700 + t544) * MDP(24) + t763 * MDP(15) + t752 * MDP(22) - t858 * MDP(7)) * t848 + (t482 * t742 + t494 * t899 + t514 * t875 + t539 * t838 - t568 * t812 + t581 * t642 + t636 * t882 - t663 * t886) * MDP(25) + (-t483 * t742 + t494 * t898 - t515 * t875 + t539 * t837 - t569 * t812 - t581 * t643 + t638 * t882 + t663 * t885) * MDP(26) + (t482 * t642 + t483 * t643 - t494 * t812 - t514 * t886 - t515 * t885 + t539 * t882) * MDP(28) + (t730 * t772 + t893 * t911 - t721) * MDP(9) + (pkin(8) * t827 + t727 * t772 + (-t789 * t856 + t893) * t910) * MDP(10) + ((t683 - t901) * t796 + (-t851 + t900) * t792) * MDP(12) + (t683 * t792 - t712 * t896) * MDP(11) + (-pkin(2) * t851 - t721 * t796 + t834 * t763 + t730 * t711 + (pkin(9) * t896 + t694 * t792) * qJD(3) + (-t653 * t793 + (-pkin(9) * t867 - t694 * t797) * t792) * t870) * MDP(16) + (t763 * t865 + (-t797 * t897 + (-t711 + t866) * t793) * t870) * MDP(14) + (-pkin(2) * t683 + t721 * t792 - t873 * t763 - t730 * t712 + (-pkin(9) * t897 + t694 * t796) * qJD(3) + (-t694 * t890 + (-pkin(9) * t866 + t654) * t793) * t870) * MDP(17) + (-t763 * t864 + (t763 * t890 + (qJD(2) * t792 - t712) * t793) * t870) * MDP(13) + (-t568 * t643 - t569 * t642 + (-t482 * t788 - t483 * t786) * t743 + t886 * t638 + t885 * t636 - t838 * t515 - t837 * t514) * MDP(27) + (t581 * t742 + t661 * t875) * MDP(33) - t798 * t832 + t893 * t924 + t858 * MDP(6) * t847; (t494 * t780 + t514 * t923 + t515 * t922 + t822 * t539 + t817 * t777) * MDP(28) + MDP(15) * t827 + (-t547 * t752 + (-t663 * t712 + t752 * t863 + t795 * t827) * pkin(3) + t914) * MDP(23) + (-t548 * t752 + (-t712 * t813 + t752 * t862 - t791 * t827) * pkin(3) + t931) * MDP(24) + ((t737 * t794 - t738 * t790) * t581 + t757 * t500 + (t790 * t808 - t794 * t809) * t661 - t823 * t943 + t941) * MDP(34) + (-(t737 * t790 + t738 * t794) * t581 + t757 * t499 + (t790 * t809 + t794 * t808) * t661 - t823 * t814 + t942) * MDP(35) + (-t521 * t663 + t568 * t780 + t636 * t822 + t786 * t802 + t917) * MDP(25) + (t522 * t663 + t569 * t780 + t638 * t822 + t788 * t802 + t918) * MDP(26) + (t521 * t638 + t522 * t636 + t481 + (-t568 * t777 - t636 * t771 - t939) * t788 + (t569 * t777 + t638 * t771 + t932) * t786) * MDP(27) + (-t711 ^ 2 + t712 ^ 2) * MDP(12) + (-t851 - t900) * MDP(14) + (t683 + t901) * MDP(13) - t712 * t711 * MDP(11) + (-t653 * t763 - t694 * t711 - t805) * MDP(17) + (-t654 * t763 - t694 * t712 + t799) * MDP(16) + t940; (-t544 * t752 + t914) * MDP(23) + (-t543 * t752 + t931) * MDP(24) + (-qJ(5) * t581 * t786 - pkin(4) * t568 - t544 * t636 + (t786 * t857 - t524) * t663 + t917) * MDP(25) + (-t581 * t908 - pkin(4) * t569 - t544 * t638 + (t788 * t857 + t525) * t663 + t918) * MDP(26) + (t524 * t638 + t525 * t636 + t481 + (-qJ(5) * t568 - qJD(5) * t636 - t939) * t788 + (qJ(5) * t569 + qJD(5) * t638 + t932) * t786) * MDP(27) + (-pkin(4) * t494 - t514 * t524 - t515 * t525 - t539 * t544 + (-t514 * t786 + t515 * t788) * qJD(5) + t817 * qJ(5)) * MDP(28) + ((t759 * t794 - t760 * t790) * t581 + t778 * t500 + t532 * t943 + (t790 * t806 - t794 * t807) * t661 + t941) * MDP(34) + (-(t759 * t790 + t760 * t794) * t581 + t778 * t499 + t532 * t814 + (t790 * t807 + t794 * t806) * t661 + t942) * MDP(35) + t940; (t638 * t663 + t568) * MDP(25) + (-t636 * t663 + t569) * MDP(26) + (-t636 ^ 2 - t638 ^ 2) * MDP(27) + (t514 * t638 + t515 * t636 + t494) * MDP(28) + (t500 - t938) * MDP(34) + (t499 + t951) * MDP(35); t814 * t943 * MDP(29) + (t814 ^ 2 - t943 ^ 2) * MDP(30) + (t852 - t951) * MDP(31) + (-t841 - t938) * MDP(32) + t581 * MDP(33) + (t480 * t661 + t531 * t814 + t842) * MDP(34) + (t479 * t661 - t531 * t943 - t818) * MDP(35) + (-MDP(31) * t906 + MDP(32) * t814 - MDP(34) * t480 - MDP(35) * t479) * qJD(6);];
tauc  = t1;
