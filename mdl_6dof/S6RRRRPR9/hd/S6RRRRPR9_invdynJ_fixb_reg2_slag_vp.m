% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:55:54
% EndTime: 2019-03-09 22:56:53
% DurationCPUTime: 35.56s
% Computational Cost: add. (43918->1019), mult. (106189->1348), div. (0->0), fcn. (86395->18), ass. (0->453)
t454 = cos(qJ(2));
t451 = sin(qJ(2));
t444 = sin(pkin(6));
t586 = qJD(1) * t444;
t551 = t451 * t586;
t446 = cos(pkin(6));
t585 = qJD(1) * t446;
t568 = pkin(1) * t585;
t352 = -pkin(8) * t551 + t454 * t568;
t510 = pkin(2) * t451 - pkin(9) * t454;
t353 = t510 * t586;
t450 = sin(qJ(3));
t453 = cos(qJ(3));
t260 = t453 * t352 + t450 * t353;
t584 = qJD(1) * t454;
t550 = t444 * t584;
t523 = t450 * t550;
t455 = -pkin(10) - pkin(9);
t558 = qJD(3) * t455;
t750 = -pkin(10) * t523 - t450 * t558 + t260;
t681 = cos(qJ(4));
t553 = t681 * t453;
t519 = qJD(3) * t553;
t546 = qJD(4) * t681;
t449 = sin(qJ(4));
t611 = t449 * t450;
t694 = qJD(3) + qJD(4);
t296 = -t453 * t546 + t611 * t694 - t519;
t488 = t553 - t611;
t310 = t488 * t550;
t594 = t296 + t310;
t610 = t449 * t453;
t373 = t450 * t681 + t610;
t593 = (-t550 + t694) * t373;
t398 = -qJD(3) + t550;
t382 = -qJD(4) + t398;
t443 = sin(pkin(12));
t445 = cos(pkin(12));
t418 = qJD(2) + t585;
t329 = t418 * t453 - t450 * t551;
t330 = t418 * t450 + t453 * t551;
t489 = t449 * t329 + t330 * t681;
t208 = -t382 * t443 + t445 * t489;
t448 = sin(qJ(6));
t237 = t443 * t489;
t536 = t382 * t445 + t237;
t680 = cos(qJ(6));
t490 = t680 * t536;
t137 = t208 * t448 + t490;
t749 = t137 ^ 2;
t243 = -t681 * t329 + t330 * t449;
t240 = qJD(6) + t243;
t748 = t137 * t240;
t259 = -t352 * t450 + t453 * t353;
t605 = t453 * t454;
t220 = (pkin(3) * t451 - pkin(10) * t605) * t586 + t259;
t402 = t455 * t450;
t403 = t455 * t453;
t697 = t681 * t402 + t449 * t403;
t599 = qJD(4) * t697 - t449 * t220 + t558 * t610 - t681 * t750;
t679 = pkin(1) * t451;
t424 = t446 * t679;
t616 = t444 * t454;
t589 = pkin(8) * t616 + t424;
t355 = t589 * qJD(1);
t580 = qJD(3) * t450;
t512 = -t355 + (-t523 + t580) * pkin(3);
t136 = -t208 * t680 + t448 * t536;
t747 = t136 ^ 2;
t746 = qJ(5) * t551 - t599;
t745 = t593 * pkin(4) + t594 * qJ(5) - qJD(5) * t373 + t512;
t371 = t443 * t680 + t448 * t445;
t359 = t371 * qJD(6);
t744 = t371 * t243 + t359;
t487 = -t448 * t443 + t680 * t445;
t545 = qJD(6) * t680;
t577 = qJD(6) * t448;
t696 = -t443 * t577 + t445 * t545;
t743 = t487 * t243 + t696;
t262 = t310 * t443 - t445 * t551;
t535 = t296 * t443 + t262;
t263 = t310 * t445 + t443 * t551;
t742 = t296 * t445 + t263;
t574 = qJD(1) * qJD(2);
t542 = t454 * t574;
t572 = qJDD(1) * t451;
t741 = t542 + t572;
t721 = t243 * t443;
t740 = pkin(5) * t721;
t739 = pkin(11) * t721;
t659 = t443 * t746 + t445 * t745;
t658 = t443 * t745 - t445 * t746;
t738 = t243 * t536;
t683 = t243 ^ 2;
t737 = t489 ^ 2 - t683;
t720 = t243 * t445;
t736 = pkin(5) * t489 + pkin(11) * t720;
t515 = qJD(3) * t551;
t573 = qJDD(1) * t446;
t521 = qJDD(2) + t573;
t579 = qJD(3) * t453;
t717 = t741 * t444;
t234 = -t418 * t579 - t717 * t453 + (t515 - t521) * t450;
t525 = t418 * t580 + t717 * t450 + t453 * t515;
t464 = -t521 * t453 + t525;
t578 = qJD(4) * t449;
t117 = t681 * t234 - t329 * t546 + t330 * t578 + t449 * t464;
t571 = qJDD(1) * t454;
t413 = t444 * t571;
t543 = t451 * t574;
t518 = t444 * t543;
t346 = qJDD(3) - t413 + t518;
t338 = qJDD(4) + t346;
t100 = -t117 * t445 + t338 * t443;
t94 = t100 * t443;
t735 = t208 * t720 + t94;
t308 = pkin(9) * t418 + t355;
t496 = -pkin(2) * t454 - pkin(9) * t451 - pkin(1);
t345 = t496 * t444;
t320 = qJD(1) * t345;
t229 = -t308 * t450 + t453 * t320;
t198 = -pkin(10) * t330 + t229;
t182 = -pkin(3) * t398 + t198;
t230 = t308 * t453 + t320 * t450;
t199 = pkin(10) * t329 + t230;
t197 = t681 * t199;
t111 = t449 * t182 + t197;
t103 = -t382 * qJ(5) + t111;
t307 = -pkin(2) * t418 - t352;
t247 = -pkin(3) * t329 + t307;
t130 = pkin(4) * t243 - qJ(5) * t489 + t247;
t63 = -t103 * t443 + t445 * t130;
t50 = pkin(5) * t243 - pkin(11) * t208 + t63;
t64 = t445 * t103 + t443 * t130;
t51 = -pkin(11) * t536 + t64;
t17 = t448 * t50 + t51 * t680;
t527 = qJD(2) * t568;
t565 = pkin(1) * t573;
t559 = pkin(8) * t413 + t451 * t565 + t454 * t527;
t272 = -pkin(8) * t518 + t559;
t251 = pkin(9) * t521 + t272;
t491 = t510 * qJD(2);
t258 = (qJD(1) * t491 + qJDD(1) * t496) * t444;
t127 = -t230 * qJD(3) - t450 * t251 + t453 * t258;
t83 = pkin(3) * t346 + pkin(10) * t234 + t127;
t481 = -t453 * t251 - t450 * t258 + t308 * t580 - t320 * t579;
t91 = -pkin(10) * t464 - t481;
t35 = -t182 * t578 - t199 * t546 - t449 * t91 + t681 * t83;
t669 = t338 * pkin(4);
t693 = qJDD(5) - t669;
t33 = -t35 + t693;
t112 = t443 * t117;
t538 = t338 * t445 + t112;
t505 = t538 * pkin(5);
t20 = -t505 + t33;
t439 = pkin(12) + qJ(6);
t432 = sin(t439);
t682 = cos(qJ(1));
t555 = t682 * t451;
t452 = sin(qJ(1));
t606 = t452 * t454;
t362 = t446 * t555 + t606;
t442 = qJ(3) + qJ(4);
t434 = sin(t442);
t435 = cos(t442);
t557 = t444 * t682;
t287 = t362 * t434 + t435 * t557;
t554 = t682 * t454;
t608 = t451 * t452;
t364 = -t446 * t608 + t554;
t618 = t444 * t452;
t291 = t364 * t434 - t435 * t618;
t619 = t444 * t451;
t341 = t434 * t619 - t446 * t435;
t480 = g(1) * t291 + g(2) * t287 + g(3) * t341;
t196 = t449 * t199;
t110 = t182 * t681 - t196;
t102 = t382 * pkin(4) + qJD(5) - t110;
t80 = pkin(5) * t536 + t102;
t734 = t17 * t489 + t20 * t371 - t480 * t432 + t743 * t80;
t433 = cos(t439);
t493 = t448 * t51 - t50 * t680;
t733 = -t20 * t487 + t433 * t480 + t489 * t493 + t744 * t80;
t539 = t448 * t100 - t680 * t538;
t45 = -qJD(6) * t136 + t539;
t732 = t137 * t744 - t45 * t487;
t44 = qJD(6) * t490 - t680 * t100 + t208 * t577 - t448 * t538;
t731 = -t136 * t743 - t44 * t371;
t118 = qJD(4) * t489 - t449 * t234 + t681 * t464;
t115 = qJDD(6) + t118;
t730 = t371 * t115 + t136 * t489 + t240 * t743;
t729 = t115 * t487 + t137 * t489 - t240 * t744;
t498 = qJ(5) * t338 - qJD(5) * t382;
t530 = -t182 * t546 + t199 * t578 - t449 * t83 - t681 * t91;
t31 = t498 - t530;
t524 = t717 * pkin(8) + t451 * t527 - t454 * t565;
t706 = pkin(2) * t521;
t252 = t524 - t706;
t176 = pkin(3) * t464 + t252;
t49 = t118 * pkin(4) + t117 * qJ(5) - qJD(5) * t489 + t176;
t11 = -t31 * t443 + t445 * t49;
t8 = pkin(5) * t118 - pkin(11) * t100 + t11;
t12 = t445 * t31 + t443 * t49;
t9 = pkin(11) * t538 + t12;
t3 = -t493 * qJD(6) + t448 * t8 + t680 * t9;
t4 = -qJD(6) * t17 - t448 * t9 + t680 * t8;
t288 = t362 * t435 - t434 * t557;
t292 = t364 * t435 + t434 * t618;
t342 = t434 * t446 + t435 * t619;
t479 = g(1) * t292 + g(2) * t288 + g(3) * t342;
t728 = -t17 * t744 + t3 * t487 - t4 * t371 + t493 * t743 - t479;
t727 = t136 * t744 - t137 * t743 - t371 * t45 - t44 * t487;
t726 = t593 * pkin(5) + t742 * pkin(11) + t659;
t725 = t63 * t243;
t724 = t535 * pkin(11) + t658;
t475 = -t33 + t480;
t700 = t243 * t489;
t120 = t198 * t449 + t197;
t699 = -pkin(3) * t578 + t120;
t315 = t449 * t402 - t403 * t681;
t598 = -qJD(4) * t315 - t220 * t681 + t449 * t750 + t455 * t519;
t617 = t444 * t453;
t301 = -t364 * t450 + t452 * t617;
t716 = t229 * t398 - t481;
t419 = pkin(8) * t619;
t678 = pkin(1) * t454;
t366 = t446 * t678 - t419;
t356 = qJD(2) * t366;
t715 = -t243 * t64 - t11;
t93 = t538 * t445;
t714 = t443 * t738 + t93;
t177 = pkin(4) * t489 + qJ(5) * t243;
t713 = -t243 * t382 - t117;
t712 = t243 * t247 + t479 + t530;
t711 = t243 * (-t208 * t443 - t445 * t536) + t100 * t445 + t443 * t538;
t361 = -t446 * t554 + t608;
t710 = t288 * t432 - t361 * t433;
t709 = t288 * t433 + t361 * t432;
t438 = t444 ^ 2;
t707 = 0.2e1 * t438;
t703 = t63 * t489;
t476 = t12 * t445 - t479;
t676 = pkin(3) * t449;
t427 = qJ(5) + t676;
t368 = (-pkin(11) - t427) * t443;
t436 = t445 * pkin(11);
t626 = t427 * t445;
t369 = t436 + t626;
t276 = t368 * t680 - t448 * t369;
t528 = pkin(3) * t546;
t414 = t528 + qJD(5);
t121 = t198 * t681 - t196;
t677 = pkin(3) * t330;
t150 = t177 + t677;
t70 = -t121 * t443 + t445 * t150;
t55 = t70 + t736;
t71 = t445 * t121 + t443 * t150;
t62 = t71 + t739;
t702 = qJD(6) * t276 + t414 * t487 - t448 * t55 - t62 * t680;
t277 = t448 * t368 + t369 * t680;
t656 = -qJD(6) * t277 - t371 * t414 + t448 * t62 - t55 * t680;
t514 = -t699 + t740;
t701 = t240 * t489;
t363 = t446 * t606 + t555;
t473 = -g(1) * t363 - g(2) * t361 + g(3) * t616;
t466 = t473 * t434;
t698 = t230 * t398 - t127;
t597 = pkin(4) * t551 - t598;
t344 = pkin(9) * t446 + t589;
t254 = t453 * t344 + t450 * t345;
t695 = -t443 * t63 + t445 * t64;
t357 = t589 * qJD(2);
t690 = -t475 * t443 + t489 * t64;
t113 = t443 * t118;
t689 = -t208 * t489 + t113;
t114 = t445 * t118;
t688 = t489 * t536 + t114;
t463 = t480 + t35;
t685 = -t247 * t489 + t463;
t684 = -t382 * t489 - t118;
t360 = t446 * t450 + t451 * t617;
t675 = pkin(10) * t360;
t431 = pkin(3) * t453 + pkin(2);
t375 = t431 * t616;
t671 = g(3) * t375;
t670 = g(3) * t444;
t668 = t445 * pkin(5);
t447 = -pkin(11) - qJ(5);
t284 = -pkin(4) * t488 - qJ(5) * t373 - t431;
t214 = t445 * t284 - t315 * t443;
t629 = t373 * t445;
t178 = -pkin(5) * t488 - pkin(11) * t629 + t214;
t215 = t443 * t284 + t445 * t315;
t630 = t373 * t443;
t194 = -pkin(11) * t630 + t215;
t104 = t178 * t680 - t448 * t194;
t667 = qJD(6) * t104 + t726 * t448 + t724 * t680;
t105 = t448 * t178 + t194 * t680;
t666 = -qJD(6) * t105 - t724 * t448 + t726 * t680;
t354 = t444 * t491;
t184 = -qJD(3) * t254 + t453 * t354 - t356 * t450;
t563 = t450 * t619;
t614 = t446 * t453;
t492 = t563 - t614;
t581 = qJD(2) * t454;
t548 = t444 * t581;
t299 = -qJD(3) * t492 + t453 * t548;
t582 = qJD(2) * t451;
t549 = t444 * t582;
t149 = pkin(3) * t549 - pkin(10) * t299 + t184;
t522 = t450 * t548;
t560 = t345 * t579 + t450 * t354 + t453 * t356;
t609 = t450 * t344;
t160 = -pkin(10) * t522 + (-t609 - t675) * qJD(3) + t560;
t253 = t453 * t345 - t609;
t205 = -pkin(3) * t616 + t253 - t675;
t219 = -pkin(10) * t492 + t254;
t56 = t449 * t149 + t681 * t160 + t205 * t546 - t219 * t578;
t53 = (qJ(5) * t582 - qJD(5) * t454) * t444 + t56;
t474 = t360 * qJD(3);
t458 = t474 + t522;
t469 = t681 * t492;
t174 = qJD(4) * t469 - t299 * t681 + t360 * t578 + t449 * t458;
t265 = t360 * t681 - t449 * t492;
t175 = qJD(4) * t265 + t449 * t299 + t458 * t681;
t248 = pkin(3) * t474 + (t424 + (pkin(3) * t450 + pkin(8)) * t616) * qJD(2);
t69 = t175 * pkin(4) + t174 * qJ(5) - t265 * qJD(5) + t248;
t27 = t443 * t69 + t445 * t53;
t664 = t11 * t443;
t393 = t447 * t443;
t394 = qJ(5) * t445 + t436;
t304 = t393 * t680 - t448 * t394;
t73 = -t110 * t443 + t445 * t177;
t58 = t73 + t736;
t74 = t445 * t110 + t443 * t177;
t65 = t74 + t739;
t655 = qJD(5) * t487 + qJD(6) * t304 - t448 * t58 - t65 * t680;
t305 = t448 * t393 + t394 * t680;
t654 = -qJD(5) * t371 - qJD(6) * t305 + t448 * t65 - t58 * t680;
t653 = t111 * t382;
t652 = t136 * t137;
t641 = t329 * t398;
t640 = t330 * t329;
t639 = t330 * t398;
t636 = t361 * t443;
t635 = t362 * t443;
t634 = t362 * t450;
t633 = t363 * t443;
t632 = t364 * t443;
t627 = t398 * t450;
t625 = t432 * t435;
t624 = t433 * t435;
t623 = t435 * t443;
t622 = t435 * t445;
t621 = t435 * t454;
t620 = t438 * qJD(1) ^ 2;
t615 = t445 * t454;
t607 = t451 * t455;
t142 = t449 * t205 + t681 * t219;
t134 = -qJ(5) * t616 + t142;
t264 = t360 * t449 + t469;
t532 = pkin(3) * t563;
t278 = t532 + t419 + (-t431 - t678) * t446;
t163 = t264 * pkin(4) - t265 * qJ(5) + t278;
t78 = t445 * t134 + t443 * t163;
t602 = -t448 * t262 + t263 * t680 + t296 * t487 + t359 * t373;
t601 = -t262 * t680 - t263 * t448 - t296 * t371 + t373 * t696;
t600 = -t535 * pkin(5) + t597;
t428 = pkin(4) + t668;
t596 = -t287 * t428 - t288 * t447;
t595 = -t291 * t428 - t292 * t447;
t592 = -t341 * t428 - t342 * t447;
t591 = -t361 * t431 - t362 * t455;
t590 = -t363 * t431 - t364 * t455;
t588 = t682 * pkin(1) + pkin(8) * t618;
t440 = t451 ^ 2;
t441 = t454 ^ 2;
t587 = t440 - t441;
t583 = qJD(2) * t450;
t576 = qJD(2) - t418;
t575 = -qJD(5) + t102;
t569 = t681 * pkin(3);
t564 = t454 * t620;
t562 = t450 * t618;
t556 = t453 * t682;
t544 = pkin(1) * t707;
t540 = -pkin(1) * t452 + pkin(8) * t557;
t26 = -t443 * t53 + t445 * t69;
t77 = -t134 * t443 + t445 * t163;
t405 = t450 * t557;
t533 = t362 * t453 - t405;
t526 = t451 * t564;
t430 = -t569 - pkin(4);
t516 = t451 * t542;
t513 = t301 * pkin(3);
t509 = -g(1) * t287 + g(2) * t291;
t508 = g(1) * t361 - g(2) * t363;
t507 = g(1) * t364 + g(2) * t362;
t141 = t205 * t681 - t449 * t219;
t504 = pkin(4) * t435 + qJ(5) * t434;
t503 = pkin(3) * t562 - t363 * t455 + t364 * t431 + t588;
t501 = t536 * t296;
t500 = t118 * t264 + t175 * t243;
t499 = t428 * t435 - t434 * t447;
t497 = pkin(3) * t614 - t532;
t495 = g(1) * t682 + g(2) * t452;
t135 = pkin(4) * t616 - t141;
t239 = t265 * t445 - t443 * t616;
t59 = pkin(5) * t264 - pkin(11) * t239 + t77;
t238 = t265 * t443 + t444 * t615;
t66 = -pkin(11) * t238 + t78;
t28 = -t448 * t66 + t59 * t680;
t29 = t448 * t59 + t66 * t680;
t171 = -t448 * t238 + t239 * t680;
t486 = t450 * t346 - t398 * t579;
t485 = t346 * t453 + t398 * t580;
t484 = pkin(3) * t405 + t361 * t455 - t362 * t431 + t540;
t482 = -t118 * t488 + t243 * t593;
t57 = t149 * t681 - t449 * t160 - t205 * t578 - t219 * t546;
t478 = -t556 * t444 - t634;
t477 = -t118 * t427 + (t102 - t414) * t243;
t472 = -g(3) * t619 - t507;
t470 = t478 * pkin(3);
t468 = -t252 - t473;
t467 = -pkin(9) * t346 - t307 * t398;
t54 = -pkin(4) * t549 - t57;
t459 = qJD(3) * pkin(9) * t398 + t468;
t457 = -t463 + t693;
t391 = t430 - t668;
t343 = t419 + (-pkin(2) - t678) * t446;
t331 = t341 * pkin(4);
t302 = t364 * t453 + t562;
t286 = t291 * pkin(4);
t285 = t287 * pkin(4);
t271 = t487 * t373;
t270 = t371 * t373;
t261 = pkin(5) * t630 - t697;
t226 = t292 * t433 + t363 * t432;
t225 = -t292 * t432 + t363 * t433;
t183 = -t344 * t580 + t560;
t170 = t238 * t680 + t239 * t448;
t162 = -t174 * t445 + t443 * t549;
t161 = -t174 * t443 - t445 * t549;
t99 = t238 * pkin(5) + t135;
t84 = t111 - t740;
t61 = qJD(6) * t171 + t161 * t680 + t448 * t162;
t60 = t448 * t161 - t162 * t680 + t238 * t545 + t239 * t577;
t46 = t161 * pkin(5) + t54;
t21 = -pkin(11) * t161 + t27;
t13 = pkin(5) * t175 - pkin(11) * t162 + t26;
t6 = -qJD(6) * t29 + t13 * t680 - t448 * t21;
t5 = qJD(6) * t28 + t448 * t13 + t21 * t680;
t1 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t452 - g(2) * t682, t495, 0, 0 (qJDD(1) * t440 + 0.2e1 * t516) * t438 (t451 * t571 - t574 * t587) * t707 (t418 * t581 + t451 * qJDD(2) + (t542 + 0.2e1 * t572) * t446) * t444 (qJDD(1) * t441 - 0.2e1 * t516) * t438 (-t418 * t582 + qJDD(2) * t454 + (-t543 + 0.2e1 * t571) * t446) * t444, t521 * t446, -t357 * t418 + t366 * t521 - t524 * t446 + g(1) * t362 - g(2) * t364 + (-t543 + t571) * t544, -t272 * t446 - t356 * t418 - t589 * t521 - t741 * t544 - t508 ((-qJD(2) * t352 + qJDD(1) * t589 + t272) * t454 + (-qJD(2) * t355 - qJDD(1) * t366 + t524) * t451 - t495) * t444, t438 * qJDD(1) * pkin(1) ^ 2 - g(1) * t540 - g(2) * t588 + t272 * t589 - t352 * t357 + t355 * t356 - t366 * t524, -t234 * t360 + t299 * t330, t234 * t492 + t299 * t329 - t330 * t458 - t360 * t464, -t299 * t398 + t346 * t360 + (t234 * t454 + t330 * t582) * t444, -t329 * t458 + t464 * t492, t485 * t446 + ((t398 * t583 + t464) * t454 + (qJD(2) * t329 - t486) * t451) * t444 (-t346 * t454 - t398 * t582) * t444, -t184 * t398 + t253 * t346 - t357 * t329 + t343 * t464 - t252 * t614 + t307 * t446 * t580 + g(1) * t533 - g(2) * t302 + ((t307 * t583 - t127) * t454 + (qJD(2) * t229 + t252 * t450 + t307 * t579) * t451) * t444, -g(1) * t634 - g(2) * t301 + t183 * t398 - t343 * t234 + t252 * t360 - t254 * t346 + t307 * t299 + t357 * t330 + (-g(1) * t556 - t230 * t582 - t454 * t481) * t444, -t127 * t360 + t183 * t329 - t184 * t330 - t229 * t299 - t230 * t458 + t253 * t234 - t254 * t464 + t481 * t492 + t508, -t481 * t254 + t230 * t183 + t127 * t253 + t229 * t184 + t252 * t343 + t307 * t357 - g(1) * (-pkin(2) * t362 - pkin(9) * t361 + t540) - g(2) * (pkin(2) * t364 + pkin(9) * t363 + t588) -t117 * t265 - t174 * t489, t117 * t264 - t118 * t265 + t174 * t243 - t175 * t489, t174 * t382 + t265 * t338 + (t117 * t454 + t489 * t582) * t444, t500, t175 * t382 - t264 * t338 + (t118 * t454 - t243 * t582) * t444 (-t338 * t454 - t382 * t582) * t444, g(1) * t288 - g(2) * t292 + t118 * t278 + t141 * t338 + t175 * t247 + t176 * t264 + t243 * t248 - t382 * t57 + (t110 * t582 - t35 * t454) * t444, -t117 * t278 - t142 * t338 - t174 * t247 + t176 * t265 + t489 * t248 + t382 * t56 + (-t111 * t582 - t454 * t530) * t444 + t509, t110 * t174 - t111 * t175 + t117 * t141 - t118 * t142 - t243 * t56 + t264 * t530 - t265 * t35 - t489 * t57 + t508, -g(1) * t484 - g(2) * t503 + t110 * t57 + t111 * t56 + t35 * t141 - t142 * t530 + t176 * t278 + t247 * t248, t100 * t239 + t162 * t208, -t100 * t238 - t208 * t161 - t162 * t536 + t239 * t538, t100 * t264 + t118 * t239 + t162 * t243 + t175 * t208, t161 * t536 - t238 * t538, -t238 * t118 - t161 * t243 - t175 * t536 + t264 * t538, t500, t26 * t243 + t77 * t118 + t11 * t264 + t63 * t175 + t54 * t536 - t135 * t538 + t33 * t238 + t102 * t161 - g(1) * (-t288 * t445 - t636) - g(2) * (t292 * t445 + t633) -t27 * t243 - t78 * t118 - t12 * t264 - t64 * t175 + t54 * t208 + t135 * t100 + t33 * t239 + t102 * t162 - g(1) * (t288 * t443 - t361 * t445) - g(2) * (-t292 * t443 + t363 * t445) -t77 * t100 - t11 * t239 - t12 * t238 - t64 * t161 - t63 * t162 - t26 * t208 - t27 * t536 + t538 * t78 - t509, t12 * t78 + t64 * t27 + t11 * t77 + t63 * t26 + t33 * t135 + t102 * t54 - g(1) * (-pkin(4) * t288 - qJ(5) * t287 + t484) - g(2) * (pkin(4) * t292 + qJ(5) * t291 + t503) t136 * t60 - t171 * t44, t136 * t61 + t137 * t60 + t170 * t44 - t171 * t45, t115 * t171 - t136 * t175 - t240 * t60 - t264 * t44, t137 * t61 + t170 * t45, -t115 * t170 - t137 * t175 - t240 * t61 - t264 * t45, t115 * t264 + t175 * t240, g(1) * t709 - g(2) * t226 + t28 * t115 + t46 * t137 + t20 * t170 - t493 * t175 + t6 * t240 + t4 * t264 + t99 * t45 + t80 * t61, -g(1) * t710 - g(2) * t225 - t29 * t115 - t136 * t46 - t17 * t175 + t20 * t171 - t5 * t240 - t3 * t264 - t99 * t44 - t80 * t60, t136 * t6 - t137 * t5 - t17 * t61 - t170 * t3 - t171 * t4 + t28 * t44 - t29 * t45 - t493 * t60 - t509, t3 * t29 + t17 * t5 + t4 * t28 - t493 * t6 + t20 * t99 + t80 * t46 - g(1) * (-pkin(5) * t636 + t287 * t447 - t288 * t428 + t484) - g(2) * (pkin(5) * t633 - t291 * t447 + t292 * t428 + t503); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, t587 * t620 (t576 * t584 + t572) * t444, t526, -t551 * t576 + t413, t521, t355 * t418 + t620 * t679 - t473 - t524, pkin(1) * t564 + t352 * t418 + (pkin(8) * t574 + g(3)) * t619 + t507 - t559, 0, 0, -t450 * t234 - t453 * t639 (-t234 - t641) * t453 + (-t464 + t639) * t450 (-t330 * t451 + t398 * t605) * t586 + t486, t329 * t627 - t453 * t464 (-t329 * t451 - t454 * t627) * t586 + t485, t398 * t551, -pkin(2) * t525 + t259 * t398 - t229 * t551 + t355 * t329 + t467 * t450 + (t459 + t706) * t453, pkin(2) * t234 + t230 * t551 - t260 * t398 - t330 * t355 - t450 * t459 + t453 * t467, t259 * t330 - t260 * t329 + ((t330 * qJD(3) - t464) * pkin(9) + t716) * t453 + ((-t329 * qJD(3) - t234) * pkin(9) + t698) * t450 + t472, -t229 * t259 - t230 * t260 - t307 * t355 + t468 * pkin(2) + (-t481 * t453 - t127 * t450 + (-t229 * t453 - t230 * t450) * qJD(3) + t472) * pkin(9), -t117 * t373 - t489 * t594, -t117 * t488 - t118 * t373 + t243 * t594 - t489 * t593, t338 * t373 + t382 * t594 - t489 * t551, t482, t243 * t551 + t338 * t488 + t382 * t593, t382 * t551, -t110 * t551 - t118 * t431 - t176 * t488 + t243 * t512 + t247 * t593 + t338 * t697 - t382 * t598 - t435 * t473, t111 * t551 + t117 * t431 + t176 * t373 - t247 * t594 - t315 * t338 + t382 * t599 + t489 * t512 + t466, t110 * t594 - t111 * t593 + t117 * t697 - t118 * t315 - t243 * t599 - t35 * t373 - t488 * t530 - t489 * t598 + t472, -t530 * t315 + t35 * t697 - t176 * t431 - g(1) * t590 - g(2) * t591 - g(3) * (-t444 * t607 + t375) + t512 * t247 + t599 * t111 + t598 * t110, t100 * t629 - t208 * t742, t445 * t501 + t263 * t536 + (t93 - t94) * t373 + t535 * t208, -t100 * t488 + t114 * t373 + t208 * t593 - t243 * t742, -t536 * t262 + (-t373 * t538 - t501) * t443, -t113 * t373 + t243 * t535 - t488 * t538 - t536 * t593, t482, t214 * t118 - t11 * t488 + t697 * t538 + t33 * t630 - g(1) * (-t363 * t622 + t632) - g(2) * (-t361 * t622 + t635) + t593 * t63 - (t435 * t615 + t443 * t451) * t670 + t659 * t243 - t535 * t102 + t597 * t536, -t215 * t118 + t12 * t488 - t697 * t100 + t33 * t629 - g(1) * (t363 * t623 + t364 * t445) - g(2) * (t361 * t623 + t362 * t445) - t593 * t64 - (-t443 * t621 + t445 * t451) * t670 - t658 * t243 + t597 * t208 - t742 * t102, t215 * t538 - t214 * t100 + t64 * t262 + t63 * t263 + (-t11 * t445 - t12 * t443) * t373 + (t443 * t64 + t445 * t63) * t296 - t659 * t208 - t466 - t658 * t536, t12 * t215 + t11 * t214 - t33 * t697 - g(1) * (-t363 * t504 + t590) - g(2) * (-t361 * t504 + t591) - t671 + t658 * t64 + t659 * t63 - (t454 * t504 - t607) * t670 + t597 * t102, t136 * t602 - t271 * t44, t136 * t601 + t137 * t602 + t270 * t44 - t271 * t45, t115 * t271 - t136 * t593 - t240 * t602 + t44 * t488, t137 * t601 + t270 * t45, -t115 * t270 - t137 * t593 - t240 * t601 + t45 * t488, -t115 * t488 + t240 * t593, t104 * t115 - t4 * t488 + t261 * t45 + t20 * t270 - g(1) * (-t363 * t624 + t364 * t432) - g(2) * (-t361 * t624 + t362 * t432) + t601 * t80 - (t432 * t451 + t433 * t621) * t670 + t666 * t240 - t593 * t493 + t600 * t137, -t105 * t115 + t3 * t488 - t261 * t44 + t20 * t271 - g(1) * (t363 * t625 + t364 * t433) - g(2) * (t361 * t625 + t362 * t433) - t602 * t80 - (-t432 * t621 + t433 * t451) * t670 - t667 * t240 - t593 * t17 - t600 * t136, t104 * t44 - t105 * t45 + t136 * t666 - t137 * t667 - t17 * t601 - t270 * t3 - t271 * t4 - t493 * t602 - t466, t3 * t105 + t4 * t104 + t20 * t261 - g(1) * (pkin(5) * t632 - t363 * t499 + t590) - g(2) * (pkin(5) * t635 - t361 * t499 + t591) - t671 + t600 * t80 + t667 * t17 - t666 * t493 - (t499 * t454 + (pkin(5) * t443 - t455) * t451) * t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t640, -t329 ^ 2 + t330 ^ 2, -t234 + t641, t640, -t464 - t639, t346, -g(1) * t301 - g(2) * t478 + g(3) * t492 - t307 * t330 - t698, g(1) * t302 + g(2) * t533 + g(3) * t360 - t307 * t329 - t716, 0, 0, t700, t737, t713, -t700, t684, t338, -t120 * t382 + (-t243 * t330 + t338 * t681 + t382 * t578) * pkin(3) + t685, -t121 * t382 + (-t330 * t489 - t338 * t449 + t382 * t546) * pkin(3) + t712, -t110 * t243 + t111 * t489 - t120 * t489 + t121 * t243 + (t681 * t117 - t118 * t449 + (-t243 * t681 + t449 * t489) * qJD(4)) * pkin(3), -g(1) * t513 - g(2) * t470 - g(3) * t497 - t247 * t677 - t530 * t676 + t35 * t569 + (-t121 + t528) * t111 + t699 * t110, t735, t711, t243 * t720 + t689, t714, -t243 * t721 + t688, -t700, -t430 * t112 - t703 - t70 * t243 - t699 * t237 + (-t430 * t338 - t382 * t699 + t475) * t445 + t477 * t443, t100 * t430 - t208 * t699 + t243 * t71 + t445 * t477 + t690, t70 * t208 + t71 * t237 + (t427 * t112 - t414 * t237 - t725 + t71 * t382 + (t338 * t427 - t382 * t414) * t445) * t445 + (t100 * t427 + t208 * t414 + t715) * t443 + t476, t12 * t626 - t427 * t664 + t33 * t430 - t64 * t71 - t63 * t70 - g(1) * (qJ(5) * t292 - t286 + t513) - g(2) * (t288 * qJ(5) - t285 + t470) - g(3) * (qJ(5) * t342 - t331 + t497) + t695 * t414 - t699 * t102, t731, t727, t730, t732, t729, -t701, t115 * t276 + t137 * t514 + t240 * t656 + t391 * t45 + t733, -t115 * t277 - t136 * t514 - t240 * t702 - t391 * t44 + t734, t136 * t656 - t137 * t702 + t276 * t44 - t277 * t45 + t728, t3 * t277 + t4 * t276 + t20 * t391 - g(1) * (t513 + t595) - g(2) * (t470 + t596) - g(3) * (t497 + t592) + t514 * t80 + t702 * t17 - t656 * t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, t737, t713, -t700, t684, t338, -t653 + t685, -t110 * t382 + t712, 0, 0, t735, t711, t445 * t683 + t689, t714, -t443 * t683 + t688, -t700, -qJ(5) * t113 + pkin(4) * t112 - t111 * t237 - t703 + (t443 * t575 - t73) * t243 + (t475 - t653 + t669) * t445, -qJ(5) * t114 - pkin(4) * t100 - t111 * t208 + (t445 * t575 + t74) * t243 + t690, t73 * t208 + t74 * t237 + (qJ(5) * t112 - qJD(5) * t237 + t74 * t382 + t445 * t498 - t725) * t445 + (qJ(5) * t100 + qJD(5) * t208 + t715) * t443 + t476, -t33 * pkin(4) + g(1) * t286 + g(2) * t285 + g(3) * t331 - t102 * t111 - t63 * t73 - t64 * t74 + t695 * qJD(5) + (-t664 + t476) * qJ(5), t731, t727, t730, t732, t729, -t701, t115 * t304 - t137 * t84 + t240 * t654 - t428 * t45 + t733, -t115 * t305 + t136 * t84 - t240 * t655 + t428 * t44 + t734, t136 * t654 - t137 * t655 + t304 * t44 - t305 * t45 + t728, -g(1) * t595 - g(2) * t596 - g(3) * t592 + t17 * t655 - t20 * t428 + t3 * t305 + t4 * t304 - t493 * t654 - t80 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208 * t243 - t538, t100 - t738, -t208 ^ 2 - t536 ^ 2, t208 * t63 + t536 * t64 + t457, 0, 0, 0, 0, 0, 0, -t136 * t240 + t45, -t44 - t748, -t747 - t749, t136 * t493 + t137 * t17 + t457 - t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t652, t747 - t749, -t44 + t748, t652, -t539 - (-qJD(6) + t240) * t136, t115, t17 * t240 + t80 * t136 - g(1) * t225 + g(2) * t710 - g(3) * (-t342 * t432 - t433 * t616) + t4, -t493 * t240 + t80 * t137 + g(1) * t226 + g(2) * t709 - g(3) * (-t342 * t433 + t432 * t616) - t3, 0, 0;];
tau_reg  = t1;
