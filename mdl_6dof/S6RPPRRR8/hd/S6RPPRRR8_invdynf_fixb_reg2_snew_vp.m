% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 16:16
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 16:16:03
% EndTime: 2019-05-05 16:16:08
% DurationCPUTime: 5.10s
% Computational Cost: add. (28349->288), mult. (65001->346), div. (0->0), fcn. (47911->10), ass. (0->198)
t1674 = qJD(1) ^ 2;
t1669 = sin(qJ(1));
t1673 = cos(qJ(1));
t1645 = t1669 * g(1) - t1673 * g(2);
t1685 = qJDD(2) - t1645;
t1683 = -t1674 * qJ(2) + t1685;
t1710 = -2 * qJD(1);
t1695 = qJD(3) * t1710;
t1709 = pkin(1) + qJ(3);
t1724 = -t1709 * qJDD(1) + t1683 + t1695;
t1663 = sin(pkin(10));
t1653 = t1663 * qJDD(1);
t1646 = -t1673 * g(1) - t1669 * g(2);
t1682 = -qJDD(1) * qJ(2) + (qJD(2) * t1710) - t1646;
t1681 = -qJDD(3) + t1682;
t1659 = t1663 ^ 2;
t1664 = cos(pkin(10));
t1660 = t1664 ^ 2;
t1698 = t1659 + t1660;
t1612 = -pkin(3) * t1653 + (t1698 * pkin(7) + t1709) * t1674 + t1681;
t1668 = sin(qJ(4));
t1672 = cos(qJ(4));
t1636 = (t1663 * t1672 + t1664 * t1668) * qJD(1);
t1723 = t1698 * t1674;
t1633 = qJD(5) + t1636;
t1631 = qJD(6) + t1633;
t1722 = qJD(6) + t1631;
t1719 = qJD(4) ^ 2;
t1638 = (-t1663 * t1668 + t1664 * t1672) * qJD(1);
t1667 = sin(qJ(5));
t1671 = cos(qJ(5));
t1624 = -t1671 * qJD(4) + t1667 * t1638;
t1626 = t1667 * qJD(4) + t1671 * t1638;
t1666 = sin(qJ(6));
t1670 = cos(qJ(6));
t1601 = t1670 * t1624 + t1666 * t1626;
t1718 = t1601 ^ 2;
t1603 = -t1666 * t1624 + t1670 * t1626;
t1717 = t1603 ^ 2;
t1716 = t1624 ^ 2;
t1715 = t1626 ^ 2;
t1714 = t1631 ^ 2;
t1713 = t1633 ^ 2;
t1712 = t1636 ^ 2;
t1711 = t1638 ^ 2;
t1708 = t1663 * g(3);
t1707 = t1603 * t1601;
t1706 = t1626 * t1624;
t1705 = t1633 * t1624;
t1704 = t1636 * qJD(4);
t1632 = t1638 * qJD(4);
t1703 = t1638 * t1636;
t1702 = t1659 * t1674;
t1701 = qJD(5) - t1633;
t1700 = qJD(6) - t1631;
t1614 = -t1664 * g(3) + t1663 * t1724;
t1609 = -pkin(3) * t1702 - pkin(7) * t1653 + t1614;
t1677 = t1708 + (t1695 + (-pkin(3) * t1663 - qJ(2)) * t1674 + (-pkin(7) - t1709) * qJDD(1) + t1685) * t1664;
t1582 = t1672 * t1609 + t1668 * t1677;
t1615 = t1636 * pkin(4) - t1638 * pkin(8);
t1560 = -t1719 * pkin(4) + qJDD(4) * pkin(8) - t1636 * t1615 + t1582;
t1654 = t1664 * qJDD(1);
t1689 = -t1668 * t1653 + t1672 * t1654;
t1621 = t1689 - t1704;
t1699 = t1672 * t1653 + t1668 * t1654;
t1693 = -t1632 - t1699;
t1571 = (-t1621 + t1704) * pkin(8) + (-t1693 + t1632) * pkin(4) - t1612;
t1538 = t1671 * t1560 + t1667 * t1571;
t1697 = t1669 * qJDD(1);
t1696 = t1673 * qJDD(1);
t1694 = t1663 * t1674 * t1664;
t1537 = -t1667 * t1560 + t1671 * t1571;
t1687 = -t1667 * qJDD(4) - t1671 * t1621;
t1596 = -t1624 * qJD(5) - t1687;
t1691 = -t1671 * qJDD(4) + t1667 * t1621;
t1684 = t1626 * qJD(5) + t1691;
t1692 = -t1666 * t1596 - t1670 * t1684;
t1581 = -t1668 * t1609 + t1672 * t1677;
t1690 = qJDD(5) - t1693;
t1686 = -qJDD(6) - t1690;
t1584 = t1690 - t1706;
t1559 = -qJDD(4) * pkin(4) - t1719 * pkin(8) + t1638 * t1615 - t1581;
t1679 = -t1670 * t1596 + t1666 * t1684;
t1644 = t1673 * t1674 + t1697;
t1643 = -t1669 * t1674 + t1696;
t1641 = t1698 * qJDD(1);
t1640 = t1663 * t1723;
t1639 = t1664 * t1723;
t1634 = qJDD(1) * pkin(1) - t1683;
t1630 = t1674 * pkin(1) + t1682;
t1629 = -t1711 - t1719;
t1628 = t1709 * t1674 + t1681;
t1620 = t1689 - 0.2e1 * t1704;
t1619 = 0.2e1 * t1632 + t1699;
t1618 = -qJDD(4) - t1703;
t1617 = qJDD(4) - t1703;
t1616 = -t1712 - t1719;
t1613 = t1664 * t1724 + t1708;
t1610 = t1633 * pkin(5) - t1626 * pkin(9);
t1608 = -t1711 - t1712;
t1606 = t1693 + t1632;
t1600 = -t1713 - t1715;
t1599 = t1672 * t1618 - t1668 * t1629;
t1598 = t1668 * t1618 + t1672 * t1629;
t1597 = -t1713 - t1716;
t1592 = -t1715 - t1716;
t1591 = t1672 * t1606 + t1668 * t1689;
t1590 = t1668 * t1606 - t1672 * t1689;
t1589 = t1672 * t1616 - t1668 * t1617;
t1588 = t1668 * t1616 + t1672 * t1617;
t1587 = -t1663 * t1613 + t1664 * t1614;
t1586 = t1664 * t1613 + t1663 * t1614;
t1585 = -t1690 - t1706;
t1583 = -t1714 - t1717;
t1580 = t1701 * t1624 + t1687;
t1579 = t1596 - t1705;
t1578 = -t1701 * t1626 - t1691;
t1577 = (qJD(5) + t1633) * t1626 + t1691;
t1576 = -t1663 * t1598 + t1664 * t1599;
t1575 = t1664 * t1598 + t1663 * t1599;
t1574 = -t1714 - t1718;
t1573 = t1686 - t1707;
t1572 = -t1686 - t1707;
t1568 = t1671 * t1585 - t1667 * t1600;
t1567 = t1667 * t1585 + t1671 * t1600;
t1566 = -t1663 * t1590 + t1664 * t1591;
t1565 = t1664 * t1590 + t1663 * t1591;
t1564 = -t1667 * t1584 + t1671 * t1597;
t1563 = t1671 * t1584 + t1667 * t1597;
t1562 = -t1663 * t1588 + t1664 * t1589;
t1561 = t1664 * t1588 + t1663 * t1589;
t1557 = -t1717 - t1718;
t1556 = -t1668 * t1581 + t1672 * t1582;
t1555 = t1672 * t1581 + t1668 * t1582;
t1554 = t1671 * t1578 - t1667 * t1580;
t1553 = t1667 * t1578 + t1671 * t1580;
t1552 = t1670 * t1573 - t1666 * t1583;
t1551 = t1666 * t1573 + t1670 * t1583;
t1550 = t1672 * t1568 + t1668 * t1579;
t1549 = t1668 * t1568 - t1672 * t1579;
t1548 = t1672 * t1564 + t1668 * t1577;
t1547 = t1668 * t1564 - t1672 * t1577;
t1546 = t1700 * t1601 + t1679;
t1545 = -t1722 * t1601 - t1679;
t1544 = -t1700 * t1603 + t1692;
t1543 = t1722 * t1603 - t1692;
t1542 = -t1666 * t1572 + t1670 * t1574;
t1541 = t1670 * t1572 + t1666 * t1574;
t1540 = t1672 * t1554 + t1668 * t1592;
t1539 = t1668 * t1554 - t1672 * t1592;
t1536 = t1684 * pkin(5) - t1716 * pkin(9) + t1626 * t1610 + t1559;
t1535 = -t1663 * t1555 + t1664 * t1556;
t1534 = t1664 * t1555 + t1663 * t1556;
t1533 = -t1716 * pkin(5) - t1684 * pkin(9) - t1633 * t1610 + t1538;
t1532 = -t1667 * t1551 + t1671 * t1552;
t1531 = t1671 * t1551 + t1667 * t1552;
t1530 = (-t1596 - t1705) * pkin(9) + t1584 * pkin(5) + t1537;
t1529 = -t1663 * t1549 + t1664 * t1550;
t1528 = t1664 * t1549 + t1663 * t1550;
t1527 = t1670 * t1544 - t1666 * t1546;
t1526 = t1666 * t1544 + t1670 * t1546;
t1525 = -t1663 * t1547 + t1664 * t1548;
t1524 = t1664 * t1547 + t1663 * t1548;
t1523 = -t1667 * t1541 + t1671 * t1542;
t1522 = t1671 * t1541 + t1667 * t1542;
t1521 = -t1663 * t1539 + t1664 * t1540;
t1520 = t1664 * t1539 + t1663 * t1540;
t1519 = -t1667 * t1537 + t1671 * t1538;
t1518 = t1671 * t1537 + t1667 * t1538;
t1517 = t1672 * t1532 + t1668 * t1545;
t1516 = t1668 * t1532 - t1672 * t1545;
t1515 = t1672 * t1519 + t1668 * t1559;
t1514 = t1668 * t1519 - t1672 * t1559;
t1513 = t1672 * t1523 + t1668 * t1543;
t1512 = t1668 * t1523 - t1672 * t1543;
t1511 = t1666 * t1530 + t1670 * t1533;
t1510 = t1670 * t1530 - t1666 * t1533;
t1509 = -t1667 * t1526 + t1671 * t1527;
t1508 = t1671 * t1526 + t1667 * t1527;
t1507 = t1672 * t1509 + t1668 * t1557;
t1506 = t1668 * t1509 - t1672 * t1557;
t1505 = -t1663 * t1516 + t1664 * t1517;
t1504 = t1664 * t1516 + t1663 * t1517;
t1503 = -t1663 * t1514 + t1664 * t1515;
t1502 = t1664 * t1514 + t1663 * t1515;
t1501 = -t1663 * t1512 + t1664 * t1513;
t1500 = t1664 * t1512 + t1663 * t1513;
t1499 = -t1666 * t1510 + t1670 * t1511;
t1498 = t1670 * t1510 + t1666 * t1511;
t1497 = -t1663 * t1506 + t1664 * t1507;
t1496 = t1664 * t1506 + t1663 * t1507;
t1495 = -t1667 * t1498 + t1671 * t1499;
t1494 = t1671 * t1498 + t1667 * t1499;
t1493 = t1672 * t1495 + t1668 * t1536;
t1492 = t1668 * t1495 - t1672 * t1536;
t1491 = -t1663 * t1492 + t1664 * t1493;
t1490 = t1664 * t1492 + t1663 * t1493;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1644, -t1643, 0, -t1669 * t1645 + t1673 * t1646, 0, 0, 0, 0, 0, 0, 0, t1644, t1643, -t1673 * t1630 - t1669 * t1634, 0, 0, 0, 0, 0, 0, -t1669 * t1640 + t1663 * t1696, -t1669 * t1639 + t1664 * t1696, -t1669 * t1641 - t1673 * t1723, t1669 * t1586 - t1673 * t1628, 0, 0, 0, 0, 0, 0, t1669 * t1561 + t1673 * t1619, t1669 * t1575 + t1673 * t1620, t1669 * t1565 + t1673 * t1608, t1669 * t1534 - t1673 * t1612, 0, 0, 0, 0, 0, 0, t1669 * t1524 + t1673 * t1563, t1669 * t1528 + t1673 * t1567, t1669 * t1520 + t1673 * t1553, t1669 * t1502 + t1673 * t1518, 0, 0, 0, 0, 0, 0, t1669 * t1500 + t1673 * t1522, t1669 * t1504 + t1673 * t1531, t1669 * t1496 + t1673 * t1508, t1669 * t1490 + t1673 * t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1643, -t1644, 0, t1673 * t1645 + t1669 * t1646, 0, 0, 0, 0, 0, 0, 0, -t1643, t1644, -t1669 * t1630 + t1673 * t1634, 0, 0, 0, 0, 0, 0, t1673 * t1640 + t1663 * t1697, t1673 * t1639 + t1664 * t1697, t1673 * t1641 - t1669 * t1723, -t1673 * t1586 - t1669 * t1628, 0, 0, 0, 0, 0, 0, -t1673 * t1561 + t1669 * t1619, -t1673 * t1575 + t1669 * t1620, -t1673 * t1565 + t1669 * t1608, -t1673 * t1534 - t1669 * t1612, 0, 0, 0, 0, 0, 0, -t1673 * t1524 + t1669 * t1563, -t1673 * t1528 + t1669 * t1567, -t1673 * t1520 + t1669 * t1553, -t1673 * t1502 + t1669 * t1518, 0, 0, 0, 0, 0, 0, -t1673 * t1500 + t1669 * t1522, -t1673 * t1504 + t1669 * t1531, -t1673 * t1496 + t1669 * t1508, -t1673 * t1490 + t1669 * t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1587, 0, 0, 0, 0, 0, 0, t1562, t1576, t1566, t1535, 0, 0, 0, 0, 0, 0, t1525, t1529, t1521, t1503, 0, 0, 0, 0, 0, 0, t1501, t1505, t1497, t1491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1674, -qJDD(1), 0, t1646, 0, 0, 0, 0, 0, 0, 0, t1674, qJDD(1), -t1630, 0, 0, 0, 0, 0, 0, t1653, t1654, -t1723, -t1628, 0, 0, 0, 0, 0, 0, t1619, t1620, t1608, -t1612, 0, 0, 0, 0, 0, 0, t1563, t1567, t1553, t1518, 0, 0, 0, 0, 0, 0, t1522, t1531, t1508, t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1674, 0, t1645, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1674, t1634, 0, 0, 0, 0, 0, 0, t1640, t1639, t1641, -t1586, 0, 0, 0, 0, 0, 0, -t1561, -t1575, -t1565, -t1534, 0, 0, 0, 0, 0, 0, -t1524, -t1528, -t1520, -t1502, 0, 0, 0, 0, 0, 0, -t1500, -t1504, -t1496, -t1490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1587, 0, 0, 0, 0, 0, 0, t1562, t1576, t1566, t1535, 0, 0, 0, 0, 0, 0, t1525, t1529, t1521, t1503, 0, 0, 0, 0, 0, 0, t1501, t1505, t1497, t1491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1587, 0, 0, 0, 0, 0, 0, t1562, t1576, t1566, t1535, 0, 0, 0, 0, 0, 0, t1525, t1529, t1521, t1503, 0, 0, 0, 0, 0, 0, t1501, t1505, t1497, t1491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1674, -qJDD(1), t1630, 0, 0, 0, 0, 0, 0, -t1653, -t1654, t1723, t1628, 0, 0, 0, 0, 0, 0, -t1619, -t1620, -t1608, t1612, 0, 0, 0, 0, 0, 0, -t1563, -t1567, -t1553, -t1518, 0, 0, 0, 0, 0, 0, -t1522, -t1531, -t1508, -t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1674, -t1634, 0, 0, 0, 0, 0, 0, -t1640, -t1639, -t1641, t1586, 0, 0, 0, 0, 0, 0, t1561, t1575, t1565, t1534, 0, 0, 0, 0, 0, 0, t1524, t1528, t1520, t1502, 0, 0, 0, 0, 0, 0, t1500, t1504, t1496, t1490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1702, -t1694, -t1653, t1614, 0, 0, 0, 0, 0, 0, t1589, t1599, t1591, t1556, 0, 0, 0, 0, 0, 0, t1548, t1550, t1540, t1515, 0, 0, 0, 0, 0, 0, t1513, t1517, t1507, t1493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1694, -t1660 * t1674, -t1654, t1613, 0, 0, 0, 0, 0, 0, t1588, t1598, t1590, t1555, 0, 0, 0, 0, 0, 0, t1547, t1549, t1539, t1514, 0, 0, 0, 0, 0, 0, t1512, t1516, t1506, t1492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1653, t1654, -t1723, -t1628, 0, 0, 0, 0, 0, 0, t1619, t1620, t1608, -t1612, 0, 0, 0, 0, 0, 0, t1563, t1567, t1553, t1518, 0, 0, 0, 0, 0, 0, t1522, t1531, t1508, t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1616, t1618, t1606, t1582, 0, 0, 0, 0, 0, 0, t1564, t1568, t1554, t1519, 0, 0, 0, 0, 0, 0, t1523, t1532, t1509, t1495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1617, t1629, -t1689, t1581, 0, 0, 0, 0, 0, 0, -t1577, -t1579, -t1592, -t1559, 0, 0, 0, 0, 0, 0, -t1543, -t1545, -t1557, -t1536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, t1620, t1608, -t1612, 0, 0, 0, 0, 0, 0, t1563, t1567, t1553, t1518, 0, 0, 0, 0, 0, 0, t1522, t1531, t1508, t1494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1597, t1585, t1578, t1538, 0, 0, 0, 0, 0, 0, t1542, t1552, t1527, t1499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1584, t1600, t1580, t1537, 0, 0, 0, 0, 0, 0, t1541, t1551, t1526, t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1577, t1579, t1592, t1559, 0, 0, 0, 0, 0, 0, t1543, t1545, t1557, t1536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1574, t1573, t1544, t1511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1572, t1583, t1546, t1510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1543, t1545, t1557, t1536;];
f_new_reg  = t1;
