% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:36
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:36:28
% EndTime: 2019-03-09 02:36:40
% DurationCPUTime: 6.76s
% Computational Cost: add. (6278->410), mult. (12638->555), div. (0->0), fcn. (14675->8), ass. (0->338)
t319 = sin(pkin(10));
t320 = cos(pkin(10));
t324 = sin(qJ(4));
t495 = cos(qJ(4));
t284 = t319 * t495 + t324 * t320;
t502 = -t284 / 0.2e1;
t305 = t495 * t320;
t438 = t324 * t319;
t283 = -t305 + t438;
t323 = sin(qJ(5));
t188 = t283 * t323;
t321 = -pkin(1) - qJ(3);
t489 = -pkin(7) + t321;
t290 = t489 * t319;
t291 = t489 * t320;
t212 = t290 * t324 - t495 * t291;
t149 = -pkin(5) * t188 + t212;
t325 = cos(qJ(6));
t437 = t325 * t323;
t322 = sin(qJ(6));
t326 = cos(qJ(5));
t440 = t322 * t326;
t289 = t437 + t440;
t170 = t283 * t289;
t221 = t170 / 0.2e1;
t307 = -pkin(5) * t326 - pkin(4);
t504 = pkin(8) + pkin(9);
t294 = t504 * t323;
t295 = t504 * t326;
t351 = -t325 * t294 - t322 * t295;
t306 = t325 * t326;
t441 = t322 * t323;
t513 = -t306 + t441;
t527 = -t149 * t513 / 0.2e1 + t307 * t221 + t351 * t502;
t500 = t289 / 0.2e1;
t523 = t513 * t284;
t373 = t523 / 0.2e1;
t391 = qJD(5) + qJD(6);
t241 = t283 * t306;
t168 = -t283 * t441 + t241;
t228 = -t322 * t294 + t325 * t295;
t522 = t149 * t500 - t307 * t168 / 0.2e1 + t228 * t502;
t186 = t323 * t284;
t196 = t212 * t326;
t490 = t284 * pkin(8);
t493 = t283 * pkin(4);
t214 = t490 - t493;
t199 = t323 * t214;
t430 = t196 - t199;
t93 = pkin(9) * t186 - t430;
t474 = t325 * t93;
t385 = -t474 / 0.2e1;
t191 = t326 * t284;
t200 = t326 * t214;
t454 = t212 * t323;
t492 = t283 * pkin(5);
t79 = pkin(9) * t191 + t200 + t454 - t492;
t481 = t322 * t79;
t346 = -t481 / 0.2e1 + t385;
t14 = t346 - t527;
t526 = 0.2e1 * t323;
t444 = t289 * t284;
t525 = -t444 / 0.2e1;
t399 = t284 * qJD(1);
t216 = t283 * t399;
t275 = t305 / 0.2e1 - t438 / 0.2e1;
t515 = -t275 * qJD(5) + t216;
t478 = t322 * t93;
t386 = -t478 / 0.2e1;
t477 = t325 * t79;
t345 = t386 + t477 / 0.2e1;
t13 = t345 - t522;
t521 = t391 * t228;
t520 = t391 * t351;
t519 = t284 * t391;
t518 = t513 * t391;
t276 = t284 ^ 2;
t277 = t283 ^ 2;
t514 = -t277 - t276;
t390 = t277 - t276;
t372 = -t441 / 0.2e1;
t501 = t513 / 0.2e1;
t503 = t241 / 0.2e1;
t111 = t503 + (t372 + t501) * t283;
t412 = t111 * qJD(2);
t417 = qJD(4) * t307;
t512 = qJD(1) * t14 + t417 * t513 + t412;
t342 = t440 / 0.2e1 + t437 / 0.2e1;
t113 = (-t289 / 0.2e1 + t342) * t283;
t411 = t113 * qJD(2);
t511 = qJD(1) * t13 - t289 * t417 + t411;
t494 = pkin(5) * t323;
t179 = t289 * t494 - t307 * t513;
t496 = t326 / 0.2e1;
t498 = t323 / 0.2e1;
t499 = t322 / 0.2e1;
t3 = (t168 * t498 + (t289 * t496 + t499) * t283) * pkin(5) + t14;
t510 = t3 * qJD(1) - t179 * qJD(4) + t412;
t178 = t289 * t307 + t494 * t513;
t497 = -t325 / 0.2e1;
t4 = (t170 * t498 + (t496 * t513 + t497) * t283) * pkin(5) + t13;
t509 = t4 * qJD(1) - t178 * qJD(4) + t411;
t508 = t276 / 0.2e1 + t277 / 0.2e1;
t507 = qJD(6) * t275 - t515;
t317 = t323 ^ 2;
t318 = t326 ^ 2;
t299 = t318 - t317;
t400 = t283 * qJD(1);
t377 = t326 * t400;
t332 = t299 * qJD(4) + t377 * t526;
t491 = t284 * pkin(5);
t193 = t283 * t326;
t304 = t319 * pkin(3) + qJ(2);
t359 = pkin(4) * t284 + pkin(8) * t283;
t180 = t359 + t304;
t213 = t290 * t495 + t324 * t291;
t439 = t323 * t213;
t94 = -t326 * t180 + t439;
t89 = pkin(9) * t193 - t94;
t76 = t89 + t491;
t68 = t325 * t76;
t506 = -t68 / 0.2e1;
t505 = -t76 / 0.2e1;
t43 = t289 * t168 - t170 * t513;
t488 = t391 * t43;
t112 = (t500 + t342) * t284;
t393 = -t276 / 0.2e1;
t447 = t283 * t168;
t330 = t447 / 0.2e1 + t513 * t393;
t358 = t306 / 0.2e1 + t372;
t61 = t330 + t358;
t487 = t61 * qJD(2) + t112 * qJD(3);
t75 = t168 * t501 + t170 * t500;
t486 = t391 * t75;
t485 = pkin(5) * qJD(5);
t484 = pkin(5) * qJD(6);
t387 = -t491 / 0.2e1;
t360 = t387 + t89 / 0.2e1;
t7 = (t505 + t360) * t322;
t483 = qJD(1) * t7;
t9 = t325 * t360 + t506;
t482 = qJD(1) * t9;
t480 = t322 * t89;
t453 = t213 * t326;
t95 = t323 * t180 + t453;
t90 = pkin(9) * t188 + t95;
t479 = t322 * t90;
t476 = t325 * t89;
t475 = t325 * t90;
t374 = -t523 / 0.2e1;
t429 = t284 * t372 + t325 * t191 / 0.2e1;
t115 = t374 + t429;
t239 = t322 * t191;
t240 = t284 * t437;
t427 = t240 + t239;
t446 = t283 * t170;
t331 = -t446 / 0.2e1 + t427 * t502;
t62 = t331 - t342;
t473 = t62 * qJD(2) + t115 * qJD(3);
t117 = t373 + t429;
t63 = -t331 - t342;
t472 = t63 * qJD(2) + t117 * qJD(3);
t120 = t342 * t284 + t525;
t64 = -t330 + t358;
t471 = t64 * qJD(2) + t120 * qJD(3);
t37 = -t475 - t480;
t389 = pkin(5) * t193;
t460 = t149 * t168;
t11 = t170 * t389 + t37 * t284 - t460;
t470 = qJD(1) * t11;
t38 = t476 - t479;
t459 = t149 * t170;
t12 = t168 * t389 - t38 * t284 + t459;
t469 = qJD(1) * t12;
t31 = -t68 + t479;
t17 = t284 * t31 + t459;
t468 = qJD(1) * t17;
t32 = t322 * t76 + t475;
t18 = -t284 * t32 - t460;
t467 = qJD(1) * t18;
t27 = (t239 / 0.2e1 + t240 / 0.2e1 + t525) * t283;
t466 = qJD(1) * t27;
t52 = -t193 * t212 - t95 * t284;
t465 = qJD(1) * t52;
t456 = t444 * t284;
t71 = -t446 + t456;
t464 = qJD(1) * t71;
t72 = t446 + t456;
t463 = qJD(1) * t72;
t455 = t523 * t284;
t73 = t447 + t455;
t462 = qJD(1) * t73;
t74 = t447 - t455;
t461 = qJD(1) * t74;
t23 = t200 * t284 + (t94 - t439) * t283;
t450 = t23 * qJD(1);
t24 = (t430 - t196) * t284 + (t95 - t453) * t283;
t449 = t24 * qJD(1);
t28 = (t513 * t502 + t373) * t283;
t448 = t28 * qJD(1);
t128 = t283 * t513;
t44 = -t168 * t444 + t170 * t523;
t436 = t44 * qJD(1);
t51 = t188 * t212 + t284 * t94;
t435 = t51 * qJD(1);
t434 = t61 * qJD(1);
t433 = t62 * qJD(1);
t432 = t391 * t112;
t431 = t391 * t120;
t375 = t284 * t497;
t428 = t186 * t499 + t326 * t375;
t313 = t319 ^ 2;
t314 = t320 ^ 2;
t296 = t313 + t314;
t348 = 0.1e1 / 0.2e1 + t508;
t121 = t348 * t323;
t426 = qJD(1) * t121;
t151 = t390 * t323;
t425 = qJD(1) * t151;
t152 = t514 * t323;
t424 = qJD(1) * t152;
t153 = t390 * t326;
t423 = qJD(1) * t153;
t422 = qJD(1) * t168;
t282 = t296 * t321;
t421 = qJD(1) * t282;
t420 = qJD(2) * t284;
t419 = qJD(3) * t326;
t418 = qJD(4) * t289;
t416 = qJD(4) * t326;
t415 = qJD(5) * t323;
t414 = qJD(5) * t326;
t413 = qJD(6) * t307;
t98 = t112 * qJD(1);
t114 = t373 + t428;
t100 = t114 * qJD(1);
t102 = t115 * qJD(1);
t410 = t128 * qJD(1);
t130 = 0.2e1 * t221;
t409 = t130 * qJD(1);
t147 = t348 * t326;
t408 = t147 * qJD(1);
t407 = t390 * qJD(1);
t406 = t186 * qJD(1);
t405 = t188 * qJD(1);
t404 = t191 * qJD(1);
t198 = t514 * t326;
t403 = t198 * qJD(1);
t402 = t275 * qJD(1);
t268 = t283 * qJD(4);
t271 = t284 * qJD(4);
t370 = -t313 / 0.2e1 - t314 / 0.2e1;
t293 = -0.1e1 / 0.2e1 + t370;
t398 = t293 * qJD(1);
t397 = t296 * qJD(1);
t396 = t319 * qJD(1);
t395 = t320 * qJD(1);
t388 = -t494 / 0.2e1;
t384 = t513 * t399;
t383 = t289 * t399;
t382 = t323 * t399;
t381 = t323 * t416;
t380 = t284 * t415;
t379 = t284 * t414;
t215 = t283 * t271;
t378 = t323 * t414;
t261 = t326 * t268;
t376 = t326 * t399;
t371 = -t196 / 0.2e1 + t199 / 0.2e1;
t369 = pkin(5) * t391;
t367 = t391 * t289;
t366 = -t389 / 0.2e1;
t365 = qJD(1) * t304 + qJD(3);
t364 = qJD(5) + t399;
t363 = t323 * t261;
t361 = t492 / 0.2e1 - t79 / 0.2e1;
t357 = t188 * qJD(4) - t379;
t150 = -pkin(5) * t186 + t213;
t1 = (t477 - t478) * t284 + t31 * t283 - t150 * t170 - t149 * t444;
t356 = t1 * qJD(1) + t27 * qJD(2);
t2 = -(t474 + t481) * t284 + t32 * t283 - t150 * t168 + t149 * t523;
t355 = t2 * qJD(1) + t28 * qJD(2);
t354 = qJD(6) + t364;
t65 = -t168 ^ 2 + t170 ^ 2;
t19 = qJD(1) * t65 + qJD(4) * t43;
t164 = -t289 ^ 2 + t513 ^ 2;
t33 = qJD(1) * t43 + qJD(4) * t164;
t349 = t283 * t364;
t347 = t490 / 0.2e1 - t493 / 0.2e1;
t335 = t347 * t326;
t47 = -t200 / 0.2e1 - t335;
t344 = pkin(4) * t323 * qJD(4) - t47 * qJD(1);
t329 = t347 * t323 + t196 / 0.2e1;
t45 = t329 + t371;
t343 = pkin(4) * t416 - t45 * qJD(1);
t40 = -qJD(4) * t75 + t170 * t422;
t50 = -qJD(1) * t75 + t418 * t513;
t339 = t326 * t349;
t185 = (-t317 / 0.2e1 + t318 / 0.2e1) * t283;
t338 = -t185 * qJD(1) + t381;
t334 = qJD(1) * t277 * t323 * t326 + t185 * qJD(4);
t197 = t299 * t277;
t333 = -t197 * qJD(1) + 0.2e1 * t363;
t316 = qJ(2) * qJD(2);
t315 = qJD(1) * qJ(2);
t292 = 0.1e1 / 0.2e1 + t370;
t264 = t275 * qJD(4);
t174 = t186 * qJD(5);
t173 = t185 * qJD(5);
t158 = -t406 - t415;
t148 = t496 + (t393 - t277 / 0.2e1) * t326;
t129 = t221 - t170 / 0.2e1;
t122 = (-0.1e1 / 0.2e1 + t508) * t323;
t119 = t283 * t342 + t221;
t118 = -t128 / 0.2e1 + t283 * t372 + t503;
t116 = t374 + t428;
t82 = -t367 - t98;
t81 = -t102 + t518;
t80 = -t100 - t518;
t54 = qJD(4) * t114 - t170 * t399;
t53 = qJD(4) * t112 - t168 * t399;
t48 = t454 + t200 / 0.2e1 - t335;
t46 = t329 - t371;
t36 = qJD(4) * t111 + t433;
t35 = qJD(4) * t113 + t434;
t30 = qJD(4) * t116 + t170 * t354;
t29 = qJD(4) * t120 + t168 * t354;
t26 = t28 * qJD(4);
t25 = t27 * qJD(4);
t22 = t119 * qJD(4) + t391 * t523 - t434;
t21 = t118 * qJD(4) + t391 * t427 - t433;
t16 = t345 + t522;
t15 = t346 + t527;
t10 = pkin(5) * t375 + t479 + t506 - t476 / 0.2e1;
t8 = -t475 - t480 / 0.2e1 + (t387 + t505) * t322;
t6 = t168 * t388 + t289 * t366 + t361 * t322 + t385 + t527;
t5 = t170 * t388 - t361 * t325 + t513 * t366 + t386 + t522;
t20 = [0, 0, 0, 0, qJD(2), t316, qJD(2) * t319, qJD(2) * t320, t296 * qJD(3), -qJD(3) * t282 + t316, t215, -t390 * qJD(4), 0, 0, 0, -t268 * t304 + t420, -qJD(2) * t283 - t271 * t304, t215 * t318 - t277 * t378, -t197 * qJD(5) - 0.2e1 * t284 * t363, qJD(4) * t153 + t283 * t380, -t151 * qJD(4) + t283 * t379, -t215, -t152 * qJD(3) + t23 * qJD(4) + t52 * qJD(5) + t326 * t420, -qJD(3) * t198 + qJD(4) * t24 + qJD(5) * t51 - t323 * t420 (-qJD(4) * t523 - t170 * t391) * t168, qJD(4) * t44 + t391 * t65, qJD(4) * t73 + t170 * t519, qJD(4) * t71 + t168 * t519, -t215, qJD(3) * t72 + qJD(4) * t1 + qJD(5) * t11 + qJD(6) * t18 - t420 * t513, qJD(3) * t74 + qJD(4) * t2 + qJD(5) * t12 + qJD(6) * t17 - t289 * t420; 0, 0, 0, 0, qJD(1), t315, t396, t395, 0, qJD(3) * t292 + t315, 0, 0, 0, 0, 0, t399, -t400, 0, 0, 0, 0, 0, t148 * qJD(5) + t376, qJD(5) * t122 - t382, 0, 0, 0, 0, 0, t391 * t64 + t25 - t384, t391 * t63 + t26 - t383; 0, 0, 0, 0, 0, 0, 0, 0, t397, qJD(2) * t292 - t421, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t403, 0, 0, 0, 0, 0, t431 + t463, qJD(4) * t129 + t117 * t391 + t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t407, -t271, t268, 0, -qJD(4) * t213 - t304 * t400, qJD(4) * t212 - t304 * t399, -t173 + (t318 * t400 - t381) * t284, 0.2e1 * t283 * t378 - t284 * t332, -t268 * t323 + t423, -t261 - t425, -t515, t450 + (t323 * t359 - t453) * qJD(4) + t48 * qJD(5), t449 + (t326 * t359 + t439) * qJD(4) + t46 * qJD(5) (t418 - t422) * t523 + t486, t436 + (t289 * t444 - t513 * t523) * qJD(4) + t488, t116 * t391 - t268 * t289 + t462, t268 * t513 + t431 + t464, t507 (t150 * t513 - t283 * t351 - t307 * t444) * qJD(4) + t5 * qJD(5) + t16 * qJD(6) + t356, t129 * qJD(3) + (t150 * t289 + t228 * t283 + t307 * t523) * qJD(4) + t6 * qJD(5) + t15 * qJD(6) + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, t333, t323 * t349, t339, t264, qJD(2) * t148 + qJD(4) * t48 - qJD(5) * t95 + t465, qJD(2) * t122 + qJD(4) * t46 + qJD(5) * t94 + t435, -t40, t19, t30, t29, t264, qJD(4) * t5 + qJD(5) * t37 + qJD(6) * t8 + t470 + t471, qJD(4) * t6 - qJD(5) * t38 + qJD(6) * t10 + t469 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t19, t30, t29, t264, qJD(4) * t16 + qJD(5) * t8 - qJD(6) * t32 + t467 + t471, qJD(4) * t15 + qJD(5) * t10 + qJD(6) * t31 + t468 + t472; 0, 0, 0, 0, -qJD(1), -t315, -t396, -t395, 0, qJD(3) * t293 - t315, 0, 0, 0, 0, 0, -t399, t400, 0, 0, 0, 0, 0, -t147 * qJD(5) - t376, qJD(5) * t121 + t382, 0, 0, 0, 0, 0, -t391 * t61 + t25 + t384, -t391 * t62 + t26 + t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271, t268, 0, 0, 0, 0, 0, t188 * qJD(5) - t271 * t326, qJD(5) * t193 + t271 * t323, 0, 0, 0, 0, 0, t119 * t391 + t271 * t513 + t466, t118 * t391 + t271 * t289 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357 - t408, qJD(4) * t193 + t380 + t426, 0, 0, 0, 0, 0, t22, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, t21; 0, 0, 0, 0, 0, 0, 0, 0, -t397, -qJD(2) * t293 + t421, 0, 0, 0, 0, 0, -t268, -t271, 0, 0, 0, 0, 0, -t174 - t261 + t424, t357 + t403, 0, 0, 0, 0, 0, qJD(4) * t128 - t432 - t463, qJD(4) * t130 - t115 * t391 - t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t400, -t399, 0, 0, 0, 0, 0, -t377, t405, 0, 0, 0, 0, 0, t410, t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, -t364 * t326, 0, 0, 0, 0, 0, t82, t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t407, 0, 0, 0, t365 * t283, t365 * t284, -t216 * t318 - t173, t339 * t526, qJD(5) * t191 - t423, -t174 + t425, t515, t47 * qJD(5) + t283 * t419 - t450, -qJD(3) * t188 + qJD(5) * t45 - t449, t422 * t523 + t486, -t436 + t488, -t114 * t391 - t462, -t432 - t464, -t507, -qJD(3) * t128 - qJD(5) * t4 - qJD(6) * t13 - t356, -qJD(3) * t130 - qJD(5) * t3 - qJD(6) * t14 - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113 * t391 - t466, -t111 * t391 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400, t399, 0, 0, 0, 0, 0, t377, -t405, 0, 0, 0, 0, 0, -t410, -t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t299 * qJD(5), 0, 0, 0, -pkin(4) * t415, -pkin(4) * t414, -t513 * t367, t391 * t164, 0, 0, 0, qJD(5) * t178 + t289 * t413, qJD(5) * t179 - t413 * t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t332, t404 + t414, t158, -t402, -pkin(8) * t414 - t344, pkin(8) * t415 - t343, -t50, t33, t80, t82, -t402, -t509 - t521, -t510 - t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t33, t80, t82, -t402, -t511 - t521, -t512 - t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, -t333, -qJD(4) * t191 - t216 * t323, t186 * qJD(4) - t283 * t376, t264, qJD(2) * t147 + qJD(3) * t186 - qJD(4) * t47 - t465, -t121 * qJD(2) - t45 * qJD(4) + t284 * t419 - t435, t40, -t19, t54, t53, t264, qJD(4) * t4 + qJD(6) * t7 - t470 + t487, qJD(4) * t3 + qJD(6) * t9 - t469 + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, -t426, 0, 0, 0, 0, 0, t35, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, t376, 0, 0, 0, 0, 0, t98, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, -t332, -t404, t406, t402, t344, t343, t50, -t33, t100, t98, t402, t509, t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322 * t484, -t325 * t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322 * t369 + t483, -t325 * t369 + t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t19, t54, t53, t264, qJD(4) * t13 - qJD(5) * t7 - t467 + t487, qJD(4) * t14 - qJD(5) * t9 - t468 + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, -t33, t100, t98, t402, t511, t512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322 * t485 - t483, t325 * t485 - t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
