% Calculate matrix of centrifugal and coriolis load on the joints for
% S6RPPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Cq [6x6]
%   matrix of coriolis and centrifugal joint torques.
%   Gives coriolis joint torques when multiplied with joint velocities

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Cq = S6RPPRRP1_coriolismatJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPPRRP1_coriolismatJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolismat_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:57:48
% EndTime: 2019-03-09 01:58:25
% DurationCPUTime: 37.06s
% Computational Cost: add. (102660->842), mult. (86202->1163), div. (0->0), fcn. (93164->9), ass. (0->488)
t571 = pkin(10) + qJ(4);
t569 = cos(t571);
t572 = qJ(1) + pkin(9);
t570 = cos(t572);
t577 = cos(qJ(5));
t767 = t570 * t577;
t568 = sin(t572);
t575 = sin(qJ(5));
t776 = t568 * t575;
t511 = t569 * t776 + t767;
t768 = t570 * t575;
t775 = t568 * t577;
t512 = t569 * t775 - t768;
t567 = sin(t571);
t780 = t567 * t568;
t367 = Icges(7,5) * t512 - Icges(7,6) * t511 + Icges(7,3) * t780;
t370 = Icges(6,5) * t512 - Icges(6,6) * t511 + Icges(6,3) * t780;
t495 = Icges(7,4) * t512;
t373 = -Icges(7,2) * t511 + Icges(7,6) * t780 + t495;
t498 = Icges(6,4) * t512;
t376 = -Icges(6,2) * t511 + Icges(6,6) * t780 + t498;
t494 = Icges(7,4) * t511;
t380 = -Icges(7,1) * t512 - Icges(7,5) * t780 + t494;
t497 = Icges(6,4) * t511;
t383 = -Icges(6,1) * t512 - Icges(6,5) * t780 + t497;
t993 = (t367 + t370) * t780 + (-t380 - t383) * t512 + (-t373 - t376) * t511;
t513 = -t569 * t768 + t775;
t514 = t569 * t767 + t776;
t778 = t567 * t570;
t369 = Icges(7,5) * t514 + Icges(7,6) * t513 + Icges(7,3) * t778;
t372 = Icges(6,5) * t514 + Icges(6,6) * t513 + Icges(6,3) * t778;
t800 = Icges(7,4) * t514;
t375 = Icges(7,2) * t513 + Icges(7,6) * t778 + t800;
t803 = Icges(6,4) * t514;
t378 = Icges(6,2) * t513 + Icges(6,6) * t778 + t803;
t496 = Icges(7,4) * t513;
t381 = Icges(7,1) * t514 + Icges(7,5) * t778 + t496;
t499 = Icges(6,4) * t513;
t384 = Icges(6,1) * t514 + Icges(6,5) * t778 + t499;
t992 = (t369 + t372) * t780 + (t381 + t384) * t512 + (-t375 - t378) * t511;
t639 = Icges(7,5) * t577 - Icges(7,6) * t575;
t472 = -Icges(7,3) * t569 + t567 * t639;
t798 = Icges(7,4) * t577;
t642 = -Icges(7,2) * t575 + t798;
t476 = -Icges(7,6) * t569 + t567 * t642;
t799 = Icges(7,4) * t575;
t644 = Icges(7,1) * t577 - t799;
t480 = -Icges(7,5) * t569 + t567 * t644;
t280 = t472 * t780 - t476 * t511 + t480 * t512;
t640 = Icges(6,5) * t577 - Icges(6,6) * t575;
t474 = -Icges(6,3) * t569 + t567 * t640;
t801 = Icges(6,4) * t577;
t643 = -Icges(6,2) * t575 + t801;
t478 = -Icges(6,6) * t569 + t567 * t643;
t802 = Icges(6,4) * t575;
t645 = Icges(6,1) * t577 - t802;
t482 = -Icges(6,5) * t569 + t567 * t645;
t281 = t474 * t780 - t478 * t511 + t482 * t512;
t933 = t280 + t281;
t991 = t568 * t993 + t992 * t570;
t866 = t567 / 0.2e1;
t863 = -t569 / 0.2e1;
t419 = -rSges(6,1) * t511 - rSges(6,2) * t512;
t421 = rSges(6,1) * t513 - rSges(6,2) * t514;
t312 = t419 * t568 + t421 * t570;
t883 = m(7) / 0.2e1;
t887 = -m(6) / 0.2e1;
t965 = rSges(7,1) + pkin(5);
t351 = rSges(7,2) * t512 + t511 * t965;
t352 = -t514 * rSges(7,2) + t513 * t965;
t956 = t351 * t568 - t352 * t570;
t752 = t312 * t887 + t883 * t956;
t563 = pkin(5) * t577 + pkin(4);
t820 = pkin(4) - t563;
t913 = t567 * t820;
t812 = rSges(7,1) * t577;
t647 = -rSges(7,2) * t575 + t812;
t574 = -qJ(6) - pkin(8);
t818 = pkin(8) + t574;
t957 = t567 * t647 + (-rSges(7,3) + t818) * t569;
t728 = -t913 + t957;
t664 = t820 * t569;
t823 = pkin(8) * t567;
t906 = t514 * rSges(7,1) + t513 * rSges(7,2) + pkin(5) * t776 - t574 * t778;
t745 = (-t664 - t823) * t570 + rSges(7,3) * t778 + t906;
t234 = t569 * t745 + t728 * t778;
t651 = t514 * rSges(6,1) + t513 * rSges(6,2);
t391 = rSges(6,3) * t778 + t651;
t813 = rSges(6,1) * t577;
t650 = -rSges(6,2) * t575 + t813;
t602 = t650 * t567;
t485 = -rSges(6,3) * t569 + t602;
t321 = t391 * t569 + t485 * t778;
t907 = -t512 * rSges(6,1) + t511 * rSges(6,2);
t387 = rSges(6,3) * t780 - t907;
t966 = t387 * t569 + t485 * t780;
t909 = t321 * t568 - t570 * t966;
t822 = t569 * pkin(4);
t914 = t567 * t818;
t777 = t568 * t569;
t983 = t512 * rSges(7,1) - t511 * rSges(7,2) + t563 * t777;
t746 = -pkin(5) * t768 - (t822 + t914) * t568 + rSges(7,3) * t780 + t983;
t982 = t569 * t746 + t728 * t780;
t758 = (-t234 * t568 + t570 * t982) * t883 + t887 * t909;
t15 = t758 - t752;
t990 = qJD(1) * t15;
t865 = t568 / 0.2e1;
t861 = -t570 / 0.2e1;
t539 = t822 + t823;
t565 = t568 ^ 2;
t566 = t570 ^ 2;
t709 = t565 + t566;
t723 = t709 * t539;
t177 = t568 * t746 + t570 * t745 + t723;
t254 = t387 * t568 + t391 * t570 + t723;
t538 = pkin(4) * t567 - pkin(8) * t569;
t684 = t538 + t728;
t330 = t684 * t568;
t332 = t684 * t570;
t824 = pkin(5) * t575;
t654 = (rSges(7,1) * t575 + rSges(7,2) * t577 + t824) * t567;
t447 = t654 * t568;
t448 = t654 * t570;
t523 = (-rSges(6,1) * t575 - rSges(6,2) * t577) * t567;
t717 = t485 + t538;
t401 = t717 * t568;
t403 = t717 * t570;
t904 = t401 * t568 + t403 * t570;
t989 = -m(6) * (t254 * t312 + t523 * t904) - m(7) * (-t177 * t956 - t330 * t447 - t332 * t448);
t691 = t863 * t933 + t991 * t866;
t284 = t472 * t778 + t476 * t513 + t480 * t514;
t212 = t367 * t778 + t513 * t373 - t380 * t514;
t213 = t369 * t778 + t513 * t375 + t514 * t381;
t635 = t212 * t568 + t213 * t570;
t976 = -t569 * t284 + t567 * t635;
t285 = t474 * t778 + t478 * t513 + t482 * t514;
t214 = t370 * t778 + t513 * t376 - t383 * t514;
t215 = t372 * t778 + t513 * t378 + t514 * t384;
t634 = t214 * t568 + t215 * t570;
t977 = -t569 * t285 + t567 * t634;
t690 = t977 / 0.2e1 + t976 / 0.2e1;
t406 = -Icges(7,5) * t511 - Icges(7,6) * t512;
t408 = -Icges(6,5) * t511 - Icges(6,6) * t512;
t985 = t406 + t408;
t407 = Icges(7,5) * t513 - Icges(7,6) * t514;
t409 = Icges(6,5) * t513 - Icges(6,6) * t514;
t984 = t407 + t409;
t737 = -Icges(6,2) * t514 + t384 + t499;
t739 = -Icges(7,2) * t514 + t381 + t496;
t981 = t737 + t739;
t738 = -Icges(6,2) * t512 - t383 - t497;
t740 = -Icges(7,2) * t512 - t380 - t494;
t980 = t738 + t740;
t741 = Icges(6,1) * t513 - t378 - t803;
t743 = Icges(7,1) * t513 - t375 - t800;
t979 = t741 + t743;
t742 = -Icges(6,1) * t511 - t376 - t498;
t744 = -Icges(7,1) * t511 - t373 - t495;
t978 = t742 + t744;
t786 = t370 * t569;
t953 = t376 * t575 + t383 * t577;
t245 = t567 * t953 + t786;
t788 = t367 * t569;
t954 = t373 * t575 + t380 * t577;
t242 = t567 * t954 + t788;
t807 = -rSges(7,3) + t574;
t360 = (t807 * t569 + (t563 + t647) * t567) * t568;
t689 = t567 * t768;
t772 = t569 * t570;
t712 = rSges(7,2) * t689 + rSges(7,3) * t772;
t771 = t569 * t574;
t361 = (-t771 + (-t563 - t812) * t567) * t570 + t712;
t548 = pkin(4) * t780;
t857 = rSges(6,3) + pkin(8);
t363 = t548 + (-t569 * t857 + t602) * t568;
t549 = pkin(8) * t772;
t711 = rSges(6,2) * t689 + rSges(6,3) * t772;
t364 = t549 + (-pkin(4) - t813) * t778 + t711;
t886 = m(6) / 0.2e1;
t536 = rSges(5,1) * t567 + rSges(5,2) * t569;
t502 = t536 * t568;
t503 = t536 * t570;
t392 = t502 * t568 + t503 * t570;
t952 = m(5) * t392;
t685 = (t360 * t568 - t361 * t570) * t883 + (t363 * t568 - t364 * t570) * t886 + t952 / 0.2e1;
t911 = t709 * t536;
t686 = (-t330 * t568 - t332 * t570) * t883 + t904 * t887 - m(5) * t911 / 0.2e1;
t61 = t686 - t685;
t974 = qJD(1) * t61;
t256 = (t351 * t570 + t352 * t568) * t567;
t970 = -t242 - t245;
t630 = -t375 * t575 + t381 * t577;
t787 = t369 * t569;
t243 = t567 * t630 - t787;
t628 = -t378 * t575 + t384 * t577;
t785 = t372 * t569;
t246 = t567 * t628 - t785;
t969 = t243 + t246;
t968 = -t212 * t570 + t213 * t568;
t967 = -t214 * t570 + t215 * t568;
t562 = cos(pkin(10)) * pkin(3) + pkin(2);
t819 = -pkin(7) - qJ(3);
t825 = cos(qJ(1)) * pkin(1);
t662 = -t568 * t819 + t825;
t810 = rSges(7,3) * t567;
t295 = (t563 * t569 + t562 + t810) * t570 + t662 + t906;
t821 = sin(qJ(1)) * pkin(1);
t929 = (t567 * t807 - t562) * t568 + (-t819 + t824) * t570 - t821 - t983;
t194 = t295 * t778 - t780 * t929;
t964 = t194 * m(7) * qJD(1);
t963 = -t511 * t980 + t512 * t978 + t780 * t985;
t962 = -t511 * t981 + t512 * t979 + t780 * t984;
t961 = t513 * t980 + t514 * t978 + t778 * t985;
t960 = t513 * t981 + t514 * t979 + t778 * t984;
t516 = (-Icges(7,5) * t575 - Icges(7,6) * t577) * t567;
t518 = (-Icges(7,2) * t577 - t799) * t567;
t719 = t480 + t518;
t520 = (-Icges(7,1) * t575 - t798) * t567;
t721 = -t476 + t520;
t235 = -t511 * t719 + t512 * t721 + t516 * t780;
t517 = (-Icges(6,5) * t575 - Icges(6,6) * t577) * t567;
t519 = (-Icges(6,2) * t577 - t802) * t567;
t718 = t482 + t519;
t521 = (-Icges(6,1) * t575 - t801) * t567;
t720 = -t478 + t521;
t236 = -t511 * t718 + t512 * t720 + t517 * t780;
t959 = -t235 - t236;
t237 = t513 * t719 + t514 * t721 + t516 * t778;
t238 = t513 * t718 + t514 * t720 + t517 * t778;
t958 = -t238 - t237;
t898 = t567 * t857 + t562 + t822;
t318 = t570 * t898 + t651 + t662;
t617 = -t570 * t819 - t821;
t928 = -t568 * t898 + t617 + t907;
t910 = -t318 * t568 - t570 * t928;
t884 = -m(7) / 0.2e1;
t943 = t485 * t568;
t434 = t476 * t568;
t438 = t480 * t568;
t612 = -t472 * t568 + t954;
t171 = -t612 * t569 + (t434 * t575 - t438 * t577 + t367) * t567;
t436 = t478 * t568;
t440 = t482 * t568;
t610 = -t474 * t568 + t953;
t173 = -t610 * t569 + (t436 * t575 - t440 * t577 + t370) * t567;
t940 = t171 + t173;
t435 = t476 * t570;
t439 = t480 * t570;
t611 = -t472 * t570 - t630;
t172 = -t611 * t569 + (t435 * t575 - t439 * t577 + t369) * t567;
t437 = t478 * t570;
t441 = t482 * t570;
t609 = -t474 * t570 - t628;
t174 = -t609 * t569 + (t437 * t575 - t441 * t577 + t372) * t567;
t939 = t172 + t174;
t184 = -t406 * t569 + (-t575 * t740 + t577 * t744) * t567;
t186 = -t408 * t569 + (-t575 * t738 + t577 * t742) * t567;
t938 = t184 + t186;
t185 = -t407 * t569 + (-t575 * t739 + t577 * t743) * t567;
t187 = -t409 * t569 + (-t575 * t737 + t577 * t741) * t567;
t937 = t185 + t187;
t477 = Icges(7,6) * t567 + t569 * t642;
t481 = Icges(7,5) * t567 + t569 * t644;
t473 = Icges(7,3) * t567 + t569 * t639;
t625 = -t476 * t575 + t577 * t480;
t608 = t473 - t625;
t783 = t472 * t569;
t586 = t567 * t608 + t783;
t202 = -t477 * t511 + t481 * t512 + t568 * t586;
t479 = Icges(6,6) * t567 + t569 * t643;
t483 = Icges(6,5) * t567 + t569 * t645;
t475 = Icges(6,3) * t567 + t569 * t640;
t624 = -t478 * t575 + t577 * t482;
t607 = t475 - t624;
t782 = t474 * t569;
t585 = t567 * t607 + t782;
t203 = -t479 * t511 + t483 * t512 + t568 * t585;
t936 = t202 + t203;
t204 = t477 * t513 + t481 * t514 + t570 * t586;
t205 = t479 * t513 + t483 * t514 + t570 * t585;
t935 = t204 + t205;
t247 = -t608 * t569 + (-t575 * t477 + t577 * t481 + t472) * t567;
t248 = -t607 * t569 + (-t575 * t479 + t577 * t483 + t474) * t567;
t934 = t247 + t248;
t932 = t284 + t285;
t459 = Icges(5,4) * t777 - Icges(5,2) * t780 - Icges(5,6) * t570;
t560 = Icges(5,4) * t569;
t795 = Icges(5,2) * t567;
t460 = Icges(5,6) * t568 + (t560 - t795) * t570;
t804 = Icges(5,4) * t567;
t533 = Icges(5,1) * t569 - t804;
t462 = Icges(5,5) * t568 + t533 * t570;
t427 = t462 * t777;
t529 = Icges(5,5) * t569 - Icges(5,6) * t567;
t458 = Icges(5,3) * t568 + t529 * t570;
t656 = t570 * t458 - t427;
t457 = Icges(5,5) * t777 - Icges(5,6) * t780 - Icges(5,3) * t570;
t543 = Icges(5,4) * t780;
t461 = Icges(5,1) * t777 - Icges(5,5) * t570 - t543;
t730 = -t568 * t457 - t461 * t772;
t931 = -t459 * t778 - t460 * t780 - t656 - t730;
t322 = t567 * t625 - t783;
t323 = t567 * t624 - t782;
t930 = t322 + t323;
t927 = t568 * t970 + t570 * t969;
t925 = -t567 / 0.2e1;
t924 = -t568 / 0.2e1;
t923 = t569 / 0.2e1;
t859 = t570 / 0.2e1;
t920 = t959 * t569 + (t568 * t963 + t570 * t962) * t567;
t919 = t958 * t569 + (t568 * t961 + t570 * t960) * t567;
t903 = t171 / 0.2e1 + t173 / 0.2e1;
t902 = -t172 / 0.2e1 - t174 / 0.2e1;
t901 = (-t401 * t421 + t403 * t419 + t523 * t910) * t887 + (t295 * t447 - t330 * t352 - t332 * t351 + t448 * t929) * t884;
t727 = t569 * t647 - t664 + t810 - t914;
t734 = t548 + (-t563 * t567 - t957) * t568;
t146 = (t568 * t728 + t734) * t569 + (t568 * t727 - t746) * t567;
t688 = t567 * t767;
t733 = -t549 + (-t771 + t913) * t570 - rSges(7,1) * t688 + t712;
t147 = (-t570 * t728 - t733) * t569 + (-t570 * t727 + t745) * t567;
t487 = rSges(6,3) * t567 + t569 * t650;
t257 = (t487 * t568 - t387) * t567;
t445 = -rSges(6,1) * t688 + t711;
t258 = (-t485 * t570 - t445) * t569 + (-t487 * t570 + t391) * t567;
t900 = (t146 * t929 + t147 * t295 - t234 * t361 + t360 * t982) * t884 + (t257 * t928 + t258 * t318 - t321 * t364 + t363 * t966) * t887;
t668 = t482 / 0.2e1 + t480 / 0.2e1;
t670 = t478 / 0.2e1 + t476 / 0.2e1;
t897 = -t575 * (t519 / 0.2e1 + t518 / 0.2e1 + t668) + t577 * (t521 / 0.2e1 + t520 / 0.2e1 - t670);
t805 = Icges(5,1) * t567;
t896 = t575 * t670 - t577 * t668 + t473 / 0.2e1 + t475 / 0.2e1 - t560 + t795 / 0.2e1 - t805 / 0.2e1;
t530 = Icges(5,2) * t569 + t804;
t895 = t575 * (t479 / 0.2e1 + t477 / 0.2e1) - t577 * (t483 / 0.2e1 + t481 / 0.2e1) - t472 / 0.2e1 - t474 / 0.2e1 + t530 / 0.2e1 - t533 / 0.2e1;
t490 = -Icges(5,2) * t777 - t543;
t491 = t530 * t570;
t646 = -t560 - t805;
t492 = t646 * t568;
t493 = t646 * t570;
t894 = (t570 * (t459 - t492) + (-t460 + t493) * t568) * t569 + ((t461 + t490) * t570 + (-t462 + t491) * t568) * t567;
t892 = 0.4e1 * qJD(1);
t891 = 2 * qJD(4);
t889 = 2 * qJD(5);
t888 = 4 * qJD(5);
t627 = t387 * t570 - t391 * t568;
t207 = t627 * t569 + (-t445 * t568 - t570 * t943) * t567;
t278 = t627 * t567;
t880 = m(6) * (t207 * t278 + t257 * t966 - t258 * t321);
t600 = -t568 * t745 + t570 * t746;
t108 = t600 * t569 + (-t568 * t733 + t570 * t734) * t567;
t190 = t600 * t567;
t757 = -t234 * t777 + t772 * t982;
t876 = m(7) * (-t108 * t569 + (t146 * t570 + t147 * t568 + t190) * t567 + t757);
t875 = m(7) * (t108 * t190 + t146 * t982 - t147 * t234);
t515 = t709 * t567;
t869 = m(7) * (t190 * t515 + t757);
t860 = -t570 / 0.4e1;
t808 = rSges(4,3) + qJ(3);
t856 = m(4) * ((t808 * t570 - t821) * t570 + (t808 * t568 + t825) * t568);
t814 = rSges(5,1) * t569;
t660 = t562 + t814;
t710 = rSges(5,2) * t780 + t570 * rSges(5,3);
t395 = -t568 * t660 + t617 + t710;
t659 = -rSges(5,2) * t778 + t568 * rSges(5,3);
t396 = t570 * t660 + t659 + t662;
t855 = m(5) * (t395 * t502 - t396 * t503);
t854 = m(5) * (t395 * t570 + t396 * t568);
t847 = m(6) * (t318 * t364 + t363 * t928);
t846 = m(6) * (t318 * t421 - t419 * t928);
t845 = m(6) * t910;
t751 = t295 * t777 + t772 * t929;
t838 = m(7) * (-t330 * t778 + t332 * t780 + t751);
t837 = m(7) * (-t234 * t778 - t780 * t982);
t835 = m(7) * ((t360 * t570 + t361 * t568) * t567 + t751);
t834 = m(7) * (t295 * t352 + t351 * t929);
t833 = m(7) * (t295 * t361 + t360 * t929);
t832 = m(7) * (t956 * t569 + (t447 * t568 + t448 * t570) * t567);
t831 = m(7) * (t295 * t568 + t570 * t929);
t828 = m(7) * t256;
t399 = m(7) * t515;
t816 = m(7) * qJD(4);
t815 = m(7) * qJD(6);
t781 = t567 * t459;
t779 = t567 * t569;
t747 = -t330 * t777 - t332 * t772;
t729 = t568 * t458 + t462 * t772;
t724 = t568 * (pkin(8) * t777 - t548) + t570 * (-pkin(4) * t778 + t549);
t716 = -t487 - t539;
t713 = t709 * t779;
t708 = qJD(1) * t567;
t707 = qJD(1) * t569;
t706 = qJD(4) * t568;
t705 = qJD(4) * t570;
t704 = qJD(5) * t567;
t703 = qJD(5) * t569;
t700 = t399 * qJD(1);
t454 = (t515 / 0.2e1 + t925) * m(7);
t699 = t454 * qJD(2);
t590 = t567 * t612 + t788;
t148 = t434 * t511 - t438 * t512 + t568 * t590;
t589 = t567 * t611 + t787;
t149 = t435 * t511 - t439 * t512 + t568 * t589;
t588 = t567 * t610 + t786;
t150 = t436 * t511 - t440 * t512 + t568 * t588;
t587 = t567 * t609 + t785;
t151 = t437 * t511 - t441 * t512 + t568 * t587;
t696 = (-t936 + t991) * t923 + ((t149 + t151) * t570 + (t148 + t150) * t568 + t933) * t866;
t152 = -t434 * t513 - t438 * t514 + t570 * t590;
t153 = -t435 * t513 - t439 * t514 + t570 * t589;
t154 = -t436 * t513 - t440 * t514 + t570 * t588;
t155 = -t437 * t513 - t441 * t514 + t570 * t587;
t695 = (t634 + t635 - t935) * t923 + ((t153 + t155) * t570 + (t152 + t154) * t568 + t932) * t866;
t694 = (t568 * t940 + t570 * t939 + t930) * t925 + (t927 - t934) * t863;
t693 = t859 * t963 + t924 * t962;
t692 = t861 * t961 + t865 * t960;
t683 = -t539 - t727;
t681 = t780 / 0.4e1;
t677 = t923 * t930 + t925 * t927;
t673 = t184 / 0.2e1 + t186 / 0.2e1;
t672 = -t185 / 0.2e1 - t187 / 0.2e1;
t666 = t517 / 0.2e1 + t516 / 0.2e1;
t655 = t567 * t460 - t457;
t641 = -Icges(5,5) * t567 - Icges(5,6) * t569;
t583 = (t257 * t568 - t258 * t570) * t887 + (t146 * t568 - t147 * t570) * t884;
t601 = (-t447 * t570 + t448 * t568) * t883;
t52 = t601 + t583;
t57 = 0.2e1 * (t108 / 0.4e1 + t956 / 0.4e1) * m(7) + 0.2e1 * (t207 / 0.4e1 - t312 / 0.4e1) * m(6);
t638 = -t57 * qJD(2) + t52 * qJD(3);
t622 = -t693 - t696;
t620 = t692 - t695;
t618 = t654 * t567;
t300 = -t460 * t778 + t729;
t599 = t300 * t865 + t729 * t924 + (-t427 + (t458 + t781) * t570 + t730 + t931) * t861;
t598 = (t570 * t655 + t300 - t729) * t859 + (-t568 * (-t569 * t461 + t781) - t570 * t457) * t861 + (t568 * t655 + t656 + t931) * t865;
t591 = -t901 + (t937 - t958) * t568 / 0.4e1 + (t938 - t959) * t860;
t580 = (-t780 / 0.4e1 + t681) * (t968 + t967) + (t860 + t570 / 0.4e1) * (t976 + t977);
t579 = -t900 + t930 * t866 + t934 * t863 + (t936 + t940) * t681 + (t935 + t939) * t778 / 0.4e1 + (t933 + t970) * t777 / 0.4e1 + (t932 + t969) * t772 / 0.4e1;
t537 = -rSges(5,2) * t567 + t814;
t489 = t641 * t570;
t488 = t641 * t568;
t453 = t399 / 0.2e1 + m(7) * t866;
t426 = t713 - t779;
t404 = t716 * t570;
t402 = t716 * t568;
t335 = -t421 * t569 - t523 * t778;
t334 = t419 * t569 + t523 * t780;
t333 = t683 * t570;
t331 = t683 * t568;
t303 = (t419 * t570 - t421 * t568) * t567;
t292 = -t352 * t569 + t570 * t618;
t291 = -t351 * t569 - t568 * t618;
t270 = -t569 * t517 + (-t575 * t718 + t577 * t720) * t567;
t269 = -t569 * t516 + (-t575 * t719 + t577 * t721) * t567;
t268 = t445 * t570 - t568 * t943 + t724;
t260 = t828 / 0.2e1;
t193 = t568 * t734 + t570 * t733 + t724;
t191 = t832 / 0.2e1;
t137 = t835 / 0.2e1;
t129 = t837 / 0.2e1;
t125 = t838 / 0.2e1;
t102 = t177 * t515 + t747;
t87 = t831 - t845 + t854 + t856;
t78 = t869 / 0.2e1;
t77 = -t154 * t570 + t155 * t568;
t76 = -t152 * t570 + t153 * t568;
t75 = -t150 * t570 + t151 * t568;
t74 = -t148 * t570 + t149 * t568;
t62 = t567 * t897 - t666 * t569 + t834 + t846;
t59 = t685 + t686;
t58 = (t207 + t312) * t886 + (t108 - t956) * t883;
t51 = t601 - t583;
t50 = -t567 * t895 - t569 * t896 + t833 + t847 + t855;
t48 = t125 - t835 / 0.2e1;
t47 = t125 + t137;
t46 = t137 - t838 / 0.2e1;
t21 = t129 + t260;
t20 = t129 - t828 / 0.2e1;
t19 = t260 - t837 / 0.2e1;
t16 = t876 / 0.2e1;
t13 = t752 + t758;
t10 = t78 + t191 - t876 / 0.2e1;
t9 = t78 + t16 - t832 / 0.2e1;
t8 = t191 + t16 - t869 / 0.2e1;
t7 = t568 * t692 + t570 * t693 - t989;
t6 = t568 * t598 + t570 * t599;
t4 = t880 + t875 + (t568 * t691 + t570 * t690 + t694) * t569 + (t568 * t696 + t570 * t695 - t677) * t567;
t3 = (-t238 / 0.4e1 - t237 / 0.4e1 - t187 / 0.4e1 - t185 / 0.4e1) * t568 + t580 + t579 + (t236 / 0.4e1 + t235 / 0.4e1 + t186 / 0.4e1 + t184 / 0.4e1) * t570 + t901;
t2 = (t248 / 0.2e1 + t247 / 0.2e1 + (-t285 / 0.4e1 - t284 / 0.4e1 - t246 / 0.4e1 - t243 / 0.4e1) * t570 + (-t281 / 0.4e1 - t280 / 0.4e1 + t245 / 0.4e1 + t242 / 0.4e1) * t568) * t569 + t591 + t580 + (-t323 / 0.2e1 - t322 / 0.2e1 + (-t205 / 0.4e1 - t204 / 0.4e1 - t174 / 0.4e1 - t172 / 0.4e1) * t570 + (-t203 / 0.4e1 - t202 / 0.4e1 - t173 / 0.4e1 - t171 / 0.4e1) * t568) * t567 + t900;
t1 = t591 + t579;
t5 = [t87 * qJD(3) + t50 * qJD(4) + t62 * qJD(5) + t194 * t815, 0, qJD(1) * t87 + qJD(4) * t59 + qJD(5) * t13, t50 * qJD(1) + t59 * qJD(3) + t1 * qJD(5) + t47 * qJD(6) + ((t318 * t402 - t363 * t403 - t364 * t401 + t404 * t928) * t886 + (t295 * t331 - t330 * t361 - t332 * t360 + t333 * t929) * t883) * t891 + (m(5) * (-t395 * t537 - t502 * t536) - t202 / 0.2e1 - t203 / 0.2e1 + t529 * t859 + (-t461 / 0.2e1 - t490 / 0.2e1) * t569 + (t459 / 0.2e1 - t492 / 0.2e1) * t567 - t599 - t903) * t705 + (m(5) * (-t396 * t537 + t503 * t536) + t204 / 0.2e1 + t205 / 0.2e1 + t529 * t865 + (t462 / 0.2e1 - t491 / 0.2e1) * t569 + (-t460 / 0.2e1 + t493 / 0.2e1) * t567 - t598 - t902) * t706, t62 * qJD(1) + t13 * qJD(3) + t1 * qJD(4) + t21 * qJD(6) + ((-t234 * t352 + t291 * t929 + t292 * t295 + t351 * t982) * t883 + (t318 * t335 - t321 * t421 + t334 * t928 - t419 * t966) * t886) * t889 + (-t270 - t269) * t703 + ((t238 / 0.2e1 + t237 / 0.2e1 - t672) * t570 + (t236 / 0.2e1 + t235 / 0.2e1 + t673) * t568) * t704, t47 * qJD(4) + t21 * qJD(5) + t964; 0, 0, 0 (-t952 / 0.2e1 + t268 * t886 + t193 * t883) * t891 + t58 * qJD(5) + t453 * qJD(6), t58 * qJD(4) + (-t256 * t883 + t303 * t886) * t889, t453 * qJD(4); -t61 * qJD(4) - t15 * qJD(5) - t399 * qJD(6) + (-t831 / 0.4e1 + t845 / 0.4e1 - t854 / 0.4e1 - t856 / 0.4e1) * t892, 0, 0, -t974 + ((-t402 * t570 + t404 * t568) * t886 + (-t331 * t570 + t333 * t568) * t883) * t891 + t51 * qJD(5), -t990 + t51 * qJD(4) + ((t334 * t568 - t335 * t570) * t886 + (t291 * t568 - t292 * t570) * t883) * t889, -t700; t61 * qJD(3) + t6 * qJD(4) + t2 * qJD(5) + t48 * qJD(6) + (-t855 / 0.4e1 - t847 / 0.4e1 - t833 / 0.4e1) * t892 + t896 * t707 + t895 * t708, -qJD(5) * t57 + qJD(6) * t454, qJD(5) * t52 + t974, t6 * qJD(1) + t7 * qJD(5) + t102 * t815 + (m(7) * (t177 * t193 - t330 * t331 - t332 * t333) + m(6) * (t254 * t268 - t401 * t402 - t403 * t404) + m(5) * (t537 * t911 - (t568 * (rSges(5,1) * t777 - t710) + t570 * (rSges(5,1) * t772 + t659)) * t392) + (t77 + t76 + t565 * t489 + (-t568 * t488 + t894) * t570) * t865 + (t74 + t75 + t566 * t488 + (-t570 * t489 + t894) * t568) * t861) * qJD(4), t2 * qJD(1) + t7 * qJD(4) + (t861 * t920 + t865 * t919) * qJD(5) + t10 * qJD(6) + (-t880 / 0.4e1 - t875 / 0.4e1) * t888 + ((t254 * t303 + t278 * t312 - t334 * t403 - t335 * t401 + t523 * t909) * t886 + (-t177 * t256 - t190 * t956 - t234 * t447 - t291 * t332 - t292 * t330 + t448 * t982) * t883) * t889 + ((t673 - t690) * t570 + (t672 - t691) * t568 - t694) * t703 + (t568 * t622 + t570 * t620 + t677) * t704 + t638, t48 * qJD(1) + t699 + t102 * t816 + t10 * qJD(5) + (-t515 * t569 - t426 + t713) * t815; t15 * qJD(3) + t3 * qJD(4) + t20 * qJD(6) + t666 * t707 + (-t834 / 0.4e1 - t846 / 0.4e1) * t892 - t897 * t708, qJD(4) * t57, -qJD(4) * t52 + t990, t3 * qJD(1) + t4 * qJD(5) + t9 * qJD(6) + ((t207 * t254 - t257 * t403 - t258 * t401 + t268 * t278 - t321 * t402 + t404 * t966) * t886 + (t108 * t177 - t146 * t332 - t147 * t330 + t190 * t193 - t234 * t331 + t333 * t982) * t883) * t891 + ((t968 / 0.2e1 + t967 / 0.2e1 + t903) * t569 + t622) * t705 + ((t993 * t861 + t992 * t865 + t902) * t569 - t620) * t706 - t638 + (((t77 / 0.2e1 + t76 / 0.2e1 + t242 / 0.2e1 + t245 / 0.2e1) * t570 + (t246 / 0.2e1 + t243 / 0.2e1 + t74 / 0.2e1 + t75 / 0.2e1) * t568) * t567 + t989) * qJD(4), t4 * qJD(4) + ((-t190 * t256 - t234 * t292 + t291 * t982) * m(7) / 0.4e1 + (t278 * t303 - t321 * t335 + t334 * t966) * m(6) / 0.4e1) * t888 + (t269 / 0.2e1 + t270 / 0.2e1) * qJD(5) * t569 ^ 2 + (t920 * t865 + (t568 * t938 + t570 * t937) * t863 + t919 * t859) * t704, qJD(1) * t20 + qJD(4) * t9; t399 * qJD(3) + t46 * qJD(4) + t19 * qJD(5) - t964, -t454 * qJD(4), t700, t46 * qJD(1) - t699 + (-t569 * t193 + (t331 * t568 + t333 * t570 + t177) * t567 - t102 + t747) * t816 + t8 * qJD(5) + t426 * t815, t19 * qJD(1) + t8 * qJD(4) + m(7) * (t256 * t569 + (t291 * t570 + t292 * t568) * t567) * qJD(5), t426 * t816;];
Cq  = t5;
