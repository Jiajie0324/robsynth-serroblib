% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:45
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRP1_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP1_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP1_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRP1_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRP1_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRP1_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:45:46
% EndTime: 2019-05-05 14:45:50
% DurationCPUTime: 4.04s
% Computational Cost: add. (19421->243), mult. (43946->332), div. (0->0), fcn. (31760->10), ass. (0->186)
t1763 = qJD(1) ^ 2;
t1752 = sin(pkin(10));
t1746 = t1752 ^ 2;
t1754 = cos(pkin(10));
t1747 = t1754 ^ 2;
t1781 = t1746 + t1747;
t1729 = t1781 * t1763;
t1758 = sin(qJ(4));
t1761 = cos(qJ(4));
t1718 = (t1752 * t1758 - t1754 * t1761) * qJD(1);
t1716 = qJD(5) + t1718;
t1799 = qJD(5) + t1716;
t1774 = t1752 * t1761 + t1754 * t1758;
t1798 = t1774 * qJDD(1);
t1797 = qJD(4) ^ 2;
t1720 = t1774 * qJD(1);
t1757 = sin(qJ(5));
t1760 = cos(qJ(5));
t1709 = -t1760 * qJD(4) + t1720 * t1757;
t1796 = t1709 ^ 2;
t1711 = qJD(4) * t1757 + t1720 * t1760;
t1795 = t1711 ^ 2;
t1794 = t1716 ^ 2;
t1793 = t1718 ^ 2;
t1792 = t1720 ^ 2;
t1791 = -2 * qJD(6);
t1790 = qJD(3) * qJD(1);
t1789 = t1709 * t1711;
t1788 = t1718 * qJD(4);
t1787 = t1718 * t1720;
t1715 = t1720 * qJD(4);
t1786 = t1746 * t1763;
t1785 = t1747 * t1763;
t1749 = -g(3) + qJDD(2);
t1784 = t1754 * t1749;
t1759 = sin(qJ(1));
t1762 = cos(qJ(1));
t1733 = -g(1) * t1762 - g(2) * t1759;
t1725 = -pkin(1) * t1763 + t1733;
t1755 = cos(pkin(9));
t1783 = t1755 * t1725;
t1782 = qJD(5) - t1716;
t1753 = sin(pkin(9));
t1732 = g(1) * t1759 - g(2) * t1762;
t1770 = qJDD(1) * pkin(1) + t1732;
t1701 = t1753 * t1770 + t1783;
t1767 = -t1763 * pkin(2) + qJDD(1) * qJ(3) + t1701;
t1686 = t1752 * t1749 + (t1767 + 0.2e1 * t1790) * t1754;
t1742 = t1754 * qJDD(1);
t1680 = -pkin(3) * t1785 + pkin(7) * t1742 + t1686;
t1779 = -0.2e1 * t1790;
t1766 = t1784 + (-t1783 - t1753 * t1732 + t1779 + (pkin(3) * t1754 + pkin(2)) * t1763 + (-pkin(1) * t1753 - pkin(7) - qJ(3)) * qJDD(1)) * t1752;
t1657 = t1761 * t1680 + t1758 * t1766;
t1693 = pkin(4) * t1718 - pkin(8) * t1720;
t1640 = -pkin(4) * t1797 + qJDD(4) * pkin(8) - t1693 * t1718 + t1657;
t1700 = -t1753 * t1725 + t1755 * t1770;
t1692 = -qJDD(1) * pkin(2) - t1763 * qJ(3) + qJDD(3) - t1700;
t1684 = -pkin(3) * t1742 + t1692 + (-t1785 - t1786) * pkin(7);
t1699 = t1798 - t1788;
t1780 = t1752 * qJDD(1);
t1776 = -t1761 * t1742 + t1758 * t1780;
t1772 = t1715 + t1776;
t1647 = (-t1699 + t1788) * pkin(8) + (t1772 + t1715) * pkin(4) + t1684;
t1622 = t1760 * t1640 + t1757 * t1647;
t1621 = -t1757 * t1640 + t1760 * t1647;
t1656 = -t1758 * t1680 + t1761 * t1766;
t1778 = -t1760 * qJDD(4) + t1757 * t1699;
t1727 = -qJDD(1) * t1753 - t1755 * t1763;
t1728 = qJDD(1) * t1755 - t1753 * t1763;
t1777 = t1762 * t1727 - t1728 * t1759;
t1775 = t1727 * t1759 + t1728 * t1762;
t1773 = -t1757 * qJDD(4) - t1760 * t1699;
t1771 = -qJD(5) * t1711 - t1778;
t1768 = -qJDD(5) - t1772;
t1639 = -qJDD(4) * pkin(4) - pkin(8) * t1797 + t1720 * t1693 - t1656;
t1665 = t1709 * t1782 + t1773;
t1666 = -t1768 - t1789;
t1734 = t1754 * t1763 * t1752;
t1731 = -qJDD(1) * t1759 - t1762 * t1763;
t1730 = qJDD(1) * t1762 - t1759 * t1763;
t1726 = t1781 * qJDD(1);
t1724 = t1754 * t1729;
t1723 = t1752 * t1729;
t1712 = -t1792 - t1797;
t1708 = -t1724 * t1755 - t1742 * t1753;
t1707 = t1723 * t1755 + t1753 * t1780;
t1706 = -t1724 * t1753 + t1742 * t1755;
t1705 = t1723 * t1753 - t1755 * t1780;
t1703 = t1726 * t1755 - t1729 * t1753;
t1702 = t1726 * t1753 + t1729 * t1755;
t1698 = t1798 - 0.2e1 * t1788;
t1697 = 0.2e1 * t1715 + t1776;
t1696 = -qJDD(4) - t1787;
t1695 = qJDD(4) - t1787;
t1694 = -t1793 - t1797;
t1689 = pkin(5) * t1716 - qJ(6) * t1711;
t1688 = -t1792 - t1793;
t1687 = -t1772 + t1715;
t1685 = t1784 + (-t1767 + t1779) * t1752;
t1683 = -t1794 - t1795;
t1682 = t1696 * t1761 - t1712 * t1758;
t1681 = t1696 * t1758 + t1712 * t1761;
t1679 = -t1794 - t1796;
t1676 = -t1700 * t1753 + t1701 * t1755;
t1675 = t1700 * t1755 + t1701 * t1753;
t1672 = -t1795 - t1796;
t1671 = t1687 * t1761 + t1758 * t1798;
t1670 = t1687 * t1758 - t1761 * t1798;
t1669 = t1694 * t1761 - t1695 * t1758;
t1668 = t1694 * t1758 + t1695 * t1761;
t1667 = t1768 - t1789;
t1664 = -t1709 * t1799 - t1773;
t1663 = -t1711 * t1782 - t1778;
t1662 = t1711 * t1799 + t1778;
t1661 = -t1685 * t1752 + t1686 * t1754;
t1660 = t1685 * t1754 + t1686 * t1752;
t1659 = -t1681 * t1752 + t1682 * t1754;
t1658 = t1681 * t1754 + t1682 * t1752;
t1655 = t1667 * t1760 - t1683 * t1757;
t1654 = t1667 * t1757 + t1683 * t1760;
t1653 = -t1670 * t1752 + t1671 * t1754;
t1652 = t1670 * t1754 + t1671 * t1752;
t1651 = -t1666 * t1757 + t1679 * t1760;
t1650 = t1666 * t1760 + t1679 * t1757;
t1649 = -t1668 * t1752 + t1669 * t1754;
t1648 = t1668 * t1754 + t1669 * t1752;
t1646 = t1661 * t1755 + t1692 * t1753;
t1645 = t1661 * t1753 - t1692 * t1755;
t1642 = t1659 * t1755 + t1698 * t1753;
t1641 = t1659 * t1753 - t1698 * t1755;
t1638 = t1649 * t1755 + t1697 * t1753;
t1637 = t1649 * t1753 - t1697 * t1755;
t1635 = t1653 * t1755 + t1688 * t1753;
t1634 = t1653 * t1753 - t1688 * t1755;
t1633 = t1663 * t1760 - t1665 * t1757;
t1632 = t1663 * t1757 + t1665 * t1760;
t1631 = t1655 * t1761 + t1664 * t1758;
t1630 = t1655 * t1758 - t1664 * t1761;
t1629 = t1651 * t1761 + t1662 * t1758;
t1628 = t1651 * t1758 - t1662 * t1761;
t1627 = -t1656 * t1758 + t1657 * t1761;
t1626 = t1656 * t1761 + t1657 * t1758;
t1625 = t1633 * t1761 + t1672 * t1758;
t1624 = t1633 * t1758 - t1672 * t1761;
t1623 = -pkin(5) * t1771 - qJ(6) * t1796 + t1711 * t1689 + qJDD(6) + t1639;
t1620 = -t1630 * t1752 + t1631 * t1754;
t1619 = t1630 * t1754 + t1631 * t1752;
t1618 = -t1716 * t1689 + t1771 * qJ(6) + (-pkin(5) * t1709 + t1791) * t1709 + t1622;
t1617 = -t1628 * t1752 + t1629 * t1754;
t1616 = t1628 * t1754 + t1629 * t1752;
t1615 = -t1626 * t1752 + t1627 * t1754;
t1614 = t1626 * t1754 + t1627 * t1752;
t1613 = pkin(5) * t1666 + qJ(6) * t1665 + t1711 * t1791 + t1621;
t1612 = -t1624 * t1752 + t1625 * t1754;
t1611 = t1624 * t1754 + t1625 * t1752;
t1610 = t1615 * t1755 + t1684 * t1753;
t1609 = t1615 * t1753 - t1684 * t1755;
t1608 = t1620 * t1755 + t1654 * t1753;
t1607 = t1620 * t1753 - t1654 * t1755;
t1606 = t1617 * t1755 + t1650 * t1753;
t1605 = t1617 * t1753 - t1650 * t1755;
t1604 = -t1621 * t1757 + t1622 * t1760;
t1603 = t1621 * t1760 + t1622 * t1757;
t1602 = t1612 * t1755 + t1632 * t1753;
t1601 = t1612 * t1753 - t1632 * t1755;
t1600 = t1604 * t1761 + t1639 * t1758;
t1599 = t1604 * t1758 - t1639 * t1761;
t1598 = -t1613 * t1757 + t1618 * t1760;
t1597 = t1613 * t1760 + t1618 * t1757;
t1596 = -t1607 * t1759 + t1608 * t1762;
t1595 = t1607 * t1762 + t1608 * t1759;
t1594 = -t1605 * t1759 + t1606 * t1762;
t1593 = t1605 * t1762 + t1606 * t1759;
t1592 = t1598 * t1761 + t1623 * t1758;
t1591 = t1598 * t1758 - t1623 * t1761;
t1590 = -t1601 * t1759 + t1602 * t1762;
t1589 = t1601 * t1762 + t1602 * t1759;
t1588 = -t1599 * t1752 + t1600 * t1754;
t1587 = t1599 * t1754 + t1600 * t1752;
t1586 = t1588 * t1755 + t1603 * t1753;
t1585 = t1588 * t1753 - t1603 * t1755;
t1584 = -t1591 * t1752 + t1592 * t1754;
t1583 = t1591 * t1754 + t1592 * t1752;
t1582 = t1584 * t1755 + t1597 * t1753;
t1581 = t1584 * t1753 - t1597 * t1755;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1731, -t1730, 0, -t1732 * t1759 + t1733 * t1762, 0, 0, 0, 0, 0, 0, t1777, -t1775, 0, -t1675 * t1759 + t1676 * t1762, 0, 0, 0, 0, 0, 0, -t1706 * t1759 + t1708 * t1762, -t1705 * t1759 + t1707 * t1762, -t1702 * t1759 + t1703 * t1762, -t1645 * t1759 + t1646 * t1762, 0, 0, 0, 0, 0, 0, -t1637 * t1759 + t1638 * t1762, -t1641 * t1759 + t1642 * t1762, -t1634 * t1759 + t1635 * t1762, -t1609 * t1759 + t1610 * t1762, 0, 0, 0, 0, 0, 0, t1594, t1596, t1590, -t1585 * t1759 + t1586 * t1762, 0, 0, 0, 0, 0, 0, t1594, t1596, t1590, -t1581 * t1759 + t1582 * t1762; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1730, t1731, 0, t1732 * t1762 + t1733 * t1759, 0, 0, 0, 0, 0, 0, t1775, t1777, 0, t1675 * t1762 + t1676 * t1759, 0, 0, 0, 0, 0, 0, t1706 * t1762 + t1708 * t1759, t1705 * t1762 + t1707 * t1759, t1702 * t1762 + t1703 * t1759, t1645 * t1762 + t1646 * t1759, 0, 0, 0, 0, 0, 0, t1637 * t1762 + t1638 * t1759, t1641 * t1762 + t1642 * t1759, t1634 * t1762 + t1635 * t1759, t1609 * t1762 + t1610 * t1759, 0, 0, 0, 0, 0, 0, t1593, t1595, t1589, t1585 * t1762 + t1586 * t1759, 0, 0, 0, 0, 0, 0, t1593, t1595, t1589, t1581 * t1762 + t1582 * t1759; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1749, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1660, 0, 0, 0, 0, 0, 0, t1648, t1658, t1652, t1614, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1587, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1763, -qJDD(1), 0, t1733, 0, 0, 0, 0, 0, 0, t1727, -t1728, 0, t1676, 0, 0, 0, 0, 0, 0, t1708, t1707, t1703, t1646, 0, 0, 0, 0, 0, 0, t1638, t1642, t1635, t1610, 0, 0, 0, 0, 0, 0, t1606, t1608, t1602, t1586, 0, 0, 0, 0, 0, 0, t1606, t1608, t1602, t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1763, 0, t1732, 0, 0, 0, 0, 0, 0, t1728, t1727, 0, t1675, 0, 0, 0, 0, 0, 0, t1706, t1705, t1702, t1645, 0, 0, 0, 0, 0, 0, t1637, t1641, t1634, t1609, 0, 0, 0, 0, 0, 0, t1605, t1607, t1601, t1585, 0, 0, 0, 0, 0, 0, t1605, t1607, t1601, t1581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1749, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1660, 0, 0, 0, 0, 0, 0, t1648, t1658, t1652, t1614, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1587, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1763, -qJDD(1), 0, t1701, 0, 0, 0, 0, 0, 0, -t1724, t1723, t1726, t1661, 0, 0, 0, 0, 0, 0, t1649, t1659, t1653, t1615, 0, 0, 0, 0, 0, 0, t1617, t1620, t1612, t1588, 0, 0, 0, 0, 0, 0, t1617, t1620, t1612, t1584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1763, 0, t1700, 0, 0, 0, 0, 0, 0, t1742, -t1780, t1729, -t1692, 0, 0, 0, 0, 0, 0, -t1697, -t1698, -t1688, -t1684, 0, 0, 0, 0, 0, 0, -t1650, -t1654, -t1632, -t1603, 0, 0, 0, 0, 0, 0, -t1650, -t1654, -t1632, -t1597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1749, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1660, 0, 0, 0, 0, 0, 0, t1648, t1658, t1652, t1614, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1587, 0, 0, 0, 0, 0, 0, t1616, t1619, t1611, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1785, t1734, t1742, t1686, 0, 0, 0, 0, 0, 0, t1669, t1682, t1671, t1627, 0, 0, 0, 0, 0, 0, t1629, t1631, t1625, t1600, 0, 0, 0, 0, 0, 0, t1629, t1631, t1625, t1592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1734, -t1786, -t1780, t1685, 0, 0, 0, 0, 0, 0, t1668, t1681, t1670, t1626, 0, 0, 0, 0, 0, 0, t1628, t1630, t1624, t1599, 0, 0, 0, 0, 0, 0, t1628, t1630, t1624, t1591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1742, t1780, -t1729, t1692, 0, 0, 0, 0, 0, 0, t1697, t1698, t1688, t1684, 0, 0, 0, 0, 0, 0, t1650, t1654, t1632, t1603, 0, 0, 0, 0, 0, 0, t1650, t1654, t1632, t1597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1694, t1696, t1687, t1657, 0, 0, 0, 0, 0, 0, t1651, t1655, t1633, t1604, 0, 0, 0, 0, 0, 0, t1651, t1655, t1633, t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1695, t1712, -t1798, t1656, 0, 0, 0, 0, 0, 0, -t1662, -t1664, -t1672, -t1639, 0, 0, 0, 0, 0, 0, -t1662, -t1664, -t1672, -t1623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1697, t1698, t1688, t1684, 0, 0, 0, 0, 0, 0, t1650, t1654, t1632, t1603, 0, 0, 0, 0, 0, 0, t1650, t1654, t1632, t1597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, t1667, t1663, t1622, 0, 0, 0, 0, 0, 0, t1679, t1667, t1663, t1618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1666, t1683, t1665, t1621, 0, 0, 0, 0, 0, 0, t1666, t1683, t1665, t1613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1662, t1664, t1672, t1639, 0, 0, 0, 0, 0, 0, t1662, t1664, t1672, t1623; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, t1667, t1663, t1618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1666, t1683, t1665, t1613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1662, t1664, t1672, t1623;];
f_new_reg  = t1;
