% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRP9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:29:30
% EndTime: 2019-03-09 03:29:51
% DurationCPUTime: 11.72s
% Computational Cost: add. (7566->557), mult. (15410->689), div. (0->0), fcn. (15907->6), ass. (0->403)
t382 = cos(pkin(9));
t592 = sin(qJ(5));
t466 = t592 * t382;
t381 = sin(pkin(9));
t593 = cos(qJ(5));
t469 = t593 * t381;
t328 = t469 + t466;
t383 = sin(qJ(3));
t293 = t328 * t383;
t384 = cos(qJ(3));
t534 = t384 * t328;
t537 = t384 * t534;
t553 = t293 * t383;
t441 = t553 / 0.2e1 + t537 / 0.2e1;
t517 = t466 / 0.2e1 + t469 / 0.2e1;
t112 = t441 + t517;
t638 = qJD(1) * t112;
t639 = -qJD(5) * t293 - t638;
t500 = qJD(4) * t534;
t637 = -qJD(2) * t112 + t500;
t115 = t441 - t517;
t385 = -pkin(1) - pkin(7);
t372 = t383 * t385;
t349 = t382 * t372;
t587 = t383 * pkin(3);
t435 = -qJ(4) * t384 + t587;
t416 = qJ(2) + t435;
t258 = t381 * t416 + t349;
t540 = t381 * t384;
t237 = -pkin(8) * t540 + t258;
t447 = -t381 * t385 + pkin(4);
t585 = pkin(8) + qJ(4);
t387 = t447 * t383 + (-t585 * t384 + qJ(2) + t587) * t382;
t88 = t592 * t237 - t593 * t387;
t636 = qJD(2) * t115 + qJD(5) * t88;
t479 = t383 * qJD(1);
t308 = t328 * t479;
t635 = qJD(5) * t112 + t308;
t634 = qJD(5) * t115 - t308;
t633 = t517 * t383;
t632 = t517 * t384;
t628 = t534 / 0.2e1;
t190 = t628 - t632;
t467 = t592 * t381;
t368 = t593 * t382;
t598 = t368 / 0.2e1;
t518 = -t467 / 0.2e1 + t598;
t348 = t384 * t467;
t297 = t368 * t384 - t348;
t536 = t384 * t297;
t347 = t383 * t467;
t296 = t368 * t383 - t347;
t547 = t296 * t383;
t626 = t547 / 0.2e1 + t536 / 0.2e1;
t616 = t518 + t626;
t623 = qJD(1) * t616;
t631 = t190 * qJD(3) + t623;
t629 = -t534 / 0.2e1;
t194 = t629 - t632;
t289 = t296 * qJD(5);
t630 = t194 * qJD(3) - t289 - t623;
t315 = t328 * qJD(5);
t600 = t328 / 0.2e1;
t392 = (t600 - t517) * t383;
t611 = t392 * qJD(1);
t625 = t315 + t611;
t533 = t384 * t385;
t321 = pkin(4) * t540 - t533;
t546 = t297 * qJ(6);
t590 = t534 * pkin(5);
t434 = -t546 + t590;
t130 = t321 + t434;
t160 = pkin(5) * t297 + qJ(6) * t534;
t369 = -pkin(4) * t382 - pkin(3);
t542 = t328 * qJ(6);
t326 = t467 - t368;
t588 = t326 * pkin(5);
t433 = -t542 + t588;
t205 = t369 + t433;
t238 = pkin(5) * t328 + qJ(6) * t326;
t344 = t585 * t382;
t448 = t585 * t381;
t253 = t593 * t344 - t592 * t448;
t81 = -t383 * pkin(5) + t88;
t473 = t88 / 0.2e1 - t81 / 0.2e1;
t624 = t130 * t238 / 0.2e1 + t160 * t205 / 0.2e1 - t253 * t473;
t615 = t518 - t626;
t89 = t593 * t237 + t592 * t387;
t622 = qJD(2) * t615 - t89 * qJD(5);
t291 = t297 * qJD(4);
t621 = qJD(2) * t616 - t291;
t462 = t326 * t479;
t620 = qJD(5) * t615 - t462;
t619 = -qJD(5) * t616 + t462;
t617 = t383 * (qJD(2) * t328 - t500);
t377 = t381 ^ 2;
t378 = t382 ^ 2;
t353 = t378 + t377;
t278 = t297 * t479;
t290 = t297 * qJD(5);
t614 = -qJD(3) * t392 - t278 - t290;
t314 = t326 * qJD(5);
t599 = -t368 / 0.2e1;
t603 = -t326 / 0.2e1;
t197 = t347 / 0.2e1 + (t603 + t599) * t383;
t486 = t197 * qJD(1);
t613 = t486 - t314;
t612 = qJD(4) * t392;
t346 = pkin(3) * t384 + qJ(4) * t383;
t331 = t382 * t346;
t539 = t382 * t383;
t211 = pkin(8) * t539 + t384 * t447 + t331;
t200 = t592 * t211;
t350 = t382 * t533;
t280 = t381 * t346 + t350;
t541 = t381 * t383;
t243 = pkin(8) * t541 + t280;
t225 = t593 * t243;
t526 = -t200 / 0.2e1 - t225 / 0.2e1;
t468 = t592 * t243;
t470 = t593 * t211;
t525 = t470 / 0.2e1 - t468 / 0.2e1;
t610 = t297 ^ 2;
t319 = t328 ^ 2;
t524 = t225 + t200;
t538 = t384 * qJ(6);
t85 = t524 + t538;
t609 = t85 / 0.2e1;
t252 = t592 * t344 + t593 * t448;
t608 = -t252 / 0.2e1;
t607 = t293 / 0.2e1;
t604 = t297 / 0.2e1;
t602 = t326 / 0.2e1;
t601 = -t328 / 0.2e1;
t597 = -t369 / 0.2e1;
t596 = t372 / 0.2e1;
t595 = t383 / 0.2e1;
t594 = -t384 / 0.2e1;
t591 = t293 * pkin(5);
t589 = t296 * pkin(5);
t586 = t384 * pkin(5);
t556 = t293 * qJ(6);
t415 = t556 / 0.2e1 + t589 / 0.2e1;
t80 = t383 * qJ(6) + t89;
t474 = t80 / 0.2e1 - t89 / 0.2e1;
t3 = -t326 * t473 + t328 * t474 + t415;
t584 = t3 * qJD(1);
t583 = t383 * t88;
t582 = t383 * t89;
t388 = t160 * t594 - t474 * t293 - t473 * t296;
t413 = t588 / 0.2e1 - t542 / 0.2e1;
t8 = t388 + t413;
t581 = t8 * qJD(1);
t580 = t80 * t328;
t579 = t81 * t326;
t475 = pkin(4) * t541;
t320 = t372 - t475;
t550 = t296 * qJ(6);
t129 = t320 + t550 - t591;
t402 = -t468 + t470;
t87 = -t402 - t586;
t9 = t129 * t130 + t80 * t85 + t81 * t87;
t578 = t9 * qJD(1);
t27 = t130 * t534 - t160 * t297 - t583;
t577 = qJD(1) * t27;
t567 = t130 * t297;
t28 = t160 * t534 + t567 - t582;
t576 = qJD(1) * t28;
t40 = t383 * t80 - t567;
t575 = qJD(1) * t40;
t47 = t321 * t534 - t583;
t574 = qJD(1) * t47;
t48 = t297 * t321 - t582;
t573 = qJD(1) * t48;
t549 = t296 * t534;
t555 = t293 * t297;
t82 = -t549 / 0.2e1 + t555 / 0.2e1;
t572 = qJD(1) * t82;
t10 = t130 * t160 - t80 * t88 + t81 * t89;
t570 = t10 * qJD(1);
t11 = t80 * t293 - t81 * t296 + t297 * t87 - t534 * t85;
t569 = t11 * qJD(1);
t12 = (-t80 + t89) * t297 + (-t81 + t88) * t534;
t568 = t12 * qJD(1);
t19 = -t129 * t297 + t130 * t296 + t383 * t85 + t384 * t80;
t566 = t19 * qJD(1);
t20 = t129 * t534 - t130 * t293 - t383 * t87 - t384 * t81;
t565 = t20 * qJD(1);
t25 = -t321 * t293 + t320 * t534 + t383 * t402 - t88 * t384;
t564 = t25 * qJD(1);
t563 = t252 * t383;
t562 = t252 * t384;
t561 = t253 * t383;
t560 = t253 * t384;
t257 = -t381 * t372 + t382 * t416;
t559 = t257 * t384;
t558 = t258 * t384;
t26 = t321 * t296 - t320 * t297 + t383 * t524 + t89 * t384;
t557 = t26 * qJD(1);
t554 = t293 * t328;
t552 = t534 * t326;
t551 = t534 * t328;
t548 = t296 * t326;
t545 = t297 * t328;
t32 = t579 + t580;
t544 = t32 * qJD(1);
t543 = t326 * t297;
t535 = t384 * t326;
t371 = t384 * t383;
t472 = t381 * t533;
t279 = t331 - t472;
t46 = -t257 * t539 - t258 * t541 + (t279 * t382 + t280 * t381) * t384;
t532 = t46 * qJD(1);
t84 = t549 + t555;
t531 = t84 * qJD(1);
t488 = t190 * qJD(2);
t530 = -t328 * qJD(4) + t488;
t244 = t253 * qJD(5);
t529 = -t488 - t244;
t478 = t383 * qJD(3);
t528 = t194 * qJD(5) + t326 * t478;
t523 = t348 / 0.2e1 + t384 * t599;
t522 = -t348 / 0.2e1 + t384 * t598;
t519 = t467 / 0.2e1 + t599;
t516 = qJD(1) * qJ(2);
t101 = t543 - t551;
t515 = qJD(1) * t101;
t127 = t257 * t382 + t258 * t381;
t108 = t127 * t384;
t514 = qJD(1) * t108;
t109 = t519 - t626;
t513 = qJD(1) * t109;
t508 = qJD(1) * t127;
t154 = -t537 + t553;
t507 = qJD(1) * t154;
t155 = t536 - t547;
t506 = qJD(1) * t155;
t505 = qJD(1) * t297;
t504 = qJD(2) * t383;
t503 = qJD(3) * t328;
t502 = qJD(3) * t369;
t501 = qJD(4) * t197;
t499 = qJD(4) * t383;
t498 = qJD(5) * t252;
t496 = qJD(5) * t534;
t495 = qJD(5) * t383;
t494 = qJD(6) * t328;
t102 = t559 + (t279 + 0.2e1 * t472) * t383;
t493 = t102 * qJD(1);
t103 = t558 + (t280 - 0.2e1 * t350) * t383;
t492 = t103 * qJD(1);
t186 = t607 + t633;
t491 = t186 * qJD(1);
t196 = -t347 / 0.2e1 + (t603 + t598) * t383;
t169 = t196 * qJD(1);
t487 = t196 * qJD(4);
t485 = t534 * qJD(6);
t380 = t384 ^ 2;
t324 = t353 * t380;
t484 = t324 * qJD(1);
t325 = t353 * t384;
t483 = t325 * qJD(1);
t482 = t326 * qJD(6);
t481 = t353 * qJD(3);
t379 = t383 ^ 2;
t364 = t379 - t380;
t480 = t364 * qJD(1);
t374 = t383 * qJD(6);
t477 = t384 * qJD(1);
t476 = t384 * qJD(3);
t465 = qJ(2) * t479;
t464 = qJ(2) * t477;
t463 = t534 * t505;
t461 = t326 * t503;
t460 = t328 * t478;
t459 = t381 * t478;
t458 = t381 * t479;
t457 = t382 * t479;
t456 = t383 * t476;
t455 = t383 * t477;
t231 = t561 / 0.2e1;
t454 = t238 * t594;
t452 = -t535 / 0.2e1;
t451 = t535 / 0.2e1;
t446 = qJD(3) * t186 + t278;
t277 = t534 * t479;
t444 = qJD(3) * t196 - t277;
t367 = qJD(5) + t479;
t443 = qJD(4) * t384 - qJD(2);
t438 = t525 + t586;
t437 = t538 - t526;
t436 = -t586 / 0.2e1 - t525;
t386 = t129 * t594 + t130 * t595 + t296 * t609 + t80 * t604 + t87 * t607 + t628 * t81;
t407 = t252 * t603 + t253 * t601;
t6 = t386 + t407;
t75 = t293 * t534 + t296 * t297 - t371;
t432 = t6 * qJD(1) + t75 * qJD(2);
t31 = t297 * t81 - t534 * t80;
t430 = qJD(1) * t31 + qJD(2) * t82;
t45 = -t383 * t533 + (t280 * t595 + t558 / 0.2e1) * t382 + (-t279 * t383 / 0.2e1 - t559 / 0.2e1) * t381;
t51 = -t385 ^ 2 * t371 + t257 * t279 + t258 * t280;
t429 = t51 * qJD(1) + t45 * qJD(2);
t411 = t130 * t600 + t205 * t604;
t389 = t160 * t603 + t238 * t629 - t411;
t15 = t231 + t389 + t438;
t62 = t205 * t328 + t238 * t326;
t428 = qJD(1) * t15 - qJD(3) * t62;
t427 = -t279 * t381 + t280 * t382;
t189 = t629 + t632;
t232 = -t561 / 0.2e1;
t23 = t232 + t411 + t436;
t426 = t23 * qJD(1) + t189 * qJD(2);
t192 = t452 + t523;
t229 = -t563 / 0.2e1;
t408 = t321 * t602 - t534 * t597;
t36 = t229 + t408 + t526;
t425 = t36 * qJD(1) + t192 * qJD(2);
t256 = t325 * t383 - t371;
t424 = t45 * qJD(1) + t256 * qJD(2);
t292 = t534 ^ 2;
t121 = t292 - t610;
t55 = -t545 + t552;
t423 = qJD(1) * t121 + qJD(3) * t55;
t318 = t326 ^ 2;
t159 = t318 - t319;
t422 = qJD(1) * t55 + qJD(3) * t159;
t100 = t545 + t552;
t170 = t292 + t610;
t421 = qJD(1) * t170 + qJD(3) * t100;
t249 = t318 + t319;
t420 = qJD(1) * t100 + qJD(3) * t249;
t419 = -qJD(1) * t160 - qJD(3) * t238;
t202 = -qJD(1) * t534 - qJD(3) * t326;
t203 = t503 + t505;
t417 = qJ(6) * t609 - t87 * pkin(5) / 0.2e1;
t414 = t590 / 0.2e1 - t546 / 0.2e1;
t410 = t257 * t381 / 0.2e1 - t258 * t382 / 0.2e1;
t409 = -t554 / 0.2e1 + t548 / 0.2e1;
t99 = -t551 / 0.2e1 - t543 / 0.2e1;
t406 = qJD(3) * t99 - t463;
t91 = t594 - t99;
t405 = qJD(1) * t91 + t461;
t404 = -qJD(1) * t99 + t461;
t395 = t297 * t597 + t321 * t601 + t231;
t35 = t395 + t525;
t403 = qJD(1) * t35 - t328 * t502;
t73 = qJD(3) * t197 - t277 - t496;
t1 = t252 * t474 + t417 - t624;
t22 = t454 + t414;
t33 = t205 * t238;
t401 = -t1 * qJD(1) + t22 * qJD(2) + t33 * qJD(3);
t391 = t253 * t628 + t297 * t608 + t81 * t601 + t80 * t602;
t393 = t596 - t591 / 0.2e1 + t550 / 0.2e1 - t475 / 0.2e1;
t17 = t391 + t393;
t74 = t252 * t328 - t253 * t326;
t90 = t595 + t409;
t400 = -qJD(1) * t17 - qJD(2) * t90 + qJD(3) * t74;
t230 = t563 / 0.2e1;
t390 = t130 * t603 + t160 * t600 + t205 * t629 + t238 * t604;
t13 = t230 + t390 + t437;
t191 = t451 + t522;
t63 = t205 * t326 - t238 * t328;
t399 = qJD(1) * t13 + qJD(2) * t191 - qJD(3) * t63;
t104 = t596 + t410;
t299 = (0.1e1 / 0.2e1 - t378 / 0.2e1 - t377 / 0.2e1) * t383;
t333 = t353 * qJ(4);
t398 = qJD(1) * t104 + qJD(2) * t299 - qJD(3) * t333;
t259 = t379 + t610;
t396 = qJD(1) * t259 + t297 * t503 + t495;
t394 = qJD(3) * t435 - t499;
t370 = t476 / 0.2e1;
t345 = t367 * qJ(6);
t322 = (t479 + qJD(5) / 0.2e1) * t384;
t300 = (0.1e1 + t353) * t595;
t224 = t297 * t494;
t199 = -t293 / 0.2e1 - t633;
t198 = t451 + t523;
t195 = t628 + t632;
t193 = t452 + t522;
t163 = t190 * qJD(5);
t133 = qJD(3) * t319 + t328 * t505;
t128 = -t314 + t169;
t116 = t519 + t626;
t105 = t596 - t410;
t98 = t100 * qJD(4);
t97 = t99 * qJD(5);
t93 = t594 + t99;
t92 = t595 - t409;
t76 = t82 * qJD(4);
t54 = t55 * qJD(5);
t44 = t45 * qJD(3);
t38 = -t395 + t525;
t37 = t230 - t408 + t526;
t24 = t231 - t411 + t436;
t21 = t454 - t414;
t18 = -t391 + t393;
t16 = t232 - t389 + t438;
t14 = t229 - t390 + t437;
t7 = t388 - t413;
t5 = t386 - t407;
t4 = t88 * t602 - t580 / 0.2e1 + t89 * t600 - t579 / 0.2e1 + t415;
t2 = t80 * t608 + t89 * t252 / 0.2e1 + t417 + t624;
t29 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t456, t364 * qJD(3), 0, 0, 0, qJ(2) * t476 + t504, -qJ(2) * t478 + qJD(2) * t384, t102 * qJD(3) - t443 * t539, -t103 * qJD(3) + t443 * t541, -qJD(2) * t325 - qJD(3) * t46 + qJD(4) * t324, qJD(2) * t127 + qJD(3) * t51 - qJD(4) * t108 (-qJD(3) * t296 - t496) * t297, qJD(3) * t84 + qJD(5) * t121, qJD(3) * t155 - t495 * t534, qJD(3) * t154 - t290 * t383, t456, t25 * qJD(3) + t48 * qJD(5) + (-qJD(2) * t326 - t291) * t383, -t26 * qJD(3) - t47 * qJD(5) - t617, -t326 * t504 + t20 * qJD(3) + t28 * qJD(5) + (-t485 - t499) * t297, qJD(2) * t101 + qJD(3) * t11 + qJD(4) * t170 + qJD(5) * t12 - t374 * t534, t19 * qJD(3) + t27 * qJD(5) + t259 * qJD(6) + t617, qJD(2) * t32 + qJD(3) * t9 + qJD(4) * t31 + qJD(5) * t10 + qJD(6) * t40; 0, 0, 0, 0, qJD(1), t516, 0, 0, 0, 0, 0, t479, t477, t457, -t458, -t483, t44 + t508, 0, 0, 0, 0, 0, t620, t634, t620, t515, -t634, t544 + (t326 * t293 + t328 * t296) * qJD(2) + t5 * qJD(3) + t76 + t7 * qJD(5) + t116 * qJD(6); 0, 0, 0, 0, 0, 0, -t455, t480, -t478, -t476, 0, -t385 * t478 + t464, -t385 * t476 - t465, -t349 * qJD(3) + t381 * t394 + t493, t382 * t394 + t385 * t459 - t492, qJD(3) * t427 - t532 (-pkin(3) * t372 + qJ(4) * t427) * qJD(3) + t105 * qJD(4) + t429, -t203 * t296 + t97, t531 + (t548 + t554) * qJD(3) + t54, qJD(5) * t197 + t328 * t476 + t506, -qJD(5) * t392 - t326 * t476 + t507, t322, t564 + (-t293 * t369 + t320 * t326 - t562) * qJD(3) - t186 * qJD(4) + t38 * qJD(5), -t557 + (-t296 * t369 + t320 * t328 - t560) * qJD(3) - t487 + t37 * qJD(5), t565 + (t129 * t326 - t205 * t293 - t562) * qJD(3) + t199 * qJD(4) + t16 * qJD(5) + t93 * qJD(6), t569 + (-t296 * t252 + t253 * t293 - t326 * t85 + t328 * t87) * qJD(3) + t98 + t4 * qJD(5) + t197 * qJD(6), t566 + (-t129 * t328 + t205 * t296 + t560) * qJD(3) + t487 + t14 * qJD(5) + t224, t578 + t5 * qJD(2) + (t129 * t205 + t252 * t87 + t253 * t85) * qJD(3) + t18 * qJD(4) + t2 * qJD(5) + t24 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(3) * t381 - t382 * t477) * t383 (-qJD(3) * t382 + t381 * t477) * t383, t484, qJD(3) * t105 - t514, 0, 0, 0, 0, 0, -t446, -t444, qJD(3) * t199 - t278, t421, t444, qJD(3) * t18 + t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, t423, t73, t614, t370, qJD(3) * t38 + t573 + t622, qJD(3) * t37 - t574 + t636, qJD(3) * t16 + t576 + t622, t4 * qJD(3) + qJD(5) * t434 - t485 + t568, qJD(3) * t14 + t374 + t577 - t636, t570 + t7 * qJD(2) + t2 * qJD(3) + (-pkin(5) * t89 - qJ(6) * t88) * qJD(5) + t80 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t93 - t463, t73, t396, qJD(2) * t116 + qJD(3) * t24 + qJD(5) * t80 + t575; 0, 0, 0, 0, -qJD(1), -t516, 0, 0, 0, 0, 0, -t479, -t477, -t457, t458, t483, t44 - t508, 0, 0, 0, 0, 0, t619, t635, t619, -t515, -t635, qJD(3) * t6 + qJD(5) * t8 - qJD(6) * t109 - t544 + t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478, -t476, -t382 * t478, t459, t325 * qJD(3) (qJ(4) * t325 - t587) * qJD(3) + t300 * qJD(4) + t424, 0, 0, 0, 0, 0, t528, qJD(5) * t198 + t460, t528, -qJD(3) * t101, qJD(5) * t193 - t460 (t205 * t383 + t252 * t534 + t253 * t297) * qJD(3) + t92 * qJD(4) + t21 * qJD(5) + t195 * qJD(6) + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t92 + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t630, qJD(3) * t198 - t639, t630, 0, qJD(3) * t193 + t639, t581 + t21 * qJD(3) + (-t556 - t589) * qJD(5) + t296 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t195 + t289 - t513; 0, 0, 0, 0, 0, 0, t455, -t480, 0, 0, 0, -t464, t465, -t493, t492, t532, -qJD(4) * t104 - t429, t296 * t505 + t97, t54 - t531, qJD(5) * t196 - t506, -qJD(5) * t186 - t507, -t322, -qJD(5) * t35 - t564 - t612, -qJD(5) * t36 - t501 + t557, -qJD(5) * t15 - qJD(6) * t91 - t565 - t612, -qJD(5) * t3 + qJD(6) * t196 - t569 + t98, -qJD(5) * t13 + t224 + t501 - t566, -qJD(2) * t6 - qJD(4) * t17 - qJD(5) * t1 - qJD(6) * t23 - t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t299 - t424, 0, 0, 0, 0, 0, -t163, -qJD(5) * t192, -t163, 0, -qJD(5) * t191, -qJD(4) * t90 + qJD(5) * t22 - qJD(6) * t189 - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353 * qJD(4), t333 * qJD(4), -t326 * t315, t159 * qJD(5), 0, 0, 0, t369 * t315, -t369 * t314, qJD(5) * t62 - t328 * t482, qJD(4) * t249, qJD(5) * t63 + qJD(6) * t319, qJD(4) * t74 + qJD(5) * t33 - t205 * t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, -t398, 0, 0, 0, 0, 0, -t611, -t486, -t611, t420, t486, t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, t422, t128, -t315 - t491, -t477 / 0.2e1, -t403 + t529, -t326 * t502 - t425 + t498, -t428 + t529, qJD(5) * t433 - t482 - t584, -t399 - t498 (-pkin(5) * t253 - qJ(6) * t252) * qJD(5) + t253 * qJD(6) + t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, t128, t133, -t205 * t503 + t244 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382 * t455, -t381 * t455, -t484, qJD(3) * t104 + t514, 0, 0, 0, 0, 0, -t614, t73, -t614, -t421, -t73, qJD(3) * t17 + qJD(5) * t160 - qJD(6) * t297 - t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t90 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t481, t398, 0, 0, 0, 0, 0, t625, t613, t625, -t420, -t613, qJD(5) * t238 - t400 - t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202, t203, 0, -t202, -t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, -t423, -t444, t446, t370, qJD(3) * t35 - t573 + t621, qJD(3) * t36 + t574 + t637, qJD(3) * t15 - t576 + t621, qJD(3) * t3 - t568, qJD(3) * t13 + t374 - t577 - t637, qJ(6) * t374 - qJD(2) * t8 + qJD(3) * t1 - qJD(4) * t160 - t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t631, qJD(3) * t192 - t638, t631, 0, qJD(3) * t191 + t638, -qJD(3) * t22 - t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, -t422, -t169, t491, t477 / 0.2e1, t403 + t530 (qJD(4) + t502) * t326 + t425, t428 + t530, t584, -qJD(4) * t326 + t399, -qJD(4) * t238 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t202, -t203, 0, t202, t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t91 + t463, -t444, -t396, -qJ(6) * t495 + qJD(2) * t109 + qJD(3) * t23 + t291 - t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t189 + t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, -t169, -t133 (qJD(3) * t205 + qJD(4)) * t328 + t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, -t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t29;
