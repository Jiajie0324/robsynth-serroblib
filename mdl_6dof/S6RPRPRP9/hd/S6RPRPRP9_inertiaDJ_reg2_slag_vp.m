% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPRP9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP9_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:29:28
% EndTime: 2019-03-09 03:29:34
% DurationCPUTime: 2.52s
% Computational Cost: add. (2393->241), mult. (5420->410), div. (0->0), fcn. (4783->6), ass. (0->134)
t166 = sin(qJ(5));
t167 = cos(qJ(5));
t90 = sin(pkin(9));
t91 = cos(pkin(9));
t64 = t166 * t90 - t167 * t91;
t137 = qJD(5) * t166;
t138 = qJD(5) * t167;
t57 = t137 * t90 - t138 * t91;
t92 = sin(qJ(3));
t177 = t57 * t92;
t93 = cos(qJ(3));
t176 = t93 * t57;
t55 = t64 * t93;
t175 = (t92 ^ 2 - t93 ^ 2) * qJD(3);
t146 = t167 * t90;
t65 = t166 * t91 + t146;
t58 = t65 * qJD(5);
t164 = t92 * t58;
t31 = qJD(3) * t55 + t164;
t83 = t92 * qJD(3);
t124 = t167 * t83;
t127 = t166 * t83;
t162 = t93 * t58;
t32 = t124 * t91 - t127 * t90 + t162;
t54 = t64 * t92;
t174 = (-t54 * t93 + t55 * t92) * qJD(3) - t31 * t92 - t93 * t32;
t173 = -0.2e1 * t57;
t172 = 0.2e1 * t58;
t171 = 2 * qJD(2);
t170 = 2 * qJD(6);
t169 = pkin(3) * t93;
t168 = t92 * pkin(3);
t165 = t90 * t93;
t94 = -pkin(1) - pkin(7);
t163 = t92 * t94;
t161 = t93 * t94;
t160 = pkin(8) + qJ(4);
t142 = -t90 * t94 + pkin(4);
t121 = -qJ(4) * t93 + t168;
t66 = qJ(2) + t121;
t61 = t91 * t66;
t41 = -t91 * t93 * pkin(8) + t142 * t92 + t61;
t75 = t91 * t163;
t50 = t66 * t90 + t75;
t45 = -pkin(8) * t165 + t50;
t11 = t166 * t41 + t167 * t45;
t86 = t90 ^ 2;
t87 = t91 ^ 2;
t159 = t86 + t87;
t157 = qJD(4) * t92;
t156 = t92 * qJD(6);
t84 = t93 * qJD(3);
t155 = qJ(2) * qJD(3);
t34 = -t90 * t124 - t91 * t127 - t176;
t53 = t65 * t93;
t154 = 0.2e1 * t53 * t34;
t153 = t64 * t172;
t152 = t90 * t163;
t151 = t91 * t161;
t150 = pkin(5) * t84;
t149 = t90 * t83;
t148 = t91 * t83;
t80 = t94 * t83;
t147 = t92 * t84;
t82 = -pkin(4) * t91 - pkin(3);
t143 = qJ(6) * t84;
t111 = t160 * t146;
t136 = t167 * qJD(4);
t139 = qJD(4) * t166;
t73 = t160 * t91;
t27 = qJD(5) * t111 - t136 * t91 + t137 * t73 + t139 * t90;
t123 = t160 * t166;
t28 = t73 * t138 + t91 * t139 + (-qJD(5) * t123 + t136) * t90;
t47 = t166 * t73 + t111;
t48 = -t123 * t90 + t167 * t73;
t141 = -t27 * t48 + t28 * t47;
t140 = t159 * t93;
t62 = pkin(4) * t165 - t161;
t135 = t159 * qJD(4);
t134 = -0.2e1 * t147;
t76 = 0.2e1 * t147;
t133 = t90 * t148;
t132 = -t93 * qJD(4) + qJD(2);
t129 = 0.2e1 * t135;
t128 = 0.2e1 * t175;
t122 = qJ(4) * t92 + t169;
t119 = t32 * t53 + t34 * t55;
t118 = t34 * t64 + t53 * t58;
t112 = t91 * t132;
t43 = t112 + (t122 * t91 - t161 * t90) * qJD(3);
t113 = t90 * t132;
t44 = t113 + (t122 * t90 + t151) * qJD(3);
t117 = -t43 * t90 + t44 * t91;
t49 = t61 - t152;
t116 = -t49 * t90 + t50 * t91;
t114 = t57 * t64 - t58 * t65;
t56 = -pkin(4) * t149 + t80;
t110 = t27 * t92 - t48 * t84;
t109 = -t28 * t92 - t47 * t84;
t108 = t34 * t92 + t53 * t84;
t107 = t65 * t83 + t176;
t106 = t64 * t84 + t164;
t105 = t160 * t92 + t169;
t33 = qJD(3) * t53 - t177;
t52 = t65 * t92;
t104 = t27 * t54 + t28 * t52 - t31 * t48 + t33 * t47;
t103 = t27 * t53 - t28 * t55 - t32 * t47 - t34 * t48;
t102 = t31 * t53 - t32 * t52 - t33 * t55 + t34 * t54;
t101 = t31 * t64 + t33 * t65 - t52 * t57 + t54 * t58;
t10 = -t166 * t45 + t167 * t41;
t95 = t112 + (t105 * t91 + t142 * t93) * qJD(3);
t96 = t113 + (t105 * t90 + t151) * qJD(3);
t3 = t137 * t45 - t138 * t41 - t166 * t95 - t167 * t96;
t100 = 0.2e1 * t27 * t64 + 0.2e1 * t28 * t65 - 0.2e1 * t47 * t57 - 0.2e1 * t48 * t58;
t99 = -t33 * t92 + t53 * t83 + (-qJD(3) * t52 - t34) * t93;
t98 = 0.2e1 * t31 * t54 + 0.2e1 * t33 * t52 - 0.2e1 * t147;
t97 = t32 * t64 - t34 * t65 + t53 * t57 + t55 * t58;
t4 = -t137 * t41 - t138 * t45 - t166 * t96 + t167 * t95;
t85 = qJ(2) * t171;
t46 = t65 * t173;
t39 = pkin(5) * t64 - qJ(6) * t65 + t82;
t38 = t65 * t84 - t177;
t37 = t64 * t83 - t162;
t24 = pkin(5) * t58 + qJ(6) * t57 - qJD(6) * t65;
t23 = pkin(5) * t53 + qJ(6) * t55 + t62;
t17 = 0.2e1 * t55 * t32;
t12 = -0.2e1 * t32 * t92 - 0.2e1 * t55 * t84;
t8 = -pkin(5) * t92 - t10;
t7 = qJ(6) * t92 + t11;
t6 = -t32 * t65 + t55 * t57;
t5 = pkin(5) * t34 + qJ(6) * t32 + qJD(6) * t55 + t56;
t2 = -t4 - t150;
t1 = t143 - t3 + t156;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, t85, t134, t128, 0, t76, 0, 0, 0.2e1 * qJD(2) * t92 + 0.2e1 * t155 * t93, 0.2e1 * qJD(2) * t93 - 0.2e1 * t155 * t92, 0, t85, t87 * t134, 0.4e1 * t93 * t133, -0.2e1 * t91 * t175, t86 * t134, t90 * t128, t76, 0.2e1 * t43 * t92 + 0.2e1 * (t49 + 0.2e1 * t152) * t84, -0.2e1 * t44 * t92 + 0.2e1 * (-t50 + 0.2e1 * t75) * t84, 0.2e1 * (-t43 * t91 - t44 * t90) * t93 + 0.2e1 * (t49 * t91 + t50 * t90) * t83, -0.2e1 * t147 * t94 ^ 2 + 0.2e1 * t43 * t49 + 0.2e1 * t44 * t50, t17, 0.2e1 * t119, t12, t154, -0.2e1 * t108, t76, 0.2e1 * t10 * t84 + 0.2e1 * t34 * t62 + 0.2e1 * t4 * t92 + 0.2e1 * t53 * t56, -0.2e1 * t11 * t84 + 0.2e1 * t3 * t92 - 0.2e1 * t32 * t62 - 0.2e1 * t55 * t56, 0.2e1 * t10 * t32 - 0.2e1 * t11 * t34 + 0.2e1 * t3 * t53 + 0.2e1 * t4 * t55, 0.2e1 * t10 * t4 - 0.2e1 * t11 * t3 + 0.2e1 * t56 * t62, t17, t12, -0.2e1 * t119, t76, 0.2e1 * t108, t154, -0.2e1 * t2 * t92 + 0.2e1 * t23 * t34 + 0.2e1 * t5 * t53 - 0.2e1 * t8 * t84, -0.2e1 * t1 * t53 - 0.2e1 * t2 * t55 - 0.2e1 * t32 * t8 - 0.2e1 * t34 * t7, 0.2e1 * t1 * t92 + 0.2e1 * t23 * t32 + 0.2e1 * t5 * t55 + 0.2e1 * t7 * t84, 0.2e1 * t1 * t7 + 0.2e1 * t2 * t8 + 0.2e1 * t23 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117 * t92 + (t116 - 0.2e1 * t163) * t84, 0, 0, 0, 0, 0, 0, t99, -t174, t102, -t10 * t33 - t11 * t31 + t3 * t54 - t4 * t52 - t56 * t93 + t62 * t83, 0, 0, 0, 0, 0, 0, t99, t102, t174, -t1 * t54 + t2 * t52 + t23 * t83 - t31 * t7 + t33 * t8 - t5 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t159) * t76, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, -t84, 0, -t80, -t94 * t84, 0, 0, -t133 (t86 - t87) * t83, t90 * t84, t133, t91 * t84, 0, -t90 * t157 + (t121 * t90 - t75) * qJD(3), -t91 * t157 + (t121 * t91 + t152) * qJD(3), t117, -pkin(3) * t80 + qJ(4) * t117 + qJD(4) * t116, t6, t97, t38, t118, -t106, 0, t34 * t82 + t56 * t64 + t58 * t62 + t109, -t32 * t82 + t56 * t65 - t57 * t62 + t110, t10 * t57 - t11 * t58 + t3 * t64 - t4 * t65 + t103, -t10 * t28 - t11 * t27 - t3 * t48 - t4 * t47 + t56 * t82, t6, t38, -t97, 0, t106, t118, t23 * t58 + t24 * t53 + t34 * t39 + t5 * t64 + t109, -t1 * t64 + t2 * t65 - t57 * t8 - t58 * t7 + t103, t23 * t57 + t24 * t55 + t32 * t39 - t5 * t65 - t110, t1 * t48 + t2 * t47 + t23 * t24 - t27 * t7 + t28 * t8 + t39 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t84, 0, 0, 0, 0, 0, 0, 0, 0, -t148, t149, qJD(3) * t140, t92 * t135 + (qJ(4) * t140 - t168) * qJD(3), 0, 0, 0, 0, 0, 0, t37, t107, t101, t82 * t83 + t104, 0, 0, 0, 0, 0, 0, t37, t101, -t107, -t24 * t93 + t39 * t83 + t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, qJ(4) * t129, t46, 0.2e1 * t114, 0, t153, 0, 0, t82 * t172, t82 * t173, t100, 0.2e1 * t141, t46, 0, -0.2e1 * t114, 0, 0, t153, 0.2e1 * t24 * t64 + 0.2e1 * t39 * t58, t100, -0.2e1 * t24 * t65 + 0.2e1 * t39 * t57, 0.2e1 * t24 * t39 + 0.2e1 * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t149, -t148, 0, t80, 0, 0, 0, 0, 0, 0, t34, -t32, 0, t56, 0, 0, 0, 0, 0, 0, t34, 0, t32, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, -t57, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, t57, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, -t34, t84, t4, t3, 0, 0, 0, -t32, 0, t84, t34, 0, t4 + 0.2e1 * t150, pkin(5) * t32 - qJ(6) * t34 - qJD(6) * t53, 0.2e1 * t143 - t3 + 0.2e1 * t156, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, t31, 0, 0, 0, 0, 0, 0, 0, 0, -t33, 0, -t31, -pkin(5) * t33 - qJ(6) * t31 - qJD(6) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, -t58, 0, -t28, t27, 0, 0, 0, -t57, 0, 0, t58, 0, -t28, pkin(5) * t57 - qJ(6) * t58 - qJD(6) * t64, -t27, -pkin(5) * t28 - qJ(6) * t27 + qJD(6) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, qJ(6) * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, -t32, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
