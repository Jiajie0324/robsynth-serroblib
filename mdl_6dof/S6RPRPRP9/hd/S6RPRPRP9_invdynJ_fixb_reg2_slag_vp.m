% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRPRP9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP9_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:29:35
% EndTime: 2019-03-09 03:29:45
% DurationCPUTime: 5.57s
% Computational Cost: add. (7019->578), mult. (14011->698), div. (0->0), fcn. (9414->10), ass. (0->278)
t207 = cos(qJ(3));
t305 = qJD(1) * qJD(3);
t281 = t207 * t305;
t205 = sin(qJ(3));
t301 = t205 * qJDD(1);
t229 = t281 + t301;
t141 = qJDD(5) + t229;
t197 = pkin(9) + qJ(5);
t188 = sin(t197);
t368 = g(3) * t205;
t208 = cos(qJ(1));
t195 = g(2) * t208;
t206 = sin(qJ(1));
t196 = g(1) * t206;
t382 = t196 - t195;
t376 = t207 * t382 - t368;
t201 = sin(pkin(9));
t365 = pkin(8) + qJ(4);
t158 = t365 * t201;
t202 = cos(pkin(9));
t159 = t365 * t202;
t204 = sin(qJ(5));
t371 = cos(qJ(5));
t95 = -t204 * t158 + t159 * t371;
t388 = -t141 * t95 + t188 * t376;
t312 = qJD(1) * t207;
t284 = t201 * t312;
t310 = qJD(3) * t202;
t137 = -t284 + t310;
t290 = t202 * t312;
t311 = qJD(3) * t201;
t138 = t290 + t311;
t79 = -t371 * t137 + t138 * t204;
t387 = t79 ^ 2;
t313 = qJD(1) * t205;
t179 = qJD(5) + t313;
t386 = t179 * t79;
t143 = t201 * t371 + t204 * t202;
t125 = t143 * qJD(1);
t127 = t143 * qJD(5);
t292 = t371 * t202;
t233 = -t204 * t201 + t292;
t308 = qJD(3) * t207;
t349 = t127 * t205 - t233 * t308 + t125;
t325 = t205 * t125 + t127;
t263 = qJD(1) * t292;
t291 = t201 * t313;
t283 = qJD(5) * t371;
t306 = qJD(5) * t204;
t380 = -t201 * t306 + t202 * t283;
t324 = -t204 * t291 + t205 * t263 + t380;
t235 = t204 * t137 + t138 * t371;
t374 = t235 ^ 2;
t299 = pkin(8) * t202 * t205;
t251 = pkin(3) * t207 + qJ(4) * t205;
t145 = t251 * qJD(1);
t209 = -pkin(1) - pkin(7);
t170 = qJD(1) * t209 + qJD(2);
t341 = t201 * t207;
t90 = t202 * t145 - t170 * t341;
t58 = (pkin(4) * t207 + t299) * qJD(1) + t90;
t339 = t202 * t207;
t91 = t201 * t145 + t170 * t339;
t70 = pkin(8) * t291 + t91;
t361 = -qJD(4) * t143 - qJD(5) * t95 + t204 * t70 - t371 * t58;
t282 = t205 * t305;
t262 = t202 * t282;
t300 = t207 * qJDD(1);
t172 = t202 * t300;
t323 = t201 * qJDD(3) + t172;
t101 = t262 - t323;
t171 = t201 * t300;
t267 = qJDD(3) * t202 - t171;
t227 = t201 * t282 + t267;
t34 = qJD(5) * t235 - t204 * t101 - t371 * t227;
t354 = t235 * t179;
t385 = t34 - t354;
t384 = t382 * t202;
t383 = t267 * t207;
t168 = qJDD(1) * t209 + qJDD(2);
t199 = t205 ^ 2;
t200 = t207 ^ 2;
t317 = t199 + t200;
t275 = t317 * t168;
t333 = t206 * t207;
t278 = -g(1) * t333 + t368;
t381 = (-t168 - t195) * t207 - t278;
t33 = t371 * t101 - t137 * t283 + t138 * t306 - t204 * t227;
t379 = t34 * pkin(5) + t33 * qJ(6) - t235 * qJD(6);
t116 = t233 * t205;
t309 = qJD(3) * t205;
t378 = -t116 * t141 + t179 * t349 + t207 * t33 + t235 * t309;
t377 = -t141 * t233 + t179 * t325 - t312 * t79;
t250 = pkin(3) * t205 - qJ(4) * t207;
t151 = qJ(2) + t250;
t135 = t202 * t151;
t280 = -t201 * t209 + pkin(4);
t77 = -pkin(8) * t339 + t205 * t280 + t135;
t334 = t205 * t209;
t100 = t201 * t151 + t202 * t334;
t89 = -pkin(8) * t341 + t100;
t359 = t204 * t77 + t371 * t89;
t118 = qJD(3) * t251 - qJD(4) * t207 + qJD(2);
t103 = t202 * t118;
t55 = t103 + (t207 * t280 + t299) * qJD(3);
t289 = t201 * t309;
t307 = qJD(3) * t209;
t287 = t207 * t307;
t86 = t201 * t118 + t202 * t287;
t67 = pkin(8) * t289 + t86;
t12 = -qJD(5) * t359 - t204 * t67 + t371 * t55;
t375 = t143 * t34 + t233 * t33 + t235 * t325 + t324 * t79;
t373 = 0.2e1 * qJ(2);
t370 = pkin(4) * t201;
t369 = pkin(5) * t141;
t367 = g(3) * t207;
t366 = t235 * t79;
t150 = t205 * t170;
t106 = -pkin(4) * t291 + t150;
t364 = t325 * pkin(5) - t324 * qJ(6) - qJD(6) * t143 - t106;
t32 = t204 * t58 + t371 * t70;
t29 = qJ(6) * t312 + t32;
t234 = -t158 * t371 - t204 * t159;
t56 = qJD(4) * t233 + qJD(5) * t234;
t363 = t56 - t29;
t362 = t56 - t32;
t360 = pkin(5) * t312 - t361;
t68 = qJD(1) * t118 + qJDD(1) * t151;
t343 = t170 * t207;
t87 = qJDD(3) * qJ(4) + t168 * t205 + (qJD(4) + t343) * qJD(3);
t37 = t201 * t68 + t202 * t87;
t130 = t151 * qJD(1);
t131 = qJD(3) * qJ(4) + t150;
t71 = t202 * t130 - t131 * t201;
t47 = pkin(4) * t313 - pkin(8) * t138 + t71;
t72 = t201 * t130 + t202 * t131;
t51 = pkin(8) * t137 + t72;
t18 = t204 * t47 + t371 * t51;
t357 = t179 * t18;
t356 = t202 * t71;
t245 = -qJDD(3) * pkin(3) + t170 * t309 + qJDD(4);
t331 = t207 * t168;
t92 = t245 - t331;
t353 = t92 * t201;
t352 = t92 * t202;
t351 = t92 * t207;
t115 = t143 * t207;
t315 = qJD(1) * t201;
t350 = -qJD(3) * t115 + t204 * t315 - t205 * t380 - t263;
t348 = pkin(1) * qJDD(1);
t211 = qJD(1) ^ 2;
t347 = qJ(2) * t211;
t346 = qJ(6) * t141;
t345 = t101 * t201;
t344 = t137 * t202;
t189 = cos(t197);
t342 = t189 * t206;
t340 = t201 * t211;
t338 = t202 * t211;
t336 = t205 * t206;
t335 = t205 * t208;
t332 = t207 * t101;
t330 = t207 * t208;
t329 = t208 * t189;
t210 = qJD(3) ^ 2;
t328 = t209 * t210;
t17 = -t204 * t51 + t371 * t47;
t326 = qJD(6) - t17;
t322 = g(1) * t330 + g(2) * t333;
t297 = 0.2e1 * qJD(1) * qJD(2);
t321 = (qJDD(1) * qJ(2) + t297) * qJ(2);
t320 = t208 * pkin(1) + t206 * qJ(2);
t318 = t199 - t200;
t316 = -t210 - t211;
t314 = qJD(1) * t202;
t304 = qJDD(1) * t201;
t303 = qJDD(1) * t202;
t302 = qJDD(3) * t205;
t298 = g(1) * t342;
t296 = -t374 + t387;
t295 = t207 * t211 * t205;
t185 = t202 * pkin(4) + pkin(3);
t192 = t208 * qJ(2);
t294 = t185 * t335 - t330 * t365 + t192;
t293 = t208 * pkin(7) + t320;
t288 = t204 * t309;
t285 = t179 * t312;
t279 = -g(2) * t335 + t367;
t36 = -t201 * t87 + t202 * t68;
t23 = pkin(4) * t229 + pkin(8) * t101 + t36;
t27 = pkin(8) * t227 + t37;
t277 = t204 * t27 - t371 * t23 + t51 * t283 + t47 * t306;
t274 = qJD(3) * pkin(3) - qJD(4);
t273 = -t168 + t347;
t272 = qJD(1) * t100 + t72;
t136 = pkin(4) * t341 - t207 * t209;
t271 = -t137 + t310;
t270 = -t138 + t311;
t269 = t317 * qJDD(1);
t268 = qJDD(2) - t348;
t266 = g(2) * t293;
t265 = t371 * t309;
t261 = t205 * t281;
t260 = g(2) * t207 * t329 + t141 * t234 + t189 * t368;
t107 = t188 * t336 - t329;
t109 = t188 * t335 + t342;
t259 = -g(1) * t109 - g(2) * t107;
t108 = t188 * t208 + t189 * t336;
t110 = -t188 * t206 + t205 * t329;
t258 = -g(1) * t110 - g(2) * t108;
t257 = g(1) * t208 + g(2) * t206;
t255 = -t374 - t387;
t254 = -t382 - t347;
t66 = -t201 * t265 - t202 * t288 + t207 * t380;
t253 = t115 * t34 + t66 * t79;
t249 = pkin(5) * t189 + qJ(6) * t188;
t247 = -t36 * t201 + t37 * t202;
t246 = -t71 * t201 + t72 * t202;
t123 = -pkin(4) * t289 + t205 * t307;
t244 = qJDD(1) * t373 + t297;
t243 = -t101 + t262;
t242 = t185 + t249;
t241 = (-t370 + t209) * t196;
t41 = -t204 * t89 + t371 * t77;
t238 = t185 * t336 + t208 * t370 - t333 * t365 + t293;
t237 = t382 * t201;
t122 = -t274 - t343;
t3 = t204 * t23 + t371 * t27 + t47 * t283 - t306 * t51;
t11 = t204 * t55 + t77 * t283 - t306 * t89 + t371 * t67;
t232 = -t233 * t34 + t325 * t79;
t231 = -g(1) * t336 - t279;
t230 = qJDD(3) * t209 + t305 * t373;
t88 = -pkin(4) * t137 + t122;
t226 = t33 + t386;
t224 = g(1) * t107 - g(2) * t109 + t188 * t367 - t277;
t117 = t233 * t207;
t64 = t127 * t207 - t201 * t288 + t202 * t265;
t223 = t115 * t33 - t117 * t34 - t235 * t66 + t64 * t79;
t114 = t143 * t205;
t222 = -t114 * t141 + t179 * t350 - t207 * t34 + t79 * t309;
t221 = t227 * t202;
t220 = t244 - t257;
t219 = -t114 * t33 - t116 * t34 - t235 * t350 + t349 * t79;
t218 = t234 * t33 - t95 * t34 - t56 * t79 + t231;
t217 = t115 * t141 + t179 * t66 + t205 * t34 + t308 * t79;
t28 = pkin(5) * t79 - qJ(6) * t235 + t88;
t216 = t235 * t28 + qJDD(6) - t224;
t215 = -g(1) * t108 + g(2) * t110 - t189 * t367 + t3;
t214 = t34 + t354;
t213 = -pkin(4) * t227 + t245;
t49 = t213 - t331;
t212 = t213 + t381;
t190 = qJDD(3) * t207;
t166 = t365 * t335;
t147 = t185 * t333;
t132 = qJDD(1) * t199 + 0.2e1 * t261;
t99 = -t201 * t334 + t135;
t93 = t141 * t205 + t179 * t308;
t85 = -t201 * t287 + t103;
t75 = -pkin(5) * t233 - qJ(6) * t143 - t185;
t50 = pkin(5) * t115 - qJ(6) * t117 + t136;
t43 = pkin(5) * t235 + qJ(6) * t79;
t39 = -t205 * pkin(5) - t41;
t38 = qJ(6) * t205 + t359;
t21 = t141 * t143 + t179 * t324 - t235 * t312;
t16 = pkin(5) * t66 + qJ(6) * t64 - qJD(6) * t117 + t123;
t15 = t179 * qJ(6) + t18;
t14 = -t179 * pkin(5) + t326;
t13 = -t33 + t386;
t10 = -pkin(5) * t308 - t12;
t9 = qJ(6) * t308 + qJD(6) * t205 + t11;
t8 = -t117 * t33 - t235 * t64;
t7 = -t143 * t33 + t235 * t324;
t6 = t117 * t141 - t179 * t64 - t205 * t33 + t235 * t308;
t5 = t49 + t379;
t2 = qJDD(6) + t277 - t369;
t1 = qJD(6) * t179 + t3 + t346;
t4 = [0, 0, 0, 0, 0, qJDD(1), t382, t257, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, qJDD(2) - t382 - 0.2e1 * t348, t220, -t268 * pkin(1) - g(1) * (-pkin(1) * t206 + t192) - g(2) * t320 + t321, qJDD(1) * t200 - 0.2e1 * t261, -0.2e1 * t205 * t300 + 0.2e1 * t305 * t318, -t205 * t210 + t190, t132, -t207 * t210 - t302, 0, t230 * t207 + (t220 - t328) * t205, -t230 * t205 + (t244 - t328) * t207 - t322, -t209 * t269 - t275 + t382, -g(1) * (t206 * t209 + t192) - t266 + t209 * t275 + t321 (-t138 * t309 - t332) * t202 (t201 * t138 - t344) * t309 + (t221 + t345) * t207 (-t101 + t172) * t205 + (t138 * t207 - t314 * t318) * qJD(3) (-t383 + (t137 - t284) * t309) * t201 (t267 - t171) * t205 + (t207 * t137 + (t318 + t199) * t315) * qJD(3), t132, t237 + (t209 * t267 + t353 + (t99 * qJD(1) + t71) * qJD(3)) * t207 + (t85 * qJD(1) + t99 * qJDD(1) + t36 - t257 * t202 + (-t137 * t209 + (t209 * t312 - t122) * t201) * qJD(3)) * t205, t384 + (-qJD(3) * t272 + t209 * t101 + t352) * t207 + (-t86 * qJD(1) - t100 * qJDD(1) - t37 + t257 * t201 + (-t122 * t202 + t138 * t209) * qJD(3)) * t205, t86 * t137 + t100 * t267 - t85 * t138 + t99 * t101 + (-t37 * t201 - t36 * t202) * t207 + (t201 * t272 + t356) * t309 + t322, t37 * t100 + t72 * t86 + t36 * t99 + t71 * t85 - g(1) * (pkin(3) * t335 - qJ(4) * t330 + t192) - t266 + (t122 * t309 - t351) * t209 + (-g(1) * t209 - g(2) * t250) * t206, t8, t223, t6, t253, -t217, t93, t115 * t49 + t12 * t179 + t123 * t79 + t136 * t34 + t141 * t41 + t17 * t308 - t205 * t277 + t66 * t88 + t258, -t11 * t179 + t117 * t49 + t123 * t235 - t136 * t33 - t141 * t359 - t18 * t308 - t205 * t3 - t64 * t88 - t259, -t11 * t79 - t115 * t3 + t117 * t277 - t12 * t235 + t17 * t64 - t18 * t66 + t33 * t41 - t34 * t359 + t322, -g(1) * t294 - g(2) * t238 + t18 * t11 + t17 * t12 + t88 * t123 + t49 * t136 - t277 * t41 + t3 * t359 - t241, t8, t6, -t223, t93, t217, t253, -t10 * t179 + t115 * t5 - t14 * t308 - t141 * t39 + t16 * t79 - t2 * t205 + t28 * t66 + t34 * t50 + t258, -t1 * t115 + t10 * t235 + t117 * t2 - t14 * t64 - t15 * t66 - t33 * t39 - t34 * t38 - t79 * t9 + t322, t1 * t205 - t117 * t5 + t141 * t38 + t15 * t308 - t16 * t235 + t179 * t9 + t28 * t64 + t33 * t50 + t259, t1 * t38 + t15 * t9 + t5 * t50 + t28 * t16 + t2 * t39 + t14 * t10 - g(1) * (pkin(5) * t110 + qJ(6) * t109 + t294) - g(2) * (pkin(5) * t108 + qJ(6) * t107 + t238) - t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t211, t254 + t268, 0, 0, 0, 0, 0, 0, t205 * t316 + t190, t207 * t316 - t302, -t269, t275 + t254, 0, 0, 0, 0, 0, 0, -t199 * t304 + t383 + (-t338 + (-t137 - t284) * qJD(3)) * t205, -t199 * t303 + t332 + (t340 + (t138 - 0.2e1 * t290) * qJD(3)) * t205 (t201 * t243 + t202 * t267) * t205 + (t201 * t308 + t314) * t138 + (t202 * t308 - t315) * t137, -t351 + t247 * t205 + (-t201 * t72 - t356) * qJD(1) + (t122 * t205 + t207 * t246) * qJD(3) - t382, 0, 0, 0, 0, 0, 0, t222, t378, t219, t114 * t277 + t116 * t3 + t17 * t350 - t18 * t349 - t207 * t49 + t309 * t88 - t382, 0, 0, 0, 0, 0, 0, t222, t219, -t378, t1 * t116 + t114 * t2 - t14 * t350 - t15 * t349 - t207 * t5 + t28 * t309 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, -t318 * t211, t300, -t295, -t301, qJDD(3) (-t273 + t195) * t207 + t278 (t273 + t196) * t205 + t279, 0, 0, t138 * t202 * t313 - t345, t267 * t201 - t101 * t202 + (t201 * t270 + t344) * t313, t199 * t338 + t201 * t301 + t270 * t312, -t137 * t291 + t221, -t199 * t340 + t202 * t301 + t271 * t312, -t295, pkin(3) * t267 - t352 + (-t384 + (-qJ(4) * t311 - t71) * qJD(1)) * t207 + (-qJ(4) * t304 + g(3) * t202 + t170 * t137 + (-t90 + (t122 + t274) * t201) * qJD(1)) * t205, pkin(3) * t101 + t353 + (t237 + (-qJ(4) * t310 + t72) * qJD(1)) * t207 + (-qJ(4) * t303 - g(3) * t201 - t138 * t170 + (t91 + (-qJD(4) + t122) * t202) * qJD(1)) * t205, -t91 * t137 + t90 * t138 + (qJ(4) * t267 + qJD(4) * t137 - t313 * t71 + t37) * t202 + (qJ(4) * t243 + qJD(4) * t138 - t313 * t72 - t36) * t201 + t231, -t122 * t150 - t71 * t90 - t72 * t91 + t246 * qJD(4) + (-t92 - t376) * pkin(3) + (-t205 * t382 + t247 - t367) * qJ(4), t7, -t375, t21, t232, -t377, -t285, -t106 * t79 - t233 * t49 - t185 * t34 + t325 * t88 + (-qJD(1) * t17 - t298) * t207 + t361 * t179 + t260, -t106 * t235 + t143 * t49 - t362 * t179 + t18 * t312 + t185 * t33 + t324 * t88 + t388, t143 * t277 - t17 * t324 - t18 * t325 + t233 * t3 - t235 * t361 + t32 * t79 + t218, t3 * t95 - t277 * t234 - t49 * t185 - t88 * t106 - g(1) * (t336 * t365 + t147) - g(2) * (-t185 * t330 - t166) - g(3) * (-t185 * t205 + t207 * t365) + t362 * t18 + t361 * t17, t7, t21, t375, -t285, t377, t232, -t233 * t5 + t34 * t75 + t364 * t79 + t325 * t28 + (qJD(1) * t14 - t298) * t207 - t360 * t179 + t260, t1 * t233 + t14 * t324 + t143 * t2 - t15 * t325 + t235 * t360 + t29 * t79 + t218, -t143 * t5 - t15 * t312 + t179 * t363 - t235 * t364 - t28 * t324 + t33 * t75 - t388, -g(1) * t147 + g(2) * t166 + t1 * t95 - t2 * t234 + t5 * t75 + t364 * t28 + t363 * t15 + t360 * t14 + (g(3) * t242 - t196 * t365) * t205 + (-g(3) * t365 + t195 * t242 - t196 * t249) * t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t270 * t313 - t267, -t271 * t313 + t323, -t137 ^ 2 - t138 ^ 2, -t137 * t72 + t138 * t71 + t245 + t381, 0, 0, 0, 0, 0, 0, t214, -t226, t255, t17 * t235 + t18 * t79 + t212, 0, 0, 0, 0, 0, 0, t214, t255, t226, -t14 * t235 + t15 * t79 + t212 + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, -t296, t13, -t366, -t385, t141, -t235 * t88 + t224 + t357, t17 * t179 + t79 * t88 - t215, 0, 0, t366, t13, t296, t141, t385, -t366, -t43 * t79 - t216 + t357 + 0.2e1 * t369, pkin(5) * t33 - qJ(6) * t34 + (t15 - t18) * t235 + (t14 - t326) * t79, 0.2e1 * t346 - t28 * t79 + t43 * t235 + (0.2e1 * qJD(6) - t17) * t179 + t215, t1 * qJ(6) - t2 * pkin(5) - t28 * t43 - t14 * t18 - g(1) * (-pkin(5) * t107 + qJ(6) * t108) - g(2) * (pkin(5) * t109 - qJ(6) * t110) - (-pkin(5) * t188 + qJ(6) * t189) * t367 + t326 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141 + t366, t13, -t179 ^ 2 - t374, -t15 * t179 + t216 - t369;];
tau_reg  = t4;
