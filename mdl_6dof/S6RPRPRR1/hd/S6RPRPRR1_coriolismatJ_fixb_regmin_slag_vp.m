% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:35:23
% EndTime: 2019-03-09 03:35:36
% DurationCPUTime: 6.12s
% Computational Cost: add. (7292->335), mult. (14084->465), div. (0->0), fcn. (16593->10), ass. (0->280)
t350 = qJD(3) + qJD(5);
t271 = sin(qJ(6));
t273 = sin(qJ(3));
t259 = sin(pkin(10)) * pkin(1) + pkin(7);
t383 = qJ(4) + t259;
t249 = t383 * t273;
t275 = cos(qJ(3));
t250 = t383 * t275;
t268 = sin(pkin(11));
t269 = cos(pkin(11));
t201 = -t268 * t249 + t269 * t250;
t251 = -t268 * t273 + t269 * t275;
t156 = t251 * pkin(8) + t201;
t444 = cos(qJ(5));
t476 = t444 * t156;
t272 = sin(qJ(5));
t252 = -t268 * t275 - t269 * t273;
t459 = -t269 * t249 - t268 * t250;
t469 = t252 * pkin(8) + t459;
t477 = t272 * t469;
t480 = t476 + t477;
t487 = t480 * t271;
t274 = cos(qJ(6));
t486 = t480 * t274;
t213 = t444 * t251 + t272 * t252;
t420 = t213 ^ 2;
t246 = t444 * t252;
t407 = t272 * t251;
t458 = -t246 + t407;
t473 = t458 ^ 2;
t474 = t473 - t420;
t482 = t474 * t274;
t485 = t482 * qJD(1);
t483 = t474 * t271;
t484 = t483 * qJD(1);
t475 = t444 * t469;
t453 = -t475 / 0.2e1;
t316 = -t476 / 0.2e1;
t464 = t458 * qJD(1);
t337 = t213 * t464;
t315 = -t246 / 0.2e1;
t457 = t315 + t407 / 0.2e1;
t481 = qJD(6) * t457 - t337;
t478 = t272 * t156;
t54 = t475 - t478;
t479 = t474 * qJD(1);
t471 = t274 * t213;
t192 = -t471 / 0.2e1;
t472 = t271 * t458;
t329 = t472 / 0.2e1;
t439 = t458 * pkin(5);
t440 = t213 * pkin(9);
t123 = t439 - t440;
t452 = -t213 / 0.2e1;
t451 = t213 / 0.2e1;
t450 = t458 / 0.2e1;
t441 = pkin(9) * t458;
t359 = t213 * qJD(5);
t470 = t213 * qJD(3) + t359;
t467 = t213 * qJD(1);
t466 = t213 * qJD(4);
t465 = t457 * qJD(1);
t463 = 0.2e1 * t458;
t324 = t452 + t451;
t99 = t324 * t271;
t81 = t99 * qJD(6);
t323 = t450 - t458 / 0.2e1;
t110 = t323 * t274;
t91 = t110 * qJD(5);
t462 = -t91 + t81;
t325 = 0.2e1 * t450;
t109 = t325 * t274;
t361 = t458 * qJD(3);
t423 = t109 * qJD(5) + t274 * t361;
t448 = -t271 / 0.2e1;
t328 = t213 * t448;
t98 = t271 * t213;
t100 = -t98 / 0.2e1 + t328;
t80 = t100 * qJD(6);
t461 = t80 - t423;
t266 = t271 ^ 2;
t267 = t274 ^ 2;
t255 = t267 - t266;
t460 = t255 * t350;
t345 = t269 * pkin(3) + pkin(4);
t443 = pkin(3) * t268;
t244 = t272 * t345 + t443 * t444;
t237 = pkin(9) + t244;
t243 = t272 * t443 - t444 * t345;
t236 = -pkin(5) + t243;
t449 = -t236 / 0.2e1;
t322 = t243 / 0.2e1 + t449;
t278 = (-t237 / 0.2e1 + t244 / 0.2e1) * t458 - t322 * t213;
t456 = -t441 / 0.2e1 + t278;
t412 = t271 * t274;
t340 = qJD(1) * t412;
t321 = t266 / 0.2e1 - t267 / 0.2e1;
t92 = t321 * t458;
t455 = t340 * t473 + t350 * t92;
t447 = t271 / 0.2e1;
t446 = -t274 / 0.2e1;
t445 = t274 / 0.2e1;
t442 = pkin(5) * t271;
t265 = t273 * pkin(3);
t437 = t100 * qJD(3) - t98 * qJD(5);
t436 = t99 * qJD(3);
t435 = qJD(3) * pkin(3);
t260 = -cos(pkin(10)) * pkin(1) - pkin(2);
t300 = -t275 * pkin(3) + t260;
t220 = -t251 * pkin(4) + t300;
t313 = -pkin(5) * t213 - t441;
t277 = t220 + t313;
t27 = -t274 * t277 + t487;
t287 = t458 * t480;
t226 = -t252 * pkin(4) + t265;
t65 = t226 + t123;
t1 = -t27 * t458 + t271 * t287 - t471 * t65;
t434 = t1 * qJD(1);
t28 = t271 * t277 + t486;
t2 = t274 * t287 - t28 * t458 + t65 * t98;
t433 = t2 * qJD(1);
t3 = (-t27 + t487) * t458 - t123 * t471;
t430 = t3 * qJD(1);
t427 = t271 * t54;
t426 = t274 * t54;
t101 = 0.2e1 * t329;
t425 = t101 * qJD(5) + t271 * t361;
t356 = t458 * qJD(5);
t424 = t101 * qJD(3) + t271 * t356;
t14 = -t213 * t27 + t472 * t54;
t422 = t14 * qJD(1);
t405 = t274 * t458;
t15 = t213 * t28 - t405 * t54;
t421 = t15 * qJD(1);
t418 = t236 * t271;
t417 = t251 * t268;
t416 = t252 * t269;
t304 = t473 + t420;
t36 = t304 * t271;
t400 = t36 * qJD(1);
t38 = t304 * t274;
t398 = t38 * qJD(1);
t50 = -t213 * t226 + t220 * t458;
t396 = t50 * qJD(1);
t51 = t220 * t213 + t226 * t458;
t395 = t51 * qJD(1);
t59 = t201 * t251 + t252 * t459;
t391 = t59 * qJD(1);
t73 = t324 * t412;
t390 = t73 * qJD(1);
t389 = t92 * qJD(1);
t388 = t472 * qJD(1);
t95 = t323 * t271;
t387 = t95 * qJD(1);
t96 = t325 * t271;
t386 = t96 * qJD(1);
t385 = t98 * qJD(1);
t384 = t98 * qJD(6);
t381 = qJD(1) * t220;
t380 = qJD(1) * t275;
t379 = qJD(3) * t274;
t378 = qJD(5) * t274;
t377 = qJD(6) * t271;
t264 = qJD(6) * t274;
t78 = t100 * qJD(1);
t376 = t471 * qJD(1);
t105 = t324 * t274;
t375 = t105 * qJD(3);
t106 = 0.2e1 * t192;
t374 = t106 * qJD(1);
t107 = 0.2e1 * t451 * t274;
t373 = t107 * qJD(1);
t372 = t109 * qJD(1);
t371 = t110 * qJD(1);
t370 = t110 * qJD(3);
t114 = t255 * t473;
t369 = t114 * qJD(1);
t158 = 0.2e1 * t315 + t407;
t367 = t158 * qJD(1);
t286 = (t417 / 0.2e1 + t416 / 0.2e1) * pkin(3);
t164 = -t265 / 0.2e1 + t286;
t366 = t164 * qJD(1);
t208 = t315 + t246 / 0.2e1;
t363 = t208 * qJD(1);
t204 = t208 * qJD(5);
t360 = t458 * qJD(4);
t215 = t251 ^ 2 + t252 ^ 2;
t355 = t215 * qJD(1);
t354 = t244 * qJD(3);
t228 = t244 * qJD(5);
t256 = -t273 ^ 2 + t275 ^ 2;
t353 = t256 * qJD(1);
t352 = t273 * qJD(3);
t351 = t275 * qJD(3);
t341 = t267 * t464;
t339 = t458 * t377;
t338 = t458 * t264;
t336 = t458 * t467;
t335 = t213 * t381;
t334 = t458 * t381;
t333 = t260 * t273 * qJD(1);
t332 = t260 * t380;
t257 = t271 * t264;
t331 = t273 * t380;
t330 = t274 * t464;
t326 = t471 / 0.2e1;
t319 = t350 * t274;
t317 = t458 * t340;
t314 = pkin(5) / 0.2e1 + t322;
t311 = -0.2e1 * t317;
t310 = 0.2e1 * t317;
t309 = t271 * t319;
t308 = t350 * t412;
t4 = (-t28 + t486) * t458 + t123 * t98;
t307 = t4 * qJD(1);
t276 = t441 / 0.2e1 + pkin(5) * t451 + t278;
t6 = t271 * t276;
t306 = t6 * qJD(1) - t110 * qJD(2);
t31 = t265 * t300;
t305 = t31 * qJD(1);
t302 = t213 * t236 - t237 * t458;
t23 = t453 + t475 / 0.2e1;
t301 = -t23 * qJD(1) - t243 * qJD(3);
t299 = t458 * (-qJD(6) + t467);
t298 = t106 * qJD(3) - qJD(5) * t471;
t296 = t158 * qJD(5) + t361;
t294 = -t440 / 0.2e1 + t439 / 0.2e1;
t293 = t237 * t452 + t449 * t458;
t290 = t109 * qJD(3) + t274 * t356;
t289 = t470 * t458;
t288 = t123 / 0.2e1 + t294;
t285 = t65 / 0.2e1 + t293;
t22 = t316 + t476 / 0.2e1;
t284 = t22 * qJD(1) + t208 * qJD(2) + t354;
t159 = t314 * t271;
t18 = t288 * t274;
t283 = t18 * qJD(1) + t159 * qJD(3) + qJD(5) * t442;
t16 = t288 * t271;
t160 = t314 * t274;
t282 = pkin(5) * t378 - t16 * qJD(1) + t160 * qJD(3);
t9 = t274 * t276;
t281 = -t9 * qJD(1) - t95 * qJD(2) - t271 * t354;
t12 = t274 * t285;
t280 = t12 * qJD(1) - t99 * qJD(2) - qJD(3) * t418;
t10 = t271 * t285;
t279 = -t10 * qJD(1) - t105 * qJD(2) - t236 * t379;
t254 = t255 * qJD(6);
t227 = t243 * qJD(5);
t225 = t271 * t228;
t203 = t208 * qJD(3);
t165 = -0.2e1 * t458 * t257;
t163 = t265 / 0.2e1 + t286;
t162 = pkin(5) * t446 + (t236 + t243) * t445;
t161 = -t442 / 0.2e1 + t418 / 0.2e1 + t243 * t447;
t125 = t311 + t460;
t124 = t310 - t460;
t113 = t350 * t457;
t108 = t326 + t192;
t102 = t329 - t472 / 0.2e1;
t89 = t106 * qJD(6);
t88 = t105 * qJD(6);
t87 = t471 * qJD(6);
t85 = t95 * qJD(5);
t75 = t95 * qJD(3);
t74 = t92 * qJD(6);
t72 = t271 * t326 + t447 * t471;
t71 = -t78 - t377;
t66 = -t158 * qJD(3) - t356;
t64 = t308 - t389;
t63 = -t309 + t389;
t33 = -t213 * t321 + t266 * t452 + t267 * t451;
t25 = 0.2e1 * t316 - t477;
t24 = t478 + 0.2e1 * t453;
t19 = t123 * t445 - t274 * t294 - t427;
t17 = t123 * t448 + t271 * t294 - t426;
t13 = -t427 / 0.2e1 + t54 * t448 + t65 * t445 - t293 * t274;
t11 = -t426 / 0.2e1 + t54 * t446 + t65 * t448 + t293 * t271;
t8 = pkin(5) * t192 + t456 * t274 + t487;
t7 = pkin(5) * t328 + t456 * t271 - t486;
t5 = [0, 0, 0, 0, t273 * t351, t256 * qJD(3), 0, 0, 0, t260 * t352, t260 * t351, t215 * qJD(4), t31 * qJD(3) + t59 * qJD(4), t289, -t350 * t474, 0, 0, 0, t50 * qJD(3) + t220 * t356, t51 * qJD(3) + t220 * t359, -t257 * t473 + t267 * t289, -0.2e1 * t271 * t405 * t470 - t114 * qJD(6), t213 * t339 + t350 * t482, t213 * t338 - t350 * t483 -(t356 + t361) * t213, t1 * qJD(3) + t36 * qJD(4) + t3 * qJD(5) + t15 * qJD(6), t2 * qJD(3) + t38 * qJD(4) + t4 * qJD(5) + t14 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t331, t353, t351, -t352, 0, -t259 * t351 + t333, t259 * t352 + t332 (-t251 * t269 + t252 * t268) * t435, t163 * qJD(4) + (-t201 * t269 + t268 * t459) * t435 + t305, t336, -t479, t470, -t296, 0, -qJD(3) * t480 + t25 * qJD(5) + t396, -t54 * qJD(3) + t24 * qJD(5) + t395, t72 * qJD(5) - t74 + (t271 * t379 + t341) * t213, t33 * qJD(5) + t165 + (qJD(3) * t255 + t311) * t213, t88 + t485 + t425, -t81 - t484 + t423, t481, t434 + (t271 * t302 - t486) * qJD(3) + t7 * qJD(5) + t13 * qJD(6), t433 + (t274 * t302 + t487) * qJD(3) + t8 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t163 * qJD(3) + t391, 0, 0, 0, 0, 0, t204, 0, 0, 0, 0, 0, 0, t400 - t462, t102 * qJD(5) + t108 * qJD(6) + t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t337, -t479, t470, t66, 0, t25 * qJD(3) + t208 * qJD(4) - qJD(5) * t480 + t334, t24 * qJD(3) - qJD(5) * t54 + t335, t72 * qJD(3) - t74 - (-t271 * t378 - t341) * t213, t33 * qJD(3) + t165 - (-qJD(5) * t255 + t310) * t213, t485 + t424, t290 - t484, t481, t430 + t7 * qJD(3) + t110 * qJD(4) + (t271 * t313 - t486) * qJD(5) + t19 * qJD(6), t8 * qJD(3) + t102 * qJD(4) + (t274 * t313 + t487) * qJD(5) + t17 * qJD(6) + t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -t309 * t463 - t369, t271 * t299 + t375, t274 * t299 - t436, t113, t13 * qJD(3) - t99 * qJD(4) + t19 * qJD(5) - t28 * qJD(6) + t421, t11 * qJD(3) + t108 * qJD(4) + t17 * qJD(5) + t27 * qJD(6) + t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, -t351, 0 (t416 + t417) * t435, 0, 0, 0, 0, 0, -t296, -t470, 0, 0, 0, 0, 0, t461, t89 + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, -t470, 0, 0, 0, 0, 0, -t290 - t384, -t87 + t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338 + t437, t298 + t339; 0, 0, 0, 0, -t331, -t353, 0, 0, 0, -t333, -t332, 0, t164 * qJD(4) - t305, -t336, t479, 0, -t204, 0, -t22 * qJD(5) - t360 - t396, t23 * qJD(5) - t395 - t466, -t73 * qJD(5) - t267 * t336 - t74, t213 * t310 + t165, t85 + t89 - t485, -t80 + t91 + t484, -t481, t6 * qJD(5) - t12 * qJD(6) - t274 * t360 - t434, qJD(4) * t472 + t9 * qJD(5) + t10 * qJD(6) - t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, 0, 0, 0, 0, 0, 0, t462, t85 + t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t227, t257, t254, 0, 0, 0, -t228 * t274 + t236 * t377, t236 * t264 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, 0, 0, 0, 0, 0, -t464, -t467, 0, 0, 0, 0, 0, -t330, t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t363, 0, -t228 - t284, t227 - t301, t257 - t390, t254, t387, t371, 0, t161 * qJD(6) - t244 * t319 + t306, t162 * qJD(6) + t225 - t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, t125, t264 + t374, t71, -t465, t161 * qJD(5) - t237 * t264 - t280, t162 * qJD(5) + t237 * t377 - t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, -t164 * qJD(3) - t391, 0, 0, 0, 0, 0, t296, t470, 0, 0, 0, 0, 0, -t400 - t461, -qJD(3) * t472 - t96 * qJD(5) + t107 * qJD(6) - t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, 0, 0, 0, 0, 0, t464, t467, 0, 0, 0, 0, 0, t330, -t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t467, 0, 0, 0, 0, 0, t372, -t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, -t264 + t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337, t479, 0, t203, 0, t22 * qJD(3) - t158 * qJD(4) - t334, -t23 * qJD(3) - t335 - t466, t73 * qJD(3) - t267 * t337 - t74, -t213 * t311 + t165, -t75 - t87 - t485, -t370 + t384 + t484, -t481, -t6 * qJD(3) - t109 * qJD(4) - t18 * qJD(6) - t430, -t9 * qJD(3) + t96 * qJD(4) + t16 * qJD(6) - t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, 0, 0, 0, 0, 0, 0, t370, -t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, 0, t284, t301, t257 + t390, t254, -t387, -t371, 0, -t159 * qJD(6) + t274 * t354 - t306, -t160 * qJD(6) + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, -t467, 0, 0, 0, 0, 0, -t372, t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t254, 0, 0, 0, -pkin(5) * t377, -pkin(5) * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, t125, t264 - t376, -t377 + t385, -t465, -pkin(9) * t264 - t283, pkin(9) * t377 - t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t308 * t463 + t369, -t271 * t337 - t298, -t274 * t337 + t437, t113, t12 * qJD(3) + t100 * qJD(4) + t18 * qJD(5) - t421, -t10 * qJD(3) - t107 * qJD(4) - t16 * qJD(5) - t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t436, -t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t124, -t374, t78, t465, t159 * qJD(5) + t280, t160 * qJD(5) + t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, -t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t124, t376, -t385, t465, t283, t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
