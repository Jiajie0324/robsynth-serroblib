% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:35:26
% EndTime: 2019-03-09 03:35:46
% DurationCPUTime: 15.09s
% Computational Cost: add. (21140->565), mult. (38625->743), div. (0->0), fcn. (45102->10), ass. (0->459)
t568 = qJD(3) + qJD(5);
t441 = cos(qJ(6));
t437 = sin(pkin(11));
t440 = sin(qJ(3));
t442 = cos(qJ(3));
t696 = cos(pkin(11));
t417 = -t437 * t440 + t442 * t696;
t418 = t437 * t442 + t440 * t696;
t439 = sin(qJ(5));
t711 = cos(qJ(5));
t525 = -t711 * t417 + t439 * t418;
t667 = t525 ^ 2;
t410 = t711 * t418;
t653 = t439 * t417;
t742 = t410 + t653;
t761 = t742 ^ 2;
t762 = t761 - t667;
t772 = t762 * t441;
t775 = qJD(1) * t772;
t438 = sin(qJ(6));
t773 = t762 * t438;
t774 = qJD(1) * t773;
t436 = t441 ^ 2;
t757 = t436 * t525;
t347 = -t757 / 0.2e1;
t435 = t438 ^ 2;
t758 = t435 * t525;
t769 = t758 / 0.2e1;
t519 = t347 + t769;
t725 = t757 / 0.2e1;
t511 = t725 + t769;
t518 = t410 / 0.2e1;
t741 = t518 + t653 / 0.2e1;
t747 = t742 * qJD(1);
t767 = t525 * t747;
t771 = qJD(6) * t741 + t767;
t770 = t762 * qJD(1);
t755 = t441 * t525;
t353 = t755 / 0.2e1;
t756 = t438 * t742;
t539 = t756 / 0.2e1;
t759 = t742 * pkin(5);
t768 = t759 / 0.2e1;
t641 = t435 + t436;
t760 = t525 * pkin(9);
t766 = t641 * t760;
t433 = qJD(6) * t441;
t425 = t438 * t433;
t323 = -0.2e1 * t742 * t425;
t656 = t438 * t441;
t557 = qJD(1) * t656;
t520 = t742 * t557;
t753 = t525 * t520;
t765 = t323 - 0.2e1 * t753;
t764 = t323 + 0.2e1 * t753;
t763 = t758 - t757;
t236 = t758 + t757;
t248 = t759 + t760;
t723 = -t525 / 0.2e1;
t722 = t742 / 0.2e1;
t709 = pkin(9) * t742;
t429 = -cos(pkin(10)) * pkin(1) - pkin(2);
t420 = -t442 * pkin(3) + t429;
t387 = -t417 * pkin(4) + t420;
t515 = pkin(5) * t525 - t709;
t449 = t387 + t515;
t428 = sin(pkin(10)) * pkin(1) + pkin(7);
t647 = qJ(4) + t428;
t505 = t647 * t696;
t479 = t440 * t505;
t526 = t647 * t442;
t360 = -t437 * t526 - t479;
t701 = t418 * pkin(8);
t448 = t360 - t701;
t447 = t439 * t448;
t527 = t437 * t647;
t398 = t440 * t527;
t362 = t696 * t526 - t398;
t703 = t417 * pkin(8);
t309 = t362 + t703;
t562 = t711 * t309;
t173 = t562 + t447;
t660 = t438 * t173;
t92 = -t441 * t449 + t660;
t165 = t441 * t173;
t93 = t438 * t449 + t165;
t754 = (t93 * t438 - t441 * t92) * t525;
t752 = t525 * t742;
t751 = qJD(4) * t525;
t749 = t525 * qJD(1);
t748 = t741 * qJD(1);
t483 = t568 * t525;
t746 = 0.2e1 * t742;
t220 = t438 * t525;
t714 = -t438 / 0.2e1;
t538 = t525 * t714;
t222 = t220 / 0.2e1 - t538;
t202 = t222 * qJD(6);
t534 = 0.2e1 * t722;
t231 = t534 * t441;
t620 = qJD(3) * t441;
t642 = t231 * qJD(5) + t620 * t742;
t745 = t202 - t642;
t724 = t525 / 0.2e1;
t533 = t724 + t723;
t221 = t533 * t438;
t203 = t221 * qJD(6);
t532 = t722 - t742 / 0.2e1;
t232 = t532 * t441;
t213 = t232 * qJD(5);
t744 = -t213 + t203;
t517 = pkin(3) * t696 + pkin(4);
t710 = pkin(3) * t437;
t407 = t439 * t710 - t711 * t517;
t400 = -pkin(5) + t407;
t743 = t400 + t407;
t359 = -t442 * t505 + t398;
t452 = t359 - t703;
t450 = t439 * t452;
t361 = -t442 * t527 - t479;
t308 = t361 - t701;
t563 = t711 * t308;
t172 = t563 + t450;
t652 = t441 * t172;
t434 = t440 * pkin(3);
t702 = t418 * pkin(4);
t393 = t434 + t702;
t184 = t393 + t248;
t659 = t438 * t184;
t108 = t652 + t659;
t688 = t108 * t441;
t651 = t441 * t184;
t661 = t438 * t172;
t107 = t651 - t661;
t691 = t107 * t438;
t476 = t688 / 0.2e1 - t691 / 0.2e1;
t721 = -t400 / 0.2e1;
t531 = t407 / 0.2e1 + t721;
t408 = t439 * t517 + t710 * t711;
t716 = t408 / 0.2e1;
t401 = pkin(9) + t408;
t719 = -t401 / 0.2e1;
t451 = (t719 + t716) * t742 + t531 * t525;
t740 = -t709 / 0.2e1 + t451;
t536 = -t755 / 0.2e1;
t713 = t438 / 0.2e1;
t193 = t438 * t536 - t713 * t755;
t715 = t435 / 0.2e1;
t214 = (t715 - t436 / 0.2e1) * t742;
t596 = t214 * qJD(6);
t739 = -t193 * qJD(5) + t596;
t738 = -t193 * qJD(3) + t596;
t194 = t533 * t656;
t737 = qJD(5) * t194 + t596;
t736 = -qJD(3) * t194 + t596;
t598 = t194 * qJD(1);
t735 = t598 - t425;
t734 = t598 + t425;
t112 = t214 * t568 + t557 * t761;
t423 = t436 - t435;
t260 = t423 * t568 - 0.2e1 * t520;
t416 = t417 ^ 2;
t731 = t418 ^ 2;
t730 = t107 / 0.2e1;
t729 = -t108 / 0.2e1;
t728 = -t165 / 0.2e1;
t289 = t711 * t448;
t654 = t439 * t309;
t171 = -t289 + t654;
t727 = t171 / 0.2e1;
t726 = t173 / 0.2e1;
t720 = t400 / 0.2e1;
t718 = t401 / 0.2e1;
t717 = -t407 / 0.2e1;
t288 = t711 * t452;
t655 = t439 * t308;
t170 = -t288 + t655;
t708 = t170 * pkin(5);
t700 = qJD(3) * pkin(3);
t689 = t108 * t438;
t690 = t107 * t441;
t9 = (t689 + t690) * t742 - t754;
t699 = t9 * qJD(1);
t698 = t92 * t438;
t697 = t93 * t441;
t55 = -t171 * t756 + t525 * t92;
t695 = qJD(1) * t55;
t648 = t441 * t742;
t56 = t171 * t648 - t525 * t93;
t694 = qJD(1) * t56;
t658 = t438 * t248;
t675 = t171 * t441;
t119 = t658 - t675;
t685 = t119 * t438;
t650 = t441 * t248;
t676 = t171 * t438;
t118 = t650 + t676;
t686 = t118 * t441;
t10 = (t685 + t686) * t742 - t754;
t692 = t10 * qJD(1);
t687 = t118 * t438;
t684 = t119 * t441;
t496 = t170 * t742 - t171 * t525;
t14 = t107 * t525 + t438 * t496 - t742 * t92;
t683 = t14 * qJD(1);
t15 = -t108 * t525 + t441 * t496 - t742 * t93;
t682 = t15 * qJD(1);
t16 = (-t92 + t660) * t742 + (t118 - t676) * t525;
t681 = t16 * qJD(1);
t680 = t170 * t171;
t679 = t170 * t438;
t678 = t170 * t441;
t677 = t171 * t742;
t674 = t173 * t525;
t530 = t436 / 0.2e1 + t715;
t514 = t525 * t530;
t670 = t742 * t400;
t453 = -t401 * t514 + t670 / 0.2e1;
t477 = -t690 / 0.2e1 - t689 / 0.2e1;
t21 = t453 + t477;
t673 = t21 * qJD(1);
t25 = -t172 * t525 - t173 * t742 + t496;
t672 = t25 * qJD(1);
t475 = -t686 / 0.2e1 - t685 / 0.2e1;
t564 = -t759 / 0.2e1 - t766 / 0.2e1;
t34 = t475 + t564;
t671 = t34 * qJD(1);
t669 = t742 * t407;
t666 = t525 * t408;
t663 = t417 * t437;
t646 = t222 * qJD(3) + t220 * qJD(5);
t645 = t221 * qJD(3);
t223 = 0.2e1 * t539;
t621 = qJD(3) * t438;
t644 = t223 * qJD(5) + t621 * t742;
t614 = qJD(5) * t438;
t643 = t223 * qJD(3) + t614 * t742;
t337 = -t758 / 0.2e1;
t121 = t347 + t337 + t511;
t640 = qJD(1) * t121;
t143 = t761 + t667;
t139 = t143 * t438;
t638 = qJD(1) * t139;
t141 = t143 * t441;
t636 = qJD(1) * t141;
t166 = t387 * t742 + t393 * t525;
t635 = qJD(1) * t166;
t167 = -t387 * t525 + t393 * t742;
t634 = qJD(1) * t167;
t177 = -t360 * t418 + t362 * t417;
t631 = qJD(1) * t177;
t319 = -t417 * t434 + t418 * t420;
t630 = qJD(1) * t319;
t320 = t417 * t420 + t418 * t434;
t629 = qJD(1) * t320;
t627 = qJD(1) * t387;
t626 = qJD(1) * t442;
t624 = qJD(3) * t232;
t623 = qJD(3) * t742;
t619 = qJD(4) * t742;
t616 = qJD(5) * t742;
t615 = qJD(5) * t387;
t613 = qJD(5) * t441;
t612 = qJD(6) * t220;
t611 = qJD(6) * t438;
t541 = t752 / 0.2e1;
t100 = -t514 * t742 + t541;
t610 = t100 * qJD(1);
t110 = (t361 / 0.2e1 - t360 / 0.2e1) * t418 + (t362 / 0.2e1 + t359 / 0.2e1) * t417;
t609 = t110 * qJD(1);
t123 = t725 + t337 + t519;
t608 = t123 * qJD(5);
t124 = 0.2e1 * t511;
t607 = t124 * qJD(1);
t142 = -t752 / 0.2e1 + t541;
t606 = t142 * qJD(1);
t605 = t143 * qJD(1);
t471 = -t669 / 0.2e1 + t666 / 0.2e1;
t430 = t434 / 0.2e1;
t523 = t430 + t702 / 0.2e1;
t153 = t471 + t523;
t603 = t153 * qJD(1);
t597 = t214 * qJD(1);
t595 = t756 * qJD(1);
t217 = t532 * t438;
t594 = t217 * qJD(1);
t218 = t534 * t438;
t593 = t218 * qJD(1);
t592 = t220 * qJD(1);
t200 = t222 * qJD(1);
t591 = t755 * qJD(1);
t227 = t533 * t441;
t590 = t227 * qJD(3);
t228 = 0.2e1 * t353;
t589 = t228 * qJD(1);
t229 = 0.2e1 * t723 * t441;
t588 = t229 * qJD(1);
t587 = t231 * qJD(1);
t586 = t232 * qJD(1);
t585 = t236 * qJD(1);
t237 = t423 * t761;
t584 = t237 * qJD(1);
t311 = 0.2e1 * t518 + t653;
t582 = t311 * qJD(1);
t529 = t696 * t418;
t457 = (t663 / 0.2e1 - t529 / 0.2e1) * pkin(3);
t318 = -t434 / 0.2e1 + t457;
t581 = t318 * qJD(1);
t322 = t416 - t731;
t580 = t322 * qJD(1);
t375 = t518 - t410 / 0.2e1;
t577 = t375 * qJD(1);
t365 = t375 * qJD(5);
t382 = t416 + t731;
t574 = t382 * qJD(1);
t395 = t408 * qJD(5);
t573 = t417 * qJD(1);
t414 = t417 * qJD(3);
t572 = t418 * qJD(1);
t415 = t418 * qJD(3);
t424 = -t440 ^ 2 + t442 ^ 2;
t571 = t424 * qJD(1);
t570 = t440 * qJD(3);
t569 = t442 * qJD(3);
t561 = t525 * t627;
t560 = t742 * t627;
t559 = t435 * t747;
t558 = t436 * t747;
t556 = t438 * t620;
t555 = t438 * t613;
t554 = t742 * t611;
t553 = t742 * t433;
t550 = t742 * t749;
t549 = t417 * t572;
t548 = t417 * t415;
t547 = t429 * t440 * qJD(1);
t546 = t429 * t626;
t545 = t440 * t569;
t544 = t441 * t747;
t535 = t727 + t172 / 0.2e1;
t528 = t525 * t641;
t321 = t641 * t407;
t524 = t568 * t441;
t522 = t761 * t425;
t516 = pkin(5) / 0.2e1 + t531;
t513 = t288 / 0.2e1 - t655 / 0.2e1;
t512 = -t289 / 0.2e1 + t654 / 0.2e1;
t510 = t438 * t524;
t509 = t568 * t656;
t473 = t170 * t724 + t677 / 0.2e1;
t478 = t697 / 0.2e1 + t698 / 0.2e1;
t5 = t476 * t742 - t478 * t525 + t473;
t7 = -t107 * t92 + t108 * t93 + t680;
t508 = t7 * qJD(1) + t5 * qJD(2);
t474 = t684 / 0.2e1 - t687 / 0.2e1;
t6 = (t727 + t474) * t742 + (t726 - t478) * t525;
t8 = -t118 * t92 + t119 * t93 + t171 * t173;
t507 = t8 * qJD(1) + t6 * qJD(2);
t103 = (0.1e1 - t641) * t752;
t502 = t6 * qJD(1) + t103 * qJD(2);
t104 = -t528 * t742 + t752;
t501 = t5 * qJD(1) + t104 * qJD(2);
t17 = (-t93 + t165) * t742 + (-t119 - t675) * t525;
t500 = t17 * qJD(1);
t23 = t172 * t722 - t674 / 0.2e1 + t473;
t36 = t172 * t173 + t387 * t393 + t680;
t499 = t36 * qJD(1) + t23 * qJD(2);
t498 = t688 - t691;
t497 = t684 - t687;
t494 = -t400 * t525 - t401 * t742;
t19 = t677 - (t697 + t698) * t525;
t493 = qJD(1) * t19 + qJD(2) * t100;
t61 = -t674 + t677;
t492 = -qJD(1) * t61 - qJD(2) * t142;
t491 = t23 * qJD(1);
t446 = t709 / 0.2e1 + pkin(5) * t723 + t451;
t26 = t728 + t678 / 0.2e1 + t446 * t438;
t490 = t26 * qJD(1) - t232 * qJD(2);
t445 = -t450 / 0.2e1 - t563 / 0.2e1;
t80 = -t445 + t512;
t489 = -qJD(1) * t80 - qJD(3) * t407;
t488 = t742 * (-qJD(6) - t749);
t120 = t359 * t360 + t361 * t362 + t420 * t434;
t487 = t120 * qJD(1) + t110 * qJD(2);
t111 = (-t359 - t362) * t418 + (-t360 + t361) * t417;
t486 = t111 * qJD(1);
t485 = qJD(3) * t236 + qJD(5) * t124;
t484 = qJD(3) * t228 + qJD(5) * t755;
t482 = qJD(5) * t311 + t623;
t480 = t760 / 0.2e1 + t768;
t472 = t171 * t716 + t173 * t720;
t470 = t525 * t718 + t721 * t742;
t467 = qJD(3) * t231 + t613 * t742;
t466 = (t616 + t623) * t525;
t465 = t483 * t742;
t464 = t248 / 0.2e1 + t480;
t169 = -t321 * t401 + t400 * t408;
t3 = t708 / 0.2e1 + (pkin(9) * t729 + t119 * t718 + t717 * t93) * t441 + (pkin(9) * t730 + t118 * t719 + t717 * t92) * t438 + t472;
t444 = (-t407 * t530 + t720) * t742 + (-t401 * t530 + t716) * t525;
t42 = t530 * t760 + t444 + t768;
t463 = t3 * qJD(1) + t42 * qJD(2) + t169 * qJD(3);
t462 = t184 / 0.2e1 + t470;
t13 = (t119 / 0.2e1 + t729) * t441 + (-t118 / 0.2e1 + t730) * t438;
t461 = -qJD(1) * t13 + qJD(2) * t123 + qJD(3) * t321;
t443 = t447 / 0.2e1 + t562 / 0.2e1;
t79 = t443 + t513;
t460 = qJD(1) * t79 + qJD(2) * t375 + qJD(3) * t408;
t312 = t516 * t438;
t59 = t464 * t441;
t459 = pkin(5) * t614 + qJD(1) * t59 + qJD(3) * t312;
t313 = t516 * t441;
t57 = t464 * t438;
t458 = pkin(5) * t613 - qJD(1) * t57 + qJD(3) * t313;
t29 = (t726 - t170 / 0.2e1) * t438 + t446 * t441;
t456 = -qJD(1) * t29 - qJD(2) * t217 - t408 * t621;
t51 = t438 * t535 - t441 * t462;
t455 = -qJD(1) * t51 - qJD(2) * t221 - t400 * t621;
t49 = t438 * t462 + t441 * t535;
t454 = -qJD(1) * t49 - qJD(2) * t227 - t400 * t620;
t426 = t440 * t626;
t422 = t423 * qJD(6);
t394 = t407 * qJD(5);
t392 = t438 * t395;
t364 = t375 * qJD(3);
t317 = t430 + t457;
t316 = t321 * qJD(5);
t315 = (-pkin(5) / 0.2e1 + t743 / 0.2e1) * t441;
t314 = pkin(5) * t714 + t713 * t743;
t235 = t568 * t741;
t230 = t536 + t353;
t224 = t539 - t756 / 0.2e1;
t211 = t228 * qJD(6);
t210 = t227 * qJD(6);
t209 = t755 * qJD(6);
t207 = t217 * qJD(5);
t197 = t217 * qJD(3);
t190 = -t200 - t611;
t185 = -qJD(3) * t311 - t616;
t183 = t509 - t597;
t182 = -t510 + t597;
t154 = -t471 + t523;
t122 = 0.2e1 * t519;
t82 = -t443 + t513;
t81 = t445 + t512;
t64 = qJD(3) * t110;
t60 = t676 + t650 / 0.2e1 - t480 * t441;
t58 = t675 - t658 / 0.2e1 + t480 * t438;
t52 = t676 / 0.2e1 - t661 / 0.2e1 + t651 / 0.2e1 - t470 * t441;
t50 = t675 / 0.2e1 - t652 / 0.2e1 - t659 / 0.2e1 + t470 * t438;
t41 = t444 + t564;
t35 = -t475 + t564;
t28 = t660 / 0.2e1 + pkin(5) * t353 + t679 / 0.2e1 + t740 * t441;
t27 = t728 - pkin(5) * t538 - t678 / 0.2e1 + t740 * t438;
t20 = t453 - t477;
t12 = t474 + t476;
t4 = qJD(3) * t23 + qJD(4) * t142;
t2 = -t708 / 0.2e1 - t478 * t407 + t474 * t401 + t472 + t476 * pkin(9);
t1 = qJD(3) * t5 + qJD(4) * t100 + qJD(5) * t6;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, t424 * qJD(3), 0, -t545, 0, 0, t429 * t570, t429 * t569, 0, 0, t548, t322 * qJD(3), 0, -t548, 0, 0, t319 * qJD(3), t320 * qJD(3), qJD(3) * t111 + qJD(4) * t382, qJD(3) * t120 + qJD(4) * t177, -t465, -t568 * t762, 0, t466, 0, 0, qJD(3) * t166 + t615 * t742, qJD(3) * t167 - t525 * t615, qJD(3) * t25 + qJD(4) * t143, qJD(3) * t36 + qJD(4) * t61, -t436 * t465 - t522, 0.2e1 * t438 * t483 * t648 - t237 * qJD(6), -t525 * t554 + t568 * t772, -t435 * t465 + t522, -t525 * t553 - t568 * t773, t466, qJD(3) * t14 + qJD(4) * t139 + qJD(5) * t16 + qJD(6) * t56, qJD(3) * t15 + qJD(4) * t141 + qJD(5) * t17 + qJD(6) * t55, -qJD(3) * t9 - qJD(5) * t10, qJD(3) * t7 + qJD(4) * t19 + qJD(5) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, t571, t569, -t426, -t570, 0, -t428 * t569 + t547, t428 * t570 + t546, 0, 0, t549, t580, t414, -t549, -t415, 0, qJD(3) * t359 + t630, -qJD(3) * t361 + t629 (-t417 * t696 - t418 * t437) * t700 + t486 (t359 * t696 + t361 * t437) * t700 + t317 * qJD(4) + t487, -t550, -t770, -t483, t767, -t482, 0, -qJD(3) * t170 + qJD(5) * t82 + t635, -qJD(3) * t172 + qJD(5) * t81 + t634, t672 + (-t407 * t525 - t408 * t742) * qJD(3) (t170 * t407 + t172 * t408) * qJD(3) + t154 * qJD(4) + t499 -(t556 + t558) * t525 - t739, qJD(3) * t763 + t122 * qJD(5) + t764, t210 + t775 + t644 -(-t556 + t559) * t525 + t739, -t203 - t774 + t642, t771, t683 + (t438 * t494 - t678) * qJD(3) + t27 * qJD(5) + t52 * qJD(6), t682 + (t441 * t494 + t679) * qJD(3) + t28 * qJD(5) + t50 * qJD(6), qJD(3) * t498 + t12 * qJD(5) - t699 (t170 * t400 + t401 * t498) * qJD(3) + t20 * qJD(4) + t2 * qJD(5) + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t574, qJD(3) * t317 + t631, 0, 0, 0, 0, 0, 0, t365, 0, t605, qJD(3) * t154 - t492, 0, 0, 0, 0, 0, 0, t638 - t744, qJD(5) * t224 + qJD(6) * t230 + t636, t608, qJD(3) * t20 + qJD(5) * t35 + t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t767, -t770, -t483, t767, t185, 0, qJD(3) * t82 + qJD(4) * t375 - qJD(5) * t173 + t560, qJD(3) * t81 + qJD(5) * t171 - t561, 0, 0 (-t555 - t558) * t525 - t738, t122 * qJD(3) + qJD(5) * t763 + t764, t775 + t643 (t555 - t559) * t525 + t738, t467 - t774, t771, t681 + t27 * qJD(3) + t232 * qJD(4) + (t438 * t515 - t165) * qJD(5) + t60 * qJD(6), t28 * qJD(3) + t224 * qJD(4) + (t441 * t515 + t660) * qJD(5) + t58 * qJD(6) + t500, t12 * qJD(3) + t123 * qJD(4) + qJD(5) * t497 - t692, t2 * qJD(3) + t35 * qJD(4) + (-t173 * pkin(5) + pkin(9) * t497) * qJD(5) + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, -t510 * t746 - t584, t438 * t488 + t590, t112, t441 * t488 - t645, t235, qJD(3) * t52 - qJD(4) * t221 + qJD(5) * t60 - qJD(6) * t93 + t694, qJD(3) * t50 + qJD(4) * t230 + qJD(5) * t58 + qJD(6) * t92 + t695, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t104 + qJD(5) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570, -t569, 0, 0, 0, 0, 0, 0, 0, 0, -t415, -t414, 0, t609 + (-t529 + t663) * t700, 0, 0, 0, 0, 0, 0, -t482, t483, 0 (-t666 + t669) * qJD(3) + t491, 0, 0, 0, 0, 0, 0, t745, t211 + t644, -t485 (-t401 * t528 + t670) * qJD(3) + t41 * qJD(5) + t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t606, 0, 0, 0, 0, 0, 0, 0, 0, 0, t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t483, 0, 0, 0, 0, 0, 0, 0, 0, -t467 + t612, t209 + t643, -t124 * qJD(3) - qJD(5) * t236, t41 * qJD(3) + (-t759 - t766) * qJD(5) + t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t553 + t646, t484 + t554, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, -t571, 0, t426, 0, 0, -t547, -t546, 0, 0, -t549, -t580, 0, t549, 0, 0, -qJD(4) * t418 - t630, -qJD(4) * t417 - t629, -t486, qJD(4) * t318 - t487, t550, t770, 0, -t767, -t365, 0, -qJD(5) * t79 - t619 - t635, qJD(5) * t80 - t634 + t751, -t672, -qJD(4) * t153 - t499, t436 * t550 - t737, qJD(5) * t121 + t765, t207 + t211 - t775, t435 * t550 + t737, -t202 + t213 + t774, -t771, qJD(5) * t26 + qJD(6) * t51 - t441 * t619 - t683, qJD(4) * t756 + qJD(5) * t29 + qJD(6) * t49 - t682, -qJD(4) * t236 + qJD(5) * t13 + t699, qJD(4) * t21 + qJD(5) * t3 - t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t609, 0, 0, 0, 0, 0, 0, -t365, 0, 0, -t491, 0, 0, 0, 0, 0, 0, t744, t207 + t210, -t608, qJD(5) * t42 - t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395, t394, 0, 0, t425, t422, 0, -t425, 0, 0, -t395 * t441 + t400 * t611, t400 * t433 + t392, -t316, t169 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t572, -t573, 0, t581, 0, 0, 0, 0, 0, 0, -t747, t749, 0, -t603, 0, 0, 0, 0, 0, 0, -t544, t595, -t585, t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t577, 0, -t395 - t460, t394 - t489, 0, 0, -t735, t422 + t640, t594, t735, t586, 0, t314 * qJD(6) - t408 * t524 + t490, qJD(6) * t315 + t392 - t456, -t316 - t461 (-t408 * pkin(5) - pkin(9) * t321) * qJD(5) + t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t260, t433 + t589, t182, t190, -t748, qJD(5) * t314 - t401 * t433 - t455, qJD(5) * t315 + t401 * t611 - t454, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t414, -t574, -qJD(3) * t318 - t631, 0, 0, 0, 0, 0, 0, t482, -t483, -t605, qJD(3) * t153 + t492, 0, 0, 0, 0, 0, 0, -t638 - t745, -qJD(3) * t756 - qJD(5) * t218 + qJD(6) * t229 - t636, t485, -qJD(3) * t21 - qJD(5) * t34 - t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t606, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, t573, 0, -t581, 0, 0, 0, 0, 0, 0, t747, -t749, 0, t603, 0, 0, 0, 0, 0, 0, t544, -t595, t585, -t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, -t749, 0, 0, 0, 0, 0, 0, 0, 0, t587, -t593, t607, -t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, -t433 + t588, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, t770, 0, -t767, t364, 0, qJD(3) * t79 - qJD(4) * t311 - t560, -qJD(3) * t80 + t561 + t751, 0, 0, t436 * t767 - t736, -qJD(3) * t121 + t765, -t197 + t209 - t775, t435 * t767 + t736, -t612 - t624 + t774, -t771, -qJD(3) * t26 - qJD(4) * t231 - qJD(6) * t59 - t681, -qJD(3) * t29 + qJD(4) * t218 + qJD(6) * t57 - t500, -qJD(3) * t13 - qJD(4) * t124 + t692, -qJD(3) * t3 + qJD(4) * t34 - t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, 0, 0, 0, 0, 0, 0, 0, 0, 0, t624, -t197, t123 * qJD(3), -qJD(3) * t42 - t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t577, 0, t460, t489, 0, 0, t734, t422 - t640, -t594, -t734, -t586, 0, -qJD(6) * t312 + t408 * t620 - t490, -qJD(6) * t313 + t456, t461, -t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, t749, 0, 0, 0, 0, 0, 0, 0, 0, -t587, t593, -t607, t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t422, 0, -t425, 0, 0, -pkin(5) * t611, -pkin(5) * t433, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t260, t433 + t591, t182, -t592 - t611, -t748, -pkin(9) * t433 - t459, pkin(9) * t611 - t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t509 * t746 + t584, t438 * t767 - t484, -t112, t441 * t767 + t646, t235, -qJD(3) * t51 + qJD(4) * t222 + qJD(5) * t59 - t694, -qJD(3) * t49 - qJD(4) * t229 - qJD(5) * t57 - t695, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t645, -t590, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, -t260, -t589, t183, t200, t748, qJD(5) * t312 + t455, qJD(5) * t313 + t454, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, -t588, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, -t260, -t591, t183, t592, t748, t459, t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
