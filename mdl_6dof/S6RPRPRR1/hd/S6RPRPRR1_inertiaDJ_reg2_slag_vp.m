% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPRR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR1_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:35:20
% EndTime: 2019-03-09 03:35:26
% DurationCPUTime: 2.11s
% Computational Cost: add. (4895->192), mult. (9908->334), div. (0->0), fcn. (9990->10), ass. (0->124)
t87 = sin(qJ(6));
t85 = t87 ^ 2;
t89 = cos(qJ(6));
t86 = t89 ^ 2;
t163 = (t85 - t86) * qJD(6);
t138 = sin(pkin(11));
t118 = qJD(3) * t138;
t139 = cos(pkin(11));
t119 = qJD(3) * t139;
t88 = sin(qJ(3));
t90 = cos(qJ(3));
t106 = -t88 * t118 + t90 * t119;
t154 = sin(qJ(5));
t121 = qJD(5) * t154;
t143 = t90 * t118 + t88 * t119;
t155 = cos(qJ(5));
t71 = t138 * t90 + t139 * t88;
t100 = t138 * t88 - t139 * t90;
t97 = t155 * t100;
t32 = qJD(5) * t97 - t155 * t106 + t71 * t121 + t154 * t143;
t46 = t154 * t71 + t97;
t25 = t46 * t32;
t47 = -t154 * t100 + t155 * t71;
t33 = t47 * qJD(5) + t154 * t106 + t155 * t143;
t164 = -t47 * t33 + t25;
t113 = t139 * pkin(3) + pkin(4);
t123 = t138 * pkin(3);
t66 = t155 * t113 - t154 * t123;
t82 = sin(pkin(10)) * pkin(1) + pkin(7);
t140 = qJ(4) + t82;
t69 = t140 * t88;
t70 = t140 * t90;
t43 = -t138 * t70 - t139 * t69;
t105 = -t71 * pkin(8) + t43;
t44 = -t138 * t69 + t139 * t70;
t40 = -t100 * pkin(8) + t44;
t24 = t154 * t105 + t155 * t40;
t83 = -cos(pkin(10)) * pkin(1) - pkin(2);
t74 = -t90 * pkin(3) + t83;
t50 = t100 * pkin(4) + t74;
t94 = -t46 * pkin(5) + t47 * pkin(9) - t50;
t93 = t89 * t94;
t7 = -t87 * t24 - t93;
t8 = t89 * t24 - t87 * t94;
t114 = t7 * t87 - t8 * t89;
t136 = qJD(6) * t87;
t120 = qJD(3) * t140;
t101 = t90 * qJD(4) - t88 * t120;
t102 = -t88 * qJD(4) - t90 * t120;
t39 = t139 * t101 + t138 * t102;
t35 = -t143 * pkin(8) + t39;
t38 = -t138 * t101 + t139 * t102;
t92 = t106 * pkin(8) - t38;
t98 = t155 * t105;
t91 = -qJD(5) * t98 + t40 * t121 + t154 * t92 - t155 * t35;
t158 = t33 * pkin(5);
t159 = t32 * pkin(9);
t135 = t88 * qJD(3);
t128 = pkin(3) * t135;
t51 = t143 * pkin(4) + t128;
t95 = t158 + t51 + t159;
t2 = qJD(6) * t93 + t24 * t136 - t87 * t95 + t89 * t91;
t3 = -t8 * qJD(6) + t87 * t91 + t89 * t95;
t162 = qJD(6) * t114 + t2 * t87 - t3 * t89;
t161 = 0.2e1 * qJD(3);
t23 = t154 * t40 - t98;
t6 = t24 * qJD(5) + t154 * t35 + t155 * t92;
t160 = t23 * t6;
t157 = t6 * t47;
t84 = qJD(6) * t89;
t156 = t23 * t84 + t6 * t87;
t67 = t154 * t113 + t155 * t123;
t56 = t67 * qJD(5);
t153 = t23 * t56;
t152 = t32 * t89;
t151 = t46 * t33;
t150 = t46 * t56;
t149 = t47 * t32;
t148 = t47 * t87;
t29 = t85 * t32;
t30 = t86 * t32;
t147 = t89 * t33;
t146 = t47 * t147 - t89 * t25;
t63 = -pkin(5) - t66;
t144 = t56 * t87 + t63 * t84;
t142 = -t85 - t86;
t134 = t90 * qJD(3);
t133 = 0.2e1 * t151;
t132 = t87 * t152;
t131 = t83 * t161;
t130 = pkin(5) * t136;
t129 = pkin(5) * t84;
t127 = t47 * t136;
t126 = t87 * t84;
t125 = t88 * t134;
t55 = t66 * qJD(5);
t41 = t142 * t55;
t64 = pkin(9) + t67;
t124 = t142 * t64;
t122 = t63 * t136 - t56 * t89;
t45 = t47 ^ 2;
t117 = t45 * t126;
t115 = t7 * t89 + t8 * t87;
t112 = t23 * t33 + t6 * t46;
t110 = -t46 * t55 + t47 * t56;
t109 = t46 * t64 - t47 * t63;
t107 = -t32 * t87 + t47 * t84;
t14 = t127 + t152;
t15 = t33 * t87 + t46 * t84;
t13 = t46 * t136 - t147;
t103 = t71 * t106;
t99 = -t32 * t63 - t33 * t64 + t110;
t96 = t100 * t143;
t1 = -t115 * qJD(6) - t2 * t89 - t3 * t87;
t77 = -0.2e1 * t126;
t76 = 0.2e1 * t126;
t72 = -0.2e1 * t163;
t20 = t47 * t30;
t19 = t47 * t29;
t17 = t23 * t136;
t12 = t29 + t30;
t11 = t47 * t163 + t132;
t9 = -0.4e1 * t47 * t126 + t29 - t30;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t125 (-t88 ^ 2 + t90 ^ 2) * t161, 0, -0.2e1 * t125, 0, 0, t88 * t131, t90 * t131, 0, 0, 0.2e1 * t103, -0.2e1 * t106 * t100 - 0.2e1 * t71 * t143, 0, 0.2e1 * t96, 0, 0, 0.2e1 * t100 * t128 + 0.2e1 * t74 * t143, 0.2e1 * t74 * t106 + 0.2e1 * t71 * t128, -0.2e1 * t39 * t100 - 0.2e1 * t43 * t106 - 0.2e1 * t44 * t143 - 0.2e1 * t38 * t71, 0.2e1 * t74 * t128 + 0.2e1 * t38 * t43 + 0.2e1 * t39 * t44, -0.2e1 * t149, 0.2e1 * t164, 0, t133, 0, 0, 0.2e1 * t33 * t50 + 0.2e1 * t46 * t51, -0.2e1 * t32 * t50 + 0.2e1 * t47 * t51, -0.2e1 * t23 * t32 - 0.2e1 * t24 * t33 + 0.2e1 * t91 * t46 + 0.2e1 * t157, -0.2e1 * t24 * t91 + 0.2e1 * t50 * t51 + 0.2e1 * t160, -0.2e1 * t20 - 0.2e1 * t117, 0.4e1 * t47 * t132 + 0.2e1 * t45 * t163, -0.2e1 * t46 * t127 + 0.2e1 * t146, -0.2e1 * t19 + 0.2e1 * t117, -0.2e1 * t107 * t46 - 0.2e1 * t33 * t148, t133, 0.2e1 * t107 * t23 + 0.2e1 * t6 * t148 + 0.2e1 * t3 * t46 + 0.2e1 * t7 * t33, -0.2e1 * t14 * t23 + 0.2e1 * t89 * t157 + 0.2e1 * t2 * t46 - 0.2e1 * t8 * t33, 0.2e1 * t115 * t32 + 0.2e1 * t162 * t47, -0.2e1 * t2 * t8 + 0.2e1 * t3 * t7 + 0.2e1 * t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38 * t100 + t44 * t106 - t43 * t143 + t39 * t71, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24 * t32 - t91 * t47 + t112, 0, 0, 0, 0, 0, 0, 0, t164 * t89 + t146, 0, t1 * t47 + t114 * t32 + t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t103 + 0.2e1 * t96, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t149 + 0.2e1 * t151, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t19 - 0.2e1 * t20 + 0.2e1 * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, 0, -t135, 0, -t82 * t134, t82 * t135, 0, 0, 0, 0, t106, 0, -t143, 0, t38, -t39 (-t139 * t106 - t138 * t143) * pkin(3) (t138 * t39 + t139 * t38) * pkin(3), 0, 0, -t32, 0, -t33, 0, -t6, t91, t32 * t66 - t33 * t67 + t110, t24 * t55 - t6 * t66 - t91 * t67 + t153, -t11, t9, t15, t11, -t13, 0, t17 + (-t109 * qJD(6) - t6) * t89 + t99 * t87, t109 * t136 + t89 * t99 + t156, t1, t1 * t64 - t114 * t55 + t6 * t63 + t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, -t134, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t106, 0 (t106 * t138 - t139 * t143) * pkin(3), 0, 0, 0, 0, 0, 0, -t33, t32, 0, -t32 * t67 - t33 * t66 + t47 * t55 + t150, 0, 0, 0, 0, 0, 0, t13, t15, -t12, t124 * t32 + t33 * t63 - t41 * t47 + t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t56, -0.2e1 * t55, 0, 0.2e1 * t55 * t67 - 0.2e1 * t56 * t66, t76, t72, 0, t77, 0, 0, 0.2e1 * t122, 0.2e1 * t144, -0.2e1 * t41, -0.2e1 * t124 * t55 + 0.2e1 * t63 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t106, 0, t128, 0, 0, 0, 0, 0, 0, t33, -t32, 0, t51, 0, 0, 0, 0, 0, 0, -t13, -t15, t12, -t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, -t33, 0, -t6, t91, 0, 0, -t11, t9, t15, t11, -t13, 0, t17 + (pkin(5) * t32 - pkin(9) * t33) * t87 + (-t6 + (-pkin(5) * t47 - pkin(9) * t46) * qJD(6)) * t89, pkin(5) * t14 + pkin(9) * t13 + t156, t1, -t6 * pkin(5) + pkin(9) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, t32, 0, 0, 0, 0, 0, 0, 0, 0, t13, t15, -t12, t142 * t159 - t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t55, 0, 0, t76, t72, 0, t77, 0, 0, t122 - t130, -t129 + t144, -t41, -t56 * pkin(5) - pkin(9) * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, t72, 0, t77, 0, 0, -0.2e1 * t130, -0.2e1 * t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, -t107, t33, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t136, 0, -t55 * t87 - t64 * t84, t136 * t64 - t55 * t89, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t136, 0, -pkin(9) * t84, pkin(9) * t136, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
