% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:35
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:35:20
% EndTime: 2019-03-09 03:35:33
% DurationCPUTime: 4.96s
% Computational Cost: add. (10538->396), mult. (25142->517), div. (0->0), fcn. (18510->10), ass. (0->232)
t176 = cos(qJ(6));
t173 = sin(qJ(6));
t235 = qJD(6) * t176;
t175 = sin(qJ(3));
t177 = cos(qJ(3));
t254 = sin(pkin(11));
t255 = cos(pkin(11));
t194 = -t175 * t255 - t177 * t254;
t288 = t194 * qJD(1);
t130 = qJD(3) * t288;
t222 = t254 * t175;
t209 = qJD(1) * t222;
t156 = qJD(3) * t209;
t223 = t255 * t177;
t210 = qJD(1) * t223;
t131 = qJD(3) * t210 - t156;
t146 = -t209 + t210;
t174 = sin(qJ(5));
t280 = cos(qJ(5));
t226 = qJD(5) * t280;
t237 = qJD(5) * t174;
t198 = t174 * t130 + t280 * t131 + t146 * t226 + t237 * t288;
t199 = -t174 * t146 + t280 * t288;
t233 = qJD(3) + qJD(5);
t81 = t173 * t233 - t176 * t199;
t252 = qJD(6) * t81;
t37 = t173 * t198 + t252;
t215 = t176 * t233;
t79 = -t173 * t199 - t215;
t267 = -t173 * t37 - t79 * t235;
t87 = t280 * t146 + t174 * t288;
t302 = qJD(6) - t87;
t312 = t173 * t302;
t291 = t81 * t312;
t304 = t176 * t87;
t236 = qJD(6) * t173;
t36 = -qJD(6) * t215 - t176 * t198 - t199 * t236;
t315 = -t176 * t36 + t304 * t79 + t267 - t291;
t35 = t37 * t176;
t314 = t312 * t79 - t35;
t163 = pkin(3) * t255 + pkin(4);
t227 = t254 * pkin(3);
t142 = t174 * t163 + t280 * t227;
t278 = t146 * pkin(8);
t162 = sin(pkin(10)) * pkin(1) + pkin(7);
t153 = t162 * qJD(1);
t216 = qJ(4) * qJD(1) + t153;
t241 = qJD(2) * t175;
t112 = t177 * t216 + t241;
t106 = t255 * t112;
t168 = t177 * qJD(2);
t111 = -t175 * t216 + t168;
t70 = -t111 * t254 - t106;
t187 = t70 - t278;
t277 = t288 * pkin(8);
t104 = t254 * t112;
t71 = t255 * t111 - t104;
t65 = t71 + t277;
t257 = t142 * qJD(5) - t174 * t65 + t280 * t187;
t107 = qJD(3) * pkin(3) + t111;
t68 = t255 * t107 - t104;
t57 = qJD(3) * pkin(4) + t277 + t68;
t69 = t254 * t107 + t106;
t60 = t69 + t278;
t29 = t174 * t57 + t280 * t60;
t313 = -t29 - t257;
t27 = pkin(9) * t233 + t29;
t164 = -cos(pkin(10)) * pkin(1) - pkin(2);
t152 = -t177 * pkin(3) + t164;
t243 = qJD(1) * t152;
t144 = qJD(4) + t243;
t96 = -pkin(4) * t146 + t144;
t41 = -pkin(5) * t87 + pkin(9) * t199 + t96;
t202 = t173 * t27 - t176 * t41;
t311 = t302 * t202;
t293 = t233 * t87;
t310 = t198 - t293;
t269 = t87 ^ 2;
t270 = t199 ^ 2;
t309 = -t269 + t270;
t10 = t173 * t41 + t176 * t27;
t165 = qJD(3) * t168;
t240 = qJD(3) * t175;
t120 = -t153 * t240 + t165;
t238 = qJD(4) * t177;
t94 = (-qJ(4) * t240 + t238) * qJD(1) + t120;
t239 = qJD(4) * t175;
t95 = -qJD(1) * t239 - t112 * qJD(3);
t61 = -t254 * t94 + t255 * t95;
t197 = -t131 * pkin(8) + t61;
t62 = t254 * t95 + t255 * t94;
t47 = pkin(8) * t130 + t62;
t182 = -t174 * t197 - t57 * t226 + t60 * t237 - t280 * t47;
t234 = qJD(1) * qJD(3);
t225 = t175 * t234;
t160 = pkin(3) * t225;
t103 = -pkin(4) * t130 + t160;
t218 = -t280 * t130 + t174 * t131;
t300 = qJD(5) * t199;
t53 = t218 - t300;
t20 = pkin(5) * t53 - pkin(9) * t198 + t103;
t3 = -qJD(6) * t10 + t173 * t182 + t176 * t20;
t294 = t10 * t302 + t3;
t73 = t81 * t235;
t307 = -t36 * t173 - t304 * t81 + t73;
t49 = t173 * t53;
t263 = t235 * t302 + t49;
t271 = t81 * t199;
t306 = -t302 * t304 + t263 + t271;
t28 = -t174 * t60 + t280 * t57;
t26 = -pkin(5) * t233 - t28;
t305 = t26 * t87;
t273 = t79 * t199;
t303 = t302 * t199;
t268 = t87 * t199;
t247 = t199 * qJD(3);
t301 = -t247 - t218;
t299 = -t96 * t87 + t182;
t25 = t26 * t235;
t224 = t174 * t47 - t280 * t197;
t8 = qJD(5) * t29 + t224;
t298 = -t10 * t199 + t8 * t173 + t25;
t24 = t26 * t236;
t297 = -t199 * t202 + t24;
t296 = t96 * t199 - t224;
t55 = -pkin(5) * t199 - pkin(9) * t87;
t2 = -qJD(6) * t202 + t173 * t20 - t176 * t182;
t295 = t2 + t311;
t195 = t222 - t223;
t186 = t280 * t195;
t188 = t194 * qJD(3);
t63 = -t174 * t188 + t233 * t186 - t194 * t237;
t292 = t63 * t233;
t141 = t280 * t163 - t174 * t227;
t123 = t141 * qJD(5);
t31 = t174 * t187 + t280 * t65;
t258 = t123 - t31;
t51 = t176 * t53;
t290 = t236 * t302 - t51;
t289 = qJD(3) * t195;
t193 = t174 * t195;
t98 = -t194 * t280 - t193;
t40 = t98 * t53;
t206 = -t302 * t63 + t40;
t230 = t98 * t236;
t287 = -t176 * t206 + t230 * t302;
t286 = t288 ^ 2;
t178 = qJD(3) ^ 2;
t246 = qJ(4) + t162;
t149 = t246 * t175;
t150 = t246 * t177;
t92 = -t255 * t149 - t150 * t254;
t77 = pkin(8) * t194 + t92;
t93 = -t254 * t149 + t255 * t150;
t78 = -pkin(8) * t195 + t93;
t43 = t174 * t78 - t280 * t77;
t285 = t43 * t8;
t97 = -t174 * t194 + t186;
t284 = t8 * t97;
t283 = t8 * t98;
t1 = t2 * t176;
t276 = t53 * t97;
t275 = t63 * t79;
t274 = t63 * t81;
t272 = t81 * t79;
t266 = t176 * t275 - t98 * t35;
t64 = -qJD(5) * t193 - t174 * t289 - t280 * t188 - t194 * t226;
t265 = -t36 * t97 + t81 * t64;
t264 = -t63 * t87 - t40;
t256 = -t130 * t194 - t146 * t289;
t253 = qJD(6) * t79;
t251 = t288 * t146;
t250 = t153 * t175;
t249 = t178 * t175;
t248 = t178 * t177;
t217 = qJD(3) * t246;
t115 = -t175 * t217 + t238;
t116 = -t177 * t217 - t239;
t76 = t255 * t115 + t254 * t116;
t244 = t175 ^ 2 - t177 ^ 2;
t154 = qJD(1) * t164;
t242 = qJD(1) * t175;
t167 = pkin(3) * t240;
t166 = pkin(3) * t242;
t229 = t98 * t235;
t179 = qJD(1) ^ 2;
t228 = t175 * t179 * t177;
t113 = -pkin(4) * t288 + t166;
t221 = -t36 + t253;
t213 = t98 * t73;
t212 = t177 * t225;
t211 = -t26 * t63 + t283;
t208 = -t37 * t97 - t64 * t79;
t207 = t198 * t97 - t199 * t64;
t205 = -t10 * t176 - t173 * t202;
t204 = t10 * t173 - t176 * t202;
t44 = t174 * t77 + t280 * t78;
t110 = pkin(4) * t195 + t152;
t48 = t97 * pkin(5) - t98 * pkin(9) + t110;
t18 = t173 * t48 + t176 * t44;
t17 = -t173 * t44 + t176 * t48;
t133 = t153 * t177 + t241;
t201 = t312 * t87 - t290;
t200 = 0.2e1 * qJD(3) * t154;
t138 = pkin(9) + t142;
t196 = -t123 * t302 - t138 * t53 - t305;
t75 = -t115 * t254 + t116 * t255;
t189 = t195 * t178;
t185 = -t173 * t206 - t229 * t302;
t184 = -qJD(6) * t204 - t173 * t3 + t1;
t114 = -pkin(4) * t188 + t167;
t121 = qJD(3) * t133;
t132 = t168 - t250;
t183 = t120 * t177 + t121 * t175 + (-t132 * t177 - t133 * t175) * qJD(3);
t181 = pkin(8) * t289 + t75;
t180 = -t131 * t195 - t188 * t288;
t143 = t146 ^ 2;
t139 = t194 * t178;
t137 = -pkin(5) - t141;
t67 = pkin(8) * t188 + t76;
t58 = t64 * t233;
t45 = t113 + t55;
t22 = t64 * pkin(5) + t63 * pkin(9) + t114;
t16 = t173 * t55 + t176 * t28;
t15 = -t173 * t28 + t176 * t55;
t14 = t44 * qJD(5) + t174 * t67 - t280 * t181;
t13 = t174 * t181 + t77 * t226 - t78 * t237 + t280 * t67;
t12 = t173 * t45 + t176 * t31;
t11 = -t173 * t31 + t176 * t45;
t5 = -qJD(6) * t18 - t13 * t173 + t176 * t22;
t4 = qJD(6) * t17 + t13 * t176 + t173 * t22;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t212, -0.2e1 * t244 * t234, t248, -0.2e1 * t212, -t249, 0, -t162 * t248 + t175 * t200, t162 * t249 + t177 * t200, t183, t183 * t162, -t131 * t194 + t288 * t289, t180 + t256, -t189, -t130 * t195 + t146 * t188, t139, 0, -t152 * t130 - t146 * t167 + t166 * t289 + (-t144 * t194 + t75) * qJD(3), -t76 * qJD(3) + t152 * t131 - t144 * t289 - t160 * t194 - t167 * t288, t93 * t130 - t92 * t131 + t76 * t146 + t188 * t69 + t194 * t61 - t195 * t62 + t288 * t75 + t289 * t68, t61 * t92 + t62 * t93 + t68 * t75 + t69 * t76 + (t144 + t243) * t167, t198 * t98 + t199 * t63, -t207 + t264, -t292, -t64 * t87 + t276, -t58, 0, t103 * t97 + t110 * t53 - t114 * t87 - t14 * t233 + t96 * t64, t103 * t98 + t110 * t198 - t114 * t199 - t13 * t233 - t96 * t63, t13 * t87 - t14 * t199 + t182 * t97 + t198 * t43 + t28 * t63 - t29 * t64 - t44 * t53 + t283, t103 * t110 + t114 * t96 + t13 * t29 - t14 * t28 - t182 * t44 + t285, -t81 * t230 + (-t36 * t98 - t274) * t176, -t213 + (t274 + (t36 + t253) * t98) * t173 + t266, t265 - t287, t79 * t229 + (t37 * t98 - t275) * t173, t185 + t208, t302 * t64 + t276, t14 * t79 + t17 * t53 + t173 * t211 - t202 * t64 + t25 * t98 + t3 * t97 + t302 * t5 + t37 * t43, -t10 * t64 + t14 * t81 + t176 * t211 - t18 * t53 - t2 * t97 - t24 * t98 - t302 * t4 - t36 * t43, t17 * t36 - t18 * t37 - t4 * t79 - t5 * t81 + t204 * t63 + (qJD(6) * t205 - t173 * t2 - t176 * t3) * t98, t10 * t4 + t14 * t26 + t17 * t3 + t18 * t2 - t202 * t5 + t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, -t248, 0, t120 * t175 - t121 * t177 + (-t132 * t175 + t133 * t177) * qJD(3), 0, 0, 0, 0, 0, 0, t139, t189, -t180 + t256, t188 * t68 - t194 * t62 - t195 * t61 - t289 * t69, 0, 0, 0, 0, 0, 0, -t58, t292, t207 + t264, -t182 * t98 - t28 * t64 - t29 * t63 + t284, 0, 0, 0, 0, 0, 0, t185 - t208, t265 + t287, t213 + (t221 * t98 - t274) * t173 + t266, t184 * t98 + t205 * t63 + t26 * t64 + t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t244 * t179, 0, t228, 0, 0, -t154 * t242, -qJD(1) * t154 * t177 - t165 + (t132 + t250) * qJD(3), 0, 0, t251, -t143 + t286, -t156 + (t210 - t146) * qJD(3), -t251, 0, 0, -t70 * qJD(3) + t144 * t288 + t146 * t166 + t61, qJD(3) * t71 - t144 * t146 + t166 * t288 - t62 -(t69 + t70) * t288 + (t68 - t71) * t146 + (t130 * t254 - t131 * t255) * pkin(3), -t68 * t70 - t69 * t71 + (-t144 * t242 + t254 * t62 + t255 * t61) * pkin(3), t268, t309, t310, -t268, t301, 0, -t257 * qJD(3) + qJD(5) * t313 + t113 * t87 + t296, t113 * t199 - t258 * t233 + t299, -t141 * t198 - t142 * t53 + (t258 + t28) * t87 + t313 * t199, -t113 * t96 - t141 * t8 - t142 * t182 - t257 * t28 + t258 * t29, t307, t315, t306, t314, t201 - t273, t303, -t11 * t302 + t137 * t37 + t257 * t79 + (-qJD(6) * t138 * t302 - t8) * t176 + t196 * t173 + t297, -t137 * t36 + (t138 * t236 + t12) * t302 + t257 * t81 + t196 * t176 + t298, t11 * t81 + t12 * t79 + t1 + (-t123 * t79 - t138 * t37 - t87 * t202 + (t138 * t81 + t202) * qJD(6)) * t176 + (t10 * t87 + t123 * t81 - t138 * t36 - t3 + (t138 * t79 - t10) * qJD(6)) * t173, t137 * t8 - (-t123 * t173 - t11) * t202 + t257 * t26 + (t123 * t176 - t12) * t10 + t184 * t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t130, -t156 + (t210 + t146) * qJD(3), -t143 - t286, -t146 * t69 - t288 * t68 + t160, 0, 0, 0, 0, 0, 0, t218 - t247 - 0.2e1 * t300, t198 + t293, -t269 - t270, -t199 * t28 - t29 * t87 + t103, 0, 0, 0, 0, 0, 0, t201 + t273, -t176 * t302 ^ 2 + t271 - t49 (t79 * t87 + t36) * t176 + t291 + t267, t295 * t173 + t294 * t176 + t199 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t309, t310, -t268, t301, 0, t29 * qJD(3) + t296, t233 * t28 + t299, 0, 0, t307, t315, t306, t314, -t302 * t312 - t273 + t51, t303, -pkin(5) * t37 - pkin(9) * t263 - t15 * t302 - t173 * t305 - t176 * t8 - t29 * t79 + t297, pkin(5) * t36 + t290 * pkin(9) + t16 * t302 - t26 * t304 - t29 * t81 + t298, t15 * t81 + t16 * t79 + t1 + (t311 + (-t37 + t252) * pkin(9)) * t176 + (pkin(9) * t221 - t294) * t173, -pkin(5) * t8 + pkin(9) * t184 - t10 * t16 + t15 * t202 - t26 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t79 ^ 2 + t81 ^ 2, t302 * t79 - t36, -t272, t302 * t81 - t37, t53, -t26 * t81 + t294, t26 * t79 - t295, 0, 0;];
tauc_reg  = t6;
