% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:05:12
% EndTime: 2019-03-09 09:05:52
% DurationCPUTime: 32.50s
% Computational Cost: add. (29891->1118), mult. (74776->1433), div. (0->0), fcn. (82441->10), ass. (0->806)
t689 = cos(pkin(6));
t1212 = t689 / 0.2e1;
t1138 = sin(pkin(11));
t1139 = cos(pkin(11));
t688 = sin(pkin(6));
t692 = sin(qJ(2));
t695 = cos(qJ(2));
t595 = (-t1138 * t695 - t1139 * t692) * t688;
t925 = t595 * qJD(1);
t881 = t689 * t925;
t924 = t595 * qJD(2);
t1211 = t881 + t924;
t690 = sin(qJ(6));
t684 = t690 ^ 2;
t694 = cos(qJ(5));
t674 = t684 * t694;
t693 = cos(qJ(6));
t686 = t693 ^ 2;
t675 = t686 * t694;
t612 = t674 / 0.2e1 - t675 / 0.2e1;
t967 = qJD(5) * t693;
t659 = t690 * t967;
t1210 = t612 * qJD(2) - t659;
t1049 = t689 * t694;
t1053 = t688 * t695;
t633 = t1139 * t1053;
t1054 = t688 * t692;
t807 = t1138 * t1054;
t593 = t807 - t633;
t691 = sin(qJ(5));
t1069 = t593 * t691;
t517 = t1049 + t1069;
t1076 = t517 * t691;
t1050 = t689 * t691;
t575 = t593 * t694;
t515 = -t575 + t1050;
t1079 = t515 * t694;
t327 = t1076 / 0.2e1 + t1079 / 0.2e1;
t1209 = t327 * qJD(5);
t687 = t694 ^ 2;
t676 = t687 * t693;
t1066 = t595 * t690;
t1075 = t517 * t693;
t387 = -t1066 + t1075;
t1104 = t387 * t690;
t1064 = t595 * t693;
t1077 = t517 * t690;
t385 = t1064 + t1077;
t1106 = t385 * t693;
t872 = t1106 / 0.2e1;
t753 = t872 + t1104 / 0.2e1;
t736 = t753 * t694;
t1208 = t690 * qJD(2) * t676 + qJD(1) * t736 + t612 * qJD(5);
t1182 = t595 ^ 2;
t1183 = t593 ^ 2;
t1187 = t1183 + t1182;
t1207 = qJD(3) * t1187;
t1206 = t1187 * qJD(1);
t1188 = t1183 - t1182;
t1205 = t1188 * qJD(1);
t1204 = t1188 * qJD(2);
t916 = t694 * qJD(2);
t663 = t691 * t916;
t1203 = -t327 * qJD(1) - t663;
t932 = t515 * qJD(1);
t1202 = qJD(2) * t327 + t517 * t932;
t1181 = pkin(3) + pkin(9);
t623 = (-pkin(2) * t695 - pkin(1)) * t688;
t737 = t595 * qJ(4) + t623;
t302 = t1181 * t593 + t737;
t1150 = t595 * pkin(4);
t1154 = pkin(1) * t695;
t1144 = pkin(8) + qJ(3);
t840 = t688 * t1144;
t809 = t692 * t840;
t715 = (pkin(2) + t1154) * t689 - t809;
t1155 = pkin(1) * t692;
t913 = t689 * t1155;
t731 = t1053 * t1144 + t913;
t378 = -t1138 * t731 + t1139 * t715;
t357 = -t689 * pkin(3) - t378;
t697 = -t689 * pkin(9) - t1150 + t357;
t193 = t694 * t302 + t691 * t697;
t1119 = t193 * t694;
t192 = t302 * t691 - t694 * t697;
t1201 = t595 * (t192 * t691 + t1119);
t1039 = t690 * t691;
t576 = t593 * t693;
t420 = -t1039 * t595 + t576;
t1043 = t690 * t420;
t404 = t1043 / 0.2e1;
t1034 = t691 * t693;
t1070 = t593 * t690;
t421 = -t1034 * t595 - t1070;
t1091 = t421 * t693;
t411 = t1091 / 0.2e1;
t1200 = t411 + t404;
t849 = -t1034 / 0.2e1;
t543 = t595 * t849;
t1199 = t543 - t1070 / 0.2e1;
t848 = t1034 / 0.2e1;
t1198 = t595 * t848 + t1070 / 0.2e1;
t685 = t691 ^ 2;
t646 = t685 - t687;
t890 = t693 * t916;
t817 = t690 * t890;
t647 = t686 - t684;
t833 = qJD(5) * t647;
t1197 = 0.2e1 * t817 - t833;
t1052 = t689 * qJ(4);
t670 = pkin(2) * t1138 + qJ(4);
t698 = t1138 * t715;
t703 = t1139 * t731;
t758 = t698 / 0.2e1 + t703 / 0.2e1 + t1052 / 0.2e1 + t670 * t1212;
t732 = -t695 * t840 - t913;
t546 = t1139 * t732;
t914 = t689 * t1154;
t573 = -t809 + t914;
t838 = t1138 * t573;
t761 = -t546 / 0.2e1 + t838 / 0.2e1;
t236 = t761 - t758;
t918 = t670 * qJD(2);
t1196 = -qJD(1) * t236 + t918;
t1044 = t690 * t385;
t1102 = t387 * t693;
t364 = -t1102 / 0.2e1;
t256 = t364 + t1044 / 0.2e1;
t1193 = qJD(1) * t256 + t1210;
t361 = -t1044 / 0.2e1;
t255 = t361 + t1102 / 0.2e1;
t1192 = -qJD(1) * t255 + t1210;
t1065 = t595 * t691;
t937 = t1065 * qJD(1);
t968 = qJD(5) * t691;
t1191 = t937 - t968;
t1062 = t1182 * t691;
t1072 = t1182 * t694;
t1190 = t736 * qJD(6);
t1152 = t593 * pkin(4);
t724 = -t1152 / 0.2e1 + t758;
t401 = t838 - t546;
t305 = t401 - t1152;
t296 = t691 * t305;
t1071 = t593 * qJ(4);
t668 = pkin(2) * t1054;
t835 = t668 + t1071;
t313 = -t1181 * t595 + t835;
t307 = t694 * t313;
t214 = t307 + t296;
t1117 = t214 * t691;
t1023 = t694 * t305;
t1037 = t691 * t313;
t213 = t1023 - t1037;
t1118 = t213 * t694;
t754 = -t1118 / 0.2e1 - t1117 / 0.2e1;
t62 = t724 + t754;
t1189 = qJD(1) * t62 + t918;
t982 = qJD(1) * t387;
t1185 = qJD(2) * t736 + t385 * t982;
t1184 = t515 ^ 2;
t1180 = t385 / 0.2e1;
t1179 = -t387 / 0.2e1;
t1178 = -t420 / 0.2e1;
t1177 = -t421 / 0.2e1;
t672 = -pkin(2) * t1139 - pkin(3);
t669 = -pkin(9) + t672;
t1147 = t691 * pkin(5);
t802 = -t694 * pkin(10) + t1147;
t717 = t670 + t802;
t508 = t1039 * t669 - t693 * t717;
t1176 = t508 / 0.2e1;
t1027 = t693 * t669;
t902 = t691 * t1027;
t509 = t690 * t717 + t902;
t1175 = -t509 / 0.2e1;
t1174 = t517 / 0.2e1;
t1145 = t694 * pkin(5);
t1146 = t691 * pkin(10);
t634 = t1145 + t1146;
t1028 = t693 * t634;
t1038 = t690 * t694;
t901 = t669 * t1038;
t547 = -t901 + t1028;
t1173 = t547 / 0.2e1;
t1041 = t690 * t634;
t1024 = t693 * t694;
t900 = t669 * t1024;
t548 = t900 + t1041;
t1172 = t548 / 0.2e1;
t1171 = -t575 / 0.2e1;
t1170 = t575 / 0.2e1;
t1169 = t595 / 0.2e1;
t1168 = -t669 / 0.2e1;
t1167 = -t670 / 0.2e1;
t1166 = t670 / 0.2e1;
t1165 = -t672 / 0.2e1;
t1164 = t685 / 0.2e1;
t1163 = -t687 / 0.2e1;
t1162 = -t690 / 0.2e1;
t1161 = t690 / 0.2e1;
t1160 = -t691 / 0.2e1;
t1159 = t691 / 0.2e1;
t1158 = t693 / 0.2e1;
t1157 = -t694 / 0.2e1;
t1156 = t694 / 0.2e1;
t1153 = t515 * pkin(10);
t1151 = t595 * pkin(3);
t1149 = t595 * pkin(5);
t1148 = t595 * pkin(10);
t1143 = pkin(2) * qJD(2);
t402 = t1138 * t732 + t1139 * t573;
t257 = -(-pkin(4) - t634) * t595 + t402;
t1031 = t693 * t257;
t190 = -pkin(10) * t593 + t214;
t1048 = t690 * t190;
t117 = t1031 - t1048;
t1033 = t693 * t190;
t1046 = t690 * t257;
t118 = t1033 + t1046;
t161 = t192 + t1149;
t189 = pkin(5) * t593 - t213;
t162 = t193 - t1148;
t379 = t703 + t698;
t356 = -t379 - t1052;
t283 = -t356 - t1152;
t803 = t515 * pkin(5) - t517 * pkin(10);
t696 = t283 + t803;
t96 = t162 * t690 - t693 * t696;
t97 = t693 * t162 + t690 * t696;
t9 = -t117 * t96 + t118 * t97 + t161 * t189;
t1142 = t9 * qJD(1);
t1141 = t96 * t693;
t1140 = t97 * t690;
t756 = t1158 * t118 + t1162 * t117;
t702 = t1159 * t189 + t694 * t756;
t752 = t1175 * t421 + t1178 * t508;
t1056 = t687 * t595;
t857 = t1056 / 0.2e1;
t30 = t669 * t857 + t702 + t752;
t1137 = qJD(1) * t30;
t49 = -t161 * t385 + t515 * t96;
t1136 = qJD(1) * t49;
t50 = t161 * t387 - t515 * t97;
t1135 = qJD(1) * t50;
t1120 = t193 * t691;
t57 = -t283 * t593 - (-t192 * t694 + t1120) * t595;
t1134 = qJD(1) * t57;
t58 = t283 * t689 + t1201;
t1133 = qJD(1) * t58;
t187 = -t1119 / 0.2e1;
t873 = t1119 / 0.2e1;
t60 = t187 + t873;
t1131 = qJD(2) * t60;
t355 = pkin(5) * t517 + t1153;
t1030 = t693 * t355;
t1047 = t690 * t192;
t132 = t1030 + t1047;
t1032 = t693 * t192;
t1045 = t690 * t355;
t133 = -t1032 + t1045;
t13 = -t132 * t96 + t133 * t97 + t161 * t193;
t1130 = t13 * qJD(1);
t1129 = t132 * t690;
t1128 = t133 * t693;
t16 = -t117 * t387 - t118 * t385 - t420 * t97 + t421 * t96;
t1127 = t16 * qJD(1);
t1126 = t161 * t690;
t1125 = t161 * t691;
t1124 = t161 * t693;
t1123 = t161 * t694;
t1122 = t189 * t690;
t1121 = t189 * t693;
t22 = -t132 * t387 - t133 * t385 + (t1140 - t1141) * t515;
t1116 = t22 * qJD(1);
t1063 = t595 * t694;
t23 = -t1063 * t96 + t117 * t515 + t161 * t420 + t189 * t385;
t1115 = t23 * qJD(1);
t24 = -t1063 * t97 - t118 * t515 + t161 * t421 + t189 * t387;
t1114 = t24 * qJD(1);
t25 = t193 * t385 - t517 * t96 + (t132 - t1126) * t515;
t1113 = t25 * qJD(1);
t26 = t193 * t387 - t517 * t97 + (-t133 - t1124) * t515;
t1112 = t26 * qJD(1);
t1111 = t283 * t691;
t1110 = t283 * t694;
t29 = t1063 * t161 + t420 * t96 + t421 * t97;
t1109 = t29 * qJD(1);
t1025 = t693 * t689;
t904 = t595 * t1038;
t505 = -t904 + t1025;
t1040 = t690 * t689;
t903 = t595 * t1024;
t506 = t903 + t1040;
t36 = t1065 * t161 - t505 * t96 + t506 * t97;
t1108 = t36 * qJD(1);
t1107 = t385 * t421;
t1105 = t387 * t420;
t1103 = t387 * t691;
t306 = t402 + t1150;
t39 = -t192 * t213 + t193 * t214 + t283 * t306;
t1101 = t39 * qJD(1);
t394 = t593 * pkin(3) + t737;
t1100 = t394 * t595;
t1099 = t401 * t689;
t1098 = t402 * t689;
t41 = -t213 * t517 - t214 * t515 - t1201;
t1097 = t41 * qJD(1);
t1096 = t420 * t515;
t1095 = t420 * t693;
t1094 = t421 * t515;
t1093 = t421 * t690;
t1092 = t421 * t691;
t1090 = t505 * t690;
t1089 = t505 * t694;
t1088 = t506 * t693;
t1087 = t508 * t691;
t1086 = t508 * t694;
t1085 = t509 * t515;
t1084 = t509 * t691;
t1083 = t509 * t694;
t51 = t192 * t593 + t306 * t515 - (t213 - t1110) * t595;
t1082 = t51 * qJD(1);
t1081 = t515 * t593;
t1080 = t515 * t691;
t1078 = t517 * t593;
t1074 = t517 * t694;
t52 = t193 * t593 + t306 * t517 - (-t214 + t1111) * t595;
t1073 = t52 * qJD(1);
t1068 = t595 * t670;
t1067 = t595 * t685;
t1061 = t60 * qJD(1);
t559 = -t1056 / 0.2e1;
t514 = t669 * t559;
t862 = -t1067 / 0.2e1;
t864 = t593 * t1167;
t727 = t669 * t862 + t514 + t864;
t755 = t1157 * t214 + t1159 * t213;
t64 = t727 + t755;
t1060 = t64 * qJD(1);
t1059 = t669 * t691;
t1058 = t669 * t694;
t683 = t688 ^ 2;
t1057 = t683 * t695;
t1055 = t687 * t690;
t1042 = t690 * t515;
t1036 = t691 * t385;
t1035 = t691 * t420;
t1029 = t693 * t515;
t1026 = t693 * t685;
t1022 = t694 * t385;
t1021 = t694 * t387;
t1020 = t694 * t691;
t414 = t835 - t1151;
t98 = -t356 * t402 + t357 * t401 + t394 * t414;
t1019 = t98 * qJD(1);
t99 = -(t356 + t401) * t595 + (-t357 - t402) * t593;
t1018 = t99 * qJD(1);
t197 = (t548 * t1156 - t1084 / 0.2e1) * t693 + (t547 * t1157 - t1087 / 0.2e1) * t690 + (t1164 + t1163) * t669;
t1017 = t197 * qJD(5);
t207 = -t669 * t1020 + (t548 * t1159 + t1083 / 0.2e1) * t693 + (t547 * t1160 + t1086 / 0.2e1) * t690;
t459 = t509 * t1039;
t855 = -t1039 / 0.2e1;
t294 = t459 / 0.2e1 + t509 * t855;
t1016 = t207 * qJD(5) - t294 * qJD(6);
t927 = t593 * qJD(1);
t554 = t689 * t927;
t581 = t593 * qJD(2);
t427 = -t554 - t581;
t966 = qJD(5) * t694;
t661 = t690 * t966;
t963 = qJD(6) * t693;
t666 = t691 * t963;
t1015 = t661 + t666;
t1014 = t684 + t686;
t114 = -t192 * t595 - t283 * t515;
t1013 = qJD(1) * t114;
t115 = t193 * t595 + t283 * t517;
t1012 = qJD(1) * t115;
t557 = t1067 / 0.2e1;
t810 = t557 + t857;
t850 = -t1035 / 0.2e1;
t868 = t506 * t1156;
t135 = (t868 - t1092 / 0.2e1) * t693 + (-t1089 / 0.2e1 + t850) * t690 + t810;
t1011 = qJD(1) * t135;
t138 = t1105 - t1107;
t1010 = qJD(1) * t138;
t141 = -t414 * t593 + t1099 + t1100;
t1009 = qJD(1) * t141;
t142 = t394 * t593 + t414 * t595 + t1098;
t1008 = qJD(1) * t142;
t174 = -t385 * t506 - t387 * t505;
t1007 = qJD(1) * t174;
t195 = t356 * t593 - t357 * t595;
t1006 = qJD(1) * t195;
t908 = t595 * t1022;
t198 = t908 - t1096;
t1005 = qJD(1) * t198;
t292 = t595 * t1021;
t201 = t292 - t1094;
t1004 = qJD(1) * t201;
t208 = t378 * t595 - t379 * t593;
t1003 = qJD(1) * t208;
t851 = -t1036 / 0.2e1;
t866 = -t1079 / 0.2e1;
t728 = t684 * t866 + t690 * t851;
t210 = t1095 / 0.2e1 + t728;
t1002 = qJD(1) * t210;
t729 = t387 * t849 + t686 * t866;
t212 = -t1093 / 0.2e1 + t729;
t1001 = qJD(1) * t212;
t215 = -t1184 * t690 + t385 * t517;
t1000 = qJD(1) * t215;
t216 = -t1184 * t693 + t387 * t517;
t999 = qJD(1) * t216;
t853 = -t1038 / 0.2e1;
t743 = t515 * t853 + t851;
t219 = t743 + t1198;
t998 = qJD(1) * t219;
t845 = -t1024 / 0.2e1;
t813 = t515 * t845;
t767 = t576 / 0.2e1 + t813;
t798 = t1179 - t1066 / 0.2e1;
t224 = t691 * t798 + t767;
t997 = qJD(1) * t224;
t226 = t1036 * t595 + t505 * t515;
t996 = qJD(1) * t226;
t227 = t1065 * t387 - t506 * t515;
t995 = qJD(1) * t227;
t228 = -t356 * t689 + t1100;
t994 = qJD(1) * t228;
t258 = t593 * t668 - t595 * t623 - t1099;
t992 = qJD(1) * t258;
t259 = t623 * t593 + t595 * t668 + t1098;
t991 = qJD(1) * t259;
t264 = (-t1076 + t1079) * t595;
t990 = qJD(1) * t264;
t265 = (-t1074 - t1080) * t595;
t989 = qJD(1) * t265;
t271 = -t1062 - t1078;
t988 = qJD(1) * t271;
t299 = -t689 * t515 - t1062;
t987 = qJD(1) * t299;
t308 = -t1078 + t1062;
t986 = qJD(1) * t308;
t310 = t1072 + t1081;
t985 = qJD(1) * t310;
t384 = t517 * t689 + t1072;
t984 = qJD(1) * t384;
t983 = qJD(1) * t385;
t981 = qJD(1) * t689;
t980 = qJD(2) * t294;
t979 = qJD(2) * t401;
t978 = qJD(2) * t402;
t977 = qJD(2) * t689;
t976 = qJD(3) * t593;
t975 = qJD(3) * t689;
t974 = qJD(4) * t294;
t973 = qJD(4) * t691;
t972 = qJD(4) * t694;
t971 = qJD(5) * t1065;
t970 = qJD(5) * t595;
t969 = qJD(5) * t690;
t965 = qJD(6) * t515;
t964 = qJD(6) * t690;
t116 = -(-t379 + t401) * t595 + (t378 - t402) * t593;
t962 = t116 * qJD(1);
t716 = t1024 * t1042 + t691 * t753;
t869 = -t1091 / 0.2e1;
t122 = t404 + t869 + t716;
t961 = t122 * qJD(1);
t131 = -t378 * t401 + t379 * t402 + t623 * t668;
t960 = t131 * qJD(1);
t403 = -t1043 / 0.2e1;
t735 = (t872 - t1104 / 0.2e1) * t691;
t137 = t869 + t403 + t735;
t959 = t137 * qJD(1);
t139 = -t1105 - t1107;
t958 = t139 * qJD(1);
t366 = t1021 / 0.2e1;
t341 = t690 * t366;
t843 = -t1022 / 0.2e1;
t144 = t341 + t1090 / 0.2e1 + (t843 - t506 / 0.2e1) * t693;
t957 = t144 * qJD(1);
t844 = t1024 / 0.2e1;
t541 = t595 * t844;
t865 = -t1077 / 0.2e1;
t795 = t865 + t1180;
t757 = t795 * t694;
t156 = t541 + t757;
t956 = t156 * qJD(1);
t794 = -t1064 / 0.2e1 - t385 / 0.2e1;
t157 = (t865 - t794) * t691;
t955 = t157 * qJD(1);
t786 = t1104 + t1106;
t173 = t786 * t515;
t954 = t173 * qJD(1);
t196 = (t1093 - t1095) * t694;
t953 = t196 * qJD(1);
t199 = -t908 - t1096;
t952 = t199 * qJD(1);
t200 = t292 + t1094;
t951 = t200 * qJD(1);
t852 = t1038 / 0.2e1;
t742 = t515 * t852 + t851;
t220 = t742 + t1199;
t950 = t220 * qJD(1);
t370 = t1103 / 0.2e1;
t816 = t595 * t855;
t222 = t370 + t816 + t767;
t949 = t222 * qJD(1);
t907 = t595 * t1055;
t230 = -t907 + t1035;
t948 = t230 * qJD(1);
t797 = t1179 + t1066 / 0.2e1;
t734 = t1075 / 0.2e1 + t797;
t251 = t734 * t694;
t947 = t251 * qJD(1);
t252 = t734 * t691;
t946 = t252 * qJD(1);
t635 = t668 / 0.2e1;
t261 = t635 - (pkin(3) / 0.2e1 + t1165) * t595 + (qJ(4) / 0.2e1 + t1166) * t593;
t945 = t261 * qJD(1);
t268 = t1074 - t1080;
t266 = t268 * t595;
t944 = t266 * qJD(1);
t269 = t559 - (t685 + t687 / 0.2e1) * t595;
t943 = t269 * qJD(1);
t906 = t595 * t676;
t293 = -t906 + t1092;
t942 = t293 * qJD(1);
t309 = t1072 - t1081;
t941 = t309 * qJD(1);
t710 = (-t1138 * t593 / 0.2e1 + t1139 * t1169) * pkin(2);
t383 = -t668 / 0.2e1 + t710;
t938 = t383 * qJD(1);
t424 = 0.2e1 * t1170;
t936 = t424 * qJD(1);
t428 = (t685 + t687) * t595;
t935 = t428 * qJD(1);
t611 = pkin(8) * t1053 + t913;
t533 = t1155 * t683 + t611 * t689;
t931 = t533 * qJD(1);
t610 = pkin(8) * t1054 - t914;
t534 = pkin(1) * t1057 - t610 * t689;
t930 = t534 * qJD(1);
t836 = t1014 * t694;
t571 = t691 * t836 - t1020;
t929 = t571 * qJD(5);
t588 = t807 / 0.2e1 - t633 / 0.2e1;
t928 = t588 * qJD(1);
t926 = t593 * qJD(4);
t923 = t595 * qJD(3);
t920 = t612 * qJD(6);
t615 = (-t692 ^ 2 + t695 ^ 2) * t683;
t919 = t615 * qJD(1);
t678 = t689 * qJD(4);
t917 = t691 * qJD(2);
t915 = t694 * qJD(6);
t912 = 0.1e1 / 0.2e1 + t1164;
t911 = pkin(5) * t1180;
t910 = pkin(5) * t1179;
t909 = -t1149 / 0.2e1;
t905 = t692 * t1057;
t899 = t97 * t1159;
t897 = t385 * t932;
t896 = t387 * t932;
t894 = t688 * t981;
t893 = t593 * t917;
t892 = t688 * t977;
t891 = t690 * t916;
t889 = t593 * t975;
t888 = t595 * t966;
t887 = t693 * t966;
t886 = t690 * t915;
t885 = t693 * t915;
t884 = t593 * t925;
t883 = t593 * t924;
t882 = t691 * t927;
t880 = t689 * t924;
t879 = t691 * t925;
t878 = t694 * t925;
t877 = t689 * t581;
t876 = t690 * t963;
t664 = t691 * t966;
t875 = t1125 / 0.2e1;
t874 = t189 * t1157;
t871 = -t1095 / 0.2e1;
t870 = t1093 / 0.2e1;
t867 = t1080 / 0.2e1;
t861 = t1059 / 0.2e1;
t860 = -t1058 / 0.2e1;
t859 = t1058 / 0.2e1;
t858 = t517 * t1166;
t856 = -t1048 / 0.2e1;
t493 = -t1042 / 0.2e1;
t494 = t1042 / 0.2e1;
t854 = t1039 / 0.2e1;
t847 = -t1033 / 0.2e1;
t846 = -t1029 / 0.2e1;
t488 = t1029 / 0.2e1;
t842 = t161 / 0.2e1 - t192 / 0.2e1;
t841 = -t296 / 0.2e1 - t307 / 0.2e1;
t839 = t916 / 0.2e1;
t837 = t1014 * t691;
t834 = t1171 + t1050;
t169 = t420 * t1157 + t846 + (-t904 - t505 / 0.2e1) * t691;
t662 = t693 * t917;
t832 = qJD(1) * t169 - t662;
t170 = t421 * t1157 + t494 + (-t903 + t506 / 0.2e1) * t691;
t658 = t690 * t917;
t831 = qJD(1) * t170 + t658;
t319 = 0.2e1 * t493;
t826 = -qJD(1) * t319 + t658;
t323 = 0.2e1 * t488;
t824 = -qJD(1) * t323 - t662;
t822 = qJD(5) * t588 - t884;
t667 = qJD(2) + t981;
t821 = -qJD(5) + t925;
t820 = -qJD(6) - t932;
t819 = t687 * t876;
t818 = qJD(2) * t905;
t542 = t595 * t854;
t815 = t595 * t853;
t814 = t595 * t852;
t540 = t595 * t845;
t468 = t691 * t846;
t812 = t515 * t859;
t811 = t595 * t859;
t806 = -t117 / 0.2e1 + t421 * pkin(10) / 0.2e1;
t805 = pkin(10) * t1178 + t118 / 0.2e1;
t804 = t1153 / 0.2e1 + t355 / 0.2e1;
t801 = 0.2e1 * t694 * t659;
t799 = t257 / 0.2e1 - t1123 / 0.2e1;
t796 = t1212 + t867;
t665 = t691 * t964;
t793 = t665 - t887;
t660 = t690 * t968;
t792 = t660 - t885;
t791 = t366 + t814;
t229 = t508 * t1034 - t459 + (t547 * t693 + t548 * t690) * t694;
t750 = t1172 * t385 + t1173 * t387;
t760 = t1159 * t96 + t1176 * t515;
t3 = t97 * t855 + (-t1085 / 0.2e1 + t133 * t1156 + t806) * t690 + (t1156 * t132 + t760 + t805) * t693 + t750;
t790 = -t3 * qJD(1) - t229 * qJD(2);
t789 = t1128 - t1129;
t787 = t1117 + t1118;
t785 = -t547 * t690 + t548 * t693;
t784 = t593 * t669 - t1068;
t720 = t505 * t1176 + t506 * t1175 + t1141 / 0.2e1;
t10 = t874 - t1140 / 0.2e1 + (t811 + t756) * t691 + t720;
t312 = -t508 * t693 + t509 * t690;
t783 = -qJD(1) * t10 + qJD(2) * t312;
t699 = t875 + (-t1148 / 0.2e1 + t515 * t1168 - t193 / 0.2e1) * t694;
t719 = t508 * t1174 - t547 * t515 / 0.2e1 + t96 * t1156;
t765 = pkin(5) * t1178 - t1121 / 0.2e1;
t17 = (-t132 / 0.2e1 + t385 * t1168) * t691 + t699 * t690 + t719 + t765;
t286 = -t1086 + (t547 + 0.2e1 * t901) * t691;
t782 = -t17 * qJD(1) + t286 * qJD(2);
t718 = t1156 * t97 + t1172 * t515 + t1174 * t509;
t764 = pkin(5) * t1177 + t1122 / 0.2e1;
t18 = (t133 / 0.2e1 + t387 * t1168) * t691 + t699 * t693 + t718 + t764;
t287 = t1083 + (t548 - 0.2e1 * t900) * t691;
t781 = -t18 * qJD(1) - t287 * qJD(2);
t711 = t1085 / 0.2e1 + t899 + t669 * t366;
t32 = t693 * t799 + t711 + t856;
t419 = -t1027 * t687 - t1084;
t780 = qJD(1) * t32 - qJD(2) * t419;
t712 = t669 * t843 - t760;
t33 = -t690 * t799 + t712 + t847;
t418 = -t1055 * t669 - t1087;
t779 = qJD(1) * t33 + qJD(2) * t418;
t778 = (-qJD(6) - t917) * t694;
t100 = (t850 + t387 / 0.2e1 + t1089 / 0.2e1) * t693 + (t1092 / 0.2e1 + t1180 + t868) * t690;
t620 = -t674 - t675;
t777 = qJD(1) * t100 - qJD(2) * t620;
t475 = t515 * t854;
t700 = t475 + (t867 - t1074 / 0.2e1) * t690 + t843;
t153 = t540 + t700;
t621 = t646 * t690;
t776 = -qJD(1) * t153 - qJD(2) * t621;
t159 = t691 * t1029 + (-t1075 / 0.2e1 + t797) * t694;
t622 = -t676 + t1026;
t775 = -qJD(1) * t159 - qJD(2) * t622;
t232 = t693 * t796 + t366 + t815;
t600 = t676 / 0.2e1 + t912 * t693;
t774 = qJD(1) * t232 + qJD(2) * t600;
t234 = -t690 * t796 + t694 * t794;
t599 = (t1163 - t912) * t690;
t773 = qJD(1) * t234 + qJD(2) * t599;
t273 = -t517 ^ 2 + t1184;
t772 = qJD(1) * t273 - qJD(2) * t268;
t771 = qJD(1) * t268 - qJD(2) * t646;
t400 = t1170 + t834;
t770 = qJD(1) * t400 + t917;
t769 = t917 + t932;
t553 = t689 ^ 2 + t1182;
t768 = qJD(1) * t553 + t977;
t766 = t1146 / 0.2e1 + t1145 / 0.2e1;
t510 = t1049 / 0.2e1 + t1069 / 0.2e1;
t763 = t510 * qJD(1) + t839;
t762 = t1158 * t97 + t1161 * t96;
t759 = t542 - t576 / 0.2e1 + t813;
t751 = t1088 / 0.2e1 - t1090 / 0.2e1;
t102 = t858 + (t283 / 0.2e1 - t305 / 0.2e1) * t694 + (t669 * t1169 + t313 / 0.2e1) * t691;
t749 = -qJD(1) * t102 - t670 * t916;
t709 = -t1111 / 0.2e1 + t515 * t1167 + t811;
t104 = t709 - t841;
t748 = -qJD(1) * t104 + t670 * t917;
t745 = (qJD(1) * t517 + t916) * t595;
t744 = t915 / 0.2e1 - t1203;
t741 = t634 / 0.2e1 + t766;
t740 = -t691 * t967 - t886;
t739 = t1200 * pkin(10);
t738 = t751 * pkin(10);
t733 = (qJD(5) * t517 + t595 * t916) * t515;
t164 = (-t1044 + t1102) * t694;
t191 = t385 ^ 2 - t387 ^ 2;
t730 = qJD(1) * t191 - qJD(2) * t164 - qJD(5) * t786;
t523 = t741 * t690;
t53 = t690 * t804 + t693 * t842 + t911;
t726 = pkin(5) * t967 - qJD(1) * t53 - qJD(2) * t523;
t524 = t741 * t693;
t55 = t690 * t842 - t693 * t804 + t910;
t725 = pkin(5) * t969 - qJD(1) * t55 + qJD(2) * t524;
t723 = qJD(5) * t256 + t1185;
t722 = -qJD(5) * t255 + t1185;
t721 = qJD(6) * t510 + t1202;
t619 = t647 * t687;
t714 = qJD(1) * t164 + qJD(2) * t619 + t801;
t713 = qJD(1) * t786 + t1197;
t701 = t132 * t1176 + t133 * t1175 + t96 * t1173 - t97 * t548 / 0.2e1;
t704 = t756 * pkin(10) - t189 * pkin(5) / 0.2e1;
t1 = (t873 - t1125 / 0.2e1) * t669 + t701 + t704;
t231 = -t1020 * t669 ^ 2 - t508 * t547 + t509 * t548;
t708 = -t1 * qJD(1) + t231 * qJD(2) + t197 * qJD(3) + t207 * qJD(4);
t483 = t646 * (t686 / 0.2e1 + t684 / 0.2e1 - 0.1e1 / 0.2e1);
t705 = t909 - t1128 / 0.2e1 + t1129 / 0.2e1 - t161 / 0.2e1;
t5 = -t1120 / 0.2e1 + t762 * t691 + t739 + t705 * t694;
t707 = t5 * qJD(1) - t197 * qJD(2) + t571 * qJD(3) + t483 * qJD(4);
t7 = t738 + (t193 / 0.2e1 - t762) * t694 + t705 * t691;
t706 = t7 * qJD(1) - t207 * qJD(2) + t483 * qJD(3) - t571 * qJD(4);
t673 = t966 / 0.2e1;
t636 = t670 * qJD(4);
t631 = qJD(1) * t905;
t628 = -0.2e1 * t694 * t876;
t616 = t667 * t694;
t602 = -t1026 / 0.2e1 - t676 / 0.2e1 + t1158;
t601 = t685 * t1161 + t1055 / 0.2e1 + t1162;
t572 = t588 * qJD(2);
t518 = t878 - t966;
t462 = t483 * qJD(5);
t433 = -t901 + t1028 / 0.2e1 - t766 * t693;
t432 = -t900 - t1041 / 0.2e1 + t766 * t690;
t425 = t1171 + t1170;
t399 = t1171 + t834;
t382 = t635 + t710;
t377 = t510 * qJD(5) + t595 * t839;
t322 = t488 + t846;
t320 = t493 + t494;
t270 = t559 + t862 + t810;
t267 = t268 * qJD(5);
t262 = t864 + t595 * t1165 + t635 + t1071 / 0.2e1 - t1151 / 0.2e1;
t254 = t517 * t845 + t791;
t253 = t517 * t849 + t370 + t542;
t250 = t256 * qJD(6);
t249 = t255 * qJD(6);
t237 = t758 + t761;
t235 = t475 + t1022 / 0.2e1 + t540 - t1040 / 0.2e1;
t233 = t468 + t1025 / 0.2e1 + t798 * t694;
t225 = -t1103 / 0.2e1 + t759;
t223 = t370 + t759;
t221 = t742 + t1198;
t218 = t743 + t1199;
t211 = t870 + t729;
t209 = t871 + t728;
t172 = t493 + t506 * t1160 + t691 * t541 + (t543 + t1177) * t694;
t171 = t488 + t505 * t1159 + t691 * t814 + (t816 + t1178) * t694;
t165 = t786 * qJD(6);
t163 = t164 * qJD(6);
t160 = t517 * t844 + 0.2e1 * t468 + t791;
t158 = t691 * t795 + t543;
t155 = t540 + t757;
t154 = t541 + t700;
t143 = t693 * t843 + t341 + t751;
t136 = t735 + t1200;
t134 = t420 * t854 + t421 * t848 + t694 * t751 + t557 + t559;
t121 = t403 + t411 + t716;
t105 = t709 + t841;
t103 = t595 * t861 + t858 + t1110 / 0.2e1 - t1037 / 0.2e1 + t1023 / 0.2e1;
t101 = t361 + t506 * t853 + t364 + t505 * t845 + (t871 + t870) * t691;
t63 = t727 - t755;
t61 = t724 - t754;
t59 = t60 * qJD(5);
t56 = pkin(10) * t846 + t910 + t1126 / 0.2e1 + t1047 / 0.2e1 + t1030 / 0.2e1;
t54 = pkin(10) * t494 + t911 + t1124 / 0.2e1 + t1032 / 0.2e1 - t1045 / 0.2e1;
t35 = t161 * t844 + t856 + t1031 / 0.2e1 - t711;
t34 = t161 * t853 + t847 - t1046 / 0.2e1 - t712;
t31 = t514 + t702 - t752;
t20 = pkin(10) * t540 + t1160 * t133 + t161 * t849 + t193 * t844 + t387 * t861 + t693 * t812 - t718 + t764;
t19 = pkin(10) * t815 + t1159 * t132 + t161 * t855 + t193 * t852 + t385 * t861 + t690 * t812 - t719 + t765;
t11 = t860 * t1065 + t118 * t848 + t874 + (t97 / 0.2e1 + t117 * t1160) * t690 - t720;
t8 = t132 * t855 + t133 * t848 + t691 * t909 + t844 * t97 + t852 * t96 + t187 + t738 + t875;
t6 = t133 * t844 + t97 * t849 + t132 * t853 + t96 * t855 + t1120 / 0.2e1 + t1123 / 0.2e1 + t694 * t909 + t739;
t4 = t509 * t494 + t133 * t853 + t508 * t846 + t132 * t845 + t96 * t849 + t805 * t693 + (t899 + t806) * t690 - t750;
t2 = t161 * t861 + t193 * t860 - t701 + t704;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t818, t615 * qJD(2), t695 * t892, -t818, -t692 * t892, 0, -t533 * qJD(2), -t534 * qJD(2), 0, 0, t883, t1204, -t877, -t883, t880, 0, qJD(2) * t258 + t689 * t923, -qJD(2) * t259 + t889, qJD(2) * t116 + t1207, qJD(2) * t131 + qJD(3) * t208, 0, t877, -t880, t883, t1204, -t883, qJD(2) * t99 - t593 * t678 + t1207, qJD(2) * t141 - (t926 + t975) * t595, qJD(2) * t142 + qJD(4) * t553 - t889, qJD(2) * t98 + qJD(3) * t195 + qJD(4) * t228 (-qJD(5) * t515 - t595 * t917) * t517, -qJD(2) * t266 + qJD(5) * t273, qJD(2) * t308 + t515 * t970, t733, qJD(2) * t310 + t517 * t970, t883, qJD(2) * t51 + qJD(3) * t309 - qJD(4) * t299 + qJD(5) * t115, qJD(2) * t52 + qJD(3) * t271 + qJD(4) * t384 + qJD(5) * t114, qJD(2) * t41 - qJD(3) * t265 - qJD(4) * t264, qJD(2) * t39 + qJD(3) * t57 + qJD(4) * t58 (qJD(2) * t421 - qJD(6) * t385 - t515 * t967) * t387, qJD(2) * t139 + qJD(5) * t173 + qJD(6) * t191, qJD(2) * t200 + qJD(5) * t216 - t385 * t965 (qJD(2) * t420 + qJD(6) * t387 - t515 * t969) * t385, qJD(2) * t199 - qJD(5) * t215 - t387 * t965, t733, qJD(2) * t23 + qJD(3) * t198 + qJD(4) * t226 + qJD(5) * t25 + qJD(6) * t50, qJD(2) * t24 + qJD(3) * t201 + qJD(4) * t227 + qJD(5) * t26 + qJD(6) * t49, qJD(2) * t16 + qJD(3) * t138 + qJD(4) * t174 + qJD(5) * t22, qJD(2) * t9 + qJD(3) * t29 + qJD(4) * t36 + qJD(5) * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t631, t919, t667 * t1053, -t631, -t667 * t1054, 0, -qJD(2) * t611 - t931, qJD(2) * t610 - t930, 0, 0, t884, t1205, t427, -t884, t1211, 0, -t979 + t992, -t978 - t991, t962 + (t1138 * t595 + t1139 * t593) * t1143, t960 + (t1138 * t402 - t1139 * t401) * t1143 + t382 * qJD(3), 0, -t427, -t1211, t884, t1205, -t884, t1018 + (-t593 * t672 + t1068) * qJD(2) - t926, t979 + t1009, t678 + t978 + t1008, t1019 + (t401 * t672 + t402 * t670) * qJD(2) + t262 * qJD(3) + t237 * qJD(4), -t691 * t745 - t1209, t646 * t924 - t267 - t944, -t593 * t916 + t986, t1063 * t769 + t1209, t893 + t985, -t822, t1082 + (t306 * t691 - t694 * t784) * qJD(2) + t399 * qJD(4) + t103 * qJD(5), t1073 + (t306 * t694 + t691 * t784) * qJD(2) + t425 * qJD(3) + qJD(4) * t517 + t105 * qJD(5), -qJD(2) * t787 + t1097 + t59, t1101 + (t306 * t670 + t669 * t787) * qJD(2) + t63 * qJD(3) + t61 * qJD(4), qJD(5) * t211 - t1190 + (t890 + t982) * t421, t958 + t121 * qJD(5) - t163 + (-t1093 - t1095) * t916, t951 + (t906 + t1092) * qJD(2) + t160 * qJD(5) + t218 * qJD(6), qJD(5) * t209 + t1190 + (t891 + t983) * t420, t952 + (-t907 - t1035) * qJD(2) + t154 * qJD(5) + t225 * qJD(6), t1209 - (-qJD(6) / 0.2e1 - t769) * t1063, t117 * t917 + t1115 + t171 * qJD(4) + t19 * qJD(5) + t35 * qJD(6) + (-t420 * t669 - t508 * t595 + t1122) * t916, -t118 * t917 + t1114 + t172 * qJD(4) + t20 * qJD(5) + t34 * qJD(6) + (-t421 * t669 - t509 * t595 + t1121) * t916, t1127 + (-t420 * t509 + t421 * t508 + (-t117 * t693 - t118 * t690) * t694) * qJD(2) + t101 * qJD(4) + t4 * qJD(5), t1142 + (-t1058 * t189 - t117 * t508 + t118 * t509) * qJD(2) + t31 * qJD(3) + t11 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t881, t554, t1206, qJD(2) * t382 + t1003, 0, 0, 0, 0, 0, 0, t1206, -t881, -t554, qJD(2) * t262 + t1006, 0, 0, 0, 0, 0, 0, t941, qJD(2) * t425 + t988, -t989, qJD(2) * t63 + qJD(4) * t270 + t1134, 0, 0, 0, 0, 0, 0, qJD(5) * t155 + qJD(6) * t223 + t1005, qJD(5) * t254 + qJD(6) * t221 + t1004, qJD(5) * t136 + t1010, t1109 + t31 * qJD(2) + t134 * qJD(4) + t6 * qJD(5) + (t1043 + t1065 + t1091) * qJD(3) * t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, -t884, t768, qJD(2) * t237 + t994, 0, 0, 0, 0, 0, 0, qJD(2) * t399 - t987, qJD(2) * t517 + t984, -t990, qJD(2) * t61 + qJD(3) * t270 + t1133, 0, 0, 0, 0, 0, 0, qJD(2) * t171 + qJD(5) * t158 + qJD(6) * t233 + t996, qJD(2) * t172 + qJD(5) * t253 + qJD(6) * t235 + t995, qJD(2) * t101 + qJD(5) * t143 + t1007, t1108 + t11 * qJD(2) + t134 * qJD(3) + t8 * qJD(5) + (-t1063 + t1088 - t1090) * t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1202, t772, t821 * t515, t1202, t821 * t517, -t572, qJD(2) * t103 - qJD(5) * t193 + t1012, qJD(2) * t105 + qJD(5) * t192 + t1013, t1131, 0, qJD(2) * t211 + t249 + (-t969 - t982) * t1029, t121 * qJD(2) - t515 * t833 - t165 + t954, qJD(2) * t160 + qJD(6) * t322 + t517 * t969 + t999, qJD(2) * t209 + t250 + (t967 - t983) * t1042, qJD(2) * t154 + qJD(6) * t320 + t517 * t967 - t1000, t721, t1113 + t19 * qJD(2) + t155 * qJD(3) + t158 * qJD(4) + (-t193 * t693 + t690 * t803) * qJD(5) + t56 * qJD(6), t1112 + t20 * qJD(2) + t254 * qJD(3) + t253 * qJD(4) + (t193 * t690 + t693 * t803) * qJD(5) + t54 * qJD(6), t4 * qJD(2) + t136 * qJD(3) + t143 * qJD(4) + qJD(5) * t789 + t1116, t1130 + t2 * qJD(2) + t6 * qJD(3) + t8 * qJD(4) + (-pkin(5) * t193 + pkin(10) * t789) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t722, t730, qJD(2) * t218 + qJD(5) * t322 + t385 * t820, t723, qJD(2) * t225 + qJD(5) * t320 + t387 * t820, t377, qJD(2) * t35 + qJD(3) * t223 + qJD(4) * t233 + qJD(5) * t56 - qJD(6) * t97 + t1135, qJD(2) * t34 + qJD(3) * t221 + qJD(4) * t235 + qJD(5) * t54 + qJD(6) * t96 + t1136, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t631, -t919, -t695 * t894, t631, t692 * t894, 0, t931, t930, 0, 0, -t884, -t1205, t554, t884, -t881, 0, t923 - t992, t976 + t991, -t962, qJD(3) * t383 - t960, 0, -t554, t881, -t884, -t1205, t884, -t1018, -t923 - t1009, t678 - t976 - t1008, -qJD(3) * t261 - qJD(4) * t236 - t1019, t517 * t879 - t1209, -t267 + t944, t595 * t968 - t986, -t515 * t878 + t1209, t888 - t985, t822, qJD(4) * t400 + qJD(5) * t102 - t691 * t976 - t1082, -qJD(3) * t424 + qJD(5) * t104 + t678 * t694 - t1073, qJD(3) * t428 - t1097 + t59, qJD(3) * t64 + qJD(4) * t62 - t1101, qJD(5) * t212 - t421 * t982 - t1190, qJD(5) * t122 - t163 - t958, -qJD(5) * t159 + qJD(6) * t219 - t951, qJD(5) * t210 - t420 * t983 + t1190, qJD(5) * t153 + qJD(6) * t224 - t952, t1209 - (t932 + qJD(6) / 0.2e1) * t1063, -qJD(3) * t230 - qJD(4) * t169 - qJD(5) * t17 - qJD(6) * t32 - t1115, -qJD(3) * t293 - qJD(4) * t170 - qJD(5) * t18 - qJD(6) * t33 - t1114, -qJD(3) * t196 - qJD(4) * t100 - qJD(5) * t3 - t1127, -qJD(3) * t30 - qJD(4) * t10 - qJD(5) * t1 - t1142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t636, -t664, t646 * qJD(5), 0, t664, 0, 0, t670 * t966 + t973, -t670 * t968 + t972, 0, t636, -t664 * t686 - t819, -qJD(6) * t619 + t691 * t801, -qJD(5) * t622 - t691 * t886, -t664 * t684 + t819, qJD(5) * t621 - t691 * t885, t664, qJD(5) * t286 + qJD(6) * t419 + t693 * t973, -qJD(5) * t287 - qJD(6) * t418 - t690 * t973, qJD(4) * t620 - qJD(5) * t229, qJD(4) * t312 + qJD(5) * t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, t927, 0, t938, 0, 0, 0, 0, 0, 0, 0, -t925, -t927, -t945, 0, 0, 0, 0, 0, 0, -t882, -t936, t935, t1060, 0, 0, 0, 0, 0, 0, -t948, -t942, -t953, t1017 - t1137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t667, t1196, 0, 0, 0, 0, 0, 0, t770, t616, 0, t1189, 0, 0, 0, 0, 0, 0, qJD(6) * t602 - t832, qJD(6) * t601 - t831, -t777, t783 + t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1203, -t771, t821 * t691, -t1203, t518, t928, -t669 * t968 - t749, -t669 * t966 - t748, t1061, 0, t1001 - t920 + (-t686 * t916 - t659) * t691, t1197 * t691 + t628 + t961, t661 + t775, t1002 + t920 + (-t684 * t916 + t659) * t691, -t776 + t887, t744 (t690 * t802 - t902) * qJD(5) + t433 * qJD(6) + t782 (-pkin(10) * t1024 + (pkin(5) * t693 + t669 * t690) * t691) * qJD(5) + t432 * qJD(6) + t781, qJD(5) * t785 + t790 (-pkin(5) * t1059 + pkin(10) * t785) * qJD(5) + t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1208, -t714, t690 * t778 + t998, t1208, t693 * t778 + t997, -t878 / 0.2e1 + t673, qJD(4) * t602 + qJD(5) * t433 - qJD(6) * t509 - t780, qJD(4) * t601 + qJD(5) * t432 + qJD(6) * t508 - t779, 0, -t974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1211, t427, -t1206, -qJD(2) * t383 - t1003, 0, 0, 0, 0, 0, 0, -t1206, t1211, -t427, qJD(2) * t261 + qJD(4) * t595 - t1006, 0, 0, 0, 0, 0, 0, t888 + t893 - t941, qJD(2) * t424 - t971 - t988, -qJD(2) * t428 + t989, -qJD(2) * t64 - qJD(4) * t269 - t1134, 0, 0, 0, 0, 0, 0, qJD(2) * t230 + qJD(5) * t156 + qJD(6) * t222 - t1005, qJD(2) * t293 - qJD(5) * t251 + qJD(6) * t220 - t1004, qJD(2) * t196 + qJD(5) * t137 - t1010, qJD(2) * t30 + qJD(4) * t135 - qJD(5) * t5 - t1109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t925, -t927, 0, -t938, 0, 0, 0, 0, 0, 0, 0, t925, t927, t945, 0, 0, 0, 0, 0, 0, t882, t936, -t935, -t1060, 0, 0, 0, 0, 0, 0, t948, t942, t953, t1017 + t1137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t943, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462 + t1011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, -t1191, 0, 0, 0, 0, 0, 0, 0, 0, t793 + t956, -t947 + t1015, -qJD(5) * t837 + t959 (-pkin(10) * t837 - t1145) * qJD(5) - t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t792 + t949, -t740 + t950, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, t884, -t768, qJD(2) * t236 - t923 - t994, 0, 0, 0, 0, 0, 0, -qJD(2) * t400 + t971 + t987, -t984 + (t970 - t977) * t694, t990, -qJD(2) * t62 + qJD(3) * t269 - t1133, 0, 0, 0, 0, 0, 0, qJD(2) * t169 + qJD(5) * t157 - qJD(6) * t232 - t996, qJD(2) * t170 - qJD(5) * t252 - qJD(6) * t234 - t995, qJD(2) * t100 + qJD(5) * t144 - t1007, qJD(2) * t10 - qJD(3) * t135 - qJD(5) * t7 - t1108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t667, -t1196, 0, 0, 0, 0, 0, 0, -t770, -t616, 0, -t1189, 0, 0, 0, 0, 0, 0, -qJD(6) * t600 + t832, -qJD(6) * t599 + t831, t777, -t783 + t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t925, 0, 0, 0, 0, 0, 0, 0, 0, 0, t943, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462 - t1011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1191, t821 * t694, 0, 0, 0, 0, 0, 0, 0, 0, t740 + t955, t792 - t946, -qJD(5) * t620 + t957 (pkin(10) * t836 - t1147) * qJD(5) - t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t774 - t1015, -t773 + t793, 0, -t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1202, -t772, -t769 * t595, -t1202, -t745, -t572, -qJD(2) * t102 - qJD(4) * t1065 - t694 * t923 - t1012, -qJD(2) * t104 + qJD(3) * t1065 - t595 * t972 - t1013, -t1131, 0, -qJD(2) * t212 + t693 * t896 + t249, -qJD(2) * t122 - t165 - t954, qJD(2) * t159 + qJD(6) * t323 - t999, -qJD(2) * t210 + t690 * t897 + t250, -qJD(2) * t153 + qJD(6) * t319 + t1000, -t721, qJD(2) * t17 - qJD(3) * t156 - qJD(4) * t157 + qJD(6) * t55 - t1113, qJD(2) * t18 + qJD(3) * t251 + qJD(4) * t252 + qJD(6) * t53 - t1112, qJD(2) * t3 - qJD(3) * t137 - qJD(4) * t144 - t1116, qJD(2) * t1 + qJD(3) * t5 + qJD(4) * t7 - t1130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1203, t771, -t879, t1203, -t878, -t928, t749, t748, -t1061, 0, t663 * t686 - t1001 - t920, -0.2e1 * t691 * t817 + t628 - t961, t666 - t775, t663 * t684 - t1002 + t920, -t665 + t776, -t744, -qJD(6) * t524 - t782, qJD(6) * t523 - t781, -t790, -t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t878, t937, 0, 0, 0, 0, 0, 0, 0, 0, -t956, t947, -t959, t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937, -t878, 0, 0, 0, 0, 0, 0, 0, 0, -t955, t946, -t957, t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t876, t647 * qJD(6), 0, -t876, 0, 0, -pkin(5) * t964, -pkin(5) * t963, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1192, -t713, -t824 + t963, t1193, -t826 - t964, -t763, -pkin(10) * t963 - t725, pkin(10) * t964 - t726, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t722, -t730, -qJD(2) * t219 - qJD(5) * t323 + t897, -t723, -qJD(2) * t224 - qJD(5) * t319 + t896, t377, qJD(2) * t32 - qJD(3) * t222 + qJD(4) * t232 - qJD(5) * t55 - t1135, qJD(2) * t33 - qJD(3) * t220 + qJD(4) * t234 - qJD(5) * t53 - t1136, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1208, t714, -t998 + (t891 - t967) * t691, -t1208, t663 * t693 + t660 - t997, t878 / 0.2e1 + t673, qJD(4) * t600 + qJD(5) * t524 + t780, qJD(4) * t599 - qJD(5) * t523 + t779, 0, t974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t949, -t950, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t774, t773, 0, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1192, t713, t824, -t1193, t826, t763, t725, t726, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
