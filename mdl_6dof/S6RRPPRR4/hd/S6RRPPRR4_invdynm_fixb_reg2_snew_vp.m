% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPPRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 10:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPPRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 10:25:47
% EndTime: 2019-05-06 10:27:07
% DurationCPUTime: 85.95s
% Computational Cost: add. (393828->1057), mult. (1066834->1483), div. (0->0), fcn. (831612->12), ass. (0->738)
t2084 = sin(pkin(6));
t2089 = sin(qJ(2));
t2239 = qJDD(1) * t2089;
t2093 = cos(qJ(2));
t2286 = qJD(1) * t2093;
t2048 = (qJD(2) * t2286 + t2239) * t2084;
t2083 = sin(pkin(11));
t2085 = cos(pkin(11));
t2252 = t2084 * t2089;
t2235 = qJD(1) * t2252;
t2070 = qJD(2) * t2235;
t2238 = qJDD(1) * t2093;
t2198 = t2084 * t2238 - t2070;
t1991 = t2048 * t2085 + t2083 * t2198;
t2251 = t2084 * t2093;
t2234 = qJD(1) * t2251;
t2037 = t2083 * t2235 - t2085 * t2234;
t2086 = cos(pkin(6));
t2076 = qJD(1) * t2086 + qJD(2);
t2020 = t2037 * t2076;
t1936 = -t2020 + t1991;
t2302 = t2076 ^ 2;
t2039 = t2083 * t2234 + t2085 * t2235;
t2303 = t2039 ^ 2;
t1999 = -t2303 - t2302;
t2075 = qJDD(1) * t2086 + qJDD(2);
t2262 = t2039 * t2037;
t2315 = t2262 + t2075;
t2335 = t2315 * t2083;
t1891 = t1999 * t2085 - t2335;
t2334 = t2315 * t2085;
t1892 = t1999 * t2083 + t2334;
t2165 = t1891 * t2093 - t1892 * t2089;
t1769 = -t1936 * t2084 + t2086 * t2165;
t1820 = t1891 * t2089 + t1892 * t2093;
t2090 = sin(qJ(1));
t2094 = cos(qJ(1));
t2428 = pkin(7) * (t1769 * t2094 - t1820 * t2090);
t2427 = pkin(7) * (t1769 * t2090 + t1820 * t2094);
t1767 = t1936 * t2086 + t2084 * t2165;
t2426 = pkin(8) * (t1767 * t2084 + t1769 * t2086);
t2425 = pkin(1) * t1767;
t2424 = pkin(1) * t1769;
t2034 = t2037 ^ 2;
t1968 = -t2302 - t2034;
t2317 = t2075 - t2262;
t2352 = t2085 * t2317;
t1877 = t1968 * t2083 + t2352;
t2360 = t2083 * t2317;
t1880 = -t1968 * t2085 + t2360;
t2169 = t1877 * t2093 - t1880 * t2089;
t2021 = t2076 * t2039;
t2215 = t2048 * t2083 - t2085 * t2198;
t2318 = t2021 + t2215;
t1756 = -t2084 * t2318 + t2086 * t2169;
t1793 = t1877 * t2089 + t1880 * t2093;
t2423 = pkin(7) * (t1756 * t2094 - t1793 * t2090);
t2422 = pkin(7) * (t1756 * t2090 + t1793 * t2094);
t1754 = t2084 * t2169 + t2086 * t2318;
t2421 = pkin(8) * (t1754 * t2084 + t1756 * t2086);
t2016 = t2302 - t2034;
t1905 = t2016 * t2083 - t2334;
t1909 = t2016 * t2085 + t2335;
t2160 = t1905 * t2093 + t1909 * t2089;
t2319 = t2021 - t2215;
t1780 = t2084 * t2319 + t2086 * t2160;
t1826 = t1905 * t2089 - t1909 * t2093;
t2418 = t1780 * t2090 + t1826 * t2094;
t2417 = t1780 * t2094 - t1826 * t2090;
t2415 = pkin(1) * t1754;
t2414 = pkin(1) * t1756;
t2313 = -t2303 + t2302;
t1903 = t2085 * t2313 + t2360;
t1906 = t2083 * t2313 - t2352;
t2162 = t1903 * t2093 - t1906 * t2089;
t2320 = -t2020 - t1991;
t1778 = t2084 * t2320 + t2086 * t2162;
t1824 = t1903 * t2089 + t1906 * t2093;
t2411 = t1778 * t2090 + t1824 * t2094;
t2410 = t1778 * t2094 - t1824 * t2090;
t2408 = pkin(8) * t1820;
t1776 = t2084 * t2160 - t2086 * t2319;
t2403 = pkin(8) * t1793;
t1774 = t2084 * t2162 - t2086 * t2320;
t2370 = t1936 * t2085 - t2083 * t2318;
t2275 = t2318 * t2085;
t2371 = -t1936 * t2083 - t2275;
t2375 = -t2089 * t2370 + t2093 * t2371;
t2312 = t2303 - t2034;
t2376 = t2089 * t2371 + t2093 * t2370;
t2388 = -t2084 * t2312 + t2086 * t2376;
t2398 = -t2090 * t2388 + t2094 * t2375;
t2397 = t2090 * t2375 + t2094 * t2388;
t2314 = -t2303 - t2034;
t2326 = t2083 * t2319 + t2085 * t2320;
t2327 = -t2083 * t2320 + t2085 * t2319;
t2363 = t2089 * t2327 + t2093 * t2326;
t2377 = -t2084 * t2314 + t2086 * t2363;
t2396 = pkin(1) * t2377;
t2378 = t2084 * t2363 + t2086 * t2314;
t2395 = pkin(1) * t2378;
t2394 = pkin(2) * t1891;
t2393 = qJ(3) * t1891;
t2392 = qJ(3) * t1892;
t2389 = t2084 * t2376 + t2086 * t2312;
t2362 = -t2089 * t2326 + t2093 * t2327;
t2387 = pkin(7) * (-t2090 * t2377 + t2094 * t2362);
t2386 = pkin(7) * (t2090 * t2362 + t2094 * t2377);
t2385 = (-t2084 * t2378 - t2086 * t2377) * pkin(8);
t2384 = pkin(2) * t1877;
t2383 = pkin(8) * t2362;
t2382 = qJ(3) * t1877;
t2381 = qJ(3) * t1880;
t2374 = pkin(2) * t2326;
t2373 = qJ(3) * t2326;
t2325 = qJ(4) * t1936;
t2372 = -pkin(2) * t2314 + qJ(3) * t2327;
t2131 = (-t2037 * t2083 - t2039 * t2085) * t2076;
t2132 = (-t2037 * t2085 + t2039 * t2083) * t2076;
t2307 = -t2089 * t2131 + t2093 * t2132;
t2253 = t2084 * t2075;
t2308 = t2089 * t2132 + t2093 * t2131;
t2328 = t2086 * t2308 - t2253;
t2369 = -t2090 * t2328 + t2094 * t2307;
t2255 = t2076 * t2085;
t2104 = t2037 * t2255 + t2083 * t2215;
t2256 = t2076 * t2083;
t2206 = t2037 * t2256 - t2085 * t2215;
t2310 = -t2089 * t2206 + t2093 * t2104;
t2226 = t2084 * t2262;
t2309 = t2089 * t2104 + t2093 * t2206;
t2329 = t2086 * t2309 + t2226;
t2368 = -t2090 * t2329 + t2094 * t2310;
t2205 = t1991 * t2085 - t2039 * t2256;
t2207 = t1991 * t2083 + t2039 * t2255;
t2306 = -t2089 * t2207 + t2093 * t2205;
t2305 = t2089 * t2205 + t2093 * t2207;
t2330 = t2086 * t2305 - t2226;
t2367 = -t2090 * t2330 + t2094 * t2306;
t2366 = t2090 * t2307 + t2094 * t2328;
t2365 = t2090 * t2310 + t2094 * t2329;
t2364 = t2090 * t2306 + t2094 * t2330;
t2300 = 2 * qJD(4);
t2087 = sin(qJ(6));
t2088 = sin(qJ(5));
t2092 = cos(qJ(5));
t2006 = t2037 * t2088 + t2076 * t2092;
t2032 = qJD(5) + t2039;
t2091 = cos(qJ(6));
t1949 = t2006 * t2087 - t2032 * t2091;
t1951 = t2006 * t2091 + t2032 * t2087;
t1870 = t1951 * t1949;
t2218 = t2088 * t2075 - t2092 * t2215;
t1900 = -qJD(5) * t2006 - t2218;
t1895 = qJDD(6) - t1900;
t2322 = -t1870 + t1895;
t2345 = t2087 * t2322;
t2004 = -t2037 * t2092 + t2076 * t2088;
t1932 = t2006 * t2004;
t1986 = qJDD(5) + t1991;
t2321 = -t1932 + t1986;
t2344 = t2088 * t2321;
t2340 = t2091 * t2322;
t2339 = t2092 * t2321;
t2059 = t2086 * t2075;
t2333 = t2084 * t2308 + t2059;
t2225 = t2086 * t2262;
t2332 = t2084 * t2305 + t2225;
t2331 = t2084 * t2309 - t2225;
t2008 = pkin(4) * t2039 - pkin(9) * t2076;
t2068 = g(1) * t2090 - g(2) * t2094;
t2095 = qJD(1) ^ 2;
t2290 = pkin(8) * t2084;
t2044 = qJDD(1) * pkin(1) + t2095 * t2290 + t2068;
t2022 = t2086 * g(3) + t2084 * t2044;
t2130 = pkin(2) * t2076 - qJ(3) * t2235;
t2082 = t2093 ^ 2;
t2080 = t2084 ^ 2;
t2254 = t2080 * t2095;
t2228 = t2082 * t2254;
t1919 = pkin(2) * t2198 + qJ(3) * t2228 - t2130 * t2235 - qJDD(3) + t2022;
t2316 = -pkin(3) * t2021 + t2039 * t2300 + t1919;
t2098 = -t2316 - t2325;
t2204 = t2215 * pkin(3);
t1710 = -pkin(4) * t2034 + pkin(9) * t2215 - t2039 * t2008 + t2098 + t2204;
t2069 = g(1) * t2094 + g(2) * t2090;
t2045 = -pkin(1) * t2095 + qJDD(1) * t2290 - t2069;
t2261 = t2044 * t2086;
t2216 = -t2089 * t2045 + t2093 * t2261;
t2247 = t2089 * t2095;
t2227 = t2080 * t2247;
t2287 = qJD(1) * t2076;
t1884 = t2075 * pkin(2) - t2048 * qJ(3) + (pkin(2) * t2227 + (qJ(3) * t2287 - g(3)) * t2084) * t2093 + t2216;
t1966 = -g(3) * t2252 + t2093 * t2045 + t2089 * t2261;
t1885 = -pkin(2) * t2228 + qJ(3) * t2198 - t2076 * t2130 + t1966;
t2220 = -t1884 * t2085 + t2083 * t1885;
t2128 = -pkin(3) * t2075 - qJ(4) * t2302 + qJDD(4) + t2220;
t2301 = 2 * qJD(3);
t2245 = pkin(3) * t2037 - qJ(4) * t2039 + t2301;
t2099 = -t2075 * pkin(9) - t2320 * pkin(4) + (pkin(9) * t2037 + t2245) * t2039 + t2128;
t1625 = t1710 * t2092 + t2088 * t2099;
t1928 = pkin(5) * t2004 - pkin(10) * t2006;
t2304 = t2032 ^ 2;
t1601 = -pkin(5) * t2304 + pkin(10) * t1986 - t1928 * t2004 + t1625;
t2167 = t2083 * t1884 + t2085 * t1885;
t2103 = -pkin(3) * t2302 + t2075 * qJ(4) - t2037 * t2245 + t2167;
t1688 = -t2215 * pkin(4) - t2034 * pkin(9) + (t2300 + t2008) * t2076 + t2103;
t1901 = -qJD(5) * t2004 + t2075 * t2092 + t2088 * t2215;
t2266 = t2032 * t2004;
t2142 = t1901 - t2266;
t2265 = t2032 * t2006;
t1635 = -t2142 * pkin(10) + (-t1900 + t2265) * pkin(5) + t1688;
t1550 = t1601 * t2087 - t1635 * t2091;
t1551 = t1601 * t2091 + t1635 * t2087;
t1503 = -t1550 * t2091 + t1551 * t2087;
t2237 = pkin(5) * t2092 + pkin(4);
t2324 = t1503 * (pkin(10) * t2088 + t2237);
t2323 = t2080 * (-t2086 * t2095 + t2287);
t1504 = t1550 * t2087 + t1551 * t2091;
t1624 = t1710 * t2088 - t2092 * t2099;
t1554 = -t1624 * t2092 + t1625 * t2088;
t2057 = t2076 * t2234;
t2012 = t2057 + t2048;
t2000 = qJD(6) + t2004;
t2219 = -t2087 * t1901 + t1986 * t2091;
t1742 = (-qJD(6) + t2000) * t1951 + t2219;
t2164 = -t2091 * t1901 - t2087 * t1986;
t1812 = -qJD(6) * t1949 - t2164;
t1888 = t2000 * t1949;
t1744 = t1812 + t1888;
t1661 = t1742 * t2087 - t1744 * t2091;
t1491 = -pkin(10) * t1661 - t1503;
t2311 = t2088 * t1491 - t1661 * t2237;
t1847 = (qJD(5) - t2032) * t2006 + t2218;
t1947 = t1949 ^ 2;
t1948 = t1951 ^ 2;
t1997 = t2000 ^ 2;
t2001 = t2004 ^ 2;
t2002 = t2006 ^ 2;
t2299 = -pkin(3) - pkin(9);
t2298 = pkin(2) * t2084;
t2297 = pkin(2) * t2086;
t2296 = pkin(3) * t2083;
t2295 = pkin(3) * t2085;
t2294 = pkin(4) * t1554;
t2293 = pkin(4) * t1688;
t1851 = -t1901 - t2266;
t1750 = -t1847 * t2088 + t1851 * t2092;
t2292 = pkin(4) * t1750;
t2291 = pkin(5) * t2088;
t2289 = pkin(9) * t1554;
t2288 = pkin(10) * t1503;
t1784 = t2039 * t2301 + t2220;
t1785 = -0.2e1 * qJD(3) * t2037 + t2167;
t1674 = -t1784 * t2085 + t1785 * t2083;
t2283 = t1674 * t2089;
t2282 = t1674 * t2093;
t1795 = t1870 + t1895;
t2281 = t1795 * t2087;
t2280 = t1795 * t2091;
t1874 = t1932 + t1986;
t2279 = t1874 * t2088;
t2278 = t1874 * t2092;
t2277 = t1919 * t2083;
t2276 = t1919 * t2085;
t2268 = t2000 * t2087;
t2267 = t2000 * t2091;
t2264 = t2032 * t2088;
t2263 = t2032 * t2092;
t2066 = t2093 * t2227;
t2046 = t2066 + t2075;
t2260 = t2046 * t2089;
t2259 = t2046 * t2093;
t2047 = -t2066 + t2075;
t2258 = t2047 * t2089;
t2257 = t2047 * t2093;
t1600 = -pkin(5) * t1986 - pkin(10) * t2304 + t1928 * t2006 + t1624;
t1597 = t2087 * t1600;
t2249 = t2088 * t1688;
t2248 = t2089 * t2022;
t1598 = t2091 * t1600;
t1686 = t2092 * t1688;
t2246 = t2093 * t2022;
t2243 = -pkin(5) * t1600 + pkin(10) * t1504;
t1725 = t2076 * t2300 + t2103;
t1731 = t2039 * t2245 + t2128;
t2242 = -pkin(3) * t1731 + qJ(4) * t1725;
t2241 = pkin(3) * t2320 + qJ(4) * t2319;
t2081 = t2089 ^ 2;
t2240 = t2081 + t2082;
t2236 = t2084 * t2287;
t2233 = t2088 * t1870;
t2232 = t2092 * t1870;
t2231 = t2083 * t1932;
t2230 = t2085 * t1932;
t2229 = t2081 * t2254;
t1866 = -t1948 - t1997;
t1709 = -t1866 * t2087 - t2280;
t1745 = (qJD(6) + t2000) * t1949 + t2164;
t2224 = pkin(5) * t1745 + pkin(10) * t1709 + t1597;
t1835 = -t1997 - t1947;
t1695 = t1835 * t2091 - t2345;
t1889 = t2000 * t1951;
t2136 = qJD(6) * t1951 - t2219;
t1741 = -t1889 - t2136;
t2223 = pkin(5) * t1741 + pkin(10) * t1695 - t1598;
t2222 = qJ(4) * t2083 + pkin(2);
t1912 = -t2002 - t2304;
t1816 = t1912 * t2092 - t2279;
t2221 = -pkin(9) * t1816 + t1686;
t1555 = t2088 * t1624 + t1625 * t2092;
t1675 = t1784 * t2083 + t1785 * t2085;
t2214 = -t2068 * t2090 - t2069 * t2094;
t1663 = t1742 * t2091 + t1744 * t2087;
t1822 = t1947 + t1948;
t2213 = pkin(5) * t1822 + pkin(10) * t1663 + t1504;
t1487 = t1504 * t2088 - t1600 * t2092;
t2212 = -pkin(4) * t1487 - t2243;
t2211 = -pkin(4) * t1816 + t1625;
t1620 = t1663 * t2088 + t1822 * t2092;
t2210 = -pkin(9) * t1620 + t1491 * t2092 + t1661 * t2291;
t2209 = -pkin(3) * t1554 + qJ(4) * t1688 - t2289;
t2065 = qJDD(1) * t2094 - t2090 * t2095;
t2208 = -pkin(7) * t2065 - g(3) * t2090;
t1846 = (qJD(5) + t2032) * t2006 + t2218;
t2203 = pkin(4) * t1846 + t1686;
t2202 = pkin(4) * t2142 - t2249;
t2033 = -t2302 - t2229;
t1975 = -t2033 * t2089 - t2257;
t2201 = pkin(8) * t1975 - t2248;
t2052 = -t2302 - t2228;
t1994 = t2052 * t2093 - t2260;
t2200 = pkin(8) * t1994 + t2246;
t1894 = -t2304 - t2001;
t1798 = t1894 * t2088 + t2339;
t2199 = -pkin(9) * t1798 + t2249;
t1470 = -t1487 * t2085 + t1503 * t2083;
t1471 = t1487 * t2083 + t1503 * t2085;
t2195 = t1470 * t2093 + t1471 * t2089;
t1538 = -t1554 * t2085 + t1688 * t2083;
t1539 = t1554 * t2083 + t1688 * t2085;
t2194 = t1538 * t2093 + t1539 * t2089;
t1561 = -t1620 * t2085 + t1661 * t2083;
t1562 = t1620 * t2083 + t1661 * t2085;
t2193 = t1561 * t2093 + t1562 * t2089;
t1743 = t1812 - t1888;
t1662 = t1741 * t2091 - t1743 * t2087;
t1869 = t1948 - t1947;
t1631 = t1662 * t2088 - t1869 * t2092;
t1660 = t1741 * t2087 + t1743 * t2091;
t1567 = -t1631 * t2085 + t1660 * t2083;
t1568 = t1631 * t2083 + t1660 * t2085;
t2192 = t1567 * t2093 + t1568 * t2089;
t1638 = t1695 * t2088 + t1741 * t2092;
t1694 = t1835 * t2087 + t2340;
t1585 = -t1638 * t2085 + t1694 * t2083;
t1586 = t1638 * t2083 + t1694 * t2085;
t2191 = t1585 * t2093 + t1586 * t2089;
t1642 = t1709 * t2088 + t1745 * t2092;
t1708 = t1866 * t2091 - t2281;
t1592 = -t1642 * t2085 + t1708 * t2083;
t1593 = t1642 * t2083 + t1708 * t2085;
t2190 = t1592 * t2093 + t1593 * t2089;
t1887 = -t1948 + t1997;
t1728 = -t1887 * t2087 + t2340;
t1648 = t1728 * t2088 - t1744 * t2092;
t1726 = t1887 * t2091 + t2345;
t1604 = -t1648 * t2085 + t1726 * t2083;
t1606 = t1648 * t2083 + t1726 * t2085;
t2189 = t1604 * t2093 + t1606 * t2089;
t1886 = t1947 - t1997;
t1729 = t1886 * t2091 - t2281;
t1740 = -t1889 + t2136;
t1649 = t1729 * t2088 + t1740 * t2092;
t1727 = t1886 * t2087 + t2280;
t1605 = -t1649 * t2085 + t1727 * t2083;
t1607 = t1649 * t2083 + t1727 * t2085;
t2188 = t1605 * t2093 + t1607 * t2089;
t1735 = t1949 * t2267 + t2087 * t2136;
t1682 = t1735 * t2088 + t2232;
t1734 = -t1949 * t2268 + t2091 * t2136;
t1627 = -t1682 * t2085 - t1734 * t2083;
t1629 = t1682 * t2083 - t1734 * t2085;
t2187 = t1627 * t2093 + t1629 * t2089;
t1737 = t1812 * t2091 - t1951 * t2268;
t1683 = t1737 * t2088 - t2232;
t1736 = t1812 * t2087 + t1951 * t2267;
t1628 = -t1683 * t2085 + t1736 * t2083;
t1630 = t1683 * t2083 + t1736 * t2085;
t2186 = t1628 * t2093 + t1630 * t2089;
t1646 = t1725 * t2083 - t1731 * t2085;
t1647 = t1725 * t2085 + t1731 * t2083;
t2185 = t1646 * t2093 + t1647 * t2089;
t1814 = (-t1949 * t2091 + t1951 * t2087) * t2000;
t1747 = t1814 * t2088 - t1895 * t2092;
t1813 = (-t1949 * t2087 - t1951 * t2091) * t2000;
t1669 = -t1747 * t2085 + t1813 * t2083;
t1670 = t1747 * t2083 + t1813 * t2085;
t2184 = t1669 * t2093 + t1670 * t2089;
t2183 = t1675 * t2089 + t2282;
t1883 = -t2001 - t2002;
t1689 = -t1750 * t2085 + t1883 * t2083;
t1690 = t1750 * t2083 + t1883 * t2085;
t2182 = t1689 * t2093 + t1690 * t2089;
t1749 = -t1846 * t2088 + t2092 * t2142;
t1929 = t2002 - t2001;
t1697 = -t1749 * t2085 + t1929 * t2083;
t1698 = t1749 * t2083 + t1929 * t2085;
t2181 = t1697 * t2093 + t1698 * t2089;
t1703 = -t1798 * t2085 + t1846 * t2083;
t1704 = t1798 * t2083 + t1846 * t2085;
t2180 = t1703 * t2093 + t1704 * t2089;
t1711 = -t1816 * t2085 + t2083 * t2142;
t1712 = t1816 * t2083 + t2085 * t2142;
t2179 = t1711 * t2093 + t1712 * t2089;
t1957 = -t2002 + t2304;
t1828 = t1957 * t2092 + t2344;
t1719 = -t1828 * t2085 - t1851 * t2083;
t1721 = t1828 * t2083 - t1851 * t2085;
t2178 = t1719 * t2093 + t1721 * t2089;
t1956 = t2001 - t2304;
t1829 = t1956 * t2088 + t2278;
t1720 = -t1829 * t2085 - t1847 * t2083;
t1722 = t1829 * t2083 - t1847 * t2085;
t2177 = t1720 * t2093 + t1722 * t2089;
t1840 = -t1900 * t2092 - t2004 * t2264;
t1786 = t1840 * t2085 - t2231;
t1788 = -t1840 * t2083 - t2230;
t2176 = t1786 * t2093 + t1788 * t2089;
t1842 = t1901 * t2088 + t2006 * t2263;
t1787 = -t1842 * t2085 + t2231;
t1789 = t1842 * t2083 + t2230;
t2175 = t1787 * t2093 + t1789 * t2089;
t1871 = (-t2004 * t2088 - t2006 * t2092) * t2032;
t1833 = -t1871 * t2085 + t1986 * t2083;
t1834 = t1871 * t2083 + t1986 * t2085;
t2174 = t1833 * t2093 + t1834 * t2089;
t1965 = g(3) * t2251 - t2216;
t2153 = -t2093 * t1965 + t2089 * t1966;
t1876 = t1965 * t2089 + t1966 * t2093;
t2056 = t2076 * t2235;
t2009 = t2056 + t2198;
t2010 = -t2057 + t2048;
t2152 = t2009 * t2089 - t2010 * t2093;
t2013 = -t2056 + t2198;
t2151 = t2012 * t2093 + t2013 * t2089;
t2150 = t2033 * t2093 - t2258;
t2050 = t2302 - t2229;
t2149 = t2050 * t2093 + t2260;
t2148 = t2052 * t2089 + t2259;
t2051 = -t2302 + t2228;
t2147 = t2051 * t2089 + t2257;
t2146 = t2068 * t2094 - t2069 * t2090;
t2145 = -pkin(4) * t1642 - t2224;
t2144 = -pkin(4) * t1638 - t2223;
t2143 = -pkin(3) * t1816 + qJ(4) * t2142 + t2221;
t2141 = pkin(4) * t1883 - t1555;
t2140 = -pkin(4) * t1798 + t1624;
t1534 = -pkin(5) * t1694 + t1550;
t1565 = -pkin(10) * t1694 + t1597;
t2139 = -pkin(9) * t1638 - t1534 * t2088 + t1565 * t2092;
t1536 = -pkin(5) * t1708 + t1551;
t1570 = -pkin(10) * t1708 + t1598;
t2138 = -pkin(9) * t1642 - t1536 * t2088 + t1570 * t2092;
t2137 = -pkin(9) * t1750 - t1554;
t2135 = -pkin(4) * t1620 - t2213;
t2134 = -pkin(3) * t1620 + qJ(4) * t1661 + t2210;
t2133 = -pkin(9) * t1487 + t1503 * t2291 - t2092 * t2288;
t2129 = -pkin(3) * t1798 + qJ(4) * t1846 + t2199;
t2127 = pkin(4) * t1694 - t2092 * t1534 - t2088 * t1565;
t2126 = pkin(4) * t1708 - t2092 * t1536 - t2088 * t1570;
t1488 = t1504 * t2092 + t1600 * t2088;
t1451 = t1488 * t2299 + t2324;
t1455 = -qJ(4) * t1488 - t2212;
t1434 = -pkin(2) * t1488 + qJ(3) * t1471 + t1451 * t2085 + t1455 * t2083;
t1437 = -qJ(3) * t1470 - t1451 * t2083 + t1455 * t2085;
t1452 = -t1470 * t2089 + t1471 * t2093;
t2125 = pkin(8) * t1452 + t1434 * t2093 + t1437 * t2089;
t1621 = t1663 * t2092 - t1822 * t2088;
t1474 = t1621 * t2299 - t2311;
t1479 = -qJ(4) * t1621 - t2135;
t1453 = -pkin(2) * t1621 + qJ(3) * t1562 + t1474 * t2085 + t1479 * t2083;
t1454 = -qJ(3) * t1561 - t1474 * t2083 + t1479 * t2085;
t1514 = -t1561 * t2089 + t1562 * t2093;
t2124 = pkin(8) * t1514 + t1453 * t2093 + t1454 * t2089;
t1494 = t1555 * t2299 + t2293;
t1506 = -qJ(4) * t1555 + t2294;
t1458 = -pkin(2) * t1555 + qJ(3) * t1539 + t1494 * t2085 + t1506 * t2083;
t1464 = -qJ(3) * t1538 - t1494 * t2083 + t1506 * t2085;
t1489 = -t1538 * t2089 + t1539 * t2093;
t2123 = pkin(8) * t1489 + t1458 * t2093 + t1464 * t2089;
t1639 = t1695 * t2092 - t1741 * t2088;
t1484 = t1639 * t2299 + t2127;
t1508 = -qJ(4) * t1639 - t2144;
t1459 = -pkin(2) * t1639 + qJ(3) * t1586 + t1484 * t2085 + t1508 * t2083;
t1461 = -qJ(3) * t1585 - t1484 * t2083 + t1508 * t2085;
t1529 = -t1585 * t2089 + t1586 * t2093;
t2122 = pkin(8) * t1529 + t1459 * t2093 + t1461 * t2089;
t1643 = t1709 * t2092 - t1745 * t2088;
t1485 = t1643 * t2299 + t2126;
t1509 = -qJ(4) * t1643 - t2145;
t1460 = -pkin(2) * t1643 + qJ(3) * t1593 + t1485 * t2085 + t1509 * t2083;
t1463 = -qJ(3) * t1592 - t1485 * t2083 + t1509 * t2085;
t1535 = -t1592 * t2089 + t1593 * t2093;
t2121 = pkin(8) * t1535 + t1460 * t2093 + t1463 * t2089;
t1752 = -t1847 * t2092 - t1851 * t2088;
t1528 = t1752 * t2299 + t2141;
t1664 = -qJ(4) * t1752 + t2292;
t1495 = -pkin(2) * t1752 + qJ(3) * t1690 + t1528 * t2085 + t1664 * t2083;
t1505 = -qJ(3) * t1689 - t1528 * t2083 + t1664 * t2085;
t1618 = -t1689 * t2089 + t1690 * t2093;
t2120 = pkin(8) * t1618 + t1495 * t2093 + t1505 * t2089;
t1799 = t1894 * t2092 - t2344;
t1580 = -qJ(4) * t1799 - t2140;
t1595 = t1799 * t2299 + t2203;
t1515 = -pkin(2) * t1799 + qJ(3) * t1704 + t1580 * t2083 + t1595 * t2085;
t1522 = -qJ(3) * t1703 + t1580 * t2085 - t1595 * t2083;
t1633 = -t1703 * t2089 + t1704 * t2093;
t2119 = pkin(8) * t1633 + t1515 * t2093 + t1522 * t2089;
t1817 = -t1912 * t2088 - t2278;
t1581 = -qJ(4) * t1817 - t2211;
t1602 = t1817 * t2299 + t2202;
t1520 = -pkin(2) * t1817 + qJ(3) * t1712 + t1581 * t2083 + t1602 * t2085;
t1527 = -qJ(3) * t1711 + t1581 * t2085 - t1602 * t2083;
t1636 = -t1711 * t2089 + t1712 * t2093;
t2118 = pkin(8) * t1636 + t1520 * t2093 + t1527 * t2089;
t2097 = -t2204 + t2316;
t1782 = t2097 + t2325;
t1563 = qJ(3) * t1647 + (t2222 + t2295) * t1782;
t1576 = -t1646 * t2089 + t1647 * t2093;
t1582 = -qJ(3) * t1646 + (qJ(4) * t2085 - t2296) * t1782;
t2117 = pkin(8) * t1576 + t1563 * t2093 + t1582 * t2089;
t1691 = -pkin(3) * t2314 + t1725;
t1696 = -qJ(4) * t2314 + t1731;
t1596 = t1691 * t2085 + t1696 * t2083 + t2372;
t1611 = -t1691 * t2083 + t1696 * t2085 - t2373;
t2116 = t1596 * t2093 + t1611 * t2089 + t2383;
t1640 = t1675 + t2372;
t1656 = -t1674 - t2373;
t2115 = t1640 * t2093 + t1656 * t2089 + t2383;
t1733 = (t2318 + t2215) * pkin(3) + t2098;
t1665 = t2085 * t1733 + t2222 * t2318 + t2381;
t1672 = qJ(4) * t2275 - t1733 * t2083 + t2382;
t2114 = t1665 * t2093 + t1672 * t2089 + t2403;
t1732 = t2097 + 0.2e1 * t2325;
t1667 = t2392 + t2083 * t1732 - (-pkin(2) - t2295) * t1936;
t1673 = t1732 * t2085 - t1936 * t2296 + t2393;
t2113 = t1667 * t2093 + t1673 * t2089 + t2408;
t1770 = -pkin(2) * t2318 + t2276 - t2381;
t1823 = -t2277 - t2382;
t2112 = t1770 * t2093 + t1823 * t2089 - t2403;
t1781 = -pkin(2) * t1936 - t2277 - t2392;
t1832 = -t2276 - t2393;
t2111 = t1781 * t2093 + t1832 * t2089 - t2408;
t1943 = t2009 * t2093 + t2010 * t2089;
t2110 = pkin(8) * t1943 + t1876;
t2109 = -pkin(3) * t1638 + qJ(4) * t1694 + t2139;
t2108 = -pkin(3) * t1642 + qJ(4) * t1708 + t2138;
t2107 = -pkin(3) * t1750 + qJ(4) * t1883 + t2137;
t1608 = t1675 * t2093 - t2283;
t1666 = pkin(2) * t1919 + qJ(3) * t1675;
t2106 = pkin(8) * t1608 - qJ(3) * t2283 + t1666 * t2093;
t2105 = -pkin(3) * t1487 + qJ(4) * t1503 + t2133;
t2102 = -pkin(3) * t2317 - qJ(4) * t1968 + t1731;
t2101 = -pkin(3) * t1999 + qJ(4) * t2315 + t1725;
t2079 = t2084 * t2080;
t2064 = qJDD(1) * t2090 + t2094 * t2095;
t2054 = t2240 * t2254;
t2053 = (t2081 - t2082) * t2254;
t2049 = -pkin(7) * t2064 + g(3) * t2094;
t2019 = t2240 * t2236;
t2011 = (t2239 + (qJD(2) + t2076) * t2286) * t2084;
t2007 = t2048 * t2093 - t2081 * t2236;
t2003 = -t2082 * t2236 - t2089 * t2198;
t1993 = t2051 * t2093 - t2258;
t1992 = -t2050 * t2089 + t2259;
t1962 = (t2079 * t2093 * t2095 + t2012 * t2086) * t2089;
t1961 = (t2048 * t2084 + t2093 * t2323) * t2089;
t1960 = (t2084 * t2198 - t2089 * t2323) * t2093;
t1959 = (-t2079 * t2247 + (-t2070 + (-t2089 * t2287 + t2238) * t2084) * t2086) * t2093;
t1944 = -t2012 * t2089 + t2013 * t2093;
t1918 = t2013 * t2084 + t2086 * t2148;
t1917 = -t2084 * t2009 + t2086 * t2147;
t1916 = -t2084 * t2010 + t2086 * t2149;
t1915 = -t2086 * t2013 + t2084 * t2148;
t1914 = t2086 * t2009 + t2084 * t2147;
t1913 = t2086 * t2010 + t2084 * t2149;
t1911 = -t2084 * t2011 + t2086 * t2150;
t1910 = t2086 * t2011 + t2084 * t2150;
t1899 = -t2084 * t2053 + t2086 * t2151;
t1898 = t2084 * t2054 + t2086 * t2152;
t1897 = t2086 * t2053 + t2084 * t2151;
t1896 = -t2086 * t2054 + t2084 * t2152;
t1872 = (-t2004 * t2092 + t2006 * t2088) * t2032;
t1865 = t2084 * t2022 + t2086 * t2153;
t1864 = -t2086 * t2022 + t2084 * t2153;
t1843 = t1901 * t2092 - t2006 * t2264;
t1841 = -t1900 * t2088 + t2004 * t2263;
t1831 = t1956 * t2092 - t2279;
t1830 = -t1957 * t2088 + t2339;
t1818 = -t2248 + (-t1915 * t2084 - t1918 * t2086) * pkin(8);
t1811 = -t2246 + (-t1910 * t2084 - t1911 * t2086) * pkin(8);
t1801 = -pkin(1) * t1915 + t2084 * t1965 + t2086 * t2200;
t1800 = pkin(1) * t1918 - t2086 * t1965 + t2084 * t2200;
t1791 = -pkin(1) * t1910 + t2084 * t1966 + t2086 * t2201;
t1790 = pkin(1) * t1911 - t2086 * t1966 + t2084 * t2201;
t1772 = pkin(1) * t1865 + t1876 * t2290;
t1771 = pkin(8) * t1876 * t2086 - pkin(1) * t1864;
t1765 = -pkin(1) * t1896 + t2086 * t2110;
t1764 = pkin(1) * t1898 + t2084 * t2110;
t1763 = t2241 + t2374;
t1762 = (-t1864 * t2084 - t1865 * t2086) * pkin(8);
t1753 = (-t1896 * t2084 - t1898 * t2086) * pkin(8) - t2153;
t1751 = -t1846 * t2092 - t2088 * t2142;
t1748 = t1814 * t2092 + t1895 * t2088;
t1723 = -t1785 + t2394;
t1718 = -t1784 + t2384;
t1717 = -t1833 * t2089 + t1834 * t2093;
t1685 = t1737 * t2092 + t2233;
t1684 = t1735 * t2092 - t2233;
t1679 = -t1787 * t2089 + t1789 * t2093;
t1678 = -t1786 * t2089 + t1788 * t2093;
t1677 = -t1872 * t2084 + t2086 * t2174;
t1676 = t2086 * t1872 + t2084 * t2174;
t1671 = t2101 - t2394;
t1668 = t2102 - t2384;
t1655 = -t2084 * t1843 + t2086 * t2175;
t1654 = -t2084 * t1841 + t2086 * t2176;
t1653 = t2086 * t1843 + t2084 * t2175;
t1652 = t2086 * t1841 + t2084 * t2176;
t1651 = t1729 * t2092 - t1740 * t2088;
t1650 = t1728 * t2092 + t1744 * t2088;
t1645 = -t1720 * t2089 + t1722 * t2093;
t1644 = -t1719 * t2089 + t1721 * t2093;
t1632 = t1662 * t2092 + t1869 * t2088;
t1626 = -t1697 * t2089 + t1698 * t2093;
t1617 = -t1831 * t2084 + t2086 * t2177;
t1616 = -t2084 * t1830 + t2086 * t2178;
t1615 = t2086 * t1831 + t2084 * t2177;
t1614 = t2086 * t1830 + t2084 * t2178;
t1613 = -t2084 * t1817 + t2086 * t2179;
t1612 = t2086 * t1817 + t2084 * t2179;
t1610 = -t2084 * t1799 + t2086 * t2180;
t1609 = t2086 * t1799 + t2084 * t2180;
t1603 = -t2089 * t1781 + t2093 * t1832 - t2426;
t1594 = -t1669 * t2089 + t1670 * t2093;
t1591 = t2084 * t1919 + t2086 * t2183;
t1590 = -t2086 * t1919 + t2084 * t2183;
t1589 = -t2089 * t1770 + t2093 * t1823 - t2421;
t1588 = -t2084 * t1751 + t2086 * t2181;
t1587 = t2086 * t1751 + t2084 * t2181;
t1584 = -t2084 * t1752 + t2086 * t2182;
t1583 = t1752 * t2086 + t2084 * t2182;
t1579 = -t2084 * t1723 + t2086 * t2111 - t2425;
t1578 = t2086 * t1723 + t2084 * t2111 + t2424;
t1577 = pkin(2) * t1646 + t2242;
t1575 = -t2084 * t1718 + t2086 * t2112 - t2415;
t1574 = t2086 * t1718 + t2084 * t2112 + t2414;
t1573 = pkin(2) * t1711 + t2143;
t1572 = -t1748 * t2084 + t2086 * t2184;
t1571 = t2086 * t1748 + t2084 * t2184;
t1566 = pkin(2) * t1703 + t2129;
t1560 = -t1628 * t2089 + t1630 * t2093;
t1559 = -t1627 * t2089 + t1629 * t2093;
t1558 = t2084 * t1782 + t2086 * t2185;
t1557 = -t2086 * t1782 + t2084 * t2185;
t1556 = -t2089 * t1667 + t2093 * t1673 + t2426;
t1552 = -t2089 * t1665 + t2093 * t1672 + t2421;
t1547 = -t1605 * t2089 + t1607 * t2093;
t1546 = -t1604 * t2089 + t1606 * t2093;
t1545 = -t2084 * t1685 + t2086 * t2186;
t1544 = -t2084 * t1684 + t2086 * t2187;
t1543 = t2086 * t1685 + t2084 * t2186;
t1542 = t2086 * t1684 + t2084 * t2187;
t1541 = -t2084 * t1671 + t2086 * t2113 + t2425;
t1540 = t2086 * t1671 + t2084 * t2113 - t2424;
t1537 = -t2089 * t1640 + t2093 * t1656 + t2385;
t1533 = -t2084 * t1668 + t2086 * t2114 + t2415;
t1532 = t2086 * t1668 + t2084 * t2114 - t2414;
t1531 = t2086 * t2115 - t2298 * t2326 - t2395;
t1530 = t2084 * t2115 + t2297 * t2326 + t2396;
t1526 = -t1651 * t2084 + t2086 * t2188;
t1525 = -t2084 * t1650 + t2086 * t2189;
t1524 = t2086 * t1651 + t2084 * t2188;
t1523 = t2086 * t1650 + t2084 * t2189;
t1521 = -t2089 * t1596 + t2093 * t1611 + t2385;
t1519 = -t1567 * t2089 + t1568 * t2093;
t1518 = pkin(2) * t1689 + t2107;
t1517 = -t2084 * t1643 + t2086 * t2190;
t1516 = t2086 * t1643 + t2084 * t2190;
t1513 = -t2084 * t1763 + t2086 * t2116 - t2395;
t1512 = t2086 * t1763 + t2084 * t2116 + t2396;
t1511 = -t2084 * t1639 + t2086 * t2191;
t1510 = t2086 * t1639 + t2084 * t2191;
t1507 = -qJ(3) * t2282 - t2089 * t1666 + (-t1590 * t2084 - t1591 * t2086) * pkin(8);
t1499 = -t2084 * t1632 + t2086 * t2192;
t1498 = t2086 * t1632 + t2084 * t2192;
t1497 = -pkin(1) * t1590 - t1674 * t2298 + t2086 * t2106;
t1496 = pkin(1) * t1591 + t1674 * t2297 + t2084 * t2106;
t1493 = -t1621 * t2084 + t2086 * t2193;
t1492 = t2086 * t1621 + t2084 * t2193;
t1483 = -t2089 * t1563 + t2093 * t1582 + (-t1557 * t2084 - t1558 * t2086) * pkin(8);
t1482 = pkin(2) * t1538 + t2209;
t1481 = -t2084 * t1555 + t2086 * t2194;
t1480 = t2086 * t1555 + t2084 * t2194;
t1478 = pkin(2) * t1592 + t2108;
t1477 = pkin(2) * t1585 + t2109;
t1476 = -pkin(1) * t1557 - t2084 * t1577 + t2086 * t2117;
t1475 = pkin(1) * t1558 + t2086 * t1577 + t2084 * t2117;
t1473 = -t2089 * t1520 + t2093 * t1527 + (-t1612 * t2084 - t1613 * t2086) * pkin(8);
t1472 = -t2089 * t1515 + t2093 * t1522 + (-t1609 * t2084 - t1610 * t2086) * pkin(8);
t1469 = -pkin(1) * t1612 - t2084 * t1573 + t2086 * t2118;
t1468 = pkin(1) * t1613 + t2086 * t1573 + t2084 * t2118;
t1467 = pkin(2) * t1561 + t2134;
t1466 = -pkin(1) * t1609 - t2084 * t1566 + t2086 * t2119;
t1465 = pkin(1) * t1610 + t2086 * t1566 + t2084 * t2119;
t1462 = -t2089 * t1495 + t2093 * t1505 + (-t1583 * t2084 - t1584 * t2086) * pkin(8);
t1457 = -pkin(1) * t1583 - t2084 * t1518 + t2086 * t2120;
t1456 = pkin(1) * t1584 + t2086 * t1518 + t2084 * t2120;
t1450 = -t2084 * t1488 + t2086 * t2195;
t1449 = t2086 * t1488 + t2084 * t2195;
t1448 = -t2089 * t1460 + t2093 * t1463 + (-t1516 * t2084 - t1517 * t2086) * pkin(8);
t1447 = -t2089 * t1459 + t2093 * t1461 + (-t1510 * t2084 - t1511 * t2086) * pkin(8);
t1446 = pkin(2) * t1470 + t2105;
t1445 = -pkin(1) * t1516 - t2084 * t1478 + t2086 * t2121;
t1444 = pkin(1) * t1517 + t2086 * t1478 + t2084 * t2121;
t1443 = -t2089 * t1458 + t2093 * t1464 + (-t1480 * t2084 - t1481 * t2086) * pkin(8);
t1442 = -pkin(1) * t1510 - t2084 * t1477 + t2086 * t2122;
t1441 = pkin(1) * t1511 + t2086 * t1477 + t2084 * t2122;
t1440 = -pkin(1) * t1480 - t2084 * t1482 + t2086 * t2123;
t1439 = pkin(1) * t1481 + t2086 * t1482 + t2084 * t2123;
t1438 = -t2089 * t1453 + t2093 * t1454 + (-t1492 * t2084 - t1493 * t2086) * pkin(8);
t1436 = -pkin(1) * t1492 - t2084 * t1467 + t2086 * t2124;
t1435 = pkin(1) * t1493 + t2086 * t1467 + t2084 * t2124;
t1433 = -t2089 * t1434 + t2093 * t1437 + (-t1449 * t2084 - t1450 * t2086) * pkin(8);
t1432 = -pkin(1) * t1449 - t2084 * t1446 + t2086 * t2125;
t1431 = pkin(1) * t1450 + t2086 * t1446 + t2084 * t2125;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2065, 0, -t2064, 0, t2208, -t2049, -t2146, -pkin(7) * t2146, -t1962 * t2090 + t2007 * t2094, -t1899 * t2090 + t1944 * t2094, -t1916 * t2090 + t1992 * t2094, -t1959 * t2090 + t2003 * t2094, -t1917 * t2090 + t1993 * t2094, t2019 * t2094 + t2090 * t2253, t2094 * t1818 - t2090 * t1801 - pkin(7) * (t1918 * t2094 + t1994 * t2090), t2094 * t1811 - t2090 * t1791 - pkin(7) * (t1911 * t2094 + t1975 * t2090), t2094 * t1753 - t2090 * t1765 - pkin(7) * (t1898 * t2094 + t1943 * t2090), t2094 * t1762 - t2090 * t1771 - pkin(7) * (t1865 * t2094 + t1876 * t2090), t2367, t2398, -t2411, t2368, t2418, t2369, -t2090 * t1575 + t2094 * t1589 - t2423, -t2090 * t1579 + t2094 * t1603 - t2428, -t2090 * t1531 + t2094 * t1537 - t2386, t2094 * t1507 - t2090 * t1497 - pkin(7) * (t1591 * t2094 + t1608 * t2090), t2369, t2411, -t2418, t2367, t2398, t2368, -t2090 * t1513 + t2094 * t1521 - t2386, -t2090 * t1533 + t2094 * t1552 + t2423, -t2090 * t1541 + t2094 * t1556 + t2428, t2094 * t1483 - t2090 * t1476 - pkin(7) * (t1558 * t2094 + t1576 * t2090), -t1655 * t2090 + t1679 * t2094, -t1588 * t2090 + t1626 * t2094, -t1616 * t2090 + t1644 * t2094, -t1654 * t2090 + t1678 * t2094, -t1617 * t2090 + t1645 * t2094, -t1677 * t2090 + t1717 * t2094, t2094 * t1472 - t2090 * t1466 - pkin(7) * (t1610 * t2094 + t1633 * t2090), t2094 * t1473 - t2090 * t1469 - pkin(7) * (t1613 * t2094 + t1636 * t2090), t2094 * t1462 - t2090 * t1457 - pkin(7) * (t1584 * t2094 + t1618 * t2090), t2094 * t1443 - t2090 * t1440 - pkin(7) * (t1481 * t2094 + t1489 * t2090), -t1545 * t2090 + t1560 * t2094, -t1499 * t2090 + t1519 * t2094, -t1525 * t2090 + t1546 * t2094, -t1544 * t2090 + t1559 * t2094, -t1526 * t2090 + t1547 * t2094, -t1572 * t2090 + t1594 * t2094, t2094 * t1447 - t2090 * t1442 - pkin(7) * (t1511 * t2094 + t1529 * t2090), t2094 * t1448 - t2090 * t1445 - pkin(7) * (t1517 * t2094 + t1535 * t2090), t2094 * t1438 - t2090 * t1436 - pkin(7) * (t1493 * t2094 + t1514 * t2090), t2094 * t1433 - t2090 * t1432 - pkin(7) * (t1450 * t2094 + t1452 * t2090); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2064, 0, t2065, 0, t2049, t2208, t2214, pkin(7) * t2214, t1962 * t2094 + t2007 * t2090, t1899 * t2094 + t1944 * t2090, t1916 * t2094 + t1992 * t2090, t1959 * t2094 + t2003 * t2090, t1917 * t2094 + t1993 * t2090, t2019 * t2090 - t2094 * t2253, t2090 * t1818 + t2094 * t1801 + pkin(7) * (-t1918 * t2090 + t1994 * t2094), t2090 * t1811 + t2094 * t1791 + pkin(7) * (-t1911 * t2090 + t1975 * t2094), t2090 * t1753 + t2094 * t1765 + pkin(7) * (-t1898 * t2090 + t1943 * t2094), t2090 * t1762 + t2094 * t1771 + pkin(7) * (-t1865 * t2090 + t1876 * t2094), t2364, t2397, t2410, t2365, -t2417, t2366, t2094 * t1575 + t2090 * t1589 - t2422, t2094 * t1579 + t2090 * t1603 - t2427, t2094 * t1531 + t2090 * t1537 + t2387, t2090 * t1507 + t2094 * t1497 + pkin(7) * (-t1591 * t2090 + t1608 * t2094), t2366, -t2410, t2417, t2364, t2397, t2365, t2094 * t1513 + t2090 * t1521 + t2387, t2094 * t1533 + t2090 * t1552 + t2422, t2094 * t1541 + t2090 * t1556 + t2427, t2090 * t1483 + t2094 * t1476 + pkin(7) * (-t1558 * t2090 + t1576 * t2094), t1655 * t2094 + t1679 * t2090, t1588 * t2094 + t1626 * t2090, t1616 * t2094 + t1644 * t2090, t1654 * t2094 + t1678 * t2090, t1617 * t2094 + t1645 * t2090, t1677 * t2094 + t1717 * t2090, t2090 * t1472 + t2094 * t1466 + pkin(7) * (-t1610 * t2090 + t1633 * t2094), t2090 * t1473 + t2094 * t1469 + pkin(7) * (-t1613 * t2090 + t1636 * t2094), t2090 * t1462 + t2094 * t1457 + pkin(7) * (-t1584 * t2090 + t1618 * t2094), t2090 * t1443 + t2094 * t1440 + pkin(7) * (-t1481 * t2090 + t1489 * t2094), t1545 * t2094 + t1560 * t2090, t1499 * t2094 + t1519 * t2090, t1525 * t2094 + t1546 * t2090, t1544 * t2094 + t1559 * t2090, t1526 * t2094 + t1547 * t2090, t1572 * t2094 + t1594 * t2090, t2090 * t1447 + t2094 * t1442 + pkin(7) * (-t1511 * t2090 + t1529 * t2094), t2090 * t1448 + t2094 * t1445 + pkin(7) * (-t1517 * t2090 + t1535 * t2094), t2090 * t1438 + t2094 * t1436 + pkin(7) * (-t1493 * t2090 + t1514 * t2094), t2090 * t1433 + t2094 * t1432 + pkin(7) * (-t1450 * t2090 + t1452 * t2094); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2068, t2069, 0, 0, t1961, t1897, t1913, t1960, t1914, t2059, t1800, t1790, t1764, t1772, t2332, t2389, t1774, t2331, -t1776, t2333, t1574, t1578, t1530, t1496, t2333, -t1774, t1776, t2332, t2389, t2331, t1512, t1532, t1540, t1475, t1653, t1587, t1614, t1652, t1615, t1676, t1465, t1468, t1456, t1439, t1543, t1498, t1523, t1542, t1524, t1571, t1441, t1444, t1435, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2095, 0, 0, -g(3), -t2068, 0, t2007, t1944, t1992, t2003, t1993, t2019, t1818, t1811, t1753, t1762, t2306, t2375, -t1824, t2310, t1826, t2307, t1589, t1603, t1537, t1507, t2307, t1824, -t1826, t2306, t2375, t2310, t1521, t1552, t1556, t1483, t1679, t1626, t1644, t1678, t1645, t1717, t1472, t1473, t1462, t1443, t1560, t1519, t1546, t1559, t1547, t1594, t1447, t1448, t1438, t1433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2095, 0, qJDD(1), 0, g(3), 0, -t2069, 0, t1962, t1899, t1916, t1959, t1917, -t2253, t1801, t1791, t1765, t1771, t2330, t2388, t1778, t2329, -t1780, t2328, t1575, t1579, t1531, t1497, t2328, -t1778, t1780, t2330, t2388, t2329, t1513, t1533, t1541, t1476, t1655, t1588, t1616, t1654, t1617, t1677, t1466, t1469, t1457, t1440, t1545, t1499, t1525, t1544, t1526, t1572, t1442, t1445, t1436, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2068, t2069, 0, 0, t1961, t1897, t1913, t1960, t1914, t2059, t1800, t1790, t1764, t1772, t2332, t2389, t1774, t2331, -t1776, t2333, t1574, t1578, t1530, t1496, t2333, -t1774, t1776, t2332, t2389, t2331, t1512, t1532, t1540, t1475, t1653, t1587, t1614, t1652, t1615, t1676, t1465, t1468, t1456, t1439, t1543, t1498, t1523, t1542, t1524, t1571, t1441, t1444, t1435, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2048, t2013, t2046, -t2057, t2051, t2057, 0, -t2022, t1965, 0, t2205, t2371, -t1906, t2104, -t1909, t2132, t1823, t1832, t1656, -qJ(3) * t1674, t2132, t1906, t1909, t2205, t2371, t2104, t1611, t1672, t1673, t1582, t1789, t1698, t1721, t1788, t1722, t1834, t1522, t1527, t1505, t1464, t1630, t1568, t1606, t1629, t1607, t1670, t1461, t1463, t1454, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2056, t2012, t2050, t2198, t2047, -t2056, t2022, 0, t1966, 0, t2207, t2370, t1903, t2206, -t1905, t2131, t1770, t1781, t1640, t1666, t2131, -t1903, t1905, t2207, t2370, t2206, t1596, t1665, t1667, t1563, t1787, t1697, t1719, t1786, t1720, t1833, t1515, t1520, t1495, t1458, t1628, t1567, t1604, t1627, t1605, t1669, t1459, t1460, t1453, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2066, t2053, t2010, t2066, t2009, t2075, -t1965, -t1966, 0, 0, t2262, t2312, -t2320, -t2262, t2319, t2075, t1718, t1723, t2374, pkin(2) * t1674, t2075, t2320, -t2319, t2262, t2312, -t2262, t1763, t1668, t1671, t1577, t1843, t1751, t1830, t1841, t1831, t1872, t1566, t1573, t1518, t1482, t1685, t1632, t1650, t1684, t1651, t1748, t1477, t1478, t1467, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1991, -t2318, t2317, t2020, -t2016, -t2020, 0, -t1919, t1784, 0, -t2020, -t2317, t2016, t1991, -t2318, t2020, t1696, qJ(4) * t2318, t1732, qJ(4) * t1782, t1932, t1929, -t1851, -t1932, -t1847, t1986, t1580, t1581, t1664, t1506, t1736, t1660, t1726, -t1734, t1727, t1813, t1508, t1509, t1479, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2021, t1936, t2313, -t2215, t2315, -t2021, t1919, 0, t1785, 0, -t2021, -t2313, -t2315, t2021, t1936, -t2215, t1691, t1733, pkin(3) * t1936, pkin(3) * t1782, -t1842, -t1749, -t1828, t1840, -t1829, -t1871, t1595, t1602, t1528, t1494, -t1683, -t1631, -t1648, -t1682, -t1649, -t1747, t1484, t1485, t1474, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2262, t2312, -t2320, -t2262, t2319, t2075, -t1784, -t1785, 0, 0, t2075, t2320, -t2319, t2262, t2312, -t2262, t2241, t2102, t2101, t2242, t1843, t1751, t1830, t1841, t1831, t1872, t2129, t2143, t2107, t2209, t1685, t1632, t1650, t1684, t1651, t1748, t2109, t2108, t2134, t2105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2075, t2320, -t2319, t2262, t2312, -t2262, 0, t1731, t1725, 0, t1843, t1751, t1830, t1841, t1831, t1872, t2199, t2221, t2137, -t2289, t1685, t1632, t1650, t1684, t1651, t1748, t2139, t2138, t2210, t2133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2020, t2317, -t2016, -t1991, t2318, -t2020, -t1731, 0, -t1782, 0, -t1932, -t1929, t1851, t1932, t1847, -t1986, t2140, t2211, -t2292, -t2294, -t1736, -t1660, -t1726, t1734, -t1727, -t1813, t2144, t2145, t2135, t2212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2021, t2313, t2315, -t2021, -t1936, t2215, -t1725, t1782, 0, 0, t1842, t1749, t1828, -t1840, t1829, t1871, pkin(9) * t1799 - t2203, pkin(9) * t1817 - t2202, pkin(9) * t1752 - t2141, pkin(9) * t1555 - t2293, t1683, t1631, t1648, t1682, t1649, t1747, pkin(9) * t1639 - t2127, pkin(9) * t1643 - t2126, pkin(9) * t1621 + t2311, pkin(9) * t1488 - t2324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1901, -t1846, t2321, t2266, t1956, -t2266, 0, t1688, t1624, 0, t1737, t1662, t1728, t1735, t1729, t1814, t1565, t1570, t1491, -t2288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2265, t2142, t1957, t1900, t1874, -t2265, -t1688, 0, t1625, 0, -t1870, -t1869, -t1744, t1870, t1740, -t1895, t1534, t1536, -pkin(5) * t1661, -pkin(5) * t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1932, t1929, -t1851, -t1932, -t1847, t1986, -t1624, -t1625, 0, 0, t1736, t1660, t1726, -t1734, t1727, t1813, t2223, t2224, t2213, t2243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1812, t1741, t2322, t1888, t1886, -t1888, 0, t1600, t1550, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1889, t1743, t1887, -t2136, t1795, -t1889, -t1600, 0, t1551, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1870, t1869, t1744, -t1870, -t1740, t1895, -t1550, -t1551, 0, 0;];
m_new_reg  = t1;
