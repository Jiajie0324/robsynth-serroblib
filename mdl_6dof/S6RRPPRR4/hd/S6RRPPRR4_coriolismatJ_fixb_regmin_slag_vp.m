% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:05:07
% EndTime: 2019-03-09 09:05:33
% DurationCPUTime: 14.21s
% Computational Cost: add. (10769->767), mult. (28485->1020), div. (0->0), fcn. (31812->10), ass. (0->576)
t406 = sin(pkin(6));
t413 = cos(qJ(2));
t656 = t406 * t413;
t706 = cos(pkin(11));
t363 = t706 * t656;
t405 = sin(pkin(11));
t410 = sin(qJ(2));
t657 = t406 * t410;
t553 = t405 * t657;
t337 = -t363 + t553;
t339 = (-t405 * t413 - t410 * t706) * t406;
t751 = t339 ^ 2;
t754 = t337 ^ 2 + t751;
t761 = qJD(3) * t754;
t407 = cos(pkin(6));
t412 = cos(qJ(5));
t653 = t407 * t412;
t409 = sin(qJ(5));
t669 = t337 * t409;
t278 = t653 + t669;
t327 = t337 * t412;
t654 = t407 * t409;
t276 = -t327 + t654;
t678 = t276 * t412;
t730 = t409 / 0.2e1;
t162 = t278 * t730 + t678 / 0.2e1;
t760 = t162 * qJD(5);
t759 = t754 * qJD(1);
t566 = t412 * qJD(2);
t385 = t409 * t566;
t500 = -t162 * qJD(1) - t385;
t576 = t276 * qJD(1);
t442 = qJD(2) * t162 + t278 * t576;
t663 = t751 * t409;
t672 = t751 * t412;
t411 = cos(qJ(6));
t640 = t409 * t411;
t517 = -t640 / 0.2e1;
t304 = t339 * t517;
t408 = sin(qJ(6));
t670 = t337 * t408;
t758 = t304 - t670 / 0.2e1;
t666 = t339 * t409;
t527 = t666 / 0.2e1;
t757 = t411 * t527 + t670 / 0.2e1;
t541 = t411 * t566;
t495 = t408 * t541;
t401 = t408 ^ 2;
t403 = t411 ^ 2;
t374 = t403 - t401;
t503 = qJD(5) * t374;
t756 = 0.2e1 * t495 - t503;
t580 = t666 * qJD(1);
t596 = qJD(5) * t409;
t755 = t580 - t596;
t753 = t276 ^ 2;
t400 = t406 ^ 2;
t750 = pkin(3) + pkin(9);
t390 = t407 * t413 * pkin(1);
t719 = pkin(8) + qJ(3);
t324 = -t657 * t719 + t390;
t293 = t407 * pkin(2) + t324;
t275 = t405 * t293;
t727 = pkin(1) * t410;
t564 = t407 * t727;
t325 = t656 * t719 + t564;
t508 = t706 * t325;
t198 = t508 + t275;
t655 = t407 * qJ(4);
t181 = -t198 - t655;
t726 = pkin(4) * t337;
t136 = -t181 - t726;
t749 = t136 / 0.2e1;
t665 = t339 * t411;
t676 = t278 * t408;
t204 = t665 + t676;
t748 = t204 / 0.2e1;
t667 = t339 * t408;
t675 = t278 * t411;
t206 = -t667 + t675;
t747 = -t206 / 0.2e1;
t328 = t337 * t411;
t646 = t408 * t409;
t227 = -t339 * t646 + t328;
t746 = -t227 / 0.2e1;
t228 = -t339 * t640 - t670;
t745 = -t228 / 0.2e1;
t744 = -t276 / 0.2e1;
t743 = t276 / 0.2e1;
t742 = -t327 / 0.2e1;
t741 = t327 / 0.2e1;
t740 = t339 / 0.2e1;
t720 = t412 * pkin(5);
t721 = t409 * pkin(10);
t364 = t720 + t721;
t739 = t364 / 0.2e1;
t394 = -pkin(2) * t706 - pkin(3);
t391 = -pkin(9) + t394;
t738 = -t391 / 0.2e1;
t392 = pkin(2) * t405 + qJ(4);
t737 = -t392 / 0.2e1;
t736 = -t394 / 0.2e1;
t735 = -t403 / 0.2e1;
t734 = t407 / 0.2e1;
t733 = -t408 / 0.2e1;
t732 = t408 / 0.2e1;
t731 = -t409 / 0.2e1;
t729 = t411 / 0.2e1;
t728 = -t412 / 0.2e1;
t725 = t276 * pkin(10);
t724 = t339 * pkin(3);
t723 = t339 * pkin(4);
t722 = t339 * pkin(10);
t547 = -pkin(2) * t413 - pkin(1);
t433 = t339 * qJ(4) + t406 * t547;
t147 = t337 * t750 + t433;
t306 = t405 * t325;
t471 = -t293 * t706 + t306;
t416 = -t407 * t750 + t471 - t723;
t82 = t147 * t409 - t412 * t416;
t60 = pkin(5) * t339 + t82;
t718 = -t60 + t82;
t717 = pkin(2) * qJD(2);
t658 = t405 * t324;
t210 = t508 + t658;
t148 = t210 - t726;
t143 = t409 * t148;
t389 = pkin(2) * t657;
t671 = t337 * qJ(4);
t507 = t389 + t671;
t154 = -t339 * t750 + t507;
t150 = t412 * t154;
t616 = t150 + t143;
t80 = -pkin(10) * t337 + t616;
t716 = t408 * t80;
t715 = t408 * t82;
t714 = t411 * t80;
t713 = t411 * t82;
t483 = pkin(5) * t276 - pkin(10) * t278;
t415 = t136 + t483;
t83 = t412 * t147 + t409 * t416;
t61 = t83 - t722;
t25 = t408 * t61 - t411 * t415;
t211 = t324 * t706 - t306;
t123 = -(-pkin(4) - t364) * t339 + t211;
t639 = t411 * t123;
t36 = t639 - t716;
t664 = t339 * t412;
t630 = t412 * t148;
t644 = t409 * t154;
t79 = pkin(5) * t337 - t630 + t644;
t5 = t204 * t79 + t227 * t60 - t25 * t664 + t276 * t36;
t712 = t5 * qJD(1);
t26 = t408 * t415 + t411 * t61;
t652 = t408 * t123;
t37 = t652 + t714;
t6 = t206 * t79 + t228 * t60 - t26 * t664 - t276 * t37;
t711 = t6 * qJD(1);
t180 = pkin(5) * t278 + t725;
t638 = t411 * t180;
t7 = t83 * t204 - t25 * t278 + (t408 * t718 + t638) * t276;
t710 = t7 * qJD(1);
t709 = t79 * t408;
t708 = t79 * t411;
t651 = t408 * t180;
t8 = t83 * t206 - t26 * t278 + (t411 * t718 - t651) * t276;
t707 = t8 * qJD(1);
t13 = -t204 * t60 + t25 * t276;
t705 = qJD(1) * t13;
t14 = t206 * t60 - t26 * t276;
t704 = qJD(1) * t14;
t33 = -t136 * t276 - t339 * t82;
t703 = qJD(1) * t33;
t34 = t136 * t278 + t339 * t83;
t702 = qJD(1) * t34;
t221 = t507 - t724;
t207 = t337 * pkin(3) + t433;
t687 = t207 * t339;
t44 = t210 * t407 - t221 * t337 + t687;
t701 = qJD(1) * t44;
t45 = t207 * t337 + t211 * t407 + t221 * t339;
t700 = qJD(1) * t45;
t182 = -t407 * pkin(3) + t471;
t84 = t181 * t337 - t182 * t339;
t699 = qJD(1) * t84;
t629 = t412 * t204;
t557 = t339 * t629;
t686 = t227 * t276;
t85 = t557 - t686;
t698 = qJD(1) * t85;
t628 = t412 * t206;
t141 = t339 * t628;
t685 = t228 * t276;
t88 = t141 - t685;
t697 = qJD(1) * t88;
t89 = -t198 * t337 - t339 * t471;
t696 = qJD(1) * t89;
t92 = t204 * t278 - t408 * t753;
t695 = qJD(1) * t92;
t93 = t206 * t278 - t411 * t753;
t694 = qJD(1) * t93;
t693 = t136 * t409;
t149 = t211 + t723;
t15 = t149 * t276 + t82 * t337 - (-t644 + (-t136 + t148) * t412) * t339;
t692 = t15 * qJD(1);
t16 = t149 * t278 + t83 * t337 - (-t616 + t693) * t339;
t691 = t16 * qJD(1);
t690 = t206 * t408;
t689 = t206 * t409;
t688 = t206 * t411;
t684 = t228 * t408;
t683 = t228 * t409;
t27 = -t181 * t211 + t182 * t210 + t207 * t221;
t682 = t27 * qJD(1);
t482 = pkin(5) * t409 - pkin(10) * t412;
t430 = t392 + t482;
t270 = t391 * t646 - t411 * t430;
t681 = t270 * t278;
t634 = t411 * t391;
t552 = t409 * t634;
t271 = t408 * t430 + t552;
t680 = t271 * t278;
t679 = t276 * t337;
t677 = t278 * t337;
t674 = t278 * t412;
t28 = -(t181 + t210) * t339 + (-t182 - t211) * t337;
t673 = t28 * qJD(1);
t668 = t339 * t392;
t35 = -(-t198 + t210) * t339 + (-t471 - t211) * t337;
t662 = t35 * qJD(1);
t191 = t689 / 0.2e1;
t631 = t411 * t412;
t649 = t408 * t276;
t241 = t631 * t649;
t643 = t409 * t204;
t519 = t643 / 0.2e1;
t39 = t241 + (t519 + t745) * t411 + (t191 + t227 / 0.2e1) * t408;
t661 = t39 * qJD(1);
t660 = t400 * t413;
t404 = t412 ^ 2;
t659 = t404 * t408;
t396 = t404 * t411;
t650 = t408 * t204;
t648 = t408 * t364;
t647 = t408 * t407;
t645 = t408 * t412;
t642 = t409 * t227;
t641 = t409 * t276;
t637 = t411 * t204;
t636 = t411 * t276;
t635 = t411 * t364;
t402 = t409 ^ 2;
t633 = t411 * t402;
t632 = t411 * t407;
t42 = pkin(2) * t400 * t410 * t547 + t198 * t211 + t210 * t471;
t627 = t42 * qJD(1);
t43 = -t204 * t228 - t206 * t227;
t626 = t43 * qJD(1);
t514 = t631 / 0.2e1;
t302 = t339 * t514;
t529 = -t676 / 0.2e1;
t475 = t529 + t748;
t446 = t475 * t412;
t55 = t302 + t446;
t625 = t55 * qJD(1);
t474 = -t665 / 0.2e1 - t204 / 0.2e1;
t56 = (t529 - t474) * t409;
t624 = t56 * qJD(1);
t466 = t637 + t690;
t70 = t466 * t276;
t623 = t70 * qJD(1);
t86 = -t557 - t686;
t622 = t86 * qJD(1);
t87 = t141 + t685;
t621 = t87 * qJD(1);
t429 = t206 * t517 + t678 * t735;
t91 = -t684 / 0.2e1 + t429;
t620 = t91 * qJD(1);
t520 = -t643 / 0.2e1;
t522 = -t645 / 0.2e1;
t437 = t276 * t522 + t520;
t96 = t437 + t757;
t619 = t96 * qJD(1);
t521 = t645 / 0.2e1;
t491 = t276 * t521;
t436 = t520 + t491;
t97 = t436 + t758;
t618 = t97 * qJD(1);
t515 = -t631 / 0.2e1;
t490 = t276 * t515;
t452 = t328 / 0.2e1 + t490;
t523 = -t646 / 0.2e1;
t494 = t339 * t523;
t99 = t191 + t494 + t452;
t617 = t99 * qJD(1);
t594 = qJD(5) * t412;
t383 = t408 * t594;
t591 = qJD(6) * t411;
t387 = t409 * t591;
t615 = t383 + t387;
t373 = t402 - t404;
t447 = -t339 * t645 + t632;
t103 = t276 * t447 + t339 * t643;
t614 = qJD(1) * t103;
t448 = t339 * t631 + t647;
t104 = t206 * t666 - t276 * t448;
t613 = qJD(1) * t104;
t105 = -t181 * t407 + t687;
t612 = qJD(1) * t105;
t130 = -t663 - t677;
t611 = qJD(1) * t130;
t144 = -t407 * t276 - t663;
t610 = qJD(1) * t144;
t151 = -t677 + t663;
t609 = qJD(1) * t151;
t153 = t672 + t679;
t608 = qJD(1) * t153;
t607 = qJD(1) * t206;
t606 = qJD(1) * t407;
t605 = qJD(2) * t339;
t604 = qJD(2) * t407;
t603 = qJD(3) * t337;
t602 = qJD(3) * t407;
t601 = qJD(4) * t409;
t600 = qJD(4) * t412;
t599 = qJD(5) * t666;
t598 = qJD(5) * t339;
t597 = qJD(5) * t408;
t595 = qJD(5) * t411;
t593 = qJD(6) * t276;
t592 = qJD(6) * t408;
t479 = t747 - t667 / 0.2e1;
t101 = t409 * t479 + t452;
t590 = t101 * qJD(1);
t556 = t339 * t659;
t106 = -t556 + t642;
t589 = t106 * qJD(1);
t478 = t747 + t667 / 0.2e1;
t431 = t675 / 0.2e1 + t478;
t118 = t431 * t412;
t588 = t118 * qJD(1);
t119 = t431 * t409;
t587 = t119 * qJD(1);
t365 = t389 / 0.2e1;
t510 = t737 - qJ(4) / 0.2e1;
t124 = t365 - (pkin(3) / 0.2e1 + t736) * t339 - t510 * t337;
t586 = t124 * qJD(1);
t129 = -t641 + t674;
t127 = t129 * t339;
t585 = t127 * qJD(1);
t555 = t339 * t396;
t142 = -t555 + t683;
t584 = t142 * qJD(1);
t152 = t672 - t679;
t583 = t152 * qJD(1);
t426 = (-t405 * t337 / 0.2e1 + t706 * t740) * pkin(2);
t202 = -t389 / 0.2e1 + t426;
t582 = t202 * qJD(1);
t203 = t278 * t407 + t672;
t581 = t203 * qJD(1);
t231 = 0.2e1 * t741;
t579 = t231 * qJD(1);
t440 = -pkin(8) * t656 - t564;
t294 = t400 * t727 - t407 * t440;
t575 = t294 * qJD(1);
t349 = pkin(8) * t657 - t390;
t295 = pkin(1) * t660 - t349 * t407;
t574 = t295 * qJD(1);
t334 = t553 / 0.2e1 - t363 / 0.2e1;
t573 = t334 * qJD(1);
t572 = t337 * qJD(1);
t571 = t337 * qJD(4);
t570 = t339 * qJD(1);
t569 = t339 * qJD(3);
t353 = (-t410 ^ 2 + t413 ^ 2) * t400;
t568 = t353 * qJD(1);
t397 = t407 * qJD(4);
t567 = t409 * qJD(2);
t565 = t412 * qJD(6);
t563 = 0.1e1 / 0.2e1 + t402 / 0.2e1;
t562 = pkin(5) * t748;
t561 = pkin(5) * t747;
t560 = pkin(5) * t746;
t559 = pkin(5) * t745;
t558 = t60 / 0.2e1 - t82 / 0.2e1;
t554 = t410 * t660;
t551 = t391 * t645;
t550 = t391 * t631;
t549 = -t716 / 0.2e1;
t548 = -t714 / 0.2e1;
t546 = t206 * t576;
t544 = t406 * t606;
t543 = t337 * t567;
t542 = t406 * t604;
t540 = t339 * t594;
t539 = t408 * t595;
t538 = t411 * t594;
t537 = t408 * t565;
t536 = t411 * t565;
t535 = t409 * t572;
t534 = t337 * t570;
t533 = t409 * t570;
t532 = t412 * t570;
t531 = t408 * t591;
t530 = t409 * t594;
t526 = t391 * t740;
t525 = t391 * t730;
t524 = t392 * t278 / 0.2e1;
t264 = -t649 / 0.2e1;
t265 = t649 / 0.2e1;
t518 = t641 / 0.2e1;
t516 = -t636 / 0.2e1;
t260 = t636 / 0.2e1;
t513 = -t629 / 0.2e1;
t187 = t628 / 0.2e1;
t512 = -t143 / 0.2e1 - t150 / 0.2e1;
t511 = -t275 / 0.2e1 - t508 / 0.2e1;
t509 = t566 / 0.2e1;
t381 = t408 * t567;
t301 = t339 * t515;
t67 = t228 * t728 + t265 + (t301 + t647 / 0.2e1) * t409;
t506 = qJD(1) * t67 + t381;
t384 = t411 * t567;
t493 = t339 * t522;
t66 = t227 * t728 + t516 + (t493 - t632 / 0.2e1) * t409;
t505 = qJD(1) * t66 - t384;
t504 = t742 + t654;
t157 = 0.2e1 * t264;
t502 = -qJD(1) * t157 + t381;
t160 = 0.2e1 * t260;
t501 = -qJD(1) * t160 - t384;
t312 = t407 * t572;
t499 = qJD(2) * t337 + t312;
t388 = qJD(2) + t606;
t498 = -qJD(5) + t570;
t497 = -qJD(6) - t576;
t496 = qJD(1) * t554;
t303 = t408 * t527;
t492 = t339 * t521;
t247 = t409 * t516;
t489 = -t722 / 0.2e1 - t83 / 0.2e1;
t488 = t558 * t408;
t487 = t558 * t411;
t486 = t725 / 0.2e1 + t180 / 0.2e1;
t485 = t123 / 0.2e1 + t60 * t728;
t484 = t79 / 0.2e1 + t276 * t739;
t481 = 0.2e1 * t411 * t383;
t477 = t508 / 0.2e1 + t658 / 0.2e1;
t476 = t734 + t518;
t386 = t409 * t592;
t473 = t386 - t538;
t382 = t408 * t596;
t472 = t382 - t536;
t470 = t187 + t492;
t1 = t560 + t681 / 0.2e1 - t484 * t411 + (-t638 / 0.2e1 + t204 * t738 + t488) * t409 + (t25 / 0.2e1 + t489 * t408) * t412;
t137 = -t270 * t412 + (t551 + t635) * t409;
t469 = -t1 * qJD(1) + t137 * qJD(2);
t138 = t271 * t412 + (-t550 + t648) * t409;
t2 = t559 + t680 / 0.2e1 + t484 * t408 + (t651 / 0.2e1 + t206 * t738 + t487) * t409 + (t26 / 0.2e1 + t489 * t411) * t412;
t468 = -t2 * qJD(1) - t138 * qJD(2);
t226 = -t271 * t409 - t404 * t634;
t418 = t187 * t391 + t26 * t730 + t271 * t743;
t9 = t411 * t485 + t418 + t549;
t467 = qJD(1) * t9 - qJD(2) * t226;
t465 = t337 * t391 - t668;
t419 = t25 * t731 + t270 * t744 + t391 * t513;
t10 = -t408 * t485 + t419 + t548;
t225 = -t270 * t409 - t391 * t659;
t464 = qJD(1) * t10 + qJD(2) * t225;
t357 = t373 * t408;
t253 = t408 * t518;
t414 = t253 + (t518 - t674 / 0.2e1) * t408 + t513;
t52 = t301 + t414;
t463 = -qJD(1) * t52 - qJD(2) * t357;
t358 = -t396 + t633;
t58 = t409 * t636 + (-t675 / 0.2e1 + t478) * t412;
t462 = -qJD(1) * t58 - qJD(2) * t358;
t461 = (-qJD(6) - t567) * t412;
t107 = t411 * t476 + t187 + t493;
t344 = t396 / 0.2e1 + t563 * t411;
t460 = qJD(1) * t107 + qJD(2) * t344;
t109 = -t408 * t476 + t412 * t474;
t343 = (-t404 / 0.2e1 - t563) * t408;
t459 = qJD(1) * t109 + qJD(2) * t343;
t111 = t407 * t510 + t477 + t511;
t458 = qJD(1) * t111 - qJD(2) * t392;
t132 = -t278 ^ 2 + t753;
t457 = qJD(1) * t132 - qJD(2) * t129;
t456 = qJD(1) * t129 - qJD(2) * t373;
t209 = t741 + t504;
t455 = qJD(1) * t209 + t567;
t454 = t567 + t576;
t311 = t407 ^ 2 + t751;
t453 = qJD(1) * t311 + t604;
t451 = t721 / 0.2e1 + t720 / 0.2e1;
t272 = t653 / 0.2e1 + t669 / 0.2e1;
t450 = t272 * qJD(1) + t509;
t449 = t303 - t328 / 0.2e1 + t490;
t445 = t637 / 0.2e1 + t690 / 0.2e1;
t29 = t524 + (t749 - t148 / 0.2e1) * t412 + (t526 + t154 / 0.2e1) * t409;
t444 = -qJD(1) * t29 - t392 * t566;
t417 = -t693 / 0.2e1 + t276 * t737 + t412 * t526;
t31 = t417 - t512;
t443 = -qJD(1) * t31 + t392 * t567;
t441 = -qJD(5) * t334 + t534;
t439 = (qJD(1) * t278 + t566) * t339;
t438 = t565 / 0.2e1 - t500;
t435 = t739 + t451;
t434 = -t409 * t595 - t537;
t63 = (-t650 + t688) * t412;
t81 = t204 ^ 2 - t206 ^ 2;
t432 = qJD(1) * t81 - qJD(2) * t63 - qJD(5) * t466;
t17 = t408 * t486 + t487 + t562;
t284 = t435 * t408;
t428 = pkin(5) * t595 - qJD(1) * t17 - qJD(2) * t284;
t19 = -t411 * t486 + t488 + t561;
t285 = t435 * t411;
t427 = pkin(5) * t597 - qJD(1) * t19 + qJD(2) * t285;
t114 = t445 * t412;
t122 = -t650 / 0.2e1 + t688 / 0.2e1;
t425 = qJD(2) * t114 - qJD(5) * t122 + t204 * t607;
t350 = (t401 / 0.2e1 + t735) * t412;
t424 = qJD(1) * t122 - qJD(2) * t350 + t539;
t423 = qJD(6) * t272 + t442;
t356 = t374 * t404;
t422 = qJD(1) * t63 + qJD(2) * t356 + t481;
t421 = qJD(1) * t466 + t756;
t420 = qJD(2) * t396 * t408 + qJD(1) * t114 + qJD(5) * t350;
t395 = t594 / 0.2e1;
t360 = -0.2e1 * t412 * t531;
t354 = t388 * t412;
t348 = t350 * qJD(6);
t346 = -t633 / 0.2e1 - t396 / 0.2e1 + t729;
t345 = t402 * t732 + t659 / 0.2e1 + t733;
t323 = t334 * qJD(2);
t279 = t532 - t594;
t236 = -t551 + t635 / 0.2e1 - t451 * t411;
t235 = -t550 - t648 / 0.2e1 + t451 * t408;
t232 = t742 + t741;
t208 = t742 + t504;
t201 = t365 + t426;
t196 = t272 * qJD(5) + t339 * t509;
t159 = t260 + t516;
t158 = t264 + t265;
t128 = t129 * qJD(5);
t125 = t337 * t737 + t339 * t736 + t365 + t671 / 0.2e1 - t724 / 0.2e1;
t121 = t278 * t515 + t470;
t120 = t278 * t517 + t191 + t303;
t117 = t122 * qJD(6);
t113 = t114 * qJD(6);
t112 = t392 * t734 + t655 / 0.2e1 + t477 - t511;
t110 = t253 + t629 / 0.2e1 + t301 - t647 / 0.2e1;
t108 = t247 + t632 / 0.2e1 + t479 * t412;
t102 = -t689 / 0.2e1 + t449;
t100 = t191 + t449;
t98 = t436 + t757;
t95 = t437 + t758;
t90 = t684 / 0.2e1 + t429;
t69 = t264 + t448 * t731 + t409 * t302 + (t304 + t745) * t412;
t68 = t260 + t447 * t730 + t409 * t492 + (t494 + t746) * t412;
t64 = t466 * qJD(6);
t62 = t63 * qJD(6);
t59 = t278 * t514 + 0.2e1 * t247 + t470;
t57 = t409 * t475 + t304;
t54 = t301 + t446;
t53 = t302 + t414;
t38 = t227 * t733 + t228 * t729 + t409 * t445 + t241;
t32 = t417 + t512;
t30 = t339 * t525 + t524 + t412 * t749 - t644 / 0.2e1 + t630 / 0.2e1;
t20 = pkin(10) * t516 + t561 + t60 * t732 + t715 / 0.2e1 + t638 / 0.2e1;
t18 = pkin(10) * t265 + t562 + t60 * t729 + t713 / 0.2e1 - t651 / 0.2e1;
t12 = t60 * t514 + t549 + t639 / 0.2e1 - t418;
t11 = t60 * t522 + t548 - t652 / 0.2e1 - t419;
t4 = (t550 + t648) * t744 - t680 / 0.2e1 + (t651 - t713) * t731 + t26 * t728 + t206 * t525 + t60 * t517 + pkin(10) * t301 + t559 + t709 / 0.2e1 + (t276 * t391 + t83) * t514;
t3 = (-t551 + t635) * t743 - t681 / 0.2e1 + (t638 + t715) * t730 + t25 * t728 + t83 * t521 + t60 * t523 + pkin(10) * t493 + t560 - t708 / 0.2e1 + (t519 + t491) * t391;
t21 = [0, 0, 0, qJD(2) * t554, t353 * qJD(2), t413 * t542, -t410 * t542, 0, -t294 * qJD(2), -t295 * qJD(2), qJD(2) * t35 + t761, qJD(2) * t42 + qJD(3) * t89, qJD(2) * t28 - t337 * t397 + t761, t44 * qJD(2) - (t571 + t602) * t339, qJD(2) * t45 + qJD(4) * t311 - t337 * t602, qJD(2) * t27 + qJD(3) * t84 + qJD(4) * t105 (-qJD(5) * t276 - t339 * t567) * t278, -qJD(2) * t127 + qJD(5) * t132, qJD(2) * t151 + t276 * t598, qJD(2) * t153 + t278 * t598, t337 * t605, qJD(2) * t15 + qJD(3) * t152 - qJD(4) * t144 + qJD(5) * t34, qJD(2) * t16 + qJD(3) * t130 + qJD(4) * t203 + qJD(5) * t33 (qJD(2) * t228 - qJD(6) * t204 - t276 * t595) * t206, qJD(2) * t43 + qJD(5) * t70 + qJD(6) * t81, qJD(2) * t87 + qJD(5) * t93 - t204 * t593, qJD(2) * t86 - qJD(5) * t92 - t206 * t593 (qJD(5) * t278 + t339 * t566) * t276, qJD(2) * t5 + qJD(3) * t85 + qJD(4) * t103 + qJD(5) * t7 + qJD(6) * t14, qJD(2) * t6 + qJD(3) * t88 + qJD(4) * t104 + qJD(5) * t8 + qJD(6) * t13; 0, 0, 0, t496, t568, t388 * t656, -t388 * t657, 0, qJD(2) * t440 - t575, qJD(2) * t349 - t574, t662 + (t337 * t706 + t339 * t405) * t717, t627 + (-t210 * t706 + t211 * t405) * t717 + t201 * qJD(3), t673 + (-t337 * t394 + t668) * qJD(2) - t571, qJD(2) * t210 + t701, qJD(2) * t211 + t397 + t700, t682 + (t210 * t394 + t211 * t392) * qJD(2) + t125 * qJD(3) + t112 * qJD(4), -t409 * t439 - t760, t373 * t605 - t128 - t585, -t337 * t566 + t609, t543 + t608, t441, t692 + (t149 * t409 - t412 * t465) * qJD(2) + t208 * qJD(4) + t30 * qJD(5), t691 + (t149 * t412 + t409 * t465) * qJD(2) + t232 * qJD(3) + qJD(4) * t278 + t32 * qJD(5), t90 * qJD(5) - t113 + (t541 + t607) * t228, t626 + t38 * qJD(5) - t62 + (-t227 * t411 - t684) * t566, t621 + (t555 + t683) * qJD(2) + t59 * qJD(5) + t95 * qJD(6), t622 + (-t556 - t642) * qJD(2) + t53 * qJD(5) + t102 * qJD(6), t760 - (-qJD(6) / 0.2e1 - t454) * t664, t36 * t567 + t712 + t68 * qJD(4) + t3 * qJD(5) + t12 * qJD(6) + (-t227 * t391 - t270 * t339 + t709) * t566, -t37 * t567 + t711 + t69 * qJD(4) + t4 * qJD(5) + t11 * qJD(6) + (-t228 * t391 - t271 * t339 + t708) * t566; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t759, qJD(2) * t201 + t696, t759, -t407 * t570, -t312, qJD(2) * t125 + t699, 0, 0, 0, 0, 0, t583, qJD(2) * t232 + t611, 0, 0, 0, 0, 0, qJD(5) * t54 + qJD(6) * t100 + t698, qJD(5) * t121 + qJD(6) * t98 + t697; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, -t534, t453, qJD(2) * t112 + t612, 0, 0, 0, 0, 0, qJD(2) * t208 - t610, qJD(2) * t278 + t581, 0, 0, 0, 0, 0, qJD(2) * t68 + qJD(5) * t57 + qJD(6) * t108 + t614, qJD(2) * t69 + qJD(5) * t120 + qJD(6) * t110 + t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442, t457, t498 * t276, t498 * t278, -t323, qJD(2) * t30 - qJD(5) * t83 + t702, qJD(2) * t32 + qJD(5) * t82 + t703, t90 * qJD(2) + t117 + (-t597 - t607) * t636, t38 * qJD(2) - t276 * t503 + t623 - t64, qJD(2) * t59 + qJD(6) * t159 + t278 * t597 + t694, qJD(2) * t53 + qJD(6) * t158 + t278 * t595 - t695, t423, t710 + t3 * qJD(2) + t54 * qJD(3) + t57 * qJD(4) + (t408 * t483 - t83 * t411) * qJD(5) + t20 * qJD(6), t707 + t4 * qJD(2) + t121 * qJD(3) + t120 * qJD(4) + (t83 * t408 + t411 * t483) * qJD(5) + t18 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, t432, t95 * qJD(2) + t159 * qJD(5) + t204 * t497, t102 * qJD(2) + t158 * qJD(5) + t206 * t497, t196, qJD(2) * t12 + qJD(3) * t100 + qJD(4) * t108 + qJD(5) * t20 - qJD(6) * t26 + t704, qJD(2) * t11 + qJD(3) * t98 + qJD(4) * t110 + qJD(5) * t18 + qJD(6) * t25 + t705; 0, 0, 0, -t496, -t568, -t413 * t544, t410 * t544, 0, t575, t574, -t662, qJD(3) * t202 - t627, -t673, -t569 - t701, t397 - t603 - t700, -qJD(3) * t124 - qJD(4) * t111 - t682, t278 * t533 - t760, -t128 + t585, t339 * t596 - t609, t540 - t608, -t441, qJD(4) * t209 + qJD(5) * t29 - t409 * t603 - t692, -qJD(3) * t231 + qJD(5) * t31 + t397 * t412 - t691, qJD(5) * t91 - t228 * t607 - t113, qJD(5) * t39 - t62 - t626, -qJD(5) * t58 + qJD(6) * t96 - t621, qJD(5) * t52 + qJD(6) * t101 - t622, t760 - (t576 + qJD(6) / 0.2e1) * t664, -qJD(3) * t106 - qJD(4) * t66 - qJD(5) * t1 - qJD(6) * t9 - t712, -qJD(3) * t142 - qJD(4) * t67 - qJD(5) * t2 - qJD(6) * t10 - t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t392 * qJD(4), -t530, t373 * qJD(5), 0, 0, 0, t392 * t594 + t601, -t392 * t596 + t600, -t403 * t530 - t404 * t531, -qJD(6) * t356 + t409 * t481, -qJD(5) * t358 - t409 * t537, qJD(5) * t357 - t409 * t536, t530, qJD(5) * t137 + qJD(6) * t226 + t411 * t601, -qJD(5) * t138 - qJD(6) * t225 - t408 * t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, 0, -t570, -t572, -t586, 0, 0, 0, 0, 0, -t535, -t579, 0, 0, 0, 0, 0, -t589, -t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, -t458, 0, 0, 0, 0, 0, t455, t354, 0, 0, 0, 0, 0, qJD(6) * t346 - t505, qJD(6) * t345 - t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t500, -t456, t498 * t409, t279, t573, -t391 * t596 - t444, -t391 * t594 - t443, t620 - t348 + (-t403 * t566 - t539) * t409, t409 * t756 + t360 + t661, t383 + t462, -t463 + t538, t438 (t408 * t482 - t552) * qJD(5) + t236 * qJD(6) + t469 (-pkin(10) * t631 + (pkin(5) * t411 + t391 * t408) * t409) * qJD(5) + t235 * qJD(6) + t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t420, -t422, t408 * t461 + t619, t411 * t461 + t590, -t532 / 0.2e1 + t395, qJD(4) * t346 + qJD(5) * t236 - qJD(6) * t271 - t467, qJD(4) * t345 + qJD(5) * t235 + qJD(6) * t270 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t759, -qJD(2) * t202 - t696, -t759, t388 * t339, t499, qJD(2) * t124 + qJD(4) * t339 - t699, 0, 0, 0, 0, 0, t540 + t543 - t583, qJD(2) * t231 - t599 - t611, 0, 0, 0, 0, 0, qJD(2) * t106 + qJD(5) * t55 + qJD(6) * t99 - t698, qJD(2) * t142 - qJD(5) * t118 + qJD(6) * t97 - t697; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, 0, t570, t572, t586, 0, 0, 0, 0, 0, t535, t579, 0, 0, 0, 0, 0, t589, t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t755, 0, 0, 0, 0, 0, t473 + t625, -t588 + t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472 + t617, -t434 + t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t534, -t453, qJD(2) * t111 - t569 - t612, 0, 0, 0, 0, 0, -qJD(2) * t209 + t599 + t610, -t581 + (t598 - t604) * t412, 0, 0, 0, 0, 0, qJD(2) * t66 + qJD(5) * t56 - qJD(6) * t107 - t614, qJD(2) * t67 - qJD(5) * t119 - qJD(6) * t109 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t458, 0, 0, 0, 0, 0, -t455, -t354, 0, 0, 0, 0, 0, -qJD(6) * t344 + t505, -qJD(6) * t343 + t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t755, t498 * t412, 0, 0, 0, 0, 0, t434 + t624, t472 - t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t460 - t615, -t459 + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442, -t457, -t454 * t339, -t439, -t323, -qJD(2) * t29 - qJD(4) * t666 - t412 * t569 - t702, -qJD(2) * t31 + qJD(3) * t666 - t339 * t600 - t703, -qJD(2) * t91 + t411 * t546 + t117, -qJD(2) * t39 - t623 - t64, qJD(2) * t58 + qJD(6) * t160 - t694, -qJD(2) * t52 + qJD(6) * t157 + t695, -t423, qJD(2) * t1 - qJD(3) * t55 - qJD(4) * t56 + qJD(6) * t19 - t710, qJD(2) * t2 + qJD(3) * t118 + qJD(4) * t119 + qJD(6) * t17 - t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, t456, -t533, -t532, -t573, t444, t443, t385 * t403 - t348 - t620, -0.2e1 * t409 * t495 + t360 - t661, t387 - t462, -t386 + t463, -t438, -qJD(6) * t285 - t469, qJD(6) * t284 - t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, t580, 0, 0, 0, 0, 0, -t625, t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580, -t532, 0, 0, 0, 0, 0, -t624, t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, t374 * qJD(6), 0, 0, 0, -pkin(5) * t592, -pkin(5) * t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, -t421, -t501 + t591, -t502 - t592, -t450, -pkin(10) * t591 - t427, pkin(10) * t592 - t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, -t432, -qJD(2) * t96 - qJD(5) * t160 + t204 * t576, -qJD(2) * t101 - qJD(5) * t157 + t546, t196, qJD(2) * t9 - qJD(3) * t99 + qJD(4) * t107 - qJD(5) * t19 - t704, qJD(2) * t10 - qJD(3) * t97 + qJD(4) * t109 - qJD(5) * t17 - t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420, t422, -t619 + (t408 * t566 - t595) * t409, t385 * t411 + t382 - t590, t532 / 0.2e1 + t395, qJD(4) * t344 + qJD(5) * t285 + t467, qJD(4) * t343 - qJD(5) * t284 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617, -t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t460, t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, t421, t501, t502, t450, t427, t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
