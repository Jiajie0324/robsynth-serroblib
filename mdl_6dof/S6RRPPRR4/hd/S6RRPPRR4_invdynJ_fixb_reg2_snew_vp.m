% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 10:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPPRR4_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR4_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR4_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR4_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR4_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR4_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 10:24:01
% EndTime: 2019-05-06 10:24:32
% DurationCPUTime: 17.20s
% Computational Cost: add. (53611->617), mult. (145234->877), div. (0->0), fcn. (113172->12), ass. (0->355)
t328 = cos(pkin(11));
t329 = cos(pkin(6));
t320 = qJD(1) * t329 + qJD(2);
t318 = t320 ^ 2;
t326 = sin(pkin(11));
t336 = cos(qJ(2));
t327 = sin(pkin(6));
t388 = qJD(1) * t327;
t332 = sin(qJ(2));
t395 = t328 * t332;
t290 = (t326 * t336 + t395) * t388;
t433 = t290 ^ 2;
t438 = -t433 - t318;
t319 = qJDD(1) * t329 + qJDD(2);
t368 = t336 * t388;
t369 = t332 * t388;
t288 = t326 * t369 - t328 * t368;
t403 = t290 * t288;
t466 = t403 + t319;
t478 = t466 * t326;
t191 = -t328 * t438 + t478;
t477 = t466 * t328;
t193 = t326 * t438 + t477;
t503 = pkin(1) * (t191 * t336 + t193 * t332);
t502 = pkin(8) * (t191 * t332 - t193 * t336);
t501 = pkin(2) * t191;
t500 = qJ(3) * t191;
t499 = qJ(3) * t193;
t266 = -t433 + t318;
t367 = qJD(2) * t388;
t382 = qJDD(1) * t327;
t299 = t332 * t382 + t336 * t367;
t300 = -t332 * t367 + t336 * t382;
t250 = t328 * t299 + t326 * t300;
t404 = t288 * t320;
t441 = t250 + t404;
t231 = t403 - t319;
t490 = t231 * t328;
t491 = t231 * t326;
t498 = (t332 * (t266 * t326 + t490) + t336 * (-t266 * t328 + t491)) * t327 - t329 * t441;
t434 = t288 ^ 2;
t265 = t434 - t318;
t249 = t299 * t326 - t328 * t300;
t401 = t320 * t290;
t467 = -t249 + t401;
t497 = (t332 * (-t265 * t328 + t478) - t336 * (t265 * t326 + t477)) * t327 - t329 * t467;
t476 = t326 * t467 - t328 * t441;
t430 = pkin(2) * t476;
t492 = qJ(3) * t476;
t437 = -t433 - t434;
t475 = t326 * t441 + t328 * t467;
t487 = -pkin(2) * t437 + qJ(3) * t475;
t484 = pkin(1) * (t332 * t475 + t336 * t476);
t483 = pkin(8) * (-t332 * t476 + t336 * t475) - pkin(1) * t437;
t204 = t249 + t401;
t436 = t433 - t434;
t442 = -t250 + t404;
t482 = t329 * t436 + (t332 * (-t204 * t328 + t326 * t442) + t336 * (-t204 * t326 - t328 * t442)) * t327;
t226 = -t318 - t434;
t178 = t226 * t326 - t490;
t181 = -t226 * t328 - t491;
t481 = pkin(1) * (t178 * t336 - t181 * t332);
t480 = pkin(8) * (t178 * t332 + t181 * t336);
t474 = pkin(2) * t178;
t473 = qJ(3) * t178;
t472 = qJ(3) * t181;
t463 = 2 * qJD(4);
t330 = sin(qJ(6));
t331 = sin(qJ(5));
t335 = cos(qJ(5));
t260 = t288 * t331 + t320 * t335;
t282 = qJD(5) + t290;
t334 = cos(qJ(6));
t219 = t260 * t330 - t334 * t282;
t221 = t260 * t334 + t282 * t330;
t172 = t221 * t219;
t360 = -t335 * t249 + t331 * t319;
t197 = -qJD(5) * t260 - t360;
t196 = qJDD(6) - t197;
t444 = -t172 + t196;
t452 = t330 * t444;
t258 = -t335 * t288 + t320 * t331;
t203 = t260 * t258;
t243 = qJDD(5) + t250;
t443 = -t203 + t243;
t451 = t331 * t443;
t450 = t334 * t444;
t449 = t335 * t443;
t448 = t442 * qJ(4);
t338 = qJD(1) ^ 2;
t333 = sin(qJ(1));
t337 = cos(qJ(1));
t356 = g(1) * t337 + g(2) * t333;
t296 = -pkin(1) * t338 + pkin(8) * t382 - t356;
t364 = t333 * g(1) - g(2) * t337;
t396 = t327 * t338;
t295 = qJDD(1) * pkin(1) + pkin(8) * t396 + t364;
t402 = t295 * t329;
t357 = -t332 * t296 + t336 * t402;
t323 = t327 ^ 2;
t398 = t323 * t338;
t373 = t332 * t398;
t389 = qJD(1) * t320;
t186 = t319 * pkin(2) - t299 * qJ(3) + (pkin(2) * t373 + (qJ(3) * t389 - g(3)) * t327) * t336 + t357;
t397 = t327 * t332;
t225 = -g(3) * t397 + t336 * t296 + t332 * t402;
t347 = pkin(2) * t320 - qJ(3) * t369;
t325 = t336 ^ 2;
t374 = t325 * t398;
t187 = -pkin(2) * t374 + t300 * qJ(3) - t320 * t347 + t225;
t362 = -t328 * t186 + t326 * t187;
t348 = -t319 * pkin(3) - t318 * qJ(4) + qJDD(4) + t362;
t345 = -t319 * pkin(9) + t348;
t447 = pkin(4) * t441 + t345;
t446 = 2 * qJD(3);
t201 = pkin(5) * t258 - pkin(10) * t260;
t435 = t282 ^ 2;
t261 = pkin(4) * t290 - pkin(9) * t320;
t271 = t329 * g(3) + t327 * t295;
t200 = t300 * pkin(2) + qJ(3) * t374 - t347 * t369 - qJDD(3) + t271;
t440 = -pkin(3) * t401 + t290 * t463 + t200;
t339 = -t440 + t448;
t432 = pkin(3) + pkin(9);
t102 = -pkin(4) * t434 + t249 * t432 - t261 * t290 + t339;
t233 = pkin(3) * t288 - qJ(4) * t290;
t385 = t446 + t233;
t350 = (pkin(9) * t288 + t385) * t290;
t344 = -t335 * t102 - t331 * t350;
t59 = t331 * t447 - t344;
t54 = -pkin(5) * t435 + t243 * pkin(10) - t258 * t201 + t59;
t198 = -t258 * qJD(5) + t331 * t249 + t335 * t319;
t407 = t258 * t282;
t351 = t198 - t407;
t137 = -0.2e1 * qJD(3) * t288 + t326 * t186 + t328 * t187;
t107 = -t318 * pkin(3) + t319 * qJ(4) - t288 * t233 + t320 * t463 + t137;
t89 = -t249 * pkin(4) - pkin(9) * t434 + t261 * t320 + t107;
t63 = -t351 * pkin(10) + (t260 * t282 - t197) * pkin(5) + t89;
t32 = t330 * t54 - t334 * t63;
t33 = t330 * t63 + t334 * t54;
t20 = t330 * t32 + t334 * t33;
t445 = t323 * (-t329 * t338 + t389);
t224 = t327 * t336 * g(3) - t357;
t439 = t332 * t224 + t336 * t225;
t255 = qJD(6) + t258;
t361 = t330 * t198 - t334 * t243;
t121 = t221 * (qJD(6) - t255) + t361;
t217 = t219 ^ 2;
t218 = t221 ^ 2;
t252 = t255 ^ 2;
t256 = t258 ^ 2;
t257 = t260 ^ 2;
t136 = t290 * t446 + t362;
t82 = -t136 * t328 + t137 * t326;
t431 = pkin(2) * t82;
t429 = pkin(3) * t326;
t428 = pkin(3) * t328;
t427 = pkin(8) * t327;
t426 = t249 * pkin(3);
t58 = t102 * t331 - t335 * (t350 + t447);
t53 = -t243 * pkin(5) - pkin(10) * t435 + t201 * t260 + t58;
t425 = -pkin(5) * t53 + pkin(10) * t20;
t50 = t330 * t53;
t424 = t331 * t89;
t423 = t332 * t82;
t51 = t334 * t53;
t422 = t335 * t89;
t139 = t172 + t196;
t421 = t139 * t330;
t420 = t139 * t334;
t176 = t203 + t243;
t419 = t176 * t331;
t418 = t176 * t335;
t417 = t200 * t326;
t416 = t200 * t328;
t409 = t255 * t330;
t408 = t255 * t334;
t406 = t282 * t331;
t405 = t282 * t335;
t400 = t320 * t326;
t399 = t320 * t328;
t308 = t336 * t373;
t297 = t308 + t319;
t393 = t332 * t297;
t298 = -t308 + t319;
t391 = t336 * t298;
t383 = qJD(6) + t255;
t170 = -t218 - t252;
t101 = -t170 * t330 - t420;
t354 = -t334 * t198 - t330 * t243;
t126 = t219 * t383 + t354;
t381 = pkin(5) * t126 + pkin(10) * t101 + t50;
t122 = -t221 * t383 - t361;
t155 = -t252 - t217;
t95 = t155 * t334 - t452;
t380 = pkin(5) * t122 + pkin(10) * t95 - t51;
t379 = t331 * t172;
t378 = t335 * t172;
t377 = t326 * t203;
t376 = t328 * t203;
t324 = t332 ^ 2;
t375 = t324 * t398;
t372 = t329 * t403;
t304 = t320 * t368;
t371 = t304 + t299;
t370 = pkin(5) * t335 + pkin(4);
t366 = -qJ(4) * t326 - pkin(2);
t365 = pkin(5) * t331 + qJ(4);
t150 = t217 + t218;
t144 = -qJD(6) * t219 - t354;
t190 = t255 * t219;
t125 = t144 + t190;
t78 = -t121 * t334 + t125 * t330;
t363 = pkin(5) * t150 + pkin(10) * t78 + t20;
t83 = t136 * t326 + t328 * t137;
t19 = -t32 * t334 + t33 * t330;
t34 = t331 * t59 - t335 * t58;
t35 = t331 * t58 + t335 * t59;
t346 = (-qJD(5) + t282) * t260 - t360;
t112 = t290 * t385 + t348;
t305 = t329 * t319;
t342 = t305 + (t332 * (-t288 * t328 + t290 * t326) + t336 * (-t288 * t326 - t290 * t328)) * t327 * t320;
t341 = t372 + (t332 * (t328 * t250 - t290 * t400) + t336 * (t326 * t250 + t290 * t399)) * t327;
t340 = -t372 + (t332 * (t249 * t326 + t288 * t399) + t336 * (-t328 * t249 + t288 * t400)) * t327;
t303 = t320 * t369;
t302 = (t324 - t325) * t398;
t301 = -t318 - t374;
t283 = -t375 - t318;
t264 = t300 - t303;
t263 = -t304 + t299;
t262 = t300 + t303;
t223 = -t257 + t435;
t222 = t256 - t435;
t202 = t257 - t256;
t199 = -t257 - t435;
t195 = -t435 - t256;
t189 = -t218 + t252;
t188 = t217 - t252;
t185 = -t256 - t257;
t174 = (-t258 * t335 + t260 * t331) * t282;
t173 = (t258 * t331 + t260 * t335) * t282;
t171 = t218 - t217;
t164 = -t198 - t407;
t160 = (qJD(5) + t282) * t260 + t360;
t159 = t198 * t335 - t260 * t406;
t158 = -t198 * t331 - t260 * t405;
t157 = -t197 * t331 + t258 * t405;
t156 = -t197 * t335 - t258 * t406;
t154 = t222 * t335 - t419;
t153 = -t223 * t331 + t449;
t152 = -t222 * t331 - t418;
t151 = -t223 * t335 - t451;
t148 = -t199 * t331 - t418;
t147 = t199 * t335 - t419;
t146 = (-t219 * t334 + t221 * t330) * t255;
t145 = (-t219 * t330 - t221 * t334) * t255;
t143 = -qJD(6) * t221 - t361;
t142 = t195 * t335 - t451;
t141 = t195 * t331 + t449;
t134 = t339 + t426;
t133 = -pkin(3) * t441 + qJ(4) * t467 + t430;
t132 = -t164 * t331 + t335 * t346;
t131 = -t160 * t335 - t331 * t351;
t130 = t164 * t335 + t331 * t346;
t129 = t160 * t331 - t335 * t351;
t128 = t146 * t335 + t196 * t331;
t127 = -t146 * t331 + t196 * t335;
t124 = t144 - t190;
t118 = t144 * t334 - t221 * t409;
t117 = t144 * t330 + t221 * t408;
t116 = -t143 * t330 + t219 * t408;
t115 = t143 * t334 + t219 * t409;
t114 = (t204 + t249) * pkin(3) + t339;
t113 = -t426 + t440 - 0.2e1 * t448;
t111 = t188 * t334 - t421;
t110 = -t189 * t330 + t450;
t109 = t188 * t330 + t420;
t108 = t189 * t334 + t452;
t106 = -t137 - t501;
t105 = -t136 + t474;
t104 = t147 * t326 + t328 * t351;
t103 = -t147 * t328 + t326 * t351;
t100 = t170 * t334 - t421;
t98 = t141 * t326 + t160 * t328;
t97 = -t141 * t328 + t160 * t326;
t96 = -qJ(4) * t437 + t112;
t94 = t155 * t330 + t450;
t92 = -pkin(3) * t437 + t107;
t91 = t130 * t326 + t185 * t328;
t90 = -t130 * t328 + t185 * t326;
t88 = t118 * t335 + t379;
t87 = t116 * t335 - t379;
t86 = -t118 * t331 + t378;
t85 = -t116 * t331 - t378;
t81 = -pkin(3) * t438 + qJ(4) * t466 + t107 + t501;
t80 = pkin(3) * t231 - qJ(4) * t226 + t112 - t474;
t79 = pkin(4) * t130 - qJ(4) * t132;
t77 = t122 * t334 - t124 * t330;
t76 = -t121 * t330 - t125 * t334;
t75 = t122 * t330 + t124 * t334;
t73 = t111 * t335 - t121 * t331;
t72 = t110 * t335 + t125 * t331;
t71 = -t111 * t331 - t121 * t335;
t70 = -t110 * t331 + t125 * t335;
t69 = t107 * t328 + t112 * t326;
t68 = t107 * t326 - t112 * t328;
t67 = t101 * t335 - t126 * t331;
t66 = t101 * t331 + t126 * t335;
t65 = -t122 * t331 + t335 * t95;
t64 = t122 * t335 + t331 * t95;
t61 = t171 * t331 + t335 * t77;
t60 = t171 * t335 - t331 * t77;
t57 = -t150 * t331 + t335 * t78;
t56 = t150 * t335 + t331 * t78;
t55 = pkin(4) * t351 - t148 * t432 - t424;
t49 = pkin(4) * t160 - t142 * t432 + t422;
t48 = t100 * t328 + t326 * t66;
t47 = t100 * t326 - t328 * t66;
t46 = t326 * t64 + t328 * t94;
t45 = t326 * t94 - t328 * t64;
t44 = -qJ(4) * t148 - t331 * t345 + (-t331 * t441 + t147) * pkin(4) + t344;
t43 = pkin(4) * t141 - qJ(4) * t142 - t58;
t42 = pkin(2) * t68 - pkin(3) * t112 + qJ(4) * t107;
t41 = pkin(2) * t103 + qJ(4) * t351 - t147 * t432 + t422;
t40 = -pkin(10) * t100 + t51;
t39 = pkin(2) * t97 + qJ(4) * t160 - t141 * t432 + t424;
t38 = -pkin(10) * t94 + t50;
t37 = t326 * t56 + t328 * t76;
t36 = t326 * t76 - t328 * t56;
t29 = t326 * t34 + t328 * t89;
t28 = t326 * t89 - t328 * t34;
t27 = -pkin(5) * t100 + t33;
t26 = -pkin(5) * t94 + t32;
t25 = pkin(4) * t185 - t132 * t432 - t35;
t24 = pkin(2) * t90 + qJ(4) * t185 - t130 * t432 - t34;
t23 = pkin(4) * t66 - qJ(4) * t67 + t381;
t22 = pkin(4) * t64 - qJ(4) * t65 + t380;
t21 = pkin(4) * t34 - qJ(4) * t35;
t17 = pkin(4) * t89 - t35 * t432;
t16 = -pkin(10) * t76 - t19;
t15 = t20 * t335 + t331 * t53;
t14 = t20 * t331 - t335 * t53;
t13 = pkin(4) * t100 - t335 * t27 - t331 * t40 - t432 * t67;
t12 = pkin(4) * t94 - t335 * t26 - t331 * t38 - t432 * t65;
t11 = pkin(2) * t28 + qJ(4) * t89 - t34 * t432;
t10 = pkin(4) * t56 - qJ(4) * t57 + t363;
t9 = pkin(2) * t47 + qJ(4) * t100 - t331 * t27 + t335 * t40 - t432 * t66;
t8 = pkin(2) * t45 + qJ(4) * t94 - t331 * t26 + t335 * t38 - t432 * t64;
t7 = -t331 * t16 + t370 * t76 - t432 * t57;
t6 = t14 * t326 + t19 * t328;
t5 = -t14 * t328 + t19 * t326;
t4 = pkin(2) * t36 + t335 * t16 + t365 * t76 - t432 * t56;
t3 = pkin(4) * t14 - qJ(4) * t15 + t425;
t2 = -t432 * t15 + (pkin(10) * t331 + t370) * t19;
t1 = pkin(2) * t5 - t432 * t14 + (-pkin(10) * t335 + t365) * t19;
t18 = [0, 0, 0, 0, 0, qJDD(1), t364, t356, 0, 0, (t299 * t327 + t336 * t445) * t332, t329 * t302 + (t332 * t264 + t336 * t371) * t327, t329 * t263 + (t393 + t336 * (t318 - t375)) * t327, (t300 * t327 - t332 * t445) * t336, t329 * t262 + (t332 * (-t318 + t374) + t391) * t327, t305, (-t224 + pkin(1) * (t297 * t336 + t301 * t332)) * t329 + (t336 * t271 + pkin(1) * t264 + pkin(8) * (t301 * t336 - t393)) * t327, -t271 * t397 - t329 * t225 + pkin(1) * (-t327 * t371 + (t283 * t336 - t298 * t332) * t329) + (-t283 * t332 - t391) * t427, pkin(1) * ((t262 * t332 - t263 * t336) * t329 - (-t324 - t325) * t323 * t396) + (t262 * t336 + t263 * t332) * t427 + t439 * t327, pkin(1) * (t327 * t271 + (-t224 * t336 + t225 * t332) * t329) + t439 * t427, t341, t482, -t498, t340, -t497, t342, (t105 + t481) * t329 + (t332 * (-t417 - t473) + t336 * (-pkin(2) * t204 + t416 - t472) - pkin(1) * t204 - t480) * t327, (t106 - t503) * t329 + (t332 * (-t416 + t500) + t336 * (pkin(2) * t442 - t417 - t499) + pkin(1) * t442 + t502) * t327, (t430 + t484) * t329 + (t332 * (-t82 - t492) + t336 * (t487 + t83) + t483) * t327, (t431 + pkin(1) * (t332 * t83 + t336 * t82)) * t329 + (-qJ(3) * t423 + t336 * (pkin(2) * t200 + qJ(3) * t83) + pkin(1) * t200 + pkin(8) * (t336 * t83 - t423)) * t327, t342, t498, t497, t341, t482, t340, (t133 + t484) * t329 + (t332 * (-t326 * t92 + t328 * t96 - t492) + t336 * (t326 * t96 + t328 * t92 + t487) + t483) * t327, (t80 - t481) * t329 + (t332 * (-t114 * t326 + t473) + t336 * (t328 * t114 + t472) + t480 - (-qJ(4) * t395 + t336 * t366 - pkin(1)) * t204) * t327, (t81 + t503) * t329 + (t332 * (t113 * t328 - t500) + t336 * (t326 * t113 + t499) - t502 + (t332 * t429 + t336 * (-pkin(2) - t428) - pkin(1)) * t442) * t327, (t42 + pkin(1) * (t332 * t69 + t336 * t68)) * t329 + ((t332 * (-qJ(4) * t328 + t429) + t336 * (t366 - t428) - pkin(1)) * t134 + (pkin(8) + qJ(3)) * (-t332 * t68 + t336 * t69)) * t327, t329 * t159 + (t332 * (-t158 * t326 + t376) + t336 * (t158 * t328 + t377)) * t327, t329 * t131 + (t332 * (-t129 * t326 + t202 * t328) + t336 * (t129 * t328 + t202 * t326)) * t327, t329 * t153 + (t332 * (-t151 * t326 - t164 * t328) + t336 * (t151 * t328 - t164 * t326)) * t327, t329 * t157 + (t332 * (-t156 * t326 - t376) + t336 * (t156 * t328 - t377)) * t327, t329 * t154 + (t332 * (-t152 * t326 + t328 * t346) + t336 * (t152 * t328 + t326 * t346)) * t327, t329 * t174 + (t332 * (-t173 * t326 + t243 * t328) + t336 * (t173 * t328 + t243 * t326)) * t327, (t39 + pkin(1) * (t332 * t98 + t336 * t97)) * t329 + (t332 * (-qJ(3) * t97 - t326 * t49 + t328 * t43) + t336 * (-pkin(2) * t142 + qJ(3) * t98 + t326 * t43 + t328 * t49) - pkin(1) * t142 + pkin(8) * (-t332 * t97 + t336 * t98)) * t327, (t41 + pkin(1) * (t103 * t336 + t104 * t332)) * t329 + (t332 * (-qJ(3) * t103 - t326 * t55 + t328 * t44) + t336 * (-pkin(2) * t148 + qJ(3) * t104 + t326 * t44 + t328 * t55) - pkin(1) * t148 + pkin(8) * (-t103 * t332 + t104 * t336)) * t327, (t24 + pkin(1) * (t332 * t91 + t336 * t90)) * t329 + (t332 * (-qJ(3) * t90 - t25 * t326 + t328 * t79) + t336 * (-pkin(2) * t132 + qJ(3) * t91 + t25 * t328 + t326 * t79) - pkin(1) * t132 + pkin(8) * (-t332 * t90 + t336 * t91)) * t327, (t11 + pkin(1) * (t28 * t336 + t29 * t332)) * t329 + (t332 * (-qJ(3) * t28 - t17 * t326 + t21 * t328) + t336 * (-pkin(2) * t35 + qJ(3) * t29 + t17 * t328 + t21 * t326) - pkin(1) * t35 + pkin(8) * (-t28 * t332 + t29 * t336)) * t327, t329 * t88 + (t332 * (t117 * t328 - t326 * t86) + t336 * (t117 * t326 + t328 * t86)) * t327, t329 * t61 + (t332 * (-t326 * t60 + t328 * t75) + t336 * (t326 * t75 + t328 * t60)) * t327, t329 * t72 + (t332 * (t108 * t328 - t326 * t70) + t336 * (t108 * t326 + t328 * t70)) * t327, t329 * t87 + (t332 * (t115 * t328 - t326 * t85) + t336 * (t115 * t326 + t328 * t85)) * t327, t329 * t73 + (t332 * (t109 * t328 - t326 * t71) + t336 * (t109 * t326 + t328 * t71)) * t327, t329 * t128 + (t332 * (-t127 * t326 + t145 * t328) + t336 * (t127 * t328 + t145 * t326)) * t327, (t8 + pkin(1) * (t332 * t46 + t336 * t45)) * t329 + (t332 * (-qJ(3) * t45 - t12 * t326 + t22 * t328) + t336 * (-pkin(2) * t65 + qJ(3) * t46 + t12 * t328 + t22 * t326) - pkin(1) * t65 + pkin(8) * (-t332 * t45 + t336 * t46)) * t327, (t9 + pkin(1) * (t332 * t48 + t336 * t47)) * t329 + (t332 * (-qJ(3) * t47 - t13 * t326 + t23 * t328) + t336 * (-pkin(2) * t67 + qJ(3) * t48 + t13 * t328 + t23 * t326) - pkin(1) * t67 + pkin(8) * (-t332 * t47 + t336 * t48)) * t327, (t4 + pkin(1) * (t332 * t37 + t336 * t36)) * t329 + (t332 * (-qJ(3) * t36 + t10 * t328 - t326 * t7) + t336 * (-pkin(2) * t57 + qJ(3) * t37 + t10 * t326 + t328 * t7) - pkin(1) * t57 + pkin(8) * (-t332 * t36 + t336 * t37)) * t327, (t1 + pkin(1) * (t332 * t6 + t336 * t5)) * t329 + (t332 * (-qJ(3) * t5 - t2 * t326 + t3 * t328) + t336 * (-pkin(2) * t15 + qJ(3) * t6 + t2 * t328 + t3 * t326) - pkin(1) * t15 + pkin(8) * (-t332 * t5 + t336 * t6)) * t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, t302, t263, t308, t262, t319, -t224, -t225, 0, 0, t403, t436, t441, -t403, t467, t319, t105, t106, t430, t431, t319, -t441, -t467, t403, t436, -t403, t133, t80, t81, t42, t159, t131, t153, t157, t154, t174, t39, t41, t24, t11, t88, t61, t72, t87, t73, t128, t8, t9, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, -t442, t437, -t200, 0, 0, 0, 0, 0, 0, t437, -t204, t442, t134, 0, 0, 0, 0, 0, 0, t142, t148, t132, t35, 0, 0, 0, 0, 0, 0, t65, t67, t57, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t231, t438, t112, 0, 0, 0, 0, 0, 0, t141, t147, t130, t34, 0, 0, 0, 0, 0, 0, t64, t66, t56, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202, -t164, -t203, t346, t243, -t58, -t59, 0, 0, t117, t75, t108, t115, t109, t145, t380, t381, t363, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, t171, t125, -t172, -t121, t196, -t32, -t33, 0, 0;];
tauJ_reg  = t18;
