% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:05:03
% EndTime: 2019-03-09 09:05:23
% DurationCPUTime: 8.71s
% Computational Cost: add. (13167->566), mult. (39389->739), div. (0->0), fcn. (31079->10), ass. (0->285)
t208 = sin(pkin(11));
t210 = cos(pkin(11));
t214 = sin(qJ(2));
t217 = cos(qJ(2));
t246 = t208 * t217 + t210 * t214;
t209 = sin(pkin(6));
t308 = qJD(1) * t209;
t167 = t246 * t308;
t384 = t167 + qJD(5);
t211 = cos(pkin(6));
t360 = pkin(1) * t214;
t198 = t211 * t360;
t321 = t209 * t217;
t352 = pkin(8) + qJ(3);
t363 = t321 * t352 + t198;
t145 = t363 * qJD(1);
t133 = t208 * t145;
t199 = t211 * t217 * pkin(1);
t193 = qJD(1) * t199;
t282 = t214 * t352;
t265 = t209 * t282;
t144 = -qJD(1) * t265 + t193;
t99 = t210 * t144 - t133;
t312 = qJD(4) - t99;
t296 = qJD(1) * qJD(2);
t280 = t217 * t296;
t263 = t209 * t280;
t306 = qJD(2) * t209;
t286 = t214 * t306;
t264 = qJD(1) * t286;
t155 = -t208 * t264 + t210 * t263;
t213 = sin(qJ(5));
t216 = cos(qJ(5));
t221 = t384 ^ 2;
t220 = t216 * t155 - t213 * t221;
t212 = sin(qJ(6));
t215 = cos(qJ(6));
t172 = t246 * t209;
t165 = qJD(2) * t172;
t154 = qJD(1) * t165;
t307 = qJD(1) * t211;
t195 = qJD(2) + t307;
t187 = qJD(2) * t193;
t233 = (-qJD(2) * t282 + qJD(3) * t217) * t209;
t115 = qJD(1) * t233 + t187;
t322 = t209 * t214;
t129 = -qJD(2) * t363 - qJD(3) * t322;
t116 = t129 * qJD(1);
t65 = t210 * t115 + t208 * t116;
t289 = t195 * qJD(4) + t65;
t45 = -pkin(4) * t154 + t289;
t318 = t213 * t154;
t287 = t217 * t308;
t288 = t214 * t308;
t163 = t208 * t288 - t210 * t287;
t370 = -t216 * t163 + t195 * t213;
t88 = qJD(5) * t370 - t318;
t126 = t163 * t213 + t195 * t216;
t141 = t216 * t154;
t89 = qJD(5) * t126 - t141;
t22 = pkin(5) * t89 + pkin(10) * t88 + t45;
t236 = qJD(1) * t172;
t229 = qJD(5) + t236;
t127 = t195 * pkin(2) + t144;
t86 = t210 * t127 - t133;
t257 = qJD(4) - t86;
t357 = t167 * pkin(4);
t361 = pkin(3) + pkin(9);
t52 = -t195 * t361 + t257 + t357;
t182 = (-pkin(2) * t217 - pkin(1)) * t209;
t309 = qJD(1) * t182;
t177 = qJD(3) + t309;
t228 = -t167 * qJ(4) + t177;
t67 = t163 * t361 + t228;
t27 = t213 * t52 + t216 * t67;
t24 = pkin(10) * t229 + t27;
t359 = pkin(4) * t163;
t320 = t210 * t145;
t87 = t208 * t127 + t320;
t76 = -t195 * qJ(4) - t87;
t56 = -t76 - t359;
t32 = pkin(5) * t370 - pkin(10) * t126 + t56;
t253 = t212 * t24 - t215 * t32;
t303 = qJD(5) * t216;
t304 = qJD(5) * t213;
t64 = t115 * t208 - t210 * t116;
t50 = pkin(4) * t155 + t64;
t186 = pkin(2) * t264;
t275 = -t155 * qJ(4) + t186;
t240 = -t167 * qJD(4) + t275;
t51 = t154 * t361 + t240;
t242 = -t213 * t50 - t216 * t51 - t52 * t303 + t304 * t67;
t5 = pkin(10) * t155 - t242;
t1 = -qJD(6) * t253 + t212 * t22 + t215 * t5;
t123 = qJD(6) + t370;
t383 = t253 * t123 + t1;
t261 = pkin(5) * t216 + pkin(10) * t213;
t382 = -qJD(5) * t261 + (-pkin(4) - t261) * t167 - t312;
t202 = -pkin(2) * t210 - pkin(3);
t200 = -pkin(9) + t202;
t98 = t144 * t208 + t320;
t69 = t98 - t359;
t191 = pkin(2) * t288;
t274 = t163 * qJ(4) + t191;
t74 = t167 * t361 + t274;
t35 = t213 * t69 + t216 * t74;
t381 = pkin(10) * t163 + t200 * t303 - t35;
t373 = t126 * t384;
t379 = t216 * t373;
t319 = t212 * t213;
t108 = t215 * t163 + t167 * t319;
t299 = t212 * qJD(5);
t378 = t213 * t299 + t108;
t26 = -t213 * t67 + t216 * t52;
t256 = -t26 * t384 - t242;
t205 = t209 ^ 2;
t377 = -0.2e1 * t205 * t296;
t10 = t212 * t32 + t215 * t24;
t2 = -qJD(6) * t10 - t212 * t5 + t215 * t22;
t376 = -t10 * t123 - t2;
t225 = t215 * t229;
t90 = t212 * t126 - t225;
t375 = t384 * t90;
t270 = t384 * t370;
t374 = -t88 + t270;
t111 = t155 * t172;
t285 = t217 * t306;
t166 = -t208 * t286 + t210 * t285;
t371 = t166 * t167 + t111;
t92 = t215 * t126 + t212 * t229;
t333 = qJD(6) * t92;
t40 = -t215 * t155 - t212 * t88 + t333;
t159 = t167 ^ 2;
t362 = t163 ^ 2;
t369 = -t362 - t159;
t368 = -t362 + t159;
t278 = t213 * t51 - t216 * t50;
t8 = -t27 * qJD(5) - t278;
t367 = -t27 * t384 - t8;
t260 = t10 * t215 + t212 * t253;
t6 = -t155 * pkin(5) - t8;
t366 = qJD(5) * t260 - t6;
t365 = -t200 * t155 - t384 * t56;
t316 = t213 * t215;
t109 = -t163 * t212 + t167 * t316;
t300 = qJD(6) * t216;
t235 = t212 * t300 + t215 * t304 + t109;
t315 = t215 * t216;
t364 = -t123 * t235 + t89 * t315;
t219 = -t213 * t155 - t216 * t221;
t143 = t211 * pkin(2) + t199 - t265;
t311 = pkin(8) * t321 + t198;
t160 = qJ(3) * t321 + t311;
t102 = t210 * t143 - t208 * t160;
t68 = t172 * pkin(4) - t211 * t361 - t102;
t171 = t208 * t322 - t210 * t321;
t237 = -t172 * qJ(4) + t182;
t82 = t171 * t361 + t237;
t349 = t213 * t68 + t216 * t82;
t192 = pkin(2) * t286;
t239 = -t166 * qJ(4) - t172 * qJD(4) + t192;
t57 = t165 * t361 + t239;
t194 = qJD(2) * t199;
t128 = t194 + t233;
t79 = t128 * t208 - t210 * t129;
t58 = pkin(4) * t166 + t79;
t14 = -qJD(5) * t349 - t213 * t57 + t216 * t58;
t358 = t154 * pkin(3);
t356 = t6 * t212;
t355 = t6 * t215;
t353 = t92 * t90;
t201 = pkin(2) * t208 + qJ(4);
t180 = pkin(5) * t213 - pkin(10) * t216 + t201;
t131 = t180 * t212 + t200 * t316;
t351 = qJD(6) * t131 + t212 * t381 + t215 * t382;
t130 = t180 * t215 - t200 * t319;
t350 = -qJD(6) * t130 + t212 * t382 - t215 * t381;
t347 = t123 * t90;
t136 = -t171 * t216 + t211 * t213;
t346 = t136 * t89;
t95 = t163 * pkin(3) + t228;
t345 = t167 * t95;
t344 = t212 * t89;
t343 = t212 * t90;
t342 = t213 * t40;
t341 = t215 * t89;
t340 = t216 * t40;
t302 = qJD(6) * t212;
t39 = -qJD(6) * t225 + t126 * t302 - t212 * t155 + t215 * t88;
t339 = t39 * t212;
t338 = t40 * t215;
t337 = t89 * t213;
t336 = t92 * t108;
t335 = t92 * t123;
t334 = qJD(6) * t90;
t332 = t126 * t370;
t331 = t126 * t163;
t330 = t163 * t370;
t329 = t163 * t167;
t328 = t163 * t195;
t326 = t167 * t195;
t323 = t205 * qJD(1) ^ 2;
t314 = t216 * t167;
t313 = t357 + t312;
t80 = t210 * t128 + t208 * t129;
t103 = t208 * t143 + t210 * t160;
t310 = t214 ^ 2 - t217 ^ 2;
t305 = qJD(5) * t200;
t301 = qJD(6) * t215;
t298 = qJD(2) - t195;
t295 = -t39 * t213 + (t303 + t314) * t92;
t293 = t90 * t304;
t292 = t92 * t304;
t291 = t92 * t300;
t290 = t217 * t323;
t73 = -t211 * qJD(4) - t80;
t96 = -t211 * qJ(4) - t103;
t279 = t109 * t90 - t40 * t315;
t277 = -t39 + t334;
t273 = t378 * t123;
t271 = t123 * t215;
t268 = t195 + t307;
t266 = t214 * t290;
t262 = pkin(1) * t377;
t259 = t10 * t212 - t215 * t253;
t255 = t167 * t79 + t172 * t64;
t254 = -t79 * t195 - t64 * t211;
t31 = pkin(10) * t172 + t349;
t137 = t171 * t213 + t211 * t216;
t72 = -pkin(4) * t171 - t96;
t41 = pkin(5) * t136 - pkin(10) * t137 + t72;
t16 = t212 * t41 + t215 * t31;
t15 = -t212 * t31 + t215 * t41;
t37 = -t213 * t82 + t216 * t68;
t34 = -t213 * t74 + t216 * t69;
t106 = t137 * t215 + t172 * t212;
t105 = t137 * t212 - t172 * t215;
t250 = t154 * t171 + t163 * t165;
t249 = t154 * t211 + t165 * t195;
t248 = t155 * t211 + t166 * t195;
t245 = t205 * t214 * t280;
t53 = -pkin(4) * t165 - t73;
t244 = -t195 * t98 + t64;
t243 = -t123 * t301 - t344;
t13 = t213 * t58 + t216 * t57 + t68 * t303 - t304 * t82;
t23 = -pkin(5) * t229 - t26;
t241 = -pkin(10) * t89 + t123 * t23;
t169 = -pkin(8) * t264 + t187;
t176 = t311 * qJD(2);
t234 = qJD(2) * t167;
t232 = t155 - t328;
t231 = t155 + t328;
t227 = t243 + t375;
t226 = -t154 * t172 - t155 * t171 - t163 * t166 - t165 * t167;
t224 = -qJD(6) * t259 + t1 * t215 - t2 * t212;
t222 = t23 * t384 + t224;
t178 = -pkin(8) * t322 + t199;
t175 = -pkin(8) * t286 + t194;
t174 = t311 * qJD(1);
t173 = -pkin(8) * t288 + t193;
t170 = qJD(1) * t176;
t118 = t195 * t212 - t215 * t314;
t117 = t195 * t215 + t212 * t314;
t107 = t171 * pkin(3) + t237;
t104 = pkin(3) * t167 + t274;
t101 = qJD(5) * t137 - t165 * t216;
t100 = -t165 * t213 - t171 * t303 + t211 * t304;
t97 = -pkin(3) * t211 - t102;
t85 = t216 * t89;
t81 = pkin(5) * t126 + pkin(10) * t370;
t78 = pkin(3) * t165 + t239;
t75 = -pkin(3) * t195 + t257;
t66 = t240 + t358;
t43 = -qJD(6) * t105 - t100 * t215 + t166 * t212;
t42 = qJD(6) * t106 - t100 * t212 - t166 * t215;
t30 = -pkin(5) * t172 - t37;
t28 = pkin(5) * t163 - t34;
t25 = pkin(5) * t101 + pkin(10) * t100 + t53;
t20 = t212 * t81 + t215 * t26;
t19 = -t212 * t26 + t215 * t81;
t12 = -t166 * pkin(5) - t14;
t11 = pkin(10) * t166 + t13;
t4 = -qJD(6) * t16 - t212 * t11 + t215 * t25;
t3 = qJD(6) * t15 + t215 * t11 + t212 * t25;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t245, t310 * t377, t268 * t285, -0.2e1 * t245, -t268 * t286, 0, -t170 * t211 - t176 * t195 + t214 * t262, -t169 * t211 - t175 * t195 + t217 * t262 (t169 * t217 + t170 * t214 + (-t173 * t217 - t174 * t214) * qJD(2) + (t175 * t217 + t176 * t214 + (-t178 * t217 - t214 * t311) * qJD(2)) * qJD(1)) * t209, t169 * t311 - t170 * t178 - t173 * t176 + t174 * t175, t371, t226, t248, t250, -t249, 0, t182 * t154 + t177 * t165 + (qJD(1) * t171 + t163) * t192 + t254, t182 * t155 + t177 * t166 - t80 * t195 - t65 * t211 + (t167 + t236) * t192, -t102 * t155 - t103 * t154 - t163 * t80 - t165 * t87 - t166 * t86 - t171 * t65 + t255, -t64 * t102 + t65 * t103 - t86 * t79 + t87 * t80 + (t177 + t309) * t192, 0, -t248, t249, t371, t226, t250, t154 * t96 + t155 * t97 + t163 * t73 + t165 * t76 + t166 * t75 - t171 * t289 + t255, -t107 * t154 - t163 * t78 - t165 * t95 - t171 * t66 - t254, -t107 * t155 - t166 * t95 - t167 * t78 - t172 * t66 - t195 * t73 + t211 * t289, t107 * t66 - t289 * t96 + t64 * t97 + t73 * t76 + t75 * t79 + t78 * t95, -t100 * t126 - t137 * t88, t100 * t370 - t101 * t126 + t136 * t88 - t137 * t89, -t100 * t229 + t126 * t166 + t137 * t155 - t88 * t172, t101 * t370 + t346, -t101 * t229 - t136 * t155 - t166 * t370 - t89 * t172, t166 * t229 + t111, t56 * t101 + t45 * t136 + t14 * t229 + t37 * t155 + t26 * t166 + t8 * t172 + t370 * t53 + t72 * t89, -t56 * t100 + t53 * t126 - t13 * t384 + t45 * t137 - t155 * t349 - t27 * t166 + t172 * t242 - t72 * t88, t100 * t26 - t101 * t27 - t126 * t14 - t13 * t370 + t136 * t242 - t137 * t8 - t349 * t89 + t37 * t88, t13 * t27 + t14 * t26 - t242 * t349 + t37 * t8 + t45 * t72 + t53 * t56, -t106 * t39 + t43 * t92, t105 * t39 - t106 * t40 - t42 * t92 - t43 * t90, t101 * t92 + t106 * t89 + t123 * t43 - t136 * t39, t105 * t40 + t42 * t90, -t101 * t90 - t105 * t89 - t123 * t42 - t136 * t40, t101 * t123 + t346, -t101 * t253 + t105 * t6 + t12 * t90 + t123 * t4 + t136 * t2 + t15 * t89 + t23 * t42 + t30 * t40, -t1 * t136 - t10 * t101 + t106 * t6 + t12 * t92 - t123 * t3 - t16 * t89 + t23 * t43 - t30 * t39, -t1 * t105 - t10 * t42 - t106 * t2 + t15 * t39 - t16 * t40 + t253 * t43 - t3 * t90 - t4 * t92, t1 * t16 + t10 * t3 + t12 * t23 + t15 * t2 - t253 * t4 + t30 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, t310 * t323, t298 * t287, t266, -t298 * t288, 0, -pkin(8) * t263 + t174 * t195 + (-t211 * t296 + t323) * t360, pkin(1) * t290 + t173 * t195 - t169, 0, 0, t329, t368, t231, -t329, -t234 + t326, 0, -t163 * t191 - t167 * t177 - t244, t163 * t177 - t167 * t191 + t195 * t99 - t65 (t87 - t98) * t167 + (-t86 + t99) * t163 + (-t154 * t208 - t155 * t210) * pkin(2), t86 * t98 - t87 * t99 + (-t177 * t288 + t208 * t65 - t210 * t64) * pkin(2), 0, -t231, t154 - t326, t329, t368, -t329, -t201 * t154 + t202 * t155 + (-t76 - t98) * t167 + (t75 - t312) * t163, t104 * t163 + t244 + t345, t104 * t167 - t95 * t163 + t195 * t312 + t289, -t95 * t104 + t201 * t289 + t64 * t202 - t312 * t76 - t75 * t98, -t213 * t373 - t216 * t88, -t85 - t379 + (t88 + t270) * t213, t220 + t331, t216 * t270 + t337, t219 - t330, t229 * t163, t201 * t89 - t34 * t229 + t26 * t163 + (-t229 * t305 + t45) * t213 + t313 * t370 - t365 * t216, -t201 * t88 + t35 * t384 - t27 * t163 + (-t305 * t384 + t45) * t216 + t313 * t126 + t365 * t213, t35 * t370 + t34 * t126 + (-t167 * t27 + t200 * t88 - t8 + (-t200 * t370 - t27) * qJD(5)) * t216 + (t167 * t26 - t200 * t89 + t242 + (t126 * t200 + t26) * qJD(5)) * t213, t45 * t201 - t26 * t34 - t27 * t35 + t313 * t56 + (-t242 * t213 + t8 * t216 + (-t213 * t26 + t216 * t27) * qJD(5)) * t200, -t235 * t92 - t315 * t39, t336 + (-t291 + t293) * t215 + (t292 + (t39 + t334) * t216) * t212 + t279, t295 + t364, t212 * t340 + (t215 * t300 - t378) * t90, -t342 + (t243 - t375) * t216 + t273, t123 * t216 * t384 + t337, -t23 * t108 + t130 * t89 - t28 * t90 - t351 * t123 + (t2 + (t200 * t90 - t212 * t23) * qJD(5)) * t213 + (-t200 * t40 + t23 * t301 - t253 * t384 + t356) * t216, -t23 * t109 - t131 * t89 - t28 * t92 + t350 * t123 + (-t1 + (t200 * t92 - t215 * t23) * qJD(5)) * t213 + (-t10 * t384 + t200 * t39 - t23 * t302 + t355) * t216, t10 * t108 - t253 * t109 + t130 * t39 - t131 * t40 + t351 * t92 + t350 * t90 + t259 * t304 + (-qJD(6) * t260 - t1 * t212 - t2 * t215) * t216, t1 * t131 + t2 * t130 - t23 * t28 + t351 * t253 + (-t6 * t216 + t23 * t304) * t200 - t350 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154 + t326, t232, t369, t163 * t87 + t167 * t86 + t186, 0, 0, 0, 0, 0, 0, t369, -t234 - t326, -t232, t358 - t76 * t163 + (-qJD(4) - t75) * t167 + t275, 0, 0, 0, 0, 0, 0, t219 + t330, t331 - t220, t213 * t374 + t379 - t85, t56 * t163 + t213 * t367 + t256 * t216, 0, 0, 0, 0, 0, 0, t216 * t227 + t273 + t342, t295 - t364, -t336 + (t291 + t293) * t215 + (t216 * t277 - t292) * t212 + t279, -t10 * t109 - t108 * t253 - t213 * t366 + t222 * t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t329, -t195 ^ 2 - t159, t195 * t76 + t345 + t64, 0, 0, 0, 0, 0, 0, -t195 * t370 + t220, -t195 * t126 + t219, -t374 * t216 + (-t89 + t373) * t213, -t56 * t195 + t256 * t213 - t216 * t367, 0, 0, 0, 0, 0, 0, -t340 + (-t216 * t299 - t117) * t123 + t227 * t213, t216 * t39 + (-t215 * t303 + t118) * t123 + (t123 * t302 + t384 * t92 - t341) * t213, t117 * t92 + t118 * t90 + (t212 * t92 - t215 * t90) * t303 + (-t339 - t338 + (t215 * t92 + t343) * qJD(6)) * t213, -t10 * t118 + t117 * t253 + t222 * t213 + t216 * t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, t126 ^ 2 - t370 ^ 2, t236 * t370 + t318, -t332, t126 * t236 + t141, t155, -t56 * t126 + t236 * t27 - t278, t370 * t56 - t256, 0, 0, t271 * t92 - t339 (-t39 - t347) * t215 + (-t40 - t335) * t212, t123 * t271 - t92 * t126 + t344, t123 * t343 - t338, -t123 ^ 2 * t212 + t90 * t126 + t341, -t123 * t126, -pkin(5) * t40 + t253 * t126 - t355 - t27 * t90 + (-pkin(10) * t301 - t19) * t123 + t241 * t212, pkin(5) * t39 + t10 * t126 + t356 - t27 * t92 + (pkin(10) * t302 + t20) * t123 + t241 * t215, t19 * t92 + t20 * t90 + ((-t40 + t333) * pkin(10) + t383) * t215 + (pkin(10) * t277 + t376) * t212, -t6 * pkin(5) + pkin(10) * t224 - t10 * t20 + t19 * t253 - t23 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, -t90 ^ 2 + t92 ^ 2, -t39 + t347, -t353, t335 - t40, t89, -t23 * t92 - t376, t23 * t90 - t383, 0, 0;];
tauc_reg  = t7;
