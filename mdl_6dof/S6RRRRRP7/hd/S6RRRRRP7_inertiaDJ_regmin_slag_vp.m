% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP7_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP7_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP7_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP7_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:43:20
% EndTime: 2019-03-10 01:43:30
% DurationCPUTime: 3.96s
% Computational Cost: add. (7983->410), mult. (20619->708), div. (0->0), fcn. (20382->10), ass. (0->197)
t161 = sin(qJ(4));
t165 = cos(qJ(4));
t219 = qJD(4) * t165;
t220 = qJD(4) * t161;
t158 = sin(pkin(6));
t163 = sin(qJ(2));
t225 = qJD(2) * t163;
t142 = t158 * t225;
t167 = cos(qJ(2));
t108 = (pkin(2) * t163 - pkin(9) * t167) * t158 * qJD(2);
t159 = cos(pkin(6));
t224 = qJD(2) * t167;
t109 = -pkin(1) * t159 * t224 + pkin(8) * t142;
t162 = sin(qJ(3));
t166 = cos(qJ(3));
t231 = t158 * t167;
t214 = pkin(8) * t231;
t252 = pkin(1) * t163;
t105 = t214 + (pkin(9) + t252) * t159;
t106 = (-pkin(2) * t167 - pkin(9) * t163 - pkin(1)) * t158;
t244 = t105 * t166 + t106 * t162;
t51 = -qJD(3) * t244 + t108 * t166 + t162 * t109;
t232 = t158 * t163;
t206 = t162 * t232;
t230 = t159 * t166;
t175 = -t206 + t230;
t199 = t158 * t224;
t92 = qJD(3) * t175 + t166 * t199;
t38 = pkin(3) * t142 - t92 * pkin(10) + t51;
t205 = t166 * t232;
t223 = qJD(3) * t162;
t203 = qJD(3) * t205 + t159 * t223 + t162 * t199;
t222 = qJD(3) * t166;
t50 = t105 * t223 - t106 * t222 - t108 * t162 + t109 * t166;
t42 = -pkin(10) * t203 - t50;
t113 = t159 * t162 + t205;
t193 = -t105 * t162 + t106 * t166;
t60 = -pkin(3) * t231 - pkin(10) * t113 + t193;
t66 = pkin(10) * t175 + t244;
t13 = -t161 * t42 + t165 * t38 - t219 * t66 - t220 * t60;
t11 = -pkin(4) * t142 - t13;
t164 = cos(qJ(5));
t160 = sin(qJ(5));
t217 = qJD(5) * t160;
t195 = -t161 * t66 + t165 * t60;
t34 = pkin(4) * t231 - t195;
t197 = -t11 * t164 + t217 * t34;
t157 = t164 ^ 2;
t226 = t160 ^ 2 - t157;
t190 = t226 * qJD(5);
t256 = qJD(3) + qJD(4);
t255 = 0.2e1 * t158;
t254 = -pkin(10) - pkin(9);
t153 = qJD(5) * t164;
t253 = t11 * t160 + t153 * t34;
t251 = pkin(1) * t167;
t250 = pkin(3) * t158;
t249 = pkin(3) * t165;
t248 = pkin(9) * t158;
t247 = -qJ(6) - pkin(11);
t246 = t161 * t60 + t165 * t66;
t35 = -pkin(11) * t231 + t246;
t77 = t161 * t113 - t165 * t175;
t78 = t113 * t165 + t161 * t175;
t144 = pkin(8) * t232;
t150 = -pkin(3) * t166 - pkin(2);
t82 = pkin(3) * t206 + t144 + (t150 - t251) * t159;
t45 = t77 * pkin(4) - t78 * pkin(11) + t82;
t19 = t160 * t45 + t164 * t35;
t202 = qJD(3) * t254;
t187 = t166 * t202;
t188 = t162 * t202;
t136 = t254 * t162;
t137 = t254 * t166;
t95 = t136 * t161 - t137 * t165;
t70 = qJD(4) * t95 + t161 * t188 - t165 * t187;
t94 = -t136 * t165 - t137 * t161;
t245 = t153 * t94 + t160 * t70;
t122 = t161 * t162 - t165 * t166;
t123 = t161 * t166 + t162 * t165;
t83 = pkin(4) * t122 - pkin(11) * t123 + t150;
t93 = t164 * t95;
t65 = t160 * t83 + t93;
t243 = pkin(3) * qJD(4);
t90 = t256 * t122;
t241 = t123 * t90;
t240 = t160 * t90;
t239 = t164 * t90;
t91 = t256 * t123;
t238 = t164 * t91;
t237 = t165 * t77;
t169 = -qJD(4) * t77 - t161 * t203 + t165 * t92;
t71 = t160 * t78 + t164 * t231;
t27 = qJD(5) * t71 - t142 * t160 - t164 * t169;
t236 = t27 * t160;
t235 = t27 * t164;
t110 = (t159 * t252 + t214) * qJD(2);
t234 = t110 * t162;
t233 = t123 * t160;
t229 = t160 * t164;
t154 = t164 * qJ(6);
t147 = pkin(3) * t161 + pkin(11);
t228 = -qJ(6) - t147;
t148 = -pkin(4) - t249;
t209 = pkin(3) * t220;
t227 = t148 * t153 + t160 * t209;
t221 = qJD(3) * t167;
t218 = qJD(4) * t167;
t216 = -0.2e1 * pkin(2) * qJD(3);
t212 = pkin(3) * t223;
t172 = pkin(4) * t91 + pkin(11) * t90 + t212;
t69 = -t136 * t219 - t137 * t220 - t161 * t187 - t165 * t188;
t215 = t153 * t83 + t160 * t172 - t164 * t69;
t213 = pkin(1) * t225;
t211 = pkin(4) * t217;
t210 = pkin(4) * t153;
t208 = pkin(3) * t219;
t151 = pkin(5) * t217;
t207 = pkin(5) * t153;
t204 = t160 * t231;
t86 = t94 * t217;
t149 = -pkin(5) * t164 - pkin(4);
t155 = t158 ^ 2;
t201 = t155 * t224;
t200 = t123 * t153;
t198 = t160 * t153;
t18 = -t160 * t35 + t164 * t45;
t196 = t160 * t69 + t164 * t172;
t64 = -t160 * t95 + t164 * t83;
t194 = qJD(5) * t247;
t192 = -0.4e1 * t123 * t229;
t191 = qJD(5) * t228;
t189 = t164 * t208;
t186 = t163 * t201;
t185 = t203 * pkin(3);
t72 = t164 * t78 - t204;
t14 = pkin(5) * t77 - qJ(6) * t72 + t18;
t15 = -qJ(6) * t71 + t19;
t184 = -t14 * t164 - t15 * t160;
t183 = -t160 * t72 - t164 * t71;
t182 = qJ(6) * t90 - qJD(6) * t123;
t181 = t122 * t147 - t123 * t148;
t180 = t148 * t217 - t164 * t209;
t48 = qJD(4) * t78 + t161 * t92 + t165 * t203;
t30 = t153 * t77 + t160 * t48;
t179 = -t164 * t48 + t217 * t77;
t12 = -t161 * t38 - t165 * t42 - t219 * t60 + t220 * t66;
t10 = pkin(11) * t142 - t12;
t168 = t48 * pkin(4) + pkin(8) * t199 - pkin(11) * t169 + t159 * t213 + t185;
t4 = -t10 * t164 - t153 * t45 - t160 * t168 + t217 * t35;
t178 = t122 * t217 - t238;
t177 = t200 - t240;
t176 = t123 * t217 + t239;
t174 = t162 * t221 + t166 * t225;
t173 = t162 * t225 - t166 * t221;
t5 = -qJD(5) * t19 - t160 * t10 + t164 * t168;
t1 = t48 * pkin(5) + t27 * qJ(6) - t72 * qJD(6) + t5;
t28 = -qJD(5) * t204 - t142 * t164 + t153 * t78 + t160 * t169;
t3 = -qJ(6) * t28 - qJD(6) * t71 - t4;
t171 = qJD(5) * t184 - t1 * t160 + t164 * t3;
t170 = -t147 * t91 - t148 * t90 + (-t122 * t165 + t123 * t161) * t243;
t152 = t164 * qJD(6);
t141 = 0.2e1 * t198;
t135 = pkin(11) * t164 + t154;
t134 = t247 * t160;
t133 = t149 - t249;
t125 = -0.2e1 * t186;
t124 = t151 + t209;
t121 = -0.2e1 * t190;
t120 = t123 ^ 2;
t118 = t147 * t164 + t154;
t117 = t228 * t160;
t112 = -t160 * qJD(6) + t164 * t194;
t111 = t160 * t194 + t152;
t104 = t144 + (-pkin(2) - t251) * t159;
t103 = t111 * t164;
t89 = (-qJD(6) - t208) * t160 + t164 * t191;
t88 = t160 * t191 + t152 + t189;
t84 = t88 * t164;
t76 = pkin(5) * t233 + t94;
t75 = t185 + t110;
t74 = t122 * t153 + t160 * t91;
t59 = -t123 * t190 - t229 * t90;
t53 = -qJ(6) * t233 + t65;
t52 = qJD(5) * t192 + t226 * t90;
t49 = pkin(5) * t122 - t123 * t154 + t64;
t46 = pkin(5) * t177 + t70;
t26 = pkin(5) * t71 + t34;
t25 = -qJD(5) * t65 + t196;
t24 = t217 * t95 - t215;
t23 = t153 * t72 - t236;
t20 = -qJ(6) * t200 + (-qJD(5) * t95 + t182) * t160 + t215;
t17 = t20 * t164;
t16 = pkin(5) * t91 + t182 * t164 + (-t93 + (qJ(6) * t123 - t83) * t160) * qJD(5) + t196;
t7 = qJD(5) * t183 - t160 * t28 - t235;
t6 = pkin(5) * t28 + t11;
t2 = [0, 0, 0, 0.2e1 * t186, 0.2e1 * (-t163 ^ 2 + t167 ^ 2) * t155 * qJD(2), 0.2e1 * t159 * t199, -0.2e1 * t159 * t142, 0, -0.2e1 * t110 * t159 - 0.2e1 * t155 * t213, -0.2e1 * pkin(1) * t201 + 0.2e1 * t109 * t159, 0.2e1 * t113 * t92, -0.2e1 * t113 * t203 + 0.2e1 * t175 * t92 (t113 * t225 - t167 * t92) * t255, 0.2e1 * t142 * t175 + 0.2e1 * t203 * t231, t125, -0.2e1 * t110 * t230 + 0.2e1 * t104 * t203 + 0.2e1 * (-t51 * t167 + (qJD(2) * t193 + t234) * t163) * t158, 0.2e1 * t104 * t92 + 0.2e1 * t110 * t113 + 0.2e1 * (-t167 * t50 - t225 * t244) * t158, 0.2e1 * t78 * t169, -0.2e1 * t169 * t77 - 0.2e1 * t78 * t48, 0.2e1 * t142 * t78 - 0.2e1 * t169 * t231 (t167 * t48 - t225 * t77) * t255, t125, 0.2e1 * t82 * t48 + 0.2e1 * t75 * t77 + 0.2e1 * (-t13 * t167 + t195 * t225) * t158, -0.2e1 * t12 * t231 - 0.2e1 * t142 * t246 + 0.2e1 * t169 * t82 + 0.2e1 * t75 * t78, -0.2e1 * t72 * t27, 0.2e1 * t27 * t71 - 0.2e1 * t28 * t72, -0.2e1 * t27 * t77 + 0.2e1 * t48 * t72, -0.2e1 * t28 * t77 - 0.2e1 * t48 * t71, 0.2e1 * t77 * t48, 0.2e1 * t11 * t71 + 0.2e1 * t18 * t48 + 0.2e1 * t28 * t34 + 0.2e1 * t5 * t77, 0.2e1 * t11 * t72 - 0.2e1 * t19 * t48 - 0.2e1 * t27 * t34 + 0.2e1 * t4 * t77, -0.2e1 * t1 * t72 + 0.2e1 * t14 * t27 - 0.2e1 * t15 * t28 - 0.2e1 * t3 * t71, 0.2e1 * t1 * t14 + 0.2e1 * t15 * t3 + 0.2e1 * t26 * t6; 0, 0, 0, 0, 0, t199, -t142, 0, -t110, t109, t113 * t222 + t162 * t92, -t162 * t203 + t92 * t166 + (-t113 * t162 + t166 * t175) * qJD(3), t173 * t158, t174 * t158, 0, -pkin(2) * t203 + t104 * t223 - t110 * t166 - t173 * t248, -pkin(2) * t92 + t104 * t222 - t174 * t248 + t234, t123 * t169 - t78 * t90, -t122 * t169 - t123 * t48 + t90 * t77 - t78 * t91 (t123 * t225 + t167 * t90) * t158 (-t122 * t225 + t167 * t91) * t158, 0, t77 * t212 + t75 * t122 + t150 * t48 + t82 * t91 + (t167 * t70 - t225 * t94) * t158, t75 * t123 - t142 * t95 + t150 * t169 + t212 * t78 - t231 * t69 - t82 * t90, -t72 * t239 + (-t217 * t72 - t235) * t123, -t183 * t90 + (t236 - t164 * t28 + (t160 * t71 - t164 * t72) * qJD(5)) * t123, -t27 * t122 - t123 * t179 - t239 * t77 + t72 * t91, -t28 * t122 - t123 * t30 + t240 * t77 - t71 * t91, t122 * t48 + t77 * t91, t122 * t5 + t123 * t253 + t18 * t91 - t240 * t34 + t25 * t77 + t28 * t94 + t48 * t64 + t70 * t71, t122 * t4 - t123 * t197 - t19 * t91 - t239 * t34 + t24 * t77 - t27 * t94 - t48 * t65 + t70 * t72, -t16 * t72 - t20 * t71 + t27 * t49 - t28 * t53 - t184 * t90 + (-t1 * t164 - t160 * t3 + (t14 * t160 - t15 * t164) * qJD(5)) * t123, t1 * t49 + t14 * t16 + t15 * t20 + t26 * t46 + t3 * t53 + t6 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t162 * t222, 0.2e1 * (-t162 ^ 2 + t166 ^ 2) * qJD(3), 0, 0, 0, t162 * t216, t166 * t216, -0.2e1 * t241, 0.2e1 * t122 * t90 - 0.2e1 * t123 * t91, 0, 0, 0, 0.2e1 * t122 * t212 + 0.2e1 * t150 * t91, 0.2e1 * t123 * t212 - 0.2e1 * t150 * t90, -0.2e1 * t120 * t198 - 0.2e1 * t157 * t241, 0.2e1 * t120 * t190 - t192 * t90, -0.2e1 * t122 * t176 + 0.2e1 * t123 * t238, -0.2e1 * t122 * t177 - 0.2e1 * t233 * t91, 0.2e1 * t122 * t91, 0.2e1 * t25 * t122 + 0.2e1 * t123 * t245 - 0.2e1 * t240 * t94 + 0.2e1 * t64 * t91, -0.2e1 * t94 * t239 + 0.2e1 * t24 * t122 - 0.2e1 * t65 * t91 + 0.2e1 * (t70 * t164 - t86) * t123, -0.2e1 * (-t160 * t53 - t164 * t49) * t90 + 0.2e1 * (-t16 * t164 - t160 * t20 + (t160 * t49 - t164 * t53) * qJD(5)) * t123, 0.2e1 * t16 * t49 + 0.2e1 * t20 * t53 + 0.2e1 * t46 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t203, t142, t51, t50, 0, 0, t169, -t48, t142 (t161 * t218 + t165 * t225) * t250 + t13 (-t161 * t225 + t165 * t218) * t250 + t12, t23, t7, t30, -t179, 0, t148 * t28 - t30 * t147 + (-t160 * t237 + t161 * t71) * t243 + t197, -t148 * t27 + t179 * t147 + (t161 * t72 - t164 * t237) * t243 + t253, t117 * t27 - t118 * t28 - t71 * t88 - t72 * t89 + t171, t1 * t117 + t118 * t3 + t124 * t26 + t133 * t6 + t14 * t89 + t15 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, -t223, 0, -pkin(9) * t222, pkin(9) * t223, 0, 0, -t90, -t91, 0, -t70, t69, t59, t52, t74, -t178, 0, t86 + (-qJD(5) * t181 - t70) * t164 + t170 * t160, t164 * t170 + t181 * t217 + t245, t17 + (t117 * t90 - t123 * t89 + (-t118 * t123 - t49) * qJD(5)) * t164 + (t118 * t90 - t123 * t88 - t16 + (t117 * t123 - t53) * qJD(5)) * t160, t117 * t16 + t118 * t20 + t124 * t76 + t133 * t46 + t49 * t89 + t53 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t209, -0.2e1 * t208, t141, t121, 0, 0, 0, 0.2e1 * t180, 0.2e1 * t227, -0.2e1 * t89 * t160 + 0.2e1 * t84 + 0.2e1 * (-t117 * t164 - t118 * t160) * qJD(5), 0.2e1 * t117 * t89 + 0.2e1 * t118 * t88 + 0.2e1 * t124 * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, -t48, t142, t13, t12, t23, t7, t30, -t179, 0, -pkin(4) * t28 - pkin(11) * t30 + t197, pkin(4) * t27 + pkin(11) * t179 + t253, -t111 * t71 - t112 * t72 + t134 * t27 - t135 * t28 + t171, t1 * t134 + t111 * t15 + t112 * t14 + t135 * t3 + t149 * t6 + t151 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, -t91, 0, -t70, t69, t59, t52, t74, -t178, 0, t86 + (pkin(4) * t90 - pkin(11) * t91) * t160 + (-t70 + (-pkin(4) * t123 - pkin(11) * t122) * qJD(5)) * t164, pkin(4) * t176 + pkin(11) * t178 + t245, t17 + (-t112 * t123 + t134 * t90 + (-t123 * t135 - t49) * qJD(5)) * t164 + (-t111 * t123 + t135 * t90 - t16 + (t123 * t134 - t53) * qJD(5)) * t160, t111 * t53 + t112 * t49 + t134 * t16 + t135 * t20 + t149 * t46 + t151 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, -t208, t141, t121, 0, 0, 0, t180 - t211, -t210 + t227, t103 + t84 + (-t112 - t89) * t160 + ((-t117 - t134) * t164 + (-t118 - t135) * t160) * qJD(5), t111 * t118 + t112 * t117 + t124 * t149 + t133 * t151 + t134 * t89 + t135 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, t121, 0, 0, 0, -0.2e1 * t211, -0.2e1 * t210, -0.2e1 * t112 * t160 + 0.2e1 * t103 + 0.2e1 * (-t134 * t164 - t135 * t160) * qJD(5), 0.2e1 * t111 * t135 + 0.2e1 * t112 * t134 + 0.2e1 * t149 * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t28, t48, t5, t4, pkin(5) * t27, t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t177, t91, t25, t24, t176 * pkin(5), t16 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, -t217, 0, -t147 * t153 - t160 * t208, t147 * t217 - t189, -t207, t89 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, -t217, 0, -pkin(11) * t153, pkin(11) * t217, -t207, t112 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
