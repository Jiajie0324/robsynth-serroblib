% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP7_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP7_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP7_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP7_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:43:09
% EndTime: 2019-03-10 01:43:34
% DurationCPUTime: 9.22s
% Computational Cost: add. (14537->547), mult. (37198->748), div. (0->0), fcn. (29578->10), ass. (0->270)
t260 = sin(qJ(2));
t263 = cos(qJ(3));
t264 = cos(qJ(2));
t255 = sin(pkin(6));
t347 = qJD(1) * t260;
t324 = t255 * t347;
t256 = cos(pkin(6));
t348 = qJD(1) * t256;
t332 = pkin(1) * t348;
t201 = -pkin(8) * t324 + t264 * t332;
t280 = (pkin(2) * t260 - pkin(9) * t264) * t255;
t202 = qJD(1) * t280;
t259 = sin(qJ(3));
t303 = -t259 * t201 + t263 * t202;
t395 = -pkin(10) - pkin(9);
t325 = qJD(3) * t395;
t349 = qJD(1) * t255;
t359 = t263 * t264;
t425 = (pkin(3) * t260 - pkin(10) * t359) * t349 + t303 - t263 * t325;
t258 = sin(qJ(4));
t262 = cos(qJ(4));
t215 = t258 * t259 - t262 * t263;
t334 = qJD(3) + qJD(4);
t162 = t334 * t215;
t346 = qJD(1) * t264;
t323 = t255 * t346;
t173 = t215 * t323;
t433 = t162 - t173;
t216 = t258 * t263 + t259 * t262;
t354 = (-t323 + t334) * t216;
t261 = cos(qJ(5));
t337 = qJD(5) * t261;
t242 = qJD(2) + t348;
t295 = t259 * t324;
t186 = t242 * t263 - t295;
t187 = t242 * t259 + t263 * t324;
t287 = t262 * t186 - t187 * t258;
t418 = t287 * t261;
t432 = t337 - t418;
t257 = sin(qJ(5));
t415 = qJD(5) - t287;
t427 = t415 * t257;
t431 = pkin(5) * t427;
t296 = t259 * t323;
t351 = t263 * t201 + t259 * t202;
t136 = -pkin(10) * t296 + t351;
t217 = t259 * t325;
t234 = t395 * t259;
t235 = t395 * t263;
t285 = t234 * t262 + t235 * t258;
t430 = qJD(4) * t285 + (-t136 + t217) * t262 - t425 * t258;
t239 = t260 * t332;
t204 = pkin(8) * t323 + t239;
t342 = qJD(3) * t259;
t292 = -t204 + (-t296 + t342) * pkin(3);
t231 = -qJD(3) + t323;
t281 = -qJD(4) + t231;
t272 = t261 * t281;
t286 = t186 * t258 + t262 * t187;
t117 = t257 * t286 + t272;
t119 = -t257 * t281 + t261 * t286;
t335 = qJD(1) * qJD(2);
t315 = t255 * t335;
t236 = t260 * t315;
t294 = t264 * t315;
t341 = qJD(3) * t263;
t156 = -qJD(3) * t295 + t242 * t341 + t263 * t294;
t343 = qJD(2) * t264;
t320 = t259 * t343;
t157 = (t260 * t341 + t320) * t349 + t242 * t342;
t288 = t262 * t156 - t258 * t157;
t267 = qJD(4) * t287 + t288;
t338 = qJD(5) * t257;
t41 = qJD(5) * t272 - t257 * t236 - t261 * t267 + t286 * t338;
t266 = -t261 * t236 + t257 * t267;
t42 = qJD(5) * t119 + t266;
t429 = -t117 * t432 - t119 * t427 - t257 * t42 - t41 * t261;
t305 = t258 * t156 + t262 * t157;
t74 = qJD(4) * t286 + t305;
t70 = t261 * t74;
t428 = t117 * t286 - t415 * t427 + t70;
t339 = qJD(4) * t262;
t171 = pkin(9) * t242 + t204;
t199 = (-pkin(2) * t264 - pkin(9) * t260 - pkin(1)) * t255;
t182 = qJD(1) * t199;
t132 = t171 * t263 + t182 * t259;
t106 = pkin(10) * t186 + t132;
t103 = t258 * t106;
t131 = -t171 * t259 + t263 * t182;
t105 = -pkin(10) * t187 + t131;
t54 = t105 * t262 - t103;
t420 = -pkin(3) * t339 + t54;
t419 = pkin(11) * t324 - t430;
t426 = t354 * pkin(4) + pkin(11) * t433 + t292;
t39 = t41 * t257;
t423 = t119 * t432 - t39;
t380 = t257 * t74 + t337 * t415;
t422 = -t119 * t286 - t415 * t418 + t380;
t340 = qJD(4) * t258;
t203 = qJD(2) * t280;
t194 = qJD(1) * t203;
t362 = t255 * t260;
t243 = pkin(8) * t362;
t394 = pkin(1) * t264;
t205 = (t256 * t394 - t243) * qJD(2);
t195 = qJD(1) * t205;
t269 = -qJD(3) * t132 + t263 * t194 - t259 * t195;
t59 = pkin(3) * t236 - t156 * pkin(10) + t269;
t277 = -t171 * t342 + t182 * t341 + t259 * t194 + t263 * t195;
t66 = -pkin(10) * t157 + t277;
t96 = -pkin(3) * t231 + t105;
t310 = t106 * t340 - t258 * t59 - t262 * t66 - t96 * t339;
t11 = pkin(11) * t236 - t310;
t104 = t262 * t106;
t49 = t258 * t96 + t104;
t46 = -pkin(11) * t281 + t49;
t170 = -pkin(2) * t242 - t201;
t145 = -pkin(3) * t186 + t170;
t60 = -pkin(4) * t287 - pkin(11) * t286 + t145;
t24 = t257 * t60 + t261 * t46;
t196 = pkin(8) * t294 + qJD(2) * t239;
t130 = t157 * pkin(3) + t196;
t29 = t74 * pkin(4) - pkin(11) * t267 + t130;
t7 = -qJD(5) * t24 - t257 * t11 + t261 * t29;
t1 = pkin(5) * t74 + qJ(6) * t41 - qJD(6) * t119 + t7;
t23 = -t257 * t46 + t261 * t60;
t14 = -qJ(6) * t119 + t23;
t13 = pkin(5) * t415 + t14;
t15 = -qJ(6) * t117 + t24;
t6 = t261 * t11 + t257 * t29 + t60 * t337 - t338 * t46;
t3 = -qJ(6) * t42 - qJD(6) * t117 + t6;
t421 = (-t15 * t415 - t1) * t257 + (-t13 * t415 + t3) * t261;
t417 = t286 * t287;
t147 = -t173 * t257 - t261 * t324;
t416 = -t216 * t337 + t147;
t414 = t286 ^ 2 - t287 ^ 2;
t91 = pkin(4) * t286 - pkin(11) * t287;
t413 = -t145 * t287 + t310;
t251 = t261 * qJ(6);
t412 = -pkin(5) * t286 + t251 * t287;
t411 = t287 * t231 + t288;
t407 = t426 * t261;
t406 = t415 * t286;
t175 = t234 * t258 - t235 * t262;
t405 = qJD(4) * t175 + t258 * t217 + t425 * t262;
t361 = t255 * t264;
t198 = pkin(8) * t361 + (pkin(1) * t260 + pkin(9)) * t256;
t352 = t263 * t198 + t259 * t199;
t249 = -pkin(3) * t263 - pkin(2);
t158 = pkin(4) * t215 - pkin(11) * t216 + t249;
t404 = t158 * t337 + t257 * t426 - t261 * t419;
t78 = pkin(3) * t187 + t91;
t403 = t257 * t78 + t261 * t420;
t309 = -t106 * t339 - t258 * t66 + t262 * t59 - t96 * t340;
t12 = -pkin(4) * t236 - t309;
t48 = t262 * t96 - t103;
t45 = pkin(4) * t281 - t48;
t401 = -t12 * t261 - t23 * t286 + t45 * t338;
t400 = t12 * t257 + t24 * t286 + t45 * t337;
t398 = -t145 * t286 + t309;
t397 = -t231 * t286 - t305;
t396 = t119 ^ 2;
t393 = pkin(3) * t262;
t392 = -qJ(6) - pkin(11);
t390 = t13 - t14;
t148 = -t173 * t261 + t257 * t324;
t167 = t261 * t175;
t284 = qJ(6) * t162 - qJD(6) * t216;
t389 = qJ(6) * t148 - t167 * qJD(5) + t284 * t261 + t407 + ((qJ(6) * t216 - t158) * qJD(5) + t419) * t257 + t354 * pkin(5);
t388 = (-qJD(5) * t175 + t284) * t257 + t404 + t416 * qJ(6);
t387 = t257 * t91 + t261 * t48;
t210 = t256 * t259 + t263 * t362;
t304 = -t198 * t259 + t263 * t199;
t114 = -pkin(3) * t361 - pkin(10) * t210 + t304;
t209 = -t256 * t263 + t259 * t362;
t125 = -pkin(10) * t209 + t352;
t357 = t258 * t114 + t262 * t125;
t63 = -pkin(11) * t361 + t357;
t150 = t262 * t209 + t210 * t258;
t151 = -t209 * t258 + t210 * t262;
t197 = t243 + (-pkin(2) - t394) * t256;
t155 = t209 * pkin(3) + t197;
t85 = t150 * pkin(4) - t151 * pkin(11) + t155;
t385 = t257 * t85 + t261 * t63;
t133 = t258 * t136;
t282 = pkin(4) * t324 - t133;
t381 = t282 + t405;
t250 = t261 * qJD(6);
t247 = pkin(3) * t258 + pkin(11);
t358 = -qJ(6) - t247;
t302 = qJD(5) * t358;
t379 = t250 - t403 + (qJ(6) * t287 + t302) * t257;
t76 = t261 * t78;
t378 = t261 * t302 - t76 + (-qJD(6) + t420) * t257 + t412;
t311 = qJD(5) * t392;
t374 = t287 * t257;
t377 = qJ(6) * t374 + t257 * t311 + t250 - t387;
t313 = -t257 * t48 + t261 * t91;
t376 = -t257 * qJD(6) + t261 * t311 - t313 + t412;
t371 = t162 * t257;
t370 = t186 * t231;
t369 = t187 * t231;
t367 = t216 * t257;
t366 = t216 * t261;
t365 = t231 * t259;
t364 = t231 * t263;
t252 = t255 ^ 2;
t363 = t252 * qJD(1) ^ 2;
t353 = t257 * t158 + t167;
t321 = t255 * t343;
t345 = qJD(2) * t260;
t206 = t256 * pkin(1) * t345 + pkin(8) * t321;
t350 = t260 ^ 2 - t264 ^ 2;
t344 = qJD(2) * t263;
t329 = t260 * t363;
t328 = t257 * t361;
t326 = -pkin(5) * t261 - pkin(4);
t322 = t255 * t345;
t317 = t252 * t346;
t316 = t252 * t335;
t312 = -t257 * t63 + t261 * t85;
t308 = t114 * t262 - t258 * t125;
t307 = t147 + t371;
t306 = t162 * t261 + t148;
t299 = t242 + t348;
t297 = 0.2e1 * t316;
t53 = t258 * t105 + t104;
t293 = pkin(3) * t340 - t53;
t164 = qJD(3) * t210 + t255 * t320;
t146 = pkin(3) * t164 + t206;
t291 = -0.2e1 * pkin(1) * t316;
t62 = pkin(4) * t361 - t308;
t289 = -t247 * t74 - t287 * t45;
t165 = -qJD(3) * t209 + t263 * t321;
t268 = -qJD(3) * t352 + t263 * t203 - t259 * t205;
t77 = pkin(3) * t322 - t165 * pkin(10) + t268;
t276 = -t198 * t342 + t199 * t341 + t259 * t203 + t263 * t205;
t82 = -pkin(10) * t164 + t276;
t283 = -t114 * t340 - t125 * t339 - t258 * t82 + t262 * t77;
t137 = t151 * t257 + t261 * t361;
t278 = t114 * t339 - t125 * t340 + t258 * t77 + t262 * t82;
t17 = pkin(11) * t322 + t278;
t89 = -qJD(4) * t150 - t258 * t164 + t262 * t165;
t90 = qJD(4) * t151 + t262 * t164 + t258 * t165;
t36 = pkin(4) * t90 - pkin(11) * t89 + t146;
t279 = t261 * t17 + t257 * t36 + t85 * t337 - t338 * t63;
t275 = -t416 - t371;
t274 = -t216 * t338 - t306;
t271 = t281 * t255;
t18 = -pkin(4) * t322 - t283;
t270 = -qJD(5) * t385 - t257 * t17 + t261 * t36;
t8 = pkin(5) * t42 + t12;
t248 = -pkin(4) - t393;
t233 = pkin(11) * t261 + t251;
t232 = t392 * t257;
t214 = t247 * t261 + t251;
t213 = t358 * t257;
t154 = t261 * t158;
t138 = t151 * t261 - t328;
t116 = t117 ^ 2;
t102 = -qJ(6) * t367 + t353;
t92 = pkin(5) * t215 - t175 * t257 - t216 * t251 + t154;
t51 = -qJD(5) * t328 + t151 * t337 + t257 * t89 - t261 * t322;
t50 = qJD(5) * t137 - t257 * t322 - t261 * t89;
t37 = t117 * pkin(5) + qJD(6) + t45;
t26 = -qJ(6) * t137 + t385;
t21 = pkin(5) * t150 - qJ(6) * t138 + t312;
t5 = -qJ(6) * t51 - qJD(6) * t137 + t279;
t4 = pkin(5) * t90 + qJ(6) * t50 - qJD(6) * t138 + t270;
t2 = [0, 0, 0, t260 * t264 * t297, -t350 * t297, t299 * t321, -t299 * t322, 0, -t196 * t256 - t206 * t242 + t260 * t291, -t195 * t256 - t205 * t242 + t264 * t291, t156 * t210 + t165 * t187, -t156 * t209 - t157 * t210 - t164 * t187 + t165 * t186, -t165 * t231 + (-t156 * t264 + (qJD(1) * t210 + t187) * t345) * t255, t164 * t231 + (t157 * t264 + (-qJD(1) * t209 + t186) * t345) * t255 (-t231 * t255 - t317) * t345, -t268 * t231 - t206 * t186 + t197 * t157 + t196 * t209 + t170 * t164 + (-t269 * t264 + (qJD(1) * t304 + t131) * t345) * t255, t276 * t231 + t206 * t187 + t197 * t156 + t196 * t210 + t170 * t165 + (t277 * t264 + (-qJD(1) * t352 - t132) * t345) * t255, t151 * t267 + t286 * t89, -t150 * t267 - t151 * t74 - t286 * t90 + t287 * t89, t89 * t334 + (-t267 * t264 + t286 * t345 + (t151 * t345 - t264 * t89) * qJD(1)) * t255, -t90 * t334 + (t287 * t345 + t74 * t264 + (-t150 * t345 + t264 * t90) * qJD(1)) * t255 (-t271 - t317) * t345, -t283 * t281 - t309 * t361 - t146 * t287 + t155 * t74 + t130 * t150 + t145 * t90 + (qJD(1) * t308 + t48) * t322, t278 * t281 - t310 * t361 + t146 * t286 + t155 * t267 + t130 * t151 + t145 * t89 + (-qJD(1) * t357 - t49) * t322, -t119 * t50 - t138 * t41, t117 * t50 - t119 * t51 + t137 * t41 - t138 * t42, t119 * t90 + t138 * t74 - t150 * t41 - t415 * t50, -t117 * t90 - t137 * t74 - t150 * t42 - t415 * t51, t150 * t74 + t415 * t90, t18 * t117 + t12 * t137 + t7 * t150 + t23 * t90 + t270 * t415 + t312 * t74 + t62 * t42 + t45 * t51, t18 * t119 + t12 * t138 - t6 * t150 - t24 * t90 - t279 * t415 - t385 * t74 - t62 * t41 - t45 * t50, -t1 * t138 - t117 * t5 - t119 * t4 + t13 * t50 - t137 * t3 - t15 * t51 + t21 * t41 - t26 * t42, t3 * t26 + t15 * t5 + t1 * t21 + t13 * t4 + t8 * (pkin(5) * t137 + t62) + t37 * (pkin(5) * t51 + t18); 0, 0, 0, -t264 * t329, t350 * t363 (qJD(2) - t242) * t323, t242 * t324 - t236, 0, pkin(1) * t329 + t204 * t242 - t196, pkin(8) * t236 + t201 * t242 + (-t256 * t335 + t363) * t394, t156 * t259 - t187 * t364 (t156 - t370) * t263 + (-t157 + t369) * t259, -t231 * t341 + (t231 * t359 + (qJD(2) * t259 - t187) * t260) * t349, t231 * t342 + (-t264 * t365 + (-t186 + t344) * t260) * t349, t231 * t324, -pkin(2) * t157 - t196 * t263 + t303 * t231 + t204 * t186 + (pkin(9) * t364 + t170 * t259) * qJD(3) + (-t131 * t260 + (-pkin(9) * t345 - t170 * t264) * t259) * t349, -pkin(2) * t156 + t196 * t259 - t351 * t231 - t204 * t187 + (-pkin(9) * t365 + t170 * t263) * qJD(3) + (-t170 * t359 + (-pkin(9) * t344 + t132) * t260) * t349, t216 * t267 - t286 * t433, -t215 * t267 - t216 * t74 - t286 * t354 - t287 * t433 (t433 * t264 + (qJD(2) * t216 - t286) * t260) * t349 - t433 * t334 (t354 * t264 + (-qJD(2) * t215 - t287) * t260) * t349 - t354 * t334, t271 * t347, t249 * t74 + t130 * t215 + (qJD(2) * t285 - t48) * t324 + t354 * t145 - t292 * t287 + (-t133 + t405) * t281, t249 * t267 + t130 * t216 + (-qJD(2) * t175 + t49) * t324 - t433 * t145 + t292 * t286 + t430 * t281, t119 * t274 - t366 * t41, t307 * t119 + t306 * t117 + (t39 - t261 * t42 + (t117 * t257 - t119 * t261) * qJD(5)) * t216, t119 * t354 - t215 * t41 + t274 * t415 + t366 * t74, -t117 * t354 - t215 * t42 - t275 * t415 - t367 * t74, t74 * t215 + t354 * t415, t154 * t74 - t285 * t42 + t7 * t215 - t416 * t45 + t354 * t23 + (-t175 * t337 + t407) * t415 + t381 * t117 + (t12 * t216 - t45 * t162 - t175 * t74 + (-qJD(5) * t158 + t419) * t415) * t257, -t353 * t74 - t6 * t215 + t285 * t41 + t12 * t366 - t354 * t24 + (t175 * t338 - t404) * t415 + t381 * t119 + t274 * t45, -t102 * t42 + t41 * t92 + t307 * t15 + t306 * t13 - t389 * t119 - t388 * t117 + (-t1 * t261 - t257 * t3 + (t13 * t257 - t15 * t261) * qJD(5)) * t216, t3 * t102 + t1 * t92 + t8 * (pkin(5) * t367 - t285) + ((qJD(4) * t234 + t217) * t258 + (-qJD(4) * t235 + t425) * t262 + t275 * pkin(5) + t282) * t37 + t388 * t15 + t389 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187 * t186, -t186 ^ 2 + t187 ^ 2, t156 + t370, -t157 - t369, t236, -t132 * t231 - t170 * t187 + t269, -t131 * t231 - t170 * t186 - t277, -t417, t414, t411, t397, t236, -t53 * t281 + (t187 * t287 + t236 * t262 + t281 * t340) * pkin(3) + t398, -t54 * t281 + (-t187 * t286 - t236 * t258 + t281 * t339) * pkin(3) + t413, t423, t429, t422, t428, -t406, t248 * t42 + t289 * t257 + t293 * t117 + (-t247 * t337 + t257 * t420 - t76) * t415 + t401, -t248 * t41 + t289 * t261 + t293 * t119 + (t247 * t338 + t403) * t415 + t400, -t379 * t117 - t378 * t119 + t213 * t41 - t214 * t42 + t421, t3 * t214 + t1 * t213 + t8 * (t326 - t393) + (-t104 + (pkin(3) * qJD(4) - t105) * t258 + t431) * t37 + t379 * t15 + t378 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, t414, t411, t397, t236, -t281 * t49 + t398, -t281 * t48 + t413, t423, t429, t422, t428, -t406, -pkin(4) * t42 - pkin(11) * t380 - t49 * t117 - t313 * t415 - t45 * t374 + t401, pkin(4) * t41 + t387 * t415 - t49 * t119 - t45 * t418 + (t338 * t415 - t70) * pkin(11) + t400, -t377 * t117 - t376 * t119 + t232 * t41 - t233 * t42 + t421, t3 * t233 + t1 * t232 + t8 * t326 + (-t49 + t431) * t37 + t377 * t15 + t376 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119 * t117, -t116 + t396, t117 * t415 - t41, -t266 + (-qJD(5) + t415) * t119, t74, -t45 * t119 + t24 * t415 + t7, t117 * t45 + t23 * t415 - t6, pkin(5) * t41 - t117 * t390, t390 * t15 + (-t119 * t37 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116 - t396, t117 * t15 + t119 * t13 + t8;];
tauc_reg  = t2;
