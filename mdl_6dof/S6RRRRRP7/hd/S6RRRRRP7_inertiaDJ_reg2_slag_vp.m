% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP7_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:43:10
% EndTime: 2019-03-10 01:43:38
% DurationCPUTime: 11.82s
% Computational Cost: add. (15781->621), mult. (40744->1031), div. (0->0), fcn. (40220->10), ass. (0->272)
t183 = sin(pkin(6));
t185 = sin(qJ(3));
t188 = cos(qJ(3));
t189 = cos(qJ(2));
t186 = sin(qJ(2));
t323 = cos(pkin(6));
t281 = pkin(1) * t323;
t255 = t186 * t281;
t222 = pkin(9) * t323 + t255;
t206 = pkin(10) * t323 + t222;
t282 = -pkin(2) * t189 - pkin(1);
t346 = -pkin(10) - pkin(9);
t234 = t186 * t346 + t282;
t198 = -t206 * t185 + ((-pkin(8) * t185 - pkin(3)) * t189 + t234 * t188) * t183;
t341 = pkin(8) * t189;
t297 = t188 * t341;
t199 = t206 * t188 + (t185 * t234 + t297) * t183;
t342 = sin(qJ(4));
t343 = cos(qJ(4));
t55 = t342 * t198 + t343 * t199;
t257 = t346 * t343;
t143 = t185 * t257;
t277 = t342 * t188;
t360 = t346 * t277 + t143;
t307 = qJD(2) * t186;
t164 = t183 * t307;
t260 = pkin(3) * t164;
t305 = qJD(3) * t183;
t275 = t186 * t305;
t150 = t185 * t275;
t261 = t323 * qJD(3);
t306 = qJD(2) * t189;
t271 = t183 * t306;
t358 = t261 + t271;
t349 = -t188 * t358 + t150;
t314 = t183 * t186;
t224 = pkin(8) * t314 - t189 * t281;
t217 = t224 * qJD(2);
t239 = -pkin(9) * t186 + t282;
t353 = -t239 * t305 + t217;
t313 = t183 * t189;
t296 = pkin(8) * t313;
t354 = qJD(3) * (t222 + t296) - qJD(2) * t183 * (pkin(2) * t186 - pkin(9) * t189);
t69 = t185 * t353 - t188 * t354;
t192 = pkin(10) * t349 + t260 + t69;
t283 = t358 * t185 + t188 * t275;
t68 = t185 * t354 + t188 * t353;
t194 = -pkin(10) * t283 - t68;
t54 = t343 * t198 - t342 * t199;
t18 = -qJD(4) * t54 - t342 * t192 - t343 * t194;
t229 = t185 * t323 + t188 * t314;
t263 = t323 * t188;
t230 = t185 * t314 - t263;
t102 = t342 * t229 + t343 * t230;
t103 = t343 * t229 - t342 * t230;
t122 = -pkin(2) * t323 + t224;
t107 = pkin(3) * t230 + t122;
t201 = t102 * pkin(4) - t103 * pkin(11) + t107;
t359 = -pkin(11) * t164 - qJD(5) * t201 + t18;
t278 = t343 * t188;
t141 = t185 * t342 - t278;
t142 = t185 * t343 + t277;
t173 = -pkin(3) * t188 - pkin(2);
t228 = pkin(4) * t141 - pkin(11) * t142 + t173;
t227 = t360 * qJD(4);
t256 = t346 * t342;
t241 = t188 * t256;
t348 = -qJD(3) * (t241 + t143) - t227;
t357 = -qJD(5) * t228 + t348;
t184 = sin(qJ(5));
t187 = cos(qJ(5));
t52 = -pkin(11) * t313 + t55;
t28 = -t184 * t52 + t187 * t201;
t29 = t184 * t201 + t187 * t52;
t247 = t184 * t29 + t187 * t28;
t177 = qJD(5) * t184;
t196 = t102 * qJD(4) + t283 * t342 + t349 * t343;
t262 = qJD(2) * t323;
t249 = t186 * t262;
t252 = t283 * pkin(3);
t66 = qJD(4) * t103 + t343 * t283 - t342 * t349;
t193 = pkin(1) * t249 + t66 * pkin(4) + pkin(8) * t271 + pkin(11) * t196 + t252;
t5 = t177 * t52 - t184 * t193 + t359 * t187;
t4 = t5 * t187;
t178 = qJD(5) * t187;
t6 = -t178 * t52 + t359 * t184 + t187 * t193;
t207 = -qJD(5) * t247 - t6 * t184 - t4;
t51 = pkin(4) * t313 - t54;
t89 = t184 * t103 + t187 * t313;
t41 = t89 * pkin(5) + t51;
t37 = t41 * t177;
t19 = -t55 * qJD(4) + t343 * t192 - t342 * t194;
t17 = -pkin(4) * t164 - t19;
t285 = t184 * t313;
t45 = -qJD(5) * t285 + t103 * t178 - t164 * t187 - t184 * t196;
t9 = pkin(5) * t45 + t17;
t268 = -t187 * t9 + t37;
t265 = -t17 * t187 + t51 * t177;
t356 = t185 * t256;
t175 = pkin(5) * t177;
t266 = t342 * qJD(4);
t258 = pkin(3) * t266;
t144 = t258 + t175;
t294 = t343 * pkin(3);
t171 = -t294 - pkin(4);
t338 = t187 * pkin(5);
t156 = t171 - t338;
t311 = t144 * t184 + t156 * t178;
t134 = t156 * t177;
t355 = -t144 * t187 + t134;
t220 = qJD(3) * t230;
t352 = t185 * t220 - t283 * t188;
t181 = t184 ^ 2;
t182 = t187 ^ 2;
t308 = t181 - t182;
t351 = t308 * qJD(5);
t350 = qJD(3) + qJD(4);
t347 = t188 ^ 2;
t345 = t66 * pkin(5);
t344 = t41 * t178 + t9 * t184;
t340 = pkin(9) * t183;
t116 = t350 * t142;
t339 = t116 * pkin(5);
t336 = -qJ(6) - pkin(11);
t335 = t17 * t184 + t51 * t178;
t318 = t142 * t184;
t101 = pkin(5) * t318 - t360;
t243 = t346 * t278;
t251 = qJD(3) * t278;
t87 = -qJD(4) * t243 - t346 * t251 + t350 * t356;
t272 = t142 * t178;
t267 = qJD(4) * t343;
t115 = -t251 - t188 * t267 + (qJD(3) * t342 + t266) * t185;
t322 = t115 * t184;
t94 = t272 - t322;
t64 = pkin(5) * t94 + t87;
t334 = t101 * t178 + t64 * t184;
t333 = pkin(3) * qJD(4);
t332 = t360 * t87;
t44 = qJD(5) * t89 - t164 * t184 + t187 * t196;
t330 = t184 * t44;
t329 = t184 * t45;
t328 = t184 * t89;
t327 = t187 * t44;
t326 = t187 * t45;
t90 = t103 * t187 - t285;
t325 = t187 * t90;
t324 = -t178 * t360 + t87 * t184;
t321 = t115 * t187;
t133 = t255 + t296;
t125 = qJD(2) * t133;
t320 = t125 * t185;
t319 = t142 * t115;
t317 = t142 * t187;
t172 = -pkin(4) - t338;
t315 = t172 * t187;
t179 = t187 * qJ(6);
t293 = t342 * pkin(3);
t170 = t293 + pkin(11);
t312 = qJ(6) + t170;
t119 = -t243 + t356;
t84 = t187 * t119 + t184 * t228;
t310 = t171 * t178 + t184 * t258;
t300 = qJD(5) * t181;
t309 = pkin(5) * t300 + t172 * t178;
t304 = qJD(3) * t185;
t303 = qJD(3) * t188;
t302 = qJD(3) * t189;
t301 = qJD(5) * t142;
t299 = t122 * qJD(3);
t176 = t187 * qJD(6);
t298 = -0.2e1 * pkin(2) * qJD(3);
t53 = 0.2e1 * t102 * t66;
t100 = 0.2e1 * t141 * t116;
t292 = pkin(3) * t304;
t223 = pkin(4) * t116 + pkin(11) * t115 + t292;
t295 = -t184 * t223 + t357 * t187;
t291 = pkin(4) * t177;
t290 = pkin(4) * t178;
t289 = pkin(9) * t303;
t288 = pkin(5) * t178;
t287 = t89 * t177;
t286 = t90 * t177;
t284 = t184 * t321;
t280 = t184 * t343;
t279 = t187 * t343;
t180 = t183 ^ 2;
t276 = t180 * t306;
t274 = t185 * t302;
t273 = t142 * t177;
t96 = t101 * t177;
t148 = t172 * t177;
t270 = t184 * t178;
t269 = t185 * t303;
t264 = -t187 * t64 + t96;
t83 = -t119 * t184 + t187 * t228;
t259 = pkin(3) * t267;
t139 = t142 ^ 2;
t254 = t139 * t270;
t253 = t186 * t276;
t22 = pkin(5) * t102 - qJ(6) * t90 + t28;
t25 = -qJ(6) * t89 + t29;
t248 = t184 * t25 + t187 * t22;
t246 = t184 * t84 + t187 * t83;
t245 = t184 * t90 + t187 * t89;
t244 = -t69 * t185 - t68 * t188;
t42 = t102 * t116 + t141 * t66;
t240 = t141 * t170 - t142 * t171;
t47 = t102 * t178 + t184 * t66;
t238 = t102 * t177 - t187 * t66;
t237 = t273 + t321;
t236 = -t116 * t187 + t141 * t177;
t235 = t171 * t177 - t187 * t258;
t232 = (t181 + t182) * t343;
t231 = t185 * t307 - t188 * t302;
t221 = (-t141 * t343 + t142 * t342) * qJD(4);
t190 = t44 * qJ(6) - t90 * qJD(6) + t6;
t1 = t190 + t345;
t3 = t45 * qJ(6) + t89 * qJD(6) + t5;
t216 = -qJD(5) * t248 - t1 * t184 - t3 * t187;
t39 = t119 * t177 + t295;
t40 = -t119 * t178 + t357 * t184 + t187 * t223;
t10 = -qJD(5) * t246 - t184 * t40 - t187 * t39;
t204 = pkin(3) * t221 - t115 * t171 - t116 * t170;
t195 = qJ(6) * t273 + t115 * t179 - t142 * t176 + t40;
t163 = -0.2e1 * t270;
t162 = 0.2e1 * t270;
t160 = t187 * t259;
t158 = pkin(11) * t187 + t179;
t157 = t336 * t184;
t145 = -0.2e1 * t253;
t140 = -0.2e1 * t351;
t137 = t170 * t187 + t179;
t136 = t312 * t184;
t129 = -t184 * qJD(6) + t178 * t336;
t128 = -t177 * t336 - t176;
t127 = t232 * t333;
t121 = t128 * t187;
t114 = (-t259 - qJD(6)) * t184 - t312 * t178;
t113 = t177 * t312 - t160 - t176;
t111 = t360 * t177;
t109 = t113 * t187;
t99 = t188 * t222 + (t185 * t239 + t297) * t183;
t98 = -t185 * t222 + (-t185 * t341 + t188 * t239) * t183;
t95 = t252 + t125;
t93 = t116 * t184 + t141 * t178;
t79 = -0.2e1 * t182 * t319 - 0.2e1 * t254;
t78 = -0.2e1 * t181 * t319 + 0.2e1 * t254;
t77 = t142 * t300 - t182 * t301 + t284;
t72 = -qJ(6) * t318 + t84;
t71 = 0.2e1 * t139 * t351 + 0.4e1 * t142 * t284;
t70 = t115 * t308 - 0.4e1 * t142 * t270;
t67 = pkin(5) * t141 - t142 * t179 + t83;
t59 = -0.2e1 * t116 * t318 - 0.2e1 * t141 * t94;
t58 = 0.2e1 * t116 * t317 - 0.2e1 * t141 * t237;
t36 = -0.2e1 * t90 * t44;
t35 = 0.2e1 * t89 * t45;
t34 = t287 - t326;
t33 = t178 * t90 - t330;
t30 = qJ(6) * t272 + (-t115 * qJ(6) + qJD(5) * t119 + t142 * qJD(6)) * t184 + t295;
t27 = t30 * t187;
t26 = t195 + t339;
t24 = -t89 * t322 + (t178 * t89 + t329) * t142;
t23 = -t90 * t321 + (-t286 - t327) * t142;
t21 = -0.2e1 * t102 * t45 - 0.2e1 * t66 * t89;
t20 = -0.2e1 * t102 * t44 + 0.2e1 * t66 * t90;
t14 = 0.2e1 * t44 * t89 - 0.2e1 * t45 * t90;
t13 = -qJD(5) * t245 - t327 - t329;
t12 = -t102 * t94 - t116 * t89 - t141 * t45 - t318 * t66;
t11 = -t102 * t237 + t116 * t90 - t141 * t44 + t317 * t66;
t7 = t245 * t115 + (t330 - t326 + (-t325 + t328) * qJD(5)) * t142;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t253, 0.2e1 * (-t186 ^ 2 + t189 ^ 2) * t180 * qJD(2), 0.2e1 * t262 * t313, t145, -0.2e1 * t183 * t249, 0, -0.2e1 * pkin(1) * t180 * t307 - 0.2e1 * t125 * t323, -0.2e1 * pkin(1) * t276 + 0.2e1 * t217 * t323, 0.2e1 * t125 * t314 - 0.2e1 * t133 * t164 - 0.2e1 * t217 * t313 + 0.2e1 * t224 * t271, 0.2e1 * t125 * t224 - 0.2e1 * t133 * t217, -0.2e1 * t229 * t349, -0.2e1 * t229 * t283 + 0.2e1 * t230 * t349, 0.2e1 * t164 * t229 + 0.2e1 * t313 * t349, 0.2e1 * t230 * t283, -0.2e1 * t164 * t230 + 0.2e1 * t283 * t313, t145, -0.2e1 * t125 * t263 + 0.2e1 * t122 * t283 + 0.2e1 * (-t69 * t189 + (qJD(2) * t98 + t320) * t186) * t183, -0.2e1 * t122 * t349 + 0.2e1 * t125 * t229 - 0.2e1 * t164 * t99 - 0.2e1 * t313 * t68, -0.2e1 * t229 * t69 + 0.2e1 * t230 * t68 - 0.2e1 * t283 * t99 + 0.2e1 * t349 * t98, 0.2e1 * t122 * t125 - 0.2e1 * t68 * t99 + 0.2e1 * t69 * t98, -0.2e1 * t103 * t196, 0.2e1 * t102 * t196 - 0.2e1 * t103 * t66, 0.2e1 * t103 * t164 + 0.2e1 * t196 * t313, t53, 0.2e1 * (-t102 * t307 + t189 * t66) * t183, t145, 0.2e1 * t95 * t102 + 0.2e1 * t107 * t66 + 0.2e1 * (-t189 * t19 + t307 * t54) * t183, 0.2e1 * t95 * t103 - 0.2e1 * t107 * t196 - 0.2e1 * t164 * t55 - 0.2e1 * t18 * t313, 0.2e1 * t18 * t102 - 0.2e1 * t19 * t103 + 0.2e1 * t196 * t54 - 0.2e1 * t55 * t66, 0.2e1 * t107 * t95 - 0.2e1 * t18 * t55 + 0.2e1 * t19 * t54, t36, t14, t20, t35, t21, t53, 0.2e1 * t102 * t6 + 0.2e1 * t17 * t89 + 0.2e1 * t28 * t66 + 0.2e1 * t45 * t51, 0.2e1 * t102 * t5 + 0.2e1 * t17 * t90 - 0.2e1 * t29 * t66 - 0.2e1 * t44 * t51, 0.2e1 * t28 * t44 - 0.2e1 * t29 * t45 + 0.2e1 * t5 * t89 - 0.2e1 * t6 * t90, 0.2e1 * t17 * t51 + 0.2e1 * t28 * t6 - 0.2e1 * t29 * t5, t36, t14, t20, t35, t21, t53, 0.2e1 * t1 * t102 + 0.2e1 * t22 * t66 + 0.2e1 * t41 * t45 + 0.2e1 * t89 * t9, 0.2e1 * t102 * t3 - 0.2e1 * t25 * t66 - 0.2e1 * t41 * t44 + 0.2e1 * t9 * t90, -0.2e1 * t1 * t90 + 0.2e1 * t22 * t44 - 0.2e1 * t25 * t45 + 0.2e1 * t3 * t89, 0.2e1 * t1 * t22 - 0.2e1 * t25 * t3 + 0.2e1 * t41 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, 0, -t164, 0, -t125, t217, 0, 0, t347 * t275 + (-t150 + (0.2e1 * t261 + t271) * t188) * t185, -t185 * t283 - t229 * t304 + (-t349 - t220) * t188, t231 * t183, t352 (t188 * t307 + t274) * t183, 0, -pkin(2) * t283 - t125 * t188 + t185 * t299 - t231 * t340, pkin(2) * t349 - t274 * t340 + t320 + (-pkin(9) * t164 + t299) * t188, t229 * t289 - t303 * t98 - t304 * t99 + t244 + (-t185 * t349 + t352) * pkin(9), -pkin(2) * t125 + ((-t99 * t185 - t98 * t188) * qJD(3) + t244) * pkin(9), -t103 * t115 - t142 * t196, t115 * t102 - t103 * t116 + t141 * t196 - t142 * t66 (t115 * t189 + t142 * t307) * t183, t42 (t116 * t189 - t141 * t307) * t183, 0, t102 * t292 + t107 * t116 + t95 * t141 + t173 * t66 + (t189 * t87 + t307 * t360) * t183, t103 * t292 - t107 * t115 - t119 * t164 + t95 * t142 - t173 * t196 - t313 * t348, t102 * t348 + t87 * t103 + t54 * t115 - t55 * t116 - t119 * t66 + t18 * t141 - t19 * t142 + t196 * t360, t107 * t292 - t18 * t119 + t95 * t173 + t19 * t360 - t348 * t55 - t54 * t87, t23, t7, t11, t24, t12, t42, t102 * t40 + t116 * t28 + t141 * t6 + t142 * t335 - t322 * t51 - t360 * t45 + t66 * t83 + t87 * t89, t102 * t39 - t116 * t29 + t141 * t5 - t142 * t265 - t51 * t321 + t360 * t44 - t66 * t84 + t87 * t90, t39 * t89 - t40 * t90 + t44 * t83 - t45 * t84 + t247 * t115 + (t184 * t5 - t187 * t6 + (t184 * t28 - t187 * t29) * qJD(5)) * t142, -t17 * t360 + t28 * t40 - t29 * t39 - t5 * t84 + t51 * t87 + t6 * t83, t23, t7, t11, t24, t12, t42, t1 * t141 + t101 * t45 + t102 * t26 + t116 * t22 + t142 * t344 - t322 * t41 + t64 * t89 + t66 * t67, -t101 * t44 + t102 * t30 - t116 * t25 + t141 * t3 - t142 * t268 - t41 * t321 + t64 * t90 - t66 * t72, -t26 * t90 + t30 * t89 + t44 * t67 - t45 * t72 + t248 * t115 + (-t1 * t187 + t184 * t3 + (t184 * t22 - t187 * t25) * qJD(5)) * t142, t1 * t67 + t101 * t9 + t22 * t26 - t25 * t30 - t3 * t72 + t41 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t269, 0.2e1 * (-t185 ^ 2 + t347) * qJD(3), 0, -0.2e1 * t269, 0, 0, t185 * t298, t188 * t298, 0, 0, -0.2e1 * t319, 0.2e1 * t115 * t141 - 0.2e1 * t116 * t142, 0, t100, 0, 0, 0.2e1 * t116 * t173 + 0.2e1 * t141 * t292, -0.2e1 * t115 * t173 + 0.2e1 * t142 * t292, 0.2e1 * t115 * t360 - 0.2e1 * t119 * t116 + 0.2e1 * t141 * t348 + 0.2e1 * t87 * t142, 0.2e1 * t119 * t227 - 0.2e1 * t332 + 0.2e1 * (t119 * t241 + (t173 * pkin(3) + t119 * t257) * t185) * qJD(3), t79, t71, t58, t78, t59, t100, 0.2e1 * t116 * t83 + 0.2e1 * t141 * t40 + 0.2e1 * t318 * t87 - 0.2e1 * t360 * t94, -0.2e1 * t116 * t84 + 0.2e1 * t141 * t39 + 0.2e1 * t237 * t360 + 0.2e1 * t317 * t87, 0.2e1 * t246 * t115 + 0.2e1 * (t184 * t39 - t187 * t40 + (t184 * t83 - t187 * t84) * qJD(5)) * t142, -0.2e1 * t39 * t84 + 0.2e1 * t40 * t83 - 0.2e1 * t332, t79, t71, t58, t78, t59, t100, 0.2e1 * t101 * t94 + 0.2e1 * t116 * t67 + 0.2e1 * t141 * t26 + 0.2e1 * t318 * t64, -0.2e1 * t101 * t237 - 0.2e1 * t116 * t72 + 0.2e1 * t141 * t30 + 0.2e1 * t317 * t64, 0.2e1 * (t184 * t72 + t187 * t67) * t115 + 0.2e1 * (t184 * t30 - t187 * t26 + (t184 * t67 - t187 * t72) * qJD(5)) * t142, 0.2e1 * t101 * t64 + 0.2e1 * t26 * t67 - 0.2e1 * t30 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t349, 0, -t283, t164, t69, t68, 0, 0, 0, 0, -t196, 0, -t66, t164 (t189 * t266 + t307 * t343) * t183 * pkin(3) + t19, t259 * t313 - t260 * t342 + t18, -t102 * t259 + t103 * t258 + t196 * t294 - t293 * t66 (t343 * t19 - t342 * t18 + (-t342 * t54 + t343 * t55) * qJD(4)) * pkin(3), t33, t13, t47, t34, -t238, 0, t171 * t45 - t47 * t170 + (-t102 * t280 + t342 * t89) * t333 + t265, -t171 * t44 + t238 * t170 + (-t102 * t279 + t342 * t90) * t333 + t335, -t4 + (-t89 * t259 - t170 * t45 + (t170 * t90 - t28) * qJD(5)) * t187 + (t90 * t259 - t170 * t44 - t6 + (t170 * t89 - t29) * qJD(5)) * t184, t17 * t171 + (t279 * t29 - t28 * t280 + t342 * t51) * t333 + t207 * t170, t33, t13, t47, t34, -t238, 0, t102 * t114 - t136 * t66 + t144 * t89 + t156 * t45 + t268, t102 * t113 - t137 * t66 + t144 * t90 - t156 * t44 + t344, t113 * t89 - t114 * t90 - t136 * t44 - t137 * t45 + t216, -t1 * t136 - t113 * t25 + t114 * t22 - t137 * t3 + t144 * t41 + t156 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, 0, -t304, 0, -t289, pkin(9) * t304, 0, 0, 0, 0, -t115, 0, -t116, 0, -t87, t348 (t115 * t343 - t116 * t342 + t221) * pkin(3), t119 * t259 - t258 * t360 - t293 * t348 - t294 * t87, -t77, t70, t93, t77, -t236, 0, -t111 + (-qJD(5) * t240 - t87) * t187 + t204 * t184, t177 * t240 + t187 * t204 + t324, t10, t87 * t171 + (t279 * t84 - t280 * t83 - t342 * t360) * t333 + t10 * t170, -t77, t70, t93, t77, -t236, 0, t114 * t141 - t116 * t136 + t142 * t311 - t156 * t322 + t264, t113 * t141 - t116 * t137 - t142 * t355 - t156 * t321 + t334, -t27 + (-t114 * t142 - t115 * t136 + (-t137 * t142 - t67) * qJD(5)) * t187 + (t113 * t142 + t115 * t137 - t26 + (-t136 * t142 - t72) * qJD(5)) * t184, t101 * t144 - t113 * t72 + t114 * t67 - t136 * t26 - t137 * t30 + t156 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t258, -0.2e1 * t259, 0, 0, t162, t140, 0, t163, 0, 0, 0.2e1 * t235, 0.2e1 * t310, 0.2e1 * t127, 0.2e1 * (t170 * t232 + t171 * t342) * t333, t162, t140, 0, t163, 0, 0, 0.2e1 * t355, 0.2e1 * t311, -0.2e1 * t114 * t184 - 0.2e1 * t109 + 0.2e1 * (t136 * t187 - t137 * t184) * qJD(5), -0.2e1 * t113 * t137 - 0.2e1 * t114 * t136 + 0.2e1 * t144 * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196, 0, -t66, t164, t19, t18, 0, 0, t33, t13, t47, t34, -t238, 0, -pkin(4) * t45 - pkin(11) * t47 + t265, pkin(4) * t44 + pkin(11) * t238 + t335 (-t330 - t326 + (t325 + t328) * qJD(5)) * pkin(11) + t207, -pkin(4) * t17 + pkin(11) * t207, t33, t13, t47, t34, -t238, 0, pkin(5) * t287 + t102 * t129 + t157 * t66 + t172 * t45 + t268, pkin(5) * t286 + t102 * t128 - t158 * t66 - t172 * t44 + t344, t128 * t89 - t129 * t90 + t157 * t44 - t158 * t45 + t216, pkin(5) * t37 + t1 * t157 - t128 * t25 + t129 * t22 - t158 * t3 + t172 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115, 0, -t116, 0, -t87, t348, 0, 0, -t77, t70, t93, t77, -t236, 0, -t111 + (pkin(4) * t115 - pkin(11) * t116) * t184 + (-t87 + (-pkin(4) * t142 - pkin(11) * t141) * qJD(5)) * t187, pkin(4) * t237 + pkin(11) * t236 + t324, t10, -pkin(4) * t87 + pkin(11) * t10, -t77, t70, t93, t77, -t236, 0, -t172 * t322 + t116 * t157 + t129 * t141 + (pkin(5) * t181 + t315) * t301 + t264, -t115 * t315 - t116 * t158 + t128 * t141 + (-t172 + t338) * t273 + t334, -t27 + (t115 * t157 - t129 * t142 + (-t142 * t158 - t67) * qJD(5)) * t187 + (t115 * t158 + t128 * t142 - t26 + (t142 * t157 - t72) * qJD(5)) * t184, pkin(5) * t96 - t128 * t72 + t129 * t67 + t157 * t26 - t158 * t30 + t172 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, -t259, 0, 0, t162, t140, 0, t163, 0, 0, t235 - t291, -t290 + t310, t127 (-pkin(4) * t342 + pkin(11) * t232) * t333, t162, t140, 0, t163, 0, 0, t134 + t148 + (-t144 - t175) * t187, t309 + t311, -t109 - t121 + (-t114 - t129) * t184 + ((t136 - t157) * t187 + (-t137 - t158) * t184) * qJD(5), pkin(5) * t134 - t113 * t158 + t114 * t157 - t128 * t137 - t129 * t136 + t144 * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t140, 0, t163, 0, 0, -0.2e1 * t291, -0.2e1 * t290, 0, 0, t162, t140, 0, t163, 0, 0, -0.2e1 * pkin(5) * t270 + 0.2e1 * t148, 0.2e1 * t309, -0.2e1 * t129 * t184 - 0.2e1 * t121 + 0.2e1 * (-t157 * t187 - t158 * t184) * qJD(5), 0.2e1 * pkin(5) * t148 - 0.2e1 * t128 * t158 + 0.2e1 * t129 * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, 0, -t45, t66, t6, t5, 0, 0, 0, 0, -t44, 0, -t45, t66, t190 + 0.2e1 * t345, t3, t44 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, 0, -t94, t116, t40, t39, 0, 0, 0, 0, -t237, 0, -t94, t116, t195 + 0.2e1 * t339, t30, t237 * pkin(5), t26 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, -t177, 0, -t170 * t178 - t184 * t259, t170 * t177 - t160, 0, 0, 0, 0, t178, 0, -t177, 0, t114, t113, -t288, t114 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, -t177, 0, -pkin(11) * t178, pkin(11) * t177, 0, 0, 0, 0, t178, 0, -t177, 0, t129, t128, -t288, t129 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, -t44, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, -t237, 0, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t178, 0, t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t178, 0, t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
