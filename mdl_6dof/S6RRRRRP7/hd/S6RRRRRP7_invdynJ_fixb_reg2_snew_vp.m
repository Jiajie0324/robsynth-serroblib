% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 05:36
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRRRP7_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 05:31:52
% EndTime: 2019-05-08 05:32:43
% DurationCPUTime: 18.16s
% Computational Cost: add. (130362->657), mult. (277765->922), div. (0->0), fcn. (227487->12), ass. (0->441)
t364 = sin(pkin(6));
t373 = cos(qJ(2));
t446 = qJDD(1) * t373;
t369 = sin(qJ(2));
t454 = qJD(1) * t369;
t404 = qJD(2) * t454 - t446;
t396 = t404 * t364;
t386 = qJDD(3) + t396;
t384 = qJDD(4) + t386;
t365 = cos(pkin(6));
t359 = qJD(1) * t365 + qJD(2);
t368 = sin(qJ(3));
t372 = cos(qJ(3));
t435 = t364 * t454;
t336 = t359 * t372 - t368 * t435;
t337 = t359 * t368 + t372 * t435;
t367 = sin(qJ(4));
t371 = cos(qJ(4));
t317 = t336 * t367 + t337 * t371;
t453 = qJD(1) * t373;
t434 = t364 * t453;
t447 = qJDD(1) * t364;
t342 = qJD(2) * t434 + t369 * t447;
t422 = qJDD(1) * t365 + qJDD(2);
t428 = -t342 * t368 + t372 * t422;
t306 = -qJD(3) * t337 + t428;
t390 = -t372 * t342 - t368 * t422;
t307 = t336 * qJD(3) - t390;
t430 = -t371 * t306 + t367 * t307;
t247 = -t317 * qJD(4) - t430;
t246 = qJDD(5) - t247;
t366 = sin(qJ(5));
t370 = cos(qJ(5));
t353 = -qJD(3) + t434;
t410 = -qJD(4) + t353;
t293 = t317 * t366 + t370 * t410;
t295 = t370 * t317 - t366 * t410;
t252 = t295 * t293;
t527 = t246 - t252;
t539 = pkin(5) * t527;
t315 = -t371 * t336 + t337 * t367;
t248 = -qJD(4) * t315 + t306 * t367 + t307 * t371;
t212 = -t293 * qJD(5) + t370 * t248 + t366 * t384;
t312 = qJD(5) + t315;
t264 = t312 * t293;
t197 = t264 + t212;
t538 = qJ(6) * t197;
t273 = t317 * t315;
t525 = -t273 + t384;
t537 = t367 * t525;
t536 = t371 * t525;
t485 = t527 * t366;
t484 = t527 * t370;
t302 = t315 * t410;
t535 = t248 + t302;
t292 = t295 ^ 2;
t311 = t312 ^ 2;
t245 = -t292 - t311;
t291 = t293 ^ 2;
t257 = pkin(5) * t312 - qJ(6) * t295;
t431 = t248 * t366 - t370 * t384;
t408 = qJD(5) * t295 + t431;
t499 = t365 * g(3);
t501 = t342 * pkin(9);
t419 = -t499 - t501;
t515 = sin(qJ(1));
t516 = cos(qJ(1));
t402 = g(1) * t515 - g(2) * t516;
t389 = qJDD(1) * pkin(1) + t402;
t374 = qJD(1) ^ 2;
t466 = t364 * t374;
t382 = pkin(8) * t466 + t389;
t395 = (qJD(2) + t359) * t454 - t446;
t523 = -pkin(9) * t359 * t453 + pkin(2) * t395 - t382;
t376 = t364 * t523 + t419;
t403 = g(1) * t516 + g(2) * t515;
t338 = -t374 * pkin(1) + pkin(8) * t447 - t403;
t420 = -pkin(2) * t373 - pkin(9) * t369;
t455 = qJD(1) * t364;
t341 = t420 * t455;
t468 = t364 * t369;
t360 = g(3) * t468;
t381 = t365 * t382;
t380 = t369 * t381 - t360;
t413 = t422 * pkin(9);
t378 = t413 + t380;
t522 = t359 ^ 2;
t500 = t522 * pkin(2);
t377 = -t500 + (t341 * t455 + t338) * t373 + t378;
t235 = t368 * t376 + t372 * t377;
t320 = -pkin(3) * t353 - pkin(10) * t337;
t334 = t336 ^ 2;
t202 = -pkin(3) * t334 + pkin(10) * t306 + t320 * t353 + t235;
t326 = t336 * t353;
t283 = t326 + t307;
t473 = t336 * t337;
t383 = t386 + t473;
t375 = pkin(3) * t383 - pkin(10) * t283 - t368 * t377 + t372 * t376;
t149 = t371 * t202 + t367 * t375;
t269 = pkin(4) * t315 - pkin(11) * t317;
t406 = t410 ^ 2;
t129 = -pkin(4) * t406 + pkin(11) * t384 - t315 * t269 + t149;
t429 = t369 * t338 - t373 * t381;
t276 = -t422 * pkin(2) - t522 * pkin(9) + (g(3) * t373 + t341 * t454) * t364 + t429;
t222 = -t306 * pkin(3) - t334 * pkin(10) + t337 * t320 + t276;
t400 = t410 * t317;
t145 = -t535 * pkin(11) + (-t247 - t400) * pkin(4) + t222;
t96 = t370 * t129 + t366 * t145;
t405 = -t408 * qJ(6) - 0.2e1 * qJD(6) * t293 - t257 * t312 + t96;
t534 = -t405 + (t245 + t291) * pkin(5);
t194 = (qJD(5) - t312) * t295 + t431;
t230 = -t291 - t292;
t59 = -qJ(6) * t194 + (-t230 - t291) * pkin(5) + t405;
t451 = qJD(6) * t295;
t288 = 0.2e1 * t451;
t95 = t129 * t366 - t370 * t145;
t399 = -t538 - t95 + t539;
t63 = t288 - t399 + t538;
t531 = -t366 * t63 - t370 * t59;
t53 = t366 * t95 + t370 * t96;
t205 = t246 + t252;
t526 = -t264 + t212;
t146 = -pkin(5) * t526 - qJ(6) * t205;
t148 = t202 * t367 - t371 * t375;
t128 = -t384 * pkin(4) - t406 * pkin(11) + t269 * t317 + t148;
t99 = t408 * pkin(5) - t291 * qJ(6) + t257 * t295 + qJDD(6) + t128;
t97 = -qJ(6) * t245 + t99;
t530 = -t370 * t146 - t366 * t97;
t361 = t364 ^ 2;
t470 = t361 * t373;
t529 = t368 * t383;
t528 = t372 * t383;
t467 = t364 * t373;
t309 = g(3) * t467 + t429;
t461 = t373 * t338;
t310 = t380 + t461;
t524 = t369 * t309 + t373 * t310;
t313 = t315 ^ 2;
t314 = t317 ^ 2;
t335 = t337 ^ 2;
t350 = t353 ^ 2;
t240 = -t311 - t291;
t160 = t240 * t370 - t485;
t193 = (qJD(5) + t312) * t295 + t431;
t118 = t160 * t367 - t193 * t371;
t119 = t160 * t371 + t193 * t367;
t83 = t118 * t372 + t119 * t368;
t521 = pkin(2) * t83;
t287 = -0.2e1 * t451;
t66 = t287 + t399;
t520 = pkin(5) * t66;
t140 = -t194 * t370 + t197 * t366;
t109 = t140 * t367 - t230 * t371;
t110 = t140 * t371 + t230 * t367;
t74 = t109 * t372 + t110 * t368;
t519 = pkin(9) * t74;
t518 = pkin(9) * t83;
t486 = t205 * t370;
t166 = -t245 * t366 - t486;
t122 = t166 * t367 - t371 * t526;
t123 = t166 * t371 + t367 * t526;
t86 = t122 * t372 + t123 * t368;
t517 = pkin(9) * t86;
t101 = -t148 * t371 + t149 * t367;
t514 = pkin(3) * t101;
t227 = t248 - t302;
t385 = -t317 * t353 - t430;
t171 = -t227 * t371 + t367 * t385;
t513 = pkin(3) * t171;
t159 = t240 * t366 + t484;
t512 = pkin(4) * t159;
t487 = t205 * t366;
t165 = t245 * t370 - t487;
t511 = pkin(4) * t165;
t510 = pkin(4) * t367;
t509 = pkin(5) * t197;
t508 = pkin(8) * t364;
t507 = pkin(10) * t109;
t506 = pkin(10) * t118;
t505 = pkin(10) * t122;
t138 = -t194 * t366 - t197 * t370;
t504 = pkin(11) * t138;
t503 = pkin(11) * t159;
t502 = pkin(11) * t165;
t75 = -t109 * t368 + t110 * t372;
t498 = pkin(1) * (-t364 * t74 + (-t138 * t373 + t369 * t75) * t365) + (t138 * t369 + t373 * t75) * t508;
t84 = -t118 * t368 + t119 * t372;
t497 = pkin(1) * (-t364 * t83 + (-t159 * t373 + t369 * t84) * t365) + (t159 * t369 + t373 * t84) * t508;
t87 = -t122 * t368 + t123 * t372;
t496 = pkin(1) * (-t364 * t86 + (-t165 * t373 + t369 * t87) * t365) + (t165 * t369 + t373 * t87) * t508;
t495 = t366 * t66;
t494 = t370 * t66;
t493 = -pkin(4) * t128 + pkin(11) * t53;
t492 = -pkin(2) * t138 + pkin(9) * t75;
t491 = -pkin(2) * t159 + pkin(9) * t84;
t490 = -pkin(2) * t165 + pkin(9) * t87;
t489 = t101 * t368;
t488 = t101 * t372;
t483 = t222 * t367;
t482 = t222 * t371;
t261 = -t273 - t384;
t481 = t261 * t367;
t480 = t261 * t371;
t479 = t276 * t368;
t478 = t276 * t372;
t299 = -t386 + t473;
t477 = t299 * t368;
t476 = t299 * t372;
t475 = t312 * t366;
t474 = t312 * t370;
t472 = t353 * t368;
t471 = t353 * t372;
t469 = t361 * t374;
t124 = t366 * t128;
t463 = t369 * t374;
t352 = t463 * t470;
t340 = t352 + t422;
t464 = t369 * t340;
t125 = t370 * t128;
t339 = -t352 + t422;
t460 = t373 * t339;
t459 = -pkin(4) * t230 + pkin(11) * t140;
t458 = -pkin(4) * t193 + pkin(11) * t160;
t457 = -pkin(4) * t526 + pkin(11) * t166;
t449 = -qJD(3) + t353;
t445 = t367 * t252;
t444 = t371 * t252;
t362 = t369 ^ 2;
t443 = t362 * t469;
t363 = t373 ^ 2;
t442 = t363 * t469;
t441 = t373 * t273;
t440 = t373 * t473;
t439 = t124 + t457;
t438 = -t125 + t458;
t346 = t359 * t434;
t437 = t346 + t342;
t436 = -pkin(4) * t371 - pkin(3);
t433 = -pkin(3) * t159 + pkin(10) * t119;
t432 = -pkin(3) * t165 + pkin(10) * t123;
t102 = t148 * t367 + t371 * t149;
t234 = t368 * (t365 * t369 * t389 - t360 + t413 + t461 - t500) - t372 * t419 + (t368 * (pkin(8) * t365 * t463 + t341 * t453) - t523 * t372) * t364;
t184 = t234 * t368 + t372 * t235;
t427 = t459 - t531;
t426 = t459 + t53;
t425 = t457 - t530;
t117 = pkin(3) * t118;
t424 = t117 + t438;
t43 = -t128 * t371 + t367 * t53;
t423 = pkin(3) * t43 + t493;
t285 = -t314 - t406;
t232 = t285 * t371 + t481;
t421 = pkin(3) * t232 - t149;
t52 = t366 * t96 - t370 * t95;
t418 = t234 * t372 - t235 * t368;
t108 = pkin(3) * t109;
t417 = -pkin(2) * t74 - t108 - t459;
t121 = pkin(3) * t122;
t416 = -pkin(2) * t86 - t121 - t457;
t415 = qJD(1) * t359 - t365 * t374;
t414 = -pkin(1) + t420;
t266 = -t406 - t313;
t216 = t266 * t367 + t536;
t411 = pkin(3) * t216 - t148;
t69 = -pkin(5) * t291 + t405;
t38 = t370 * t69 - t495;
t49 = -pkin(5) * t99 + qJ(6) * t69;
t409 = -pkin(4) * t99 + pkin(11) * t38 - qJ(6) * t495 + t370 * t49;
t77 = -pkin(5) * t193 + qJ(6) * t240 - t99;
t407 = -qJ(6) * t485 + t370 * t77 + t458;
t401 = t117 + t407;
t398 = (-qJD(3) - t353) * t337 + t428;
t28 = t367 * t38 - t371 * t99;
t397 = pkin(3) * t28 + t409;
t394 = t367 * t302;
t393 = t367 * t400;
t392 = t371 * t302;
t391 = t371 * t400;
t388 = t399 + t539;
t327 = t364 * t382 + t499;
t345 = t359 * t435;
t344 = (t362 - t363) * t469;
t343 = -t442 - t522;
t331 = -t443 - t522;
t325 = -t345 - t396;
t324 = t345 - t396;
t323 = -t346 + t342;
t322 = -t335 + t350;
t321 = t334 - t350;
t319 = -t335 - t350;
t318 = t335 - t334;
t308 = -t350 - t334;
t298 = -t314 + t406;
t297 = t313 - t406;
t296 = t334 + t335;
t290 = (-t336 * t368 + t337 * t372) * t353;
t284 = t336 * t449 + t390;
t282 = -t326 + t307;
t280 = t337 * t449 + t428;
t278 = t307 * t368 - t337 * t471;
t277 = t306 * t372 + t336 * t472;
t272 = t314 - t313;
t271 = t321 * t368 - t476;
t270 = t322 * t372 + t529;
t268 = -t319 * t368 + t476;
t267 = t319 * t372 + t477;
t259 = -t292 + t311;
t258 = t291 - t311;
t256 = t308 * t372 - t529;
t255 = t308 * t368 + t528;
t254 = t392 - t393;
t253 = t394 + t391;
t250 = t292 - t291;
t249 = -t313 - t314;
t243 = t283 * t368 + t372 * t398;
t241 = t280 * t368 + t282 * t372;
t239 = t297 * t371 + t481;
t238 = -t298 * t367 + t536;
t237 = t297 * t367 - t480;
t236 = t298 * t371 + t537;
t233 = -t285 * t367 + t480;
t223 = (0.2e1 * qJD(4) - t353) * t317 + t430;
t221 = t371 * t248 + t393;
t220 = t367 * t248 - t391;
t219 = -t367 * t247 - t392;
t218 = t371 * t247 - t394;
t217 = t266 * t371 - t537;
t215 = (-t293 * t370 + t295 * t366) * t312;
t214 = (-t293 * t366 - t295 * t370) * t312;
t213 = t253 * t372 + t254 * t368;
t207 = pkin(2) * t284 + pkin(9) * t268 + t479;
t203 = pkin(2) * t280 + pkin(9) * t256 - t478;
t192 = t237 * t372 + t239 * t368;
t191 = t236 * t372 + t238 * t368;
t188 = t212 * t370 - t295 * t475;
t187 = t212 * t366 + t295 * t474;
t186 = t293 * t474 + t366 * t408;
t185 = -t293 * t475 + t370 * t408;
t182 = -t232 * t368 + t233 * t372;
t181 = t232 * t372 + t233 * t368;
t180 = t215 * t371 + t246 * t367;
t179 = t215 * t367 - t246 * t371;
t178 = t258 * t370 - t487;
t177 = -t259 * t366 + t484;
t176 = t258 * t366 + t486;
t175 = t259 * t370 + t485;
t174 = -pkin(10) * t232 + t482;
t173 = t227 * t367 + t371 * t385;
t172 = -t223 * t371 - t367 * t535;
t170 = -t223 * t367 + t371 * t535;
t169 = -pkin(10) * t216 + t483;
t168 = t220 * t372 + t221 * t368;
t167 = t218 * t372 + t219 * t368;
t164 = -t216 * t368 + t217 * t372;
t163 = t216 * t372 + t217 * t368;
t158 = -pkin(2) * t276 + pkin(9) * t184;
t155 = t188 * t371 + t445;
t154 = t186 * t371 - t445;
t153 = t188 * t367 - t444;
t152 = t186 * t367 + t444;
t151 = pkin(2) * t296 + pkin(9) * t243 + t184;
t150 = -pkin(3) * t535 + pkin(10) * t233 + t483;
t141 = -pkin(3) * t223 + pkin(10) * t217 - t482;
t139 = -t193 * t370 - t366 * t526;
t137 = -t193 * t366 + t370 * t526;
t134 = t178 * t371 - t194 * t367;
t133 = t177 * t371 + t197 * t367;
t132 = t178 * t367 + t194 * t371;
t131 = t177 * t367 - t197 * t371;
t130 = t179 * t372 + t180 * t368;
t115 = t139 * t371 + t250 * t367;
t114 = t139 * t367 - t250 * t371;
t113 = -t171 * t368 + t173 * t372;
t112 = t171 * t372 + t173 * t368;
t111 = t170 * t372 + t172 * t368;
t107 = pkin(10) * t110;
t106 = t153 * t372 + t155 * t368;
t105 = t152 * t372 + t154 * t368;
t104 = -pkin(4) * t138 + t509;
t103 = t125 - t502;
t100 = t124 - t503;
t91 = -pkin(3) * t222 + pkin(10) * t102;
t90 = t132 * t372 + t134 * t368;
t89 = t131 * t372 + t133 * t368;
t88 = -pkin(2) * t535 + pkin(9) * t182 + t150 * t372 + t174 * t368;
t81 = -pkin(10) * t171 - t101;
t80 = t114 * t372 + t115 * t368;
t79 = -pkin(2) * t223 + pkin(9) * t164 + t141 * t372 + t169 * t368;
t78 = t365 * t130 + (t369 * (-t179 * t368 + t180 * t372) - t373 * t214) * t364;
t73 = -pkin(3) * t249 + pkin(10) * t173 + t102;
t71 = t96 - t511;
t70 = t95 - t512;
t65 = t365 * t106 + (t369 * (-t153 * t368 + t155 * t372) - t373 * t187) * t364;
t64 = t365 * t105 + (t369 * (-t152 * t368 + t154 * t372) + t373 * t185) * t364;
t61 = t102 * t372 - t489;
t60 = t102 * t368 + t488;
t57 = -t146 * t366 + t370 * t97 - t502;
t55 = -qJ(6) * t484 - t366 * t77 - t503;
t54 = -t511 - t534;
t51 = t288 - t388 - t512;
t47 = t365 * t90 + (t369 * (-t132 * t368 + t134 * t372) - t373 * t176) * t364;
t46 = t365 * t89 + (t369 * (-t131 * t368 + t133 * t372) - t373 * t175) * t364;
t45 = -t52 - t504;
t44 = t128 * t367 + t371 * t53;
t40 = t103 * t371 - t367 * t71 - t505;
t39 = t100 * t371 - t367 * t70 - t506;
t37 = t366 * t69 + t494;
t35 = t365 * t80 + (t369 * (-t114 * t368 + t115 * t372) - t373 * t137) * t364;
t33 = t103 * t367 + t371 * t71 + t432;
t32 = t100 * t367 + t371 * t70 + t433;
t31 = -pkin(2) * t249 + pkin(9) * t113 + t368 * t81 + t372 * t73;
t30 = t138 * t510 + t371 * t45 - t507;
t29 = t367 * t99 + t371 * t38;
t27 = -pkin(2) * t222 + pkin(9) * t61 - pkin(10) * t489 + t372 * t91;
t26 = -t366 * t59 + t370 * t63 - t504;
t25 = -t367 * t54 + t371 * t57 - t505;
t24 = t138 * t436 + t367 * t45 + t107;
t23 = -pkin(4) * t37 - t520;
t22 = -t367 * t51 + t371 * t55 - t506;
t21 = t367 * t57 + t371 * t54 + t432;
t20 = t367 * t55 + t371 * t51 + t433;
t19 = -t368 * t43 + t372 * t44;
t18 = t368 * t44 + t372 * t43;
t17 = -t104 * t367 + t26 * t371 - t507;
t16 = -pkin(3) * t138 + t104 * t371 + t26 * t367 + t107;
t15 = -pkin(10) * t43 + (-pkin(11) * t371 + t510) * t52;
t14 = -pkin(11) * t37 - qJ(6) * t494 - t366 * t49;
t13 = t33 * t372 + t368 * t40 + t490;
t12 = t32 * t372 + t368 * t39 + t491;
t11 = -t28 * t368 + t29 * t372;
t10 = t28 * t372 + t29 * t368;
t9 = pkin(10) * t44 + (-pkin(11) * t367 + t436) * t52;
t8 = t24 * t372 + t30 * t368 + t492;
t7 = t21 * t372 + t25 * t368 + t490;
t6 = t20 * t372 + t22 * t368 + t491;
t5 = t16 * t372 + t17 * t368 + t492;
t4 = -pkin(10) * t28 + t14 * t371 - t23 * t367;
t3 = -pkin(3) * t37 + pkin(10) * t29 + t14 * t367 + t23 * t371;
t2 = -pkin(2) * t52 + pkin(9) * t19 + t15 * t368 + t372 * t9;
t1 = -pkin(2) * t37 + pkin(9) * t11 + t3 * t372 + t368 * t4;
t34 = [0, 0, 0, 0, 0, qJDD(1), t402, t403, 0, 0, (t342 * t364 + t415 * t470) * t369, t365 * t344 + (t369 * t325 + t373 * t437) * t364, t365 * t323 + (t464 + t373 * (-t443 + t522)) * t364, (-t369 * t415 - t404) * t470, t365 * t324 + (t369 * (t442 - t522) + t460) * t364, t365 * t422, (-t309 + pkin(1) * (t340 * t373 + t343 * t369)) * t365 + (t373 * t327 + pkin(1) * t325 + pkin(8) * (t343 * t373 - t464)) * t364, -t327 * t468 - t365 * t310 + pkin(1) * (-t364 * t437 + (t331 * t373 - t339 * t369) * t365) + (-t331 * t369 - t460) * t508, pkin(1) * ((-t323 * t373 + t324 * t369) * t365 - (-t362 - t363) * t361 * t466) + (t323 * t369 + t324 * t373) * t508 + t524 * t364, pkin(1) * (t364 * t327 + (-t309 * t373 + t310 * t369) * t365) + t524 * t508, t365 * t278 + (t369 * (t307 * t372 + t337 * t472) + t440) * t364, t365 * t241 + (t369 * (t280 * t372 - t282 * t368) - t373 * t318) * t364, t365 * t270 + (t369 * (-t322 * t368 + t528) - t373 * t283) * t364, t365 * t277 + (t369 * (-t306 * t368 + t336 * t471) - t440) * t364, t365 * t271 + (t369 * (t321 * t372 + t477) - t373 * t398) * t364, -t386 * t467 + t365 * t290 + (-t336 * t372 - t337 * t368) * t353 * t468, (-pkin(9) * t255 + t479) * t468 + (t368 * (t341 * t434 + t378 + t461) - t372 * (-pkin(9) * t346 - t327 - t501) + (-t364 * t372 * t395 - t368 * t522 - t255) * pkin(2)) * t467 + t365 * t203 + pkin(1) * (-t255 * t364 + (t256 * t369 + t280 * t373) * t365) + (t256 * t373 - t280 * t369) * t508, (t207 + pkin(1) * (t268 * t369 + t284 * t373)) * t365 + (t369 * (-pkin(9) * t267 + t478) + t373 * (-pkin(2) * t267 + t235) - pkin(1) * t267 + pkin(8) * (t268 * t373 - t284 * t369)) * t364, (t151 + pkin(1) * (t243 * t369 + t296 * t373)) * t365 + (t369 * t418 + pkin(8) * (t243 * t373 - t296 * t369) + t414 * (-t283 * t372 + t368 * t398)) * t364, (t158 + pkin(1) * (t184 * t369 - t276 * t373)) * t365 + (pkin(8) * (t184 * t373 + t369 * t276) - t414 * t418) * t364, t365 * t168 + (t369 * (-t220 * t368 + t221 * t372) - t441) * t364, t365 * t111 + (t369 * (-t170 * t368 + t172 * t372) - t373 * t272) * t364, t365 * t191 + (t369 * (-t236 * t368 + t238 * t372) - t373 * t227) * t364, t365 * t167 + (t369 * (-t218 * t368 + t219 * t372) + t441) * t364, t365 * t192 + (t369 * (-t237 * t368 + t239 * t372) - t373 * t385) * t364, t365 * t213 + (t369 * (-t253 * t368 + t254 * t372) - t384 * t373) * t364, (t79 + pkin(1) * (t164 * t369 - t223 * t373)) * t365 + (t369 * (-pkin(9) * t163 - t141 * t368 + t169 * t372) + t373 * (-pkin(2) * t163 - t411) - pkin(1) * t163 + pkin(8) * (t164 * t373 + t223 * t369)) * t364, (t88 + pkin(1) * (t182 * t369 - t373 * t535)) * t365 + (t369 * (-pkin(9) * t181 - t150 * t368 + t174 * t372) + t373 * (-pkin(2) * t181 - t421) - pkin(1) * t181 + pkin(8) * (t182 * t373 + t369 * t535)) * t364, (t31 + pkin(1) * (t113 * t369 - t249 * t373)) * t365 + (t369 * (-pkin(9) * t112 - t368 * t73 + t372 * t81) + t373 * (-pkin(2) * t112 - t513) - pkin(1) * t112 + pkin(8) * (t113 * t373 + t249 * t369)) * t364, (t27 + pkin(1) * (-t222 * t373 + t369 * t61)) * t365 + (t369 * (-pkin(9) * t60 - pkin(10) * t488 - t368 * t91) + t373 * (-pkin(2) * t60 - t514) - pkin(1) * t60 + pkin(8) * (t222 * t369 + t373 * t61)) * t364, t65, t35, t46, t64, t47, t78, t365 * t12 + (t369 * (-t32 * t368 + t372 * t39 - t518) + t373 * (-t424 - t521)) * t364 + t497, t365 * t13 + (t369 * (-t33 * t368 + t372 * t40 - t517) + t373 * (-t124 + t416)) * t364 + t496, t365 * t8 + (t369 * (-t24 * t368 + t30 * t372 - t519) + t373 * (t417 - t53)) * t364 + t498, (t2 + pkin(1) * (t19 * t369 - t373 * t52)) * t365 + (t369 * (-pkin(9) * t18 + t15 * t372 - t368 * t9) + t373 * (-pkin(2) * t18 - t423) - pkin(1) * t18 + pkin(8) * (t19 * t373 + t369 * t52)) * t364, t65, t35, t46, t64, t47, t78, t365 * t6 + (t369 * (-t20 * t368 + t22 * t372 - t518) + t373 * (-t401 - t521)) * t364 + t497, t365 * t7 + (t369 * (-t21 * t368 + t25 * t372 - t517) + t373 * (t416 + t530)) * t364 + t496, t365 * t5 + (t369 * (-t16 * t368 + t17 * t372 - t519) + t373 * (t417 + t531)) * t364 + t498, (t1 + pkin(1) * (t11 * t369 - t37 * t373)) * t365 + (t369 * (-pkin(9) * t10 - t3 * t368 + t372 * t4) + t373 * (-pkin(2) * t10 - t397) - pkin(1) * t10 + pkin(8) * (t11 * t373 + t369 * t37)) * t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, t344, t323, t352, t324, t422, -t309, -t310, 0, 0, t278, t241, t270, t277, t271, t290, t203, t207, t151, t158, t168, t111, t191, t167, t192, t213, t79, t88, t31, t27, t106, t80, t89, t105, t90, t130, t12, t13, t8, t2, t106, t80, t89, t105, t90, t130, t6, t7, t5, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, t318, t283, t473, t398, t386, -t234, -t235, 0, 0, t273, t272, t227, -t273, t385, t384, t411, t421, t513, t514, t187, t137, t175, -t185, t176, t214, t424, t121 + t439, t108 + t426, t423, t187, t137, t175, -t185, t176, t214, t401, t121 + t425, t108 + t427, t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, t272, t227, -t273, t385, t384, -t148, -t149, 0, 0, t187, t137, t175, -t185, t176, t214, t438, t439, t426, t493, t187, t137, t175, -t185, t176, t214, t407, t425, t427, t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t250, t197, -t252, -t194, t246, -t95, -t96, 0, 0, t252, t250, t197, -t252, -t194, t246, t287 + t388, t534, -t509, t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t526, t230, t99;];
tauJ_reg  = t34;
