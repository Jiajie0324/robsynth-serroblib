% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP7_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:43:18
% EndTime: 2019-03-10 01:44:02
% DurationCPUTime: 25.37s
% Computational Cost: add. (34857->966), mult. (84345->1226), div. (0->0), fcn. (67808->14), ass. (0->434)
t421 = cos(qJ(2));
t418 = sin(qJ(2));
t412 = sin(pkin(6));
t565 = qJD(1) * t412;
t524 = t418 * t565;
t413 = cos(pkin(6));
t564 = qJD(1) * t413;
t543 = pkin(1) * t564;
t321 = -pkin(8) * t524 + t421 * t543;
t484 = pkin(2) * t418 - pkin(9) * t421;
t322 = t484 * t565;
t417 = sin(qJ(3));
t658 = cos(qJ(3));
t230 = -t417 * t321 + t658 * t322;
t422 = -pkin(10) - pkin(9);
t375 = t422 * t658;
t528 = t421 * t658;
t716 = (pkin(3) * t418 - pkin(10) * t528) * t565 + t230 - qJD(3) * t375;
t231 = t658 * t321 + t417 * t322;
t374 = t422 * t417;
t563 = qJD(1) * t421;
t523 = t412 * t563;
t497 = t417 * t523;
t715 = pkin(10) * t497 + qJD(3) * t374 - t231;
t416 = sin(qJ(4));
t657 = cos(qJ(4));
t450 = -t416 * t417 + t657 * t658;
t548 = qJD(3) + qJD(4);
t265 = t450 * t548;
t278 = t450 * t523;
t573 = -t265 + t278;
t343 = t416 * t658 + t417 * t657;
t572 = (-t523 + t548) * t343;
t420 = cos(qJ(5));
t555 = qJD(5) * t420;
t389 = qJD(2) + t564;
t530 = t412 * t658;
t492 = qJD(1) * t530;
t468 = t418 * t492;
t301 = t417 * t389 + t468;
t496 = t417 * t524;
t300 = t389 * t658 - t496;
t674 = t657 * t300;
t213 = t301 * t416 - t674;
t692 = t213 * t420;
t714 = t555 + t692;
t415 = sin(qJ(5));
t556 = qJD(5) * t415;
t693 = t213 * t415;
t713 = t556 + t693;
t591 = t412 * t418;
t690 = t413 * t658 - t417 * t591;
t466 = t690 * pkin(3);
t517 = qJD(4) * t657;
t559 = qJD(4) * t416;
t578 = t374 * t517 + t375 * t559 - t716 * t416 + t715 * t657;
t589 = t412 * t421;
t656 = pkin(1) * t418;
t568 = pkin(8) * t589 + t413 * t656;
t324 = t568 * qJD(1);
t560 = qJD(3) * t417;
t486 = -t324 + (-t497 + t560) * pkin(3);
t552 = qJD(1) * qJD(2);
t514 = t421 * t552;
t550 = qJDD(1) * t418;
t712 = t514 + t550;
t368 = -qJD(3) + t523;
t463 = -qJD(4) + t368;
t448 = t420 * t463;
t461 = t416 * t300 + t301 * t657;
t179 = t415 * t461 + t448;
t181 = -t415 * t463 + t420 * t461;
t689 = qJD(5) + t213;
t707 = t689 * t415;
t469 = t421 * t492;
t551 = qJDD(1) * t413;
t495 = qJDD(2) + t551;
t499 = t418 * t530;
t518 = qJD(3) * t658;
t199 = -qJD(2) * t469 + qJD(3) * t496 - qJDD(1) * t499 - t389 * t518 - t417 * t495;
t691 = t712 * t412;
t430 = qJD(3) * t468 + t389 * t560 + t417 * t691 - t495 * t658;
t426 = t199 * t657 + t301 * t559 + t416 * t430;
t425 = -t300 * t517 + t426;
t515 = t418 * t552;
t491 = t412 * t515;
t549 = qJDD(1) * t421;
t386 = t412 * t549;
t547 = t386 - qJDD(3);
t315 = t491 - t547;
t440 = qJDD(4) + t315;
t76 = qJD(5) * t448 - t415 * t440 + t420 * t425 + t461 * t556;
t558 = qJD(5) * t181;
t77 = -t415 * t425 - t420 * t440 + t558;
t711 = -t714 * t179 - t181 * t707 - t415 * t77 - t76 * t420;
t276 = pkin(9) * t389 + t324;
t465 = -pkin(2) * t421 - pkin(9) * t418 - pkin(1);
t314 = t465 * t412;
t289 = qJD(1) * t314;
t195 = -t276 * t417 + t658 * t289;
t167 = -pkin(10) * t301 + t195;
t156 = -pkin(3) * t368 + t167;
t196 = t276 * t658 + t417 * t289;
t168 = t300 * pkin(10) + t196;
t501 = qJD(2) * t543;
t539 = pkin(1) * t551;
t532 = pkin(8) * t386 + t418 * t539 + t421 * t501;
t240 = -pkin(8) * t491 + t532;
t221 = pkin(9) * t495 + t240;
t462 = t484 * qJD(2);
t225 = (qJD(1) * t462 + qJDD(1) * t465) * t412;
t119 = -qJD(3) * t196 - t417 * t221 + t658 * t225;
t87 = t315 * pkin(3) + t199 * pkin(10) + t119;
t457 = -t658 * t221 - t417 * t225 + t276 * t560 - t289 * t518;
t94 = -pkin(10) * t430 - t457;
t25 = t156 * t517 - t168 * t559 + t416 * t87 + t657 * t94;
t23 = pkin(11) * t440 + t25;
t507 = t416 * t199 - t657 * t430;
t114 = t461 * qJD(4) - t507;
t241 = -pkin(8) * t691 - t418 * t501 + t421 * t539;
t222 = -pkin(2) * t495 - t241;
t151 = pkin(3) * t430 + t222;
t43 = t114 * pkin(4) + pkin(11) * t425 + t151;
t166 = t657 * t168;
t106 = t416 * t156 + t166;
t103 = -pkin(11) * t463 + t106;
t275 = -pkin(2) * t389 - t321;
t217 = -pkin(3) * t300 + t275;
t122 = pkin(4) * t213 - pkin(11) * t461 + t217;
t59 = t103 * t420 + t122 * t415;
t6 = -qJD(5) * t59 - t23 * t415 + t420 * t43;
t634 = qJ(6) * t76;
t110 = qJDD(5) + t114;
t652 = pkin(5) * t110;
t1 = -qJD(6) * t181 + t6 + t634 + t652;
t5 = -t103 * t556 + t122 * t555 + t420 * t23 + t415 * t43;
t633 = qJ(6) * t77;
t3 = -qJD(6) * t179 + t5 - t633;
t659 = cos(qJ(1));
t527 = t659 * t418;
t419 = sin(qJ(1));
t583 = t419 * t421;
t333 = t413 * t527 + t583;
t411 = qJ(3) + qJ(4);
t404 = sin(t411);
t405 = cos(t411);
t531 = t412 * t659;
t255 = t333 * t405 - t404 * t531;
t526 = t659 * t421;
t585 = t418 * t419;
t335 = -t413 * t585 + t526;
t590 = t412 * t419;
t259 = t335 * t405 + t404 * t590;
t311 = t404 * t413 + t405 * t591;
t453 = g(1) * t259 + g(2) * t255 + g(3) * t311;
t58 = -t103 * t415 + t420 * t122;
t44 = -qJ(6) * t181 + t58;
t32 = pkin(5) * t689 + t44;
t629 = t32 * t420;
t45 = -qJ(6) * t179 + t59;
t632 = t689 * t45;
t710 = t3 * t420 + (-t1 - t632) * t415 - t689 * t629 - t453;
t108 = t420 * t110;
t709 = t179 * t461 - t689 * t707 + t108;
t706 = pkin(11) * t524 - t578;
t705 = t572 * pkin(4) + t573 * pkin(11) + t486;
t233 = t278 * t415 - t420 * t524;
t704 = -t343 * t555 + t233;
t703 = t713 * pkin(5);
t26 = -t156 * t559 - t168 * t517 - t416 * t94 + t657 * t87;
t24 = -pkin(4) * t440 - t26;
t18 = t77 * pkin(5) + qJDD(6) + t24;
t254 = t333 * t404 + t405 * t531;
t258 = t335 * t404 - t405 * t590;
t310 = t404 * t591 - t413 * t405;
t454 = g(1) * t258 + g(2) * t254 + g(3) * t310;
t533 = t454 * t415;
t165 = t416 * t168;
t105 = t156 * t657 - t165;
t102 = pkin(4) * t463 - t105;
t510 = t179 * pkin(5) + qJD(6);
t84 = t102 + t510;
t702 = t18 * t415 + t45 * t461 + t714 * t84 - t533;
t445 = -t18 + t454;
t701 = -t32 * t461 + t420 * t445 + t713 * t84;
t700 = -qJ(6) * t693 + t420 * qJD(6);
t70 = t76 * t415;
t698 = t714 * t181 - t70;
t107 = t415 * t110;
t696 = -t181 * t461 + t714 * t689 + t107;
t502 = pkin(3) * t517;
t117 = t167 * t657 - t165;
t152 = pkin(4) * t461 + pkin(11) * t213;
t654 = pkin(3) * t301;
t135 = t152 + t654;
t65 = t420 * t117 + t415 * t135;
t695 = t420 * t502 - t65;
t694 = t102 * t213;
t609 = t213 * t461;
t116 = t167 * t416 + t166;
t673 = -pkin(3) * t559 + t116;
t282 = t416 * t374 - t375 * t657;
t576 = qJD(4) * t282 + t715 * t416 + t716 * t657;
t608 = t265 * t415;
t452 = t608 - t704;
t271 = -t335 * t417 + t419 * t530;
t390 = pkin(8) * t591;
t655 = pkin(1) * t421;
t337 = t413 * t655 - t390;
t325 = qJD(2) * t337;
t688 = -t213 ^ 2 + t461 ^ 2;
t687 = t217 * t213 - t25 + t453;
t406 = t420 * qJ(6);
t686 = -pkin(5) * t461 - t213 * t406;
t685 = -t213 * t463 - t425;
t332 = -t413 * t526 + t585;
t684 = t255 * t415 - t332 * t420;
t604 = t332 * t415;
t683 = t255 * t420 + t604;
t408 = t412 ^ 2;
t681 = 0.2e1 * t408;
t642 = g(3) * t412;
t446 = t5 * t420 - t453;
t653 = pkin(3) * t416;
t399 = pkin(11) + t653;
t581 = -qJ(6) - t399;
t505 = qJD(5) * t581;
t678 = t415 * t505 + t695 + t700;
t64 = -t117 * t415 + t420 * t135;
t625 = (-t502 - qJD(6)) * t415 + t420 * t505 - t64 + t686;
t622 = -t673 + t703;
t677 = t706 * t415 + t705 * t420;
t402 = pkin(3) * t658 + pkin(2);
t249 = -pkin(4) * t450 - t343 * pkin(11) - t402;
t676 = t249 * t555 + t705 * t415 - t706 * t420;
t675 = t689 * t461;
t334 = t413 * t583 + t527;
t671 = g(1) * t334 + g(2) * t332;
t443 = g(3) * t589 - t671;
t437 = t443 * t404;
t672 = t196 * t368 - t119;
t313 = pkin(9) * t413 + t568;
t223 = -t313 * t417 + t658 * t314;
t330 = t413 * t417 + t499;
t176 = -pkin(3) * t589 - pkin(10) * t330 + t223;
t224 = t658 * t313 + t417 * t314;
t189 = pkin(10) * t690 + t224;
t127 = t416 * t176 + t657 * t189;
t125 = -pkin(11) * t589 + t127;
t235 = t330 * t416 - t657 * t690;
t236 = t330 * t657 + t416 * t690;
t312 = t390 + (-pkin(2) - t655) * t413;
t244 = t312 - t466;
t144 = pkin(4) * t235 - pkin(11) * t236 + t244;
t74 = t420 * t125 + t415 * t144;
t577 = pkin(4) * t524 + t576;
t270 = t420 * t282;
t187 = t415 * t249 + t270;
t326 = t568 * qJD(2);
t670 = -t399 * t556 + t695;
t205 = -t259 * t415 + t334 * t420;
t582 = t420 * t421;
t536 = t412 * t582;
t669 = -g(3) * (-t311 * t415 - t536) + g(2) * t684 - g(1) * t205;
t668 = t102 * t556 - t58 * t461;
t665 = t102 * t555 + t24 * t415 + t59 * t461 - t533;
t662 = -t217 * t461 + t26 + t454;
t661 = -t368 * t461 + t507;
t660 = t181 ^ 2;
t345 = t402 * t589;
t643 = g(3) * t345;
t641 = t420 * pkin(5);
t640 = t6 * t415;
t414 = -qJ(6) - pkin(11);
t639 = -t44 + t32;
t234 = t278 * t420 + t415 * t524;
t467 = -qJ(6) * t265 - qJD(6) * t343;
t638 = t467 * t420 + (-t270 + (qJ(6) * t343 - t249) * t415) * qJD(5) + qJ(6) * t234 + t677 + t572 * pkin(5);
t637 = (-qJD(5) * t282 + t467) * t415 + t676 + t704 * qJ(6);
t636 = -t282 * t556 + t676;
t635 = -qJD(5) * t187 + t677;
t631 = t689 * t58;
t630 = t689 * t59;
t628 = t415 * t58;
t72 = t77 * t420;
t511 = qJD(5) * t414;
t68 = t420 * t105 + t415 * t152;
t624 = t415 * t511 - t68 + t700;
t67 = -t105 * t415 + t420 * t152;
t623 = -t415 * qJD(6) + t420 * t511 - t67 + t686;
t621 = t179 * t689;
t620 = t179 * t415;
t619 = t181 * t179;
t618 = t181 * t689;
t607 = t300 * t368;
t606 = t301 * t300;
t605 = t301 * t368;
t602 = t333 * t415;
t601 = t333 * t417;
t600 = t334 * t415;
t599 = t335 * t415;
t597 = t343 * t415;
t596 = t343 * t420;
t595 = t399 * t420;
t594 = t405 * t415;
t593 = t405 * t420;
t592 = t408 * qJD(1) ^ 2;
t588 = t415 * t421;
t586 = t417 * t421;
t584 = t418 * t422;
t579 = pkin(5) * t452 + t577;
t400 = pkin(4) + t641;
t575 = -t254 * t400 - t255 * t414;
t574 = -t258 * t400 - t259 * t414;
t571 = -t310 * t400 - t311 * t414;
t570 = -t332 * t402 - t333 * t422;
t569 = -t334 * t402 - t335 * t422;
t567 = t659 * pkin(1) + pkin(8) * t590;
t409 = t418 ^ 2;
t410 = t421 ^ 2;
t566 = t409 - t410;
t562 = qJD(2) * t418;
t561 = qJD(2) * t421;
t557 = qJD(5) * t689;
t554 = qJD(2) - t389;
t544 = t657 * pkin(3);
t538 = t421 * t592;
t377 = t412 * t588;
t535 = t417 * t590;
t525 = t658 * t315;
t522 = t412 * t562;
t521 = t412 * t561;
t516 = pkin(1) * t681;
t512 = -pkin(1) * t419 + pkin(8) * t531;
t509 = qJDD(4) - t547;
t73 = -t125 * t415 + t420 * t144;
t506 = -t265 * t420 + t234;
t186 = t420 * t249 - t282 * t415;
t281 = -t657 * t374 - t375 * t416;
t500 = t418 * t538;
t378 = t417 * t531;
t401 = -t544 - pkin(4);
t494 = t659 * t658;
t489 = t418 * t514;
t488 = t271 * pkin(3);
t487 = -t106 + t703;
t483 = pkin(4) * t405 + pkin(11) * t404;
t482 = -g(1) * t684 - g(2) * t205;
t206 = t259 * t420 + t600;
t481 = g(1) * t683 - g(2) * t206;
t480 = -g(1) * t254 + g(2) * t258;
t479 = g(1) * t332 - g(2) * t334;
t478 = g(1) * t335 + g(2) * t333;
t126 = t176 * t657 - t416 * t189;
t477 = t333 * t658 - t378;
t474 = t415 * t59 + t420 * t58;
t472 = pkin(3) * t535 - t334 * t422 + t335 * t402 + t567;
t471 = -t110 * t399 + t694;
t470 = t400 * t405 - t404 * t414;
t464 = g(1) * t659 + g(2) * t419;
t124 = pkin(4) * t589 - t126;
t208 = t236 * t415 + t536;
t459 = pkin(3) * t378 + t332 * t422 - t333 * t402 + t512;
t323 = t412 * t462;
t158 = -qJD(3) * t224 + t658 * t323 - t417 * t325;
t268 = qJD(3) * t690 + t521 * t658;
t134 = pkin(3) * t522 - t268 * pkin(10) + t158;
t157 = -t313 * t560 + t314 * t518 + t417 * t323 + t658 * t325;
t267 = qJD(3) * t330 + t417 * t521;
t141 = -pkin(10) * t267 + t157;
t50 = t416 * t134 + t657 * t141 + t176 * t517 - t189 * t559;
t47 = pkin(11) * t522 + t50;
t149 = t416 * t267 - t268 * t657 + t330 * t559 - t517 * t690;
t150 = qJD(4) * t236 + t267 * t657 + t416 * t268;
t218 = pkin(3) * t267 + t326;
t83 = pkin(4) * t150 + pkin(11) * t149 + t218;
t11 = -t125 * t556 + t144 * t555 + t415 * t83 + t420 * t47;
t51 = t134 * t657 - t416 * t141 - t176 * t559 - t189 * t517;
t456 = -g(1) * (t334 * t594 + t335 * t420) - g(2) * (t332 * t594 + t333 * t420) - (-t405 * t588 + t418 * t420) * t642;
t455 = -g(1) * (-t334 * t593 + t599) - g(2) * (-t332 * t593 + t602) - (t405 * t582 + t415 * t418) * t642;
t451 = -t343 * t556 - t506;
t449 = -t417 * t315 + t368 * t518;
t444 = -t24 + t454;
t442 = -g(3) * t591 - t478;
t441 = -t412 * t494 - t601;
t438 = -t222 - t443;
t436 = t441 * pkin(3);
t435 = t469 - t518;
t434 = g(1) * t206 + g(2) * t683 - g(3) * (-t311 * t420 + t377) - t5;
t12 = -t74 * qJD(5) - t415 * t47 + t420 * t83;
t48 = -pkin(4) * t522 - t51;
t429 = -t457 * t658 + t442;
t428 = t430 * t658;
t427 = t6 + t669;
t373 = pkin(11) * t420 + t406;
t372 = t414 * t415;
t364 = t401 - t641;
t341 = t406 + t595;
t340 = t581 * t415;
t302 = t310 * pkin(4);
t272 = t335 * t658 + t535;
t251 = t258 * pkin(4);
t250 = t254 * pkin(4);
t232 = pkin(5) * t597 + t281;
t209 = t236 * t420 - t377;
t178 = t179 ^ 2;
t164 = -qJ(6) * t597 + t187;
t153 = -pkin(5) * t450 - t343 * t406 + t186;
t113 = -qJD(5) * t377 - t149 * t415 + t236 * t555 - t420 * t522;
t112 = qJD(5) * t208 + t420 * t149 - t415 * t522;
t98 = t208 * pkin(5) + t124;
t95 = -t178 + t660;
t62 = -qJ(6) * t208 + t74;
t60 = -t110 * t450 + t572 * t689;
t56 = pkin(5) * t235 - qJ(6) * t209 + t73;
t55 = t110 * t235 + t150 * t689;
t54 = t618 - t77;
t53 = -t76 + t621;
t36 = t620 * t689 - t72;
t35 = t179 * t707 - t72;
t31 = t113 * t179 + t208 * t77;
t30 = -t112 * t181 - t209 * t76;
t29 = t179 * t452 + t597 * t77;
t28 = t181 * t451 - t596 * t76;
t27 = t113 * pkin(5) + t48;
t20 = -t107 * t343 - t179 * t572 + t450 * t77 - t452 * t689;
t19 = t108 * t343 + t181 * t572 + t450 * t76 + t451 * t689;
t17 = -t110 * t208 - t113 * t689 - t150 * t179 - t235 * t77;
t16 = t110 * t209 - t112 * t689 + t150 * t181 - t235 * t76;
t10 = t112 * t179 - t113 * t181 + t208 * t76 - t209 * t77;
t9 = (t233 - t608) * t181 + t506 * t179 + (t70 - t72 + (-t181 * t420 + t620) * qJD(5)) * t343;
t8 = -qJ(6) * t113 - qJD(6) * t208 + t11;
t7 = pkin(5) * t150 + qJ(6) * t112 - qJD(6) * t209 + t12;
t2 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t419 - g(2) * t659, t464, 0, 0 (qJDD(1) * t409 + 0.2e1 * t489) * t408 (t418 * t549 - t552 * t566) * t681 (t389 * t561 + t418 * qJDD(2) + (t514 + 0.2e1 * t550) * t413) * t412 (qJDD(1) * t410 - 0.2e1 * t489) * t408 (-t389 * t562 + t421 * qJDD(2) + (-t515 + 0.2e1 * t549) * t413) * t412, t495 * t413, -t326 * t389 + t337 * t495 + t241 * t413 + g(1) * t333 - g(2) * t335 + (-t515 + t549) * t516, -t240 * t413 - t325 * t389 - t568 * t495 - t712 * t516 - t479 ((-qJD(2) * t321 + t568 * qJDD(1) + t240) * t421 + (-qJD(2) * t324 - t337 * qJDD(1) - t241) * t418 - t464) * t412, t408 * qJDD(1) * pkin(1) ^ 2 - g(1) * t512 - g(2) * t567 + t240 * t568 + t241 * t337 - t321 * t326 + t324 * t325, -t199 * t330 + t268 * t301, -t199 * t690 - t301 * t267 + t268 * t300 - t330 * t430, -t268 * t368 + t315 * t330 + (t199 * t421 + t301 * t562) * t412, -t300 * t267 - t430 * t690, t267 * t368 + t690 * t315 + (t300 * t562 + t421 * t430) * t412 (-t315 * t421 - t368 * t562) * t412, -t158 * t368 + t223 * t315 - t326 * t300 + t312 * t430 - t222 * t690 + t275 * t267 + g(1) * t477 - g(2) * t272 + (-t119 * t421 + t195 * t562) * t412, -g(1) * t601 - g(2) * t271 + t157 * t368 - t312 * t199 + t222 * t330 - t224 * t315 + t275 * t268 + t326 * t301 + (-g(1) * t494 - t196 * t562 - t421 * t457) * t412, -t119 * t330 + t157 * t300 - t158 * t301 - t195 * t268 - t196 * t267 + t223 * t199 - t224 * t430 - t457 * t690 + t479, -t457 * t224 + t196 * t157 + t119 * t223 + t195 * t158 + t222 * t312 + t275 * t326 - g(1) * (-pkin(2) * t333 - pkin(9) * t332 + t512) - g(2) * (pkin(2) * t335 + pkin(9) * t334 + t567) -t149 * t461 - t236 * t425, -t236 * t114 + t149 * t213 - t150 * t461 + t235 * t425, -t149 * t548 + t236 * t509 + (t425 * t421 + t461 * t562 + (t149 * t421 + t236 * t562) * qJD(1)) * t412, t114 * t235 + t150 * t213, -t150 * t548 - t235 * t509 + (-t213 * t562 + t114 * t421 + (t150 * t421 - t235 * t562) * qJD(1)) * t412 (-t509 * t421 + (-0.2e1 * t523 + t548) * t562) * t412, t51 * t548 + t126 * t509 + t218 * t213 + t244 * t114 + t151 * t235 + t217 * t150 + g(1) * t255 - g(2) * t259 + (t105 * t562 - t26 * t421 + (t126 * t562 - t421 * t51) * qJD(1)) * t412, -t50 * t548 - t127 * t509 + t218 * t461 - t244 * t425 + t151 * t236 - t217 * t149 + (-t106 * t562 + t25 * t421 + (-t127 * t562 + t421 * t50) * qJD(1)) * t412 + t480, t105 * t149 - t106 * t150 - t127 * t114 + t126 * t425 - t50 * t213 - t25 * t235 - t26 * t236 - t461 * t51 + t479, -g(1) * t459 - g(2) * t472 + t105 * t51 + t106 * t50 + t26 * t126 + t25 * t127 + t151 * t244 + t217 * t218, t30, t10, t16, t31, t17, t55, t102 * t113 + t110 * t73 + t12 * t689 + t124 * t77 + t150 * t58 + t179 * t48 + t208 * t24 + t235 * t6 + t481, -t102 * t112 - t11 * t689 - t110 * t74 - t124 * t76 - t150 * t59 + t181 * t48 + t209 * t24 - t235 * t5 + t482, -t11 * t179 + t112 * t58 - t113 * t59 - t12 * t181 - t208 * t5 - t209 * t6 + t73 * t76 - t74 * t77 - t480, t5 * t74 + t59 * t11 + t6 * t73 + t58 * t12 + t24 * t124 + t102 * t48 - g(1) * (-pkin(4) * t255 - pkin(11) * t254 + t459) - g(2) * (pkin(4) * t259 + pkin(11) * t258 + t472) t30, t10, t16, t31, t17, t55, t1 * t235 + t110 * t56 + t113 * t84 + t150 * t32 + t179 * t27 + t18 * t208 + t689 * t7 + t77 * t98 + t481, -t110 * t62 - t112 * t84 - t150 * t45 + t18 * t209 + t181 * t27 - t235 * t3 - t689 * t8 - t76 * t98 + t482, -t1 * t209 + t112 * t32 - t113 * t45 - t179 * t8 - t181 * t7 - t208 * t3 + t56 * t76 - t62 * t77 - t480, t3 * t62 + t45 * t8 + t1 * t56 + t32 * t7 + t18 * t98 + t84 * t27 - g(1) * (-pkin(5) * t604 + t254 * t414 - t255 * t400 + t459) - g(2) * (pkin(5) * t600 - t258 * t414 + t259 * t400 + t472); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t500, t566 * t592 (t554 * t563 + t550) * t412, t500, -t524 * t554 + t386, t495, t324 * t389 + t592 * t656 + t241 - t443, pkin(1) * t538 + t321 * t389 + (pkin(8) * t552 + g(3)) * t591 + t478 - t532, 0, 0, -t199 * t417 - t301 * t435, -t199 * t658 - t435 * t300 + (-t430 + t605) * t417 (-t301 * t418 + t368 * t528) * t565 - t449, t417 * t607 - t428, t368 * t560 + t525 + (-t300 * t418 - t368 * t586) * t565, t368 * t524, -pkin(2) * t430 + t275 * t560 + t230 * t368 + t324 * t300 + t449 * pkin(9) + (-g(3) * t528 + (-t195 * t418 - t275 * t586) * qJD(1)) * t412 + (-t222 + t671) * t658, -pkin(9) * t525 + t275 * t518 + pkin(2) * t199 - t231 * t368 - t324 * t301 + (t196 * t418 - t275 * t528) * t565 + (-pkin(9) * qJD(3) * t368 - t438) * t417, t230 * t301 - t231 * t300 + t435 * t195 + (t301 * t518 - t428) * pkin(9) + ((-qJD(3) * t300 - t199) * pkin(9) + t672) * t417 + t429, -t195 * t230 - t196 * t231 - t275 * t324 + t438 * pkin(2) + (-t119 * t417 + (-t195 * t658 - t196 * t417) * qJD(3) + t429) * pkin(9), -t343 * t425 - t461 * t573, -t343 * t114 + t213 * t573 - t425 * t450 - t461 * t572, t343 * t440 - t461 * t524 + t573 * t463, -t114 * t450 + t213 * t572, t213 * t524 + t440 * t450 + t463 * t572, t463 * t524, -t105 * t524 - t402 * t114 - t151 * t450 + t213 * t486 + t217 * t572 - t281 * t440 - t405 * t443 + t576 * t463, t106 * t524 + t151 * t343 - t217 * t573 - t282 * t440 + t402 * t425 + t461 * t486 + t578 * t463 + t437, t105 * t573 - t106 * t572 - t282 * t114 - t213 * t578 + t25 * t450 - t26 * t343 - t281 * t425 + t461 * t576 + t442, t25 * t282 - t26 * t281 - t151 * t402 - g(1) * t569 - g(2) * t570 - g(3) * (-t412 * t584 + t345) + t486 * t217 + t578 * t106 - t576 * t105, t28, t9, t19, t29, t20, t60, t102 * t452 + t110 * t186 + t179 * t577 + t24 * t597 + t281 * t77 - t450 * t6 + t572 * t58 + t635 * t689 + t455, t102 * t451 - t110 * t187 + t181 * t577 + t24 * t596 - t281 * t76 + t450 * t5 - t572 * t59 - t636 * t689 + t456, t186 * t76 - t187 * t77 + t233 * t59 + t234 * t58 - t474 * t265 - t635 * t181 - t636 * t179 - t437 + (-t415 * t5 - t420 * t6 + (-t420 * t59 + t628) * qJD(5)) * t343, t5 * t187 + t6 * t186 + t24 * t281 - g(1) * (-t334 * t483 + t569) - g(2) * (-t332 * t483 + t570) - t643 + t636 * t59 + t635 * t58 - (t421 * t483 - t584) * t642 + t577 * t102, t28, t9, t19, t29, t20, t60, -t1 * t450 + t110 * t153 + t179 * t579 + t18 * t597 + t232 * t77 + t32 * t572 + t452 * t84 + t638 * t689 + t455, -t110 * t164 + t18 * t596 + t181 * t579 - t232 * t76 + t3 * t450 - t45 * t572 + t451 * t84 - t637 * t689 + t456, t153 * t76 - t164 * t77 + t233 * t45 + t234 * t32 - (t415 * t45 + t629) * t265 - t638 * t181 - t637 * t179 - t437 + (-t1 * t420 - t3 * t415 + (t32 * t415 - t420 * t45) * qJD(5)) * t343, t3 * t164 + t1 * t153 + t18 * t232 - g(1) * (pkin(5) * t599 - t334 * t470 + t569) - g(2) * (pkin(5) * t602 - t332 * t470 + t570) - t643 + t579 * t84 + t637 * t45 + t638 * t32 - (t470 * t421 + (pkin(5) * t415 - t422) * t418) * t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t606, -t300 ^ 2 + t301 ^ 2, -t199 + t607, t606, -t430 - t605, t315, -g(1) * t271 - g(2) * t441 - g(3) * t690 - t275 * t301 - t672, g(1) * t272 + g(2) * t477 + g(3) * t330 - t195 * t368 - t275 * t300 + t457, 0, 0, t609, t688, t685, -t609, t661, t440, -t116 * t463 + (-t301 * t213 + t440 * t657 + t463 * t559) * pkin(3) + t662, -t117 * t463 + (-t301 * t461 - t416 * t440 + t463 * t517) * pkin(3) + t687, -t105 * t213 + t106 * t461 - t116 * t461 + t117 * t213 + (-t416 * t114 + t657 * t426 + (t416 * t461 + (-t213 - t674) * t657) * qJD(4)) * pkin(3), -g(1) * t488 - g(2) * t436 - g(3) * t466 - t217 * t654 + t25 * t653 + t26 * t544 + (-t117 + t502) * t106 + t673 * t105, t698, t711, t696, t36, t709, -t675, -t64 * t689 + t401 * t77 - t673 * t179 + (-t502 * t689 + t471) * t415 + (-t399 * t557 + t444) * t420 + t668, -t181 * t673 - t401 * t76 + t471 * t420 - t670 * t689 + t665, t65 * t179 + t64 * t181 + (-t179 * t502 - t213 * t58 - t399 * t77 + (t181 * t399 - t58) * qJD(5)) * t420 + (t181 * t502 - t213 * t59 - t399 * t76 - t6 + (t179 * t399 - t59) * qJD(5)) * t415 + t446, t5 * t595 - t502 * t628 + t24 * t401 - t58 * t64 - g(1) * (pkin(11) * t259 - t251 + t488) - g(2) * (t255 * pkin(11) - t250 + t436) - g(3) * (pkin(11) * t311 - t302 + t466) + (-t555 * t58 - t640) * t399 - t673 * t102 + t670 * t59, t698, t711, t696, t36, t709, -t675, t110 * t340 + t179 * t622 + t364 * t77 + t625 * t689 + t701, -t110 * t341 + t181 * t622 - t364 * t76 - t678 * t689 + t702, -t678 * t179 - t625 * t181 + t340 * t76 - t341 * t77 + t710, t3 * t341 + t1 * t340 + t18 * t364 - g(1) * (t488 + t574) - g(2) * (t436 + t575) - g(3) * (t466 + t571) + t622 * t84 + t678 * t45 + t625 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t609, t688, t685, -t609, t661, t440, -t106 * t463 + t662, -t105 * t463 + t687, 0, 0, t698, t711, t696, t35, t709, -t675, -pkin(4) * t77 - t106 * t179 - t689 * t67 + (-pkin(11) * t110 + t694) * t415 + (-pkin(11) * t557 + t444) * t420 + t668, t102 * t692 + pkin(4) * t76 - t106 * t181 + t689 * t68 + (t556 * t689 - t108) * pkin(11) + t665, t179 * t68 + t181 * t67 + (-t631 + (-t77 + t558) * pkin(11)) * t420 + (-t6 - t630 + (qJD(5) * t179 - t76) * pkin(11)) * t415 + t446, -t24 * pkin(4) + g(1) * t251 + g(2) * t250 + g(3) * t302 - t102 * t106 - t58 * t67 - t59 * t68 + (-qJD(5) * t474 + t446 - t640) * pkin(11), t698, t711, t696, t35, t709, -t675, t110 * t372 + t179 * t487 - t400 * t77 + t623 * t689 + t701, -t110 * t373 + t181 * t487 + t400 * t76 - t624 * t689 + t702, -t624 * t179 - t623 * t181 + t372 * t76 - t373 * t77 + t710, -g(1) * t574 - g(2) * t575 - g(3) * t571 + t1 * t372 - t18 * t400 + t3 * t373 + t32 * t623 + t45 * t624 + t487 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, t95, t53, -t619, t54, t110, -t102 * t181 + t427 + t630, t102 * t179 + t434 + t631, 0, 0, t619, t95, t53, -t619, t54, t110, 0.2e1 * t652 + t634 + t632 + (-t510 - t84) * t181 + t427, -pkin(5) * t660 + t633 + t689 * t44 + (qJD(6) + t84) * t179 + t434, pkin(5) * t76 - t179 * t639, t639 * t45 + (-t84 * t181 + t1 + t669) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77 + t618, -t76 - t621, -t178 - t660, t45 * t179 + t32 * t181 - t445;];
tau_reg  = t2;
