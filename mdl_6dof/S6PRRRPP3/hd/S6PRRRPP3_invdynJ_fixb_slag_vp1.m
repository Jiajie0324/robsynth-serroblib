% Calculate vector of inverse dynamics joint torques for
% S6PRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRPP3_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRPP3_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:54:38
% EndTime: 2019-03-08 22:58:28
% DurationCPUTime: 228.10s
% Computational Cost: add. (80140->1897), mult. (219942->2548), div. (0->0), fcn. (256623->10), ass. (0->703)
t1308 = Icges(7,4) + Icges(6,5);
t1311 = -Icges(5,6) + t1308;
t1310 = Icges(6,6) - Icges(7,6);
t1290 = Icges(6,4) - Icges(7,5);
t1298 = Icges(5,5) - t1290;
t1254 = Icges(6,1) + Icges(7,1);
t1309 = Icges(5,3) + t1254;
t1307 = Icges(6,2) + Icges(7,3);
t1306 = Icges(7,2) + Icges(6,3);
t1095 = cos(qJ(4));
t790 = sin(pkin(6));
t793 = sin(qJ(3));
t1059 = t790 * t793;
t1096 = cos(qJ(3));
t789 = sin(pkin(10));
t791 = cos(pkin(10));
t795 = cos(qJ(2));
t1094 = cos(pkin(6));
t794 = sin(qJ(2));
t941 = t794 * t1094;
t749 = t789 * t795 + t791 * t941;
t662 = -t791 * t1059 + t749 * t1096;
t792 = sin(qJ(4));
t940 = t795 * t1094;
t847 = -t789 * t794 + t791 * t940;
t520 = t1095 * t662 - t792 * t847;
t1296 = t1310 * t520;
t519 = t1095 * t847 + t662 * t792;
t958 = t790 * t1096;
t863 = -t749 * t793 - t791 * t958;
t1286 = t1306 * t519 - t1308 * t863 - t1296;
t1087 = Icges(5,4) * t520;
t215 = -Icges(5,2) * t519 - Icges(5,6) * t863 + t1087;
t1305 = -t215 + t1286;
t905 = t789 * t941;
t751 = t791 * t795 - t905;
t664 = t1059 * t789 + t1096 * t751;
t851 = -t789 * t940 - t791 * t794;
t522 = t1095 * t664 - t792 * t851;
t1295 = t1310 * t522;
t521 = t1095 * t851 + t664 * t792;
t864 = -t751 * t793 + t789 * t958;
t1285 = t1306 * t521 - t1308 * t864 - t1295;
t1086 = Icges(5,4) * t522;
t216 = -Icges(5,2) * t521 - Icges(5,6) * t864 + t1086;
t1304 = -t216 + t1285;
t1294 = t1310 * t519;
t1288 = t1290 * t863 + t1307 * t520 - t1294;
t502 = Icges(5,4) * t519;
t221 = Icges(5,1) * t520 - Icges(5,5) * t863 - t502;
t1303 = t221 + t1288;
t1293 = t1310 * t521;
t1287 = t1290 * t864 + t1307 * t522 - t1293;
t503 = Icges(5,4) * t521;
t222 = Icges(5,1) * t522 - Icges(5,5) * t864 - t503;
t1302 = t222 + t1287;
t753 = t1094 * t793 + t794 * t958;
t1057 = t790 * t795;
t980 = t792 * t1057;
t668 = t1095 * t753 - t980;
t1292 = t1310 * t668;
t957 = t790 * t1095;
t908 = t795 * t957;
t667 = t753 * t792 + t908;
t1058 = t790 * t794;
t752 = t1058 * t793 - t1094 * t1096;
t1281 = t1306 * t667 + t1308 * t752 - t1292;
t1085 = Icges(5,4) * t668;
t390 = -Icges(5,2) * t667 + Icges(5,6) * t752 + t1085;
t1301 = -t390 + t1281;
t1291 = t1310 * t667;
t1282 = -t1290 * t752 + t1307 * t668 - t1291;
t655 = Icges(5,4) * t667;
t393 = Icges(5,1) * t668 + Icges(5,5) * t752 - t655;
t1300 = t393 + t1282;
t1237 = Icges(5,1) + t1307;
t1279 = Icges(5,4) + t1310;
t1232 = Icges(5,2) + t1306;
t1284 = -t1254 * t863 - t1290 * t520 + t1308 * t519;
t1283 = -t1254 * t864 - t1290 * t522 + t1308 * t521;
t1280 = t1254 * t752 - t1290 * t668 + t1308 * t667;
t722 = t847 * qJD(2);
t513 = qJD(3) * t863 + t1096 * t722;
t723 = t749 * qJD(2);
t241 = qJD(4) * t520 - t1095 * t723 + t513 * t792;
t1001 = qJD(4) * t792;
t948 = qJD(4) * t1095;
t242 = -t1001 * t662 + t1095 * t513 + t723 * t792 - t847 * t948;
t512 = qJD(3) * t662 + t722 * t793;
t1278 = t1237 * t242 - t1279 * t241 + t1298 * t512;
t724 = t851 * qJD(2);
t515 = qJD(3) * t864 + t1096 * t724;
t1009 = qJD(2) * t791;
t725 = -qJD(2) * t905 + t1009 * t795;
t243 = qJD(4) * t522 - t1095 * t725 + t515 * t792;
t244 = -t1001 * t664 + t1095 * t515 + t725 * t792 - t851 * t948;
t514 = qJD(3) * t664 + t724 * t793;
t1277 = t1237 * t244 - t1279 * t243 + t1298 * t514;
t1276 = t1232 * t241 - t1279 * t242 + t1311 * t512;
t1275 = t1232 * t243 - t1279 * t244 + t1311 * t514;
t1274 = t1298 * t242 + t1309 * t512 + t1311 * t241;
t1273 = t1298 * t244 + t1309 * t514 + t1311 * t243;
t909 = t795 * t958;
t666 = qJD(2) * t909 - qJD(3) * t752;
t910 = t794 * t957;
t407 = -qJD(2) * t910 - qJD(4) * t980 + t666 * t792 + t753 * t948;
t1008 = qJD(2) * t794;
t954 = t790 * t1008;
t408 = -qJD(4) * t908 - t1001 * t753 + t1095 * t666 + t792 * t954;
t981 = t793 * t1057;
t665 = qJD(2) * t981 + qJD(3) * t753;
t1272 = t1237 * t408 - t1279 * t407 + t1298 * t665;
t1271 = t1232 * t407 - t1279 * t408 + t1311 * t665;
t1270 = t1298 * t408 + t1309 * t665 + t1311 * t407;
t209 = Icges(5,5) * t520 - Icges(5,6) * t519 - Icges(5,3) * t863;
t1179 = t209 + t1284;
t210 = Icges(5,5) * t522 - Icges(5,6) * t521 - Icges(5,3) * t864;
t1178 = t210 + t1283;
t387 = Icges(5,5) * t668 - Icges(5,6) * t667 + Icges(5,3) * t752;
t1165 = t387 + t1280;
t1221 = -t1284 * t863 + t1286 * t519 + t1288 * t520;
t85 = -t209 * t863 - t215 * t519 + t221 * t520;
t1263 = t85 + t1221;
t1220 = -t1283 * t863 + t1285 * t519 + t1287 * t520;
t86 = -t210 * t863 - t216 * t519 + t222 * t520;
t1262 = t86 + t1220;
t1219 = -t1284 * t864 + t1286 * t521 + t1288 * t522;
t87 = -t209 * t864 - t215 * t521 + t221 * t522;
t1261 = t87 + t1219;
t1218 = -t1283 * t864 + t1285 * t521 + t1287 * t522;
t88 = -t210 * t864 - t216 * t521 + t222 * t522;
t1260 = t88 + t1218;
t1217 = t1284 * t752 + t1286 * t667 + t1288 * t668;
t97 = t209 * t752 - t215 * t667 + t221 * t668;
t1259 = t97 + t1217;
t1216 = t1283 * t752 + t1285 * t667 + t1287 * t668;
t98 = t210 * t752 - t216 * t667 + t222 * t668;
t1258 = t98 + t1216;
t107 = -t387 * t863 - t390 * t519 + t393 * t520;
t1214 = -t1280 * t863 + t1281 * t519 + t1282 * t520;
t1257 = t107 + t1214;
t108 = -t387 * t864 - t390 * t521 + t393 * t522;
t1213 = -t1280 * t864 + t1281 * t521 + t1282 * t522;
t1256 = t108 + t1213;
t1212 = t1280 * t752 + t1281 * t667 + t1282 * t668;
t149 = t387 * t752 - t390 * t667 + t393 * t668;
t1255 = t149 + t1212;
t1247 = t1095 * t1290 - t1308 * t792;
t1246 = t1179 * t512 - t1274 * t863 + t1276 * t519 + t1278 * t520 + t1303 * t242 + t1305 * t241;
t1203 = t1178 * t512 - t1273 * t863 + t1275 * t519 + t1277 * t520 + t1302 * t242 + t1304 * t241;
t1245 = t1179 * t514 - t1274 * t864 + t1276 * t521 + t1278 * t522 + t1303 * t244 + t1305 * t243;
t1201 = t1178 * t514 - t1273 * t864 + t1275 * t521 + t1277 * t522 + t1302 * t244 + t1304 * t243;
t1244 = t1179 * t665 + t1274 * t752 + t1276 * t667 + t1278 * t668 + t1303 * t408 + t1305 * t407;
t1199 = t1178 * t665 + t1273 * t752 + t1275 * t667 + t1277 * t668 + t1302 * t408 + t1304 * t407;
t1195 = t1165 * t512 - t1270 * t863 + t1271 * t519 + t1272 * t520 + t1300 * t242 + t1301 * t241;
t1194 = t1165 * t514 - t1270 * t864 + t1271 * t521 + t1272 * t522 + t1300 * t244 + t1301 * t243;
t1193 = t1165 * t665 + t1270 * t752 + t1271 * t667 + t1272 * t668 + t1300 * t408 + t1301 * t407;
t1228 = -t1095 * t1237 + t1279 * t792;
t1227 = t1095 * t1279 - t1232 * t792;
t1222 = rSges(7,1) + pkin(5);
t1010 = qJD(2) * t790;
t781 = t789 * t1010;
t673 = -qJD(3) * t851 + t781;
t476 = -qJD(4) * t864 + t673;
t955 = t790 * t1009;
t674 = -qJD(3) * t847 - t955;
t477 = -qJD(4) * t863 + t674;
t788 = qJD(2) * t1094;
t760 = -qJD(3) * t1057 + t788;
t637 = qJD(4) * t752 + t760;
t1196 = t1255 * t637 + t1258 * t476 + t1259 * t477;
t1225 = -t1196 / 0.2e1;
t1197 = t1256 * t637 + t1260 * t476 + t1261 * t477;
t1224 = -t1197 / 0.2e1;
t1198 = t1257 * t637 + t1262 * t476 + t1263 * t477;
t1223 = -t1198 / 0.2e1;
t1215 = rSges(7,3) + qJ(6);
t1211 = -t1095 * t1282 + t1247 * t752 + t1254 * t753 - t1281 * t792;
t1210 = -t1095 * t1287 - t1247 * t864 + t1254 * t664 - t1285 * t792;
t1209 = -t1095 * t1288 - t1247 * t863 + t1254 * t662 - t1286 * t792;
t140 = rSges(6,1) * t514 - rSges(6,2) * t244 + rSges(6,3) * t243;
t496 = qJD(5) * t521;
t142 = pkin(4) * t244 + qJ(5) * t243 + t496;
t1050 = -t140 - t142;
t276 = pkin(3) * t515 + pkin(9) * t514;
t1208 = -t276 + t1050;
t1040 = rSges(7,2) * t519 + t1215 * t520 - t1222 * t863;
t301 = pkin(4) * t520 + qJ(5) * t519;
t971 = -t301 - t1040;
t1038 = rSges(7,2) * t521 + t1215 * t522 - t1222 * t864;
t306 = pkin(4) * t522 + qJ(5) * t521;
t970 = -t306 - t1038;
t227 = -rSges(6,1) * t864 - rSges(6,2) * t522 + rSges(6,3) * t521;
t1037 = -t227 - t306;
t440 = pkin(3) * t664 - pkin(9) * t864;
t1144 = -t440 + t1037;
t1027 = rSges(7,2) * t667 + t1215 * t668 + t1222 * t752;
t454 = pkin(4) * t668 + qJ(5) * t667;
t967 = -t454 - t1027;
t396 = rSges(6,1) * t752 - rSges(6,2) * t668 + rSges(6,3) * t667;
t1026 = -t396 - t454;
t616 = pkin(3) * t753 + pkin(9) * t752;
t966 = -t616 + t1026;
t988 = qJDD(2) * t790;
t780 = t789 * t988;
t529 = qJD(3) * t725 - qJDD(3) * t851 + t780;
t239 = qJD(4) * t514 - qJDD(4) * t864 + t529;
t946 = t791 * t988;
t530 = qJD(3) * t723 - qJDD(3) * t847 - t946;
t240 = qJD(4) * t512 - qJDD(4) * t863 + t530;
t787 = qJDD(2) * t1094;
t1005 = qJD(3) * t794;
t953 = t790 * t1005;
t676 = qJD(2) * t953 - qJDD(3) * t1057 + t787;
t409 = qJD(4) * t665 + qJDD(4) * t752 + t676;
t1207 = t1195 * t637 + t1203 * t476 + t1246 * t477 + t1257 * t409 + t1262 * t239 + t1263 * t240;
t1206 = t1194 * t637 + t1201 * t476 + t1245 * t477 + t1256 * t409 + t1260 * t239 + t1261 * t240;
t1205 = t1193 * t637 + t1199 * t476 + t1244 * t477 + t1255 * t409 + t1258 * t239 + t1259 * t240;
t1064 = t847 * t793;
t956 = t792 * t1096;
t581 = -t1095 * t749 + t847 * t956;
t907 = t1096 * t1095;
t582 = t749 * t792 + t847 * t907;
t1177 = t1064 * t1298 + t1237 * t582 - t1279 * t581;
t1063 = t851 * t793;
t583 = -t1095 * t751 + t851 * t956;
t584 = t751 * t792 + t851 * t907;
t1176 = t1063 * t1298 + t1237 * t584 - t1279 * t583;
t1175 = t1064 * t1311 + t1232 * t581 - t1279 * t582;
t1174 = t1063 * t1311 + t1232 * t583 - t1279 * t584;
t1173 = t1064 * t1309 + t1298 * t582 + t1311 * t581;
t1172 = t1063 * t1309 + t1298 * t584 + t1311 * t583;
t1171 = -t1227 * t863 + t1311 * t662;
t1170 = -t1227 * t864 + t1311 * t664;
t1169 = -t1228 * t863 + t1298 * t662;
t1168 = -t1228 * t864 + t1298 * t664;
t1164 = t1227 * t752 + t1311 * t753;
t1163 = t1228 * t752 + t1298 * t753;
t686 = t792 * t909 - t910;
t687 = (t792 * t794 + t795 * t907) * t790;
t1162 = t1237 * t687 - t1279 * t686 + t1298 * t981;
t1161 = t1232 * t686 - t1279 * t687 + t1311 * t981;
t1160 = t1298 * t687 + t1309 * t981 + t1311 * t686;
t1159 = (t1232 * t668 + t1291 - t1300 + t655) * t637 + (t1232 * t520 + t1294 - t1303 + t502) * t477 + (t1232 * t522 + t1293 - t1302 + t503) * t476;
t1158 = (-t1237 * t667 - t1085 - t1292 + t1301) * t637 + (-t1237 * t519 - t1087 - t1296 + t1305) * t477 + (-t1237 * t521 - t1086 - t1295 + t1304) * t476;
t1157 = (-t1298 * t667 + t1311 * t668) * t637 + (-t1298 * t519 + t1311 * t520) * t477 + (-t1298 * t521 + t1311 * t522) * t476;
t375 = Icges(4,5) * t662 + Icges(4,6) * t863 - Icges(4,3) * t847;
t1090 = Icges(4,4) * t662;
t377 = Icges(4,2) * t863 - Icges(4,6) * t847 + t1090;
t638 = Icges(4,4) * t863;
t379 = Icges(4,1) * t662 - Icges(4,5) * t847 + t638;
t143 = -t375 * t847 + t377 * t863 + t379 * t662;
t376 = Icges(4,5) * t664 + Icges(4,6) * t864 - Icges(4,3) * t851;
t1089 = Icges(4,4) * t664;
t378 = Icges(4,2) * t864 - Icges(4,6) * t851 + t1089;
t639 = Icges(4,4) * t864;
t380 = Icges(4,1) * t664 - Icges(4,5) * t851 + t639;
t144 = -t376 * t847 + t378 * t863 + t380 * t662;
t569 = Icges(4,5) * t753 - Icges(4,6) * t752 - Icges(4,3) * t1057;
t1088 = Icges(4,4) * t753;
t570 = -Icges(4,2) * t752 - Icges(4,6) * t1057 + t1088;
t742 = Icges(4,4) * t752;
t571 = Icges(4,1) * t753 - Icges(4,5) * t1057 - t742;
t169 = -t569 * t847 + t570 * t863 + t571 * t662;
t245 = Icges(4,5) * t513 - Icges(4,6) * t512 + Icges(4,3) * t723;
t247 = Icges(4,4) * t513 - Icges(4,2) * t512 + Icges(4,6) * t723;
t249 = Icges(4,1) * t513 - Icges(4,4) * t512 + Icges(4,5) * t723;
t64 = -t245 * t847 + t247 * t863 + t249 * t662 + t375 * t723 - t377 * t512 + t379 * t513;
t246 = Icges(4,5) * t515 - Icges(4,6) * t514 + Icges(4,3) * t725;
t248 = Icges(4,4) * t515 - Icges(4,2) * t514 + Icges(4,6) * t725;
t250 = Icges(4,1) * t515 - Icges(4,4) * t514 + Icges(4,5) * t725;
t65 = -t246 * t847 + t248 * t863 + t250 * t662 + t376 * t723 - t378 * t512 + t380 * t513;
t410 = Icges(4,5) * t666 - Icges(4,6) * t665 + Icges(4,3) * t954;
t411 = Icges(4,4) * t666 - Icges(4,2) * t665 + Icges(4,6) * t954;
t412 = Icges(4,1) * t666 - Icges(4,4) * t665 + Icges(4,5) * t954;
t89 = -t410 * t847 + t411 * t863 + t412 * t662 - t512 * t570 + t513 * t571 + t569 * t723;
t1156 = t143 * t530 + t144 * t529 + t169 * t676 + t64 * t674 + t65 * t673 + t760 * t89 + t1207;
t145 = -t375 * t851 + t377 * t864 + t379 * t664;
t146 = -t376 * t851 + t378 * t864 + t380 * t664;
t170 = -t569 * t851 + t570 * t864 + t571 * t664;
t66 = -t245 * t851 + t247 * t864 + t249 * t664 + t375 * t725 - t377 * t514 + t379 * t515;
t67 = -t246 * t851 + t248 * t864 + t250 * t664 + t376 * t725 - t378 * t514 + t380 * t515;
t90 = -t410 * t851 + t411 * t864 + t412 * t664 - t514 * t570 + t515 * t571 + t569 * t725;
t1155 = t145 * t530 + t529 * t146 + t170 * t676 + t66 * t674 + t673 * t67 + t760 * t90 + t1206;
t155 = -t1057 * t375 - t377 * t752 + t379 * t753;
t156 = -t1057 * t376 - t378 * t752 + t380 * t753;
t195 = -t1057 * t569 - t570 * t752 + t571 * t753;
t72 = -t247 * t752 + t249 * t753 - t377 * t665 + t379 * t666 + (t1008 * t375 - t245 * t795) * t790;
t73 = -t248 * t752 + t250 * t753 - t378 * t665 + t380 * t666 + (t1008 * t376 - t246 * t795) * t790;
t99 = -t411 * t752 + t412 * t753 - t570 * t665 + t571 * t666 + (t1008 * t569 - t410 * t795) * t790;
t1154 = t155 * t530 + t156 * t529 + t195 * t676 + t673 * t73 + t674 * t72 + t760 * t99 + t1205;
t438 = pkin(3) * t662 - pkin(9) * t863;
t1060 = t790 * t791;
t758 = (pkin(2) * t794 - pkin(8) * t795) * t790;
t608 = pkin(2) * t749 - pkin(8) * t847;
t938 = t1094 * t608;
t848 = -t1060 * t758 - t938;
t829 = t848 * qJD(2);
t812 = -t760 * t438 + t674 * t616 + t829;
t809 = t477 * t454 + t496 + t812;
t996 = qJD(6) * t522;
t57 = t1027 * t477 + t637 * t971 + t809 + t996;
t1153 = t1027 * t57;
t651 = qJD(5) * t667;
t610 = pkin(2) * t751 - pkin(8) * t851;
t949 = t608 * t781 + t610 * t955 + qJD(1);
t865 = t673 * t438 - t440 * t674 + t949;
t837 = t476 * t301 + t651 + t865;
t995 = qJD(6) * t668;
t49 = t1040 * t476 + t477 * t970 + t837 + t995;
t1152 = t1040 * t49;
t494 = qJD(5) * t519;
t882 = t610 * t788 - t758 * t781;
t828 = t760 * t440 - t616 * t673 + t882;
t825 = t637 * t306 + t494 + t828;
t997 = qJD(6) * t520;
t56 = t1038 * t637 + t476 * t967 + t825 + t997;
t1151 = t56 * t1038;
t1053 = rSges(7,2) * t241 + t1215 * t242 + t1222 * t512 + t997;
t1051 = rSges(7,2) * t243 + t1215 * t244 + t1222 * t514 + t996;
t299 = -t519 * pkin(4) + qJ(5) * t520;
t928 = t520 * rSges(7,2) - t1215 * t519;
t1150 = -t299 - t928;
t304 = -t521 * pkin(4) + qJ(5) * t522;
t927 = t522 * rSges(7,2) - t1215 * t521;
t1149 = -t304 - t927;
t1067 = t863 * t792;
t964 = t863 * t1095;
t1148 = rSges(7,2) * t1067 + t1215 * t964 + t1222 * t662;
t1066 = t864 * t792;
t963 = t864 * t1095;
t1147 = rSges(7,2) * t1066 + t1215 * t963 + t1222 * t664;
t452 = -t667 * pkin(4) + qJ(5) * t668;
t926 = t668 * rSges(7,2) - t1215 * t667;
t1146 = -t452 - t926;
t1062 = t752 * t792;
t959 = t752 * t1095;
t1145 = -rSges(7,2) * t1062 - t1215 * t959 + t1222 * t753;
t251 = rSges(4,1) * t513 - rSges(4,2) * t512 + rSges(4,3) * t723;
t252 = rSges(4,1) * t515 - rSges(4,2) * t514 + rSges(4,3) * t725;
t382 = rSges(4,1) * t662 + rSges(4,2) * t863 - rSges(4,3) * t847;
t383 = rSges(4,1) * t664 + rSges(4,2) * t864 - rSges(4,3) * t851;
t1143 = t251 * t673 - t252 * t674 + t382 * t529 - t383 * t530;
t876 = Icges(4,5) * t1096 - Icges(4,6) * t793;
t1142 = t673 * (-Icges(4,3) * t751 + t1096 * t380 - t378 * t793 - t851 * t876) + t674 * (-Icges(4,3) * t749 + t1096 * t379 - t377 * t793 - t847 * t876) + t760 * (t1096 * t571 - t570 * t793 - (Icges(4,3) * t794 + t795 * t876) * t790);
t141 = pkin(4) * t242 + qJ(5) * t241 + t494;
t102 = t476 * t141;
t163 = t239 * t301;
t406 = qJD(5) * t407;
t650 = qJDD(5) * t667;
t1065 = t674 * t276;
t1068 = t530 * t440;
t275 = pkin(3) * t513 + pkin(9) * t512;
t232 = t673 * t275;
t279 = t529 * t438;
t587 = pkin(2) * t722 + pkin(8) * t723;
t526 = t587 * t781;
t588 = pkin(2) * t724 + pkin(8) * t725;
t527 = t588 * t955;
t545 = t608 * t780;
t546 = t610 * t946;
t889 = qJDD(1) + t526 + t527 + t545 + t546;
t814 = -t1065 + t232 + t279 + t889 - t1068;
t808 = t102 + t163 + t406 + t650 + t814;
t975 = -t142 - t1051;
t987 = qJDD(6) * t668;
t998 = qJD(6) * t408;
t10 = t1040 * t239 + t1053 * t476 + t240 * t970 + t477 * t975 + t808 + t987 + t998;
t1141 = 0.2e1 * t10;
t1045 = rSges(7,2) * t407 + t1215 * t408 + t1222 * t665 + t995;
t182 = pkin(4) * t408 + qJ(5) * t407 + t651;
t450 = pkin(3) * t666 + pkin(9) * t665;
t739 = (pkin(2) * t795 + pkin(8) * t794) * t1010;
t939 = t1094 * t587;
t803 = (-t1060 * t739 - t939) * qJD(2) + t848 * qJDD(2);
t800 = -t760 * t275 - t676 * t438 + t674 * t450 + t530 * t616 + t803;
t797 = qJD(5) * t243 + qJDD(5) * t521 + t477 * t182 + t240 * t454 + t800;
t976 = -t141 - t1053;
t11 = qJD(6) * t244 + qJDD(6) * t522 + t1027 * t240 + t1045 * t477 + t409 * t971 + t637 * t976 + t797;
t1140 = 0.2e1 * t11;
t1061 = t789 * t790;
t826 = t588 * t788 + t610 * t787 + (-qJD(2) * t739 - qJDD(2) * t758) * t1061;
t805 = t760 * t276 + t676 * t440 - t673 * t450 - t529 * t616 + t826;
t802 = qJD(5) * t241 + qJDD(5) * t519 + t637 * t142 + t409 * t306 + t805;
t974 = -t182 - t1045;
t12 = qJD(6) * t242 + qJDD(6) * t520 + t1038 * t409 + t1051 * t637 + t239 * t967 + t476 * t974 + t802;
t1139 = 0.2e1 * t12;
t138 = rSges(6,1) * t512 - rSges(6,2) * t242 + rSges(6,3) * t241;
t225 = -rSges(6,1) * t863 - rSges(6,2) * t520 + rSges(6,3) * t519;
t13 = t1037 * t240 + t1050 * t477 + t138 * t476 + t225 * t239 + t808;
t1138 = 0.2e1 * t13;
t1039 = -t225 - t301;
t1052 = -t138 - t141;
t185 = rSges(6,1) * t665 - rSges(6,2) * t408 + rSges(6,3) * t407;
t18 = t1039 * t409 + t1052 * t637 + t477 * t185 + t240 * t396 + t797;
t1137 = 0.2e1 * t18;
t1136 = 0.2e1 * t49;
t1135 = 0.2e1 * t56;
t1134 = 0.2e1 * t57;
t61 = t1037 * t477 + t225 * t476 + t837;
t1133 = 0.2e1 * t61;
t68 = t1026 * t476 + t227 * t637 + t825;
t1132 = 0.2e1 * t68;
t69 = t1039 * t637 + t477 * t396 + t809;
t1131 = 0.2e1 * t69;
t1130 = m(5) / 0.2e1;
t1129 = m(6) / 0.2e1;
t1128 = m(7) / 0.2e1;
t1127 = t239 / 0.2e1;
t1126 = t240 / 0.2e1;
t1125 = t409 / 0.2e1;
t1124 = -t476 / 0.2e1;
t1123 = t476 / 0.2e1;
t1122 = -t477 / 0.2e1;
t1121 = t477 / 0.2e1;
t1118 = t529 / 0.2e1;
t1117 = t530 / 0.2e1;
t1114 = -t637 / 0.2e1;
t1113 = t637 / 0.2e1;
t1109 = -t673 / 0.2e1;
t1108 = t673 / 0.2e1;
t1107 = -t674 / 0.2e1;
t1106 = t674 / 0.2e1;
t1105 = t676 / 0.2e1;
t1098 = -t760 / 0.2e1;
t1097 = t760 / 0.2e1;
t1093 = Icges(3,4) * t749;
t1092 = Icges(3,4) * t751;
t1091 = Icges(3,4) * t794;
t1073 = t301 * t753;
t1072 = t306 * t662;
t1069 = t454 * t664;
t1056 = -t141 * t864 + t514 * t301;
t1055 = t752 * t142 + t665 * t306;
t136 = rSges(5,1) * t244 - rSges(5,2) * t243 + rSges(5,3) * t514;
t1054 = -t136 - t276;
t1049 = -t476 * t519 + t477 * t521 + t407;
t1048 = -t182 * t863 + t512 * t454;
t1047 = -t182 - t185;
t183 = rSges(5,1) * t408 - rSges(5,2) * t407 + rSges(5,3) * t665;
t1046 = -t183 - t450;
t1044 = t476 * t667 - t521 * t637 + t241;
t1043 = -t477 * t667 + t519 * t637 + t243;
t1042 = qJD(5) * t668 + t476 * t299;
t1041 = qJD(5) * t520 + t637 * t304;
t229 = rSges(5,1) * t522 - rSges(5,2) * t521 - rSges(5,3) * t864;
t1036 = -t229 - t440;
t1035 = -t275 * t851 + t725 * t438;
t394 = t851 * t438;
t1034 = -t301 * t851 - t394;
t1033 = qJD(5) * t522 + t477 * t452;
t414 = t440 * t954;
t1032 = t306 * t954 + t414;
t536 = t1094 * t588;
t1031 = t1094 * t276 + t536;
t298 = t519 * rSges(6,2) + t520 * rSges(6,3);
t1030 = -t298 - t299;
t303 = t521 * rSges(6,2) + t522 * rSges(6,3);
t1029 = -t303 - t304;
t1028 = t581 * rSges(7,2) + t1064 * t1222 + t1215 * t582;
t397 = rSges(5,1) * t668 - rSges(5,2) * t667 + rSges(5,3) * t752;
t1025 = -t397 - t616;
t1024 = t438 * t1057 - t616 * t847;
t597 = t1094 * t610;
t1023 = t1094 * t440 + t597;
t1022 = t583 * rSges(7,2) + t1063 * t1222 + t1215 * t584;
t451 = t667 * rSges(6,2) + t668 * rSges(6,3);
t1021 = -t451 - t452;
t1020 = t588 * t1060 + t587 * t1061;
t541 = Icges(3,2) * t847 - Icges(3,6) * t1060 + t1093;
t603 = Icges(3,1) * t847 - t1093;
t1019 = -t541 + t603;
t542 = Icges(3,2) * t851 + Icges(3,6) * t1061 + t1092;
t604 = Icges(3,1) * t851 - t1092;
t1018 = -t542 + t604;
t735 = Icges(3,4) * t847;
t543 = Icges(3,1) * t749 - Icges(3,5) * t1060 + t735;
t601 = -Icges(3,2) * t749 + t735;
t1017 = -t543 - t601;
t736 = Icges(3,4) * t851;
t544 = Icges(3,1) * t751 + Icges(3,5) * t1061 + t736;
t602 = -Icges(3,2) * t751 + t736;
t1016 = -t544 - t602;
t607 = pkin(2) * t847 + pkin(8) * t749;
t609 = pkin(2) * t851 + pkin(8) * t751;
t1015 = t607 * t781 + t609 * t955;
t1014 = t610 * t1060 + t608 * t1061;
t420 = pkin(4) * t964 + qJ(5) * t1067;
t421 = pkin(4) * t963 + qJ(5) * t1066;
t1013 = t686 * rSges(7,2) + t1215 * t687 + t1222 * t981;
t691 = Icges(3,6) * t1094 + (Icges(3,2) * t795 + t1091) * t790;
t756 = (Icges(3,1) * t795 - t1091) * t790;
t1012 = -t691 + t756;
t782 = Icges(3,4) * t1057;
t692 = Icges(3,1) * t1058 + Icges(3,5) * t1094 + t782;
t755 = -Icges(3,2) * t1058 + t782;
t1011 = -t692 - t755;
t962 = t847 * t1096;
t589 = pkin(3) * t962 + pkin(9) * t1064;
t960 = t851 * t1096;
t590 = pkin(3) * t960 + pkin(9) * t1063;
t594 = -pkin(4) * t959 - qJ(5) * t1062;
t711 = pkin(3) * t909 + pkin(9) * t981;
t759 = pkin(2) * t1057 + pkin(8) * t1058;
t1007 = qJD(3) * t749;
t1006 = qJD(3) * t751;
t1004 = qJD(4) * t662;
t1003 = qJD(4) * t664;
t1002 = qJD(4) * t753;
t1000 = qJD(4) * t793;
t999 = qJD(5) * t792;
t993 = 2 * m(3);
t992 = 2 * m(4);
t991 = 0.2e1 * m(5);
t990 = 0.2e1 * m(6);
t989 = 0.2e1 * m(7);
t986 = 0.2e1 * t851;
t985 = 0.2e1 * t789;
t984 = 0.2e1 * t791;
t983 = 0.2e1 * t795;
t982 = 0.2e1 * qJD(4);
t977 = t1094 * t142 + t1031;
t973 = -t450 + t1047;
t972 = -t739 + t1046;
t969 = t275 * t1057 - t450 * t847 + t723 * t616;
t968 = t1094 * t306 + t1023;
t965 = -t758 + t1025;
t330 = t582 * rSges(5,1) - t581 * rSges(5,2) + rSges(5,3) * t1064;
t331 = t584 * rSges(5,1) - t583 * rSges(5,2) + rSges(5,3) * t1063;
t489 = t687 * rSges(5,1) - t686 * rSges(5,2) + rSges(5,3) * t981;
t327 = rSges(6,1) * t1064 - t582 * rSges(6,2) + t581 * rSges(6,3);
t329 = rSges(6,1) * t1063 - t584 * rSges(6,2) + t583 * rSges(6,3);
t488 = rSges(6,1) * t981 - t687 * rSges(6,2) + t686 * rSges(6,3);
t947 = qJD(6) * t1095;
t945 = t1010 / 0.2e1;
t437 = pkin(3) * t863 + t662 * pkin(9);
t439 = pkin(3) * t864 + t664 * pkin(9);
t615 = -t752 * pkin(3) + t753 * pkin(9);
t937 = -t992 / 0.2e1;
t936 = t992 / 0.2e1;
t935 = -t991 / 0.2e1;
t934 = t991 / 0.2e1;
t933 = -t990 / 0.2e1;
t932 = -t989 / 0.2e1;
t931 = t989 / 0.2e1;
t413 = rSges(4,1) * t666 - rSges(4,2) * t665 + rSges(4,3) * t954;
t930 = t790 * (-t413 - t739);
t572 = rSges(4,1) * t753 - rSges(4,2) * t752 - rSges(4,3) * t1057;
t929 = t790 * (-t572 - t758);
t368 = t582 * pkin(4) + qJ(5) * t581;
t369 = t584 * pkin(4) + qJ(5) * t583;
t535 = t687 * pkin(4) + qJ(5) * t686;
t925 = t673 * t437 - t674 * t439;
t924 = t760 * t439 - t673 * t615;
t923 = -t760 * t437 + t674 * t615;
t922 = 0.2e1 * t1008;
t921 = -t141 * t851 + t725 * t301 + t1035;
t920 = -t276 + t975;
t919 = -t450 + t974;
t918 = -t739 + t973;
t917 = -t440 + t970;
t916 = t276 * t1060 + t275 * t1061 + t1020;
t915 = t301 * t1057 - t454 * t847 + t1024;
t914 = -t616 + t967;
t913 = -t758 + t966;
t912 = t440 * t1060 + t438 * t1061 + t1014;
t911 = t759 + t711;
t904 = t13 * t225 + t61 * t138;
t903 = -t739 + t919;
t902 = -t758 + t914;
t796 = 0.2e1 * qJDD(1);
t901 = 0.2e1 * t526 + 0.2e1 * t527 + 0.2e1 * t545 + 0.2e1 * t546 + t796;
t575 = Icges(3,5) * t722 - Icges(3,6) * t723;
t576 = Icges(3,5) * t724 - Icges(3,6) * t725;
t577 = Icges(3,4) * t722 - Icges(3,2) * t723;
t578 = Icges(3,4) * t724 - Icges(3,2) * t725;
t579 = Icges(3,1) * t722 - Icges(3,4) * t723;
t580 = Icges(3,1) * t724 - Icges(3,4) * t725;
t899 = -(t1061 * t575 - t541 * t725 + t543 * t724 + t577 * t851 + t579 * t751) * t791 + (t1061 * t576 - t542 * t725 + t544 * t724 + t578 * t851 + t580 * t751) * t789;
t893 = -t542 * t794 + t544 * t795;
t894 = -t541 * t794 + t543 * t795;
t898 = -(t1094 * t575 + (qJD(2) * t894 + t577 * t795 + t579 * t794) * t790) * t791 + (t1094 * t576 + (qJD(2) * t893 + t578 * t795 + t580 * t794) * t790) * t789;
t539 = Icges(3,5) * t749 + Icges(3,6) * t847 - Icges(3,3) * t1060;
t540 = Icges(3,5) * t751 + Icges(3,6) * t851 + Icges(3,3) * t1061;
t897 = -(-t1060 * t539 + t541 * t847 + t543 * t749) * t791 + (-t1060 * t540 + t542 * t847 + t544 * t749) * t789;
t896 = -(t1061 * t539 + t541 * t851 + t543 * t751) * t791 + (t1061 * t540 + t542 * t851 + t544 * t751) * t789;
t895 = -(t1094 * t539 + (t541 * t795 + t543 * t794) * t790) * t791 + (t1094 * t540 + (t542 * t795 + t544 * t794) * t790) * t789;
t549 = rSges(3,1) * t749 + rSges(3,2) * t847 - rSges(3,3) * t1060;
t550 = rSges(3,1) * t751 + rSges(3,2) * t851 + rSges(3,3) * t1061;
t892 = t549 * t789 + t550 * t791;
t585 = rSges(3,1) * t722 - rSges(3,2) * t723;
t586 = rSges(3,1) * t724 - rSges(3,2) * t725;
t891 = t585 * t789 + t586 * t791;
t890 = -t691 * t794 + t692 * t795;
t888 = t607 + t589;
t887 = t609 + t590;
t886 = t437 + t420;
t885 = t439 + t421;
t884 = t615 + t594;
t462 = rSges(4,1) * t962 - rSges(4,2) * t1064 + t749 * rSges(4,3);
t463 = rSges(4,1) * t960 - rSges(4,2) * t1063 + t751 * rSges(4,3);
t357 = rSges(5,1) * t964 - rSges(5,2) * t1067 + t662 * rSges(5,3);
t358 = rSges(5,1) * t963 - rSges(5,2) * t1066 + t664 * rSges(5,3);
t473 = -rSges(5,1) * t959 + rSges(5,2) * t1062 + t753 * rSges(5,3);
t883 = t609 * t788 - t759 * t781;
t881 = t142 * t1060 + t141 * t1061 + t916;
t880 = t141 * t1057 - t182 * t847 + t723 * t454 + t969;
t879 = t306 * t1060 + t301 * t1061 + t912;
t878 = Icges(4,1) * t1096 - Icges(4,4) * t793;
t877 = Icges(4,4) * t1096 - Icges(4,2) * t793;
t872 = -Icges(5,5) * t1095 + Icges(5,6) * t792;
t757 = (rSges(3,1) * t795 - rSges(3,2) * t794) * t790;
t672 = rSges(4,1) * t909 - rSges(4,2) * t981 + rSges(4,3) * t1058;
t360 = t662 * rSges(6,1) - rSges(6,2) * t964 + rSges(6,3) * t1067;
t362 = t664 * rSges(6,1) - rSges(6,2) * t963 + rSges(6,3) * t1066;
t475 = t753 * rSges(6,1) + rSges(6,2) * t959 - rSges(6,3) * t1062;
t754 = (Icges(3,5) * t795 - Icges(3,6) * t794) * t790;
t866 = t892 * t790;
t716 = t1094 * rSges(3,3) + (rSges(3,1) * t794 + rSges(3,2) * t795) * t790;
t853 = -t1061 * t716 + t1094 * t550;
t734 = qJD(2) * t757;
t852 = -t1061 * t734 + t1094 * t586;
t850 = -t1060 * t716 - t1094 * t549;
t849 = -t1060 * t734 - t1094 * t585;
t846 = t535 + t911;
t842 = (Icges(4,5) * t863 - Icges(4,6) * t662) * t674 + (Icges(4,5) * t864 - Icges(4,6) * t664) * t673 + (-Icges(4,5) * t752 - Icges(4,6) * t753) * t760;
t841 = t10 * t1040 + t1053 * t49;
t840 = t1027 * t11 + t1045 * t57;
t839 = -t1094 * t275 - t939;
t838 = -t1094 * t438 - t938;
t836 = t368 + t888;
t835 = t369 + t887;
t834 = 0.2e1 * t232 - 0.2e1 * t1065 + 0.2e1 * t279 - 0.2e1 * t1068 + t901;
t833 = t301 * t1003 + t476 * t420 - t477 * t421 - t752 * t999 + t925;
t832 = t306 * t1002 + t637 * t421 - t476 * t594 + t863 * t999 + t924;
t831 = t454 * t1004 - t637 * t420 + t477 * t594 + t864 * t999 + t923;
t830 = (-t1060 * t759 - t1094 * t607) * qJD(2);
t827 = t438 * t1006 - t1007 * t440 + t673 * t589 - t590 * t674 + t1015;
t824 = -t1094 * t141 + t839;
t823 = -t1094 * t301 + t838;
t816 = (Icges(4,1) * t864 - t1089 - t378) * t673 + (Icges(4,1) * t863 - t1090 - t377) * t674 + (-Icges(4,1) * t752 - t1088 - t570) * t760;
t815 = (Icges(4,2) * t664 - t380 - t639) * t673 + (Icges(4,2) * t662 - t379 - t638) * t674 + (Icges(4,2) * t753 - t571 + t742) * t760;
t596 = t1000 * t851 + t1006;
t813 = qJD(5) * t686 + t596 * t301 + t476 * t368 + t827;
t811 = -t1006 * t616 + t440 * t953 + t760 * t590 - t673 * t711 + t883;
t810 = -0.2e1 * t477 * t142 - 0.2e1 * t240 * t306 + 0.2e1 * t102 + 0.2e1 * t163 + 0.2e1 * t406 + 0.2e1 * t650 + t834;
t807 = (qJD(2) * t891 + qJDD(2) * t892) * t790;
t726 = (t1000 * t795 + t1005) * t790;
t806 = qJD(5) * t581 + t726 * t306 + t637 * t369 + t811;
t804 = t616 * t1007 - t438 * t953 - t760 * t589 + t674 * t711 + t830;
t595 = t1000 * t847 + t1007;
t801 = qJD(5) * t583 + t595 * t454 + t477 * t535 + t804;
t798 = (Icges(5,3) * t664 - t1095 * t222 + t216 * t792 - t864 * t872) * t476 + (Icges(5,3) * t662 - t1095 * t221 + t215 * t792 - t863 * t872) * t477 + (Icges(5,3) * t753 - t1095 * t393 + t390 * t792 + t752 * t872) * t637;
t729 = qJD(2) * t756;
t728 = (Icges(3,4) * t795 - Icges(3,2) * t794) * t1010;
t727 = qJD(2) * t754;
t690 = Icges(3,3) * t1094 + (Icges(3,5) * t794 + Icges(3,6) * t795) * t790;
t671 = (Icges(4,5) * t794 + t795 * t878) * t790;
t670 = (Icges(4,6) * t794 + t795 * t877) * t790;
t614 = -rSges(4,1) * t752 - rSges(4,2) * t753;
t606 = rSges(3,1) * t851 - rSges(3,2) * t751;
t605 = rSges(3,1) * t847 - rSges(3,2) * t749;
t600 = Icges(3,5) * t851 - Icges(3,6) * t751;
t599 = Icges(3,5) * t847 - Icges(3,6) * t749;
t461 = Icges(4,5) * t751 + t851 * t878;
t460 = Icges(4,5) * t749 + t847 * t878;
t459 = Icges(4,6) * t751 + t851 * t877;
t458 = Icges(4,6) * t749 + t847 * t877;
t453 = -rSges(5,1) * t667 - rSges(5,2) * t668;
t436 = rSges(4,1) * t864 - rSges(4,2) * t664;
t435 = rSges(4,1) * t863 - rSges(4,2) * t662;
t402 = t850 * qJD(2);
t401 = t853 * qJD(2);
t364 = t863 * t454;
t335 = t1061 * t690 + t691 * t851 + t692 * t751;
t334 = -t1060 * t690 + t691 * t847 + t692 * t749;
t332 = qJD(2) * t866 + qJD(1);
t305 = -rSges(5,1) * t521 - rSges(5,2) * t522;
t300 = -rSges(5,1) * t519 - rSges(5,2) * t520;
t261 = t752 * t306;
t234 = g(1) * t521 + g(2) * t519 + g(3) * t667;
t233 = t864 * t301;
t228 = rSges(5,1) * t520 - rSges(5,2) * t519 - rSges(5,3) * t863;
t188 = t1061 * t727 - t691 * t725 + t692 * t724 + t728 * t851 + t729 * t751;
t187 = -t1060 * t727 - t691 * t723 + t692 * t722 + t728 * t847 + t729 * t749;
t166 = -t760 * t382 + t674 * t572 + t829;
t165 = t383 * t760 - t572 * t673 + t882;
t150 = t382 * t673 - t383 * t674 + t949;
t135 = rSges(5,1) * t242 - rSges(5,2) * t241 + rSges(5,3) * t512;
t92 = -t637 * t228 + t477 * t397 + t812;
t91 = t229 * t637 - t397 * t476 + t828;
t76 = -t760 * t251 - t676 * t382 + t674 * t413 + t530 * t572 + t803;
t75 = t252 * t760 + t383 * t676 - t413 * t673 - t529 * t572 + t826;
t74 = t228 * t476 - t229 * t477 + t865;
t71 = t889 + t1143;
t70 = t155 * t674 + t156 * t673 + t760 * t195;
t63 = t145 * t674 + t673 * t146 + t170 * t760;
t62 = t143 * t674 + t144 * t673 + t169 * t760;
t45 = -t637 * t135 + t477 * t183 - t409 * t228 + t240 * t397 + t800;
t44 = t136 * t637 - t183 * t476 + t229 * t409 - t239 * t397 + t805;
t19 = t135 * t476 - t136 * t477 + t228 * t239 - t229 * t240 + t814;
t17 = t1026 * t239 + t1047 * t476 + t140 * t637 + t227 * t409 + t802;
t1 = [t810 * t1129 + (t810 + 0.2e1 * t987 + 0.2e1 * t998) * t1128 + m(2) * qJDD(1) + t834 * t1130 + (-m(5) * t136 - m(6) * t140 - t1051 * t931) * t477 + (m(5) * t135 + m(6) * t138 + t1053 * t931) * t476 + (-m(5) * t229 - m(6) * t227 - t1038 * t931) * t240 + (m(5) * t228 + m(6) * t225 + t1040 * t931) * t239 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t796 / 0.2e1 - g(3) + t807) * m(3) + (t901 / 0.2e1 - g(3) + t1143) * m(4); (t57 * (qJD(6) * t584 + t1027 * t595 + t1013 * t477 + t971 * t726 + (-t368 - t1028) * t637 + t801) + t56 * (qJD(6) * t582 + t1038 * t726 + t1022 * t637 + t967 * t596 + (-t535 - t1013) * t476 + t806) + t49 * (qJD(6) * t687 + t1040 * t596 + t1028 * t476 + t970 * t595 + (-t369 - t1022) * t477 + t813)) * t932 - t63 * t1006 / 0.2e1 - t62 * t1007 / 0.2e1 + ((t749 * t376 + t459 * t863 + t662 * t461) * t673 + (t749 * t375 + t458 * t863 + t662 * t460) * t674 + (t749 * t569 + t662 * t671 + t670 * t863) * t760 + (t1058 * t169 + t143 * t749 + t144 * t751) * qJD(3) + t1142 * t847) * t1107 + (t188 * t788 + t335 * t787 + (qJD(2) * t899 + qJDD(2) * t896) * t790 + t1155) * t1061 / 0.2e1 + (t69 * (t595 * t396 + t477 * t488 + t1039 * t726 + (-t327 - t368) * t637 + t801) + t68 * (t227 * t726 + t329 * t637 + t1026 * t596 + (-t488 - t535) * t476 + t806) + t61 * (t225 * t596 + t327 * t476 + t1037 * t595 + (-t329 - t369) * t477 + t813)) * t933 + ((t751 * t376 + t459 * t864 + t664 * t461) * t673 + (t751 * t375 + t458 * t864 + t664 * t460) * t674 + (t751 * t569 + t664 * t671 + t670 * t864) * t760 + (t1058 * t170 + t145 * t749 + t146 * t751) * qJD(3) + t1142 * t851) * t1109 + (t76 * (-t1094 * t382 + t791 * t929 - t938) + t166 * (-t1094 * t251 + t791 * t930 - t939) + t75 * (t1094 * t383 + t789 * t929 + t597) + t165 * (t1094 * t252 + t789 * t930 + t536) + t71 * ((t382 * t789 + t383 * t791) * t790 + t1014) + t150 * ((t251 * t789 + t252 * t791) * t790 + t1020)) * t936 + ((qJD(2) * t849 + qJDD(2) * t850) * t850 + t402 * t849 + (qJD(2) * t852 + qJDD(2) * t853) * t853 + t401 * t852 + (qJDD(1) + t807) * t866 + t332 * t891 * t790) * t993 / 0.2e1 - (t1094 * t334 + t790 * t897) * t946 / 0.2e1 + (t1094 * t335 + t790 * t896) * t780 / 0.2e1 + t789 * (t1094 * t188 + t790 * t899) * t945 - m(5) * (g(1) * (t887 + t331) + g(2) * (t888 + t330) + g(3) * (t911 + t489)) + (t787 * t895 + t788 * t898) * t790 / 0.2e1 + (t166 * (-t760 * t462 + t674 * t672 + (-t1058 * t382 + t572 * t749) * qJD(3) + t830) + t165 * (t463 * t760 - t672 * t673 + (t1058 * t383 - t572 * t751) * qJD(3) + t883) + t150 * (t462 * t673 - t463 * t674 + (t382 * t751 - t383 * t749) * qJD(3) + t1015)) * t937 + t595 * t1223 + t596 * t1224 + t726 * t1225 - (t897 * t988 + t187 * t788 + t334 * t787 + (t1094 * t187 + 0.2e1 * t790 * (-(-t1060 * t575 - t541 * t723 + t543 * t722 + t577 * t847 + t579 * t749) * t791 + (-t1060 * t576 - t542 * t723 + t544 * t722 + t578 * t847 + t580 * t749) * t789)) * qJD(2) + t1156) * t1060 / 0.2e1 + ((-t1094 * t225 + t823) * t1137 + (-t1094 * t138 + t824) * t1131 + 0.2e1 * t17 * (t1094 * t227 + t968) + (t1094 * t140 + t977) * t1132 + t879 * t1138 + t881 * t1133 + ((t13 * t227 + t61 * t140 + t18 * t913 + t69 * t918) * t984 + (t17 * t913 + t68 * t918 + t904) * t985) * t790) * t1129 + t787 * t1094 * (t1094 * t690 + (t691 * t795 + t692 * t794) * t790) + t788 * t1094 * (t1094 * t727 + (qJD(2) * t890 + t728 * t795 + t729 * t794) * t790) - m(7) * (g(1) * (t835 + t1022) + g(2) * (t836 + t1028) + g(3) * (t846 + t1013)) + (-t789 * ((-t1016 * t851 + t1018 * t751 + t1061 * t600) * t1061 - (-t1017 * t851 + t1019 * t751 + t1061 * t599) * t1060 + (-t1011 * t851 + t1012 * t751 + t1061 * t754) * t1094) / 0.2e1 + t791 * ((-t1016 * t847 + t1018 * t749 - t1060 * t600) * t1061 - (-t1017 * t847 + t1019 * t749 - t1060 * t599) * t1060 + (-t1011 * t847 + t1012 * t749 - t1060 * t754) * t1094) / 0.2e1) * t790 * qJD(2) ^ 2 - (t332 * (t605 * t789 + t606 * t791) * t1010 + (t402 * (-t1060 * t757 - t1094 * t605) + t401 * (-t1061 * t757 + t1094 * t606)) * qJD(2)) * t993 / 0.2e1 - t70 * t953 / 0.2e1 - m(4) * (g(1) * (t463 + t609) + g(2) * (t462 + t607) + g(3) * (t672 + t759)) + (t823 * t1140 + t824 * t1134 + t968 * t1139 + t977 * t1135 + t879 * t1141 + t881 * t1136 + ((t10 * t1038 + t1051 * t49 + t11 * t902 + t57 * t903) * t984 + (t12 * t902 + t56 * t903 + t841) * t985) * t790 + (t1038 * t1139 - t1040 * t1140 + t1051 * t1135 - t1053 * t1134) * t1094) * t1128 - (((t602 * t795 + t604 * t794 + t893) * t789 - (t601 * t795 + t603 * t794 + t894) * t791) * t790 * t1010 + ((-t599 * t791 + t600 * t789 + t755 * t795 + t756 * t794 + t890) * t1010 + t754 * t788) * t1094) * t788 / 0.2e1 + (t195 * t1094 + (-t155 * t791 + t156 * t789) * t790) * t1105 + (t89 * t1094 + (-t64 * t791 + t65 * t789) * t790) * t1106 + (t90 * t1094 + (-t66 * t791 + t67 * t789) * t790) * t1108 + ((qJD(2) * t898 + qJDD(2) * t895) * t790 + t1154) * t1094 / 0.2e1 + ((t1258 * t789 - t1259 * t791) * t790 + t1255 * t1094) * t1125 + ((t1260 * t789 - t1261 * t791) * t790 + t1256 * t1094) * t1127 + ((t1262 * t789 - t1263 * t791) * t790 + t1257 * t1094) * t1126 + ((t1199 * t789 - t1244 * t791) * t790 + t1193 * t1094) * t1113 + ((t1201 * t789 - t1245 * t791) * t790 + t1194 * t1094) * t1123 + ((t1203 * t789 - t1246 * t791) * t790 + t1195 * t1094) * t1121 + ((-t752 * t459 + t753 * t461) * t673 + (-t752 * t458 + t753 * t460) * t674 + (-t752 * t670 + t753 * t671) * t760 + (t155 * t749 + t156 * t751) * qJD(3) + ((qJD(3) * t195 + t375 * t674 + t376 * t673 + t569 * t760) * t794 + t1142 * t795) * t790) * t1098 + (t99 * t1094 + (-t72 * t791 + t73 * t789) * t790) * t1097 - m(6) * (g(1) * (t835 + t329) + g(2) * (t836 + t327) + g(3) * (t846 + t488)) + (0.2e1 * t45 * (-t1094 * t228 + t838) + 0.2e1 * t92 * (-t1094 * t135 + t839) + 0.2e1 * t44 * (t1094 * t229 + t1023) + 0.2e1 * t91 * (t1094 * t136 + t1031) + 0.2e1 * t19 * t912 + 0.2e1 * t74 * t916 + ((t74 * t136 + t19 * t229 + t45 * t965 + t92 * t972) * t984 + (t74 * t135 + t19 * t228 + t44 * t965 + t91 * t972) * t985) * t790) * t1130 - m(3) * (g(1) * t606 + g(2) * t605 + g(3) * t757) + (t169 * t1094 + (-t143 * t791 + t144 * t789) * t790) * t1117 + (t170 * t1094 + (-t145 * t791 + t146 * t789) * t790) * t1118 + (t1255 * t726 + (t1160 * t752 + t1161 * t667 + t1162 * t668 + t1165 * t981 + t1300 * t687 + t1301 * t686) * t637 + t1258 * t596 + t1259 * t595 + (t1173 * t752 + t1175 * t667 + t1177 * t668 + t1179 * t981 + t1303 * t687 + t1305 * t686) * t477 + (t1172 * t752 + t1174 * t667 + t1176 * t668 + t1178 * t981 + t1302 * t687 + t1304 * t686) * t476) * t1114 + (t1256 * t726 + (t1063 * t1165 - t1160 * t864 + t1161 * t521 + t1162 * t522 + t1300 * t584 + t1301 * t583) * t637 + t1260 * t596 + t1261 * t595 + (t1063 * t1179 - t1173 * t864 + t1175 * t521 + t1177 * t522 + t1303 * t584 + t1305 * t583) * t477 + (t1063 * t1178 - t1172 * t864 + t1174 * t521 + t1176 * t522 + t1302 * t584 + t1304 * t583) * t476) * t1124 + (t1257 * t726 + (t1064 * t1165 - t1160 * t863 + t1161 * t519 + t1162 * t520 + t1300 * t582 + t1301 * t581) * t637 + t1262 * t596 + t1263 * t595 + (t1064 * t1179 - t1173 * t863 + t1175 * t519 + t1177 * t520 + t1303 * t582 + t1305 * t581) * t477 + (t1064 * t1178 - t1172 * t863 + t1174 * t519 + t1176 * t520 + t1302 * t582 + t1304 * t581) * t476) * t1122 + (t92 * (-t726 * t228 - t637 * t330 + t595 * t397 + t477 * t489 + t804) + t91 * (t229 * t726 + t331 * t637 - t397 * t596 - t476 * t489 + t811) + t74 * (t228 * t596 - t229 * t595 + t330 * t476 - t331 * t477 + t827)) * t935; -m(5) * (g(1) * (t358 + t439) + g(2) * (t357 + t437) + g(3) * (t473 + t615)) - t1154 * t1057 / 0.2e1 - t1155 * t851 / 0.2e1 - t1156 * t847 / 0.2e1 + (t70 + t1196) * t794 * t945 + (t63 + t1197) * t725 / 0.2e1 + (t62 + t1198) * t723 / 0.2e1 + ((t149 * t753 + t662 * t97 + t664 * t98) * qJD(4) + t798 * t752 + t1217 * t1004 + t1216 * t1003 + t1212 * t1002 + (t1163 * t668 + t1164 * t667 + t1165 * t753 + t1211 * t752) * t637 + (t1169 * t668 + t1171 * t667 + t1179 * t753 + t1209 * t752) * t477 + (t1168 * t668 + t1170 * t667 + t1178 * t753 + t1210 * t752) * t476) * t1114 + ((t108 * t753 + t662 * t87 + t664 * t88) * qJD(4) - t798 * t864 + t1219 * t1004 + t1218 * t1003 + t1213 * t1002 + (t1163 * t522 + t1164 * t521 + t1165 * t664 - t1211 * t864) * t637 + (t1169 * t522 + t1171 * t521 + t1179 * t664 - t1209 * t864) * t477 + (t1168 * t522 + t1170 * t521 + t1178 * t664 - t1210 * t864) * t476) * t1124 + ((t107 * t753 + t662 * t85 + t664 * t86) * qJD(4) - t798 * t863 + t1221 * t1004 + t1220 * t1003 + t1214 * t1002 + (t1163 * t520 + t1164 * t519 + t1165 * t662 - t1211 * t863) * t637 + (t1169 * t520 + t1171 * t519 + t1179 * t662 - t1209 * t863) * t477 + (t1168 * t520 + t1170 * t519 + t1178 * t662 - t1210 * t863) * t476) * t1122 + t1004 * t1223 + t1003 * t1224 + t1002 * t1225 - m(6) * ((-t360 * t637 + t475 * t477 + t831) * t1131 + (t362 * t637 - t475 * t476 + t832) * t1132 + (t360 * t476 - t362 * t477 + t833) * t1133 + (t69 * (-t225 * t753 + t396 * t662 - t1073) + t68 * (t227 * t753 - t396 * t664 - t1069) + t61 * (t225 * t664 - t227 * t662 - t1072)) * t982) / 0.2e1 - m(7) * ((t1145 * t477 - t1148 * t637 + t864 * t947 + t831) * t1134 + (-t1145 * t476 + t1147 * t637 + t863 * t947 + t832) * t1135 + (-t1147 * t477 + t1148 * t476 - t752 * t947 + t833) * t1136 + (-t56 * t1069 - t49 * t1072 - t57 * t1073 + (-t1040 * t57 + t1151) * t753 + (-t1027 * t56 + t1152) * t664 + (-t1038 * t49 + t1153) * t662) * t982) / 0.2e1 + (t166 * (-t435 * t760 + t614 * t674) + t165 * (t436 * t760 - t614 * t673) + t150 * (t435 * t673 - t436 * t674)) * t937 - m(7) * (g(1) * (t885 + t1147) + g(2) * (t886 + t1148) + g(3) * (t884 + t1145)) - m(6) * (g(1) * (t362 + t885) + g(2) * (t360 + t886) + g(3) * (t475 + t884)) + (-t1057 * t1255 - t1258 * t851 - t1259 * t847) * t1125 + (-t1057 * t1256 - t1260 * t851 - t1261 * t847) * t1127 + (-t1057 * t1257 - t1262 * t851 - t1263 * t847) * t1126 + ((t1008 * t1255 - t1193 * t795) * t790 - t1199 * t851 - t1244 * t847 + t1258 * t725 + t1259 * t723) * t1113 + ((t1008 * t1256 - t1194 * t795) * t790 - t1201 * t851 - t1245 * t847 + t1260 * t725 + t1261 * t723) * t1123 + ((t1008 * t1257 - t1195 * t795) * t790 - t1203 * t851 - t1246 * t847 + t1262 * t725 + t1263 * t723) * t1121 + (-t1057 * t169 - t143 * t847 - t144 * t851) * t1117 + (-t1057 * t170 - t145 * t847 - t146 * t851) * t1118 + (t76 * (t1057 * t382 - t572 * t847) + t166 * (-t413 * t847 + t572 * t723 + (-t1008 * t382 + t251 * t795) * t790) + t75 * (-t1057 * t383 + t572 * t851) + t165 * (t413 * t851 - t572 * t725 + (t1008 * t383 - t252 * t795) * t790) + t71 * (-t382 * t851 + t383 * t847) + t150 * (-t251 * t851 + t252 * t847 + t382 * t725 - t383 * t723)) * t936 + (-t1057 * t195 - t155 * t847 - t156 * t851) * t1105 + (t143 * t723 + t144 * t725 - t64 * t847 - t65 * t851 + (t1008 * t169 - t795 * t89) * t790) * t1106 + (t145 * t723 + t146 * t725 - t66 * t847 - t67 * t851 + (t1008 * t170 - t795 * t90) * t790) * t1108 + (t155 * t723 + t156 * t725 - t72 * t847 - t73 * t851 + (t1008 * t195 - t795 * t99) * t790) * t1097 + (t45 * (t1057 * t228 - t397 * t847 + t1024) + t92 * (-t183 * t847 + t397 * t723 + (t135 * t795 + (-t228 - t438) * t1008) * t790 + t969) + t44 * (-t1025 * t851 + t1036 * t1057) + t91 * (t414 - t1046 * t851 + t1025 * t725 + (t1008 * t229 + t1054 * t795) * t790) + t19 * (-t1036 * t847 - t228 * t851 - t394) + t74 * (t1036 * t723 - t1054 * t847 - t135 * t851 + t228 * t725 + t1035)) * t934 + (-t1057 * t842 + t752 * t815 + t753 * t816) * t1098 + (t662 * t816 - t815 * t863 - t842 * t847) * t1107 + (t915 * t1140 + t880 * t1134 + t1032 * t1135 + t1034 * t1141 + t921 * t1136 - (t12 * t914 + t56 * t919 + t841) * t986 + ((t57 * (-t438 + t971) + t1151) * t922 + (t1040 * t11 + t1053 * t57 + t12 * t917 + t56 * t920) * t983) * t790 + 0.2e1 * (t56 * t914 + t1152) * t725 + 0.2e1 * (t49 * t917 + t1153) * t723 - 0.2e1 * (t10 * t917 + t49 * t920 + t840) * t847) * t1128 + (t664 * t816 - t815 * t864 - t842 * t851) * t1109 + (t92 * (-t357 * t637 + t473 * t477 + (-t228 * t753 + t397 * t662) * qJD(4) + t923) + t91 * (t358 * t637 - t473 * t476 + (t229 * t753 - t397 * t664) * qJD(4) + t924) + t74 * (t357 * t476 - t358 * t477 + (t228 * t664 - t229 * t662) * qJD(4) + t925)) * t935 - m(4) * (g(1) * t436 + g(2) * t435 + g(3) * t614) + (t915 * t1137 + t880 * t1131 + t1032 * t1132 + t1034 * t1138 + t921 * t1133 - (t17 * t966 + t68 * t973 + t904) * t986 + ((t69 * (-t438 + t1039) + t68 * t227) * t922 + (t1144 * t17 + t1208 * t68 + t69 * t138 + t18 * t225) * t983) * t790 + (t1132 * t966 + t225 * t1133) * t725 + (t396 * t1131 + t1133 * t1144) * t723 - (t185 * t1131 + t1133 * t1208 + t396 * t1137 + t1144 * t1138) * t847) * t1129; (t69 * (t1030 * t637 + t451 * t477 + t1033) + t68 * (t1021 * t476 + t303 * t637 + t1041) + t61 * (t1029 * t477 + t298 * t476 + t1042)) * t933 - m(6) * (-g(1) * t1029 - g(2) * t1030 - g(3) * t1021) - m(7) * (-g(1) * t1149 - g(2) * t1150 - g(3) * t1146) + (t1048 * t1134 + t1055 * t1135 + t1056 * t1136 + t261 * t1139 - t364 * t1140 - t233 * t1141 + (t1038 * t1135 + t1134 * t971) * t665 + (t1040 * t1136 + t1135 * t967) * t514 + (t1027 * t1134 + t1136 * t970) * t512 + 0.2e1 * (t1038 * t12 + t1051 * t56 + t11 * t971 + t57 * t976) * t752 - 0.2e1 * (t12 * t967 + t56 * t974 + t841) * t864 - 0.2e1 * (t10 * t970 + t49 * t975 + t840) * t863) * t1128 + (t57 * (-qJD(6) * t521 + t1150 * t637 + t926 * t477 + t1033) + t56 * (-qJD(6) * t519 + t1146 * t476 + t927 * t637 + t1041) + t49 * (-qJD(6) * t667 + t1149 * t477 + t928 * t476 + t1042)) * t932 - m(5) * (g(1) * t305 + g(2) * t300 + g(3) * t453) + (t92 * (-t300 * t637 + t453 * t477) + t91 * (t305 * t637 - t453 * t476) + t74 * (t300 * t476 - t305 * t477)) * t935 + (t18 * (t1039 * t752 - t396 * t863 - t364) + t69 * (t1039 * t665 + t1052 * t752 - t185 * t863 + t396 * t512 + t1048) + t17 * (-t1026 * t864 + t227 * t752 + t261) + t68 * (t1026 * t514 - t1047 * t864 + t140 * t752 + t227 * t665 + t1055) + t13 * (-t1037 * t863 - t225 * t864 - t233) + t61 * (t1037 * t512 - t1050 * t863 - t138 * t864 + t225 * t514 + t1056)) * t990 / 0.2e1 + (t45 * (-t228 * t752 - t397 * t863) + t92 * (-t135 * t752 - t183 * t863 - t228 * t665 + t397 * t512) + t44 * (t229 * t752 + t397 * t864) + t91 * (t136 * t752 + t183 * t864 + t229 * t665 - t397 * t514) + t19 * (-t228 * t864 + t229 * t863) + t74 * (-t135 * t864 + t136 * t863 + t228 * t514 - t229 * t512)) * t934 + (t1256 * t752 - t1260 * t864 - t1261 * t863) * t1127 + (t1257 * t752 - t1262 * t864 - t1263 * t863) * t1126 + (t1255 * t752 - t1258 * t864 - t1259 * t863) * t1125 + (-t1157 * t864 + t1158 * t522 + t1159 * t521) * t1124 + (t1194 * t752 - t1201 * t864 - t1245 * t863 + t1256 * t665 + t1260 * t514 + t1261 * t512) * t1123 + (-t1157 * t863 + t1158 * t520 + t1159 * t519) * t1122 + (t1195 * t752 - t1203 * t864 - t1246 * t863 + t1257 * t665 + t1262 * t514 + t1263 * t512) * t1121 + t1198 * t512 / 0.2e1 + t1197 * t514 / 0.2e1 + (t1157 * t752 + t1158 * t668 + t1159 * t667) * t1114 + (t1193 * t752 - t1199 * t864 - t1244 * t863 + t1255 * t665 + t1258 * t514 + t1259 * t512) * t1113 - t1207 * t863 / 0.2e1 - t1206 * t864 / 0.2e1 + t1196 * t665 / 0.2e1 + t1205 * t752 / 0.2e1; (t10 * t667 + t1043 * t57 + t1044 * t56 + t1049 * t49 + t11 * t521 + t12 * t519 - t234) * m(7) + (t1043 * t69 + t1044 * t68 + t1049 * t61 + t13 * t667 + t17 * t519 + t18 * t521 - t234) * m(6); (t56 * t242 + t57 * t244 + (-t56 * t637 - g(1) + t11) * t522 + (t476 * t56 - t477 * t57 - g(3) + t10) * t668 + (t57 * t637 - g(2) + t12) * t520 + (-t476 * t520 + t477 * t522 + t408) * t49) * m(7);];
tau  = t1;
