% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:58:30
% EndTime: 2019-03-08 22:58:38
% DurationCPUTime: 3.05s
% Computational Cost: add. (1647->300), mult. (4608->480), div. (0->0), fcn. (3887->8), ass. (0->163)
t107 = sin(qJ(4));
t110 = cos(qJ(4));
t108 = sin(qJ(3));
t111 = cos(qJ(3));
t105 = sin(pkin(6));
t109 = sin(qJ(2));
t187 = t105 * t109;
t189 = cos(pkin(6));
t123 = t189 * t108 + t111 * t187;
t178 = qJD(2) * t109;
t154 = t105 * t178;
t202 = qJD(4) * t123 - t154;
t197 = cos(qJ(2));
t162 = t105 * t197;
t149 = qJD(2) * t197;
t140 = t105 * t149;
t49 = t108 * t187 - t189 * t111;
t26 = -qJD(3) * t49 + t111 * t140;
t205 = -qJD(4) * t162 + t26;
t10 = -t202 * t107 + t205 * t110;
t9 = t205 * t107 + t202 * t110;
t208 = t10 * t110 + t9 * t107;
t174 = qJD(4) * t111;
t155 = t110 * t174;
t95 = t108 * qJD(3);
t53 = -t107 * t95 + t155;
t98 = qJD(4) * t110;
t156 = t108 * t98;
t170 = t111 * qJD(3);
t52 = t107 * t170 + t156;
t28 = t123 * t107 + t110 * t162;
t29 = -t107 * t162 + t123 * t110;
t97 = qJD(4) * t107;
t207 = t28 * t98 - t29 * t97 + t208;
t135 = -t107 * t29 + t110 * t28;
t206 = t135 * qJD(4) + t208;
t186 = t107 * qJ(5);
t136 = -pkin(4) * t110 - t186;
t96 = qJD(5) * t110;
t204 = t136 * qJD(4) + t96;
t106 = -pkin(4) - qJ(6);
t203 = t106 * t108;
t101 = t107 ^ 2;
t103 = t110 ^ 2;
t181 = t101 - t103;
t68 = t181 * qJD(4);
t195 = pkin(9) * t111;
t138 = pkin(3) * t108 - t195;
t125 = t138 * qJD(3);
t196 = pkin(9) * t108;
t139 = -pkin(3) * t111 - t196;
t69 = -pkin(2) + t139;
t194 = t107 * t125 + t69 * t98;
t157 = t107 * t174;
t51 = t110 * t95 + t157;
t18 = pkin(8) * t51 - t194;
t175 = qJD(4) * t108;
t158 = t107 * t175;
t91 = pkin(8) * t170;
t147 = t52 * pkin(4) + qJ(5) * t158 + t91;
t161 = qJ(5) * t170;
t17 = (-qJD(5) * t108 - t161) * t110 + t147;
t64 = -pkin(3) + t136;
t201 = (t108 * t64 + t195) * qJD(4) - t17;
t130 = t106 * t110 - t186;
t27 = t123 * qJD(3) + t108 * t140;
t20 = t49 * t27;
t200 = 0.2e1 * t29 * t10 + 0.2e1 * t28 * t9 + 0.2e1 * t20;
t102 = t108 ^ 2;
t180 = -t111 ^ 2 + t102;
t145 = t180 * qJD(3);
t32 = -0.2e1 * t107 * t145 + 0.2e1 * t108 * t155;
t199 = pkin(5) + pkin(9);
t185 = t107 * t108;
t193 = pkin(4) * t185 + t108 * pkin(8);
t182 = t110 * t111;
t88 = pkin(8) * t182;
t44 = t107 * t69 + t88;
t188 = qJ(5) * t110;
t131 = qJ(6) * t107 - t188;
t172 = qJD(6) * t107;
t12 = t131 * t170 + (t172 + (qJ(6) * qJD(4) - qJD(5)) * t110) * t108 + t147;
t192 = t107 * t12;
t191 = t110 * t12;
t190 = t27 * t108;
t184 = t107 * t111;
t183 = t108 * t110;
t179 = qJ(5) * qJD(5);
t177 = qJD(3) * t107;
t176 = qJD(3) * t110;
t173 = qJD(5) * t107;
t171 = qJD(6) * t111;
t169 = t111 * qJD(5);
t168 = -0.2e1 * pkin(2) * qJD(3);
t167 = -0.2e1 * pkin(3) * qJD(4);
t166 = pkin(5) * t182;
t87 = pkin(8) * t184;
t165 = pkin(4) * t95;
t164 = pkin(9) * t97;
t56 = -pkin(3) + t130;
t163 = t56 * t98;
t159 = qJ(5) * t95;
t152 = t107 * t98;
t151 = t108 * t170;
t150 = t110 * t170;
t148 = qJD(3) * t197;
t43 = t110 * t69 - t87;
t146 = t53 * pkin(8) - t110 * t125 + t69 * t97;
t144 = 0.2e1 * t151;
t143 = t102 * t152;
t142 = t107 * t150;
t38 = qJ(5) * t111 - t44;
t100 = t111 * pkin(4);
t40 = t100 - t43;
t134 = t107 * t38 + t110 * t40;
t133 = -t107 * t44 - t110 * t43;
t132 = qJ(5) * t10 + qJD(5) * t29;
t128 = -qJD(6) * t110 - t173;
t14 = t107 * t27 + t49 * t98;
t15 = t110 * t27 - t49 * t97;
t92 = pkin(4) * t97;
t33 = t131 * qJD(4) + t128 + t92;
t127 = -t110 * t33 + t56 * t97;
t34 = t131 * t108 + t193;
t126 = -qJD(4) * t34 - t56 * t170;
t122 = -pkin(5) * t158 + t146;
t47 = -qJ(5) * t183 + t193;
t48 = -qJ(5) * t98 - t173 + t92;
t119 = -qJD(4) * t47 - t108 * t48 + (-t111 * t64 + t196) * qJD(3);
t13 = -t159 + t18 + t169;
t16 = t146 - t165;
t118 = t134 * qJD(4) + t16 * t107 - t13 * t110;
t117 = t133 * qJD(4) + t107 * t146 - t18 * t110;
t116 = 0.2e1 * t159 - 0.2e1 * t169 - t18;
t115 = t206 * pkin(9);
t1 = (t49 * t177 + t9) * t111 + (-qJD(3) * t28 + t14) * t108;
t2 = (-t49 * t176 - t10) * t111 + (qJD(3) * t29 - t15) * t108;
t114 = -t29 * t156 + t28 * t150 + t9 * t183 + (-t29 * t170 + (-qJD(4) * t28 - t10) * t108) * t107;
t113 = t190 + t26 * t111 + (-t108 * t123 + t49 * t111) * qJD(3);
t112 = 0.2e1 * qJD(5);
t93 = pkin(9) * t98;
t81 = -0.2e1 * t151;
t80 = -0.2e1 * t152;
t79 = 0.2e1 * t152;
t72 = t199 * t110;
t71 = t199 * t107;
t62 = pkin(5) * t98 + t93;
t61 = t199 * t97;
t60 = -0.2e1 * t68;
t50 = -t150 + t158;
t42 = 0.2e1 * t103 * t151 - 0.2e1 * t143;
t41 = 0.2e1 * t101 * t151 + 0.2e1 * t143;
t39 = t181 * t175 - t142;
t36 = t108 * t157 + t180 * t176;
t35 = 0.4e1 * t108 * t152 + t181 * t170;
t31 = 0.2e1 * t36;
t30 = t102 * t68 - 0.2e1 * t108 * t142;
t25 = 0.2e1 * t30;
t24 = -pkin(5) * t185 - t38;
t21 = qJ(6) * t111 + t100 + t87 + (pkin(5) * t108 - t69) * t110;
t11 = -t169 + (-pkin(5) * t183 - t87) * qJD(4) + (-pkin(5) * t184 + (-pkin(8) * t110 + qJ(5)) * t108) * qJD(3) + t194;
t6 = t171 + (t166 + t203) * qJD(3) + t122;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t105 ^ 2 * t109 * t149 + 0.2e1 * t123 * t26 + 0.2e1 * t20, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, -t140, 0, 0, 0, 0, 0, 0, 0, 0 (-t108 * t148 - t111 * t178) * t105 (t108 * t178 - t111 * t148) * t105, t113, -pkin(2) * t154 + pkin(8) * t113, 0, 0, 0, 0, 0, 0, t1, -t2, t135 * t170 + (-t10 * t107 + t110 * t9 + (-t107 * t28 - t110 * t29) * qJD(4)) * t108, t10 * t44 - t18 * t29 + t146 * t28 - t43 * t9 + (t170 * t49 + t190) * pkin(8), 0, 0, 0, 0, 0, 0, t114, -t1, t2, -t10 * t38 - t13 * t29 + t16 * t28 + t17 * t49 + t27 * t47 + t40 * t9, 0, 0, 0, 0, 0, 0, t114, t2, t1, t10 * t24 + t11 * t29 + t12 * t49 + t21 * t9 + t27 * t34 + t28 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, -0.2e1 * t145, 0, t81, 0, 0, t108 * t168, t111 * t168, 0, 0, t42, t25, t31, t41, t32, t81, 0.2e1 * t43 * t95 + 0.2e1 * t111 * t146 + 0.2e1 * (t102 * t98 + t107 * t144) * pkin(8), -0.2e1 * t44 * t95 - 0.2e1 * t111 * t18 + 0.2e1 * (-t102 * t97 + t110 * t144) * pkin(8), 0.2e1 * t133 * t170 + 0.2e1 * (t107 * t18 + t110 * t146 + (t107 * t43 - t110 * t44) * qJD(4)) * t108, 0.2e1 * pkin(8) ^ 2 * t151 - 0.2e1 * t146 * t43 - 0.2e1 * t18 * t44, t81, -0.2e1 * t36, -t32, t42, t25, t41, 0.2e1 * t134 * t170 + 0.2e1 * (t107 * t13 + t110 * t16 + (-t107 * t40 + t110 * t38) * qJD(4)) * t108, 0.2e1 * (-t47 * t177 - t16) * t111 + 0.2e1 * (qJD(3) * t40 - t107 * t17 - t47 * t98) * t108, 0.2e1 * (-t47 * t176 + t13) * t111 + 0.2e1 * (-qJD(3) * t38 - t110 * t17 + t47 * t97) * t108, 0.2e1 * t13 * t38 + 0.2e1 * t16 * t40 + 0.2e1 * t17 * t47, t81, -t32, t31, t41, -0.2e1 * t30, t42, 0.2e1 * (-t107 * t24 + t110 * t21) * t170 + 0.2e1 * (-t107 * t11 + t110 * t6 + (-t107 * t21 - t110 * t24) * qJD(4)) * t108, 0.2e1 * (-t34 * t176 - t11) * t111 + 0.2e1 * (qJD(3) * t24 + t34 * t97 - t191) * t108, 0.2e1 * (t34 * t177 + t6) * t111 + 0.2e1 * (-qJD(3) * t21 + t34 * t98 + t192) * t108, 0.2e1 * t11 * t24 + 0.2e1 * t12 * t34 + 0.2e1 * t21 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t26, 0, 0, 0, 0, 0, 0, 0, 0, -t15, t14, t206, -pkin(3) * t27 + t115, 0, 0, 0, 0, 0, 0, t207, t15, -t14, t27 * t64 + t48 * t49 + t115, 0, 0, 0, 0, 0, 0, t207, -t14, -t15, t10 * t72 + t27 * t56 + t28 * t62 - t29 * t61 + t33 * t49 + t71 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, 0, -t95, 0, -t91, pkin(8) * t95, 0, 0, -t39, -t35, -t53, t39, t51, 0 (pkin(9) * t182 + (-pkin(3) * t110 + pkin(8) * t107) * t108) * qJD(4) + (t107 * t139 - t88) * qJD(3) (pkin(8) * t183 + t107 * t138) * qJD(4) + (t110 * t139 + t87) * qJD(3), t117, -pkin(3) * t91 + pkin(9) * t117, 0, t53, -t51, -t39, -t35, t39, t118, t119 * t107 - t201 * t110, t201 * t107 + t119 * t110, pkin(9) * t118 + t17 * t64 + t47 * t48, 0, -t51, -t53, t39, t35, -t39 (t71 * t170 + t108 * t62 + t11 + (-t108 * t72 + t21) * qJD(4)) * t110 + (-t72 * t170 + t108 * t61 + t6 + (-t108 * t71 - t24) * qJD(4)) * t107, -t192 + t111 * t61 + t126 * t110 + (qJD(3) * t72 + t127) * t108, -t191 + t111 * t62 + (-qJD(3) * t71 + t163) * t108 + (t108 * t33 - t126) * t107, t11 * t72 + t12 * t56 + t21 * t62 - t24 * t61 + t33 * t34 + t6 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t60, 0, t80, 0, 0, t107 * t167, t110 * t167, 0, 0, 0, 0, 0, t79, t60, t80, 0, 0.2e1 * t110 * t48 - 0.2e1 * t64 * t97, -0.2e1 * t107 * t48 - 0.2e1 * t64 * t98, 0.2e1 * t64 * t48, 0, 0, 0, t80, 0.2e1 * t68, t79, 0.2e1 * t62 * t107 - 0.2e1 * t61 * t110 + 0.2e1 * (-t107 * t72 + t110 * t71) * qJD(4), -0.2e1 * t107 * t33 - 0.2e1 * t163, 0.2e1 * t127, 0.2e1 * t33 * t56 - 0.2e1 * t61 * t72 + 0.2e1 * t62 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t9, -t10, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, t10, -pkin(4) * t9 + t132, 0, 0, 0, 0, 0, 0, 0, t10, -t9, -qJD(6) * t28 + t106 * t9 + t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -t52, t95, -t146, t18, 0, 0, t95, t50, t52, 0, 0, 0 (-pkin(4) * t170 - qJ(5) * t175) * t110 + (-t161 + (pkin(4) * qJD(4) - qJD(5)) * t108) * t107, t146 - 0.2e1 * t165, t116, -pkin(4) * t16 - qJ(5) * t13 - qJD(5) * t38, t95, t52, -t50, 0, 0, 0, t130 * t170 + ((-t106 * t107 - t188) * qJD(4) + t128) * t108, -pkin(5) * t52 + t116, -0.2e1 * t171 + (-t166 - 0.2e1 * t203) * qJD(3) - t122, qJ(5) * t11 + qJD(5) * t24 - qJD(6) * t21 + t106 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, -t97, 0, -t93, t164, 0, 0, 0, -t98, t97, 0, 0, 0, t204, t93, -t164, t204 * pkin(9), 0, t97, t98, 0, 0, 0, t130 * qJD(4) - t172 + t96, -t61, -t62, -qJ(5) * t61 + qJD(5) * t72 - t71 * qJD(6) + t106 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0.2e1 * t179, 0, 0, 0, 0, 0, 0, 0, t112, 0.2e1 * qJD(6), -0.2e1 * qJD(6) * t106 + 0.2e1 * t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t95, 0, t16, 0, 0, 0, 0, 0, 0, -t50, 0, -t95, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, t93, 0, 0, 0, 0, 0, 0, t98, 0, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t95, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, 0, 0, -t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
