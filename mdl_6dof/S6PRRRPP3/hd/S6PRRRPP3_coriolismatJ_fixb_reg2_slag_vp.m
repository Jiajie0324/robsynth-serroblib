% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:58:37
% EndTime: 2019-03-08 22:59:01
% DurationCPUTime: 17.27s
% Computational Cost: add. (6876->786), mult. (17130->896), div. (0->0), fcn. (16649->8), ass. (0->515)
t512 = sin(qJ(3));
t515 = cos(qJ(3));
t509 = sin(pkin(6));
t513 = sin(qJ(2));
t748 = t509 * t513;
t789 = cos(pkin(6));
t391 = t512 * t748 - t515 * t789;
t511 = sin(qJ(4));
t188 = t391 * t511;
t516 = cos(qJ(2));
t747 = t509 * t516;
t664 = t511 * t747;
t392 = t512 * t789 + t515 * t748;
t514 = cos(qJ(4));
t760 = t392 * t514;
t266 = -t664 + t760;
t445 = t514 * t748;
t627 = t747 / 0.2e1;
t602 = t511 * t627;
t741 = t512 * t514;
t623 = -t741 / 0.2e1;
t605 = t391 * t623;
t819 = -t266 / 0.2e1;
t640 = t515 * t819;
t529 = t515 * t602 - t445 / 0.2e1 + t605 + t640;
t872 = -qJD(2) * t529 + t188 * qJD(3) - t266 * qJD(4);
t684 = t392 * qJD(3);
t877 = t188 * qJD(4) - t514 * t684;
t190 = t391 * t514;
t876 = t190 * qJD(4) + t511 * t684;
t352 = t515 * t664 - t445;
t735 = t514 * t516;
t662 = t515 * t735;
t740 = t513 * t511;
t353 = (t662 + t740) * t509;
t798 = t514 / 0.2e1;
t800 = t511 / 0.2e1;
t875 = t352 * t800 + t353 * t798;
t505 = t511 ^ 2;
t507 = t514 ^ 2;
t874 = -t505 - t507;
t746 = t511 * qJ(5);
t592 = -pkin(4) * t514 - t746;
t427 = -pkin(3) + t592;
t790 = t515 * pkin(9);
t667 = t790 / 0.2e1;
t799 = t512 / 0.2e1;
t873 = t427 * t799 + t667;
t502 = pkin(4) * t511;
t787 = qJ(5) * t514;
t585 = qJ(6) * t511 - t787;
t401 = t502 + t585;
t757 = t401 * t511;
t510 = pkin(4) + qJ(6);
t829 = -t510 * t514 - t746;
t395 = -pkin(3) + t829;
t759 = t395 * t514;
t210 = t757 + t759;
t663 = t509 * t735;
t761 = t392 * t511;
t265 = t663 + t761;
t538 = (-t265 * t511 - t266 * t514 + t392) * t391;
t831 = t538 * qJD(1);
t871 = -t188 * qJD(5) + t831;
t665 = t512 * t747;
t525 = t265 * t352 + t266 * t353 + t391 * t665;
t833 = t525 * qJD(1);
t870 = t529 * qJD(5) + t833;
t628 = -t747 / 0.2e1;
t603 = t511 * t628;
t566 = t819 + t603;
t520 = t605 + t445 / 0.2e1 + t566 * t515;
t869 = qJD(5) * t520 - t833;
t801 = -t511 / 0.2e1;
t864 = (t265 * t798 + t266 * t801) * t515 + t875;
t868 = t864 * qJD(3);
t676 = t515 * qJD(2);
t470 = -qJD(4) + t676;
t743 = t511 * t512;
t471 = pkin(4) * t743;
t499 = t512 * pkin(8);
t297 = t512 * t585 + t471 + t499;
t825 = pkin(5) + pkin(9);
t443 = t825 * t514;
t751 = t443 * t515;
t553 = t297 * t800 + t751 / 0.2e1;
t685 = t391 * qJD(3);
t867 = qJD(2) * t864 + t874 * t685;
t866 = (t352 * t741 - t353 * t743) * qJD(2) + t868;
t501 = t515 * pkin(4);
t794 = pkin(9) * t512;
t596 = -pkin(3) * t515 - t794;
t569 = -pkin(2) + t596;
t411 = t514 * t569;
t673 = pkin(5) * t741;
t600 = -t411 + t673;
t796 = pkin(8) * t511;
t209 = t501 + (qJ(6) + t796) * t515 + t600;
t742 = t511 * t515;
t674 = pkin(8) * t742;
t354 = -t411 + t674;
t272 = -t354 - t673;
t865 = t209 + t272;
t736 = t514 * t515;
t476 = pkin(8) * t736;
t355 = t511 * t569 + t476;
t734 = t515 * qJ(5);
t309 = -t355 + t734;
t863 = t309 + t355;
t495 = qJD(5) * t514;
t862 = t592 * qJD(4) + t495;
t601 = t514 * t628;
t414 = t512 * t601;
t821 = -t265 / 0.2e1;
t558 = (t761 / 0.2e1 + t821) * t512;
t70 = t414 + t558;
t861 = -qJD(2) * t70 - t877;
t632 = t760 / 0.2e1;
t67 = (t602 + t819 + t632) * t512;
t860 = qJD(2) * t67 + t876;
t315 = t354 + t501;
t812 = -t354 / 0.2e1;
t859 = t315 * t798 + t514 * t812;
t643 = t514 * t676;
t699 = qJD(4) * t514;
t418 = t643 - t699;
t494 = t515 * qJD(4);
t652 = t514 * t494;
t508 = t515 ^ 2;
t506 = t512 ^ 2;
t737 = t514 * t506;
t422 = t508 * t514 - t737;
t680 = t422 * qJD(2);
t340 = t680 - t652;
t677 = t512 * qJD(3);
t858 = -t511 * t677 + t680;
t653 = t511 * t494;
t745 = t511 * t506;
t421 = t508 * t511 - t745;
t681 = t421 * qJD(2);
t338 = t681 - t653;
t857 = t514 * t677 + t681;
t793 = t512 * pkin(3);
t444 = -t790 + t793;
t423 = t511 * t444;
t475 = pkin(8) * t741;
t370 = -t475 + t423;
t135 = t370 * t515 + (-t355 + 0.2e1 * t476) * t512;
t523 = (t632 + t566) * t512;
t732 = t523 * qJD(1);
t856 = t135 * qJD(2) + t732;
t770 = t354 * t515;
t247 = -pkin(8) * t745 - t770;
t532 = (t662 / 0.2e1 + t740 / 0.2e1) * t509;
t625 = t743 / 0.2e1;
t797 = t515 / 0.2e1;
t641 = t265 * t797;
t542 = t391 * t625 + t641;
t517 = t532 - t542;
t835 = t517 * qJD(1);
t855 = -qJD(2) * t247 - t835;
t246 = t297 * t743;
t498 = t512 * qJ(5);
t396 = pkin(4) * t741 + t511 * t498;
t344 = qJ(6) * t741 + t396;
t84 = t272 * t515 + t344 * t741 - t246;
t854 = qJD(2) * t84 + t835;
t769 = t355 * t515;
t248 = -pkin(8) * t737 - t769;
t834 = t520 * qJD(1);
t853 = qJD(2) * t248 + t834;
t852 = qJD(6) * t511 - t495;
t595 = -qJ(5) * t741 + t471;
t373 = t499 + t595;
t773 = t309 * t515;
t141 = t373 * t741 - t773;
t851 = qJD(2) * t141 - t834;
t113 = t769 + (t373 * t514 + t396 * t511) * t512;
t850 = qJD(2) * t113 - t834;
t102 = t515 * t601 - t509 * t740 / 0.2e1 - t542;
t725 = -t190 * qJD(3) - t265 * qJD(4);
t849 = qJD(2) * t102 - t725;
t273 = -pkin(5) * t743 + t355;
t244 = t273 - t734;
t777 = t244 * t515;
t121 = t297 * t741 + t777;
t848 = -qJD(2) * t121 + t834;
t771 = t344 * t511;
t775 = t297 * t514;
t83 = t273 * t515 + (t771 + t775) * t512;
t847 = -qJD(2) * t83 + t834;
t604 = t512 * t627;
t69 = t514 * t604 + t558;
t731 = t69 * qJD(1);
t474 = pkin(8) * t743;
t738 = t514 * t444;
t369 = t474 + t738;
t792 = t512 * pkin(4);
t320 = -t369 - t792;
t500 = t515 * pkin(8);
t719 = pkin(4) * t742 + t500;
t374 = -t514 * t734 + t719;
t77 = t320 * t515 - t315 * t512 + (t373 * t515 + t374 * t512) * t511;
t846 = -t77 * qJD(2) - t731;
t791 = t515 * pkin(5);
t222 = -t474 + (-t444 + t791) * t514 - t510 * t512;
t298 = t515 * t585 + t719;
t578 = t297 * t515 + t298 * t512;
t31 = -t209 * t512 + t222 * t515 + t511 * t578;
t845 = t31 * qJD(2) + t731;
t317 = -t498 - t370;
t249 = -pkin(5) * t742 - t317;
t37 = -t244 * t512 + t249 * t515 + t514 * t578;
t844 = -t37 * qJD(2) - t732;
t813 = -t352 / 0.2e1;
t519 = (t641 - t353 / 0.2e1) * t514 + (t640 + t813) * t511;
t843 = qJD(1) * t519;
t842 = qJD(2) * t517;
t841 = qJD(2) * t519;
t840 = qJD(2) * t520;
t786 = qJD(2) * t523;
t838 = qJD(3) * t519;
t837 = qJD(4) * t520;
t675 = t515 * qJD(3);
t442 = t825 * t511;
t752 = t442 * t515;
t830 = t752 / 0.2e1 - t775 / 0.2e1;
t461 = t507 - t505;
t828 = 0.2e1 * t511 * t741 * (qJD(4) + t676) - t461 * t675;
t827 = -qJD(4) * t529 + qJD(2) * (t352 * t515 + t506 * t664);
t826 = qJD(2) * t525 + qJD(3) * t538;
t570 = qJD(3) * t523 + qJD(4) * t517;
t824 = qJ(5) / 0.2e1;
t823 = -qJ(6) / 0.2e1;
t822 = -t244 / 0.2e1;
t820 = t265 / 0.2e1;
t818 = t266 / 0.2e1;
t817 = t272 / 0.2e1;
t816 = t273 / 0.2e1;
t815 = -t320 / 0.2e1;
t814 = -t344 / 0.2e1;
t811 = t391 / 0.2e1;
t810 = -t392 / 0.2e1;
t809 = -t396 / 0.2e1;
t808 = -t401 / 0.2e1;
t440 = t502 - t787;
t807 = -t440 / 0.2e1;
t806 = t442 / 0.2e1;
t805 = t443 / 0.2e1;
t804 = -t444 / 0.2e1;
t803 = -t501 / 0.2e1;
t802 = -t510 / 0.2e1;
t788 = qJ(5) * t265;
t785 = qJD(2) * t69;
t779 = t209 * t515;
t620 = t816 + t822;
t621 = t209 / 0.2e1 + t817;
t21 = (t510 * t797 + t621) * t514 + (t734 / 0.2e1 + t620) * t511;
t778 = t21 * qJD(2);
t28 = ((-t244 + t273) * t514 - t865 * t511) * t512;
t776 = t28 * qJD(2);
t774 = t309 * t511;
t767 = t373 * t511;
t766 = t374 * t514;
t763 = t391 * t344;
t762 = t391 * t396;
t753 = t440 * t511;
t624 = -t742 / 0.2e1;
t447 = qJ(5) * t624;
t635 = t355 * t801;
t639 = -t774 / 0.2e1;
t552 = t639 + t635;
t619 = t354 / 0.2e1 - t315 / 0.2e1;
t45 = t447 + (t803 + t619) * t514 + t552;
t750 = t45 * qJD(2);
t749 = t505 * t506;
t744 = t511 * t510;
t739 = t514 * t309;
t59 = (t863 * t514 + (-t315 + t354) * t511) * t512;
t733 = t59 * qJD(2);
t724 = t442 * qJD(4);
t722 = t874 * pkin(9) * t391;
t403 = t423 / 0.2e1;
t721 = t403 - t475 / 0.2e1;
t405 = t738 / 0.2e1;
t720 = t405 + t474 / 0.2e1;
t110 = t246 + t779;
t715 = qJD(2) * t110;
t114 = -t373 * t743 + t396 * t741 - t770;
t713 = qJD(2) * t114;
t709 = qJD(2) * (-t353 * t515 - t506 * t663);
t706 = qJD(2) * t509;
t705 = qJD(3) * t511;
t704 = qJD(3) * t514;
t703 = qJD(4) * t354;
t702 = qJD(4) * t355;
t701 = qJD(4) * t443;
t700 = qJD(4) * t511;
t618 = -t505 / 0.2e1 + t507 / 0.2e1;
t383 = (0.1e1 / 0.2e1 + t618) * t512;
t698 = qJD(5) * t383;
t697 = qJD(5) * t511;
t696 = qJD(5) * t515;
t694 = qJD(6) * t514;
t693 = qJD(6) * t515;
t131 = (t391 * t512 + t392 * t515 - t748) * t747;
t690 = t131 * qJD(1);
t384 = (-0.1e1 / 0.2e1 + t618) * t512;
t686 = t384 * qJD(5);
t402 = t618 * t512;
t683 = t402 * qJD(4);
t441 = t461 * qJD(4);
t462 = t508 - t506;
t679 = t462 * qJD(2);
t678 = t512 * qJD(2);
t672 = pkin(2) * t678;
t671 = pkin(2) * t676;
t670 = pkin(9) * t700;
t669 = -t792 / 0.2e1;
t668 = t791 / 0.2e1;
t666 = -pkin(4) / 0.2e1 + t823;
t622 = -t736 / 0.2e1;
t661 = -t767 / 0.2e1 + t427 * t623 + pkin(9) * t622;
t660 = t498 + t721;
t659 = qJ(5) * t696;
t658 = t514 * t678;
t651 = t512 * t697;
t650 = t511 * t495;
t649 = t511 * t694;
t648 = t512 * t694;
t647 = t516 * t706;
t466 = t511 * t699;
t465 = t511 * t704;
t646 = t511 * t676;
t645 = t512 * t675;
t644 = t512 * t676;
t642 = -t787 / 0.2e1;
t637 = t353 * t824;
t634 = -t188 / 0.2e1;
t633 = -t190 / 0.2e1;
t630 = -t753 / 0.2e1;
t626 = -t743 / 0.2e1;
t617 = t802 + t823;
t404 = -t423 / 0.2e1;
t616 = t404 + t475 / 0.2e1 - t498;
t615 = t835 - t696;
t276 = qJD(2) * t383 + t465;
t614 = qJD(2) * t384 + t465;
t321 = qJD(2) * t402 + t465;
t488 = t507 * t506;
t419 = -t488 + t749;
t438 = t512 * t465;
t310 = qJD(2) * t419 - 0.2e1 * t438;
t436 = t511 * qJD(2) * t737;
t260 = qJD(3) * t383 - t436;
t613 = qJD(3) * t384 - t436;
t287 = qJD(3) * t402 - t436;
t612 = pkin(3) * t628;
t452 = -t474 / 0.2e1;
t610 = t452 + t661;
t609 = t511 * t658;
t608 = t506 * t466;
t607 = t506 * t650;
t606 = t511 * t648;
t599 = t804 + t668;
t448 = pkin(5) * t624;
t597 = t448 + t498 / 0.2e1 + t721;
t432 = t470 * qJ(5);
t433 = t508 + t749;
t594 = qJD(2) * t433 - t438 - t494;
t434 = t488 + t508;
t274 = qJD(2) * t434 + t438 - t494;
t593 = pkin(3) * t625 + pkin(9) * t624;
t591 = -t427 * t515 + t794;
t522 = t352 * t806 + t353 * t805 + t395 * t604;
t527 = t222 * t821 + t249 * t819 + t297 * t810;
t1 = (-t298 / 0.2e1 + t209 * t800 + t244 * t798) * t391 + t522 + t527;
t19 = t209 * t222 + t244 * t249 + t297 * t298;
t590 = -t1 * qJD(1) + t19 * qJD(2);
t22 = t209 * t273 + t244 * t272 + t297 * t344;
t551 = t352 * t802 + t637;
t5 = -t763 / 0.2e1 - t621 * t266 - t620 * t265 + t551;
t589 = -t5 * qJD(1) + t22 * qJD(2);
t540 = t875 * pkin(9);
t521 = t427 * t604 + t540;
t526 = t265 * t815 + t317 * t818 + t373 * t810;
t3 = (-t374 / 0.2e1 - t739 / 0.2e1 + t315 * t800) * t391 + t521 + t526;
t34 = t309 * t317 + t315 * t320 + t373 * t374;
t588 = -t3 * qJD(1) + t34 * qJD(2);
t41 = t309 * t354 + t315 * t355 + t373 * t396;
t562 = pkin(4) * t813 + t637;
t9 = -t762 / 0.2e1 + t619 * t266 + (-t309 / 0.2e1 - t355 / 0.2e1) * t265 + t562;
t587 = -t9 * qJD(1) + t41 * qJD(2);
t586 = t395 * t625 + t830;
t555 = t369 * t820 + t370 * t819;
t11 = t512 * t612 + t499 * t810 + t540 + (t355 * t798 + t354 * t800 - t500 / 0.2e1) * t391 + t555;
t85 = pkin(8) ^ 2 * t512 * t515 - t354 * t369 + t355 * t370;
t584 = -t11 * qJD(1) + t85 * qJD(2);
t23 = (t222 * t512 + t779) * t514 + (-t249 * t512 - t777) * t511;
t583 = -t23 * qJD(2) - t843;
t47 = (t315 * t515 + t320 * t512) * t514 + (t317 * t512 + t773) * t511;
t582 = t47 * qJD(2) + t843;
t78 = (t369 * t512 - t770) * t514 + (t370 * t512 + t769) * t511;
t581 = -t78 * qJD(2) + t843;
t76 = t373 * t736 - t317 * t515 + (t309 + t766) * t512;
t580 = -t76 * qJD(2) - t732;
t579 = qJD(3) * t69 - t837;
t577 = -t317 * t514 + t320 * t511;
t576 = -t369 * t511 + t370 * t514;
t134 = t354 * t512 + (t369 - 0.2e1 * t474) * t515;
t543 = t265 * t799 + t392 * t626;
t65 = t414 + t543;
t575 = -t65 * qJD(1) - t134 * qJD(2);
t530 = t401 * t623 + t586;
t30 = (t814 + t668) * t511 + t530 + t616;
t574 = -qJD(2) * t30 + qJD(3) * t210;
t211 = -t395 * t511 + t401 * t514;
t561 = t759 / 0.2e1 + t666;
t24 = t452 + (t814 + t599) * t514 + (t757 / 0.2e1 + t802 + t561) * t512 + t553;
t573 = -qJD(2) * t24 + qJD(3) * t211;
t279 = t427 * t514 + t753;
t518 = (t512 * t807 - t373 / 0.2e1) * t514 + (t809 + t873) * t511;
t73 = t518 + t616;
t572 = -qJD(2) * t73 + qJD(3) * t279;
t280 = -t427 * t511 + t440 * t514;
t74 = t396 * t798 + (t630 + pkin(4)) * t512 + t661 + t720;
t571 = -qJD(2) * t74 - qJD(3) * t280;
t380 = t515 * t617 + t803;
t568 = qJD(2) * t380 + qJD(4) * t510;
t567 = -t694 - t697;
t565 = t667 - t793 / 0.2e1;
t564 = t642 + t502 / 0.2e1;
t563 = -t317 * qJ(5) / 0.2e1 + pkin(4) * t815;
t263 = t403 + t593;
t560 = pkin(3) * t704 - qJD(2) * t263;
t264 = (t804 + t565) * t514;
t559 = pkin(3) * t705 - qJD(2) * t264;
t556 = t222 * t802 + t249 * t824;
t554 = t297 * t808 + t395 * t814;
t550 = t744 / 0.2e1 + t642;
t539 = t514 * t599 + t452;
t79 = t512 * t561 + t539 + t553;
t547 = qJD(2) * t79 + t395 * t705;
t81 = t395 * t626 + t597 - t830;
t546 = qJD(2) * t81 + t395 * t704;
t377 = t470 * t743;
t108 = t452 + t669 + t767 / 0.2e1 + (t804 + t873) * t514;
t545 = qJD(2) * t108 + t427 * t705;
t365 = -qJD(3) * t461 + 0.2e1 * t609;
t541 = qJD(3) * t421 + t512 * t652;
t313 = -qJD(3) * t422 + t512 * t653;
t123 = t395 * t401;
t13 = (t808 + t550) * t391;
t7 = -t442 * t620 - t443 * t621 + t554 + t556;
t537 = t13 * qJD(1) + t7 * qJD(2) - t123 * qJD(3);
t535 = qJD(3) * t70 + t827;
t534 = -qJD(3) * t67 - qJD(4) * t102 + t709;
t533 = -qJD(4) * t419 + 0.2e1 * t438 * t515;
t524 = pkin(9) * t635 + t373 * t807 + t427 * t809;
t15 = (t514 * t619 + t639) * pkin(9) + t524 + t563;
t35 = (t807 + t564) * t391;
t531 = t427 * t440 * qJD(3) - t35 * qJD(1) - t15 * qJD(2);
t503 = qJ(5) * qJD(5);
t493 = t505 * qJD(5);
t492 = pkin(9) * t699;
t486 = qJ(5) * t494;
t482 = -t678 / 0.2e1;
t481 = t678 / 0.2e1;
t480 = t677 / 0.2e1;
t439 = t506 * pkin(8) * t747;
t437 = t512 * t650;
t435 = t515 * t651;
t424 = t434 * qJD(5);
t417 = t646 - t700;
t409 = (t676 - qJD(4) / 0.2e1) * t512;
t394 = -qJD(3) * t507 + t609;
t393 = qJD(3) * t505 + t609;
t379 = t418 * t512;
t378 = (t658 + t705) * t515;
t376 = t511 * t644 - t514 * t675;
t357 = t507 * t645 - t608;
t356 = t505 * t645 + t608;
t329 = t514 * t377;
t304 = 0.2e1 * t329;
t285 = -t507 * t644 + t683;
t284 = -t505 * t644 - t683;
t252 = t266 * qJD(5);
t221 = t514 * t565 + t405 + t474;
t220 = t475 + t404 + t593;
t206 = t683 + (t507 * t678 + t465) * t515;
t205 = -t683 + (t505 * t678 - t465) * t515;
t159 = t803 + (t617 - t796) * t515 - t600;
t109 = -t738 / 0.2e1 + t669 + t610;
t96 = t532 + t542;
t82 = t586 + t597;
t80 = t395 * t623 + t512 * t666 + t539 - t553;
t75 = (t396 / 0.2e1 + t804) * t514 + (t630 - pkin(4)) * t512 + t610;
t72 = t518 + t660;
t71 = t266 * t799 + t392 * t623 + t512 * t603;
t66 = t414 - t543;
t46 = pkin(4) * t622 + t447 - t552 + t859;
t36 = t391 * t564 + t440 * t811;
t29 = -t771 / 0.2e1 + t448 + t530 + t660;
t26 = qJD(2) * t96 + t725;
t25 = t792 / 0.2e1 + pkin(5) * t622 + t814 * t514 + t720 + (qJ(6) + t510 + t210) * t799 + t553;
t20 = t510 * t622 + t511 * t620 + t514 * t621 + t447;
t16 = -t524 + t563 + (t774 / 0.2e1 + t859) * pkin(9);
t14 = t391 * t550 + t401 * t811;
t12 = t355 * t633 + t354 * t634 + t500 * t811 + (t392 * pkin(8) / 0.2e1 + t612) * t512 + t540 - t555;
t10 = t762 / 0.2e1 + t266 * t812 + t315 * t818 + t562 + t863 * t820;
t8 = t273 * t806 + t442 * t822 + t805 * t865 - t554 + t556;
t6 = t763 / 0.2e1 + t209 * t818 + t265 * t816 + t244 * t821 + t266 * t817 + t551;
t4 = t315 * t634 + t521 - t526 + (t374 + t739) * t811;
t2 = t209 * t634 + t244 * t633 + t298 * t811 + t522 - t527;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t131, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t513 * t706, -t647, 0, 0, 0, 0, 0, 0, 0, 0 (-t513 * t676 - t516 * t677) * t509 (t513 * t678 - t516 * t675) * t509 (t506 + t508) * t647, t690 + (t439 + (pkin(8) * t508 * t516 - pkin(2) * t513) * t509) * qJD(2), 0, 0, 0, 0, 0, 0, t66 * qJD(3) + t827, -t534, t868 + (t352 * t514 - t353 * t511) * t678, t833 + (t352 * t354 + t353 * t355 + t439) * qJD(2) + t12 * qJD(3), 0, 0, 0, 0, 0, 0, t866, -t535, t71 * qJD(3) + t96 * qJD(4) + t709 (-t353 * t309 + t352 * t315 + t373 * t665) * qJD(2) + t4 * qJD(3) + t10 * qJD(4) + t870, 0, 0, 0, 0, 0, 0, t866, t534, t535 (t352 * t209 + t353 * t244 + t297 * t665) * qJD(2) + t2 * qJD(3) + t6 * qJD(4) + t96 * qJD(6) + t870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512 * t647 - t684, -t515 * t647 + t685, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t66 + t877, t860, t867, t831 + t12 * qJD(2) + (-pkin(3) * t392 + t722) * qJD(3), 0, 0, 0, 0, 0, 0, t867, t861, qJD(2) * t71 - t876, t4 * qJD(2) + (t392 * t427 + t722) * qJD(3) + t36 * qJD(4) + t871, 0, 0, 0, 0, 0, 0, t867, -t860, -t861, t2 * qJD(2) + (t392 * t395 + (-t442 * t511 - t443 * t514) * t391) * qJD(3) + t14 * qJD(4) - t190 * qJD(6) + t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t872, t849, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t872, t26, t10 * qJD(2) + t36 * qJD(3) + (-pkin(4) * t266 - t788) * qJD(4) + t252, 0, 0, 0, 0, 0, 0, 0, -t849, t872, t6 * qJD(2) + t14 * qJD(3) + (-t266 * t510 - t788) * qJD(4) + t252 - t265 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t872, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t690, 0, 0, 0, 0, 0, 0, -qJD(3) * t65 - t837, t570, t838, -qJD(3) * t11 - t833, 0, 0, 0, 0, 0, 0, t838, -t579, -t570, -qJD(3) * t3 - qJD(4) * t9 + t869, 0, 0, 0, 0, 0, 0, t838, -t570, t579, -qJD(3) * t1 - qJD(4) * t5 - qJD(6) * t517 + t869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t645, t462 * qJD(3), 0, -t645, 0, 0, -pkin(2) * t677, -pkin(2) * t675, 0, 0, t357, -t533, t313, t356, t541, -t645, -qJD(3) * t134 - qJD(4) * t248, qJD(3) * t135 + qJD(4) * t247, -qJD(3) * t78, qJD(3) * t85, -t645, -t313, -t541, t357, -t533, t356, qJD(3) * t47 + qJD(4) * t59 + t435, -qJD(3) * t77 - qJD(4) * t113 + t607, -qJD(3) * t76 - qJD(4) * t114 + t424, qJD(3) * t34 + qJD(4) * t41 - qJD(5) * t141, -t645, -t541, t313, t356, t533, t357, qJD(3) * t23 + qJD(4) * t28 + t515 * t648 + t435, -qJD(3) * t37 - qJD(4) * t84 - t506 * t649 + t424, qJD(3) * t31 + qJD(4) * t83 + qJD(6) * t433 - t607, qJD(3) * t19 + qJD(4) * t22 - qJD(5) * t121 + qJD(6) * t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t644, t679, t675, -t644, -t677, 0, -pkin(8) * t675 - t672, pkin(8) * t677 - t671, 0, 0, t206, -t828, -t858, t205, t857, -t409 (t511 * t596 - t476) * qJD(3) + t221 * qJD(4) + t575 (t514 * t596 + t674) * qJD(3) + t220 * qJD(4) + t856, qJD(3) * t576 + t581 (-pkin(3) * t500 + pkin(9) * t576) * qJD(3) + t584, -t409, t858, -t857, t206, -t828, t205, qJD(3) * t577 + t46 * qJD(4) + t582 (t511 * t591 + t766) * qJD(3) + t75 * qJD(4) - t686 + t846 (-t374 * t511 + t514 * t591) * qJD(3) + t72 * qJD(4) + t437 + t580 (pkin(9) * t577 + t374 * t427) * qJD(3) + t16 * qJD(4) + t109 * qJD(5) + t588, -t409, -t857, -t858, t205, t828, t206 ((t249 + t752) * t514 + (t222 - t751) * t511) * qJD(3) + t20 * qJD(4) - t583 (-t298 * t511 - t395 * t736 + t443 * t512) * qJD(3) + t29 * qJD(4) + t437 + t383 * qJD(6) + t844 (-t298 * t514 + t395 * t742 - t442 * t512) * qJD(3) + t25 * qJD(4) + t686 - t606 + t845 (t222 * t442 + t249 * t443 + t298 * t395) * qJD(3) + t8 * qJD(4) + t80 * qJD(5) + t82 * qJD(6) + t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, t310, t377, -t287, t379, t480, qJD(3) * t221 - t702 - t853, qJD(3) * t220 + t703 - t855, 0, 0, t480, -t377, -t379, t287, t310, -t287, t46 * qJD(3) + qJD(4) * t595 - t651 + t733, qJD(3) * t75 + t702 - t850, qJD(3) * t72 - t696 - t703 - t713 - t835, t16 * qJD(3) + (-pkin(4) * t355 - qJ(5) * t354) * qJD(4) - t309 * qJD(5) + t587, t480, -t379, t377, -t287, -t310, t287, t776 + t20 * qJD(3) + ((t744 - t787) * qJD(4) + t567) * t512, qJD(3) * t29 + qJD(4) * t272 - t696 - t854, qJD(3) * t25 - qJD(4) * t273 - t693 - t847, t8 * qJD(3) + (qJ(5) * t272 - t273 * t510) * qJD(4) + t244 * qJD(5) + t159 * qJD(6) + t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, -t613, t274, qJD(3) * t109 - qJD(4) * t309 - t851, 0, 0, 0, 0, 0, 0, t377, t274, t613, qJD(3) * t80 + qJD(4) * t244 + t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, t260, t594, qJD(3) * t82 + qJD(4) * t159 + t715 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t65, -t786, -t841, qJD(2) * t11 - t831, 0, 0, 0, 0, 0, 0, -t841, t785, t786, qJD(2) * t3 - qJD(4) * t35 - t831, 0, 0, 0, 0, 0, 0, -t841, t786, -t785, qJD(2) * t1 - qJD(4) * t13 - t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t644, -t679, 0, t644, 0, 0, t672, t671, 0, 0, t285, t304, t340, t284, -t338, t409, qJD(4) * t264 - t575, qJD(4) * t263 - t856, -t581, -t584, t409, -t340, t338, t285, t304, t284, -qJD(4) * t45 - t514 * t696 - t582, qJD(4) * t74 - t698 - t846, qJD(4) * t73 + t437 - t580, -qJD(4) * t15 - qJD(5) * t108 - t588, t409, t338, t340, t284, -0.2e1 * t329, t285, t21 * qJD(4) + t515 * t852 + t583, qJD(4) * t30 + qJD(6) * t384 + t437 - t844, qJD(4) * t24 - t606 + t698 - t845, -qJD(4) * t7 - qJD(5) * t79 - qJD(6) * t81 - t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, t441, 0, -t466, 0, 0, -pkin(3) * t700, -pkin(3) * t699, 0, 0, 0, 0, 0, t466, t441, -t466, 0, qJD(4) * t280 - t650, -qJD(4) * t279 + t493 (qJD(4) * t440 - t697) * t427, 0, 0, 0, -t466, -t441, t466, 0, -qJD(4) * t210 + t493 + t649, -qJD(4) * t211 + qJD(6) * t507 + t650, t123 * qJD(4) + t395 * t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, -t365, -t418, -t321, t417, t482, -t492 - t559, -t560 + t670, 0, 0, t482, t418, -t417, t321, -t365, -t321, -t750 + t862, -t571 + t492, -t572 - t670, pkin(9) * t862 + t531, t482, -t417, -t418, -t321, t365, t321, qJD(4) * t829 + t778 - t852, -t574 - t724, -t573 - t701 (-qJ(5) * t442 - t443 * t510) * qJD(4) + t443 * qJD(5) - t442 * qJD(6) - t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t276, t393, -t545 + t492, 0, 0, 0, 0, 0, 0, -t418, t393, t276, -t547 + t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t614, -t394, -t546 - t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t840, -t842, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t840, t842, qJD(2) * t9 + qJD(3) * t35, 0, 0, 0, 0, 0, 0, 0, t842, t840, qJD(2) * t5 + qJD(3) * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, -t310, -t376, t287, -t378, t480, -qJD(3) * t264 + t853, -qJD(3) * t263 + t855, 0, 0, t480, t376, t378, -t287, -t310, t287, qJD(3) * t45 - t733, -qJD(3) * t74 + t850, -qJD(3) * t73 + t615 + t713, qJD(3) * t15 - t587 - t659, t480, t378, -t376, t287, t310, -t287, -qJD(3) * t21 - t776, -qJD(3) * t30 - t696 + t854, -qJD(3) * t24 - t693 + t847, qJD(3) * t7 + qJD(6) * t380 - t589 - t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, t365, t643, t321, -t646, t481, t559, t560, 0, 0, t481, -t643, t646, -t321, t365, t321, t750, t571, t572, -t531, t481, t646, t643, t321, -t365, -t321, -t778, t574, t573, t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t503, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJD(6), qJD(6) * t510 + t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, -t432, 0, 0, 0, 0, 0, 0, 0, -t470, 0, -t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t840, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, t260, -t274, qJD(3) * t108 + t486 + t851, 0, 0, 0, 0, 0, 0, -t376, -t274, -t260, qJD(3) * t79 + t486 + t693 - t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t643, t276, -t393, t545, 0, 0, 0, 0, 0, 0, t643, -t393, -t276, t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t432, 0, 0, 0, 0, 0, 0, 0, t470, 0, -qJD(6) + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t613, -t594, qJD(3) * t81 - qJD(4) * t380 + t615 - t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t646, -t614, t394, t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, qJD(5) - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
