% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:58:29
% EndTime: 2019-03-08 22:58:43
% DurationCPUTime: 5.07s
% Computational Cost: add. (3996->475), mult. (10095->576), div. (0->0), fcn. (6995->8), ass. (0->233)
t153 = sin(qJ(4));
t156 = cos(qJ(4));
t154 = sin(qJ(3));
t257 = qJD(3) * t153;
t259 = qJD(2) * t156;
t108 = t154 * t259 + t257;
t157 = cos(qJ(3));
t258 = qJD(2) * t157;
t135 = -qJD(4) + t258;
t279 = t135 * t108;
t252 = t156 * qJD(3);
t260 = qJD(2) * t154;
t106 = t153 * t260 - t252;
t282 = t106 * t135;
t250 = qJD(3) * qJD(4);
t254 = qJD(4) * t153;
t232 = t154 * t254;
t336 = -t157 * t252 + t232;
t82 = t336 * qJD(2) - t156 * t250;
t253 = qJD(4) * t156;
t255 = qJD(3) * t157;
t176 = t153 * t255 + t154 * t253;
t83 = qJD(2) * t176 + t153 * t250;
t342 = (t83 - t279) * t153 + (t82 - t282) * t156;
t121 = -pkin(3) * t157 - pkin(9) * t154 - pkin(2);
t182 = t121 * qJD(2);
t158 = cos(qJ(2));
t150 = sin(pkin(6));
t263 = qJD(1) * t150;
t227 = t158 * t263;
t168 = t182 - t227;
t155 = sin(qJ(2));
t228 = t155 * t263;
t114 = qJD(2) * pkin(8) + t228;
t151 = cos(pkin(6));
t261 = qJD(2) * t150;
t237 = t158 * t261;
t174 = qJD(1) * (qJD(3) * t151 + t237);
t256 = qJD(3) * t154;
t58 = -t114 * t256 + t157 * t174;
t341 = qJD(4) * t168 + t58;
t251 = qJD(2) * qJD(3);
t141 = t154 * t251;
t312 = pkin(4) + qJ(6);
t338 = t312 * t141;
t262 = qJD(1) * t151;
t226 = t154 * t262;
t88 = t157 * t114 + t226;
t78 = qJD(3) * pkin(9) + t88;
t205 = pkin(3) * t154 - pkin(9) * t157;
t113 = t205 * qJD(3);
t86 = (t113 + t228) * qJD(2);
t220 = t341 * t153 - t156 * t86 + t78 * t253;
t208 = t153 * t227;
t33 = t153 * t182 + t156 * t78 - t208;
t184 = -t135 * t33 - t220;
t221 = -t153 * t86 - t341 * t156 + t78 * t254;
t32 = t153 * t78 - t156 * t168;
t337 = -t135 * t32 - t221;
t238 = t155 * t261;
t277 = t150 * t158;
t209 = t157 * t237;
t278 = t150 * t155;
t95 = -t151 * t157 + t154 * t278;
t65 = -qJD(3) * t95 + t209;
t331 = -qJD(4) * t277 + t65;
t96 = t151 * t154 + t157 * t278;
t16 = t331 * t153 - t156 * t238 + t96 * t253;
t17 = t153 * t238 + t331 * t156 - t96 * t254;
t271 = t156 * t158;
t67 = t150 * t271 + t153 * t96;
t68 = -t153 * t277 + t156 * t96;
t335 = -t17 * t106 + t16 * t108 - t67 * t82 - t68 * t83;
t189 = t108 * pkin(5) + t32;
t267 = qJD(5) + t189;
t288 = t83 * t156;
t289 = t82 * t153;
t161 = ((t106 * t153 - t108 * t156) * qJD(4) - t288 + t289) * t154 - (t106 * t156 + t108 * t153) * t255;
t230 = t135 * t253;
t272 = t156 * t157;
t39 = ((-t108 + t257) * t154 + t135 * t272) * qJD(2) - t230;
t274 = t153 * t157;
t334 = ((t106 + t252) * t154 - t135 * t274) * qJD(2) + t135 * t254;
t148 = t154 ^ 2;
t192 = qJD(2) * t148 - t135 * t157;
t13 = (t106 * t154 + t153 * t192) * qJD(3) - t154 * t230 - t157 * t83;
t12 = (t108 * t154 + t156 * t192) * qJD(3) + t135 * t232 + t157 * t82;
t28 = t135 * qJ(5) - t33;
t215 = pkin(4) * t141;
t5 = -t215 + t220;
t333 = -t135 * t28 + t5;
t139 = pkin(8) * t272;
t332 = qJD(4) * t139 + t121 * t254 - t157 * t208 + (-t113 + t228) * t156;
t47 = t83 + t279;
t87 = -t154 * t114 + t157 * t262;
t103 = t106 ^ 2;
t104 = t108 ^ 2;
t224 = -t104 + t103;
t133 = t135 ^ 2;
t329 = -t104 - t133;
t125 = qJD(5) * t135;
t134 = qJ(5) * t141;
t328 = t134 - t125;
t327 = t153 * qJD(5) + t226 + (t153 * t258 - t254) * pkin(4);
t210 = t154 * t237;
t66 = qJD(3) * t96 + t210;
t171 = -t66 * t108 - t135 * t17 + t68 * t141 + t95 * t82;
t172 = t66 * t106 + t135 * t16 - t67 * t141 + t95 * t83;
t85 = (t153 * t155 + t157 * t271) * t263;
t326 = -pkin(8) * (t154 * t252 + t157 * t254) - t85;
t320 = pkin(5) + pkin(9);
t319 = pkin(8) * t153;
t318 = pkin(9) * t135;
t317 = t106 * pkin(5);
t9 = t312 * t135 + t267;
t316 = t135 * t9;
t59 = t114 * t255 + t154 * t174;
t315 = t59 * t95;
t162 = t82 * qJ(5) - t108 * qJD(5) + t59;
t8 = t83 * pkin(4) + t162;
t314 = t8 * t153;
t313 = t8 * t156;
t239 = -pkin(4) - t319;
t248 = pkin(5) * t272;
t309 = -pkin(5) * t232 + t157 * qJD(6) + (t248 + (-qJ(6) + t239) * t154) * qJD(3) + t332;
t138 = pkin(8) * t274;
t287 = t153 * t113 + t121 * t253;
t204 = -t157 * qJD(5) + t287;
t249 = pkin(5) * t274;
t273 = t154 * t156;
t308 = (-pkin(5) * t273 - t138) * qJD(4) + (-t249 + (-pkin(8) * t156 + qJ(5)) * t154) * qJD(3) + t204 - t85;
t307 = -qJ(5) * t256 - t204 - t326;
t306 = t239 * t256 + t332;
t195 = -qJ(5) * t156 + qJ(6) * t153;
t305 = (t195 * qJD(2) + t114) * t157 - t195 * qJD(4) + t156 * qJD(6) + t327;
t304 = t287 + t326;
t303 = -t256 * t319 + t332;
t302 = (-qJ(5) * t259 + t114) * t157 + qJ(5) * t253 + t327;
t110 = t205 * qJD(2);
t52 = t153 * t110 + t156 * t87;
t301 = qJ(5) * t83;
t300 = qJD(2) * pkin(2);
t77 = -qJD(3) * pkin(3) - t87;
t169 = -t108 * qJ(5) + t77;
t34 = pkin(4) * t106 + t169;
t299 = t108 * t34;
t295 = t153 * t77;
t294 = t156 * t77;
t24 = t312 * t106 + t169;
t293 = t24 * t108;
t292 = t59 * t153;
t291 = t59 * t154;
t290 = t59 * t156;
t286 = -t320 * t254 - (qJ(5) * t154 - t249) * qJD(2) - t52;
t123 = t320 * t156;
t51 = t156 * t110 - t153 * t87;
t285 = qJD(4) * t123 - (-t312 * t154 + t248) * qJD(2) + t51;
t284 = t106 * qJ(5);
t283 = t106 * t108;
t160 = qJD(2) ^ 2;
t276 = t150 * t160;
t275 = t153 * t154;
t159 = qJD(3) ^ 2;
t270 = t159 * t154;
t269 = t159 * t157;
t268 = -qJD(5) - t32;
t23 = t33 - t317;
t266 = -qJD(6) - t23;
t265 = pkin(4) * t275 + t154 * pkin(8);
t91 = t153 * t121 + t139;
t149 = t157 ^ 2;
t264 = t148 - t149;
t247 = t153 * t318;
t246 = t156 * t318;
t245 = pkin(9) * t256;
t244 = pkin(9) * t252;
t241 = t155 * t276;
t240 = t154 * t160 * t157;
t229 = t135 * t260;
t222 = -t153 * qJ(5) - pkin(3);
t219 = -t141 + t283;
t90 = t121 * t156 - t138;
t214 = t176 * pkin(4) + pkin(8) * t255 + qJ(5) * t232;
t213 = t106 * t227;
t212 = t108 * t227;
t211 = t154 * t227;
t207 = t157 * t141;
t206 = -t125 - t221;
t80 = qJ(5) * t157 - t91;
t115 = -t227 - t300;
t202 = -t115 - t227;
t200 = (qJD(4) * t106 - t82) * pkin(9);
t199 = (qJD(4) * t108 - t83) * pkin(9);
t27 = pkin(4) * t135 - t268;
t198 = t153 * t28 + t156 * t27;
t197 = -t153 * t33 + t156 * t32;
t188 = -t82 * pkin(5) + t220;
t187 = -pkin(5) * t83 - t221;
t3 = t106 * qJD(6) + t312 * t83 + t162;
t186 = t3 * t153 + t24 * t253;
t185 = -t3 * t156 + t24 * t254;
t183 = qJD(2) * t202;
t175 = -t106 * t24 + t187;
t173 = qJD(3) * (-t202 - t300);
t25 = -t156 * t279 - t289;
t26 = -t153 * t282 - t288;
t170 = t82 + t282;
t167 = t188 - t338;
t166 = t291 + t58 * t157 + (-t154 * t88 - t157 * t87) * qJD(3);
t20 = -t336 * t108 - t82 * t273;
t21 = t106 * t176 + t83 * t275;
t147 = t157 * pkin(4);
t132 = 0.2e1 * t134;
t122 = t320 * t153;
t116 = -pkin(4) * t156 + t222;
t99 = -t312 * t156 + t222;
t93 = -qJ(5) * t273 + t265;
t89 = (-t135 - t258) * t256;
t81 = t147 - t90;
t76 = t195 * t154 + t265;
t64 = pkin(4) * t108 + t284;
t61 = -pkin(5) * t275 - t80;
t60 = t157 * qJ(6) + t138 + t147 + (pkin(5) * t154 - t121) * t156;
t48 = t312 * t108 + t284;
t43 = (-qJ(5) * t255 - qJD(5) * t154) * t156 + t214;
t42 = -pkin(4) * t260 - t51;
t41 = -qJ(5) * t260 - t52;
t19 = t195 * t255 + (qJD(6) * t153 + (qJ(6) * qJD(4) - qJD(5)) * t156) * t154 + t214;
t14 = qJD(6) - t28 - t317;
t4 = -t134 - t206;
t2 = t187 + t328;
t1 = qJD(6) * t135 + t167;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, -t158 * t276, 0, 0, 0, 0, 0, 0, 0, 0, -t157 * t241 + (-t66 - t210) * qJD(3), t154 * t241 + (-t65 - t209) * qJD(3) (t154 * t66 + t157 * t65 + (-t154 * t96 + t157 * t95) * qJD(3)) * qJD(2), t58 * t96 + t315 + t88 * t65 - t87 * t66 + (t115 - t227) * t238, 0, 0, 0, 0, 0, 0, t172, -t171, t335, t16 * t32 + t17 * t33 + t220 * t67 - t221 * t68 + t66 * t77 + t315, 0, 0, 0, 0, 0, 0, t335, -t172, t171, t16 * t27 - t17 * t28 + t34 * t66 - t4 * t68 + t5 * t67 + t8 * t95, 0, 0, 0, 0, 0, 0, t335, t171, t172, t1 * t67 + t14 * t17 + t16 * t9 + t2 * t68 + t24 * t66 + t3 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t207, -0.2e1 * t264 * t251, t269, -0.2e1 * t207, -t270, 0, -pkin(8) * t269 + t154 * t173, pkin(8) * t270 + t157 * t173 (-t148 - t149) * qJD(2) * t227 + t166 ((t154 * t87 - t157 * t88) * t158 + (-t115 - t300) * t155) * t263 + t166 * pkin(8), t20, t161, t12, t21, -t13, t89, t303 * t135 + (t220 + (pkin(8) * t106 + t295) * qJD(3)) * t157 + (-t213 + t77 * t253 + pkin(8) * t83 + t292 + (qJD(2) * t90 - t32) * qJD(3)) * t154, t304 * t135 + (-t221 + (pkin(8) * t108 + t294) * qJD(3)) * t157 + (-t212 - t77 * t254 - pkin(8) * t82 + t290 + (-qJD(2) * t91 - t33) * qJD(3)) * t154, t82 * t90 - t83 * t91 + t303 * t108 - t304 * t106 + t197 * t255 + (t153 * t221 + t156 * t220 + (-t153 * t32 - t156 * t33) * qJD(4)) * t154, -t77 * t211 - t221 * t91 - t220 * t90 + t304 * t33 + t303 * t32 + (t255 * t77 + t291) * pkin(8), t89, -t12, t13, t20, t161, t21, t80 * t83 - t81 * t82 + t306 * t108 + t307 * t106 + t198 * t255 + (t153 * t4 + t156 * t5 + (-t153 * t27 + t156 * t28) * qJD(4)) * t154, -t43 * t106 - t93 * t83 + (-t257 * t34 - t5) * t157 - t306 * t135 + (t213 - t34 * t253 - t314 + (qJD(2) * t81 + t27) * qJD(3)) * t154, -t43 * t108 + t93 * t82 + (-t252 * t34 + t4) * t157 + t307 * t135 + (t212 + t34 * t254 - t313 + (-qJD(2) * t80 - t28) * qJD(3)) * t154, t4 * t80 + t5 * t81 + t8 * t93 + (t43 - t211) * t34 + t307 * t28 + t306 * t27, t89, t13, t12, t21, -t161, t20, -t60 * t82 - t61 * t83 + t309 * t108 - t308 * t106 + (-t14 * t153 + t156 * t9) * t255 + (t1 * t156 - t153 * t2 + (-t14 * t156 - t153 * t9) * qJD(4)) * t154, -t19 * t108 + t76 * t82 + (-t24 * t252 - t2) * t157 - t308 * t135 + (t212 + (qJD(2) * t61 + t14) * qJD(3) + t185) * t154, t19 * t106 + t76 * t83 + (t24 * t257 + t1) * t157 + t309 * t135 + (-t213 + (-qJD(2) * t60 - t9) * qJD(3) + t186) * t154, t1 * t60 + t2 * t61 + t3 * t76 + t309 * t9 + (t19 - t211) * t24 + t308 * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t264 * t160, 0, t240, 0, 0, t154 * t183, t157 * t183, 0, 0, t25, -t342, t39, t26, t334, t229, -pkin(3) * t83 - t88 * t106 + t51 * t135 - t290 + (t246 + t295) * qJD(4) + (t154 * t32 + (-t157 * t77 - t245) * t153) * qJD(2), pkin(3) * t82 - t88 * t108 - t52 * t135 + t292 + (-t247 + t294) * qJD(4) + (-t77 * t272 + (t33 - t244) * t154) * qJD(2), t106 * t52 + t108 * t51 + (t199 + t337) * t156 + (t200 - t184) * t153, -t59 * pkin(3) + t32 * t51 - t33 * t52 - t77 * t88 + (qJD(4) * t197 + t153 * t220 - t156 * t221) * pkin(9), t229, -t39, -t334, t25, -t342, t26, -t41 * t106 - t42 * t108 + (-t135 * t27 + t199 - t4) * t156 + (t200 + t333) * t153, -t116 * t83 + t42 * t135 + t313 + t302 * t106 + (-t153 * t34 - t246) * qJD(4) + (-t154 * t27 + (t157 * t34 + t245) * t153) * qJD(2), t116 * t82 - t41 * t135 - t314 + t302 * t108 + (-t156 * t34 + t247) * qJD(4) + (t34 * t272 + (t28 + t244) * t154) * qJD(2), t8 * t116 - t27 * t42 - t28 * t41 - t302 * t34 + (qJD(4) * t198 + t5 * t153 - t4 * t156) * pkin(9), t229, -t334, t39, t26, t342, t25, -t122 * t82 - t123 * t83 + t285 * t108 - t286 * t106 + (t2 - t316) * t156 + (t14 * t135 + t1) * t153, t99 * t82 - t286 * t135 + t305 * t108 + (t24 * t272 + (qJD(3) * t123 - t14) * t154) * qJD(2) - t186, t99 * t83 + t285 * t135 - t305 * t106 + (-t24 * t274 + (-qJD(3) * t122 + t9) * t154) * qJD(2) + t185, t1 * t122 + t2 * t123 + t14 * t286 - t24 * t305 + t285 * t9 + t3 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, -t224, -t170, -t283, -t47, t141, -t108 * t77 + t184, t106 * t77 - t337, 0, 0, t141, t170, t47, t283, -t224, -t283, pkin(4) * t82 - t301 + (-t28 - t33) * t108 + (t27 + t268) * t106, t106 * t64 - t184 - 0.2e1 * t215 + t299, -t34 * t106 + t64 * t108 + t135 * t268 + t132 + t206, -t5 * pkin(4) - t4 * qJ(5) + t268 * t28 - t27 * t33 - t34 * t64, t141, t47, -t170, -t283, t224, t283, -t301 + t312 * t82 + (t14 + t266) * t108 + (t9 - t267) * t106, t108 * t48 - t135 * t189 - 0.2e1 * t125 + t132 + t175, -t106 * t48 - t293 + (-0.2e1 * qJD(6) - t23) * t135 + 0.2e1 * t338 - t188, t2 * qJ(5) - t1 * t312 + t14 * t267 - t24 * t48 + t266 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t219, t329, t299 + t333, 0, 0, 0, 0, 0, 0, -t170, t329, t219, t293 + (qJD(6) + t14) * t135 + t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, t141 + t283, -t103 - t133, t175 - t316 + t328;];
tauc_reg  = t6;
