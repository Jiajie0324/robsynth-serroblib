% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRRRPP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:58:37
% EndTime: 2019-03-08 22:58:58
% DurationCPUTime: 12.16s
% Computational Cost: add. (5822->674), mult. (13995->834), div. (0->0), fcn. (13584->8), ass. (0->481)
t416 = cos(qJ(3));
t413 = sin(qJ(3));
t689 = pkin(9) * t413;
t509 = -pkin(3) * t416 - t689;
t344 = -pkin(2) + t509;
t415 = cos(qJ(4));
t634 = t415 * t416;
t385 = pkin(8) * t634;
t412 = sin(qJ(4));
t285 = t344 * t412 + t385;
t632 = t416 * qJ(5);
t253 = -t285 + t632;
t760 = t253 + t285;
t410 = sin(pkin(6));
t414 = sin(qJ(2));
t643 = t410 * t414;
t684 = cos(pkin(6));
t507 = t413 * t643 - t416 * t684;
t695 = t412 / 0.2e1;
t447 = t507 * t695;
t475 = t507 * t412;
t452 = t475 / 0.2e1;
t148 = t447 + t452;
t417 = cos(qJ(2));
t642 = t410 * t417;
t572 = t412 * t642;
t310 = t413 * t684 + t416 * t643;
t654 = t310 * t415;
t221 = -t572 + t654;
t469 = t507 * t413;
t446 = -t469 / 0.2e1;
t539 = t642 / 0.2e1;
t514 = t412 * t539;
t541 = -t643 / 0.2e1;
t691 = -t416 / 0.2e1;
t552 = t221 * t691;
t428 = t416 * t514 + t552 + (t446 + t541) * t415;
t766 = -qJD(2) * t428 + qJD(3) * t148 - qJD(4) * t221;
t587 = t310 * qJD(3);
t769 = qJD(4) * t148 - t415 * t587;
t474 = t507 * t415;
t450 = t474 / 0.2e1;
t692 = t415 / 0.2e1;
t150 = t507 * t692 + t450;
t768 = qJD(4) * t150 + t412 * t587;
t641 = t412 * qJ(5);
t503 = -pkin(4) * t415 - t641;
t339 = -pkin(3) + t503;
t685 = t416 * pkin(9);
t575 = t685 / 0.2e1;
t693 = t413 / 0.2e1;
t767 = t339 * t693 + t575;
t404 = pkin(4) * t412;
t682 = qJ(5) * t415;
t496 = qJ(6) * t412 - t682;
t315 = t404 + t496;
t652 = t315 * t412;
t411 = pkin(4) + qJ(6);
t727 = -t411 * t415 - t641;
t313 = -pkin(3) + t727;
t653 = t313 * t415;
t166 = t652 + t653;
t633 = t415 * t417;
t571 = t410 * t633;
t655 = t310 * t412;
t220 = t571 + t655;
t631 = t416 * t417;
t282 = (t412 * t631 - t414 * t415) * t410;
t637 = t414 * t412;
t283 = (t415 * t631 + t637) * t410;
t426 = t220 * t282 + t221 * t283 + t469 * t642;
t730 = t426 * qJD(1);
t765 = qJD(5) * t428 + t730;
t420 = -t220 * t475 - t221 * t474 + t310 * t507;
t733 = t420 * qJD(1);
t764 = -qJD(5) * t148 + t733;
t434 = t446 + t643 / 0.2e1;
t540 = -t642 / 0.2e1;
t515 = t412 * t540;
t712 = -t221 / 0.2e1;
t480 = t712 + t515;
t422 = t415 * t434 + t416 * t480;
t763 = qJD(5) * t422 - t730;
t583 = t416 * qJD(2);
t378 = -qJD(4) + t583;
t640 = t412 * t413;
t379 = pkin(4) * t640;
t401 = t413 * pkin(8);
t244 = t413 * t496 + t379 + t401;
t718 = pkin(5) + pkin(9);
t354 = t718 * t415;
t646 = t354 * t416;
t462 = t244 * t695 + t646 / 0.2e1;
t585 = t413 * qJD(2);
t567 = t415 * t585;
t518 = t412 * t567;
t408 = t415 ^ 2;
t721 = t412 ^ 2;
t581 = -t408 + t721;
t443 = qJD(3) * t581 + 0.2e1 * t518;
t762 = t507 / 0.2e1;
t639 = t412 * t416;
t380 = pkin(8) * t639;
t284 = -t344 * t415 + t380;
t638 = t413 * t415;
t226 = -pkin(5) * t638 - t284;
t403 = t416 * pkin(4);
t165 = t416 * qJ(6) - t226 + t403;
t761 = t165 + t226;
t690 = t416 / 0.2e1;
t759 = (t690 + t691) * t507;
t399 = qJD(5) * t415;
t758 = qJD(4) * t503 + t399;
t513 = t415 * t540;
t328 = t413 * t513;
t714 = -t220 / 0.2e1;
t466 = (t655 / 0.2e1 + t714) * t413;
t59 = t328 + t466;
t757 = -qJD(2) * t59 - t769;
t545 = t654 / 0.2e1;
t56 = (t514 + t712 + t545) * t413;
t756 = qJD(2) * t56 + t768;
t755 = t282 * t695 + t283 * t692;
t688 = t413 * pkin(3);
t355 = -t685 + t688;
t336 = t412 * t355;
t384 = pkin(8) * t638;
t614 = -t384 + t336;
t111 = t614 * t416 + (-t285 + 0.2e1 * t385) * t413;
t435 = (t545 + t480) * t413;
t629 = t435 * qJD(1);
t754 = t111 * qJD(2) + t629;
t753 = qJD(6) * t412 - t399;
t407 = t413 ^ 2;
t635 = t415 * t407;
t659 = t285 * t416;
t203 = -pkin(8) * t635 - t659;
t731 = t422 * qJD(1);
t752 = qJD(2) * t203 + t731;
t660 = t284 * t416;
t202 = -pkin(8) * t407 * t412 - t660;
t534 = t633 / 0.2e1;
t512 = t410 * t534;
t421 = (t512 + t714) * t416 + t434 * t412;
t732 = t421 * qJD(1);
t751 = -qJD(2) * t202 - t732;
t508 = -qJ(5) * t638 + t379;
t293 = t401 + t508;
t663 = t253 * t416;
t117 = t293 * t638 - t663;
t750 = qJD(2) * t117 - t731;
t620 = -qJD(3) * t150 - qJD(4) * t220;
t553 = t220 * t690;
t433 = t413 * t447 + t553;
t88 = t412 * t541 + t416 * t513 - t433;
t749 = -qJD(2) * t88 + t620;
t201 = t244 * t640;
t400 = t413 * qJ(5);
t314 = pkin(4) * t638 + t400 * t412;
t277 = qJ(6) * t638 + t314;
t72 = t226 * t416 + t277 * t638 - t201;
t748 = qJD(2) * t72 + t732;
t227 = -pkin(5) * t640 + t285;
t199 = t227 - t632;
t666 = t199 * t416;
t100 = t244 * t638 + t666;
t747 = -qJD(2) * t100 + t731;
t661 = t277 * t412;
t664 = t244 * t415;
t71 = t227 * t416 + (t661 + t664) * t413;
t746 = -qJD(2) * t71 + t731;
t58 = t413 * t512 + t466;
t628 = t58 * qJD(1);
t255 = t403 + t284;
t383 = pkin(8) * t640;
t636 = t415 * t355;
t527 = -t383 - t636;
t687 = t413 * pkin(4);
t260 = t527 - t687;
t615 = pkin(4) * t639 + pkin(8) * t416;
t294 = -t415 * t632 + t615;
t66 = t260 * t416 - t255 * t413 + (t293 * t416 + t294 * t413) * t412;
t745 = -t66 * qJD(2) - t628;
t686 = t416 * pkin(5);
t177 = -t383 + (-t355 + t686) * t415 - t411 * t413;
t245 = t416 * t496 + t615;
t490 = t244 * t416 + t245 * t413;
t27 = -t165 * t413 + t177 * t416 + t412 * t490;
t744 = t27 * qJD(2) + t628;
t257 = -t400 - t614;
t204 = -pkin(5) * t639 - t257;
t31 = -t199 * t413 + t204 * t416 + t415 * t490;
t743 = -qJD(2) * t31 - t629;
t96 = t659 + (t293 * t415 + t314 * t412) * t413;
t742 = qJD(2) * t96 - t731;
t706 = -t282 / 0.2e1;
t427 = (t553 - t283 / 0.2e1) * t415 + (t552 + t706) * t412;
t741 = qJD(1) * t427;
t740 = qJD(2) * t421;
t739 = qJD(2) * t422;
t738 = qJD(2) * t427;
t681 = qJD(2) * t435;
t736 = qJD(3) * t427;
t735 = qJD(4) * t422;
t353 = t718 * t412;
t647 = t353 * t416;
t728 = t647 / 0.2e1 - t664 / 0.2e1;
t429 = (-t408 - t721) * t507;
t431 = (t220 * t692 + t412 * t712) * t416 + t755;
t726 = qJD(2) * t431 + qJD(3) * t429;
t725 = qJD(3) * t431 + (t282 * t638 - t283 * t640) * qJD(2);
t724 = -qJD(4) * t428 + qJD(2) * (t282 * t416 + t407 * t572);
t705 = -t284 / 0.2e1;
t723 = t255 * t692 + t415 * t705 + t695 * t760;
t722 = qJD(2) * t426 + qJD(3) * t420;
t492 = qJD(3) * t435 + qJD(4) * t421;
t603 = qJD(3) * t415;
t375 = t412 * t603;
t351 = t413 * t375;
t720 = -0.2e1 * t351;
t719 = -pkin(4) / 0.2e1;
t717 = qJ(5) / 0.2e1;
t716 = -qJ(6) / 0.2e1;
t715 = -t199 / 0.2e1;
t713 = t220 / 0.2e1;
t711 = t221 / 0.2e1;
t710 = t226 / 0.2e1;
t709 = t227 / 0.2e1;
t708 = -t257 / 0.2e1;
t707 = -t277 / 0.2e1;
t704 = -t293 / 0.2e1;
t703 = t310 / 0.2e1;
t702 = -t313 / 0.2e1;
t701 = -t314 / 0.2e1;
t700 = t353 / 0.2e1;
t699 = t354 / 0.2e1;
t698 = -t355 / 0.2e1;
t697 = -t403 / 0.2e1;
t696 = -t411 / 0.2e1;
t694 = -t413 / 0.2e1;
t683 = qJ(5) * t220;
t680 = qJD(2) * t58;
t668 = t165 * t416;
t93 = t201 + t668;
t671 = qJD(2) * t93;
t97 = -t293 * t640 + t314 * t638 - t660;
t669 = qJD(2) * t97;
t532 = t709 + t715;
t533 = t165 / 0.2e1 + t710;
t17 = (t411 * t690 + t533) * t415 + (t632 / 0.2e1 + t532) * t412;
t667 = t17 * qJD(2);
t24 = ((-t199 + t227) * t415 - t761 * t412) * t413;
t665 = t24 * qJD(2);
t658 = t293 * t412;
t657 = t294 * t415;
t352 = t404 - t682;
t648 = t352 * t412;
t537 = -t639 / 0.2e1;
t357 = qJ(5) * t537;
t531 = -t253 / 0.2e1 - t285 / 0.2e1;
t506 = t531 * t412;
t530 = t284 / 0.2e1 - t255 / 0.2e1;
t37 = t357 + t506 + (t697 + t530) * t415;
t644 = t37 * qJD(2);
t48 = (t760 * t415 + (-t255 + t284) * t412) * t413;
t630 = t48 * qJD(2);
t619 = t353 * qJD(4);
t317 = t336 / 0.2e1;
t617 = t317 - t384 / 0.2e1;
t319 = t636 / 0.2e1;
t616 = t319 + t383 / 0.2e1;
t409 = t416 ^ 2;
t372 = t409 - t407;
t610 = qJD(2) * (-t283 * t416 - t407 * t571);
t334 = t372 * t412;
t607 = qJD(2) * t334;
t335 = t409 * t415 - t635;
t606 = qJD(2) * t335;
t605 = qJD(2) * t410;
t604 = qJD(3) * t412;
t602 = qJD(4) * t284;
t601 = qJD(4) * t285;
t600 = qJD(4) * t354;
t599 = qJD(4) * t412;
t598 = qJD(4) * t415;
t526 = t721 / 0.2e1 - t408 / 0.2e1;
t304 = (-0.1e1 / 0.2e1 + t526) * t413;
t597 = qJD(5) * t304;
t596 = qJD(5) * t412;
t595 = qJD(5) * t416;
t593 = qJD(6) * t415;
t592 = qJD(6) * t416;
t303 = (0.1e1 / 0.2e1 + t526) * t413;
t588 = t303 * qJD(5);
t586 = t372 * qJD(2);
t584 = t413 * qJD(3);
t582 = t416 * qJD(3);
t398 = t416 * qJD(4);
t580 = pkin(2) * t585;
t579 = pkin(2) * t583;
t578 = pkin(9) * t599;
t577 = -t687 / 0.2e1;
t576 = t686 / 0.2e1;
t574 = t719 + t716;
t573 = t413 * t642;
t535 = -t634 / 0.2e1;
t536 = -t638 / 0.2e1;
t570 = -t658 / 0.2e1 + t339 * t536 + pkin(9) * t535;
t569 = t400 + t617;
t568 = qJ(5) * t595;
t564 = t412 * t398;
t563 = t415 * t398;
t562 = t413 * t596;
t561 = t412 * t399;
t560 = t412 * t593;
t559 = t413 * t593;
t558 = t417 * t605;
t557 = t412 * t598;
t556 = t412 * t583;
t555 = t413 * t582;
t554 = t413 * t583;
t549 = t283 * t717;
t543 = -t648 / 0.2e1;
t538 = t640 / 0.2e1;
t318 = -t336 / 0.2e1;
t529 = t318 + t384 / 0.2e1 - t400;
t528 = t732 - t595;
t525 = qJD(2) * t303 - t375;
t230 = qJD(2) * t304 - t375;
t316 = t526 * t413;
t524 = qJD(2) * t316 - t375;
t333 = t581 * t407;
t523 = qJD(2) * t333 + t720;
t349 = t412 * qJD(2) * t635;
t214 = qJD(3) * t303 + t349;
t522 = qJD(3) * t304 + t349;
t521 = qJD(3) * t316 + t349;
t362 = -t383 / 0.2e1;
t520 = t362 + t570;
t519 = t407 * t561;
t517 = t412 * t559;
t516 = t413 * t539;
t511 = t698 + t576;
t358 = pkin(5) * t537;
t510 = t358 + t400 / 0.2e1 + t617;
t345 = t378 * qJ(5);
t346 = t407 * t721 + t409;
t505 = qJD(2) * t346 - t351 - t398;
t347 = t407 * t408 + t409;
t228 = qJD(2) * t347 + t351 - t398;
t504 = pkin(3) * t538 + pkin(9) * t537;
t502 = -t339 * t416 + t689;
t449 = -t474 / 0.2e1;
t451 = -t475 / 0.2e1;
t419 = t165 * t451 + t177 * t713 + t199 * t449 + t204 * t711 + t244 * t703 + t245 * t762;
t432 = t282 * t700 + t283 * t699 + t313 * t516;
t1 = -t419 + t432;
t15 = t165 * t177 + t199 * t204 + t244 * t245;
t501 = -qJD(1) * t1 + qJD(2) * t15;
t18 = t165 * t227 + t199 * t226 + t244 * t277;
t461 = t282 * t696 + t549;
t473 = t507 * t277;
t5 = -t473 / 0.2e1 - t533 * t221 - t532 * t220 + t461;
t500 = -qJD(1) * t5 + qJD(2) * t18;
t28 = t253 * t257 + t255 * t260 + t293 * t294;
t418 = t221 * t708 + t253 * t450 + t255 * t451 + t260 * t713 + t293 * t703 + t294 * t762;
t430 = pkin(9) * t755 + t339 * t516;
t3 = -t418 + t430;
t499 = -qJD(1) * t3 + qJD(2) * t28;
t34 = t253 * t284 + t255 * t285 + t293 * t314;
t472 = t507 * t314;
t477 = pkin(4) * t706 + t549;
t9 = -t472 / 0.2e1 + t530 * t221 + t531 * t220 + t477;
t498 = -qJD(1) * t9 + qJD(2) * t34;
t497 = t313 * t538 + t728;
t19 = (t177 * t413 + t668) * t415 + (-t204 * t413 - t666) * t412;
t495 = -t19 * qJD(2) - t741;
t39 = (t255 * t416 + t260 * t413) * t415 + (t257 * t413 + t663) * t412;
t494 = qJD(2) * t39 + t741;
t65 = t293 * t634 - t257 * t416 + (t253 + t657) * t413;
t493 = -t65 * qJD(2) - t629;
t491 = qJD(3) * t58 - t735;
t489 = -t257 * t415 + t260 * t412;
t110 = t284 * t413 + (-t527 - 0.2e1 * t383) * t416;
t444 = t220 * t694 + t310 * t538;
t54 = t412 * t759 + t328 - t444;
t488 = -t54 * qJD(1) - t110 * qJD(2);
t436 = t315 * t536 + t497;
t26 = (t707 + t576) * t412 + t436 + t529;
t487 = -qJD(2) * t26 + qJD(3) * t166;
t167 = -t313 * t412 + t315 * t415;
t476 = t653 / 0.2e1 + t574;
t20 = t362 + (t707 + t511) * t415 + (t652 / 0.2e1 + t696 + t476) * t413 + t462;
t486 = -qJD(2) * t20 + qJD(3) * t167;
t233 = t339 * t415 + t648;
t425 = (t352 * t694 + t704) * t415 + (t701 + t767) * t412;
t62 = t425 + t529;
t485 = -qJD(2) * t62 + qJD(3) * t233;
t234 = -t339 * t412 + t352 * t415;
t63 = t314 * t692 + (t543 + pkin(4)) * t413 + t570 + t616;
t484 = -qJD(2) * t63 - qJD(3) * t234;
t483 = t378 * t413;
t300 = t697 + (t696 + t716) * t416;
t482 = qJD(2) * t300 + qJD(4) * t411;
t481 = -t593 - t596;
t479 = t575 - t688 / 0.2e1;
t478 = qJ(5) * t708 + t260 * t719;
t471 = t507 * t315;
t470 = t507 * t352;
t218 = t317 + t504;
t468 = pkin(3) * t603 - qJD(2) * t218;
t219 = (t698 + t479) * t415;
t467 = pkin(3) * t604 - qJD(2) * t219;
t464 = t177 * t696 + t204 * t717;
t463 = -t244 * t315 / 0.2e1 + t277 * t702;
t460 = t339 * t701 + t352 * t704;
t442 = t415 * t511 + t362;
t67 = t413 * t476 + t442 + t462;
t457 = qJD(2) * t67 + t313 * t604;
t69 = t640 * t702 + t510 - t728;
t456 = qJD(2) * t69 + t313 * t603;
t91 = t362 + t577 + t658 / 0.2e1 + (t698 + t767) * t415;
t455 = qJD(2) * t91 + t339 * t604;
t298 = t415 * t483;
t454 = t567 + t604;
t101 = t313 * t315;
t438 = qJ(5) * t449;
t423 = t411 * t452 + t438;
t11 = -t471 / 0.2e1 + t423;
t7 = -t353 * t532 - t354 * t533 + t463 + t464;
t441 = t11 * qJD(1) + t7 * qJD(2) - t101 * qJD(3);
t440 = qJD(3) * t59 + t724;
t439 = -qJD(3) * t56 - qJD(4) * t88 + t610;
t13 = (t415 * t530 + t506) * pkin(9) + t460 + t478;
t424 = pkin(4) * t452 + t438;
t29 = -t470 / 0.2e1 + t424;
t437 = t339 * t352 * qJD(3) - t29 * qJD(1) - t13 * qJD(2);
t405 = qJ(5) * qJD(5);
t397 = t721 * qJD(5);
t396 = pkin(9) * t598;
t392 = qJ(5) * t398;
t388 = t584 / 0.2e1;
t376 = t415 * t583;
t350 = t413 * t561;
t348 = t416 * t562;
t337 = t347 * qJD(5);
t332 = -t376 + t598;
t331 = t378 * t412;
t323 = (t583 - qJD(4) / 0.2e1) * t413;
t312 = -t408 * qJD(3) + t518;
t311 = t454 * t412;
t309 = t316 * qJD(4);
t299 = t454 * t416;
t297 = (-t412 * t585 + t603) * t416;
t296 = t412 * t483;
t207 = t221 * qJD(5);
t176 = t415 * t479 + t319 + t383;
t175 = t384 + t318 + t504;
t124 = t226 + t300;
t92 = -t636 / 0.2e1 + t577 + t520;
t82 = (t416 * t534 + t637 / 0.2e1) * t410 + t433;
t70 = t497 + t510;
t68 = t313 * t536 + t413 * t574 + t442 - t462;
t64 = (t314 / 0.2e1 + t698) * t415 + (t543 - pkin(4)) * t413 + t520;
t61 = t425 + t569;
t60 = t221 * t693 + t310 * t536 + t413 * t515 + t415 * t759;
t55 = t328 + t444;
t38 = pkin(4) * t535 + t357 + t723;
t30 = t470 / 0.2e1 + t424;
t25 = -t661 / 0.2e1 + t358 + t436 + t569;
t22 = qJD(2) * t82 + t620;
t21 = t687 / 0.2e1 + pkin(5) * t535 + t707 * t415 + t616 + (qJ(6) + t411 + t166) * t693 + t462;
t16 = t411 * t535 + t412 * t532 + t415 * t533 + t357;
t14 = pkin(9) * t723 - t460 + t478;
t12 = t471 / 0.2e1 + t423;
t10 = t472 / 0.2e1 + t221 * t705 + t255 * t711 + t477 + t760 * t713;
t8 = t227 * t700 + t353 * t715 + t699 * t761 - t463 + t464;
t6 = t473 / 0.2e1 + t165 * t711 + t220 * t709 + t199 * t714 + t221 * t710 + t461;
t4 = t418 + t430;
t2 = t419 + t432;
t23 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t722, 0, 0, 0, t722; 0, 0, -t414 * t605, -t558, 0, 0, 0, 0, 0 (-t414 * t583 - t417 * t584) * t410 (t414 * t585 - t417 * t582) * t410, 0, 0, 0, 0, 0, qJD(3) * t55 + t724, -t439, t725, -t440, qJD(3) * t60 + qJD(4) * t82 + t610 (-t253 * t283 + t255 * t282 + t293 * t573) * qJD(2) + t4 * qJD(3) + t10 * qJD(4) + t765, t725, t439, t440 (t165 * t282 + t199 * t283 + t244 * t573) * qJD(2) + t2 * qJD(3) + t6 * qJD(4) + t82 * qJD(6) + t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413 * t558 - t587, qJD(3) * t507 - t416 * t558, 0, 0, 0, 0, 0, qJD(2) * t55 + t769, t756, t726, t757, qJD(2) * t60 - t768, t4 * qJD(2) + (pkin(9) * t429 + t310 * t339) * qJD(3) + t30 * qJD(4) + t764, t726, -t756, -t757, t2 * qJD(2) + (t310 * t313 - t353 * t475 - t354 * t474) * qJD(3) + t12 * qJD(4) - t150 * qJD(6) + t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t766, -t749, 0, -t766, t22, t10 * qJD(2) + t30 * qJD(3) + (-pkin(4) * t221 - t683) * qJD(4) + t207, 0, t749, t766, t6 * qJD(2) + t12 * qJD(3) + (-t221 * t411 - t683) * qJD(4) + t207 - t220 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t766, 0, 0, 0, -t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t54 - t735, t492, t736, -t491, -t492, -qJD(3) * t3 - qJD(4) * t9 + t763, t736, -t492, t491, -qJD(3) * t1 - qJD(4) * t5 - qJD(6) * t421 + t763; 0, 0, 0, 0, t555, t372 * qJD(3), 0, 0, 0, -pkin(2) * t584, -pkin(2) * t582, -t407 * t557 + t408 * t555, qJD(4) * t333 + t416 * t720, -qJD(3) * t335 + t413 * t564, qJD(3) * t334 + t413 * t563, -t555, -qJD(3) * t110 - qJD(4) * t203, qJD(3) * t111 + qJD(4) * t202, qJD(3) * t39 + qJD(4) * t48 + t348, -qJD(3) * t66 - qJD(4) * t96 + t519, -qJD(3) * t65 - qJD(4) * t97 + t337, qJD(3) * t28 + qJD(4) * t34 - qJD(5) * t117, qJD(3) * t19 + qJD(4) * t24 + t416 * t559 + t348, -qJD(3) * t31 - qJD(4) * t72 - t407 * t560 + t337, qJD(3) * t27 + qJD(4) * t71 + qJD(6) * t346 - t519, qJD(3) * t15 + qJD(4) * t18 - qJD(5) * t100 + qJD(6) * t93; 0, 0, 0, 0, t554, t586, t582, -t584, 0, -pkin(8) * t582 - t580, pkin(8) * t584 - t579, -t309 + (t408 * t585 + t375) * t416, -0.2e1 * t413 * t557 - t416 * t443, t412 * t584 - t606, t415 * t584 + t607, -t323 (t412 * t509 - t385) * qJD(3) + t176 * qJD(4) + t488 (t415 * t509 + t380) * qJD(3) + t175 * qJD(4) + t754, qJD(3) * t489 + qJD(4) * t38 + t494 (t412 * t502 + t657) * qJD(3) + t64 * qJD(4) + t588 + t745 (-t294 * t412 + t415 * t502) * qJD(3) + t61 * qJD(4) + t350 + t493 (pkin(9) * t489 + t294 * t339) * qJD(3) + t14 * qJD(4) + t92 * qJD(5) + t499 ((t204 + t647) * t415 + (t177 - t646) * t412) * qJD(3) + t16 * qJD(4) - t495 (-t245 * t412 - t313 * t634 + t354 * t413) * qJD(3) + t25 * qJD(4) + t350 - t304 * qJD(6) + t743 (-t245 * t415 + t313 * t639 - t353 * t413) * qJD(3) + t21 * qJD(4) - t588 - t517 + t744 (t177 * t353 + t204 * t354 + t245 * t313) * qJD(3) + t8 * qJD(4) + t68 * qJD(5) + t70 * qJD(6) + t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t521, t523, t296, t298, t388, qJD(3) * t176 - t601 - t752, qJD(3) * t175 + t602 - t751, t38 * qJD(3) + qJD(4) * t508 - t562 + t630, qJD(3) * t64 + t601 - t742, qJD(3) * t61 - t595 - t602 - t669 - t732, t14 * qJD(3) + (-pkin(4) * t285 - qJ(5) * t284) * qJD(4) - t253 * qJD(5) + t498, t665 + t16 * qJD(3) + ((t412 * t411 - t682) * qJD(4) + t481) * t413, qJD(3) * t25 + qJD(4) * t226 - t595 - t748, qJD(3) * t21 - qJD(4) * t227 - t592 - t746, t8 * qJD(3) + (qJ(5) * t226 - t227 * t411) * qJD(4) + t199 * qJD(5) + t124 * qJD(6) + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t214, t228, qJD(3) * t92 - qJD(4) * t253 - t750, t296, t228, -t214, qJD(3) * t68 + qJD(4) * t199 + t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, -t522, t505, qJD(3) * t70 + qJD(4) * t124 + t671 - t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t54, -t681, -t738, t680, t681, qJD(2) * t3 - qJD(4) * t29 - t733, -t738, t681, -t680, qJD(2) * t1 - qJD(4) * t11 - t733; 0, 0, 0, 0, -t554, -t586, 0, 0, 0, t580, t579, -t408 * t554 - t309, 0.2e1 * t412 * t298, -t563 + t606, t564 - t607, t323, qJD(4) * t219 - t488, qJD(4) * t218 - t754, -qJD(4) * t37 - t415 * t595 - t494, qJD(4) * t63 + t597 - t745, qJD(4) * t62 + t350 - t493, -qJD(4) * t13 - qJD(5) * t91 - t499, t17 * qJD(4) + t416 * t753 + t495, qJD(4) * t26 - qJD(6) * t303 + t350 - t743, qJD(4) * t20 - t517 - t597 - t744, -qJD(4) * t7 - qJD(5) * t67 - qJD(6) * t69 - t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t557, -t581 * qJD(4), 0, 0, 0, -pkin(3) * t599, -pkin(3) * t598, 0, qJD(4) * t234 - t561, -qJD(4) * t233 + t397 (qJD(4) * t352 - t596) * t339, 0, -qJD(4) * t166 + t397 + t560, -qJD(4) * t167 + qJD(6) * t408 + t561, t101 * qJD(4) + t313 * t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, -t443, t332, t331, -t585 / 0.2e1, -t396 - t467, -t468 + t578, -t644 + t758, -t484 + t396, -t485 - t578, pkin(9) * t758 + t437, qJD(4) * t727 + t667 - t753, -t487 - t619, -t486 - t600 (-qJ(5) * t353 - t354 * t411) * qJD(4) + t354 * qJD(5) - t353 * qJD(6) - t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, t230, t311, -t455 + t396, t332, t311, -t230, -t457 + t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, -t525, -t312, -t456 - t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t739, -t740, 0, -t739, t740, qJD(2) * t9 + qJD(3) * t29, 0, t740, t739, qJD(2) * t5 + qJD(3) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t521, -t523, t297, -t299, t388, -qJD(3) * t219 + t752, -qJD(3) * t218 + t751, qJD(3) * t37 - t630, -qJD(3) * t63 + t742, -qJD(3) * t62 + t528 + t669, qJD(3) * t13 - t498 - t568, -qJD(3) * t17 - t665, -qJD(3) * t26 - t595 + t748, -qJD(3) * t20 - t592 + t746, qJD(3) * t7 + qJD(6) * t300 - t500 - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, t443, t376, -t556, t585 / 0.2e1, t467, t468, t644, t484, t485, -t437, -t667, t487, t486, t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t405, 0, qJD(5), qJD(6), qJD(6) * t411 + t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t345, 0, -t378, 0, -t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t739, 0, 0, 0, -t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, -t522, -t228, qJD(3) * t91 + t392 + t750, t297, -t228, t522, qJD(3) * t67 + t392 + t592 - t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, -t230, -t311, t455, t376, -t311, t230, t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t345, 0, t378, 0, -qJD(6) + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t214, -t505, qJD(3) * t69 - qJD(4) * t300 + t528 - t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t556, t525, t312, t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, qJD(5) - t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
