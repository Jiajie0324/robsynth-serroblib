% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:02:20
% EndTime: 2019-03-08 21:02:42
% DurationCPUTime: 16.76s
% Computational Cost: add. (17176->641), mult. (38137->916), div. (0->0), fcn. (45858->12), ass. (0->478)
t507 = sin(qJ(3));
t774 = cos(pkin(11));
t625 = t774 * t507;
t503 = sin(pkin(11));
t509 = cos(qJ(3));
t733 = t503 * t509;
t468 = t625 + t733;
t504 = sin(pkin(6));
t510 = cos(qJ(2));
t731 = t504 * t510;
t409 = t468 * t731;
t827 = -t409 / 0.2e1;
t508 = sin(qJ(2));
t732 = t504 * t508;
t775 = cos(pkin(6));
t451 = t507 * t732 - t509 * t775;
t452 = t507 * t775 + t509 * t732;
t359 = t774 * t451 + t452 * t503;
t505 = cos(pkin(12));
t781 = cos(qJ(6));
t651 = t781 * t505;
t502 = sin(pkin(12));
t506 = sin(qJ(6));
t726 = t506 * t502;
t554 = t651 - t726;
t822 = t554 * t359;
t801 = -t822 / 0.2e1;
t652 = t781 * t502;
t725 = t506 * t505;
t470 = t652 + t725;
t823 = t359 * t470;
t802 = -t823 / 0.2e1;
t778 = -qJ(4) - pkin(8);
t627 = t503 * t778;
t615 = t507 * t627;
t624 = t774 * t509;
t524 = -t624 * t778 + t615;
t496 = -t509 * pkin(3) - pkin(2);
t734 = t503 * t507;
t549 = t624 - t734;
t534 = -pkin(4) * t549 - qJ(5) * t468 + t496;
t245 = t502 * t534 + t505 * t524;
t377 = t502 * t468;
t203 = -pkin(9) * t377 + t245;
t244 = -t502 * t524 + t505 * t534;
t737 = t468 * t505;
t511 = -pkin(5) * t549 - pkin(9) * t737 + t244;
t112 = t506 * t203 - t511 * t781;
t113 = t203 * t781 + t506 * t511;
t281 = t470 * t468;
t784 = t470 / 0.2e1;
t789 = t554 / 0.2e1;
t491 = pkin(3) * t503 + qJ(5);
t779 = pkin(9) + t491;
t453 = t779 * t505;
t626 = t779 * t502;
t370 = t453 * t781 - t506 * t626;
t793 = -t370 / 0.2e1;
t368 = t506 * t453 + t626 * t781;
t794 = t368 / 0.2e1;
t821 = t554 * t468;
t826 = t112 * t784 + t113 * t789 + t281 * t793 + t794 * t821;
t495 = -pkin(3) * t774 - pkin(4);
t410 = t549 * t731;
t367 = -t410 * t502 + t505 * t732;
t369 = t410 * t505 + t502 * t732;
t806 = t369 * t505 / 0.2e1 - t367 * t502 / 0.2e1;
t825 = -t806 * t491 + t495 * t827;
t631 = t731 / 0.2e1;
t824 = t733 / 0.2e1;
t436 = t774 * t452;
t735 = t503 * t451;
t812 = t436 - t735;
t796 = t812 / 0.2e1;
t754 = t359 * t812;
t434 = t468 * t726;
t618 = t468 * t651;
t357 = t618 - t434;
t181 = -t281 * t784 + t357 * t789;
t820 = t181 * qJD(6);
t819 = t281 * qJD(2);
t542 = -t725 / 0.2e1 - t652 / 0.2e1;
t699 = qJD(3) * t470;
t818 = -qJD(2) * t181 - t554 * t699;
t708 = qJD(2) * t357;
t817 = qJD(3) * t181 - t281 * t708;
t816 = t281 ^ 2;
t309 = -t502 * t731 + t505 * t812;
t572 = t502 * t812 + t505 * t731;
t177 = t309 * t781 - t506 * t572;
t815 = t177 / 0.2e1;
t814 = t281 / 0.2e1;
t668 = t549 * qJD(2);
t813 = t281 * t668;
t461 = t549 ^ 2;
t463 = t468 ^ 2;
t811 = -t463 - t461;
t661 = t463 - t461;
t786 = t468 / 0.2e1;
t809 = t786 * t812;
t700 = qJD(3) * t554;
t808 = -t700 + t819;
t807 = qJD(6) * t281;
t717 = t625 * t631 + t731 * t824;
t458 = t625 / 0.2e1 + t824;
t176 = t506 * t309 + t572 * t781;
t718 = t176 * t784 + t177 * t789;
t657 = -t774 / 0.2e1;
t805 = (t409 * t657 + t410 * t503 / 0.2e1) * pkin(3);
t462 = t554 ^ 2;
t804 = t470 ^ 2;
t803 = t176 / 0.2e1;
t800 = t309 / 0.2e1;
t433 = t549 * t726;
t356 = t549 * t651 - t433;
t797 = t356 / 0.2e1;
t795 = t359 / 0.2e1;
t792 = -t433 / 0.2e1;
t791 = t549 / 0.2e1;
t790 = -t549 / 0.2e1;
t788 = -t554 / 0.2e1;
t787 = -t468 / 0.2e1;
t785 = -t470 / 0.2e1;
t481 = -t505 * pkin(5) + t495;
t783 = t481 / 0.2e1;
t89 = (t357 / 0.2e1 + t821 / 0.2e1) * t470 - 0.2e1 * t814 * t554;
t782 = t89 * qJD(5);
t780 = t507 * pkin(3);
t98 = -t784 * t822 + t789 * t823;
t777 = t98 * qJD(3);
t776 = qJD(3) * pkin(3);
t352 = t470 * t549;
t736 = t470 * t352;
t756 = t356 * t554;
t92 = t736 + t756;
t773 = qJD(2) * t92;
t766 = t244 * t502;
t765 = t245 * t505;
t378 = pkin(4) * t468 - qJ(5) * t549 + t780;
t611 = t778 * t774;
t478 = t507 * t611;
t405 = t509 * t627 + t478;
t246 = t505 * t378 - t405 * t502;
t764 = t246 * t505;
t247 = t502 * t378 + t505 * t405;
t763 = t247 * t502;
t762 = t309 * t505;
t761 = t352 * t357;
t760 = t352 * t549;
t759 = t281 * t356;
t758 = t281 * t468;
t757 = t356 * t549;
t755 = t357 * t468;
t753 = t359 * t409;
t751 = t359 * t468;
t748 = t367 * t505;
t747 = t369 * t502;
t654 = t781 * t367;
t727 = t506 * t369;
t210 = t654 - t727;
t653 = t781 * t369;
t728 = t506 * t367;
t211 = t653 + t728;
t38 = -t176 * t210 + t177 * t211 + t753;
t745 = t38 * qJD(1);
t479 = t509 * t611;
t403 = -t479 + t615;
t744 = t403 * t505;
t404 = -t733 * t778 - t478;
t743 = t404 * t403;
t742 = t404 * t468;
t741 = t409 * t404;
t739 = t409 * t502;
t738 = t409 * t505;
t374 = t502 * t549;
t194 = -pkin(9) * t505 * t549 + pkin(5) * t468 + t246;
t730 = t506 * t194;
t205 = -pkin(9) * t374 + t247;
t729 = t506 * t205;
t540 = t572 * t502;
t72 = t754 - (t540 + t762) * t359;
t724 = t72 * qJD(1);
t79 = t309 * t369 - t367 * t572 + t753;
t723 = t79 * qJD(1);
t93 = (-t812 / 0.2e1 + t796) * t468;
t722 = t93 * qJD(2);
t498 = t502 ^ 2;
t499 = t505 ^ 2;
t628 = -t498 / 0.2e1 - t499 / 0.2e1;
t530 = -t491 * t549 * t628 + t495 * t786;
t561 = -t764 / 0.2e1 - t763 / 0.2e1;
t95 = t530 + t561;
t721 = t95 * qJD(2);
t483 = t498 + t499;
t125 = -t759 + t761;
t715 = qJD(2) * t125;
t559 = -t281 * t785 - t788 * t821;
t166 = t559 + t458;
t714 = qJD(2) * t166;
t182 = -t758 + t760;
t713 = qJD(2) * t182;
t183 = t758 + t760;
t712 = qJD(2) * t183;
t184 = t755 - t757;
t711 = qJD(2) * t184;
t185 = t755 + t757;
t710 = qJD(2) * t185;
t380 = t811 * t505;
t707 = qJD(2) * t380;
t706 = qJD(2) * t504;
t705 = qJD(2) * t508;
t704 = qJD(2) * t509;
t249 = (t784 - t542) * t549;
t702 = qJD(3) * t249;
t701 = qJD(3) * t359;
t698 = qJD(3) * t481;
t697 = qJD(3) * t502;
t696 = qJD(3) * t505;
t694 = qJD(4) * t468;
t693 = qJD(5) * t549;
t692 = qJD(6) * t549;
t691 = qJD(6) * t470;
t126 = -t759 - t761;
t690 = t126 * qJD(2);
t482 = t504 ^ 2 * t508 * t510;
t149 = t410 * t812 - t482 + t753;
t688 = t149 * qJD(1);
t248 = (t784 + t542) * t549;
t687 = t248 * qJD(2);
t686 = t248 * qJD(3);
t241 = t249 * qJD(2);
t613 = -t651 / 0.2e1;
t250 = t792 - (t613 + t788) * t549;
t685 = t250 * qJD(2);
t251 = t792 - (t613 + t789) * t549;
t684 = t251 * qJD(2);
t548 = -t549 * t613 + t792;
t634 = t549 * t789;
t252 = -t634 - t548;
t683 = t252 * qJD(2);
t263 = t483 * t463;
t682 = t263 * qJD(2);
t266 = -t482 + (t451 * t507 + t452 * t509) * t731;
t681 = t266 * qJD(1);
t680 = t821 * qJD(2);
t609 = t628 * t468;
t319 = t609 - t458;
t678 = t319 * qJD(2);
t322 = t661 * t502;
t677 = t322 * qJD(2);
t323 = t811 * t502;
t676 = t323 * qJD(2);
t324 = t661 * t505;
t675 = t324 * qJD(2);
t538 = t468 * t657 + t503 * t791;
t345 = (-t507 / 0.2e1 + t538) * pkin(3);
t674 = t345 * qJD(2);
t673 = t661 * qJD(2);
t672 = t377 * qJD(2);
t448 = t498 * t549;
t449 = t499 * t549;
t379 = -t448 - t449;
t671 = t379 * qJD(2);
t670 = t811 * qJD(2);
t669 = t458 * qJD(2);
t457 = t554 * qJD(6);
t667 = t468 * qJD(2);
t666 = t468 * qJD(3);
t665 = t483 * qJD(3);
t500 = t507 ^ 2;
t501 = t509 ^ 2;
t489 = t501 - t500;
t664 = t489 * qJD(2);
t663 = t507 * qJD(3);
t662 = t509 * qJD(3);
t660 = pkin(5) * t374;
t659 = pkin(2) * t507 * qJD(2);
t658 = pkin(2) * t704;
t656 = t781 * t194;
t655 = t781 * t205;
t650 = t821 * t668;
t646 = t502 * t696;
t645 = t468 * t693;
t402 = t549 * t667;
t401 = t549 * t666;
t644 = t470 * t457;
t643 = t504 * t705;
t642 = t510 * t706;
t641 = t505 * t667;
t447 = t505 * t666;
t640 = t507 * t662;
t639 = t309 * t787;
t295 = t751 / 0.2e1;
t637 = t409 * t788;
t636 = t409 * t784;
t633 = t732 / 0.2e1;
t632 = -t731 / 0.2e1;
t630 = t726 / 0.2e1;
t414 = t483 * t491;
t623 = (t500 + t501) * t510;
t622 = qJD(6) * t458 - t402;
t621 = -qJD(6) + t668;
t620 = qJD(5) + t698;
t617 = t549 * t641;
t616 = t502 * t402;
t608 = t436 / 0.2e1 - t735 / 0.2e1;
t114 = t656 - t729;
t115 = t655 + t730;
t333 = t403 + t660;
t334 = pkin(5) * t377 + t404;
t11 = -t112 * t114 + t113 * t115 + t333 * t334;
t515 = -t176 * t114 / 0.2e1 + t115 * t815 + t112 * t802 + t113 * t801 + t334 * t796 + t333 * t795;
t529 = t210 * t794 + t211 * t793 + t481 * t827;
t2 = t515 + t529;
t607 = t2 * qJD(1) + t11 * qJD(2);
t521 = t176 * t797 - t281 * t801 - t352 * t815 + t357 * t802;
t563 = t210 * t785 + t211 * t789;
t16 = t521 - t563;
t9 = t112 * t356 - t113 * t352 - t114 * t357 - t115 * t281;
t606 = t16 * qJD(1) + t9 * qJD(2);
t605 = t505 * t616;
t558 = t403 * t795 + t404 * t796;
t562 = t765 / 0.2e1 - t766 / 0.2e1;
t513 = -t562 * t359 + t247 * t800 - t572 * t246 / 0.2e1 + t558;
t18 = t513 + t825;
t51 = t244 * t246 + t245 * t247 + t743;
t603 = t18 * qJD(1) + t51 * qJD(2);
t526 = t352 * t794 + t370 * t797 + t468 * t783;
t570 = t114 * t788 + t115 * t785;
t26 = t526 + t570;
t602 = -qJD(1) * t98 + qJD(2) * t26;
t27 = -t112 * t468 - t114 * t549 + t281 * t333 + t334 * t352;
t520 = t176 * t787 + t352 * t795 + t790 * t823 + t812 * t814;
t40 = t637 - t520;
t601 = -t40 * qJD(1) + t27 * qJD(2);
t28 = -t113 * t468 + t115 * t549 + t333 * t357 + t334 * t356;
t519 = t177 * t787 + t356 * t795 + t357 * t796 - t791 * t822;
t41 = t636 - t519;
t600 = -t41 * qJD(1) + t28 * qJD(2);
t564 = t210 * t789 + t211 * t784;
t568 = t177 * t797 + t352 * t803;
t29 = -t751 / 0.2e1 + t564 - t568;
t31 = t112 * t352 + t113 * t356 + t334 * t468;
t599 = -t29 * qJD(1) + t31 * qJD(2);
t37 = t112 * t821 - t113 * t281;
t569 = t177 * t814 - t803 * t821;
t52 = t569 + t717;
t598 = qJD(1) * t52 - qJD(2) * t37;
t590 = -t244 * t505 - t245 * t502;
t48 = (t763 + t764) * t468 - t590 * t549;
t539 = t572 * t505;
t523 = t502 * t800 - t539 / 0.2e1;
t518 = t523 * t549;
t85 = -t518 - t806;
t597 = t85 * qJD(1) - t48 * qJD(2);
t60 = -t112 * t549 - t281 * t334;
t544 = -t728 / 0.2e1 - t653 / 0.2e1;
t567 = t176 * t790 - t281 * t795;
t65 = t544 - t567;
t596 = qJD(1) * t65 - qJD(2) * t60;
t61 = t113 * t549 + t334 * t357;
t543 = -t727 / 0.2e1 + t654 / 0.2e1;
t565 = t177 * t791 + t357 * t795;
t64 = t543 - t565;
t595 = qJD(1) * t64 - qJD(2) * t61;
t522 = t762 / 0.2e1 + t540 / 0.2e1;
t516 = t522 * t549 + t295;
t556 = -t748 / 0.2e1 - t747 / 0.2e1;
t71 = t516 + t556;
t97 = t742 - (-t765 + t766) * t549;
t594 = qJD(1) * t71 + qJD(2) * t97;
t514 = t502 * t809 + t572 * t787;
t73 = t738 / 0.2e1 + t514;
t77 = (t403 * t502 + t244) * t468 - (-t404 * t502 + t246) * t549;
t593 = t73 * qJD(1) + t77 * qJD(2);
t517 = t505 * t809 + t639;
t76 = -t739 / 0.2e1 + t517;
t78 = (-t245 + t744) * t468 - (-t404 * t505 - t247) * t549;
t592 = t76 * qJD(1) + t78 * qJD(2);
t36 = -t176 * t823 - t177 * t822 + t754;
t591 = t36 * qJD(1) + t98 * qJD(4);
t589 = -t246 * t502 + t247 * t505;
t588 = -t468 * t491 + t495 * t549;
t122 = (t403 - t524) * t468 - (-t405 - t404) * t549;
t587 = -t93 * qJD(1) - t122 * qJD(2);
t532 = t542 * t359;
t145 = t802 - t532;
t527 = t334 * t784 + t357 * t783 + t370 * t791;
t545 = -t729 / 0.2e1 + t656 / 0.2e1;
t44 = -t527 + t545;
t586 = t145 * qJD(1) + t44 * qJD(2);
t541 = t613 + t630;
t531 = t541 * t359;
t146 = t801 - t531;
t528 = -t281 * t783 + t334 * t789 + t368 * t790;
t546 = -t730 / 0.2e1 - t655 / 0.2e1;
t45 = -t528 + t546;
t585 = t146 * qJD(1) + t45 * qJD(2);
t171 = t405 * t524 + t496 * t780 + t743;
t512 = -t359 * t524 / 0.2e1 + t405 * t796 + t632 * t780 + t558;
t49 = -t512 + t805;
t584 = -t49 * qJD(1) + t171 * qJD(2);
t124 = t357 * t821 + t816;
t583 = qJD(2) * t124 + qJD(3) * t89;
t389 = t462 + t804;
t582 = qJD(2) * t89 + qJD(3) * t389;
t118 = t590 * t468;
t119 = t468 * t523 + t717;
t580 = qJD(1) * t119 - qJD(2) * t118;
t557 = t791 * t812 + t295;
t172 = t633 - t557;
t212 = t524 * t549 + t742;
t579 = -qJD(1) * t172 + qJD(2) * t212;
t329 = t468 * t631 - t717;
t371 = t468 * t496 - t549 * t780;
t578 = -qJD(1) * t329 + qJD(2) * t371;
t537 = -t624 / 0.2e1 + t734 / 0.2e1;
t330 = (t791 + t537) * t731;
t372 = t468 * t780 + t496 * t549;
t577 = -qJD(1) * t330 + qJD(2) * t372;
t123 = -t281 * t554 - t470 * t357;
t170 = -t357 ^ 2 + t816;
t576 = qJD(2) * t170 + qJD(3) * t123;
t349 = t462 - t804;
t575 = qJD(2) * t123 + qJD(3) * t349;
t213 = t434 / 0.2e1 + (t630 - t651) * t468;
t574 = qJD(2) * t213 - t699;
t547 = -t479 / 0.2e1 + t615 / 0.2e1;
t525 = t660 / 0.2e1 + t547;
t19 = t525 - t826;
t193 = t368 * t470 + t370 * t554;
t62 = -t718 + t608;
t535 = qJD(1) * t62 + qJD(2) * t19 - qJD(3) * t193;
t116 = t547 - t562;
t128 = -t522 + t608;
t533 = qJD(1) * t128 + qJD(2) * t116 - qJD(3) * t414;
t490 = t507 * t704;
t456 = t549 * qJD(3);
t450 = t458 * qJD(3);
t344 = t780 / 0.2e1 + t538 * pkin(3);
t332 = t468 * t632 - t717;
t331 = t537 * t731 - t549 * t631;
t318 = t609 + t458;
t253 = -t634 + t548;
t243 = t248 * qJD(6);
t242 = t249 * qJD(6);
t216 = t618 / 0.2e1 - t434 / 0.2e1 + t541 * t468;
t206 = t241 - t691;
t173 = t633 + t557;
t167 = -t559 + t458;
t148 = t823 / 0.2e1 - t532;
t147 = t822 / 0.2e1 - t531;
t129 = t522 + t608;
t121 = t123 * qJD(6);
t120 = t502 * t639 - t539 * t787 + t717;
t117 = t547 + t562;
t94 = t530 - t561;
t88 = t93 * qJD(3);
t84 = -t518 + t806;
t75 = t739 / 0.2e1 + t517;
t74 = -t738 / 0.2e1 + t514;
t70 = t516 - t556;
t67 = t543 + t565;
t66 = t544 + t567;
t63 = t608 + t718;
t53 = -t569 + t717;
t50 = t805 + t512;
t47 = t527 + t545;
t46 = t528 + t546;
t43 = t636 + t519;
t42 = t637 + t520;
t30 = t295 + t564 + t568;
t25 = t526 - t570;
t20 = t525 + t826;
t17 = t513 - t825;
t15 = t521 + t563;
t1 = t515 - t529;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t266, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t149, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t79 + qJD(3) * t72, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t38 + qJD(3) * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643, -t642, 0, 0, 0, 0, 0, 0, 0, 0 (-t508 * t704 - t510 * t663) * t504 (t507 * t705 - t510 * t662) * t504, t623 * t706, t681 + (-pkin(2) * t508 + pkin(8) * t623) * t706, 0, 0, 0, 0, 0, 0, qJD(3) * t332 - t549 * t643, qJD(3) * t331 + t468 * t643 (t409 * t468 + t410 * t549) * qJD(2) + t88, t688 + (t410 * t524 + t496 * t732 + t741) * qJD(2) + t50 * qJD(3) + t173 * qJD(4), 0, 0, 0, 0, 0, 0 (-t367 * t549 + t377 * t409) * qJD(2) + t74 * qJD(3) (t369 * t549 + t409 * t737) * qJD(2) + t75 * qJD(3), t84 * qJD(3) + (-t747 - t748) * t667, t723 + (t244 * t367 + t245 * t369 + t741) * qJD(2) + t17 * qJD(3) + t70 * qJD(4) + t120 * qJD(5), 0, 0, 0, 0, 0, 0 (-t210 * t549 + t281 * t409) * qJD(2) + t42 * qJD(3) + t67 * qJD(6) (t211 * t549 + t357 * t409) * qJD(2) + t43 * qJD(3) + t66 * qJD(6) (-t210 * t357 - t211 * t281) * qJD(2) + t15 * qJD(3), t745 + (-t112 * t210 + t113 * t211 + t334 * t409) * qJD(2) + t1 * qJD(3) + t30 * qJD(4) + t53 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452 * qJD(3) - t507 * t642, t451 * qJD(3) - t509 * t642, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t332 - qJD(3) * t812, qJD(2) * t331 + t701, t722, t50 * qJD(2) + (-t359 * t503 - t774 * t812) * t776, 0, 0, 0, 0, 0, 0, qJD(2) * t74 - t696 * t812, qJD(2) * t75 + t697 * t812, t84 * qJD(2) - t483 * t701, t724 + t17 * qJD(2) + (-t359 * t414 + t495 * t812) * qJD(3) + t129 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t42 + qJD(6) * t148 - t700 * t812, qJD(2) * t43 + qJD(6) * t147 + t699 * t812, t15 * qJD(2) + (-t470 * t823 - t554 * t822) * qJD(3), t1 * qJD(2) + (-t368 * t823 - t370 * t822 + t481 * t812) * qJD(3) + t63 * qJD(5) + t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t70 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30 + t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t120 + qJD(3) * t129, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + qJD(3) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t67 + qJD(3) * t148 - qJD(6) * t177, qJD(2) * t66 + qJD(3) * t147 + qJD(6) * t176, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t681, 0, 0, 0, 0, 0, 0, -t329 * qJD(3), -t330 * qJD(3), t88, -qJD(3) * t49 - qJD(4) * t172 - t688, 0, 0, 0, 0, 0, 0, t73 * qJD(3), t76 * qJD(3), t85 * qJD(3), qJD(3) * t18 + qJD(4) * t71 - qJD(5) * t119 - t723, 0, 0, 0, 0, 0, 0, -qJD(3) * t40 - qJD(6) * t64, -qJD(3) * t41 - qJD(6) * t65, qJD(3) * t16, qJD(3) * t2 - qJD(4) * t29 - qJD(5) * t52 - t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t640, t489 * qJD(3), 0, -t640, 0, 0, -pkin(2) * t663, -pkin(2) * t662, 0, 0, t401, -t661 * qJD(3), 0, -t401, 0, 0, t371 * qJD(3), t372 * qJD(3), qJD(3) * t122 - qJD(4) * t811, qJD(3) * t171 + qJD(4) * t212, t499 * t401, -0.2e1 * t447 * t374, t324 * qJD(3), t498 * t401, -t322 * qJD(3), -t401, qJD(3) * t77 - qJD(4) * t323 + t505 * t645, qJD(3) * t78 - qJD(4) * t380 - t502 * t645, -qJD(3) * t48 + qJD(5) * t263, qJD(3) * t51 + qJD(4) * t97 + qJD(5) * t118 (qJD(3) * t356 - t807) * t357, qJD(3) * t126 + qJD(6) * t170, qJD(3) * t184 + t281 * t692 (qJD(3) * t352 + qJD(6) * t357) * t281, qJD(3) * t182 + t357 * t692, -t401, qJD(3) * t27 + qJD(4) * t183 + qJD(6) * t61 + t693 * t821, qJD(3) * t28 + qJD(4) * t185 + qJD(6) * t60 - t281 * t693, qJD(3) * t9 + qJD(4) * t125 + qJD(5) * t124, qJD(3) * t11 + qJD(4) * t31 + qJD(5) * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t664, t662, -t490, -t663, 0, -pkin(8) * t662 - t659, pkin(8) * t663 - t658, 0, 0, t402, -t673, t456, -t402, -t666, 0, -qJD(3) * t403 + t578, -qJD(3) * t405 + t577 (-t468 * t503 - t549 * t774) * t776 - t587 (-t403 * t774 + t405 * t503) * t776 + t344 * qJD(4) + t584 -(-t499 * t667 - t646) * t549, -0.2e1 * t605 + (-t448 + t449) * qJD(3), t502 * t666 + t675 -(-t498 * t667 + t646) * t549, t447 - t677, -t402 (t502 * t588 - t744) * qJD(3) + t374 * qJD(5) + t593, t403 * t697 + (qJD(3) * t588 + t693) * t505 + t592, qJD(3) * t589 + t597 (t403 * t495 + t491 * t589) * qJD(3) + t94 * qJD(4) + t117 * qJD(5) + t603, t820 + (t699 + t708) * t356, t690 + (-t736 + t756) * qJD(3) + t121, qJD(6) * t253 + t470 * t666 + t711, t352 * t808 - t820, t554 * t666 + t243 + t713, t622 (-t333 * t554 + t352 * t481 - t368 * t468) * qJD(3) + t249 * qJD(5) + t47 * qJD(6) + t601 (t333 * t470 + t356 * t481 - t370 * t468) * qJD(3) - t252 * qJD(5) + t46 * qJD(6) + t600 (-t114 * t470 + t115 * t554 - t352 * t370 + t356 * t368) * qJD(3) + t606 + t782 (-t114 * t368 + t115 * t370 + t333 * t481) * qJD(3) + t25 * qJD(4) + t20 * qJD(5) + t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, qJD(3) * t344 + t579, 0, 0, 0, 0, 0, 0, -t676, -t707, 0, qJD(3) * t94 + qJD(5) * t318 + t594, 0, 0, 0, 0, 0, 0, t243 + t712, -qJD(6) * t251 + t710, t715, t25 * qJD(3) + (-t352 * t554 + t356 * t470) * qJD(4) + t167 * qJD(5) + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t374 + t617 -(t502 * t667 - t696) * t549, t682, qJD(3) * t117 + qJD(4) * t318 - t580, 0, 0, 0, 0, 0, 0, qJD(6) * t216 + t650 + t702, -qJD(3) * t252 - t813, t583, qJD(3) * t20 + qJD(4) * t167 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t817, t576, t253 * qJD(3) + t281 * t621, -t817, t357 * t621 + t686, t450, qJD(3) * t47 + qJD(4) * t248 + qJD(5) * t216 - qJD(6) * t113 - t595, qJD(3) * t46 - qJD(4) * t251 + qJD(6) * t112 - t596, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329 * qJD(2), t330 * qJD(2), -t722, qJD(2) * t49, 0, 0, 0, 0, 0, 0, -t73 * qJD(2), -t76 * qJD(2), -t85 * qJD(2), -qJD(2) * t18 - qJD(5) * t128 - t724, 0, 0, 0, 0, 0, 0, qJD(2) * t40 - qJD(6) * t145, qJD(2) * t41 - qJD(6) * t146, -qJD(2) * t16, -qJD(2) * t2 - qJD(5) * t62 - t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, -t664, 0, t490, 0, 0, t659, t658, 0, 0, -t402, t673, 0, t402, 0, 0, -t578 - t694, -qJD(4) * t549 - t577, t587, qJD(4) * t345 - t584, -t499 * t402, 0.2e1 * t605, -t675, -t498 * t402, t677, t402, -t505 * t694 - t593, qJD(4) * t377 - t592, -qJD(4) * t379 - t597, qJD(4) * t95 - qJD(5) * t116 - t603, -t356 * t708 + t820, t121 - t690, -qJD(6) * t250 - t711, -t352 * t819 - t820, t242 - t713, -t622, -qJD(4) * t821 + qJD(5) * t248 - qJD(6) * t44 - t601, qJD(4) * t281 - qJD(5) * t251 - qJD(6) * t45 - t600, qJD(4) * t92 - t606 + t782, qJD(4) * t26 - qJD(5) * t19 - t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483 * qJD(5), t414 * qJD(5), t644, t349 * qJD(6), 0, -t644, 0, 0, t481 * t691, t481 * t457, qJD(5) * t389, qJD(5) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t667, -t668, 0, t674, 0, 0, 0, 0, 0, 0, -t641, t672, -t671, t721, 0, 0, 0, 0, 0, 0, -t680, t819, t773, t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t665, -t533, 0, 0, 0, 0, 0, 0, t687, -t684, t582, -t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t818, t575, t457 - t685, t818, t206, -t669, -qJD(6) * t370 + t470 * t698 - t586, qJD(6) * t368 + t554 * t698 - t585, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t29 + t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t666, t456, t670, -qJD(3) * t345 - t579, 0, 0, 0, 0, 0, 0, t447 + t676, -qJD(3) * t377 + t707, t379 * qJD(3), -qJD(3) * t95 + qJD(5) * t319 - t594, 0, 0, 0, 0, 0, 0, qJD(3) * t821 + t242 - t712, -qJD(3) * t281 - qJD(6) * t252 - t710, -qJD(3) * t92 - t715, -qJD(3) * t26 - qJD(5) * t166 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t667, t668, 0, -t674, 0, 0, 0, 0, 0, 0, t641, -t672, t671, -t721, 0, 0, 0, 0, 0, 0, t680, -t819, -t773, -t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t678, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206, -t457 - t683, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t119 + qJD(3) * t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t52 + qJD(3) * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617, t616, -t682, qJD(3) * t116 - qJD(4) * t319 + t580, 0, 0, 0, 0, 0, 0, -qJD(6) * t213 - t650 - t686, qJD(3) * t251 - t807 + t813, -t583, qJD(3) * t19 + qJD(4) * t166 + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t665, t533, 0, 0, 0, 0, 0, 0, -t687 + t691, t457 + t684, -t582, t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t678, 0, 0, 0, 0, 0, 0, 0, 0, 0, t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t574, -t808, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t64 + qJD(3) * t145, qJD(2) * t65 + qJD(3) * t146, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t817, -t576, qJD(3) * t250 - t813, t817, -t357 * t668 - t702, t450, qJD(3) * t44 - qJD(4) * t249 + qJD(5) * t213 + t595, qJD(3) * t45 + qJD(4) * t252 + qJD(5) * t281 + t596, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t818, -t575, t685, -t818, -t241, t669, -t470 * t620 + t586, -t554 * t620 + t585, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, t683, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t574, t808, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
