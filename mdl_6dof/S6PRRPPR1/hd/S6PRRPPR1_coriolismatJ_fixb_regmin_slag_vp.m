% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:02:15
% EndTime: 2019-03-08 21:02:31
% DurationCPUTime: 7.16s
% Computational Cost: add. (6227->445), mult. (14759->664), div. (0->0), fcn. (17594->12), ass. (0->356)
t314 = sin(qJ(3));
t317 = cos(qJ(3));
t311 = sin(pkin(6));
t315 = sin(qJ(2));
t465 = t311 * t315;
t502 = cos(pkin(6));
t269 = t314 * t465 - t317 * t502;
t270 = t314 * t502 + t317 * t465;
t310 = sin(pkin(11));
t501 = cos(pkin(11));
t194 = t501 * t269 + t270 * t310;
t520 = t194 / 0.2e1;
t508 = -qJ(4) - pkin(8);
t292 = t508 * t317;
t288 = t501 * t292;
t291 = t508 * t314;
t467 = t310 * t291;
t530 = -t288 + t467;
t537 = t520 * t530;
t391 = t501 * t314;
t466 = t310 * t317;
t282 = t391 + t466;
t318 = cos(qJ(2));
t464 = t311 * t318;
t236 = t282 * t464;
t298 = pkin(3) * t310 + qJ(5);
t304 = -pkin(3) * t501 - pkin(4);
t342 = -t310 * t314 + t317 * t501;
t237 = t342 * t464;
t309 = sin(pkin(12));
t312 = cos(pkin(12));
t203 = -t237 * t309 + t312 * t465;
t205 = t237 * t312 + t309 * t465;
t526 = t205 * t312 / 0.2e1 - t203 * t309 / 0.2e1;
t536 = -t236 * t304 / 0.2e1 - t526 * t298;
t256 = t501 * t270;
t468 = t310 * t269;
t531 = t256 - t468;
t519 = -t531 / 0.2e1;
t231 = -t501 * t291 - t292 * t310;
t535 = t231 * t309;
t534 = t231 * t312;
t533 = t309 * t530;
t477 = t530 * t312;
t316 = cos(qJ(6));
t457 = t316 * t309;
t313 = sin(qJ(6));
t460 = t313 * t312;
t284 = t457 + t460;
t144 = t284 * t282;
t425 = t144 * qJD(2);
t347 = -t460 / 0.2e1 - t457 / 0.2e1;
t446 = qJD(2) * t342;
t532 = t144 * t446;
t525 = t282 ^ 2;
t222 = t342 ^ 2 + t525;
t307 = t309 ^ 2;
t308 = t312 ^ 2;
t293 = t307 + t308;
t521 = -t194 / 0.2e1;
t528 = t520 + t521;
t527 = qJD(6) * t144;
t417 = t293 * qJD(3);
t158 = -t309 * t531 - t312 * t464;
t524 = t158 / 0.2e1;
t159 = -t309 * t464 + t312 * t531;
t523 = t159 / 0.2e1;
t522 = t531 / 0.2e1;
t518 = t342 / 0.2e1;
t517 = -t342 / 0.2e1;
t456 = t316 * t312;
t461 = t313 * t309;
t280 = -t456 + t461;
t516 = -t280 / 0.2e1;
t515 = t280 / 0.2e1;
t514 = -t282 / 0.2e1;
t513 = t282 / 0.2e1;
t512 = t284 / 0.2e1;
t290 = -t312 * pkin(5) + t304;
t511 = t290 / 0.2e1;
t510 = t314 * pkin(3);
t509 = pkin(9) + t298;
t507 = qJD(3) * pkin(3);
t212 = pkin(4) * t282 - qJ(5) * t342 + t510;
t114 = t312 * t212 + t535;
t82 = -pkin(9) * t312 * t342 + pkin(5) * t282 + t114;
t506 = t313 * t82;
t115 = t309 * t212 - t534;
t207 = t309 * t342;
t86 = -pkin(9) * t207 + t115;
t505 = t313 * t86;
t504 = t316 * t82;
t503 = t316 * t86;
t489 = t144 * t282;
t187 = t284 * t342;
t490 = t187 * t342;
t73 = -t489 + t490;
t500 = qJD(2) * t73;
t74 = t489 + t490;
t499 = qJD(2) * t74;
t254 = t282 * t461;
t192 = t282 * t456 - t254;
t487 = t192 * t282;
t191 = t280 * t342;
t488 = t191 * t342;
t75 = t487 + t488;
t498 = qJD(2) * t75;
t76 = t487 - t488;
t497 = qJD(2) * t76;
t305 = -pkin(3) * t317 - pkin(2);
t211 = -pkin(4) * t342 - qJ(5) * t282 + t305;
t112 = t312 * t211 - t533;
t496 = t112 * t309;
t113 = t309 * t211 + t477;
t495 = t113 * t312;
t494 = t114 * t312;
t493 = t115 * t309;
t492 = t158 * t309;
t491 = t159 * t312;
t485 = t194 * t236;
t484 = t194 * t280;
t483 = t194 * t284;
t481 = t203 * t312;
t480 = t205 * t309;
t476 = t231 * t236;
t475 = t231 * t282;
t473 = t236 * t309;
t472 = t236 * t312;
t25 = (t531 - t491 + t492) * t194;
t471 = t25 * qJD(1);
t470 = t282 * t280;
t469 = t282 * t312;
t210 = t309 * t282;
t463 = t313 * t203;
t462 = t313 * t205;
t459 = t316 * t203;
t458 = t316 * t205;
t32 = t158 * t203 + t159 * t205 + t485;
t455 = t32 * qJD(1);
t387 = t528 * t342;
t36 = (t519 + t522) * t282 - t387;
t454 = t36 * qJD(2);
t392 = -t307 / 0.2e1 - t308 / 0.2e1;
t331 = -t298 * t342 * t392 + t304 * t513;
t356 = -t494 / 0.2e1 - t493 / 0.2e1;
t38 = t331 + t356;
t453 = t38 * qJD(2);
t50 = t144 * t191 - t187 * t192;
t452 = t50 * qJD(2);
t58 = -t311 ^ 2 * t315 * t318 + t237 * t531 + t485;
t450 = t58 * qJD(1);
t449 = t391 / 0.2e1 + t466 / 0.2e1;
t448 = qJD(2) * t192;
t214 = t222 * t312;
t447 = qJD(2) * t214;
t445 = qJD(2) * t282;
t444 = qJD(2) * t315;
t443 = qJD(2) * t317;
t116 = (t512 + t347) * t342;
t442 = qJD(3) * t116;
t117 = (t512 - t347) * t342;
t441 = qJD(3) * t117;
t440 = qJD(3) * t280;
t439 = qJD(3) * t282;
t438 = qJD(3) * t284;
t437 = qJD(3) * t290;
t436 = qJD(3) * t309;
t435 = qJD(3) * t312;
t434 = qJD(5) * t342;
t433 = qJD(6) * t342;
t432 = qJD(6) * t284;
t431 = t116 * qJD(2);
t109 = t117 * qJD(2);
t396 = t461 / 0.2e1;
t346 = -t456 / 0.2e1 + t396;
t118 = (t515 + t346) * t342;
t430 = t118 * qJD(2);
t119 = (t516 + t346) * t342;
t429 = t119 * qJD(2);
t393 = t456 / 0.2e1;
t398 = t342 * t516;
t120 = -t342 * t393 + t461 * t518 - t398;
t428 = t120 * qJD(2);
t130 = t293 * t525;
t427 = t130 * qJD(2);
t426 = t470 * qJD(2);
t386 = t392 * t282;
t165 = t386 - t449;
t424 = t165 * qJD(2);
t168 = t222 * t309;
t423 = t168 * qJD(2);
t410 = -t501 / 0.2e1;
t339 = t282 * t410 + t310 * t518;
t184 = (-t314 / 0.2e1 + t339) * pkin(3);
t422 = t184 * qJD(2);
t421 = t210 * qJD(2);
t213 = t293 * t342;
t420 = t213 * qJD(2);
t419 = t222 * qJD(2);
t418 = t449 * qJD(2);
t273 = t280 * qJD(6);
t297 = -t314 ^ 2 + t317 ^ 2;
t416 = t297 * qJD(2);
t415 = t314 * qJD(3);
t414 = t317 * qJD(3);
t413 = pkin(2) * t314 * qJD(2);
t412 = pkin(2) * t443;
t411 = t314 * t464;
t409 = t470 * t446;
t407 = t309 * t445;
t406 = t282 * t434;
t405 = qJD(2) * t464;
t404 = t312 * t445;
t403 = t314 * t443;
t402 = t159 * t514;
t401 = t194 * t513;
t400 = t236 * t515;
t399 = t236 * t512;
t397 = t465 / 0.2e1;
t239 = t293 * t298;
t390 = -qJD(6) + t446;
t389 = qJD(5) + t437;
t388 = t342 * t404;
t385 = t256 / 0.2e1 - t468 / 0.2e1;
t384 = -t288 / 0.2e1 + t467 / 0.2e1;
t173 = pkin(5) * t207 + t530;
t174 = pkin(5) * t210 + t231;
t332 = -pkin(5) * t342 - pkin(9) * t469 + t112;
t85 = -pkin(9) * t210 + t113;
t40 = t313 * t85 - t316 * t332;
t3 = -(t504 - t505) * t342 - t40 * t282 + t173 * t144 + t174 * t187;
t365 = t158 * t316 - t159 * t313;
t320 = -t144 * t522 + t528 * t187 + t365 * t514;
t5 = t400 + t320;
t383 = -t5 * qJD(1) + t3 * qJD(2);
t41 = t313 * t332 + t316 * t85;
t4 = (t503 + t506) * t342 - t41 * t282 + t173 * t192 - t174 * t191;
t364 = t158 * t313 + t159 * t316;
t319 = -t191 * t521 + t192 * t519 + t194 * t398 + t364 * t513;
t6 = t399 + t319;
t382 = -t6 * qJD(1) + t4 * qJD(2);
t16 = t112 * t114 + t113 * t115 + t530 * t231;
t353 = t231 * t522 + t537;
t357 = t495 / 0.2e1 - t496 / 0.2e1;
t321 = t114 * t524 + t115 * t523 - t194 * t357 + t353;
t2 = t321 + t536;
t381 = t2 * qJD(1) + t16 * qJD(2);
t336 = t347 * t194;
t54 = -t483 / 0.2e1 - t336;
t271 = t509 * t309;
t272 = t509 * t312;
t206 = -t271 * t313 + t272 * t316;
t329 = t174 * t512 + t192 * t511 + t206 * t518;
t358 = -t505 / 0.2e1 + t504 / 0.2e1;
t9 = -t329 + t358;
t380 = qJD(1) * t54 + qJD(2) * t9;
t204 = t271 * t316 + t272 * t313;
t330 = -t144 * t511 + t174 * t516 + t204 * t517;
t359 = -t506 / 0.2e1 - t503 / 0.2e1;
t10 = -t330 + t359;
t335 = t346 * t194;
t55 = t484 / 0.2e1 - t335;
t379 = qJD(1) * t55 + qJD(2) * t10;
t367 = -t112 * t312 - t113 * t309;
t13 = (t493 + t494) * t282 - t367 * t342;
t355 = t309 * t523 + t312 * t524;
t337 = t355 * t342;
t34 = -t337 - t526;
t378 = t34 * qJD(1) - t13 * qJD(2);
t324 = -t231 * t519 - t353 + t537;
t340 = t237 * t310 / 0.2e1 + t236 * t410;
t14 = (t411 / 0.2e1 + t340) * pkin(3) + t324;
t66 = t305 * t510;
t377 = -t14 * qJD(1) + t66 * qJD(2);
t17 = -t144 * t174 - t342 * t40;
t327 = -t144 * t521 + t365 * t517;
t349 = -t463 / 0.2e1 - t458 / 0.2e1;
t20 = t327 + t349;
t376 = qJD(1) * t20 - qJD(2) * t17;
t18 = t174 * t192 + t342 * t41;
t326 = t192 * t521 + t364 * t517;
t348 = -t462 / 0.2e1 + t459 / 0.2e1;
t19 = t326 + t348;
t375 = qJD(1) * t19 - qJD(2) * t18;
t354 = -t491 / 0.2e1 + t492 / 0.2e1;
t325 = -t342 * t354 + t401;
t351 = -t481 / 0.2e1 - t480 / 0.2e1;
t24 = t325 + t351;
t39 = t475 - (-t495 + t496) * t342;
t374 = qJD(1) * t24 + qJD(2) * t39;
t333 = t513 * t531 - t387;
t323 = t158 * t513 + t309 * t333;
t26 = t472 / 0.2e1 + t323;
t30 = (t112 + t533) * t282 - (t114 - t535) * t342;
t373 = t26 * qJD(1) + t30 * qJD(2);
t322 = t312 * t333 + t402;
t29 = -t473 / 0.2e1 + t322;
t31 = (-t113 + t477) * t282 - (-t115 - t534) * t342;
t372 = t29 * qJD(1) + t31 * qJD(2);
t371 = t36 * qJD(1);
t44 = t367 * t282;
t328 = t449 * t464;
t45 = t282 * t355 + t328;
t370 = -qJD(1) * t45 + qJD(2) * t44;
t352 = t518 * t531 + t401;
t67 = t397 - t352;
t88 = t342 * t530 + t475;
t369 = -qJD(1) * t67 + qJD(2) * t88;
t49 = t144 * t280 - t284 * t192;
t65 = t144 ^ 2 - t192 ^ 2;
t368 = qJD(2) * t65 + qJD(3) * t49;
t366 = -t114 * t309 + t115 * t312;
t363 = -t282 * t298 + t304 * t342;
t185 = t280 ^ 2 - t284 ^ 2;
t362 = qJD(2) * t49 + qJD(3) * t185;
t361 = -t440 - t425;
t89 = t254 / 0.2e1 + (t396 - t456) * t282;
t360 = qJD(2) * t89 - t438;
t72 = -t144 * t512 + t192 * t516;
t345 = qJD(3) * t72 - t144 * t448;
t344 = -qJD(2) * t72 + t280 * t438;
t343 = qJD(6) * t449 - t342 * t445;
t42 = -t357 + t384;
t52 = t354 + t385;
t334 = qJD(1) * t52 + qJD(2) * t42 - qJD(3) * t239;
t268 = t449 * qJD(3);
t183 = t510 / 0.2e1 + t339 * pkin(3);
t164 = t386 + t449;
t121 = -t342 * t346 - t398;
t111 = t116 * qJD(6);
t110 = t117 * qJD(6);
t92 = -t254 / 0.2e1 + (t393 + t346) * t282;
t87 = t109 - t432;
t71 = t72 * qJD(6);
t68 = t397 + t352;
t57 = t483 / 0.2e1 - t336;
t56 = -t484 / 0.2e1 - t335;
t53 = -t354 + t385;
t47 = t49 * qJD(6);
t46 = t309 * t402 - t158 * t469 / 0.2e1 + t328;
t43 = t357 + t384;
t37 = t331 - t356;
t35 = t36 * qJD(3);
t33 = -t337 + t526;
t28 = t473 / 0.2e1 + t322;
t27 = -t472 / 0.2e1 + t323;
t23 = t325 - t351;
t22 = -t326 + t348;
t21 = -t327 + t349;
t15 = -t324 + (-t411 / 0.2e1 + t340) * pkin(3);
t12 = t329 + t358;
t11 = t330 + t359;
t8 = t399 - t319;
t7 = t400 - t320;
t1 = t321 - t536;
t48 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t58, 0, 0, 0, qJD(2) * t32 + qJD(3) * t25, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t311 * t444, -t405, 0, 0, 0, 0, 0 (-t315 * t443 - t318 * t415) * t311 (t314 * t444 - t318 * t414) * t311 (t236 * t282 + t237 * t342) * qJD(2) + t35, t450 + (t237 * t530 + t305 * t465 + t476) * qJD(2) + t15 * qJD(3) + t68 * qJD(4) (-t203 * t342 + t210 * t236) * qJD(2) + t27 * qJD(3) (t205 * t342 + t236 * t469) * qJD(2) + t28 * qJD(3), t33 * qJD(3) + (-t480 - t481) * t445, t455 + (t112 * t203 + t113 * t205 + t476) * qJD(2) + t1 * qJD(3) + t23 * qJD(4) + t46 * qJD(5), 0, 0, 0, 0, 0 (-(t459 - t462) * t342 + t236 * t144) * qJD(2) + t7 * qJD(3) + t22 * qJD(6) ((t458 + t463) * t342 + t236 * t192) * qJD(2) + t8 * qJD(3) + t21 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t270 * qJD(3) - t314 * t405, t269 * qJD(3) - t317 * t405, t454, t15 * qJD(2) + (-t194 * t310 - t501 * t531) * t507, qJD(2) * t27 - t435 * t531, qJD(2) * t28 + t436 * t531, t33 * qJD(2) - t194 * t417, t471 + t1 * qJD(2) + (-t194 * t239 + t304 * t531) * qJD(3) + t53 * qJD(5), 0, 0, 0, 0, 0, qJD(2) * t7 + qJD(6) * t57 + t440 * t531, qJD(2) * t8 + qJD(6) * t56 + t438 * t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * qJD(2), 0, 0, 0, t23 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t46 + qJD(3) * t53, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 * qJD(2) + t57 * qJD(3) - qJD(6) * t364, t21 * qJD(2) + t56 * qJD(3) - qJD(6) * t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, -qJD(3) * t14 - qJD(4) * t67 - t450, t26 * qJD(3), t29 * qJD(3), t34 * qJD(3), qJD(3) * t2 + qJD(4) * t24 - qJD(5) * t45 - t455, 0, 0, 0, 0, 0, -qJD(3) * t5 - qJD(6) * t19, -qJD(3) * t6 - qJD(6) * t20; 0, 0, 0, 0, t314 * t414, t297 * qJD(3), 0, 0, 0, -pkin(2) * t415, -pkin(2) * t414, qJD(4) * t222, qJD(3) * t66 + qJD(4) * t88, qJD(3) * t30 + qJD(4) * t168 + t312 * t406, qJD(3) * t31 + qJD(4) * t214 - t309 * t406, -qJD(3) * t13 + qJD(5) * t130, qJD(3) * t16 + qJD(4) * t39 + qJD(5) * t44 (-qJD(3) * t191 - t527) * t192, qJD(3) * t50 + qJD(6) * t65, qJD(3) * t75 + t144 * t433, qJD(3) * t73 + t192 * t433, -t342 * t439, qJD(3) * t3 + qJD(4) * t74 + qJD(6) * t18 - t434 * t470, qJD(3) * t4 + qJD(4) * t76 + qJD(6) * t17 - t144 * t434; 0, 0, 0, 0, t403, t416, t414, -t415, 0, -pkin(8) * t414 - t413, pkin(8) * t415 - t412 (-t282 * t310 - t342 * t501) * t507 + t371 (-t231 * t310 - t501 * t530) * t507 + t183 * qJD(4) + t377 (t309 * t363 - t477) * qJD(3) + t207 * qJD(5) + t373, t530 * t436 + (qJD(3) * t363 + t434) * t312 + t372, qJD(3) * t366 + t378 (t298 * t366 + t304 * t530) * qJD(3) + t37 * qJD(4) + t43 * qJD(5) + t381, t71 - (t438 + t448) * t191, t452 + (-t187 * t284 + t191 * t280) * qJD(3) + t47, qJD(6) * t121 + t282 * t438 + t498, -t280 * t439 + t111 + t500, t343 (t173 * t280 + t187 * t290 - t204 * t282) * qJD(3) + t117 * qJD(5) + t12 * qJD(6) + t383 (t173 * t284 - t191 * t290 - t206 * t282) * qJD(3) - t120 * qJD(5) + t11 * qJD(6) + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419, qJD(3) * t183 + t369, t423, t447, 0, qJD(3) * t37 + qJD(5) * t164 + t374, 0, 0, 0, 0, 0, t111 + t499, qJD(6) * t119 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t207 + t388 -(t407 - t435) * t342, t427, qJD(3) * t43 + qJD(4) * t164 + t370, 0, 0, 0, 0, 0, qJD(6) * t92 - t409 + t441, -qJD(3) * t120 - t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t368, qJD(3) * t121 + t144 * t390, t192 * t390 + t442, t268, qJD(3) * t12 + qJD(4) * t116 + qJD(5) * t92 - qJD(6) * t41 - t375, qJD(3) * t11 + qJD(4) * t119 + qJD(6) * t40 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, qJD(2) * t14, -t26 * qJD(2), -t29 * qJD(2), -t34 * qJD(2), -qJD(2) * t2 - qJD(5) * t52 - t471, 0, 0, 0, 0, 0, qJD(2) * t5 - qJD(6) * t54, qJD(2) * t6 - qJD(6) * t55; 0, 0, 0, 0, -t403, -t416, 0, 0, 0, t413, t412, -t371, qJD(4) * t184 - t377, -qJD(4) * t469 - t373, qJD(4) * t210 - t372, qJD(4) * t213 - t378, qJD(4) * t38 - qJD(5) * t42 - t381, t191 * t448 + t71, t47 - t452, qJD(6) * t118 - t498, t110 - t500, -t343, qJD(4) * t470 + qJD(5) * t116 - qJD(6) * t9 - t383, qJD(4) * t144 + qJD(5) * t119 - qJD(6) * t10 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293 * qJD(5), t239 * qJD(5), -t284 * t273, t185 * qJD(6), 0, 0, 0, t290 * t432, -t290 * t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t404, t421, t420, t453, 0, 0, 0, 0, 0, t426, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, -t334, 0, 0, 0, 0, 0, t431, t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t362, -t273 + t430, t87, -t418, -qJD(6) * t206 + t284 * t437 - t380, qJD(6) * t204 - t280 * t437 - t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67 * qJD(2), 0, 0, 0, -t24 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -qJD(3) * t184 - t369, t282 * t435 - t423, -qJD(3) * t210 - t447, -t213 * qJD(3), -qJD(3) * t38 + qJD(5) * t165 - t374, 0, 0, 0, 0, 0, -qJD(3) * t470 + t110 - t499, -qJD(3) * t144 - qJD(6) * t120 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t422, t404, -t421, -t420, -t453, 0, 0, 0, 0, 0, -t426, -t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t273 - t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t45 + qJD(3) * t52, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t342 * t407, -t427, qJD(3) * t42 - qJD(4) * t165 - t370, 0, 0, 0, 0, 0, -qJD(6) * t89 + t409 - t442, -qJD(3) * t119 - t527 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, t334, 0, 0, 0, 0, 0, -t431 + t432, -t273 - t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t19 + qJD(3) * t54, qJD(2) * t20 + qJD(3) * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t368, -qJD(3) * t118 - t532, -t192 * t446 - t441, t268, qJD(3) * t9 - qJD(4) * t117 + qJD(5) * t89 + t375, qJD(3) * t10 + qJD(4) * t120 + qJD(5) * t144 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t362, -t430, -t109, t418, -t284 * t389 + t380, t280 * t389 + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360, -t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
