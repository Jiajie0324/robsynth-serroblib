% Calculate time derivative of joint inertia matrix for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [6x6]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6RPRPRR13_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: pkin has to be [12x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRR13_inertiaDJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:21:47
% EndTime: 2019-03-09 04:22:27
% DurationCPUTime: 21.83s
% Computational Cost: add. (120564->1112), mult. (362453->1428), div. (0->0), fcn. (434026->14), ass. (0->455)
t428 = sin(qJ(1));
t549 = cos(pkin(12));
t551 = cos(pkin(6));
t493 = t551 * t549;
t546 = sin(pkin(12));
t567 = cos(qJ(1));
t458 = t428 * t546 - t493 * t567;
t548 = sin(pkin(6));
t550 = cos(pkin(7));
t490 = t550 * t548;
t547 = sin(pkin(7));
t392 = t458 * t547 - t567 * t490;
t491 = t551 * t546;
t460 = -t428 * t491 + t549 * t567;
t566 = cos(qJ(3));
t459 = t428 * t493 + t546 * t567;
t450 = t459 * t550;
t489 = t548 * t547;
t564 = sin(qJ(3));
t468 = t564 * t489;
t594 = t428 * t468 - t564 * t450;
t376 = t460 * t566 + t594;
t457 = -t428 * t549 - t491 * t567;
t403 = t457 * qJD(1);
t455 = qJD(1) * t458;
t446 = t550 * t455;
t469 = t566 * t489;
t463 = t567 * t469;
t304 = -qJD(1) * t463 + qJD(3) * t376 + t403 * t564 - t446 * t566;
t593 = -t428 * t469 + t566 * t450;
t375 = t460 * t564 + t593;
t462 = t567 * t468;
t305 = qJD(1) * t462 - qJD(3) * t375 + t403 * t566 + t446 * t564;
t385 = t392 * qJD(1);
t204 = Icges(4,5) * t305 - Icges(4,6) * t304 - Icges(4,3) * t385;
t210 = -Icges(5,1) * t385 - Icges(5,4) * t305 + Icges(5,5) * t304;
t449 = t459 * t547;
t474 = t428 * t490;
t393 = t449 + t474;
t608 = (t204 + t210) * t393;
t607 = t549 * t490 + t551 * t547;
t452 = t458 * t550;
t373 = t566 * t452 - t457 * t564 + t463;
t374 = -t452 * t564 - t457 * t566 - t462;
t270 = Icges(5,5) * t392 - Icges(5,6) * t374 + Icges(5,3) * t373;
t276 = Icges(4,4) * t374 - Icges(4,2) * t373 + Icges(4,6) * t392;
t598 = t270 - t276;
t271 = Icges(5,5) * t393 - Icges(5,6) * t376 + Icges(5,3) * t375;
t277 = Icges(4,4) * t376 - Icges(4,2) * t375 + Icges(4,6) * t393;
t597 = t271 - t277;
t272 = Icges(4,5) * t374 - Icges(4,6) * t373 + Icges(4,3) * t392;
t278 = Icges(5,1) * t392 - Icges(5,4) * t374 + Icges(5,5) * t373;
t535 = t272 + t278;
t273 = Icges(4,5) * t376 - Icges(4,6) * t375 + Icges(4,3) * t393;
t279 = Icges(5,1) * t393 - Icges(5,4) * t376 + Icges(5,5) * t375;
t534 = t273 + t279;
t274 = Icges(5,4) * t392 - Icges(5,2) * t374 + Icges(5,6) * t373;
t280 = Icges(4,1) * t374 - Icges(4,4) * t373 + Icges(4,5) * t392;
t596 = -t274 + t280;
t275 = Icges(5,4) * t393 - Icges(5,2) * t376 + Icges(5,6) * t375;
t281 = Icges(4,1) * t376 - Icges(4,4) * t375 + Icges(4,5) * t393;
t595 = -t275 + t281;
t488 = t548 * t546;
t389 = t564 * t488 - t566 * t607;
t390 = t488 * t566 + t564 * t607;
t406 = -t489 * t549 + t550 * t551;
t337 = Icges(5,5) * t406 - Icges(5,6) * t390 + Icges(5,3) * t389;
t339 = Icges(5,4) * t406 - Icges(5,2) * t390 + Icges(5,6) * t389;
t340 = Icges(4,4) * t390 - Icges(4,2) * t389 + Icges(4,6) * t406;
t342 = Icges(4,1) * t390 - Icges(4,4) * t389 + Icges(4,5) * t406;
t381 = t389 * qJD(3);
t382 = t390 * qJD(3);
t346 = Icges(5,6) * t381 + Icges(5,3) * t382;
t347 = Icges(5,2) * t381 + Icges(5,6) * t382;
t348 = -Icges(4,5) * t381 - Icges(4,6) * t382;
t349 = Icges(5,4) * t381 + Icges(5,5) * t382;
t350 = -Icges(4,4) * t381 - Icges(4,2) * t382;
t351 = -Icges(4,1) * t381 - Icges(4,4) * t382;
t606 = (t348 + t349) * t406 + (-t347 + t351) * t390 + (t346 - t350) * t389 + (t337 - t340) * t382 + (t339 - t342) * t381;
t605 = t392 * pkin(9);
t427 = sin(qJ(5));
t565 = cos(qJ(5));
t330 = -t373 * t565 + t392 * t427;
t331 = t373 * t427 + t392 * t565;
t235 = Icges(6,5) * t331 - Icges(6,6) * t330 + Icges(6,3) * t374;
t237 = Icges(6,4) * t331 - Icges(6,2) * t330 + Icges(6,6) * t374;
t239 = Icges(6,1) * t331 - Icges(6,4) * t330 + Icges(6,5) * t374;
t332 = -t375 * t565 + t393 * t427;
t333 = t375 * t427 + t393 * t565;
t108 = t235 * t376 - t237 * t332 + t239 * t333;
t236 = Icges(6,5) * t333 - Icges(6,6) * t332 + Icges(6,3) * t376;
t238 = Icges(6,4) * t333 - Icges(6,2) * t332 + Icges(6,6) * t376;
t240 = Icges(6,1) * t333 - Icges(6,4) * t332 + Icges(6,5) * t376;
t109 = t236 * t376 - t238 * t332 + t240 * t333;
t371 = -t389 * t565 + t406 * t427;
t372 = t389 * t427 + t406 * t565;
t265 = Icges(6,5) * t372 - Icges(6,6) * t371 + Icges(6,3) * t390;
t266 = Icges(6,4) * t372 - Icges(6,2) * t371 + Icges(6,6) * t390;
t267 = Icges(6,1) * t372 - Icges(6,4) * t371 + Icges(6,5) * t390;
t123 = t265 * t376 - t266 * t332 + t267 * t333;
t226 = -qJD(5) * t332 + t304 * t427 - t385 * t565;
t426 = sin(qJ(6));
t429 = cos(qJ(6));
t264 = t333 * t429 + t376 * t426;
t157 = -qJD(6) * t264 - t226 * t426 + t305 * t429;
t263 = -t333 * t426 + t376 * t429;
t158 = qJD(6) * t263 + t226 * t429 + t305 * t426;
t261 = -t331 * t426 + t374 * t429;
t262 = t331 * t429 + t374 * t426;
t179 = Icges(7,5) * t262 + Icges(7,6) * t261 + Icges(7,3) * t330;
t181 = Icges(7,4) * t262 + Icges(7,2) * t261 + Icges(7,6) * t330;
t183 = Icges(7,1) * t262 + Icges(7,4) * t261 + Icges(7,5) * t330;
t225 = qJD(5) * t333 - t304 * t565 - t385 * t427;
t404 = t460 * qJD(1);
t306 = qJD(1) * t593 + qJD(3) * t374 + t404 * t564;
t386 = t393 * qJD(1);
t228 = -qJD(5) * t330 + t306 * t427 + t386 * t565;
t307 = qJD(1) * t594 - qJD(3) * t373 + t404 * t566;
t159 = -qJD(6) * t262 - t228 * t426 + t307 * t429;
t160 = qJD(6) * t261 + t228 * t429 + t307 * t426;
t227 = qJD(5) * t331 - t306 * t565 + t386 * t427;
t81 = Icges(7,5) * t160 + Icges(7,6) * t159 + Icges(7,3) * t227;
t83 = Icges(7,4) * t160 + Icges(7,2) * t159 + Icges(7,6) * t227;
t85 = Icges(7,1) * t160 + Icges(7,4) * t159 + Icges(7,5) * t227;
t16 = t157 * t181 + t158 * t183 + t179 * t225 + t263 * t83 + t264 * t85 + t332 * t81;
t180 = Icges(7,5) * t264 + Icges(7,6) * t263 + Icges(7,3) * t332;
t182 = Icges(7,4) * t264 + Icges(7,2) * t263 + Icges(7,6) * t332;
t184 = Icges(7,1) * t264 + Icges(7,4) * t263 + Icges(7,5) * t332;
t80 = Icges(7,5) * t158 + Icges(7,6) * t157 + Icges(7,3) * t225;
t82 = Icges(7,4) * t158 + Icges(7,2) * t157 + Icges(7,6) * t225;
t84 = Icges(7,1) * t158 + Icges(7,4) * t157 + Icges(7,5) * t225;
t17 = t157 * t182 + t158 * t184 + t180 * t225 + t263 * t82 + t264 * t84 + t332 * t80;
t320 = -qJD(5) * t371 + t382 * t427;
t323 = t372 * t429 + t390 * t426;
t243 = -qJD(6) * t323 - t320 * t426 - t381 * t429;
t322 = -t372 * t426 + t390 * t429;
t244 = qJD(6) * t322 + t320 * t429 - t381 * t426;
t321 = qJD(5) * t372 - t382 * t565;
t149 = Icges(7,5) * t244 + Icges(7,6) * t243 + Icges(7,3) * t321;
t150 = Icges(7,4) * t244 + Icges(7,2) * t243 + Icges(7,6) * t321;
t151 = Icges(7,1) * t244 + Icges(7,4) * t243 + Icges(7,5) * t321;
t229 = Icges(7,5) * t323 + Icges(7,6) * t322 + Icges(7,3) * t371;
t230 = Icges(7,4) * t323 + Icges(7,2) * t322 + Icges(7,6) * t371;
t231 = Icges(7,1) * t323 + Icges(7,4) * t322 + Icges(7,5) * t371;
t30 = t149 * t332 + t150 * t263 + t151 * t264 + t157 * t230 + t158 * t231 + t225 * t229;
t68 = t179 * t332 + t181 * t263 + t183 * t264;
t69 = t180 * t332 + t182 * t263 + t184 * t264;
t95 = t229 * t332 + t230 * t263 + t231 * t264;
t3 = t16 * t374 + t17 * t376 + t30 * t390 + t305 * t69 + t307 * t68 - t381 * t95;
t130 = Icges(6,5) * t228 - Icges(6,6) * t227 + Icges(6,3) * t307;
t132 = Icges(6,4) * t228 - Icges(6,2) * t227 + Icges(6,6) * t307;
t134 = Icges(6,1) * t228 - Icges(6,4) * t227 + Icges(6,5) * t307;
t40 = t130 * t376 - t132 * t332 + t134 * t333 - t225 * t237 + t226 * t239 + t235 * t305;
t129 = Icges(6,5) * t226 - Icges(6,6) * t225 + Icges(6,3) * t305;
t131 = Icges(6,4) * t226 - Icges(6,2) * t225 + Icges(6,6) * t305;
t133 = Icges(6,1) * t226 - Icges(6,4) * t225 + Icges(6,5) * t305;
t41 = t129 * t376 - t131 * t332 + t133 * t333 - t225 * t238 + t226 * t240 + t236 * t305;
t245 = Icges(6,5) * t320 - Icges(6,6) * t321 - Icges(6,3) * t381;
t246 = Icges(6,4) * t320 - Icges(6,2) * t321 - Icges(6,6) * t381;
t247 = Icges(6,1) * t320 - Icges(6,4) * t321 - Icges(6,5) * t381;
t60 = -t225 * t266 + t226 * t267 + t245 * t376 - t246 * t332 + t247 * t333 + t265 * t305;
t604 = t108 * t307 + t109 * t305 - t123 * t381 + t374 * t40 + t376 * t41 + t390 * t60 + t3;
t106 = t235 * t374 - t237 * t330 + t239 * t331;
t107 = t236 * t374 - t238 * t330 + t240 * t331;
t122 = t265 * t374 - t266 * t330 + t267 * t331;
t18 = t159 * t181 + t160 * t183 + t179 * t227 + t261 * t83 + t262 * t85 + t330 * t81;
t19 = t159 * t182 + t160 * t184 + t180 * t227 + t261 * t82 + t262 * t84 + t330 * t80;
t31 = t149 * t330 + t150 * t261 + t151 * t262 + t159 * t230 + t160 * t231 + t227 * t229;
t66 = t179 * t330 + t181 * t261 + t183 * t262;
t67 = t180 * t330 + t182 * t261 + t184 * t262;
t94 = t229 * t330 + t230 * t261 + t231 * t262;
t4 = t18 * t374 + t19 * t376 + t305 * t67 + t307 * t66 + t31 * t390 - t381 * t94;
t42 = t130 * t374 - t132 * t330 + t134 * t331 - t227 * t237 + t228 * t239 + t235 * t307;
t43 = t129 * t374 - t131 * t330 + t133 * t331 - t227 * t238 + t228 * t240 + t236 * t307;
t61 = -t227 * t266 + t228 * t267 + t245 * t374 - t246 * t330 + t247 * t331 + t265 * t307;
t603 = t106 * t307 + t107 * t305 - t122 * t381 + t374 * t42 + t376 * t43 + t390 * t61 + t4;
t114 = t235 * t390 - t237 * t371 + t239 * t372;
t115 = t236 * t390 - t238 * t371 + t240 * t372;
t51 = t130 * t390 - t132 * t371 + t134 * t372 - t235 * t381 - t237 * t321 + t239 * t320;
t52 = t129 * t390 - t131 * t371 + t133 * t372 - t236 * t381 - t238 * t321 + t240 * t320;
t140 = t265 * t390 - t266 * t371 + t267 * t372;
t138 = t140 * t381;
t72 = t390 * t245 - t371 * t246 + t372 * t247 - t381 * t265 - t321 * t266 + t320 * t267;
t552 = t72 * t390 - t138;
t21 = t179 * t321 + t181 * t243 + t183 * t244 + t322 * t83 + t323 * t85 + t371 * t81;
t22 = t180 * t321 + t182 * t243 + t184 * t244 + t322 * t82 + t323 * t84 + t371 * t80;
t103 = t229 * t371 + t230 * t322 + t231 * t323;
t48 = t371 * t149 + t322 * t150 + t323 * t151 + t321 * t229 + t243 * t230 + t244 * t231;
t553 = -t103 * t381 + t48 * t390;
t77 = t179 * t371 + t181 * t322 + t183 * t323;
t78 = t180 * t371 + t182 * t322 + t184 * t323;
t8 = t21 * t374 + t22 * t376 + t78 * t305 + t77 * t307 + t553;
t602 = t114 * t307 + t115 * t305 + t51 * t374 + t52 * t376 + t552 + t8;
t203 = Icges(5,5) * t386 - Icges(5,6) * t307 + Icges(5,3) * t306;
t209 = Icges(4,4) * t307 - Icges(4,2) * t306 + Icges(4,6) * t386;
t600 = t203 - t209;
t207 = Icges(5,4) * t386 - Icges(5,2) * t307 + Icges(5,6) * t306;
t213 = Icges(4,1) * t307 - Icges(4,4) * t306 + Icges(4,5) * t386;
t599 = -t207 + t213;
t592 = -0.2e1 * t385;
t591 = 0.2e1 * t386;
t202 = -Icges(5,5) * t385 - Icges(5,6) * t305 + Icges(5,3) * t304;
t208 = Icges(4,4) * t305 - Icges(4,2) * t304 - Icges(4,6) * t385;
t590 = (t202 - t208) * t393;
t206 = -Icges(5,4) * t385 - Icges(5,2) * t305 + Icges(5,6) * t304;
t212 = Icges(4,1) * t305 - Icges(4,4) * t304 - Icges(4,5) * t385;
t589 = (-t206 + t212) * t393;
t586 = m(4) / 0.2e1;
t585 = m(5) / 0.2e1;
t584 = m(6) / 0.2e1;
t583 = m(7) / 0.2e1;
t24 = t330 * t66 + t332 * t67 + t371 * t94;
t582 = t24 / 0.2e1;
t25 = t330 * t68 + t332 * t69 + t371 * t95;
t581 = t25 / 0.2e1;
t580 = t225 / 0.2e1;
t579 = t227 / 0.2e1;
t578 = t321 / 0.2e1;
t577 = t330 / 0.2e1;
t576 = t332 / 0.2e1;
t575 = t371 / 0.2e1;
t574 = -t381 / 0.2e1;
t573 = t392 / 0.2e1;
t572 = t393 / 0.2e1;
t571 = t406 / 0.2e1;
t570 = -pkin(3) + rSges(5,2);
t569 = -pkin(3) - rSges(6,3);
t568 = -pkin(11) - rSges(7,3);
t216 = t305 * rSges(4,1) - t304 * rSges(4,2) - t385 * rSges(4,3);
t217 = t307 * rSges(4,1) - t306 * rSges(4,2) + t386 * rSges(4,3);
t282 = t374 * rSges(4,1) - t373 * rSges(4,2) + t392 * rSges(4,3);
t283 = t376 * rSges(4,1) - t375 * rSges(4,2) + t393 * rSges(4,3);
t105 = -t216 * t392 + t217 * t393 - t282 * t385 - t283 * t386;
t563 = m(4) * t105;
t562 = pkin(10) * t381;
t561 = t228 * pkin(5);
t560 = t307 * pkin(3);
t559 = t331 * pkin(5);
t558 = t374 * pkin(3);
t557 = t428 * pkin(1);
t556 = t103 * t321 + t48 * t371;
t86 = t158 * rSges(7,1) + t157 * rSges(7,2) + t225 * rSges(7,3);
t555 = t226 * pkin(5) + t225 * pkin(11) + t86;
t483 = -t160 * rSges(7,1) - t159 * rSges(7,2);
t87 = t227 * rSges(7,3) - t483;
t554 = t227 * pkin(11) + t561 + t87;
t152 = rSges(7,1) * t244 + rSges(7,2) * t243 + rSges(7,3) * t321;
t545 = pkin(5) * t320 + pkin(11) * t321 + t152;
t544 = t606 * t406;
t482 = -t262 * rSges(7,1) - t261 * rSges(7,2);
t185 = t330 * rSges(7,3) - t482;
t543 = t330 * pkin(11) + t185 + t559;
t186 = t264 * rSges(7,1) + t263 * rSges(7,2) + t332 * rSges(7,3);
t542 = t333 * pkin(5) + t332 * pkin(11) + t186;
t529 = -t306 * qJ(4) - t373 * qJD(4);
t199 = -t529 + t560;
t361 = t373 * qJ(4);
t310 = t361 + t558;
t541 = t393 * t199 - t385 * t310;
t198 = t305 * pkin(3) + t304 * qJ(4) + t375 * qJD(4);
t257 = -t385 * pkin(4) + t305 * pkin(10);
t540 = -t198 - t257;
t258 = t386 * pkin(4) + t307 * pkin(10);
t539 = -t199 - t258;
t205 = Icges(4,5) * t307 - Icges(4,6) * t306 + Icges(4,3) * t386;
t211 = Icges(5,1) * t386 - Icges(5,4) * t307 + Icges(5,5) * t306;
t537 = t211 + t205;
t232 = rSges(7,1) * t323 + rSges(7,2) * t322 + rSges(7,3) * t371;
t536 = pkin(5) * t372 + pkin(11) * t371 + t232;
t285 = t393 * rSges(5,1) - t376 * rSges(5,2) + t375 * rSges(5,3);
t311 = t376 * pkin(3) + t375 * qJ(4);
t533 = -t285 - t311;
t286 = t393 * t310;
t334 = t392 * pkin(4) + t374 * pkin(10);
t532 = t393 * t334 + t286;
t312 = -pkin(3) * t381 + qJ(4) * t382 + qJD(4) * t389;
t356 = pkin(3) * t390 + qJ(4) * t389;
t531 = t392 * t312 + t386 * t356;
t288 = t406 * t311;
t335 = t393 * pkin(4) + t376 * pkin(10);
t530 = t406 * t335 + t288;
t528 = -t310 - t334;
t527 = -t311 - t335;
t319 = t392 * t356;
t377 = pkin(4) * t406 + pkin(10) * t390;
t526 = t392 * t377 + t319;
t344 = rSges(5,1) * t406 - rSges(5,2) * t390 + rSges(5,3) * t389;
t525 = -t344 - t356;
t524 = -t356 - t377;
t425 = t567 * pkin(1);
t508 = t548 * qJ(2);
t523 = t428 * t508 + t425;
t520 = 0.2e1 * t551;
t519 = 0.2e1 * qJD(1);
t518 = t21 / 0.2e1 + t31 / 0.2e1;
t517 = t22 / 0.2e1 + t30 / 0.2e1;
t516 = t77 / 0.2e1 + t94 / 0.2e1;
t515 = t78 / 0.2e1 + t95 / 0.2e1;
t197 = t406 * t198;
t514 = t406 * t257 + t393 * t562 + t197;
t135 = t226 * rSges(6,1) - t225 * rSges(6,2) + t305 * rSges(6,3);
t242 = t333 * rSges(6,1) - t332 * rSges(6,2) + t376 * rSges(6,3);
t513 = -t242 + t527;
t268 = rSges(6,1) * t372 - rSges(6,2) * t371 + rSges(6,3) * t390;
t512 = -t268 + t524;
t511 = t386 * t377 + t531;
t218 = -t385 * rSges(5,1) - t305 * rSges(5,2) + t304 * rSges(5,3);
t495 = t567 * t548;
t510 = qJ(2) * t495 - t557;
t509 = t428 * t548;
t507 = 0.2e1 * m(4);
t506 = 0.2e1 * m(5);
t504 = 0.2e1 * m(6);
t502 = 0.2e1 * m(7);
t501 = t585 + t584 + t583;
t500 = 0.2e1 * t509;
t499 = t597 * t373 + t595 * t374 + t375 * t598 + t596 * t376 + t534 * t392 + t535 * t393;
t498 = t527 - t542;
t497 = t393 * t258 - t385 * t334 + t541;
t496 = t524 - t536;
t487 = -t386 * rSges(5,1) - t306 * rSges(5,3);
t486 = -t392 * rSges(5,1) - t373 * rSges(5,3);
t485 = -t228 * rSges(6,1) + t227 * rSges(6,2);
t484 = -t331 * rSges(6,1) + t330 * rSges(6,2);
t479 = -0.2e1 * t495;
t477 = qJD(1) * t495;
t478 = qJ(2) * t477 - qJD(1) * t557 + qJD(2) * t509;
t476 = t61 / 0.2e1 + t51 / 0.2e1 + t518;
t475 = t52 / 0.2e1 + t60 / 0.2e1 + t517;
t473 = t122 / 0.2e1 + t114 / 0.2e1 + t516;
t472 = t115 / 0.2e1 + t123 / 0.2e1 + t515;
t456 = t459 * rSges(3,2);
t447 = pkin(9) * t449;
t442 = pkin(2) * t457 + t510 - t605;
t441 = -t361 + t442;
t440 = t460 * pkin(2) + pkin(9) * t474 + t447 + t523;
t422 = qJD(2) * t495;
t439 = -t404 * pkin(2) + t422 + (-t447 - t425 + (-pkin(9) * t490 - t508) * t428) * qJD(1);
t438 = -t334 + t441;
t437 = t311 + t440;
t436 = t439 + t529;
t435 = t403 * pkin(2) - qJD(1) * t605 + t478;
t434 = t335 + t437;
t433 = -t258 + t436;
t432 = t198 + t435;
t430 = t257 + t432;
t370 = rSges(3,1) * t460 + rSges(3,3) * t509 - t456 + t523;
t369 = rSges(3,1) * t457 + rSges(3,2) * t458 + rSges(3,3) * t495 + t510;
t355 = -t404 * rSges(3,1) + t422 + ((-rSges(3,3) - qJ(2)) * t509 - t425 + t456) * qJD(1);
t354 = t403 * rSges(3,1) + rSges(3,2) * t455 + rSges(3,3) * t477 + t478;
t353 = -rSges(4,1) * t381 - rSges(4,2) * t382;
t352 = rSges(5,2) * t381 + rSges(5,3) * t382;
t343 = rSges(4,1) * t390 - rSges(4,2) * t389 + rSges(4,3) * t406;
t341 = Icges(5,1) * t406 - Icges(5,4) * t390 + Icges(5,5) * t389;
t338 = Icges(4,5) * t390 - Icges(4,6) * t389 + Icges(4,3) * t406;
t284 = -t374 * rSges(5,2) - t486;
t250 = t440 + t283;
t249 = -t282 + t442;
t248 = rSges(6,1) * t320 - rSges(6,2) * t321 - rSges(6,3) * t381;
t241 = t374 * rSges(6,3) - t484;
t219 = -t307 * rSges(5,2) - t487;
t215 = t283 * t406 - t343 * t393;
t214 = -t282 * t406 + t343 * t392;
t196 = t437 + t285;
t195 = t374 * t570 + t441 + t486;
t192 = -t217 + t439;
t191 = t435 + t216;
t190 = t337 * t375 - t339 * t376 + t341 * t393;
t189 = t337 * t373 - t339 * t374 + t341 * t392;
t188 = t338 * t393 - t340 * t375 + t342 * t376;
t187 = t338 * t392 - t340 * t373 + t342 * t374;
t176 = t242 * t390 - t268 * t376;
t175 = -t241 * t390 + t268 * t374;
t172 = t434 + t242;
t171 = t374 * t569 + t438 + t484;
t170 = t285 * t406 + t393 * t525 + t288;
t169 = t344 * t392 + t319 + (-t284 - t310) * t406;
t166 = t271 * t389 - t275 * t390 + t279 * t406;
t165 = t270 * t389 - t274 * t390 + t278 * t406;
t164 = t273 * t406 - t277 * t389 + t281 * t390;
t163 = t272 * t406 - t276 * t389 + t280 * t390;
t162 = -t217 * t406 + t343 * t386 + t353 * t392;
t161 = t216 * t406 + t343 * t385 - t353 * t393;
t139 = t241 * t376 - t242 * t374;
t136 = t307 * rSges(6,3) - t485;
t128 = t284 * t393 + t392 * t533 + t286;
t127 = t307 * t570 + t436 + t487;
t126 = t432 + t218;
t121 = t186 * t371 - t232 * t332;
t120 = -t185 * t371 + t232 * t330;
t119 = t434 + t542;
t118 = t330 * t568 + t438 + t482 - t558 - t559;
t117 = t242 * t406 + t393 * t512 + t530;
t116 = t268 * t392 + (-t241 + t528) * t406 + t526;
t113 = t306 * t337 - t307 * t339 + t341 * t386 + t346 * t373 - t347 * t374 + t349 * t392;
t112 = t304 * t337 - t305 * t339 - t341 * t385 + t346 * t375 - t347 * t376 + t349 * t393;
t111 = -t306 * t340 + t307 * t342 + t338 * t386 + t348 * t392 - t350 * t373 + t351 * t374;
t110 = -t304 * t340 + t305 * t342 - t338 * t385 + t348 * t393 - t350 * t375 + t351 * t376;
t104 = t185 * t332 - t186 * t330;
t101 = t241 * t393 + t392 * t513 + t532;
t100 = t344 * t386 + t352 * t392 + (-t199 - t219) * t406 + t531;
t99 = t218 * t406 + t197 + (-t312 - t352) * t393 - t525 * t385;
t97 = -t376 * t536 + t390 * t542;
t96 = t374 * t536 - t390 * t543;
t93 = t307 * t569 + t433 + t485;
t92 = t430 + t135;
t91 = t203 * t389 - t207 * t390 + t211 * t406 + t270 * t382 + t274 * t381;
t90 = t202 * t389 - t206 * t390 + t210 * t406 + t271 * t382 + t275 * t381;
t89 = t204 * t406 - t208 * t389 + t212 * t390 - t277 * t382 - t281 * t381;
t88 = t205 * t406 - t209 * t389 + t213 * t390 - t276 * t382 - t280 * t381;
t79 = -t374 * t542 + t376 * t543;
t76 = t393 * t496 + t406 * t542 + t530;
t75 = t536 * t392 + (t528 - t543) * t406 + t526;
t74 = -t136 * t390 + t241 * t381 + t248 * t374 + t268 * t307;
t73 = t135 * t390 - t242 * t381 - t248 * t376 - t268 * t305;
t71 = t72 * t406;
t65 = t392 * t498 + t393 * t543 + t532;
t64 = t219 * t393 - t284 * t385 + (-t198 - t218) * t392 + t533 * t386 + t541;
t63 = t268 * t386 + (t248 - t562) * t392 + (-t136 + t539) * t406 + t511;
t62 = t135 * t406 + (-t248 - t312) * t393 - t512 * t385 + t514;
t59 = -t135 * t374 + t136 * t376 + t241 * t305 - t242 * t307;
t58 = t227 * t568 + t433 + t483 - t560 - t561;
t57 = t430 + t555;
t56 = t108 * t392 + t109 * t393 + t123 * t406;
t55 = t106 * t392 + t107 * t393 + t122 * t406;
t54 = t108 * t374 + t109 * t376 + t123 * t390;
t53 = t106 * t374 + t107 * t376 + t122 * t390;
t50 = t152 * t330 - t185 * t321 + t227 * t232 - t371 * t87;
t49 = -t152 * t332 + t186 * t321 - t225 * t232 + t371 * t86;
t47 = t48 * t406;
t44 = t136 * t393 - t241 * t385 + (-t135 + t540) * t392 + t513 * t386 + t497;
t39 = t103 * t406 + t392 * t77 + t393 * t78;
t38 = t536 * t386 + (t545 - t562) * t392 + (t539 - t554) * t406 + t511;
t37 = t555 * t406 + (-t312 - t545) * t393 - t496 * t385 + t514;
t36 = t103 * t390 + t374 * t77 + t376 * t78;
t35 = t307 * t536 + t374 * t545 + t381 * t543 - t390 * t554;
t34 = -t305 * t536 - t376 * t545 - t381 * t542 + t390 * t555;
t33 = t103 * t371 + t330 * t77 + t332 * t78;
t32 = t185 * t225 - t186 * t227 - t330 * t86 + t332 * t87;
t29 = t392 * t68 + t393 * t69 + t406 * t95;
t28 = t392 * t66 + t393 * t67 + t406 * t94;
t27 = t374 * t68 + t376 * t69 + t390 * t95;
t26 = t374 * t66 + t376 * t67 + t390 * t94;
t23 = t305 * t543 - t307 * t542 - t374 * t555 + t376 * t554;
t20 = t554 * t393 - t543 * t385 + (t540 - t555) * t392 + t498 * t386 + t497;
t15 = t114 * t386 - t115 * t385 + t51 * t392 + t52 * t393 + t71;
t13 = t106 * t386 - t107 * t385 + t392 * t42 + t393 * t43 + t406 * t61;
t12 = t108 * t386 - t109 * t385 + t392 * t40 + t393 * t41 + t406 * t60;
t9 = t21 * t392 + t22 * t393 - t78 * t385 + t77 * t386 + t47;
t7 = t21 * t330 + t22 * t332 + t78 * t225 + t77 * t227 + t556;
t6 = t18 * t392 + t19 * t393 + t31 * t406 - t385 * t67 + t386 * t66;
t5 = t16 * t392 + t17 * t393 + t30 * t406 - t385 * t69 + t386 * t68;
t2 = t18 * t330 + t19 * t332 + t225 * t67 + t227 * t66 + t31 * t371 + t321 * t94;
t1 = t16 * t330 + t17 * t332 + t225 * t69 + t227 * t68 + t30 * t371 + t321 * t95;
t10 = [(t191 * t250 + t192 * t249) * t507 + 0.2e1 * m(3) * (t354 * t370 + t355 * t369) + (t118 * t58 + t119 * t57) * t502 + (t126 * t196 + t127 * t195) * t506 + (t171 * t93 + t172 * t92) * t504 + t48 + t72 + t606; (t57 * t479 + t58 * t500 + (t118 * t495 + t119 * t509) * t519) * t583 + (t92 * t479 + t93 * t500 + (t171 * t495 + t172 * t509) * t519) * t584 + (t126 * t479 + t127 * t500 + (t195 * t495 + t196 * t509) * t519) * t585 + (t191 * t479 + t192 * t500 + (t249 * t495 + t250 * t509) * t519) * t586 + m(3) * (t354 * t479 + t355 * t500 + (t369 * t495 + t370 * t509) * t519) / 0.2e1; 0; t47 + t71 + (t116 * t93 + t117 * t92 + t171 * t63 + t172 * t62) * m(6) + (t118 * t38 + t119 * t37 + t57 * t76 + t58 * t75) * m(7) + (t89 / 0.2e1 + t90 / 0.2e1 + t112 / 0.2e1 + t110 / 0.2e1 + t475) * t393 + (t88 / 0.2e1 + t91 / 0.2e1 + t111 / 0.2e1 + t113 / 0.2e1 + t476) * t392 + (t163 / 0.2e1 + t165 / 0.2e1 + t189 / 0.2e1 + t187 / 0.2e1 + t473) * t386 - (t190 / 0.2e1 + t188 / 0.2e1 + t164 / 0.2e1 + t166 / 0.2e1 + t472) * t385 + t544 + m(4) * (t161 * t250 + t162 * t249 + t191 * t215 + t192 * t214) + m(5) * (t100 * t195 + t126 * t170 + t127 * t169 + t196 * t99); (t161 * t479 + t162 * t500 + t105 * t520 + (t214 * t495 + t215 * t509) * t519) * t586 + (t99 * t479 + t100 * t500 + t64 * t520 + (t169 * t495 + t170 * t509) * t519) * t585 + (t62 * t479 + t63 * t500 + t44 * t520 + (t116 * t495 + t117 * t509) * t519) * t584 + (t37 * t479 + t38 * t500 + t20 * t520 + (t495 * t75 + t509 * t76) * t519) * t583; (t65 * t20 + t37 * t76 + t38 * t75) * t502 + (t101 * t44 + t116 * t63 + t117 * t62) * t504 + (t100 * t169 + t128 * t64 + t170 * t99) * t506 + (t215 * t161 + t214 * t162) * t507 + (t28 + t55) * t386 - (t29 + t56) * t385 + (t15 + t9 + (t163 + t165 + t187 + t189) * t386 - (t164 + t166 + t188 + t190) * t385 + t544) * t406 + (0.2e1 * t282 * t563 + t12 + t5 + (t110 + t112 + t89 + t90) * t406 + t499 * t386 + (t592 * t595 + t589) * t376 + (t592 * t597 + t590) * t375 + (t304 * t597 + t305 * t595 - 0.3e1 * t385 * t534 + t608) * t393) * t393 + (t6 + t13 - 0.2e1 * t283 * t563 + (t88 + t91 + t113 + t111) * t406 - t499 * t385 + (t304 * t598 + t305 * t596 + t306 * t597 + t307 * t595 + t375 * t600 + t376 * t599 - t535 * t385 + t534 * t386 + t537 * t393) * t393 + (t591 * t596 + t589) * t374 + (t591 * t598 + t590) * t373 + (t306 * t598 + t596 * t307 + t373 * t600 + t374 * t599 + 0.3e1 * t386 * t535 + t392 * t537 + t608) * t392) * t392; (m(5) * t127 + m(6) * t93 + m(7) * t58) * t375 + (m(5) * t126 + m(6) * t92 + m(7) * t57) * t373 + (m(5) * t196 + m(6) * t172 + m(7) * t119) * t306 + (m(5) * t195 + m(6) * t171 + m(7) * t118) * t304; t501 * (t306 * t479 + t304 * t500 + t382 * t520 + (t373 * t509 + t375 * t495) * t519); (m(5) * t64 + m(6) * t44 + m(7) * t20) * t389 + (m(5) * t128 + m(6) * t101 + m(7) * t65) * t382 + (m(5) * t100 + m(6) * t63 + m(7) * t38) * t375 + (m(5) * t99 + m(6) * t62 + m(7) * t37) * t373 + (m(5) * t170 + m(6) * t117 + m(7) * t76) * t306 + (m(5) * t169 + m(6) * t116 + m(7) * t75) * t304; 0.4e1 * t501 * (t304 * t375 + t306 * t373 + t382 * t389); (t118 * t35 + t119 * t34 + t57 * t97 + t58 * t96) * m(7) + (t171 * t74 + t172 * t73 + t175 * t93 + t176 * t92) * m(6) + t475 * t376 + t476 * t374 + t473 * t307 + t472 * t305 + t552 + t553; (t73 * t479 + t74 * t500 + t59 * t520 + (t175 * t495 + t176 * t509) * t519) * t584 + (t34 * t479 + t35 * t500 + t23 * t520 + (t495 * t96 + t509 * t97) * t519) * t583; (t20 * t79 + t23 * t65 + t34 * t76 + t35 * t75 + t37 * t97 + t38 * t96) * m(7) + (t101 * t59 + t116 * t74 + t117 * t73 + t139 * t44 + t175 * t63 + t176 * t62) * m(6) + (t9 / 0.2e1 + t15 / 0.2e1) * t390 + (t26 / 0.2e1 + t53 / 0.2e1) * t386 - (t27 / 0.2e1 + t54 / 0.2e1) * t385 + (t5 / 0.2e1 + t12 / 0.2e1) * t376 + (t6 / 0.2e1 + t13 / 0.2e1) * t374 + (t28 / 0.2e1 + t55 / 0.2e1) * t307 + (t29 / 0.2e1 + t56 / 0.2e1) * t305 + (t114 * t392 + t115 * t393 + t140 * t406 + t39) * t574 + t603 * t573 + t604 * t572 + t602 * t571; (m(6) * t59 + m(7) * t23) * t389 + (m(6) * t139 + m(7) * t79) * t382 + (m(6) * t74 + m(7) * t35) * t375 + (m(6) * t73 + m(7) * t34) * t373 + (m(6) * t176 + m(7) * t97) * t306 + (m(6) * t175 + m(7) * t96) * t304; (t23 * t79 + t34 * t97 + t35 * t96) * t502 - t381 * t36 + (t139 * t59 + t175 * t74 + t176 * t73) * t504 + (-t138 + t602) * t390 + (-t381 * t115 + t604) * t376 + (-t381 * t114 + t603) * t374 + (t26 + t53) * t307 + (t27 + t54) * t305; (t118 * t50 + t119 * t49 + t120 * t58 + t121 * t57) * m(7) + t517 * t332 + t518 * t330 + t516 * t227 + t515 * t225 + t556; (t49 * t479 + t50 * t500 + t32 * t520 + (t120 * t495 + t121 * t509) * t519) * t583; (t104 * t20 + t120 * t38 + t121 * t37 + t32 * t65 + t49 * t76 + t50 * t75) * m(7) + t386 * t582 + t2 * t573 + t7 * t571 + t29 * t580 + t5 * t576 + t39 * t578 + t9 * t575 + t28 * t579 + t6 * t577 - t385 * t581 + t1 * t572; (t104 * t382 + t120 * t304 + t121 * t306 + t32 * t389 + t373 * t49 + t375 * t50) * m(7); (t104 * t23 + t120 * t35 + t121 * t34 + t32 * t79 + t49 * t97 + t50 * t96) * m(7) + t36 * t578 + t8 * t575 + t27 * t580 + t3 * t576 + t307 * t582 + t374 * t2 / 0.2e1 + t33 * t574 + t390 * t7 / 0.2e1 + t26 * t579 + t4 * t577 + t305 * t581 + t376 * t1 / 0.2e1; t225 * t25 + t332 * t1 + t227 * t24 + t330 * t2 + t321 * t33 + t371 * t7 + (t104 * t32 + t120 * t50 + t121 * t49) * t502;];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t10(1) t10(2) t10(4) t10(7) t10(11) t10(16); t10(2) t10(3) t10(5) t10(8) t10(12) t10(17); t10(4) t10(5) t10(6) t10(9) t10(13) t10(18); t10(7) t10(8) t10(9) t10(10) t10(14) t10(19); t10(11) t10(12) t10(13) t10(14) t10(15) t10(20); t10(16) t10(17) t10(18) t10(19) t10(20) t10(21);];
Mq  = res;
