% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR13_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR13_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:25:25
% EndTime: 2019-03-09 04:26:06
% DurationCPUTime: 22.90s
% Computational Cost: add. (18608->881), mult. (52675->1247), div. (0->0), fcn. (61161->12), ass. (0->665)
t517 = sin(qJ(3));
t512 = sin(pkin(7));
t755 = qJD(3) * t512;
t486 = t517 * t755;
t514 = cos(pkin(12));
t513 = sin(pkin(6));
t511 = sin(pkin(12));
t879 = cos(pkin(7));
t898 = cos(qJ(3));
t610 = t879 * t898;
t581 = t511 * t610;
t559 = t513 * t581;
t824 = t513 * t517;
t668 = t824 / 0.2e1;
t781 = t559 / 0.2e1 + t514 * t668;
t825 = t513 * t514;
t880 = cos(pkin(6));
t444 = t512 * t825 - t879 * t880;
t646 = t880 * t512;
t647 = t517 * t879;
t392 = t517 * t646 - (-t511 * t898 - t514 * t647) * t513;
t645 = t879 * t392;
t826 = t512 * t517;
t669 = t826 / 0.2e1;
t947 = t444 * t669 + t645 / 0.2e1;
t932 = t781 + t947;
t938 = t932 * qJD(1);
t951 = t486 - t938;
t466 = t610 * t825;
t477 = t898 * t646;
t391 = -t511 * t824 + t466 + t477;
t702 = t512 * t898;
t616 = t702 / 0.2e1;
t532 = t879 * t391 / 0.2e1 + t444 * t616;
t648 = t513 * t879;
t612 = t511 * t648;
t467 = t517 * t612;
t633 = t898 * t825;
t555 = t467 / 0.2e1 - t633 / 0.2e1;
t521 = t532 - t555;
t427 = t633 - t467;
t827 = t511 * t513;
t711 = t512 * t827;
t241 = t392 * t711 + t427 * t444;
t944 = qJD(1) * t241;
t950 = -qJD(3) * t521 + t944;
t233 = t532 + t555;
t949 = qJD(3) * t233 + t944;
t923 = pkin(3) + pkin(10);
t948 = t391 * t923;
t651 = qJD(3) * t898;
t926 = t521 * qJD(1);
t946 = t512 * t651 - t926;
t823 = t514 * t517;
t426 = (t581 + t823) * t513;
t238 = t391 * t711 - t426 * t444;
t945 = qJD(1) * t238;
t943 = qJD(2) * t238;
t942 = qJD(2) * t241;
t941 = qJD(2) * t932;
t519 = cos(qJ(5));
t833 = t444 * t519;
t516 = sin(qJ(5));
t843 = t391 * t516;
t320 = -t833 - t843;
t379 = t391 * t519;
t834 = t444 * t516;
t318 = t379 - t834;
t852 = t318 * t519;
t681 = t852 / 0.2e1;
t902 = t516 / 0.2e1;
t167 = t320 * t902 + t681;
t939 = t167 * qJD(5);
t720 = t519 * qJD(3);
t500 = t516 * t720;
t639 = -t167 * qJD(1) - t500;
t703 = pkin(1) * t880;
t779 = qJ(2) * t825 + t511 * t703;
t382 = (t514 * t648 + t646) * pkin(9) + t779;
t488 = t514 * t703;
t394 = t880 * pkin(2) + t488 + (-pkin(9) * t879 - qJ(2)) * t827;
t415 = (-pkin(9) * t511 * t512 - pkin(2) * t514 - pkin(1)) * t513;
t183 = t382 * t517 - t394 * t610 - t415 * t702;
t937 = qJD(2) * t233 + qJD(3) * t183;
t726 = t318 * qJD(1);
t560 = qJD(3) * t167 + t320 * t726;
t924 = t392 ^ 2;
t936 = t516 * t924;
t935 = t519 * t924;
t184 = t898 * t382 + t394 * t647 + t415 * t826;
t343 = qJ(4) * t444;
t156 = -t184 + t343;
t934 = t156 + t184;
t670 = -t826 / 0.2e1;
t933 = -t645 / 0.2e1 + t444 * t670;
t515 = sin(qJ(6));
t518 = cos(qJ(6));
t697 = t518 * t720;
t632 = t515 * t697;
t507 = t515 ^ 2;
t509 = t518 ^ 2;
t490 = t509 - t507;
t642 = qJD(5) * t490;
t931 = 0.2e1 * t632 - t642;
t930 = qJD(2) * t521;
t634 = t781 + t933;
t929 = qJD(2) * t634;
t508 = t516 ^ 2;
t510 = t519 ^ 2;
t489 = t508 - t510;
t928 = qJD(3) * t489;
t925 = t318 ^ 2;
t922 = qJ(4) / 0.2e1;
t896 = pkin(4) * t391;
t136 = -t156 + t896;
t921 = t136 / 0.2e1;
t841 = t392 * t518;
t850 = t320 * t515;
t217 = -t841 + t850;
t920 = -t217 / 0.2e1;
t919 = t217 / 0.2e1;
t842 = t392 * t515;
t849 = t320 * t518;
t219 = t842 + t849;
t918 = -t219 / 0.2e1;
t380 = t391 * t518;
t813 = t515 * t516;
t268 = t392 * t813 - t380;
t917 = -t268 / 0.2e1;
t805 = t516 * t518;
t844 = t391 * t515;
t269 = t392 * t805 + t844;
t916 = -t269 / 0.2e1;
t915 = -t318 / 0.2e1;
t914 = t318 / 0.2e1;
t913 = -t320 / 0.2e1;
t912 = -t391 / 0.2e1;
t804 = t517 * t518;
t709 = t512 * t804;
t447 = -t516 * t702 + t519 * t879;
t815 = t515 * t447;
t399 = -t709 + t815;
t911 = t399 / 0.2e1;
t812 = t515 * t517;
t710 = t512 * t812;
t796 = t518 * t447;
t400 = t710 + t796;
t910 = -t400 / 0.2e1;
t909 = t400 / 0.2e1;
t446 = t516 * t879 + t519 * t702;
t908 = t446 / 0.2e1;
t907 = t447 / 0.2e1;
t892 = t519 * pkin(5);
t893 = t516 * pkin(11);
t478 = t892 + t893;
t906 = t478 / 0.2e1;
t905 = -t515 / 0.2e1;
t904 = t515 / 0.2e1;
t903 = -t516 / 0.2e1;
t901 = t518 / 0.2e1;
t900 = -t519 / 0.2e1;
t899 = t923 / 0.2e1;
t897 = pkin(3) * t391;
t895 = t318 * pkin(11);
t894 = t392 * pkin(11);
t303 = -t394 * t512 + t879 * t415;
t878 = qJ(4) * t392;
t572 = t303 - t878;
t133 = t572 - t948;
t554 = pkin(4) * t392 + t183;
t523 = t444 * t923 + t554;
t66 = t133 * t516 - t519 * t523;
t60 = -pkin(5) * t392 + t66;
t891 = -t60 + t66;
t604 = pkin(5) * t318 - pkin(11) * t320;
t522 = t136 + t604;
t67 = t519 * t133 + t516 * t523;
t61 = t67 + t894;
t26 = t515 * t61 - t518 * t522;
t170 = pkin(5) * t320 + t895;
t802 = t518 * t170;
t5 = t67 * t217 - t26 * t320 + (t515 * t891 + t802) * t318;
t890 = t5 * qJD(1);
t889 = t515 * t66;
t152 = t184 + t896;
t147 = t516 * t152;
t845 = t391 * qJ(4);
t201 = t392 * t923 - t845;
t189 = t519 * t201;
t782 = t189 + t147;
t91 = pkin(11) * t391 + t782;
t888 = t515 * t91;
t887 = t518 * t66;
t886 = t518 * t91;
t27 = t515 * t522 + t518 * t61;
t821 = t515 * t170;
t6 = t67 * t219 - t27 * t320 + (t518 * t891 - t821) * t318;
t885 = t6 * qJD(1);
t121 = (-pkin(4) - t478) * t392 - t183;
t803 = t518 * t121;
t37 = t803 - t888;
t840 = t392 * t519;
t791 = t519 * t152;
t809 = t516 * t201;
t90 = -pkin(5) * t391 - t791 + t809;
t7 = t217 * t90 + t26 * t840 + t268 * t60 + t318 * t37;
t884 = t7 * qJD(1);
t822 = t515 * t121;
t38 = t822 + t886;
t8 = t219 * t90 + t269 * t60 + t27 * t840 - t318 * t38;
t883 = t8 * qJD(1);
t882 = t90 * t515;
t881 = t90 * t518;
t13 = -t217 * t60 + t26 * t318;
t877 = qJD(1) * t13;
t14 = t219 * t60 - t27 * t318;
t876 = qJD(1) * t14;
t30 = -t136 * t318 + t392 * t66;
t875 = qJD(1) * t30;
t31 = t136 * t320 - t392 * t67;
t874 = qJD(1) * t31;
t570 = t217 * t907 + t399 * t913;
t789 = t519 * t426;
t358 = t516 * t711 - t789;
t846 = t358 * t518;
t48 = t846 / 0.2e1 + t570;
t873 = qJD(1) * t48;
t568 = t219 * t907 + t320 * t910;
t847 = t358 * t515;
t678 = -t847 / 0.2e1;
t51 = t678 + t568;
t872 = qJD(1) * t51;
t275 = pkin(3) * t392 - t845;
t859 = t184 * t444;
t155 = t572 - t897;
t862 = t155 * t392;
t56 = t275 * t391 - t859 - t862;
t871 = qJD(1) * t56;
t860 = t183 * t444;
t57 = -t155 * t391 - t275 * t392 + t860;
t870 = qJD(1) * t57;
t78 = t156 * t444 - t862;
t869 = qJD(1) * t78;
t798 = t518 * t427;
t806 = t516 * t426;
t359 = t519 * t711 + t806;
t818 = t515 * t359;
t565 = -t818 / 0.2e1 + t798 / 0.2e1;
t569 = t219 * t908 + t318 * t910;
t93 = t565 - t569;
t868 = qJD(1) * t93;
t799 = t518 * t359;
t817 = t515 * t427;
t564 = -t817 / 0.2e1 - t799 / 0.2e1;
t571 = t318 * t911 + t446 * t920;
t94 = t564 - t571;
t867 = qJD(1) * t94;
t97 = t217 * t320 - t515 * t925;
t866 = qJD(1) * t97;
t98 = t219 * t320 - t518 * t925;
t865 = qJD(1) * t98;
t864 = t136 * t516;
t15 = -t554 * t318 - t66 * t391 + (-t809 + (-t136 + t152) * t519) * t392;
t863 = t15 * qJD(1);
t16 = -t554 * t320 - t67 * t391 + (-t782 + t864) * t392;
t861 = t16 * qJD(1);
t858 = t219 * t515;
t857 = t219 * t516;
t856 = t219 * t518;
t157 = pkin(3) * t444 + t183;
t25 = t155 * t275 + t156 * t183 + t157 * t184;
t855 = t25 * qJD(1);
t854 = t269 * t515;
t575 = -t426 * pkin(3) / 0.2e1 + t427 * t922;
t650 = t275 * t879;
t28 = -t650 / 0.2e1 + ((t183 / 0.2e1 - t157 / 0.2e1) * t517 + t934 * t898 / 0.2e1) * t512 + t575;
t853 = t28 * qJD(1);
t32 = t934 * t392 + (t157 - t183) * t391;
t851 = t32 * qJD(1);
t848 = t320 * t519;
t273 = t392 * t516;
t550 = t217 * t670 + t392 * t911;
t594 = t798 - t818;
t556 = t594 * t516;
t700 = t898 * t518;
t431 = (-t516 * t812 + t700) * t512;
t567 = t268 * t908 + t431 * t914;
t42 = -t556 / 0.2e1 + (t678 + t550) * t519 + t567;
t839 = t42 * qJD(1);
t603 = pkin(5) * t516 - pkin(11) * t519;
t578 = qJ(4) + t603;
t810 = t515 * t923;
t424 = -t516 * t810 - t518 * t578;
t838 = t424 * t320;
t792 = t518 * t923;
t708 = t516 * t792;
t425 = t515 * t578 - t708;
t837 = t425 * t320;
t836 = t427 * t519;
t548 = t219 * t670 + t392 * t909;
t595 = t799 + t817;
t557 = t595 * t516;
t701 = t898 * t515;
t432 = (t516 * t804 + t701) * t512;
t566 = t269 * t908 + t432 * t915;
t677 = -t846 / 0.2e1;
t43 = t557 / 0.2e1 + (t677 + t548) * t519 + t566;
t835 = t43 * qJD(1);
t832 = t446 * t392;
t831 = t447 * t392;
t45 = t155 * t711 - t156 * t427 + t157 * t426;
t830 = t45 * qJD(1);
t793 = t518 * t519;
t819 = t515 * t318;
t282 = t793 * t819;
t808 = t516 * t217;
t663 = t808 / 0.2e1;
t683 = t857 / 0.2e1;
t47 = t282 + (t663 + t916) * t518 + (t683 + t268 / 0.2e1) * t515;
t829 = t47 * qJD(1);
t828 = t510 * t515;
t503 = t510 * t518;
t820 = t515 * t217;
t816 = t515 * t444;
t814 = t515 * t478;
t811 = t515 * t519;
t807 = t516 * t318;
t801 = t518 * t217;
t800 = t518 * t318;
t797 = t518 * t444;
t795 = t518 * t478;
t794 = t518 * t508;
t790 = t519 * t219;
t788 = t519 * t923;
t787 = t923 * t219;
t68 = -t217 * t269 - t219 * t268;
t786 = t68 * qJD(1);
t674 = t841 / 0.2e1;
t599 = t674 + t920;
t680 = -t850 / 0.2e1;
t71 = (t680 - t599) * t516;
t785 = t71 * qJD(1);
t596 = t801 + t858;
t75 = t596 * t318;
t784 = t75 * qJD(1);
t99 = t217 * t840 - t268 * t318;
t783 = t99 * qJD(1);
t780 = -t559 / 0.2e1 - t513 * t823 / 0.2e1;
t101 = t358 * t217 + t318 * t594;
t778 = qJD(1) * t101;
t102 = t358 * t219 - t318 * t595;
t777 = qJD(1) * t102;
t573 = t392 * t811 - t797;
t103 = t318 * t573 - t392 * t808;
t776 = qJD(1) * t103;
t574 = -t392 * t793 - t816;
t104 = -t219 * t273 - t318 * t574;
t775 = qJD(1) * t104;
t660 = -t805 / 0.2e1;
t682 = -t852 / 0.2e1;
t540 = t219 * t660 + t509 * t682;
t106 = -t854 / 0.2e1 + t540;
t774 = qJD(1) * t106;
t117 = t303 * t391 - t860;
t773 = qJD(1) * t117;
t118 = t303 * t392 + t859;
t772 = qJD(1) * t118;
t142 = t318 * t427 - t358 * t392;
t771 = qJD(1) * t142;
t143 = t320 * t427 - t359 * t392;
t770 = qJD(1) * t143;
t148 = t444 * t318 - t936;
t769 = qJD(1) * t148;
t158 = t320 * t391 + t936;
t768 = qJD(1) * t158;
t159 = -t318 * t391 + t935;
t767 = qJD(1) * t159;
t181 = t391 * t427 + t392 * t426;
t766 = qJD(1) * t181;
t765 = qJD(1) * t219;
t760 = qJD(1) * t392;
t759 = qJD(1) * t444;
t757 = qJD(3) * t184;
t756 = qJD(3) * t444;
t754 = qJD(4) * t516;
t753 = qJD(4) * t519;
t752 = qJD(5) * t392;
t751 = qJD(5) * t515;
t750 = qJD(5) * t516;
t749 = qJD(5) * t518;
t748 = qJD(5) * t519;
t747 = qJD(5) * t923;
t746 = qJD(6) * t318;
t745 = qJD(6) * t515;
t744 = qJD(6) * t518;
t100 = t269 * t318 - t392 * t790;
t743 = t100 * qJD(1);
t108 = (t920 - t841 / 0.2e1) * t516 + (t682 + t912) * t515;
t742 = t108 * qJD(1);
t658 = -t793 / 0.2e1;
t621 = t318 * t658;
t675 = t842 / 0.2e1;
t109 = t621 - t380 / 0.2e1 + (t918 + t675) * t516;
t741 = t109 * qJD(1);
t538 = t320 * t616 + t447 * t912;
t116 = -t836 / 0.2e1 + t538;
t740 = t116 * qJD(1);
t125 = (-t842 / 0.2e1 + t849 / 0.2e1 + t918) * t516;
t739 = t125 * qJD(1);
t130 = -t807 + t848;
t128 = t130 * t392;
t738 = t128 * qJD(1);
t671 = -t827 / 0.2e1;
t625 = t516 * t671;
t656 = t789 / 0.2e1;
t137 = t656 + t831 / 0.2e1 + (t517 * t913 + t625) * t512;
t737 = t137 * qJD(1);
t620 = t519 * t671;
t661 = -t806 / 0.2e1;
t138 = t661 - t832 / 0.2e1 + (t517 * t914 + t620) * t512;
t736 = t138 * qJD(1);
t617 = -t702 / 0.2e1;
t539 = t318 * t617 + t391 * t908;
t672 = t427 * t902;
t149 = t672 + t539;
t735 = t149 * qJD(1);
t182 = -t320 * t444 + t935;
t734 = t182 * qJD(1);
t216 = t391 ^ 2 - t924;
t733 = t216 * qJD(1);
t230 = t780 + t933;
t730 = t230 * qJD(1);
t727 = t273 * qJD(1);
t326 = (t779 * t514 + (qJ(2) * t827 - t488) * t511) * t513;
t725 = t326 * qJD(1);
t383 = t511 * t668 - t466 / 0.2e1 - t477 / 0.2e1;
t724 = t383 * qJD(1);
t388 = t391 * qJD(3);
t723 = t391 * qJD(4);
t439 = t444 * qJD(4);
t449 = (t511 ^ 2 + t514 ^ 2) * t513 ^ 2;
t722 = t449 * qJD(1);
t721 = t516 * qJD(3);
t719 = t519 * qJD(6);
t717 = 0.1e1 / 0.2e1 + t508 / 0.2e1;
t716 = pkin(5) * t919;
t715 = pkin(5) * t918;
t714 = pkin(5) * t917;
t713 = pkin(5) * t916;
t712 = t60 / 0.2e1 - t66 / 0.2e1;
t707 = t515 * t788;
t706 = t518 * t788;
t705 = -t888 / 0.2e1;
t704 = -t886 / 0.2e1;
t699 = t219 * t726;
t696 = t515 * t749;
t695 = t515 * t748;
t694 = t518 * t748;
t693 = t516 * t745;
t692 = t515 * t719;
t691 = t516 * t744;
t690 = t518 * t719;
t281 = t391 * t760;
t689 = t516 * t760;
t688 = t519 * t760;
t687 = t391 * t759;
t686 = t515 * t744;
t685 = t516 * t748;
t684 = t320 * t922;
t679 = -t848 / 0.2e1;
t676 = t379 / 0.2e1;
t673 = -t840 / 0.2e1;
t311 = -t819 / 0.2e1;
t312 = t819 / 0.2e1;
t667 = -t813 / 0.2e1;
t666 = -t812 / 0.2e1;
t665 = -t811 / 0.2e1;
t664 = t811 / 0.2e1;
t662 = t807 / 0.2e1;
t659 = -t800 / 0.2e1;
t307 = t800 / 0.2e1;
t657 = t793 / 0.2e1;
t655 = t217 * t899;
t654 = -t787 / 0.2e1;
t653 = t392 * t899;
t652 = -t147 / 0.2e1 - t189 / 0.2e1;
t649 = t513 * t880;
t497 = t515 * t721;
t623 = t392 * t657;
t87 = t269 * t900 + t312 + (t623 - t816 / 0.2e1) * t516;
t644 = qJD(1) * t87 + t497;
t499 = t518 * t721;
t627 = t392 * t664;
t86 = t268 * t900 + t659 + (t627 + t797 / 0.2e1) * t516;
t643 = qJD(1) * t86 - t499;
t162 = 0.2e1 * t311;
t641 = -qJD(1) * t162 + t497;
t165 = 0.2e1 * t307;
t640 = -qJD(1) * t165 - t499;
t638 = qJD(5) * t383 - t281;
t637 = -qJD(3) + t759;
t636 = -qJD(5) - t760;
t635 = -qJD(6) - t726;
t631 = t923 * t681;
t630 = t392 * t667;
t629 = t516 * t674;
t628 = t392 * t665;
t626 = t512 * t666;
t297 = t515 * t662;
t624 = t392 * t658;
t622 = t518 * t669;
t291 = t516 * t659;
t619 = t834 - t379 / 0.2e1;
t615 = t894 / 0.2e1 - t67 / 0.2e1;
t614 = t712 * t515;
t613 = t712 * t518;
t611 = t895 / 0.2e1 + t170 / 0.2e1;
t609 = qJD(1) * t649;
t608 = qJD(2) * t649;
t606 = t121 / 0.2e1 + t60 * t900;
t605 = t90 / 0.2e1 + t318 * t906;
t602 = 0.2e1 * t515 * t694;
t600 = t444 / 0.2e1 - t807 / 0.2e1;
t598 = t388 - t687;
t597 = t878 + t948;
t464 = t489 * t515;
t69 = 0.2e1 * t297 + (t680 + t599) * t519;
t593 = qJD(1) * t69 + qJD(3) * t464;
t465 = -t503 + t794;
t206 = -t790 / 0.2e1;
t73 = t628 + t206 + (t679 + t807) * t518;
t592 = -qJD(1) * t73 - qJD(3) * t465;
t591 = t636 * t519;
t590 = (-qJD(6) - t721) * t519;
t589 = qJ(4) * qJD(3) - qJD(1) * t343;
t205 = t790 / 0.2e1;
t111 = -t518 * t600 + t205 + t627;
t441 = t503 / 0.2e1 + t717 * t518;
t588 = qJD(1) * t111 + qJD(3) * t441;
t113 = t515 * t600 + t519 * t599;
t440 = (-t510 / 0.2e1 - t717) * t515;
t587 = qJD(1) * t113 + qJD(3) * t440;
t132 = -t320 ^ 2 + t925;
t586 = qJD(1) * t132 - qJD(3) * t130;
t585 = qJD(1) * t130 - t928;
t220 = t676 + t619;
t584 = qJD(1) * t220 - t721;
t583 = t721 + t726;
t321 = t444 ^ 2 + t924;
t582 = qJD(1) * t321 - t756;
t580 = t511 * t609;
t579 = t514 * t609;
t577 = t893 / 0.2e1 + t892 / 0.2e1;
t317 = -t833 / 0.2e1 - t843 / 0.2e1;
t576 = t317 * qJD(1) + t720 / 0.2e1;
t563 = t801 / 0.2e1 + t858 / 0.2e1;
t33 = t684 + (t921 - t152 / 0.2e1) * t519 + (t653 + t201 / 0.2e1) * t516;
t562 = -qJ(4) * t720 - t33 * qJD(1);
t524 = qJ(4) * t915 - t864 / 0.2e1 + t519 * t653;
t35 = t524 - t652;
t561 = qJ(4) * t721 - t35 * qJD(1);
t553 = (qJD(1) * t320 + t720) * t392;
t552 = t719 / 0.2e1 - t639;
t551 = t217 * t900 + t624;
t549 = t399 * t903 + t446 * t664;
t547 = t400 * t903 + t446 * t657;
t546 = t906 + t577;
t77 = (-t820 + t856) * t519;
t81 = t217 ^ 2 - t219 ^ 2;
t545 = qJD(1) * t81 - qJD(3) * t77 - qJD(5) * t596;
t1 = t714 + t838 / 0.2e1 - t605 * t518 + (-t802 / 0.2e1 + t655 + t614) * t516 + (t26 / 0.2e1 + t615 * t515) * t519;
t172 = (t622 + t911 - t815 / 0.2e1) * t519;
t301 = -t424 * t519 + (-t707 + t795) * t516;
t544 = -t1 * qJD(1) - t172 * qJD(2) + t301 * qJD(3);
t171 = (t626 + t909 - t796 / 0.2e1) * t519;
t2 = t713 + t837 / 0.2e1 + t605 * t515 + (t821 / 0.2e1 + t787 / 0.2e1 + t613) * t516 + (t27 / 0.2e1 + t615 * t518) * t519;
t302 = t425 * t519 + (t706 + t814) * t516;
t543 = -t2 * qJD(1) - t171 * qJD(2) - t302 * qJD(3);
t531 = (t516 * t666 + t700 / 0.2e1) * t512;
t251 = t531 - t547;
t378 = -t425 * t516 + t510 * t792;
t525 = t27 * t902 + t425 * t914 + t519 * t654;
t9 = t518 * t606 + t525 + t705;
t542 = qJD(1) * t9 + qJD(2) * t251 - qJD(3) * t378;
t526 = t26 * t903 + t424 * t915 + t519 * t655;
t10 = -t515 * t606 + t526 + t704;
t530 = (t517 * t660 - t701 / 0.2e1) * t512;
t252 = t530 + t549;
t377 = -t424 * t516 + t510 * t810;
t541 = qJD(1) * t10 + qJD(2) * t252 + qJD(3) * t377;
t17 = t515 * t611 + t613 + t716;
t397 = t546 * t515;
t537 = pkin(5) * t749 - qJD(1) * t17 - qJD(3) * t397;
t19 = -t518 * t611 + t614 + t715;
t398 = t546 * t518;
t536 = pkin(5) * t751 - qJD(1) * t19 + qJD(3) * t398;
t123 = t563 * t519;
t127 = -t820 / 0.2e1 + t856 / 0.2e1;
t535 = qJD(3) * t123 - qJD(5) * t127 + t217 * t765;
t448 = (t507 / 0.2e1 - t509 / 0.2e1) * t519;
t534 = qJD(1) * t127 - qJD(3) * t448 + t696;
t533 = qJD(6) * t317 + t560;
t463 = t490 * t510;
t529 = qJD(1) * t77 + qJD(3) * t463 + t602;
t528 = qJD(1) * t596 + t931;
t527 = qJD(3) * t503 * t515 + qJD(1) * t123 + qJD(5) * t448;
t502 = t748 / 0.2e1;
t498 = t515 * t750;
t469 = -0.2e1 * t519 * t686;
t445 = t448 * qJD(6);
t443 = -t794 / 0.2e1 - t503 / 0.2e1 + t901;
t442 = t508 * t904 + t828 / 0.2e1 + t905;
t401 = t637 * t519;
t376 = t383 * qJD(3);
t364 = t707 + t795 / 0.2e1 - t577 * t518;
t363 = t706 - t814 / 0.2e1 + t577 * t515;
t342 = t446 * t518;
t341 = t446 * t515;
t280 = t392 * t388;
t254 = t531 + t547;
t253 = t530 - t549;
t231 = t780 + t947;
t221 = t676 - t619;
t215 = qJD(3) * t673 + t317 * qJD(5);
t174 = t400 * t900 + t447 * t657 + t519 * t626;
t173 = t399 * t900 + t447 * t664 + t519 * t622;
t164 = t307 + t659;
t163 = t311 + t312;
t150 = t672 - t539;
t140 = -t831 / 0.2e1 + t320 * t669 + t512 * t625 + t656;
t139 = t832 / 0.2e1 + t318 * t670 + t512 * t620 + t661;
t129 = t130 * qJD(5);
t126 = t320 * t660 + t630 + t683;
t124 = t127 * qJD(6);
t122 = t123 * qJD(6);
t115 = t836 / 0.2e1 + t538;
t114 = t297 + t816 / 0.2e1 - t551;
t112 = t291 + t206 + t627 - t797 / 0.2e1;
t110 = t621 - t857 / 0.2e1 + t630 + t380 / 0.2e1;
t107 = t318 * t665 - t808 / 0.2e1 + t629 + t844 / 0.2e1;
t105 = t854 / 0.2e1 + t540;
t96 = t565 + t569;
t95 = t564 + t571;
t89 = t311 + t574 * t903 + t516 * t624 + (t629 + t916) * t519;
t88 = t307 + t573 * t902 + t516 * t628 + (t516 * t675 + t917) * t519;
t79 = t596 * qJD(6);
t76 = t77 * qJD(6);
t74 = t320 * t657 + t205 + 0.2e1 * t291 + t628;
t72 = t629 + (t680 + t919) * t516;
t70 = t297 + (t662 + t679) * t515 + t551;
t50 = t847 / 0.2e1 + t568;
t49 = t677 + t570;
t46 = t268 * t905 + t269 * t901 + t516 * t563 + t282;
t44 = -t557 / 0.2e1 + t358 * t657 + t548 * t519 + t566;
t41 = t556 / 0.2e1 + t358 * t664 + t550 * t519 + t567;
t36 = t524 + t652;
t34 = t516 * t653 + t684 + t519 * t921 - t809 / 0.2e1 + t791 / 0.2e1;
t29 = t650 / 0.2e1 + t183 * t670 + t157 * t669 + t575 + t934 * t617;
t20 = pkin(11) * t659 + t715 + t60 * t904 + t889 / 0.2e1 + t802 / 0.2e1;
t18 = pkin(11) * t312 + t716 + t60 * t901 + t887 / 0.2e1 - t821 / 0.2e1;
t12 = t60 * t657 + t705 + t803 / 0.2e1 - t525;
t11 = t60 * t665 + t704 - t822 / 0.2e1 - t526;
t4 = (-t706 + t814) * t915 - t837 / 0.2e1 + (t821 - t887) * t903 + t27 * t900 + t516 * t654 - t518 * t631 + t67 * t657 + t60 * t660 + pkin(11) * t623 + t713 + t882 / 0.2e1;
t3 = (t707 + t795) * t914 - t838 / 0.2e1 + (t802 + t889) * t902 + t26 * t900 - t923 * t663 - t515 * t631 + t67 * t664 + t60 * t667 + pkin(11) * t627 + t714 - t881 / 0.2e1;
t21 = [0, 0, 0, -t511 * t608, -t514 * t608, t449 * qJD(2), t326 * qJD(2), t280, t216 * qJD(3), -t444 * t388, t392 * t756, 0, qJD(3) * t118 - t943, qJD(3) * t117 + t942, qJD(2) * t181 + qJD(3) * t32 - t391 * t439, qJD(3) * t56 - t392 * t723 + t943, qJD(3) * t57 + qJD(4) * t321 - t942, qJD(2) * t45 + qJD(3) * t25 + qJD(4) * t78 (-qJD(5) * t318 + t392 * t721) * t320, qJD(3) * t128 + qJD(5) * t132, qJD(3) * t158 - t318 * t752, qJD(3) * t159 - t320 * t752, t280, qJD(2) * t142 + qJD(3) * t15 - qJD(4) * t148 + qJD(5) * t31, qJD(2) * t143 + qJD(3) * t16 + qJD(4) * t182 + qJD(5) * t30 (qJD(3) * t269 - qJD(6) * t217 - t318 * t749) * t219, qJD(3) * t68 + qJD(5) * t75 + qJD(6) * t81, qJD(3) * t100 + qJD(5) * t98 - t217 * t746, qJD(3) * t99 - qJD(5) * t97 - t219 * t746 (qJD(5) * t320 - t392 * t720) * t318, qJD(2) * t101 + qJD(3) * t7 + qJD(4) * t103 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t102 + qJD(3) * t8 + qJD(4) * t104 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, -t580, -t579, t722, t725, 0, 0, 0, 0, 0, qJD(3) * t231 - t945, t949, t766, qJD(3) * t634 + t945, -t949, t830 + (-t426 * t898 + t427 * t517 + t612) * t512 * qJD(2) + t29 * qJD(3) + t634 * qJD(4), 0, 0, 0, 0, 0, qJD(3) * t150 + qJD(5) * t140 + t771, qJD(3) * t115 + qJD(5) * t139 + t770, 0, 0, 0, 0, 0, qJD(3) * t41 + qJD(5) * t49 + qJD(6) * t96 + t778, qJD(3) * t44 + qJD(5) * t50 + qJD(6) * t95 + t777; 0, 0, 0, 0, 0, 0, 0, t281, t733, t598, t637 * t392, 0, qJD(2) * t231 - t757 + t772, t773 + t937, t851 + (-t878 - t897) * qJD(3) + t723, t757 + t871 + t929, -t439 + t870 - t937, t855 + t29 * qJD(2) + (-pkin(3) * t184 - qJ(4) * t183) * qJD(3) - t156 * qJD(4), t516 * t553 - t939, -t392 * t928 - t129 + t738, t391 * t720 + t768, -t391 * t721 + t767, -t638, t863 + t150 * qJD(2) + (-t516 * t554 - t519 * t597) * qJD(3) + t221 * qJD(4) + t34 * qJD(5), t861 + t115 * qJD(2) + (t516 * t597 - t519 * t554) * qJD(3) + qJD(4) * t320 + t36 * qJD(5), qJD(5) * t105 - t122 + (t697 + t765) * t269, t786 + t46 * qJD(5) - t76 + (-t268 * t518 - t854) * t720, t743 + (t269 * t516 - t392 * t503) * qJD(3) + t74 * qJD(5) + t107 * qJD(6), t783 + (-t268 * t516 + t392 * t828) * qJD(3) + t70 * qJD(5) + t110 * qJD(6), t939 + (-qJD(6) / 0.2e1 - t583) * t840, t37 * t721 + t884 + t41 * qJD(2) + t88 * qJD(4) + t3 * qJD(5) + t12 * qJD(6) + (t268 * t923 + t392 * t424 + t882) * t720, -t38 * t721 + t883 + t44 * qJD(2) + t89 * qJD(4) + t4 * qJD(5) + t11 * qJD(6) + (t269 * t923 + t392 * t425 + t881) * t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598, -t281, t582, -qJD(3) * t156 + t869 + t929, 0, 0, 0, 0, 0, qJD(3) * t221 - t769, qJD(3) * t320 + t734, 0, 0, 0, 0, 0, qJD(3) * t88 + qJD(5) * t72 + qJD(6) * t112 + t776, qJD(3) * t89 + qJD(5) * t126 + qJD(6) * t114 + t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t560, t586, t636 * t318, t636 * t320, -t376, qJD(2) * t140 + qJD(3) * t34 - qJD(5) * t67 + t874, qJD(2) * t139 + qJD(3) * t36 + qJD(5) * t66 + t875, qJD(3) * t105 + t124 + (-t751 - t765) * t800, t46 * qJD(3) - t318 * t642 + t784 - t79, qJD(3) * t74 + qJD(6) * t164 + t320 * t751 + t865, qJD(3) * t70 + qJD(6) * t163 + t320 * t749 - t866, t533, t890 + t49 * qJD(2) + t3 * qJD(3) + t72 * qJD(4) + (t515 * t604 - t67 * t518) * qJD(5) + t20 * qJD(6), t885 + t50 * qJD(2) + t4 * qJD(3) + t126 * qJD(4) + (t67 * t515 + t518 * t604) * qJD(5) + t18 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t535, t545, qJD(3) * t107 + qJD(5) * t164 + t217 * t635, qJD(3) * t110 + qJD(5) * t163 + t219 * t635, t215, qJD(2) * t96 + qJD(3) * t12 + qJD(4) * t112 + qJD(5) * t20 - qJD(6) * t27 + t876, qJD(2) * t95 + qJD(3) * t11 + qJD(4) * t114 + qJD(5) * t18 + qJD(6) * t26 + t877; 0, 0, 0, t580, t579, -t722, -t725, 0, 0, 0, 0, 0, -qJD(3) * t230 + t945, -t950, -t766, -qJD(3) * t932 - t945, t950, -qJD(3) * t28 - qJD(4) * t932 - t830, 0, 0, 0, 0, 0, -qJD(3) * t149 - qJD(5) * t137 - t771, qJD(3) * t116 - qJD(5) * t138 - t770, 0, 0, 0, 0, 0, qJD(3) * t42 + qJD(5) * t48 - qJD(6) * t93 - t778, qJD(3) * t43 + qJD(5) * t51 - qJD(6) * t94 - t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486 - t730, -t946, 0, t951, t946, -t853 + (-pkin(3) * t517 + qJ(4) * t898) * t755 + qJD(4) * t826, 0, 0, 0, 0, 0, -t735 + (t516 * t651 + t517 * t748) * t512, t740 + (-t517 * t750 + t519 * t651) * t512, 0, 0, 0, 0, 0, t839 + (t431 * t516 - t510 * t710) * qJD(3) + t173 * qJD(5) + t254 * qJD(6), t835 + (-t432 * t516 - t510 * t709) * qJD(3) + t174 * qJD(5) + t253 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t951, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t447 + t486 * t519 - t737, qJD(5) * t446 - t486 * t516 - t736, 0, 0, 0, 0, 0, qJD(3) * t173 + qJD(6) * t341 - t447 * t749 + t873, qJD(3) * t174 + qJD(6) * t342 + t447 * t751 + t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t254 + qJD(5) * t341 - qJD(6) * t400 - t868, qJD(3) * t253 + qJD(5) * t342 + qJD(6) * t399 - t867; 0, 0, 0, 0, 0, 0, 0, -t281, -t733, t687, -t392 * t759, 0, qJD(2) * t230 - t772, -t773 - t930, -t851, -t871 + t941, -t439 - t870 + t930, qJD(2) * t28 - qJD(4) * t343 - t855, -t320 * t689 - t939, -t129 - t738, -t392 * t750 - t768, -t392 * t748 - t767, t638, qJD(2) * t149 - qJD(4) * t220 + qJD(5) * t33 - t863, -qJD(2) * t116 + qJD(5) * t35 - t439 * t519 - t861, qJD(5) * t106 - t269 * t765 - t122, qJD(5) * t47 - t76 - t786, -qJD(5) * t73 + qJD(6) * t108 - t743, qJD(5) * t69 + qJD(6) * t109 - t783, t939 + (t726 + qJD(6) / 0.2e1) * t840, -qJD(2) * t42 - qJD(4) * t86 - qJD(5) * t1 - qJD(6) * t9 - t884, -qJD(2) * t43 - qJD(4) * t87 - qJD(5) * t2 - qJD(6) * t10 - t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t730, -t926, 0, t938, t926, t853, 0, 0, 0, 0, 0, t735, -t740, 0, 0, 0, 0, 0, -qJD(5) * t172 - qJD(6) * t251 - t839, -qJD(5) * t171 - qJD(6) * t252 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t685, t489 * qJD(5), 0, 0, 0, qJ(4) * t748 + t754, -qJ(4) * t750 + t753, -t509 * t685 - t510 * t686, -qJD(6) * t463 + t516 * t602, -qJD(5) * t465 - t516 * t692, qJD(5) * t464 - t516 * t690, t685, qJD(5) * t301 + qJD(6) * t378 + t518 * t754, -qJD(5) * t302 - qJD(6) * t377 - t515 * t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t637, t589, 0, 0, 0, 0, 0, -t584, -t401, 0, 0, 0, 0, 0, qJD(6) * t443 - t643, qJD(6) * t442 - t644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639, -t585, t636 * t516, t591, t724, t516 * t747 - t562, t519 * t747 - t561, t774 - t445 + (-t509 * t720 - t696) * t516, t516 * t931 + t469 + t829, t592 + t695, t593 + t694, t552 (t515 * t603 + t708) * qJD(5) + t364 * qJD(6) + t544 (-pkin(11) * t793 + (pkin(5) * t518 - t810) * t516) * qJD(5) + t363 * qJD(6) + t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527, -t529, t515 * t590 + t742, t518 * t590 + t741, t688 / 0.2e1 + t502, qJD(4) * t443 + qJD(5) * t364 - qJD(6) * t425 - t542, qJD(4) * t442 + qJD(5) * t363 + qJD(6) * t424 - t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t687, t281, -t582, qJD(3) * t343 - t869 + t941, 0, 0, 0, 0, 0, qJD(3) * t220 - qJD(5) * t273 + t769, -t734 + (-t752 + t756) * t519, 0, 0, 0, 0, 0, qJD(3) * t86 + qJD(5) * t71 - qJD(6) * t111 - t776, qJD(3) * t87 - qJD(5) * t125 - qJD(6) * t113 - t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t938, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t637, -t589, 0, 0, 0, 0, 0, t584, t401, 0, 0, 0, 0, 0, -qJD(6) * t441 + t643, -qJD(6) * t440 + t644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t727 - t750, t591, 0, 0, 0, 0, 0, -t516 * t749 - t692 + t785, t498 - t690 - t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588 - t691 - t695, -t587 + t693 - t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t560, -t586, t583 * t392, t553, -t376, qJD(2) * t137 - qJD(3) * t33 + qJD(4) * t273 - t874, qJD(2) * t138 - qJD(3) * t35 + t392 * t753 - t875, -qJD(3) * t106 + t518 * t699 + t124, -qJD(3) * t47 - t784 - t79, qJD(3) * t73 + qJD(6) * t165 - t865, -qJD(3) * t69 + qJD(6) * t162 + t866, -t533, -qJD(2) * t48 + qJD(3) * t1 - qJD(4) * t71 + qJD(6) * t19 - t890, -qJD(2) * t51 + qJD(3) * t2 + qJD(4) * t125 + qJD(6) * t17 - t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t737, t736, 0, 0, 0, 0, 0, qJD(3) * t172 - t873, qJD(3) * t171 - t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t639, t585, t689, t688, -t724, t562, t561, t500 * t509 - t445 - t774, -0.2e1 * t516 * t632 + t469 - t829, -t592 + t691, -t593 - t693, -t552, -qJD(6) * t398 - t544, qJD(6) * t397 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t688, 0, 0, 0, 0, 0, -t785, t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t686, t490 * qJD(6), 0, 0, 0, -pkin(5) * t745, -pkin(5) * t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, -t528, -t640 + t744, -t641 - t745, -t576, -pkin(11) * t744 - t536, pkin(11) * t745 - t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t535, -t545, -qJD(3) * t108 - qJD(5) * t165 + t217 * t726, -qJD(3) * t109 - qJD(5) * t162 + t699, t215, qJD(2) * t93 + qJD(3) * t9 + qJD(4) * t111 - qJD(5) * t19 - t876, qJD(2) * t94 + qJD(3) * t10 + qJD(4) * t113 - qJD(5) * t17 - t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t251 + t868, qJD(3) * t252 + t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, t529, -t742 + (t515 * t720 - t749) * t516, t500 * t518 + t498 - t741, qJD(1) * t673 + t502, qJD(4) * t441 + qJD(5) * t398 + t542, qJD(4) * t440 - qJD(5) * t397 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, t528, t640, t641, t576, t536, t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
