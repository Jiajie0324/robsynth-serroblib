% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 21:03
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRPRR13_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR13_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR13_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR13_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:58:12
% EndTime: 2019-05-05 21:00:08
% DurationCPUTime: 122.99s
% Computational Cost: add. (559803->1066), mult. (1781796->1706), div. (0->0), fcn. (1513772->14), ass. (0->796)
t1264 = sin(qJ(1));
t1268 = cos(qJ(1));
t1257 = sin(pkin(6));
t1260 = cos(pkin(6));
t1256 = sin(pkin(7));
t1259 = cos(pkin(7));
t1258 = cos(pkin(12));
t1462 = t1257 * t1258;
t1492 = qJD(1) * t1260;
t1211 = qJD(1) * t1256 * t1462 - t1259 * t1492 - qJD(3);
t1207 = t1211 ^ 2;
t1263 = sin(qJ(3));
t1267 = cos(qJ(3));
t1461 = t1257 * t1259;
t1435 = t1258 * t1461;
t1255 = sin(pkin(12));
t1465 = t1255 * t1257;
t1442 = qJD(1) * t1465;
t1463 = t1256 * t1267;
t1191 = -qJD(1) * t1267 * t1435 + t1263 * t1442 - t1463 * t1492;
t1509 = t1191 ^ 2;
t1121 = -t1207 - t1509;
t1446 = qJDD(1) * t1258;
t1428 = t1257 * t1446;
t1445 = qJDD(1) * t1260;
t1312 = t1256 * t1428 - t1259 * t1445 - qJDD(3);
t1459 = t1259 * t1263;
t1464 = t1256 * t1263;
t1193 = (t1257 * (t1255 * t1267 + t1258 * t1459) + t1260 * t1464) * qJD(1);
t1476 = t1191 * t1193;
t1280 = t1312 + t1476;
t1528 = t1263 * t1280;
t1052 = t1121 * t1267 + t1528;
t1447 = qJDD(1) * t1257;
t1431 = t1255 * t1447;
t1541 = t1256 * t1445 + t1259 * t1428;
t1321 = t1263 * t1431 - t1267 * t1541;
t1090 = -(qJD(3) - t1211) * t1193 - t1321;
t1527 = t1267 * t1280;
t1345 = t1121 * t1263 - t1527;
t990 = t1256 * t1090 + t1259 * t1345;
t1369 = t1052 * t1255 + t1258 * t990;
t988 = -t1259 * t1090 + t1256 * t1345;
t876 = -t1257 * t988 + t1260 * t1369;
t941 = -t1052 * t1258 + t1255 * t990;
t812 = -t1264 * t941 + t1268 * t876;
t1670 = pkin(8) * t812;
t815 = t1264 * t876 + t1268 * t941;
t1669 = pkin(8) * t815;
t1508 = t1193 ^ 2;
t1132 = t1508 + t1207;
t1279 = t1312 - t1476;
t1525 = t1279 * t1267;
t1055 = t1132 * t1263 + t1525;
t1146 = -t1191 * qJD(3) + t1263 * t1541 + t1267 * t1431;
t1171 = t1191 * t1211;
t1093 = t1171 + t1146;
t1526 = t1279 * t1263;
t1344 = t1132 * t1267 - t1526;
t996 = t1093 * t1256 + t1259 * t1344;
t1365 = -t1055 * t1255 + t1258 * t996;
t994 = -t1093 * t1259 + t1256 * t1344;
t881 = -t1257 * t994 + t1260 * t1365;
t952 = t1055 * t1258 + t1255 * t996;
t819 = -t1264 * t952 + t1268 * t881;
t1668 = pkin(8) * t819;
t820 = t1264 * t881 + t1268 * t952;
t1667 = pkin(8) * t820;
t879 = t1257 * t1365 + t1260 * t994;
t1666 = qJ(2) * (t1257 * t879 + t1260 * t881);
t874 = t1257 * t1369 + t1260 * t988;
t1665 = qJ(2) * (t1257 * t874 + t1260 * t876);
t1664 = pkin(1) * t874;
t1663 = pkin(1) * t876;
t1662 = pkin(1) * t879;
t1661 = pkin(1) * t881;
t1089 = -(qJD(3) + t1211) * t1193 - t1321;
t1166 = t1509 - t1207;
t1340 = t1166 * t1263 - t1525;
t1006 = t1259 * t1089 + t1256 * t1340;
t1010 = -t1256 * t1089 + t1259 * t1340;
t1071 = t1166 * t1267 + t1526;
t1359 = t1010 * t1258 + t1071 * t1255;
t888 = -t1257 * t1006 + t1260 * t1359;
t957 = t1010 * t1255 - t1071 * t1258;
t1660 = t1264 * t888 + t1268 * t957;
t1169 = -t1508 + t1207;
t1339 = t1169 * t1267 - t1528;
t1521 = -t1171 + t1146;
t1005 = t1256 * t1339 + t1259 * t1521;
t1009 = -t1256 * t1521 + t1259 * t1339;
t1069 = t1169 * t1263 + t1527;
t1360 = t1009 * t1258 - t1069 * t1255;
t887 = -t1257 * t1005 + t1260 * t1360;
t954 = t1009 * t1255 + t1069 * t1258;
t1659 = t1264 * t887 + t1268 * t954;
t1658 = -t1264 * t957 + t1268 * t888;
t1657 = -t1264 * t954 + t1268 * t887;
t1654 = qJ(2) * t941;
t1653 = qJ(2) * t952;
t1644 = t1260 * t1006 + t1257 * t1359;
t1643 = t1260 * t1005 + t1257 * t1360;
t1566 = t1089 * t1267 + t1263 * t1521;
t1519 = -t1508 - t1509;
t1567 = t1089 * t1263 - t1267 * t1521;
t1574 = -t1256 * t1519 + t1259 * t1567;
t1588 = -t1255 * t1574 + t1258 * t1566;
t1575 = t1256 * t1567 + t1259 * t1519;
t1586 = t1255 * t1566 + t1258 * t1574;
t1605 = -t1257 * t1575 + t1260 * t1586;
t1617 = t1264 * t1588 + t1268 * t1605;
t1642 = pkin(8) * t1617;
t1618 = -t1264 * t1605 + t1268 * t1588;
t1641 = pkin(8) * t1618;
t1640 = pkin(9) * (t1256 * t994 + t1259 * t996);
t1639 = pkin(9) * (t1256 * t988 + t1259 * t990);
t1487 = t1090 * t1267;
t1577 = -t1093 * t1263 + t1487;
t1518 = t1508 - t1509;
t1488 = t1090 * t1263;
t1576 = t1093 * t1267 + t1488;
t1585 = -t1256 * t1518 + t1259 * t1576;
t1608 = -t1255 * t1585 + t1258 * t1577;
t1587 = t1256 * t1576 + t1259 * t1518;
t1606 = t1255 * t1577 + t1258 * t1585;
t1619 = -t1257 * t1587 + t1260 * t1606;
t1638 = -t1264 * t1619 + t1268 * t1608;
t1637 = t1264 * t1608 + t1268 * t1619;
t1636 = pkin(2) * t988;
t1635 = pkin(2) * t990;
t1634 = pkin(2) * t994;
t1633 = pkin(2) * t996;
t1632 = pkin(1) * t1605;
t1607 = t1257 * t1586 + t1260 * t1575;
t1631 = pkin(1) * t1607;
t1620 = t1257 * t1606 + t1260 * t1587;
t1614 = (-t1257 * t1607 - t1260 * t1605) * qJ(2);
t1613 = qJ(2) * t1588;
t1604 = pkin(2) * t1574;
t1603 = pkin(2) * t1575;
t1602 = pkin(9) * t1052;
t1601 = pkin(9) * t1055;
t1584 = (-t1256 * t1575 - t1259 * t1574) * pkin(9);
t1583 = pkin(9) * t1566;
t1582 = qJ(4) * t1093;
t1325 = t1211 * (t1191 * t1263 + t1193 * t1267);
t1276 = t1256 * t1312 + t1259 * t1325;
t1474 = t1193 * t1263;
t1475 = t1191 * t1267;
t1324 = (-t1474 + t1475) * t1211;
t1515 = -t1255 * t1276 + t1258 * t1324;
t1281 = t1256 * t1325 - t1259 * t1312;
t1516 = t1255 * t1324 + t1258 * t1276;
t1535 = -t1257 * t1281 + t1260 * t1516;
t1565 = -t1264 * t1535 + t1268 * t1515;
t1145 = qJD(3) * t1193 + t1321;
t1458 = t1259 * t1267;
t1282 = -t1145 * t1458 + (t1193 * t1256 - t1211 * t1459) * t1191;
t1327 = t1145 * t1263 - t1211 * t1475;
t1513 = -t1255 * t1282 + t1258 * t1327;
t1284 = -t1145 * t1463 + (-t1193 * t1259 - t1211 * t1464) * t1191;
t1514 = t1255 * t1327 + t1258 * t1282;
t1536 = -t1257 * t1284 + t1260 * t1514;
t1564 = -t1264 * t1536 + t1268 * t1513;
t1283 = t1146 * t1459 + (-t1191 * t1256 - t1211 * t1458) * t1193;
t1416 = t1267 * t1146 + t1211 * t1474;
t1511 = -t1255 * t1283 + t1258 * t1416;
t1285 = t1146 * t1464 + (t1191 * t1259 - t1211 * t1463) * t1193;
t1512 = t1255 * t1416 + t1258 * t1283;
t1537 = -t1257 * t1285 + t1260 * t1512;
t1563 = -t1264 * t1537 + t1268 * t1511;
t1562 = t1264 * t1515 + t1268 * t1535;
t1561 = t1264 * t1513 + t1268 * t1536;
t1560 = t1264 * t1511 + t1268 * t1537;
t1261 = sin(qJ(6));
t1262 = sin(qJ(5));
t1266 = cos(qJ(5));
t1164 = t1191 * t1262 - t1211 * t1266;
t1184 = qJD(5) + t1193;
t1265 = cos(qJ(6));
t1115 = t1164 * t1261 - t1265 * t1184;
t1117 = t1164 * t1265 + t1184 * t1261;
t1046 = t1117 * t1115;
t1424 = -t1266 * t1145 - t1262 * t1312;
t1066 = -qJD(5) * t1164 - t1424;
t1293 = qJDD(6) - t1066;
t1523 = -t1046 + t1293;
t1553 = t1261 * t1523;
t1162 = -t1266 * t1191 - t1211 * t1262;
t1100 = t1164 * t1162;
t1139 = qJDD(5) + t1146;
t1522 = -t1100 + t1139;
t1552 = t1262 * t1522;
t1547 = t1265 * t1523;
t1546 = t1266 * t1522;
t1540 = t1257 * t1512 + t1260 * t1285;
t1539 = t1257 * t1514 + t1260 * t1284;
t1538 = t1257 * t1516 + t1260 * t1281;
t1210 = (t1256 * t1260 + t1435) * qJD(1) * pkin(9);
t1218 = (-pkin(9) * t1255 * t1461 + pkin(2) * t1260) * qJD(1);
t1243 = t1264 * g(1) - t1268 * g(2);
t1269 = qJD(1) ^ 2;
t1500 = qJ(2) * t1257;
t1323 = -t1269 * t1500 - t1243;
t1502 = pkin(9) * t1256;
t1330 = -pkin(2) * t1258 - t1255 * t1502;
t1426 = t1260 * g(3) - qJDD(2);
t1272 = ((-t1210 * t1258 + t1218 * t1255) * qJD(1) + (-pkin(1) + t1330) * qJDD(1) + t1323) * t1257 - t1426;
t1271 = t1256 * t1272;
t1252 = t1257 ^ 2;
t1254 = t1260 ^ 2;
t1437 = t1255 * t1258 * t1269;
t1524 = (t1252 + t1254) * t1257 * t1437;
t1338 = t1262 * t1145 - t1266 * t1312;
t1067 = -qJD(5) * t1162 + t1338;
t1120 = t1184 * t1162;
t1025 = t1067 - t1120;
t1493 = qJD(1) * t1257;
t1209 = t1330 * t1493;
t1244 = g(1) * t1268 + g(2) * t1264;
t1217 = -pkin(1) * t1269 + qJ(2) * t1447 - t1244;
t1286 = qJDD(1) * pkin(1) - t1323;
t1278 = t1260 * t1286;
t1419 = g(3) * t1462 - t1258 * t1278;
t1501 = pkin(9) * qJDD(1);
t1444 = t1259 * t1501;
t1079 = -0.2e1 * qJD(2) * t1442 + (pkin(2) * qJDD(1) + qJD(1) * t1210) * t1260 + (-t1217 + (-qJD(1) * t1209 - t1444) * t1257) * t1255 - t1419;
t1033 = t1079 * t1256 - t1259 * t1272;
t1520 = t1033 + (pkin(3) * t1211 + (2 * qJD(4))) * t1193;
t1157 = qJD(6) + t1162;
t1063 = t1157 * t1115;
t1433 = t1115 * qJD(6) - t1265 * t1067 - t1261 * t1139;
t947 = t1433 + t1063;
t1425 = t1261 * t1067 - t1265 * t1139;
t942 = (qJD(6) - t1157) * t1117 + t1425;
t1111 = t1115 ^ 2;
t1112 = t1117 ^ 2;
t1156 = t1157 ^ 2;
t1160 = t1162 ^ 2;
t1161 = t1164 ^ 2;
t1510 = t1184 ^ 2;
t1507 = 0.2e1 * qJD(2);
t1506 = pkin(3) + pkin(10);
t1505 = pkin(3) * t1145;
t1504 = pkin(3) * t1263;
t1503 = pkin(3) * t1267;
t1086 = pkin(5) * t1162 - pkin(11) * t1164;
t1140 = pkin(3) * t1191 - qJ(4) * t1193;
t1247 = g(3) * t1465;
t1080 = -t1247 + (-qJD(1) * t1218 + t1255 * t1286 + t1256 * t1501) * t1260 + (t1217 + (t1444 + (t1507 + t1209) * qJD(1)) * t1257) * t1258;
t962 = -t1079 * t1458 + t1080 * t1263 - t1267 * t1271;
t1288 = t1140 * t1193 + qJDD(4) + t962;
t1277 = pkin(3) * t1312 + t1288;
t930 = qJ(4) * t1207 - t1277;
t1274 = t1521 * pkin(4) + pkin(10) * t1280 - t930;
t1165 = pkin(4) * t1193 + pkin(10) * t1211;
t1275 = -t1520 - t1582;
t892 = -pkin(4) * t1509 + t1145 * t1506 - t1165 * t1193 + t1275;
t803 = t1262 * t1274 + t1266 * t892;
t783 = -pkin(5) * t1510 + pkin(11) * t1139 - t1086 * t1162 + t803;
t1454 = t1267 * t1080;
t925 = -t1207 * pkin(3) - qJ(4) * t1312 - 0.2e1 * qJD(4) * t1211 + t1079 * t1459 - t1191 * t1140 + t1263 * t1271 + t1454;
t890 = -t1145 * pkin(4) - pkin(10) * t1509 - t1211 * t1165 + t925;
t825 = t890 - t1025 * pkin(11) + (t1164 * t1184 - t1066) * pkin(5);
t735 = t1261 * t825 + t1265 * t783;
t802 = t1262 * t892 - t1266 * t1274;
t782 = -t1139 * pkin(5) - pkin(11) * t1510 + t1086 * t1164 + t802;
t1499 = t1261 * t782;
t969 = t1046 + t1293;
t1498 = t1261 * t969;
t1497 = t1262 * t890;
t1496 = t1265 * t782;
t1495 = t1265 * t969;
t1494 = t1266 * t890;
t1050 = t1100 + t1139;
t1490 = t1050 * t1262;
t1489 = t1050 * t1266;
t1480 = t1157 * t1261;
t1479 = t1157 * t1265;
t1478 = t1184 * t1262;
t1477 = t1184 * t1266;
t1232 = t1252 * t1437;
t1219 = t1232 + t1445;
t1473 = t1219 * t1255;
t1472 = t1219 * t1258;
t1220 = -t1232 + t1445;
t1471 = t1220 * t1255;
t1470 = t1220 * t1258;
t1250 = t1255 ^ 2;
t1469 = t1250 * t1252;
t1253 = t1258 ^ 2;
t1468 = t1252 * t1253;
t1467 = t1252 * t1269;
t1195 = t1257 * t1286 + t1426;
t1466 = t1255 * t1195;
t1460 = t1258 * t1195;
t1457 = t1260 * t1269;
t1456 = t1263 * t1033;
t1455 = t1267 * t1033;
t1451 = qJD(5) + t1184;
t1449 = t1250 + t1253;
t1448 = qJDD(1) * t1252;
t1443 = pkin(5) * t1266 + pkin(4);
t1441 = t1262 * t1046;
t1440 = t1266 * t1046;
t1439 = t1263 * t1100;
t1438 = t1267 * t1100;
t1434 = t1257 * t1457;
t1432 = pkin(5) * t1262 + qJ(4);
t1430 = t1255 * t1446;
t1427 = t1257 * t1445;
t734 = t1261 * t783 - t1265 * t825;
t685 = t1261 * t734 + t1265 * t735;
t1197 = -t1243 * t1264 - t1268 * t1244;
t1240 = qJDD(1) * t1268 - t1264 * t1269;
t1418 = -pkin(8) * t1240 - g(3) * t1264;
t1417 = t1493 * t1507 + t1217;
t1414 = t1455 + t1602;
t1413 = -t1456 + t1601;
t660 = t1262 * t685 - t1266 * t782;
t684 = t1261 * t735 - t1265 * t734;
t1391 = t1263 * t684 - t1267 * t660;
t661 = t1262 * t782 + t1266 * t685;
t628 = -t1256 * t661 + t1259 * t1391;
t639 = t1263 * t660 + t1267 * t684;
t1412 = t1255 * t639 + t1258 * t628;
t739 = t1262 * t803 - t1266 * t802;
t1390 = t1263 * t890 - t1267 * t739;
t740 = t1262 * t802 + t1266 * t803;
t679 = -t1256 * t740 + t1259 * t1390;
t722 = t1263 * t739 + t1267 * t890;
t1411 = t1255 * t722 + t1258 * t679;
t946 = -t1063 + t1433;
t854 = -t1261 * t946 - t1265 * t942;
t992 = t1111 + t1112;
t816 = t1262 * t854 + t1266 * t992;
t852 = -t1261 * t942 + t1265 * t946;
t1389 = t1263 * t852 - t1267 * t816;
t817 = -t1262 * t992 + t1266 * t854;
t721 = -t1256 * t817 + t1259 * t1389;
t756 = t1263 * t816 + t1267 * t852;
t1410 = t1255 * t756 + t1258 * t721;
t1035 = -t1112 + t1111;
t943 = (-qJD(6) - t1157) * t1117 - t1425;
t853 = t1261 * t947 + t1265 * t943;
t830 = -t1035 * t1266 - t1262 * t853;
t851 = t1261 * t943 - t1265 * t947;
t1388 = t1263 * t851 + t1267 * t830;
t831 = -t1035 * t1262 + t1266 * t853;
t728 = -t1256 * t831 + t1259 * t1388;
t759 = -t1263 * t830 + t1267 * t851;
t1409 = t1255 * t759 + t1258 * t728;
t1014 = -t1156 - t1111;
t909 = t1014 * t1265 - t1553;
t834 = t1262 * t909 + t1266 * t943;
t908 = t1014 * t1261 + t1547;
t1387 = t1263 * t908 - t1267 * t834;
t835 = -t1262 * t943 + t1266 * t909;
t738 = -t1256 * t835 + t1259 * t1387;
t777 = t1263 * t834 + t1267 * t908;
t1408 = t1255 * t777 + t1258 * t738;
t1034 = -t1112 - t1156;
t915 = -t1034 * t1261 - t1495;
t838 = t1262 * t915 + t1266 * t947;
t914 = t1034 * t1265 - t1498;
t1386 = t1263 * t914 - t1267 * t838;
t839 = -t1262 * t947 + t1266 * t915;
t742 = -t1256 * t839 + t1259 * t1386;
t786 = t1263 * t838 + t1267 * t914;
t1407 = t1255 * t786 + t1258 * t742;
t1062 = -t1112 + t1156;
t928 = -t1062 * t1261 + t1547;
t846 = -t1262 * t928 - t1266 * t946;
t926 = t1062 * t1265 + t1553;
t1385 = t1263 * t926 + t1267 * t846;
t848 = -t1262 * t946 + t1266 * t928;
t748 = -t1256 * t848 + t1259 * t1385;
t798 = -t1263 * t846 + t1267 * t926;
t1406 = t1255 * t798 + t1258 * t748;
t1061 = t1111 - t1156;
t929 = t1061 * t1265 - t1498;
t847 = -t1262 * t929 - t1266 * t942;
t927 = t1061 * t1261 + t1495;
t1384 = t1263 * t927 + t1267 * t847;
t849 = -t1262 * t942 + t1266 * t929;
t749 = -t1256 * t849 + t1259 * t1384;
t799 = -t1263 * t847 + t1267 * t927;
t1405 = t1255 * t799 + t1258 * t749;
t978 = -qJD(6) * t1117 - t1425;
t937 = t1115 * t1479 - t1261 * t978;
t893 = -t1262 * t937 - t1440;
t936 = t1115 * t1480 + t1265 * t978;
t1383 = t1263 * t936 + t1267 * t893;
t895 = t1266 * t937 - t1441;
t773 = -t1256 * t895 + t1259 * t1383;
t826 = -t1263 * t893 + t1267 * t936;
t1404 = t1255 * t826 + t1258 * t773;
t939 = -t1117 * t1480 - t1265 * t1433;
t894 = -t1262 * t939 + t1440;
t938 = t1117 * t1479 - t1261 * t1433;
t1382 = t1263 * t938 + t1267 * t894;
t896 = t1266 * t939 + t1441;
t774 = -t1256 * t896 + t1259 * t1382;
t827 = -t1263 * t894 + t1267 * t938;
t1403 = t1255 * t827 + t1258 * t774;
t1381 = t1263 * t925 + t1267 * t930;
t931 = t1275 + t1505;
t796 = -t1256 * t931 + t1259 * t1381;
t842 = -t1263 * t930 + t1267 * t925;
t1402 = t1255 * t842 + t1258 * t796;
t981 = (-t1115 * t1265 + t1117 * t1261) * t1157;
t948 = -t1262 * t981 + t1266 * t1293;
t980 = (-t1115 * t1261 - t1117 * t1265) * t1157;
t1380 = t1263 * t980 + t1267 * t948;
t949 = t1262 * t1293 + t1266 * t981;
t811 = -t1256 * t949 + t1259 * t1380;
t873 = -t1263 * t948 + t1267 * t980;
t1401 = t1255 * t873 + t1258 * t811;
t1054 = -t1160 - t1161;
t1026 = t1067 + t1120;
t1291 = (-qJD(5) + t1184) * t1164 - t1424;
t933 = -t1026 * t1266 + t1262 * t1291;
t1367 = t1054 * t1263 - t1267 * t933;
t935 = t1026 * t1262 + t1266 * t1291;
t829 = -t1256 * t935 + t1259 * t1367;
t899 = t1054 * t1267 + t1263 * t933;
t1400 = t1255 * t899 + t1258 * t829;
t1097 = t1161 - t1160;
t1022 = t1164 * t1451 + t1424;
t932 = t1022 * t1262 - t1025 * t1266;
t1364 = t1097 * t1263 + t1267 * t932;
t934 = -t1022 * t1266 - t1025 * t1262;
t833 = -t1256 * t934 + t1259 * t1364;
t907 = t1097 * t1267 - t1263 * t932;
t1399 = t1255 * t907 + t1258 * t833;
t963 = t1454 + (t1259 * t1079 + t1271) * t1263;
t1379 = t1263 * t963 - t1267 * t962;
t856 = t1256 * t1033 + t1259 * t1379;
t883 = t1263 * t962 + t1267 * t963;
t1398 = t1255 * t883 + t1258 * t856;
t1068 = -t1510 - t1160;
t971 = t1068 * t1262 + t1546;
t1375 = t1022 * t1263 - t1267 * t971;
t972 = t1068 * t1266 - t1552;
t862 = -t1256 * t972 + t1259 * t1375;
t913 = t1022 * t1267 + t1263 * t971;
t1397 = t1255 * t913 + t1258 * t862;
t1027 = -t1162 * t1451 + t1338;
t1078 = -t1161 - t1510;
t986 = t1078 * t1266 - t1490;
t1374 = t1027 * t1263 - t1267 * t986;
t987 = -t1078 * t1262 - t1489;
t866 = -t1256 * t987 + t1259 * t1374;
t918 = t1027 * t1267 + t1263 * t986;
t1396 = t1255 * t918 + t1258 * t866;
t1118 = t1160 - t1510;
t1003 = t1118 * t1266 - t1490;
t1001 = -t1118 * t1262 - t1489;
t1362 = t1001 * t1267 + t1263 * t1291;
t870 = -t1256 * t1003 + t1259 * t1362;
t923 = -t1001 * t1263 + t1267 * t1291;
t1395 = t1255 * t923 + t1258 * t870;
t1119 = -t1161 + t1510;
t1002 = -t1119 * t1262 + t1546;
t1000 = -t1119 * t1266 - t1552;
t1363 = t1000 * t1267 + t1026 * t1263;
t871 = -t1256 * t1002 + t1259 * t1363;
t924 = -t1000 * t1263 + t1026 * t1267;
t1394 = t1255 * t924 + t1258 * t871;
t1018 = -t1066 * t1262 + t1162 * t1477;
t1017 = -t1066 * t1266 - t1162 * t1478;
t1329 = t1017 * t1267 - t1439;
t902 = -t1256 * t1018 + t1259 * t1329;
t960 = -t1017 * t1263 - t1438;
t1393 = t1255 * t960 + t1258 * t902;
t1020 = t1067 * t1266 - t1164 * t1478;
t1019 = -t1067 * t1262 - t1164 * t1477;
t1328 = t1019 * t1267 + t1439;
t903 = -t1256 * t1020 + t1259 * t1328;
t961 = -t1019 * t1263 + t1438;
t1392 = t1255 * t961 + t1258 * t903;
t1227 = (-t1254 - t1468) * t1269;
t1177 = t1227 * t1258 - t1473;
t1378 = qJ(2) * t1177 + t1460;
t1225 = (-t1254 - t1469) * t1269;
t1179 = -t1225 * t1255 - t1470;
t1377 = qJ(2) * t1179 - t1466;
t1047 = (t1162 * t1262 + t1164 * t1266) * t1184;
t1013 = -t1047 * t1263 + t1139 * t1267;
t1048 = (-t1162 * t1266 + t1164 * t1262) * t1184;
t1353 = t1047 * t1267 + t1139 * t1263;
t951 = -t1256 * t1048 + t1259 * t1353;
t1376 = t1013 * t1255 + t1258 * t951;
t1158 = t1255 * t1417 + t1419;
t1159 = t1255 * t1278 + t1258 * t1417 - t1247;
t1337 = -t1158 * t1258 + t1159 * t1255;
t1083 = t1158 * t1255 + t1159 * t1258;
t1234 = t1258 * t1434;
t1213 = t1234 + t1431;
t1233 = t1255 * t1434;
t1216 = -t1233 + t1428;
t1336 = t1213 * t1258 + t1216 * t1255;
t1214 = -t1234 + t1431;
t1215 = t1233 + t1428;
t1335 = -t1214 * t1258 + t1215 * t1255;
t1224 = (t1254 - t1469) * t1269;
t1334 = t1224 * t1258 + t1473;
t1333 = t1227 * t1255 + t1472;
t1332 = t1225 * t1258 - t1471;
t1226 = (-t1254 + t1468) * t1269;
t1331 = t1226 * t1255 + t1470;
t1196 = t1243 * t1268 - t1244 * t1264;
t612 = -t1506 * t661 + (pkin(11) * t1262 + t1443) * t684;
t626 = pkin(4) * t660 - pkin(5) * t782 + pkin(11) * t685 - qJ(4) * t661;
t1320 = pkin(9) * t639 + t1263 * t626 + t1267 * t612;
t669 = -pkin(11) * t852 - t684;
t645 = -t1262 * t669 + t1443 * t852 - t1506 * t817;
t650 = pkin(4) * t816 + pkin(5) * t992 + pkin(11) * t854 - qJ(4) * t817 + t685;
t1319 = pkin(9) * t756 + t1263 * t650 + t1267 * t645;
t723 = -pkin(5) * t908 + t734;
t754 = -pkin(11) * t908 + t1499;
t656 = pkin(4) * t908 - t1262 * t754 - t1266 * t723 - t1506 * t835;
t691 = pkin(4) * t834 + pkin(5) * t943 + pkin(11) * t909 - qJ(4) * t835 - t1496;
t1318 = pkin(9) * t777 + t1263 * t691 + t1267 * t656;
t724 = -pkin(5) * t914 + t735;
t755 = -pkin(11) * t914 + t1496;
t658 = pkin(4) * t914 - t1262 * t755 - t1266 * t724 - t1506 * t839;
t697 = pkin(4) * t838 + pkin(5) * t947 + pkin(11) * t915 - qJ(4) * t839 + t1499;
t1317 = pkin(9) * t786 + t1263 * t697 + t1267 * t658;
t681 = pkin(4) * t890 - t1506 * t740;
t687 = pkin(4) * t739 - qJ(4) * t740;
t1316 = pkin(9) * t722 + t1263 * t687 + t1267 * t681;
t716 = pkin(4) * t1054 - t1506 * t935 - t740;
t850 = pkin(4) * t933 - qJ(4) * t935;
t1315 = pkin(9) * t899 + t1263 * t850 + t1267 * t716;
t761 = pkin(4) * t971 - qJ(4) * t972 - t802;
t788 = pkin(4) * t1022 - t1506 * t972 + t1494;
t1314 = pkin(9) * t913 + t1263 * t761 + t1267 * t788;
t764 = pkin(4) * t986 - qJ(4) * t987 - t803;
t790 = pkin(4) * t1027 - t1506 * t987 - t1497;
t1313 = pkin(9) * t918 + t1263 * t764 + t1267 * t790;
t904 = -pkin(3) * t1519 + t925;
t910 = (-t1519 - t1207) * qJ(4) + t1277;
t1311 = t1263 * t910 + t1267 * t904 + t1583;
t1310 = t883 + t1583;
t611 = -t1506 * t660 + (-pkin(11) * t1266 + t1432) * t684;
t627 = t1256 * t1391 + t1259 * t661;
t593 = -pkin(2) * t627 - t1256 * t611 + t1259 * t1320;
t596 = -t1263 * t612 + t1267 * t626 + (-t1256 * t627 - t1259 * t628) * pkin(9);
t609 = -t1255 * t628 + t1258 * t639;
t1309 = qJ(2) * t609 + t1255 * t596 + t1258 * t593;
t644 = t1266 * t669 + t1432 * t852 - t1506 * t816;
t720 = t1256 * t1389 + t1259 * t817;
t608 = -pkin(2) * t720 - t1256 * t644 + t1259 * t1319;
t615 = -t1263 * t645 + t1267 * t650 + (-t1256 * t720 - t1259 * t721) * pkin(9);
t683 = -t1255 * t721 + t1258 * t756;
t1308 = qJ(2) * t683 + t1255 * t615 + t1258 * t608;
t678 = t1256 * t1390 + t1259 * t740;
t680 = qJ(4) * t890 - t1506 * t739;
t614 = -pkin(2) * t678 - t1256 * t680 + t1259 * t1316;
t622 = -t1263 * t681 + t1267 * t687 + (-t1256 * t678 - t1259 * t679) * pkin(9);
t648 = -t1255 * t679 + t1258 * t722;
t1307 = qJ(2) * t648 + t1255 * t622 + t1258 * t614;
t655 = qJ(4) * t908 - t1262 * t723 + t1266 * t754 - t1506 * t834;
t737 = t1256 * t1387 + t1259 * t835;
t617 = -pkin(2) * t737 - t1256 * t655 + t1259 * t1318;
t630 = -t1263 * t656 + t1267 * t691 + (-t1256 * t737 - t1259 * t738) * pkin(9);
t702 = -t1255 * t738 + t1258 * t777;
t1306 = qJ(2) * t702 + t1255 * t630 + t1258 * t617;
t657 = qJ(4) * t914 - t1262 * t724 + t1266 * t755 - t1506 * t838;
t741 = t1256 * t1386 + t1259 * t839;
t621 = -pkin(2) * t741 - t1256 * t657 + t1259 * t1317;
t631 = -t1263 * t658 + t1267 * t697 + (-t1256 * t741 - t1259 * t742) * pkin(9);
t705 = -t1255 * t742 + t1258 * t786;
t1305 = qJ(2) * t705 + t1255 * t631 + t1258 * t621;
t715 = qJ(4) * t1054 - t1506 * t933 - t739;
t828 = t1256 * t1367 + t1259 * t935;
t647 = -pkin(2) * t828 - t1256 * t715 + t1259 * t1315;
t664 = -t1263 * t716 + t1267 * t850 + (-t1256 * t828 - t1259 * t829) * pkin(9);
t775 = -t1255 * t829 + t1258 * t899;
t1304 = qJ(2) * t775 + t1255 * t664 + t1258 * t647;
t787 = qJ(4) * t1022 - t1506 * t971 + t1497;
t861 = t1256 * t1375 + t1259 * t972;
t668 = -pkin(2) * t861 - t1256 * t787 + t1259 * t1314;
t688 = -t1263 * t788 + t1267 * t761 + (-t1256 * t861 - t1259 * t862) * pkin(9);
t797 = -t1255 * t862 + t1258 * t913;
t1303 = qJ(2) * t797 + t1255 * t688 + t1258 * t668;
t789 = qJ(4) * t1027 - t1506 * t986 + t1494;
t865 = t1256 * t1374 + t1259 * t987;
t673 = -pkin(2) * t865 - t1256 * t789 + t1259 * t1313;
t690 = -t1263 * t790 + t1267 * t764 + (-t1256 * t865 - t1259 * t866) * pkin(9);
t800 = -t1255 * t866 + t1258 * t918;
t1302 = qJ(2) * t800 + t1255 * t690 + t1258 * t673;
t1287 = pkin(9) * t842 + (-qJ(4) * t1263 - t1503) * t931;
t795 = t1256 * t1381 + t1259 * t931;
t843 = pkin(3) * t930 + qJ(4) * t925;
t701 = -pkin(2) * t795 - t1256 * t843 + t1259 * t1287;
t710 = (-qJ(4) * t1267 + t1504) * t931 + (-t1256 * t795 - t1259 * t796) * pkin(9);
t745 = -t1255 * t796 + t1258 * t842;
t1301 = qJ(2) * t745 + t1255 * t710 + t1258 * t701;
t1032 = -pkin(3) * t1521 + qJ(4) * t1089;
t763 = -t1032 * t1256 + t1259 * t1311 - t1603;
t765 = -t1263 * t904 + t1267 * t910 + t1584;
t1300 = t1255 * t765 + t1258 * t763 + t1613;
t855 = -t1259 * t1033 + t1256 * t1379;
t766 = (-t1256 * t855 - t1259 * t856) * pkin(9);
t778 = -t1255 * t856 + t1258 * t883;
t779 = pkin(9) * t1259 * t883 - pkin(2) * t855;
t1299 = qJ(2) * t778 + t1255 * t766 + t1258 * t779;
t906 = (-t1090 + t1145) * pkin(3) + t1275;
t1289 = -qJ(4) * t1488 + t1267 * t906 - t1602;
t898 = (-t1121 - t1207) * qJ(4) + (t1280 + t1312) * pkin(3) + t1288;
t768 = -t1256 * t898 + t1259 * t1289 + t1636;
t806 = -qJ(4) * t1487 - t1263 * t906 + t1639;
t1298 = t1255 * t806 + t1258 * t768 + t1654;
t905 = -t1505 + t1520 + 0.2e1 * t1582;
t1290 = t1093 * t1503 + t1263 * t905 - t1601;
t897 = pkin(3) * t1132 - qJ(4) * t1279 + t925;
t770 = -t1256 * t897 + t1259 * t1290 - t1634;
t807 = -t1093 * t1504 + t1267 * t905 - t1640;
t1297 = t1255 * t807 + t1258 * t770 - t1653;
t801 = t1584 - t1379;
t809 = t1259 * t1310 - t1603;
t1296 = t1255 * t801 + t1258 * t809 + t1613;
t837 = t1256 * t962 + t1259 * t1414 - t1636;
t867 = -t1456 - t1639;
t1295 = t1255 * t867 + t1258 * t837 - t1654;
t841 = t1256 * t963 + t1259 * t1413 + t1634;
t872 = -t1455 + t1640;
t1294 = t1255 * t872 + t1258 * t841 + t1653;
t1172 = t1214 * t1255 + t1215 * t1258;
t1292 = qJ(2) * t1172 + t1083;
t1239 = qJDD(1) * t1264 + t1268 * t1269;
t1223 = -pkin(8) * t1239 + g(3) * t1268;
t1222 = t1449 * t1467;
t1221 = (t1250 - t1253) * t1467;
t1205 = t1449 * t1434;
t1204 = (-t1250 * t1457 + t1430) * t1257;
t1203 = (-t1253 * t1457 - t1430) * t1257;
t1186 = t1250 * t1427 + t1524;
t1185 = t1253 * t1427 - t1524;
t1178 = -t1224 * t1255 + t1472;
t1176 = t1226 * t1258 - t1471;
t1173 = -t1213 * t1255 + t1216 * t1258;
t1155 = -t1257 * t1213 + t1260 * t1332;
t1154 = -t1257 * t1214 + t1260 * t1334;
t1153 = t1257 * t1216 + t1260 * t1333;
t1152 = -t1257 * t1215 + t1260 * t1331;
t1151 = t1260 * t1213 + t1257 * t1332;
t1150 = -t1260 * t1216 + t1257 * t1333;
t1144 = -t1257 * t1221 + t1260 * t1336;
t1143 = t1257 * t1222 + t1260 * t1335;
t1142 = -t1260 * t1222 + t1257 * t1335;
t1106 = -t1155 * t1264 + t1179 * t1268;
t1105 = -t1153 * t1264 + t1177 * t1268;
t1104 = t1155 * t1268 + t1179 * t1264;
t1103 = t1153 * t1268 + t1177 * t1264;
t1099 = -t1143 * t1264 + t1172 * t1268;
t1098 = t1143 * t1268 + t1172 * t1264;
t1060 = t1257 * t1195 + t1260 * t1337;
t1059 = -t1260 * t1195 + t1257 * t1337;
t1058 = -t1460 + (-t1151 * t1257 - t1155 * t1260) * qJ(2);
t1057 = -t1466 + (-t1150 * t1257 - t1153 * t1260) * qJ(2);
t1045 = -pkin(1) * t1150 + t1158 * t1257 + t1260 * t1378;
t1044 = -pkin(1) * t1151 + t1159 * t1257 + t1260 * t1377;
t1021 = -pkin(1) * t1142 + t1260 * t1292;
t1012 = (-t1142 * t1257 - t1143 * t1260) * qJ(2) - t1337;
t999 = qJ(2) * t1083 * t1260 - pkin(1) * t1059;
t998 = -t1060 * t1264 + t1083 * t1268;
t997 = t1060 * t1268 + t1083 * t1264;
t977 = (-t1059 * t1257 - t1060 * t1260) * qJ(2);
t950 = t1259 * t1048 + t1256 * t1353;
t901 = t1259 * t1020 + t1256 * t1328;
t900 = t1259 * t1018 + t1256 * t1329;
t882 = t1013 * t1258 - t1255 * t951;
t869 = t1259 * t1002 + t1256 * t1363;
t868 = t1259 * t1003 + t1256 * t1362;
t845 = -t1255 * t903 + t1258 * t961;
t844 = -t1255 * t902 + t1258 * t960;
t840 = t1256 * t1413 - t1259 * t963 - t1633;
t836 = t1256 * t1414 - t1259 * t962 + t1635;
t832 = t1256 * t1364 + t1259 * t934;
t822 = -t1257 * t950 + t1260 * t1376;
t810 = t1256 * t1380 + t1259 * t949;
t808 = t1256 * t1310 + t1604;
t805 = -t1255 * t871 + t1258 * t924;
t804 = -t1255 * t870 + t1258 * t923;
t785 = -t1257 * t901 + t1260 * t1392;
t784 = -t1257 * t900 + t1260 * t1393;
t780 = pkin(2) * t856 + t1502 * t883;
t776 = -t1255 * t833 + t1258 * t907;
t772 = t1256 * t1382 + t1259 * t896;
t771 = t1256 * t1383 + t1259 * t895;
t769 = t1256 * t1290 + t1259 * t897 + t1633;
t767 = t1256 * t1289 + t1259 * t898 - t1635;
t762 = t1032 * t1259 + t1256 * t1311 + t1604;
t760 = -t1255 * t811 + t1258 * t873;
t758 = -t1257 * t869 + t1260 * t1394;
t757 = -t1257 * t868 + t1260 * t1395;
t753 = -t1257 * t865 + t1260 * t1396;
t752 = t1257 * t1396 + t1260 * t865;
t751 = -t1257 * t861 + t1260 * t1397;
t750 = t1257 * t1397 + t1260 * t861;
t747 = t1256 * t1384 + t1259 * t849;
t746 = t1256 * t1385 + t1259 * t848;
t744 = -t1257 * t855 + t1260 * t1398;
t743 = t1257 * t1398 + t1260 * t855;
t736 = -t1257 * t832 + t1260 * t1399;
t732 = -t1257 * t828 + t1260 * t1400;
t731 = t1257 * t1400 + t1260 * t828;
t730 = -t1255 * t774 + t1258 * t827;
t729 = -t1255 * t773 + t1258 * t826;
t727 = t1256 * t1388 + t1259 * t831;
t726 = -t1255 * t841 + t1258 * t872 + t1666;
t725 = -t1257 * t810 + t1260 * t1401;
t719 = -t1255 * t837 + t1258 * t867 - t1665;
t718 = -t1264 * t753 + t1268 * t800;
t717 = t1264 * t800 + t1268 * t753;
t714 = -t1264 * t751 + t1268 * t797;
t713 = t1264 * t797 + t1268 * t751;
t712 = -t1255 * t749 + t1258 * t799;
t711 = -t1255 * t748 + t1258 * t798;
t709 = -t1257 * t795 + t1260 * t1402;
t708 = t1257 * t1402 + t1260 * t795;
t707 = -t1257 * t840 + t1260 * t1294 + t1662;
t706 = -t1257 * t836 + t1260 * t1295 - t1664;
t704 = -t1264 * t744 + t1268 * t778;
t703 = t1264 * t778 + t1268 * t744;
t700 = pkin(2) * t796 + t1256 * t1287 + t1259 * t843;
t699 = -t1255 * t809 + t1258 * t801 + t1614;
t698 = -t1255 * t770 + t1258 * t807 - t1666;
t696 = -t1255 * t768 + t1258 * t806 + t1665;
t695 = -t1264 * t732 + t1268 * t775;
t694 = t1264 * t775 + t1268 * t732;
t693 = -t1257 * t772 + t1260 * t1403;
t692 = -t1257 * t771 + t1260 * t1404;
t689 = -t1255 * t728 + t1258 * t759;
t686 = -t1257 * t808 + t1260 * t1296 - t1631;
t682 = -t1255 * t763 + t1258 * t765 + t1614;
t677 = -t1257 * t769 + t1260 * t1297 - t1662;
t676 = -t1257 * t767 + t1260 * t1298 + t1664;
t675 = -t1257 * t747 + t1260 * t1405;
t674 = -t1257 * t746 + t1260 * t1406;
t672 = pkin(2) * t866 + t1256 * t1313 + t1259 * t789;
t671 = -t1264 * t709 + t1268 * t745;
t670 = t1264 * t745 + t1268 * t709;
t667 = pkin(2) * t862 + t1256 * t1314 + t1259 * t787;
t666 = -t1257 * t741 + t1260 * t1407;
t665 = t1257 * t1407 + t1260 * t741;
t663 = -t1257 * t737 + t1260 * t1408;
t662 = t1257 * t1408 + t1260 * t737;
t659 = -t1257 * t762 + t1260 * t1300 - t1631;
t654 = -t1257 * t727 + t1260 * t1409;
t653 = -t1255 * t779 + t1258 * t766 + (-t1257 * t743 - t1260 * t744) * qJ(2);
t652 = -t1257 * t720 + t1260 * t1410;
t651 = t1257 * t1410 + t1260 * t720;
t649 = -pkin(1) * t743 - t1257 * t780 + t1260 * t1299;
t646 = pkin(2) * t829 + t1256 * t1315 + t1259 * t715;
t643 = -t1264 * t666 + t1268 * t705;
t642 = t1264 * t705 + t1268 * t666;
t641 = -t1264 * t663 + t1268 * t702;
t640 = t1264 * t702 + t1268 * t663;
t638 = -t1264 * t652 + t1268 * t683;
t637 = t1264 * t683 + t1268 * t652;
t636 = -t1257 * t678 + t1260 * t1411;
t635 = t1257 * t1411 + t1260 * t678;
t634 = -t1255 * t673 + t1258 * t690 + (-t1257 * t752 - t1260 * t753) * qJ(2);
t633 = -t1255 * t701 + t1258 * t710 + (-t1257 * t708 - t1260 * t709) * qJ(2);
t632 = -t1255 * t668 + t1258 * t688 + (-t1257 * t750 - t1260 * t751) * qJ(2);
t629 = -pkin(1) * t708 - t1257 * t700 + t1260 * t1301;
t625 = -pkin(1) * t752 - t1257 * t672 + t1260 * t1302;
t624 = -pkin(1) * t750 - t1257 * t667 + t1260 * t1303;
t623 = -t1255 * t647 + t1258 * t664 + (-t1257 * t731 - t1260 * t732) * qJ(2);
t620 = pkin(2) * t742 + t1256 * t1317 + t1259 * t657;
t619 = -t1264 * t636 + t1268 * t648;
t618 = t1264 * t648 + t1268 * t636;
t616 = pkin(2) * t738 + t1256 * t1318 + t1259 * t655;
t613 = pkin(2) * t679 + t1256 * t1316 + t1259 * t680;
t610 = -pkin(1) * t731 - t1257 * t646 + t1260 * t1304;
t607 = pkin(2) * t721 + t1256 * t1319 + t1259 * t644;
t606 = -t1257 * t627 + t1260 * t1412;
t605 = t1257 * t1412 + t1260 * t627;
t604 = -t1255 * t621 + t1258 * t631 + (-t1257 * t665 - t1260 * t666) * qJ(2);
t603 = -t1255 * t617 + t1258 * t630 + (-t1257 * t662 - t1260 * t663) * qJ(2);
t602 = -pkin(1) * t665 - t1257 * t620 + t1260 * t1305;
t601 = -t1255 * t608 + t1258 * t615 + (-t1257 * t651 - t1260 * t652) * qJ(2);
t600 = -pkin(1) * t662 - t1257 * t616 + t1260 * t1306;
t599 = -t1255 * t614 + t1258 * t622 + (-t1257 * t635 - t1260 * t636) * qJ(2);
t598 = -t1264 * t606 + t1268 * t609;
t597 = t1264 * t609 + t1268 * t606;
t595 = -pkin(1) * t635 - t1257 * t613 + t1260 * t1307;
t594 = -pkin(1) * t651 - t1257 * t607 + t1260 * t1308;
t592 = pkin(2) * t628 + t1256 * t1320 + t1259 * t611;
t591 = -t1255 * t593 + t1258 * t596 + (-t1257 * t605 - t1260 * t606) * qJ(2);
t590 = -pkin(1) * t605 - t1257 * t592 + t1260 * t1309;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1239, -t1240, 0, t1197, 0, 0, 0, 0, 0, 0, t1105, t1106, t1099, t998, 0, 0, 0, 0, 0, 0, -t815, t820, t1618, t704, 0, 0, 0, 0, 0, 0, t1618, t815, -t820, t671, 0, 0, 0, 0, 0, 0, t714, t718, t695, t619, 0, 0, 0, 0, 0, 0, t641, t643, t638, t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1240, -t1239, 0, t1196, 0, 0, 0, 0, 0, 0, t1103, t1104, t1098, t997, 0, 0, 0, 0, 0, 0, t812, -t819, t1617, t703, 0, 0, 0, 0, 0, 0, t1617, -t812, t819, t670, 0, 0, 0, 0, 0, 0, t713, t717, t694, t618, 0, 0, 0, 0, 0, 0, t640, t642, t637, t597; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1150, t1151, t1142, t1059, 0, 0, 0, 0, 0, 0, t874, -t879, t1607, t743, 0, 0, 0, 0, 0, 0, t1607, -t874, t879, t708, 0, 0, 0, 0, 0, 0, t750, t752, t731, t635, 0, 0, 0, 0, 0, 0, t662, t665, t651, t605; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1240, 0, -t1239, 0, t1418, -t1223, -t1196, -pkin(8) * t1196, -t1186 * t1264 + t1204 * t1268, -t1144 * t1264 + t1173 * t1268, -t1154 * t1264 + t1178 * t1268, -t1185 * t1264 + t1203 * t1268, -t1152 * t1264 + t1176 * t1268, t1205 * t1268 + t1264 * t1427, -pkin(8) * t1103 - t1045 * t1264 + t1057 * t1268, -pkin(8) * t1104 - t1044 * t1264 + t1058 * t1268, -pkin(8) * t1098 + t1012 * t1268 - t1021 * t1264, -pkin(8) * t997 - t1264 * t999 + t1268 * t977, t1563, t1638, -t1659, t1564, -t1660, t1565, -t1264 * t706 + t1268 * t719 - t1670, -t1264 * t707 + t1268 * t726 + t1668, -t1264 * t686 + t1268 * t699 - t1642, -pkin(8) * t703 - t1264 * t649 + t1268 * t653, t1565, t1659, t1660, t1563, t1638, t1564, -t1264 * t659 + t1268 * t682 - t1642, -t1264 * t676 + t1268 * t696 + t1670, -t1264 * t677 + t1268 * t698 - t1668, -pkin(8) * t670 - t1264 * t629 + t1268 * t633, -t1264 * t785 + t1268 * t845, -t1264 * t736 + t1268 * t776, -t1264 * t758 + t1268 * t805, -t1264 * t784 + t1268 * t844, -t1264 * t757 + t1268 * t804, -t1264 * t822 + t1268 * t882, -pkin(8) * t713 - t1264 * t624 + t1268 * t632, -pkin(8) * t717 - t1264 * t625 + t1268 * t634, -pkin(8) * t694 - t1264 * t610 + t1268 * t623, -pkin(8) * t618 - t1264 * t595 + t1268 * t599, -t1264 * t693 + t1268 * t730, -t1264 * t654 + t1268 * t689, -t1264 * t674 + t1268 * t711, -t1264 * t692 + t1268 * t729, -t1264 * t675 + t1268 * t712, -t1264 * t725 + t1268 * t760, -pkin(8) * t640 - t1264 * t600 + t1268 * t603, -pkin(8) * t642 - t1264 * t602 + t1268 * t604, -pkin(8) * t637 - t1264 * t594 + t1268 * t601, -pkin(8) * t597 - t1264 * t590 + t1268 * t591; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1239, 0, t1240, 0, t1223, t1418, t1197, pkin(8) * t1197, t1186 * t1268 + t1204 * t1264, t1144 * t1268 + t1173 * t1264, t1154 * t1268 + t1178 * t1264, t1185 * t1268 + t1203 * t1264, t1152 * t1268 + t1176 * t1264, t1205 * t1264 - t1268 * t1427, pkin(8) * t1105 + t1045 * t1268 + t1057 * t1264, pkin(8) * t1106 + t1044 * t1268 + t1058 * t1264, pkin(8) * t1099 + t1012 * t1264 + t1021 * t1268, pkin(8) * t998 + t1264 * t977 + t1268 * t999, t1560, t1637, t1657, t1561, t1658, t1562, t1264 * t719 + t1268 * t706 - t1669, t1264 * t726 + t1268 * t707 + t1667, t1264 * t699 + t1268 * t686 + t1641, pkin(8) * t704 + t1264 * t653 + t1268 * t649, t1562, -t1657, -t1658, t1560, t1637, t1561, t1264 * t682 + t1268 * t659 + t1641, t1264 * t696 + t1268 * t676 + t1669, t1264 * t698 + t1268 * t677 - t1667, pkin(8) * t671 + t1264 * t633 + t1268 * t629, t1264 * t845 + t1268 * t785, t1264 * t776 + t1268 * t736, t1264 * t805 + t1268 * t758, t1264 * t844 + t1268 * t784, t1264 * t804 + t1268 * t757, t1264 * t882 + t1268 * t822, pkin(8) * t714 + t1264 * t632 + t1268 * t624, pkin(8) * t718 + t1264 * t634 + t1268 * t625, pkin(8) * t695 + t1264 * t623 + t1268 * t610, pkin(8) * t619 + t1264 * t599 + t1268 * t595, t1264 * t730 + t1268 * t693, t1264 * t689 + t1268 * t654, t1264 * t711 + t1268 * t674, t1264 * t729 + t1268 * t692, t1264 * t712 + t1268 * t675, t1264 * t760 + t1268 * t725, pkin(8) * t641 + t1264 * t603 + t1268 * t600, pkin(8) * t643 + t1264 * t604 + t1268 * t602, pkin(8) * t638 + t1264 * t601 + t1268 * t594, pkin(8) * t598 + t1264 * t591 + t1268 * t590; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1243, t1244, 0, 0, t1250 * t1448, t1260 * t1221 + t1257 * t1336, t1260 * t1214 + t1257 * t1334, t1253 * t1448, t1260 * t1215 + t1257 * t1331, t1254 * qJDD(1), pkin(1) * t1153 - t1158 * t1260 + t1257 * t1378, pkin(1) * t1155 - t1159 * t1260 + t1257 * t1377, pkin(1) * t1143 + t1257 * t1292, pkin(1) * t1060 + t1083 * t1500, t1540, t1620, t1643, t1539, t1644, t1538, t1257 * t1295 + t1260 * t836 + t1663, t1257 * t1294 + t1260 * t840 - t1661, t1257 * t1296 + t1260 * t808 + t1632, pkin(1) * t744 + t1257 * t1299 + t1260 * t780, t1538, -t1643, -t1644, t1540, t1620, t1539, t1257 * t1300 + t1260 * t762 + t1632, t1257 * t1298 + t1260 * t767 - t1663, t1257 * t1297 + t1260 * t769 + t1661, pkin(1) * t709 + t1257 * t1301 + t1260 * t700, t1257 * t1392 + t1260 * t901, t1257 * t1399 + t1260 * t832, t1257 * t1394 + t1260 * t869, t1257 * t1393 + t1260 * t900, t1257 * t1395 + t1260 * t868, t1257 * t1376 + t1260 * t950, pkin(1) * t751 + t1257 * t1303 + t1260 * t667, pkin(1) * t753 + t1257 * t1302 + t1260 * t672, pkin(1) * t732 + t1257 * t1304 + t1260 * t646, pkin(1) * t636 + t1257 * t1307 + t1260 * t613, t1257 * t1403 + t1260 * t772, t1257 * t1409 + t1260 * t727, t1257 * t1406 + t1260 * t746, t1257 * t1404 + t1260 * t771, t1257 * t1405 + t1260 * t747, t1257 * t1401 + t1260 * t810, pkin(1) * t663 + t1257 * t1306 + t1260 * t616, pkin(1) * t666 + t1257 * t1305 + t1260 * t620, pkin(1) * t652 + t1257 * t1308 + t1260 * t607, pkin(1) * t606 + t1257 * t1309 + t1260 * t592;];
tauB_reg  = t1;
