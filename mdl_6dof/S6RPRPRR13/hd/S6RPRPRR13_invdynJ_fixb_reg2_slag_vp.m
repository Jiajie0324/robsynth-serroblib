% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRPRR13_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:25:30
% EndTime: 2019-03-09 04:26:05
% DurationCPUTime: 22.36s
% Computational Cost: add. (26019->799), mult. (83062->1032), div. (0->0), fcn. (71518->14), ass. (0->365)
t281 = sin(pkin(6));
t279 = sin(pkin(12));
t282 = cos(pkin(12));
t286 = sin(qJ(3));
t476 = cos(pkin(7));
t408 = t286 * t476;
t507 = cos(qJ(3));
t330 = t507 * t279 + t282 * t408;
t283 = cos(pkin(6));
t280 = sin(pkin(7));
t462 = t280 * t286;
t427 = t283 * t462;
t192 = t281 * t330 + t427;
t537 = t192 * qJD(1);
t549 = -t537 - qJD(5);
t383 = t476 * t507;
t364 = t282 * t383;
t464 = t279 * t286;
t329 = t364 - t464;
t425 = t280 * t507;
t391 = t283 * t425;
t305 = qJD(3) * (t281 * t329 + t391);
t516 = qJDD(1) * t192 + qJDD(5);
t511 = t305 * qJD(1) + t516;
t547 = t549 ^ 2;
t285 = sin(qJ(5));
t289 = cos(qJ(5));
t409 = t283 * t476;
t444 = qJD(1) * t281;
t421 = t282 * t444;
t223 = -qJD(1) * t409 + t280 * t421 - qJD(3);
t506 = pkin(1) * t283;
t430 = qJD(1) * t506;
t226 = qJ(2) * t421 + t279 * t430;
t410 = t281 * t476;
t463 = t280 * t283;
t328 = (t282 * t410 + t463) * pkin(9);
t161 = qJD(1) * t328 + t226;
t263 = t282 * t430;
t465 = t279 * t281;
t324 = t283 * pkin(2) + (-t476 * pkin(9) - qJ(2)) * t465;
t172 = qJD(1) * t324 + t263;
t214 = (-pkin(9) * t279 * t280 - pkin(2) * t282 - pkin(1)) * t281;
t204 = qJD(1) * t214 + qJD(2);
t88 = t161 * t286 - t172 * t383 - t204 * t425;
t452 = -qJD(4) - t88;
t451 = pkin(4) * t537 - t452;
t508 = pkin(3) + pkin(10);
t55 = t508 * t223 + t451;
t351 = t281 * t364;
t422 = t279 * t444;
t178 = t286 * t422 + (-t351 - t391) * qJD(1);
t122 = -t172 * t280 + t476 * t204;
t355 = -qJ(4) * t537 + t122;
t57 = t508 * t178 + t355;
t26 = t285 * t55 + t289 * t57;
t546 = t26 * t549;
t126 = -t289 * t178 - t223 * t285;
t397 = t549 * t126;
t128 = t178 * t285 - t223 * t289;
t398 = t549 * t128;
t299 = (t329 * qJD(1) * qJD(3) + qJDD(1) * t330) * t281;
t416 = qJD(3) * t507;
t116 = -(qJD(1) * t416 + qJDD(1) * t286) * t463 - t299;
t545 = t223 * t178 + t116;
t295 = qJDD(5) - t116;
t323 = t281 * (t279 * t383 + t282 * t286);
t211 = qJD(1) * t323;
t443 = qJD(3) * t286;
t420 = t280 * t443;
t544 = t211 - t420;
t543 = -t511 * t285 - t547 * t289;
t287 = sin(qJ(1));
t454 = t287 * t279;
t290 = cos(qJ(1));
t457 = t283 * t290;
t231 = -t282 * t457 + t454;
t458 = t282 * t287;
t232 = t279 * t457 + t458;
t424 = t281 * t507;
t393 = t280 * t424;
t138 = t231 * t383 + t232 * t286 + t290 * t393;
t527 = -t231 * t280 + t290 * t410;
t105 = t138 * t285 - t289 * t527;
t459 = t281 * t290;
t139 = -t231 * t408 + t232 * t507 - t459 * t462;
t284 = sin(qJ(6));
t288 = cos(qJ(6));
t541 = t105 * t284 - t139 * t288;
t540 = t105 * t288 + t139 * t284;
t440 = qJD(5) * t508;
t406 = t476 * t172;
t89 = t286 * (t204 * t280 + t406) + t507 * t161;
t73 = -t178 * pkin(4) + t89;
t474 = qJ(4) * t178;
t92 = t508 * t537 + t474;
t46 = t285 * t73 + t289 * t92;
t539 = t289 * t440 + t46;
t517 = t281 * t464 - t351;
t191 = -t391 + t517;
t181 = t192 * qJD(3);
t342 = t191 * qJDD(1);
t117 = qJD(1) * t181 + t342;
t432 = qJDD(1) * t282;
t414 = t281 * t432;
t222 = -qJDD(1) * t409 + t280 * t414 - qJDD(3);
t213 = qJ(4) * t222;
t215 = qJD(4) * t223;
t435 = qJD(1) * qJD(2);
t415 = t281 * t435;
t431 = qJDD(1) * t283;
t429 = pkin(1) * t431;
t208 = qJ(2) * t414 + t279 * t429 + t282 * t415;
t150 = qJDD(1) * t328 + t208;
t261 = t282 * t429;
t387 = t279 * t415;
t151 = qJDD(1) * t324 + t261 - t387;
t200 = qJDD(1) * t214 + qJDD(2);
t363 = qJD(3) * t383;
t388 = t280 * t416;
t361 = -t507 * t150 - t151 * t408 + t161 * t443 - t172 * t363 - t200 * t462 - t204 * t388;
t42 = t213 + t215 + t361;
t30 = -pkin(4) * t117 - t42;
t367 = -t285 * t117 + t289 * t222;
t66 = t126 * qJD(5) + t367;
t399 = -t289 * t117 - t285 * t222;
t67 = qJD(5) * t128 + t399;
t12 = pkin(5) * t67 + pkin(11) * t66 + t30;
t24 = -pkin(11) * t549 + t26;
t216 = t223 * qJ(4);
t58 = -t216 + t73;
t43 = t126 * pkin(5) - t128 * pkin(11) + t58;
t372 = t24 * t284 - t288 * t43;
t360 = t286 * t150 - t151 * t383 + t161 * t416 - t200 * t425 + t204 * t420 + t406 * t443;
t339 = qJDD(4) + t360;
t29 = -pkin(4) * t116 + t508 * t222 + t339;
t108 = -t151 * t280 + t476 * t200;
t326 = qJ(4) * t116 - qJD(4) * t537 + t108;
t37 = t508 * t117 + t326;
t441 = qJD(5) * t289;
t442 = qJD(5) * t285;
t354 = -t285 * t29 - t289 * t37 - t55 * t441 + t442 * t57;
t365 = t283 * t388;
t518 = qJD(1) * t365 + qJDD(1) * t427 + qJDD(5) + t299;
t5 = t518 * pkin(11) - t354;
t1 = -t372 * qJD(6) + t284 * t12 + t288 * t5;
t125 = qJD(6) + t126;
t535 = t372 * t125 + t1;
t461 = t281 * t282;
t230 = t280 * t461 - t409;
t235 = qJ(2) * t461 + t279 * t506;
t187 = t328 + t235;
t271 = t282 * t506;
t195 = t271 + t324;
t386 = t279 * t410;
t392 = t282 * t424;
t82 = -t286 * (qJD(2) * t386 + qJD(3) * t187) + qJD(2) * t392 + t195 * t363 + t214 * t388;
t78 = t230 * qJD(4) - t82;
t382 = pkin(5) * t289 + pkin(11) * t285;
t534 = qJD(5) * t382 - (-pkin(4) - t382) * t537 - t452;
t533 = -pkin(11) * t178 + t539;
t331 = -t285 * t476 - t289 * t425;
t389 = t280 * t422;
t448 = -qJD(5) * t331 + t544 * t285 + t289 * t389;
t212 = (-t286 * t386 + t392) * qJD(1);
t529 = t212 - t388;
t356 = t279 * t290 + t283 * t458;
t199 = t356 * t280 + t287 * t410;
t25 = -t285 * t57 + t289 * t55;
t528 = t25 * t549 - t354;
t102 = t138 * t289 + t285 * t527;
t10 = t24 * t288 + t284 * t43;
t2 = -qJD(6) * t10 + t288 * t12 - t284 * t5;
t526 = -t10 * t125 - t2;
t93 = t128 * t284 + t288 * t549;
t524 = t549 * t93;
t276 = t279 ^ 2;
t277 = t281 ^ 2;
t278 = t282 ^ 2;
t523 = (t276 + t278) * t277;
t237 = -t285 * t425 + t289 * t476;
t447 = -t237 * qJD(5) + t285 * t389 - t544 * t289;
t233 = t282 * t290 - t283 * t454;
t325 = t356 * t476;
t460 = t281 * t287;
t143 = t233 * t507 + (t280 * t460 - t325) * t286;
t343 = g(1) * t143 + g(2) * t139 + g(3) * t192;
t411 = t285 * t37 - t289 * t29;
t8 = -t26 * qJD(5) - t411;
t515 = t280 * (t222 * t286 + t223 * t416 - t422 * t537) - t476 * t116 - t212 * t223;
t514 = t280 * (t178 * t422 + t507 * t222 - t223 * t443) - t476 * t117 + t211 * t223;
t319 = t286 * t187 - t195 * t383 - t214 * t425;
t61 = t192 * pkin(4) + t508 * t230 + t319;
t502 = pkin(10) * t191;
t129 = -t195 * t280 + t476 * t214;
t189 = t191 * pkin(3);
t400 = qJ(4) * t192 - t189;
t85 = t129 - t400;
t70 = t85 + t502;
t493 = t285 * t61 + t289 * t70;
t180 = t517 * qJD(3) - t365;
t171 = t507 * t187;
t405 = t476 * t195;
t83 = qJD(2) * t323 + (t171 + (t214 * t280 + t405) * t286) * qJD(3);
t65 = -t180 * pkin(4) + t83;
t246 = t280 * qJD(2) * t465;
t352 = qJ(4) * t180 - qJD(4) * t192 + t246;
t74 = t508 * t181 + t352;
t16 = -qJD(5) * t493 - t285 * t74 + t289 * t65;
t512 = t30 - t343;
t509 = t537 ^ 2;
t505 = pkin(3) * t222;
t504 = pkin(10) * t138;
t142 = t233 * t286 - t287 * t393 + t507 * t325;
t503 = pkin(10) * t142;
t500 = g(1) * t287;
t498 = g(2) * t287;
t497 = g(2) * t290;
t436 = t284 * qJD(5);
t95 = t288 * t128 + t284 * t537 + t436;
t494 = t95 * t93;
t491 = t125 * t93;
t490 = t223 * t89;
t302 = qJD(6) * t549;
t439 = qJD(6) * t284;
t34 = t128 * t439 - t284 * t295 + (t302 + t66) * t288;
t489 = t284 * t34;
t64 = qJDD(6) + t67;
t488 = t284 * t64;
t487 = t284 * t93;
t486 = t284 * t95;
t404 = -t284 * t66 - t288 * t295;
t473 = qJD(6) * t95;
t35 = t404 + t473;
t485 = t288 * t35;
t484 = t288 * t64;
t483 = t288 * t93;
t482 = t288 * t95;
t481 = t289 * t34;
t480 = t289 * t35;
t479 = t95 * t125;
t251 = pkin(5) * t285 - pkin(11) * t289 + qJ(4);
t455 = t285 * t508;
t217 = t251 * t288 + t284 * t455;
t478 = qJD(6) * t217 + t534 * t284 - t533 * t288;
t218 = t251 * t284 - t288 * t455;
t477 = -qJD(6) * t218 + t533 * t284 + t534 * t288;
t475 = pkin(1) * qJDD(1);
t472 = t128 * t126;
t471 = t178 * t537;
t470 = t537 * t223;
t469 = t537 * t285;
t292 = qJD(1) ^ 2;
t456 = t283 * t292;
t453 = t289 * t537;
t206 = t237 * t288 + t284 * t462;
t450 = qJD(6) * t206 - t448 * t284 + t529 * t288;
t205 = -t237 * t284 + t288 * t462;
t449 = -qJD(6) * t205 + t529 * t284 + t448 * t288;
t446 = t290 * pkin(1) + qJ(2) * t460;
t438 = qJD(6) * t288;
t437 = qJD(6) * t289;
t433 = qJDD(1) * t277;
t97 = t214 * t462 + t286 * t405 + t171;
t419 = t285 * t440;
t417 = -t178 ^ 2 + t509;
t413 = -pkin(1) * t287 + qJ(2) * t459;
t412 = g(2) * t459 - g(3) * t283;
t403 = t549 * t95;
t132 = t138 * pkin(3);
t402 = qJ(4) * t139 - t132;
t134 = t142 * pkin(3);
t401 = qJ(4) * t143 - t134;
t396 = t125 * t288;
t394 = 0.2e1 * t281 * t431;
t86 = t230 * qJ(4) - t97;
t106 = -t142 * t289 + t199 * t285;
t381 = g(1) * t102 + g(2) * t106;
t380 = g(1) * t138 - g(2) * t142;
t379 = -g(1) * t139 + g(2) * t143;
t378 = g(1) * t290 + t498;
t109 = t288 * t178 + t284 * t469;
t377 = t285 * t436 + t109;
t110 = -t178 * t284 + t288 * t469;
t376 = -t288 * t442 - t110;
t375 = t10 * t288 + t284 * t372;
t374 = t10 * t284 - t288 * t372;
t33 = pkin(11) * t192 + t493;
t136 = -t191 * t289 - t230 * t285;
t137 = t191 * t285 - t230 * t289;
t75 = -pkin(4) * t191 - t86;
t48 = pkin(5) * t136 - pkin(11) * t137 + t75;
t18 = t284 * t48 + t288 * t33;
t17 = -t284 * t33 + t288 * t48;
t38 = -t285 * t70 + t289 * t61;
t45 = -t285 * t92 + t289 * t73;
t369 = -t116 * t192 - t180 * t537;
t368 = t117 * t191 + t178 * t181;
t101 = t137 * t288 + t192 * t284;
t100 = t137 * t284 - t192 * t288;
t366 = (-qJ(2) * t422 + t263) * t279 - t226 * t282;
t264 = -t281 * t475 + qJDD(2);
t359 = pkin(1) * t433 - t264 * t281;
t358 = -t125 * t438 - t488;
t357 = -t125 * t439 + t484;
t15 = t285 * t65 + t289 * t74 + t61 * t441 - t442 * t70;
t23 = pkin(5) * t549 - t25;
t353 = -pkin(11) * t64 + t125 * t23;
t347 = -g(1) * t460 + t412;
t346 = g(1) * t106 - g(2) * t102 + g(3) * t136;
t107 = t142 * t285 + t199 * t289;
t345 = -g(1) * t107 - g(2) * t105 - g(3) * t137;
t344 = g(1) * t142 + g(2) * t138 + g(3) * t191;
t341 = -t223 * t83 + t379;
t340 = -g(1) * t527 - g(2) * t199 + t537 * t83;
t6 = -t518 * pkin(5) - t8;
t338 = t346 - t6;
t336 = t116 * t230 + t180 * t223 - t192 * t222;
t335 = t117 * t230 + t181 * t223 + t191 * t222;
t332 = -t232 * pkin(2) + t527 * pkin(9) + t413;
t322 = t116 * t191 - t117 * t192 + t178 * t180 - t181 * t537;
t321 = pkin(11) * qJD(6) * t125 - t338;
t320 = -qJD(6) * t374 + t1 * t288 - t2 * t284;
t316 = -pkin(3) * t139 - qJ(4) * t138 + t332;
t315 = t344 - t360;
t314 = -t343 - t361;
t313 = t233 * pkin(2) + t199 * pkin(9) + t446;
t310 = pkin(4) * t527 - pkin(10) * t139 + t316;
t307 = t143 * pkin(3) + t142 * qJ(4) + t313;
t79 = pkin(3) * t178 + t355;
t306 = t537 * t79 + qJDD(4) - t315;
t56 = -t181 * pkin(4) - t78;
t301 = t199 * pkin(4) + t143 * pkin(10) + t307;
t300 = t212 * t178 - t211 * t537 + (t507 * t116 - t117 * t286 + (-t507 * t178 + t286 * t537) * qJD(3)) * t280;
t113 = t289 * t295;
t293 = -t547 * t285 + t113;
t234 = -qJ(2) * t465 + t271;
t207 = t261 + (-qJ(2) * qJDD(1) - t435) * t465;
t162 = t222 * t230;
t124 = -t223 * t284 - t288 * t453;
t123 = -t223 * t288 + t284 * t453;
t115 = pkin(3) * t537 + t474;
t99 = qJD(5) * t137 - t181 * t289;
t98 = -t181 * t285 - t191 * t441 - t230 * t442;
t90 = pkin(3) * t181 + t352;
t87 = t230 * pkin(3) + t319;
t84 = pkin(5) * t128 + pkin(11) * t126;
t81 = t216 - t89;
t80 = pkin(3) * t223 - t452;
t77 = t107 * t288 + t143 * t284;
t76 = -t107 * t284 + t143 * t288;
t53 = -qJD(6) * t100 - t180 * t284 - t288 * t98;
t52 = qJD(6) * t101 + t180 * t288 - t284 * t98;
t47 = pkin(3) * t117 + t326;
t44 = t339 + t505;
t40 = pkin(5) * t178 - t45;
t32 = -pkin(5) * t192 - t38;
t31 = t99 * pkin(5) + t98 * pkin(11) + t56;
t22 = t25 * t288 + t284 * t84;
t21 = -t25 * t284 + t288 * t84;
t14 = pkin(5) * t180 - t16;
t13 = -pkin(11) * t180 + t15;
t4 = -qJD(6) * t18 - t13 * t284 + t288 * t31;
t3 = qJD(6) * t17 + t13 * t288 + t284 * t31;
t7 = [0, 0, 0, 0, 0, qJDD(1), -t497 + t500, t378, 0, 0, t276 * t433, 0.2e1 * t277 * t279 * t432, t279 * t394, t278 * t433, t282 * t394, t283 ^ 2 * qJDD(1), g(1) * t232 - g(2) * t233 + t359 * t282 + (qJDD(1) * t234 + t207 - t387) * t283, -g(1) * t231 + (-t359 + t497) * t279 + (-t235 * qJDD(1) - t208 + (-t415 + t498) * t282) * t283, t435 * t523 + (-t207 * t279 + t208 * t282 + (-t234 * t279 + t235 * t282) * qJDD(1) - t378) * t281, t208 * t235 + t207 * t234 - g(1) * t413 - g(2) * t446 + (-t264 * pkin(1) - qJD(2) * t366) * t281, t369, t322, t336, t368, t335, t162, t108 * t191 + t117 * t129 + t122 * t181 + t178 * t246 + t222 * t319 + t230 * t360 - t341, t108 * t192 - t116 * t129 - t122 * t180 + t222 * t97 + t223 * t82 - t230 * t361 + t246 * t537 - t380, -t116 * t319 - t117 * t97 - t178 * t82 - t180 * t88 - t181 * t89 + t191 * t361 + t192 * t360 + t340, -g(1) * t332 - g(2) * t313 + t108 * t129 + t122 * t246 + t319 * t360 - t361 * t97 + t89 * t82 + t88 * t83, t162, -t336, -t335, t369, t322, t368, -t116 * t87 + t117 * t86 + t178 * t78 - t180 * t80 + t181 * t81 + t191 * t42 + t192 * t44 + t340, -t117 * t85 - t178 * t90 - t181 * t79 - t191 * t47 - t222 * t87 - t230 * t44 + t341, t116 * t85 + t180 * t79 - t192 * t47 + t222 * t86 + t223 * t78 + t230 * t42 - t537 * t90 + t380, -g(1) * t316 - g(2) * t307 + t42 * t86 + t44 * t87 + t47 * t85 + t81 * t78 + t79 * t90 + t80 * t83, -t128 * t98 - t137 * t66, t126 * t98 - t128 * t99 + t136 * t66 - t137 * t67, -t98 * qJD(5) - t128 * t180 + (-t98 * qJD(1) - t66) * t192 + t511 * t137, t126 * t99 + t136 * t67, -t99 * qJD(5) + t126 * t180 + (-t99 * qJD(1) - t67) * t192 - t511 * t136, -qJD(5) * t180 + ((-t180 + t305) * qJD(1) + t516) * t192, g(1) * t105 - g(2) * t107 + t56 * t126 + t30 * t136 - t16 * t549 - t25 * t180 + t8 * t192 + t295 * t38 + t58 * t99 + t75 * t67, t56 * t128 + t30 * t137 + t15 * t549 + t26 * t180 + t192 * t354 - t295 * t493 - t58 * t98 - t75 * t66 + t381, -t126 * t15 - t128 * t16 + t136 * t354 - t137 * t8 + t25 * t98 - t26 * t99 + t38 * t66 - t493 * t67 - t379, -g(1) * t310 - g(2) * t301 + t26 * t15 + t25 * t16 + t30 * t75 - t354 * t493 + t8 * t38 + t58 * t56, -t101 * t34 + t53 * t95, t100 * t34 - t101 * t35 - t52 * t95 - t53 * t93, t101 * t64 + t125 * t53 - t136 * t34 + t95 * t99, t100 * t35 + t52 * t93, -t100 * t64 - t125 * t52 - t136 * t35 - t93 * t99, t125 * t99 + t136 * t64, g(1) * t540 - g(2) * t77 + t6 * t100 + t4 * t125 + t2 * t136 + t14 * t93 + t17 * t64 + t23 * t52 + t32 * t35 - t372 * t99, -g(1) * t541 - g(2) * t76 - t1 * t136 - t10 * t99 + t6 * t101 - t3 * t125 + t14 * t95 - t18 * t64 + t23 * t53 - t32 * t34, -t1 * t100 - t10 * t52 - t101 * t2 + t17 * t34 - t18 * t35 - t3 * t93 + t372 * t53 - t4 * t95 - t381, t1 * t18 + t10 * t3 + t2 * t17 - t372 * t4 + t6 * t32 + t23 * t14 - g(1) * (-pkin(5) * t105 + pkin(11) * t102 + t310) - g(2) * (t107 * pkin(5) + t106 * pkin(11) + t301); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t279 * t456 - t432) * t281 (qJDD(1) * t279 + t282 * t456) * t281, -t292 * t523, qJDD(2) + (qJD(1) * t366 - t475 - t500) * t281 + t412, 0, 0, 0, 0, 0, 0, -t514, t515, t300, t108 * t476 - t88 * t211 - t89 * t212 + (-t122 * t422 - t507 * t360 - t286 * t361 + (t286 * t88 + t507 * t89) * qJD(3)) * t280 + t347, 0, 0, 0, 0, 0, 0, t300, t514, -t515, t47 * t476 - t80 * t211 + t81 * t212 + (-t79 * t422 - t507 * t44 - t286 * t42 + (t286 * t80 - t507 * t81) * qJD(3)) * t280 + t347, 0, 0, 0, 0, 0, 0, -t126 * t529 + t295 * t331 - t447 * t549 + t462 * t67, -t128 * t529 - t237 * t295 - t448 * t549 - t462 * t66, t126 * t448 - t128 * t447 - t237 * t67 + t331 * t66, -t58 * t212 + t8 * t331 - t354 * t237 + (t286 * t30 + t416 * t58) * t280 - t448 * t26 + t447 * t25 + t347, 0, 0, 0, 0, 0, 0, -t125 * t450 + t205 * t64 - t331 * t35 - t447 * t93, t125 * t449 - t206 * t64 + t331 * t34 - t447 * t95, t205 * t34 - t206 * t35 + t449 * t93 + t450 * t95, t1 * t206 - t10 * t449 + t2 * t205 - t23 * t447 - t331 * t6 + t372 * t450 + t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t417, -t545, -t471, -qJD(3) * t537 - t342 - t470, -t222, -t122 * t537 + t315 - t490, t122 * t178 + t223 * t88 - t314, 0, 0, -t222, t545, t117 + t470, t471, t417, -t471, pkin(3) * t116 - qJ(4) * t117 + (-t81 - t89) * t537 + (t80 + t452) * t178, t115 * t178 + t306 + t490 + 0.2e1 * t505, t115 * t537 - t178 * t79 + t223 * t452 - 0.2e1 * t213 - t215 + t314, -t44 * pkin(3) - g(1) * t401 - g(2) * t402 - g(3) * t400 - t42 * qJ(4) - t79 * t115 + t452 * t81 - t80 * t89, t285 * t398 - t289 * t66 (-t67 + t398) * t289 + (t66 - t397) * t285, t128 * t178 + t293, t285 * t67 - t289 * t397, -t126 * t178 + t543, -t549 * t178, qJ(4) * t67 - t113 * t508 + t25 * t178 + (t441 + t453) * t58 - (t419 - t45) * t549 + t451 * t126 + t512 * t285, -qJ(4) * t66 - t26 * t178 + t295 * t455 + (-t442 - t469) * t58 - t539 * t549 + t451 * t128 + t512 * t289, t126 * t46 + t128 * t45 + (-t537 * t26 - t508 * t66 - t8 + (t126 * t508 - t26) * qJD(5)) * t289 + (t537 * t25 + t508 * t67 + t354 + (-t128 * t508 + t25) * qJD(5)) * t285 + t344, t30 * qJ(4) - t26 * t46 - t25 * t45 - g(1) * (t401 - t503) - g(2) * (t402 - t504) - g(3) * (t400 - t502) + t451 * t58 - (-t354 * t285 + t8 * t289 + (-t25 * t285 + t26 * t289) * qJD(5)) * t508, -t288 * t481 + (-t284 * t437 + t376) * t95, t109 * t95 + t110 * t93 + (t483 + t486) * t442 + (t489 - t485 + (-t482 + t487) * qJD(6)) * t289, -t285 * t34 + t376 * t125 + (-t403 + t357) * t289, t284 * t480 + (t288 * t437 - t377) * t93, -t285 * t35 + t377 * t125 + (t358 + t524) * t289, -t125 * t289 * t549 + t285 * t64, -t23 * t109 + t217 * t64 - t40 * t93 + t477 * t125 + t344 * t284 + (t2 + (-t23 * t284 - t508 * t93) * qJD(5) - t343 * t288) * t285 + (t23 * t438 + t6 * t284 + t35 * t508 + t372 * t549) * t289, -t23 * t110 - t218 * t64 - t40 * t95 - t478 * t125 + t344 * t288 + (-t1 + (-t23 * t288 - t508 * t95) * qJD(5) + t343 * t284) * t285 + (t10 * t549 - t23 * t439 + t6 * t288 - t34 * t508) * t289, t10 * t109 - t110 * t372 + t217 * t34 - t218 * t35 - t477 * t95 - t478 * t93 + t374 * t442 + (-qJD(6) * t375 - t1 * t284 - t2 * t288 + t343) * t289, t1 * t218 + t2 * t217 + t6 * t289 * t508 - g(1) * (-t134 - t503) - g(2) * (-t132 - t504) - g(3) * (-t189 - t502) - t477 * t372 + (-t40 - t419) * t23 + t478 * t10 - t343 * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, -t222 - t471, -t223 ^ 2 - t509, -t223 * t81 + t306 + t505, 0, 0, 0, 0, 0, 0, t223 * t126 + t293, t223 * t128 + t543 (t66 + t397) * t289 + (-t67 - t398) * t285, t223 * t58 + (t8 - t546) * t289 + t528 * t285 - t344, 0, 0, 0, 0, 0, 0, -t480 + (-t289 * t436 - t123) * t125 + (t358 - t524) * t285, t481 + (-t288 * t441 + t124) * t125 + (-t403 - t357) * t285, t123 * t95 + t124 * t93 + (-t483 + t486) * t441 + (-t489 - t485 + (t482 + t487) * qJD(6)) * t285, -t10 * t124 + t123 * t372 + (qJD(5) * t375 - t6) * t289 + (-t23 * t549 + t320) * t285 - t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472, -t126 ^ 2 + t128 ^ 2, t178 * t441 + t223 * t442 - t367 - t397, -t472, -t178 * t442 + t223 * t441 - t398 - t399, t295, -t58 * t128 - t441 * t57 - t442 * t55 + t346 - t411 - t546, t58 * t126 - t345 - t528, 0, 0, t396 * t95 - t489 (-t34 - t491) * t288 + (-t35 - t479) * t284, t125 * t396 - t128 * t95 + t488, t125 * t487 - t485, -t125 ^ 2 * t284 + t128 * t93 + t484, -t125 * t128, -pkin(5) * t35 - t125 * t21 + t128 * t372 - t26 * t93 + t284 * t353 - t288 * t321, pkin(5) * t34 + t10 * t128 + t125 * t22 - t26 * t95 + t284 * t321 + t288 * t353, t21 * t95 + t22 * t93 + ((-t35 + t473) * pkin(11) + t535) * t288 + ((qJD(6) * t93 - t34) * pkin(11) + t526) * t284 + t345, -t10 * t22 + t372 * t21 - t23 * t26 + t338 * pkin(5) + (t320 + t345) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t93 ^ 2 + t95 ^ 2, -t34 + t491, -t494, -t128 * t438 + t284 * t302 - t404 + t479, t64, -g(1) * t76 + g(2) * t541 + g(3) * t100 - t23 * t95 - t526, g(1) * t77 + g(2) * t540 + g(3) * t101 + t23 * t93 - t535, 0, 0;];
tau_reg  = t7;
