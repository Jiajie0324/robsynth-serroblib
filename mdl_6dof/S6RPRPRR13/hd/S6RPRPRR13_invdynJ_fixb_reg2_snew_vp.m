% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RPRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 21:03
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RPRPRR13_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRPRR13_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:57:28
% EndTime: 2019-05-05 20:58:12
% DurationCPUTime: 30.84s
% Computational Cost: add. (123265->758), mult. (392317->1159), div. (0->0), fcn. (333287->14), ass. (0->453)
t332 = sin(pkin(7));
t335 = cos(pkin(7));
t331 = sin(pkin(12));
t339 = sin(qJ(3));
t333 = sin(pkin(6));
t462 = qJD(1) * t333;
t336 = cos(pkin(6));
t343 = cos(qJ(3));
t334 = cos(pkin(12));
t468 = t334 * t335;
t443 = t333 * t468;
t472 = t332 * t343;
t540 = -t336 * t472 - t343 * t443;
t289 = t331 * t339 * t462 + qJD(1) * t540;
t466 = t335 * t339;
t473 = t332 * t339;
t357 = t336 * t473 + (t331 * t343 + t334 * t466) * t333;
t355 = t357 * qJDD(1);
t471 = t333 * t334;
t445 = t332 * t471;
t461 = qJD(1) * t336;
t305 = qJD(1) * t445 - t335 * t461 - qJD(3);
t459 = qJD(3) - t305;
t352 = -t289 * t459 + t355;
t302 = t305 ^ 2;
t291 = qJD(1) * t357;
t523 = t291 ^ 2;
t529 = -t523 - t302;
t453 = qJDD(1) * t333;
t437 = t334 * t453;
t452 = qJDD(1) * t336;
t369 = t332 * t437 - t335 * t452 - qJDD(3);
t479 = t291 * t289;
t361 = t369 - t479;
t536 = t361 * t339;
t390 = t343 * t529 + t536;
t165 = t332 * t390 + t335 * t352;
t535 = t361 * t343;
t200 = t339 * t529 - t535;
t168 = t332 * t352 - t335 * t390;
t497 = t168 * t331;
t589 = -pkin(1) * t165 + qJ(2) * (-t200 * t334 + t497);
t438 = t331 * t453;
t376 = qJDD(1) * t540 + t339 * t438;
t216 = -t291 * t459 - t376;
t524 = t289 ^ 2;
t238 = -t302 - t524;
t362 = t369 + t479;
t537 = t343 * t362;
t394 = t238 * t339 - t537;
t159 = -t216 * t335 + t332 * t394;
t538 = t339 * t362;
t196 = t238 * t343 + t538;
t161 = t216 * t332 + t335 * t394;
t498 = t161 * t331;
t588 = -pkin(1) * t159 + qJ(2) * (t196 * t334 - t498);
t585 = pkin(1) * (t168 * t334 + t200 * t331) + pkin(2) * t168;
t584 = -pkin(1) * (t161 * t334 + t196 * t331) - pkin(2) * t161;
t581 = pkin(2) * t159;
t579 = pkin(2) * t165;
t458 = qJD(3) + t305;
t215 = -t291 * t458 - t376;
t273 = t524 - t302;
t389 = t273 * t339 - t535;
t575 = t336 * (t215 * t335 + t332 * t389) + (t331 * (t273 * t343 + t536) + t334 * (-t215 * t332 + t335 * t389)) * t333;
t572 = pkin(9) * t196;
t276 = -t523 + t302;
t388 = t276 * t343 - t538;
t569 = t332 * t388;
t568 = t335 * t388;
t565 = pkin(9) * t200;
t562 = t331 * (t276 * t339 + t537);
t556 = t215 * t339;
t555 = t215 * t343;
t492 = t216 * t339;
t491 = t216 * t343;
t550 = 2 * qJD(2);
t549 = -2 * qJD(4);
t527 = t523 - t524;
t548 = t332 * t527;
t528 = -t523 - t524;
t547 = t332 * t528;
t546 = t335 * t527;
t545 = t335 * t528;
t337 = sin(qJ(6));
t338 = sin(qJ(5));
t342 = cos(qJ(5));
t271 = t289 * t338 - t305 * t342;
t284 = qJD(5) + t291;
t341 = cos(qJ(6));
t232 = t271 * t337 - t341 * t284;
t234 = t271 * t341 + t284 * t337;
t190 = t234 * t232;
t258 = qJD(3) * t291 + t376;
t432 = -t342 * t258 - t338 * t369;
t205 = -qJD(5) * t271 - t432;
t204 = qJDD(6) - t205;
t534 = -t190 + t204;
t544 = t337 * t534;
t269 = -t342 * t289 - t305 * t338;
t224 = t271 * t269;
t259 = -qJD(3) * t289 + t355;
t255 = qJDD(5) + t259;
t533 = -t224 + t255;
t543 = t338 * t533;
t542 = t341 * t534;
t541 = t342 * t533;
t212 = pkin(5) * t269 - pkin(11) * t271;
t525 = t284 ^ 2;
t516 = pkin(9) * t332;
t521 = pkin(2) * t334;
t384 = -t331 * t516 - t521;
t304 = t384 * t462;
t474 = t332 * t336;
t380 = t443 + t474;
t345 = qJD(1) ^ 2;
t340 = sin(qJ(1));
t344 = cos(qJ(1));
t427 = g(1) * t344 + g(2) * t340;
t311 = -pkin(1) * t345 + qJ(2) * t453 - t427;
t421 = t462 * t550 + t311;
t426 = g(1) * t340 - g(2) * t344;
t503 = qJ(2) * t333;
t364 = -t345 * t503 - t426;
t360 = qJDD(1) * pkin(1) - t364;
t356 = t336 * t360;
t428 = g(3) * t471 - t334 * t356;
t464 = t336 * t345;
t210 = pkin(2) * t452 + (-t335 * t438 + t380 * t464) * pkin(9) - t428 + (-t304 * t462 - t421) * t331;
t354 = (-t333 * g(3) + t356) * t331;
t470 = t333 * t335;
t520 = pkin(2) * t336;
t211 = t334 * t311 + t354 + t380 * qJDD(1) * pkin(9) + (-(-pkin(9) * t331 * t470 + t520) * t461 + (t550 + t304) * t471) * qJD(1);
t327 = t331 ^ 2;
t329 = t334 ^ 2;
t531 = -t327 - t329;
t353 = (t331 * t520 + (-t334 * t474 + t470 * t531) * pkin(9)) * t333 * t345;
t379 = -pkin(1) + t384;
t434 = t336 * g(3) - qJDD(2);
t347 = (qJDD(1) * t379 + t364) * t333 + t353 - t434;
t346 = t332 * t347;
t465 = t335 * t343;
t142 = -t210 * t465 + t211 * t339 - t343 * t346;
t256 = pkin(3) * t289 - qJ(4) * t291;
t122 = pkin(3) * t369 - t302 * qJ(4) + t256 * t291 + qJDD(4) + t142;
t526 = pkin(10) * t362 + t122;
t278 = t289 * t305;
t532 = -t278 + t259;
t351 = pkin(4) * t532 + t526;
t272 = pkin(4) * t291 + pkin(10) * t305;
t220 = t278 + t259;
t187 = t210 * t332 - t335 * t347;
t530 = t187 - (-pkin(3) * t305 + t549) * t291;
t359 = -qJ(4) * t220 - t530;
t522 = pkin(3) + pkin(10);
t97 = -pkin(4) * t524 + t258 * t522 - t272 * t291 + t359;
t504 = t342 * t97;
t63 = t338 * t351 + t504;
t54 = -pkin(5) * t525 + t255 * pkin(11) - t269 * t212 + t63;
t387 = t258 * t338 - t342 * t369;
t206 = -qJD(5) * t269 + t387;
t237 = t284 * t269;
t181 = t206 - t237;
t463 = t343 * t211;
t117 = -t302 * pkin(3) - qJ(4) * t369 + t210 * t466 - t289 * t256 + t305 * t549 + t339 * t346 + t463;
t96 = -t258 * pkin(4) - pkin(10) * t524 - t305 * t272 + t117;
t67 = t96 - t181 * pkin(11) + (t271 * t284 - t205) * pkin(5);
t36 = t337 * t54 - t341 * t67;
t37 = t337 * t67 + t341 * t54;
t23 = t337 * t36 + t341 * t37;
t264 = qJD(6) + t269;
t433 = t206 * t337 - t341 * t255;
t134 = (qJD(6) - t264) * t234 + t433;
t228 = t232 ^ 2;
t229 = t234 ^ 2;
t263 = t264 ^ 2;
t267 = t269 ^ 2;
t268 = t271 ^ 2;
t519 = pkin(3) * t258;
t518 = pkin(3) * t339;
t517 = pkin(3) * t343;
t62 = t338 * t97 - t342 * t351;
t53 = -t255 * pkin(5) - pkin(11) * t525 + t212 * t271 + t62;
t15 = t23 * t342 + t338 * t53;
t14 = t23 * t338 - t342 * t53;
t22 = t337 * t37 - t341 * t36;
t420 = -t14 * t343 + t22 * t339;
t5 = -t15 * t332 + t335 * t420;
t515 = t331 * t5;
t514 = -pkin(5) * t53 + pkin(11) * t23;
t41 = t338 * t62 + t342 * t63;
t40 = t338 * t63 - t342 * t62;
t419 = t339 * t96 - t343 * t40;
t18 = -t332 * t41 + t335 * t419;
t513 = t18 * t331;
t164 = t228 + t229;
t400 = -t206 * t341 - t255 * t337;
t154 = -qJD(6) * t232 - t400;
t203 = t264 * t232;
t138 = t154 + t203;
t87 = -t134 * t341 + t138 * t337;
t64 = t164 * t342 + t338 * t87;
t85 = -t134 * t337 - t138 * t341;
t418 = t339 * t85 - t343 * t64;
t65 = -t164 * t338 + t342 * t87;
t30 = -t332 * t65 + t335 * t418;
t512 = t30 * t331;
t173 = -t263 - t228;
t109 = t173 * t337 + t542;
t110 = t173 * t341 - t544;
t455 = qJD(6) + t264;
t135 = -t234 * t455 - t433;
t72 = t110 * t338 + t135 * t342;
t416 = t109 * t339 - t343 * t72;
t73 = t110 * t342 - t135 * t338;
t39 = -t332 * t73 + t335 * t416;
t511 = t331 * t39;
t188 = -t229 - t263;
t149 = t190 + t204;
t500 = t149 * t337;
t114 = t188 * t341 - t500;
t499 = t149 * t341;
t115 = -t188 * t337 - t499;
t139 = t232 * t455 + t400;
t74 = t115 * t338 + t139 * t342;
t415 = t114 * t339 - t343 * t74;
t75 = t115 * t342 - t139 * t338;
t43 = -t332 * t75 + t335 * t415;
t510 = t331 * t43;
t182 = t206 + t237;
t366 = (-qJD(5) + t284) * t271 - t432;
t127 = t182 * t338 + t342 * t366;
t125 = -t182 * t342 + t338 * t366;
t198 = -t267 - t268;
t408 = -t125 * t343 + t198 * t339;
t69 = -t127 * t332 + t335 * t408;
t509 = t331 * t69;
t207 = -t525 - t267;
t152 = t207 * t342 - t543;
t151 = t207 * t338 + t541;
t457 = qJD(5) + t284;
t178 = t271 * t457 + t432;
t405 = -t151 * t343 + t178 * t339;
t91 = -t152 * t332 + t335 * t405;
t508 = t331 * t91;
t209 = -t268 - t525;
t194 = t224 + t255;
t493 = t194 * t342;
t158 = -t209 * t338 - t493;
t494 = t194 * t338;
t157 = t209 * t342 - t494;
t183 = -t269 * t457 + t387;
t404 = -t157 * t343 + t183 * t339;
t93 = -t158 * t332 + t335 * t404;
t507 = t331 * t93;
t50 = t337 * t53;
t506 = t338 * t96;
t51 = t341 * t53;
t505 = t342 * t96;
t217 = -t289 * t458 + t355;
t397 = -t217 * t343 + t556;
t146 = t335 * t397 - t547;
t502 = t146 * t331;
t398 = -t343 * t532 + t556;
t147 = t335 * t398 - t547;
t501 = t147 * t331;
t496 = t187 * t339;
t495 = t187 * t343;
t484 = t264 * t337;
t483 = t264 * t341;
t482 = t284 * t338;
t481 = t284 * t342;
t480 = t289 * t343;
t478 = t291 * t339;
t328 = t333 ^ 2;
t477 = t327 * t328;
t476 = t328 * t329;
t467 = t334 * t345;
t319 = t328 * t331 * t467;
t312 = t319 + t452;
t475 = t331 * t312;
t313 = -t319 + t452;
t469 = t334 * t313;
t454 = qJDD(1) * t328;
t451 = pkin(5) * t139 + pkin(11) * t115 + t50;
t450 = pkin(5) * t135 + pkin(11) * t110 - t51;
t449 = t338 * t190;
t448 = t342 * t190;
t447 = t339 * t224;
t446 = t343 * t224;
t442 = t333 * t464;
t440 = pkin(5) * t342 + pkin(4);
t436 = pkin(5) * t338 + qJ(4);
t435 = pkin(5) * t164 + pkin(11) * t87 + t23;
t424 = -qJ(4) * t339 - t517;
t423 = t495 + t572;
t422 = -t496 - t565;
t189 = t229 - t228;
t137 = t154 - t203;
t86 = t135 * t341 - t137 * t337;
t70 = t189 * t342 - t338 * t86;
t84 = t135 * t337 + t137 * t341;
t417 = t339 * t84 + t343 * t70;
t202 = -t229 + t263;
t118 = t202 * t341 + t544;
t120 = -t202 * t337 + t542;
t78 = -t120 * t338 + t138 * t342;
t414 = t118 * t339 + t343 * t78;
t201 = t228 - t263;
t119 = t201 * t337 + t499;
t121 = t201 * t341 - t500;
t79 = -t121 * t338 - t134 * t342;
t413 = t119 * t339 + t343 * t79;
t153 = -qJD(6) * t234 - t433;
t128 = t153 * t341 + t232 * t484;
t129 = -t153 * t337 + t232 * t483;
t98 = -t129 * t338 - t448;
t412 = t128 * t339 + t343 * t98;
t130 = t154 * t337 + t234 * t483;
t131 = t154 * t341 - t234 * t484;
t99 = -t131 * t338 + t448;
t411 = t130 * t339 + t343 * t99;
t410 = t117 * t339 - t122 * t343;
t124 = t178 * t338 - t181 * t342;
t223 = t268 - t267;
t409 = t124 * t343 + t223 * t339;
t156 = (-t232 * t341 + t234 * t337) * t264;
t140 = -t156 * t338 + t204 * t342;
t155 = (-t232 * t337 - t234 * t341) * t264;
t407 = t140 * t343 + t155 * t339;
t293 = t333 * t360 + t434;
t143 = t463 + (t335 * t210 + t332 * (-pkin(2) * t437 - t438 * t516 - t293)) * t339 + t353 * t473;
t406 = t142 * t343 - t143 * t339;
t94 = t142 * t339 + t143 * t343;
t236 = -t268 + t525;
t169 = -t236 * t342 - t543;
t403 = t169 * t343 + t182 * t339;
t235 = t267 - t525;
t170 = -t235 * t338 - t493;
t402 = t170 * t343 + t339 * t366;
t191 = (t269 * t338 + t271 * t342) * t284;
t401 = t191 * t343 + t255 * t339;
t399 = t220 * t343 + t492;
t396 = t343 * t352 + t492;
t265 = t331 * t421 + t428;
t266 = t334 * t421 + t354;
t386 = t331 * t265 + t334 * t266;
t385 = t289 * t339 + t291 * t343;
t174 = -t205 * t342 - t269 * t482;
t383 = t174 * t343 - t447;
t176 = -t206 * t338 - t271 * t481;
t382 = t176 * t343 + t447;
t2 = -t522 * t15 + (pkin(11) * t338 + t440) * t22;
t3 = pkin(4) * t14 - qJ(4) * t15 + t514;
t6 = t14 * t339 + t22 * t343;
t378 = pkin(9) * t6 + t2 * t343 + t3 * t339;
t46 = t339 * t64 + t343 * t85;
t16 = -pkin(11) * t85 - t22;
t8 = -t16 * t338 + t440 * t85 - t522 * t65;
t9 = pkin(4) * t64 - qJ(4) * t65 + t435;
t377 = pkin(9) * t46 + t339 * t9 + t343 * t8;
t32 = -pkin(5) * t109 + t36;
t44 = -pkin(11) * t109 + t50;
t11 = pkin(4) * t109 - t32 * t342 - t338 * t44 - t522 * t73;
t25 = pkin(4) * t72 - qJ(4) * t73 + t450;
t49 = t109 * t343 + t339 * t72;
t375 = pkin(9) * t49 + t11 * t343 + t25 * t339;
t33 = -pkin(5) * t114 + t37;
t45 = -pkin(11) * t114 + t51;
t13 = pkin(4) * t114 - t33 * t342 - t338 * t45 - t522 * t75;
t26 = pkin(4) * t74 - qJ(4) * t75 + t451;
t55 = t114 * t343 + t339 * t74;
t374 = pkin(9) * t55 + t13 * t343 + t26 * t339;
t20 = pkin(4) * t96 - t41 * t522;
t24 = pkin(4) * t40 - qJ(4) * t41;
t31 = t339 * t40 + t343 * t96;
t373 = pkin(9) * t31 + t20 * t343 + t24 * t339;
t104 = t125 * t339 + t198 * t343;
t28 = pkin(4) * t198 - t127 * t522 - t41;
t82 = pkin(4) * t125 - qJ(4) * t127;
t372 = pkin(9) * t104 + t28 * t343 + t339 * t82;
t112 = t151 * t339 + t178 * t343;
t47 = pkin(4) * t151 - qJ(4) * t152 - t62;
t57 = pkin(4) * t178 - t152 * t522 + t505;
t371 = pkin(9) * t112 + t339 * t47 + t343 * t57;
t116 = t157 * t339 + t183 * t343;
t48 = -qJ(4) * t158 - t504 - t338 * t526 + (-t338 * t532 + t157) * pkin(4);
t59 = pkin(4) * t183 - t158 * t522 - t506;
t370 = pkin(9) * t116 + t339 * t48 + t343 * t59;
t105 = -pkin(3) * t528 + t117;
t111 = -qJ(4) * t528 + t122;
t184 = t217 * t339 + t555;
t368 = pkin(9) * t184 + t105 * t343 + t111 * t339;
t185 = t339 * t532 + t555;
t367 = pkin(9) * t185 + t94;
t106 = -t519 + (t352 + t220) * qJ(4) + t530;
t365 = t106 * t339 + t352 * t517 + t565;
t107 = (-t216 + t258) * pkin(3) + t359;
t363 = -qJ(4) * t492 + t107 * t343 - t572;
t350 = t336 * (t259 * t473 + (t289 * t335 - t305 * t472) * t291) + (t331 * (t343 * t259 + t305 * t478) + t334 * (t259 * t466 + (-t289 * t332 - t305 * t465) * t291)) * t333;
t349 = t336 * (-t258 * t472 + (-t291 * t335 - t305 * t473) * t289) + (t331 * (t258 * t339 - t305 * t480) + t334 * (-t258 * t465 + (t291 * t332 - t305 * t466) * t289)) * t333;
t348 = ((t331 * (-t478 + t480) + t385 * t468) * t333 + t385 * t474) * t305 + (-t335 * t336 + t445) * t369;
t330 = t336 ^ 2;
t321 = t334 * t442;
t320 = t331 * t442;
t316 = (-t330 - t476) * t345;
t315 = (-t330 - t477) * t345;
t314 = t531 * t345 * t328;
t310 = -t320 + t437;
t309 = t320 + t437;
t308 = -t321 + t438;
t307 = t321 + t438;
t192 = (-t269 * t342 + t271 * t338) * t284;
t186 = -pkin(3) * t217 + qJ(4) * t215;
t177 = t206 * t342 - t271 * t482;
t175 = -t205 * t338 + t269 * t481;
t172 = t235 * t342 - t494;
t171 = -t236 * t338 + t541;
t145 = t332 * t398 + t545;
t144 = t332 * t397 + t545;
t141 = t156 * t342 + t204 * t338;
t126 = -t178 * t342 - t181 * t338;
t123 = t359 + t519;
t103 = pkin(3) * t362 - qJ(4) * t238 + t122;
t102 = -pkin(3) * t529 - qJ(4) * t361 + t117;
t101 = t131 * t342 + t449;
t100 = t129 * t342 - t449;
t92 = t158 * t335 + t332 * t404;
t90 = t152 * t335 + t332 * t405;
t89 = t187 * t332 - t335 * t406;
t88 = -t187 * t335 - t332 * t406;
t81 = t121 * t342 - t134 * t338;
t80 = t120 * t342 + t138 * t338;
t77 = -pkin(3) * t122 + qJ(4) * t117;
t76 = t117 * t343 + t122 * t339;
t71 = t189 * t338 + t342 * t86;
t68 = t127 * t335 + t332 * t408;
t61 = -t123 * t332 + t335 * t410;
t60 = t123 * t335 + t332 * t410;
t58 = qJ(4) * t183 - t157 * t522 + t505;
t56 = qJ(4) * t178 - t151 * t522 + t506;
t42 = t332 * t415 + t335 * t75;
t38 = t332 * t416 + t335 * t73;
t29 = t332 * t418 + t335 * t65;
t27 = qJ(4) * t198 - t125 * t522 - t40;
t19 = qJ(4) * t96 - t40 * t522;
t17 = t332 * t419 + t335 * t41;
t12 = qJ(4) * t114 - t33 * t338 + t342 * t45 - t522 * t74;
t10 = qJ(4) * t109 - t32 * t338 + t342 * t44 - t522 * t72;
t7 = t16 * t342 + t436 * t85 - t522 * t64;
t4 = t15 * t335 + t332 * t420;
t1 = -t522 * t14 + (-pkin(11) * t342 + t436) * t22;
t21 = [0, 0, 0, 0, 0, qJDD(1), t426, t427, 0, 0, t327 * t454, (t307 * t334 + t310 * t331) * t333 + (t327 - t329) * t328 * t464, t336 * t308 + (t475 + (t330 - t477) * t467) * t333, t329 * t454, t336 * t309 + (t469 + t331 * (-t330 + t476) * t345) * t333, t330 * qJDD(1), (-t265 + pkin(1) * (t312 * t334 + t316 * t331)) * t336 + (t334 * t293 + pkin(1) * t310 + qJ(2) * (t316 * t334 - t475)) * t333, (-t266 + pkin(1) * (-t313 * t331 + t315 * t334)) * t336 + (-t331 * t293 - pkin(1) * t307 + qJ(2) * (-t315 * t331 - t469)) * t333, pkin(1) * (-t308 * t334 + t309 * t331) * t336 + (-pkin(1) * t314 + qJ(2) * (t308 * t331 + t309 * t334) + t386) * t333, pkin(1) * (t293 * t333 + (-t265 * t334 + t266 * t331) * t336) + t386 * t503, t350, t336 * (t332 * t399 + t546) + (t331 * (-t220 * t339 + t491) + t334 * (t335 * t399 - t548)) * t333, t336 * (t335 * t532 + t569) + (-t562 + t334 * (-t332 * t532 + t568)) * t333, t349, t575, t348, (-t142 * t335 + t423 * t332 - t584) * t336 + (t331 * (-t496 + (-t159 * t332 - t161 * t335) * pkin(9)) + t334 * (t142 * t332 + t335 * t423 - t581) + t588) * t333, (-t143 * t335 + t422 * t332 - t585) * t336 + (t331 * (-t495 + (-t165 * t332 + t168 * t335) * pkin(9)) + t334 * (t143 * t332 + t335 * t422 - t579) + t589) * t333, (pkin(2) * t147 + pkin(1) * (t147 * t334 + t185 * t331) + t367 * t332) * t336 + (t331 * t406 + qJ(2) * (t185 * t334 - t501) + t379 * t145 + (-pkin(9) * t501 + t334 * t367) * t335) * t333, (t94 * t516 + pkin(2) * t89 + pkin(1) * (t331 * t94 + t334 * t89)) * t336 + (qJ(2) * (-t331 * t89 + t334 * t94) + (-pkin(1) - t521) * t88 + (t331 * (-t332 * t88 - t335 * t89) + t94 * t468) * pkin(9)) * t333, t348, t336 * (-t217 * t335 - t569) + (t562 + t334 * (t217 * t332 - t568)) * t333, -t575, t350, t336 * (t332 * t396 + t546) + (t331 * (-t339 * t352 + t491) + t334 * (t335 * t396 - t548)) * t333, t349, (pkin(2) * t146 + t186 * t335 + pkin(1) * (t146 * t334 + t184 * t331) + t368 * t332) * t336 + (t331 * (-t105 * t339 + t111 * t343 - t144 * t516) + t334 * (-pkin(2) * t144 - t186 * t332) - pkin(1) * t144 + qJ(2) * (t184 * t334 - t502) + (-pkin(9) * t502 + t334 * t368) * t335) * t333, (t103 * t335 + t363 * t332 + t584) * t336 + (t331 * (-qJ(4) * t491 - t107 * t339 + t159 * t516) + t334 * (-t103 * t332 + t581) + (pkin(9) * t498 + t334 * t363) * t335 - t588) * t333, (t102 * t335 + t365 * t332 + t585) * t336 + (t331 * (t106 * t343 + t165 * t516 - t352 * t518) + t334 * (-t102 * t332 + t579) + (-pkin(9) * t497 + t334 * t365) * t335 - t589) * t333, (pkin(2) * t61 + t335 * t77 + pkin(1) * (t331 * t76 + t334 * t61) + (pkin(9) * t76 + t123 * t424) * t332) * t336 + (t334 * (-pkin(2) * t60 - t332 * t77) - pkin(1) * t60 + qJ(2) * (-t331 * t61 + t334 * t76) + (t331 * (-t332 * t60 - t335 * t61) + t76 * t468) * pkin(9) + (t331 * (-qJ(4) * t343 + t518) + t424 * t468) * t123) * t333, t336 * (t177 * t335 + t332 * t382) + (t331 * (-t176 * t339 + t446) + t334 * (-t177 * t332 + t335 * t382)) * t333, t336 * (t335 * t126 + t332 * t409) + (t331 * (-t124 * t339 + t223 * t343) + t334 * (-t126 * t332 + t335 * t409)) * t333, t336 * (t335 * t171 + t332 * t403) + (t331 * (-t169 * t339 + t182 * t343) + t334 * (-t171 * t332 + t335 * t403)) * t333, t336 * (t175 * t335 + t332 * t383) + (t331 * (-t174 * t339 - t446) + t334 * (-t175 * t332 + t335 * t383)) * t333, t336 * (t335 * t172 + t332 * t402) + (t331 * (-t170 * t339 + t343 * t366) + t334 * (-t172 * t332 + t335 * t402)) * t333, t336 * (t192 * t335 + t332 * t401) + (t331 * (-t191 * t339 + t255 * t343) + t334 * (-t192 * t332 + t335 * t401)) * t333, (pkin(2) * t91 + t335 * t56 + pkin(1) * (t112 * t331 + t334 * t91) + t371 * t332) * t336 + (t331 * (-t339 * t57 + t343 * t47 - t516 * t90) + t334 * (-pkin(2) * t90 - t332 * t56) - pkin(1) * t90 + qJ(2) * (t112 * t334 - t508) + (-pkin(9) * t508 + t334 * t371) * t335) * t333, (pkin(2) * t93 + t335 * t58 + pkin(1) * (t116 * t331 + t334 * t93) + t370 * t332) * t336 + (t331 * (-t339 * t59 + t343 * t48 - t516 * t92) + t334 * (-pkin(2) * t92 - t332 * t58) - pkin(1) * t92 + qJ(2) * (t116 * t334 - t507) + (-pkin(9) * t507 + t334 * t370) * t335) * t333, (pkin(2) * t69 + t27 * t335 + pkin(1) * (t104 * t331 + t334 * t69) + t372 * t332) * t336 + (t331 * (-t28 * t339 + t343 * t82 - t516 * t68) + t334 * (-pkin(2) * t68 - t27 * t332) - pkin(1) * t68 + qJ(2) * (t104 * t334 - t509) + (-pkin(9) * t509 + t334 * t372) * t335) * t333, (pkin(2) * t18 + t19 * t335 + pkin(1) * (t18 * t334 + t31 * t331) + t373 * t332) * t336 + (t331 * (-t17 * t516 - t20 * t339 + t24 * t343) + t334 * (-pkin(2) * t17 - t19 * t332) - pkin(1) * t17 + qJ(2) * (t31 * t334 - t513) + (-pkin(9) * t513 + t334 * t373) * t335) * t333, t336 * (t335 * t101 + t332 * t411) + (t331 * (t130 * t343 - t339 * t99) + t334 * (-t101 * t332 + t335 * t411)) * t333, t336 * (t332 * t417 + t335 * t71) + (t331 * (-t339 * t70 + t343 * t84) + t334 * (-t332 * t71 + t335 * t417)) * t333, t336 * (t332 * t414 + t335 * t80) + (t331 * (t118 * t343 - t339 * t78) + t334 * (-t332 * t80 + t335 * t414)) * t333, t336 * (t335 * t100 + t332 * t412) + (t331 * (t128 * t343 - t339 * t98) + t334 * (-t100 * t332 + t335 * t412)) * t333, t336 * (t332 * t413 + t335 * t81) + (t331 * (t119 * t343 - t339 * t79) + t334 * (-t332 * t81 + t335 * t413)) * t333, t336 * (t335 * t141 + t332 * t407) + (t331 * (-t140 * t339 + t155 * t343) + t334 * (-t141 * t332 + t335 * t407)) * t333, (pkin(2) * t39 + t10 * t335 + pkin(1) * (t331 * t49 + t334 * t39) + t375 * t332) * t336 + (t331 * (-t11 * t339 + t25 * t343 - t38 * t516) + t334 * (-pkin(2) * t38 - t10 * t332) - pkin(1) * t38 + qJ(2) * (t334 * t49 - t511) + (-pkin(9) * t511 + t334 * t375) * t335) * t333, (pkin(2) * t43 + t12 * t335 + pkin(1) * (t331 * t55 + t334 * t43) + t374 * t332) * t336 + (t331 * (-t13 * t339 + t26 * t343 - t42 * t516) + t334 * (-pkin(2) * t42 - t12 * t332) - pkin(1) * t42 + qJ(2) * (t334 * t55 - t510) + (-pkin(9) * t510 + t334 * t374) * t335) * t333, (pkin(2) * t30 + t335 * t7 + pkin(1) * (t30 * t334 + t331 * t46) + t377 * t332) * t336 + (t331 * (-t29 * t516 - t339 * t8 + t343 * t9) + t334 * (-pkin(2) * t29 - t332 * t7) - pkin(1) * t29 + qJ(2) * (t334 * t46 - t512) + (-pkin(9) * t512 + t334 * t377) * t335) * t333, (pkin(2) * t5 + t1 * t335 + pkin(1) * (t331 * t6 + t334 * t5) + t378 * t332) * t336 + (t331 * (-t2 * t339 + t3 * t343 - t4 * t516) + t334 * (-pkin(2) * t4 - t1 * t332) - pkin(1) * t4 + qJ(2) * (t334 * t6 - t515) + (-pkin(9) * t515 + t334 * t378) * t335) * t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310, t307, t314, -t293, 0, 0, 0, 0, 0, 0, t159, t165, t145, t88, 0, 0, 0, 0, 0, 0, t144, -t159, -t165, t60, 0, 0, 0, 0, 0, 0, t90, t92, t68, t17, 0, 0, 0, 0, 0, 0, t38, t42, t29, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, t527, t532, -t479, t215, -t369, -t142, -t143, 0, 0, -t369, -t217, -t215, t479, t527, -t479, t186, t103, t102, t77, t177, t126, t171, t175, t172, t192, t56, t58, t27, t19, t101, t71, t80, t100, t81, t141, t10, t12, t7, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t362, t529, t122, 0, 0, 0, 0, 0, 0, t151, t157, t125, t40, 0, 0, 0, 0, 0, 0, t72, t74, t64, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, t223, t182, -t224, t366, t255, -t62, -t63, 0, 0, t130, t84, t118, t128, t119, t155, t450, t451, t435, t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t189, t138, -t190, -t134, t204, -t36, -t37, 0, 0;];
tauJ_reg  = t21;
