% Calculate vector of inverse dynamics joint torques for
% S6RRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRRP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:52:35
% EndTime: 2019-03-09 11:55:38
% DurationCPUTime: 164.16s
% Computational Cost: add. (71483->1759), mult. (78590->2216), div. (0->0), fcn. (73750->10), ass. (0->804)
t1526 = Icges(6,1) + Icges(7,1);
t1556 = Icges(7,4) + Icges(6,5);
t1555 = Icges(6,6) - Icges(7,6);
t1573 = Icges(3,3) + Icges(4,3);
t822 = qJ(2) + pkin(10);
t797 = sin(t822);
t798 = cos(t822);
t828 = sin(qJ(2));
t831 = cos(qJ(2));
t1540 = Icges(3,5) * t831 + Icges(4,5) * t798 - Icges(3,6) * t828 - Icges(4,6) * t797;
t825 = qJ(4) + qJ(5);
t804 = sin(t825);
t1572 = (Icges(6,4) - Icges(7,5)) * t804;
t1525 = Icges(6,2) + Icges(7,3);
t1571 = Icges(7,2) + Icges(6,3);
t805 = cos(t825);
t1570 = -t1555 * t804 + t1556 * t805;
t1569 = t1526 * t805 - t1572;
t832 = cos(qJ(1));
t1568 = t1573 * t832;
t829 = sin(qJ(1));
t1238 = t829 * t831;
t1242 = t828 * t829;
t1248 = t798 * t829;
t1253 = t797 * t829;
t1541 = -Icges(3,5) * t1238 - Icges(4,5) * t1248 + Icges(3,6) * t1242 + Icges(4,6) * t1253 + t1568;
t1560 = t1540 * t832 + t1573 * t829;
t1311 = Icges(6,4) * t805;
t1009 = -Icges(6,2) * t804 + t1311;
t1567 = t1009 * t797 - t1555 * t798;
t1298 = Icges(4,6) * t832;
t538 = Icges(4,4) * t1248 - Icges(4,2) * t1253 - t1298;
t1299 = Icges(3,6) * t832;
t608 = Icges(3,4) * t1238 - Icges(3,2) * t1242 - t1299;
t1566 = t538 * t797 + t608 * t828;
t1317 = Icges(4,4) * t797;
t671 = Icges(4,1) * t798 - t1317;
t541 = Icges(4,5) * t829 + t671 * t832;
t1318 = Icges(3,4) * t828;
t726 = Icges(3,1) * t831 - t1318;
t611 = Icges(3,5) * t829 + t726 * t832;
t1565 = -t611 * t1238 - t541 * t1248;
t1256 = t797 * t804;
t1255 = t797 * t805;
t703 = Icges(7,5) * t1255;
t1542 = Icges(7,3) * t1256 - t1567 + t703;
t1303 = Icges(7,5) * t805;
t1005 = Icges(7,3) * t804 + t1303;
t1450 = (t1005 - t1009) * t798 - t1555 * t797;
t1564 = t1570 * t798 + t1571 * t797;
t1520 = -t1556 * t798 + t1569 * t797;
t1449 = t1556 * t797 + t1569 * t798;
t1563 = (t1525 * t805 + t1572) * t797;
t1562 = (-t1555 * t805 - t1556 * t804) * t797;
t1561 = Icges(3,5) * t828 + Icges(4,5) * t797 + Icges(3,6) * t831 + Icges(4,6) * t798;
t1308 = Icges(4,5) * t832;
t738 = Icges(4,4) * t1253;
t540 = Icges(4,1) * t1248 - t1308 - t738;
t1309 = Icges(3,5) * t832;
t774 = Icges(3,4) * t1242;
t610 = Icges(3,1) * t1238 - t1309 - t774;
t1535 = -t540 * t798 - t610 * t831 + t1566;
t1252 = t797 * t832;
t1522 = t1570 * t797 - t1571 * t798;
t1233 = t832 * t804;
t1240 = t829 * t805;
t599 = t1233 * t798 - t1240;
t1244 = t805 * t832;
t1245 = t804 * t829;
t600 = t798 * t1244 + t1245;
t1469 = t1252 * t1522 + t1520 * t600 + t1542 * t599;
t305 = Icges(6,5) * t600 - Icges(6,6) * t599 + Icges(6,3) * t1252;
t308 = Icges(7,4) * t600 + Icges(7,2) * t1252 + Icges(7,6) * t599;
t1523 = t305 + t308;
t1305 = Icges(7,5) * t599;
t314 = Icges(7,1) * t600 + Icges(7,4) * t1252 + t1305;
t567 = Icges(6,4) * t599;
t317 = Icges(6,1) * t600 + Icges(6,5) * t1252 - t567;
t1543 = t314 + t317;
t564 = Icges(7,5) * t600;
t302 = Icges(7,6) * t1252 + Icges(7,3) * t599 + t564;
t1313 = Icges(6,4) * t600;
t311 = -Icges(6,2) * t599 + Icges(6,6) * t1252 + t1313;
t1545 = t302 - t311;
t1476 = t1252 * t1523 + t1543 * t600 + t1545 * t599;
t597 = t1245 * t798 + t1244;
t598 = t1240 * t798 - t1233;
t303 = Icges(6,5) * t598 - Icges(6,6) * t597 + Icges(6,3) * t1253;
t306 = Icges(7,4) * t598 + Icges(7,2) * t1253 + Icges(7,6) * t597;
t1457 = t303 + t306;
t563 = Icges(7,5) * t598;
t301 = -Icges(7,6) * t1253 - Icges(7,3) * t597 - t563;
t566 = Icges(6,4) * t598;
t309 = -Icges(6,2) * t597 + Icges(6,6) * t1253 + t566;
t1458 = t301 + t309;
t562 = Icges(7,5) * t597;
t312 = Icges(7,1) * t598 + Icges(7,4) * t1253 + t562;
t565 = Icges(6,4) * t597;
t316 = -Icges(6,1) * t598 - Icges(6,5) * t1253 + t565;
t1544 = t312 - t316;
t1477 = t1252 * t1457 - t1458 * t599 + t1544 * t600;
t1154 = qJD(5) * t797;
t1155 = qJD(4) * t832;
t803 = qJD(2) * t829;
t661 = t797 * t1155 + t803;
t532 = t1154 * t832 + t661;
t1156 = qJD(4) * t829;
t1159 = qJD(2) * t832;
t662 = -t797 * t1156 + t1159;
t533 = -t1154 * t829 + t662;
t821 = qJD(4) + qJD(5);
t1055 = t798 * t821;
t652 = qJD(1) - t1055;
t1487 = t1469 * t652 + t1476 * t532 - t1477 * t533;
t1470 = t1253 * t1522 + t1520 * t598 + t1542 * t597;
t1478 = t1253 * t1523 + t1543 * t598 + t1545 * t597;
t1479 = t1253 * t1457 - t1458 * t597 + t1544 * t598;
t1488 = t1470 * t652 + t1478 * t532 - t1479 * t533;
t668 = Icges(4,2) * t798 + t1317;
t779 = Icges(4,4) * t798;
t670 = Icges(4,1) * t797 + t779;
t723 = Icges(3,2) * t831 + t1318;
t812 = Icges(3,4) * t831;
t725 = Icges(3,1) * t828 + t812;
t1538 = t668 * t797 - t670 * t798 + t723 * t828 - t725 * t831;
t1559 = t1560 * t832 + t1565;
t1235 = t831 * t832;
t1247 = t798 * t832;
t1558 = -t610 * t1235 - t540 * t1247 + t1541 * t829;
t1425 = t611 * t1235 + t541 * t1247 + t1560 * t829;
t1011 = -Icges(4,2) * t797 + t779;
t539 = Icges(4,6) * t829 + t1011 * t832;
t1012 = -Icges(3,2) * t828 + t812;
t609 = Icges(3,6) * t829 + t1012 * t832;
t1557 = t539 * t797 + t609 * t828;
t1103 = t797 * t1159;
t254 = qJD(1) * t597 + t1103 * t804 - t600 * t821;
t1165 = qJD(1) * t798;
t1056 = -t821 + t1165;
t955 = t804 * t652;
t255 = t832 * t955 + (-t1056 * t829 - t1103) * t805;
t1101 = t798 * t1159;
t1164 = qJD(1) * t829;
t1109 = t797 * t1164;
t903 = t1101 - t1109;
t150 = Icges(7,5) * t255 + Icges(7,6) * t903 - Icges(7,3) * t254;
t156 = Icges(6,4) * t255 + Icges(6,2) * t254 + Icges(6,6) * t903;
t1554 = t150 - t156;
t1104 = t797 * t803;
t1163 = qJD(1) * t832;
t256 = -t804 * t1104 - t821 * t1233 - t805 * t1164 + (t1163 * t804 + t1240 * t821) * t798;
t257 = t829 * t955 + (t1056 * t832 - t1104) * t805;
t1102 = t798 * t803;
t904 = t797 * t1163 + t1102;
t151 = Icges(7,5) * t257 + Icges(7,6) * t904 + Icges(7,3) * t256;
t157 = Icges(6,4) * t257 - Icges(6,2) * t256 + Icges(6,6) * t904;
t1553 = t151 - t157;
t152 = Icges(6,5) * t255 + Icges(6,6) * t254 + Icges(6,3) * t903;
t154 = Icges(7,4) * t255 + Icges(7,2) * t903 - Icges(7,6) * t254;
t1552 = t152 + t154;
t153 = Icges(6,5) * t257 - Icges(6,6) * t256 + Icges(6,3) * t904;
t155 = Icges(7,4) * t257 + Icges(7,2) * t904 + Icges(7,6) * t256;
t1551 = t153 + t155;
t158 = Icges(7,1) * t255 + Icges(7,4) * t903 - Icges(7,5) * t254;
t160 = Icges(6,1) * t255 + Icges(6,4) * t254 + Icges(6,5) * t903;
t1550 = t158 + t160;
t159 = Icges(7,1) * t257 + Icges(7,4) * t904 + Icges(7,5) * t256;
t161 = Icges(6,1) * t257 - Icges(6,4) * t256 + Icges(6,5) * t904;
t1549 = t159 + t161;
t1467 = -t1535 * t829 + t1541 * t832;
t1466 = -t1242 * t609 - t1253 * t539 - t1559;
t1241 = t828 * t832;
t1465 = -t1241 * t608 - t1252 * t538 - t1558;
t1464 = -t1241 * t609 - t1252 * t539 + t1425;
t1548 = qJD(2) * t1450 + t1563 * t821;
t1547 = qJD(2) * t1564 + t1562 * t821;
t557 = (-Icges(6,1) * t804 - t1311) * t797;
t665 = t797 * t821;
t1546 = (-Icges(7,1) * t804 + t1303) * t665 + t557 * t821 + t1449 * qJD(2);
t1460 = t538 * t798 + t540 * t797 + t608 * t831 + t610 * t828;
t1459 = t539 * t798 + t541 * t797 + t609 * t831 + t611 * t828;
t1539 = t1561 * qJD(2);
t1537 = -t668 * t798 - t670 * t797 - t723 * t831 - t725 * t828;
t1536 = t541 * t798 + t611 * t831 - t1557;
t1534 = t1520 * t805 + t1542 * t804;
t1424 = t1561 * t832;
t1423 = t1561 * t829;
t1508 = rSges(7,1) + pkin(5);
t1527 = rSges(7,3) + qJ(6);
t1404 = -t1508 * t598 - t1527 * t597;
t1222 = rSges(7,2) * t1253 - t1404;
t560 = qJD(6) * t599;
t1533 = -t1222 * t652 + t560;
t826 = -qJ(3) - pkin(7);
t790 = t832 * t826;
t1462 = -t1538 * t829 - t1424;
t1461 = -t1538 * t832 + t1423;
t1532 = t1560 * qJD(1);
t830 = cos(qJ(4));
t1236 = t830 * t832;
t827 = sin(qJ(4));
t1243 = t827 * t829;
t642 = t1243 * t798 + t1236;
t1232 = t832 * t827;
t1239 = t829 * t830;
t643 = t1239 * t798 - t1232;
t1030 = t643 * rSges(5,1) - t642 * rSges(5,2);
t367 = -rSges(5,3) * t1253 - t1030;
t1338 = rSges(5,1) * t830;
t1029 = -rSges(5,2) * t827 + t1338;
t527 = -rSges(5,3) * t798 + t1029 * t797;
t1157 = qJD(4) * t798;
t755 = qJD(1) - t1157;
t1531 = t755 * t367 - t662 * t527;
t622 = Icges(5,4) * t643;
t357 = -Icges(5,2) * t642 + Icges(5,6) * t1253 + t622;
t621 = Icges(5,4) * t642;
t361 = -Icges(5,1) * t643 - Icges(5,5) * t1253 + t621;
t1498 = t357 * t827 + t361 * t830;
t354 = Icges(5,5) * t643 - Icges(5,6) * t642 + Icges(5,3) * t1253;
t138 = -t1498 * t797 - t354 * t798;
t1530 = t832 ^ 2;
t1494 = t1252 * t1551 + t1457 * t903 + t1458 * t254 + t1544 * t255 + t1549 * t600 + t1553 * t599;
t1493 = t1252 * t1552 + t1523 * t903 + t1543 * t255 - t1545 * t254 + t1550 * t600 + t1554 * t599;
t1492 = t1253 * t1551 + t1457 * t904 - t1458 * t256 + t1544 * t257 + t1549 * t598 + t1553 * t597;
t1491 = t1253 * t1552 + t1523 * t904 + t1543 * t257 + t1545 * t256 + t1550 * t598 + t1554 * t597;
t1485 = t1252 * t1547 + t1520 * t255 + t1522 * t903 - t1542 * t254 + t1546 * t600 + t1548 * t599;
t1529 = t1253 * t1547 + t1520 * t257 + t1522 * t904 + t1542 * t256 + t1546 * t598 + t1548 * t597;
t1528 = (qJD(2) * t1534 - t1547) * t798 + ((t1542 * t821 + t1546) * t805 + (-t1520 * t821 + t1548) * t804 + t1522 * qJD(2)) * t797;
t978 = -t301 * t804 + t312 * t805;
t122 = -t306 * t798 + t797 * t978;
t976 = -t309 * t804 - t316 * t805;
t124 = -t303 * t798 + t797 * t976;
t1475 = t122 + t124;
t977 = t302 * t804 + t314 * t805;
t123 = -t308 * t798 + t797 * t977;
t975 = -t311 * t804 + t317 * t805;
t125 = -t305 * t798 + t797 * t975;
t1524 = t123 + t125;
t1468 = -t1522 * t798 + t1534 * t797;
t1521 = -t1005 * t797 + t1567;
t647 = t1011 * qJD(2);
t648 = t671 * qJD(2);
t684 = t1012 * qJD(2);
t685 = t726 * qJD(2);
t1519 = qJD(1) * t1561 + t1537 * qJD(2) - t647 * t797 + t648 * t798 - t684 * t828 + t685 * t831;
t914 = qJD(2) * t668;
t347 = -t832 * t914 + (-t1011 * t829 + t1298) * qJD(1);
t916 = qJD(2) * t670;
t349 = -t832 * t916 + (-t671 * t829 + t1308) * qJD(1);
t915 = qJD(2) * t723;
t426 = -t832 * t915 + (-t1012 * t829 + t1299) * qJD(1);
t917 = qJD(2) * t725;
t428 = -t832 * t917 + (-t726 * t829 + t1309) * qJD(1);
t1518 = -qJD(2) * t1459 - t347 * t797 + t349 * t798 - t426 * t828 + t428 * t831 + t1532;
t348 = qJD(1) * t539 - t829 * t914;
t350 = qJD(1) * t541 - t829 * t916;
t427 = qJD(1) * t609 - t829 * t915;
t429 = qJD(1) * t611 - t829 * t917;
t1517 = qJD(1) * t1541 + qJD(2) * t1460 + t348 * t797 - t350 * t798 + t427 * t828 - t429 * t831;
t1516 = -t1562 * t652 + (-t1555 * t598 - t1556 * t597) * t533 + (t1555 * t600 + t1556 * t599) * t532;
t1515 = t1464 * t829 - t1465 * t832;
t1514 = t1466 * t829 - t1467 * t832;
t1513 = (-t1534 + t1564) * t652 + (t1522 * t829 + t976 + t978) * t533 + (-t1522 * t832 - t975 - t977) * t532;
t1512 = qJD(1) * t1538 + qJD(2) * t1540;
t1511 = qJD(1) * t1535 - t1539 * t829 + t1532;
t1510 = -t1539 * t832 + (-t1540 * t829 - t1536 + t1568) * qJD(1);
t1191 = -t598 * rSges(6,1) + t597 * rSges(6,2);
t320 = rSges(6,3) * t1253 - t1191;
t1337 = rSges(6,1) * t805;
t1027 = -rSges(6,2) * t804 + t1337;
t501 = -rSges(6,3) * t798 + t1027 * t797;
t1509 = -t320 * t652 - t533 * t501;
t1149 = qJD(1) * qJD(3);
t1350 = pkin(2) * t828;
t1150 = qJD(1) * qJD(2);
t696 = -qJDD(2) * t832 + t829 * t1150;
t1114 = qJDD(3) * t829 + t832 * t1149 + t696 * t1350;
t818 = t831 * pkin(2);
t793 = t818 + pkin(1);
t1173 = -t829 * t793 - t790;
t819 = t832 * pkin(7);
t752 = pkin(1) * t829 - t819;
t534 = t752 + t1173;
t1199 = t534 - t752;
t543 = rSges(4,1) * t1248 - rSges(4,2) * t1253 - t832 * rSges(4,3);
t1117 = -t543 + t1199;
t1234 = t831 * qJD(2) ^ 2;
t1143 = pkin(2) * t1234;
t1145 = pkin(2) * t1242;
t1171 = qJD(2) * t1145 + qJD(3) * t832;
t1111 = t826 * t1164 + t1171;
t1342 = pkin(1) - t793;
t817 = t829 * pkin(7);
t416 = (-t1342 * t832 - t817) * qJD(1) - t1111;
t753 = t832 * pkin(1) + t817;
t692 = t753 * qJD(1);
t1215 = -t416 - t692;
t783 = t798 * rSges(4,1);
t1400 = -rSges(4,2) * t797 + t783;
t673 = rSges(4,1) * t797 + rSges(4,2) * t798;
t627 = t673 * t829;
t813 = t829 * rSges(4,3);
t352 = -qJD(2) * t627 + (t1400 * t832 + t813) * qJD(1);
t649 = t1400 * qJD(2);
t109 = t673 * t696 + (-qJD(2) * t649 - t1143) * t832 + t1117 * qJDD(1) + (-t352 + t1215) * qJD(1) + t1114;
t1507 = t109 - g(1);
t1506 = t1461 * qJD(1);
t1177 = t1527 * t1255;
t558 = qJD(6) * t597;
t1505 = -t1508 * t257 - t1527 * t256 - t558;
t1024 = rSges(7,1) * t805 + rSges(7,3) * t804;
t1432 = (-pkin(5) * t805 - qJ(6) * t804 - t1024) * t797;
t781 = t797 * rSges(5,3);
t528 = t1029 * t798 + t781;
t1080 = t1159 / 0.2e1;
t1503 = t798 * t1080 - t1109 / 0.2e1;
t1082 = t803 / 0.2e1;
t1085 = t1163 / 0.2e1;
t1502 = t798 * t1082 + t797 * t1085;
t1501 = t1462 * qJD(1);
t128 = t1253 * t354 - t357 * t642 - t361 * t643;
t644 = -t798 * t1232 + t1239;
t645 = t1236 * t798 + t1243;
t356 = Icges(5,5) * t645 + Icges(5,6) * t644 + Icges(5,3) * t1252;
t1316 = Icges(5,4) * t645;
t359 = Icges(5,2) * t644 + Icges(5,6) * t1252 + t1316;
t623 = Icges(5,4) * t644;
t362 = Icges(5,1) * t645 + Icges(5,5) * t1252 + t623;
t129 = t356 * t1253 - t642 * t359 + t643 * t362;
t1007 = Icges(5,5) * t830 - Icges(5,6) * t827;
t519 = -Icges(5,3) * t798 + t1007 * t797;
t1314 = Icges(5,4) * t830;
t1010 = -Icges(5,2) * t827 + t1314;
t521 = -Icges(5,6) * t798 + t1010 * t797;
t1315 = Icges(5,4) * t827;
t1015 = Icges(5,1) * t830 - t1315;
t523 = -Icges(5,5) * t798 + t1015 * t797;
t196 = t1253 * t519 - t521 * t642 + t523 * t643;
t75 = -t128 * t662 + t129 * t661 + t196 * t755;
t130 = t354 * t1252 + t644 * t357 - t361 * t645;
t131 = t356 * t1252 + t644 * t359 + t645 * t362;
t197 = t1252 * t519 + t521 * t644 + t523 * t645;
t76 = -t130 * t662 + t131 * t661 + t197 * t755;
t1207 = -rSges(7,2) * t798 - t1432;
t1216 = rSges(7,2) * t1252 + t1508 * t600 + t1527 * t599;
t1405 = rSges(7,2) * t1101 + t1508 * t255 - t1527 * t254 + t560;
t1229 = -rSges(7,2) * t1109 + t1405;
t1160 = qJD(2) * t798;
t1153 = qJD(6) * t804;
t697 = t797 * t1153;
t782 = t797 * rSges(7,2);
t906 = t1160 * t804 + t665 * t805;
t1463 = t697 + t906 * qJ(6) + (t1160 * t805 - t665 * t804) * pkin(5) + (-rSges(7,1) * t804 + rSges(7,3) * t805) * t665 + (t1024 * t798 + t782) * qJD(2);
t1148 = qJD(2) * qJD(4);
t1428 = qJDD(4) * t797 + t798 * t1148;
t695 = qJDD(2) * t829 + t832 * t1150;
t1044 = t1428 * t832 + t695;
t227 = qJD(5) * t1101 + (qJDD(5) * t832 - t1164 * t821) * t797 + t1044;
t1146 = t797 * t1148 + qJDD(1);
t477 = qJD(2) * t1154 + (-qJDD(4) - qJDD(5)) * t798 + t1146;
t1141 = pkin(4) * t1232;
t833 = -pkin(9) - pkin(8);
t1251 = t797 * t833;
t1334 = pkin(4) * qJD(4);
t1427 = qJD(1) * t1251 + t830 * t1334;
t1113 = qJD(1) * t1141 + t1427 * t829;
t1132 = t827 * t1334;
t792 = pkin(4) * t830 + pkin(3);
t1341 = pkin(3) - t792;
t720 = pkin(8) * t1101;
t194 = -t720 + (pkin(8) * t1164 + t1159 * t1341) * t797 + ((-qJD(2) * t833 - t1132) * t832 + t1341 * t1164) * t798 + t1113;
t759 = pkin(3) * t1247;
t638 = pkin(8) * t1252 + t759;
t1231 = t832 * t833;
t777 = pkin(4) * t1243;
t947 = -t1231 * t797 + t792 * t1247 + t777;
t344 = t947 - t638;
t1089 = t1341 * t798;
t1340 = pkin(8) + t833;
t1408 = t1340 * t797;
t353 = -t797 * t1132 + (-t1089 - t1408) * qJD(2);
t1158 = qJD(4) * t797;
t1088 = qJD(1) * t1158;
t411 = -t1088 * t829 + t1044;
t1407 = t1341 * t797;
t478 = t1340 * t798 - t1407;
t641 = -qJDD(4) * t798 + t1146;
t905 = -t1164 * t798 - t1103;
t417 = pkin(3) * t905 - pkin(8) * t1109 + t720;
t784 = t797 * pkin(8);
t785 = t798 * pkin(3);
t1411 = t785 + t784;
t650 = t1411 * qJD(2);
t680 = pkin(3) * t797 - pkin(8) * t798;
t796 = pkin(7) * t1163;
t1182 = qJD(1) * (-pkin(1) * t1164 + t796) + qJDD(1) * t753;
t1100 = t828 * t1159;
t801 = qJD(3) * t829;
t950 = -pkin(2) * t1100 + t801;
t415 = -t796 + (t1342 * t829 - t790) * qJD(1) + t950;
t1060 = t832 * t793 - t826 * t829;
t535 = t1060 - t753;
t848 = qJD(1) * t415 + qJDD(1) * t535 + t829 * t1149 + (-t1234 * t829 - t695 * t828) * pkin(2) - qJDD(3) * t832 + t1182;
t842 = qJD(1) * t417 + qJDD(1) * t638 - t650 * t803 - t695 * t680 + t848;
t838 = t755 * t194 + t641 * t344 - t661 * t353 - t411 * t478 + t842;
t20 = qJD(6) * t256 + qJDD(6) * t597 - t1207 * t227 + t1216 * t477 + t1229 * t652 - t1463 * t532 + t838;
t1497 = -g(2) + t20;
t412 = t832 * t1088 + t1428 * t829 + t696;
t228 = qJD(5) * t904 + qJDD(5) * t1253 + t412;
t1496 = t1469 * t477 + t1476 * t227 + t1477 * t228 + t1485 * t652 + t1493 * t532 - t1494 * t533;
t1495 = t1470 * t477 + t1478 * t227 + t1479 * t228 + t1491 * t532 - t1492 * t533 + t1529 * t652;
t39 = (qJD(2) * t978 - t155) * t798 + (qJD(2) * t306 + (-t301 * t821 + t159) * t805 + (-t312 * t821 + t151) * t804) * t797;
t41 = (qJD(2) * t976 - t153) * t798 + (qJD(2) * t303 + (-t309 * t821 + t161) * t805 + (t316 * t821 - t157) * t804) * t797;
t1490 = t39 + t41;
t40 = (qJD(2) * t977 - t154) * t798 + (qJD(2) * t308 + (t302 * t821 + t158) * t805 + (-t314 * t821 + t150) * t804) * t797;
t42 = (qJD(2) * t975 - t152) * t798 + (qJD(2) * t305 + (-t311 * t821 + t160) * t805 + (-t317 * t821 - t156) * t804) * t797;
t1489 = t40 + t42;
t1486 = t1468 * t652 - t1475 * t533 + t1524 * t532;
t1481 = qJD(2) * t1514 + t1501;
t1480 = qJD(2) * t1515 + t1506;
t1474 = t1512 * t829 + t1519 * t832;
t1473 = -t1512 * t832 + t1519 * t829;
t1472 = qJD(2) * t1535 - t348 * t798 - t350 * t797 - t427 * t831 - t429 * t828;
t1471 = qJD(2) * t1536 + t347 * t798 + t349 * t797 + t426 * t831 + t428 * t828;
t1228 = -rSges(7,2) * t904 + t1505;
t1455 = -t1508 * t597 + t1527 * t598;
t945 = -t1508 * t599 + t1527 * t600;
t1454 = t1521 * t829;
t1453 = t1521 * t832;
t1452 = t1520 * t829;
t1451 = t1520 * t832;
t1448 = t1256 * t1508 - t1177;
t1447 = (-t1457 * t533 + t1522 * t652 + t1523 * t532) * t798 + t1513 * t797;
t1382 = (-t668 * t832 + t541) * t829 - (-Icges(4,2) * t1248 + t540 - t738) * t832;
t1383 = (-t723 * t832 + t611) * t829 - (-Icges(3,2) * t1238 + t610 - t774) * t832;
t890 = t608 * t832 - t609 * t829;
t891 = t538 * t832 - t539 * t829;
t1446 = -t1382 * t797 - t1383 * t828 + t891 * t798 + t890 * t831;
t1445 = (-t1520 + t1563) * t652 + (-t1525 * t598 + t1544 + t562 - t565) * t533 + (t1525 * t600 - t1305 - t1543 + t567) * t532;
t1444 = (-Icges(7,1) * t1256 + t1542 + t557 + t703) * t652 + (t1526 * t597 + t1458 - t563 + t566) * t533 + (-t1526 * t599 - t1313 + t1545 + t564) * t532;
t1174 = t725 + t1012;
t1175 = -t723 + t726;
t1183 = t670 + t1011;
t1184 = -t668 + t671;
t1443 = (-t1174 * t828 + t1175 * t831 - t1183 * t797 + t1184 * t798) * qJD(1);
t1442 = t1516 * t797;
t1441 = t1475 * t829 + t1524 * t832;
t1440 = t1475 * t832 - t1524 * t829;
t1439 = t1476 * t832 + t1477 * t829;
t1438 = -t1476 * t829 + t1477 * t832;
t1434 = t1478 * t832 + t1479 * t829;
t1433 = -t1478 * t829 + t1479 * t832;
t1431 = t1511 * t1530 + (t1518 * t829 + (-t1510 + t1517) * t832) * t829;
t1430 = t1517 * t1530 + (t1510 * t829 + (-t1511 + t1518) * t832) * t829;
t1429 = t1541 + t1557;
t1426 = t1540 * qJD(1);
t1422 = t1468 * t477 + t1528 * t652;
t1196 = t535 + t753;
t889 = qJD(1) * (t638 + t1196) - t680 * t803 - t1171;
t865 = t344 * t755 - t661 * t478 + t889;
t1420 = t1207 * t532 - t1216 * t652 - t558 - t865;
t1205 = t535 * t1159 - t534 * t803;
t636 = t1411 * t829;
t1047 = t638 * t1159 + t636 * t803 + t1205;
t675 = t792 * t1248;
t1039 = -t675 + t1141;
t343 = (t785 + t1408) * t829 + t1039;
t899 = -t661 * t343 + t344 * t662 + t1047;
t74 = t1216 * t533 + t1222 * t532 + t697 + t899;
t1421 = t1420 * t652 - t533 * t74;
t1096 = t798 * t1156;
t1349 = pkin(4) * t827;
t1018 = -t1096 * t1349 - t833 * t1102 - t792 * t1104 - t1427 * t832;
t719 = pkin(3) * t1104;
t195 = -pkin(8) * t1102 + t719 + (t777 + (-t1089 - t784) * t832) * qJD(1) + t1018;
t1121 = t415 * t1159 + t416 * t803 - t695 * t534;
t1197 = t535 + t638;
t418 = pkin(8) * t904 + qJD(1) * t759 - t719;
t869 = t417 * t1159 - t1197 * t696 + t418 * t803 + t695 * t636 + t1121;
t846 = t662 * t194 + t661 * t195 - t411 * t343 - t412 * t344 + t869;
t19 = qJD(6) * t906 + qJDD(6) * t1256 - t1216 * t228 + t1222 * t227 - t1228 * t532 + t1229 * t533 + t846;
t1416 = t19 * t1216;
t907 = -t673 - t1350;
t1415 = t832 * t907;
t1414 = t755 * t343 - t662 * t478;
t710 = qJD(1) * t752;
t1413 = qJD(1) * t534 - t710;
t1412 = t1400 + t818;
t1410 = -qJD(6) * t600 + t1207 * t904 - t1228 * t798 + t1253 * t1463 - t1448 * t533 + t1455 * t652;
t1161 = qJD(2) * t797;
t1254 = t797 * t827;
t1142 = pkin(4) * t1254;
t624 = t642 * pkin(4);
t1406 = -t1142 * t662 + t353 * t1253 + t798 * t195 + t478 * t904 - t624 * t755;
t1028 = rSges(6,1) * t257 - rSges(6,2) * t256;
t165 = rSges(6,3) * t904 + t1028;
t1026 = -rSges(6,1) * t804 - rSges(6,2) * t805;
t570 = t1026 * t797;
t780 = t797 * rSges(6,3);
t282 = t821 * t570 + (t1027 * t798 + t780) * qJD(2);
t394 = -t597 * rSges(6,1) - t598 * rSges(6,2);
t1399 = t282 * t1253 + t798 * t165 + t394 * t652 + t501 * t904 + t533 * t570;
t1054 = -qJD(4) + t1165;
t953 = t830 * t755;
t340 = t829 * t953 + (-t1054 * t832 + t1104) * t827;
t952 = t755 * t827;
t341 = t1054 * t1236 + (-t1161 * t830 + t952) * t829;
t1031 = rSges(5,1) * t341 + rSges(5,2) * t340;
t191 = rSges(5,3) * t904 + t1031;
t626 = (-rSges(5,1) * t827 - rSges(5,2) * t830) * t797;
t342 = qJD(2) * t528 + qJD(4) * t626;
t1112 = -t636 + t1199;
t843 = t696 * t680 + (-t418 + t1215) * qJD(1) + t1112 * qJDD(1) + (-qJD(2) * t650 - t1143) * t832 + t1114;
t66 = -t191 * t755 - t342 * t662 + t367 * t641 + t412 * t527 + t843;
t1384 = t1054 * t829 + t1103;
t338 = t1384 * t827 + t832 * t953;
t339 = -t1384 * t830 + t832 * t952;
t1123 = t339 * rSges(5,1) + t338 * rSges(5,2) + rSges(5,3) * t1101;
t190 = -rSges(5,3) * t1109 + t1123;
t368 = t645 * rSges(5,1) + t644 * rSges(5,2) + rSges(5,3) * t1252;
t67 = t190 * t755 - t342 * t661 + t368 * t641 - t411 * t527 + t842;
t1395 = t66 * t829 - t67 * t832;
t1346 = g(2) * t829;
t1394 = g(1) * t832 + t1346;
t1393 = -qJD(1) * t636 + t1413;
t1348 = g(1) * t829;
t1392 = -g(2) * t832 + t1348;
t520 = Icges(5,3) * t797 + t1007 * t798;
t966 = -t521 * t827 + t523 * t830;
t972 = -t359 * t827 + t362 * t830;
t1379 = t661 * (-t519 * t832 - t972) - t662 * (-t519 * t829 + t1498) + t755 * (t520 - t966);
t615 = (-Icges(5,2) * t830 - t1315) * t797;
t1378 = (t523 + t615) * t755 + (-Icges(5,2) * t645 + t362 + t623) * t661 - (-Icges(5,2) * t643 - t361 - t621) * t662;
t1377 = t227 / 0.2e1;
t1376 = t228 / 0.2e1;
t1375 = t411 / 0.2e1;
t1374 = t412 / 0.2e1;
t1372 = -t532 / 0.2e1;
t1371 = t532 / 0.2e1;
t1370 = -t533 / 0.2e1;
t1369 = t533 / 0.2e1;
t1366 = -t652 / 0.2e1;
t1365 = t652 / 0.2e1;
t1364 = -t661 / 0.2e1;
t1363 = t661 / 0.2e1;
t1362 = -t662 / 0.2e1;
t1361 = t662 / 0.2e1;
t1359 = t695 / 0.2e1;
t1358 = t696 / 0.2e1;
t1357 = -t755 / 0.2e1;
t1356 = t755 / 0.2e1;
t1355 = -t798 / 0.2e1;
t1354 = t829 / 0.2e1;
t1353 = -t832 / 0.2e1;
t1351 = -rSges(5,3) - pkin(8);
t1345 = g(3) * t797;
t1339 = rSges(3,1) * t831;
t1127 = t255 * rSges(6,1) + t254 * rSges(6,2) + rSges(6,3) * t1101;
t163 = -rSges(6,3) * t1109 + t1127;
t324 = t600 * rSges(6,1) - t599 * rSges(6,2) + rSges(6,3) * t1252;
t22 = t163 * t533 + t165 * t532 + t227 * t320 - t228 * t324 + t846;
t1333 = t22 * t324;
t1332 = t39 * t533;
t1331 = t40 * t532;
t1330 = t41 * t533;
t1329 = t42 * t532;
t183 = Icges(5,5) * t341 + Icges(5,6) * t340 + Icges(5,3) * t904;
t185 = Icges(5,4) * t341 + Icges(5,2) * t340 + Icges(5,6) * t904;
t187 = Icges(5,1) * t341 + Icges(5,4) * t340 + Icges(5,5) * t904;
t48 = (-qJD(2) * t1498 - t183) * t798 + (qJD(2) * t354 - t185 * t827 + t187 * t830 + (-t357 * t830 + t361 * t827) * qJD(4)) * t797;
t1328 = t48 * t662;
t182 = Icges(5,5) * t339 + Icges(5,6) * t338 + Icges(5,3) * t903;
t184 = Icges(5,4) * t339 + Icges(5,2) * t338 + Icges(5,6) * t903;
t186 = Icges(5,1) * t339 + Icges(5,4) * t338 + Icges(5,5) * t903;
t49 = (qJD(2) * t972 - t182) * t798 + (qJD(2) * t356 - t184 * t827 + t186 * t830 + (-t359 * t830 - t362 * t827) * qJD(4)) * t797;
t1327 = t49 * t661;
t814 = t829 * rSges(3,3);
t203 = -t519 * t798 + t797 * t966;
t612 = (-Icges(5,5) * t827 - Icges(5,6) * t830) * t797;
t335 = qJD(2) * t520 + qJD(4) * t612;
t522 = Icges(5,6) * t797 + t1010 * t798;
t336 = qJD(2) * t522 + qJD(4) * t615;
t524 = Icges(5,5) * t797 + t1015 * t798;
t618 = (-Icges(5,1) * t827 - t1314) * t797;
t337 = qJD(2) * t524 + qJD(4) * t618;
t94 = (qJD(2) * t966 - t335) * t798 + (qJD(2) * t519 - t336 * t827 + t337 * t830 + (-t521 * t830 - t523 * t827) * qJD(4)) * t797;
t1321 = t203 * t641 + t94 * t755;
t1285 = t122 * t228;
t1284 = t123 * t227;
t1283 = t124 * t228;
t1282 = t125 * t227;
t133 = t368 * t755 - t527 * t661 + t889;
t1279 = t133 * t829;
t1278 = t138 * t412;
t139 = -t356 * t798 + t797 * t972;
t1277 = t139 * t411;
t901 = qJD(2) * t1415 + t801;
t206 = qJD(1) * t1117 + t901;
t1273 = t206 * t673;
t732 = rSges(3,1) * t828 + rSges(3,2) * t831;
t1105 = t732 * t1159;
t1170 = rSges(3,2) * t1242 + t832 * rSges(3,3);
t633 = rSges(3,1) * t1238 - t1170;
t1186 = -t633 - t752;
t378 = qJD(1) * t1186 - t1105;
t1271 = t378 * t829;
t1270 = t378 * t832;
t634 = rSges(3,1) * t1235 - rSges(3,2) * t1241 + t814;
t515 = t634 + t753;
t379 = qJD(1) * t515 - t732 * t803;
t664 = t732 * t832;
t1269 = t379 * t664;
t704 = t798 * t792;
t1250 = t798 * t804;
t1249 = t798 * t805;
t1246 = t798 * t833;
t1237 = t829 * t833;
t1230 = t320 * t1101 + t165 * t1252;
t1227 = -t343 * t1101 + t195 * t1252;
t1225 = t1222 * t1252;
t1224 = t501 * t1109 + t324 * t1161;
t462 = t478 * t1164;
t1223 = t344 * t1161 + t797 * t462;
t1220 = -t324 - t344;
t1214 = t478 * t1253 - t798 * t343;
t1213 = t501 * t1253 + t798 * t320;
t742 = rSges(7,2) * t1248;
t1212 = t1432 * t829 + t742;
t1210 = -t478 - t501;
t625 = t644 * pkin(4);
t1204 = t661 * t1142 + t755 * t625;
t1203 = -t829 * t534 + t832 * t535;
t544 = rSges(4,1) * t1247 - rSges(4,2) * t1252 + t813;
t1198 = -t535 - t544;
t756 = pkin(8) * t1248;
t635 = -pkin(3) * t1253 + t756;
t758 = pkin(8) * t1247;
t637 = -pkin(3) * t1252 + t758;
t1193 = t637 * t1159 + t635 * t803;
t1192 = -t1249 * t1508 - t1250 * t1527 - t782;
t399 = -t599 * rSges(6,1) - t600 * rSges(6,2);
t1106 = t828 * t1164;
t767 = pkin(2) * t1106;
t1185 = t680 * t1164 + t767;
t1137 = rSges(6,2) * t1256;
t1181 = rSges(6,3) * t1248 + t829 * t1137;
t1180 = rSges(6,3) * t1247 + t832 * t1137;
t1138 = rSges(5,2) * t1254;
t1179 = rSges(5,3) * t1248 + t829 * t1138;
t1178 = rSges(5,3) * t1247 + t832 * t1138;
t1176 = rSges(4,2) * t1109 + rSges(4,3) * t1163;
t1172 = rSges(3,2) * t1106 + rSges(3,3) * t1163;
t1077 = -t680 - t1350;
t900 = t1077 * t1159 + t801;
t857 = qJD(1) * t1112 + t900;
t847 = t857 + t1414;
t101 = t1509 + t847;
t1162 = qJD(2) * t101;
t1144 = pkin(2) * t1241;
t1140 = t797 * t1338;
t1139 = rSges(6,1) * t1255;
t1133 = qJD(2) * t818;
t1128 = -t194 - t1229;
t1125 = t343 - t1222;
t1124 = -t344 - t1216;
t1122 = -t344 - t1197;
t1120 = -t534 * t1163 + t832 * t415 + t829 * t416;
t1119 = t462 + t1185;
t1118 = -t478 - t1207;
t1110 = t1508 * t804;
t1099 = t831 * t1159;
t1095 = t798 * t1155;
t1093 = t1253 / 0.2e1;
t1092 = t1252 / 0.2e1;
t1091 = -pkin(1) - t1339;
t1084 = t1161 / 0.2e1;
t1083 = -t803 / 0.2e1;
t1081 = -t1159 / 0.2e1;
t1076 = t74 * t1222;
t1075 = t74 * t1216;
t84 = -t1207 * t533 + t1533 + t847;
t1074 = t84 * t1222;
t1073 = t84 * t1207;
t1072 = t1420 * t1207;
t92 = t320 * t532 + t324 * t533 + t899;
t1071 = t92 * t1220;
t1070 = (-t829 ^ 2 - t1530) * t828;
t1069 = t532 * t394 + t399 * t533;
t1068 = t652 * t399 - t532 * t570;
t1066 = -t661 * t624 + t625 * t662;
t1061 = t704 - t1251;
t1059 = -t793 - t704;
t1058 = -qJD(1) * t320 - t163;
t1057 = -qJD(1) * t635 + t767;
t1053 = t1101 * t1222 - t1228 * t1252;
t1050 = t1109 * t1207 + t1161 * t1216;
t1049 = t1207 * t1253 + t1222 * t798;
t1046 = t829 * t636 + t832 * t638 + t1203;
t1045 = t801 + t1113;
t1038 = t1077 - t478;
t1037 = t1077 - t527;
t1036 = t74 * t1124;
t1035 = -t650 - t1133;
t735 = rSges(2,1) * t832 - rSges(2,2) * t829;
t733 = rSges(2,1) * t829 + rSges(2,2) * t832;
t734 = -rSges(3,2) * t828 + t1339;
t1023 = -t1246 - t1350;
t1021 = t1420 * t829 - t832 * t84;
t102 = t324 * t652 - t501 * t532 + t865;
t1004 = -t101 * t832 - t102 * t829;
t989 = t128 * t832 - t129 * t829;
t988 = t128 * t829 + t129 * t832;
t987 = t130 * t832 - t131 * t829;
t986 = t130 * t829 + t131 * t832;
t132 = t1531 + t857;
t985 = t132 * t832 + t1279;
t984 = t138 * t832 - t139 * t829;
t983 = t138 * t829 + t139 * t832;
t351 = rSges(4,1) * t905 - rSges(4,2) * t1101 + t1176;
t974 = t351 * t832 + t352 * t829;
t971 = -t367 * t832 - t368 * t829;
t970 = -t379 * t829 - t1270;
t430 = -rSges(3,2) * t1099 + (-t1164 * t831 - t1100) * rSges(3,1) + t1172;
t663 = t732 * t829;
t431 = -qJD(2) * t663 + (t734 * t832 + t814) * qJD(1);
t969 = t430 * t832 + t431 * t829;
t963 = t543 * t829 + t544 * t832;
t960 = t633 * t829 + t634 * t832;
t954 = t1038 - t501;
t951 = (-t1144 + t637) * qJD(1);
t503 = rSges(6,1) * t1249 - rSges(6,2) * t1250 + t780;
t949 = t1035 - t342;
t948 = t1035 - t353;
t944 = t1351 * t797 - t785;
t943 = -t829 * t343 + t832 * t344 + t1046;
t942 = t636 * t1163 + t832 * t417 + t829 * t418 + t1120;
t941 = t1059 - t782;
t940 = t1059 - t780;
t924 = t1039 + t1173;
t923 = t1038 - t1207;
t920 = -t1246 + t1407;
t919 = -t282 + t948;
t918 = t1237 * t797 + t1173 - t675;
t910 = qJD(6) * t1255 + t1455 * t532 + t533 * t945;
t909 = qJD(6) * t598 + t1448 * t532 + t652 * t945;
t902 = t948 - t1463;
t897 = -t354 * t662 + t356 * t661 + t519 * t755;
t894 = (-Icges(5,5) * t642 - Icges(5,6) * t643) * t662 - (Icges(5,5) * t644 - Icges(5,6) * t645) * t661 - t612 * t755;
t892 = -t1018 + t1111;
t886 = -t343 * t1163 + t832 * t194 + t829 * t195 + t942;
t885 = (-t792 * t797 + t1023) * qJD(2);
t884 = t1060 + t947;
t881 = t797 * t894;
t867 = t900 + t1393;
t413 = t829 * t920 - t756;
t414 = t832 * t920 - t758;
t866 = -t343 * t1095 - t1096 * t344 + t661 * t413 + t414 * t662 + t1193;
t479 = t1061 - t1411;
t864 = t478 * t1096 + t1158 * t343 - t413 * t755 - t662 * t479 + t1057;
t859 = (Icges(5,1) * t644 - t1316 - t359) * t661 - (-Icges(5,1) * t642 - t357 - t622) * t662 + (-t521 + t618) * t755;
t111 = -t367 * t661 + t368 * t662 + t1047;
t856 = t111 * t971 + (t132 * t829 - t133 * t832) * t527;
t855 = -t1095 * t478 + t344 * t1158 + t755 * t414 - t661 * t479 + t951;
t841 = t1379 * t797;
t840 = (t1439 * t797 - t1469 * t798) * t1377 + (t1434 * t797 - t1470 * t798) * t1376 + (t1441 * t797 - t1468 * t798) * t477 / 0.2e1 + (-t1442 * t832 + t1444 * t600 + t1445 * t599) * t1372 + ((qJD(2) * t1439 - t1485) * t798 + (qJD(1) * t1438 + qJD(2) * t1469 + t1493 * t832 + t1494 * t829) * t797) * t1371 + ((qJD(2) * t1434 - t1529) * t798 + (qJD(1) * t1433 + qJD(2) * t1470 + t1491 * t832 + t1492 * t829) * t797) * t1370 + (-t1442 * t829 + t1444 * t598 + t1445 * t597) * t1369 + (t1516 * t798 + (t1444 * t805 + t1445 * t804) * t797) * t1366 + ((qJD(2) * t1441 - t1528) * t798 + (qJD(1) * t1440 + qJD(2) * t1468 + t1489 * t832 + t1490 * t829) * t797) * t1365 + (t1284 + t1285 + t1331 - t1332 + t1282 + t1283 + t1329 - t1330 + t1422) * t1355 + t1495 * t1093 + t1496 * t1092 + t1486 * t1084 + t1502 * t1488 + t1503 * t1487;
t839 = -t755 * t195 + t641 * t343 - t662 * t353 + t412 * t478 + t843;
t749 = rSges(7,2) * t1247;
t686 = t734 * qJD(2);
t628 = t673 * t832;
t605 = t832 * t1055;
t604 = t829 * t1055;
t476 = -t1140 * t832 + t1178;
t475 = -t1140 * t829 + t1179;
t474 = t523 * t832;
t473 = t523 * t829;
t472 = t521 * t832;
t471 = t521 * t829;
t466 = -t1139 * t832 + t1180;
t464 = -t1139 * t829 + t1181;
t445 = rSges(5,1) * t644 - rSges(5,2) * t645;
t444 = -rSges(5,1) * t642 - rSges(5,2) * t643;
t372 = t960 * qJD(2);
t293 = t343 * t1252;
t269 = t320 * t1252;
t207 = -t673 * t803 + (t544 + t1196) * qJD(1) - t1171;
t201 = qJD(2) * t963 + t1205;
t193 = qJD(1) * t430 + qJDD(1) * t634 - t686 * t803 - t695 * t732 + t1182;
t192 = -t686 * t1159 + t696 * t732 + t1186 * qJDD(1) + (-t431 - t692) * qJD(1);
t110 = qJD(1) * t351 + qJDD(1) * t544 - t649 * t803 - t673 * t695 + t848;
t89 = t1253 * t335 - t336 * t642 + t337 * t643 + t340 * t521 + t341 * t523 + t519 * t904;
t88 = t1252 * t335 + t336 * t644 + t337 * t645 + t338 * t521 + t339 * t523 + t519 * t903;
t81 = -t138 * t662 + t139 * t661 + t203 * t755;
t47 = t1253 * t182 - t184 * t642 + t186 * t643 + t340 * t359 + t341 * t362 + t356 * t904;
t46 = t1253 * t183 - t185 * t642 + t187 * t643 + t340 * t357 - t341 * t361 + t354 * t904;
t45 = t1252 * t182 + t184 * t644 + t186 * t645 + t338 * t359 + t339 * t362 + t356 * t903;
t44 = t1252 * t183 + t185 * t644 + t187 * t645 + t338 * t357 - t339 * t361 + t354 * t903;
t43 = t190 * t662 + t191 * t661 - t367 * t411 - t368 * t412 + t869;
t24 = t652 * t163 - t227 * t501 - t532 * t282 + t477 * t324 + t838;
t23 = -t652 * t165 + t228 * t501 - t533 * t282 - t477 * t320 + t839;
t21 = -qJD(6) * t254 + qJDD(6) * t599 + t1207 * t228 - t1222 * t477 + t1228 * t652 - t1463 * t533 + t839;
t18 = t128 * t412 + t129 * t411 + t196 * t641 - t46 * t662 + t47 * t661 + t755 * t89;
t17 = t130 * t412 + t131 * t411 + t197 * t641 - t44 * t662 + t45 * t661 + t755 * t88;
t1 = [t1327 / 0.2e1 + (t379 * (t796 + t1172) + (t1271 * t732 - t1269) * qJD(2) + ((-pkin(1) - t734) * t1270 + (t378 * (-rSges(3,3) - pkin(7)) + t379 * t1091) * t829) * qJD(1) - (-qJD(1) * t633 - t1105 - t378 - t710) * t379 + (-g(2) + t193) * t515 + (-g(1) + t192) * (t1091 * t829 + t1170 + t819)) * m(3) - t1332 / 0.2e1 + t1278 / 0.2e1 + t1284 / 0.2e1 + t1285 / 0.2e1 + (m(2) * (t733 ^ 2 + t735 ^ 2) + Icges(2,3) - t1537) * qJDD(1) + (-qJD(2) * t1538 + t647 * t798 + t648 * t797 + t684 * t831 + t685 * t828) * qJD(1) + t1329 / 0.2e1 + t76 * t1361 + t1487 * t1369 - t1330 / 0.2e1 + t1331 / 0.2e1 + t1283 / 0.2e1 - t1328 / 0.2e1 + (((t1429 * t832 - t1425 + t1464) * t832 + (t1429 * t829 + t1465 + t1559) * t829) * qJD(2) + t1481 - t1501) * t1083 + (t89 + t76) * t1362 + (t1457 * t798 + (t1458 * t804 - t1544 * t805) * t797 + t1475) * t532 * t1366 + (t1529 + t1487) * t1370 + (t23 * (-t320 + t918) + t101 * (-rSges(6,3) * t1102 - t1028 + t892) + t102 * (t1045 + t1127) + ((-t102 * t1157 + t23) * t1349 + t102 * t885) * t832 + ((t101 * t940 - t102 * t826) * t832 + (-t101 * t1349 + t102 * t940) * t829) * qJD(1) - (-t101 + t1414 + t1509 + t867) * t102 - g(1) * ((-rSges(6,3) + t833) * t1253 + t924 + t1191) + (t24 - g(2)) * (t884 + t324)) * m(6) + (-(-t132 + t1531 + t867) * t133 - t944 * t1348 + t132 * (-t1031 + t719 + t1111) + t133 * (-pkin(3) * t1103 + t1123 + t720 + t950) + (t1160 * t132 * t1351 + t66 * t944) * t829 + ((-t793 + t944) * t1279 + (t132 * (-t1411 - t793 - t781) - t133 * t826) * t832) * qJD(1) + (-g(2) + t67) * (t1060 + t368 + t638) + (-g(1) + t66) * (-t1030 + t1173)) * m(5) + t1282 / 0.2e1 + (-g(1) * ((-rSges(7,2) + t833) * t1253 + t924 + t1404) - t1072 * t533 + t1497 * (t884 + t1216) + (t1349 * t832 - t1222 + t918) * t21 + (-rSges(7,2) * t1102 + t1505 + t892 + (-t1349 * t829 + t832 * t941) * qJD(1)) * t84 + (-t1045 - t1405 + (t1157 * t1349 - t885) * t832 + (-t829 * t941 + t790) * qJD(1) - t1159 * t680 + t1393 + t1414 + t950 - t84 + t1533) * t1420) * m(7) + ((t1425 * t829 + ((t1560 + t1566) * t832 + t1466 + t1558 + t1565) * t832) * qJD(2) + t1506) * t1080 + t1321 + t1422 + (t1471 + t1474) * t1082 + (-t1472 + t1473 + t1480) * t1081 + t1469 * t1377 + t1470 * t1376 + t196 * t1374 + t197 * t1375 + (t1459 + t1461) * t1359 + (t1460 + t1462) * t1358 + t1277 / 0.2e1 + (-(-qJD(1) * t543 + t1413 - t206 + t901) * t207 + t206 * t1111 + t207 * (t801 + t1176) + (t1273 * t829 + t1415 * t207) * qJD(2) + ((-t206 * rSges(4,3) + t207 * (-t793 - t783)) * t829 + (t206 * (-t1400 - t793) - t207 * t826) * t832) * qJD(1) + (t110 - g(2)) * (t1060 + t544) + t1507 * (-t543 + t1173)) * m(4) + t88 * t1363 - m(2) * (-g(1) * t733 + g(2) * t735) + t1485 * t1371; (-(t378 * t663 - t1269) * qJD(1) - (t372 * (-t663 * t829 - t664 * t832) + t970 * t734) * qJD(2) + g(1) * t664 + g(2) * t663 - g(3) * t734 + (qJD(2) * t969 + t633 * t695 - t634 * t696) * t960 + t372 * ((t633 * t832 - t634 * t829) * qJD(1) + t969) + t970 * t686 + (-t192 * t832 - t193 * t829 + (-t379 * t832 + t1271) * qJD(1)) * t732) * m(3) + ((-t1159 * t1423 - t1426) * t832 + ((t1424 * t832 + t1446) * qJD(2) + t1443) * t829) * t1080 + ((-t1424 * t803 + t1426) * t829 + ((t1423 * t829 + t1446) * qJD(2) + t1443) * t832) * t1083 + t1514 * t1358 + t1515 * t1359 - t81 * t1158 / 0.2e1 - (t75 * t829 + t76 * t832) * t1157 / 0.2e1 - ((t1382 * t798 + t1383 * t831 + t891 * t797 + t890 * t828) * qJD(2) + (t1174 * t831 + t1175 * t828 + t1183 * t798 + t1184 * t797) * qJD(1)) * qJD(1) / 0.2e1 + (-g(1) * t1180 - g(2) * t1181 - g(3) * (t1061 + t503 + t818) - t1394 * ((-t792 - t1337) * t797 + t1023) + t101 * t1119 + t22 * t943 + t92 * t886 + (t23 * t954 + t101 * t919 + t1333 + t92 * t163 + (t102 * t954 + t92 * t320) * qJD(1)) * t832 + (t24 * t954 + t102 * t919 + t22 * t320 + t92 * t165 + (t101 * t501 + t92 * (-t324 + t1122)) * qJD(1)) * t829 - t101 * (-t320 * t665 - t464 * t652 + t501 * t604 - t503 * t533 + t864) - t102 * (t324 * t665 + t466 * t652 - t501 * t605 - t503 * t532 + t855) - t92 * (t320 * t605 - t324 * t604 + t464 * t532 + t466 * t533 + t866) - (t1004 * t1411 + (t1004 * t831 + t1070 * t92) * pkin(2)) * qJD(2)) * m(6) + (-g(1) * (-t1231 * t798 - t1144 + t749) - g(2) * (-t1237 * t798 - t1145 + t742) - g(3) * (t704 + t818 - t1192) - (-g(3) * t833 + t1394 * (-t1508 * t805 - t1527 * t804 - t792)) * t797 + t19 * t943 + t74 * t886 + (t21 * t923 + t1416 + t74 * t1229 + (-t1420 * t923 + t1076) * qJD(1)) * t832 + (t20 * t923 - t1420 * t902 + t19 * t1222 - t74 * t1228 + (t1073 + t74 * (t1122 - t1216)) * qJD(1)) * t829 + t1420 * (-t697 * t829 + t855) - t74 * (t1153 * t798 + t866) - (-t1216 * t1420 - t1074) * t665 - (t1072 + t1076) * t605 - (t1073 - t1075) * t604 - (-t1192 * t1420 + t1212 * t74) * t532 - (t1021 * t1411 + (t1021 * t831 + t1070 * t74) * pkin(2)) * qJD(2) + t1421 * (t1432 * t832 + t749) + (-t1192 * t533 + t1212 * t652 + t1119 - t864 + (t697 + t902) * t832) * t84) * m(7) + (-t132 * (-t475 * t755 - t528 * t662 + t1057) - t133 * (t476 * t755 - t528 * t661 + t951) - t111 * (t475 * t661 + t476 * t662 + t1193) - ((t132 * t367 + t133 * t368) * t797 + t856 * t798) * qJD(4) - (-t985 * t1411 + (t1070 * t111 - t831 * t985) * pkin(2)) * qJD(2) - g(1) * (t758 - t1144 + t1178) - g(2) * (t756 - t1145 + t1179) - g(3) * (t528 + t818 + t1411) - t1394 * t797 * (-pkin(3) - t1338) + t132 * t1185 + t43 * t1046 + t111 * t942 + (t66 * t1037 + t132 * t949 + t43 * t368 + t111 * t190 + (t1037 * t133 - t111 * t367) * qJD(1)) * t832 + (t67 * t1037 + t133 * t949 - t43 * t367 + t111 * t191 + (t132 * t527 + t111 * (-t368 - t1197)) * qJD(1)) * t829) * m(5) + (-t1513 * t798 + ((t1449 * t805 + t1450 * t804 + t1522) * t652 + (t1452 * t805 - t1454 * t804 - t1457) * t533 + (-t1451 * t805 + t1453 * t804 + t1523) * t532) * t797 + t1468 * t665 + t1524 * t605 + t1475 * t604) * t1366 + (t1447 * t832 + t1469 * t665 + (t1449 * t600 + t1450 * t599) * t652 + t1476 * t605 + t1477 * t604 + (t1452 * t600 - t1454 * t599) * t533 + (-t1451 * t600 + t1453 * t599) * t532) * t1372 + (t1447 * t829 + t1470 * t665 + (t1449 * t598 + t1450 * t597) * t652 + t1478 * t605 + t1479 * t604 + (t1452 * t598 - t1454 * t597) * t533 + (-t1451 * t598 + t1453 * t597) * t532) * t1369 - t1438 * t227 / 0.2e1 + (t1472 * t832 + t1471 * t829 + (t1459 * t832 + t1460 * t829) * qJD(1)) * qJD(1) / 0.2e1 + (t1459 * t829 - t1460 * t832) * qJDD(1) / 0.2e1 + ((t1464 * t832 + t1465 * t829) * qJD(1) + t1430) * t1082 + ((t1466 * t832 + t1467 * t829) * qJD(1) + t1431) * t1081 - t641 * t984 / 0.2e1 - t411 * t987 / 0.2e1 - t412 * t989 / 0.2e1 + (qJD(1) * t1474 + qJD(2) * t1430 + qJDD(1) * t1461 + t1464 * t695 + t1465 * t696 + t1496 + t17) * t1354 - t1433 * t228 / 0.2e1 + (qJD(1) * t1441 + t1489 * t829 - t1490 * t832) * t1365 + (qJD(1) * t1434 + t1491 * t829 - t1492 * t832) * t1370 + (qJD(1) * t1439 + t1493 * t829 - t1494 * t832) * t1371 + (qJD(1) * t1473 + qJD(2) * t1431 + qJDD(1) * t1462 + t1466 * t695 + t1467 * t696 + t1495 + t18) * t1353 + (t206 * (-pkin(2) * t1099 - t649 * t832) + (qJD(2) * t974 + t1198 * t696 + t543 * t695 + t1121) * (t963 + t1203) + t201 * (t974 + t1120) + (t201 * t543 + t207 * t907) * t1163 + (t110 * t907 + t207 * (-t1133 - t649) + (t1198 * t201 + t1273) * qJD(1)) * t829 - (t206 * t627 + t207 * (-t628 - t1144)) * qJD(1) - (t201 * pkin(2) * t1070 + (-t1412 * t206 - t201 * t628) * t832 + (-t1412 * t207 - t201 * t627) * t829) * qJD(2) - g(3) * t1412 - t907 * t1346 + t1507 * t1415) * m(4) + (qJD(1) * t988 - t46 * t832 + t47 * t829) * t1362 + (qJD(1) * t986 - t44 * t832 + t45 * t829) * t1363 + (qJD(1) * t983 - t48 * t832 + t49 * t829) * t1356 + (((t472 * t827 - t474 * t830 + t356) * t661 - (t471 * t827 - t473 * t830 + t354) * t662 + (-t522 * t827 + t524 * t830 + t519) * t755 + t203 * qJD(4)) * t797 + (qJD(4) * t983 - t1379) * t798) * t1357 + ((t472 * t642 - t474 * t643) * t661 - (t471 * t642 - t473 * t643) * t662 + (-t522 * t642 + t524 * t643) * t755 + (t1247 * t129 + t196 * t797) * qJD(4) + ((qJD(4) * t128 + t897) * t798 + t841) * t829) * t1361 + ((-t472 * t644 - t474 * t645) * t661 - (-t471 * t644 - t473 * t645) * t662 + (t522 * t644 + t524 * t645) * t755 + (t1248 * t130 + t197 * t797) * qJD(4) + ((qJD(4) * t131 + t897) * t798 + t841) * t832) * t1364 - t1440 * t477 / 0.2e1 - t1486 * t665 / 0.2e1 + (t76 + t1480 + t1487) * t1085 - t1487 * t605 / 0.2e1 + (t75 + t1481 + t1488) * t1164 / 0.2e1 - t1488 * t604 / 0.2e1; (-m(4) - m(6) - m(7)) * t1392 + 0.2e1 * (t1353 * t20 + t1354 * t21) * m(7) + 0.2e1 * (t1353 * t24 + t1354 * t23) * m(6) + 0.2e1 * (t109 * t1354 + t110 * t1353) * m(4) + (-t1392 + t1395) * m(5); t840 + t17 * t1092 + t18 * t1093 + t81 * t1084 + (-t196 * t798 + t797 * t988) * t1374 + (-t197 * t798 + t797 * t986) * t1375 + t641 * (-t203 * t798 + t797 * t983) / 0.2e1 + (-t1378 * t642 + t643 * t859 - t829 * t881) * t1361 + ((qJD(2) * t988 - t89) * t798 + (qJD(1) * t989 + qJD(2) * t196 + t46 * t829 + t47 * t832) * t797) * t1362 + ((qJD(2) * t986 - t88) * t798 + (qJD(1) * t987 + qJD(2) * t197 + t44 * t829 + t45 * t832) * t797) * t1363 + (t1378 * t644 + t859 * t645 - t832 * t881) * t1364 + (t1277 + t1278 + t1321 + t1327 - t1328) * t1355 + ((qJD(2) * t983 - t94) * t798 + (qJD(1) * t984 + qJD(2) * t203 + t48 * t829 + t49 * t832) * t797) * t1356 + (t894 * t798 + (-t1378 * t827 + t830 * t859) * t797) * t1357 + t1503 * t76 + t1502 * t75 + (t21 * (t1049 + t1214) - t1420 * (t1050 + t1223) + t19 * (-t293 + t1225) + (t20 * t1124 - t1420 * t1128 + (-t1118 * t1420 * t832 + t1036 * t829) * qJD(2)) * t798 + ((t20 * t1118 - t1420 * (-t353 - t1463) + qJD(1) * t1036) * t832 + t1124 * t19 * t829) * t797 + t1420 * (t909 + t1204) - g(1) * (t625 + t945) - g(2) * (-t624 + t1455) - g(3) * t1177 - (-t1110 - t1349) * t1345 + (t1125 * t1161 + t1406 + t1410) * t84 + (t1053 + t1227 + (qJD(1) * t1125 + t1128) * t1253 - t1066 - t910) * t74) * m(7) + (t23 * (t1213 + t1214) + t102 * (t1223 + t1224) + t22 * (t269 - t293) + t92 * (t1227 + t1230) + (t24 * t1220 + t102 * (-t163 - t194) + (t102 * t1210 * t832 + t1071 * t829) * qJD(2)) * t798 + ((-t320 + t343) * t1162 + (t24 * t1210 + t102 * (-t282 - t353) + qJD(1) * t1071) * t832 + (t22 * t1220 + t92 * (qJD(1) * t343 + t1058 - t194)) * t829) * t797 - t102 * (t1068 + t1204) - t92 * (t1066 + t1069) - g(1) * (t625 + t399) - g(2) * (-t624 + t394) - (t1026 - t1349) * t1345 + (t1399 + t1406) * t101) * m(6) + (-t132 * (-t444 * t755 - t626 * t662) - t133 * (t445 * t755 - t626 * t661) - t111 * (t444 * t661 + t445 * t662) - g(1) * t445 - g(2) * t444 - g(3) * t626 + (qJD(2) * t856 + t132 * t191 - t133 * t190 - t367 * t66 - t67 * t368) * t798 + (t132 * (qJD(2) * t367 + t342 * t829) + t133 * (qJD(2) * t368 - t342 * t832) + t43 * t971 + t111 * (-t1163 * t368 + t1164 * t367 - t190 * t829 + t191 * t832) + (qJD(1) * t985 + t1395) * t527) * t797) * m(5); t840 + (t21 * t1049 - t1420 * t1050 + t19 * t1225 + t74 * t1053 + (-t20 * t1216 + t1420 * t1229 + (t1072 * t832 - t1075 * t829) * qJD(2)) * t798 + (-qJD(2) * t1074 + (-qJD(1) * t1075 - t1207 * t20 + t1420 * t1463) * t832 + (-t1416 + t74 * (-qJD(1) * t1222 - t1229)) * t829) * t797 - t74 * t910 + t1420 * t909 - g(1) * t945 - g(2) * t1455 - g(3) * (-t1110 * t797 + t1177) + t1410 * t84) * m(7) + (t23 * t1213 + t102 * t1224 + t22 * t269 + t92 * t1230 + (t102 * (-t1159 * t501 - t163) + (-t803 * t92 - t24) * t324) * t798 + (-t320 * t1162 + (-qJD(1) * t324 * t92 - t102 * t282 - t24 * t501) * t832 + (t1058 * t92 - t1333) * t829) * t797 - t102 * t1068 - t1069 * t92 - g(1) * t399 - g(2) * t394 - g(3) * t570 + t1399 * t101) * m(6); (-t254 * t84 - t256 * t1420 + t906 * t74 + (-g(1) + t1421 + t21) * t599 + (-t532 * t74 + t652 * t84 + t1497) * t597 + (-t1420 * t532 + t533 * t84 - g(3) + t19) * t1256) * m(7);];
tau  = t1;
