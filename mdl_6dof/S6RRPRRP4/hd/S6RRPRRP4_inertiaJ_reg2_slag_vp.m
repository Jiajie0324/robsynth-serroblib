% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRPRRP4_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP4_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP4_inertiaJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t73 = sin(pkin(10));
t74 = cos(pkin(10));
t77 = sin(qJ(2));
t80 = cos(qJ(2));
t49 = t73 * t80 + t74 * t77;
t75 = sin(qJ(5));
t76 = sin(qJ(4));
t78 = cos(qJ(5));
t79 = cos(qJ(4));
t56 = t75 * t79 + t76 * t78;
t22 = t56 * t49;
t107 = t56 * t22;
t103 = t79 * t49;
t105 = t76 * t49;
t24 = t103 * t78 - t105 * t75;
t54 = t75 * t76 - t78 * t79;
t15 = t24 * t54;
t128 = t15 + t107;
t127 = -0.2e1 * t49;
t126 = t15 - t107;
t122 = t54 ^ 2;
t52 = t56 ^ 2;
t125 = t52 + t122;
t124 = t22 ^ 2;
t102 = -qJ(3) - pkin(7);
t58 = t102 * t80;
t94 = t102 * t77;
t32 = -t58 * t73 - t74 * t94;
t123 = t32 ^ 2;
t47 = t73 * t77 - t74 * t80;
t45 = t47 ^ 2;
t121 = 0.2e1 * t47;
t116 = t74 * pkin(2);
t63 = -pkin(3) - t116;
t57 = -pkin(4) * t79 + t63;
t120 = 0.2e1 * t57;
t67 = -pkin(2) * t80 - pkin(1);
t119 = 0.2e1 * t67;
t118 = 0.2e1 * t80;
t34 = -t74 * t58 + t73 * t94;
t109 = t34 * t79;
t31 = pkin(3) * t47 - pkin(8) * t49 + t67;
t10 = t109 + (-pkin(9) * t49 + t31) * t76;
t12 = t31 * t79 - t34 * t76;
t8 = pkin(4) * t47 - pkin(9) * t103 + t12;
t4 = t10 * t78 + t75 * t8;
t43 = t47 * pkin(5);
t117 = t73 * pkin(2);
t68 = t75 * pkin(4);
t115 = t78 * pkin(4);
t61 = pkin(8) + t117;
t114 = pkin(9) + t61;
t113 = t22 * t54;
t112 = t24 * t22;
t44 = t114 * t79;
t96 = t114 * t76;
t28 = t44 * t75 + t78 * t96;
t111 = t28 * t47;
t30 = t78 * t44 - t75 * t96;
t110 = t30 * t47;
t108 = t47 * t22;
t35 = t47 * t54;
t36 = t56 * t47;
t37 = t56 * t54;
t106 = t76 * t47;
t104 = t76 * t79;
t69 = t76 ^ 2;
t71 = t79 ^ 2;
t101 = t69 + t71;
t70 = t77 ^ 2;
t72 = t80 ^ 2;
t100 = t70 + t72;
t99 = t47 * t127;
t42 = t47 * qJ(6);
t1 = t42 + t4;
t98 = t28 ^ 2 + t30 ^ 2;
t97 = t76 * t103;
t95 = t10 * t75 - t78 * t8;
t93 = -t22 * t30 + t24 * t28;
t92 = t28 * t54 + t30 * t56;
t2 = -t43 + t95;
t20 = pkin(4) * t105 + t32;
t90 = -pkin(5) * t54 + qJ(6) * t56;
t13 = t31 * t76 + t109;
t89 = t12 * t79 + t13 * t76;
t88 = -t12 * t76 + t13 * t79;
t87 = -t47 * t61 + t49 * t63;
t86 = 0.2e1 * t28 * t56 - 0.2e1 * t30 * t54;
t82 = 0.2e1 * pkin(5);
t81 = 0.2e1 * qJ(6);
t65 = pkin(5) + t115;
t62 = t68 + qJ(6);
t46 = t49 ^ 2;
t41 = t79 * t47;
t25 = t57 - t90;
t21 = t24 ^ 2;
t16 = t24 * t56;
t14 = t24 * t121;
t5 = pkin(5) * t22 - qJ(6) * t24 + t20;
t3 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t70, t77 * t118, 0, t72, 0, 0, pkin(1) * t118, -0.2e1 * pkin(1) * t77, 0.2e1 * t100 * pkin(7), pkin(7) ^ 2 * t100 + pkin(1) ^ 2, t46, t99, 0, t45, 0, 0, t47 * t119, t49 * t119, 0.2e1 * t32 * t49 - 0.2e1 * t34 * t47, t34 ^ 2 + t67 ^ 2 + t123, t71 * t46, -0.2e1 * t46 * t104, t103 * t121, t69 * t46, t76 * t99, t45, 0.2e1 * t105 * t32 + 0.2e1 * t12 * t47, 0.2e1 * t103 * t32 - 0.2e1 * t13 * t47, t89 * t127, t12 ^ 2 + t13 ^ 2 + t123, t21, -0.2e1 * t112, t14, t124, -0.2e1 * t108, t45, 0.2e1 * t20 * t22 - 0.2e1 * t47 * t95, 0.2e1 * t20 * t24 - 0.2e1 * t4 * t47, -0.2e1 * t22 * t4 + 0.2e1 * t24 * t95, t20 ^ 2 + t4 ^ 2 + t95 ^ 2, t21, t14, 0.2e1 * t112, t45, 0.2e1 * t108, t124, -0.2e1 * t2 * t47 + 0.2e1 * t22 * t5, -0.2e1 * t1 * t22 + 0.2e1 * t2 * t24, 0.2e1 * t1 * t47 - 0.2e1 * t24 * t5, t1 ^ 2 + t2 ^ 2 + t5 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, t80, 0, -t77 * pkin(7), -t80 * pkin(7), 0, 0, 0, 0, t49, 0, -t47, 0, -t32, -t34 (-t47 * t73 - t49 * t74) * pkin(2) (-t32 * t74 + t34 * t73) * pkin(2), t97 (-t69 + t71) * t49, t106, -t97, t41, 0, -t32 * t79 + t76 * t87, t32 * t76 + t79 * t87, t88, t32 * t63 + t61 * t88, t16, -t128, t36, t113, -t35, 0, t20 * t54 + t22 * t57 - t111, t20 * t56 + t24 * t57 - t110, -t4 * t54 + t56 * t95 + t93, t20 * t57 + t28 * t95 + t30 * t4, t16, t36, t128, 0, t35, t113, t22 * t25 + t5 * t54 - t111, -t1 * t54 + t2 * t56 + t93, -t24 * t25 - t5 * t56 + t110, t1 * t30 + t2 * t28 + t25 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t116, -0.2e1 * t117, 0 (t73 ^ 2 + t74 ^ 2) * pkin(2) ^ 2, t69, 0.2e1 * t104, 0, t71, 0, 0, -0.2e1 * t63 * t79, 0.2e1 * t63 * t76, 0.2e1 * t101 * t61, t101 * t61 ^ 2 + t63 ^ 2, t52, -0.2e1 * t37, 0, t122, 0, 0, t54 * t120, t56 * t120, t86, t57 ^ 2 + t98, t52, 0, 0.2e1 * t37, 0, 0, t122, 0.2e1 * t25 * t54, t86, -0.2e1 * t25 * t56, t25 ^ 2 + t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t49, 0, t67, 0, 0, 0, 0, 0, 0, t41, -t106, -t101 * t49, t89, 0, 0, 0, 0, 0, 0, -t35, -t36, t126, t4 * t56 + t54 * t95, 0, 0, 0, 0, 0, 0, -t35, t126, t36, t1 * t56 + t2 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, -t105, t47, t12, -t13, 0, 0, 0, 0, t24, 0, -t22, t47, t115 * t47 - t95, -t47 * t68 - t4 (-t22 * t75 - t24 * t78) * pkin(4) (t4 * t75 - t78 * t95) * pkin(4), 0, t24, 0, t47, t22, 0, t47 * t65 - t2, -t22 * t62 - t24 * t65, t47 * t62 + t1, t1 * t62 - t2 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, 0, t79, 0, -t76 * t61, -t79 * t61, 0, 0, 0, 0, t56, 0, -t54, 0, -t28, -t30 (-t54 * t75 - t56 * t78) * pkin(4) (-t28 * t78 + t30 * t75) * pkin(4), 0, t56, 0, 0, t54, 0, -t28, -t54 * t62 - t56 * t65, t30, -t28 * t65 + t30 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, -t76, 0, 0, 0, 0, 0, 0, 0, 0, -t54, -t56, 0 (-t54 * t78 + t56 * t75) * pkin(4), 0, 0, 0, 0, 0, 0, -t54, 0, t56, -t54 * t65 + t56 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t115, -0.2e1 * t68, 0 (t75 ^ 2 + t78 ^ 2) * pkin(4) ^ 2, 0, 0, 0, 1, 0, 0, 0.2e1 * t65, 0, 0.2e1 * t62, t62 ^ 2 + t65 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, -t22, t47, -t95, -t4, 0, 0, 0, t24, 0, t47, t22, 0, -t2 + t43, -pkin(5) * t24 - qJ(6) * t22, 0.2e1 * t42 + t4, -pkin(5) * t2 + qJ(6) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, -t54, 0, -t28, -t30, 0, 0, 0, t56, 0, 0, t54, 0, -t28, -pkin(5) * t56 - qJ(6) * t54, t30, -pkin(5) * t28 + qJ(6) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, -t56, 0, 0, 0, 0, 0, 0, 0, 0, -t54, 0, t56, t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t115, -t68, 0, 0, 0, 0, 0, 1, 0, 0, t82 + t115, 0, t81 + t68, pkin(5) * t65 + qJ(6) * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, t82, 0, t81, pkin(5) ^ 2 + qJ(6) ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, t24, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;];
MM_reg  = t3;
