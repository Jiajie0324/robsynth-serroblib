% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:55:40
% EndTime: 2019-03-09 11:55:58
% DurationCPUTime: 7.58s
% Computational Cost: add. (14115->534), mult. (35251->675), div. (0->0), fcn. (26150->8), ass. (0->251)
t227 = sin(pkin(10));
t230 = sin(qJ(2));
t232 = cos(qJ(2));
t324 = cos(pkin(10));
t200 = t227 * t232 + t324 * t230;
t298 = qJD(1) * t200;
t229 = sin(qJ(4));
t231 = cos(qJ(4));
t154 = t231 * qJD(2) - t229 * t298;
t155 = t229 * qJD(2) + t231 * t298;
t228 = sin(qJ(5));
t348 = cos(qJ(5));
t91 = -t348 * t154 + t228 * t155;
t333 = t298 * t91;
t272 = t324 * t232;
t212 = qJD(1) * t272;
t296 = qJD(1) * t230;
t187 = t227 * t296 - t212;
t181 = qJD(4) + t187;
t176 = qJD(5) + t181;
t189 = t200 * qJD(2);
t177 = qJD(1) * t189;
t281 = t348 * t231;
t309 = t228 * t229;
t202 = -t281 + t309;
t282 = t348 * t229;
t203 = t228 * t231 + t282;
t354 = qJD(4) + qJD(5);
t147 = t354 * t203;
t365 = t203 * t187 + t147;
t351 = t365 * t176 + t177 * t202;
t379 = -t333 - t351;
t378 = t333 - t351;
t277 = t348 * qJD(5);
t355 = t348 * qJD(4) + t277;
t300 = t202 * t187 - t355 * t231 + t354 * t309;
t295 = qJD(4) * t229;
t292 = qJD(1) * qJD(2);
t276 = t230 * t292;
t210 = t227 * t276;
t238 = qJD(2) * t212 - t210;
t363 = qJD(2) * qJD(4) + t238;
t107 = -t363 * t231 + t298 * t295;
t246 = t228 * t154 + t348 * t155;
t294 = qJD(4) * t231;
t283 = t363 * t229 + t298 * t294;
t48 = qJD(5) * t246 - t228 * t107 + t348 * t283;
t262 = -t203 * t48 + t300 * t91;
t293 = qJD(5) * t228;
t47 = t348 * t107 - t154 * t277 + t155 * t293 + t228 * t283;
t374 = -t47 * t202 + t365 * t246;
t377 = t262 + t374;
t376 = t374 - t262;
t254 = -t300 * t176 + t203 * t177;
t327 = t246 * t298;
t375 = t254 + t327;
t368 = -t176 * t246 + t48;
t313 = t187 * t229;
t373 = t295 + t313;
t342 = -qJ(3) - pkin(7);
t209 = t342 * t232;
t205 = qJD(1) * t209;
t193 = t227 * t205;
t208 = t342 * t230;
t204 = qJD(1) * t208;
t335 = qJD(2) * pkin(2);
t196 = t204 + t335;
t138 = t324 * t196 + t193;
t131 = -qJD(2) * pkin(3) - t138;
t89 = -t154 * pkin(4) + t131;
t44 = t91 * pkin(5) - qJ(6) * t246 + t89;
t372 = t44 * t91;
t371 = t89 * t91;
t369 = t91 * t246;
t314 = t181 * t229;
t367 = t155 * t314;
t241 = -t227 * t230 + t272;
t192 = t241 * qJD(2);
t307 = t229 * t192;
t244 = t200 * t294 + t307;
t350 = t246 ^ 2;
t287 = t91 ^ 2 - t350;
t362 = t91 * t176 - t47;
t67 = pkin(5) * t246 + qJ(6) * t91;
t361 = -0.2e1 * t292;
t217 = t227 * pkin(2) + pkin(8);
t343 = pkin(9) + t217;
t197 = t343 * t229;
t198 = t343 * t231;
t135 = -t228 * t197 + t348 * t198;
t274 = qJD(4) * t343;
t183 = t229 * t274;
t258 = t231 * t274;
t288 = pkin(2) * t296;
t123 = pkin(3) * t298 + t187 * pkin(8) + t288;
t142 = t324 * t204 + t193;
t81 = t231 * t123 - t229 * t142;
t64 = t231 * t187 * pkin(9) + pkin(4) * t298 + t81;
t82 = t229 * t123 + t231 * t142;
t73 = pkin(9) * t313 + t82;
t339 = t135 * qJD(5) + (t258 + t64) * t348 + (-t183 - t73) * t228;
t275 = qJD(2) * t342;
t184 = t232 * qJD(3) + t230 * t275;
t162 = t184 * qJD(1);
t185 = -t230 * qJD(3) + t232 * t275;
t163 = t185 * qJD(1);
t106 = t324 * t162 + t227 * t163;
t215 = pkin(2) * t276;
t111 = t177 * pkin(3) - pkin(8) * t238 + t215;
t224 = -t232 * pkin(2) - pkin(1);
t297 = qJD(1) * t224;
t206 = qJD(3) + t297;
t112 = t187 * pkin(3) - pkin(8) * t298 + t206;
t273 = t324 * t205;
t139 = t227 * t196 - t273;
t132 = qJD(2) * pkin(8) + t139;
t40 = t231 * t106 + t229 * t111 + t112 * t294 - t132 * t295;
t74 = t231 * t112 - t229 * t132;
t358 = -t74 * t181 + t40;
t75 = t229 * t112 + t231 * t132;
t41 = -qJD(4) * t75 - t229 * t106 + t231 * t111;
t357 = t75 * t181 + t41;
t141 = t227 * t204 - t273;
t257 = t373 * pkin(4) - t141;
t137 = -pkin(3) * t241 - t200 * pkin(8) + t224;
t153 = t227 * t208 - t324 * t209;
t145 = t231 * t153;
t87 = t229 * t137 + t145;
t171 = t177 * pkin(5);
t18 = t177 * pkin(4) + t107 * pkin(9) + t41;
t23 = -pkin(9) * t283 + t40;
t65 = -t155 * pkin(9) + t74;
t56 = t181 * pkin(4) + t65;
t66 = t154 * pkin(9) + t75;
t270 = -t348 * t18 + t228 * t23 + t66 * t277 + t56 * t293;
t2 = -t171 + t270;
t240 = t246 * t44 + t2;
t353 = -t89 * t246 - t270;
t310 = t200 * t231;
t86 = t231 * t137 - t229 * t153;
t71 = -pkin(4) * t241 - pkin(9) * t310 + t86;
t311 = t200 * t229;
t79 = -pkin(9) * t311 + t87;
t336 = t228 * t71 + t348 * t79;
t122 = t324 * t184 + t227 * t185;
t290 = t230 * t335;
t124 = t189 * pkin(3) - t192 * pkin(8) + t290;
t267 = -t229 * t122 + t231 * t124;
t306 = t231 * t192;
t34 = -pkin(9) * t306 + t189 * pkin(4) + (-t145 + (pkin(9) * t200 - t137) * t229) * qJD(4) + t267;
t49 = t231 * t122 + t229 * t124 + t137 * t294 - t153 * t295;
t39 = -pkin(9) * t244 + t49;
t8 = -qJD(5) * t336 - t228 * t39 + t348 * t34;
t349 = t298 ^ 2;
t347 = pkin(2) * t230;
t31 = t228 * t64 + t348 * t73;
t24 = qJ(6) * t298 + t31;
t245 = -t348 * t197 - t228 * t198;
t84 = t245 * qJD(5) - t348 * t183 - t228 * t258;
t341 = -t24 + t84;
t340 = -pkin(5) * t298 - t339;
t338 = t31 - t84;
t337 = -t365 * pkin(5) - t300 * qJ(6) + t203 * qJD(6) - t257;
t286 = t348 * t66;
t20 = t228 * t56 + t286;
t332 = t20 * t176;
t331 = t228 * t66;
t98 = t229 * t283;
t326 = t154 * t294 - t98;
t27 = t348 * t65 - t331;
t325 = pkin(4) * t277 + qJD(6) - t27;
t105 = t227 * t162 - t324 * t163;
t152 = -t324 * t208 - t227 * t209;
t323 = t105 * t152;
t322 = t107 * t229;
t321 = t245 * t177;
t320 = t135 * t177;
t319 = t154 * t187;
t318 = t154 * t298;
t317 = t155 * t154;
t316 = t155 * t298;
t315 = t176 * t298;
t140 = t177 * t241;
t312 = t298 * t187;
t308 = t229 * t177;
t158 = t231 * t177;
t234 = qJD(1) ^ 2;
t305 = t232 * t234;
t233 = qJD(2) ^ 2;
t304 = t233 * t230;
t303 = t233 * t232;
t19 = t348 * t56 - t331;
t302 = qJD(6) - t19;
t299 = t230 ^ 2 - t232 ^ 2;
t285 = t200 * t309;
t284 = t230 * t305;
t280 = t200 * t295;
t271 = -t228 * t18 - t348 * t23 - t56 * t277 + t66 * t293;
t269 = pkin(1) * t361;
t121 = t227 * t184 - t324 * t185;
t265 = t181 * t231;
t264 = 0.2e1 * t298;
t261 = -t135 * t48 + t245 * t47 - t84 * t91;
t260 = t232 * t276;
t26 = t228 * t65 + t286;
t259 = pkin(4) * t293 - t26;
t219 = -t324 * pkin(2) - pkin(3);
t256 = t283 * t231;
t120 = pkin(4) * t311 + t152;
t126 = t203 * t200;
t58 = t192 * t282 - t228 * t280 - qJD(5) * t285 + (t192 * t228 + t355 * t200) * t231;
t252 = t126 * t48 + t58 * t91;
t251 = -t75 * t229 - t74 * t231;
t164 = t176 * qJD(6);
t166 = t177 * qJ(6);
t1 = t166 + t164 - t271;
t83 = pkin(4) * t244 + t121;
t250 = -t373 * t181 + t158;
t249 = t19 * t176 + t271;
t42 = -t228 * t79 + t348 * t71;
t7 = t228 * t34 + t71 * t277 - t293 * t79 + t348 * t39;
t243 = -t280 + t306;
t242 = t48 * t202 + t365 * t91;
t207 = -t231 * pkin(4) + t219;
t239 = t131 * t181 - t217 * t177;
t72 = pkin(4) * t283 + t105;
t127 = t200 * t281 - t285;
t57 = t147 * t200 - t192 * t281 + t228 * t307;
t237 = t126 * t47 - t127 * t48 - t246 * t58 + t57 * t91;
t236 = t177 * t126 + t176 * t58 + t189 * t91 - t241 * t48;
t223 = -t348 * pkin(4) - pkin(5);
t218 = t228 * pkin(4) + qJ(6);
t186 = t187 ^ 2;
t128 = t202 * pkin(5) - t203 * qJ(6) + t207;
t88 = t176 * t189 - t140;
t59 = t126 * pkin(5) - t127 * qJ(6) + t120;
t52 = t155 * pkin(4) + t67;
t50 = -t87 * qJD(4) + t267;
t36 = pkin(5) * t241 - t42;
t35 = -qJ(6) * t241 + t336;
t33 = t254 - t327;
t15 = t176 * qJ(6) + t20;
t14 = -t176 * pkin(5) + t302;
t13 = -t47 * t203 - t246 * t300;
t12 = t58 * pkin(5) + t57 * qJ(6) - t127 * qJD(6) + t83;
t11 = -t127 * t47 - t246 * t57;
t10 = t127 * t177 - t57 * t176 + t189 * t246 + t241 * t47;
t9 = t48 * pkin(5) + t47 * qJ(6) - qJD(6) * t246 + t72;
t6 = -t189 * pkin(5) - t8;
t5 = t189 * qJ(6) - qJD(6) * t241 + t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t260, t299 * t361, t303, -0.2e1 * t260, -t304, 0, -pkin(7) * t303 + t230 * t269, pkin(7) * t304 + t232 * t269, 0, 0, t192 * t298 + t200 * t238, -t200 * t177 - t192 * t187 - t189 * t298 + t238 * t241, t192 * qJD(2), t187 * t189 - t140, -t189 * qJD(2), 0, t224 * t177 + t206 * t189 + (-t121 + (-qJD(1) * t241 + t187) * t347) * qJD(2), t206 * t192 - t224 * t210 + (t212 * t224 + t264 * t347 - t122) * qJD(2), t105 * t200 + t106 * t241 + t121 * t298 - t122 * t187 - t138 * t192 - t139 * t189 + t152 * t238 - t153 * t177, t323 + t106 * t153 - t138 * t121 + t139 * t122 + (t206 + t297) * t290, -t107 * t310 + t155 * t243 (t231 * t154 - t155 * t229) * t192 + (-t256 + t322 + (-t154 * t229 - t155 * t231) * qJD(4)) * t200, t107 * t241 + t155 * t189 + t200 * t158 + t181 * t243, -t154 * t244 + t200 * t98, t154 * t189 - t181 * t244 - t200 * t308 + t241 * t283, t181 * t189 - t140, t105 * t311 - t121 * t154 + t131 * t244 + t152 * t283 + t86 * t177 + t50 * t181 + t74 * t189 - t241 * t41, t105 * t310 - t152 * t107 + t121 * t155 + t131 * t243 - t87 * t177 - t49 * t181 - t75 * t189 + t241 * t40, t49 * t154 - t87 * t283 - t50 * t155 + t86 * t107 + t251 * t192 + (-t40 * t229 - t41 * t231 + (t229 * t74 - t231 * t75) * qJD(4)) * t200, t131 * t121 + t40 * t87 + t41 * t86 + t75 * t49 + t74 * t50 + t323, t11, t237, t10, t252, -t236, t88, t120 * t48 + t72 * t126 + t8 * t176 + t42 * t177 + t19 * t189 + t241 * t270 + t89 * t58 + t83 * t91, -t120 * t47 + t72 * t127 - t7 * t176 - t177 * t336 - t20 * t189 - t241 * t271 + t246 * t83 - t89 * t57, t126 * t271 + t127 * t270 + t19 * t57 - t20 * t58 - t246 * t8 - t336 * t48 + t42 * t47 - t7 * t91, t120 * t72 + t19 * t8 + t20 * t7 - t270 * t42 - t271 * t336 + t83 * t89, t11, t10, -t237, t88, t236, t252, t12 * t91 + t9 * t126 - t14 * t189 - t6 * t176 - t36 * t177 + t2 * t241 + t44 * t58 + t59 * t48, -t1 * t126 + t127 * t2 - t14 * t57 - t15 * t58 + t246 * t6 - t35 * t48 - t36 * t47 - t5 * t91, -t1 * t241 - t12 * t246 - t9 * t127 + t15 * t189 + t5 * t176 + t35 * t177 + t44 * t57 + t59 * t47, t1 * t35 + t12 * t44 + t14 * t6 + t15 * t5 + t2 * t36 + t59 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, t299 * t234, 0, t284, 0, 0, t234 * pkin(1) * t230, pkin(1) * t305, 0, 0, t312, -t186 + t349, -t210 + (t212 + t187) * qJD(2), -t312, 0, 0, t141 * qJD(2) - t187 * t288 - t206 * t298 - t105, t142 * qJD(2) + t206 * t187 - t288 * t298 - t106 (t139 - t141) * t298 + (t142 - t138) * t187 + (-t227 * t177 - t324 * t238) * pkin(2), t138 * t141 - t139 * t142 + (-t324 * t105 + t106 * t227 - t206 * t296) * pkin(2), t155 * t265 - t322 (-t107 + t319) * t231 - t367 + t326, t181 * t265 + t308 - t316, -t154 * t314 - t256, t250 - t318, -t181 * t298, t219 * t283 - t105 * t231 - t74 * t298 + t141 * t154 + (-t217 * t294 - t81) * t181 + t239 * t229, t105 * t229 - t219 * t107 - t141 * t155 + t75 * t298 + (t217 * t295 + t82) * t181 + t239 * t231, -t82 * t154 + t81 * t155 + (-t217 * t283 + t40 - t74 * t187 + (t217 * t155 - t74) * qJD(4)) * t231 + (-t217 * t107 - t75 * t187 - t41 + (-t154 * t217 - t75) * qJD(4)) * t229, t105 * t219 - t131 * t141 - t74 * t81 - t75 * t82 + (qJD(4) * t251 - t41 * t229 + t40 * t231) * t217, t13, -t376, t33, t242, t378, -t315, -t339 * t176 - t19 * t298 + t72 * t202 + t207 * t48 + t257 * t91 + t365 * t89 + t321, t338 * t176 + t20 * t298 + t72 * t203 - t207 * t47 + t246 * t257 - t300 * t89 - t320, t300 * t19 - t20 * t365 + t202 * t271 + t203 * t270 + t246 * t339 + t31 * t91 + t261, -t135 * t271 - t339 * t19 - t338 * t20 + t72 * t207 - t245 * t270 + t257 * t89, t13, t33, t376, -t315, -t378, t242, t128 * t48 + t14 * t298 + t340 * t176 + t9 * t202 - t337 * t91 + t365 * t44 + t321, -t1 * t202 - t300 * t14 - t15 * t365 + t2 * t203 + t24 * t91 - t246 * t340 + t261, t128 * t47 - t15 * t298 + t341 * t176 - t9 * t203 + t246 * t337 + t300 * t44 + t320, t1 * t135 + t9 * t128 - t340 * t14 + t341 * t15 - t2 * t245 - t337 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264 * qJD(2), -t210 + (t212 - t187) * qJD(2), -t186 - t349, t138 * t298 + t139 * t187 + t215, 0, 0, 0, 0, 0, 0, t250 + t318, -t181 ^ 2 * t231 - t308 - t316 (t107 + t319) * t231 + t367 + t326, -t131 * t298 + t358 * t229 + t357 * t231, 0, 0, 0, 0, 0, 0, t379, -t375, t377, -t19 * t365 - t300 * t20 + t202 * t270 - t203 * t271 - t298 * t89, 0, 0, 0, 0, 0, 0, t379, t377, t375, t1 * t203 + t14 * t365 - t15 * t300 + t2 * t202 - t298 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t154 ^ 2 + t155 ^ 2, -t154 * t181 - t107, t317, t155 * t181 - t283, t177, -t131 * t155 + t357, -t131 * t154 - t358, 0, 0, t369, -t287, t362, -t369, -t368, t177, t26 * t176 + (-t155 * t91 - t176 * t293 + t348 * t177) * pkin(4) + t353, t27 * t176 + t371 + (-t155 * t246 - t176 * t277 - t177 * t228) * pkin(4) + t271, -t19 * t91 + t20 * t246 - t26 * t246 + t27 * t91 + (t348 * t47 - t228 * t48 + (t228 * t246 - t348 * t91) * qJD(5)) * pkin(4), t19 * t26 - t20 * t27 + (-t348 * t270 - t155 * t89 - t228 * t271 + (-t19 * t228 + t348 * t20) * qJD(5)) * pkin(4), t369, t362, t287, t177, t368, -t369, -t176 * t259 - t223 * t177 - t52 * t91 - t240, -t218 * t48 - t223 * t47 + (t15 + t259) * t246 + (t14 - t325) * t91, t176 * t325 + t218 * t177 + t246 * t52 + t1 - t372, t1 * t218 + t14 * t259 + t15 * t325 + t2 * t223 - t44 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, -t287, t362, -t369, -t368, t177, t332 + t353, t249 + t371, 0, 0, t369, t362, t287, t177, t368, -t369, -t67 * t91 + t171 - t240 + t332, pkin(5) * t47 - t48 * qJ(6) + (t15 - t20) * t246 + (t14 - t302) * t91, t246 * t67 + 0.2e1 * t164 + 0.2e1 * t166 - t249 - t372, -pkin(5) * t2 + qJ(6) * t1 - t14 * t20 + t15 * t302 - t44 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t298 + t369, t362, -t176 ^ 2 - t350, -t15 * t176 + t240;];
tauc_reg  = t3;
