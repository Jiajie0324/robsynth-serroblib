% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RPRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPRR11_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR11_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR11_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRPRR11_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:15:13
% EndTime: 2019-03-09 04:15:36
% DurationCPUTime: 8.90s
% Computational Cost: add. (15152->492), mult. (50564->732), div. (0->0), fcn. (44615->14), ass. (0->236)
t233 = sin(qJ(6));
t236 = cos(qJ(6));
t237 = cos(qJ(5));
t227 = sin(pkin(12));
t229 = sin(pkin(6));
t231 = cos(pkin(12));
t235 = sin(qJ(3));
t238 = cos(qJ(3));
t228 = sin(pkin(7));
t335 = cos(pkin(6));
t287 = t335 * t228;
t232 = cos(pkin(7));
t321 = t232 * t235;
t177 = t229 * (t227 * t238 + t231 * t321) + t235 * t287;
t171 = t177 * qJD(1);
t226 = sin(pkin(13));
t154 = t226 * t171;
t285 = qJD(1) * t335;
t312 = qJD(1) * t229;
t298 = t231 * t312;
t188 = t228 * t298 - t232 * t285 - qJD(3);
t230 = cos(pkin(13));
t283 = t188 * t230 + t154;
t123 = t237 * t283;
t126 = t171 * t230 - t188 * t226;
t234 = sin(qJ(5));
t90 = t126 * t234 + t123;
t86 = qJD(6) + t90;
t360 = t86 ^ 2;
t299 = t227 * t312;
t272 = t238 * t287;
t320 = t232 * t238;
t303 = t231 * t320;
t356 = t229 * t303 + t272;
t352 = qJD(1) * t356 - t235 * t299;
t151 = t352 * qJD(3);
t202 = t226 * t237 + t230 * t234;
t351 = t151 * t202;
t355 = t237 * t126 - t234 * t283;
t60 = qJD(5) * t355 + t351;
t361 = -t233 * t360 + t236 * t60;
t161 = qJD(5) - t352;
t359 = t161 * t90;
t68 = -t236 * t161 + t233 * t355;
t358 = t355 * t68;
t70 = t161 * t233 + t236 * t355;
t357 = t355 * t70;
t319 = t237 * t230;
t201 = t226 * t234 - t319;
t115 = t201 * t352;
t195 = t201 * qJD(5);
t316 = t115 - t195;
t315 = t161 * t202;
t350 = t229 ^ 2 * (t227 ^ 2 + t231 ^ 2);
t340 = pkin(10) + qJ(4);
t210 = t340 * t226;
t211 = t340 * t230;
t255 = -t210 * t237 - t211 * t234;
t343 = pkin(10) * t230;
t277 = pkin(1) * t285;
t191 = qJ(2) * t298 + t227 * t277;
t324 = t229 * t231;
t243 = (t232 * t324 + t287) * pkin(9);
t153 = qJD(1) * t243 + t191;
t215 = t231 * t277;
t328 = t227 * t229;
t241 = t335 * pkin(2) + (-pkin(9) * t232 - qJ(2)) * t328;
t162 = qJD(1) * t241 + t215;
t187 = (-pkin(9) * t227 * t228 - pkin(2) * t231 - pkin(1)) * t229;
t181 = qJD(1) * t187 + qJD(2);
t107 = -t235 * t153 + (t232 * t162 + t228 * t181) * t238;
t118 = pkin(3) * t171 - qJ(4) * t352;
t64 = -t107 * t226 + t230 * t118;
t49 = pkin(4) * t171 - t343 * t352 + t64;
t333 = t352 * t226;
t65 = t230 * t107 + t226 * t118;
t56 = -pkin(10) * t333 + t65;
t349 = qJD(4) * t201 - qJD(5) * t255 + t234 * t49 + t237 * t56;
t183 = -t210 * t234 + t211 * t237;
t348 = -qJD(4) * t202 - qJD(5) * t183 + t234 * t56 - t237 * t49;
t170 = t177 * qJD(3);
t152 = qJD(1) * t170;
t347 = -qJD(5) + t161;
t119 = -t162 * t228 + t232 * t181;
t83 = -pkin(3) * t352 - qJ(4) * t171 + t119;
t326 = t228 * t235;
t108 = t238 * t153 + t162 * t321 + t181 * t326;
t85 = -qJ(4) * t188 + t108;
t46 = -t226 * t85 + t230 * t83;
t29 = -pkin(4) * t352 - pkin(10) * t126 + t46;
t47 = t226 * t83 + t230 * t85;
t31 = -t283 * pkin(10) + t47;
t12 = t234 * t29 + t237 * t31;
t323 = t230 * t151;
t304 = qJD(1) * qJD(2);
t291 = t229 * t304;
t276 = t227 * t291;
t254 = t232 * t276;
t275 = t231 * t291;
t309 = qJD(3) * t238;
t292 = t232 * t309;
t294 = t228 * t309;
t302 = t162 * t292 + t181 * t294 + t238 * t275;
t344 = -t235 * (qJD(3) * t153 + t254) + t302;
t72 = -qJD(4) * t188 + t344;
t94 = pkin(3) * t152 - qJ(4) * t151 - qJD(4) * t171 + t228 * t276;
t44 = -t226 * t72 + t230 * t94;
t30 = pkin(4) * t152 - pkin(10) * t323 + t44;
t334 = t151 * t226;
t45 = t226 * t94 + t230 * t72;
t33 = -pkin(10) * t334 + t45;
t289 = t234 * t33 - t237 * t30;
t4 = -pkin(5) * t152 + qJD(5) * t12 + t289;
t346 = (pkin(5) * t355 + pkin(11) * t86) * t86 + t4;
t222 = -t230 * pkin(4) - pkin(3);
t166 = pkin(5) * t201 - pkin(11) * t202 + t222;
t74 = pkin(4) * t333 + t108;
t11 = -t234 * t31 + t237 * t29;
t9 = -pkin(5) * t161 - t11;
t345 = -t9 * qJD(6) * t202 - t166 * t60 + (-pkin(5) * t315 + pkin(11) * t316 + qJD(6) * t183 + t74) * t86;
t59 = -qJD(5) * t123 + t151 * t319 + (-qJD(5) * t126 - t334) * t234;
t22 = qJD(6) * t70 - t236 * t152 + t233 * t59;
t310 = qJD(3) * t235;
t293 = t232 * t310;
t295 = t228 * t310;
t78 = t153 * t309 + t162 * t293 + t181 * t295 + t235 * t275 + t238 * t254;
t66 = pkin(4) * t334 + t78;
t16 = pkin(5) * t60 - pkin(11) * t59 + t66;
t10 = pkin(11) * t161 + t12;
t84 = t188 * pkin(3) + qJD(4) - t107;
t61 = pkin(4) * t283 + t84;
t20 = t90 * pkin(5) - pkin(11) * t355 + t61;
t268 = t10 * t233 - t20 * t236;
t307 = qJD(5) * t237;
t308 = qJD(5) * t234;
t250 = t234 * t30 + t237 * t33 + t29 * t307 - t308 * t31;
t3 = pkin(11) * t152 + t250;
t1 = -qJD(6) * t268 + t16 * t233 + t236 * t3;
t342 = t68 * t86;
t341 = t70 * t86;
t192 = t228 * t324 - t232 * t335;
t130 = t177 * t230 - t192 * t226;
t327 = t227 * t235;
t176 = t229 * t327 - t356;
t300 = pkin(1) * t335;
t314 = qJ(2) * t324 + t227 * t300;
t174 = t243 + t314;
t219 = t231 * t300;
t178 = t219 + t241;
t258 = t178 * t232 + t187 * t228;
t103 = -qJ(4) * t192 + t174 * t238 + t235 * t258;
t127 = -t178 * t228 + t232 * t187;
t98 = pkin(3) * t176 - qJ(4) * t177 + t127;
t53 = -t103 * t226 + t230 * t98;
t38 = pkin(4) * t176 - pkin(10) * t130 + t53;
t129 = t177 * t226 + t192 * t230;
t54 = t230 * t103 + t226 * t98;
t43 = -pkin(10) * t129 + t54;
t262 = t234 * t38 + t237 * t43;
t305 = qJD(6) * t236;
t306 = qJD(6) * t233;
t21 = t233 * t152 + t161 * t305 + t236 * t59 - t306 * t355;
t338 = t21 * t233;
t337 = t233 * t60;
t336 = pkin(5) * t171 - t348;
t169 = (t272 + (t303 - t327) * t229) * qJD(3);
t311 = qJD(2) * t229;
t297 = t227 * t311;
t279 = t228 * t297;
t111 = pkin(3) * t170 - qJ(4) * t169 - qJD(4) * t177 + t279;
t278 = t232 * t297;
t296 = t231 * t311;
t301 = t178 * t292 + t187 * t294 + t238 * t296;
t79 = -qJD(4) * t192 + (-qJD(3) * t174 - t278) * t235 + t301;
t51 = t226 * t111 + t230 * t79;
t332 = t169 * t226;
t330 = t202 * t236;
t329 = t226 * t238;
t325 = t228 * t238;
t322 = t230 * t238;
t186 = (-t227 * t321 + t231 * t238) * t312;
t281 = t228 * t299;
t138 = -t186 * t226 + t230 * t281;
t139 = t186 * t230 + t226 * t281;
t193 = -t226 * t326 + t230 * t232;
t194 = t226 * t232 + t230 * t326;
t256 = t193 * t237 - t194 * t234;
t318 = -qJD(5) * t256 + t138 * t234 + t139 * t237 + t201 * t294;
t147 = t193 * t234 + t194 * t237;
t317 = qJD(5) * t147 + t138 * t237 - t139 * t234 + t202 * t294;
t50 = t230 * t111 - t226 * t79;
t284 = t236 * t86;
t239 = qJD(1) ^ 2;
t274 = t229 * t239 * t335;
t185 = (t227 * t320 + t231 * t235) * t312;
t270 = -t185 + t295;
t8 = t10 * t236 + t20 * t233;
t14 = pkin(11) * t176 + t262;
t109 = t237 * t129 + t130 * t234;
t110 = -t129 * t234 + t130 * t237;
t106 = pkin(3) * t192 + t235 * t174 - t238 * t258;
t67 = pkin(4) * t129 + t106;
t23 = pkin(5) * t109 - pkin(11) * t110 + t67;
t267 = t14 * t236 + t23 * t233;
t266 = -t14 * t233 + t23 * t236;
t265 = -t226 * t46 + t230 * t47;
t35 = pkin(4) * t170 - t169 * t343 + t50;
t42 = -pkin(10) * t332 + t51;
t264 = -t234 * t42 + t237 * t35;
t263 = -t234 * t43 + t237 * t38;
t95 = t174 * t309 + t178 * t293 + t187 * t295 + t235 * t296 + t238 * t278;
t260 = t106 * t151 + t84 * t169;
t76 = t110 * t236 + t176 * t233;
t75 = t110 * t233 - t176 * t236;
t257 = (-qJ(2) * t299 + t215) * t227 - t191 * t231;
t253 = qJD(6) * t325 + t318;
t73 = pkin(4) * t332 + t95;
t249 = t234 * t35 + t237 * t42 + t38 * t307 - t308 * t43;
t248 = -0.2e1 * t285 * t311;
t100 = -t115 * t236 + t171 * t233;
t247 = -t236 * t195 - t202 * t306 - t100;
t246 = -qJD(6) * t147 + t270;
t245 = -pkin(11) * t60 + (t11 + t9) * t86;
t242 = -pkin(3) * t151 - qJ(4) * t152 - (-qJD(4) + t84) * t352;
t2 = -qJD(6) * t8 + t236 * t16 - t233 * t3;
t240 = -t183 * t60 - t9 * t195 + t4 * t202 + (pkin(11) * t171 - qJD(6) * t166 + t349) * t86;
t99 = -t115 * t233 - t236 * t171;
t63 = qJD(5) * t110 + t169 * t202;
t62 = -qJD(5) * t109 - t169 * t201;
t25 = qJD(6) * t76 - t170 * t236 + t233 * t62;
t24 = -qJD(6) * t75 + t170 * t233 + t236 * t62;
t17 = pkin(5) * t63 - pkin(11) * t62 + t73;
t13 = -pkin(5) * t176 - t263;
t6 = -pkin(5) * t170 + qJD(5) * t262 - t264;
t5 = pkin(11) * t170 + t249;
t7 = [0, 0, 0, t227 * t248, t231 * t248, 0.2e1 * t304 * t350 ((t231 * t314 + (qJ(2) * t328 - t219) * t227) * qJD(1) - t257) * t311, t151 * t177 + t169 * t171, -t151 * t176 - t152 * t177 + t169 * t352 - t170 * t171, -t151 * t192 - t169 * t188, t152 * t192 + t170 * t188, 0, t119 * t170 + t127 * t152 + t188 * t95 + t192 * t78 + (qJD(1) * t176 - t352) * t279 (-t174 * t310 + t301) * t188 + (-t153 * t310 + t302) * t192 + t127 * t151 + t119 * t169 + (-t188 * t321 + t171 * t228 + (t177 * t228 - t192 * t321) * qJD(1)) * t297, t78 * t129 + t53 * t152 + t46 * t170 + t44 * t176 + t226 * t260 + t283 * t95 - t352 * t50, t126 * t95 + t130 * t78 - t152 * t54 - t170 * t47 - t176 * t45 + t230 * t260 + t352 * t51, -t51 * t283 - t45 * t129 - t50 * t126 - t44 * t130 + (-t47 * t226 - t46 * t230) * t169 + (-t54 * t226 - t53 * t230) * t151, t106 * t78 + t44 * t53 + t45 * t54 + t46 * t50 + t47 * t51 + t84 * t95, t110 * t59 + t355 * t62, -t109 * t59 - t110 * t60 - t355 * t63 - t62 * t90, t110 * t152 + t161 * t62 + t170 * t355 + t176 * t59, -t109 * t152 - t161 * t63 - t170 * t90 - t176 * t60, t152 * t176 + t161 * t170, t264 * t161 + t263 * t152 - t289 * t176 + t11 * t170 + t73 * t90 + t67 * t60 + t66 * t109 + t61 * t63 + (-t12 * t176 - t161 * t262) * qJD(5), t66 * t110 - t12 * t170 - t262 * t152 - t249 * t161 - t250 * t176 + t355 * t73 + t67 * t59 + t61 * t62, t21 * t76 + t24 * t70, -t21 * t75 - t22 * t76 - t24 * t68 - t25 * t70, t109 * t21 + t24 * t86 + t60 * t76 + t63 * t70, -t109 * t22 - t25 * t86 - t60 * t75 - t63 * t68, t109 * t60 + t63 * t86 (-qJD(6) * t267 + t17 * t236 - t233 * t5) * t86 + t266 * t60 + t2 * t109 - t268 * t63 + t6 * t68 + t13 * t22 + t4 * t75 + t9 * t25 -(qJD(6) * t266 + t17 * t233 + t236 * t5) * t86 - t267 * t60 - t1 * t109 - t8 * t63 + t6 * t70 + t13 * t21 + t4 * t76 + t9 * t24; 0, 0, 0, t227 * t274, t231 * t274, -t239 * t350, t257 * t312, 0, 0, 0, 0, 0, t152 * t232 + t188 * t270 + t281 * t352, -t171 * t281 + t151 * t232 + (-t186 + t294) * t188, t193 * t152 + t138 * t352 - t185 * t283 + (-t151 * t329 + (t235 * t283 + t329 * t352) * qJD(3)) * t228, -t126 * t185 - t139 * t352 - t152 * t194 + (-t151 * t322 + (t126 * t235 + t322 * t352) * qJD(3)) * t228, t139 * t283 + t138 * t126 + (-t193 * t230 - t194 * t226) * t151 + (t226 * t126 - t230 * t283) * t294, -t138 * t46 - t139 * t47 - t185 * t84 + t193 * t44 + t194 * t45 + (-t238 * t78 + (t235 * t84 + t238 * t265) * qJD(3)) * t228, 0, 0, 0, 0, 0, t256 * t152 - t185 * t90 + (-t238 * t60 + t310 * t90) * t228 - t317 * t161, -t147 * t152 - t185 * t355 + (-t238 * t59 + t310 * t355) * t228 + t318 * t161, 0, 0, 0, 0, 0 (-t147 * t233 - t236 * t325) * t60 - t256 * t22 + (t233 * t253 + t236 * t246) * t86 + t317 * t68 -(t147 * t236 - t233 * t325) * t60 - t256 * t21 + (-t233 * t246 + t236 * t253) * t86 + t317 * t70; 0, 0, 0, 0, 0, 0, 0, -t171 * t352, t171 ^ 2 - t352 ^ 2, t188 * t352 + t151, -t171 * t188 - t152, 0, -t108 * t188 - t119 * t171 - t78, -t107 * t188 - t119 * t352 - t344, -t108 * t283 - t46 * t171 + t226 * t242 - t78 * t230 + t352 * t64, -t108 * t126 + t171 * t47 + t226 * t78 + t230 * t242 - t352 * t65, t64 * t126 + t65 * t154 + (-qJD(4) * t283 + t65 * t188 + t352 * t46 + t45) * t230 + (qJD(4) * t126 + t352 * t47 - t44) * t226, -pkin(3) * t78 - t108 * t84 - t46 * t64 - t47 * t65 + t265 * qJD(4) + (-t44 * t226 + t45 * t230) * qJ(4), t202 * t59 + t316 * t355, -t201 * t59 - t202 * t60 - t315 * t355 - t316 * t90, t152 * t202 + t161 * t316 - t171 * t355, -t152 * t201 - t161 * t315 + t171 * t90, -t161 * t171, -t11 * t171 + t152 * t255 + t348 * t161 + t66 * t201 + t222 * t60 + t315 * t61 - t74 * t90, t12 * t171 - t183 * t152 + t349 * t161 + t66 * t202 + t222 * t59 + t316 * t61 - t355 * t74, t21 * t330 + t247 * t70, t100 * t68 + t70 * t99 - (-t233 * t70 - t236 * t68) * t195 + (-t338 - t22 * t236 + (t233 * t68 - t236 * t70) * qJD(6)) * t202, t201 * t21 + t247 * t86 + t315 * t70 + t330 * t60, -t202 * t337 - t201 * t22 - t315 * t68 + (t233 * t195 - t202 * t305 + t99) * t86, t201 * t60 + t315 * t86, t2 * t201 - t22 * t255 + t240 * t233 - t236 * t345 - t268 * t315 + t336 * t68 - t9 * t99, -t1 * t201 - t9 * t100 - t21 * t255 + t233 * t345 + t240 * t236 - t315 * t8 + t336 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126 * t352 + t334, t283 * t352 + t323, -t126 ^ 2 - t283 ^ 2, t126 * t46 + t283 * t47 + t78, 0, 0, 0, 0, 0, t161 * t355 + t60, t59 - t359, 0, 0, 0, 0, 0, -t358 + t361, -t236 * t360 - t337 - t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355 * t90, t355 ^ 2 - t90 ^ 2, t59 + t359, t347 * t355 - t351, t152, t347 * t12 - t355 * t61 - t289, t11 * t161 + t61 * t90 - t250, t284 * t70 + t338 (t21 - t342) * t236 + (-t22 - t341) * t233, t284 * t86 + t337 - t357, t358 + t361, -t86 * t355, -pkin(5) * t22 - t12 * t68 + t245 * t233 - t236 * t346 + t268 * t355, -pkin(5) * t21 - t12 * t70 + t233 * t346 + t245 * t236 + t355 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70 * t68, -t68 ^ 2 + t70 ^ 2, t21 + t342, -t22 + t341, t60, -t70 * t9 + t8 * t86 + t2, -t268 * t86 + t68 * t9 - t1;];
tauc_reg  = t7;
