% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 20:26
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRPRR11_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR11_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR11_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR11_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR11_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRPRR11_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:20:28
% EndTime: 2019-05-05 20:22:55
% DurationCPUTime: 154.33s
% Computational Cost: add. (1647847->1302), mult. (5241170->2182), div. (0->0), fcn. (4534548->16), ass. (0->953)
t1371 = sin(pkin(13));
t1372 = sin(pkin(12));
t1373 = sin(pkin(7));
t1374 = sin(pkin(6));
t1376 = cos(pkin(12));
t1385 = cos(qJ(3));
t1378 = cos(pkin(6));
t1381 = sin(qJ(3));
t1577 = t1378 * t1381;
t1377 = cos(pkin(7));
t1580 = t1377 * t1381;
t1403 = t1373 * t1577 + (t1372 * t1385 + t1376 * t1580) * t1374;
t1323 = t1403 * qJD(1);
t1581 = t1377 * t1378;
t1583 = t1374 * t1376;
t1649 = t1373 * t1583 - t1581;
t1334 = qJD(1) * t1649 - qJD(3);
t1375 = cos(pkin(13));
t1301 = -t1371 * t1323 - t1334 * t1375;
t1302 = t1323 * t1375 - t1334 * t1371;
t1250 = t1301 * t1302;
t1570 = qJDD(1) * t1374;
t1550 = t1372 * t1570;
t1582 = t1374 * t1377;
t1553 = t1376 * t1582;
t1585 = t1373 * t1385;
t1660 = -t1378 * t1585 - t1385 * t1553;
t1446 = qJDD(1) * t1660 + t1381 * t1550;
t1285 = qJD(3) * t1323 + t1446;
t1651 = t1250 + t1285;
t1668 = t1371 * t1651;
t1667 = t1375 * t1651;
t1379 = sin(qJ(6));
t1380 = sin(qJ(5));
t1384 = cos(qJ(5));
t1242 = t1301 * t1380 + t1302 * t1384;
t1589 = t1372 * t1381;
t1321 = (t1374 * t1589 + t1660) * qJD(1);
t1315 = qJD(5) + t1321;
t1383 = cos(qJ(6));
t1213 = t1242 * t1379 - t1383 * t1315;
t1215 = t1242 * t1383 + t1315 * t1379;
t1141 = t1215 * t1213;
t1402 = t1403 * qJDD(1);
t1286 = -qJD(3) * t1321 + t1402;
t1569 = qJDD(1) * t1376;
t1548 = t1374 * t1569;
t1568 = qJDD(1) * t1378;
t1436 = -t1373 * t1548 + t1377 * t1568 + qJDD(3);
t1264 = -t1286 * t1371 + t1375 * t1436;
t1265 = t1375 * t1286 + t1371 * t1436;
t1544 = -t1384 * t1264 + t1265 * t1380;
t1146 = -qJD(5) * t1242 - t1544;
t1416 = qJDD(6) - t1146;
t1654 = -t1141 + t1416;
t1666 = t1379 * t1654;
t1240 = -t1384 * t1301 + t1302 * t1380;
t1181 = t1242 * t1240;
t1280 = qJDD(5) + t1285;
t1653 = -t1181 + t1280;
t1665 = t1380 * t1653;
t1664 = t1383 * t1654;
t1663 = t1384 * t1653;
t1305 = t1321 * t1334;
t1248 = t1305 + t1286;
t1382 = sin(qJ(1));
t1386 = cos(qJ(1));
t1359 = t1382 * g(1) - t1386 * g(2);
t1637 = pkin(9) * t1373;
t1641 = pkin(2) * t1376;
t1454 = t1372 * t1637 + t1641;
t1546 = t1378 * g(3) - qJDD(2);
t1366 = t1372 ^ 2;
t1369 = t1376 ^ 2;
t1572 = t1366 + t1369;
t1648 = qJD(1) ^ 2;
t1584 = t1374 * t1648;
t1587 = t1373 * t1378;
t1632 = qJ(2) * t1374;
t1394 = ((-pkin(1) - t1454) * qJDD(1) - t1359) * t1374 + (t1372 * pkin(2) * t1378 - t1632 + (-t1376 * t1587 - t1572 * t1582) * pkin(9)) * t1584 - t1546;
t1453 = qJDD(1) * pkin(1) + t1359;
t1435 = t1378 * t1453;
t1567 = pkin(2) * t1568;
t1400 = -g(3) * t1583 + t1376 * t1435 + t1567;
t1360 = t1386 * g(1) + t1382 * g(2);
t1410 = qJ(2) * t1570 - t1360;
t1541 = pkin(9) * t1550;
t1398 = -t1372 * t1410 - t1377 * t1541 + t1400;
t1396 = t1373 * t1398 - t1377 * t1394;
t1393 = -qJ(4) * t1248 - t1396;
t1543 = -t1323 * t1334 + t1285;
t1662 = t1543 * pkin(3) + t1393;
t1223 = t1315 * t1240;
t1412 = qJD(5) * t1240 - t1264 * t1380 - t1265 * t1384;
t1661 = t1412 + t1223;
t1642 = 2 * qJD(2);
t1448 = t1553 + t1587;
t1419 = t1448 * pkin(9);
t1445 = t1374 * t1454;
t1605 = t1321 * t1323;
t1406 = t1436 - t1605;
t1658 = t1381 * t1406;
t1657 = t1385 * t1406;
t1588 = t1373 * t1374;
t1557 = t1372 * t1588;
t1565 = qJ(2) * t1583;
t1590 = t1372 * t1374;
t1634 = t1372 * pkin(1);
t1656 = (t1557 * t1642 - t1373 * (pkin(2) * t1583 * t1590 + t1378 * t1565 + t1634 + (t1378 * t1448 + t1557 * t1590) * pkin(9)) * qJD(1)) * qJD(1);
t1368 = t1374 ^ 2;
t1370 = t1378 ^ 2;
t1556 = t1372 * t1376 * t1648;
t1655 = (t1368 + t1370) * t1374 * t1556;
t1085 = -t1213 * qJD(6) + t1379 * t1280 - t1383 * t1412;
t1233 = qJD(6) + t1240;
t1166 = t1233 * t1213;
t1048 = -t1166 + t1085;
t1268 = t1321 * t1301;
t1203 = t1268 - t1265;
t1202 = t1268 + t1265;
t1281 = pkin(3) * t1321 - qJ(4) * t1323;
t1650 = t1436 * qJ(4) - t1321 * t1281;
t1545 = -t1383 * t1280 - t1379 * t1412;
t1045 = t1215 * (qJD(6) - t1233) + t1545;
t1110 = (qJD(5) - t1315) * t1242 + t1544;
t1211 = t1213 ^ 2;
t1212 = t1215 ^ 2;
t1232 = t1233 ^ 2;
t1238 = t1240 ^ 2;
t1239 = t1242 ^ 2;
t1647 = t1301 ^ 2;
t1298 = t1302 ^ 2;
t1646 = t1315 ^ 2;
t1645 = t1321 ^ 2;
t1320 = t1323 ^ 2;
t1644 = t1334 ^ 2;
t1643 = -2 * qJD(2);
t1640 = pkin(3) * t1381;
t1639 = pkin(3) * t1385;
t1638 = pkin(5) * t1380;
t1636 = pkin(9) * t1377;
t1635 = t1644 * pkin(3);
t1633 = t1374 * g(3);
t1179 = pkin(5) * t1240 - pkin(11) * t1242;
t1397 = t1381 * ((t1376 * t1581 - t1588) * t1632 - t1649 * t1419);
t1399 = -pkin(2) * t1548 - t1374 * t1453 - t1546;
t1551 = qJ(2) + t1636;
t1363 = g(3) * t1590;
t1538 = t1378 * t1551;
t1231 = t1376 * t1410 + t1372 * t1435 - t1363 + qJDD(1) * t1419 + ((-t1376 * pkin(1) - pkin(2) * t1370) * qJD(1) + (t1376 * t1642 + (t1372 * t1538 - t1376 * t1445) * qJD(1)) * t1374) * qJD(1);
t1576 = t1385 * t1231;
t1132 = t1576 + (t1373 * t1399 + t1377 * t1400) * t1381 + t1648 * t1397 + (t1377 * (t1648 * pkin(1) + t1360) + ((-pkin(9) * t1373 ^ 2 - t1377 * t1551) * qJDD(1) + (pkin(2) * qJD(1) * t1448 + t1377 * t1643) * qJD(1)) * t1374) * t1589;
t1389 = t1132 - t1635 + t1650;
t1391 = t1656 + t1662;
t1627 = qJD(4) * t1302;
t1388 = pkin(4) * t1651 + pkin(10) * t1203 - t1371 * t1389 + t1375 * t1391 - 0.2e1 * t1627;
t1006 = 0.2e1 * qJD(4) * t1301 + t1371 * t1391 + t1375 * t1389;
t1263 = pkin(4) * t1321 - pkin(10) * t1302;
t980 = -pkin(4) * t1647 + pkin(10) * t1264 - t1263 * t1321 + t1006;
t889 = t1380 * t1388 + t1384 * t980;
t883 = -pkin(5) * t1646 + pkin(11) * t1280 - t1179 * t1240 + t889;
t1579 = t1377 * t1385;
t1131 = t1231 * t1381 - (t1567 + (t1435 - t1633) * t1376 + (-t1551 * t1570 + t1360) * t1372 + ((t1370 * t1637 + t1634) * qJD(1) + (t1372 * t1643 + (t1372 * t1445 + t1376 * t1538) * qJD(1)) * t1374) * qJD(1)) * t1579 - t1394 * t1585;
t1097 = -t1436 * pkin(3) - t1644 * qJ(4) + t1281 * t1323 + qJDD(4) + t1131;
t1058 = -t1264 * pkin(4) - t1647 * pkin(10) + t1263 * t1302 + t1097;
t948 = t1661 * pkin(11) + (t1242 * t1315 - t1146) * pkin(5) + t1058;
t821 = t1379 * t948 + t1383 * t883;
t888 = t1380 * t980 - t1384 * t1388;
t816 = t1380 * t889 - t1384 * t888;
t1631 = t1371 * t816;
t1630 = t1375 * t816;
t882 = -t1280 * pkin(5) - pkin(11) * t1646 + t1179 * t1242 + t888;
t1629 = t1379 * t882;
t1628 = t1383 * t882;
t1626 = t1058 * t1380;
t1625 = t1058 * t1384;
t1075 = t1141 + t1416;
t1624 = t1075 * t1379;
t1623 = t1075 * t1383;
t1622 = t1097 * t1371;
t1621 = t1097 * t1375;
t1153 = t1181 + t1280;
t1620 = t1153 * t1380;
t1619 = t1153 * t1384;
t1185 = t1396 - t1656;
t1618 = t1185 * t1381;
t1617 = t1185 * t1385;
t1206 = -t1250 + t1285;
t1616 = t1206 * t1371;
t1615 = t1206 * t1375;
t1614 = t1233 * t1379;
t1613 = t1233 * t1383;
t1270 = -t1436 - t1605;
t1612 = t1270 * t1381;
t1611 = t1270 * t1385;
t1610 = t1285 * t1381;
t1609 = t1302 * t1321;
t1608 = t1315 * t1380;
t1607 = t1315 * t1384;
t1604 = t1321 * t1371;
t1603 = t1321 * t1375;
t1602 = t1321 * t1385;
t1600 = t1323 * t1381;
t1407 = qJ(2) * t1584 + t1453;
t1324 = t1374 * t1407 + t1546;
t1599 = t1324 * t1372;
t1598 = t1324 * t1376;
t1351 = t1368 * t1556;
t1339 = t1351 + t1568;
t1597 = t1339 * t1372;
t1596 = t1339 * t1376;
t1340 = -t1351 + t1568;
t1595 = t1340 * t1372;
t1594 = t1340 * t1376;
t1593 = t1366 * t1368;
t1592 = t1368 * t1648;
t1591 = t1368 * t1369;
t1586 = t1373 * t1381;
t1578 = t1378 * t1648;
t1575 = qJD(3) - t1334;
t1571 = qJDD(1) * t1368;
t1566 = -pkin(5) * t1384 - pkin(4);
t1564 = t1380 * t1141;
t1563 = t1384 * t1141;
t1562 = t1381 * t1181;
t1561 = t1385 * t1181;
t1560 = t1381 * t1250;
t1559 = t1385 * t1250;
t1558 = t1371 * t1580;
t1552 = t1374 * t1578;
t1549 = t1372 * t1569;
t1547 = t1374 * t1568;
t820 = t1379 * t883 - t1383 * t948;
t817 = t1380 * t888 + t1384 * t889;
t1390 = ((t1375 * (t1419 + t1565) * t1587 + t1371 * t1397 + ((t1368 * t1641 + pkin(1)) * t1558 + (t1375 * pkin(1) + (pkin(2) * t1371 * t1577 + t1375 * t1445) * t1374) * t1373) * t1372) * qJD(1) + (-t1373 * t1375 - t1558) * t1590 * t1642) * qJD(1) + 0.2e1 * t1627;
t1392 = t1576 + t1398 * t1580 + (-t1373 * t1541 + t1399) * t1586 + t1650;
t1005 = t1371 * (t1392 - t1635) - t1375 * t1662 + t1390;
t924 = t1005 * t1371 + t1375 * t1006;
t1326 = -t1359 * t1382 - t1386 * t1360;
t1357 = qJDD(1) * t1386 - t1382 * t1648;
t1539 = -pkin(8) * t1357 - g(3) * t1382;
t1269 = -t1645 - t1644;
t1209 = t1269 * t1385 - t1658;
t1537 = pkin(9) * t1209 + t1617;
t1275 = -t1320 - t1644;
t1216 = -t1275 * t1381 + t1611;
t1536 = pkin(9) * t1216 - t1618;
t775 = t1379 * t820 + t1383 * t821;
t749 = t1380 * t775 - t1384 * t882;
t750 = t1380 * t882 + t1384 * t775;
t705 = -t1371 * t749 + t1375 * t750;
t774 = t1379 * t821 - t1383 * t820;
t1515 = t1381 * t705 - t1385 * t774;
t704 = t1371 * t750 + t1375 * t749;
t672 = -t1373 * t704 + t1377 * t1515;
t692 = t1381 * t774 + t1385 * t705;
t1535 = t1372 * t692 + t1376 * t672;
t764 = t1375 * t817 - t1631;
t1504 = -t1058 * t1385 + t1381 * t764;
t763 = t1371 * t817 + t1630;
t711 = -t1373 * t763 + t1377 * t1504;
t760 = t1058 * t1381 + t1385 * t764;
t1534 = t1372 * t760 + t1376 * t711;
t1099 = t1211 + t1212;
t1049 = -t1166 - t1085;
t955 = -t1045 * t1383 - t1049 * t1379;
t917 = t1099 * t1384 + t1380 * t955;
t918 = -t1099 * t1380 + t1384 * t955;
t838 = -t1371 * t917 + t1375 * t918;
t953 = -t1045 * t1379 + t1049 * t1383;
t1514 = t1381 * t838 - t1385 * t953;
t837 = t1371 * t918 + t1375 * t917;
t772 = -t1373 * t837 + t1377 * t1514;
t805 = t1381 * t953 + t1385 * t838;
t1533 = t1372 * t805 + t1376 * t772;
t1139 = -t1212 + t1211;
t1046 = (-qJD(6) - t1233) * t1215 - t1545;
t954 = t1046 * t1383 - t1048 * t1379;
t925 = t1139 * t1384 + t1380 * t954;
t926 = -t1139 * t1380 + t1384 * t954;
t855 = -t1371 * t925 + t1375 * t926;
t952 = -t1046 * t1379 - t1048 * t1383;
t1513 = t1381 * t855 + t1385 * t952;
t854 = t1371 * t926 + t1375 * t925;
t777 = -t1373 * t854 + t1377 * t1513;
t808 = -t1381 * t952 + t1385 * t855;
t1532 = t1372 * t808 + t1376 * t777;
t1121 = -t1232 - t1211;
t997 = t1121 * t1383 - t1666;
t929 = t1046 * t1384 + t1380 * t997;
t930 = -t1046 * t1380 + t1384 * t997;
t860 = -t1371 * t929 + t1375 * t930;
t996 = t1121 * t1379 + t1664;
t1512 = t1381 * t860 - t1385 * t996;
t859 = t1371 * t930 + t1375 * t929;
t781 = -t1373 * t859 + t1377 * t1512;
t818 = t1381 * t996 + t1385 * t860;
t1531 = t1372 * t818 + t1376 * t781;
t1124 = -t1212 - t1232;
t1000 = t1124 * t1383 - t1624;
t1001 = -t1124 * t1379 - t1623;
t936 = t1001 * t1380 - t1048 * t1384;
t937 = t1001 * t1384 + t1048 * t1380;
t865 = -t1371 * t936 + t1375 * t937;
t1509 = -t1000 * t1385 + t1381 * t865;
t864 = t1371 * t937 + t1375 * t936;
t785 = -t1373 * t864 + t1377 * t1509;
t822 = t1000 * t1381 + t1385 * t865;
t1530 = t1372 * t822 + t1376 * t785;
t1165 = -t1212 + t1232;
t1029 = -t1165 * t1383 - t1666;
t1031 = -t1165 * t1379 + t1664;
t942 = t1031 * t1380 + t1049 * t1384;
t944 = t1031 * t1384 - t1049 * t1380;
t870 = -t1371 * t942 + t1375 * t944;
t1508 = t1029 * t1385 + t1381 * t870;
t868 = t1371 * t944 + t1375 * t942;
t788 = -t1373 * t868 + t1377 * t1508;
t834 = -t1029 * t1381 + t1385 * t870;
t1529 = t1372 * t834 + t1376 * t788;
t1164 = t1211 - t1232;
t1030 = -t1164 * t1379 - t1623;
t1032 = t1164 * t1383 - t1624;
t943 = t1032 * t1380 + t1045 * t1384;
t945 = t1032 * t1384 - t1045 * t1380;
t871 = -t1371 * t943 + t1375 * t945;
t1507 = t1030 * t1385 + t1381 * t871;
t869 = t1371 * t945 + t1375 * t943;
t789 = -t1373 * t869 + t1377 * t1507;
t835 = -t1030 * t1381 + t1385 * t871;
t1528 = t1372 * t835 + t1376 * t789;
t1084 = -qJD(6) * t1215 - t1545;
t1040 = -t1084 * t1383 - t1213 * t1614;
t1041 = -t1084 * t1379 + t1213 * t1613;
t992 = t1041 * t1380 + t1563;
t994 = t1041 * t1384 - t1564;
t907 = -t1371 * t992 + t1375 * t994;
t1506 = t1040 * t1385 + t1381 * t907;
t905 = t1371 * t994 + t1375 * t992;
t814 = -t1373 * t905 + t1377 * t1506;
t879 = -t1040 * t1381 + t1385 * t907;
t1527 = t1372 * t879 + t1376 * t814;
t1043 = -t1085 * t1379 - t1215 * t1613;
t1044 = t1085 * t1383 - t1215 * t1614;
t993 = t1044 * t1380 - t1563;
t995 = t1044 * t1384 + t1564;
t908 = -t1371 * t993 + t1375 * t995;
t1505 = t1043 * t1385 + t1381 * t908;
t906 = t1371 * t995 + t1375 * t993;
t815 = -t1373 * t906 + t1377 * t1505;
t880 = -t1043 * t1381 + t1385 * t908;
t1526 = t1372 * t880 + t1376 * t815;
t1501 = -t1097 * t1385 + t1381 * t924;
t923 = -t1005 * t1375 + t1006 * t1371;
t828 = -t1373 * t923 + t1377 * t1501;
t893 = t1097 * t1381 + t1385 * t924;
t1525 = t1372 * t893 + t1376 * t828;
t1080 = (t1213 * t1379 + t1215 * t1383) * t1233;
t1081 = (-t1213 * t1383 + t1215 * t1379) * t1233;
t1033 = t1081 * t1380 - t1384 * t1416;
t1034 = t1081 * t1384 + t1380 * t1416;
t940 = -t1033 * t1371 + t1034 * t1375;
t1502 = t1080 * t1385 + t1381 * t940;
t939 = t1033 * t1375 + t1034 * t1371;
t846 = -t1373 * t939 + t1377 * t1502;
t904 = -t1080 * t1381 + t1385 * t940;
t1524 = t1372 * t904 + t1376 * t846;
t1130 = -t1238 - t1239;
t1114 = -t1223 + t1412;
t1024 = -t1110 * t1380 + t1114 * t1384;
t1026 = -t1110 * t1384 - t1114 * t1380;
t935 = -t1024 * t1371 + t1026 * t1375;
t1499 = -t1130 * t1385 + t1381 * t935;
t933 = t1024 * t1375 + t1026 * t1371;
t848 = -t1373 * t933 + t1377 * t1499;
t911 = t1130 * t1381 + t1385 * t935;
t1523 = t1372 * t911 + t1376 * t848;
t1180 = -t1239 + t1238;
t1109 = (qJD(5) + t1315) * t1242 + t1544;
t1023 = -t1109 * t1380 - t1384 * t1661;
t1025 = -t1109 * t1384 + t1380 * t1661;
t934 = -t1023 * t1371 + t1025 * t1375;
t1498 = t1180 * t1385 + t1381 * t934;
t932 = t1023 * t1375 + t1025 * t1371;
t852 = -t1373 * t932 + t1377 * t1498;
t921 = -t1180 * t1381 + t1385 * t934;
t1522 = t1372 * t921 + t1376 * t852;
t1171 = -t1646 - t1238;
t1077 = t1171 * t1380 + t1663;
t1078 = t1171 * t1384 - t1665;
t990 = -t1077 * t1371 + t1078 * t1375;
t1500 = -t1109 * t1385 + t1381 * t990;
t989 = t1077 * t1375 + t1078 * t1371;
t885 = -t1373 * t989 + t1377 * t1500;
t956 = t1109 * t1381 + t1385 * t990;
t1521 = t1372 * t956 + t1376 * t885;
t1192 = -t1239 - t1646;
t1093 = t1192 * t1384 - t1620;
t1094 = -t1192 * t1380 - t1619;
t1008 = t1093 * t1375 + t1094 * t1371;
t1009 = -t1093 * t1371 + t1094 * t1375;
t1497 = t1009 * t1381 + t1385 * t1661;
t896 = -t1008 * t1373 + t1377 * t1497;
t959 = t1009 * t1385 - t1381 * t1661;
t1520 = t1372 * t959 + t1376 * t896;
t1222 = -t1239 + t1646;
t1105 = t1222 * t1384 + t1665;
t1107 = -t1222 * t1380 + t1663;
t1015 = t1105 * t1375 + t1107 * t1371;
t1017 = -t1105 * t1371 + t1107 * t1375;
t1496 = t1017 * t1381 + t1114 * t1385;
t902 = -t1015 * t1373 + t1377 * t1496;
t961 = t1017 * t1385 - t1114 * t1381;
t1519 = t1372 * t961 + t1376 * t902;
t1221 = t1238 - t1646;
t1106 = t1221 * t1380 + t1619;
t1108 = t1221 * t1384 - t1620;
t1016 = t1106 * t1375 + t1108 * t1371;
t1018 = -t1106 * t1371 + t1108 * t1375;
t1495 = t1018 * t1381 + t1110 * t1385;
t903 = -t1016 * t1373 + t1377 * t1495;
t962 = t1018 * t1385 - t1110 * t1381;
t1518 = t1372 * t962 + t1376 * t903;
t1101 = t1146 * t1384 + t1240 * t1608;
t1102 = -t1146 * t1380 + t1240 * t1607;
t1011 = t1101 * t1375 + t1102 * t1371;
t1013 = -t1101 * t1371 + t1102 * t1375;
t1452 = t1013 * t1381 + t1561;
t915 = -t1011 * t1373 + t1377 * t1452;
t987 = t1013 * t1385 - t1562;
t1517 = t1372 * t987 + t1376 * t915;
t1103 = t1242 * t1607 - t1380 * t1412;
t1104 = -t1242 * t1608 - t1384 * t1412;
t1012 = t1103 * t1375 + t1104 * t1371;
t1014 = -t1103 * t1371 + t1104 * t1375;
t1451 = t1014 * t1381 - t1561;
t916 = -t1012 * t1373 + t1377 * t1451;
t988 = t1014 * t1385 + t1562;
t1516 = t1372 * t988 + t1376 * t916;
t1347 = (-t1370 - t1591) * t1648;
t1311 = t1347 * t1376 - t1597;
t1511 = qJ(2) * t1311 + t1598;
t1345 = (-t1370 - t1593) * t1648;
t1313 = -t1345 * t1372 - t1594;
t1510 = qJ(2) * t1313 - t1599;
t1143 = (-t1240 * t1380 - t1242 * t1384) * t1315;
t1144 = (-t1240 * t1384 + t1242 * t1380) * t1315;
t1073 = -t1143 * t1371 + t1144 * t1375;
t1069 = t1073 * t1385 + t1280 * t1381;
t1072 = t1143 * t1375 + t1144 * t1371;
t1487 = t1073 * t1381 - t1280 * t1385;
t971 = -t1072 * t1373 + t1377 * t1487;
t1503 = t1069 * t1372 + t1376 * t971;
t1481 = -t1131 * t1385 + t1132 * t1381;
t1020 = t1185 * t1373 + t1377 * t1481;
t1067 = t1131 * t1381 + t1132 * t1385;
t1494 = t1020 * t1376 + t1067 * t1372;
t1199 = -t1264 - t1609;
t1127 = -t1199 * t1371 + t1203 * t1375;
t1129 = -t1199 * t1375 - t1203 * t1371;
t1208 = t1298 + t1647;
t1482 = t1129 * t1381 + t1208 * t1385;
t1028 = -t1127 * t1373 + t1377 * t1482;
t1083 = t1129 * t1385 - t1208 * t1381;
t1493 = t1028 * t1376 + t1083 * t1372;
t1200 = t1264 - t1609;
t1126 = t1200 * t1371 + t1202 * t1375;
t1128 = t1200 * t1375 - t1202 * t1371;
t1243 = -t1298 + t1647;
t1483 = t1128 * t1381 + t1243 * t1385;
t1037 = -t1126 * t1373 + t1377 * t1483;
t1098 = t1128 * t1385 - t1243 * t1381;
t1492 = t1037 * t1376 + t1098 * t1372;
t1225 = -t1645 - t1647;
t1135 = t1225 * t1371 + t1667;
t1136 = t1225 * t1375 - t1668;
t1479 = t1136 * t1381 + t1200 * t1385;
t1039 = -t1135 * t1373 + t1377 * t1479;
t1088 = t1136 * t1385 - t1200 * t1381;
t1491 = t1039 * t1376 + t1088 * t1372;
t1234 = -t1298 - t1645;
t1150 = t1234 * t1375 - t1616;
t1151 = -t1234 * t1371 - t1615;
t1477 = t1151 * t1381 - t1202 * t1385;
t1055 = -t1150 * t1373 + t1377 * t1477;
t1096 = t1151 * t1385 + t1202 * t1381;
t1490 = t1055 * t1376 + t1096 * t1372;
t1267 = -t1298 + t1645;
t1167 = t1267 * t1375 + t1668;
t1169 = -t1267 * t1371 + t1667;
t1474 = t1169 * t1381 + t1203 * t1385;
t1063 = -t1167 * t1373 + t1377 * t1474;
t1115 = t1169 * t1385 - t1203 * t1381;
t1489 = t1063 * t1376 + t1115 * t1372;
t1266 = -t1645 + t1647;
t1168 = t1266 * t1371 + t1615;
t1170 = t1266 * t1375 - t1616;
t1473 = t1170 * t1381 + t1199 * t1385;
t1064 = -t1168 * t1373 + t1377 * t1473;
t1116 = t1170 * t1385 - t1199 * t1381;
t1488 = t1064 * t1376 + t1116 * t1372;
t1193 = t1264 * t1375 - t1301 * t1604;
t1194 = -t1264 * t1371 - t1301 * t1603;
t1450 = t1194 * t1381 - t1559;
t1091 = -t1193 * t1373 + t1377 * t1450;
t1155 = t1194 * t1385 + t1560;
t1486 = t1091 * t1376 + t1155 * t1372;
t1195 = t1265 * t1371 + t1302 * t1603;
t1196 = t1265 * t1375 - t1302 * t1604;
t1449 = t1196 * t1381 + t1559;
t1092 = -t1195 * t1373 + t1377 * t1449;
t1156 = t1196 * t1385 - t1560;
t1485 = t1092 * t1376 + t1156 * t1372;
t1197 = (t1301 * t1371 - t1302 * t1375) * t1321;
t1198 = (t1301 * t1375 + t1302 * t1371) * t1321;
t1274 = t1285 * t1579;
t1120 = -t1197 * t1373 + t1198 * t1580 - t1274;
t1177 = t1198 * t1385 + t1610;
t1484 = t1120 * t1376 + t1177 * t1372;
t1260 = -t1645 - t1320;
t1249 = -t1305 + t1286;
t1404 = (-qJD(3) - t1334) * t1323 - t1446;
t1466 = -t1249 * t1385 + t1381 * t1404;
t1134 = -t1260 * t1373 + t1377 * t1466;
t1184 = t1249 * t1381 + t1385 * t1404;
t1480 = t1134 * t1376 + t1184 * t1372;
t1287 = t1320 - t1645;
t1244 = t1323 * t1575 + t1446;
t1467 = -t1244 * t1381 + t1248 * t1385;
t1149 = -t1287 * t1373 + t1377 * t1467;
t1183 = -t1244 * t1385 - t1248 * t1381;
t1478 = t1149 * t1376 + t1183 * t1372;
t1465 = t1269 * t1381 + t1657;
t1158 = -t1244 * t1373 + t1377 * t1465;
t1476 = t1158 * t1376 + t1209 * t1372;
t1247 = -t1321 * t1575 + t1402;
t1464 = t1275 * t1385 + t1612;
t1160 = -t1247 * t1373 + t1377 * t1464;
t1475 = t1160 * t1376 + t1216 * t1372;
t1304 = -t1320 + t1644;
t1462 = t1304 * t1385 + t1658;
t1174 = -t1249 * t1373 + t1377 * t1462;
t1226 = -t1304 * t1381 + t1657;
t1472 = t1174 * t1376 + t1226 * t1372;
t1303 = t1645 - t1644;
t1463 = t1303 * t1381 - t1611;
t1175 = -t1373 * t1404 + t1377 * t1463;
t1227 = t1303 * t1385 + t1612;
t1471 = t1175 * t1376 + t1227 * t1372;
t1187 = -t1274 + (t1323 * t1373 - t1334 * t1580) * t1321;
t1235 = -t1334 * t1602 + t1610;
t1470 = t1187 * t1376 + t1235 * t1372;
t1189 = t1286 * t1580 + (-t1321 * t1373 - t1334 * t1579) * t1323;
t1237 = t1286 * t1385 + t1334 * t1600;
t1469 = t1189 * t1376 + t1237 * t1372;
t1447 = t1334 * (t1321 * t1381 + t1323 * t1385);
t1229 = -t1373 * t1436 + t1377 * t1447;
t1253 = (-t1600 + t1602) * t1334;
t1468 = t1229 * t1376 + t1253 * t1372;
t1401 = (-pkin(1) * qJD(1) + t1374 * t1642) * qJD(1) + t1410;
t1405 = t1378 * t1407;
t1299 = (-t1405 + t1633) * t1376 + t1401 * t1372;
t1300 = t1372 * t1405 + t1376 * t1401 - t1363;
t1461 = -t1299 * t1376 + t1300 * t1372;
t1236 = t1299 * t1372 + t1300 * t1376;
t1353 = t1376 * t1552;
t1335 = t1353 + t1550;
t1352 = t1372 * t1552;
t1338 = -t1352 + t1548;
t1460 = t1335 * t1376 + t1338 * t1372;
t1336 = -t1353 + t1550;
t1337 = t1352 + t1548;
t1459 = -t1336 * t1376 + t1337 * t1372;
t1344 = (t1370 - t1593) * t1648;
t1458 = t1344 * t1376 + t1597;
t1457 = t1347 * t1372 + t1596;
t1456 = t1345 * t1376 - t1595;
t1346 = (-t1370 + t1591) * t1648;
t1455 = t1346 * t1372 + t1594;
t1325 = t1359 * t1386 - t1382 * t1360;
t685 = pkin(10) * t750 + (-pkin(11) * t1380 + t1566) * t774;
t696 = -pkin(10) * t749 + (-pkin(11) * t1384 + t1638) * t774;
t657 = -qJ(4) * t704 - t1371 * t685 + t1375 * t696;
t679 = -pkin(3) * t704 - pkin(4) * t749 + pkin(5) * t882 - pkin(11) * t775;
t1444 = pkin(9) * t692 + t1381 * t657 + t1385 * t679;
t761 = -pkin(11) * t953 - t774;
t725 = pkin(10) * t918 + t1380 * t761 + t1566 * t953;
t734 = -pkin(10) * t917 + t1384 * t761 + t1638 * t953;
t689 = -qJ(4) * t837 - t1371 * t725 + t1375 * t734;
t720 = -pkin(3) * t837 - pkin(4) * t917 - pkin(5) * t1099 - pkin(11) * t955 - t775;
t1443 = pkin(9) * t805 + t1381 * t689 + t1385 * t720;
t806 = -pkin(5) * t996 + t820;
t841 = -pkin(11) * t996 + t1629;
t746 = -pkin(4) * t996 + pkin(10) * t930 + t1380 * t841 + t1384 * t806;
t754 = -pkin(10) * t929 - t1380 * t806 + t1384 * t841;
t699 = -qJ(4) * t859 - t1371 * t746 + t1375 * t754;
t762 = -pkin(3) * t859 - pkin(4) * t929 - pkin(5) * t1046 - pkin(11) * t997 + t1628;
t1442 = pkin(9) * t818 + t1381 * t699 + t1385 * t762;
t807 = -pkin(5) * t1000 + t821;
t844 = -pkin(11) * t1000 + t1628;
t748 = -pkin(4) * t1000 + pkin(10) * t937 + t1380 * t844 + t1384 * t807;
t755 = -pkin(10) * t936 - t1380 * t807 + t1384 * t844;
t700 = -qJ(4) * t864 - t1371 * t748 + t1375 * t755;
t766 = -pkin(3) * t864 - pkin(4) * t936 + pkin(5) * t1048 - pkin(11) * t1001 - t1629;
t1441 = pkin(9) * t822 + t1381 * t700 + t1385 * t766;
t803 = -pkin(4) * t1058 + pkin(10) * t817;
t712 = -pkin(10) * t1630 - qJ(4) * t763 - t1371 * t803;
t732 = -pkin(3) * t763 - pkin(4) * t816;
t1440 = pkin(9) * t760 + t1381 * t712 + t1385 * t732;
t795 = -pkin(4) * t1130 + pkin(10) * t1026 + t817;
t800 = -pkin(10) * t1024 - t816;
t736 = -qJ(4) * t933 - t1371 * t795 + t1375 * t800;
t886 = -pkin(3) * t933 - pkin(4) * t1024;
t1439 = pkin(9) * t911 + t1381 * t736 + t1385 * t886;
t831 = -pkin(3) * t989 - pkin(4) * t1077 + t888;
t938 = -pkin(4) * t1109 + pkin(10) * t1078 - t1625;
t965 = -pkin(10) * t1077 + t1626;
t836 = -qJ(4) * t989 - t1371 * t938 + t1375 * t965;
t1438 = pkin(9) * t956 + t1381 * t836 + t1385 * t831;
t843 = -pkin(3) * t1008 - pkin(4) * t1093 + t889;
t941 = pkin(4) * t1661 + pkin(10) * t1094 + t1626;
t978 = -pkin(10) * t1093 + t1625;
t849 = -qJ(4) * t1008 - t1371 * t941 + t1375 * t978;
t1437 = pkin(9) * t959 + t1381 * t849 + t1385 * t843;
t1042 = -qJ(4) * t1135 + t1622;
t969 = t1371 * t1392 - t1375 * t1393 + (-t1371 * t1644 - t1375 * t1543 - t1135) * pkin(3) + t1390;
t1434 = pkin(9) * t1088 + t1042 * t1381 + t1385 * t969;
t1056 = -qJ(4) * t1150 + t1621;
t972 = -pkin(3) * t1150 + t1006;
t1433 = pkin(9) * t1096 + t1056 * t1381 + t1385 * t972;
t654 = -pkin(3) * t774 + qJ(4) * t705 + t1371 * t696 + t1375 * t685;
t671 = t1373 * t1515 + t1377 * t704;
t640 = -pkin(2) * t671 - t1373 * t654 + t1377 * t1444;
t643 = -t1381 * t679 + t1385 * t657 + (-t1373 * t671 - t1377 * t672) * pkin(9);
t658 = -t1372 * t672 + t1376 * t692;
t1432 = qJ(2) * t658 + t1372 * t643 + t1376 * t640;
t688 = -pkin(3) * t953 + qJ(4) * t838 + t1371 * t734 + t1375 * t725;
t771 = t1373 * t1514 + t1377 * t837;
t656 = -pkin(2) * t771 - t1373 * t688 + t1377 * t1443;
t669 = -t1381 * t720 + t1385 * t689 + (-t1373 * t771 - t1377 * t772) * pkin(9);
t730 = -t1372 * t772 + t1376 * t805;
t1431 = qJ(2) * t730 + t1372 * t669 + t1376 * t656;
t707 = -pkin(3) * t1058 - pkin(10) * t1631 + qJ(4) * t764 + t1375 * t803;
t710 = t1373 * t1504 + t1377 * t763;
t660 = -pkin(2) * t710 - t1373 * t707 + t1377 * t1440;
t666 = -t1381 * t732 + t1385 * t712 + (-t1373 * t710 - t1377 * t711) * pkin(9);
t695 = -t1372 * t711 + t1376 * t760;
t1430 = qJ(2) * t695 + t1372 * t666 + t1376 * t660;
t697 = -pkin(3) * t996 + qJ(4) * t860 + t1371 * t754 + t1375 * t746;
t780 = t1373 * t1512 + t1377 * t859;
t665 = -pkin(2) * t780 - t1373 * t697 + t1377 * t1442;
t674 = -t1381 * t762 + t1385 * t699 + (-t1373 * t780 - t1377 * t781) * pkin(9);
t742 = -t1372 * t781 + t1376 * t818;
t1429 = qJ(2) * t742 + t1372 * t674 + t1376 * t665;
t698 = -pkin(3) * t1000 + qJ(4) * t865 + t1371 * t755 + t1375 * t748;
t784 = t1373 * t1509 + t1377 * t864;
t668 = -pkin(2) * t784 - t1373 * t698 + t1377 * t1441;
t676 = -t1381 * t766 + t1385 * t700 + (-t1373 * t784 - t1377 * t785) * pkin(9);
t743 = -t1372 * t785 + t1376 * t822;
t1428 = qJ(2) * t743 + t1372 * t676 + t1376 * t668;
t735 = -pkin(3) * t1130 + qJ(4) * t935 + t1371 * t800 + t1375 * t795;
t847 = t1373 * t1499 + t1377 * t933;
t687 = -pkin(2) * t847 - t1373 * t735 + t1377 * t1439;
t703 = -t1381 * t886 + t1385 * t736 + (-t1373 * t847 - t1377 * t848) * pkin(9);
t799 = -t1372 * t848 + t1376 * t911;
t1427 = qJ(2) * t799 + t1372 * t703 + t1376 * t687;
t819 = -pkin(3) * t1109 + qJ(4) * t990 + t1371 * t965 + t1375 * t938;
t884 = t1373 * t1500 + t1377 * t989;
t722 = -pkin(2) * t884 - t1373 * t819 + t1377 * t1438;
t737 = -t1381 * t831 + t1385 * t836 + (-t1373 * t884 - t1377 * t885) * pkin(9);
t830 = -t1372 * t885 + t1376 * t956;
t1426 = qJ(2) * t830 + t1372 * t737 + t1376 * t722;
t829 = pkin(3) * t1661 + qJ(4) * t1009 + t1371 * t978 + t1375 * t941;
t895 = t1008 * t1377 + t1373 * t1497;
t727 = -pkin(2) * t895 - t1373 * t829 + t1377 * t1437;
t744 = -t1381 * t843 + t1385 * t849 + (-t1373 * t895 - t1377 * t896) * pkin(9);
t853 = -t1372 * t896 + t1376 * t959;
t1425 = qJ(2) * t853 + t1372 * t744 + t1376 * t727;
t1408 = pkin(9) * t893 + (-qJ(4) * t1381 - t1639) * t923;
t827 = t1373 * t1501 + t1377 * t923;
t894 = -pkin(3) * t1097 + qJ(4) * t924;
t741 = -pkin(2) * t827 - t1373 * t894 + t1377 * t1408;
t745 = (-qJ(4) * t1385 + t1640) * t923 + (-t1373 * t827 - t1377 * t828) * pkin(9);
t792 = -t1372 * t828 + t1376 * t893;
t1424 = qJ(2) * t792 + t1372 * t745 + t1376 * t741;
t1027 = t1127 * t1377 + t1373 * t1482;
t897 = -qJ(4) * t1127 - t923;
t1411 = pkin(9) * t1083 - t1127 * t1639 + t1381 * t897;
t892 = pkin(3) * t1208 + qJ(4) * t1129 + t924;
t794 = -pkin(2) * t1027 - t1373 * t892 + t1377 * t1411;
t823 = t1127 * t1640 + t1385 * t897 + (-t1027 * t1373 - t1028 * t1377) * pkin(9);
t960 = -t1028 * t1372 + t1083 * t1376;
t1423 = qJ(2) * t960 + t1372 * t823 + t1376 * t794;
t1007 = pkin(3) * t1200 + qJ(4) * t1136 - t1621;
t1038 = t1135 * t1377 + t1373 * t1479;
t825 = -pkin(2) * t1038 - t1007 * t1373 + t1377 * t1434;
t856 = t1042 * t1385 - t1381 * t969 + (-t1038 * t1373 - t1039 * t1377) * pkin(9);
t964 = -t1039 * t1372 + t1088 * t1376;
t1422 = qJ(2) * t964 + t1372 * t856 + t1376 * t825;
t1010 = -pkin(3) * t1202 + qJ(4) * t1151 + t1622;
t1054 = t1150 * t1377 + t1373 * t1477;
t833 = -pkin(2) * t1054 - t1010 * t1373 + t1377 * t1433;
t863 = t1056 * t1385 - t1381 * t972 + (-t1054 * t1373 - t1055 * t1377) * pkin(9);
t975 = -t1055 * t1372 + t1096 * t1376;
t1421 = qJ(2) * t975 + t1372 * t863 + t1376 * t833;
t1019 = -t1185 * t1377 + t1373 * t1481;
t931 = (-t1019 * t1373 - t1020 * t1377) * pkin(9);
t949 = -t1020 * t1372 + t1067 * t1376;
t950 = -pkin(2) * t1019 + t1067 * t1636;
t1420 = qJ(2) * t949 + t1372 * t931 + t1376 * t950;
t1418 = pkin(9) * t1184 + t1067;
t1079 = -t1134 * t1372 + t1184 * t1376;
t1133 = t1260 * t1377 + t1373 * t1466;
t963 = (-t1133 * t1373 - t1134 * t1377) * pkin(9) - t1481;
t977 = -pkin(2) * t1133 + t1377 * t1418;
t1417 = qJ(2) * t1079 + t1372 * t963 + t1376 * t977;
t1157 = t1244 * t1377 + t1373 * t1465;
t1051 = -t1618 + (-t1157 * t1373 - t1158 * t1377) * pkin(9);
t1100 = -t1158 * t1372 + t1209 * t1376;
t999 = -pkin(2) * t1157 + t1131 * t1373 + t1377 * t1537;
t1415 = qJ(2) * t1100 + t1051 * t1372 + t1376 * t999;
t1159 = t1247 * t1377 + t1373 * t1464;
t1003 = -pkin(2) * t1159 + t1132 * t1373 + t1377 * t1536;
t1057 = -t1617 + (-t1159 * t1373 - t1160 * t1377) * pkin(9);
t1118 = -t1160 * t1372 + t1216 * t1376;
t1414 = qJ(2) * t1118 + t1003 * t1376 + t1057 * t1372;
t1306 = t1336 * t1372 + t1337 * t1376;
t1413 = qJ(2) * t1306 + t1236;
t1356 = t1382 * qJDD(1) + t1386 * t1648;
t1343 = -pkin(8) * t1356 + g(3) * t1386;
t1342 = t1572 * t1592;
t1341 = (t1366 - t1369) * t1592;
t1333 = t1572 * t1552;
t1332 = (-t1366 * t1578 + t1549) * t1374;
t1331 = (-t1369 * t1578 - t1549) * t1374;
t1317 = t1366 * t1547 + t1655;
t1316 = t1369 * t1547 - t1655;
t1312 = -t1344 * t1372 + t1596;
t1310 = t1346 * t1376 - t1595;
t1307 = -t1335 * t1372 + t1338 * t1376;
t1294 = -t1335 * t1374 + t1378 * t1456;
t1293 = -t1336 * t1374 + t1378 * t1458;
t1292 = t1338 * t1374 + t1378 * t1457;
t1291 = -t1337 * t1374 + t1378 * t1455;
t1290 = t1335 * t1378 + t1374 * t1456;
t1289 = -t1338 * t1378 + t1374 * t1457;
t1284 = -t1341 * t1374 + t1378 * t1460;
t1283 = t1342 * t1374 + t1378 * t1459;
t1282 = -t1342 * t1378 + t1374 * t1459;
t1273 = t1285 * t1585;
t1257 = -t1382 * t1294 + t1313 * t1386;
t1256 = -t1382 * t1292 + t1311 * t1386;
t1255 = t1294 * t1386 + t1382 * t1313;
t1254 = t1292 * t1386 + t1382 * t1311;
t1252 = -t1382 * t1283 + t1306 * t1386;
t1251 = t1283 * t1386 + t1382 * t1306;
t1228 = t1373 * t1447 + t1377 * t1436;
t1220 = t1324 * t1374 + t1378 * t1461;
t1219 = -t1324 * t1378 + t1374 * t1461;
t1218 = -t1598 + (-t1290 * t1374 - t1294 * t1378) * qJ(2);
t1217 = -t1599 + (-t1289 * t1374 - t1292 * t1378) * qJ(2);
t1191 = -pkin(1) * t1289 + t1299 * t1374 + t1378 * t1511;
t1190 = -pkin(1) * t1290 + t1300 * t1374 + t1378 * t1510;
t1188 = t1286 * t1586 + (t1321 * t1377 - t1334 * t1585) * t1323;
t1186 = -t1273 + (-t1323 * t1377 - t1334 * t1586) * t1321;
t1182 = -pkin(1) * t1282 + t1378 * t1413;
t1178 = -t1229 * t1372 + t1253 * t1376;
t1176 = (-t1282 * t1374 - t1283 * t1378) * qJ(2) - t1461;
t1173 = t1373 * t1463 + t1377 * t1404;
t1172 = t1249 * t1377 + t1373 * t1462;
t1163 = qJ(2) * t1236 * t1378 - pkin(1) * t1219;
t1162 = -t1382 * t1220 + t1236 * t1386;
t1161 = t1220 * t1386 + t1382 * t1236;
t1148 = t1287 * t1377 + t1373 * t1467;
t1140 = (-t1219 * t1374 - t1220 * t1378) * qJ(2);
t1138 = -t1189 * t1372 + t1237 * t1376;
t1137 = -t1187 * t1372 + t1235 * t1376;
t1125 = -t1228 * t1374 + t1378 * t1468;
t1123 = -t1175 * t1372 + t1227 * t1376;
t1122 = -t1174 * t1372 + t1226 * t1376;
t1119 = t1197 * t1377 + t1198 * t1586 - t1273;
t1090 = t1195 * t1377 + t1373 * t1449;
t1089 = t1193 * t1377 + t1373 * t1450;
t1087 = -t1188 * t1374 + t1378 * t1469;
t1086 = -t1186 * t1374 + t1378 * t1470;
t1082 = -t1149 * t1372 + t1183 * t1376;
t1071 = -t1173 * t1374 + t1378 * t1471;
t1070 = -t1172 * t1374 + t1378 * t1472;
t1068 = -t1120 * t1372 + t1177 * t1376;
t1066 = -t1159 * t1374 + t1378 * t1475;
t1065 = t1159 * t1378 + t1374 * t1475;
t1062 = t1168 * t1377 + t1373 * t1473;
t1061 = t1167 * t1377 + t1373 * t1474;
t1060 = -t1157 * t1374 + t1378 * t1476;
t1059 = t1157 * t1378 + t1374 * t1476;
t1053 = -t1092 * t1372 + t1156 * t1376;
t1052 = -t1091 * t1372 + t1155 * t1376;
t1036 = t1126 * t1377 + t1373 * t1483;
t1035 = -t1148 * t1374 + t1378 * t1478;
t1022 = -t1133 * t1374 + t1378 * t1480;
t1021 = t1133 * t1378 + t1374 * t1480;
t1002 = pkin(2) * t1160 - t1132 * t1377 + t1373 * t1536;
t998 = pkin(2) * t1158 - t1131 * t1377 + t1373 * t1537;
t991 = -t1119 * t1374 + t1378 * t1484;
t986 = -t1382 * t1066 + t1118 * t1386;
t985 = t1066 * t1386 + t1382 * t1118;
t984 = -t1064 * t1372 + t1116 * t1376;
t983 = -t1063 * t1372 + t1115 * t1376;
t982 = -t1382 * t1060 + t1100 * t1386;
t981 = t1060 * t1386 + t1382 * t1100;
t976 = pkin(2) * t1134 + t1373 * t1418;
t974 = -t1090 * t1374 + t1378 * t1485;
t973 = -t1089 * t1374 + t1378 * t1486;
t970 = t1072 * t1377 + t1373 * t1487;
t968 = -t1037 * t1372 + t1098 * t1376;
t958 = -t1382 * t1022 + t1079 * t1386;
t957 = t1022 * t1386 + t1382 * t1079;
t951 = pkin(2) * t1020 + t1067 * t1637;
t928 = -t1062 * t1374 + t1378 * t1488;
t927 = -t1061 * t1374 + t1378 * t1489;
t922 = t1069 * t1376 - t1372 * t971;
t920 = -t1054 * t1374 + t1378 * t1490;
t919 = t1054 * t1378 + t1374 * t1490;
t914 = t1012 * t1377 + t1373 * t1451;
t913 = t1011 * t1377 + t1373 * t1452;
t912 = -t1036 * t1374 + t1378 * t1492;
t910 = -t1038 * t1374 + t1378 * t1491;
t909 = t1038 * t1378 + t1374 * t1491;
t901 = t1016 * t1377 + t1373 * t1495;
t900 = t1015 * t1377 + t1373 * t1496;
t899 = -t1027 * t1374 + t1378 * t1493;
t898 = t1027 * t1378 + t1374 * t1493;
t891 = -t1019 * t1374 + t1378 * t1494;
t890 = t1019 * t1378 + t1374 * t1494;
t878 = -t1003 * t1372 + t1057 * t1376 + (-t1065 * t1374 - t1066 * t1378) * qJ(2);
t877 = -t1372 * t916 + t1376 * t988;
t876 = -t1372 * t915 + t1376 * t987;
t875 = -t1374 * t970 + t1378 * t1503;
t874 = -t1382 * t920 + t1386 * t975;
t873 = t1382 * t975 + t1386 * t920;
t872 = t1051 * t1376 - t1372 * t999 + (-t1059 * t1374 - t1060 * t1378) * qJ(2);
t867 = -t1382 * t910 + t1386 * t964;
t866 = t1382 * t964 + t1386 * t910;
t862 = -t1372 * t903 + t1376 * t962;
t861 = -t1372 * t902 + t1376 * t961;
t858 = -t1382 * t899 + t1386 * t960;
t857 = t1382 * t960 + t1386 * t899;
t851 = t1373 * t1498 + t1377 * t932;
t850 = -pkin(1) * t1065 - t1002 * t1374 + t1378 * t1414;
t845 = t1373 * t1502 + t1377 * t939;
t842 = -pkin(1) * t1059 - t1374 * t998 + t1378 * t1415;
t840 = -t1382 * t891 + t1386 * t949;
t839 = t1382 * t949 + t1386 * t891;
t832 = pkin(2) * t1055 + t1010 * t1377 + t1373 * t1433;
t826 = -t1372 * t977 + t1376 * t963 + (-t1021 * t1374 - t1022 * t1378) * qJ(2);
t824 = pkin(2) * t1039 + t1007 * t1377 + t1373 * t1434;
t813 = t1373 * t1505 + t1377 * t906;
t812 = t1373 * t1506 + t1377 * t905;
t811 = -t1374 * t914 + t1378 * t1516;
t810 = -t1374 * t913 + t1378 * t1517;
t809 = -pkin(1) * t1021 - t1374 * t976 + t1378 * t1417;
t804 = -t1372 * t852 + t1376 * t921;
t802 = -t1374 * t901 + t1378 * t1518;
t801 = -t1374 * t900 + t1378 * t1519;
t798 = -t1374 * t895 + t1378 * t1520;
t797 = t1374 * t1520 + t1378 * t895;
t796 = -t1372 * t846 + t1376 * t904;
t793 = pkin(2) * t1028 + t1373 * t1411 + t1377 * t892;
t791 = -t1374 * t884 + t1378 * t1521;
t790 = t1374 * t1521 + t1378 * t884;
t787 = t1373 * t1507 + t1377 * t869;
t786 = t1373 * t1508 + t1377 * t868;
t783 = -t1372 * t815 + t1376 * t880;
t782 = -t1372 * t814 + t1376 * t879;
t779 = -t1372 * t950 + t1376 * t931 + (-t1374 * t890 - t1378 * t891) * qJ(2);
t778 = -pkin(1) * t890 - t1374 * t951 + t1378 * t1420;
t776 = t1373 * t1513 + t1377 * t854;
t773 = -t1374 * t851 + t1378 * t1522;
t770 = -t1382 * t798 + t1386 * t853;
t769 = t1382 * t853 + t1386 * t798;
t768 = -t1374 * t847 + t1378 * t1523;
t767 = t1374 * t1523 + t1378 * t847;
t765 = -t1374 * t845 + t1378 * t1524;
t759 = -t1374 * t827 + t1378 * t1525;
t758 = t1374 * t1525 + t1378 * t827;
t757 = -t1382 * t791 + t1386 * t830;
t756 = t1382 * t830 + t1386 * t791;
t753 = -t1372 * t789 + t1376 * t835;
t752 = -t1372 * t788 + t1376 * t834;
t751 = -t1372 * t833 + t1376 * t863 + (-t1374 * t919 - t1378 * t920) * qJ(2);
t747 = -t1372 * t825 + t1376 * t856 + (-t1374 * t909 - t1378 * t910) * qJ(2);
t740 = pkin(2) * t828 + t1373 * t1408 + t1377 * t894;
t739 = -t1374 * t813 + t1378 * t1526;
t738 = -t1374 * t812 + t1378 * t1527;
t733 = -t1372 * t777 + t1376 * t808;
t731 = -pkin(1) * t919 - t1374 * t832 + t1378 * t1421;
t729 = -t1372 * t794 + t1376 * t823 + (-t1374 * t898 - t1378 * t899) * qJ(2);
t728 = -pkin(1) * t909 - t1374 * t824 + t1378 * t1422;
t726 = pkin(2) * t896 + t1373 * t1437 + t1377 * t829;
t724 = -t1382 * t768 + t1386 * t799;
t723 = t1382 * t799 + t1386 * t768;
t721 = pkin(2) * t885 + t1373 * t1438 + t1377 * t819;
t719 = -t1382 * t759 + t1386 * t792;
t718 = t1382 * t792 + t1386 * t759;
t717 = -t1374 * t787 + t1378 * t1528;
t716 = -t1374 * t786 + t1378 * t1529;
t715 = -t1374 * t784 + t1378 * t1530;
t714 = t1374 * t1530 + t1378 * t784;
t713 = -pkin(1) * t898 - t1374 * t793 + t1378 * t1423;
t709 = -t1374 * t780 + t1378 * t1531;
t708 = t1374 * t1531 + t1378 * t780;
t706 = -t1374 * t776 + t1378 * t1532;
t702 = -t1374 * t771 + t1378 * t1533;
t701 = t1374 * t1533 + t1378 * t771;
t694 = -t1382 * t715 + t1386 * t743;
t693 = t1382 * t743 + t1386 * t715;
t691 = -t1382 * t709 + t1386 * t742;
t690 = t1382 * t742 + t1386 * t709;
t686 = pkin(2) * t848 + t1373 * t1439 + t1377 * t735;
t684 = -t1382 * t702 + t1386 * t730;
t683 = t1382 * t730 + t1386 * t702;
t682 = -t1372 * t727 + t1376 * t744 + (-t1374 * t797 - t1378 * t798) * qJ(2);
t681 = -t1372 * t722 + t1376 * t737 + (-t1374 * t790 - t1378 * t791) * qJ(2);
t680 = -t1372 * t741 + t1376 * t745 + (-t1374 * t758 - t1378 * t759) * qJ(2);
t678 = -t1374 * t710 + t1378 * t1534;
t677 = t1374 * t1534 + t1378 * t710;
t675 = -pkin(1) * t797 - t1374 * t726 + t1378 * t1425;
t673 = -pkin(1) * t758 - t1374 * t740 + t1378 * t1424;
t670 = -pkin(1) * t790 - t1374 * t721 + t1378 * t1426;
t667 = pkin(2) * t785 + t1373 * t1441 + t1377 * t698;
t664 = pkin(2) * t781 + t1373 * t1442 + t1377 * t697;
t663 = -t1372 * t687 + t1376 * t703 + (-t1374 * t767 - t1378 * t768) * qJ(2);
t662 = -t1382 * t678 + t1386 * t695;
t661 = t1382 * t695 + t1386 * t678;
t659 = pkin(2) * t711 + t1373 * t1440 + t1377 * t707;
t655 = pkin(2) * t772 + t1373 * t1443 + t1377 * t688;
t653 = -pkin(1) * t767 - t1374 * t686 + t1378 * t1427;
t652 = -t1374 * t671 + t1378 * t1535;
t651 = t1374 * t1535 + t1378 * t671;
t650 = -t1372 * t668 + t1376 * t676 + (-t1374 * t714 - t1378 * t715) * qJ(2);
t649 = -t1372 * t665 + t1376 * t674 + (-t1374 * t708 - t1378 * t709) * qJ(2);
t648 = -t1372 * t656 + t1376 * t669 + (-t1374 * t701 - t1378 * t702) * qJ(2);
t647 = -t1382 * t652 + t1386 * t658;
t646 = t1382 * t658 + t1386 * t652;
t645 = -pkin(1) * t714 - t1374 * t667 + t1378 * t1428;
t644 = -pkin(1) * t708 - t1374 * t664 + t1378 * t1429;
t642 = -t1372 * t660 + t1376 * t666 + (-t1374 * t677 - t1378 * t678) * qJ(2);
t641 = -pkin(1) * t701 - t1374 * t655 + t1378 * t1431;
t639 = pkin(2) * t672 + t1373 * t1444 + t1377 * t654;
t638 = -pkin(1) * t677 - t1374 * t659 + t1378 * t1430;
t637 = -t1372 * t640 + t1376 * t643 + (-t1374 * t651 - t1378 * t652) * qJ(2);
t636 = -pkin(1) * t651 - t1374 * t639 + t1378 * t1432;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1356, -t1357, 0, t1326, 0, 0, 0, 0, 0, 0, t1256, t1257, t1252, t1162, 0, 0, 0, 0, 0, 0, t982, t986, t958, t840, 0, 0, 0, 0, 0, 0, t867, t874, t858, t719, 0, 0, 0, 0, 0, 0, t757, t770, t724, t662, 0, 0, 0, 0, 0, 0, t691, t694, t684, t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1357, -t1356, 0, t1325, 0, 0, 0, 0, 0, 0, t1254, t1255, t1251, t1161, 0, 0, 0, 0, 0, 0, t981, t985, t957, t839, 0, 0, 0, 0, 0, 0, t866, t873, t857, t718, 0, 0, 0, 0, 0, 0, t756, t769, t723, t661, 0, 0, 0, 0, 0, 0, t690, t693, t683, t646; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1289, t1290, t1282, t1219, 0, 0, 0, 0, 0, 0, t1059, t1065, t1021, t890, 0, 0, 0, 0, 0, 0, t909, t919, t898, t758, 0, 0, 0, 0, 0, 0, t790, t797, t767, t677, 0, 0, 0, 0, 0, 0, t708, t714, t701, t651; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1357, 0, -t1356, 0, t1539, -t1343, -t1325, -pkin(8) * t1325, -t1382 * t1317 + t1332 * t1386, -t1382 * t1284 + t1307 * t1386, -t1382 * t1293 + t1312 * t1386, -t1382 * t1316 + t1331 * t1386, -t1382 * t1291 + t1310 * t1386, t1333 * t1386 + t1382 * t1547, -pkin(8) * t1254 - t1382 * t1191 + t1217 * t1386, -pkin(8) * t1255 - t1382 * t1190 + t1218 * t1386, -pkin(8) * t1251 + t1176 * t1386 - t1382 * t1182, -pkin(8) * t1161 + t1140 * t1386 - t1382 * t1163, -t1382 * t1087 + t1138 * t1386, -t1382 * t1035 + t1082 * t1386, -t1382 * t1070 + t1122 * t1386, -t1382 * t1086 + t1137 * t1386, -t1382 * t1071 + t1123 * t1386, -t1382 * t1125 + t1178 * t1386, -pkin(8) * t981 - t1382 * t842 + t1386 * t872, -pkin(8) * t985 - t1382 * t850 + t1386 * t878, -pkin(8) * t957 - t1382 * t809 + t1386 * t826, -pkin(8) * t839 - t1382 * t778 + t1386 * t779, t1053 * t1386 - t1382 * t974, -t1382 * t912 + t1386 * t968, -t1382 * t927 + t1386 * t983, t1052 * t1386 - t1382 * t973, -t1382 * t928 + t1386 * t984, t1068 * t1386 - t1382 * t991, -pkin(8) * t866 - t1382 * t728 + t1386 * t747, -pkin(8) * t873 - t1382 * t731 + t1386 * t751, -pkin(8) * t857 - t1382 * t713 + t1386 * t729, -pkin(8) * t718 - t1382 * t673 + t1386 * t680, -t1382 * t811 + t1386 * t877, -t1382 * t773 + t1386 * t804, -t1382 * t801 + t1386 * t861, -t1382 * t810 + t1386 * t876, -t1382 * t802 + t1386 * t862, -t1382 * t875 + t1386 * t922, -pkin(8) * t756 - t1382 * t670 + t1386 * t681, -pkin(8) * t769 - t1382 * t675 + t1386 * t682, -pkin(8) * t723 - t1382 * t653 + t1386 * t663, -pkin(8) * t661 - t1382 * t638 + t1386 * t642, -t1382 * t739 + t1386 * t783, -t1382 * t706 + t1386 * t733, -t1382 * t716 + t1386 * t752, -t1382 * t738 + t1386 * t782, -t1382 * t717 + t1386 * t753, -t1382 * t765 + t1386 * t796, -pkin(8) * t690 - t1382 * t644 + t1386 * t649, -pkin(8) * t693 - t1382 * t645 + t1386 * t650, -pkin(8) * t683 - t1382 * t641 + t1386 * t648, -pkin(8) * t646 - t1382 * t636 + t1386 * t637; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1356, 0, t1357, 0, t1343, t1539, t1326, pkin(8) * t1326, t1317 * t1386 + t1382 * t1332, t1284 * t1386 + t1382 * t1307, t1293 * t1386 + t1382 * t1312, t1316 * t1386 + t1382 * t1331, t1291 * t1386 + t1382 * t1310, t1382 * t1333 - t1386 * t1547, pkin(8) * t1256 + t1191 * t1386 + t1382 * t1217, pkin(8) * t1257 + t1190 * t1386 + t1382 * t1218, pkin(8) * t1252 + t1382 * t1176 + t1182 * t1386, pkin(8) * t1162 + t1382 * t1140 + t1163 * t1386, t1087 * t1386 + t1382 * t1138, t1035 * t1386 + t1382 * t1082, t1070 * t1386 + t1382 * t1122, t1086 * t1386 + t1382 * t1137, t1071 * t1386 + t1382 * t1123, t1125 * t1386 + t1382 * t1178, pkin(8) * t982 + t1382 * t872 + t1386 * t842, pkin(8) * t986 + t1382 * t878 + t1386 * t850, pkin(8) * t958 + t1382 * t826 + t1386 * t809, pkin(8) * t840 + t1382 * t779 + t1386 * t778, t1382 * t1053 + t1386 * t974, t1382 * t968 + t1386 * t912, t1382 * t983 + t1386 * t927, t1382 * t1052 + t1386 * t973, t1382 * t984 + t1386 * t928, t1382 * t1068 + t1386 * t991, pkin(8) * t867 + t1382 * t747 + t1386 * t728, pkin(8) * t874 + t1382 * t751 + t1386 * t731, pkin(8) * t858 + t1382 * t729 + t1386 * t713, pkin(8) * t719 + t1382 * t680 + t1386 * t673, t1382 * t877 + t1386 * t811, t1382 * t804 + t1386 * t773, t1382 * t861 + t1386 * t801, t1382 * t876 + t1386 * t810, t1382 * t862 + t1386 * t802, t1382 * t922 + t1386 * t875, pkin(8) * t757 + t1382 * t681 + t1386 * t670, pkin(8) * t770 + t1382 * t682 + t1386 * t675, pkin(8) * t724 + t1382 * t663 + t1386 * t653, pkin(8) * t662 + t1382 * t642 + t1386 * t638, t1382 * t783 + t1386 * t739, t1382 * t733 + t1386 * t706, t1382 * t752 + t1386 * t716, t1382 * t782 + t1386 * t738, t1382 * t753 + t1386 * t717, t1382 * t796 + t1386 * t765, pkin(8) * t691 + t1382 * t649 + t1386 * t644, pkin(8) * t694 + t1382 * t650 + t1386 * t645, pkin(8) * t684 + t1382 * t648 + t1386 * t641, pkin(8) * t647 + t1382 * t637 + t1386 * t636; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1359, t1360, 0, 0, t1366 * t1571, t1341 * t1378 + t1374 * t1460, t1336 * t1378 + t1374 * t1458, t1369 * t1571, t1337 * t1378 + t1374 * t1455, t1370 * qJDD(1), pkin(1) * t1292 - t1299 * t1378 + t1374 * t1511, pkin(1) * t1294 - t1300 * t1378 + t1374 * t1510, pkin(1) * t1283 + t1374 * t1413, pkin(1) * t1220 + t1236 * t1632, t1188 * t1378 + t1374 * t1469, t1148 * t1378 + t1374 * t1478, t1172 * t1378 + t1374 * t1472, t1186 * t1378 + t1374 * t1470, t1173 * t1378 + t1374 * t1471, t1228 * t1378 + t1374 * t1468, pkin(1) * t1060 + t1374 * t1415 + t1378 * t998, pkin(1) * t1066 + t1002 * t1378 + t1374 * t1414, pkin(1) * t1022 + t1374 * t1417 + t1378 * t976, pkin(1) * t891 + t1374 * t1420 + t1378 * t951, t1090 * t1378 + t1374 * t1485, t1036 * t1378 + t1374 * t1492, t1061 * t1378 + t1374 * t1489, t1089 * t1378 + t1374 * t1486, t1062 * t1378 + t1374 * t1488, t1119 * t1378 + t1374 * t1484, pkin(1) * t910 + t1374 * t1422 + t1378 * t824, pkin(1) * t920 + t1374 * t1421 + t1378 * t832, pkin(1) * t899 + t1374 * t1423 + t1378 * t793, pkin(1) * t759 + t1374 * t1424 + t1378 * t740, t1374 * t1516 + t1378 * t914, t1374 * t1522 + t1378 * t851, t1374 * t1519 + t1378 * t900, t1374 * t1517 + t1378 * t913, t1374 * t1518 + t1378 * t901, t1374 * t1503 + t1378 * t970, pkin(1) * t791 + t1374 * t1426 + t1378 * t721, pkin(1) * t798 + t1374 * t1425 + t1378 * t726, pkin(1) * t768 + t1374 * t1427 + t1378 * t686, pkin(1) * t678 + t1374 * t1430 + t1378 * t659, t1374 * t1526 + t1378 * t813, t1374 * t1532 + t1378 * t776, t1374 * t1529 + t1378 * t786, t1374 * t1527 + t1378 * t812, t1374 * t1528 + t1378 * t787, t1374 * t1524 + t1378 * t845, pkin(1) * t709 + t1374 * t1429 + t1378 * t664, pkin(1) * t715 + t1374 * t1428 + t1378 * t667, pkin(1) * t702 + t1374 * t1431 + t1378 * t655, pkin(1) * t652 + t1374 * t1432 + t1378 * t639;];
tauB_reg  = t1;
