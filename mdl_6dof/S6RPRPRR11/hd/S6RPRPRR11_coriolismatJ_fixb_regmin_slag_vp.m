% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRPRR11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:15:18
% EndTime: 2019-03-09 04:16:21
% DurationCPUTime: 37.58s
% Computational Cost: add. (34742->933), mult. (96896->1363), div. (0->0), fcn. (115512->14), ass. (0->695)
t605 = sin(pkin(6));
t607 = cos(pkin(12));
t610 = sin(qJ(3));
t604 = sin(pkin(7));
t979 = cos(pkin(6));
t756 = t979 * t604;
t742 = t610 * t756;
t978 = cos(pkin(7));
t757 = t610 * t978;
t603 = sin(pkin(12));
t994 = cos(qJ(3));
t808 = t994 * t603;
t512 = t742 + (t607 * t757 + t808) * t605;
t602 = sin(pkin(13));
t606 = cos(pkin(13));
t932 = t605 * t607;
t687 = t604 * t932 - t978 * t979;
t423 = -t512 * t606 + t602 * t687;
t609 = sin(qJ(5));
t1033 = t609 * t423;
t424 = -t512 * t602 - t687 * t606;
t993 = cos(qJ(5));
t1034 = t993 * t424;
t328 = t1034 + t1033;
t611 = cos(qJ(6));
t1040 = t611 * t328;
t310 = t1040 / 0.2e1;
t1042 = -t1040 / 0.2e1 + t310;
t1043 = qJD(6) * t1042;
t1022 = -t328 / 0.2e1;
t739 = t978 * t994;
t934 = t603 * t605;
t510 = t610 * t934 - t739 * t932 - t756 * t994;
t866 = qJD(1) * t510;
t796 = t328 * t866;
t608 = sin(qJ(6));
t1041 = t608 * t328;
t801 = t993 * t602;
t910 = t609 * t606;
t570 = t801 + t910;
t1004 = t570 / 0.2e1;
t559 = t801 / 0.2e1 + t910 / 0.2e1;
t317 = (t1004 + t559) * t510;
t1032 = t993 * t423;
t1035 = t609 * t424;
t1036 = -t1032 + t1035;
t797 = t1036 * t866;
t1039 = qJD(3) * t317 + t797;
t1021 = t1036 / 0.2e1;
t927 = t608 * t1036;
t249 = -t510 * t611 + t927;
t1038 = t1036 * t249;
t906 = t611 * t1036;
t251 = t510 * t608 + t906;
t1037 = t1036 * t251;
t1018 = t1034 / 0.2e1;
t730 = t1032 / 0.2e1 - t1035 / 0.2e1;
t800 = t993 * t606;
t911 = t609 * t602;
t568 = -t800 + t911;
t1006 = t568 / 0.2e1;
t957 = t328 * t570;
t145 = t1036 * t1006 - t957 / 0.2e1;
t1031 = t145 * qJD(5);
t862 = qJD(3) * t570;
t794 = t568 * t862;
t685 = qJD(1) * t145 + t794;
t870 = qJD(1) * t1036;
t686 = qJD(3) * t145 - t328 * t870;
t812 = pkin(1) * t979;
t890 = qJ(2) * t932 + t603 * t812;
t502 = (t932 * t978 + t756) * pkin(9) + t890;
t593 = t607 * t812;
t513 = t979 * pkin(2) + t593 + (-pkin(9) * t978 - qJ(2)) * t934;
t534 = (-pkin(9) * t603 * t604 - pkin(2) * t607 - pkin(1)) * t605;
t811 = t604 * t994;
t338 = t610 * t502 - t513 * t739 - t534 * t811;
t387 = pkin(3) * t512 + qJ(4) * t510;
t213 = t338 * t602 + t606 * t387;
t1030 = -t213 / 0.2e1;
t561 = t568 ^ 2;
t562 = t570 ^ 2;
t1029 = -t562 - t561;
t825 = t562 - t561;
t587 = t602 ^ 2 + t606 ^ 2;
t859 = qJD(3) * t611;
t790 = t608 * t859;
t749 = t570 * t790;
t600 = t608 ^ 2;
t601 = t611 ^ 2;
t594 = t601 - t600;
t755 = t594 * qJD(5);
t1028 = 0.2e1 * t749 - t755;
t1027 = t328 ^ 2;
t1026 = -pkin(5) / 0.2e1;
t1025 = -t249 / 0.2e1;
t1024 = t249 / 0.2e1;
t1023 = t328 / 0.2e1;
t501 = t512 * t611;
t370 = t568 * t510;
t923 = t608 * t370;
t334 = -t501 + t923;
t1020 = -t334 / 0.2e1;
t596 = -pkin(4) * t606 - pkin(3);
t733 = pkin(5) * t568 - pkin(11) * t570;
t672 = t596 + t733;
t989 = pkin(10) + qJ(4);
t584 = t989 * t606;
t760 = t989 * t602;
t523 = t584 * t993 - t609 * t760;
t899 = t611 * t523;
t380 = t608 * t672 + t899;
t1019 = t380 / 0.2e1;
t933 = t604 * t610;
t557 = t602 * t978 + t606 * t933;
t758 = t606 * t978;
t673 = t602 * t933 - t758;
t460 = t557 * t993 - t609 * t673;
t922 = t608 * t460;
t425 = t611 * t811 + t922;
t1017 = -t425 / 0.2e1;
t901 = t611 * t460;
t426 = -t608 * t811 + t901;
t1016 = -t426 / 0.2e1;
t459 = t557 * t609 + t673 * t993;
t1015 = t459 / 0.2e1;
t1014 = t460 / 0.2e1;
t1013 = -t510 / 0.2e1;
t1012 = -t512 / 0.2e1;
t990 = t570 * pkin(5);
t991 = t568 * pkin(11);
t515 = t990 + t991;
t1011 = t515 / 0.2e1;
t522 = t584 * t609 + t760 * t993;
t1010 = -t522 / 0.2e1;
t1009 = -t523 / 0.2e1;
t748 = t994 * t993;
t809 = t609 * t994;
t532 = (t602 * t748 + t606 * t809) * t604;
t1008 = t532 / 0.2e1;
t1007 = -t568 / 0.2e1;
t1005 = -t570 / 0.2e1;
t1003 = t596 / 0.2e1;
t1002 = -t602 / 0.2e1;
t1001 = t602 / 0.2e1;
t1000 = -t606 / 0.2e1;
t999 = t606 / 0.2e1;
t998 = t608 / 0.2e1;
t997 = t610 / 0.2e1;
t996 = -t611 / 0.2e1;
t995 = t611 / 0.2e1;
t992 = pkin(11) * t328;
t394 = -t513 * t604 + t978 * t534;
t727 = pkin(3) * t510 - qJ(4) * t512;
t295 = t394 + t727;
t474 = t513 * t757;
t476 = t994 * t502;
t516 = t534 * t933;
t339 = t476 + t474 + t516;
t315 = -qJ(4) * t687 + t339;
t153 = t602 * t295 + t606 * t315;
t126 = pkin(10) * t424 + t153;
t152 = t606 * t295 - t315 * t602;
t661 = pkin(4) * t510 + pkin(10) * t423 + t152;
t68 = t126 * t609 - t993 * t661;
t62 = -pkin(5) * t510 + t68;
t988 = -t62 + t68;
t322 = pkin(3) * t687 + t338;
t212 = -pkin(4) * t424 + t322;
t734 = -pkin(5) * t328 - pkin(11) * t1036;
t612 = t212 + t734;
t69 = t126 * t993 + t609 * t661;
t63 = t510 * pkin(11) + t69;
t27 = t608 * t63 - t611 * t612;
t175 = pkin(5) * t1036 - t992;
t908 = t611 * t175;
t5 = t69 * t249 - t27 * t1036 - (t608 * t988 + t908) * t328;
t987 = t5 * qJD(1);
t28 = t608 * t612 + t611 * t63;
t929 = t608 * t175;
t6 = t69 * t251 - t28 * t1036 - (t611 * t988 - t929) * t328;
t986 = t6 * qJD(1);
t985 = t608 * t68;
t159 = pkin(10) * t510 * t606 + pkin(4) * t512 + t213;
t158 = t609 * t159;
t214 = -t606 * t338 + t602 * t387;
t377 = t602 * t510;
t189 = pkin(10) * t377 + t214;
t186 = t993 * t189;
t893 = t186 + t158;
t92 = pkin(11) * t512 + t893;
t984 = t608 * t92;
t983 = t611 * t68;
t982 = t611 * t92;
t369 = t570 * t510;
t258 = -pkin(4) * t377 + t339;
t129 = -pkin(5) * t369 - pkin(11) * t370 + t258;
t909 = t611 * t129;
t45 = t909 - t984;
t806 = t993 * t159;
t917 = t609 * t189;
t689 = t806 - t917;
t91 = -t512 * pkin(5) - t689;
t7 = t249 * t91 + t27 * t369 - t328 * t45 + t334 * t62;
t981 = t7 * qJD(1);
t902 = t611 * t370;
t945 = t512 * t608;
t335 = t902 + t945;
t930 = t608 * t129;
t46 = t930 + t982;
t8 = t251 * t91 + t28 * t369 + t328 * t46 + t335 * t62;
t980 = t8 * qJD(1);
t13 = -t249 * t62 - t27 * t328;
t977 = qJD(1) * t13;
t14 = t251 * t62 + t28 * t328;
t976 = qJD(1) * t14;
t31 = t212 * t328 + t510 * t68;
t975 = qJD(1) * t31;
t32 = t1036 * t212 - t510 * t69;
t974 = qJD(1) * t32;
t694 = t1014 * t251 + t1016 * t1036;
t741 = t603 * t757;
t807 = t994 * t607;
t536 = (-t741 + t807) * t605;
t816 = t604 * t934;
t461 = -t536 * t602 + t606 * t816;
t803 = t993 * t461;
t462 = t536 * t606 + t602 * t816;
t912 = t609 * t462;
t351 = -t803 + t912;
t955 = t351 * t608;
t50 = -t955 / 0.2e1 + t694;
t973 = qJD(1) * t50;
t78 = t152 * t423 + t153 * t424;
t972 = qJD(1) * t78;
t84 = -t1041 * t328 - t1038;
t971 = qJD(1) * t84;
t85 = -t1027 * t611 + t1037;
t970 = qJD(1) * t85;
t86 = t1040 * t328 + t1037;
t969 = qJD(1) * t86;
t704 = t603 * t739;
t931 = t607 * t610;
t535 = (t704 + t931) * t605;
t897 = t611 * t535;
t802 = t993 * t462;
t913 = t609 * t461;
t352 = t802 + t913;
t925 = t608 * t352;
t691 = -t925 / 0.2e1 + t897 / 0.2e1;
t695 = t1015 * t251 - t1016 * t328;
t93 = t691 - t695;
t968 = qJD(1) * t93;
t904 = t611 * t352;
t918 = t608 * t535;
t690 = -t918 / 0.2e1 - t904 / 0.2e1;
t697 = t1022 * t425 + t1025 * t459;
t94 = t690 - t697;
t967 = qJD(1) * t94;
t723 = t897 - t925;
t99 = t351 * t249 - t328 * t723;
t966 = qJD(1) * t99;
t965 = t153 * t606;
t19 = -t212 * t369 - t258 * t328 + t510 * t689 - t68 * t512;
t964 = t19 * qJD(1);
t20 = t1036 * t258 + t212 * t370 - t510 * t893 - t69 * t512;
t963 = t20 * qJD(1);
t962 = t214 * t557;
t961 = t251 * t608;
t960 = t251 * t611;
t29 = t152 * t213 + t153 * t214 + t322 * t339;
t959 = t29 * qJD(1);
t30 = t214 * t424 + t213 * t423 + (t152 * t606 + t153 * t602) * t510;
t958 = t30 * qJD(1);
t956 = t335 * t608;
t954 = t351 * t611;
t533 = (-t602 * t809 + t606 * t748) * t604;
t919 = t608 * t533;
t472 = t611 * t933 - t919;
t626 = t1008 * t249 + t1015 * t334 - t1017 * t369 + t1022 * t472;
t493 = t608 * t570;
t770 = -t493 / 0.2e1;
t628 = t1007 * t723 + t351 * t770;
t36 = t626 + t628;
t953 = t36 * qJD(1);
t898 = t611 * t533;
t473 = t608 * t933 + t898;
t625 = t1008 * t251 + t1015 * t335 - t1016 * t369 + t1023 * t473;
t724 = t904 + t918;
t935 = t570 * t611;
t779 = t935 / 0.2e1;
t629 = t1007 * t724 + t351 * t779;
t38 = t625 - t629;
t952 = t38 * qJD(1);
t951 = t425 * t568;
t950 = t426 * t568;
t43 = t152 * t512 - t339 * t424 + (-t322 * t602 + t213) * t510;
t949 = t43 * qJD(1);
t44 = -t153 * t512 - t339 * t423 + (-t322 * t606 - t214) * t510;
t948 = t44 * qJD(1);
t947 = t462 * t606;
t696 = t1014 * t249 + t1017 * t1036;
t47 = t954 / 0.2e1 + t696;
t946 = t47 * qJD(1);
t944 = t522 * t608;
t943 = t522 * t611;
t53 = t152 * t461 + t153 * t462 + t322 * t535;
t942 = t53 * qJD(1);
t941 = t532 * t608;
t940 = t532 * t611;
t939 = t535 * t568;
t938 = t535 * t570;
t937 = t535 * t606;
t907 = t611 * t249;
t688 = t907 / 0.2e1 + t961 / 0.2e1;
t644 = -t1040 * t493 + t568 * t688;
t698 = t1020 * t608 + t335 * t995;
t55 = t644 - t698;
t936 = t55 * qJD(1);
t928 = t608 * t249;
t924 = t608 * t369;
t921 = t608 * t515;
t920 = t608 * t523;
t491 = t608 * t568;
t903 = t611 * t369;
t900 = t611 * t515;
t496 = t611 * t568;
t725 = t907 + t961;
t79 = t725 * t328;
t896 = t79 * qJD(1);
t80 = -t249 * t335 - t251 * t334;
t895 = t80 * qJD(1);
t83 = -t1027 * t608 + t1038;
t894 = t83 * qJD(1);
t682 = t605 * t704;
t892 = t682 / 0.2e1 + t605 * t931 / 0.2e1;
t776 = -t932 / 0.2e1;
t891 = -t682 / 0.2e1 + t610 * t776;
t100 = t351 * t251 + t328 * t724;
t889 = qJD(1) * t100;
t824 = -t994 / 0.2e1;
t615 = (-t328 * t997 - t369 * t824) * t604 + t459 * t1012 + t532 * t1013;
t115 = -t939 / 0.2e1 + t615;
t888 = qJD(1) * t115;
t614 = (t1036 * t997 + t370 * t824) * t604 + t460 * t1012 + t533 * t1013;
t117 = -t938 / 0.2e1 + t614;
t887 = qJD(1) * t117;
t746 = -t811 / 0.2e1;
t657 = t1013 * t460 + t1036 * t746;
t676 = -t912 / 0.2e1 + t803 / 0.2e1;
t130 = -t657 + t676;
t886 = qJD(1) * t130;
t745 = t811 / 0.2e1;
t658 = t1015 * t510 - t328 * t745;
t677 = -t913 / 0.2e1 - t802 / 0.2e1;
t131 = -t658 + t677;
t885 = qJD(1) * t131;
t148 = -t328 * t535 - t351 * t510;
t884 = qJD(1) * t148;
t149 = t1036 * t535 - t352 * t510;
t883 = qJD(1) * t149;
t150 = t328 * t512 + t369 * t510;
t882 = qJD(1) * t150;
t151 = t1036 * t512 + t370 * t510;
t881 = qJD(1) * t151;
t880 = qJD(1) * t1041;
t763 = 0.2e1 * t1022;
t162 = t763 * t608;
t879 = qJD(1) * t162;
t187 = -t338 * t687 - t394 * t510;
t878 = qJD(1) * t187;
t188 = t339 * t687 + t394 * t512;
t877 = qJD(1) * t188;
t199 = t423 * t461 + t424 * t462;
t876 = qJD(1) * t199;
t624 = t423 * t673 / 0.2e1 - t424 * t557 / 0.2e1;
t231 = t624 + t892;
t875 = qJD(1) * t231;
t874 = qJD(1) * t251;
t256 = -t424 * t535 + t461 * t510;
t873 = qJD(1) * t256;
t257 = -t423 * t535 - t462 * t510;
t872 = qJD(1) * t257;
t871 = qJD(1) * t328;
t361 = t510 * t816 + t535 * t687;
t869 = qJD(1) * t361;
t362 = t512 * t816 + t536 * t687;
t868 = qJD(1) * t362;
t368 = t559 * t510;
t867 = qJD(1) * t368;
t864 = qJD(3) * t339;
t863 = qJD(3) * t568;
t861 = qJD(3) * t596;
t860 = qJD(3) * t604;
t858 = qJD(4) * t510;
t857 = qJD(4) * t611;
t856 = qJD(5) * t510;
t855 = qJD(5) * t570;
t854 = qJD(5) * t608;
t853 = qJD(5) * t611;
t852 = qJD(6) * t328;
t851 = qJD(6) * t608;
t850 = qJD(6) * t611;
t102 = t249 * t369 + t328 * t334;
t849 = t102 * qJD(1);
t103 = -t251 * t369 - t328 * t335;
t848 = t103 * qJD(1);
t765 = -t496 / 0.2e1;
t782 = t957 / 0.2e1;
t660 = t251 * t765 + t601 * t782;
t105 = -t956 / 0.2e1 + t660;
t847 = t105 * qJD(1);
t783 = t249 * t1007;
t108 = t783 - t902 / 0.2e1 + (t782 + t1012) * t608;
t846 = t108 * qJD(1);
t681 = t1007 * t251 + t310 * t570;
t729 = t501 / 0.2e1 - t923 / 0.2e1;
t109 = t681 - t729;
t845 = t109 * qJD(1);
t113 = t1036 * t369 + t328 * t370;
t844 = t113 * qJD(1);
t617 = (t1000 * t673 + t1001 * t557) * t510;
t627 = t424 * t1000;
t620 = t994 * t627;
t125 = -t604 * t620 - t947 / 0.2e1 + (-t423 * t745 + t461 / 0.2e1) * t602 + t617;
t843 = t125 * qJD(1);
t168 = 0.2e1 * t310;
t842 = t168 * qJD(1);
t777 = t933 / 0.2e1;
t613 = t1012 * t673 - t424 * t777;
t182 = t937 / 0.2e1 + t613;
t841 = t182 * qJD(1);
t778 = -t933 / 0.2e1;
t680 = t557 * t512 / 0.2e1 - t423 * t778;
t780 = t535 * t1001;
t259 = t780 + t680;
t840 = t259 * qJD(1);
t316 = (t1004 - t559) * t510;
t839 = t316 * qJD(1);
t838 = t316 * qJD(3);
t837 = t317 * qJD(1);
t674 = -t800 / 0.2e1 + t911 / 0.2e1;
t318 = (t1006 + t674) * t510;
t836 = t318 * qJD(1);
t319 = (t1007 + t674) * t510;
t835 = t319 * qJD(1);
t342 = t510 ^ 2 - t512 ^ 2;
t834 = t342 * qJD(1);
t813 = -t978 / 0.2e1;
t619 = t512 * t813 + t687 * t778;
t355 = t619 + t891;
t833 = t355 * qJD(1);
t616 = t510 * t813 + t687 * t745;
t357 = (t807 / 0.2e1 - t741 / 0.2e1) * t605 + t616;
t832 = t357 * qJD(1);
t831 = t368 * qJD(6);
t443 = (t890 * t607 + (qJ(2) * t934 - t593) * t603) * t605;
t830 = t443 * qJD(1);
t829 = t491 * qJD(3);
t736 = t757 / 0.2e1;
t505 = t742 / 0.2e1 + (t808 / 0.2e1 + t607 * t736) * t605;
t828 = t505 * qJD(1);
t827 = t512 * qJD(3);
t560 = (t603 ^ 2 + t607 ^ 2) * t605 ^ 2;
t826 = t560 * qJD(1);
t558 = t568 * qJD(5);
t823 = t994 / 0.2e1;
t822 = pkin(5) * t1024;
t821 = t251 * t1026;
t820 = pkin(5) * t1020;
t819 = t335 * t1026;
t818 = -t992 / 0.2e1;
t817 = t62 / 0.2e1 - t68 / 0.2e1;
t815 = -t984 / 0.2e1;
t814 = -t982 / 0.2e1;
t810 = t606 * t994;
t799 = t251 * t871;
t795 = t423 * t866;
t793 = t601 * t862;
t792 = t570 * t859;
t791 = t610 * t860;
t789 = t608 * t853;
t788 = t568 * t850;
t787 = t512 * t866;
t786 = t510 * t827;
t785 = t570 * t558;
t784 = t608 * t850;
t555 = t570 * t853;
t781 = t424 * t999;
t775 = t1041 / 0.2e1;
t774 = -t927 / 0.2e1;
t773 = t924 / 0.2e1;
t772 = -t924 / 0.2e1;
t771 = -t919 / 0.2e1;
t768 = t906 / 0.2e1;
t767 = t903 / 0.2e1;
t766 = -t898 / 0.2e1;
t764 = -t158 / 0.2e1 - t186 / 0.2e1;
t762 = 0.2e1 * t1021;
t759 = t605 * t979;
t754 = -t829 - t851;
t753 = -qJD(5) - t866;
t752 = -qJD(6) + t871;
t751 = qJD(4) + t861;
t750 = -qJD(6) - t863;
t747 = t602 * t823;
t744 = -t810 / 0.2e1;
t740 = t818 + t175 / 0.2e1;
t738 = qJD(1) * t759;
t737 = qJD(2) * t759;
t735 = t129 / 0.2e1 + t62 * t1005;
t732 = 0.2e1 * t608 * t555;
t728 = -t474 / 0.2e1 - t476 / 0.2e1 - t516 / 0.2e1;
t726 = -t213 * t602 + t214 * t606;
t693 = t947 / 0.2e1 + t461 * t1002;
t632 = t693 * qJ(4) - t535 * pkin(3) / 0.2e1;
t21 = -t962 / 0.2e1 + t758 * t1030 + (t153 * t744 + t339 * t823 - t322 * t610 / 0.2e1 + (t152 * t823 + t213 * t997) * t602) * t604 + t632;
t653 = t673 * t602;
t399 = t653 * t811 + (t557 * t810 - t610 * t811) * t604;
t722 = -t21 * qJD(1) + t399 * qJD(2);
t642 = t1003 * t1036 + t1004 * t212 + t1009 * t510;
t678 = -t917 / 0.2e1 + t806 / 0.2e1;
t39 = -t642 + t678;
t714 = -t748 / 0.2e1;
t631 = t602 * t714 + t609 * t744;
t439 = (t570 * t823 + t631) * t604;
t721 = t39 * qJD(1) + t439 * qJD(2);
t643 = -t1003 * t328 + t1006 * t212 + t1010 * t510;
t40 = t643 + t764;
t630 = t606 * t714 + t609 * t747;
t440 = (t568 * t824 + t630) * t604;
t720 = t40 * qJD(1) + t440 * qJD(2);
t433 = t825 * t608;
t636 = (t774 + t1025) * t570 - t328 * t491;
t71 = t767 + t636;
t719 = -qJD(1) * t71 + qJD(3) * t433;
t434 = t1029 * t608;
t659 = t1004 * t1036 + t568 * t763;
t622 = t1004 * t249 + t608 * t659;
t73 = t767 + t622;
t718 = qJD(1) * t73 - qJD(3) * t434;
t435 = t825 * t611;
t635 = (t768 + t251 / 0.2e1) * t570 + t328 * t496;
t75 = t773 + t635;
t717 = -qJD(1) * t75 - qJD(3) * t435;
t504 = t1029 * t611;
t621 = t1004 * t251 + t611 * t659;
t77 = t772 + t621;
t716 = t77 * qJD(1) - t504 * qJD(3);
t715 = t750 * t611;
t112 = -t1036 * t570 - t328 * t568;
t118 = -t1036 ^ 2 + t1027;
t713 = qJD(1) * t118 + qJD(3) * t112;
t712 = qJD(1) * t112 - qJD(3) * t825;
t165 = t762 * t608;
t711 = -qJD(1) * t165 - qJD(3) * t493;
t710 = qJD(1) * t1040 - t496 * qJD(3);
t176 = -t423 * t602 - t627 + t781;
t181 = t423 ^ 2 + t424 ^ 2;
t709 = qJD(1) * t181 + qJD(3) * t176;
t708 = qJD(1) * t176 + qJD(3) * t587;
t177 = 0.2e1 * t1018 + t1033;
t707 = qJD(1) * t177 - t863;
t179 = 0.2e1 * t730;
t706 = qJD(1) * t179 - t862;
t705 = -qJD(1) * t730 + qJD(3) * t559;
t703 = t603 * t738;
t702 = t607 * t738;
t701 = t991 / 0.2e1 + t990 / 0.2e1;
t700 = (t1017 + t922 / 0.2e1) * t570;
t699 = (t1016 + t901 / 0.2e1) * t570;
t692 = t1005 * t459 + t777;
t170 = t762 * t611;
t684 = t170 * qJD(1) + t792;
t683 = qJD(5) * t505 + t787;
t679 = t1011 + t701;
t675 = t587 * t994;
t671 = t91 / 0.2e1 - t328 * t1011 + t175 * t1006;
t634 = pkin(11) * t369 / 0.2e1 + t69 * t1005 + t817 * t568;
t379 = -t611 * t672 + t920;
t647 = t1004 * t27 + t1009 * t249 + t1021 * t379;
t1 = t608 * t634 - t611 * t671 + t647 + t820;
t140 = t940 / 0.2e1 + t700;
t156 = t515 * t496 + (-t379 + t920) * t570;
t670 = -t1 * qJD(1) + t140 * qJD(2) + t156 * qJD(3);
t143 = -t941 / 0.2e1 + t699;
t157 = -t515 * t491 + (-t380 + t899) * t570;
t645 = t1004 * t28 + t1009 * t251 + t1019 * t1036;
t2 = t608 * t671 + t611 * t634 + t645 + t819;
t669 = -t2 * qJD(1) + t143 * qJD(2) + t157 * qJD(3);
t237 = t771 + t950 / 0.2e1 + t692 * t611;
t294 = -t380 * t568 + t522 * t935;
t646 = t1006 * t28 + t1010 * t251 - t1019 * t328;
t9 = t611 * t735 + t646 + t815;
t668 = qJD(1) * t9 + qJD(2) * t237 - qJD(3) * t294;
t101 = t249 ^ 2 - t251 ^ 2;
t82 = (-t928 + t960) * t570;
t667 = qJD(1) * t101 - qJD(3) * t82 - qJD(5) * t725;
t648 = t1007 * t27 + t1023 * t379 + t1024 * t522;
t10 = -t608 * t735 + t648 + t814;
t238 = t766 - t951 / 0.2e1 - t692 * t608;
t293 = t379 * t568 - t493 * t522;
t665 = -t10 * qJD(1) - t238 * qJD(2) + t293 * qJD(3);
t623 = t557 * t999 + t653 / 0.2e1;
t431 = t777 - t623;
t618 = (t1002 * t423 + t781) * qJ(4) + t152 * t1002 + t965 / 0.2e1;
t52 = t618 + t728;
t581 = t587 * qJ(4);
t664 = qJD(1) * t52 - qJD(2) * t431 + qJD(3) * t581;
t663 = qJD(3) * t687;
t662 = t687 * qJD(1);
t15 = t608 * t740 + t611 * t817 + t822;
t282 = t679 * t608;
t656 = pkin(5) * t853 - t15 * qJD(1) - t282 * qJD(3);
t17 = t608 * t817 - t611 * t740 + t821;
t284 = t679 * t611;
t655 = pkin(5) * t854 - t17 * qJD(1) + t284 * qJD(3);
t654 = t674 * t510;
t121 = t688 * t570;
t123 = -t928 / 0.2e1 + t960 / 0.2e1;
t652 = qJD(3) * t121 - qJD(5) * t123 + t249 * t874;
t490 = (t600 / 0.2e1 - t601 / 0.2e1) * t570;
t651 = t123 * qJD(1) - t490 * qJD(3) + t789;
t650 = -qJD(6) * t730 + t686;
t649 = qJD(6) * t559 + t685;
t640 = t662 - qJD(3);
t503 = t594 * t562;
t639 = t82 * qJD(1) + t503 * qJD(3) + t732;
t638 = qJD(1) * t725 + t1028;
t637 = t121 * qJD(1) + t490 * qJD(5) + t562 * t790;
t556 = t559 * qJD(5);
t539 = -0.2e1 * t570 * t784;
t489 = t505 * qJD(3);
t478 = t491 * qJD(6);
t477 = t490 * qJD(6);
t442 = t570 * t746 + t604 * t631;
t441 = t568 * t745 + t604 * t630;
t432 = t777 + t623;
t366 = -t903 / 0.2e1;
t358 = t736 * t934 + t776 * t994 + t616;
t356 = -t619 + t891;
t350 = t459 * t611;
t349 = t459 * t608;
t321 = t370 / 0.2e1 + t654;
t320 = -t370 / 0.2e1 + t654;
t285 = t944 + t900 / 0.2e1 - t701 * t611;
t283 = t943 - t921 / 0.2e1 + t701 * t608;
t260 = t780 - t680;
t240 = -t950 / 0.2e1 + t459 * t779 + t771 + t611 * t777;
t239 = t951 / 0.2e1 + t459 * t770 + t766 + t608 * t778;
t232 = -t624 + t892;
t190 = -qJD(3) * t368 - qJD(5) * t730;
t183 = -t937 / 0.2e1 + t613;
t178 = t1018 - t1034 / 0.2e1;
t174 = t176 * qJD(4);
t171 = t1036 * t996 + t768;
t164 = t1036 * t998 + t774;
t163 = t775 - t1041 / 0.2e1;
t142 = t941 / 0.2e1 + t699;
t141 = -t940 / 0.2e1 + t700;
t133 = t657 + t676;
t132 = t658 + t677;
t124 = (-t423 * t747 - t620) * t604 + t617 + t693;
t122 = t123 * qJD(6);
t119 = t121 * qJD(6);
t116 = t938 / 0.2e1 + t614;
t114 = t939 / 0.2e1 + t615;
t111 = t112 * qJD(5);
t110 = t681 + t729;
t107 = -t328 * t770 + t783 + t902 / 0.2e1 + t945 / 0.2e1;
t104 = t956 / 0.2e1 + t660;
t97 = t725 * qJD(6);
t96 = t691 + t695;
t95 = t690 + t697;
t81 = t82 * qJD(6);
t76 = t773 + t621;
t74 = t772 + t635;
t72 = t366 + t622;
t70 = t366 + t636;
t54 = t644 + t698;
t51 = t618 - t728;
t49 = t955 / 0.2e1 + t694;
t48 = -t954 / 0.2e1 + t696;
t42 = t642 + t678;
t41 = -t643 + t764;
t37 = t625 + t629;
t35 = t626 - t628;
t22 = t962 / 0.2e1 + t745 * t965 + t673 * t1030 + t322 * t777 + t632 + (t152 * t602 + t339) * t746;
t18 = pkin(11) * t310 + t821 + t62 * t998 + t985 / 0.2e1 + t908 / 0.2e1;
t16 = t608 * t818 + t822 + t62 * t995 + t983 / 0.2e1 - t929 / 0.2e1;
t12 = t62 * t779 + t815 + t909 / 0.2e1 - t646;
t11 = t62 * t770 + t814 - t930 / 0.2e1 - t648;
t4 = (t921 - t943) * t1023 + (t929 - t983) * t1007 + t522 * t310 + t69 * t779 + t62 * t765 + pkin(11) * t767 + t819 + t91 * t998 - t645;
t3 = (t900 + t944) * t1022 + (t908 + t985) * t1006 + t522 * t775 + t69 * t493 / 0.2e1 - t62 * t491 / 0.2e1 + pkin(11) * t773 + t820 + t91 * t996 - t647;
t23 = [0, 0, 0, -t603 * t737, -t607 * t737, t560 * qJD(2), t443 * qJD(2), -t786, t342 * qJD(3), t510 * t663, t512 * t663, 0, qJD(2) * t361 + qJD(3) * t188, qJD(2) * t362 + qJD(3) * t187, qJD(2) * t256 + qJD(3) * t43 + t423 * t858, qJD(2) * t257 + qJD(3) * t44 - t424 * t858, qJD(2) * t199 + qJD(3) * t30 + qJD(4) * t181, qJD(2) * t53 + qJD(3) * t29 + qJD(4) * t78 (qJD(3) * t370 + qJD(5) * t328) * t1036, qJD(3) * t113 + qJD(5) * t118, qJD(3) * t151 + t328 * t856, qJD(3) * t150 - t1036 * t856, t786, qJD(2) * t148 + qJD(3) * t19 + qJD(5) * t32 - t1036 * t858, qJD(2) * t149 + qJD(3) * t20 + qJD(5) * t31 - t328 * t858 (qJD(3) * t335 - qJD(6) * t249 + t328 * t853) * t251, qJD(3) * t80 - qJD(5) * t79 + qJD(6) * t101, qJD(3) * t103 + qJD(5) * t85 + t249 * t852, qJD(3) * t102 - qJD(5) * t83 + t251 * t852 -(-qJD(3) * t369 + qJD(5) * t1036) * t328, qJD(2) * t99 + qJD(3) * t7 - qJD(4) * t84 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t100 + qJD(3) * t8 + qJD(4) * t86 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, -t703, -t702, t826, t830, 0, 0, 0, 0, 0, qJD(3) * t356 + t869, qJD(3) * t358 + t868, qJD(3) * t183 + t873, qJD(3) * t260 + t872, qJD(3) * t124 + t876, t942 + (-t461 * t673 + t462 * t557 - t535 * t811) * qJD(2) + t22 * qJD(3) + t232 * qJD(4), 0, 0, 0, 0, 0, qJD(3) * t114 + qJD(5) * t133 + t884, qJD(3) * t116 + qJD(5) * t132 + t883, 0, 0, 0, 0, 0, qJD(3) * t35 + qJD(5) * t48 + qJD(6) * t96 + t966, qJD(3) * t37 + qJD(5) * t49 + qJD(6) * t95 + t889; 0, 0, 0, 0, 0, 0, 0, -t787, t834, t640 * t510, t640 * t512, 0, qJD(2) * t356 - t864 + t877, qJD(2) * t358 + qJD(3) * t338 + t878, t949 + t183 * qJD(2) + (-t339 * t606 + t602 * t727) * qJD(3) - t377 * qJD(4), t602 * t864 + t948 + t260 * qJD(2) + (qJD(3) * t727 - t858) * t606, t124 * qJD(2) + qJD(3) * t726 + t174 + t958, t959 + t22 * qJD(2) + (-t339 * pkin(3) + qJ(4) * t726) * qJD(3) + t51 * qJD(4), -t1031 + (t862 + t870) * t370, t844 + (t369 * t570 - t370 * t568) * qJD(3) + t111, qJD(5) * t320 + t570 * t827 + t881, -qJD(5) * t316 - t568 * t827 + t882, t683, t964 + t114 * qJD(2) + (t258 * t568 - t369 * t596 - t512 * t522) * qJD(3) - t317 * qJD(4) + t42 * qJD(5), t963 + t116 * qJD(2) + (t258 * t570 + t370 * t596 - t512 * t523) * qJD(3) + t321 * qJD(4) + t41 * qJD(5), t104 * qJD(5) - t119 + (t792 + t874) * t335, t895 + t54 * qJD(5) - t81 + (-t334 * t611 - t956) * t862, t848 + (t335 * t568 - t570 * t903) * qJD(3) + t74 * qJD(5) + t107 * qJD(6), t849 + (-t334 * t568 + t369 * t493) * qJD(3) + t70 * qJD(5) + t110 * qJD(6), -t831 + t1031 - (t863 - t871) * t369, t981 + t35 * qJD(2) + (t334 * t522 + t369 * t379 + t45 * t568 + t493 * t91) * qJD(3) + t72 * qJD(4) + t3 * qJD(5) + t12 * qJD(6), t980 + t37 * qJD(2) + (t522 * t335 + t380 * t369 - t46 * t568 + t91 * t935) * qJD(3) + t76 * qJD(4) + t4 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t377 + t795 (-qJD(1) * t424 - qJD(3) * t606) * t510, t709, qJD(2) * t232 + qJD(3) * t51 + t972, 0, 0, 0, 0, 0, -t1039, qJD(3) * t321 + qJD(5) * t178 - t796, 0, 0, 0, 0, 0, qJD(3) * t72 + qJD(5) * t171 + qJD(6) * t163 - t971, qJD(3) * t76 + qJD(5) * t164 + t1043 + t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t686, t713, t320 * qJD(3) - t328 * t753, t1036 * t753 - t838, t489, qJD(2) * t133 + qJD(3) * t42 - qJD(5) * t69 + t974, qJD(2) * t132 + qJD(3) * t41 + qJD(4) * t178 + qJD(5) * t68 + t975, t104 * qJD(3) + t122 - (-t854 - t874) * t1040, t54 * qJD(3) + t328 * t755 - t896 - t97, qJD(3) * t74 + t1036 * t854 + t1043 + t970, t70 * qJD(3) + t1036 * t853 - t894, t650, t987 + t48 * qJD(2) + t3 * qJD(3) + t171 * qJD(4) + (t608 * t734 - t69 * t611) * qJD(5) + t18 * qJD(6), t986 + t49 * qJD(2) + t4 * qJD(3) + t164 * qJD(4) + (t69 * t608 + t611 * t734) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t652, t667, qJD(3) * t107 + qJD(5) * t1042 + t249 * t752, qJD(3) * t110 + t251 * t752, t190, qJD(2) * t96 + qJD(3) * t12 + qJD(4) * t163 + qJD(5) * t18 - qJD(6) * t28 + t976, qJD(2) * t95 + qJD(3) * t11 + qJD(4) * t1042 + qJD(5) * t16 + qJD(6) * t27 + t977; 0, 0, 0, t703, t702, -t826, -t830, 0, 0, 0, 0, 0, -qJD(3) * t355 - t869, qJD(3) * t357 - t868, qJD(3) * t182 - t873, -qJD(3) * t259 - t872, qJD(3) * t125 - t876, -qJD(3) * t21 - qJD(4) * t231 - t942, 0, 0, 0, 0, 0, qJD(3) * t115 - qJD(5) * t130 - t884, qJD(3) * t117 - qJD(5) * t131 - t883, 0, 0, 0, 0, 0, qJD(3) * t36 + qJD(5) * t47 - qJD(6) * t93 - t966, qJD(3) * t38 + qJD(5) * t50 - qJD(6) * t94 - t889; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t791 - t833, -qJD(3) * t811 + t832, -t606 * t791 + t841, t602 * t791 - t840, t675 * t860 + t843 (-pkin(3) * t610 + qJ(4) * t675) * t860 + t432 * qJD(4) + t722, 0, 0, 0, 0, 0, qJD(5) * t442 + t568 * t791 + t888, qJD(5) * t441 + t570 * t791 + t887, 0, 0, 0, 0, 0, t953 + (t472 * t568 + t493 * t532) * qJD(3) + t141 * qJD(5) + t240 * qJD(6), t952 + (-t473 * t568 + t532 * t935) * qJD(3) + t142 * qJD(5) + t239 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t432 - t875, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t442 - qJD(5) * t460 - t886, qJD(3) * t441 + qJD(5) * t459 - t885, 0, 0, 0, 0, 0, t141 * qJD(3) + t349 * qJD(6) - t460 * t853 + t946, qJD(3) * t142 + qJD(6) * t350 + t460 * t854 + t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t240 + qJD(5) * t349 - qJD(6) * t426 - t968, qJD(3) * t239 + qJD(5) * t350 + qJD(6) * t425 - t967; 0, 0, 0, 0, 0, 0, 0, t787, -t834, -t510 * t662, -t512 * t662, 0, qJD(2) * t355 - t877, -qJD(2) * t357 - t878, -qJD(2) * t182 - t949, qJD(2) * t259 - t948, -qJD(2) * t125 + t174 - t958, qJD(2) * t21 + qJD(4) * t52 - t959, -t370 * t870 - t1031, t111 - t844, -qJD(5) * t318 - t881, -qJD(5) * t317 - t882, -t683, -qJD(2) * t115 - qJD(4) * t316 - qJD(5) * t39 - t964, -qJD(2) * t117 - qJD(4) * t319 - qJD(5) * t40 - t963, qJD(5) * t105 - t335 * t874 - t119, qJD(5) * t55 - t81 - t895, qJD(5) * t75 + qJD(6) * t108 - t848, qJD(5) * t71 + qJD(6) * t109 - t849, -t369 * t871 + t1031 + t831, -qJD(2) * t36 + qJD(4) * t73 - qJD(5) * t1 - qJD(6) * t9 - t981, -qJD(2) * t38 + qJD(4) * t77 - qJD(5) * t2 - qJD(6) * t10 - t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t833, -t832, -t841, t840, -t843, -qJD(4) * t431 - t722, 0, 0, 0, 0, 0, -qJD(5) * t439 - t888, -qJD(5) * t440 - t887, 0, 0, 0, 0, 0, qJD(5) * t140 - qJD(6) * t237 - t953, qJD(5) * t143 - qJD(6) * t238 - t952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587 * qJD(4), t581 * qJD(4), -t785, -t825 * qJD(5), 0, 0, 0, t596 * t855, -t596 * t558, -t562 * t784 - t601 * t785, -t503 * qJD(6) + t568 * t732, -t568 * t570 * t851 + qJD(5) * t435, -t433 * qJD(5) - t570 * t788, t785, -qJD(4) * t434 + qJD(5) * t156 + qJD(6) * t294, -qJD(4) * t504 + qJD(5) * t157 + qJD(6) * t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t708, t664, 0, 0, 0, 0, 0, -t839, -t835, 0, 0, 0, 0, 0, t718, t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t685, t712, -t558 - t836, -t837 - t855, -t828, -qJD(5) * t523 + t570 * t861 - t721, qJD(5) * t522 - t568 * t861 - t720, t847 - t477 + (-t789 - t793) * t568, t1028 * t568 + t539 + t936, t570 * t854 - t717, t555 - t719, t649 (t608 * t733 - t899) * qJD(5) + t285 * qJD(6) + t670 (t611 * t733 + t920) * qJD(5) + t283 * qJD(6) + t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t637, -t639, t493 * t750 + t846, t570 * t715 + t845, t556 + t867, qJD(5) * t285 - qJD(6) * t380 - t668, qJD(5) * t283 + qJD(6) * t379 + t665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t795, t424 * t866, -t709, qJD(2) * t231 - qJD(3) * t52 - t972, 0, 0, 0, 0, 0, -qJD(5) * t179 + t797 + t838, qJD(3) * t319 + qJD(5) * t177 + t796, 0, 0, 0, 0, 0, -qJD(3) * t73 + qJD(5) * t170 - qJD(6) * t162 + t971, -qJD(3) * t77 - qJD(5) * t165 + qJD(6) * t168 - t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t431 + t875, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t708, -t664, 0, 0, 0, 0, 0, t839 + t855, -t558 + t835, 0, 0, 0, 0, 0, -t478 + t555 - t718, -t493 * qJD(5) - t716 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t706, t707, 0, 0, 0, 0, 0, t684, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754 - t879, t715 + t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t686, -t713, qJD(3) * t318 - t796, t1039, t489, qJD(2) * t130 + qJD(3) * t39 + qJD(4) * t179 - t974, qJD(2) * t131 + qJD(3) * t40 - qJD(4) * t177 - t975, -t105 * qJD(3) - t611 * t799 + t122, -qJD(3) * t55 + t896 - t97, -qJD(3) * t75 - qJD(6) * t1040 - t970, -qJD(3) * t71 + qJD(6) * t1041 + t894, -t650, -qJD(2) * t47 + qJD(3) * t1 - qJD(4) * t170 + qJD(6) * t17 - t987, -qJD(2) * t50 + qJD(3) * t2 + qJD(4) * t165 + qJD(6) * t15 - t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t439 + t886, qJD(3) * t440 + t885, 0, 0, 0, 0, 0, -qJD(3) * t140 - t946, -qJD(3) * t143 - t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t685, -t712, t836, t837, t828, -t570 * t751 + t721, t568 * t751 + t720, t568 * t793 - t477 - t847, -0.2e1 * t568 * t749 + t539 - t936, qJD(6) * t496 + t717, -t478 + t719, -t649, -t284 * qJD(6) - t570 * t857 - t670, qJD(4) * t493 + qJD(6) * t282 - t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t706, -t707, 0, 0, 0, 0, 0, -t684, -t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t784, t594 * qJD(6), 0, 0, 0, -pkin(5) * t851, -pkin(5) * t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651, -t638, -t710 + t850, t754 + t880, -t705, -pkin(11) * t850 - t655, pkin(11) * t851 - t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t652, -t667, -qJD(3) * t108 + qJD(5) * t1040 - t249 * t871, -qJD(3) * t109 - qJD(5) * t1041 - t799, t190, qJD(2) * t93 + qJD(3) * t9 + qJD(4) * t162 - qJD(5) * t17 - t976, qJD(2) * t94 + qJD(3) * t10 - qJD(4) * t168 - qJD(5) * t15 - t977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t237 + t968, qJD(3) * t238 + t967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t637, t639, -qJD(5) * t496 + t608 * t794 - t846, t491 * qJD(5) + t568 * t792 - t845, t556 - t867, qJD(4) * t491 + qJD(5) * t284 + t668, -t282 * qJD(5) + t568 * t857 - t665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829 + t879, t568 * t859 - t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t651, t638, t710, t829 - t880, t705, t655, t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
