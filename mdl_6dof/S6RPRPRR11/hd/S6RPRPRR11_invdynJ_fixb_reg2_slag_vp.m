% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRPRR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRPRR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:15:23
% EndTime: 2019-03-09 04:16:07
% DurationCPUTime: 26.28s
% Computational Cost: add. (43339->863), mult. (138797->1173), div. (0->0), fcn. (121354->18), ass. (0->376)
t352 = sin(qJ(6));
t355 = cos(qJ(6));
t346 = sin(pkin(12));
t347 = sin(pkin(6));
t349 = cos(pkin(12));
t354 = sin(qJ(3));
t527 = cos(pkin(7));
t459 = t354 * t527;
t439 = t349 * t459;
t350 = cos(pkin(6));
t526 = sin(pkin(7));
t454 = t526 * t350;
t441 = t354 * t454;
t554 = cos(qJ(3));
t257 = t347 * (t346 * t554 + t439) + t441;
t246 = t257 * qJD(1);
t345 = sin(pkin(13));
t225 = t345 * t246;
t452 = qJD(1) * t526;
t435 = t347 * t452;
t460 = t350 * t527;
t278 = -qJD(1) * t460 + t349 * t435 - qJD(3);
t348 = cos(pkin(13));
t448 = t278 * t348 + t225;
t553 = cos(qJ(5));
t175 = t553 * t448;
t178 = t246 * t348 - t278 * t345;
t353 = sin(qJ(5));
t119 = t178 * t353 + t175;
t581 = qJD(6) + t119;
t447 = t581 ^ 2;
t509 = t346 * t347;
t475 = t354 * t509;
t444 = qJD(3) * t475;
t481 = qJDD(1) * t347;
t465 = t346 * t481;
t437 = t527 * t554;
t508 = t347 * t349;
t399 = t437 * t508;
t436 = t526 * t554;
t564 = -t350 * t436 - t399;
t493 = t564 * qJD(1);
t166 = qJD(1) * t444 + qJD(3) * t493 - qJDD(1) * t441 - t439 * t481 - t554 * t465;
t461 = t347 * t526;
t285 = t349 * t461 - t460;
t277 = qJDD(1) * t285 - qJDD(3);
t148 = -t166 * t345 + t348 * t277;
t149 = -t166 * t348 - t277 * t345;
t449 = t553 * t148 + t353 * t149;
t571 = t178 * t553 - t353 * t448;
t572 = qJD(5) * t571;
t60 = t449 + t572;
t57 = qJDD(6) + t60;
t585 = -t352 * t447 + t355 * t57;
t490 = qJD(1) * t347;
t469 = t346 * t490;
t242 = t354 * t469 + t493;
t551 = pkin(1) * t350;
t477 = qJD(1) * t551;
t323 = t349 * t477;
t376 = t350 * pkin(2) + (-pkin(9) * t527 - qJ(2)) * t509;
t234 = qJD(1) * t376 + t323;
t273 = (-pkin(9) * t346 * t526 - pkin(2) * t349 - pkin(1)) * t347;
t264 = qJD(1) * t273 + qJD(2);
t168 = -t234 * t526 + t527 * t264;
t112 = t242 * pkin(3) - t246 * qJ(4) + t168;
t457 = t527 * t234;
t327 = qJ(2) * t508;
t282 = qJD(1) * t327 + t346 * t477;
t462 = t347 * t527;
t372 = (t349 * t462 + t454) * pkin(9);
t224 = qJD(1) * t372 + t282;
t473 = t554 * t224;
t139 = t473 + (t264 * t526 + t457) * t354;
t114 = -t278 * qJ(4) + t139;
t71 = t348 * t112 - t114 * t345;
t51 = pkin(4) * t242 - pkin(10) * t178 + t71;
t72 = t345 * t112 + t348 * t114;
t53 = -pkin(10) * t448 + t72;
t29 = t353 * t51 + t53 * t553;
t383 = qJD(5) + t242;
t24 = pkin(11) * t383 + t29;
t138 = -t354 * t224 + t234 * t437 + t264 * t436;
t113 = t278 * pkin(3) + qJD(4) - t138;
t88 = pkin(4) * t448 + t113;
t46 = t119 * pkin(5) - pkin(11) * t571 + t88;
t14 = t24 * t355 + t352 * t46;
t549 = pkin(4) * t148;
t483 = qJD(1) * qJD(2);
t466 = t347 * t483;
t479 = qJDD(1) * t350;
t476 = pkin(1) * t479;
t266 = qJDD(1) * t327 + t346 * t476 + t349 * t466;
t206 = qJDD(1) * t372 + t266;
t321 = t349 * t476;
t443 = t346 * t466;
t207 = qJDD(1) * t376 + t321 - t443;
t262 = qJDD(1) * t273 + qJDD(2);
t458 = t354 * t526;
t434 = qJD(3) * t458;
t489 = qJD(3) * t354;
t408 = qJD(3) * t473 + t354 * t206 - t207 * t437 - t262 * t436 + t264 * t434 + t457 * t489;
t556 = pkin(3) * t277 + qJDD(4);
t73 = t408 + t556;
t52 = t73 + t549;
t488 = qJD(5) * t353;
t59 = qJD(5) * t175 + t353 * t148 - t553 * t149 + t178 * t488;
t18 = pkin(5) * t60 + pkin(11) * t59 + t52;
t245 = t257 * qJD(3);
t361 = qJD(1) * t245;
t393 = qJDD(1) * t564 + t354 * t465;
t167 = t361 + t393;
t412 = qJD(3) * t436;
t413 = qJD(3) * t437;
t82 = t554 * t206 + t207 * t459 - t224 * t489 + t234 * t413 + t262 * t458 + t264 * t412;
t70 = -qJ(4) * t277 - qJD(4) * t278 + t82;
t160 = -t207 * t526 + t527 * t262;
t81 = t167 * pkin(3) + t166 * qJ(4) - t246 * qJD(4) + t160;
t39 = -t345 * t70 + t348 * t81;
t27 = pkin(4) * t167 - pkin(10) * t149 + t39;
t40 = t345 * t81 + t348 * t70;
t33 = -pkin(10) * t148 + t40;
t467 = qJD(5) * t553;
t404 = -t353 * t27 - t553 * t33 - t51 * t467 + t488 * t53;
t382 = qJDD(5) + t393;
t559 = t361 + t382;
t5 = pkin(11) * t559 - t404;
t2 = -qJD(6) * t14 + t355 * t18 - t352 * t5;
t584 = t14 * t581 + t2;
t427 = t24 * t352 - t355 * t46;
t1 = -t427 * qJD(6) + t352 * t18 + t355 * t5;
t570 = t427 * t581 + t1;
t583 = t119 ^ 2;
t582 = t119 * t383;
t552 = sin(qJ(1));
t470 = t552 * t349;
t356 = cos(qJ(1));
t504 = t356 * t346;
t288 = t350 * t504 + t470;
t507 = t347 * t356;
t335 = t552 * t346;
t503 = t356 * t349;
t430 = t350 * t503 - t335;
t560 = t430 * t527;
t195 = t288 * t554 + t354 * t560 - t458 * t507;
t261 = -t356 * t462 - t430 * t526;
t344 = pkin(13) + qJ(5);
t338 = sin(t344);
t339 = cos(t344);
t151 = t195 * t339 + t261 * t338;
t196 = -t288 * t354 - t436 * t507 + t554 * t560;
t580 = t151 * t352 + t196 * t355;
t579 = t151 * t355 - t196 * t352;
t578 = t571 ^ 2;
t378 = t355 * t383;
t96 = t352 * t571 - t378;
t577 = t571 * t96;
t98 = t352 * t383 + t355 * t571;
t576 = t571 * t98;
t573 = t242 * t571;
t471 = t553 * t348;
t400 = -t353 * t345 + t471;
t159 = t400 * t242;
t292 = t345 * t488 - t348 * t467;
t495 = -t292 + t159;
t301 = t345 * t553 + t353 * t348;
t494 = t383 * t301;
t152 = -t195 * t338 + t261 * t339;
t543 = pkin(10) + qJ(4);
t312 = t543 * t345;
t313 = t543 * t348;
t401 = -t312 * t553 - t353 * t313;
t519 = t242 * t348;
t165 = pkin(3) * t246 + qJ(4) * t242;
t92 = -t138 * t345 + t348 * t165;
t75 = pkin(4) * t246 + pkin(10) * t519 + t92;
t520 = t242 * t345;
t93 = t348 * t138 + t345 * t165;
t87 = pkin(10) * t520 + t93;
t530 = qJD(4) * t400 + qJD(5) * t401 - t353 * t75 - t553 * t87;
t569 = -pkin(11) * t246 + t530;
t102 = -pkin(4) * t520 + t139;
t568 = pkin(5) * t494 - pkin(11) * t495 - t102;
t472 = t554 * t349;
t272 = (-t346 * t459 + t472) * t490;
t415 = t346 * t435;
t214 = -t345 * t272 + t348 * t415;
t215 = t348 * t272 + t345 * t415;
t398 = t553 * t436;
t286 = -t345 * t458 + t348 * t527;
t287 = t345 * t527 + t348 * t458;
t402 = t286 * t553 - t353 * t287;
t419 = t353 * t436;
t500 = -t353 * t214 - t215 * t553 + t402 * qJD(5) + (-t345 * t419 + t348 * t398) * qJD(3);
t392 = t350 * t470 + t504;
t565 = t392 * t526 + t552 * t462;
t375 = t347 * (t346 * t437 + t349 * t354);
t271 = qJD(1) * t375;
t406 = t434 - t271;
t291 = t346 * t551 + t327;
t253 = t372 + t291;
t332 = t349 * t551;
t258 = t332 + t376;
t147 = t554 * t253 + (t527 * t258 + t526 * t273) * t354;
t268 = -t353 * t312 + t313 * t553;
t528 = qJD(4) * t301 + qJD(5) * t268 - t353 * t87 + t553 * t75;
t341 = t346 ^ 2;
t342 = t347 ^ 2;
t343 = t349 ^ 2;
t562 = t342 * (t341 + t343);
t289 = -t335 * t350 + t503;
t558 = t392 * t527 - t552 * t461;
t198 = t289 * t354 + t554 * t558;
t256 = t475 + t564;
t395 = g(1) * t198 - g(2) * t196 + g(3) * t256;
t561 = t395 * t338;
t220 = t353 * t286 + t287 * t553;
t499 = t214 * t553 - t215 * t353 + t220 * qJD(5) + (t345 * t398 + t348 * t419) * qJD(3);
t358 = qJDD(5) + t167;
t525 = qJD(6) * t98;
t38 = -t352 * t59 - t355 * t358 + t525;
t557 = qJD(2) * t346;
t463 = -t553 * t27 + t353 * t33;
t8 = -qJD(5) * t29 - t463;
t193 = t257 * t348 - t285 * t345;
t179 = -t258 * t526 + t527 * t273;
t127 = t256 * pkin(3) - t257 * qJ(4) + t179;
t134 = -qJ(4) * t285 + t147;
t84 = t348 * t127 - t134 * t345;
t63 = pkin(4) * t256 - pkin(10) * t193 + t84;
t192 = t257 * t345 + t285 * t348;
t85 = t345 * t127 + t348 * t134;
t68 = -pkin(10) * t192 + t85;
t541 = t353 * t63 + t553 * t68;
t244 = -qJD(3) * t399 - t350 * t412 + t444;
t517 = t244 * t348;
t123 = t258 * t413 + t273 * t412 + t347 * qJD(2) * t472 + (-qJD(3) * t253 - t462 * t557) * t354;
t108 = -t285 * qJD(4) + t123;
t414 = t461 * t557;
t142 = t245 * pkin(3) + t244 * qJ(4) - t257 * qJD(4) + t414;
t76 = -t108 * t345 + t348 * t142;
t58 = pkin(4) * t245 + pkin(10) * t517 + t76;
t518 = t244 * t345;
t77 = t348 * t108 + t345 * t142;
t67 = pkin(10) * t518 + t77;
t12 = -qJD(5) * t541 - t353 * t67 + t553 * t58;
t555 = t242 ^ 2;
t546 = g(2) * t356;
t544 = t98 * t96;
t486 = qJD(6) * t355;
t542 = -t352 * t38 - t96 * t486;
t487 = qJD(6) * t352;
t37 = -qJD(6) * t378 - t352 * t358 + t355 * t59 + t487 * t571;
t538 = t352 * t37;
t537 = t352 * t57;
t536 = t352 * t96;
t535 = t352 * t98;
t534 = t355 * t38;
t533 = t355 * t96;
t337 = pkin(4) * t348 + pkin(3);
t239 = -pkin(5) * t400 - pkin(11) * t301 - t337;
t169 = t239 * t355 - t268 * t352;
t532 = qJD(6) * t169 + t352 * t568 + t355 * t569;
t170 = t239 * t352 + t268 * t355;
t531 = -qJD(6) * t170 - t352 * t569 + t355 * t568;
t529 = t246 * pkin(5) + t528;
t524 = t571 * t119;
t523 = t139 * t278;
t522 = t167 * t345;
t521 = t242 * t246;
t516 = t256 * t352;
t515 = t261 * t345;
t513 = t301 * t352;
t512 = t301 * t355;
t511 = t339 * t352;
t510 = t339 * t355;
t506 = t348 * t167;
t357 = qJD(1) ^ 2;
t505 = t350 * t357;
t200 = -t352 * t220 - t355 * t436;
t502 = qJD(6) * t200 + t352 * t406 + t355 * t500;
t380 = -t355 * t220 + t352 * t436;
t501 = qJD(6) * t380 - t352 * t500 + t355 * t406;
t498 = t195 * t543 + t196 * t337;
t199 = t289 * t554 - t354 * t558;
t497 = -t198 * t337 + t199 * t543;
t496 = -t256 * t337 + t257 * t543;
t474 = t347 * t552;
t492 = t356 * pkin(1) + qJ(2) * t474;
t485 = -qJD(4) + t113;
t482 = qJDD(1) * t342;
t480 = qJDD(1) * t349;
t478 = g(1) * t552;
t468 = qJD(5) + t493;
t464 = g(2) * t507 - g(3) * t350;
t128 = -t159 * t352 - t355 * t246;
t451 = t292 * t352 + t128;
t129 = -t159 * t355 + t246 * t352;
t450 = t292 * t355 + t129;
t446 = t581 * t355;
t445 = 0.2e1 * t347 * t479;
t438 = -pkin(1) * t552 + qJ(2) * t507;
t433 = -pkin(5) * t339 - pkin(11) * t338;
t154 = t199 * t338 - t339 * t565;
t432 = g(1) * t152 + g(2) * t154;
t431 = g(1) * t196 + g(2) * t198;
t31 = pkin(11) * t256 + t541;
t140 = t192 * t553 + t193 * t353;
t141 = -t353 * t192 + t193 * t553;
t146 = -t354 * t253 + t258 * t437 + t273 * t436;
t137 = t285 * pkin(3) - t146;
t95 = t192 * pkin(4) + t137;
t47 = t140 * pkin(5) - t141 * pkin(11) + t95;
t16 = t31 * t355 + t352 * t47;
t15 = -t31 * t352 + t355 * t47;
t426 = t533 + t535;
t425 = t345 * t448;
t104 = t141 * t355 + t516;
t424 = t167 * t256 + t242 * t245;
t423 = (-qJ(2) * t469 + t323) * t346 - t282 * t349;
t422 = t345 * t436;
t421 = t348 * t436;
t418 = t242 * t436;
t411 = g(1) * t356 + g(2) * t552;
t28 = -t353 * t53 + t51 * t553;
t34 = -t353 * t68 + t553 * t63;
t407 = -t355 * t37 - t487 * t98;
t324 = -pkin(1) * t481 + qJDD(2);
t405 = pkin(1) * t482 - t324 * t347;
t11 = t353 * t58 + t63 * t467 - t488 * t68 + t553 * t67;
t23 = -pkin(5) * t383 - t28;
t403 = -pkin(11) * t57 + t23 * t581;
t397 = g(1) * t154 - g(2) * t152 - g(3) * (-t257 * t338 - t285 * t339);
t155 = t199 * t339 + t338 * t565;
t186 = t257 * t339 - t285 * t338;
t396 = -g(1) * t155 - g(2) * t151 - g(3) * t186;
t394 = -g(1) * t199 - g(2) * t195 - g(3) * t257;
t391 = t301 * t486 - t451;
t390 = -t301 * t487 - t450;
t6 = -pkin(5) * t559 - t8;
t386 = t397 - t6;
t385 = -g(1) * t474 + t464;
t384 = t395 - t73;
t381 = -t178 * t345 - t348 * t448;
t371 = pkin(11) * qJD(6) * t581 - t386;
t370 = t395 - t408;
t369 = -t288 * pkin(2) - pkin(9) * t261 + t438;
t368 = t289 * pkin(2) + pkin(9) * t565 + t492;
t367 = -t370 + t556;
t364 = -pkin(4) * t515 - t195 * t337 + t196 * t543 + t369;
t363 = t565 * t345;
t362 = pkin(4) * t363 + t198 * t543 + t199 * t337 + t368;
t360 = -qJD(3) * t246 - t393;
t359 = -qJDD(5) + t360;
t124 = qJD(2) * t375 + qJD(3) * t147;
t99 = -pkin(4) * t518 + t124;
t290 = -qJ(2) * t509 + t332;
t265 = t321 + (-qJ(2) * qJDD(1) - t483) * t509;
t250 = t256 * t355;
t106 = t155 * t355 + t198 * t352;
t105 = -t155 * t352 + t198 * t355;
t103 = t141 * t352 - t250;
t91 = qJD(5) * t141 - t244 * t301;
t90 = t192 * t467 + t244 * t471 + (qJD(5) * t193 - t518) * t353;
t80 = pkin(5) * t571 + pkin(11) * t119;
t49 = qJD(6) * t104 - t245 * t355 - t352 * t90;
t48 = t141 * t487 - t245 * t352 - t256 * t486 + t355 * t90;
t41 = t91 * pkin(5) + t90 * pkin(11) + t99;
t30 = -t256 * pkin(5) - t34;
t20 = t28 * t355 + t352 * t80;
t19 = -t28 * t352 + t355 * t80;
t10 = -t245 * pkin(5) - t12;
t9 = pkin(11) * t245 + t11;
t4 = -qJD(6) * t16 - t352 * t9 + t355 * t41;
t3 = qJD(6) * t15 + t352 * t41 + t355 * t9;
t7 = [0, 0, 0, 0, 0, qJDD(1), t478 - t546, t411, 0, 0, t341 * t482, 0.2e1 * t342 * t346 * t480, t346 * t445, t343 * t482, t349 * t445, t350 ^ 2 * qJDD(1), g(1) * t288 - g(2) * t289 + t405 * t349 + (qJDD(1) * t290 + t265 - t443) * t350, -g(1) * t335 + (-t405 + t546) * t346 + (-t291 * qJDD(1) - t266 + (t411 - t466) * t349) * t350, t483 * t562 + (-t265 * t346 + t266 * t349 + (-t290 * t346 + t291 * t349) * qJDD(1) - t411) * t347, t266 * t291 + t265 * t290 - g(1) * t438 - g(2) * t492 + (-t324 * pkin(1) - qJD(2) * t423) * t347, -t166 * t257 - t244 * t246, t166 * t256 - t167 * t257 + t242 * t244 - t245 * t246, t166 * t285 + t244 * t278 - t257 * t277, t424, t167 * t285 + t245 * t278 + t256 * t277, t277 * t285, g(1) * t195 - g(2) * t199 + t124 * t278 - t146 * t277 + t160 * t256 + t179 * t167 + t168 * t245 + t242 * t414 + t285 * t408, t123 * t278 + t147 * t277 + t160 * t257 - t179 * t166 - t168 * t244 + t246 * t414 + t82 * t285 + t431, g(1) * t261 - g(2) * t565 - t123 * t242 + t124 * t246 + t138 * t244 - t139 * t245 + t146 * t166 - t147 * t167 - t82 * t256 + t257 * t408, -g(1) * t369 - g(2) * t368 + t139 * t123 - t138 * t124 - t146 * t408 + t82 * t147 + t160 * t179 + t168 * t414, t149 * t193 - t178 * t517, -t193 * t148 - t149 * t192 - t244 * t381, t149 * t256 + t167 * t193 + t178 * t245 - t242 * t517, t148 * t192 - t244 * t425, -t148 * t256 - t192 * t167 + t242 * t518 - t245 * t448, t424, t76 * t242 + t84 * t167 + t39 * t256 + t71 * t245 + t124 * t448 + t137 * t148 + t73 * t192 - t113 * t518 - g(1) * (-t195 * t348 - t515) - g(2) * (t199 * t348 + t363) -t77 * t242 - t85 * t167 - t40 * t256 - t72 * t245 + t124 * t178 + t137 * t149 + t73 * t193 - t113 * t517 - g(1) * (t195 * t345 - t261 * t348) - g(2) * (-t199 * t345 + t348 * t565) -t77 * t448 - t85 * t148 - t40 * t192 - t76 * t178 - t84 * t149 - t39 * t193 + (t345 * t72 + t348 * t71) * t244 - t431, t40 * t85 + t72 * t77 + t39 * t84 + t71 * t76 + t73 * t137 + t113 * t124 - g(1) * (-pkin(3) * t195 + t196 * qJ(4) + t369) - g(2) * (t199 * pkin(3) + t198 * qJ(4) + t368) -t141 * t59 - t571 * t90, t119 * t90 + t140 * t59 - t141 * t60 - t571 * t91, -t90 * t468 + t141 * t382 - t59 * t256 + t571 * t245 + (t141 * t245 - t475 * t90) * qJD(1), t119 * t91 + t140 * t60, -t91 * t468 - t140 * t382 - t60 * t256 - t119 * t245 + (-t140 * t245 - t475 * t91) * qJD(1), t382 * t256 + (t468 + (t256 + t475) * qJD(1)) * t245, g(1) * t151 - g(2) * t155 + t99 * t119 + t12 * t383 + t52 * t140 + t28 * t245 + t8 * t256 + t34 * t358 + t95 * t60 + t88 * t91, -t11 * t383 + t52 * t141 - t29 * t245 + t256 * t404 + t359 * t541 + t571 * t99 - t95 * t59 - t88 * t90 + t432, -t11 * t119 - t12 * t571 + t140 * t404 - t141 * t8 + t28 * t90 - t29 * t91 + t34 * t59 - t541 * t60 - t431, -g(1) * t364 - g(2) * t362 + t29 * t11 + t28 * t12 + t8 * t34 - t404 * t541 + t52 * t95 + t88 * t99, -t104 * t37 - t48 * t98, t103 * t37 - t104 * t38 + t48 * t96 - t49 * t98, t104 * t57 - t140 * t37 - t48 * t581 + t91 * t98, t103 * t38 + t49 * t96, -t103 * t57 - t140 * t38 - t49 * t581 - t91 * t96, t140 * t57 + t581 * t91, g(1) * t579 - g(2) * t106 + t10 * t96 + t6 * t103 + t2 * t140 + t15 * t57 + t23 * t49 + t30 * t38 + t4 * t581 - t427 * t91, -g(1) * t580 - g(2) * t105 - t1 * t140 + t10 * t98 + t6 * t104 - t14 * t91 - t16 * t57 - t23 * t48 - t3 * t581 - t30 * t37, -t1 * t103 - t104 * t2 - t14 * t49 + t15 * t37 - t16 * t38 - t3 * t96 - t4 * t98 - t427 * t48 - t432, t1 * t16 + t14 * t3 + t2 * t15 - t427 * t4 + t6 * t30 + t23 * t10 - g(1) * (-pkin(5) * t151 + t152 * pkin(11) + t364) - g(2) * (t155 * pkin(5) + t154 * pkin(11) + t362); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t346 * t505 - t480) * t347 (qJDD(1) * t346 + t349 * t505) * t347, -t357 * t562, qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t423 - t478) * t347 + t464, 0, 0, 0, 0, 0, 0, t167 * t527 - t242 * t415 - t277 * t436 + t278 * t406, -t246 * t415 + t277 * t458 - t527 * t166 + (t412 - t272) * t278, t166 * t436 - t167 * t458 + t272 * t242 - t271 * t246 + (t246 * t458 - t418) * qJD(3), -t408 * t436 + t82 * t458 + t160 * t527 + t138 * t271 - t139 * t272 + (-t168 * t346 * t452 - t478) * t347 + (-t138 * t458 + t139 * t436) * qJD(3) + t464, 0, 0, 0, 0, 0, 0, t286 * t167 - t148 * t436 - t214 * t242 - t271 * t448 + (-t345 * t418 + t448 * t458) * qJD(3), -t149 * t436 - t287 * t167 - t271 * t178 + t215 * t242 + (t178 * t458 - t348 * t418) * qJD(3), -t287 * t148 - t286 * t149 + t215 * t448 + t214 * t178 + (t178 * t422 - t421 * t448) * qJD(3), -t73 * t436 - t113 * t271 - t71 * t214 - t72 * t215 + t39 * t286 + t40 * t287 + (t113 * t458 + t421 * t72 - t422 * t71) * qJD(3) + t385, 0, 0, 0, 0, 0, 0, t402 * t382 - t60 * t436 - t271 * t119 + (t119 * t458 + t246 * t402) * qJD(3) - t499 * t383, -t220 * t382 + t59 * t436 - t271 * t571 + (-t220 * t246 + t458 * t571) * qJD(3) - t500 * t383, -t119 * t500 - t220 * t60 + t402 * t59 + t499 * t571, -t220 * t404 - t28 * t499 + t29 * t500 + t402 * t8 + t406 * t88 - t436 * t52 + t385, 0, 0, 0, 0, 0, 0, t200 * t57 - t38 * t402 + t499 * t96 + t501 * t581, t37 * t402 + t380 * t57 + t499 * t98 - t502 * t581, t200 * t37 + t38 * t380 - t501 * t98 - t502 * t96, -t1 * t380 + t14 * t502 + t2 * t200 + t23 * t499 - t402 * t6 - t427 * t501 + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t521, t246 ^ 2 - t555, -t242 * t278 - t166, -t521, -t246 * t278 + t360, -t277, -t168 * t246 + t370 - t523, -t138 * t278 + t168 * t242 - t394 - t82, 0, 0, t149 * t345 + t178 * t519, -t345 * t148 + t149 * t348 + t242 * t381, -t178 * t246 + t348 * t555 + t522, -t148 * t348 + t242 * t425, t246 * t448 - t345 * t555 + t506, -t521, -qJ(4) * t522 - pkin(3) * t148 - t139 * t225 - t71 * t246 + (t345 * t485 - t92) * t242 + (t384 - t523) * t348, -qJ(4) * t506 - pkin(3) * t149 - t139 * t178 + t246 * t72 + (t348 * t485 + t93) * t242 - t384 * t345, t92 * t178 + t93 * t225 + (-qJ(4) * t148 - qJD(4) * t448 - t71 * t242 + t93 * t278 + t40) * t348 + (qJ(4) * t149 + qJD(4) * t178 - t242 * t72 - t39) * t345 + t394, -t113 * t139 - t71 * t92 - t72 * t93 + (-t345 * t71 + t348 * t72) * qJD(4) + t384 * pkin(3) + (-t39 * t345 + t40 * t348 + t394) * qJ(4), -t301 * t59 + t495 * t571, -t119 * t495 - t301 * t60 - t400 * t59 - t494 * t571, t301 * t382 - t571 * t246 + (t245 * t301 + t475 * t495) * qJD(1) + t495 * t468, t119 * t494 - t400 * t60, t400 * t382 + t119 * t246 + (t245 * t400 - t475 * t494) * qJD(1) - t494 * t468, -t383 * t246, -t102 * t119 - t28 * t246 - t337 * t60 + t339 * t395 + t358 * t401 - t383 * t528 - t400 * t52 + t494 * t88, -t102 * t571 + t29 * t246 + t268 * t359 + t52 * t301 + t337 * t59 - t383 * t530 + t495 * t88 - t561, -t119 * t530 - t268 * t60 - t28 * t495 - t29 * t494 - t301 * t8 - t400 * t404 + t401 * t59 + t528 * t571 + t394, -g(1) * t497 - g(2) * t498 - g(3) * t496 - t88 * t102 - t268 * t404 - t28 * t528 + t29 * t530 - t52 * t337 + t401 * t8, -t37 * t512 + t390 * t98, t128 * t98 + t129 * t96 + t426 * t292 + (t538 - t534 + (-t355 * t98 + t536) * qJD(6)) * t301, t37 * t400 + t390 * t581 + t494 * t98 + t512 * t57, t38 * t513 + t391 * t96, t38 * t400 - t391 * t581 - t494 * t96 - t513 * t57, -t400 * t57 + t494 * t581, t169 * t57 - t2 * t400 - t401 * t38 + t6 * t513 - g(1) * (-t198 * t510 + t199 * t352) - g(2) * (t195 * t352 + t196 * t510) - g(3) * (-t256 * t510 + t257 * t352) + t529 * t96 - t494 * t427 + t531 * t581 + t391 * t23, -t170 * t57 + t1 * t400 + t401 * t37 + t6 * t512 - g(1) * (t198 * t511 + t199 * t355) - g(2) * (t195 * t355 - t196 * t511) - g(3) * (t256 * t511 + t257 * t355) + t529 * t98 - t494 * t14 - t532 * t581 + t390 * t23, t169 * t37 - t170 * t38 - t531 * t98 - t532 * t96 + t451 * t14 - t450 * t427 + t561 + (-t1 * t352 - t2 * t355 + (-t14 * t355 - t352 * t427) * qJD(6)) * t301, t1 * t170 + t2 * t169 - t6 * t401 - g(1) * (t198 * t433 + t497) - g(2) * (-t196 * t433 + t498) - g(3) * (t256 * t433 + t496) + t529 * t23 + t532 * t14 - t531 * t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178 * t242 + t148, -t242 * t448 + t149, -t178 ^ 2 - t448 ^ 2, t178 * t71 + t448 * t72 + t367, 0, 0, 0, 0, 0, 0, t449 + 0.2e1 * t572 + t573, -t59 - t582, -t578 - t583, t119 * t29 + t28 * t571 + t367 + t549, 0, 0, 0, 0, 0, 0, -t577 + t585, -t355 * t447 - t537 - t576 -(t533 - t535) * t119 - t407 + t542, -t571 * t23 + t352 * t570 + t355 * t584 - t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, t578 - t583, -t59 + t582, -t524, -t449 + t573, t358, t242 * t29 - t571 * t88 + t397 - t463, t88 * t119 + t28 * t383 - t396 + t404, 0, 0, t446 * t98 - t538, -t119 * t426 + t407 + t542, t446 * t581 + t537 - t576, t536 * t581 - t534, t577 + t585, -t581 * t571, -pkin(5) * t38 - t19 * t581 - t29 * t96 + t352 * t403 - t355 * t371 + t427 * t571, pkin(5) * t37 + t14 * t571 + t20 * t581 - t29 * t98 + t352 * t371 + t355 * t403, t19 * t98 + t20 * t96 + ((-t38 + t525) * pkin(11) + t570) * t355 + ((qJD(6) * t96 - t37) * pkin(11) - t584) * t352 + t396, t427 * t19 - t14 * t20 - t23 * t29 + t386 * pkin(5) + (t1 * t355 - t2 * t352 + (-t14 * t352 + t355 * t427) * qJD(6) + t396) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544, -t96 ^ 2 + t98 ^ 2, t581 * t96 - t37, -t544, t581 * t98 - t38, t57, -t23 * t98 - g(1) * t105 + g(2) * t580 - g(3) * (-t186 * t352 + t250) + t584, t23 * t96 + g(1) * t106 + g(2) * t579 - g(3) * (-t186 * t355 - t516) - t570, 0, 0;];
tau_reg  = t7;
