% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRP12_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:25
% EndTime: 2019-03-09 17:59:59
% DurationCPUTime: 18.37s
% Computational Cost: add. (15856->850), mult. (38373->1035), div. (0->0), fcn. (30000->10), ass. (0->390)
t303 = sin(qJ(3));
t308 = cos(qJ(2));
t301 = sin(pkin(6));
t482 = qJD(1) * t301;
t454 = t308 * t482;
t421 = t303 * t454;
t478 = qJD(3) * t303;
t569 = t421 - t478;
t601 = pkin(3) * t569 + qJD(4) * t303;
t307 = cos(qJ(3));
t521 = cos(pkin(6));
t436 = t521 * qJD(1);
t380 = t436 + qJD(2);
t304 = sin(qJ(2));
t455 = t304 * t482;
t192 = t303 * t380 + t307 * t455;
t267 = -qJD(3) + t454;
t428 = t521 * qJDD(1);
t373 = t428 + qJDD(2);
t256 = t307 * t373;
t351 = qJD(3) * t380;
t340 = t303 * t351 - t256;
t468 = qJDD(1) * t304;
t442 = t303 * t468;
t476 = qJD(3) * t307;
t451 = t304 * t476;
t480 = qJD(2) * t308;
t311 = (qJD(1) * (t303 * t480 + t451) + t442) * t301 + t340;
t600 = t192 * t267 + t311;
t497 = t301 * t307;
t235 = t303 * t521 + t304 * t497;
t449 = t301 * t480;
t158 = qJD(3) * t235 + t303 * t449;
t190 = t303 * t455 - t307 * t380;
t499 = t301 * t304;
t463 = t303 * t499;
t234 = -t307 * t521 + t463;
t599 = t190 * t158 + t234 * t311;
t418 = qJD(3) * t463;
t443 = t301 * t468;
t469 = qJD(1) * qJD(2);
t444 = t308 * t469;
t587 = t301 * t444 + t443;
t103 = qJD(1) * t418 - t303 * t373 + (-t351 - t587) * t307;
t159 = -t418 + (qJD(3) * t521 + t449) * t307;
t598 = t103 * t234 - t192 * t158 - t159 * t190 - t235 * t311;
t295 = t307 * pkin(9);
t305 = sin(qJ(1));
t550 = cos(qJ(1));
t411 = t521 * t550;
t237 = t304 * t411 + t305 * t308;
t439 = t304 * t521;
t239 = -t305 * t439 + t308 * t550;
t403 = g(1) * t239 + g(2) * t237;
t471 = t192 * qJD(3);
t472 = t190 * qJD(3);
t494 = t303 * t103;
t597 = -g(3) * t499 - t403 + (t303 * t472 - t494) * pkin(9) + (-t311 + t471) * t295;
t420 = t307 * t454;
t596 = t190 * t420 + t192 * t421 + (-t103 - t472) * t307 + (-t311 - t471) * t303;
t417 = pkin(1) * t436;
t217 = -pkin(8) * t455 + t308 * t417;
t409 = pkin(2) * t304 - pkin(9) * t308;
t218 = t409 * t482;
t131 = -t303 * t217 + t218 * t307;
t490 = t307 * t308;
t551 = pkin(4) + pkin(9);
t552 = pkin(3) + pkin(10);
t595 = t551 * t476 - (pkin(4) * t490 - t304 * t552) * t482 + t131;
t292 = pkin(1) * t439;
t518 = qJ(4) * t307;
t396 = pkin(10) * t303 - t518;
t496 = t301 * t308;
t594 = (t292 + (pkin(8) + t396) * t496) * qJD(1) - qJD(3) * t396 + t601;
t302 = sin(qJ(5));
t306 = cos(qJ(5));
t140 = t190 * t302 - t267 * t306;
t184 = qJD(5) + t192;
t429 = t140 * t184;
t138 = -t306 * t190 - t267 * t302;
t430 = t138 * t184;
t467 = qJDD(1) * t308;
t283 = t301 * t467;
t445 = t304 * t469;
t414 = t301 * t445;
t214 = qJDD(3) - t283 + t414;
t474 = qJD(5) * t306;
t475 = qJD(5) * t302;
t57 = -t190 * t474 - t306 * t214 - t267 * t475 - t302 * t311;
t58 = qJD(5) * t140 + t214 * t302 - t306 * t311;
t593 = t306 * (t58 + t429) - (t57 + t430) * t302;
t56 = t58 * t302;
t592 = t138 * t474 + t56;
t554 = t184 ^ 2;
t100 = -qJDD(5) + t103;
t97 = t306 * t100;
t591 = -t302 * t554 - t97;
t589 = t302 * t429;
t586 = t420 - t476;
t438 = t308 * t521;
t241 = pkin(1) * t438 - pkin(8) * t499;
t221 = qJD(2) * t241;
t485 = pkin(8) * t496 + t292;
t212 = t521 * pkin(9) + t485;
t173 = qJD(2) * pkin(9) + qJD(1) * t212;
t377 = -pkin(2) * t308 - pkin(9) * t304 - pkin(1);
t182 = t377 * t482;
t101 = t173 * t303 - t307 * t182;
t470 = -qJD(4) - t101;
t457 = t301 * t550;
t162 = t237 * t303 + t307 * t457;
t236 = t304 * t305 - t308 * t411;
t113 = t162 * t302 + t236 * t306;
t114 = t162 * t306 - t236 * t302;
t415 = qJD(1) * t451;
t481 = qJD(2) * t304;
t585 = t267 * t158 - t214 * t234 + t301 * (t308 * t340 + (t303 * t444 + t415 + t442) * t496 - t190 * t481);
t180 = t302 * t455 - t306 * t421;
t491 = t303 * t308;
t197 = (t302 * t491 + t304 * t306) * t301;
t181 = qJD(1) * t197;
t530 = t306 * t57;
t584 = t307 * ((t138 * t306 + t140 * t302) * qJD(5) + t56 + t530) - (t138 * t302 - t140 * t306) * t478 + t138 * t181 + t140 * t180;
t477 = qJD(3) * t306;
t401 = t303 * t477 + t180;
t514 = t138 * t267;
t583 = -t401 * t184 + t303 * t58 + t307 * (-t184 * t475 - t514 - t97);
t357 = t444 + t468;
t507 = t190 * t267;
t582 = -(t301 * t415 - t256) * t307 + (-(t301 * t357 + t351) * t307 - t507) * t303;
t298 = t301 ^ 2;
t581 = 0.2e1 * t298;
t375 = qJD(2) * t417;
t412 = pkin(1) * t428;
t458 = pkin(8) * t283 + t304 * t412 + t308 * t375;
t142 = -pkin(8) * t414 + t458;
t122 = pkin(9) * t373 + t142;
t366 = t409 * qJD(2);
t128 = (qJD(1) * t366 + qJDD(1) * t377) * t301;
t38 = -t303 * t122 + t307 * t128 - t173 * t476 - t182 * t478;
t378 = qJDD(4) - t38;
t17 = -pkin(4) * t103 - t214 * t552 + t378;
t424 = pkin(8) * t587 + t304 * t375 - t308 * t412;
t123 = -pkin(2) * t373 + t424;
t29 = pkin(3) * t311 + t103 * qJ(4) - t192 * qJD(4) + t123;
t21 = pkin(10) * t311 + t29;
t489 = pkin(4) * t192 - t470;
t64 = t267 * t552 + t489;
t172 = -pkin(2) * t380 - t217;
t316 = -t192 * qJ(4) + t172;
t68 = t190 * t552 + t316;
t4 = t306 * t17 - t302 * t21 - t68 * t474 - t64 * t475;
t548 = pkin(5) * t100;
t2 = qJDD(6) - t4 + t548;
t26 = t302 * t64 + t306 * t68;
t24 = qJ(6) * t184 + t26;
t535 = t184 * t24;
t580 = -t2 + t535;
t533 = t184 * t26;
t579 = t4 + t533;
t519 = qJ(4) * t303;
t440 = -pkin(2) - t519;
t243 = -t307 * t552 + t440;
t270 = t551 * t303;
t537 = -t243 * t475 + t270 * t474 + t302 * t595 - t594 * t306;
t577 = t58 - t429;
t96 = t302 * t100;
t576 = -t184 * t474 + t96;
t575 = t514 + t591;
t573 = t306 * t243 + t302 * t270;
t487 = -qJ(4) * t476 - (t292 + (pkin(8) - t518) * t496) * qJD(1) - t601;
t571 = (qJDD(2) + 0.2e1 * t428) * t301;
t568 = -t303 * t214 + t267 * t476;
t425 = -t307 * t122 - t303 * t128 + t173 * t478 - t182 * t476;
t567 = -t38 * t303 - t307 * t425;
t204 = t214 * qJ(4);
t250 = qJD(4) * t267;
t28 = -t204 + t250 + t425;
t549 = pkin(3) * t214;
t33 = t378 - t549;
t566 = -t28 * t307 + t33 * t303;
t222 = t485 * qJD(2);
t163 = t237 * t307 - t303 * t457;
t498 = t301 * t305;
t167 = t239 * t307 + t303 * t498;
t352 = g(1) * t167 + g(2) * t163 + g(3) * t235;
t516 = t100 * t552;
t252 = t267 * qJ(4);
t102 = t173 * t307 + t182 * t303;
t78 = -pkin(4) * t190 + t102;
t69 = -t252 + t78;
t565 = t184 * t69 + t516;
t562 = t301 * (t103 * t308 + t192 * t481) - t159 * t267 + t214 * t235;
t561 = -t214 * t307 - t267 * t478 + (-t190 * t304 + t267 * t491) * t482;
t560 = (-t192 * t304 + t267 * t490) * t482 - t568;
t453 = t301 * t481;
t486 = pkin(2) * t496 + pkin(9) * t499;
t213 = -pkin(1) * t301 - t486;
t219 = t301 * t366;
t71 = -t212 * t476 - t213 * t478 + t219 * t307 - t303 * t221;
t46 = pkin(4) * t159 - t453 * t552 - t71;
t125 = -t303 * t212 + t213 * t307;
t107 = pkin(3) * t496 - t125;
t80 = pkin(4) * t235 + pkin(10) * t496 + t107;
t211 = -pkin(2) * t521 - t241;
t224 = t234 * pkin(3);
t433 = t235 * qJ(4) - t224;
t105 = t211 - t433;
t541 = t234 * pkin(10);
t89 = t105 + t541;
t538 = t302 * t80 + t306 * t89;
t317 = -t159 * qJ(4) - t235 * qJD(4) + t222;
t55 = t158 * t552 + t317;
t9 = -qJD(5) * t538 - t302 * t55 + t306 * t46;
t536 = -qJD(5) * t573 + t594 * t302 + t306 * t595;
t555 = t140 ^ 2;
t553 = t192 ^ 2;
t310 = qJD(1) ^ 2;
t547 = pkin(9) * t214;
t546 = pkin(10) * t162;
t166 = t239 * t303 - t305 * t497;
t545 = pkin(10) * t166;
t540 = -qJ(6) * t586 + qJD(6) * t303 + t537;
t539 = pkin(5) * t586 - t536;
t520 = qJ(4) * t190;
t93 = t192 * t552 + t520;
t40 = t302 * t78 + t306 * t93;
t25 = -t302 * t68 + t306 * t64;
t534 = t184 * t25;
t529 = t552 * t57;
t398 = pkin(5) * t306 + qJ(6) * t302;
t372 = -pkin(4) - t398;
t397 = -pkin(5) * t302 + qJ(6) * t306;
t132 = t307 * t217 + t303 * t218;
t109 = -qJ(4) * t455 - t132;
t95 = -pkin(4) * t421 - t109;
t525 = -pkin(5) * t180 + qJ(6) * t181 + (qJD(5) * t397 + qJD(6) * t302) * t307 + (-pkin(9) + t372) * t478 - t95;
t523 = qJD(5) * t398 - qJD(6) * t306 - t192 * t372 - t470;
t522 = -t551 * t478 - t95;
t517 = qJ(6) * t100;
t515 = t102 * t267;
t513 = t140 * t138;
t512 = t140 * t267;
t511 = t140 * t552;
t510 = t184 * t190;
t508 = t190 * t192;
t505 = t192 * t306;
t502 = t236 * t307;
t238 = t304 * t550 + t305 * t438;
t501 = t238 * t307;
t500 = t298 * t310;
t495 = t302 * t303;
t492 = t303 * t306;
t488 = qJD(6) - t25;
t126 = t307 * t212 + t303 * t213;
t271 = t307 * pkin(4) + t295;
t484 = t550 * pkin(1) + pkin(8) * t498;
t299 = t304 ^ 2;
t300 = t308 ^ 2;
t483 = t299 - t300;
t479 = qJD(3) * t302;
t473 = qJD(5) * t307;
t465 = qJ(4) * t496;
t464 = t308 * t500;
t462 = t306 * t496;
t461 = t301 * t490;
t226 = t236 * pkin(2);
t460 = -pkin(3) * t502 - t236 * t519 - t226;
t230 = t238 * pkin(2);
t459 = -pkin(3) * t501 - t238 * t519 - t230;
t448 = t138 ^ 2 - t555;
t447 = -t190 ^ 2 + t553;
t446 = pkin(1) * t581;
t441 = -pkin(1) * t305 + pkin(8) * t457;
t154 = t162 * pkin(3);
t435 = qJ(4) * t163 - t154;
t156 = t166 * pkin(3);
t434 = qJ(4) * t167 - t156;
t426 = t304 * t464;
t423 = pkin(3) * t461 + t303 * t465 + t486;
t419 = t267 * t455;
t416 = t304 * t444;
t410 = t301 * t310 * t521;
t116 = -t166 * t306 + t238 * t302;
t408 = -g(1) * t114 - g(2) * t116;
t117 = t166 * t302 + t238 * t306;
t407 = g(1) * t113 - g(2) * t117;
t406 = g(1) * t162 - g(2) * t166;
t405 = -g(1) * t163 + g(2) * t167;
t404 = g(1) * t236 - g(2) * t238;
t400 = t302 * t478 - t181;
t160 = t234 * t306 + t302 * t496;
t161 = -t234 * t302 + t462;
t399 = pkin(5) * t160 - qJ(6) * t161;
t85 = -t158 * t306 - qJD(5) * t462 + (qJD(5) * t234 + t453) * t302;
t395 = t138 * t85 - t160 * t58;
t23 = -pkin(5) * t184 + t488;
t394 = t23 * t302 + t24 * t306;
t393 = -t25 * t302 + t26 * t306;
t39 = -t302 * t93 + t306 * t78;
t41 = -t302 * t89 + t306 * t80;
t389 = -t103 * t235 + t159 * t192;
t152 = -t243 * t302 + t270 * t306;
t379 = 0.2e1 * t436 + qJD(2);
t376 = t239 * pkin(2) + pkin(9) * t238 + t484;
t374 = t184 * t505 - t576;
t106 = t465 - t126;
t371 = g(1) * t550 + g(2) * t305;
t257 = qJ(4) - t397;
t369 = pkin(4) * t499 + pkin(10) * t461 + t423;
t3 = t302 * t17 + t306 * t21 + t64 * t474 - t475 * t68;
t8 = t302 * t46 + t306 * t55 + t80 * t474 - t475 * t89;
t361 = t267 * t307;
t359 = -t237 * pkin(2) - pkin(9) * t236 + t441;
t36 = pkin(5) * t138 - qJ(6) * t140 + t69;
t358 = t184 * t36 + t516;
t70 = -t212 * t478 + t213 * t476 + t303 * t219 + t307 * t221;
t133 = t236 * t492 + t237 * t302;
t135 = t238 * t492 + t239 * t302;
t196 = t302 * t499 - t303 * t462;
t355 = -g(1) * t135 - g(2) * t133 - g(3) * t196;
t134 = -t236 * t495 + t237 * t306;
t136 = -t238 * t495 + t239 * t306;
t354 = -g(1) * t136 - g(2) * t134 - g(3) * t197;
t353 = g(1) * t166 + g(2) * t162 + g(3) * t234;
t350 = -pkin(10) * t502 + t237 * t551 + t460;
t349 = -pkin(10) * t501 + t239 * t551 + t459;
t345 = g(1) * t238 + g(2) * t236 - g(3) * t496;
t90 = -pkin(4) * t234 - t106;
t343 = t138 * t190 + t374;
t342 = t552 * t592 + t353;
t341 = t167 * pkin(3) + qJ(4) * t166 + t376;
t86 = qJD(5) * t160 + t158 * t302 + t306 * t453;
t339 = t138 * t86 + t140 * t85 + t160 * t57 - t161 * t58;
t338 = t100 * t160 + t138 * t159 + t184 * t85 + t235 * t58;
t337 = -pkin(3) * t163 - qJ(4) * t162 + t359;
t336 = g(1) * t116 - g(2) * t114 - g(3) * t160 + t4;
t335 = -t192 * t361 - t494;
t334 = qJD(5) * t184 * t552 - t352;
t333 = t353 + t38;
t332 = -t352 - t425;
t331 = -pkin(9) * qJD(3) * t267 - t345;
t20 = -pkin(4) * t311 - t28;
t5 = t58 * pkin(5) + t57 * qJ(6) - t140 * qJD(6) + t20;
t330 = -t334 - t5;
t329 = t20 + t334;
t63 = -qJ(4) * t453 + qJD(4) * t496 - t70;
t328 = t238 * pkin(4) + pkin(10) * t167 + t341;
t327 = t103 + t507;
t326 = (-t138 * t192 + t57) * t306 + t589 - t592;
t325 = -g(1) * t117 - g(2) * t113 + g(3) * t161 + t3;
t324 = -t236 * pkin(4) - pkin(10) * t163 + t337;
t47 = -pkin(4) * t158 - t63;
t322 = t306 * t307 * t58 + (-t302 * t473 - t401) * t138;
t321 = t140 * t36 + qJDD(6) - t336;
t88 = t190 * pkin(3) + t316;
t320 = t192 * t88 + qJDD(4) - t333;
t315 = pkin(9) * t568 + g(1) * t501 + g(2) * t502 - g(3) * t461;
t260 = -pkin(3) * t307 + t440;
t220 = t485 * qJD(1);
t183 = t307 * t398 + t271;
t145 = -pkin(5) * t303 - t152;
t144 = qJ(6) * t303 + t573;
t129 = (-t214 * t308 - t267 * t481) * t301;
t124 = pkin(3) * t192 + t520;
t111 = -pkin(3) * t455 - t131;
t94 = -t102 + t252;
t92 = pkin(3) * t267 - t470;
t76 = pkin(5) * t140 + qJ(6) * t138;
t67 = t158 * pkin(3) + t317;
t66 = -pkin(3) * t453 - t71;
t59 = -t100 * t303 - t184 * t361;
t54 = -t100 * t235 + t159 * t184;
t48 = -t399 + t90;
t35 = -pkin(5) * t235 - t41;
t34 = qJ(6) * t235 + t538;
t32 = pkin(5) * t190 - t39;
t31 = -qJ(6) * t190 + t40;
t30 = -t57 + t430;
t27 = t140 * t190 + t591;
t22 = -t530 - t589;
t14 = t140 * t86 + t161 * t57;
t13 = t302 * t307 * t57 + (-t306 * t473 + t400) * t140;
t12 = pkin(5) * t85 - qJ(6) * t86 + qJD(6) * t161 + t47;
t11 = -t303 * t57 + t400 * t184 + (-t512 + t576) * t307;
t10 = t100 * t161 + t140 * t159 + t184 * t86 - t235 * t57;
t7 = -pkin(5) * t159 - t9;
t6 = qJ(6) * t159 + qJD(6) * t235 + t8;
t1 = qJD(6) * t184 + t3 - t517;
t15 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t305 - g(2) * t550, t371, 0, 0 (qJDD(1) * t299 + 0.2e1 * t416) * t298 (t304 * t467 - t469 * t483) * t581, t304 * t571 + t379 * t449 (qJDD(1) * t300 - 0.2e1 * t416) * t298, t308 * t571 - t379 * t453, t373 * t521, -t222 * t380 + t241 * t373 - t424 * t521 + g(1) * t237 - g(2) * t239 + (-t445 + t467) * t446, -t142 * t521 - t221 * t380 - t357 * t446 - t373 * t485 - t404 ((-t217 * qJD(2) + qJDD(1) * t485 + t142) * t308 + (-qJD(2) * t220 - qJDD(1) * t241 + t424) * t304 - t371) * t301, t298 * qJDD(1) * pkin(1) ^ 2 - g(1) * t441 - g(2) * t484 + t142 * t485 - t217 * t222 + t220 * t221 - t241 * t424, t389, t598, t562, t599, t585, t129, -t101 * t453 + t123 * t234 + t125 * t214 + t172 * t158 + t222 * t190 + t211 * t311 - t71 * t267 - t38 * t496 - t405, -t103 * t211 + t123 * t235 - t126 * t214 + t159 * t172 + t192 * t222 + t267 * t70 + (-t102 * t481 - t308 * t425) * t301 - t406, t101 * t159 - t102 * t158 + t125 * t103 - t126 * t311 - t70 * t190 - t71 * t192 + t234 * t425 - t38 * t235 + t404, -g(1) * t359 - g(2) * t376 - t101 * t71 + t102 * t70 + t123 * t211 + t38 * t125 - t126 * t425 + t172 * t222, t129, -t562, -t585, t389, t598, t599, -t107 * t103 + t106 * t311 + t94 * t158 + t92 * t159 + t63 * t190 + t66 * t192 + t28 * t234 + t33 * t235 + t404, -t105 * t311 + t107 * t214 - t88 * t158 - t67 * t190 - t29 * t234 - t66 * t267 - t33 * t496 + t453 * t92 + t405, t103 * t105 - t106 * t214 - t159 * t88 - t192 * t67 - t235 * t29 + t267 * t63 + (t28 * t308 - t481 * t94) * t301 + t406, -g(1) * t337 - g(2) * t341 + t29 * t105 + t28 * t106 + t33 * t107 + t94 * t63 + t92 * t66 + t88 * t67, t14, -t339, t10, t395, -t338, t54, -t100 * t41 + t138 * t47 + t159 * t25 - t160 * t20 + t184 * t9 + t235 * t4 + t58 * t90 + t69 * t85 + t407, t100 * t538 + t140 * t47 - t159 * t26 - t161 * t20 - t184 * t8 - t235 * t3 - t57 * t90 + t69 * t86 - t408, -t138 * t8 - t140 * t9 + t160 * t3 + t161 * t4 - t25 * t86 - t26 * t85 + t41 * t57 - t538 * t58 - t405, -g(1) * t324 - g(2) * t328 + t20 * t90 + t25 * t9 + t26 * t8 + t3 * t538 + t4 * t41 + t69 * t47, t14, t10, t339, t54, t338, t395, t100 * t35 + t12 * t138 - t159 * t23 - t160 * t5 - t184 * t7 - t2 * t235 + t36 * t85 + t48 * t58 + t407, t1 * t160 - t138 * t6 + t140 * t7 - t161 * t2 + t23 * t86 - t24 * t85 - t34 * t58 - t35 * t57 - t405, t1 * t235 - t100 * t34 - t12 * t140 + t159 * t24 + t161 * t5 + t184 * t6 - t36 * t86 + t48 * t57 + t408, t1 * t34 + t24 * t6 + t5 * t48 + t36 * t12 + t2 * t35 + t23 * t7 - g(1) * (-pkin(5) * t113 + qJ(6) * t114 + t324) - g(2) * (pkin(5) * t117 + qJ(6) * t116 + t328); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t483 * t500, -t308 * t410 + t443, t426, t304 * t410 + t283, t373, pkin(1) * t304 * t500 + t220 * t380 + t345 - t424, pkin(1) * t464 + t217 * t380 + (pkin(8) * t469 + g(3)) * t499 + t403 - t458, 0, 0, t335, t596, t560, t582, -t561, t419, -pkin(2) * t311 + t101 * t455 - t123 * t307 + t131 * t267 - t172 * t569 - t220 * t190 + t315, t102 * t455 + pkin(2) * t103 - t132 * t267 - t192 * t220 + (-t172 * t267 - t547) * t307 + (t123 + t331) * t303, -t101 * t586 + t102 * t569 + t131 * t192 + t132 * t190 + t567 + t597, -t123 * pkin(2) - t102 * t132 + t101 * t131 - t172 * t220 + g(1) * t230 + g(2) * t226 - g(3) * t486 + ((t101 * t307 - t102 * t303) * qJD(3) - t403 + t567) * pkin(9), t419, -t560, t561, t335, t596, t582, -t109 * t190 - t111 * t192 - t569 * t94 - t586 * t92 + t566 + t597, t111 * t267 - t190 * t487 - t260 * t311 + t29 * t307 - t455 * t92 + t569 * t88 - t315, t94 * t455 + t103 * t260 - t109 * t267 - t487 * t192 + (t267 * t88 + t547) * t307 + (-t29 - t331) * t303, t29 * t260 - t94 * t109 - t92 * t111 - g(1) * t459 - g(2) * t460 - g(3) * t423 + t487 * t88 + ((t303 * t94 + t307 * t92) * qJD(3) - t403 + t566) * pkin(9), t13, t584, t11, t322, -t583, t59, -t100 * t152 - t180 * t69 + t271 * t58 + (-t477 * t69 + t4) * t303 + t536 * t184 + t522 * t138 + (t20 * t306 - t25 * t267 - t475 * t69) * t307 + t354, t100 * t573 - t181 * t69 - t271 * t57 + (t479 * t69 - t3) * t303 - t537 * t184 + t522 * t140 + (-t20 * t302 + t26 * t267 - t474 * t69) * t307 - t355, t152 * t57 - t573 * t58 + t180 * t26 + t181 * t25 - t536 * t140 - t537 * t138 + t393 * t478 + (-t3 * t306 + t302 * t4 + (t25 * t306 + t26 * t302) * qJD(5) + t345) * t307, -g(1) * t349 - g(2) * t350 - g(3) * t369 + t4 * t152 + t20 * t271 + t25 * t536 + t26 * t537 + t3 * t573 + t522 * t69, t13, t11, -t584, t59, t583, t322, t100 * t145 - t180 * t36 + t183 * t58 + (-t36 * t477 - t2) * t303 - t539 * t184 + t525 * t138 + (t23 * t267 + t306 * t5 - t36 * t475) * t307 + t354, -t144 * t58 - t145 * t57 + t180 * t24 - t181 * t23 + t539 * t140 - t540 * t138 + t394 * t478 + (-t1 * t306 - t2 * t302 + (-t23 * t306 + t24 * t302) * qJD(5) + t345) * t307, -t100 * t144 + t181 * t36 + t183 * t57 + (-t36 * t479 + t1) * t303 + t540 * t184 - t525 * t140 + (-t24 * t267 + t302 * t5 + t36 * t474) * t307 + t355, t1 * t144 + t5 * t183 + t2 * t145 - g(1) * (pkin(5) * t136 + qJ(6) * t135 + t349) - g(2) * (pkin(5) * t134 + qJ(6) * t133 + t350) - g(3) * (pkin(5) * t197 + qJ(6) * t196 + t369) + t525 * t36 + t540 * t24 + t539 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t508, t447, -t327, -t508, -t600, t214, -t172 * t192 + t333 - t515, t101 * t267 + t172 * t190 - t332, 0, 0, t214, t327, t600, t508, t447, -t508, pkin(3) * t103 - qJ(4) * t311 + (-t102 - t94) * t192 + (t92 + t470) * t190, t124 * t190 + t320 + t515 - 0.2e1 * t549, t124 * t192 - t190 * t88 + t267 * t470 + 0.2e1 * t204 - t250 + t332, -t33 * pkin(3) - g(1) * t434 - g(2) * t435 - g(3) * t433 - t28 * qJ(4) - t92 * t102 - t88 * t124 + t470 * t94, t22, -t593, t27, t138 * t505 + t592, -t343, t510, qJ(4) * t58 + t489 * t138 - t184 * t39 + t190 * t25 + t329 * t302 + t306 * t565, -qJ(4) * t57 + t489 * t140 + t184 * t40 - t190 * t26 - t302 * t565 + t329 * t306, t138 * t40 + t140 * t39 + (-t529 - t579) * t306 + (t192 * t25 - t3 + (t25 - t511) * qJD(5)) * t302 + t342, t20 * qJ(4) - t26 * t40 - t25 * t39 - g(1) * (t434 - t545) - g(2) * (t435 - t546) - g(3) * (t433 - t541) + t489 * t69 - (qJD(5) * t393 + t3 * t302 + t4 * t306) * t552, t22, t27, t593, t510, t343, t306 * t430 + t56, t138 * t523 + t184 * t32 - t190 * t23 + t257 * t58 - t302 * t330 + t306 * t358, t138 * t31 - t140 * t32 + (-t529 - t580) * t306 + (-t192 * t23 - t1 + (-t23 - t511) * qJD(5)) * t302 + t342, -t140 * t523 - t184 * t31 + t190 * t24 + t257 * t57 + t302 * t358 + t306 * t330, -t24 * t31 - t23 * t32 - g(1) * (-t156 - t545) - g(2) * (-t154 - t546) - g(3) * (-t224 - t541) + t523 * t36 - (qJD(5) * t394 + t1 * t302 - t2 * t306) * t552 + (t5 - t352) * t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, t214 - t508, -t267 ^ 2 - t553, -t267 * t94 + t320 - t549, 0, 0, 0, 0, 0, 0, t575, -t306 * t554 + t512 + t96, t326, t267 * t69 + t579 * t306 + (t3 - t534) * t302 - t353, 0, 0, 0, 0, 0, 0, t575, t326, t374 - t512, t267 * t36 + t580 * t306 + (t184 * t23 + t1) * t302 - t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, -t448, t30, -t513, -t577, -t100, -t140 * t69 + t336 + t533, t138 * t69 - t325 + t534, 0, 0, t513, t30, t448, -t100, t577, -t513, -t138 * t76 - t321 + t533 - 0.2e1 * t548, pkin(5) * t57 - qJ(6) * t58 + (t24 - t26) * t140 + (t23 - t488) * t138, -0.2e1 * t517 - t138 * t36 + t140 * t76 + (0.2e1 * qJD(6) - t25) * t184 + t325, t1 * qJ(6) - t2 * pkin(5) - t36 * t76 - t23 * t26 - g(1) * (-pkin(5) * t116 + qJ(6) * t117) - g(2) * (pkin(5) * t114 + qJ(6) * t113) - g(3) * t399 + t488 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100 + t513, t30, -t554 - t555, t321 - t535 + t548;];
tau_reg  = t15;
