% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 09:38
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPRP12_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP12_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP12_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 09:36:27
% EndTime: 2019-05-07 09:37:49
% DurationCPUTime: 87.18s
% Computational Cost: add. (245472->1037), mult. (529900->1311), div. (0->0), fcn. (412236->10), ass. (0->720)
t2187 = cos(qJ(5));
t2184 = sin(qJ(3));
t2188 = cos(qJ(3));
t2182 = cos(pkin(6));
t2398 = qJD(1) * t2182;
t2320 = qJD(2) + t2398;
t2181 = sin(pkin(6));
t2185 = sin(qJ(2));
t2359 = t2181 * t2185;
t2334 = qJD(1) * t2359;
t2138 = t2184 * t2334 - t2188 * t2320;
t2189 = cos(qJ(2));
t2358 = t2181 * t2189;
t2168 = qJD(1) * t2358 - qJD(3);
t2183 = sin(qJ(5));
t2103 = t2138 * t2183 - t2168 * t2187;
t2100 = t2103 ^ 2;
t2140 = t2184 * t2320 + t2188 * t2334;
t2134 = qJD(5) + t2140;
t2131 = t2134 ^ 2;
t2336 = t2131 + t2100;
t2338 = t2185 * qJDD(1);
t2397 = qJD(1) * t2189;
t2148 = (qJD(2) * t2397 + t2338) * t2181;
t2174 = qJDD(1) * t2182 + qJDD(2);
t2251 = t2188 * t2148 + t2184 * t2174;
t2214 = qJD(3) * t2138 - t2251;
t2206 = -qJDD(5) + t2214;
t2101 = -t2187 * t2138 - t2168 * t2183;
t2375 = t2103 * t2101;
t2203 = -t2375 + t2206;
t2350 = t2183 * t2203;
t1877 = t2187 * t2336 - t2350;
t2064 = t2101 * t2134;
t2315 = -t2148 * t2184 + t2188 * t2174;
t2079 = qJD(3) * t2140 - t2315;
t2339 = qJDD(1) * t2181;
t2149 = -qJD(2) * t2334 + t2189 * t2339;
t2143 = -qJDD(3) + t2149;
t2260 = t2183 * t2079 - t2143 * t2187;
t2213 = qJD(5) * t2101 - t2260;
t2517 = t2064 + t2213;
t1802 = t1877 * t2188 - t2184 * t2517;
t1796 = t1877 * t2184 + t2188 * t2517;
t2386 = t2187 * t2203;
t1887 = t2183 * t2336 + t2386;
t2284 = t1796 * t2185 + t1887 * t2189;
t1699 = t2181 * t1802 + t2182 * t2284;
t1748 = t1796 * t2189 - t1887 * t2185;
t2186 = sin(qJ(1));
t2190 = cos(qJ(1));
t2648 = pkin(7) * (t1699 * t2190 + t1748 * t2186);
t2647 = pkin(7) * (t1699 * t2186 - t1748 * t2190);
t1697 = -t2182 * t1802 + t2181 * t2284;
t2646 = pkin(8) * (t1697 * t2181 + t1699 * t2182);
t2645 = pkin(1) * t1697;
t2644 = pkin(1) * t1699;
t2419 = t2101 ^ 2;
t2056 = t2419 - t2131;
t1901 = -t2056 * t2183 + t2386;
t2317 = t2187 * t2079 + t2143 * t2183;
t2347 = qJD(5) - t2134;
t2215 = -t2103 * t2347 + t2317;
t1808 = t1901 * t2188 + t2215 * t2184;
t1813 = t1901 * t2184 - t2215 * t2188;
t1906 = t2056 * t2187 + t2350;
t2278 = t1813 * t2185 + t1906 * t2189;
t1719 = t2181 * t1808 + t2182 * t2278;
t1757 = t1813 * t2189 - t1906 * t2185;
t2641 = t1719 * t2186 - t1757 * t2190;
t2640 = t1719 * t2190 + t1757 * t2186;
t2417 = t2168 ^ 2;
t2418 = t2140 ^ 2;
t2092 = t2418 + t2417;
t2369 = t2140 * t2138;
t2210 = t2143 - t2369;
t2455 = t2210 * t2184;
t1986 = t2092 * t2188 - t2455;
t2454 = t2210 * t2188;
t1987 = t2092 * t2184 + t2454;
t2348 = qJD(3) - t2168;
t2030 = t2138 * t2348 - t2251;
t2266 = t1987 * t2185 + t2030 * t2189;
t1836 = t2181 * t1986 + t2182 * t2266;
t1896 = t1987 * t2189 - t2030 * t2185;
t2638 = pkin(7) * (t1836 * t2190 + t1896 * t2186);
t2637 = pkin(7) * (t1836 * t2186 - t1896 * t2190);
t2636 = pkin(8) * t1748;
t1834 = -t2182 * t1986 + t2181 * t2266;
t2635 = pkin(8) * (t1834 * t2181 + t1836 * t2182);
t1715 = -t2182 * t1808 + t2181 * t2278;
t2630 = pkin(1) * t1834;
t2629 = pkin(1) * t1836;
t2625 = pkin(2) * t1802;
t2624 = pkin(9) * t1802;
t2619 = pkin(2) * t1887 + pkin(9) * t1796;
t2447 = -t2418 + t2417;
t2060 = t2143 + t2369;
t2495 = t2060 * t2184;
t1991 = -t2188 * t2447 + t2495;
t2494 = t2060 * t2188;
t1995 = t2184 * t2447 + t2494;
t2370 = t2138 * t2168;
t2029 = t2370 + t2214;
t2264 = t1995 * t2185 - t2029 * t2189;
t1848 = -t2181 * t1991 + t2182 * t2264;
t1910 = t1995 * t2189 + t2029 * t2185;
t2618 = t1848 * t2186 - t1910 * t2190;
t2617 = t1848 * t2190 + t1910 * t2186;
t2616 = pkin(8) * t1896;
t1982 = -t2419 - t2100;
t1938 = t2101 * t2347 - t2260;
t2432 = t1938 * t2187 + t2183 * t2215;
t2514 = t1982 * t2184 - t2188 * t2432;
t2435 = -t2183 * t1938 + t2187 * t2215;
t2513 = t1982 * t2188 + t2184 * t2432;
t2550 = t2185 * t2513 - t2189 * t2435;
t2581 = -t2181 * t2514 + t2182 * t2550;
t2613 = pkin(1) * t2581;
t2582 = t2181 * t2550 + t2182 * t2514;
t2612 = pkin(1) * t2582;
t2610 = pkin(4) * t1877;
t2609 = pkin(10) * t1877;
t2608 = pkin(10) * t1887;
t2607 = qJ(4) * t1887;
t2415 = pkin(3) + pkin(10);
t2604 = t1887 * t2415;
t2599 = -qJ(4) * t2517 + t1877 * t2415;
t1844 = t2182 * t1991 + t2181 * t2264;
t2549 = t2185 * t2435 + t2189 * t2513;
t2598 = pkin(7) * (-t2186 * t2581 + t2190 * t2549);
t2597 = pkin(7) * (t2186 * t2549 + t2190 * t2581);
t2596 = (-t2181 * t2582 - t2182 * t2581) * pkin(8);
t2595 = pkin(2) * t1986;
t2594 = pkin(8) * t2549;
t2593 = pkin(9) * t1986;
t2592 = pkin(9) * t1987;
t2591 = qJ(6) * t2517;
t2135 = t2138 ^ 2;
t2109 = t2417 - t2135;
t1998 = t2109 * t2188 - t2455;
t2590 = t1998 * t2185;
t2589 = t1998 * t2189;
t1994 = t2109 * t2184 + t2454;
t2587 = t2181 * t1994;
t2585 = t2182 * t1994;
t2372 = t2134 * t2183;
t2054 = t2103 * t2372;
t2371 = t2134 * t2187;
t2331 = t2101 * t2371;
t1971 = -t2054 + t2331;
t2453 = (t2101 * t2183 + t2103 * t2187) * t2134;
t2471 = -t2184 * t2453 - t2188 * t2206;
t2508 = -t1971 * t2185 + t2189 * t2471;
t2472 = -t2184 * t2206 + t2188 * t2453;
t2512 = t1971 * t2189 + t2185 * t2471;
t2551 = -t2181 * t2472 + t2182 * t2512;
t2580 = -t2186 * t2551 + t2190 * t2508;
t1979 = qJD(5) * t2103 - t2317;
t1924 = t2183 * t1979 + t2331;
t1922 = -t1979 * t2187 + t2101 * t2372;
t2332 = t2188 * t2375;
t2475 = t1922 * t2184 - t2332;
t2507 = t1924 * t2185 + t2189 * t2475;
t2333 = t2184 * t2375;
t2474 = -t1922 * t2188 - t2333;
t2511 = -t1924 * t2189 + t2185 * t2475;
t2552 = -t2181 * t2474 + t2182 * t2511;
t2579 = -t2186 * t2552 + t2190 * t2507;
t2578 = t2186 * t2508 + t2190 * t2551;
t2577 = t2186 * t2507 + t2190 * t2552;
t2416 = -2 * qJD(4);
t2085 = -t2417 - t2135;
t1975 = -t2085 * t2184 + t2494;
t2576 = pkin(2) * t1975;
t2575 = pkin(2) * t2514;
t2574 = pkin(9) * t1975;
t1976 = t2085 * t2188 + t2495;
t2573 = pkin(9) * t1976;
t2572 = pkin(9) * t2514;
t2571 = t1976 * t2185;
t2570 = t1976 * t2189;
t2569 = t2181 * t1975;
t2566 = t2182 * t1975;
t2448 = -t2375 - t2206;
t1960 = t2183 * t2448;
t2341 = t2100 - t2131;
t2519 = -t2187 * t2341 + t1960;
t2563 = t2184 * t2519;
t2385 = t2448 * t2187;
t2518 = t2183 * t2341 + t2385;
t2562 = t2185 * t2518;
t2559 = t2188 * t2519;
t2558 = t2189 * t2518;
t2555 = -pkin(2) * t2435 + pkin(9) * t2513;
t2554 = t2181 * t2511 + t2182 * t2474;
t2553 = t2181 * t2512 + t2182 * t2472;
t2052 = -t2418 - t2135;
t2548 = pkin(2) * t2052;
t2445 = -t2419 - t2131;
t2473 = t2187 * t2445 - t1960;
t2547 = pkin(2) * t2473;
t2546 = pkin(4) * t1982;
t2466 = t2183 * t2445 + t2385;
t2545 = pkin(4) * t2466;
t2544 = pkin(10) * t2466;
t2543 = pkin(10) * t2473;
t2542 = qJ(4) * t2473;
t2541 = t2029 * t2184;
t2539 = t2029 * t2188;
t2535 = t2052 * t2185;
t2534 = t2052 * t2189;
t2526 = t2184 * t2466;
t2525 = t2185 * t2473;
t2523 = t2188 * t2466;
t2522 = t2189 * t2473;
t2521 = t2415 * t2466;
t2520 = t2415 * t2473;
t2413 = pkin(2) * t2189;
t2308 = -pkin(9) * t2185 - t2413;
t2399 = qJD(1) * t2181;
t2147 = t2308 * t2399;
t2313 = t2320 ^ 2;
t2170 = g(1) * t2190 + g(2) * t2186;
t2191 = qJD(1) ^ 2;
t2144 = -pkin(1) * t2191 + pkin(8) * t2339 - t2170;
t2169 = g(1) * t2186 - t2190 * g(2);
t2404 = pkin(8) * t2181;
t2207 = qJDD(1) * pkin(1) + t2191 * t2404 + t2169;
t2201 = t2182 * t2207;
t2316 = t2185 * t2144 - t2189 * t2201;
t2005 = (qJD(1) * t2147 * t2185 + g(3) * t2189) * t2181 - t2174 * pkin(2) - t2313 * pkin(9) + t2316;
t2449 = t2370 - t2214;
t2194 = t2079 * pkin(3) - qJ(4) * t2449 + t2005;
t2516 = t2140 * t2416 + t2194;
t2515 = qJ(4) * t1982 - t2415 * t2432;
t2362 = t2168 * t2188;
t2236 = t2079 * t2184 - t2138 * t2362;
t2330 = t2185 * t2369;
t2428 = t2189 * t2236 - t2330;
t2363 = t2168 * t2184;
t2301 = -t2188 * t2079 - t2138 * t2363;
t2329 = t2189 * t2369;
t2431 = t2185 * t2236 + t2329;
t2467 = -t2181 * t2301 + t2182 * t2431;
t2510 = -t2186 * t2467 + t2190 * t2428;
t2300 = t2140 * t2363 - t2188 * t2214;
t2426 = t2189 * t2300 + t2330;
t2302 = -t2140 * t2362 - t2184 * t2214;
t2430 = t2185 * t2300 - t2329;
t2468 = -t2181 * t2302 + t2182 * t2430;
t2509 = -t2186 * t2468 + t2190 * t2426;
t2506 = t2186 * t2428 + t2190 * t2467;
t2505 = t2186 * t2426 + t2190 * t2468;
t2407 = pkin(4) * t2432;
t2503 = pkin(10) * t2432;
t2502 = pkin(10) * t2435;
t2501 = qJ(4) * t2435;
t2492 = t2184 * t2449;
t2450 = t2100 - t2419;
t2491 = t2184 * t2450;
t2446 = t2418 - t2135;
t2488 = t2185 * t2446;
t2484 = t2188 * t2449;
t2483 = t2188 * t2450;
t2480 = t2189 * t2446;
t2476 = t2415 * t2435;
t2470 = t2181 * t2430 + t2182 * t2302;
t2469 = t2181 * t2431 + t2182 * t2301;
t2234 = (t2138 * t2184 + t2140 * t2188) * t2168;
t2235 = (t2138 * t2188 - t2140 * t2184) * t2168;
t2356 = t2182 * t2189;
t2357 = t2182 * t2185;
t2420 = t2143 * t2356 - t2181 * t2234 + t2235 * t2357;
t2429 = -t2143 * t2185 + t2189 * t2235;
t2465 = t2186 * t2429 + t2190 * t2420;
t2464 = -t2186 * t2420 + t2190 * t2429;
t1926 = -t2187 * t2213 - t2054;
t1925 = t2103 * t2371 - t2183 * t2213;
t2241 = t1925 * t2184 + t2332;
t2303 = -t2188 * t1925 + t2333;
t2422 = -t1926 * t2356 - t2181 * t2303 + t2241 * t2357;
t2427 = t1926 * t2185 + t2189 * t2241;
t2463 = t2186 * t2427 + t2190 * t2422;
t2462 = -t2186 * t2422 + t2190 * t2427;
t2106 = pkin(4) * t2140 + pkin(10) * t2168;
t2197 = -g(3) * t2359 + t2185 * t2201;
t2006 = t2174 * pkin(9) - t2313 * pkin(2) + (t2147 * t2399 + t2144) * t2189 + t2197;
t2294 = t2320 * qJD(1);
t2242 = t2185 * t2294;
t2243 = t2189 * t2294;
t2403 = t2182 * g(3);
t2007 = -t2149 * pkin(2) - t2148 * pkin(9) - t2403 + (pkin(2) * t2242 - pkin(9) * t2243 - t2207) * t2181;
t1909 = t2188 * t2006 + t2184 * t2007;
t2089 = pkin(3) * t2138 - qJ(4) * t2140;
t2208 = -t2417 * pkin(3) - t2138 * t2089 + t1909;
t2400 = t2143 * qJ(4);
t2196 = -t2079 * pkin(4) - t2135 * pkin(10) + t2208 - t2400;
t1791 = (t2416 - t2106) * t2168 + t2196;
t2444 = t1979 * pkin(5) + t2591;
t1733 = (pkin(5) * t2134 - (2 * qJD(6))) * t2103 + t1791 + t2444;
t2325 = qJ(6) * t2183 + pkin(4);
t2405 = pkin(5) * t2187;
t2461 = t1733 * (t2325 + t2405);
t2178 = t2181 ^ 2;
t2361 = t2178 * t2191;
t2460 = t2178 * (-t2182 * t2191 + t2294);
t1908 = t2006 * t2184 - t2188 * t2007;
t1853 = t2143 * pkin(3) - t2417 * qJ(4) + t2089 * t2140 + qJDD(4) + t1908;
t1783 = -pkin(4) * t2029 + t2060 * pkin(10) + t1853;
t2324 = -pkin(3) * t2168 + t2416;
t1792 = -t2135 * pkin(4) + t2079 * pkin(10) + (-t2106 + t2324) * t2140 + t2194;
t1728 = -t2187 * t1783 + t2183 * t1792;
t1729 = t2183 * t1783 + t2187 * t1792;
t2452 = -t2187 * t1728 + t2183 * t1729;
t2442 = -qJ(4) * (t2210 + t2143) + pkin(3) * t2092;
t2441 = qJ(4) * t1791 - t2415 * t2452;
t2440 = -t2452 + t2515;
t2394 = qJD(6) * t2134;
t2122 = 0.2e1 * t2394;
t2039 = pkin(5) * t2101 - qJ(6) * t2103;
t2293 = -t2131 * pkin(5) - qJ(6) * t2206 - t2101 * t2039 + t1729;
t1695 = t2122 + t2293;
t1688 = -pkin(5) * t1982 + t1695;
t1704 = pkin(5) * t2206 - t2131 * qJ(6) + t2039 * t2103 + qJDD(6) + t1728;
t1692 = -qJ(6) * t1982 + t1704;
t2319 = t1688 * t2183 - t2187 * t1692;
t2439 = -t2319 + t2515;
t2395 = qJD(4) * t2168;
t2158 = 0.2e1 * t2395;
t2193 = 0.2e1 * qJD(6) * t2103 + t2168 * t2106 + t2158 - t2196 - t2444;
t2373 = t2134 * t2103;
t1711 = -pkin(5) * t2373 + t2193 - t2591;
t2351 = t2183 * t2517;
t2344 = -pkin(5) * t2351 - t2187 * t1711;
t2438 = -t2344 - t2599;
t2346 = qJD(5) + t2134;
t1933 = t2103 * t2346 - t2317;
t2392 = t1791 * t2183;
t2437 = qJ(4) * t1933 + t2392 - t2521;
t1788 = t2187 * t1791;
t2436 = t1788 + t2599;
t1934 = t1979 + t2373;
t1712 = (-t1934 - t2373) * pkin(5) + t2193;
t2434 = t1712 * t2187 - t1934 * t2325;
t2433 = -t2517 * (pkin(4) + t2405) + t2183 * t1711;
t1654 = t1695 * t2183 - t1704 * t2187;
t2406 = pkin(5) * t1733;
t1732 = t2183 * t2406;
t2401 = qJ(6) * t2187;
t2323 = -qJ(4) + t2401;
t2425 = -t1654 * t2415 - t1733 * t2323 + t1732;
t2354 = t2183 * t1712;
t2424 = -t1934 * t2323 - t2354 - t2521;
t2423 = -t1926 * t2358 + t2182 * t2303 + t2241 * t2359;
t2421 = t2143 * t2358 + t2182 * t2234 + t2235 * t2359;
t2414 = pkin(2) * t2185;
t2411 = pkin(3) * t2184;
t2410 = pkin(3) * t2188;
t2409 = pkin(4) * t2452;
t2408 = pkin(4) * t1791;
t2390 = t1933 * t2187;
t2384 = t2005 * t2184;
t2383 = t2005 * t2188;
t2119 = t2168 * t2140;
t2023 = t2079 - t2119;
t2382 = t2023 * t2188;
t2121 = t2181 * t2207 + t2403;
t2374 = t2121 * t2185;
t2167 = t2189 * t2185 * t2361;
t2145 = -t2167 + t2174;
t2367 = t2145 * t2185;
t2366 = t2145 * t2189;
t2146 = t2167 + t2174;
t2365 = t2146 * t2185;
t2364 = t2146 * t2189;
t2360 = t2181 * t2174;
t2352 = t2183 * t1933;
t2349 = t2189 * t2121;
t2345 = -pkin(5) * t1704 + qJ(6) * t1695;
t2343 = pkin(5) * t1938 + qJ(6) * t2215;
t2179 = t2185 ^ 2;
t2180 = t2189 ^ 2;
t2340 = t2179 + t2180;
t2328 = t2179 * t2361;
t2327 = t2180 * t2361;
t2326 = qJ(4) * t2184 + pkin(2);
t1806 = t1908 * t2184 + t2188 * t1909;
t2314 = -t2169 * t2186 - t2190 * t2170;
t2312 = -pkin(4) * t1654 - t2345;
t2311 = t1729 + t2610;
t2310 = t1728 - t2545;
t2309 = -t2343 - t2407;
t2166 = qJDD(1) * t2190 - t2186 * t2191;
t2307 = -pkin(7) * t2166 - g(3) * t2186;
t2199 = t2208 - 0.2e1 * t2395;
t1842 = t2199 - t2400;
t2305 = -pkin(3) * t1853 + qJ(4) * t1842;
t2024 = (-qJD(3) - t2168) * t2140 + t2315;
t2304 = pkin(3) * t2029 + qJ(4) * t2024;
t2299 = pkin(4) * t1933 + t1788;
t2298 = -pkin(4) * t2517 - t2392;
t2132 = -t2328 - t2313;
t2088 = -t2132 * t2185 - t2366;
t2297 = pkin(8) * t2088 - t2374;
t2153 = -t2313 - t2327;
t2096 = t2153 * t2189 - t2365;
t2296 = pkin(8) * t2096 + t2349;
t1637 = t1654 * t2184 + t1733 * t2188;
t1655 = t1695 * t2187 + t2183 * t1704;
t2292 = t1637 * t2185 - t1655 * t2189;
t1653 = t1791 * t2188 + t2184 * t2452;
t1664 = t2183 * t1728 + t1729 * t2187;
t2291 = t1653 * t2185 - t1664 * t2189;
t1753 = t1842 * t2188 + t1853 * t2184;
t1854 = t2140 * t2324 + t2194;
t2290 = t1753 * t2185 - t1854 * t2189;
t2205 = -t2101 * t2346 + t2260;
t1819 = t2187 * t2205 - t2352;
t1779 = t1819 * t2184 + t2483;
t1823 = -t2183 * t2205 - t2390;
t2287 = t1779 * t2185 - t1823 * t2189;
t1818 = t2187 * t2517 + t2352;
t1780 = t1818 * t2184 - t2483;
t1822 = -t2351 + t2390;
t2286 = t1780 * t2185 - t1822 * t2189;
t1795 = t1933 * t2188 + t2526;
t2285 = t1795 * t2185 - t2522;
t1803 = t1934 * t2188 + t2526;
t2283 = t1803 * t2185 - t2522;
t2281 = t1806 * t2185 - t2005 * t2189;
t1811 = -t1938 * t2188 + t2563;
t2280 = t1811 * t2185 - t2558;
t1939 = -t2064 + t2213;
t1814 = -t1939 * t2188 + t2563;
t2277 = t1814 * t2185 - t2558;
t1805 = -t1908 * t2188 + t1909 * t2184;
t1945 = t2024 * t2188 - t2541;
t2272 = t1945 * t2185 - t2534;
t2022 = t2079 + t2119;
t1946 = -t2022 * t2188 - t2541;
t2271 = t1946 * t2185 - t2534;
t2031 = -t2140 * t2348 + t2315;
t1947 = t2031 * t2188 - t2492;
t2270 = t1947 * t2185 - t2480;
t1948 = -t2382 - t2492;
t2269 = t1948 * t2185 - t2480;
t2268 = t2031 * t2189 + t2571;
t2267 = t2023 * t2189 - t2571;
t2262 = -t2024 * t2189 - t2590;
t2261 = -t2022 * t2189 + t2590;
t2086 = g(3) * t2358 + t2316;
t2087 = t2189 * t2144 + t2197;
t2259 = -t2189 * t2086 + t2185 * t2087;
t1984 = t2086 * t2185 + t2087 * t2189;
t2157 = t2181 * t2243;
t2112 = t2157 + t2148;
t2156 = t2181 * t2242;
t2116 = t2149 - t2156;
t2257 = t2112 * t2189 + t2116 * t2185;
t2114 = -t2157 + t2148;
t2115 = t2149 + t2156;
t2256 = -t2114 * t2189 + t2115 * t2185;
t2255 = t2132 * t2189 - t2367;
t2152 = -t2313 + t2327;
t2254 = t2152 * t2185 + t2366;
t2151 = t2313 - t2328;
t2253 = t2151 * t2189 + t2365;
t2252 = t2153 * t2185 + t2364;
t2250 = t2169 * t2190 - t2170 * t2186;
t2244 = t2181 * t2294;
t2233 = pkin(5) * t2336 - qJ(6) * t2203 + t2293;
t2232 = -t1688 * t2187 - t2183 * t1692 + t2546;
t2231 = -t1664 + t2546;
t1609 = -t1655 * t2415 + t2461;
t1611 = -qJ(4) * t1655 - t2312;
t1636 = -t1654 * t2188 + t1733 * t2184;
t1587 = -pkin(9) * t1636 - t1609 * t2184 + t1611 * t2188;
t1598 = -pkin(2) * t1636 - t2425;
t1620 = t1637 * t2189 + t1655 * t2185;
t2230 = pkin(8) * t1620 + t1587 * t2185 + t1598 * t2189;
t1628 = -t1664 * t2415 + t2408;
t1631 = -qJ(4) * t1664 + t2409;
t1652 = t1791 * t2184 - t2188 * t2452;
t1599 = -pkin(9) * t1652 - t1628 * t2184 + t1631 * t2188;
t1617 = -pkin(2) * t1652 - t2441;
t1627 = t1653 * t2189 + t1664 * t2185;
t2229 = pkin(8) * t1627 + t1599 * t2185 + t1617 * t2189;
t1632 = t2232 - t2476;
t1700 = -t2309 - t2501;
t1621 = -t1632 * t2184 + t1700 * t2188 - t2572;
t1630 = -t2439 - t2575;
t2228 = t1621 * t2185 + t1630 * t2189 + t2594;
t1659 = -t2433 + t2604;
t2204 = -t2233 - t2610;
t1662 = t2122 - t2204 + t2607;
t1625 = -t1659 * t2184 + t1662 * t2188 + t2624;
t1650 = -t2438 + t2625;
t2227 = t1625 * t2185 + t1650 * t2189 + t2636;
t1661 = -t2434 - t2520;
t2202 = pkin(5) * t2448 + qJ(6) * t2445 - t1704;
t2198 = -t2202 - t2545;
t1666 = -t2198 - t2542;
t1801 = t1934 * t2184 - t2523;
t1626 = -pkin(9) * t1801 - t1661 * t2184 + t1666 * t2188;
t1651 = -pkin(2) * t1801 - t2424;
t1750 = t1803 * t2189 + t2525;
t2226 = pkin(8) * t1750 + t1626 * t2185 + t1651 * t2189;
t1645 = t2231 - t2476;
t1744 = t2407 - t2501;
t1629 = -t1645 * t2184 + t1744 * t2188 - t2572;
t1634 = -t2440 - t2575;
t2225 = t1629 * t2185 + t1634 * t2189 + t2594;
t1679 = -t2310 - t2542;
t1701 = t2299 - t2520;
t1793 = t1933 * t2184 - t2523;
t1640 = -pkin(9) * t1793 + t1679 * t2188 - t1701 * t2184;
t1670 = -pkin(2) * t1793 - t2437;
t1747 = t1795 * t2189 + t2525;
t2224 = pkin(8) * t1747 + t1640 * t2185 + t1670 * t2189;
t1682 = -t2311 - t2607;
t1705 = t2298 - t2604;
t1641 = t1682 * t2188 - t1705 * t2184 - t2624;
t1672 = -t2436 - t2625;
t2223 = t1641 * t2185 + t1672 * t2189 - t2636;
t1752 = t1842 * t2184 - t1853 * t2188;
t1689 = -pkin(2) * t1752 - t2305;
t1690 = -pkin(9) * t1752 + (-qJ(4) * t2188 + t2411) * t1854;
t1723 = t1753 * t2189 + t1854 * t2185;
t2222 = pkin(8) * t1723 + t1689 * t2189 + t1690 * t2185;
t1817 = -pkin(3) * t2052 + t1842;
t1826 = -qJ(4) * t2052 + t1853;
t1941 = t2024 * t2184 + t2539;
t1722 = -pkin(9) * t1941 - t1817 * t2184 + t1826 * t2188;
t1827 = -pkin(2) * t1941 - t2304;
t1867 = t1945 * t2189 + t2535;
t2221 = pkin(8) * t1867 + t1722 * t2185 + t1827 * t2189;
t1816 = (t2023 - t2119) * pkin(3) + t2516;
t1754 = qJ(4) * t2382 - t1816 * t2184 - t2574;
t2195 = pkin(3) * t2060 - qJ(4) * t2085 + t1853;
t1761 = -t2195 - t2576;
t1894 = -t2023 * t2185 - t2570;
t2220 = pkin(8) * t1894 + t1754 * t2185 + t1761 * t2189;
t1815 = pkin(3) * t2119 - qJ(4) * t2030 - t2516;
t1759 = t1815 * t2188 + t2030 * t2411 - t2593;
t1762 = t2158 - t2208 - t2442 - t2595;
t2219 = t1759 * t2185 + t1762 * t2189 - t2616;
t1838 = t1908 + t2576;
t1889 = t2384 + t2574;
t1893 = -t2031 * t2185 + t2570;
t2218 = pkin(8) * t1893 + t1838 * t2189 + t1889 * t2185;
t1841 = t1909 + t2595;
t1895 = t2383 + t2593;
t2217 = t1841 * t2189 + t1895 * t2185 + t2616;
t2045 = t2114 * t2185 + t2115 * t2189;
t2216 = pkin(8) * t2045 + t1984;
t1942 = -t2022 * t2184 + t2539;
t1760 = -pkin(9) * t1942 - t1805;
t1868 = t1946 * t2189 + t2535;
t2212 = pkin(8) * t1868 + t1760 * t2185 - t1942 * t2413;
t1767 = t1806 * t2189 + t2005 * t2185;
t2209 = pkin(8) * t1767 + t1805 * t2308;
t2200 = t2181 * t2361 + t2182 * t2244;
t2165 = qJDD(1) * t2186 + t2190 * t2191;
t2162 = t2182 * t2174;
t2155 = t2340 * t2361;
t2154 = (t2179 - t2180) * t2361;
t2150 = -pkin(7) * t2165 + g(3) * t2190;
t2120 = t2320 * t2340 * t2399;
t2113 = (t2338 + (0.2e1 * qJD(2) + t2398) * t2397) * t2181;
t2105 = t2189 * t2148 - t2179 * t2244;
t2104 = -t2185 * t2149 - t2180 * t2244;
t2095 = t2152 * t2189 - t2367;
t2094 = -t2151 * t2185 + t2364;
t2084 = (t2182 * t2148 + t2189 * t2200) * t2185;
t2083 = (t2181 * t2148 + t2189 * t2460) * t2185;
t2082 = (t2181 * t2149 - t2185 * t2460) * t2189;
t2081 = (t2182 * t2149 - t2185 * t2200) * t2189;
t2046 = -t2112 * t2185 + t2116 * t2189;
t2038 = t2181 * t2116 + t2182 * t2252;
t2037 = -t2181 * t2115 + t2182 * t2254;
t2036 = -t2181 * t2114 + t2182 * t2253;
t2035 = -t2182 * t2116 + t2181 * t2252;
t2034 = t2182 * t2115 + t2181 * t2254;
t2033 = t2182 * t2114 + t2181 * t2253;
t2019 = -t2181 * t2113 + t2182 * t2255;
t2018 = t2182 * t2113 + t2181 * t2255;
t2004 = -t2181 * t2154 + t2182 * t2257;
t2003 = t2181 * t2155 + t2182 * t2256;
t2002 = t2182 * t2154 + t2181 * t2257;
t2001 = -t2182 * t2155 + t2181 * t2256;
t1954 = t2181 * t2121 + t2182 * t2259;
t1953 = -t2182 * t2121 + t2181 * t2259;
t1944 = -t2023 * t2184 + t2484;
t1943 = t2031 * t2184 + t2484;
t1913 = t2022 * t2185 + t2589;
t1912 = t2024 * t2185 - t2589;
t1898 = -t2374 + (-t2035 * t2181 - t2038 * t2182) * pkin(8);
t1892 = -t2349 + (-t2018 * t2181 - t2019 * t2182) * pkin(8);
t1891 = -pkin(1) * t2035 + t2181 * t2086 + t2182 * t2296;
t1890 = pkin(1) * t2038 - t2182 * t2086 + t2181 * t2296;
t1884 = t1948 * t2189 + t2488;
t1883 = t1947 * t2189 + t2488;
t1882 = -pkin(1) * t2018 + t2087 * t2181 + t2182 * t2297;
t1881 = pkin(1) * t2019 - t2087 * t2182 + t2181 * t2297;
t1866 = pkin(1) * t1954 + t1984 * t2404;
t1865 = pkin(8) * t1984 * t2182 - pkin(1) * t1953;
t1856 = -pkin(1) * t2001 + t2182 * t2216;
t1855 = pkin(1) * t2003 + t2181 * t2216;
t1852 = pkin(2) * t2030 + t2384 + t2592;
t1851 = t2182 * t2261 - t2587;
t1850 = t2182 * t2262 + t2587;
t1847 = t2181 * t2261 + t2585;
t1846 = t2181 * t2262 - t2585;
t1843 = (-t1953 * t2181 - t1954 * t2182) * pkin(8);
t1840 = pkin(2) * t2031 - t2383 + t2573;
t1839 = (-t2001 * t2181 - t2003 * t2182) * pkin(8) - t2259;
t1831 = t2182 * t2267 - t2569;
t1830 = t2182 * t2268 + t2569;
t1829 = t2181 * t2267 + t2566;
t1828 = t2181 * t2268 - t2566;
t1810 = -t1939 * t2184 - t2559;
t1807 = -t1938 * t2184 - t2559;
t1800 = -t2181 * t1944 + t2182 * t2269;
t1799 = -t2181 * t1943 + t2182 * t2270;
t1798 = t2182 * t1944 + t2181 * t2269;
t1797 = t2182 * t1943 + t2181 * t2270;
t1787 = -t2181 * t1942 + t2182 * t2271;
t1786 = -t2181 * t1941 + t2182 * t2272;
t1785 = t2182 * t1942 + t2181 * t2271;
t1784 = t2182 * t1941 + t2181 * t2272;
t1778 = -t1818 * t2188 - t2491;
t1777 = -t1819 * t2188 + t2491;
t1768 = -pkin(2) * t2005 + pkin(9) * t1806;
t1758 = t1814 * t2189 + t2562;
t1755 = t1811 * t2189 + t2562;
t1749 = pkin(9) * t1946 + t1806 - t2548;
t1746 = -t2592 + t2184 * t1815 - (pkin(2) + t2410) * t2030;
t1745 = t2188 * t1816 + t2023 * t2326 - t2573;
t1735 = t1780 * t2189 + t1822 * t2185;
t1734 = t1779 * t2189 + t1823 * t2185;
t1725 = -t2181 * t1805 + t2182 * t2281;
t1724 = t2182 * t1805 + t2181 * t2281;
t1721 = pkin(9) * t1945 + t1817 * t2188 + t1826 * t2184 - t2548;
t1720 = -t2181 * t1810 + t2182 * t2277;
t1717 = -t2181 * t1807 + t2182 * t2280;
t1716 = t2182 * t1810 + t2181 * t2277;
t1713 = t2182 * t1807 + t2181 * t2280;
t1708 = -t2181 * t1801 + t2182 * t2283;
t1706 = t2182 * t1801 + t2181 * t2283;
t1698 = -t2181 * t1793 + t2182 * t2285;
t1696 = t2182 * t1793 + t2181 * t2285;
t1693 = -t2185 * t1841 + t2189 * t1895 - t2635;
t1687 = -t2185 * t1838 + t2189 * t1889 + (-t1828 * t2181 - t1830 * t2182) * pkin(8);
t1686 = -t2181 * t1778 + t2182 * t2286;
t1685 = -t2181 * t1777 + t2182 * t2287;
t1684 = t2182 * t1778 + t2181 * t2286;
t1683 = t2182 * t1777 + t2181 * t2287;
t1681 = -t2181 * t1852 + t2182 * t2217 - t2630;
t1680 = t2182 * t1852 + t2181 * t2217 + t2629;
t1674 = -pkin(1) * t1828 - t2181 * t1840 + t2182 * t2218;
t1673 = pkin(1) * t1830 + t2182 * t1840 + t2181 * t2218;
t1671 = pkin(9) * t1753 + (-t2326 - t2410) * t1854;
t1669 = -t2181 * t1752 + t2182 * t2290;
t1668 = t2182 * t1752 + t2181 * t2290;
t1667 = t1942 * t2414 + t2189 * t1760 + (-t1785 * t2181 - t1787 * t2182) * pkin(8);
t1665 = t2189 * t1759 - t2185 * t1762 + t2635;
t1660 = t2189 * t1754 - t2185 * t1761 + (-t1829 * t2181 - t1831 * t2182) * pkin(8);
t1658 = -pkin(1) * t1785 - t2181 * t1749 + t2182 * t2212;
t1657 = pkin(1) * t1787 + t2182 * t1749 + t2181 * t2212;
t1656 = t2189 * t1722 - t2185 * t1827 + (-t1784 * t2181 - t1786 * t2182) * pkin(8);
t1649 = -t2181 * t1746 + t2182 * t2219 + t2630;
t1648 = t2182 * t1746 + t2181 * t2219 - t2629;
t1647 = -pkin(1) * t1829 - t2181 * t1745 + t2182 * t2220;
t1646 = pkin(1) * t1831 + t2182 * t1745 + t2181 * t2220;
t1644 = (-pkin(9) * t2189 + t2414) * t1805 + (-t1724 * t2181 - t1725 * t2182) * pkin(8);
t1643 = -pkin(1) * t1724 - t2181 * t1768 + t2182 * t2209;
t1642 = pkin(1) * t1725 + t2182 * t1768 + t2181 * t2209;
t1639 = -pkin(1) * t1784 - t2181 * t1721 + t2182 * t2221;
t1638 = pkin(1) * t1786 + t2182 * t1721 + t2181 * t2221;
t1635 = t1682 * t2184 + t1705 * t2188 - t2619;
t1633 = pkin(9) * t1795 + t1679 * t2184 + t1701 * t2188 - t2547;
t1624 = pkin(9) * t1803 + t1661 * t2188 + t1666 * t2184 - t2547;
t1623 = t1645 * t2188 + t1744 * t2184 + t2555;
t1622 = t1659 * t2188 + t1662 * t2184 + t2619;
t1619 = t1632 * t2188 + t1700 * t2184 + t2555;
t1618 = -t2185 * t1689 + t2189 * t1690 + (-t1668 * t2181 - t1669 * t2182) * pkin(8);
t1616 = -t2181 * t1652 + t2182 * t2291;
t1615 = t2182 * t1652 + t2181 * t2291;
t1614 = -pkin(1) * t1668 - t2181 * t1671 + t2182 * t2222;
t1613 = pkin(1) * t1669 + t2182 * t1671 + t2181 * t2222;
t1612 = t2189 * t1641 - t2185 * t1672 + t2646;
t1610 = t2189 * t1640 - t2185 * t1670 + (-t1696 * t2181 - t1698 * t2182) * pkin(8);
t1608 = -t2181 * t1636 + t2182 * t2292;
t1607 = t2182 * t1636 + t2181 * t2292;
t1606 = t2189 * t1626 - t2185 * t1651 + (-t1706 * t2181 - t1708 * t2182) * pkin(8);
t1605 = t2189 * t1625 - t2185 * t1650 - t2646;
t1604 = -t2181 * t1635 + t2182 * t2223 + t2645;
t1603 = t2182 * t1635 + t2181 * t2223 - t2644;
t1602 = -pkin(1) * t1696 - t2181 * t1633 + t2182 * t2224;
t1601 = pkin(1) * t1698 + t2182 * t1633 + t2181 * t2224;
t1600 = t2189 * t1629 - t2185 * t1634 + t2596;
t1597 = t2189 * t1621 - t2185 * t1630 + t2596;
t1596 = -pkin(2) * t1664 + pkin(9) * t1653 + t1628 * t2188 + t1631 * t2184;
t1595 = -pkin(1) * t1706 - t2181 * t1624 + t2182 * t2226;
t1594 = pkin(1) * t1708 + t2182 * t1624 + t2181 * t2226;
t1593 = -t2181 * t1622 + t2182 * t2227 - t2645;
t1592 = t2182 * t1622 + t2181 * t2227 + t2644;
t1591 = -t2181 * t1623 + t2182 * t2225 - t2612;
t1590 = t2182 * t1623 + t2181 * t2225 + t2613;
t1589 = -t2181 * t1619 + t2182 * t2228 - t2612;
t1588 = t2182 * t1619 + t2181 * t2228 + t2613;
t1586 = -pkin(2) * t1655 + pkin(9) * t1637 + t1609 * t2188 + t1611 * t2184;
t1585 = t2189 * t1599 - t2185 * t1617 + (-t1615 * t2181 - t1616 * t2182) * pkin(8);
t1584 = -pkin(1) * t1615 - t2181 * t1596 + t2182 * t2229;
t1583 = pkin(1) * t1616 + t2182 * t1596 + t2181 * t2229;
t1582 = t2189 * t1587 - t2185 * t1598 + (-t1607 * t2181 - t1608 * t2182) * pkin(8);
t1581 = -pkin(1) * t1607 - t2181 * t1586 + t2182 * t2230;
t1580 = pkin(1) * t1608 + t2182 * t1586 + t2181 * t2230;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2166, 0, -t2165, 0, t2307, -t2150, -t2250, -pkin(7) * t2250, -t2084 * t2186 + t2105 * t2190, -t2004 * t2186 + t2046 * t2190, -t2036 * t2186 + t2094 * t2190, -t2081 * t2186 + t2104 * t2190, -t2037 * t2186 + t2095 * t2190, t2120 * t2190 + t2186 * t2360, t2190 * t1898 - t2186 * t1891 - pkin(7) * (t2038 * t2190 + t2096 * t2186), t2190 * t1892 - t2186 * t1882 - pkin(7) * (t2019 * t2190 + t2088 * t2186), t2190 * t1839 - t2186 * t1856 - pkin(7) * (t2003 * t2190 + t2045 * t2186), t2190 * t1843 - t2186 * t1865 - pkin(7) * (t1954 * t2190 + t1984 * t2186), t2509, -t1799 * t2186 + t1883 * t2190, t2618, t2510, -t1850 * t2186 + t1912 * t2190, t2464, t2190 * t1687 - t2186 * t1674 - pkin(7) * (t1830 * t2190 + t1893 * t2186), -t2186 * t1681 + t2190 * t1693 - t2638, t2190 * t1667 - t2186 * t1658 - pkin(7) * (t1787 * t2190 + t1868 * t2186), t2190 * t1644 - t2186 * t1643 - pkin(7) * (t1725 * t2190 + t1767 * t2186), t2464, -t2618, -t1851 * t2186 + t1913 * t2190, t2509, -t1800 * t2186 + t1884 * t2190, t2510, t2190 * t1656 - t2186 * t1639 - pkin(7) * (t1786 * t2190 + t1867 * t2186), t2190 * t1660 - t2186 * t1647 - pkin(7) * (t1831 * t2190 + t1894 * t2186), -t2186 * t1649 + t2190 * t1665 + t2638, t2190 * t1618 - t2186 * t1614 - pkin(7) * (t1669 * t2190 + t1723 * t2186), t2462, -t1685 * t2186 + t1734 * t2190, -t1717 * t2186 + t1755 * t2190, t2579, t2641, t2580, t2190 * t1610 - t2186 * t1602 - pkin(7) * (t1698 * t2190 + t1747 * t2186), -t2186 * t1604 + t2190 * t1612 + t2648, -t2186 * t1591 + t2190 * t1600 - t2597, t2190 * t1585 - t2186 * t1584 - pkin(7) * (t1616 * t2190 + t1627 * t2186), t2462, -t1720 * t2186 + t1758 * t2190, -t1686 * t2186 + t1735 * t2190, t2580, -t2641, t2579, t2190 * t1606 - t2186 * t1595 - pkin(7) * (t1708 * t2190 + t1750 * t2186), -t2186 * t1589 + t2190 * t1597 - t2597, -t2186 * t1593 + t2190 * t1605 - t2648, t2190 * t1582 - t2186 * t1581 - pkin(7) * (t1608 * t2190 + t1620 * t2186); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2165, 0, t2166, 0, t2150, t2307, t2314, pkin(7) * t2314, t2084 * t2190 + t2105 * t2186, t2004 * t2190 + t2046 * t2186, t2036 * t2190 + t2094 * t2186, t2081 * t2190 + t2104 * t2186, t2037 * t2190 + t2095 * t2186, t2120 * t2186 - t2190 * t2360, t2186 * t1898 + t2190 * t1891 + pkin(7) * (-t2038 * t2186 + t2096 * t2190), t2186 * t1892 + t2190 * t1882 + pkin(7) * (-t2019 * t2186 + t2088 * t2190), t2186 * t1839 + t2190 * t1856 + pkin(7) * (-t2003 * t2186 + t2045 * t2190), t2186 * t1843 + t2190 * t1865 + pkin(7) * (-t1954 * t2186 + t1984 * t2190), t2505, t1799 * t2190 + t1883 * t2186, -t2617, t2506, t1850 * t2190 + t1912 * t2186, t2465, t2186 * t1687 + t2190 * t1674 + pkin(7) * (-t1830 * t2186 + t1893 * t2190), t2190 * t1681 + t2186 * t1693 - t2637, t2186 * t1667 + t2190 * t1658 + pkin(7) * (-t1787 * t2186 + t1868 * t2190), t2186 * t1644 + t2190 * t1643 + pkin(7) * (-t1725 * t2186 + t1767 * t2190), t2465, t2617, t1851 * t2190 + t1913 * t2186, t2505, t1800 * t2190 + t1884 * t2186, t2506, t2186 * t1656 + t2190 * t1639 + pkin(7) * (-t1786 * t2186 + t1867 * t2190), t2186 * t1660 + t2190 * t1647 + pkin(7) * (-t1831 * t2186 + t1894 * t2190), t2190 * t1649 + t2186 * t1665 + t2637, t2186 * t1618 + t2190 * t1614 + pkin(7) * (-t1669 * t2186 + t1723 * t2190), t2463, t1685 * t2190 + t1734 * t2186, t1717 * t2190 + t1755 * t2186, t2577, -t2640, t2578, t2186 * t1610 + t2190 * t1602 + pkin(7) * (-t1698 * t2186 + t1747 * t2190), t2190 * t1604 + t2186 * t1612 + t2647, t2190 * t1591 + t2186 * t1600 + t2598, t2186 * t1585 + t2190 * t1584 + pkin(7) * (-t1616 * t2186 + t1627 * t2190), t2463, t1720 * t2190 + t1758 * t2186, t1686 * t2190 + t1735 * t2186, t2578, t2640, t2577, t2186 * t1606 + t2190 * t1595 + pkin(7) * (-t1708 * t2186 + t1750 * t2190), t2190 * t1589 + t2186 * t1597 + t2598, t2190 * t1593 + t2186 * t1605 - t2647, t2186 * t1582 + t2190 * t1581 + pkin(7) * (-t1608 * t2186 + t1620 * t2190); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2169, t2170, 0, 0, t2083, t2002, t2033, t2082, t2034, t2162, t1890, t1881, t1855, t1866, t2470, t1797, -t1844, t2469, t1846, t2421, t1673, t1680, t1657, t1642, t2421, t1844, t1847, t2470, t1798, t2469, t1638, t1646, t1648, t1613, t2423, t1683, t1713, t2554, -t1715, t2553, t1601, t1603, t1590, t1583, t2423, t1716, t1684, t2553, t1715, t2554, t1594, t1588, t1592, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2191, 0, 0, -g(3), -t2169, 0, t2105, t2046, t2094, t2104, t2095, t2120, t1898, t1892, t1839, t1843, t2426, t1883, -t1910, t2428, t1912, t2429, t1687, t1693, t1667, t1644, t2429, t1910, t1913, t2426, t1884, t2428, t1656, t1660, t1665, t1618, t2427, t1734, t1755, t2507, -t1757, t2508, t1610, t1612, t1600, t1585, t2427, t1758, t1735, t2508, t1757, t2507, t1606, t1597, t1605, t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2191, 0, qJDD(1), 0, g(3), 0, -t2170, 0, t2084, t2004, t2036, t2081, t2037, -t2360, t1891, t1882, t1856, t1865, t2468, t1799, -t1848, t2467, t1850, t2420, t1674, t1681, t1658, t1643, t2420, t1848, t1851, t2468, t1800, t2467, t1639, t1647, t1649, t1614, t2422, t1685, t1717, t2552, -t1719, t2551, t1602, t1604, t1591, t1584, t2422, t1720, t1686, t2551, t1719, t2552, t1595, t1589, t1593, t1581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2169, t2170, 0, 0, t2083, t2002, t2033, t2082, t2034, t2162, t1890, t1881, t1855, t1866, t2470, t1797, -t1844, t2469, t1846, t2421, t1673, t1680, t1657, t1642, t2421, t1844, t1847, t2470, t1798, t2469, t1638, t1646, t1648, t1613, t2423, t1683, t1713, t2554, -t1715, t2553, t1601, t1603, t1590, t1583, t2423, t1716, t1684, t2553, t1715, t2554, t1594, t1588, t1592, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2148, t2116, t2146, -t2157, t2152, t2157, 0, -t2121, t2086, 0, t2300, t1947, -t1995, t2236, -t1998, t2235, t1889, t1895, t1760, -pkin(9) * t1805, t2235, t1995, t1998, t2300, t1948, t2236, t1722, t1754, t1759, t1690, t2241, t1779, t1811, t2475, -t1813, t2471, t1640, t1641, t1629, t1599, t2241, t1814, t1780, t2471, t1813, t2475, t1626, t1621, t1625, t1587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2156, t2112, t2151, t2149, t2145, -t2156, t2121, 0, t2087, 0, -t2369, -t2446, t2029, t2369, -t2024, t2143, t1838, t1841, -pkin(2) * t1942, -pkin(2) * t1805, t2143, -t2029, -t2022, -t2369, -t2446, t2369, t1827, t1761, t1762, t1689, -t1926, -t1823, -t2518, -t1924, -t1906, t1971, t1670, t1672, t1634, t1617, -t1926, -t2518, -t1822, t1971, t1906, -t1924, t1651, t1630, t1650, t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2167, t2154, t2114, t2167, t2115, t2174, -t2086, -t2087, 0, 0, t2302, t1943, -t1991, t2301, -t1994, t2234, t1840, t1852, t1749, t1768, t2234, t1991, t1994, t2302, t1944, t2301, t1721, t1745, t1746, t1671, t2303, t1777, t1807, t2474, t1808, t2472, t1633, t1635, t1623, t1596, t2303, t1810, t1778, t2472, -t1808, t2474, t1624, t1619, t1622, t1586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2214, t2031, -t2060, -t2370, -t2109, t2370, 0, t2005, t1908, 0, t2370, t2060, t2109, -t2214, -t2023, -t2370, t1826, qJ(4) * t2023, t1815, -qJ(4) * t1854, t2375, t2450, -t1938, -t2375, t2215, -t2206, t1679, t1682, t1744, t1631, t2375, -t1939, -t2450, -t2206, -t2215, -t2375, t1666, t1700, t1662, t1611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2119, t2449, t2447, -t2079, -t2210, t2119, -t2005, 0, t1909, 0, t2119, -t2447, t2210, -t2119, t2449, -t2079, t1817, t1816, -pkin(3) * t2030, -pkin(3) * t1854, -t1925, -t1819, -t2519, -t1922, t1901, t2453, t1701, t1705, t1645, t1628, -t1925, -t2519, -t1818, t2453, -t1901, -t1922, t1661, t1632, t1659, t1609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2369, t2446, -t2029, -t2369, t2024, -t2143, -t1908, -t1909, 0, 0, -t2143, t2029, t2022, t2369, t2446, -t2369, t2304, t2195, t2199 + t2442, t2305, t1926, t1823, t2518, t1924, t1906, -t1971, t2437, t2436, t2440, t2441, t1926, t2518, t1822, -t1971, -t1906, t1924, t2424, t2439, t2438, t2425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2143, t2029, t2022, t2369, t2446, -t2369, 0, t1853, t1842, 0, t1926, t1823, t2518, t1924, t1906, -t1971, t2392 - t2544, t1788 + t2609, -t2452 - t2503, -pkin(10) * t2452, t1926, t2518, t1822, -t1971, -t1906, t1924, -t1934 * t2401 - t2354 - t2544, -t2319 - t2503, -t2344 - t2609, -pkin(10) * t1654 - t1733 * t2401 + t1732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2370, -t2060, -t2109, t2214, t2023, t2370, -t1853, 0, t1854, 0, -t2375, -t2450, t1938, t2375, -t2215, t2206, t2310, t2311, -t2407, -t2409, -t2375, t1939, t2450, t2206, t2215, t2375, t2198, t2309, t2204 - 0.2e1 * t2394, t2312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2119, t2447, -t2210, t2119, -t2449, t2079, -t1842, -t1854, 0, 0, t1925, t1819, t2519, t1922, -t1901, -t2453, -t2299 + t2543, -t2298 + t2608, -t2231 + t2502, pkin(10) * t1664 - t2408, t1925, t2519, t1818, -t2453, t1901, t1922, t2434 + t2543, -t2232 + t2502, t2433 - t2608, pkin(10) * t1655 - t2461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2213, -t1933, t2448, t2064, t2056, -t2064, 0, t1791, t1728, 0, -t2213, t2448, t1933, -t2064, -t2056, t2064, -qJ(6) * t1934, t1692, t1711, -qJ(6) * t1733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2373, t2205, -t2341, -t1979, -t2203, -t2373, -t1791, 0, t1729, 0, t2373, -t2341, t2517, -t2373, t2203, -t1979, t1712, t1688, -pkin(5) * t2517, -t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2375, t2450, -t1938, -t2375, t2215, -t2206, -t1728, -t1729, 0, 0, t2375, -t1939, -t2450, -t2206, -t2215, -t2375, t2202, t2343, t2122 + t2233, t2345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2213, t2448, t1933, -t2064, -t2056, t2064, 0, t1704, -t1733, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2375, -t1939, -t2450, -t2206, -t2215, -t2375, -t1704, 0, t1695, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2373, t2341, -t2517, t2373, -t2203, t1979, t1733, -t1695, 0, 0;];
m_new_reg  = t1;
