% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 09:38
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRP12_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 09:33:53
% EndTime: 2019-05-07 09:34:43
% DurationCPUTime: 14.89s
% Computational Cost: add. (40994->561), mult. (88405->713), div. (0->0), fcn. (68724->10), ass. (0->365)
t324 = cos(pkin(6));
t318 = qJD(1) * t324 + qJD(2);
t326 = sin(qJ(3));
t329 = cos(qJ(3));
t323 = sin(pkin(6));
t327 = sin(qJ(2));
t400 = qJD(1) * t327;
t385 = t323 * t400;
t287 = t318 * t326 + t329 * t385;
t280 = qJD(5) + t287;
t277 = t280 ^ 2;
t285 = -t329 * t318 + t326 * t385;
t330 = cos(qJ(2));
t401 = qJD(1) * t323;
t384 = t330 * t401;
t310 = -qJD(3) + t384;
t325 = sin(qJ(5));
t328 = cos(qJ(5));
t254 = -t328 * t285 - t310 * t325;
t461 = t254 ^ 2;
t218 = t461 - t277;
t383 = qJD(2) * t401;
t395 = qJDD(1) * t323;
t296 = t327 * t395 + t330 * t383;
t317 = qJDD(1) * t324 + qJDD(2);
t241 = -t285 * qJD(3) + t329 * t296 + t326 * t317;
t237 = qJDD(5) + t241;
t256 = t285 * t325 - t310 * t328;
t422 = t256 * t254;
t155 = -t422 - t237;
t434 = t155 * t328;
t111 = t218 * t325 - t434;
t409 = t155 * t325;
t115 = -t218 * t328 - t409;
t375 = -t326 * t296 + t329 * t317;
t240 = qJD(3) * t287 - t375;
t297 = -t327 * t383 + t330 * t395;
t291 = -qJDD(3) + t297;
t377 = t328 * t240 + t325 * t291;
t397 = qJD(5) - t280;
t350 = -t256 * t397 + t377;
t78 = t111 * t329 - t350 * t326;
t587 = (t327 * (t111 * t326 + t350 * t329) + t330 * t115) * t323 - t324 * t78;
t253 = t256 ^ 2;
t487 = -t253 - t277;
t107 = -t325 * t487 + t434;
t585 = pkin(2) * t107;
t105 = t328 * t487 + t409;
t584 = t105 * t326;
t583 = t105 * t329;
t455 = pkin(3) + pkin(10);
t582 = t105 * t455;
t581 = t107 * t327;
t580 = t107 * t330;
t579 = t107 * t455;
t576 = -pkin(4) * t105 + qJ(4) * t107;
t308 = t310 ^ 2;
t460 = t285 ^ 2;
t242 = -t308 - t460;
t417 = t287 * t285;
t348 = t291 + t417;
t492 = t329 * t348;
t161 = t242 * t326 - t492;
t575 = pkin(1) * t161;
t459 = t287 ^ 2;
t484 = -t459 - t308;
t349 = t291 - t417;
t489 = t349 * t329;
t174 = t326 * t484 - t489;
t418 = t285 * t310;
t488 = t241 + t418;
t574 = pkin(1) * (t174 * t327 + t330 * t488);
t573 = pkin(2) * t161;
t572 = pkin(9) * t161;
t494 = t326 * t348;
t163 = t242 * t329 + t494;
t571 = pkin(9) * t163;
t570 = t163 * t327;
t569 = t163 * t330;
t258 = t460 - t308;
t179 = t258 * t326 - t489;
t568 = t324 * t179;
t490 = t349 * t326;
t171 = t329 * t484 + t490;
t567 = -pkin(8) * (t174 * t330 - t327 * t488) - pkin(1) * t171;
t259 = -t459 + t308;
t178 = t259 * t329 - t494;
t200 = t418 - t241;
t566 = t324 * t178 - t323 * (t327 * (t259 * t326 + t492) - t330 * t200);
t457 = -2 * qJD(4);
t564 = pkin(2) * t171;
t396 = qJD(5) + t280;
t351 = t256 * t396 - t377;
t485 = -t422 + t237;
t433 = t485 * t328;
t482 = -t461 - t277;
t499 = t325 * t482 + t433;
t517 = t326 * t351 - t329 * t499;
t563 = pkin(2) * t517;
t169 = -t461 - t253;
t363 = t325 * t240 - t328 * t291;
t139 = t254 * t397 - t363;
t467 = t139 * t328 + t325 * t350;
t522 = t169 * t326 - t329 * t467;
t562 = pkin(2) * t522;
t561 = pkin(9) * t171;
t560 = pkin(9) * t174;
t559 = pkin(9) * t517;
t558 = pkin(9) * t522;
t148 = t325 * t485;
t219 = -t253 + t277;
t527 = -t219 * t328 - t148;
t557 = t326 * t527;
t556 = t327 * (t258 * t329 + t490);
t555 = t329 * t527;
t526 = -t325 * t219 + t433;
t554 = t330 * t526;
t473 = -t325 * t139 + t328 * t350;
t521 = t169 * t329 + t326 * t467;
t553 = -pkin(2) * t473 + pkin(9) * t521;
t500 = t328 * t482 - t148;
t518 = t326 * t499 + t329 * t351;
t552 = -pkin(2) * t500 + pkin(9) * t518;
t548 = pkin(1) * (t327 * t521 - t330 * t473);
t547 = pkin(1) * (t327 * t518 - t330 * t500);
t546 = pkin(8) * (t327 * t473 + t330 * t521) - pkin(1) * t522;
t545 = pkin(8) * (t327 * t500 + t330 * t518) - pkin(1) * t517;
t214 = t460 + t459;
t544 = pkin(2) * t214;
t542 = qJ(4) * t488;
t167 = -qJD(5) * t254 + t363;
t227 = t254 * t280;
t137 = t167 - t227;
t541 = qJ(6) * t137;
t540 = t200 * t326;
t539 = t200 * t329;
t205 = t253 - t461;
t538 = t205 * t326;
t537 = t205 * t329;
t536 = t214 * t327;
t535 = t214 * t330;
t529 = t455 * t499;
t528 = t455 * t500;
t374 = -pkin(2) * t330 - pkin(9) * t327;
t295 = t374 * t401;
t331 = qJD(1) ^ 2;
t453 = sin(qJ(1));
t454 = cos(qJ(1));
t355 = g(1) * t454 + g(2) * t453;
t292 = -t331 * pkin(1) + pkin(8) * t395 - t355;
t354 = g(1) * t453 - g(2) * t454;
t410 = t323 * t331;
t339 = qJDD(1) * pkin(1) + pkin(8) * t410 + t354;
t336 = t324 * t339;
t376 = t327 * t292 - t330 * t336;
t458 = t318 ^ 2;
t184 = t323 * (g(3) * t330 + t295 * t400) - t317 * pkin(2) - t458 * pkin(9) + t376;
t334 = t240 * pkin(3) + t184 - t542;
t525 = t287 * t457 + t334;
t524 = pkin(4) * t169 - t455 * t473;
t523 = qJ(4) * t169 - t455 * t467;
t516 = pkin(4) * t499 - qJ(4) * t500;
t512 = t326 * t488;
t507 = t329 * t488;
t483 = t459 - t460;
t505 = t330 * t483;
t204 = pkin(5) * t254 - qJ(6) * t256;
t412 = t323 * t327;
t333 = -g(3) * t412 + t327 * t336;
t185 = t317 * pkin(9) - t458 * pkin(2) + (t295 * t401 + t292) * t330 + t333;
t402 = qJD(1) * t318;
t446 = t324 * g(3);
t186 = -t297 * pkin(2) - t296 * pkin(9) - t446 + ((pkin(2) * t327 - pkin(9) * t330) * t402 - t339) * t323;
t118 = t185 * t326 - t329 * t186;
t245 = pkin(3) * t285 - qJ(4) * t287;
t95 = t291 * pkin(3) - t308 * qJ(4) + t245 * t287 + qJDD(4) + t118;
t62 = -t200 * pkin(4) + t348 * pkin(10) + t95;
t257 = pkin(4) * t287 + pkin(10) * t310;
t379 = -pkin(3) * t310 + t457;
t65 = -pkin(4) * t460 + pkin(10) * t240 + (-t257 + t379) * t287 + t334;
t45 = t325 * t62 + t328 * t65;
t456 = 2 * qJD(6);
t368 = t237 * qJ(6) - t254 * t204 + t280 * t456 + t45;
t33 = -pkin(5) * t277 + t368;
t44 = t325 * t65 - t328 * t62;
t38 = -t237 * pkin(5) - t277 * qJ(6) + t204 * t256 + qJDD(6) + t44;
t19 = t325 * t33 - t328 * t38;
t378 = qJ(6) * t328 - qJ(4);
t449 = pkin(5) * t325;
t166 = -qJD(5) * t256 + t377;
t481 = -t166 * pkin(5) - t541;
t119 = t329 * t185 + t326 * t186;
t347 = -t308 * pkin(3) - t285 * t245 + t119;
t416 = t291 * qJ(4);
t338 = -t240 * pkin(4) - pkin(10) * t460 + t347 - t416;
t64 = (t457 - t257) * t310 + t338;
t46 = (pkin(5) * t280 - (2 * qJD(6))) * t256 + t64 + t481;
t501 = -t19 * t455 + (-t378 + t449) * t46;
t47 = pkin(4) * t467 - qJ(4) * t473;
t419 = t280 * t328;
t390 = t254 * t419;
t127 = -t166 * t325 + t390;
t420 = t280 * t325;
t391 = t254 * t420;
t357 = -t166 * t328 - t391;
t392 = t329 * t422;
t393 = t326 * t422;
t466 = t329 * t357 - t393;
t498 = t324 * t466 + (-t330 * t127 + t327 * (-t326 * t357 - t392)) * t323;
t215 = t256 * t420;
t159 = -t215 + t390;
t216 = t256 * t419;
t371 = t216 + t391;
t472 = t326 * t237 + t329 * t371;
t497 = t324 * t472 + (t330 * t159 + t327 * (t329 * t237 - t326 * t371)) * t323;
t320 = t323 ^ 2;
t495 = t320 * (-t324 * t331 + t402);
t411 = t323 * t330;
t243 = g(3) * t411 + t376;
t244 = t330 * t292 + t333;
t486 = t327 * t243 + t330 * t244;
t24 = t325 * t45 - t328 * t44;
t479 = qJ(4) * t64 - t24 * t455;
t30 = (-t169 - t277) * pkin(5) + t368;
t31 = -qJ(6) * t169 + t38;
t478 = -t325 * t30 + t328 * t31 + t523;
t477 = -t24 + t523;
t476 = -qJ(4) * (t349 + t291) - pkin(3) * t484;
t442 = t325 * t64;
t475 = qJ(4) * t351 + t442 - t529;
t345 = -t254 * t396 + t363;
t440 = t328 * t64;
t474 = qJ(4) * t345 + t440 - t582;
t415 = t310 * t326;
t369 = -t329 * t240 - t285 * t415;
t387 = t330 * t417;
t414 = t310 * t329;
t471 = t324 * t369 + (t327 * (t240 * t326 - t285 * t414) + t387) * t323;
t370 = t326 * t241 - t287 * t414;
t470 = t324 * t370 + (t327 * (t329 * t241 + t287 * t415) - t387) * t323;
t128 = -t167 * t325 - t216;
t129 = t167 * t328 - t215;
t372 = t329 * t128 + t393;
t469 = t324 * t372 + (-t128 * t326 + t392) * t412 - t129 * t411;
t356 = (t285 * t326 + t287 * t329) * t310;
t468 = t324 * t356 + t291 * t411 + (t285 * t329 - t287 * t326) * t310 * t412;
t398 = qJD(4) * t310;
t302 = 0.2e1 * t398;
t332 = t256 * t456 + t257 * t310 + t302 - t338 - t481;
t421 = t256 * t280;
t40 = -pkin(5) * t421 + t332 + t541;
t463 = t582 - t137 * (qJ(4) + t449) + t328 * t40;
t41 = t332 + (-t351 - t421) * pkin(5);
t462 = -t325 * t41 - t351 * t378 - t529;
t451 = pkin(3) * t326;
t450 = pkin(3) * t329;
t448 = pkin(5) * t328;
t447 = pkin(8) * t323;
t445 = -pkin(5) * t38 + qJ(6) * t33;
t439 = t351 * t325;
t438 = t351 * t328;
t432 = t184 * t326;
t431 = t184 * t329;
t268 = t310 * t287;
t194 = t240 - t268;
t430 = t194 * t329;
t413 = t320 * t331;
t309 = t330 * t327 * t413;
t294 = t309 + t317;
t407 = t327 * t294;
t293 = -t309 + t317;
t405 = t330 * t293;
t404 = pkin(5) * t139 + qJ(6) * t350;
t321 = t327 ^ 2;
t389 = t321 * t413;
t322 = t330 ^ 2;
t388 = t322 * t413;
t301 = t318 * t384;
t386 = t301 + t296;
t382 = qJ(4) * t326 + pkin(2);
t381 = qJ(6) * t325 + pkin(4);
t75 = t118 * t326 + t329 * t119;
t341 = t347 - 0.2e1 * t398;
t93 = t341 - t416;
t373 = -pkin(3) * t95 + qJ(4) * t93;
t195 = (-qJD(3) - t310) * t287 + t375;
t367 = pkin(3) * t200 + qJ(4) * t195;
t25 = t325 * t44 + t328 * t45;
t364 = t118 * t329 - t119 * t326;
t361 = -pkin(1) + t374;
t346 = -pkin(5) * t487 - qJ(6) * t155 + t33;
t342 = pkin(5) * t485 + qJ(6) * t482 - t38;
t335 = pkin(3) * t348 - qJ(4) * t242 + t95;
t300 = t318 * t385;
t299 = (t321 - t322) * t413;
t298 = -t388 - t458;
t278 = -t389 - t458;
t269 = t323 * t339 + t446;
t265 = t297 - t300;
t264 = t297 + t300;
t263 = -t301 + t296;
t202 = (-qJD(3) + t310) * t287 + t375;
t193 = t240 + t268;
t147 = -t193 * t329 - t540;
t146 = t195 * t329 - t540;
t145 = -t194 * t326 + t507;
t144 = t202 * t326 + t507;
t142 = t195 * t326 + t539;
t141 = t167 + t227;
t96 = t287 * t379 + t334;
t94 = -pkin(2) * t488 + t432 - t560;
t92 = pkin(2) * t202 - t431 + t571;
t91 = qJ(4) * t214 + t95;
t88 = -t325 * t345 - t438;
t87 = t137 * t325 + t438;
t84 = -t328 * t345 + t439;
t83 = t137 * t328 - t439;
t82 = pkin(3) * t214 + t93;
t81 = (t194 - t268) * pkin(3) + t525;
t80 = pkin(3) * t268 - t525 + t542;
t79 = t141 * t326 + t555;
t76 = -t139 * t326 + t555;
t73 = t329 * t345 + t584;
t71 = t326 * t345 - t583;
t69 = -t137 * t329 - t584;
t67 = -t137 * t326 + t583;
t59 = t329 * t83 - t538;
t58 = t329 * t84 + t538;
t53 = -pkin(2) * t184 + pkin(9) * t75;
t52 = t326 * t95 + t329 * t93;
t51 = t326 * t93 - t329 * t95;
t50 = pkin(9) * t147 + t544 + t75;
t49 = t560 + t326 * t80 + (pkin(2) + t450) * t488;
t48 = t194 * t382 + t329 * t81 - t571;
t42 = pkin(9) * t146 + t326 * t91 + t329 * t82 + t544;
t39 = pkin(4) * t345 - t442 - t579;
t35 = pkin(4) * t351 + t440 - t528;
t34 = t404 + t47;
t29 = -t45 - t576;
t28 = -t44 + t516;
t27 = pkin(9) * t52 + (-t382 - t450) * t96;
t26 = t342 + t516;
t23 = t346 + t576;
t22 = -t328 * t41 + t351 * t381 - t528;
t21 = -t325 * t40 + (-pkin(4) - t448) * t137 + t579;
t20 = t325 * t38 + t328 * t33;
t18 = t24 * t326 + t329 * t64;
t17 = -t24 * t329 + t326 * t64;
t16 = -t25 + t524;
t15 = t19 * t326 + t329 * t46;
t14 = -t19 * t329 + t326 * t46;
t13 = pkin(9) * t73 + t29 * t326 + t329 * t39 - t585;
t12 = t28 * t326 + t329 * t35 + t552;
t11 = -t328 * t30 - t325 * t31 + t524;
t10 = pkin(4) * t24 - qJ(4) * t25;
t9 = pkin(4) * t64 - t25 * t455;
t8 = t22 * t329 + t26 * t326 + t552;
t7 = t16 * t329 + t326 * t47 + t553;
t6 = pkin(9) * t69 + t21 * t329 + t23 * t326 + t585;
t5 = t11 * t329 + t326 * t34 + t553;
t4 = pkin(4) * t19 - qJ(4) * t20 + t445;
t3 = -t455 * t20 + (t381 + t448) * t46;
t2 = -pkin(2) * t25 + pkin(9) * t18 + t10 * t326 + t329 * t9;
t1 = -pkin(2) * t20 + pkin(9) * t15 + t3 * t329 + t326 * t4;
t32 = [0, 0, 0, 0, 0, qJDD(1), t354, t355, 0, 0, (t296 * t323 + t330 * t495) * t327, t324 * t299 + (t327 * t265 + t330 * t386) * t323, t324 * t263 + (t407 + t330 * (-t389 + t458)) * t323, (t297 * t323 - t327 * t495) * t330, t324 * t264 + (t327 * (t388 - t458) + t405) * t323, t324 * t317, (-t243 + pkin(1) * (t294 * t330 + t298 * t327)) * t324 + (t330 * t269 + pkin(1) * t265 + pkin(8) * (t298 * t330 - t407)) * t323, -t269 * t412 - t324 * t244 + pkin(1) * (-t323 * t386 + (t278 * t330 - t293 * t327) * t324) + (-t278 * t327 - t405) * t447, pkin(1) * ((-t263 * t330 + t264 * t327) * t324 - (-t321 - t322) * t320 * t410) + (t263 * t327 + t264 * t330) * t447 + t486 * t323, pkin(1) * (t323 * t269 + (-t243 * t330 + t244 * t327) * t324) + t486 * t447, t470, t324 * t144 + (t327 * (t202 * t329 - t512) - t505) * t323, t566, t471, t568 + (-t330 * t195 + t556) * t323, t468, (t92 + pkin(1) * (t202 * t330 + t570)) * t324 + (t327 * (t432 - t572) + t330 * (t118 - t573) - t575 + pkin(8) * (-t202 * t327 + t569)) * t323, (t94 - t574) * t324 + (t327 * (t431 - t561) + t330 * (t119 - t564) + t567) * t323, (t50 + pkin(1) * (t147 * t327 + t535)) * t324 + (t327 * t364 + pkin(8) * (t147 * t330 - t536) + t361 * (-t193 * t326 + t539)) * t323, (t53 + pkin(1) * (-t184 * t330 + t327 * t75)) * t324 + (pkin(8) * (t184 * t327 + t330 * t75) - t361 * t364) * t323, t468, -t566, -t568 + (-t330 * t193 - t556) * t323, t470, t324 * t145 + (t327 * (-t430 - t512) - t505) * t323, t471, (t42 + pkin(1) * (t146 * t327 + t535)) * t324 + (t327 * (-pkin(9) * t142 - t326 * t82 + t329 * t91) + t330 * (-pkin(2) * t142 - t367) - pkin(1) * t142 + pkin(8) * (t330 * t146 - t536)) * t323, (t48 + pkin(1) * (t194 * t330 - t570)) * t324 + (t327 * (qJ(4) * t430 - t326 * t81 + t572) + t330 * (-t335 + t573) + t575 + pkin(8) * (-t194 * t327 - t569)) * t323, (t49 + t574) * t324 + (t327 * (t329 * t80 - t451 * t488 + t561) + t330 * (t302 - t347 - t476 + t564) - t567) * t323, (t27 + pkin(1) * (t327 * t52 - t330 * t96)) * t324 + (t327 * (-pkin(9) * t51 + (-qJ(4) * t329 + t451) * t96) + t330 * (-pkin(2) * t51 - t373) - pkin(1) * t51 + pkin(8) * (t327 * t96 + t330 * t52)) * t323, t469, t324 * t58 + (t327 * (-t326 * t84 + t537) - t330 * t88) * t323, t324 * t76 + (t327 * (-t139 * t329 - t557) - t554) * t323, t498, t587, t497, (t12 + t547) * t324 + (t327 * (t28 * t329 - t326 * t35 - t559) + t330 * (-t475 - t563) + t545) * t323, (t13 + pkin(1) * (t327 * t73 - t580)) * t324 + (t327 * (-pkin(9) * t71 + t29 * t329 - t326 * t39) + t330 * (-pkin(2) * t71 - t474) - pkin(1) * t71 + pkin(8) * (t330 * t73 + t581)) * t323, (t7 + t548) * t324 + (t327 * (-t16 * t326 + t329 * t47 - t558) + t330 * (-t477 - t562) + t546) * t323, (t2 + pkin(1) * (t18 * t327 - t25 * t330)) * t324 + (t327 * (-pkin(9) * t17 + t10 * t329 - t326 * t9) + t330 * (-pkin(2) * t17 - t479) - pkin(1) * t17 + pkin(8) * (t18 * t330 + t25 * t327)) * t323, t469, t324 * t79 + (t327 * (t141 * t329 - t557) - t554) * t323, t324 * t59 + (t327 * (-t326 * t83 - t537) - t330 * t87) * t323, t497, -t587, t498, (t8 + t547) * t324 + (t327 * (-t22 * t326 + t26 * t329 - t559) + t330 * (-t462 - t563) + t545) * t323, (t5 + t548) * t324 + (t327 * (-t11 * t326 + t329 * t34 - t558) + t330 * (-t478 - t562) + t546) * t323, (t6 + pkin(1) * (t327 * t69 + t580)) * t324 + (t327 * (-pkin(9) * t67 - t21 * t326 + t23 * t329) + t330 * (-pkin(2) * t67 - t463) - pkin(1) * t67 + pkin(8) * (t330 * t69 - t581)) * t323, (t1 + pkin(1) * (t15 * t327 - t20 * t330)) * t324 + (-pkin(1) * t14 + (pkin(8) * t20 - pkin(9) * t14 - t3 * t326 + t329 * t4) * t327 + (-pkin(2) * t14 + pkin(8) * t15 - t501) * t330) * t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t299, t263, t309, t264, t317, -t243, -t244, 0, 0, t370, t144, t178, t369, t179, t356, t92, t94, t50, t53, t356, -t178, -t179, t370, t145, t369, t42, t48, t49, t27, t372, t58, t76, t466, -t78, t472, t12, t13, t7, t2, t372, t79, t59, t472, t78, t466, t8, t5, t6, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t483, -t200, -t417, t195, -t291, -t118, -t119, 0, 0, -t291, t200, t193, t417, t483, -t417, t367, t335, t341 + t476, t373, t129, t88, t526, t127, -t115, -t159, t475, t474, t477, t479, t129, t526, t87, -t159, t115, t127, t462, t478, t463, t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, -t348, t484, t95, 0, 0, 0, 0, 0, 0, t499, t105, t467, t24, 0, 0, 0, 0, 0, 0, t499, t467, -t105, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, t205, -t139, -t422, t350, t237, -t44, -t45, 0, 0, t422, t141, -t205, t237, -t350, -t422, t342, t404, t346, t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485, -t139, t487, t38;];
tauJ_reg  = t32;
