% Calculate vector of inverse dynamics joint torques for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPRP12_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP12_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:51:43
% EndTime: 2019-03-09 17:57:48
% DurationCPUTime: 340.31s
% Computational Cost: add. (87812->2198), mult. (236357->2822), div. (0->0), fcn. (268581->10), ass. (0->854)
t1573 = Icges(6,4) - Icges(7,5);
t1577 = Icges(4,1) + Icges(5,2);
t1576 = Icges(6,1) + Icges(7,1);
t1575 = -Icges(4,4) - Icges(5,6);
t1574 = Icges(5,4) - Icges(4,5);
t1550 = Icges(7,4) + Icges(6,5);
t1572 = Icges(5,5) - Icges(4,6);
t1571 = Icges(4,2) + Icges(5,3);
t1570 = Icges(6,2) + Icges(7,3);
t1569 = Icges(7,2) + Icges(6,3);
t1549 = Icges(6,6) - Icges(7,6);
t1331 = cos(qJ(2));
t935 = sin(pkin(6));
t1145 = t935 * t1331;
t1329 = cos(qJ(5));
t1048 = t1329 * t1145;
t1304 = cos(pkin(6));
t1330 = cos(qJ(3));
t1067 = t1304 * t1330;
t1328 = sin(qJ(3));
t1143 = t935 * t1328;
t937 = sin(qJ(2));
t867 = t1143 * t937 - t1067;
t936 = sin(qJ(5));
t759 = -t867 * t936 + t1048;
t1610 = t1573 * t759;
t758 = t1145 * t936 + t1329 * t867;
t1609 = t1573 * t758;
t1144 = t935 * t1330;
t868 = t1144 * t937 + t1304 * t1328;
t1461 = t1550 * t868 - t1576 * t759 + t1609;
t1462 = t1549 * t758 - t1550 * t759 + t1569 * t868;
t1463 = -t1549 * t868 - t1570 * t758 + t1610;
t939 = cos(qJ(1));
t1086 = t939 * t1144;
t1110 = t939 * t1304;
t938 = sin(qJ(1));
t991 = -t1110 * t937 - t1331 * t938;
t766 = -t1328 * t991 + t1086;
t1068 = t1304 * t1331;
t1043 = t939 * t1068;
t1257 = t937 * t938;
t990 = t1043 - t1257;
t587 = -t1329 * t990 + t766 * t936;
t588 = t1329 * t766 + t936 * t990;
t1140 = t939 * t1328;
t767 = -t1140 * t935 - t1330 * t991;
t1405 = t1461 * t587 + t1462 * t767 - t1463 * t588;
t1291 = Icges(7,5) * t588;
t1498 = Icges(7,4) * t767;
t248 = Icges(7,1) * t587 - t1291 + t1498;
t1497 = Icges(6,5) * t767;
t563 = Icges(6,4) * t588;
t251 = Icges(6,1) * t587 + t1497 + t563;
t1476 = t248 + t251;
t1493 = Icges(6,3) * t767;
t239 = Icges(6,5) * t587 + Icges(6,6) * t588 + t1493;
t1496 = Icges(7,2) * t767;
t242 = Icges(7,4) * t587 - Icges(7,6) * t588 + t1496;
t1479 = t239 + t242;
t1494 = Icges(7,6) * t767;
t561 = Icges(7,5) * t587;
t236 = -Icges(7,3) * t588 + t1494 + t561;
t1296 = Icges(6,4) * t587;
t1495 = Icges(6,6) * t767;
t245 = Icges(6,2) * t588 + t1296 + t1495;
t1482 = t236 - t245;
t1413 = t1476 * t587 + t1479 * t767 - t1482 * t588;
t1184 = qJD(2) * t939;
t917 = t935 * t1184;
t775 = qJD(3) * t990 + t917;
t544 = -qJD(5) * t767 + t775;
t925 = qJD(2) * t1304 + qJD(1);
t879 = -qJD(3) * t1145 + t925;
t699 = qJD(5) * t868 + t879;
t1608 = -t1405 * t699 + t1413 * t544;
t1185 = qJD(2) * t937;
t1132 = t935 * t1185;
t1178 = qJD(5) * t867;
t1082 = t1331 * t1328;
t1047 = t935 * t1082;
t756 = qJD(2) * t1047 + qJD(3) * t868;
t441 = -t756 * t1329 - qJD(5) * t1048 + (t1132 + t1178) * t936;
t442 = qJD(5) * t758 + t1132 * t1329 + t756 * t936;
t1083 = t1331 * t1330;
t1049 = t935 * t1083;
t1127 = qJD(3) * t1328;
t1079 = t935 * t1127;
t757 = qJD(2) * t1049 + qJD(3) * t1067 - t1079 * t937;
t1593 = -t1549 * t757 + t1570 * t441 - t1573 * t442;
t1592 = -t1549 * t441 + t1550 * t442 + t1569 * t757;
t1591 = t1550 * t757 - t1573 * t441 + t1576 * t442;
t1590 = t1132 * t1572 + t1571 * t756 + t1575 * t757;
t1589 = -t1132 * t1574 + t1575 * t756 + t1577 * t757;
t1588 = t1574 * t757 - t1572 * t756 + (-Icges(5,1) - Icges(4,3)) * t1132;
t1285 = Icges(5,6) * t868;
t601 = -Icges(5,5) * t1145 + Icges(5,3) * t867 - t1285;
t1298 = Icges(4,4) * t868;
t605 = -Icges(4,2) * t867 - Icges(4,6) * t1145 + t1298;
t1442 = t601 - t605;
t829 = Icges(5,6) * t867;
t602 = -Icges(5,4) * t1145 - Icges(5,2) * t868 + t829;
t830 = Icges(4,4) * t867;
t606 = Icges(4,1) * t868 - Icges(4,5) * t1145 - t830;
t1441 = t602 - t606;
t603 = -Icges(5,1) * t1145 - Icges(5,4) * t868 + Icges(5,5) * t867;
t604 = Icges(4,5) * t868 - Icges(4,6) * t867 - Icges(4,3) * t1145;
t1440 = t603 + t604;
t1111 = t938 * t1304;
t1141 = t939 * t1331;
t875 = -t1111 * t937 + t1141;
t770 = -t1144 * t938 + t1328 * t875;
t992 = -t1068 * t938 - t937 * t939;
t590 = -t1329 * t770 - t936 * t992;
t1290 = Icges(7,5) * t590;
t591 = -t1329 * t992 + t770 * t936;
t1087 = t938 * t1143;
t771 = t1330 * t875 + t1087;
t250 = Icges(7,1) * t591 + Icges(7,4) * t771 + t1290;
t564 = Icges(6,4) * t590;
t253 = Icges(6,1) * t591 + Icges(6,5) * t771 - t564;
t1474 = t250 + t253;
t241 = Icges(6,5) * t591 - Icges(6,6) * t590 + Icges(6,3) * t771;
t244 = Icges(7,4) * t591 + Icges(7,2) * t771 + Icges(7,6) * t590;
t1477 = t241 + t244;
t562 = Icges(7,5) * t591;
t238 = Icges(7,6) * t771 + Icges(7,3) * t590 + t562;
t1295 = Icges(6,4) * t591;
t247 = -Icges(6,2) * t590 + Icges(6,6) * t771 + t1295;
t1480 = t238 - t247;
t1412 = t1474 * t587 + t1477 * t767 - t1480 * t588;
t1080 = qJD(1) * t1144;
t677 = qJD(1) * t991 + qJD(2) * t992;
t392 = qJD(3) * t771 - t1080 * t939 + t1328 * t677;
t676 = -qJD(1) * t1043 - qJD(2) * t1141 + t1257 * t925;
t217 = qJD(5) * t591 - t1329 * t392 - t676 * t936;
t218 = -qJD(5) * t590 - t1329 * t676 + t392 * t936;
t1128 = qJD(3) * t1330;
t393 = t677 * t1330 - t875 * t1127 + (qJD(1) * t1140 + t1128 * t938) * t935;
t102 = Icges(7,5) * t218 + Icges(7,6) * t393 + Icges(7,3) * t217;
t108 = Icges(6,4) * t218 - Icges(6,2) * t217 + Icges(6,6) * t393;
t1605 = t102 - t108;
t679 = qJD(1) * t875 + qJD(2) * t990;
t394 = -t1079 * t939 - t1080 * t938 - t1128 * t991 + t1328 * t679;
t678 = -qJD(1) * t992 - qJD(2) * t991;
t219 = qJD(5) * t587 - t1329 * t394 + t678 * t936;
t220 = qJD(5) * t588 + t1329 * t678 + t394 * t936;
t395 = qJD(1) * t1087 - qJD(3) * t1086 + t1127 * t991 + t1330 * t679;
t103 = Icges(7,5) * t220 + Icges(7,6) * t395 + Icges(7,3) * t219;
t109 = Icges(6,4) * t220 - Icges(6,2) * t219 + Icges(6,6) * t395;
t1604 = t103 - t109;
t104 = Icges(6,5) * t218 - Icges(6,6) * t217 + Icges(6,3) * t393;
t106 = Icges(7,4) * t218 + Icges(7,2) * t393 + Icges(7,6) * t217;
t1603 = -t104 - t106;
t105 = Icges(6,5) * t220 - Icges(6,6) * t219 + Icges(6,3) * t395;
t107 = Icges(7,4) * t220 + Icges(7,2) * t395 + Icges(7,6) * t219;
t1602 = -t105 - t107;
t110 = Icges(7,1) * t218 + Icges(7,4) * t393 + Icges(7,5) * t217;
t112 = Icges(6,1) * t218 - Icges(6,4) * t217 + Icges(6,5) * t393;
t1601 = -t110 - t112;
t111 = Icges(7,1) * t220 + Icges(7,4) * t395 + Icges(7,5) * t219;
t113 = Icges(6,1) * t220 - Icges(6,4) * t219 + Icges(6,5) * t395;
t1600 = -t111 - t113;
t164 = -Icges(5,5) * t676 - Icges(5,6) * t393 + Icges(5,3) * t392;
t170 = Icges(4,4) * t393 - Icges(4,2) * t392 - Icges(4,6) * t676;
t1599 = -t164 + t170;
t165 = Icges(5,5) * t678 - Icges(5,6) * t395 + Icges(5,3) * t394;
t171 = Icges(4,4) * t395 - Icges(4,2) * t394 + Icges(4,6) * t678;
t1598 = -t165 + t171;
t166 = Icges(4,5) * t393 - Icges(4,6) * t392 - Icges(4,3) * t676;
t172 = -Icges(5,1) * t676 - Icges(5,4) * t393 + Icges(5,5) * t392;
t1597 = t166 + t172;
t167 = Icges(4,5) * t395 - Icges(4,6) * t394 + Icges(4,3) * t678;
t173 = Icges(5,1) * t678 - Icges(5,4) * t395 + Icges(5,5) * t394;
t1596 = t167 + t173;
t168 = -Icges(5,4) * t676 - Icges(5,2) * t393 + Icges(5,6) * t392;
t174 = Icges(4,1) * t393 - Icges(4,4) * t392 - Icges(4,5) * t676;
t1595 = t168 - t174;
t169 = Icges(5,4) * t678 - Icges(5,2) * t395 + Icges(5,6) * t394;
t175 = Icges(4,1) * t395 - Icges(4,4) * t394 + Icges(4,5) * t678;
t1594 = t169 - t175;
t1287 = Icges(5,6) * t767;
t406 = -Icges(5,5) * t990 + Icges(5,3) * t766 - t1287;
t1300 = Icges(4,4) * t767;
t415 = -Icges(4,2) * t766 - Icges(4,6) * t990 + t1300;
t1460 = t406 - t415;
t1286 = Icges(5,6) * t771;
t408 = -Icges(5,5) * t992 + Icges(5,3) * t770 - t1286;
t1299 = Icges(4,4) * t771;
t417 = -Icges(4,2) * t770 - Icges(4,6) * t992 + t1299;
t1458 = t408 - t417;
t409 = Icges(4,5) * t767 - Icges(4,6) * t766 - Icges(4,3) * t990;
t419 = Icges(5,1) * t990 + Icges(5,4) * t767 - Icges(5,5) * t766;
t1568 = t409 - t419;
t411 = Icges(4,5) * t771 - Icges(4,6) * t770 - Icges(4,3) * t992;
t420 = -Icges(5,1) * t992 - Icges(5,4) * t771 + Icges(5,5) * t770;
t1455 = t411 + t420;
t727 = Icges(5,6) * t766;
t412 = -Icges(5,4) * t990 - Icges(5,2) * t767 + t727;
t729 = Icges(4,4) * t766;
t421 = Icges(4,1) * t767 - Icges(4,5) * t990 - t729;
t1546 = t412 - t421;
t728 = Icges(5,6) * t770;
t414 = -Icges(5,4) * t992 - Icges(5,2) * t771 + t728;
t730 = Icges(4,4) * t770;
t423 = Icges(4,1) * t771 - Icges(4,5) * t992 - t730;
t1452 = t414 - t423;
t1062 = -rSges(6,1) * t587 - rSges(6,2) * t588;
t255 = rSges(6,3) * t767 - t1062;
t404 = -rSges(6,1) * t759 + rSges(6,2) * t758 + rSges(6,3) * t868;
t1587 = -t255 * t699 - t404 * t544;
t1499 = rSges(7,3) + qJ(6);
t1527 = rSges(7,1) + pkin(5);
t1222 = rSges(7,2) * t868 - t1499 * t758 - t1527 * t759;
t1557 = t1499 * t588 - t1527 * t587;
t1240 = -rSges(7,2) * t767 + t1557;
t559 = qJD(6) * t590;
t1586 = -t1222 * t544 + t1240 * t699 + t559;
t1404 = t1461 * t591 + t1462 * t771 + t1463 * t590;
t1411 = t1476 * t591 + t1479 * t771 + t1482 * t590;
t1585 = t1404 * t699 - t1411 * t544;
t1510 = t1461 * t442 + t1462 * t757 + t1463 * t441 - t1591 * t759 + t1592 * t868 - t1593 * t758;
t1492 = (t1185 * t1440 + t1331 * t1588) * t935 + t1589 * t868 + t1590 * t867 - t1441 * t757 + t1442 * t756;
t1403 = -t1461 * t759 + t1462 * t868 - t1463 * t758;
t161 = t601 * t770 - t602 * t771 - t603 * t992;
t163 = -t604 * t992 - t605 * t770 + t606 * t771;
t1484 = t161 + t163;
t1483 = -t1145 * t1440 - t1441 * t868 + t1442 * t867;
t696 = pkin(2) * t875 - pkin(9) * t992;
t877 = (pkin(2) * t937 - pkin(9) * t1331) * t935;
t1259 = t935 * t938;
t934 = t939 * pkin(1);
t1399 = pkin(8) * t1259 + t934;
t883 = qJD(1) * t1399;
t1186 = qJD(2) * t935;
t916 = t938 * t1186;
t1157 = -t696 * t925 + t877 * t916 - t883;
t1434 = qJD(4) * t766;
t506 = pkin(3) * t771 + qJ(4) * t770;
t683 = pkin(3) * t868 + qJ(4) * t867;
t774 = -qJD(3) * t992 + t916;
t1583 = t506 * t879 - t683 * t774 - t1157 + t1434;
t1177 = qJD(6) * t588;
t1239 = rSges(7,2) * t771 + t1499 * t590 + t1527 * t591;
t596 = -pkin(4) * t992 + pkin(10) * t771;
t777 = -pkin(4) * t1145 + pkin(10) * t868;
t1558 = t596 * t879 - t774 * t777 + t1583;
t543 = qJD(5) * t771 + t774;
t1582 = t1222 * t543 - t1239 * t699 + t1177 - t1558;
t1580 = -t1460 * t766 + t1546 * t767;
t137 = t406 * t770 - t412 * t771 + t419 * t992;
t141 = -t409 * t992 - t415 * t770 + t421 * t771;
t1488 = t141 + t137;
t1579 = t1484 * t879 - t1488 * t775;
t1427 = (t1572 * t767 + t1574 * t766) * t775 + (-t1572 * t771 - t1574 * t770) * t774 + (-t1572 * t868 - t1574 * t867) * t879;
t1525 = -t1476 * t218 - t1479 * t393 - t1482 * t217 + t1600 * t591 + t1602 * t771 - t1604 * t590;
t1524 = -t1474 * t218 - t1477 * t393 - t1480 * t217 + t1601 * t591 + t1603 * t771 - t1605 * t590;
t1523 = -t1476 * t220 - t1479 * t395 - t1482 * t219 + t1600 * t587 + t1602 * t767 + t1604 * t588;
t1522 = -t1474 * t220 - t1477 * t395 - t1480 * t219 + t1601 * t587 + t1603 * t767 + t1605 * t588;
t1516 = t1461 * t218 + t1462 * t393 + t1463 * t217 + t1591 * t591 + t1592 * t771 + t1593 * t590;
t1515 = t1461 * t220 + t1462 * t395 + t1463 * t219 + t1591 * t587 + t1592 * t767 - t1593 * t588;
t1514 = -t1460 * t392 + t1546 * t393 + t1568 * t676 + t1594 * t771 + t1596 * t992 + t1598 * t770;
t1513 = t1452 * t393 + t1455 * t676 - t1458 * t392 + t1595 * t771 + t1597 * t992 + t1599 * t770;
t1512 = -t1460 * t394 + t1546 * t395 - t1568 * t678 + t1594 * t767 + t1596 * t990 + t1598 * t766;
t1511 = t1452 * t395 - t1455 * t678 - t1458 * t394 + t1595 * t767 + t1597 * t990 + t1599 * t766;
t1504 = -t1440 * t676 - t1441 * t393 + t1442 * t392 + t1588 * t992 + t1589 * t771 + t1590 * t770;
t1503 = t1440 * t678 - t1441 * t395 + t1442 * t394 + t1588 * t990 + t1589 * t767 + t1590 * t766;
t1410 = t1474 * t591 + t1477 * t771 + t1480 * t590;
t92 = -t236 * t758 + t242 * t868 - t248 * t759;
t94 = t239 * t868 + t245 * t758 - t251 * t759;
t1409 = t92 + t94;
t93 = -t238 * t758 + t244 * t868 - t250 * t759;
t95 = t241 * t868 + t247 * t758 - t253 * t759;
t1408 = t93 + t95;
t1258 = t935 * t939;
t790 = Icges(3,3) * t1304 + (Icges(3,5) * t937 + Icges(3,6) * t1331) * t935;
t1301 = Icges(3,4) * t937;
t791 = Icges(3,6) * t1304 + (Icges(3,2) * t1331 + t1301) * t935;
t1260 = t935 * t937;
t1139 = t1331 * Icges(3,4);
t919 = t935 * t1139;
t792 = Icges(3,1) * t1260 + Icges(3,5) * t1304 + t919;
t989 = t1258 * t790 - t791 * t990 + t792 * t991;
t1578 = t989 * t925;
t138 = t408 * t770 - t414 * t771 - t420 * t992;
t142 = -t411 * t992 - t417 * t770 + t423 * t771;
t1491 = t138 + t142;
t1276 = t419 * t990;
t135 = t406 * t766 - t412 * t767 + t1276;
t1277 = t409 * t990;
t139 = -t415 * t766 + t421 * t767 - t1277;
t1490 = t139 + t135;
t349 = t990 * t420;
t136 = t408 * t766 - t414 * t767 - t349;
t348 = t990 * t411;
t140 = -t417 * t766 + t423 * t767 - t348;
t1489 = t140 + t136;
t145 = t1145 * t419 + t406 * t867 - t412 * t868;
t147 = -t1145 * t409 - t415 * t867 + t421 * t868;
t1487 = t147 + t145;
t146 = -t1145 * t420 + t408 * t867 - t414 * t868;
t148 = -t1145 * t411 - t417 * t867 + t423 * t868;
t1486 = t148 + t146;
t1275 = t603 * t990;
t160 = t601 * t766 - t602 * t767 - t1275;
t1274 = t604 * t990;
t162 = -t605 * t766 + t606 * t767 - t1274;
t1485 = t160 + t162;
t694 = pkin(2) * t991 + pkin(9) * t990;
t886 = pkin(1) * t938 - pkin(8) * t1258;
t882 = qJD(1) * t886;
t1533 = t694 * t925 - t877 * t917 - t882;
t723 = qJD(4) * t770;
t1565 = t1533 + t723;
t1544 = t694 - t886;
t429 = rSges(4,1) * t767 - rSges(4,2) * t766 - rSges(4,3) * t990;
t1564 = t1544 - t429;
t1563 = t1328 * t1571 + t1330 * t1575;
t1562 = t1328 * t1575 + t1330 * t1577;
t1561 = -t1329 * t1570 - t1573 * t936;
t1560 = t1329 * t1549 + t1550 * t936;
t1559 = t1329 * t1573 + t1576 * t936;
t612 = Icges(3,5) * t991 - Icges(3,6) * t990 + Icges(3,3) * t1258;
t843 = Icges(3,4) * t991;
t615 = -Icges(3,2) * t990 + Icges(3,6) * t1258 + t843;
t842 = Icges(3,4) * t990;
t617 = -Icges(3,1) * t991 - Icges(3,5) * t1258 + t842;
t234 = -t1304 * t612 - (t1331 * t615 - t617 * t937) * t935;
t610 = rSges(4,1) * t868 - rSges(4,2) * t867 - rSges(4,3) * t1145;
t149 = -t429 * t879 - t610 * t775 + t1533;
t1556 = t1499 * t219 + t1527 * t220 - t1177;
t1397 = (-t1576 * t588 + t1296 - t1482 - t561) * t544 - (t1576 * t590 + t1295 - t1480 - t562) * t543 - (-t1576 * t758 - t1463 - t1610) * t699;
t1398 = (-t1570 * t587 - t1291 + t1476 + t563) * t544 - (-t1570 * t591 + t1290 + t1474 - t564) * t543 - (t1570 * t759 + t1461 + t1609) * t699;
t1506 = t1491 * t774 + t1579;
t1554 = -t1506 / 0.2e1;
t1517 = t1403 * t699 + t1408 * t543 - t1409 * t544;
t1553 = t1517 / 0.2e1;
t1518 = t1410 * t543 + t1585;
t1552 = -t1518 / 0.2e1;
t633 = -rSges(3,1) * t991 + rSges(3,2) * t990 - rSges(3,3) * t1258;
t1545 = -t633 - t886;
t1051 = -t615 * t990 - t617 * t991;
t613 = Icges(3,5) * t875 + Icges(3,6) * t992 + Icges(3,3) * t1259;
t1302 = Icges(3,4) * t875;
t616 = Icges(3,2) * t992 + Icges(3,6) * t1259 + t1302;
t844 = Icges(3,4) * t992;
t619 = Icges(3,1) * t875 + Icges(3,5) * t1259 + t844;
t226 = t1259 * t613 + t616 * t992 + t619 * t875;
t1543 = -t1051 + t226;
t259 = rSges(6,1) * t591 - rSges(6,2) * t590 + rSges(6,3) * t771;
t74 = t259 * t699 - t404 * t543 + t1558;
t428 = -rSges(5,1) * t992 - rSges(5,2) * t771 + rSges(5,3) * t770;
t609 = -rSges(5,1) * t1145 - rSges(5,2) * t868 + rSges(5,3) * t867;
t119 = t428 * t879 - t609 * t774 + t1583;
t726 = t766 * qJ(4);
t501 = pkin(3) * t767 + t726;
t1064 = rSges(5,1) * t990 - rSges(5,3) * t766;
t427 = rSges(5,2) * t767 + t1064;
t1180 = qJD(3) * t937;
t1131 = t935 * t1180;
t918 = qJDD(2) * t1304 + qJDD(1);
t778 = qJD(2) * t1131 - qJDD(3) * t1145 + t918;
t1536 = t1483 * t778 + t1492 * t879;
t443 = qJD(5) * t757 + qJDD(5) * t868 + t778;
t1535 = t1403 * t443 + t1510 * t699;
t801 = t1304 * rSges(3,3) + (rSges(3,1) * t937 + rSges(3,2) * t1331) * t935;
t354 = -t633 * t925 - t801 * t917 - t882;
t1532 = t615 * t992 - t617 * t875;
t1122 = qJD(1) * t1186;
t1170 = qJDD(2) * t935;
t832 = t1122 * t939 + t1170 * t938;
t444 = -qJD(3) * t676 - qJDD(3) * t992 + t832;
t200 = qJD(5) * t393 + qJDD(5) * t771 + t444;
t833 = t1122 * t938 - t1170 * t939;
t445 = qJD(3) * t678 - qJDD(3) * t990 + t833;
t201 = qJD(5) * t395 + qJDD(5) * t767 + t445;
t1530 = t1404 * t443 + t1410 * t200 + t1411 * t201 + t1516 * t699 - t1524 * t543 + t1525 * t544;
t1529 = t1405 * t443 + t1412 * t200 + t1413 * t201 + t1515 * t699 - t1522 * t543 + t1523 * t544;
t1310 = t95 * t200;
t1311 = t94 * t201;
t1312 = t93 * t200;
t1313 = t92 * t201;
t30 = t104 * t868 + t108 * t758 - t112 * t759 + t241 * t757 - t247 * t441 + t253 * t442;
t1319 = t30 * t543;
t29 = t105 * t868 + t109 * t758 - t113 * t759 + t239 * t757 - t245 * t441 + t251 * t442;
t1320 = t29 * t544;
t28 = -t102 * t758 + t106 * t868 - t110 * t759 + t238 * t441 + t244 * t757 + t250 * t442;
t1321 = t28 * t543;
t27 = -t103 * t758 + t107 * t868 - t111 * t759 + t236 * t441 + t242 * t757 + t248 * t442;
t1322 = t27 * t544;
t1528 = t1310 + t1311 + t1319 - t1320 + t1312 + t1313 + t1321 - t1322 + t1535;
t1521 = -t29 - t27;
t1520 = -t30 - t28;
t1519 = t1412 * t543 - t1608;
t60 = t867 * t165 - t868 * t169 + t756 * t406 - t757 * t412 + (-t1185 * t419 - t1331 * t173) * t935;
t62 = -t867 * t171 + t868 * t175 - t756 * t415 + t757 * t421 + (t1185 * t409 - t1331 * t167) * t935;
t1509 = -t62 - t60;
t61 = t867 * t164 - t868 * t168 + t756 * t408 - t757 * t414 + (t1185 * t420 - t1331 * t172) * t935;
t63 = -t867 * t170 + t868 * t174 - t756 * t417 + t757 * t423 + (t1185 * t411 - t1331 * t166) * t935;
t1508 = -t63 - t61;
t1507 = t1485 * t879 + t1489 * t774 - t1490 * t775;
t1505 = t1483 * t879 + t1486 * t774 - t1487 * t775;
t1481 = t1570 * t588 + t1573 * t587 - t1494 + t1495;
t1478 = -t1549 * t588 - t1550 * t587 - t1493 - t1496;
t1475 = -t1573 * t588 - t1576 * t587 - t1497 - t1498;
t1151 = t990 * t1330;
t1081 = t1329 * t1328;
t649 = -t1081 * t990 - t936 * t991;
t1142 = t936 * t1328;
t650 = t1142 * t990 - t1329 * t991;
t1473 = -t1151 * t1549 + t1570 * t649 - t1573 * t650;
t1148 = t992 * t1330;
t651 = -t1081 * t992 + t875 * t936;
t652 = t1142 * t992 + t1329 * t875;
t1472 = -t1148 * t1549 + t1570 * t651 - t1573 * t652;
t1471 = t1151 * t1569 - t1549 * t649 + t1550 * t650;
t1470 = t1148 * t1569 - t1549 * t651 + t1550 * t652;
t1469 = t1151 * t1550 - t1573 * t649 + t1576 * t650;
t1468 = t1148 * t1550 - t1573 * t651 + t1576 * t652;
t1467 = t1549 * t766 + t1561 * t767;
t1466 = t1549 * t770 + t1561 * t771;
t1465 = -t1550 * t766 + t1559 * t767;
t1464 = -t1550 * t770 + t1559 * t771;
t1451 = t1549 * t867 + t1561 * t868;
t1450 = -t1550 * t867 + t1559 * t868;
t1449 = t1563 * t990 - t1572 * t991;
t1448 = t1563 * t992 + t1572 * t875;
t1447 = t1562 * t990 + t1574 * t991;
t1446 = t1562 * t992 - t1574 * t875;
t788 = -t1047 * t1329 + t1260 * t936;
t789 = (t1082 * t936 + t1329 * t937) * t935;
t1445 = -t1049 * t1549 + t1570 * t788 - t1573 * t789;
t1444 = t1049 * t1569 - t1549 * t788 + t1550 * t789;
t1443 = t1049 * t1550 - t1573 * t788 + t1576 * t789;
t1439 = (t1082 * t1571 + t1083 * t1575 + t1572 * t937) * t935;
t1438 = (t1082 * t1575 + t1083 * t1577 - t1574 * t937) * t935;
t1437 = (-t1329 * t1463 + t1461 * t936 + t1560 * t868 - t1569 * t867) * t699 - (-t1329 * t1482 + t1476 * t936 + t1560 * t767 - t1569 * t766) * t544 + (-t1329 * t1480 + t1474 * t936 + t1560 * t771 - t1569 * t770) * t543;
t1436 = (t1571 * t868 + t1441 + t829 + t830) * t879 + (-t1571 * t767 - t1546 - t727 - t729) * t775 + (t1571 * t771 + t1452 + t728 + t730) * t774;
t1435 = (-t1577 * t867 - t1285 - t1298 + t1442) * t879 + (t1577 * t766 + t1287 + t1300 - t1460) * t775 + (-t1577 * t770 - t1286 - t1299 + t1458) * t774;
t1263 = t868 * t936;
t1431 = -rSges(7,2) * t867 + t1263 * t1527;
t1266 = t771 * t936;
t1430 = -rSges(7,2) * t770 + t1266 * t1527;
t1269 = t767 * t936;
t1429 = -rSges(7,2) * t766 + t1269 * t1527;
t1196 = t683 + t777;
t1428 = t404 + t1196;
t1426 = t766 * t879 + t775 * t867;
t1425 = -t770 * t879 + t774 * t867;
t1424 = -t766 * t774 - t770 * t775;
t1423 = t1484 * t778 + t1488 * t445 + t1491 * t444 + t1504 * t879 - t1513 * t774 + t1514 * t775 + t1530;
t1422 = t1485 * t778 + t1489 * t444 + t1490 * t445 + t1503 * t879 - t1511 * t774 + t1512 * t775 + t1529;
t1280 = t148 * t444;
t1281 = t147 * t445;
t1282 = t146 * t444;
t1283 = t145 * t445;
t1315 = t63 * t774;
t1316 = t62 * t775;
t1317 = t61 * t774;
t1318 = t60 * t775;
t1421 = t1280 + t1281 + t1315 - t1316 + t1282 + t1283 + t1317 - t1318 + t1528 + t1536;
t594 = -pkin(4) * t990 + pkin(10) * t767;
t1420 = t1507 + t1519;
t1419 = t1506 + t1518;
t1255 = rSges(7,2) * t395 + t1556;
t1256 = rSges(7,2) * t393 + t1499 * t217 + t1527 * t218 + t559;
t1379 = -0.2e1 * t1582;
t1210 = -t501 - t594;
t971 = -t683 * t775 + t1565;
t951 = t1210 * t879 - t775 * t777 + t971;
t58 = t1586 + t951;
t1380 = 0.2e1 * t58;
t1176 = qJD(6) * t758;
t1250 = rSges(7,2) * t757 + t1499 * t441 + t1527 * t442 - t1176;
t1229 = -qJ(4) * t394 - t1434;
t187 = pkin(3) * t395 - t1229;
t272 = pkin(4) * t678 + pkin(10) * t395;
t655 = pkin(4) * t1132 + pkin(10) * t757;
t824 = qJD(4) * t867;
t396 = pkin(3) * t757 + qJ(4) * t756 + t824;
t1042 = -qJD(1) ^ 2 * t1399 - qJDD(1) * t886;
t438 = pkin(2) * t679 + pkin(9) * t678;
t826 = (pkin(2) * t1331 + pkin(9) * t937) * t1186;
t952 = -t438 * t925 + t694 * t918 - t826 * t917 + t833 * t877 + t1042;
t947 = qJD(4) * t392 + qJDD(4) * t770 - t396 * t775 + t445 * t683 + t952;
t942 = t947 + t1210 * t778 + t445 * t777 - t775 * t655 + (-t187 - t272) * t879;
t13 = qJD(6) * t217 + qJDD(6) * t590 + t1222 * t201 + t1240 * t443 - t1250 * t544 - t1255 * t699 + t942;
t1388 = 0.2e1 * t13;
t1227 = -t396 - t655;
t271 = -pkin(4) * t676 + pkin(10) * t393;
t186 = pkin(3) * t393 + qJ(4) * t392 + t723;
t1187 = qJD(1) * t939;
t1133 = t935 * t1187;
t1188 = qJD(1) * t938;
t1069 = -pkin(1) * t1188 + pkin(8) * t1133;
t1189 = qJD(1) * t1069 + qJDD(1) * t1399;
t437 = pkin(2) * t677 - pkin(9) * t676;
t973 = t437 * t925 + t696 * t918 - t826 * t916 - t832 * t877 + t1189;
t955 = qJD(4) * t394 + qJDD(4) * t766 + t186 * t879 + t506 * t778 + t973;
t945 = -t1196 * t444 + t1227 * t774 + t271 * t879 + t596 * t778 + t955;
t12 = qJD(6) * t219 - qJDD(6) * t588 - t1222 * t200 + t1239 * t443 - t1250 * t543 + t1256 * t699 + t945;
t1389 = 0.2e1 * t12;
t1414 = t1239 * t1389 + t1240 * t1388 - t1255 * t1380 + t1256 * t1379;
t1200 = -t694 * t916 + t696 * t917;
t1093 = t501 * t774 + t1200 + t824;
t1208 = -t506 - t596;
t981 = -t1208 * t775 + t594 * t774 + t1093;
t44 = t1239 * t544 - t1240 * t543 - t1176 + t981;
t1407 = t1240 * t44;
t1112 = t58 * t1222;
t1406 = t1582 * t1239;
t1251 = -t186 - t271;
t1135 = t1329 * qJ(6);
t1156 = t767 * t1329;
t1402 = -rSges(7,3) * t1156 - t1135 * t767 + t1429;
t1155 = t771 * t1329;
t1401 = -rSges(7,3) * t1155 - t1135 * t771 + t1430;
t1221 = t427 - t501;
t1220 = -t428 - t506;
t1206 = -t616 * t990 + t619 * t991;
t1152 = t868 * t1329;
t1400 = -rSges(7,3) * t1152 - t1135 * t868 + t1431;
t1203 = t609 + t683;
t1394 = (t1549 * t759 + t1550 * t758) * t699 - (-t1549 * t587 + t1550 * t588) * t544 + (-t1549 * t591 - t1550 * t590) * t543;
t1393 = -t259 + t1208;
t1126 = qJD(4) * t1328;
t1182 = qJD(3) * t991;
t793 = pkin(3) * t1049 + qJ(4) * t1047;
t1392 = t1126 * t992 - t1182 * t683 - t775 * t793;
t1040 = t437 * t917 + t438 * t916 - t694 * t832 - t696 * t833;
t980 = qJD(4) * t756 + qJDD(4) * t867 + t187 * t774 + t444 * t501 + t1040;
t949 = t1208 * t445 - t1251 * t775 + t272 * t774 + t444 * t594 + t980;
t7 = qJD(6) * t441 - qJDD(6) * t758 - t1239 * t201 - t1240 * t200 + t1255 * t543 + t1256 * t544 + t949;
t1390 = 0.2e1 * t7;
t115 = rSges(6,1) * t218 - rSges(6,2) * t217 + rSges(6,3) * t393;
t1063 = -rSges(6,1) * t220 + rSges(6,2) * t219;
t117 = rSges(6,3) * t395 - t1063;
t16 = t115 * t544 + t117 * t543 + t200 * t255 - t201 * t259 + t949;
t1387 = 0.2e1 * t16;
t211 = rSges(6,1) * t442 - rSges(6,2) * t441 + rSges(6,3) * t757;
t17 = -t117 * t699 + t201 * t404 - t211 * t544 - t255 * t443 + t942;
t1386 = 0.2e1 * t17;
t18 = t115 * t699 - t200 * t404 - t211 * t543 + t259 * t443 + t945;
t1385 = 0.2e1 * t18;
t176 = -rSges(5,1) * t676 - rSges(5,2) * t393 + rSges(5,3) * t392;
t1253 = -t176 - t186;
t1065 = -rSges(5,1) * t678 - rSges(5,3) * t394;
t177 = -rSges(5,2) * t395 - t1065;
t31 = t1220 * t445 - t1253 * t775 + t177 * t774 - t427 * t444 + t980;
t1384 = 0.2e1 * t31;
t454 = rSges(5,1) * t1132 - rSges(5,2) * t757 + rSges(5,3) * t756;
t38 = (-t177 - t187) * t879 + t1221 * t778 + t445 * t609 - t454 * t775 + t947;
t1383 = 0.2e1 * t38;
t1228 = -t396 - t454;
t39 = -t1203 * t444 + t1228 * t774 + t176 * t879 + t428 * t778 + t955;
t1382 = 0.2e1 * t39;
t1381 = 0.2e1 * t44;
t68 = t255 * t543 + t259 * t544 + t981;
t1378 = 0.2e1 * t68;
t73 = t1587 + t951;
t1377 = 0.2e1 * t73;
t1376 = 0.2e1 * t74;
t91 = -t1220 * t775 - t427 * t774 + t1093;
t1375 = 0.2e1 * t91;
t118 = t1221 * t879 - t609 * t775 + t971;
t1374 = 0.2e1 * t118;
t1373 = 0.2e1 * t119;
t1372 = m(6) / 0.2e1;
t1371 = m(7) / 0.2e1;
t1370 = t200 / 0.2e1;
t1369 = t201 / 0.2e1;
t1366 = t443 / 0.2e1;
t1365 = t444 / 0.2e1;
t1364 = t445 / 0.2e1;
t1363 = -t543 / 0.2e1;
t1362 = t543 / 0.2e1;
t1360 = t544 / 0.2e1;
t1359 = -t544 / 0.2e1;
t1354 = -t699 / 0.2e1;
t1353 = t699 / 0.2e1;
t1349 = -t774 / 0.2e1;
t1348 = t774 / 0.2e1;
t1346 = t775 / 0.2e1;
t1345 = -t775 / 0.2e1;
t1344 = t778 / 0.2e1;
t1342 = t832 / 0.2e1;
t1341 = t833 / 0.2e1;
t1337 = -t879 / 0.2e1;
t1336 = t879 / 0.2e1;
t1334 = rSges(5,2) - pkin(3);
t1333 = -rSges(7,2) - pkin(3);
t1332 = -rSges(6,3) - pkin(3);
t1327 = t766 * pkin(10);
t1326 = t770 * pkin(10);
t1325 = t867 * pkin(10);
t1323 = t16 * t255;
t1314 = t68 * t117;
t1279 = t234 * t833;
t235 = t1304 * t613 + (t1331 * t616 + t619 * t937) * t935;
t1278 = t235 * t832;
t1273 = t612 * t938;
t1272 = t613 * t939;
t692 = pkin(2) * t990 - pkin(9) * t991;
t1261 = t925 * t692;
t1254 = -t187 * t992 - t501 * t676;
t405 = t1304 * t437;
t1252 = t1304 * t186 + t405;
t1136 = t1331 * t792;
t869 = (Icges(3,5) * t1331 - Icges(3,6) * t937) * t935;
t819 = qJD(2) * t869;
t820 = (-Icges(3,2) * t937 + t1139) * t1186;
t871 = (Icges(3,1) * t1331 - t1301) * t935;
t821 = qJD(2) * t871;
t264 = t1304 * t819 + (t1331 * t820 + t821 * t937 + (-t791 * t937 + t1136) * qJD(2)) * t935;
t424 = t1304 * t790 + (t1331 * t791 + t792 * t937) * t935;
t1238 = t264 * t925 + t424 * t918;
t1237 = t756 + t1424;
t1236 = t1499 * t587 + t1527 * t588;
t1235 = t1499 * t591 - t1527 * t590;
t751 = t766 * pkin(3);
t499 = qJ(4) * t767 - t751;
t1234 = qJD(4) * t868 + t499 * t774;
t1233 = t394 + t1425;
t1232 = t392 + t1426;
t1231 = -rSges(7,2) * t1151 - t1499 * t649 - t1527 * t650;
t1230 = rSges(7,2) * t1148 + t1499 * t651 + t1527 * t652;
t433 = t992 * t501;
t1219 = -t594 * t992 - t433;
t754 = t770 * pkin(3);
t504 = qJ(4) * t771 - t754;
t1218 = qJD(4) * t767 + t504 * t879;
t455 = rSges(4,1) * t757 - rSges(4,2) * t756 + rSges(4,3) * t1132;
t1217 = -t455 - t826;
t456 = t506 * t1132;
t1216 = t1132 * t596 + t456;
t1215 = t1145 * t501 - t683 * t990;
t658 = t1304 * t696;
t1214 = t1304 * t506 + t658;
t841 = t867 * pkin(3);
t681 = qJ(4) * t868 - t841;
t1213 = qJD(4) * t771 - t681 * t775;
t1212 = -t1499 * t759 + t1527 * t758;
t498 = rSges(5,2) * t766 + rSges(5,3) * t767;
t1211 = -t498 - t499;
t503 = rSges(5,2) * t770 + rSges(5,3) * t771;
t1209 = -t503 - t504;
t1207 = -t506 - t696;
t1204 = rSges(7,2) * t1049 + t1499 * t788 + t1527 * t789;
t1202 = -t610 - t877;
t695 = pkin(2) * t992 + pkin(9) * t875;
t1201 = t692 * t916 + t695 * t917;
t1198 = t1258 * t696 - t1259 * t694;
t680 = rSges(5,2) * t867 + rSges(5,3) * t868;
t1197 = -t680 - t681;
t1192 = -t791 + t871;
t870 = -Icges(3,2) * t1260 + t919;
t1191 = -t792 - t870;
t1149 = t990 * t1328;
t653 = pkin(3) * t1151 + qJ(4) * t1149;
t1147 = t992 * t1328;
t654 = pkin(3) * t1148 + qJ(4) * t1147;
t665 = -pkin(4) * t991 + pkin(10) * t1151;
t666 = pkin(4) * t875 + pkin(10) * t1148;
t831 = pkin(4) * t1260 + pkin(10) * t1049;
t878 = pkin(2) * t1145 + pkin(9) * t1260;
t1181 = qJD(3) * t875;
t1175 = 2 * m(3);
t1174 = 2 * m(4);
t1173 = 2 * m(5);
t1172 = 0.2e1 * m(6);
t1171 = 0.2e1 * m(7);
t1169 = 0.2e1 * t992;
t1168 = 0.2e1 * qJD(1);
t1166 = t1145 * t187 - t396 * t990 + t678 * t683;
t1165 = t1304 * t271 + t1252;
t1164 = -t211 + t1227;
t178 = rSges(4,1) * t393 - rSges(4,2) * t392 - rSges(4,3) * t676;
t1162 = -t1133 * t694 + t1258 * t437 + t1259 * t438;
t1161 = -t826 + t1228;
t1159 = t1304 * t596 + t1214;
t225 = -t1259 * t612 - t1532;
t1158 = -t877 - t1203;
t323 = rSges(6,1) * t650 - rSges(6,2) * t649 + rSges(6,3) * t1151;
t325 = rSges(6,1) * t652 - rSges(6,2) * t651 + rSges(6,3) * t1148;
t371 = rSges(3,1) * t677 + rSges(3,2) * t676 + rSges(3,3) * t1133;
t344 = rSges(6,1) * t1269 + rSges(6,2) * t1156 - rSges(6,3) * t766;
t346 = rSges(6,1) * t1266 + rSges(6,2) * t1155 - rSges(6,3) * t770;
t431 = rSges(4,1) * t771 - rSges(4,2) * t770 - rSges(4,3) * t992;
t547 = rSges(6,1) * t789 - rSges(6,2) * t788 + rSges(6,3) * t1049;
t520 = rSges(6,1) * t1263 + rSges(6,2) * t1152 - rSges(6,3) * t867;
t635 = rSges(3,1) * t875 + rSges(3,2) * t992 + rSges(3,3) * t1259;
t1138 = t1331 * t186;
t1137 = t1331 * t506;
t1134 = t935 * t1188;
t1125 = qJD(5) * t1330;
t1124 = qJD(6) * t1329;
t1123 = t7 * t1240;
t1120 = -t1186 / 0.2e1;
t1119 = t1186 / 0.2e1;
t1113 = t44 * t1255;
t1109 = t1304 * t694;
t1107 = t1175 / 0.2e1;
t1106 = -t1174 / 0.2e1;
t1105 = t1174 / 0.2e1;
t1104 = -t1173 / 0.2e1;
t1103 = t1173 / 0.2e1;
t1102 = -t1172 / 0.2e1;
t1101 = t1172 / 0.2e1;
t1100 = -t1171 / 0.2e1;
t1099 = t1171 / 0.2e1;
t1098 = t939 * t1202;
t1097 = -t272 * t992 - t594 * t676 + t1254;
t1096 = t1227 - t1250;
t1095 = -t826 + t1164;
t1094 = t1208 - t1239;
t1092 = t1196 + t1222;
t1091 = -t877 - t1428;
t1090 = t1258 * t506 + t1259 * t501 + t1198;
t1089 = t1145 * t594 - t777 * t990 + t1215;
t1088 = t878 + t793;
t1074 = t938 * t1120;
t1073 = t938 * t1119;
t1072 = t939 * t1120;
t1071 = t939 * t1119;
t905 = rSges(2,1) * t939 - rSges(2,2) * t938;
t904 = rSges(2,1) * t938 + rSges(2,2) * t939;
t1066 = -rSges(3,1) * t679 + rSges(3,2) * t678;
t365 = Icges(3,5) * t677 + Icges(3,6) * t676 + Icges(3,3) * t1133;
t366 = Icges(3,5) * t679 - Icges(3,6) * t678 + Icges(3,3) * t1134;
t367 = Icges(3,4) * t677 + Icges(3,2) * t676 + Icges(3,6) * t1133;
t368 = Icges(3,4) * t679 - Icges(3,2) * t678 + Icges(3,6) * t1134;
t369 = Icges(3,1) * t677 + Icges(3,4) * t676 + Icges(3,5) * t1133;
t370 = Icges(3,1) * t679 - Icges(3,4) * t678 + Icges(3,5) * t1134;
t1061 = -(t368 * t992 + t370 * t875 - t615 * t676 + t617 * t677 + (-t1187 * t612 + t366 * t938) * t935) * t939 + (t367 * t992 + t369 * t875 + t616 * t676 + t619 * t677 + (t1187 * t613 + t365 * t938) * t935) * t938;
t1060 = -(t368 * t990 - t370 * t991 + t615 * t678 + t617 * t679 + (-t1188 * t612 - t366 * t939) * t935) * t939 + (t367 * t990 - t369 * t991 - t616 * t678 + t619 * t679 + (t1188 * t613 - t365 * t939) * t935) * t938;
t1059 = t1134 * t877 - t1304 * t438;
t1058 = -t826 + t1096;
t1057 = -t877 - t1092;
t1056 = qJD(4) * t1047 + t1181 * t501 + t653 * t774 + t1201;
t1032 = t1331 * t617 + t615 * t937;
t127 = t1304 * t366 + (qJD(2) * t1032 + t1331 * t368 + t370 * t937) * t935;
t1031 = t1331 * t619 - t616 * t937;
t128 = t1304 * t365 + (qJD(2) * t1031 + t1331 * t367 + t369 * t937) * t935;
t1054 = -t127 * t939 + t128 * t938;
t1053 = t225 * t938 + t226 * t939;
t372 = rSges(3,3) * t1134 - t1066;
t1052 = t371 * t939 + t372 * t938;
t684 = Icges(3,5) * t990 + Icges(3,6) * t991;
t685 = Icges(3,5) * t992 - Icges(3,6) * t875;
t1050 = t684 * t939 - t685 * t938;
t1046 = t692 + t653;
t1045 = t695 + t654;
t1044 = t696 + t1399;
t1039 = t695 * t925 - t878 * t916;
t1038 = t1133 * t501 + t1258 * t186 + t1259 * t187 + t1162;
t1037 = t1145 * t272 - t655 * t990 + t678 * t777 + t1166;
t1036 = t1258 * t596 + t1259 * t594 + t1090;
t1035 = t1088 + t831;
t533 = rSges(4,1) * t1151 - rSges(4,2) * t1149 - rSges(4,3) * t991;
t534 = rSges(4,1) * t1148 - rSges(4,2) * t1147 + rSges(4,3) * t875;
t535 = -rSges(5,1) * t991 - rSges(5,2) * t1151 + rSges(5,3) * t1149;
t536 = rSges(5,1) * t875 - rSges(5,2) * t1148 + rSges(5,3) * t1147;
t1022 = t935 * (t633 * t938 + t635 * t939);
t223 = t1258 * t612 + t1051;
t224 = -t1258 * t613 - t1206;
t1021 = (-t223 * t939 + t224 * t938) * t935;
t1020 = (-t225 * t939 + t226 * t938) * t935;
t1017 = -t878 * t917 - t1261;
t179 = rSges(4,1) * t395 - rSges(4,2) * t394 + rSges(4,3) * t678;
t1016 = t1046 + t665;
t1015 = t1045 + t666;
t1014 = -t1331 * t271 - t1138;
t1013 = -t1331 * t596 - t1137;
t1011 = Icges(5,4) * t1330 - Icges(5,5) * t1328;
t1009 = -Icges(4,5) * t1330 + Icges(4,6) * t1328;
t876 = (rSges(3,1) * t1331 - rSges(3,2) * t937) * t935;
t1006 = t1544 - t726;
t1001 = t1069 + t437;
t1000 = -t1304 * t501 + t1109;
t688 = Icges(3,1) * t990 + t843;
t689 = Icges(3,1) * t992 - t1302;
t998 = (-t616 + t689) * t938 - (t615 + t688) * t939;
t686 = Icges(3,2) * t991 + t842;
t687 = -Icges(3,2) * t875 + t844;
t997 = (-t619 - t687) * t938 - (-t617 - t686) * t939;
t531 = -Icges(5,1) * t991 - t1011 * t990;
t995 = -t1328 * t406 + t1330 * t412 + t531;
t532 = Icges(5,1) * t875 - t1011 * t992;
t994 = -t1328 * t408 + t1330 * t414 + t532;
t765 = (Icges(5,1) * t937 - Icges(5,4) * t1083 + Icges(5,5) * t1082) * t935;
t993 = -t1328 * t601 + t1330 * t602 + t765;
t772 = rSges(4,1) * t1049 - rSges(4,2) * t1047 + rSges(4,3) * t1260;
t773 = rSges(5,1) * t1260 - rSges(5,2) * t1049 + rSges(5,3) * t1047;
t988 = -t501 * t879 + t1565;
t987 = t1126 * t990 + t1131 * t506 + t654 * t879 + t1039;
t986 = pkin(10) * t1424 + t504 * t775 + t1234;
t985 = pkin(10) * t1425 - t681 * t774 + t1218;
t984 = pkin(10) * t1426 - t499 * t879 + t1213;
t983 = t1044 + t506;
t982 = t1133 * t594 + t1258 * t271 + t1259 * t272 + t1038;
t979 = t1134 * t683 - t1304 * t187 + t1059;
t977 = t1544 - t501;
t975 = t1006 - t594;
t974 = -t438 - t883;
t972 = -t1304 * t594 + t1000;
t970 = t596 + t983;
t960 = t974 + t1229;
t959 = -t594 + t977;
t958 = -t1196 * t775 - t594 * t879 + t988;
t957 = t1001 + t186;
t956 = t1134 * t777 - t1304 * t272 + t979;
t954 = -t272 + t960;
t953 = t594 * t1181 + t774 * t665 - (-t654 - t666) * t775 - t1208 * t1182 + t1056;
t950 = t271 + t957;
t948 = t596 * t1131 + t879 * t666 + (-t793 - t831) * t774 - t1196 * t1181 + t987;
t946 = -t775 * t831 - t777 * t1182 + (-t653 - t665) * t879 + (t1180 * t1210 - t1184 * t878) * t935 - t1261 + t1392;
t521 = -Icges(4,3) * t991 - t1009 * t990;
t522 = Icges(4,3) * t875 - t1009 * t992;
t760 = (Icges(4,5) * t1083 - Icges(4,6) * t1082 + Icges(4,3) * t937) * t935;
t941 = (t1328 * t417 - t1330 * t423 + t522) * t774 - (t1328 * t415 - t1330 * t421 + t521) * t775 + (t1328 * t605 - t1330 * t606 + t760) * t879;
t822 = qJD(2) * t876;
t818 = (qJD(5) * t1083 + t1180) * t935;
t691 = rSges(3,1) * t992 - rSges(3,2) * t875;
t690 = rSges(3,1) * t990 + rSges(3,2) * t991;
t682 = -rSges(4,1) * t867 - rSges(4,2) * t868;
t657 = t1125 * t992 + t1181;
t656 = t1125 * t990 - t1182;
t557 = t635 + t1399;
t505 = -rSges(4,1) * t770 - rSges(4,2) * t771;
t500 = -rSges(4,1) * t766 - rSges(4,2) * t767;
t484 = rSges(6,1) * t758 + rSges(6,2) * t759;
t432 = g(1) * t770 + g(2) * t766 + g(3) * t867;
t355 = t635 * t925 - t801 * t916 + t883;
t328 = qJD(2) * t1022;
t327 = t1259 * t790 + t791 * t992 + t792 * t875;
t307 = -rSges(6,1) * t590 - rSges(6,2) * t591;
t302 = rSges(6,1) * t588 - rSges(6,2) * t587;
t275 = t327 * t925;
t269 = t1044 + t431;
t202 = t983 + t428;
t154 = -t678 * t791 + t679 * t792 + t820 * t990 - t821 * t991 + (t1188 * t790 - t819 * t939) * t935;
t153 = t676 * t791 + t677 * t792 + t820 * t992 + t821 * t875 + (t1187 * t790 + t819 * t938) * t935;
t152 = t371 * t925 + t635 * t918 - t801 * t832 - t822 * t916 + t1189;
t151 = -t372 * t925 - t633 * t918 + t801 * t833 - t822 * t917 + t1042;
t150 = t431 * t879 - t610 * t774 - t1157;
t144 = t970 + t259;
t143 = t429 * t774 + t431 * t775 + t1200;
t124 = t970 + t1239;
t99 = qJD(2) * t1020 + t275;
t98 = qJD(2) * t1021 - t1578;
t72 = t178 * t879 + t431 * t778 - t444 * t610 - t455 * t774 + t973;
t71 = -t179 * t879 - t429 * t778 + t445 * t610 - t455 * t775 + t952;
t57 = t178 * t775 + t179 * t774 + t429 * t444 - t431 * t445 + t1040;
t1 = [-m(4) * (g(1) * t1564 + g(2) * t269) + (t71 * t1564 + t149 * (-t179 + t974) + t72 * t269 + t150 * (t1001 + t178)) * t1105 + t1282 / 0.2e1 + t544 * t1552 + t775 * t1554 + (t1145 * t1568 - t1460 * t867 + t1546 * t868 + t1487) * t774 * t1337 + t1280 / 0.2e1 + (-t1203 * t775 + t427 * t879 - t118 + t988) * t119 * t1104 + ((t1475 * t591 + t1478 * t771 + t1481 * t590 + t1411 - t1412) * t543 + t1519 + t1608) * t1363 + t1515 * t1359 + t1516 * t1362 + t1503 * t1345 + t1504 * t1348 + (t128 + t153) * t1073 + ((t1475 * t587 + t1478 * t767 - t1481 * t588 + t1410 + t1413) * t543 + t1585) * t1360 + (t1587 - t73 + t958) * t74 * t1102 + (t58 - t1586 - t958) * t1582 * t1100 + (t127 + t154 + t99) * t1072 + t1405 * t1369 + t1404 * t1370 + t1485 * t1364 + t1484 * t1365 + t1278 / 0.2e1 - t989 * t1341 - m(6) * (g(1) * (t959 - t255) + g(2) * t144) + (-t1475 * t759 + t1478 * t868 - t1481 * t758 + t1409) * t543 * t1354 + ((t904 ^ 2 + t905 ^ 2) * qJDD(1) + g(1) * t904 - g(2) * t905) * m(2) + ((t1568 * t990 + t1490 + t1491 + t1580) * t774 + t1579) * t1346 + ((t1441 * t767 - t1442 * t766 + t1274 + t1275) * t879 - (-t1276 + t1277 + t1580) * t775 + (t1452 * t767 - t1458 * t766 - t1460 * t770 + t1546 * t771 + t1568 * t992 + t1488 + t348 + t349) * t774 + t1507) * t1349 + t1279 / 0.2e1 + t1281 / 0.2e1 + t1315 / 0.2e1 + (t13 * (t1333 * t767 + t1557 + t975) + t58 * (t1333 * t395 - t1556 + t954) + t12 * t124 - t1582 * (t950 + t1256)) * t1099 + t1310 / 0.2e1 - m(7) * (g(1) * (t959 + t1240) + g(2) * t124) + (t17 * (t1332 * t767 + t1062 + t975) + t73 * (t1332 * t395 + t1063 + t954) + t18 * t144 + t74 * (t950 + t115)) * t1101 + (t38 * (t1334 * t767 + t1006 + t1064) + t118 * (t1334 * t395 + t1065 + t960) + t39 * t202 + t119 * (t957 + t176)) * t1103 + t1283 / 0.2e1 + t1313 / 0.2e1 + (t275 + ((t223 + t1543) * t938 + (t224 + (t1272 - t1273) * t935 - t225 + t1206) * t939) * t1186) * t1071 + t1311 / 0.2e1 - m(5) * (g(1) * (t977 + t427) + g(2) * t202) + t1238 - t1316 / 0.2e1 + t1317 / 0.2e1 - t1318 / 0.2e1 + t1321 / 0.2e1 - t1322 / 0.2e1 + t1319 / 0.2e1 - t1320 / 0.2e1 + Icges(2,3) * qJDD(1) + t1535 + t1536 + (((t1206 + t1532) * t938 - t1543 * t939 + ((t1272 + t1273) * t938 + t612 * t939 ^ 2) * t935 + t1053) * t1186 + t98 + t1578) * t1074 + t327 * t1342 + t1312 / 0.2e1 - m(3) * (g(1) * t1545 + g(2) * t557) + (t151 * t1545 + t354 * ((-t934 + (-rSges(3,3) - pkin(8)) * t1259) * qJD(1) + t1066) + t152 * t557 + t355 * (t1069 + t371)) * t1107; (t149 * (-t533 * t879 - t772 * t775 + (-t1260 * t429 - t610 * t991) * qJD(3) + t1017) + t150 * (t534 * t879 - t772 * t774 + (t1260 * t431 - t610 * t875) * qJD(3) + t1039) + t143 * (t533 * t774 + t534 * t775 + (t429 * t875 + t431 * t991) * qJD(3) + t1201)) * t1106 - m(5) * (g(1) * (t1045 + t536) + g(2) * (t1046 + t535) + g(3) * (t773 + t1088)) + t657 * t1552 + t1181 * t1554 + ((t1521 * t939 - t1520 * t938 + (t1408 * t939 + t1409 * t938) * qJD(1)) * t935 + t1510 * t1304) * t1353 + ((t1523 * t939 - t1522 * t938 + (t1412 * t939 + t1413 * t938) * qJD(1)) * t935 + t1515 * t1304) * t1359 + ((t1525 * t939 - t1524 * t938 + (t1410 * t939 + t1411 * t938) * qJD(1)) * t935 + t1516 * t1304) * t1362 + ((t1512 * t939 - t1511 * t938 + (t1489 * t939 + t1490 * t938) * qJD(1)) * t935 + t1503 * t1304) * t1345 + ((t1514 * t939 - t1513 * t938 + (t1488 * t938 + t1491 * t939) * qJD(1)) * t935 + t1504 * t1304) * t1348 - t1517 * t818 / 0.2e1 - t1519 * t656 / 0.2e1 + ((t1412 * t938 - t1413 * t939) * t935 + t1405 * t1304) * t1369 - t1505 * t1131 / 0.2e1 + t1507 * t1182 / 0.2e1 + ((t1509 * t939 - t1508 * t938 + (t1486 * t939 + t1487 * t938) * qJD(1)) * t935 + t1492 * t1304) * t1336 + ((t1410 * t938 - t1411 * t939) * t935 + t1404 * t1304) * t1370 + ((t1408 * t938 - t1409 * t939) * t935 + t1403 * t1304) * t1366 + ((t1489 * t938 - t1490 * t939) * t935 + t1485 * t1304) * t1364 + ((-t1488 * t939 + t1491 * t938) * t935 + t1484 * t1304) * t1365 + ((t1486 * t938 - t1487 * t939) * t935 + t1483 * t1304) * t1344 + (t1061 * t1186 + t153 * t925 + t225 * t833 + t226 * t832 + t327 * t918 + t1423) * t1259 / 0.2e1 + (t1054 * t1186 + t1238 + t1278 + t1279 + t1421) * t1304 / 0.2e1 - (t1060 * t1186 + t154 * t925 + t223 * t833 + t224 * t832 - t918 * t989 + t1422) * t1258 / 0.2e1 + (-t1304 * t989 + t1021) * t1341 + ((t99 + t1419) * t939 + (t98 + t1420) * t938) * qJD(1) * t935 / 0.2e1 + (t58 * (qJD(6) * t651 - t1204 * t544 + t1222 * t656 + t1231 * t699 + t1240 * t818 + t946) - t1582 * (qJD(6) * t649 - t1204 * t543 - t1222 * t657 + t1230 * t699 + t1239 * t818 + t948) + t44 * (qJD(6) * t788 + t1230 * t544 - t1231 * t543 - t1239 * t656 - t1240 * t657 + t953)) * t1100 + (t972 * t1388 + t956 * t1380 + t1159 * t1389 + t1165 * t1379 + t1036 * t1390 + t982 * t1381 + ((t1057 * t1388 + t1058 * t1380 + t1239 * t1390 + t1256 * t1381 + (-t1057 * t1582 - t1407) * t1168) * t939 + (t1057 * t1389 + t1058 * t1379 - 0.2e1 * t1123 + 0.2e1 * t1113 + (t1112 + t44 * (-t696 + t1094)) * t1168) * t938) * t935 + t1414 * t1304) * t1371 + (t1404 * t818 + (t1148 * t1462 + t1443 * t591 + t1444 * t771 + t1445 * t590 + t1461 * t652 + t1463 * t651) * t699 + t1410 * t657 + t1411 * t656 - (t1148 * t1479 + t1469 * t591 + t1471 * t771 + t1473 * t590 + t1476 * t652 + t1482 * t651) * t544 + (t1148 * t1477 + t1468 * t591 + t1470 * t771 + t1472 * t590 + t1474 * t652 + t1480 * t651) * t543) * t1363 + (t1403 * t818 + (t1049 * t1462 - t1443 * t759 + t1444 * t868 - t1445 * t758 + t1461 * t789 + t1463 * t788) * t699 + t1408 * t657 + t1409 * t656 - (t1049 * t1479 - t1469 * t759 + t1471 * t868 - t1473 * t758 + t1476 * t789 + t1482 * t788) * t544 + (t1049 * t1477 - t1468 * t759 + t1470 * t868 - t1472 * t758 + t1474 * t789 + t1480 * t788) * t543) * t1354 + (t73 * (-t255 * t818 - t323 * t699 + t404 * t656 - t544 * t547 + t946) + t74 * (t259 * t818 + t325 * t699 - t404 * t657 - t543 * t547 + t948) + t68 * (t255 * t657 - t259 * t656 + t323 * t543 + t325 * t544 + t953)) * t1102 + (t1405 * t818 + (t1151 * t1462 + t1443 * t587 + t1444 * t767 - t1445 * t588 + t1461 * t650 + t1463 * t649) * t699 + t1412 * t657 + t1413 * t656 - (t1151 * t1479 + t1469 * t587 + t1471 * t767 - t1473 * t588 + t1476 * t650 + t1482 * t649) * t544 + (t1151 * t1477 + t1468 * t587 + t1470 * t767 - t1472 * t588 + t1474 * t650 + t1480 * t649) * t543) * t1360 + ((t1260 * t163 - t141 * t991 + t142 * t875) * qJD(3) - t941 * t992 + t138 * t1181 - t137 * t1182 + t161 * t1131 + (t1438 * t771 + t1439 * t770 + t1440 * t875 - t992 * t993) * t879 - (t1447 * t771 + t1449 * t770 + t1568 * t875 - t992 * t995) * t775 + (t1446 * t771 + t1448 * t770 + t1455 * t875 - t992 * t994) * t774) * t1349 + ((t1260 * t162 - t139 * t991 + t140 * t875) * qJD(3) - t941 * t990 + t136 * t1181 - t135 * t1182 + t160 * t1131 + (t1438 * t767 + t1439 * t766 - t1440 * t991 - t990 * t993) * t879 - (t1447 * t767 + t1449 * t766 - t1568 * t991 - t990 * t995) * t775 + (t1446 * t767 + t1448 * t766 - t1455 * t991 - t990 * t994) * t774) * t1346 + (t1483 * t1131 + ((t1440 * t937 + (-t760 - t765) * t1331 - t1441 * t1083 + t1442 * t1082) * t935 + t1438 * t868 + t1439 * t867) * t879 - ((t1568 * t937 + (-t521 - t531) * t1331 - t1546 * t1083 + t1460 * t1082) * t935 + t1447 * t868 + t1449 * t867) * t775 + ((t1455 * t937 + (-t522 - t532) * t1331 - t1452 * t1083 + t1458 * t1082) * t935 + t1446 * t868 + t1448 * t867) * t774 + (t1486 * t875 - t1487 * t991) * qJD(3)) * t1337 - t925 * (t1304 * t869 * t925 + ((t1192 * t937 + t1331 * t870 + t1136) * t925 + (t685 * t1111 - t684 * t1110 + ((t1331 * t687 + t689 * t937 + t1031) * t938 - (t1331 * t686 + t688 * t937 + t1032) * t939) * t935) * qJD(2)) * t935) / 0.2e1 + ((-t1304 * t255 + t972) * t1386 + (-t117 * t1304 + t956) * t1377 + (t1304 * t259 + t1159) * t1385 + (t115 * t1304 + t1165) * t1376 + t1036 * t1387 + t982 * t1378 + ((t1091 * t1386 + t1095 * t1377 + t259 * t1387 + t115 * t1378 + (t1091 * t74 + t255 * t68) * t1168) * t939 + (t1091 * t1385 + t1095 * t1376 + 0.2e1 * t1323 + 0.2e1 * t1314 + (t73 * t404 + t68 * (-t259 - t596 + t1207)) * t1168) * t938) * t935) * t1372 - m(6) * (g(1) * (t1015 + t325) + g(2) * (t1016 + t323) + g(3) * (t1035 + t547)) - m(5) * ((-t773 * t775 + t1017 + (-t535 - t653) * t879 + t1392) * t1374 + (t536 * t879 + t987 + (-t773 - t793) * t774) * t1373 + (t535 * t774 + t1056 - (-t536 - t654) * t775) * t1375 + 0.2e1 * (t118 * (t1221 * t1260 - t609 * t991) + t119 * (-t1203 * t875 + t1260 * t428) + t91 * (-t1220 * t991 - t427 * t875)) * qJD(3)) / 0.2e1 + m(5) * ((t1304 * t427 + t1000) * t1383 + (-t1304 * t177 + t979) * t1374 + (t1304 * t428 + t1214) * t1382 + (t1304 * t176 + t1252) * t1373 + t1090 * t1384 + t1038 * t1375 + ((t1158 * t1383 + t1161 * t1374 + t428 * t1384 + t176 * t1375 + (t1158 * t119 - t427 * t91) * t1168) * t939 + (t1158 * t1382 + t1161 * t1373 - t427 * t1384 + t177 * t1375 + (t118 * t609 + t91 * (-t428 + t1207)) * t1168) * t938) * t935) / 0.2e1 - (t354 * (-t690 * t925 - t876 * t917) + t355 * (t691 * t925 - t876 * t916) + t328 * (t690 * t938 + t691 * t939) * t1186) * t1175 / 0.2e1 - m(4) * (g(1) * (t534 + t695) + g(2) * (t533 + t692) + g(3) * (t772 + t878)) - m(7) * (g(1) * (t1015 + t1230) + g(2) * (t1016 - t1231) + g(3) * (t1035 + t1204)) + t925 * (t264 * t1304 + ((t234 * t938 + t235 * t939) * qJD(1) + t1054) * t935) / 0.2e1 + t918 * (t424 * t1304 + (-t234 * t939 + t235 * t938) * t935) / 0.2e1 + (t154 * t1304 + ((t223 * t938 + t224 * t939) * qJD(1) + t1060) * t935) * t1072 + (t153 * t1304 + (qJD(1) * t1053 + t1061) * t935) * t1073 + (t151 * (-t1258 * t801 - t1304 * t633) + t354 * (-t1304 * t372 + (t1188 * t801 - t822 * t939) * t935) + t152 * (-t1259 * t801 + t1304 * t635) + t355 * (t1304 * t371 + (-t1187 * t801 - t822 * t938) * t935) + (t1052 * t1186 + t633 * t832 - t635 * t833) * t1022 + t328 * ((t633 * t939 - t635 * t938) * qJD(1) + t1052) * t935) * t1107 + ((-t1191 * t992 + t1192 * t875 + t1259 * t869) * t925 + (-t1050 * t1259 + t875 * t998 - t992 * t997) * t1186) * t1074 - m(3) * (g(1) * t691 + g(2) * t690 + g(3) * t876) + (t1304 * t327 + t1020) * t1342 + (t71 * (t1098 * t935 - t1304 * t429 + t1109) + t149 * (-t1304 * t179 + (t1188 * t610 + t1217 * t939) * t935 + t1059) + t72 * (t1202 * t1259 + t1304 * t431 + t658) + t150 * (t1304 * t178 + t405 + (qJD(1) * t1098 + t1217 * t938) * t935) + t57 * ((t429 * t938 + t431 * t939) * t935 + t1198) + t143 * ((t178 * t939 + t179 * t938 + (t429 * t939 + (-t431 - t696) * t938) * qJD(1)) * t935 + t1162)) * t1105 + ((-t1191 * t990 - t1192 * t991 - t1258 * t869) * t925 + (t1050 * t1258 - t990 * t997 - t991 * t998) * t1186) * t1071; (t118 * (t1211 * t879 - t680 * t775 + t1213) + t119 * (t1197 * t774 + t503 * t879 + t1218) + t91 * (-t1209 * t775 + t498 * t774 + t1234)) * t1104 + (t149 * (-t500 * t879 - t682 * t775) + t150 * (t505 * t879 - t682 * t774) + t143 * (t500 * t774 + t505 * t775)) * t1106 + t1178 * t1553 + ((t1185 * t1403 - t1331 * t1510) * t935 + t1520 * t992 + t1521 * t990 + t1409 * t678 - t1408 * t676) * t1353 + ((t1185 * t1405 - t1331 * t1515) * t935 + t1522 * t992 + t1523 * t990 + t1413 * t678 - t1412 * t676) * t1359 + ((t1185 * t1404 - t1331 * t1516) * t935 + t1524 * t992 + t1525 * t990 + t1411 * t678 - t1410 * t676) * t1362 + ((t1185 * t1485 - t1331 * t1503) * t935 + t1511 * t992 + t1512 * t990 + t1490 * t678 - t1489 * t676) * t1345 + ((t1185 * t1484 - t1331 * t1504) * t935 + t1513 * t992 + t1514 * t990 + t1488 * t678 - t1491 * t676) * t1348 + (-t1145 * t1405 - t1412 * t992 - t1413 * t990) * t1369 + ((t1185 * t1483 - t1331 * t1492) * t935 + t1508 * t992 + t1509 * t990 + t1487 * t678 - t1486 * t676) * t1336 + (-t1145 * t1404 - t1410 * t992 - t1411 * t990) * t1370 + (-t1145 * t1403 - t1408 * t992 - t1409 * t990) * t1366 + (-t1145 * t1485 - t1489 * t992 - t1490 * t990) * t1364 + (-t1145 * t1484 - t1488 * t990 - t1491 * t992) * t1365 + (-t1145 * t1483 - t1486 * t992 - t1487 * t990) * t1344 + (t1427 * t990 + t1435 * t767 + t1436 * t766) * t1346 + (t1427 * t992 + t1435 * t771 + t1436 * t770) * t1349 - m(7) * (g(1) * (-t754 - t1326 + t1430) + g(2) * (-t751 - t1327 + t1429) + g(3) * (-t841 - t1325 + t1431) + (g(1) * t771 + g(2) * t767 + g(3) * t868) * (-rSges(7,3) * t1329 + qJ(4) - t1135)) - t1423 * t992 / 0.2e1 - t1421 * t1145 / 0.2e1 - t1422 * t990 / 0.2e1 - t1419 * t676 / 0.2e1 + t1420 * t678 / 0.2e1 + (t1145 * t1427 + t1435 * t868 + t1436 * t867) * t1337 - m(7) * ((-t1124 * t771 - t1400 * t544 - t1402 * t699 + t984) * t1380 + (-t1124 * t767 - t1400 * t543 + t1401 * t699 + t985) * t1379 + (-t1124 * t868 + t1401 * t544 + t1402 * t543 + t986) * t1381 + 0.2e1 * ((-t1240 * t58 + t1406) * t867 + (-t1222 * t1582 + t1407) * t770 + (t1239 * t44 - t1112) * t766) * qJD(5)) / 0.2e1 + (t1089 * t1388 + t1037 * t1380 + t1216 * t1379 + t1219 * t1390 + t1097 * t1381 + 0.2e1 * (t1094 * t44 + t1112) * t678 + 0.2e1 * (-t1092 * t1582 + t1407) * t676 - 0.2e1 * (t13 * t1222 + t58 * t1250 + t7 * t1094 + t44 * (t1251 - t1256)) * t990 - (-t1092 * t12 - t1096 * t1582 + t1113 - t1123) * t1169 + (t1013 * t1389 + t1014 * t1379 + 0.2e1 * (t58 * (t1210 + t1240) - t1406) * t1185 - t1414 * t1331) * t935) * t1371 - m(6) * (g(1) * (t346 + t504 - t1326) + g(2) * (t344 + t499 - t1327) + g(3) * (t520 + t681 - t1325)) - m(4) * (g(1) * t505 + g(2) * t500 + g(3) * t682) + (t1505 + t1517) * t937 * t1119 - m(5) * (-g(1) * t1209 - g(2) * t1211 - g(3) * t1197) + (t38 * (-t1145 * t427 - t609 * t990 + t1215) + t118 * (-t990 * t454 + t678 * t609 + (t1185 * t1221 + t1331 * t177) * t935 + t1166) + t39 * ((-t1331 * t428 - t1137) * t935 + t1203 * t992) + t119 * (t456 - t1228 * t992 + t1203 * t676 + (t1185 * t428 - t1331 * t176 - t1138) * t935) + t31 * (-t1220 * t990 + t427 * t992 - t433) + t91 * (t1220 * t678 - t1253 * t990 - t177 * t992 + t427 * t676 + t1254)) * t1103 + (t1437 * t771 + (t1450 * t591 + t1451 * t590 - t1462 * t770) * t699 - (t1465 * t591 + t1467 * t590 - t1479 * t770) * t544 + (t1464 * t591 + t1466 * t590 - t1477 * t770) * t543 + (-t1404 * t867 - t1410 * t770 - t1411 * t766) * qJD(5)) * t1363 + (t1437 * t868 + (-t1450 * t759 - t1451 * t758 - t1462 * t867) * t699 - (-t1465 * t759 - t1467 * t758 - t1479 * t867) * t544 + (-t1464 * t759 - t1466 * t758 - t1477 * t867) * t543 + (-t1403 * t867 - t1408 * t770 - t1409 * t766) * qJD(5)) * t1354 + (t73 * (-t344 * t699 - t520 * t544 + (t255 * t867 - t404 * t766) * qJD(5) + t984) + t74 * (t346 * t699 - t520 * t543 + (-t259 * t867 + t404 * t770) * qJD(5) + t985) + t68 * (t344 * t543 + t346 * t544 + (-t255 * t770 + t259 * t766) * qJD(5) + t986)) * t1102 + (t1437 * t767 + (t1450 * t587 - t1451 * t588 - t1462 * t766) * t699 - (t1465 * t587 - t1467 * t588 - t1479 * t766) * t544 + (t1464 * t587 - t1466 * t588 - t1477 * t766) * t543 + (-t1405 * t867 - t1412 * t770 - t1413 * t766) * qJD(5)) * t1360 + (t1518 * t770 + t1519 * t766) * qJD(5) / 0.2e1 + ((-t404 * t990 + t1089) * t1386 + (-t211 * t990 + t404 * t678 + t1037) * t1377 + (t1428 * t676 + t1216) * t1376 + (-t1393 * t990 + t1219) * t1387 + (-t255 * t676 + t1097 - (-t115 + t1251) * t990 + t1393 * t678) * t1378 - (t1164 * t74 - t1428 * t18 + t1314 + t1323) * t1169 + 0.2e1 * (t18 * t1013 + t74 * t1014 + (-t115 * t74 + t117 * t73 + t17 * t255 - t18 * t259) * t1331 + (t73 * (-t255 + t1210) + t74 * t259) * t1185) * t935) * t1372 + (t71 * (t1145 * t429 - t610 * t990) + t149 * (-t990 * t455 + t678 * t610 + (-t1185 * t429 + t1331 * t179) * t935) + t72 * (-t1145 * t431 + t610 * t992) + t150 * (t992 * t455 + t676 * t610 + (t1185 * t431 - t1331 * t178) * t935) + t57 * (-t429 * t992 + t431 * t990) + t143 * (t178 * t990 - t179 * t992 - t429 * t676 - t431 * t678)) * t1105; (t12 * t766 + t1232 * t58 - t1233 * t1582 + t1237 * t44 + t13 * t770 + t7 * t867 - t432) * m(7) + (t1232 * t73 + t1233 * t74 + t1237 * t68 + t16 * t867 + t17 * t770 + t18 * t766 - t432) * m(6) + (t118 * t1232 + t119 * t1233 + t1237 * t91 + t31 * t867 + t38 * t770 + t39 * t766 - t432) * m(5); -m(7) * (g(1) * t1235 + g(2) * t1236 + g(3) * t1212) + (t58 * (qJD(6) * t591 - t1212 * t544 - t1236 * t699) - t1582 * (qJD(6) * t587 - t1212 * t543 + t1235 * t699) + t44 * (-qJD(6) * t759 + t1235 * t544 + t1236 * t543)) * t1100 + (t13 * (t1222 * t767 + t1240 * t868) + t58 * (t1222 * t395 + t1240 * t757 + t1250 * t767 - t1255 * t868) + t12 * (-t1222 * t771 + t1239 * t868) - t1582 * (-t1222 * t393 + t1239 * t757 - t1250 * t771 + t1256 * t868) + t7 * (-t1239 * t767 - t1240 * t771) + t44 * (-t1239 * t395 - t1240 * t393 + t1255 * t771 - t1256 * t767)) * t1099 + (t17 * (-t255 * t868 + t404 * t767) + t73 * (-t117 * t868 + t211 * t767 - t255 * t757 + t395 * t404) + t18 * (t259 * t868 - t404 * t771) + t74 * (t115 * t868 - t211 * t771 + t259 * t757 - t393 * t404) + t16 * (t255 * t771 - t259 * t767) + t68 * (-t115 * t767 + t117 * t771 + t255 * t393 - t259 * t395)) * t1101 + (t73 * (-t302 * t699 - t484 * t544) + t74 * (t307 * t699 - t484 * t543) + t68 * (t302 * t543 + t307 * t544)) * t1102 - m(6) * (g(1) * t307 + g(2) * t302 + g(3) * t484) + (t1404 * t868 + t1410 * t771 + t1411 * t767) * t1370 + (t1405 * t868 + t1412 * t771 + t1413 * t767) * t1369 + t1518 * t393 / 0.2e1 + t1519 * t395 / 0.2e1 + (t1403 * t868 + t1408 * t771 + t1409 * t767) * t1366 + (t1394 * t771 + t1397 * t591 + t1398 * t590) * t1363 + (t1404 * t757 + t1410 * t393 + t1411 * t395 + t1516 * t868 - t1524 * t771 - t1525 * t767) * t1362 + (t1394 * t767 + t1397 * t587 - t1398 * t588) * t1360 + (t1405 * t757 + t1412 * t393 + t1413 * t395 + t1515 * t868 - t1522 * t771 - t1523 * t767) * t1359 + (t1394 * t868 - t1397 * t759 - t1398 * t758) * t1354 + (t1403 * t757 + t1408 * t393 + t1409 * t395 + t1510 * t868 - t1520 * t771 - t1521 * t767) * t1353 + t757 * t1553 + t1529 * t767 / 0.2e1 + t1530 * t771 / 0.2e1 + t1528 * t868 / 0.2e1; ((g(3) - t7) * t758 + (-g(1) + t13) * t590 - (-t543 * t758 - t590 * t699 + t219) * t1582 - (t12 - g(2)) * t588 + (-t544 * t758 - t588 * t699 + t217) * t58 + (t543 * t588 - t544 * t590 + t441) * t44) * m(7);];
tau  = t1;
