% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP12_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:17
% EndTime: 2019-03-09 17:59:39
% DurationCPUTime: 8.16s
% Computational Cost: add. (8743->551), mult. (22398->712), div. (0->0), fcn. (16776->8), ass. (0->239)
t200 = sin(qJ(3));
t198 = sin(pkin(6));
t204 = cos(qJ(2));
t290 = qJD(1) * t204;
t269 = t198 * t290;
t252 = t200 * t269;
t287 = qJD(3) * t200;
t339 = t252 - t287;
t178 = -qJD(3) + t269;
t201 = sin(qJ(2));
t306 = cos(pkin(6));
t262 = t306 * qJD(1);
t249 = pkin(1) * t262;
t186 = t201 * t249;
t150 = pkin(8) * t269 + t186;
t351 = -pkin(3) * t339 - qJD(4) * t200 - t150;
t203 = cos(qJ(3));
t350 = -t351 + t178 * (pkin(10) * t200 - qJ(4) * t203);
t291 = qJD(1) * t198;
t273 = t201 * t291;
t147 = -pkin(8) * t273 + t204 * t249;
t224 = t198 * (pkin(2) * t201 - pkin(9) * t204);
t148 = qJD(1) * t224;
t260 = -t147 * t200 + t148 * t203;
t285 = qJD(3) * t203;
t299 = t203 * t204;
t332 = pkin(4) + pkin(9);
t333 = pkin(3) + pkin(10);
t349 = t332 * t285 - (pkin(4) * t299 - t201 * t333) * t291 + t260;
t340 = t203 * t269 - t285;
t230 = t262 + qJD(2);
t131 = t200 * t230 + t203 * t273;
t124 = qJD(5) + t131;
t199 = sin(qJ(5));
t259 = t124 * t199;
t202 = cos(qJ(5));
t216 = t203 * t230;
t280 = qJD(1) * qJD(2);
t266 = t198 * t280;
t248 = t204 * t266;
t302 = t198 * t201;
t276 = t200 * t302;
t250 = qJD(3) * t276;
t93 = qJD(1) * t250 - qJD(3) * t216 - t203 * t248;
t86 = t202 * t93;
t348 = -t124 * t259 - t86;
t109 = pkin(9) * t230 + t150;
t144 = (-pkin(2) * t204 - pkin(9) * t201 - pkin(1)) * t198;
t122 = qJD(1) * t144;
t72 = t109 * t200 - t122 * t203;
t298 = -qJD(4) - t72;
t297 = pkin(4) * t131 - t298;
t42 = t178 * t333 + t297;
t129 = t200 * t273 - t216;
t108 = -pkin(2) * t230 - t147;
t209 = -t131 * qJ(4) + t108;
t46 = t129 * t333 + t209;
t12 = t199 * t42 + t202 * t46;
t10 = qJ(6) * t124 + t12;
t289 = qJD(2) * t201;
t272 = t198 * t289;
t233 = t333 * t272;
t149 = qJD(2) * t224;
t139 = qJD(1) * t149;
t264 = t204 * t306;
t338 = pkin(1) * t264 - pkin(8) * t302;
t151 = t338 * qJD(2);
t140 = qJD(1) * t151;
t255 = t109 * t285 + t122 * t287 - t139 * t203 + t140 * t200;
t21 = -pkin(4) * t93 - qJD(1) * t233 + t255;
t281 = t131 * qJD(3);
t341 = t200 * t248 + t281;
t141 = pkin(8) * t248 + qJD(2) * t186;
t36 = pkin(3) * t341 + t93 * qJ(4) - t131 * qJD(4) + t141;
t24 = pkin(10) * t341 + t36;
t283 = qJD(5) * t202;
t284 = qJD(5) * t199;
t263 = t199 * t24 - t202 * t21 + t283 * t46 + t284 * t42;
t331 = pkin(5) * t93;
t2 = t263 + t331;
t347 = t10 * t124 - t2;
t308 = qJ(4) * t340 + t351;
t89 = -t129 * t202 - t178 * t199;
t318 = t124 * t89;
t181 = t201 * t266;
t47 = -t129 * t283 - t178 * t284 - t181 * t202 - t199 * t341;
t346 = t47 - t318;
t91 = t129 * t199 - t178 * t202;
t317 = t124 * t91;
t48 = qJD(5) * t91 + t181 * t199 - t202 * t341;
t345 = -t48 + t317;
t315 = t178 * t89;
t344 = t315 + t348;
t265 = -qJ(4) * t200 - pkin(2);
t158 = -t203 * t333 + t265;
t179 = t332 * t200;
t293 = t158 * t202 + t179 * t199;
t313 = t199 * t93;
t335 = t124 ^ 2;
t213 = -t202 * t335 + t313;
t314 = t178 * t91;
t343 = t213 + t314;
t342 = t158 * t284 - t179 * t283 - t199 * t349 + t202 * t350;
t156 = t200 * t306 + t203 * t302;
t301 = t198 * t204;
t254 = t306 * t201 * pkin(1);
t143 = pkin(8) * t301 + pkin(9) * t306 + t254;
t261 = -t143 * t200 + t144 * t203;
t77 = pkin(3) * t301 - t261;
t58 = pkin(4) * t156 + pkin(10) * t301 + t77;
t155 = -t203 * t306 + t276;
t142 = -pkin(2) * t306 - t338;
t210 = -qJ(4) * t156 + t142;
t65 = t155 * t333 + t210;
t236 = t199 * t58 + t202 * t65;
t268 = qJD(2) * t301;
t101 = -t250 + (qJD(3) * t306 + t268) * t203;
t227 = -t143 * t285 - t144 * t287 + t149 * t203 - t151 * t200;
t29 = pkin(4) * t101 - t227 - t233;
t100 = qJD(3) * t156 + t200 * t268;
t152 = pkin(8) * t268 + qJD(2) * t254;
t215 = -qJ(4) * t101 - qJD(4) * t156 + t152;
t35 = t100 * t333 + t215;
t337 = -qJD(5) * t236 - t199 * t35 + t202 * t29;
t336 = t91 ^ 2;
t334 = t131 ^ 2;
t206 = qJD(1) ^ 2;
t330 = pkin(9) * t200;
t168 = t178 * qJ(4);
t73 = t109 * t203 + t122 * t200;
t56 = -pkin(4) * t129 + t73;
t49 = -t168 + t56;
t17 = pkin(5) * t89 - qJ(6) * t91 + t49;
t329 = t17 * t91;
t173 = qJ(4) * t181;
t256 = t109 * t287 - t122 * t285 - t139 * t200 - t140 * t203;
t242 = qJD(4) * t178 + t256;
t34 = -t173 + t242;
t20 = -pkin(4) * t341 - t34;
t7 = pkin(5) * t48 + qJ(6) * t47 - qJD(6) * t91 + t20;
t328 = t199 * t7;
t327 = t202 * t7;
t193 = t203 * pkin(9);
t326 = t91 * t89;
t325 = qJ(6) * t340 - qJD(6) * t200 + t342;
t324 = -pkin(5) * t340 - qJD(5) * t293 + t350 * t199 + t349 * t202;
t116 = t199 * t273 - t202 * t252;
t300 = t200 * t204;
t117 = (t199 * t300 + t201 * t202) * t291;
t241 = pkin(5) * t202 + qJ(6) * t199;
t228 = -pkin(4) - t241;
t240 = -pkin(5) * t199 + qJ(6) * t202;
t294 = t147 * t203 + t148 * t200;
t80 = -qJ(4) * t273 - t294;
t71 = -pkin(4) * t252 - t80;
t323 = pkin(5) * t116 - qJ(6) * t117 + t71 - (qJD(5) * t240 + qJD(6) * t199) * t203 - (-pkin(9) + t228) * t287;
t305 = qJ(4) * t129;
t69 = t131 * t333 + t305;
t322 = t199 * t56 + t202 * t69;
t320 = qJ(6) * t93;
t64 = t129 * pkin(3) + t209;
t316 = t131 * t64;
t312 = t20 * t202;
t311 = t202 * t47;
t310 = t333 * t93;
t88 = t93 * t200;
t309 = qJD(5) * t241 - qJD(6) * t202 - t131 * t228 - t298;
t307 = -t287 * t332 - t71;
t304 = t131 * t129;
t195 = t198 ^ 2;
t303 = t195 * t206;
t11 = -t199 * t46 + t202 * t42;
t296 = qJD(6) - t11;
t295 = t143 * t203 + t144 * t200;
t180 = pkin(4) * t203 + t193;
t292 = t201 ^ 2 - t204 ^ 2;
t288 = qJD(2) * t203;
t286 = qJD(3) * t202;
t282 = qJD(5) * t333;
t279 = t178 * t330;
t278 = pkin(9) * t288;
t277 = t201 * t303;
t275 = t202 * t301;
t271 = t178 * t285;
t270 = t202 * t282;
t267 = t195 * t280;
t257 = 0.2e1 * t267;
t247 = -0.2e1 * pkin(1) * t267;
t245 = t200 * t286 + t116;
t244 = t199 * t287 - t117;
t9 = -pkin(5) * t124 + t296;
t243 = t10 * t202 + t199 * t9;
t237 = -t199 * t65 + t202 * t58;
t234 = pkin(3) * t181;
t37 = -t234 + t255;
t235 = t37 * t200 - t34 * t203;
t232 = -t158 * t199 + t179 * t202;
t229 = 0.2e1 * t262 + qJD(2);
t76 = qJ(4) * t301 - t295;
t225 = t12 * t124 - t263;
t102 = t155 * t202 + t199 * t301;
t3 = t199 * t21 + t202 * t24 + t283 * t42 - t284 * t46;
t223 = t199 * t29 + t202 * t35 + t283 * t58 - t284 * t65;
t222 = -t178 * t73 - t255;
t221 = t178 * t203;
t220 = t124 * t17 + t310;
t218 = -t143 * t287 + t144 * t285 + t149 * t200 + t151 * t203;
t66 = -pkin(4) * t155 - t76;
t212 = -t129 * t178 - t93;
t211 = pkin(9) * t271 - t181 * t330;
t41 = -qJ(4) * t272 + qJD(4) * t301 - t218;
t30 = -pkin(4) * t100 - t41;
t172 = -pkin(3) * t203 + t265;
t170 = qJ(4) - t240;
t123 = t203 * t241 + t180;
t103 = -t155 * t199 + t275;
t95 = -pkin(5) * t200 - t232;
t94 = qJ(6) * t200 + t293;
t83 = pkin(3) * t131 + t305;
t82 = -pkin(3) * t273 - t260;
t79 = t93 * t156;
t75 = pkin(3) * t155 + t210;
t70 = t168 - t73;
t68 = pkin(3) * t178 - t298;
t62 = qJD(5) * t102 + t100 * t199 + t202 * t272;
t61 = -qJD(5) * t275 - t100 * t202 + (qJD(5) * t155 + t272) * t199;
t54 = pkin(5) * t91 + qJ(6) * t89;
t45 = pkin(3) * t100 + t215;
t44 = -pkin(3) * t272 - t227;
t31 = -pkin(5) * t102 + qJ(6) * t103 + t66;
t16 = -pkin(5) * t156 - t237;
t15 = qJ(6) * t156 + t236;
t14 = pkin(5) * t129 + t199 * t69 - t202 * t56;
t13 = -qJ(6) * t129 + t322;
t8 = pkin(5) * t61 - qJ(6) * t62 + qJD(6) * t103 + t30;
t6 = -pkin(5) * t101 - t337;
t5 = qJ(6) * t101 + qJD(6) * t156 + t223;
t1 = qJD(6) * t124 + t3 - t320;
t4 = [0, 0, 0, t201 * t204 * t257, -t292 * t257, t229 * t268, -t229 * t272, 0, -t141 * t306 - t152 * t230 + t201 * t247, -t140 * t306 - t151 * t230 + t204 * t247, t101 * t131 - t79, -t131 * t100 - t101 * t129 + t93 * t155 - t156 * t341, -t101 * t178 + (t204 * t93 + (qJD(1) * t156 + t131) * t289) * t198, t100 * t178 - t129 * t272 - t155 * t181 + t301 * t341 (-t178 * t198 - t195 * t290) * t289, t108 * t100 + t152 * t129 + t141 * t155 + t142 * t341 - t178 * t227 + t181 * t261 + t255 * t301 - t272 * t72, t218 * t178 + t152 * t131 - t142 * t93 + t141 * t156 + t108 * t101 + (-t256 * t204 + (-qJD(1) * t295 - t73) * t289) * t198, t70 * t100 + t68 * t101 + t41 * t129 + t44 * t131 + t34 * t155 + t37 * t156 + t341 * t76 - t77 * t93, -t64 * t100 - t45 * t129 - t36 * t155 - t44 * t178 + t181 * t77 + t272 * t68 - t301 * t37 - t341 * t75, -t101 * t64 - t131 * t45 - t156 * t36 + t178 * t41 + t75 * t93 + (t204 * t34 + (-qJD(1) * t76 - t70) * t289) * t198, t34 * t76 + t36 * t75 + t37 * t77 + t41 * t70 + t44 * t68 + t45 * t64, t103 * t47 + t62 * t91, -t102 * t47 + t103 * t48 - t61 * t91 - t62 * t89, t101 * t91 + t103 * t93 + t124 * t62 - t156 * t47, -t101 * t89 - t102 * t93 - t124 * t61 - t156 * t48, t101 * t124 - t79, t11 * t101 - t20 * t102 + t124 * t337 - t156 * t263 - t237 * t93 + t30 * t89 + t66 * t48 + t49 * t61, -t101 * t12 - t103 * t20 - t124 * t223 - t156 * t3 + t236 * t93 + t30 * t91 - t47 * t66 + t49 * t62, -t101 * t9 - t102 * t7 - t124 * t6 - t156 * t2 + t16 * t93 + t17 * t61 + t31 * t48 + t8 * t89, t1 * t102 - t10 * t61 - t103 * t2 - t15 * t48 - t16 * t47 - t5 * t89 + t6 * t91 + t62 * t9, t1 * t156 + t10 * t101 + t103 * t7 + t124 * t5 - t15 * t93 - t17 * t62 + t31 * t47 - t8 * t91, t1 * t15 + t10 * t5 + t16 * t2 + t17 * t8 + t31 * t7 + t6 * t9; 0, 0, 0, -t204 * t277, t292 * t303, -t198 * t206 * t264, t230 * t273 - t181, 0, pkin(1) * t277 + t150 * t230 - t141, pkin(8) * t181 + t147 * t230 + (-qJD(2) * t262 + t303) * t204 * pkin(1), -t131 * t221 - t88, t131 * t252 - t93 * t203 + (-t341 - t281) * t200 + t340 * t129, -t271 + (t178 * t299 + (qJD(2) * t200 - t131) * t201) * t291, t178 * t287 + (-t178 * t300 + (t129 + t288) * t201) * t291, t178 * t273, -pkin(2) * t341 - t108 * t339 - t150 * t129 - t141 * t203 + t178 * t260 + t273 * t72 + t211, pkin(2) * t93 + t141 * t200 - t294 * t178 - t150 * t131 + (t108 * t203 - t279) * qJD(3) + (-t108 * t299 + (t73 - t278) * t201) * t291, -t80 * t129 - t82 * t131 + t235 - t339 * t70 - t340 * t68 + (-t341 + t281) * t193 + (t129 * t287 - t88) * pkin(9), -t129 * t308 - t172 * t341 + t82 * t178 + t36 * t203 - t273 * t68 + t339 * t64 - t211, t172 * t93 - t178 * t80 - t200 * t36 - t308 * t131 + (-t203 * t64 + t279) * qJD(3) + (t64 * t299 + (t70 + t278) * t201) * t291, t172 * t36 - t68 * t82 - t70 * t80 + t308 * t64 + ((t200 * t70 + t203 * t68) * qJD(3) + t235) * pkin(9), t199 * t203 * t47 + (-t203 * t283 + t244) * t91, t116 * t91 + t117 * t89 + (-t199 * t89 + t202 * t91) * t287 + (t199 * t48 + t311 + (t199 * t91 + t202 * t89) * qJD(5)) * t203, -t200 * t47 + t244 * t124 + (-t124 * t283 + t313 - t314) * t203, -t200 * t48 + t245 * t124 + (t124 * t284 + t315 + t86) * t203, -t124 * t221 - t88, -t232 * t93 + t180 * t48 - t49 * t116 + t307 * t89 + (-t286 * t49 - t263) * t200 + ((-qJD(5) * t158 + t349) * t202 + (-qJD(5) * t179 + t350) * t199) * t124 + (-t11 * t178 - t284 * t49 + t312) * t203, t293 * t93 - t180 * t47 - t49 * t117 + t307 * t91 + (qJD(3) * t199 * t49 - t3) * t200 + t342 * t124 + (t12 * t178 - t20 * t199 - t283 * t49) * t203, t123 * t48 - t2 * t200 + t93 * t95 - t323 * t89 - t245 * t17 + t324 * t124 + (-t17 * t284 + t178 * t9 + t327) * t203, t10 * t116 - t117 * t9 - t47 * t95 - t48 * t94 - t324 * t91 + t325 * t89 + t243 * t287 + (-t1 * t202 - t199 * t2 + (t10 * t199 - t202 * t9) * qJD(5)) * t203, t1 * t200 + t123 * t47 - t93 * t94 + t323 * t91 - t244 * t17 - t325 * t124 + (-t10 * t178 + t17 * t283 + t328) * t203, t1 * t94 - t10 * t325 + t123 * t7 - t17 * t323 + t2 * t95 - t324 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t304, -t129 ^ 2 + t334, t212, -t131 * t178 - t341, t181, -t108 * t131 + t222, t108 * t129 + t178 * t72 + t256, pkin(3) * t93 - qJ(4) * t341 + (-t70 - t73) * t131 + (t68 + t298) * t129, t129 * t83 - t222 - 0.2e1 * t234 + t316, -t129 * t64 + t131 * t83 + t178 * t298 + 0.2e1 * t173 - t242, -pkin(3) * t37 - qJ(4) * t34 + t298 * t70 - t64 * t83 - t68 * t73, -t259 * t91 - t311 (-t48 - t317) * t202 + (t47 + t318) * t199, t129 * t91 + t348, -t129 * t89 + t213, t124 * t129, qJ(4) * t48 + t11 * t129 + t297 * t89 + (t20 + (t69 + t282) * t124) * t199 + (t310 + (t49 - t56) * t124) * t202, -qJ(4) * t47 - t12 * t129 + t312 + t297 * t91 + (t270 + t322) * t124 + (-t124 * t49 - t310) * t199, -t129 * t9 + t170 * t48 + t328 + t309 * t89 + (t199 * t282 + t14) * t124 + t220 * t202, t13 * t89 - t14 * t91 + (-t10 * t131 - t333 * t47 + t2 + (t333 * t89 - t10) * qJD(5)) * t202 + (-t131 * t9 + t333 * t48 - t1 + (-t333 * t91 - t9) * qJD(5)) * t199, t10 * t129 + t170 * t47 - t327 - t309 * t91 + (-t13 - t270) * t124 + t220 * t199, -t10 * t13 - t14 * t9 + t170 * t7 + t309 * t17 - (qJD(5) * t243 + t1 * t199 - t2 * t202) * t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, t181 - t304, -t178 ^ 2 - t334, -t178 * t70 + t316 + t37, 0, 0, 0, 0, 0, t344, t343, t344, t199 * t345 + t202 * t346, -t343, t17 * t178 + t347 * t202 + (t124 * t9 + t1) * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, -t89 ^ 2 + t336, -t346, t345, -t93, -t49 * t91 + t225, t11 * t124 + t49 * t89 - t3, -t54 * t89 + t225 - t329 - 0.2e1 * t331, pkin(5) * t47 - qJ(6) * t48 + (t10 - t12) * t91 + (t9 - t296) * t89, -0.2e1 * t320 - t17 * t89 + t54 * t91 + (0.2e1 * qJD(6) - t11) * t124 + t3, -pkin(5) * t2 + qJ(6) * t1 + t10 * t296 - t12 * t9 - t17 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93 + t326, -t346, -t335 - t336, t329 - t347;];
tauc_reg  = t4;
