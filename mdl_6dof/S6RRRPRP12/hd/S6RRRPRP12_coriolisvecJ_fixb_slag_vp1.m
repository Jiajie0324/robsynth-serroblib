% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRP12_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:51:43
% EndTime: 2019-03-09 17:57:07
% DurationCPUTime: 299.14s
% Computational Cost: add. (84730->2052), mult. (230139->2688), div. (0->0), fcn. (261310->10), ass. (0->820)
t1430 = Icges(6,4) - Icges(7,5);
t1434 = Icges(4,1) + Icges(5,2);
t1433 = Icges(6,1) + Icges(7,1);
t1432 = -Icges(4,4) - Icges(5,6);
t1431 = Icges(5,4) - Icges(4,5);
t1408 = Icges(7,4) + Icges(6,5);
t1429 = Icges(5,5) - Icges(4,6);
t1428 = Icges(4,2) + Icges(5,3);
t1427 = Icges(6,2) + Icges(7,3);
t1426 = Icges(7,2) + Icges(6,3);
t1407 = Icges(6,6) - Icges(7,6);
t1192 = sin(qJ(3));
t809 = sin(pkin(6));
t1022 = t809 * t1192;
t811 = sin(qJ(2));
t1167 = cos(pkin(6));
t1194 = cos(qJ(3));
t944 = t1167 * t1194;
t759 = t1022 * t811 - t944;
t810 = sin(qJ(5));
t1195 = cos(qJ(2));
t1024 = t809 * t1195;
t1193 = cos(qJ(5));
t926 = t1193 * t1024;
t698 = -t759 * t810 + t926;
t1467 = t1430 * t698;
t697 = t1024 * t810 + t1193 * t759;
t1466 = t1430 * t697;
t1023 = t809 * t1194;
t760 = t1023 * t811 + t1167 * t1192;
t1320 = t1408 * t760 - t1433 * t698 + t1466;
t1321 = t1407 * t697 - t1408 * t698 + t1426 * t760;
t1322 = -t1407 * t760 - t1427 * t697 + t1467;
t812 = sin(qJ(1));
t813 = cos(qJ(1));
t990 = t813 * t1167;
t865 = -t1195 * t812 - t811 * t990;
t966 = t813 * t1023;
t705 = -t1192 * t865 + t966;
t1124 = t811 * t812;
t945 = t1167 * t1195;
t920 = t813 * t945;
t864 = t920 - t1124;
t564 = -t864 * t1193 + t705 * t810;
t565 = t1193 * t705 + t864 * t810;
t1019 = t813 * t1192;
t706 = -t809 * t1019 - t1194 * t865;
t1266 = t1320 * t564 + t1321 * t706 - t1322 * t565;
t1154 = Icges(7,5) * t565;
t1357 = Icges(7,4) * t706;
t243 = Icges(7,1) * t564 - t1154 + t1357;
t1356 = Icges(6,5) * t706;
t551 = Icges(6,4) * t565;
t246 = Icges(6,1) * t564 + t1356 + t551;
t1335 = t243 + t246;
t1352 = Icges(6,3) * t706;
t234 = Icges(6,5) * t564 + Icges(6,6) * t565 + t1352;
t1355 = Icges(7,2) * t706;
t237 = Icges(7,4) * t564 - Icges(7,6) * t565 + t1355;
t1338 = t234 + t237;
t1353 = Icges(7,6) * t706;
t549 = Icges(7,5) * t564;
t231 = -Icges(7,3) * t565 + t1353 + t549;
t1159 = Icges(6,4) * t564;
t1354 = Icges(6,6) * t706;
t240 = Icges(6,2) * t565 + t1159 + t1354;
t1341 = t231 - t240;
t1274 = t1335 * t564 + t1338 * t706 - t1341 * t565;
t1057 = qJD(2) * t813;
t798 = t809 * t1057;
t714 = qJD(3) * t864 + t798;
t534 = -qJD(5) * t706 + t714;
t803 = qJD(2) * t1167 + qJD(1);
t771 = -qJD(3) * t1024 + t803;
t668 = qJD(5) * t760 + t771;
t1465 = -t1266 * t668 + t1274 * t534;
t1058 = qJD(2) * t811;
t1012 = t809 * t1058;
t1051 = qJD(5) * t759;
t961 = t1195 * t1192;
t925 = t809 * t961;
t695 = qJD(2) * t925 + qJD(3) * t760;
t432 = -t695 * t1193 - qJD(5) * t926 + (t1012 + t1051) * t810;
t433 = qJD(5) * t697 + t1012 * t1193 + t695 * t810;
t962 = t1195 * t1194;
t927 = t809 * t962;
t1007 = qJD(3) * t1192;
t958 = t809 * t1007;
t696 = qJD(2) * t927 + qJD(3) * t944 - t811 * t958;
t1450 = -t1407 * t696 + t1427 * t432 - t1430 * t433;
t1449 = -t1407 * t432 + t1408 * t433 + t1426 * t696;
t1448 = t1408 * t696 - t1430 * t432 + t1433 * t433;
t1447 = t1012 * t1429 + t1428 * t695 + t1432 * t696;
t1446 = -t1431 * t1012 + t1432 * t695 + t1434 * t696;
t1445 = t1431 * t696 - t1429 * t695 + (-Icges(5,1) - Icges(4,3)) * t1012;
t1148 = Icges(5,6) * t760;
t581 = -Icges(5,5) * t1024 + Icges(5,3) * t759 - t1148;
t1161 = Icges(4,4) * t760;
t585 = -Icges(4,2) * t759 - Icges(4,6) * t1024 + t1161;
t1301 = t581 - t585;
t742 = Icges(5,6) * t759;
t582 = -Icges(5,4) * t1024 - Icges(5,2) * t760 + t742;
t743 = Icges(4,4) * t759;
t586 = Icges(4,1) * t760 - Icges(4,5) * t1024 - t743;
t1300 = t582 - t586;
t583 = -Icges(5,1) * t1024 - Icges(5,4) * t760 + Icges(5,5) * t759;
t584 = Icges(4,5) * t760 - Icges(4,6) * t759 - Icges(4,3) * t1024;
t1299 = t583 + t584;
t1020 = t813 * t1195;
t991 = t812 * t1167;
t767 = -t811 * t991 + t1020;
t709 = -t1023 * t812 + t1192 * t767;
t866 = -t813 * t811 - t812 * t945;
t567 = -t1193 * t709 - t810 * t866;
t1153 = Icges(7,5) * t567;
t568 = -t1193 * t866 + t709 * t810;
t967 = t812 * t1022;
t710 = t1194 * t767 + t967;
t245 = Icges(7,1) * t568 + Icges(7,4) * t710 + t1153;
t552 = Icges(6,4) * t567;
t248 = Icges(6,1) * t568 + Icges(6,5) * t710 - t552;
t1333 = t245 + t248;
t236 = Icges(6,5) * t568 - Icges(6,6) * t567 + Icges(6,3) * t710;
t239 = Icges(7,4) * t568 + Icges(7,2) * t710 + Icges(7,6) * t567;
t1336 = t236 + t239;
t550 = Icges(7,5) * t568;
t233 = Icges(7,6) * t710 + Icges(7,3) * t567 + t550;
t1158 = Icges(6,4) * t568;
t242 = -Icges(6,2) * t567 + Icges(6,6) * t710 + t1158;
t1339 = t233 - t242;
t1273 = t1333 * t564 + t1336 * t706 - t1339 * t565;
t647 = qJD(1) * t865 + qJD(2) * t866;
t959 = qJD(1) * t1023;
t385 = qJD(3) * t710 + t1192 * t647 - t813 * t959;
t646 = -qJD(1) * t920 - qJD(2) * t1020 + t1124 * t803;
t210 = qJD(5) * t568 - t1193 * t385 - t646 * t810;
t211 = -qJD(5) * t567 - t1193 * t646 + t385 * t810;
t1008 = qJD(3) * t1194;
t386 = t647 * t1194 - t767 * t1007 + (qJD(1) * t1019 + t1008 * t812) * t809;
t102 = Icges(7,5) * t211 + Icges(7,6) * t386 + Icges(7,3) * t210;
t108 = Icges(6,4) * t211 - Icges(6,2) * t210 + Icges(6,6) * t386;
t1462 = t102 - t108;
t649 = qJD(1) * t767 + qJD(2) * t864;
t387 = -t1008 * t865 + t1192 * t649 - t812 * t959 - t813 * t958;
t648 = -qJD(1) * t866 - qJD(2) * t865;
t212 = qJD(5) * t564 - t1193 * t387 + t648 * t810;
t213 = qJD(5) * t565 + t1193 * t648 + t387 * t810;
t388 = qJD(1) * t967 - qJD(3) * t966 + t1007 * t865 + t1194 * t649;
t103 = Icges(7,5) * t213 + Icges(7,6) * t388 + Icges(7,3) * t212;
t109 = Icges(6,4) * t213 - Icges(6,2) * t212 + Icges(6,6) * t388;
t1461 = t103 - t109;
t104 = Icges(6,5) * t211 - Icges(6,6) * t210 + Icges(6,3) * t386;
t106 = Icges(7,4) * t211 + Icges(7,2) * t386 + Icges(7,6) * t210;
t1460 = -t104 - t106;
t105 = Icges(6,5) * t213 - Icges(6,6) * t212 + Icges(6,3) * t388;
t107 = Icges(7,4) * t213 + Icges(7,2) * t388 + Icges(7,6) * t212;
t1459 = -t105 - t107;
t110 = Icges(7,1) * t211 + Icges(7,4) * t386 + Icges(7,5) * t210;
t112 = Icges(6,1) * t211 - Icges(6,4) * t210 + Icges(6,5) * t386;
t1458 = -t110 - t112;
t111 = Icges(7,1) * t213 + Icges(7,4) * t388 + Icges(7,5) * t212;
t113 = Icges(6,1) * t213 - Icges(6,4) * t212 + Icges(6,5) * t388;
t1457 = -t111 - t113;
t160 = -Icges(5,5) * t646 - Icges(5,6) * t386 + Icges(5,3) * t385;
t166 = Icges(4,4) * t386 - Icges(4,2) * t385 - Icges(4,6) * t646;
t1456 = -t160 + t166;
t161 = Icges(5,5) * t648 - Icges(5,6) * t388 + Icges(5,3) * t387;
t167 = Icges(4,4) * t388 - Icges(4,2) * t387 + Icges(4,6) * t648;
t1455 = -t161 + t167;
t162 = Icges(4,5) * t386 - Icges(4,6) * t385 - Icges(4,3) * t646;
t168 = -Icges(5,1) * t646 - Icges(5,4) * t386 + Icges(5,5) * t385;
t1454 = t162 + t168;
t163 = Icges(4,5) * t388 - Icges(4,6) * t387 + Icges(4,3) * t648;
t169 = Icges(5,1) * t648 - Icges(5,4) * t388 + Icges(5,5) * t387;
t1453 = t163 + t169;
t164 = -Icges(5,4) * t646 - Icges(5,2) * t386 + Icges(5,6) * t385;
t170 = Icges(4,1) * t386 - Icges(4,4) * t385 - Icges(4,5) * t646;
t1452 = t164 - t170;
t165 = Icges(5,4) * t648 - Icges(5,2) * t388 + Icges(5,6) * t387;
t171 = Icges(4,1) * t388 - Icges(4,4) * t387 + Icges(4,5) * t648;
t1451 = t165 - t171;
t1150 = Icges(5,6) * t706;
t399 = -Icges(5,5) * t864 + Icges(5,3) * t705 - t1150;
t1163 = Icges(4,4) * t706;
t408 = -Icges(4,2) * t705 - Icges(4,6) * t864 + t1163;
t1319 = t399 - t408;
t1149 = Icges(5,6) * t710;
t401 = -Icges(5,5) * t866 + Icges(5,3) * t709 - t1149;
t1162 = Icges(4,4) * t710;
t410 = -Icges(4,2) * t709 - Icges(4,6) * t866 + t1162;
t1317 = t401 - t410;
t402 = Icges(4,5) * t706 - Icges(4,6) * t705 - Icges(4,3) * t864;
t412 = Icges(5,1) * t864 + Icges(5,4) * t706 - Icges(5,5) * t705;
t1425 = t402 - t412;
t404 = Icges(4,5) * t710 - Icges(4,6) * t709 - Icges(4,3) * t866;
t413 = -Icges(5,1) * t866 - Icges(5,4) * t710 + Icges(5,5) * t709;
t1314 = t404 + t413;
t683 = Icges(5,6) * t705;
t405 = -Icges(5,4) * t864 - Icges(5,2) * t706 + t683;
t685 = Icges(4,4) * t705;
t414 = Icges(4,1) * t706 - Icges(4,5) * t864 - t685;
t1404 = t405 - t414;
t684 = Icges(5,6) * t709;
t407 = -Icges(5,4) * t866 - Icges(5,2) * t710 + t684;
t686 = Icges(4,4) * t709;
t416 = Icges(4,1) * t710 - Icges(4,5) * t866 - t686;
t1311 = t407 - t416;
t937 = -rSges(6,1) * t564 - rSges(6,2) * t565;
t250 = rSges(6,3) * t706 - t937;
t397 = -rSges(6,1) * t698 + rSges(6,2) * t697 + rSges(6,3) * t760;
t1444 = -t250 * t668 - t397 * t534;
t1358 = rSges(7,3) + qJ(6);
t1385 = rSges(7,1) + pkin(5);
t1089 = rSges(7,2) * t760 - t1358 * t697 - t1385 * t698;
t1415 = t1358 * t565 - t1385 * t564;
t1107 = -rSges(7,2) * t706 + t1415;
t548 = qJD(6) * t567;
t1443 = -t1089 * t534 + t1107 * t668 + t548;
t1265 = t1320 * t568 + t1321 * t710 + t1322 * t567;
t1272 = t1335 * t568 + t1338 * t710 + t1341 * t567;
t1442 = t1265 * t668 - t1272 * t534;
t1368 = t1320 * t433 + t1321 * t696 + t1322 * t432 - t1448 * t698 + t1449 * t760 - t1450 * t697;
t1351 = (t1058 * t1299 + t1195 * t1445) * t809 + t1446 * t760 + t1447 * t759 - t1300 * t696 + t1301 * t695;
t1264 = -t1320 * t698 + t1321 * t760 - t1322 * t697;
t157 = t581 * t709 - t582 * t710 - t583 * t866;
t159 = -t584 * t866 - t585 * t709 + t586 * t710;
t1343 = t157 + t159;
t1342 = -t1024 * t1299 - t1300 * t760 + t1301 * t759;
t1126 = t809 * t812;
t808 = t813 * pkin(1);
t1258 = pkin(8) * t1126 + t808;
t1288 = t1258 * qJD(1);
t666 = t767 * pkin(2) - pkin(9) * t866;
t769 = (pkin(2) * t811 - pkin(9) * t1195) * t809;
t1059 = qJD(2) * t809;
t797 = t812 * t1059;
t1031 = -t803 * t666 + t769 * t797 - t1288;
t1292 = qJD(4) * t705;
t495 = t710 * pkin(3) + qJ(4) * t709;
t653 = pkin(3) * t760 + qJ(4) * t759;
t713 = -qJD(3) * t866 + t797;
t1440 = t771 * t495 - t713 * t653 - t1031 + t1292;
t1050 = qJD(6) * t565;
t1106 = t710 * rSges(7,2) + t1358 * t567 + t1385 * t568;
t575 = -pkin(4) * t866 + pkin(10) * t710;
t716 = -pkin(4) * t1024 + t760 * pkin(10);
t1417 = t771 * t575 - t713 * t716 + t1440;
t533 = qJD(5) * t710 + t713;
t1439 = t1089 * t533 - t1106 * t668 + t1050 - t1417;
t1437 = -t1319 * t705 + t1404 * t706;
t136 = t709 * t399 - t710 * t405 + t412 * t866;
t140 = -t402 * t866 - t709 * t408 + t710 * t414;
t1347 = t140 + t136;
t1436 = t1343 * t771 - t1347 * t714;
t1293 = (t1429 * t706 + t1431 * t705) * t714 + (-t1429 * t710 - t1431 * t709) * t713 + (-t1429 * t760 - t1431 * t759) * t771;
t1383 = -t1335 * t211 - t1338 * t386 - t1341 * t210 + t1457 * t568 + t1459 * t710 - t1461 * t567;
t1382 = -t1333 * t211 - t1336 * t386 - t1339 * t210 + t1458 * t568 + t1460 * t710 - t1462 * t567;
t1381 = -t1335 * t213 - t1338 * t388 - t1341 * t212 + t1457 * t564 + t1459 * t706 + t1461 * t565;
t1380 = -t1333 * t213 - t1336 * t388 - t1339 * t212 + t1458 * t564 + t1460 * t706 + t1462 * t565;
t1374 = t1320 * t211 + t1321 * t386 + t1322 * t210 + t1448 * t568 + t1449 * t710 + t1450 * t567;
t1373 = t1320 * t213 + t1321 * t388 + t1322 * t212 + t1448 * t564 + t1449 * t706 - t1450 * t565;
t1372 = -t1319 * t385 + t1404 * t386 + t1425 * t646 + t1451 * t710 + t1453 * t866 + t1455 * t709;
t1371 = t1311 * t386 + t1314 * t646 - t1317 * t385 + t1452 * t710 + t1454 * t866 + t1456 * t709;
t1370 = -t1319 * t387 + t1404 * t388 - t1425 * t648 + t1451 * t706 + t1453 * t864 + t1455 * t705;
t1369 = t1311 * t388 - t1314 * t648 - t1317 * t387 + t1452 * t706 + t1454 * t864 + t1456 * t705;
t1362 = -t1299 * t646 - t1300 * t386 + t1301 * t385 + t1445 * t866 + t1446 * t710 + t1447 * t709;
t1361 = t1299 * t648 - t1300 * t388 + t1301 * t387 + t1445 * t864 + t1446 * t706 + t1447 * t705;
t1271 = t1333 * t568 + t1336 * t710 + t1339 * t567;
t92 = -t231 * t697 + t237 * t760 - t243 * t698;
t94 = t234 * t760 + t240 * t697 - t246 * t698;
t1270 = t92 + t94;
t93 = -t233 * t697 + t239 * t760 - t245 * t698;
t95 = t236 * t760 + t242 * t697 - t248 * t698;
t1269 = t93 + t95;
t1125 = t809 * t813;
t724 = Icges(3,3) * t1167 + (Icges(3,5) * t811 + Icges(3,6) * t1195) * t809;
t1164 = Icges(3,4) * t811;
t725 = Icges(3,6) * t1167 + (Icges(3,2) * t1195 + t1164) * t809;
t1127 = t809 * t811;
t1018 = t1195 * Icges(3,4);
t799 = t809 * t1018;
t726 = Icges(3,1) * t1127 + Icges(3,5) * t1167 + t799;
t863 = t1125 * t724 - t725 * t864 + t726 * t865;
t1435 = t863 * t803;
t137 = t709 * t401 - t710 * t407 - t413 * t866;
t141 = -t404 * t866 - t709 * t410 + t710 * t416;
t1350 = t137 + t141;
t1141 = t412 * t864;
t134 = t399 * t705 - t405 * t706 + t1141;
t1142 = t402 * t864;
t138 = -t408 * t705 + t414 * t706 - t1142;
t1349 = t138 + t134;
t343 = t864 * t413;
t135 = t705 * t401 - t706 * t407 - t343;
t342 = t864 * t404;
t139 = -t705 * t410 + t706 * t416 - t342;
t1348 = t139 + t135;
t143 = t1024 * t412 + t759 * t399 - t760 * t405;
t145 = -t1024 * t402 - t759 * t408 + t760 * t414;
t1346 = t143 + t145;
t144 = -t1024 * t413 + t759 * t401 - t760 * t407;
t146 = -t1024 * t404 - t759 * t410 + t760 * t416;
t1345 = t146 + t144;
t1140 = t583 * t864;
t156 = t581 * t705 - t582 * t706 - t1140;
t1139 = t584 * t864;
t158 = -t585 * t705 + t586 * t706 - t1139;
t1344 = t156 + t158;
t1423 = t1192 * t1428 + t1194 * t1432;
t1422 = t1432 * t1192 + t1194 * t1434;
t1421 = -t1193 * t1427 - t1430 * t810;
t1420 = t1193 * t1407 + t1408 * t810;
t1419 = t1193 * t1430 + t1433 * t810;
t663 = -pkin(2) * t865 - pkin(9) * t864;
t776 = pkin(1) * t812 - pkin(8) * t1125;
t773 = qJD(1) * t776;
t1391 = -t663 * t803 - t769 * t798 - t773;
t680 = qJD(4) * t709;
t1416 = t1391 + t680;
t592 = Icges(3,5) * t865 - Icges(3,6) * t864 + Icges(3,3) * t1125;
t749 = Icges(3,4) * t865;
t594 = Icges(3,2) * t864 - Icges(3,6) * t1125 - t749;
t748 = Icges(3,4) * t864;
t598 = Icges(3,1) * t865 + Icges(3,5) * t1125 - t748;
t229 = -t1167 * t592 + (t1195 * t594 - t598 * t811) * t809;
t421 = rSges(4,1) * t706 - rSges(4,2) * t705 - rSges(4,3) * t864;
t590 = t760 * rSges(4,1) - t759 * rSges(4,2) - rSges(4,3) * t1024;
t147 = -t421 * t771 - t590 * t714 + t1391;
t1414 = t1358 * t212 + t1385 * t213 - t1050;
t1256 = (-t1433 * t565 + t1159 - t1341 - t549) * t534 - (t1433 * t567 + t1158 - t1339 - t550) * t533 - (-t1433 * t697 - t1322 - t1467) * t668;
t1257 = (-t1427 * t564 - t1154 + t1335 + t551) * t534 - (-t1427 * t568 + t1153 + t1333 - t552) * t533 - (t1427 * t698 + t1320 + t1466) * t668;
t1364 = t1350 * t713 + t1436;
t1412 = -t1364 / 0.2e1;
t1375 = t1264 * t668 + t1269 * t533 - t1270 * t534;
t1411 = t1375 / 0.2e1;
t1376 = t1271 * t533 + t1442;
t1410 = -t1376 / 0.2e1;
t1403 = -t1358 * t1193 + t1385 * t810;
t593 = Icges(3,5) * t767 + Icges(3,6) * t866 + Icges(3,3) * t1126;
t1165 = Icges(3,4) * t767;
t596 = Icges(3,2) * t866 + Icges(3,6) * t1126 + t1165;
t750 = Icges(3,4) * t866;
t599 = Icges(3,1) * t767 + Icges(3,5) * t1126 + t750;
t219 = t593 * t1126 + t596 * t866 + t767 * t599;
t929 = t594 * t864 + t598 * t865;
t1402 = -t929 + t219;
t732 = t1167 * rSges(3,3) + (rSges(3,1) * t811 + rSges(3,2) * t1195) * t809;
t1401 = t732 * t797 - t1288;
t254 = t568 * rSges(6,1) - t567 * rSges(6,2) + t710 * rSges(6,3);
t72 = t254 * t668 - t397 * t533 + t1417;
t420 = -rSges(5,1) * t866 - t710 * rSges(5,2) + t709 * rSges(5,3);
t589 = -rSges(5,1) * t1024 - t760 * rSges(5,2) + t759 * rSges(5,3);
t119 = t420 * t771 - t589 * t713 + t1440;
t682 = t705 * qJ(4);
t490 = pkin(3) * t706 + t682;
t1053 = qJD(3) * t811;
t1011 = t809 * t1053;
t957 = qJD(2) * t1011;
t1394 = t1342 * t957 + t1351 * t771;
t622 = qJD(5) * t696 + t957;
t1393 = t1264 * t622 + t1368 * t668;
t1390 = -t594 * t866 + t598 * t767;
t1002 = qJD(1) * t1059;
t789 = t812 * t1002;
t571 = qJD(3) * t648 + t789;
t258 = qJD(5) * t388 + t571;
t790 = t813 * t1002;
t572 = -qJD(3) * t646 + t790;
t259 = qJD(5) * t386 + t572;
t1388 = t1265 * t622 + t1271 * t259 + t1272 * t258 + t1374 * t668 - t1382 * t533 + t1383 * t534;
t1387 = t1266 * t622 + t1273 * t259 + t1274 * t258 + t1373 * t668 - t1380 * t533 + t1381 * t534;
t1173 = t95 * t259;
t1174 = t94 * t258;
t1175 = t93 * t259;
t1176 = t92 * t258;
t30 = t104 * t760 + t108 * t697 - t112 * t698 + t236 * t696 - t242 * t432 + t248 * t433;
t1182 = t30 * t533;
t29 = t105 * t760 + t109 * t697 - t113 * t698 + t234 * t696 - t240 * t432 + t246 * t433;
t1183 = t29 * t534;
t28 = -t102 * t697 + t106 * t760 - t110 * t698 + t233 * t432 + t239 * t696 + t245 * t433;
t1184 = t28 * t533;
t27 = -t103 * t697 + t107 * t760 - t111 * t698 + t231 * t432 + t237 * t696 + t243 * t433;
t1185 = t27 * t534;
t1386 = t1173 + t1174 + t1182 - t1183 + t1175 + t1176 + t1184 - t1185 + t1393;
t1379 = -t29 - t27;
t1378 = -t30 - t28;
t1377 = t1273 * t533 - t1465;
t60 = t759 * t161 - t760 * t165 + t695 * t399 - t696 * t405 + (-t1058 * t412 - t1195 * t169) * t809;
t62 = -t759 * t167 + t760 * t171 - t695 * t408 + t696 * t414 + (t1058 * t402 - t1195 * t163) * t809;
t1367 = -t60 - t62;
t61 = t759 * t160 - t760 * t164 + t695 * t401 - t696 * t407 + (t1058 * t413 - t1195 * t168) * t809;
t63 = -t759 * t166 + t760 * t170 - t695 * t410 + t696 * t416 + (t1058 * t404 - t1195 * t162) * t809;
t1366 = t61 + t63;
t1365 = t1344 * t771 + t1348 * t713 - t1349 * t714;
t1363 = t1342 * t771 + t1345 * t713 - t1346 * t714;
t1340 = t1427 * t565 + t1430 * t564 - t1353 + t1354;
t1337 = -t1407 * t565 - t1408 * t564 - t1352 - t1355;
t1334 = -t1430 * t565 - t1433 * t564 - t1356 - t1357;
t1028 = t864 * t1194;
t960 = t1193 * t1192;
t618 = -t810 * t865 - t864 * t960;
t1021 = t810 * t1192;
t619 = t1021 * t864 - t1193 * t865;
t1332 = -t1028 * t1407 + t1427 * t618 - t1430 * t619;
t1026 = t866 * t1194;
t620 = t767 * t810 - t866 * t960;
t621 = t1021 * t866 + t1193 * t767;
t1331 = -t1026 * t1407 + t1427 * t620 - t1430 * t621;
t1330 = t1028 * t1426 - t1407 * t618 + t1408 * t619;
t1329 = t1026 * t1426 - t1407 * t620 + t1408 * t621;
t1328 = t1028 * t1408 - t1430 * t618 + t1433 * t619;
t1327 = t1026 * t1408 - t1430 * t620 + t1433 * t621;
t1326 = t1407 * t705 + t1421 * t706;
t1325 = t1407 * t709 + t1421 * t710;
t1324 = -t1408 * t705 + t1419 * t706;
t1323 = -t1408 * t709 + t1419 * t710;
t1310 = t1407 * t759 + t1421 * t760;
t1309 = -t1408 * t759 + t1419 * t760;
t1308 = t1423 * t864 - t1429 * t865;
t1307 = t1423 * t866 + t1429 * t767;
t1306 = t1422 * t864 + t1431 * t865;
t1305 = t1422 * t866 - t1431 * t767;
t722 = t1127 * t810 - t1193 * t925;
t723 = (t1193 * t811 + t810 * t961) * t809;
t1304 = -t1407 * t927 + t1427 * t722 - t1430 * t723;
t1303 = -t1407 * t722 + t1408 * t723 + t1426 * t927;
t1302 = t1408 * t927 - t1430 * t722 + t1433 * t723;
t1298 = (t1428 * t961 + t1429 * t811 + t1432 * t962) * t809;
t1297 = (-t1431 * t811 + t1432 * t961 + t1434 * t962) * t809;
t1296 = (-t1193 * t1322 + t1320 * t810 + t1420 * t760 - t1426 * t759) * t668 - (-t1193 * t1341 + t1335 * t810 + t1420 * t706 - t1426 * t705) * t534 + (-t1193 * t1339 + t1333 * t810 + t1420 * t710 - t1426 * t709) * t533;
t1295 = (t1428 * t760 + t1300 + t742 + t743) * t771 + (-t1428 * t706 - t1404 - t683 - t685) * t714 + (t1428 * t710 + t1311 + t684 + t686) * t713;
t1294 = (-t1434 * t759 - t1148 - t1161 + t1301) * t771 + (t1434 * t705 + t1150 + t1163 - t1319) * t714 + (-t1434 * t709 - t1149 - t1162 + t1317) * t713;
t1066 = t653 + t716;
t1289 = t397 + t1066;
t1287 = t705 * t771 + t714 * t759;
t1286 = -t709 * t771 + t713 * t759;
t1285 = -t705 * t713 - t709 * t714;
t1284 = t1343 * t957 + t1347 * t571 + t1350 * t572 + t1362 * t771 - t1371 * t713 + t1372 * t714 + t1388;
t1283 = t1344 * t957 + t1348 * t572 + t1349 * t571 + t1361 * t771 - t1369 * t713 + t1370 * t714 + t1387;
t1143 = t146 * t572;
t1144 = t145 * t571;
t1145 = t144 * t572;
t1146 = t143 * t571;
t1178 = t63 * t713;
t1179 = t62 * t714;
t1180 = t61 * t713;
t1181 = t60 * t714;
t1282 = t1143 + t1144 + t1178 - t1179 + t1145 + t1146 + t1180 - t1181 + t1386 + t1394;
t1281 = t1365 + t1377;
t1280 = t1364 + t1376;
t939 = rSges(5,1) * t864 - rSges(5,3) * t705;
t418 = -rSges(5,2) * t706 - t939;
t573 = -pkin(4) * t864 + t706 * pkin(10);
t604 = -rSges(3,1) * t865 + rSges(3,2) * t864 - rSges(3,3) * t1125;
t348 = -t604 * t803 - t732 * t798 - t773;
t1122 = rSges(7,2) * t388 + t1414;
t1123 = t386 * rSges(7,2) + t1358 * t210 + t1385 * t211 + t548;
t1240 = -0.2e1 * t1439;
t1078 = -t490 - t573;
t845 = -t653 * t714 + t1416;
t824 = t1078 * t771 - t714 * t716 + t845;
t57 = t1443 + t824;
t1241 = 0.2e1 * t57;
t1049 = qJD(6) * t697;
t1117 = -rSges(7,2) * t696 - t1358 * t432 - t1385 * t433 + t1049;
t739 = qJD(4) * t759;
t389 = pkin(3) * t696 + qJ(4) * t695 + t739;
t625 = pkin(4) * t1012 + pkin(10) * t696;
t1094 = -t389 - t625;
t265 = -t646 * pkin(4) + pkin(10) * t386;
t1060 = qJD(1) * t813;
t770 = (pkin(2) * t1195 + pkin(9) * t811) * t809;
t741 = qJD(2) * t770;
t901 = -t1060 * t769 - t741 * t812;
t428 = t647 * pkin(2) - pkin(9) * t646;
t1013 = t809 * t1060;
t1061 = qJD(1) * t812;
t946 = -pkin(1) * t1061 + pkin(8) * t1013;
t758 = qJD(1) * t946;
t1097 = t803 * t428 + t758;
t180 = t386 * pkin(3) + qJ(4) * t385 + t680;
t935 = qJD(4) * t387 + t771 * t180 + t495 * t957 + t1097;
t819 = t1059 * t901 - t1066 * t572 + t1094 * t713 + t771 * t265 + t575 * t957 + t935;
t13 = qJD(6) * t212 - t1089 * t259 + t1106 * t622 + t1117 * t533 + t1123 * t668 + t819;
t1249 = 0.2e1 * t13;
t1130 = t741 * t813;
t1096 = -t387 * qJ(4) - t1292;
t181 = pkin(3) * t388 - t1096;
t266 = pkin(4) * t648 + t388 * pkin(10);
t429 = pkin(2) * t649 + t648 * pkin(9);
t900 = -qJD(1) * t1288 - t803 * t429 + t769 * t789;
t853 = qJD(4) * t385 - t389 * t714 + t571 * t653 + t900;
t943 = t1078 * t1053;
t818 = t571 * t716 - t714 * t625 + (-t181 - t266) * t771 + (t943 - t1130) * t1059 + t853;
t12 = qJD(6) * t210 + t1089 * t258 + t1107 * t622 + t1117 * t534 - t1122 * t668 + t818;
t1250 = 0.2e1 * t12;
t1275 = t1106 * t1249 + t1107 * t1250 - t1122 * t1241 + t1123 * t1240;
t1077 = -t495 - t575;
t1069 = t663 * t797 + t666 * t798;
t972 = t713 * t490 + t1069 + t739;
t854 = -t1077 * t714 + t713 * t573 + t972;
t44 = t1106 * t534 - t1107 * t533 - t1049 + t854;
t1268 = t1107 * t44;
t992 = t57 * t1089;
t1267 = t1439 * t1106;
t606 = t767 * rSges(3,1) + rSges(3,2) * t866 + rSges(3,3) * t1126;
t322 = (t604 * t812 + t606 * t813) * t1059;
t1118 = -t180 - t265;
t1263 = -t705 * rSges(7,2) + t1403 * t706;
t1262 = -t709 * rSges(7,2) + t1403 * t710;
t1088 = -t418 - t490;
t1087 = -t420 - t495;
t1075 = -t596 * t864 + t599 * t865;
t1261 = -t759 * rSges(7,2) + t1403 * t760;
t1072 = t589 + t653;
t1255 = (t1407 * t698 + t1408 * t697) * t668 - (-t1407 * t564 + t1408 * t565) * t534 + (-t1407 * t568 - t1408 * t567) * t533;
t1254 = -t254 + t1077;
t1006 = qJD(4) * t1192;
t1055 = qJD(3) * t865;
t727 = (pkin(3) * t962 + qJ(4) * t961) * t809;
t1253 = t1006 * t866 - t653 * t1055 - t714 * t727;
t860 = t428 * t798 + t429 * t797 + t663 * t790 - t666 * t789;
t847 = qJD(4) * t695 + t713 * t181 + t572 * t490 + t860;
t821 = t1077 * t571 - t1118 * t714 + t713 * t266 + t572 * t573 + t847;
t7 = qJD(6) * t432 - t1106 * t258 - t1107 * t259 + t1122 * t533 + t1123 * t534 + t821;
t1251 = 0.2e1 * t7;
t115 = t211 * rSges(6,1) - t210 * rSges(6,2) + t386 * rSges(6,3);
t938 = -rSges(6,1) * t213 + rSges(6,2) * t212;
t117 = rSges(6,3) * t388 - t938;
t16 = t115 * t534 + t117 * t533 + t250 * t259 - t254 * t258 + t821;
t1248 = 0.2e1 * t16;
t202 = rSges(6,1) * t433 - rSges(6,2) * t432 + rSges(6,3) * t696;
t25 = t115 * t668 - t202 * t533 + t254 * t622 - t259 * t397 + t819;
t1247 = 0.2e1 * t25;
t26 = -t117 * t668 - t202 * t534 - t250 * t622 + t258 * t397 + t818;
t1246 = 0.2e1 * t26;
t172 = -t646 * rSges(5,1) - t386 * rSges(5,2) + t385 * rSges(5,3);
t1120 = -t172 - t180;
t940 = -rSges(5,1) * t648 - rSges(5,3) * t387;
t173 = -rSges(5,2) * t388 - t940;
t31 = t1087 * t571 - t1120 * t714 + t173 * t713 + t418 * t572 + t847;
t1245 = 0.2e1 * t31;
t442 = rSges(5,1) * t1012 - rSges(5,2) * t696 + rSges(5,3) * t695;
t1095 = -t389 - t442;
t42 = t172 * t771 + t1095 * t713 - t1072 * t572 + (t1053 * t420 + t901) * t1059 + t935;
t1244 = 0.2e1 * t42;
t977 = t1088 * t811;
t43 = -t442 * t714 + t571 * t589 + (-t173 - t181) * t771 + (qJD(3) * t977 - t1130) * t1059 + t853;
t1243 = 0.2e1 * t43;
t1242 = 0.2e1 * t44;
t68 = t250 * t533 + t254 * t534 + t854;
t1239 = 0.2e1 * t68;
t71 = t1444 + t824;
t1238 = 0.2e1 * t71;
t1237 = 0.2e1 * t72;
t91 = -t1087 * t714 + t418 * t713 + t972;
t1236 = 0.2e1 * t91;
t118 = t1088 * t771 - t589 * t714 + t845;
t1235 = 0.2e1 * t118;
t1234 = 0.2e1 * t119;
t1233 = m(6) / 0.2e1;
t1232 = m(7) / 0.2e1;
t1231 = t258 / 0.2e1;
t1230 = t259 / 0.2e1;
t1227 = -t533 / 0.2e1;
t1226 = t533 / 0.2e1;
t1224 = t534 / 0.2e1;
t1223 = -t534 / 0.2e1;
t1222 = t571 / 0.2e1;
t1221 = t572 / 0.2e1;
t1220 = t622 / 0.2e1;
t1215 = -t668 / 0.2e1;
t1214 = t668 / 0.2e1;
t1210 = -t713 / 0.2e1;
t1209 = t713 / 0.2e1;
t1207 = t714 / 0.2e1;
t1206 = -t714 / 0.2e1;
t1201 = -t771 / 0.2e1;
t1200 = t771 / 0.2e1;
t1198 = rSges(5,2) - pkin(3);
t1197 = -rSges(7,2) - pkin(3);
t1196 = -rSges(6,3) - pkin(3);
t1186 = t16 * t250;
t1177 = t68 * t117;
t1138 = t592 * t812;
t1137 = t593 * t813;
t662 = pkin(2) * t864 - pkin(9) * t865;
t1128 = t803 * t662;
t1121 = -t181 * t866 - t646 * t490;
t398 = t1167 * t428;
t1119 = t1167 * t180 + t398;
t1105 = t695 + t1285;
t1104 = t1358 * t564 + t1385 * t565;
t1103 = t1358 * t568 - t1385 * t567;
t488 = -pkin(3) * t705 + qJ(4) * t706;
t1102 = qJD(4) * t760 + t713 * t488;
t1101 = t387 + t1286;
t1100 = t385 + t1287;
t1099 = -rSges(7,2) * t1028 - t1358 * t618 - t1385 * t619;
t1098 = rSges(7,2) * t1026 + t1358 * t620 + t1385 * t621;
t424 = t866 * t490;
t1086 = -t573 * t866 - t424;
t493 = -pkin(3) * t709 + qJ(4) * t710;
t1085 = qJD(4) * t706 + t771 * t493;
t443 = rSges(4,1) * t696 - rSges(4,2) * t695 + rSges(4,3) * t1012;
t1084 = -t443 - t741;
t445 = t495 * t1012;
t1083 = t575 * t1012 + t445;
t1082 = t490 * t1024 - t653 * t864;
t628 = t1167 * t666;
t1081 = t1167 * t495 + t628;
t651 = -pkin(3) * t759 + qJ(4) * t760;
t1080 = qJD(4) * t710 - t651 * t714;
t1079 = -t1358 * t698 + t1385 * t697;
t1076 = -t495 - t666;
t1073 = rSges(7,2) * t927 + t1358 * t722 + t1385 * t723;
t1071 = -t590 - t769;
t665 = pkin(2) * t866 + pkin(9) * t767;
t1070 = t662 * t797 + t665 * t798;
t1067 = t666 * t1125 + t663 * t1126;
t763 = (Icges(3,1) * t1195 - t1164) * t809;
t1064 = -t725 + t763;
t762 = -Icges(3,2) * t1127 + t799;
t1063 = -t726 - t762;
t1054 = qJD(3) * t767;
t1048 = 2 * m(3);
t1047 = 2 * m(4);
t1046 = 2 * m(5);
t1045 = 0.2e1 * m(6);
t1044 = 0.2e1 * m(7);
t1043 = 0.2e1 * t866;
t1042 = 0.2e1 * qJD(1);
t1040 = t181 * t1024 - t389 * t864 + t648 * t653;
t1039 = t1167 * t265 + t1119;
t1038 = -t202 + t1094;
t174 = t386 * rSges(4,1) - t385 * rSges(4,2) - t646 * rSges(4,3);
t1036 = t663 * t1013 + t428 * t1125 + t429 * t1126;
t1035 = -t741 + t1095;
t1033 = t1167 * t575 + t1081;
t218 = -t1126 * t592 - t1390;
t1032 = -t769 - t1072;
t363 = t647 * rSges(3,1) + t646 * rSges(3,2) + rSges(3,3) * t1013;
t423 = t710 * rSges(4,1) - t709 * rSges(4,2) - rSges(4,3) * t866;
t1017 = t1195 * t180;
t1016 = t1195 * t495;
t1015 = t1195 * t726;
t1014 = t809 * t1061;
t1005 = qJD(5) * t1194;
t1004 = qJD(6) * t1193;
t1003 = t7 * t1107;
t1000 = -t1059 / 0.2e1;
t999 = t1059 / 0.2e1;
t993 = t44 * t1122;
t989 = t1167 * t663;
t987 = t1048 / 0.2e1;
t986 = -t1047 / 0.2e1;
t985 = t1047 / 0.2e1;
t984 = -t1046 / 0.2e1;
t983 = t1046 / 0.2e1;
t982 = -t1045 / 0.2e1;
t981 = t1045 / 0.2e1;
t980 = -t1044 / 0.2e1;
t979 = t1044 / 0.2e1;
t978 = t813 * t1071;
t976 = -t266 * t866 - t646 * t573 + t1121;
t975 = t1094 + t1117;
t974 = -t741 + t1038;
t973 = t1077 - t1106;
t971 = t1066 + t1089;
t970 = -t769 - t1289;
t969 = t495 * t1125 + t490 * t1126 + t1067;
t968 = t573 * t1024 - t716 * t864 + t1082;
t953 = t811 * t999;
t952 = t812 * t1000;
t951 = t812 * t999;
t950 = t813 * t1000;
t949 = t813 * t999;
t947 = qJD(1) * t999;
t941 = -rSges(3,1) * t649 + rSges(3,2) * t648;
t936 = t769 * t1014 - t1167 * t429;
t934 = -t741 + t975;
t933 = -t769 - t971;
t890 = -pkin(3) * t1194 - qJ(4) * t1192;
t623 = t890 * t864;
t932 = qJD(4) * t925 + t490 * t1054 - t713 * t623 + t1070;
t930 = t218 * t812 + t219 * t813;
t654 = Icges(3,5) * t864 + Icges(3,6) * t865;
t655 = Icges(3,5) * t866 - Icges(3,6) * t767;
t928 = t654 * t813 - t655 * t812;
t924 = t666 + t1258;
t923 = t812 * t947;
t922 = t813 * t947;
t921 = qJD(3) * t953;
t918 = t803 * t665 - t770 * t797;
t917 = rSges(6,1) * t810 + rSges(6,2) * t1193;
t914 = t490 * t1013 + t180 * t1125 + t181 * t1126 + t1036;
t913 = t266 * t1024 - t625 * t864 + t648 * t716 + t1040;
t912 = t575 * t1125 + t573 * t1126 + t969;
t909 = -t1195 * t598 - t594 * t811;
t908 = t1195 * t599 - t596 * t811;
t898 = -t663 - t776;
t216 = t1125 * t592 + t929;
t217 = -t1125 * t593 - t1075;
t897 = (-t216 * t813 + t217 * t812) * t809;
t896 = (-t218 * t813 + t219 * t812) * t809;
t892 = -rSges(4,1) * t1194 + rSges(4,2) * t1192;
t891 = rSges(5,2) * t1194 - rSges(5,3) * t1192;
t889 = -t770 * t798 - t1128;
t175 = rSges(4,1) * t388 - rSges(4,2) * t387 + rSges(4,3) * t648;
t888 = -t1195 * t265 - t1017;
t887 = -t1195 * t575 - t1016;
t884 = Icges(5,4) * t1194 - Icges(5,5) * t1192;
t883 = -Icges(4,5) * t1194 + Icges(4,6) * t1192;
t768 = (rSges(3,1) * t1195 - rSges(3,2) * t811) * t809;
t880 = -t682 + t898;
t875 = t428 + t946;
t761 = (Icges(3,5) * t1195 - Icges(3,6) * t811) * t809;
t738 = qJD(2) * t768;
t874 = (-t1060 * t732 - t738 * t812) * t809;
t873 = -t1167 * t490 - t989;
t658 = Icges(3,1) * t864 + t749;
t659 = Icges(3,1) * t866 - t1165;
t871 = (-t596 + t659) * t812 - (-t594 + t658) * t813;
t656 = Icges(3,2) * t865 + t748;
t657 = -Icges(3,2) * t767 + t750;
t870 = (-t599 - t657) * t812 - (t598 - t656) * t813;
t520 = -Icges(5,1) * t865 - t864 * t884;
t869 = -t1192 * t399 + t1194 * t405 + t520;
t521 = Icges(5,1) * t767 - t866 * t884;
t868 = -t1192 * t401 + t1194 * t407 + t521;
t704 = (Icges(5,1) * t811 - Icges(5,4) * t962 + Icges(5,5) * t961) * t809;
t867 = -t1192 * t581 + t1194 * t582 + t704;
t862 = -t490 * t771 + t1416;
t624 = t890 * t866;
t861 = t1006 * t864 + t495 * t1011 - t771 * t624 + t918;
t859 = pkin(10) * t1285 + t493 * t714 + t1102;
t858 = pkin(10) * t1286 - t713 * t651 + t1085;
t857 = pkin(10) * t1287 - t771 * t488 + t1080;
t856 = t495 + t924;
t855 = t573 * t1013 + t265 * t1125 + t266 * t1126 + t914;
t852 = t653 * t1014 - t1167 * t181 + t936;
t849 = -t573 + t880;
t848 = -t429 - t1288;
t846 = -t1167 * t573 + t873;
t844 = t575 + t856;
t833 = t848 + t1096;
t357 = Icges(3,5) * t647 + Icges(3,6) * t646 + Icges(3,3) * t1013;
t358 = Icges(3,5) * t649 - Icges(3,6) * t648 + Icges(3,3) * t1014;
t359 = Icges(3,4) * t647 + Icges(3,2) * t646 + Icges(3,6) * t1013;
t360 = Icges(3,4) * t649 - Icges(3,2) * t648 + Icges(3,6) * t1014;
t361 = Icges(3,1) * t647 + Icges(3,4) * t646 + Icges(3,5) * t1013;
t362 = Icges(3,1) * t649 - Icges(3,4) * t648 + Icges(3,5) * t1014;
t832 = (qJD(1) * t930 + t812 * (t359 * t866 + t361 * t767 + t596 * t646 + t599 * t647 + (t1060 * t593 + t357 * t812) * t809) - t813 * (t360 * t866 + t362 * t767 + t594 * t646 - t598 * t647 + (-t1060 * t592 + t358 * t812) * t809)) * t809;
t831 = (t812 * (t359 * t864 - t361 * t865 - t596 * t648 + t599 * t649 + (t1061 * t593 - t357 * t813) * t809) - t813 * (t360 * t864 - t362 * t865 - t594 * t648 - t598 * t649 + (-t1061 * t592 - t358 * t813) * t809) + (t216 * t812 + t217 * t813) * qJD(1)) * t809;
t830 = -t1066 * t714 - t573 * t771 + t862;
t829 = t180 + t875;
t124 = t1167 * t358 + (qJD(2) * t909 + t1195 * t360 + t362 * t811) * t809;
t125 = t1167 * t357 + (qJD(2) * t908 + t1195 * t359 + t361 * t811) * t809;
t230 = t1167 * t593 + (t1195 * t596 + t599 * t811) * t809;
t828 = (-t124 * t813 + t125 * t812 + (t229 * t812 + t230 * t813) * qJD(1)) * t809;
t827 = t716 * t1014 - t1167 * t266 + t852;
t826 = -t266 + t833;
t635 = -pkin(4) * t865 + pkin(10) * t1028;
t636 = t767 * pkin(4) + pkin(10) * t1026;
t825 = t573 * t1054 + t713 * t635 - (t624 - t636) * t714 - t1077 * t1055 + t932;
t823 = t265 + t829;
t744 = (pkin(4) * t811 + pkin(10) * t962) * t809;
t822 = t575 * t1011 + t771 * t636 + (-t727 - t744) * t713 - t1066 * t1054 + t861;
t820 = -t714 * t744 - t716 * t1055 + (t623 - t635) * t771 + (-t1057 * t770 + t943) * t809 - t1128 + t1253;
t510 = -Icges(4,3) * t865 - t864 * t883;
t511 = Icges(4,3) * t767 - t866 * t883;
t699 = (Icges(4,5) * t962 - Icges(4,6) * t961 + Icges(4,3) * t811) * t809;
t815 = (t1192 * t410 - t1194 * t416 + t511) * t713 - (t1192 * t408 - t1194 * t414 + t510) * t714 + (t1192 * t585 - t1194 * t586 + t699) * t771;
t737 = qJD(2) * t763;
t736 = (-Icges(3,2) * t811 + t1018) * t1059;
t735 = qJD(2) * t761;
t734 = (qJD(5) * t962 + t1053) * t809;
t712 = (rSges(5,1) * t811 - rSges(5,2) * t962 + rSges(5,3) * t961) * t809;
t711 = (rSges(4,1) * t962 - rSges(4,2) * t961 + rSges(4,3) * t811) * t809;
t661 = rSges(3,1) * t866 - rSges(3,2) * t767;
t660 = rSges(3,1) * t864 + rSges(3,2) * t865;
t652 = -rSges(4,1) * t759 - rSges(4,2) * t760;
t650 = rSges(5,2) * t759 + rSges(5,3) * t760;
t627 = t1005 * t866 + t1054;
t626 = t1005 * t864 - t1055;
t537 = t723 * rSges(6,1) - t722 * rSges(6,2) + rSges(6,3) * t927;
t525 = t767 * rSges(5,1) - t866 * t891;
t524 = -rSges(5,1) * t865 - t864 * t891;
t523 = t767 * rSges(4,3) - t866 * t892;
t522 = -rSges(4,3) * t865 - t864 * t892;
t509 = -t759 * rSges(6,3) + t760 * t917;
t494 = -rSges(4,1) * t709 - rSges(4,2) * t710;
t492 = rSges(5,2) * t709 + rSges(5,3) * t710;
t489 = -rSges(4,1) * t705 - rSges(4,2) * t706;
t487 = rSges(5,2) * t705 + rSges(5,3) * t706;
t473 = rSges(6,1) * t697 + rSges(6,2) * t698;
t364 = rSges(3,3) * t1014 - t941;
t349 = t606 * t803 - t1401;
t339 = -t709 * rSges(6,3) + t710 * t917;
t337 = -t705 * rSges(6,3) + t706 * t917;
t321 = t1126 * t724 + t725 * t866 + t726 * t767;
t319 = t621 * rSges(6,1) - t620 * rSges(6,2) + rSges(6,3) * t1026;
t317 = t619 * rSges(6,1) - t618 * rSges(6,2) + rSges(6,3) * t1028;
t301 = -rSges(6,1) * t567 - rSges(6,2) * t568;
t296 = rSges(6,1) * t565 - rSges(6,2) * t564;
t269 = t321 * t803;
t260 = t1167 * t735 + (t1195 * t736 + t737 * t811 + (-t725 * t811 + t1015) * qJD(2)) * t809;
t255 = t260 * t803;
t227 = qJD(1) * t1401 - t364 * t803 - t738 * t798;
t226 = qJD(2) * t874 + t363 * t803 + t758;
t150 = -t648 * t725 + t649 * t726 + t736 * t864 - t737 * t865 + (t1061 * t724 - t735 * t813) * t809;
t149 = t646 * t725 + t647 * t726 + t736 * t866 + t737 * t767 + (t1060 * t724 + t735 * t812) * t809;
t148 = t423 * t771 - t590 * t713 - t1031;
t142 = t421 * t713 + t423 * t714 + t1069;
t99 = qJD(2) * t896 + t269;
t98 = qJD(2) * t897 - t1435;
t74 = -t175 * t771 - t443 * t714 + t571 * t590 + (-t1053 * t421 - t1130) * t1059 + t900;
t73 = t174 * t771 - t443 * t713 - t572 * t590 + (t1053 * t423 + t901) * t1059 + t1097;
t59 = t174 * t714 + t175 * t713 + t421 * t572 - t423 * t571 + t860;
t1 = [t1176 / 0.2e1 + t1174 / 0.2e1 + ((t1334 * t568 + t1337 * t710 + t1340 * t567 + t1272 - t1273) * t533 + t1377 + t1465) * t1227 + (t74 * (-t421 + t898) + t147 * (-t175 + t848) + t73 * (t924 + t423) + t148 * (t875 + t174)) * t985 + (t1444 - t71 + t830) * t72 * t982 + (t269 + ((t216 + t1402) * t812 + (t217 + (t1137 - t1138) * t809 - t218 + t1075) * t813) * t1059) * t949 + (t1024 * t1425 - t1319 * t759 + t1404 * t760 + t1346) * t713 * t1201 + (t26 * (t1196 * t706 + t849 + t937) + t71 * (t1196 * t388 + t826 + t938) + t25 * (t844 + t254) + t72 * (t823 + t115)) * t981 + (t43 * (t1198 * t706 + t880 + t939) + t118 * (t1198 * t388 + t833 + t940) + t42 * (t856 + t420) + t119 * (t829 + t172)) * t983 + (t229 - t863) * t923 + t1175 / 0.2e1 + (t12 * (t1197 * t706 + t1415 + t849) + t57 * (t1197 * t388 - t1414 + t826) + t13 * (t844 + t1106) - t1439 * (t823 + t1123)) * t979 + ((t1425 * t864 + t1349 + t1350 + t1437) * t713 + t1436) * t1207 + ((t1300 * t706 - t1301 * t705 + t1139 + t1140) * t771 - (-t1141 + t1142 + t1437) * t714 + (t1311 * t706 - t1317 * t705 - t1319 * t709 + t1404 * t710 + t1425 * t866 + t1347 + t342 + t343) * t713 + t1365) * t1210 + t1178 / 0.2e1 + t1265 * t1230 + t1266 * t1231 + t255 + t1373 * t1223 + t1374 * t1226 + t1180 / 0.2e1 - t1181 / 0.2e1 + t1143 / 0.2e1 + t1184 / 0.2e1 - t1185 / 0.2e1 + t1146 / 0.2e1 + ((t1334 * t564 + t1337 * t706 - t1340 * t565 + t1271 + t1274) * t533 + t1442) * t1224 + (((t1075 + t1390) * t812 - t1402 * t813 + ((t1137 + t1138) * t812 + t592 * t813 ^ 2) * t809 + t930) * t1059 + t98 + t1435) * t952 - t1179 / 0.2e1 + (t125 + t149) * t951 + t1182 / 0.2e1 - t1183 / 0.2e1 + t1393 + t1394 + (t124 + t150 + t99) * t950 + t1343 * t1221 + t1344 * t1222 + t1361 * t1206 + t1362 * t1209 + (t227 * (-t604 - t776) + t348 * ((-t808 + (-rSges(3,3) - pkin(8)) * t1126) * qJD(1) + t941) + t226 * (t606 + t1258) + t349 * (t946 + t363)) * t987 + t1145 / 0.2e1 + (t230 + t321) * t922 + (-t1072 * t714 - t418 * t771 - t118 + t862) * t119 * t984 + t534 * t1410 + t714 * t1412 + t1173 / 0.2e1 + (t57 - t1443 - t830) * t1439 * t980 + t1144 / 0.2e1 + (-t1334 * t698 + t1337 * t760 - t1340 * t697 + t1270) * t533 * t1215; -(t348 * (-t660 * t803 - t768 * t798) + t349 * (t661 * t803 - t768 * t797) + t322 * (t660 * t812 + t661 * t813) * t1059) * t1048 / 0.2e1 + (t147 * (-t522 * t771 - t711 * t714 + (-t1127 * t421 - t590 * t865) * qJD(3) + t889) + t148 * (t523 * t771 - t711 * t713 + (t1127 * t423 - t590 * t767) * qJD(3) + t918) + t142 * (t522 * t713 + t523 * t714 + (t421 * t767 + t423 * t865) * qJD(3) + t1070)) * t986 - m(5) * ((-t712 * t714 + t889 + (-t524 + t623) * t771 + t1253) * t1235 + (t525 * t771 + t861 + (-t712 - t727) * t713) * t1234 + (t524 * t713 + t932 - (-t525 + t624) * t714) * t1236 + 0.2e1 * (t118 * (t1088 * t1127 - t589 * t865) + t119 * (-t1072 * t767 + t1127 * t420) + t91 * (-t1087 * t865 + t418 * t767)) * qJD(3)) / 0.2e1 + ((-t1063 * t864 - t1064 * t865 - t1125 * t761) * t803 + (t1125 * t928 - t864 * t870 - t865 * t871) * t1059) * t949 + ((t98 + t1281) * t812 + (t99 + t1280) * t813) * qJD(1) * t809 / 0.2e1 - t803 * (t1167 * t761 * t803 + ((t1064 * t811 + t1195 * t762 + t1015) * t803 + (t655 * t991 - t654 * t990 + ((t1195 * t657 + t659 * t811 + t908) * t812 - (t1195 * t656 + t658 * t811 + t909) * t813) * t809) * qJD(2)) * t809) / 0.2e1 + (-t1167 * t863 + t897) * t923 + (t1167 * t150 + t831) * t950 + (t1167 * t149 + t832) * t951 + (t1167 * t321 + t896) * t922 + (t1266 * t734 + (t1028 * t1321 + t1302 * t564 + t1303 * t706 - t1304 * t565 + t1320 * t619 + t1322 * t618) * t668 + t1273 * t627 + t1274 * t626 - (t1028 * t1338 + t1328 * t564 + t1330 * t706 - t1332 * t565 + t1335 * t619 + t1341 * t618) * t534 + (t1028 * t1336 + t1327 * t564 + t1329 * t706 - t1331 * t565 + t1333 * t619 + t1339 * t618) * t533) * t1224 + (t71 * (-t250 * t734 - t317 * t668 + t397 * t626 - t534 * t537 + t820) + t72 * (t254 * t734 + t319 * t668 - t397 * t627 - t533 * t537 + t822) + t68 * (t250 * t627 - t254 * t626 + t317 * t533 + t319 * t534 + t825)) * t982 + (t1264 * t734 + (-t1302 * t698 + t1303 * t760 - t1304 * t697 + t1320 * t723 + t1321 * t927 + t1322 * t722) * t668 + t1269 * t627 + t1270 * t626 - (-t1328 * t698 + t1330 * t760 - t1332 * t697 + t1335 * t723 + t1338 * t927 + t1341 * t722) * t534 + (-t1327 * t698 + t1329 * t760 - t1331 * t697 + t1333 * t723 + t1336 * t927 + t1339 * t722) * t533) * t1215 + (t1265 * t734 + (t1026 * t1321 + t1302 * t568 + t1303 * t710 + t1304 * t567 + t1320 * t621 + t1322 * t620) * t668 + t1271 * t627 + t1272 * t626 - (t1026 * t1338 + t1328 * t568 + t1330 * t710 + t1332 * t567 + t1335 * t621 + t1341 * t620) * t534 + (t1026 * t1336 + t1327 * t568 + t1329 * t710 + t1331 * t567 + t1333 * t621 + t1339 * t620) * t533) * t1227 + (t137 * t1054 - t136 * t1055 + t157 * t1011 + (t1127 * t159 - t140 * t865 + t141 * t767) * qJD(3) - t815 * t866 + (t1297 * t710 + t1298 * t709 + t1299 * t767 - t866 * t867) * t771 - (t1306 * t710 + t1308 * t709 + t1425 * t767 - t866 * t869) * t714 + (t1305 * t710 + t1307 * t709 + t1314 * t767 - t866 * t868) * t713) * t1210 + (t135 * t1054 - t134 * t1055 + t156 * t1011 + (t1127 * t158 - t138 * t865 + t139 * t767) * qJD(3) - t815 * t864 + (t1297 * t706 + t1298 * t705 - t1299 * t865 - t864 * t867) * t771 - (t1306 * t706 + t1308 * t705 - t1425 * t865 - t864 * t869) * t714 + (t1305 * t706 + t1307 * t705 - t1314 * t865 - t864 * t868) * t713) * t1207 + (t1342 * t1011 + ((-t1300 * t962 + t1301 * t961 + t1299 * t811 + (-t699 - t704) * t1195) * t809 + t1297 * t760 + t1298 * t759) * t771 - ((-t1404 * t962 + t1319 * t961 + t1425 * t811 + (-t510 - t520) * t1195) * t809 + t1306 * t760 + t1308 * t759) * t714 + ((-t1311 * t962 + t1317 * t961 + t1314 * t811 + (-t511 - t521) * t1195) * t809 + t1305 * t760 + t1307 * t759) * t713 + (t1345 * t767 - t1346 * t865) * qJD(3)) * t1201 + (t227 * (-t1125 * t732 - t1167 * t604) - t348 * t1167 * t364 + t226 * (-t1126 * t732 + t1167 * t606) + t349 * (t1167 * t363 + t874) + (t348 * (t1061 * t732 - t738 * t813) + 0.2e1 * t322 * (t363 * t813 + t364 * t812 + (t604 * t813 - t606 * t812) * qJD(1))) * t809) * t987 + (t74 * (-t1167 * t421 + t809 * t978 - t989) + t147 * (-t1167 * t175 + (t1061 * t590 + t1084 * t813) * t809 + t936) + t73 * (t1071 * t1126 + t1167 * t423 + t628) + t148 * (t1167 * t174 + t398 + (qJD(1) * t978 + t1084 * t812) * t809) + t59 * ((t421 * t812 + t423 * t813) * t809 + t1067) + t142 * ((t174 * t813 + t175 * t812 + (t421 * t813 + (-t423 - t666) * t812) * qJD(1)) * t809 + t1036)) * t985 + t803 * (t1167 * t260 + t828) / 0.2e1 + (t846 * t1250 + t827 * t1241 + t1033 * t1249 + t1039 * t1240 + t912 * t1251 + t855 * t1242 + ((t933 * t1250 + t934 * t1241 + t1106 * t1251 + t1123 * t1242 + (-t1439 * t933 - t1268) * t1042) * t813 + (t933 * t1249 + t934 * t1240 - 0.2e1 * t1003 + 0.2e1 * t993 + (t992 + t44 * (-t666 + t973)) * t1042) * t812) * t809 + t1275 * t1167) * t1232 + (t57 * (qJD(6) * t620 - t1073 * t534 + t1089 * t626 + t1099 * t668 + t1107 * t734 + t820) - t1439 * (qJD(6) * t618 - t1073 * t533 - t1089 * t627 + t1098 * t668 + t1106 * t734 + t822) + t44 * (qJD(6) * t722 + t1098 * t534 - t1099 * t533 - t1106 * t626 - t1107 * t627 + t825)) * t980 + m(5) * ((-t1167 * t418 + t873) * t1243 + (-t1167 * t173 + t852) * t1235 + (t1167 * t420 + t1081) * t1244 + (t1167 * t172 + t1119) * t1234 + t969 * t1245 + t914 * t1236 + ((t1032 * t1243 + t1035 * t1235 + t420 * t1245 + t172 * t1236 + (t1032 * t119 + t91 * t418) * t1042) * t813 + (t1032 * t1244 + t1035 * t1234 + t418 * t1245 + t173 * t1236 + (t118 * t589 + t91 * (-t420 + t1076)) * t1042) * t812) * t809) / 0.2e1 + ((-t1167 * t250 + t846) * t1246 + (-t1167 * t117 + t827) * t1238 + (t1167 * t254 + t1033) * t1247 + (t115 * t1167 + t1039) * t1237 + t912 * t1248 + t855 * t1239 + ((t970 * t1246 + t974 * t1238 + t254 * t1248 + t115 * t1239 + (t68 * t250 + t72 * t970) * t1042) * t813 + (t970 * t1247 + t974 * t1237 + 0.2e1 * t1186 + 0.2e1 * t1177 + (t71 * t397 + t68 * (-t254 - t575 + t1076)) * t1042) * t812) * t809) * t1233 + t1365 * t1055 / 0.2e1 + ((t1367 * t813 + t1366 * t812 + (t1345 * t813 + t1346 * t812) * qJD(1)) * t809 + t1351 * t1167) * t1200 + ((t1370 * t813 - t1369 * t812 + (t1348 * t813 + t1349 * t812) * qJD(1)) * t809 + t1361 * t1167) * t1206 + ((t1269 * t812 - t1270 * t813) * t809 + t1264 * t1167) * t1220 + ((t1271 * t812 - t1272 * t813) * t809 + t1265 * t1167) * t1230 + ((t1372 * t813 - t1371 * t812 + (t1347 * t812 + t1350 * t813) * qJD(1)) * t809 + t1362 * t1167) * t1209 + ((t1345 * t812 - t1346 * t813) * t809 + t1342 * t1167) * t921 + ((t1273 * t812 - t1274 * t813) * t809 + t1266 * t1167) * t1231 - t1363 * t1011 / 0.2e1 + ((-t1063 * t866 + t1064 * t767 + t1126 * t761) * t803 + (-t1126 * t928 + t767 * t871 - t866 * t870) * t1059) * t952 + ((t1348 * t812 - t1349 * t813) * t809 + t1344 * t1167) * t1222 + ((-t1347 * t813 + t1350 * t812) * t809 + t1343 * t1167) * t1221 + (qJD(2) * t832 + t149 * t803 + t1284) * t1126 / 0.2e1 - (qJD(2) * t831 + t150 * t803 + t1283) * t1125 / 0.2e1 + (qJD(2) * t828 + t1282 + t255) * t1167 / 0.2e1 + t627 * t1410 + t1054 * t1412 + ((t1379 * t813 - t1378 * t812 + (t1269 * t813 + t1270 * t812) * qJD(1)) * t809 + t1368 * t1167) * t1214 + ((t1381 * t813 - t1380 * t812 + (t1273 * t813 + t1274 * t812) * qJD(1)) * t809 + t1373 * t1167) * t1223 + ((t1383 * t813 - t1382 * t812 + (t1271 * t813 + t1272 * t812) * qJD(1)) * t809 + t1374 * t1167) * t1226 - t1375 * t734 / 0.2e1 - t1377 * t626 / 0.2e1; (t147 * (-t489 * t771 - t652 * t714) + t148 * (t494 * t771 - t652 * t713) + t142 * (t489 * t713 + t494 * t714)) * t986 + (t118 * (-t650 * t714 + (-t487 - t488) * t771 + t1080) + t119 * (t492 * t771 + (-t650 - t651) * t713 + t1085) + t91 * (t487 * t713 - (-t492 - t493) * t714 + t1102)) * t984 + (t1376 * t709 + t1377 * t705) * qJD(5) / 0.2e1 + (t1296 * t706 + (t1309 * t564 - t1310 * t565 - t1321 * t705) * t668 - (t1324 * t564 - t1326 * t565 - t1338 * t705) * t534 + (t1323 * t564 - t1325 * t565 - t1336 * t705) * t533 + (-t1266 * t759 - t1273 * t709 - t1274 * t705) * qJD(5)) * t1224 + (t71 * (-t337 * t668 - t509 * t534 + (t250 * t759 - t397 * t705) * qJD(5) + t857) + t72 * (t339 * t668 - t509 * t533 + (-t254 * t759 + t397 * t709) * qJD(5) + t858) + t68 * (t337 * t533 + t339 * t534 + (-t250 * t709 + t254 * t705) * qJD(5) + t859)) * t982 + (t1296 * t760 + (-t1309 * t698 - t1310 * t697 - t1321 * t759) * t668 - (-t1324 * t698 - t1326 * t697 - t1338 * t759) * t534 + (-t1323 * t698 - t1325 * t697 - t1336 * t759) * t533 + (-t1264 * t759 - t1269 * t709 - t1270 * t705) * qJD(5)) * t1215 + (t1296 * t710 + (t1309 * t568 + t1310 * t567 - t1321 * t709) * t668 - (t1324 * t568 + t1326 * t567 - t1338 * t709) * t534 + (t1323 * t568 + t1325 * t567 - t1336 * t709) * t533 + (-t1265 * t759 - t1271 * t709 - t1272 * t705) * qJD(5)) * t1227 + ((-t397 * t864 + t968) * t1246 + (-t202 * t864 + t648 * t397 + t913) * t1238 + (t1289 * t646 + t1083) * t1237 + (-t1254 * t864 + t1086) * t1248 + (-t250 * t646 + t976 - (-t115 + t1118) * t864 + t1254 * t648) * t1239 - (t1038 * t72 - t1289 * t25 + t1177 + t1186) * t1043 + 0.2e1 * (t25 * t887 + t72 * t888 + (-t115 * t72 + t117 * t71 - t25 * t254 + t250 * t26) * t1195 + (t71 * (-t250 + t1078) + t72 * t254) * t1058) * t809) * t1233 + (t968 * t1250 + t913 * t1241 + t1083 * t1240 + t1086 * t1251 + t976 * t1242 + 0.2e1 * (t44 * t973 + t992) * t648 + 0.2e1 * (-t1439 * t971 + t1268) * t646 - 0.2e1 * (t12 * t1089 - t57 * t1117 + t7 * t973 + t44 * (t1118 - t1123)) * t864 - (-t13 * t971 - t1439 * t975 - t1003 + t993) * t1043 + (t887 * t1249 + t888 * t1240 + 0.2e1 * (t57 * (t1078 + t1107) - t1267) * t1058 - t1275 * t1195) * t809) * t1232 - m(7) * ((-t1004 * t710 - t1261 * t534 - t1263 * t668 + t857) * t1241 + (-t1004 * t706 - t1261 * t533 + t1262 * t668 + t858) * t1240 + (-t1004 * t760 + t1262 * t534 + t1263 * t533 + t859) * t1242 + 0.2e1 * ((-t1107 * t57 + t1267) * t759 + (-t1089 * t1439 + t1268) * t709 + (t1106 * t44 - t992) * t705) * qJD(5)) / 0.2e1 + (t1024 * t1293 + t1294 * t760 + t1295 * t759) * t1201 + (t74 * (t1024 * t421 - t590 * t864) + t147 * (-t864 * t443 + t648 * t590 + (-t1058 * t421 + t1195 * t175) * t809) + t73 * (-t1024 * t423 + t590 * t866) + t148 * (t866 * t443 + t646 * t590 + (t1058 * t423 - t1195 * t174) * t809) + t59 * (-t421 * t866 + t423 * t864) + t142 * (t174 * t864 - t175 * t866 - t421 * t646 - t423 * t648)) * t985 + ((t1058 * t1342 - t1195 * t1351) * t809 - t1366 * t866 + t1367 * t864 + t1346 * t648 - t1345 * t646) * t1200 + ((t1058 * t1344 - t1195 * t1361) * t809 + t1369 * t866 + t1370 * t864 + t1349 * t648 - t1348 * t646) * t1206 + ((t1058 * t1343 - t1195 * t1362) * t809 + t1371 * t866 + t1372 * t864 + t1347 * t648 - t1350 * t646) * t1209 + (-t1024 * t1264 - t1269 * t866 - t1270 * t864) * t1220 + (-t1024 * t1265 - t1271 * t866 - t1272 * t864) * t1230 + (t1293 * t864 + t1294 * t706 + t1295 * t705) * t1207 + (t1293 * t866 + t1294 * t710 + t1295 * t709) * t1210 + (-t1024 * t1342 - t1345 * t866 - t1346 * t864) * t921 + (-t1024 * t1266 - t1273 * t866 - t1274 * t864) * t1231 + (t43 * (t1024 * t418 - t589 * t864 + t1082) + t118 * (-t864 * t442 + t648 * t589 + (qJD(2) * t977 + t1195 * t173) * t809 + t1040) + t42 * ((-t1195 * t420 - t1016) * t809 + t1072 * t866) + t119 * (t445 - t1095 * t866 + t1072 * t646 + (t1058 * t420 - t1195 * t172 - t1017) * t809) + t31 * (-t1087 * t864 - t418 * t866 - t424) + t91 * (t1087 * t648 - t1120 * t864 - t173 * t866 - t418 * t646 + t1121)) * t983 + (-t1024 * t1344 - t1348 * t866 - t1349 * t864) * t1222 + (-t1024 * t1343 - t1347 * t864 - t1350 * t866) * t1221 - t1284 * t866 / 0.2e1 - t1283 * t864 / 0.2e1 - t1282 * t1024 / 0.2e1 + t1281 * t648 / 0.2e1 - t1280 * t646 / 0.2e1 + t1051 * t1411 + ((t1058 * t1264 - t1195 * t1368) * t809 + t1378 * t866 + t1379 * t864 + t1270 * t648 - t1269 * t646) * t1214 + ((t1058 * t1266 - t1195 * t1373) * t809 + t1380 * t866 + t1381 * t864 + t1274 * t648 - t1273 * t646) * t1223 + ((t1058 * t1265 - t1195 * t1374) * t809 + t1382 * t866 + t1383 * t864 + t1272 * t648 - t1271 * t646) * t1226 + (t1363 + t1375) * t953; (t1100 * t57 - t1101 * t1439 + t1105 * t44 + t12 * t709 + t13 * t705 + t7 * t759) * m(7) + (t1100 * t71 + t1101 * t72 + t1105 * t68 + t16 * t759 + t25 * t705 + t26 * t709) * m(6) + (t1100 * t118 + t1101 * t119 + t1105 * t91 + t31 * t759 + t42 * t705 + t43 * t709) * m(5); (t12 * (t1089 * t706 + t1107 * t760) + t57 * (t1089 * t388 + t1107 * t696 - t1117 * t706 - t1122 * t760) + t13 * (-t1089 * t710 + t1106 * t760) - t1439 * (-t1089 * t386 + t1106 * t696 + t1117 * t710 + t1123 * t760) + t7 * (-t1106 * t706 - t1107 * t710) + t44 * (-t1106 * t388 - t1107 * t386 + t1122 * t710 - t1123 * t706)) * t979 + (t71 * (-t296 * t668 - t473 * t534) + t72 * (t301 * t668 - t473 * t533) + t68 * (t296 * t533 + t301 * t534)) * t982 + (t26 * (-t250 * t760 + t397 * t706) + t71 * (-t117 * t760 + t202 * t706 - t250 * t696 + t388 * t397) + t25 * (t254 * t760 - t397 * t710) + t72 * (t115 * t760 - t202 * t710 + t254 * t696 - t386 * t397) + t16 * (t250 * t710 - t254 * t706) + t68 * (-t115 * t706 + t117 * t710 + t250 * t386 - t254 * t388)) * t981 + (t57 * (qJD(6) * t568 - t1079 * t534 - t1104 * t668) - t1439 * (qJD(6) * t564 - t1079 * t533 + t1103 * t668) + t44 * (-qJD(6) * t698 + t1103 * t534 + t1104 * t533)) * t980 + (t1266 * t760 + t1273 * t710 + t1274 * t706) * t1231 + (t1265 * t760 + t1271 * t710 + t1272 * t706) * t1230 + t1376 * t386 / 0.2e1 + t1377 * t388 / 0.2e1 + (t1255 * t710 + t1256 * t568 + t1257 * t567) * t1227 + (t1265 * t696 + t1271 * t386 + t1272 * t388 + t1374 * t760 - t1382 * t710 - t1383 * t706) * t1226 + (t1255 * t706 + t1256 * t564 - t1257 * t565) * t1224 + (t1266 * t696 + t1273 * t386 + t1274 * t388 + t1373 * t760 - t1380 * t710 - t1381 * t706) * t1223 + (t1264 * t760 + t1269 * t710 + t1270 * t706) * t1220 + (t1255 * t760 - t1256 * t698 - t1257 * t697) * t1215 + (t1264 * t696 + t1269 * t386 + t1270 * t388 + t1368 * t760 - t1378 * t710 - t1379 * t706) * t1214 + t696 * t1411 + t1387 * t706 / 0.2e1 + t1388 * t710 / 0.2e1 + t1386 * t760 / 0.2e1; (t12 * t567 - t13 * t565 - t7 * t697 - (-t533 * t697 - t567 * t668 + t212) * t1439 + (-t534 * t697 - t565 * t668 + t210) * t57 + (t533 * t565 - t534 * t567 + t432) * t44) * m(7);];
tauc  = t1(:);
