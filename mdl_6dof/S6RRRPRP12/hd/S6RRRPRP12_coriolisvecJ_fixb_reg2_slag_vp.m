% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP12_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:18
% EndTime: 2019-03-09 17:59:45
% DurationCPUTime: 11.53s
% Computational Cost: add. (12537->656), mult. (32354->823), div. (0->0), fcn. (24327->8), ass. (0->298)
t231 = sin(qJ(3));
t229 = sin(pkin(6));
t235 = cos(qJ(2));
t353 = qJD(1) * t235;
t332 = t229 * t353;
t305 = t231 * t332;
t349 = qJD(3) * t231;
t422 = t305 - t349;
t458 = pkin(3) * t422 + qJD(4) * t231;
t383 = cos(pkin(6));
t319 = t235 * t383;
t306 = pkin(1) * t319;
t232 = sin(qJ(2));
t354 = qJD(1) * t229;
t333 = t232 * t354;
t180 = -pkin(8) * t333 + qJD(1) * t306;
t266 = t229 * (pkin(2) * t232 - pkin(9) * t235);
t181 = qJD(1) * t266;
t234 = cos(qJ(3));
t112 = -t231 * t180 + t181 * t234;
t347 = qJD(3) * t234;
t361 = t234 * t235;
t409 = pkin(4) + pkin(9);
t410 = pkin(3) + pkin(10);
t457 = -t409 * t347 + (pkin(4) * t361 - t232 * t410) * t354 - t112;
t318 = t383 * qJD(1);
t272 = t318 + qJD(2);
t340 = qJD(1) * qJD(2);
t321 = t235 * t340;
t301 = t229 * t321;
t456 = t234 * (qJD(3) * t272 + t301);
t408 = pkin(1) * t232;
t221 = t383 * t408;
t381 = qJ(4) * t234;
t293 = pkin(10) * t231 - t381;
t363 = t229 * t235;
t455 = (t221 + (pkin(8) + t293) * t363) * qJD(1) - qJD(3) * t293 + t458;
t230 = sin(qJ(5));
t233 = cos(qJ(5));
t162 = t231 * t333 - t234 * t272;
t211 = -qJD(3) + t332;
t122 = t162 * t230 - t211 * t233;
t164 = t231 * t272 + t234 * t333;
t157 = qJD(5) + t164;
t314 = t122 * t157;
t120 = -t233 * t162 - t211 * t230;
t315 = t120 * t157;
t352 = qJD(2) * t232;
t331 = t229 * t352;
t214 = qJD(1) * t331;
t345 = qJD(5) * t233;
t346 = qJD(5) * t230;
t341 = t164 * qJD(3);
t424 = t231 * t301 + t341;
t67 = -t162 * t345 - t211 * t346 - t233 * t214 - t230 * t424;
t68 = qJD(5) * t122 + t214 * t230 - t233 * t424;
t454 = (t68 + t314) * t233 - (t67 + t315) * t230;
t66 = t68 * t230;
t453 = t120 * t345 + t66;
t451 = t230 * t314;
t356 = pkin(8) * t363 + t221;
t176 = t383 * pkin(9) + t356;
t142 = qJD(2) * pkin(9) + qJD(1) * t176;
t177 = (-pkin(2) * t235 - pkin(9) * t232 - pkin(1)) * t229;
t155 = qJD(1) * t177;
t96 = t142 * t231 - t234 * t155;
t360 = -qJD(4) - t96;
t364 = t229 * t232;
t329 = qJD(3) * t364;
t302 = qJD(1) * t329;
t124 = t231 * t302 - t456;
t117 = t233 * t124;
t412 = t157 ^ 2;
t449 = -t230 * t412 - t117;
t304 = t234 * t332;
t447 = t304 - t347;
t446 = t164 * t211 + t424;
t189 = t231 * t383 + t234 * t364;
t325 = qJD(2) * t363;
t133 = qJD(3) * t189 + t231 * t325;
t188 = t231 * t364 - t234 * t383;
t445 = t162 * t133 + t188 * t424;
t134 = -t231 * t329 + (qJD(3) * t383 + t325) * t234;
t444 = t124 * t188 - t164 * t133 - t134 * t162 - t189 * t424;
t119 = t124 * t231;
t224 = t234 * pkin(9);
t342 = t162 * qJD(3);
t406 = pkin(9) * t231;
t443 = -pkin(9) * t119 + t342 * t406 + (t341 - t424) * t224;
t442 = -t134 * t211 + t229 * ((qJD(1) * t189 + t164) * t352 + t124 * t235);
t441 = t162 * t304 + t164 * t305 + (-t124 - t342) * t234 + (-t424 - t341) * t231;
t149 = t230 * t333 - t233 * t305;
t362 = t231 * t235;
t150 = (t230 * t362 + t232 * t233) * t354;
t390 = t233 * t67;
t440 = t234 * (qJD(5) * (t120 * t233 + t122 * t230) + t66 + t390) - (t120 * t230 - t122 * t233) * t349 + t120 * t150 + t122 * t149;
t348 = qJD(3) * t233;
t297 = t231 * t348 + t149;
t379 = t120 * t211;
t439 = -t297 * t157 + t231 * t68 + t234 * (-t157 * t346 - t117 - t379);
t438 = t211 * t133 - t162 * t331 - t188 * t214 + t363 * t424;
t328 = t211 * t347;
t437 = t354 * (t232 * (qJD(2) * t231 - t164) + t211 * t361) - t328;
t351 = qJD(2) * t234;
t436 = t211 * t349 + t354 * (t232 * (t162 + t351) - t211 * t362);
t226 = t229 ^ 2;
t435 = -0.2e1 * t226 * t340;
t359 = pkin(4) * t164 - t360;
t59 = t211 * t410 + t359;
t141 = -pkin(2) * t272 - t180;
t241 = -t164 * qJ(4) + t141;
t65 = t162 * t410 + t241;
t18 = t230 * t59 + t233 * t65;
t16 = qJ(6) * t157 + t18;
t281 = t410 * t331;
t182 = qJD(2) * t266;
t172 = qJD(1) * t182;
t191 = -pkin(8) * t364 + t306;
t184 = t191 * qJD(2);
t173 = qJD(1) * t184;
t307 = t142 * t347 + t155 * t349 - t234 * t172 + t231 * t173;
t29 = -pkin(4) * t124 - qJD(1) * t281 + t307;
t283 = pkin(8) * t301;
t298 = qJD(2) * t318;
t50 = pkin(3) * t424 + t124 * qJ(4) - t164 * qJD(4) + t298 * t408 + t283;
t36 = pkin(10) * t424 + t50;
t4 = -t230 * t36 + t233 * t29 - t65 * t345 - t59 * t346;
t407 = pkin(5) * t124;
t2 = -t4 + t407;
t434 = -t157 * t16 + t2;
t17 = -t230 * t65 + t233 * t59;
t3 = t230 * t29 + t233 * t36 + t59 * t345 - t346 * t65;
t433 = -t157 * t17 + t3;
t267 = t157 * t18 + t4;
t320 = -qJ(4) * t231 - pkin(2);
t193 = -t234 * t410 + t320;
t212 = t409 * t231;
t400 = t193 * t346 - t212 * t345 + t230 * t457 + t455 * t233;
t431 = t68 - t314;
t103 = t124 * t189;
t430 = t134 * t164 - t103;
t115 = t230 * t124;
t429 = -t157 * t345 + t115;
t428 = t379 + t449;
t264 = t211 * t234;
t427 = -t164 * t264 - t119;
t426 = t233 * t193 + t230 * t212;
t357 = qJ(4) * t347 + (t221 + (pkin(8) - t381) * t363) * qJD(1) + t458;
t374 = t124 * t410;
t203 = t211 * qJ(4);
t97 = t142 * t234 + t155 * t231;
t78 = -pkin(4) * t162 + t97;
t69 = -t203 + t78;
t421 = t157 * t69 + t374;
t108 = -t231 * t176 + t177 * t234;
t101 = pkin(3) * t363 - t108;
t80 = pkin(4) * t189 + pkin(10) * t363 + t101;
t175 = -pkin(2) * t383 - t191;
t248 = -t189 * qJ(4) + t175;
t89 = t188 * t410 + t248;
t399 = t230 * t80 + t233 * t89;
t71 = -t176 * t347 - t177 * t349 + t182 * t234 - t231 * t184;
t41 = pkin(4) * t134 - t281 - t71;
t185 = t356 * qJD(2);
t242 = -t134 * qJ(4) - t189 * qJD(4) + t185;
t49 = t133 * t410 + t242;
t8 = -qJD(5) * t399 - t230 * t49 + t233 * t41;
t401 = qJD(5) * t426 - t455 * t230 + t233 * t457;
t368 = t162 * t211;
t414 = -t234 ^ 2 * t302 + (-t368 - t456) * t231;
t413 = t122 ^ 2;
t411 = t164 ^ 2;
t237 = qJD(1) ^ 2;
t208 = qJ(4) * t214;
t308 = t142 * t349 - t155 * t347 - t231 * t172 - t234 * t173;
t282 = -qJD(4) * t211 - t308;
t46 = -t208 - t282;
t28 = -pkin(4) * t424 - t46;
t9 = t68 * pkin(5) + t67 * qJ(6) - t122 * qJD(6) + t28;
t405 = t230 * t9;
t404 = t233 * t9;
t403 = t447 * qJ(6) - qJD(6) * t231 + t400;
t402 = -t447 * pkin(5) - t401;
t382 = qJ(4) * t162;
t93 = t164 * t410 + t382;
t33 = t230 * t78 + t233 * t93;
t25 = pkin(5) * t120 - qJ(6) * t122 + t69;
t398 = t122 * t25;
t88 = t162 * pkin(3) + t241;
t394 = t164 * t88;
t393 = t230 * t28;
t391 = t233 * t28;
t389 = t410 * t67;
t295 = pkin(5) * t233 + qJ(6) * t230;
t270 = -pkin(4) - t295;
t294 = -pkin(5) * t230 + qJ(6) * t233;
t113 = t234 * t180 + t231 * t181;
t104 = -qJ(4) * t333 - t113;
t95 = -pkin(4) * t305 - t104;
t388 = -pkin(5) * t149 + qJ(6) * t150 + (qJD(5) * t294 + qJD(6) * t230) * t234 + (-pkin(9) + t270) * t349 - t95;
t387 = t453 * t410;
t385 = qJD(5) * t295 - qJD(6) * t233 - t164 * t270 - t360;
t384 = -t409 * t349 - t95;
t380 = qJ(6) * t124;
t378 = t122 * t120;
t377 = t122 * t211;
t376 = t122 * t410;
t371 = t157 * t162;
t369 = t162 * t164;
t366 = t164 * t233;
t365 = t226 * t237;
t358 = qJD(6) - t17;
t109 = t234 * t176 + t231 * t177;
t213 = t234 * pkin(4) + t224;
t355 = t232 ^ 2 - t235 ^ 2;
t350 = qJD(3) * t230;
t344 = qJD(5) * t234;
t343 = qJD(5) * t410;
t339 = t211 * t406;
t338 = pkin(9) * t351;
t335 = t233 * t363;
t327 = t230 * t343;
t326 = t233 * t343;
t324 = t120 ^ 2 - t413;
t323 = -t162 ^ 2 + t411;
t309 = t232 * t235 * t365;
t303 = t211 * t333;
t300 = pkin(1) * t435;
t296 = t230 * t349 - t150;
t135 = t188 * t233 + t230 * t363;
t85 = -t133 * t233 - qJD(5) * t335 + (qJD(5) * t188 + t331) * t230;
t292 = t120 * t85 - t135 * t68;
t15 = -pkin(5) * t157 + t358;
t291 = t15 * t230 + t16 * t233;
t290 = -t17 * t230 + t18 * t233;
t32 = -t230 * t93 + t233 * t78;
t34 = -t230 * t89 + t233 * t80;
t284 = pkin(3) * t214;
t51 = -t284 + t307;
t286 = t51 * t231 - t46 * t234;
t285 = t231 * t307 - t234 * t308;
t130 = -t193 * t230 + t212 * t233;
t274 = t226 * t232 * t321;
t271 = 0.2e1 * t318 + qJD(2);
t100 = qJ(4) * t363 - t109;
t269 = t157 * t366 - t429;
t7 = t230 * t41 + t233 * t49 + t80 * t345 - t346 * t89;
t262 = -t211 * t97 - t307;
t261 = t157 * t25 + t374;
t70 = -t176 * t349 + t177 * t347 + t231 * t182 + t234 * t184;
t90 = -pkin(4) * t188 - t100;
t254 = t120 * t162 + t269;
t253 = pkin(1) * (-t298 + t365);
t136 = -t188 * t230 + t335;
t86 = qJD(5) * t135 + t133 * t230 + t233 * t331;
t252 = t120 * t86 + t122 * t85 + t135 * t67 - t136 * t68;
t251 = t120 * t134 + t124 * t135 + t157 * t85 + t189 * t68;
t250 = t124 + t368;
t249 = pkin(9) * t328 - t214 * t406;
t57 = -qJ(4) * t331 + qJD(4) * t363 - t70;
t245 = (-t120 * t164 + t67) * t233 + t451 - t453;
t42 = -pkin(4) * t133 - t57;
t243 = t233 * t234 * t68 + (-t230 * t344 - t297) * t120;
t207 = -pkin(3) * t234 + t320;
t205 = qJ(4) - t294;
t183 = t356 * qJD(1);
t174 = qJD(1) * t185;
t156 = t234 * t295 + t213;
t132 = (-t211 * t229 - t226 * t353) * t352;
t126 = -pkin(5) * t231 - t130;
t125 = qJ(6) * t231 + t426;
t107 = pkin(3) * t164 + t382;
t106 = -pkin(3) * t333 - t112;
t99 = t188 * pkin(3) + t248;
t94 = t203 - t97;
t92 = pkin(3) * t211 - t360;
t76 = pkin(5) * t122 + qJ(6) * t120;
t64 = t133 * pkin(3) + t242;
t62 = -pkin(3) * t331 - t71;
t60 = -t157 * t264 - t119;
t58 = t134 * t157 - t103;
t43 = -pkin(5) * t135 + qJ(6) * t136 + t90;
t37 = -t67 + t315;
t24 = -pkin(5) * t189 - t34;
t23 = qJ(6) * t189 + t399;
t22 = t122 * t162 + t449;
t21 = pkin(5) * t162 - t32;
t20 = -qJ(6) * t162 + t33;
t19 = -t390 - t451;
t14 = t122 * t86 + t136 * t67;
t13 = t230 * t234 * t67 + (-t233 * t344 + t296) * t122;
t12 = pkin(5) * t85 - qJ(6) * t86 + qJD(6) * t136 + t42;
t11 = -t231 * t67 + t296 * t157 + (-t377 + t429) * t234;
t10 = t122 * t134 + t124 * t136 + t157 * t86 - t189 * t67;
t6 = -pkin(5) * t134 - t8;
t5 = qJ(6) * t134 + qJD(6) * t189 + t7;
t1 = qJD(6) * t157 + t3 - t380;
t26 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t274, t355 * t435, t271 * t325, -0.2e1 * t274, -t271 * t331, 0, -t174 * t383 - t185 * t272 + t232 * t300, -t173 * t383 - t184 * t272 + t235 * t300 (t173 * t235 + t174 * t232 + (-t180 * t235 - t183 * t232) * qJD(2) + (t184 * t235 + t185 * t232 + (-t191 * t235 - t232 * t356) * qJD(2)) * qJD(1)) * t229, t173 * t356 - t174 * t191 - t180 * t185 + t183 * t184, t430, t444, t442, t445, t438, t132, t108 * t214 + t141 * t133 + t185 * t162 + t174 * t188 + t175 * t424 - t71 * t211 + t307 * t363 - t331 * t96, -t124 * t175 + t134 * t141 + t164 * t185 + t174 * t189 + t211 * t70 + (-t235 * t308 + (-qJD(1) * t109 - t97) * t352) * t229, t108 * t124 - t109 * t424 - t97 * t133 + t96 * t134 - t70 * t162 - t71 * t164 + t188 * t308 + t189 * t307, -t108 * t307 - t109 * t308 + t141 * t185 + t174 * t175 + t70 * t97 - t71 * t96, t132, -t442, -t438, t430, t444, t445, t100 * t424 - t101 * t124 + t94 * t133 + t92 * t134 + t57 * t162 + t62 * t164 + t46 * t188 + t51 * t189, t101 * t214 - t88 * t133 - t64 * t162 - t50 * t188 - t62 * t211 + t331 * t92 - t363 * t51 - t424 * t99, t124 * t99 - t134 * t88 - t164 * t64 - t189 * t50 + t211 * t57 + (t235 * t46 + (-qJD(1) * t100 - t94) * t352) * t229, t100 * t46 + t101 * t51 + t50 * t99 + t57 * t94 + t62 * t92 + t64 * t88, t14, -t252, t10, t292, -t251, t58, t120 * t42 - t124 * t34 + t134 * t17 - t135 * t28 + t157 * t8 + t189 * t4 + t68 * t90 + t69 * t85, t122 * t42 + t124 * t399 - t134 * t18 - t136 * t28 - t157 * t7 - t189 * t3 - t67 * t90 + t69 * t86, -t120 * t7 - t122 * t8 + t135 * t3 + t136 * t4 - t17 * t86 - t18 * t85 + t34 * t67 - t399 * t68, t17 * t8 + t18 * t7 + t28 * t90 + t3 * t399 + t34 * t4 + t42 * t69, t14, t10, t252, t58, t251, t292, t12 * t120 + t124 * t24 - t134 * t15 - t135 * t9 - t157 * t6 - t189 * t2 + t25 * t85 + t43 * t68, t1 * t135 - t120 * t5 + t122 * t6 - t136 * t2 + t15 * t86 - t16 * t85 - t23 * t68 - t24 * t67, t1 * t189 - t12 * t122 - t124 * t23 + t134 * t16 + t136 * t9 + t157 * t5 - t25 * t86 + t43 * t67, t1 * t23 + t12 * t25 + t15 * t6 + t16 * t5 + t2 * t24 + t43 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t355 * t365, -t229 * t237 * t319, t309, t272 * t333 - t214, 0, t183 * t272 + t232 * t253 - t283, pkin(8) * t214 + t180 * t272 + t235 * t253, 0, 0, t427, t441, t437, t414, t436, t303, -pkin(2) * t424 + t112 * t211 - t141 * t422 - t183 * t162 - t174 * t234 + t333 * t96 + t249, pkin(2) * t124 - t113 * t211 - t164 * t183 + t174 * t231 + (t141 * t234 - t339) * qJD(3) + (-t141 * t361 + (t97 - t338) * t232) * t354, t112 * t164 + t113 * t162 + t422 * t97 - t447 * t96 + t285 + t443, -pkin(2) * t174 + t112 * t96 - t113 * t97 - t141 * t183 + ((-t231 * t97 + t234 * t96) * qJD(3) + t285) * pkin(9), t303, -t437, -t436, t427, t441, t414, -t104 * t162 - t106 * t164 - t422 * t94 - t447 * t92 + t286 + t443, t106 * t211 + t162 * t357 - t207 * t424 + t50 * t234 - t333 * t92 + t422 * t88 - t249, -t104 * t211 + t124 * t207 - t231 * t50 + t357 * t164 + (-t234 * t88 + t339) * qJD(3) + (t88 * t361 + (t94 + t338) * t232) * t354, -t104 * t94 - t106 * t92 + t207 * t50 - t357 * t88 + ((t231 * t94 + t234 * t92) * qJD(3) + t286) * pkin(9), t13, t440, t11, t243, -t439, t60, -t124 * t130 - t149 * t69 + t213 * t68 + (-t348 * t69 + t4) * t231 - t401 * t157 + t384 * t120 + (-t17 * t211 - t346 * t69 + t391) * t234, t124 * t426 - t150 * t69 - t213 * t67 + (t350 * t69 - t3) * t231 + t400 * t157 + t384 * t122 + (t18 * t211 - t345 * t69 - t393) * t234, t130 * t67 - t426 * t68 + t149 * t18 + t150 * t17 + t401 * t122 + t400 * t120 + t290 * t349 + (t230 * t4 - t233 * t3 + (t17 * t233 + t18 * t230) * qJD(5)) * t234, t130 * t4 - t17 * t401 - t18 * t400 + t213 * t28 + t3 * t426 + t384 * t69, t13, t11, -t440, t60, t439, t243, t124 * t126 - t149 * t25 + t156 * t68 + (-t25 * t348 - t2) * t231 + t402 * t157 + t388 * t120 + (t15 * t211 - t25 * t346 + t404) * t234, -t125 * t68 - t126 * t67 + t149 * t16 - t15 * t150 - t402 * t122 + t403 * t120 + t291 * t349 + (-t1 * t233 - t2 * t230 + (-t15 * t233 + t16 * t230) * qJD(5)) * t234, -t124 * t125 + t150 * t25 + t156 * t67 + (-t25 * t350 + t1) * t231 - t403 * t157 - t388 * t122 + (-t16 * t211 + t25 * t345 + t405) * t234, t1 * t125 + t126 * t2 - t15 * t402 + t156 * t9 - t16 * t403 + t25 * t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, t323, -t250, -t369, -t446, t214, -t141 * t164 + t262, t141 * t162 + t211 * t96 + t308, 0, 0, t214, t250, t446, t369, t323, -t369, pkin(3) * t124 - qJ(4) * t424 + (-t94 - t97) * t164 + (t92 + t360) * t162, t107 * t162 - t262 - 0.2e1 * t284 + t394, t107 * t164 - t162 * t88 + t211 * t360 + 0.2e1 * t208 + t282, -pkin(3) * t51 - qJ(4) * t46 - t107 * t88 + t360 * t94 - t92 * t97, t19, -t454, t22, t120 * t366 + t453, -t254, t371, qJ(4) * t68 + t162 * t17 + t393 + (-t32 + t327) * t157 + t359 * t120 + t421 * t233, -qJ(4) * t67 - t162 * t18 + t391 + (t33 + t326) * t157 + t359 * t122 - t421 * t230, t120 * t33 + t122 * t32 + (-t389 - t267) * t233 + (t164 * t17 - t3 + (t17 - t376) * qJD(5)) * t230 + t387, qJ(4) * t28 - t17 * t32 - t18 * t33 + t359 * t69 - (qJD(5) * t290 + t230 * t3 + t233 * t4) * t410, t19, t22, t454, t371, t254, t233 * t315 + t66, -t15 * t162 + t205 * t68 + t405 + (t21 + t327) * t157 + t385 * t120 + t261 * t233, t120 * t20 - t122 * t21 + (-t389 + t434) * t233 + (-t15 * t164 - t1 + (-t15 - t376) * qJD(5)) * t230 + t387, t16 * t162 + t205 * t67 - t404 + (-t20 - t326) * t157 - t385 * t122 + t261 * t230, -t15 * t21 - t16 * t20 + t205 * t9 + t385 * t25 - (qJD(5) * t291 + t1 * t230 - t2 * t233) * t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, t214 - t369, -t211 ^ 2 - t411, -t211 * t94 + t394 + t51, 0, 0, 0, 0, 0, 0, t428, -t233 * t412 + t115 + t377, t245, t211 * t69 + t230 * t433 + t233 * t267, 0, 0, 0, 0, 0, 0, t428, t245, t269 - t377, t211 * t25 - t434 * t233 + (t15 * t157 + t1) * t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, -t324, t37, -t378, -t431, -t124, -t122 * t69 + t267, t120 * t69 - t433, 0, 0, t378, t37, t324, -t124, t431, -t378, -t120 * t76 + t267 - t398 - 0.2e1 * t407, pkin(5) * t67 - qJ(6) * t68 + (t16 - t18) * t122 + (t15 - t358) * t120, -0.2e1 * t380 - t120 * t25 + t122 * t76 + (0.2e1 * qJD(6) - t17) * t157 + t3, -pkin(5) * t2 + qJ(6) * t1 - t15 * t18 + t16 * t358 - t25 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124 + t378, t37, -t412 - t413, t398 + t434;];
tauc_reg  = t26;
