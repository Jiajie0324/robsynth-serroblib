% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:17
% EndTime: 2019-03-09 17:59:29
% DurationCPUTime: 4.10s
% Computational Cost: add. (4347->379), mult. (11316->654), div. (0->0), fcn. (10349->8), ass. (0->177)
t116 = cos(qJ(3));
t214 = pkin(3) + pkin(10);
t183 = t214 * t116;
t113 = sin(qJ(3));
t186 = t113 * qJ(4);
t217 = t183 + t186;
t213 = pkin(4) + pkin(9);
t109 = t116 ^ 2;
t143 = qJD(3) * (t113 ^ 2 - t109);
t112 = sin(qJ(5));
t106 = t112 ^ 2;
t115 = cos(qJ(5));
t182 = -t115 ^ 2 + t106;
t142 = t182 * qJD(5);
t81 = -pkin(2) - t217;
t91 = t213 * t113;
t205 = t112 * t91 + t115 * t81;
t177 = qJD(3) * t113;
t141 = pkin(3) * t177 - t113 * qJD(4);
t191 = qJ(4) * t116;
t60 = (pkin(10) * t113 - t191) * qJD(3) + t141;
t102 = qJD(3) * t116;
t101 = pkin(9) * t102;
t85 = pkin(4) * t102 + t101;
t30 = -qJD(5) * t205 - t112 * t60 + t115 * t85;
t111 = cos(pkin(6));
t110 = sin(pkin(6));
t117 = cos(qJ(2));
t188 = t110 * t117;
t167 = pkin(8) * t188;
t114 = sin(qJ(2));
t211 = pkin(1) * t114;
t65 = t167 + (pkin(9) + t211) * t111;
t66 = (-pkin(2) * t117 - pkin(9) * t114 - pkin(1)) * t110;
t69 = (pkin(2) * t114 - pkin(9) * t117) * t110 * qJD(2);
t179 = qJD(2) * t117;
t180 = qJD(2) * t114;
t96 = t110 * t180;
t70 = -t111 * pkin(1) * t179 + pkin(8) * t96;
t22 = -t65 * t102 + t113 * t70 + t116 * t69 - t66 * t177;
t149 = t110 * t179;
t189 = t110 * t114;
t160 = t113 * t189;
t49 = -qJD(3) * t160 + (qJD(3) * t111 + t149) * t116;
t13 = t49 * pkin(4) - t214 * t96 - t22;
t71 = (t111 * t211 + t167) * qJD(2);
t75 = t111 * t113 + t116 * t189;
t119 = -t49 * qJ(4) - t75 * qJD(4) + t71;
t48 = qJD(3) * t75 + t113 * t149;
t17 = t214 * t48 + t119;
t144 = -t113 * t65 + t116 * t66;
t37 = pkin(3) * t188 - t144;
t27 = pkin(4) * t75 + pkin(10) * t188 + t37;
t99 = t111 * t116;
t137 = -t99 + t160;
t64 = pkin(8) * t189 + (-pkin(1) * t117 - pkin(2)) * t111;
t35 = t137 * pkin(3) - t75 * qJ(4) + t64;
t33 = t137 * pkin(10) + t35;
t207 = t112 * t27 + t115 * t33;
t4 = -qJD(5) * t207 - t112 * t17 + t115 * t13;
t216 = 0.2e1 * qJD(4);
t215 = 2 * qJD(6);
t212 = t49 * pkin(5);
t210 = pkin(9) * t110;
t154 = qJD(4) * t188;
t21 = -t66 * t102 - t113 * t69 + t116 * t70 + t65 * t177;
t93 = qJ(4) * t96;
t18 = t21 - t93 + t154;
t14 = -pkin(4) * t48 - t18;
t159 = t115 * t188;
t31 = -qJD(5) * t159 - t48 * t115 + (t137 * qJD(5) + t96) * t112;
t50 = t112 * t188 + t137 * t115;
t32 = qJD(5) * t50 + t48 * t112 + t115 * t96;
t51 = -t137 * t112 + t159;
t5 = pkin(5) * t31 - qJ(6) * t32 + qJD(6) * t51 + t14;
t209 = t5 * t112;
t208 = t5 * t115;
t206 = t113 * t66 + t116 * t65;
t204 = qJ(6) * t49;
t203 = t112 * t31;
t202 = t112 * t51;
t201 = t115 * t50;
t134 = pkin(5) * t115 + qJ(6) * t112;
t68 = t134 * qJD(5) - t115 * qJD(6) + qJD(4);
t200 = t116 * t68;
t199 = t14 * t112;
t198 = t14 * t115;
t20 = t48 * pkin(3) + t119;
t197 = t20 * t113;
t196 = t32 * t115;
t133 = -pkin(5) * t112 + qJ(6) * t115;
t73 = t133 * qJD(5) + t112 * qJD(6);
t41 = t73 * t116 + (-t134 - t213) * t177;
t195 = t41 * t112;
t194 = t49 * t113;
t193 = t71 * t113;
t84 = t213 * t177;
t192 = t84 * t112;
t190 = qJD(6) * t75;
t187 = t112 * t214;
t185 = t113 * t214;
t184 = t115 * t214;
t92 = t213 * t116;
t178 = qJD(3) * t112;
t176 = qJD(3) * t115;
t175 = qJD(3) * t117;
t174 = qJD(4) * t116;
t173 = qJD(5) * t112;
t172 = qJD(5) * t115;
t171 = qJD(5) * t116;
t170 = qJD(5) * t214;
t169 = qJD(6) * t113;
t168 = -0.2e1 * pkin(2) * qJD(3);
t166 = pkin(9) * t177;
t165 = pkin(5) * t102;
t164 = t49 * t187;
t163 = t75 * t187;
t162 = t49 * t184;
t161 = t75 * t184;
t158 = qJ(6) * t102;
t105 = t110 ^ 2;
t157 = t105 * t179;
t156 = t113 * t176;
t155 = t115 * t102;
t153 = t112 * t171;
t152 = t112 * t170;
t151 = t115 * t171;
t150 = t115 * t170;
t148 = t113 * t102;
t147 = t112 * t172;
t140 = pkin(3) * t96;
t139 = t114 * t157;
t138 = t112 * t156;
t7 = qJ(6) * t75 + t207;
t9 = -t112 * t33 + t115 * t27;
t8 = -pkin(5) * t75 - t9;
t136 = t112 * t8 + t115 * t7;
t135 = -pkin(3) * t116 - t186;
t43 = qJ(6) * t113 + t205;
t46 = -t112 * t81 + t115 * t91;
t44 = -pkin(5) * t113 - t46;
t131 = t112 * t44 + t115 * t43;
t130 = t112 * t50 - t115 * t51;
t86 = qJ(4) - t133;
t128 = t116 * t86 - t185;
t127 = t185 - t191;
t36 = qJ(4) * t188 - t206;
t38 = t112 * t49 + t75 * t172;
t40 = t115 * t49 - t75 * t173;
t3 = -t112 * t13 - t115 * t17 - t27 * t172 + t33 * t173;
t29 = -t112 * t85 - t115 * t60 - t91 * t172 + t81 * t173;
t126 = t113 * t175 + t116 * t180;
t125 = t113 * t180 - t116 * t175;
t124 = t126 * t110;
t123 = t125 * t110;
t122 = t135 * qJD(3) + t174;
t1 = t190 - t3 + t204;
t2 = -t212 - t4;
t121 = t136 * qJD(5) + t1 * t112 - t2 * t115;
t34 = -t137 * pkin(4) - t36;
t19 = -t22 - t140;
t120 = t19 * t113 - t18 * t116 + (t113 * t36 + t116 * t37) * qJD(3);
t23 = t158 - t29 + t169;
t26 = -t165 - t30;
t6 = qJD(5) * t131 + t23 * t112 - t26 * t115;
t95 = 0.2e1 * t148;
t90 = t214 * t155;
t87 = -pkin(2) + t135;
t78 = t112 * t177 - t151;
t77 = t112 * t102 + t113 * t172;
t76 = -t113 * t173 + t155;
t74 = -qJ(4) * t102 + t141;
t56 = t134 * t116 + t92;
t42 = 0.2e1 * t75 * t49;
t39 = t75 * t102 + t194;
t15 = -t50 * pkin(5) + t51 * qJ(6) + t34;
t10 = [0, 0, 0, 0.2e1 * t139, 0.2e1 * (-t114 ^ 2 + t117 ^ 2) * t105 * qJD(2), 0.2e1 * t111 * t149, -0.2e1 * t111 * t96, 0, -0.2e1 * pkin(1) * t105 * t180 - 0.2e1 * t111 * t71, -0.2e1 * pkin(1) * t157 + 0.2e1 * t111 * t70, t42, -0.2e1 * t49 * t137 - 0.2e1 * t75 * t48, 0.2e1 * (-t117 * t49 + t75 * t180) * t110, -0.2e1 * t137 * t96 + 0.2e1 * t48 * t188, -0.2e1 * t139, 0.2e1 * t64 * t48 - 0.2e1 * t71 * t99 + 0.2e1 * (-t22 * t117 + (t144 * qJD(2) + t193) * t114) * t110, 0.2e1 * t64 * t49 + 0.2e1 * t71 * t75 + 0.2e1 * (-t21 * t117 - t206 * t180) * t110, 0.2e1 * t18 * t137 + 0.2e1 * t19 * t75 + 0.2e1 * t36 * t48 + 0.2e1 * t37 * t49, 0.2e1 * t20 * t99 - 0.2e1 * t35 * t48 + 0.2e1 * (-t19 * t117 + (qJD(2) * t37 - t197) * t114) * t110, -0.2e1 * t20 * t75 - 0.2e1 * t35 * t49 + 0.2e1 * (t117 * t18 - t36 * t180) * t110, 0.2e1 * t18 * t36 + 0.2e1 * t19 * t37 + 0.2e1 * t20 * t35, -0.2e1 * t51 * t32, 0.2e1 * t31 * t51 + 0.2e1 * t32 * t50, 0.2e1 * t32 * t75 - 0.2e1 * t49 * t51, -0.2e1 * t31 * t75 + 0.2e1 * t49 * t50, t42, -0.2e1 * t14 * t50 + 0.2e1 * t31 * t34 + 0.2e1 * t4 * t75 + 0.2e1 * t49 * t9, -0.2e1 * t14 * t51 - 0.2e1 * t207 * t49 + 0.2e1 * t3 * t75 + 0.2e1 * t32 * t34, 0.2e1 * t15 * t31 - 0.2e1 * t2 * t75 - 0.2e1 * t49 * t8 - 0.2e1 * t5 * t50, 0.2e1 * t1 * t50 - 0.2e1 * t2 * t51 - 0.2e1 * t31 * t7 + 0.2e1 * t32 * t8, 0.2e1 * t1 * t75 - 0.2e1 * t15 * t32 + 0.2e1 * t49 * t7 + 0.2e1 * t5 * t51, 0.2e1 * t1 * t7 + 0.2e1 * t15 * t5 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, t149, -t96, 0, -t71, t70, t39, -t113 * t48 + t49 * t116 + (-t75 * t113 - t116 * t137) * qJD(3), t123, t124, 0, -pkin(2) * t48 - t71 * t116 - t125 * t210 + t64 * t177, -pkin(2) * t49 + t64 * t102 - t126 * t210 + t193 (t194 - t116 * t48 + (t113 * t137 + t75 * t116) * qJD(3)) * pkin(9) + t120, pkin(9) * t123 + t20 * t116 - t74 * t137 - t35 * t177 - t87 * t48, pkin(9) * t124 - t35 * t102 - t87 * t49 - t74 * t75 - t197, pkin(9) * t120 + t20 * t87 + t35 * t74, t51 * t151 + (-t116 * t32 - t51 * t177) * t112, t130 * t177 + (t203 - t196 + (-t201 - t202) * qJD(5)) * t116 (t75 * t178 + t32) * t113 + (-qJD(3) * t51 - t38) * t116 (t75 * t176 - t31) * t113 + (qJD(3) * t50 - t40) * t116, t39, t30 * t75 + t92 * t31 + t46 * t49 + t84 * t50 + (-t34 * t176 + t4) * t113 + (qJD(3) * t9 - t34 * t173 + t198) * t116, t29 * t75 + t92 * t32 - t205 * t49 + t84 * t51 + (t34 * t178 + t3) * t113 + (-qJD(3) * t207 - t34 * t172 - t199) * t116, -t26 * t75 + t56 * t31 - t41 * t50 - t44 * t49 + (-t15 * t176 - t2) * t113 + (-qJD(3) * t8 - t15 * t173 + t208) * t116, t23 * t50 - t26 * t51 - t43 * t31 + t44 * t32 + t136 * t177 + (-t1 * t115 - t112 * t2 + (t112 * t7 - t115 * t8) * qJD(5)) * t116, t23 * t75 - t56 * t32 + t41 * t51 + t43 * t49 + (-t15 * t178 + t1) * t113 + (qJD(3) * t7 + t15 * t172 + t209) * t116, t1 * t43 + t15 * t41 + t2 * t44 + t23 * t7 + t26 * t8 + t5 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, -0.2e1 * t143, 0, 0, 0, t113 * t168, t116 * t168, 0, 0.2e1 * t116 * t74 - 0.2e1 * t87 * t177, -0.2e1 * t87 * t102 - 0.2e1 * t113 * t74, 0.2e1 * t87 * t74, -0.2e1 * t106 * t148 + 0.2e1 * t109 * t147, -0.2e1 * t109 * t142 - 0.4e1 * t116 * t138, 0.2e1 * t112 * t143 - 0.2e1 * t113 * t151, 0.2e1 * t113 * t153 + 0.2e1 * t115 * t143, t95, 0.2e1 * (-t92 * t176 + t30) * t113 + 0.2e1 * (qJD(3) * t46 - t84 * t115 - t92 * t173) * t116, 0.2e1 * (t92 * t178 + t29) * t113 + 0.2e1 * (-qJD(3) * t205 - t92 * t172 + t192) * t116, 0.2e1 * (-t56 * t176 - t26) * t113 + 0.2e1 * (-qJD(3) * t44 + t41 * t115 - t56 * t173) * t116, 0.2e1 * t131 * t177 + 0.2e1 * (-t112 * t26 - t115 * t23 + (t112 * t43 - t115 * t44) * qJD(5)) * t116, 0.2e1 * (-t56 * t178 + t23) * t113 + 0.2e1 * (qJD(3) * t43 + t56 * t172 + t195) * t116, 0.2e1 * t23 * t43 + 0.2e1 * t26 * t44 + 0.2e1 * t41 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t48, t96, t22, t21, -t49 * pkin(3) - qJ(4) * t48 - qJD(4) * t137, -t22 - 0.2e1 * t140, -t21 + 0.2e1 * t93 - 0.2e1 * t154, -pkin(3) * t19 - qJ(4) * t18 - qJD(4) * t36, t51 * t173 + t196, -qJD(5) * t130 - t32 * t112 - t115 * t31, t40, -t38, 0, -t162 + qJ(4) * t31 - qJD(4) * t50 + t199 + (t115 * t34 + t163) * qJD(5), t164 + qJ(4) * t32 - qJD(4) * t51 + t198 + (-t112 * t34 + t161) * qJD(5), -t162 + t209 + t86 * t31 - t68 * t50 + (t115 * t15 + t163) * qJD(5) (t214 * t32 + t2) * t115 + (t214 * t31 - t1) * t112 + ((-t214 * t50 - t7) * t115 + (t214 * t51 - t8) * t112) * qJD(5), -t164 - t208 - t86 * t32 + t68 * t51 + (t112 * t15 - t161) * qJD(5), -t121 * t214 + t15 * t68 + t5 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t177, 0, -t101, t166, t122, t101, -t166, t122 * pkin(9), t116 * t142 + t138, 0.4e1 * t116 * t147 - t182 * t177, t76, -t77, 0, -t192 - t90 + (-qJ(4) * t177 + t174) * t115 + (t112 * t127 + t115 * t92) * qJD(5) (qJD(5) * t127 - t84) * t115 + (t217 * qJD(3) - qJD(5) * t92 - t174) * t112, t195 - t90 + (-t86 * t177 + t200) * t115 + (-t112 * t128 + t115 * t56) * qJD(5), -t6 (qJD(5) * t128 - t41) * t115 + (qJD(5) * t56 + t200 + (-t113 * t86 - t183) * qJD(3)) * t112, -t214 * t6 + t41 * t86 + t56 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, qJ(4) * t216, -0.2e1 * t147, 0.2e1 * t142, 0, 0, 0, 0.2e1 * qJ(4) * t172 + 0.2e1 * qJD(4) * t112, -0.2e1 * qJ(4) * t173 + 0.2e1 * qJD(4) * t115, 0.2e1 * t112 * t68 + 0.2e1 * t86 * t172, 0, -0.2e1 * t115 * t68 + 0.2e1 * t173 * t86, 0.2e1 * t86 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t96, 0, t19, 0, 0, 0, 0, 0, t40, -t38, t40, -t203 - t196 + (t201 - t202) * qJD(5), t38, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, 0, t101, 0, 0, 0, 0, 0, t76, -t77, t76, 0, t77, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t31, t49, t4, t3, t4 + 0.2e1 * t212, -pkin(5) * t32 - qJ(6) * t31 + qJD(6) * t50, 0.2e1 * t190 - t3 + 0.2e1 * t204, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, t153 + t156, t102, t30, t29, t30 + 0.2e1 * t165 (-pkin(5) * t177 + qJ(6) * t171) * t112 + (qJ(6) * t177 + (pkin(5) * qJD(5) - qJD(6)) * t116) * t115, 0.2e1 * t158 - t29 + 0.2e1 * t169, -pkin(5) * t26 + qJ(6) * t23 + qJD(6) * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t172, 0, t152, t150, t152, -t73, -t150, -t73 * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t172, -t173, 0, t172, t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, qJ(6) * t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, t32, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t78, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, 0, -t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
