% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRP12_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRP12_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [10x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRRPRP12_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:39
% EndTime: 2019-03-09 17:59:59
% DurationCPUTime: 12.57s
% Computational Cost: add. (8835->643), mult. (22501->818), div. (0->0), fcn. (16776->8), ass. (0->231)
t550 = sin(qJ(3));
t548 = sin(pkin(6));
t554 = cos(qJ(2));
t646 = qJD(1) * t554;
t623 = t548 * t646;
t602 = t550 * t623;
t642 = qJD(3) * t550;
t687 = t602 - t642;
t529 = -qJD(3) + t623;
t551 = sin(qJ(2));
t677 = cos(pkin(6));
t615 = t677 * qJD(1);
t599 = pkin(1) * t615;
t536 = t551 * t599;
t501 = pkin(8) * t623 + t536;
t699 = t687 * pkin(3) + qJD(4) * t550 + t501;
t553 = cos(qJ(3));
t579 = t615 + qJD(2);
t566 = t553 * t579;
t647 = qJD(1) * t548;
t624 = t551 * t647;
t480 = t550 * t624 - t566;
t549 = sin(qJ(5));
t552 = cos(qJ(5));
t632 = qJD(1) * qJD(2);
t617 = t548 * t632;
t598 = t551 * t617;
t638 = qJD(5) * t552;
t639 = qJD(5) * t549;
t482 = t550 * t579 + t553 * t624;
t597 = t554 * t617;
t688 = qJD(3) * t482 + t550 * t597;
t398 = -t480 * t638 - t529 * t639 - t549 * t688 - t552 * t598;
t440 = -t552 * t480 - t529 * t549;
t475 = qJD(5) + t482;
t669 = t440 * t475;
t696 = t398 - t669;
t698 = t696 * MDP(30);
t498 = -pkin(8) * t624 + t554 * t599;
t574 = (pkin(2) * t551 - pkin(9) * t554) * t548;
t499 = qJD(1) * t574;
t611 = -t550 * t498 + t499 * t553;
t641 = qJD(3) * t553;
t662 = t553 * t554;
t680 = pkin(4) + pkin(9);
t681 = pkin(3) + pkin(10);
t697 = (pkin(4) * t662 - t551 * t681) * t647 - t611 - t680 * t641;
t694 = t699 + t529 * (pkin(10) * t550 - qJ(4) * t553);
t693 = t553 * t623 - t641;
t460 = pkin(9) * t579 + t501;
t495 = (-pkin(2) * t554 - pkin(9) * t551 - pkin(1)) * t548;
t473 = qJD(1) * t495;
t423 = t460 * t550 - t553 * t473;
t635 = -qJD(4) - t423;
t683 = t475 ^ 2;
t545 = t548 ^ 2;
t692 = -0.2e1 * t545 * t632;
t691 = MDP(5) * (t551 ^ 2 - t554 ^ 2);
t625 = pkin(1) * t677;
t604 = t551 * t625;
t664 = t548 * t554;
t494 = pkin(8) * t664 + pkin(9) * t677 + t604;
t612 = -t550 * t494 + t495 * t553;
t428 = pkin(3) * t664 - t612;
t665 = t548 * t551;
t507 = t550 * t677 + t553 * t665;
t409 = pkin(4) * t507 + pkin(10) * t664 + t428;
t628 = t550 * t665;
t506 = -t553 * t677 + t628;
t686 = -pkin(8) * t665 + t554 * t625;
t493 = -pkin(2) * t677 - t686;
t560 = -t507 * qJ(4) + t493;
t416 = t506 * t681 + t560;
t690 = t549 * t409 + t552 * t416;
t616 = -qJ(4) * t550 - pkin(2);
t509 = -t553 * t681 + t616;
t530 = t680 * t550;
t651 = t552 * t509 + t549 * t530;
t650 = -qJ(4) * t693 + t699;
t689 = t509 * t639 - t530 * t638 + t549 * t697 + t694 * t552;
t634 = pkin(4) * t482 - t635;
t685 = MDP(27) + MDP(29);
t631 = MDP(28) - MDP(31);
t600 = qJD(3) * t628;
t619 = qJD(2) * t664;
t452 = -t600 + (qJD(3) * t677 + t619) * t553;
t500 = qJD(2) * t574;
t502 = t686 * qJD(2);
t576 = -t494 * t641 - t495 * t642 + t500 * t553 - t550 * t502;
t645 = qJD(2) * t551;
t622 = t548 * t645;
t587 = t681 * t622;
t380 = pkin(4) * t452 - t576 - t587;
t451 = qJD(3) * t507 + t550 * t619;
t503 = pkin(8) * t619 + qJD(2) * t604;
t563 = -qJ(4) * t452 - qJD(4) * t507 + t503;
t386 = t451 * t681 + t563;
t684 = -qJD(5) * t690 + t380 * t552 - t386 * t549;
t682 = t482 ^ 2;
t556 = qJD(1) ^ 2;
t444 = qJD(1) * t600 - qJD(3) * t566 - t553 * t597;
t679 = pkin(5) * t444;
t678 = pkin(9) * t550;
t543 = t553 * pkin(9);
t676 = qJ(4) * t480;
t675 = qJ(6) * t444;
t524 = qJ(4) * t598;
t490 = qJD(1) * t500;
t491 = qJD(1) * t502;
t606 = t460 * t642 - t473 * t641 - t550 * t490 - t553 * t491;
t588 = -qJD(4) * t529 - t606;
t385 = -t524 - t588;
t371 = -pkin(4) * t688 - t385;
t564 = t549 * t598 - t552 * t688;
t442 = t480 * t549 - t529 * t552;
t640 = qJD(5) * t442;
t399 = t564 + t640;
t358 = t399 * pkin(5) + t398 * qJ(6) - t442 * qJD(6) + t371;
t674 = t358 * t549;
t673 = t358 * t552;
t672 = t371 * t552;
t671 = t398 * t552;
t459 = -pkin(2) * t579 - t498;
t559 = -t482 * qJ(4) + t459;
t415 = t480 * pkin(3) + t559;
t670 = t415 * t482;
t668 = t444 * t549;
t439 = t444 * t550;
t667 = t480 * t482;
t666 = t545 * t556;
t663 = t550 * t554;
t437 = t552 * t444;
t661 = t681 * t444;
t660 = qJ(6) * t693 - qJD(6) * t550 + t689;
t659 = -pkin(5) * t693 - qJD(5) * t651 + t694 * t549 - t552 * t697;
t592 = pkin(5) * t552 + qJ(6) * t549;
t577 = -pkin(4) - t592;
t658 = -qJD(5) * t592 + qJD(6) * t552 + t482 * t577 + t635;
t652 = t553 * t498 + t550 * t499;
t431 = -qJ(4) * t624 - t652;
t422 = -pkin(4) * t602 - t431;
t467 = t549 * t624 - t552 * t602;
t468 = (t549 * t663 + t551 * t552) * t647;
t591 = -pkin(5) * t549 + qJ(6) * t552;
t657 = pkin(5) * t467 - qJ(6) * t468 + t422 - (qJD(5) * t591 + qJD(6) * t549) * t553 - (-pkin(9) + t577) * t642;
t424 = t553 * t460 + t550 * t473;
t407 = -pkin(4) * t480 + t424;
t420 = t482 * t681 + t676;
t655 = t549 * t407 + t552 * t420;
t653 = t553 * t494 + t550 * t495;
t649 = -t680 * t642 - t422;
t492 = pkin(8) * t597 + qJD(2) * t536;
t531 = t553 * pkin(4) + t543;
t644 = qJD(2) * t553;
t637 = qJD(5) * t681;
t636 = qJD(6) * t475;
t393 = t529 * t681 + t634;
t397 = t480 * t681 + t559;
t362 = t393 * t552 - t397 * t549;
t633 = qJD(6) - t362;
t630 = t529 * t678;
t629 = pkin(9) * t644;
t627 = t552 * t664;
t621 = t529 * t641;
t620 = t552 * t637;
t605 = t460 * t641 + t473 * t642 - t553 * t490 + t550 * t491;
t372 = -pkin(4) * t444 - qJD(1) * t587 + t605;
t387 = pkin(3) * t688 + t444 * qJ(4) - t482 * qJD(4) + t492;
t375 = pkin(10) * t688 + t387;
t569 = -t549 * t372 - t552 * t375 - t393 * t638 + t397 * t639;
t352 = -t569 + t636 - t675;
t360 = -pkin(5) * t475 + t633;
t614 = -t360 * t482 - t352;
t355 = t552 * t372 - t549 * t375 - t393 * t639 - t397 * t638;
t353 = -t355 + t679;
t363 = t393 * t549 + t397 * t552;
t361 = qJ(6) * t475 + t363;
t613 = -t361 * t482 + t353;
t609 = t442 * t475;
t607 = t545 * t551 * t554 * MDP(4);
t595 = pkin(1) * t692;
t594 = t552 * t642 + t467;
t593 = t549 * t642 - t468;
t589 = pkin(3) * t598;
t586 = t360 * t549 + t361 * t552;
t388 = -t589 + t605;
t584 = -t385 * t553 + t388 * t550;
t583 = t409 * t552 - t416 * t549;
t581 = -t509 * t549 + t530 * t552;
t519 = t529 * qJ(4);
t400 = t407 - t519;
t427 = qJ(4) * t664 - t653;
t453 = t506 * t552 + t549 * t664;
t573 = t529 * t553;
t572 = t363 * t475 + t355;
t571 = -t424 * t529 - t605;
t570 = -t494 * t642 + t495 * t641 + t550 * t500 + t553 * t502;
t568 = t549 * t380 + t552 * t386 + t409 * t638 - t416 * t639;
t368 = pkin(5) * t440 - qJ(6) * t442 + t400;
t565 = t368 * t475 + t661;
t417 = -pkin(4) * t506 - t427;
t562 = t362 * t475 + t569;
t561 = pkin(9) * t621 - t598 * t678;
t392 = -qJ(4) * t622 + qJD(4) * t664 - t570;
t381 = -pkin(4) * t451 - t392;
t523 = -pkin(3) * t553 + t616;
t521 = qJ(4) - t591;
t474 = t553 * t592 + t531;
t454 = -t506 * t549 + t627;
t446 = -pkin(5) * t550 - t581;
t445 = qJ(6) * t550 + t651;
t434 = pkin(3) * t482 + t676;
t433 = -pkin(3) * t624 - t611;
t430 = t444 * t507;
t426 = t506 * pkin(3) + t560;
t421 = t519 - t424;
t419 = pkin(3) * t529 - t635;
t413 = qJD(5) * t453 + t451 * t549 + t552 * t622;
t412 = -t451 * t552 - qJD(5) * t627 + (qJD(5) * t506 + t622) * t549;
t405 = pkin(5) * t442 + qJ(6) * t440;
t396 = pkin(3) * t451 + t563;
t395 = -pkin(3) * t622 - t576;
t382 = -pkin(5) * t453 + qJ(6) * t454 + t417;
t367 = -pkin(5) * t507 - t583;
t366 = qJ(6) * t507 + t690;
t365 = pkin(5) * t480 - t407 * t552 + t420 * t549;
t364 = -qJ(6) * t480 + t655;
t359 = pkin(5) * t412 - qJ(6) * t413 + qJD(6) * t454 + t381;
t357 = -pkin(5) * t452 - t684;
t356 = qJ(6) * t452 + qJD(6) * t507 + t568;
t1 = [(MDP(6) * t619 - MDP(7) * t622) * (0.2e1 * t615 + qJD(2)) + 0.2e1 * t607 * t632 + (t570 * t529 + t503 * t482 - t493 * t444 + t492 * t507 + t459 * t452 + (-t606 * t554 + (-qJD(1) * t653 - t424) * t645) * t548) * MDP(17) + (-t452 * t529 + (t444 * t554 + (qJD(1) * t507 + t482) * t645) * t548) * MDP(13) + (-t387 * t507 + t392 * t529 - t396 * t482 - t415 * t452 + t426 * t444 + (t385 * t554 + (-qJD(1) * t427 - t421) * t645) * t548) * MDP(20) + (-t491 * t677 - t502 * t579 + t554 * t595) * MDP(10) + (-t492 * t677 - t503 * t579 + t551 * t595) * MDP(9) + (-t529 * t548 - t545 * t646) * MDP(15) * t645 + (t452 * t482 - t430) * MDP(11) + (t452 * t475 - t430) * MDP(26) + (t355 * t507 + t362 * t452 - t371 * t453 + t381 * t440 + t417 * t399 + t400 * t412 - t583 * t444 + t475 * t684) * MDP(27) + (t385 * t506 + t388 * t507 + t392 * t480 + t395 * t482 + t419 * t452 + t421 * t451 + t427 * t688 - t428 * t444) * MDP(18) + (-t423 * t622 + t459 * t451 + t503 * t480 + t492 * t506 + t493 * t688 - t529 * t576 + t598 * t612 + t605 * t664) * MDP(16) + (t444 * t506 - t482 * t451 - t452 * t480 - t507 * t688) * MDP(12) + (-t387 * t506 - t388 * t664 - t395 * t529 - t396 * t480 - t415 * t451 + t419 * t622 - t426 * t688 + t428 * t598) * MDP(19) + (t451 * t529 - t480 * t622 - t506 * t598 + t664 * t688) * MDP(14) + (-t363 * t452 - t371 * t454 + t381 * t442 - t417 * t398 + t400 * t413 + t444 * t690 - t475 * t568 + t507 * t569) * MDP(28) + t691 * t692 + (-t399 * t507 - t412 * t475 - t440 * t452 - t444 * t453) * MDP(25) + (t352 * t507 + t356 * t475 + t358 * t454 - t359 * t442 + t361 * t452 - t366 * t444 - t368 * t413 + t382 * t398) * MDP(31) + (-t398 * t507 + t413 * t475 + t442 * t452 + t444 * t454) * MDP(24) + (-t353 * t507 - t357 * t475 - t358 * t453 + t359 * t440 - t360 * t452 + t367 * t444 + t368 * t412 + t382 * t399) * MDP(29) + (-t398 * t453 + t399 * t454 - t412 * t442 - t413 * t440) * MDP(23) + (t352 * t453 - t353 * t454 - t356 * t440 + t357 * t442 + t360 * t413 - t361 * t412 - t366 * t399 - t367 * t398) * MDP(30) + (t398 * t454 + t413 * t442) * MDP(22) + (t352 * t366 + t353 * t367 + t356 * t361 + t357 * t360 + t358 * t382 + t359 * t368) * MDP(32) + (t385 * t427 + t387 * t426 + t388 * t428 + t392 * t421 + t395 * t419 + t396 * t415) * MDP(21); (t387 * t523 - t650 * t415 - t419 * t433 - t421 * t431) * MDP(21) + ((t480 * t642 + t482 * t641 - t439) * MDP(18) + ((t419 * t553 + t421 * t550) * qJD(3) + t584) * MDP(21)) * pkin(9) + (-t482 * t573 - t439) * MDP(11) + (-t475 * t573 - t439) * MDP(26) + (-t581 * t444 + t355 * t550 + t531 * t399 + ((-qJD(5) * t509 - t697) * t552 + (-qJD(5) * t530 + t694) * t549) * t475 + t649 * t440 - t594 * t400 + (-t362 * t529 - t400 * t639 + t672) * t553) * MDP(27) + (-t444 * t553 + t480 * t693 + t687 * t482 - t550 * t688) * MDP(12) + (-t693 * t419 - t687 * t421 - t431 * t480 - t433 * t482 - t543 * t688 + t584) * MDP(18) + (t440 * t468 + t442 * t467 + (-t440 * t549 + t442 * t552) * t642 + (t671 + t399 * t549 + (t440 * t552 + t442 * t549) * qJD(5)) * t553) * MDP(23) + (pkin(1) * t551 * t666 + t501 * t579 - t492) * MDP(9) + (pkin(8) * t598 + t498 * t579 + (-qJD(2) * t615 + t666) * t554 * pkin(1)) * MDP(10) + (-t353 * t550 + t399 * t474 + t444 * t446 + t659 * t475 - t657 * t440 - t594 * t368 + (t360 * t529 - t368 * t639 + t673) * t553) * MDP(29) + (t352 * t550 + t398 * t474 - t444 * t445 - t660 * t475 + t657 * t442 - t593 * t368 + (-t361 * t529 + t368 * t638 + t674) * t553) * MDP(31) + ((-MDP(6) * t554 + MDP(7) * t551) * t548 * t677 - t607) * t556 + (-t360 * t468 + t361 * t467 - t398 * t446 - t399 * t445 - t659 * t442 + t660 * t440 + t586 * t642 + (-t352 * t552 - t353 * t549 + (-t360 * t552 + t361 * t549) * qJD(5)) * t553) * MDP(30) + (t352 * t445 + t353 * t446 + t358 * t474 - t360 * t659 - t361 * t660 - t368 * t657) * MDP(32) + (pkin(2) * t444 + t492 * t550 - t652 * t529 - t501 * t482 + (t459 * t553 - t630) * qJD(3) + (-t459 * t662 + (t424 - t629) * t551) * t647) * MDP(17) + (-t621 + (t529 * t662 + (t550 * qJD(2) - t482) * t551) * t647) * MDP(13) + (-t387 * t550 - t431 * t529 + t444 * t523 + t650 * t482 + (-t415 * t553 + t630) * qJD(3) + (t415 * t662 + (t421 + t629) * t551) * t647) * MDP(20) + (-t399 * t550 + t594 * t475 + (t440 * t529 + t475 * t639 + t437) * t553) * MDP(25) + (-t398 * t550 + t593 * t475 + (-t442 * t529 - t475 * t638 + t668) * t553) * MDP(24) + (t651 * t444 + t569 * t550 - t531 * t398 + t689 * t475 + t649 * t442 + t593 * t400 + (t363 * t529 - t371 * t549 - t400 * t638) * t553) * MDP(28) + (-pkin(2) * t688 + t423 * t624 - t459 * t687 - t501 * t480 - t492 * t553 + t529 * t611 + t561) * MDP(16) + (t387 * t553 + t415 * t687 - t419 * t624 + t433 * t529 + t480 * t650 - t523 * t688 - t561) * MDP(19) + (t398 * t549 * t553 + (-t553 * t638 + t593) * t442) * MDP(22) + t666 * t691 + t529 * MDP(15) * t624 + (t529 * t642 + (-t529 * t663 + (t480 + t644) * t551) * t647) * MDP(14); MDP(11) * t667 + t682 * MDP(12) - t444 * MDP(13) + (-t482 * t529 - t688) * MDP(14) + MDP(15) * t598 + (-t459 * t482 + t571) * MDP(16) + (t423 * t529 + t606) * MDP(17) + (pkin(3) * t444 - qJ(4) * t688 + (-t421 - t424) * t482) * MDP(18) + (-t571 - 0.2e1 * t589 + t670) * MDP(19) + (t434 * t482 + t529 * t635 + 0.2e1 * t524 + t588) * MDP(20) + (-pkin(3) * t388 - qJ(4) * t385 - t415 * t434 - t419 * t424 + t421 * t635) * MDP(21) + (-t549 * t609 - t671) * MDP(22) + ((-t399 - t609) * t552 + (t398 + t669) * t549) * MDP(23) + (-t549 * t683 - t437) * MDP(24) + (-t552 * t683 + t668) * MDP(25) + (qJ(4) * t399 + t634 * t440 + (t371 + (t420 + t637) * t475) * t549 + (t661 + (t400 - t407) * t475) * t552) * MDP(27) + (-qJ(4) * t398 + t672 + (t620 + t655) * t475 + t634 * t442 + (-t400 * t475 - t661) * t549) * MDP(28) + (t674 + t399 * t521 + (t549 * t637 + t365) * t475 - t658 * t440 + t565 * t552) * MDP(29) + (t364 * t440 - t365 * t442 + (-t398 * t681 + (t440 * t681 - t361) * qJD(5) + t613) * t552 + (t399 * t681 + (-t442 * t681 - t360) * qJD(5) + t614) * t549) * MDP(30) + (-t673 + t398 * t521 + (-t364 - t620) * t475 + t658 * t442 + t565 * t549) * MDP(31) + (t358 * t521 - t360 * t365 - t361 * t364 - t658 * t368 - (qJD(5) * t586 + t352 * t549 - t353 * t552) * t681) * MDP(32) + (-t529 * MDP(13) + t459 * MDP(17) + (t419 + t635) * MDP(18) + t434 * MDP(19) - t415 * MDP(20) + t442 * MDP(24) - t440 * MDP(25) + t475 * MDP(26) + t362 * MDP(27) - t363 * MDP(28) - t360 * MDP(29) + t361 * MDP(31) - t480 * MDP(12)) * t480; -t444 * MDP(18) + (t598 - t667) * MDP(19) - t682 * MDP(20) + (t388 + t670) * MDP(21) - t437 * MDP(27) + (-t480 * MDP(18) - MDP(20) * t529 - t421 * MDP(21) + t368 * MDP(32) + t440 * t685 + t631 * t442) * t529 + (-t444 * MDP(29) + t698 + (qJD(5) * t361 - t613) * MDP(32) - t631 * t683) * t552 + ((t442 * t482 - t399 + t640) * MDP(30) + (qJD(5) * t360 - t614) * MDP(32) + t631 * t444 - t685 * t683) * t549; -t696 * MDP(24) + (-t480 * t639 + t529 * t638 - t564) * MDP(25) - t444 * MDP(26) + t572 * MDP(27) + t562 * MDP(28) + (t572 - 0.2e1 * t679) * MDP(29) + (pkin(5) * t398 - qJ(6) * t399) * MDP(30) + (-t562 + 0.2e1 * t636 - 0.2e1 * t675) * MDP(31) + (-pkin(5) * t353 + qJ(6) * t352 - t360 * t363 + t361 * t633 - t368 * t405) * MDP(32) + (t475 * MDP(25) - t400 * MDP(27) - t368 * MDP(29) + (t361 - t363) * MDP(30) + t405 * MDP(31) + MDP(23) * t442) * t442 + (t442 * MDP(22) + t400 * MDP(28) - t405 * MDP(29) + (t360 - t633) * MDP(30) - t368 * MDP(31) - MDP(23) * t440) * t440; (t440 * t442 + t444) * MDP(29) - t698 + (-t442 ^ 2 - t683) * MDP(31) + (-t361 * t475 + t368 * t442 + t353) * MDP(32);];
tauc  = t1;
