% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP12_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP12_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP12_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP12_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:59:17
% EndTime: 2019-03-09 17:59:37
% DurationCPUTime: 7.29s
% Computational Cost: add. (6181->473), mult. (16245->792), div. (0->0), fcn. (14941->8), ass. (0->253)
t136 = cos(qJ(3));
t285 = pkin(3) + pkin(10);
t245 = t285 * t136;
t133 = sin(qJ(3));
t249 = t133 * qJ(4);
t299 = t245 + t249;
t247 = t285 * t133;
t255 = qJ(4) * t136;
t173 = t247 - t255;
t130 = sin(pkin(6));
t137 = cos(qJ(2));
t131 = cos(pkin(6));
t134 = sin(qJ(2));
t252 = t130 * t137;
t281 = pkin(1) * t131;
t94 = pkin(8) * t252 + t134 * t281;
t78 = pkin(9) * t131 + t94;
t267 = t133 * t78;
t253 = t130 * t134;
t86 = t131 * t133 + t136 * t253;
t189 = t86 * pkin(4) + t267;
t215 = -pkin(9) * t134 - pkin(1);
t192 = t136 * t215;
t279 = pkin(2) * t136;
t200 = t279 + t285;
t142 = (t137 * t200 - t192) * t130 + t189;
t242 = qJD(2) * t130;
t204 = t137 * t242;
t248 = t133 * t134;
t217 = t130 * t248;
t58 = -qJD(3) * t217 + (qJD(3) * t131 + t204) * t136;
t174 = -t58 * qJ(4) - t86 * qJD(4);
t81 = t94 * qJD(2);
t145 = t174 + t81;
t57 = qJD(3) * t86 + t133 * t204;
t298 = -qJD(5) * t142 - t285 * t57 - t145;
t132 = sin(qJ(5));
t135 = cos(qJ(5));
t85 = -t131 * t136 + t217;
t59 = t132 * t252 + t135 * t85;
t216 = t135 * t252;
t60 = -t132 * t85 + t216;
t175 = t132 * t59 - t135 * t60;
t239 = qJD(3) * t133;
t241 = qJD(2) * t134;
t114 = t130 * t241;
t37 = qJD(5) * t59 + t114 * t135 + t132 * t57;
t261 = t37 * t135;
t36 = -qJD(5) * t216 - t57 * t135 + (qJD(5) * t85 + t114) * t132;
t32 = t36 * t132;
t297 = t136 * ((t132 * t60 + t135 * t59) * qJD(5) + t261 - t32) - t175 * t239;
t120 = qJD(5) * t135;
t121 = qJD(3) * t136;
t284 = pkin(4) + pkin(9);
t198 = t284 * t121;
t251 = t132 * t133;
t95 = -pkin(2) - t299;
t144 = -t95 * t120 + t135 * t198 - (qJD(3) * t285 + qJD(5) * t284 - qJD(4)) * t251;
t116 = pkin(8) * t253;
t280 = pkin(1) * t137;
t295 = t131 * t280 - t116;
t126 = t132 ^ 2;
t128 = t135 ^ 2;
t244 = t126 - t128;
t158 = qJD(2) * t295;
t129 = t136 ^ 2;
t201 = qJD(3) * (t133 ^ 2 - t129);
t105 = t244 * qJD(5);
t293 = qJD(5) * t175 + t37 * t132 + t135 * t36;
t238 = qJD(3) * t135;
t235 = qJD(5) * t132;
t45 = t135 * t58 - t235 * t86;
t291 = t133 * (t238 * t86 - t36) + t136 * (qJD(3) * t59 - t45);
t290 = -0.2e1 * t130;
t289 = 0.2e1 * t130;
t288 = 0.2e1 * qJD(2);
t287 = 0.2e1 * qJD(4);
t286 = 2 * qJD(6);
t283 = t57 * pkin(3);
t282 = t58 * pkin(5);
t278 = pkin(9) * t130;
t254 = qJD(6) * t86;
t270 = qJ(6) * t58;
t225 = qJD(2) * t281;
t155 = t133 * t137 * t225 + t121 * t78;
t171 = pkin(2) * t137 - t215;
t159 = t171 * t239;
t191 = -pkin(8) * t133 - t279;
t170 = -pkin(3) + t191;
t122 = t136 * pkin(9);
t226 = t137 * t122;
t140 = t58 * pkin(4) + (-t159 + (t226 + (-pkin(10) + t170) * t134) * qJD(2)) * t130 + t155;
t77 = t116 + (-pkin(2) - t280) * t131;
t157 = -t86 * qJ(4) + t77;
t38 = t285 * t85 + t157;
t3 = -t132 * t140 + t135 * t298 + t38 * t235;
t1 = t254 - t3 + t270;
t277 = t1 * t132;
t33 = t135 * t38;
t12 = t132 * t142 + t33;
t9 = qJ(6) * t86 + t12;
t276 = t135 * t9;
t275 = t3 * t132;
t109 = qJ(4) * t114;
t209 = qJD(4) * t252;
t164 = t171 * t130;
t160 = t136 * t164;
t190 = pkin(2) * t134 - pkin(9) * t137;
t25 = -t133 * t190 * t242 + qJD(3) * t160 - t136 * t158 + t239 * t78;
t21 = -t109 + t25 + t209;
t17 = -pkin(4) * t57 - t21;
t5 = pkin(5) * t36 - qJ(6) * t37 + qJD(6) * t60 + t17;
t274 = t5 * t132;
t273 = t5 * t135;
t272 = -t120 * t59 + t32;
t233 = qJD(5) * t285;
t205 = t135 * t233;
t250 = t132 * t285;
t271 = -t205 * t59 + t250 * t36;
t48 = -t133 * t164 + t136 * t78;
t56 = t135 * t95 + t251 * t284;
t269 = t12 * t135;
t268 = t132 * t95;
t183 = pkin(5) * t135 + qJ(6) * t132;
t80 = qJD(5) * t183 - t135 * qJD(6) + qJD(4);
t266 = t136 * t80;
t265 = t285 * t37;
t264 = t285 * t60;
t263 = t17 * t132;
t262 = t17 * t135;
t182 = -pkin(5) * t132 + qJ(6) * t135;
t83 = qJD(5) * t182 + t132 * qJD(6);
t46 = t83 * t136 + (-t183 - t284) * t239;
t260 = t46 * t132;
t259 = t57 * t136;
t258 = t58 * t133;
t99 = t284 * t239;
t257 = t99 * t132;
t256 = qJ(4) * t132;
t246 = t135 * t285;
t108 = pkin(4) * t136 + t122;
t240 = qJD(3) * t132;
t237 = qJD(3) * t137;
t236 = qJD(4) * t136;
t234 = qJD(5) * t136;
t232 = qJD(6) * t133;
t231 = t133 * qJD(4);
t230 = -0.2e1 * t59 * t36;
t229 = 0.2e1 * t85 * t57;
t49 = 0.2e1 * t86 * t58;
t228 = -0.2e1 * pkin(2) * qJD(3);
t224 = pkin(9) * t239;
t223 = pkin(9) * t121;
t222 = t58 * t250;
t221 = t86 * t250;
t220 = t58 * t246;
t219 = t86 * t246;
t218 = t135 * t284;
t214 = qJ(6) * t121;
t125 = t130 ^ 2;
t213 = t125 * t241;
t212 = t132 * t121;
t211 = t133 * t238;
t210 = t135 * t121;
t208 = t132 * t234;
t207 = t132 * t233;
t206 = t135 * t234;
t203 = t133 * t121;
t202 = t132 * t120;
t199 = t133 * t218;
t197 = t129 * t202;
t196 = t137 * t213;
t195 = t132 * t211;
t188 = t36 * t60 + t37 * t59;
t187 = t36 * t86 - t58 * t59;
t11 = -t132 * t38 + t135 * t142;
t10 = -t86 * pkin(5) - t11;
t186 = t10 * t132 + t276;
t184 = -pkin(3) * t136 - t249;
t181 = -t11 * t132 + t269;
t51 = qJ(6) * t133 + t56;
t52 = t268 + (-t218 - pkin(5)) * t133;
t178 = t132 * t52 + t135 * t51;
t55 = t199 - t268;
t177 = -t132 * t55 + t135 * t56;
t101 = qJ(4) - t182;
t172 = t101 * t136 - t247;
t41 = qJ(4) * t252 - t48;
t169 = -t137 * t57 + t241 * t85;
t168 = -t137 * t58 + t241 * t86;
t167 = t239 * t85 - t259;
t44 = t121 * t86 + t258;
t20 = t235 * t60 + t261;
t43 = t120 * t86 + t132 * t58;
t34 = t95 * t235 - t135 * (qJD(3) * t173 - t231) - t132 * t198 - qJD(5) * t199;
t165 = -0.2e1 * t57 * t86 - 0.2e1 * t58 * t85;
t163 = t133 * t237 + t136 * t241;
t162 = t133 * t241 - t136 * t237;
t39 = -pkin(4) * t85 - t41;
t161 = -t20 - t272;
t74 = t163 * t130;
t73 = t162 * t130;
t154 = qJD(3) * t184 + t236;
t16 = t135 * t140;
t139 = -t38 * t120 + t132 * t298 + t16;
t2 = -t139 - t282;
t153 = qJD(5) * t186 - t2 * t135 + t277;
t4 = -t33 * qJD(5) + t16 + (-t57 * pkin(10) - t134 * t225 - t174 - t283 - t189 * qJD(5) + (qJD(5) * t192 + (-pkin(8) * qJD(2) - qJD(5) * t200) * t137) * t130) * t132;
t152 = qJD(5) * t181 + t4 * t135 - t275;
t151 = -t133 * t57 + t58 * t136 + (-t133 * t86 - t136 * t85) * qJD(3);
t23 = (-t159 + (t134 * t170 + t226) * qJD(2)) * t130 + t155;
t42 = t267 + (t137 * pkin(3) + t136 * t171) * t130;
t150 = t23 * t133 - t21 * t136 + (t133 * t41 + t136 * t42) * qJD(3);
t26 = (t159 + (pkin(8) * t248 + t136 * t190) * qJD(2)) * t130 - t155;
t47 = -t160 - t267;
t149 = -t26 * t133 - t25 * t136 + (-t133 * t48 - t136 * t47) * qJD(3);
t27 = t214 - t34 + t232;
t30 = (-pkin(5) - t256) * t121 - t144;
t6 = qJD(5) * t178 + t27 * t132 - t30 * t135;
t35 = qJ(4) * t212 + t144;
t7 = qJD(5) * t177 - t132 * t34 + t135 * t35;
t147 = t59 * t208 + (t136 * t36 + t239 * t59) * t135;
t146 = (t258 - t259 + (t133 * t85 + t136 * t86) * qJD(3)) * pkin(9);
t124 = qJ(4) * t287;
t113 = -0.2e1 * t202;
t112 = 0.2e1 * t202;
t111 = -0.2e1 * t203;
t110 = 0.2e1 * t203;
t107 = t285 * t210;
t102 = -pkin(2) + t184;
t100 = -0.2e1 * t196;
t97 = -0.2e1 * t201;
t90 = t132 * t239 - t206;
t89 = t120 * t133 + t212;
t88 = t208 + t211;
t87 = -t133 * t235 + t210;
t84 = -t231 + (pkin(3) * t133 - t255) * qJD(3);
t70 = t136 * t183 + t108;
t69 = -0.2e1 * t128 * t203 - 0.2e1 * t197;
t68 = -0.2e1 * t126 * t203 + 0.2e1 * t197;
t66 = -t234 * t244 - t195;
t65 = t133 * t208 + t135 * t201;
t64 = 0.4e1 * t136 * t202 - t239 * t244;
t62 = 0.2e1 * t132 * t201 - 0.2e1 * t133 * t206;
t61 = -t105 * t129 - 0.2e1 * t136 * t195;
t40 = t85 * pkin(3) + t157;
t24 = t145 + t283;
t22 = -0.2e1 * t60 * t37;
t18 = -pkin(5) * t59 + qJ(6) * t60 + t39;
t14 = 0.2e1 * t37 * t86 - 0.2e1 * t58 * t60;
t13 = t60 * t206 + (-t136 * t37 - t239 * t60) * t132;
t8 = (t240 * t86 + t37) * t133 + (-qJD(3) * t60 - t43) * t136;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t196 (-t134 ^ 2 + t137 ^ 2) * t125 * t288, 0.2e1 * t131 * t204, t100, -0.2e1 * t131 * t114, 0, -0.2e1 * pkin(1) * t213 - 0.2e1 * t131 * t81 (-t125 * t280 - t131 * t295) * t288, -0.2e1 * t134 * t242 * t94 + 0.2e1 * t253 * t81, 0.2e1 * t158 * t94 - 0.2e1 * t295 * t81, t49, t165, t168 * t289, t229, t169 * t290, t100, 0.2e1 * t77 * t57 + 0.2e1 * t81 * t85 + 0.2e1 * (-t137 * t26 + t241 * t47) * t130, 0.2e1 * t77 * t58 + 0.2e1 * t81 * t86 + 0.2e1 * (-t137 * t25 - t241 * t48) * t130, 0.2e1 * t25 * t85 - 0.2e1 * t26 * t86 - 0.2e1 * t47 * t58 - 0.2e1 * t48 * t57, -0.2e1 * t25 * t48 + 0.2e1 * t26 * t47 + 0.2e1 * t77 * t81, t100, t168 * t290, t169 * t289, t49, t165, t229, 0.2e1 * t21 * t85 + 0.2e1 * t23 * t86 + 0.2e1 * t41 * t57 + 0.2e1 * t42 * t58, -0.2e1 * t24 * t85 - 0.2e1 * t40 * t57 + 0.2e1 * (-t137 * t23 + t241 * t42) * t130, -0.2e1 * t24 * t86 - 0.2e1 * t40 * t58 + 0.2e1 * (t137 * t21 - t241 * t41) * t130, 0.2e1 * t21 * t41 + 0.2e1 * t23 * t42 + 0.2e1 * t24 * t40, t22, 0.2e1 * t188, t14, t230, -0.2e1 * t187, t49, 0.2e1 * t11 * t58 - 0.2e1 * t17 * t59 + 0.2e1 * t36 * t39 + 0.2e1 * t4 * t86, -0.2e1 * t12 * t58 - 0.2e1 * t17 * t60 + 0.2e1 * t3 * t86 + 0.2e1 * t37 * t39, -0.2e1 * t11 * t37 - 0.2e1 * t12 * t36 - 0.2e1 * t3 * t59 + 0.2e1 * t4 * t60, 0.2e1 * t11 * t4 - 0.2e1 * t12 * t3 + 0.2e1 * t17 * t39, t22, t14, -0.2e1 * t188, t49, 0.2e1 * t187, t230, -0.2e1 * t10 * t58 + 0.2e1 * t18 * t36 - 0.2e1 * t2 * t86 - 0.2e1 * t5 * t59, 0.2e1 * t1 * t59 + 0.2e1 * t10 * t37 - 0.2e1 * t2 * t60 - 0.2e1 * t36 * t9, 0.2e1 * t1 * t86 - 0.2e1 * t18 * t37 + 0.2e1 * t5 * t60 + 0.2e1 * t58 * t9, 0.2e1 * t1 * t9 + 0.2e1 * t10 * t2 + 0.2e1 * t18 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, 0, -t114, 0, -t81, -t158, 0, 0, t44, t151, t73, t167, t74, 0, -pkin(2) * t57 - t81 * t136 - t162 * t278 + t239 * t77, -pkin(2) * t58 + t121 * t77 + t81 * t133 - t163 * t278, t146 + t149, -t81 * pkin(2) + pkin(9) * t149, 0, -t73, -t74, t44, t151, t167, t146 + t150, pkin(9) * t73 - t102 * t57 + t24 * t136 - t239 * t40 - t84 * t85, pkin(9) * t74 - t102 * t58 - t121 * t40 - t24 * t133 - t84 * t86, pkin(9) * t150 + t24 * t102 + t40 * t84, t13, -t297, t8, t147, t291, t44, t108 * t36 + t35 * t86 + t55 * t58 + t99 * t59 + (-t238 * t39 + t4) * t133 + (qJD(3) * t11 - t235 * t39 + t262) * t136, t108 * t37 + t34 * t86 - t56 * t58 + t99 * t60 + (t240 * t39 + t3) * t133 + (-qJD(3) * t12 - t120 * t39 - t263) * t136, -t34 * t59 + t35 * t60 - t56 * t36 - t55 * t37 + t181 * t239 + (t132 * t4 + t135 * t3 + (t11 * t135 + t12 * t132) * qJD(5)) * t136, t108 * t17 + t11 * t35 - t12 * t34 - t3 * t56 - t39 * t99 + t4 * t55, t13, t8, t297, t44, -t291, t147, -t30 * t86 + t70 * t36 - t46 * t59 - t52 * t58 + (-t18 * t238 - t2) * t133 + (-qJD(3) * t10 - t18 * t235 + t273) * t136, t27 * t59 - t30 * t60 - t51 * t36 + t52 * t37 + t186 * t239 + (-t1 * t135 - t132 * t2 + (-t10 * t135 + t132 * t9) * qJD(5)) * t136, t27 * t86 - t70 * t37 + t46 * t60 + t51 * t58 + (-t18 * t240 + t1) * t133 + (qJD(3) * t9 + t120 * t18 + t274) * t136, t1 * t51 + t10 * t30 + t18 * t46 + t2 * t52 + t27 * t9 + t5 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t97, 0, t111, 0, 0, t133 * t228, t136 * t228, 0, 0, 0, 0, 0, t110, t97, t111, 0, -0.2e1 * t102 * t239 + 0.2e1 * t136 * t84, -0.2e1 * t102 * t121 - 0.2e1 * t133 * t84, 0.2e1 * t102 * t84, t68, 0.2e1 * t61, t62, t69, 0.2e1 * t65, t110, 0.2e1 * (-t108 * t238 + t35) * t133 + 0.2e1 * (qJD(3) * t55 - t108 * t235 - t99 * t135) * t136, 0.2e1 * (t108 * t240 + t34) * t133 + 0.2e1 * (-qJD(3) * t56 - t108 * t120 + t257) * t136, 0.2e1 * t177 * t239 + 0.2e1 * (t132 * t35 + t135 * t34 + (t132 * t56 + t135 * t55) * qJD(5)) * t136, -0.2e1 * t108 * t99 - 0.2e1 * t34 * t56 + 0.2e1 * t35 * t55, t68, t62, -0.2e1 * t61, t110, -0.2e1 * t65, t69, 0.2e1 * (-t238 * t70 - t30) * t133 + 0.2e1 * (-qJD(3) * t52 + t46 * t135 - t235 * t70) * t136, 0.2e1 * t178 * t239 + 0.2e1 * (-t132 * t30 - t135 * t27 + (t132 * t51 - t135 * t52) * qJD(5)) * t136, 0.2e1 * (-t240 * t70 + t27) * t133 + 0.2e1 * (qJD(3) * t51 + t120 * t70 + t260) * t136, 0.2e1 * t27 * t51 + 0.2e1 * t30 * t52 + 0.2e1 * t46 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, 0, -t57, t114, t26, t25, 0, 0, t114, -t58, t57, 0, 0, 0, -pkin(3) * t58 - qJ(4) * t57 - qJD(4) * t85 (-t159 + (t226 + (-0.2e1 * pkin(3) + t191) * t134) * qJD(2)) * t130 + t155, 0.2e1 * t109 - t25 - 0.2e1 * t209, -pkin(3) * t23 - qJ(4) * t21 - qJD(4) * t41, t20, -t293, t45, t272, -t43, 0, -t220 + qJ(4) * t36 - qJD(4) * t59 + t263 + (t135 * t39 + t221) * qJD(5), t222 + qJ(4) * t37 - qJD(4) * t60 + t262 + (-t132 * t39 + t219) * qJD(5), t275 + (-t4 + t265) * t135 + (-t269 + (t11 + t264) * t132) * qJD(5) + t271, t17 * qJ(4) + t39 * qJD(4) - t152 * t285, t20, t45, t293, 0, t43, t272, -t220 + t101 * t36 + t274 - t80 * t59 + (t135 * t18 + t221) * qJD(5), -t277 + (t2 + t265) * t135 + (-t276 + (-t10 + t264) * t132) * qJD(5) + t271, -t222 - t101 * t37 - t273 + t80 * t60 + (t132 * t18 - t219) * qJD(5), t5 * t101 - t153 * t285 + t18 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, 0, -t239, 0, -t223, t224, 0, 0, 0, -t121, t239, 0, 0, 0, t154, t223, -t224, t154 * pkin(9), -t66, t64, t87, t66, -t89, 0, -t257 - t107 + (-qJ(4) * t239 + t236) * t135 + (t108 * t135 + t132 * t173) * qJD(5) (qJD(5) * t173 - t99) * t135 + (qJD(3) * t299 - qJD(5) * t108 - t236) * t132, -t7, -t99 * qJ(4) + t108 * qJD(4) - t285 * t7, -t66, t87, -t64, 0, t89, t66, t260 - t107 + (-t101 * t239 + t266) * t135 + (-t132 * t172 + t135 * t70) * qJD(5), -t6 (qJD(5) * t172 - t46) * t135 + (qJD(5) * t70 + t266 + (-t101 * t133 - t245) * qJD(3)) * t132, t46 * t101 - t285 * t6 + t70 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, t124, t113, 0.2e1 * t105, 0, t112, 0, 0, 0.2e1 * qJ(4) * t120 + 0.2e1 * qJD(4) * t132, -0.2e1 * qJ(4) * t235 + 0.2e1 * qJD(4) * t135, 0, t124, t113, 0, -0.2e1 * t105, 0, 0, t112, 0.2e1 * t101 * t120 + 0.2e1 * t132 * t80, 0, 0.2e1 * t101 * t235 - 0.2e1 * t135 * t80, 0.2e1 * t101 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t114, 0, t23, 0, 0, 0, 0, 0, 0, t45, -t43, t161, t152, 0, 0, 0, 0, 0, 0, t45, t161, t43, t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, 0, 0, t223, 0, 0, 0, 0, 0, 0, t87, -t89, 0, t7, 0, 0, 0, 0, 0, 0, t87, 0, t89, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, -t36, t58, t4, t3, 0, 0, 0, t37, 0, t58, t36, 0, t139 + 0.2e1 * t282, -pkin(5) * t37 - qJ(6) * t36 + qJD(6) * t59, 0.2e1 * t254 - t3 + 0.2e1 * t270, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, t88, t121, t35, t34, 0, 0, 0, t90, 0, t121, -t88, 0 (0.2e1 * pkin(5) + t256) * t121 + t144 (-pkin(5) * t239 + qJ(6) * t234) * t132 + (qJ(6) * t239 + (pkin(5) * qJD(5) - qJD(6)) * t136) * t135, 0.2e1 * t214 - t34 + 0.2e1 * t232, -pkin(5) * t30 + qJ(6) * t27 + qJD(6) * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, -t120, 0, t207, t205, 0, 0, 0, -t235, 0, 0, t120, 0, t207, -t83, -t205, -t83 * t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, -t120, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, t120, t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, qJ(6) * t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t37, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, t90, 0, t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, -t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t15;
