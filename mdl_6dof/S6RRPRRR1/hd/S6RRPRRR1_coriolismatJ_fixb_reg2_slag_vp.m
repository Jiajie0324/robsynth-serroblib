% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:14:37
% EndTime: 2019-03-09 13:15:40
% DurationCPUTime: 55.02s
% Computational Cost: add. (60627->1005), mult. (114856->1222), div. (0->0), fcn. (141378->10), ass. (0->761)
t1284 = qJD(2) + qJD(4);
t1137 = cos(qJ(5));
t1136 = sin(qJ(4));
t1138 = cos(qJ(4));
t1115 = sin(pkin(11));
t675 = sin(qJ(2));
t1116 = cos(pkin(11));
t677 = cos(qJ(2));
t830 = t1116 * t677;
t640 = t1115 * t675 - t830;
t829 = t1115 * t677;
t642 = t1116 * t675 + t829;
t1208 = -t1136 * t642 - t1138 * t640;
t674 = sin(qJ(5));
t726 = -t1136 * t640 + t1138 * t642;
t1340 = t1137 * t1208 - t674 * t726;
t1066 = t1340 ^ 2;
t1185 = t1137 * t726;
t1237 = t674 * t1208;
t1257 = t1185 + t1237;
t1310 = t1257 ^ 2;
t1341 = -t1066 + t1310;
t673 = sin(qJ(6));
t1375 = t1341 * t673;
t1380 = qJD(1) * t1375;
t1243 = t673 * t1340;
t1143 = -t673 / 0.2e1;
t1320 = t1340 * t1143;
t1343 = t1243 / 0.2e1 + t1320;
t275 = t1343 * qJD(6);
t1385 = t275 - t1380;
t676 = cos(qJ(6));
t672 = t676 ^ 2;
t1323 = t672 * t1340;
t1348 = -t1323 / 0.2e1;
t671 = t673 ^ 2;
t1324 = t671 * t1340;
t471 = t1324 / 0.2e1;
t1371 = t1348 + t471;
t1347 = t1323 / 0.2e1;
t1145 = t671 / 0.2e1;
t858 = t1340 * t1145;
t1372 = t1347 - t858;
t1376 = t1372 + t1371;
t1384 = qJD(5) * t1376;
t1223 = qJD(4) + qJD(5);
t828 = qJD(2) + t1223;
t1322 = t676 * t1340;
t1349 = t1322 / 0.2e1;
t1350 = -t1322 / 0.2e1;
t1355 = t1350 + t1349;
t1379 = qJD(6) * t1355;
t1374 = t1341 * t676;
t1381 = qJD(1) * t1374;
t1383 = t1379 + t1381;
t1346 = -t1324 / 0.2e1;
t1024 = t1346 + t1347;
t1377 = t1372 + t1024;
t1218 = -0.2e1 * t1257;
t669 = qJD(6) * t676;
t657 = t673 * t669;
t442 = t657 * t1218;
t1382 = qJD(5) * t1377 + t442;
t1378 = qJD(2) + qJD(5);
t821 = t673 * t1349;
t1373 = t1347 + t471;
t1370 = t828 * t1340;
t1297 = t676 * t1257;
t1330 = t1297 / 0.2e1;
t1331 = -t1297 / 0.2e1;
t1334 = t1330 + t1331;
t1369 = qJD(2) * t1334;
t1299 = t673 * t1257;
t1328 = t1299 / 0.2e1;
t1329 = -t1299 / 0.2e1;
t1335 = t1328 + t1329;
t1368 = qJD(2) * t1335;
t1353 = 0.2e1 * t1328;
t1367 = qJD(2) * t1353;
t1366 = qJD(3) * t1340;
t1365 = qJD(3) * t1353;
t1364 = qJD(4) * t1335;
t1352 = 0.2e1 * t1330;
t1363 = qJD(4) * t1352;
t1362 = qJD(4) * t1353;
t1179 = qJD(5) * t1353;
t1361 = t1334 * qJD(1);
t1360 = t1334 * qJD(3);
t1359 = t1335 * qJD(1);
t1314 = t1335 * qJD(3);
t1358 = t1340 * qJD(1);
t1357 = t1341 * qJD(1);
t1356 = t1353 * qJD(1);
t820 = t1346 + t1348;
t1354 = pkin(5) * t1350 + pkin(10) * t1331;
t813 = pkin(2) * t1116 + pkin(3);
t730 = t1138 * t813;
t887 = t1115 * pkin(2);
t785 = t1136 * t887;
t632 = t785 - t730;
t1043 = t674 * t632;
t633 = t1136 * t813 + t1138 * t887;
t623 = t1137 * t633;
t572 = t623 - t1043;
t1351 = -t572 / 0.2e1;
t1332 = t1340 / 0.2e1;
t1345 = pkin(5) * t1332;
t1342 = t1257 * t1358;
t1339 = qJD(6) * t1243 + t1380;
t1338 = -qJD(6) * t1322 - t1381;
t1132 = pkin(10) * t1340;
t1307 = t1257 * pkin(5);
t319 = t1307 - t1132;
t1337 = t1367 + t1383;
t1248 = t1185 / 0.2e1;
t1256 = t1248 + t1237 / 0.2e1;
t1231 = qJD(6) * t1256;
t1288 = t1257 * qJD(1);
t1319 = t1340 * t1288;
t1336 = -t1319 + t1231;
t1333 = pkin(5) * t1320 + pkin(10) * t1329;
t1246 = pkin(9) * t1208;
t1125 = t642 * pkin(8);
t1123 = -qJ(3) - pkin(7);
t809 = t1123 * t1116;
t762 = t675 * t809;
t606 = t1123 * t829 + t762;
t694 = t606 - t1125;
t686 = t1136 * t694;
t1127 = t640 * pkin(8);
t808 = t1123 * t1115;
t761 = t675 * t808;
t608 = -t1123 * t830 + t761;
t695 = t608 - t1127;
t689 = t1138 * t695;
t422 = t689 + t686;
t351 = t422 + t1246;
t1048 = t674 * t351;
t1216 = pkin(9) * t726;
t687 = t1136 * t695;
t688 = t1138 * t694;
t420 = t687 - t688;
t349 = -t420 - t1216;
t345 = t1137 * t349;
t225 = t345 - t1048;
t1327 = t225 * t1340;
t662 = -pkin(2) * t677 - pkin(1);
t622 = pkin(3) * t640 + t662;
t517 = -pkin(4) * t1208 + t622;
t1326 = t1340 * t517;
t904 = -t1137 / 0.2e1;
t1325 = t1340 * t904;
t346 = t1137 * t351;
t679 = t674 * t349;
t1210 = t346 + t679;
t1240 = t1210 * t673;
t1309 = pkin(10) * t1257;
t810 = -pkin(5) * t1340 - t1309;
t699 = t517 + t810;
t131 = -t676 * t699 + t1240;
t1239 = t1210 * t676;
t132 = t673 * t699 + t1239;
t1241 = (t131 * t676 - t132 * t673) * t1340;
t1050 = t673 * t676;
t1254 = (t1332 - t1340 / 0.2e1) * t1050;
t1290 = t1254 * qJD(1);
t1318 = t1290 - t657;
t1317 = t1290 + t657;
t1042 = t674 * t633;
t892 = t1137 * t632;
t573 = -t892 - t1042;
t833 = t672 / 0.2e1 + t1145;
t1199 = t833 * t573;
t1313 = pkin(5) * t1351 + pkin(10) * t1199;
t1306 = 0.2e1 * t821;
t282 = (t1145 - t672 / 0.2e1) * t1257;
t956 = t282 * qJD(6);
t1312 = qJD(2) * t1306 - t956;
t1272 = t676 * t225;
t859 = -t1272 / 0.2e1;
t1273 = t673 * t225;
t860 = -t1273 / 0.2e1;
t1304 = t1257 * t131;
t1303 = t1257 * t132;
t1302 = t1257 * t517;
t1298 = t674 * t1257;
t1261 = t1243 * qJD(1);
t971 = qJD(6) * t673;
t1296 = t1261 - t971;
t1277 = t1240 / 0.2e1;
t605 = t677 * t809 - t761;
t575 = t605 + t1127;
t889 = t1136 * t575;
t607 = t677 * t808 + t762;
t576 = t607 - t1125;
t896 = t1138 * t576;
t421 = t896 + t889;
t350 = t421 - t1216;
t1049 = t674 * t350;
t888 = t1136 * t576;
t897 = t1138 * t575;
t419 = -t888 + t897;
t706 = t419 - t1246;
t344 = t1137 * t706;
t223 = -t344 + t1049;
t1083 = t223 * t673;
t213 = t1083 / 0.2e1;
t1295 = t1277 + t213;
t1278 = -t1239 / 0.2e1;
t1082 = t223 * t676;
t214 = -t1082 / 0.2e1;
t1294 = t1278 + t214;
t1262 = t1322 * qJD(1);
t1292 = t669 - t1262;
t1291 = t1210 * t1257;
t1289 = t1256 * qJD(1);
t1124 = t674 * pkin(4);
t660 = pkin(10) + t1124;
t1149 = -t660 / 0.2e1;
t1287 = t1257 * t1149;
t1063 = t1208 ^ 2;
t1064 = t726 ^ 2;
t1259 = t1063 - t1064;
t1286 = t1259 * qJD(1);
t1282 = qJD(2) * t1254 + t956;
t1088 = t1210 * t225;
t1270 = t1319 * t671;
t1269 = t1319 * t672;
t1211 = t1048 / 0.2e1 - t345 / 0.2e1;
t702 = t674 * t706;
t894 = t1137 * t350;
t690 = t702 / 0.2e1 + t894 / 0.2e1;
t1235 = t690 + t1211;
t1267 = qJD(1) * t1235;
t587 = -t1185 / 0.2e1;
t1221 = t1256 - t1237 / 0.2e1 + t587;
t1266 = qJD(2) * t1221;
t1263 = t1221 * qJD(1);
t1152 = -t573 / 0.2e1;
t696 = pkin(4) - t632;
t621 = t1137 * t696;
t568 = -t621 + t1042;
t1156 = -t568 / 0.2e1;
t1258 = t1156 + t1152;
t791 = t1291 - t1327;
t1253 = -qJD(2) * t1235 - t1366;
t1220 = t1211 - t690;
t1252 = qJD(2) * t1220;
t1026 = -t1049 / 0.2e1 + t344 / 0.2e1;
t342 = -t346 / 0.2e1;
t1178 = t342 - t679 / 0.2e1;
t1222 = t1178 + t1026;
t1251 = qJD(2) * t1222 + qJD(3) * t1221;
t1165 = t1257 / 0.2e1;
t1215 = t726 * pkin(4);
t1247 = t1215 / 0.2e1;
t1135 = t1210 * pkin(5);
t423 = t1284 * t1208;
t1201 = 0.2e1 * t1248 + t1237;
t1234 = qJD(2) * t1201;
t1233 = qJD(3) * t1201;
t1232 = qJD(3) * t1208;
t1227 = t1201 * qJD(1);
t1226 = t1208 * qJD(1);
t1184 = t726 * qJD(1);
t1225 = t1208 * t1184;
t566 = -pkin(5) + t568;
t1159 = t566 / 0.2e1;
t1224 = t1210 * t1159;
t1181 = t828 * t1050;
t254 = -qJD(1) * t282 + t1181;
t248 = t1215 + t319;
t1055 = t673 * t248;
t144 = t1272 + t1055;
t1096 = t144 * t676;
t1038 = t676 * t248;
t143 = t1038 - t1273;
t1099 = t143 * t673;
t753 = -t1099 / 0.2e1 + t1096 / 0.2e1;
t1219 = t753 * pkin(10) - t1135 / 0.2e1;
t226 = t894 + t702;
t1040 = t676 * t226;
t1126 = t642 * pkin(3);
t670 = t675 * pkin(2);
t624 = t670 + t1126;
t518 = t624 + t1215;
t241 = t518 + t319;
t1056 = t673 * t241;
t134 = t1040 + t1056;
t1100 = t134 * t676;
t1039 = t676 * t241;
t1058 = t673 * t226;
t133 = t1039 - t1058;
t1103 = t133 * t673;
t1030 = -t1103 / 0.2e1 + t1100 / 0.2e1;
t1217 = -t726 / 0.2e1;
t655 = t672 - t671;
t1213 = t655 * t828;
t1021 = t671 + t672;
t1207 = -t1223 * t1254 + t956;
t1206 = t1223 * t1306 - t956;
t266 = t1350 * t673 + t821;
t1205 = -qJD(5) * t266 + t1282;
t265 = t676 * t1243;
t1204 = qJD(5) * t265 + t1312;
t1203 = qJD(4) * t266 + t1282;
t1202 = qJD(4) * t265 + t1312;
t1104 = t132 * t676;
t1105 = t131 * t673;
t756 = t1104 / 0.2e1 + t1105 / 0.2e1;
t959 = t266 * qJD(1);
t1194 = t959 - t657;
t1193 = t959 + t657;
t1192 = t1284 * t726;
t1189 = qJD(3) * t726;
t1186 = qJD(5) * t1335;
t880 = qJD(1) * t1050;
t85 = t1310 * t880 + t282 * t828;
t1175 = t642 ^ 2;
t1174 = pkin(5) / 0.2e1;
t1173 = t133 / 0.2e1;
t1172 = -t134 / 0.2e1;
t1037 = t676 * t319;
t155 = t1037 - t1273;
t1171 = -t155 / 0.2e1;
t1054 = t673 * t319;
t156 = t1054 + t1272;
t1170 = t156 / 0.2e1;
t1168 = -t225 / 0.2e1;
t1167 = t1210 / 0.2e1;
t1160 = -t566 / 0.2e1;
t692 = t674 * t696;
t569 = t623 + t692;
t567 = pkin(10) + t569;
t1158 = -t567 / 0.2e1;
t1157 = t567 / 0.2e1;
t1155 = t568 / 0.2e1;
t1154 = -t569 / 0.2e1;
t1153 = t569 / 0.2e1;
t1151 = t573 / 0.2e1;
t1148 = t660 / 0.2e1;
t903 = t1137 * pkin(4);
t661 = -t903 - pkin(5);
t1147 = -t661 / 0.2e1;
t1146 = t661 / 0.2e1;
t1142 = t673 / 0.2e1;
t1141 = t674 / 0.2e1;
t1140 = -t676 / 0.2e1;
t1139 = t676 / 0.2e1;
t1134 = t223 * pkin(5);
t1122 = pkin(4) * qJD(4);
t1121 = pkin(4) * qJD(5);
t1120 = qJD(2) * pkin(2);
t1085 = t223 * t225;
t7 = -t131 * t133 + t132 * t134 - t1085;
t1119 = t7 * qJD(1);
t8 = -t131 * t143 + t132 * t144 - t1088;
t1118 = t8 * qJD(1);
t9 = -t131 * t155 + t132 * t156 - t1088;
t1117 = t9 * qJD(1);
t1081 = t225 * t1257;
t28 = -t1081 + (t1104 + t1105) * t1340;
t1114 = qJD(1) * t28;
t744 = t1146 * t1340 + t1287;
t746 = -t1152 * t1340 + t1165 * t572;
t685 = t1157 * t1257 + t1160 * t1340 + t744 - t746;
t861 = t1239 / 0.2e1;
t36 = t673 * t685 + t214 + t861;
t1113 = qJD(1) * t36;
t834 = t1155 + t1160;
t703 = (t1158 + t1153) * t1257 - t834 * t1340;
t691 = t1309 / 0.2e1 + t1345 + t703;
t40 = t1278 + t1082 / 0.2e1 + t691 * t673;
t1112 = qJD(1) * t40;
t76 = t1299 * t225 - t131 * t1340;
t1111 = qJD(1) * t76;
t77 = -t1297 * t225 + t132 * t1340;
t1110 = qJD(1) * t77;
t82 = t1210 * t1340 - t1081;
t1109 = qJD(1) * t82;
t1101 = t134 * t673;
t1102 = t133 * t676;
t10 = (t1101 + t1102) * t1257 - t1241;
t1108 = t10 * qJD(1);
t1097 = t144 * t673;
t1098 = t143 * t676;
t11 = (t1097 + t1098) * t1257 - t1241;
t1107 = t11 * qJD(1);
t1093 = t156 * t673;
t1094 = t155 * t676;
t12 = (t1093 + t1094) * t1257 - t1241;
t1106 = t12 * qJD(1);
t1095 = t155 * t673;
t1092 = t156 * t676;
t790 = t1257 * t223 - t1327;
t18 = -t133 * t1340 + t673 * t790 - t1304;
t1091 = t18 * qJD(1);
t19 = t134 * t1340 + t676 * t790 - t1303;
t1090 = t19 * qJD(1);
t22 = -t1340 * t143 + t673 * t791 - t1304;
t1089 = t22 * qJD(1);
t1084 = t223 * t661;
t1080 = t225 * t572;
t23 = t1340 * t144 + t676 * t791 - t1303;
t1077 = t23 * qJD(1);
t26 = (-t131 + t1240) * t1257 - (t155 + t1273) * t1340;
t1076 = t26 * qJD(1);
t27 = (-t132 + t1239) * t1257 - (-t156 + t1272) * t1340;
t1075 = t27 * qJD(1);
t31 = t1340 * t226 - t1291 + t790;
t1073 = t31 * qJD(1);
t806 = t833 * t1340;
t710 = t1159 * t1257 + t567 * t806;
t755 = -t1102 / 0.2e1 - t1101 / 0.2e1;
t33 = t710 + t755;
t1072 = t33 * qJD(1);
t709 = t1146 * t1257 + t660 * t806;
t754 = t1098 / 0.2e1 + t1097 / 0.2e1;
t44 = t709 - t754;
t1071 = t44 * qJD(1);
t46 = t1210 * t226 + t517 * t518 - t1085;
t1070 = t46 * qJD(1);
t47 = t1215 * t517;
t1069 = t47 * qJD(1);
t713 = pkin(10) * t806 - t1307 / 0.2e1;
t752 = t1094 / 0.2e1 + t1093 / 0.2e1;
t49 = t713 - t752;
t1068 = t49 * qJD(1);
t1065 = t572 * t676;
t697 = t1154 * t1257 + t1155 * t1340 + t746;
t714 = (-t1298 / 0.2e1 + t1325) * pkin(4);
t83 = t714 - t697;
t1031 = t83 * qJD(1);
t1029 = (qJD(4) - qJD(5)) * t1334;
t563 = t569 * qJD(5);
t564 = t572 * qJD(4);
t1022 = -t564 - t563;
t1020 = qJD(1) * t1376;
t801 = t1348 - t858;
t162 = t801 + t1373;
t1019 = qJD(1) * t162;
t166 = t1024 + t1371;
t1018 = qJD(1) * t166;
t190 = t1066 + t1310;
t173 = t190 * t673;
t1015 = qJD(1) * t173;
t176 = t190 * t676;
t1012 = qJD(1) * t176;
t217 = -t1340 * t518 + t1302;
t1011 = qJD(1) * t217;
t218 = t1257 * t518 + t1326;
t1010 = qJD(1) * t218;
t228 = t1208 * t422 + t420 * t726;
t1009 = qJD(1) * t228;
t229 = t1215 * t1340 - t1302;
t1008 = qJD(1) * t229;
t230 = -t1215 * t1257 - t1326;
t1007 = qJD(1) * t230;
t318 = t655 * t1310;
t1003 = qJD(1) * t318;
t390 = -t1208 * t624 + t622 * t726;
t1002 = qJD(1) * t390;
t391 = t1208 * t622 + t624 * t726;
t1001 = qJD(1) * t391;
t444 = -t606 * t642 - t608 * t640;
t1000 = qJD(1) * t444;
t997 = qJD(1) * t517;
t589 = t640 * t670 + t642 * t662;
t996 = qJD(1) * t589;
t590 = -t640 * t662 + t642 * t670;
t995 = qJD(1) * t590;
t994 = qJD(1) * t622;
t993 = qJD(1) * t677;
t992 = qJD(2) * t1257;
t988 = qJD(2) * t673;
t987 = qJD(2) * t675;
t986 = qJD(2) * t676;
t985 = qJD(2) * t677;
t984 = qJD(3) * t1257;
t983 = qJD(4) * t1257;
t979 = qJD(4) * t622;
t978 = qJD(4) * t673;
t977 = qJD(4) * t676;
t975 = qJD(5) * t1257;
t974 = qJD(5) * t517;
t973 = qJD(5) * t673;
t972 = qJD(5) * t676;
t110 = (-t419 - t422) * t726 + (t420 + t421) * t1208;
t970 = t110 * qJD(1);
t157 = -t419 * t420 + t421 * t422 + t622 * t624;
t969 = t157 * qJD(1);
t165 = t801 + t820;
t968 = t165 * qJD(1);
t169 = 0.2e1 * t820;
t967 = t169 * qJD(1);
t965 = t190 * qJD(1);
t664 = t670 / 0.2e1;
t827 = t664 + t1126 / 0.2e1;
t735 = t1247 + t827;
t748 = t1154 * t1340 + t1156 * t1257;
t192 = t735 + t748;
t963 = t192 * qJD(1);
t727 = t1141 * t1340 + t1257 * t904;
t244 = (t1217 + t727) * pkin(4);
t961 = t244 * qJD(1);
t264 = (-t605 - t608) * t642 + (t606 - t607) * t640;
t960 = t264 * qJD(1);
t836 = t1165 - t1257 / 0.2e1;
t285 = t836 * t673;
t954 = t285 * qJD(1);
t287 = 0.2e1 * t1329;
t953 = t287 * qJD(1);
t296 = 0.2e1 * t1332 * t673;
t276 = t296 * qJD(1);
t947 = t1352 * qJD(1);
t303 = t836 * t676;
t945 = t303 * qJD(1);
t305 = 0.2e1 * t1331;
t943 = t305 * qJD(1);
t311 = 0.2e1 * t1350;
t940 = t311 * qJD(1);
t312 = 0.2e1 * t1349;
t939 = t312 * qJD(1);
t317 = -t1324 - t1323;
t938 = t317 * qJD(1);
t328 = t1063 + t1064;
t929 = t328 * qJD(1);
t745 = t632 * t1217 - t1208 * t633 / 0.2e1;
t347 = t745 + t827;
t927 = t347 * qJD(1);
t383 = t605 * t606 + t607 * t608 + t662 * t670;
t926 = t383 * qJD(1);
t507 = t587 + t1248;
t921 = t507 * qJD(1);
t704 = (-t1115 * t640 / 0.2e1 - t1116 * t642 / 0.2e1) * pkin(2);
t571 = -t670 / 0.2e1 + t704;
t916 = t571 * qJD(1);
t639 = t640 ^ 2;
t574 = t639 - t1175;
t915 = t574 * qJD(1);
t604 = t639 + t1175;
t911 = t604 * qJD(1);
t910 = t640 * qJD(1);
t909 = t642 * qJD(1);
t908 = t642 * qJD(2);
t656 = -t675 ^ 2 + t677 ^ 2;
t907 = t656 * qJD(1);
t902 = pkin(1) * t675 * qJD(1);
t901 = pkin(1) * t993;
t900 = t674 * t1122;
t899 = t674 * t1121;
t898 = -qJD(5) * t305 + t1257 * t986 + t1363;
t891 = t1137 * t671;
t890 = t1137 * t672;
t886 = t1340 * t997;
t885 = t1257 * t997;
t884 = t671 * t1288;
t883 = t672 * t1288;
t882 = t1208 * t994;
t881 = t726 * t994;
t879 = t673 * t986;
t878 = t673 * t977;
t877 = t673 * t972;
t876 = qJD(6) * t1340 * t1257;
t868 = t726 * t1226;
t867 = t640 * t909;
t866 = t640 * t908;
t865 = t675 * t985;
t864 = t676 * t1288;
t535 = t566 * t1142;
t848 = t573 * t1143;
t839 = t573 * t1140;
t838 = t1168 + t225 / 0.2e1;
t837 = t1168 + t226 / 0.2e1;
t832 = t1137 * qJD(4);
t831 = t1137 * qJD(5);
t413 = t1021 * t568;
t418 = t1021 * t573;
t826 = -t903 / 0.2e1;
t825 = t903 / 0.2e1;
t823 = t1310 * t657;
t822 = t1257 * t880;
t815 = t892 / 0.2e1;
t814 = t1124 / 0.2e1 + t1153;
t812 = t1174 + t834;
t811 = t1223 * t1124;
t807 = t833 * t568;
t805 = -0.2e1 * t822;
t804 = 0.2e1 * t822;
t799 = t1152 + t1147 + t1160;
t798 = t1340 * t822;
t196 = -t413 * t567 + t566 * t569;
t749 = -t1153 * t225 + t1224;
t4 = t1134 / 0.2e1 + (pkin(10) * t1172 + t1156 * t132 + t1157 * t156) * t676 + (pkin(10) * t1173 + t1156 * t131 + t1158 * t155) * t673 + t749;
t797 = t4 * qJD(1) + t196 * qJD(2);
t750 = t1224 - t1080 / 0.2e1;
t2 = -t1084 / 0.2e1 + (t1149 * t134 + t1151 * t132 + t1157 * t144) * t676 + (t1148 * t133 + t1151 * t131 + t1158 * t143) * t673 + t750;
t202 = t418 * t567 + t566 * t572;
t796 = t2 * qJD(1) + t202 * qJD(2);
t794 = t1100 - t1103;
t793 = t1096 - t1099;
t792 = t1092 - t1095;
t788 = -t1257 * t660 + t1340 * t661;
t786 = -t1257 * t567 + t1340 * t566;
t15 = t753 - t1030;
t784 = -qJD(1) * t15 - qJD(2) * t418;
t17 = (t1170 + t1172) * t676 + (t1171 + t1173) * t673;
t783 = -qJD(1) * t17 + qJD(2) * t413;
t698 = t1080 / 0.2e1 + t225 * t1154 + t1258 * t1210;
t715 = (t1141 * t226 + t223 * t904) * pkin(4);
t24 = t715 + t698;
t256 = t568 * t572 + t569 * t573;
t782 = -t24 * qJD(1) + t256 * qJD(2);
t757 = t1351 + t814;
t403 = t757 * t676;
t693 = t1287 - t1340 * t1147 + (t1141 * t1257 - t1325) * pkin(4);
t684 = pkin(10) * t1165 + t1345 + t693;
t54 = t673 * t684 + t1278 + t861;
t781 = qJD(1) * t54 - qJD(2) * t403;
t414 = (t632 / 0.2e1 + pkin(4) - t785 / 0.2e1 + t730 / 0.2e1) * t674;
t678 = t679 / 0.2e1 + t346 / 0.2e1;
t97 = t678 + t1178;
t780 = -qJD(1) * t97 - qJD(2) * t414;
t763 = t621 / 0.2e1 + t825;
t416 = t815 + t763;
t779 = t416 * qJD(2);
t98 = t678 + t1026;
t778 = qJD(1) * t98 + qJD(2) * t569;
t95 = t342 - t344 / 0.2e1 + (-t349 / 0.2e1 + t350 / 0.2e1) * t674;
t777 = -qJD(1) * t95 + qJD(2) * t572;
t776 = t1257 * (-qJD(6) + t1358);
t775 = -qJD(2) * t568 - t1267;
t774 = qJD(2) * t573 - t1267;
t681 = -t689 / 0.2e1 - t686 / 0.2e1;
t718 = t897 / 0.2e1 - t888 / 0.2e1;
t249 = -t681 + t718;
t773 = qJD(1) * t249 + qJD(2) * t633;
t680 = -t688 / 0.2e1 + t687 / 0.2e1;
t717 = -t896 / 0.2e1 - t889 / 0.2e1;
t250 = t680 - t717;
t772 = -qJD(1) * t250 - qJD(2) * t632;
t764 = t1223 * t1221;
t760 = -t1132 / 0.2e1 + t1307 / 0.2e1;
t751 = t1092 / 0.2e1 - t1095 / 0.2e1;
t747 = -t1157 * t1340 + t1160 * t1257;
t743 = t1147 * t1257 - t1148 * t1340;
t38 = t213 - t1240 / 0.2e1 + t685 * t676;
t742 = qJD(1) * t38 - t572 * t988;
t43 = (t1167 - t223 / 0.2e1) * t673 + t691 * t676;
t741 = -qJD(1) * t43 - t569 * t988;
t724 = t241 / 0.2e1 + t747;
t58 = t673 * t724 + t676 * t837;
t740 = -qJD(1) * t58 - t566 * t986;
t60 = t673 * t837 - t676 * t724;
t739 = -qJD(1) * t60 - t566 * t988;
t738 = -t1342 + t1231;
t731 = t826 + t1174 + t1147;
t728 = t319 / 0.2e1 + t760;
t725 = t891 + t890;
t723 = t248 / 0.2e1 + t743;
t716 = t890 / 0.2e1 + t891 / 0.2e1;
t683 = (t1141 * t566 + t567 * t716) * pkin(4) - t660 * t807 + t569 * t1146;
t146 = t683 - t1313;
t597 = (t660 * t725 + t661 * t674) * pkin(4);
t682 = t751 * t660 + (t1137 * t756 - t1141 * t225) * pkin(4) + t1210 * t1146;
t6 = t682 - t1219;
t722 = t6 * qJD(1) + t146 * qJD(2) + t597 * qJD(4);
t21 = (t1170 - t144 / 0.2e1) * t676 + (t1171 + t143 / 0.2e1) * t673;
t243 = t1021 * (t825 + t1258);
t638 = t725 * pkin(4);
t721 = -qJD(1) * t21 - qJD(2) * t243 - qJD(4) * t638;
t720 = t1201 * t1223 + t992;
t396 = t799 * t673;
t74 = t673 * t838 - t676 * t723;
t712 = -qJD(1) * t74 + qJD(2) * t396 - t661 * t978;
t397 = t799 * t676;
t72 = t673 * t723 + t676 * t838;
t711 = -qJD(1) * t72 + qJD(2) * t397 - t661 * t977;
t708 = (t975 + t983 + t992) * t1340;
t707 = t1370 * t1257;
t402 = t757 * t673;
t57 = (t1167 - t1210 / 0.2e1) * t673 + t684 * t676;
t705 = -qJD(1) * t57 - qJD(2) * t402 - t673 * t900;
t405 = t812 * t673;
t609 = t731 * t673;
t80 = t728 * t676;
t701 = pkin(5) * t973 + qJD(1) * t80 + qJD(2) * t405 + qJD(4) * t609;
t406 = t812 * t676;
t610 = t731 * t676;
t78 = t728 * t673;
t700 = pkin(5) * t972 - qJD(1) * t78 + qJD(2) * t406 + qJD(4) * t610;
t668 = pkin(5) * t1140;
t667 = pkin(5) * t1143;
t658 = t675 * t993;
t654 = t673 * t899;
t647 = t655 * qJD(6);
t646 = t661 * t1139;
t645 = t661 * t1142;
t637 = t640 * qJD(2);
t635 = t638 * qJD(5);
t626 = t633 * qJD(4);
t625 = t632 * qJD(4);
t612 = t676 * t826 + t646 + t668;
t611 = t673 * t826 + t645 + t667;
t570 = t664 + t704;
t565 = t573 * qJD(4);
t562 = t568 * qJD(5);
t552 = t673 * t564;
t545 = t673 * t563;
t536 = t566 * t1139;
t417 = -t763 + t815 + t1042;
t415 = -t1124 / 0.2e1 - t623 - t692 / 0.2e1 + t1043 / 0.2e1;
t412 = t418 * qJD(4);
t411 = t413 * qJD(5);
t408 = t1139 * t568 + t536 + t668;
t407 = t1142 * t568 + t535 + t667;
t404 = -t1065 / 0.2e1 - t814 * t676;
t401 = t1142 * t572 + t673 * t814;
t399 = t646 + t536 + t839;
t398 = t645 + t535 + t848;
t389 = t805 + t1213;
t388 = t804 - t1213;
t387 = -t1237 + 0.2e1 * t587;
t348 = -t745 + t827;
t274 = t296 * qJD(6);
t257 = t276 - t971;
t252 = t681 + t718;
t251 = t680 + t717;
t245 = pkin(4) * t727 + t1247;
t242 = pkin(4) * t716 + t1199 - t807;
t231 = t828 * t1256;
t193 = t735 - t748;
t168 = t820 + t1373;
t167 = 0.2e1 * t1024;
t145 = t683 + t1313;
t105 = 0.2e1 * t1178;
t100 = 0.2e1 * t1211;
t84 = t714 + t697;
t81 = -t1273 + t1037 / 0.2e1 - t760 * t676;
t79 = -t1272 - t1054 / 0.2e1 + t760 * t673;
t75 = 0.2e1 * t860 + t1038 / 0.2e1 - t743 * t676;
t73 = 0.2e1 * t859 - t1055 / 0.2e1 + t743 * t673;
t61 = t860 - t1058 / 0.2e1 + t1039 / 0.2e1 - t747 * t676;
t59 = t859 - t1040 / 0.2e1 - t1056 / 0.2e1 + t747 * t673;
t56 = t676 * t693 + 0.2e1 * t1277 + t1354;
t55 = t673 * t693 + 0.2e1 * t1278 + t1333;
t50 = t713 + t752;
t45 = t709 + t754;
t42 = t676 * t703 + t1295 + t1354;
t41 = t673 * t703 + t1294 + t1333;
t39 = t1330 * t572 + t1331 * t567 - t1340 * t839 + t1349 * t566 + t676 * t744 + t1295;
t37 = t1328 * t572 + t567 * t1329 + t673 * t744 - (-t535 + t848) * t1340 + t1294;
t32 = t710 - t755;
t25 = t715 - t698;
t20 = t751 + t753;
t16 = t751 + t1030;
t14 = t753 + t1030;
t5 = t682 + t1219;
t3 = -t1134 / 0.2e1 - t756 * t568 + t751 * t567 + t749 + t1030 * pkin(10);
t1 = t1084 / 0.2e1 + t756 * t573 + t753 * t567 + t750 + t1030 * t660;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t865, t656 * qJD(2), 0, -t865, 0, 0, -pkin(1) * t987, -pkin(1) * t985, 0, 0, -t866, t574 * qJD(2), 0, t866, 0, 0, t589 * qJD(2), t590 * qJD(2), qJD(2) * t264 + qJD(3) * t604, qJD(2) * t383 + qJD(3) * t444, t423 * t726, t1284 * t1259, 0, -t1192 * t1208, 0, 0, qJD(2) * t390 + t726 * t979, qJD(2) * t391 + t1208 * t979, qJD(2) * t110 + qJD(3) * t328, qJD(2) * t157 + qJD(3) * t228, t707, -t828 * t1341, 0, -t708, 0, 0, qJD(2) * t217 - qJD(4) * t229 + t1257 * t974, qJD(2) * t218 - qJD(4) * t230 + t1340 * t974, qJD(2) * t31 + qJD(3) * t190, qJD(2) * t46 + qJD(3) * t82 + qJD(4) * t47, t672 * t707 - t823, -0.2e1 * t1297 * t1370 * t673 - qJD(6) * t318, t1374 * t828 + t673 * t876, t671 * t707 + t823, -t1375 * t828 + t676 * t876, -t708, qJD(2) * t18 + qJD(3) * t173 + qJD(4) * t22 + qJD(5) * t26 + qJD(6) * t77, qJD(2) * t19 + qJD(3) * t176 + qJD(4) * t23 + qJD(5) * t27 + qJD(6) * t76, -qJD(2) * t10 - qJD(4) * t11 - qJD(5) * t12, qJD(2) * t7 + qJD(3) * t28 + qJD(4) * t8 + qJD(5) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t658, t907, t985, -t658, -t987, 0, -pkin(7) * t985 - t902, pkin(7) * t987 - t901, 0, 0, -t867, t915, -t637, t867, -t908, 0, qJD(2) * t605 + t996, -qJD(2) * t607 + t995, t960 + (-t1115 * t642 + t1116 * t640) * t1120, t926 + (t1115 * t607 + t1116 * t605) * t1120 + t570 * qJD(3), t868, t1286, t423, -t1225, -t1192, 0, qJD(2) * t419 + qJD(4) * t252 + t1002, -qJD(2) * t421 + qJD(4) * t251 + t1001, t970 + (t1208 * t632 - t633 * t726) * qJD(2), t969 + (-t419 * t632 + t421 * t633) * qJD(2) + t348 * qJD(3), t1342, -t1357, t1370, -t1319, -t720, 0, -qJD(2) * t223 + t1222 * t1223 + t1011, -qJD(2) * t226 + t1220 * t1223 + t1010, t1073 + (-t1257 * t569 + t1340 * t568) * qJD(2) + t84 * qJD(4), t1070 + (t223 * t568 + t226 * t569) * qJD(2) + t193 * qJD(3) + t25 * qJD(4) (t879 + t883) * t1340 + t1206, -0.2e1 * t798 + (-t1324 + t1323) * qJD(2) + t167 * qJD(4) + t1382, t1257 * t988 + t1179 + t1362 + t1383 (-t879 + t884) * t1340 - t1206, t898 + t1385, t1336, t1091 + (t673 * t786 - t1082) * qJD(2) + t37 * qJD(4) + t41 * qJD(5) + t61 * qJD(6), t1090 + (t676 * t786 + t1083) * qJD(2) + t1314 + t39 * qJD(4) + t42 * qJD(5) + t59 * qJD(6), qJD(2) * t794 + qJD(4) * t14 + qJD(5) * t16 - t1108, t1119 + (t223 * t566 + t567 * t794) * qJD(2) + t32 * qJD(3) + t1 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t911, qJD(2) * t570 + t1000, 0, 0, 0, 0, 0, 0, 0, 0, t929, qJD(2) * t348 + t1009, 0, 0, 0, 0, 0, 0, t764, 0, t965, qJD(2) * t193 + qJD(4) * t245 + t1109, 0, 0, 0, 0, 0, 0, t275 + t1015 + t1029, t1012 + t1186 + t1364 + t1368 + t1379, qJD(4) * t168 + t1384, qJD(2) * t32 + qJD(4) * t45 + qJD(5) * t50 + t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1225, t1286, t423, -t1225, -t1192, 0, qJD(2) * t252 - qJD(4) * t422 + t881, qJD(2) * t251 + qJD(4) * t420 + t882, 0, 0, t1319, -t1357, t1370, -t1342, qJD(5) * t387 - t1234 - t983, 0, -qJD(4) * t1210 + qJD(5) * t105 - t1008 + t1251, -qJD(4) * t225 + qJD(5) * t100 - t1007 + t1252, t84 * qJD(2) + (-t1137 * t1340 - t1298) * t1122, t1069 + t25 * qJD(2) + t245 * qJD(3) + (-t1137 * t1210 + t225 * t674) * t1122 (t878 + t883) * t1340 + t1204, t167 * qJD(2) + (qJD(4) * t655 + t805) * t1340 + t1382, t1257 * t978 + t1179 + t1337 (-t878 + t884) * t1340 - t1204, t1257 * t977 + t1352 * t1378 + t1385, t738, t1089 + t37 * qJD(2) + t1360 + (t673 * t788 - t1239) * qJD(4) + t55 * qJD(5) + t75 * qJD(6), t1077 + t39 * qJD(2) + t1314 + (t676 * t788 + t1240) * qJD(4) + t56 * qJD(5) + t73 * qJD(6), qJD(2) * t14 + qJD(3) * t168 + qJD(4) * t793 + qJD(5) * t20 - t1107, t1118 + t1 * qJD(2) + t45 * qJD(3) + (t1210 * t661 + t660 * t793) * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1319, -t1357, t1370, -t1319, qJD(4) * t387 - t1234 - t975, 0, qJD(4) * t105 - qJD(5) * t1210 + t1251 + t885, qJD(4) * t100 - qJD(5) * t225 + t1252 + t886, 0, 0 -(-t877 - t883) * t1340 + t1202, t442 - (-qJD(5) * t655 + t804) * t1340 + t1284 * t1377, t1257 * t973 + t1337 + t1362 -(t877 - t884) * t1340 - t1202, -qJD(2) * t305 + t1257 * t972 + t1363 - t1380, t1336, t1076 + t41 * qJD(2) - t1360 + t55 * qJD(4) + (t673 * t810 - t1239) * qJD(5) + t81 * qJD(6), t1075 + t42 * qJD(2) + t1314 + t56 * qJD(4) + (t676 * t810 + t1240) * qJD(5) + t79 * qJD(6), qJD(2) * t16 + qJD(3) * t1376 + qJD(4) * t20 + qJD(5) * t792 - t1106, t1117 + t3 * qJD(2) + t50 * qJD(3) + t5 * qJD(4) + (pkin(10) * t792 - t1135) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t1181 * t1218 - t1003, t1355 * t828 + t673 * t776, t85, t1284 * t1343 + t676 * t776, t231, qJD(2) * t61 + qJD(3) * t1343 + qJD(4) * t75 + qJD(5) * t81 - qJD(6) * t132 + t1110, qJD(2) * t59 + qJD(3) * t1355 + qJD(4) * t73 + qJD(5) * t79 + qJD(6) * t131 + t1111, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t658, -t907, 0, t658, 0, 0, t902, t901, 0, 0, t867, -t915, 0, -t867, 0, 0, -qJD(3) * t642 - t996, qJD(3) * t640 - t995, -t960, qJD(3) * t571 - t926, -t868, -t1286, 0, t1225, 0, 0, -qJD(4) * t249 - t1002 - t1189, qJD(4) * t250 - t1001 - t1232, -t970, -qJD(3) * t347 - t969, -t1342, t1357, 0, t1319, -t764, 0, qJD(4) * t95 - qJD(5) * t98 - t1011 - t984, t1223 * t1235 - t1010 - t1366, -qJD(4) * t83 - t1073, -qJD(3) * t192 - qJD(4) * t24 - t1070, -t1342 * t672 - t1207, qJD(4) * t166 + qJD(5) * t162 + t442 + 0.2e1 * t798, qJD(6) * t311 - t1186 + t1364 - t1381, -t1342 * t671 + t1207, t274 + t1380 + t1029, -t1336, -qJD(4) * t36 + qJD(5) * t40 + qJD(6) * t60 - t676 * t984 - t1091, -qJD(4) * t38 + qJD(5) * t43 + qJD(6) * t58 - t1090 + t1365, -qJD(3) * t317 + qJD(4) * t15 + qJD(5) * t17 + t1108, qJD(3) * t33 + qJD(4) * t2 + qJD(5) * t4 - t1119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t626, t625, 0, 0, 0, 0, 0, 0, 0, 0, t1022, -t565 + t562, 0, qJD(4) * t256, t657, t647, 0, -t657, 0, 0, t1022 * t676 + t566 * t971, t566 * t669 + t545 + t552, t412 - t411, qJD(4) * t202 + qJD(5) * t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t909, t910, 0, t916, 0, 0, 0, 0, 0, 0, -t1184, -t1226, 0, -t927, 0, 0, 0, 0, 0, 0, -t1288, -t1358, 0, -t963, 0, 0, 0, 0, 0, 0, -t864, t1356, -t938, t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t626 - t773, t625 - t772, 0, 0, 0, 0, 0, 0, -t1263, 0, qJD(5) * t415 - t564 - t777, qJD(5) * t417 - t565 - t774, -t1031 (-t1137 * t572 + t573 * t674) * t1122 + t782, t1317, t647 + t1018, t1359, -t1317, t1361, 0, qJD(5) * t404 + qJD(6) * t398 - t1065 * t1284 - t1113, qJD(5) * t401 + qJD(6) * t399 + t552 - t742, qJD(5) * t242 + t412 - t784 (t418 * t660 + t572 * t661) * qJD(4) + t145 * qJD(5) + t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1263, 0, qJD(4) * t415 - t563 - t778, qJD(4) * t417 + t562 - t775, 0, 0, t1317, t647 + t1019, -t1359, -t1317, -t1361, 0, -t1378 * t569 * t676 + qJD(4) * t404 + qJD(6) * t407 + t1112, qJD(4) * t401 + qJD(6) * t408 + t545 - t741, qJD(4) * t242 - t411 - t783, t145 * qJD(4) + (-pkin(5) * t569 - pkin(10) * t413) * qJD(5) + t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t389, t669 + t940, -t254, t257, -t1289, qJD(4) * t398 + qJD(5) * t407 - t567 * t669 - t739, qJD(4) * t399 + qJD(5) * t408 + t567 * t971 - t740, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t908, -t637, -t911, -qJD(2) * t571 - t1000, 0, 0, 0, 0, 0, 0, t1192, t423, -t929, qJD(2) * t347 - t1009, 0, 0, 0, 0, 0, 0, t720, t1370, -t965, qJD(2) * t192 - qJD(4) * t244 - t1109, 0, 0, 0, 0, 0, 0, t274 + t898 - t1015, qJD(4) * t287 + qJD(6) * t312 - t1012 - t1179 - t1367, qJD(2) * t317 + qJD(4) * t169 + qJD(5) * t165, -qJD(2) * t33 - qJD(4) * t44 - qJD(5) * t49 - t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t909, -t910, 0, -t916, 0, 0, 0, 0, 0, 0, t1184, t1226, 0, t927, 0, 0, 0, 0, 0, 0, t1288, t1358, 0, t963, 0, 0, 0, 0, 0, 0, t864, -t1356, t938, -t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1184, t1226, 0, 0, 0, 0, 0, 0, 0, 0, t1227, t1358, 0, -t961, 0, 0, 0, 0, 0, 0, t947, t953, t967, -t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1227, t1358, 0, 0, 0, 0, 0, 0, 0, 0, -t943, -t1356, t968, -t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, -t669 + t939, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1225, -t1286, 0, t1225, 0, 0, qJD(2) * t249 - t1189 - t881, -qJD(2) * t250 - t1232 - t882, 0, 0, -t1319, t1357, 0, t1342, qJD(5) * t507 + t1266, 0, -qJD(2) * t95 - qJD(5) * t97 + t1008 - t1233, t1007 + t1253, qJD(2) * t83, qJD(2) * t24 + qJD(3) * t244 - t1069, -t1205 - t1269, -qJD(2) * t166 + t1340 * t804 + t1384 + t442, -qJD(5) * t285 + t1338 - t1368, t1205 - t1270, -qJD(5) * t303 + t1339 - t1369, -t738, qJD(2) * t36 - qJD(3) * t1352 + qJD(5) * t54 + qJD(6) * t74 - t1089, qJD(2) * t38 - qJD(3) * t287 + qJD(5) * t57 + qJD(6) * t72 - t1077, -qJD(2) * t15 - qJD(3) * t169 + qJD(5) * t21 + t1107, -qJD(2) * t2 + qJD(3) * t44 + qJD(5) * t6 - t1118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t773, t772, 0, 0, 0, 0, 0, 0, t1263, 0, -qJD(5) * t414 + t777, -qJD(5) * t416 + t774, t1031, -t782, -t1318, t647 - t1018, -t1359, t1318, -t1361, 0, -qJD(5) * t403 - qJD(6) * t396 + t572 * t986 + t1113, qJD(5) * t402 - qJD(6) * t397 + t742, qJD(5) * t243 + t784, qJD(5) * t146 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1184, -t1226, 0, 0, 0, 0, 0, 0, 0, 0, -t1227, -t1358, 0, t961, 0, 0, 0, 0, 0, 0, -t947, -t953, -t967, t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t899, -pkin(4) * t831, 0, 0, t657, t647, 0, -t657, 0, 0, t661 * t971 - t676 * t899, t661 * t669 + t654, t635, t597 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t921, 0, -t811 + t780 (-t832 - t831) * pkin(4) - t779, 0, 0, t1193, t647 + t1020, -t954, -t1193, -t945, 0, qJD(6) * t611 - t676 * t811 + t781, qJD(6) * t612 + t654 - t705, t635 - t721 (-pkin(5) * t674 + pkin(10) * t725) * t1121 + t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t389, t1292, -t254, t1296, -t1289, qJD(5) * t611 - t660 * t669 - t712, qJD(5) * t612 + t660 * t971 - t711, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1319, t1357, 0, t1319, -qJD(4) * t507 + t1266, 0, qJD(2) * t98 + qJD(4) * t97 - t1233 - t885, t1253 - t886, 0, 0, -t1203 - t1269, -qJD(2) * t162 - qJD(4) * t1376 - t1340 * t805 + t442, qJD(4) * t285 + t1338 + t1368, t1203 - t1270, qJD(4) * t303 + t1339 + t1369, -t1336, -qJD(2) * t40 + qJD(3) * t305 - qJD(4) * t54 - qJD(6) * t80 - t1076, -qJD(2) * t43 - qJD(4) * t57 + qJD(6) * t78 - t1075 + t1365, -qJD(2) * t17 - qJD(3) * t165 - qJD(4) * t21 + t1106, -qJD(2) * t4 + qJD(3) * t49 - qJD(4) * t6 - t1117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, 0, qJD(4) * t414 + t778, qJD(4) * t416 + t775, 0, 0, -t1318, t647 - t1019, t1359, t1318, t1361, 0, qJD(4) * t403 - qJD(6) * t405 + t569 * t986 - t1112, -qJD(4) * t402 - qJD(6) * t406 + t741, -qJD(4) * t243 + t783, -qJD(4) * t146 - t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1227, -t1358, 0, 0, 0, 0, 0, 0, 0, 0, t943, t1356, -t968, t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t921, 0, -t780 + t900, pkin(4) * t832 + t779, 0, 0, -t1194, t647 - t1020, t954, t1194, t945, 0, -qJD(6) * t609 + t676 * t900 - t781, -qJD(6) * t610 + t705, t721, -t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t657, t647, 0, -t657, 0, 0, -pkin(5) * t971, -pkin(5) * t669, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t389, t1292, -t254, t1296, -t1289, -pkin(10) * t669 - t701, pkin(10) * t971 - t700, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0.2e1 * t1181 * t1257 + t1003, -qJD(2) * t311 + t1223 * t1322 - t1319 * t673, -t85, -qJD(2) * t296 - t1223 * t1243 - t1319 * t676, t231, -qJD(2) * t60 - qJD(3) * t296 - qJD(4) * t74 + qJD(5) * t80 - t1110, -qJD(2) * t58 - qJD(3) * t312 - qJD(4) * t72 - qJD(5) * t78 - t1111, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t388, -t940, t254, -t276, t1289, qJD(4) * t396 + qJD(5) * t405 + t739, qJD(4) * t397 + qJD(5) * t406 + t740, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t276, -t939, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t388, t1262, t254, -t1261, t1289, qJD(5) * t609 + t712, qJD(5) * t610 + t711, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t388, t1262, t254, -t1261, t1289, t701, t700, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
