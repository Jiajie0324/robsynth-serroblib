% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 19:35
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR1_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 19:32:21
% EndTime: 2019-05-06 19:32:52
% DurationCPUTime: 17.65s
% Computational Cost: add. (139596->672), mult. (338085->982), div. (0->0), fcn. (263105->12), ass. (0->417)
t388 = cos(qJ(2));
t370 = t388 * qJDD(1);
t383 = sin(qJ(2));
t429 = qJD(1) * qJD(2);
t421 = t383 * t429;
t357 = t370 - t421;
t377 = t388 ^ 2;
t390 = qJD(1) ^ 2;
t439 = qJD(1) * t383;
t398 = qJD(2) * pkin(2) - qJ(3) * t439;
t384 = sin(qJ(1));
t473 = cos(qJ(1));
t418 = g(1) * t384 - t473 * g(2);
t399 = qJDD(1) * pkin(1) + t418;
t312 = pkin(2) * t357 - t398 * t439 - qJDD(3) + t399 + (qJ(3) * t377 + pkin(7)) * t390;
t369 = t383 * qJDD(1);
t420 = t388 * t429;
t356 = t369 + t420;
t378 = sin(pkin(11));
t379 = cos(pkin(11));
t334 = -t356 * t378 + t379 * t357;
t348 = -t379 * t388 * qJD(1) + t378 * t439;
t346 = t348 ^ 2;
t350 = (t378 * t388 + t379 * t383) * qJD(1);
t405 = qJD(2) * pkin(3) - pkin(8) * t350;
t265 = pkin(3) * t334 + pkin(8) * t346 - t350 * t405 + t312;
t487 = -2 * qJD(3);
t333 = t350 * t348;
t475 = qJDD(2) - t333;
t486 = t378 * t475;
t485 = t379 * t475;
t380 = sin(qJ(6));
t382 = sin(qJ(4));
t387 = cos(qJ(4));
t325 = -t348 * t387 - t382 * t350;
t326 = -t348 * t382 + t350 * t387;
t381 = sin(qJ(5));
t386 = cos(qJ(5));
t296 = t325 * t381 + t326 * t386;
t335 = t356 * t379 + t357 * t378;
t414 = -t387 * t334 + t335 * t382;
t274 = -qJD(4) * t326 - t414;
t401 = t334 * t382 + t335 * t387;
t275 = qJD(4) * t325 + t401;
t416 = -t386 * t274 + t275 * t381;
t210 = -qJD(5) * t296 - t416;
t208 = qJDD(6) - t210;
t375 = qJD(2) + qJD(4);
t368 = qJD(5) + t375;
t385 = cos(qJ(6));
t280 = t296 * t380 - t385 * t368;
t282 = t296 * t385 + t368 * t380;
t237 = t282 * t280;
t478 = t208 - t237;
t484 = t380 * t478;
t294 = -t386 * t325 + t326 * t381;
t251 = t296 * t294;
t428 = qJDD(2) + qJDD(4);
t367 = qJDD(5) + t428;
t477 = -t251 + t367;
t483 = t381 * t477;
t302 = t325 * t326;
t476 = t302 + t428;
t482 = t382 * t476;
t481 = t385 * t478;
t480 = t386 * t477;
t479 = t387 * t476;
t323 = t325 ^ 2;
t408 = pkin(4) * t375 - pkin(9) * t326;
t200 = pkin(4) * t274 + pkin(9) * t323 - t326 * t408 + t265;
t402 = t274 * t381 + t275 * t386;
t211 = -qJD(5) * t294 + t402;
t288 = t368 * t294;
t195 = t211 - t288;
t119 = -t195 * pkin(10) + (t296 * t368 - t210) * pkin(5) - t200;
t345 = qJD(2) * t348;
t317 = t335 + t345;
t442 = t383 * t390;
t400 = g(1) * t473 + t384 * g(2);
t468 = qJDD(1) * pkin(7);
t353 = -t390 * pkin(1) - t400 + t468;
t448 = t353 * t383;
t310 = qJDD(2) * pkin(2) - qJ(3) * t356 - t448 + (pkin(2) * t442 + qJ(3) * t429 - g(3)) * t388;
t338 = -t383 * g(3) + t388 * t353;
t372 = t377 * t390;
t311 = -pkin(2) * t372 + t357 * qJ(3) - qJD(2) * t398 + t338;
t406 = t379 * t310 - t311 * t378 + t350 * t487;
t234 = pkin(3) * t475 - pkin(8) * t317 + t406;
t267 = t378 * t310 + t379 * t311 + t348 * t487;
t235 = -t346 * pkin(3) + t334 * pkin(8) - qJD(2) * t405 + t267;
t184 = t382 * t234 + t387 * t235;
t157 = -t323 * pkin(4) + t274 * pkin(9) - t375 * t408 + t184;
t183 = -t387 * t234 + t382 * t235;
t321 = t375 * t325;
t261 = t275 - t321;
t394 = pkin(4) * t476 - pkin(9) * t261 - t183;
t106 = t386 * t157 + t381 * t394;
t247 = pkin(5) * t294 - pkin(10) * t296;
t474 = t368 ^ 2;
t88 = -pkin(5) * t474 + t367 * pkin(10) - t294 * t247 + t106;
t60 = -t385 * t119 + t380 * t88;
t61 = t119 * t380 + t385 * t88;
t39 = t380 * t60 + t385 * t61;
t290 = qJD(6) + t294;
t417 = t211 * t380 - t385 * t367;
t166 = (qJD(6) - t290) * t282 + t417;
t278 = t280 ^ 2;
t279 = t282 ^ 2;
t289 = t290 ^ 2;
t292 = t294 ^ 2;
t293 = t296 ^ 2;
t324 = t326 ^ 2;
t347 = t350 ^ 2;
t374 = t375 ^ 2;
t472 = pkin(5) * t381;
t105 = t157 * t381 - t386 * t394;
t87 = -t367 * pkin(5) - pkin(10) * t474 + t247 * t296 + t105;
t471 = -pkin(5) * t87 + pkin(10) * t39;
t84 = t380 * t87;
t64 = -t105 * t386 + t106 * t381;
t470 = t382 * t64;
t85 = t385 * t87;
t469 = t387 * t64;
t125 = -t183 * t387 + t184 * t382;
t467 = t125 * t378;
t466 = t125 * t379;
t179 = t208 + t237;
t465 = t179 * t380;
t464 = t179 * t385;
t463 = t200 * t381;
t462 = t200 * t386;
t225 = t267 * t378 + t379 * t406;
t461 = t225 * t383;
t245 = t251 + t367;
t460 = t245 * t381;
t459 = t245 * t386;
t458 = t265 * t382;
t457 = t265 * t387;
t456 = t290 * t380;
t455 = t290 * t385;
t299 = -t302 + t428;
t454 = t299 * t382;
t453 = t299 * t387;
t452 = t312 * t378;
t451 = t312 * t379;
t330 = qJDD(2) + t333;
t450 = t330 * t378;
t449 = t330 * t379;
t447 = t368 * t381;
t446 = t368 * t386;
t445 = t375 * t382;
t444 = t375 * t387;
t364 = t388 * t442;
t443 = t383 * (qJDD(2) + t364);
t441 = t388 * (qJDD(2) - t364);
t438 = qJD(2) * t350;
t437 = qJD(2) * t378;
t436 = qJD(2) * t379;
t433 = qJD(4) + t375;
t432 = qJD(5) + t368;
t430 = qJD(6) + t290;
t28 = t381 * t39 - t386 * t87;
t427 = pkin(4) * t28 + t471;
t231 = -t279 - t289;
t145 = -t231 * t380 - t464;
t403 = -t211 * t385 - t367 * t380;
t171 = t280 * t430 + t403;
t426 = pkin(5) * t171 + pkin(10) * t145 + t84;
t220 = -t289 - t278;
t142 = t220 * t385 - t484;
t167 = -t282 * t430 - t417;
t425 = pkin(5) * t167 + pkin(10) * t142 - t85;
t424 = t381 * t237;
t423 = t386 * t237;
t422 = -pkin(5) * t386 - pkin(4);
t65 = t105 * t381 + t386 * t106;
t126 = t183 * t382 + t387 * t184;
t226 = t379 * t267 - t378 * t406;
t337 = g(3) * t388 + t448;
t413 = t383 * t337 + t388 * t338;
t187 = -qJD(6) * t280 - t403;
t242 = t290 * t280;
t170 = t187 + t242;
t115 = -t166 * t385 + t170 * t380;
t217 = t278 + t279;
t412 = pkin(5) * t217 + pkin(10) * t115 + t39;
t100 = t145 * t381 + t171 * t386;
t411 = pkin(4) * t100 + t426;
t97 = t142 * t381 + t167 * t386;
t410 = pkin(4) * t97 + t425;
t90 = t115 * t381 + t217 * t386;
t409 = pkin(4) * t90 + t412;
t243 = -t474 - t292;
t204 = t243 * t381 + t480;
t407 = pkin(4) * t204 - t105;
t38 = t380 * t61 - t385 * t60;
t315 = t334 + t438;
t397 = (-qJD(5) + t368) * t296 - t416;
t396 = (-qJD(4) + t375) * t326 - t414;
t283 = -t293 - t474;
t222 = t283 * t386 - t460;
t391 = pkin(4) * t222 - t106;
t389 = qJD(2) ^ 2;
t376 = t383 ^ 2;
t371 = t376 * t390;
t358 = t370 - 0.2e1 * t421;
t355 = t369 + 0.2e1 * t420;
t352 = pkin(7) * t390 + t399;
t341 = -t347 - t389;
t340 = -t347 + t389;
t339 = t346 - t389;
t328 = -t389 - t346;
t320 = -t324 + t374;
t319 = t323 - t374;
t318 = -t324 - t374;
t316 = t335 - t345;
t314 = -t334 + t438;
t313 = -t346 - t347;
t306 = -t341 * t378 - t449;
t305 = t341 * t379 - t450;
t304 = t328 * t379 - t486;
t303 = t328 * t378 + t485;
t301 = t324 - t323;
t297 = -t374 - t323;
t287 = -t293 + t474;
t286 = t292 - t474;
t285 = (t325 * t387 + t326 * t382) * t375;
t284 = (t325 * t382 - t326 * t387) * t375;
t277 = t315 * t379 + t317 * t378;
t276 = t315 * t378 - t317 * t379;
t272 = -t323 - t324;
t271 = t319 * t387 - t454;
t270 = -t320 * t382 + t479;
t269 = t319 * t382 + t453;
t268 = t320 * t387 + t482;
t264 = -t318 * t382 - t453;
t263 = t318 * t387 - t454;
t260 = t275 + t321;
t259 = t325 * t433 + t401;
t256 = t326 * t433 + t414;
t255 = t275 * t387 - t326 * t445;
t254 = t275 * t382 + t326 * t444;
t253 = -t274 * t382 - t325 * t444;
t252 = t274 * t387 - t325 * t445;
t250 = t293 - t292;
t249 = t297 * t387 - t482;
t248 = t297 * t382 + t479;
t241 = -t279 + t289;
t240 = t278 - t289;
t239 = (-t294 * t386 + t296 * t381) * t368;
t238 = (-t294 * t381 - t296 * t386) * t368;
t236 = t279 - t278;
t232 = -t292 - t293;
t230 = t286 * t386 - t460;
t229 = -t287 * t381 + t480;
t228 = t286 * t381 + t459;
t227 = t287 * t386 + t483;
t224 = -pkin(8) * t263 - t457;
t223 = -t283 * t381 - t459;
t219 = -t263 * t378 + t264 * t379;
t218 = t263 * t379 + t264 * t378;
t215 = t261 * t382 + t387 * t396;
t214 = -t256 * t387 - t260 * t382;
t213 = -t261 * t387 + t382 * t396;
t212 = -t256 * t382 + t260 * t387;
t209 = -pkin(8) * t248 - t458;
t207 = -t248 * t378 + t249 * t379;
t206 = t248 * t379 + t249 * t378;
t205 = t243 * t386 - t483;
t202 = (-t280 * t380 - t282 * t385) * t290;
t201 = (-t280 * t385 + t282 * t380) * t290;
t199 = -t238 * t382 + t239 * t387;
t198 = t238 * t387 + t239 * t382;
t197 = -t294 * t432 + t402;
t196 = t211 + t288;
t192 = t296 * t432 + t416;
t191 = t211 * t386 - t296 * t447;
t190 = t211 * t381 + t296 * t446;
t189 = -t210 * t381 + t294 * t446;
t188 = t210 * t386 + t294 * t447;
t186 = -qJD(6) * t282 - t417;
t185 = -pkin(3) * t259 + pkin(8) * t264 - t458;
t181 = -pkin(3) * t256 + pkin(8) * t249 + t457;
t177 = -t228 * t382 + t230 * t387;
t176 = -t227 * t382 + t229 * t387;
t175 = t228 * t387 + t230 * t382;
t174 = t227 * t387 + t229 * t382;
t173 = -t222 * t382 + t223 * t387;
t172 = t222 * t387 + t223 * t382;
t169 = t187 - t242;
t163 = t187 * t385 - t282 * t456;
t162 = t186 * t385 + t280 * t456;
t161 = t187 * t380 + t282 * t455;
t160 = -t186 * t380 + t280 * t455;
t159 = -t213 * t378 + t215 * t379;
t158 = t213 * t379 + t215 * t378;
t156 = -pkin(9) * t222 - t462;
t154 = t201 * t386 + t208 * t381;
t153 = t201 * t381 - t208 * t386;
t152 = t241 * t385 + t484;
t151 = t240 * t385 - t465;
t150 = t240 * t380 + t464;
t149 = -t241 * t380 + t481;
t148 = -t204 * t382 + t205 * t387;
t147 = t204 * t387 + t205 * t382;
t146 = -pkin(9) * t204 - t463;
t144 = t231 * t385 - t465;
t141 = t220 * t380 + t481;
t139 = t196 * t381 + t386 * t397;
t138 = -t192 * t386 - t195 * t381;
t137 = -t196 * t386 + t381 * t397;
t136 = -t192 * t381 + t195 * t386;
t135 = t163 * t386 + t424;
t134 = t160 * t386 - t424;
t133 = t163 * t381 - t423;
t132 = t160 * t381 + t423;
t131 = pkin(4) * t137;
t130 = -t190 * t382 + t191 * t387;
t129 = -t188 * t382 + t189 * t387;
t128 = t190 * t387 + t191 * t382;
t127 = t188 * t387 + t189 * t382;
t124 = pkin(3) * t265 + pkin(8) * t126;
t123 = -pkin(4) * t197 + pkin(9) * t223 - t463;
t122 = -t172 * t378 + t173 * t379;
t121 = t172 * t379 + t173 * t378;
t120 = -pkin(4) * t192 + pkin(9) * t205 + t462;
t117 = -pkin(8) * t213 - t125;
t116 = t167 * t380 + t169 * t385;
t114 = t167 * t385 - t169 * t380;
t113 = -t166 * t380 - t170 * t385;
t111 = -pkin(3) * t272 + pkin(8) * t215 + t126;
t110 = t151 * t386 - t166 * t381;
t109 = t149 * t386 + t170 * t381;
t108 = t151 * t381 + t166 * t386;
t107 = t149 * t381 - t170 * t386;
t103 = -t153 * t382 + t154 * t387;
t102 = t153 * t387 + t154 * t382;
t101 = t145 * t386 - t171 * t381;
t98 = t142 * t386 - t167 * t381;
t95 = t114 * t386 + t236 * t381;
t94 = t114 * t381 - t236 * t386;
t93 = -t147 * t378 + t148 * t379;
t92 = t147 * t379 + t148 * t378;
t91 = t115 * t386 - t217 * t381;
t83 = -t137 * t382 + t139 * t387;
t82 = -t136 * t382 + t138 * t387;
t81 = t137 * t387 + t139 * t382;
t80 = t136 * t387 + t138 * t382;
t79 = -t133 * t382 + t135 * t387;
t78 = -t132 * t382 + t134 * t387;
t77 = t133 * t387 + t135 * t382;
t76 = t132 * t387 + t134 * t382;
t75 = t126 * t379 - t467;
t74 = t126 * t378 + t466;
t73 = -pkin(8) * t172 - t123 * t382 + t156 * t387;
t72 = -pkin(10) * t144 + t85;
t71 = -pkin(10) * t141 + t84;
t70 = -pkin(8) * t147 - t120 * t382 + t146 * t387;
t69 = -t108 * t382 + t110 * t387;
t68 = -t107 * t382 + t109 * t387;
t67 = t108 * t387 + t110 * t382;
t66 = t107 * t387 + t109 * t382;
t63 = pkin(4) * t64;
t62 = -pkin(3) * t197 + pkin(8) * t173 + t123 * t387 + t156 * t382;
t57 = -t100 * t382 + t101 * t387;
t56 = t100 * t387 + t101 * t382;
t55 = -t382 * t97 + t387 * t98;
t54 = t382 * t98 + t387 * t97;
t53 = -t382 * t94 + t387 * t95;
t52 = t382 * t95 + t387 * t94;
t51 = pkin(4) * t200 + pkin(9) * t65;
t50 = -pkin(3) * t192 + pkin(8) * t148 + t120 * t387 + t146 * t382;
t49 = -t382 * t90 + t387 * t91;
t48 = t382 * t91 + t387 * t90;
t47 = -t378 * t81 + t379 * t83;
t46 = t378 * t83 + t379 * t81;
t45 = -pkin(9) * t137 - t64;
t44 = -pkin(5) * t144 + t61;
t43 = -pkin(5) * t141 + t60;
t42 = -pkin(4) * t232 + pkin(9) * t139 + t65;
t41 = t387 * t65 - t470;
t40 = t382 * t65 + t469;
t36 = -t378 * t56 + t379 * t57;
t35 = t378 * t57 + t379 * t56;
t34 = -t378 * t54 + t379 * t55;
t33 = t378 * t55 + t379 * t54;
t32 = -t378 * t48 + t379 * t49;
t31 = t378 * t49 + t379 * t48;
t30 = -pkin(10) * t113 - t38;
t29 = t381 * t87 + t386 * t39;
t26 = -pkin(9) * t100 - t381 * t44 + t386 * t72;
t25 = -pkin(9) * t97 - t381 * t43 + t386 * t71;
t24 = -pkin(4) * t144 + pkin(9) * t101 + t381 * t72 + t386 * t44;
t23 = -pkin(4) * t141 + pkin(9) * t98 + t381 * t71 + t386 * t43;
t22 = -pkin(8) * t81 - t382 * t42 + t387 * t45;
t21 = -pkin(3) * t232 + pkin(8) * t83 + t382 * t45 + t387 * t42;
t20 = -pkin(9) * t90 + t113 * t472 + t30 * t386;
t19 = -t378 * t40 + t379 * t41;
t18 = t378 * t41 + t379 * t40;
t17 = pkin(9) * t91 + t113 * t422 + t30 * t381;
t16 = -pkin(8) * t40 - pkin(9) * t469 - t382 * t51;
t15 = pkin(3) * t200 + pkin(8) * t41 - pkin(9) * t470 + t387 * t51;
t14 = -t28 * t382 + t29 * t387;
t13 = t28 * t387 + t29 * t382;
t12 = -pkin(9) * t28 + (-pkin(10) * t386 + t472) * t38;
t11 = -pkin(8) * t56 - t24 * t382 + t26 * t387;
t10 = -pkin(8) * t54 - t23 * t382 + t25 * t387;
t9 = -pkin(3) * t144 + pkin(8) * t57 + t24 * t387 + t26 * t382;
t8 = -pkin(3) * t141 + pkin(8) * t55 + t23 * t387 + t25 * t382;
t7 = -pkin(8) * t48 - t17 * t382 + t20 * t387;
t6 = pkin(9) * t29 + (-pkin(10) * t381 + t422) * t38;
t5 = -pkin(3) * t113 + pkin(8) * t49 + t17 * t387 + t20 * t382;
t4 = -t13 * t378 + t14 * t379;
t3 = t13 * t379 + t14 * t378;
t2 = -pkin(8) * t13 + t12 * t387 - t382 * t6;
t1 = -pkin(3) * t38 + pkin(8) * t14 + t12 * t382 + t387 * t6;
t27 = [0, 0, 0, 0, 0, qJDD(1), t418, t400, 0, 0, (t356 + t420) * t383, t355 * t388 + t358 * t383, t443 + t388 * (-t371 + t389), (t357 - t421) * t388, t383 * (t372 - t389) + t441, 0, t388 * t352 + pkin(1) * t358 + pkin(7) * (t388 * (-t372 - t389) - t443), -t383 * t352 - pkin(1) * t355 + pkin(7) * (-t441 - t383 * (-t371 - t389)), pkin(1) * (t371 + t372) + (t376 + t377) * t468 + t413, pkin(1) * t352 + pkin(7) * t413, t383 * (t335 * t379 - t350 * t437) + t388 * (t335 * t378 + t350 * t436), t383 * (-t314 * t379 - t316 * t378) + t388 * (-t314 * t378 + t316 * t379), t383 * (-t340 * t378 + t485) + t388 * (t340 * t379 + t486), t383 * (-t334 * t378 + t348 * t436) + t388 * (t334 * t379 + t348 * t437), t383 * (t339 * t379 - t450) + t388 * (t339 * t378 + t449), (t383 * (-t348 * t379 + t350 * t378) + t388 * (-t348 * t378 - t350 * t379)) * qJD(2), t383 * (-qJ(3) * t303 - t452) + t388 * (-pkin(2) * t314 + qJ(3) * t304 + t451) - pkin(1) * t314 + pkin(7) * (-t303 * t383 + t304 * t388), t383 * (-qJ(3) * t305 - t451) + t388 * (-pkin(2) * t316 + qJ(3) * t306 - t452) - pkin(1) * t316 + pkin(7) * (-t305 * t383 + t306 * t388), t383 * (-qJ(3) * t276 - t225) + t388 * (-pkin(2) * t313 + qJ(3) * t277 + t226) - pkin(1) * t313 + pkin(7) * (-t276 * t383 + t277 * t388), -qJ(3) * t461 + t388 * (pkin(2) * t312 + qJ(3) * t226) + pkin(1) * t312 + pkin(7) * (t226 * t388 - t461), t383 * (-t254 * t378 + t255 * t379) + t388 * (t254 * t379 + t255 * t378), t383 * (-t212 * t378 + t214 * t379) + t388 * (t212 * t379 + t214 * t378), t383 * (-t268 * t378 + t270 * t379) + t388 * (t268 * t379 + t270 * t378), t383 * (-t252 * t378 + t253 * t379) + t388 * (t252 * t379 + t253 * t378), t383 * (-t269 * t378 + t271 * t379) + t388 * (t269 * t379 + t271 * t378), t383 * (-t284 * t378 + t285 * t379) + t388 * (t284 * t379 + t285 * t378), t383 * (-qJ(3) * t206 - t181 * t378 + t209 * t379) + t388 * (-pkin(2) * t256 + qJ(3) * t207 + t181 * t379 + t209 * t378) - pkin(1) * t256 + pkin(7) * (-t206 * t383 + t207 * t388), t383 * (-qJ(3) * t218 - t185 * t378 + t224 * t379) + t388 * (-pkin(2) * t259 + qJ(3) * t219 + t185 * t379 + t224 * t378) - pkin(1) * t259 + pkin(7) * (-t218 * t383 + t219 * t388), t383 * (-qJ(3) * t158 - t111 * t378 + t117 * t379) + t388 * (-pkin(2) * t272 + qJ(3) * t159 + t111 * t379 + t117 * t378) - pkin(1) * t272 + pkin(7) * (-t158 * t383 + t159 * t388), t383 * (-pkin(8) * t466 - qJ(3) * t74 - t124 * t378) + t388 * (pkin(2) * t265 - pkin(8) * t467 + qJ(3) * t75 + t124 * t379) + pkin(1) * t265 + pkin(7) * (-t383 * t74 + t388 * t75), t383 * (-t128 * t378 + t130 * t379) + t388 * (t128 * t379 + t130 * t378), t383 * (-t378 * t80 + t379 * t82) + t388 * (t378 * t82 + t379 * t80), t383 * (-t174 * t378 + t176 * t379) + t388 * (t174 * t379 + t176 * t378), t383 * (-t127 * t378 + t129 * t379) + t388 * (t127 * t379 + t129 * t378), t383 * (-t175 * t378 + t177 * t379) + t388 * (t175 * t379 + t177 * t378), t383 * (-t198 * t378 + t199 * t379) + t388 * (t198 * t379 + t199 * t378), t383 * (-qJ(3) * t92 - t378 * t50 + t379 * t70) + t388 * (-pkin(2) * t192 + qJ(3) * t93 + t378 * t70 + t379 * t50) - pkin(1) * t192 + pkin(7) * (-t383 * t92 + t388 * t93), t383 * (-qJ(3) * t121 - t378 * t62 + t379 * t73) + t388 * (-pkin(2) * t197 + qJ(3) * t122 + t378 * t73 + t379 * t62) - pkin(1) * t197 + pkin(7) * (-t121 * t383 + t122 * t388), t383 * (-qJ(3) * t46 - t21 * t378 + t22 * t379) + t388 * (-pkin(2) * t232 + qJ(3) * t47 + t21 * t379 + t22 * t378) - pkin(1) * t232 + pkin(7) * (-t383 * t46 + t388 * t47), t383 * (-qJ(3) * t18 - t15 * t378 + t16 * t379) + t388 * (pkin(2) * t200 + qJ(3) * t19 + t15 * t379 + t16 * t378) + pkin(1) * t200 + pkin(7) * (-t18 * t383 + t19 * t388), t383 * (-t378 * t77 + t379 * t79) + t388 * (t378 * t79 + t379 * t77), t383 * (-t378 * t52 + t379 * t53) + t388 * (t378 * t53 + t379 * t52), t383 * (-t378 * t66 + t379 * t68) + t388 * (t378 * t68 + t379 * t66), t383 * (-t378 * t76 + t379 * t78) + t388 * (t378 * t78 + t379 * t76), t383 * (-t378 * t67 + t379 * t69) + t388 * (t378 * t69 + t379 * t67), t383 * (-t102 * t378 + t103 * t379) + t388 * (t102 * t379 + t103 * t378), t383 * (-qJ(3) * t33 + t10 * t379 - t378 * t8) + t388 * (-pkin(2) * t141 + qJ(3) * t34 + t10 * t378 + t379 * t8) - pkin(1) * t141 + pkin(7) * (-t33 * t383 + t34 * t388), t383 * (-qJ(3) * t35 + t11 * t379 - t378 * t9) + t388 * (-pkin(2) * t144 + qJ(3) * t36 + t11 * t378 + t379 * t9) - pkin(1) * t144 + pkin(7) * (-t35 * t383 + t36 * t388), t383 * (-qJ(3) * t31 - t378 * t5 + t379 * t7) + t388 * (-pkin(2) * t113 + qJ(3) * t32 + t378 * t7 + t379 * t5) - pkin(1) * t113 + pkin(7) * (-t31 * t383 + t32 * t388), t383 * (-qJ(3) * t3 - t1 * t378 + t2 * t379) + t388 * (-pkin(2) * t38 + qJ(3) * t4 + t1 * t379 + t2 * t378) - pkin(1) * t38 + pkin(7) * (-t3 * t383 + t388 * t4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t372 + t371, t369, t364, t370, qJDD(2), -t337, -t338, 0, 0, t333, t347 - t346, t317, -t333, t315, qJDD(2), pkin(2) * t303 + t406, pkin(2) * t305 - t267, pkin(2) * t276, pkin(2) * t225, -t302, t301, t261, t302, t396, t428, pkin(2) * t206 + pkin(3) * t248 - t183, pkin(2) * t218 + pkin(3) * t263 - t184, pkin(2) * t158 + pkin(3) * t213, pkin(2) * t74 + pkin(3) * t125, t251, t250, t196, -t251, t397, t367, pkin(2) * t92 + pkin(3) * t147 + t407, pkin(2) * t121 + pkin(3) * t172 + t391, pkin(2) * t46 + pkin(3) * t81 + t131, pkin(2) * t18 + pkin(3) * t40 + t63, t161, t116, t152, t162, t150, t202, pkin(2) * t33 + pkin(3) * t54 + t410, pkin(2) * t35 + pkin(3) * t56 + t411, pkin(2) * t31 + pkin(3) * t48 + t409, pkin(2) * t3 + pkin(3) * t13 + t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, t316, t313, -t312, 0, 0, 0, 0, 0, 0, t256, t259, t272, -t265, 0, 0, 0, 0, 0, 0, t192, t197, t232, -t200, 0, 0, 0, 0, 0, 0, t141, t144, t113, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t301, t261, t302, t396, t428, -t183, -t184, 0, 0, t251, t250, t196, -t251, t397, t367, t407, t391, t131, t63, t161, t116, t152, t162, t150, t202, t410, t411, t409, t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, t250, t196, -t251, t397, t367, -t105, -t106, 0, 0, t161, t116, t152, t162, t150, t202, t425, t426, t412, t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, t236, t170, -t237, -t166, t208, -t60, -t61, 0, 0;];
tauJ_reg  = t27;
