% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:14:34
% EndTime: 2019-03-09 13:15:11
% DurationCPUTime: 26.39s
% Computational Cost: add. (23893->631), mult. (46412->793), div. (0->0), fcn. (57861->10), ass. (0->482)
t440 = cos(qJ(6));
t437 = sin(qJ(5));
t434 = sin(pkin(11));
t435 = cos(pkin(11));
t439 = sin(qJ(2));
t442 = cos(qJ(2));
t401 = t434 * t442 + t435 * t439;
t441 = cos(qJ(4));
t399 = t441 * t401;
t400 = -t434 * t439 + t435 * t442;
t438 = sin(qJ(4));
t685 = t438 * t400;
t789 = t399 + t685;
t741 = -qJ(3) - pkin(7);
t410 = t741 * t439;
t411 = t741 * t442;
t788 = t435 * t410 + t434 * t411;
t808 = -pkin(8) * t401 + t788;
t836 = t441 * t808;
t373 = t434 * t410 - t435 * t411;
t343 = -pkin(8) * t400 - t373;
t839 = t438 * t343;
t852 = -t836 - t839;
t873 = -pkin(9) * t789 - t852;
t894 = t437 * t873;
t498 = t400 * t441 - t438 * t401;
t837 = t441 * t343;
t838 = t438 * t808;
t851 = t837 - t838;
t181 = -pkin(9) * t498 + t851;
t748 = cos(qJ(5));
t923 = t748 * t181;
t931 = -t923 + t894;
t947 = t931 * t440;
t952 = -t947 / 0.2e1;
t860 = 0.2e1 * t952;
t436 = sin(qJ(6));
t752 = -t436 / 0.2e1;
t890 = -t437 * t789 + t748 * t498;
t877 = t890 * t752;
t795 = t437 * t498;
t815 = t748 * t789;
t832 = t815 + t795;
t858 = t436 * t832;
t880 = -t858 / 0.2e1;
t955 = pkin(5) * t877 + pkin(10) * t880 + t860;
t948 = t931 * t436;
t951 = t948 / 0.2e1;
t861 = 0.2e1 * t951;
t857 = t440 * t832;
t882 = -t857 / 0.2e1;
t954 = pkin(10) * t882 + t861;
t178 = t923 / 0.2e1;
t545 = -t894 / 0.2e1;
t944 = t545 + t178;
t953 = 0.2e1 * t944;
t801 = qJD(4) + qJD(5);
t528 = qJD(2) + t801;
t927 = qJD(2) + qJD(5);
t572 = -pkin(2) * t442 - pkin(1);
t387 = -t400 * pkin(3) + t572;
t305 = -pkin(4) * t498 + t387;
t864 = pkin(10) * t832;
t514 = -pkin(5) * t890 - t864;
t447 = t305 + t514;
t45 = -t440 * t447 + t948;
t946 = t931 * t832;
t950 = t436 * t946 - t45 * t832;
t46 = t436 * t447 + t947;
t949 = t440 * t946 - t46 * t832;
t130 = t436 * t890;
t892 = t130 / 0.2e1 + t877;
t114 = t892 * qJD(6);
t705 = t890 ^ 2;
t865 = t832 ^ 2;
t891 = -t705 + t865;
t922 = t891 * t436;
t929 = qJD(1) * t922;
t945 = t114 - t929;
t893 = t748 * t873;
t924 = t437 * t181;
t932 = t893 + t924;
t725 = t440 * t932;
t750 = -t440 / 0.2e1;
t941 = t750 * t932 - t725 / 0.2e1;
t726 = t436 * t932;
t940 = t752 * t932 - t726 / 0.2e1;
t432 = t436 ^ 2;
t433 = t440 ^ 2;
t810 = t433 / 0.2e1 - t432 / 0.2e1;
t120 = t810 * t832;
t112 = t120 * qJD(6);
t749 = t440 / 0.2e1;
t540 = t890 * t749;
t249 = t436 * t540;
t875 = t440 * t890;
t896 = t875 / 0.2e1;
t925 = t436 * t896;
t936 = t249 + t925;
t939 = t936 * qJD(4) + t112;
t176 = -t893 / 0.2e1;
t792 = -t924 / 0.2e1 + t176;
t938 = 0.2e1 * t792;
t937 = -t923 / 0.2e1;
t430 = qJD(6) * t440;
t421 = t436 * t430;
t699 = t436 * t440;
t822 = -t890 / 0.2e1;
t883 = t890 / 0.2e1;
t885 = (t883 + t822) * t699;
t918 = qJD(1) * t885;
t935 = t421 - t918;
t934 = t421 + t918;
t933 = t528 * t890;
t921 = t891 * t440;
t930 = qJD(1) * t921;
t897 = -t875 / 0.2e1;
t919 = t896 + t897;
t928 = qJD(6) * t919;
t827 = qJD(2) + qJD(4);
t879 = t858 / 0.2e1;
t899 = 0.2e1 * t879;
t926 = qJD(4) * t899 + t928;
t881 = t857 / 0.2e1;
t886 = t881 + t882;
t917 = qJD(2) * t886;
t887 = t879 + t880;
t916 = qJD(2) * t887;
t915 = qJD(2) * t899;
t781 = qJD(3) * t890;
t914 = qJD(3) * t899;
t913 = qJD(4) * t887;
t898 = 0.2e1 * t881;
t912 = qJD(4) * t898;
t910 = qJD(5) * t885;
t778 = qJD(5) * t899;
t909 = t886 * qJD(1);
t908 = t886 * qJD(3);
t907 = t887 * qJD(1);
t867 = t887 * qJD(3);
t906 = t890 * qJD(1);
t905 = t891 * qJD(1);
t904 = t899 * qJD(1);
t900 = 0.2e1 * t810 * t890;
t903 = t900 * qJD(2);
t902 = t900 * qJD(4);
t798 = -0.2e1 * t832;
t246 = t421 * t798;
t901 = t900 * qJD(5) + t246;
t558 = t832 * t906;
t743 = t832 * pkin(5);
t744 = pkin(10) * t890;
t156 = t743 - t744;
t843 = t815 / 0.2e1;
t849 = t843 + t795 / 0.2e1;
t804 = qJD(6) * t849;
t848 = t832 * qJD(1);
t819 = t890 * t848;
t889 = -t819 + t804;
t888 = t930 + t915;
t878 = t890 * t305;
t742 = t437 * pkin(4);
t423 = pkin(10) + t742;
t876 = t423 * t832;
t868 = t849 * qJD(1);
t562 = qJD(1) * t699;
t523 = t832 * t562;
t510 = 0.2e1 * t523;
t866 = t510 * t890 + t246;
t762 = -t836 / 0.2e1;
t763 = t837 / 0.2e1;
t859 = t305 * t832;
t856 = -t876 / 0.2e1;
t357 = -t815 / 0.2e1;
t809 = t849 - t795 / 0.2e1 + t357;
t846 = qJD(2) * t953 + qJD(3) * t809;
t831 = qJD(2) * t809;
t800 = t498 ^ 2 - t789 ^ 2;
t829 = t800 * qJD(1);
t828 = t809 * qJD(1);
t825 = -t433 * t819 + t112;
t824 = qJD(2) * t938;
t768 = t832 / 0.2e1;
t746 = pkin(4) * t789;
t775 = t498 * qJD(1);
t812 = t789 * t775;
t794 = t528 * t699;
t103 = t120 * qJD(1) + t794;
t787 = 0.2e1 * t843 + t795;
t806 = qJD(2) * t787;
t805 = qJD(3) * t787;
t802 = t787 * qJD(1);
t419 = t433 - t432;
t796 = t419 * t528;
t229 = t827 * t498;
t780 = qJD(3) * t498;
t779 = qJD(5) * t887;
t773 = -t120 * t528 + t562 * t865;
t771 = pkin(5) / 0.2e1;
t571 = pkin(2) * t435 + pkin(3);
t412 = t441 * t571;
t747 = pkin(2) * t434;
t587 = t438 * t747;
t397 = -t412 + t587;
t506 = pkin(4) - t397;
t386 = t748 * t506;
t398 = t438 * t571 + t441 * t747;
t690 = t437 * t398;
t337 = -t386 + t690;
t335 = -pkin(5) + t337;
t761 = -t335 / 0.2e1;
t388 = t748 * t398;
t470 = t437 * t506;
t338 = t388 + t470;
t336 = pkin(10) + t338;
t760 = t336 / 0.2e1;
t759 = t338 / 0.2e1;
t691 = t437 * t397;
t341 = t388 - t691;
t758 = -t341 / 0.2e1;
t536 = t399 / 0.2e1;
t586 = t748 * pkin(4);
t424 = -t586 - pkin(5);
t755 = -t424 / 0.2e1;
t751 = t436 / 0.2e1;
t431 = t439 * pkin(2);
t740 = qJD(2) * pkin(2);
t389 = pkin(3) * t401 + t431;
t306 = t389 + t746;
t94 = t306 + t156;
t1 = -t875 * t94 + t950;
t739 = t1 * qJD(1);
t2 = t130 * t94 + t949;
t738 = t2 * qJD(1);
t97 = t746 + t156;
t3 = -t875 * t97 + t950;
t737 = t3 * qJD(1);
t4 = t130 * t97 + t949;
t736 = t4 * qJD(1);
t5 = (-t45 + t948) * t832 - t156 * t875;
t733 = t5 * qJD(1);
t6 = (-t46 + t947) * t832 + t156 * t130;
t732 = t6 * qJD(1);
t566 = t748 * t397;
t342 = -t566 - t690;
t478 = t424 * t883 + t856;
t444 = t890 * t761 + t342 * t822 + t478 + (t758 + t760) * t832;
t7 = t952 + t947 / 0.2e1 + t444 * t436;
t731 = t7 * qJD(1);
t27 = -t45 * t890 + t858 * t932;
t724 = qJD(1) * t27;
t28 = t46 * t890 - t857 * t932;
t723 = qJD(1) * t28;
t503 = t705 + t865;
t57 = t503 * t436;
t717 = qJD(1) * t57;
t60 = t503 * t440;
t714 = qJD(1) * t60;
t77 = -t306 * t890 + t859;
t713 = qJD(1) * t77;
t78 = t306 * t832 + t878;
t712 = qJD(1) * t78;
t85 = t746 * t890 - t859;
t711 = qJD(1) * t85;
t86 = -t746 * t832 - t878;
t710 = qJD(1) * t86;
t533 = t337 / 0.2e1 + t761;
t450 = (-t336 / 0.2e1 + t759) * t832 - t533 * t890;
t445 = t864 / 0.2e1 + pkin(5) * t883 + t450;
t11 = t436 * t445;
t707 = t11 * qJD(1);
t704 = t341 * t440;
t675 = (qJD(4) - qJD(5)) * t886;
t332 = t338 * qJD(5);
t333 = t341 * qJD(4);
t667 = -t333 - t332;
t111 = t436 * t897 + t249;
t664 = qJD(1) * t111;
t247 = t373 * t400 - t401 * t788;
t663 = qJD(1) * t247;
t660 = qJD(1) * t305;
t659 = qJD(1) * t387;
t658 = qJD(1) * t442;
t657 = qJD(2) * t832;
t654 = qJD(2) * t436;
t653 = qJD(2) * t439;
t652 = qJD(2) * t440;
t651 = qJD(2) * t442;
t650 = qJD(3) * t832;
t649 = qJD(4) * t832;
t646 = qJD(4) * t387;
t645 = qJD(4) * t436;
t644 = qJD(4) * t440;
t642 = qJD(5) * t832;
t641 = qJD(5) * t305;
t640 = qJD(5) * t436;
t639 = qJD(5) * t440;
t638 = qJD(6) * t436;
t535 = t768 - t832 / 0.2e1;
t123 = t535 * t436;
t634 = t123 * qJD(1);
t125 = 0.2e1 * t880;
t633 = t125 * qJD(1);
t629 = t130 * qJD(1);
t534 = 0.2e1 * t822;
t132 = t534 * t436;
t628 = t132 * qJD(1);
t134 = 0.2e1 * t883 * t436;
t115 = t134 * qJD(1);
t627 = t898 * qJD(1);
t141 = t535 * t440;
t625 = t141 * qJD(1);
t143 = 0.2e1 * t882;
t623 = t143 * qJD(1);
t622 = t875 * qJD(1);
t147 = t534 * t440;
t621 = t147 * qJD(1);
t149 = 0.2e1 * t897;
t620 = t149 * qJD(1);
t150 = 0.2e1 * t896;
t619 = t150 * qJD(1);
t155 = t419 * t865;
t618 = t155 * qJD(1);
t205 = t431 * t572;
t608 = t205 * qJD(1);
t210 = t387 * t789 - t389 * t498;
t607 = t210 * qJD(1);
t211 = t387 * t498 + t389 * t789;
t606 = t211 * qJD(1);
t296 = t357 + t843;
t601 = t296 * qJD(1);
t308 = 0.2e1 * t536 + t685;
t597 = t308 * qJD(1);
t460 = (t434 * t400 / 0.2e1 - t435 * t401 / 0.2e1) * pkin(2);
t340 = -t431 / 0.2e1 + t460;
t596 = t340 * qJD(1);
t364 = t536 - t399 / 0.2e1;
t595 = t364 * qJD(1);
t594 = t364 * qJD(4);
t593 = t789 * qJD(1);
t369 = t400 ^ 2 + t401 ^ 2;
t591 = t369 * qJD(1);
t420 = -t439 ^ 2 + t442 ^ 2;
t590 = t420 * qJD(1);
t585 = pkin(1) * t439 * qJD(1);
t584 = pkin(1) * t658;
t583 = qJD(4) * t742;
t582 = qJD(5) * t742;
t429 = pkin(5) * t750;
t573 = -t143 * qJD(5) + t652 * t832 + t912;
t565 = t890 * t660;
t564 = t832 * t660;
t563 = t433 * t848;
t561 = qJD(6) * t890 * t832;
t555 = t498 * t659;
t554 = t789 * t659;
t553 = t439 * t658;
t552 = t440 * t848;
t309 = t335 * t751;
t546 = t342 * t752;
t537 = t342 * t750;
t531 = t748 * qJD(4);
t530 = t748 * qJD(5);
t525 = -t586 / 0.2e1;
t520 = t893 / 0.2e1;
t518 = t566 / 0.2e1;
t517 = t742 / 0.2e1 + t759;
t516 = t771 + t533;
t515 = t801 * t742;
t511 = -0.2e1 * t523;
t507 = -t342 / 0.2e1 + t755 + t761;
t504 = t424 * t890 - t876;
t501 = t335 * t890 - t336 * t832;
t446 = t856 - t890 * t755 + (t437 * t768 + t748 * t883) * pkin(4);
t443 = pkin(10) * t768 + t771 * t890 + t446;
t15 = t436 * t443;
t481 = t758 + t517;
t219 = t481 * t440;
t497 = t15 * qJD(1) - t219 * qJD(2);
t225 = (t397 / 0.2e1 + pkin(4) - t587 / 0.2e1 + t412 / 0.2e1) * t437;
t455 = t894 / 0.2e1;
t35 = t545 + t455;
t496 = -t35 * qJD(1) - t225 * qJD(2);
t485 = t386 / 0.2e1 + t586 / 0.2e1;
t227 = t518 + t485;
t495 = t227 * qJD(2);
t33 = t178 + t937;
t494 = -qJD(1) * t33 + qJD(2) * t341;
t39 = t176 + t520;
t493 = -qJD(1) * t39 - qJD(2) * t337;
t36 = t937 + t455 + t944;
t492 = qJD(1) * t36 + qJD(2) * t338;
t41 = t520 + t924 / 0.2e1 + t792;
t491 = -qJD(1) * t41 + qJD(2) * t342;
t99 = t762 + t836 / 0.2e1;
t490 = -qJD(1) * t99 - qJD(2) * t397;
t98 = t763 - t837 / 0.2e1;
t489 = qJD(1) * t98 + qJD(2) * t398;
t488 = t832 * (-qJD(6) + t906);
t487 = qJD(2) * t789 + qJD(4) * t308;
t486 = t801 * t809;
t484 = -t744 / 0.2e1 + t743 / 0.2e1;
t9 = t951 - t948 / 0.2e1 + t444 * t440;
t480 = qJD(1) * t9 - t341 * t654;
t479 = -t760 * t890 + t761 * t832;
t477 = t423 * t822 + t755 * t832;
t14 = t440 * t445;
t476 = -qJD(1) * t14 - t338 * t654;
t459 = t94 / 0.2e1 + t479;
t19 = t436 * t459;
t475 = -qJD(1) * t19 - t335 * t652;
t21 = t440 * t459;
t474 = qJD(1) * t21 - t335 * t654;
t473 = t804 - t558;
t466 = t525 + t771 + t755;
t465 = t156 / 0.2e1 + t484;
t458 = t97 / 0.2e1 + t477;
t457 = t787 * t801 + t657;
t212 = t507 * t436;
t25 = t440 * t458;
t454 = qJD(1) * t25 + qJD(2) * t212 - t424 * t645;
t213 = t507 * t440;
t23 = t436 * t458;
t453 = -qJD(1) * t23 + qJD(2) * t213 - t424 * t644;
t452 = t933 * t832;
t18 = t440 * t443;
t218 = t481 * t436;
t451 = -qJD(1) * t18 - qJD(2) * t218 - t436 * t583;
t221 = t516 * t436;
t31 = t465 * t440;
t374 = t466 * t436;
t449 = pkin(5) * t640 + qJD(1) * t31 + qJD(2) * t221 + qJD(4) * t374;
t222 = t516 * t440;
t29 = t465 * t436;
t375 = t466 * t440;
t448 = pkin(5) * t639 - qJD(1) * t29 + qJD(2) * t222 + qJD(4) * t375;
t428 = pkin(5) * t752;
t418 = t436 * t582;
t413 = t419 * qJD(6);
t409 = t424 * t749;
t408 = t424 * t751;
t391 = t398 * qJD(4);
t390 = t397 * qJD(4);
t377 = t440 * t525 + t409 + t429;
t376 = t436 * t525 + t408 + t428;
t339 = t431 / 0.2e1 + t460;
t334 = t342 * qJD(4);
t331 = t337 * qJD(5);
t320 = t436 * t333;
t315 = t436 * t332;
t310 = t335 * t749;
t228 = -t485 + t518 + t690;
t226 = -t742 / 0.2e1 - t388 - t470 / 0.2e1 + t691 / 0.2e1;
t224 = t337 * t749 + t310 + t429;
t223 = t337 * t751 + t309 + t428;
t220 = -t704 / 0.2e1 - t517 * t440;
t217 = t341 * t751 + t436 * t517;
t215 = t409 + t310 + t537;
t214 = t408 + t309 + t546;
t209 = t511 + t796;
t208 = t510 - t796;
t207 = -t795 + 0.2e1 * t357;
t146 = t897 + t540;
t113 = t134 * qJD(6);
t108 = 0.2e1 * t925;
t104 = t115 - t638;
t101 = 0.2e1 * t763 - t838;
t100 = -t839 + 0.2e1 * t762;
t87 = t528 * t849;
t32 = t156 * t749 - t440 * t484 - t726;
t30 = t156 * t752 + t436 * t484 - t725;
t26 = -t440 * t477 + t749 * t97 + t940;
t24 = t436 * t477 + t752 * t97 + t941;
t22 = -t440 * t479 + t749 * t94 + t940;
t20 = t436 * t479 + t752 * t94 + t941;
t17 = t429 * t890 + t440 * t446 + t954;
t16 = t436 * t446 + t955;
t13 = pkin(5) * t897 + t440 * t450 + t954;
t12 = t436 * t450 + t955;
t10 = t335 * t540 + t336 * t882 + t341 * t881 + t440 * t478 - t537 * t890 + t861;
t8 = t879 * t341 + t336 * t880 + t436 * t478 - (-t309 + t546) * t890 + t860;
t34 = [0, 0, 0, t439 * t651, t420 * qJD(2), 0, 0, 0, -pkin(1) * t653, -pkin(1) * t651, qJD(3) * t369, qJD(2) * t205 + qJD(3) * t247, t229 * t789, t827 * t800, 0, 0, 0, qJD(2) * t210 + t646 * t789, qJD(2) * t211 + t498 * t646, t452, -t528 * t891, 0, 0, 0, qJD(2) * t77 - qJD(4) * t85 + t641 * t832, qJD(2) * t78 - qJD(4) * t86 + t641 * t890, -t421 * t865 + t433 * t452, -0.2e1 * t436 * t857 * t933 - t155 * qJD(6), t436 * t561 + t528 * t921, t440 * t561 - t528 * t922 -(t642 + t649 + t657) * t890, qJD(2) * t1 + qJD(3) * t57 + qJD(4) * t3 + qJD(5) * t5 + qJD(6) * t28, qJD(2) * t2 + qJD(3) * t60 + qJD(4) * t4 + qJD(5) * t6 + qJD(6) * t27; 0, 0, 0, t553, t590, t651, -t653, 0, -pkin(7) * t651 - t585, pkin(7) * t653 - t584 (-t400 * t435 - t401 * t434) * t740, t608 + t339 * qJD(3) + (-t373 * t435 + t434 * t788) * t740, t812, t829, t229, -t487, 0, qJD(2) * t851 + t101 * qJD(4) + t607, qJD(2) * t852 + t100 * qJD(4) + t606, t558, -t905, t933, -t457, 0, -qJD(2) * t931 + t801 * t953 + t713, -qJD(2) * t932 + t801 * t938 + t712, t108 * qJD(5) + (t436 * t652 + t563) * t890 + t939, t902 + (qJD(2) * t419 + t511) * t890 + t901, t654 * t832 + t778 + t926 + t930, t573 + t945, t889, t739 + (t436 * t501 - t947) * qJD(2) + t8 * qJD(4) + t12 * qJD(5) + t22 * qJD(6), t738 + (t440 * t501 + t948) * qJD(2) + t867 + t10 * qJD(4) + t13 * qJD(5) + t20 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, qJD(2) * t339 + t663, 0, 0, 0, 0, 0, t594, 0, 0, 0, 0, 0, 0, t486, 0, 0, 0, 0, 0, 0, t114 + t675 + t717, t714 + t779 + t913 + t916 + t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t812, t829, t229, -qJD(2) * t308 - qJD(4) * t789, 0, t101 * qJD(2) + t364 * qJD(3) + qJD(4) * t851 + t554, t100 * qJD(2) + qJD(4) * t852 + t555, t819, -t905, t933, qJD(5) * t207 - t649 - t806, 0, -qJD(4) * t931 + qJD(5) * t953 - t711 + t846, -qJD(4) * t932 + qJD(5) * t938 - t710 + t824, t112 + (t436 * t644 + t563) * t890 + t927 * t936, t903 + (qJD(4) * t419 + t511) * t890 + t901, qJD(6) * t146 + t645 * t832 + t778 + t888, t644 * t832 + t898 * t927 + t945, t473, t737 + t8 * qJD(2) + t908 + (t436 * t504 - t947) * qJD(4) + t16 * qJD(5) + t26 * qJD(6), t736 + t10 * qJD(2) + t867 + (t440 * t504 + t948) * qJD(4) + t17 * qJD(5) + t24 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t819, -t905, t933, qJD(4) * t207 - t642 - t806, 0, qJD(4) * t953 - qJD(5) * t931 + t564 + t846, qJD(4) * t938 - qJD(5) * t932 + t565 + t824, t108 * qJD(2) - (-t436 * t639 - t563) * t890 + t939, t903 + t902 + t246 - (-qJD(5) * t419 + t510) * t890, t640 * t832 + t888 + t926, -qJD(2) * t143 + t639 * t832 + t912 - t929, t889, t733 + t12 * qJD(2) - t908 + t16 * qJD(4) + (t436 * t514 - t947) * qJD(5) + t32 * qJD(6), t732 + t13 * qJD(2) + t867 + t17 * qJD(4) + (t440 * t514 + t948) * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t773, t794 * t798 - t618, t146 * qJD(4) + t436 * t488 + t919 * t927, t440 * t488 + t827 * t892, t87, qJD(2) * t22 + qJD(3) * t892 + qJD(4) * t26 + qJD(5) * t32 - qJD(6) * t46 + t723, qJD(2) * t20 + qJD(3) * t919 + qJD(4) * t24 + qJD(5) * t30 + qJD(6) * t45 + t724; 0, 0, 0, -t553, -t590, 0, 0, 0, t585, t584, 0, qJD(3) * t340 - t608, -t812, -t829, 0, -t594, 0, -qJD(3) * t789 - qJD(4) * t98 - t607, qJD(4) * t99 - t606 - t780, -t558, t905, 0, -t486, 0, qJD(4) * t33 - qJD(5) * t36 - t650 - t713, qJD(4) * t41 + qJD(5) * t39 - t712 - t781, qJD(4) * t111 - t433 * t558 + t112 + t910, t866, qJD(6) * t149 - t779 + t913 - t930, t113 + t675 + t929, -t889, -qJD(4) * t7 + qJD(5) * t11 - qJD(6) * t21 - t440 * t650 - t739, -qJD(4) * t9 + qJD(5) * t14 + qJD(6) * t19 - t738 + t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t391, t390, 0, 0, 0, 0, 0, t667, -t334 + t331, t421, t413, 0, 0, 0, t335 * t638 + t440 * t667, t335 * t430 + t315 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t596, 0, 0, 0, 0, 0, -t593, -t775, 0, 0, 0, 0, 0, -t848, -t906, 0, 0, 0, 0, 0, -t552, t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t595, 0, -t391 - t489, t390 - t490, 0, 0, 0, -t828, 0, qJD(5) * t226 - t333 - t494, qJD(5) * t228 - t334 - t491, t421 + t664, t413, t907, t909, 0, t220 * qJD(5) + t214 * qJD(6) - t704 * t827 - t731, qJD(5) * t217 + qJD(6) * t215 + t320 - t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t828, 0, qJD(4) * t226 - t332 - t492, qJD(4) * t228 + t331 - t493, t934, t413, -t907, -t909, 0, -t338 * t440 * t927 + t220 * qJD(4) + t223 * qJD(6) + t707, qJD(4) * t217 + qJD(6) * t224 + t315 - t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t209, t430 + t620, t104, -t868, qJD(4) * t214 + qJD(5) * t223 - t336 * t430 - t474, qJD(4) * t215 + qJD(5) * t224 + t336 * t638 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t591, -qJD(2) * t340 - t663, 0, 0, 0, 0, 0, t487, t229, 0, 0, 0, 0, 0, t457, t933, 0, 0, 0, 0, 0, t113 + t573 - t717, qJD(4) * t125 + qJD(6) * t150 - t714 - t778 - t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t596, 0, 0, 0, 0, 0, t593, t775, 0, 0, 0, 0, 0, t848, t906, 0, 0, 0, 0, 0, t552, -t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t597, t775, 0, 0, 0, 0, 0, t802, t906, 0, 0, 0, 0, 0, t627, t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, t906, 0, 0, 0, 0, 0, -t623, -t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t430 + t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t812, -t829, 0, t364 * qJD(2), 0, qJD(2) * t98 - qJD(3) * t308 - t554, -qJD(2) * t99 - t555 - t780, -t819, t905, 0, qJD(5) * t296 + t831, 0, -qJD(2) * t33 - qJD(5) * t35 + t711 - t805, -qJD(2) * t41 + t710 - t781, -qJD(2) * t111 + t825 + t910, t866, -qJD(5) * t123 + qJD(6) * t147 - t916 - t930, -qJD(5) * t141 - qJD(6) * t132 - t917 + t929, -t473, qJD(2) * t7 - qJD(3) * t898 + qJD(5) * t15 - qJD(6) * t25 - t737, qJD(2) * t9 - qJD(3) * t125 + qJD(5) * t18 + qJD(6) * t23 - t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t595, 0, t489, t490, 0, 0, 0, t828, 0, -qJD(5) * t225 + t494, -qJD(5) * t227 + t491, t421 - t664, t413, -t907, -t909, 0, -qJD(5) * t219 - qJD(6) * t212 + t341 * t652 + t731, qJD(5) * t218 - qJD(6) * t213 + t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t597, -t775, 0, 0, 0, 0, 0, -t802, -t906, 0, 0, 0, 0, 0, -t627, -t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, -pkin(4) * t530, t421, t413, 0, 0, 0, t424 * t638 - t440 * t582, t424 * t430 + t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t601, 0, -t515 + t496 (-t531 - t530) * pkin(4) - t495, t934, t413, -t634, -t625, 0, t376 * qJD(6) - t440 * t515 + t497, qJD(6) * t377 + t418 - t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t209, t430 + t621, -t628 - t638, -t868, qJD(5) * t376 - t423 * t430 - t454, qJD(5) * t377 + t423 * t638 - t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t819, t905, 0, -qJD(4) * t296 + t831, 0, qJD(2) * t36 + qJD(4) * t35 - t564 - t805, -qJD(2) * t39 - t565 - t781, -t827 * t885 + t825, -t511 * t890 + t246, qJD(4) * t123 - qJD(6) * t875 + t916 - t930, qJD(4) * t141 + qJD(6) * t130 + t917 + t929, -t889, -qJD(2) * t11 + qJD(3) * t143 - qJD(4) * t15 - qJD(6) * t31 - t733, -qJD(2) * t14 - qJD(4) * t18 + qJD(6) * t29 - t732 + t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t828, 0, qJD(4) * t225 + t492, qJD(4) * t227 + t493, t935, t413, t907, t909, 0, qJD(4) * t219 - qJD(6) * t221 + t338 * t652 - t707, -qJD(4) * t218 - qJD(6) * t222 + t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t802, -t906, 0, 0, 0, 0, 0, t623, t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t601, 0, -t496 + t583, pkin(4) * t531 + t495, t935, t413, t634, t625, 0, -qJD(6) * t374 + t440 * t583 - t497, -qJD(6) * t375 + t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t413, 0, 0, 0, -pkin(5) * t638, -pkin(5) * t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t209, t430 - t622, t629 - t638, -t868, -pkin(10) * t430 - t449, pkin(10) * t638 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t773, 0.2e1 * t794 * t832 + t618, -qJD(2) * t149 - qJD(4) * t147 + qJD(5) * t875 - t436 * t819, -qJD(2) * t134 + qJD(4) * t132 - qJD(5) * t130 - t440 * t819, t87, qJD(2) * t21 - qJD(3) * t134 + qJD(4) * t25 + qJD(5) * t31 - t723, -qJD(2) * t19 - qJD(3) * t150 - qJD(4) * t23 - qJD(5) * t29 - t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t208, -t620, -t115, t868, qJD(4) * t212 + qJD(5) * t221 + t474, qJD(4) * t213 + qJD(5) * t222 + t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115, -t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t208, -t621, t628, t868, qJD(5) * t374 + t454, qJD(5) * t375 + t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t208, t622, -t629, t868, t449, t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t34;
