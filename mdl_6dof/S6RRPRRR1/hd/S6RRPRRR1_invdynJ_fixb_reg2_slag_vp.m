% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR1_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:14:38
% EndTime: 2019-03-09 13:15:01
% DurationCPUTime: 14.20s
% Computational Cost: add. (31019->702), mult. (76562->866), div. (0->0), fcn. (60468->18), ass. (0->351)
t284 = cos(qJ(6));
t401 = qJD(6) * t284;
t281 = sin(qJ(5));
t282 = sin(qJ(2));
t285 = cos(qJ(2));
t440 = cos(pkin(11));
t367 = qJD(1) * t440;
t354 = t285 * t367;
t439 = sin(pkin(11));
t366 = qJD(1) * t439;
t207 = t282 * t366 - t354;
t324 = t282 * t440 + t285 * t439;
t209 = t324 * qJD(1);
t465 = sin(qJ(4));
t467 = cos(qJ(4));
t328 = -t207 * t465 + t209 * t467;
t329 = -t207 * t467 - t209 * t465;
t466 = cos(qJ(5));
t109 = t281 * t328 - t329 * t466;
t520 = t109 * t284;
t530 = t401 + t520;
t347 = qJD(2) * t366;
t308 = qJDD(1) * t324 - t282 * t347;
t348 = qJD(2) * t367;
t304 = t285 * t348 + t308;
t371 = t440 * t285;
t370 = t439 * t282;
t387 = -qJDD(1) * t370 - t282 * t348 - t285 * t347;
t321 = -qJDD(1) * t371 - t387;
t380 = qJD(4) * t465;
t381 = qJD(4) * t467;
t325 = -t207 * t381 - t209 * t380 + t467 * t304 - t465 * t321;
t379 = qJD(5) * t466;
t404 = qJD(5) * t281;
t301 = t304 * t465 + t467 * t321;
t87 = qJD(4) * t328 + t301;
t360 = -t281 * t87 + t325 * t466 - t328 * t404 + t329 * t379;
t374 = -t281 * t325 - t466 * t87;
t470 = t281 * t329 + t328 * t466;
t501 = t470 * qJD(5);
t48 = -t374 + t501;
t397 = qJD(1) * qJD(2);
t378 = t282 * t397;
t395 = pkin(2) * t378 + qJDD(3);
t132 = -t387 * pkin(3) + (-pkin(1) + (-pkin(3) * t440 - pkin(2)) * t285) * qJDD(1) + t395;
t468 = t87 * pkin(4);
t69 = t132 + t468;
t14 = t48 * pkin(5) - pkin(10) * t360 + t69;
t13 = t284 * t14;
t280 = sin(qJ(6));
t275 = qJD(2) + qJD(4);
t369 = qJD(5) + t275;
t279 = -qJ(3) - pkin(7);
t239 = t279 * t285;
t223 = qJD(1) * t239;
t211 = t439 * t223;
t238 = t279 * t282;
t222 = qJD(1) * t238;
t456 = qJD(2) * pkin(2);
t215 = t222 + t456;
t168 = t440 * t215 + t211;
t459 = t209 * pkin(8);
t130 = qJD(2) * pkin(3) + t168 - t459;
t372 = t440 * t223;
t169 = t439 * t215 - t372;
t460 = t207 * pkin(8);
t135 = t169 - t460;
t327 = -t130 * t465 - t135 * t467;
t491 = pkin(9) * t329;
t75 = -t327 + t491;
t390 = t466 * t75;
t492 = pkin(9) * t328;
t90 = t467 * t130 - t135 * t465;
t74 = t90 - t492;
t71 = t275 * pkin(4) + t74;
t50 = t281 * t71 + t390;
t45 = pkin(10) * t369 + t50;
t271 = t285 * pkin(2);
t264 = t271 + pkin(1);
t232 = -qJD(1) * t264 + qJD(3);
t174 = pkin(3) * t207 + t232;
t121 = -pkin(4) * t329 + t174;
t59 = pkin(5) * t109 - pkin(10) * t470 + t121;
t16 = t280 * t59 + t284 * t45;
t273 = qJDD(2) + qJDD(4);
t358 = qJDD(5) + t273;
t373 = qJD(2) * t279;
t205 = -qJD(3) * t282 + t285 * t373;
t167 = qJDD(2) * pkin(2) + qJD(1) * t205 + qJDD(1) * t238;
t204 = qJD(3) * t285 + t282 * t373;
t171 = qJD(1) * t204 - qJDD(1) * t239;
t117 = t440 * t167 - t171 * t439;
t89 = qJDD(2) * pkin(3) - pkin(8) * t304 + t117;
t118 = t439 * t167 + t440 * t171;
t92 = -pkin(8) * t321 + t118;
t38 = qJD(4) * t327 - t465 * t92 + t467 * t89;
t26 = t273 * pkin(4) - pkin(9) * t325 + t38;
t361 = -t130 * t381 + t135 * t380 - t465 * t89 - t467 * t92;
t30 = -pkin(9) * t87 - t361;
t9 = t281 * t26 + t466 * t30 + t71 * t379 - t75 * t404;
t7 = pkin(10) * t358 + t9;
t3 = -qJD(6) * t16 - t280 * t7 + t13;
t516 = qJD(6) + t109;
t453 = t516 * t16;
t529 = t3 + t453;
t100 = t280 * t369 + t284 * t470;
t526 = t516 * t280;
t528 = t100 * t526;
t403 = qJD(6) * t100;
t36 = t280 * t360 - t284 * t358 + t403;
t34 = t36 * t284;
t342 = t284 * t369;
t98 = t280 * t470 - t342;
t527 = t526 * t98 - t34;
t15 = -t280 * t45 + t284 * t59;
t454 = t516 * t15;
t487 = t109 * t369;
t497 = t360 + t487;
t402 = qJD(6) * t280;
t447 = t281 * t75;
t49 = t466 * t71 - t447;
t44 = -pkin(5) * t369 - t49;
t39 = t44 * t402;
t276 = qJ(2) + pkin(11);
t269 = qJ(4) + t276;
t261 = qJ(5) + t269;
t254 = sin(t261);
t286 = cos(qJ(1));
t420 = t254 * t286;
t283 = sin(qJ(1));
t421 = t254 * t283;
t506 = g(1) * t420 + g(2) * t421;
t525 = -t470 * t15 + t284 * t506 + t39;
t255 = cos(t261);
t463 = g(3) * t255;
t375 = -t466 * t26 + t281 * t30;
t10 = -qJD(5) * t50 - t375;
t8 = -pkin(5) * t358 - t10;
t495 = t8 * t280 + t44 * t401;
t524 = t470 * t16 + t280 * t463 + t495;
t433 = t109 ^ 2;
t510 = t470 ^ 2;
t499 = -t433 + t510;
t35 = -qJD(6) * t342 - t280 * t358 - t284 * t360 + t402 * t470;
t458 = -t280 * t36 - t98 * t401;
t513 = -t284 * t35 - t520 * t98 + t458;
t32 = t35 * t280;
t512 = t530 * t100 - t32;
t523 = t513 - t528;
t46 = qJDD(6) + t48;
t41 = t280 * t46;
t437 = t100 * t470;
t511 = t530 * t516 + t41 - t437;
t42 = t284 * t46;
t452 = t470 * t98;
t522 = -t516 * t526 + t42 + t452;
t521 = t109 * t15;
t509 = t109 * t44;
t429 = t109 * t470;
t350 = g(1) * t286 + g(2) * t283;
t337 = t350 * t254;
t518 = -t280 * t337 + t524;
t384 = -t8 - t463;
t517 = t284 * t384 + t525;
t359 = t470 * t275;
t471 = t359 + t374;
t515 = -t109 * t16 - t3;
t68 = pkin(5) * t470 + pkin(10) * t109;
t514 = -t49 * t109 + t50 * t470;
t246 = g(3) * t254;
t418 = t255 * t286;
t419 = t255 * t283;
t388 = -g(1) * t418 - g(2) * t419 - t246;
t498 = t121 * t109 - t388 - t9;
t488 = t516 * t470;
t293 = -t207 * t380 + t209 * t381 + t301;
t426 = t328 * t275;
t505 = -t293 + t426;
t424 = t329 * t275;
t504 = t325 - t424;
t425 = t329 ^ 2;
t427 = t328 ^ 2;
t503 = -t425 + t427;
t323 = t370 - t371;
t170 = -t465 * t323 + t467 * t324;
t502 = t467 * t323 + t465 * t324;
t474 = -t121 * t470 - t375 - t463 + t506;
t480 = t275 * t170;
t291 = t275 * t502;
t494 = pkin(4) * t328;
t383 = t440 * pkin(2);
t260 = t383 + pkin(3);
t382 = t439 * pkin(2);
t202 = t467 * t260 - t465 * t382;
t201 = pkin(4) + t202;
t203 = t260 * t465 + t382 * t467;
t146 = t201 * t466 - t281 * t203;
t188 = t202 * qJD(4);
t189 = t203 * qJD(4);
t101 = qJD(5) * t146 + t188 * t466 - t281 * t189;
t172 = -t222 * t439 + t372;
t136 = t172 + t460;
t173 = t440 * t222 + t211;
t137 = t173 - t459;
t93 = t136 * t467 - t137 * t465;
t316 = t93 - t491;
t94 = t465 * t136 + t467 * t137;
t77 = t94 - t492;
t54 = t281 * t316 + t466 * t77;
t445 = t101 - t54;
t147 = t281 * t201 + t466 * t203;
t444 = t147 * qJD(5) + (t189 + t316) * t466 + (t188 - t77) * t281;
t423 = t329 * t328;
t482 = -g(1) * t283 + g(2) * t286;
t486 = t482 * t254;
t483 = t255 * pkin(5) + t254 * pkin(10);
t477 = -t15 * t280 + t16 * t284;
t258 = sin(t269);
t416 = t258 * t286;
t417 = t258 * t283;
t259 = cos(t269);
t462 = g(3) * t259;
t473 = g(1) * t416 + g(2) * t417 - t174 * t328 + t38 - t462;
t414 = t259 * t286;
t415 = t259 * t283;
t472 = g(1) * t414 + g(2) * t415 + g(3) * t258 - t174 * t329 + t361;
t469 = t209 ^ 2;
t287 = qJD(2) ^ 2;
t461 = g(3) * t285;
t2 = qJD(6) * t15 + t14 * t280 + t284 * t7;
t1 = t2 * t284;
t455 = t100 * t98;
t294 = t466 * t502;
t61 = qJD(5) * t294 + t170 * t404 + t281 * t480 + t291 * t466;
t449 = t280 * t61;
t448 = t280 * t98;
t446 = t284 * t61;
t442 = t188 - t94;
t441 = -t189 - t93;
t438 = pkin(7) * qJDD(1);
t436 = t100 * t280;
t299 = t281 * t502;
t120 = t170 * t466 - t299;
t428 = t120 * t284;
t422 = t209 * t207;
t413 = t280 * t283;
t412 = t280 * t286;
t411 = t283 * t284;
t410 = t284 * t286;
t175 = t440 * t238 + t239 * t439;
t153 = -pkin(8) * t324 + t175;
t176 = t439 * t238 - t440 * t239;
t154 = -pkin(8) * t323 + t176;
t105 = t465 * t153 + t467 * t154;
t152 = t440 * t204 + t439 * t205;
t268 = cos(t276);
t408 = pkin(3) * t268 + t271;
t277 = t282 ^ 2;
t278 = t285 ^ 2;
t407 = t277 - t278;
t406 = t277 + t278;
t405 = qJD(1) * t282;
t400 = t209 * qJD(2);
t396 = t285 * qJDD(1);
t274 = -pkin(8) + t279;
t392 = pkin(10) * qJD(6) * t516;
t266 = t282 * t456;
t288 = qJD(1) ^ 2;
t389 = t282 * t288 * t285;
t253 = pkin(4) * t259;
t386 = t253 + t408;
t177 = pkin(2) * t405 + pkin(3) * t209;
t267 = sin(t276);
t353 = -pkin(2) * t282 - pkin(3) * t267;
t197 = -pkin(4) * t258 + t353;
t377 = -pkin(5) * t254 + t197;
t362 = t1 + t388;
t357 = pkin(4) * t379;
t356 = t285 * t378;
t51 = t281 * t74 + t390;
t355 = pkin(4) * t404 - t51;
t351 = -pkin(10) * t46 + t509;
t104 = t467 * t153 - t154 * t465;
t262 = pkin(4) * t281 + pkin(10);
t346 = -t262 * t46 + t509;
t145 = pkin(10) + t147;
t345 = -t145 * t46 + t509;
t344 = t15 * t284 + t16 * t280;
t79 = -t170 * pkin(9) + t104;
t80 = -pkin(9) * t502 + t105;
t58 = t281 * t79 + t466 * t80;
t119 = t170 * t281 + t294;
t183 = pkin(3) * t323 - t264;
t131 = pkin(4) * t502 + t183;
t66 = t119 * pkin(5) - t120 * pkin(10) + t131;
t29 = t280 * t66 + t284 * t58;
t28 = -t280 * t58 + t284 * t66;
t151 = -t204 * t439 + t440 * t205;
t340 = -t109 * t526 - t402 * t516 + t42;
t122 = t177 + t494;
t339 = -qJD(6) * t59 + t246 - t7;
t336 = t350 * t258;
t335 = -0.2e1 * pkin(1) * t397 - pkin(7) * qJDD(2);
t334 = -t120 * t402 - t446;
t317 = qJD(2) * t323;
t126 = pkin(8) * t317 + t151;
t318 = qJD(2) * t324;
t127 = -pkin(8) * t318 + t152;
t330 = t126 * t467 - t127 * t465;
t200 = -qJDD(1) * t264 + t395;
t63 = t465 * t126 + t467 * t127 + t153 * t381 - t154 * t380;
t320 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t287 - t482;
t319 = pkin(1) * t288 + t350 - t438;
t307 = -qJD(6) * t344 - t3 * t280 + t1;
t178 = pkin(3) * t318 + t266;
t224 = pkin(10) * t419;
t225 = pkin(10) * t418;
t306 = -g(1) * (-pkin(5) * t420 + t225) - g(2) * (-pkin(5) * t421 + t224);
t302 = t132 + t482;
t97 = pkin(4) * t480 + t178;
t290 = pkin(9) * t291 - t153 * t380 - t154 * t381 + t330;
t270 = -pkin(9) + t274;
t263 = -pkin(4) * t466 - pkin(5);
t221 = pkin(1) + t408;
t206 = t207 ^ 2;
t194 = t255 * t410 + t413;
t193 = -t255 * t412 + t411;
t192 = -t255 * t411 + t412;
t191 = t255 * t413 + t410;
t190 = pkin(1) + t386;
t180 = t286 * t190;
t144 = -pkin(5) - t146;
t65 = t494 + t68;
t64 = -qJD(4) * t105 + t330;
t62 = -qJD(5) * t299 + t170 * t379 - t281 * t291 + t466 * t480;
t60 = t122 + t68;
t57 = t281 * t80 - t466 * t79;
t56 = -pkin(9) * t480 + t63;
t52 = t466 * t74 - t447;
t23 = t280 * t68 + t284 * t49;
t22 = -t280 * t49 + t284 * t68;
t21 = t280 * t65 + t284 * t52;
t20 = -t280 * t52 + t284 * t65;
t19 = t280 * t60 + t284 * t54;
t18 = -t280 * t54 + t284 * t60;
t17 = t62 * pkin(5) + t61 * pkin(10) + t97;
t12 = qJD(5) * t58 + t281 * t56 - t290 * t466;
t11 = t281 * t290 + t379 * t79 - t404 * t80 + t466 * t56;
t5 = -qJD(6) * t29 - t11 * t280 + t17 * t284;
t4 = qJD(6) * t28 + t11 * t284 + t17 * t280;
t6 = [0, 0, 0, 0, 0, qJDD(1), -t482, t350, 0, 0, qJDD(1) * t277 + 0.2e1 * t356, 0.2e1 * t282 * t396 - 0.2e1 * t397 * t407, qJDD(2) * t282 + t285 * t287, qJDD(1) * t278 - 0.2e1 * t356, qJDD(2) * t285 - t282 * t287, 0, t282 * t335 + t285 * t320, -t282 * t320 + t285 * t335, 0.2e1 * t406 * t438 - t350, -g(1) * (-pkin(1) * t283 + pkin(7) * t286) - g(2) * (pkin(1) * t286 + pkin(7) * t283) + (pkin(7) ^ 2 * t406 + pkin(1) ^ 2) * qJDD(1), -t209 * t317 + t304 * t324, t207 * t317 - t209 * t318 - t304 * t323 - t321 * t324, qJDD(2) * t324 - t287 * t323, t207 * t318 + t321 * t323, -qJDD(2) * t323 - t287 * t324, 0, t175 * qJDD(2) + t200 * t323 + t207 * t266 - t264 * t321 - t482 * t268 + (t232 * t324 + t151) * qJD(2), -t152 * qJD(2) - t176 * qJDD(2) + t200 * t324 + t209 * t266 - t232 * t317 - t264 * t304 + t482 * t267, -t117 * t324 - t151 * t209 - t152 * t207 - t169 * t318 - t175 * t304 - t176 * t321 - t350 + (qJD(2) * t168 - t118) * t323, t118 * t176 + t169 * t152 + t117 * t175 + t168 * t151 - t200 * t264 + t232 * t266 - g(1) * (-t264 * t283 - t279 * t286) - g(2) * (t264 * t286 - t279 * t283) t170 * t325 - t291 * t328, -t170 * t87 - t291 * t329 - t325 * t502 - t328 * t480, t170 * t273 - t275 * t291, -t329 * t480 + t502 * t87, -t273 * t502 - t275 * t480, 0, g(1) * t415 - g(2) * t414 + t104 * t273 + t132 * t502 + t174 * t480 - t178 * t329 + t183 * t87 + t64 * t275, -g(1) * t417 + g(2) * t416 - t105 * t273 + t132 * t170 - t174 * t291 + t178 * t328 + t183 * t325 - t63 * t275, -t104 * t325 - t105 * t87 - t38 * t170 + t291 * t90 + t327 * t480 - t328 * t64 + t329 * t63 + t361 * t502 - t350, -t361 * t105 - t327 * t63 + t38 * t104 + t90 * t64 + t132 * t183 + t174 * t178 - g(1) * (-t221 * t283 - t274 * t286) - g(2) * (t221 * t286 - t274 * t283) t120 * t360 - t470 * t61, t109 * t61 - t119 * t360 - t120 * t48 - t470 * t62, t120 * t358 - t369 * t61, t109 * t62 + t119 * t48, -t119 * t358 - t369 * t62, 0, t97 * t109 + t69 * t119 - t12 * t369 + t121 * t62 + t131 * t48 - t255 * t482 - t358 * t57, -t11 * t369 + t69 * t120 - t121 * t61 + t131 * t360 - t358 * t58 + t470 * t97 + t486, -t10 * t120 - t109 * t11 - t119 * t9 + t12 * t470 + t360 * t57 - t48 * t58 + t49 * t61 - t50 * t62 - t350, t9 * t58 + t50 * t11 - t10 * t57 - t49 * t12 + t69 * t131 + t121 * t97 - g(1) * (-t190 * t283 - t270 * t286) - g(2) * (-t270 * t283 + t180) t100 * t334 - t35 * t428 (t284 * t98 + t436) * t61 + (t32 - t34 + (-t100 * t284 + t448) * qJD(6)) * t120, t100 * t62 - t119 * t35 + t334 * t516 + t428 * t46, -t120 * t458 - t448 * t61, -t120 * t41 - t119 * t36 - t62 * t98 + (-t120 * t401 + t449) * t516, t119 * t46 + t516 * t62, -g(1) * t192 - g(2) * t194 + t119 * t3 + t12 * t98 + t495 * t120 + t15 * t62 + t28 * t46 + t36 * t57 - t44 * t449 + t5 * t516, -t44 * t446 - g(1) * t191 - g(2) * t193 + t100 * t12 - t516 * t4 - t119 * t2 - t16 * t62 - t29 * t46 - t35 * t57 + (t8 * t284 - t39) * t120, -t100 * t5 + t28 * t35 - t29 * t36 - t4 * t98 + t344 * t61 - t486 + (-qJD(6) * t477 - t2 * t280 - t284 * t3) * t120, -g(2) * t180 + t44 * t12 + t15 * t5 + t16 * t4 + t2 * t29 + t3 * t28 + t8 * t57 + (g(1) * t270 - g(2) * t483) * t286 + (-g(1) * (-t190 - t483) + g(2) * t270) * t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, t407 * t288, t282 * qJDD(1), t389, t396, qJDD(2), t282 * t319 - t461, g(3) * t282 + t285 * t319, 0, 0, t422, -t206 + t469 (t354 + t207) * qJD(2) + t308, -t422, -t321 + t400, qJDD(2), -g(3) * t268 - t172 * qJD(2) - t232 * t209 + t350 * t267 + (qJDD(2) * t440 - t207 * t405) * pkin(2) + t117, g(3) * t267 + t173 * qJD(2) + t232 * t207 + t350 * t268 + (-qJDD(2) * t439 - t209 * t405) * pkin(2) - t118, -t304 * t383 - t321 * t382 - (-t169 - t172) * t209 + (-t168 + t173) * t207, -t168 * t172 - t169 * t173 + (t439 * t118 + t440 * t117 - t461 + (-qJD(1) * t232 + t350) * t282) * pkin(2), -t423, t503, t504, t423, t505, t273, t177 * t329 + t202 * t273 + t275 * t441 + t473, -t177 * t328 - t203 * t273 - t275 * t442 + t472, -t202 * t325 - t203 * t87 + (t442 + t90) * t329 + (-t441 - t327) * t328, -g(3) * t408 - t174 * t177 + t38 * t202 - t203 * t361 - t327 * t442 - t350 * t353 + t441 * t90, t429, t499, t497, -t429, t471, t358, t146 * t358 - t122 * t109 + (-t50 - t444) * qJD(5) - t444 * t275 + t474, -t122 * t470 - t147 * t358 - t369 * t445 + t498, -t109 * t445 - t146 * t360 - t147 * t48 + t444 * t470 + t514, -g(3) * t386 + t10 * t146 - t121 * t122 + t9 * t147 - t197 * t350 - t444 * t49 + t445 * t50, t512, -t436 * t516 + t513, t511, t527, t340 + t452, -t488, t144 * t36 + t444 * t98 + t345 * t280 + (-t101 * t280 - t145 * t401 - t18) * t516 + t517, -t144 * t35 + t345 * t284 + t444 * t100 + (-t101 * t284 + t145 * t402 + t19) * t516 + t518, t100 * t18 + t19 * t98 + (-t101 * t98 - t521 - t145 * t36 + (t100 * t145 - t15) * qJD(6)) * t284 + (t100 * t101 - t145 * t35 + (t145 * t98 - t16) * qJD(6) + t515) * t280 + t362, t8 * t144 - t16 * t19 - t15 * t18 - g(1) * (t286 * t377 + t225) - g(2) * (t283 * t377 + t224) - g(3) * (t386 + t483) + t444 * t44 + t477 * t101 + t307 * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321 + t400 (t354 - t207) * qJD(2) + t308, -t206 - t469, t168 * t209 + t169 * t207 + t200 + t482, 0, 0, 0, 0, 0, 0, t293 + t426, t325 + t424, -t425 - t427, t327 * t329 + t328 * t90 + t302, 0, 0, 0, 0, 0, 0, t359 - t374 + 0.2e1 * t501, t360 - t487, -t433 - t510, t109 * t50 + t470 * t49 + t302 + t468, 0, 0, 0, 0, 0, 0, t340 - t452, -t284 * t516 ^ 2 - t41 - t437 (-t109 * t98 + t35) * t284 + t528 + t458, -t470 * t44 + t529 * t284 + (t2 - t454) * t280 + t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t503, t504, t423, t505, t273, -t275 * t327 + t473, t275 * t90 + t472, 0, 0, t429, t499, t497, -t429, t471, t358, t51 * t275 + (t51 - t50) * qJD(5) + (-t109 * t328 + t358 * t466 - t369 * t404) * pkin(4) + t474, t52 * t369 + (-t281 * t358 - t328 * t470 - t369 * t379) * pkin(4) + t498, t52 * t109 - t51 * t470 + (-t466 * t360 - t281 * t48 + (-t109 * t466 + t281 * t470) * qJD(5)) * pkin(4) + t514, t49 * t51 - t50 * t52 + (t466 * t10 - t462 - t121 * t328 + t281 * t9 + t336 + (-t281 * t49 + t466 * t50) * qJD(5)) * pkin(4), t512, t523, t511, t448 * t516 - t34, t522, -t488, t263 * t36 + t355 * t98 + t346 * t280 + (-t262 * t401 - t280 * t357 - t20) * t516 + t517, -t263 * t35 + t346 * t284 + t355 * t100 + (t262 * t402 - t284 * t357 + t21) * t516 + t518, t20 * t100 + t21 * t98 + (-t98 * t357 - t521 - t262 * t36 + (t100 * t262 - t15) * qJD(6)) * t284 + (t100 * t357 - t262 * t35 + (t262 * t98 - t16) * qJD(6) + t515) * t280 + t362, t8 * t263 - t16 * t21 - t15 * t20 - t44 * t51 - g(3) * (t253 + t483) + (t336 + (t281 * t44 + t466 * t477) * qJD(5)) * pkin(4) + t307 * t262 + t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, t499, t497, -t429, t471, t358, t275 * t50 + t474, t369 * t49 + t498, 0, 0, t512, t523, t511, t527, t522, -t488, -pkin(5) * t36 - t516 * t22 - t50 * t98 + t351 * t280 + (t384 - t392) * t284 + t525, pkin(5) * t35 - t100 * t50 + t516 * t23 + t351 * t284 + (-t337 + t392) * t280 + t524, t100 * t22 + t23 * t98 + (-t454 + (-t36 + t403) * pkin(10)) * t284 + ((qJD(6) * t98 - t35) * pkin(10) - t529) * t280 + t362, -t8 * pkin(5) + pkin(10) * t307 - g(3) * t483 - t15 * t22 - t16 * t23 - t44 * t50 + t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t100 ^ 2 - t98 ^ 2, t516 * t98 - t35, -t455, t100 * t516 - t36, t46, -g(1) * t193 + g(2) * t191 - t100 * t44 + t280 * t339 - t401 * t45 + t13 + t453, g(1) * t194 - g(2) * t192 + t454 + t44 * t98 + (qJD(6) * t45 - t14) * t280 + t339 * t284, 0, 0;];
tau_reg  = t6;
