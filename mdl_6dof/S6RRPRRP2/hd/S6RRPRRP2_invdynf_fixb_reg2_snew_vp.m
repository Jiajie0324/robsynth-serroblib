% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 17:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRRP2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP2_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP2_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP2_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP2_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 17:27:41
% EndTime: 2019-05-06 17:27:52
% DurationCPUTime: 11.58s
% Computational Cost: add. (47781->320), mult. (111656->409), div. (0->0), fcn. (84143->10), ass. (0->231)
t2512 = sin(pkin(10));
t2513 = cos(pkin(10));
t2520 = cos(qJ(2));
t2565 = qJD(1) * t2520;
t2516 = sin(qJ(2));
t2566 = qJD(1) * t2516;
t2481 = -t2512 * t2566 + t2513 * t2565;
t2482 = (t2512 * t2520 + t2513 * t2516) * qJD(1);
t2515 = sin(qJ(4));
t2519 = cos(qJ(4));
t2463 = t2481 * t2515 + t2482 * t2519;
t2545 = qJD(2) * t2565;
t2548 = t2516 * qJDD(1);
t2488 = t2545 + t2548;
t2507 = t2520 * qJDD(1);
t2546 = qJD(2) * t2566;
t2489 = t2507 - t2546;
t2469 = -t2488 * t2512 + t2513 * t2489;
t2470 = t2513 * t2488 + t2489 * t2512;
t2541 = -t2519 * t2469 + t2515 * t2470;
t2532 = qJD(4) * t2463 + qJDD(5) + t2541;
t2509 = qJD(2) + qJD(4);
t2514 = sin(qJ(5));
t2518 = cos(qJ(5));
t2448 = t2463 * t2514 - t2509 * t2518;
t2450 = t2463 * t2518 + t2509 * t2514;
t2558 = t2448 * t2450;
t2392 = t2532 + t2558;
t2446 = t2450 ^ 2;
t2461 = -t2519 * t2481 + t2482 * t2515;
t2460 = qJD(5) + t2461;
t2572 = t2460 ^ 2;
t2576 = -t2446 - t2572;
t2367 = t2392 * t2518 + t2514 * t2576;
t2538 = -t2515 * t2469 - t2519 * t2470;
t2422 = -qJD(4) * t2461 - t2538;
t2547 = qJDD(2) + qJDD(4);
t2530 = -t2448 * qJD(5) + t2518 * t2422 + t2514 * t2547;
t2557 = t2448 * t2460;
t2528 = t2530 - t2557;
t2342 = t2367 * t2515 + t2519 * t2528;
t2344 = t2367 * t2519 - t2515 * t2528;
t2321 = t2342 * t2513 + t2344 * t2512;
t2327 = t2342 * t2512 - t2344 * t2513;
t2307 = t2321 * t2516 + t2327 * t2520;
t2365 = t2392 * t2514 - t2518 * t2576;
t2517 = sin(qJ(1));
t2521 = cos(qJ(1));
t2600 = t2307 * t2517 + t2365 * t2521;
t2599 = t2307 * t2521 - t2365 * t2517;
t2301 = t2321 * t2520 - t2327 * t2516;
t2385 = t2530 + t2557;
t2542 = t2514 * t2422 - t2518 * t2547;
t2531 = (-qJD(5) + t2460) * t2450 - t2542;
t2574 = -t2385 * t2518 + t2514 * t2531;
t2426 = t2448 ^ 2;
t2408 = t2446 + t2426;
t2573 = t2385 * t2514 + t2518 * t2531;
t2585 = t2408 * t2519 + t2515 * t2573;
t2586 = -t2408 * t2515 + t2519 * t2573;
t2591 = -t2512 * t2585 + t2513 * t2586;
t2592 = t2512 * t2586 + t2513 * t2585;
t2596 = -t2516 * t2592 + t2520 * t2591;
t2598 = t2517 * t2596 - t2521 * t2574;
t2597 = t2517 * t2574 + t2521 * t2596;
t2595 = t2516 * t2591 + t2520 * t2592;
t2393 = t2532 - t2558;
t2575 = -t2572 - t2426;
t2579 = -t2393 * t2514 + t2518 * t2575;
t2590 = t2515 * t2579;
t2580 = t2393 * t2518 + t2514 * t2575;
t2589 = t2517 * t2580;
t2588 = t2519 * t2579;
t2587 = t2521 * t2580;
t2511 = t2520 ^ 2;
t2523 = qJD(1) ^ 2;
t2536 = qJD(2) * pkin(2) - qJ(3) * t2566;
t2497 = t2517 * g(1) - t2521 * g(2);
t2537 = qJDD(1) * pkin(1) + t2497;
t2447 = t2489 * pkin(2) - t2536 * t2566 - qJDD(3) + t2537 + (qJ(3) * t2511 + pkin(7)) * t2523;
t2480 = t2481 ^ 2;
t2540 = qJD(2) * pkin(3) - pkin(8) * t2482;
t2413 = t2469 * pkin(3) + t2480 * pkin(8) - t2482 * t2540 + t2447;
t2571 = t2461 ^ 2;
t2570 = t2463 ^ 2;
t2569 = t2482 ^ 2;
t2568 = t2509 ^ 2;
t2567 = t2516 * g(3);
t2564 = qJD(2) * t2481;
t2563 = qJD(2) * t2482;
t2556 = t2461 * t2463;
t2555 = t2481 * t2482;
t2554 = t2511 * t2523;
t2498 = -g(1) * t2521 - g(2) * t2517;
t2485 = -pkin(1) * t2523 + qJDD(1) * pkin(7) + t2498;
t2553 = t2516 * t2485;
t2552 = t2516 * t2523;
t2551 = t2520 * t2485;
t2550 = qJD(4) - t2509;
t2526 = -pkin(2) * t2554 + t2489 * qJ(3) - qJD(2) * t2536 - t2567;
t2533 = qJ(3) * qJD(1) * qJD(2) + pkin(2) * t2552 - g(3);
t2534 = qJDD(2) * pkin(2) - t2488 * qJ(3) - t2553;
t2415 = t2513 * (t2526 + t2551) + t2512 * (t2520 * t2533 + t2534) + 0.2e1 * qJD(3) * t2481;
t2396 = -t2480 * pkin(3) + t2469 * pkin(8) - qJD(2) * t2540 + t2415;
t2414 = -t2512 * t2526 + t2513 * t2534 - 0.2e1 * qJD(3) * t2482 + (-t2512 * t2485 + t2513 * t2533) * t2520;
t2455 = -t2470 + t2564;
t2466 = qJDD(2) + t2555;
t2524 = pkin(3) * t2466 + pkin(8) * t2455 + t2414;
t2364 = t2519 * t2396 + t2515 * t2524;
t2435 = pkin(4) * t2461 - pkin(9) * t2463;
t2354 = -pkin(4) * t2568 + pkin(9) * t2547 - t2461 * t2435 + t2364;
t2403 = (qJD(4) + t2509) * t2463 + t2541;
t2543 = t2509 * t2461 - t2422;
t2525 = pkin(4) * t2403 + pkin(9) * t2543 - t2413;
t2331 = t2518 * t2354 + t2514 * t2525;
t2510 = t2516 ^ 2;
t2549 = t2510 + t2511;
t2330 = -t2354 * t2514 + t2518 * t2525;
t2363 = -t2515 * t2396 + t2519 * t2524;
t2535 = -qJD(5) * t2450 - t2542;
t2353 = -t2547 * pkin(4) - t2568 * pkin(9) + t2463 * t2435 - t2363;
t2522 = qJD(2) ^ 2;
t2502 = t2520 * t2552;
t2501 = -t2522 - t2554;
t2500 = -t2510 * t2523 - t2522;
t2496 = -qJDD(2) + t2502;
t2495 = qJDD(2) + t2502;
t2494 = t2549 * t2523;
t2493 = -qJDD(1) * t2517 - t2521 * t2523;
t2492 = qJDD(1) * t2521 - t2517 * t2523;
t2491 = t2549 * qJDD(1);
t2490 = t2507 - 0.2e1 * t2546;
t2487 = 0.2e1 * t2545 + t2548;
t2484 = t2523 * pkin(7) + t2537;
t2477 = -t2522 - t2569;
t2476 = t2551 - t2567;
t2475 = -t2520 * g(3) - t2553;
t2474 = t2496 * t2520 - t2500 * t2516;
t2473 = -t2495 * t2516 + t2501 * t2520;
t2472 = t2496 * t2516 + t2500 * t2520;
t2471 = t2495 * t2520 + t2501 * t2516;
t2467 = -qJDD(2) + t2555;
t2465 = -t2522 - t2480;
t2456 = -t2568 - t2570;
t2454 = t2470 + t2564;
t2453 = t2469 + t2563;
t2452 = -t2469 + t2563;
t2451 = -t2480 - t2569;
t2444 = -t2475 * t2516 + t2476 * t2520;
t2443 = t2475 * t2520 + t2476 * t2516;
t2440 = t2467 * t2513 - t2477 * t2512;
t2439 = t2467 * t2512 + t2477 * t2513;
t2438 = t2465 * t2513 - t2466 * t2512;
t2437 = t2465 * t2512 + t2466 * t2513;
t2434 = -t2547 - t2556;
t2433 = t2547 - t2556;
t2432 = -t2568 - t2571;
t2425 = pkin(5) * t2448 - qJ(6) * t2450;
t2424 = t2453 * t2513 - t2455 * t2512;
t2423 = t2453 * t2512 + t2455 * t2513;
t2420 = -t2570 - t2571;
t2419 = -t2439 * t2516 + t2440 * t2520;
t2418 = t2439 * t2520 + t2440 * t2516;
t2412 = t2434 * t2519 - t2456 * t2515;
t2411 = t2434 * t2515 + t2456 * t2519;
t2406 = t2461 * t2550 + t2538;
t2404 = -t2463 * t2550 - t2541;
t2402 = -t2437 * t2516 + t2438 * t2520;
t2401 = t2437 * t2520 + t2438 * t2516;
t2400 = t2432 * t2519 - t2433 * t2515;
t2399 = t2432 * t2515 + t2433 * t2519;
t2391 = -t2423 * t2516 + t2424 * t2520;
t2390 = t2423 * t2520 + t2424 * t2516;
t2382 = t2460 * t2450 - t2535;
t2381 = (qJD(5) + t2460) * t2450 + t2542;
t2380 = -t2414 * t2512 + t2415 * t2513;
t2379 = t2414 * t2513 + t2415 * t2512;
t2378 = -t2411 * t2512 + t2412 * t2513;
t2377 = t2411 * t2513 + t2412 * t2512;
t2376 = t2404 * t2519 - t2406 * t2515;
t2375 = t2404 * t2515 + t2406 * t2519;
t2370 = -t2399 * t2512 + t2400 * t2513;
t2369 = t2399 * t2513 + t2400 * t2512;
t2356 = -t2379 * t2516 + t2380 * t2520;
t2355 = t2379 * t2520 + t2380 * t2516;
t2351 = -t2377 * t2516 + t2378 * t2520;
t2350 = t2377 * t2520 + t2378 * t2516;
t2349 = t2382 * t2515 + t2588;
t2347 = -t2382 * t2519 + t2590;
t2345 = t2381 * t2515 + t2588;
t2343 = -t2381 * t2519 + t2590;
t2341 = -t2375 * t2512 + t2376 * t2513;
t2340 = t2375 * t2513 + t2376 * t2512;
t2335 = -t2369 * t2516 + t2370 * t2520;
t2334 = t2369 * t2520 + t2370 * t2516;
t2333 = -t2363 * t2515 + t2364 * t2519;
t2332 = t2363 * t2519 + t2364 * t2515;
t2329 = -t2535 * pkin(5) + (pkin(5) * t2460 - (2 * qJD(6))) * t2450 + t2353 - t2528 * qJ(6);
t2328 = -t2347 * t2512 + t2349 * t2513;
t2326 = t2347 * t2513 + t2349 * t2512;
t2324 = -t2343 * t2512 + t2345 * t2513;
t2322 = t2343 * t2513 + t2345 * t2512;
t2320 = -t2340 * t2516 + t2341 * t2520;
t2319 = t2340 * t2520 + t2341 * t2516;
t2318 = -pkin(5) * t2532 - qJ(6) * t2572 + t2425 * t2450 + qJDD(6) - t2330;
t2317 = -pkin(5) * t2572 + qJ(6) * t2532 + 0.2e1 * qJD(6) * t2460 - t2448 * t2425 + t2331;
t2312 = -t2332 * t2512 + t2333 * t2513;
t2311 = t2332 * t2513 + t2333 * t2512;
t2310 = -t2330 * t2514 + t2331 * t2518;
t2309 = t2330 * t2518 + t2331 * t2514;
t2308 = -t2326 * t2516 + t2328 * t2520;
t2306 = t2326 * t2520 + t2328 * t2516;
t2304 = -t2322 * t2516 + t2324 * t2520;
t2302 = t2322 * t2520 + t2324 * t2516;
t2300 = t2310 * t2519 + t2353 * t2515;
t2299 = t2310 * t2515 - t2353 * t2519;
t2298 = t2317 * t2518 + t2318 * t2514;
t2297 = t2317 * t2514 - t2318 * t2518;
t2292 = -t2311 * t2516 + t2312 * t2520;
t2291 = t2311 * t2520 + t2312 * t2516;
t2290 = t2298 * t2519 + t2329 * t2515;
t2289 = t2298 * t2515 - t2329 * t2519;
t2288 = -t2299 * t2512 + t2300 * t2513;
t2287 = t2299 * t2513 + t2300 * t2512;
t2286 = -t2289 * t2512 + t2290 * t2513;
t2285 = t2289 * t2513 + t2290 * t2512;
t2284 = -t2287 * t2516 + t2288 * t2520;
t2283 = t2287 * t2520 + t2288 * t2516;
t2282 = -t2285 * t2516 + t2286 * t2520;
t2281 = t2285 * t2520 + t2286 * t2516;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2493, -t2492, 0, -t2497 * t2517 + t2498 * t2521, 0, 0, 0, 0, 0, 0, t2473 * t2521 - t2490 * t2517, t2474 * t2521 + t2487 * t2517, t2491 * t2521 - t2494 * t2517, t2444 * t2521 - t2484 * t2517, 0, 0, 0, 0, 0, 0, t2402 * t2521 + t2452 * t2517, t2419 * t2521 + t2454 * t2517, t2391 * t2521 + t2451 * t2517, t2356 * t2521 - t2447 * t2517, 0, 0, 0, 0, 0, 0, t2335 * t2521 + t2403 * t2517, t2351 * t2521 - t2517 * t2543, t2320 * t2521 + t2420 * t2517, t2292 * t2521 - t2413 * t2517, 0, 0, 0, 0, 0, 0, t2304 * t2521 + t2589, t2599, t2597, t2284 * t2521 + t2309 * t2517, 0, 0, 0, 0, 0, 0, t2308 * t2521 + t2589, t2597, -t2599, t2282 * t2521 + t2297 * t2517; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2492, t2493, 0, t2497 * t2521 + t2498 * t2517, 0, 0, 0, 0, 0, 0, t2473 * t2517 + t2490 * t2521, t2474 * t2517 - t2487 * t2521, t2491 * t2517 + t2494 * t2521, t2444 * t2517 + t2484 * t2521, 0, 0, 0, 0, 0, 0, t2402 * t2517 - t2452 * t2521, t2419 * t2517 - t2454 * t2521, t2391 * t2517 - t2451 * t2521, t2356 * t2517 + t2447 * t2521, 0, 0, 0, 0, 0, 0, t2335 * t2517 - t2403 * t2521, t2351 * t2517 + t2521 * t2543, t2320 * t2517 - t2420 * t2521, t2292 * t2517 + t2413 * t2521, 0, 0, 0, 0, 0, 0, t2304 * t2517 - t2587, t2600, t2598, t2284 * t2517 - t2309 * t2521, 0, 0, 0, 0, 0, 0, t2308 * t2517 - t2587, t2598, -t2600, t2282 * t2517 - t2297 * t2521; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2471, t2472, 0, t2443, 0, 0, 0, 0, 0, 0, t2401, t2418, t2390, t2355, 0, 0, 0, 0, 0, 0, t2334, t2350, t2319, t2291, 0, 0, 0, 0, 0, 0, t2302, -t2301, t2595, t2283, 0, 0, 0, 0, 0, 0, t2306, t2595, t2301, t2281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2523, -qJDD(1), 0, t2498, 0, 0, 0, 0, 0, 0, t2473, t2474, t2491, t2444, 0, 0, 0, 0, 0, 0, t2402, t2419, t2391, t2356, 0, 0, 0, 0, 0, 0, t2335, t2351, t2320, t2292, 0, 0, 0, 0, 0, 0, t2304, t2307, t2596, t2284, 0, 0, 0, 0, 0, 0, t2308, t2596, -t2307, t2282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2523, 0, t2497, 0, 0, 0, 0, 0, 0, t2490, -t2487, t2494, t2484, 0, 0, 0, 0, 0, 0, -t2452, -t2454, -t2451, t2447, 0, 0, 0, 0, 0, 0, -t2403, t2543, -t2420, t2413, 0, 0, 0, 0, 0, 0, -t2580, t2365, -t2574, -t2309, 0, 0, 0, 0, 0, 0, -t2580, -t2574, -t2365, -t2297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2471, t2472, 0, t2443, 0, 0, 0, 0, 0, 0, t2401, t2418, t2390, t2355, 0, 0, 0, 0, 0, 0, t2334, t2350, t2319, t2291, 0, 0, 0, 0, 0, 0, t2302, -t2301, t2595, t2283, 0, 0, 0, 0, 0, 0, t2306, t2595, t2301, t2281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2501, t2496, t2507, t2476, 0, 0, 0, 0, 0, 0, t2438, t2440, t2424, t2380, 0, 0, 0, 0, 0, 0, t2370, t2378, t2341, t2312, 0, 0, 0, 0, 0, 0, t2324, t2327, t2591, t2288, 0, 0, 0, 0, 0, 0, t2328, t2591, -t2327, t2286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2495, t2500, -t2548, t2475, 0, 0, 0, 0, 0, 0, t2437, t2439, t2423, t2379, 0, 0, 0, 0, 0, 0, t2369, t2377, t2340, t2311, 0, 0, 0, 0, 0, 0, t2322, -t2321, t2592, t2287, 0, 0, 0, 0, 0, 0, t2326, t2592, t2321, t2285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2490, t2487, -t2494, -t2484, 0, 0, 0, 0, 0, 0, t2452, t2454, t2451, -t2447, 0, 0, 0, 0, 0, 0, t2403, -t2543, t2420, -t2413, 0, 0, 0, 0, 0, 0, t2580, -t2365, t2574, t2309, 0, 0, 0, 0, 0, 0, t2580, t2574, t2365, t2297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2465, t2467, t2453, t2415, 0, 0, 0, 0, 0, 0, t2400, t2412, t2376, t2333, 0, 0, 0, 0, 0, 0, t2345, -t2344, t2586, t2300, 0, 0, 0, 0, 0, 0, t2349, t2586, t2344, t2290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2466, t2477, t2455, t2414, 0, 0, 0, 0, 0, 0, t2399, t2411, t2375, t2332, 0, 0, 0, 0, 0, 0, t2343, -t2342, t2585, t2299, 0, 0, 0, 0, 0, 0, t2347, t2585, t2342, t2289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2452, t2454, t2451, -t2447, 0, 0, 0, 0, 0, 0, t2403, -t2543, t2420, -t2413, 0, 0, 0, 0, 0, 0, t2580, -t2365, t2574, t2309, 0, 0, 0, 0, 0, 0, t2580, t2574, t2365, t2297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2432, t2434, t2404, t2364, 0, 0, 0, 0, 0, 0, t2579, -t2367, t2573, t2310, 0, 0, 0, 0, 0, 0, t2579, t2573, t2367, t2298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2433, t2456, t2406, t2363, 0, 0, 0, 0, 0, 0, -t2381, -t2528, t2408, -t2353, 0, 0, 0, 0, 0, 0, -t2382, t2408, t2528, -t2329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2403, -t2543, t2420, -t2413, 0, 0, 0, 0, 0, 0, t2580, -t2365, t2574, t2309, 0, 0, 0, 0, 0, 0, t2580, t2574, t2365, t2297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2575, -t2392, t2531, t2331, 0, 0, 0, 0, 0, 0, t2575, t2531, t2392, t2317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2393, t2576, -t2385, t2330, 0, 0, 0, 0, 0, 0, t2393, -t2385, -t2576, -t2318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2381, t2528, -t2408, t2353, 0, 0, 0, 0, 0, 0, t2382, -t2408, -t2528, t2329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2575, t2531, t2392, t2317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2382, -t2408, -t2528, t2329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2393, t2385, t2576, t2318;];
f_new_reg  = t1;
