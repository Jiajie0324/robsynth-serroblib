% Calculate vector of inverse dynamics joint torques for
% S6RRPRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRRP2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:43:06
% EndTime: 2019-03-09 11:45:11
% DurationCPUTime: 111.22s
% Computational Cost: add. (62128->1534), mult. (63592->1894), div. (0->0), fcn. (58435->10), ass. (0->758)
t1419 = Icges(6,1) + Icges(7,1);
t1447 = Icges(7,4) + Icges(6,5);
t1446 = Icges(6,6) - Icges(7,6);
t1487 = Icges(3,3) + Icges(4,3);
t759 = qJ(2) + pkin(10);
t727 = sin(t759);
t728 = cos(t759);
t764 = sin(qJ(2));
t767 = cos(qJ(2));
t1454 = Icges(3,5) * t767 + Icges(4,5) * t728 - Icges(3,6) * t764 - Icges(4,6) * t727;
t763 = sin(qJ(5));
t1486 = (Icges(6,4) - Icges(7,5)) * t763;
t1418 = Icges(6,2) + Icges(7,3);
t766 = cos(qJ(5));
t1485 = -t1446 * t763 + t1447 * t766;
t1484 = t1419 * t766 - t1486;
t768 = cos(qJ(1));
t1483 = t1487 * t768;
t1480 = Icges(7,2) + Icges(6,3);
t765 = sin(qJ(1));
t1152 = t765 * t767;
t1155 = t764 * t765;
t1160 = t728 * t765;
t1162 = t727 * t765;
t1455 = -Icges(3,5) * t1152 - Icges(4,5) * t1160 + Icges(3,6) * t1155 + Icges(4,6) * t1162 + t1483;
t1472 = t1454 * t768 + t1487 * t765;
t732 = qJ(4) + t759;
t711 = sin(t732);
t712 = cos(t732);
t1229 = Icges(6,4) * t766;
t936 = -Icges(6,2) * t763 + t1229;
t1482 = -t1446 * t712 + t711 * t936;
t1215 = Icges(4,6) * t768;
t483 = Icges(4,4) * t1160 - Icges(4,2) * t1162 - t1215;
t1216 = Icges(3,6) * t768;
t557 = Icges(3,4) * t1152 - Icges(3,2) * t1155 - t1216;
t1481 = t483 * t727 + t557 * t764;
t1233 = Icges(4,4) * t727;
t610 = Icges(4,1) * t728 - t1233;
t486 = Icges(4,5) * t765 + t610 * t768;
t1234 = Icges(3,4) * t764;
t673 = Icges(3,1) * t767 - t1234;
t560 = Icges(3,5) * t765 + t673 * t768;
t1479 = -t560 * t1152 - t486 * t1160;
t1171 = t711 * t763;
t1169 = t711 * t766;
t644 = Icges(7,5) * t1169;
t1445 = Icges(7,3) * t1171 - t1482 + t644;
t1435 = -t1447 * t712 + t1484 * t711;
t1478 = Icges(3,5) * t764 + Icges(4,5) * t727 + Icges(3,6) * t767 + Icges(4,6) * t728;
t1221 = Icges(7,5) * t766;
t930 = Icges(7,3) * t763 + t1221;
t1477 = (t930 - t936) * t712;
t1476 = t1485 * t712;
t1475 = t1484 * t712;
t1226 = Icges(4,5) * t768;
t680 = Icges(4,4) * t1162;
t485 = Icges(4,1) * t1160 - t1226 - t680;
t1227 = Icges(3,5) * t768;
t704 = Icges(3,4) * t1155;
t559 = Icges(3,1) * t1152 - t1227 - t704;
t1449 = -t485 * t728 - t559 * t767 + t1481;
t1474 = t1418 * t766 + t1486;
t1473 = -t1446 * t766 - t1447 * t763;
t1168 = t711 * t768;
t1437 = -t1480 * t712 + t1485 * t711;
t1148 = t768 * t763;
t1153 = t765 * t766;
t573 = t1148 * t712 - t1153;
t1151 = t766 * t768;
t1156 = t763 * t765;
t574 = t1151 * t712 + t1156;
t1329 = t1168 * t1437 + t1435 * t574 + t1445 * t573;
t285 = Icges(6,5) * t574 - Icges(6,6) * t573 + Icges(6,3) * t1168;
t288 = Icges(7,4) * t574 + Icges(7,2) * t1168 + Icges(7,6) * t573;
t1438 = t285 + t288;
t1223 = Icges(7,5) * t573;
t294 = Icges(7,1) * t574 + Icges(7,4) * t1168 + t1223;
t538 = Icges(6,4) * t573;
t297 = Icges(6,1) * t574 + Icges(6,5) * t1168 - t538;
t1456 = t294 + t297;
t535 = Icges(7,5) * t574;
t282 = Icges(7,6) * t1168 + Icges(7,3) * t573 + t535;
t1231 = Icges(6,4) * t574;
t291 = -Icges(6,2) * t573 + Icges(6,6) * t1168 + t1231;
t1458 = t282 - t291;
t1389 = t1168 * t1438 + t1456 * t574 + t1458 * t573;
t1170 = t711 * t765;
t571 = t1156 * t712 + t1151;
t572 = t1153 * t712 - t1148;
t283 = Icges(6,5) * t572 - Icges(6,6) * t571 + Icges(6,3) * t1170;
t286 = Icges(7,4) * t572 + Icges(7,2) * t1170 + Icges(7,6) * t571;
t1375 = t283 + t286;
t534 = Icges(7,5) * t572;
t281 = -Icges(7,6) * t1170 - Icges(7,3) * t571 - t534;
t537 = Icges(6,4) * t572;
t289 = -Icges(6,2) * t571 + Icges(6,6) * t1170 + t537;
t1376 = t281 + t289;
t533 = Icges(7,5) * t571;
t292 = Icges(7,1) * t572 + Icges(7,4) * t1170 + t533;
t536 = Icges(6,4) * t571;
t296 = -Icges(6,1) * t572 - Icges(6,5) * t1170 + t536;
t1457 = t292 - t296;
t1390 = t1168 * t1375 - t1376 * t573 + t1457 * t574;
t1072 = qJD(5) * t768;
t736 = qJD(2) * t765;
t666 = qJD(4) * t765 + t736;
t528 = t1072 * t711 + t666;
t1074 = qJD(5) * t765;
t758 = qJD(2) + qJD(4);
t667 = t758 * t768;
t529 = -t1074 * t711 + t667;
t1076 = qJD(5) * t712;
t660 = qJD(1) - t1076;
t1400 = t1329 * t660 + t1389 * t528 - t1390 * t529;
t1330 = t1170 * t1437 + t1435 * t572 + t1445 * t571;
t1391 = t1170 * t1438 + t1456 * t572 + t1458 * t571;
t1392 = t1170 * t1375 - t1376 * t571 + t1457 * t572;
t1401 = t1330 * t660 + t1391 * t528 - t1392 * t529;
t607 = Icges(4,2) * t728 + t1233;
t708 = Icges(4,4) * t728;
t609 = Icges(4,1) * t727 + t708;
t670 = Icges(3,2) * t767 + t1234;
t746 = Icges(3,4) * t767;
t672 = Icges(3,1) * t764 + t746;
t1452 = t607 * t727 - t609 * t728 + t670 * t764 - t672 * t767;
t1471 = t1472 * t768 + t1479;
t1150 = t767 * t768;
t1159 = t728 * t768;
t1470 = -t559 * t1150 - t485 * t1159 + t1455 * t765;
t1342 = t560 * t1150 + t486 * t1159 + t1472 * t765;
t938 = -Icges(4,2) * t727 + t708;
t484 = Icges(4,6) * t765 + t768 * t938;
t939 = -Icges(3,2) * t764 + t746;
t558 = Icges(3,6) * t765 + t768 * t939;
t1469 = t484 * t727 + t558 * t764;
t1396 = rSges(7,3) + qJ(6);
t1409 = rSges(7,1) + pkin(5);
t1308 = -t1396 * t571 - t1409 * t572;
t1143 = rSges(7,2) * t1170 - t1308;
t532 = qJD(6) * t573;
t1468 = t1143 * t660 - t532;
t1020 = t712 * t1072;
t1052 = t711 * t1148;
t267 = qJD(1) * t571 - t1020 * t766 + t1052 * t758 - t1074 * t763;
t1054 = t711 * t667;
t885 = t660 * t763;
t976 = qJD(1) * t712 - qJD(5);
t268 = t768 * t885 + (-t765 * t976 - t1054) * t766;
t1080 = qJD(1) * t765;
t1030 = t711 * t1080;
t1051 = t712 * t667;
t842 = -t1030 + t1051;
t145 = Icges(7,5) * t268 + Icges(7,6) * t842 - Icges(7,3) * t267;
t151 = Icges(6,4) * t268 + Icges(6,2) * t267 + Icges(6,6) * t842;
t1467 = t145 - t151;
t1053 = t711 * t1156;
t1073 = qJD(5) * t766;
t1079 = qJD(1) * t768;
t269 = -t758 * t1053 - t763 * t1072 - t766 * t1080 + (t1073 * t765 + t1079 * t763) * t712;
t1157 = t758 * t766;
t270 = t976 * t1151 + (-t1157 * t711 + t885) * t765;
t1158 = t758 * t765;
t843 = t1079 * t711 + t1158 * t712;
t146 = Icges(7,5) * t270 + Icges(7,6) * t843 + Icges(7,3) * t269;
t152 = Icges(6,4) * t270 - Icges(6,2) * t269 + Icges(6,6) * t843;
t1466 = t146 - t152;
t147 = Icges(6,5) * t268 + Icges(6,6) * t267 + Icges(6,3) * t842;
t149 = Icges(7,4) * t268 + Icges(7,2) * t842 - Icges(7,6) * t267;
t1465 = t147 + t149;
t148 = Icges(6,5) * t270 - Icges(6,6) * t269 + Icges(6,3) * t843;
t150 = Icges(7,4) * t270 + Icges(7,2) * t843 + Icges(7,6) * t269;
t1464 = t148 + t150;
t153 = Icges(7,1) * t268 + Icges(7,4) * t842 - Icges(7,5) * t267;
t155 = Icges(6,1) * t268 + Icges(6,4) * t267 + Icges(6,5) * t842;
t1463 = t153 + t155;
t154 = Icges(7,1) * t270 + Icges(7,4) * t843 + Icges(7,5) * t269;
t156 = Icges(6,1) * t270 - Icges(6,4) * t269 + Icges(6,5) * t843;
t1462 = t154 + t156;
t1384 = -t1449 * t765 + t1455 * t768;
t1383 = -t1155 * t558 - t1162 * t484 - t1471;
t1154 = t764 * t768;
t1161 = t727 * t768;
t1382 = -t1154 * t557 - t1161 * t483 - t1470;
t1381 = -t1154 * t558 - t1161 * t484 + t1342;
t1461 = t1477 * t758 + (qJD(5) * t1474 - t1446 * t758) * t711;
t1460 = t1476 * t758 + (qJD(5) * t1473 + t1480 * t758) * t711;
t941 = -Icges(6,1) * t763 - t1229;
t1459 = t1475 * t758 + (t1447 * t758 + (-Icges(7,1) * t763 + t1221 + t941) * qJD(5)) * t711;
t1378 = t483 * t728 + t485 * t727 + t557 * t767 + t559 * t764;
t1377 = t484 * t728 + t486 * t727 + t558 * t767 + t560 * t764;
t1453 = t1478 * qJD(2);
t1451 = -t607 * t728 - t609 * t727 - t670 * t767 - t672 * t764;
t1450 = t486 * t728 + t560 * t767 - t1469;
t1448 = t1435 * t766 + t1445 * t763;
t1341 = t1478 * t768;
t1340 = t1478 * t765;
t1380 = -t1452 * t765 - t1341;
t1379 = -t1452 * t768 + t1340;
t1444 = t1472 * qJD(1);
t954 = t572 * rSges(6,1) - t571 * rSges(6,2);
t300 = rSges(6,3) * t1170 + t954;
t1251 = rSges(6,1) * t766;
t953 = -rSges(6,2) * t763 + t1251;
t437 = -rSges(6,3) * t712 + t711 * t953;
t1443 = -t300 * t660 - t529 * t437;
t1442 = t768 ^ 2;
t1407 = t1168 * t1464 + t1375 * t842 + t1376 * t267 + t1457 * t268 + t1462 * t574 + t1466 * t573;
t1406 = t1168 * t1465 + t1438 * t842 + t1456 * t268 - t1458 * t267 + t1463 * t574 + t1467 * t573;
t1405 = t1170 * t1464 + t1375 * t843 - t1376 * t269 + t1457 * t270 + t1462 * t572 + t1466 * t571;
t1404 = t1170 * t1465 + t1438 * t843 + t1456 * t270 + t1458 * t269 + t1463 * t572 + t1467 * t571;
t1398 = t1168 * t1460 + t1435 * t268 + t1437 * t842 - t1445 * t267 + t1459 * t574 + t1461 * t573;
t1397 = t1170 * t1460 + t1435 * t270 + t1437 * t843 + t1445 * t269 + t1459 * t572 + t1461 * t571;
t908 = -t281 * t763 + t292 * t766;
t129 = -t286 * t712 + t711 * t908;
t906 = -t289 * t763 - t296 * t766;
t131 = -t283 * t712 + t711 * t906;
t1441 = t129 + t131;
t907 = t282 * t763 + t294 * t766;
t130 = -t288 * t712 + t711 * t907;
t905 = -t291 * t763 + t297 * t766;
t132 = -t285 * t712 + t711 * t905;
t1440 = t130 + t132;
t531 = qJD(6) * t571;
t1439 = -t1396 * t269 - t1409 * t270 - t531;
t1328 = -t1437 * t712 + t1448 * t711;
t1436 = -t711 * t930 + t1482;
t578 = t938 * qJD(2);
t579 = t610 * qJD(2);
t623 = t939 * qJD(2);
t624 = t673 * qJD(2);
t1434 = qJD(1) * t1478 + t1451 * qJD(2) - t578 * t727 + t579 * t728 - t623 * t764 + t624 * t767;
t852 = qJD(2) * t607;
t312 = -t768 * t852 + (-t765 * t938 + t1215) * qJD(1);
t854 = qJD(2) * t609;
t314 = -t768 * t854 + (-t610 * t765 + t1226) * qJD(1);
t853 = qJD(2) * t670;
t374 = -t768 * t853 + (-t765 * t939 + t1216) * qJD(1);
t855 = qJD(2) * t672;
t376 = -t768 * t855 + (-t673 * t765 + t1227) * qJD(1);
t1433 = -qJD(2) * t1377 - t312 * t727 + t314 * t728 - t374 * t764 + t376 * t767 + t1444;
t313 = qJD(1) * t484 - t765 * t852;
t315 = qJD(1) * t486 - t765 * t854;
t375 = qJD(1) * t558 - t765 * t853;
t377 = qJD(1) * t560 - t765 * t855;
t1432 = qJD(1) * t1455 + qJD(2) * t1378 + t313 * t727 - t315 * t728 + t375 * t764 - t377 * t767;
t1431 = t1381 * t765 - t1382 * t768;
t1430 = t1383 * t765 - t1384 * t768;
t1429 = rSges(7,2) * t1051 - t1396 * t267 + t1409 * t268 + t532;
t949 = rSges(7,1) * t766 + rSges(7,3) * t763;
t1428 = (-pkin(5) * t766 - qJ(6) * t763 - t949) * t711;
t1021 = t712 * t1074;
t1427 = -t1021 + t1080;
t762 = -qJ(3) - pkin(7);
t757 = -pkin(8) + t762;
t1395 = t768 * t757;
t710 = pkin(3) * t728;
t754 = t767 * pkin(2);
t960 = -t754 - t710;
t625 = pkin(1) - t960;
t1107 = -t765 * t625 - t1395;
t1426 = t1107 + t1308;
t1425 = (t1480 * t711 - t1448 + t1476) * t660 + (t1437 * t765 + t906 + t908) * t529 + (-t1437 * t768 - t905 - t907) * t528;
t1424 = t1452 * qJD(1) + qJD(2) * t1454;
t1423 = qJD(1) * t1449 - t1453 * t765 + t1444;
t1422 = -t1453 * t768 + (-t1454 * t765 - t1450 + t1483) * qJD(1);
t1115 = -t1396 * t1169 + t1171 * t1409;
t1066 = qJD(1) * qJD(3);
t1260 = pkin(2) * t764;
t1067 = qJD(1) * qJD(2);
t717 = t765 * t1067;
t632 = -qJDD(2) * t768 + t717;
t1036 = qJDD(3) * t765 + t768 * t1066 + t632 * t1260;
t719 = t768 * t762;
t722 = t754 + pkin(1);
t1093 = t765 * t722 + t719;
t755 = t768 * pkin(7);
t683 = pkin(1) * t765 - t755;
t478 = t683 - t1093;
t1121 = t478 - t683;
t491 = rSges(4,1) * t1160 - rSges(4,2) * t1162 - t768 * rSges(4,3);
t1038 = -t491 + t1121;
t1247 = pkin(2) * qJD(2);
t1056 = t764 * t1247;
t690 = t765 * t1056;
t735 = qJD(3) * t768;
t1091 = t690 + t735;
t698 = t762 * t1080;
t1031 = t698 + t1091;
t1253 = pkin(1) - t722;
t753 = t765 * pkin(7);
t348 = (-t1253 * t768 - t753) * qJD(1) - t1031;
t684 = t768 * pkin(1) + t753;
t629 = t684 * qJD(1);
t1140 = -t348 - t629;
t769 = qJD(2) ^ 2;
t1149 = t767 * t769;
t709 = t728 * rSges(4,1);
t1306 = -rSges(4,2) * t727 + t709;
t1249 = rSges(4,2) * t728;
t612 = rSges(4,1) * t727 + t1249;
t567 = t612 * t765;
t748 = t765 * rSges(4,3);
t318 = -qJD(2) * t567 + (t1306 * t768 + t748) * qJD(1);
t580 = t1306 * qJD(2);
t108 = t612 * t632 + (-pkin(2) * t1149 - qJD(2) * t580) * t768 + t1038 * qJDD(1) + (-t318 + t1140) * qJD(1) + t1036;
t1421 = t108 - g(1);
t1420 = (t1448 * t758 - t1460) * t712 + (t1459 * t766 + t1461 * t763 + t1437 * t758 + (-t1435 * t763 + t1445 * t766) * qJD(5)) * t711;
t1147 = -rSges(7,2) * t1030 + t1429;
t1146 = rSges(7,2) * t843 - t1439;
t1417 = t1379 * qJD(1);
t1416 = (-t1446 * t572 - t1447 * t571) * t529 + (t1446 * t574 + t1447 * t573) * t528 - t1473 * t660 * t711;
t1133 = -rSges(7,2) * t712 - t1428;
t1414 = t1380 * qJD(1);
t1064 = qJDD(5) * t711;
t1065 = qJD(1) * qJD(4);
t631 = qJDD(2) * t765 + t768 * t1067;
t500 = qJDD(4) * t765 + t768 * t1065 + t631;
t246 = qJD(5) * t842 + t1064 * t768 + t500;
t1063 = -qJDD(2) - qJDD(4);
t1075 = qJD(5) * t758;
t1077 = qJD(5) * t711;
t1088 = t765 * t1065 + t717;
t247 = (t1075 * t712 + t1064) * t765 + (qJD(1) * t1077 + t1063) * t768 + t1088;
t502 = -qJDD(5) * t712 + t1075 * t711 + qJDD(1);
t1411 = t1329 * t502 + t1389 * t246 + t1390 * t247 + t1398 * t660 + t1406 * t528 - t1407 * t529;
t1410 = t1330 * t502 + t1391 * t246 + t1392 * t247 + t1397 * t660 + t1404 * t528 - t1405 * t529;
t1141 = rSges(7,2) * t1168 + t1396 * t573 + t1409 * t574;
t1167 = t712 * t758;
t1071 = qJD(6) * t763;
t636 = t711 * t1071;
t1166 = t712 * t763;
t841 = t1073 * t711 + t1166 * t758;
t1145 = t949 * t1167 + (rSges(7,2) * t758 + (-rSges(7,1) * t763 + rSges(7,3) * t766) * qJD(5)) * t711 + t636 + t841 * qJ(6) + (-t1077 * t763 + t1157 * t712) * pkin(5);
t618 = pkin(9) * t1051;
t844 = -t1080 * t712 - t1054;
t305 = pkin(4) * t844 - pkin(9) * t1030 + t618;
t697 = t712 * pkin(4);
t1320 = t711 * pkin(9) + t697;
t497 = t1320 * t758;
t1163 = t712 * t768;
t665 = pkin(4) * t1163;
t527 = pkin(9) * t1168 + t665;
t589 = pkin(4) * t711 - pkin(9) * t712;
t1087 = -t757 + t762;
t1101 = t625 - t722;
t1259 = pkin(3) * t727;
t633 = -t1259 - t1260;
t611 = t633 * qJD(2);
t576 = t768 * t611;
t1078 = qJD(2) * t768;
t1025 = t764 * t1078;
t977 = pkin(2) * t1025;
t219 = t977 + t576 + (t1087 * t768 - t1101 * t765) * qJD(1);
t594 = t768 * t625;
t687 = t768 * t722;
t388 = t1087 * t765 + t594 - t687;
t726 = pkin(7) * t1079;
t1104 = qJD(1) * (-pkin(1) * t1080 + t726) + qJDD(1) * t684;
t734 = qJD(3) * t765;
t883 = t734 - t977;
t347 = -t726 + (t1253 * t765 - t719) * qJD(1) + t883;
t981 = -t762 * t765 + t687;
t479 = t981 - t684;
t783 = qJD(1) * t347 + qJDD(1) * t479 + t765 * t1066 + (-t1149 * t765 - t631 * t764) * pkin(2) - qJDD(3) * t768 + t1104;
t777 = qJD(1) * t219 + qJDD(1) * t388 + (-t1160 * t769 - t631 * t727) * pkin(3) + t783;
t772 = qJD(1) * t305 + qJDD(1) * t527 - t666 * t497 - t500 * t589 + t777;
t24 = qJD(6) * t269 + qJDD(6) * t571 - t1133 * t246 + t1141 * t502 - t1145 * t528 + t1147 * t660 + t772;
t1408 = -g(2) + t24;
t39 = (t758 * t908 - t150) * t712 + (t146 * t763 + t154 * t766 + t286 * t758 + (-t281 * t766 - t292 * t763) * qJD(5)) * t711;
t41 = (t758 * t906 - t148) * t712 + (-t152 * t763 + t156 * t766 + t283 * t758 + (-t289 * t766 + t296 * t763) * qJD(5)) * t711;
t1403 = t39 + t41;
t40 = (t758 * t907 - t149) * t712 + (t145 * t763 + t153 * t766 + t288 * t758 + (t282 * t766 - t294 * t763) * qJD(5)) * t711;
t42 = (t758 * t905 - t147) * t712 + (-t151 * t763 + t155 * t766 + t285 * t758 + (-t291 * t766 - t297 * t763) * qJD(5)) * t711;
t1402 = t40 + t42;
t1399 = t1328 * t660 + t1440 * t528 - t1441 * t529;
t1394 = qJD(2) * t1430 + t1414;
t1393 = qJD(2) * t1431 + t1417;
t1388 = t1424 * t765 + t1434 * t768;
t1387 = -t1424 * t768 + t1434 * t765;
t1386 = qJD(2) * t1449 - t313 * t728 - t315 * t727 - t375 * t767 - t377 * t764;
t1385 = qJD(2) * t1450 + t312 * t728 + t314 * t727 + t374 * t767 + t376 * t764;
t1373 = t1436 * t765;
t1372 = t1436 * t768;
t1371 = t1435 * t765;
t1370 = t1435 * t768;
t1165 = t712 * t765;
t651 = rSges(7,2) * t1165;
t1369 = t1428 * t765 + t651;
t658 = rSges(7,2) * t1163;
t1368 = t1428 * t768 + t658;
t1060 = rSges(6,1) * t1169;
t1103 = rSges(6,2) * t1053 + rSges(6,3) * t1165;
t403 = -t1060 * t765 + t1103;
t1164 = t712 * t766;
t693 = t711 * rSges(6,3);
t439 = rSges(6,1) * t1164 - rSges(6,2) * t1166 + t693;
t1061 = pkin(4) * t1170;
t661 = pkin(9) * t1165;
t524 = t661 - t1061;
t979 = -qJD(1) * t524 - t1320 * t667;
t1367 = t1077 * t300 + t1427 * t437 + t403 * t660 + t529 * t439 - t979;
t1366 = -t1446 * t711 + t1477;
t1365 = t1447 * t711 + t1475;
t694 = t711 * rSges(7,2);
t1326 = -t1164 * t1409 - t1166 * t1396 - t694;
t1214 = Icges(5,6) * t768;
t463 = Icges(5,4) * t1165 - Icges(5,2) * t1170 - t1214;
t692 = Icges(5,4) * t712;
t585 = Icges(5,1) * t711 + t692;
t1364 = -t585 * t765 - t463;
t937 = -Icges(5,2) * t711 + t692;
t464 = Icges(5,6) * t765 + t768 * t937;
t1363 = -t585 * t768 - t464;
t1232 = Icges(5,4) * t711;
t586 = Icges(5,1) * t712 - t1232;
t466 = Icges(5,5) * t765 + t586 * t768;
t583 = Icges(5,2) * t712 + t1232;
t1362 = -t583 * t768 + t466;
t1361 = -t583 + t586;
t1360 = t585 + t937;
t1055 = t767 * t1247;
t849 = -qJD(2) * t710 - t1055;
t829 = -t497 + t849;
t1359 = t636 + t829 - t1145;
t1358 = t1425 * t711;
t1286 = (-t607 * t768 + t486) * t765 - (-Icges(4,2) * t1160 + t485 - t680) * t768;
t1287 = (-t670 * t768 + t560) * t765 - (-Icges(3,2) * t1152 + t559 - t704) * t768;
t825 = t557 * t768 - t558 * t765;
t826 = t483 * t768 - t484 * t765;
t1357 = -t1286 * t727 - t1287 * t764 + t826 * t728 + t825 * t767;
t1094 = t672 + t939;
t1095 = -t670 + t673;
t1105 = t609 + t938;
t1106 = -t607 + t610;
t1356 = (-t1094 * t764 + t1095 * t767 - t1105 * t727 + t1106 * t728) * qJD(1);
t1355 = -t1375 * t529 + t1437 * t660 + t1438 * t528;
t1315 = t1440 * t768 + t1441 * t765;
t1354 = -t1440 * t765 + t1441 * t768;
t1314 = t1389 * t768 + t1390 * t765;
t1353 = -t1389 * t765 + t1390 * t768;
t1313 = t1391 * t768 + t1392 * t765;
t1352 = -t1391 * t765 + t1392 * t768;
t1351 = t1423 * t1442 + (t1433 * t765 + (-t1422 + t1432) * t768) * t765;
t1350 = t1432 * t1442 + (t1422 * t765 + (-t1423 + t1433) * t768) * t765;
t1349 = t1455 + t1469;
t304 = t574 * rSges(6,1) - t573 * rSges(6,2) + rSges(6,3) * t1168;
t1032 = -t736 * t1259 - t1091;
t1118 = t479 + t684;
t1040 = t388 + t1118;
t807 = qJD(1) * (t527 + t1040) - t666 * t589 + t1032;
t105 = t304 * t660 - t437 * t528 + t807;
t955 = rSges(6,1) * t270 - rSges(6,2) * t269;
t161 = rSges(6,3) * t843 + t955;
t952 = -rSges(6,1) * t763 - rSges(6,2) * t766;
t231 = t953 * t1167 + (rSges(6,3) * t758 + qJD(5) * t952) * t711;
t689 = t757 * t1080;
t982 = t611 * t765 - t689;
t220 = t1079 * t1101 + t690 + t698 + t982;
t1050 = -t220 + t1140;
t617 = t758 * t1061;
t306 = pkin(9) * t843 + qJD(1) * t665 - t617;
t501 = t1063 * t768 + t1088;
t806 = t768 * t769 * t960 + t632 * t1259 + t1036;
t387 = t1093 + t1107;
t1042 = t387 + t1121;
t525 = t1320 * t765;
t968 = -t525 + t1042;
t774 = t501 * t589 + t968 * qJDD(1) + (-t306 + t1050) * qJD(1) - t667 * t497 + t806;
t37 = -t161 * t660 - t231 * t529 + t247 * t437 - t300 * t502 + t774;
t1348 = (qJD(1) * t105 + t37) * t768;
t1029 = t727 * t1080;
t1028 = t764 * t1080;
t691 = pkin(2) * t1028;
t1098 = pkin(3) * t1029 + t691;
t530 = t589 * t1080;
t603 = t765 * t633;
t503 = pkin(2) * t1155 + t603;
t978 = -qJD(1) * t503 + t691;
t1347 = t530 + t1098 - t978;
t664 = pkin(9) * t1163;
t526 = -pkin(4) * t1168 + t664;
t992 = t666 * t524 + t526 * t667;
t1346 = -t712 * t1071 + t1146 * t765 + t1147 * t768 - t1368 * t529 - t1369 * t528 - t992 + (-t1020 + t1079) * t1143;
t1345 = t1133 * t1427 - t1326 * t529 + t1369 * t660 - t979;
t87 = -t1133 * t528 + t1141 * t660 + t531 + t807;
t1001 = t87 * t1133;
t1129 = t479 * t1078 - t478 * t736;
t974 = t388 * t1078 - t387 * t736 + t1129;
t836 = t666 * t525 + t527 * t667 + t974;
t65 = t1141 * t529 + t1143 * t528 + t636 + t836;
t1344 = -t1143 * t65 + t1001;
t1343 = t1454 * qJD(1);
t845 = -t612 - t1260;
t1334 = t768 * t845;
t25 = -qJD(6) * t267 + qJDD(6) * t573 + t1133 * t247 - t1143 * t502 - t1145 * t529 - t1146 * t660 + t774;
t1331 = qJD(1) * t87 + t25;
t459 = t667 * t589;
t1325 = -qJD(1) * t525 - t459;
t635 = qJD(1) * t683;
t1324 = qJD(1) * t478 - t635;
t1323 = t576 + t734;
t1322 = t1306 + t754;
t1319 = -t765 ^ 2 - t1442;
t1318 = (t1474 * t711 - t1435) * t660 + (-t1418 * t572 + t1457 + t533 - t536) * t529 + (t1418 * t574 - t1223 - t1456 + t538) * t528;
t1317 = (-Icges(7,1) * t1171 + t941 * t711 + t1445 + t644) * t660 + (t1419 * t571 + t1376 - t534 + t537) * t529 + (-t1419 * t573 - t1231 + t1458 + t535) * t528;
t1316 = t1416 * t711;
t695 = t712 * rSges(5,1);
t1307 = -rSges(5,2) * t711 + t695;
t1303 = t1328 * t502 + t1420 * t660;
t1047 = t268 * rSges(6,1) + t267 * rSges(6,2) + rSges(6,3) * t1051;
t159 = -rSges(6,3) * t1030 + t1047;
t38 = t660 * t159 - t528 * t231 - t246 * t437 + t502 * t304 + t772;
t1302 = t37 * t765 - t38 * t768;
t1301 = t300 * t1079 + t768 * t159 + t765 * t161;
t1300 = qJD(1) * t387 + t1324;
t1258 = g(1) * t765;
t1299 = -g(2) * t768 + t1258;
t581 = Icges(5,5) * t711 + Icges(5,6) * t712;
t1177 = t581 * t768;
t1186 = t464 * t711;
t1209 = Icges(5,3) * t768;
t582 = Icges(5,5) * t712 - Icges(5,6) * t711;
t1298 = -t758 * t1177 + (-t466 * t712 - t582 * t765 + t1186 + t1209) * qJD(1);
t462 = Icges(5,3) * t765 + t582 * t768;
t1085 = qJD(1) * t462;
t1178 = t581 * t765;
t1225 = Icges(5,5) * t768;
t645 = Icges(5,4) * t1170;
t465 = Icges(5,1) * t1165 - t1225 - t645;
t898 = t463 * t711 - t465 * t712;
t1297 = qJD(1) * t898 - t1178 * t758 + t1085;
t890 = t583 * t711 - t585 * t712;
t1292 = qJD(1) * t890 + t582 * t758;
t1256 = g(2) * t765;
t1288 = t711 * (g(1) * t768 + t1256);
t1282 = qJD(1) * t1360 + t1362 * t666 - (-Icges(5,2) * t1165 + t465 - t645) * t667;
t1281 = t246 / 0.2e1;
t1280 = t247 / 0.2e1;
t1279 = t500 / 0.2e1;
t1278 = t501 / 0.2e1;
t1276 = -t528 / 0.2e1;
t1275 = t528 / 0.2e1;
t1274 = -t529 / 0.2e1;
t1273 = t529 / 0.2e1;
t1272 = t631 / 0.2e1;
t1271 = t632 / 0.2e1;
t1270 = -t660 / 0.2e1;
t1269 = t660 / 0.2e1;
t1268 = -t666 / 0.2e1;
t1267 = t666 / 0.2e1;
t1266 = -t667 / 0.2e1;
t1265 = t667 / 0.2e1;
t1263 = t765 / 0.2e1;
t1262 = -t768 / 0.2e1;
t1255 = -qJD(1) / 0.2e1;
t1254 = qJD(1) / 0.2e1;
t1252 = rSges(3,1) * t767;
t1244 = t39 * t529;
t1243 = t40 * t528;
t1242 = t41 * t529;
t1241 = t42 * t528;
t749 = t765 * rSges(3,3);
t747 = t765 * rSges(5,3);
t1240 = qJDD(1) / 0.2e1;
t1206 = qJD(1) * t65;
t89 = t300 * t528 + t304 * t529 + t836;
t1204 = qJD(1) * t89;
t1203 = t105 * t765;
t1198 = t129 * t247;
t1197 = t130 * t246;
t1196 = t131 * t247;
t1195 = t132 * t246;
t587 = rSges(5,1) * t711 + rSges(5,2) * t712;
t1174 = t667 * t587;
t470 = rSges(5,1) * t1165 - rSges(5,2) * t1170 - t768 * rSges(5,3);
t972 = -t470 + t1042;
t137 = qJD(1) * t972 - t1174 + t1323;
t1194 = t137 * t765;
t838 = qJD(2) * t1334 + t734;
t188 = qJD(1) * t1038 + t838;
t1191 = t188 * t612;
t674 = rSges(3,1) * t764 + rSges(3,2) * t767;
t1027 = t674 * t1078;
t1090 = rSges(3,2) * t1155 + t768 * rSges(3,3);
t569 = rSges(3,1) * t1152 - t1090;
t1110 = -t569 - t683;
t328 = qJD(1) * t1110 - t1027;
t1190 = t328 * t765;
t1189 = t328 * t768;
t570 = rSges(3,1) * t1150 - rSges(3,2) * t1154 + t749;
t450 = t570 + t684;
t329 = qJD(1) * t450 - t674 * t736;
t602 = t674 * t768;
t1188 = t329 * t602;
t461 = Icges(5,5) * t1165 - Icges(5,6) * t1170 - t1209;
t1187 = t461 * t768;
t1144 = -t231 - t497;
t1139 = t1396 * t572 - t1409 * t571;
t1138 = t1396 * t574 - t1409 * t573;
t1137 = -t465 * t1163 - t765 * t461;
t1136 = t466 * t1163 + t765 * t462;
t471 = rSges(5,1) * t1163 - rSges(5,2) * t1168 + t747;
t1131 = t765 * t470 + t768 * t471;
t1128 = -t765 * t478 + t768 * t479;
t1062 = pkin(2) * t1154;
t604 = t768 * t633;
t504 = t604 + t1062;
t1127 = t504 * t1078 + t503 * t736;
t1122 = t765 * t525 + t768 * t527;
t1120 = -t479 - t388;
t492 = rSges(4,1) * t1159 - rSges(4,2) * t1161 + t748;
t1119 = -t479 - t492;
t1102 = rSges(6,2) * t1052 + rSges(6,3) * t1163;
t1100 = rSges(5,2) * t1030 + rSges(5,3) * t1079;
t1099 = rSges(4,2) * t1029 + rSges(4,3) * t1079;
t1097 = t651 + t661;
t1096 = t658 + t664;
t1092 = rSges(3,2) * t1028 + rSges(3,3) * t1079;
t202 = -t765 * t890 - t1177;
t1070 = t202 * qJD(1);
t1057 = qJD(1) * t1260;
t1049 = -t497 - t1145;
t265 = rSges(5,1) * t844 - rSges(5,2) * t1051 + t1100;
t521 = t587 * t765;
t266 = -t758 * t521 + (t1307 * t768 + t747) * qJD(1);
t1048 = t470 * t1079 + t768 * t265 + t765 * t266;
t1045 = t525 * t1079 + t768 * t305 + t765 * t306;
t1044 = t347 * t1078 + t348 * t736 - t631 * t478;
t1043 = -t478 * t1079 + t768 * t347 + t765 * t348;
t1041 = t527 - t1120;
t1035 = t617 + t689 + t735;
t1034 = t661 + t1103;
t1033 = t664 + t1102;
t1026 = t727 * t1078;
t1024 = t767 * t1078;
t1015 = t1167 / 0.2e1;
t1014 = -pkin(1) - t1252;
t1012 = t1080 / 0.2e1;
t1011 = t1079 / 0.2e1;
t1010 = -t736 / 0.2e1;
t1009 = t736 / 0.2e1;
t1008 = -t1078 / 0.2e1;
t1007 = t1078 / 0.2e1;
t1003 = t65 * t1141;
t782 = qJD(1) * t968 + t1323 - t459;
t86 = -t1133 * t529 - t1468 + t782;
t1002 = t86 * t1143;
t1000 = t764 * t1319;
t999 = (-t765 * t937 + t1214) * qJD(1) + t1362 * t758;
t998 = qJD(1) * t464 - t1158 * t583 + t465 * t758;
t997 = (-t586 * t765 + t1225) * qJD(1) + t1363 * t758;
t996 = qJD(1) * t466 + t1364 * t758;
t407 = t466 * t1165;
t995 = t462 * t768 - t407;
t523 = t587 * t768;
t994 = -t666 * t521 - t523 * t667;
t991 = -t461 + t1186;
t988 = t1360 * t758;
t987 = t1361 * t758;
t986 = -qJD(1) * t523 - t1307 * t666;
t985 = qJD(1) * t526 - t1320 * t666;
t983 = -t757 * t765 + t594;
t980 = qJD(1) * t521 - t1307 * t667;
t973 = -t765 * t387 + t768 * t388 + t1128;
t969 = t765 * t300 + t768 * t304 + t1122;
t961 = -pkin(9) * t1167 - t611;
t677 = rSges(2,1) * t768 - rSges(2,2) * t765;
t675 = rSges(2,1) * t765 + rSges(2,2) * t768;
t676 = -rSges(3,2) * t764 + t1252;
t104 = t1443 + t782;
t926 = t104 * t768 + t1203;
t138 = -t587 * t666 + (t471 + t1040) * qJD(1) + t1032;
t913 = -t137 * t768 - t138 * t765;
t904 = t300 * t768 - t304 * t765;
t317 = -t1078 * t1249 + (-t1080 * t728 - t1026) * rSges(4,1) + t1099;
t903 = t317 * t768 + t318 * t765;
t902 = -t329 * t765 - t1189;
t382 = -rSges(3,2) * t1024 + (-t1080 * t767 - t1025) * rSges(3,1) + t1092;
t601 = t674 * t765;
t383 = -qJD(2) * t601 + (t676 * t768 + t749) * qJD(1);
t901 = t382 * t768 + t383 * t765;
t221 = t463 * t712 + t465 * t711;
t894 = t491 * t765 + t492 * t768;
t891 = t569 * t765 + t570 * t768;
t480 = qJD(1) * t504;
t884 = -t1057 * t768 + t480;
t882 = -t587 + t633;
t881 = -t589 + t633;
t880 = t983 + t527;
t879 = -t697 + (-rSges(7,2) - pkin(9)) * t711;
t878 = -t697 + (-rSges(6,3) - pkin(9)) * t711;
t877 = -t387 * t1079 + t768 * t219 + t765 * t220 + t1043;
t876 = t1141 * t768 + t1143 * t765 + t1122;
t863 = -t437 + t881;
t856 = t898 * t765;
t848 = t1320 - t1326;
t847 = -t1320 - t694;
t846 = -t1320 - t693;
t840 = -pkin(4) * t1054 + t1323 + t618;
t839 = t439 + t1320;
t837 = t881 - t1133;
t494 = t1307 * t758;
t830 = -t494 + t849;
t828 = qJD(1) * t582 - t1177 * t666 + t1178 * t667;
t827 = t1133 * t86 - t1003;
t821 = -t231 + t829;
t820 = t877 + t1045;
t808 = t219 * t1078 + t1120 * t632 + t220 * t736 - t631 * t387 + t1044;
t805 = t1323 + t1300;
t799 = qJD(1) * t1361 + t1363 * t666 - t1364 * t667;
t798 = t1077 * t1141 + t1326 * t528 + t1368 * t660 + t985;
t405 = -t1060 * t768 + t1102;
t797 = t300 * t1020 - t1021 * t304 + t528 * t403 + t405 * t529 + t992;
t796 = -t1020 * t437 + t304 * t1077 + t660 * t405 - t439 * t528 + t985;
t794 = (-pkin(4) - t1251) * t1288;
t792 = qJD(1) * t461 - t711 * t998 + t712 * t996;
t791 = -t711 * t999 + t712 * t997 + t1085;
t790 = qJD(1) * t581 - t711 * t988 + t712 * t987;
t781 = t667 * t305 + t666 * t306 + t500 * t525 - t501 * t527 + t808;
t778 = (-t1396 * t763 - t1409 * t766 - pkin(4)) * t1288;
t773 = -t1282 * t711 + t799 * t712;
t112 = t1292 * t765 + t790 * t768;
t113 = -t1292 * t768 + t790 * t765;
t125 = t711 * t996 + t712 * t998;
t126 = t711 * t997 + t712 * t999;
t182 = -t856 - t1187;
t183 = -t1170 * t464 - t995;
t184 = -t1168 * t463 - t1137;
t185 = -t1168 * t464 + t1136;
t203 = -t768 * t890 + t1178;
t222 = t464 * t712 + t466 * t711;
t82 = t1297 * t765 + t792 * t768;
t83 = t1298 * t765 + t791 * t768;
t84 = -t1297 * t768 + t792 * t765;
t85 = -t1298 * t768 + t791 * t765;
t96 = -t182 * t667 + t183 * t666 + t1070;
t195 = t203 * qJD(1);
t97 = -t184 * t667 + t185 * t666 + t195;
t771 = (t1282 * t712 + t799 * t711) * t1255 - t1353 * t246 / 0.2e1 - t1354 * t502 / 0.2e1 + (qJD(1) * t113 + qJDD(1) * t202 + t182 * t501 + t183 * t500 + t666 * t85 - t667 * t84 + t1410) * t1262 + (qJD(1) * t112 + qJDD(1) * t203 + t184 * t501 + t185 * t500 + t666 * t83 - t667 * t82 + t1411) * t1263 + ((t1165 * t1390 + t1329 * t711) * qJD(5) + ((qJD(5) * t1389 + t1355) * t712 + t1358) * t768 + (t1365 * t574 + t1366 * t573) * t660 + (t1371 * t574 - t1373 * t573) * t529 + (-t1370 * t574 + t1372 * t573) * t528) * t1276 + ((t1163 * t1391 + t1330 * t711) * qJD(5) + ((qJD(5) * t1392 + t1355) * t712 + t1358) * t765 + (t1365 * t572 + t1366 * t571) * t660 + (t1371 * t572 - t1373 * t571) * t529 + (-t1370 * t572 + t1372 * t571) * t528) * t1273 + ((qJD(5) * t1315 - t1425) * t712 + ((t1365 * t766 + t1366 * t763 + t1437) * t660 + (t1371 * t766 - t1373 * t763 - t1375) * t529 + (-t1370 * t766 + t1372 * t763 + t1438) * t528 + t1328 * qJD(5)) * t711) * t1270 - t1399 * t1077 / 0.2e1 + (t97 + t1400) * t1011 + (t96 + t1401) * t1012 + (qJD(1) * t1315 + t1402 * t765 - t1403 * t768) * t1269 + (qJD(1) * t1313 + t1404 * t765 - t1405 * t768) * t1274 + (qJD(1) * t1314 + t1406 * t765 - t1407 * t768) * t1275 + (-t125 * t768 + t126 * t765 + (t221 * t765 + t222 * t768) * qJD(1)) * t1254 + (-t221 * t768 + t222 * t765) * t1240 - t1352 * t247 / 0.2e1 + (t765 * t773 - t768 * t828) * t1265 + (t765 * t85 - t768 * t84 + (t182 * t765 + t183 * t768) * qJD(1)) * t1266 + (t765 * t83 - t768 * t82 + (t184 * t765 + t185 * t768) * qJD(1)) * t1267 + (t765 * t828 + t768 * t773) * t1268 + (-t182 * t768 + t183 * t765) * t1278 + (-t184 * t768 + t185 * t765) * t1279 - (t1400 * t768 + t1401 * t765) * t1076 / 0.2e1;
t626 = t676 * qJD(2);
t568 = t612 * t768;
t519 = t952 * t711;
t370 = -rSges(6,1) * t573 - rSges(6,2) * t574;
t365 = -rSges(6,1) * t571 - rSges(6,2) * t572;
t324 = t891 * qJD(2);
t189 = -t612 * t736 + (t492 + t1118) * qJD(1) - t1091;
t181 = qJD(2) * t894 + t1129;
t178 = qJD(1) * t382 + qJDD(1) * t570 - t626 * t736 - t631 * t674 + t1104;
t177 = -t626 * t1078 + t632 * t674 + t1110 * qJDD(1) + (-t383 - t629) * qJD(1);
t114 = t470 * t666 + t471 * t667 + t974;
t109 = qJD(1) * t317 + qJDD(1) * t492 - t580 * t736 - t612 * t631 + t783;
t75 = qJD(1) * t265 + qJDD(1) * t471 - t494 * t666 - t500 * t587 + t777;
t74 = -t494 * t667 + t501 * t587 + t972 * qJDD(1) + (-t266 + t1050) * qJD(1) + t806;
t43 = t265 * t667 + t266 * t666 + t470 * t500 - t471 * t501 + t808;
t26 = t159 * t529 + t161 * t528 + t246 * t300 - t247 * t304 + t781;
t15 = qJD(6) * t841 + qJDD(6) * t1171 - t1141 * t247 + t1143 * t246 + t1146 * t528 + t1147 * t529 + t781;
t1 = [(t1375 * t712 + (t1376 * t763 - t1457 * t766) * t711 + t1441) * t528 * t1270 + (-t1070 + (t185 - t856 - t1136) * t667 + (t765 * t991 + t184 - t407) * t666 + ((t462 + t898) * t666 + t991 * t667) * t768 + t96) * t1268 + (t329 * (t726 + t1092) + (t1190 * t674 - t1188) * qJD(2) + ((-pkin(1) - t676) * t1189 + (t328 * (-rSges(3,3) - pkin(7)) + t329 * t1014) * t765) * qJD(1) - (-qJD(1) * t569 - t1027 - t328 - t635) * t329 + (t178 - g(2)) * t450 + (t177 - g(1)) * (t1014 * t765 + t1090 + t755)) * m(3) + (t113 + t125 + t97) * t1266 + ((t1342 * t765 + ((t1472 + t1481) * t768 + t1383 + t1470 + t1479) * t768) * qJD(2) + t1417) * t1007 + (t112 + t126) * t1267 + (t1385 + t1388) * t1009 + (-t1386 + t1387 + t1393) * t1008 + t1329 * t1281 + t1330 * t1280 + (t1377 + t1379) * t1272 + (t1378 + t1380) * t1271 + (t583 * t712 + t585 * t711 + m(2) * (t675 ^ 2 + t677 ^ 2) + Icges(2,3) - t1451) * qJDD(1) + (-qJD(2) * t1452 + t578 * t728 + t579 * t727 + t623 * t767 + t624 * t764 + t711 * t987 + t712 * t988) * qJD(1) + (-(-t104 + t1325 + t1443 + t805) * t105 + t104 * (-t955 + t1035) + t105 * (t840 + t1047) + (t37 * t846 + t104 * (-rSges(6,3) * t1167 + t961)) * t765 + ((-t625 + t878) * t1203 + (t104 * (-t625 + t846) - t105 * t757) * t768) * qJD(1) - t878 * t1258 + (t38 - g(2)) * (t880 + t304) + (t37 - g(1)) * (-t954 + t1107)) * m(6) + (-(-qJD(1) * t491 + t1324 - t188 + t838) * t189 + t188 * t1031 + t189 * (t734 + t1099) + (t1191 * t765 + t1334 * t189) * qJD(2) + ((-t188 * rSges(4,3) + t189 * (-t722 - t709)) * t765 + (t188 * (-t722 - t1306) - t189 * t762) * t768) * qJD(1) + (t109 - g(2)) * (t492 + t981) + t1421 * (-t491 - t1093)) * m(4) + t1398 * t1275 + (t1397 + t1400) * t1274 + (t202 + t221) * t1278 + (t203 + t222) * t1279 - m(2) * (-g(1) * t675 + g(2) * t677) + t1241 / 0.2e1 - t1242 / 0.2e1 + t1400 * t1273 + t1198 / 0.2e1 + t1196 / 0.2e1 + t1197 / 0.2e1 + (t195 + (t183 + (t463 * t768 + t464 * t765) * t711 + t995 + t1137) * t667 + (-t465 * t1165 + t1187 + t182 + (t463 * t765 - t464 * t768) * t711 + t1136) * t666) * t1265 + t1195 / 0.2e1 + (((t1349 * t768 - t1342 + t1381) * t768 + (t1349 * t765 + t1382 + t1471) * t765) * qJD(2) + t1394 - t1414) * t1010 + t1303 + (t1001 * t529 - g(1) * t1426 - t879 * t1258 + (t765 * t847 + t1426) * t25 + (t1035 + (-rSges(7,2) * t1167 + t961) * t765 + (-t625 + t847) * t1079 + t87 + t1439) * t86 + (pkin(3) * t1026 - t1300 - t1325 - t883 + t840 + ((-t625 + t879) * t765 - t1395) * qJD(1) + t1429 + t1468) * t87 + t1408 * (t880 + t1141)) * m(7) + (-(-qJD(1) * t470 - t1174 - t137 + t805) * t138 + t137 * (t735 - t982) + t138 * (t1100 + t1323) + (t1194 * t587 - t138 * t523) * t758 + ((-t137 * rSges(5,3) + t138 * (-t625 - t695)) * t765 + (t137 * (-t625 - t1307) - t138 * t757) * t768) * qJD(1) + (t75 - g(2)) * (t471 + t983) + (t74 - g(1)) * (-t470 + t1107)) * m(5) + t1243 / 0.2e1 - t1244 / 0.2e1; t771 + t1431 * t1272 + t1430 * t1271 + (qJD(1) * t1388 + qJD(2) * t1350 + qJDD(1) * t1379 + t1381 * t631 + t1382 * t632) * t1263 + (qJD(1) * t1387 + qJD(2) * t1351 + qJDD(1) * t1380 + t1383 * t631 + t1384 * t632) * t1262 + ((t1286 * t728 + t1287 * t767 + t826 * t727 + t825 * t764) * qJD(2) + (t1094 * t767 + t1095 * t764 + t1105 * t728 + t1106 * t727) * qJD(1)) * t1255 + (t1386 * t768 + t1385 * t765 + (t1377 * t768 + t1378 * t765) * qJD(1)) * t1254 + (t1377 * t765 - t1378 * t768) * t1240 + t1394 * t1012 + t1393 * t1011 + ((-t1341 * t736 + t1343) * t765 + ((t1340 * t765 + t1357) * qJD(2) + t1356) * t768) * t1010 + ((t1381 * t768 + t1382 * t765) * qJD(1) + t1350) * t1009 + ((t1383 * t768 + t1384 * t765) * qJD(1) + t1351) * t1008 + ((-t1078 * t1340 - t1343) * t768 + ((t1341 * t768 + t1357) * qJD(2) + t1356) * t765) * t1007 + (-t87 * (t480 + t798) + t15 * (t876 + t973) - g(1) * (t604 + t1096) - g(2) * (t603 + t1097) - g(3) * (t848 - t960) - t778 + (t1077 * t1143 + t1345 + t1347) * t86 + (-t87 * (-t1076 * t1133 - t1057) + t1331 * t837 + (-t849 + t1359) * t86) * t768 + (t1003 * t1076 + t24 * t837 + (-t1041 - t1141) * t1206 + (-qJD(2) * t960 + t1359) * t87) * t765 + (-t1056 * t1319 - t1127 + t1346 + t820) * t65) * m(7) + (-g(1) * (t604 + t1033) - g(2) * (t603 + t1034) - g(3) * (t839 - t960) - t794 + t26 * (t969 + t973) + t89 * (t820 + t1301) + t863 * t1348 + (t38 * t863 + t105 * t821 + (-t304 - t1041) * t1204) * t765 - t105 * (t796 + t884) - t89 * (t797 + t1127) - (-t926 * t710 + (t1000 * t89 - t767 * t926) * pkin(2)) * qJD(2) + (t768 * t821 + t1347 + t1367) * t104) * m(6) + (-g(1) * (t604 - t523) - g(2) * (t603 - t521) - g(3) * (t1307 - t960) + t137 * t1098 + t43 * (t973 + t1131) + t114 * (t877 + t1048) + (t137 * t830 + (qJD(1) * t138 + t74) * t882) * t768 + (t75 * t882 + t138 * t830 + (t137 * t587 + t114 * (-t471 + t1120)) * qJD(1)) * t765 - t137 * (t978 + t980) - t138 * (t884 + t986) - t114 * (t994 + t1127) - (t913 * t710 + (t1000 * t114 + t767 * t913) * pkin(2)) * qJD(2)) * m(5) + (-(t188 * t567 + t189 * (-t568 - t1062)) * qJD(1) - (t181 * pkin(2) * t1000 + (-t1322 * t188 - t181 * t568) * t768 + (-t1322 * t189 - t181 * t567) * t765) * qJD(2) + t188 * (-pkin(2) * t1024 - t580 * t768) + (qJD(2) * t903 + t1119 * t632 + t491 * t631 + t1044) * (t894 + t1128) + t181 * (t903 + t1043) + (t181 * t491 + t189 * t845) * t1079 + (t109 * t845 + t189 * (-t1055 - t580) + (t1119 * t181 + t1191) * qJD(1)) * t765 - g(3) * t1322 - t845 * t1256 + t1421 * t1334) * m(4) + (g(1) * t602 + g(2) * t601 - g(3) * t676 - (t328 * t601 - t1188) * qJD(1) - (t324 * (-t601 * t765 - t602 * t768) + t902 * t676) * qJD(2) + (qJD(2) * t901 + t569 * t631 - t570 * t632) * t891 + t324 * ((t569 * t768 - t570 * t765) * qJD(1) + t901) + t902 * t626 + (-t177 * t768 - t178 * t765 + (-t329 * t768 + t1190) * qJD(1)) * t674) * m(3); (-m(4) - m(5) - m(7)) * t1299 + 0.2e1 * (t1262 * t24 + t1263 * t25) * m(7) + 0.2e1 * (t1262 * t75 + t1263 * t74) * m(5) + 0.2e1 * (t108 * t1263 + t109 * t1262) * m(4) + (-t1299 + t1302) * m(6); t771 + (-g(1) * t1096 - g(2) * t1097 - g(3) * t848 - t778 - t87 * (-t636 * t765 + t798) - (-t711 * t1002 + (-t1001 * t768 - t1003 * t765) * t712) * qJD(5) + t15 * t876 + (t87 * t1049 + (-t527 - t1141) * t1206) * t765 + (t1331 * t768 + t24 * t765) * (-t589 - t1133) + (t530 + (t1049 + t636) * t768 + t1345) * t86 + (t1045 + t1346) * t65) * m(7) + (-g(1) * t1033 - g(2) * t1034 - g(3) * t839 - t794 - t105 * t796 + t26 * t969 + (t105 * t1144 + (-t304 - t527) * t1204) * t765 + (-t797 + t1045 + t1301) * t89 + (t38 * t765 + t1348) * (-t437 - t589) + (t1144 * t768 + t1367 + t530) * t104) * m(6) + (g(1) * t523 + g(2) * t521 - g(3) * t1307 - t137 * t980 - t138 * t986 + t43 * t1131 + t913 * t494 + (-t74 * t768 - t75 * t765 + (-t138 * t768 + t1194) * qJD(1)) * t587 + (-t1080 * t471 + t1048 - t994) * t114) * m(5); (t1314 * t711 - t1329 * t712) * t1281 + (t1313 * t711 - t1330 * t712) * t1280 + (t1315 * t711 - t1328 * t712) * t502 / 0.2e1 + (-t1316 * t768 + t1317 * t574 + t1318 * t573) * t1276 + ((t1314 * t758 - t1398) * t712 + (qJD(1) * t1353 + t1329 * t758 + t1406 * t768 + t1407 * t765) * t711) * t1275 + ((t1313 * t758 - t1397) * t712 + (qJD(1) * t1352 + t1330 * t758 + t1404 * t768 + t1405 * t765) * t711) * t1274 + (-t1316 * t765 + t1317 * t572 + t1318 * t571) * t1273 + (t1416 * t712 + (t1317 * t766 + t1318 * t763) * t711) * t1270 + ((t1315 * t758 - t1420) * t712 + (qJD(1) * t1354 + t1328 * t758 + t1402 * t768 + t1403 * t765) * t711) * t1269 - (t1197 + t1198 + t1243 - t1244 + t1195 + t1196 + t1241 - t1242 + t1303) * t712 / 0.2e1 + t1399 * t711 * t758 / 0.2e1 + t1410 * t1170 / 0.2e1 + t1411 * t1168 / 0.2e1 + (-(t1169 * t65 + t572 * t87 + t574 * t86) * qJD(6) - (t1138 * t87 - t1139 * t86) * t660 - (t1115 * t86 + t1138 * t65) * t529 - (t1115 * t87 + t1139 * t65) * t528 + (t25 * t1143 + t86 * t1146 - t24 * t1141 - t87 * t1147 + (-t1344 * t768 + t827 * t765) * t758) * t712 + ((t1141 * t87 - t1002) * t758 + (qJD(1) * t827 - t1133 * t24 + t1143 * t15 - t1145 * t87 + t1146 * t65) * t768 + (qJD(1) * t1344 + t25 * t1133 - t15 * t1141 + t86 * t1145 - t65 * t1147) * t765) * t711 - g(1) * t1138 - g(2) * t1139 + g(3) * t1115) * m(7) + (-g(1) * t370 - g(2) * t365 - g(3) * t519 + (t104 * t161 - t105 * t159 + t37 * t300 - t38 * t304 + (t89 * t904 + (t104 * t765 - t105 * t768) * t437) * t758) * t712 + (t104 * (t231 * t765 - t300 * t758) + t105 * (-t231 * t768 + t304 * t758) + t26 * t904 + t89 * (-t1079 * t304 - t1080 * t300 - t159 * t765 + t161 * t768) + (qJD(1) * t926 + t1302) * t437) * t711 - t104 * (-t365 * t660 - t519 * t529) - t105 * (t370 * t660 - t519 * t528) - t89 * (t365 * t528 + t370 * t529)) * m(6) + t1400 * (t768 * t1015 - t1030 / 0.2e1) + t1401 * (t711 * t1011 + t765 * t1015); (-t267 * t86 + t269 * t87 + t841 * t65 + (-t529 * t65 - t660 * t87 - g(1) + t25) * t573 + (-t528 * t65 + t660 * t86 + t1408) * t571 + (t528 * t87 + t529 * t86 - g(3) + t15) * t1171) * m(7);];
tau  = t1;
