% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP2_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:45:21
% EndTime: 2019-03-09 11:45:41
% DurationCPUTime: 10.82s
% Computational Cost: add. (18354->687), mult. (43936->800), div. (0->0), fcn. (33709->14), ass. (0->333)
t273 = cos(qJ(5));
t384 = qJD(5) * t273;
t271 = sin(qJ(2));
t274 = cos(qJ(2));
t431 = cos(pkin(10));
t352 = qJD(1) * t431;
t337 = t274 * t352;
t430 = sin(pkin(10));
t351 = qJD(1) * t430;
t193 = -t271 * t351 + t337;
t301 = -t271 * t431 - t274 * t430;
t194 = t301 * qJD(1);
t270 = sin(qJ(4));
t460 = cos(qJ(4));
t144 = t460 * t193 + t194 * t270;
t491 = t144 * t273;
t508 = t384 - t491;
t269 = sin(qJ(5));
t308 = -t270 * t193 + t194 * t460;
t378 = qJD(2) + qJD(4);
t128 = t269 * t378 - t273 * t308;
t419 = t128 * t269;
t343 = t273 * t378;
t126 = -t269 * t308 - t343;
t423 = t126 * t273;
t317 = t419 + t423;
t331 = qJD(2) * t351;
t288 = -qJDD(1) * t301 - t271 * t331;
t332 = qJD(2) * t352;
t152 = t274 * t332 + t288;
t355 = t431 * t274;
t354 = t430 * t271;
t368 = -qJDD(1) * t354 - t271 * t332 - t274 * t331;
t298 = -qJDD(1) * t355 - t368;
t360 = qJD(4) * t460;
t387 = qJD(4) * t270;
t280 = -t152 * t460 - t193 * t360 - t194 * t387 + t270 * t298;
t376 = qJDD(2) + qJDD(4);
t64 = qJD(5) * t128 - t269 * t280 - t273 * t376;
t438 = -t126 * t384 - t269 * t64;
t385 = qJD(5) * t269;
t63 = -qJD(5) * t343 - t269 * t376 + t273 * t280 - t308 * t385;
t440 = t128 * t385 + t273 * t63;
t503 = t144 * t317 + t438 - t440;
t449 = qJ(3) + pkin(7);
t232 = t449 * t274;
t214 = qJD(1) * t232;
t196 = t430 * t214;
t231 = t449 * t271;
t213 = qJD(1) * t231;
t447 = qJD(2) * pkin(2);
t201 = -t213 + t447;
t150 = t431 * t201 - t196;
t452 = t194 * pkin(8);
t117 = qJD(2) * pkin(3) + t150 + t452;
t356 = t431 * t214;
t151 = t430 * t201 + t356;
t453 = t193 * pkin(8);
t125 = t151 + t453;
t85 = t270 * t117 + t125 * t460;
t74 = pkin(9) * t378 + t85;
t262 = t274 * pkin(2);
t255 = t262 + pkin(1);
t216 = -qJD(1) * t255 + qJD(3);
t158 = -t193 * pkin(3) + t216;
t90 = -pkin(4) * t144 + pkin(9) * t308 + t158;
t40 = t269 * t90 + t273 * t74;
t486 = qJD(5) - t144;
t444 = t486 * t40;
t357 = qJD(2) * t449;
t189 = -t271 * qJD(3) - t274 * t357;
t149 = qJDD(2) * pkin(2) + qJD(1) * t189 - qJDD(1) * t231;
t188 = t274 * qJD(3) - t271 * t357;
t155 = qJD(1) * t188 + qJDD(1) * t232;
t105 = t431 * t149 - t155 * t430;
t83 = qJDD(2) * pkin(3) - t152 * pkin(8) + t105;
t106 = t430 * t149 + t431 * t155;
t88 = -pkin(8) * t298 + t106;
t21 = t117 * t360 - t125 * t387 + t270 * t83 + t460 * t88;
t19 = pkin(9) * t376 + t21;
t380 = qJD(1) * qJD(2);
t359 = t271 * t380;
t377 = pkin(2) * t359 + qJDD(3);
t379 = t274 * qJDD(1);
t428 = qJDD(1) * pkin(1);
t350 = t270 * t152 + t460 * t298;
t487 = t308 * qJD(4);
t80 = t350 - t487;
t29 = -pkin(2) * t379 + pkin(3) * t298 + t80 * pkin(4) + pkin(9) * t280 + t377 - t428;
t7 = -t269 * t19 + t273 * t29 - t74 * t384 - t90 * t385;
t507 = t7 + t444;
t32 = qJ(6) * t486 + t40;
t446 = t486 * t32;
t471 = t144 * t378;
t506 = -t280 - t471;
t79 = qJDD(5) + t80;
t71 = t269 * t79;
t313 = t486 * t508 + t71;
t420 = t128 * t308;
t505 = t313 + t420;
t72 = t273 * t79;
t432 = -t385 * t486 + t72;
t492 = t144 * t269;
t375 = -t486 * t492 - t432;
t416 = t308 * t126;
t312 = -t375 - t416;
t328 = t273 * pkin(5) + t269 * qJ(6);
t414 = t144 ^ 2;
t415 = t308 ^ 2;
t502 = -t414 + t415;
t39 = -t269 * t74 + t273 * t90;
t394 = qJD(6) - t39;
t31 = -pkin(5) * t486 + t394;
t265 = qJ(2) + pkin(10);
t261 = qJ(4) + t265;
t250 = sin(t261);
t242 = g(3) * t250;
t251 = cos(t261);
t275 = cos(qJ(1));
t401 = t251 * t275;
t272 = sin(qJ(1));
t402 = t251 * t272;
t369 = g(1) * t401 + g(2) * t402 + t242;
t441 = t79 * qJ(6);
t6 = t273 * t19 + t269 * t29 + t90 * t384 - t385 * t74;
t2 = qJD(6) * t486 + t441 + t6;
t462 = pkin(5) * t79;
t4 = qJDD(6) - t7 - t462;
t477 = t2 * t273 + t4 * t269;
t501 = t31 * t508 - t369 + t477;
t62 = t64 * t273;
t500 = -t62 + (t385 - t492) * t126;
t60 = t63 * t269;
t499 = t128 * t508 - t60;
t498 = pkin(5) * t308;
t497 = t144 * t39;
t84 = t117 * t460 - t270 * t125;
t73 = -pkin(4) * t378 - t84;
t42 = t126 * pkin(5) - t128 * qJ(6) + t73;
t496 = t144 * t42;
t495 = t144 * t73;
t494 = qJ(6) * t308;
t493 = t486 * t308;
t409 = t144 * t308;
t403 = t250 * t275;
t404 = t250 * t272;
t489 = g(1) * t403 + g(2) * t404;
t383 = t308 * qJD(2);
t488 = -t383 - t350;
t393 = t489 * t273;
t41 = t42 * t385;
t485 = -t31 * t308 + t393 + t41;
t455 = g(3) * t269;
t370 = -t251 * t455 + t489 * t269;
t347 = t117 * t387 + t125 * t360 + t270 * t88 - t460 * t83;
t20 = -pkin(4) * t376 + t347;
t8 = t64 * pkin(5) + t63 * qJ(6) - t128 * qJD(6) + t20;
t450 = t8 * t269;
t484 = t32 * t308 + t370 - t450;
t476 = t20 * t269 + t73 * t384;
t483 = -t40 * t308 - t370 + t476;
t68 = t73 * t385;
t482 = t39 * t308 + t393 + t68;
t481 = -t158 * t144 - t21 + t369;
t327 = pkin(5) * t269 - qJ(6) * t273;
t480 = pkin(5) * t385 - qJ(6) * t384 - t269 * qJD(6) - t144 * t327;
t302 = t354 - t355;
t290 = t460 * t302;
t291 = qJD(2) * t301;
t107 = -t270 * t291 + t290 * t378 - t301 * t387;
t293 = t270 * t302;
t154 = -t301 * t460 - t293;
t424 = t126 * t269;
t479 = t154 * (qJD(5) * (-t128 * t273 + t424) - t62 + t60) + t317 * t107;
t456 = g(3) * t251;
t478 = t158 * t308 - t347 - t456 + t489;
t104 = -pkin(4) * t308 - pkin(9) * t144;
t252 = pkin(2) * t431 + pkin(3);
t365 = t430 * pkin(2);
t187 = t270 * t252 + t460 * t365;
t184 = pkin(9) + t187;
t186 = t460 * t252 - t270 * t365;
t169 = t186 * qJD(4);
t406 = t169 * t273;
t475 = -t126 * t406 - t184 * t62;
t157 = -t431 * t213 - t196;
t130 = t157 + t452;
t156 = t213 * t430 - t356;
t303 = t156 - t453;
t93 = t130 * t460 + t270 * t303;
t435 = t169 - t93;
t434 = t187 * qJD(4) - t270 * t130 + t460 * t303;
t474 = -t128 * t486 + t64;
t469 = t328 * t251;
t392 = t251 * pkin(4) + t250 * pkin(9);
t468 = -g(1) * t272 + g(2) * t275;
t334 = g(1) * t275 + g(2) * t272;
t292 = qJD(2) * t302;
t108 = -qJD(4) * t293 - t270 * t292 - t291 * t460 - t301 * t360;
t153 = -t270 * t301 + t290;
t427 = t107 * t269;
t307 = t154 * t384 - t427;
t408 = t154 * t269;
t467 = t108 * t126 + t153 * t64 + t307 * t486 + t408 * t79;
t160 = -t431 * t231 - t232 * t430;
t136 = pkin(8) * t301 + t160;
t161 = -t430 * t231 + t431 * t232;
t137 = -pkin(8) * t302 + t161;
t101 = t270 * t136 + t137 * t460;
t165 = pkin(3) * t302 - t255;
t99 = t153 * pkin(4) - t154 * pkin(9) + t165;
t448 = t273 * t101 + t269 * t99;
t135 = t431 * t188 + t430 * t189;
t113 = pkin(8) * t291 + t135;
t134 = -t188 * t430 + t431 * t189;
t282 = pkin(8) * t292 + t134;
t48 = t113 * t460 + t136 * t360 - t137 * t387 + t270 * t282;
t258 = t271 * t447;
t163 = -pkin(3) * t291 + t258;
t66 = t108 * pkin(4) + t107 * pkin(9) + t163;
t13 = -qJD(5) * t448 - t269 * t48 + t273 * t66;
t465 = t128 ^ 2;
t464 = t486 ^ 2;
t463 = t194 ^ 2;
t276 = qJD(2) ^ 2;
t461 = pkin(9) * t79;
t454 = g(3) * t274;
t5 = t6 * t273;
t388 = qJD(1) * t271;
t162 = pkin(2) * t388 - pkin(3) * t194;
t94 = t104 + t162;
t47 = t269 * t94 + t273 * t93;
t445 = t486 * t39;
t443 = t184 * t79;
t436 = t434 + t480;
t433 = t480 - t85;
t51 = t269 * t104 + t273 * t84;
t429 = pkin(7) * qJDD(1);
t426 = t107 * t273;
t425 = t126 * t184;
t422 = t128 * t126;
t407 = t154 * t273;
t405 = t194 * t193;
t399 = t269 * t272;
t398 = t272 * t273;
t397 = t273 * t275;
t264 = -pkin(8) - t449;
t396 = t275 * t264;
t395 = t275 * t269;
t260 = cos(t265);
t391 = pkin(3) * t260 + t262;
t266 = t271 ^ 2;
t267 = t274 ^ 2;
t390 = t266 - t267;
t389 = t266 + t267;
t382 = t194 * qJD(2);
t277 = qJD(1) ^ 2;
t372 = t271 * t277 * t274;
t212 = pkin(1) + t391;
t200 = t275 * t212;
t371 = pkin(4) * t401 + pkin(9) * t403 + t200;
t364 = t184 * t385;
t363 = t184 * t384;
t361 = t126 ^ 2 - t465;
t100 = -t460 * t136 + t270 * t137;
t348 = t486 * t269;
t344 = t5 - t369;
t342 = t391 + t392;
t341 = t274 * t359;
t219 = pkin(9) * t402;
t340 = -pkin(4) * t404 + t219;
t222 = pkin(9) * t401;
t339 = -pkin(4) * t403 + t222;
t338 = -g(1) * t404 + g(2) * t403;
t178 = t251 * t399 + t397;
t180 = t251 * t395 - t398;
t336 = g(1) * t178 - g(2) * t180;
t179 = t251 * t398 - t395;
t181 = t251 * t397 + t399;
t335 = g(1) * t179 - g(2) * t181;
t329 = (qJD(5) * t126 - t63) * pkin(9);
t326 = -t443 - t495;
t325 = t269 * t32 - t273 * t31;
t324 = t269 * t31 + t273 * t32;
t323 = t269 * t40 + t273 * t39;
t322 = t269 * t39 - t273 * t40;
t46 = -t269 * t93 + t273 * t94;
t55 = -t101 * t269 + t273 * t99;
t50 = t104 * t273 - t269 * t84;
t318 = t128 * t169 - t184 * t63;
t311 = pkin(4) + t328;
t310 = -pkin(9) * qJD(5) * t486 - t456;
t309 = -0.2e1 * pkin(1) * t380 - pkin(7) * qJDD(2);
t306 = -t154 * t385 - t426;
t305 = -t169 * t269 - t363;
t12 = -t101 * t385 + t269 * t66 + t273 * t48 + t99 * t384;
t182 = -qJDD(1) * t255 + t377;
t296 = g(1) * t180 + g(2) * t178 + t250 * t455 + t7;
t295 = -pkin(7) * t276 + 0.2e1 * t428 - t468;
t294 = pkin(1) * t277 + t334 - t429;
t289 = (-g(1) * (-t212 - t392) + g(2) * t264) * t272;
t287 = -qJD(5) * t325 + t477;
t286 = -qJD(5) * t323 - t7 * t269 + t5;
t285 = t126 * t307 + t408 * t64;
t49 = qJD(4) * t101 + t270 * t113 - t460 * t282;
t284 = t128 * t42 + qJDD(6) - t296;
t283 = -g(1) * t181 - g(2) * t179 - t242 * t273 + t6;
t123 = -t368 * pkin(3) + (-pkin(1) + (-pkin(3) * t431 - pkin(2)) * t274) * qJDD(1) + t377;
t281 = t334 * t311 * t250;
t259 = sin(t265);
t215 = -pkin(2) * t271 - pkin(3) * t259;
t203 = t275 * t215;
t202 = t272 * t215;
t191 = t193 ^ 2;
t183 = -pkin(4) - t186;
t159 = -t311 - t186;
t95 = pkin(5) * t128 + qJ(6) * t126;
t67 = t154 * t327 + t100;
t57 = pkin(9) * t62;
t44 = -pkin(5) * t153 - t55;
t43 = qJ(6) * t153 + t448;
t38 = -t50 + t498;
t37 = t51 - t494;
t36 = -t46 + t498;
t35 = t47 - t494;
t34 = t108 * t486 + t153 * t79;
t33 = t126 * t486 - t63;
t15 = t128 * t306 - t407 * t63;
t14 = -t327 * t107 + (qJD(5) * t328 - qJD(6) * t273) * t154 + t49;
t11 = -t108 * pkin(5) - t13;
t10 = t128 * t108 - t63 * t153 + t306 * t486 + t407 * t79;
t9 = qJ(6) * t108 + qJD(6) * t153 + t12;
t1 = [0, 0, 0, 0, 0, qJDD(1), -t468, t334, 0, 0, qJDD(1) * t266 + 0.2e1 * t341, 0.2e1 * t271 * t379 - 0.2e1 * t380 * t390, qJDD(2) * t271 + t274 * t276, qJDD(1) * t267 - 0.2e1 * t341, qJDD(2) * t274 - t271 * t276, 0, t271 * t309 + t274 * t295, -t271 * t295 + t274 * t309, 0.2e1 * t389 * t429 - t334, -g(1) * (-pkin(1) * t272 + pkin(7) * t275) - g(2) * (pkin(1) * t275 + pkin(7) * t272) + (pkin(7) ^ 2 * t389 + pkin(1) ^ 2) * qJDD(1), -t152 * t301 + t194 * t292, -t152 * t302 - t193 * t292 - t194 * t291 + t298 * t301, -qJDD(2) * t301 - t276 * t302, t193 * t291 + t298 * t302, -qJDD(2) * t302 + t276 * t301, 0, t160 * qJDD(2) + t182 * t302 - t193 * t258 - t255 * t298 - t468 * t260 + (-t216 * t301 + t134) * qJD(2), -t135 * qJD(2) - t161 * qJDD(2) - t255 * t152 - t182 * t301 - t194 * t258 - t216 * t292 + t259 * t468, t105 * t301 + t134 * t194 + t135 * t193 + t151 * t291 - t160 * t152 - t161 * t298 - t334 + (qJD(2) * t150 - t106) * t302, t106 * t161 + t151 * t135 + t105 * t160 + t150 * t134 - t182 * t255 + t216 * t258 - g(1) * (-t255 * t272 + t275 * t449) - g(2) * (t255 * t275 + t272 * t449) t107 * t308 - t154 * t280, -t107 * t144 + t108 * t308 + t153 * t280 - t154 * t80, -t107 * t378 + t154 * t376, -t108 * t144 + t153 * t80, -t108 * t378 - t153 * t376, 0, -t100 * t376 + t158 * t108 + t123 * t153 - t144 * t163 + t165 * t80 - t251 * t468 - t378 * t49, -t101 * t376 - t158 * t107 + t123 * t154 - t163 * t308 - t165 * t280 - t378 * t48 + t338, -t100 * t280 - t101 * t80 + t84 * t107 - t85 * t108 + t144 * t48 - t21 * t153 + t154 * t347 - t308 * t49 - t334, t21 * t101 + t85 * t48 + t347 * t100 - t84 * t49 + t123 * t165 + t158 * t163 - g(1) * (-t212 * t272 - t396) - g(2) * (-t264 * t272 + t200) t15, t479, t10, t285, -t467, t34, t100 * t64 + t39 * t108 + t49 * t126 + t13 * t486 + t7 * t153 + t154 * t476 - t73 * t427 + t55 * t79 + t335, -t73 * t426 - t100 * t63 - t40 * t108 - t12 * t486 + t49 * t128 - t6 * t153 - t448 * t79 + (t20 * t273 - t68) * t154 - t336, -t12 * t126 - t13 * t128 + t55 * t63 - t448 * t64 + t323 * t107 + (qJD(5) * t322 - t6 * t269 - t7 * t273) * t154 - t338, g(1) * t396 - g(2) * t371 + t20 * t100 + t40 * t12 + t39 * t13 + t448 * t6 + t73 * t49 + t7 * t55 + t289, t15, t10, -t479, t34, t467, t285, -t42 * t427 - t31 * t108 - t11 * t486 + t14 * t126 - t4 * t153 - t44 * t79 + t67 * t64 + (t384 * t42 + t450) * t154 + t335, t11 * t128 - t9 * t126 - t43 * t64 - t44 * t63 + t325 * t107 + (-qJD(5) * t324 - t2 * t269 + t4 * t273) * t154 - t338, t42 * t426 + t32 * t108 - t14 * t128 + t9 * t486 + t2 * t153 + t43 * t79 + t67 * t63 + (-t8 * t273 + t41) * t154 + t336, t2 * t43 + t32 * t9 + t8 * t67 + t42 * t14 + t4 * t44 + t31 * t11 - g(1) * (-t179 * pkin(5) - t178 * qJ(6) - t396) - g(2) * (pkin(5) * t181 + qJ(6) * t180 + t371) + t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t390 * t277, t271 * qJDD(1), t372, t379, qJDD(2), t271 * t294 - t454, g(3) * t271 + t274 * t294, 0, 0, t405, -t191 + t463 (t337 - t193) * qJD(2) + t288, -t405, -t298 - t382, qJDD(2), -g(3) * t260 - t156 * qJD(2) + t216 * t194 + t334 * t259 + (qJDD(2) * t431 + t193 * t388) * pkin(2) + t105, g(3) * t259 + t157 * qJD(2) - t216 * t193 + t334 * t260 + (-qJDD(2) * t430 + t194 * t388) * pkin(2) - t106 -(t151 + t156) * t194 + (-t157 + t150) * t193 + (-t152 * t431 - t298 * t430) * pkin(2), -t150 * t156 - t151 * t157 + (t430 * t106 + t431 * t105 - t454 + (-qJD(1) * t216 + t334) * t271) * pkin(2), t409, t502, t506, -t409, t488, t376, t144 * t162 + t186 * t376 - t378 * t434 + t478, t162 * t308 - t187 * t376 - t378 * t435 + t481, t186 * t280 - t187 * t80 + (-t434 - t85) * t308 + (t435 + t84) * t144, -g(3) * t391 - t158 * t162 - t186 * t347 + t21 * t187 - t215 * t334 - t434 * t84 + t435 * t85, t499, t503, t505, t126 * t348 - t62, t312, t493, t183 * t64 + (-t20 - t456) * t273 + t326 * t269 + t434 * t126 + (t305 - t46) * t486 + t482, -t183 * t63 + t326 * t273 + t434 * t128 + (t364 + t47 - t406) * t486 + t483, t47 * t126 + t46 * t128 + (t497 + (t128 * t184 - t39) * qJD(5)) * t273 + (t144 * t40 - t7 + (-t40 + t425) * qJD(5) + t318) * t269 + t344 + t475, t20 * t183 - t40 * t47 - t39 * t46 - g(1) * (t203 + t339) - g(2) * (t202 + t340) - g(3) * t342 + t434 * t73 - t322 * t169 + t286 * t184, t499, t505, -t503, t493, -t312, t500, t159 * t64 + (-t8 - t456) * t273 + (-t443 - t496) * t269 + t436 * t126 + (t305 + t36) * t486 + t485, t35 * t126 + (-t36 + t363) * t128 + (t144 * t32 + (-t32 + t425) * qJD(5) + t318) * t269 + t475 + t501, -t436 * t128 + t159 * t63 + t443 * t273 + (-t35 - t364 + (t169 - t42) * t273) * t486 + t484, t8 * t159 - t32 * t35 - t31 * t36 - g(1) * (t203 + t222) - g(2) * (t202 + t219) - g(3) * (t342 + t469) + t436 * t42 + t324 * t169 + t281 + t287 * t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298 - t382 (t337 + t193) * qJD(2) + t288, -t191 - t463, -t150 * t194 - t151 * t193 + t182 + t468, 0, 0, 0, 0, 0, 0, t350 - t383 - 0.2e1 * t487, -t280 + t471, -t414 - t415, -t85 * t144 - t308 * t84 + t123 + t468, 0, 0, 0, 0, 0, 0, -t375 + t416, -t273 * t464 + t420 - t71 (t126 * t144 + t63) * t273 + t128 * t348 + t438, t73 * t308 + t507 * t273 + (t6 - t445) * t269 + t468, 0, 0, 0, 0, 0, 0, -t269 * t464 + t416 + t72 (-t419 + t423) * t144 + t438 + t440, t313 - t420, t42 * t308 + (-t4 + t446) * t273 + (t31 * t486 + t2) * t269 + t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, t502, t506, -t409, t488, t376, t378 * t85 + t478, t378 * t84 + t481, 0, 0, t499, t503, t505, t424 * t486 - t62, t312, t493, -pkin(4) * t64 - t85 * t126 - t50 * t486 + (-t461 - t495) * t269 + (-t20 + t310) * t273 + t482, pkin(4) * t63 - pkin(9) * t432 - t85 * t128 + t486 * t51 - t491 * t73 + t483, t51 * t126 + t50 * t128 - t57 + (t497 + (pkin(9) * t128 - t39) * qJD(5)) * t273 + (t329 - t507) * t269 + t344, -t20 * pkin(4) + pkin(9) * t286 - g(1) * t339 - g(2) * t340 - g(3) * t392 - t39 * t50 - t40 * t51 - t73 * t85, t499, t505, -t503, t493, -t312, t500, t38 * t486 - t311 * t64 + (-t461 - t496) * t269 + t433 * t126 + (t310 - t8) * t273 + t485, t37 * t126 - t57 + (pkin(9) * t384 - t38) * t128 + (t329 - t446) * t269 + t501, -t311 * t63 + (-pkin(9) * t385 - t37) * t486 - t433 * t128 + (-t42 * t486 + t461) * t273 + t484, -t8 * t311 - t32 * t37 - t31 * t38 - g(1) * t222 - g(2) * t219 - g(3) * (t392 + t469) + t433 * t42 + t281 + t287 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t361, t33, -t422, -t474, t79, -t128 * t73 + t296 + t444, t126 * t73 - t283 + t445, 0, 0, t422, t33, t361, t79, t474, -t422, -t126 * t95 - t284 + t444 + 0.2e1 * t462, pkin(5) * t63 - qJ(6) * t64 + (t32 - t40) * t128 + (t31 - t394) * t126, 0.2e1 * t441 - t42 * t126 + t95 * t128 + (0.2e1 * qJD(6) - t39) * t486 + t283, t2 * qJ(6) - t4 * pkin(5) - t42 * t95 - t31 * t40 - g(1) * (-pkin(5) * t180 + qJ(6) * t181) - g(2) * (-pkin(5) * t178 + qJ(6) * t179) + t394 * t32 + t327 * t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422 - t79, t33, -t464 - t465, t284 - t446 - t462;];
tau_reg  = t1;
