% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRP5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP5_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:51:41
% EndTime: 2019-03-09 16:52:12
% DurationCPUTime: 17.78s
% Computational Cost: add. (19236->795), mult. (43619->977), div. (0->0), fcn. (31720->14), ass. (0->369)
t318 = sin(qJ(5));
t319 = sin(qJ(3));
t320 = sin(qJ(2));
t438 = qJD(1) * t320;
t420 = t319 * t438;
t322 = cos(qJ(3));
t427 = t322 * qJD(2);
t250 = t420 - t427;
t419 = t322 * t438;
t436 = qJD(2) * t319;
t252 = t419 + t436;
t315 = sin(pkin(10));
t316 = cos(pkin(10));
t401 = t250 * t316 + t315 * t252;
t513 = cos(qJ(5));
t368 = t513 * t401;
t380 = -t250 * t315 + t316 * t252;
t104 = t318 * t380 + t368;
t481 = t104 ^ 2;
t534 = -t318 * t401 + t380 * t513;
t546 = t534 ^ 2;
t414 = -t546 + t481;
t271 = -qJD(2) * pkin(2) + pkin(7) * t438;
t173 = t250 * pkin(3) + qJD(4) + t271;
t114 = pkin(4) * t401 + t173;
t42 = t104 * pkin(5) - qJ(6) * t534 + t114;
t551 = t104 * t42;
t323 = cos(qJ(2));
t426 = qJD(1) * qJD(2);
t411 = t323 * t426;
t425 = t320 * qJDD(1);
t432 = qJD(3) * t320;
t531 = qJD(1) * t432 - qJDD(2);
t149 = -qJD(3) * t427 + (-t411 - t425) * t322 + t531 * t319;
t437 = qJD(1) * t323;
t150 = t319 * (qJD(2) * (qJD(3) + t437) + t425) + t531 * t322;
t403 = -t315 * t149 + t316 * t150;
t429 = qJD(5) * t318;
t94 = -t149 * t316 - t150 * t315;
t33 = qJD(5) * t368 + t318 * t403 + t380 * t429 - t513 * t94;
t284 = -qJD(3) + t437;
t274 = -qJD(5) + t284;
t480 = t104 * t274;
t550 = -t33 - t480;
t549 = t104 * t114;
t548 = t104 * t534;
t59 = pkin(5) * t534 + qJ(6) * t104;
t294 = pkin(7) * t425;
t220 = -qJDD(2) * pkin(2) + pkin(7) * t411 + t294;
t310 = g(3) * t323;
t321 = sin(qJ(1));
t324 = cos(qJ(1));
t393 = g(1) * t324 + g(2) * t321;
t347 = t393 * t320 - t310;
t339 = -t220 + t347;
t547 = pkin(8) * qJD(3) * t284 + t339;
t34 = qJD(5) * t534 + t318 * t94 + t513 * t403;
t483 = t534 * t274;
t544 = t34 + t483;
t542 = t114 * t534;
t242 = t315 * t322 + t316 * t319;
t188 = t242 * t437;
t360 = qJD(3) * t242;
t535 = -t188 + t360;
t376 = t315 * t319 - t316 * t322;
t189 = t376 * t437;
t522 = qJD(3) * t376;
t526 = t189 - t522;
t303 = t323 * qJDD(1);
t524 = -t320 * t426 + t303;
t241 = qJDD(3) - t524;
t234 = qJDD(5) + t241;
t224 = t234 * pkin(5);
t521 = qJDD(6) - t224;
t541 = t42 * t534 + t521;
t312 = qJ(3) + pkin(10);
t304 = qJ(5) + t312;
t289 = sin(t304);
t501 = qJ(4) + pkin(8);
t266 = t501 * t319;
t267 = t501 * t322;
t171 = -t316 * t266 - t267 * t315;
t141 = -pkin(9) * t242 + t171;
t172 = -t315 * t266 + t316 * t267;
t142 = -pkin(9) * t376 + t172;
t87 = t318 * t141 + t142 * t513;
t540 = -t234 * t87 - t289 * t347;
t539 = pkin(9) * t401;
t536 = t401 * t380;
t351 = t513 * t376;
t447 = t242 * t429 - (-qJD(3) - qJD(5)) * t351 - t189 * t513 + t535 * t318;
t421 = t513 * t242;
t155 = -t318 * t376 + t421;
t446 = qJD(3) * t421 + qJD(5) * t155 - t188 * t513 + t318 * t526;
t296 = pkin(7) * t437;
t511 = pkin(3) * t319;
t240 = t437 * t511 + t296;
t433 = qJD(3) * t319;
t533 = pkin(3) * t433 - t240;
t431 = qJD(3) * t322;
t434 = qJD(2) * t323;
t532 = t319 * t434 + t320 * t431;
t530 = pkin(9) * t380;
t408 = qJD(3) * t501;
t430 = qJD(4) * t322;
t216 = -t319 * t408 + t430;
t217 = -qJD(4) * t319 - t322 * t408;
t138 = t316 * t216 + t315 * t217;
t115 = -pkin(9) * t360 + t138;
t137 = -t315 * t216 + t316 * t217;
t334 = pkin(9) * t522 + t137;
t396 = pkin(2) * t320 - pkin(8) * t323;
t254 = t396 * qJD(1);
t175 = pkin(7) * t420 + t322 * t254;
t451 = t322 * t323;
t375 = pkin(3) * t320 - qJ(4) * t451;
t144 = qJD(1) * t375 + t175;
t230 = t319 * t254;
t455 = t320 * t322;
t458 = t319 * t323;
t159 = t230 + (-pkin(7) * t455 - qJ(4) * t458) * qJD(1);
t97 = t316 * t144 - t159 * t315;
t76 = pkin(4) * t438 + pkin(9) * t189 + t97;
t98 = t315 * t144 + t316 * t159;
t78 = -pkin(9) * t188 + t98;
t497 = qJD(5) * t87 + (-t334 + t76) * t513 + (t115 - t78) * t318;
t489 = t138 - t98;
t291 = pkin(3) * t316 + pkin(4);
t397 = pkin(2) * t323 + pkin(8) * t320;
t264 = -pkin(1) - t397;
t235 = t264 * qJD(1);
t272 = qJD(2) * pkin(8) + t296;
t167 = t235 * t319 + t272 * t322;
t129 = -qJ(4) * t250 + t167;
t125 = t316 * t129;
t166 = t322 * t235 - t272 * t319;
t128 = -qJ(4) * t252 + t166;
t79 = -t128 * t315 - t125;
t355 = t79 + t539;
t413 = qJD(5) * t513;
t512 = pkin(3) * t315;
t424 = t318 * t512;
t123 = t315 * t129;
t80 = t316 * t128 - t123;
t71 = t80 - t530;
t487 = -qJD(5) * t424 + t291 * t413 - t318 * t355 - t513 * t71;
t255 = t396 * qJD(2);
t168 = qJD(1) * t255 + qJDD(1) * t264;
t219 = pkin(7) * t524 + qJDD(2) * pkin(8);
t89 = t319 * t168 + t322 * t219 + t235 * t431 - t272 * t433;
t529 = t166 * t284 + t89;
t445 = pkin(4) * t535 + t533;
t218 = t234 * qJ(6);
t263 = t274 * qJD(6);
t525 = t218 - t263;
t213 = t318 * t291 + t513 * t512;
t286 = pkin(7) * t451;
t191 = t319 * t264 + t286;
t452 = t321 * t323;
t226 = t319 * t452 + t322 * t324;
t450 = t323 * t324;
t228 = -t319 * t450 + t321 * t322;
t523 = -g(1) * t228 + g(2) * t226;
t520 = t34 * pkin(5) + t33 * qJ(6) - qJD(6) * t534;
t154 = t242 * t318 + t351;
t519 = t104 * t438 - t154 * t234 + t274 * t446;
t136 = t242 * t432 + t376 * t434;
t435 = qJD(2) * t320;
t443 = t319 * t255 + t264 * t431;
t109 = (-pkin(7) * qJD(2) - qJ(4) * qJD(3)) * t455 + (-qJD(4) * t320 + (-pkin(7) * qJD(3) - qJ(4) * qJD(2)) * t323) * t319 + t443;
t510 = pkin(7) * t319;
t442 = t322 * t255 + t435 * t510;
t99 = -t320 * t430 + t375 * qJD(2) + (-t286 + (qJ(4) * t320 - t264) * t319) * qJD(3) + t442;
t56 = -t109 * t315 + t316 * t99;
t44 = pkin(4) * t435 + pkin(9) * t136 + t56;
t361 = qJD(2) * t242;
t350 = t323 * t361;
t330 = t320 * t522 - t350;
t57 = t316 * t109 + t315 * t99;
t47 = pkin(9) * t330 + t57;
t244 = t322 * t264;
t162 = -qJ(4) * t455 + t244 + (-pkin(3) - t510) * t323;
t459 = t319 * t320;
t170 = -qJ(4) * t459 + t191;
t110 = t316 * t162 - t170 * t315;
t207 = t376 * t320;
t83 = -pkin(4) * t323 + pkin(9) * t207 + t110;
t111 = t315 * t162 + t316 * t170;
t362 = t242 * t320;
t88 = -pkin(9) * t362 + t111;
t495 = t318 * t83 + t513 * t88;
t9 = -qJD(5) * t495 - t318 * t47 + t44 * t513;
t517 = t104 * t447 + t154 * t33 - t155 * t34 - t446 * t534;
t516 = -0.2e1 * pkin(1);
t508 = g(1) * t321;
t504 = g(2) * t324;
t503 = g(3) * t320;
t502 = t322 * pkin(3);
t40 = t318 * t76 + t513 * t78;
t35 = qJ(6) * t438 + t40;
t37 = t115 * t513 + t141 * t413 - t142 * t429 + t318 * t334;
t500 = t37 - t35;
t499 = t37 - t40;
t498 = pkin(5) * t438 + t497;
t496 = t446 * pkin(5) + qJ(6) * t447 - t155 * qJD(6) + t445;
t161 = t322 * t168;
t90 = -qJD(3) * t167 - t219 * t319 + t161;
t58 = pkin(3) * t241 + qJ(4) * t149 - qJD(4) * t252 + t90;
t66 = -qJ(4) * t150 - qJD(4) * t250 + t89;
t26 = t315 * t58 + t316 * t66;
t119 = -pkin(3) * t284 + t128;
t74 = t316 * t119 - t123;
t60 = -pkin(4) * t284 - t530 + t74;
t75 = t315 * t119 + t125;
t64 = t75 - t539;
t28 = t318 * t60 + t513 * t64;
t493 = t274 * t28;
t491 = t94 * t242;
t490 = t137 - t97;
t488 = qJD(6) + t487;
t486 = qJD(5) * t213 - t318 * t71 + t355 * t513;
t485 = pkin(7) * qJDD(1);
t118 = t150 * pkin(3) + qJDD(4) + t220;
t476 = t118 * t242;
t475 = t149 * t319;
t474 = t150 * t322;
t473 = t380 * t284;
t472 = t401 * t284;
t471 = t380 ^ 2;
t469 = t167 * t284;
t468 = t242 * t241;
t467 = t250 * t284;
t465 = t250 * t319;
t464 = t252 * t250;
t463 = t252 * t284;
t462 = t252 * t322;
t461 = t289 * t320;
t290 = cos(t304);
t460 = t290 * t320;
t457 = t319 * t324;
t456 = t320 * t321;
t454 = t320 * t324;
t453 = t321 * t290;
t300 = cos(t312);
t258 = pkin(4) * t300 + t502;
t253 = pkin(2) + t258;
t225 = t323 * t253;
t299 = sin(t312);
t257 = pkin(4) * t299 + t511;
t239 = t324 * t257;
t449 = t324 * t289;
t27 = -t318 * t64 + t513 * t60;
t448 = qJD(6) - t27;
t444 = -t323 * t239 + t321 * t258;
t256 = pkin(3) * t459 + t320 * pkin(7);
t441 = t324 * pkin(1) + t321 * pkin(7);
t313 = t320 ^ 2;
t314 = t323 ^ 2;
t440 = t313 - t314;
t439 = t313 + t314;
t326 = qJD(1) ^ 2;
t422 = t320 * t326 * t323;
t181 = pkin(3) * t532 + pkin(7) * t434;
t293 = pkin(2) + t502;
t416 = t274 * t438;
t415 = t284 * t438;
t25 = -t315 * t66 + t316 * t58;
t407 = t486 * t534;
t15 = pkin(4) * t241 - pkin(9) * t94 + t25;
t19 = -pkin(9) * t403 + t26;
t3 = t318 * t15 + t513 * t19 + t60 * t413 - t64 * t429;
t406 = -t513 * t15 + t318 * t19 + t64 * t413 + t60 * t429;
t182 = t289 * t452 + t290 * t324;
t183 = t290 * t452 - t449;
t405 = -t182 * pkin(5) + qJ(6) * t183;
t184 = t323 * t449 - t453;
t185 = t289 * t321 + t290 * t450;
t404 = -t184 * pkin(5) + qJ(6) * t185;
t402 = -t257 * t452 - t258 * t324;
t399 = t320 * t411;
t287 = g(1) * t456;
t398 = -g(2) * t454 + t287;
t120 = pkin(3) * t252 + pkin(4) * t380;
t395 = g(1) * t182 - g(2) * t184;
t394 = g(1) * t183 - g(2) * t185;
t392 = t403 * pkin(4);
t391 = pkin(5) * t290 + qJ(6) * t289;
t390 = pkin(7) * t250 + t271 * t319;
t389 = pkin(7) * t252 + t271 * t322;
t348 = t320 * t421;
t134 = -t207 * t318 + t348;
t135 = -t207 * t513 - t318 * t362;
t70 = qJD(5) * t135 - t318 * t136 - t330 * t513;
t388 = t104 * t70 + t134 * t34;
t386 = -pkin(8) * t241 + qJD(3) * t271;
t385 = t401 ^ 2;
t384 = t242 * t403;
t383 = -t481 - t546;
t381 = -t166 * t322 - t167 * t319;
t378 = t293 * t323 + t320 * t501;
t50 = -t318 * t88 + t513 * t83;
t369 = -pkin(7) * qJDD(2) + t426 * t516;
t8 = t318 * t44 + t83 * t413 - t429 * t88 + t513 * t47;
t366 = t241 * t319 - t284 * t431;
t365 = t241 * t322 + t284 * t433;
t364 = t104 * t446 + t154 * t34;
t363 = t173 * t242;
t357 = pkin(1) * t326 + t393;
t212 = t291 * t513 - t424;
t325 = qJD(2) ^ 2;
t356 = pkin(7) * t325 + qJDD(1) * t516 + t504;
t311 = -pkin(9) - t501;
t354 = t253 * t450 + t321 * t257 - t311 * t454 + t441;
t86 = -t141 * t513 + t142 * t318;
t353 = g(2) * t320 * t453 - t234 * t86 + (g(1) * t454 - t310) * t290;
t308 = t324 * pkin(7);
t349 = t239 + t311 * t456 + t308 + (-pkin(1) - t225) * t321;
t345 = -t323 * t393 - t503;
t344 = t33 - t480;
t343 = g(1) * t185 + g(2) * t183 + g(3) * t460 - t3;
t342 = g(1) * t184 + g(2) * t182 + g(3) * t461 - t406;
t69 = qJD(5) * t348 + t136 * t513 - t207 * t429 - t318 * t330;
t341 = t104 * t69 + t134 * t33 - t135 * t34 - t534 * t70;
t340 = t401 * t242;
t192 = pkin(4) * t376 - t293;
t163 = pkin(4) * t362 + t256;
t338 = t104 * t435 + t134 * t234 - t274 * t70 - t323 * t34;
t337 = -t27 * t274 + t343;
t336 = -t37 * t104 - t33 * t86 - t87 * t34 + t345;
t335 = t274 * t486 + t342;
t67 = t392 + t118;
t333 = -t342 + t541;
t331 = t118 - t347;
t329 = t34 - t483;
t328 = t392 + t331;
t112 = -pkin(4) * t330 + t181;
t260 = qJ(6) * t460;
t229 = t319 * t321 + t322 * t450;
t227 = -t321 * t451 + t457;
t208 = -pkin(5) - t212;
t206 = qJ(6) + t213;
t201 = t299 * t321 + t300 * t450;
t200 = -t299 * t450 + t300 * t321;
t199 = t299 * t324 - t300 * t452;
t198 = t299 * t452 + t300 * t324;
t190 = -pkin(7) * t458 + t244;
t176 = -pkin(7) * t419 + t230;
t169 = -t241 * t323 - t284 * t435;
t164 = -t234 * t323 - t274 * t435;
t127 = -qJD(3) * t191 + t442;
t126 = (-t320 * t427 - t323 * t433) * pkin(7) + t443;
t84 = t154 * pkin(5) - t155 * qJ(6) + t192;
t72 = t134 * pkin(5) - t135 * qJ(6) + t163;
t49 = t323 * pkin(5) - t50;
t48 = -qJ(6) * t323 + t495;
t46 = t120 + t59;
t32 = t155 * t234 + t274 * t447 - t438 * t534;
t24 = -t274 * qJ(6) + t28;
t23 = t274 * pkin(5) + t448;
t16 = t70 * pkin(5) + t69 * qJ(6) - t135 * qJD(6) + t112;
t12 = -t135 * t33 - t534 * t69;
t11 = t135 * t234 + t274 * t69 + t323 * t33 + t435 * t534;
t10 = -t155 * t33 - t447 * t534;
t7 = -pkin(5) * t435 - t9;
t6 = qJ(6) * t435 - qJD(6) * t323 + t8;
t5 = t67 + t520;
t2 = t406 + t521;
t1 = t3 + t525;
t4 = [0, 0, 0, 0, 0, qJDD(1), -t504 + t508, t393, 0, 0, qJDD(1) * t313 + 0.2e1 * t399, 0.2e1 * t303 * t320 - 0.2e1 * t426 * t440, qJDD(2) * t320 + t323 * t325, qJDD(1) * t314 - 0.2e1 * t399, qJDD(2) * t323 - t320 * t325, 0, t369 * t320 + (-t356 + t508) * t323, t320 * t356 + t323 * t369 - t287, 0.2e1 * t439 * t485 - t393, -g(1) * (-pkin(1) * t321 + t308) - g(2) * t441 + (pkin(7) ^ 2 * t439 + pkin(1) ^ 2) * qJDD(1), -t149 * t455 + (-t319 * t432 + t323 * t427) * t252 (-t250 * t322 - t252 * t319) * t434 + (t475 - t474 + (-t462 + t465) * qJD(3)) * t320 (-t284 * t427 + t149) * t323 + (qJD(2) * t252 + t365) * t320, t150 * t459 + t250 * t532 (t284 * t436 + t150) * t323 + (-qJD(2) * t250 - t366) * t320, t169, -g(1) * t227 - g(2) * t229 - t127 * t284 + t190 * t241 + (qJD(2) * t390 - t90) * t323 + (pkin(7) * t150 + qJD(2) * t166 + t220 * t319 + t271 * t431) * t320, -g(1) * t226 - g(2) * t228 + t126 * t284 - t191 * t241 + (qJD(2) * t389 + t89) * t323 + (-pkin(7) * t149 - qJD(2) * t167 + t220 * t322 - t271 * t433) * t320, -t126 * t250 - t127 * t252 + t149 * t190 - t150 * t191 + t287 + t381 * t434 + (-t504 - t319 * t89 - t322 * t90 + (t166 * t319 - t167 * t322) * qJD(3)) * t320, t89 * t191 + t167 * t126 + t90 * t190 + t166 * t127 - g(1) * t308 - g(2) * (t324 * t397 + t441) - t264 * t508 + (t220 * t320 + t271 * t434) * pkin(7), -t136 * t380 - t207 * t94, t136 * t401 + t207 * t403 - t380 * t350 + (t380 * t522 - t491) * t320, t136 * t284 - t207 * t241 - t323 * t94 + t380 * t435, t340 * t434 + (-t401 * t522 + t384) * t320 (t284 * t361 + t403) * t323 + (-qJD(2) * t401 - t284 * t522 - t468) * t320, t169, -t56 * t284 + t110 * t241 + t181 * t401 + t256 * t403 - g(1) * t199 - g(2) * t201 + (qJD(2) * t363 - t25) * t323 + (t74 * qJD(2) - t173 * t522 + t476) * t320, -g(1) * t198 - g(2) * t200 - t111 * t241 - t118 * t207 - t136 * t173 + t181 * t380 + t256 * t94 + t26 * t323 + t284 * t57 - t435 * t75, -t57 * t401 - t111 * t403 - t56 * t380 - t110 * t94 + t25 * t207 + t74 * t136 + t287 - t75 * t350 + (-t242 * t26 + t522 * t75 - t504) * t320, t26 * t111 + t75 * t57 + t25 * t110 + t74 * t56 + t118 * t256 + t173 * t181 - g(1) * (pkin(3) * t457 + t308) - g(2) * (t293 * t450 + t454 * t501 + t441) + (-g(1) * (-pkin(1) - t378) - g(2) * t511) * t321, t12, t341, t11, t388, -t338, t164, t104 * t112 + t114 * t70 + t134 * t67 + t163 * t34 + t234 * t50 + t27 * t435 - t274 * t9 + t323 * t406 + t394, t112 * t534 - t114 * t69 + t135 * t67 - t163 * t33 - t234 * t495 + t274 * t8 - t28 * t435 + t3 * t323 - t395, -t104 * t8 - t134 * t3 + t135 * t406 + t27 * t69 - t28 * t70 + t33 * t50 - t34 * t495 - t534 * t9 + t398, -g(1) * t349 - g(2) * t354 + t114 * t112 + t67 * t163 + t27 * t9 + t28 * t8 + t3 * t495 - t406 * t50, t12, t11, -t341, t164, t338, t388, t104 * t16 + t134 * t5 + t2 * t323 - t23 * t435 - t234 * t49 + t274 * t7 + t34 * t72 + t42 * t70 + t394, -t1 * t134 - t104 * t6 + t135 * t2 - t23 * t69 - t24 * t70 - t33 * t49 - t34 * t48 + t534 * t7 + t398, -t1 * t323 - t135 * t5 - t16 * t534 + t234 * t48 + t24 * t435 - t274 * t6 + t33 * t72 + t42 * t69 + t395, t1 * t48 + t24 * t6 + t5 * t72 + t42 * t16 + t2 * t49 + t23 * t7 - g(1) * (-pkin(5) * t183 - qJ(6) * t182 + t349) - g(2) * (pkin(5) * t185 + qJ(6) * t184 + t354); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t422, t440 * t326, t425, t422, t303, qJDD(2), t320 * t357 - t294 - t310, t503 + (t357 - t485) * t323, 0, 0, -t284 * t462 - t475 (-t149 + t467) * t322 + (-t150 + t463) * t319 (-t252 * t320 + t284 * t451) * qJD(1) + t366, -t284 * t465 - t474 (t250 * t320 - t284 * t458) * qJD(1) + t365, t415, -pkin(2) * t150 + t175 * t284 + t386 * t319 + (-t166 * t320 - t323 * t390) * qJD(1) + t547 * t322, pkin(2) * t149 - t176 * t284 + t386 * t322 + (t167 * t320 - t323 * t389) * qJD(1) - t547 * t319, t175 * t252 + t176 * t250 + ((qJD(3) * t252 - t150) * pkin(8) + t529) * t322 + (-t90 + t469 + (qJD(3) * t250 - t149) * pkin(8)) * t319 + t345, -t271 * t296 - t166 * t175 - t167 * t176 + t339 * pkin(2) + (qJD(3) * t381 - t90 * t319 + t89 * t322 + t345) * pkin(8), t380 * t526 + t491, -t384 - t94 * t376 - t189 * t401 + t380 * t188 + (-t242 * t380 + t376 * t401) * qJD(3), -t284 * t526 - t380 * t438 + t468, qJD(3) * t340 - t188 * t401 + t376 * t403, -t241 * t376 + t284 * t535 + t401 * t438, t415, t171 * t241 - t293 * t403 + t118 * t376 - t74 * t438 - t240 * t401 - t173 * t188 - t490 * t284 + t347 * t300 + (t401 * t511 + t363) * qJD(3), t75 * t438 + t476 - t240 * t380 - t172 * t241 + t173 * t189 - t293 * t94 + t489 * t284 - t347 * t299 + (-t173 * t376 + t380 * t511) * qJD(3), -t172 * t403 - t26 * t376 - t171 * t94 - t25 * t242 + t75 * t188 - t74 * t189 - t490 * t380 + (-t242 * t75 + t376 * t74) * qJD(3) + t345 - t489 * t401, t26 * t172 + t25 * t171 - t118 * t293 - g(3) * t378 + t489 * t75 + t490 * t74 + t533 * t173 + t393 * (t293 * t320 - t323 * t501) t10, t517, t32, t364, t519, t416, t104 * t445 + t114 * t446 + t154 * t67 + t192 * t34 - t27 * t438 + t274 * t497 + t353, -t114 * t447 + t155 * t67 - t192 * t33 + t274 * t499 + t28 * t438 + t445 * t534 + t540, t104 * t40 - t154 * t3 + t155 * t406 + t27 * t447 - t28 * t446 + t497 * t534 + t336, t3 * t87 + t406 * t86 + t67 * t192 - g(3) * (-t311 * t320 + t225) + t499 * t28 - t497 * t27 + t445 * t114 + t393 * (t253 * t320 + t311 * t323) t10, t32, -t517, t416, -t519, t364, t104 * t496 + t154 * t5 + t23 * t438 + t274 * t498 + t34 * t84 + t42 * t446 + t353, -t1 * t154 + t104 * t35 + t155 * t2 - t23 * t447 - t24 * t446 + t498 * t534 + t336, -t155 * t5 - t24 * t438 - t274 * t500 + t33 * t84 + t42 * t447 - t496 * t534 - t540, -g(3) * t225 + t1 * t87 + t2 * t86 + t5 * t84 + t496 * t42 + t500 * t24 + t498 * t23 + (-g(3) * t391 + t311 * t393) * t323 + (g(3) * t311 + t393 * (t253 + t391)) * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464, -t250 ^ 2 + t252 ^ 2, -t149 - t467, -t464, -t150 - t463, t241, -t272 * t431 - t469 - t252 * t271 + t161 + (-qJD(3) * t235 - t219 + t503) * t319 + t523, g(1) * t229 - g(2) * t227 + g(3) * t455 + t250 * t271 - t529, 0, 0, t536, -t385 + t471, t94 - t472, -t536, -t403 - t473, t241, t299 * t503 - g(1) * t200 + g(2) * t198 - t173 * t380 + t79 * t284 + (t316 * t241 - t252 * t401) * pkin(3) + t25, t300 * t503 + g(1) * t201 - g(2) * t199 + t401 * t173 - t284 * t80 + (-t241 * t315 - t252 * t380) * pkin(3) - t26 (-t315 * t403 - t94 * t316) * pkin(3) + (t75 + t79) * t380 + (t80 - t74) * t401, -t74 * t79 - t75 * t80 + (g(3) * t459 - t173 * t252 + t25 * t316 + t26 * t315 + t523) * pkin(3), t548, -t414, t550, -t548, -t544, t234, -t104 * t120 + t212 * t234 + t335 - t542, -t120 * t534 - t213 * t234 + t274 * t487 + t343 + t549, t212 * t33 - t213 * t34 + t28 * t534 + t407 + (-t27 - t487) * t104, -g(1) * t444 - g(2) * t402 - t114 * t120 - t212 * t406 + t3 * t213 + t257 * t503 - t27 * t486 + t28 * t487, t548, t550, t414, t234, t544, -t548, -t104 * t46 - t208 * t234 + t335 - t541, -t206 * t34 - t208 * t33 + t24 * t534 + t407 + (t23 - t488) * t104, t206 * t234 - t274 * t488 + t46 * t534 - t343 + t525 - t551, t1 * t206 + t2 * t208 - t42 * t46 - g(1) * (t404 + t444) - g(2) * (t402 + t405) - g(3) * (t260 + (-pkin(5) * t289 - t257) * t320) + t488 * t24 + t486 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403 - t473, t94 + t472, -t385 - t471, t380 * t74 + t401 * t75 + t331, 0, 0, 0, 0, 0, 0, t329, -t344, t383, t104 * t28 + t27 * t534 + t328, 0, 0, 0, 0, 0, 0, t329, t383, t344, t104 * t24 - t23 * t534 + t328 + t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t548, -t414, t550, -t548, -t544, t234, t342 - t493 - t542, t337 + t549, 0, 0, t548, t550, t414, t234, t544, -t548, -t104 * t59 + t224 - t333 - t493, pkin(5) * t33 - qJ(6) * t34 + (t24 - t28) * t534 + (t23 - t448) * t104, t534 * t59 + 0.2e1 * t218 - 0.2e1 * t263 - t337 - t551, t1 * qJ(6) - t2 * pkin(5) - t42 * t59 - t23 * t28 - g(1) * t404 - g(2) * t405 - g(3) * (-pkin(5) * t461 + t260) + t448 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234 + t548, t550, -t274 ^ 2 - t546, t24 * t274 + t333;];
tau_reg  = t4;
