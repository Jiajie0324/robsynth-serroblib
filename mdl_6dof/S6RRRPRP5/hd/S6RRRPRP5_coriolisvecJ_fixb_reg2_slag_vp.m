% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:51:34
% EndTime: 2019-03-09 16:51:58
% DurationCPUTime: 10.96s
% Computational Cost: add. (15807->621), mult. (39144->796), div. (0->0), fcn. (28203->8), ass. (0->293)
t263 = sin(qJ(5));
t264 = sin(qJ(3));
t265 = sin(qJ(2));
t353 = qJD(1) * t265;
t335 = t264 * t353;
t266 = cos(qJ(3));
t344 = t266 * qJD(2);
t220 = t335 - t344;
t334 = t266 * t353;
t350 = qJD(2) * t264;
t222 = t334 + t350;
t261 = sin(pkin(10));
t262 = cos(pkin(10));
t154 = -t262 * t220 - t222 * t261;
t412 = cos(qJ(5));
t292 = t154 * t412;
t300 = -t220 * t261 + t222 * t262;
t100 = -t263 * t300 + t292;
t399 = t100 ^ 2;
t427 = t154 * t263 + t300 * t412;
t437 = t427 ^ 2;
t442 = t437 - t399;
t253 = pkin(7) * t353;
t400 = qJD(2) * pkin(2);
t233 = t253 - t400;
t166 = t220 * pkin(3) + qJD(4) + t233;
t110 = -pkin(4) * t154 + t166;
t40 = -pkin(5) * t100 - qJ(6) * t427 + t110;
t441 = t100 * t40;
t267 = cos(qJ(2));
t352 = qJD(1) * t267;
t246 = -qJD(3) + t352;
t236 = -qJD(5) + t246;
t385 = t100 * t236;
t342 = qJD(1) * qJD(2);
t327 = t267 * t342;
t347 = qJD(3) * t264;
t332 = t265 * t347;
t341 = qJD(2) * qJD(3);
t168 = qJD(1) * t332 + (-t327 - t341) * t266;
t346 = qJD(3) * t266;
t331 = t265 * t346;
t348 = qJD(2) * t267;
t282 = t264 * t348 + t331;
t169 = qJD(1) * t282 + t264 * t341;
t117 = -t168 * t262 - t169 * t261;
t317 = -t168 * t261 + t169 * t262;
t345 = qJD(5) * t263;
t46 = -qJD(5) * t292 - t117 * t412 + t263 * t317 + t300 * t345;
t440 = -t46 + t385;
t439 = t100 * t110;
t438 = t427 * t100;
t56 = pkin(5) * t427 - qJ(6) * t100;
t398 = t40 * t427;
t395 = t427 * t236;
t47 = qJD(5) * t427 + t263 * t117 + t317 * t412;
t434 = t47 + t395;
t433 = t110 * t427;
t214 = t261 * t266 + t262 * t264;
t178 = t214 * t352;
t418 = t214 * qJD(3);
t428 = -t178 + t418;
t299 = t261 * t264 - t262 * t266;
t179 = t299 * t352;
t417 = t299 * qJD(3);
t426 = t179 - t417;
t432 = pkin(9) * t154;
t429 = t300 * t154;
t336 = t412 * t214;
t151 = -t263 * t299 + t336;
t394 = -qJD(3) * t336 - qJD(5) * t151 + t178 * t412 - t263 * t426;
t279 = t412 * t299;
t393 = -t179 * t412 + t214 * t345 - (-qJD(3) - qJD(5)) * t279 + t428 * t263;
t254 = pkin(7) * t352;
t410 = pkin(3) * t264;
t213 = t352 * t410 + t254;
t425 = pkin(3) * t347 - t213;
t424 = -0.2e1 * t342;
t423 = pkin(9) * t300;
t407 = -qJ(4) - pkin(8);
t325 = qJD(3) * t407;
t343 = t266 * qJD(4);
t201 = t264 * t325 + t343;
t202 = -t264 * qJD(4) + t266 * t325;
t137 = t201 * t262 + t202 * t261;
t114 = -pkin(9) * t418 + t137;
t136 = -t261 * t201 + t262 * t202;
t273 = pkin(9) * t417 + t136;
t309 = pkin(2) * t265 - pkin(8) * t267;
t223 = t309 * qJD(1);
t170 = pkin(7) * t335 + t223 * t266;
t362 = t266 * t267;
t297 = pkin(3) * t265 - qJ(4) * t362;
t142 = qJD(1) * t297 + t170;
t206 = t264 * t223;
t363 = t265 * t266;
t364 = t264 * t267;
t156 = t206 + (-pkin(7) * t363 - qJ(4) * t364) * qJD(1);
t91 = t142 * t262 - t156 * t261;
t73 = pkin(4) * t353 + pkin(9) * t179 + t91;
t92 = t142 * t261 + t156 * t262;
t77 = -pkin(9) * t178 + t92;
t230 = t407 * t264;
t231 = t407 * t266;
t164 = t230 * t262 + t231 * t261;
t140 = -pkin(9) * t214 + t164;
t165 = t230 * t261 - t231 * t262;
t141 = -pkin(9) * t299 + t165;
t87 = t140 * t263 + t141 * t412;
t403 = qJD(5) * t87 + (-t273 + t73) * t412 + (t114 - t77) * t263;
t391 = t137 - t92;
t249 = pkin(3) * t262 + pkin(4);
t228 = -pkin(2) * t267 - pkin(8) * t265 - pkin(1);
t210 = t228 * qJD(1);
t234 = qJD(2) * pkin(8) + t254;
t161 = t210 * t264 + t234 * t266;
t128 = -qJ(4) * t220 + t161;
t124 = t262 * t128;
t160 = t210 * t266 - t234 * t264;
t127 = -qJ(4) * t222 + t160;
t78 = -t127 * t261 - t124;
t281 = t78 - t432;
t328 = qJD(5) * t412;
t411 = pkin(3) * t261;
t339 = t263 * t411;
t122 = t261 * t128;
t79 = t127 * t262 - t122;
t65 = t79 - t423;
t389 = -qJD(5) * t339 + t249 * t328 - t263 * t281 - t412 * t65;
t224 = t309 * qJD(2);
t211 = qJD(1) * t224;
t251 = t265 * t342;
t312 = pkin(7) * t251;
t108 = t210 * t346 + t211 * t264 - t234 * t347 - t266 * t312;
t420 = t160 * t246 + t108;
t109 = -qJD(3) * t161 + t211 * t266 + t264 * t312;
t419 = t161 * t246 - t109;
t357 = pkin(4) * t428 + t425;
t200 = t249 * t263 + t411 * t412;
t248 = pkin(7) * t362;
t182 = t228 * t264 + t248;
t193 = t299 * t265;
t277 = t265 * t336;
t133 = -t193 * t263 + t277;
t349 = qJD(2) * t265;
t289 = t214 * t265;
t134 = -t193 * t412 - t263 * t289;
t135 = t265 * t418 + t299 * t348;
t351 = qJD(2) * t214;
t278 = t267 * t351;
t271 = t265 * t417 - t278;
t64 = qJD(5) * t134 - t135 * t263 - t271 * t412;
t416 = -t236 * t64 - t267 * t47 + (qJD(1) * t133 - t100) * t349;
t216 = t266 * t228;
t409 = pkin(7) * t264;
t157 = -qJ(4) * t363 + t216 + (-pkin(3) - t409) * t267;
t365 = t264 * t265;
t162 = -qJ(4) * t365 + t182;
t104 = t157 * t262 - t162 * t261;
t82 = -pkin(4) * t267 + pkin(9) * t193 + t104;
t105 = t157 * t261 + t162 * t262;
t88 = -pkin(9) * t289 + t105;
t401 = t263 * t82 + t412 * t88;
t356 = t224 * t264 + t228 * t346;
t103 = (-pkin(7) * qJD(2) - qJ(4) * qJD(3)) * t363 + (-qJD(4) * t265 + (-pkin(7) * qJD(3) - qJ(4) * qJD(2)) * t267) * t264 + t356;
t355 = t224 * t266 + t349 * t409;
t93 = -t265 * t343 + t297 * qJD(2) + (-t248 + (qJ(4) * t265 - t228) * t264) * qJD(3) + t355;
t54 = -t103 * t261 + t262 * t93;
t42 = pkin(4) * t349 + pkin(9) * t135 + t54;
t55 = t103 * t262 + t261 * t93;
t45 = pkin(9) * t271 + t55;
t8 = -qJD(5) * t401 - t263 * t45 + t412 * t42;
t150 = t214 * t263 + t279;
t415 = t236 * t394 + (qJD(2) * t150 + t100) * t353;
t414 = -t100 * t393 + t150 * t46 - t151 * t47 + t394 * t427;
t38 = t263 * t73 + t412 * t77;
t31 = qJ(6) * t353 + t38;
t35 = t114 * t412 + t140 * t328 - t141 * t345 + t263 * t273;
t406 = t31 - t35;
t405 = pkin(5) * t353 + t403;
t404 = t35 - t38;
t402 = -pkin(5) * t394 + qJ(6) * t393 - t151 * qJD(6) + t357;
t70 = pkin(3) * t251 + qJ(4) * t168 - qJD(4) * t222 + t109;
t76 = -qJ(4) * t169 - qJD(4) * t220 + t108;
t34 = t261 * t70 + t262 * t76;
t392 = t136 - t91;
t390 = qJD(6) + t389;
t388 = qJD(5) * t200 - t263 * t65 + t281 * t412;
t86 = -t140 * t412 + t141 * t263;
t387 = qJD(2) * t86;
t386 = qJD(2) * t87;
t382 = t117 * t214;
t152 = t169 * pkin(3) + pkin(7) * t327;
t381 = t152 * t214;
t380 = t300 * t246;
t379 = t154 * t246;
t378 = t300 ^ 2;
t375 = t168 * t264;
t374 = t169 * t266;
t373 = t220 * t246;
t372 = t222 * t220;
t371 = t222 * t246;
t370 = t233 * t264;
t369 = t233 * t266;
t368 = t246 * t264;
t367 = t246 * t266;
t269 = qJD(1) ^ 2;
t361 = t267 * t269;
t268 = qJD(2) ^ 2;
t360 = t268 * t265;
t359 = t268 * t267;
t118 = -pkin(3) * t246 + t127;
t71 = t118 * t262 - t122;
t57 = -pkin(4) * t246 - t423 + t71;
t72 = t118 * t261 + t124;
t60 = t72 + t432;
t16 = -t263 * t60 + t412 * t57;
t358 = qJD(6) - t16;
t225 = pkin(3) * t365 + pkin(7) * t265;
t259 = t265 ^ 2;
t354 = -t267 ^ 2 + t259;
t340 = pkin(7) * t364;
t255 = pkin(7) * t348;
t338 = t265 * t361;
t174 = pkin(3) * t282 + t255;
t252 = -t266 * pkin(3) - pkin(2);
t330 = t236 * t353;
t329 = t246 * t353;
t33 = -t261 * t76 + t262 * t70;
t324 = t388 * t427;
t22 = pkin(4) * t251 - pkin(9) * t117 + t33;
t27 = -pkin(9) * t317 + t34;
t323 = -t22 * t263 - t27 * t412 - t328 * t57 + t345 * t60;
t322 = -t22 * t412 + t263 * t27 + t328 * t60 + t345 * t57;
t321 = pkin(1) * t424;
t315 = t220 + t344;
t314 = -t222 + t350;
t313 = pkin(5) * t251;
t311 = t100 * t35 - t46 * t86 - t47 * t87;
t310 = t267 * t251;
t119 = pkin(3) * t222 + pkin(4) * t300;
t308 = -t100 * t64 + t133 * t47;
t307 = -t437 - t399;
t303 = t154 ^ 2;
t302 = t214 * t317;
t301 = -t160 * t266 - t161 * t264;
t298 = qJD(1) * t259 - t246 * t267;
t227 = t236 * qJD(6);
t243 = qJ(6) * t251;
t1 = t243 - t227 - t323;
t296 = -t16 * t236 + t323;
t17 = t263 * t57 + t412 * t60;
t295 = -t17 * t236 - t322;
t50 = -t263 * t88 + t412 * t82;
t7 = t263 * t42 + t328 * t82 - t345 * t88 + t412 * t45;
t291 = t100 * t394 + t47 * t150;
t290 = t166 * t214;
t199 = t249 * t412 - t339;
t283 = t236 * t388 - t322;
t2 = -t313 + t322;
t84 = pkin(4) * t317 + t152;
t276 = t46 + t385;
t63 = qJD(5) * t277 + t135 * t412 - t193 * t345 - t263 * t271;
t275 = t100 * t63 - t133 * t46 + t134 * t47 + t427 * t64;
t274 = t154 * t214;
t183 = pkin(4) * t299 + t252;
t158 = pkin(4) * t289 + t225;
t9 = t47 * pkin(5) + t46 * qJ(6) - qJD(6) * t427 + t84;
t270 = t47 - t395;
t106 = -pkin(4) * t271 + t174;
t194 = -pkin(5) - t199;
t192 = qJ(6) + t200;
t181 = t216 - t340;
t180 = (-t246 - t352) * t349;
t175 = (-t236 - t352) * t349;
t171 = -pkin(7) * t334 + t206;
t126 = -qJD(3) * t182 + t355;
t125 = (-t265 * t344 - t267 * t347) * pkin(7) + t356;
t83 = t150 * pkin(5) - t151 * qJ(6) + t183;
t66 = pkin(5) * t133 - qJ(6) * t134 + t158;
t49 = pkin(5) * t267 - t50;
t48 = -qJ(6) * t267 + t401;
t44 = t119 + t56;
t30 = t393 * t236 + (qJD(2) * t151 - t427) * t353;
t15 = -qJ(6) * t236 + t17;
t14 = pkin(5) * t236 + t358;
t13 = t64 * pkin(5) + t63 * qJ(6) - t134 * qJD(6) + t106;
t12 = -t134 * t46 - t427 * t63;
t11 = t236 * t63 + t267 * t46 + (qJD(1) * t134 + t427) * t349;
t10 = -t151 * t46 - t393 * t427;
t6 = -pkin(5) * t349 - t8;
t5 = qJ(6) * t349 - qJD(6) * t267 + t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t310, t354 * t424, t359, -0.2e1 * t310, -t360, 0, -pkin(7) * t359 + t265 * t321, pkin(7) * t360 + t267 * t321, 0, 0, -t168 * t363 + (t267 * t344 - t332) * t222 (-t220 * t266 - t222 * t264) * t348 + (t375 - t374 + (t220 * t264 - t222 * t266) * qJD(3)) * t265, t246 * t332 + t168 * t267 + (t222 * t265 + t266 * t298) * qJD(2), t169 * t365 + t220 * t282, t246 * t331 + t169 * t267 + (-t220 * t265 - t264 * t298) * qJD(2), t180, -t109 * t267 - t126 * t246 + (pkin(7) * t169 + t233 * t346) * t265 + ((pkin(7) * t220 + t370) * t267 + (t160 + (t181 + t340) * qJD(1)) * t265) * qJD(2), t108 * t267 + t125 * t246 + (-pkin(7) * t168 - t233 * t347) * t265 + ((pkin(7) * t222 + t369) * t267 + (-t161 + (-t182 + t248) * qJD(1)) * t265) * qJD(2), -t125 * t220 - t126 * t222 + t168 * t181 - t169 * t182 + t301 * t348 + (-t108 * t264 - t109 * t266 + (t160 * t264 - t161 * t266) * qJD(3)) * t265, t108 * t182 + t109 * t181 + t125 * t161 + t126 * t160 + (t233 + t253) * t255, -t117 * t193 - t135 * t300, -t135 * t154 + t193 * t317 - t300 * t278 + (t300 * t417 - t382) * t265, -t117 * t267 + t135 * t246 + (-qJD(1) * t193 + t300) * t349, -t274 * t348 + (t154 * t417 + t302) * t265 (t246 * t351 + t317) * t267 + (-t246 * t417 + (-qJD(1) * t289 + t154) * qJD(2)) * t265, t180, -t54 * t246 - t174 * t154 + t225 * t317 + (qJD(2) * t290 - t33) * t267 + (t381 - t166 * t417 + (qJD(1) * t104 + t71) * qJD(2)) * t265, t117 * t225 - t135 * t166 - t152 * t193 + t300 * t174 + t246 * t55 + t267 * t34 + (-qJD(1) * t105 - t72) * t349, t55 * t154 - t105 * t317 - t54 * t300 - t104 * t117 + t33 * t193 + t71 * t135 - t72 * t278 + (-t214 * t34 + t417 * t72) * t265, t104 * t33 + t105 * t34 + t152 * t225 + t166 * t174 + t54 * t71 + t55 * t72, t12, -t275, t11, t308, -t416, t175, -t106 * t100 + t110 * t64 + t133 * t84 + t158 * t47 - t236 * t8 + t267 * t322 + (qJD(1) * t50 + t16) * t349, t427 * t106 - t110 * t63 + t134 * t84 - t158 * t46 + t236 * t7 - t267 * t323 + (-qJD(1) * t401 - t17) * t349, t100 * t7 + t133 * t323 + t134 * t322 + t16 * t63 - t17 * t64 - t401 * t47 - t427 * t8 + t46 * t50, t106 * t110 + t158 * t84 + t16 * t8 + t17 * t7 - t322 * t50 - t323 * t401, t12, t11, t275, t175, t416, t308, -t13 * t100 + t133 * t9 + t2 * t267 + t236 * t6 + t40 * t64 + t47 * t66 + (-qJD(1) * t49 - t14) * t349, -t1 * t133 + t100 * t5 + t134 * t2 - t14 * t63 - t15 * t64 + t427 * t6 - t46 * t49 - t47 * t48, -t1 * t267 - t427 * t13 - t134 * t9 - t236 * t5 + t40 * t63 + t46 * t66 + (qJD(1) * t48 + t15) * t349, t1 * t48 + t13 * t40 + t14 * t6 + t15 * t5 + t2 * t49 + t66 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, t354 * t269, 0, t338, 0, 0, t269 * pkin(1) * t265, pkin(1) * t361, 0, 0, -t222 * t367 - t375 (-t168 + t373) * t266 + (-t169 + t371) * t264, -t246 * t346 + (t246 * t362 + t265 * t314) * qJD(1), -t220 * t368 - t374, t246 * t347 + (-t246 * t364 + t265 * t315) * qJD(1), t329, -pkin(2) * t169 + t170 * t246 + (pkin(8) * t367 + t370) * qJD(3) + ((-pkin(8) * t350 - t160) * t265 + (-pkin(7) * t315 - t370) * t267) * qJD(1), pkin(2) * t168 - t171 * t246 + (-pkin(8) * t368 + t369) * qJD(3) + ((-pkin(8) * t344 + t161) * t265 + (pkin(7) * t314 - t369) * t267) * qJD(1), t170 * t222 + t171 * t220 + ((qJD(3) * t222 - t169) * pkin(8) + t420) * t266 + ((qJD(3) * t220 - t168) * pkin(8) + t419) * t264, -t160 * t170 - t161 * t171 + (-t233 - t400) * t254 + (qJD(3) * t301 + t108 * t266 - t109 * t264) * pkin(8), t300 * t426 + t382, -t302 - t117 * t299 + t179 * t154 + t300 * t178 + (-t154 * t299 - t214 * t300) * qJD(3), -t426 * t246 + (-t300 + t351) * t353, -qJD(3) * t274 + t154 * t178 + t299 * t317, t428 * t246 + (-qJD(2) * t299 - t154) * t353, t329, t252 * t317 + t152 * t299 + t213 * t154 - t166 * t178 - t392 * t246 + (qJD(2) * t164 - t71) * t353 + (-t154 * t410 + t290) * qJD(3), t252 * t117 + t381 - t213 * t300 + t166 * t179 + t391 * t246 + (-qJD(2) * t165 + t72) * t353 + (-t166 * t299 + t300 * t410) * qJD(3), -t165 * t317 - t34 * t299 - t164 * t117 - t33 * t214 + t72 * t178 - t71 * t179 - t392 * t300 + (-t214 * t72 + t299 * t71) * qJD(3) + t391 * t154, t152 * t252 + t164 * t33 + t165 * t34 + t166 * t425 + t391 * t72 + t392 * t71, t10, t414, t30, t291, -t415, t330, t150 * t84 + t183 * t47 - t357 * t100 + t403 * t236 - t394 * t110 + (-t16 - t387) * t353, t151 * t84 - t183 * t46 + t404 * t236 - t393 * t110 + t357 * t427 + (t17 - t386) * t353, -t100 * t38 + t150 * t323 + t151 * t322 + t16 * t393 + t17 * t394 + t403 * t427 + t311, t110 * t357 - t16 * t403 + t17 * t404 + t183 * t84 + t322 * t86 - t323 * t87, t10, t30, -t414, t330, t415, t291, t150 * t9 + t47 * t83 - t402 * t100 - t394 * t40 + t405 * t236 + (t14 - t387) * t353, -t1 * t150 - t100 * t31 - t14 * t393 + t15 * t394 + t151 * t2 + t405 * t427 + t311, -t151 * t9 + t46 * t83 + t393 * t40 + t406 * t236 - t402 * t427 + (-t15 + t386) * t353, t1 * t87 + t14 * t405 - t15 * t406 + t2 * t86 + t40 * t402 + t83 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, -t220 ^ 2 + t222 ^ 2, -t168 - t373, -t372, -t169 - t371, t251, -t222 * t233 - t419, t220 * t233 - t420, 0, 0, -t429, -t303 + t378, t117 + t379, t429, -t317 - t380, t251, -t166 * t300 + t78 * t246 + (t154 * t222 + t251 * t262) * pkin(3) + t33, -t154 * t166 - t246 * t79 + (-t222 * t300 - t251 * t261) * pkin(3) - t34 (-t117 * t262 - t261 * t317) * pkin(3) + (t72 + t78) * t300 + (-t79 + t71) * t154, -t71 * t78 - t72 * t79 + (-t166 * t222 + t261 * t34 + t262 * t33) * pkin(3), -t438, t442, t440, t438, -t434, t251, t100 * t119 + t199 * t251 + t283 - t433, -t119 * t427 - t200 * t251 + t236 * t389 + t323 - t439, t17 * t427 + t199 * t46 - t200 * t47 + t324 + (t16 + t389) * t100, -t110 * t119 - t16 * t388 + t17 * t389 - t199 * t322 - t200 * t323, -t438, t440, -t442, t251, t434, t438, -t398 + t44 * t100 + (pkin(5) - t194) * t251 + t283, t15 * t427 - t192 * t47 - t194 * t46 + t324 + (-t14 + t390) * t100, t192 * t251 - t236 * t390 + t427 * t44 + t1 + t441, t1 * t192 + t14 * t388 + t15 * t390 + t194 * t2 - t40 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317 - t380, t117 - t379, -t303 - t378, -t154 * t72 + t300 * t71 + t152, 0, 0, 0, 0, 0, 0, t270, -t276, t307, -t17 * t100 + t16 * t427 + t84, 0, 0, 0, 0, 0, 0, t270, t307, t276, -t15 * t100 - t14 * t427 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t442, t440, t438, -t434, t251, t295 - t433, t296 - t439, 0, 0, -t438, t440, -t442, t251, t434, t438, t100 * t56 + t295 + 0.2e1 * t313 - t398, pkin(5) * t46 - qJ(6) * t47 + (t15 - t17) * t427 - (t14 - t358) * t100, t427 * t56 - 0.2e1 * t227 + 0.2e1 * t243 - t296 + t441, -pkin(5) * t2 + qJ(6) * t1 - t14 * t17 + t15 * t358 - t40 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251 - t438, t440, -t236 ^ 2 - t437, t15 * t236 + t2 + t398;];
tauc_reg  = t3;
