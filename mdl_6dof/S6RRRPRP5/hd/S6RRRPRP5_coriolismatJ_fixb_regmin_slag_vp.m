% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRP5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:51:38
% EndTime: 2019-03-09 16:52:22
% DurationCPUTime: 25.41s
% Computational Cost: add. (25878->901), mult. (54264->1110), div. (0->0), fcn. (59438->8), ass. (0->654)
t600 = cos(pkin(10));
t602 = sin(qJ(3));
t604 = cos(qJ(3));
t925 = sin(pkin(10));
t744 = t925 * t604;
t544 = -t600 * t602 - t744;
t946 = cos(qJ(5));
t534 = t946 * t544;
t745 = t925 * t602;
t878 = t600 * t604;
t543 = -t745 + t878;
t601 = sin(qJ(5));
t868 = t601 * t543;
t1008 = -t534 + t868;
t605 = cos(qJ(2));
t1019 = t1008 * t605;
t1042 = t1019 / 0.2e1;
t522 = t544 * t605;
t501 = t946 * t522;
t862 = t604 * t605;
t524 = t600 * t862 - t605 * t745;
t869 = t601 * t524;
t837 = t869 / 0.2e1 - t501 / 0.2e1;
t289 = t1042 + t837;
t1048 = t289 * qJD(2);
t789 = qJD(3) + qJD(5);
t948 = -t605 / 0.2e1;
t603 = sin(qJ(2));
t730 = -pkin(2) * t605 - t603 * pkin(8);
t555 = -pkin(1) + t730;
t787 = pkin(7) * t862;
t506 = t602 * t555 + t787;
t867 = t602 * t603;
t652 = -qJ(4) * t867 + t506;
t1012 = t925 * t652;
t720 = (-qJ(4) * t603 + t555) * t604;
t945 = pkin(7) * t602;
t630 = (-pkin(3) - t945) * t605 + t720;
t331 = t600 * t630 - t1012;
t864 = t603 * t604;
t523 = -t600 * t864 + t603 * t745;
t936 = t523 * pkin(9);
t610 = -t605 * pkin(4) + t331 + t936;
t233 = t946 * t610;
t1013 = t600 * t652;
t332 = t925 * t630 + t1013;
t521 = -t600 * t867 - t603 * t744;
t939 = t521 * pkin(9);
t275 = t332 + t939;
t877 = t601 * t275;
t136 = -t233 + t877;
t128 = pkin(5) * t605 + t136;
t866 = t602 * t605;
t788 = pkin(7) * t866;
t471 = t720 - t788;
t356 = t600 * t471 - t1012;
t283 = t356 + t936;
t772 = t946 * t283;
t355 = -t471 * t925 - t1013;
t282 = t355 - t939;
t875 = t601 * t282;
t161 = t772 + t875;
t1047 = t128 + t161;
t502 = t946 * t523;
t871 = t601 * t521;
t1009 = -t502 + t871;
t1036 = t1009 ^ 2;
t417 = t946 * t521 + t601 * t523;
t894 = t417 ^ 2;
t1040 = t894 - t1036;
t1046 = qJD(1) * t1040;
t1037 = t1008 ^ 2;
t455 = t946 * t543 + t601 * t544;
t886 = t455 ^ 2;
t1041 = -t1037 + t886;
t1045 = qJD(2) * t1041;
t1044 = 0.2e1 * pkin(5);
t1043 = 2 * qJ(6);
t775 = pkin(3) * t925;
t776 = pkin(3) * t600 + pkin(4);
t531 = t601 * t776 + t775 * t946;
t609 = t601 * t610;
t773 = t946 * t275;
t607 = t609 / 0.2e1 + t773 / 0.2e1;
t1038 = t531 * t948 + t607;
t276 = t946 * t282;
t874 = t601 * t283;
t843 = t874 / 0.2e1 - t276 / 0.2e1;
t606 = -t843 + t1038;
t929 = -qJ(4) - pkin(8);
t728 = t929 * t925;
t683 = t602 * t728;
t476 = -t878 * t929 + t683;
t935 = t543 * pkin(9);
t621 = t476 + t935;
t615 = t946 * t621;
t747 = t600 * t929;
t735 = t602 * t747;
t474 = t744 * t929 + t735;
t933 = t544 * pkin(9);
t620 = t474 + t933;
t618 = t601 * t620;
t608 = t618 / 0.2e1 + t615 / 0.2e1;
t473 = t604 * t747 - t683;
t423 = t473 - t935;
t771 = t946 * t423;
t475 = t604 * t728 + t735;
t424 = t475 + t933;
t872 = t601 * t424;
t646 = -t872 / 0.2e1 + t771 / 0.2e1;
t150 = t608 + t646;
t807 = t150 * qJD(2);
t1014 = qJD(1) * t606 + t531 * qJD(3) + t807;
t1033 = t455 / 0.2e1;
t1039 = t1009 * t1033;
t1024 = t455 * qJ(6);
t1029 = t1008 * pkin(5);
t328 = -t1024 + t1029;
t1025 = t417 * qJ(6);
t1028 = t1009 * pkin(5);
t250 = -t1025 + t1028;
t930 = t605 * pkin(8);
t932 = t603 * pkin(2);
t557 = -t930 + t932;
t551 = t604 * t557;
t577 = pkin(7) * t867;
t466 = t603 * pkin(3) - qJ(4) * t862 + t551 + t577;
t550 = t602 * t557;
t786 = pkin(7) * t864;
t472 = -qJ(4) * t866 + t550 - t786;
t344 = t600 * t466 - t472 * t925;
t267 = t603 * pkin(4) - t524 * pkin(9) + t344;
t774 = t946 * t267;
t345 = t925 * t466 + t600 * t472;
t277 = pkin(9) * t522 + t345;
t876 = t601 * t277;
t846 = t774 / 0.2e1 - t876 / 0.2e1;
t931 = t603 * pkin(5);
t726 = -t931 / 0.2e1 - t846;
t1030 = t1009 / 0.2e1;
t1031 = t1008 / 0.2e1;
t552 = pkin(3) * t867 + t603 * pkin(7);
t458 = -pkin(4) * t521 + t552;
t725 = -pkin(5) * t417 - qJ(6) * t1009;
t212 = t458 + t725;
t587 = -pkin(3) * t604 - pkin(2);
t507 = -pkin(4) * t543 + t587;
t724 = -pkin(5) * t455 - qJ(6) * t1008;
t257 = t507 + t724;
t669 = t1030 * t257 + t1031 * t212;
t1035 = -t417 / 0.2e1;
t1034 = -t455 / 0.2e1;
t1032 = -t1008 / 0.2e1;
t1027 = t212 * t417;
t1026 = t257 * t455;
t791 = t605 * qJD(1);
t378 = t417 * t791;
t826 = qJD(1) * t1009;
t768 = t417 * t826;
t823 = qJD(2) * t1008;
t766 = t455 * t823;
t1023 = t458 * t417;
t377 = t1009 * t791;
t734 = -t502 / 0.2e1;
t411 = t734 + t502 / 0.2e1;
t1022 = -t411 * qJD(5) - t377;
t838 = t789 * t455;
t298 = t823 + t826;
t817 = qJD(3) * t417;
t1021 = qJD(4) * t455;
t1020 = t1008 * t257;
t1018 = t1009 * t458;
t904 = t212 * t1009;
t800 = t417 * qJD(4);
t801 = t417 * qJD(6);
t799 = t455 * qJD(6);
t755 = -t1019 / 0.2e1;
t717 = t755 + t837;
t1002 = qJD(1) * t717;
t733 = -t534 / 0.2e1;
t375 = 0.2e1 * t733 + t868;
t840 = qJD(3) * t1008 + t375 * qJD(5);
t1017 = t1002 + t840;
t448 = t733 + t534 / 0.2e1;
t432 = t448 * qJD(5);
t1016 = t432 - t1002;
t515 = t531 * qJD(5);
t1015 = -t515 - t1014;
t685 = -qJD(5) * t417 - t817;
t300 = qJD(1) * t417 + qJD(2) * t455;
t1011 = t332 + t355;
t1010 = t473 + t476;
t286 = t755 - t837;
t1007 = qJD(2) * t286 + t1022;
t339 = 0.2e1 * t734 + t871;
t408 = t1009 * qJD(3);
t1006 = qJD(2) * t717 + t339 * qJD(5) - t377 + t408;
t769 = t946 * t524;
t870 = t601 * t522;
t645 = t870 / 0.2e1 + t769 / 0.2e1;
t947 = t605 / 0.2e1;
t754 = t455 * t947;
t292 = t754 - t645;
t804 = t292 * qJD(1);
t1005 = t804 - t838;
t520 = qJ(6) + t531;
t957 = t520 / 0.2e1;
t989 = qJ(6) / 0.2e1;
t750 = t957 + t989;
t56 = t605 * t750 - t607 + t843;
t1004 = -qJD(1) * t56 + t807;
t1001 = qJD(4) * t717;
t149 = t608 - t646;
t266 = t615 + t618;
t777 = -t149 * qJD(3) + t448 * qJD(4) - t266 * qJD(5);
t412 = t946 * t620;
t619 = t601 * t621;
t614 = -t412 / 0.2e1 + t619 / 0.2e1;
t770 = t946 * t424;
t873 = t601 * t423;
t647 = -t873 / 0.2e1 - t770 / 0.2e1;
t147 = t614 - t647;
t530 = t601 * t775 - t946 * t776;
t727 = -t233 / 0.2e1 + t530 * t948;
t62 = t772 / 0.2e1 + (t275 / 0.2e1 + t282 / 0.2e1) * t601 + t727;
t781 = -t62 * qJD(1) - t147 * qJD(2) - t530 * qJD(3);
t248 = t601 * t267;
t268 = t946 * t277;
t848 = t248 / 0.2e1 + t268 / 0.2e1;
t599 = t605 ^ 2;
t376 = t599 + t1036;
t1000 = -t376 * qJD(1) - t1009 * t823 + t605 * t789;
t596 = t602 ^ 2;
t598 = t604 ^ 2;
t569 = t598 - t596;
t792 = t603 * qJD(1);
t767 = t604 * t792;
t999 = qJD(2) * t569 - 0.2e1 * t602 * t767;
t330 = t339 * qJD(4);
t998 = qJD(3) * t606 - t330;
t137 = t773 + t609;
t380 = t411 * qJD(4);
t651 = -t843 - t1038;
t997 = qJD(3) * t651 - t137 * qJD(5) + t380;
t160 = -t276 + t874;
t996 = -t160 * qJD(3) + qJD(5) * t651;
t409 = t1009 * qJD(4);
t995 = -qJD(5) * t606 - t409;
t992 = -pkin(5) / 0.2e1;
t991 = pkin(5) / 0.2e1;
t990 = -qJ(6) / 0.2e1;
t988 = -t128 / 0.2e1;
t987 = -t257 / 0.2e1;
t591 = t602 * pkin(3);
t934 = t544 * pkin(4);
t509 = t591 - t934;
t262 = t509 + t328;
t986 = -t262 / 0.2e1;
t264 = t619 - t412;
t985 = -t264 / 0.2e1;
t984 = t264 / 0.2e1;
t265 = t770 + t873;
t983 = -t265 / 0.2e1;
t982 = -t266 / 0.2e1;
t981 = -t1009 / 0.2e1;
t979 = t417 / 0.2e1;
t967 = -t458 / 0.2e1;
t966 = t458 / 0.2e1;
t965 = -t473 / 0.2e1;
t964 = -t474 / 0.2e1;
t963 = -t475 / 0.2e1;
t962 = -t476 / 0.2e1;
t961 = -t507 / 0.2e1;
t960 = t507 / 0.2e1;
t959 = t509 / 0.2e1;
t958 = -t520 / 0.2e1;
t956 = -t521 / 0.2e1;
t525 = -pkin(5) + t530;
t954 = t525 / 0.2e1;
t953 = t531 / 0.2e1;
t952 = -t543 / 0.2e1;
t950 = t600 / 0.2e1;
t949 = -t603 / 0.2e1;
t416 = -t501 + t869;
t943 = t416 * pkin(5);
t938 = t522 * pkin(4);
t937 = t523 * pkin(4);
t928 = pkin(3) * qJD(3);
t752 = t136 / 0.2e1 + t988;
t861 = t605 * qJ(6);
t126 = t137 - t861;
t753 = t126 / 0.2e1 - t137 / 0.2e1;
t634 = -t1008 * t753 - t455 * t752;
t420 = t769 + t870;
t680 = t416 * t990 + t420 * t992;
t8 = t634 - t680;
t927 = t8 * qJD(1);
t101 = -t1008 * t1009 + t417 * t455;
t667 = (-t1034 + t1033) * t417;
t668 = 0.2e1 * t1032 * t1009;
t76 = t667 + t668;
t926 = t76 * qJD(3) + t101 * qJD(5);
t578 = pkin(3) * t864;
t746 = t578 - t937;
t215 = t746 + t250;
t906 = t160 * t605;
t45 = -t215 * t417 + t904 + t906;
t924 = qJD(1) * t45;
t910 = t137 * t605;
t50 = -t250 * t417 + t904 + t910;
t923 = qJD(1) * t50;
t51 = t1009 * t128 + t126 * t417;
t922 = qJD(1) * t51;
t71 = t417 * t746 - t1018 - t906;
t918 = qJD(1) * t71;
t905 = t161 * t605;
t72 = t1009 * t746 + t1023 + t905;
t917 = qJD(1) * t72;
t911 = t136 * t605;
t89 = -t911 + t1023;
t916 = qJD(1) * t89;
t90 = -t910 - t1018;
t915 = qJD(1) * t90;
t844 = t268 + t248;
t865 = t603 * qJ(6);
t132 = t844 + t865;
t664 = t774 - t876;
t133 = -t664 - t931;
t575 = pkin(3) * t866;
t593 = t605 * pkin(7);
t553 = t593 + t575;
t459 = t553 - t938;
t891 = t420 * qJ(6);
t213 = t459 - t891 + t943;
t11 = t126 * t132 + t128 * t133 + t212 * t213;
t914 = t11 * qJD(1);
t12 = t126 * t161 + t128 * t160 + t212 * t215;
t913 = t12 * qJD(1);
t13 = -t126 * t136 + t128 * t137 + t212 * t250;
t912 = t13 * qJD(1);
t14 = t1009 * t133 - t126 * t416 + t128 * t420 + t132 * t417;
t909 = t14 * qJD(1);
t15 = (-t126 + t137) * t1009 - (-t128 + t136) * t417;
t908 = t15 * qJD(1);
t16 = t1047 * t417 + (-t126 + t160) * t1009;
t907 = t16 * qJD(1);
t903 = t264 * t603;
t902 = t264 * t605;
t901 = t265 * t605;
t900 = t266 * t603;
t899 = t266 * t605;
t27 = t1009 * t213 - t126 * t603 + t132 * t605 + t212 * t420;
t898 = t27 * qJD(1);
t28 = -t128 * t603 + t133 * t605 + t212 * t416 - t213 * t417;
t897 = t28 * qJD(1);
t42 = t136 * t603 - t458 * t416 + t417 * t459 + t605 * t664;
t892 = t42 * qJD(1);
t43 = t1009 * t459 - t137 * t603 + t458 * t420 + t605 * t844;
t890 = t43 * qJD(1);
t885 = t455 * t605;
t46 = t1009 * t215 + t1027 + t905;
t882 = t46 * qJD(1);
t49 = t1009 * t250 + t1027 - t911;
t881 = t49 * qJD(1);
t879 = t552 * t602;
t597 = t603 ^ 2;
t863 = t604 * t597;
t66 = t126 * t605 + t904;
t859 = t66 * qJD(1);
t69 = -t331 * t524 + t332 * t522 + t344 * t523 + t345 * t521;
t858 = t69 * qJD(1);
t70 = t1011 * t523 + (-t331 + t356) * t521;
t857 = t70 * qJD(1);
t77 = t331 * t344 + t332 * t345 + t552 * t553;
t856 = t77 * qJD(1);
t84 = t331 * t355 + t332 * t356 + t552 * t578;
t855 = t84 * qJD(1);
t854 = t150 * qJD(3) - t375 * qJD(4);
t852 = -qJD(4) * t1008 - t150 * qJD(5);
t263 = -t771 + t872;
t851 = -t263 * qJD(3) - t149 * qJD(5);
t174 = t1031 * t417 + t1039;
t175 = -t1032 * t417 + t1039;
t850 = t174 * qJD(3) + t175 * qJD(5);
t570 = t599 - t597;
t835 = qJ(6) * qJD(5);
t162 = t331 * t523 + t332 * t521;
t834 = qJD(1) * t162;
t231 = -t416 * t605 - t417 * t603;
t833 = qJD(1) * t231;
t232 = -t1009 * t603 + t420 * t605;
t832 = qJD(1) * t232;
t829 = qJD(1) * t286;
t828 = qJD(1) * t289;
t288 = t885 / 0.2e1 + t645;
t214 = qJD(1) * t288;
t291 = t754 + t645;
t827 = qJD(1) * t291;
t505 = -t604 * t555 + t788;
t460 = -t505 * t605 - t597 * t945;
t825 = qJD(1) * t460;
t461 = -pkin(7) * t863 - t506 * t605;
t824 = qJD(1) * t461;
t822 = qJD(2) * t507;
t821 = qJD(2) * t602;
t820 = qJD(2) * t603;
t819 = qJD(2) * t604;
t818 = qJD(2) * t605;
t816 = qJD(3) * t602;
t815 = qJD(3) * t604;
t814 = qJD(3) * t605;
t813 = qJD(4) * t292;
t811 = qJD(5) * t507;
t810 = qJD(6) * t1008;
t809 = qJD(6) * t605;
t155 = -t1009 * t416 + t417 * t420;
t806 = t155 * qJD(1);
t805 = t291 * qJD(4);
t361 = t505 * t603 + (-t577 + t551) * t605;
t803 = t361 * qJD(1);
t362 = t550 * t605 + (-t506 + t787) * t603;
t802 = t362 * qJD(1);
t797 = t530 * qJD(5);
t548 = t570 * t602;
t795 = t548 * qJD(1);
t549 = t599 * t604 - t863;
t794 = t549 * qJD(1);
t793 = t570 * qJD(1);
t790 = -t797 + qJD(6);
t785 = pkin(1) * t792;
t784 = pkin(1) * t791;
t783 = t954 + t992;
t780 = t587 * t864;
t779 = t925 / 0.2e1;
t765 = t602 * t819;
t764 = t603 * t819;
t763 = t602 * t814;
t762 = t604 * t814;
t761 = t605 * t409;
t760 = t605 * t800;
t759 = t602 * t815;
t758 = t603 * t818;
t757 = t603 * t791;
t756 = t263 * t947;
t241 = -t899 / 0.2e1;
t751 = t958 + t953;
t749 = t530 / 0.2e1 - t525 / 0.2e1;
t748 = t575 / 0.2e1 + t593 / 0.2e1;
t152 = qJD(2) * t291 + t378;
t565 = t578 / 0.2e1;
t741 = t565 - t937 / 0.2e1;
t588 = t591 / 0.2e1;
t740 = t588 - t934 / 0.2e1;
t739 = -qJD(3) + t791;
t738 = -qJD(5) + t791;
t737 = t602 * t764;
t732 = t846 + t931;
t731 = t791 - qJD(3) / 0.2e1;
t729 = t848 + t865;
t612 = t126 * t983 + t160 * t985 + t161 * t982 + t212 * t986 + t215 * t987 + t263 * t988;
t671 = t132 * t957 + t133 * t954;
t1 = t612 + t671;
t41 = t257 * t262 + t263 * t264 + t265 * t266;
t723 = -t1 * qJD(1) + t41 * qJD(2);
t670 = -t212 * t328 / 0.2e1 + t250 * t987;
t678 = t132 * t989 + t133 * t992;
t3 = t264 * t753 + t266 * t752 + t670 + t678;
t44 = t257 * t328;
t722 = -t3 * qJD(1) + t44 * qJD(2);
t48 = (t264 + t265) * t455 + (t263 - t266) * t1008;
t611 = t1030 * t263 + t1031 * t160 + t1032 * t126 + t1033 * t1047 + t265 * t979 + t266 * t981 + t417 * t984;
t665 = t416 * t958 + t420 * t954;
t5 = -t611 + t665;
t721 = -t5 * qJD(1) + t48 * qJD(2);
t562 = -qJD(3) + t738;
t719 = t531 * t949 - t848;
t718 = t530 * t949 + t846;
t238 = t901 / 0.2e1;
t625 = t1009 * t986 + t1032 * t215 + t1034 * t212 + t1035 * t257;
t648 = t603 * t750 + t848;
t17 = t238 - t625 + t648;
t94 = -t1008 * t262 - t1026;
t716 = -qJD(1) * t17 + qJD(2) * t94;
t616 = t1034 * t215 + t1035 * t262 + t669 + t756;
t19 = t603 * t783 + t616 - t846;
t93 = -t262 * t455 + t1020;
t715 = -qJD(1) * t19 - qJD(2) * t93;
t628 = t1032 * t128 + t1034 * t126 + t1035 * t266 + t264 * t981;
t629 = t943 / 0.2e1 - t891 / 0.2e1 - t938 / 0.2e1 + t748;
t21 = t628 + t629;
t97 = t1008 * t264 + t266 * t455;
t714 = qJD(1) * t21 - qJD(2) * t97;
t632 = t1009 * t751 - t417 * t749;
t681 = pkin(5) * t1035 + qJ(6) * t981;
t68 = t632 - t681;
t631 = t1008 * t751 - t455 * t749;
t679 = pkin(5) * t1034 + qJ(6) * t1032;
t79 = t631 - t679;
t713 = qJD(1) * t68 + qJD(2) * t79;
t102 = -t328 * t455 + t1020;
t624 = t1033 * t250 + t328 * t979 - t669;
t25 = t241 + t624 + t732;
t712 = qJD(1) * t25 - qJD(2) * t102;
t103 = -t1008 * t328 - t1026;
t236 = -t902 / 0.2e1;
t626 = t1030 * t328 + t1031 * t250 + t1033 * t212 + t257 * t979;
t23 = t236 + t626 + t729;
t711 = qJD(1) * t23 - qJD(2) * t103;
t122 = -t1008 * t783 - t455 * t750 + t740;
t98 = -t1009 * t783 - t417 * t750 + t741;
t710 = qJD(1) * t98 + qJD(2) * t122;
t153 = t894 + t1036;
t75 = t667 - t668;
t709 = qJD(1) * t153 + qJD(2) * t75;
t708 = qJD(2) * t76 + t1046;
t169 = t1010 * t544 + (-t474 + t475) * t543;
t638 = (t522 * t779 - t600 * t524 / 0.2e1) * pkin(3);
t37 = (-t332 / 0.2e1 - t355 / 0.2e1) * t544 + (-t356 / 0.2e1 + t331 / 0.2e1) * t543 + (t962 + t965) * t523 + (t963 + t474 / 0.2e1) * t521 + t638;
t707 = t37 * qJD(1) - t169 * qJD(2);
t191 = t886 + t1037;
t706 = qJD(1) * t75 + qJD(2) * t191;
t705 = qJD(1) * t76 + t1045;
t216 = t473 * t474 + t475 * t476 + t587 * t591;
t623 = t331 * t965 + t332 * t963 + t355 * t964 + t356 * t962;
t641 = t344 * t950 + t345 * t779;
t39 = (-t780 / 0.2e1 - t879 / 0.2e1 + t641) * pkin(3) + t623;
t704 = -t39 * qJD(1) + t216 * qJD(2);
t222 = t1008 * t507 - t455 * t509;
t613 = t1008 * t966 + t1009 * t960 + t1034 * t746 - t417 * t959 + t756;
t33 = -t613 + t718;
t703 = qJD(1) * t33 - qJD(2) * t222;
t223 = t1008 * t509 + t455 * t507;
t239 = -t901 / 0.2e1;
t617 = t1009 * t959 + t1031 * t746 + t417 * t960 + t455 * t966;
t34 = t239 - t617 + t719;
t702 = -qJD(1) * t34 + qJD(2) * t223;
t302 = t474 * t544 + t476 * t543;
t622 = -t331 * t544 / 0.2e1 + t332 * t952 + t523 * t964 + t476 * t956;
t87 = t622 + t748;
t701 = -qJD(1) * t87 + qJD(2) * t302;
t700 = -t62 * qJD(3) - t800;
t63 = t877 / 0.2e1 - t772 / 0.2e1 - t875 / 0.2e1 + t727;
t699 = t63 * qJD(3) + t136 * qJD(5);
t698 = -t161 * qJD(3) + t63 * qJD(5);
t697 = t62 * qJD(5) - t800;
t696 = t739 * t603;
t695 = qJD(2) * t101 + t1046;
t694 = qJD(1) * t101 + t1045;
t135 = t1030 * t1044 + t1035 * t1043;
t184 = t1031 * t1044 + t1034 * t1043;
t693 = qJD(1) * t135 + qJD(2) * t184;
t210 = qJD(1) * t339 + qJD(2) * t375;
t348 = t521 * t543 + t523 * t544;
t425 = t521 ^ 2 + t523 ^ 2;
t692 = qJD(1) * t425 + qJD(2) * t348;
t470 = t543 ^ 2 + t544 ^ 2;
t691 = qJD(1) * t348 + qJD(2) * t470;
t639 = (t521 * t779 + t523 * t950) * pkin(3);
t364 = -t578 / 0.2e1 + t639;
t637 = (t543 * t779 + t544 * t950) * pkin(3);
t422 = -t591 / 0.2e1 + t637;
t690 = qJD(1) * t364 + qJD(2) * t422;
t689 = qJD(1) * t411 + qJD(2) * t448;
t688 = qJD(3) * t147 + t1021;
t148 = t614 + t647;
t687 = -qJD(3) * t148 - qJD(5) * t264;
t686 = qJD(3) * t265 - qJD(5) * t148;
t684 = -qJD(5) * t147 + t1021;
t682 = t930 / 0.2e1 - t932 / 0.2e1;
t677 = t160 * t991 + t161 * t990;
t676 = qJ(6) * t983 + t263 * t991;
t650 = t682 * t602;
t468 = t550 / 0.2e1 - t650;
t673 = pkin(2) * t819 - qJD(1) * t468;
t649 = t682 * t604;
t469 = -t551 / 0.2e1 + t649;
t672 = pkin(2) * t821 - qJD(1) * t469;
t666 = -t417 * t961 - t455 * t967;
t240 = t899 / 0.2e1;
t31 = t240 + t669 + t726;
t663 = qJD(1) * t31 + t257 * t823;
t237 = t902 / 0.2e1;
t53 = t237 - t666 - t848;
t662 = qJD(1) * t53 - t455 * t822;
t635 = t1008 * t967 + t1009 * t961 + t241;
t52 = t635 + t846;
t661 = qJD(1) * t52 - t1008 * t822;
t660 = t604 * t696;
t170 = t949 - t175;
t659 = qJD(1) * t170 - t766;
t658 = qJD(2) * t174 + t768;
t657 = qJD(1) * t174 + t766;
t656 = -qJD(2) * t175 - t768;
t655 = -qJD(1) * t175 - t766;
t537 = (t596 / 0.2e1 - t598 / 0.2e1) * t603;
t653 = -qJD(1) * t537 + t765;
t644 = qJD(1) * t602 * t863 + qJD(2) * t537;
t547 = t569 * t597;
t643 = qJD(1) * t547 + 0.2e1 * t737;
t627 = -t126 * t530 / 0.2e1 + t128 * t953 + t136 * t958 + t137 * t954;
t10 = t627 + t677;
t633 = t264 * t751 - t266 * t749;
t30 = t633 + t676;
t324 = -t520 * t530 + t525 * t531;
t640 = t10 * qJD(1) + t30 * qJD(2) + t324 * qJD(3);
t636 = qJD(2) * t292 + t378 + t685;
t595 = qJ(6) * qJD(6);
t583 = t820 / 0.2e1;
t582 = -t792 / 0.2e1;
t581 = t792 / 0.2e1;
t542 = t562 * qJ(6);
t541 = t731 * t603;
t536 = t537 * qJD(3);
t519 = (-qJD(5) / 0.2e1 + t731) * t603;
t508 = t520 * qJD(6);
t446 = t577 + t551 / 0.2e1 + t649;
t445 = t786 - t550 / 0.2e1 - t650;
t421 = t588 + t637;
t363 = t565 + t639;
t337 = t348 * qJD(4);
t317 = t1009 * t810;
t293 = t1042 - t837;
t290 = -t885 / 0.2e1 + t645;
t219 = qJD(2) * t1037 + t1008 * t826;
t171 = t949 + t175;
t159 = -t214 + t838;
t151 = t288 * qJD(2) + t378;
t123 = t1008 * t954 + t455 * t957 + t1029 / 0.2e1 - t1024 / 0.2e1 + t740;
t99 = t1009 * t954 + t417 * t957 + t1028 / 0.2e1 - t1025 / 0.2e1 + t741;
t95 = t290 * qJD(2) - t417 * t738 + t817;
t88 = -t622 + t748;
t78 = t631 + t679;
t73 = t75 * qJD(4);
t67 = t632 + t681;
t57 = t520 * t948 - t861 / 0.2e1 + t607 + t843;
t55 = -t635 + t846;
t54 = t236 + t666 - t848;
t40 = pkin(3) * t641 - t623 + (t780 + t879) * pkin(3) / 0.2e1;
t38 = t475 * t521 / 0.2e1 + t356 * t543 / 0.2e1 + t474 * t956 + t331 * t952 + t638 + t1010 * t523 / 0.2e1 + t1011 * t544 / 0.2e1;
t36 = t238 + t617 + t719;
t35 = t613 + t718;
t32 = t241 - t669 + t726;
t29 = t633 - t676;
t26 = t240 - t624 + t732;
t24 = t237 - t626 + t729;
t22 = -t628 + t629;
t20 = t525 * t949 + t616 - t726;
t18 = t239 + t625 + t648;
t9 = t627 - t677;
t7 = t634 + t680;
t6 = t611 + t665;
t4 = t136 * t982 + t126 * t985 + t137 * t984 + t128 * t266 / 0.2e1 - t670 + t678;
t2 = -t612 + t671;
t47 = [0, 0, 0, t758, t570 * qJD(2), 0, 0, 0, -pkin(1) * t820, -pkin(1) * t818, -t597 * t759 + t598 * t758, -t547 * qJD(3) - 0.2e1 * t605 * t737, -t549 * qJD(2) + t603 * t763, t548 * qJD(2) + t603 * t762, -t758, -qJD(2) * t361 - qJD(3) * t461, qJD(2) * t362 + qJD(3) * t460, qJD(2) * t69 + qJD(3) * t70 + qJD(4) * t425, qJD(2) * t77 + qJD(3) * t84 + qJD(4) * t162 (qJD(2) * t420 - t685) * t1009, qJD(2) * t155 + t1040 * t789, -t232 * qJD(2) + t605 * t685, -t231 * qJD(2) + (qJD(5) * t1009 + t408) * t605, -t758, -t42 * qJD(2) - t71 * qJD(3) - t90 * qJD(5) + t761, t43 * qJD(2) + t72 * qJD(3) + t89 * qJD(5) + t760, t28 * qJD(2) + t45 * qJD(3) + t50 * qJD(5) + t1009 * t801 + t761, t14 * qJD(2) + t16 * qJD(3) + t153 * qJD(4) + t15 * qJD(5) - t605 * t801, -t27 * qJD(2) - t46 * qJD(3) - t49 * qJD(5) + t376 * qJD(6) - t760, qJD(2) * t11 + qJD(3) * t12 + qJD(4) * t51 + qJD(5) * t13 - qJD(6) * t66; 0, 0, 0, t757, t793, t818, -t820, 0, -pkin(7) * t818 - t785, pkin(7) * t820 - t784, -t536 + (t598 * t792 + t765) * t605, -0.2e1 * t603 * t759 + t605 * t999, t602 * t820 - t794, t764 + t795, -t541, -t803 + (t602 * t730 - t787) * qJD(2) + t446 * qJD(3), t802 + (t604 * t730 + t788) * qJD(2) + t445 * qJD(3), t858 + (t344 * t544 + t345 * t543 - t474 * t524 + t476 * t522) * qJD(2) + t38 * qJD(3) + t337, t856 + (t344 * t474 + t345 * t476 + t553 * t587) * qJD(2) + t40 * qJD(3) + t88 * qJD(4), t298 * t420 + t850, t806 + (-t1008 * t416 + t420 * t455) * qJD(2) + t926, -qJD(3) * t292 + qJD(5) * t290 + t1008 * t820 - t832, -qJD(3) * t717 + qJD(5) * t293 + t455 * t820 - t833, -t519, -t892 + (t416 * t507 - t455 * t459 - t903) * qJD(2) + t35 * qJD(3) - t286 * qJD(4) + t55 * qJD(5), t890 + (t1008 * t459 + t420 * t507 - t900) * qJD(2) + t36 * qJD(3) + t805 + t54 * qJD(5), t897 + (-t213 * t455 + t257 * t416 - t903) * qJD(2) + t20 * qJD(3) + t289 * qJD(4) + t26 * qJD(5) + t171 * qJD(6), t909 + (t1008 * t133 + t132 * t455 + t264 * t420 - t266 * t416) * qJD(2) + t6 * qJD(3) + t73 + t7 * qJD(5) + t290 * qJD(6), -t898 + (-t1008 * t213 - t257 * t420 + t900) * qJD(2) + t18 * qJD(3) - t805 + t24 * qJD(5) + t317, t914 + (t132 * t266 + t133 * t264 + t213 * t257) * qJD(2) + t2 * qJD(3) + t22 * qJD(4) + t4 * qJD(5) + t32 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t644, -t643, t602 * t696, t660, t583, qJD(2) * t446 - qJD(3) * t506 - t824, qJD(2) * t445 + qJD(3) * t505 + t825, t857 + t38 * qJD(2) + (-t521 * t600 + t523 * t925) * t928, t855 + t40 * qJD(2) + (t355 * t600 + t356 * t925) * t928 + t363 * qJD(4), t658, t708, -t636, -t1006, t583, qJD(2) * t35 - t918 + t996, qJD(2) * t36 + t698 + t917, qJD(2) * t20 + t924 + t996, t907 + t6 * qJD(2) + (-t1009 * t520 + t417 * t525) * qJD(3) + t67 * qJD(5) + t801, t18 * qJD(2) - t698 - t809 - t882, t913 + t2 * qJD(2) + (t160 * t525 + t161 * t520) * qJD(3) + t99 * qJD(4) + t9 * qJD(5) + t57 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t692, qJD(2) * t88 + qJD(3) * t363 + t834, 0, 0, 0, 0, 0, -t1007, t152, -t1022 + t1048, t709, -t152, qJD(2) * t22 + qJD(3) * t99 - qJD(6) * t411 + t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t656, t695, t95, t293 * qJD(2) - t339 * qJD(3) + t1009 * t738, t583, qJD(2) * t55 - t915 + t997, qJD(2) * t54 + t699 + t916, qJD(2) * t26 + t923 + t997, t7 * qJD(2) + t67 * qJD(3) + qJD(5) * t725 + t801 + t908, t24 * qJD(2) - t699 - t809 - t881, t912 + t4 * qJD(2) + t9 * qJD(3) + (-pkin(5) * t137 - qJ(6) * t136) * qJD(5) + t126 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t171 + t768, t95, -t1000, qJD(2) * t32 + qJD(3) * t57 + qJD(5) * t126 - t380 - t859; 0, 0, 0, -t757, -t793, 0, 0, 0, t785, t784, -t598 * t757 - t536, 0.2e1 * t602 * t660, -t762 + t794, t763 - t795, t541, qJD(3) * t469 + t803, qJD(3) * t468 - t802, -qJD(3) * t37 + t337 - t858, -qJD(3) * t39 - qJD(4) * t87 - t856, -t420 * t826 + t850, -t806 + t926, -qJD(3) * t291 - qJD(5) * t288 + t832, -qJD(3) * t286 + qJD(5) * t289 + t833, t519, -qJD(3) * t33 - qJD(5) * t52 - t1001 + t892, -qJD(3) * t34 - qJD(5) * t53 + t813 - t890, qJD(3) * t19 - qJD(5) * t25 - qJD(6) * t170 - t1001 - t897, -qJD(3) * t5 + qJD(5) * t8 - qJD(6) * t288 + t73 - t909, -qJD(3) * t17 - qJD(5) * t23 + t317 - t813 + t898, -qJD(3) * t1 - qJD(4) * t21 - qJD(5) * t3 - qJD(6) * t31 - t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t759, t569 * qJD(3), 0, 0, 0, -pkin(2) * t816, -pkin(2) * t815, qJD(3) * t169 + qJD(4) * t470, qJD(3) * t216 + qJD(4) * t302, t838 * t1008, t789 * t1041, 0, 0, 0, qJD(3) * t222 + t1008 * t811, qJD(3) * t223 + t455 * t811, qJD(3) * t93 + qJD(5) * t102 + t1008 * t799, qJD(3) * t48 + qJD(4) * t191, qJD(3) * t94 + qJD(5) * t103 + qJD(6) * t1037, qJD(3) * t41 + qJD(4) * t97 + qJD(5) * t44 - t257 * t810; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t653, t999, -t739 * t604, t739 * t602, t582, -pkin(8) * t815 - t672, pkin(8) * t816 - t673 (-t543 * t600 + t544 * t925) * t928 - t707 (t473 * t600 + t475 * t925) * t928 + t421 * qJD(4) + t704, t657, t705, -t827 + t838, -t829 - t840, t582, -t703 + t851, -t686 + t702, -t715 + t851 (-t1008 * t520 + t455 * t525) * qJD(3) + t78 * qJD(5) + t799 + t721, t686 + t716 (t263 * t525 + t265 * t520) * qJD(3) + t123 * qJD(4) + t29 * qJD(5) + t149 * qJD(6) + t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t691, qJD(3) * t421 + t701, 0, 0, 0, 0, 0, t1016, t804, t1016, t706, -t804, qJD(3) * t123 - qJD(6) * t448 - t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t655, t694, t159, -qJD(3) * t375 - qJD(5) * t1008 + t828, t582, -t661 + t777, -t662 - t687, -t712 + t777, t78 * qJD(3) + qJD(5) * t724 + t799 + t927, t687 - t711, t29 * qJD(3) + (-pkin(5) * t266 - qJ(6) * t264) * qJD(5) + t266 * qJD(6) + t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t659, t159, t219, -t663 - t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t644, t643 (-t602 * t792 + t819) * t605 (-t767 - t821) * t605, t583, -qJD(2) * t469 + t824, -qJD(2) * t468 - t825, qJD(2) * t37 - t857, qJD(2) * t39 + qJD(4) * t364 - t855, -t658, -t708, t152, t1007, t583, qJD(2) * t33 + t918 + t995, qJD(2) * t34 + t697 - t917, -qJD(2) * t19 - t924 + t995, qJD(2) * t5 + qJD(5) * t68 - t907, t17 * qJD(2) - t697 - t809 + t882, qJD(2) * t1 - qJD(4) * t98 + qJD(5) * t10 - qJD(6) * t56 - t913; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t653, -t999, t604 * t791, -t602 * t791, t581, t672, t673, t707, qJD(4) * t422 - t704, -t657, -t705, t827, -t432 + t829, t581, t703 + t852, -t684 - t702, t715 + t852, qJD(5) * t79 - t721, t684 - t716, -qJD(4) * t122 + qJD(5) * t30 + qJD(6) * t150 - t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t515, t797, -t515, 0, t790, qJD(5) * t324 + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t690, 0, 0, 0, 0, 0, -t298, -t300, -t298, 0, t300, -t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t689, 0, t1015, t797 - t781, t1015, t713, t781 + t790 (-pkin(5) * t531 - qJ(6) * t530) * qJD(5) + t508 + t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t562, t520 * t789 + t1004; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t692, qJD(2) * t87 - qJD(3) * t364 - t834, 0, 0, 0, 0, 0, t1006, -t636, t1006, -t709, t636, qJD(2) * t21 + qJD(3) * t98 + qJD(5) * t135 - qJD(6) * t339 - t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t691, -qJD(3) * t422 - t701, 0, 0, 0, 0, 0, t1017, -t1005, t1017, -t706, t1005, qJD(3) * t122 + qJD(5) * t184 - qJD(6) * t375 + t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t690, 0, 0, 0, 0, 0, t298, t300, t298, 0, -t300, t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, t300, t210, 0, -t300, t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t656, -t695, t151, t411 * qJD(3) - t1048 - t377, t583, qJD(2) * t52 + t915 + t998, qJD(2) * t53 + t700 - t916, qJD(2) * t25 - t923 + t998, -qJD(2) * t8 - qJD(3) * t68 - t908, t23 * qJD(2) - t700 - t809 + t881, -qJ(6) * t809 + t3 * qJD(2) - t10 * qJD(3) - t135 * qJD(4) - t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t655, -t694, t214, qJD(3) * t448 - t828, t581, t661 + t854, t662 - t688, t712 + t854, -qJD(3) * t79 - t927, t688 + t711, -qJD(3) * t30 - qJD(4) * t184 - t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t689, 0, t1014, t781, t1014, -t713, qJD(6) - t781, t595 - t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210, -t300, -t210, 0, t300, -t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t562, -t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t170 - t768, t151, t1000, t31 * qJD(2) + t56 * qJD(3) + t605 * t835 + t330 + t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t659, t214, -t219, t663 - t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, -qJD(3) * t520 - t1004 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t47;
