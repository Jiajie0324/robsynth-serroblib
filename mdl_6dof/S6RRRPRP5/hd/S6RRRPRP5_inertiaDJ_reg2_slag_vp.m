% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPRP5_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:51:34
% EndTime: 2019-03-09 16:51:48
% DurationCPUTime: 4.83s
% Computational Cost: add. (7604->375), mult. (18447->646), div. (0->0), fcn. (16783->8), ass. (0->175)
t136 = sin(qJ(3));
t138 = cos(qJ(3));
t231 = sin(pkin(10));
t191 = qJD(3) * t231;
t232 = cos(pkin(10));
t192 = qJD(3) * t232;
t226 = t136 * t192 + t138 * t191;
t171 = t136 * t231 - t138 * t232;
t185 = pkin(3) * t232 + pkin(4);
t209 = t231 * pkin(3);
t243 = sin(qJ(5));
t244 = cos(qJ(5));
t247 = -t185 * t244 + t209 * t243;
t164 = -t136 * t191 + t138 * t192;
t155 = t136 * t232 + t138 * t231;
t137 = sin(qJ(2));
t220 = qJD(3) * t138;
t139 = cos(qJ(2));
t222 = qJD(2) * t139;
t246 = t136 * t222 + t137 * t220;
t245 = -0.4e1 * t137;
t66 = t155 * t243 + t171 * t244;
t132 = t136 ^ 2;
t134 = t138 ^ 2;
t225 = t132 - t134;
t190 = qJD(3) * t225;
t130 = qJD(2) * t137;
t193 = qJD(2) * t231;
t182 = t139 * t193;
t194 = qJD(2) * t232;
t183 = t139 * t194;
t152 = t136 * t182 + t137 * t226 - t138 * t183;
t228 = t138 * t139;
t124 = pkin(7) * t228;
t218 = t138 * qJD(4);
t179 = pkin(2) * t137 - pkin(8) * t139;
t162 = t179 * qJD(2);
t205 = t136 * t130;
t233 = pkin(7) * t205 + t138 * t162;
t236 = -qJ(4) - pkin(8);
t240 = t139 * pkin(2);
t241 = t137 * pkin(3);
t41 = -t137 * t218 + (-qJ(4) * t228 + t241) * qJD(2) + (-t124 + (-t137 * t236 + pkin(1) + t240) * t136) * qJD(3) + t233;
t229 = t137 * t138;
t180 = -pkin(8) * t137 - t240;
t169 = -pkin(1) + t180;
t100 = t138 * t169;
t234 = -qJD(3) * t100 - t136 * t162;
t45 = (-pkin(7) * qJD(2) - qJ(4) * qJD(3)) * t229 + (-t137 * qJD(4) + (-pkin(7) * qJD(3) - qJ(4) * qJD(2)) * t139) * t136 - t234;
t25 = -t231 * t45 + t232 * t41;
t146 = pkin(4) * t130 + pkin(9) * t152 + t25;
t151 = -t136 * t183 - t137 * t164 - t138 * t182;
t26 = t231 * t41 + t232 * t45;
t17 = pkin(9) * t151 + t26;
t242 = pkin(7) * t136;
t68 = -qJ(4) * t229 + t100 + (-pkin(3) - t242) * t139;
t230 = t136 * t137;
t82 = t136 * t169 + t124;
t71 = -qJ(4) * t230 + t82;
t46 = -t231 * t71 + t232 * t68;
t90 = t171 * t137;
t34 = -pkin(4) * t139 + pkin(9) * t90 + t46;
t227 = t155 * t137;
t47 = t231 * t68 + t232 * t71;
t39 = -pkin(9) * t227 + t47;
t235 = t243 * t34 + t244 * t39;
t4 = -qJD(5) * t235 + t146 * t244 - t17 * t243;
t140 = 2 * qJD(6);
t173 = t231 * t236;
t174 = t232 * t236;
t145 = (-pkin(9) * t231 + t173) * t138 + (-pkin(9) * t232 + t174) * t136;
t144 = t244 * t145;
t73 = t171 * t236;
t63 = -pkin(9) * t171 + t73;
t37 = t243 * t63 - t144;
t94 = t185 * t243 + t209 * t244;
t85 = t94 * qJD(5);
t239 = t37 * t85;
t60 = -t227 * t243 - t244 * t90;
t238 = t85 * t60;
t67 = t155 * t244 - t171 * t243;
t237 = t85 * t67;
t103 = pkin(3) * t230 + pkin(7) * t137;
t133 = t137 ^ 2;
t224 = -t139 ^ 2 + t133;
t223 = qJD(2) * t138;
t221 = qJD(3) * t136;
t219 = qJD(3) * t139;
t217 = t139 * qJD(6);
t28 = qJD(5) * t60 - t151 * t244 - t152 * t243;
t175 = t244 * t227;
t59 = -t243 * t90 + t175;
t216 = 0.2e1 * t59 * t28;
t43 = qJD(5) * t67 + t164 * t243 + t226 * t244;
t215 = 0.2e1 * t66 * t43;
t214 = -0.2e1 * pkin(1) * qJD(2);
t213 = -0.2e1 * pkin(2) * qJD(3);
t212 = t139 * t242;
t211 = pkin(5) * t130;
t129 = pkin(3) * t221;
t128 = pkin(7) * t222;
t77 = pkin(3) * t246 + t128;
t127 = -t138 * pkin(3) - pkin(2);
t198 = qJD(3) * t236;
t156 = t136 * t198 + t218;
t157 = -t136 * qJD(4) + t138 * t198;
t61 = -t156 * t231 + t157 * t232;
t141 = pkin(9) * t164 - t61;
t62 = t156 * t232 + t157 * t231;
t142 = -pkin(9) * t226 + t62;
t199 = qJD(5) * t243;
t11 = -qJD(5) * t144 + t141 * t243 - t142 * t244 + t199 * t63;
t143 = t243 * t145;
t200 = qJD(5) * t244;
t12 = qJD(5) * t143 + t141 * t244 + t142 * t243 + t200 * t63;
t38 = t244 * t63 + t143;
t210 = -t11 * t38 + t12 * t37;
t208 = t136 * t219;
t206 = t138 * t219;
t203 = t136 * t220;
t202 = t137 * t222;
t201 = t138 * t222;
t189 = t224 * qJD(2);
t188 = 0.2e1 * t202;
t187 = t136 * t201;
t186 = t133 * t203;
t27 = qJD(5) * t175 - t151 * t243 + t152 * t244 - t199 * t90;
t178 = t27 * t59 - t28 * t60;
t177 = t28 * t66 + t43 * t59;
t42 = qJD(5) * t66 - t244 * t164 + t243 * t226;
t176 = t42 * t66 - t43 * t67;
t75 = pkin(4) * t226 + t129;
t81 = t100 - t212;
t172 = -t136 * t82 - t138 * t81;
t69 = pkin(4) * t227 + t103;
t168 = t11 * t139 + t130 * t38;
t167 = t12 * t139 - t130 * t37;
t166 = t130 * t59 - t139 * t28;
t165 = t130 * t66 - t139 * t43;
t163 = t11 * t59 + t12 * t60 - t27 * t37 - t28 * t38;
t21 = -t243 * t39 + t244 * t34;
t3 = -t146 * t243 - t17 * t244 + t199 * t39 - t200 * t34;
t159 = t137 * t223 + t208;
t84 = t247 * qJD(5);
t154 = 0.2e1 * t11 * t66 + 0.2e1 * t12 * t67 - 0.2e1 * t37 * t42 - 0.2e1 * t38 * t43;
t126 = qJ(6) * t130;
t153 = t126 - t3;
t150 = t27 * t66 - t28 * t67 + t42 * t59 - t43 * t60;
t83 = pkin(4) * t171 + t127;
t52 = pkin(7) * t159 + t234;
t53 = -qJD(3) * t82 + t233;
t148 = qJD(3) * t172 - t53 * t136 - t52 * t138;
t48 = -pkin(4) * t151 + t77;
t147 = t85 * t139 + t4;
t118 = -0.2e1 * t202;
t91 = -pkin(5) + t247;
t89 = qJ(6) + t94;
t80 = qJD(6) - t84;
t78 = 0.2e1 * t85;
t74 = t137 * t190 - t187;
t72 = t136 * t174 + t138 * t173;
t35 = t66 * pkin(5) - t67 * qJ(6) + t83;
t31 = -0.2e1 * t67 * t42;
t30 = t130 * t67 + t139 * t42;
t29 = pkin(5) * t59 - qJ(6) * t60 + t69;
t23 = -0.2e1 * t60 * t27;
t20 = pkin(5) * t139 - t21;
t19 = -qJ(6) * t139 + t235;
t18 = 0.2e1 * t130 * t60 + 0.2e1 * t139 * t27;
t13 = pkin(5) * t43 + qJ(6) * t42 - qJD(6) * t67 + t75;
t7 = -t27 * t67 - t42 * t60;
t5 = pkin(5) * t28 + qJ(6) * t27 - qJD(6) * t60 + t48;
t2 = -t211 - t4;
t1 = t153 - t217;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, -0.2e1 * t189, 0, t118, 0, 0, t137 * t214, t139 * t214, 0, 0, 0.2e1 * t134 * t202 - 0.2e1 * t186, 0.2e1 * t133 * t190 + t187 * t245, 0.2e1 * t137 * t208 + 0.2e1 * t223 * t224, 0.2e1 * t132 * t202 + 0.2e1 * t186, -0.2e1 * t136 * t189 + 0.2e1 * t137 * t206, t118, 0.2e1 * t81 * t130 - 0.2e1 * t53 * t139 + 0.2e1 * (t133 * t220 + t136 * t188) * pkin(7), -0.2e1 * t82 * t130 - 0.2e1 * t52 * t139 + 0.2e1 * (-t133 * t221 + t138 * t188) * pkin(7), 0.2e1 * t172 * t222 + 0.2e1 * (t136 * t52 - t138 * t53 + (t136 * t81 - t138 * t82) * qJD(3)) * t137, 0.2e1 * pkin(7) ^ 2 * t202 - 0.2e1 * t52 * t82 + 0.2e1 * t53 * t81, 0.2e1 * t90 * t152, -0.2e1 * t151 * t90 + 0.2e1 * t152 * t227, -0.2e1 * t130 * t90 + 0.2e1 * t139 * t152, -0.2e1 * t227 * t151, -0.2e1 * t130 * t227 - 0.2e1 * t139 * t151, t118, -0.2e1 * t103 * t151 + 0.2e1 * t130 * t46 - 0.2e1 * t25 * t139 + 0.2e1 * t227 * t77, -0.2e1 * t103 * t152 - 0.2e1 * t130 * t47 + 0.2e1 * t26 * t139 - 0.2e1 * t77 * t90, 0.2e1 * t151 * t47 + 0.2e1 * t152 * t46 - 0.2e1 * t227 * t26 + 0.2e1 * t25 * t90, 0.2e1 * t103 * t77 + 0.2e1 * t25 * t46 + 0.2e1 * t26 * t47, t23, 0.2e1 * t178, t18, t216, -0.2e1 * t166, t118, 0.2e1 * t130 * t21 - 0.2e1 * t139 * t4 + 0.2e1 * t28 * t69 + 0.2e1 * t48 * t59, -0.2e1 * t130 * t235 - 0.2e1 * t139 * t3 - 0.2e1 * t27 * t69 + 0.2e1 * t48 * t60, 0.2e1 * t21 * t27 - 0.2e1 * t235 * t28 + 0.2e1 * t3 * t59 - 0.2e1 * t4 * t60, 0.2e1 * t21 * t4 - 0.2e1 * t235 * t3 + 0.2e1 * t48 * t69, t23, t18, -0.2e1 * t178, t118, 0.2e1 * t166, t216, -0.2e1 * t130 * t20 + 0.2e1 * t139 * t2 + 0.2e1 * t28 * t29 + 0.2e1 * t5 * t59, -0.2e1 * t1 * t59 - 0.2e1 * t19 * t28 + 0.2e1 * t2 * t60 - 0.2e1 * t20 * t27, -0.2e1 * t1 * t139 + 0.2e1 * t130 * t19 + 0.2e1 * t27 * t29 - 0.2e1 * t5 * t60, 0.2e1 * t1 * t19 + 0.2e1 * t2 * t20 + 0.2e1 * t29 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, 0, -t130, 0, -t128, pkin(7) * t130, 0, 0, -t74, t203 * t245 - t222 * t225, t205 - t206, t74, t159, 0 (pkin(8) * t228 + (-pkin(2) * t138 + t242) * t137) * qJD(3) + (t136 * t180 - t124) * qJD(2) (pkin(7) * t229 + t136 * t179) * qJD(3) + (t138 * t180 + t212) * qJD(2), t148, -pkin(2) * t128 + pkin(8) * t148, -t152 * t155 - t164 * t90, t151 * t155 + t152 * t171 - t164 * t227 + t226 * t90, t130 * t155 - t139 * t164, -t151 * t171 + t226 * t227, -t130 * t171 + t139 * t226, 0, t103 * t226 - t127 * t151 + t129 * t227 + t130 * t72 - t61 * t139 + t171 * t77, t103 * t164 - t127 * t152 - t129 * t90 - t130 * t73 + t62 * t139 + t155 * t77, t151 * t73 + t152 * t72 - t155 * t25 - t164 * t46 - t171 * t26 - t226 * t47 - t227 * t62 + t61 * t90, t103 * t129 + t127 * t77 + t25 * t72 + t26 * t73 + t46 * t61 + t47 * t62, t7, t150, t30, t177, -t165, 0, t28 * t83 + t43 * t69 + t48 * t66 + t59 * t75 + t167, -t27 * t83 - t42 * t69 + t48 * t67 + t60 * t75 - t168, t21 * t42 - t235 * t43 + t3 * t66 - t4 * t67 + t163, -t11 * t235 - t12 * t21 - t3 * t38 - t37 * t4 + t48 * t83 + t69 * t75, t7, t30, -t150, 0, t165, t177, t13 * t59 + t28 * t35 + t29 * t43 + t5 * t66 + t167, -t1 * t66 - t19 * t43 + t2 * t67 - t20 * t42 + t163, -t13 * t60 + t27 * t35 + t29 * t42 - t5 * t67 + t168, t1 * t38 - t11 * t19 + t12 * t20 + t13 * t29 + t2 * t37 + t35 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t203, -0.2e1 * t190, 0, -0.2e1 * t203, 0, 0, t136 * t213, t138 * t213, 0, 0, 0.2e1 * t155 * t164, -0.2e1 * t155 * t226 - 0.2e1 * t164 * t171, 0, 0.2e1 * t171 * t226, 0, 0, 0.2e1 * t127 * t226 + 0.2e1 * t129 * t171, 0.2e1 * t127 * t164 + 0.2e1 * t129 * t155, -0.2e1 * t155 * t61 - 0.2e1 * t164 * t72 - 0.2e1 * t171 * t62 - 0.2e1 * t226 * t73, 0.2e1 * t127 * t129 + 0.2e1 * t61 * t72 + 0.2e1 * t62 * t73, t31, 0.2e1 * t176, 0, t215, 0, 0, 0.2e1 * t43 * t83 + 0.2e1 * t66 * t75, -0.2e1 * t42 * t83 + 0.2e1 * t67 * t75, t154, 0.2e1 * t75 * t83 + 0.2e1 * t210, t31, 0, -0.2e1 * t176, 0, 0, t215, 0.2e1 * t13 * t66 + 0.2e1 * t35 * t43, t154, -0.2e1 * t13 * t67 + 0.2e1 * t35 * t42, 0.2e1 * t13 * t35 + 0.2e1 * t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137 * t221 + t201, 0, -t246, t130, t53, t52, 0, 0, 0, 0, -t152, 0, t151, t130, t194 * t241 + t25, -t193 * t241 - t26 (t151 * t231 + t152 * t232) * pkin(3) (t231 * t26 + t232 * t25) * pkin(3), 0, 0, -t27, 0, -t28, t130, -t130 * t247 + t147, -t130 * t94 - t139 * t84 + t3, -t247 * t27 - t28 * t94 + t59 * t84 + t238, -t21 * t85 - t235 * t84 - t247 * t4 - t3 * t94, 0, -t27, 0, t130, t28, 0 (pkin(5) - t91) * t130 + t147, -t27 * t91 - t28 * t89 - t59 * t80 + t238, t89 * t130 + (-qJD(6) - t80) * t139 + t153, t1 * t89 + t19 * t80 + t2 * t91 + t20 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, 0, -t221, 0, -pkin(8) * t220, pkin(8) * t221, 0, 0, 0, 0, t164, 0, -t226, 0, t61, -t62 (-t164 * t232 - t226 * t231) * pkin(3) (t231 * t62 + t232 * t61) * pkin(3), 0, 0, -t42, 0, -t43, 0, -t12, t11, -t247 * t42 - t43 * t94 + t66 * t84 + t237, -t11 * t94 + t12 * t247 - t38 * t84 + t239, 0, -t42, 0, 0, t43, 0, -t12, -t42 * t91 - t43 * t89 - t66 * t80 + t237, -t11, -t11 * t89 + t12 * t91 + t38 * t80 + t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78, 0.2e1 * t84, 0, 0.2e1 * t247 * t85 - 0.2e1 * t84 * t94, 0, 0, 0, 0, 0, 0, -t78, 0, 0.2e1 * t80, 0.2e1 * t80 * t89 + 0.2e1 * t85 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t152, 0, t77, 0, 0, 0, 0, 0, 0, t28, -t27, 0, t48, 0, 0, 0, 0, 0, 0, t28, 0, t27, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, t164, 0, t129, 0, 0, 0, 0, 0, 0, t43, -t42, 0, t75, 0, 0, 0, 0, 0, 0, t43, 0, t42, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, 0, -t28, t130, t4, t3, 0, 0, 0, -t27, 0, t130, t28, 0, t4 + 0.2e1 * t211, pkin(5) * t27 - qJ(6) * t28 - qJD(6) * t59, 0.2e1 * t126 - t3 - 0.2e1 * t217, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, -t43, 0, -t12, t11, 0, 0, 0, -t42, 0, 0, t43, 0, -t12, pkin(5) * t42 - qJ(6) * t43 - qJD(6) * t66, -t11, -pkin(5) * t12 - qJ(6) * t11 + qJD(6) * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t84, 0, 0, 0, 0, 0, 0, 0, 0, -t85, 0, t140 - t84, -pkin(5) * t85 + qJ(6) * t80 + qJD(6) * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, qJ(6) * t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, -t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
