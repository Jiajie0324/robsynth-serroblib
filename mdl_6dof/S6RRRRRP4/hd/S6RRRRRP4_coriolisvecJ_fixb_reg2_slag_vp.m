% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:15:41
% EndTime: 2019-03-10 01:16:02
% DurationCPUTime: 8.25s
% Computational Cost: add. (20269->627), mult. (48100->763), div. (0->0), fcn. (35034->8), ass. (0->305)
t287 = sin(qJ(3));
t288 = sin(qJ(2));
t381 = qJD(1) * t288;
t361 = t287 * t381;
t290 = cos(qJ(2));
t445 = cos(qJ(3));
t364 = t445 * t290;
t232 = -qJD(1) * t364 + t361;
t229 = qJD(4) + t232;
t223 = qJD(5) + t229;
t247 = t287 * t290 + t288 * t445;
t234 = t247 * qJD(1);
t282 = qJD(2) + qJD(3);
t286 = sin(qJ(4));
t289 = cos(qJ(4));
t209 = t234 * t289 + t282 * t286;
t285 = sin(qJ(5));
t323 = t286 * t234 - t282 * t289;
t444 = cos(qJ(5));
t317 = t209 * t444 - t285 * t323;
t356 = t445 * qJD(3);
t304 = t290 * (t445 * qJD(2) + t356);
t376 = qJD(1) * qJD(2);
t353 = t288 * t376;
t383 = qJD(3) * t361 + t287 * t353;
t462 = -qJD(1) * t304 + t383;
t295 = t289 * t462;
t140 = qJD(4) * t323 + t295;
t378 = qJD(4) * t289;
t379 = qJD(4) * t286;
t367 = t234 * t378 + t282 * t379 - t286 * t462;
t66 = qJD(5) * t317 - t285 * t140 + t444 * t367;
t469 = -t317 * t223 + t66;
t363 = t444 * t286;
t393 = t285 * t289;
t246 = t363 + t393;
t451 = qJD(4) + qJD(5);
t201 = t451 * t246;
t466 = t246 * t232 + t201;
t355 = t444 * qJD(4);
t339 = t289 * t355;
t354 = t444 * qJD(5);
t394 = t285 * t286;
t362 = t444 * t289;
t453 = t362 - t394;
t465 = t453 * t232 + t289 * t354 - t394 * t451 + t339;
t146 = t209 * t285 + t323 * t444;
t447 = -pkin(8) - pkin(7);
t261 = t447 * t290;
t252 = qJD(1) * t261;
t235 = t287 * t252;
t259 = t447 * t288;
t250 = qJD(1) * t259;
t438 = qJD(2) * pkin(2);
t239 = t250 + t438;
t195 = t239 * t445 + t235;
t172 = -t282 * pkin(3) - t195;
t141 = pkin(4) * t323 + t172;
t71 = t146 * pkin(5) - qJ(6) * t317 + t141;
t470 = t146 * t71;
t468 = t141 * t146;
t467 = t146 * t317;
t237 = t445 * t252;
t197 = t250 * t287 - t237;
t380 = qJD(3) * t287;
t335 = pkin(2) * t380 - t197;
t391 = t287 * t288;
t202 = t282 * t391 - t304;
t315 = -t202 * t286 + t247 * t378;
t448 = t317 ^ 2;
t358 = t146 ^ 2 - t448;
t377 = qJD(5) * t285;
t65 = t444 * t140 + t209 * t377 + t285 * t367 + t323 * t354;
t463 = t146 * t223 - t65;
t90 = pkin(5) * t317 + qJ(6) * t146;
t461 = -0.2e1 * t376;
t190 = pkin(3) * t234 + pkin(9) * t232;
t373 = pkin(2) * t381;
t171 = t190 + t373;
t198 = t250 * t445 + t235;
t126 = t289 * t171 - t198 * t286;
t398 = t232 * t289;
t336 = t234 * pkin(4) + pkin(10) * t398;
t100 = t126 + t336;
t127 = t286 * t171 + t289 * t198;
t399 = t232 * t286;
t375 = pkin(10) * t399;
t110 = t375 + t127;
t443 = pkin(2) * t287;
t274 = pkin(9) + t443;
t439 = -pkin(10) - t274;
t242 = t439 * t286;
t281 = t289 * pkin(10);
t243 = t274 * t289 + t281;
t189 = t285 * t242 + t243 * t444;
t343 = pkin(2) * t356;
t328 = t289 * t343;
t352 = qJD(4) * t439;
t214 = t286 * t352 + t328;
t329 = t286 * t343;
t300 = t289 * t352 - t329;
t432 = qJD(5) * t189 + (t100 - t300) * t444 + (-t110 + t214) * t285;
t130 = t289 * t190 - t195 * t286;
t101 = t130 + t336;
t131 = t286 * t190 + t289 * t195;
t114 = t375 + t131;
t446 = -pkin(10) - pkin(9);
t258 = t446 * t286;
t260 = pkin(9) * t289 + t281;
t212 = t285 * t258 + t260 * t444;
t365 = qJD(4) * t446;
t254 = t286 * t365;
t426 = qJD(5) * t212 + t101 * t444 - t339 * t446 + (-t114 + t254) * t285;
t245 = -t364 + t391;
t278 = -pkin(2) * t290 - pkin(1);
t194 = pkin(3) * t245 - pkin(9) * t247 + t278;
t213 = t287 * t259 - t261 * t445;
t142 = t289 * t194 - t213 * t286;
t395 = t247 * t289;
t111 = pkin(4) * t245 - pkin(10) * t395 + t142;
t206 = t289 * t213;
t143 = t286 * t194 + t206;
t396 = t247 * t286;
t124 = -pkin(10) * t396 + t143;
t456 = t285 * t111 + t444 * t124;
t455 = t445 * t259 + t287 * t261;
t220 = pkin(4) * t399;
t454 = t220 + t335;
t257 = qJD(1) * t278;
t169 = pkin(3) * t232 - pkin(9) * t234 + t257;
t196 = t287 * t239 - t237;
t173 = t282 * pkin(9) + t196;
t118 = t289 * t169 - t173 * t286;
t119 = t169 * t286 + t173 * t289;
t452 = -t118 * t286 + t119 * t289;
t279 = pkin(4) * t379;
t450 = t466 * pkin(5) - t465 * qJ(6) - qJD(6) * t246 + t279;
t203 = t282 * t247;
t187 = t203 * qJD(1);
t185 = t187 * pkin(5);
t372 = t288 * t438;
t125 = t383 * pkin(9) + t187 * pkin(3) + (-pkin(9) * t304 + t372) * qJD(1);
t366 = qJD(2) * t447;
t340 = qJD(1) * t366;
t240 = t288 * t340;
t241 = t290 * t340;
t132 = t239 * t356 + t240 * t445 + t287 * t241 + t252 * t380;
t47 = -qJD(4) * t119 + t289 * t125 - t132 * t286;
t26 = pkin(4) * t187 + pkin(10) * t140 + t47;
t46 = t286 * t125 + t289 * t132 + t169 * t378 - t173 * t379;
t29 = -pkin(10) * t367 + t46;
t97 = -pkin(10) * t209 + t118;
t89 = pkin(4) * t229 + t97;
t98 = -pkin(10) * t323 + t119;
t350 = -t444 * t26 + t285 * t29 + t98 * t354 + t89 * t377;
t4 = -t185 + t350;
t308 = t317 * t71 + t4;
t449 = -t141 * t317 - t350;
t55 = t146 * t234 + t187 * t453 - t223 * t466;
t139 = pkin(3) * t203 + pkin(9) * t202 + t372;
t251 = t288 * t366;
t253 = t290 * t366;
t153 = t455 * qJD(3) + t445 * t251 + t287 * t253;
t348 = t289 * t139 - t153 * t286;
t407 = t202 * t289;
t36 = pkin(10) * t407 + pkin(4) * t203 + (-t206 + (pkin(10) * t247 - t194) * t286) * qJD(4) + t348;
t67 = t286 * t139 + t289 * t153 + t194 * t378 - t213 * t379;
t45 = -pkin(10) * t315 + t67;
t14 = -qJD(5) * t456 - t285 * t45 + t36 * t444;
t9 = -t146 * t465 - t246 * t66 - t317 * t466 - t453 * t65;
t441 = t234 * pkin(5);
t440 = t289 * pkin(4);
t370 = t444 * t98;
t42 = t285 * t89 + t370;
t437 = t223 * t42;
t436 = t285 * t98;
t44 = t46 * t289;
t60 = t285 * t100 + t444 * t110;
t64 = t285 * t101 + t444 * t114;
t115 = t214 * t444 + t242 * t354 - t243 * t377 + t285 * t300;
t227 = t234 * qJ(6);
t51 = t227 + t60;
t435 = t115 - t51;
t434 = t115 - t60;
t433 = t441 + t432;
t431 = t450 + t454;
t157 = -t220 + t196;
t430 = -t157 + t450;
t316 = t258 * t444 - t285 * t260;
t151 = qJD(5) * t316 + t254 * t444 + t365 * t393;
t56 = t227 + t64;
t429 = t151 - t56;
t428 = t151 - t64;
t427 = t441 + t426;
t49 = t444 * t97 - t436;
t425 = pkin(4) * t354 + qJD(6) - t49;
t346 = t287 * t240 - t445 * t241;
t133 = qJD(3) * t196 + t346;
t422 = t133 * t455;
t421 = t140 * t286;
t188 = -t242 * t444 + t243 * t285;
t414 = t187 * t188;
t413 = t187 * t189;
t412 = t187 * t316;
t411 = t187 * t212;
t159 = t187 * t245;
t410 = t187 * t286;
t409 = t187 * t289;
t406 = t323 * t229;
t405 = t323 * t286;
t404 = t209 * t323;
t403 = t209 * t229;
t402 = t209 * t289;
t401 = t223 * t234;
t400 = t229 * t234;
t397 = t234 * t232;
t292 = qJD(1) ^ 2;
t390 = t290 * t292;
t291 = qJD(2) ^ 2;
t389 = t291 * t288;
t388 = t291 * t290;
t41 = t444 * t89 - t436;
t387 = qJD(6) - t41;
t386 = t279 + t454;
t382 = t288 ^ 2 - t290 ^ 2;
t374 = t445 * pkin(2);
t371 = -t118 * t398 - t119 * t399 + t44;
t369 = t247 * t394;
t368 = t288 * t390;
t277 = -pkin(3) - t440;
t360 = t247 * t379;
t351 = -t285 * t26 - t444 * t29 - t89 * t354 + t98 * t377;
t349 = pkin(1) * t461;
t345 = t229 * t286;
t344 = t229 * t289;
t276 = -t374 - pkin(3);
t342 = -t115 * t146 - t188 * t65 - t189 * t66;
t341 = -t151 * t146 - t212 * t66 + t316 * t65;
t338 = t290 * t353;
t48 = t285 * t97 + t370;
t337 = pkin(4) * t377 - t48;
t334 = -t157 + t279;
t333 = t367 * t289;
t332 = t119 * t234 + t133 * t286 + t172 * t378;
t170 = pkin(4) * t396 - t455;
t179 = t246 * t247;
t78 = -t202 * t363 - t285 * t360 - qJD(5) * t369 + (-t202 * t285 + (t355 + t354) * t247) * t289;
t331 = t146 * t78 + t179 * t66;
t327 = t118 * t289 + t119 * t286;
t324 = t172 * t232 - t187 * t274;
t181 = t187 * qJ(6);
t216 = t223 * qJD(6);
t2 = t181 + t216 - t351;
t322 = t223 * t41 + t351;
t320 = -t118 * t234 - t133 * t289 + t172 * t379;
t319 = -t257 * t234 - t346;
t72 = t111 * t444 - t285 * t124;
t314 = -t360 - t407;
t13 = t111 * t354 - t124 * t377 + t285 * t36 + t444 * t45;
t313 = t146 * t466 - t453 * t66;
t83 = pkin(4) * t367 + t133;
t17 = t66 * pkin(5) + t65 * qJ(6) - qJD(6) * t317 + t83;
t39 = -t223 * pkin(5) + t387;
t312 = -t17 * t453 + t234 * t39 + t466 * t71;
t40 = t223 * qJ(6) + t42;
t311 = -t17 * t246 - t234 * t40 - t465 * t71;
t310 = t141 * t465 + t234 * t42 + t83 * t246;
t309 = t141 * t466 - t234 * t41 - t453 * t83;
t191 = -pkin(5) * t453 - t246 * qJ(6) + t277;
t306 = t2 * t453 + t4 * t246 + t39 * t465 - t40 * t466;
t305 = t350 * t246 - t351 * t453 - t41 * t465 - t42 * t466;
t180 = t247 * t362 - t369;
t77 = t201 * t247 + t453 * t202;
t303 = t146 * t77 + t179 * t65 - t180 * t66 - t317 * t78;
t302 = -qJD(4) * t327 - t47 * t286;
t301 = t146 * t203 + t179 * t187 + t223 * t78 + t245 * t66;
t154 = qJD(3) * t213 + t287 * t251 - t445 * t253;
t298 = t302 + t44;
t102 = pkin(4) * t315 + t154;
t294 = t257 * t232 - t132;
t275 = -pkin(4) * t444 - pkin(5);
t271 = pkin(4) * t285 + qJ(6);
t256 = t276 - t440;
t176 = -t374 + t191;
t160 = -t232 ^ 2 + t234 ^ 2;
t155 = t232 * t282 - t462;
t109 = t203 * t223 + t159;
t93 = pkin(5) * t179 - qJ(6) * t180 + t170;
t88 = -t209 * t234 + t229 * t344 + t410;
t87 = -t229 * t345 + t234 * t323 + t409;
t81 = t323 * t345 - t333;
t80 = t209 * t344 - t421;
t79 = pkin(4) * t209 + t90;
t70 = -t245 * pkin(5) - t72;
t69 = qJ(6) * t245 + t456;
t68 = -t143 * qJD(4) + t348;
t53 = t187 * t246 + t223 * t465 - t234 * t317;
t32 = (-t140 - t406) * t289 + (-t367 - t403) * t286;
t21 = -t246 * t65 + t317 * t465;
t20 = -t180 * t65 - t317 * t77;
t19 = t78 * pkin(5) + t77 * qJ(6) - t180 * qJD(6) + t102;
t18 = t180 * t187 + t203 * t317 - t223 * t77 - t245 * t65;
t12 = -t203 * pkin(5) - t14;
t11 = qJ(6) * t203 + qJD(6) * t245 + t13;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t338, t382 * t461, t388, -0.2e1 * t338, -t389, 0, -pkin(7) * t388 + t288 * t349, pkin(7) * t389 + t290 * t349, 0, 0, -t234 * t202 - t247 * t462, -t247 * t187 + t202 * t232 - t234 * t203 + t245 * t462, -t202 * t282, t203 * t232 + t159, -t203 * t282, 0, -t154 * t282 + t187 * t278 + t203 * t257 + (qJD(1) * t245 + t232) * t372, pkin(2) * t247 * t353 - t153 * t282 - t257 * t202 + t234 * t372 - t278 * t462, -t132 * t245 + t133 * t247 - t153 * t232 + t154 * t234 - t213 * t187 + t195 * t202 - t196 * t203 + t455 * t462, t132 * t213 + t153 * t196 - t154 * t195 + 0.2e1 * t257 * t372 - t422, -t140 * t395 + t209 * t314 (t209 * t286 + t289 * t323) * t202 + (-t333 + t421 + (-t402 + t405) * qJD(4)) * t247, -t140 * t245 + t187 * t395 + t203 * t209 + t229 * t314, t315 * t323 + t367 * t396, -t187 * t396 - t203 * t323 - t229 * t315 - t245 * t367, t203 * t229 + t159, t118 * t203 + t133 * t396 + t142 * t187 + t154 * t323 + t172 * t315 + t68 * t229 + t47 * t245 - t367 * t455, -t119 * t203 + t133 * t395 + t140 * t455 - t143 * t187 + t154 * t209 + t172 * t314 - t229 * t67 - t245 * t46, -t67 * t323 - t143 * t367 - t68 * t209 + t142 * t140 + t327 * t202 + (-t452 * qJD(4) - t46 * t286 - t47 * t289) * t247, t118 * t68 + t119 * t67 + t142 * t47 + t143 * t46 + t154 * t172 - t422, t20, t303, t18, t331, -t301, t109, t102 * t146 + t14 * t223 + t141 * t78 + t170 * t66 + t179 * t83 + t187 * t72 + t203 * t41 - t245 * t350, t102 * t317 - t13 * t223 - t141 * t77 - t170 * t65 + t180 * t83 - t187 * t456 - t203 * t42 + t245 * t351, -t13 * t146 - t14 * t317 + t179 * t351 + t180 * t350 + t41 * t77 - t42 * t78 - t456 * t66 + t65 * t72, t102 * t141 + t13 * t42 + t14 * t41 + t170 * t83 - t350 * t72 - t351 * t456, t20, t18, -t303, t109, t301, t331, -t12 * t223 + t146 * t19 + t17 * t179 - t187 * t70 - t203 * t39 - t245 * t4 + t66 * t93 + t71 * t78, -t11 * t146 + t12 * t317 - t179 * t2 + t180 * t4 - t39 * t77 - t40 * t78 - t65 * t70 - t66 * t69, t11 * t223 - t17 * t180 + t187 * t69 - t19 * t317 + t2 * t245 + t203 * t40 + t65 * t93 + t71 * t77, t11 * t40 + t12 * t39 + t17 * t93 + t19 * t71 + t2 * t69 + t4 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, t382 * t292, 0, t368, 0, 0, t292 * pkin(1) * t288, pkin(1) * t390, 0, 0, t397, t160, t155, -t397, 0, 0, -t232 * t373 + t197 * t282 + (t237 + (-pkin(2) * t282 - t239) * t287) * qJD(3) + t319, t198 * t282 + (-t234 * t381 - t282 * t356) * pkin(2) + t294, -t187 * t443 + t462 * t374 + (t196 + t335) * t234 + (-t195 + t198 - t343) * t232, t195 * t197 - t196 * t198 + (-t257 * t381 - t445 * t133 + t132 * t287 + (-t195 * t287 + t196 * t445) * qJD(3)) * pkin(2), t80, t32, t88, t81, t87, -t400, t276 * t367 + t324 * t286 + t335 * t323 + (-t274 * t378 - t126 - t329) * t229 + t320, -t276 * t140 + t324 * t289 + t335 * t209 + (t274 * t379 + t127 - t328) * t229 + t332, t126 * t209 + t127 * t323 + (-t323 * t343 - t274 * t367 + (t209 * t274 - t118) * qJD(4)) * t289 + (t209 * t343 - t274 * t140 - t47 + (t274 * t323 - t119) * qJD(4)) * t286 + t371, -t118 * t126 - t119 * t127 + t133 * t276 - t172 * t197 + (t172 * t287 + t452 * t445) * qJD(3) * pkin(2) + t298 * t274, t21, t9, t53, t313, t55, -t401, t146 * t386 - t223 * t432 + t256 * t66 + t309 - t414, -t223 * t434 - t256 * t65 + t317 * t386 + t310 - t413, t146 * t60 + t317 * t432 + t305 + t342, t141 * t386 + t188 * t350 - t189 * t351 + t256 * t83 - t41 * t432 + t42 * t434, t21, t53, -t9, -t401, -t55, t313, t146 * t431 + t176 * t66 - t223 * t433 + t312 - t414, t146 * t51 + t317 * t433 + t306 + t342, t176 * t65 + t223 * t435 - t317 * t431 + t311 + t413, t17 * t176 + t188 * t4 + t189 * t2 + t39 * t433 + t40 * t435 + t431 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, t160, t155, -t397, 0, 0, t319 + (-qJD(3) + t282) * t196, t195 * t282 + t294, 0, 0, t80, t32, t88, t81, t87, -t400, -pkin(3) * t367 - t130 * t229 - t196 * t323 + t172 * t399 + (-t229 * t378 - t410) * pkin(9) + t320, t172 * t398 + pkin(3) * t140 + t131 * t229 - t196 * t209 + (t229 * t379 - t409) * pkin(9) + t332, t130 * t209 + t131 * t323 + (-t333 - t421 + (t402 + t405) * qJD(4)) * pkin(9) + t302 + t371, -pkin(3) * t133 + pkin(9) * t298 - t118 * t130 - t119 * t131 - t172 * t196, t21, t9, t53, t313, t55, -t401, t146 * t334 - t223 * t426 + t277 * t66 + t309 + t412, -t223 * t428 - t277 * t65 + t317 * t334 + t310 - t411, t146 * t64 + t317 * t426 + t305 + t341, t141 * t334 - t212 * t351 + t277 * t83 - t316 * t350 - t41 * t426 + t42 * t428, t21, t53, -t9, -t401, -t55, t313, t146 * t430 + t191 * t66 - t223 * t427 + t312 + t412, t146 * t56 + t317 * t427 + t306 + t341, t191 * t65 + t223 * t429 - t317 * t430 + t311 + t411, t17 * t191 + t2 * t212 - t316 * t4 + t39 * t427 + t40 * t429 + t430 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, t209 ^ 2 - t323 ^ 2, -t234 * t379 + t282 * t378 - t295 + t406, -t404, -t367 + t403, t187, t119 * t229 - t172 * t209 + t47, t118 * t229 + t172 * t323 - t46, 0, 0, t467, -t358, t463, -t467, -t469, t187, t48 * t223 + (-t146 * t209 + t187 * t444 - t223 * t377) * pkin(4) + t449, t468 + t49 * t223 + (-t187 * t285 - t209 * t317 - t223 * t354) * pkin(4) + t351, t42 * t317 + t49 * t146 - t146 * t41 - t48 * t317 + (t444 * t65 - t285 * t66 + (-t146 * t444 + t285 * t317) * qJD(5)) * pkin(4), t41 * t48 - t42 * t49 + (-t444 * t350 - t141 * t209 - t285 * t351 + (-t285 * t41 + t42 * t444) * qJD(5)) * pkin(4), t467, t463, t358, t187, t469, -t467, -t146 * t79 - t187 * t275 - t223 * t337 - t308, -t271 * t66 - t275 * t65 + (t337 + t40) * t317 + (-t425 + t39) * t146, t187 * t271 + t223 * t425 + t317 * t79 + t2 - t470, t2 * t271 + t275 * t4 + t337 * t39 + t40 * t425 - t71 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t467, -t358, t463, -t467, -t469, t187, t437 + t449, t322 + t468, 0, 0, t467, t463, t358, t187, t469, -t467, -t146 * t90 + t185 - t308 + t437, pkin(5) * t65 - qJ(6) * t66 + (t40 - t42) * t317 + (t39 - t387) * t146, t317 * t90 + 0.2e1 * t181 + 0.2e1 * t216 - t322 - t470, -pkin(5) * t4 + qJ(6) * t2 + t387 * t40 - t39 * t42 - t71 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234 * t282 + t467, t463, -t223 ^ 2 - t448, -t223 * t40 + t308;];
tauc_reg  = t1;
