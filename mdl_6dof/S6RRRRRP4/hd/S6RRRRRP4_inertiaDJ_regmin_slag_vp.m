% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP4_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP4_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP4_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP4_inertiaDJ_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:15:41
% EndTime: 2019-03-10 01:15:50
% DurationCPUTime: 3.16s
% Computational Cost: add. (6831->340), mult. (15158->513), div. (0->0), fcn. (14350->8), ass. (0->188)
t168 = sin(qJ(3));
t169 = sin(qJ(2));
t171 = cos(qJ(2));
t261 = cos(qJ(3));
t136 = t168 * t171 + t169 * t261;
t170 = cos(qJ(4));
t162 = qJD(4) * t170;
t182 = -t168 * t169 + t171 * t261;
t267 = qJD(2) + qJD(3);
t101 = t267 * t182;
t167 = sin(qJ(4));
t239 = t167 * t101;
t181 = t136 * t162 + t239;
t265 = -pkin(8) - pkin(7);
t143 = t265 * t169;
t145 = t265 * t171;
t110 = t143 * t168 - t145 * t261;
t103 = t170 * t110;
t158 = -pkin(2) * t171 - pkin(1);
t94 = -pkin(3) * t182 - pkin(9) * t136 + t158;
t249 = t167 * t94 + t103;
t260 = cos(qJ(5));
t209 = t260 * qJD(5);
t268 = qJD(4) * t260 + t209;
t165 = t170 ^ 2;
t234 = t167 ^ 2 - t165;
t202 = t234 * qJD(4);
t266 = qJD(4) + qJD(5);
t166 = sin(qJ(5));
t204 = -t110 * t167 + t170 * t94;
t242 = t136 * t170;
t258 = t182 * pkin(4);
t38 = -pkin(10) * t242 + t204 - t258;
t243 = t136 * t167;
t50 = -pkin(10) * t243 + t249;
t48 = t260 * t50;
t184 = t166 * t38 + t48;
t102 = t267 * t136;
t230 = t169 * qJD(2);
t223 = pkin(2) * t230;
t59 = pkin(3) * t102 - pkin(9) * t101 + t223;
t219 = qJD(2) * t265;
t138 = t169 * t219;
t198 = t171 * t219;
t211 = qJD(3) * t261;
t233 = qJD(3) * t168;
t70 = -t138 * t261 - t143 * t211 - t145 * t233 - t168 * t198;
t207 = t167 * t70 + t170 * t59;
t237 = t170 * t101;
t13 = -pkin(10) * t237 + t102 * pkin(4) + (-t103 + (pkin(10) * t136 - t94) * t167) * qJD(4) + t207;
t232 = qJD(4) * t167;
t19 = t110 * t232 - t162 * t94 - t167 * t59 + t170 * t70;
t15 = -pkin(10) * t181 - t19;
t208 = -t13 * t260 + t166 * t15;
t6 = -qJD(5) * t184 - t208;
t172 = 2 * qJD(6);
t264 = pkin(10) + pkin(9);
t217 = t260 * t167;
t240 = t166 * t170;
t135 = t217 + t240;
t100 = t266 * t135;
t216 = t260 * t170;
t23 = t100 * t136 - t101 * t216 + t166 * t239;
t215 = t136 * t232;
t241 = t166 * t167;
t221 = t136 * t241;
t24 = t101 * t217 - t166 * t215 - qJD(5) * t221 + (t101 * t166 + t136 * t268) * t170;
t71 = qJD(3) * t110 + t168 * t138 - t198 * t261;
t31 = pkin(4) * t181 + t71;
t84 = t136 * t216 - t221;
t10 = t24 * pkin(5) + t23 * qJ(6) - t84 * qJD(6) + t31;
t108 = -t143 * t261 - t145 * t168;
t78 = pkin(4) * t243 + t108;
t83 = t135 * t136;
t29 = pkin(5) * t83 - qJ(6) * t84 + t78;
t99 = -t170 * t268 + t241 * t266;
t263 = -t10 * t135 + t29 * t99;
t133 = -t216 + t241;
t262 = t10 * t133 + t100 * t29;
t259 = pkin(9) * t102;
t96 = t102 * pkin(5);
t257 = t170 * pkin(4);
t256 = t100 * t78 + t133 * t31;
t255 = t135 * t31 - t78 * t99;
t161 = pkin(2) * t233;
t160 = pkin(4) * t232;
t49 = pkin(5) * t100 + qJ(6) * t99 - qJD(6) * t135 + t160;
t43 = t161 + t49;
t227 = t261 * pkin(2);
t157 = -pkin(3) - t257;
t92 = pkin(5) * t133 - qJ(6) * t135 + t157;
t82 = -t227 + t92;
t254 = t100 * t82 + t133 * t43;
t253 = -t135 * t43 + t82 * t99;
t252 = t100 * t92 + t133 * t49;
t251 = -t135 * t49 + t92 * t99;
t250 = t108 * t162 + t167 * t71;
t139 = t161 + t160;
t156 = -t227 - pkin(3);
t142 = t156 - t257;
t248 = t100 * t142 + t133 * t139;
t247 = t135 * t139 - t142 * t99;
t246 = t100 * t157 + t133 * t160;
t245 = t135 * t160 - t157 * t99;
t244 = t136 * t101;
t238 = t167 * t102;
t236 = t170 * t102;
t235 = t156 * t162 + t161 * t167;
t231 = qJD(5) * t166;
t229 = t171 * qJD(2);
t228 = -0.2e1 * pkin(1) * qJD(2);
t226 = t260 * pkin(4);
t225 = pkin(3) * t232;
t224 = pkin(3) * t162;
t222 = pkin(4) * t231;
t220 = pkin(2) * t168 + pkin(9);
t218 = t264 * qJD(4);
t213 = t167 * t162;
t127 = t182 * qJD(6);
t5 = -t13 * t166 - t15 * t260 - t209 * t38 + t231 * t50;
t95 = t102 * qJ(6);
t2 = -t127 - t5 + t95;
t21 = -qJ(6) * t182 + t184;
t185 = -t166 * t50 + t260 * t38;
t22 = pkin(5) * t182 - t185;
t4 = -t6 - t96;
t212 = -t100 * t21 - t133 * t2 + t135 * t4 - t22 * t99;
t163 = t170 * pkin(10);
t128 = t170 * t220 + t163;
t201 = -pkin(10) - t220;
t187 = t201 * qJD(4);
t200 = pkin(2) * t211;
t193 = t170 * t200;
t175 = t167 * t187 + t193;
t194 = t167 * t200;
t176 = -t170 * t187 + t194;
t189 = t201 * t167;
t178 = t260 * t189;
t41 = -qJD(5) * t178 + t128 * t231 + t166 * t176 - t175 * t260;
t183 = t166 * t189;
t42 = qJD(5) * t183 + t128 * t209 + t166 * t175 + t176 * t260;
t90 = t166 * t128 - t178;
t91 = t128 * t260 + t183;
t206 = -t100 * t91 + t133 * t41 + t135 * t42 - t90 * t99;
t144 = pkin(9) * t170 + t163;
t199 = t264 * t260;
t190 = t167 * t199;
t107 = t166 * t144 + t190;
t109 = t144 * t260 - t241 * t264;
t188 = qJD(4) * t199;
t68 = qJD(5) * t190 + t144 * t231 + t167 * t188 + t218 * t240;
t69 = t144 * t209 + t170 * t188 + (-qJD(5) * t264 - t218) * t241;
t205 = -t100 * t109 - t107 * t99 + t133 * t68 + t135 * t69;
t203 = -0.4e1 * t167 * t242;
t197 = qJD(4) * t220;
t196 = -t102 * t91 - t182 * t41;
t195 = -t102 * t90 + t182 * t42;
t192 = -t102 * t107 + t182 * t69;
t191 = t102 * t109 + t182 * t68;
t186 = t156 * t232 - t161 * t170;
t180 = t215 - t237;
t179 = -t182 * t232 - t236;
t177 = -t156 * t136 - t182 * t220;
t174 = (-t48 + (-t38 + t258) * t166) * qJD(5) - t208;
t173 = -t259 + t156 * t101 + (-t168 * t102 + (t136 * t168 + t182 * t261) * qJD(3)) * pkin(2);
t159 = pkin(4) * t209;
t155 = -t226 - pkin(5);
t152 = pkin(4) * t166 + qJ(6);
t151 = -0.2e1 * t222;
t148 = t159 + qJD(6);
t147 = 0.2e1 * t213;
t132 = -0.2e1 * t202;
t131 = t136 ^ 2;
t97 = t108 * t232;
t77 = -0.2e1 * t135 * t99;
t76 = -0.2e1 * t182 * t102;
t75 = -t162 * t182 + t238;
t58 = -t136 * t202 + t167 * t237;
t51 = pkin(5) * t99 - qJ(6) * t100 - qJD(6) * t133;
t47 = t100 * t182 - t102 * t133;
t46 = t102 * t135 + t182 * t99;
t45 = qJD(4) * t203 - t101 * t234;
t44 = -0.2e1 * t100 * t135 + 0.2e1 * t133 * t99;
t30 = -t100 * t152 - t133 * t148 + t135 * t222 - t155 * t99;
t20 = -qJD(4) * t249 + t207;
t16 = -t135 * t23 - t84 * t99;
t9 = -t100 * t84 + t133 * t23 - t135 * t24 + t83 * t99;
t1 = [0, 0, 0, 0.2e1 * t169 * t229, 0.2e1 * (-t169 ^ 2 + t171 ^ 2) * qJD(2), 0, 0, 0, t169 * t228, t171 * t228, 0.2e1 * t244, 0.2e1 * t101 * t182 - 0.2e1 * t102 * t136, 0, 0, 0, 0.2e1 * t102 * t158 - 0.2e1 * t182 * t223, 0.2e1 * t101 * t158 + 0.2e1 * t136 * t223, -0.2e1 * t131 * t213 + 0.2e1 * t165 * t244, t101 * t203 + 0.2e1 * t131 * t202, 0.2e1 * t136 * t236 + 0.2e1 * t180 * t182, -0.2e1 * t136 * t238 + 0.2e1 * t181 * t182, t76, 0.2e1 * t102 * t204 + 0.2e1 * t108 * t181 - 0.2e1 * t182 * t20 + 0.2e1 * t243 * t71, -0.2e1 * t102 * t249 - 0.2e1 * t108 * t180 - 0.2e1 * t182 * t19 + 0.2e1 * t242 * t71, -0.2e1 * t84 * t23, 0.2e1 * t23 * t83 - 0.2e1 * t24 * t84, 0.2e1 * t102 * t84 + 0.2e1 * t182 * t23, -0.2e1 * t102 * t83 + 0.2e1 * t182 * t24, t76, 0.2e1 * t102 * t185 - 0.2e1 * t182 * t6 + 0.2e1 * t24 * t78 + 0.2e1 * t31 * t83, -0.2e1 * t102 * t184 - 0.2e1 * t182 * t5 - 0.2e1 * t23 * t78 + 0.2e1 * t31 * t84, 0.2e1 * t10 * t83 - 0.2e1 * t102 * t22 + 0.2e1 * t182 * t4 + 0.2e1 * t24 * t29, -0.2e1 * t2 * t83 - 0.2e1 * t21 * t24 - 0.2e1 * t22 * t23 + 0.2e1 * t4 * t84, -0.2e1 * t10 * t84 + 0.2e1 * t102 * t21 - 0.2e1 * t182 * t2 + 0.2e1 * t23 * t29, 0.2e1 * t10 * t29 + 0.2e1 * t2 * t21 + 0.2e1 * t22 * t4; 0, 0, 0, 0, 0, t229, -t230, 0, -pkin(7) * t229, pkin(7) * t230, 0, 0, t101, -t102, 0, -t71, t70, t58, t45, t75, -t179, 0, t97 + (-qJD(4) * t177 - t71) * t170 + t173 * t167, t170 * t173 + t177 * t232 + t250, t16, t9, t46, t47, 0, t139 * t83 + t142 * t24 + t195 + t256, t139 * t84 - t142 * t23 + t196 + t255, t24 * t82 + t43 * t83 + t195 + t262, -t23 * t90 - t24 * t91 + t41 * t83 + t42 * t84 + t212, t23 * t82 - t43 * t84 - t196 + t263, t10 * t82 + t2 * t91 - t21 * t41 + t22 * t42 + t29 * t43 + t4 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t161, -0.2e1 * t200, t147, t132, 0, 0, 0, 0.2e1 * t186, 0.2e1 * t235, t77, t44, 0, 0, 0, 0.2e1 * t248, 0.2e1 * t247, 0.2e1 * t254, 0.2e1 * t206, 0.2e1 * t253, -0.2e1 * t41 * t91 + 0.2e1 * t42 * t90 + 0.2e1 * t43 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, -t102, 0, -t71, t70, t58, t45, t75, -t179, 0, t97 + (-pkin(3) * t101 - t259) * t167 + (-t71 + (-pkin(3) * t136 + pkin(9) * t182) * qJD(4)) * t170, pkin(3) * t180 + pkin(9) * t179 + t250, t16, t9, t46, t47, 0, t157 * t24 + t160 * t83 + t192 + t256, -t157 * t23 + t160 * t84 - t191 + t255, t24 * t92 + t49 * t83 + t192 + t262, -t107 * t23 - t109 * t24 + t68 * t83 + t69 * t84 + t212, t23 * t92 - t49 * t84 + t191 + t263, t10 * t92 + t107 * t4 + t109 * t2 - t21 * t68 + t22 * t69 + t29 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161, -t200, t147, t132, 0, 0, 0, t186 - t225, -t224 + t235, t77, t44, 0, 0, 0, t246 + t248, t245 + t247, t252 + t254, t205 + t206, t251 + t253, t107 * t42 - t109 * t41 + t43 * t92 + t49 * t82 - t68 * t91 + t69 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, t132, 0, 0, 0, -0.2e1 * t225, -0.2e1 * t224, t77, t44, 0, 0, 0, 0.2e1 * t246, 0.2e1 * t245, 0.2e1 * t252, 0.2e1 * t205, 0.2e1 * t251, 0.2e1 * t107 * t69 - 0.2e1 * t109 * t68 + 0.2e1 * t49 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t181, t102, t20, t19, 0, 0, -t23, -t24, t102, t102 * t226 + t174 (-t102 * t166 + t182 * t209) * pkin(4) + t5, -t155 * t102 + t174 + t96, -t148 * t83 - t152 * t24 - t155 * t23 + t222 * t84, t102 * t152 - t148 * t182 + t2, t148 * t21 + t152 * t2 + t155 * t4 + t22 * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t232, 0, -t170 * t197 - t194, t167 * t197 - t193, 0, 0, -t99, -t100, 0, -t42, t41, -t42, t30, -t41, t148 * t91 - t152 * t41 + t155 * t42 + t222 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t232, 0, -pkin(9) * t162, pkin(9) * t232, 0, 0, -t99, -t100, 0, -t69, t68, -t69, t30, -t68, t107 * t222 + t109 * t148 - t152 * t68 + t155 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, -0.2e1 * t159, t151, 0, 0.2e1 * t148, 0.2e1 * t148 * t152 + 0.2e1 * t155 * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, -t24, t102, t6, t5, t6 + 0.2e1 * t96, pkin(5) * t23 - qJ(6) * t24 - qJD(6) * t83, -0.2e1 * t127 - t5 + 0.2e1 * t95, -pkin(5) * t4 + qJ(6) * t2 + qJD(6) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, -t100, 0, -t42, t41, -t42, t51, -t41, -pkin(5) * t42 - qJ(6) * t41 + qJD(6) * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, -t100, 0, -t69, t68, -t69, t51, -t68, -pkin(5) * t69 - qJ(6) * t68 + qJD(6) * t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -t159, -t222, 0, t172 + t159, -pkin(5) * t222 + qJ(6) * t148 + qJD(6) * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, qJ(6) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t23, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, 0, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
