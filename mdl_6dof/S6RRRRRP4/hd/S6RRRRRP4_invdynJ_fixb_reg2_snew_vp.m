% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 04:55
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRRRP4_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP4_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP4_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP4_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP4_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP4_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 04:51:50
% EndTime: 2019-05-08 04:52:44
% DurationCPUTime: 20.32s
% Computational Cost: add. (74587->596), mult. (148872->783), div. (0->0), fcn. (110401->10), ass. (0->386)
t391 = cos(qJ(5));
t390 = sin(qJ(2));
t393 = cos(qJ(3));
t389 = sin(qJ(3));
t394 = cos(qJ(2));
t465 = t389 * t394;
t364 = (t390 * t393 + t465) * qJD(1);
t379 = t390 * qJDD(1);
t455 = qJD(1) * qJD(2);
t443 = t394 * t455;
t369 = t379 + t443;
t380 = t394 * qJDD(1);
t444 = t390 * t455;
t370 = t380 - t444;
t436 = t369 * t389 - t370 * t393;
t326 = -qJD(3) * t364 - t436;
t325 = qJDD(4) - t326;
t324 = qJDD(5) + t325;
t384 = qJD(2) + qJD(3);
t388 = sin(qJ(4));
t392 = cos(qJ(4));
t346 = t364 * t388 - t384 * t392;
t347 = t364 * t392 + t384 * t388;
t387 = sin(qJ(5));
t314 = t346 * t391 + t347 * t387;
t316 = -t346 * t387 + t347 * t391;
t477 = t316 * t314;
t239 = -t477 - t324;
t484 = t239 * t387;
t313 = t316 ^ 2;
t460 = qJD(1) * t390;
t362 = -qJD(1) * t393 * t394 + t389 * t460;
t359 = qJD(4) + t362;
t357 = qJD(5) + t359;
t512 = t357 ^ 2;
t526 = -t313 - t512;
t189 = t391 * t526 + t484;
t483 = t239 * t391;
t191 = -t387 * t526 + t483;
t129 = t189 * t392 + t191 * t388;
t122 = t189 * t388 - t191 * t392;
t420 = t369 * t393 + t370 * t389;
t327 = -qJD(3) * t362 + t420;
t454 = qJDD(2) + qJDD(3);
t411 = -t392 * t327 - t388 * t454;
t284 = -t346 * qJD(4) - t411;
t410 = -t388 * t327 + t392 * t454;
t406 = -t347 * qJD(4) + t410;
t396 = -t314 * qJD(5) + t391 * t284 + t387 * t406;
t478 = t314 * t357;
t522 = t396 - t478;
t85 = t122 * t389 + t393 * t522;
t87 = t122 * t393 - t389 * t522;
t596 = pkin(1) * t129 - pkin(7) * (t390 * t85 - t394 * t87);
t595 = pkin(2) * t85;
t594 = pkin(8) * t85;
t593 = pkin(2) * t129 + pkin(8) * t87;
t514 = t314 ^ 2;
t290 = t514 - t512;
t200 = -t290 * t387 + t483;
t204 = -t290 * t391 - t484;
t144 = t200 * t388 - t204 * t392;
t296 = t357 * t316;
t438 = -t284 * t387 + t391 * t406;
t416 = qJD(5) * t316 - t438;
t173 = -t296 + t416;
t591 = t390 * (t144 * t393 - t173 * t389) + t394 * (t144 * t389 + t173 * t393);
t588 = pkin(3) * t129;
t587 = pkin(9) * t129;
t586 = -pkin(3) * t522 - pkin(9) * t122;
t525 = t313 - t514;
t527 = t296 + t416;
t111 = -t387 * t527 + t391 * t522;
t486 = t522 * t387;
t113 = t391 * t527 + t486;
t71 = t111 * t388 + t113 * t392;
t583 = t390 * (-t389 * t525 + t393 * t71) + t394 * (t389 * t71 + t393 * t525);
t580 = pkin(4) * t189;
t579 = pkin(10) * t189;
t578 = pkin(10) * t191;
t139 = t200 * t392 + t204 * t388;
t521 = -t477 + t324;
t482 = t521 * t387;
t519 = -t512 - t514;
t530 = t391 * t519 - t482;
t229 = t391 * t521;
t531 = t387 * t519 + t229;
t550 = -t388 * t531 + t392 * t530;
t565 = t389 * t550 - t393 * t527;
t577 = pkin(2) * t565;
t576 = pkin(8) * t565;
t549 = t388 * t530 + t392 * t531;
t564 = t389 * t527 + t393 * t550;
t575 = -pkin(2) * t549 + pkin(8) * t564;
t67 = -t111 * t392 + t113 * t388;
t574 = pkin(7) * (-t390 * t565 + t394 * t564) - pkin(1) * t549;
t520 = t478 + t396;
t291 = -t313 + t512;
t551 = t291 * t391 + t482;
t552 = -t291 * t387 + t229;
t562 = -t388 * t551 + t392 * t552;
t573 = t390 * (t389 * t520 + t393 * t562) + t394 * (t389 * t562 - t393 * t520);
t570 = pkin(3) * t549;
t569 = pkin(9) * t549;
t566 = -pkin(3) * t527 + pkin(9) * t550;
t563 = t388 * t552 + t392 * t551;
t221 = -t514 - t313;
t561 = pkin(3) * t221;
t560 = pkin(4) * t221;
t559 = pkin(4) * t531;
t558 = pkin(10) * t530;
t557 = pkin(10) * t531;
t556 = t221 * t389;
t555 = t221 * t393;
t546 = qJ(6) * t522;
t322 = t347 * t346;
t524 = -t322 + t325;
t544 = t388 * t524;
t341 = t364 * t362;
t523 = -t341 + t454;
t541 = t389 * t523;
t537 = t392 * t524;
t534 = t393 * t523;
t452 = t393 * t477;
t453 = t389 * t477;
t470 = t357 * t391;
t451 = t314 * t470;
t417 = t387 * t416 + t451;
t471 = t357 * t387;
t425 = t314 * t471 - t391 * t416;
t516 = -t388 * t425 + t392 * t417;
t529 = t390 * (t393 * t516 - t453) + t394 * (t389 * t516 + t452);
t414 = (-t314 * t387 - t316 * t391) * t357;
t287 = t316 * t471;
t424 = t287 - t451;
t517 = -t388 * t414 + t392 * t424;
t528 = t390 * (t324 * t389 + t393 * t517) + t394 * (-t324 * t393 + t389 * t517);
t355 = t384 * t362;
t305 = t327 - t355;
t386 = t394 ^ 2;
t507 = sin(qJ(1));
t508 = cos(qJ(1));
t426 = g(1) * t507 - g(2) * t508;
t412 = qJDD(1) * pkin(1) + t426;
t510 = qJD(1) ^ 2;
t329 = (pkin(8) * t386 + pkin(7)) * t510 + t370 * pkin(2) - (qJD(2) * pkin(2) - pkin(8) * t460) * t460 + t412;
t214 = -t305 * pkin(9) + (t364 * t384 - t326) * pkin(3) - t329;
t413 = g(1) * t508 + g(2) * t507;
t494 = qJDD(1) * pkin(7);
t407 = -t413 + t494;
t402 = -pkin(1) * t510 + t407;
t401 = t390 * t402;
t503 = t369 * pkin(8);
t423 = qJDD(2) * pkin(2) - t503;
t395 = qJD(2) ^ 2;
t499 = pkin(8) * qJD(2);
t502 = t390 * g(3);
t320 = t394 * t407 - t502 + t370 * pkin(8) - t395 * pkin(2) + (t390 * t499 + (-pkin(1) * t394 - pkin(2) * t386) * qJD(1)) * qJD(1);
t463 = t393 * t320;
t273 = t463 + t389 * (-t401 + t423) + (-g(3) + (pkin(2) * t460 + t499) * qJD(1)) * t465;
t339 = pkin(3) * t362 - pkin(9) * t364;
t511 = t384 ^ 2;
t228 = -pkin(3) * t511 + pkin(9) * t454 - t362 * t339 + t273;
t147 = -t214 * t392 + t228 * t388;
t148 = t214 * t388 + t228 * t392;
t97 = t147 * t388 + t148 * t392;
t333 = t359 * t346;
t263 = t333 + t284;
t259 = (qJD(4) - t359) * t347 - t410;
t518 = t388 * t424 + t392 * t414;
t515 = t388 * t417 + t392 * t425;
t513 = t346 ^ 2;
t344 = t347 ^ 2;
t358 = t359 ^ 2;
t360 = t362 ^ 2;
t361 = t364 ^ 2;
t126 = pkin(4) * t524 - pkin(10) * t263 - t147;
t330 = pkin(4) * t359 - pkin(10) * t347;
t135 = -pkin(4) * t513 + pkin(10) * t406 - t330 * t359 + t148;
t76 = -t126 * t391 + t135 * t387;
t77 = t126 * t387 + t135 * t391;
t41 = t387 * t77 - t391 * t76;
t509 = pkin(4) * t41;
t506 = pkin(3) * t389;
t165 = t391 * t520;
t175 = (-qJD(5) + t357) * t316 + t438;
t112 = t175 * t387 - t165;
t505 = pkin(4) * t112;
t504 = pkin(5) * t391;
t501 = t394 * g(3);
t459 = qJD(6) * t357;
t353 = 0.2e1 * t459;
t265 = pkin(5) * t314 - qJ(6) * t316;
t430 = qJ(6) * t324 - t265 * t314 + t77;
t415 = -pkin(5) * t512 + t430;
t60 = t353 + t415;
t62 = -pkin(5) * t324 - qJ(6) * t512 + t265 * t316 + qJDD(6) + t76;
t500 = -pkin(5) * t62 + qJ(6) * t60;
t498 = t388 * t41;
t497 = t392 * t41;
t272 = t320 * t389 - t393 * (-t390 * t407 - t501 + (t394 * t499 + (t394 * pkin(2) + pkin(1)) * t460) * qJD(1) + t423);
t227 = -pkin(3) * t454 - pkin(9) * t511 + t339 * t364 + t272;
t496 = -pkin(3) * t227 + pkin(9) * t97;
t495 = qJ(6) * t391;
t150 = -pkin(4) * t406 - pkin(10) * t513 + t330 * t347 + t227;
t493 = t150 * t387;
t492 = t150 * t391;
t487 = t520 * t387;
t210 = -t272 * t393 + t273 * t389;
t485 = t210 * t390;
t275 = t322 + t325;
t481 = t275 * t388;
t480 = t275 * t392;
t475 = t329 * t389;
t474 = t329 * t393;
t336 = t341 + t454;
t473 = t336 * t389;
t472 = t336 * t393;
t469 = t359 * t388;
t468 = t359 * t392;
t467 = t384 * t389;
t466 = t384 * t393;
t223 = t388 * t227;
t375 = t394 * t510 * t390;
t372 = qJDD(2) + t375;
t464 = t390 * t372;
t224 = t392 * t227;
t462 = t394 * (qJDD(2) - t375);
t461 = -pkin(5) * t520 - qJ(6) * t173;
t458 = qJD(3) + t384;
t456 = qJD(4) + t359;
t450 = t389 * t322;
t449 = t393 * t322;
t310 = -t344 - t358;
t234 = -t310 * t388 - t480;
t264 = t346 * t456 + t411;
t448 = pkin(3) * t264 + pkin(9) * t234 + t223;
t300 = -t358 - t513;
t220 = t300 * t392 - t544;
t260 = -t347 * t456 + t410;
t447 = pkin(3) * t260 + pkin(9) * t220 - t224;
t446 = -pkin(3) * t393 - pkin(2);
t32 = t387 * t62 + t391 * t60;
t441 = -qJ(6) * t387 - pkin(4);
t398 = pkin(5) * t416 + t150 - t546;
t79 = (pkin(5) * t357 - 0.2e1 * qJD(6)) * t316 + t398;
t10 = pkin(10) * t32 + (t441 - t504) * t79;
t31 = t387 * t60 - t391 * t62;
t13 = -t31 * t388 + t32 * t392;
t18 = -pkin(10) * t31 + (pkin(5) * t387 - t495) * t79;
t442 = -pkin(3) * t79 + pkin(9) * t13 + t10 * t392 + t18 * t388;
t42 = t387 * t76 + t391 * t77;
t114 = -t173 * t391 + t487;
t53 = t353 + (-t221 - t512) * pkin(5) + t430;
t54 = -qJ(6) * t221 + t62;
t24 = pkin(10) * t114 + t387 * t54 + t391 * t53 - t560;
t110 = -t173 * t387 - t165;
t26 = -pkin(10) * t110 - t387 * t53 + t391 * t54;
t72 = -t110 * t388 + t114 * t392;
t440 = pkin(9) * t72 + t24 * t392 + t26 * t388 - t561;
t116 = t175 * t391 + t487;
t28 = pkin(10) * t116 + t42 - t560;
t30 = -pkin(10) * t112 - t41;
t74 = -t112 * t388 + t116 * t392;
t439 = pkin(9) * t74 + t28 * t392 + t30 * t388 - t561;
t211 = t272 * t389 + t273 * t393;
t349 = t401 + t501;
t350 = t394 * t402 - t502;
t437 = t390 * t349 + t350 * t394;
t397 = 0.2e1 * qJD(6) * t316 - t398;
t63 = -pkin(5) * t296 + t397 + t546;
t39 = -t578 + t387 * t63 + (pkin(4) + t504) * t522;
t48 = -pkin(5) * t486 + t391 * t63 + t579;
t435 = t388 * t48 + t39 * t392 - t586;
t64 = t397 + (-t527 - t296) * pkin(5);
t44 = t391 * t64 + t441 * t527 + t558;
t50 = -t387 * t64 - t495 * t527 - t557;
t434 = t388 * t50 + t392 * t44 + t566;
t82 = -pkin(4) * t527 - t492 + t558;
t99 = t493 - t557;
t433 = t388 * t99 + t392 * t82 + t566;
t117 = t492 - t579;
t84 = -pkin(4) * t522 + t493 + t578;
t432 = t117 * t388 + t392 * t84 + t586;
t431 = pkin(4) * t31 + t500;
t197 = -t259 * t392 + t263 * t388;
t288 = t344 + t513;
t429 = pkin(3) * t288 + pkin(9) * t197 + t97;
t428 = pkin(4) * t110 + t461;
t427 = -t77 + t580;
t421 = -t147 * t392 + t148 * t388;
t419 = -t76 + t559;
t22 = t392 * t42 - t498;
t35 = -pkin(4) * t150 + pkin(10) * t42;
t418 = -pkin(3) * t150 + pkin(9) * t22 - pkin(10) * t498 + t35 * t392;
t409 = (-qJD(3) + t384) * t364 - t436;
t408 = -pkin(5) * t526 - qJ(6) * t239 + t415;
t404 = t408 - t580;
t403 = pkin(5) * t521 + qJ(6) * t519 - t62;
t163 = t316 * t470 + t387 * t396;
t164 = t391 * t396 - t287;
t107 = -t163 * t388 + t164 * t392;
t400 = t390 * (t107 * t393 + t453) + t394 * (t107 * t389 - t452);
t399 = t403 + t559;
t385 = t390 ^ 2;
t382 = t386 * t510;
t381 = t385 * t510;
t371 = t380 - 0.2e1 * t444;
t368 = t379 + 0.2e1 * t443;
t365 = pkin(7) * t510 + t412;
t352 = -t361 + t511;
t351 = t360 - t511;
t348 = -t361 - t511;
t340 = t361 - t360;
t335 = -t511 - t360;
t332 = -t344 + t358;
t331 = -t358 + t513;
t328 = -t360 - t361;
t319 = t344 - t513;
t308 = -t348 * t389 - t472;
t307 = t348 * t393 - t473;
t306 = t327 + t355;
t304 = -t362 * t458 + t420;
t301 = t364 * t458 + t436;
t294 = t335 * t393 - t541;
t293 = t335 * t389 + t534;
t281 = (-t346 * t392 + t347 * t388) * t359;
t280 = (-t346 * t388 - t347 * t392) * t359;
t262 = -t333 + t284;
t256 = t284 * t392 - t347 * t469;
t255 = t284 * t388 + t347 * t468;
t254 = t346 * t468 - t388 * t406;
t253 = t346 * t469 + t392 * t406;
t249 = t306 * t389 + t393 * t409;
t248 = -t306 * t393 + t389 * t409;
t247 = t331 * t392 - t481;
t246 = -t332 * t388 + t537;
t245 = t331 * t388 + t480;
t244 = t332 * t392 + t544;
t233 = t310 * t392 - t481;
t219 = t300 * t388 + t537;
t196 = t260 * t392 - t262 * t388;
t195 = -t259 * t388 - t263 * t392;
t194 = t260 * t388 + t262 * t392;
t188 = t234 * t393 - t264 * t389;
t187 = t234 * t389 + t264 * t393;
t182 = t220 * t393 - t260 * t389;
t181 = t220 * t389 + t260 * t393;
t154 = -pkin(9) * t233 + t224;
t153 = t197 * t393 - t288 * t389;
t152 = t197 * t389 + t288 * t393;
t151 = -pkin(9) * t219 + t223;
t136 = -pkin(3) * t233 + t148;
t134 = -pkin(3) * t219 + t147;
t104 = t163 * t392 + t164 * t388;
t89 = -t227 * t393 + t389 * t97;
t80 = -pkin(9) * t195 - t421;
t70 = t112 * t392 + t116 * t388;
t68 = t110 * t392 + t114 * t388;
t58 = t393 * t74 + t556;
t57 = t393 * t72 + t556;
t56 = t389 * t74 - t555;
t55 = t389 * t72 - t555;
t52 = -pkin(3) * t70 - t505;
t51 = -t427 - t588;
t46 = -t419 - t570;
t45 = t117 * t392 - t388 * t84 - t587;
t40 = -t388 * t82 + t392 * t99 - t569;
t37 = -t399 - t570;
t36 = -pkin(3) * t68 - t428;
t33 = -t404 - 0.2e1 * t459 + t588;
t21 = t388 * t42 + t497;
t19 = -t388 * t44 + t392 * t50 - t569;
t16 = t150 * t389 + t22 * t393;
t15 = -t150 * t393 + t22 * t389;
t14 = -t388 * t39 + t392 * t48 + t587;
t12 = t31 * t392 + t32 * t388;
t8 = t13 * t393 + t389 * t79;
t7 = t13 * t389 - t393 * t79;
t6 = -pkin(3) * t21 - t509;
t5 = -pkin(9) * t70 - t28 * t388 + t30 * t392;
t4 = -pkin(9) * t68 - t24 * t388 + t26 * t392;
t3 = -pkin(9) * t21 - pkin(10) * t497 - t35 * t388;
t2 = -pkin(3) * t12 - t431;
t1 = -pkin(9) * t12 - t10 * t388 + t18 * t392;
t9 = [0, 0, 0, 0, 0, qJDD(1), t426, t413, 0, 0, (t369 + t443) * t390, t368 * t394 + t371 * t390, t464 + t394 * (-t381 + t395), (t370 - t444) * t394, t390 * (t382 - t395) + t462, 0, t394 * t365 + pkin(1) * t371 + pkin(7) * (t394 * (-t382 - t395) - t464), -t390 * t365 - pkin(1) * t368 + pkin(7) * (-t462 - t390 * (-t381 - t395)), pkin(1) * (t381 + t382) + (t385 + t386) * t494 + t437, pkin(1) * t365 + pkin(7) * t437, t390 * (t327 * t393 - t364 * t467) + t394 * (t327 * t389 + t364 * t466), t390 * (-t301 * t393 - t305 * t389) + t394 * (-t301 * t389 + t305 * t393), t390 * (-t352 * t389 + t534) + t394 * (t352 * t393 + t541), t390 * (-t326 * t389 + t362 * t466) + t394 * (t326 * t393 + t362 * t467), t390 * (t351 * t393 - t473) + t394 * (t351 * t389 + t472), (t390 * (-t362 * t393 + t364 * t389) + t394 * (-t362 * t389 - t364 * t393)) * t384, t390 * (-pkin(8) * t293 - t475) + t394 * (-pkin(2) * t301 + pkin(8) * t294 + t474) - pkin(1) * t301 + pkin(7) * (-t293 * t390 + t294 * t394), t390 * (-pkin(8) * t307 - t474) + t394 * (-pkin(2) * t304 + pkin(8) * t308 - t475) - pkin(1) * t304 + pkin(7) * (-t307 * t390 + t308 * t394), t390 * (-pkin(8) * t248 - t210) + t394 * (-pkin(2) * t328 + pkin(8) * t249 + t211) - pkin(1) * t328 + pkin(7) * (-t248 * t390 + t249 * t394), -pkin(8) * t485 + t394 * (pkin(2) * t329 + pkin(8) * t211) + pkin(1) * t329 + pkin(7) * (t211 * t394 - t485), t390 * (t256 * t393 + t450) + t394 * (t256 * t389 - t449), t390 * (t196 * t393 + t319 * t389) + t394 * (t196 * t389 - t319 * t393), t390 * (t246 * t393 + t263 * t389) + t394 * (t246 * t389 - t263 * t393), t390 * (t254 * t393 - t450) + t394 * (t254 * t389 + t449), t390 * (t247 * t393 - t259 * t389) + t394 * (t247 * t389 + t259 * t393), t390 * (t281 * t393 + t325 * t389) + t394 * (t281 * t389 - t325 * t393), t390 * (-pkin(8) * t181 - t134 * t389 + t151 * t393) + t394 * (-pkin(2) * t219 + pkin(8) * t182 + t134 * t393 + t151 * t389) - pkin(1) * t219 + pkin(7) * (-t181 * t390 + t182 * t394), t390 * (-pkin(8) * t187 - t136 * t389 + t154 * t393) + t394 * (-pkin(2) * t233 + pkin(8) * t188 + t136 * t393 + t154 * t389) - pkin(1) * t233 + pkin(7) * (-t187 * t390 + t188 * t394), t390 * (-pkin(8) * t152 + t393 * t80) + t394 * (pkin(8) * t153 + t389 * t80) + pkin(7) * (-t152 * t390 + t153 * t394) + (t390 * t506 + t394 * t446 - pkin(1)) * t195, (t390 * (-pkin(9) * t393 + t506) + t394 * (-pkin(9) * t389 + t446) - pkin(1)) * t421 + (pkin(7) + pkin(8)) * (-t390 * t89 + t394 * (t227 * t389 + t393 * t97)), t400, -t583, t573, t529, t591, t528, t390 * (-t389 * t46 + t393 * t40 - t576) + t394 * (t389 * t40 + t393 * t46 + t575) + t574, t390 * (-t389 * t51 + t393 * t45 + t594) + t394 * (t389 * t45 + t393 * t51 - t593) - t596, t390 * (-pkin(8) * t56 - t389 * t52 + t393 * t5) + t394 * (-pkin(2) * t70 + pkin(8) * t58 + t389 * t5 + t393 * t52) - pkin(1) * t70 + pkin(7) * (-t390 * t56 + t394 * t58), t390 * (-pkin(8) * t15 + t3 * t393 - t389 * t6) + t394 * (-pkin(2) * t21 + pkin(8) * t16 + t3 * t389 + t393 * t6) - pkin(1) * t21 + pkin(7) * (-t15 * t390 + t16 * t394), t400, t573, t583, t528, -t591, t529, t390 * (t19 * t393 - t37 * t389 - t576) + t394 * (t19 * t389 + t37 * t393 + t575) + t574, t390 * (-pkin(8) * t55 - t36 * t389 + t393 * t4) + t394 * (-pkin(2) * t68 + pkin(8) * t57 + t36 * t393 + t389 * t4) - pkin(1) * t68 + pkin(7) * (-t390 * t55 + t394 * t57), t390 * (t14 * t393 - t33 * t389 - t594) + t394 * (t14 * t389 + t33 * t393 + t593) + t596, t390 * (-pkin(8) * t7 + t1 * t393 - t2 * t389) + t394 * (-pkin(2) * t12 + pkin(8) * t8 + t1 * t389 + t2 * t393) - pkin(1) * t12 + pkin(7) * (-t390 * t7 + t394 * t8); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, t381 - t382, t379, t375, t380, qJDD(2), -t349, -t350, 0, 0, t341, t340, t306, -t341, t409, t454, pkin(2) * t293 - t272, -t463 - t389 * (pkin(8) * t443 - t349 - t503) + (-t372 * t389 + t307) * pkin(2), pkin(2) * t248, pkin(2) * t210, t255, t194, t244, t253, t245, t280, pkin(2) * t181 + t447, pkin(2) * t187 + t448, pkin(2) * t152 + t429, pkin(2) * t89 + t496, t104, -t67, t563, t515, -t139, t518, t433 + t577, t432 - t595, pkin(2) * t56 + t439, pkin(2) * t15 + t418, t104, t563, t67, t518, t139, t515, t434 + t577, pkin(2) * t55 + t440, t435 + t595, pkin(2) * t7 + t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, t340, t306, -t341, t409, t454, -t272, -t273, 0, 0, t255, t194, t244, t253, t245, t280, t447, t448, t429, t496, t104, -t67, t563, t515, -t139, t518, t433, t432, t439, t418, t104, t563, t67, t518, t139, t515, t434, t440, t435, t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, t319, t263, -t322, -t259, t325, -t147, -t148, 0, 0, t477, t525, t520, -t477, -t173, t324, t419, t427, t505, t509, t477, t520, -t525, t324, t173, -t477, t399, t428, t353 + t404, t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, t525, t520, -t477, -t173, t324, -t76, -t77, 0, 0, t477, t520, -t525, t324, t173, -t477, t403, t461, t353 + t408, t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t521, t520, t526, t62;];
tauJ_reg  = t9;
