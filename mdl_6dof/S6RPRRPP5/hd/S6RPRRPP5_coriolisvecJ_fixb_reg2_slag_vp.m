% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:45
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:44:42
% EndTime: 2019-03-09 04:44:54
% DurationCPUTime: 4.26s
% Computational Cost: add. (6295->436), mult. (16400->497), div. (0->0), fcn. (12086->6), ass. (0->208)
t166 = sin(pkin(9));
t167 = cos(pkin(9));
t169 = sin(qJ(3));
t292 = cos(qJ(3));
t198 = -t169 * t166 + t292 * t167;
t330 = t198 * qJD(1);
t180 = qJD(3) * t330;
t131 = qJD(4) - t330;
t149 = t292 * t166 + t169 * t167;
t140 = t149 * qJD(1);
t168 = sin(qJ(4));
t170 = cos(qJ(4));
t111 = t168 * qJD(3) + t170 * t140;
t240 = qJD(4) * t170;
t328 = qJD(3) * qJD(4) + t180;
t174 = -t140 * t240 - t328 * t168;
t241 = qJD(4) * t168;
t205 = -t140 * t241 + t328 * t170;
t306 = t149 * qJD(2);
t179 = qJD(1) * t306;
t287 = pkin(7) + qJ(2);
t154 = t287 * t166;
t150 = qJD(1) * t154;
t155 = t287 * t167;
t151 = qJD(1) * t155;
t95 = -t169 * t150 + t292 * t151;
t58 = t95 * qJD(3) + t179;
t14 = -pkin(4) * t174 - qJ(5) * t205 - t111 * qJD(5) + t58;
t259 = t111 * t168;
t109 = -t170 * qJD(3) + t168 * t140;
t263 = t109 * t170;
t210 = t259 + t263;
t281 = t170 * t205;
t224 = t111 * t241 - t281;
t271 = t109 * t240 - t168 * t174;
t5 = -t210 * t330 + t224 + t271;
t220 = t131 * t168;
t331 = t271 - t111 * t220 + (-t109 * t330 + t205) * t170;
t143 = t149 * qJD(3);
t127 = qJD(1) * t143;
t329 = t127 * qJ(5) + t131 * qJD(5);
t186 = t198 * qJD(2);
t312 = -t292 * t150 - t169 * t151;
t57 = qJD(1) * t186 + qJD(3) * t312;
t161 = -t167 * pkin(2) - pkin(1);
t152 = qJD(1) * t161 + qJD(2);
t73 = -pkin(3) * t330 - t140 * pkin(8) + t152;
t78 = t127 * pkin(3) - pkin(8) * t180;
t90 = qJD(3) * pkin(8) + t95;
t200 = -t168 * t78 - t170 * t57 - t73 * t240 + t241 * t90;
t40 = -t168 * t90 + t170 * t73;
t181 = t40 * t131 + t200;
t225 = t168 * t57 - t170 * t78 + t90 * t240 + t73 * t241;
t41 = t168 * t73 + t170 * t90;
t277 = t41 * t131;
t321 = -t225 + t277;
t219 = t131 * t170;
t248 = t168 * t127;
t327 = t131 * t240 - t219 * t330 + t248;
t254 = t140 * t109;
t120 = t170 * t127;
t255 = t330 * t168;
t304 = t120 + (-t241 + t255) * t131;
t177 = t304 - t254;
t326 = t304 + t254;
t104 = -t169 * t154 + t292 * t155;
t75 = t104 * qJD(3) + t306;
t142 = t198 * qJD(3);
t272 = t174 * t170;
t273 = t205 * t168;
t324 = t149 * ((t109 * t168 - t111 * t170) * qJD(4) + t272 - t273) - t210 * t142;
t126 = t131 * qJ(5);
t34 = t126 + t41;
t279 = t34 * t131;
t123 = t127 * pkin(4);
t9 = -t123 + t225;
t323 = -t9 + t279;
t322 = -qJ(6) * t174 + t109 * qJD(6);
t320 = -t168 * qJD(5) - t95;
t96 = t127 * t198;
t53 = t131 * t143 - t96;
t218 = qJD(3) * pkin(3) + t312;
t192 = t111 * qJ(5) + t218;
t293 = pkin(4) + pkin(5);
t29 = -t293 * t109 + qJD(6) + t192;
t317 = (qJD(6) + t29) * t111;
t244 = qJD(5) - t40;
t315 = 0.2e1 * t329;
t295 = t111 ^ 2;
t314 = -t131 ^ 2 - t295;
t313 = t143 * qJ(5) - qJD(5) * t198;
t311 = -t292 * t154 - t169 * t155;
t296 = t109 ^ 2;
t309 = t295 - t296;
t307 = t140 * qJD(3);
t260 = t111 * t140;
t27 = -t260 + t327;
t184 = t260 + t327;
t30 = t111 * qJ(6) + t40;
t245 = qJD(5) - t30;
t19 = -t293 * t131 + t245;
t8 = -t200 + t329;
t2 = t8 + t322;
t303 = t131 * t19 + t2;
t290 = pkin(8) * t127;
t42 = t109 * pkin(4) - t192;
t302 = t131 * t42 - t290;
t229 = t149 * t241;
t251 = t142 * t170;
t196 = t229 - t251;
t301 = -t111 * t143 - t120 * t149 + t131 * t196 + t198 * t205;
t228 = t149 * t240;
t252 = t142 * t168;
t197 = t228 + t252;
t300 = t143 * t109 + t131 * t197 + t149 * t248 + t174 * t198;
t265 = qJ(5) * t170;
t204 = t293 * t168 - t265;
t249 = t168 * qJ(5);
t298 = -t293 * t170 - t249;
t294 = t140 ^ 2;
t291 = pkin(8) * t111;
t7 = pkin(5) * t174 - t14;
t289 = t7 * t168;
t288 = t7 * t170;
t286 = pkin(8) - qJ(6);
t91 = t140 * pkin(3) - pkin(8) * t330;
t48 = t168 * t91 + t170 * t312;
t93 = -pkin(3) * t198 - t149 * pkin(8) + t161;
t52 = t170 * t104 + t168 * t93;
t285 = qJ(5) * t174;
t284 = t14 * t168;
t283 = t14 * t170;
t31 = t109 * qJ(6) + t41;
t23 = t126 + t31;
t280 = t23 * t131;
t276 = t58 * t311;
t275 = t58 * t168;
t274 = t58 * t170;
t269 = -t131 * t204 - t320;
t36 = t140 * qJ(5) + t48;
t268 = -qJ(6) * t255 - t170 * qJD(6) - t286 * t241 - t36;
t214 = pkin(4) * t168 - t265;
t267 = t131 * t214 + t320;
t157 = t286 * t170;
t87 = t168 * t312;
t266 = qJD(4) * t157 - t168 * qJD(6) - t87 - (-qJ(6) * t330 - t91) * t170 + t293 * t140;
t264 = t109 * qJ(5);
t262 = t111 * t109;
t261 = t111 * t131;
t258 = t131 * t109;
t257 = t131 * t140;
t253 = t140 * t330;
t250 = t149 * t168;
t242 = t166 ^ 2 + t167 ^ 2;
t239 = qJD(5) * t170;
t74 = qJD(3) * t311 + t186;
t236 = t104 * t240 + t168 * t74 + t93 * t241;
t92 = t143 * pkin(3) - t142 * pkin(8);
t235 = t168 * t92 + t170 * t74 + t93 * t240;
t43 = -qJ(5) * t198 + t52;
t233 = pkin(8) * t241;
t232 = pkin(8) * t240;
t47 = t170 * t91 - t87;
t98 = t168 * t104;
t51 = t170 * t93 - t98;
t222 = t242 * qJD(1) ^ 2;
t217 = (qJD(4) * t109 + t205) * pkin(8);
t194 = -qJ(6) * t205 + t9;
t178 = -t127 * pkin(5) + t194;
t1 = -t111 * qJD(6) + t178;
t216 = -t1 + t280;
t215 = t170 * pkin(4) + t249;
t33 = -t131 * pkin(4) + t244;
t213 = t168 * t34 - t170 * t33;
t212 = t168 * t41 + t170 * t40;
t18 = t170 * t92 - t236;
t208 = -qJ(6) * t142 - qJD(6) * t149;
t207 = 0.2e1 * t242 * qJD(2) * qJD(1);
t17 = -t104 * t241 + t235;
t195 = -t131 * t218 - t290;
t193 = t42 * t111 + t9;
t26 = t109 * t220 + t272;
t39 = t205 + t258;
t21 = t109 * t197 - t174 * t250;
t176 = t262 - t307;
t173 = t174 + t261;
t156 = t286 * t168;
t153 = -pkin(3) - t215;
t146 = pkin(3) - t298;
t135 = t330 ^ 2;
t60 = t111 * pkin(4) + t264;
t59 = pkin(8) * t272;
t54 = t149 * t214 - t311;
t46 = -t293 * t111 - t264;
t45 = -t149 * t204 + t311;
t44 = pkin(4) * t198 - t51;
t38 = -t140 * pkin(4) - t47;
t35 = qJ(6) * t250 + t43;
t28 = t98 + (-qJ(6) * t149 - t93) * t170 + t293 * t198;
t25 = t111 * t219 + t273;
t22 = t214 * t142 + (qJD(4) * t215 - t239) * t149 + t75;
t20 = -t111 * t196 + t149 * t281;
t16 = -t143 * pkin(4) - t18;
t15 = -t204 * t142 + (qJD(4) * t298 + t239) * t149 - t75;
t11 = t17 + t313;
t6 = qJ(6) * t228 + (-qJD(4) * t104 - t208) * t168 + t235 + t313;
t4 = qJ(6) * t229 - t293 * t143 + (t208 - t92) * t170 + t236;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, qJ(2) * t207, t140 * t142 + t149 * t180, -t149 * t127 - t140 * t143 + t142 * t330 + t180 * t198, t142 * qJD(3), -t143 * t330 - t96, -t143 * qJD(3), 0, -t75 * qJD(3) + t161 * t127 + t152 * t143, -t74 * qJD(3) + t152 * t142 + t161 * t180, -t104 * t127 + t75 * t140 - t142 * t312 - t95 * t143 + t58 * t149 - t180 * t311 + t198 * t57 + t330 * t74, t57 * t104 - t312 * t75 + t95 * t74 - t276, t20, t324, -t301, t21, -t300, t53, -t218 * t252 + t311 * t174 + t75 * t109 + t51 * t127 + t225 * t198 + t18 * t131 + t40 * t143 + (-t218 * t240 + t275) * t149, -t218 * t251 - t311 * t205 + t75 * t111 - t200 * t198 - t52 * t127 - t17 * t131 - t41 * t143 + (t218 * t241 + t274) * t149, -t17 * t109 - t18 * t111 - t51 * t205 + t52 * t174 - t212 * t142 + (t200 * t168 + t225 * t170 + (t168 * t40 - t170 * t41) * qJD(4)) * t149, t41 * t17 + t40 * t18 - t200 * t52 - t218 * t75 - t225 * t51 - t276, t20, -t301, -t324, t53, t300, t21, t42 * t252 + t22 * t109 - t44 * t127 - t16 * t131 - t33 * t143 + t9 * t198 - t54 * t174 + (t240 * t42 + t284) * t149, -t11 * t109 + t16 * t111 + t43 * t174 + t44 * t205 - t213 * t142 + (-t8 * t168 + t9 * t170 + (-t168 * t33 - t170 * t34) * qJD(4)) * t149, -t42 * t251 + t11 * t131 - t22 * t111 + t43 * t127 + t34 * t143 - t8 * t198 - t54 * t205 + (t241 * t42 - t283) * t149, t11 * t34 + t14 * t54 + t16 * t33 + t22 * t42 + t43 * t8 + t44 * t9, t20, -t324, t301, t21, -t300, t53, -t29 * t252 + t1 * t198 - t15 * t109 - t28 * t127 - t4 * t131 - t19 * t143 + t45 * t174 + (-t240 * t29 - t289) * t149, t29 * t251 + t15 * t111 + t35 * t127 + t6 * t131 + t23 * t143 - t2 * t198 + t45 * t205 + (-t241 * t29 + t288) * t149, t6 * t109 - t4 * t111 - t28 * t205 - t35 * t174 - (-t168 * t23 + t170 * t19) * t142 + (-t1 * t170 + t2 * t168 + (t168 * t19 + t170 * t23) * qJD(4)) * t149, t1 * t28 + t15 * t29 + t19 * t4 + t2 * t35 + t23 * t6 + t45 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -qJ(2) * t222, 0, 0, 0, 0, 0, 0, 0.2e1 * t307, 0.2e1 * t180, -t135 - t294, t140 * t312 - t330 * t95, 0, 0, 0, 0, 0, 0, t177, -t184, -t331, t218 * t140 - t181 * t168 + t321 * t170, 0, 0, 0, 0, 0, 0, t177 -(t259 - t263) * t330 + t224 - t271, t184, -t42 * t140 + t323 * t170 + (t131 * t33 + t8) * t168, 0, 0, 0, 0, 0, 0, t177, t184, t331, t29 * t140 + t168 * t303 + t216 * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, -t135 + t294, 0, t253, 0, 0, -t152 * t140 - t179 (-qJD(2) - t152) * t330, 0, 0, t25, -t5, t27, t26, t326, -t257, pkin(3) * t174 - t95 * t109 - t40 * t140 - t274 + (-t47 - t232) * t131 + t195 * t168, -pkin(3) * t205 - t95 * t111 + t41 * t140 + t275 + (t48 + t233) * t131 + t195 * t170, t48 * t109 + t47 * t111 + t59 + (t330 * t40 - t200 + (-t40 + t291) * qJD(4)) * t170 + (t217 - t321) * t168, -t58 * pkin(3) - t40 * t47 - t41 * t48 + t218 * t95 + (-qJD(4) * t212 + t168 * t225 - t170 * t200) * pkin(8), t25, t27, t5, -t257, -t326, t26, -t283 + t33 * t140 - t153 * t174 + (t38 - t232) * t131 + t267 * t109 + t302 * t168, t36 * t109 - t38 * t111 + t59 + (-t330 * t33 + t8 + (t33 + t291) * qJD(4)) * t170 + (t217 - t323) * t168, -t284 - t34 * t140 - t153 * t205 + (-t36 - t233) * t131 - t267 * t111 - t302 * t170, t14 * t153 - t33 * t38 - t34 * t36 + t267 * t42 + (-qJD(4) * t213 + t9 * t168 + t8 * t170) * pkin(8), t25, t5, -t27, t26, t326, -t257, -t269 * t109 - t156 * t127 - t266 * t131 + t19 * t140 + t146 * t174 - t220 * t29 + t288, t269 * t111 + t157 * t127 + t268 * t131 - t23 * t140 + t146 * t205 + t29 * t219 + t289, t268 * t109 - t266 * t111 - t156 * t205 - t157 * t174 + t216 * t168 - t170 * t303, t1 * t156 + t7 * t146 + t2 * t157 + t266 * t19 + t268 * t23 + t269 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t309, t39, -t262, t173, t127, t111 * t218 + t321, -t109 * t218 + t181, 0, 0, t262, t39, -t309, t127, -t173, -t262, -t60 * t109 + t123 - t193 + t277, -pkin(4) * t205 + t285 + (t34 - t41) * t111 + (t33 - t244) * t109, -t42 * t109 + t60 * t111 - t181 + t315, -t9 * pkin(4) + t8 * qJ(5) + t244 * t34 - t33 * t41 - t42 * t60, t262, -t309, -t39, -t262, t173, t127, t46 * t109 + t31 * t131 + (pkin(5) + t293) * t127 + t317 - t194, t29 * t109 - t46 * t111 - t30 * t131 - t200 + t315 + t322, -t285 + t293 * t205 + (-t23 + t31) * t111 + (-t19 + t245) * t109, t2 * qJ(5) - t1 * t293 - t19 * t31 + t23 * t245 - t29 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, t39, t314, t193 - t279, 0, 0, 0, 0, 0, 0, t176, t314, -t39, t178 - t280 - t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174 - t261, t205 - t258, -t295 - t296, -t23 * t109 + t19 * t111 + t7;];
tauc_reg  = t3;
