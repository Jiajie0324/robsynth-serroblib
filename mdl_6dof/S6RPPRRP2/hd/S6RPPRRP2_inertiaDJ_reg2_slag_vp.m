% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPPRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPPRRP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRP2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:01:17
% EndTime: 2019-03-09 02:01:22
% DurationCPUTime: 1.70s
% Computational Cost: add. (2270->159), mult. (4781->272), div. (0->0), fcn. (4534->8), ass. (0->105)
t78 = cos(qJ(5));
t76 = sin(qJ(5));
t92 = pkin(5) * t78 + t76 * qJ(6);
t136 = t92 * qJD(5) - qJD(6) * t78;
t129 = cos(qJ(4));
t73 = sin(pkin(10));
t74 = cos(pkin(10));
t77 = sin(qJ(4));
t56 = -t129 * t74 + t77 * t73;
t51 = t56 * qJD(4);
t57 = t129 * t73 + t77 * t74;
t91 = pkin(5) * t76 - qJ(6) * t78;
t142 = -t136 * t57 + t91 * t51;
t71 = t76 ^ 2;
t44 = t71 * t51;
t72 = t78 ^ 2;
t45 = t72 * t51;
t25 = t44 + t45;
t60 = (t71 - t72) * qJD(5);
t64 = sin(pkin(9)) * pkin(1) + qJ(3);
t130 = pkin(7) + t64;
t53 = t130 * t73;
t54 = t130 * t74;
t33 = t129 * t54 - t77 * t53;
t58 = -cos(pkin(9)) * pkin(1) - pkin(3) * t74 - pkin(2);
t84 = -pkin(4) * t56 + pkin(8) * t57 - t58;
t140 = t78 * t33 - t76 * t84;
t52 = t57 * qJD(4);
t139 = t56 * t51 - t57 * t52;
t32 = t129 * t53 + t77 * t54;
t20 = t56 * qJD(3) + t32 * qJD(4);
t67 = qJD(5) * t76;
t82 = t78 * t84;
t134 = pkin(4) * t52;
t99 = pkin(8) * t51 + t134;
t3 = qJD(5) * t82 + t78 * t20 + t33 * t67 - t76 * t99;
t4 = -qJD(5) * t140 + t76 * t20 + t78 * t99;
t11 = -t76 * t33 - t82;
t89 = t11 * t76 - t140 * t78;
t138 = qJD(5) * t89 + t3 * t76 - t4 * t78;
t112 = qJD(6) * t56;
t114 = qJ(6) * t52;
t1 = t112 - t3 + t114;
t131 = t52 * pkin(5);
t2 = -t131 - t4;
t6 = qJ(6) * t56 + t140;
t7 = -t56 * pkin(5) - t11;
t94 = t6 * t78 + t7 * t76;
t137 = qJD(5) * t94 + t1 * t76 - t2 * t78;
t135 = 0.2e1 * qJD(6);
t133 = pkin(8) * t52;
t132 = pkin(8) * t56;
t21 = t57 * qJD(3) + t33 * qJD(4);
t128 = t21 * t32;
t127 = t56 * t52;
t126 = t57 * t51;
t125 = t57 * t76;
t124 = t57 * t78;
t123 = t76 * t52;
t120 = t78 * t51;
t119 = t78 * t52;
t118 = t57 * t119 - t56 * t120;
t116 = t25 * pkin(8);
t68 = qJD(5) * t78;
t110 = t76 * qJD(6);
t38 = 0.2e1 * t127;
t109 = -0.2e1 * pkin(4) * qJD(5);
t108 = t76 * t120;
t107 = pkin(8) * t67;
t106 = pkin(8) * t68;
t105 = t56 * t67;
t104 = t76 * t68;
t55 = t57 ^ 2;
t101 = t55 * t104;
t100 = 0.2e1 * (t73 ^ 2 + t74 ^ 2) * qJD(3);
t98 = pkin(4) * t51 - t133;
t97 = pkin(4) * t57 + t132;
t93 = t6 * t76 - t7 * t78;
t90 = t11 * t78 + t140 * t76;
t88 = t21 * t56 + t32 * t52;
t31 = -t76 * t51 + t57 * t68;
t29 = t57 * t67 + t120;
t30 = t56 * t68 + t123;
t28 = t105 - t119;
t5 = -t142 + t21;
t59 = -pkin(4) - t92;
t86 = -t5 + (t57 * t59 - t132) * qJD(5);
t13 = t91 * t57 + t32;
t50 = -pkin(5) * t67 + qJ(6) * t68 + t110;
t85 = -qJD(5) * t13 + t50 * t57 + t51 * t59 + t133;
t81 = -t93 * qJD(5) + t1 * t78 + t2 * t76;
t80 = -t90 * qJD(5) - t3 * t78 - t4 * t76;
t62 = -0.2e1 * t104;
t61 = 0.2e1 * t104;
t35 = t57 * t45;
t34 = t57 * t44;
t19 = -0.2e1 * t35 - 0.2e1 * t101;
t18 = -0.2e1 * t34 + 0.2e1 * t101;
t17 = t57 * t60 + t108;
t15 = 0.4e1 * t57 * t104 - t44 + t45;
t14 = 0.2e1 * t57 * t108 + t55 * t60;
t10 = t57 * t123 + t31 * t56;
t9 = -0.2e1 * t34 - 0.2e1 * t35 + 0.2e1 * t127;
t8 = -0.2e1 * t57 * t105 + 0.2e1 * t118;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t64 * t100, -0.2e1 * t126, 0.2e1 * t139, 0, t38, 0, 0, 0.2e1 * t58 * t52, -0.2e1 * t58 * t51, 0.2e1 * t20 * t56 + 0.2e1 * t21 * t57 - 0.2e1 * t32 * t51 - 0.2e1 * t33 * t52, -0.2e1 * t20 * t33 + 0.2e1 * t128, t19, 0.2e1 * t14, t8, t18, -0.2e1 * t10, t38, 0.2e1 * t11 * t52 + 0.2e1 * t21 * t125 + 0.2e1 * t31 * t32 + 0.2e1 * t4 * t56, 0.2e1 * t21 * t124 - 0.2e1 * t140 * t52 - 0.2e1 * t29 * t32 + 0.2e1 * t3 * t56, 0.2e1 * t138 * t57 + 0.2e1 * t90 * t51, 0.2e1 * t11 * t4 - 0.2e1 * t140 * t3 + 0.2e1 * t128, t19, t8, -0.2e1 * t14, t38, 0.2e1 * t10, t18, 0.2e1 * t5 * t125 + 0.2e1 * t13 * t31 - 0.2e1 * t2 * t56 - 0.2e1 * t7 * t52, -0.2e1 * t137 * t57 + 0.2e1 * t93 * t51, 0.2e1 * t1 * t56 - 0.2e1 * t124 * t5 + 0.2e1 * t13 * t29 + 0.2e1 * t6 * t52, 0.2e1 * t1 * t6 + 0.2e1 * t13 * t5 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20 * t57 - t33 * t51 + t88, 0, 0, 0, 0, 0, 0, 0, t139 * t78 + t118, 0, t51 * t89 + t80 * t57 + t88, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13 * t52 + t5 * t56 - t51 * t94 + t81 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t126 + 0.2e1 * t127, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, -t51, 0, 0, 0, 0, 0, 0, 0, 0, -t28, -t30, t25, -t138, 0, 0, 0, 0, 0, 0, -t28, t25, t30, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, -t52, 0, -t21, t20, 0, 0, -t17, -t15, t30, t17, -t28, 0, -t21 * t78 + t98 * t76 + (t32 * t76 - t78 * t97) * qJD(5), t21 * t76 + t98 * t78 + (t32 * t78 + t76 * t97) * qJD(5), t80, -t21 * pkin(4) + pkin(8) * t80, -t17, t30, t15, 0, t28, t17, -t76 * t85 + t78 * t86, t81, t76 * t86 + t78 * t85, pkin(8) * t81 - t13 * t50 + t5 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t51, 0, 0, 0, 0, 0, 0, 0, 0, t28, t30, -t25, -t116 - t134, 0, 0, 0, 0, 0, 0, t28, -t25, -t30, -t50 * t56 + t52 * t59 - t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, -0.2e1 * t60, 0, t62, 0, 0, t76 * t109, t78 * t109, 0, 0, t61, 0, 0.2e1 * t60, 0, 0, t62, 0.2e1 * t50 * t78 + 0.2e1 * t59 * t67, 0, 0.2e1 * t50 * t76 - 0.2e1 * t59 * t68, -0.2e1 * t59 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, 0, -t31, t52, t4, t3, 0, 0, 0, -t29, 0, t52, t31, 0, t4 + 0.2e1 * t131, t92 * t51 + (qJD(5) * t91 - t110) * t57, 0.2e1 * t112 - t3 + 0.2e1 * t114, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, t29, 0, 0, 0, 0, 0, 0, 0, 0, -t31, 0, -t29, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t68, 0, 0, 0, 0, 0, 0, 0, 0, -t67, 0, t68, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, -t67, 0, -t106, t107, 0, 0, 0, t68, 0, 0, t67, 0, -t106, -t136, -t107, -t136 * pkin(8); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, qJ(6) * t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, -t29, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t12;
