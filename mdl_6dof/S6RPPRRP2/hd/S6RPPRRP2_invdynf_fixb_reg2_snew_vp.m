% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRRP2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP2_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP2_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRP2_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRP2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRP2_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:49:36
% EndTime: 2019-05-05 14:49:43
% DurationCPUTime: 7.60s
% Computational Cost: add. (19238->272), mult. (43356->347), div. (0->0), fcn. (31240->10), ass. (0->191)
t2173 = cos(pkin(10));
t2162 = t2173 * qJDD(1);
t2177 = sin(qJ(4));
t2180 = cos(qJ(4));
t2171 = sin(pkin(10));
t2201 = t2171 * qJDD(1);
t2197 = -t2180 * t2162 + t2177 * t2201;
t2195 = t2171 * t2180 + t2173 * t2177;
t2140 = t2195 * qJD(1);
t2207 = t2140 * qJD(4);
t2189 = qJDD(5) + t2197 + t2207;
t2176 = sin(qJ(5));
t2179 = cos(qJ(5));
t2128 = -qJD(4) * t2179 + t2140 * t2176;
t2130 = qJD(4) * t2176 + t2140 * t2179;
t2211 = t2128 * t2130;
t2072 = t2189 + t2211;
t2127 = t2130 ^ 2;
t2138 = (t2171 * t2177 - t2173 * t2180) * qJD(1);
t2136 = qJD(5) + t2138;
t2219 = t2136 ^ 2;
t2225 = -t2127 - t2219;
t2051 = t2072 * t2179 + t2176 * t2225;
t2209 = t2138 * qJD(4);
t2223 = t2195 * qJDD(1);
t2117 = t2223 - t2209;
t2190 = -qJD(5) * t2128 + qJDD(4) * t2176 + t2117 * t2179;
t2210 = t2128 * t2136;
t2188 = t2190 - t2210;
t2022 = t2051 * t2177 + t2180 * t2188;
t2024 = t2051 * t2180 - t2177 * t2188;
t2009 = t2022 * t2171 - t2024 * t2173;
t2049 = t2072 * t2176 - t2179 * t2225;
t2172 = sin(pkin(9));
t2174 = cos(pkin(9));
t1991 = t2009 * t2172 + t2049 * t2174;
t1993 = t2009 * t2174 - t2049 * t2172;
t2178 = sin(qJ(1));
t2181 = cos(qJ(1));
t2249 = t1991 * t2181 + t1993 * t2178;
t2248 = t1991 * t2178 - t1993 * t2181;
t2003 = t2022 * t2173 + t2024 * t2171;
t2069 = t2190 + t2210;
t2199 = -t2179 * qJDD(4) + t2176 * t2117;
t2191 = (-qJD(5) + t2136) * t2130 - t2199;
t2222 = -t2069 * t2179 + t2176 * t2191;
t2101 = t2128 ^ 2;
t2080 = t2127 + t2101;
t2221 = t2069 * t2176 + t2179 * t2191;
t2234 = t2080 * t2180 + t2177 * t2221;
t2235 = -t2080 * t2177 + t2180 * t2221;
t2240 = -t2171 * t2234 + t2173 * t2235;
t2244 = t2172 * t2222 + t2174 * t2240;
t2245 = t2172 * t2240 - t2174 * t2222;
t2247 = -t2178 * t2245 + t2181 * t2244;
t2246 = t2178 * t2244 + t2181 * t2245;
t2241 = t2171 * t2235 + t2173 * t2234;
t2073 = t2189 - t2211;
t2224 = -t2219 - t2101;
t2229 = t2073 * t2179 + t2176 * t2224;
t2239 = t2172 * t2229;
t2238 = t2174 * t2229;
t2228 = -t2073 * t2176 + t2179 * t2224;
t2237 = t2177 * t2228;
t2236 = t2180 * t2228;
t2182 = qJD(1) ^ 2;
t2165 = t2171 ^ 2;
t2166 = t2173 ^ 2;
t2202 = t2165 + t2166;
t2149 = t2202 * t2182;
t2220 = qJD(4) ^ 2;
t2218 = t2138 ^ 2;
t2217 = t2140 ^ 2;
t2216 = qJD(3) * qJD(1);
t2208 = t2138 * t2140;
t2206 = t2165 * t2182;
t2205 = t2166 * t2182;
t2168 = -g(3) + qJDD(2);
t2204 = t2173 * t2168;
t2153 = -g(1) * t2181 - g(2) * t2178;
t2145 = -pkin(1) * t2182 + t2153;
t2203 = t2174 * t2145;
t2152 = g(1) * t2178 - g(2) * t2181;
t2193 = qJDD(1) * pkin(1) + t2152;
t2119 = t2172 * t2193 + t2203;
t2187 = -t2182 * pkin(2) + qJDD(1) * qJ(3) + t2119;
t2097 = t2171 * t2168 + (t2187 + 0.2e1 * t2216) * t2173;
t2090 = -pkin(3) * t2205 + pkin(7) * t2162 + t2097;
t2200 = -0.2e1 * t2216;
t2185 = t2204 + (-t2203 - t2172 * t2152 + t2200 + (pkin(3) * t2173 + pkin(2)) * t2182 + (-pkin(1) * t2172 - pkin(7) - qJ(3)) * qJDD(1)) * t2171;
t2060 = t2180 * t2090 + t2177 * t2185;
t2110 = pkin(4) * t2138 - pkin(8) * t2140;
t2040 = -t2220 * pkin(4) + qJDD(4) * pkin(8) - t2110 * t2138 + t2060;
t2118 = -t2172 * t2145 + t2174 * t2193;
t2108 = -qJDD(1) * pkin(2) - t2182 * qJ(3) + qJDD(3) - t2118;
t2095 = -pkin(3) * t2162 + t2108 + (-t2205 - t2206) * pkin(7);
t2115 = t2197 + 0.2e1 * t2207;
t2186 = (-t2117 + t2209) * pkin(8) + t2115 * pkin(4) + t2095;
t2015 = t2179 * t2040 + t2176 * t2186;
t2014 = -t2176 * t2040 + t2179 * t2186;
t2059 = -t2177 * t2090 + t2180 * t2185;
t2147 = -qJDD(1) * t2172 - t2174 * t2182;
t2148 = qJDD(1) * t2174 - t2172 * t2182;
t2198 = t2181 * t2147 - t2148 * t2178;
t2196 = t2147 * t2178 + t2148 * t2181;
t2194 = -qJD(5) * t2130 - t2199;
t2039 = -qJDD(4) * pkin(4) - t2220 * pkin(8) + t2140 * t2110 - t2059;
t2154 = t2171 * t2182 * t2173;
t2151 = -qJDD(1) * t2178 - t2181 * t2182;
t2150 = qJDD(1) * t2181 - t2178 * t2182;
t2146 = t2202 * qJDD(1);
t2144 = t2173 * t2149;
t2143 = t2171 * t2149;
t2131 = -t2217 - t2220;
t2126 = -t2144 * t2174 - t2172 * t2162;
t2125 = t2143 * t2174 + t2172 * t2201;
t2124 = -t2144 * t2172 + t2174 * t2162;
t2123 = t2143 * t2172 - t2174 * t2201;
t2121 = t2146 * t2174 - t2149 * t2172;
t2120 = t2146 * t2172 + t2149 * t2174;
t2116 = t2223 - 0.2e1 * t2209;
t2114 = -qJDD(4) - t2208;
t2113 = qJDD(4) - t2208;
t2111 = -t2218 - t2220;
t2100 = -t2217 - t2218;
t2098 = pkin(5) * t2128 - qJ(6) * t2130;
t2096 = t2204 + (-t2187 + t2200) * t2171;
t2092 = t2114 * t2180 - t2131 * t2177;
t2091 = t2114 * t2177 + t2131 * t2180;
t2084 = -t2118 * t2172 + t2119 * t2174;
t2083 = t2118 * t2174 + t2119 * t2172;
t2078 = t2177 * t2223 - t2180 * t2197;
t2077 = -t2177 * t2197 - t2180 * t2223;
t2076 = t2111 * t2180 - t2113 * t2177;
t2075 = t2111 * t2177 + t2113 * t2180;
t2066 = t2136 * t2130 - t2194;
t2065 = (qJD(5) + t2136) * t2130 + t2199;
t2064 = -t2096 * t2171 + t2097 * t2173;
t2063 = t2096 * t2173 + t2097 * t2171;
t2062 = -t2091 * t2171 + t2092 * t2173;
t2061 = t2091 * t2173 + t2092 * t2171;
t2054 = -t2077 * t2171 + t2078 * t2173;
t2053 = t2077 * t2173 + t2078 * t2171;
t2048 = -t2075 * t2171 + t2076 * t2173;
t2047 = t2075 * t2173 + t2076 * t2171;
t2046 = t2064 * t2174 + t2108 * t2172;
t2045 = t2064 * t2172 - t2108 * t2174;
t2042 = t2062 * t2174 + t2116 * t2172;
t2041 = t2062 * t2172 - t2116 * t2174;
t2038 = t2048 * t2174 + t2115 * t2172;
t2037 = t2048 * t2172 - t2115 * t2174;
t2035 = t2054 * t2174 + t2100 * t2172;
t2034 = t2054 * t2172 - t2100 * t2174;
t2029 = t2066 * t2177 + t2236;
t2027 = -t2066 * t2180 + t2237;
t2025 = t2065 * t2177 + t2236;
t2023 = -t2065 * t2180 + t2237;
t2021 = -t2059 * t2177 + t2060 * t2180;
t2020 = t2059 * t2180 + t2060 * t2177;
t2013 = -t2194 * pkin(5) + (pkin(5) * t2136 - (2 * qJD(6))) * t2130 + t2039 - t2188 * qJ(6);
t2012 = -pkin(5) * t2189 - qJ(6) * t2219 + t2130 * t2098 + qJDD(6) - t2014;
t2011 = -pkin(5) * t2219 + qJ(6) * t2189 + 0.2e1 * qJD(6) * t2136 - t2128 * t2098 + t2015;
t2010 = -t2027 * t2171 + t2029 * t2173;
t2008 = t2027 * t2173 + t2029 * t2171;
t2006 = -t2023 * t2171 + t2025 * t2173;
t2004 = t2023 * t2173 + t2025 * t2171;
t2002 = -t2020 * t2171 + t2021 * t2173;
t2001 = t2020 * t2173 + t2021 * t2171;
t1996 = t2002 * t2174 + t2095 * t2172;
t1995 = t2002 * t2172 - t2095 * t2174;
t1994 = t2010 * t2174 + t2239;
t1992 = t2010 * t2172 - t2238;
t1990 = t2006 * t2174 + t2239;
t1988 = t2006 * t2172 - t2238;
t1986 = -t2014 * t2176 + t2015 * t2179;
t1985 = t2014 * t2179 + t2015 * t2176;
t1980 = t1986 * t2180 + t2039 * t2177;
t1979 = t1986 * t2177 - t2039 * t2180;
t1978 = t2011 * t2179 + t2012 * t2176;
t1977 = t2011 * t2176 - t2012 * t2179;
t1976 = t1978 * t2180 + t2013 * t2177;
t1975 = t1978 * t2177 - t2013 * t2180;
t1974 = -t1979 * t2171 + t1980 * t2173;
t1973 = t1979 * t2173 + t1980 * t2171;
t1972 = t1974 * t2174 + t1985 * t2172;
t1971 = t1974 * t2172 - t1985 * t2174;
t1970 = -t1975 * t2171 + t1976 * t2173;
t1969 = t1975 * t2173 + t1976 * t2171;
t1968 = t1970 * t2174 + t1977 * t2172;
t1967 = t1970 * t2172 - t1977 * t2174;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2151, -t2150, 0, -t2152 * t2178 + t2153 * t2181, 0, 0, 0, 0, 0, 0, t2198, -t2196, 0, -t2083 * t2178 + t2084 * t2181, 0, 0, 0, 0, 0, 0, -t2124 * t2178 + t2126 * t2181, -t2123 * t2178 + t2125 * t2181, -t2120 * t2178 + t2121 * t2181, -t2045 * t2178 + t2046 * t2181, 0, 0, 0, 0, 0, 0, -t2037 * t2178 + t2038 * t2181, -t2041 * t2178 + t2042 * t2181, -t2034 * t2178 + t2035 * t2181, -t1995 * t2178 + t1996 * t2181, 0, 0, 0, 0, 0, 0, -t1988 * t2178 + t1990 * t2181, -t2248, t2247, -t1971 * t2178 + t1972 * t2181, 0, 0, 0, 0, 0, 0, -t1992 * t2178 + t1994 * t2181, t2247, t2248, -t1967 * t2178 + t1968 * t2181; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2150, t2151, 0, t2152 * t2181 + t2153 * t2178, 0, 0, 0, 0, 0, 0, t2196, t2198, 0, t2083 * t2181 + t2084 * t2178, 0, 0, 0, 0, 0, 0, t2124 * t2181 + t2126 * t2178, t2123 * t2181 + t2125 * t2178, t2120 * t2181 + t2121 * t2178, t2045 * t2181 + t2046 * t2178, 0, 0, 0, 0, 0, 0, t2037 * t2181 + t2038 * t2178, t2041 * t2181 + t2042 * t2178, t2034 * t2181 + t2035 * t2178, t1995 * t2181 + t1996 * t2178, 0, 0, 0, 0, 0, 0, t1988 * t2181 + t1990 * t2178, t2249, t2246, t1971 * t2181 + t1972 * t2178, 0, 0, 0, 0, 0, 0, t1992 * t2181 + t1994 * t2178, t2246, -t2249, t1967 * t2181 + t1968 * t2178; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2168, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2063, 0, 0, 0, 0, 0, 0, t2047, t2061, t2053, t2001, 0, 0, 0, 0, 0, 0, t2004, -t2003, t2241, t1973, 0, 0, 0, 0, 0, 0, t2008, t2241, t2003, t1969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2182, -qJDD(1), 0, t2153, 0, 0, 0, 0, 0, 0, t2147, -t2148, 0, t2084, 0, 0, 0, 0, 0, 0, t2126, t2125, t2121, t2046, 0, 0, 0, 0, 0, 0, t2038, t2042, t2035, t1996, 0, 0, 0, 0, 0, 0, t1990, t1993, t2244, t1972, 0, 0, 0, 0, 0, 0, t1994, t2244, -t1993, t1968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2182, 0, t2152, 0, 0, 0, 0, 0, 0, t2148, t2147, 0, t2083, 0, 0, 0, 0, 0, 0, t2124, t2123, t2120, t2045, 0, 0, 0, 0, 0, 0, t2037, t2041, t2034, t1995, 0, 0, 0, 0, 0, 0, t1988, t1991, t2245, t1971, 0, 0, 0, 0, 0, 0, t1992, t2245, -t1991, t1967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2168, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2063, 0, 0, 0, 0, 0, 0, t2047, t2061, t2053, t2001, 0, 0, 0, 0, 0, 0, t2004, -t2003, t2241, t1973, 0, 0, 0, 0, 0, 0, t2008, t2241, t2003, t1969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2182, -qJDD(1), 0, t2119, 0, 0, 0, 0, 0, 0, -t2144, t2143, t2146, t2064, 0, 0, 0, 0, 0, 0, t2048, t2062, t2054, t2002, 0, 0, 0, 0, 0, 0, t2006, t2009, t2240, t1974, 0, 0, 0, 0, 0, 0, t2010, t2240, -t2009, t1970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2182, 0, t2118, 0, 0, 0, 0, 0, 0, t2162, -t2201, t2149, -t2108, 0, 0, 0, 0, 0, 0, -t2115, -t2116, -t2100, -t2095, 0, 0, 0, 0, 0, 0, -t2229, t2049, -t2222, -t1985, 0, 0, 0, 0, 0, 0, -t2229, -t2222, -t2049, -t1977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2168, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2063, 0, 0, 0, 0, 0, 0, t2047, t2061, t2053, t2001, 0, 0, 0, 0, 0, 0, t2004, -t2003, t2241, t1973, 0, 0, 0, 0, 0, 0, t2008, t2241, t2003, t1969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2205, t2154, t2162, t2097, 0, 0, 0, 0, 0, 0, t2076, t2092, t2078, t2021, 0, 0, 0, 0, 0, 0, t2025, -t2024, t2235, t1980, 0, 0, 0, 0, 0, 0, t2029, t2235, t2024, t1976; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2154, -t2206, -t2201, t2096, 0, 0, 0, 0, 0, 0, t2075, t2091, t2077, t2020, 0, 0, 0, 0, 0, 0, t2023, -t2022, t2234, t1979, 0, 0, 0, 0, 0, 0, t2027, t2234, t2022, t1975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2162, t2201, -t2149, t2108, 0, 0, 0, 0, 0, 0, t2115, t2116, t2100, t2095, 0, 0, 0, 0, 0, 0, t2229, -t2049, t2222, t1985, 0, 0, 0, 0, 0, 0, t2229, t2222, t2049, t1977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2111, t2114, -t2197, t2060, 0, 0, 0, 0, 0, 0, t2228, -t2051, t2221, t1986, 0, 0, 0, 0, 0, 0, t2228, t2221, t2051, t1978; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2113, t2131, -t2223, t2059, 0, 0, 0, 0, 0, 0, -t2065, -t2188, t2080, -t2039, 0, 0, 0, 0, 0, 0, -t2066, t2080, t2188, -t2013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2115, t2116, t2100, t2095, 0, 0, 0, 0, 0, 0, t2229, -t2049, t2222, t1985, 0, 0, 0, 0, 0, 0, t2229, t2222, t2049, t1977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2224, -t2072, t2191, t2015, 0, 0, 0, 0, 0, 0, t2224, t2191, t2072, t2011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2073, t2225, -t2069, t2014, 0, 0, 0, 0, 0, 0, t2073, -t2069, -t2225, -t2012; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2065, t2188, -t2080, t2039, 0, 0, 0, 0, 0, 0, t2066, -t2080, -t2188, t2013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2224, t2191, t2072, t2011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2066, -t2080, -t2188, t2013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2073, t2069, t2225, t2012;];
f_new_reg  = t1;
