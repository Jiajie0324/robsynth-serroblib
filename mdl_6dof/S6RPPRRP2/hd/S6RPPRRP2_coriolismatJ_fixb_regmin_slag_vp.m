% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta2,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:01:25
% EndTime: 2019-03-09 02:01:33
% DurationCPUTime: 4.82s
% Computational Cost: add. (6279->358), mult. (11772->461), div. (0->0), fcn. (12672->8), ass. (0->289)
t243 = cos(qJ(5));
t239 = sin(pkin(10));
t240 = cos(pkin(10));
t242 = sin(qJ(4));
t407 = cos(qJ(4));
t222 = t239 * t242 - t407 * t240;
t219 = t222 ^ 2;
t312 = t407 * t239;
t361 = t242 * t240;
t224 = t312 + t361;
t220 = t224 ^ 2;
t322 = -t220 - t219;
t423 = t322 * t243;
t428 = qJD(1) * t423;
t241 = sin(qJ(5));
t424 = t322 * t241;
t427 = qJD(1) * t424;
t426 = qJD(3) * t423;
t425 = qJD(3) * t424;
t422 = 0.2e1 * t241;
t216 = t224 * qJD(4);
t203 = t243 * t216;
t133 = t241 * t222;
t336 = t133 * qJD(5);
t350 = -t203 + t336;
t321 = t220 - t219;
t228 = t239 ^ 2 + t240 ^ 2;
t116 = t133 * qJD(4);
t340 = qJD(5) * t243;
t310 = t224 * t340;
t421 = t310 - t116;
t137 = t243 * t222;
t127 = t137 * qJD(4);
t341 = qJD(5) * t241;
t311 = t224 * t341;
t420 = t311 + t127;
t337 = t133 * qJD(1);
t419 = t337 + t341;
t327 = t222 * qJD(1);
t418 = -t327 - qJD(5);
t225 = -cos(pkin(9)) * pkin(1) - pkin(2) - t240 * pkin(3);
t401 = t224 * pkin(8);
t288 = t222 * pkin(4) - t401;
t246 = t225 + t288;
t285 = sin(pkin(9)) * pkin(1) + qJ(3);
t270 = pkin(7) + t285;
t211 = t270 * t240;
t257 = t239 * t270;
t111 = t407 * t211 - t242 * t257;
t359 = t243 * t111;
t78 = t241 * t246 + t359;
t417 = t78 / 0.2e1;
t110 = t242 * t211 + t407 * t257;
t107 = t110 * t243;
t103 = t107 / 0.2e1;
t363 = t241 * qJ(6);
t400 = t243 * pkin(5);
t283 = t363 + t400;
t130 = t283 * t224;
t416 = t130 / 0.2e1;
t403 = t224 * pkin(4);
t404 = t222 * pkin(8);
t159 = t403 + t404;
t415 = -t159 / 0.2e1;
t360 = t243 * qJ(6);
t406 = pkin(5) * t241;
t227 = t360 - t406;
t414 = -t227 / 0.2e1;
t413 = t227 / 0.2e1;
t237 = t241 ^ 2;
t412 = -t237 / 0.2e1;
t238 = t243 ^ 2;
t411 = -t238 / 0.2e1;
t410 = -t241 / 0.2e1;
t409 = -t243 / 0.2e1;
t408 = t243 / 0.2e1;
t405 = t222 * pkin(5);
t402 = t224 * pkin(5);
t368 = t222 * qJ(6);
t55 = t78 + t368;
t399 = t55 * t222;
t398 = t55 * t243;
t362 = t241 * t111;
t77 = -t243 * t246 + t362;
t56 = t77 - t405;
t397 = t56 * t241;
t315 = -t77 / 0.2e1 + t56 / 0.2e1;
t316 = -t55 / 0.2e1 + t417;
t249 = t316 * t241 + t315 * t243;
t6 = t222 * t416 + t249 * t224;
t396 = t6 * qJD(1);
t217 = t224 * qJ(6);
t147 = t241 * t159;
t352 = t147 - t107;
t65 = t217 + t352;
t395 = t65 * t243;
t358 = t243 * t159;
t371 = t110 * t241;
t66 = -t358 - t371 - t402;
t394 = t66 * t241;
t393 = t77 * t222;
t392 = t78 * t222;
t138 = t243 * t224;
t8 = t56 * t137 - t66 * t138 + (t65 * t224 - t399) * t241;
t391 = t8 * qJD(1);
t134 = t241 * t224;
t287 = pkin(5) * t134 - qJ(6) * t138;
t83 = t110 + t287;
t390 = t83 * t241;
t389 = t83 * t243;
t84 = -pkin(5) * t133 + qJ(6) * t137 + t111;
t388 = t84 * t241;
t387 = t84 * t243;
t9 = -t78 * t138 + (t398 + (t56 - t77) * t241) * t224;
t386 = t9 * qJD(1);
t226 = -pkin(4) - t283;
t366 = t224 * t226;
t302 = t366 / 0.2e1;
t385 = t243 * t302 + t390 / 0.2e1;
t25 = -t392 + (t130 * t241 + t389) * t224;
t384 = qJD(1) * t25;
t26 = -t393 + (-t130 * t243 + t390) * t224;
t383 = qJD(1) * t26;
t29 = -t83 * t138 + t399;
t382 = qJD(1) * t29;
t37 = t110 * t138 - t392;
t381 = qJD(1) * t37;
t94 = t321 * t241;
t378 = qJD(1) * t94;
t96 = t321 * t243;
t376 = qJD(1) * t96;
t374 = qJD(5) * t77;
t263 = t368 / 0.2e1 - t316;
t267 = t405 / 0.2e1 - t315;
t10 = t263 * t241 + t267 * t243;
t373 = t10 * qJD(1);
t11 = t267 * t241 - t263 * t243;
t372 = t11 * qJD(1);
t14 = (t55 - t387) * t224 + (t65 + t389) * t222;
t370 = t14 * qJD(1);
t17 = t159 * t137 + (-t77 + t362) * t224;
t369 = t17 * qJD(1);
t367 = t222 * t224;
t365 = t227 * t241;
t299 = t411 + t412;
t251 = t299 * t404 + t302;
t264 = t66 * t408 + t65 * t410;
t23 = t251 + t264;
t364 = t23 * qJD(1);
t36 = -t110 * t134 + t393;
t357 = t36 * qJD(1);
t71 = (0.1e1 / 0.2e1 + t299) * t367;
t356 = t71 * qJD(1);
t355 = -t107 / 0.2e1 + t147 / 0.2e1;
t354 = t103 - t147 / 0.2e1;
t126 = t137 * qJD(5);
t202 = t241 * t216;
t353 = t126 + t202;
t351 = (t412 + t238 / 0.2e1) * t224;
t348 = -t237 - t238;
t231 = t238 - t237;
t346 = qJD(3) * t133;
t345 = qJD(3) * t241;
t344 = qJD(3) * t243;
t343 = qJD(4) * t241;
t342 = qJD(4) * t243;
t339 = qJD(6) * t241;
t338 = t321 * qJD(1);
t335 = t133 * qJD(6);
t334 = t134 * qJD(1);
t128 = t137 * qJD(1);
t333 = t138 * qJD(1);
t206 = t237 * t222;
t207 = t238 * t222;
t143 = t206 + t207;
t332 = t143 * qJD(1);
t331 = t143 * qJD(4);
t171 = t228 * t285;
t329 = t171 * qJD(1);
t218 = t312 / 0.2e1 + t361 / 0.2e1;
t328 = t218 * qJD(1);
t214 = t222 * qJD(4);
t326 = t222 * qJD(5);
t212 = t222 * qJD(6);
t325 = t224 * qJD(1);
t324 = t228 * qJD(1);
t323 = t243 * qJD(6);
t320 = pkin(8) * t340;
t319 = pkin(8) * t341;
t318 = -t404 / 0.2e1;
t317 = t404 / 0.2e1;
t208 = t402 / 0.2e1;
t300 = -t138 / 0.2e1;
t314 = t226 * t300 + t243 * t317 - t390 / 0.2e1;
t101 = t371 / 0.2e1;
t142 = t358 / 0.2e1;
t313 = t101 + t142 + t208;
t309 = t241 * t323;
t308 = t222 * t325;
t307 = t222 * t216;
t306 = t241 * t340;
t305 = t241 * t325;
t304 = t224 * t339;
t232 = t241 * t342;
t303 = t243 * t325;
t301 = -t365 / 0.2e1;
t91 = t218 + t351;
t298 = qJD(1) * t91 + t232;
t131 = (t237 / 0.2e1 + t411) * t224;
t297 = qJD(1) * t131 - t232;
t173 = t243 * t220 * t241 * qJD(1);
t296 = qJD(4) * t131 + t173;
t295 = qJD(1) * t225 + qJD(3);
t293 = t241 * t303;
t292 = t241 * t203;
t291 = -t402 / 0.2e1 - t371 / 0.2e1;
t290 = -t130 / 0.2e1 + t318;
t286 = 0.2e1 * t292;
t282 = t222 * t226 + t401;
t265 = -t398 / 0.2e1 - t397 / 0.2e1;
t4 = (t395 / 0.2e1 + t83 / 0.2e1 + t394 / 0.2e1) * t224 + (t84 / 0.2e1 + t265) * t222;
t5 = t55 * t65 + t56 * t66 + t83 * t84;
t281 = t5 * qJD(1) + t4 * qJD(2);
t7 = t130 * t83 - t55 * t77 + t56 * t78;
t280 = t7 * qJD(1) + t6 * qJD(2);
t279 = t394 + t395;
t75 = (0.1e1 + t348) * t367;
t278 = t4 * qJD(1) + t75 * qJD(2);
t15 = (-t56 + t388) * t224 + (-t66 - t390) * t222;
t277 = t15 * qJD(1);
t16 = t83 * t224 + (-t397 - t398) * t222;
t276 = qJD(1) * t16 + qJD(2) * t71;
t18 = (-t78 + t359) * t224 + (-t352 - t107) * t222;
t275 = t18 * qJD(1);
t166 = t226 * t243 - t365;
t245 = (t224 * t413 - t83 / 0.2e1) * t243 + (t302 + t290) * t241;
t22 = -t217 + t245 + t354;
t274 = -qJD(1) * t22 + qJD(4) * t166;
t167 = -t226 * t241 - t227 * t243;
t19 = (t301 - pkin(5) / 0.2e1) * t224 + (t415 + t290) * t243 + t291 + t385;
t273 = -t19 * qJD(1) + t167 * qJD(4);
t272 = t418 * t241;
t271 = t418 * t243;
t269 = -qJD(5) * t227 - t339;
t268 = -t65 * qJ(6) / 0.2e1 + t66 * pkin(5) / 0.2e1;
t266 = -t360 / 0.2e1 + t406 / 0.2e1;
t183 = t243 * t318;
t34 = t183 + (-t403 / 0.2e1 + t415) * t243;
t262 = pkin(4) * t343 - t34 * qJD(1);
t247 = (t317 + t403 / 0.2e1) * t241 + t103;
t32 = t247 + t355;
t261 = pkin(4) * t342 - t32 * qJD(1);
t28 = t313 + t314;
t260 = -t28 * qJD(1) + t226 * t343;
t259 = t224 * t271;
t258 = qJD(5) * t218 + t308;
t144 = t231 * t220;
t255 = t144 * qJD(1) + t286;
t254 = -t231 * qJD(4) + 0.2e1 * t293;
t253 = t266 * t222;
t244 = t249 * pkin(8) + t226 * t416 + t83 * t414;
t3 = t244 + t268;
t88 = (t413 + t266) * t222;
t252 = t226 * t227 * qJD(4) - t3 * qJD(1) + t88 * qJD(2);
t250 = -t283 * qJD(5) + t323;
t148 = t220 * t238 + t219;
t248 = t148 * qJD(1) + t292 + t326;
t205 = t218 * qJD(4);
t174 = t243 * t304;
t172 = t418 * qJ(6);
t168 = t237 * qJD(4) + t293;
t112 = t131 * qJD(5);
t100 = t128 + t340;
t92 = -t218 + t351;
t89 = t222 * t414 + t253;
t85 = t222 * t305 - t127;
t76 = t224 * t272;
t74 = t78 * qJD(5);
t35 = pkin(4) * t300 + 0.2e1 * t101 + t142 + t183;
t33 = t247 + t354;
t27 = -t358 / 0.2e1 + t291 + t314;
t24 = t251 - t264;
t21 = t217 + t245 + t355;
t20 = t224 * t301 + t290 * t243 + t208 + t313 + t385;
t13 = t77 * t409 + t55 * t410 + t241 * t417 + t56 * t408 + (t363 / 0.2e1 + t400 / 0.2e1) * t222;
t12 = t78 * t409 + t77 * t410 + t253 - t265;
t2 = t244 - t268;
t1 = qJD(3) * t71 + qJD(4) * t4 + qJD(5) * t6;
t30 = [0, 0, 0, 0, 0, 0, t228 * qJD(3), t171 * qJD(3), -t307, -t321 * qJD(4), 0, 0, 0, t225 * t216, -t225 * t214, -t220 * t306 - t238 * t307, -t144 * qJD(5) + t222 * t286, qJD(4) * t96 - t222 * t311, -t94 * qJD(4) - t222 * t310, t307, qJD(4) * t17 + qJD(5) * t37 - t425, qJD(4) * t18 + qJD(5) * t36 - t426, t15 * qJD(4) + t25 * qJD(5) - t220 * t309 - t425, -qJD(4) * t8 - qJD(5) * t9 - t222 * t304, qJD(4) * t14 + qJD(5) * t26 + qJD(6) * t148 + t426, qJD(3) * t16 + qJD(4) * t5 + qJD(5) * t7 + qJD(6) * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, t324, t329, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, -t428, -t427, 0, t428, qJD(4) * t24 + qJD(5) * t12 + t276; 0, 0, 0, 0, 0, 0, 0, 0, -t308, -t338, -t214, -t216, 0, -qJD(4) * t111 + t225 * t325, qJD(4) * t110 - t225 * t327, -t112 + (-t238 * t325 - t232) * t222 (t206 - t207) * qJD(4) + (-qJD(5) + t327) * t138 * t422, t202 + t376, t203 - t378, t258, t369 + (t241 * t288 - t359) * qJD(4) + t35 * qJD(5) (t243 * t288 + t362) * qJD(4) + t33 * qJD(5) + t275 (-t241 * t282 - t387) * qJD(4) + t20 * qJD(5) + t92 * qJD(6) + t277, qJD(4) * t279 + t13 * qJD(5) - t391, t370 + (t243 * t282 - t388) * qJD(4) + t21 * qJD(5) + t174, t24 * qJD(3) + (pkin(8) * t279 + t84 * t226) * qJD(4) + t2 * qJD(5) + t27 * qJD(6) + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -t255, t76, t259, t205, qJD(4) * t35 + t381 - t74, qJD(4) * t33 + t357 + t374, qJD(4) * t20 + t384 - t74, t13 * qJD(4) + qJD(5) * t287 - t304 - t386, qJD(4) * t21 + t212 - t374 + t383, t12 * qJD(3) + t2 * qJD(4) + (-pkin(5) * t78 - qJ(6) * t77) * qJD(5) + t55 * qJD(6) + t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t92 - t173, t76, t248, qJD(4) * t27 + qJD(5) * t55 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t214, 0, 0, 0, 0, 0, t350, t353, t350, -t331, -t353 (t348 * t404 + t366) * qJD(4) + t89 * qJD(5) - t335 + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t421, t420, -t421, 0, -t420, t89 * qJD(4) - t130 * qJD(5) + t224 * t323 + t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421; 0, 0, 0, 0, 0, 0, -t324, -t329, 0, 0, 0, 0, 0, t216, -t214, 0, 0, 0, 0, 0, t427 - t350, -t134 * qJD(4) - t243 * t326 + t428, qJD(4) * t138 - t241 * t326 + t427, t331, t353 - t428, -qJD(4) * t23 - qJD(5) * t11 - t276 + t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, -t327, 0, 0, 0, 0, 0, t303, -t334, t333, t332, t305, -t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, t271, t272, 0, t100, -t269 - t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419; 0, 0, 0, 0, 0, 0, 0, 0, t308, t338, 0, 0, 0, -t295 * t224, t295 * t222, t238 * t308 - t112, t259 * t422, t126 - t376, -t336 + t378, -t258, t34 * qJD(5) - t224 * t344 - t369, qJD(3) * t134 + qJD(5) * t32 - t275, -qJD(3) * t138 + qJD(5) * t19 + qJD(6) * t91 - t277, -qJD(3) * t143 - qJD(5) * t10 + qJD(6) * t137 + t391, qJD(5) * t22 - t224 * t345 + t174 - t370, qJD(3) * t23 + qJD(5) * t3 + qJD(6) * t28 - t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t88 - t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t327, 0, 0, 0, 0, 0, -t303, t334, -t333, -t332, -t305, t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, t231 * qJD(5), 0, 0, 0, -pkin(4) * t341, -pkin(4) * t340, -t167 * qJD(5) + t309, 0, -qJD(5) * t166 + qJD(6) * t237, t269 * t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, -t254, t100, -t419, -t328, -t262 - t320, -t261 + t319, -t273 - t320, t250 - t373, -t274 - t319, pkin(8) * t250 - t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t100, t168, -t260 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t255, t85, t222 * t303 + t116, t205, -qJD(4) * t34 + t346 - t381, -t32 * qJD(4) + t222 * t344 - t357, -qJD(4) * t19 + t222 * t345 - t384, qJD(4) * t10 + t386, -qJD(3) * t137 - qJD(4) * t22 + t212 - t383, qJ(6) * t212 + qJD(3) * t11 - qJD(4) * t3 - t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t88 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t337, t243 * t327, t241 * t327, 0, -t128, t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t254, -t128, t337, t328, t262, t261, t273, t373, t274, t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t91 + t173, t85, -t248, -qJ(6) * t326 - qJD(4) * t28 - t346 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t128, -t168, t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t30;
