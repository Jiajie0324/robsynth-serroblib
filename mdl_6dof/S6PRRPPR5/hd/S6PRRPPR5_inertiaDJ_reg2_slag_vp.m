% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRPPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR5_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:21:05
% EndTime: 2019-03-08 21:21:11
% DurationCPUTime: 2.35s
% Computational Cost: add. (1901->231), mult. (4682->428), div. (0->0), fcn. (4313->10), ass. (0->133)
t157 = pkin(4) + pkin(8);
t145 = pkin(3) + qJ(5);
t132 = pkin(9) + t145;
t85 = cos(qJ(3));
t163 = t145 * t85;
t86 = cos(qJ(2));
t138 = qJD(2) * t86;
t79 = sin(pkin(6));
t125 = t79 * t138;
t84 = sin(qJ(2));
t149 = t79 * t84;
t83 = sin(qJ(3));
t131 = t83 * t149;
t81 = cos(pkin(6));
t34 = -qJD(3) * t131 + (qJD(3) * t81 + t125) * t85;
t49 = t149 * t85 + t81 * t83;
t42 = t49 * qJD(4);
t162 = qJ(4) * t34 + t42;
t154 = sin(qJ(6));
t118 = qJD(6) * t154;
t155 = cos(qJ(6));
t119 = qJD(6) * t155;
t78 = sin(pkin(11));
t80 = cos(pkin(11));
t47 = -t118 * t78 + t119 * t80;
t121 = t154 * t78;
t122 = t155 * t80;
t51 = t122 - t121;
t161 = qJD(3) * (t83 ^ 2 - t85 ^ 2);
t73 = t78 ^ 2;
t75 = t80 ^ 2;
t56 = (t73 + t75) * qJD(5);
t136 = qJD(4) * t85;
t141 = qJ(4) * t83;
t160 = qJD(3) * (t141 + t163) + qJD(5) * t83 - t136;
t20 = t49 * t34;
t35 = qJD(3) * t49 + t125 * t83;
t48 = -t81 * t85 + t131;
t159 = -0.2e1 * t138 * t79 ^ 2 * t84 + 0.2e1 * t35 * t48 + 0.2e1 * t20;
t158 = 0.2e1 * qJD(4);
t50 = t154 * t80 + t155 * t78;
t153 = t50 * t47;
t46 = t50 * qJD(6);
t152 = t51 * t46;
t151 = t78 * t83;
t150 = t78 * t85;
t148 = t79 * t86;
t147 = t80 * t83;
t146 = t80 * t85;
t112 = -pkin(2) - t163;
t128 = t78 * t157;
t29 = t80 * (t112 - t141) + t83 * t128;
t61 = t157 * t85;
t140 = qJ(4) * t85;
t139 = qJD(2) * t84;
t137 = qJD(4) * t83;
t135 = t83 * qJD(3);
t70 = t85 * qJD(3);
t134 = qJ(4) * qJD(4);
t133 = -0.2e1 * pkin(2) * qJD(3);
t130 = pkin(8) * t135;
t129 = pkin(8) * t70;
t127 = t78 * t70;
t126 = t79 * t139;
t124 = t80 * t135;
t123 = t83 * t70;
t120 = t145 * t83;
t64 = -0.2e1 * t123;
t117 = t78 * t124;
t116 = 0.2e1 * t161;
t113 = t132 * t154;
t111 = -pkin(3) * t85 - t141;
t104 = -t85 * qJD(5) - t137;
t101 = t78 * t104;
t102 = t78 * qJ(4) + t157 * t80;
t16 = -t101 + (t102 * t85 - t120 * t78) * qJD(3);
t100 = t80 * t104;
t17 = t100 + (t80 * t120 + (-t80 * qJ(4) + t128) * t85) * qJD(3);
t5 = t16 * t80 + t17 * t78;
t21 = -t126 * t78 + t35 * t80;
t22 = t126 * t80 + t35 * t78;
t6 = t21 * t80 + t22 * t78;
t23 = t50 * t135 - t47 * t85;
t40 = t50 * t85;
t110 = t23 * t51 + t40 * t46;
t24 = t135 * t51 + t85 * t46;
t39 = t51 * t85;
t109 = -t24 * t50 + t39 * t47;
t108 = t152 - t153;
t106 = t132 * t122;
t103 = -t47 * t83 - t50 * t70;
t99 = pkin(5) + t102;
t32 = t148 * t78 + t48 * t80;
t33 = -t148 * t80 + t48 * t78;
t10 = t154 * t32 + t155 * t33;
t25 = -pkin(9) * t146 + t29;
t87 = -t101 + (-t132 * t151 + t85 * t99) * qJD(3);
t88 = t100 + (t85 * t128 + (t132 * t83 - t140) * t80) * qJD(3);
t91 = (t132 * t85 + pkin(2)) * t78 + t99 * t83;
t90 = t155 * t91;
t1 = -qJD(6) * t90 + t118 * t25 - t154 * t87 - t155 * t88;
t89 = t154 * t91;
t2 = -qJD(6) * t89 - t119 * t25 - t154 * t88 + t155 * t87;
t7 = -t154 * t25 + t90;
t8 = t155 * t25 + t89;
t97 = -t1 * t50 + t2 * t51 - t46 * t7 + t47 * t8;
t3 = t118 * t33 - t119 * t32 - t154 * t21 - t155 * t22;
t4 = -qJD(6) * t10 - t154 * t22 + t155 * t21;
t9 = -t154 * t33 + t155 * t32;
t96 = t10 * t47 - t3 * t50 + t4 * t51 - t46 * t9;
t55 = t132 * t78;
t13 = qJD(5) * t50 + qJD(6) * t106 - t118 * t55;
t14 = t55 * t119 + qJD(5) * t121 + (-qJD(5) * t155 + qJD(6) * t113) * t80;
t30 = t154 * t55 - t106;
t31 = -t113 * t80 - t155 * t55;
t95 = t13 * t50 - t14 * t51 + t30 * t46 - t31 * t47;
t94 = qJD(3) * t111 + t136;
t93 = t34 * t85 + t35 * t83 + (t48 * t85 - t49 * t83) * qJD(3);
t92 = t93 * pkin(8);
t67 = pkin(5) * t78 + qJ(4);
t65 = t80 * t70;
t63 = 0.2e1 * t123;
t57 = -pkin(2) + t111;
t54 = t157 * t135;
t53 = -0.2e1 * t161;
t45 = pkin(5) * t146 + t61;
t43 = -t137 + (pkin(3) * t83 - t140) * qJD(3);
t38 = (-pkin(5) * t80 - t157) * t135;
t37 = (t135 * t86 + t139 * t85) * t79;
t36 = (t139 * t83 - t70 * t86) * t79;
t28 = t102 * t83 - t112 * t78;
t26 = -t46 * t83 + t51 * t70;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t21 * t32 + 0.2e1 * t22 * t33 + 0.2e1 * t20, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t10 * t3 + 0.2e1 * t4 * t9 + 0.2e1 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, -t125, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t36, t93, -pkin(2) * t126 + t92, 0, 0, 0, 0, 0, 0, t93, t37, -t36 (t139 * t57 - t43 * t86) * t79 + t92, 0, 0, 0, 0, 0, 0, t34 * t146 + t21 * t83 + (-t147 * t49 + t32 * t85) * qJD(3), -t34 * t150 - t22 * t83 + (t151 * t49 - t33 * t85) * qJD(3) (t21 * t78 - t22 * t80) * t85 + (-t32 * t78 + t33 * t80) * t135, t16 * t32 + t17 * t33 + t21 * t28 + t22 * t29 + t34 * t61 - t49 * t54, 0, 0, 0, 0, 0, 0, -t24 * t49 + t34 * t39 + t4 * t83 + t70 * t9, -t10 * t70 + t23 * t49 + t3 * t83 - t34 * t40, t10 * t24 - t23 * t9 + t3 * t39 + t4 * t40, -t1 * t10 + t2 * t9 - t3 * t8 + t34 * t45 + t38 * t49 + t4 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t53, 0, t64, 0, 0, t83 * t133, t85 * t133, 0, 0, 0, 0, 0, t63, t53, t64, 0, -0.2e1 * t135 * t57 + 0.2e1 * t43 * t85, -0.2e1 * t43 * t83 - 0.2e1 * t57 * t70, 0.2e1 * t57 * t43, t73 * t64, -0.4e1 * t85 * t117, t78 * t116, t75 * t64, t80 * t116, t63, -0.2e1 * t54 * t146 + 0.2e1 * t16 * t83 + 0.2e1 * (-t147 * t61 + t28 * t85) * qJD(3), 0.2e1 * t54 * t150 - 0.2e1 * t17 * t83 + 0.2e1 * (t151 * t61 - t29 * t85) * qJD(3), 0.2e1 * (t16 * t78 - t17 * t80) * t85 + 0.2e1 * (-t28 * t78 + t29 * t80) * t135, 0.2e1 * t16 * t28 + 0.2e1 * t17 * t29 - 0.2e1 * t54 * t61, -0.2e1 * t40 * t23, -0.2e1 * t23 * t39 - 0.2e1 * t24 * t40, 0.2e1 * t23 * t83 - 0.2e1 * t40 * t70, -0.2e1 * t39 * t24, 0.2e1 * t24 * t83 - 0.2e1 * t39 * t70, t63, 0.2e1 * t2 * t83 - 0.2e1 * t24 * t45 + 0.2e1 * t38 * t39 + 0.2e1 * t7 * t70, 0.2e1 * t1 * t83 + 0.2e1 * t23 * t45 - 0.2e1 * t38 * t40 - 0.2e1 * t70 * t8, 0.2e1 * t1 * t39 + 0.2e1 * t2 * t40 - 0.2e1 * t23 * t7 + 0.2e1 * t24 * t8, -0.2e1 * t1 * t8 + 0.2e1 * t2 * t7 + 0.2e1 * t38 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, -t34, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t34, -pkin(3) * t35 + t162, 0, 0, 0, 0, 0, 0, t34 * t78, t34 * t80, -t6, -t6 * t145 + (-t32 * t80 - t33 * t78) * qJD(5) + t162, 0, 0, 0, 0, 0, 0, t34 * t50 + t47 * t49, t34 * t51 - t46 * t49, -t96, -t10 * t13 + t14 * t9 - t3 * t31 + t30 * t4 + t34 * t67 + t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, -t135, 0, -t129, t130, 0, 0, 0, -t70, t135, 0, 0, 0, t94, t129, -t130, t94 * pkin(8), t117 (-t73 + t75) * t135, t65, -t117, -t127, 0, -t160 * t80 - t54 * t78, t160 * t78 - t54 * t80, -t5, -qJ(4) * t54 + qJD(4) * t61 - t5 * t145 + (-t28 * t80 - t29 * t78) * qJD(5), t110, -t23 * t50 + t24 * t51 + t39 * t46 + t40 * t47, t26, t109, t103, 0, qJD(4) * t39 + t14 * t83 - t24 * t67 + t30 * t70 + t38 * t50 + t45 * t47, -qJD(4) * t40 + t13 * t83 + t23 * t67 - t31 * t70 + t38 * t51 - t45 * t46, t13 * t39 + t14 * t40 - t23 * t30 + t24 * t31 - t97, qJD(4) * t45 - t1 * t31 - t13 * t8 + t14 * t7 + t2 * t30 + t38 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, 0.2e1 * t134, 0, 0, 0, 0, 0, 0, t78 * t158, t80 * t158, 0.2e1 * t56, 0.2e1 * t145 * t56 + 0.2e1 * t134, -0.2e1 * t152, 0.2e1 * t46 * t50 - 0.2e1 * t47 * t51, 0, 0.2e1 * t153, 0, 0, 0.2e1 * qJD(4) * t50 + 0.2e1 * t47 * t67, 0.2e1 * qJD(4) * t51 - 0.2e1 * t46 * t67, 0.2e1 * t95, 0.2e1 * qJD(4) * t67 - 0.2e1 * t13 * t31 + 0.2e1 * t14 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, 0, 0, t129, 0, 0, 0, 0, 0, 0, t65, -t127, 0, t5, 0, 0, 0, 0, 0, 0, t26, t103, -t109 - t110, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t108, -t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t78 * t135, 0, -t54, 0, 0, 0, 0, 0, 0, -t24, t23, 0, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), 0, 0, 0, 0, 0, 0, t47, -t46, 0, qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, 0, t24, t70, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, 0, -t47, 0, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, -t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t11;
