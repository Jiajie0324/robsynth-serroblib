% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPPR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:21:06
% EndTime: 2019-03-08 21:21:16
% DurationCPUTime: 3.95s
% Computational Cost: add. (4389->402), mult. (10644->567), div. (0->0), fcn. (7455->10), ass. (0->232)
t173 = cos(qJ(3));
t248 = qJD(3) * t173;
t293 = pkin(4) + pkin(8);
t123 = t293 * t248;
t164 = sin(pkin(11));
t166 = cos(pkin(11));
t171 = sin(qJ(2));
t165 = sin(pkin(6));
t257 = qJD(1) * t165;
t170 = sin(qJ(3));
t174 = cos(qJ(2));
t264 = t170 * t174;
t249 = qJD(3) * t170;
t153 = pkin(3) * t249;
t197 = -qJ(4) * t173 + qJ(5) * t170;
t244 = t170 * qJD(4);
t178 = qJD(3) * t197 - t173 * qJD(5) - t244;
t81 = t153 + t178;
t286 = t166 * t123 - t164 * t81 - (-t164 * t171 + t166 * t264) * t257;
t285 = t164 * t123 + t166 * t81 - (t164 * t264 + t166 * t171) * t257;
t251 = qJD(2) * t173;
t229 = t166 * t251;
t245 = t164 * qJD(3);
t113 = t229 + t245;
t231 = t164 * t251;
t250 = qJD(3) * t166;
t115 = -t231 + t250;
t169 = sin(qJ(6));
t172 = cos(qJ(6));
t59 = t113 * t169 - t115 * t172;
t308 = t59 ^ 2;
t60 = t172 * t113 + t115 * t169;
t307 = t60 ^ 2;
t271 = t164 * t170;
t193 = pkin(5) * t173 - pkin(9) * t271;
t183 = t193 * qJD(3);
t306 = t183 + t286;
t216 = pkin(9) * t166 * t249;
t305 = t216 + t285;
t253 = qJD(2) * t170;
t149 = qJD(6) + t253;
t304 = t149 * t60;
t303 = t59 * t149;
t117 = t164 * t172 + t166 * t169;
t104 = t117 * qJD(6);
t187 = t170 * t117;
t277 = qJD(2) * t187 + t104;
t237 = t171 * t257;
t130 = qJD(2) * pkin(8) + t237;
t167 = cos(pkin(6));
t265 = t167 * t173;
t145 = qJD(1) * t265;
t88 = t170 * t130 - t145;
t302 = -qJD(4) - t88;
t161 = qJD(3) * qJ(4);
t256 = qJD(1) * t170;
t228 = t167 * t256;
t89 = t130 * t173 + t228;
t84 = -t161 - t89;
t83 = -qJD(3) * pkin(3) - t302;
t301 = qJD(4) - t145;
t233 = t166 * t253;
t236 = t164 * t253;
t246 = qJD(6) * t172;
t247 = qJD(6) * t169;
t276 = -t164 * t247 + t166 * t246 - t169 * t236 + t172 * t233;
t243 = qJD(2) * qJD(3);
t225 = t170 * t243;
t208 = t172 * t225;
t209 = t169 * t225;
t28 = -qJD(6) * t59 + t164 * t209 - t166 * t208;
t300 = t117 * t28 + t276 * t60;
t196 = t164 * t169 - t166 * t172;
t27 = t113 * t246 + t115 * t247 - t164 * t208 - t166 * t209;
t299 = t196 * t27 + t277 * t59;
t168 = -pkin(3) - qJ(5);
t152 = pkin(4) * t251;
t64 = qJD(5) + t152 - t84;
t298 = t170 * (qJD(5) - t64 + t161) - t168 * t248;
t189 = -qJ(4) * t248 - t244;
t101 = t153 + t189;
t175 = qJD(3) ^ 2;
t254 = qJD(2) * t165;
t226 = qJD(1) * t254;
t259 = pkin(3) * t225 + t171 * t226;
t73 = qJD(2) * t189 + t259;
t297 = qJD(2) * (-t101 + t237) - pkin(8) * t175 - t73;
t234 = t174 * t254;
t176 = qJD(2) ^ 2;
t268 = t165 * t176;
t240 = t171 * t268;
t188 = qJD(3) * t167 + t234;
t270 = t165 * t171;
t241 = t170 * t270;
t76 = -qJD(3) * t241 + t173 * t188;
t296 = qJD(3) * (t173 * t234 + t76) - t170 * t240;
t212 = t170 * t234;
t108 = t167 * t170 + t173 * t270;
t77 = qJD(3) * t108 + t212;
t295 = qJD(3) * (t77 + t212) + t173 * t240;
t221 = pkin(4) * qJD(2) + t130;
t260 = t221 * t170 + t301;
t210 = t174 * t226;
t195 = t170 * t210;
t41 = t195 + (t173 * t221 - qJD(5) + t228) * qJD(3);
t47 = qJD(2) * t178 + t259;
t14 = -t164 * t47 + t166 * t41;
t12 = qJD(2) * t183 + t14;
t15 = t164 * t41 + t166 * t47;
t13 = qJD(2) * t216 + t15;
t200 = t169 * t12 + t172 * t13;
t58 = t168 * qJD(3) + t260;
t223 = -t170 * qJ(4) - pkin(2);
t112 = t168 * t173 + t223;
t230 = t174 * t257;
t78 = qJD(2) * t112 - t230;
t20 = -t164 * t78 + t166 * t58;
t16 = pkin(5) * t253 - pkin(9) * t115 + t20;
t21 = t164 * t58 + t166 * t78;
t19 = -pkin(9) * t113 + t21;
t5 = t16 * t172 - t169 * t19;
t1 = qJD(6) * t5 + t200;
t6 = t16 * t169 + t172 * t19;
t2 = -qJD(6) * t6 + t172 * t12 - t169 * t13;
t294 = t1 * t117 - t196 * t2 + t276 * t6 - t277 * t5;
t138 = t293 * t170;
t120 = t166 * t138;
t48 = t170 * pkin(5) + t120 + (pkin(9) * t173 - t112) * t164;
t266 = t166 * t173;
t69 = t166 * t112 + t164 * t138;
t54 = -pkin(9) * t266 + t69;
t17 = -t169 * t54 + t172 * t48;
t292 = qJD(6) * t17 + t306 * t169 + t305 * t172;
t18 = t169 * t48 + t172 * t54;
t291 = qJD(6) * t18 + t305 * t169 - t306 * t172;
t80 = t152 + t89;
t154 = pkin(3) * t253;
t99 = qJD(2) * t197 + t154;
t33 = -t164 * t99 + t166 * t80;
t22 = qJD(2) * t193 + t33;
t34 = t164 * t80 + t166 * t99;
t25 = pkin(9) * t233 + t34;
t288 = -pkin(9) + t168;
t124 = t288 * t164;
t125 = t288 * t166;
t72 = t124 * t172 + t125 * t169;
t290 = qJD(5) * t196 - qJD(6) * t72 + t169 * t25 - t172 * t22;
t289 = t59 * t60;
t71 = -t124 * t169 + t125 * t172;
t287 = qJD(5) * t117 - qJD(6) * t71 + t169 * t22 + t172 * t25;
t284 = qJD(2) * pkin(2);
t160 = qJD(3) * qJD(4);
t239 = -qJD(3) * t145 + t130 * t249 - t173 * t210;
t51 = -t160 + t239;
t40 = -pkin(4) * t225 - t51;
t281 = t40 * t164;
t280 = t40 * t166;
t107 = t241 - t265;
t56 = t130 * t248 + t188 * t256;
t279 = t56 * t107;
t278 = t56 * t170;
t275 = t113 * t166;
t274 = t115 * t164;
t273 = t115 * t166;
t162 = t170 ^ 2;
t272 = t162 * t176;
t269 = t165 * t174;
t267 = t166 * t170;
t263 = t175 * t170;
t262 = t175 * t173;
t238 = -pkin(5) * t166 - pkin(4);
t204 = t238 * qJD(2);
t261 = -(-t130 + t204) * t170 + t301;
t139 = t293 * t173;
t163 = t173 ^ 2;
t258 = t162 - t163;
t132 = -pkin(3) * t173 + t223;
t255 = qJD(2) * t132;
t252 = qJD(2) * t171;
t242 = t166 * t272;
t235 = t165 * t252;
t224 = t173 * t243;
t222 = t276 * t149;
t219 = qJD(2) * (0.2e1 * t162 - t163);
t218 = -t113 + t245;
t217 = -t115 + t250;
t213 = t173 * t230;
t211 = -t277 * t149 - t196 * t224;
t207 = t170 * t224;
t205 = -t164 * t272 + t166 * t224;
t131 = -t230 - t284;
t202 = -t131 - t230;
t199 = t14 * t166 + t15 * t164;
t198 = -t164 * t20 + t166 * t21;
t74 = t107 * t166 + t164 * t269;
t75 = t107 * t164 - t166 * t269;
t23 = -t169 * t75 + t172 * t74;
t24 = t169 * t74 + t172 * t75;
t194 = qJD(2) * t218;
t190 = t88 * qJD(3) - t239;
t96 = t196 * t173;
t186 = (-t162 - t163) * t210;
t182 = qJD(3) * (-t202 - t284);
t90 = -t230 + t255;
t181 = qJD(3) * (-t230 - t90 - t255);
t29 = t204 * t249 - t51;
t180 = t278 - t51 * t173 + (t170 * t84 + t173 * t83) * qJD(3);
t179 = t278 - t239 * t173 + (-t170 * t89 + t173 * t88) * qJD(3);
t177 = (t170 * t77 + t173 * t76 + (t107 * t173 - t108 * t170) * qJD(3)) * qJD(2);
t159 = t166 ^ 2;
t158 = t164 ^ 2;
t150 = pkin(5) * t164 + qJ(4);
t147 = t170 * t176 * t173;
t137 = -0.2e1 * t207;
t136 = 0.2e1 * t207;
t135 = t258 * t176;
t122 = t293 * t249;
t121 = -qJ(4) * t251 + t154;
t111 = -0.2e1 * t258 * t243;
t103 = pkin(5) * t266 + t139;
t97 = t117 * t173;
t94 = (-pkin(8) + t238) * t249;
t82 = t90 * t253;
t68 = -t112 * t164 + t120;
t50 = t104 * t173 - t196 * t249;
t49 = qJD(3) * t187 + qJD(6) * t96;
t46 = t164 * t77 + t166 * t235;
t45 = -t164 * t235 + t166 * t77;
t39 = pkin(5) * t113 + t64;
t8 = -qJD(6) * t24 - t169 * t46 + t172 * t45;
t7 = qJD(6) * t23 + t169 * t45 + t172 * t46;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, -t174 * t268, 0, 0, 0, 0, 0, 0, 0, 0, -t295, -t296, t177, t279 - t239 * t108 + t89 * t76 + t88 * t77 + (t131 - t230) * t235, 0, 0, 0, 0, 0, 0, t177, t295, t296, t279 - t51 * t108 - t84 * t76 + t83 * t77 + (-t174 * t73 + t252 * t90) * t165, 0, 0, 0, 0, 0, 0, t76 * t113 + (t170 * t45 + (-t108 * t267 + t173 * t74) * qJD(3)) * qJD(2), t76 * t115 + (-t170 * t46 + (t108 * t271 - t173 * t75) * qJD(3)) * qJD(2), -t46 * t113 - t45 * t115 + (-t164 * t74 + t166 * t75) * t225, t108 * t40 + t14 * t74 + t15 * t75 + t20 * t45 + t21 * t46 + t64 * t76, 0, 0, 0, 0, 0, 0, t108 * t28 + t149 * t8 + t224 * t23 + t60 * t76, -t108 * t27 - t149 * t7 - t224 * t24 - t59 * t76, t23 * t27 - t24 * t28 + t59 * t8 - t60 * t7, t1 * t24 + t108 * t29 + t2 * t23 + t39 * t76 + t5 * t8 + t6 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t111, t262, t137, -t263, 0, -pkin(8) * t262 + t170 * t182, pkin(8) * t263 + t173 * t182, t186 + t179 ((-t170 * t88 - t173 * t89) * t174 + (-t131 - t284) * t171) * t257 + t179 * pkin(8), 0, -t262, t263, t136, t111, t137, t186 + t180, t170 * t181 - t173 * t297, t170 * t297 + t173 * t181, t90 * t101 + t73 * t132 + (-t171 * t90 + (-t170 * t83 + t173 * t84) * t174) * t257 + t180 * pkin(8) (-t158 * t251 + t274) * t249 (t273 + (-t113 - 0.2e1 * t229) * t164) * t249 (t115 * t173 + t164 * t219) * qJD(3) (-t159 * t251 - t275) * t249 (-t113 * t173 + t166 * t219) * qJD(3), t136, -t122 * t113 + (-t113 * t230 + t280 + (qJD(2) * t68 + t20) * qJD(3)) * t173 + (-t64 * t250 + t14 + (-t139 * t250 + t286) * qJD(2)) * t170, -t122 * t115 + (-t115 * t230 - t281 + (-qJD(2) * t69 - t21) * qJD(3)) * t173 + (t64 * t245 - t15 + (t139 * t245 - t285) * qJD(2)) * t170 (t14 * t164 - t15 * t166) * t173 - t286 * t115 - t285 * t113 + ((-t164 * t68 + t166 * t69) * qJD(2) + t198) * t249, t40 * t139 + t14 * t68 + t15 * t69 + (-t122 - t213) * t64 + t285 * t21 + t286 * t20, t27 * t97 - t49 * t59, -t27 * t96 + t28 * t97 - t49 * t60 - t50 * t59, t49 * t149 - t27 * t170 + (-qJD(2) * t97 - t59) * t248, -t28 * t96 - t50 * t60, t50 * t149 - t28 * t170 + (qJD(2) * t96 - t60) * t248 (t149 + t253) * t248, t103 * t28 + t2 * t170 - t29 * t96 - t39 * t50 + t94 * t60 - t291 * t149 + (-t60 * t230 + (qJD(2) * t17 + t5) * qJD(3)) * t173, -t1 * t170 - t103 * t27 - t29 * t97 + t39 * t49 - t94 * t59 - t292 * t149 + (t59 * t230 + (-qJD(2) * t18 - t6) * qJD(3)) * t173, t1 * t96 + t17 * t27 - t18 * t28 + t2 * t97 - t291 * t59 - t292 * t60 - t5 * t49 + t6 * t50, t1 * t18 + t29 * t103 + t2 * t17 + t292 * t6 - t291 * t5 + (t94 - t213) * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, t135, 0, t147, 0, 0, t202 * t253, -t131 * t251 - t190, 0, 0, 0, 0, 0, -t147, t135, t147, 0, t82 + (-t121 * t173 + t170 * t230) * qJD(2), 0.2e1 * t160 + (t121 * t170 + t173 * t90) * qJD(2) + t190, -t56 * pkin(3) - t51 * qJ(4) - t90 * t121 + t302 * t84 - t83 * t89, t217 * t236 (t113 * t164 - t273 + (-t158 + t159) * qJD(3)) * t253, -t115 * t251 + t205, -t194 * t267, -t173 * t194 - t242, -t147, t281 + t260 * t113 + (-t166 * t298 - t170 * t33 - t173 * t20) * qJD(2), t280 + t260 * t115 + (t164 * t298 + t170 * t34 + t173 * t21) * qJD(2), t34 * t113 + t33 * t115 + (qJD(5) * t115 - t21 * t253 - t14) * t166 + (qJD(5) * t113 + t20 * t253 - t15) * t164, t40 * qJ(4) - t20 * t33 - t21 * t34 + t260 * t64 + t199 * t168 + (-t164 * t21 - t166 * t20) * qJD(5), t299, t27 * t117 + t196 * t28 + t276 * t59 + t277 * t60, t251 * t59 + t211, t300, -t222 + (-qJD(3) * t117 + t60) * t251, -t149 * t251, t29 * t117 + t150 * t28 + t261 * t60 + t276 * t39 + t290 * t149 + (qJD(3) * t71 - t5) * t251, -t29 * t196 - t150 * t27 - t261 * t59 - t277 * t39 + t287 * t149 + (-qJD(3) * t72 + t6) * t251, t71 * t27 - t72 * t28 + t287 * t60 + t290 * t59 - t294, t1 * t72 + t29 * t150 + t2 * t71 + t261 * t39 - t287 * t6 + t290 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, -t175 - t272, t195 + t82 + (t84 + t89) * qJD(3), 0, 0, 0, 0, 0, 0, -qJD(3) * t113 + t205, -t242 + (-t115 - t231) * qJD(3) (t274 - t275) * t253, -t64 * qJD(3) + t198 * t253 + t199, 0, 0, 0, 0, 0, 0, -qJD(3) * t60 + t211, -t222 + (-t117 * t251 + t59) * qJD(3), -t299 - t300, -t39 * qJD(3) + t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217 * t253, t218 * t253, -t113 ^ 2 - t115 ^ 2, t113 * t21 + t115 * t20 + t40, 0, 0, 0, 0, 0, 0, t28 - t303, -t27 - t304, -t307 - t308, -t5 * t59 + t6 * t60 + t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t307 + t308, -t27 + t304, t289, -t28 - t303, t224, t6 * t149 + t39 * t59 + t2, t39 * t60 - t200 + (-qJD(6) + t149) * t5, 0, 0;];
tauc_reg  = t3;
