% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRPPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 03:29
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRPPR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPPR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPPR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR5_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 03:28:36
% EndTime: 2019-05-05 03:29:22
% DurationCPUTime: 49.76s
% Computational Cost: add. (190562->980), mult. (405251->1317), div. (0->0), fcn. (265854->12), ass. (0->658)
t1598 = sin(qJ(3));
t1586 = t1598 ^ 2;
t1603 = qJD(2) ^ 2;
t1580 = t1586 * t1603;
t1791 = qJD(3) ^ 2;
t1567 = -t1580 - t1791;
t1601 = cos(qJ(3));
t1732 = t1601 * t1603;
t1572 = t1598 * t1732;
t1563 = qJDD(3) - t1572;
t1744 = t1563 * t1598;
t1497 = -t1567 * t1601 + t1744;
t1591 = sin(pkin(6));
t1594 = cos(pkin(6));
t1733 = t1601 * t1563;
t1505 = t1567 * t1598 + t1733;
t1770 = qJD(2) * t1601;
t1714 = qJD(3) * t1770;
t1725 = t1598 * qJDD(2);
t1551 = 0.2e1 * t1714 + t1725;
t1599 = sin(qJ(2));
t1602 = cos(qJ(2));
t1652 = t1505 * t1599 + t1551 * t1602;
t1388 = t1497 * t1594 + t1591 * t1652;
t1392 = -t1497 * t1591 + t1594 * t1652;
t1860 = pkin(7) * (t1388 * t1591 + t1392 * t1594);
t1438 = t1505 * t1602 - t1551 * t1599;
t1590 = sin(pkin(10));
t1593 = cos(pkin(10));
t1859 = qJ(1) * (t1392 * t1593 + t1438 * t1590);
t1858 = qJ(1) * (t1392 * t1590 - t1438 * t1593);
t1857 = pkin(1) * t1388;
t1856 = pkin(1) * t1392;
t1788 = t1601 ^ 2;
t1582 = t1788 * t1603;
t1569 = -t1582 - t1791;
t1562 = qJDD(3) + t1572;
t1734 = t1601 * t1562;
t1494 = t1569 * t1598 + t1734;
t1745 = t1562 * t1598;
t1503 = -t1569 * t1601 + t1745;
t1771 = qJD(2) * t1598;
t1715 = qJD(3) * t1771;
t1724 = t1601 * qJDD(2);
t1553 = -0.2e1 * t1715 + t1724;
t1653 = t1503 * t1599 - t1553 * t1602;
t1387 = -t1494 * t1594 + t1591 * t1653;
t1391 = t1494 * t1591 + t1594 * t1653;
t1855 = pkin(7) * (t1387 * t1591 + t1391 * t1594);
t1437 = t1503 * t1602 + t1553 * t1599;
t1854 = qJ(1) * (t1391 * t1593 + t1437 * t1590);
t1853 = qJ(1) * (t1391 * t1590 - t1437 * t1593);
t1566 = -t1580 + t1791;
t1496 = t1566 * t1601 + t1745;
t1504 = -t1566 * t1598 + t1734;
t1634 = t1504 * t1599 - t1602 * t1725;
t1408 = -t1496 * t1591 + t1594 * t1634;
t1463 = t1504 * t1602 + t1599 * t1725;
t1850 = t1408 * t1590 - t1463 * t1593;
t1849 = t1408 * t1593 + t1463 * t1590;
t1847 = pkin(1) * t1387;
t1846 = pkin(1) * t1391;
t1568 = t1582 - t1791;
t1492 = t1568 * t1598 + t1733;
t1501 = -t1568 * t1601 + t1744;
t1635 = t1501 * t1599 + t1602 * t1724;
t1407 = t1492 * t1591 + t1594 * t1635;
t1462 = t1501 * t1602 - t1599 * t1724;
t1843 = t1407 * t1590 - t1462 * t1593;
t1842 = t1407 * t1593 + t1462 * t1590;
t1840 = pkin(7) * t1438;
t1404 = t1496 * t1594 + t1591 * t1634;
t1835 = pkin(7) * t1437;
t1403 = -t1492 * t1594 + t1591 * t1635;
t1830 = pkin(2) * t1494;
t1829 = pkin(8) * t1494;
t1828 = pkin(8) * t1505;
t1823 = 2 * qJD(4);
t1822 = pkin(2) * t1497;
t1821 = pkin(8) * t1497;
t1820 = pkin(8) * t1503;
t1589 = sin(pkin(11));
t1592 = cos(pkin(11));
t1537 = -qJD(3) * t1589 - t1592 * t1770;
t1538 = qJD(3) * t1592 - t1589 * t1770;
t1486 = t1537 * t1538;
t1552 = t1714 + t1725;
t1804 = t1486 + t1552;
t1815 = t1589 * t1804;
t1814 = t1592 * t1804;
t1597 = sin(qJ(6));
t1600 = cos(qJ(6));
t1472 = -t1600 * t1537 + t1538 * t1597;
t1474 = t1537 * t1597 + t1538 * t1600;
t1415 = t1474 * t1472;
t1540 = qJDD(6) + t1552;
t1806 = -t1415 + t1540;
t1813 = t1597 * t1806;
t1812 = t1600 * t1806;
t1560 = g(1) * t1593 + g(2) * t1590;
t1706 = g(1) * t1590 - t1593 * g(2);
t1777 = g(3) - qJDD(1);
t1810 = -t1591 * t1777 + t1594 * t1706;
t1460 = -t1602 * t1560 + t1599 * t1810;
t1435 = -t1603 * pkin(2) + qJDD(2) * pkin(8) + t1460;
t1773 = qJ(4) * t1598;
t1783 = pkin(3) * t1601;
t1688 = -t1773 - t1783;
t1703 = t1603 * t1688 + t1435;
t1518 = t1591 * t1706 + t1594 * t1777;
t1754 = t1518 * t1598;
t1607 = -pkin(3) * t1791 + t1601 * t1703 - t1754;
t1605 = qJD(3) * t1823 + t1607;
t1811 = t1605 + (qJDD(3) + t1563) * qJ(4) - pkin(3) * t1567;
t1809 = t1590 * t1777;
t1808 = t1593 * t1777;
t1767 = qJD(5) * t1538;
t1530 = 0.2e1 * t1767;
t1508 = t1601 * t1518;
t1692 = -qJDD(3) * pkin(3) - qJ(4) * t1791 + qJDD(4) + t1508;
t1319 = -qJDD(3) * qJ(5) + (t1552 - t1714) * pkin(4) + (-qJ(5) * t1732 + t1703) * t1598 + t1692;
t1459 = -t1599 * t1560 - t1602 * t1810;
t1434 = -qJDD(2) * pkin(2) - t1603 * pkin(8) + t1459;
t1637 = t1715 - t1724;
t1606 = t1637 * pkin(3) + t1434 + (-t1552 - t1714) * qJ(4);
t1731 = pkin(4) * t1771 - qJD(3) * qJ(5) + t1823;
t1786 = pkin(3) + qJ(5);
t1330 = (-pkin(4) * t1732 - qJ(5) * qJDD(2)) * t1601 + (qJD(3) * t1786 - t1731) * t1771 + t1606;
t1729 = -t1592 * t1319 + t1589 * t1330;
t1234 = t1530 + t1729;
t1768 = qJD(5) * t1537;
t1527 = 0.2e1 * t1768;
t1730 = t1589 * t1319 + t1592 * t1330;
t1235 = t1527 + t1730;
t1807 = -t1592 * t1234 + t1235 * t1589;
t1515 = t1592 * qJDD(3) + t1589 * t1637;
t1696 = qJDD(3) * t1589 - t1592 * t1637;
t1374 = -t1472 * qJD(6) + t1600 * t1515 - t1597 * t1696;
t1573 = qJD(6) + t1771;
t1450 = t1573 * t1472;
t1805 = -t1450 + t1374;
t1751 = t1538 * t1598;
t1521 = qJD(2) * t1751;
t1454 = -t1696 + t1521;
t1358 = t1598 * t1703 + t1692;
t1803 = -pkin(3) * t1562 - qJ(4) * t1569 + t1358;
t1529 = -0.2e1 * t1767;
t1716 = t1537 * t1771;
t1686 = -t1515 + t1716;
t1204 = pkin(5) * t1804 + pkin(9) * t1686 + t1529 - t1729;
t1516 = pkin(5) * t1771 - pkin(9) * t1538;
t1790 = t1537 ^ 2;
t1217 = -pkin(5) * t1790 - pkin(9) * t1696 - t1516 * t1771 + t1235;
t1143 = -t1600 * t1204 + t1217 * t1597;
t1144 = t1204 * t1597 + t1217 * t1600;
t1109 = t1143 * t1597 + t1600 * t1144;
t1108 = -t1143 * t1600 + t1144 * t1597;
t1765 = t1108 * t1592;
t1080 = t1109 * t1589 + t1765;
t1766 = qJDD(3) * qJ(4);
t1314 = -t1637 * pkin(4) - qJ(5) * t1582 + qJD(3) * t1731 + qJDD(5) + t1607 + t1766;
t1269 = pkin(5) * t1696 - pkin(9) * t1790 + t1516 * t1538 + t1314;
t1103 = -pkin(5) * t1269 + pkin(9) * t1109;
t1645 = pkin(9) * t1765 + t1103 * t1589;
t1801 = qJ(4) * t1269 - t1080 * t1786 - t1645;
t1800 = qJ(4) * t1314 - t1786 * t1807;
t1698 = -t1515 * t1597 - t1600 * t1696;
t1324 = (-qJD(6) + t1573) * t1474 + t1698;
t1327 = t1450 + t1374;
t1247 = t1324 * t1597 - t1327 * t1600;
t1249 = t1324 * t1600 + t1327 * t1597;
t1166 = t1247 * t1592 + t1249 * t1589;
t1468 = t1472 ^ 2;
t1469 = t1474 ^ 2;
t1350 = -t1468 - t1469;
t1097 = -pkin(5) * t1350 + pkin(9) * t1249 + t1109;
t1102 = -pkin(9) * t1247 - t1108;
t1702 = t1097 * t1589 - t1592 * t1102;
t1799 = qJ(4) * t1350 - t1166 * t1786 - t1702;
t1570 = t1573 ^ 2;
t1394 = -t1570 - t1468;
t1282 = t1394 * t1597 + t1812;
t1283 = t1394 * t1600 - t1813;
t1219 = t1282 * t1592 + t1283 * t1589;
t1451 = t1474 * t1573;
t1640 = qJD(6) * t1474 - t1698;
t1322 = t1451 + t1640;
t1762 = t1269 * t1600;
t1171 = -pkin(5) * t1322 + pkin(9) * t1283 - t1762;
t1763 = t1269 * t1597;
t1198 = -pkin(9) * t1282 + t1763;
t1701 = t1171 * t1589 - t1592 * t1198;
t1798 = qJ(4) * t1322 - t1219 * t1786 - t1701;
t1428 = -t1469 - t1570;
t1378 = t1415 + t1540;
t1759 = t1378 * t1597;
t1297 = t1428 * t1600 - t1759;
t1758 = t1378 * t1600;
t1298 = -t1428 * t1597 - t1758;
t1230 = t1297 * t1592 + t1298 * t1589;
t1173 = -pkin(5) * t1805 + pkin(9) * t1298 + t1763;
t1210 = -pkin(9) * t1297 + t1762;
t1700 = t1173 * t1589 - t1592 * t1210;
t1797 = qJ(4) * t1805 - t1230 * t1786 - t1700;
t1369 = t1454 * t1589 + t1592 * t1686;
t1789 = t1538 ^ 2;
t1448 = -t1789 - t1790;
t1796 = qJ(4) * t1448 - t1369 * t1786 - t1807;
t1477 = -t1580 - t1790;
t1384 = t1589 * t1477 + t1814;
t1452 = t1521 + t1696;
t1760 = t1314 * t1589;
t1795 = qJ(4) * t1452 - t1384 * t1786 + t1760;
t1303 = t1592 * t1314;
t1722 = -t1580 - t1789;
t1458 = -t1486 + t1552;
t1736 = t1589 * t1458;
t1418 = t1592 * t1722 - t1736;
t1455 = t1515 + t1716;
t1794 = qJ(4) * t1455 - t1418 * t1786 + t1303;
t1793 = -t1593 * t1560 - t1590 * t1706;
t1792 = -t1590 * t1560 + t1593 * t1706;
t1787 = -2 * qJD(4);
t1782 = pkin(4) * t1807;
t1781 = pkin(4) * t1314;
t1780 = pkin(4) * t1369;
t1779 = pkin(7) * t1591;
t1778 = pkin(7) * t1594;
t1721 = t1586 + t1788;
t1555 = t1721 * qJDD(2);
t1558 = t1580 + t1582;
t1648 = t1555 * t1599 + t1558 * t1602;
t1476 = t1648 * t1594;
t1483 = t1555 * t1602 - t1558 * t1599;
t1776 = qJ(1) * (t1476 * t1593 + t1483 * t1590);
t1772 = qJD(2) * qJD(3);
t1398 = t1435 * t1598 + t1508;
t1399 = t1435 * t1601 - t1754;
t1287 = t1398 * t1601 - t1399 * t1598;
t1761 = t1287 * t1599;
t1757 = t1434 * t1598;
t1756 = t1434 * t1601;
t1755 = t1458 * t1592;
t1753 = t1518 * t1599;
t1752 = t1518 * t1602;
t1750 = t1551 * t1598;
t1490 = t1553 * t1601;
t1739 = t1573 * t1597;
t1738 = t1573 * t1600;
t1737 = t1589 * t1108;
t1728 = pkin(1) * t1476 + t1483 * t1779;
t1727 = pkin(2) * t1558 + pkin(8) * t1555;
t1726 = t1591 * qJDD(2);
t1720 = t1598 * t1415;
t1719 = t1601 * t1415;
t1718 = t1537 * t1751;
t1717 = t1601 * t1486;
t1475 = t1648 * t1591;
t1709 = -pkin(1) * t1475 + t1483 * t1778;
t1107 = pkin(5) * t1108;
t1708 = -pkin(4) * t1080 - t1107;
t1246 = pkin(5) * t1247;
t1707 = -pkin(4) * t1166 - t1246;
t1288 = t1398 * t1598 + t1601 * t1399;
t1695 = t1589 * t1521;
t1694 = t1599 * t1572;
t1693 = t1602 * t1572;
t1691 = -pkin(4) * t1418 + t1730;
t1690 = -pkin(4) * t1384 + t1729;
t1355 = t1605 + t1766;
t1689 = -pkin(3) * t1358 + qJ(4) * t1355;
t1687 = pkin(3) * t1598 - qJ(4) * t1601;
t1685 = pkin(5) * t1282 - t1143;
t1683 = pkin(4) * t1452 + t1303;
t1682 = pkin(4) * t1455 - t1760;
t1556 = qJDD(2) * t1602 - t1599 * t1603;
t1681 = -pkin(7) * t1556 - t1753;
t1647 = qJDD(2) * t1599 + t1602 * t1603;
t1680 = -pkin(7) * t1647 + t1752;
t1077 = t1080 * t1598 + t1269 * t1601;
t1081 = t1109 * t1592 - t1737;
t1678 = t1077 * t1599 - t1081 * t1602;
t1146 = t1314 * t1601 + t1598 * t1807;
t1164 = t1589 * t1234 + t1235 * t1592;
t1677 = t1146 * t1599 - t1164 * t1602;
t1150 = t1166 * t1598 + t1350 * t1601;
t1168 = -t1589 * t1247 + t1249 * t1592;
t1676 = t1150 * t1599 - t1168 * t1602;
t1248 = -t1322 * t1597 + t1600 * t1805;
t1250 = -t1322 * t1600 - t1597 * t1805;
t1167 = t1248 * t1592 + t1250 * t1589;
t1401 = t1469 - t1468;
t1156 = t1167 * t1598 + t1401 * t1601;
t1165 = t1248 * t1589 - t1592 * t1250;
t1675 = t1156 * t1599 + t1165 * t1602;
t1175 = t1219 * t1598 + t1322 * t1601;
t1220 = -t1589 * t1282 + t1283 * t1592;
t1674 = t1175 * t1599 - t1220 * t1602;
t1182 = t1230 * t1598 + t1601 * t1805;
t1231 = -t1589 * t1297 + t1298 * t1592;
t1673 = t1182 * t1599 - t1231 * t1602;
t1440 = t1468 - t1570;
t1316 = t1440 * t1597 + t1758;
t1318 = t1440 * t1600 - t1759;
t1243 = t1316 * t1592 + t1318 * t1589;
t1323 = -t1451 + t1640;
t1189 = t1243 * t1598 - t1323 * t1601;
t1241 = t1316 * t1589 - t1592 * t1318;
t1672 = t1189 * t1599 + t1241 * t1602;
t1441 = -t1469 + t1570;
t1315 = t1441 * t1600 + t1813;
t1317 = -t1441 * t1597 + t1812;
t1242 = t1315 * t1592 + t1317 * t1589;
t1190 = t1242 * t1598 + t1327 * t1601;
t1240 = t1315 * t1589 - t1592 * t1317;
t1671 = t1190 * t1599 + t1240 * t1602;
t1308 = t1472 * t1739 - t1600 * t1640;
t1309 = t1472 * t1738 + t1597 * t1640;
t1237 = t1308 * t1592 + t1309 * t1589;
t1208 = t1237 * t1598 - t1719;
t1236 = t1308 * t1589 - t1592 * t1309;
t1670 = t1208 * t1599 + t1236 * t1602;
t1310 = t1374 * t1597 + t1474 * t1738;
t1311 = t1374 * t1600 - t1474 * t1739;
t1239 = t1310 * t1592 + t1311 * t1589;
t1209 = t1239 * t1598 + t1719;
t1238 = t1310 * t1589 - t1592 * t1311;
t1669 = t1209 * t1599 + t1238 * t1602;
t1345 = pkin(3) * t1558 + t1355;
t1347 = qJ(4) * t1558 + t1358;
t1255 = -t1345 * t1598 + t1347 * t1601;
t1548 = t1687 * qJDD(2);
t1668 = t1255 * t1599 + t1548 * t1602;
t1363 = (-t1472 * t1597 - t1474 * t1600) * t1573;
t1364 = (-t1472 * t1600 + t1474 * t1597) * t1573;
t1275 = t1363 * t1592 + t1364 * t1589;
t1265 = t1275 * t1598 + t1540 * t1601;
t1274 = t1363 * t1589 - t1592 * t1364;
t1667 = t1265 * t1599 + t1274 * t1602;
t1268 = t1355 * t1601 + t1358 * t1598;
t1360 = (pkin(3) * qJD(3) + t1787) * t1771 + t1606;
t1666 = t1268 * t1599 - t1360 * t1602;
t1665 = t1288 * t1599 - t1434 * t1602;
t1302 = t1369 * t1598 + t1448 * t1601;
t1372 = t1454 * t1592 - t1589 * t1686;
t1664 = t1302 * t1599 - t1372 * t1602;
t1329 = t1384 * t1598 + t1452 * t1601;
t1385 = t1477 * t1592 - t1815;
t1663 = t1329 * t1599 - t1385 * t1602;
t1370 = -t1452 * t1589 + t1455 * t1592;
t1482 = t1789 - t1790;
t1332 = t1370 * t1598 + t1482 * t1601;
t1371 = t1592 * t1452 + t1455 * t1589;
t1662 = t1332 * t1599 + t1371 * t1602;
t1519 = -t1580 + t1790;
t1419 = t1519 * t1589 + t1755;
t1342 = t1419 * t1598 + t1454 * t1601;
t1417 = -t1592 * t1519 + t1736;
t1661 = t1342 * t1599 + t1417 * t1602;
t1343 = t1418 * t1598 + t1455 * t1601;
t1421 = -t1589 * t1722 - t1755;
t1660 = t1343 * t1599 - t1421 * t1602;
t1520 = t1580 - t1789;
t1416 = t1520 * t1592 + t1815;
t1344 = t1416 * t1598 - t1601 * t1686;
t1420 = t1520 * t1589 - t1814;
t1659 = t1344 * t1599 + t1420 * t1602;
t1430 = t1589 * t1716 + t1592 * t1696;
t1382 = -t1430 * t1598 + t1717;
t1517 = t1592 * t1716;
t1432 = t1589 * t1696 - t1517;
t1658 = t1382 * t1599 - t1432 * t1602;
t1433 = t1515 * t1589 + t1521 * t1592;
t1383 = t1433 * t1598 - t1717;
t1431 = -t1592 * t1515 + t1695;
t1657 = t1383 * t1599 + t1431 * t1602;
t1444 = (t1537 * t1589 - t1538 * t1592) * t1771;
t1534 = t1601 * t1552;
t1425 = t1444 * t1598 + t1534;
t1445 = -t1517 - t1695;
t1656 = t1425 * t1599 + t1445 * t1602;
t1375 = t1459 * t1602 - t1460 * t1599;
t1376 = t1459 * t1599 + t1460 * t1602;
t1481 = t1490 - t1750;
t1559 = t1580 - t1582;
t1655 = t1481 * t1599 - t1559 * t1602;
t1525 = t1647 * t1594;
t1650 = t1525 * t1593 + t1556 * t1590;
t1649 = t1525 * t1590 - t1556 * t1593;
t1543 = t1721 * t1772;
t1646 = -qJDD(3) * t1602 + t1543 * t1599;
t1639 = pkin(5) * t1297 - t1144;
t1638 = (-t1475 * t1591 - t1476 * t1594) * pkin(7);
t1632 = -pkin(4) * t1219 - t1685;
t1512 = t1598 * t1637 - t1772 * t1788;
t1631 = t1512 * t1599 - t1693;
t1513 = -t1586 * t1772 + t1534;
t1630 = t1513 * t1599 + t1693;
t1629 = pkin(4) * t1350 - t1097 * t1592 - t1102 * t1589;
t1628 = pkin(4) * t1322 - t1171 * t1592 - t1198 * t1589;
t1627 = pkin(4) * t1805 - t1173 * t1592 - t1210 * t1589;
t1626 = pkin(4) * t1448 - t1164;
t1612 = pkin(4) * t1269 + pkin(9) * t1737 - t1103 * t1592;
t1059 = -t1081 * t1786 + t1612;
t1063 = -qJ(4) * t1081 - t1708;
t1076 = -t1080 * t1601 + t1269 * t1598;
t1047 = -pkin(8) * t1076 - t1059 * t1598 + t1063 * t1601;
t1051 = -pkin(2) * t1076 - t1801;
t1065 = t1077 * t1602 + t1081 * t1599;
t1625 = pkin(7) * t1065 + t1047 * t1599 + t1051 * t1602;
t1067 = -t1168 * t1786 + t1629;
t1111 = -qJ(4) * t1168 - t1707;
t1149 = -t1166 * t1601 + t1350 * t1598;
t1064 = -pkin(8) * t1149 - t1067 * t1598 + t1111 * t1601;
t1066 = -pkin(2) * t1149 - t1799;
t1117 = t1150 * t1602 + t1168 * t1599;
t1624 = pkin(7) * t1117 + t1064 * t1599 + t1066 * t1602;
t1100 = -t1220 * t1786 + t1628;
t1104 = -qJ(4) * t1220 - t1632;
t1174 = -t1219 * t1601 + t1322 * t1598;
t1071 = -pkin(8) * t1174 - t1100 * t1598 + t1104 * t1601;
t1085 = -pkin(2) * t1174 - t1798;
t1139 = t1175 * t1602 + t1220 * t1599;
t1623 = pkin(7) * t1139 + t1071 * t1599 + t1085 * t1602;
t1105 = -t1231 * t1786 + t1627;
t1610 = -pkin(4) * t1230 - t1639;
t1110 = -qJ(4) * t1231 - t1610;
t1181 = -t1230 * t1601 + t1598 * t1805;
t1074 = -pkin(8) * t1181 - t1105 * t1598 + t1110 * t1601;
t1092 = -pkin(2) * t1181 - t1797;
t1142 = t1182 * t1602 + t1231 * t1599;
t1622 = pkin(7) * t1142 + t1074 * t1599 + t1092 * t1602;
t1115 = -t1164 * t1786 + t1781;
t1121 = -qJ(4) * t1164 + t1782;
t1145 = t1314 * t1598 - t1601 * t1807;
t1075 = -pkin(8) * t1145 - t1115 * t1598 + t1121 * t1601;
t1091 = -pkin(2) * t1145 - t1800;
t1114 = t1146 * t1602 + t1164 * t1599;
t1621 = pkin(7) * t1114 + t1075 * t1599 + t1091 * t1602;
t1140 = -t1372 * t1786 + t1626;
t1279 = -qJ(4) * t1372 + t1780;
t1301 = -t1369 * t1601 + t1448 * t1598;
t1124 = -pkin(8) * t1301 - t1140 * t1598 + t1279 * t1601;
t1135 = -pkin(2) * t1301 - t1796;
t1254 = t1302 * t1602 + t1372 * t1599;
t1620 = pkin(7) * t1254 + t1124 * t1599 + t1135 * t1602;
t1179 = -qJ(4) * t1385 + t1529 - t1690;
t1218 = -t1385 * t1786 + t1683;
t1328 = -t1384 * t1601 + t1452 * t1598;
t1137 = -pkin(8) * t1328 + t1179 * t1601 - t1218 * t1598;
t1176 = -pkin(2) * t1328 - t1795;
t1261 = t1329 * t1602 + t1385 * t1599;
t1619 = pkin(7) * t1261 + t1137 * t1599 + t1176 * t1602;
t1183 = -qJ(4) * t1421 - t1691 - 0.2e1 * t1768;
t1222 = -t1421 * t1786 + t1682;
t1338 = -t1418 * t1601 + t1455 * t1598;
t1138 = -pkin(8) * t1338 + t1183 * t1601 - t1222 * t1598;
t1180 = -pkin(2) * t1338 - t1794;
t1272 = t1343 * t1602 + t1421 * t1599;
t1618 = pkin(7) * t1272 + t1138 * t1599 + t1180 * t1602;
t1267 = t1355 * t1598 - t1358 * t1601;
t1186 = -pkin(2) * t1267 - t1689;
t1195 = -pkin(8) * t1267 + t1360 * t1687;
t1229 = t1268 * t1602 + t1360 * t1599;
t1617 = pkin(7) * t1229 + t1186 * t1602 + t1195 * t1599;
t1604 = t1771 * t1787 + t1606;
t1349 = (-t1553 + t1715) * pkin(3) + t1604;
t1289 = -qJ(4) * t1490 - t1349 * t1598 + t1829;
t1292 = -t1803 + t1830;
t1616 = t1289 * t1599 + t1292 * t1602 + t1835;
t1348 = -pkin(3) * t1715 + qJ(4) * t1551 - t1604;
t1290 = -pkin(3) * t1750 + t1348 * t1601 - t1821;
t1291 = -t1811 - t1822;
t1615 = t1290 * t1599 + t1291 * t1602 + t1840;
t1356 = t1398 - t1830;
t1396 = t1757 - t1829;
t1614 = t1356 * t1602 + t1396 * t1599 - t1835;
t1357 = t1399 + t1822;
t1397 = t1756 + t1821;
t1613 = t1357 * t1602 + t1397 * t1599 - t1840;
t1266 = t1288 * t1602 + t1434 * t1599;
t1609 = pkin(7) * t1266 - (-pkin(2) * t1602 - pkin(8) * t1599) * t1287;
t1579 = t1594 * qJDD(2);
t1533 = t1598 * t1552;
t1526 = t1556 * t1594;
t1524 = t1556 * t1591;
t1523 = t1647 * t1591;
t1514 = qJDD(3) * t1599 + t1543 * t1602;
t1491 = t1598 * t1714 + t1533;
t1485 = t1646 * t1594;
t1484 = t1646 * t1591;
t1480 = t1551 * t1601 + t1553 * t1598;
t1471 = -t1526 * t1590 - t1593 * t1647;
t1470 = t1526 * t1593 - t1590 * t1647;
t1466 = t1513 * t1602 - t1694;
t1465 = t1512 * t1602 + t1694;
t1429 = t1481 * t1602 + t1559 * t1599;
t1427 = -t1485 * t1590 + t1514 * t1593;
t1426 = t1485 * t1593 + t1514 * t1590;
t1424 = -t1444 * t1601 + t1533;
t1423 = -t1752 + (t1523 * t1591 + t1525 * t1594) * pkin(7);
t1422 = -t1753 + (-t1524 * t1591 - t1526 * t1594) * pkin(7);
t1413 = -t1491 * t1591 + t1594 * t1630;
t1412 = -t1490 * t1591 + t1594 * t1631;
t1411 = t1491 * t1594 + t1591 * t1630;
t1410 = t1490 * t1594 + t1591 * t1631;
t1400 = qJ(1) * (-t1476 * t1590 + t1483 * t1593);
t1381 = -t1433 * t1601 - t1718;
t1380 = t1430 * t1601 + t1718;
t1368 = -t1480 * t1591 + t1594 * t1655;
t1367 = t1480 * t1594 + t1591 * t1655;
t1366 = pkin(2) * t1553 - t1756 - t1820;
t1365 = -pkin(2) * t1551 + t1757 - t1828;
t1362 = t1376 * t1594;
t1361 = t1376 * t1591;
t1354 = -pkin(1) * t1524 + t1459 * t1591 + t1594 * t1680;
t1353 = pkin(1) * t1523 + t1460 * t1591 + t1594 * t1681;
t1352 = pkin(1) * t1526 - t1459 * t1594 + t1591 * t1680;
t1351 = -pkin(1) * t1525 - t1460 * t1594 + t1591 * t1681;
t1346 = t1425 * t1602 - t1445 * t1599;
t1341 = -t1413 * t1590 + t1466 * t1593;
t1340 = -t1412 * t1590 + t1465 * t1593;
t1339 = -t1416 * t1601 - t1598 * t1686;
t1337 = -t1419 * t1601 + t1454 * t1598;
t1336 = t1413 * t1593 + t1466 * t1590;
t1335 = t1412 * t1593 + t1465 * t1590;
t1334 = -t1375 * t1594 + t1518 * t1591;
t1333 = -t1375 * t1591 - t1518 * t1594;
t1331 = -t1370 * t1601 + t1482 * t1598;
t1307 = t1383 * t1602 - t1431 * t1599;
t1306 = t1382 * t1602 + t1432 * t1599;
t1294 = -t1368 * t1590 + t1429 * t1593;
t1293 = t1368 * t1593 + t1429 * t1590;
t1285 = t1828 + t1348 * t1598 + (pkin(2) + t1783) * t1551;
t1284 = t1820 + t1349 * t1601 + (-pkin(2) - t1773) * t1553;
t1278 = t1288 + t1727;
t1277 = -t1424 * t1591 + t1594 * t1656;
t1276 = t1424 * t1594 + t1591 * t1656;
t1273 = t1344 * t1602 - t1420 * t1599;
t1271 = t1342 * t1602 - t1417 * t1599;
t1270 = -pkin(2) * t1434 + pkin(8) * t1288;
t1264 = -t1275 * t1601 + t1540 * t1598;
t1263 = pkin(1) * t1334 + t1376 * t1779;
t1262 = -pkin(1) * t1333 + t1376 * t1778;
t1260 = t1332 * t1602 - t1371 * t1599;
t1259 = -t1381 * t1591 + t1594 * t1657;
t1258 = -t1380 * t1591 + t1594 * t1658;
t1257 = t1381 * t1594 + t1591 * t1657;
t1256 = t1380 * t1594 + t1591 * t1658;
t1253 = t1287 * t1602 + t1638;
t1252 = (-t1333 * t1591 - t1334 * t1594) * pkin(7);
t1251 = t1345 * t1601 + t1347 * t1598 + t1727;
t1228 = -t1339 * t1591 + t1594 * t1659;
t1227 = -t1338 * t1591 + t1594 * t1660;
t1226 = -t1337 * t1591 + t1594 * t1661;
t1225 = t1339 * t1594 + t1591 * t1659;
t1224 = t1338 * t1594 + t1591 * t1660;
t1223 = t1337 * t1594 + t1591 * t1661;
t1221 = t1255 * t1602 - t1548 * t1599 + t1638;
t1216 = -t1357 * t1599 + t1397 * t1602 + t1860;
t1215 = -t1356 * t1599 + t1396 * t1602 + t1855;
t1214 = -t1331 * t1591 + t1594 * t1662;
t1213 = t1331 * t1594 + t1591 * t1662;
t1212 = -t1328 * t1591 + t1594 * t1663;
t1211 = t1328 * t1594 + t1591 * t1663;
t1207 = -t1239 * t1601 + t1720;
t1206 = -t1237 * t1601 - t1720;
t1202 = t1287 * t1591 + t1594 * t1665;
t1201 = -t1287 * t1594 + t1591 * t1665;
t1200 = -t1301 * t1591 + t1594 * t1664;
t1199 = t1301 * t1594 + t1591 * t1664;
t1196 = t1265 * t1602 - t1274 * t1599;
t1194 = -t1365 * t1591 + t1594 * t1613 + t1857;
t1193 = -t1366 * t1591 + t1594 * t1614 + t1847;
t1192 = t1365 * t1594 + t1591 * t1613 - t1856;
t1191 = t1366 * t1594 + t1591 * t1614 - t1846;
t1188 = -t1242 * t1601 + t1327 * t1598;
t1187 = -t1243 * t1601 - t1323 * t1598;
t1185 = -t1278 * t1591 + t1594 * t1761 + t1709;
t1184 = t1278 * t1594 + t1591 * t1761 + t1728;
t1178 = t1289 * t1602 - t1292 * t1599 - t1855;
t1177 = t1290 * t1602 - t1291 * t1599 - t1860;
t1172 = pkin(8) * t1268 + (-pkin(2) + t1688) * t1360;
t1170 = -t1267 * t1591 + t1594 * t1666;
t1169 = t1267 * t1594 + t1591 * t1666;
t1162 = -t1251 * t1591 + t1594 * t1668 + t1709;
t1161 = t1251 * t1594 + t1591 * t1668 + t1728;
t1160 = -t1284 * t1591 + t1594 * t1616 - t1847;
t1159 = t1284 * t1594 + t1591 * t1616 + t1846;
t1158 = -t1285 * t1591 + t1594 * t1615 - t1857;
t1157 = t1285 * t1594 + t1591 * t1615 + t1856;
t1155 = -t1167 * t1601 + t1401 * t1598;
t1154 = -t1264 * t1591 + t1594 * t1667;
t1153 = t1264 * t1594 + t1591 * t1667;
t1152 = t1209 * t1602 - t1238 * t1599;
t1151 = t1208 * t1602 - t1236 * t1599;
t1148 = t1190 * t1602 - t1240 * t1599;
t1147 = t1189 * t1602 - t1241 * t1599;
t1136 = -pkin(2) * t1421 + pkin(8) * t1343 + t1183 * t1598 + t1222 * t1601;
t1134 = -t1207 * t1591 + t1594 * t1669;
t1133 = -t1206 * t1591 + t1594 * t1670;
t1132 = t1207 * t1594 + t1591 * t1669;
t1131 = t1206 * t1594 + t1591 * t1670;
t1130 = -pkin(2) * t1385 + pkin(8) * t1329 + t1179 * t1598 + t1218 * t1601;
t1129 = -(pkin(2) * t1599 - pkin(8) * t1602) * t1287 + (-t1201 * t1591 - t1202 * t1594) * pkin(7);
t1128 = -t1188 * t1591 + t1594 * t1671;
t1127 = -t1187 * t1591 + t1594 * t1672;
t1126 = t1188 * t1594 + t1591 * t1671;
t1125 = t1187 * t1594 + t1591 * t1672;
t1123 = -pkin(1) * t1201 - t1270 * t1591 + t1594 * t1609;
t1122 = pkin(1) * t1202 + t1270 * t1594 + t1591 * t1609;
t1120 = -t1181 * t1591 + t1594 * t1673;
t1119 = t1181 * t1594 + t1591 * t1673;
t1118 = t1156 * t1602 - t1165 * t1599;
t1116 = -pkin(2) * t1372 + pkin(8) * t1302 + t1140 * t1601 + t1279 * t1598;
t1113 = -t1174 * t1591 + t1594 * t1674;
t1112 = t1174 * t1594 + t1591 * t1674;
t1099 = -t1155 * t1591 + t1594 * t1675;
t1098 = t1155 * t1594 + t1591 * t1675;
t1096 = -t1149 * t1591 + t1594 * t1676;
t1095 = t1149 * t1594 + t1591 * t1676;
t1094 = -t1186 * t1599 + t1195 * t1602 + (-t1169 * t1591 - t1170 * t1594) * pkin(7);
t1093 = t1138 * t1602 - t1180 * t1599 + (-t1224 * t1591 - t1227 * t1594) * pkin(7);
t1090 = -t1145 * t1591 + t1594 * t1677;
t1089 = t1145 * t1594 + t1591 * t1677;
t1088 = t1137 * t1602 - t1176 * t1599 + (-t1211 * t1591 - t1212 * t1594) * pkin(7);
t1087 = -pkin(1) * t1169 - t1172 * t1591 + t1594 * t1617;
t1086 = pkin(1) * t1170 + t1172 * t1594 + t1591 * t1617;
t1084 = -pkin(1) * t1224 - t1136 * t1591 + t1594 * t1618;
t1083 = pkin(1) * t1227 + t1136 * t1594 + t1591 * t1618;
t1082 = t1124 * t1602 - t1135 * t1599 + (-t1199 * t1591 - t1200 * t1594) * pkin(7);
t1079 = -pkin(1) * t1211 - t1130 * t1591 + t1594 * t1619;
t1078 = pkin(1) * t1212 + t1130 * t1594 + t1591 * t1619;
t1073 = -pkin(2) * t1231 + pkin(8) * t1182 + t1105 * t1601 + t1110 * t1598;
t1072 = -pkin(2) * t1164 + pkin(8) * t1146 + t1115 * t1601 + t1121 * t1598;
t1070 = -pkin(1) * t1199 - t1116 * t1591 + t1594 * t1620;
t1069 = pkin(1) * t1200 + t1116 * t1594 + t1591 * t1620;
t1068 = -pkin(2) * t1220 + pkin(8) * t1175 + t1100 * t1601 + t1104 * t1598;
t1062 = -pkin(2) * t1168 + pkin(8) * t1150 + t1067 * t1601 + t1111 * t1598;
t1061 = t1074 * t1602 - t1092 * t1599 + (-t1119 * t1591 - t1120 * t1594) * pkin(7);
t1060 = t1071 * t1602 - t1085 * t1599 + (-t1112 * t1591 - t1113 * t1594) * pkin(7);
t1058 = -t1076 * t1591 + t1594 * t1678;
t1057 = t1076 * t1594 + t1591 * t1678;
t1056 = t1075 * t1602 - t1091 * t1599 + (-t1089 * t1591 - t1090 * t1594) * pkin(7);
t1055 = -pkin(1) * t1119 - t1073 * t1591 + t1594 * t1622;
t1054 = pkin(1) * t1120 + t1073 * t1594 + t1591 * t1622;
t1053 = -pkin(1) * t1089 - t1072 * t1591 + t1594 * t1621;
t1052 = pkin(1) * t1090 + t1072 * t1594 + t1591 * t1621;
t1050 = -pkin(1) * t1112 - t1068 * t1591 + t1594 * t1623;
t1049 = pkin(1) * t1113 + t1068 * t1594 + t1591 * t1623;
t1048 = t1064 * t1602 - t1066 * t1599 + (-t1095 * t1591 - t1096 * t1594) * pkin(7);
t1046 = -pkin(2) * t1081 + pkin(8) * t1077 + t1059 * t1601 + t1063 * t1598;
t1045 = -pkin(1) * t1095 - t1062 * t1591 + t1594 * t1624;
t1044 = pkin(1) * t1096 + t1062 * t1594 + t1591 * t1624;
t1043 = t1047 * t1602 - t1051 * t1599 + (-t1057 * t1591 - t1058 * t1594) * pkin(7);
t1042 = -pkin(1) * t1057 - t1046 * t1591 + t1594 * t1625;
t1041 = pkin(1) * t1058 + t1046 * t1594 + t1591 * t1625;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1809, -t1808, -t1792, -qJ(1) * t1792, 0, 0, -t1649, 0, t1471, t1590 * t1726, -qJ(1) * t1470 - t1354 * t1590 + t1422 * t1593, qJ(1) * t1650 - t1590 * t1353 + t1593 * t1423, -t1362 * t1590 + t1375 * t1593, t1593 * t1252 - t1590 * t1262 - qJ(1) * (t1334 * t1593 + t1376 * t1590), t1341, t1294, -t1850, t1340, t1843, t1427, -t1590 * t1193 + t1593 * t1215 + t1854, -t1590 * t1194 + t1593 * t1216 + t1859, -t1185 * t1590 + t1253 * t1593 - t1776, t1593 * t1129 - t1590 * t1123 - qJ(1) * (t1202 * t1593 + t1266 * t1590), t1427, t1850, -t1843, t1341, t1294, t1340, -t1162 * t1590 + t1221 * t1593 - t1776, -t1590 * t1160 + t1593 * t1178 - t1854, -t1590 * t1158 + t1593 * t1177 - t1859, t1593 * t1094 - t1590 * t1087 - qJ(1) * (t1170 * t1593 + t1229 * t1590), -t1259 * t1590 + t1307 * t1593, -t1214 * t1590 + t1260 * t1593, -t1228 * t1590 + t1273 * t1593, -t1258 * t1590 + t1306 * t1593, -t1226 * t1590 + t1271 * t1593, -t1277 * t1590 + t1346 * t1593, t1593 * t1088 - t1590 * t1079 - qJ(1) * (t1212 * t1593 + t1261 * t1590), t1593 * t1093 - t1590 * t1084 - qJ(1) * (t1227 * t1593 + t1272 * t1590), t1593 * t1082 - t1590 * t1070 - qJ(1) * (t1200 * t1593 + t1254 * t1590), t1593 * t1056 - t1590 * t1053 - qJ(1) * (t1090 * t1593 + t1114 * t1590), -t1134 * t1590 + t1152 * t1593, -t1099 * t1590 + t1118 * t1593, -t1128 * t1590 + t1148 * t1593, -t1133 * t1590 + t1151 * t1593, -t1127 * t1590 + t1147 * t1593, -t1154 * t1590 + t1196 * t1593, t1593 * t1060 - t1590 * t1050 - qJ(1) * (t1113 * t1593 + t1139 * t1590), t1593 * t1061 - t1590 * t1055 - qJ(1) * (t1120 * t1593 + t1142 * t1590), t1593 * t1048 - t1590 * t1045 - qJ(1) * (t1096 * t1593 + t1117 * t1590), t1593 * t1043 - t1590 * t1042 - qJ(1) * (t1058 * t1593 + t1065 * t1590); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1808, -t1809, t1793, qJ(1) * t1793, 0, 0, t1650, 0, t1470, -t1593 * t1726, qJ(1) * t1471 + t1354 * t1593 + t1422 * t1590, qJ(1) * t1649 + t1593 * t1353 + t1590 * t1423, t1362 * t1593 + t1375 * t1590, t1590 * t1252 + t1593 * t1262 + qJ(1) * (-t1334 * t1590 + t1376 * t1593), t1336, t1293, t1849, t1335, -t1842, t1426, t1593 * t1193 + t1590 * t1215 + t1853, t1593 * t1194 + t1590 * t1216 + t1858, t1185 * t1593 + t1253 * t1590 + t1400, t1590 * t1129 + t1593 * t1123 + qJ(1) * (-t1202 * t1590 + t1266 * t1593), t1426, -t1849, t1842, t1336, t1293, t1335, t1162 * t1593 + t1221 * t1590 + t1400, t1593 * t1160 + t1590 * t1178 - t1853, t1593 * t1158 + t1590 * t1177 - t1858, t1590 * t1094 + t1593 * t1087 + qJ(1) * (-t1170 * t1590 + t1229 * t1593), t1259 * t1593 + t1307 * t1590, t1214 * t1593 + t1260 * t1590, t1228 * t1593 + t1273 * t1590, t1258 * t1593 + t1306 * t1590, t1226 * t1593 + t1271 * t1590, t1277 * t1593 + t1346 * t1590, t1590 * t1088 + t1593 * t1079 + qJ(1) * (-t1212 * t1590 + t1261 * t1593), t1590 * t1093 + t1593 * t1084 + qJ(1) * (-t1227 * t1590 + t1272 * t1593), t1590 * t1082 + t1593 * t1070 + qJ(1) * (-t1200 * t1590 + t1254 * t1593), t1590 * t1056 + t1593 * t1053 + qJ(1) * (-t1090 * t1590 + t1114 * t1593), t1134 * t1593 + t1152 * t1590, t1099 * t1593 + t1118 * t1590, t1128 * t1593 + t1148 * t1590, t1133 * t1593 + t1151 * t1590, t1127 * t1593 + t1147 * t1590, t1154 * t1593 + t1196 * t1590, t1590 * t1060 + t1593 * t1050 + qJ(1) * (-t1113 * t1590 + t1139 * t1593), t1590 * t1061 + t1593 * t1055 + qJ(1) * (-t1120 * t1590 + t1142 * t1593), t1590 * t1048 + t1593 * t1045 + qJ(1) * (-t1096 * t1590 + t1117 * t1593), t1590 * t1043 + t1593 * t1042 + qJ(1) * (-t1058 * t1590 + t1065 * t1593); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1706, t1560, 0, 0, 0, 0, t1523, 0, t1524, t1579, t1352, t1351, t1361, t1263, t1411, t1367, t1404, t1410, -t1403, t1484, t1191, t1192, t1184, t1122, t1484, -t1404, t1403, t1411, t1367, t1410, t1161, t1159, t1157, t1086, t1257, t1213, t1225, t1256, t1223, t1276, t1078, t1083, t1069, t1052, t1132, t1098, t1126, t1131, t1125, t1153, t1049, t1054, t1044, t1041; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1777, -t1706, 0, 0, 0, t1556, 0, -t1647, 0, t1422, t1423, t1375, t1252, t1466, t1429, t1463, t1465, -t1462, t1514, t1215, t1216, t1253, t1129, t1514, -t1463, t1462, t1466, t1429, t1465, t1221, t1178, t1177, t1094, t1307, t1260, t1273, t1306, t1271, t1346, t1088, t1093, t1082, t1056, t1152, t1118, t1148, t1151, t1147, t1196, t1060, t1061, t1048, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1777, 0, -t1560, 0, 0, 0, t1525, 0, t1526, -t1726, t1354, t1353, t1362, t1262, t1413, t1368, t1408, t1412, -t1407, t1485, t1193, t1194, t1185, t1123, t1485, -t1408, t1407, t1413, t1368, t1412, t1162, t1160, t1158, t1087, t1259, t1214, t1228, t1258, t1226, t1277, t1079, t1084, t1070, t1053, t1134, t1099, t1128, t1133, t1127, t1154, t1050, t1055, t1045, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1706, t1560, 0, 0, 0, 0, t1523, 0, t1524, t1579, t1352, t1351, t1361, t1263, t1411, t1367, t1404, t1410, -t1403, t1484, t1191, t1192, t1184, t1122, t1484, -t1404, t1403, t1411, t1367, t1410, t1161, t1159, t1157, t1086, t1257, t1213, t1225, t1256, t1223, t1276, t1078, t1083, t1069, t1052, t1132, t1098, t1126, t1131, t1125, t1153, t1049, t1054, t1044, t1041; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1603, 0, 0, -t1518, t1459, 0, t1513, t1481, t1504, t1512, -t1501, t1543, t1396, t1397, t1287, pkin(8) * t1287, t1543, -t1504, t1501, t1513, t1481, t1512, t1255, t1289, t1290, t1195, t1383, t1332, t1344, t1382, t1342, t1425, t1137, t1138, t1124, t1075, t1209, t1156, t1190, t1208, t1189, t1265, t1071, t1074, t1064, t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1603, 0, qJDD(2), 0, t1518, 0, t1460, 0, t1572, -t1559, -t1725, -t1572, -t1724, -qJDD(3), t1356, t1357, 0, pkin(2) * t1287, -qJDD(3), t1725, t1724, t1572, -t1559, -t1572, t1548, t1292, t1291, t1186, t1431, t1371, t1420, -t1432, t1417, t1445, t1176, t1180, t1135, t1091, t1238, t1165, t1240, t1236, t1241, t1274, t1085, t1092, t1066, t1051; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1459, -t1460, 0, 0, t1491, t1480, t1496, t1490, t1492, 0, t1366, t1365, t1278, t1270, 0, -t1496, -t1492, t1491, t1480, t1490, t1251, t1284, t1285, t1172, t1381, t1331, t1339, t1380, t1337, t1424, t1130, t1136, t1116, t1072, t1207, t1155, t1188, t1206, t1187, t1264, t1068, t1073, t1062, t1046; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1552, t1553, t1562, -t1714, t1568, t1714, 0, t1434, t1398, 0, t1714, -t1562, -t1568, t1552, t1553, -t1714, t1347, -qJ(4) * t1553, t1348, -qJ(4) * t1360, -t1486, t1482, -t1686, t1486, t1454, t1552, t1179, t1183, t1279, t1121, t1415, t1401, t1327, -t1415, -t1323, t1540, t1104, t1110, t1111, t1063; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1715, t1551, t1566, -t1637, t1563, -t1715, -t1434, 0, t1399, 0, -t1715, -t1566, -t1563, t1715, t1551, -t1637, t1345, t1349, pkin(3) * t1551, -pkin(3) * t1360, -t1433, -t1370, -t1416, t1430, -t1419, -t1444, t1218, t1222, t1140, t1115, -t1239, -t1167, -t1242, -t1237, -t1243, -t1275, t1100, t1105, t1067, t1059; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1572, t1559, t1725, t1572, t1724, qJDD(3), -t1398, -t1399, 0, 0, qJDD(3), -t1725, -t1724, -t1572, t1559, t1572, -t1548, t1803, t1811, t1689, -t1431, -t1371, -t1420, t1432, -t1417, -t1445, t1795, t1794, t1796, t1800, -t1238, -t1165, -t1240, -t1236, -t1241, -t1274, t1798, t1797, t1799, t1801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1725, -t1724, -t1572, t1559, t1572, 0, t1358, t1355, 0, -t1431, -t1371, -t1420, t1432, -t1417, -t1445, -qJ(5) * t1384 + t1760, -qJ(5) * t1418 + t1303, -qJ(5) * t1369 - t1807, -qJ(5) * t1807, -t1238, -t1165, -t1240, -t1236, -t1241, -t1274, -qJ(5) * t1219 - t1701, -qJ(5) * t1230 - t1700, -qJ(5) * t1166 - t1702, -qJ(5) * t1080 - t1645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1714, t1562, t1568, -t1552, -t1553, t1714, -t1358, 0, t1360, 0, t1486, -t1482, t1686, -t1486, -t1454, -t1552, t1530 + t1690, t1527 + t1691, -t1780, -t1782, -t1415, -t1401, -t1327, t1415, t1323, -t1540, t1632, t1610, t1707, t1708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1715, t1566, t1563, -t1715, -t1551, t1637, -t1355, -t1360, 0, 0, t1433, t1370, t1416, -t1430, t1419, t1444, qJ(5) * t1385 - t1683, qJ(5) * t1421 - t1682, qJ(5) * t1372 - t1626, qJ(5) * t1164 - t1781, t1239, t1167, t1242, t1237, t1243, t1275, qJ(5) * t1220 - t1628, qJ(5) * t1231 - t1627, qJ(5) * t1168 - t1629, qJ(5) * t1081 - t1612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1515, -t1452, t1804, -t1716, t1519, t1716, 0, t1314, t1234, 0, t1311, t1250, t1317, t1309, t1318, t1364, t1198, t1210, t1102, -pkin(9) * t1108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1521, t1455, t1520, -t1696, t1458, -t1521, -t1314, 0, t1235, 0, t1310, t1248, t1315, t1308, t1316, t1363, t1171, t1173, t1097, t1103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1486, t1482, -t1686, t1486, t1454, t1552, -t1234, -t1235, 0, 0, t1415, t1401, t1327, -t1415, -t1323, t1540, t1685, t1639, t1246, t1107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, -t1322, t1806, t1450, t1440, -t1450, 0, t1269, t1143, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, t1805, t1441, -t1640, t1378, -t1451, -t1269, 0, t1144, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1415, t1401, t1327, -t1415, -t1323, t1540, -t1143, -t1144, 0, 0;];
m_new_reg  = t1;
