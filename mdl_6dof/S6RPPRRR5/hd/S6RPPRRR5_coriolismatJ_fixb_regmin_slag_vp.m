% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:29:04
% EndTime: 2019-03-09 02:29:12
% DurationCPUTime: 3.11s
% Computational Cost: add. (2732->266), mult. (5397->346), div. (0->0), fcn. (5668->6), ass. (0->212)
t272 = qJD(4) + qJD(5);
t218 = cos(qJ(4));
t334 = cos(qJ(5));
t199 = t334 * t218;
t215 = sin(qJ(5));
t216 = sin(qJ(4));
t303 = t215 * t216;
t181 = -t199 + t303;
t182 = t215 * t218 + t334 * t216;
t345 = t272 * t182;
t239 = t181 * t345;
t217 = cos(qJ(6));
t213 = pkin(1) + qJ(3);
t198 = t216 * pkin(4) + t213;
t331 = t182 * pkin(5);
t332 = t181 * pkin(9);
t242 = t331 + t332;
t223 = t198 + t242;
t214 = sin(qJ(6));
t212 = -pkin(7) + qJ(2);
t348 = -pkin(8) + t212;
t185 = t348 * t216;
t186 = t348 * t218;
t232 = t334 * t185 + t215 * t186;
t347 = t232 * t214;
t34 = -t217 * t223 + t347;
t353 = (t34 - t347) * t181;
t346 = t232 * t217;
t35 = t214 * t223 + t346;
t352 = (t35 - t346) * t181;
t252 = t215 * t185 - t334 * t186;
t351 = t272 * t252;
t350 = t272 * t232;
t349 = 0.2e1 * t181;
t103 = t181 * t214;
t241 = t103 * t272;
t180 = t181 ^ 2;
t341 = t182 ^ 2;
t61 = t341 - t180;
t268 = t334 * pkin(4);
t201 = -t268 - pkin(5);
t310 = t182 * t201;
t329 = t215 * pkin(4);
t200 = pkin(9) + t329;
t311 = t181 * t200;
t343 = t332 / 0.2e1 + t331 / 0.2e1 + t311 / 0.2e1 - t310 / 0.2e1 + (-t334 * t182 / 0.2e1 - t215 * t181 / 0.2e1) * pkin(4);
t304 = t214 * t217;
t211 = t217 ^ 2;
t340 = t214 ^ 2;
t95 = (-t340 / 0.2e1 + t211 / 0.2e1) * t181;
t342 = t180 * qJD(1) * t304 + t272 * t95;
t280 = t181 * qJD(1);
t164 = t214 * t280;
t270 = -t211 + t340;
t62 = -0.2e1 * t217 * t164 + t270 * t272;
t339 = t200 / 0.2e1;
t338 = t201 / 0.2e1;
t337 = -t214 / 0.2e1;
t336 = -t217 / 0.2e1;
t335 = t217 / 0.2e1;
t333 = t181 * pkin(5);
t330 = t182 * pkin(9);
t328 = t218 * pkin(4);
t101 = t181 * t217;
t326 = t101 * qJD(2);
t322 = pkin(5) * qJD(5);
t127 = t330 - t333;
t106 = t127 + t328;
t302 = t217 * t106;
t1 = t302 * t182 + t353;
t321 = t1 * qJD(1);
t307 = t214 * t106;
t2 = -t307 * t182 + t352;
t320 = t2 * qJD(1);
t100 = t217 * t182;
t3 = t127 * t100 + t353;
t319 = t3 * qJD(1);
t96 = t214 * t182;
t4 = -t127 * t96 + t352;
t318 = t4 * qJD(1);
t246 = -t268 / 0.2e1;
t235 = t246 - t201 / 0.2e1;
t219 = (-pkin(5) / 0.2e1 + t235) * t182 + (t339 - t329 / 0.2e1 - pkin(9) / 0.2e1) * t181;
t6 = t219 * t214;
t317 = t6 * qJD(1);
t176 = t181 * qJD(2);
t316 = t214 * t176;
t315 = t252 * t214;
t314 = t252 * t217;
t20 = t103 * t252 + t34 * t182;
t309 = t20 * qJD(1);
t21 = -t101 * t252 - t35 * t182;
t308 = t21 * qJD(1);
t305 = t214 * t341;
t128 = t180 * t214;
t273 = -t341 / 0.2e1;
t253 = -0.1e1 / 0.2e1 + t273;
t37 = -t128 / 0.2e1 + t253 * t214;
t300 = t37 * qJD(1);
t44 = (-t341 - t180) * t217;
t299 = t44 * qJD(1);
t48 = (t180 / 0.2e1 - t253) * t217;
t298 = t48 * qJD(1);
t52 = t61 * t214;
t297 = t52 * qJD(1);
t53 = t61 * t217;
t296 = t53 * qJD(1);
t54 = t128 + t305;
t295 = t54 * qJD(1);
t294 = t61 * qJD(1);
t67 = -t198 * t181 + t182 * t328;
t293 = t67 * qJD(1);
t68 = -t181 * t328 - t198 * t182;
t292 = t68 * qJD(1);
t291 = t95 * qJD(1);
t290 = t96 * qJD(1);
t288 = qJD(4) * t201;
t287 = qJD(5) * t198;
t286 = qJD(6) * t214;
t285 = qJD(6) * t217;
t284 = t100 * qJD(1);
t283 = t101 * qJD(1);
t109 = t270 * t180;
t282 = t109 * qJD(1);
t179 = t199 / 0.2e1 - t303 / 0.2e1;
t281 = t179 * qJD(1);
t279 = t182 * qJD(1);
t174 = t182 * qJD(2);
t278 = t182 * qJD(3);
t193 = t216 ^ 2 - t218 ^ 2;
t277 = t193 * qJD(1);
t276 = t213 * qJD(1);
t204 = t216 * qJD(1);
t275 = t216 * qJD(4);
t205 = t218 * qJD(1);
t274 = t218 * qJD(4);
t165 = t182 * t286;
t269 = t272 * t101 + t165;
t267 = qJD(5) * t329;
t266 = qJD(4) * t329;
t263 = t182 * t285;
t129 = t181 * t279;
t262 = t198 * t280;
t261 = t198 * t279;
t197 = t214 * t285;
t260 = t214 * t279;
t259 = t217 * t279;
t258 = t216 * t205;
t255 = t334 * qJD(4);
t254 = t334 * qJD(5);
t251 = t272 * t217;
t249 = t272 * t214;
t248 = -qJD(2) + t276;
t247 = qJD(6) + t279;
t243 = t272 * t329;
t240 = t214 * t251;
t238 = t217 * t249;
t237 = -t310 + t311;
t236 = t247 * t214;
t234 = t330 / 0.2e1 - t333 / 0.2e1;
t233 = t181 * t338 + t182 * t339;
t224 = t106 / 0.2e1 + t233;
t11 = t224 * t214;
t231 = -t11 * qJD(1) - t217 * t288;
t13 = t224 * t217;
t230 = t13 * qJD(1) - t214 * t288;
t229 = t247 * t101;
t56 = -t179 * qJD(6) + t129;
t228 = pkin(5) / 0.2e1 + t235;
t9 = t219 * t217;
t227 = -t9 * qJD(1) - t214 * t266;
t226 = t127 / 0.2e1 + t234;
t225 = t240 * t349;
t138 = t228 * t214;
t17 = t226 * t217;
t222 = t17 * qJD(1) + t138 * qJD(4) + t214 * t322;
t139 = t228 * t217;
t15 = t226 * t214;
t221 = -t15 * qJD(1) + t139 * qJD(4) + t217 * t322;
t210 = qJ(2) * qJD(1);
t209 = qJ(2) * qJD(2);
t192 = t214 * t267;
t189 = t270 * qJD(6);
t141 = pkin(5) * t336 + t201 * t335 + t217 * t246;
t140 = pkin(5) * t337 + (t246 + t338) * t214;
t112 = t272 * t181;
t107 = t272 * t179;
t73 = t100 * qJD(6);
t69 = t95 * qJD(6);
t60 = t284 + t285;
t59 = -t286 - t290;
t49 = t180 * t336 + t217 * t273 + t335;
t47 = t238 - t291;
t46 = -t240 + t291;
t45 = 0.2e1 * t214 * t229;
t38 = t305 / 0.2e1 + t128 / 0.2e1 + t337;
t36 = -t211 * t129 - t69;
t33 = t73 + t296;
t32 = -t96 * qJD(6) - t297;
t30 = -t69 + (t211 * t280 - t240) * t182;
t28 = -t241 - t296;
t27 = -t181 * t251 + t297;
t22 = (qJD(6) - t279) * t304 * t349 + t270 * t345;
t19 = t103 * qJD(6) - t182 * t251;
t18 = t127 * t335 - t234 * t217 + t315;
t16 = t127 * t337 + t234 * t214 + t314;
t14 = t315 / 0.2e1 - t252 * t337 + t302 / 0.2e1 - t233 * t217;
t12 = t314 / 0.2e1 - t252 * t336 - t307 / 0.2e1 + t233 * t214;
t8 = t343 * t217 + t347;
t7 = t343 * t214 - t346;
t5 = t101 * qJD(6) + t182 * t249;
t10 = [0, 0, 0, 0, qJD(2), t209, qJD(2), qJD(3), t213 * qJD(3) + t209, -t216 * t274, t193 * qJD(4), 0, 0, 0, qJD(3) * t216 + t213 * t274, qJD(3) * t218 - t213 * t275, t239, t272 * t61, 0, 0, 0, t67 * qJD(4) - t181 * t287 + t278, -t181 * qJD(3) + t68 * qJD(4) - t182 * t287, -t180 * t197 + t211 * t239, t109 * qJD(6) - t182 * t225, t165 * t181 - t272 * t53, t181 * t263 + t272 * t52, -t239, -t54 * qJD(2) + t1 * qJD(4) + t3 * qJD(5) + t21 * qJD(6) + t217 * t278, t44 * qJD(2) + t2 * qJD(4) + t4 * qJD(5) + t20 * qJD(6) - t214 * t278; 0, 0, 0, 0, qJD(1), t210, qJD(1), 0, t210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, t299; 0, 0, 0, 0, 0, 0, 0, qJD(1), t276, 0, 0, 0, 0, 0, t204, t205, 0, 0, 0, 0, 0, t279, -t280, 0, 0, 0, 0, 0, t49 * qJD(6) + t259, t38 * qJD(6) - t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, t277, -t275, -t274, 0, t213 * t205 - t212 * t275, -t204 * t213 - t212 * t274, t129, t294, -t345, t112, 0, t293 - t350, t292 + t351, t30, t22, t28, t27, -t56, t321 + (t214 * t237 - t346) * qJD(4) + t7 * qJD(5) + t14 * qJD(6), t320 + (t217 * t237 + t347) * qJD(4) + t8 * qJD(5) + t12 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t294, -t345, t112, 0, -t262 - t350, -t261 + t351, t30, t22, t28, t27, -t56, t319 + t7 * qJD(4) + (t214 * t242 - t346) * qJD(5) + t18 * qJD(6), t318 + t8 * qJD(4) + (t217 * t242 + t347) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342, t238 * t349 + t282, t181 * t236, t229, t107, t49 * qJD(3) + t14 * qJD(4) + t18 * qJD(5) - t35 * qJD(6) + t308, t38 * qJD(3) + t12 * qJD(4) + t16 * qJD(5) + t34 * qJD(6) + t309; 0, 0, 0, 0, -qJD(1), -t210, -qJD(1), 0, -qJD(3) - t210, 0, 0, 0, 0, 0, -t274, t275, 0, 0, 0, 0, 0, t112, t345, 0, 0, 0, 0, 0, t269 + t295, -t241 + t73 - t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, t204, 0, 0, 0, 0, 0, t280, t279, 0, 0, 0, 0, 0, t283, -t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, t279, 0, 0, 0, 0, 0, t283, -t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t60; 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t248, 0, 0, 0, 0, 0, -t204, -t205, 0, 0, 0, 0, 0, -t279, t280, 0, 0, 0, 0, 0, -t48 * qJD(6) - t259, -t37 * qJD(6) + t260; 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, -t274, 0, 0, 0, 0, 0, -t345, t112, 0, 0, 0, 0, 0, t19, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t112, 0, 0, 0, 0, 0, t19, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263 - t298 + t241, t269 - t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, -t277, 0, 0, 0, -t248 * t218, t248 * t216, -t129, -t294, 0, 0, 0, -t176 - t293, -t174 - t292, t36, t45, t33, t32, t56, t6 * qJD(5) - t13 * qJD(6) - t321 - t326, t9 * qJD(5) + t11 * qJD(6) + t316 - t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, -t204, 0, 0, 0, 0, 0, -t280, -t279, 0, 0, 0, 0, 0, -t283, t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, -pkin(4) * t254, t197, -t189, 0, 0, 0, t201 * t286 - t217 * t267, t201 * t285 + t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243 (-t255 - t254) * pkin(4), t197, -t189, 0, 0, 0, t140 * qJD(6) - t217 * t243 + t317, t141 * qJD(6) + t192 - t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t62, t60, t59, -t281, t140 * qJD(5) - t200 * t285 - t230, t141 * qJD(5) + t200 * t286 - t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, -t294, 0, 0, 0, -t176 + t262, -t174 + t261, t36, t45, t33, t32, t56, -t6 * qJD(4) - t17 * qJD(6) - t319 - t326, -t9 * qJD(4) + t15 * qJD(6) + t316 - t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, -t279, 0, 0, 0, 0, 0, -t283, t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, pkin(4) * t255, t197, -t189, 0, 0, 0, -t138 * qJD(6) + t217 * t266 - t317, -t139 * qJD(6) + t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, -t189, 0, 0, 0, -pkin(5) * t286, -pkin(5) * t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t62, t60, t59, -t281, -pkin(9) * t285 - t222, pkin(9) * t286 - t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, -t225 - t282, -t100 * t272 - t181 * t260, -t181 * t259 + t272 * t96, t107, t48 * qJD(3) + t13 * qJD(4) + t17 * qJD(5) - t174 * t214 - t308, -t100 * qJD(2) + t37 * qJD(3) - t11 * qJD(4) - t15 * qJD(5) - t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t62, -t284, t290, t281, t138 * qJD(5) + t230, t139 * qJD(5) + t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t62, -t284, t290, t281, t222, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
