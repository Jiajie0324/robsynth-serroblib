% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR13_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR13_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR13_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR13_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:29:39
% EndTime: 2019-03-09 11:30:06
% DurationCPUTime: 13.01s
% Computational Cost: add. (14992->680), mult. (38415->932), div. (0->0), fcn. (28889->10), ass. (0->298)
t290 = cos(pkin(6));
t295 = cos(qJ(2));
t413 = pkin(1) * t295;
t357 = t290 * t413;
t270 = qJD(1) * t357;
t418 = qJD(3) - t270;
t368 = qJD(1) * t290;
t274 = qJD(2) + t368;
t294 = cos(qJ(4));
t292 = sin(qJ(4));
t288 = sin(pkin(6));
t369 = qJD(1) * t288;
t351 = t295 * t369;
t332 = t292 * t351;
t208 = t274 * t294 - t332;
t293 = sin(qJ(2));
t367 = qJD(1) * t293;
t352 = t288 * t367;
t262 = qJD(4) + t352;
t287 = sin(pkin(11));
t289 = cos(pkin(11));
t139 = t208 * t289 + t262 * t287;
t291 = sin(qJ(6));
t415 = cos(qJ(6));
t192 = t287 * t208;
t420 = t262 * t289 - t192;
t316 = t415 * t420;
t73 = -t139 * t291 + t316;
t437 = t73 ^ 2;
t206 = t274 * t292 + t294 * t351;
t203 = qJD(6) + t206;
t436 = t203 * t73;
t326 = pkin(4) * t294 + qJ(5) * t292;
t416 = pkin(3) + pkin(8);
t435 = (-t326 - t416) * t352 - qJD(4) * t326 + t294 * qJD(5) - t418;
t74 = t415 * t139 + t291 * t420;
t434 = t74 ^ 2;
t195 = t287 * t292 * t352 - t289 * t351;
t363 = qJD(4) * t292;
t433 = t287 * t363 + t195;
t296 = -pkin(2) - pkin(9);
t362 = qJD(4) * t294;
t345 = t296 * t362;
t272 = pkin(2) * t352;
t325 = pkin(9) * t293 - qJ(3) * t295;
t187 = t325 * t369 + t272;
t414 = pkin(1) * t293;
t279 = t290 * t414;
t381 = t288 * t295;
t371 = pkin(8) * t381 + t279;
t222 = t371 * qJD(1);
t189 = pkin(3) * t351 + t222;
t96 = t294 * t187 + t292 * t189;
t86 = qJ(5) * t351 + t96;
t397 = (t345 - t86) * t289 - t435 * t287;
t432 = -t287 * t86 + t435 * t289;
t379 = t292 * t293;
t196 = (t287 * t295 + t289 * t379) * t369;
t333 = t294 * t352;
t339 = -t287 * t296 + pkin(5);
t431 = -pkin(5) * t333 - pkin(10) * t196 - (pkin(10) * t289 * t292 + t294 * t339) * qJD(4) + t432;
t430 = t433 * pkin(10) + t397;
t122 = t296 * t274 + t416 * t352 + t418;
t366 = qJD(2) * t293;
t350 = t288 * t366;
t329 = qJD(1) * t350;
t259 = pkin(2) * t329;
t364 = qJD(3) * t293;
t298 = (qJD(2) * t325 - t364) * t288;
t134 = qJD(1) * t298 + t259;
t340 = -qJ(3) * t293 - pkin(1);
t185 = (t296 * t295 + t340) * t288;
t159 = qJD(1) * t185;
t190 = (t416 * t381 + t279) * qJD(2);
t165 = qJD(1) * t190;
t305 = -t122 * t362 - t294 * t134 + t159 * t363 - t292 * t165;
t77 = t294 * t122 - t292 * t159;
t428 = -t262 * t77 - t305;
t334 = t122 * t363 + t292 * t134 + t159 * t362 - t294 * t165;
t78 = t122 * t292 + t159 * t294;
t427 = t262 * t78 - t334;
t284 = t288 ^ 2;
t358 = qJD(1) * qJD(2);
t426 = -0.2e1 * t284 * t358;
t144 = qJD(4) * t206 - t292 * t329;
t136 = t287 * t144;
t341 = t295 * t358;
t265 = t288 * t341;
t304 = t265 * t289 + t136;
t425 = t304 * t294;
t315 = -t291 * t287 + t415 * t289;
t217 = t315 * t292;
t145 = -qJD(4) * t332 + t274 * t362 - t294 * t329;
t229 = t290 * t292 + t294 * t381;
t108 = t145 * t229;
t354 = t292 * t381;
t177 = -qJD(4) * t354 + t290 * t362 - t294 * t350;
t424 = t177 * t206 + t108;
t140 = t145 * t292;
t308 = t206 * t262;
t423 = t294 * t308 + t140;
t422 = t144 - t308;
t389 = t208 * t262;
t421 = -t145 + t389;
t343 = qJD(6) * t415;
t361 = qJD(6) * t291;
t419 = -t287 * t361 + t289 * t343;
t67 = qJ(5) * t262 + t78;
t266 = t274 * qJ(3);
t149 = t266 + t189;
t79 = t206 * pkin(4) - t208 * qJ(5) + t149;
t32 = -t287 * t67 + t289 * t79;
t22 = pkin(5) * t206 - pkin(10) * t139 + t32;
t33 = t287 * t79 + t289 * t67;
t24 = pkin(10) * t420 + t33;
t317 = -t415 * t22 + t291 * t24;
t109 = -t144 * t289 + t265 * t287;
t299 = qJ(5) * t265 + qJD(5) * t262;
t31 = t299 - t305;
t372 = pkin(8) * t329 - qJD(2) * t270;
t171 = -t274 * qJD(3) + t372;
t135 = -pkin(3) * t329 - t171;
t54 = pkin(4) * t145 + qJ(5) * t144 - qJD(5) * t208 + t135;
t15 = -t287 * t31 + t289 * t54;
t8 = pkin(5) * t145 - pkin(10) * t109 + t15;
t16 = t287 * t54 + t289 * t31;
t9 = pkin(10) * t304 + t16;
t1 = -qJD(6) * t317 + t291 * t8 + t415 * t9;
t417 = t206 ^ 2;
t412 = pkin(10) * t294;
t411 = t74 * t73;
t410 = pkin(10) + qJ(5);
t244 = pkin(4) * t292 - qJ(5) * t294 + qJ(3);
t234 = t289 * t244;
t150 = -t289 * t412 + t292 * t339 + t234;
t378 = t292 * t296;
t201 = t287 * t244 + t289 * t378;
t164 = -t287 * t412 + t201;
t82 = t291 * t150 + t415 * t164;
t409 = t82 * qJD(6) + t430 * t291 + t431 * t415;
t81 = t415 * t150 - t291 * t164;
t408 = -t81 * qJD(6) + t431 * t291 - t430 * t415;
t365 = qJD(2) * t295;
t269 = pkin(2) * t350;
t152 = t269 + t298;
t382 = t288 * t293;
t276 = pkin(8) * t382;
t353 = -pkin(2) - t413;
t163 = pkin(3) * t382 + t276 + (-pkin(9) + t353) * t290;
t56 = t294 * t152 + t163 * t362 - t185 * t363 + t292 * t190;
t46 = (qJ(5) * t365 + qJD(5) * t293) * t288 + t56;
t271 = qJD(2) * t357;
t282 = t290 * qJD(3);
t335 = t416 * t382;
t162 = -qJD(2) * t335 + t271 + t282;
t176 = qJD(4) * t229 - t292 * t350;
t230 = t290 * t294 - t354;
t63 = t177 * pkin(4) + t176 * qJ(5) - t230 * qJD(5) + t162;
t21 = t287 * t63 + t289 * t46;
t93 = t292 * t163 + t294 * t185;
t83 = qJ(5) * t382 + t93;
t212 = -t290 * qJ(3) - t371;
t184 = pkin(3) * t381 - t212;
t94 = pkin(4) * t229 - qJ(5) * t230 + t184;
t49 = t287 * t94 + t289 * t83;
t34 = -pkin(4) * t265 + t334;
t405 = t34 * t287;
t404 = t34 * t289;
t256 = t410 * t287;
t257 = t410 * t289;
t183 = -t291 * t256 + t415 * t257;
t237 = t415 * t287 + t291 * t289;
t390 = t206 * t289;
t118 = pkin(4) * t208 + qJ(5) * t206;
t52 = t289 * t118 - t287 * t77;
t30 = pkin(5) * t208 + pkin(10) * t390 + t52;
t391 = t206 * t287;
t53 = t287 * t118 + t289 * t77;
t38 = pkin(10) * t391 + t53;
t403 = qJD(5) * t237 + qJD(6) * t183 - t291 * t38 + t415 * t30;
t182 = -t415 * t256 - t291 * t257;
t402 = qJD(5) * t315 + qJD(6) * t182 - t291 * t30 - t415 * t38;
t193 = t274 * t289 + t287 * t333;
t194 = t274 * t287 - t289 * t333;
t215 = t237 * t292;
t218 = t315 * t294;
t401 = qJD(4) * t218 - qJD(6) * t215 - t291 * t193 - t415 * t194;
t400 = -qJD(6) * t217 - t415 * t193 + t291 * t194 - t237 * t362;
t331 = t415 * t363;
t347 = t291 * t363;
t399 = -t415 * t195 - t196 * t291 - t287 * t331 - t289 * t347 + t419 * t294;
t398 = -t287 * t345 - t432;
t338 = pkin(5) * t287 - t296;
t95 = -t292 * t187 + t189 * t294;
t87 = -pkin(4) * t351 - t95;
t396 = -pkin(5) * t195 - t338 * t363 - t87;
t395 = t109 * t287;
t394 = t139 * t287;
t392 = t206 * t208;
t224 = t371 * qJD(2);
t211 = qJD(1) * t224;
t388 = t211 * t293;
t387 = t222 * t274;
t386 = t224 * t293;
t313 = t262 * t292;
t311 = t262 * t294;
t384 = t284 * qJD(1) ^ 2;
t383 = t287 * t145;
t380 = t289 * t145;
t377 = t294 * t109;
t66 = -t262 * pkin(4) + qJD(5) - t77;
t376 = -qJD(5) + t66;
t228 = t237 * qJD(6);
t375 = -t291 * t195 + t415 * t196 + t228 * t294 - t287 * t347 + t289 * t331;
t374 = -t237 * t206 - t228;
t373 = -t315 * t206 - t419;
t285 = t293 ^ 2;
t370 = -t295 ^ 2 + t285;
t360 = qJD(1) * t335 + t418;
t221 = pkin(8) * t352 - t270;
t359 = qJD(3) + t221;
t356 = t293 * t311;
t355 = t295 * t384;
t349 = t288 * t365;
t346 = t262 * t362;
t20 = -t287 * t46 + t289 * t63;
t48 = -t287 * t83 + t289 * t94;
t337 = t291 * t109 - t415 * t304;
t92 = t163 * t294 - t292 * t185;
t328 = pkin(1) * t426;
t327 = -t289 * t363 - t196;
t324 = -t15 * t287 + t16 * t289;
t323 = -t287 * t32 + t289 * t33;
t322 = t289 * t420;
t321 = t211 * t290 + t224 * t274;
t320 = t420 * qJD(4);
t319 = t284 * t293 * t341;
t223 = -pkin(8) * t350 + t271;
t57 = -t292 * t152 - t163 * t363 - t185 * t362 + t190 * t294;
t198 = -t274 * t351 + t265;
t175 = t230 * t289 + t287 * t382;
t27 = pkin(5) * t229 - pkin(10) * t175 + t48;
t174 = t230 * t287 - t289 * t382;
t35 = -pkin(10) * t174 + t49;
t10 = t415 * t27 - t291 * t35;
t6 = t291 * t22 + t415 * t24;
t11 = t291 * t27 + t415 * t35;
t89 = -t291 * t174 + t415 * t175;
t314 = t149 * t293 + t296 * t365;
t309 = t262 * t139;
t307 = qJD(2) * t288 * (t274 + t368);
t25 = -qJD(6) * t316 - t415 * t109 + t139 * t361 - t291 * t304;
t85 = -pkin(4) * t382 - t92;
t213 = (-pkin(2) * t295 + t340) * t288;
t302 = (-qJ(3) * t365 - t364) * t288;
t301 = t322 - t394;
t300 = t304 * t289;
t47 = -pkin(4) * t349 - t57;
t2 = -qJD(6) * t6 - t291 * t9 + t415 * t8;
t26 = qJD(6) * t74 + t337;
t23 = -pkin(5) * t304 + t34;
t281 = -pkin(5) * t289 - pkin(4);
t250 = t293 * t355;
t242 = t294 * t265;
t239 = -0.2e1 * t319;
t238 = 0.2e1 * t319;
t235 = t338 * t294;
t231 = -t276 + t357;
t226 = t370 * t384;
t220 = -qJ(3) * t351 + t272;
t216 = t237 * t294;
t214 = t290 * t353 + t276;
t209 = t370 * t426;
t202 = -t223 - t282;
t200 = -t287 * t378 + t234;
t199 = qJD(1) * t213;
t197 = (qJD(2) - t274) * t352;
t191 = t269 + t302;
t186 = -t266 - t222;
t181 = t295 * t307;
t180 = t293 * t307;
t178 = -t274 * pkin(2) + t359;
t168 = qJD(1) * t302 + t259;
t160 = t199 * t352;
t124 = -t176 * t289 + t287 * t349;
t123 = -t176 * t287 - t289 * t349;
t88 = t415 * t174 + t175 * t291;
t64 = pkin(5) * t174 + t85;
t62 = -pkin(5) * t391 + t78;
t55 = -pkin(5) * t420 + t66;
t42 = t89 * qJD(6) + t415 * t123 + t291 * t124;
t41 = t291 * t123 - t415 * t124 + t174 * t343 + t175 * t361;
t29 = pkin(5) * t123 + t47;
t19 = -pkin(10) * t123 + t21;
t14 = pkin(5) * t177 - pkin(10) * t124 + t20;
t4 = -t11 * qJD(6) + t415 * t14 - t291 * t19;
t3 = t10 * qJD(6) + t291 * t14 + t415 * t19;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t209, t181, t239, -t180, 0, t293 * t328 - t321, -t223 * t274 + t290 * t372 + t295 * t328 (-t372 * t295 + t388 + (t221 * t295 - t222 * t293) * qJD(2) + (t223 * t295 + t386 + (-t231 * t295 - t293 * t371) * qJD(2)) * qJD(1)) * t288, -t211 * t231 + t221 * t224 + t222 * t223 - t371 * t372, 0, -t181, t180, t238, t209, t239 (-t171 * t295 + t388 + (t178 * t295 + t186 * t293) * qJD(2) + (-t202 * t295 + t386 + (t212 * t293 + t214 * t295) * qJD(2)) * qJD(1)) * t288 (-t199 * t366 + t168 * t295 + (t191 * t295 - t213 * t366) * qJD(1)) * t288 + t321, -t171 * t290 - t202 * t274 + (-t199 * t365 - t168 * t293 + (-t191 * t293 - t213 * t365) * qJD(1)) * t288, t168 * t213 + t171 * t212 + t178 * t224 + t186 * t202 + t191 * t199 + t211 * t214, -t144 * t230 - t176 * t208, t144 * t229 - t145 * t230 + t176 * t206 - t177 * t208, -t176 * t262 + (-t144 * t293 + (qJD(1) * t230 + t208) * t365) * t288, t424, -t177 * t262 + (-t145 * t293 + (-qJD(1) * t229 - t206) * t365) * t288 (t262 * t288 + t284 * t367) * t365, t135 * t229 + t145 * t184 + t149 * t177 + t162 * t206 + t262 * t57 + (-t293 * t334 + (qJD(1) * t92 + t77) * t365) * t288, t135 * t230 - t144 * t184 - t149 * t176 + t162 * t208 - t262 * t56 + (t293 * t305 + (-qJD(1) * t93 - t78) * t365) * t288, t144 * t92 - t145 * t93 + t176 * t77 - t177 * t78 - t206 * t56 - t208 * t57 + t229 * t305 + t230 * t334, t135 * t184 + t149 * t162 - t305 * t93 - t334 * t92 + t56 * t78 + t57 * t77, t109 * t175 + t124 * t139, -t109 * t174 - t139 * t123 + t124 * t420 + t175 * t304, t109 * t229 + t124 * t206 + t139 * t177 + t145 * t175, -t123 * t420 - t174 * t304, -t123 * t206 - t174 * t145 + t177 * t420 + t229 * t304, t424, t66 * t123 + t48 * t145 + t15 * t229 + t34 * t174 + t32 * t177 + t20 * t206 - t304 * t85 - t420 * t47, t109 * t85 + t124 * t66 + t139 * t47 - t145 * t49 - t16 * t229 + t175 * t34 - t177 * t33 - t206 * t21, -t48 * t109 - t33 * t123 - t32 * t124 - t20 * t139 - t15 * t175 - t16 * t174 + t21 * t420 + t304 * t49, t15 * t48 + t16 * t49 + t20 * t32 + t21 * t33 + t34 * t85 + t47 * t66, -t25 * t89 - t41 * t74, t25 * t88 - t26 * t89 - t41 * t73 - t42 * t74, t145 * t89 + t177 * t74 - t203 * t41 - t229 * t25, t26 * t88 - t42 * t73, -t145 * t88 + t177 * t73 - t203 * t42 - t229 * t26, t177 * t203 + t108, t10 * t145 - t177 * t317 + t2 * t229 + t203 * t4 + t23 * t88 + t26 * t64 - t29 * t73 + t42 * t55, -t1 * t229 - t11 * t145 - t177 * t6 - t203 * t3 + t23 * t89 - t25 * t64 + t29 * t74 - t41 * t55, -t1 * t88 + t10 * t25 - t11 * t26 - t2 * t89 + t3 * t73 - t317 * t41 - t4 * t74 - t42 * t6, t1 * t11 + t10 * t2 + t23 * t64 + t29 * t55 + t3 * t6 - t317 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, t226, t198, t250, -t197, 0, -pkin(8) * t265 + t387 + (-t290 * t358 + t384) * t414, pkin(1) * t355 - t221 * t274 + t372, 0, 0, 0, -t198, t197, -t250, t226, t250 ((-qJ(3) * qJD(2) - t186 - t222) * t293 + (-pkin(2) * qJD(2) - t178 + t359) * t295) * t369, -t387 + t160 + (-t220 * t381 + t224) * qJD(1), t359 * t274 + (t199 * t295 + t220 * t293) * t369 - t171, -t211 * pkin(2) - t171 * qJ(3) - t178 * t222 - t186 * t359 - t199 * t220, -t294 * t144 - t208 * t313 (-t145 - t389) * t294 + (t144 + t308) * t292, -t262 * t363 + t242 + (-t208 * t295 - t262 * t379) * t369, t423, -t346 + (-t356 + (-qJD(2) * t292 + t206) * t295) * t369, -t262 * t351, qJ(3) * t145 + t135 * t292 - t262 * t95 + t360 * t206 + (t149 * t294 - t262 * t378) * qJD(4) + (t294 * t314 - t295 * t77) * t369, -qJ(3) * t144 + t135 * t294 + t262 * t96 + t360 * t208 + (-t149 * t292 - t296 * t311) * qJD(4) + (-t292 * t314 + t295 * t78) * t369, t206 * t96 + t208 * t95 + (-t78 * t352 + t144 * t296 + t334 + (-t206 * t296 - t78) * qJD(4)) * t294 + (t77 * t352 - t145 * t296 + t305 + (t208 * t296 + t77) * qJD(4)) * t292, qJ(3) * t135 - t77 * t95 - t78 * t96 + t360 * t149 + (-t305 * t292 - t334 * t294 + (-t292 * t77 + t294 * t78) * qJD(4)) * t296, t139 * t327 + t289 * t377, -t196 * t420 + t139 * t195 + (t300 - t395) * t294 - t301 * t363, t109 * t292 + t327 * t206 + (t309 + t380) * t294, t420 * t195 + (t292 * t320 - t425) * t287, t304 * t292 + t433 * t206 + (t352 * t420 + t320 - t383) * t294, t423, t200 * t145 + t87 * t420 - t66 * t195 + t398 * t206 + (t15 + (-t66 * t287 - t296 * t420) * qJD(4)) * t292 + (t262 * t32 + t296 * t304 + t405) * t294, -t139 * t87 - t145 * t201 - t196 * t66 - t397 * t206 + (-t16 + (t139 * t296 - t289 * t66) * qJD(4)) * t292 + (-t109 * t296 - t262 * t33 + t404) * t294, t201 * t304 - t200 * t109 + t33 * t195 + t32 * t196 + (-t15 * t289 - t16 * t287) * t294 - t398 * t139 + (t287 * t33 + t289 * t32) * t363 + t397 * t420, t15 * t200 + t16 * t201 - t66 * t87 + t397 * t33 + t398 * t32 + (-t294 * t34 + t363 * t66) * t296, -t25 * t218 - t375 * t74, t25 * t216 - t218 * t26 - t375 * t73 - t399 * t74, t218 * t145 - t203 * t375 - t25 * t292 + t311 * t74, t26 * t216 - t399 * t73, -t216 * t145 - t203 * t399 - t26 * t292 + t311 * t73, t203 * t311 + t140, t145 * t81 + t2 * t292 - t409 * t203 + t216 * t23 + t235 * t26 - t311 * t317 - t396 * t73 + t399 * t55, -t1 * t292 - t145 * t82 + t408 * t203 + t218 * t23 - t235 * t25 - t311 * t6 - t375 * t55 + t396 * t74, -t1 * t216 - t2 * t218 + t25 * t81 - t26 * t82 - t317 * t375 - t399 * t6 - t408 * t73 + t409 * t74, t1 * t82 + t2 * t81 + t23 * t235 + t317 * t409 + t396 * t55 - t408 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t250, -t274 ^ 2 - t285 * t384, t186 * t274 + t160 + t211, 0, 0, 0, 0, 0, 0, -t274 * t206 - t262 * t313 + t242, -t346 - t274 * t208 + (-t292 * t365 - t356) * t369, t292 * t421 + t294 * t422, -t149 * t274 + t428 * t292 + t427 * t294, 0, 0, 0, 0, 0, 0, t425 + (-t287 * t362 - t193) * t206 + (-t262 * t420 - t383) * t292, -t377 + (-t289 * t362 + t194) * t206 + (t309 - t380) * t292, -t194 * t420 + t193 * t139 + (t300 + t395) * t292 + (t322 + t394) * t362, -t193 * t32 - t194 * t33 + (qJD(4) * t323 - t34) * t294 + (t262 * t66 + t324) * t292, 0, 0, 0, 0, 0, 0, -t215 * t145 + t203 * t400 - t294 * t26 - t313 * t73, -t217 * t145 - t203 * t401 + t294 * t25 + t313 * t74, -t215 * t25 - t217 * t26 - t400 * t74 + t401 * t73, t1 * t217 - t2 * t215 - t23 * t294 + t313 * t55 - t317 * t400 + t401 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, t208 ^ 2 - t417, -t422, -t392, t421, t265, -t149 * t208 + t427, t149 * t206 - t428, 0, 0, t139 * t390 + t395, t109 * t289 + t206 * t301 + t287 * t304, -t139 * t208 + t417 * t289 + t383, -t391 * t420 + t300, -t208 * t420 - t287 * t417 + t380, -t392, -qJ(5) * t383 + pkin(4) * t304 - t404 - t32 * t208 + t78 * t420 + (t287 * t376 - t52) * t206, -qJ(5) * t380 - pkin(4) * t109 - t139 * t78 + t208 * t33 + t405 + (t289 * t376 + t53) * t206, t52 * t139 + t53 * t192 + (qJ(5) * t136 - qJD(5) * t192 - t32 * t206 - t53 * t262 + t289 * t299 + t16) * t289 + (qJ(5) * t109 + qJD(5) * t139 - t206 * t33 - t15) * t287, -t34 * pkin(4) + qJ(5) * t324 + qJD(5) * t323 - t32 * t52 - t33 * t53 - t66 * t78, -t25 * t237 - t373 * t74, -t237 * t26 - t25 * t315 - t373 * t73 + t374 * t74, t237 * t145 - t203 * t373 - t74 * t208, -t26 * t315 + t374 * t73, t145 * t315 + t203 * t374 - t208 * t73, -t203 * t208, t145 * t182 - t203 * t403 + t208 * t317 - t23 * t315 + t26 * t281 - t374 * t55 + t62 * t73, -t145 * t183 - t203 * t402 + t208 * t6 + t23 * t237 - t25 * t281 - t373 * t55 - t62 * t74, t1 * t315 + t182 * t25 - t183 * t26 - t2 * t237 - t317 * t373 + t374 * t6 + t402 * t73 + t403 * t74, t1 * t183 + t182 * t2 + t23 * t281 + t317 * t403 + t402 * t6 - t55 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139 * t206 - t304, t206 * t420 + t109, -t139 ^ 2 - t420 ^ 2, t139 * t32 - t33 * t420 + t34, 0, 0, 0, 0, 0, 0, t203 * t74 + t26, -t25 + t436, -t434 - t437, -t317 * t74 - t6 * t73 + t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t411, t434 - t437, -t25 - t436, t411, -t337 + (-qJD(6) + t203) * t74, t145, t6 * t203 - t55 * t74 + t2, -t203 * t317 - t55 * t73 - t1, 0, 0;];
tauc_reg  = t5;
