% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR13_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR13_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR13_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR13_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR13_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR13_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:29:42
% EndTime: 2019-03-09 11:30:16
% DurationCPUTime: 19.54s
% Computational Cost: add. (18727->884), mult. (45118->1151), div. (0->0), fcn. (34644->14), ass. (0->386)
t338 = cos(pkin(6));
t345 = cos(qJ(2));
t537 = pkin(1) * t345;
t463 = t338 * t537;
t305 = qJD(1) * t463;
t547 = qJD(3) - t305;
t477 = qJD(1) * t338;
t311 = qJD(2) + t477;
t344 = cos(qJ(4));
t341 = sin(qJ(4));
t336 = sin(pkin(6));
t478 = qJD(1) * t336;
t452 = t345 * t478;
t420 = t341 * t452;
t220 = t311 * t344 - t420;
t342 = sin(qJ(2));
t476 = qJD(1) * t342;
t453 = t336 * t476;
t288 = qJD(4) + t453;
t335 = sin(pkin(11));
t337 = cos(pkin(11));
t151 = t220 * t337 + t288 * t335;
t340 = sin(qJ(6));
t539 = cos(qJ(6));
t205 = t335 * t220;
t550 = t288 * t337 - t205;
t383 = t539 * t550;
t76 = -t151 * t340 + t383;
t565 = t76 ^ 2;
t218 = t311 * t341 + t344 * t452;
t214 = qJD(6) + t218;
t564 = t214 * t76;
t404 = pkin(4) * t344 + qJ(5) * t341;
t540 = pkin(3) + pkin(8);
t563 = -(-t404 - t540) * t453 + qJD(4) * t404 - qJD(5) * t344 + t547;
t77 = t151 * t539 + t340 * t550;
t562 = t77 ^ 2;
t208 = t335 * t341 * t453 - t337 * t452;
t473 = qJD(4) * t341;
t561 = t335 * t473 + t208;
t347 = -pkin(2) - pkin(9);
t471 = qJD(4) * t347;
t446 = t344 * t471;
t307 = pkin(2) * t453;
t517 = qJ(3) * t345;
t402 = pkin(9) * t342 - t517;
t200 = t402 * t478 + t307;
t538 = pkin(1) * t342;
t322 = t338 * t538;
t499 = t336 * t345;
t481 = pkin(8) * t499 + t322;
t239 = t481 * qJD(1);
t202 = pkin(3) * t452 + t239;
t108 = t344 * t200 + t341 * t202;
t97 = qJ(5) * t452 + t108;
t519 = (t446 - t97) * t337 + t563 * t335;
t560 = t335 * t97 + t337 * t563;
t467 = qJD(1) * qJD(2);
t442 = t342 * t467;
t416 = t336 * t442;
t464 = qJDD(1) * t345;
t556 = -t336 * t464 + t416;
t495 = t341 * t342;
t502 = t335 * t345;
t209 = (t337 * t495 + t502) * t478;
t451 = t344 * t476;
t421 = t336 * t451;
t437 = -t335 * t347 + pkin(5);
t559 = pkin(5) * t421 + pkin(10) * t209 + (pkin(10) * t337 * t341 + t344 * t437) * qJD(4) + t560;
t558 = pkin(10) * t561 + t519;
t343 = sin(qJ(1));
t491 = t343 * t345;
t346 = cos(qJ(1));
t492 = t342 * t346;
t253 = t338 * t492 + t491;
t490 = t345 * t346;
t493 = t342 * t343;
t255 = -t338 * t493 + t490;
t411 = -g(1) * t255 - g(2) * t253;
t501 = t336 * t342;
t462 = g(3) * t501;
t361 = -t411 + t462;
t331 = t336 ^ 2;
t555 = 0.2e1 * t331;
t139 = t311 * t347 + t453 * t540 + t547;
t439 = -qJ(3) * t342 - pkin(1);
t369 = t345 * t347 + t439;
t168 = t369 * t478;
t472 = qJD(4) * t344;
t466 = qJDD(1) * t338;
t309 = qJDD(2) + t466;
t441 = t345 * t467;
t465 = qJDD(1) * t342;
t370 = t441 + t465;
t359 = t370 * t336;
t313 = pkin(8) * t501;
t461 = pkin(1) * qJD(2) * t338;
t424 = qJD(1) * t461;
t460 = pkin(1) * t466;
t422 = t336 * pkin(8) * t441 + qJDD(1) * t313 + t342 * t424 - t345 * t460;
t395 = qJDD(3) + t422;
t87 = pkin(3) * t359 + t309 * t347 + t395;
t283 = pkin(2) * t416;
t474 = qJD(3) * t342;
t354 = qJD(2) * t402 - t474;
t96 = t283 + (qJD(1) * t354 + qJDD(1) * t369) * t336;
t29 = t139 * t472 - t168 * t473 + t341 * t87 + t344 * t96;
t80 = t344 * t139 - t341 * t168;
t554 = -t288 * t80 + t29;
t382 = -t340 * t335 + t337 * t539;
t234 = t382 * t341;
t110 = qJD(4) * t218 - t344 * t309 - t341 * t556;
t106 = t335 * t110;
t228 = qJDD(4) + t359;
t430 = t228 * t337 + t106;
t553 = t430 * t344;
t376 = t218 * t288;
t552 = t110 - t376;
t111 = -qJD(4) * t420 + t309 * t341 + (qJD(4) * t311 - t556) * t344;
t512 = t220 * t288;
t551 = -t111 + t512;
t252 = -t338 * t490 + t493;
t254 = t338 * t491 + t492;
t549 = g(1) * t254 + g(2) * t252 - g(3) * t499;
t444 = qJD(6) * t539;
t470 = qJD(6) * t340;
t548 = -t335 * t470 + t337 * t444;
t241 = t481 * qJD(2);
t391 = -pkin(2) * t345 + t439;
t210 = t391 * t478;
t546 = t210 * t453 + qJDD(3);
t530 = t228 * pkin(4);
t545 = qJDD(5) - t530;
t293 = t311 * qJ(3);
t160 = t293 + t202;
t544 = t160 * t288 + t228 * t347;
t332 = pkin(11) + qJ(6);
t327 = sin(t332);
t328 = cos(t332);
t498 = t336 * t346;
t386 = -t252 * t341 + t344 * t498;
t543 = t253 * t328 + t327 * t386;
t542 = -t253 * t327 + t328 * t386;
t81 = t139 * t341 + t168 * t344;
t67 = qJ(5) * t288 + t81;
t83 = pkin(4) * t218 - qJ(5) * t220 + t160;
t38 = -t335 * t67 + t337 * t83;
t28 = pkin(5) * t218 - pkin(10) * t151 + t38;
t39 = t335 * t83 + t337 * t67;
t31 = pkin(10) * t550 + t39;
t387 = -t28 * t539 + t340 * t31;
t394 = qJ(5) * t228 + qJD(5) * t288;
t22 = t29 + t394;
t290 = t309 * qJ(3);
t292 = t311 * qJD(3);
t423 = pkin(8) * t556 - t342 * t460 - t345 * t424;
t114 = -t290 - t292 + t423;
t90 = -pkin(3) * t556 - t114;
t34 = pkin(4) * t111 + qJ(5) * t110 - qJD(5) * t220 + t90;
t8 = -t22 * t335 + t337 * t34;
t82 = -t110 * t337 + t228 * t335;
t6 = pkin(5) * t111 - pkin(10) * t82 + t8;
t9 = t337 * t22 + t335 * t34;
t7 = pkin(10) * t430 + t9;
t1 = -t387 * qJD(6) + t340 * t6 + t539 * t7;
t541 = t218 ^ 2;
t536 = pkin(2) * t309;
t535 = pkin(5) * t335;
t534 = pkin(9) * t252;
t533 = pkin(9) * t254;
t529 = t77 * t76;
t528 = pkin(10) + qJ(5);
t403 = pkin(4) * t341 - qJ(5) * t344;
t268 = qJ(3) + t403;
t259 = t337 * t268;
t496 = t337 * t344;
t161 = -pkin(10) * t496 + t341 * t437 + t259;
t494 = t341 * t347;
t212 = t335 * t268 + t337 * t494;
t176 = -pkin(10) * t335 * t344 + t212;
t91 = t161 * t539 - t340 * t176;
t527 = qJD(6) * t91 + t340 * t559 + t558 * t539;
t92 = t340 * t161 + t176 * t539;
t526 = -qJD(6) * t92 - t558 * t340 + t539 * t559;
t475 = qJD(2) * t345;
t450 = qJD(2) * t501;
t304 = pkin(2) * t450;
t163 = t336 * t354 + t304;
t455 = -pkin(2) - t537;
t175 = pkin(3) * t501 + t313 + (-pkin(9) + t455) * t338;
t482 = pkin(2) * t499 + qJ(3) * t501;
t224 = -pkin(1) * t336 - t482;
t316 = pkin(9) * t499;
t198 = t224 - t316;
t203 = (t499 * t540 + t322) * qJD(2);
t56 = t344 * t163 + t175 * t472 - t198 * t473 + t341 * t203;
t49 = (qJ(5) * t475 + qJD(5) * t342) * t336 + t56;
t306 = t345 * t461;
t326 = t338 * qJD(3);
t425 = t540 * t501;
t174 = -qJD(2) * t425 + t306 + t326;
t250 = t338 * t341 + t344 * t499;
t185 = qJD(4) * t250 - t341 * t450;
t458 = t341 * t499;
t186 = -qJD(4) * t458 + t338 * t472 - t344 * t450;
t251 = t338 * t344 - t458;
t63 = pkin(4) * t186 + qJ(5) * t185 - qJD(5) * t251 + t174;
t24 = t335 * t63 + t337 * t49;
t524 = t288 * t81;
t523 = t82 * t335;
t280 = t528 * t335;
t281 = t528 * t337;
t195 = -t280 * t539 - t340 * t281;
t513 = t218 * t337;
t135 = pkin(4) * t220 + qJ(5) * t218;
t53 = t337 * t135 - t335 * t80;
t37 = pkin(5) * t220 + pkin(10) * t513 + t53;
t514 = t218 * t335;
t54 = t335 * t135 + t337 * t80;
t43 = pkin(10) * t514 + t54;
t522 = qJD(5) * t382 + qJD(6) * t195 - t340 * t37 - t43 * t539;
t196 = -t340 * t280 + t281 * t539;
t262 = t335 * t539 + t340 * t337;
t521 = -qJD(5) * t262 - qJD(6) * t196 + t340 * t43 - t37 * t539;
t520 = -t335 * t446 + t560;
t436 = -t347 + t535;
t107 = -t341 * t200 + t202 * t344;
t98 = -pkin(4) * t452 - t107;
t518 = -pkin(5) * t208 - t436 * t473 - t98;
t223 = -t338 * qJ(3) - t481;
t197 = pkin(3) * t499 - t223;
t105 = pkin(4) * t250 - qJ(5) * t251 + t197;
t104 = t341 * t175 + t344 * t198;
t93 = qJ(5) * t501 + t104;
t52 = t335 * t105 + t337 * t93;
t516 = t151 * t335;
t515 = t218 * t220;
t511 = t228 * t341;
t381 = t288 * t341;
t379 = t288 * t344;
t506 = t327 * t341;
t505 = t328 * t341;
t504 = t331 * qJD(1) ^ 2;
t503 = t335 * t111;
t500 = t336 * t343;
t497 = t337 * t111;
t66 = -t288 * pkin(4) + qJD(5) - t80;
t489 = -qJD(5) + t66;
t206 = t311 * t337 + t335 * t421;
t207 = t311 * t335 - t337 * t421;
t488 = qJD(6) * t234 + t206 * t539 - t340 * t207 + t262 * t472;
t232 = t262 * t341;
t235 = t382 * t344;
t487 = -qJD(4) * t235 + qJD(6) * t232 + t340 * t206 + t207 * t539;
t249 = t262 * qJD(6);
t486 = -t262 * t218 - t249;
t485 = -t382 * t218 - t548;
t418 = t539 * t473;
t447 = t340 * t473;
t484 = t340 * t208 - t209 * t539 - t249 * t344 + t335 * t447 - t337 * t418;
t483 = -t539 * t208 - t209 * t340 - t335 * t418 - t337 * t447 + t344 * t548;
t480 = t346 * pkin(1) + pkin(8) * t500;
t333 = t342 ^ 2;
t334 = t345 ^ 2;
t479 = t333 - t334;
t469 = qJD(1) * t425 + t547;
t238 = pkin(8) * t453 - t305;
t468 = qJD(3) + t238;
t459 = t345 * t504;
t457 = t361 * t344;
t456 = t316 + t482;
t454 = pkin(9) + t535;
t449 = t336 * t475;
t443 = pkin(1) * t555;
t438 = -pkin(1) * t343 + pkin(8) * t498;
t242 = t252 * pkin(2);
t435 = -t242 - t534;
t244 = t254 * pkin(2);
t434 = -t244 - t533;
t23 = -t335 * t49 + t337 * t63;
t433 = t340 * t82 - t539 * t430;
t51 = t337 * t105 - t335 * t93;
t432 = qJ(3) * t253 - t242;
t431 = qJ(3) * t255 - t244;
t103 = t175 * t344 - t341 * t198;
t428 = t139 * t473 + t168 * t472 + t341 * t96 - t344 * t87;
t427 = qJD(1) * (qJD(2) - t311);
t426 = t309 + t466;
t419 = g(3) * t456;
t415 = t342 * t441;
t187 = -t254 * t344 + t341 * t500;
t385 = t252 * t344 + t341 * t498;
t414 = g(1) * t385 + g(2) * t187;
t412 = -g(1) * t252 + g(2) * t254;
t410 = g(1) * t253 - g(2) * t255;
t409 = g(1) * t346 + g(2) * t343;
t408 = -t8 * t335 + t9 * t337;
t406 = -t337 * t473 - t209;
t405 = t430 * pkin(5);
t401 = -t335 * t38 + t337 * t39;
t400 = t337 * t550;
t399 = t430 * t337;
t398 = t111 * t250 + t186 * t218;
t325 = pkin(5) * t337 + pkin(4);
t397 = t325 * t341 - t344 * t528;
t396 = t550 * qJD(4);
t393 = qJD(2) * (-qJD(1) * t224 - t210);
t392 = qJD(2) * (t311 + t477);
t240 = -pkin(8) * t450 + t306;
t389 = t255 * pkin(2) + qJ(3) * t254 + t480;
t57 = -t341 * t163 - t175 * t473 - t198 * t472 + t203 * t344;
t184 = t251 * t337 + t335 * t501;
t35 = pkin(5) * t250 - pkin(10) * t184 + t51;
t183 = t251 * t335 - t337 * t501;
t40 = -pkin(10) * t183 + t52;
t12 = -t340 * t40 + t35 * t539;
t11 = t340 * t28 + t31 * t539;
t13 = t340 * t35 + t40 * t539;
t100 = -t340 * t183 + t184 * t539;
t377 = t288 * t151;
t375 = -qJ(3) * t475 - t474;
t26 = -qJD(6) * t383 + t151 * t470 - t340 * t430 - t539 * t82;
t121 = t283 + (qJD(1) * t375 + qJDD(1) * t391) * t336;
t204 = t336 * t375 + t304;
t372 = qJD(1) * t204 + qJDD(1) * t224 + t121;
t371 = pkin(3) * t500 + t389;
t95 = -pkin(4) * t501 - t103;
t368 = g(1) * t187 - g(2) * t385 + g(3) * t250;
t188 = t254 * t341 + t344 * t500;
t367 = -g(1) * t188 + g(2) * t386 - g(3) * t251;
t365 = -t253 * pkin(2) - qJ(3) * t252 + t438;
t364 = t241 * t311 - t410;
t25 = t428 + t545;
t363 = -t25 + t368;
t360 = pkin(3) * t498 + t365;
t358 = t400 - t516;
t357 = t411 - t423;
t356 = pkin(9) * t255 + t371;
t355 = t549 - t422;
t170 = (t345 * t427 + t465) * t336;
t50 = -pkin(4) * t449 - t57;
t353 = -pkin(9) * t253 + t360;
t352 = t111 * t341 + t344 * t376;
t351 = t368 - t428;
t2 = -qJD(6) * t11 - t340 * t7 + t539 * t6;
t350 = t239 * t311 + t355;
t349 = -t351 + t545;
t27 = qJD(6) * t77 + t433;
t274 = t342 * t459;
t266 = t309 * t338;
t260 = t436 * t344;
t256 = -t313 + t463;
t247 = t479 * t504;
t237 = -qJ(3) * t452 + t307;
t233 = t262 * t344;
t227 = t338 * t455 + t313;
t222 = (qJDD(1) * t334 - 0.2e1 * t415) * t331;
t221 = (qJDD(1) * t333 + 0.2e1 * t415) * t331;
t215 = t344 * t228;
t213 = -t240 - t326;
t211 = -t335 * t494 + t259;
t199 = -t293 - t239;
t193 = -pkin(2) * t311 + t468;
t171 = (t342 * t464 - t467 * t479) * t555;
t169 = (t342 * t427 - t464) * t336;
t141 = -t185 * t337 + t335 * t449;
t140 = -t185 * t335 - t337 * t449;
t131 = t395 - t536;
t125 = (t342 * t426 + t345 * t392) * t336;
t124 = (t342 * t392 - t345 * t426) * t336;
t120 = t188 * t328 + t255 * t327;
t119 = -t188 * t327 + t255 * t328;
t109 = qJDD(6) + t111;
t99 = t183 * t539 + t184 * t340;
t64 = pkin(5) * t183 + t95;
t62 = -pkin(5) * t514 + t81;
t55 = -pkin(5) * t550 + t66;
t45 = qJD(6) * t100 + t140 * t539 + t340 * t141;
t44 = t340 * t140 - t141 * t539 + t183 * t444 + t184 * t470;
t36 = pkin(5) * t140 + t50;
t20 = -pkin(10) * t140 + t24;
t17 = pkin(5) * t186 - pkin(10) * t141 + t23;
t16 = -t405 + t25;
t4 = -qJD(6) * t13 + t17 * t539 - t340 * t20;
t3 = qJD(6) * t12 + t340 * t17 + t20 * t539;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t343 - g(2) * t346, t409, 0, 0, t221, t171, t125, t222, -t124, t266, -t422 * t338 + t256 * t309 + (-t442 + t464) * t443 - t364, -t240 * t311 - t309 * t481 + t338 * t423 - t370 * t443 + t412 ((qJD(2) * t238 + qJDD(1) * t481 - t423 + (-qJD(2) * t256 + t240) * qJD(1)) * t345 + (-qJD(2) * t239 - qJDD(1) * t256 + t422) * t342 - t409) * t336, t331 * qJDD(1) * pkin(1) ^ 2 - g(1) * t438 - g(2) * t480 + t238 * t241 + t239 * t240 - t256 * t422 - t423 * t481, t266, -t125, t124, t221, t171, t222 ((qJD(2) * t193 - qJDD(1) * t223 - t114 + (qJD(2) * t227 - t213) * qJD(1)) * t345 + (qJD(2) * t199 + qJDD(1) * t227 + t131 + (qJD(2) * t223 + t241) * qJD(1)) * t342 - t409) * t336, t131 * t338 + t227 * t309 + (t342 * t393 + t345 * t372) * t336 + t364, -t114 * t338 - t213 * t311 - t223 * t309 + (-t342 * t372 + t345 * t393) * t336 - t412, -g(1) * t365 - g(2) * t389 + t114 * t223 + t121 * t224 + t131 * t227 + t193 * t241 + t199 * t213 + t210 * t204, -t110 * t251 - t185 * t220, t110 * t250 - t111 * t251 + t185 * t218 - t186 * t220, -t185 * t288 + t228 * t251 + (-t110 * t342 + t220 * t475) * t336, t398, -t186 * t288 - t228 * t250 + (-t111 * t342 - t218 * t475) * t336 (t228 * t342 + t288 * t475) * t336, -g(1) * t386 - g(2) * t188 + t103 * t228 + t111 * t197 + t160 * t186 + t174 * t218 + t250 * t90 + t288 * t57 + (-t342 * t428 + t475 * t80) * t336, -t104 * t228 - t110 * t197 - t160 * t185 + t174 * t220 + t251 * t90 - t288 * t56 + (-t29 * t342 - t475 * t81) * t336 + t414, t103 * t110 - t104 * t111 + t185 * t80 - t186 * t81 - t218 * t56 - t220 * t57 - t250 * t29 + t251 * t428 + t410, -g(1) * t353 - g(2) * t356 - t103 * t428 + t29 * t104 + t160 * t174 + t90 * t197 + t81 * t56 + t80 * t57, t141 * t151 + t184 * t82, -t151 * t140 + t141 * t550 - t82 * t183 + t184 * t430, t111 * t184 + t141 * t218 + t151 * t186 + t250 * t82, -t140 * t550 - t183 * t430, -t183 * t111 - t140 * t218 + t186 * t550 + t250 * t430, t398, t23 * t218 + t51 * t111 + t8 * t250 + t38 * t186 - t50 * t550 - t95 * t430 + t25 * t183 + t66 * t140 - g(1) * (-t253 * t335 + t337 * t386) - g(2) * (t188 * t337 + t255 * t335) -t24 * t218 - t52 * t111 - t9 * t250 - t39 * t186 + t50 * t151 + t95 * t82 + t25 * t184 + t66 * t141 - g(1) * (-t253 * t337 - t335 * t386) - g(2) * (-t188 * t335 + t255 * t337) -t39 * t140 - t38 * t141 - t23 * t151 - t9 * t183 - t8 * t184 + t24 * t550 + t430 * t52 - t51 * t82 - t414, t9 * t52 + t39 * t24 + t8 * t51 + t38 * t23 + t25 * t95 + t66 * t50 - g(1) * (pkin(4) * t386 + qJ(5) * t385 + t353) - g(2) * (pkin(4) * t188 + qJ(5) * t187 + t356) -t100 * t26 - t44 * t77, -t100 * t27 + t26 * t99 - t44 * t76 - t45 * t77, t100 * t109 + t186 * t77 - t214 * t44 - t250 * t26, t27 * t99 - t45 * t76, -t109 * t99 + t186 * t76 - t214 * t45 - t250 * t27, t109 * t250 + t186 * t214, -g(1) * t542 - g(2) * t120 + t12 * t109 + t16 * t99 - t186 * t387 + t2 * t250 + t4 * t214 + t64 * t27 - t36 * t76 + t55 * t45, g(1) * t543 - g(2) * t119 - t1 * t250 + t16 * t100 - t13 * t109 - t11 * t186 - t3 * t214 - t64 * t26 + t36 * t77 - t55 * t44, -t1 * t99 - t100 * t2 - t11 * t45 + t12 * t26 - t13 * t27 + t3 * t76 - t387 * t44 - t4 * t77 - t414, t1 * t13 + t11 * t3 + t2 * t12 - t387 * t4 + t16 * t64 + t55 * t36 - g(1) * (-t253 * t454 + t325 * t386 + t385 * t528 + t360) - g(2) * (t187 * t528 + t188 * t325 + t255 * t454 + t371); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, t247, t170, t274, -t169, t309, t504 * t538 + t350, pkin(1) * t459 - t238 * t311 - t357 + t462, 0, 0, t309, -t170, t169, -t274, t247, t274 ((-pkin(2) * t342 + t517) * qJDD(1) + ((-qJ(3) * qJD(2) - t199 - t239) * t342 + (-pkin(2) * qJD(2) - t193 + t468) * t345) * qJD(1)) * t336, -t237 * t452 - t350 - 0.2e1 * t536 + t546, 0.2e1 * t290 + t292 + t468 * t311 + (-g(3) * t342 + (t210 * t345 + t237 * t342) * qJD(1)) * t336 + t357, -t131 * pkin(2) - g(1) * t431 - g(2) * t432 - g(3) * t482 - t114 * qJ(3) - t193 * t239 - t199 * t468 - t210 * t237, -t110 * t344 - t220 * t381 (-t111 - t512) * t344 + (t110 + t376) * t341, -t288 * t473 + t215 + (-t220 * t345 - t288 * t495) * t478, t352, -t288 * t472 - t511 + (t218 * t345 - t342 * t379) * t478, -t288 * t452, -t80 * t452 + qJ(3) * t111 - t107 * t288 + t469 * t218 + t544 * t344 + (-t288 * t471 - t361 + t90) * t341, t81 * t452 - qJ(3) * t110 + t344 * t90 + (t108 - t446) * t288 + t469 * t220 - t544 * t341 - t457, t107 * t220 + t108 * t218 + (-t81 * t453 + t110 * t347 + t428 + (-t218 * t347 - t81) * qJD(4)) * t344 + (t80 * t453 - t111 * t347 - t29 + (t220 * t347 + t80) * qJD(4)) * t341 + t549, t90 * qJ(3) - t81 * t108 - t80 * t107 - g(1) * (t431 - t533) - g(2) * (t432 - t534) - t419 + t469 * t160 + (t29 * t341 - t428 * t344 + (-t341 * t80 + t344 * t81) * qJD(4)) * t347, t151 * t406 + t496 * t82, -t209 * t550 + t151 * t208 + (t399 - t523) * t344 - t358 * t473, t341 * t82 + t406 * t218 + (t377 + t497) * t344, t550 * t208 + (t341 * t396 - t553) * t335, t430 * t341 + t561 * t218 + (t453 * t550 + t396 - t503) * t344, t352, t211 * t111 + t98 * t550 - t66 * t208 + t520 * t218 + t549 * t335 + (t8 - t361 * t337 + (-t66 * t335 - t347 * t550) * qJD(4)) * t341 + (t25 * t335 + t288 * t38 + t347 * t430) * t344, -t212 * t111 - t98 * t151 - t66 * t209 - t519 * t218 + t549 * t337 + (-t9 + (t151 * t347 - t337 * t66) * qJD(4) + t361 * t335) * t341 + (t25 * t337 - t288 * t39 - t347 * t82) * t344, t212 * t430 - t211 * t82 + t39 * t208 + t38 * t209 + (-t335 * t9 - t337 * t8) * t344 - t520 * t151 + (t335 * t39 + t337 * t38) * t473 + t457 + t519 * t550, t9 * t212 + t8 * t211 - t66 * t98 - g(1) * t434 - g(2) * t435 - g(3) * (t403 * t501 + t456) + t519 * t39 + t520 * t38 + (-t25 * t344 + t473 * t66) * t347 + t411 * t268, -t235 * t26 + t484 * t77, t233 * t26 - t235 * t27 - t483 * t77 + t484 * t76, t109 * t235 + t214 * t484 - t26 * t341 + t379 * t77, t233 * t27 - t483 * t76, -t109 * t233 - t214 * t483 - t27 * t341 + t379 * t76, t109 * t341 + t214 * t379, t91 * t109 + t2 * t341 - t387 * t472 + t260 * t27 + t16 * t233 - g(1) * (-t254 * t327 + t255 * t505) - g(2) * (-t252 * t327 + t253 * t505) - t518 * t76 + t483 * t55 + t526 * t214 + (-t387 * t451 - g(3) * (t327 * t345 + t328 * t495)) * t336, -t92 * t109 - t1 * t341 - t11 * t472 - t260 * t26 + t16 * t235 - g(1) * (-t254 * t328 - t255 * t506) - g(2) * (-t252 * t328 - t253 * t506) + t518 * t77 + t484 * t55 - t527 * t214 + (-t11 * t451 - g(3) * (-t327 * t495 + t328 * t345)) * t336, -t1 * t233 - t11 * t483 - t2 * t235 + t26 * t91 - t27 * t92 + t387 * t484 - t526 * t77 + t527 * t76 + t457, t1 * t92 + t2 * t91 + t16 * t260 - g(1) * (-t254 * t535 + t434) - g(2) * (-t252 * t535 + t435) - t419 + t518 * t55 - g(3) * (pkin(5) * t502 + t342 * t397) * t336 + t527 * t11 - t526 * t387 + t411 * (qJ(3) + t397); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t274 + t309, -t311 ^ 2 - t333 * t504, t199 * t311 - t355 - t536 + t546, 0, 0, 0, 0, 0, 0, -t218 * t311 - t288 * t381 + t215, -t220 * t311 - t288 * t379 - t511, t341 * t551 + t344 * t552, -t160 * t311 + (-t428 + t524) * t344 + t554 * t341 - t549, 0, 0, 0, 0, 0, 0, t553 + (-t335 * t472 - t206) * t218 + (-t288 * t550 - t503) * t341, -t344 * t82 + (-t337 * t472 + t207) * t218 + (t377 - t497) * t341, -t207 * t550 + t206 * t151 + (t399 + t523) * t341 + (t400 + t516) * t472, -t206 * t38 - t207 * t39 + (qJD(4) * t401 - t25) * t344 + (t288 * t66 + t408) * t341 - t549, 0, 0, 0, 0, 0, 0, -t109 * t232 - t214 * t488 - t27 * t344 - t381 * t76, -t109 * t234 + t214 * t487 + t26 * t344 + t381 * t77, -t232 * t26 - t234 * t27 - t487 * t76 + t488 * t77, t1 * t234 - t11 * t487 - t16 * t344 - t2 * t232 + t381 * t55 + t387 * t488 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515, t220 ^ 2 - t541, -t552, -t515, t551, t228, -t160 * t220 + t351 + t524, t160 * t218 - t367 - t554, 0, 0, t151 * t513 + t523, t218 * t358 + t335 * t430 + t82 * t337, -t151 * t220 + t337 * t541 + t503, -t514 * t550 + t399, -t220 * t550 - t335 * t541 + t497, -t515, -qJ(5) * t503 + pkin(4) * t106 - t81 * t205 - t38 * t220 + (t335 * t489 - t53) * t218 + (t363 + t524 + t530) * t337, -qJ(5) * t497 - pkin(4) * t82 - t151 * t81 + t220 * t39 + (t337 * t489 + t54) * t218 - t363 * t335, t53 * t151 + t54 * t205 + (qJ(5) * t106 - qJD(5) * t205 - t38 * t218 - t54 * t288 + t337 * t394 + t9) * t337 + (qJ(5) * t82 + qJD(5) * t151 - t218 * t39 - t8) * t335 + t367, -t38 * t53 - t39 * t54 - t66 * t81 + t401 * qJD(5) + t363 * pkin(4) + (t367 + t408) * qJ(5), -t26 * t262 - t485 * t77, -t26 * t382 - t262 * t27 - t485 * t76 + t486 * t77, t109 * t262 - t214 * t485 - t220 * t77, -t27 * t382 + t486 * t76, t109 * t382 + t214 * t486 - t220 * t76, -t214 * t220, t109 * t195 - t16 * t382 + t214 * t521 + t220 * t387 - t27 * t325 + t328 * t368 - t486 * t55 + t62 * t76, -t109 * t196 + t11 * t220 + t16 * t262 - t214 * t522 + t26 * t325 - t327 * t368 - t485 * t55 - t62 * t77, t1 * t382 + t11 * t486 + t195 * t26 - t196 * t27 - t2 * t262 - t387 * t485 - t521 * t77 + t522 * t76 + t367, t1 * t196 + t2 * t195 - t16 * t325 - t55 * t62 - g(1) * (-t187 * t325 + t188 * t528) - g(2) * (t325 * t385 - t386 * t528) - g(3) * (-t250 * t325 + t251 * t528) + t522 * t11 - t521 * t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151 * t218 - t430, t218 * t550 + t82, -t151 ^ 2 - t550 ^ 2, t151 * t38 - t39 * t550 + t349, 0, 0, 0, 0, 0, 0, t214 * t77 + t27, -t26 + t564, -t562 - t565, -t11 * t76 - t387 * t77 + t349 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t562 - t565, -t26 - t564, t529, -t433 + (-qJD(6) + t214) * t77, t109, t11 * t214 - t55 * t77 - g(1) * t119 - g(2) * t543 - g(3) * (-t251 * t327 + t328 * t501) + t2, -t387 * t214 - t55 * t76 + g(1) * t120 - g(2) * t542 - g(3) * (-t251 * t328 - t327 * t501) - t1, 0, 0;];
tau_reg  = t5;
