% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR8_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR8_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR8_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR8_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:44:48
% EndTime: 2019-03-09 22:45:06
% DurationCPUTime: 6.59s
% Computational Cost: add. (7870->533), mult. (19054->693), div. (0->0), fcn. (13448->8), ass. (0->254)
t239 = cos(qJ(3));
t237 = sin(qJ(2));
t240 = cos(qJ(2));
t347 = t239 * t240;
t264 = pkin(3) * t237 - pkin(9) * t347;
t372 = -pkin(9) - pkin(8);
t306 = qJD(3) * t372;
t277 = pkin(2) * t237 - pkin(8) * t240;
t183 = t277 * qJD(1);
t236 = sin(qJ(3));
t329 = qJD(1) * t237;
t302 = t236 * t329;
t332 = pkin(7) * t302 + t183 * t239;
t404 = qJD(1) * t264 - t239 * t306 + t332;
t165 = t236 * t183;
t348 = t237 * t239;
t403 = -t165 - (-pkin(9) * t236 * t240 - pkin(7) * t348) * qJD(1) + t236 * t306;
t234 = sin(qJ(6));
t238 = cos(qJ(6));
t328 = qJD(1) * t240;
t215 = -qJD(3) + t328;
t202 = -qJD(4) + t215;
t228 = pkin(7) * t328;
t197 = qJD(2) * pkin(8) + t228;
t190 = -pkin(2) * t240 - pkin(8) * t237 - pkin(1);
t170 = t190 * qJD(1);
t350 = t236 * t170;
t137 = t239 * t197 + t350;
t323 = qJD(2) * t239;
t177 = -t302 + t323;
t106 = pkin(9) * t177 + t137;
t235 = sin(qJ(4));
t352 = t235 * t106;
t371 = cos(qJ(4));
t136 = t170 * t239 - t197 * t236;
t325 = qJD(2) * t236;
t178 = t239 * t329 + t325;
t105 = -pkin(9) * t178 + t136;
t94 = -pkin(3) * t215 + t105;
t39 = t371 * t94 - t352;
t341 = qJD(5) - t39;
t258 = t177 * t235 + t178 * t371;
t387 = pkin(10) * t258;
t342 = -t341 + t387;
t373 = pkin(4) + pkin(5);
t25 = t202 * t373 - t342;
t188 = t202 * qJD(5);
t313 = qJD(1) * qJD(2);
t220 = t237 * t313;
t210 = qJ(5) * t220;
t299 = t371 * qJD(4);
t318 = qJD(4) * t235;
t253 = t264 * qJD(2);
t186 = t277 * qJD(2);
t171 = qJD(1) * t186;
t285 = pkin(7) * t220;
t335 = t171 * t239 + t236 * t285;
t49 = qJD(1) * t253 - qJD(3) * t106 + t335;
t321 = qJD(3) * t236;
t319 = qJD(3) * t239;
t336 = t170 * t319 + t171 * t236;
t247 = -t197 * t321 - t239 * t285 + t336;
t320 = qJD(3) * t237;
t297 = qJD(1) * t320;
t298 = t240 * t313;
t312 = qJD(2) * qJD(3);
t307 = t239 * t297 + (t298 + t312) * t236;
t62 = -pkin(9) * t307 + t247;
t295 = t106 * t318 - t235 * t49 - t299 * t94 - t371 * t62;
t10 = t210 - t188 - t295;
t304 = t236 * t320;
t322 = qJD(2) * t240;
t252 = t239 * t322 - t304;
t246 = qJD(1) * t252 + t239 * t312;
t58 = qJD(4) * t258 + t235 * t246 + t307 * t371;
t3 = pkin(10) * t58 + t10;
t316 = qJD(6) * t238;
t308 = t373 * t237;
t284 = qJD(2) * t308;
t294 = t106 * t299 + t235 * t62 + t318 * t94 - t371 * t49;
t57 = -t177 * t299 + t178 * t318 + t235 * t307 - t246 * t371;
t6 = pkin(10) * t57 - qJD(1) * t284 + t294;
t311 = t234 * t6 + t238 * t3 + t25 * t316;
t126 = -t177 * t371 + t178 * t235;
t363 = qJD(2) * pkin(2);
t196 = pkin(7) * t329 - t363;
t262 = pkin(3) * t177 - t196;
t250 = qJ(5) * t258 + t262;
t33 = -t126 * t373 + t250;
t391 = -t126 * t238 + t234 * t258;
t386 = t33 * t391;
t402 = t311 - t386;
t74 = t126 * t234 + t238 * t258;
t394 = -t391 ^ 2 + t74 ^ 2;
t296 = -t234 * t57 - t238 * t58;
t15 = qJD(6) * t74 + t296;
t314 = -qJD(6) - t202;
t401 = t314 * t74 + t15;
t189 = t202 * qJ(5);
t399 = pkin(10) * t126;
t101 = t371 * t106;
t40 = t235 * t94 + t101;
t29 = t40 + t399;
t27 = -t189 + t29;
t317 = qJD(6) * t234;
t301 = -t234 * t3 + t238 * t6 - t25 * t317 - t27 * t316;
t392 = t33 * t74 - t301;
t385 = t74 * t391;
t351 = t235 * t236;
t257 = t239 * t371 - t351;
t377 = qJD(3) + qJD(4);
t378 = qJD(3) * t371 + t299;
t338 = -t239 * t378 + t257 * t328 + t351 * t377;
t291 = -t126 * t316 - t234 * t58 + t238 * t57 + t258 * t317;
t376 = t314 * t391 + t291;
t54 = pkin(4) * t126 - t250;
t398 = t126 * t54;
t198 = t372 * t236;
t199 = t372 * t239;
t397 = t198 * t299 + t199 * t318 - t235 * t404 + t371 * t403;
t356 = t126 * qJ(5);
t396 = t126 * t262;
t355 = t258 * t126;
t180 = t235 * t239 + t236 * t371;
t141 = t377 * t180;
t337 = -t180 * t328 + t141;
t280 = -t228 + (-t236 * t328 + t321) * pkin(3);
t303 = t237 * t319;
t305 = t236 * t322;
t395 = t303 + t305;
t374 = t258 ^ 2;
t393 = -t126 ^ 2 + t374;
t32 = -t126 * t202 - t57;
t389 = -0.2e1 * t313;
t388 = pkin(4) * t258;
t365 = qJ(5) * t329 - t397;
t362 = t258 * t54;
t46 = t105 * t371 - t352;
t359 = pkin(3) * t299 + qJD(5) - t46;
t45 = t105 * t235 + t101;
t281 = pkin(3) * t318 - t45;
t147 = t198 * t235 - t199 * t371;
t384 = qJD(4) * t147 + t235 * t403 + t371 * t404;
t383 = t262 * t258;
t380 = t258 * t373;
t379 = qJ(5) * t338 - qJD(5) * t180 + t280;
t232 = t237 ^ 2;
t315 = t232 * qJD(1);
t375 = -t202 * t258 - t58;
t370 = pkin(7) * t236;
t369 = pkin(8) * t215;
t367 = -t337 * t373 - t379;
t366 = pkin(4) * t337 + t379;
t364 = pkin(4) * t329 + t384;
t361 = t234 * t27;
t360 = -t359 + t387;
t266 = -t180 * t234 - t238 * t257;
t358 = qJD(6) * t266 + t234 * t337 - t238 * t338;
t132 = t180 * t238 - t234 * t257;
t357 = qJD(6) * t132 - t234 * t338 - t238 * t337;
t354 = t178 * t215;
t353 = t196 * t236;
t349 = t236 * t237;
t346 = t240 * t215;
t243 = qJD(1) ^ 2;
t345 = t240 * t243;
t242 = qJD(2) ^ 2;
t344 = t242 * t237;
t343 = t242 * t240;
t176 = t239 * t190;
t135 = -pkin(9) * t348 + t176 + (-pkin(3) - t370) * t240;
t217 = pkin(7) * t347;
t331 = t190 * t236 + t217;
t142 = -pkin(9) * t349 + t331;
t339 = t135 * t235 + t142 * t371;
t334 = t186 * t236 + t190 * t319;
t324 = qJD(2) * t237;
t333 = t186 * t239 + t324 * t370;
t187 = pkin(3) * t349 + pkin(7) * t237;
t330 = -t240 ^ 2 + t232;
t146 = -t198 * t371 - t199 * t235;
t327 = qJD(2) * t146;
t326 = qJD(2) * t147;
t150 = pkin(3) * t395 + pkin(7) * t322;
t226 = -pkin(3) * t239 - pkin(2);
t293 = pkin(1) * t389;
t292 = t314 ^ 2;
t290 = t215 + t328;
t289 = -t177 + t323;
t288 = -t178 + t325;
t287 = qJD(3) + t328;
t286 = pkin(4) * t220;
t225 = -pkin(3) * t371 - pkin(4);
t283 = t371 * t322;
t282 = -t281 + t399;
t110 = -pkin(10) * t180 + t146;
t279 = -pkin(10) * t337 - qJD(6) * t110 + t365;
t111 = -pkin(10) * t257 + t147;
t278 = -pkin(10) * t338 - qJD(1) * t308 + qJD(6) * t111 - t384;
t76 = -qJ(5) * t240 + t339;
t159 = t257 * t237;
t275 = qJ(5) * t159 - t187;
t273 = t135 * t371 - t142 * t235;
t272 = -t178 * pkin(3) - t356;
t77 = pkin(4) * t240 - t273;
t50 = pkin(5) * t240 - pkin(10) * t159 + t77;
t158 = t180 * t237;
t59 = pkin(10) * t158 + t76;
t271 = -t234 * t59 + t238 * t50;
t270 = t234 * t50 + t238 * t59;
t269 = qJ(5) * t234 + t238 * t373;
t267 = t158 * t238 - t159 * t234;
t108 = t158 * t234 + t159 * t238;
t218 = -pkin(5) + t225;
t219 = pkin(3) * t235 + qJ(5);
t265 = t218 * t238 - t219 * t234;
t263 = qJ(5) * t180 - t226;
t123 = pkin(3) * t307 + pkin(7) * t298;
t261 = -t27 * t317 + t311;
t260 = -t202 * t39 + t295;
t259 = -t202 * t40 - t294;
t80 = t253 + (-t217 + (pkin(9) * t237 - t190) * t236) * qJD(3) + t333;
t84 = -t395 * pkin(9) + (-t237 * t323 - t240 * t321) * pkin(7) + t334;
t256 = t135 * t318 + t142 * t299 + t235 * t84 - t371 * t80;
t255 = t135 * t299 - t142 * t318 + t235 * t80 + t371 * t84;
t254 = t287 * t325;
t11 = -t286 + t294;
t85 = t141 * t237 + t235 * t305 - t239 * t283;
t251 = -qJ(5) * t85 + qJD(5) * t159 - t150;
t18 = qJ(5) * t324 - qJD(5) * t240 + t255;
t248 = -t57 * qJ(5) + qJD(5) * t258 - t123;
t122 = -pkin(4) * t257 - t263;
t102 = t257 * t373 + t263;
t95 = pkin(4) * t158 - t275;
t86 = t236 * t283 - t235 * t304 - t318 * t349 + (t235 * t322 + t237 * t378) * t239;
t79 = t356 + t388;
t78 = -t158 * t373 + t275;
t64 = -t272 + t388;
t42 = -t356 - t380;
t36 = -t189 + t40;
t35 = pkin(4) * t202 + t341;
t34 = t272 - t380;
t24 = pkin(4) * t86 - t251;
t21 = qJD(6) * t108 - t234 * t85 - t238 * t86;
t20 = qJD(6) * t267 + t234 * t86 - t238 * t85;
t19 = -pkin(4) * t324 + t256;
t17 = -t373 * t86 + t251;
t16 = t58 * pkin(4) - t248;
t13 = pkin(10) * t86 + t18;
t12 = pkin(10) * t85 + t256 - t284;
t9 = t234 * t25 + t238 * t27;
t8 = t238 * t25 - t361;
t7 = -t373 * t58 + t248;
t1 = [0, 0, 0, 0.2e1 * t240 * t220, t330 * t389, t343, -t344, 0, -pkin(7) * t343 + t237 * t293, pkin(7) * t344 + t240 * t293, t178 * t252 + t246 * t348 (t177 * t239 - t178 * t236) * t322 + ((-t177 + t302) * t321 + (-t178 * qJD(3) - t254 - t307) * t239) * t237, t290 * t304 + (t178 * t237 + (t315 + (-t215 - t287) * t240) * t239) * qJD(2), t215 * t303 + t307 * t240 + (t177 * t237 + (-t315 + t346) * t236) * qJD(2), -t290 * t324 -(-t190 * t321 + t333) * t215 + (pkin(7) * t307 + t196 * t319 + (qJD(1) * t176 + t136) * qJD(2)) * t237 + ((-pkin(7) * t177 + t353) * qJD(2) + (t350 + (pkin(7) * t215 + t197) * t239) * qJD(3) - t335) * t240, t334 * t215 + t336 * t240 + (-t196 * t237 - t197 * t240 + (-t346 - t315) * pkin(7)) * t321 + ((pkin(7) * t178 + t196 * t239) * t240 + (-t331 * qJD(1) - t137 + (-t215 + t287) * pkin(7) * t239) * t237) * qJD(2), -t159 * t57 - t258 * t85, t126 * t85 + t158 * t57 - t159 * t58 - t258 * t86, t202 * t85 + t240 * t57 + (qJD(1) * t159 + t258) * t324, t202 * t86 + t240 * t58 + (-qJD(1) * t158 - t126) * t324 (-t202 - t328) * t324, t256 * t202 + t294 * t240 + t150 * t126 + t187 * t58 + t123 * t158 - t262 * t86 + (qJD(1) * t273 + t39) * t324, t255 * t202 - t295 * t240 + t150 * t258 - t187 * t57 + t123 * t159 + t262 * t85 + (-qJD(1) * t339 - t40) * t324, t11 * t240 + t126 * t24 + t158 * t16 + t19 * t202 + t54 * t86 + t58 * t95 + (-qJD(1) * t77 - t35) * t324, -t10 * t158 + t11 * t159 - t126 * t18 + t19 * t258 - t35 * t85 - t36 * t86 - t57 * t77 - t58 * t76, -t10 * t240 - t258 * t24 - t159 * t16 - t18 * t202 + t54 * t85 + t57 * t95 + (qJD(1) * t76 + t36) * t324, t10 * t76 + t11 * t77 + t16 * t95 + t18 * t36 + t19 * t35 + t24 * t54, -t108 * t291 + t20 * t74, -t108 * t15 - t20 * t391 - t21 * t74 - t267 * t291, -t291 * t240 - t314 * t20 + (-qJD(1) * t108 - t74) * t324, -t15 * t240 + t314 * t21 + (-qJD(1) * t267 + t391) * t324 (t314 - t328) * t324 -(-qJD(6) * t270 + t238 * t12 - t234 * t13) * t314 + t301 * t240 + t17 * t391 + t78 * t15 - t7 * t267 + t33 * t21 + (-qJD(1) * t271 - t8) * t324 (qJD(6) * t271 + t234 * t12 + t238 * t13) * t314 - t261 * t240 + t17 * t74 - t78 * t291 + t7 * t108 + t33 * t20 + (qJD(1) * t270 + t9) * t324; 0, 0, 0, -t237 * t345, t330 * t243, 0, 0, 0, t243 * pkin(1) * t237, pkin(1) * t345, -t236 ^ 2 * t297 + (t254 - t354) * t239 (-t307 + t354) * t236 + ((t177 + t323) * qJD(3) + (t240 * t289 - t304) * qJD(1)) * t239, -t215 * t319 + (t237 * t288 + t239 * t346) * qJD(1), t215 * t321 + (-t236 * t346 + t237 * t289) * qJD(1), t215 * t329, -pkin(2) * t307 + t332 * t215 + (t239 * t369 + t353) * qJD(3) + ((-pkin(8) * t325 - t136) * t237 + (-pkin(7) * t289 - t353) * t240) * qJD(1), -t165 * t215 + (-t236 * t369 + (t196 - t363) * t239) * qJD(3) + ((-t196 - t363) * t347 + (pkin(2) * t321 - pkin(8) * t323 + t137) * t237 + (t215 * t348 + t240 * t288) * pkin(7)) * qJD(1), -t57 * t180 - t258 * t338, t126 * t338 - t180 * t58 - t257 * t57 - t258 * t337, t338 * t202 + (qJD(2) * t180 - t258) * t329, t337 * t202 + (qJD(2) * t257 + t126) * t329, t202 * t329, -t123 * t257 + t226 * t58 + t384 * t202 - t337 * t262 + t280 * t126 + (-t39 - t327) * t329, t123 * t180 - t226 * t57 + t397 * t202 + t338 * t262 + t280 * t258 + (t40 - t326) * t329, t122 * t58 - t16 * t257 + t337 * t54 + t364 * t202 + t366 * t126 + (t35 - t327) * t329, t10 * t257 + t11 * t180 + t126 * t365 - t146 * t57 - t147 * t58 + t258 * t364 - t337 * t36 - t338 * t35, t122 * t57 - t16 * t180 + t338 * t54 + t365 * t202 - t366 * t258 + (-t36 + t326) * t329, t10 * t147 + t11 * t146 + t122 * t16 + t35 * t364 - t36 * t365 + t366 * t54, -t132 * t291 + t358 * t74, -t132 * t15 - t266 * t291 - t357 * t74 - t358 * t391, -t358 * t314 + (-qJD(2) * t132 + t74) * t329, t357 * t314 + (-qJD(2) * t266 - t391) * t329, -t314 * t329, t102 * t15 - t7 * t266 + t367 * t391 + t357 * t33 - (t234 * t279 - t238 * t278) * t314 + (-(t110 * t238 - t111 * t234) * qJD(2) + t8) * t329, -t102 * t291 + t7 * t132 + t367 * t74 + t358 * t33 - (t234 * t278 + t238 * t279) * t314 + ((t110 * t234 + t111 * t238) * qJD(2) - t9) * t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178 * t177, -t177 ^ 2 + t178 ^ 2, t177 * t215 + t246, -t307 - t354, t220, -t178 * t196 + t335 + (-qJD(3) - t215) * t137, -t136 * t215 - t177 * t196 - t247, t355, t393, t32, t375, t220, t383 - t45 * t202 + (-t126 * t178 + t202 * t318 + t220 * t371) * pkin(3) - t294, -t396 - t46 * t202 + (-t178 * t258 + t202 * t299 - t220 * t235) * pkin(3) + t295, -t362 - t126 * t64 + t281 * t202 + (pkin(4) - t225) * t220 - t294, -t219 * t58 - t225 * t57 + (t281 + t36) * t258 + (-t359 + t35) * t126, -t202 * t359 + t219 * t220 + t258 * t64 + t10 - t398, t10 * t219 + t11 * t225 + t281 * t35 + t359 * t36 - t54 * t64, -t385, -t394, t376, t401, t220, -t265 * t220 - t34 * t391 - ((-qJD(6) * t219 - t282) * t238 + (-qJD(6) * t218 + t360) * t234) * t314 + t392 (t218 * t234 + t219 * t238) * t220 - t34 * t74 - (t234 * t282 + t238 * t360) * t314 + (t265 * t314 - t361) * qJD(6) + t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t393, t32, t375, t220, t259 + t383, t260 - t396, -t126 * t79 + t259 + 0.2e1 * t286 - t362, pkin(4) * t57 - qJ(5) * t58 + (t36 - t40) * t258 + (t35 - t341) * t126, t258 * t79 - 0.2e1 * t188 + 0.2e1 * t210 - t260 - t398, -pkin(4) * t11 + qJ(5) * t10 + t341 * t36 - t35 * t40 - t54 * t79, -t385, -t394, t376, t401, t220, t269 * t220 - t42 * t391 - ((-qJ(5) * qJD(6) - t29) * t238 + (qJD(6) * t373 + t342) * t234) * t314 + t392 (qJ(5) * t238 - t234 * t373) * t220 - t42 * t74 - (t234 * t29 + t238 * t342) * t314 + (-t269 * t314 - t361) * qJD(6) + t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220 + t355, t32, -t202 ^ 2 - t374, t202 * t36 + t11 + t362, 0, 0, 0, 0, 0, -t220 * t238 - t234 * t292 - t258 * t391, t220 * t234 - t238 * t292 - t258 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t394, -t376, -t296 + (-qJD(6) - t314) * t74, -t220, -t314 * t9 - t392, -t314 * t8 - t261 + t386;];
tauc_reg  = t1;
