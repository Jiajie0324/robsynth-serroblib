% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR8_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR8_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR8_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR8_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR8_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR8_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:44:57
% EndTime: 2019-03-09 22:45:27
% DurationCPUTime: 17.09s
% Computational Cost: add. (19211->860), mult. (41784->1050), div. (0->0), fcn. (29434->12), ass. (0->395)
t349 = sin(qJ(3));
t350 = sin(qJ(2));
t499 = qJD(1) * t350;
t460 = t349 * t499;
t353 = cos(qJ(3));
t495 = qJD(2) * t353;
t259 = -t460 + t495;
t466 = t353 * t499;
t497 = qJD(2) * t349;
t260 = t466 + t497;
t348 = sin(qJ(4));
t577 = cos(qJ(4));
t174 = -t577 * t259 + t260 * t348;
t347 = sin(qJ(6));
t352 = cos(qJ(6));
t397 = t348 * t259 + t260 * t577;
t105 = t174 * t347 + t352 * t397;
t354 = cos(qJ(2));
t346 = qJ(3) + qJ(4);
t336 = sin(t346);
t355 = cos(qJ(1));
t508 = t355 * t336;
t337 = cos(t346);
t351 = sin(qJ(1));
t515 = t351 * t337;
t223 = t354 * t508 - t515;
t509 = t354 * t355;
t224 = t336 * t351 + t337 * t509;
t148 = t223 * t352 - t224 * t347;
t432 = pkin(2) * t354 + pkin(8) * t350;
t277 = -pkin(1) - t432;
t252 = t277 * qJD(1);
t498 = qJD(1) * t354;
t333 = pkin(7) * t498;
t284 = qJD(2) * pkin(8) + t333;
t187 = t353 * t252 - t284 * t349;
t142 = -pkin(9) * t260 + t187;
t313 = -qJD(3) + t498;
t129 = -pkin(3) * t313 + t142;
t188 = t252 * t349 + t284 * t353;
t143 = pkin(9) * t259 + t188;
t456 = t577 * qJD(4);
t490 = qJD(4) * t348;
t431 = pkin(2) * t350 - pkin(8) * t354;
t268 = t431 * qJD(2);
t193 = qJD(1) * t268 + qJDD(1) * t277;
t180 = t353 * t193;
t335 = t354 * qJDD(1);
t483 = qJD(1) * qJD(2);
t589 = -t350 * t483 + t335;
t256 = qJDD(3) - t589;
t492 = qJD(3) * t350;
t453 = qJD(1) * t492;
t291 = t349 * t453;
t454 = t354 * t483;
t480 = t350 * qJDD(1);
t392 = -t454 - t480;
t482 = qJD(2) * qJD(3);
t375 = -t392 + t482;
t233 = t589 * pkin(7) + qJDD(2) * pkin(8);
t444 = -qJD(3) * t252 - t233;
t56 = t256 * pkin(3) + t291 * pkin(9) + t180 + (-pkin(9) * qJDD(2) + t444) * t349 + (-pkin(9) * t375 - qJD(3) * t284) * t353;
t308 = t349 * t480;
t440 = t353 * t453 + t308 + (t454 + t482) * t349;
t391 = t353 * qJDD(2) - t440;
t491 = qJD(3) * t353;
t493 = qJD(3) * t349;
t88 = t349 * t193 + t353 * t233 + t252 * t491 - t284 * t493;
t63 = pkin(9) * t391 + t88;
t446 = -t129 * t456 + t143 * t490 - t348 * t56 - t577 * t63;
t251 = qJDD(4) + t256;
t232 = t251 * qJ(5);
t298 = -qJD(4) + t313;
t275 = t298 * qJD(5);
t591 = t232 - t275;
t12 = -t446 + t591;
t443 = qJD(3) + t498;
t407 = t443 * qJD(2);
t378 = t407 + t480;
t481 = t349 * qJDD(2);
t442 = -t291 + t481;
t364 = t378 * t353 + t442;
t72 = qJD(4) * t397 + t364 * t348 - t577 * t391;
t10 = pkin(10) * t72 + t12;
t578 = pkin(4) + pkin(5);
t525 = t348 * t143;
t74 = t577 * t129 - t525;
t507 = qJD(5) - t74;
t603 = pkin(10) * t397;
t615 = -t603 + t507;
t46 = t298 * t578 + t615;
t488 = qJD(6) * t352;
t489 = qJD(6) * t347;
t276 = t298 * qJ(5);
t625 = t174 * pkin(10);
t136 = t577 * t143;
t75 = t348 * t129 + t136;
t55 = t75 + t625;
t50 = -t276 + t55;
t445 = t129 * t490 + t143 * t456 + t348 * t63 - t577 * t56;
t236 = t251 * pkin(4);
t585 = t236 - qJDD(5);
t13 = t445 - t585;
t71 = -t259 * t456 + t260 * t490 - t348 * t391 - t577 * t364;
t7 = -pkin(5) * t251 + pkin(10) * t71 + t13;
t2 = -t347 * t10 + t352 * t7 - t46 * t489 - t50 * t488;
t343 = g(3) * t350;
t411 = t336 * t352 - t337 * t347;
t513 = t351 * t354;
t221 = t336 * t513 + t337 * t355;
t222 = t337 * t513 - t508;
t587 = t221 * t352 - t222 * t347;
t283 = -qJD(2) * pkin(2) + pkin(7) * t499;
t402 = pkin(3) * t259 - t283;
t384 = qJ(5) * t397 + t402;
t62 = -t174 * t578 + t384;
t629 = -g(1) * t148 - g(2) * t587 - t62 * t105 - t411 * t343 + t2;
t607 = -t352 * t174 + t347 * t397;
t542 = t105 * t607;
t457 = t577 * qJD(3);
t437 = t353 * t457;
t467 = t349 * t498;
t468 = t577 * t353;
t524 = t348 * t349;
t586 = qJD(3) + qJD(4);
t506 = -t348 * t467 - t353 * t456 + t468 * t498 + t586 * t524 - t437;
t523 = t348 * t353;
t262 = t349 * t577 + t523;
t192 = t586 * t262;
t505 = -t262 * t498 + t192;
t609 = t105 ^ 2 - t607 ^ 2;
t20 = qJD(6) * t105 - t347 * t71 - t352 * t72;
t282 = qJD(6) + t298;
t600 = t105 * t282 - t20;
t356 = -pkin(9) - pkin(8);
t469 = qJD(3) * t356;
t267 = t349 * t469;
t285 = t356 * t349;
t286 = t356 * t353;
t125 = t577 * t267 + t285 * t456 + t286 * t490 + t469 * t523;
t266 = t431 * qJD(1);
t197 = pkin(7) * t460 + t353 * t266;
t512 = t353 * t354;
t405 = pkin(3) * t350 - pkin(9) * t512;
t160 = qJD(1) * t405 + t197;
t245 = t349 * t266;
t518 = t350 * t353;
t520 = t349 * t354;
t183 = t245 + (-pkin(7) * t518 - pkin(9) * t520) * qJD(1);
t98 = t348 * t160 + t577 * t183;
t94 = qJ(5) * t499 + t98;
t560 = t125 - t94;
t81 = t577 * t142 - t525;
t552 = pkin(3) * t456 + qJD(5) - t81;
t618 = t298 * t397 + t72;
t80 = t142 * t348 + t136;
t435 = pkin(3) * t490 - t80;
t196 = t348 * t285 - t577 * t286;
t557 = t196 * qJD(4) + t160 * t577 - t356 * t437 + (-t183 + t267) * t348;
t331 = pkin(7) * t480;
t544 = qJDD(2) * pkin(2);
t426 = -pkin(7) * t454 - t331 + t544;
t569 = g(2) * t351;
t428 = g(1) * t355 + t569;
t568 = g(3) * t354;
t611 = t350 * t428 - t568;
t374 = t426 + t611;
t627 = qJD(3) * pkin(8) * t313 + t374 + t544;
t19 = -t174 * t488 - t347 * t72 + t352 * t71 + t397 * t489;
t601 = -t282 * t607 + t19;
t144 = t221 * t347 + t222 * t352;
t399 = -t352 * t10 - t347 * t7 - t46 * t488 + t489 * t50;
t410 = t336 * t347 + t337 * t352;
t413 = t223 * t347 + t224 * t352;
t610 = g(1) * t413 + g(2) * t144 + t410 * t343 + t607 * t62 + t399;
t626 = -t196 * t251 - t336 * t611;
t476 = t578 * t350;
t624 = t506 * pkin(10) + qJD(1) * t476 + t557;
t623 = -t505 * pkin(10) - t560;
t83 = pkin(4) * t174 - t384;
t622 = t174 * t83;
t620 = -t603 + t552;
t619 = -t625 + t435;
t547 = qJ(5) * t174;
t617 = t174 * t397;
t616 = t174 * t402;
t433 = -t333 + (-t467 + t493) * pkin(3);
t398 = t428 * t354;
t613 = t398 + t343;
t494 = qJD(2) * t354;
t465 = t349 * t494;
t612 = t350 * t491 + t465;
t579 = t397 ^ 2;
t459 = t174 ^ 2 - t579;
t608 = -t174 * t298 - t71;
t606 = 0.2e1 * pkin(1);
t604 = pkin(4) * t397;
t599 = t187 * t313 + t88;
t593 = t397 * t578;
t592 = -t222 * pkin(4) - qJ(5) * t221;
t317 = pkin(7) * t512;
t208 = t349 * t277 + t317;
t590 = qJ(5) * t506 - qJD(5) * t262 + t433;
t528 = t336 * t350;
t403 = -g(1) * t223 - g(2) * t221 - g(3) * t528;
t377 = -t403 - t445;
t365 = t397 * t83 - t377 - t585;
t583 = t397 * t402 + t377;
t261 = -t468 + t524;
t582 = t174 * t499 - t251 * t261 + t298 * t505;
t580 = t174 * t506 + t261 * t71 - t262 * t72 - t397 * t505;
t359 = qJD(1) ^ 2;
t576 = pkin(1) * t359;
t575 = pkin(7) * t349;
t574 = pkin(8) * t256;
t573 = g(1) * t351;
t511 = t353 * t355;
t240 = t349 * t513 + t511;
t570 = g(2) * t240;
t338 = t350 * pkin(7);
t567 = pkin(10) + t356;
t195 = -t577 * t285 - t286 * t348;
t158 = -pkin(10) * t262 + t195;
t159 = pkin(10) * t261 + t196;
t90 = t158 * t352 - t159 * t347;
t566 = qJD(6) * t90 + t624 * t347 - t623 * t352;
t91 = t158 * t347 + t159 * t352;
t565 = -qJD(6) * t91 + t623 * t347 + t624 * t352;
t564 = -t505 * t578 - t590;
t17 = -t347 * t50 + t352 * t46;
t563 = t17 * t282;
t18 = t347 * t46 + t352 * t50;
t562 = t18 * t282;
t561 = t298 * t75;
t559 = t125 - t98;
t558 = pkin(4) * t499 + t557;
t329 = -pkin(3) * t577 - pkin(4);
t323 = -pkin(5) + t329;
t324 = pkin(3) * t348 + qJ(5);
t217 = t323 * t352 - t324 * t347;
t556 = qJD(6) * t217 + t619 * t347 + t620 * t352;
t218 = t323 * t347 + t324 * t352;
t555 = -qJD(6) * t218 - t620 * t347 + t619 * t352;
t273 = -qJ(5) * t347 - t352 * t578;
t554 = qJD(6) * t273 - t347 * t55 + t615 * t352;
t274 = qJ(5) * t352 - t347 * t578;
t553 = -qJD(6) * t274 - t615 * t347 - t352 * t55;
t551 = t261 * t488 - t262 * t489 + t505 * t347 - t506 * t352;
t182 = t261 * t347 + t262 * t352;
t550 = qJD(6) * t182 - t506 * t347 - t505 * t352;
t549 = t505 * pkin(4) + t590;
t548 = pkin(7) * qJDD(1);
t545 = qJ(5) * t354;
t535 = t188 * t313;
t532 = t259 * t313;
t531 = t260 * t259;
t530 = t260 * t313;
t527 = t337 * t350;
t526 = t337 * t354;
t522 = t349 * t350;
t521 = t349 * t351;
t519 = t349 * t355;
t517 = t350 * t355;
t516 = t350 * t356;
t514 = t351 * t353;
t510 = t354 * t313;
t330 = pkin(3) * t353 + pkin(2);
t289 = t354 * t330;
t258 = t353 * t277;
t185 = -pkin(9) * t518 + t258 + (-pkin(3) - t575) * t354;
t194 = -pkin(9) * t522 + t208;
t113 = t348 * t185 + t577 * t194;
t496 = qJD(2) * t350;
t504 = t353 * t268 + t496 * t575;
t503 = -g(2) * t517 + t350 * t573;
t314 = pkin(3) * t522;
t269 = t338 + t314;
t502 = t355 * pkin(1) + t351 * pkin(7);
t344 = t350 ^ 2;
t345 = t354 ^ 2;
t501 = t344 - t345;
t500 = t344 + t345;
t487 = t188 * qJD(3);
t486 = t259 * qJD(3);
t485 = t260 * qJD(3);
t484 = t283 * qJD(3);
t475 = t348 * t522;
t474 = t349 * t509;
t473 = t355 * t516;
t472 = t350 * t359 * t354;
t341 = t355 * pkin(7);
t471 = pkin(3) * t519 + t351 * t516 + t341;
t470 = g(1) * t509 + g(2) * t513 + t343;
t201 = pkin(3) * t612 + pkin(7) * t494;
t464 = t313 * t493;
t463 = t349 * t492;
t461 = t298 * t499;
t458 = t567 * t355;
t452 = -pkin(1) - t289;
t450 = -t221 * pkin(4) + qJ(5) * t222;
t449 = -t223 * pkin(4) + qJ(5) * t224;
t448 = -qJ(5) * t336 - t330;
t447 = t282 ^ 2;
t441 = pkin(3) * t521 + t330 * t509 + t502;
t439 = g(3) * (pkin(4) * t526 + t336 * t545 + t289);
t438 = t577 * t494;
t436 = t350 * t454;
t287 = qJ(5) * t527;
t434 = -pkin(4) * t528 + t287;
t430 = g(1) * t221 - g(2) * t223;
t429 = g(1) * t222 - g(2) * t224;
t427 = -g(2) * t355 + t573;
t107 = t113 - t545;
t424 = -t221 * pkin(5) + t450;
t316 = pkin(3) * t514;
t423 = t316 + t449;
t229 = t350 * t468 - t475;
t422 = qJ(5) * t229 - t269;
t112 = t185 * t577 - t348 * t194;
t420 = g(2) * t450;
t419 = -pkin(3) * t260 - t547;
t418 = pkin(7) * t259 - t283 * t349;
t108 = t354 * pkin(4) - t112;
t82 = t354 * pkin(5) - t229 * pkin(10) + t108;
t228 = t262 * t350;
t85 = pkin(10) * t228 + t107;
t39 = -t347 * t85 + t352 * t82;
t40 = t347 * t82 + t352 * t85;
t121 = t349 * t438 - t348 * t463 - qJD(4) * t475 + (t348 * t494 + (t457 + t456) * t350) * t353;
t416 = t121 * t174 + t228 * t72;
t151 = t228 * t347 + t229 * t352;
t358 = qJD(2) ^ 2;
t409 = qJDD(2) * t354 - t350 * t358;
t406 = -t336 * t476 + t287;
t404 = qJ(5) * t262 + t330;
t401 = -t354 * pkin(7) * t260 + t188 * t350;
t395 = t349 * t256 - t313 * t491;
t394 = t174 * t505 + t261 * t72;
t111 = t405 * qJD(2) + (-t317 + (pkin(9) * t350 - t277) * t349) * qJD(3) + t504;
t140 = t349 * t268 + t277 * t491 + (-t350 * t495 - t354 * t493) * pkin(7);
t119 = -pkin(9) * t612 + t140;
t393 = -t111 * t577 + t348 * t119 + t185 * t490 + t194 * t456;
t37 = t348 * t111 + t577 * t119 + t185 * t456 - t194 * t490;
t389 = -t125 * t174 - t195 * t71 - t196 * t72 - t470;
t387 = t224 * pkin(4) + qJ(5) * t223 + t441;
t386 = g(1) * t337 * t517 + g(2) * t350 * t515 - g(3) * t526 - t195 * t251;
t120 = t192 * t350 + t348 * t465 - t353 * t438;
t383 = -qJ(5) * t120 + qJD(5) * t229 - t201;
t382 = t351 * t452 + t471;
t376 = g(1) * t224 + g(2) * t222 + g(3) * t527 + t446;
t373 = t120 * t174 - t121 * t397 + t228 * t71 - t229 * t72;
t35 = qJ(5) * t496 - qJD(5) * t354 + t37;
t370 = t375 * t353;
t369 = -t121 * t298 + t174 * t496 + t228 * t251 - t354 * t72;
t367 = -t298 * t74 + t376;
t128 = -pkin(3) * t391 - t426;
t363 = -t71 * qJ(5) + qJD(5) * t397 - t128;
t243 = t353 * t509 + t521;
t242 = -t474 + t514;
t241 = -t351 * t512 + t519;
t235 = -qJDD(6) + t251;
t214 = t223 * pkin(5);
t207 = -pkin(7) * t520 + t258;
t198 = -pkin(7) * t466 + t245;
t186 = -t251 * t354 - t298 * t496;
t181 = -t352 * t261 + t262 * t347;
t169 = pkin(4) * t261 - t404;
t150 = -t352 * t228 + t229 * t347;
t141 = -t208 * qJD(3) + t504;
t137 = -t261 * t578 + t404;
t130 = pkin(4) * t228 - t422;
t110 = t547 + t604;
t109 = -t228 * t578 + t422;
t93 = -t419 + t604;
t89 = -t349 * t233 + t180 - t487;
t77 = -t547 - t593;
t69 = -t276 + t75;
t68 = pkin(4) * t298 + t507;
t67 = t419 - t593;
t57 = t251 * t262 + t298 * t506 - t397 * t499;
t45 = pkin(4) * t121 - t383;
t42 = qJD(6) * t151 - t120 * t347 - t352 * t121;
t41 = t352 * t120 - t347 * t121 - t228 * t488 + t229 * t489;
t36 = -pkin(4) * t496 + t393;
t32 = -t120 * t397 - t229 * t71;
t31 = -t121 * t578 + t383;
t30 = -t262 * t71 - t397 * t506;
t29 = t120 * t298 + t229 * t251 + t354 * t71 + t397 * t496;
t24 = pkin(10) * t121 + t35;
t23 = t120 * pkin(10) - qJD(2) * t476 + t393;
t16 = t72 * pkin(4) - t363;
t11 = -t578 * t72 + t363;
t4 = -qJD(6) * t40 + t23 * t352 - t24 * t347;
t3 = qJD(6) * t39 + t23 * t347 + t24 * t352;
t1 = [0, 0, 0, 0, 0, qJDD(1), t427, t428, 0, 0, qJDD(1) * t344 + 0.2e1 * t436, 0.2e1 * t335 * t350 - 0.2e1 * t483 * t501, qJDD(2) * t350 + t354 * t358, qJDD(1) * t345 - 0.2e1 * t436, t409, 0 (-0.2e1 * pkin(1) * t483 - pkin(7) * qJDD(2)) * t350 + (-pkin(7) * t358 + qJDD(1) * t606 + t427) * t354, -pkin(7) * t409 + t392 * t606 - t503, 0.2e1 * t500 * t548 - t428, -g(1) * (-pkin(1) * t351 + t341) - g(2) * t502 + (pkin(7) ^ 2 * t500 + pkin(1) ^ 2) * qJDD(1), -t260 * t463 + (t260 * t494 + (t370 + t442) * t350) * t353 (t259 * t353 - t260 * t349) * t494 + ((-t442 - t486) * t349 + (-t349 * t407 - t308 + t391 - t485) * t353) * t350, -t442 * t354 + (qJD(2) * t260 + t464) * t350 + ((t256 - t335) * t350 + (-t313 - t443) * t494) * t353, -t259 * t612 - t391 * t522 (t313 * t497 - t391) * t354 + (qJD(2) * t259 - t395) * t350, -t256 * t354 - t313 * t496, -g(1) * t241 - g(2) * t243 - t141 * t313 + t207 * t256 + (-qJD(2) * t418 - t89) * t354 + (-pkin(7) * t391 + t187 * qJD(2) - t349 * t426 + t353 * t484) * t350, -g(1) * t240 - g(2) * t242 + t140 * t313 - t208 * t256 + t88 * t354 + (-t349 * t484 - t426 * t353 + (t353 * t480 + t442) * pkin(7)) * t350 + ((t283 * t354 + t338 * t443) * t353 - t401) * qJD(2), t140 * t259 - t208 * t440 - t141 * t260 + t207 * t291 + (-t188 * t494 - t207 * qJDD(2) + (qJD(3) * t187 - t88) * t350) * t349 + (t208 * qJDD(2) + (-qJDD(1) * t207 - t487 - t89) * t350 + (-t187 * t354 - t207 * t443) * qJD(2)) * t353 + t503, t88 * t208 + t188 * t140 + t89 * t207 + t187 * t141 - g(1) * t341 - g(2) * (t355 * t432 + t502) - t277 * t573 + (t283 * t494 - t350 * t426) * pkin(7), t32, t373, t29, t416, -t369, t186, t112 * t251 - t121 * t402 + t128 * t228 + t174 * t201 + t269 * t72 + t298 * t393 + t354 * t445 + t496 * t74 + t429, -t113 * t251 + t120 * t402 + t128 * t229 + t201 * t397 - t269 * t71 + t298 * t37 - t354 * t446 - t496 * t75 - t430, t112 * t71 - t113 * t72 + t120 * t74 - t121 * t75 - t174 * t37 + t228 * t446 + t229 * t445 + t393 * t397 + t503, -t446 * t113 + t75 * t37 - t445 * t112 - t74 * t393 + t128 * t269 - t402 * t201 - g(1) * t382 - g(2) * (t441 - t473) t32, t29, -t373, t186, t369, t416, -t108 * t251 + t121 * t83 + t13 * t354 + t130 * t72 + t16 * t228 + t174 * t45 + t298 * t36 - t496 * t68 + t429, -t107 * t72 - t108 * t71 - t12 * t228 - t120 * t68 - t121 * t69 + t13 * t229 - t174 * t35 + t36 * t397 + t503, t107 * t251 - t12 * t354 + t120 * t83 + t130 * t71 - t16 * t229 - t298 * t35 - t397 * t45 + t496 * t69 + t430, t12 * t107 + t69 * t35 + t16 * t130 + t83 * t45 + t13 * t108 + t68 * t36 - g(1) * (t382 + t592) - g(2) * (t387 - t473) -t105 * t41 - t151 * t19, -t105 * t42 + t150 * t19 - t151 * t20 + t41 * t607, -t105 * t496 - t151 * t235 - t19 * t354 - t282 * t41, t150 * t20 + t42 * t607, t150 * t235 - t20 * t354 - t282 * t42 + t496 * t607, -t235 * t354 - t282 * t496, g(1) * t144 - g(2) * t413 + t109 * t20 + t11 * t150 - t17 * t496 + t2 * t354 - t39 * t235 + t4 * t282 + t31 * t607 + t62 * t42, g(1) * t587 - g(2) * t148 + t31 * t105 - t109 * t19 + t11 * t151 + t18 * t496 + t40 * t235 - t3 * t282 + t354 * t399 - t62 * t41, -t105 * t4 + t150 * t399 - t151 * t2 + t17 * t41 - t18 * t42 + t19 * t39 - t20 * t40 - t3 * t607 - t503, -t399 * t40 + t18 * t3 + t2 * t39 + t17 * t4 + t11 * t109 + t62 * t31 - g(1) * (-pkin(5) * t222 + t471 + t592) - g(2) * (pkin(5) * t224 - t350 * t458 + t387) - (pkin(10) * t350 + t452) * t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t472, t501 * t359, t480, t472, t335, qJDD(2), -t568 - t331 + (t428 + t576) * t350 (-t548 + t576) * t354 + t470, 0, 0, t442 * t349 + (t349 * t378 - t530) * t353 (-t440 + t530) * t349 + (-t291 + t370 + 0.2e1 * t481 - t532) * t353 (-t260 * t350 + t353 * t510) * qJD(1) + t395, t349 * t532 + t353 * t391, t464 + t353 * t256 + (-t259 * t350 - t349 * t510) * qJD(1), t313 * t499, -pkin(2) * t440 + t197 * t313 + (t484 - t574) * t349 + (-t187 * t350 + t354 * t418) * qJD(1) + t627 * t353, pkin(2) * t291 - t198 * t313 + t401 * qJD(1) + (-pkin(2) * t375 - t283 * t313 - t574) * t353 - t627 * t349, t197 * t260 - t198 * t259 + (-t89 + t535 + (t442 - t486) * pkin(8)) * t349 + ((t349 * t375 + t391 + t485) * pkin(8) + t599) * t353 - t470, -t283 * t333 - t187 * t197 - t188 * t198 + t374 * pkin(2) + (-t89 * t349 + t88 * t353 + (-t187 * t353 - t188 * t349) * qJD(3) - t613) * pkin(8), t30, t580, t57, t394, t582, t461, t128 * t261 + t174 * t433 + t298 * t557 - t330 * t72 - t402 * t505 - t499 * t74 + t386, t128 * t262 + t298 * t559 + t330 * t71 + t397 * t433 + t402 * t506 + t499 * t75 + t626, t174 * t98 + t261 * t446 + t262 * t445 + t397 * t557 - t505 * t75 + t506 * t74 + t389, -t446 * t196 + t445 * t195 - t128 * t330 - g(3) * (t289 - t516) + t559 * t75 - t557 * t74 - t433 * t402 + t428 * (t330 * t350 + t354 * t356) t30, t57, -t580, t461, -t582, t394, t16 * t261 + t169 * t72 + t174 * t549 + t298 * t558 + t499 * t68 + t505 * t83 + t386, -t12 * t261 + t13 * t262 + t174 * t94 + t397 * t558 - t505 * t69 - t506 * t68 + t389, -t16 * t262 + t169 * t71 - t298 * t560 - t397 * t549 - t499 * t69 + t506 * t83 - t626, t12 * t196 + t16 * t169 + t13 * t195 - t439 + t549 * t83 + t560 * t69 + t558 * t68 + t356 * t398 + (g(3) * t356 + t428 * (pkin(4) * t337 - t448)) * t350, t105 * t551 - t182 * t19, -t105 * t550 + t181 * t19 - t182 * t20 - t551 * t607, t105 * t499 - t182 * t235 + t282 * t551, t181 * t20 + t550 * t607, t181 * t235 - t282 * t550 - t499 * t607, t282 * t499, t11 * t181 + t137 * t20 + t17 * t499 - t90 * t235 + t565 * t282 + t410 * t611 + t550 * t62 + t564 * t607, t564 * t105 + t11 * t182 - t137 * t19 - t18 * t499 + t91 * t235 - t566 * t282 + t411 * t611 + t551 * t62, -t105 * t565 - t17 * t551 - t18 * t550 + t181 * t399 - t182 * t2 + t19 * t90 - t20 * t91 - t566 * t607 + t470, -t399 * t91 + t2 * t90 + t11 * t137 - t439 + t564 * t62 + t566 * t18 + t565 * t17 + (-g(3) * pkin(5) * t337 + g(1) * t458 + t567 * t569) * t354 + (g(3) * t567 + t428 * (t337 * t578 - t448)) * t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t531, -t259 ^ 2 + t260 ^ 2, t364 + t532, t531, t391 - t530, t256, -t284 * t491 - g(1) * t242 + t570 - t535 - t260 * t283 + t180 + (t444 + t343) * t349, g(1) * t243 - g(2) * t241 + g(3) * t518 - t259 * t283 - t599, 0, 0, t617, -t459, t608, -t617, -t618, t251, -t80 * t298 + (-t174 * t260 + t251 * t577 + t298 * t490) * pkin(3) + t583, -t616 - t81 * t298 + (-t251 * t348 - t260 * t397 + t298 * t456) * pkin(3) + t376, t75 * t397 + t81 * t174 - t174 * t74 - t80 * t397 + (t577 * t71 - t348 * t72 + (-t174 * t577 + t348 * t397) * qJD(4)) * pkin(3), -g(1) * t316 + t74 * t80 - t75 * t81 + (g(2) * t511 - t445 * t577 - t446 * t348 + t402 * t260 + t613 * t349 + (-t74 * t348 + t577 * t75) * qJD(4)) * pkin(3), t617, t608, t459, t251, t618, -t617, -t174 * t93 - t251 * t329 + t298 * t435 - t365, -t324 * t72 - t329 * t71 + (t435 + t69) * t397 + (-t552 + t68) * t174, t251 * t324 - t298 * t552 + t397 * t93 - t376 + t591 - t622, t12 * t324 + t13 * t329 - t83 * t93 - t68 * t80 - g(1) * t423 - t420 - g(3) * (-t314 + t434) + t552 * t69 + (g(1) * t474 + t490 * t68 + t570) * pkin(3), -t542, -t609, t601, t542, -t600, t235, -t217 * t235 + t282 * t555 - t607 * t67 - t629, -t105 * t67 + t218 * t235 - t282 * t556 - t610, t19 * t217 - t20 * t218 + (t17 - t556) * t607 + (-t18 - t555) * t105, -t399 * t218 + t2 * t217 - t62 * t67 - g(1) * (-pkin(3) * t474 - t214 + t423) - g(2) * (-pkin(3) * t240 + t424) - g(3) * (-t314 + t406) + t556 * t18 + t555 * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t617, -t459, t608, -t617, -t618, t251, -t561 + t583, t367 - t616, 0, 0, t617, t608, t459, t251, t618, -t617, -t110 * t174 + t236 - t365 - t561, pkin(4) * t71 - qJ(5) * t72 + (t69 - t75) * t397 + (t68 - t507) * t174, t110 * t397 + 0.2e1 * t232 - 0.2e1 * t275 - t367 - t622, -t13 * pkin(4) - g(1) * t449 - g(3) * t434 + t12 * qJ(5) - t83 * t110 + t507 * t69 - t68 * t75 - t420, -t542, -t609, t601, t542, -t600, t235, -t235 * t273 + t282 * t553 - t607 * t77 - t629, -t105 * t77 + t235 * t274 - t282 * t554 - t610, t19 * t273 - t20 * t274 + (t17 - t554) * t607 + (-t553 - t18) * t105, -t399 * t274 + t2 * t273 - t62 * t77 - g(1) * (-t214 + t449) - g(2) * t424 - g(3) * t406 + t554 * t18 + t553 * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251 + t617, t608, -t298 ^ 2 - t579, t298 * t69 + t365, 0, 0, 0, 0, 0, 0, -t235 * t352 - t347 * t447 - t397 * t607, -t105 * t397 + t235 * t347 - t352 * t447, t600 * t347 + t601 * t352, -t397 * t62 + (t2 + t562) * t352 + (-t399 - t563) * t347 + t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, t609, -t601, -t542, t600, -t235, t562 + t629, t563 + t610, 0, 0;];
tau_reg  = t1;
