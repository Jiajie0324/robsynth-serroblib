% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRPR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:44:53
% EndTime: 2019-03-09 22:45:53
% DurationCPUTime: 38.65s
% Computational Cost: add. (18244->1019), mult. (38684->1234), div. (0->0), fcn. (40702->8), ass. (0->732)
t904 = qJD(3) + qJD(4);
t1214 = qJD(6) - t904;
t683 = sin(qJ(3));
t684 = sin(qJ(2));
t1007 = t683 * t684;
t682 = sin(qJ(4));
t1104 = cos(qJ(4));
t686 = cos(qJ(3));
t876 = t1104 * t686;
t555 = -t1007 * t682 + t684 * t876;
t681 = sin(qJ(6));
t1018 = t681 * t555;
t1008 = t682 * t686;
t877 = t1104 * t683;
t596 = t877 + t1008;
t552 = t596 * t684;
t685 = cos(qJ(6));
t993 = t685 * t552;
t1197 = -t993 + t1018;
t384 = -t552 * t681 - t555 * t685;
t152 = t1197 ^ 2 - t384 ^ 2;
t1221 = qJD(1) * t152;
t1010 = t682 * t683;
t754 = t876 - t1010;
t1142 = -pkin(9) - pkin(8);
t620 = t1142 * t686;
t958 = t1010 * t1142 - t1104 * t620;
t1155 = -pkin(10) * t754 + t958;
t1174 = t685 * t1155;
t842 = -t1142 * t877 - t620 * t682;
t398 = -pkin(10) * t596 + t842;
t1182 = t681 * t398;
t1170 = t1182 / 0.2e1 + t1174 / 0.2e1;
t1219 = 0.2e1 * t1170;
t1220 = qJD(6) * t1219;
t804 = t596 * t685 - t681 * t754;
t1127 = t804 / 0.2e1;
t687 = cos(qJ(2));
t1200 = t687 * t1127;
t557 = t754 * t687;
t1017 = t681 * t557;
t554 = t596 * t687;
t528 = t685 * t554;
t816 = -t528 / 0.2e1 + t1017 / 0.2e1;
t260 = t1200 - t816;
t1218 = qJD(1) * t260;
t925 = qJD(6) * t804;
t76 = -t804 * t904 + t1218 + t925;
t1156 = t596 * t681 + t685 * t754;
t926 = qJD(6) * t1156;
t1172 = t1156 * t904 - t926;
t1185 = t1156 / 0.2e1;
t1203 = t687 * t1185;
t1019 = t681 * t554;
t992 = t685 * t557;
t962 = t1019 / 0.2e1 + t992 / 0.2e1;
t261 = t1203 + t962;
t1217 = qJD(1) * t261;
t77 = t1217 - t1172;
t1106 = -t687 / 0.2e1;
t235 = t1174 + t1182;
t1210 = t1106 * t235;
t263 = t1200 + t816;
t1216 = t263 * qJD(2);
t265 = t1203 - t962;
t1215 = t265 * qJD(2);
t907 = t687 * qJD(1);
t1213 = t260 * qJD(2) - t384 * t907;
t1212 = -t261 * qJD(2) - t1197 * t907;
t181 = t1156 ^ 2 - t804 ^ 2;
t1211 = qJD(2) * t181;
t943 = qJD(1) * t384;
t1208 = t1197 * t943;
t1045 = t555 * qJ(5);
t1143 = pkin(4) + pkin(5);
t1103 = pkin(3) * t683;
t882 = pkin(7) + t1103;
t822 = t882 * t684;
t292 = -t1143 * t552 + t1045 - t822;
t162 = t292 * t1197;
t1102 = pkin(3) * t686;
t663 = -pkin(2) - t1102;
t1032 = t663 * t552;
t1179 = t842 * t687;
t1201 = t1179 / 0.2e1;
t1090 = t687 * pkin(8);
t1094 = t684 * pkin(2);
t621 = -t1090 + t1094;
t603 = t686 * t621;
t648 = pkin(7) * t1007;
t989 = t686 * t687;
t458 = pkin(3) * t684 - pkin(9) * t989 + t603 + t648;
t426 = t682 * t458;
t1006 = t683 * t687;
t600 = t683 * t621;
t1004 = t684 * t686;
t898 = pkin(7) * t1004;
t490 = -pkin(9) * t1006 + t600 - t898;
t472 = t1104 * t490;
t967 = t426 / 0.2e1 + t472 / 0.2e1;
t1207 = t1201 + t1032 / 0.2e1 - t967;
t1114 = -t754 / 0.2e1;
t1118 = t552 / 0.2e1;
t1099 = t552 * pkin(4);
t813 = -t1045 + t1099;
t345 = t822 + t813;
t1097 = t754 * pkin(4);
t1043 = t596 * qJ(5);
t784 = -t663 + t1043;
t425 = -t784 - t1097;
t1149 = t1114 * t345 + t1118 * t425;
t1206 = t1201 + t967 + t1149;
t1202 = -t1179 / 0.2e1;
t1205 = t1202 + t967 - t1149;
t783 = -t822 / 0.2e1;
t134 = t1202 - t754 * t783 - t1032 / 0.2e1 - t967;
t1175 = t681 * t1155;
t1181 = t685 * t398;
t1196 = -t1181 + t1175;
t1204 = t1106 * t1196;
t1119 = -t993 / 0.2e1;
t1091 = t687 * pkin(2);
t1092 = t684 * pkin(8);
t821 = -t1091 - t1092;
t791 = -pkin(1) + t821;
t897 = pkin(7) * t989;
t534 = t683 * t791 + t897;
t485 = -pkin(9) * t1007 + t534;
t1012 = t682 * t485;
t827 = t1142 * t684 - pkin(1);
t721 = (t827 - t1091) * t686;
t1100 = pkin(7) * t683;
t883 = -pkin(3) - t1100;
t704 = t687 * t883 + t721;
t424 = t1104 * t704;
t308 = -t424 + t1012;
t291 = t687 * pkin(4) + t308;
t899 = pkin(7) * t1006;
t484 = t721 - t899;
t879 = t1104 * t484;
t324 = t879 - t1012;
t1199 = t291 + t324;
t1160 = t958 * t687;
t466 = t1160 / 0.2e1;
t1112 = t596 / 0.2e1;
t1116 = t555 / 0.2e1;
t768 = t1112 * t345 + t1116 * t425;
t1159 = t466 + t768;
t1187 = -t842 / 0.2e1;
t1198 = t1187 * t552;
t1029 = t681 * qJ(5);
t664 = t685 * t1143;
t607 = t664 + t1029;
t545 = t555 * pkin(10);
t819 = t308 - t545;
t720 = t1143 * t687 + t819;
t188 = t685 * t720;
t1098 = t552 * pkin(10);
t459 = t1104 * t485;
t714 = t682 * (-pkin(2) * t686 + t883) - qJ(5);
t290 = t1008 * t827 + t687 * t714 + t459;
t698 = t290 + t1098;
t694 = t681 * t698;
t981 = t188 / 0.2e1 - t694 / 0.2e1;
t1195 = t1106 * t607 - t981;
t1095 = t682 * pkin(3);
t649 = qJ(5) + t1095;
t1015 = t681 * t649;
t895 = t1104 * pkin(3);
t662 = -t895 - pkin(4);
t814 = -pkin(5) + t662;
t619 = t685 * t814;
t541 = -t619 + t1015;
t1194 = t1106 * t541 - t981;
t1093 = t684 * pkin(4);
t1011 = t682 * t490;
t880 = t1104 * t458;
t965 = t880 / 0.2e1 - t1011 / 0.2e1;
t815 = -t1093 / 0.2e1 - t965;
t1003 = t685 * qJ(5);
t887 = t681 * t1143;
t608 = -t887 + t1003;
t1189 = t681 / 0.2e1;
t982 = t720 * t1189 + t685 * t698 / 0.2e1;
t1193 = t1106 * t608 + t982;
t750 = t681 * t814;
t991 = t685 * t649;
t542 = t750 + t991;
t1192 = t1106 * t542 + t982;
t1191 = t1175 / 0.2e1 - t1181 / 0.2e1;
t1188 = -t804 / 0.2e1;
t1186 = t842 / 0.2e1;
t1165 = -t958 / 0.2e1;
t467 = -t1160 / 0.2e1;
t850 = -t1175 / 0.2e1;
t1082 = t292 * t384;
t1184 = t384 * t904;
t1028 = t681 * t819;
t1178 = qJD(6) * t384;
t937 = qJD(2) * t804;
t1176 = t1156 * t937;
t351 = t1143 * t754 + t784;
t1071 = t351 * t1156;
t1161 = t904 * t687;
t1146 = t555 ^ 2;
t680 = t687 ^ 2;
t514 = t680 + t1146;
t936 = qJD(2) * t596;
t1173 = -t514 * qJD(1) - t555 * t936 + t1161;
t1167 = t904 * t842;
t835 = t895 / 0.2e1;
t739 = -t424 / 0.2e1 + t687 * t835;
t147 = t879 / 0.2e1 + t739;
t885 = qJD(1) * t147 - qJD(3) * t895;
t1157 = t958 * qJD(5);
t1134 = -t384 / 0.2e1;
t1101 = pkin(5) * t555;
t395 = pkin(4) * t555 + qJ(5) * t552;
t329 = -t395 - t1101;
t473 = pkin(4) * t596 - qJ(5) * t754;
t383 = -pkin(5) * t596 - t473;
t1154 = t1127 * t329 + t1134 * t383 + t1204;
t1135 = t1197 / 0.2e1;
t1153 = t1135 * t383 + t1185 * t329 - t1210;
t900 = pkin(3) * t1004;
t358 = t900 + t395;
t312 = -t358 - t1101;
t357 = t383 - t1103;
t1152 = t1127 * t312 + t1134 * t357 + t1204;
t1151 = t1135 * t357 + t1185 * t312 - t1210;
t755 = -t880 + t1011;
t707 = -t557 * pkin(10) - t1143 * t684 + t755;
t706 = t681 * t707;
t1005 = t684 * qJ(5);
t963 = t472 + t426;
t295 = t963 + t1005;
t737 = pkin(10) * t554 + t295;
t715 = t685 * t737;
t697 = -t706 / 0.2e1 - t715 / 0.2e1;
t705 = t685 * t707;
t716 = t681 * t737;
t696 = -t716 / 0.2e1 + t705 / 0.2e1;
t1013 = t682 * t484;
t323 = t459 + t1013;
t255 = t323 + t1098;
t1026 = t681 * t255;
t256 = t545 + t324;
t999 = t685 * t256;
t979 = t1026 / 0.2e1 + t999 / 0.2e1;
t1000 = t685 * t255;
t1025 = t681 * t256;
t977 = t1025 / 0.2e1 - t1000 / 0.2e1;
t1150 = t1165 * t555 + t1198;
t677 = t683 ^ 2;
t679 = t686 ^ 2;
t637 = t679 - t677;
t909 = t684 * qJD(1);
t874 = t686 * t909;
t1148 = qJD(2) * t637 - 0.2e1 * t683 * t874;
t1147 = t904 * t958;
t591 = t596 ^ 2;
t1145 = -pkin(4) / 0.2e1;
t1144 = pkin(4) / 0.2e1;
t1141 = -qJ(5) / 0.2e1;
t1140 = qJ(5) / 0.2e1;
t1139 = t290 / 0.2e1;
t1138 = -t345 / 0.2e1;
t1137 = t351 / 0.2e1;
t1136 = -t1197 / 0.2e1;
t1132 = -t425 / 0.2e1;
t1131 = -t1156 / 0.2e1;
t1120 = t958 / 0.2e1;
t1117 = -t555 / 0.2e1;
t1115 = t754 / 0.2e1;
t1113 = -t596 / 0.2e1;
t1111 = -t649 / 0.2e1;
t1110 = t649 / 0.2e1;
t1109 = t662 / 0.2e1;
t1108 = t682 / 0.2e1;
t1107 = -t684 / 0.2e1;
t1105 = t687 / 0.2e1;
t1089 = pkin(3) * qJD(4);
t1074 = t345 * t555;
t1076 = t323 * t687;
t78 = t358 * t552 + t1074 + t1076;
t1088 = qJD(1) * t78;
t703 = t682 * t704;
t309 = t459 + t703;
t1079 = t309 * t687;
t83 = t395 * t552 + t1074 + t1079;
t1087 = qJD(1) * t83;
t604 = pkin(3) * t1006 + pkin(7) * t687;
t820 = qJ(5) * t557 - t604;
t293 = -t1143 * t554 + t820;
t387 = -t528 + t1017;
t89 = t694 - t188;
t13 = (-t716 + t705) * t687 + t89 * t684 + t293 * t1197 + t292 * t387;
t1086 = t13 * qJD(1);
t390 = t992 + t1019;
t90 = t685 * (t459 + t682 * (t686 * (-pkin(1) - t1092) - pkin(9) * t1004) + t1098) + t1028 + (t685 * t714 + t887) * t687;
t14 = (t715 + t706) * t687 - t90 * t684 + t293 * t384 - t292 * t390;
t1085 = t14 * qJD(1);
t780 = t1141 * t554 + t1145 * t557;
t845 = t308 / 0.2e1 - t291 / 0.2e1;
t846 = t1139 - t309 / 0.2e1;
t17 = t596 * t846 + t754 * t845 + t780;
t1084 = t17 * qJD(1);
t246 = t309 + t1098;
t1001 = t685 * t246;
t94 = -t1001 - t1028;
t29 = t1197 * t329 - t687 * t94 + t1082;
t1083 = t29 * qJD(1);
t1002 = t685 * t819;
t1027 = t681 * t246;
t95 = -t1002 + t1027;
t30 = t329 * t384 + t687 * t95 - t162;
t1081 = t30 * qJD(1);
t1080 = t308 * t687;
t114 = -t1000 + t1025;
t31 = -t114 * t687 + t1197 * t312 + t1082;
t1078 = t31 * qJD(1);
t115 = t999 + t1026;
t32 = t115 * t687 + t312 * t384 - t162;
t1077 = t32 * qJD(1);
t1075 = t324 * t687;
t1072 = t351 * t804;
t300 = t755 - t1093;
t346 = pkin(4) * t554 - t820;
t41 = t290 * t295 + t291 * t300 + t345 * t346;
t1070 = t41 * qJD(1);
t1068 = t425 * t754;
t1067 = t425 * t596;
t46 = -t290 * t308 + t291 * t309 + t345 * t395;
t1062 = t46 * qJD(1);
t47 = t290 * t324 + t291 * t323 + t345 * t358;
t1061 = t47 * qJD(1);
t48 = -t290 * t554 + t291 * t557 - t295 * t552 + t300 * t555;
t1060 = t48 * qJD(1);
t49 = (-t290 + t309) * t555 + (-t291 + t308) * t552;
t1059 = t49 * qJD(1);
t1056 = t842 * t684;
t1052 = t958 * t684;
t54 = (-t290 + t323) * t555 - t1199 * t552;
t1050 = t54 * qJD(1);
t1049 = t541 * t684;
t1047 = t542 * t684;
t59 = -t687 * t89 + t162;
t1044 = t59 * qJD(1);
t60 = -t687 * t90 - t1082;
t1042 = t60 * qJD(1);
t1041 = t607 * t684;
t1039 = t608 * t684;
t1037 = t649 * t555;
t1036 = t649 * t596;
t66 = -t290 * t684 + t295 * t687 + t345 * t557 + t346 * t555;
t1035 = t66 * qJD(1);
t1034 = t662 * t552;
t1033 = t662 * t754;
t1031 = t663 * t555;
t67 = -t291 * t684 + t300 * t687 + t345 * t554 + t346 * t552;
t1030 = t67 * qJD(1);
t1014 = t681 * t682;
t1009 = t682 * t685;
t678 = t684 ^ 2;
t990 = t686 * t678;
t296 = t345 * t552;
t79 = t358 * t555 + t1075 - t296;
t988 = t79 * qJD(1);
t80 = t308 * t684 - t552 * t604 - t554 * t822 - t687 * t755;
t987 = t80 * qJD(1);
t81 = t963 * t687 + t604 * t555 + (t557 * t882 - t309) * t684;
t986 = t81 * qJD(1);
t82 = t395 * t555 - t1080 - t296;
t985 = t82 * qJD(1);
t699 = -t703 / 0.2e1 - t459 / 0.2e1;
t888 = t1095 / 0.2e1;
t695 = t687 * t888 + t699;
t817 = t459 / 0.2e1 + t1013 / 0.2e1;
t146 = t695 - t817;
t984 = -qJD(3) * t323 + qJD(4) * t146;
t983 = qJD(3) * t146 - qJD(4) * t309;
t193 = -t552 * t754 - t555 * t596;
t980 = t904 * t193;
t322 = -t1112 * t552 + t1115 * t555;
t975 = t904 * t322;
t878 = t1104 * t681;
t578 = (t878 - t1009) * pkin(3);
t668 = t681 * qJD(5);
t960 = qJD(4) * t578 + t668;
t881 = t685 * t1104;
t579 = (t881 + t1014) * pkin(3);
t671 = t685 * qJD(5);
t959 = qJD(4) * t579 + t671;
t957 = t904 * t681;
t956 = t904 * t685;
t638 = t680 - t678;
t955 = qJ(5) * qJD(4);
t692 = -t699 + (qJ(5) + t649) * t1106;
t130 = -t692 + t817;
t954 = qJD(1) * t130;
t145 = t695 + t817;
t953 = qJD(1) * t145;
t470 = t555 * t822;
t153 = -t552 * t900 - t1076 - t470;
t952 = qJD(1) * t153;
t154 = t1075 + (t1102 * t555 - t552 * t882) * t684;
t951 = qJD(1) * t154;
t177 = -t552 * t822 - t1080;
t950 = qJD(1) * t177;
t178 = -t470 - t1079;
t949 = qJD(1) * t178;
t210 = t1197 * t684 - t387 * t687;
t948 = qJD(1) * t210;
t211 = t384 * t684 + t390 * t687;
t947 = qJD(1) * t211;
t391 = t552 * t684 - t554 * t687;
t942 = qJD(1) * t391;
t392 = -t555 * t684 + t557 * t687;
t941 = qJD(1) * t392;
t533 = -t686 * t791 + t899;
t450 = -t1100 * t678 - t533 * t687;
t940 = qJD(1) * t450;
t451 = -pkin(7) * t990 - t534 * t687;
t939 = qJD(1) * t451;
t938 = qJD(1) * t555;
t935 = qJD(2) * t663;
t934 = qJD(2) * t683;
t933 = qJD(2) * t686;
t932 = qJD(3) * t683;
t931 = qJD(3) * t686;
t930 = qJD(3) * t687;
t929 = qJD(4) * t663;
t928 = qJD(5) * t596;
t927 = qJD(5) * t687;
t112 = -t1197 * t390 + t384 * t387;
t924 = t112 * qJD(1);
t136 = t290 * t687 + t1074;
t923 = t136 * qJD(1);
t921 = t147 * qJD(3);
t920 = t147 * qJD(4);
t287 = -t552 * t557 - t554 * t555;
t919 = t287 * qJD(1);
t302 = t1197 * t555 + t680 * t681;
t918 = t302 * qJD(1);
t303 = -t384 * t555 + t680 * t685;
t917 = t303 * qJD(1);
t333 = t533 * t684 + (-t648 + t603) * t687;
t916 = t333 * qJD(1);
t334 = t600 * t687 + (-t534 + t897) * t684;
t915 = t334 * qJD(1);
t731 = -t1008 / 0.2e1 - t877 / 0.2e1;
t414 = (t1113 + t731) * t687;
t404 = t414 * qJD(1);
t730 = t876 / 0.2e1 - t1010 / 0.2e1;
t415 = (t1115 + t730) * t687;
t405 = t415 * qJD(1);
t913 = t552 * qJD(5);
t576 = t754 * qJD(5);
t595 = t638 * t683;
t912 = t595 * qJD(1);
t598 = t680 * t686 - t990;
t911 = t598 * qJD(1);
t910 = t638 * qJD(1);
t908 = t684 * qJD(2);
t906 = t687 * qJD(2);
t667 = qJD(4) * t895;
t905 = t667 + qJD(5);
t903 = qJD(3) - qJD(6);
t902 = qJD(4) - qJD(6);
t63 = t1131 * t1197 + t1136 * t1156 + 0.2e1 * t1188 * t384;
t71 = t1156 * t1197 + t384 * t804;
t901 = t71 * qJD(6) + t63 * t904;
t896 = t1104 / 0.2e1;
t894 = pkin(1) * t909;
t893 = pkin(1) * t907;
t892 = t682 * t1089;
t891 = t1103 / 0.2e1;
t890 = -t1102 / 0.2e1;
t889 = -t1095 / 0.2e1;
t128 = t1127 * t1197 - t1185 * t384;
t129 = -t1131 * t384 + t1188 * t1197;
t886 = t129 * qJD(6) + t128 * t904;
t875 = t552 * t938;
t873 = t754 * t936;
t872 = t683 * t933;
t871 = t686 * t908;
t870 = t683 * t930;
t869 = t686 * t930;
t868 = t687 * t668;
t867 = t687 * t671;
t866 = t683 * t931;
t865 = t684 * t906;
t864 = t684 * t907;
t849 = t684 * t1189;
t848 = t1009 / 0.2e1;
t847 = t685 * t1107;
t844 = -t619 / 0.2e1 + t664 / 0.2e1;
t843 = t1110 + t1140;
t841 = t904 * t596;
t838 = t900 / 0.2e1;
t837 = -qJD(3) + t907;
t836 = qJD(6) + t907;
t834 = t1113 * t290 + t1115 * t291 + t1150;
t782 = t822 / 0.2e1;
t831 = t596 * t782 + t1031 / 0.2e1 + t965;
t830 = t683 * t871;
t828 = -t881 / 0.2e1;
t826 = t965 + t1093;
t824 = t1111 + t888;
t823 = t907 - qJD(3) / 0.2e1;
t818 = t843 * t684;
t812 = (qJD(3) + t902) * t687;
t623 = -qJD(4) + t837;
t810 = -t1031 / 0.2e1 + t965;
t430 = t473 + t1103;
t700 = t1132 * t358 + t1138 * t430 + t1165 * t1199 + t1186 * t290 + t1187 * t323;
t770 = t1109 * t300 + t1110 * t295;
t1 = t700 + t770;
t113 = t425 * t430;
t809 = -qJD(1) * t1 + qJD(2) * t113;
t116 = t425 * t473;
t769 = t1132 * t395 + t1138 * t473;
t779 = t1140 * t295 + t1145 * t300;
t7 = t842 * t846 + t845 * t958 + t769 + t779;
t808 = -t7 * qJD(1) + t116 * qJD(2);
t117 = t1156 * t357 - t1072;
t772 = t1137 * t384 + t1188 * t292;
t690 = t696 + t772;
t3 = -t1049 / 0.2e1 + t690 + t1151;
t807 = -qJD(1) * t3 - qJD(2) * t117;
t118 = t357 * t804 + t1071;
t771 = t1137 * t1197 + t1185 * t292;
t689 = t697 + t771;
t6 = -t1047 / 0.2e1 + t689 + t1152;
t806 = -qJD(1) * t6 - qJD(2) * t118;
t119 = t1156 * t383 - t1072;
t9 = -t1041 / 0.2e1 + t690 + t1153;
t805 = -qJD(1) * t9 - qJD(2) * t119;
t33 = -t977 - t1192;
t803 = qJD(1) * t33;
t758 = t850 + t1181 / 0.2e1;
t105 = t758 + t1191;
t34 = -t979 + t1194;
t802 = -qJD(1) * t34 + qJD(2) * t105;
t19 = qJD(2) * t63 - t1221;
t12 = -t1039 / 0.2e1 + t689 + t1154;
t120 = t383 * t804 + t1071;
t801 = -qJD(1) * t12 - qJD(2) * t120;
t762 = t1109 * t557 + t1111 * t554;
t15 = (t1139 - t323 / 0.2e1) * t596 - (t324 / 0.2e1 + t291 / 0.2e1) * t754 + (t1120 + t1165) * t555 + (t1187 + t1186) * t552 + t762;
t800 = t15 * qJD(1);
t25 = qJD(1) * t63 - t1211;
t799 = qJD(2) * t71 + t1221;
t798 = qJD(1) * t71 + t1211;
t196 = -t430 * t754 + t1067;
t708 = t1114 * t358 + t1118 * t430 + t1159;
t52 = (t1109 + t1145) * t684 + t708 - t965;
t797 = -qJD(1) * t52 - qJD(2) * t196;
t197 = -t430 * t596 - t1068;
t767 = t1112 * t358 + t1116 * t430;
t50 = t818 + t767 + t1205;
t796 = qJD(1) * t50 - qJD(2) * t197;
t220 = -t473 * t754 + t1067;
t732 = t467 - t768;
t766 = t1114 * t395 + t1118 * t473;
t57 = t732 - t766 + t826;
t795 = qJD(1) * t57 - qJD(2) * t220;
t221 = -t473 * t596 - t1068;
t765 = t1113 * t395 + t1117 * t473;
t55 = -t765 + t1005 + t1205;
t794 = qJD(1) * t55 - qJD(2) * t221;
t410 = -t1103 * t754 + t596 * t663;
t736 = -t552 * t891 + t467;
t85 = (t1113 * t882 - t754 * t890 + t835) * t684 + t736 + t810;
t793 = qJD(1) * t85 - qJD(2) * t410;
t411 = t1103 * t596 + t663 * t754;
t84 = t1103 * t1117 + (t1114 * t882 + t596 * t890 + t889) * t684 + t1207;
t792 = qJD(1) * t84 - qJD(2) * t411;
t790 = t837 * t684;
t738 = -t895 / 0.2e1 - t662 / 0.2e1 + t1145;
t776 = t1140 + t824;
t150 = t552 * t738 + t555 * t776;
t167 = t596 * t776 - t738 * t754;
t789 = qJD(1) * t150 + qJD(2) * t167;
t335 = t552 ^ 2 - t1146;
t126 = qJD(1) * t335 + qJD(2) * t193;
t396 = t754 ^ 2 - t591;
t143 = qJD(1) * t193 + qJD(2) * t396;
t366 = t1119 + t993 / 0.2e1;
t251 = qJD(1) * t366;
t148 = t1012 - t879 / 0.2e1 + t739;
t788 = qJD(3) * t148 + qJD(4) * t308;
t787 = -qJD(3) * t324 + qJD(4) * t148;
t781 = t1090 / 0.2e1 - t1094 / 0.2e1;
t778 = t1141 * t324 + t1144 * t323;
t777 = qJ(5) * t1186 + t1144 * t958;
t775 = -qJD(4) / 0.2e1 + t823;
t734 = t781 * t683;
t480 = t600 / 0.2e1 - t734;
t774 = pkin(2) * t933 - qJD(1) * t480;
t733 = t781 * t686;
t481 = -t603 / 0.2e1 + t733;
t773 = pkin(2) * t934 - qJD(1) * t481;
t764 = t1112 * t1197 + t1116 * t1156;
t763 = -t1112 * t384 + t1116 * t804;
t761 = -t1028 / 0.2e1 - t1001 / 0.2e1;
t760 = t1027 / 0.2e1 - t1002 / 0.2e1;
t712 = t1127 * t292 + t1134 * t351 + t1210;
t21 = t696 - t712;
t753 = qJD(1) * t21 - t351 * t937;
t713 = t1105 * t1196 + t1131 * t292 + t1136 * t351;
t22 = t697 - t713;
t752 = qJD(1) * t22 + qJD(2) * t1071;
t74 = t815 + t1159;
t751 = qJD(1) * t74 + t425 * t936;
t749 = t686 * t790;
t68 = qJD(2) * t128 - t1208;
t72 = qJD(1) * t128 + t1176;
t748 = -qJD(2) * t129 - t1208;
t747 = -qJD(1) * t129 + t1176;
t132 = t596 * t783 + t467 + t810;
t746 = qJD(1) * t132 - t596 * t935;
t133 = -t754 * t782 + t1207;
t745 = qJD(1) * t133 - t754 * t935;
t157 = t849 - t763;
t744 = -qJD(1) * t157 + t804 * t936;
t158 = t847 - t764;
t743 = -qJD(1) * t158 + t1156 * t936;
t306 = t1107 - t322;
t742 = qJD(1) * t306 - t873;
t168 = qJD(2) * t322 - t875;
t199 = -qJD(1) * t322 - t873;
t582 = (t677 / 0.2e1 - t679 / 0.2e1) * t684;
t740 = -qJD(1) * t582 + t872;
t735 = t1214 * t1197;
t729 = qJD(1) * t683 * t990 + qJD(2) * t582;
t594 = t637 * t678;
t728 = qJD(1) * t594 + 0.2e1 * t830;
t702 = (t1108 * t291 + t290 * t896) * pkin(3) + t308 * t1111 + t309 * t1109;
t28 = t702 + t778;
t532 = (t1104 * t649 + t662 * t682) * pkin(3);
t701 = (t1108 * t842 + t896 * t958) * pkin(3) + t842 * t1111 + t958 * t1109;
t92 = t701 + t777;
t726 = t28 * qJD(1) + t92 * qJD(2) + t532 * qJD(3);
t711 = t1105 * t578 - t761;
t42 = t711 + t977;
t725 = qJD(1) * t42 - qJD(3) * t578;
t352 = pkin(3) * t848 - t685 * t843 + t887;
t37 = -t761 - t1193;
t724 = -qJD(1) * t37 - qJD(3) * t352;
t353 = pkin(3) * t828 + (t1140 - t824) * t681 + t844;
t38 = -t760 + t1195;
t723 = -qJD(1) * t38 - qJD(3) * t353;
t710 = t1105 * t579 - t760;
t43 = t710 + t979;
t722 = qJD(1) * t43 - qJD(3) * t579;
t719 = t771 - t697;
t718 = t772 - t696;
t676 = qJ(5) * qJD(5);
t655 = -t909 / 0.2e1;
t654 = t909 / 0.2e1;
t653 = -t908 / 0.2e1;
t652 = t908 / 0.2e1;
t636 = t649 * qJD(5);
t590 = t623 * qJ(5);
t589 = t823 * t684;
t568 = t582 * qJD(3);
t559 = t685 * t907 - t956;
t558 = t681 * t907 - t957;
t549 = t775 * t684;
t524 = t685 * t836 - t956;
t523 = t681 * t836 - t957;
t508 = (qJD(6) / 0.2e1 + t775) * t684;
t443 = t555 * t928;
t419 = t648 + t603 / 0.2e1 + t733;
t418 = t898 - t600 / 0.2e1 - t734;
t417 = t1105 * t596 + t687 * t731;
t416 = -t1105 * t754 + t687 * t730;
t356 = qJD(2) * t591 + t596 * t938;
t355 = t1003 / 0.2e1 - t887 / 0.2e1 + t991 / 0.2e1 + t750 / 0.2e1 + (-t878 / 0.2e1 + t848) * pkin(3);
t354 = -t1029 / 0.2e1 - t1015 / 0.2e1 + (t828 - t1014 / 0.2e1) * pkin(3) - t844;
t328 = qJD(2) * t414 - t555 * t907;
t327 = qJD(2) * t415 - t552 * t907;
t314 = t1018 + 0.2e1 * t1119;
t307 = t1107 + t322;
t305 = -t841 - t404;
t304 = t754 * t904 - t405;
t176 = t417 * qJD(2) + t555 * t623;
t175 = t416 * qJD(2) + t552 * t623;
t166 = -t1036 / 0.2e1 + t1033 / 0.2e1 - t1043 / 0.2e1 - t1097 / 0.2e1 + (t1104 * t1115 + t1108 * t596) * pkin(3);
t160 = t849 + t763;
t159 = t847 + t764;
t149 = -t1037 / 0.2e1 - t1034 / 0.2e1 - t1045 / 0.2e1 + t1099 / 0.2e1 + (t1108 * t555 - t552 * t896) * pkin(3);
t142 = t145 * qJD(3);
t137 = t145 * qJD(4);
t135 = t466 + t831;
t131 = t692 + t817;
t107 = 0.2e1 * t1191;
t106 = t758 - t1191;
t104 = 0.2e1 * t850 + t1181;
t99 = -0.2e1 * t1170;
t98 = qJD(3) * t1095 - t953;
t97 = qJD(6) * t366 + t1212;
t93 = -t1095 * t904 + t953;
t91 = t701 - t777;
t87 = t555 * t891 + t596 * t838 + t684 * t889 + t134;
t86 = t684 * t835 - t754 * t838 - t736 + t831;
t75 = t732 + t815;
t65 = t314 * qJD(6) + t1197 * t623 + t1215;
t64 = -t384 * t623 - t1178 + t1216;
t58 = t766 + t826 + t1159;
t56 = t765 + t1005 + t1206;
t53 = t1107 * t662 + t708 - t815;
t51 = t818 - t767 + t1206;
t45 = -t710 + t979;
t44 = -t711 + t977;
t40 = -t761 + t1193;
t39 = -t760 - t1195;
t36 = -t977 + t1192;
t35 = -t979 - t1194;
t27 = t702 - t778;
t24 = t696 + t712;
t23 = t697 + t713;
t18 = t1112 * t309 + t1114 * t308 - t1150 + t780 + t834;
t16 = t1112 * t323 + t1115 * t324 + t1116 * t958 - t1198 + t762 + t834;
t11 = t1039 / 0.2e1 + t719 + t1154;
t10 = t1041 / 0.2e1 + t718 + t1153;
t8 = t1120 * t291 + t1165 * t308 + t1186 * t309 + t1187 * t290 - t769 + t779;
t5 = t1047 / 0.2e1 + t719 + t1152;
t4 = t1049 / 0.2e1 + t718 + t1151;
t2 = -t700 + t770;
t20 = [0, 0, 0, t865, t638 * qJD(2), 0, 0, 0, -pkin(1) * t908, -pkin(1) * t906, -t678 * t866 + t679 * t865, -qJD(3) * t594 - 0.2e1 * t687 * t830, -qJD(2) * t598 + t684 * t870, qJD(2) * t595 + t684 * t869, -t865, -qJD(2) * t333 - qJD(3) * t451, qJD(2) * t334 + qJD(3) * t450 (qJD(2) * t557 - t552 * t904) * t555, qJD(2) * t287 + t335 * t904, -t392 * qJD(2) + t1161 * t552, -t391 * qJD(2) + t1161 * t555, -t865, -qJD(2) * t80 - qJD(3) * t153 - qJD(4) * t178, qJD(2) * t81 + qJD(3) * t154 + qJD(4) * t177, qJD(2) * t67 + qJD(3) * t78 + qJD(4) * t83 - t555 * t913, qJD(2) * t48 + qJD(3) * t54 + qJD(4) * t49 + t687 * t913, -qJD(2) * t66 - qJD(3) * t79 - qJD(4) * t82 + qJD(5) * t514, qJD(2) * t41 + qJD(3) * t47 + qJD(4) * t46 - qJD(5) * t136 -(qJD(2) * t390 - t735) * t384, qJD(2) * t112 + t1214 * t152, t211 * qJD(2) - t687 * t735, t210 * qJD(2) + (t1178 - t1184) * t687, -t865, qJD(2) * t13 + qJD(3) * t31 + qJD(4) * t29 + qJD(5) * t302 + qJD(6) * t60, -qJD(2) * t14 - qJD(3) * t32 - qJD(4) * t30 + qJD(5) * t303 - qJD(6) * t59; 0, 0, 0, t864, t910, t906, -t908, 0, -pkin(7) * t906 - t894, pkin(7) * t908 - t893, -t568 + (t679 * t909 + t872) * t687, t1148 * t687 - 0.2e1 * t684 * t866, t683 * t908 - t911, t871 + t912, -t589, -t916 + (t683 * t821 - t897) * qJD(2) + t419 * qJD(3), t915 + (t686 * t821 + t899) * qJD(2) + t418 * qJD(3) (t936 + t938) * t557 + t975, t919 + (-t554 * t596 + t557 * t754) * qJD(2) + t980, t416 * t904 + t596 * t908 - t941, t417 * t904 + t754 * t908 - t942, -t549, -t987 + (t554 * t663 - t604 * t754 - t1056) * qJD(2) + t86 * qJD(3) + t135 * qJD(4), t986 + (t557 * t663 + t596 * t604 - t1052) * qJD(2) + t87 * qJD(3) + t134 * qJD(4), t1030 + (-t346 * t754 + t425 * t554 - t1056) * qJD(2) + t53 * qJD(3) + t58 * qJD(4) + t307 * qJD(5), t1060 + (t295 * t754 + t300 * t596 - t554 * t958 + t557 * t842) * qJD(2) + t16 * qJD(3) + t18 * qJD(4) + t416 * qJD(5), -t1035 + (-t346 * t596 - t425 * t557 + t1052) * qJD(2) + t51 * qJD(3) + t56 * qJD(4) + t443, t1070 + (t295 * t958 + t300 * t842 + t346 * t425) * qJD(2) + t2 * qJD(3) + t8 * qJD(4) + t75 * qJD(5) (t937 - t943) * t390 + t886, t924 + (-t1156 * t390 - t387 * t804) * qJD(2) + t901, -t1214 * t265 - t804 * t908 + t947, t1156 * t908 - t1214 * t263 + t948, -t508, t1086 + (t1156 * t293 + t1196 * t684 + t351 * t387) * qJD(2) + t4 * qJD(3) + t10 * qJD(4) + t159 * qJD(5) + t24 * qJD(6), -t1085 + (t235 * t684 + t293 * t804 + t351 * t390) * qJD(2) + t5 * qJD(3) + t11 * qJD(4) + t160 * qJD(5) + t23 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t729, -t728, t683 * t790, t749, t652, qJD(2) * t419 - qJD(3) * t534 - t939, qJD(2) * t418 + qJD(3) * t533 + t940, t168, t126, t175, t176, t652, qJD(2) * t86 - t952 + t984, qJD(2) * t87 + t787 + t951, qJD(2) * t53 + t1088 + t984, t1050 + t16 * qJD(2) + (-t1034 - t1037) * qJD(3) + t149 * qJD(4) - t913, qJD(2) * t51 - t787 - t927 - t988, t1061 + t2 * qJD(2) + (t323 * t662 + t324 * t649) * qJD(3) + t27 * qJD(4) + t131 * qJD(5), t68, t19, t65, t64, t652, qJD(2) * t4 + qJD(3) * t114 + qJD(4) * t44 + qJD(6) * t36 + t1078 - t868, qJD(2) * t5 + qJD(3) * t115 + qJD(4) * t45 + qJD(6) * t35 - t1077 - t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, t126, t175, t176, t652, qJD(2) * t135 - t949 + t983, qJD(2) * t134 + t788 + t950, qJD(2) * t58 + t1087 + t983, qJD(2) * t18 + qJD(3) * t149 + qJD(4) * t813 + t1059 - t913, qJD(2) * t56 - t788 - t927 - t985, t1062 + t8 * qJD(2) + t27 * qJD(3) + (-pkin(4) * t309 - qJ(5) * t308) * qJD(4) + t290 * qJD(5), t68, t19, t65, t64, t652, qJD(2) * t10 + qJD(3) * t44 + qJD(4) * t94 + qJD(6) * t40 + t1083 - t868, qJD(2) * t11 + qJD(3) * t45 + qJD(4) * t95 + qJD(6) * t39 - t1081 - t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t307 - t875, t175, -t1173, qJD(2) * t75 + qJD(3) * t131 + qJD(4) * t290 - t923, 0, 0, 0, 0, 0, t159 * qJD(2) - t1161 * t681 + t918, t160 * qJD(2) - t1161 * t685 + t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t748, t799, -t1197 * t836 + t314 * t904 - t1215, t384 * t836 - t1184 - t1216, t653, qJD(2) * t24 + qJD(3) * t36 + qJD(4) * t40 - qJD(6) * t90 + t1042, qJD(2) * t23 + qJD(3) * t35 + qJD(4) * t39 + qJD(6) * t89 - t1044; 0, 0, 0, -t864, -t910, 0, 0, 0, t894, t893, -t679 * t864 - t568, 0.2e1 * t683 * t749, -t869 + t911, t870 - t912, t589, qJD(3) * t481 + t916, qJD(3) * t480 - t915, -t557 * t938 + t975, -t919 + t980, -t415 * t904 + t941, -t414 * t904 + t942, t549, -qJD(3) * t85 - qJD(4) * t132 + t987, -qJD(3) * t84 - qJD(4) * t133 - t986, qJD(3) * t52 - qJD(4) * t57 - qJD(5) * t306 - t1030, -qJD(3) * t15 - qJD(4) * t17 - qJD(5) * t415 - t1060, -qJD(3) * t50 - qJD(4) * t55 + t1035 + t443, -qJD(3) * t1 - qJD(4) * t7 - qJD(5) * t74 - t1070, t390 * t943 + t886, t901 - t924, -t1214 * t261 - t947, -t1214 * t260 - t948, t508, qJD(3) * t3 + qJD(4) * t9 - qJD(5) * t158 - qJD(6) * t21 - t1086, qJD(3) * t6 + qJD(4) * t12 - qJD(5) * t157 - qJD(6) * t22 + t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t866, t637 * qJD(3), 0, 0, 0, -pkin(2) * t932, -pkin(2) * t931, t754 * t841, t904 * t396, 0, 0, 0, qJD(3) * t410 + t596 * t929, qJD(3) * t411 + t754 * t929, qJD(3) * t196 + qJD(4) * t220 + t576 * t596, 0, qJD(3) * t197 + qJD(4) * t221 + qJD(5) * t591, qJD(3) * t113 + qJD(4) * t116 - t425 * t928, t1172 * t804, t1214 * t181, 0, 0, 0, qJD(3) * t117 + qJD(4) * t119 + t1156 * t928 + t351 * t925, qJD(3) * t118 + qJD(4) * t120 - t351 * t926 + t804 * t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t740, t1148, -t837 * t686, t837 * t683, t655, -pkin(8) * t931 - t773, pkin(8) * t932 - t774, -t199, t143, t304, t305, t655, -t793 - t1147, t1167 - t792, -t797 - t1147 (t1033 - t1036) * qJD(3) + t166 * qJD(4) + t576 - t800, -t1167 - t796 (-t649 * t842 + t662 * t958) * qJD(3) + t91 * qJD(4) + t1157 + t809, t72, t25, t77, t76, t655, -qJD(3) * t235 + qJD(4) * t99 + t1220 - t807, qJD(3) * t1196 + qJD(4) * t107 + qJD(6) * t106 - t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, t143, t304, t305, t655, -t746 - t1147, -t745 + t1167, -t795 - t1147, -t1084 + t166 * qJD(3) + (-t1043 - t1097) * qJD(4) + t576, -t1167 - t794, t91 * qJD(3) + (-pkin(4) * t958 - qJ(5) * t842) * qJD(4) + t1157 + t808, t72, t25, t77, t76, t655, qJD(3) * t99 - qJD(4) * t235 + t1220 - t805, qJD(3) * t107 + qJD(4) * t1196 + qJD(6) * t104 - t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t742, t304, t356, -t751 + t1147, 0, 0, 0, 0, 0, t743, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t747, t798, -t77, -t76, t654, -qJD(6) * t235 + t1219 * t904 - t753, qJD(3) * t106 + qJD(4) * t104 + qJD(6) * t1196 - t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t729, t728 (-t683 * t909 + t933) * t687 (-t874 - t934) * t687, t652, -qJD(2) * t481 + t939, -qJD(2) * t480 - t940, -t168, -t126, t327, t328, t652, qJD(2) * t85 + t137 + t952, qJD(2) * t84 + t920 - t951, -qJD(2) * t52 - t1088 + t137, qJD(2) * t15 + qJD(4) * t150 - t1050, qJD(2) * t50 - t920 - t927 + t988, qJD(2) * t1 + qJD(4) * t28 - qJD(5) * t130 - t1061, -t68, -t19, t97, -t1213, t652, -qJD(2) * t3 - qJD(4) * t42 - qJD(6) * t33 - t1078 - t868, -qJD(2) * t6 - qJD(4) * t43 - qJD(6) * t34 + t1077 - t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t740, -t1148, t686 * t907, -t683 * t907, t654, t773, t774, t199, -t143, t405, t404, t654, t793, t792, t797, qJD(4) * t167 + t800, t796, qJD(4) * t92 - t809, -t72, -t25, -t1217, -t1218, t654, t807, qJD(6) * t105 + t806; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t892, -t667, -t892, 0, t905, qJD(4) * t532 + t636, 0, 0, 0, 0, 0, qJD(6) * t542 + t960, -qJD(6) * t541 + t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, -t667 + t885, t93, t789, -t885 + t905 (-pkin(4) * t682 + qJ(5) * t1104) * t1089 + t636 + t726, 0, 0, 0, 0, 0, qJD(6) * t355 - t725 + t960, qJD(6) * t354 - t722 + t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, t649 * t904 - t954, 0, 0, 0, 0, 0, -t558, -t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, 0, qJD(4) * t355 + t542 * t903 - t803, qJD(4) * t354 - t541 * t903 + t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t168, -t126, t327, t328, t652, qJD(2) * t132 - t142 + t949, qJD(2) * t133 - t921 - t950, qJD(2) * t57 - t1087 - t142, qJD(2) * t17 - qJD(3) * t150 - t1059, qJD(2) * t55 + t921 - t927 + t985, -qJ(5) * t927 + qJD(2) * t7 - qJD(3) * t28 - t1062, -t68, -t19, t97, -t1213, t652, -qJD(2) * t9 + qJD(3) * t42 - qJD(6) * t37 - t1083 - t868, -qJD(2) * t12 + qJD(3) * t43 - qJD(6) * t38 + t1081 - t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, -t143, t405, t404, t654, t746, t745, t795, -qJD(3) * t167 + t1084, t794, -qJD(3) * t92 - t808, -t72, -t25, -t1217, -t1218, t654, t805, t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t885, t98, -t789, qJD(5) + t885, t676 - t726, 0, 0, 0, 0, 0, -qJD(6) * t352 + t668 + t725, -qJD(6) * t353 + t671 + t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t676, 0, 0, 0, 0, 0, qJD(6) * t608 + t668, -qJD(6) * t607 + t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, -t590, 0, 0, 0, 0, 0, -t558, -t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, 0, t608 * t902 + t724, -t607 * t902 + t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t306 + t875, t327, t1173, qJD(2) * t74 + qJD(3) * t130 + t687 * t955 + t923, 0, 0, 0, 0, 0, t158 * qJD(2) + t681 * t812 - t918, t157 * qJD(2) + t685 * t812 - t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t742, t405, -t356, t751, 0, 0, 0, 0, 0, -t743, -t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, -qJD(3) * t649 + t954 - t955, 0, 0, 0, 0, 0, t523, t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, t590, 0, 0, 0, 0, 0, t523, t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t523, -t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t748, -t799, -t366 * t904 - t1212, t1213, t653, qJD(2) * t21 + qJD(3) * t33 + qJD(4) * t37 - t1042 + t868, qJD(2) * t22 + qJD(3) * t34 + qJD(4) * t38 + t1044 + t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t747, -t798, t1217, t1218, t655, t753, -qJD(3) * t105 + t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, 0, 0, -qJD(3) * t542 + qJD(4) * t352 - t668 + t803, qJD(3) * t541 + qJD(4) * t353 - t671 - t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, 0, 0, -qJD(4) * t608 - t668 - t724, qJD(4) * t607 - t671 - t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
