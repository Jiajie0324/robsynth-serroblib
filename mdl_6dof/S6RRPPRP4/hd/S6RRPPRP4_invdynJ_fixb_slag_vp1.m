% Calculate vector of inverse dynamics joint torques for
% S6RRPPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPPRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPPRP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:37:07
% EndTime: 2019-03-09 08:39:40
% DurationCPUTime: 144.88s
% Computational Cost: add. (33662->1517), mult. (89967->1833), div. (0->0), fcn. (95352->8), ass. (0->661)
t1382 = Icges(4,1) + Icges(5,1);
t1381 = Icges(4,4) - Icges(5,5);
t1380 = Icges(5,4) + Icges(4,5);
t1395 = Icges(4,2) + Icges(5,3);
t1377 = Icges(4,6) - Icges(5,6);
t1336 = Icges(6,4) - Icges(7,5);
t1387 = Icges(5,2) + Icges(4,3);
t1298 = Icges(6,1) + Icges(7,1);
t1335 = Icges(7,4) + Icges(6,5);
t1297 = Icges(6,2) + Icges(7,3);
t1394 = Icges(7,2) + Icges(6,3);
t1334 = Icges(6,6) - Icges(7,6);
t722 = sin(qJ(2));
t723 = sin(qJ(1));
t1065 = t722 * t723;
t724 = cos(qJ(2));
t1062 = t723 * t724;
t719 = sin(pkin(9));
t720 = cos(pkin(9));
t725 = cos(qJ(1));
t584 = t1062 * t719 + t720 * t725;
t1060 = t725 * t719;
t585 = t1062 * t720 - t1060;
t1322 = -t1065 * t1377 - t1381 * t585 + t1395 * t584;
t1393 = t1380 * t1065 - t1381 * t584 + t1382 * t585;
t1392 = -t1381 * t720 + t1395 * t719;
t1391 = -t1377 * t719 + t1380 * t720;
t1390 = -t1381 * t719 + t1382 * t720;
t1138 = cos(qJ(5));
t721 = sin(qJ(5));
t401 = -t1138 * t584 + t585 * t721;
t402 = t1138 * t585 + t584 * t721;
t181 = Icges(6,5) * t402 - Icges(6,6) * t401 - Icges(6,3) * t1065;
t184 = Icges(7,4) * t402 - Icges(7,2) * t1065 + Icges(7,6) * t401;
t1332 = t181 + t184;
t1064 = t722 * t725;
t1063 = t723 * t720;
t586 = t1060 * t724 - t1063;
t1061 = t724 * t725;
t587 = t1061 * t720 + t719 * t723;
t405 = -t1138 * t586 + t587 * t721;
t406 = t1138 * t587 + t586 * t721;
t183 = Icges(6,5) * t406 - Icges(6,6) * t405 - Icges(6,3) * t1064;
t186 = Icges(7,4) * t406 - Icges(7,2) * t1064 + Icges(7,6) * t405;
t1356 = t183 + t186;
t1101 = Icges(7,5) * t405;
t192 = Icges(7,1) * t406 - Icges(7,4) * t1064 + t1101;
t369 = Icges(6,4) * t405;
t195 = Icges(6,1) * t406 - Icges(6,5) * t1064 - t369;
t1250 = -t195 - t192;
t367 = Icges(7,5) * t406;
t180 = -Icges(7,6) * t1064 + Icges(7,3) * t405 + t367;
t1106 = Icges(6,4) * t406;
t189 = -Icges(6,2) * t405 - Icges(6,6) * t1064 + t1106;
t1252 = t180 - t189;
t1359 = t1250 * t402 - t1252 * t401;
t1102 = Icges(7,5) * t401;
t191 = -Icges(7,1) * t402 + Icges(7,4) * t1065 - t1102;
t368 = Icges(6,4) * t401;
t193 = Icges(6,1) * t402 - Icges(6,5) * t1065 - t368;
t1251 = t193 - t191;
t366 = Icges(7,5) * t402;
t178 = -Icges(7,6) * t1065 + Icges(7,3) * t401 + t366;
t1107 = Icges(6,4) * t402;
t188 = Icges(6,2) * t401 + Icges(6,6) * t1065 - t1107;
t1253 = t178 + t188;
t1360 = -t1251 * t406 - t1253 * t405;
t1389 = (t1332 * t725 + t1356 * t723) * t722 + t1359 + t1360;
t1284 = -t1250 * t406 + t1252 * t405;
t1358 = t1251 * t402 + t1253 * t401;
t1388 = -(t1332 * t723 - t1356 * t725) * t722 - t1284 + t1358;
t1321 = -t1064 * t1377 - t1381 * t587 + t1395 * t586;
t1320 = t1065 * t1387 - t1377 * t584 + t1380 * t585;
t1319 = t1064 * t1387 - t1377 * t586 + t1380 * t587;
t1317 = t1380 * t1064 - t1381 * t586 + t1382 * t587;
t799 = t1138 * t720 + t719 * t721;
t1196 = t799 * t722;
t1386 = t1336 * t1196;
t1067 = t720 * t722;
t938 = t1138 * t719;
t897 = t722 * t938;
t551 = t1067 * t721 - t897;
t1385 = t1336 * t551;
t1245 = t1297 * t551 - t1334 * t724 - t1386;
t1363 = t1196 * t1335 - t1334 * t551 + t1394 * t724;
t1243 = t1196 * t1298 + t1335 * t724 - t1385;
t1316 = t1377 * t724 + t1392 * t722;
t1290 = -t1387 * t724 + t1391 * t722;
t1315 = -t1380 * t724 + t1390 * t722;
t1384 = t1322 * t584 + t1393 * t585;
t1296 = t1065 * t1319 + t1317 * t585 + t1321 * t584;
t710 = Icges(3,4) * t724;
t843 = -Icges(3,2) * t722 + t710;
t534 = Icges(3,6) * t723 + t725 * t843;
t1109 = Icges(3,4) * t722;
t637 = Icges(3,1) * t724 - t1109;
t536 = Icges(3,5) * t723 + t637 * t725;
t464 = t536 * t1062;
t633 = Icges(3,5) * t724 - Icges(3,6) * t722;
t532 = Icges(3,3) * t723 + t633 * t725;
t910 = t532 * t725 - t464;
t247 = -t1065 * t534 - t910;
t1222 = t247 + t1296;
t1383 = -t1322 * t586 - t1393 * t587;
t1376 = -t1064 * t1320 + t1383;
t1375 = t1064 * t1319 + t1317 * t587 + t1321 * t586;
t1237 = -t1377 * t722 + t1392 * t724;
t1374 = t1387 * t722 + t1391 * t724;
t1236 = t1380 * t722 + t1390 * t724;
t1094 = Icges(3,3) * t725;
t531 = Icges(3,5) * t1062 - Icges(3,6) * t1065 - t1094;
t1097 = Icges(3,6) * t725;
t533 = Icges(3,4) * t1062 - Icges(3,2) * t1065 - t1097;
t1073 = t533 * t722;
t1104 = Icges(3,5) * t725;
t683 = Icges(3,4) * t1065;
t535 = Icges(3,1) * t1062 - t1104 - t683;
t821 = -t535 * t724 + t1073;
t1223 = t1065 * t1320 - t531 * t725 - t723 * t821 + t1384;
t991 = qJD(2) * t725;
t932 = t722 * t991;
t432 = qJD(1) * t584 + t719 * t932;
t433 = -qJD(1) * t585 - t720 * t932;
t159 = qJD(5) * t406 + t1138 * t432 + t433 * t721;
t160 = -qJD(5) * t405 + t1138 * t433 - t432 * t721;
t930 = t724 * t991;
t997 = qJD(1) * t723;
t937 = t722 * t997;
t781 = -t930 + t937;
t88 = Icges(7,5) * t160 + Icges(7,6) * t781 + Icges(7,3) * t159;
t94 = Icges(6,4) * t160 - Icges(6,2) * t159 + Icges(6,6) * t781;
t1373 = t88 - t94;
t993 = qJD(2) * t723;
t933 = t722 * t993;
t628 = t719 * t933;
t995 = qJD(1) * t725;
t935 = t724 * t995;
t434 = t719 * t935 - t720 * t997 - t628;
t435 = qJD(1) * t587 - t720 * t933;
t161 = qJD(5) * t402 - t1138 * t434 + t435 * t721;
t162 = -qJD(5) * t401 + t1138 * t435 + t434 * t721;
t992 = qJD(2) * t724;
t1337 = t723 * t992;
t591 = t722 * t995 + t1337;
t89 = Icges(7,5) * t162 - Icges(7,6) * t591 + Icges(7,3) * t161;
t95 = Icges(6,4) * t162 - Icges(6,2) * t161 - Icges(6,6) * t591;
t1372 = -t89 + t95;
t90 = Icges(6,5) * t160 - Icges(6,6) * t159 + Icges(6,3) * t781;
t92 = Icges(7,4) * t160 + Icges(7,2) * t781 + Icges(7,6) * t159;
t1371 = -t90 - t92;
t91 = Icges(6,5) * t162 - Icges(6,6) * t161 - Icges(6,3) * t591;
t93 = Icges(7,4) * t162 - Icges(7,2) * t591 + Icges(7,6) * t161;
t1370 = t91 + t93;
t96 = Icges(7,1) * t160 + Icges(7,4) * t781 + Icges(7,5) * t159;
t98 = Icges(6,1) * t160 - Icges(6,4) * t159 + Icges(6,5) * t781;
t1369 = t96 + t98;
t97 = Icges(7,1) * t162 - Icges(7,4) * t591 + Icges(7,5) * t161;
t99 = Icges(6,1) * t162 - Icges(6,4) * t161 - Icges(6,5) * t591;
t1368 = -t97 - t99;
t1193 = -t1064 * t1363 + t1243 * t406 + t1245 * t405;
t1066 = t720 * t724;
t553 = t721 * t1066 - t724 * t938;
t349 = qJD(2) * t553 + qJD(5) * t1196;
t554 = t799 * t724;
t986 = qJD(5) * t722;
t350 = (-t720 * t721 + t938) * t986 + qJD(2) * t554;
t994 = qJD(2) * t722;
t1366 = t1297 * t349 + t1334 * t994 - t1336 * t350;
t1365 = -t1334 * t349 + t1335 * t350 - t1394 * t994;
t1364 = t1298 * t350 - t1335 * t994 - t1336 * t349;
t1287 = t1315 * t720 + t1316 * t719;
t1351 = t1317 * t720 + t1321 * t719;
t1194 = -t1065 * t1363 + t1243 * t402 + t1245 * t401;
t1362 = -t1322 * t719 - t1393 * t720;
t1314 = t1375 * t723 + t1376 * t725;
t1036 = -t535 * t1061 - t723 * t531;
t248 = -t1064 * t533 - t1036;
t1035 = t536 * t1061 + t723 * t532;
t249 = -t1064 * t534 + t1035;
t1361 = -t248 * t725 + t249 * t723 + t1314;
t632 = Icges(3,5) * t722 + Icges(3,6) * t724;
t1070 = t632 * t725;
t634 = Icges(3,2) * t724 + t1109;
t636 = Icges(3,1) * t722 + t710;
t817 = t634 * t722 - t636 * t724;
t1274 = t1065 * t1290 + t1315 * t585 + t1316 * t584 - t723 * t817 - t1070;
t1071 = t632 * t723;
t1273 = t1064 * t1290 + t1315 * t587 + t1316 * t586 - t725 * t817 + t1071;
t1343 = -t1065 * t1332 + t1358;
t1342 = -t1065 * t1356 - t1359;
t1341 = -t1064 * t1332 - t1360;
t1340 = -t1064 * t1356 + t1284;
t1331 = t1377 * t781 - t1381 * t433 - t1395 * t432;
t1330 = t1377 * t591 + t1381 * t435 - t1395 * t434;
t1329 = t1377 * t432 + t1380 * t433 - t1387 * t781;
t1328 = t1377 * t434 - t1380 * t435 - t1387 * t591;
t1327 = -t1380 * t781 + t1381 * t432 + t1382 * t433;
t1326 = -t1380 * t591 + t1381 * t434 - t1382 * t435;
t1354 = t1237 * qJD(2);
t1353 = t1374 * qJD(2);
t1352 = t1236 * qJD(2);
t1350 = -t634 + t637 + t1290;
t1349 = t1363 * t724;
t1348 = t1222 * t723 - t1223 * t725;
t1260 = rSges(7,3) + qJ(6);
t1270 = rSges(7,1) + pkin(5);
t1052 = -rSges(7,2) * t1065 + t1260 * t401 + t1270 * t402;
t365 = qJD(6) * t405;
t985 = qJD(5) * t724;
t694 = qJD(1) + t985;
t1347 = t1052 * t694 - t365;
t1269 = t1064 * t1370 - t1251 * t160 - t1253 * t159 - t1332 * t781 + t1368 * t406 + t1372 * t405;
t1268 = t1371 * t1064 - t1250 * t160 + t1252 * t159 + t1356 * t781 + t1369 * t406 + t1373 * t405;
t1344 = t723 * pkin(7);
t1267 = t1065 * t1370 - t1251 * t162 - t1253 * t161 + t1332 * t591 + t1368 * t402 + t1372 * t401;
t1266 = t1371 * t1065 - t1250 * t162 + t1252 * t161 - t1356 * t591 + t1369 * t402 + t1373 * t401;
t1305 = -t1064 * t1365 + t1243 * t160 + t1245 * t159 + t1363 * t781 + t1364 * t406 + t1366 * t405;
t1304 = -t1065 * t1365 + t1243 * t162 + t1245 * t161 - t1363 * t591 + t1364 * t402 + t1366 * t401;
t1084 = t184 * t724;
t73 = -t1196 * t191 + t178 * t551 + t1084;
t1088 = t181 * t724;
t75 = t1196 * t193 + t188 * t551 + t1088;
t1339 = t73 + t75;
t1082 = t186 * t724;
t74 = t1196 * t192 + t180 * t551 + t1082;
t1086 = t183 * t724;
t76 = t1196 * t195 - t189 * t551 + t1086;
t1338 = t74 + t76;
t1333 = t1193 * t694;
t1192 = t1196 * t1243 + t1245 * t551 + t1349;
t963 = t722 * t1063;
t491 = t721 * t963 - t723 * t897;
t492 = t723 * t1196;
t1325 = -t1062 * t1394 + t1334 * t491 - t1335 * t492;
t962 = t720 * t1064;
t493 = t721 * t962 - t725 * t897;
t494 = t725 * t1196;
t1324 = -t1061 * t1394 + t1334 * t493 - t1335 * t494;
t1323 = -t1334 * t553 + t1335 * t554 - t1394 * t722;
t996 = qJD(1) * t724;
t414 = -t585 * pkin(3) - t584 * qJ(4);
t717 = t725 * pkin(7);
t1291 = t414 + t717;
t479 = t585 * pkin(4) - pkin(8) * t1065;
t795 = t1291 - t479;
t874 = t585 * rSges(5,1) + t584 * rSges(5,3);
t1313 = t1291 - t874;
t1312 = -t1351 * t723 - t1362 * t725;
t1311 = t1273 * qJD(1);
t1310 = t1274 * qJD(1);
t197 = rSges(6,1) * t402 - rSges(6,2) * t401 - rSges(6,3) * t1065;
t316 = rSges(6,1) * t1196 - rSges(6,2) * t551 + rSges(6,3) * t724;
t611 = t723 * t986 + t991;
t1309 = -t197 * t694 - t316 * t611;
t1308 = t1194 * t694;
t1307 = (-t636 - t843 - t1287 + t1374) * qJD(1);
t1045 = rSges(7,2) * t724 + t1196 * t1270 + t1260 * t551;
t1171 = t1260 * t405 + t1270 * t406;
t1050 = -rSges(7,2) * t1064 + t1171;
t983 = qJD(6) * t551;
t1053 = -rSges(7,2) * t994 + t1260 * t349 + t1270 * t350 + t983;
t1199 = rSges(7,2) * t937 + t1260 * t159 + t1270 * t160 + t365;
t1114 = -rSges(7,2) * t930 + t1199;
t980 = qJD(1) * qJD(2);
t621 = qJDD(2) * t723 + t725 * t980;
t977 = qJDD(5) * t722;
t411 = qJD(5) * t781 - t725 * t977 + t621;
t609 = -qJD(2) * t986 + qJDD(5) * t724 + qJDD(1);
t610 = -t725 * t986 + t993;
t1038 = t433 * pkin(4) + pkin(8) * t937;
t294 = -pkin(8) * t930 + t1038;
t573 = t587 * pkin(4);
t481 = -pkin(8) * t1064 + t573;
t561 = qJD(4) * t586;
t228 = t433 * pkin(3) - qJ(4) * t432 + t561;
t415 = t587 * pkin(3) + qJ(4) * t586;
t645 = t725 * pkin(1) + t1344;
t703 = pkin(7) * t995;
t1011 = qJD(1) * (-pkin(1) * t997 + t703) + qJDD(1) * t645;
t979 = qJD(2) * qJD(3);
t1226 = qJDD(3) * t722 + t724 * t979;
t989 = qJD(3) * t725;
t674 = t722 * t989;
t1006 = qJ(3) * t930 + t674;
t782 = -t723 * t996 - t932;
t352 = pkin(2) * t782 - qJ(3) * t937 + t1006;
t605 = pkin(2) * t1061 + qJ(3) * t1064;
t784 = qJDD(1) * t605 + t1011 + t1226 * t723 + (t352 + t674) * qJD(1);
t749 = qJD(1) * t228 + qJD(4) * t434 + qJDD(1) * t415 + qJDD(4) * t584 + t784;
t716 = t724 * pkin(2);
t1188 = t722 * qJ(3) + t716;
t990 = qJD(3) * t724;
t577 = qJD(2) * t1188 - t990;
t987 = qJD(4) * t719;
t663 = t722 * t987;
t1092 = qJ(4) * t719;
t869 = pkin(3) * t720 + t1092;
t1037 = -t869 * t992 - t577 - t663;
t677 = pkin(4) * t1066;
t1170 = -pkin(8) * t722 + t677;
t952 = -qJD(2) * t1170 + t1037;
t881 = qJD(2) * t952;
t1195 = t869 * t722;
t638 = pkin(2) * t722 - qJ(3) * t724;
t1014 = -t1195 - t638;
t618 = pkin(4) * t1067 + pkin(8) * t724;
t946 = -t618 + t1014;
t730 = qJD(1) * t294 + qJDD(1) * t481 + t621 * t946 + t723 * t881 + t749;
t7 = qJD(6) * t161 + qJDD(6) * t401 - t1045 * t411 + t1050 * t609 - t1053 * t610 + t1114 * t694 + t730;
t1306 = t7 - g(2);
t1263 = t1342 * t610 - t1343 * t611 + t1308;
t1262 = t1340 * t610 - t1341 * t611 + t1333;
t1303 = t1196 * t1364 + t1243 * t350 + t1245 * t349 - t1363 * t994 + t1365 * t724 + t1366 * t551;
t1289 = (t1196 * t1334 + t1335 * t551) * t694 + (-t1334 * t402 - t1335 * t401) * t611 + (t1334 * t406 + t1335 * t405) * t610;
t1225 = qJD(1) * t645;
t705 = qJD(3) * t722;
t672 = t723 * t705;
t1285 = -t1225 - t672;
t901 = qJD(1) * t605 - t638 * t993 - t1285;
t988 = qJD(4) * t584;
t1288 = -qJD(1) * t415 + t1195 * t993 - t901 - t988;
t344 = -rSges(5,2) * t1065 - t874;
t1068 = t719 * t724;
t1013 = -pkin(3) * t1066 - qJ(4) * t1068 - t1188;
t1286 = qJD(2) * (t1013 - t1170);
t1234 = -qJD(1) * t481 + t618 * t993 + t1288;
t984 = qJD(6) * t401;
t50 = -t1045 * t610 + t1050 * t694 - t1234 + t984;
t1280 = qJD(2) * t1348 + t1310;
t1279 = qJD(2) * t1361 + t1311;
t790 = qJD(2) * t634;
t373 = qJD(1) * t534 - t723 * t790;
t791 = qJD(2) * t636;
t375 = qJD(1) * t536 - t723 * t791;
t1278 = (-t373 - t1328) * t724 + (t1326 * t720 + t1330 * t719 - t375) * t722 + (-t1320 * t722 + t1362 * t724 + t821) * qJD(2);
t372 = -t725 * t790 + (-t723 * t843 + t1097) * qJD(1);
t374 = -t725 * t791 + (-t637 * t723 + t1104) * qJD(1);
t1072 = t534 * t722;
t820 = -t536 * t724 + t1072;
t1277 = (t372 - t1329) * t724 + (t1327 * t720 + t1331 * t719 + t374) * t722 + (t1319 * t722 + t1351 * t724 - t820) * qJD(2);
t1165 = t817 * qJD(1) + t633 * qJD(2);
t613 = t843 * qJD(2);
t614 = t637 * qJD(2);
t818 = t634 * t724 + t636 * t722;
t737 = qJD(1) * t632 - qJD(2) * t818 - t613 * t722 + t614 * t724;
t1276 = t1064 * t1353 + t1165 * t723 - t1290 * t781 + t1315 * t433 - t1316 * t432 + t1352 * t587 + t1354 * t586 + t737 * t725;
t1275 = t1065 * t1353 - t1165 * t725 + t1290 * t591 + t1315 * t435 + t1316 * t434 + t1352 * t585 + t1354 * t584 + t737 * t723;
t1221 = t248 - t1376;
t299 = t533 * t724 + t535 * t722;
t1219 = -t1320 * t724 - t1362 * t722 + t299;
t300 = t534 * t724 + t536 * t722;
t1218 = -t1319 * t724 + t1351 * t722 + t300;
t622 = -qJDD(2) * t725 + t723 * t980;
t412 = -qJD(5) * t591 - t723 * t977 + t622;
t1272 = t1193 * t609 + t1268 * t610 + t1269 * t611 + t1305 * t694 + t1340 * t411 + t1341 * t412;
t1271 = t1194 * t609 + t1266 * t610 + t1267 * t611 + t1304 * t694 + t1342 * t411 + t1343 * t412;
t17 = t1196 * t97 + t178 * t349 - t184 * t994 - t191 * t350 + t551 * t89 + t724 * t93;
t19 = t1196 * t99 - t181 * t994 + t188 * t349 + t193 * t350 - t551 * t95 + t724 * t91;
t1265 = -t17 - t19;
t18 = t1196 * t96 + t180 * t349 - t186 * t994 + t192 * t350 + t551 * t88 + t724 * t92;
t20 = t1196 * t98 - t183 * t994 - t189 * t349 + t195 * t350 - t551 * t94 + t724 * t90;
t1264 = t18 + t20;
t1261 = t1192 * t694 + t1338 * t610 - t1339 * t611;
t1249 = -t1062 * t1334 + t1297 * t491 - t1336 * t492;
t1248 = t1061 * t1334 - t1297 * t493 + t1336 * t494;
t1247 = t1062 * t1335 + t1298 * t492 - t1336 * t491;
t1246 = -t1061 * t1335 - t1298 * t494 + t1336 * t493;
t1244 = t1297 * t553 + t1334 * t722 - t1336 * t554;
t1242 = t1298 * t554 - t1335 * t722 - t1336 * t553;
t1241 = t1316 * t723;
t1240 = t1316 * t725;
t1239 = t1315 * t723;
t1238 = t1315 * t725;
t1235 = (-t1323 * t722 - t1349) * t694 + (t1325 * t722 + t1084 + t1088) * t611 + (-t1324 * t722 - t1082 - t1086) * t610;
t1233 = t1338 * t725 + t1339 * t723;
t1232 = t1338 * t723 - t1339 * t725;
t1231 = t1340 * t725 + t1341 * t723;
t1230 = t1340 * t723 - t1341 * t725;
t1229 = t1342 * t725 + t1343 * t723;
t1228 = t1342 * t723 - t1343 * t725;
t912 = t50 * t1045;
t602 = t1188 * t723;
t879 = t602 * t993 + t605 * t991 - t990;
t774 = -t414 * t993 + t415 * t991 + t663 + t879;
t758 = t479 * t993 + t481 * t991 + t774;
t34 = t1050 * t611 + t1052 * t610 + t758 + t983;
t913 = t34 * t1052;
t1227 = t912 - t913;
t712 = t722 * rSges(5,2);
t948 = -rSges(5,1) * t1066 - rSges(5,3) * t1068 + t1013 - t712;
t1189 = -t585 * rSges(4,1) + t584 * rSges(4,2);
t345 = -rSges(4,3) * t1065 + t1189;
t1220 = t249 + t1375;
t1217 = (qJD(2) * t1312 + t1307) * t722 + t1350 * t996;
t1159 = (-t634 * t725 + t536) * t723 - (-Icges(3,2) * t1062 + t535 - t683) * t725;
t767 = t533 * t725 - t534 * t723;
t1216 = -t1159 * t722 + (t1319 * t723 - t1320 * t725 + t767) * t724;
t1000 = qJD(1) * t532;
t789 = qJD(2) * t632;
t1166 = qJD(1) * t821 - t723 * t789 + t1000;
t1167 = -t725 * t789 + (-t633 * t723 + t1094 + t820) * qJD(1);
t738 = -qJD(2) * t300 - t372 * t722 + t374 * t724 + t1000;
t739 = qJD(1) * t531 - qJD(2) * t299 - t373 * t722 + t375 * t724;
t1215 = (t1328 * t1065 + t1166 * t725 - t1320 * t591 - t1322 * t434 + t1326 * t585 + t1330 * t584 - t1393 * t435) * t725 + (t738 * t723 + (-t1167 - t739) * t725 + t1319 * t591 + t1327 * t585 + t1331 * t584 + t1317 * t435 + t1321 * t434 + t1329 * t1065) * t723;
t1214 = (t1064 * t1328 + t1320 * t781 + t1322 * t432 + t1326 * t587 + t1330 * t586 - t1393 * t433 - t739 * t725) * t725 + (t1167 * t723 - t1319 * t781 + (-t1166 + t738) * t725 + t1327 * t587 + t1331 * t586 + t1317 * t433 - t1321 * t432 + t1329 * t1064) * t723;
t576 = t618 * t725;
t680 = qJ(3) * t1061;
t976 = pkin(2) * t1064;
t603 = t680 - t976;
t1015 = qJD(1) * t603 + t723 * t990;
t502 = t725 * t1195;
t775 = -qJD(1) * t502 - t663 * t723 + t1015;
t1209 = -qJD(1) * t576 + t1286 * t723 + t775;
t607 = t638 * t997;
t1026 = t1195 * t997 + t607;
t501 = t723 * t1195;
t676 = qJ(3) * t1062;
t600 = -pkin(2) * t1065 + t676;
t1029 = t501 - t600;
t575 = t618 * t723;
t675 = t724 * t989;
t814 = -t663 * t725 + t675;
t1202 = -t725 * t1286 - t814 - (t575 + t1029) * qJD(1) + t618 * t997 + t1026;
t1200 = pkin(7) * qJD(1);
t1198 = -t1260 * t161 - t1270 * t162 - t984;
t1018 = t561 + t674;
t815 = t946 * t991;
t644 = t723 * pkin(1) - t717;
t1012 = -t602 - t644;
t956 = t414 + t1012;
t900 = -t479 + t956;
t740 = qJD(1) * t900 + t1018 + t815;
t49 = -t1045 * t611 - t1347 + t740;
t1197 = t49 * t1045;
t873 = rSges(5,1) * t720 + rSges(5,3) * t719;
t797 = t873 * t722;
t1190 = -qJD(1) * t586 + t434 + t628;
t1187 = (t1196 * t1297 - t1243 + t1385) * t694 + (-t1297 * t402 + t1102 + t1251 - t368) * t611 + (t1297 * t406 - t1101 + t1250 + t369) * t610;
t1186 = (-t1298 * t551 + t1245 - t1386) * t694 + (t1298 * t401 + t1107 - t1253 - t366) * t611 + (-t1298 * t405 - t1106 + t1252 + t367) * t610;
t1185 = t1289 * t722;
t816 = -pkin(1) - t1188;
t783 = t816 * t723;
t1184 = t783 + t795;
t626 = qJD(1) * t644;
t942 = -qJD(1) * t602 - t626 + t674;
t848 = qJD(1) * t414 + t561 + t942;
t1183 = -qJD(1) * t479 + t815 + t848;
t346 = t587 * rSges(5,1) + rSges(5,2) * t1064 + t586 * rSges(5,3);
t1177 = -qJD(1) * t346 + t1288;
t1040 = t406 * rSges(6,1) - t405 * rSges(6,2);
t201 = -rSges(6,3) * t1064 + t1040;
t72 = t201 * t694 - t316 * t610 - t1234;
t1174 = t1260 * t553 + t1270 * t554;
t1173 = -t1260 * t493 - t1270 * t494;
t1172 = -t1260 * t491 - t1270 * t492;
t1169 = t1192 * t609 + t1303 * t694;
t1134 = g(2) * t723;
t1168 = g(1) * t725 + t1134;
t1164 = t1168 * t722;
t1113 = -rSges(7,2) * t591 - t1198;
t295 = pkin(4) * t435 - pkin(8) * t591;
t1069 = t719 * t722;
t229 = pkin(3) * t435 + t434 * qJ(4) + t988;
t664 = t724 * t987;
t1004 = -pkin(2) * t933 + t672;
t353 = pkin(2) * t935 + qJ(3) * t591 + t1004;
t787 = -qJDD(3) * t724 + t352 * t991 + t353 * t993 + t621 * t602 + t722 * t979;
t747 = qJD(2) * t664 + qJDD(4) * t1069 + t228 * t991 + t229 * t993 - t414 * t621 + t787;
t1039 = -t415 - t605;
t944 = -t481 + t1039;
t735 = t294 * t991 + t295 * t993 + t621 * t479 + t622 * t944 + t747;
t5 = qJD(6) * t349 + qJDD(6) * t551 - t1050 * t412 + t1052 * t411 + t1113 * t610 + t1114 * t611 + t735;
t1162 = t5 * t1052 + t34 * t1113;
t1158 = m(4) / 0.2e1;
t1157 = m(5) / 0.2e1;
t1156 = m(6) / 0.2e1;
t1155 = m(7) / 0.2e1;
t1154 = t411 / 0.2e1;
t1153 = t412 / 0.2e1;
t1152 = t609 / 0.2e1;
t1151 = -t610 / 0.2e1;
t1150 = t610 / 0.2e1;
t1149 = -t611 / 0.2e1;
t1148 = t611 / 0.2e1;
t1147 = t621 / 0.2e1;
t1146 = t622 / 0.2e1;
t1145 = -t694 / 0.2e1;
t1144 = t694 / 0.2e1;
t1140 = -rSges(7,2) - pkin(8);
t1139 = -rSges(6,3) - pkin(8);
t1136 = g(1) * t723;
t1131 = rSges(3,1) * t724;
t1130 = rSges(4,1) * t720;
t1129 = t17 * t611;
t1128 = t18 * t610;
t1127 = t19 * t611;
t1126 = t20 * t610;
t71 = t1309 + t740;
t1125 = t71 * t723;
t1124 = t71 * t725;
t711 = t722 * rSges(4,3);
t713 = t723 * rSges(3,3);
t1123 = t73 * t412;
t1122 = t74 * t411;
t1121 = t75 * t412;
t1120 = t76 * t411;
t1118 = -rSges(5,2) - qJ(3);
t1117 = rSges(7,2) - qJ(3);
t1116 = -rSges(4,3) - qJ(3);
t1115 = rSges(6,3) - qJ(3);
t904 = t344 + t956;
t527 = -rSges(5,2) * t724 + t797;
t949 = -t527 + t1014;
t113 = qJD(1) * t904 + t949 * t991 + t1018;
t1091 = t113 * t527;
t1003 = rSges(3,2) * t1065 + t725 * rSges(3,3);
t548 = rSges(3,1) * t1062 - t1003;
t1020 = -t548 - t644;
t639 = rSges(3,1) * t722 + rSges(3,2) * t724;
t934 = t639 * t991;
t297 = qJD(1) * t1020 - t934;
t1080 = t297 * t723;
t1079 = t297 * t725;
t549 = rSges(3,1) * t1061 - rSges(3,2) * t1064 + t713;
t298 = qJD(1) * t549 - t639 * t993 + t1225;
t604 = t639 * t725;
t1078 = t298 * t604;
t1049 = t1260 * t402 - t1270 * t401;
t1048 = t1260 * t406 - t1270 * t405;
t1047 = -rSges(7,2) * t1062 + t1172;
t1046 = -rSges(7,2) * t1061 + t1173;
t1044 = rSges(7,2) * t722 - t1174;
t347 = t587 * rSges(4,1) - t586 * rSges(4,2) + rSges(4,3) * t1064;
t1043 = -t347 - t605;
t1042 = -t1196 * t1260 + t1270 * t551;
t1034 = -t492 * rSges(6,1) + t491 * rSges(6,2);
t1032 = -t494 * rSges(6,1) + t493 * rSges(6,2);
t876 = -rSges(4,2) * t719 + t1130;
t1030 = -(t724 * t876 + t711) * qJD(2) - t577;
t1027 = t554 * rSges(6,1) - t553 * rSges(6,2);
t528 = -rSges(4,3) * t724 + t722 * t876;
t1025 = -t528 - t638;
t1024 = -rSges(4,1) * t1066 + rSges(4,2) * t1068 - t1188 - t711;
t1019 = t723 * t602 + t725 * t605;
t975 = rSges(4,2) * t1069;
t1010 = rSges(4,3) * t1062 + t723 * t975;
t1009 = rSges(4,3) * t1061 + t725 * t975;
t1005 = rSges(3,2) * t937 + rSges(3,3) * t995;
t998 = qJD(1) * t633;
t981 = -m(5) - m(6) - m(7);
t960 = t160 * rSges(6,1) - t159 * rSges(6,2) + rSges(6,3) * t937;
t959 = t725 * t352 + t723 * t353 + t602 * t995;
t958 = t345 + t1012;
t957 = -t346 + t1039;
t955 = t433 * rSges(4,1) + t432 * rSges(4,2) + rSges(4,3) * t930;
t954 = t433 * rSges(5,1) + rSges(5,2) * t930 - t432 * rSges(5,3);
t953 = -(t724 * t873 + t712) * qJD(2) + t1037;
t951 = t1226 * t725 + t622 * t638;
t947 = t600 * t993 + t603 * t991 + t705;
t943 = t703 + t1006;
t941 = -pkin(1) - t716;
t940 = t1140 * t725;
t939 = t1139 * t725;
t926 = -t1064 / 0.2e1;
t925 = -pkin(1) - t1131;
t922 = t997 / 0.2e1;
t919 = -t993 / 0.2e1;
t918 = t993 / 0.2e1;
t917 = -t991 / 0.2e1;
t916 = t991 / 0.2e1;
t152 = qJD(1) * t347 - t528 * t993 + t901;
t911 = t152 * t1025;
t909 = -t531 + t1072;
t908 = qJD(2) * t1030;
t907 = pkin(2) * t932;
t177 = rSges(6,1) * t350 - rSges(6,2) * t349 - rSges(6,3) * t994;
t906 = -t177 + t952;
t905 = -t316 + t946;
t902 = -t414 * t723 + t725 * t415 + t1019;
t898 = t645 + t605;
t114 = -t527 * t993 - t1177;
t886 = t114 * t949;
t882 = qJD(2) * t953;
t643 = rSges(2,1) * t725 - rSges(2,2) * t723;
t640 = rSges(2,1) * t723 + rSges(2,2) * t725;
t642 = -rSges(3,2) * t722 + t1131;
t878 = rSges(4,1) * t435 - rSges(4,2) * t434;
t875 = rSges(5,1) * t435 + rSges(5,3) * t434;
t872 = rSges(6,1) * t162 - rSges(6,2) * t161;
t850 = t952 - t1053;
t849 = t946 - t1045;
t847 = t677 - t1013;
t834 = -t197 * t725 + t201 * t723;
t831 = -t298 * t723 - t1079;
t397 = rSges(3,1) * t782 - rSges(3,2) * t930 + t1005;
t601 = t639 * t723;
t398 = -qJD(2) * t601 + (t642 * t725 + t713) * qJD(1);
t824 = t397 * t725 + t398 * t723;
t819 = t548 * t723 + t549 * t725;
t813 = -t353 + t1285;
t812 = t725 * t228 + t723 * t229 - t414 * t995 + t959;
t810 = t723 * t479 + t725 * t481 + t902;
t808 = -qJD(4) * t432 + qJDD(4) * t586 + t1195 * t622 + t951;
t807 = -t501 * t993 - t502 * t991 + t664 + t947;
t798 = -t229 - t1004;
t792 = -t229 + t813;
t786 = t1118 * t722 + t941;
t779 = t415 + t898;
t778 = t1050 * t5 + t1114 * t34;
t772 = g(1) * t783;
t771 = -t1050 * t50 + t1052 * t49;
t770 = t1050 * t34 - t1197;
t768 = -t575 * t993 - t576 * t991 + t807;
t765 = t573 + t779;
t762 = t725 * t294 + t723 * t295 + t479 * t995 + t812;
t759 = t228 + t943;
t750 = -t295 + t798;
t748 = t759 + t1038;
t60 = t197 * t610 + t201 * t611 + t758;
t741 = t60 * t834 + (t72 * t725 - t1125) * t316;
t736 = t1168 * (-t1092 - pkin(2) + (-pkin(3) - pkin(4)) * t720);
t734 = t1227 * t725 + t770 * t723;
t729 = t622 * t618 + t900 * qJDD(1) + (-t295 + t792) * qJD(1) + t725 * t881 + t808;
t692 = rSges(5,2) * t1061;
t688 = rSges(5,2) * t1062;
t615 = t642 * qJD(2);
t590 = (t723 ^ 2 + t725 ^ 2) * t994;
t456 = -rSges(4,1) * t962 + t1009;
t455 = -t725 * t797 + t692;
t454 = -rSges(4,1) * t963 + t1010;
t453 = -t723 * t797 + t688;
t362 = -rSges(6,1) * t551 - rSges(6,2) * t1196;
t351 = (t584 * t723 + t586 * t725) * qJD(2);
t318 = -rSges(6,3) * t722 + t1027;
t293 = t819 * qJD(2);
t278 = -rSges(6,3) * t1061 + t1032;
t276 = -rSges(6,3) * t1062 + t1034;
t245 = rSges(4,3) * t591 + t878;
t244 = rSges(5,2) * t591 + t875;
t243 = -rSges(4,3) * t937 + t955;
t242 = -rSges(5,2) * t937 + t954;
t225 = -rSges(6,1) * t405 - rSges(6,2) * t406;
t220 = -rSges(6,1) * t401 - rSges(6,2) * t402;
t151 = qJD(1) * t958 + t1025 * t991 + t674;
t150 = qJD(1) * t397 + qJDD(1) * t549 - t615 * t993 - t621 * t639 + t1011;
t149 = -t615 * t991 + t622 * t639 + t1020 * qJDD(1) + (-t398 - t1225) * qJD(1);
t132 = (-t345 * t723 + t347 * t725) * qJD(2) + t879;
t106 = (-t344 * t723 + t346 * t725) * qJD(2) + t774;
t103 = -rSges(6,3) * t591 + t872;
t101 = -rSges(6,3) * t930 + t960;
t70 = qJD(1) * t243 + qJDD(1) * t347 + t1025 * t621 + t723 * t908 + t784;
t69 = t528 * t622 + t725 * t908 + t958 * qJDD(1) + (-t245 + t813) * qJD(1) + t951;
t55 = -t345 * t621 + t1043 * t622 + (t243 * t725 + t245 * t723) * qJD(2) + t787;
t36 = qJD(1) * t242 + qJDD(1) * t346 + t621 * t949 + t723 * t882 + t749;
t35 = t527 * t622 + t725 * t882 + t904 * qJDD(1) + (-t244 + t792) * qJD(1) + t808;
t33 = -t344 * t621 + (t242 * t725 + t244 * t723) * qJD(2) + t957 * t622 + t747;
t22 = t101 * t694 - t177 * t610 + t201 * t609 - t316 * t411 + t730;
t21 = -t694 * t103 - t611 * t177 - t609 * t197 + t412 * t316 + t729;
t16 = t101 * t611 + t103 * t610 + t197 * t411 - t201 * t412 + t735;
t6 = qJD(6) * t159 + qJDD(6) * t405 + t1045 * t412 - t1052 * t609 - t1053 * t611 - t1113 * t694 + t729;
t1 = [t1122 / 0.2e1 + t1123 / 0.2e1 + t1120 / 0.2e1 + t1121 / 0.2e1 + (-t911 * t991 + (-t878 - t1004 + (t1116 * t992 - t1200) * t723) * t151 + (t151 * t995 + t69 * t723 - t1136) * (t1116 * t722 + t941) + (t70 - g(2)) * (t898 + t347) + (-t907 + t943 + t955 + t151 - t942 + ((t816 - t711) * t723 - t345) * qJD(1)) * t152 + (t69 - g(1)) * (t717 + t1189)) * m(4) + (-t1196 * t1251 - t1253 * t551 - t1332 * t724 + t1339) * t610 * t1145 + (((t247 - t464 + (t532 + t1073) * t725 + t1036) * t725 + t1035 * t723 + t1314) * qJD(2) + t1311) * t916 + t1128 / 0.2e1 - t1129 / 0.2e1 + t1126 / 0.2e1 - t1127 / 0.2e1 + t1169 + (-g(1) * t1313 - t786 * t1136 - (t723 * t1091 + t725 * t886) * qJD(2) + (t723 * t786 + t1313) * t35 + (-g(2) + t36) * (t779 + t346) + (t759 - t907 + t954 - t848 + ((t816 - t712) * t723 - t344) * qJD(1)) * t114 + (t798 - t875 + t786 * t995 + (t1118 * t992 - t1200) * t723 - t1177) * t113) * m(5) + (m(2) * (t640 ^ 2 + t643 ^ 2) + t818 + Icges(2,3) - t1290 * t724 + t1287 * t722) * qJDD(1) + (t1275 - t1278 + t1279) * t917 + (t71 * (t750 - t872) + t72 * (t748 + t960) + (-t72 * t976 + (t1115 * t1125 + t72 * t939) * t724) * qJD(2) + ((t1115 * t722 + t941) * t1124 + (-t71 * pkin(7) + t72 * t816) * t723) * qJD(1) + (-t197 + t1184) * t21 - (t1183 + t1309 - t71) * t72 - g(1) * (t795 - t197) - t772 + (t22 - g(2)) * (t722 * t939 + t1040 + t765)) * m(6) + t1305 * t1150 + (t1304 + t1262) * t1149 + t1193 * t1154 + t1194 * t1153 + (((t725 * t909 - t1035 + t1384 + t249) * t725 + (t723 * t909 + t1221 - t1296 + t1383 + t910) * t723) * qJD(2) + t1280 - t1310) * t919 + (t298 * (t703 + t1005) + (t1080 * t639 - t1078) * qJD(2) + ((-pkin(1) - t642) * t1079 + (t297 * (-rSges(3,3) - pkin(7)) + t298 * t925) * t723) * qJD(1) - (-qJD(1) * t548 - t297 - t626 - t934) * t298 + (t150 - g(2)) * (t549 + t645) + (t149 - g(1)) * (t723 * t925 + t1003 + t717)) * m(3) + ((-t1052 + t1184) * t6 - g(1) * (t795 - t1052) - t772 + t912 * t611 + t1306 * (t722 * t940 + t1171 + t765) + (t750 + t1198 + t1117 * t1337 + ((t1117 * t722 + t941) * t725 - t1344) * qJD(1)) * t49 + (t748 + t1199 + (t724 * t940 - t976) * qJD(2) + t816 * t997 + t49 - t1183 + t1347) * t50) * m(7) - m(2) * (-g(1) * t640 + g(2) * t643) + ((t1342 + t1389) * t611 + (t1343 - t1388) * t610 + t1333) * t1148 + ((t1340 + t1388) * t611 + (t1341 + t1389) * t610 + t1263 - t1308) * t1151 + (t1273 + t1218) * t1147 + (t1274 + t1219) * t1146 + (t1276 + t1277) * t918 + ((t613 - t1353) * t724 + (t1352 * t720 + t1354 * t719 + t614) * t722 + (t1287 * t724 + t1290 * t722 - t817) * qJD(2)) * qJD(1); ((t1242 * t1196 + t1243 * t554 + t1244 * t551 + t1245 * t553 + t1323 * t724 - t1363 * t722) * t694 + (t1247 * t1196 + t1249 * t551 - t1251 * t554 - t1253 * t553 - t1325 * t724 + t1332 * t722) * t611 + (t1246 * t1196 + t1248 * t551 - t1250 * t554 + t1252 * t553 + t1324 * t724 - t1356 * t722) * t610 + (-t1192 * t722 - t1233 * t724) * qJD(5)) * t1145 + (-g(1) * (t680 + t1009) - g(2) * (t676 + t1010) + g(3) * t1024 - (-pkin(2) - t1130) * t1164 - t151 * (t675 + (-t454 - t600) * qJD(1)) - t152 * (qJD(1) * t456 + t1015) - t132 * t947 - ((t1024 * t151 + t132 * t456) * t725 + (t1024 * t152 + t132 * t454) * t723) * qJD(2) + t151 * t607 + t55 * t1019 + t132 * t959 + (t69 * t1025 + t151 * t1030 + t55 * t347 + t132 * t243 + (-t132 * t345 + t911) * qJD(1)) * t725 + (t70 * t1025 + t152 * t1030 - t55 * t345 + t132 * t245 + (t1043 * t132 + t151 * t528) * qJD(1)) * t723) * m(4) + (qJD(1) * t1229 + t1266 * t723 + t1267 * t725) * t1149 + (qJD(1) * t1231 + t1268 * t723 + t1269 * t725) * t1150 + ((-t1340 * t985 + t1235) * t725 + (t1242 * t406 - t1243 * t494 + t1244 * t405 - t1245 * t493) * t694 + (t1247 * t406 + t1249 * t405 + t1251 * t494 + t1253 * t493) * t611 + (t1246 * t406 + t1248 * t405 + t1250 * t494 - t1252 * t493) * t610 + (-t1062 * t1341 - t1193 * t722) * qJD(5)) * t1151 + ((-t1343 * t985 + t1235) * t723 + (t1242 * t402 - t1243 * t492 + t1244 * t401 - t1245 * t491) * t694 + (t1247 * t402 + t1249 * t401 + t1251 * t492 + t1253 * t491) * t611 + (t1246 * t402 + t1248 * t401 + t1250 * t492 - t1252 * t491) * t610 + (-t1061 * t1342 - t1194 * t722) * qJD(5)) * t1148 + (-g(1) * (t680 + t692) - g(2) * (t676 + t688) + g(3) * t948 - (-pkin(2) + (-rSges(5,1) - pkin(3)) * t720 + (-rSges(5,3) - qJ(4)) * t719) * t1164 + t113 * t1026 + t33 * t902 + t106 * t812 + (t35 * t949 + t113 * t953 + t33 * t346 + t106 * t242 + (-t106 * t344 + t886) * qJD(1)) * t725 + (t36 * t949 + t114 * t953 - t33 * t344 + t106 * t244 + (t106 * t957 + t1091) * qJD(1)) * t723 - t113 * t814 - t114 * t775 - t106 * t807 - (t113 * (-t453 + t1029) + t114 * t455) * qJD(1) - ((t106 * t455 + t113 * t948) * t725 + (t106 * t453 + t114 * t948) * t723) * qJD(2)) * m(5) + (t998 * t723 + (-t1070 * t723 - t1238 * t587 - t1240 * t586) * t993 + (t1236 * t587 + t1237 * t586) * qJD(1) + ((t1071 * t723 + t1239 * t587 + t1241 * t586 + t1216) * qJD(2) + t1217) * t725) * t919 + (-t998 * t725 + (-t1071 * t725 + t1239 * t585 + t1241 * t584) * t991 + (t1236 * t585 + t1237 * t584) * qJD(1) + ((t1070 * t725 - t1238 * t585 - t1240 * t584 + t1216) * qJD(2) + t1217) * t723) * t916 + (g(1) * t604 + g(2) * t601 - g(3) * t642 - (t297 * t601 - t1078) * qJD(1) - (t293 * (-t601 * t723 - t604 * t725) + t831 * t642) * qJD(2) + (qJD(2) * t824 + t548 * t621 - t549 * t622) * t819 + t293 * ((t548 * t725 - t549 * t723) * qJD(1) + t824) + t831 * t615 + (-t149 * t725 - t150 * t723 + (-t298 * t725 + t1080) * qJD(1)) * t639) * m(3) + t1228 * t1153 + t1230 * t1154 + t1232 * t1152 - (((t1159 - t1312) * qJD(2) - t1307) * t724 + ((t767 + (t1239 * t720 + t1241 * t719 - t1320) * t725 + (-t1238 * t720 - t1240 * t719 + t1319) * t723) * qJD(2) + (t1236 * t720 + t1237 * t719 + t1350) * qJD(1)) * t722) * qJD(1) / 0.2e1 + t1348 * t1146 + (t1278 * t725 + t1277 * t723 + (t1218 * t725 + t1219 * t723) * qJD(1)) * qJD(1) / 0.2e1 + (t1262 + t1279) * t995 / 0.2e1 + (t1263 + t1280) * t922 + (-g(1) * (t680 + t1032) - g(2) * (t676 + t1034) - g(3) * (t847 + t1027) - (g(3) * t1139 + t736) * t722 + t16 * t810 + (t16 * t201 + t21 * t905) * t725 + (t16 * t197 + t22 * t905) * t723 + (-g(1) * t939 - qJD(5) * t741 - t1134 * t1139) * t724 + (t201 * t986 - t278 * t694 + t318 * t610 + t723 * t906 + t905 * t995 - t1209) * t72 + (-t197 * t986 + t276 * t694 + t316 * t997 + t318 * t611 + t725 * t906 + t1202) * t71 + (t762 + (qJD(1) * t197 + t101) * t725 + (t103 + (-t201 + t944) * qJD(1)) * t723 - t276 * t610 - t278 * t611 - t768) * t60) * m(6) + (t1262 * t725 + t1263 * t723) * t985 / 0.2e1 + (t1218 * t723 - t1219 * t725) * qJDD(1) / 0.2e1 + ((t1220 * t725 + t1221 * t723) * qJD(1) + t1214) * t918 + ((t1222 * t725 + t1223 * t723) * qJD(1) + t1215) * t917 + t1261 * t986 / 0.2e1 + (qJD(1) * t1233 + t1264 * t723 + t1265 * t725) * t1144 + (t5 * t810 + t34 * t762 + (t6 * t849 + (t50 * t849 + t913) * qJD(1) + t778) * t725 + (t7 * t849 + t50 * t850 + (t1197 + t34 * (t944 - t1050)) * qJD(1) + t1162) * t723 - g(1) * (t680 + t1173) - g(2) * (t676 + t1172) - g(3) * (t847 + t1174) - (g(1) * t940 + t1134 * t1140) * t724 - (g(3) * t1140 + t736) * t722 - (t722 * t771 + t724 * t734) * qJD(5) - (qJD(6) * t553 + t1046 * t611 + t1047 * t610 + t768) * t34 - (-qJD(6) * t491 + t1044 * t610 + t1046 * t694 + t1209) * t50 + (qJD(6) * t493 - t1044 * t611 + t1047 * t694 + t725 * t850 + t1202) * t49) * m(7) - (t1275 * qJD(1) + t1215 * qJD(2) + t1274 * qJDD(1) + t1222 * t621 + t1223 * t622 + t1271) * t725 / 0.2e1 + (qJD(1) * t1276 + t1214 * qJD(2) + qJDD(1) * t1273 + t1220 * t621 + t1221 * t622 + t1272) * t723 / 0.2e1 + t1361 * t1147; (-m(4) + t981) * (-g(3) * t724 + t1164) - m(4) * (t132 * t590 - t151 * t781 + t152 * t591) - m(5) * (t106 * t590 - t113 * t781 + t114 * t591) - m(6) * (t590 * t60 + t591 * t72 - t71 * t781) - m(7) * (t34 * t590 - t49 * t781 + t50 * t591) + 0.2e1 * ((t151 * t991 + t152 * t993 - t55) * t1158 + (t113 * t991 + t114 * t993 - t33) * t1157 + (t71 * t991 + t72 * t993 - t16) * t1156 + (t49 * t991 + t50 * t993 - t5) * t1155) * t724 + 0.2e1 * ((qJD(2) * t132 - t151 * t997 + t152 * t995 + t69 * t725 + t70 * t723) * t1158 + (qJD(2) * t106 - t113 * t997 + t114 * t995 + t35 * t725 + t36 * t723) * t1157 + (qJD(2) * t60 + t21 * t725 + t22 * t723 - t71 * t997 + t72 * t995) * t1156 + (qJD(2) * t34 - t49 * t997 + t50 * t995 + t6 * t725 + t7 * t723) * t1155) * t722; t981 * (g(1) * t586 + g(2) * t584 + g(3) * t1069) + (t584 * t7 + t586 * t6 + (t34 * t992 + t5 * t722) * t719 - t34 * t351 + t1190 * t50) * m(7) + (t21 * t586 + t22 * t584 + (t16 * t722 + t60 * t992) * t719 - t351 * t60 + t1190 * t72) * m(6) + (t35 * t586 + t36 * t584 + (t106 * t992 + t33 * t722) * t719 - t106 * t351 + t1190 * t114) * m(5); -t1271 * t1065 / 0.2e1 + t1272 * t926 - t1261 * t994 / 0.2e1 + (t1193 * t724 - t1231 * t722) * t1154 + (t1194 * t724 - t1229 * t722) * t1153 + (t1192 * t724 - t1233 * t722) * t1152 + (t1185 * t725 + t1186 * t406 + t1187 * t405) * t1151 + ((-qJD(2) * t1231 + t1305) * t724 + (qJD(1) * t1230 - t1193 * qJD(2) - t1268 * t725 + t1269 * t723) * t722) * t1150 + ((-qJD(2) * t1229 + t1304) * t724 + (qJD(1) * t1228 - t1194 * qJD(2) - t1266 * t725 + t1267 * t723) * t722) * t1149 + (t1185 * t723 + t1186 * t402 + t1187 * t401) * t1148 + (t1186 * t1196 + t1187 * t551 - t1289 * t724) * t1145 + ((-qJD(2) * t1233 + t1303) * t724 + (qJD(1) * t1232 - t1192 * qJD(2) - t1264 * t725 + t1265 * t723) * t722) * t1144 + (t1122 + t1123 + t1128 - t1129 + t1120 + t1121 + t1126 - t1127 + t1169) * t724 / 0.2e1 + (-g(1) * t1048 - g(2) * t1049 + g(3) * t1042 - (t1196 * t34 + t402 * t50 + t406 * t49) * qJD(6) - (t1048 * t50 - t1049 * t49) * t694 - (t1042 * t49 + t1048 * t34) * t611 - (t1042 * t50 + t1049 * t34) * t610 + (qJD(2) * t734 + t1050 * t7 - t6 * t1052 - t1113 * t49 + t1114 * t50) * t724 + (t771 * qJD(2) + (qJD(1) * t770 + t1045 * t7 + t1053 * t50 - t1162) * t725 + (-qJD(1) * t1227 - t6 * t1045 - t49 * t1053 + t778) * t723) * t722) * m(7) + (-g(1) * t225 - g(2) * t220 - g(3) * t362 + (qJD(2) * t741 + t72 * t101 - t71 * t103 - t21 * t197 + t22 * t201) * t724 + (t71 * (qJD(2) * t197 - t177 * t723) + t72 * (-qJD(2) * t201 + t177 * t725) + t16 * t834 + t60 * (t101 * t723 - t103 * t725 + t197 * t997 + t201 * t995) + (-t21 * t723 + t22 * t725 + (-t72 * t723 - t1124) * qJD(1)) * t316) * t722 - t71 * (-t220 * t694 - t362 * t611) - t72 * (t225 * t694 - t362 * t610) - t60 * (t220 * t610 + t225 * t611)) * m(6) + t1262 * (t722 * t922 + t724 * t917) + t1263 * (qJD(1) * t926 + t724 * t919); (t159 * t49 + t161 * t50 + (-t50 * t694 - g(1) + t6) * t405 + (t49 * t611 + t50 * t610 - g(3) + t5) * t551 + (t49 * t694 + t1306) * t401 + (-t401 * t610 - t405 * t611 + t349) * t34) * m(7);];
tau  = t1;
