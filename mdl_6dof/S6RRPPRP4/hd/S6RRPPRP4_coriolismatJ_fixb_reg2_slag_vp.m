% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRP4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:39:48
% EndTime: 2019-03-09 08:40:14
% DurationCPUTime: 17.58s
% Computational Cost: add. (10411->735), mult. (21694->885), div. (0->0), fcn. (21934->6), ass. (0->541)
t498 = cos(qJ(2));
t494 = sin(pkin(9));
t786 = cos(qJ(5));
t626 = t786 * t494;
t449 = t498 * t626;
t495 = cos(pkin(9));
t496 = sin(qJ(5));
t718 = t496 * t498;
t601 = -t718 / 0.2e1;
t720 = t496 * t495;
t420 = t626 - t720;
t795 = -t420 / 0.2e1;
t605 = t498 * t795;
t569 = t495 * t601 + t449 / 0.2e1 + t605;
t625 = t786 * t495;
t721 = t496 * t494;
t416 = t625 + t721;
t497 = sin(qJ(2));
t373 = t416 * t497;
t689 = qJD(1) * t498;
t611 = t373 * t689;
t658 = t373 * qJD(5);
t872 = -qJD(2) * t569 + t611 + t658;
t516 = -t449 / 0.2e1 + (t720 / 0.2e1 + t795) * t498;
t170 = -qJD(2) * t516 + t611;
t624 = t786 * t497;
t719 = t496 * t497;
t371 = -t494 * t624 + t495 * t719;
t375 = t495 * t718 - t449;
t376 = t498 * t416;
t144 = t371 * t376 + t373 * t375;
t857 = t144 * qJD(1);
t731 = t416 * t371;
t734 = t373 * t420;
t85 = t731 - t734;
t867 = t85 * qJD(5);
t870 = t867 + t857;
t869 = t857 - t867 + qJD(2) * (t375 * t420 + t376 * t416);
t797 = -t416 / 0.2e1;
t794 = t420 / 0.2e1;
t789 = -t496 / 0.2e1;
t868 = -t786 / 0.2e1;
t341 = t371 * t689;
t362 = t371 * qJD(5);
t866 = t341 + t362;
t404 = t420 * qJD(5);
t821 = t569 * qJD(1);
t865 = -t404 + t821;
t825 = t516 * qJD(1);
t864 = t404 - t825;
t483 = t497 * qJ(4);
t461 = t495 * t483;
t576 = -pkin(7) + (-pkin(3) - pkin(4)) * t494;
t315 = t497 * t576 + t461;
t574 = t371 * pkin(5) - t373 * qJ(6);
t156 = t315 + t574;
t779 = -pkin(8) + qJ(3);
t440 = t779 * t495;
t597 = t779 * t494;
t311 = t440 * t496 - t597 * t786;
t595 = t373 * pkin(5) + t371 * qJ(6);
t723 = t495 * t498;
t469 = pkin(7) * t723;
t717 = t497 * qJ(3);
t575 = -pkin(2) * t498 - t717;
t548 = -pkin(1) + t575;
t344 = t494 * t548 + t469;
t317 = -qJ(4) * t498 + t344;
t727 = t494 * t497;
t284 = pkin(8) * t727 + t317;
t544 = (t497 * t779 + pkin(1)) * t495;
t505 = t284 * t786 + t496 * t544;
t783 = t494 * pkin(7);
t638 = -pkin(3) - t783;
t552 = pkin(2) * t495 - t638;
t545 = pkin(4) + t552;
t124 = (t496 * t545 + qJ(6)) * t498 + t505;
t518 = t545 * t498;
t137 = t496 * t518 + t505;
t600 = t124 / 0.2e1 - t137 / 0.2e1;
t594 = t420 * pkin(5) + t416 * qJ(6);
t800 = -t594 / 0.2e1;
t428 = -t495 * pkin(3) - t494 * qJ(4) - pkin(2);
t394 = t495 * pkin(4) - t428;
t573 = pkin(5) * t416 - qJ(6) * t420;
t221 = t573 + t394;
t801 = -t221 / 0.2e1;
t863 = -t156 * t800 - t311 * t600 - t595 * t801;
t598 = qJD(5) * t786;
t493 = t498 ^ 2;
t724 = t495 * t497;
t521 = t373 * t724 + t493 * t786;
t824 = t521 * qJD(1);
t862 = -t498 * t598 - t824;
t687 = qJD(2) * t416;
t691 = qJD(1) * t371;
t258 = t687 + t691;
t539 = t371 * t794 - t373 * t797;
t855 = t539 * qJD(5);
t861 = t258 * t375 + t855;
t860 = -t375 * t691 + t855;
t649 = t497 * qJD(2);
t716 = t497 * t371;
t561 = -t375 * t498 + t716;
t843 = qJD(1) * t561;
t859 = qJD(5) * t569 + t416 * t649 + t843;
t858 = -qJD(5) * t516 + t843;
t410 = t420 ^ 2;
t804 = t416 ^ 2;
t229 = -t410 + t804;
t856 = t229 * qJD(5);
t686 = qJD(2) * t420;
t620 = t416 * t686;
t854 = qJD(1) * t539 + t620;
t690 = qJD(1) * t373;
t623 = t371 * t690;
t853 = -qJD(2) * t539 - t623;
t805 = t373 ^ 2;
t806 = t371 ^ 2;
t177 = -t805 + t806;
t555 = qJD(1) * t177 + qJD(2) * t85;
t553 = qJD(1) * t85 + qJD(2) * t229;
t852 = qJD(2) * t144 - qJD(5) * t177;
t633 = t498 * t786;
t579 = -t633 / 0.2e1;
t254 = t376 / 0.2e1 + t495 * t579 + t494 * t601;
t850 = qJD(2) * t254 + t866;
t733 = t376 * qJ(6);
t785 = t375 * pkin(5);
t849 = t733 / 0.2e1 - t785 / 0.2e1;
t726 = t494 * t498;
t343 = -pkin(7) * t726 + t495 * t548;
t790 = t495 / 0.2e1;
t792 = -t494 / 0.2e1;
t540 = t343 * t792 + t344 * t790;
t780 = t498 * pkin(7);
t641 = t780 / 0.2e1;
t174 = t641 - t540;
t490 = t494 ^ 2;
t491 = t495 ^ 2;
t455 = t491 + t490;
t430 = t455 * qJ(3);
t653 = t430 * qJD(2);
t848 = -qJD(1) * t174 + t653;
t318 = -t495 * (-pkin(1) - t717) + t552 * t498;
t743 = t317 * t495;
t462 = qJ(4) * t723;
t793 = -t462 / 0.2e1;
t803 = pkin(3) / 0.2e1;
t122 = t641 + t793 - t743 / 0.2e1 + (t498 * t803 - t318 / 0.2e1) * t494;
t847 = -qJD(1) * t122 + t653;
t616 = t495 * t649;
t492 = t497 ^ 2;
t728 = t492 * t494;
t418 = -t493 * t494 + t728;
t655 = t418 * qJD(1);
t846 = t655 - t616;
t659 = t373 * qJD(3);
t680 = qJD(4) * t498;
t704 = t496 * t680 + t659;
t398 = t416 * qJD(5);
t667 = t254 * qJD(1);
t845 = t667 + t398;
t646 = t786 / 0.2e1;
t577 = t416 * t646;
t628 = t786 * t376;
t499 = t498 * t577 + t628 / 0.2e1 + (t605 + t375 / 0.2e1) * t496;
t844 = qJD(1) * t499;
t842 = qJD(2) * t499;
t501 = t375 * t789 - t628 / 0.2e1 + (t420 * t789 + t577) * t498;
t841 = qJD(2) * t501;
t312 = t440 * t786 + t496 * t597;
t565 = -t311 * t420 + t312 * t416;
t838 = qJD(2) * t565;
t603 = -t724 / 0.2e1;
t819 = t371 * t789 + t373 * t868;
t506 = t603 + t819;
t836 = qJD(3) * t506;
t820 = t416 * t789 + t420 * t868;
t512 = t792 + t820;
t835 = qJD(3) * t512;
t515 = t603 - t819;
t834 = qJD(3) * t515;
t527 = t792 - t820;
t833 = qJD(3) * t527;
t832 = qJD(4) * t499;
t831 = qJD(4) * t506;
t830 = qJD(4) * t512;
t829 = qJD(4) * t515;
t828 = qJD(4) * t527;
t648 = t498 * qJD(2);
t826 = t501 * qJD(4);
t822 = t565 * qJD(3);
t715 = t498 * qJ(3);
t445 = t497 * pkin(2) - t715;
t262 = (-pkin(8) * t498 - t445) * t495 + (-pkin(4) + t638) * t497;
t236 = t496 * t262;
t355 = -pkin(7) * t724 + t494 * t445;
t319 = t355 + t483;
t287 = pkin(8) * t726 + t319;
t265 = t786 * t287;
t706 = -t236 / 0.2e1 - t265 / 0.2e1;
t631 = t786 * t262;
t722 = t496 * t287;
t705 = t631 / 0.2e1 - t722 / 0.2e1;
t818 = t373 * t311 / 0.2e1 - t371 * t312 / 0.2e1;
t136 = t496 * t284 - t786 * (t544 + t518);
t817 = t136 * t794 + t137 * t797;
t781 = t498 * pkin(5);
t128 = t136 - t781;
t816 = t124 * t797 + t128 * t794;
t520 = t625 / 0.2e1 + t721 / 0.2e1;
t796 = t416 / 0.2e1;
t507 = (t796 + t520) * t498;
t814 = qJD(2) * t507 + t341;
t812 = qJD(2) * t561 - t498 * t658;
t791 = t494 / 0.2e1;
t604 = t371 * t791;
t194 = t604 + (t416 * t790 + t646) * t497;
t811 = -qJD(3) * t569 + t194 * qJD(4);
t602 = t724 / 0.2e1;
t195 = t604 + t416 * t602 - t624 / 0.2e1;
t810 = -t516 * qJD(3) + t195 * qJD(4);
t661 = t371 * qJD(3);
t809 = qJD(4) * t521 - t498 * t661;
t807 = qJD(1) * t506 + qJD(2) * t512;
t802 = pkin(7) / 0.2e1;
t799 = -t376 / 0.2e1;
t798 = t394 / 0.2e1;
t788 = t496 / 0.2e1;
t489 = -t497 / 0.2e1;
t488 = t497 / 0.2e1;
t60 = -t731 - t734;
t59 = t60 * qJD(3);
t760 = t136 * t416;
t511 = t760 / 0.2e1;
t6 = -t760 / 0.2e1 + t511;
t787 = t6 * qJD(5) + t59;
t784 = t494 * pkin(3);
t782 = t496 * pkin(5);
t778 = qJD(1) * t6;
t777 = qJD(2) * t6;
t546 = -t375 * qJ(6) / 0.2e1 + pkin(5) * t799;
t599 = t136 / 0.2e1 - t128 / 0.2e1;
t3 = -t416 * t599 + t420 * t600 + t546;
t776 = t3 * qJD(1);
t142 = t265 + t236;
t482 = t497 * qJ(6);
t132 = -t482 + t142;
t141 = t631 - t722;
t487 = t497 * pkin(5);
t133 = t487 - t141;
t316 = t498 * t576 + t462;
t157 = t316 - t733 + t785;
t7 = t124 * t132 + t128 * t133 + t156 * t157;
t775 = t7 * qJD(1);
t8 = -t124 * t136 + t128 * t137 + t156 * t595;
t774 = t8 * qJD(1);
t761 = t136 * t312;
t73 = -t761 / 0.2e1;
t10 = t73 + t761 / 0.2e1;
t773 = qJD(1) * t10;
t754 = t156 * t373;
t756 = t137 * t498;
t39 = t371 * t595 + t754 - t756;
t772 = qJD(1) * t39;
t42 = t124 * t371 - t128 * t373;
t771 = qJD(1) * t42;
t43 = t136 * t718 + t137 * t633 - t315 * t724;
t770 = qJD(1) * t43;
t44 = -t136 * t373 + t137 * t371;
t769 = qJD(1) * t44;
t63 = t315 * t373 - t756;
t768 = qJD(1) * t63;
t767 = qJD(2) * t10;
t11 = -t124 * t375 + t128 * t376 - t132 * t371 + t133 * t373;
t766 = t11 * qJD(1);
t12 = (-t124 + t137) * t373 + (-t128 + t136) * t371;
t765 = t12 * qJD(1);
t762 = t128 * t496;
t758 = t136 * t498;
t14 = t136 * t376 - t137 * t375 - t141 * t373 - t142 * t371;
t755 = t14 * qJD(1);
t19 = -t136 * t141 + t137 * t142 + t315 * t316;
t753 = t19 * qJD(1);
t636 = t124 * t786;
t514 = -t636 / 0.2e1 + t137 * t646;
t632 = t786 * qJ(6);
t578 = -t632 / 0.2e1;
t24 = t498 * t578 + (t781 / 0.2e1 + t599) * t496 + t514;
t752 = t24 * qJD(1);
t26 = -t124 * t497 + t132 * t498 - t156 * t376 - t157 * t373;
t751 = t26 * qJD(1);
t27 = t128 * t497 - t133 * t498 + t156 * t375 + t157 * t371;
t750 = t27 * qJD(1);
t748 = t311 * t497;
t747 = t311 * t498;
t745 = t312 * t497;
t744 = t312 * t498;
t742 = t317 * t498;
t295 = -t744 / 0.2e1;
t542 = t156 * t794 - t373 * t801;
t596 = t487 / 0.2e1 - t705;
t33 = t295 + t542 + t596;
t741 = t33 * qJD(1);
t35 = t136 * t497 + t141 * t498 + t315 * t375 + t316 * t371;
t740 = t35 * qJD(1);
t36 = -t137 * t497 + t142 * t498 - t315 * t376 - t316 * t373;
t739 = t36 * qJD(1);
t37 = -t156 * t724 + (t636 + t762) * t498;
t738 = t37 * qJD(1);
t38 = t156 * t371 - t373 * t595 - t758;
t732 = t38 * qJD(1);
t291 = -t747 / 0.2e1;
t541 = t315 * t796 + t371 * t798;
t49 = t291 + t541 + t706;
t729 = t49 * qJD(1);
t725 = t495 * t445;
t52 = t124 * t498 - t754;
t714 = t52 * qJD(1);
t320 = t497 * t638 - t725;
t637 = pkin(7) + t784;
t366 = t497 * t637 - t461;
t367 = t498 * t637 - t462;
t57 = t317 * t319 + t318 * t320 + t366 * t367;
t713 = t57 * qJD(1);
t61 = -t318 * t723 - t320 * t724 + (t319 * t497 + t742) * t494;
t712 = t61 * qJD(1);
t62 = t315 * t371 - t758;
t711 = t62 * qJD(1);
t647 = pkin(7) * t727;
t354 = t647 + t725;
t67 = (t343 * t498 + t354 * t497) * t495 + (t344 * t498 + t355 * t497) * t494;
t710 = t67 * qJD(1);
t562 = t366 * t498 + t367 * t497;
t68 = -t317 * t497 + t319 * t498 + t495 * t562;
t709 = t68 * qJD(1);
t69 = -t318 * t497 + t320 * t498 + t494 * t562;
t708 = t69 * qJD(1);
t92 = pkin(7) ^ 2 * t497 * t498 + t343 * t354 + t344 * t355;
t707 = t92 * qJD(1);
t463 = t493 - t492;
t166 = t317 * t727 - t318 * t724;
t700 = qJD(1) * t166;
t179 = (t343 * t495 + t344 * t494) * t497;
t698 = qJD(1) * t179;
t182 = t366 * t724 + t742;
t697 = qJD(1) * t182;
t630 = t786 * t371;
t201 = (t496 * t373 - t630) * t498;
t696 = qJD(1) * t201;
t202 = t373 * t718 - t498 * t630;
t695 = qJD(1) * t202;
t224 = -t373 * t497 + t376 * t498;
t692 = qJD(1) * t224;
t688 = (t490 - t491) * t648;
t685 = qJD(2) * t494;
t684 = qJD(3) * t254;
t683 = qJD(3) * t498;
t682 = qJD(4) * t494;
t681 = qJD(4) * t495;
t679 = qJD(5) * t136;
t678 = qJD(5) * t311;
t677 = qJD(5) * t498;
t676 = qJD(6) * t420;
t139 = pkin(3) * t489 + (pkin(7) * t489 + t366 / 0.2e1) * t494 + (-t445 / 0.2e1 + t715 / 0.2e1 + t428 * t488) * t495;
t675 = t139 * qJD(1);
t172 = -t343 * t497 + (t354 - 0.2e1 * t647) * t498;
t672 = t172 * qJD(1);
t173 = t355 * t498 + (-t344 + 0.2e1 * t469) * t497;
t671 = t173 * qJD(1);
t237 = t507 * qJD(1);
t668 = t507 * qJD(3);
t301 = t493 * t496 + t495 * t716;
t664 = t301 * qJD(1);
t309 = t312 * qJD(5);
t660 = t371 * qJD(6);
t414 = t455 * t492;
t657 = t414 * qJD(1);
t656 = t416 * qJD(6);
t654 = t418 * qJD(2);
t419 = t463 * t495;
t402 = t419 * qJD(1);
t652 = t455 * qJD(2);
t651 = t463 * qJD(1);
t650 = t497 * qJD(1);
t481 = t498 * qJD(6);
t645 = pkin(1) * t650;
t644 = pkin(1) * t689;
t643 = pkin(7) * t648;
t640 = -t482 - t706;
t639 = -t487 + t705;
t635 = t133 * t786;
t634 = t141 * t786;
t621 = t495 * t650;
t618 = t420 * t685;
t617 = t495 * t685;
t614 = qJD(3) * t724;
t613 = t420 * t682;
t310 = t416 * t404;
t459 = t494 * t683;
t610 = t494 * t681;
t609 = t495 * t689;
t608 = t496 * t689;
t607 = t497 * t648;
t468 = t498 * t650;
t294 = t744 / 0.2e1;
t593 = t311 * t376 - t312 * t375;
t470 = qJD(5) + t689;
t588 = qJD(1) * t495 * t728;
t587 = t494 * t616;
t586 = t497 * t459;
t585 = t490 * t468;
t584 = t491 * t468;
t583 = t494 * t468;
t582 = t495 * t468;
t580 = qJD(1) * t633;
t547 = t132 * qJ(6) / 0.2e1 - t133 * pkin(5) / 0.2e1;
t1 = t312 * t599 + t547 - t863;
t47 = t221 * t594;
t572 = -t1 * qJD(1) + t47 * qJD(2);
t571 = t498 * t587;
t570 = t494 * t582;
t568 = -t428 * t498 + t717;
t292 = t747 / 0.2e1;
t504 = t156 * t796 + t221 * t371 / 0.2e1 + t595 * t795 + t373 * t800;
t15 = t292 - t504 + t640;
t79 = t221 * t416 - t420 * t594;
t567 = qJD(1) * t15 - qJD(2) * t79;
t503 = t371 * t800 + t595 * t797 - t542;
t17 = t294 + t503 + t639;
t78 = t221 * t420 + t416 * t594;
t566 = -qJD(1) * t17 + qJD(2) * t78;
t564 = t319 * t495 + t320 * t494;
t563 = -t354 * t494 + t355 * t495;
t559 = t312 * t579;
t508 = (t802 + (t803 + pkin(4) / 0.2e1) * t494) * t498 + t793;
t500 = t508 + t818;
t22 = t500 + t816 + t849;
t558 = -qJD(1) * t22 + t838;
t29 = t500 + t817;
t557 = -qJD(1) * t29 + t838;
t143 = -t805 - t806;
t40 = qJD(1) * t143 + qJD(2) * t60;
t184 = -t410 - t804;
t45 = qJD(1) * t60 + qJD(2) * t184;
t551 = qJD(1) * t595 + qJD(2) * t594;
t261 = -t686 - t690;
t524 = t156 * t791 + t221 * t602;
t21 = t559 + t635 / 0.2e1 + (t291 - t132 / 0.2e1) * t496 + t524;
t538 = qJD(1) * t21 + t221 * t685;
t523 = t315 * t791 + t394 * t602;
t32 = t559 - t634 / 0.2e1 + (t291 - t142 / 0.2e1) * t496 + t523;
t537 = qJD(1) * t32 + t394 * t685;
t509 = t315 * t795 - t373 * t798 + t294;
t48 = t509 + t705;
t536 = -qJD(1) * t48 + t394 * t686;
t150 = t488 + t539;
t535 = qJD(1) * t150 + t620;
t148 = qJD(1) * t194 + t416 * t685;
t465 = -t719 / 0.2e1;
t522 = -t373 * t791 + t420 * t603;
t197 = t465 - t522;
t530 = qJD(1) * t197 + t618;
t464 = t719 / 0.2e1;
t198 = t464 + t522;
t529 = -qJD(1) * t198 + t618;
t378 = t489 + (t490 / 0.2e1 - t491 / 0.2e1) * t497;
t528 = -qJD(1) * t378 + t617;
t412 = t621 + t685;
t525 = (qJD(2) * t375 + t658) * t371;
t432 = t491 * t492 + t493;
t519 = qJD(1) * t432 + t587;
t517 = qJD(4) * t633 - t661;
t513 = (t311 * t789 + t312 * t868) * t498;
t329 = t493 + t805;
t510 = -t329 * qJD(1) - t373 * t686 - t677;
t502 = t508 - t818;
t476 = -t650 / 0.2e1;
t475 = t650 / 0.2e1;
t474 = -t649 / 0.2e1;
t444 = t470 * qJ(6);
t441 = t455 * qJD(3);
t439 = t498 * t614;
t438 = t491 * t607;
t437 = t490 * t607;
t429 = t497 * t610;
t425 = t430 * qJD(3);
t424 = t580 + t598;
t423 = t470 * t496;
t411 = qJD(5) * t488 + t468;
t408 = -0.2e1 * t570;
t407 = 0.2e1 * t570;
t403 = t420 * qJD(3);
t401 = t419 * qJD(2);
t395 = t414 * qJD(3);
t393 = qJD(2) * t490 + t494 * t621;
t379 = t491 * t488 + t489 * t490 + t489;
t377 = t416 * t682;
t369 = t412 * t498;
t368 = -t495 * t648 + t583;
t351 = (t491 * t650 + t617) * t498;
t350 = (t490 * t650 - t617) * t498;
t325 = t494 * t649 - t402;
t285 = t301 * qJD(4);
t283 = t373 * t676;
t255 = t498 * t520 + t799;
t200 = qJD(2) * t410 + t420 * t690;
t199 = t465 + t522;
t196 = t464 - t522;
t183 = -t398 - t237;
t178 = t184 * qJD(3);
t175 = t641 + t540;
t152 = t224 * qJD(2) - t362 * t498;
t151 = t488 - t539;
t140 = -t495 * t715 / 0.2e1 + t428 * t603 + t366 * t792 - t725 / 0.2e1 + (-t783 / 0.2e1 - pkin(3) / 0.2e1) * t497;
t138 = t143 * qJD(3);
t135 = (qJD(2) * t376 - t362) * t373;
t134 = t137 * qJD(5);
t123 = t743 / 0.2e1 + t318 * t791 + t793 + (t802 + t784 / 0.2e1) * t498;
t114 = t255 * qJD(2) - t866;
t105 = -qJD(5) * t507 - t692;
t104 = qJD(2) * t195 + t664;
t93 = -t194 * qJD(2) - t496 * t677 - t664;
t80 = qJD(5) * t255 - t420 * t649 + t692;
t72 = -t376 * t690 - t855;
t58 = -t261 * t376 - t855;
t51 = -t509 + t705;
t50 = t292 - t541 + t706;
t34 = t294 - t542 + t596;
t31 = t142 * t788 + t634 / 0.2e1 + t513 + t523;
t30 = t502 - t817;
t25 = t136 * t789 + t762 / 0.2e1 + (t578 + t782 / 0.2e1) * t498 - t514;
t23 = t502 - t816 + t849;
t20 = t132 * t788 - t635 / 0.2e1 + t513 + t524;
t18 = t295 - t503 + t639;
t16 = t291 + t504 + t640;
t9 = t10 * qJD(5);
t4 = t124 * t795 + t128 * t797 + t137 * t794 + t511 + t546;
t2 = t73 + t128 * t312 / 0.2e1 + t547 + t863;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t607, t463 * qJD(2), 0, -t607, 0, 0, -pkin(1) * t649, -pkin(1) * t648, 0, 0, t438, -0.2e1 * t571, -t401, t437, -t654, -t607, -qJD(2) * t172 + t439, t173 * qJD(2) - t586, -qJD(2) * t67 + t395, qJD(2) * t92 - qJD(3) * t179, t438, -t401, 0.2e1 * t571, -t607, t654, t437, qJD(2) * t69 - t492 * t610 + t439, -t61 * qJD(2) + t680 * t727 + t395, -t68 * qJD(2) + t432 * qJD(4) + t586, qJD(2) * t57 - qJD(3) * t166 - qJD(4) * t182, t135, -t852, t152, t525, t812, -t607, t35 * qJD(2) + t63 * qJD(5) + t498 * t659 + t285, -t36 * qJD(2) - t62 * qJD(5) + t809, qJD(2) * t14 - qJD(4) * t202 + t138, qJD(2) * t19 + qJD(3) * t44 - qJD(4) * t43, t135, t152, t852, -t607, -t812, t525, t27 * qJD(2) + t39 * qJD(5) + t285 + (-t660 + t683) * t373, t11 * qJD(2) - t201 * qJD(4) + t12 * qJD(5) - t371 * t481 + t138, t26 * qJD(2) + t38 * qJD(5) + t329 * qJD(6) - t809, qJD(2) * t7 + qJD(3) * t42 - qJD(4) * t37 + qJD(5) * t8 + qJD(6) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, t651, t648, -t468, -t649, 0, -t643 - t645, pkin(7) * t649 - t644, 0, 0, t351, t408 - t688, t325, t350, -t846, -t468, -t672 + (t494 * t575 - t469) * qJD(2) + t459, t494 * t643 + t671 + (qJD(2) * t575 + t683) * t495, qJD(2) * t563 - t710, t707 + (-pkin(2) * t780 + qJ(3) * t563) * qJD(2) + t175 * qJD(3), t351, t325, t407 + t688, -t468, t846, t350, t708 + (-t367 * t495 - t494 * t568) * qJD(2) + t459 + t379 * qJD(4), qJD(2) * t564 - t712, -t367 * t685 - t709 + t429 + (qJD(2) * t568 - t683) * t495, t713 + (qJ(3) * t564 + t367 * t428) * qJD(2) + t123 * qJD(3) + t140 * qJD(4), t58, -t869, t80, t861, t859, -t411, t740 + (t316 * t416 + t375 * t394 + t748) * qJD(2) + t51 * qJD(5) + t810, -t739 + (t316 * t420 + t376 * t394 + t745) * qJD(2) - t668 + t196 * qJD(4) + t50 * qJD(5), t755 + (-t141 * t420 - t142 * t416 + t593) * qJD(2) + t826 + t787, t753 + (-t141 * t311 + t142 * t312 + t316 * t394) * qJD(2) + t30 * qJD(3) + t31 * qJD(4) + t9, t58, t80, t869, -t411, -t859, t861, t750 + (t157 * t416 + t221 * t375 + t748) * qJD(2) + t18 * qJD(5) + t151 * qJD(6) + t810, t766 + (-t132 * t416 + t133 * t420 + t593) * qJD(2) + t59 + t826 + t4 * qJD(5) + t255 * qJD(6), t751 + (-t157 * t420 - t221 * t376 - t745) * qJD(2) + t668 + t199 * qJD(4) + t16 * qJD(5) + t283, t775 + (t132 * t312 + t133 * t311 + t157 * t221) * qJD(2) + t23 * qJD(3) + t20 * qJD(4) + t2 * qJD(5) + t34 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, -t368, t657, qJD(2) * t175 - t698, 0, 0, 0, 0, 0, 0, t369, t657, t368, qJD(2) * t123 - t700, 0, 0, 0, 0, 0, 0, t170, -t814, t40, qJD(2) * t30 + t769 + t829, 0, 0, 0, 0, 0, 0, t170, t40, t814, qJD(2) * t23 + t771 + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t379 - t588, t583, t519, qJD(2) * t140 - t697, 0, 0, 0, 0, 0, 0, t104, qJD(2) * t196 + t824, -t695 + t841, qJD(2) * t31 - t770 + t834, 0, 0, 0, 0, 0, 0, t104, -t696 + t841, qJD(2) * t199 - t824, qJD(2) * t20 + qJD(5) * t25 - t738 + t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t853, t555, t114, -t853, -t872, t474, qJD(2) * t51 - t134 + t768, qJD(2) * t50 + t679 - t711, t777, t767, t853, t114, -t555, t474, t872, -t853, qJD(2) * t18 - t134 + t772, t4 * qJD(2) + qJD(5) * t574 - t660 + t765, qJD(2) * t16 + t481 - t679 + t732, t774 + t2 * qJD(2) + t25 * qJD(4) + (-pkin(5) * t137 - qJ(6) * t136) * qJD(5) + t124 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t151 - t623, t114, -t510, qJD(2) * t34 + qJD(5) * t124 + t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, -t651, 0, t468, 0, 0, t645, t644, 0, 0, -t584, t407, t402, -t585, t655, t468, t672, -t671, t710, -qJD(3) * t174 - t707, -t584, t402, t408, t468, -t655, -t585, -qJD(4) * t378 - t708, -t495 * t680 + t712, t429 + t709, -qJD(3) * t122 - qJD(4) * t139 - t713, t72, t870, t105, t860, -t858, t411, -qJD(5) * t48 - t740 + t811, qJD(4) * t197 - qJD(5) * t49 - t684 + t739, -t755 + t787 + t832, -qJD(3) * t29 + qJD(4) * t32 - t753 + t9, t72, t105, -t870, t411, t858, t860, -qJD(5) * t17 - qJD(6) * t150 - t750 + t811, -qJD(5) * t3 - qJD(6) * t507 + t59 - t766 + t832, qJD(4) * t198 - qJD(5) * t15 + t283 + t684 - t751, -qJD(3) * t22 + qJD(4) * t21 - qJD(5) * t1 - qJD(6) * t33 - t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, t425, 0, 0, 0, 0, 0, 0, t610, t441, t490 * qJD(4), -t428 * t682 + t425, -t310, t856, 0, t310, 0, 0, t394 * t404 + t377, -t394 * t398 + t613, t178, t394 * t682 + t822, -t310, 0, -t856, 0, 0, t310, qJD(5) * t78 - t420 * t656 + t377, t178, qJD(5) * t79 + qJD(6) * t410 - t613, t822 + t47 * qJD(5) + (-t676 + t682) * t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t652, t848, 0, 0, 0, 0, 0, 0, 0, t652, 0, t847, 0, 0, 0, 0, 0, 0, -t821, -t667, t45, t557 + t828, 0, 0, 0, 0, 0, 0, -t821, t45, t667, t558 + t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t528, -t609, t393, -t428 * t685 - t675, 0, 0, 0, 0, 0, 0, t148, t530, t844, t537 + t833, 0, 0, 0, 0, 0, 0, t148, t844, -t529, t538 + t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t854, t553, t183, t854, -t864, t475, -t309 + t536, -t394 * t687 + t678 - t729, t778, t773, -t854, t183, -t553, t475, t864, t854, -t309 + t566, qJD(5) * t573 - t656 - t776, -t567 - t678 (-pkin(5) * t312 - qJ(6) * t311) * qJD(5) + t312 * qJD(6) + t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t535, t183, t200, -t221 * t686 + t309 - t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, t583, -t657, qJD(2) * t174 + t698, 0, 0, 0, 0, 0, 0, -t582, -t657, -t583, qJD(2) * t122 - t497 * t681 + t700, 0, 0, 0, 0, 0, 0, -t872, t850, -t40, qJD(2) * t29 - t769 + t831, 0, 0, 0, 0, 0, 0, -t872, -t40, -t850, qJD(2) * t22 - qJD(5) * t595 + qJD(6) * t373 - t771 + t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t652, -t848, 0, 0, 0, 0, 0, 0, 0, -t652, 0, -t682 - t847, 0, 0, 0, 0, 0, 0, t865, t845, -t45, -t557 + t830, 0, 0, 0, 0, 0, 0, t865, -t45, -t845, -qJD(5) * t594 - t558 + t676 + t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, 0, 0, 0, 0, 0, 0, 0, 0, 0, t807, 0, 0, 0, 0, 0, 0, 0, 0, 0, t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t258, 0, 0, 0, 0, 0, 0, 0, 0, t261, 0, -t258, -t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t378 + t588, -t368, -t519, qJD(2) * t139 + t614 + t697, 0, 0, 0, 0, 0, 0, t93, -t197 * qJD(2) + t862, t695 - t842, -qJD(2) * t32 + t770 - t836, 0, 0, 0, 0, 0, 0, t93, t696 - t842, -t198 * qJD(2) - t862, -t21 * qJD(2) - t24 * qJD(5) + t481 * t496 + t738 - t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528, t609, -t393, t675 + (qJD(2) * t428 + qJD(3)) * t494, 0, 0, 0, 0, 0, 0, -t148, -t530, -t844, -t537 - t835, 0, 0, 0, 0, 0, 0, -t148, -t844, t529, -t538 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t412, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t807, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, -t424, 0, 0, 0, 0, 0, 0, 0, 0, -t423, 0, t424, -t752 + (t632 - t782) * qJD(5) + t496 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t853, -t555, t814, t853, t170, t474, qJD(2) * t48 + t704 - t768, t49 * qJD(2) + t517 + t711, -t777, -t767, -t853, t814, t555, t474, -t170, t853, qJD(2) * t17 + t704 - t772, qJD(2) * t3 - t765, t15 * qJD(2) + t481 - t517 - t732, qJ(6) * t481 + t1 * qJD(2) + qJD(3) * t595 + t24 * qJD(4) - t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t854, -t553, t237, -t854, -t825, t476, t403 - t536, t729 + (qJD(2) * t394 - qJD(3)) * t416, -t778, -t773, t854, t237, t553, t476, t825, -t854, t403 - t566, t776, qJD(3) * t416 + t567, qJD(3) * t594 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t258, 0, 0, 0, 0, 0, 0, 0, 0, -t261, 0, t258, t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t608, t580, 0, 0, 0, 0, 0, 0, 0, 0, t608, 0, -t580, t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t150 + t623, t814, t510, -qJ(6) * t677 + t33 * qJD(2) - t704 - t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t535, t237, -t200, t741 + (qJD(2) * t221 - qJD(3)) * t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, -t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
