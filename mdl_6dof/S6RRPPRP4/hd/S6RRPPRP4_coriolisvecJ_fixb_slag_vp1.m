% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRPPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPPRP4_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPPRP4_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:37:02
% EndTime: 2019-03-09 08:39:22
% DurationCPUTime: 129.18s
% Computational Cost: add. (32019->1381), mult. (86922->1717), div. (0->0), fcn. (92184->8), ass. (0->617)
t1267 = Icges(4,1) + Icges(5,1);
t1266 = Icges(4,4) - Icges(5,5);
t1265 = Icges(5,4) + Icges(4,5);
t1279 = Icges(4,2) + Icges(5,3);
t1262 = Icges(4,6) - Icges(5,6);
t1274 = Icges(5,2) + Icges(4,3);
t1219 = Icges(6,4) - Icges(7,5);
t640 = sin(pkin(9));
t641 = cos(pkin(9));
t646 = cos(qJ(1));
t644 = sin(qJ(1));
t645 = cos(qJ(2));
t968 = t644 * t645;
t533 = t640 * t968 + t641 * t646;
t966 = t646 * t640;
t534 = t641 * t968 - t966;
t643 = sin(qJ(2));
t970 = t643 * t644;
t1178 = -t1262 * t970 - t1266 * t534 + t1279 * t533;
t1273 = t1265 * t970 - t1266 * t533 + t1267 * t534;
t1191 = Icges(6,1) + Icges(7,1);
t1218 = Icges(7,4) + Icges(6,5);
t1190 = Icges(6,2) + Icges(7,3);
t1278 = Icges(7,2) + Icges(6,3);
t1217 = Icges(6,6) - Icges(7,6);
t535 = -t644 * t641 + t645 * t966;
t967 = t645 * t646;
t536 = t640 * t644 + t641 * t967;
t969 = t643 * t646;
t1177 = -t1262 * t969 - t1266 * t536 + t1279 * t535;
t1176 = -t1262 * t533 + t1265 * t534 + t1274 * t970;
t1175 = -t1262 * t535 + t1265 * t536 + t1274 * t969;
t1173 = t1265 * t969 - t1266 * t535 + t1267 * t536;
t1277 = -t1262 * t640 + t1265 * t641;
t1038 = cos(qJ(5));
t642 = sin(qJ(5));
t383 = -t1038 * t533 + t534 * t642;
t384 = t1038 * t534 + t533 * t642;
t174 = Icges(6,5) * t384 - Icges(6,6) * t383 - Icges(6,3) * t970;
t177 = Icges(7,4) * t384 - Icges(7,2) * t970 + Icges(7,6) * t383;
t1215 = t174 + t177;
t387 = -t1038 * t535 + t536 * t642;
t388 = t1038 * t536 + t535 * t642;
t176 = Icges(6,5) * t388 - Icges(6,6) * t387 - Icges(6,3) * t969;
t179 = Icges(7,4) * t388 - Icges(7,2) * t969 + Icges(7,6) * t387;
t1237 = t176 + t179;
t1003 = Icges(7,5) * t387;
t185 = Icges(7,1) * t388 - Icges(7,4) * t969 + t1003;
t362 = Icges(6,4) * t387;
t188 = Icges(6,1) * t388 - Icges(6,5) * t969 - t362;
t1130 = t185 + t188;
t360 = Icges(7,5) * t388;
t173 = -Icges(7,6) * t969 + Icges(7,3) * t387 + t360;
t1008 = Icges(6,4) * t388;
t182 = -Icges(6,2) * t387 - Icges(6,6) * t969 + t1008;
t1132 = t182 - t173;
t1245 = -t1130 * t384 + t1132 * t383;
t359 = Icges(7,5) * t384;
t171 = -Icges(7,6) * t970 + Icges(7,3) * t383 + t359;
t1009 = Icges(6,4) * t384;
t181 = Icges(6,2) * t383 + Icges(6,6) * t970 - t1009;
t1133 = t181 + t171;
t1004 = Icges(7,5) * t383;
t184 = -Icges(7,1) * t384 + Icges(7,4) * t970 - t1004;
t361 = Icges(6,4) * t383;
t186 = Icges(6,1) * t384 - Icges(6,5) * t970 - t361;
t1185 = t184 - t186;
t1246 = -t1133 * t387 + t1185 * t388;
t1276 = (t1215 * t646 + t1237 * t644) * t643 + t1245 + t1246;
t1169 = t1130 * t388 - t1132 * t387;
t1243 = t1133 * t383 - t1185 * t384;
t1275 = -(t1215 * t644 - t1237 * t646) * t643 - t1169 + t1243;
t727 = t1038 * t641 + t640 * t642;
t1083 = t727 * t643;
t1272 = t1219 * t1083;
t860 = t1038 * t640;
t972 = t641 * t643;
t508 = t642 * t972 - t643 * t860;
t1271 = t1219 * t508;
t1270 = -t1178 * t535 - t1273 * t536;
t1269 = -t1176 * t969 + t1270;
t1268 = t1173 * t536 + t1175 * t969 + t1177 * t535;
t1125 = t1190 * t508 - t1217 * t645 - t1272;
t1248 = t1083 * t1218 - t1217 * t508 + t1278 * t645;
t1123 = t1083 * t1191 + t1218 * t645 - t1271;
t759 = Icges(5,5) * t641 + Icges(5,3) * t640;
t762 = Icges(4,4) * t641 - Icges(4,2) * t640;
t1211 = t1262 * t645 + (t759 - t762) * t643;
t1172 = -t1274 * t645 + t1277 * t643;
t764 = Icges(5,1) * t641 + Icges(5,5) * t640;
t765 = Icges(4,1) * t641 - Icges(4,4) * t640;
t1210 = -t1265 * t645 + (t764 + t765) * t643;
t1261 = t1274 * t643 + t1277 * t645;
t1260 = t1178 * t533 + t1273 * t534;
t1189 = t1173 * t534 + t1175 * t970 + t1177 * t533;
t634 = Icges(3,4) * t645;
t763 = -Icges(3,2) * t643 + t634;
t492 = Icges(3,6) * t644 + t646 * t763;
t1011 = Icges(3,4) * t643;
t580 = Icges(3,1) * t645 - t1011;
t494 = Icges(3,5) * t644 + t580 * t646;
t438 = t494 * t968;
t576 = Icges(3,5) * t645 - Icges(3,6) * t643;
t490 = Icges(3,3) * t644 + t576 * t646;
t826 = t490 * t646 - t438;
t242 = -t492 * t970 - t826;
t1259 = t242 + t1189;
t906 = qJD(2) * t646;
t854 = t643 * t906;
t411 = qJD(1) * t533 + t640 * t854;
t412 = -qJD(1) * t534 - t641 * t854;
t153 = qJD(5) * t388 + t1038 * t411 + t412 * t642;
t154 = -qJD(5) * t387 + t1038 * t412 - t411 * t642;
t852 = t645 * t906;
t912 = qJD(1) * t644;
t859 = t643 * t912;
t707 = -t852 + t859;
t87 = Icges(7,5) * t154 + Icges(7,6) * t707 + Icges(7,3) * t153;
t93 = Icges(6,4) * t154 - Icges(6,2) * t153 + Icges(6,6) * t707;
t1258 = t87 - t93;
t908 = qJD(2) * t644;
t855 = t643 * t908;
t573 = t640 * t855;
t910 = qJD(1) * t646;
t857 = t645 * t910;
t413 = t640 * t857 - t641 * t912 - t573;
t414 = qJD(1) * t536 - t641 * t855;
t155 = qJD(5) * t384 - t1038 * t413 + t414 * t642;
t156 = -qJD(5) * t383 + t1038 * t414 + t413 * t642;
t907 = qJD(2) * t645;
t1192 = t644 * t907;
t541 = t643 * t910 + t1192;
t88 = Icges(7,5) * t156 - Icges(7,6) * t541 + Icges(7,3) * t155;
t94 = Icges(6,4) * t156 - Icges(6,2) * t155 - Icges(6,6) * t541;
t1257 = -t88 + t94;
t89 = Icges(6,5) * t154 - Icges(6,6) * t153 + Icges(6,3) * t707;
t91 = Icges(7,4) * t154 + Icges(7,2) * t707 + Icges(7,6) * t153;
t1256 = -t89 - t91;
t90 = Icges(6,5) * t156 - Icges(6,6) * t155 - Icges(6,3) * t541;
t92 = Icges(7,4) * t156 - Icges(7,2) * t541 + Icges(7,6) * t155;
t1255 = t90 + t92;
t95 = Icges(7,1) * t154 + Icges(7,4) * t707 + Icges(7,5) * t153;
t97 = Icges(6,1) * t154 - Icges(6,4) * t153 + Icges(6,5) * t707;
t1254 = t95 + t97;
t96 = Icges(7,1) * t156 - Icges(7,4) * t541 + Icges(7,5) * t155;
t98 = Icges(6,1) * t156 - Icges(6,4) * t155 - Icges(6,5) * t541;
t1253 = -t96 - t98;
t1080 = t1123 * t388 + t1125 * t387 - t1248 * t969;
t971 = t641 * t645;
t510 = t642 * t971 - t645 * t860;
t342 = qJD(2) * t510 + qJD(5) * t1083;
t511 = t727 * t645;
t901 = qJD(5) * t643;
t343 = (-t641 * t642 + t860) * t901 + qJD(2) * t511;
t909 = qJD(2) * t643;
t1251 = t1190 * t342 + t1217 * t909 - t1219 * t343;
t1250 = -t1217 * t342 + t1218 * t343 - t1278 * t909;
t1249 = t1191 * t343 - t1218 * t909 - t1219 * t342;
t1247 = t1210 * t641 + t1211 * t640;
t1232 = t1173 * t641 + t1177 * t640;
t1081 = t1123 * t384 + t1125 * t383 - t1248 * t970;
t1244 = -t1178 * t640 - t1273 * t641;
t1242 = t1268 * t644 + t1269 * t646;
t996 = Icges(3,3) * t646;
t489 = Icges(3,5) * t968 - Icges(3,6) * t970 - t996;
t1006 = Icges(3,5) * t646;
t615 = Icges(3,4) * t970;
t493 = Icges(3,1) * t968 - t1006 - t615;
t999 = Icges(3,6) * t646;
t491 = Icges(3,4) * t968 - Icges(3,2) * t970 - t999;
t976 = t491 * t643;
t748 = -t493 * t645 + t976;
t1241 = t1176 * t970 - t489 * t646 - t644 * t748 + t1260;
t577 = Icges(3,2) * t645 + t1011;
t579 = Icges(3,1) * t643 + t634;
t746 = t577 * t643 - t579 * t645;
t575 = Icges(3,5) * t643 + Icges(3,6) * t645;
t973 = t575 * t646;
t1240 = t1172 * t970 + t1210 * t534 + t1211 * t533 - t644 * t746 - t973;
t974 = t575 * t644;
t1239 = t1172 * t969 + t1210 * t536 + t1211 * t535 - t646 * t746 + t974;
t1225 = -t1215 * t970 + t1243;
t1224 = -t1237 * t970 - t1245;
t1223 = -t1215 * t969 - t1246;
t1222 = -t1237 * t969 + t1169;
t1184 = t1262 * t707 - t1266 * t412 - t1279 * t411;
t1183 = t1262 * t541 + t1266 * t414 - t1279 * t413;
t1182 = t1262 * t411 + t1265 * t412 - t1274 * t707;
t1181 = t1262 * t413 - t1265 * t414 - t1274 * t541;
t1180 = -t1265 * t707 + t1266 * t411 + t1267 * t412;
t1179 = -t1265 * t541 + t1266 * t413 - t1267 * t414;
t472 = Icges(5,6) * t643 + t645 * t759;
t446 = t472 * qJD(2);
t478 = Icges(4,6) * t643 + t645 * t762;
t449 = t478 * qJD(2);
t1235 = t446 - t449;
t1234 = t1261 * qJD(2);
t480 = Icges(5,4) * t643 + t645 * t764;
t450 = t480 * qJD(2);
t482 = Icges(4,5) * t643 + t645 * t765;
t451 = t482 * qJD(2);
t1233 = t450 + t451;
t1037 = pkin(2) * t645;
t584 = qJ(3) * t643 + t1037;
t552 = t584 * t644;
t638 = t646 * pkin(7);
t587 = pkin(1) * t644 - t638;
t571 = qJD(1) * t587;
t904 = qJD(3) * t646;
t610 = t643 * t904;
t629 = pkin(7) * t910;
t922 = qJ(3) * t852 + t610;
t1231 = qJD(1) * t552 + t571 - t610 + t629 + t922;
t1230 = t1248 * t645;
t1229 = -t577 + t580 + t1172;
t358 = qJD(6) * t387;
t900 = qJD(5) * t645;
t622 = qJD(1) + t900;
t1140 = rSges(7,3) + qJ(6);
t1150 = rSges(7,1) + pkin(5);
t958 = -rSges(7,2) * t970 + t1140 * t383 + t1150 * t384;
t1228 = t622 * t958 - t358;
t1149 = -t1133 * t153 + t1185 * t154 - t1215 * t707 + t1253 * t388 + t1255 * t969 + t1257 * t387;
t1148 = t1130 * t154 - t1132 * t153 + t1237 * t707 + t1254 * t388 + t1256 * t969 + t1258 * t387;
t1147 = -t1133 * t155 + t1185 * t156 + t1215 * t541 + t1253 * t384 + t1255 * t970 + t1257 * t383;
t1146 = t1130 * t156 - t1132 * t155 - t1237 * t541 + t1254 * t384 + t1256 * t970 + t1258 * t383;
t1199 = t1123 * t154 + t1125 * t153 + t1248 * t707 + t1249 * t388 - t1250 * t969 + t1251 * t387;
t1198 = t1123 * t156 + t1125 * t155 - t1248 * t541 + t1249 * t384 - t1250 * t970 + t1251 * t383;
t987 = t177 * t645;
t71 = -t1083 * t184 + t171 * t508 + t987;
t991 = t174 * t645;
t73 = t1083 * t186 + t181 * t508 + t991;
t1221 = t71 + t73;
t985 = t179 * t645;
t72 = t1083 * t185 + t173 * t508 + t985;
t989 = t176 * t645;
t74 = t1083 * t188 - t182 * t508 + t989;
t1220 = t72 + t74;
t1216 = t1080 * t622;
t1079 = t1083 * t1123 + t1125 * t508 + t1230;
t456 = t508 * t644;
t457 = t644 * t1083;
t1214 = t1217 * t456 - t1218 * t457 - t1278 * t968;
t458 = t508 * t646;
t459 = t646 * t1083;
t1213 = t1217 * t458 - t1218 * t459 - t1278 * t967;
t1212 = -t1217 * t510 + t1218 * t511 - t1278 * t643;
t517 = qJD(4) * t535;
t223 = t412 * pkin(3) - qJ(4) * t411 + t517;
t391 = pkin(3) * t534 + t533 * qJ(4);
t1209 = qJD(1) * t391 + t1231 + t223 - t517;
t911 = qJD(1) * t645;
t719 = qJD(2) * t575;
t1208 = (-t644 * t719 + (t490 + t748) * qJD(1)) * t646;
t1207 = -t1232 * t644 - t1244 * t646;
t1206 = t1239 * qJD(1);
t941 = -t644 * t489 - t493 * t967;
t243 = -t491 * t969 - t941;
t940 = t644 * t490 + t494 * t967;
t244 = -t492 * t969 + t940;
t1205 = (-t243 * t646 + t244 * t644 + t1242) * qJD(2);
t1204 = (-t1241 * t646 + t1259 * t644) * qJD(2);
t1203 = t1240 * qJD(1);
t190 = rSges(6,1) * t384 - rSges(6,2) * t383 - rSges(6,3) * t970;
t309 = rSges(6,1) * t1083 - rSges(6,2) * t508 + rSges(6,3) * t645;
t560 = t644 * t901 + t906;
t1202 = t190 * t622 + t309 * t560;
t1201 = t1081 * t622;
t1200 = (-t579 - t763 - t1247 + t1261) * qJD(1);
t559 = -t646 * t901 + t908;
t1143 = t1224 * t559 - t1225 * t560 + t1201;
t1142 = t1222 * t559 - t1223 * t560 + t1216;
t1197 = t1083 * t1249 + t1123 * t343 + t1125 * t342 - t1248 * t909 + t1250 * t645 + t1251 * t508;
t1171 = (t1083 * t1217 + t1218 * t508) * t622 + (-t1217 * t384 - t1218 * t383) * t560 + (t1217 * t388 + t1218 * t387) * t559;
t782 = pkin(3) * t641 + qJ(4) * t640;
t1082 = t782 * t643;
t393 = t536 * pkin(3) + qJ(4) * t535;
t918 = t646 * pkin(1) + t644 * pkin(7);
t1106 = qJD(1) * t918;
t555 = pkin(2) * t967 + qJ(3) * t969;
t581 = pkin(2) * t643 - qJ(3) * t645;
t630 = qJD(3) * t643;
t608 = t644 * t630;
t816 = qJD(1) * t555 - t581 * t908 + t1106 + t608;
t903 = qJD(4) * t533;
t1170 = -qJD(1) * t393 + t1082 * t908 - t816 - t903;
t567 = pkin(4) * t971 - pkin(8) * t643;
t539 = t782 * t645;
t926 = -t539 - t584;
t1165 = qJD(2) * (-t567 + t926);
t443 = pkin(4) * t534 - pkin(8) * t970;
t566 = pkin(4) * t972 + pkin(8) * t645;
t927 = -t1082 - t581;
t867 = -t566 + t927;
t798 = t646 * t867;
t744 = qJD(2) * t798;
t943 = t412 * pkin(4) + pkin(8) * t859;
t1164 = qJD(1) * t443 + t1209 - t744 + t943;
t582 = rSges(3,1) * t643 + rSges(3,2) * t645;
t1163 = t582 * t908 - t1106;
t523 = t536 * pkin(4);
t445 = -pkin(8) * t969 + t523;
t1114 = -qJD(1) * t445 + t566 * t908 + t1170;
t899 = qJD(6) * t383;
t951 = rSges(7,2) * t645 + t1083 * t1150 + t1140 * t508;
t1078 = t1140 * t387 + t1150 * t388;
t956 = -rSges(7,2) * t969 + t1078;
t48 = -t559 * t951 + t956 * t622 - t1114 + t899;
t1162 = t1203 + t1204;
t1161 = t1205 + t1206;
t720 = qJD(2) * t577;
t721 = qJD(2) * t579;
t1160 = (-qJD(1) * t492 + t644 * t720 - t1181) * t645 + (-qJD(1) * t494 + t1179 * t641 + t1183 * t640 + t644 * t721) * t643 + (-t1176 * t643 + t1244 * t645 + t748) * qJD(2);
t975 = t492 * t643;
t747 = -t494 * t645 + t975;
t1159 = (-t646 * t720 + (-t644 * t763 + t999) * qJD(1) - t1182) * t645 + (-t646 * t721 + (-t580 * t644 + t1006) * qJD(1) + t1180 * t641 + t1184 * t640) * t643 + (t1175 * t643 + t1232 * t645 - t747) * qJD(2);
t1059 = t746 * qJD(1) + t576 * qJD(2);
t562 = t763 * qJD(2);
t563 = t580 * qJD(2);
t655 = qJD(1) * t575 - t562 * t643 + t563 * t645 + (-t577 * t645 - t579 * t643) * qJD(2);
t1158 = t1059 * t644 - t1172 * t707 + t1210 * t412 - t1211 * t411 + t1233 * t536 + t1234 * t969 + t1235 * t535 + t655 * t646;
t1157 = -t1059 * t646 + t1172 * t541 + t1210 * t414 + t1211 * t413 + t1233 * t534 + t1234 * t970 + t1235 * t533 + t655 * t644;
t1156 = t243 - t1269;
t1155 = (t491 - t1176) * t645 + (t493 - t1244) * t643;
t1154 = (-t1175 + t492) * t645 + (t1232 + t494) * t643;
t1153 = 0.2e1 * qJD(2);
t894 = qJD(2) * qJD(5);
t841 = t645 * t894;
t452 = qJD(1) * t559 - t644 * t841;
t453 = qJD(1) * t560 - t646 * t841;
t842 = t643 * t894;
t1152 = -t1080 * t842 + t1148 * t559 + t1149 * t560 + t1199 * t622 + t1222 * t453 + t1223 * t452;
t1151 = -t1081 * t842 + t1146 * t559 + t1147 * t560 + t1198 * t622 + t1224 * t453 + t1225 * t452;
t17 = t1083 * t96 + t171 * t342 - t177 * t909 - t184 * t343 + t508 * t88 + t645 * t92;
t19 = t1083 * t98 - t174 * t909 + t181 * t342 + t186 * t343 - t508 * t94 + t645 * t90;
t1145 = -t17 - t19;
t18 = t1083 * t95 + t173 * t342 - t179 * t909 + t185 * t343 + t508 * t87 + t645 * t91;
t20 = t1083 * t97 - t176 * t909 - t182 * t342 + t188 * t343 - t508 * t93 + t645 * t89;
t1144 = t18 + t20;
t1141 = t1079 * t622 + t1220 * t559 - t1221 * t560;
t1138 = t190 * t901;
t945 = t388 * rSges(6,1) - t387 * rSges(6,2);
t194 = -rSges(6,3) * t969 + t945;
t1137 = t194 * t901;
t1129 = t1190 * t456 - t1217 * t968 - t1219 * t457;
t1128 = -t1190 * t458 + t1217 * t967 + t1219 * t459;
t1127 = t1191 * t457 + t1218 * t968 - t1219 * t456;
t1126 = -t1191 * t459 - t1218 * t967 + t1219 * t458;
t1124 = t1190 * t510 + t1217 * t643 - t1219 * t511;
t1122 = t1191 * t511 - t1218 * t643 - t1219 * t510;
t1121 = t1211 * t644;
t1120 = t1211 * t646;
t1119 = t1210 * t644;
t1118 = t1210 * t646;
t1117 = t472 - t478;
t1116 = t480 + t482;
t1115 = (-t1212 * t643 - t1230) * t622 + (t1214 * t643 + t987 + t991) * t560 + (-t1213 * t643 - t985 - t989) * t559;
t1113 = t1220 * t646 + t1221 * t644;
t1112 = t1220 * t644 - t1221 * t646;
t1111 = t1222 * t646 + t1223 * t644;
t1110 = t1222 * t644 - t1223 * t646;
t1109 = t1224 * t646 + t1225 * t644;
t1108 = t1224 * t644 - t1225 * t646;
t830 = t48 * t951;
t902 = qJD(4) * t640;
t605 = t643 * t902;
t905 = qJD(3) * t645;
t793 = t552 * t908 + t555 * t906 - t905;
t700 = t391 * t908 + t393 * t906 + t605 + t793;
t683 = t443 * t908 + t445 * t906 + t700;
t898 = qJD(6) * t508;
t34 = t559 * t958 + t560 * t956 + t683 + t898;
t831 = t34 * t958;
t1107 = t830 - t831;
t1104 = (qJD(2) * t1207 + t1200) * t643 + t1229 * t911;
t1054 = t644 * (-t577 * t646 + t494) - t646 * (-Icges(3,2) * t968 + t493 - t615);
t693 = t491 * t646 - t492 * t644;
t1103 = -t1054 * t643 + (t1175 * t644 - t1176 * t646 + t693) * t645;
t526 = t566 * t646;
t468 = t646 * t1082;
t553 = t581 * t646;
t929 = -qJD(1) * t553 + t644 * t905;
t701 = -qJD(1) * t468 - t605 * t644 + t929;
t1096 = -qJD(1) * t526 + t1165 * t644 + t701;
t525 = t566 * t644;
t611 = t645 * t904;
t741 = -t605 * t646 + t611;
t557 = t581 * t912;
t937 = t1082 * t912 + t557;
t467 = t644 * t1082;
t550 = t581 * t644;
t938 = t467 + t550;
t1090 = -t646 * t1165 - t741 - (t525 + t938) * qJD(1) + t566 * t912 + t937;
t1088 = pkin(7) * qJD(1);
t925 = -t552 - t587;
t877 = -t391 + t925;
t930 = t517 + t610;
t659 = (-t443 + t877) * qJD(1) + t744 + t930;
t47 = -t560 * t951 - t1228 + t659;
t1087 = t47 * t951;
t1086 = -t1140 * t155 - t1150 * t156 - t899;
t1085 = rSges(7,2) * t859 + t1140 * t153 + t1150 * t154 + t358;
t1076 = -qJD(1) * t535 + t413 + t573;
t1075 = (t1083 * t1190 - t1123 + t1271) * t622 + (-t1190 * t384 + t1004 - t1185 - t361) * t560 + (t1190 * t388 - t1003 - t1130 + t362) * t559;
t1074 = (-t1191 * t508 + t1125 - t1272) * t622 + (t1191 * t383 + t1009 - t1133 - t359) * t560 + (-t1191 * t387 - t1008 - t1132 + t360) * t559;
t1073 = t1171 * t643;
t745 = -pkin(1) - t584;
t805 = -t391 + t638;
t1072 = t745 * t644 - t443 + t805;
t1070 = -t1079 * t842 + t1197 * t622;
t339 = t536 * rSges(5,1) + rSges(5,2) * t969 + t535 * rSges(5,3);
t1064 = -qJD(1) * t339 + t1170;
t70 = t194 * t622 - t309 * t559 - t1114;
t1061 = -t646 * t719 + (-t576 * t644 + t747 + t996) * qJD(1);
t788 = rSges(4,1) * t641 - rSges(4,2) * t640;
t486 = -rSges(4,3) * t645 + t643 * t788;
t785 = rSges(5,1) * t641 + rSges(5,3) * t640;
t485 = -rSges(5,2) * t645 + t643 * t785;
t1013 = -rSges(7,2) * t541 - t1086;
t1033 = -rSges(7,2) * t852 + t1085;
t287 = -pkin(8) * t852 + t943;
t288 = pkin(4) * t414 - pkin(8) * t541;
t224 = pkin(3) * t414 + t413 * qJ(4) + t903;
t606 = t645 * t902;
t708 = -t644 * t911 - t854;
t345 = pkin(2) * t708 - qJ(3) * t859 + t922;
t920 = -pkin(2) * t855 + t608;
t346 = pkin(2) * t857 + qJ(3) * t541 + t920;
t896 = qJD(1) * qJD(2);
t844 = t646 * t896;
t895 = qJD(2) * qJD(3);
t822 = t345 * t906 + t346 * t908 + t552 * t844 + t643 * t895;
t696 = qJD(2) * t606 + t223 * t906 + t224 * t908 + t391 * t844 + t822;
t845 = t644 * t896;
t944 = -t393 - t555;
t876 = -t445 + t944;
t654 = t287 * t906 + t288 * t908 + t443 * t844 + t845 * t876 + t696;
t5 = qJD(6) * t342 + t1013 * t559 + t1033 * t560 - t452 * t956 + t453 * t958 + t654;
t1057 = t34 * t1013 + t5 * t958;
t1053 = m(4) / 0.2e1;
t1052 = m(5) / 0.2e1;
t1051 = m(6) / 0.2e1;
t1050 = m(7) / 0.2e1;
t1049 = t452 / 0.2e1;
t1048 = t453 / 0.2e1;
t1047 = -t559 / 0.2e1;
t1046 = t559 / 0.2e1;
t1045 = -t560 / 0.2e1;
t1044 = t560 / 0.2e1;
t1043 = -t622 / 0.2e1;
t1042 = t622 / 0.2e1;
t1032 = rSges(3,1) * t645;
t1031 = rSges(5,2) * t643;
t1029 = rSges(4,3) * t643;
t1027 = t17 * t560;
t1026 = t18 * t559;
t1025 = t19 * t560;
t1024 = t20 * t559;
t635 = t644 * rSges(3,3);
t69 = -t1202 + t659;
t1023 = t644 * t69;
t1022 = t646 * t69;
t1021 = t71 * t452;
t1020 = t72 * t453;
t1019 = t73 * t452;
t1018 = t74 * t453;
t1017 = -rSges(5,2) - qJ(3);
t1016 = rSges(7,2) - qJ(3);
t1015 = -rSges(4,3) - qJ(3);
t1014 = rSges(6,3) - qJ(3);
t786 = rSges(5,1) * t534 + rSges(5,3) * t533;
t335 = rSges(5,2) * t970 + t786;
t870 = -t485 + t927;
t795 = t870 * t646;
t112 = qJD(2) * t795 + (-t335 + t877) * qJD(1) + t930;
t994 = t112 * t485;
t919 = rSges(3,2) * t970 + t646 * rSges(3,3);
t506 = rSges(3,1) * t968 - t919;
t850 = t582 * t906;
t290 = -t850 + (-t506 - t587) * qJD(1);
t983 = t290 * t644;
t982 = t290 * t646;
t507 = rSges(3,1) * t967 - rSges(3,2) * t969 + t635;
t291 = qJD(1) * t507 - t1163;
t554 = t582 * t646;
t981 = t291 * t554;
t959 = -rSges(7,2) * t909 + t1140 * t342 + t1150 * t343 + t898;
t955 = t1140 * t384 - t1150 * t383;
t954 = t1140 * t388 - t1150 * t387;
t953 = -rSges(7,2) * t968 - t1140 * t456 - t1150 * t457;
t952 = -rSges(7,2) * t967 - t1140 * t458 - t1150 * t459;
t950 = rSges(7,2) * t643 - t1140 * t510 - t1150 * t511;
t340 = t536 * rSges(4,1) - t535 * rSges(4,2) + rSges(4,3) * t969;
t949 = -t340 - t555;
t948 = -t346 - t1106;
t947 = -t1083 * t1140 + t1150 * t508;
t527 = qJD(2) * t584 - t905;
t942 = -qJD(2) * t539 - t527 - t605;
t488 = t645 * t788 + t1029;
t939 = -t488 * qJD(2) - t527;
t936 = -t486 - t581;
t935 = -t488 - t584;
t931 = t644 * t552 + t646 * t555;
t843 = t645 * t895;
t928 = t581 * t845 + t646 * t843;
t921 = rSges(3,2) * t859 + rSges(3,3) * t910;
t913 = qJD(1) * t576;
t893 = pkin(2) * t969;
t881 = t154 * rSges(6,1) - t153 * rSges(6,2) + rSges(6,3) * t859;
t880 = -t224 + t948;
t879 = t646 * t345 + t644 * t346 + t552 * t910;
t878 = -t339 + t944;
t875 = t412 * rSges(4,1) + t411 * rSges(4,2) + rSges(4,3) * t852;
t874 = t412 * rSges(5,1) + rSges(5,2) * t852 - t411 * rSges(5,3);
t487 = t645 * t785 + t1031;
t873 = -t487 * qJD(2) + t942;
t872 = -t567 * qJD(2) + t942;
t869 = -t487 + t926;
t868 = -t550 * t908 - t553 * t906 + t630;
t863 = -pkin(1) - t1037;
t862 = (-rSges(7,2) - pkin(8)) * t646;
t861 = (-rSges(6,3) - pkin(8)) * t646;
t847 = -t969 / 0.2e1;
t846 = -pkin(1) - t1032;
t840 = t912 / 0.2e1;
t838 = -t909 / 0.2e1;
t837 = -t908 / 0.2e1;
t835 = -t906 / 0.2e1;
t834 = t906 / 0.2e1;
t146 = qJD(1) * t340 - t486 * t908 + t816;
t828 = t146 * t936;
t827 = t646 * t936;
t825 = -t489 + t975;
t824 = pkin(2) * t854;
t170 = rSges(6,1) * t343 - rSges(6,2) * t342 - rSges(6,3) * t909;
t823 = -t170 + t872;
t821 = -t309 + t867;
t558 = qJD(1) * (-pkin(1) * t912 + t629);
t820 = t644 * t843 + t558 + (t345 + t610) * qJD(1);
t818 = t644 * t391 + t646 * t393 + t931;
t817 = -qJD(4) * t411 + t1082 * t845 + t928;
t815 = t918 + t555;
t801 = qJD(5) * t838;
t113 = -t485 * t908 - t1064;
t800 = t113 * t870;
t796 = t872 * t646;
t791 = -rSges(3,2) * t643 + t1032;
t790 = rSges(4,1) * t414 - rSges(4,2) * t413;
t789 = -rSges(4,1) * t534 + rSges(4,2) * t533;
t787 = rSges(5,1) * t414 + rSges(5,3) * t413;
t784 = rSges(6,1) * t156 - rSges(6,2) * t155;
t769 = t872 - t959;
t768 = t867 - t951;
t758 = -t190 * t646 + t194 * t644;
t757 = -t291 * t644 - t982;
t740 = t646 * t223 + t644 * t224 + t391 * t910 + t879;
t739 = qJD(1) * t223 + qJD(4) * t413 + t820;
t737 = t644 * t443 + t646 * t445 + t818;
t735 = -t467 * t908 - t468 * t906 + t606 + t868;
t726 = -t224 - t920;
t551 = t582 * t644;
t286 = (t506 * t644 + t507 * t646) * qJD(2);
t712 = t1017 * t643 + t863;
t711 = t1015 * t643 + t863;
t710 = qJD(1) * t287 + t739;
t706 = t1033 * t34 + t5 * t956;
t704 = t393 + t815;
t698 = t47 * t958 - t48 * t956;
t697 = t34 * t956 - t1087;
t694 = -t525 * t908 - t526 * t906 + t735;
t336 = rSges(4,3) * t970 - t789;
t692 = t523 + t704;
t689 = t646 * t287 + t644 * t288 + t443 * t910 + t740;
t675 = -t288 + t726;
t673 = qJD(1) * t798 + t644 * t872;
t60 = t190 * t559 + t194 * t560 + t683;
t660 = t60 * t758 + (t646 * t70 - t1023) * t309;
t658 = t566 * t845 + (-t288 - t608 + t880) * qJD(1) + t817;
t653 = t1107 * t646 + t697 * t644;
t564 = t791 * qJD(2);
t540 = (t644 ^ 2 + t646 ^ 2) * t909;
t434 = t486 * t646;
t433 = t485 * t646;
t432 = t486 * t644;
t431 = t485 * t644;
t380 = -qJD(2) * t551 + (t646 * t791 + t635) * qJD(1);
t379 = rSges(3,1) * t708 - rSges(3,2) * t852 + t921;
t355 = -rSges(6,1) * t508 - rSges(6,2) * t1083;
t344 = (t533 * t644 + t535 * t646) * qJD(2);
t311 = rSges(6,1) * t511 - rSges(6,2) * t510 - rSges(6,3) * t643;
t272 = -rSges(6,1) * t459 + rSges(6,2) * t458 - rSges(6,3) * t967;
t270 = -rSges(6,1) * t457 + rSges(6,2) * t456 - rSges(6,3) * t968;
t240 = rSges(4,3) * t541 + t790;
t239 = rSges(5,2) * t541 + t787;
t238 = -rSges(4,3) * t859 + t875;
t237 = -rSges(5,2) * t859 + t874;
t220 = -rSges(6,1) * t387 - rSges(6,2) * t388;
t215 = -rSges(6,1) * t383 - rSges(6,2) * t384;
t196 = -t564 * t906 + (-t380 + t1163) * qJD(1);
t195 = -t564 * t908 + t558 + (t379 - t850) * qJD(1);
t145 = t610 + qJD(2) * t827 + (-t336 + t925) * qJD(1);
t128 = (t336 * t644 + t340 * t646) * qJD(2) + t793;
t105 = (t335 * t644 + t339 * t646) * qJD(2) + t700;
t102 = -rSges(6,3) * t541 + t784;
t100 = -rSges(6,3) * t852 + t881;
t86 = t939 * t906 + (-t240 + (qJD(2) * t486 - t630) * t644 + t948) * qJD(1) + t928;
t85 = qJD(1) * t238 + (qJD(1) * t827 + t644 * t939) * qJD(2) + t820;
t55 = (t238 * t646 + t240 * t644 + (t336 * t646 + t644 * t949) * qJD(1)) * qJD(2) + t822;
t54 = t873 * t906 + (-t239 + (qJD(2) * t485 - t630) * t644 + t880) * qJD(1) + t817;
t53 = qJD(1) * t237 + (qJD(1) * t795 + t644 * t873) * qJD(2) + t739;
t33 = (t237 * t646 + t239 * t644 + (t335 * t646 + t644 * t878) * qJD(1)) * qJD(2) + t696;
t26 = t100 * t622 - t170 * t559 - t309 * t453 + (t673 - t1137) * qJD(2) + t710;
t25 = -t102 * t622 - t170 * t560 + t309 * t452 + (t796 + t1138) * qJD(2) + t658;
t16 = t100 * t560 + t102 * t559 + t190 * t453 - t194 * t452 + t654;
t7 = qJD(6) * t155 + t1033 * t622 - t959 * t559 - t951 * t453 + (-t901 * t956 + t673) * qJD(2) + t710;
t6 = qJD(6) * t153 - t1013 * t622 - t959 * t560 + t951 * t452 + (t901 * t958 + t796) * qJD(2) + t658;
t1 = [(t1083 * t1185 - t1133 * t508 - t1215 * t645 + t1221) * t559 * t1043 + t1070 + (-(-qJD(1) * t506 - t290 - t571 - t850) * t291 + t196 * (t644 * t846 + t638 + t919) + t195 * (t507 + t918) + t291 * (t629 + t921) + (t582 * t983 - t981) * qJD(2) + ((-pkin(1) - t791) * t982 + (t290 * (-rSges(3,3) - pkin(7)) + t291 * t846) * t644) * qJD(1)) * m(3) + (t1158 + t1159) * t908 / 0.2e1 + (t1157 - t1160 + t1161) * t835 + (t53 * (t704 + t339) - (t644 * t994 + t646 * t800) * qJD(2) + (t644 * t712 - t786 + t805) * t54 + (-t824 + t874 + ((t745 - t1031) * t644 + t335) * qJD(1) + t1209) * t113 + (t726 - t787 + t712 * t910 + (t1017 * t907 - t1088) * t644 - t1064) * t112) * m(5) + t1199 * t1046 + (t1198 + t1142) * t1045 + (t69 * (t675 - t784) + t26 * (t643 * t861 + t692 + t945) + t1014 * t1023 * t907 + (-t190 + t1072) * t25 + (t69 + t881 + (t645 * t861 - t893) * qJD(2) + t1164 + t1202) * t70) * m(6) + (t830 * t560 + t7 * (t643 * t862 + t1078 + t692) + (-t958 + t1072) * t6 + (t1016 * t1192 + t1086 + t48 + t675) * t47 + (t1085 + (t645 * t862 - t893) * qJD(2) + t1164 + t1228) * t48) * m(7) + (((t646 * t825 + t1260 + t244 - t940) * t646 + (t644 * t825 + t1156 - t1189 + t1270 + t826) * t644) * qJD(2) + t1162 - t1203) * t837 + t1021 / 0.2e1 + t1024 / 0.2e1 + (t85 * (t815 + t340) + (-t790 - t920 + t711 * t910 + (t1015 * t907 - t1088) * t644) * t145 - t828 * t906 + (t644 * t711 + t638 + t789) * t86 + (-t824 + t875 + t145 + ((t745 - t1029) * t644 + t336) * qJD(1) + t1231) * t146) * m(4) + t1018 / 0.2e1 + t1019 / 0.2e1 + t1020 / 0.2e1 + t1080 * t1048 + t1081 * t1049 + ((t1224 + t1276) * t560 + (t1225 - t1275) * t559 + t1216) * t1044 + ((t1222 + t1275) * t560 + (t1223 + t1276) * t559 + t1143 - t1201) * t1047 - t1027 / 0.2e1 - t1025 / 0.2e1 + t1026 / 0.2e1 + (m(7) * (t47 * (t1016 * t643 + t863) * t646 + (-t47 * pkin(7) + t48 * t745) * t644) + m(6) * ((t1014 * t643 + t863) * t1022 + (-t69 * pkin(7) + t70 * t745) * t644) + t563 * t643 + (-t449 * t640 + t451 * t641) * t643 + (t446 * t640 + t450 * t641) * t643 + (t562 - t1234) * t645 + (t1172 * t643 + t1247 * t645 - t746) * qJD(2)) * qJD(1) + ((t1154 + t1239) * t646 + (t1155 + t1240) * t644) * t896 / 0.2e1 + (((t242 - t438 + (t490 + t976) * t646 + t941) * t646 + t940 * t644 + t1242) * qJD(2) + t1206) * t834; (t16 * t737 + (t16 * t194 + t25 * t821) * t646 + (t16 * t190 + t26 * t821) * t644 - t660 * t900 + (-t272 * t622 + t311 * t559 + t644 * t823 + t821 * t910 - t1096 + t1137) * t70 + (t270 * t622 + t309 * t912 + t311 * t560 + t646 * t823 + t1090 - t1138) * t69 + (t689 + (qJD(1) * t190 + t100) * t646 + (t102 + (-t194 + t876) * qJD(1)) * t644 - t270 * t559 - t272 * t560 - t694) * t60) * m(6) + (t1158 * qJD(1) + t1152 + ((t1176 * t707 + t1178 * t411 + t1179 * t536 + t1181 * t969 + t1183 * t535 - t1273 * t412) * t646 + (t1061 * t644 + t1173 * t412 - t1175 * t707 - t1177 * t411 + t1180 * t536 + t1182 * t969 + t1184 * t535 - t1208) * t644 + ((t244 + t1268) * t646 + t1156 * t644) * qJD(1)) * t1153) * t644 / 0.2e1 - (t1157 * qJD(1) + t1151 + ((-t1176 * t541 - t1178 * t413 + t1179 * t534 + t1181 * t970 + t1183 * t533 - t1273 * t414 + t1208) * t646 + (-t1061 * t646 + t1173 * t414 + t1175 * t541 + t1177 * t413 + t1180 * t534 + t1182 * t970 + t1184 * t533) * t644 + (t1241 * t644 + t1259 * t646) * qJD(1)) * t1153) * t646 / 0.2e1 + (-t913 * t646 + (t1119 * t534 + t1121 * t533 - t974 * t646) * t906 + (t1116 * t534 + t1117 * t533) * qJD(1) + ((-t1118 * t534 - t1120 * t533 + t646 * t973 + t1103) * qJD(2) + t1104) * t644) * t834 + (t913 * t644 + (-t1118 * t536 - t1120 * t535 - t973 * t644) * t908 + (t1116 * t536 + t1117 * t535) * qJD(1) + ((t1119 * t536 + t1121 * t535 + t644 * t974 + t1103) * qJD(2) + t1104) * t646) * t837 + t1108 * t1049 + t1110 * t1048 + t1112 * t801 - (((t1054 - t1207) * qJD(2) - t1200) * t645 + ((t693 + (t1119 * t641 + t1121 * t640 - t1176) * t646 + (-t1118 * t641 - t1120 * t640 + t1175) * t644) * qJD(2) + (t1116 * t641 + t1117 * t640 + t1229) * qJD(1)) * t643) * qJD(1) / 0.2e1 + (0.2e1 * t286 * (t379 * t646 + t380 * t644 + (t506 * t646 - t507 * t644) * qJD(1)) + t757 * t564 + (-t195 * t644 - t196 * t646 + (-t291 * t646 + t983) * qJD(1)) * t582 - (t290 * t551 - t981) * qJD(1) - (t286 * (-t551 * t644 - t554 * t646) + t757 * t791) * qJD(2)) * m(3) + (t1160 * t646 + t1159 * t644 + (t1154 * t646 + t1155 * t644) * qJD(1)) * qJD(1) / 0.2e1 + (t1142 + t1161 + t1205) * t910 / 0.2e1 + (t1143 + t1162 + t1204) * t840 + t1141 * t901 / 0.2e1 + (qJD(1) * t1113 + t1144 * t644 + t1145 * t646) * t1042 + (qJD(1) * t1109 + t1146 * t644 + t1147 * t646) * t1045 + (-(t643 * t698 + t645 * t653) * qJD(5) - (qJD(6) * t510 + t559 * t953 + t560 * t952 + t694) * t34 - (-qJD(6) * t456 + t559 * t950 + t622 * t952 + t1096) * t48 + t5 * t737 + t34 * t689 + (t6 * t768 + (t48 * t768 + t831) * qJD(1) + t706) * t646 + (t7 * t768 + t48 * t769 + (t1087 + t34 * (t876 - t956)) * qJD(1) + t1057) * t644 + (qJD(6) * t458 - t560 * t950 + t622 * t953 + t646 * t769 + t1090) * t47) * m(7) + ((t1122 * t1083 + t1123 * t511 + t1124 * t508 + t1125 * t510 + t1212 * t645 - t1248 * t643) * t622 + (t1127 * t1083 + t1129 * t508 - t1133 * t510 + t1185 * t511 - t1214 * t645 + t1215 * t643) * t560 + (t1126 * t1083 + t1128 * t508 + t1130 * t511 - t1132 * t510 + t1213 * t645 - t1237 * t643) * t559 + (-t1079 * t643 - t1113 * t645) * qJD(5)) * t1043 + (-t112 * t741 - t113 * t701 - t105 * t735 - (t112 * (t431 + t938) - t113 * t433) * qJD(1) - ((-t105 * t433 + t112 * t869) * t646 + (-t105 * t431 + t113 * t869) * t644) * qJD(2) + t112 * t937 + t33 * t818 + t105 * t740 + (t54 * t870 + t112 * t873 + t33 * t339 + t105 * t237 + (t105 * t335 + t800) * qJD(1)) * t646 + (t53 * t870 + t113 * t873 + t33 * t335 + t105 * t239 + (t105 * t878 + t994) * qJD(1)) * t644) * m(5) + (t145 * t557 + t55 * t931 + t128 * t879 + (t86 * t936 + t145 * t939 + t55 * t340 + t128 * t238 + (t128 * t336 + t828) * qJD(1)) * t646 + (t85 * t936 + t146 * t939 + t55 * t336 + t128 * t240 + (t128 * t949 + t145 * t486) * qJD(1)) * t644 - t145 * (t611 + (t432 + t550) * qJD(1)) - t146 * (-qJD(1) * t434 + t929) - t128 * t868 - ((-t128 * t434 + t145 * t935) * t646 + (-t128 * t432 + t146 * t935) * t644) * qJD(2)) * m(4) + ((-t1225 * t900 + t1115) * t644 + (t1122 * t384 - t1123 * t457 + t1124 * t383 - t1125 * t456) * t622 + (t1127 * t384 + t1129 * t383 + t1133 * t456 - t1185 * t457) * t560 + (t1126 * t384 + t1128 * t383 - t1130 * t457 + t1132 * t456) * t559 + (-t1081 * t643 - t1224 * t967) * qJD(5)) * t1044 + ((-t1222 * t900 + t1115) * t646 + (t1122 * t388 - t1123 * t459 + t1124 * t387 - t1125 * t458) * t622 + (t1127 * t388 + t1129 * t387 + t1133 * t458 - t1185 * t459) * t560 + (t1126 * t388 + t1128 * t387 - t1130 * t459 + t1132 * t458) * t559 + (-t1080 * t643 - t1223 * t968) * qJD(5)) * t1047 + (qJD(1) * t1111 + t1148 * t644 + t1149 * t646) * t1046 + (t1142 * t646 + t1143 * t644) * t900 / 0.2e1; -m(4) * (t128 * t540 - t145 * t707 + t146 * t541) - m(5) * (t105 * t540 - t112 * t707 + t113 * t541) - m(6) * (t540 * t60 + t541 * t70 - t69 * t707) - m(7) * (t34 * t540 - t47 * t707 + t48 * t541) + 0.2e1 * ((t145 * t906 + t146 * t908 - t55) * t1053 + (t112 * t906 + t113 * t908 - t33) * t1052 + (t69 * t906 + t70 * t908 - t16) * t1051 + (t47 * t906 + t48 * t908 - t5) * t1050) * t645 + 0.2e1 * ((qJD(2) * t128 - t145 * t912 + t146 * t910 + t644 * t85 + t646 * t86) * t1053 + (qJD(2) * t105 - t112 * t912 + t113 * t910 + t53 * t644 + t54 * t646) * t1052 + (qJD(2) * t60 + t25 * t646 + t26 * t644 - t69 * t912 + t70 * t910) * t1051 + (qJD(2) * t34 - t47 * t912 + t48 * t910 + t6 * t646 + t644 * t7) * t1050) * t643; (t533 * t7 + t535 * t6 + (t34 * t907 + t5 * t643) * t640 - t34 * t344 + t1076 * t48) * m(7) + (t25 * t535 + t26 * t533 + (t16 * t643 + t60 * t907) * t640 - t344 * t60 + t1076 * t70) * m(6) + (t53 * t533 + t535 * t54 + (t105 * t907 + t33 * t643) * t640 - t105 * t344 + t1076 * t113) * m(5); -t1151 * t970 / 0.2e1 + t1152 * t847 + t1141 * t838 + (t1079 * t645 - t1113 * t643) * t801 + (t1081 * t645 - t1109 * t643) * t1049 + (t1080 * t645 - t1111 * t643) * t1048 + (t1073 * t646 + t1074 * t388 + t1075 * t387) * t1047 + ((-qJD(2) * t1111 + t1199) * t645 + (qJD(1) * t1110 - t1080 * qJD(2) - t1148 * t646 + t1149 * t644) * t643) * t1046 + ((-qJD(2) * t1109 + t1198) * t645 + (qJD(1) * t1108 - t1081 * qJD(2) - t1146 * t646 + t1147 * t644) * t643) * t1045 + (t1073 * t644 + t1074 * t384 + t1075 * t383) * t1044 + (t1074 * t1083 + t1075 * t508 - t1171 * t645) * t1043 + ((-qJD(2) * t1113 + t1197) * t645 + (qJD(1) * t1112 - t1079 * qJD(2) - t1144 * t646 + t1145 * t644) * t643) * t1042 + (t1020 + t1021 + t1026 - t1027 + t1018 + t1019 + t1024 - t1025 + t1070) * t645 / 0.2e1 + (-(t1083 * t34 + t384 * t48 + t388 * t47) * qJD(6) - (-t47 * t955 + t48 * t954) * t622 - (t34 * t954 + t47 * t947) * t560 - (t34 * t955 + t48 * t947) * t559 + (qJD(2) * t653 - t1013 * t47 + t1033 * t48 - t6 * t958 + t7 * t956) * t645 + (t698 * qJD(2) + (qJD(1) * t697 + t48 * t959 + t7 * t951 - t1057) * t646 + (-qJD(1) * t1107 - t47 * t959 - t6 * t951 + t706) * t644) * t643) * m(7) + ((qJD(2) * t660 + t70 * t100 - t69 * t102 - t25 * t190 + t26 * t194) * t645 + (t69 * (qJD(2) * t190 - t170 * t644) + t70 * (-qJD(2) * t194 + t170 * t646) + t16 * t758 + t60 * (t100 * t644 - t102 * t646 + t190 * t912 + t194 * t910) + (-t25 * t644 + t26 * t646 + (-t644 * t70 - t1022) * qJD(1)) * t309) * t643 - t69 * (-t215 * t622 - t355 * t560) - t70 * (t220 * t622 - t355 * t559) - t60 * (t215 * t559 + t220 * t560)) * m(6) + t1142 * (t643 * t840 + t645 * t835) + t1143 * (qJD(1) * t847 + t645 * t837); (t383 * t7 + t387 * t6 + t5 * t508 + (-t387 * t622 + t508 * t559 + t155) * t48 + (t383 * t622 + t508 * t560 + t153) * t47 + (-t383 * t559 - t387 * t560 + t342) * t34) * m(7);];
tauc  = t1(:);
