% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP4_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:39:41
% EndTime: 2019-03-09 08:39:50
% DurationCPUTime: 2.75s
% Computational Cost: add. (2331->272), mult. (5590->468), div. (0->0), fcn. (4741->6), ass. (0->145)
t105 = sin(pkin(9));
t101 = t105 ^ 2;
t106 = cos(pkin(9));
t102 = t106 ^ 2;
t191 = (t101 + t102) * qJD(3);
t184 = cos(qJ(5));
t145 = qJD(5) * t184;
t107 = sin(qJ(5));
t169 = qJD(5) * t107;
t60 = t105 * t145 - t106 * t169;
t70 = t184 * t105 - t107 * t106;
t109 = cos(qJ(2));
t108 = sin(qJ(2));
t172 = t108 * qJ(3);
t71 = -t106 * pkin(3) - t105 * qJ(4) - pkin(2);
t190 = qJD(2) * (-t109 * t71 + t172);
t189 = pkin(7) + (pkin(3) + pkin(4)) * t105;
t129 = -t106 * pkin(2) - t105 * pkin(7) - pkin(3);
t163 = t108 * qJD(3);
t150 = t106 * t163;
t182 = pkin(8) - qJ(3);
t78 = t182 * t106;
t110 = t150 + (-t109 * t78 + (-pkin(4) + t129) * t108) * qJD(2);
t152 = t105 * t163;
t120 = -t109 * qJD(4) - t152;
t100 = t109 * pkin(3);
t135 = -t109 * pkin(2) - t172;
t75 = -pkin(1) + t135;
t177 = t105 * t109;
t92 = pkin(7) * t177;
t35 = t109 * pkin(4) + t100 + t92 + (-pkin(8) * t108 - t75) * t106;
t178 = t105 * t108;
t175 = t106 * t109;
t93 = pkin(7) * t175;
t51 = t105 * t75 + t93;
t47 = -t109 * qJ(4) + t51;
t38 = pkin(8) * t178 + t47;
t181 = t107 * t35 + t184 * t38;
t111 = -t181 * qJD(5) - t107 * t120 + t184 * t110;
t188 = 0.2e1 * t106;
t187 = -0.2e1 * qJD(2);
t186 = 2 * qJD(6);
t183 = pkin(2) * t108;
t176 = t106 * t108;
t162 = t109 * qJD(2);
t87 = t106 * t162;
t180 = -qJ(4) * t87 - qJD(4) * t176;
t179 = qJ(3) * t191;
t174 = t107 * t105;
t171 = t108 ^ 2 - t109 ^ 2;
t168 = t101 * qJD(4);
t167 = t105 * qJD(3);
t166 = t105 * qJD(4);
t165 = t106 * qJD(3);
t164 = t108 * qJD(2);
t161 = t109 * qJD(6);
t147 = qJD(2) * t184;
t69 = t184 * t106 + t174;
t59 = t69 * qJD(5);
t29 = t107 * t87 + t108 * t59 - t147 * t177;
t55 = t70 * t108;
t160 = -0.2e1 * t55 * t29;
t159 = 0.2e1 * t69 * t60;
t158 = pkin(1) * t187;
t157 = pkin(7) * t162;
t156 = pkin(3) * t105 + pkin(7);
t154 = qJ(6) * t164;
t151 = t106 * t164;
t149 = t108 * t162;
t144 = t182 * t105;
t128 = t184 * t144;
t146 = qJD(3) * t184;
t23 = qJD(5) * t128 - t106 * t146 - t107 * t167 - t78 * t169;
t45 = -t107 * t144 - t184 * t78;
t24 = t45 * qJD(5) - t105 * t146 + t107 * t165;
t44 = -t107 * t78 + t128;
t148 = -t45 * t23 + t44 * t24;
t143 = t182 * t109;
t62 = t106 * pkin(4) - t71;
t142 = -t106 * pkin(7) + qJ(4);
t50 = t106 * t75 - t92;
t141 = qJD(2) * t171;
t140 = 0.2e1 * t149;
t74 = t105 * t87;
t30 = t60 * t108 + t69 * t162;
t56 = t69 * t108;
t138 = t56 * t29 - t30 * t55;
t137 = t29 * t69 - t55 * t60;
t136 = t59 * t69 - t70 * t60;
t134 = -qJ(3) * t109 + t183;
t42 = -t150 + (pkin(7) * t178 + t106 * t134) * qJD(2);
t43 = -t152 + (-pkin(7) * t176 + t105 * t134) * qJD(2);
t133 = -t42 * t105 + t43 * t106;
t131 = t108 * t74;
t130 = t143 * t174;
t127 = t105 * pkin(2) + t142;
t9 = -t107 * t38 + t184 * t35;
t125 = -t23 * t109 - t45 * t164;
t124 = -t24 * t109 + t44 * t164;
t123 = -t109 * t29 - t55 * t164;
t122 = -t109 * t60 + t69 * t164;
t112 = (t142 * t108 + (t143 + t183) * t105) * qJD(2);
t3 = -t107 * t110 + t38 * t169 - t184 * (t112 + t120) - t35 * t145;
t121 = -t23 * t55 + t24 * t56 - t45 * t29 + t44 * t30;
t119 = t107 * t127;
t91 = qJ(4) * t176;
t46 = -t189 * t108 + t91;
t118 = 0.2e1 * t23 * t69 + 0.2e1 * t24 * t70 - 0.2e1 * t44 * t59 - 0.2e1 * t45 * t60;
t117 = -t23 * t107 + t45 * t145 + t44 * t169 - t24 * t184;
t116 = -t107 * t29 + t55 * t145 + t56 * t169 - t184 * t30;
t115 = -t107 * t60 - t69 * t145 + t70 * t169 + t184 * t59;
t114 = t70 * t29 + t30 * t69 + t59 * t55 + t56 * t60;
t33 = t189 * t162 + t180;
t84 = t105 * t162;
t83 = t105 * t164;
t82 = t109 * t167;
t81 = -0.2e1 * t149;
t73 = t102 * t140;
t72 = t101 * t140;
t68 = 0.2e1 * t191;
t64 = -t107 * t164 + t109 * t145;
t63 = -t108 * t147 - t109 * t169;
t61 = t105 * t141;
t58 = (t101 - t102) * t162;
t54 = t141 * t188;
t52 = t156 * t108 - t91;
t48 = t100 - t50;
t41 = -0.2e1 * t70 * t59;
t40 = t156 * t162 + t180;
t37 = t150 + (qJ(3) * t175 + t108 * t129) * qJD(2);
t34 = -t59 * t109 - t70 * t164;
t32 = (-qJ(3) * t177 + t108 * t127) * qJD(2) + t120;
t25 = t69 * pkin(5) - t70 * qJ(6) + t62;
t18 = t60 * pkin(5) + t59 * qJ(6) - t70 * qJD(6) + t166;
t16 = 0.2e1 * t56 * t30;
t14 = -t55 * pkin(5) - t56 * qJ(6) + t46;
t12 = 0.2e1 * t30 * t109 - 0.2e1 * t56 * t164;
t8 = -t109 * pkin(5) - t9;
t7 = t109 * qJ(6) + t181;
t6 = t30 * t70 - t56 * t59;
t5 = -t29 * pkin(5) + t30 * qJ(6) + t56 * qJD(6) + t33;
t4 = -t107 * t112 + t111;
t2 = (t130 + (t119 + pkin(5)) * t108) * qJD(2) - t111;
t1 = -t154 - t3 + t161;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t171 * t187, 0, t81, 0, 0, t108 * t158, t109 * t158, 0, 0, t73, -0.4e1 * t131, t54, t72, -0.2e1 * t61, t81, -0.2e1 * t42 * t109 + 0.2e1 * (t50 + 0.2e1 * t92) * t164, 0.2e1 * t43 * t109 + 0.2e1 * (-t51 + 0.2e1 * t93) * t164, 0.2e1 * (-t105 * t43 - t106 * t42) * t108 + 0.2e1 * (-t105 * t51 - t106 * t50) * t162, 0.2e1 * pkin(7) ^ 2 * t149 + 0.2e1 * t50 * t42 + 0.2e1 * t51 * t43, t73, t54, 0.4e1 * t131, t81, 0.2e1 * t61, t72, 0.2e1 * t40 * t178 + 0.2e1 * t37 * t109 + 0.2e1 * (-t108 * t48 + t52 * t177) * qJD(2), 0.2e1 * (-t105 * t32 + t106 * t37) * t108 + 0.2e1 * (-t105 * t47 + t106 * t48) * t162, -0.2e1 * t40 * t176 - 0.2e1 * t32 * t109 + 0.2e1 * (t108 * t47 - t52 * t175) * qJD(2), 0.2e1 * t47 * t32 + 0.2e1 * t48 * t37 + 0.2e1 * t52 * t40, t16, -0.2e1 * t138, t12, t160, 0.2e1 * t123, t81, 0.2e1 * t4 * t109 - 0.2e1 * t9 * t164 + 0.2e1 * t46 * t29 + 0.2e1 * t33 * t55, 0.2e1 * t3 * t109 + 0.2e1 * t164 * t181 + 0.2e1 * t46 * t30 - 0.2e1 * t33 * t56, -0.2e1 * t181 * t29 - 0.2e1 * t3 * t55 - 0.2e1 * t9 * t30 - 0.2e1 * t4 * t56, -0.2e1 * t181 * t3 - 0.2e1 * t46 * t33 + 0.2e1 * t9 * t4, t16, t12, 0.2e1 * t138, t81, -0.2e1 * t123, t160, -0.2e1 * t2 * t109 + 0.2e1 * t14 * t29 + 0.2e1 * t164 * t8 + 0.2e1 * t5 * t55, 0.2e1 * t1 * t55 + 0.2e1 * t2 * t56 - 0.2e1 * t7 * t29 + 0.2e1 * t8 * t30, 0.2e1 * t1 * t109 - 0.2e1 * t14 * t30 - 0.2e1 * t164 * t7 + 0.2e1 * t5 * t56, 0.2e1 * t1 * t7 - 0.2e1 * t14 * t5 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, 0, -t164, 0, -t157, pkin(7) * t164, 0, 0, t74, -t58, t83, -t74, t151, 0, t82 + (t135 * t105 - t93) * qJD(2), t109 * t165 + (t135 * t106 + t92) * qJD(2), t133, -pkin(2) * t157 + (-t105 * t50 + t106 * t51) * qJD(3) + t133 * qJ(3), t74, t83, t58, 0, -t151, -t74, -t105 * t190 - t40 * t106 - t108 * t168 + t82, t37 * t105 + t32 * t106, -t40 * t105 + (-qJD(3) * t109 + t108 * t166 + t190) * t106, t40 * t71 + (qJ(3) * t32 + qJD(3) * t47) * t106 + (qJ(3) * t37 + qJD(3) * t48 - qJD(4) * t52) * t105, t6, -t114, t34, t137, t122, 0, -t55 * t166 + t62 * t29 - t33 * t69 + t46 * t60 + t124, t56 * t166 + t62 * t30 - t33 * t70 - t46 * t59 - t125, -t181 * t60 + t3 * t69 - t4 * t70 + t9 * t59 + t121, t166 * t46 - t181 * t23 - t9 * t24 - t3 * t45 - t33 * t62 - t4 * t44, t6, t34, t114, 0, -t122, t137, t14 * t60 - t18 * t55 + t25 * t29 - t5 * t69 + t124, -t1 * t69 + t2 * t70 - t8 * t59 - t7 * t60 + t121, t14 * t59 - t18 * t56 - t25 * t30 + t5 * t70 + t125, t1 * t45 + t14 * t18 + t2 * t44 - t7 * t23 + t8 * t24 - t5 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0.2e1 * t179, 0, 0, 0, 0, 0, 0, t166 * t188, t68, 0.2e1 * t168, -0.2e1 * t71 * t166 + 0.2e1 * t179, t41, 0.2e1 * t136, 0, t159, 0, 0, 0.2e1 * t69 * t166 + 0.2e1 * t62 * t60, 0.2e1 * t70 * t166 - 0.2e1 * t62 * t59, t118, 0.2e1 * t166 * t62 + 0.2e1 * t148, t41, 0, -0.2e1 * t136, 0, 0, t159, 0.2e1 * t18 * t69 + 0.2e1 * t25 * t60, t118, -0.2e1 * t18 * t70 + 0.2e1 * t25 * t59, 0.2e1 * t25 * t18 + 0.2e1 * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, t87, 0, t157, 0, 0, 0, 0, 0, 0, t84, 0, -t87, t40, 0, 0, 0, 0, 0, 0, -t29, -t30, 0, t33, 0, 0, 0, 0, 0, 0, -t29, 0, t30, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, 0, 0, 0, 0, 0, 0, -t60, t59, 0, -t166, 0, 0, 0, 0, 0, 0, -t60, 0, -t59, -t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, t87, 0, t37, 0, 0, 0, 0, 0, 0, t63, -t64, t116, t4 * t184 - t3 * t107 + (-t107 * t9 + t181 * t184) * qJD(5), 0, 0, 0, 0, 0, 0, t63, t116, t64, -t2 * t184 + t1 * t107 + (t107 * t8 + t184 * t7) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, 0, 0, 0, 0, 0, 0, 0, 0, t115, t117, 0, 0, 0, 0, 0, 0, 0, t115, 0, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, -t29, -t164, t4, t3, 0, 0, 0, t30, 0, -t164, t29, 0 (-t130 + (-0.2e1 * pkin(5) - t119) * t108) * qJD(2) + t111, -t30 * pkin(5) - t29 * qJ(6) + t55 * qJD(6), -0.2e1 * t154 - t3 + 0.2e1 * t161, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t60, 0, -t24, t23, 0, 0, 0, -t59, 0, 0, t60, 0, -t24, pkin(5) * t59 - t60 * qJ(6) - t69 * qJD(6), -t23, -t24 * pkin(5) - t23 * qJ(6) + t45 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, -t145, 0, 0, 0, 0, 0, 0, 0, 0, -t169, 0, t145, t107 * qJD(6) + (-pkin(5) * t107 + t184 * qJ(6)) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, qJ(6) * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, t30, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
