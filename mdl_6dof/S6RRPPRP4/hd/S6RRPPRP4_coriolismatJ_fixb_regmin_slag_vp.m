% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:39:45
% EndTime: 2019-03-09 08:40:04
% DurationCPUTime: 9.43s
% Computational Cost: add. (7236->619), mult. (15026->792), div. (0->0), fcn. (15135->6), ass. (0->448)
t379 = sin(pkin(9));
t380 = cos(pkin(9));
t318 = -t380 * pkin(3) - t379 * qJ(4) - pkin(2);
t293 = t380 * pkin(4) - t318;
t609 = cos(qJ(5));
t478 = t609 * t380;
t381 = sin(qJ(5));
t559 = t381 * t379;
t308 = t478 + t559;
t479 = t609 * t379;
t310 = -t381 * t380 + t479;
t436 = pkin(5) * t308 - qJ(6) * t310;
t151 = t436 + t293;
t645 = t151 / 0.2e1;
t382 = sin(qJ(2));
t477 = t609 * t382;
t558 = t381 * t382;
t273 = -t379 * t477 + t380 * t558;
t383 = cos(qJ(2));
t501 = t383 * qJD(1);
t248 = t273 * t501;
t264 = t273 * qJD(5);
t644 = t248 + t264;
t299 = t310 * qJD(5);
t568 = t310 * t383;
t462 = -t568 / 0.2e1;
t339 = t383 * t479;
t557 = t381 * t383;
t457 = -t557 / 0.2e1;
t542 = t339 / 0.2e1 + t380 * t457;
t433 = t462 + t542;
t632 = t433 * qJD(1);
t643 = -t299 + t632;
t456 = qJD(5) * t609;
t275 = t308 * t382;
t378 = t383 ^ 2;
t562 = t380 * t382;
t399 = t275 * t562 + t378 * t609;
t633 = t399 * qJD(1);
t642 = -t383 * t456 - t633;
t368 = t382 * qJ(4);
t351 = t380 * t368;
t440 = -pkin(7) + (-pkin(3) - pkin(4)) * t379;
t229 = t382 * t440 + t351;
t437 = pkin(5) * t273 - qJ(6) * t275;
t101 = t229 + t437;
t602 = -pkin(8) + qJ(3);
t330 = t602 * t380;
t455 = t602 * t379;
t225 = t330 * t381 - t455 * t609;
t226 = t330 * t609 + t381 * t455;
t453 = t275 * pkin(5) + t273 * qJ(6);
t604 = t383 * pkin(5);
t561 = t380 * t383;
t358 = pkin(7) * t561;
t556 = t382 * qJ(3);
t438 = -pkin(2) * t383 - t556;
t419 = -pkin(1) + t438;
t250 = t379 * t419 + t358;
t231 = -qJ(4) * t383 + t250;
t565 = t379 * t382;
t203 = pkin(8) * t565 + t231;
t606 = t379 * pkin(7);
t485 = -pkin(3) - t606;
t422 = pkin(2) * t380 - t485;
t416 = pkin(4) + t422;
t394 = t416 * t383;
t415 = (t382 * t602 + pkin(1)) * t380;
t88 = t381 * t203 - t609 * (t415 + t394);
t83 = t88 - t604;
t491 = t88 / 0.2e1 - t83 / 0.2e1;
t388 = t203 * t609 + t381 * t415;
t79 = (t381 * t416 + qJ(6)) * t383 + t388;
t89 = t381 * t394 + t388;
t492 = t79 / 0.2e1 - t89 / 0.2e1;
t452 = t310 * pkin(5) + t308 * qJ(6);
t640 = -t452 / 0.2e1;
t641 = -t101 * t640 - t225 * t492 - t226 * t491 + t453 * t645;
t278 = t308 * t383;
t458 = -t561 / 0.2e1;
t178 = t278 / 0.2e1 + t609 * t458 + t379 * t457;
t637 = qJD(2) * t178 + t644;
t564 = t379 * t383;
t249 = -pkin(7) * t564 + t380 * t419;
t611 = t380 / 0.2e1;
t613 = -t379 / 0.2e1;
t411 = t249 * t613 + t250 * t611;
t603 = t383 * pkin(7);
t493 = t603 / 0.2e1;
t115 = t493 - t411;
t375 = t379 ^ 2;
t376 = t380 ^ 2;
t345 = t376 + t375;
t320 = t345 * qJ(3);
t506 = t320 * qJD(2);
t636 = -qJD(1) * t115 + t506;
t232 = -t380 * (-pkin(1) - t556) + t422 * t383;
t577 = t231 * t380;
t352 = qJ(4) * t561;
t614 = -t352 / 0.2e1;
t625 = pkin(3) / 0.2e1;
t77 = t493 + t614 - t577 / 0.2e1 + (t383 * t625 - t232 / 0.2e1) * t379;
t635 = -qJD(1) * t77 + t506;
t510 = t275 * qJD(3);
t526 = qJD(4) * t383;
t543 = t381 * t526 + t510;
t297 = t308 * qJD(5);
t518 = t178 * qJD(1);
t634 = t518 + t297;
t555 = t383 * qJ(3);
t335 = t382 * pkin(2) - t555;
t187 = (-pkin(8) * t383 - t335) * t380 + (-pkin(4) + t485) * t382;
t164 = t381 * t187;
t258 = -pkin(7) * t562 + t379 * t335;
t233 = t258 + t368;
t205 = pkin(8) * t564 + t233;
t190 = t609 * t205;
t546 = -t164 / 0.2e1 - t190 / 0.2e1;
t481 = t609 * t187;
t560 = t381 * t205;
t545 = t481 / 0.2e1 - t560 / 0.2e1;
t396 = t478 / 0.2e1 + t559 / 0.2e1;
t617 = t308 / 0.2e1;
t389 = (t617 + t396) * t383;
t631 = qJD(2) * t389 + t248;
t475 = t275 * t501;
t509 = t275 * qJD(5);
t72 = qJD(2) * t433 - t475 - t509;
t612 = t379 / 0.2e1;
t461 = t273 * t612;
t497 = t609 / 0.2e1;
t131 = t461 + (t308 * t611 + t497) * t382;
t630 = -qJD(3) * t433 + t131 * qJD(4);
t512 = t273 * qJD(3);
t629 = qJD(4) * t399 - t383 * t512;
t628 = t273 ^ 2;
t627 = t275 ^ 2;
t626 = t308 ^ 2;
t303 = t310 ^ 2;
t624 = pkin(7) / 0.2e1;
t367 = t382 * qJ(6);
t544 = t190 + t164;
t85 = -t367 + t544;
t623 = t85 / 0.2e1;
t622 = -t273 / 0.2e1;
t621 = t275 / 0.2e1;
t620 = -t278 / 0.2e1;
t619 = t293 / 0.2e1;
t618 = -t308 / 0.2e1;
t616 = -t310 / 0.2e1;
t615 = t310 / 0.2e1;
t610 = -t381 / 0.2e1;
t374 = -t382 / 0.2e1;
t373 = t382 / 0.2e1;
t488 = t380 * t557;
t277 = -t339 + t488;
t608 = t277 * pkin(5);
t607 = t379 * pkin(3);
t605 = t381 * pkin(5);
t417 = -t277 * qJ(6) / 0.2e1 + pkin(5) * t620;
t3 = -t308 * t491 + t310 * t492 + t417;
t601 = t3 * qJD(1);
t600 = t383 * t88;
t599 = t383 * t89;
t230 = t383 * t440 + t352;
t572 = t278 * qJ(6);
t102 = t230 - t572 + t608;
t372 = t382 * pkin(5);
t410 = t481 - t560;
t86 = t372 - t410;
t5 = t101 * t102 + t79 * t85 + t83 * t86;
t598 = t5 * qJD(1);
t6 = t101 * t453 - t79 * t88 + t83 * t89;
t597 = t6 * qJD(1);
t7 = -t273 * t85 + t275 * t86 - t277 * t79 + t278 * t83;
t596 = t7 * qJD(1);
t8 = (-t79 + t89) * t275 + (-t83 + t88) * t273;
t595 = t8 * qJD(1);
t594 = t83 * t381;
t587 = t101 * t275;
t27 = t273 * t453 + t587 - t599;
t593 = qJD(1) * t27;
t28 = t273 * t79 - t275 * t83;
t592 = qJD(1) * t28;
t41 = t229 * t275 - t599;
t591 = qJD(1) * t41;
t441 = t308 * t497;
t480 = t609 * t278;
t68 = t383 * t441 + t480 / 0.2e1 + (t462 + t277 / 0.2e1) * t381;
t590 = qJD(1) * t68;
t588 = qJD(5) * t88;
t490 = t79 * t609;
t392 = -t490 / 0.2e1 + t89 * t497;
t482 = t609 * qJ(6);
t443 = -t482 / 0.2e1;
t17 = t383 * t443 + (t604 / 0.2e1 + t491) * t381 + t392;
t586 = t17 * qJD(1);
t19 = -t101 * t278 - t102 * t275 - t79 * t382 + t383 * t85;
t585 = t19 * qJD(1);
t20 = t101 * t277 + t102 * t273 + t83 * t382 - t383 * t86;
t584 = t20 * qJD(1);
t579 = t226 * t383;
t212 = -t579 / 0.2e1;
t413 = t101 * t615 + t151 * t621;
t454 = t372 / 0.2e1 - t545;
t21 = t212 + t413 + t454;
t583 = t21 * qJD(1);
t582 = t225 * t382;
t581 = t225 * t383;
t580 = t226 * t382;
t23 = t229 * t277 + t230 * t273 + t88 * t382 + t383 * t410;
t578 = t23 * qJD(1);
t576 = t231 * t383;
t24 = -t229 * t278 - t230 * t275 - t89 * t382 + t383 * t544;
t575 = t24 * qJD(1);
t25 = -t101 * t562 + (t490 + t594) * t383;
t574 = t25 * qJD(1);
t26 = t101 * t273 - t275 * t453 - t600;
t573 = t26 * qJD(1);
t571 = t308 * t273;
t209 = -t581 / 0.2e1;
t412 = t229 * t617 + t273 * t619;
t31 = t209 + t412 + t546;
t570 = t31 * qJD(1);
t569 = t310 * t275;
t34 = t383 * t79 - t587;
t567 = t34 * qJD(1);
t563 = t380 * t335;
t234 = t382 * t485 - t563;
t484 = pkin(7) + t607;
t268 = t382 * t484 - t351;
t269 = t383 * t484 - t352;
t36 = t231 * t233 + t232 * t234 + t268 * t269;
t566 = t36 * qJD(1);
t39 = -t232 * t561 - t234 * t562 + (t233 * t382 + t576) * t379;
t554 = t39 * qJD(1);
t40 = t229 * t273 - t600;
t553 = t40 * qJD(1);
t499 = pkin(7) * t565;
t257 = t499 + t563;
t44 = (t249 * t383 + t257 * t382) * t380 + (t250 * t383 + t258 * t382) * t379;
t552 = t44 * qJD(1);
t426 = t268 * t383 + t269 * t382;
t45 = -t231 * t382 + t233 * t383 + t380 * t426;
t551 = t45 * qJD(1);
t46 = -t232 * t382 + t234 * t383 + t379 * t426;
t550 = t46 * qJD(1);
t58 = pkin(7) ^ 2 * t382 * t383 + t249 * t257 + t250 * t258;
t549 = t58 * qJD(1);
t90 = pkin(3) * t374 + (pkin(7) * t374 + t268 / 0.2e1) * t379 + (-t335 / 0.2e1 + t555 / 0.2e1 + t318 * t373) * t380;
t548 = t90 * qJD(1);
t93 = -t273 * t278 - t275 * t277;
t547 = t93 * qJD(1);
t108 = t231 * t565 - t232 * t562;
t541 = qJD(1) * t108;
t118 = (t249 * t380 + t250 * t379) * t382;
t539 = qJD(1) * t118;
t121 = t268 * t562 + t576;
t538 = qJD(1) * t121;
t138 = (-t273 * t609 + t381 * t275) * t383;
t537 = qJD(1) * t138;
t152 = t273 * t382 - t277 * t383;
t536 = qJD(1) * t152;
t153 = -t275 * t382 + t278 * t383;
t535 = qJD(1) * t153;
t534 = qJD(1) * t275;
t533 = qJD(2) * t308;
t532 = qJD(2) * t310;
t531 = qJD(2) * t379;
t530 = qJD(3) * t178;
t529 = qJD(3) * t383;
t528 = qJD(4) * t379;
t527 = qJD(4) * t380;
t525 = qJD(5) * t225;
t524 = qJD(5) * t383;
t523 = qJD(6) * t310;
t113 = -t249 * t382 + (t257 - 0.2e1 * t499) * t383;
t522 = t113 * qJD(1);
t114 = t258 * t383 + (-t250 + 0.2e1 * t358) * t382;
t521 = t114 * qJD(1);
t165 = t389 * qJD(1);
t519 = t389 * qJD(3);
t181 = t462 + t488 / 0.2e1 - t339 / 0.2e1;
t517 = t181 * qJD(1);
t216 = t273 * t562 + t378 * t381;
t515 = t216 * qJD(1);
t224 = t226 * qJD(5);
t511 = t273 * qJD(6);
t377 = t382 ^ 2;
t307 = t345 * t377;
t508 = t307 * qJD(1);
t507 = t308 * qJD(6);
t505 = t345 * qJD(2);
t353 = t378 - t377;
t504 = t353 * qJD(1);
t503 = t382 * qJD(1);
t502 = t382 * qJD(2);
t500 = t383 * qJD(2);
t366 = t383 * qJD(6);
t498 = -t609 / 0.2e1;
t496 = pkin(1) * t503;
t495 = pkin(1) * t501;
t494 = pkin(7) * t500;
t489 = t86 * t609;
t487 = -t367 - t546;
t486 = -t372 + t545;
t483 = t383 * t609;
t476 = t273 * t534;
t474 = t380 * t503;
t473 = t308 * t532;
t472 = t310 * t531;
t471 = t380 * t531;
t469 = qJD(3) * t562;
t468 = t310 * t528;
t349 = t379 * t529;
t467 = t379 * t527;
t466 = t380 * t501;
t465 = t381 * t501;
t464 = t382 * t500;
t463 = t382 * t501;
t211 = t579 / 0.2e1;
t460 = -t562 / 0.2e1;
t459 = t562 / 0.2e1;
t359 = qJD(5) + t501;
t449 = qJD(1) * t377 * t379 * t380;
t448 = t382 * t349;
t447 = t379 * t463;
t446 = t380 * t463;
t444 = qJD(1) * t483;
t442 = t226 * t498;
t418 = qJ(6) * t623 - t86 * pkin(5) / 0.2e1;
t1 = t418 - t641;
t29 = t151 * t452;
t435 = -t1 * qJD(1) + t29 * qJD(2);
t50 = t151 * t308 - t310 * t452;
t210 = t581 / 0.2e1;
t386 = t101 * t617 + t273 * t645 + t275 * t640 + t453 * t616;
t9 = t210 - t386 + t487;
t434 = qJD(1) * t9 - qJD(2) * t50;
t432 = -t318 * t383 + t556;
t385 = t452 * t622 + t453 * t618 - t413;
t11 = t211 + t385 + t486;
t49 = t151 * t310 + t308 * t452;
t431 = -qJD(1) * t11 + qJD(2) * t49;
t384 = (t624 + (t625 + pkin(4) / 0.2e1) * t379) * t383 + t614 - t608 / 0.2e1 + t572 / 0.2e1;
t387 = t225 * t621 + t226 * t622 + t615 * t83 + t618 * t79;
t15 = t384 + t387;
t73 = -t225 * t310 + t226 * t308;
t430 = -qJD(1) * t15 + qJD(2) * t73;
t38 = -t569 - t571;
t92 = -t627 - t628;
t429 = qJD(1) * t92 + qJD(2) * t38;
t428 = t233 * t380 + t234 * t379;
t427 = -t257 * t379 + t258 * t380;
t117 = -t627 + t628;
t53 = -t569 + t571;
t425 = qJD(1) * t117 + qJD(2) * t53;
t123 = -t303 - t626;
t424 = qJD(1) * t38 + qJD(2) * t123;
t157 = -t303 + t626;
t423 = qJD(1) * t53 + qJD(2) * t157;
t421 = qJD(1) * t453 + qJD(2) * t452;
t398 = t273 * t610 - t275 * t497;
t126 = t460 + t398;
t397 = t308 * t610 + t310 * t498;
t169 = t613 + t397;
t420 = qJD(1) * t126 + qJD(2) * t169;
t183 = qJD(1) * t273 + t533;
t186 = -t532 - t534;
t103 = t273 * t616 - t275 * t617;
t401 = t101 * t612 + t151 * t459;
t14 = t383 * t442 + t489 / 0.2e1 + (t209 - t85 / 0.2e1) * t381 + t401;
t409 = qJD(1) * t14 + t151 * t531;
t390 = t229 * t616 - t275 * t619 + t211;
t30 = t390 + t545;
t408 = -qJD(1) * t30 + t293 * t532;
t98 = t373 - t103;
t407 = qJD(1) * t98 + t473;
t406 = qJD(2) * t103 - t476;
t405 = -qJD(1) * t103 + t473;
t96 = qJD(1) * t131 + t308 * t531;
t355 = -t558 / 0.2e1;
t400 = -t275 * t612 + t310 * t460;
t134 = t355 - t400;
t404 = qJD(1) * t134 + t472;
t354 = t558 / 0.2e1;
t135 = t354 + t400;
t403 = -qJD(1) * t135 + t472;
t280 = t374 + (t375 / 0.2e1 - t376 / 0.2e1) * t382;
t402 = -qJD(1) * t280 + t471;
t305 = t474 + t531;
t322 = t376 * t377 + t378;
t395 = qJD(1) * t322 + t382 * t471;
t393 = qJD(4) * t483 - t512;
t241 = t378 + t627;
t391 = -t241 * qJD(1) - t275 * t532 - t524;
t361 = -t502 / 0.2e1;
t334 = t359 * qJ(6);
t331 = t345 * qJD(3);
t329 = t383 * t469;
t319 = t382 * t467;
t315 = t320 * qJD(3);
t314 = t444 + t456;
t313 = t359 * t381;
t304 = (t501 + qJD(5) / 0.2e1) * t382;
t298 = t310 * qJD(3);
t294 = t307 * qJD(3);
t292 = qJD(2) * t375 + t379 * t474;
t281 = t376 * t373 + t374 * t375 + t374;
t279 = t308 * t528;
t271 = t305 * t383;
t270 = -t380 * t500 + t447;
t204 = t216 * qJD(4);
t202 = t275 * t523;
t180 = t568 / 0.2e1 + t542;
t179 = t383 * t396 + t620;
t168 = t613 - t397;
t137 = qJD(2) * t303 + t310 * t534;
t136 = t355 + t400;
t133 = t354 - t400;
t132 = t461 + t308 * t459 - t477 / 0.2e1;
t128 = t132 * qJD(4);
t125 = t460 - t398;
t122 = -t297 - t165;
t116 = t493 + t411;
t111 = -t181 * qJD(2) + t475;
t100 = t103 * qJD(5);
t99 = t373 + t103;
t91 = qJ(3) * t458 + t318 * t460 + t268 * t613 - t563 / 0.2e1 + (-t606 / 0.2e1 - pkin(3) / 0.2e1) * t382;
t87 = t89 * qJD(5);
t78 = t577 / 0.2e1 + t232 * t612 + t614 + (t624 + t607 / 0.2e1) * t383;
t71 = t179 * qJD(2) - t644;
t67 = t277 * t610 - t480 / 0.2e1 + (t310 * t610 + t441) * t383;
t65 = qJD(2) * t132 + t515;
t59 = -t131 * qJD(2) - t381 * t524 - t515;
t51 = t53 * qJD(5);
t37 = t38 * qJD(3);
t33 = -t390 + t545;
t32 = t210 - t412 + t546;
t22 = t211 - t413 + t454;
t18 = t88 * t610 + t594 / 0.2e1 + (t443 + t605 / 0.2e1) * t383 - t392;
t16 = t384 - t387;
t13 = t381 * t623 - t489 / 0.2e1 + (t225 * t610 + t442) * t383 + t401;
t12 = t212 - t385 + t486;
t10 = t209 + t386 + t487;
t4 = t615 * t89 + t616 * t79 + t617 * t88 + t618 * t83 + t417;
t2 = t418 + t641;
t35 = [0, 0, 0, t464, t353 * qJD(2), 0, 0, 0, -pkin(1) * t502, -pkin(1) * t500, -qJD(2) * t113 + t329, t114 * qJD(2) - t448, -qJD(2) * t44 + t294, qJD(2) * t58 - qJD(3) * t118, qJD(2) * t46 - t377 * t467 + t329, -t39 * qJD(2) + t526 * t565 + t294, -t45 * qJD(2) + t322 * qJD(4) + t448, qJD(2) * t36 - qJD(3) * t108 - qJD(4) * t121 (qJD(2) * t278 - t264) * t275, qJD(2) * t93 + qJD(5) * t117, t153 * qJD(2) - t264 * t383, t152 * qJD(2) - t383 * t509, -t464, t23 * qJD(2) + t41 * qJD(5) + t383 * t510 + t204, -t24 * qJD(2) - t40 * qJD(5) + t629, t20 * qJD(2) + t27 * qJD(5) + t204 + (-t511 + t529) * t275, t7 * qJD(2) + t92 * qJD(3) - t138 * qJD(4) + t8 * qJD(5) - t273 * t366, t19 * qJD(2) + t26 * qJD(5) + t241 * qJD(6) - t629, qJD(2) * t5 + qJD(3) * t28 - qJD(4) * t25 + qJD(5) * t6 + qJD(6) * t34; 0, 0, 0, t463, t504, t500, -t502, 0, -t494 - t496, pkin(7) * t502 - t495, -t522 + (t379 * t438 - t358) * qJD(2) + t349, t379 * t494 + t521 + (qJD(2) * t438 + t529) * t380, qJD(2) * t427 - t552, t549 + (-pkin(2) * t603 + qJ(3) * t427) * qJD(2) + t116 * qJD(3), t550 + (-t269 * t380 - t379 * t432) * qJD(2) + t349 + t281 * qJD(4), qJD(2) * t428 - t554, -t269 * t531 - t551 + t319 + (qJD(2) * t432 - t529) * t380, t566 + (qJ(3) * t428 + t269 * t318) * qJD(2) + t78 * qJD(3) + t91 * qJD(4), -t186 * t278 + t100, t547 + (-t277 * t310 - t278 * t308) * qJD(2) + t51, qJD(5) * t179 - t310 * t502 + t535, qJD(5) * t433 + t308 * t502 + t536, -t304, t578 + (t230 * t308 + t277 * t293 + t582) * qJD(2) + t180 * qJD(3) + t128 + t33 * qJD(5), -t575 + (t230 * t310 + t278 * t293 + t580) * qJD(2) - t519 + t133 * qJD(4) + t32 * qJD(5), t584 + (t102 * t308 + t151 * t277 + t582) * qJD(2) - t181 * qJD(3) + t128 + t12 * qJD(5) + t99 * qJD(6), t596 + (t225 * t278 - t226 * t277 - t308 * t85 + t310 * t86) * qJD(2) + t37 + t67 * qJD(4) + t4 * qJD(5) + t179 * qJD(6), t585 + (-t102 * t310 - t151 * t278 - t580) * qJD(2) + t519 + t136 * qJD(4) + t10 * qJD(5) + t202, t598 + (t102 * t151 + t225 * t86 + t226 * t85) * qJD(2) + t16 * qJD(3) + t13 * qJD(4) + t2 * qJD(5) + t22 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, -t270, t508, qJD(2) * t116 - t539, t271, t508, t270, qJD(2) * t78 - t541, 0, 0, 0, 0, 0, t180 * qJD(2) + t475, -t631, t111, t429, t631, qJD(2) * t16 + qJD(4) * t125 + t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t281 - t449, t447, t395, qJD(2) * t91 - t538, 0, 0, 0, 0, 0, t65, qJD(2) * t133 + t633, t65, qJD(2) * t67 - t537, qJD(2) * t136 - t633, qJD(2) * t13 + qJD(3) * t125 + qJD(5) * t18 - t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, t425, t71, t72, t361, qJD(2) * t33 + t591 - t87, qJD(2) * t32 - t553 + t588, qJD(2) * t12 + t593 - t87, t4 * qJD(2) + qJD(5) * t437 - t511 + t595, qJD(2) * t10 + t366 + t573 - t588, t597 + t2 * qJD(2) + t18 * qJD(4) + (-pkin(5) * t89 - qJ(6) * t88) * qJD(5) + t79 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t99 - t476, t71, -t391, qJD(2) * t22 + qJD(5) * t79 + t567; 0, 0, 0, -t463, -t504, 0, 0, 0, t496, t495, t522, -t521, t552, -qJD(3) * t115 - t549, -qJD(4) * t280 - t550, -t380 * t526 + t554, t319 + t551, -qJD(3) * t77 - qJD(4) * t90 - t566, -t278 * t534 + t100, t51 - t547, -qJD(5) * t389 - t535, qJD(5) * t181 - t536, t304, -qJD(5) * t30 - t578 + t630, qJD(4) * t134 - qJD(5) * t31 - t530 + t575, -qJD(5) * t11 - qJD(6) * t98 - t584 + t630, qJD(4) * t68 - qJD(5) * t3 - qJD(6) * t389 + t37 - t596, qJD(4) * t135 - qJD(5) * t9 + t202 + t530 - t585, -qJD(3) * t15 + qJD(4) * t14 - qJD(5) * t1 - qJD(6) * t21 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, t315, t467, t331, t375 * qJD(4), -t318 * t528 + t315, -t308 * t299, t157 * qJD(5), 0, 0, 0, t293 * t299 + t279, -t293 * t297 + t468, qJD(5) * t49 - t310 * t507 + t279, qJD(3) * t123, qJD(5) * t50 + qJD(6) * t303 - t468, qJD(3) * t73 + qJD(5) * t29 + (-t523 + t528) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, t636, 0, t505, 0, t635, 0, 0, 0, 0, 0, -t632, -t518, -t632, t424, t518, qJD(4) * t168 + t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, -t466, t292, -t318 * t531 - t548, 0, 0, 0, 0, 0, t96, t404, t96, t590, -t403, qJD(3) * t168 + t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, t423, t122, -t299 + t517, t503 / 0.2e1, -t224 + t408, -t293 * t533 + t525 - t570, -t224 + t431, qJD(5) * t436 - t507 - t601, -t434 - t525 (-pkin(5) * t226 - qJ(6) * t225) * qJD(5) + t226 * qJD(6) + t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, t122, t137, -t151 * t532 + t224 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, t447, -t508, qJD(2) * t115 + t539, -t446, -t508, -t447, qJD(2) * t77 - t382 * t527 + t541, 0, 0, 0, 0, 0, t72, t637, t72, -t429, -t637, qJD(2) * t15 + qJD(4) * t126 - qJD(5) * t453 + qJD(6) * t275 - t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, -t636, 0, -t505, 0, -t528 - t635, 0, 0, 0, 0, 0, t643, t634, t643, -t424, -t634, qJD(4) * t169 - qJD(5) * t452 - t430 + t523; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, t183, t186, 0, -t183, -t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t280 + t449, -t270, -t395, qJD(2) * t90 + t469 + t538, 0, 0, 0, 0, 0, t59, -t134 * qJD(2) + t642, t59, -qJD(2) * t68 + t537, -t135 * qJD(2) - t642, -t14 * qJD(2) - t126 * qJD(3) - t17 * qJD(5) + t366 * t381 + t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t466, -t292, t548 + (qJD(2) * t318 + qJD(3)) * t379, 0, 0, 0, 0, 0, -t96, -t404, -t96, -t590, t403, -qJD(3) * t169 - t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, -t314, -t313, 0, t314, -t586 + (t482 - t605) * qJD(5) + t381 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, -t425, t631, t111, t361, qJD(2) * t30 + t543 - t591, t31 * qJD(2) + t393 + t553, qJD(2) * t11 + t543 - t593, qJD(2) * t3 - t595, t9 * qJD(2) + t366 - t393 - t573, qJ(6) * t366 + t1 * qJD(2) + qJD(3) * t453 + t17 * qJD(4) - t597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, -t423, t165, -t517, -t503 / 0.2e1, t298 - t408, t570 + (qJD(2) * t293 - qJD(3)) * t308, t298 - t431, t601, qJD(3) * t308 + t434, qJD(3) * t452 - t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t183, -t186, 0, t183, t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t465, t444, t465, 0, -t444, t586; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t98 + t476, t631, t391, -qJ(6) * t524 + t21 * qJD(2) - t543 - t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t165, -t137, t583 + (qJD(2) * t151 - qJD(3)) * t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t359, -t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
