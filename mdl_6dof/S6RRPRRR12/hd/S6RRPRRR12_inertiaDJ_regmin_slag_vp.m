% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR12_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:41:43
% EndTime: 2019-03-09 14:41:53
% DurationCPUTime: 3.12s
% Computational Cost: add. (4341->330), mult. (11046->594), div. (0->0), fcn. (10773->10), ass. (0->176)
t146 = cos(qJ(6));
t143 = sin(qJ(5));
t223 = cos(qJ(5));
t144 = sin(qJ(4));
t147 = cos(qJ(4));
t140 = sin(pkin(6));
t145 = sin(qJ(2));
t206 = t140 * t145;
t124 = pkin(8) * t206;
t141 = cos(pkin(6));
t148 = cos(qJ(2));
t186 = -pkin(1) * t148 - pkin(2);
t71 = pkin(3) * t206 + t124 + (-pkin(9) + t186) * t141;
t149 = -pkin(2) - pkin(9);
t207 = qJ(3) * t145;
t81 = (t149 * t148 - pkin(1) - t207) * t140;
t176 = -t144 * t81 + t147 * t71;
t192 = pkin(4) * t206;
t205 = t140 * t148;
t97 = t141 * t147 - t144 * t205;
t36 = -pkin(10) * t97 + t176 + t192;
t218 = t144 * t71 + t147 * t81;
t187 = t147 * t205;
t96 = t141 * t144 + t187;
t39 = -pkin(10) * t96 + t218;
t162 = -t143 * t39 + t223 * t36;
t17 = -pkin(5) * t206 - t162;
t142 = sin(qJ(6));
t193 = qJD(6) * t142;
t199 = qJD(2) * t148;
t116 = t140 * t199;
t38 = t223 * t39;
t161 = t143 * t36 + t38;
t172 = pkin(4) * t116;
t200 = qJD(2) * t145;
t183 = t140 * t200;
t111 = pkin(2) * t183;
t198 = qJD(3) * t145;
t64 = t111 + (-t198 + (pkin(9) * t145 - qJ(3) * t148) * qJD(2)) * t140;
t222 = pkin(1) * t141;
t127 = t145 * t222;
t227 = pkin(3) + pkin(8);
t82 = (t227 * t205 + t127) * qJD(2);
t29 = -qJD(4) * t218 - t144 * t64 + t147 * t82;
t77 = -qJD(4) * t96 + t144 * t183;
t21 = -t77 * pkin(10) + t172 + t29;
t196 = qJD(4) * t147;
t117 = t141 * t196;
t197 = qJD(4) * t144;
t184 = t148 * t197;
t154 = t147 * t200 + t184;
t151 = t154 * t140 - t117;
t28 = -t144 * t82 - t147 * t64 - t71 * t196 + t197 * t81;
t25 = pkin(10) * t151 - t28;
t177 = t143 * t25 - t223 * t21;
t7 = -qJD(5) * t161 - t177;
t5 = -pkin(5) * t116 - t7;
t180 = -t5 * t146 + t17 * t193;
t232 = pkin(8) * t205 + t127;
t178 = t223 * qJD(5);
t231 = t223 * qJD(4) + t178;
t160 = -t143 * t97 - t223 * t96;
t32 = t160 * qJD(5) + t143 * t151 + t223 * t77;
t58 = -t143 * t96 + t223 * t97;
t33 = t58 * qJD(5) + t143 * t77 - t223 * t151;
t230 = t33 * pkin(5) - t32 * pkin(11);
t139 = t146 ^ 2;
t201 = t142 ^ 2 - t139;
t174 = qJD(6) * t201;
t101 = t143 * t144 - t223 * t147;
t99 = t101 ^ 2;
t229 = 0.2e1 * t140;
t228 = 0.2e1 * qJD(3);
t135 = qJD(6) * t146;
t224 = t17 * t135 + t5 * t142;
t220 = pkin(10) - t149;
t106 = t220 * t147;
t168 = qJD(4) * t106;
t169 = t220 * t197;
t105 = t220 * t144;
t79 = -t223 * t105 - t143 * t106;
t47 = t79 * qJD(5) - t143 * t168 - t223 * t169;
t78 = -t143 * t105 + t223 * t106;
t219 = t78 * t135 + t47 * t142;
t217 = pkin(4) * qJD(5);
t194 = qJD(5) * t143;
t73 = -t143 * t196 - t231 * t144 - t147 * t194;
t216 = t101 * t73;
t102 = t143 * t147 + t223 * t144;
t74 = -t143 * t197 - t144 * t194 + t231 * t147;
t215 = t102 * t74;
t214 = t142 * t73;
t213 = t142 * t74;
t212 = t146 * t73;
t211 = t146 * t74;
t158 = -t142 * t58 + t146 * t206;
t22 = qJD(6) * t158 + t116 * t142 + t146 * t32;
t210 = t22 * t142;
t209 = t22 * t146;
t92 = t232 * qJD(2);
t208 = t92 * t141;
t204 = t142 * t146;
t128 = t144 * pkin(4) + qJ(3);
t112 = t199 * t222;
t133 = t141 * qJD(3);
t203 = t112 + t133;
t131 = -t223 * pkin(4) - pkin(5);
t189 = pkin(4) * t194;
t202 = t131 * t135 + t142 * t189;
t195 = qJD(4) * t149;
t115 = pkin(4) * t196 + qJD(3);
t191 = pkin(5) * t193;
t190 = pkin(5) * t135;
t188 = t160 * t223;
t66 = t78 * t193;
t87 = -t141 * qJ(3) - t232;
t137 = t140 ^ 2;
t185 = t137 * t199;
t182 = t142 * t135;
t181 = t102 ^ 2 + t99;
t175 = 0.4e1 * t101 * t204;
t173 = pkin(4) * t184;
t171 = pkin(4) * t178;
t80 = pkin(3) * t205 - t87;
t170 = t117 * pkin(4) + t203;
t167 = -pkin(2) * t148 - t207;
t18 = pkin(11) * t206 + t161;
t56 = pkin(4) * t96 + t80;
t31 = -pkin(5) * t160 - pkin(11) * t58 + t56;
t10 = t142 * t31 + t146 * t18;
t51 = t142 * t206 + t146 * t58;
t166 = -t142 * t51 + t146 * t158;
t65 = pkin(5) * t102 + pkin(11) * t101 + t128;
t43 = t142 * t65 + t146 * t79;
t130 = pkin(4) * t143 + pkin(11);
t165 = t101 * t131 + t102 * t130;
t164 = (-pkin(4) * t147 - t227) * t145;
t163 = t131 * t193 - t146 * t189;
t91 = pkin(8) * t183 - t112;
t27 = -t135 * t160 + t142 * t33;
t159 = -t146 * t33 - t160 * t193;
t54 = t101 * t135 - t214;
t55 = t101 * t193 + t212;
t53 = t102 * t135 + t213;
t52 = t102 * t193 - t211;
t6 = -t143 * t21 - t36 * t178 + t194 * t39 - t223 * t25;
t157 = pkin(5) * t74 - pkin(11) * t73 + t115;
t156 = -0.2e1 * t215 + 0.2e1 * t216;
t155 = -t145 * t197 + t147 * t199;
t153 = (-t102 * t199 - t145 * t74) * t140;
t150 = -t130 * t74 + t131 * t73 + (-t101 * t143 - t223 * t102) * t217;
t48 = (qJD(2) * t164 - t173) * t140 + t170;
t114 = 0.2e1 * t182;
t104 = 0.2e1 * t145 * t185;
t100 = -0.2e1 * t174;
t89 = t141 * t186 + t124;
t88 = (-pkin(1) + t167) * t140;
t86 = t155 * t140;
t85 = (-t144 * t199 - t145 * t196) * t140;
t84 = -t133 + t91;
t83 = t111 + (-qJ(3) * t199 - t198) * t140;
t70 = -t227 * t183 + t203;
t49 = (-t101 * t199 + t145 * t73) * t140;
t46 = -t105 * t194 + t106 * t178 - t143 * t169 + t223 * t168;
t42 = -t142 * t79 + t146 * t65;
t41 = t101 * t174 + t204 * t73;
t37 = qJD(6) * t175 - t201 * t73;
t23 = qJD(6) * t51 - t116 * t146 + t142 * t32;
t14 = -qJD(6) * t43 + t142 * t46 + t146 * t157;
t13 = -t135 * t65 - t142 * t157 + t146 * t46 + t193 * t79;
t12 = t135 * t51 + t210;
t9 = -t142 * t18 + t146 * t31;
t8 = qJD(6) * t166 - t142 * t23 + t209;
t2 = t142 * t6 + t146 * (t170 + t230) + (-t146 * t173 + (-t142 * pkin(11) * t148 + t146 * t164) * qJD(2)) * t140 - t10 * qJD(6);
t1 = t18 * t193 - t142 * (t48 + t230) - t146 * (pkin(11) * t116 - t6) - t31 * t135;
t3 = [0, 0, 0, t104, 0.2e1 * (-t145 ^ 2 + t148 ^ 2) * t137 * qJD(2), 0.2e1 * t141 * t116, -0.2e1 * t141 * t183, 0, -0.2e1 * pkin(1) * t137 * t200 - 0.2e1 * t208, -0.2e1 * pkin(1) * t185 + 0.2e1 * t141 * t91 (t145 * t92 - t148 * t84 + (t145 * t87 + t148 * t89) * qJD(2)) * t229, 0.2e1 * t208 + 0.2e1 * (t148 * t83 - t200 * t88) * t140, -0.2e1 * t84 * t141 + 0.2e1 * (-t145 * t83 - t199 * t88) * t140, 0.2e1 * t83 * t88 + 0.2e1 * t84 * t87 + 0.2e1 * t89 * t92, 0.2e1 * t97 * t77, 0.2e1 * t151 * t97 - 0.2e1 * t77 * t96 (t145 * t77 + t199 * t97) * t229 (t151 * t145 - t199 * t96) * t229, t104, 0.2e1 * t80 * t117 + 0.2e1 * t70 * t96 + 0.2e1 * (t29 * t145 - t154 * t80 + t176 * t199) * t140, 0.2e1 * t70 * t97 + 0.2e1 * t80 * t77 + 0.2e1 * (t28 * t145 - t199 * t218) * t140, 0.2e1 * t58 * t32, 0.2e1 * t160 * t32 - 0.2e1 * t33 * t58 (t145 * t32 + t199 * t58) * t229 (-t145 * t33 + t160 * t199) * t229, t104, 0.2e1 * t56 * t33 - 0.2e1 * t48 * t160 + 0.2e1 * (t7 * t145 + t162 * t199) * t140, 0.2e1 * t56 * t32 + 0.2e1 * t48 * t58 + 0.2e1 * (t6 * t145 - t161 * t199) * t140, 0.2e1 * t51 * t22, 0.2e1 * t158 * t22 - 0.2e1 * t23 * t51, -0.2e1 * t160 * t22 + 0.2e1 * t33 * t51, 0.2e1 * t158 * t33 + 0.2e1 * t160 * t23, -0.2e1 * t160 * t33, -0.2e1 * t158 * t5 - 0.2e1 * t160 * t2 + 0.2e1 * t17 * t23 + 0.2e1 * t33 * t9, -0.2e1 * t1 * t160 - 0.2e1 * t10 * t33 + 0.2e1 * t17 * t22 + 0.2e1 * t5 * t51; 0, 0, 0, 0, 0, t116, -t183, 0, -t92, t91 (qJD(2) * t167 + qJD(3) * t148) * t140, t92, 0.2e1 * t133 - t91, -pkin(2) * t92 - qJ(3) * t84 - qJD(3) * t87, t147 * t77 - t197 * t97, t147 * (t147 * t183 - t117) - t77 * t144 + (-t97 * t147 + (t96 + t187) * t144) * qJD(4), t86, t85, 0, t80 * t196 + qJ(3) * t117 + qJD(3) * t96 + t70 * t144 + (-qJ(3) * t154 + t149 * t155) * t140, -t144 * t149 * t116 + qJ(3) * t77 + qJD(3) * t97 + t70 * t147 + (-t147 * t149 * t206 - t144 * t80) * qJD(4), -t101 * t32 + t58 * t73, t101 * t33 - t102 * t32 + t160 * t73 - t58 * t74, t49, t153, 0, t48 * t102 - t115 * t160 + t128 * t33 + t56 * t74 + (-t145 * t47 - t199 * t78) * t140, -t48 * t101 + t115 * t58 + t128 * t32 + t56 * t73 + (t145 * t46 - t199 * t79) * t140, t51 * t212 + (t193 * t51 - t209) * t101, t166 * t73 + (t210 + t146 * t23 + (t142 * t158 + t146 * t51) * qJD(6)) * t101, t101 * t159 + t22 * t102 - t160 * t212 + t51 * t74, t101 * t27 - t23 * t102 + t158 * t74 + t160 * t214, t102 * t33 - t160 * t74, -t224 * t101 + t2 * t102 - t14 * t160 - t158 * t47 + t17 * t214 + t78 * t23 + t42 * t33 + t9 * t74, t1 * t102 - t10 * t74 + t180 * t101 - t13 * t160 + t17 * t212 + t78 * t22 - t43 * t33 + t47 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, qJ(3) * t228, -0.2e1 * t144 * t196, 0.2e1 * (t144 ^ 2 - t147 ^ 2) * qJD(4), 0, 0, 0, 0.2e1 * qJ(3) * t196 + 0.2e1 * qJD(3) * t144, -0.2e1 * qJ(3) * t197 + 0.2e1 * qJD(3) * t147, -0.2e1 * t216, 0.2e1 * t101 * t74 - 0.2e1 * t102 * t73, 0, 0, 0, 0.2e1 * t102 * t115 + 0.2e1 * t128 * t74, -0.2e1 * t101 * t115 + 0.2e1 * t128 * t73, -0.2e1 * t139 * t216 - 0.2e1 * t182 * t99, 0.2e1 * t174 * t99 + t175 * t73, 0.2e1 * t101 * t52 + 0.2e1 * t102 * t212, 0.2e1 * t101 * t53 - 0.2e1 * t102 * t214, 0.2e1 * t215, -0.2e1 * t101 * t219 + 0.2e1 * t14 * t102 + 0.2e1 * t78 * t214 + 0.2e1 * t42 * t74, 0.2e1 * t78 * t212 + 0.2e1 * t13 * t102 - 0.2e1 * t43 * t74 + 0.2e1 * (-t47 * t146 + t66) * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, 0, t92, 0, 0, 0, 0, 0, t86, t85, 0, 0, 0, 0, 0, t49, t153, 0, 0, 0, 0, 0, t101 * t23 - t102 * t27 + t158 * t73 + t160 * t213, t101 * t22 + t102 * t159 + t160 * t211 - t73 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135 * t181 + t142 * t156, t146 * t156 + t181 * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t151, t116, t29, t28, 0, 0, t32, -t33, t116, t223 * t172 + (-t38 + (-t36 - t192) * t143) * qJD(5) - t177 (-t143 * t199 - t145 * t178) * t140 * pkin(4) + t6, t12, t8, t27, -t159, 0, t131 * t23 - t27 * t130 + (t142 * t188 - t143 * t158) * t217 + t180, t131 * t22 + t159 * t130 + (t143 * t51 + t146 * t188) * t217 + t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, -t196, 0, -t144 * t195, -t147 * t195, 0, 0, t73, -t74, 0, -t47, t46, t41, t37, t53, -t52, 0, t66 + (-qJD(6) * t165 - t47) * t146 + t150 * t142, t146 * t150 + t165 * t193 + t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, -t196, 0, 0, 0, 0, 0, t73, -t74, 0, 0, 0, 0, 0, t55, t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t189, -0.2e1 * t171, t114, t100, 0, 0, 0, 0.2e1 * t163, 0.2e1 * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t33, t116, t7, t6, t12, t8, t27, -t159, 0, -pkin(5) * t23 - pkin(11) * t27 + t180, -pkin(5) * t22 + pkin(11) * t159 + t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t74, 0, -t47, t46, t41, t37, t53, -t52, 0, t66 + (-pkin(5) * t73 - pkin(11) * t74) * t142 + (-t47 + (pkin(5) * t101 - pkin(11) * t102) * qJD(6)) * t146, -pkin(5) * t55 + pkin(11) * t52 + t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, -t74, 0, 0, 0, 0, 0, t55, t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t171, t114, t100, 0, 0, 0, t163 - t191, -t190 + t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t100, 0, 0, 0, -0.2e1 * t191, -0.2e1 * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t23, t33, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t54, t74, t14, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, -t193, 0, -t130 * t135 - t142 * t171, t130 * t193 - t146 * t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, -t193, 0, -pkin(11) * t135, pkin(11) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
