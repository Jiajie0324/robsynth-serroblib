% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:41:48
% EndTime: 2019-03-09 14:43:03
% DurationCPUTime: 53.60s
% Computational Cost: add. (21692->1128), mult. (51039->1476), div. (0->0), fcn. (56872->10), ass. (0->836)
t767 = sin(qJ(5));
t768 = sin(qJ(4));
t1141 = t767 * t768;
t1243 = cos(qJ(5));
t771 = cos(qJ(4));
t747 = t1243 * t771;
t698 = -t747 + t1141;
t1304 = 0.2e1 * t698;
t770 = cos(qJ(6));
t1060 = qJD(2) * t770;
t766 = sin(qJ(6));
t990 = t766 * t1060;
t1367 = t990 * t1304;
t764 = sin(pkin(6));
t772 = cos(qJ(2));
t1166 = t764 * t772;
t765 = cos(pkin(6));
t674 = -t1166 * t768 + t765 * t771;
t1142 = t767 * t674;
t673 = -t1166 * t771 - t765 * t768;
t636 = t1243 * t673;
t474 = -t636 + t1142;
t1329 = t770 * t474;
t1345 = t1329 / 0.2e1;
t1357 = 0.2e1 * t1345;
t699 = t1243 * t768 + t767 * t771;
t518 = t770 * t699;
t1365 = -qJD(1) * t1357 - qJD(2) * t518;
t1245 = t770 / 0.2e1;
t1249 = -t766 / 0.2e1;
t1167 = t764 * t771;
t769 = sin(qJ(2));
t997 = t769 * t1167;
t702 = t767 * t997;
t1168 = t764 * t769;
t911 = t1243 * t1168;
t703 = t768 * t911;
t592 = -t702 - t703;
t1186 = t592 * t766;
t727 = t770 * t1166;
t484 = -t727 - t1186;
t1185 = t592 * t770;
t485 = t1166 * t766 - t1185;
t1283 = t1245 * t485 + t1249 * t484;
t1147 = t766 * t770;
t1195 = t474 * t698;
t1143 = t767 * t673;
t637 = t1243 * t674;
t1289 = t637 + t1143;
t1155 = t766 * t1289;
t371 = -t1168 * t770 + t1155;
t1132 = t770 * t371;
t1129 = t770 * t1289;
t373 = t1168 * t766 + t1129;
t1200 = t373 * t766;
t839 = t1132 / 0.2e1 + t1200 / 0.2e1;
t1354 = -t1147 * t1195 + t699 * t839;
t1343 = -t1283 + t1354;
t1366 = -qJD(1) * t1343 + t1367 * t699;
t1015 = qJD(4) + qJD(5);
t754 = qJD(6) * t770;
t1364 = t754 - t1365;
t1256 = -t699 / 0.2e1;
t759 = t766 ^ 2;
t762 = t770 ^ 2;
t735 = t762 - t759;
t1324 = t1015 * t735;
t738 = t766 * t754;
t613 = t738 * t1304;
t1363 = -t1324 * t699 - t1366 + t613;
t1346 = -t1329 / 0.2e1;
t1350 = t1345 + t1346;
t1361 = qJD(6) * t1350;
t1330 = t766 * t474;
t1344 = t1330 / 0.2e1;
t441 = -t1330 / 0.2e1;
t1355 = t441 + t1344;
t1360 = qJD(6) * t1355;
t1359 = qJD(6) * t1357;
t1358 = t613 + t1366;
t953 = -t1141 / 0.2e1;
t686 = t747 / 0.2e1 + t953;
t1320 = t1289 * t699;
t1339 = t1320 / 0.2e1 - t1195 / 0.2e1;
t1065 = qJD(2) * t699;
t985 = t698 * t1065;
t927 = -qJD(1) * t1339 + t985;
t1356 = qJD(6) * t686 - t927;
t1139 = t768 * t769;
t740 = pkin(2) * t1168;
t605 = t740 + (pkin(9) * t769 - qJ(3) * t772) * t764;
t1140 = t768 * t605;
t1242 = pkin(1) * t769;
t683 = pkin(8) * t1166 + t1242 * t765;
t607 = pkin(3) * t1166 + t683;
t589 = t771 * t607;
t930 = t589 - t1140;
t291 = (pkin(4) * t772 - pkin(10) * t1139) * t764 + t930;
t280 = t767 * t291;
t587 = t771 * t605;
t588 = t768 * t607;
t1102 = t587 + t588;
t310 = pkin(10) * t997 + t1102;
t307 = t1243 * t310;
t1115 = -t280 / 0.2e1 - t307 / 0.2e1;
t746 = pkin(4) * t768 + qJ(3);
t1254 = -t746 / 0.2e1;
t753 = t765 * qJ(3);
t579 = t753 + t607;
t432 = -pkin(4) * t673 + t579;
t773 = -pkin(2) - pkin(9);
t1302 = -pkin(10) + t773;
t709 = t1302 * t768;
t711 = t1302 * t771;
t929 = -t1243 * t711 + t709 * t767;
t963 = t1168 / 0.2e1;
t806 = t1254 * t474 + t1256 * t432 + t929 * t963;
t55 = t806 - t1115;
t56 = t806 + t1115;
t1279 = t474 ^ 2;
t1340 = -t1289 ^ 2 + t1279;
t1353 = qJD(1) * t1340;
t1351 = qJD(2) * t1339;
t877 = t1132 + t1200;
t1328 = t877 * t474;
t1341 = t1328 * qJD(1);
t1342 = t1283 + t1354;
t136 = t877 * qJD(6);
t1349 = qJD(2) * t1342 + t1341 - t136;
t1348 = -qJD(2) * t1343 - t1341 - t136;
t1347 = -t1320 / 0.2e1;
t1238 = pkin(11) * t474;
t262 = pkin(5) * t1289 + t1238;
t838 = t1243 * t709 + t711 * t767;
t1303 = -t838 / 0.2e1;
t1335 = t1289 / 0.2e1;
t1298 = t838 * t770;
t898 = t699 * pkin(5) + t698 * pkin(11);
t810 = t746 + t898;
t283 = t766 * t810 + t1298;
t843 = t1303 * t373 + t1335 * t283;
t1299 = t838 * t766;
t282 = -t770 * t810 + t1299;
t844 = t1303 * t371 + t1335 * t282;
t1337 = -t474 / 0.2e1;
t1336 = t474 / 0.2e1;
t1239 = pkin(11) * t1289;
t1333 = t432 * t474;
t1274 = pkin(3) + pkin(8);
t1165 = t765 * t772;
t744 = pkin(1) * t1165;
t606 = -t1168 * t1274 + t744;
t546 = t765 * t773 - t606;
t1230 = qJ(3) * t769;
t880 = -t772 * t773 + t1230;
t580 = (-pkin(1) - t880) * t764;
t305 = -t546 * t771 + t580 * t768;
t253 = -pkin(10) * t674 - t305;
t227 = pkin(4) * t1168 + t253;
t306 = t546 * t768 + t580 * t771;
t254 = pkin(10) * t673 + t306;
t250 = t1243 * t254;
t122 = t767 * t227 + t250;
t112 = pkin(11) * t1168 + t122;
t899 = pkin(5) * t474 - t1239;
t788 = t432 + t899;
t49 = t112 * t766 - t770 * t788;
t1332 = t49 * t1289;
t50 = t112 * t770 + t766 * t788;
t1331 = t50 * t1289;
t1327 = t929 * t766;
t1326 = t929 * t770;
t1050 = qJD(5) * t766;
t1056 = qJD(4) * t766;
t1325 = (-t1050 - t1056) * t699;
t684 = t698 * qJD(5);
t1100 = qJD(4) * t698 + t684;
t1057 = qJD(4) * t474;
t1051 = qJD(5) * t474;
t1323 = t1289 * t371;
t1322 = t1289 * t373;
t1321 = t1289 * t432;
t1319 = t1339 * qJD(5);
t1073 = qJD(1) * t1289;
t993 = t474 * t1073;
t1177 = t698 * t1289;
t618 = t637 / 0.2e1;
t954 = t1143 / 0.2e1;
t1297 = t618 + t954;
t1315 = qJD(6) * t1297;
t1258 = -t698 / 0.2e1;
t704 = t771 * t911;
t797 = t704 / 0.2e1 + (t953 + t1258) * t1168;
t1293 = t797 * qJD(1);
t1314 = -t1293 + t1100;
t939 = 0.2e1 * t1336;
t897 = t939 * t699;
t1313 = t1177 / 0.2e1 + t897;
t1078 = qJD(1) * t373;
t1158 = t766 * t371;
t1199 = t373 * t770;
t196 = -t1158 / 0.2e1 + t1199 / 0.2e1;
t194 = t196 * qJD(6);
t1312 = t1078 * t1329 + t194;
t934 = t702 / 0.2e1 + t703 / 0.2e1;
t420 = t699 * t963 + t934;
t992 = qJD(1) * t1168;
t1311 = qJD(2) * t420 + t474 * t992;
t1310 = (t282 - t1299) * t698;
t1309 = (t283 - t1298) * t698;
t830 = t993 + t1351;
t1308 = qJD(2) * t797 + t1289 * t992;
t1307 = t1015 * t929;
t1306 = qJD(1) * t1297 + qJD(2) * t686;
t1305 = t1015 * t838;
t1145 = t767 * t254;
t222 = t1243 * t227;
t121 = -t222 + t1145;
t111 = -pkin(5) * t1168 + t121;
t1234 = t49 * t698;
t514 = t766 * t699;
t956 = -t514 / 0.2e1;
t1301 = t1234 / 0.2e1 + t111 * t956;
t1233 = t50 * t698;
t946 = -t518 / 0.2e1;
t1300 = t111 * t946 + t1233 / 0.2e1;
t923 = t1015 * t699;
t890 = t698 * t923;
t998 = t764 * t1139;
t918 = t767 * t998;
t590 = t918 / 0.2e1 - t704 / 0.2e1;
t789 = t698 * t963 - t590;
t1295 = t1015 * t789;
t1294 = t1015 * t797;
t1265 = -t1289 / 0.2e1;
t1235 = t767 * pkin(4);
t748 = pkin(11) + t1235;
t1013 = t1243 * pkin(4);
t749 = -t1013 - pkin(5);
t1252 = -t749 / 0.2e1;
t917 = -t1013 / 0.2e1;
t849 = t917 + t1252;
t790 = t1265 * t748 + t474 * t849;
t1292 = -t1239 / 0.2e1 + t790;
t1278 = t699 ^ 2;
t689 = t698 ^ 2;
t1014 = t689 - t1278;
t1288 = t1278 / 0.2e1 + t689 / 0.2e1;
t1028 = t1014 * qJD(2);
t1174 = t699 * t474;
t149 = t1174 + t1177;
t1285 = qJD(1) * t149 - t1028;
t92 = t1304 * t1335 + t897;
t1284 = qJD(1) * t92 - t1028;
t1144 = t767 * t310;
t995 = t1243 * t291;
t1114 = t995 / 0.2e1 - t1144 / 0.2e1;
t151 = t371 ^ 2 - t373 ^ 2;
t96 = (t1158 - t1199) * t698;
t1282 = -qJD(1) * t151 + qJD(2) * t96 + t1015 * t877;
t171 = t839 * t698;
t1281 = qJD(2) * t171 + t1015 * t196 - t1078 * t371;
t933 = t759 / 0.2e1 - t762 / 0.2e1;
t513 = t933 * t698;
t1280 = t171 * qJD(1) + t1015 * t513 - t689 * t990;
t93 = -qJD(1) * t877 + t1324 + t1367;
t1277 = -pkin(4) / 0.2e1;
t1276 = -pkin(5) / 0.2e1;
t1275 = -pkin(11) / 0.2e1;
t1273 = t111 / 0.2e1;
t903 = -t250 / 0.2e1;
t1272 = t371 / 0.2e1;
t1271 = -t373 / 0.2e1;
t1236 = t699 * pkin(11);
t1237 = t698 * pkin(5);
t563 = t1236 - t1237;
t1263 = t563 / 0.2e1;
t1262 = t929 / 0.2e1;
t902 = -t637 / 0.2e1;
t1259 = t673 / 0.2e1;
t1257 = t698 / 0.2e1;
t1255 = t699 / 0.2e1;
t1253 = t748 / 0.2e1;
t1251 = t749 / 0.2e1;
t1250 = t765 / 0.2e1;
t1248 = t766 / 0.2e1;
t1247 = -t768 / 0.2e1;
t1246 = -t770 / 0.2e1;
t1244 = -t771 / 0.2e1;
t1241 = pkin(4) * t674;
t1240 = pkin(4) * t771;
t1146 = t767 * t253;
t132 = t250 + t1146;
t218 = t1241 + t262;
t1135 = t770 * t218;
t996 = t1243 * t253;
t133 = t996 - t1145;
t1163 = t766 * t133;
t878 = t1135 - t1163;
t9 = -t111 * t1330 + t132 * t371 + t474 * t878 - t1332;
t1232 = t9 * qJD(1);
t1231 = qJD(4) * t92 + qJD(5) * t149;
t23 = -t111 * t371 + t474 * t49;
t1229 = qJD(1) * t23;
t24 = t111 * t373 - t474 * t50;
t1228 = qJD(1) * t24;
t47 = -t1168 * t132 + t1241 * t474 + t1321;
t1227 = qJD(1) * t47;
t48 = t1168 * t133 - t1241 * t1289 + t1333;
t1226 = qJD(1) * t48;
t63 = -t1168 * t121 + t1333;
t1223 = qJD(1) * t63;
t64 = -t1168 * t122 + t1321;
t1222 = qJD(1) * t64;
t1179 = t698 * t371;
t780 = t1313 * t766 + t1179 / 0.2e1;
t591 = -t704 + t918;
t1124 = t770 * t591;
t947 = -t1124 / 0.2e1;
t66 = t947 + t780;
t1221 = qJD(1) * t66;
t958 = t1155 / 0.2e1;
t795 = (t958 + t1272) * t698 + t474 * t514;
t68 = t947 + t795;
t1220 = qJD(1) * t68;
t1178 = t698 * t373;
t781 = -t1313 * t770 - t1178 / 0.2e1;
t1149 = t766 * t591;
t957 = -t1149 / 0.2e1;
t74 = t957 + t781;
t1219 = qJD(1) * t74;
t948 = -t1129 / 0.2e1;
t794 = (t948 + t1271) * t698 - t474 * t518;
t76 = t957 + t794;
t1218 = qJD(1) * t76;
t1201 = t373 * t699;
t938 = t1336 + t1337;
t804 = t698 * t938 + t1347;
t782 = t804 * t770 + t1201 / 0.2e1;
t974 = -t1186 / 0.2e1;
t78 = t974 + t782;
t1217 = qJD(1) * t78;
t846 = (t948 + t373 / 0.2e1) * t699;
t80 = t974 + t846;
t1216 = qJD(1) * t80;
t1137 = t770 * t133;
t1161 = t766 * t218;
t879 = t1137 + t1161;
t10 = -t111 * t1329 + t132 * t373 - t474 * t879 - t1331;
t1214 = t10 * qJD(1);
t1120 = -t111 + t121;
t1133 = t770 * t262;
t11 = t122 * t371 - t1332 + (t1120 * t766 + t1133) * t474;
t1213 = t11 * qJD(1);
t1159 = t766 * t262;
t12 = t122 * t373 - t1331 + (t1120 * t770 - t1159) * t474;
t1212 = t12 * qJD(1);
t1211 = t122 * t766;
t1210 = t122 * t770;
t840 = t995 - t1144;
t168 = -pkin(5) * t1166 - t840;
t539 = t744 + (-t1240 - t1274) * t1168;
t261 = t591 * pkin(5) + t592 * pkin(11) + t539;
t1134 = t770 * t261;
t1113 = t307 + t280;
t169 = pkin(11) * t1166 + t1113;
t1162 = t766 * t169;
t85 = t1134 - t1162;
t13 = t111 * t484 + t168 * t371 + t474 * t85 - t49 * t591;
t1209 = t13 * qJD(1);
t1208 = t132 * t766;
t1207 = t132 * t770;
t1136 = t770 * t169;
t1160 = t766 * t261;
t86 = t1136 + t1160;
t14 = t111 * t485 + t168 * t373 - t474 * t86 - t50 * t591;
t1206 = t14 * qJD(1);
t33 = t432 * t591 + t539 * t474 + (-t121 * t772 + t769 * t840) * t764;
t1205 = t33 * qJD(1);
t34 = -t539 * t1289 + t432 * t592 + (t1113 * t769 + t122 * t772) * t764;
t1204 = t34 * qJD(1);
t964 = -t1168 / 0.2e1;
t862 = pkin(4) * t964 - t227 / 0.2e1;
t35 = t903 + t250 / 0.2e1 + (t253 / 0.2e1 + t862) * t767;
t1203 = t35 * qJD(1);
t815 = -t222 / 0.2e1 + t911 * t1277;
t37 = t996 / 0.2e1 + t815;
t1202 = t37 * qJD(1);
t1198 = t432 * t698;
t1193 = t485 * t766;
t1187 = t579 * t771;
t1184 = t674 * t698;
t1183 = t674 * t699;
t682 = pkin(8) * t1168 - t744;
t1182 = t682 * t765;
t1181 = t683 * t765;
t1175 = t699 * t371;
t783 = t804 * t766 + t1175 / 0.2e1;
t973 = t1185 / 0.2e1;
t69 = t973 + t783;
t1180 = t69 * qJD(1);
t1176 = t698 * t748;
t520 = t698 * t766;
t521 = t698 * t770;
t1173 = t699 * t746;
t1172 = t699 * t749;
t847 = (-t1155 / 0.2e1 + t1272) * t699;
t71 = t973 + t847;
t1171 = t71 * qJD(1);
t758 = t764 ^ 2;
t761 = t769 ^ 2;
t1170 = t758 * t761;
t1169 = t758 * t772;
t1164 = t766 * t121;
t534 = t563 + t1240;
t1153 = t766 * t534;
t1152 = t766 * t563;
t1148 = t766 * t765;
t1138 = t770 * t121;
t1128 = t770 * t534;
t1127 = t770 * t563;
t1123 = t770 * t765;
t97 = -t606 * t673 + (-t305 * t772 + (t930 - t1187) * t769) * t764;
t1122 = t97 * qJD(1);
t98 = -t606 * t674 - t579 * t998 + (t1102 * t769 + t306 * t772) * t764;
t1121 = t98 * qJD(1);
t1117 = qJD(4) * t1339 + t1319;
t976 = t474 * t1258;
t212 = -t976 + t1347;
t1116 = qJD(4) * t212 - t1319;
t416 = t1014 * t766;
t1031 = t416 * qJD(2);
t1110 = -qJD(6) * t514 + t1031;
t422 = t699 * t964 + t934;
t1109 = t1015 * t422;
t1108 = t1015 * t420;
t491 = t513 * qJD(6);
t558 = t762 * t985;
t1107 = t491 - t558;
t417 = t1014 * t770;
t1030 = t417 * qJD(2);
t1106 = qJD(6) * t518 - t1030;
t1101 = t1015 * t686;
t734 = t768 ^ 2 - t771 ^ 2;
t128 = -t1279 * t766 + t1323;
t1099 = qJD(1) * t128;
t129 = -t1330 * t474 + t1323;
t1098 = qJD(1) * t129;
t130 = -t1279 * t770 + t1322;
t1097 = qJD(1) * t130;
t131 = -t1329 * t474 + t1322;
t1096 = qJD(1) * t131;
t908 = t373 * t946;
t977 = t1195 / 0.2e1;
t808 = t762 * t977 + t908;
t975 = -t1193 / 0.2e1;
t141 = t975 + t808;
t1094 = qJD(1) * t141;
t807 = -t762 * t976 + t908;
t143 = t975 + t807;
t1093 = qJD(1) * t143;
t874 = t1123 - t1149;
t158 = t371 * t592 + t474 * t874;
t1091 = qJD(1) * t158;
t875 = t1124 + t1148;
t159 = t373 * t592 - t474 * t875;
t1090 = qJD(1) * t159;
t188 = -t1168 * t305 - t579 * t673;
t1089 = qJD(1) * t188;
t189 = -t1168 * t306 + t579 * t674;
t1088 = qJD(1) * t189;
t224 = t938 * t1147;
t1087 = qJD(1) * t224;
t237 = 0.2e1 * t441;
t1086 = qJD(1) * t237;
t239 = t939 * t766;
t1085 = qJD(1) * t239;
t271 = (t1289 * t772 - t592 * t769) * t764;
t1082 = qJD(1) * t271;
t274 = t1168 * t591 - t1289 * t765;
t1081 = qJD(1) * t274;
t275 = -t1168 * t592 + t474 * t765;
t1080 = qJD(1) * t275;
t888 = -pkin(2) * t772 - t1230;
t630 = (-pkin(1) + t888) * t764;
t677 = -qJ(3) * t1166 + t740;
t293 = t1182 + (t630 * t772 + t677 * t769) * t764;
t1079 = qJD(1) * t293;
t629 = -t753 - t683;
t376 = t1168 * t630 + t629 * t765;
t1077 = qJD(1) * t376;
t1074 = qJD(1) * t474;
t1002 = t768 * t1170;
t540 = t1166 * t674 + t1002;
t1072 = qJD(1) * t540;
t1001 = t771 * t1170;
t541 = t1166 * t673 + t1001;
t1071 = qJD(1) * t541;
t1070 = qJD(1) * t590;
t1069 = qJD(1) * t674;
t1068 = qJD(2) * t682;
t1067 = qJD(2) * t683;
t1066 = qJD(2) * t698;
t1064 = qJD(2) * t746;
t1063 = qJD(2) * t764;
t1062 = qJD(2) * t765;
t1061 = qJD(2) * t768;
t1059 = qJD(2) * t771;
t1058 = qJD(3) * t699;
t1055 = qJD(4) * t768;
t1054 = qJD(4) * t770;
t1053 = qJD(4) * t771;
t1052 = qJD(4) * t773;
t1049 = qJD(5) * t770;
t1048 = qJD(6) * t474;
t1047 = qJD(6) * t766;
t123 = -t371 * t485 - t373 * t484;
t1044 = t123 * qJD(1);
t962 = -t1166 / 0.2e1;
t967 = -t1175 / 0.2e1;
t146 = t967 + t973 + (t977 + t962) * t766;
t1043 = t146 * qJD(1);
t823 = -t1201 / 0.2e1 + t698 * t1345;
t894 = -t727 / 0.2e1 + t974;
t147 = t823 + t894;
t1042 = t147 * qJD(1);
t156 = -t371 * t591 - t474 * t484;
t1041 = t156 * qJD(1);
t157 = t373 * t591 + t474 * t485;
t1040 = t157 * qJD(1);
t179 = -t1289 * t591 + t474 * t592;
t1039 = t179 * qJD(1);
t825 = -t765 * pkin(2) + t682;
t209 = t629 * t682 + t630 * t677 + t683 * t825;
t1038 = t209 * qJD(1);
t219 = (-t629 - t683) * t1168 + (t682 - t825) * t1166;
t1037 = t219 * qJD(1);
t940 = t1335 + t1265;
t236 = t940 * t766;
t1036 = t236 * qJD(1);
t242 = t940 * t770;
t1035 = t242 * qJD(1);
t270 = (-t474 * t772 - t591 * t769) * t764;
t1034 = t270 * qJD(1);
t294 = t1181 + (-t630 * t769 + t677 * t772) * t764;
t1033 = t294 * qJD(1);
t321 = t673 * t768 + t674 * t771;
t377 = t321 * t1168;
t1032 = t377 * qJD(1);
t405 = t420 * qJD(1);
t468 = t902 + t618;
t1029 = t468 * qJD(1);
t1027 = t514 * qJD(2);
t561 = -t673 * t765 + t1002;
t1025 = t561 * qJD(1);
t562 = t674 * t765 + t1001;
t1024 = t562 * qJD(1);
t583 = t1242 * t758 + t1181;
t1023 = t583 * qJD(1);
t584 = pkin(1) * t1169 - t1182;
t1022 = t584 * qJD(1);
t1021 = t590 * qJD(6);
t688 = (t772 ^ 2 - t761) * t758;
t1018 = t688 * qJD(1);
t752 = t765 * qJD(3);
t1012 = qJD(4) * t1235;
t1011 = qJD(5) * t1235;
t1010 = t1240 / 0.2e1;
t1009 = pkin(5) * t1272;
t1008 = pkin(5) * t1271;
t1007 = t484 * t1276;
t1006 = t485 * t1276;
t1004 = t1235 / 0.2e1;
t1000 = t769 * t1169;
t999 = t764 * t1165;
t991 = t769 * t1063;
t989 = qJD(3) * t1168;
t988 = qJD(4) * t1168;
t987 = t699 * t1047;
t986 = t699 * t754;
t984 = t772 * t1063;
t983 = t111 * t1248;
t982 = t111 * t1245;
t981 = t1208 / 0.2e1;
t980 = t168 * t1248;
t979 = t168 * t1246;
t572 = t1186 / 0.2e1;
t573 = -t1185 / 0.2e1;
t972 = -t1179 / 0.2e1;
t971 = t1178 / 0.2e1;
t970 = -t520 / 0.2e1;
t969 = t520 / 0.2e1;
t968 = -t521 / 0.2e1;
t966 = t371 * t1252;
t965 = t373 * t1251;
t961 = t1166 / 0.2e1;
t960 = -t1162 / 0.2e1;
t955 = t514 / 0.2e1;
t952 = -t1136 / 0.2e1;
t945 = t518 / 0.2e1;
t944 = t748 * t1246;
t943 = t1273 - t121 / 0.2e1;
t942 = t1273 + t133 / 0.2e1;
t941 = t122 / 0.2e1 - t132 / 0.2e1;
t937 = t1262 - t929 / 0.2e1;
t936 = t838 / 0.2e1 + t1303;
t935 = -t587 / 0.2e1 - t588 / 0.2e1;
t932 = t1243 * qJD(4);
t931 = t1243 * qJD(5);
t926 = qJD(1) * t212 + t985;
t924 = -t1027 - t1047;
t922 = t1015 * t770;
t921 = t371 * t1004;
t920 = t373 * t1004;
t739 = qJD(1) * t765 + qJD(2);
t919 = -qJD(6) - t1074;
t916 = qJD(6) * t521 - t1325;
t915 = -t1100 * t766 + t1030;
t914 = -t1100 * t770 - t1031;
t912 = t1325 * t770 + t491 + t558;
t719 = t768 * t992;
t910 = qJD(1) * t999;
t907 = t698 * t962;
t906 = t699 * t962;
t905 = t767 * t962;
t904 = t773 * t964;
t901 = t1238 / 0.2e1 + t262 / 0.2e1;
t900 = t1015 * t1235;
t895 = t261 / 0.2e1 + t111 * t1257;
t893 = t1174 / 0.2e1 + t1250;
t892 = t474 * t1253 + t218 / 0.2e1;
t891 = t766 * t922;
t889 = t1015 * t1147;
t887 = qJD(4) + t992;
t886 = -qJD(5) - t992;
t775 = t878 * t1256 + (t1128 + t1327) * t1337 + t929 * t1344 + t844;
t791 = t1251 * t484 + t748 * t957 + t979;
t1 = t111 * t955 + (-t49 / 0.2e1 + t981) * t698 + t775 + t791;
t81 = t1128 * t699 + t1310;
t885 = -t1 * qJD(1) + t81 * qJD(2);
t774 = t879 * t1255 + (-t1326 + t1153) * t1336 + t929 * t1345 + t843;
t792 = t1251 * t485 + t591 * t944 + t980;
t2 = t111 * t945 + (-t50 / 0.2e1 + t1207 / 0.2e1) * t698 + t774 + t792;
t82 = -t1153 * t699 + t1309;
t884 = -qJD(1) * t2 + qJD(2) * t82;
t787 = t122 * t1257 + t1275 * t591 + t699 * t943;
t813 = t168 / 0.2e1 + t474 * t1263 + t262 * t1255;
t5 = t1007 - t1234 / 0.2e1 - t813 * t770 + t787 * t766 + t844;
t83 = t518 * t563 + t1310;
t883 = -t5 * qJD(1) + t83 * qJD(2);
t6 = t1006 - t1233 / 0.2e1 + t813 * t766 + t787 * t770 + t843;
t84 = -t514 * t563 + t1309;
t882 = -t6 * qJD(1) + t84 * qJD(2);
t876 = -t1289 * t748 - t749 * t474;
t873 = -t1172 + t1176;
t872 = t1243 * t961;
t776 = (t1276 + t849) * t699 + (t1253 - t1235 / 0.2e1 + t1275) * t698;
t113 = t766 * t776 - t770 * t936;
t777 = t1239 / 0.2e1 + pkin(5) * t1337 + t790;
t19 = t766 * t777 - t770 * t941 + t921;
t871 = t19 * qJD(1) + t113 * qJD(2);
t798 = t1255 * t50 + t1271 * t929 + t1336 * t283;
t15 = t770 * t895 + t798 + t960;
t178 = -t283 * t699 - t521 * t929;
t870 = qJD(1) * t15 - qJD(2) * t178;
t869 = qJD(2) * t92 + t1353;
t799 = t1256 * t49 + t1262 * t371 + t1337 * t282;
t16 = -t766 * t895 + t799 + t952;
t177 = t282 * t699 + t520 * t929;
t867 = qJD(1) * t16 - qJD(2) * t177;
t39 = (t905 + t1289 * t1244 + t1184 / 0.2e1) * pkin(4) - t55;
t483 = -t1240 * t698 - t1173;
t866 = qJD(1) * t39 - qJD(2) * t483;
t822 = t1254 * t1289 + t838 * t963;
t40 = t1198 / 0.2e1 + (t872 + t474 * t1244 - t1183 / 0.2e1) * pkin(4) + t822 + t1114;
t482 = t1240 * t699 - t698 * t746;
t865 = qJD(1) * t40 - qJD(2) * t482;
t538 = t735 * t689;
t864 = -t96 * qJD(1) - t538 * qJD(2);
t863 = t698 * (qJD(6) + t1065);
t861 = 0.1e1 / 0.2e1 + t1288;
t860 = qJD(2) * t149 + t1353;
t570 = t1124 / 0.2e1;
t152 = t766 * t893 + t570 + t972;
t308 = t861 * t766;
t859 = -t152 * qJD(1) - t308 * qJD(2);
t568 = t1149 / 0.2e1;
t154 = -t770 * t893 + t568 + t971;
t378 = t861 * t770;
t858 = -t154 * qJD(1) + t378 * qJD(2);
t857 = -t196 * qJD(1) - t513 * qJD(2);
t841 = t1258 * t765 + t954;
t263 = t906 + t902 - t841;
t856 = qJD(1) * t263 + t1066;
t812 = -t636 / 0.2e1 + t699 * t1250 + t1142 / 0.2e1;
t264 = t907 - t812;
t855 = qJD(1) * t264 - t1065;
t380 = t673 ^ 2 - t674 ^ 2;
t854 = qJD(1) * t380 - qJD(2) * t321;
t853 = qJD(1) * t321 - qJD(2) * t734;
t710 = t765 ^ 2 + t1170;
t852 = qJD(1) * t710 + t1062;
t851 = t1015 * t1289;
t850 = -t1051 - t1057;
t848 = t1236 / 0.2e1 - t1237 / 0.2e1;
t845 = qJ(3) * t674 / 0.2e1 + t1187 / 0.2e1;
t842 = t1251 * t698 + t1253 * t699;
t837 = -qJD(1) * t55 + t1064 * t699;
t324 = -t1198 / 0.2e1;
t805 = t1335 * t746 + t838 * t964 + t324;
t57 = t805 - t1114;
t836 = -qJD(1) * t57 + t1064 * t698;
t88 = t1344 + t765 * t955 + (t485 / 0.2e1 + t973) * t698;
t835 = qJD(1) * t88 + t1065 * t766;
t87 = t1346 + t765 * t946 + (t484 / 0.2e1 + t572) * t698;
t834 = qJD(1) * t87 - t1060 * t699;
t190 = -t589 / 0.2e1 + (t904 + t605 / 0.2e1) * t768 + t845;
t833 = -qJ(3) * t1059 - qJD(1) * t190;
t786 = qJ(3) * t1259 + t1247 * t579 + t771 * t904;
t192 = t786 - t935;
t832 = qJ(3) * t1061 - qJD(1) * t192;
t829 = qJD(2) * t212 - t993;
t469 = t1247 * t674 + t1259 * t771;
t828 = qJD(2) * t469 + t1069 * t673;
t827 = -qJD(1) * t469 + t1059 * t768;
t826 = -t988 - t1062;
t824 = pkin(5) / 0.2e1 + t849;
t820 = t1263 + t848;
t819 = t891 * t1304;
t818 = qJD(6) * t520 - t699 * t922;
t811 = t534 / 0.2e1 + t842;
t809 = (t1059 + t1069) * t1168;
t164 = t766 * t811 + t770 * t937;
t25 = t766 * t892 + t770 * t942 + t966;
t803 = -qJD(1) * t25 - qJD(2) * t164 - t1054 * t749;
t166 = t766 * t937 - t770 * t811;
t27 = t766 * t942 - t770 * t892 + t965;
t802 = -qJD(1) * t27 - qJD(2) * t166 - t1056 * t749;
t801 = t1074 * t1289 + t1315 + t1351;
t800 = t830 + t1315;
t116 = t766 * t936 + t770 * t776;
t22 = t766 * t941 + t770 * t777 + t920;
t796 = -qJD(1) * t22 - qJD(2) * t116 - t1012 * t766;
t172 = t820 * t766;
t29 = t766 * t901 + t770 * t943 + t1009;
t602 = t824 * t770;
t785 = pkin(5) * t1049 - qJD(1) * t29 - qJD(2) * t172 + qJD(4) * t602;
t174 = t820 * t770;
t31 = t766 * t943 - t770 * t901 + t1008;
t601 = t824 * t766;
t784 = pkin(5) * t1050 - qJD(1) * t31 + qJD(2) * t174 + qJD(4) * t601;
t778 = t1176 / 0.2e1 - t1172 / 0.2e1 + (t1243 * t1256 + t1258 * t767) * pkin(4);
t731 = t766 * t1011;
t725 = qJD(2) * t961;
t724 = qJD(1) * t962;
t723 = qJD(1) * t961;
t721 = t735 * qJD(6);
t720 = t771 * t992;
t718 = qJD(2) * t1000;
t717 = qJD(1) * t1000;
t714 = t739 * qJ(3);
t691 = t739 * t771;
t690 = t739 * t768;
t676 = -t720 - t1053;
t675 = -t719 - t1055;
t638 = t739 * t1166;
t633 = qJD(4) * t961 + t717;
t604 = pkin(5) * t1246 + t1245 * t749 + t770 * t917;
t603 = pkin(5) * t1249 + t1248 * t749 + t766 * t917;
t574 = t717 + (qJD(4) / 0.2e1 + qJD(5) / 0.2e1) * t1166;
t459 = t1193 / 0.2e1;
t455 = t469 * qJD(4);
t413 = t789 * qJD(3);
t410 = t422 * qJD(2);
t409 = t422 * qJD(3);
t406 = t789 * qJD(2);
t403 = t420 * qJD(3);
t401 = t797 * qJD(3);
t379 = t1245 + (t1278 + t689) * t1246;
t322 = 0.2e1 * t902 - t1143;
t311 = t321 * qJD(4);
t309 = t1288 * t766 + t1249;
t268 = -t923 - t405;
t266 = t618 + t906 + t841;
t265 = t907 + t812;
t247 = t1129 / 0.2e1 + t1289 * t1245;
t241 = t1248 * t1289 + t958;
t223 = 0.2e1 * t1346 * t766;
t195 = qJD(2) * t590 + t1015 * t1297;
t193 = t786 + t935;
t191 = t768 * t904 - t1140 / 0.2e1 + t589 / 0.2e1 + t845;
t175 = t1327 + t1127 / 0.2e1 - t848 * t770;
t173 = t1326 - t1152 / 0.2e1 + t848 * t766;
t170 = t171 * qJD(6);
t167 = t1327 + t1128 / 0.2e1 - t842 * t770;
t165 = t1326 - t1153 / 0.2e1 + t842 * t766;
t155 = t474 * t946 + t971 + t957 + t1123 / 0.2e1;
t153 = t474 * t955 + t972 + t947 - t1148 / 0.2e1;
t148 = t823 - t894;
t145 = t1344 * t698 + t766 * t961 + t573 + t967;
t142 = t459 + t807;
t140 = t459 + t808;
t139 = -t891 + t857;
t138 = t889 - t857;
t135 = t1336 * t759 + t1337 * t762 + t474 * t933;
t115 = t1299 + pkin(11) * t521 / 0.2e1 + pkin(5) * t945 + t778 * t770;
t114 = pkin(5) * t955 + pkin(11) * t969 + t766 * t778 - t1298;
t95 = t96 * qJD(6);
t90 = t1255 * t874 + t1257 * t484 + t591 * t956 + t592 * t970 + t1345;
t89 = t1256 * t875 + t1257 * t485 + t591 * t946 + t592 * t968 + t441;
t79 = t572 + t846;
t77 = t572 + t782;
t75 = t568 + t794;
t73 = t568 + t781;
t72 = t573 + t847;
t70 = t573 + t783;
t67 = t570 + t795;
t65 = t570 + t780;
t58 = t805 + t1114;
t42 = pkin(4) * t905 + t1010 * t1289 + t1184 * t1277 + t56;
t41 = t474 * t1010 + t1114 + t324 - t822 + (t1183 / 0.2e1 + t872) * pkin(4);
t38 = t1145 - t996 / 0.2e1 + t815;
t36 = 0.2e1 * t903 - t1146 / 0.2e1 + t862 * t767;
t32 = pkin(11) * t1346 + t1008 + t983 + t1164 / 0.2e1 + t1133 / 0.2e1;
t30 = pkin(11) * t1344 + t1009 + t982 + t1138 / 0.2e1 - t1159 / 0.2e1;
t28 = t474 * t944 + t965 + t983 - t1163 / 0.2e1 + t1135 / 0.2e1;
t26 = t748 * t1344 + t966 + t982 - t1137 / 0.2e1 - t1161 / 0.2e1;
t21 = t920 + t1211 / 0.2e1 + pkin(5) * t1345 + t981 + t1292 * t770;
t20 = t921 - t1210 / 0.2e1 + pkin(5) * t1344 - t1207 / 0.2e1 + t1292 * t766;
t18 = t111 * t968 + t960 + t1134 / 0.2e1 - t798;
t17 = t111 * t969 + t952 - t1160 / 0.2e1 - t799;
t8 = (t1152 - t1326) * t1337 + (-t1138 + t1159) * t1256 + t929 * t1346 + t122 * t968 + pkin(11) * t947 + t1006 + t980 - t843 + t1300;
t7 = (t1127 + t1327) * t1336 + (t1133 + t1164) * t1255 + t929 * t441 + t122 * t970 + pkin(11) * t957 + t1007 + t979 - t844 + t1301;
t4 = t132 * t968 + t1300 - t774 + t792;
t3 = t132 * t970 + t1301 - t775 + t791;
t43 = [0, 0, 0, t718, t688 * qJD(2), t765 * t984, -t765 * t991, 0, -t583 * qJD(2), -t584 * qJD(2), -qJD(2) * t219 + qJD(3) * t999, qJD(2) * t294 - qJD(3) * t1000, -qJD(2) * t293 + qJD(3) * t710, qJD(2) * t209 - qJD(3) * t376 (qJD(4) * t673 + t768 * t991) * t674, qJD(2) * t377 + qJD(4) * t380, qJD(2) * t540 + t673 * t988, qJD(2) * t541 - t674 * t988, t718, qJD(2) * t97 + qJD(3) * t561 + qJD(4) * t189, -qJD(2) * t98 + qJD(3) * t562 - qJD(4) * t188 (-qJD(2) * t592 + t850) * t1289, qJD(2) * t179 + t1015 * t1340, t271 * qJD(2) + t1168 * t850, t270 * qJD(2) - t1168 * t851, t718, qJD(2) * t33 + qJD(3) * t275 + qJD(4) * t47 + qJD(5) * t64, -qJD(2) * t34 - qJD(3) * t274 - qJD(4) * t48 - qJD(5) * t63 (qJD(2) * t485 - qJD(6) * t371 + t770 * t850) * t373, qJD(2) * t123 + qJD(6) * t151 + t1015 * t1328, qJD(2) * t157 + qJD(4) * t131 + qJD(5) * t130 - t1048 * t371, qJD(2) * t156 - qJD(4) * t129 - qJD(5) * t128 - t1048 * t373 (qJD(2) * t591 + t851) * t474, qJD(2) * t13 + qJD(3) * t158 + qJD(4) * t9 + qJD(5) * t11 + qJD(6) * t24, qJD(2) * t14 + qJD(3) * t159 + qJD(4) * t10 + qJD(5) * t12 + qJD(6) * t23; 0, 0, 0, t717, t1018, t638, -t739 * t1168, 0, -t1023 - t1067, -t1022 + t1068, -t1037 + (qJD(2) * t888 + t772 * qJD(3)) * t764, t1033 + t1067, -t1068 + t752 - t1079, t1038 + (-pkin(2) * t683 - qJ(3) * t682) * qJD(2) - t629 * qJD(3), t768 * t809 + t455, -t734 * t991 + t1032 - t311, t771 * t984 + t1072, -t768 * t984 + t1071, t633, t1122 + (-t1167 * t880 + t606 * t768) * qJD(2) - qJD(3) * t673 + t191 * qJD(4), -t1121 + (t764 * t768 * t880 + t606 * t771) * qJD(2) + qJD(3) * t674 + t193 * qJD(4) (t1066 - t1073) * t592 + t1116, t1039 + (t591 * t698 + t592 * t699) * qJD(2) + t1231, -t698 * t984 + t1082 + t1109, -t699 * t984 + t1034 + t1295, t574, t1205 + (-t1166 * t929 + t539 * t699 + t591 * t746) * qJD(2) + t265 * qJD(3) + t41 * qJD(4) + t58 * qJD(5), -t1204 + (-t1166 * t838 - t539 * t698 - t592 * t746) * qJD(2) + t266 * qJD(3) + t42 * qJD(4) + t56 * qJD(5), t142 * qJD(4) + t140 * qJD(5) + t170 + (-t1060 * t698 + t1078) * t485, t1044 - t95 + (t484 * t770 + t1193) * t1066 + t1015 * t1342, t1040 + (-t1124 * t698 + t485 * t699) * qJD(2) + t73 * qJD(4) + t75 * qJD(5) + t145 * qJD(6), t1041 + (t1149 * t698 - t484 * t699) * qJD(2) + t65 * qJD(4) + t67 * qJD(5) + t148 * qJD(6), t1021 + (t1065 + t1074) * t591 + t1117, t1209 + (-t168 * t520 - t282 * t591 + t484 * t929 + t699 * t85) * qJD(2) + t90 * qJD(3) + t3 * qJD(4) + t7 * qJD(5) + t18 * qJD(6), t1206 + (-t168 * t521 - t283 * t591 + t485 * t929 - t699 * t86) * qJD(2) + t89 * qJD(3) + t4 * qJD(4) + t8 * qJD(5) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, -t717, t852, -qJD(2) * t629 - t1077, 0, 0, 0, 0, 0, -qJD(2) * t673 + t1025, qJD(2) * t674 + t1024, 0, 0, 0, 0, 0, qJD(2) * t265 + t1080 + t1109, qJD(2) * t266 - t1081 + t1295, 0, 0, 0, 0, 0, qJD(2) * t90 + qJD(4) * t70 + qJD(5) * t72 + qJD(6) * t155 + t1091, qJD(2) * t89 + qJD(4) * t77 + qJD(5) * t79 + qJD(6) * t153 + t1090; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t828, t854, t887 * t673, -t887 * t674, t725, qJD(2) * t191 - qJD(4) * t306 + t1088, qJD(2) * t193 + qJD(4) * t305 - t1089, t829, t869, -t474 * t887 - t1051 + t410, t322 * qJD(5) - t1289 * t887 + t406, t725, qJD(2) * t41 - qJD(4) * t132 + qJD(5) * t36 + t1227 + t409, qJD(2) * t42 - qJD(4) * t133 + qJD(5) * t38 - t1226 + t413, t142 * qJD(2) + t223 * qJD(5) + t194 - (t1056 + t1078) * t1329, t135 * qJD(5) - t1057 * t735 + t1349, qJD(2) * t73 + qJD(5) * t241 + t1056 * t1289 + t1096 + t1361, qJD(2) * t65 + qJD(5) * t247 + t1054 * t1289 - t1098 + t1360, t801, t1232 + t3 * qJD(2) + t70 * qJD(3) + (t766 * t876 - t1207) * qJD(4) + t20 * qJD(5) + t28 * qJD(6), t1214 + t4 * qJD(2) + t77 * qJD(3) + (t770 * t876 + t1208) * qJD(4) + t21 * qJD(5) + t26 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, t860, t474 * t886 - t1057 + t410, t322 * qJD(4) + t1289 * t886 + t406, t725, qJD(2) * t58 + qJD(4) * t36 - qJD(5) * t122 + t1222 + t409, qJD(2) * t56 + qJD(4) * t38 + qJD(5) * t121 - t1223 + t413, t140 * qJD(2) + t223 * qJD(4) + t194 + (-t1050 - t1078) * t1329, t135 * qJD(4) - t1051 * t735 + t1349, qJD(2) * t75 + qJD(4) * t241 + t1050 * t1289 + t1097 + t1361, qJD(2) * t67 + qJD(4) * t247 + t1049 * t1289 - t1099 + t1360, t800, t1213 + t7 * qJD(2) + t72 * qJD(3) + t20 * qJD(4) + (t766 * t899 - t1210) * qJD(5) + t32 * qJD(6), t1212 + t8 * qJD(2) + t79 * qJD(3) + t21 * qJD(4) + (t770 * t899 + t1211) * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1281, -t1282, qJD(2) * t145 + t1015 * t1350 + t371 * t919, qJD(2) * t148 + t1015 * t1355 + t373 * t919, t195, qJD(2) * t18 + qJD(3) * t155 + qJD(4) * t28 + qJD(5) * t32 - qJD(6) * t50 + t1228, qJD(2) * t17 + qJD(3) * t153 + qJD(4) * t26 + qJD(5) * t30 + qJD(6) * t49 + t1229; 0, 0, 0, -t717, -t1018, -t910, t765 * t992, 0, t1023, t1022, t1037, -t1033, t752 + t1079, qJ(3) * t752 - t1038, -t674 * t719 + t455, -t311 - t1032, -t768 * t988 - t1072, -t771 * t988 - t1071, -t633, qJD(4) * t190 + t752 * t768 - t1122, qJD(4) * t192 + t752 * t771 + t1121, t1073 * t592 + t1116, -t1039 + t1231, -t1082 - t1108, -t1034 - t1294, -t574, -qJD(3) * t264 - qJD(4) * t40 + qJD(5) * t57 - t1205, -qJD(3) * t263 - qJD(4) * t39 + qJD(5) * t55 + t1204, qJD(4) * t143 + qJD(5) * t141 - t1078 * t485 + t170, t1015 * t1343 - t1044 - t95, qJD(4) * t74 + qJD(5) * t76 + qJD(6) * t146 - t1040, qJD(4) * t66 + qJD(5) * t68 + qJD(6) * t147 - t1041, -t1074 * t591 - t1021 + t1117, -qJD(3) * t87 - qJD(4) * t1 - qJD(5) * t5 - qJD(6) * t15 - t1209, -qJD(3) * t88 - qJD(4) * t2 - qJD(5) * t6 - qJD(6) * t16 - t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t768 * t1053, t734 * qJD(4), 0, 0, 0, qJ(3) * t1053 + qJD(3) * t768, -qJ(3) * t1055 + qJD(3) * t771, t890, -t1015 * t1014, 0, 0, 0, qJD(4) * t482 - t684 * t746 + t1058, -qJD(3) * t698 + qJD(4) * t483 - qJD(5) * t1173, -t689 * t738 + t762 * t890, -t538 * qJD(6) - t699 * t819, t1015 * t417 + t698 * t987, -t1015 * t416 + t698 * t986, -t890, qJD(4) * t81 + qJD(5) * t83 + qJD(6) * t178 + t1058 * t770, qJD(4) * t82 + qJD(5) * t84 + qJD(6) * t177 - t1058 * t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t739, t714, 0, 0, 0, 0, 0, t690, t691, 0, 0, 0, 0, 0, -t855, -t856, 0, 0, 0, 0, 0, qJD(6) * t379 - t834, qJD(6) * t309 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t827, -t853, t675, t676, t724, -t1052 * t768 - t833, -t1052 * t771 - t832, t926, t1284, t268, t1314, t724, -t1305 - t865, t1307 - t866, t912 + t1093, t1363, t915 + t1219, t914 + t1221, t1356 (t766 * t873 - t1298) * qJD(4) + t114 * qJD(5) + t167 * qJD(6) + t885 (t770 * t873 + t1299) * qJD(4) + t115 * qJD(5) + t165 * qJD(6) + t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t927, t1285, t268, t1314, t724, -t1305 - t836, t1307 - t837, t912 + t1094, t1363, t915 + t1218, t914 + t1220, t1356, t114 * qJD(4) + (t766 * t898 - t1298) * qJD(5) + t175 * qJD(6) + t883, t115 * qJD(4) + (t770 * t898 + t1299) * qJD(5) + t173 * qJD(6) + t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, t1304 * t889 + t864, t766 * t863 + t1043, t770 * t863 + t1042, -t1070 + t1101, qJD(3) * t379 + qJD(4) * t167 + qJD(5) * t175 - qJD(6) * t283 - t870, qJD(3) * t309 + qJD(4) * t165 + qJD(5) * t173 + qJD(6) * t282 - t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t910, t717, -t852, -qJ(3) * t1062 + t1077, 0, 0, 0, 0, 0, t768 * t826 - t1025, t771 * t826 - t1024, 0, 0, 0, 0, 0, qJD(2) * t264 - t1080 - t1108, qJD(2) * t263 + t1081 - t1294, 0, 0, 0, 0, 0, qJD(2) * t87 + qJD(4) * t69 + qJD(5) * t71 + qJD(6) * t154 - t1091, qJD(2) * t88 + qJD(4) * t78 + qJD(5) * t80 + qJD(6) * t152 - t1090; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t739, -t714, 0, 0, 0, 0, 0, -t690, -t691, 0, 0, 0, 0, 0, t855, t856, 0, 0, 0, 0, 0, -qJD(6) * t378 + t834, qJD(6) * t308 + t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t675, t676, 0, 0, 0, 0, 0, t268, t1314, 0, 0, 0, 0, 0, t818 + t1180, t916 + t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t1314, 0, 0, 0, 0, 0, t818 + t1171, t916 + t1216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1015 * t520 - t858 - t986, t1015 * t521 - t859 + t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t828, -t854 (-qJD(1) * t673 + t1061) * t1168, t809, t725, -qJD(2) * t190 + t768 * t989 - t1088, -qJD(2) * t192 + t771 * t989 + t1089, -t829, -t869, t1311, qJD(5) * t468 + t1308, t725, qJD(2) * t40 + qJD(5) * t35 - t1227 + t403, qJD(2) * t39 + qJD(5) * t37 + t1226 + t401, -qJD(2) * t143 - qJD(5) * t224 + t1312, t1348, -qJD(2) * t74 - qJD(5) * t236 - t1096 + t1359, -qJD(2) * t66 - qJD(5) * t242 - qJD(6) * t239 + t1098, -t801, qJD(2) * t1 - qJD(3) * t69 + qJD(5) * t19 + qJD(6) * t27 - t1232, qJD(2) * t2 - qJD(3) * t78 + qJD(5) * t22 + qJD(6) * t25 - t1214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827, t853, t719, t720, t723, t833, t832, -t926, -t1284, t405, t1293, t723, t865, t866, -t1093 + t1107, t1358, t1106 - t1219, t1110 - t1221, -t1356, qJD(5) * t113 + qJD(6) * t166 - t885, qJD(5) * t116 + qJD(6) * t164 - t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t719, t720, 0, 0, 0, 0, 0, t405, t1293, 0, 0, 0, 0, 0, -t1180, -t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1011, -pkin(4) * t931, t738, t721, 0, 0, 0, -t1011 * t770 + t1047 * t749, t749 * t754 + t731; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1029, 0, -t900 + t1203, t1202 + (-t932 - t931) * pkin(4), t738 - t1087, t721, -t1036, -t1035, 0, t603 * qJD(6) - t770 * t900 + t871, qJD(6) * t604 + t731 - t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t93, t1364, t924 - t1085, -t1306, qJD(5) * t603 - t748 * t754 - t802, qJD(5) * t604 + t1047 * t748 - t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, -t860, t1311, -qJD(4) * t468 + t1308, t725, -qJD(2) * t57 - qJD(4) * t35 - t1222 + t403, -qJD(2) * t55 - qJD(4) * t37 + t1223 + t401, -qJD(2) * t141 + qJD(4) * t224 + t1312, t1348, -qJD(2) * t76 + qJD(4) * t236 - t1097 + t1359, -qJD(2) * t68 + qJD(4) * t242 + qJD(6) * t237 + t1099, -t800, qJD(2) * t5 - qJD(3) * t71 - qJD(4) * t19 + qJD(6) * t31 - t1213, qJD(2) * t6 - qJD(3) * t80 - qJD(4) * t22 + qJD(6) * t29 - t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t927, -t1285, t405, t1293, t723, t836, t837, -t1094 + t1107, t1358, t1106 - t1218, t1110 - t1220, -t1356, -qJD(4) * t113 - qJD(6) * t174 - t883, -qJD(4) * t116 + qJD(6) * t172 - t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t1293, 0, 0, 0, 0, 0, -t1171, -t1216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1029, 0, t1012 - t1203, pkin(4) * t932 - t1202, t738 + t1087, t721, t1036, t1035, 0, -qJD(6) * t601 + t1012 * t770 - t871, -qJD(6) * t602 + t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t738, t721, 0, 0, 0, -pkin(5) * t1047, -pkin(5) * t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t93, t1364, t924 + t1086, -t1306, -pkin(11) * t754 - t784, pkin(11) * t1047 - t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1281, t1282, -qJD(2) * t146 - t1015 * t1357 + t1074 * t371, -qJD(2) * t147 + qJD(4) * t239 - qJD(5) * t237 + t1074 * t373, t195, qJD(2) * t15 - qJD(3) * t154 - qJD(4) * t27 - qJD(5) * t31 - t1228, qJD(2) * t16 - qJD(3) * t152 - qJD(4) * t25 - qJD(5) * t29 - t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1280, -t819 - t864, -t1015 * t518 - t766 * t985 - t1043, t1015 * t514 - t770 * t985 - t1042, t1070 + t1101, qJD(3) * t378 - qJD(4) * t166 + qJD(5) * t174 + t870, -qJD(3) * t308 - qJD(4) * t164 - qJD(5) * t172 + t867; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, -t93, t1365, t1027 + t1085, t1306, qJD(5) * t601 + t802, qJD(5) * t602 + t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, -t93, t1365, t1027 - t1086, t1306, t784, t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
