% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 00:47
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR12_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 00:44:37
% EndTime: 2019-05-07 00:45:11
% DurationCPUTime: 14.95s
% Computational Cost: add. (82033->591), mult. (183688->844), div. (0->0), fcn. (140125->12), ass. (0->371)
t321 = cos(pkin(6));
t316 = qJD(1) * t321 + qJD(2);
t324 = sin(qJ(4));
t329 = cos(qJ(4));
t320 = sin(pkin(6));
t330 = cos(qJ(2));
t392 = qJD(1) * t330;
t374 = t320 * t392;
t274 = -t324 * t316 - t329 * t374;
t275 = t316 * t329 - t324 * t374;
t323 = sin(qJ(5));
t328 = cos(qJ(5));
t253 = t274 * t323 + t275 * t328;
t250 = t253 ^ 2;
t325 = sin(qJ(2));
t393 = qJD(1) * t325;
t375 = t320 * t393;
t305 = qJD(4) + t375;
t297 = qJD(5) + t305;
t436 = t297 ^ 2;
t223 = -t250 - t436;
t251 = -t328 * t274 + t275 * t323;
t210 = t253 * t251;
t285 = (qJD(2) * t392 + qJDD(1) * t325) * t320;
t336 = qJDD(4) + t285;
t277 = qJDD(5) + t336;
t198 = t210 + t277;
t416 = t198 * t323;
t168 = t223 * t328 - t416;
t332 = qJD(1) ^ 2;
t326 = sin(qJ(1));
t331 = cos(qJ(1));
t372 = t326 * g(1) - g(2) * t331;
t430 = pkin(8) * t320;
t279 = qJDD(1) * pkin(1) + t332 * t430 + t372;
t282 = pkin(3) * t375 - pkin(9) * t316;
t307 = qJD(2) * t375;
t387 = qJDD(1) * t330;
t286 = t320 * t387 - t307;
t373 = qJD(3) * t393;
t306 = -0.2e1 * t320 * t373;
t319 = t320 ^ 2;
t400 = t319 * t332;
t435 = t330 ^ 2;
t314 = t435 * t400;
t292 = t316 * pkin(2) * t375;
t429 = g(3) * t321;
t344 = -qJ(3) * t285 + t292 - t429;
t401 = t316 * t330;
t382 = qJ(3) * t401;
t433 = -pkin(2) - pkin(9);
t183 = -pkin(3) * t314 + t306 + t433 * t286 + (-t279 + (-t282 * t325 - t382) * qJD(1)) * t320 + t344;
t397 = t325 * qJ(3);
t360 = -pkin(2) * t330 - t397;
t394 = qJD(1) * t320;
t281 = t360 * t394;
t312 = t316 ^ 2;
t315 = qJDD(1) * t321 + qJDD(2);
t363 = g(1) * t331 + g(2) * t326;
t280 = -pkin(1) * t332 + qJDD(1) * t430 - t363;
t408 = t279 * t321;
t367 = t280 * t325 - t330 * t408;
t340 = -t315 * pkin(2) - t312 * qJ(3) + qJDD(3) + t367;
t428 = g(3) * t330;
t302 = t330 * t325 * t400;
t439 = -t315 - t302;
t185 = pkin(3) * t285 + t439 * pkin(9) + (t428 + (-pkin(3) * t401 + t281 * t325) * qJD(1)) * t320 + t340;
t141 = t183 * t329 + t185 * t324;
t366 = t329 * t286 + t315 * t324;
t240 = -qJD(4) * t275 - t366;
t257 = pkin(4) * t305 - pkin(10) * t275;
t272 = t274 ^ 2;
t117 = -pkin(4) * t272 + pkin(10) * t240 - t257 * t305 + t141;
t140 = t324 * t183 - t329 * t185;
t349 = -t286 * t324 + t315 * t329;
t241 = qJD(4) * t274 + t349;
t264 = t305 * t274;
t220 = t241 - t264;
t255 = t274 * t275;
t441 = t255 + t336;
t458 = -t441 * pkin(4) + pkin(10) * t220 + t140;
t70 = t328 * t117 - t458 * t323;
t459 = pkin(4) * t168 - t70;
t322 = sin(qJ(6));
t368 = -t328 * t240 + t241 * t323;
t180 = -qJD(5) * t253 - t368;
t179 = qJDD(6) - t180;
t327 = cos(qJ(6));
t228 = t253 * t322 - t327 * t297;
t230 = t253 * t327 + t297 * t322;
t189 = t230 * t228;
t443 = t179 - t189;
t456 = t322 * t443;
t442 = -t210 + t277;
t455 = t323 * t442;
t454 = t324 * t441;
t453 = t327 * t443;
t452 = t328 * t442;
t451 = t329 * t441;
t449 = pkin(3) + pkin(8);
t289 = -t314 - t312;
t448 = pkin(1) * (t289 * t325 - t330 * t439);
t313 = t325 ^ 2 * t400;
t269 = -t313 - t312;
t284 = -t302 + t315;
t447 = pkin(1) * (t269 * t330 - t284 * t325);
t407 = t439 * t325;
t446 = pkin(8) * (-t289 * t330 - t407);
t406 = t284 * t330;
t445 = pkin(8) * (t269 * t325 + t406);
t206 = pkin(5) * t251 - pkin(11) * t253;
t56 = -pkin(5) * t436 + t277 * pkin(11) - t251 * t206 + t70;
t310 = t312 * pkin(2);
t399 = t320 * t325;
t362 = -g(3) * t399 + t325 * t408;
t335 = (t281 * t394 + t280) * t330 - t310 + t362;
t424 = qJ(3) * t315;
t434 = 0.2e1 * qJD(3);
t182 = t424 + t286 * pkin(3) - pkin(9) * t314 + (t434 + t282) * t316 + t335;
t145 = -t240 * pkin(4) - t272 * pkin(10) + t257 * t275 + t182;
t356 = t240 * t323 + t241 * t328;
t181 = -qJD(5) * t251 + t356;
t237 = t297 * t251;
t161 = t181 - t237;
t89 = -t161 * pkin(11) + (t253 * t297 - t180) * pkin(5) + t145;
t37 = t322 * t56 - t327 * t89;
t38 = t322 * t89 + t327 * t56;
t23 = t322 * t37 + t327 * t38;
t444 = t319 * (qJD(1) * t316 - t321 * t332);
t294 = t316 * t374;
t440 = t285 + t294;
t248 = qJD(6) + t251;
t369 = t181 * t322 - t327 * t277;
t134 = (qJD(6) - t248) * t230 + t369;
t376 = t316 * t393;
t262 = -t307 + (t376 + t387) * t320;
t438 = t320 * ((t314 - t312) * t325 + t406) + t262 * t321;
t261 = -t294 + t285;
t437 = t320 * ((-t313 + t312) * t330 - t407) + t261 * t321;
t225 = t228 ^ 2;
t226 = t230 ^ 2;
t247 = t248 ^ 2;
t249 = t251 ^ 2;
t273 = t275 ^ 2;
t300 = t305 ^ 2;
t432 = pkin(2) * t286;
t431 = pkin(5) * t323;
t69 = t117 * t323 + t328 * t458;
t55 = -t277 * pkin(5) - pkin(11) * t436 + t206 * t253 + t69;
t427 = -pkin(5) * t55 + pkin(11) * t23;
t52 = t322 * t55;
t41 = t323 * t70 - t328 * t69;
t426 = t324 * t41;
t53 = t327 * t55;
t425 = t329 * t41;
t143 = t179 + t189;
t423 = t143 * t322;
t422 = t143 * t327;
t421 = t145 * t323;
t420 = t145 * t328;
t338 = (-qJD(4) + t305) * t275 - t366;
t175 = -t220 * t329 + t324 * t338;
t419 = t175 * t325;
t418 = t182 * t324;
t417 = t182 * t329;
t415 = t198 * t328;
t235 = -t255 + t336;
t414 = t235 * t324;
t413 = t235 * t329;
t412 = t248 * t322;
t411 = t248 * t327;
t405 = t297 * t323;
t404 = t297 * t328;
t403 = t305 * t324;
t402 = t305 * t329;
t398 = t320 * t330;
t291 = -t313 - t314;
t395 = pkin(1) * (-t291 * t320 + (-t261 * t330 + t262 * t325) * t321) + (t261 * t325 + t262 * t330) * t430;
t391 = qJD(4) + t305;
t390 = qJD(5) + t297;
t388 = qJD(6) + t248;
t17 = t23 * t323 - t328 * t55;
t386 = pkin(4) * t17 + t427;
t385 = t316 * t434;
t174 = -t247 - t225;
t100 = t174 * t327 - t456;
t135 = -t230 * t388 - t369;
t384 = pkin(5) * t135 + pkin(11) * t100 - t53;
t178 = -t226 - t247;
t107 = -t178 * t322 - t422;
t357 = -t181 * t327 - t277 * t322;
t139 = t228 * t388 + t357;
t383 = pkin(5) * t139 + pkin(11) * t107 + t52;
t381 = t323 * t189;
t380 = t328 * t189;
t379 = t325 * t210;
t378 = t325 * t255;
t377 = -pkin(5) * t328 - pkin(4);
t42 = t323 * t69 + t328 * t70;
t166 = t225 + t226;
t147 = -qJD(6) * t228 - t357;
t200 = t248 * t228;
t138 = t147 + t200;
t86 = -t134 * t327 + t138 * t322;
t371 = pkin(5) * t166 + pkin(11) * t86 + t23;
t72 = t100 * t323 + t135 * t328;
t370 = pkin(4) * t72 + t384;
t75 = t107 * t323 + t139 * t328;
t365 = pkin(4) * t75 + t383;
t61 = t166 * t328 + t323 * t86;
t364 = pkin(4) * t61 + t371;
t201 = -t436 - t249;
t152 = t201 * t323 + t452;
t361 = pkin(4) * t152 - t69;
t265 = t279 * t320 + t429;
t22 = t322 * t38 - t327 * t37;
t91 = -t140 * t329 + t141 * t324;
t358 = t140 * t324 + t141 * t329;
t347 = pkin(1) - t360;
t346 = -qJD(1) * t382 - t279;
t343 = t281 * t393 + t428;
t245 = g(3) * t398 + t367;
t246 = t280 * t330 + t362;
t342 = (t245 * t325 + t246 * t330) * t320;
t341 = t330 * t433 - pkin(1) - t397;
t339 = (-qJD(5) + t297) * t253 - t368;
t337 = -t344 + t432;
t212 = t320 * t343 + t340;
t334 = t335 + t385;
t298 = t321 * t315;
t290 = t313 - t314;
t263 = -t307 + (-t376 + t387) * t320;
t259 = -t273 + t300;
t258 = t272 - t300;
t256 = -t273 - t300;
t254 = t273 - t272;
t244 = -t300 - t272;
t243 = (t285 * t320 + t330 * t444) * t325;
t242 = (t286 * t320 - t325 * t444) * t330;
t233 = -t250 + t436;
t232 = t249 - t436;
t231 = -t272 - t273;
t227 = -pkin(2) * t261 + qJ(3) * t262;
t224 = (t274 * t329 + t275 * t324) * t305;
t221 = t274 * t391 + t349;
t219 = t241 + t264;
t216 = t275 * t391 + t366;
t215 = t241 * t329 - t275 * t403;
t214 = -t240 * t324 - t274 * t402;
t213 = t321 * t290 + (t325 * t263 + t330 * t440) * t320;
t209 = t250 - t249;
t208 = t258 * t329 - t414;
t207 = -t259 * t324 + t451;
t204 = t334 + t424;
t202 = t256 * t329 - t414;
t196 = -t226 + t247;
t195 = t225 - t247;
t193 = t244 * t324 + t451;
t192 = (-t251 * t328 + t253 * t323) * t297;
t191 = (-t251 * t323 - t253 * t328) * t297;
t190 = pkin(2) * t439 - qJ(3) * t289 + t212;
t188 = t226 - t225;
t187 = -pkin(2) * t269 + (t284 + t315) * qJ(3) + t334;
t186 = -t249 - t250;
t176 = -t216 * t329 - t219 * t324;
t173 = t232 * t328 - t416;
t172 = -t233 * t323 + t452;
t171 = t232 * t323 + t415;
t170 = t233 * t328 + t455;
t169 = -t223 * t323 - t415;
t164 = -pkin(2) * t212 + qJ(3) * t204;
t163 = -t251 * t390 + t356;
t162 = t181 + t237;
t158 = t253 * t390 + t368;
t157 = t181 * t328 - t253 * t405;
t156 = t181 * t323 + t253 * t404;
t155 = -t180 * t323 + t251 * t404;
t154 = t180 * t328 + t251 * t405;
t153 = t201 * t328 - t455;
t150 = (-t228 * t327 + t230 * t322) * t248;
t149 = (-t228 * t322 - t230 * t327) * t248;
t148 = -t191 * t324 + t192 * t329;
t146 = -qJD(6) * t230 - t369;
t137 = t147 - t200;
t133 = -t171 * t324 + t173 * t329;
t132 = -t170 * t324 + t172 * t329;
t129 = t147 * t327 - t230 * t412;
t128 = t147 * t322 + t230 * t411;
t127 = -t146 * t322 + t228 * t411;
t126 = t146 * t327 + t228 * t412;
t124 = t168 * t329 + t169 * t324;
t123 = t150 * t328 + t179 * t323;
t122 = t150 * t323 - t179 * t328;
t121 = t195 * t327 - t423;
t120 = -t196 * t322 + t453;
t119 = t195 * t322 + t422;
t118 = t196 * t327 + t456;
t116 = t162 * t323 + t328 * t339;
t115 = -t158 * t328 - t161 * t323;
t114 = -t162 * t328 + t323 * t339;
t113 = -t158 * t323 + t161 * t328;
t112 = pkin(4) * t114;
t110 = qJ(3) * t221 + t202 * t433 + t417;
t109 = -t156 * t324 + t157 * t329;
t108 = -t154 * t324 + t155 * t329;
t106 = t178 * t327 - t423;
t104 = t152 * t329 + t153 * t324;
t102 = qJ(3) * t216 + t193 * t433 + t418;
t101 = -pkin(10) * t168 + t420;
t99 = t174 * t322 + t453;
t97 = t129 * t328 + t381;
t96 = t127 * t328 - t381;
t95 = t129 * t323 - t380;
t94 = t127 * t323 + t380;
t93 = -pkin(10) * t152 + t421;
t90 = -pkin(4) * t163 + pkin(10) * t169 + t421;
t87 = -pkin(4) * t158 + pkin(10) * t153 - t420;
t85 = t135 * t327 - t137 * t322;
t84 = -t134 * t322 - t138 * t327;
t83 = t135 * t322 + t137 * t327;
t81 = t121 * t328 - t134 * t323;
t80 = t120 * t328 + t138 * t323;
t79 = t121 * t323 + t134 * t328;
t78 = t120 * t323 - t138 * t328;
t77 = -t122 * t324 + t123 * t329;
t76 = t107 * t328 - t139 * t323;
t73 = t100 * t328 - t135 * t323;
t67 = t188 * t323 + t328 * t85;
t66 = -t188 * t328 + t323 * t85;
t64 = -t113 * t324 + t115 * t329;
t63 = t114 * t329 + t116 * t324;
t62 = -t166 * t323 + t328 * t86;
t59 = qJ(3) * t231 + t175 * t433 - t91;
t58 = -t324 * t95 + t329 * t97;
t57 = -t324 * t94 + t329 * t96;
t51 = qJ(3) * t182 + t433 * t91;
t50 = -pkin(11) * t106 + t53;
t49 = -pkin(11) * t99 + t52;
t48 = -t324 * t79 + t329 * t81;
t47 = -t324 * t78 + t329 * t80;
t45 = t324 * t76 + t329 * t75;
t43 = t324 * t73 + t329 * t72;
t40 = pkin(4) * t41;
t39 = -t324 * t66 + t329 * t67;
t33 = t324 * t62 + t329 * t61;
t32 = -pkin(4) * t145 + pkin(10) * t42;
t31 = qJ(3) * t163 + t101 * t329 + t124 * t433 - t324 * t90;
t30 = -pkin(10) * t114 - t41;
t29 = -pkin(5) * t106 + t38;
t28 = -pkin(5) * t99 + t37;
t27 = -pkin(4) * t186 + pkin(10) * t116 + t42;
t26 = qJ(3) * t158 + t104 * t433 - t324 * t87 + t329 * t93;
t24 = t324 * t42 + t425;
t20 = -pkin(11) * t84 - t22;
t19 = -pkin(10) * t75 - t29 * t323 + t328 * t50;
t18 = t23 * t328 + t323 * t55;
t15 = -pkin(10) * t72 - t28 * t323 + t328 * t49;
t14 = -pkin(4) * t106 + pkin(10) * t76 + t29 * t328 + t323 * t50;
t13 = -pkin(4) * t99 + pkin(10) * t73 + t28 * t328 + t323 * t49;
t12 = -pkin(10) * t61 + t20 * t328 + t431 * t84;
t11 = qJ(3) * t186 - t27 * t324 + t30 * t329 + t433 * t63;
t10 = pkin(10) * t62 + t20 * t323 + t377 * t84;
t8 = t17 * t329 + t18 * t324;
t7 = -pkin(10) * t425 + qJ(3) * t145 + t24 * t433 - t32 * t324;
t6 = -pkin(10) * t17 + (-pkin(11) * t328 + t431) * t22;
t5 = qJ(3) * t106 - t14 * t324 + t19 * t329 + t433 * t45;
t4 = qJ(3) * t99 - t13 * t324 + t15 * t329 + t43 * t433;
t3 = pkin(10) * t18 + (-pkin(11) * t323 + t377) * t22;
t2 = qJ(3) * t84 - t10 * t324 + t12 * t329 + t33 * t433;
t1 = qJ(3) * t22 - t3 * t324 + t329 * t6 + t433 * t8;
t9 = [0, 0, 0, 0, 0, qJDD(1), t372, t363, 0, 0, t243, t213, t437, t242, t438, t298, (-t245 + t448) * t321 + (pkin(1) * t263 + t330 * t265 - t446) * t320, (-t246 + t447) * t321 + (-pkin(1) * t440 - t325 * t265 - t445) * t320, t342 + t395, pkin(1) * (t265 * t320 + (-t245 * t330 + t246 * t325) * t321) + pkin(8) * t342, t298, -t437, -t438, t243, t213, t242, t321 * t227 + (t325 * (-qJ(3) * t291 + t340) + t330 * (-pkin(2) * t291 + t246 - t310 + t385 + t424) + (qJD(1) * t281 * t435 + t325 * t343) * t320) * t320 + t395, (t190 - t448) * t321 + (t330 * (t306 - t337) + t446 + t346 * t398 - t347 * t263) * t320, (t187 - t447) * t321 + (t325 * t337 + t445 + (-t346 + 0.2e1 * t373) * t399 + t347 * t440) * t320, (t164 + pkin(1) * (t204 * t325 - t212 * t330)) * t321 + (pkin(8) * (t204 * t330 + t212 * t325) - t347 * (-qJ(3) * t440 - t265 + t292 + t306 - t432)) * t320, t321 * t215 + (-t378 + t330 * (-t241 * t324 - t275 * t402)) * t320, t321 * t176 + (t325 * t254 + t330 * (t216 * t324 - t219 * t329)) * t320, t321 * t207 + (t325 * t220 + t330 * (-t259 * t329 - t454)) * t320, t321 * t214 + (t378 + t330 * (-t240 * t329 + t274 * t403)) * t320, t321 * t208 + (t325 * t338 + t330 * (-t258 * t324 - t413)) * t320, t336 * t399 + t321 * t224 + (-t274 * t324 + t275 * t329) * t305 * t398, (t102 + pkin(1) * (-t193 * t330 + t216 * t325)) * t321 + (t325 * (pkin(3) * t193 - t140) + t330 * (pkin(3) * t216 + t417) + pkin(8) * (t193 * t325 + t216 * t330) + t341 * (t244 * t329 - t454)) * t320, (t110 + pkin(1) * (-t202 * t330 + t221 * t325)) * t321 + (t325 * (pkin(3) * t202 - t141) + t330 * (pkin(3) * t221 - t418) + pkin(8) * (t202 * t325 + t221 * t330) + t341 * (-t256 * t324 - t413)) * t320, (t59 + pkin(1) * (-t175 * t330 + t231 * t325)) * t321 + (pkin(3) * t419 + t330 * (pkin(3) * t231 - t358) + pkin(8) * (t231 * t330 + t419) + t341 * (t220 * t324 + t329 * t338)) * t320, (t51 + pkin(1) * (t182 * t325 - t330 * t91)) * t321 + (t341 * t358 + t449 * (t182 * t330 + t325 * t91)) * t320, t321 * t109 + (t379 + t330 * (-t156 * t329 - t157 * t324)) * t320, t321 * t64 + (t325 * t209 + t330 * (-t113 * t329 - t115 * t324)) * t320, t321 * t132 + (t325 * t162 + t330 * (-t170 * t329 - t172 * t324)) * t320, t321 * t108 + (-t379 + t330 * (-t154 * t329 - t155 * t324)) * t320, t321 * t133 + (t325 * t339 + t330 * (-t171 * t329 - t173 * t324)) * t320, t321 * t148 + (t325 * t277 + t330 * (-t191 * t329 - t192 * t324)) * t320, (t26 + pkin(1) * (-t104 * t330 + t158 * t325)) * t321 + (t325 * (pkin(3) * t104 + t361) + t330 * (pkin(3) * t158 - t324 * t93 - t329 * t87) + pkin(8) * (t104 * t325 + t158 * t330) + t341 * (-t152 * t324 + t153 * t329)) * t320, (t341 * (-t168 * t324 + t169 * t329) + (-t101 * t324 + t163 * t449 - t329 * t90) * t330 + (t449 * t124 + t459) * t325) * t320 + (t31 + pkin(1) * (-t124 * t330 + t163 * t325)) * t321, (t11 + pkin(1) * (t186 * t325 - t330 * t63)) * t321 + (t325 * (pkin(3) * t63 + t112) + t330 * (pkin(3) * t186 - t27 * t329 - t30 * t324) + pkin(8) * (t186 * t330 + t325 * t63) + t341 * (-t114 * t324 + t116 * t329)) * t320, (t7 + pkin(1) * (t145 * t325 - t24 * t330)) * t321 + (t325 * (pkin(3) * t24 + t40) + t330 * (pkin(3) * t145 + pkin(10) * t426 - t32 * t329) + pkin(8) * (t145 * t330 + t24 * t325) + t341 * (t329 * t42 - t426)) * t320, t321 * t58 + (t325 * t128 + t330 * (-t324 * t97 - t329 * t95)) * t320, t321 * t39 + (t325 * t83 + t330 * (-t324 * t67 - t329 * t66)) * t320, t321 * t47 + (t325 * t118 + t330 * (-t324 * t80 - t329 * t78)) * t320, t321 * t57 + (t325 * t126 + t330 * (-t324 * t96 - t329 * t94)) * t320, t321 * t48 + (t325 * t119 + t330 * (-t324 * t81 - t329 * t79)) * t320, t321 * t77 + (t325 * t149 + t330 * (-t122 * t329 - t123 * t324)) * t320, (t4 + pkin(1) * (t325 * t99 - t330 * t43)) * t321 + (t325 * (pkin(3) * t43 + t370) + t330 * (pkin(3) * t99 - t13 * t329 - t15 * t324) + pkin(8) * (t325 * t43 + t330 * t99) + t341 * (-t324 * t72 + t329 * t73)) * t320, (t5 + pkin(1) * (t106 * t325 - t330 * t45)) * t321 + (t325 * (pkin(3) * t45 + t365) + t330 * (pkin(3) * t106 - t14 * t329 - t19 * t324) + pkin(8) * (t106 * t330 + t325 * t45) + t341 * (-t324 * t75 + t329 * t76)) * t320, (t2 + pkin(1) * (t325 * t84 - t33 * t330)) * t321 + (t325 * (pkin(3) * t33 + t364) + t330 * (pkin(3) * t84 - t10 * t329 - t12 * t324) + pkin(8) * (t325 * t33 + t330 * t84) + t341 * (-t324 * t61 + t329 * t62)) * t320, (t1 + pkin(1) * (t22 * t325 - t330 * t8)) * t321 + (t325 * (pkin(3) * t8 + t386) + t330 * (pkin(3) * t22 - t3 * t329 - t324 * t6) + pkin(8) * (t22 * t330 + t325 * t8) + t341 * (-t17 * t324 + t18 * t329)) * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t290, t261, t302, t262, t315, -t245, -t246, 0, 0, t315, -t261, -t262, -t302, t290, t302, t227, t190, t187, t164, t215, t176, t207, t214, t208, t224, t102, t110, t59, t51, t109, t64, t132, t108, t133, t148, t26, t31, t11, t7, t58, t39, t47, t57, t48, t77, t4, t5, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, -t439, t269, t212, 0, 0, 0, 0, 0, 0, t193, t202, t175, t91, 0, 0, 0, 0, 0, 0, t104, t124, t63, t24, 0, 0, 0, 0, 0, 0, t43, t45, t33, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, t254, t220, t255, t338, t336, -t140, -t141, 0, 0, t210, t209, t162, -t210, t339, t277, t361, t459, t112, t40, t128, t83, t118, t126, t119, t149, t370, t365, t364, t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, t209, t162, -t210, t339, t277, -t69, -t70, 0, 0, t128, t83, t118, t126, t119, t149, t384, t383, t371, t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t188, t138, -t189, -t134, t179, -t37, -t38, 0, 0;];
tauJ_reg  = t9;
