% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR12_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR12_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 14:41:52
% EndTime: 2019-03-09 14:42:26
% DurationCPUTime: 19.92s
% Computational Cost: add. (25030->907), mult. (58847->1169), div. (0->0), fcn. (45085->14), ass. (0->402)
t351 = sin(qJ(2));
t346 = sin(pkin(6));
t491 = qJD(1) * t346;
t458 = t351 * t491;
t314 = pkin(2) * t458;
t355 = cos(qJ(2));
t536 = qJ(3) * t355;
t413 = pkin(9) * t351 - t536;
t200 = t413 * t491 + t314;
t457 = t355 * t491;
t310 = pkin(8) * t457;
t347 = cos(pkin(6));
t490 = qJD(1) * t347;
t468 = pkin(1) * t490;
t244 = t351 * t468 + t310;
t204 = pkin(3) * t457 + t244;
t350 = sin(qJ(4));
t354 = cos(qJ(4));
t119 = -t200 * t350 + t354 * t204;
t487 = qJD(4) * t350;
t506 = t350 * t351;
t358 = -pkin(2) - pkin(9);
t554 = pkin(10) - t358;
t612 = t554 * t487 - (pkin(4) * t355 - pkin(10) * t506) * t491 - t119;
t120 = t354 * t200 + t350 * t204;
t277 = t554 * t354;
t428 = t354 * t458;
t611 = -pkin(10) * t428 - qJD(4) * t277 - t120;
t353 = cos(qJ(6));
t481 = qJD(6) * t353;
t320 = qJD(2) + t490;
t427 = t350 * t457;
t217 = t320 * t354 - t427;
t349 = sin(qJ(5));
t382 = t350 * t320 + t354 * t457;
t565 = cos(qJ(5));
t135 = t217 * t349 + t382 * t565;
t600 = t135 * t353;
t610 = t481 + t600;
t266 = t349 * t354 + t350 * t565;
t473 = qJD(4) + qJD(5);
t498 = (t458 + t473) * t266;
t454 = t565 * qJD(5);
t485 = qJD(5) * t349;
t507 = t349 * t350;
t497 = -t349 * t487 - t350 * t485 + (qJD(4) * t565 + t454) * t354 + t428 * t565 - t458 * t507;
t312 = t355 * t468;
t580 = qJD(3) - t312;
t348 = sin(qJ(6));
t292 = qJD(4) + t458;
t401 = qJD(5) + t292;
t379 = t353 * t401;
t398 = t217 * t565 - t349 * t382;
t110 = t348 * t398 - t379;
t112 = t348 * t401 + t353 * t398;
t477 = qJD(1) * qJD(2);
t451 = t355 * t477;
t475 = qJDD(1) * t351;
t389 = t451 + t475;
t375 = t389 * t346;
t236 = qJDD(4) + t375;
t364 = qJDD(5) + t236;
t482 = qJD(6) * t348;
t476 = qJDD(1) * t347;
t316 = qJDD(2) + t476;
t452 = t351 * t477;
t426 = t346 * t452;
t474 = qJDD(1) * t355;
t598 = -t346 * t474 + t426;
t122 = qJD(4) * t382 - t354 * t316 - t350 * t598;
t123 = -qJD(4) * t427 + t316 * t350 + (qJD(4) * t320 - t598) * t354;
t63 = t122 * t565 + t349 * t123 + t217 * t485 + t382 * t454;
t35 = -qJD(6) * t379 - t348 * t364 + t353 * t63 + t398 * t482;
t484 = qJD(6) * t112;
t36 = -t348 * t63 - t353 * t364 + t484;
t596 = qJD(6) + t135;
t607 = t596 * t348;
t609 = -t110 * t610 - t112 * t607 - t348 * t36 - t35 * t353;
t443 = t349 * t122 - t565 * t123;
t64 = qJD(5) * t398 - t443;
t59 = qJDD(6) + t64;
t56 = t353 * t59;
t608 = t110 * t398 - t596 * t607 + t56;
t276 = t554 * t350;
t397 = t349 * t276 - t277 * t565;
t540 = qJD(5) * t397 + t349 * t612 + t611 * t565;
t334 = pkin(4) * t354 + pkin(3);
t486 = qJD(4) * t354;
t495 = pkin(4) * t486 - (-pkin(8) - t334) * t458 + t580;
t32 = t35 * t348;
t605 = t112 * t610 - t32;
t55 = t348 * t59;
t604 = -t112 * t398 + t596 * t610 + t55;
t352 = sin(qJ(1));
t501 = t352 * t355;
t356 = cos(qJ(1));
t502 = t351 * t356;
t258 = t347 * t501 + t502;
t345 = qJ(4) + qJ(5);
t338 = sin(t345);
t339 = cos(t345);
t511 = t346 * t352;
t169 = -t258 * t339 + t338 * t511;
t510 = t346 * t355;
t227 = -t338 * t347 - t339 * t510;
t500 = t355 * t356;
t504 = t351 * t352;
t256 = -t347 * t500 + t504;
t509 = t346 * t356;
t399 = t256 * t339 + t338 * t509;
t387 = g(1) * t169 - g(2) * t399 - g(3) * t227;
t287 = pkin(2) * t426;
t488 = qJD(3) * t351;
t371 = qJD(2) * t413 - t488;
t449 = -qJ(3) * t351 - pkin(1);
t388 = t355 * t358 + t449;
t105 = t287 + (qJD(1) * t371 + qJDD(1) * t388) * t346;
t566 = pkin(3) + pkin(8);
t142 = t320 * t358 + t566 * t458 + t580;
t166 = t388 * t491;
t93 = t142 * t350 + t166 * t354;
t512 = t346 * t351;
t322 = pkin(8) * t512;
t467 = pkin(1) * qJD(2) * t347;
t431 = qJD(1) * t467;
t465 = pkin(1) * t476;
t429 = qJD(2) * t310 + qJDD(1) * t322 + t351 * t431 - t355 * t465;
t410 = qJDD(3) + t429;
t99 = pkin(3) * t375 + t316 * t358 + t410;
t44 = -qJD(4) * t93 - t350 * t105 + t354 * t99;
t25 = pkin(4) * t236 + pkin(10) * t122 + t44;
t390 = -t354 * t105 - t142 * t486 + t166 * t487 - t350 * t99;
t29 = -pkin(10) * t123 - t390;
t447 = -t565 * t25 + t349 * t29;
t83 = -pkin(10) * t382 + t93;
t466 = t565 * t83;
t92 = t354 * t142 - t166 * t350;
t82 = -pkin(10) * t217 + t92;
t78 = pkin(4) * t292 + t82;
t46 = t349 * t78 + t466;
t10 = -qJD(5) * t46 - t447;
t8 = -pkin(5) * t364 - t10;
t377 = t387 - t8;
t544 = t349 * t83;
t45 = t565 * t78 - t544;
t41 = -pkin(5) * t401 - t45;
t603 = t135 * t41;
t602 = t497 * pkin(5) + pkin(11) * t498 + t495;
t601 = -pkin(11) * t457 + t540;
t529 = t135 * t398;
t599 = -t92 * t292 - t390;
t505 = t350 * t356;
t522 = t256 * t354;
t597 = t346 * t505 + t522;
t595 = -t135 ^ 2 + t398 ^ 2;
t86 = pkin(5) * t398 + pkin(11) * t135;
t594 = t135 * t401 - t63;
t297 = t320 * qJ(3);
t158 = t297 + t204;
t121 = pkin(4) * t382 + t158;
t170 = t258 * t338 + t339 * t511;
t228 = -t338 * t510 + t339 * t347;
t400 = -t256 * t338 + t339 * t509;
t386 = -g(1) * t170 + g(2) * t400 - g(3) * t228;
t9 = t349 * t25 + t565 * t29 + t78 * t454 - t83 * t485;
t593 = t121 * t135 - t386 - t9;
t342 = t346 ^ 2;
t591 = 0.2e1 * t342;
t42 = pkin(11) * t401 + t46;
t69 = pkin(5) * t135 - pkin(11) * t398 + t121;
t18 = t348 * t69 + t353 * t42;
t295 = t316 * qJ(3);
t296 = t320 * qJD(3);
t430 = pkin(8) * t598 - t351 * t465 - t355 * t431;
t124 = -t295 - t296 + t430;
t101 = -pkin(3) * t598 - t124;
t74 = pkin(4) * t123 + t101;
t16 = pkin(5) * t64 + pkin(11) * t63 + t74;
t7 = pkin(11) * t364 + t9;
t3 = -qJD(6) * t18 + t353 * t16 - t348 * t7;
t589 = -t18 * t596 - t3;
t193 = -t276 * t565 - t349 * t277;
t538 = qJD(5) * t193 + t611 * t349 - t565 * t612;
t588 = t93 * t292 + t44;
t587 = t596 * t398;
t257 = t347 * t502 + t501;
t259 = -t347 * t504 + t500;
t418 = -g(1) * t259 - g(2) * t257;
t470 = g(3) * t512;
t376 = -t418 + t470;
t586 = t376 * t339;
t528 = t382 * t292;
t585 = t122 - t528;
t526 = t217 * t292;
t584 = -t123 + t526;
t563 = pkin(1) * t355;
t459 = -pkin(2) - t563;
t181 = pkin(3) * t512 + t322 + (-pkin(9) + t459) * t347;
t494 = pkin(2) * t510 + qJ(3) * t512;
t198 = (-pkin(9) * t355 - pkin(1)) * t346 - t494;
t114 = t350 * t181 + t354 * t198;
t340 = t350 * pkin(4);
t357 = -pkin(10) - pkin(9);
t583 = t256 * t357 + t257 * t340;
t582 = t258 * t357 + t259 * t340;
t411 = t348 * t42 - t353 * t69;
t581 = t18 * t353 + t348 * t411;
t564 = pkin(1) * t351;
t328 = t347 * t564;
t261 = pkin(8) * t510 + t328;
t246 = qJD(2) * t261;
t407 = -pkin(2) * t355 + t449;
t210 = t407 * t491;
t579 = t210 * t458 + qJDD(3);
t578 = t398 * t411 + t41 * t482;
t576 = t18 * t398 - t348 * t377 + t41 * t481;
t574 = -t121 * t398 + t387 - t447;
t573 = t135 * t497 + t266 * t64;
t572 = t158 * t292 + t236 * t358;
t571 = t292 * t398 + t443;
t570 = t257 * t353 + t348 * t400;
t569 = -t257 * t348 + t353 * t400;
t267 = t354 * t565 - t507;
t568 = -t267 * t63 - t398 * t498;
t113 = t354 * t181 - t198 * t350;
t254 = t347 * t354 - t350 * t510;
t471 = pkin(4) * t512;
t90 = -pkin(10) * t254 + t113 + t471;
t253 = t347 * t350 + t354 * t510;
t95 = -pkin(10) * t253 + t114;
t551 = t349 * t90 + t565 * t95;
t456 = qJD(2) * t512;
t190 = qJD(4) * t253 - t350 * t456;
t489 = qJD(2) * t355;
t455 = t346 * t489;
t309 = pkin(2) * t456;
t161 = t346 * t371 + t309;
t205 = (t510 * t566 + t328) * qJD(2);
t73 = -qJD(4) * t114 - t161 * t350 + t354 * t205;
t60 = pkin(4) * t455 + pkin(10) * t190 + t73;
t191 = qJD(4) * t254 - t354 * t456;
t72 = t354 * t161 + t181 * t486 - t198 * t487 + t350 * t205;
t68 = -pkin(10) * t191 + t72;
t14 = -qJD(5) * t551 - t349 * t68 + t565 * t60;
t2 = -t411 * qJD(6) + t348 * t16 + t353 * t7;
t405 = g(1) * t258 + g(2) * t256 - g(3) * t510;
t567 = t10 * t267 + t266 * t9 - t45 * t498 + t46 * t497 - t405;
t562 = pkin(2) * t316;
t556 = g(3) * t253;
t555 = g(3) * t346;
t1 = t2 * t353;
t330 = qJ(3) + t340;
t162 = pkin(5) * t266 - pkin(11) * t267 + t330;
t108 = t162 * t353 - t193 * t348;
t553 = qJD(6) * t108 + t348 * t602 + t353 * t601;
t109 = t162 * t348 + t193 * t353;
t552 = -qJD(6) * t109 - t348 * t601 + t353 * t602;
t550 = t411 * t596;
t34 = t36 * t353;
t539 = pkin(5) * t457 + t538;
t535 = t110 * t348;
t534 = t112 * t110;
t533 = t112 * t353;
t527 = t217 * t382;
t525 = t236 * t350;
t523 = t256 * t350;
t519 = t258 * t350;
t518 = t258 * t354;
t517 = t267 * t348;
t516 = t267 * t353;
t515 = t338 * t348;
t514 = t338 * t353;
t513 = t342 * qJD(1) ^ 2;
t508 = t348 * t351;
t503 = t351 * t353;
t499 = t355 * t357;
t496 = t597 * pkin(4);
t493 = t356 * pkin(1) + pkin(8) * t511;
t343 = t351 ^ 2;
t344 = t355 ^ 2;
t492 = t343 - t344;
t483 = qJD(6) * t596;
t432 = t566 * t512;
t480 = qJD(1) * t432 + t580;
t243 = pkin(8) * t458 - t312;
t479 = qJD(3) + t243;
t472 = qJDD(4) + qJDD(5);
t464 = t355 * t513;
t463 = t346 * t508;
t462 = t350 * t511;
t299 = t346 * t503;
t460 = t350 * t471 + t494;
t225 = -t347 * qJ(3) - t261;
t453 = pkin(1) * t591;
t448 = -pkin(1) * t352 + pkin(8) * t509;
t247 = t256 * pkin(2);
t445 = qJ(3) * t257 - t247;
t249 = t258 * pkin(2);
t444 = qJ(3) * t259 - t249;
t442 = t320 * t353 + t348 * t497;
t441 = -t320 * t348 + t353 * t497;
t440 = t348 * t498 - t353 * t457;
t439 = t348 * t457 + t353 * t498;
t438 = -t354 * t509 + t523;
t435 = qJD(1) * (qJD(2) - t320);
t434 = t316 + t476;
t433 = pkin(4) * t454;
t197 = pkin(3) * t510 - t225;
t425 = t351 * t451;
t47 = t349 * t82 + t466;
t424 = pkin(4) * t485 - t47;
t421 = pkin(5) * t338 - pkin(11) * t339;
t420 = g(1) * t399 + g(2) * t169;
t419 = -g(1) * t256 + g(2) * t258;
t417 = g(1) * t257 - g(2) * t259;
t416 = g(1) * t356 + g(2) * t352;
t332 = pkin(4) * t349 + pkin(11);
t412 = -t332 * t59 + t603;
t52 = pkin(11) * t512 + t551;
t143 = pkin(4) * t253 + t197;
t149 = t253 * t565 + t254 * t349;
t150 = -t349 * t253 + t254 * t565;
t76 = pkin(5) * t149 - pkin(11) * t150 + t143;
t27 = t348 * t76 + t353 * t52;
t26 = -t348 * t52 + t353 * t76;
t226 = -pkin(1) * t346 - t494;
t409 = qJD(2) * (-qJD(1) * t226 - t210);
t408 = qJD(2) * (t320 + t490);
t313 = t355 * t467;
t245 = -pkin(8) * t456 + t313;
t404 = t259 * pkin(2) + qJ(3) * t258 + t493;
t53 = -t349 * t95 + t565 * t90;
t132 = t150 * t353 + t463;
t13 = t349 * t60 + t90 * t454 - t485 * t95 + t565 * t68;
t396 = t292 ^ 2;
t393 = -qJ(3) * t489 - t488;
t128 = t287 + (qJD(1) * t393 + qJDD(1) * t407) * t346;
t207 = t346 * t393 + t309;
t391 = qJD(1) * t207 + qJDD(1) * t226 + t128;
t384 = -t257 * pkin(2) - qJ(3) * t256 + t448;
t383 = t246 * t320 - t417;
t381 = t267 * t481 - t440;
t380 = -t267 * t482 - t439;
t378 = t1 + t386;
t336 = t347 * qJD(3);
t180 = -qJD(2) * t432 + t313 + t336;
t374 = t418 - t430;
t373 = pkin(4) * t519 - t259 * t357 + t334 * t511 + t404;
t372 = t405 - t429;
t168 = (t355 * t435 + t475) * t346;
t370 = -pkin(4) * t523 + t257 * t357 + t334 * t509 + t384;
t117 = pkin(4) * t191 + t180;
t369 = t267 * t364 - t401 * t498;
t365 = -t472 - t375;
t363 = t1 - t3 * t348 + (-t18 * t348 + t353 * t411) * qJD(6);
t362 = t244 * t320 + t372;
t361 = g(1) * t462 + t556;
t360 = -qJD(4) * t292 * t358 + t101 - t376;
t333 = -pkin(4) * t565 - pkin(5);
t280 = t351 * t464;
t273 = t316 * t347;
t260 = t347 * t563 - t322;
t252 = t492 * t513;
t242 = -qJ(3) * t457 + t314;
t235 = t347 * t459 + t322;
t233 = pkin(4) * t518;
t224 = (qJDD(1) * t344 - 0.2e1 * t425) * t342;
t223 = (qJDD(1) * t343 + 0.2e1 * t425) * t342;
t218 = t227 * pkin(5);
t215 = t354 * t236;
t214 = -t245 - t336;
t199 = -t297 - t244;
t196 = -pkin(2) * t320 + t479;
t195 = t354 * t511 + t519;
t194 = -t462 + t518;
t178 = (t351 * t474 - t477 * t492) * t591;
t167 = (t351 * t435 - t474) * t346;
t165 = t399 * pkin(5);
t164 = t169 * pkin(5);
t140 = t410 - t562;
t131 = t150 * t348 - t299;
t130 = (t351 * t434 + t355 * t408) * t346;
t129 = (t351 * t408 - t355 * t434) * t346;
t127 = t170 * t353 + t259 * t348;
t126 = -t170 * t348 + t259 * t353;
t85 = qJD(5) * t150 - t349 * t190 + t191 * t565;
t84 = t190 * t565 + t349 * t191 + t253 * t454 + t254 * t485;
t75 = pkin(4) * t217 + t86;
t62 = qJD(6) * t132 - t348 * t84 - t353 * t455;
t61 = -qJD(6) * t299 + t150 * t482 - t348 * t455 + t353 * t84;
t51 = -pkin(5) * t512 - t53;
t48 = t565 * t82 - t544;
t30 = pkin(5) * t85 + pkin(11) * t84 + t117;
t22 = t348 * t86 + t353 * t45;
t21 = -t348 * t45 + t353 * t86;
t20 = t348 * t75 + t353 * t48;
t19 = -t348 * t48 + t353 * t75;
t12 = -pkin(5) * t455 - t14;
t11 = pkin(11) * t455 + t13;
t5 = -qJD(6) * t27 - t11 * t348 + t30 * t353;
t4 = qJD(6) * t26 + t11 * t353 + t30 * t348;
t6 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t352 - g(2) * t356, t416, 0, 0, t223, t178, t130, t224, -t129, t273, -t429 * t347 + t260 * t316 + (-t452 + t474) * t453 - t383, -t245 * t320 - t261 * t316 + t347 * t430 - t389 * t453 + t419 ((qJD(2) * t243 + qJDD(1) * t261 - t430 + (-qJD(2) * t260 + t245) * qJD(1)) * t355 + (-qJD(2) * t244 - qJDD(1) * t260 + t429) * t351 - t416) * t346, t342 * qJDD(1) * pkin(1) ^ 2 - g(1) * t448 - g(2) * t493 + t243 * t246 + t244 * t245 - t260 * t429 - t261 * t430, t273, -t130, t129, t223, t178, t224 ((qJD(2) * t196 - qJDD(1) * t225 - t124 + (qJD(2) * t235 - t214) * qJD(1)) * t355 + (qJD(2) * t199 + qJDD(1) * t235 + t140 + (qJD(2) * t225 + t246) * qJD(1)) * t351 - t416) * t346, t140 * t347 + t235 * t316 + (t351 * t409 + t355 * t391) * t346 + t383, -t124 * t347 - t214 * t320 - t225 * t316 + (-t351 * t391 + t355 * t409) * t346 - t419, -g(1) * t384 - g(2) * t404 + t124 * t225 + t128 * t226 + t140 * t235 + t196 * t246 + t199 * t214 + t210 * t207, -t122 * t254 - t190 * t217, t122 * t253 - t123 * t254 + t190 * t382 - t191 * t217, -t190 * t292 + t236 * t254 + (-t122 * t351 + t217 * t489) * t346, t123 * t253 + t191 * t382, -t191 * t292 - t236 * t253 + (-t123 * t351 - t382 * t489) * t346 (t236 * t351 + t292 * t489) * t346, t73 * t292 + t113 * t236 + t180 * t382 + t197 * t123 + t101 * t253 + t158 * t191 + g(1) * t438 - g(2) * t195 + (t351 * t44 + t489 * t92) * t346, g(1) * t522 - g(2) * t194 + t101 * t254 - t114 * t236 - t197 * t122 - t158 * t190 + t180 * t217 - t72 * t292 + (g(1) * t505 + t351 * t390 - t489 * t93) * t346, t113 * t122 - t114 * t123 + t190 * t92 - t191 * t93 - t217 * t73 + t253 * t390 - t254 * t44 - t382 * t72 + t417, -t390 * t114 + t93 * t72 + t44 * t113 + t92 * t73 + t101 * t197 + t158 * t180 - g(1) * (pkin(3) * t509 - pkin(9) * t257 + t384) - g(2) * (pkin(3) * t511 + pkin(9) * t259 + t404) -t150 * t63 - t398 * t84, t135 * t84 + t149 * t63 - t150 * t64 - t398 * t85, -t84 * t473 + t150 * t472 + ((qJD(1) * t150 + t398) * t489 + (-qJD(1) * t84 + qJDD(1) * t150 - t63) * t351) * t346, t135 * t85 + t149 * t64, -t85 * t473 - t149 * t472 + ((-qJD(1) * t149 - t135) * t489 + (-qJD(1) * t85 - qJDD(1) * t149 - t64) * t351) * t346 (t473 * t489 + ((0.2e1 * t451 + t475) * t346 + t472) * t351) * t346, t14 * t473 + t53 * t472 + t117 * t135 + t143 * t64 + t74 * t149 + t121 * t85 - g(1) * t400 - g(2) * t170 + ((qJD(1) * t53 + t45) * t489 + (qJD(1) * t14 + qJDD(1) * t53 + t10) * t351) * t346, -t13 * t473 - t551 * t472 + t117 * t398 - t143 * t63 + t74 * t150 - t121 * t84 + ((-qJD(1) * t551 - t46) * t489 + (-qJD(1) * t13 - qJDD(1) * t551 - t9) * t351) * t346 + t420, -t10 * t150 - t13 * t135 - t14 * t398 - t149 * t9 + t45 * t84 - t46 * t85 + t53 * t63 - t551 * t64 + t417, -g(1) * t370 - g(2) * t373 + t10 * t53 + t121 * t117 + t46 * t13 + t45 * t14 + t74 * t143 + t551 * t9, -t112 * t61 - t132 * t35, t110 * t61 - t112 * t62 + t131 * t35 - t132 * t36, t112 * t85 + t132 * t59 - t149 * t35 - t596 * t61, t110 * t62 + t131 * t36, -t110 * t85 - t131 * t59 - t149 * t36 - t596 * t62, t149 * t59 + t596 * t85, -g(1) * t569 - g(2) * t127 + t12 * t110 + t8 * t131 + t3 * t149 + t26 * t59 + t51 * t36 + t41 * t62 - t411 * t85 + t5 * t596, g(1) * t570 - g(2) * t126 + t12 * t112 + t8 * t132 - t2 * t149 - t18 * t85 - t27 * t59 - t51 * t35 - t4 * t596 - t41 * t61, -t110 * t4 - t112 * t5 - t131 * t2 - t132 * t3 - t18 * t62 + t26 * t35 - t27 * t36 - t411 * t61 - t420, t2 * t27 + t18 * t4 + t3 * t26 - t411 * t5 + t8 * t51 + t41 * t12 - g(1) * (pkin(5) * t400 + pkin(11) * t399 + t370) - g(2) * (pkin(5) * t170 + pkin(11) * t169 + t373); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t252, t168, t280, -t167, t316, t513 * t564 + t362, pkin(1) * t464 - t243 * t320 - t374 + t470, 0, 0, t316, -t168, t167, -t280, t252, t280 ((-pkin(2) * t351 + t536) * qJDD(1) + ((-qJ(3) * qJD(2) - t199 - t244) * t351 + (-pkin(2) * qJD(2) - t196 + t479) * t355) * qJD(1)) * t346, -t242 * t457 - t362 - 0.2e1 * t562 + t579, 0.2e1 * t295 + t296 + t479 * t320 + (-g(3) * t351 + (t210 * t355 + t242 * t351) * qJD(1)) * t346 + t374, -t140 * pkin(2) - g(1) * t444 - g(2) * t445 - g(3) * t494 - t124 * qJ(3) - t196 * t244 - t199 * t479 - t210 * t242, -t122 * t354 - t350 * t526 (-t123 - t526) * t354 + (t122 + t528) * t350, -t292 * t487 + t215 + (-t217 * t355 - t292 * t506) * t491, t123 * t350 + t354 * t528, -t292 * t486 - t525 + (-t292 * t351 * t354 + t355 * t382) * t491, -t292 * t457, qJ(3) * t123 - t119 * t292 + t360 * t350 + t354 * t572 + t382 * t480 - t92 * t457, -qJ(3) * t122 + t120 * t292 + t480 * t217 - t350 * t572 + t360 * t354 + t93 * t457, t119 * t217 + t120 * t382 + (-t93 * t458 + t122 * t358 - t44 + (-t358 * t382 - t93) * qJD(4)) * t354 + (t92 * t458 - t123 * t358 + t390 + (t217 * t358 + t92) * qJD(4)) * t350 + t405, t101 * qJ(3) - t93 * t120 - t92 * t119 - g(1) * (-pkin(9) * t258 + t444) - g(2) * (-pkin(9) * t256 + t445) - g(3) * (pkin(9) * t510 + t494) + t480 * t158 + (-t390 * t350 + t44 * t354 + (-t350 * t92 + t354 * t93) * qJD(4)) * t358, t568, t135 * t498 + t266 * t63 - t267 * t64 - t398 * t497, -t398 * t457 + t369, t573, -t266 * t472 + (-t266 * t475 + ((-qJD(2) * t266 + t135) * t355 - t497 * t351) * qJD(1)) * t346 - t497 * t473, -t401 * t457, t397 * t472 + t330 * t64 + t74 * t266 + (t397 * t475 + ((qJD(2) * t397 - t45) * t355 - t538 * t351) * qJD(1)) * t346 + t495 * t135 + t497 * t121 - t376 * t338 - t538 * t473, -t193 * t472 - t330 * t63 + t74 * t267 + (-t193 * t475 + ((-qJD(2) * t193 + t46) * t355 - t540 * t351) * qJD(1)) * t346 + t495 * t398 - t498 * t121 - t586 - t540 * t473, -t135 * t540 - t193 * t64 + t397 * t63 + t398 * t538 - t567, t9 * t193 + t10 * t397 + t74 * t330 - g(1) * (t444 + t582) - g(2) * (t445 + t583) - g(3) * (-t346 * t499 + t460) + t540 * t46 - t538 * t45 + t495 * t121, t112 * t380 - t35 * t516, t440 * t112 + t439 * t110 + (t32 - t34 + (-t533 + t535) * qJD(6)) * t267, t112 * t497 - t266 * t35 + t380 * t596 + t516 * t59, t110 * t381 + t36 * t517, -t110 * t497 - t266 * t36 - t381 * t596 - t517 * t59, t266 * t59 + t497 * t596, t108 * t59 + t3 * t266 - t397 * t36 + t8 * t517 - g(1) * (-t258 * t348 + t259 * t514) - g(2) * (-t256 * t348 + t257 * t514) - (t338 * t503 + t348 * t355) * t555 - t497 * t411 + t552 * t596 + t539 * t110 + t381 * t41, -t109 * t59 - t2 * t266 + t397 * t35 + t8 * t516 - g(1) * (-t258 * t353 - t259 * t515) - g(2) * (-t256 * t353 - t257 * t515) - (-t338 * t508 + t353 * t355) * t555 - t497 * t18 - t553 * t596 + t539 * t112 + t380 * t41, t108 * t35 - t109 * t36 + t440 * t18 - t439 * t411 - t552 * t112 - t553 * t110 + t586 + (-qJD(6) * t581 - t2 * t348 - t3 * t353) * t267, t2 * t109 + t3 * t108 - t8 * t397 - g(1) * (-t249 + t582) - g(2) * (-t247 + t583) - g(3) * t460 + t539 * t41 - (t351 * t421 - t499) * t555 + t553 * t18 - t552 * t411 + t418 * (qJ(3) + t421); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, t280 + t316, -t320 ^ 2 - t343 * t513, t199 * t320 - t372 - t562 + t579, 0, 0, 0, 0, 0, 0, -t320 * t382 - t350 * t396 + t215, -t217 * t320 - t354 * t396 - t525, t350 * t584 + t354 * t585, -t158 * t320 + t350 * t599 + t588 * t354 - t405, 0, 0, 0, 0, 0, 0, -t320 * t135 + t369, t266 * t365 - t320 * t398 - t401 * t497, -t568 - t573, -t121 * t320 + t567, 0, 0, 0, 0, 0, 0, -t266 * t55 - t267 * t36 + t498 * t110 + (-t266 * t481 - t442) * t596, -t266 * t56 + t267 * t35 + t498 * t112 + (t266 * t482 - t441) * t596, t442 * t112 - t441 * t110 + (-t32 - t34 + (t533 + t535) * qJD(6)) * t266, t18 * t441 + t266 * t363 - t267 * t8 + t41 * t498 + t411 * t442 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, t217 ^ 2 - t382 ^ 2, -t585, -t527, t584, t236, -g(1) * t194 - g(2) * t597 - t158 * t217 + t556 + t588, g(1) * t195 + g(2) * t438 + g(3) * t254 + t158 * t382 - t599, 0, 0, t529, t595, t594, -t529, t571, t364, t47 * t292 + (t47 - t46) * qJD(5) + (-t217 * t135 + t364 * t565 - t401 * t485) * pkin(4) + t574, t48 * t401 + (-t217 * t398 + t349 * t365 - t401 * t454) * pkin(4) + t593, t46 * t398 + t48 * t135 - t45 * t135 - t47 * t398 + (t565 * t63 - t349 * t64 + (-t135 * t565 + t349 * t398) * qJD(5)) * pkin(4), -t46 * t48 + t45 * t47 - g(1) * t233 - g(2) * t496 + (t9 * t349 + t10 * t565 - t121 * t217 + (-t45 * t349 + t46 * t565) * qJD(5) + t361) * pkin(4), t605, t609, t604, t535 * t596 - t34, t608, -t587, -t19 * t596 + t333 * t36 + t424 * t110 + (-t433 * t596 + t412) * t348 + (-t332 * t483 + t377) * t353 + t578, -t333 * t35 + t412 * t353 + t424 * t112 + (t332 * t482 - t353 * t433 + t20) * t596 + t576, t20 * t110 + t19 * t112 + (-t110 * t433 + t135 * t411 - t332 * t36 + (t112 * t332 + t411) * qJD(6)) * t353 + (t112 * t433 - t135 * t18 - t332 * t35 - t3 + (t110 * t332 - t18) * qJD(6)) * t348 + t378, t8 * t333 - t18 * t20 + t411 * t19 - t41 * t47 - g(1) * (pkin(11) * t170 - t164 + t233) - g(2) * (-pkin(11) * t400 + t165 + t496) - g(3) * (pkin(11) * t228 + t218) + t363 * t332 + ((t41 * t349 + t565 * t581) * qJD(5) + t361) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, t595, t594, -t529, t571, t364, t292 * t46 + t574, t401 * t45 + t593, 0, 0, t605, t609, t604, t110 * t607 - t34, t608, -t587, -pkin(5) * t36 - t110 * t46 - t596 * t21 + (-pkin(11) * t59 + t603) * t348 + (-pkin(11) * t483 + t377) * t353 + t578, t41 * t600 + pkin(5) * t35 - t112 * t46 + t596 * t22 + (t482 * t596 - t56) * pkin(11) + t576, t110 * t22 + t112 * t21 + (t550 + (-t36 + t484) * pkin(11)) * t353 + ((qJD(6) * t110 - t35) * pkin(11) + t589) * t348 + t378, -t8 * pkin(5) + g(1) * t164 - g(2) * t165 - g(3) * t218 + t411 * t21 - t18 * t22 - t41 * t46 + (t363 + t386) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, -t110 ^ 2 + t112 ^ 2, t110 * t596 - t35, -t534, t112 * t596 - t36, t59, -t41 * t112 - g(1) * t126 - g(2) * t570 - g(3) * (-t228 * t348 + t299) - t589, -t550 + t41 * t110 + g(1) * t127 - g(2) * t569 - g(3) * (-t228 * t353 - t463) - t2, 0, 0;];
tau_reg  = t6;
