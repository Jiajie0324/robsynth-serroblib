% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:17:51
% EndTime: 2019-03-09 18:18:39
% DurationCPUTime: 31.02s
% Computational Cost: add. (23828->874), mult. (49818->1084), div. (0->0), fcn. (59476->10), ass. (0->704)
t1005 = sin(qJ(3));
t1006 = cos(qJ(3));
t645 = sin(qJ(2));
t648 = cos(qJ(2));
t603 = t1005 * t645 - t1006 * t648;
t1017 = t603 / 0.2e1;
t642 = cos(pkin(11));
t995 = t642 * pkin(4);
t631 = -pkin(3) - t995;
t647 = cos(qJ(5));
t884 = t647 * t642;
t641 = sin(pkin(11));
t644 = sin(qJ(5));
t903 = t644 * t641;
t600 = -t884 + t903;
t998 = t600 * pkin(5);
t541 = t631 + t998;
t1023 = -t541 / 0.2e1;
t646 = cos(qJ(6));
t885 = t647 * t641;
t902 = t644 * t642;
t602 = t885 + t902;
t632 = t1005 * t648;
t633 = t1006 * t645;
t605 = -t632 - t633;
t686 = t602 * t605;
t1070 = t646 * t686;
t561 = t605 * t903;
t460 = -t605 * t884 + t561;
t643 = sin(qJ(6));
t908 = t643 * t460;
t290 = -t1070 + t908;
t617 = (-pkin(9) - qJ(4)) * t641;
t638 = t642 * pkin(9);
t926 = t642 * qJ(4);
t618 = t638 + t926;
t514 = -t647 * t617 + t618 * t644;
t589 = t602 * pkin(10);
t1056 = -t514 - t589;
t1098 = t646 * t1056;
t1001 = pkin(10) * t600;
t515 = t617 * t644 + t618 * t647;
t437 = t515 - t1001;
t914 = t643 * t437;
t719 = t1098 - t914;
t658 = t1017 * t719 - t1023 * t290;
t455 = t602 * t603;
t448 = t455 * pkin(10);
t505 = -pkin(3) * t605 + qJ(4) * t603;
t1034 = -pkin(8) - pkin(7);
t620 = t1034 * t645;
t621 = t1034 * t648;
t732 = -t1005 * t621 - t1006 * t620;
t940 = t732 * t641;
t341 = t642 * t505 + t940;
t740 = -t605 * pkin(4) + t603 * t638;
t269 = t341 + t740;
t267 = t644 * t269;
t506 = t642 * t732;
t342 = t641 * t505 - t506;
t486 = t641 * t603;
t816 = pkin(9) * t486;
t300 = t816 + t342;
t296 = t647 * t300;
t875 = t296 + t267;
t136 = t448 + t875;
t896 = t646 * t136;
t780 = -t896 / 0.2e1;
t268 = t647 * t269;
t904 = t644 * t300;
t758 = t268 - t904;
t459 = t600 * t603;
t590 = t605 * pkin(5);
t763 = -pkin(10) * t459 - t590;
t116 = t758 + t763;
t924 = t643 * t116;
t700 = -t924 / 0.2e1 + t780;
t1139 = t658 + t700;
t813 = t1006 * pkin(2);
t635 = -t813 - pkin(3);
t616 = t635 - t995;
t526 = t616 + t998;
t1025 = -t526 / 0.2e1;
t812 = t1005 * pkin(2);
t630 = t812 + qJ(4);
t587 = (-pkin(9) - t630) * t641;
t588 = t642 * t630 + t638;
t465 = -t647 * t587 + t588 * t644;
t1057 = -t465 - t589;
t466 = t587 * t644 + t588 * t647;
t384 = t466 - t1001;
t721 = t646 * t1057 - t643 * t384;
t660 = t1017 * t721 - t1025 * t290;
t1004 = pkin(2) * t645;
t493 = t505 + t1004;
t339 = t642 * t493 + t940;
t266 = t339 + t740;
t260 = t644 * t266;
t340 = t641 * t493 - t506;
t286 = t816 + t340;
t276 = t647 * t286;
t876 = t276 + t260;
t123 = t448 + t876;
t897 = t646 * t123;
t781 = -t897 / 0.2e1;
t261 = t647 * t266;
t905 = t644 * t286;
t759 = t261 - t905;
t100 = t759 + t763;
t925 = t643 * t100;
t701 = -t925 / 0.2e1 + t781;
t1138 = t660 + t701;
t1124 = qJD(5) + qJD(6);
t1018 = -t603 / 0.2e1;
t228 = t643 * t1057 + t646 * t384;
t1137 = t1018 * t228;
t271 = t643 * t1056 + t646 * t437;
t1136 = t1018 * t271;
t489 = t646 * t600 + t643 * t602;
t1112 = t489 * t603;
t888 = t646 * t459;
t912 = t643 * t455;
t697 = t912 / 0.2e1 + t888 / 0.2e1;
t1122 = t1112 / 0.2e1 + t697;
t1130 = qJD(1) * t1122;
t874 = t1124 * t489;
t1135 = -t1130 - t874;
t817 = qJD(2) + qJD(3);
t1068 = t1122 * t817;
t859 = qJD(1) * t603;
t1134 = t290 * t859 + t1068;
t1133 = t1124 * t228;
t1132 = t1124 * t271;
t1131 = t1124 * t721;
t1123 = -t1112 / 0.2e1 + t697;
t1069 = t1123 * t817;
t1032 = -t1098 / 0.2e1;
t933 = t605 * t641;
t433 = -pkin(4) * t933 + t732;
t298 = -pkin(5) * t686 + t433;
t717 = t600 * t643 - t646 * t602;
t1113 = t298 * t717;
t223 = -t1113 / 0.2e1;
t787 = t1113 / 0.2e1;
t1114 = t298 * t489;
t221 = -t1114 / 0.2e1;
t788 = t1114 / 0.2e1;
t1085 = t489 ^ 2 - t717 ^ 2;
t1129 = t1085 * t817;
t606 = t1005 * t620;
t608 = t1006 * t621;
t869 = -t608 + t606;
t1055 = -pkin(4) * t486 + t869;
t1087 = -t455 * pkin(5) + t1055;
t1128 = t1087 * t489;
t1127 = t1087 * t717;
t1071 = t643 * t686;
t447 = t646 * t460;
t1058 = t447 + t1071;
t1084 = -t1058 ^ 2 + t290 ^ 2;
t1126 = qJD(1) * t1084;
t639 = t641 ^ 2;
t640 = t642 ^ 2;
t1125 = (t640 / 0.2e1 + t639 / 0.2e1) * (qJ(4) + t630);
t445 = t646 * t455;
t909 = t643 * t459;
t289 = -t445 + t909;
t1061 = t869 * t642;
t636 = -pkin(2) * t648 - pkin(1);
t997 = t603 * pkin(3);
t731 = t605 * qJ(4) + t997;
t488 = t636 + t731;
t326 = t641 * t488 + t1061;
t283 = pkin(9) * t933 + t326;
t1062 = t869 * t641;
t325 = t642 * t488 - t1062;
t664 = pkin(4) * t603 + t605 * t638 + t325;
t144 = t647 * t283 + t644 * t664;
t122 = pkin(10) * t686 + t144;
t922 = t643 * t122;
t143 = t283 * t644 - t647 * t664;
t121 = -pkin(10) * t460 - t143;
t996 = t603 * pkin(5);
t97 = t121 + t996;
t93 = t646 * t97;
t50 = -t93 + t922;
t1121 = t1087 * t290 + t298 * t289 + t50 * t605;
t294 = t888 + t912;
t898 = t646 * t122;
t51 = t643 * t97 + t898;
t1120 = t1087 * t1058 + t298 * t294 + t51 * t605;
t1027 = -t1061 / 0.2e1;
t1031 = t1070 / 0.2e1;
t1119 = -t1071 / 0.2e1;
t1118 = t290 * t298;
t1117 = t290 * t489;
t863 = qJD(1) * t1058;
t1115 = t290 * t863;
t1111 = t489 * t817;
t1066 = t817 * t717;
t592 = t633 / 0.2e1 + t632 / 0.2e1;
t858 = qJD(1) * t605;
t790 = t603 * t858;
t414 = -t592 * qJD(5) + t790;
t1028 = t717 / 0.2e1;
t1107 = t1028 * t290;
t1106 = t1055 * t600;
t1105 = t1055 * t602;
t1104 = t1058 * t298;
t1103 = t1058 * t859;
t1102 = t1066 * t489;
t1101 = t489 * qJD(4);
t1064 = t817 * t605;
t374 = t603 * t1064;
t1096 = t717 * qJD(4);
t1030 = t447 / 0.2e1;
t1095 = t1030 + t1071 / 0.2e1;
t1065 = t817 * t602;
t301 = -t561 / 0.2e1 + (-t903 / 0.2e1 + t884) * t605;
t1094 = -t301 * qJD(1) + t1065;
t1060 = t326 * t642 / 0.2e1 - t325 * t641 / 0.2e1;
t1013 = -t608 / 0.2e1;
t1088 = t1013 + t606 / 0.2e1;
t1052 = -t1060 + t1088;
t1093 = qJD(1) * t1052;
t454 = t600 * t605;
t890 = t646 * t454;
t873 = t1119 - t890 / 0.2e1;
t1050 = t873 + t1095;
t1092 = qJD(4) * t1050;
t1091 = qJD(4) * t1052;
t424 = -t908 / 0.2e1;
t913 = t643 * t454;
t1059 = t424 + t913 / 0.2e1 - t1070 / 0.2e1 + t1031;
t1090 = qJD(4) * t1059;
t1051 = t1060 + t1088;
t1089 = t1051 * qJD(4);
t166 = -t873 + t1095;
t1083 = -t166 * qJD(1) + t1066;
t1082 = (-t325 - t1062) * t605;
t1081 = (t326 - t1061) * t605;
t1080 = t1055 * t460 + t144 * t605 + t433 * t459;
t1079 = -t1055 * t686 + t143 * t605 - t433 * t455;
t1019 = t602 / 0.2e1;
t1021 = -t600 / 0.2e1;
t244 = t1019 * t686 + t1021 * t460;
t176 = -t244 * qJD(1) + t1065 * t600;
t1029 = -t489 / 0.2e1;
t108 = t1029 * t1058 + t1107;
t60 = t108 * qJD(1) + t1102;
t1033 = t1058 / 0.2e1;
t107 = -t1033 * t489 + t1107;
t58 = t107 * qJD(1) + t1102;
t1078 = t817 * t732;
t1038 = t1124 * t717;
t999 = t869 * pkin(3);
t683 = t717 * t1018;
t734 = t445 / 0.2e1 - t909 / 0.2e1;
t190 = t683 - t734;
t1077 = t190 * t817;
t191 = t683 + t734;
t1076 = t191 * t817;
t696 = t902 / 0.2e1 + t885 / 0.2e1;
t333 = (t1019 - t696) * t603;
t1075 = t333 * t817;
t334 = (t1019 + t696) * t603;
t1074 = t334 * t817;
t1022 = t541 / 0.2e1;
t1024 = t526 / 0.2e1;
t771 = t1022 + t1024;
t1073 = t717 * t771;
t1009 = t631 / 0.2e1;
t1011 = t616 / 0.2e1;
t769 = t1009 + t1011;
t1072 = t602 * t769;
t792 = t686 * t859;
t1067 = t732 * t869;
t623 = t640 + t639;
t1063 = t817 * t623;
t1016 = -t605 / 0.2e1;
t934 = t605 * t630;
t935 = t603 * t635;
t1054 = t997 / 0.2e1 + t934 / 0.2e1 - t935 / 0.2e1 + (t1005 * t1016 + t1006 * t1018) * pkin(2);
t349 = qJD(6) * t592 - t414;
t824 = t686 * qJD(5);
t801 = t644 * t1006;
t744 = t642 * t801;
t800 = t647 * t1006;
t544 = (-t641 * t800 - t744) * pkin(2);
t887 = t646 * t544;
t745 = t641 * t801;
t545 = (t642 * t800 - t745) * pkin(2);
t906 = t643 * t545;
t871 = -t906 / 0.2e1 + t887 / 0.2e1;
t886 = t646 * t545;
t907 = t643 * t544;
t872 = -t907 / 0.2e1 - t886 / 0.2e1;
t53 = t1117 / 0.2e1 + t1058 * t1028 - t290 * t1029 + t717 * t1033;
t1048 = t53 * t817 + t1126;
t67 = t1058 * t717 + t1117;
t1047 = t67 * t817 + t1126;
t1046 = t107 * t817 - t1115;
t1045 = t108 * t817 - t1115;
t182 = -t602 * t460 - t600 * t686;
t226 = -t460 ^ 2 + t686 ^ 2;
t1044 = qJD(1) * t226 + t182 * t817;
t34 = qJD(1) * t53 + t1129;
t862 = qJD(1) * t460;
t1043 = t244 * t817 + t686 * t862;
t39 = qJD(1) * t67 + t1129;
t733 = 0.2e1 * t1031;
t169 = (-t460 / 0.2e1 - t454 / 0.2e1) * t643 + t733;
t1042 = -t169 * qJD(1) + t1111;
t779 = -t447 / 0.2e1;
t168 = t779 + t1119 + t873;
t1041 = t168 * qJD(1) + t1066;
t442 = t600 ^ 2 - t602 ^ 2;
t91 = t182 * qJD(1) + t442 * t817;
t171 = t424 - t913 / 0.2e1 + t733;
t1040 = -t171 * qJD(1) + t1111;
t1039 = -t686 * qJD(1) + t600 * t817;
t1037 = t605 ^ 2;
t1036 = -t93 / 0.2e1;
t1035 = -t97 / 0.2e1;
t1026 = t869 / 0.2e1;
t1020 = -t602 / 0.2e1;
t1015 = t605 / 0.2e1;
t597 = t608 / 0.2e1;
t1012 = -t616 / 0.2e1;
t1010 = -t631 / 0.2e1;
t1003 = pkin(5) * t460;
t1002 = pkin(5) * t602;
t994 = t53 * qJD(5) + t67 * qJD(6);
t993 = pkin(5) * qJD(5);
t992 = pkin(5) * qJD(6);
t901 = t646 * t100;
t921 = t643 * t123;
t2 = (t901 - t921) * t603 + t1121;
t991 = t2 * qJD(1);
t3 = -(t897 + t925) * t603 + t1120;
t990 = t3 * qJD(1);
t900 = t646 * t116;
t920 = t643 * t136;
t4 = (t900 - t920) * t603 + t1121;
t989 = t4 * qJD(1);
t5 = -(t896 + t924) * t603 + t1120;
t988 = t5 * qJD(1);
t923 = t643 * t121;
t54 = -t898 - t923;
t32 = t1003 * t290 + t54 * t603 + t1104;
t987 = qJD(1) * t32;
t899 = t646 * t121;
t55 = t899 - t922;
t33 = t1003 * t1058 - t55 * t603 - t1118;
t986 = qJD(1) * t33;
t36 = t50 * t603 - t1118;
t985 = qJD(1) * t36;
t37 = -t51 * t603 + t1104;
t984 = qJD(1) * t37;
t73 = -t1058 * t289 - t290 * t294;
t980 = qJD(1) * t73;
t84 = t143 * t603 + t433 * t686;
t979 = qJD(1) * t84;
t85 = -t144 * t603 + t433 * t460;
t978 = qJD(1) * t85;
t976 = t721 * t605;
t975 = t228 * t605;
t974 = t719 * t605;
t973 = t271 * t605;
t963 = t339 * t641;
t962 = t340 * t642;
t961 = t341 * t641;
t960 = t342 * t642;
t41 = -t603 * t876 + t1080;
t959 = t41 * qJD(1);
t42 = t603 * t759 + t1079;
t958 = t42 * qJD(1);
t955 = t433 * t600;
t954 = t433 * t602;
t45 = -t603 * t875 + t1080;
t951 = t45 * qJD(1);
t46 = t603 * t758 + t1079;
t950 = t46 * qJD(1);
t949 = t465 * t605;
t948 = t466 * t605;
t945 = t717 * t603;
t944 = t514 * t605;
t943 = t515 * t605;
t939 = t526 * t289;
t938 = t526 * t294;
t937 = t541 * t289;
t936 = t541 * t294;
t932 = t616 * t455;
t931 = t616 * t459;
t930 = t631 * t455;
t929 = t631 * t459;
t928 = t641 * qJ(4);
t724 = t325 * t642 + t326 * t641;
t687 = t724 * t603;
t74 = (-t339 * t642 - t340 * t641) * t605 - t687;
t883 = t74 * qJD(1);
t79 = (-t341 * t642 - t342 * t641) * t605 - t687;
t882 = t79 * qJD(1);
t80 = t325 * t339 + t326 * t340 + t1067;
t881 = t80 * qJD(1);
t82 = t325 * t341 + t326 * t342 + t1067;
t880 = t82 * qJD(1);
t98 = t1082 + (t339 - t940) * t603;
t879 = t98 * qJD(1);
t99 = t1081 + (-t340 - t506) * t603;
t878 = t99 * qJD(1);
t877 = t107 * qJD(5) + t108 * qJD(6);
t685 = t623 * t1006;
t586 = t685 * pkin(2);
t619 = t623 * qJD(4);
t870 = t586 * qJD(3) + t619;
t174 = t724 * t605;
t868 = qJD(1) * t174;
t183 = t455 * t460 + t459 * t686;
t867 = qJD(1) * t183;
t192 = -t945 / 0.2e1 + t734;
t157 = qJD(1) * t192;
t865 = qJD(1) * t1123;
t477 = t1004 * t603 - t605 * t636;
t861 = qJD(1) * t477;
t478 = -t1004 * t605 - t603 * t636;
t860 = qJD(1) * t478;
t857 = qJD(1) * t636;
t856 = qJD(1) * t648;
t855 = qJD(2) * t526;
t854 = qJD(2) * t616;
t853 = qJD(3) * t541;
t852 = qJD(3) * t631;
t851 = qJD(3) * t636;
t850 = qJD(4) * t603;
t849 = qJD(5) * t602;
t847 = qJD(6) * t526;
t846 = qJD(6) * t541;
t103 = t1082 + (t341 - t940) * t603;
t845 = t103 * qJD(1);
t104 = t1081 + (-t342 - t506) * t603;
t844 = t104 * qJD(1);
t141 = -t289 * t603 + t290 * t605;
t841 = t141 * qJD(1);
t142 = -t1058 * t605 + t294 * t603;
t840 = t142 * qJD(1);
t747 = -t812 / 0.2e1;
t651 = (t630 / 0.2e1 + t747 - qJ(4) / 0.2e1) * t605 + (-t813 / 0.2e1 - t635 / 0.2e1 - pkin(3) / 0.2e1) * t603;
t150 = t1027 + t1061 / 0.2e1 + t651 * t641;
t839 = t150 * qJD(1);
t160 = t190 * qJD(1);
t156 = t191 * qJD(1);
t254 = t455 * t603 - t605 * t686;
t832 = t254 * qJD(1);
t255 = t459 * t603 - t460 * t605;
t831 = t255 * qJD(1);
t278 = t779 + t1030;
t830 = t278 * qJD(1);
t324 = t333 * qJD(1);
t317 = t334 * qJD(1);
t778 = -t884 / 0.2e1;
t695 = t778 + t903 / 0.2e1;
t335 = (t600 / 0.2e1 + t695) * t603;
t318 = t335 * qJD(1);
t336 = (t1021 + t695) * t603;
t321 = t336 * qJD(1);
t353 = t623 * t1037;
t827 = t353 * qJD(1);
t449 = t603 ^ 2 - t1037;
t825 = t449 * qJD(1);
t519 = t597 + t1013;
t823 = t519 * qJD(1);
t822 = t592 * qJD(1);
t584 = t600 * qJD(5);
t624 = -t645 ^ 2 + t648 ^ 2;
t820 = t624 * qJD(1);
t819 = t645 * qJD(2);
t818 = t648 * qJD(2);
t815 = t489 * t1002;
t814 = t717 * t1002;
t811 = pkin(1) * t645 * qJD(1);
t810 = pkin(1) * t856;
t809 = t1003 / 0.2e1;
t808 = t1002 / 0.2e1;
t806 = -t996 / 0.2e1;
t805 = t590 / 0.2e1;
t804 = t290 * t808 + t489 * t809 + t223;
t803 = t1058 * t808 - t717 * t809 + t221;
t797 = t603 * t857;
t796 = t605 * t857;
t288 = -t890 - t1071;
t795 = t288 * t859;
t293 = t1070 - t913;
t794 = t293 * t859;
t793 = t454 * t859;
t574 = t642 * t850;
t789 = t645 * t856;
t786 = t955 / 0.2e1;
t785 = -t954 / 0.2e1;
t784 = t926 / 0.2e1;
t783 = -t921 / 0.2e1;
t782 = -t920 / 0.2e1;
t777 = -t260 / 0.2e1 - t276 / 0.2e1;
t776 = -t267 / 0.2e1 - t296 / 0.2e1;
t772 = t1022 + t1025;
t770 = t1011 + t1010;
t767 = t1006 * qJD(2);
t766 = t1006 * qJD(3);
t765 = t1005 * qJD(2);
t764 = t1005 * qJD(3);
t762 = pkin(5) * t1124;
t751 = qJD(5) + t859;
t750 = -qJD(6) - t859;
t749 = pkin(2) * t764;
t748 = pkin(2) * t765;
t746 = t812 / 0.2e1;
t743 = t642 * t790;
t742 = -t800 / 0.2e1;
t739 = t806 + t121 / 0.2e1;
t738 = t805 - t100 / 0.2e1;
t737 = t805 - t116 / 0.2e1;
t736 = t261 / 0.2e1 - t905 / 0.2e1;
t735 = t268 / 0.2e1 - t904 / 0.2e1;
t351 = t526 * t717;
t235 = t351 - t815;
t650 = (t1016 * t646 + t1020 * t290 + t1029 * t460) * pkin(5) + t787;
t661 = t1025 * t1058 - t1137;
t699 = t783 + t901 / 0.2e1;
t8 = t650 + t661 + t699;
t728 = -t8 * qJD(1) - t235 * qJD(2);
t352 = t526 * t489;
t236 = t352 + t814;
t653 = (t1015 * t643 + t1020 * t1058 + t1028 * t460) * pkin(5) + t788;
t7 = t653 + t1138;
t727 = -t7 * qJD(1) - t236 * qJD(2);
t723 = t962 - t963;
t722 = t960 - t961;
t716 = t934 - t935;
t470 = (t1005 * t635 + t630 * t685) * pkin(2);
t706 = t960 / 0.2e1 - t961 / 0.2e1;
t649 = t706 * t630 + (t732 * t1005 / 0.2e1 + t1060 * t1006) * pkin(2) + t635 * t1026;
t707 = -t962 / 0.2e1 + t963 / 0.2e1;
t48 = t999 / 0.2e1 + t707 * qJ(4) + t649;
t715 = t48 * qJD(1) + t470 * qJD(2);
t87 = (t342 / 0.2e1 - t340 / 0.2e1) * t642 + (-t341 / 0.2e1 + t339 / 0.2e1) * t641;
t714 = -qJD(1) * t87 - qJD(2) * t586;
t546 = t623 * t630;
t713 = -qJD(2) * t546 + t1093;
t712 = t1124 * t290;
t710 = t1024 * t1058 + t1137;
t708 = t1022 * t1058 + t1136;
t705 = t1012 * t686 + t1018 * t465;
t704 = t1011 * t460 + t1018 * t466;
t703 = t1010 * t686 + t1018 * t514;
t702 = t1009 * t460 + t1018 * t515;
t698 = t782 + t900 / 0.2e1;
t20 = t787 + t699 - t710;
t694 = qJD(1) * t20 + t717 * t855;
t21 = t788 + t1138;
t693 = qJD(1) * t21 + t489 * t855;
t69 = t786 + t705 + t777;
t692 = qJD(1) * t69 + t600 * t854;
t68 = t785 - t704 + t736;
t691 = qJD(1) * t68 - t602 * t854;
t372 = t541 * t717;
t690 = t815 - t351 / 0.2e1 - t372 / 0.2e1;
t373 = t541 * t489;
t689 = -t814 - t352 / 0.2e1 - t373 / 0.2e1;
t684 = t695 * t603;
t11 = t653 + t1139;
t139 = t689 - t872;
t253 = t373 + t814;
t681 = -t11 * qJD(1) + t139 * qJD(2) - t253 * qJD(3);
t659 = t1023 * t1058 - t1136;
t12 = t650 + t659 + t698;
t137 = t690 - t871;
t252 = t372 - t815;
t680 = -t12 * qJD(1) + t137 * qJD(2) - t252 * qJD(3);
t15 = (t1035 + t739) * t643;
t679 = t15 * qJD(1);
t147 = t1032 + t1098 / 0.2e1;
t17 = t646 * t739 + t1036;
t678 = t17 * qJD(1) + t147 * qJD(3);
t655 = (t887 - t906) * t1018 + t290 * t747;
t24 = (-t719 / 0.2e1 + t721 / 0.2e1) * t605 + t772 * t289 + t655;
t677 = t24 * qJD(1) - t489 * t748;
t654 = (t886 + t907) * t1017 + t1058 * t747;
t26 = (t271 / 0.2e1 - t228 / 0.2e1) * t605 + t772 * t294 + t654;
t676 = t26 * qJD(1) + t717 * t748;
t675 = t1017 * t544 + t686 * t747;
t674 = t1018 * t545 + t460 * t746;
t63 = (t466 / 0.2e1 - t515 / 0.2e1) * t605 + t770 * t459 + t674;
t673 = -t63 * qJD(1) - t602 * t748;
t65 = (t465 / 0.2e1 - t514 / 0.2e1) * t605 - t770 * t455 + t675;
t672 = -t65 * qJD(1) - t600 * t748;
t463 = t746 - t1125;
t615 = t623 * qJ(4);
t671 = qJD(2) * t463 - qJD(3) * t615 + t1093;
t153 = (t1026 - t869 / 0.2e1) * t641 + t651 * t642;
t670 = -t153 * qJD(1) - t641 * t748;
t669 = (-t765 - t764) * pkin(2);
t177 = t871 + t1073;
t28 = t787 + t698 - t708;
t668 = qJD(1) * t28 + qJD(2) * t177 + t717 * t853;
t178 = t489 * t771 + t872;
t29 = t788 + t1139;
t667 = qJD(1) * t29 + qJD(2) * t178 + t489 * t853;
t657 = (-t744 / 0.2e1 + t641 * t742) * pkin(2);
t329 = t657 - t1072;
t75 = t785 - t702 + t735;
t666 = qJD(1) * t75 + qJD(2) * t329 - t602 * t852;
t656 = (t642 * t742 + t745 / 0.2e1) * pkin(2);
t330 = t600 * t769 + t656;
t76 = t786 + t703 + t776;
t665 = qJD(1) * t76 + qJD(2) * t330 + t600 * t852;
t622 = t641 * t749;
t585 = t602 * qJD(4);
t583 = t600 * qJD(4);
t560 = t602 * t749;
t559 = t600 * t749;
t509 = t602 * t584;
t503 = t817 * t603;
t497 = t817 * t592;
t473 = t486 * qJD(4);
t464 = t746 + t1125;
t453 = 0.2e1 * t597 - t606;
t451 = t717 * t749;
t450 = t489 * t749;
t417 = t442 * qJD(5);
t357 = t954 / 0.2e1;
t356 = -t955 / 0.2e1;
t338 = t459 / 0.2e1 + t684;
t337 = -t459 / 0.2e1 + t684;
t332 = t657 + t1072;
t331 = t656 + (t1010 + t1012) * t600;
t323 = t333 * qJD(4);
t322 = t334 * qJD(4);
t320 = t336 * qJD(4);
t319 = t338 * qJD(4);
t304 = t561 / 0.2e1 + (t778 - t695) * t605;
t303 = t1016 * t602 + t696 * t605;
t282 = -t317 - t849;
t281 = -t584 - t318;
t280 = -t584 + t321;
t279 = t324 + t849;
t237 = t244 * qJD(5);
t201 = 0.2e1 * t779 - t1071;
t200 = 0.2e1 * t424 + t1070;
t199 = t945 / 0.2e1 + t734;
t189 = t1123 * qJD(4);
t188 = t1122 * qJD(4);
t187 = t190 * qJD(4);
t186 = t191 * qJD(4);
t184 = t874 * t717;
t181 = t182 * qJD(5);
t180 = t871 - t1073;
t179 = t872 + (t1023 + t1025) * t489;
t155 = -qJD(5) * t335 - t831;
t154 = -qJD(5) * t334 - t832;
t152 = t1054 * t642 + t605 * t784 + t1062;
t151 = t928 * t1015 + t1054 * t641 + 0.2e1 * t1027;
t148 = t914 + 0.2e1 * t1032;
t145 = -t459 * t862 + t237;
t140 = t689 + t872;
t138 = t690 + t871;
t129 = t1038 - t157;
t126 = t1038 - t156;
t125 = t865 - t874;
t124 = -t1038 + t160;
t120 = t337 * qJD(5) - t1064 * t602 + t831;
t119 = -t333 * qJD(5) + t1064 * t600 + t832;
t96 = t1124 * t1085;
t86 = t706 - t707;
t83 = t237 + (t1065 + t862) * t459;
t81 = t181 - t867;
t78 = t356 - t703 + t776;
t77 = t357 + t702 + t735;
t71 = t357 + t704 + t736;
t70 = t356 - t705 + t777;
t64 = t949 / 0.2e1 - t932 / 0.2e1 + t1106 + t944 / 0.2e1 - t930 / 0.2e1 + t675;
t62 = t931 / 0.2e1 + t1105 + t948 / 0.2e1 + t929 / 0.2e1 + t943 / 0.2e1 + t674;
t57 = -t1122 * t1124 - t840;
t56 = -qJD(5) * t191 - qJD(6) * t192 - t841;
t49 = t867 + t181 + t817 * (t455 * t602 - t459 * t600);
t47 = t340 * t784 - t339 * t928 / 0.2e1 - t999 / 0.2e1 + t649;
t44 = t1064 * t717 + t1123 * t1124 + t840;
t43 = -t190 * qJD(5) + t199 * qJD(6) + t1064 * t489 + t841;
t38 = -t294 * t863 + t877;
t31 = t223 + t698 + t708;
t30 = t221 + t700 - t658;
t27 = t975 / 0.2e1 + t938 / 0.2e1 - t1127 + t973 / 0.2e1 + t936 / 0.2e1 - t654;
t25 = -t976 / 0.2e1 + t939 / 0.2e1 + t1128 - t974 / 0.2e1 + t937 / 0.2e1 - t655;
t23 = t223 + t699 + t710;
t22 = t221 + t701 - t660;
t19 = (-t1066 + t863) * t294 + t877;
t18 = t646 * t806 + t922 + t1036 - t899 / 0.2e1;
t16 = -t898 - t923 / 0.2e1 + (t806 + t1035) * t643;
t14 = t643 * t737 - t658 + t780 + t803;
t13 = -t646 * t737 - t659 + t782 + t804;
t10 = t643 * t738 - t660 + t781 + t803;
t9 = -t646 * t738 - t661 + t783 + t804;
t6 = -t980 + t994;
t1 = t980 + t817 * (t289 * t717 - t294 * t489) + t994;
t35 = [0, 0, 0, t645 * t818, t624 * qJD(2), 0, 0, 0, -pkin(1) * t819, -pkin(1) * t818, t374, t817 * t449, 0, 0, 0, qJD(2) * t477 - t605 * t851, qJD(2) * t478 - t603 * t851, qJD(2) * t98 + qJD(3) * t103 + t574 * t605, qJD(2) * t99 + qJD(3) * t104 - t850 * t933, -qJD(2) * t74 - qJD(3) * t79 + qJD(4) * t353, qJD(2) * t80 + qJD(3) * t82 + qJD(4) * t174 (t459 * t817 + t824) * t460, qJD(5) * t226 + t183 * t817, t255 * t817 + t603 * t824, -t460 * t603 * qJD(5) + t254 * t817, -t374, qJD(2) * t42 + qJD(3) * t46 + qJD(5) * t85 - t454 * t850, qJD(2) * t41 + qJD(3) * t45 + qJD(5) * t84 - t686 * t850 (t294 * t817 - t712) * t1058, t1084 * t1124 + t73 * t817, t142 * t817 - t603 * t712, -t1058 * t1124 * t603 + t817 * t141, -t374, qJD(2) * t2 + qJD(3) * t4 + qJD(5) * t32 + qJD(6) * t37 + t288 * t850, qJD(2) * t3 + qJD(3) * t5 + qJD(5) * t33 + qJD(6) * t36 - t293 * t850; 0, 0, 0, t789, t820, t818, -t819, 0, -pkin(7) * t818 - t811, pkin(7) * t819 - t810, t790, t825, -t503, t1064, 0, -qJD(2) * t869 + qJD(3) * t453 + t861, t1078 + t860, t879 + (t641 * t716 - t1061) * qJD(2) + t151 * qJD(3) - t473, t878 + (t642 * t716 + t1062) * qJD(2) + t152 * qJD(3) - t574, qJD(2) * t723 + t86 * qJD(3) - t883, t881 + (t630 * t723 + t635 * t869) * qJD(2) + t47 * qJD(3) + t1089, t83, t49, t120, t119, -t414, t958 + (-t932 + t949 + t1106) * qJD(2) + t64 * qJD(3) - t322 + t71 * qJD(5), t959 + (t931 + t948 + t1105) * qJD(2) + t62 * qJD(3) + t319 + t70 * qJD(5), t19, t1, t44, t43, t349, t991 + (t939 + t1128 - t976) * qJD(2) + t25 * qJD(3) - t186 + t9 * qJD(5) + t23 * qJD(6), t990 + (t938 - t1127 + t975) * qJD(2) + t27 * qJD(3) + t188 + t10 * qJD(5) + t22 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t790, t825, -t503, t1064, 0, qJD(2) * t453 - qJD(3) * t869 - t796, t1078 - t797, t845 + t151 * qJD(2) + (t641 * t731 - t1061) * qJD(3) - t473, t844 + t152 * qJD(2) + (t642 * t731 + t1062) * qJD(3) - t574, t86 * qJD(2) + qJD(3) * t722 - t882, t880 + t47 * qJD(2) + (qJ(4) * t722 - t999) * qJD(3) + t1089, t83, t49, t120, t119, -t414, t950 + t64 * qJD(2) + (-t930 + t944 + t1106) * qJD(3) - t322 + t77 * qJD(5), t951 + t62 * qJD(2) + (t929 + t943 + t1105) * qJD(3) + t319 + t78 * qJD(5), t19, t1, t44, t43, t349, t989 + t25 * qJD(2) + (t937 + t1128 - t974) * qJD(3) - t186 + t13 * qJD(5) + t31 * qJD(6), t988 + t27 * qJD(2) + (t936 - t1127 + t973) * qJD(3) + t188 + t14 * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486 * t817 + t743 (-t641 * t858 - t642 * t817) * t603, t827, t1051 * t817 + t868, 0, 0, 0, 0, 0, t304 * qJD(5) - t1074 - t793, t303 * qJD(5) + t338 * t817 - t792, 0, 0, 0, 0, 0, t1050 * t1124 - t1076 + t795, t1059 * t1124 + t1068 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1043, t1044, t337 * t817 + t686 * t751, -t460 * t751 - t1075, t497, qJD(2) * t71 + qJD(3) * t77 + qJD(4) * t304 - qJD(5) * t144 + t978, qJD(2) * t70 + qJD(3) * t78 + qJD(4) * t303 + qJD(5) * t143 + t979, t1046, t1048, t200 * qJD(6) - t290 * t751 + t1069, t201 * qJD(6) - t1058 * t751 - t1077, t497, qJD(2) * t9 + qJD(3) * t13 + qJD(5) * t54 + qJD(6) * t16 + t1092 + t987, qJD(2) * t10 + qJD(3) * t14 - qJD(5) * t55 + qJD(6) * t18 + t1090 + t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1045, t1047, t200 * qJD(5) + t290 * t750 + t1069, t201 * qJD(5) + t1058 * t750 + t199 * t817, t497, qJD(2) * t23 + qJD(3) * t31 + qJD(5) * t16 - qJD(6) * t51 + t1092 + t984, qJD(2) * t22 + qJD(3) * t30 + qJD(5) * t18 + qJD(6) * t50 + t1090 + t985; 0, 0, 0, -t789, -t820, 0, 0, 0, t811, t810, -t790, -t825, 0, 0, 0, qJD(3) * t519 - t861, -t860, qJD(3) * t150 - t879, qJD(3) * t153 - t878, qJD(3) * t87 + t883, qJD(3) * t48 - t1091 - t881, t145, t81, t155, t154, t414, qJD(3) * t65 - qJD(5) * t68 - t323 - t958, qJD(3) * t63 - qJD(5) * t69 - t320 - t959, t38, t6, t57, t56, -t349, -qJD(3) * t24 - qJD(5) * t8 - qJD(6) * t20 - t187 - t991, -qJD(3) * t26 - qJD(5) * t7 - qJD(6) * t21 - t189 - t990; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t749, -pkin(2) * t766, -t642 * t749, t622, t870, qJD(3) * t470 + qJD(4) * t546, -t509, t417, 0, 0, 0, t616 * t849 + t559, -t584 * t616 + t560, t184, t96, 0, 0, 0, -qJD(5) * t235 - t717 * t847 + t450, -qJD(5) * t236 - t489 * t847 - t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669 + t823 (-t767 - t766) * pkin(2), t642 * t669 + t839, t622 - t670, -t714 + t870 (-pkin(3) * t1005 + qJ(4) * t685) * pkin(2) * qJD(3) + t464 * qJD(4) + t715, -t509, t417, 0, 0, 0, t332 * qJD(5) + t559 - t672, t331 * qJD(5) + t560 - t673, t184, t96, 0, 0, 0, t138 * qJD(5) + t180 * qJD(6) + t450 - t677, t140 * qJD(5) + t179 * qJD(6) - t451 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1063, qJD(3) * t464 - t713, 0, 0, 0, 0, 0, -t324, -t321, 0, 0, 0, 0, 0, -t160, -t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t91, t281, t282, -t822, qJD(3) * t332 - qJD(5) * t466 - t691, qJD(3) * t331 + qJD(5) * t465 - t692, t58, t34, t1135, t126, -t822, t138 * qJD(3) - t1133 + t728, t140 * qJD(3) - t1131 + t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t39, t1135, t129, -t822, qJD(3) * t180 - t1133 - t694, qJD(3) * t179 - t1131 - t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t790, -t825, 0, 0, 0, -qJD(2) * t519 + t796, t797, -qJD(2) * t150 - t845, -qJD(2) * t153 - t844, -qJD(2) * t87 + t882, -qJD(2) * t48 - t1091 - t880, t145, t81, t155, t154, t414, -qJD(2) * t65 - qJD(5) * t75 - t323 - t950, -qJD(2) * t63 - qJD(5) * t76 - t320 - t951, t38, t6, t57, t56, -t349, qJD(2) * t24 - qJD(5) * t12 - qJD(6) * t28 - t187 - t989, qJD(2) * t26 - qJD(5) * t11 - qJD(6) * t29 - t189 - t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t748 - t823, pkin(2) * t767, t642 * t748 - t839, t670, t619 + t714, -qJD(4) * t463 - t715, -t509, t417, 0, 0, 0, -t329 * qJD(5) + t672, -t330 * qJD(5) + t673, t184, t96, 0, 0, 0, t137 * qJD(5) - t177 * qJD(6) + t677, t139 * qJD(5) - t178 * qJD(6) + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, t615 * qJD(4), -t509, t417, 0, 0, 0, t631 * t849, -t631 * t584, t184, t96, 0, 0, 0, -qJD(5) * t252 - t717 * t846, -qJD(5) * t253 - t489 * t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1063, -t671, 0, 0, 0, 0, 0, -t324, -t321, 0, 0, 0, 0, 0, -t160, -t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t91, t281, t282, -t822, -qJD(5) * t515 - t666, qJD(5) * t514 - t665, t58, t34, t1135, t126, -t822, -t1132 + t680, -qJD(5) * t719 + t148 * qJD(6) + t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t39, t1135, t129, -t822, -t1132 - t668, qJD(5) * t148 - qJD(6) * t719 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t743, t641 * t790, -t827, t1052 * t817 - t868, 0, 0, 0, 0, 0, -t301 * qJD(5) + t1075 + t793, t336 * t817 + t792 + t824, 0, 0, 0, 0, 0, t166 * qJD(5) - t168 * qJD(6) + t1077 - t795, t171 * qJD(5) + t169 * qJD(6) + t1069 + t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1063, qJD(3) * t463 + t713, 0, 0, 0, 0, 0, t279, t280, 0, 0, 0, 0, 0, t124, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1063, t671, 0, 0, 0, 0, 0, t279, t280, 0, 0, 0, 0, 0, t124, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1094, -t1039, 0, 0, 0, 0, 0, -t1083, -t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1041, -t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1043, -t1044, t335 * t817 - t792, t460 * t859 + t1074, t497, qJD(2) * t68 + qJD(3) * t75 + qJD(4) * t301 - t978, qJD(2) * t69 + qJD(3) * t76 - qJD(4) * t686 - t979, -t1046, -t1048, t1134, t278 * qJD(6) + t1076 + t1103, t497, qJD(2) * t8 + qJD(3) * t12 - qJD(4) * t166 + qJD(6) * t15 - t987, qJD(2) * t7 + qJD(3) * t11 - qJD(4) * t171 + qJD(6) * t17 - t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t91, t318, t317, t822, qJD(3) * t329 - t585 + t691, qJD(3) * t330 + t583 + t692, -t58, -t34, t1130, t156, t822, -qJD(3) * t137 + t1096 - t728, -qJD(3) * t139 + t1101 - t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t91, t318, t317, t822, -t585 + t666, t583 + t665, -t58, -t34, t1130, t156, t822, t1096 - t680, qJD(6) * t147 + t1101 - t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1094, t1039, 0, 0, 0, 0, 0, t1083, t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t643 * t992, -t646 * t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, 0, -t643 * t762 + t679, -t646 * t762 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1045, -t1047, t1134, -t278 * qJD(5) + t192 * t817 + t1103, t497, qJD(2) * t20 + qJD(3) * t28 + qJD(4) * t168 - qJD(5) * t15 - t984, qJD(2) * t21 + qJD(3) * t29 - qJD(4) * t169 - qJD(5) * t17 - t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t39, t1130, t157, t822, qJD(3) * t177 + t1096 + t694, qJD(3) * t178 + t1101 + t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t39, t1130, t157, t822, t1096 + t668, -qJD(5) * t147 + t1101 + t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1041, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, 0, t643 * t993 - t679, t646 * t993 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
