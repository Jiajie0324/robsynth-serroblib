% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR4_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:17:46
% EndTime: 2019-03-09 18:18:05
% DurationCPUTime: 7.02s
% Computational Cost: add. (13496->419), mult. (29423->694), div. (0->0), fcn. (29398->10), ass. (0->229)
t186 = sin(pkin(11));
t187 = cos(pkin(11));
t332 = sin(qJ(5));
t335 = cos(qJ(5));
t164 = t335 * t186 + t332 * t187;
t184 = t186 ^ 2;
t185 = t187 ^ 2;
t342 = t184 + t185;
t311 = t342 * qJD(4);
t350 = 0.2e1 * t311;
t336 = cos(qJ(3));
t288 = t336 * qJD(3);
t279 = pkin(2) * t288;
t260 = t279 + qJD(4);
t314 = t342 * t260;
t189 = sin(qJ(2));
t337 = -pkin(8) - pkin(7);
t277 = t337 * t336;
t166 = t189 * t277;
t190 = cos(qJ(2));
t333 = sin(qJ(3));
t298 = t333 * t190;
t266 = t337 * t298;
t223 = t166 + t266;
t299 = t333 * t189;
t301 = t336 * t190;
t165 = t299 - t301;
t249 = t336 * t189 + t298;
t241 = t187 * t249;
t180 = -t190 * pkin(2) - pkin(1);
t218 = t165 * pkin(3) - t249 * qJ(4) + t180;
t267 = t337 * t301;
t276 = t337 * t333;
t233 = t189 * t276 - t267;
t90 = -t186 * t233 + t187 * t218;
t201 = t165 * pkin(4) - pkin(9) * t241 + t90;
t242 = t186 * t249;
t91 = t186 * t218 + t187 * t233;
t202 = -pkin(9) * t242 + t91;
t41 = t335 * t201 - t332 * t202;
t238 = t249 * t335;
t341 = t336 * qJD(2);
t248 = t288 + t341;
t294 = qJD(3) * t333;
t312 = qJD(2) * t299 + t189 * t294;
t339 = -t248 * t190 + t312;
t349 = qJD(5) * t238 - t339 * t332;
t237 = t249 * t332;
t348 = qJD(5) * t237 + t339 * t335;
t304 = t333 * pkin(2);
t273 = t304 + qJ(4);
t265 = pkin(9) + t273;
t254 = t187 * t265;
t255 = t186 * t265;
t347 = t332 * t254 + t335 * t255;
t326 = pkin(9) + qJ(4);
t346 = t164 * t326;
t239 = t249 * qJD(3);
t240 = t249 * qJD(2);
t131 = t239 + t240;
t206 = t249 * t131 - t165 * t339;
t345 = -0.2e1 * t206;
t42 = t332 * t201 + t335 * t202;
t119 = t335 * t254 - t332 * t255;
t340 = -t131 * t273 - t165 * t260 + t239 * t304;
t161 = qJD(3) * t266;
t264 = qJD(3) * t277;
t247 = t189 * t264 + t161;
t338 = -(t190 * t276 + t166) * qJD(2) - t247;
t334 = cos(qJ(6));
t331 = t131 * pkin(3);
t330 = t131 * pkin(5);
t329 = t164 * pkin(10);
t328 = t187 * pkin(4);
t327 = t189 * pkin(2);
t188 = sin(qJ(6));
t271 = t332 * t186 - t335 * t187;
t250 = t334 * t271;
t125 = t164 * t188 + t250;
t225 = t186 * t339;
t124 = pkin(4) * t225;
t307 = t190 * qJD(2);
t157 = t277 * t307;
t216 = -t348 * t186 + t349 * t187;
t226 = t233 * qJD(3);
t263 = qJD(2) * t276;
t38 = t216 * pkin(5) + t189 * t263 - t124 - t157 + t226;
t114 = pkin(4) * t242 - t223;
t315 = t186 * t238 + t187 * t237;
t80 = t315 * pkin(5) + t114;
t126 = t334 * t164 - t188 * t271;
t292 = qJD(5) * t332;
t171 = t186 * t292;
t293 = qJD(5) * t335;
t257 = -t187 * t293 + t171;
t313 = t186 * t293 + t187 * t292;
t84 = t126 * qJD(6) - t188 * t257 + t334 * t313;
t325 = t38 * t125 + t80 * t84;
t309 = qJD(6) * t188;
t83 = qJD(6) * t250 + t164 * t309 + t188 * t313 + t334 * t257;
t324 = t38 * t126 - t80 * t83;
t100 = -t157 - qJD(3) * t267 + (qJD(3) * t276 + t263) * t189;
t72 = -t124 + t100;
t323 = t114 * t313 + t72 * t271;
t322 = -t114 * t257 + t72 * t164;
t177 = -pkin(3) - t328;
t139 = t271 * pkin(5) + t177;
t305 = t336 * pkin(2);
t137 = -t305 + t139;
t181 = pkin(2) * t294;
t290 = t313 * pkin(5);
t138 = t181 + t290;
t321 = t138 * t125 + t137 * t84;
t320 = t138 * t126 - t137 * t83;
t319 = t100 * t187;
t318 = t223 * t100;
t127 = t186 * t131;
t128 = t187 * t131;
t179 = -t305 - pkin(3);
t169 = t179 - t328;
t317 = t169 * t313 + t271 * t181;
t316 = t164 * t181 - t169 * t257;
t274 = t335 * t326;
t275 = t326 * t332;
t133 = -t186 * t275 + t187 * t274;
t310 = qJD(4) * t165;
t308 = t189 * qJD(2);
t306 = -0.2e1 * pkin(1) * qJD(2);
t112 = 0.2e1 * t165 * t131;
t303 = pkin(2) * t308;
t302 = pkin(5) * t309;
t296 = t189 * t307;
t117 = -t186 * t237 + t187 * t238;
t194 = t165 * pkin(5) - t117 * pkin(10) + t41;
t192 = t334 * t194;
t33 = -t315 * pkin(10) + t42;
t17 = -t188 * t33 + t192;
t193 = t188 * t194;
t18 = t334 * t33 + t193;
t195 = t187 * (t190 * t263 + t161) + (t331 + (-t333 * qJD(4) - t326 * t248) * t190 + t326 * t312) * t186 + (t187 * (t337 * t341 + t264) + t186 * (qJD(2) * pkin(2) - t336 * qJD(4))) * t189;
t224 = t187 * t339;
t227 = -t249 * qJD(4) + t331;
t196 = t186 * t338 + t187 * (qJ(4) * t339 + t227 + t303) + pkin(9) * t224 + t131 * pkin(4);
t12 = -t42 * qJD(5) - t332 * t195 + t335 * t196;
t59 = t349 * t186 + t348 * t187;
t191 = t59 * pkin(10) + t12 + t330;
t11 = -t41 * qJD(5) - t335 * t195 - t332 * t196;
t197 = -t216 * pkin(10) - t11;
t3 = -qJD(6) * t192 - t188 * t191 - t334 * t197 + t33 * t309;
t291 = qJD(6) * t334;
t4 = -qJD(6) * t193 - t188 * t197 + t334 * t191 - t33 * t291;
t295 = t3 * t125 - t4 * t126 + t17 * t83 - t18 * t84;
t289 = t313 * pkin(10);
t287 = t335 * qJD(4);
t286 = t332 * qJD(4);
t285 = t11 * t271 - t12 * t164 + t41 * t257 - t42 * t313;
t159 = t271 * pkin(10);
t106 = -t159 + t119;
t245 = t260 * t332;
t246 = t260 * t335;
t88 = -t119 * qJD(5) - t186 * t246 - t187 * t245;
t198 = t257 * pkin(10) + t88;
t87 = t347 * qJD(5) + t186 * t245 - t187 * t246;
t204 = t289 + t87;
t210 = -t347 - t329;
t205 = t334 * t210;
t25 = -qJD(6) * t205 + t106 * t309 - t188 * t198 + t334 * t204;
t207 = t188 * t210;
t26 = -qJD(6) * t207 - t106 * t291 + t188 * t204 + t334 * t198;
t60 = -t188 * t106 + t205;
t61 = t334 * t106 + t207;
t284 = t25 * t125 - t26 * t126 + t60 * t83 - t61 * t84;
t115 = -t159 + t133;
t231 = (qJD(5) * t275 - t287) * t186;
t203 = t171 * pkin(10) + (-t286 + (-t335 * pkin(10) - t274) * qJD(5)) * t187 + t231;
t108 = t346 * qJD(5) + t186 * t286 - t187 * t287;
t214 = -t289 - t108;
t222 = -t346 - t329;
t215 = t334 * t222;
t34 = -qJD(6) * t215 + t115 * t309 - t188 * t203 - t334 * t214;
t217 = t188 * t222;
t35 = -qJD(6) * t217 - t115 * t291 - t188 * t214 + t334 * t203;
t73 = -t188 * t115 + t215;
t74 = t334 * t115 + t217;
t283 = t34 * t125 - t35 * t126 + t73 * t83 - t74 * t84;
t282 = t177 * t313;
t281 = -t119 * t313 - t88 * t164 - t257 * t347 + t87 * t271;
t109 = (-qJD(5) * t274 - t286) * t187 + t231;
t280 = t108 * t271 - t109 * t164 - t133 * t313 - t257 * t346;
t278 = pkin(5) * t291;
t272 = t334 * t315;
t211 = -(t190 * t288 - t312) * qJ(4) + t227;
t253 = -qJ(4) * t301 + t327;
t54 = -t186 * t247 + t187 * t211 + (-t186 * t223 + t187 * t253) * qJD(2);
t55 = t187 * t247 + t186 * t211 + (t186 * t253 + t187 * t223) * qJD(2);
t24 = -t186 * t54 + t187 * t55;
t270 = t186 * t181;
t269 = t187 * t181;
t268 = t223 * t181;
t259 = t125 * t290 + t139 * t84;
t258 = t126 * t290 - t139 * t83;
t251 = t177 * t257;
t79 = t334 * t117 - t188 * t315;
t213 = t249 * t339;
t212 = -0.2e1 * t213;
t130 = -0.2e1 * t164 * t257;
t129 = 0.2e1 * t271 * t313;
t120 = t186 * t224;
t95 = t100 * t186;
t94 = -0.2e1 * t164 * t313 + 0.2e1 * t257 * t271;
t89 = t339 * (t184 - t185);
t86 = -t271 * t131 - t313 * t165;
t85 = t164 * t131 - t257 * t165;
t78 = t117 * t188 + t272;
t63 = -0.2e1 * t126 * t83;
t62 = 0.2e1 * t125 * t84;
t53 = -t125 * t131 - t165 * t84;
t52 = t126 * t131 - t165 * t83;
t47 = t216 * t271 + t315 * t313;
t46 = -t117 * t257 - t59 * t164;
t36 = 0.2e1 * t125 * t83 - 0.2e1 * t126 * t84;
t32 = (t334 * t83 - t188 * t84 + (-t334 * t125 + t126 * t188) * qJD(6)) * pkin(5);
t23 = t79 * qJD(6) - t188 * t59 + t334 * t216;
t22 = qJD(6) * t272 + t117 * t309 + t188 * t216 + t334 * t59;
t19 = -t117 * t313 - t164 * t216 + t257 * t315 + t59 * t271;
t16 = t125 * t23 + t78 * t84;
t15 = -t126 * t22 - t79 * t83;
t5 = t125 * t22 - t126 * t23 + t78 * t83 - t79 * t84;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t296, 0.2e1 * (-t189 ^ 2 + t190 ^ 2) * qJD(2), 0, -0.2e1 * t296, 0, 0, t189 * t306, t190 * t306, 0, 0, t212, t345, 0, t112, 0, 0, 0.2e1 * t131 * t180 + 0.2e1 * t165 * t303, -0.2e1 * t180 * t339 + 0.2e1 * t240 * t327, 0.2e1 * t100 * t249 - 0.2e1 * t131 * t233 + 0.2e1 * t165 * t338 + 0.2e1 * t223 * t339, 0.2e1 * t180 * t303 - 0.2e1 * t233 * t338 - 0.2e1 * t318, t185 * t212, 0.4e1 * t187 * t186 * t213, 0.2e1 * t206 * t187, t184 * t212, t186 * t345, t112, 0.2e1 * t100 * t242 + 0.2e1 * t90 * t131 + 0.2e1 * t54 * t165 + 0.2e1 * t223 * t225, 0.2e1 * t100 * t241 - 0.2e1 * t91 * t131 - 0.2e1 * t55 * t165 + 0.2e1 * t223 * t224, 0.2e1 * t224 * t90 + 0.2e1 * t225 * t91 - 0.2e1 * t241 * t54 - 0.2e1 * t242 * t55, 0.2e1 * t54 * t90 + 0.2e1 * t55 * t91 - 0.2e1 * t318, -0.2e1 * t117 * t59, -0.2e1 * t117 * t216 + 0.2e1 * t315 * t59, 0.2e1 * t117 * t131 - 0.2e1 * t165 * t59, 0.2e1 * t315 * t216, -0.2e1 * t315 * t131 - 0.2e1 * t165 * t216, t112, 0.2e1 * t114 * t216 + 0.2e1 * t12 * t165 + 0.2e1 * t41 * t131 + 0.2e1 * t315 * t72, 0.2e1 * t11 * t165 - 0.2e1 * t114 * t59 + 0.2e1 * t117 * t72 - 0.2e1 * t131 * t42, 0.2e1 * t11 * t315 - 0.2e1 * t12 * t117 - 0.2e1 * t216 * t42 + 0.2e1 * t41 * t59, -0.2e1 * t11 * t42 + 0.2e1 * t114 * t72 + 0.2e1 * t12 * t41, -0.2e1 * t79 * t22, 0.2e1 * t22 * t78 - 0.2e1 * t23 * t79, 0.2e1 * t131 * t79 - 0.2e1 * t165 * t22, 0.2e1 * t78 * t23, -0.2e1 * t131 * t78 - 0.2e1 * t165 * t23, t112, 0.2e1 * t131 * t17 + 0.2e1 * t165 * t4 + 0.2e1 * t23 * t80 + 0.2e1 * t38 * t78, -0.2e1 * t131 * t18 + 0.2e1 * t165 * t3 - 0.2e1 * t22 * t80 + 0.2e1 * t38 * t79, 0.2e1 * t17 * t22 - 0.2e1 * t18 * t23 + 0.2e1 * t3 * t78 - 0.2e1 * t4 * t79, 0.2e1 * t17 * t4 - 0.2e1 * t18 * t3 + 0.2e1 * t38 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, 0, -t308, 0, -pkin(7) * t307, pkin(7) * t308, 0, 0, 0, 0, -t339, 0, -t131, 0, -t100, t338, -t131 * t304 - t165 * t279 + t181 * t249 + t305 * t339, -t338 * t304 - t268 + (-t100 + t226) * t305, -t120, t89, t127, t120, t128, 0, -t179 * t225 + t340 * t186 - t319, -t179 * t224 + t340 * t187 + t95, t24, -t268 + t100 * t179 + (t260 * t91 + t273 * t55) * t187 + (-t260 * t90 - t273 * t54) * t186, t46, t19, t85, t47, t86, 0, -t131 * t347 + t88 * t165 + t169 * t216 + t181 * t315 + t323, t117 * t181 - t119 * t131 + t87 * t165 - t169 * t59 + t322, -t88 * t117 - t119 * t216 + t315 * t87 - t347 * t59 + t285, -t11 * t119 + t114 * t181 - t12 * t347 + t72 * t169 + t41 * t88 - t42 * t87, t15, t5, t52, t16, t53, 0, t131 * t60 + t137 * t23 + t138 * t78 + t165 * t26 + t325, -t131 * t61 - t137 * t22 + t138 * t79 + t165 * t25 + t324, t22 * t60 - t23 * t61 + t25 * t78 - t26 * t79 + t295, t137 * t38 + t138 * t80 + t17 * t26 - t18 * t25 - t3 * t61 + t4 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t181, -0.2e1 * t279, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t269, 0.2e1 * t270, 0.2e1 * t314, 0.2e1 * t179 * t181 + 0.2e1 * t273 * t314, t130, t94, 0, t129, 0, 0, 0.2e1 * t317, 0.2e1 * t316, 0.2e1 * t281, -0.2e1 * t119 * t87 + 0.2e1 * t169 * t181 - 0.2e1 * t347 * t88, t63, t36, 0, t62, 0, 0, 0.2e1 * t321, 0.2e1 * t320, 0.2e1 * t284, 0.2e1 * t137 * t138 - 0.2e1 * t25 * t61 + 0.2e1 * t26 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, 0, -t131, 0, -t100, t338, 0, 0, -t120, t89, t127, t120, t128, 0, pkin(3) * t225 - qJ(4) * t127 - t186 * t310 - t319, pkin(3) * t224 - qJ(4) * t128 - t187 * t310 + t95, t24, -pkin(3) * t100 + (-t186 * t90 + t187 * t91) * qJD(4) + t24 * qJ(4), t46, t19, t85, t47, t86, 0, t109 * t165 - t131 * t346 + t177 * t216 + t323, t108 * t165 - t131 * t133 - t177 * t59 + t322, t108 * t315 - t109 * t117 - t133 * t216 - t346 * t59 + t285, -t108 * t42 + t109 * t41 - t11 * t133 - t12 * t346 + t177 * t72, t15, t5, t52, t16, t53, 0, t73 * t131 + t139 * t23 + t35 * t165 + t290 * t78 + t325, -t74 * t131 - t139 * t22 + t34 * t165 + t290 * t79 + t324, t22 * t73 - t23 * t74 + t34 * t78 - t35 * t79 + t295, t38 * t139 + t17 * t35 - t18 * t34 + t290 * t80 - t3 * t74 + t4 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, -t279, 0, 0, 0, 0, 0, 0, 0, 0, -t269, t270, t311 + t314, -pkin(3) * t181 + t342 * (t260 * qJ(4) + t273 * qJD(4)) t130, t94, 0, t129, 0, 0, t282 + t317, -t251 + t316, t280 + t281, -t119 * t108 - t109 * t347 - t87 * t133 + t177 * t181 - t346 * t88, t63, t36, 0, t62, 0, 0, t259 + t321, t258 + t320, t283 + t284, t137 * t290 + t138 * t139 - t25 * t74 + t26 * t73 - t61 * t34 + t60 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, qJ(4) * t350, t130, t94, 0, t129, 0, 0, 0.2e1 * t282, -0.2e1 * t251, 0.2e1 * t280, -0.2e1 * t108 * t133 - 0.2e1 * t109 * t346, t63, t36, 0, t62, 0, 0, 0.2e1 * t259, 0.2e1 * t258, 0.2e1 * t283, 0.2e1 * t139 * t290 - 0.2e1 * t74 * t34 + 0.2e1 * t73 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t225, -t224, 0, t100, 0, 0, 0, 0, 0, 0, t216, -t59, 0, t72, 0, 0, 0, 0, 0, 0, t23, -t22, 0, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, 0, 0, 0, 0, 0, 0, t313, -t257, 0, t181, 0, 0, 0, 0, 0, 0, t84, -t83, 0, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, -t257, 0, 0, 0, 0, 0, 0, 0, 0, t84, -t83, 0, t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t216, t131, t12, t11, 0, 0, 0, 0, -t22, 0, -t23, t131, -t165 * t302 + t330 * t334 + t4 (-t131 * t188 - t165 * t291) * pkin(5) + t3 (t334 * t22 - t188 * t23 + (t188 * t79 - t334 * t78) * qJD(6)) * pkin(5) (t334 * t4 - t188 * t3 + (-t17 * t188 + t18 * t334) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, 0, -t313, 0, t88, t87, 0, 0, 0, 0, -t83, 0, -t84, 0, t26, t25, t32 (t334 * t26 - t188 * t25 + (-t188 * t60 + t334 * t61) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, 0, -t313, 0, t109, t108, 0, 0, 0, 0, -t83, 0, -t84, 0, t35, t34, t32 (t334 * t35 - t188 * t34 + (-t188 * t73 + t334 * t74) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t302, -0.2e1 * t278, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, -t23, t131, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, -t84, 0, t26, t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, -t84, 0, t35, t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, -t278, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
