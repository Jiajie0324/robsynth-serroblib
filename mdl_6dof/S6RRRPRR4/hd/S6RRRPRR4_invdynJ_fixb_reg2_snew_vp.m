% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 10:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR4_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR4_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR4_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR4_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR4_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR4_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 10:27:43
% EndTime: 2019-05-07 10:28:16
% DurationCPUTime: 16.48s
% Computational Cost: add. (172069->675), mult. (355346->984), div. (0->0), fcn. (266362->12), ass. (0->426)
t412 = sin(pkin(11));
t417 = sin(qJ(2));
t420 = cos(qJ(3));
t416 = sin(qJ(3));
t421 = cos(qJ(2));
t473 = t416 * t421;
t388 = (t417 * t420 + t473) * qJD(1);
t409 = qJD(2) + qJD(3);
t413 = cos(pkin(11));
t370 = t388 * t412 - t413 * t409;
t371 = t388 * t413 + t409 * t412;
t343 = t371 * t370;
t404 = t417 * qJDD(1);
t466 = qJD(1) * qJD(2);
t453 = t421 * t466;
t393 = t404 + t453;
t405 = t421 * qJDD(1);
t454 = t417 * t466;
t394 = t405 - t454;
t444 = t416 * t393 - t420 * t394;
t348 = qJD(3) * t388 + t444;
t520 = -t343 + t348;
t532 = t412 * t520;
t531 = t413 * t520;
t414 = sin(qJ(6));
t415 = sin(qJ(5));
t419 = cos(qJ(5));
t336 = t419 * t370 + t371 * t415;
t338 = -t370 * t415 + t371 * t419;
t418 = cos(qJ(6));
t287 = t418 * t336 + t338 * t414;
t289 = -t336 * t414 + t338 * t418;
t239 = t289 * t287;
t347 = qJDD(5) + t348;
t346 = qJDD(6) + t347;
t523 = -t239 + t346;
t530 = t414 * t523;
t291 = t338 * t336;
t522 = -t291 + t347;
t529 = t415 * t522;
t468 = qJD(1) * t417;
t386 = -t420 * t421 * qJD(1) + t416 * t468;
t364 = t388 * t386;
t465 = qJDD(2) + qJDD(3);
t518 = -t364 + t465;
t528 = t416 * t518;
t527 = t418 * t523;
t526 = t419 * t522;
t525 = t420 * t518;
t435 = t420 * t393 + t416 * t394;
t349 = -qJD(3) * t386 + t435;
t339 = t413 * t349 + t412 * t465;
t446 = t349 * t412 - t413 * t465;
t447 = t415 * t339 + t419 * t446;
t251 = -qJD(5) * t338 - t447;
t252 = -t336 * qJD(5) + t419 * t339 - t415 * t446;
t187 = -qJD(6) * t287 + t251 * t414 + t252 * t418;
t382 = qJD(5) + t386;
t380 = qJD(6) + t382;
t280 = t380 * t287;
t524 = t187 - t280;
t378 = t409 * t386;
t328 = t349 - t378;
t411 = t421 ^ 2;
t510 = sin(qJ(1));
t511 = cos(qJ(1));
t439 = g(1) * t510 - t511 * g(2);
t431 = qJDD(1) * pkin(1) + t439;
t513 = qJD(1) ^ 2;
t351 = (pkin(8) * t411 + pkin(7)) * t513 + t394 * pkin(2) - (qJD(2) * pkin(2) - pkin(8) * t468) * t468 + t431;
t253 = -t328 * qJ(4) + (t388 * t409 + t348) * pkin(3) - t351;
t432 = g(1) * t511 + g(2) * t510;
t499 = qJDD(1) * pkin(7);
t426 = -t432 + t499;
t424 = -pkin(1) * t513 + t426;
t423 = t417 * t424;
t507 = t393 * pkin(8);
t438 = qJDD(2) * pkin(2) - t507;
t422 = qJD(2) ^ 2;
t504 = pkin(8) * qJD(2);
t506 = t417 * g(3);
t344 = t421 * t426 - t506 + t394 * pkin(8) - t422 * pkin(2) + (t417 * t504 + (-pkin(1) * t421 - pkin(2) * t411) * qJD(1)) * qJD(1);
t471 = t420 * t344;
t294 = t471 + t416 * (-t423 + t438) + (-g(3) + (pkin(2) * t468 + t504) * qJD(1)) * t473;
t361 = pkin(3) * t386 - qJ(4) * t388;
t514 = t409 ^ 2;
t264 = -pkin(3) * t514 + qJ(4) * t465 - t386 * t361 + t294;
t196 = 0.2e1 * qJD(4) * t371 - t413 * t253 + t412 * t264;
t197 = -0.2e1 * qJD(4) * t370 + t412 * t253 + t413 * t264;
t138 = t412 * t196 + t413 * t197;
t320 = t382 * t336;
t521 = -t320 + t252;
t232 = t320 + t252;
t355 = t386 * t370;
t305 = -t355 - t339;
t519 = -t355 + t339;
t285 = t287 ^ 2;
t286 = t289 ^ 2;
t517 = t336 ^ 2;
t334 = t338 ^ 2;
t516 = t370 ^ 2;
t369 = t371 ^ 2;
t379 = t380 ^ 2;
t381 = t382 ^ 2;
t515 = t386 ^ 2;
t385 = t388 ^ 2;
t162 = pkin(4) * t520 + pkin(9) * t305 - t196;
t352 = pkin(4) * t386 - pkin(9) * t371;
t177 = -pkin(4) * t516 - pkin(9) * t446 - t386 * t352 + t197;
t112 = -t419 * t162 + t415 * t177;
t93 = pkin(5) * t522 - pkin(10) * t232 - t112;
t113 = t415 * t162 + t419 * t177;
t315 = pkin(5) * t382 - pkin(10) * t338;
t94 = -pkin(5) * t517 + pkin(10) * t251 - t315 * t382 + t113;
t53 = t414 * t94 - t418 * t93;
t54 = t414 * t93 + t418 * t94;
t30 = t414 * t54 - t418 * t53;
t512 = pkin(5) * t30;
t509 = pkin(3) * t416;
t153 = t187 + t280;
t448 = -t418 * t251 + t414 * t252;
t429 = (-qJD(6) + t380) * t289 - t448;
t101 = -t153 * t418 + t414 * t429;
t508 = pkin(5) * t101;
t505 = t421 * g(3);
t503 = t30 * t415;
t502 = t30 * t419;
t76 = -t112 * t419 + t113 * t415;
t501 = t412 * t76;
t500 = t413 * t76;
t293 = t344 * t416 - t420 * (-t417 * t426 - t505 + (t421 * t504 + (t421 * pkin(2) + pkin(1)) * t468) * qJD(1) + t438);
t263 = -t465 * pkin(3) - t514 * qJ(4) + t361 * t388 + qJDD(4) + t293;
t203 = t446 * pkin(4) - t516 * pkin(9) + t352 * t371 + t263;
t140 = -t251 * pkin(5) - pkin(10) * t517 + t315 * t338 + t203;
t498 = t140 * t414;
t497 = t140 * t418;
t496 = t203 * t415;
t495 = t203 * t419;
t209 = t239 + t346;
t494 = t209 * t414;
t493 = t209 * t418;
t240 = -t293 * t420 + t294 * t416;
t492 = t240 * t417;
t266 = t291 + t347;
t491 = t266 * t415;
t490 = t266 * t419;
t308 = t343 + t348;
t489 = t308 * t412;
t488 = t308 * t413;
t487 = t348 * t416;
t486 = t351 * t416;
t485 = t351 * t420;
t358 = t364 + t465;
t484 = t358 * t416;
t483 = t358 * t420;
t482 = t371 * t386;
t481 = t380 * t414;
t480 = t380 * t418;
t479 = t382 * t415;
t478 = t382 * t419;
t477 = t386 * t412;
t476 = t386 * t413;
t475 = t409 * t416;
t474 = t409 * t420;
t257 = t412 * t263;
t258 = t413 * t263;
t400 = t421 * t513 * t417;
t396 = qJDD(2) + t400;
t472 = t417 * t396;
t470 = t421 * (qJDD(2) - t400);
t469 = -pkin(3) * t263 + qJ(4) * t138;
t467 = qJD(3) + t409;
t464 = t416 * t239;
t463 = t420 * t239;
t462 = t416 * t291;
t461 = t420 * t291;
t460 = t416 * t343;
t459 = t420 * t343;
t340 = -t369 - t515;
t270 = -t340 * t412 - t488;
t458 = -pkin(3) * t519 + qJ(4) * t270 + t257;
t322 = -t515 - t516;
t260 = t322 * t413 - t532;
t301 = t446 + t482;
t457 = -pkin(3) * t301 + qJ(4) * t260 - t258;
t456 = -pkin(3) * t420 - pkin(2);
t31 = t414 * t53 + t418 * t54;
t17 = t31 * t415 + t502;
t18 = t31 * t419 - t503;
t12 = -t17 * t412 + t18 * t413;
t28 = -pkin(5) * t140 + pkin(10) * t31;
t5 = -pkin(4) * t140 + pkin(9) * t18 - pkin(10) * t503 + t28 * t419;
t9 = -pkin(9) * t17 - pkin(10) * t502 - t28 * t415;
t452 = -pkin(3) * t140 + qJ(4) * t12 + t412 * t9 + t413 * t5;
t199 = -t285 - t286;
t103 = t153 * t414 + t418 * t429;
t23 = -pkin(5) * t199 + pkin(10) * t103 + t31;
t24 = -pkin(10) * t101 - t30;
t70 = -t101 * t415 + t103 * t419;
t14 = -pkin(4) * t199 + pkin(9) * t70 + t23 * t419 + t24 * t415;
t68 = t101 * t419 + t103 * t415;
t16 = -pkin(9) * t68 - t23 * t415 + t24 * t419;
t38 = -t412 * t68 + t413 * t70;
t451 = -pkin(3) * t199 + qJ(4) * t38 + t413 * t14 + t412 * t16;
t149 = (qJD(6) + t380) * t289 + t448;
t219 = -t379 - t285;
t165 = t219 * t414 + t527;
t166 = t219 * t418 - t530;
t110 = -t165 * t415 + t166 * t419;
t82 = -pkin(5) * t149 + pkin(10) * t166 - t497;
t99 = -pkin(10) * t165 + t498;
t40 = -pkin(4) * t149 + pkin(9) * t110 + t415 * t99 + t419 * t82;
t109 = t165 * t419 + t166 * t415;
t49 = -pkin(9) * t109 - t415 * t82 + t419 * t99;
t75 = -t109 * t412 + t110 * t413;
t450 = -pkin(3) * t149 + qJ(4) * t75 + t413 * t40 + t412 * t49;
t271 = -t286 - t379;
t188 = t271 * t418 - t494;
t108 = -pkin(10) * t188 + t497;
t189 = -t271 * t414 - t493;
t123 = -t188 * t415 + t189 * t419;
t86 = -pkin(5) * t524 + pkin(10) * t189 + t498;
t44 = -pkin(4) * t524 + pkin(9) * t123 + t108 * t415 + t419 * t86;
t122 = t188 * t419 + t189 * t415;
t51 = -pkin(9) * t122 + t108 * t419 - t415 * t86;
t85 = -t122 * t412 + t123 * t413;
t449 = -pkin(3) * t524 + qJ(4) * t85 + t412 * t51 + t413 * t44;
t77 = t112 * t415 + t419 * t113;
t241 = t293 * t416 + t420 * t294;
t374 = t423 + t505;
t375 = t421 * t424 - t506;
t445 = t417 * t374 + t421 * t375;
t428 = (-qJD(5) + t382) * t338 - t447;
t179 = -t232 * t419 + t415 * t428;
t181 = t232 * t415 + t419 * t428;
t118 = -t179 * t412 + t181 * t413;
t255 = -t334 - t517;
t56 = -pkin(4) * t255 + pkin(9) * t181 + t77;
t60 = -pkin(9) * t179 - t76;
t443 = -pkin(3) * t255 + qJ(4) * t118 + t412 * t60 + t413 * t56;
t284 = -t381 - t517;
t207 = t284 * t419 - t529;
t228 = (qJD(5) + t382) * t338 + t447;
t129 = -pkin(4) * t228 + pkin(9) * t207 - t495;
t206 = t284 * t415 + t526;
t148 = -pkin(9) * t206 + t496;
t157 = -t206 * t412 + t207 * t413;
t442 = -pkin(3) * t228 + qJ(4) * t157 + t413 * t129 + t412 * t148;
t310 = -t334 - t381;
t221 = -t310 * t415 - t490;
t133 = -pkin(4) * t521 + pkin(9) * t221 + t496;
t220 = t310 * t419 - t491;
t159 = -pkin(9) * t220 + t495;
t171 = -t220 * t412 + t221 * t413;
t441 = -pkin(3) * t521 + qJ(4) * t171 + t413 * t133 + t412 * t159;
t306 = t446 - t482;
t246 = -t305 * t412 - t306 * t413;
t314 = -t369 - t516;
t440 = -pkin(3) * t314 + qJ(4) * t246 + t138;
t436 = -t196 * t413 + t197 * t412;
t434 = pkin(5) * t165 - t53;
t47 = t413 * t77 - t501;
t66 = -pkin(4) * t203 + pkin(9) * t77;
t433 = -pkin(3) * t203 - pkin(9) * t501 + qJ(4) * t47 + t413 * t66;
t430 = pkin(5) * t188 - t54;
t427 = (-qJD(3) + t409) * t388 - t444;
t410 = t417 ^ 2;
t407 = t411 * t513;
t406 = t410 * t513;
t395 = t405 - 0.2e1 * t454;
t392 = t404 + 0.2e1 * t453;
t389 = pkin(7) * t513 + t431;
t377 = -t385 + t514;
t376 = t515 - t514;
t373 = -t385 - t514;
t362 = t385 - t515;
t357 = -t515 - t514;
t354 = -t369 + t515;
t353 = -t515 + t516;
t350 = -t515 - t385;
t345 = t420 * t348;
t342 = -t369 + t516;
t330 = -t373 * t416 - t483;
t329 = t373 * t420 - t484;
t327 = t349 + t378;
t326 = -t386 * t467 + t435;
t323 = t388 * t467 + t444;
t319 = t357 * t420 - t528;
t318 = t357 * t416 + t525;
t317 = -t334 + t381;
t316 = -t381 + t517;
t312 = (-t370 * t413 + t371 * t412) * t386;
t311 = (-t370 * t412 - t371 * t413) * t386;
t298 = t339 * t413 - t371 * t477;
t297 = t339 * t412 + t371 * t476;
t296 = t370 * t476 + t412 * t446;
t295 = t370 * t477 - t413 * t446;
t290 = t334 - t517;
t283 = t327 * t416 + t420 * t427;
t282 = -t327 * t420 + t416 * t427;
t279 = -t286 + t379;
t278 = t285 - t379;
t277 = t353 * t413 - t489;
t276 = -t354 * t412 + t531;
t275 = t353 * t412 + t488;
t274 = t354 * t413 + t532;
t273 = (-t336 * t419 + t338 * t415) * t382;
t272 = (-t336 * t415 - t338 * t419) * t382;
t269 = t340 * t413 - t489;
t259 = t322 * t412 + t531;
t245 = -t301 * t413 - t412 * t519;
t244 = t305 * t413 - t306 * t412;
t243 = -t301 * t412 + t413 * t519;
t238 = t316 * t419 - t491;
t237 = -t317 * t415 + t526;
t236 = t316 * t415 + t490;
t235 = t317 * t419 + t529;
t234 = t286 - t285;
t225 = t252 * t419 - t338 * t479;
t224 = t252 * t415 + t338 * t478;
t223 = -t251 * t415 + t336 * t478;
t222 = t251 * t419 + t336 * t479;
t218 = t270 * t420 + t416 * t519;
t217 = t270 * t416 - t420 * t519;
t216 = t260 * t420 + t301 * t416;
t215 = t260 * t416 - t301 * t420;
t214 = (-t287 * t418 + t289 * t414) * t380;
t213 = (-t287 * t414 - t289 * t418) * t380;
t212 = t246 * t420 + t314 * t416;
t211 = t246 * t416 - t314 * t420;
t205 = -t272 * t412 + t273 * t413;
t204 = t272 * t413 + t273 * t412;
t201 = -qJ(4) * t269 + t258;
t200 = -qJ(4) * t259 + t257;
t193 = t278 * t418 - t494;
t192 = -t279 * t414 + t527;
t191 = t278 * t414 + t493;
t190 = t279 * t418 + t530;
t186 = -qJD(6) * t289 - t448;
t185 = -t236 * t412 + t238 * t413;
t184 = -t235 * t412 + t237 * t413;
t183 = t236 * t413 + t238 * t412;
t182 = t235 * t413 + t237 * t412;
t180 = -t228 * t419 - t415 * t521;
t178 = -t228 * t415 + t419 * t521;
t175 = -t224 * t412 + t225 * t413;
t174 = -t222 * t412 + t223 * t413;
t173 = t224 * t413 + t225 * t412;
t172 = t222 * t413 + t223 * t412;
t170 = t220 * t413 + t221 * t412;
t168 = -pkin(3) * t269 + t197;
t167 = -pkin(3) * t259 + t196;
t164 = -t213 * t415 + t214 * t419;
t163 = t213 * t419 + t214 * t415;
t156 = t206 * t413 + t207 * t412;
t144 = t187 * t418 - t289 * t481;
t143 = t187 * t414 + t289 * t480;
t142 = -t186 * t414 + t287 * t480;
t141 = t186 * t418 + t287 * t481;
t135 = t171 * t420 + t416 * t521;
t134 = t171 * t416 - t420 * t521;
t131 = t157 * t420 + t228 * t416;
t130 = t157 * t416 - t228 * t420;
t128 = -t191 * t415 + t193 * t419;
t127 = -t190 * t415 + t192 * t419;
t126 = t191 * t419 + t193 * t415;
t125 = t190 * t419 + t192 * t415;
t120 = t138 * t416 - t263 * t420;
t119 = -qJ(4) * t244 - t436;
t117 = -t178 * t412 + t180 * t413;
t116 = t179 * t413 + t181 * t412;
t115 = t178 * t413 + t180 * t412;
t107 = -t163 * t412 + t164 * t413;
t106 = t163 * t413 + t164 * t412;
t105 = t118 * t420 + t255 * t416;
t104 = t118 * t416 - t255 * t420;
t102 = -t149 * t418 - t414 * t524;
t100 = -t149 * t414 + t418 * t524;
t98 = -t143 * t415 + t144 * t419;
t97 = -t141 * t415 + t142 * t419;
t96 = t143 * t419 + t144 * t415;
t95 = t141 * t419 + t142 * t415;
t91 = -pkin(3) * t116 - pkin(4) * t179;
t90 = -t126 * t412 + t128 * t413;
t89 = -t125 * t412 + t127 * t413;
t88 = t126 * t413 + t128 * t412;
t87 = t125 * t413 + t127 * t412;
t84 = t122 * t413 + t123 * t412;
t81 = -pkin(3) * t170 - pkin(4) * t220 + t113;
t80 = -qJ(4) * t170 - t133 * t412 + t159 * t413;
t79 = -pkin(3) * t156 - pkin(4) * t206 + t112;
t78 = -qJ(4) * t156 - t129 * t412 + t148 * t413;
t74 = t109 * t413 + t110 * t412;
t72 = t416 * t524 + t420 * t85;
t71 = t416 * t85 - t420 * t524;
t69 = -t100 * t415 + t102 * t419;
t67 = t100 * t419 + t102 * t415;
t64 = -t412 * t96 + t413 * t98;
t63 = -t412 * t95 + t413 * t97;
t62 = t412 * t98 + t413 * t96;
t61 = t412 * t97 + t413 * t95;
t58 = t149 * t416 + t420 * t75;
t57 = -t149 * t420 + t416 * t75;
t46 = t412 * t77 + t500;
t42 = t203 * t416 + t420 * t47;
t41 = -t203 * t420 + t416 * t47;
t37 = -t412 * t67 + t413 * t69;
t36 = t412 * t70 + t413 * t68;
t35 = t412 * t69 + t413 * t67;
t33 = t199 * t416 + t38 * t420;
t32 = -t199 * t420 + t38 * t416;
t29 = -pkin(3) * t84 - pkin(4) * t122 - t430;
t27 = -pkin(3) * t46 - pkin(4) * t76;
t26 = -qJ(4) * t116 - t412 * t56 + t413 * t60;
t25 = -pkin(3) * t74 - pkin(4) * t109 - t434;
t22 = -pkin(3) * t36 - pkin(4) * t68 - t508;
t21 = -pkin(9) * t500 - qJ(4) * t46 - t412 * t66;
t20 = -qJ(4) * t84 - t412 * t44 + t413 * t51;
t19 = -qJ(4) * t74 - t40 * t412 + t413 * t49;
t11 = t17 * t413 + t18 * t412;
t7 = t12 * t420 + t140 * t416;
t6 = t12 * t416 - t140 * t420;
t3 = -qJ(4) * t36 - t14 * t412 + t16 * t413;
t2 = -pkin(3) * t11 - pkin(4) * t17 - t512;
t1 = -qJ(4) * t11 - t412 * t5 + t413 * t9;
t4 = [0, 0, 0, 0, 0, qJDD(1), t439, t432, 0, 0, (t393 + t453) * t417, t392 * t421 + t395 * t417, t472 + t421 * (-t406 + t422), (t394 - t454) * t421, t417 * (t407 - t422) + t470, 0, t421 * t389 + pkin(1) * t395 + pkin(7) * (t421 * (-t407 - t422) - t472), -t417 * t389 - pkin(1) * t392 + pkin(7) * (-t470 - t417 * (-t406 - t422)), pkin(1) * (t406 + t407) + (t410 + t411) * t499 + t445, pkin(1) * t389 + pkin(7) * t445, t417 * (t349 * t420 - t388 * t475) + t421 * (t349 * t416 + t388 * t474), t417 * (-t323 * t420 - t328 * t416) + t421 * (-t323 * t416 + t328 * t420), t417 * (-t377 * t416 + t525) + t421 * (t377 * t420 + t528), t417 * (t386 * t474 + t487) + t421 * (t386 * t475 - t345), t417 * (t376 * t420 - t484) + t421 * (t376 * t416 + t483), (t417 * (-t386 * t420 + t388 * t416) + t421 * (-t386 * t416 - t388 * t420)) * t409, t417 * (-pkin(8) * t318 - t486) + t421 * (-pkin(2) * t323 + pkin(8) * t319 + t485) - pkin(1) * t323 + pkin(7) * (-t318 * t417 + t319 * t421), t417 * (-pkin(8) * t329 - t485) + t421 * (-pkin(2) * t326 + pkin(8) * t330 - t486) - pkin(1) * t326 + pkin(7) * (-t329 * t417 + t330 * t421), t417 * (-pkin(8) * t282 - t240) + t421 * (-pkin(2) * t350 + pkin(8) * t283 + t241) - pkin(1) * t350 + pkin(7) * (-t282 * t417 + t283 * t421), -pkin(8) * t492 + t421 * (pkin(2) * t351 + pkin(8) * t241) + pkin(1) * t351 + pkin(7) * (t241 * t421 - t492), t417 * (t298 * t420 + t460) + t421 * (t298 * t416 - t459), t417 * (t245 * t420 - t342 * t416) + t421 * (t245 * t416 + t342 * t420), t417 * (t276 * t420 - t305 * t416) + t421 * (t276 * t416 + t305 * t420), t417 * (t296 * t420 - t460) + t421 * (t296 * t416 + t459), t417 * (t277 * t420 - t306 * t416) + t421 * (t277 * t416 + t306 * t420), t417 * (t312 * t420 + t487) + t421 * (t312 * t416 - t345), t417 * (-pkin(8) * t215 - t167 * t416 + t200 * t420) + t421 * (-pkin(2) * t259 + pkin(8) * t216 + t167 * t420 + t200 * t416) - pkin(1) * t259 + pkin(7) * (-t215 * t417 + t216 * t421), t417 * (-pkin(8) * t217 - t168 * t416 + t201 * t420) + t421 * (-pkin(2) * t269 + pkin(8) * t218 + t168 * t420 + t201 * t416) - pkin(1) * t269 + pkin(7) * (-t217 * t417 + t218 * t421), t417 * (-pkin(8) * t211 + t119 * t420) + t421 * (pkin(8) * t212 + t416 * t119) + pkin(7) * (-t211 * t417 + t212 * t421) + (t417 * t509 + t421 * t456 - pkin(1)) * t244, (t417 * (-qJ(4) * t420 + t509) + t421 * (-qJ(4) * t416 + t456) - pkin(1)) * t436 + (pkin(7) + pkin(8)) * (-t120 * t417 + (t138 * t420 + t263 * t416) * t421), t417 * (t175 * t420 + t462) + t421 * (t175 * t416 - t461), t417 * (t117 * t420 + t290 * t416) + t421 * (t117 * t416 - t290 * t420), t417 * (t184 * t420 + t232 * t416) + t421 * (t184 * t416 - t232 * t420), t417 * (t174 * t420 - t462) + t421 * (t174 * t416 + t461), t417 * (t185 * t420 + t416 * t428) + t421 * (t185 * t416 - t420 * t428), t417 * (t205 * t420 + t347 * t416) + t421 * (t205 * t416 - t347 * t420), t417 * (-pkin(8) * t130 - t416 * t79 + t420 * t78) + t421 * (-pkin(2) * t156 + pkin(8) * t131 + t416 * t78 + t420 * t79) - pkin(1) * t156 + pkin(7) * (-t130 * t417 + t131 * t421), t417 * (-pkin(8) * t134 - t416 * t81 + t420 * t80) + t421 * (-pkin(2) * t170 + pkin(8) * t135 + t416 * t80 + t420 * t81) - pkin(1) * t170 + pkin(7) * (-t134 * t417 + t135 * t421), t417 * (-pkin(8) * t104 + t26 * t420 - t416 * t91) + t421 * (-pkin(2) * t116 + pkin(8) * t105 + t26 * t416 + t420 * t91) - pkin(1) * t116 + pkin(7) * (-t104 * t417 + t105 * t421), t417 * (-pkin(8) * t41 + t21 * t420 - t27 * t416) + t421 * (-pkin(2) * t46 + pkin(8) * t42 + t21 * t416 + t27 * t420) - pkin(1) * t46 + pkin(7) * (-t41 * t417 + t42 * t421), t417 * (t420 * t64 + t464) + t421 * (t416 * t64 - t463), t417 * (t234 * t416 + t37 * t420) + t421 * (-t234 * t420 + t37 * t416), t417 * (t153 * t416 + t420 * t89) + t421 * (-t153 * t420 + t416 * t89), t417 * (t420 * t63 - t464) + t421 * (t416 * t63 + t463), t417 * (t416 * t429 + t420 * t90) + t421 * (t416 * t90 - t420 * t429), t417 * (t107 * t420 + t346 * t416) + t421 * (t107 * t416 - t346 * t420), t417 * (-pkin(8) * t57 + t19 * t420 - t25 * t416) + t421 * (-pkin(2) * t74 + pkin(8) * t58 + t19 * t416 + t25 * t420) - pkin(1) * t74 + pkin(7) * (-t417 * t57 + t421 * t58), t417 * (-pkin(8) * t71 + t20 * t420 - t29 * t416) + t421 * (-pkin(2) * t84 + pkin(8) * t72 + t20 * t416 + t29 * t420) - pkin(1) * t84 + pkin(7) * (-t417 * t71 + t421 * t72), t417 * (-pkin(8) * t32 - t22 * t416 + t3 * t420) + t421 * (-pkin(2) * t36 + pkin(8) * t33 + t22 * t420 + t3 * t416) - pkin(1) * t36 + pkin(7) * (-t32 * t417 + t33 * t421), t417 * (-pkin(8) * t6 + t1 * t420 - t2 * t416) + t421 * (-pkin(2) * t11 + pkin(8) * t7 + t1 * t416 + t2 * t420) - pkin(1) * t11 + pkin(7) * (-t417 * t6 + t421 * t7); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t400, t406 - t407, t404, t400, t405, qJDD(2), -t374, -t375, 0, 0, t364, t362, t327, -t364, t427, t465, pkin(2) * t318 - t293, -t471 - t416 * (pkin(8) * t453 - t374 - t507) + (-t396 * t416 + t329) * pkin(2), pkin(2) * t282, pkin(2) * t240, t297, t243, t274, t295, t275, t311, pkin(2) * t215 + t457, pkin(2) * t217 + t458, pkin(2) * t211 + t440, pkin(2) * t120 + t469, t173, t115, t182, t172, t183, t204, pkin(2) * t130 + t442, pkin(2) * t134 + t441, pkin(2) * t104 + t443, pkin(2) * t41 + t433, t62, t35, t87, t61, t88, t106, pkin(2) * t57 + t450, pkin(2) * t71 + t449, pkin(2) * t32 + t451, pkin(2) * t6 + t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t362, t327, -t364, t427, t465, -t293, -t294, 0, 0, t297, t243, t274, t295, t275, t311, t457, t458, t440, t469, t173, t115, t182, t172, t183, t204, t442, t441, t443, t433, t62, t35, t87, t61, t88, t106, t450, t449, t451, t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, t519, t314, t263, 0, 0, 0, 0, 0, 0, t228, t521, t255, t203, 0, 0, 0, 0, 0, 0, t149, t524, t199, t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t290, t232, -t291, t428, t347, -t112, -t113, 0, 0, t239, t234, t153, -t239, t429, t346, t434, t430, t508, t512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t234, t153, -t239, t429, t346, -t53, -t54, 0, 0;];
tauJ_reg  = t4;
