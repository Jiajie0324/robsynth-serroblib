% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 21:26
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 21:24:10
% EndTime: 2019-05-07 21:26:19
% DurationCPUTime: 134.96s
% Computational Cost: add. (1791000->1211), mult. (3932893->1830), div. (0->0), fcn. (3258340->14), ass. (0->857)
t2190 = sin(qJ(4));
t2191 = sin(qJ(3));
t2196 = cos(qJ(3));
t2188 = cos(pkin(6));
t2382 = qJD(1) * t2188;
t2312 = qJD(2) + t2382;
t2186 = sin(pkin(6));
t2192 = sin(qJ(2));
t2344 = t2186 * t2192;
t2329 = qJD(1) * t2344;
t2143 = t2191 * t2329 - t2196 * t2312;
t2144 = t2191 * t2312 + t2196 * t2329;
t2195 = cos(qJ(4));
t2112 = -t2143 * t2190 + t2144 * t2195;
t2306 = t2143 * t2195 + t2190 * t2144;
t2053 = t2112 * t2306;
t2197 = cos(qJ(2));
t2333 = qJDD(1) * t2186;
t2152 = -qJD(2) * t2329 + t2197 * t2333;
t2146 = -qJDD(3) + t2152;
t2145 = -qJDD(4) + t2146;
t2400 = -t2053 - t2145;
t2406 = t2190 * t2400;
t2405 = t2195 * t2400;
t2383 = qJD(1) * t2186;
t2185 = sin(pkin(12));
t2187 = cos(pkin(12));
t2045 = t2112 * t2185 + t2187 * t2306;
t2047 = t2187 * t2112 - t2185 * t2306;
t1988 = t2047 * t2045;
t2396 = -t1988 - t2145;
t2404 = t2185 * t2396;
t2403 = t2187 * t2396;
t2189 = sin(qJ(6));
t2380 = qJD(1) * t2197;
t2319 = qJD(2) * t2380;
t2332 = t2192 * qJDD(1);
t2151 = (t2319 + t2332) * t2186;
t2302 = qJDD(1) * t2188 + qJDD(2);
t2210 = -t2196 * t2151 - t2191 * t2302;
t2099 = -t2143 * qJD(3) - t2210;
t2209 = -t2191 * t2151 + t2196 * t2302;
t2202 = -t2144 * qJD(3) + t2209;
t2011 = -qJD(4) * t2306 + t2195 * t2099 + t2190 * t2202;
t2307 = t2190 * t2099 - t2195 * t2202;
t2233 = -qJD(4) * t2112 - t2307;
t2308 = t2011 * t2185 - t2187 * t2233;
t1922 = qJDD(6) + t2308;
t2343 = t2186 * t2197;
t2172 = qJD(1) * t2343 - qJD(3);
t2164 = -qJD(4) + t2172;
t2194 = cos(qJ(6));
t2022 = t2047 * t2189 + t2194 * t2164;
t2024 = t2047 * t2194 - t2164 * t2189;
t1950 = t2024 * t2022;
t2397 = t1922 - t1950;
t2402 = t2189 * t2397;
t2401 = t2194 * t2397;
t2351 = t2164 * t2047;
t1889 = t2308 - t2351;
t2300 = t2306 ^ 2;
t2301 = t2312 ^ 2;
t2357 = t2144 * t2143;
t2208 = -t2146 - t2357;
t2399 = t2191 * t2208;
t2398 = t2196 * t2208;
t2379 = qJD(5) * t2045;
t2038 = -0.2e1 * t2379;
t2193 = sin(qJ(1));
t2198 = cos(qJ(1));
t2175 = g(1) * t2198 + t2193 * g(2);
t2392 = qJD(1) ^ 2;
t2147 = -pkin(1) * t2392 + pkin(8) * t2333 - t2175;
t2389 = pkin(2) * t2197;
t2295 = -pkin(9) * t2192 - t2389;
t2150 = t2295 * t2383;
t2174 = t2193 * g(1) - t2198 * g(2);
t2385 = pkin(8) * t2186;
t2206 = qJDD(1) * pkin(1) + t2385 * t2392 + t2174;
t2203 = t2188 * t2206;
t2201 = -g(3) * t2344 + t2192 * t2203;
t2062 = t2302 * pkin(9) - t2301 * pkin(2) + (t2150 * t2383 + t2147) * t2197 + t2201;
t2290 = qJD(1) * t2312;
t2240 = t2197 * t2290;
t2241 = t2192 * t2290;
t2384 = t2188 * g(3);
t2063 = -t2152 * pkin(2) - t2151 * pkin(9) - t2384 + (pkin(2) * t2241 - pkin(9) * t2240 - t2206) * t2186;
t1995 = t2191 * t2062 - t2196 * t2063;
t2129 = t2143 * t2172;
t2075 = -t2129 + t2099;
t1919 = t2208 * pkin(3) - pkin(10) * t2075 - t1995;
t1996 = t2196 * t2062 + t2191 * t2063;
t2121 = -pkin(3) * t2172 - pkin(10) * t2144;
t2391 = t2143 ^ 2;
t1931 = -pkin(3) * t2391 + pkin(10) * t2202 + t2172 * t2121 + t1996;
t1848 = t2190 * t1919 + t2195 * t1931;
t2089 = -pkin(4) * t2164 - qJ(5) * t2112;
t1795 = -pkin(4) * t2300 + qJ(5) * t2233 + t2164 * t2089 + t1848;
t2262 = t2195 * t1919 - t2190 * t1931;
t2095 = t2306 * t2164;
t2395 = t2095 - t2011;
t2200 = pkin(4) * t2400 + qJ(5) * t2395 + t2262;
t2335 = t2187 * t1795 + t2185 * t2200;
t1693 = t2038 + t2335;
t1985 = pkin(5) * t2045 - pkin(11) * t2047;
t2139 = t2164 ^ 2;
t1687 = -pkin(5) * t2139 - pkin(11) * t2145 - t1985 * t2045 + t1693;
t2305 = t2192 * t2147 - t2197 * t2203;
t2381 = qJD(1) * t2192;
t2061 = -t2302 * pkin(2) - t2301 * pkin(9) + (g(3) * t2197 + t2150 * t2381) * t2186 + t2305;
t1973 = -t2202 * pkin(3) - t2391 * pkin(10) + t2144 * t2121 + t2061;
t1860 = -t2233 * pkin(4) - t2300 * qJ(5) + t2112 * t2089 + qJDD(5) + t1973;
t1924 = t2187 * t2011 + t2185 * t2233;
t2032 = t2045 * t2164;
t1892 = t2032 + t1924;
t1748 = pkin(5) * t1889 - pkin(11) * t1892 + t1860;
t1643 = t1687 * t2189 - t2194 * t1748;
t1644 = t1687 * t2194 + t1748 * t2189;
t1581 = t2189 * t1643 + t2194 * t1644;
t2394 = t2095 + t2011;
t2182 = t2186 ^ 2;
t2393 = (t2188 ^ 2 + t2182) * t2383 + qJD(2) * t2188 * t2186;
t1975 = (qJD(4) + t2164) * t2112 + t2307;
t2020 = t2022 ^ 2;
t2021 = t2024 ^ 2;
t2042 = qJD(6) + t2045;
t2041 = t2042 ^ 2;
t2043 = t2045 ^ 2;
t2044 = t2047 ^ 2;
t2111 = t2112 ^ 2;
t2142 = t2144 ^ 2;
t2168 = t2172 ^ 2;
t2390 = pkin(2) * t2192;
t1765 = t1848 * t2190 + t2195 * t2262;
t2388 = pkin(3) * t1765;
t1886 = -t1975 * t2190 + t2195 * t2395;
t2387 = pkin(3) * t1886;
t2386 = pkin(5) * t2185;
t2378 = qJD(5) * t2047;
t2311 = t2185 * t1795 - t2187 * t2200;
t2331 = 0.2e1 * t2378;
t1692 = t2311 + t2331;
t1629 = -t1692 * t2187 + t1693 * t2185;
t2377 = t1629 * t2190;
t2376 = t1629 * t2195;
t2375 = t1765 * t2191;
t2374 = t1765 * t2196;
t1855 = t1922 + t1950;
t2373 = t1855 * t2189;
t2372 = t1855 * t2194;
t2371 = t1860 * t2185;
t2370 = t1860 * t2187;
t1965 = -t1988 + t2145;
t2369 = t1965 * t2185;
t2368 = t1965 * t2187;
t2367 = t1973 * t2190;
t2366 = t1973 * t2195;
t2027 = -t2053 + t2145;
t2365 = t2027 * t2190;
t2364 = t2027 * t2195;
t2363 = t2042 * t2189;
t2362 = t2042 * t2194;
t2361 = t2061 * t2191;
t2360 = t2061 * t2196;
t2092 = t2146 - t2357;
t2359 = t2092 * t2191;
t2358 = t2092 * t2196;
t2356 = t2145 * t2192;
t2345 = t2182 * t2392;
t2171 = t2197 * t2192 * t2345;
t2148 = -t2171 + t2302;
t2355 = t2148 * t2192;
t2354 = t2148 * t2197;
t2149 = t2171 + t2302;
t2353 = t2149 * t2192;
t2352 = t2149 * t2197;
t2350 = t2164 * t2112;
t2349 = t2164 * t2185;
t2348 = t2164 * t2187;
t2347 = t2172 * t2191;
t2346 = t2172 * t2196;
t2342 = t2188 * t2192;
t1686 = t2145 * pkin(5) - t2139 * pkin(11) + (0.2e1 * qJD(5) + t1985) * t2047 + t2311;
t1683 = t2189 * t1686;
t2341 = t2190 * t2112;
t2132 = t2186 * t2206 + t2384;
t2340 = t2192 * t2132;
t1684 = t2194 * t1686;
t2339 = t2195 * t2112;
t2338 = t2197 * t2132;
t2336 = -pkin(5) * t1686 + pkin(11) * t1581;
t2183 = t2192 ^ 2;
t2184 = t2197 ^ 2;
t2334 = t2183 + t2184;
t2330 = -pkin(5) * t2187 - pkin(4);
t2327 = t2185 * t1950;
t2326 = t2187 * t1950;
t2325 = t2192 * t1988;
t2324 = t2197 * t1988;
t2323 = t2192 * t2357;
t2322 = t2197 * t2357;
t2321 = t2183 * t2345;
t2320 = t2184 * t2345;
t1925 = -t2021 - t2041;
t1806 = -t1925 * t2189 - t2372;
t2261 = -t2194 * t1924 + t2189 * t2145;
t1839 = (qJD(6) + t2042) * t2022 + t2261;
t2318 = pkin(5) * t1839 + pkin(11) * t1806 + t1683;
t1917 = -t2041 - t2020;
t1798 = t1917 * t2194 - t2402;
t1969 = t2042 * t2024;
t2309 = -t2189 * t1924 - t2194 * t2145;
t2232 = qJD(6) * t2024 - t2309;
t1835 = -t1969 - t2232;
t2317 = pkin(5) * t1835 + pkin(11) * t1798 - t1684;
t1561 = t1581 * t2185 - t1686 * t2187;
t2316 = pkin(4) * t1561 + t2336;
t2017 = -t2044 - t2139;
t1911 = t2017 * t2187 + t2369;
t2315 = pkin(4) * t1911 - t2335;
t1630 = t1692 * t2185 + t2187 * t1693;
t1575 = t1630 * t2190 + t2376;
t1628 = pkin(4) * t1629;
t2314 = pkin(3) * t1575 + t1628;
t1890 = t2308 + t2351;
t1893 = -t2032 + t1924;
t1815 = -t1890 * t2185 - t1893 * t2187;
t1817 = -t1890 * t2187 + t1893 * t2185;
t1718 = t1815 * t2195 + t1817 * t2190;
t1813 = pkin(4) * t1815;
t2313 = pkin(3) * t1718 + t1813;
t1766 = t2195 * t1848 - t2190 * t2262;
t1903 = t1995 * t2191 + t2196 * t1996;
t2304 = -t2174 * t2193 - t2198 * t2175;
t1836 = (-qJD(6) + t2042) * t2024 + t2309;
t1866 = -qJD(6) * t2022 - t2261;
t1968 = t2042 * t2022;
t1838 = t1866 + t1968;
t1753 = t1836 * t2194 + t1838 * t2189;
t1909 = t2020 + t2021;
t2299 = pkin(5) * t1909 + pkin(11) * t1753 + t1581;
t1732 = t1806 * t2185 + t1839 * t2187;
t2298 = pkin(4) * t1732 + t2318;
t1729 = t1798 * t2185 + t1835 * t2187;
t2297 = pkin(4) * t1729 + t2317;
t2083 = -t2111 - t2139;
t1993 = t2083 * t2195 + t2365;
t2296 = pkin(3) * t1993 - t1848;
t2170 = qJDD(1) * t2198 - t2193 * t2392;
t2294 = -pkin(7) * t2170 - g(3) * t2193;
t1980 = -t2139 - t2043;
t1883 = t1980 * t2185 + t2403;
t2293 = pkin(4) * t1883 - t2311;
t2138 = -t2321 - t2301;
t2113 = -t2138 * t2192 - t2354;
t2292 = pkin(8) * t2113 - t2340;
t2156 = -t2301 - t2320;
t2118 = t2156 * t2197 - t2353;
t2291 = pkin(8) * t2118 + t2338;
t2289 = t2182 * t2192 * t2319;
t1722 = t1753 * t2185 + t1909 * t2187;
t2288 = pkin(4) * t1722 + t2299;
t1562 = t1581 * t2187 + t1686 * t2185;
t1530 = t1561 * t2195 + t1562 * t2190;
t1531 = -t1561 * t2190 + t1562 * t2195;
t1507 = -t1530 * t2191 + t1531 * t2196;
t1580 = -t1643 * t2194 + t1644 * t2189;
t2287 = t1507 * t2192 - t1580 * t2197;
t1576 = t1630 * t2195 - t2377;
t1537 = -t1575 * t2191 + t1576 * t2196;
t2286 = t1537 * t2192 - t1860 * t2197;
t1723 = t1753 * t2187 - t1909 * t2185;
t1652 = t1722 * t2195 + t1723 * t2190;
t1653 = -t1722 * t2190 + t1723 * t2195;
t1589 = -t1652 * t2191 + t1653 * t2196;
t1751 = t1836 * t2189 - t1838 * t2194;
t2285 = t1589 * t2192 - t1751 * t2197;
t1837 = t1866 - t1968;
t1752 = t1835 * t2194 - t1837 * t2189;
t1949 = t2021 - t2020;
t1726 = t1752 * t2185 - t1949 * t2187;
t1727 = t1752 * t2187 + t1949 * t2185;
t1658 = t1726 * t2195 + t1727 * t2190;
t1659 = -t1726 * t2190 + t1727 * t2195;
t1595 = -t1658 * t2191 + t1659 * t2196;
t1750 = t1835 * t2189 + t1837 * t2194;
t2284 = t1595 * t2192 - t1750 * t2197;
t1730 = t1798 * t2187 - t1835 * t2185;
t1666 = t1729 * t2195 + t1730 * t2190;
t1667 = -t1729 * t2190 + t1730 * t2195;
t1599 = -t1666 * t2191 + t1667 * t2196;
t1797 = t1917 * t2189 + t2401;
t2283 = t1599 * t2192 - t1797 * t2197;
t1733 = t1806 * t2187 - t1839 * t2185;
t1668 = t1732 * t2195 + t1733 * t2190;
t1669 = -t1732 * t2190 + t1733 * t2195;
t1601 = -t1668 * t2191 + t1669 * t2196;
t1805 = t1925 * t2194 - t2373;
t2282 = t1601 * t2192 - t1805 * t2197;
t1964 = -t2021 + t2041;
t1822 = -t1964 * t2189 + t2401;
t1739 = t1822 * t2185 - t1838 * t2187;
t1741 = t1822 * t2187 + t1838 * t2185;
t1672 = t1739 * t2195 + t1741 * t2190;
t1674 = -t1739 * t2190 + t1741 * t2195;
t1605 = -t1672 * t2191 + t1674 * t2196;
t1820 = t1964 * t2194 + t2402;
t2281 = t1605 * t2192 - t1820 * t2197;
t1963 = t2020 - t2041;
t1823 = t1963 * t2194 - t2373;
t1834 = -t1969 + t2232;
t1740 = t1823 * t2185 + t1834 * t2187;
t1742 = t1823 * t2187 - t1834 * t2185;
t1673 = t1740 * t2195 + t1742 * t2190;
t1675 = -t1740 * t2190 + t1742 * t2195;
t1606 = -t1673 * t2191 + t1675 * t2196;
t1821 = t1963 * t2189 + t2372;
t2280 = t1606 * t2192 - t1821 * t2197;
t1829 = t2022 * t2362 + t2189 * t2232;
t1788 = t1829 * t2185 + t2326;
t1790 = t1829 * t2187 - t2327;
t1700 = t1788 * t2195 + t1790 * t2190;
t1702 = -t1788 * t2190 + t1790 * t2195;
t1639 = -t1700 * t2191 + t1702 * t2196;
t1828 = -t2022 * t2363 + t2194 * t2232;
t2279 = t1639 * t2192 + t1828 * t2197;
t1831 = t1866 * t2194 - t2024 * t2363;
t1789 = t1831 * t2185 - t2326;
t1791 = t1831 * t2187 + t2327;
t1701 = t1789 * t2195 + t1791 * t2190;
t1703 = -t1789 * t2190 + t1791 * t2195;
t1640 = -t1701 * t2191 + t1703 * t2196;
t1830 = t1866 * t2189 + t2024 * t2362;
t2278 = t1640 * t2192 - t1830 * t2197;
t1814 = -t1889 * t2185 + t1892 * t2187;
t1816 = -t1889 * t2187 - t1892 * t2185;
t1717 = t1814 * t2195 + t1816 * t2190;
t1719 = -t1814 * t2190 + t1816 * t2195;
t1650 = -t1717 * t2191 + t1719 * t2196;
t1987 = t2043 - t2044;
t2277 = t1650 * t2192 + t1987 * t2197;
t1720 = -t1815 * t2190 + t1817 * t2195;
t1651 = -t1718 * t2191 + t1720 * t2196;
t1930 = -t2043 - t2044;
t2276 = t1651 * t2192 - t1930 * t2197;
t1877 = (-t2022 * t2194 + t2024 * t2189) * t2042;
t1824 = t1877 * t2185 - t1922 * t2187;
t1825 = t1877 * t2187 + t1922 * t2185;
t1736 = t1824 * t2195 + t1825 * t2190;
t1737 = -t1824 * t2190 + t1825 * t2195;
t1671 = -t1736 * t2191 + t1737 * t2196;
t1876 = (-t2022 * t2189 - t2024 * t2194) * t2042;
t2275 = t1671 * t2192 - t1876 * t2197;
t1681 = t1766 * t2196 - t2375;
t2274 = t1681 * t2192 - t1973 * t2197;
t1884 = t1980 * t2187 - t2404;
t1807 = t1883 * t2195 + t1884 * t2190;
t1808 = -t1883 * t2190 + t1884 * t2195;
t1716 = -t1807 * t2191 + t1808 * t2196;
t2273 = t1716 * t2192 - t1889 * t2197;
t1912 = -t2017 * t2185 + t2368;
t1826 = t1911 * t2195 + t1912 * t2190;
t1827 = -t1911 * t2190 + t1912 * t2195;
t1745 = -t1826 * t2191 + t1827 * t2196;
t2272 = t1745 * t2192 - t1892 * t2197;
t2031 = -t2044 + t2139;
t1913 = t2031 * t2187 + t2404;
t1915 = -t2031 * t2185 + t2403;
t1840 = t1913 * t2195 + t1915 * t2190;
t1842 = -t1913 * t2190 + t1915 * t2195;
t1756 = -t1840 * t2191 + t1842 * t2196;
t2271 = t1756 * t2192 - t1893 * t2197;
t2030 = t2043 - t2139;
t1914 = t2030 * t2185 - t2368;
t1916 = t2030 * t2187 + t2369;
t1841 = t1914 * t2195 + t1916 * t2190;
t1843 = -t1914 * t2190 + t1916 * t2195;
t1757 = -t1841 * t2191 + t1843 * t2196;
t2270 = t1757 * t2192 + t1890 * t2197;
t1974 = (qJD(4) - t2164) * t2112 + t2307;
t1885 = -t1974 * t2190 + t2195 * t2394;
t1887 = -t1974 * t2195 - t2190 * t2394;
t1811 = -t1885 * t2191 + t1887 * t2196;
t2052 = t2111 - t2300;
t2269 = t1811 * t2192 - t2052 * t2197;
t1888 = -t1975 * t2195 - t2190 * t2395;
t1812 = -t1886 * t2191 + t1888 * t2196;
t2012 = -t2300 - t2111;
t2268 = t1812 * t2192 - t2012 * t2197;
t2035 = -t2139 - t2300;
t1957 = t2035 * t2190 + t2405;
t1958 = t2035 * t2195 - t2406;
t1870 = -t1957 * t2191 + t1958 * t2196;
t2267 = t1870 * t2192 - t1974 * t2197;
t1994 = -t2083 * t2190 + t2364;
t1901 = -t1993 * t2191 + t1994 * t2196;
t2266 = t1901 * t2192 - t2197 * t2394;
t2265 = t1903 * t2192 - t2061 * t2197;
t2091 = -t2111 + t2139;
t1999 = t2091 * t2195 + t2406;
t2001 = -t2091 * t2190 + t2405;
t1906 = -t1999 * t2191 + t2001 * t2196;
t2264 = t1906 * t2192 + t2197 * t2395;
t2090 = t2300 - t2139;
t2000 = t2090 * t2190 - t2364;
t2002 = t2090 * t2195 + t2365;
t1907 = -t2000 * t2191 + t2002 * t2196;
t2263 = t1907 * t2192 + t1975 * t2197;
t1902 = -t1995 * t2196 + t1996 * t2191;
t2130 = t2172 * t2144;
t2072 = t2130 + t2202;
t2074 = t2129 + t2099;
t2005 = t2072 * t2196 - t2074 * t2191;
t2114 = t2142 - t2391;
t2260 = t2005 * t2192 - t2114 * t2197;
t2073 = (-qJD(3) - t2172) * t2144 + t2209;
t2006 = t2073 * t2196 + t2075 * t2191;
t2088 = t2142 + t2391;
t2259 = t2006 * t2192 + t2088 * t2197;
t2104 = -t2168 - t2391;
t2026 = t2104 * t2196 - t2399;
t2258 = t2026 * t2192 + t2072 * t2197;
t2115 = -t2142 - t2168;
t2037 = -t2115 * t2191 + t2358;
t2076 = (qJD(3) - t2172) * t2143 + t2210;
t2257 = t2037 * t2192 + t2076 * t2197;
t2123 = -t2142 + t2168;
t2050 = -t2123 * t2191 + t2398;
t2256 = t2050 * t2192 - t2075 * t2197;
t2122 = -t2168 + t2391;
t2051 = t2122 * t2196 + t2359;
t2071 = t2130 - t2202;
t2255 = t2051 * t2192 + t2071 * t2197;
t2087 = (t2143 * t2196 - t2144 * t2191) * t2172;
t2254 = t2087 * t2192 + t2146 * t2197;
t2108 = g(3) * t2343 + t2305;
t2109 = t2197 * t2147 + t2201;
t2253 = -t2197 * t2108 + t2192 * t2109;
t2034 = t2108 * t2192 + t2109 * t2197;
t2160 = t2186 * t2240;
t2125 = t2160 + t2151;
t2159 = t2186 * t2241;
t2128 = t2152 - t2159;
t2252 = t2125 * t2197 + t2128 * t2192;
t2126 = -t2160 + t2151;
t2127 = t2152 + t2159;
t2251 = -t2126 * t2197 + t2127 * t2192;
t2250 = t2138 * t2197 - t2355;
t2155 = -t2301 + t2320;
t2249 = t2155 * t2192 + t2354;
t2154 = t2301 - t2321;
t2248 = t2154 * t2197 + t2353;
t2247 = t2156 * t2192 + t2352;
t2246 = t2174 * t2198 - t2193 * t2175;
t2245 = pkin(3) * t1530 + t2316;
t2244 = pkin(3) * t1826 + t2315;
t2243 = t2186 * t2302;
t2242 = t2186 * t2290;
t2239 = t2192 * t2053;
t2238 = t2197 * t2053;
t1878 = -t2045 * t2349 - t2187 * t2308;
t1879 = -t2045 * t2348 + t2185 * t2308;
t1799 = t1878 * t2195 + t1879 * t2190;
t1801 = -t1878 * t2190 + t1879 * t2195;
t1713 = -t1799 * t2191 + t1801 * t2196;
t2237 = t1713 * t2192 + t2324;
t1880 = t1924 * t2185 - t2047 * t2348;
t1881 = t1924 * t2187 + t2047 * t2349;
t1800 = t1880 * t2195 + t1881 * t2190;
t1802 = -t1880 * t2190 + t1881 * t2195;
t1714 = -t1800 * t2191 + t1802 * t2196;
t2236 = t1714 * t2192 - t2324;
t2066 = -t2143 * t2346 - t2191 * t2202;
t2235 = t2066 * t2192 + t2322;
t2068 = t2099 * t2196 + t2144 * t2347;
t2234 = t2068 * t2192 - t2322;
t2231 = pkin(3) * t1666 + t2297;
t2230 = pkin(3) * t1668 + t2298;
t2229 = pkin(3) * t1807 + t2293;
t2228 = pkin(3) * t1957 + t2262;
t1510 = qJ(5) * t1562 + (-pkin(11) * t2185 + t2330) * t1580;
t1520 = -qJ(5) * t1561 + (-pkin(11) * t2187 + t2386) * t1580;
t1491 = -pkin(3) * t1580 + pkin(10) * t1531 + t1510 * t2195 + t1520 * t2190;
t1493 = -pkin(10) * t1530 - t1510 * t2190 + t1520 * t2195;
t1506 = t1530 * t2196 + t1531 * t2191;
t1476 = -pkin(9) * t1506 - t1491 * t2191 + t1493 * t2196;
t1492 = -pkin(2) * t1506 - t2245;
t1505 = t1507 * t2197 + t1580 * t2192;
t2227 = pkin(8) * t1505 + t1476 * t2192 + t1492 * t2197;
t1567 = -pkin(11) * t1751 - t1580;
t1548 = qJ(5) * t1723 + t2185 * t1567 + t1751 * t2330;
t1556 = -qJ(5) * t1722 + t1567 * t2187 + t1751 * t2386;
t1511 = -pkin(3) * t1751 + pkin(10) * t1653 + t1548 * t2195 + t1556 * t2190;
t1514 = -pkin(10) * t1652 - t1548 * t2190 + t1556 * t2195;
t1588 = t1652 * t2196 + t1653 * t2191;
t1497 = -pkin(9) * t1588 - t1511 * t2191 + t1514 * t2196;
t2212 = pkin(3) * t1652 + t2288;
t1528 = -pkin(2) * t1588 - t2212;
t1569 = t1589 * t2197 + t1751 * t2192;
t2226 = pkin(8) * t1569 + t1497 * t2192 + t1528 * t2197;
t1617 = -pkin(5) * t1797 + t1643;
t1660 = -pkin(11) * t1797 + t1683;
t1558 = -pkin(4) * t1797 + qJ(5) * t1730 + t1617 * t2187 + t1660 * t2185;
t1564 = -qJ(5) * t1729 - t1617 * t2185 + t1660 * t2187;
t1521 = -pkin(3) * t1797 + pkin(10) * t1667 + t1558 * t2195 + t1564 * t2190;
t1523 = -pkin(10) * t1666 - t1558 * t2190 + t1564 * t2195;
t1598 = t1666 * t2196 + t1667 * t2191;
t1500 = -pkin(9) * t1598 - t1521 * t2191 + t1523 * t2196;
t1540 = -pkin(2) * t1598 - t2231;
t1584 = t1599 * t2197 + t1797 * t2192;
t2225 = pkin(8) * t1584 + t1500 * t2192 + t1540 * t2197;
t1619 = -pkin(5) * t1805 + t1644;
t1661 = -pkin(11) * t1805 + t1684;
t1559 = -pkin(4) * t1805 + qJ(5) * t1733 + t1619 * t2187 + t1661 * t2185;
t1565 = -qJ(5) * t1732 - t1619 * t2185 + t1661 * t2187;
t1522 = -pkin(3) * t1805 + pkin(10) * t1669 + t1559 * t2195 + t1565 * t2190;
t1524 = -pkin(10) * t1668 - t1559 * t2190 + t1565 * t2195;
t1600 = t1668 * t2196 + t1669 * t2191;
t1501 = -pkin(9) * t1600 - t1522 * t2191 + t1524 * t2196;
t1541 = -pkin(2) * t1600 - t2230;
t1587 = t1601 * t2197 + t1805 * t2192;
t2224 = pkin(8) * t1587 + t1501 * t2192 + t1541 * t2197;
t1621 = -pkin(4) * t1860 + qJ(5) * t1630;
t1533 = -pkin(3) * t1860 + pkin(10) * t1576 - qJ(5) * t2377 + t1621 * t2195;
t1535 = -pkin(10) * t1575 - qJ(5) * t2376 - t1621 * t2190;
t1536 = t1575 * t2196 + t1576 * t2191;
t1503 = -pkin(9) * t1536 - t1533 * t2191 + t1535 * t2196;
t1515 = -pkin(2) * t1536 - t2314;
t1534 = t1537 * t2197 + t1860 * t2192;
t2223 = pkin(8) * t1534 + t1503 * t2192 + t1515 * t2197;
t1614 = -pkin(4) * t1930 + qJ(5) * t1817 + t1630;
t1616 = -qJ(5) * t1815 - t1629;
t1555 = -pkin(3) * t1930 + pkin(10) * t1720 + t1614 * t2195 + t1616 * t2190;
t1557 = -pkin(10) * t1718 - t1614 * t2190 + t1616 * t2195;
t1649 = t1718 * t2196 + t1720 * t2191;
t1517 = -pkin(9) * t1649 - t1555 * t2191 + t1557 * t2196;
t1602 = -pkin(2) * t1649 - t2313;
t1632 = t1651 * t2197 + t1930 * t2192;
t2222 = pkin(8) * t1632 + t1517 * t2192 + t1602 * t2197;
t1746 = -pkin(4) * t1889 + qJ(5) * t1884 - t2370;
t1780 = -qJ(5) * t1883 + t2371;
t1646 = -pkin(3) * t1889 + pkin(10) * t1808 + t1746 * t2195 + t1780 * t2190;
t1657 = -pkin(10) * t1807 - t1746 * t2190 + t1780 * t2195;
t1715 = t1807 * t2196 + t1808 * t2191;
t1568 = -pkin(9) * t1715 - t1646 * t2191 + t1657 * t2196;
t1615 = -pkin(2) * t1715 - t2229 + t2331;
t1688 = t1716 * t2197 + t1889 * t2192;
t2221 = pkin(8) * t1688 + t1568 * t2192 + t1615 * t2197;
t1760 = -pkin(4) * t1892 + qJ(5) * t1912 + t2371;
t1804 = -qJ(5) * t1911 + t2370;
t1654 = -pkin(3) * t1892 + pkin(10) * t1827 + t1760 * t2195 + t1804 * t2190;
t1676 = -pkin(10) * t1826 - t1760 * t2190 + t1804 * t2195;
t1744 = t1826 * t2196 + t1827 * t2191;
t1578 = -pkin(9) * t1744 - t1654 * t2191 + t1676 * t2196;
t1622 = -pkin(2) * t1744 + t2038 - t2244;
t1707 = t1745 * t2197 + t1892 * t2192;
t2220 = pkin(8) * t1707 + t1578 * t2192 + t1622 * t2197;
t1680 = t1766 * t2191 + t2374;
t1738 = -pkin(3) * t1973 + pkin(10) * t1766;
t1612 = -pkin(9) * t1680 - pkin(10) * t2374 - t1738 * t2191;
t1631 = -pkin(2) * t1680 - t2388;
t1677 = t1681 * t2197 + t1973 * t2192;
t2219 = pkin(8) * t1677 + t1612 * t2192 + t1631 * t2197;
t1706 = -pkin(3) * t2012 + pkin(10) * t1888 + t1766;
t1724 = -pkin(10) * t1886 - t1765;
t1810 = t1886 * t2196 + t1888 * t2191;
t1623 = -pkin(9) * t1810 - t1706 * t2191 + t1724 * t2196;
t1761 = -pkin(2) * t1810 - t2387;
t1772 = t1812 * t2197 + t2012 * t2192;
t2218 = pkin(8) * t1772 + t1623 * t2192 + t1761 * t2197;
t1845 = -pkin(3) * t1974 + pkin(10) * t1958 - t2366;
t1869 = t1957 * t2196 + t1958 * t2191;
t1875 = -pkin(10) * t1957 + t2367;
t1734 = -pkin(9) * t1869 - t1845 * t2191 + t1875 * t2196;
t1762 = -pkin(2) * t1869 - t2228;
t1844 = t1870 * t2197 + t1974 * t2192;
t2217 = pkin(8) * t1844 + t1734 * t2192 + t1762 * t2197;
t1849 = -pkin(3) * t2394 + pkin(10) * t1994 + t2367;
t1897 = -pkin(10) * t1993 + t2366;
t1900 = t1993 * t2196 + t1994 * t2191;
t1743 = -pkin(9) * t1900 - t1849 * t2191 + t1897 * t2196;
t1767 = -pkin(2) * t1900 - t2296;
t1851 = t1901 * t2197 + t2192 * t2394;
t2216 = pkin(8) * t1851 + t1743 * t2192 + t1767 * t2197;
t2025 = t2104 * t2191 + t2398;
t1929 = -pkin(2) * t2025 + t1995;
t1981 = -pkin(9) * t2025 + t2361;
t1986 = t2026 * t2197 - t2072 * t2192;
t2215 = pkin(8) * t1986 + t1929 * t2197 + t1981 * t2192;
t2036 = t2115 * t2196 + t2359;
t1934 = -pkin(2) * t2036 + t1996;
t1989 = -pkin(9) * t2036 + t2360;
t1990 = t2037 * t2197 - t2076 * t2192;
t2214 = pkin(8) * t1990 + t1934 * t2197 + t1989 * t2192;
t2084 = t2126 * t2192 + t2127 * t2197;
t2213 = pkin(8) * t2084 + t2034;
t2004 = t2073 * t2191 - t2075 * t2196;
t1859 = -pkin(9) * t2004 - t1902;
t1948 = t2006 * t2197 - t2088 * t2192;
t2211 = pkin(8) * t1948 + t1859 * t2192 - t2004 * t2389;
t1863 = t1903 * t2197 + t2061 * t2192;
t2207 = pkin(8) * t1863 + t1902 * t2295;
t1959 = -t2095 * t2190 + t2195 * t2233;
t1960 = -t2095 * t2195 - t2190 * t2233;
t1873 = -t1959 * t2191 + t1960 * t2196;
t2205 = t2192 * t1873 + t2238;
t1961 = t2011 * t2190 - t2164 * t2339;
t1962 = t2011 * t2195 + t2164 * t2341;
t1874 = -t1961 * t2191 + t1962 * t2196;
t2204 = t2192 * t1874 - t2238;
t2169 = t2193 * qJDD(1) + t2198 * t2392;
t2166 = t2188 * t2302;
t2158 = t2334 * t2345;
t2157 = (t2183 - t2184) * t2345;
t2153 = -pkin(7) * t2169 + g(3) * t2198;
t2134 = t2188 * t2197 * t2145;
t2133 = t2145 * t2343;
t2131 = t2312 * t2334 * t2383;
t2124 = (t2332 + (0.2e1 * qJD(2) + t2382) * t2380) * t2186;
t2120 = t2197 * t2151 - t2183 * t2242;
t2119 = -t2192 * t2152 - t2184 * t2242;
t2117 = t2155 * t2197 - t2355;
t2116 = -t2154 * t2192 + t2352;
t2103 = (t2188 * t2151 + t2380 * t2393) * t2192;
t2102 = t2151 * t2344 + t2289;
t2101 = t2152 * t2343 - t2289;
t2100 = (t2188 * t2152 - t2381 * t2393) * t2197;
t2086 = (t2143 * t2191 + t2144 * t2196) * t2172;
t2085 = -t2125 * t2192 + t2128 * t2197;
t2082 = t2186 * t2128 + t2188 * t2247;
t2081 = -t2186 * t2127 + t2188 * t2249;
t2080 = -t2186 * t2126 + t2188 * t2248;
t2079 = -t2188 * t2128 + t2186 * t2247;
t2078 = t2188 * t2127 + t2186 * t2249;
t2077 = t2188 * t2126 + t2186 * t2248;
t2070 = -t2186 * t2124 + t2188 * t2250;
t2069 = t2188 * t2124 + t2186 * t2250;
t2067 = t2099 * t2191 - t2144 * t2346;
t2065 = -t2143 * t2347 + t2196 * t2202;
t2064 = t2087 * t2197 - t2146 * t2192;
t2060 = -t2186 * t2157 + t2188 * t2252;
t2059 = t2186 * t2158 + t2188 * t2251;
t2058 = t2188 * t2157 + t2186 * t2252;
t2057 = -t2188 * t2158 + t2186 * t2251;
t2049 = t2122 * t2191 - t2358;
t2048 = t2123 * t2196 + t2399;
t2040 = -0.2e1 * t2378;
t2039 = 0.2e1 * t2379;
t2019 = (t2195 * t2306 - t2341) * t2164;
t2018 = (t2190 * t2306 + t2339) * t2164;
t2016 = t2068 * t2197 + t2323;
t2015 = t2066 * t2197 - t2323;
t2014 = t2186 * t2132 + t2188 * t2253;
t2013 = -t2188 * t2132 + t2186 * t2253;
t2008 = -t2186 * t2086 + t2188 * t2254;
t2007 = t2188 * t2086 + t2186 * t2254;
t2003 = t2072 * t2191 + t2074 * t2196;
t1998 = t2051 * t2197 - t2071 * t2192;
t1997 = t2050 * t2197 + t2075 * t2192;
t1991 = -t2340 + (-t2079 * t2186 - t2082 * t2188) * pkin(8);
t1984 = -t2338 + (-t2069 * t2186 - t2070 * t2188) * pkin(8);
t1983 = -pkin(1) * t2079 + t2186 * t2108 + t2188 * t2291;
t1982 = pkin(1) * t2082 - t2188 * t2108 + t2186 * t2291;
t1972 = t2005 * t2197 + t2114 * t2192;
t1971 = -pkin(1) * t2069 + t2186 * t2109 + t2188 * t2292;
t1970 = pkin(1) * t2070 - t2188 * t2109 + t2186 * t2292;
t1956 = (t2045 * t2187 - t2047 * t2185) * t2164;
t1955 = (t2045 * t2185 + t2047 * t2187) * t2164;
t1954 = -t2186 * t2067 + t2188 * t2234;
t1953 = -t2186 * t2065 + t2188 * t2235;
t1952 = t2188 * t2067 + t2186 * t2234;
t1951 = t2188 * t2065 + t2186 * t2235;
t1947 = -t2018 * t2191 + t2019 * t2196;
t1946 = t2018 * t2196 + t2019 * t2191;
t1945 = pkin(1) * t2014 + t2034 * t2385;
t1944 = pkin(8) * t2034 * t2188 - pkin(1) * t2013;
t1943 = t1947 * t2197 - t2356;
t1942 = -pkin(1) * t2057 + t2188 * t2213;
t1941 = pkin(1) * t2059 + t2186 * t2213;
t1940 = pkin(2) * t2076 + pkin(9) * t2037 + t2361;
t1939 = -t2186 * t2049 + t2188 * t2255;
t1938 = -t2186 * t2048 + t2188 * t2256;
t1937 = t2188 * t2049 + t2186 * t2255;
t1936 = t2188 * t2048 + t2186 * t2256;
t1935 = (-t2013 * t2186 - t2014 * t2188) * pkin(8);
t1933 = pkin(2) * t2072 + pkin(9) * t2026 - t2360;
t1932 = (-t2057 * t2186 - t2059 * t2188) * pkin(8) - t2253;
t1927 = -t2186 * t2036 + t2188 * t2257;
t1926 = t2188 * t2036 + t2186 * t2257;
t1921 = -t2186 * t2025 + t2188 * t2258;
t1920 = t2188 * t2025 + t2186 * t2258;
t1905 = t2000 * t2196 + t2002 * t2191;
t1904 = t1999 * t2196 + t2001 * t2191;
t1899 = -t2186 * t2003 + t2188 * t2260;
t1898 = t2188 * t2003 + t2186 * t2260;
t1896 = -t2186 * t2004 + t2188 * t2259;
t1895 = t2188 * t2004 + t2186 * t2259;
t1872 = t1961 * t2196 + t1962 * t2191;
t1871 = t1959 * t2196 + t1960 * t2191;
t1868 = -t1955 * t2190 + t1956 * t2195;
t1867 = t1955 * t2195 + t1956 * t2190;
t1865 = -pkin(2) * t2061 + pkin(9) * t1903;
t1862 = -t1946 * t2186 + t1947 * t2342 + t2134;
t1861 = t1946 * t2188 + t1947 * t2344 + t2133;
t1858 = t2197 * t1874 + t2239;
t1857 = t2197 * t1873 - t2239;
t1853 = t1907 * t2197 - t1975 * t2192;
t1852 = t1906 * t2197 - t2192 * t2395;
t1850 = pkin(2) * t2088 + pkin(9) * t2006 + t1903;
t1819 = -t2186 * t1902 + t2188 * t2265;
t1818 = t2188 * t1902 + t2186 * t2265;
t1809 = t1885 * t2196 + t1887 * t2191;
t1793 = -t1867 * t2191 + t1868 * t2196;
t1792 = t1867 * t2196 + t1868 * t2191;
t1787 = -t2186 * t1905 + t2188 * t2263;
t1786 = -t2186 * t1904 + t2188 * t2264;
t1785 = t2188 * t1905 + t2186 * t2263;
t1784 = t2188 * t1904 + t2186 * t2264;
t1783 = t1793 * t2197 - t2356;
t1779 = t1811 * t2197 + t2052 * t2192;
t1778 = -t2186 * t1900 + t2188 * t2266;
t1777 = t2188 * t1900 + t2186 * t2266;
t1776 = -t2186 * t1872 + t2188 * t2204;
t1775 = -t2186 * t1871 + t2188 * t2205;
t1774 = t2188 * t1872 + t2186 * t2204;
t1773 = t2188 * t1871 + t2186 * t2205;
t1771 = -t2192 * t1934 + t2197 * t1989 + (-t1926 * t2186 - t1927 * t2188) * pkin(8);
t1770 = -t2186 * t1869 + t2188 * t2267;
t1769 = t2188 * t1869 + t2186 * t2267;
t1768 = -t2192 * t1929 + t2197 * t1981 + (-t1920 * t2186 - t1921 * t2188) * pkin(8);
t1764 = -pkin(1) * t1926 - t2186 * t1940 + t2188 * t2214;
t1763 = pkin(1) * t1927 + t2188 * t1940 + t2186 * t2214;
t1759 = -pkin(1) * t1920 - t2186 * t1933 + t2188 * t2215;
t1758 = pkin(1) * t1921 + t2188 * t1933 + t2186 * t2215;
t1755 = t1841 * t2196 + t1843 * t2191;
t1754 = t1840 * t2196 + t1842 * t2191;
t1735 = t2004 * t2390 + t2197 * t1859 + (-t1895 * t2186 - t1896 * t2188) * pkin(8);
t1725 = -pkin(2) * t2394 + pkin(9) * t1901 + t1849 * t2196 + t1897 * t2191;
t1712 = t1800 * t2196 + t1802 * t2191;
t1711 = t1799 * t2196 + t1801 * t2191;
t1710 = -pkin(2) * t1974 + pkin(9) * t1870 + t1845 * t2196 + t1875 * t2191;
t1709 = t1757 * t2197 - t1890 * t2192;
t1708 = t1756 * t2197 + t1893 * t2192;
t1705 = -t2186 * t1809 + t2188 * t2269;
t1704 = t2188 * t1809 + t2186 * t2269;
t1699 = -t1792 * t2186 + t1793 * t2342 + t2134;
t1698 = t1792 * t2188 + t1793 * t2344 + t2133;
t1697 = -t2186 * t1810 + t2188 * t2268;
t1696 = t2188 * t1810 + t2186 * t2268;
t1695 = t1714 * t2197 + t2325;
t1694 = t1713 * t2197 - t2325;
t1690 = -pkin(1) * t1895 - t2186 * t1850 + t2188 * t2211;
t1689 = pkin(1) * t1896 + t2188 * t1850 + t2186 * t2211;
t1682 = (-pkin(9) * t2197 + t2390) * t1902 + (-t1818 * t2186 - t1819 * t2188) * pkin(8);
t1679 = -pkin(1) * t1818 - t2186 * t1865 + t2188 * t2207;
t1678 = pkin(1) * t1819 + t2188 * t1865 + t2186 * t2207;
t1670 = t1736 * t2196 + t1737 * t2191;
t1665 = -t2186 * t1755 + t2188 * t2270;
t1664 = -t2186 * t1754 + t2188 * t2271;
t1663 = t2188 * t1755 + t2186 * t2270;
t1662 = t2188 * t1754 + t2186 * t2271;
t1656 = -t2186 * t1744 + t2188 * t2272;
t1655 = t2188 * t1744 + t2186 * t2272;
t1648 = t1717 * t2196 + t1719 * t2191;
t1647 = t1671 * t2197 + t1876 * t2192;
t1645 = t1650 * t2197 - t1987 * t2192;
t1638 = t1701 * t2196 + t1703 * t2191;
t1637 = t1700 * t2196 + t1702 * t2191;
t1636 = -t2186 * t1712 + t2188 * t2236;
t1635 = -t2186 * t1711 + t2188 * t2237;
t1634 = t2188 * t1712 + t2186 * t2236;
t1633 = t2188 * t1711 + t2186 * t2237;
t1627 = -t2186 * t1715 + t2188 * t2273;
t1626 = t2188 * t1715 + t2186 * t2273;
t1625 = t1640 * t2197 + t1830 * t2192;
t1624 = t1639 * t2197 - t1828 * t2192;
t1620 = -pkin(2) * t2012 + pkin(9) * t1812 + t1706 * t2196 + t1724 * t2191;
t1618 = t2197 * t1743 - t2192 * t1767 + (-t1777 * t2186 - t1778 * t2188) * pkin(8);
t1613 = t2197 * t1734 - t2192 * t1762 + (-t1769 * t2186 - t1770 * t2188) * pkin(8);
t1611 = -t2186 * t1680 + t2188 * t2274;
t1610 = t2188 * t1680 + t2186 * t2274;
t1609 = -pkin(2) * t1973 + pkin(9) * t1681 - pkin(10) * t2375 + t1738 * t2196;
t1608 = -pkin(1) * t1777 - t2186 * t1725 + t2188 * t2216;
t1607 = pkin(1) * t1778 + t2188 * t1725 + t2186 * t2216;
t1604 = t1673 * t2196 + t1675 * t2191;
t1603 = t1672 * t2196 + t1674 * t2191;
t1597 = -pkin(1) * t1769 - t2186 * t1710 + t2188 * t2217;
t1596 = pkin(1) * t1770 + t2188 * t1710 + t2186 * t2217;
t1594 = t1658 * t2196 + t1659 * t2191;
t1593 = -t2186 * t1670 + t2188 * t2275;
t1592 = t2188 * t1670 + t2186 * t2275;
t1591 = t1606 * t2197 + t1821 * t2192;
t1590 = t1605 * t2197 + t1820 * t2192;
t1586 = -t2186 * t1648 + t2188 * t2277;
t1585 = t2188 * t1648 + t2186 * t2277;
t1583 = -t2186 * t1649 + t2188 * t2276;
t1582 = t2188 * t1649 + t2186 * t2276;
t1577 = t1595 * t2197 + t1750 * t2192;
t1574 = -pkin(2) * t1892 + pkin(9) * t1745 + t1654 * t2196 + t1676 * t2191;
t1573 = -t2186 * t1638 + t2188 * t2278;
t1572 = -t2186 * t1637 + t2188 * t2279;
t1571 = t2188 * t1638 + t2186 * t2278;
t1570 = t2188 * t1637 + t2186 * t2279;
t1566 = -pkin(2) * t1889 + pkin(9) * t1716 + t1646 * t2196 + t1657 * t2191;
t1563 = t2197 * t1623 - t2192 * t1761 + (-t1696 * t2186 - t1697 * t2188) * pkin(8);
t1554 = -t2186 * t1604 + t2188 * t2280;
t1553 = -t2186 * t1603 + t2188 * t2281;
t1552 = t2188 * t1604 + t2186 * t2280;
t1551 = t2188 * t1603 + t2186 * t2281;
t1550 = -pkin(1) * t1696 - t2186 * t1620 + t2188 * t2218;
t1549 = pkin(1) * t1697 + t2188 * t1620 + t2186 * t2218;
t1547 = -t2186 * t1600 + t2188 * t2282;
t1546 = t2188 * t1600 + t2186 * t2282;
t1545 = -t2186 * t1598 + t2188 * t2283;
t1544 = t2188 * t1598 + t2186 * t2283;
t1543 = -t2186 * t1594 + t2188 * t2284;
t1542 = t2188 * t1594 + t2186 * t2284;
t1539 = -t2186 * t1588 + t2188 * t2285;
t1538 = t2188 * t1588 + t2186 * t2285;
t1532 = t2197 * t1578 - t2192 * t1622 + (-t1655 * t2186 - t1656 * t2188) * pkin(8);
t1529 = t2197 * t1612 - t2192 * t1631 + (-t1610 * t2186 - t1611 * t2188) * pkin(8);
t1527 = t2197 * t1568 - t2192 * t1615 + (-t1626 * t2186 - t1627 * t2188) * pkin(8);
t1526 = -pkin(1) * t1610 - t2186 * t1609 + t2188 * t2219;
t1525 = pkin(1) * t1611 + t2188 * t1609 + t2186 * t2219;
t1519 = -pkin(1) * t1655 - t2186 * t1574 + t2188 * t2220;
t1518 = pkin(1) * t1656 + t2188 * t1574 + t2186 * t2220;
t1516 = -pkin(2) * t1930 + pkin(9) * t1651 + t1555 * t2196 + t1557 * t2191;
t1513 = -pkin(1) * t1626 - t2186 * t1566 + t2188 * t2221;
t1512 = pkin(1) * t1627 + t2188 * t1566 + t2186 * t2221;
t1509 = -t2186 * t1536 + t2188 * t2286;
t1508 = t2188 * t1536 + t2186 * t2286;
t1504 = t2197 * t1517 - t2192 * t1602 + (-t1582 * t2186 - t1583 * t2188) * pkin(8);
t1502 = -pkin(2) * t1860 + pkin(9) * t1537 + t1533 * t2196 + t1535 * t2191;
t1499 = -pkin(2) * t1805 + pkin(9) * t1601 + t1522 * t2196 + t1524 * t2191;
t1498 = -pkin(2) * t1797 + pkin(9) * t1599 + t1521 * t2196 + t1523 * t2191;
t1496 = -pkin(2) * t1751 + pkin(9) * t1589 + t1511 * t2196 + t1514 * t2191;
t1495 = -pkin(1) * t1582 - t2186 * t1516 + t2188 * t2222;
t1494 = pkin(1) * t1583 + t2188 * t1516 + t2186 * t2222;
t1490 = -t2186 * t1506 + t2188 * t2287;
t1489 = t2188 * t1506 + t2186 * t2287;
t1488 = t2197 * t1501 - t2192 * t1541 + (-t1546 * t2186 - t1547 * t2188) * pkin(8);
t1487 = t2197 * t1500 - t2192 * t1540 + (-t1544 * t2186 - t1545 * t2188) * pkin(8);
t1486 = t2197 * t1497 - t2192 * t1528 + (-t1538 * t2186 - t1539 * t2188) * pkin(8);
t1485 = t2197 * t1503 - t2192 * t1515 + (-t1508 * t2186 - t1509 * t2188) * pkin(8);
t1484 = -pkin(1) * t1546 - t2186 * t1499 + t2188 * t2224;
t1483 = pkin(1) * t1547 + t2188 * t1499 + t2186 * t2224;
t1482 = -pkin(1) * t1544 - t2186 * t1498 + t2188 * t2225;
t1481 = pkin(1) * t1545 + t2188 * t1498 + t2186 * t2225;
t1480 = -pkin(1) * t1508 - t2186 * t1502 + t2188 * t2223;
t1479 = pkin(1) * t1509 + t2188 * t1502 + t2186 * t2223;
t1478 = -pkin(1) * t1538 - t2186 * t1496 + t2188 * t2226;
t1477 = pkin(1) * t1539 + t2188 * t1496 + t2186 * t2226;
t1475 = -pkin(2) * t1580 + pkin(9) * t1507 + t1491 * t2196 + t1493 * t2191;
t1474 = t2197 * t1476 - t2192 * t1492 + (-t1489 * t2186 - t1490 * t2188) * pkin(8);
t1473 = -pkin(1) * t1489 - t2186 * t1475 + t2188 * t2227;
t1472 = pkin(1) * t1490 + t2188 * t1475 + t2186 * t2227;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2170, 0, -t2169, 0, t2294, -t2153, -t2246, -pkin(7) * t2246, -t2193 * t2103 + t2120 * t2198, -t2193 * t2060 + t2085 * t2198, -t2193 * t2080 + t2116 * t2198, -t2193 * t2100 + t2119 * t2198, -t2193 * t2081 + t2117 * t2198, t2198 * t2131 + t2193 * t2243, t2198 * t1991 - t2193 * t1983 - pkin(7) * (t2082 * t2198 + t2193 * t2118), t2198 * t1984 - t2193 * t1971 - pkin(7) * (t2070 * t2198 + t2193 * t2113), t2198 * t1932 - t2193 * t1942 - pkin(7) * (t2059 * t2198 + t2193 * t2084), t2198 * t1935 - t2193 * t1944 - pkin(7) * (t2014 * t2198 + t2193 * t2034), -t2193 * t1954 + t2016 * t2198, -t2193 * t1899 + t1972 * t2198, -t2193 * t1938 + t1997 * t2198, -t2193 * t1953 + t2015 * t2198, -t2193 * t1939 + t1998 * t2198, -t2193 * t2008 + t2064 * t2198, t2198 * t1768 - t2193 * t1759 - pkin(7) * (t1921 * t2198 + t2193 * t1986), t2198 * t1771 - t2193 * t1764 - pkin(7) * (t1927 * t2198 + t2193 * t1990), t2198 * t1735 - t2193 * t1690 - pkin(7) * (t1896 * t2198 + t2193 * t1948), t2198 * t1682 - t2193 * t1679 - pkin(7) * (t1819 * t2198 + t2193 * t1863), -t2193 * t1776 + t1858 * t2198, -t2193 * t1705 + t1779 * t2198, -t2193 * t1786 + t1852 * t2198, -t2193 * t1775 + t1857 * t2198, -t2193 * t1787 + t1853 * t2198, -t2193 * t1862 + t1943 * t2198, t2198 * t1613 - t2193 * t1597 - pkin(7) * (t1770 * t2198 + t2193 * t1844), t2198 * t1618 - t2193 * t1608 - pkin(7) * (t1778 * t2198 + t2193 * t1851), t2198 * t1563 - t2193 * t1550 - pkin(7) * (t1697 * t2198 + t2193 * t1772), t2198 * t1529 - t2193 * t1526 - pkin(7) * (t1611 * t2198 + t2193 * t1677), -t2193 * t1636 + t1695 * t2198, -t2193 * t1586 + t1645 * t2198, -t2193 * t1664 + t1708 * t2198, -t2193 * t1635 + t1694 * t2198, -t2193 * t1665 + t1709 * t2198, -t2193 * t1699 + t1783 * t2198, t2198 * t1527 - t2193 * t1513 - pkin(7) * (t1627 * t2198 + t2193 * t1688), t2198 * t1532 - t2193 * t1519 - pkin(7) * (t1656 * t2198 + t2193 * t1707), t2198 * t1504 - t2193 * t1495 - pkin(7) * (t1583 * t2198 + t2193 * t1632), t2198 * t1485 - t2193 * t1480 - pkin(7) * (t1509 * t2198 + t2193 * t1534), -t2193 * t1573 + t1625 * t2198, -t2193 * t1543 + t1577 * t2198, -t2193 * t1553 + t1590 * t2198, -t2193 * t1572 + t1624 * t2198, -t2193 * t1554 + t1591 * t2198, -t2193 * t1593 + t1647 * t2198, t2198 * t1487 - t2193 * t1482 - pkin(7) * (t1545 * t2198 + t2193 * t1584), t2198 * t1488 - t2193 * t1484 - pkin(7) * (t1547 * t2198 + t2193 * t1587), t2198 * t1486 - t2193 * t1478 - pkin(7) * (t1539 * t2198 + t2193 * t1569), t2198 * t1474 - t2193 * t1473 - pkin(7) * (t1490 * t2198 + t2193 * t1505); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2169, 0, t2170, 0, t2153, t2294, t2304, pkin(7) * t2304, t2103 * t2198 + t2193 * t2120, t2060 * t2198 + t2193 * t2085, t2080 * t2198 + t2193 * t2116, t2100 * t2198 + t2193 * t2119, t2081 * t2198 + t2193 * t2117, t2193 * t2131 - t2198 * t2243, t2193 * t1991 + t2198 * t1983 + pkin(7) * (-t2193 * t2082 + t2118 * t2198), t2193 * t1984 + t2198 * t1971 + pkin(7) * (-t2193 * t2070 + t2113 * t2198), t2193 * t1932 + t2198 * t1942 + pkin(7) * (-t2193 * t2059 + t2084 * t2198), t2193 * t1935 + t2198 * t1944 + pkin(7) * (-t2193 * t2014 + t2034 * t2198), t1954 * t2198 + t2193 * t2016, t1899 * t2198 + t2193 * t1972, t1938 * t2198 + t2193 * t1997, t1953 * t2198 + t2193 * t2015, t1939 * t2198 + t2193 * t1998, t2008 * t2198 + t2193 * t2064, t2193 * t1768 + t2198 * t1759 + pkin(7) * (-t2193 * t1921 + t1986 * t2198), t2193 * t1771 + t2198 * t1764 + pkin(7) * (-t2193 * t1927 + t1990 * t2198), t2193 * t1735 + t2198 * t1690 + pkin(7) * (-t2193 * t1896 + t1948 * t2198), t2193 * t1682 + t2198 * t1679 + pkin(7) * (-t2193 * t1819 + t1863 * t2198), t1776 * t2198 + t2193 * t1858, t1705 * t2198 + t2193 * t1779, t1786 * t2198 + t2193 * t1852, t1775 * t2198 + t2193 * t1857, t1787 * t2198 + t2193 * t1853, t1862 * t2198 + t2193 * t1943, t2193 * t1613 + t2198 * t1597 + pkin(7) * (-t2193 * t1770 + t1844 * t2198), t2193 * t1618 + t2198 * t1608 + pkin(7) * (-t2193 * t1778 + t1851 * t2198), t2193 * t1563 + t2198 * t1550 + pkin(7) * (-t2193 * t1697 + t1772 * t2198), t2193 * t1529 + t2198 * t1526 + pkin(7) * (-t2193 * t1611 + t1677 * t2198), t1636 * t2198 + t2193 * t1695, t1586 * t2198 + t2193 * t1645, t1664 * t2198 + t2193 * t1708, t1635 * t2198 + t2193 * t1694, t1665 * t2198 + t2193 * t1709, t1699 * t2198 + t2193 * t1783, t2193 * t1527 + t2198 * t1513 + pkin(7) * (-t2193 * t1627 + t1688 * t2198), t2193 * t1532 + t2198 * t1519 + pkin(7) * (-t2193 * t1656 + t1707 * t2198), t2193 * t1504 + t2198 * t1495 + pkin(7) * (-t2193 * t1583 + t1632 * t2198), t2193 * t1485 + t2198 * t1480 + pkin(7) * (-t2193 * t1509 + t1534 * t2198), t1573 * t2198 + t2193 * t1625, t1543 * t2198 + t2193 * t1577, t1553 * t2198 + t2193 * t1590, t1572 * t2198 + t2193 * t1624, t1554 * t2198 + t2193 * t1591, t1593 * t2198 + t2193 * t1647, t2193 * t1487 + t2198 * t1482 + pkin(7) * (-t2193 * t1545 + t1584 * t2198), t2193 * t1488 + t2198 * t1484 + pkin(7) * (-t2193 * t1547 + t1587 * t2198), t2193 * t1486 + t2198 * t1478 + pkin(7) * (-t2193 * t1539 + t1569 * t2198), t2193 * t1474 + t2198 * t1473 + pkin(7) * (-t2193 * t1490 + t1505 * t2198); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2174, t2175, 0, 0, t2102, t2058, t2077, t2101, t2078, t2166, t1982, t1970, t1941, t1945, t1952, t1898, t1936, t1951, t1937, t2007, t1758, t1763, t1689, t1678, t1774, t1704, t1784, t1773, t1785, t1861, t1596, t1607, t1549, t1525, t1634, t1585, t1662, t1633, t1663, t1698, t1512, t1518, t1494, t1479, t1571, t1542, t1551, t1570, t1552, t1592, t1481, t1483, t1477, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2392, 0, 0, -g(3), -t2174, 0, t2120, t2085, t2116, t2119, t2117, t2131, t1991, t1984, t1932, t1935, t2016, t1972, t1997, t2015, t1998, t2064, t1768, t1771, t1735, t1682, t1858, t1779, t1852, t1857, t1853, t1943, t1613, t1618, t1563, t1529, t1695, t1645, t1708, t1694, t1709, t1783, t1527, t1532, t1504, t1485, t1625, t1577, t1590, t1624, t1591, t1647, t1487, t1488, t1486, t1474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2392, 0, qJDD(1), 0, g(3), 0, -t2175, 0, t2103, t2060, t2080, t2100, t2081, -t2243, t1983, t1971, t1942, t1944, t1954, t1899, t1938, t1953, t1939, t2008, t1759, t1764, t1690, t1679, t1776, t1705, t1786, t1775, t1787, t1862, t1597, t1608, t1550, t1526, t1636, t1586, t1664, t1635, t1665, t1699, t1513, t1519, t1495, t1480, t1573, t1543, t1553, t1572, t1554, t1593, t1482, t1484, t1478, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2174, t2175, 0, 0, t2102, t2058, t2077, t2101, t2078, t2166, t1982, t1970, t1941, t1945, t1952, t1898, t1936, t1951, t1937, t2007, t1758, t1763, t1689, t1678, t1774, t1704, t1784, t1773, t1785, t1861, t1596, t1607, t1549, t1525, t1634, t1585, t1662, t1633, t1663, t1698, t1512, t1518, t1494, t1479, t1571, t1542, t1551, t1570, t1552, t1592, t1481, t1483, t1477, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2151, t2128, t2149, -t2160, t2155, t2160, 0, -t2132, t2108, 0, t2068, t2005, t2050, t2066, t2051, t2087, t1981, t1989, t1859, -pkin(9) * t1902, t1874, t1811, t1906, t1873, t1907, t1947, t1734, t1743, t1623, t1612, t1714, t1650, t1756, t1713, t1757, t1793, t1568, t1578, t1517, t1503, t1640, t1595, t1605, t1639, t1606, t1671, t1500, t1501, t1497, t1476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2159, t2125, t2154, t2152, t2148, -t2159, t2132, 0, t2109, 0, -t2357, -t2114, -t2075, t2357, t2071, t2146, t1929, t1934, -pkin(2) * t2004, -pkin(2) * t1902, -t2053, -t2052, t2395, t2053, t1975, t2145, t1762, t1767, t1761, t1631, -t1988, t1987, -t1893, t1988, t1890, t2145, t1615, t1622, t1602, t1515, -t1830, -t1750, -t1820, t1828, -t1821, -t1876, t1540, t1541, t1528, t1492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2171, t2157, t2126, t2171, t2127, t2302, -t2108, -t2109, 0, 0, t2067, t2003, t2048, t2065, t2049, t2086, t1933, t1940, t1850, t1865, t1872, t1809, t1904, t1871, t1905, t1946, t1710, t1725, t1620, t1609, t1712, t1648, t1754, t1711, t1755, t1792, t1566, t1574, t1516, t1502, t1638, t1594, t1603, t1637, t1604, t1670, t1498, t1499, t1496, t1475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2099, t2072, t2208, -t2129, t2122, t2129, 0, t2061, t1995, 0, t1962, t1887, t2001, t1960, t2002, t2019, t1875, t1897, t1724, -pkin(10) * t1765, t1802, t1719, t1842, t1801, t1843, t1868, t1657, t1676, t1557, t1535, t1703, t1659, t1674, t1702, t1675, t1737, t1523, t1524, t1514, t1493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2130, t2074, t2123, t2202, -t2092, t2130, -t2061, 0, t1996, 0, t1961, t1885, t1999, t1959, t2000, t2018, t1845, t1849, t1706, t1738, t1800, t1717, t1840, t1799, t1841, t1867, t1646, t1654, t1555, t1533, t1701, t1658, t1672, t1700, t1673, t1736, t1521, t1522, t1511, t1491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2357, t2114, t2075, -t2357, -t2071, -t2146, -t1995, -t1996, 0, 0, t2053, t2052, -t2395, -t2053, -t1975, -t2145, t2228, t2296, t2387, t2388, t1988, -t1987, t1893, -t1988, -t1890, -t2145, t2040 + t2229, t2039 + t2244, t2313, t2314, t1830, t1750, t1820, -t1828, t1821, t1876, t2231, t2230, t2212, t2245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2011, -t1974, t2400, -t2095, t2090, t2095, 0, t1973, -t2262, 0, t1881, t1816, t1915, t1879, t1916, t1956, t1780, t1804, t1616, -qJ(5) * t1629, t1791, t1727, t1741, t1790, t1742, t1825, t1564, t1565, t1556, t1520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2350, t2394, t2091, t2233, -t2027, t2350, -t1973, 0, t1848, 0, t1880, t1814, t1913, t1878, t1914, t1955, t1746, t1760, t1614, t1621, t1789, t1726, t1739, t1788, t1740, t1824, t1558, t1559, t1548, t1510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2053, t2052, -t2395, -t2053, -t1975, -t2145, t2262, -t1848, 0, 0, t1988, -t1987, t1893, -t1988, -t1890, -t2145, t2040 + t2293, t2039 + t2315, t1813, t1628, t1830, t1750, t1820, -t1828, t1821, t1876, t2297, t2298, t2288, t2316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1924, -t1889, t2396, -t2032, t2030, t2032, 0, t1860, t1692, 0, t1831, t1752, t1822, t1829, t1823, t1877, t1660, t1661, t1567, -pkin(11) * t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2351, t1892, t2031, -t2308, -t1965, t2351, -t1860, 0, t1693, 0, -t1950, -t1949, -t1838, t1950, t1834, -t1922, t1617, t1619, -pkin(5) * t1751, -pkin(5) * t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1988, -t1987, t1893, -t1988, -t1890, -t2145, -t1692, -t1693, 0, 0, t1830, t1750, t1820, -t1828, t1821, t1876, t2317, t2318, t2299, t2336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1866, t1835, t2397, t1968, t1963, -t1968, 0, t1686, t1643, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1969, t1837, t1964, -t2232, t1855, -t1969, -t1686, 0, t1644, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1950, t1949, t1838, -t1950, -t1834, t1922, -t1643, -t1644, 0, 0;];
m_new_reg  = t1;
