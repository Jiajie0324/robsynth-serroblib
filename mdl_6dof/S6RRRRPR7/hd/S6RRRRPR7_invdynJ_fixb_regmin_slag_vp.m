% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x33]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR7_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR7_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:34:24
% EndTime: 2019-03-09 22:34:56
% DurationCPUTime: 18.90s
% Computational Cost: add. (21849->671), mult. (53855->939), div. (0->0), fcn. (44153->18), ass. (0->343)
t335 = sin(pkin(6));
t346 = cos(qJ(2));
t449 = qJD(1) * t346;
t423 = t335 * t449;
t292 = -qJD(3) + t423;
t558 = qJD(4) - t292;
t341 = sin(qJ(2));
t388 = pkin(2) * t341 - pkin(9) * t346;
t451 = qJD(1) * t335;
t246 = t388 * t451;
t345 = cos(qJ(3));
t231 = t345 * t246;
t424 = t341 * t451;
t337 = cos(pkin(6));
t450 = qJD(1) * t337;
t432 = pkin(1) * t450;
t245 = -pkin(8) * t424 + t346 * t432;
t340 = sin(qJ(3));
t515 = pkin(9) + pkin(10);
t425 = qJD(3) * t515;
t465 = t345 * t346;
t557 = -t340 * t245 + t231 + (pkin(3) * t341 - pkin(10) * t465) * t451 + t345 * t425;
t395 = t340 * t423;
t455 = t345 * t245 + t340 * t246;
t555 = -pkin(10) * t395 + t340 * t425 + t455;
t343 = cos(qJ(6));
t441 = qJD(6) * t343;
t310 = qJD(2) + t450;
t396 = t340 * t424;
t225 = -t345 * t310 + t396;
t227 = t310 * t340 + t345 * t424;
t339 = sin(qJ(4));
t344 = cos(qJ(4));
t166 = t344 * t225 + t227 * t339;
t334 = sin(pkin(12));
t336 = cos(pkin(12));
t376 = t225 * t339 - t344 * t227;
t521 = -t336 * t166 + t334 * t376;
t556 = -t521 * t343 + t441;
t267 = t339 * t340 - t344 * t345;
t554 = t558 * t267;
t268 = t339 * t345 + t340 * t344;
t457 = t558 * t268;
t338 = sin(qJ(6));
t520 = -t166 * t334 - t336 * t376;
t101 = t338 * t558 + t343 * t520;
t435 = qJDD(1) * t346;
t308 = t335 * t435;
t438 = qJD(1) * qJD(2);
t419 = t341 * t438;
t394 = t335 * t419;
t240 = qJDD(3) - t308 + t394;
t234 = qJDD(4) + t240;
t442 = qJD(6) * t338;
t437 = qJDD(1) * t337;
t309 = qJDD(2) + t437;
t445 = qJD(3) * t345;
t418 = t346 * t438;
t436 = qJDD(1) * t341;
t549 = t418 + t436;
t530 = t549 * t335;
t158 = -qJD(3) * t396 + t340 * t309 + t310 * t445 + t345 * t530;
t447 = qJD(2) * t346;
t420 = t340 * t447;
t446 = qJD(3) * t340;
t159 = -t345 * t309 + t310 * t446 + t335 * (qJD(1) * (t341 * t445 + t420) + t340 * t436);
t352 = qJD(4) * t376 - t339 * t158 - t344 * t159;
t443 = qJD(4) * t344;
t444 = qJD(4) * t339;
t88 = t344 * t158 - t339 * t159 - t225 * t443 - t227 * t444;
t49 = t334 * t352 + t336 * t88;
t28 = t338 * t234 + t343 * t49 + t441 * t558 - t442 * t520;
t415 = -t343 * t234 + t338 * t49;
t29 = qJD(6) * t101 + t415;
t106 = qJD(6) - t521;
t403 = t106 * t338;
t99 = t338 * t520 - t343 * t558;
t553 = -t101 * t403 + t28 * t343 - t338 * t29 - t556 * t99;
t551 = t557 * t344;
t294 = t515 * t340;
t295 = t515 * t345;
t550 = -t294 * t443 - t295 * t444 - t557 * t339 - t555 * t344;
t26 = t28 * t338;
t547 = t556 * t101 + t26;
t48 = -t334 * t88 + t336 * t352;
t47 = qJDD(6) - t48;
t44 = t338 * t47;
t492 = t101 * t520;
t546 = t556 * t106 + t44 - t492;
t534 = qJ(5) * t166;
t249 = pkin(8) * t423 + t341 * t432;
t210 = pkin(9) * t310 + t249;
t375 = -pkin(2) * t346 - pkin(9) * t341 - pkin(1);
t239 = t375 * t335;
t219 = qJD(1) * t239;
t155 = -t210 * t340 + t345 * t219;
t133 = -pkin(10) * t227 + t155;
t123 = -pkin(3) * t292 + t133;
t156 = t210 * t345 + t219 * t340;
t134 = -pkin(10) * t225 + t156;
t132 = t344 * t134;
t85 = t123 * t339 + t132;
t69 = t85 - t534;
t496 = t334 * t69;
t533 = qJ(5) * t376;
t130 = t339 * t134;
t84 = t344 * t123 - t130;
t68 = t84 + t533;
t62 = pkin(4) * t558 + t68;
t34 = t336 * t62 - t496;
t32 = -pkin(5) * t558 - t34;
t545 = t32 * t521;
t497 = t520 * t99;
t544 = -qJ(5) * t457 - qJD(5) * t267 + t550;
t454 = -t339 * t294 + t344 * t295;
t543 = -pkin(4) * t424 + t554 * qJ(5) - qJD(4) * t454 - t268 * qJD(5) + t339 * t555 - t551;
t542 = t106 * t520;
t392 = -t249 + (-t395 + t446) * pkin(3);
t540 = pkin(4) * t457 + t392;
t66 = t336 * t69;
t35 = t334 * t62 + t66;
t33 = pkin(11) * t558 + t35;
t209 = -pkin(2) * t310 - t245;
t170 = pkin(3) * t225 + t209;
t118 = pkin(4) * t166 + qJD(5) + t170;
t54 = -pkin(5) * t521 - pkin(11) * t520 + t118;
t19 = t33 * t343 + t338 * t54;
t342 = sin(qJ(1));
t467 = t342 * t346;
t347 = cos(qJ(1));
t468 = t341 * t347;
t259 = t337 * t468 + t467;
t463 = t346 * t347;
t469 = t341 * t342;
t261 = -t337 * t469 + t463;
t333 = qJ(3) + qJ(4);
t325 = pkin(12) + t333;
t316 = sin(t325);
t317 = cos(t325);
t431 = pkin(1) * qJD(2) * t337;
t399 = qJD(1) * t431;
t430 = pkin(1) * t437;
t426 = -pkin(8) * t308 - t341 * t430 - t346 * t399;
t360 = -pkin(8) * t394 - t426;
t174 = pkin(9) * t309 + t360;
t371 = t388 * qJD(2);
t176 = (qJD(1) * t371 + qJDD(1) * t375) * t335;
t354 = -qJD(3) * t156 - t340 * t174 + t345 * t176;
t65 = t240 * pkin(3) - t158 * pkin(10) + t354;
t368 = -t345 * t174 - t340 * t176 + t210 * t446 - t219 * t445;
t78 = -pkin(10) * t159 - t368;
t357 = -qJD(4) * t85 - t339 * t78 + t344 * t65;
t15 = t234 * pkin(4) - t88 * qJ(5) + qJD(5) * t376 + t357;
t402 = -t123 * t443 + t134 * t444 - t339 * t65 - t344 * t78;
t17 = qJ(5) * t352 - qJD(5) * t166 - t402;
t6 = t15 * t336 - t17 * t334;
t4 = -pkin(5) * t234 - t6;
t473 = t335 * t347;
t476 = t335 * t342;
t477 = t335 * t341;
t522 = t4 + g(3) * (-t316 * t477 + t317 * t337) + g(2) * (-t259 * t316 - t317 * t473) + g(1) * (-t261 * t316 + t317 * t476);
t539 = t19 * t520 + t32 * t441 + t338 * t522;
t380 = t33 * t338 - t343 * t54;
t538 = t32 * t442 + t380 * t520;
t537 = pkin(5) * t520 - pkin(11) * t521;
t536 = pkin(4) * t376;
t532 = t376 * t166;
t461 = -t334 * t554 + t336 * t457;
t531 = -t334 * t457 - t336 * t554;
t529 = -t166 ^ 2 + t376 ^ 2;
t528 = t166 * t558 + t88;
t326 = sin(t333);
t327 = cos(t333);
t194 = -t259 * t327 + t326 * t473;
t196 = t261 * t327 + t326 * t476;
t527 = t166 * t170 + g(1) * t196 - g(2) * t194 - g(3) * (-t326 * t337 - t327 * t477) + t402;
t195 = -t261 * t326 + t327 * t476;
t483 = t259 * t326;
t517 = -g(3) * (-t326 * t477 + t327 * t337) - g(2) * (-t327 * t473 - t483) - g(1) * t195;
t526 = t170 * t376 + t357 + t517;
t187 = -t259 * t317 + t316 * t473;
t258 = -t337 * t463 + t469;
t525 = t187 * t338 + t258 * t343;
t524 = t187 * t343 - t258 * t338;
t523 = -t376 * t558 + t352;
t330 = t335 ^ 2;
t434 = 0.2e1 * t330;
t501 = -t334 * t544 + t336 * t543;
t499 = t334 * t543 + t336 * t544;
t475 = t335 * t345;
t256 = t337 * t340 + t341 * t475;
t474 = t335 * t346;
t514 = pkin(1) * t341;
t453 = pkin(8) * t474 + t337 * t514;
t238 = pkin(9) * t337 + t453;
t406 = -t238 * t340 + t345 * t239;
t140 = -pkin(3) * t474 - pkin(10) * t256 + t406;
t255 = -t337 * t345 + t340 * t477;
t456 = t345 * t238 + t340 * t239;
t146 = -pkin(10) * t255 + t456;
t460 = t339 * t140 + t344 * t146;
t511 = g(1) * t347;
t519 = g(2) * t342 + t511;
t398 = pkin(8) * t530 + t341 * t399 - t346 * t430;
t175 = -pkin(2) * t309 + t398;
t116 = pkin(3) * t159 + t175;
t58 = -pkin(4) * t352 + qJDD(5) + t116;
t13 = -pkin(5) * t48 - pkin(11) * t49 + t58;
t7 = t334 * t15 + t336 * t17;
t5 = pkin(11) * t234 + t7;
t1 = -t380 * qJD(6) + t338 * t13 + t343 * t5;
t505 = g(3) * t335;
t328 = t345 * pkin(3);
t504 = pkin(2) + t328;
t182 = t344 * t255 + t256 * t339;
t201 = qJD(3) * t256 + t335 * t420;
t421 = t335 * t447;
t202 = -qJD(3) * t255 + t345 * t421;
t114 = -qJD(4) * t182 - t339 * t201 + t344 * t202;
t183 = -t255 * t339 + t256 * t344;
t247 = t335 * t371;
t311 = pkin(8) * t477;
t471 = t337 * t346;
t250 = (pkin(1) * t471 - t311) * qJD(2);
t367 = -t238 * t446 + t239 * t445 + t340 * t247 + t345 * t250;
t103 = -pkin(10) * t201 + t367;
t353 = -qJD(3) * t456 + t345 * t247 - t340 * t250;
t448 = qJD(2) * t341;
t422 = t335 * t448;
t98 = pkin(3) * t422 - t202 * pkin(10) + t353;
t355 = -qJD(4) * t460 - t339 * t103 + t344 * t98;
t22 = pkin(4) * t422 - t114 * qJ(5) - t183 * qJD(5) + t355;
t115 = qJD(4) * t183 + t344 * t201 + t339 * t202;
t369 = t344 * t103 + t140 * t443 - t146 * t444 + t339 * t98;
t24 = -qJ(5) * t115 - qJD(5) * t182 + t369;
t11 = t334 * t22 + t336 * t24;
t500 = pkin(5) * t424 - t501;
t409 = t344 * t140 - t146 * t339;
t80 = -pkin(4) * t474 - qJ(5) * t183 + t409;
t82 = -qJ(5) * t182 + t460;
t43 = t334 * t80 + t336 * t82;
t498 = pkin(3) * qJD(4);
t412 = -t133 * t339 - t132;
t373 = t412 + t534;
t472 = t336 * t339;
t462 = t344 * t133 - t130;
t74 = t462 + t533;
t494 = -t334 * t74 + t336 * t373 + (t334 * t344 + t472) * t498;
t478 = t334 * t339;
t493 = -t334 * t373 - t336 * t74 + (t336 * t344 - t478) * t498;
t192 = -t267 * t334 + t268 * t336;
t489 = t192 * t338;
t488 = t192 * t343;
t487 = t225 * t292;
t486 = t227 * t292;
t482 = t259 * t340;
t481 = t317 * t338;
t480 = t317 * t343;
t479 = t330 * qJD(1) ^ 2;
t470 = t338 * t346;
t466 = t343 * t346;
t464 = t345 * t347;
t251 = pkin(8) * t421 + t341 * t431;
t322 = pkin(3) * t344 + pkin(4);
t253 = pkin(3) * t472 + t334 * t322;
t280 = pkin(4) * t327 + t328;
t331 = t341 ^ 2;
t452 = -t346 ^ 2 + t331;
t440 = qJD(2) - t310;
t429 = t346 * t479;
t428 = t335 * t470;
t427 = t335 * t466;
t243 = pkin(11) + t253;
t387 = pkin(3) * t227 - t536;
t414 = qJD(6) * t243 + t387 + t537;
t318 = pkin(4) * t334 + pkin(11);
t413 = qJD(6) * t318 - t536 + t537;
t411 = -t338 * t531 - t343 * t424;
t410 = t338 * t424 - t343 * t531;
t405 = t259 * t345 - t340 * t473;
t404 = -t344 * t294 - t295 * t339;
t401 = t310 + t450;
t400 = t309 + t437;
t397 = pkin(4) * t267 - t504;
t171 = pkin(3) * t201 + t251;
t191 = t336 * t267 + t268 * t334;
t124 = pkin(5) * t191 - pkin(11) * t192 + t397;
t391 = pkin(11) * t424 - qJD(6) * t124 - t499;
t179 = -qJ(5) * t267 + t454;
t372 = -qJ(5) * t268 + t404;
t126 = t336 * t179 + t334 * t372;
t390 = -pkin(5) * t461 + pkin(11) * t531 + qJD(6) * t126 - t540;
t260 = t337 * t467 + t468;
t386 = -g(1) * t258 + g(2) * t260;
t385 = g(1) * t261 + g(2) * t259;
t382 = -t318 * t47 - t545;
t381 = -t243 * t47 - t545;
t10 = t22 * t336 - t24 * t334;
t42 = -t334 * t82 + t336 * t80;
t41 = -pkin(11) * t474 + t43;
t127 = t336 * t182 + t183 * t334;
t128 = -t182 * t334 + t183 * t336;
t237 = t311 + (-pkin(1) * t346 - pkin(2)) * t337;
t184 = t255 * pkin(3) + t237;
t356 = t182 * pkin(4) + t184;
t60 = t127 * pkin(5) - t128 * pkin(11) + t356;
t379 = t338 * t60 + t343 * t41;
t378 = -t338 * t41 + t343 * t60;
t45 = t343 * t47;
t374 = t45 + (t338 * t521 - t442) * t106;
t252 = -pkin(3) * t478 + t322 * t336;
t119 = t128 * t338 + t427;
t370 = pkin(4) * t115 + t171;
t365 = t192 * t441 - t411;
t364 = -t192 * t442 - t410;
t361 = -g(1) * t260 - g(2) * t258 + g(3) * t474;
t359 = -pkin(9) * t240 - t209 * t292;
t2 = -qJD(6) * t19 + t343 * t13 - t338 * t5;
t351 = pkin(9) * qJD(3) * t292 - t175 - t361;
t329 = -qJ(5) - t515;
t319 = -pkin(4) * t336 - pkin(5);
t279 = pkin(3) * t340 + pkin(4) * t326;
t272 = pkin(2) + t280;
t242 = -pkin(5) - t252;
t221 = t316 * t337 + t317 * t477;
t205 = t261 * t345 + t340 * t476;
t204 = -t261 * t340 + t342 * t475;
t189 = t261 * t317 + t316 * t476;
t154 = t189 * t343 + t260 * t338;
t153 = -t189 * t338 + t260 * t343;
t125 = t179 * t334 - t336 * t372;
t120 = t128 * t343 - t428;
t73 = t114 * t336 - t115 * t334;
t72 = t114 * t334 + t336 * t115;
t51 = -qJD(6) * t428 + t128 * t441 + t338 * t73 - t343 * t422;
t50 = -qJD(6) * t119 + t338 * t422 + t343 * t73;
t40 = pkin(5) * t474 - t42;
t37 = t336 * t68 - t496;
t36 = t334 * t68 + t66;
t20 = pkin(5) * t72 - pkin(11) * t73 + t370;
t9 = pkin(11) * t422 + t11;
t8 = -pkin(5) * t422 - t10;
t3 = [qJDD(1), g(1) * t342 - g(2) * t347, t519 (qJDD(1) * t331 + 0.2e1 * t341 * t418) * t330 (t341 * t435 - t438 * t452) * t434 (t341 * t400 + t401 * t447) * t335 (t346 * t400 - t401 * t448) * t335, t309 * t337, -t251 * t310 - t311 * t309 - t398 * t337 + g(1) * t259 - g(2) * t261 + (t309 * t471 + (-t419 + t435) * t434) * pkin(1), -pkin(1) * t434 * t549 - t250 * t310 - t453 * t309 - t360 * t337 + t386, t158 * t256 + t202 * t227, -t158 * t255 - t159 * t256 - t201 * t227 - t202 * t225, -t202 * t292 + t256 * t240 + (-t158 * t346 + t227 * t448) * t335, t201 * t292 - t255 * t240 + (t159 * t346 - t225 * t448) * t335 (-t240 * t346 - t292 * t448) * t335, -t353 * t292 + t406 * t240 + t251 * t225 + t237 * t159 + t175 * t255 + t209 * t201 + g(1) * t405 - g(2) * t205 + (t155 * t448 - t346 * t354) * t335, t367 * t292 - t456 * t240 + t251 * t227 + t237 * t158 + t175 * t256 + t209 * t202 - g(1) * t482 - g(2) * t204 + (-g(1) * t464 - t156 * t448 - t346 * t368) * t335, -t114 * t376 + t183 * t88, -t114 * t166 + t115 * t376 - t182 * t88 + t183 * t352, t114 * t558 + t183 * t234 + (-t346 * t88 - t376 * t448) * t335, -t115 * t558 - t182 * t234 + (-t166 * t448 - t346 * t352) * t335 (-t234 * t346 + t448 * t558) * t335, t355 * t558 + t409 * t234 + t171 * t166 - t184 * t352 + t116 * t182 + t170 * t115 - g(1) * t194 - g(2) * t196 + (-t346 * t357 + t448 * t84) * t335, -t369 * t558 - t460 * t234 - t171 * t376 + t184 * t88 + t116 * t183 + t170 * t114 - g(1) * t483 - g(2) * t195 + (-t327 * t511 - t346 * t402 - t448 * t85) * t335, -t10 * t520 + t11 * t521 - t127 * t7 - t128 * t6 - t34 * t73 - t35 * t72 - t42 * t49 + t43 * t48 - t386, t7 * t43 + t35 * t11 + t6 * t42 + t34 * t10 + t58 * t356 + t118 * t370 - g(1) * (-t342 * pkin(1) + t258 * t329 - t259 * t272) - g(2) * (t347 * pkin(1) - t260 * t329 + t261 * t272) - t519 * t335 * (pkin(8) + t279) t101 * t50 + t120 * t28, -t101 * t51 - t119 * t28 - t120 * t29 - t50 * t99, t101 * t72 + t106 * t50 + t120 * t47 + t127 * t28, -t106 * t51 - t119 * t47 - t127 * t29 - t72 * t99, t106 * t72 + t127 * t47 (-qJD(6) * t379 + t343 * t20 - t338 * t9) * t106 + t378 * t47 + t2 * t127 - t380 * t72 + t8 * t99 + t40 * t29 + t4 * t119 + t32 * t51 - g(1) * t524 - g(2) * t154 -(qJD(6) * t378 + t338 * t20 + t343 * t9) * t106 - t379 * t47 - t1 * t127 - t19 * t72 + t8 * t101 + t40 * t28 + t4 * t120 + t32 * t50 + g(1) * t525 - g(2) * t153; 0, 0, 0, -t341 * t429, t452 * t479 (t440 * t449 + t436) * t335, -t424 * t440 + t308, t309, t249 * t310 + t479 * t514 - t361 - t398, pkin(1) * t429 + t245 * t310 + (pkin(8) * t438 + g(3)) * t477 + t385 + t426, t158 * t340 - t345 * t486 (t158 + t487) * t345 + (-t159 + t486) * t340, -t292 * t445 + t340 * t240 + (-t227 * t341 + t292 * t465) * t451, t292 * t446 + t345 * t240 + (-t292 * t340 * t346 + t225 * t341) * t451, t292 * t424, -t155 * t424 - pkin(2) * t159 - t249 * t225 + t231 * t292 + (-t245 * t292 + t359) * t340 + t351 * t345, -pkin(2) * t158 + t156 * t424 - t249 * t227 - t292 * t455 - t340 * t351 + t345 * t359, t88 * t268 + t376 * t554, t166 * t554 - t88 * t267 + t268 * t352 + t376 * t457, t268 * t234 + t376 * t424 - t554 * t558, t166 * t424 - t267 * t234 - t457 * t558, -t558 * t424, t404 * t234 + t504 * t352 + t116 * t267 - t84 * t424 - (t295 * t443 + (-qJD(4) * t294 - t555) * t339 + t551) * t558 + t457 * t170 + t392 * t166 - t361 * t327, t116 * t268 - t170 * t554 - t454 * t234 + t361 * t326 - t392 * t376 + t85 * t424 - t504 * t88 - t550 * t558, -g(3) * t477 + t125 * t49 + t126 * t48 - t7 * t191 - t6 * t192 - t34 * t531 - t461 * t35 + t499 * t521 - t501 * t520 - t385, t7 * t126 - t6 * t125 + t58 * t397 - g(1) * (-t260 * t272 - t261 * t329) - g(2) * (-t258 * t272 - t259 * t329) + t499 * t35 + t501 * t34 - (t272 * t346 - t329 * t341) * t505 + t540 * t118, t101 * t364 + t28 * t488, t410 * t99 + t411 * t101 + (-t26 - t29 * t343 + (-t101 * t343 + t338 * t99) * qJD(6)) * t192, t101 * t461 + t106 * t364 + t28 * t191 + t47 * t488, -t106 * t365 - t29 * t191 - t461 * t99 - t47 * t489, t106 * t461 + t191 * t47 (t124 * t343 - t126 * t338) * t47 + t2 * t191 + t125 * t29 + t4 * t489 - g(1) * (-t260 * t480 + t261 * t338) - g(2) * (-t258 * t480 + t259 * t338) + t500 * t99 - (t317 * t466 + t338 * t341) * t505 - t461 * t380 + (t338 * t391 - t343 * t390) * t106 + t365 * t32 -(t124 * t338 + t126 * t343) * t47 - t1 * t191 + t125 * t28 + t4 * t488 - g(1) * (t260 * t481 + t261 * t343) - g(2) * (t258 * t481 + t259 * t343) - (-t317 * t470 + t341 * t343) * t505 - t461 * t19 + (t338 * t390 + t343 * t391) * t106 + t500 * t101 + t364 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227 * t225, -t225 ^ 2 + t227 ^ 2, t158 - t487, -t159 - t486, t240, -t156 * t292 - t209 * t227 - g(1) * t204 - g(2) * (-t335 * t464 - t482) + g(3) * t255 + t354, g(1) * t205 + g(2) * t405 + g(3) * t256 - t155 * t292 + t209 * t225 + t368, -t532, t529, t528, t523, t234, -t412 * t558 + (-t166 * t227 + t234 * t344 - t444 * t558) * pkin(3) + t526, t462 * t558 + (t227 * t376 - t234 * t339 - t443 * t558) * pkin(3) + t527, -t252 * t49 + t253 * t48 + (t34 + t493) * t521 + (t35 + t494) * t520, t7 * t253 + t6 * t252 - t118 * t387 - g(1) * (-t261 * t279 + t280 * t476) - g(2) * (-t259 * t279 - t280 * t473) - g(3) * (-t279 * t477 + t280 * t337) + t493 * t35 - t494 * t34, t547, t553, t546, -t106 * t403 + t45 + t497, -t542, t242 * t29 + t494 * t99 + (-t106 * t493 + t381) * t338 + (-t106 * t414 - t522) * t343 + t538, t242 * t28 + t381 * t343 + t494 * t101 + (t338 * t414 - t343 * t493) * t106 + t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, t529, t528, t523, t234, t558 * t85 + t526, t558 * t84 + t527 (t334 * t48 - t336 * t49) * pkin(4) + (-t37 + t34) * t521 + (t35 - t36) * t520, t34 * t36 - t35 * t37 + (t118 * t376 + t7 * t334 + t6 * t336 + t517) * pkin(4), t547, t553, t546, t374 + t497, -t542, t319 * t29 - t36 * t99 + (t106 * t37 + t382) * t338 + (-t106 * t413 - t522) * t343 + t538, -t36 * t101 + t319 * t28 + t382 * t343 + (t338 * t413 + t343 * t37) * t106 + t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t520 ^ 2 - t521 ^ 2, t34 * t520 - t35 * t521 + t361 + t58, 0, 0, 0, 0, 0, t374 - t497, -t106 ^ 2 * t343 - t44 - t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t99, t101 ^ 2 - t99 ^ 2, t106 * t99 + t28, -t415 + (-qJD(6) + t106) * t101, t47, t19 * t106 - t32 * t101 - g(1) * t153 - g(2) * t525 - g(3) * (-t221 * t338 - t427) + t2, -t380 * t106 + t32 * t99 + g(1) * t154 - g(2) * t524 - g(3) * (-t221 * t343 + t428) - t1;];
tau_reg  = t3;
