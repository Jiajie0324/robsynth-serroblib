% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 21:26
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRPR7_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR7_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR7_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 21:22:09
% EndTime: 2019-05-07 21:24:10
% DurationCPUTime: 92.72s
% Computational Cost: add. (1065618->1121), mult. (2340439->1822), div. (0->0), fcn. (1938420->14), ass. (0->810)
t1273 = sin(pkin(6));
t1439 = qJD(1) * t1273;
t1276 = sin(qJ(6));
t1278 = sin(qJ(3));
t1283 = cos(qJ(3));
t1275 = cos(pkin(6));
t1438 = qJD(1) * t1275;
t1380 = qJD(2) + t1438;
t1279 = sin(qJ(2));
t1407 = t1273 * t1279;
t1395 = qJD(1) * t1407;
t1227 = t1278 * t1395 - t1283 * t1380;
t1228 = t1278 * t1380 + t1283 * t1395;
t1277 = sin(qJ(4));
t1282 = cos(qJ(4));
t1192 = -t1227 * t1282 - t1277 * t1228;
t1193 = -t1227 * t1277 + t1228 * t1282;
t1272 = sin(pkin(12));
t1274 = cos(pkin(12));
t1133 = t1272 * t1192 + t1274 * t1193;
t1284 = cos(qJ(2));
t1406 = t1273 * t1284;
t1258 = qJD(1) * t1406 - qJD(3);
t1250 = -qJD(4) + t1258;
t1281 = cos(qJ(6));
t1109 = t1133 * t1276 + t1281 * t1250;
t1111 = t1133 * t1281 - t1250 * t1276;
t1036 = t1111 * t1109;
t1436 = qJD(1) * t1284;
t1383 = qJD(2) * t1436;
t1397 = t1279 * qJDD(1);
t1236 = (t1383 + t1397) * t1273;
t1373 = qJDD(1) * t1275 + qJDD(2);
t1181 = -t1227 * qJD(3) + t1283 * t1236 + t1278 * t1373;
t1298 = -t1278 * t1236 + t1283 * t1373;
t1292 = t1228 * qJD(3) - t1298;
t1376 = t1277 * t1181 + t1282 * t1292;
t1092 = -qJD(4) * t1193 - t1376;
t1093 = t1192 * qJD(4) + t1282 * t1181 - t1277 * t1292;
t1377 = -t1274 * t1092 + t1093 * t1272;
t1367 = qJDD(6) + t1377;
t1463 = -t1036 + t1367;
t1471 = t1276 * t1463;
t1470 = t1281 * t1463;
t1426 = t1133 * t1250;
t981 = t1377 - t1426;
t1372 = t1380 ^ 2;
t1398 = qJDD(1) * t1273;
t1237 = -qJD(2) * t1395 + t1284 * t1398;
t1231 = -qJDD(3) + t1237;
t1230 = -qJDD(4) + t1231;
t1131 = -t1274 * t1192 + t1193 * t1272;
t1427 = t1131 * t1133;
t1295 = -t1230 - t1427;
t1469 = t1272 * t1295;
t1468 = t1274 * t1295;
t1421 = t1192 * t1193;
t1294 = -t1230 + t1421;
t1467 = t1277 * t1294;
t1420 = t1227 * t1228;
t1297 = -t1231 - t1420;
t1466 = t1278 * t1297;
t1465 = t1282 * t1294;
t1464 = t1283 * t1297;
t1013 = t1092 * t1272 + t1093 * t1274;
t1119 = t1131 * t1250;
t984 = t1013 + t1119;
t1177 = t1192 * t1250;
t1061 = -t1177 - t1093;
t1462 = -t1177 + t1093;
t1210 = t1227 * t1258;
t1160 = t1210 - t1181;
t1158 = t1210 + t1181;
t1128 = qJD(6) + t1131;
t1052 = t1128 * t1109;
t1382 = t1109 * qJD(6) - t1281 * t1013 + t1276 * t1230;
t927 = t1382 + t1052;
t1269 = t1273 ^ 2;
t1461 = (t1275 ^ 2 + t1269) * t1439 + qJD(2) * t1275 * t1273;
t1378 = t1276 * t1013 + t1281 * t1230;
t922 = (qJD(6) - t1128) * t1111 + t1378;
t1057 = (qJD(4) + t1250) * t1193 + t1376;
t1155 = t1228 * (qJD(3) + t1258) - t1298;
t1280 = sin(qJ(1));
t1285 = cos(qJ(1));
t1261 = g(1) * t1285 + t1280 * g(2);
t1459 = qJD(1) ^ 2;
t1232 = -pkin(1) * t1459 + pkin(8) * t1398 - t1261;
t1453 = pkin(2) * t1284;
t1371 = -pkin(9) * t1279 - t1453;
t1235 = t1371 * t1439;
t1260 = t1280 * g(1) - t1285 * g(2);
t1451 = pkin(8) * t1273;
t1296 = qJDD(1) * pkin(1) + t1451 * t1459 + t1260;
t1293 = t1275 * t1296;
t1291 = -g(3) * t1407 + t1279 * t1293;
t1146 = t1373 * pkin(9) - t1372 * pkin(2) + (t1235 * t1439 + t1232) * t1284 + t1291;
t1341 = qJD(1) * t1380;
t1318 = t1284 * t1341;
t1319 = t1279 * t1341;
t1450 = t1275 * g(3);
t1147 = -t1237 * pkin(2) - t1236 * pkin(9) - t1450 + (pkin(2) * t1319 - pkin(9) * t1318 - t1296) * t1273;
t1075 = t1278 * t1146 - t1283 * t1147;
t1460 = pkin(10) * t1160 - t1075;
t1107 = t1109 ^ 2;
t1108 = t1111 ^ 2;
t1127 = t1128 ^ 2;
t1129 = t1131 ^ 2;
t1130 = t1133 ^ 2;
t1458 = t1192 ^ 2;
t1191 = t1193 ^ 2;
t1457 = t1227 ^ 2;
t1226 = t1228 ^ 2;
t1456 = t1250 ^ 2;
t1254 = t1258 ^ 2;
t1455 = 2 * qJD(5);
t1454 = pkin(2) * t1279;
t1452 = pkin(5) * t1272;
t1066 = pkin(5) * t1131 - pkin(11) * t1133;
t1076 = t1283 * t1146 + t1278 * t1147;
t1202 = -pkin(3) * t1258 - pkin(10) * t1228;
t1289 = -pkin(10) * t1292 + t1258 * t1202 + t1076;
t1288 = -pkin(3) * t1457 + t1289;
t1290 = t1297 * pkin(3) + t1460;
t937 = t1277 * t1288 - t1282 * t1290;
t1287 = t1294 * pkin(4) + qJ(5) * t1061 - t937;
t1171 = -pkin(4) * t1250 - qJ(5) * t1193;
t938 = t1277 * t1290 + t1282 * t1288;
t888 = -pkin(4) * t1458 + qJ(5) * t1092 + t1171 * t1250 + t938;
t791 = -0.2e1 * qJD(5) * t1131 + t1272 * t1287 + t1274 * t888;
t786 = -pkin(5) * t1456 - pkin(11) * t1230 - t1066 * t1131 + t791;
t1375 = t1279 * t1232 - t1284 * t1293;
t1437 = qJD(1) * t1279;
t1145 = -t1373 * pkin(2) - t1372 * pkin(9) + (g(3) * t1284 + t1235 * t1437) * t1273 + t1375;
t1055 = t1292 * pkin(3) - t1457 * pkin(10) + t1228 * t1202 + t1145;
t952 = -t1092 * pkin(4) - t1458 * qJ(5) + t1193 * t1171 + qJDD(5) + t1055;
t846 = pkin(5) * t981 - pkin(11) * t984 + t952;
t746 = t1276 * t846 + t1281 * t786;
t1449 = t1272 * t952;
t1448 = t1274 * t952;
t1381 = t1272 * t888 - t1274 * t1287;
t785 = t1230 * pkin(5) - t1456 * pkin(11) + (t1455 + t1066) * t1133 + t1381;
t1447 = t1276 * t785;
t945 = t1036 + t1367;
t1446 = t1276 * t945;
t790 = t1133 * t1455 + t1381;
t735 = t1272 * t791 - t1274 * t790;
t1445 = t1277 * t735;
t862 = t1277 * t938 - t1282 * t937;
t1444 = t1278 * t862;
t1443 = t1281 * t785;
t1442 = t1281 * t945;
t1441 = t1282 * t735;
t1440 = t1283 * t862;
t1049 = t1230 - t1427;
t1435 = t1049 * t1272;
t1434 = t1049 * t1274;
t1433 = t1055 * t1277;
t1432 = t1055 * t1282;
t1114 = t1230 + t1421;
t1431 = t1114 * t1277;
t1430 = t1114 * t1282;
t1429 = t1128 * t1276;
t1428 = t1128 * t1281;
t1425 = t1145 * t1278;
t1424 = t1145 * t1283;
t1174 = t1231 - t1420;
t1423 = t1174 * t1278;
t1422 = t1174 * t1283;
t1419 = t1230 * t1279;
t1408 = t1269 * t1459;
t1257 = t1284 * t1279 * t1408;
t1233 = -t1257 + t1373;
t1418 = t1233 * t1279;
t1417 = t1233 * t1284;
t1234 = t1257 + t1373;
t1416 = t1234 * t1279;
t1415 = t1234 * t1284;
t1414 = t1250 * t1272;
t1413 = t1250 * t1274;
t1412 = t1250 * t1277;
t1411 = t1250 * t1282;
t1410 = t1258 * t1278;
t1409 = t1258 * t1283;
t1405 = t1275 * t1279;
t1212 = t1273 * t1296 + t1450;
t1404 = t1279 * t1212;
t1403 = t1284 * t1212;
t1270 = t1279 ^ 2;
t1271 = t1284 ^ 2;
t1399 = t1270 + t1271;
t1396 = -pkin(5) * t1274 - pkin(4);
t1393 = t1272 * t1036;
t1392 = t1274 * t1036;
t1391 = t1279 * t1427;
t1390 = t1284 * t1427;
t1389 = t1279 * t1421;
t1388 = t1284 * t1421;
t1387 = t1279 * t1420;
t1386 = t1284 * t1420;
t1385 = t1270 * t1408;
t1384 = t1271 * t1408;
t736 = t1272 * t790 + t1274 * t791;
t745 = t1276 * t786 - t1281 * t846;
t863 = t1277 * t937 + t1282 * t938;
t994 = t1075 * t1278 + t1283 * t1076;
t1216 = -t1260 * t1280 - t1285 * t1261;
t1256 = qJDD(1) * t1285 - t1280 * t1459;
t1370 = -pkin(7) * t1256 - g(3) * t1280;
t1222 = -t1385 - t1372;
t1194 = -t1222 * t1279 - t1417;
t1369 = pkin(8) * t1194 - t1404;
t1241 = -t1372 - t1384;
t1199 = t1241 * t1284 - t1416;
t1368 = pkin(8) * t1199 + t1403;
t687 = t1276 * t746 - t1281 * t745;
t688 = t1276 * t745 + t1281 * t746;
t669 = t1272 * t688 - t1274 * t785;
t670 = t1272 * t785 + t1274 * t688;
t641 = t1277 * t670 + t1282 * t669;
t642 = -t1277 * t669 + t1282 * t670;
t615 = -t1278 * t641 + t1283 * t642;
t1366 = t1279 * t615 - t1284 * t687;
t683 = t1277 * t736 + t1441;
t684 = t1282 * t736 - t1445;
t648 = -t1278 * t683 + t1283 * t684;
t1365 = t1279 * t648 - t1284 * t952;
t926 = -t1052 + t1382;
t850 = -t1276 * t926 - t1281 * t922;
t999 = t1107 + t1108;
t819 = t1272 * t850 + t1274 * t999;
t820 = -t1272 * t999 + t1274 * t850;
t754 = t1277 * t820 + t1282 * t819;
t755 = -t1277 * t819 + t1282 * t820;
t695 = -t1278 * t754 + t1283 * t755;
t848 = -t1276 * t922 + t1281 * t926;
t1364 = t1279 * t695 - t1284 * t848;
t1035 = -t1108 + t1107;
t923 = (-qJD(6) - t1128) * t1111 - t1378;
t849 = t1276 * t927 + t1281 * t923;
t823 = t1035 * t1274 + t1272 * t849;
t824 = -t1035 * t1272 + t1274 * t849;
t760 = t1277 * t824 + t1282 * t823;
t761 = -t1277 * t823 + t1282 * t824;
t700 = -t1278 * t760 + t1283 * t761;
t847 = -t1276 * t923 + t1281 * t927;
t1363 = t1279 * t700 + t1284 * t847;
t1006 = -t1127 - t1107;
t890 = t1006 * t1281 - t1471;
t827 = t1272 * t890 + t1274 * t923;
t828 = -t1272 * t923 + t1274 * t890;
t766 = t1277 * t828 + t1282 * t827;
t767 = -t1277 * t827 + t1282 * t828;
t703 = -t1278 * t766 + t1283 * t767;
t889 = t1006 * t1276 + t1470;
t1362 = t1279 * t703 - t1284 * t889;
t1014 = -t1108 - t1127;
t897 = -t1014 * t1276 - t1442;
t829 = t1272 * t897 + t1274 * t927;
t830 = -t1272 * t927 + t1274 * t897;
t768 = t1277 * t830 + t1282 * t829;
t769 = -t1277 * t829 + t1282 * t830;
t705 = -t1278 * t768 + t1283 * t769;
t896 = t1014 * t1281 - t1446;
t1361 = t1279 * t705 - t1284 * t896;
t1048 = -t1108 + t1127;
t912 = -t1048 * t1276 + t1470;
t836 = t1272 * t912 + t1274 * t926;
t838 = -t1272 * t926 + t1274 * t912;
t772 = t1277 * t838 + t1282 * t836;
t774 = -t1277 * t836 + t1282 * t838;
t711 = -t1278 * t772 + t1283 * t774;
t910 = -t1048 * t1281 - t1471;
t1360 = t1279 * t711 + t1284 * t910;
t1047 = t1107 - t1127;
t913 = t1047 * t1281 - t1446;
t837 = t1272 * t913 + t1274 * t922;
t839 = -t1272 * t922 + t1274 * t913;
t773 = t1277 * t839 + t1282 * t837;
t775 = -t1277 * t837 + t1282 * t839;
t712 = -t1278 * t773 + t1283 * t775;
t911 = -t1047 * t1276 - t1442;
t1359 = t1279 * t712 + t1284 * t911;
t958 = -qJD(6) * t1111 - t1378;
t919 = t1109 * t1428 - t1276 * t958;
t881 = t1272 * t919 + t1392;
t883 = t1274 * t919 - t1393;
t797 = t1277 * t883 + t1282 * t881;
t799 = -t1277 * t881 + t1282 * t883;
t743 = -t1278 * t797 + t1283 * t799;
t918 = -t1109 * t1429 - t1281 * t958;
t1358 = t1279 * t743 + t1284 * t918;
t921 = -t1111 * t1429 - t1281 * t1382;
t882 = t1272 * t921 - t1392;
t884 = t1274 * t921 + t1393;
t798 = t1277 * t884 + t1282 * t882;
t800 = -t1277 * t882 + t1282 * t884;
t744 = -t1278 * t798 + t1283 * t800;
t920 = -t1111 * t1428 + t1276 * t1382;
t1357 = t1279 * t744 + t1284 * t920;
t970 = (-t1109 * t1281 + t1111 * t1276) * t1128;
t914 = t1272 * t970 - t1274 * t1367;
t915 = t1272 * t1367 + t1274 * t970;
t833 = t1277 * t915 + t1282 * t914;
t834 = -t1277 * t914 + t1282 * t915;
t771 = -t1278 * t833 + t1283 * t834;
t969 = (t1109 * t1276 + t1111 * t1281) * t1128;
t1356 = t1279 * t771 + t1284 * t969;
t1062 = -t1456 - t1129;
t975 = t1062 * t1272 + t1468;
t976 = t1062 * t1274 - t1469;
t898 = t1277 * t976 + t1282 * t975;
t899 = -t1277 * t975 + t1282 * t976;
t814 = -t1278 * t898 + t1283 * t899;
t1355 = t1279 * t814 - t1284 * t981;
t1101 = -t1130 - t1456;
t1000 = t1101 * t1274 + t1435;
t1001 = -t1101 * t1272 + t1434;
t916 = t1000 * t1282 + t1001 * t1277;
t917 = -t1000 * t1277 + t1001 * t1282;
t842 = -t1278 * t916 + t1283 * t917;
t1354 = t1279 * t842 - t1284 * t984;
t1118 = -t1130 + t1456;
t1002 = t1118 * t1274 + t1469;
t1004 = -t1118 * t1272 + t1468;
t928 = t1002 * t1282 + t1004 * t1277;
t930 = -t1002 * t1277 + t1004 * t1282;
t853 = -t1278 * t928 + t1283 * t930;
t986 = -t1013 + t1119;
t1353 = t1279 * t853 + t1284 * t986;
t1117 = t1129 - t1456;
t1003 = t1117 * t1272 - t1434;
t1005 = t1117 * t1274 + t1435;
t929 = t1003 * t1282 + t1005 * t1277;
t931 = -t1003 * t1277 + t1005 * t1282;
t854 = -t1278 * t929 + t1283 * t931;
t982 = t1377 + t1426;
t1352 = t1279 * t854 + t1284 * t982;
t1019 = -t1129 - t1130;
t905 = -t1272 * t982 + t1274 * t986;
t907 = -t1272 * t986 - t1274 * t982;
t816 = t1277 * t907 + t1282 * t905;
t818 = -t1277 * t905 + t1282 * t907;
t753 = -t1278 * t816 + t1283 * t818;
t1351 = -t1019 * t1284 + t1279 * t753;
t782 = t1283 * t863 - t1444;
t1350 = -t1055 * t1284 + t1279 * t782;
t1056 = (qJD(4) - t1250) * t1193 + t1376;
t1122 = -t1456 - t1458;
t1041 = t1122 * t1277 + t1465;
t1042 = t1122 * t1282 - t1467;
t963 = -t1041 * t1278 + t1042 * t1283;
t1349 = -t1056 * t1284 + t1279 * t963;
t1172 = -t1456 + t1458;
t1080 = t1172 * t1277 - t1430;
t1082 = t1172 * t1282 + t1431;
t998 = -t1080 * t1278 + t1082 * t1283;
t1348 = t1057 * t1284 + t1279 * t998;
t1165 = -t1191 - t1456;
t1073 = t1165 * t1282 + t1431;
t1074 = -t1165 * t1277 + t1430;
t992 = -t1073 * t1278 + t1074 * t1283;
t1347 = t1279 * t992 - t1284 * t1462;
t1173 = -t1191 + t1456;
t1079 = t1173 * t1282 + t1467;
t1081 = -t1173 * t1277 + t1465;
t997 = -t1079 * t1278 + t1081 * t1283;
t1346 = t1061 * t1284 + t1279 * t997;
t1068 = t1129 - t1130;
t904 = -t1272 * t981 + t1274 * t984;
t906 = -t1272 * t984 - t1274 * t981;
t815 = t1277 * t906 + t1282 * t904;
t817 = -t1277 * t904 + t1282 * t906;
t752 = -t1278 * t815 + t1283 * t817;
t1345 = t1068 * t1284 + t1279 * t752;
t1094 = -t1191 - t1458;
t978 = -t1057 * t1277 + t1061 * t1282;
t980 = -t1057 * t1282 - t1061 * t1277;
t903 = -t1278 * t978 + t1283 * t980;
t1344 = -t1094 * t1284 + t1279 * t903;
t1138 = -t1191 + t1458;
t977 = -t1056 * t1277 + t1282 * t1462;
t979 = -t1056 * t1282 - t1277 * t1462;
t902 = -t1278 * t977 + t1283 * t979;
t1343 = t1138 * t1284 + t1279 * t902;
t1342 = -t1145 * t1284 + t1279 * t994;
t1340 = t1269 * t1279 * t1383;
t993 = -t1075 * t1283 + t1076 * t1278;
t1156 = (-qJD(3) + t1258) * t1228 + t1298;
t1085 = t1156 * t1283 - t1158 * t1278;
t1195 = -t1226 + t1457;
t1339 = t1085 * t1279 + t1195 * t1284;
t1086 = -t1155 * t1283 - t1160 * t1278;
t1170 = t1226 + t1457;
t1338 = t1086 * t1279 + t1170 * t1284;
t1184 = -t1254 - t1457;
t1113 = t1184 * t1283 - t1466;
t1337 = t1113 * t1279 + t1156 * t1284;
t1196 = -t1226 - t1254;
t1124 = -t1196 * t1278 + t1422;
t1336 = t1124 * t1279 - t1158 * t1284;
t1204 = -t1226 + t1254;
t1136 = -t1204 * t1278 + t1464;
t1335 = t1136 * t1279 + t1160 * t1284;
t1203 = -t1254 + t1457;
t1137 = t1203 * t1283 + t1423;
t1334 = t1137 * t1279 + t1155 * t1284;
t1169 = (t1227 * t1283 - t1228 * t1278) * t1258;
t1333 = t1169 * t1279 + t1231 * t1284;
t1188 = g(3) * t1406 + t1375;
t1189 = t1284 * t1232 + t1291;
t1332 = -t1284 * t1188 + t1279 * t1189;
t1121 = t1188 * t1279 + t1189 * t1284;
t1245 = t1273 * t1318;
t1206 = t1245 + t1236;
t1244 = t1273 * t1319;
t1209 = t1237 - t1244;
t1331 = t1206 * t1284 + t1209 * t1279;
t1207 = -t1245 + t1236;
t1208 = t1237 + t1244;
t1330 = -t1207 * t1284 + t1208 * t1279;
t1329 = t1222 * t1284 - t1418;
t1240 = -t1372 + t1384;
t1328 = t1240 * t1279 + t1417;
t1239 = t1372 - t1385;
t1327 = t1239 * t1284 + t1416;
t1326 = t1241 * t1279 + t1415;
t1215 = t1260 * t1285 - t1280 * t1261;
t1325 = t1273 * t1373;
t971 = -t1131 * t1414 - t1274 * t1377;
t972 = -t1131 * t1413 + t1272 * t1377;
t891 = t1277 * t972 + t1282 * t971;
t893 = -t1277 * t971 + t1282 * t972;
t811 = -t1278 * t891 + t1283 * t893;
t1324 = t1279 * t811 + t1390;
t973 = t1013 * t1272 - t1133 * t1413;
t974 = t1013 * t1274 + t1133 * t1414;
t892 = t1277 * t974 + t1282 * t973;
t894 = -t1277 * t973 + t1282 * t974;
t812 = -t1278 * t892 + t1283 * t894;
t1323 = t1279 * t812 - t1390;
t1043 = t1092 * t1282 + t1192 * t1412;
t1044 = -t1092 * t1277 + t1192 * t1411;
t966 = -t1043 * t1278 + t1044 * t1283;
t1322 = t1279 * t966 - t1388;
t1045 = t1093 * t1277 - t1193 * t1411;
t1046 = t1093 * t1282 + t1193 * t1412;
t967 = -t1045 * t1278 + t1046 * t1283;
t1321 = t1279 * t967 + t1388;
t1320 = t1273 * t1341;
t1150 = -t1227 * t1409 + t1278 * t1292;
t1317 = t1150 * t1279 + t1386;
t1152 = t1181 * t1283 + t1228 * t1410;
t1316 = t1152 * t1279 - t1386;
t618 = qJ(5) * t670 + (-pkin(11) * t1272 + t1396) * t687;
t626 = -qJ(5) * t669 + (-pkin(11) * t1274 + t1452) * t687;
t598 = -pkin(3) * t687 + pkin(10) * t642 + t1277 * t626 + t1282 * t618;
t600 = -pkin(10) * t641 - t1277 * t618 + t1282 * t626;
t614 = t1278 * t642 + t1283 * t641;
t585 = -pkin(9) * t614 - t1278 * t598 + t1283 * t600;
t599 = -pkin(2) * t614 - pkin(3) * t641 - pkin(4) * t669 + pkin(5) * t785 - pkin(11) * t688;
t613 = t1279 * t687 + t1284 * t615;
t1315 = pkin(8) * t613 + t1279 * t585 + t1284 * t599;
t675 = -pkin(11) * t848 - t687;
t658 = qJ(5) * t820 + t1272 * t675 + t1396 * t848;
t663 = -qJ(5) * t819 + t1274 * t675 + t1452 * t848;
t619 = -pkin(3) * t848 + pkin(10) * t755 + t1277 * t663 + t1282 * t658;
t621 = -pkin(10) * t754 - t1277 * t658 + t1282 * t663;
t694 = t1278 * t755 + t1283 * t754;
t603 = -pkin(9) * t694 - t1278 * t619 + t1283 * t621;
t635 = -pkin(2) * t694 - pkin(3) * t754 - pkin(4) * t819 - pkin(5) * t999 - pkin(11) * t850 - t688;
t677 = t1279 * t848 + t1284 * t695;
t1314 = pkin(8) * t677 + t1279 * t603 + t1284 * t635;
t724 = -pkin(5) * t889 + t745;
t762 = -pkin(11) * t889 + t1447;
t667 = -pkin(4) * t889 + qJ(5) * t828 + t1272 * t762 + t1274 * t724;
t672 = -qJ(5) * t827 - t1272 * t724 + t1274 * t762;
t627 = -pkin(3) * t889 + pkin(10) * t767 + t1277 * t672 + t1282 * t667;
t631 = -pkin(10) * t766 - t1277 * t667 + t1282 * t672;
t702 = t1278 * t767 + t1283 * t766;
t606 = -pkin(9) * t702 - t1278 * t627 + t1283 * t631;
t651 = -pkin(2) * t702 - pkin(3) * t766 - pkin(4) * t827 - pkin(5) * t923 - pkin(11) * t890 + t1443;
t691 = t1279 * t889 + t1284 * t703;
t1313 = pkin(8) * t691 + t1279 * t606 + t1284 * t651;
t726 = -pkin(5) * t896 + t746;
t763 = -pkin(11) * t896 + t1443;
t668 = -pkin(4) * t896 + qJ(5) * t830 + t1272 * t763 + t1274 * t726;
t673 = -qJ(5) * t829 - t1272 * t726 + t1274 * t763;
t628 = -pkin(3) * t896 + pkin(10) * t769 + t1277 * t673 + t1282 * t668;
t632 = -pkin(10) * t768 - t1277 * t668 + t1282 * t673;
t704 = t1278 * t769 + t1283 * t768;
t607 = -pkin(9) * t704 - t1278 * t628 + t1283 * t632;
t652 = -pkin(2) * t704 - pkin(3) * t768 - pkin(4) * t829 - pkin(5) * t927 - pkin(11) * t897 - t1447;
t693 = t1279 * t896 + t1284 * t705;
t1312 = pkin(8) * t693 + t1279 * t607 + t1284 * t652;
t728 = -pkin(4) * t952 + qJ(5) * t736;
t644 = -pkin(3) * t952 + pkin(10) * t684 - qJ(5) * t1445 + t1282 * t728;
t646 = -pkin(10) * t683 - qJ(5) * t1441 - t1277 * t728;
t647 = t1278 * t684 + t1283 * t683;
t609 = -pkin(9) * t647 - t1278 * t644 + t1283 * t646;
t622 = -pkin(2) * t647 - pkin(3) * t683 - pkin(4) * t735;
t645 = t1279 * t952 + t1284 * t648;
t1311 = pkin(8) * t645 + t1279 * t609 + t1284 * t622;
t719 = -pkin(4) * t1019 + qJ(5) * t907 + t736;
t723 = -qJ(5) * t905 - t735;
t662 = -pkin(3) * t1019 + pkin(10) * t818 + t1277 * t723 + t1282 * t719;
t664 = -pkin(10) * t816 - t1277 * t719 + t1282 * t723;
t751 = t1278 * t818 + t1283 * t816;
t624 = -pkin(9) * t751 - t1278 * t662 + t1283 * t664;
t708 = -pkin(2) * t751 - pkin(3) * t816 - pkin(4) * t905;
t738 = t1019 * t1279 + t1284 * t753;
t1310 = pkin(8) * t738 + t1279 * t624 + t1284 * t708;
t843 = -pkin(4) * t981 + qJ(5) * t976 - t1448;
t875 = -qJ(5) * t975 + t1449;
t748 = -pkin(3) * t981 + pkin(10) * t899 + t1277 * t875 + t1282 * t843;
t759 = -pkin(10) * t898 - t1277 * t843 + t1282 * t875;
t813 = t1278 * t899 + t1283 * t898;
t676 = -pkin(9) * t813 - t1278 * t748 + t1283 * t759;
t722 = -pkin(2) * t813 - pkin(3) * t898 - pkin(4) * t975 + t790;
t787 = t1279 * t981 + t1284 * t814;
t1309 = pkin(8) * t787 + t1279 * t676 + t1284 * t722;
t858 = -pkin(4) * t984 + qJ(5) * t1001 + t1449;
t895 = -qJ(5) * t1000 + t1448;
t756 = -pkin(3) * t984 + pkin(10) * t917 + t1277 * t895 + t1282 * t858;
t778 = -pkin(10) * t916 - t1277 * t858 + t1282 * t895;
t841 = t1278 * t917 + t1283 * t916;
t686 = -pkin(9) * t841 - t1278 * t756 + t1283 * t778;
t729 = -pkin(2) * t841 - pkin(3) * t916 - pkin(4) * t1000 + t791;
t803 = t1279 * t984 + t1284 * t842;
t1308 = pkin(8) * t803 + t1279 * t686 + t1284 * t729;
t781 = t1278 * t863 + t1440;
t835 = -pkin(3) * t1055 + pkin(10) * t863;
t717 = -pkin(9) * t781 - pkin(10) * t1440 - t1278 * t835;
t737 = -pkin(2) * t781 - pkin(3) * t862;
t779 = t1055 * t1279 + t1284 * t782;
t1307 = pkin(8) * t779 + t1279 * t717 + t1284 * t737;
t802 = -pkin(3) * t1094 + pkin(10) * t980 + t863;
t821 = -pkin(10) * t978 - t862;
t901 = t1278 * t980 + t1283 * t978;
t730 = -pkin(9) * t901 - t1278 * t802 + t1283 * t821;
t859 = -pkin(2) * t901 - pkin(3) * t978;
t869 = t1094 * t1279 + t1284 * t903;
t1306 = pkin(8) * t869 + t1279 * t730 + t1284 * t859;
t933 = -pkin(3) * t1056 + pkin(10) * t1042 - t1432;
t962 = t1041 * t1283 + t1042 * t1278;
t968 = -pkin(10) * t1041 + t1433;
t831 = -pkin(9) * t962 - t1278 * t933 + t1283 * t968;
t860 = -pkin(2) * t962 + t1277 * t1289 - t1282 * t1460 + (-t1277 * t1457 - t1282 * t1297 - t1041) * pkin(3);
t932 = t1056 * t1279 + t1284 * t963;
t1305 = pkin(8) * t932 + t1279 * t831 + t1284 * t860;
t939 = -pkin(3) * t1462 + pkin(10) * t1074 + t1433;
t989 = -pkin(10) * t1073 + t1432;
t991 = t1073 * t1283 + t1074 * t1278;
t840 = -pkin(9) * t991 - t1278 * t939 + t1283 * t989;
t864 = -pkin(2) * t991 - pkin(3) * t1073 + t938;
t941 = t1279 * t1462 + t1284 * t992;
t1304 = pkin(8) * t941 + t1279 * t840 + t1284 * t864;
t1112 = t1184 * t1278 + t1464;
t1018 = -pkin(2) * t1112 + t1075;
t1063 = -pkin(9) * t1112 + t1425;
t1067 = t1113 * t1284 - t1156 * t1279;
t1303 = pkin(8) * t1067 + t1018 * t1284 + t1063 * t1279;
t1123 = t1196 * t1283 + t1423;
t1022 = -pkin(2) * t1123 + t1076;
t1069 = -pkin(9) * t1123 + t1424;
t1070 = t1124 * t1284 + t1158 * t1279;
t1302 = pkin(8) * t1070 + t1022 * t1284 + t1069 * t1279;
t1166 = t1207 * t1279 + t1208 * t1284;
t1301 = pkin(8) * t1166 + t1121;
t1034 = t1086 * t1284 - t1170 * t1279;
t1084 = -t1155 * t1278 + t1160 * t1283;
t949 = -pkin(9) * t1084 - t993;
t1300 = pkin(8) * t1034 - t1084 * t1453 + t1279 * t949;
t956 = t1145 * t1279 + t1284 * t994;
t1299 = pkin(8) * t956 + t1371 * t993;
t1255 = t1280 * qJDD(1) + t1285 * t1459;
t1243 = t1399 * t1408;
t1242 = (t1270 - t1271) * t1408;
t1238 = -pkin(7) * t1255 + g(3) * t1285;
t1214 = t1275 * t1284 * t1230;
t1213 = t1230 * t1406;
t1211 = t1380 * t1399 * t1439;
t1205 = (t1397 + (0.2e1 * qJD(2) + t1438) * t1436) * t1273;
t1201 = t1284 * t1236 - t1270 * t1320;
t1200 = -t1279 * t1237 - t1271 * t1320;
t1198 = t1240 * t1284 - t1418;
t1197 = -t1239 * t1279 + t1415;
t1183 = (t1275 * t1236 + t1436 * t1461) * t1279;
t1182 = (t1275 * t1237 - t1437 * t1461) * t1284;
t1168 = (t1227 * t1278 + t1228 * t1283) * t1258;
t1167 = -t1206 * t1279 + t1209 * t1284;
t1164 = t1273 * t1209 + t1275 * t1326;
t1163 = -t1273 * t1208 + t1275 * t1328;
t1162 = -t1273 * t1207 + t1275 * t1327;
t1161 = -t1275 * t1209 + t1273 * t1326;
t1154 = -t1273 * t1205 + t1275 * t1329;
t1153 = t1275 * t1205 + t1273 * t1329;
t1151 = t1181 * t1278 - t1228 * t1409;
t1149 = -t1227 * t1410 - t1283 * t1292;
t1148 = t1169 * t1284 - t1231 * t1279;
t1144 = -t1273 * t1242 + t1275 * t1331;
t1143 = t1273 * t1243 + t1275 * t1330;
t1142 = -t1275 * t1243 + t1273 * t1330;
t1135 = t1203 * t1278 - t1422;
t1134 = t1204 * t1283 + t1466;
t1105 = (-t1192 * t1282 - t1193 * t1277) * t1250;
t1104 = (-t1192 * t1277 + t1193 * t1282) * t1250;
t1103 = -t1280 * t1164 + t1199 * t1285;
t1102 = t1164 * t1285 + t1280 * t1199;
t1100 = t1152 * t1284 + t1387;
t1099 = t1150 * t1284 - t1387;
t1098 = -t1280 * t1154 + t1194 * t1285;
t1097 = t1154 * t1285 + t1280 * t1194;
t1096 = t1273 * t1212 + t1275 * t1332;
t1095 = -t1275 * t1212 + t1273 * t1332;
t1089 = -t1273 * t1168 + t1275 * t1333;
t1088 = -t1280 * t1143 + t1166 * t1285;
t1087 = t1143 * t1285 + t1280 * t1166;
t1083 = t1156 * t1278 + t1158 * t1283;
t1078 = t1137 * t1284 - t1155 * t1279;
t1077 = t1136 * t1284 - t1160 * t1279;
t1071 = -t1404 + (-t1161 * t1273 - t1164 * t1275) * pkin(8);
t1065 = -t1403 + (-t1153 * t1273 - t1154 * t1275) * pkin(8);
t1064 = -pkin(1) * t1161 + t1273 * t1188 + t1275 * t1368;
t1054 = t1085 * t1284 - t1195 * t1279;
t1053 = -pkin(1) * t1153 + t1273 * t1189 + t1275 * t1369;
t1040 = (t1131 * t1274 - t1133 * t1272) * t1250;
t1039 = (t1131 * t1272 + t1133 * t1274) * t1250;
t1038 = -t1273 * t1151 + t1275 * t1316;
t1037 = -t1273 * t1149 + t1275 * t1317;
t1033 = -t1104 * t1278 + t1105 * t1283;
t1032 = t1104 * t1283 + t1105 * t1278;
t1031 = pkin(8) * t1121 * t1275 - pkin(1) * t1095;
t1030 = -t1280 * t1096 + t1121 * t1285;
t1029 = t1096 * t1285 + t1280 * t1121;
t1028 = t1033 * t1284 - t1419;
t1027 = -pkin(1) * t1142 + t1275 * t1301;
t1026 = -pkin(2) * t1158 + pkin(9) * t1124 + t1425;
t1025 = -t1273 * t1135 + t1275 * t1334;
t1024 = -t1273 * t1134 + t1275 * t1335;
t1023 = (-t1095 * t1273 - t1096 * t1275) * pkin(8);
t1021 = pkin(2) * t1156 + pkin(9) * t1113 - t1424;
t1020 = (-t1142 * t1273 - t1143 * t1275) * pkin(8) - t1332;
t1016 = -t1273 * t1123 + t1275 * t1336;
t1015 = t1275 * t1123 + t1273 * t1336;
t1009 = -t1273 * t1112 + t1275 * t1337;
t1008 = t1275 * t1112 + t1273 * t1337;
t996 = t1080 * t1283 + t1082 * t1278;
t995 = t1079 * t1283 + t1081 * t1278;
t990 = -t1273 * t1083 + t1275 * t1339;
t988 = -t1273 * t1084 + t1275 * t1338;
t987 = t1275 * t1084 + t1273 * t1338;
t965 = t1045 * t1283 + t1046 * t1278;
t964 = t1043 * t1283 + t1044 * t1278;
t961 = -t1039 * t1277 + t1040 * t1282;
t960 = t1039 * t1282 + t1040 * t1277;
t957 = -pkin(2) * t1145 + pkin(9) * t994;
t955 = -t1280 * t1016 + t1070 * t1285;
t954 = t1016 * t1285 + t1280 * t1070;
t953 = -t1032 * t1273 + t1033 * t1405 + t1214;
t951 = -t1280 * t1009 + t1067 * t1285;
t950 = t1009 * t1285 + t1280 * t1067;
t948 = t1284 * t967 - t1389;
t947 = t1284 * t966 + t1389;
t943 = -t1057 * t1279 + t1284 * t998;
t942 = -t1061 * t1279 + t1284 * t997;
t940 = pkin(2) * t1170 + pkin(9) * t1086 + t994;
t935 = t1034 * t1285 - t1280 * t988;
t934 = t1280 * t1034 + t1285 * t988;
t909 = -t1273 * t993 + t1275 * t1342;
t908 = t1273 * t1342 + t1275 * t993;
t900 = t1278 * t979 + t1283 * t977;
t886 = -t1278 * t960 + t1283 * t961;
t885 = t1278 * t961 + t1283 * t960;
t880 = -t1273 * t996 + t1275 * t1348;
t879 = -t1273 * t995 + t1275 * t1346;
t878 = t1284 * t886 - t1419;
t874 = -t1138 * t1279 + t1284 * t902;
t873 = -t1273 * t991 + t1275 * t1347;
t872 = t1273 * t1347 + t1275 * t991;
t871 = -t1273 * t965 + t1275 * t1321;
t870 = -t1273 * t964 + t1275 * t1322;
t868 = -t1279 * t1022 + t1284 * t1069 + (-t1015 * t1273 - t1016 * t1275) * pkin(8);
t867 = -t1273 * t962 + t1275 * t1349;
t866 = t1273 * t1349 + t1275 * t962;
t865 = -t1279 * t1018 + t1284 * t1063 + (-t1008 * t1273 - t1009 * t1275) * pkin(8);
t861 = -pkin(1) * t1015 - t1273 * t1026 + t1275 * t1302;
t857 = -t1280 * t909 + t1285 * t956;
t856 = t1280 * t956 + t1285 * t909;
t855 = -pkin(1) * t1008 - t1273 * t1021 + t1275 * t1303;
t852 = t1278 * t931 + t1283 * t929;
t851 = t1278 * t930 + t1283 * t928;
t832 = t1084 * t1454 + t1284 * t949 + (-t1273 * t987 - t1275 * t988) * pkin(8);
t826 = -t1280 * t873 + t1285 * t941;
t825 = t1280 * t941 + t1285 * t873;
t822 = -pkin(2) * t1462 + pkin(9) * t992 + t1278 * t989 + t1283 * t939;
t810 = t1278 * t894 + t1283 * t892;
t809 = t1278 * t893 + t1283 * t891;
t808 = -pkin(2) * t1056 + pkin(9) * t963 + t1278 * t968 + t1283 * t933;
t807 = -t1279 * t982 + t1284 * t854;
t806 = -t1279 * t986 + t1284 * t853;
t805 = -t1280 * t867 + t1285 * t932;
t804 = t1280 * t932 + t1285 * t867;
t801 = -t1273 * t900 + t1275 * t1343;
t796 = -t1273 * t885 + t1405 * t886 + t1214;
t795 = -t1273 * t901 + t1275 * t1344;
t794 = t1273 * t1344 + t1275 * t901;
t793 = t1284 * t812 + t1391;
t792 = t1284 * t811 - t1391;
t788 = -pkin(1) * t987 - t1273 * t940 + t1275 * t1300;
t783 = (-pkin(9) * t1284 + t1454) * t993 + (-t1273 * t908 - t1275 * t909) * pkin(8);
t780 = -pkin(1) * t908 - t1273 * t957 + t1275 * t1299;
t777 = -t1280 * t795 + t1285 * t869;
t776 = t1280 * t869 + t1285 * t795;
t770 = t1278 * t834 + t1283 * t833;
t765 = -t1273 * t852 + t1275 * t1352;
t764 = -t1273 * t851 + t1275 * t1353;
t758 = -t1273 * t841 + t1275 * t1354;
t757 = t1273 * t1354 + t1275 * t841;
t750 = t1278 * t817 + t1283 * t815;
t749 = -t1279 * t969 + t1284 * t771;
t747 = -t1068 * t1279 + t1284 * t752;
t742 = t1278 * t800 + t1283 * t798;
t741 = t1278 * t799 + t1283 * t797;
t740 = -t1273 * t810 + t1275 * t1323;
t739 = -t1273 * t809 + t1275 * t1324;
t734 = -t1273 * t813 + t1275 * t1355;
t733 = t1273 * t1355 + t1275 * t813;
t732 = -t1279 * t920 + t1284 * t744;
t731 = -t1279 * t918 + t1284 * t743;
t727 = -pkin(2) * t1094 + pkin(9) * t903 + t1278 * t821 + t1283 * t802;
t725 = -t1279 * t864 + t1284 * t840 + (-t1273 * t872 - t1275 * t873) * pkin(8);
t721 = -t1280 * t758 + t1285 * t803;
t720 = t1280 * t803 + t1285 * t758;
t718 = -t1279 * t860 + t1284 * t831 + (-t1273 * t866 - t1275 * t867) * pkin(8);
t716 = -t1273 * t781 + t1275 * t1350;
t715 = t1273 * t1350 + t1275 * t781;
t714 = -pkin(2) * t1055 + pkin(9) * t782 - pkin(10) * t1444 + t1283 * t835;
t713 = -pkin(1) * t872 - t1273 * t822 + t1275 * t1304;
t710 = t1278 * t775 + t1283 * t773;
t709 = t1278 * t774 + t1283 * t772;
t707 = -t1280 * t734 + t1285 * t787;
t706 = t1280 * t787 + t1285 * t734;
t701 = -pkin(1) * t866 - t1273 * t808 + t1275 * t1305;
t699 = t1278 * t761 + t1283 * t760;
t698 = -t1273 * t770 + t1275 * t1356;
t697 = -t1279 * t911 + t1284 * t712;
t696 = -t1279 * t910 + t1284 * t711;
t692 = -t1273 * t750 + t1275 * t1345;
t690 = -t1273 * t751 + t1275 * t1351;
t689 = t1273 * t1351 + t1275 * t751;
t685 = -t1279 * t847 + t1284 * t700;
t682 = -pkin(2) * t984 + pkin(9) * t842 + t1278 * t778 + t1283 * t756;
t681 = -t1280 * t716 + t1285 * t779;
t680 = t1280 * t779 + t1285 * t716;
t679 = -t1273 * t742 + t1275 * t1357;
t678 = -t1273 * t741 + t1275 * t1358;
t674 = -pkin(2) * t981 + pkin(9) * t814 + t1278 * t759 + t1283 * t748;
t671 = -t1279 * t859 + t1284 * t730 + (-t1273 * t794 - t1275 * t795) * pkin(8);
t666 = -t1280 * t690 + t1285 * t738;
t665 = t1280 * t738 + t1285 * t690;
t661 = -t1273 * t710 + t1275 * t1359;
t660 = -t1273 * t709 + t1275 * t1360;
t659 = -pkin(1) * t794 - t1273 * t727 + t1275 * t1306;
t657 = -t1273 * t704 + t1275 * t1361;
t656 = t1273 * t1361 + t1275 * t704;
t655 = -t1273 * t702 + t1275 * t1362;
t654 = t1273 * t1362 + t1275 * t702;
t653 = -t1273 * t699 + t1275 * t1363;
t650 = -t1273 * t694 + t1275 * t1364;
t649 = t1273 * t1364 + t1275 * t694;
t643 = -t1279 * t729 + t1284 * t686 + (-t1273 * t757 - t1275 * t758) * pkin(8);
t640 = -t1279 * t737 + t1284 * t717 + (-t1273 * t715 - t1275 * t716) * pkin(8);
t639 = -t1280 * t657 + t1285 * t693;
t638 = t1280 * t693 + t1285 * t657;
t637 = -t1280 * t655 + t1285 * t691;
t636 = t1280 * t691 + t1285 * t655;
t634 = -t1279 * t722 + t1284 * t676 + (-t1273 * t733 - t1275 * t734) * pkin(8);
t633 = -pkin(1) * t715 - t1273 * t714 + t1275 * t1307;
t630 = -t1280 * t650 + t1285 * t677;
t629 = t1280 * t677 + t1285 * t650;
t625 = -pkin(1) * t757 - t1273 * t682 + t1275 * t1308;
t623 = -pkin(2) * t1019 + pkin(9) * t753 + t1278 * t664 + t1283 * t662;
t620 = -pkin(1) * t733 - t1273 * t674 + t1275 * t1309;
t617 = -t1273 * t647 + t1275 * t1365;
t616 = t1273 * t1365 + t1275 * t647;
t612 = -t1279 * t708 + t1284 * t624 + (-t1273 * t689 - t1275 * t690) * pkin(8);
t611 = -t1280 * t617 + t1285 * t645;
t610 = t1280 * t645 + t1285 * t617;
t608 = -pkin(2) * t952 + pkin(9) * t648 + t1278 * t646 + t1283 * t644;
t605 = -pkin(2) * t896 + pkin(9) * t705 + t1278 * t632 + t1283 * t628;
t604 = -pkin(2) * t889 + pkin(9) * t703 + t1278 * t631 + t1283 * t627;
t602 = -pkin(2) * t848 + pkin(9) * t695 + t1278 * t621 + t1283 * t619;
t601 = -pkin(1) * t689 - t1273 * t623 + t1275 * t1310;
t597 = -t1273 * t614 + t1275 * t1366;
t596 = t1273 * t1366 + t1275 * t614;
t595 = -t1279 * t652 + t1284 * t607 + (-t1273 * t656 - t1275 * t657) * pkin(8);
t594 = -t1279 * t651 + t1284 * t606 + (-t1273 * t654 - t1275 * t655) * pkin(8);
t593 = -t1279 * t635 + t1284 * t603 + (-t1273 * t649 - t1275 * t650) * pkin(8);
t592 = -t1280 * t597 + t1285 * t613;
t591 = t1280 * t613 + t1285 * t597;
t590 = -t1279 * t622 + t1284 * t609 + (-t1273 * t616 - t1275 * t617) * pkin(8);
t589 = -pkin(1) * t656 - t1273 * t605 + t1275 * t1312;
t588 = -pkin(1) * t654 - t1273 * t604 + t1275 * t1313;
t587 = -pkin(1) * t616 - t1273 * t608 + t1275 * t1311;
t586 = -pkin(1) * t649 - t1273 * t602 + t1275 * t1314;
t584 = -pkin(2) * t687 + pkin(9) * t615 + t1278 * t600 + t1283 * t598;
t583 = -t1279 * t599 + t1284 * t585 + (-t1273 * t596 - t1275 * t597) * pkin(8);
t582 = -pkin(1) * t596 - t1273 * t584 + t1275 * t1315;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1255, -t1256, 0, t1216, 0, 0, 0, 0, 0, 0, t1103, t1098, t1088, t1030, 0, 0, 0, 0, 0, 0, t951, t955, t935, t857, 0, 0, 0, 0, 0, 0, t805, t826, t777, t681, 0, 0, 0, 0, 0, 0, t707, t721, t666, t611, 0, 0, 0, 0, 0, 0, t637, t639, t630, t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1256, -t1255, 0, t1215, 0, 0, 0, 0, 0, 0, t1102, t1097, t1087, t1029, 0, 0, 0, 0, 0, 0, t950, t954, t934, t856, 0, 0, 0, 0, 0, 0, t804, t825, t776, t680, 0, 0, 0, 0, 0, 0, t706, t720, t665, t610, 0, 0, 0, 0, 0, 0, t636, t638, t629, t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1161, t1153, t1142, t1095, 0, 0, 0, 0, 0, 0, t1008, t1015, t987, t908, 0, 0, 0, 0, 0, 0, t866, t872, t794, t715, 0, 0, 0, 0, 0, 0, t733, t757, t689, t616, 0, 0, 0, 0, 0, 0, t654, t656, t649, t596; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1256, 0, -t1255, 0, t1370, -t1238, -t1215, -pkin(7) * t1215, -t1280 * t1183 + t1201 * t1285, -t1280 * t1144 + t1167 * t1285, -t1280 * t1162 + t1197 * t1285, -t1280 * t1182 + t1200 * t1285, -t1280 * t1163 + t1198 * t1285, t1285 * t1211 + t1280 * t1325, -pkin(7) * t1102 - t1280 * t1064 + t1071 * t1285, -pkin(7) * t1097 - t1280 * t1053 + t1065 * t1285, -pkin(7) * t1087 + t1020 * t1285 - t1280 * t1027, -pkin(7) * t1029 + t1023 * t1285 - t1280 * t1031, -t1280 * t1038 + t1100 * t1285, t1054 * t1285 - t1280 * t990, -t1280 * t1024 + t1077 * t1285, -t1280 * t1037 + t1099 * t1285, -t1280 * t1025 + t1078 * t1285, -t1280 * t1089 + t1148 * t1285, -pkin(7) * t950 - t1280 * t855 + t1285 * t865, -pkin(7) * t954 - t1280 * t861 + t1285 * t868, -pkin(7) * t934 - t1280 * t788 + t1285 * t832, -pkin(7) * t856 - t1280 * t780 + t1285 * t783, -t1280 * t871 + t1285 * t948, -t1280 * t801 + t1285 * t874, -t1280 * t879 + t1285 * t942, -t1280 * t870 + t1285 * t947, -t1280 * t880 + t1285 * t943, t1028 * t1285 - t1280 * t953, -pkin(7) * t804 - t1280 * t701 + t1285 * t718, -pkin(7) * t825 - t1280 * t713 + t1285 * t725, -pkin(7) * t776 - t1280 * t659 + t1285 * t671, -pkin(7) * t680 - t1280 * t633 + t1285 * t640, -t1280 * t740 + t1285 * t793, -t1280 * t692 + t1285 * t747, -t1280 * t764 + t1285 * t806, -t1280 * t739 + t1285 * t792, -t1280 * t765 + t1285 * t807, -t1280 * t796 + t1285 * t878, -pkin(7) * t706 - t1280 * t620 + t1285 * t634, -pkin(7) * t720 - t1280 * t625 + t1285 * t643, -pkin(7) * t665 - t1280 * t601 + t1285 * t612, -pkin(7) * t610 - t1280 * t587 + t1285 * t590, -t1280 * t679 + t1285 * t732, -t1280 * t653 + t1285 * t685, -t1280 * t660 + t1285 * t696, -t1280 * t678 + t1285 * t731, -t1280 * t661 + t1285 * t697, -t1280 * t698 + t1285 * t749, -pkin(7) * t636 - t1280 * t588 + t1285 * t594, -pkin(7) * t638 - t1280 * t589 + t1285 * t595, -pkin(7) * t629 - t1280 * t586 + t1285 * t593, -pkin(7) * t591 - t1280 * t582 + t1285 * t583; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1255, 0, t1256, 0, t1238, t1370, t1216, pkin(7) * t1216, t1183 * t1285 + t1280 * t1201, t1144 * t1285 + t1280 * t1167, t1162 * t1285 + t1280 * t1197, t1182 * t1285 + t1280 * t1200, t1163 * t1285 + t1280 * t1198, t1280 * t1211 - t1285 * t1325, pkin(7) * t1103 + t1064 * t1285 + t1280 * t1071, pkin(7) * t1098 + t1053 * t1285 + t1280 * t1065, pkin(7) * t1088 + t1280 * t1020 + t1027 * t1285, pkin(7) * t1030 + t1280 * t1023 + t1031 * t1285, t1038 * t1285 + t1280 * t1100, t1280 * t1054 + t1285 * t990, t1024 * t1285 + t1280 * t1077, t1037 * t1285 + t1280 * t1099, t1025 * t1285 + t1280 * t1078, t1089 * t1285 + t1280 * t1148, pkin(7) * t951 + t1280 * t865 + t1285 * t855, pkin(7) * t955 + t1280 * t868 + t1285 * t861, pkin(7) * t935 + t1280 * t832 + t1285 * t788, pkin(7) * t857 + t1280 * t783 + t1285 * t780, t1280 * t948 + t1285 * t871, t1280 * t874 + t1285 * t801, t1280 * t942 + t1285 * t879, t1280 * t947 + t1285 * t870, t1280 * t943 + t1285 * t880, t1280 * t1028 + t1285 * t953, pkin(7) * t805 + t1280 * t718 + t1285 * t701, pkin(7) * t826 + t1280 * t725 + t1285 * t713, pkin(7) * t777 + t1280 * t671 + t1285 * t659, pkin(7) * t681 + t1280 * t640 + t1285 * t633, t1280 * t793 + t1285 * t740, t1280 * t747 + t1285 * t692, t1280 * t806 + t1285 * t764, t1280 * t792 + t1285 * t739, t1280 * t807 + t1285 * t765, t1280 * t878 + t1285 * t796, pkin(7) * t707 + t1280 * t634 + t1285 * t620, pkin(7) * t721 + t1280 * t643 + t1285 * t625, pkin(7) * t666 + t1280 * t612 + t1285 * t601, pkin(7) * t611 + t1280 * t590 + t1285 * t587, t1280 * t732 + t1285 * t679, t1280 * t685 + t1285 * t653, t1280 * t696 + t1285 * t660, t1280 * t731 + t1285 * t678, t1280 * t697 + t1285 * t661, t1280 * t749 + t1285 * t698, pkin(7) * t637 + t1280 * t594 + t1285 * t588, pkin(7) * t639 + t1280 * t595 + t1285 * t589, pkin(7) * t630 + t1280 * t593 + t1285 * t586, pkin(7) * t592 + t1280 * t583 + t1285 * t582; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1260, t1261, 0, 0, t1236 * t1407 + t1340, t1275 * t1242 + t1273 * t1331, t1275 * t1207 + t1273 * t1327, t1237 * t1406 - t1340, t1275 * t1208 + t1273 * t1328, t1275 * t1373, pkin(1) * t1164 - t1275 * t1188 + t1273 * t1368, pkin(1) * t1154 - t1275 * t1189 + t1273 * t1369, pkin(1) * t1143 + t1273 * t1301, pkin(1) * t1096 + t1121 * t1451, t1275 * t1151 + t1273 * t1316, t1275 * t1083 + t1273 * t1339, t1275 * t1134 + t1273 * t1335, t1275 * t1149 + t1273 * t1317, t1275 * t1135 + t1273 * t1334, t1275 * t1168 + t1273 * t1333, pkin(1) * t1009 + t1275 * t1021 + t1273 * t1303, pkin(1) * t1016 + t1275 * t1026 + t1273 * t1302, pkin(1) * t988 + t1273 * t1300 + t1275 * t940, pkin(1) * t909 + t1273 * t1299 + t1275 * t957, t1273 * t1321 + t1275 * t965, t1273 * t1343 + t1275 * t900, t1273 * t1346 + t1275 * t995, t1273 * t1322 + t1275 * t964, t1273 * t1348 + t1275 * t996, t1032 * t1275 + t1033 * t1407 + t1213, pkin(1) * t867 + t1273 * t1305 + t1275 * t808, pkin(1) * t873 + t1273 * t1304 + t1275 * t822, pkin(1) * t795 + t1273 * t1306 + t1275 * t727, pkin(1) * t716 + t1273 * t1307 + t1275 * t714, t1273 * t1323 + t1275 * t810, t1273 * t1345 + t1275 * t750, t1273 * t1353 + t1275 * t851, t1273 * t1324 + t1275 * t809, t1273 * t1352 + t1275 * t852, t1275 * t885 + t1407 * t886 + t1213, pkin(1) * t734 + t1273 * t1309 + t1275 * t674, pkin(1) * t758 + t1273 * t1308 + t1275 * t682, pkin(1) * t690 + t1273 * t1310 + t1275 * t623, pkin(1) * t617 + t1273 * t1311 + t1275 * t608, t1273 * t1357 + t1275 * t742, t1273 * t1363 + t1275 * t699, t1273 * t1360 + t1275 * t709, t1273 * t1358 + t1275 * t741, t1273 * t1359 + t1275 * t710, t1273 * t1356 + t1275 * t770, pkin(1) * t655 + t1273 * t1313 + t1275 * t604, pkin(1) * t657 + t1273 * t1312 + t1275 * t605, pkin(1) * t650 + t1273 * t1314 + t1275 * t602, pkin(1) * t597 + t1273 * t1315 + t1275 * t584;];
tauB_reg  = t1;
