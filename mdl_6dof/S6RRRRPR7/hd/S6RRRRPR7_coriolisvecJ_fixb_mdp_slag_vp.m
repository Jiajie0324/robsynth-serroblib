% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% MDP [33x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRPR7_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPR7_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(33,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [33 1]), ...
  'S6RRRRPR7_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [33x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:34:38
% EndTime: 2019-03-09 22:35:06
% DurationCPUTime: 19.02s
% Computational Cost: add. (18459->620), mult. (48065->851), div. (0->0), fcn. (38905->12), ass. (0->272)
t727 = sin(pkin(6));
t737 = cos(qJ(2));
t820 = qJD(1) * t737;
t800 = t727 * t820;
t704 = -qJD(3) + t800;
t895 = qJD(4) - t704;
t733 = sin(qJ(2));
t736 = cos(qJ(3));
t822 = qJD(1) * t727;
t801 = t733 * t822;
t729 = cos(pkin(6));
t821 = qJD(1) * t729;
t807 = pkin(1) * t821;
t666 = -pkin(8) * t801 + t737 * t807;
t756 = (pkin(2) * t733 - pkin(9) * t737) * t727;
t667 = qJD(1) * t756;
t732 = sin(qJ(3));
t783 = -t666 * t732 + t736 * t667;
t863 = pkin(9) + pkin(10);
t803 = qJD(3) * t863;
t843 = t736 * t737;
t894 = (pkin(3) * t733 - pkin(10) * t843) * t822 + t783 + t736 * t803;
t774 = t732 * t800;
t829 = t736 * t666 + t732 * t667;
t892 = -pkin(10) * t774 + t732 * t803 + t829;
t734 = cos(qJ(6));
t811 = qJD(6) * t734;
t713 = qJD(2) + t821;
t775 = t732 * t801;
t647 = -t736 * t713 + t775;
t649 = t713 * t732 + t736 * t801;
t731 = sin(qJ(4));
t735 = cos(qJ(4));
t603 = t735 * t647 + t649 * t731;
t726 = sin(pkin(12));
t728 = cos(pkin(12));
t759 = t647 * t731 - t735 * t649;
t869 = -t728 * t603 + t726 * t759;
t893 = -t869 * t734 + t811;
t684 = t731 * t732 - t735 * t736;
t891 = t895 * t684;
t685 = t731 * t736 + t732 * t735;
t831 = t895 * t685;
t890 = t894 * t735;
t706 = t863 * t732;
t707 = t863 * t736;
t813 = qJD(4) * t735;
t814 = qJD(4) * t731;
t889 = -t706 * t813 - t707 * t814 - t894 * t731 - t892 * t735;
t808 = qJD(1) * qJD(2);
t794 = t727 * t808;
t772 = t737 * t794;
t815 = qJD(3) * t736;
t618 = -qJD(3) * t775 + t713 * t815 + t736 * t772;
t817 = qJD(2) * t737;
t797 = t732 * t817;
t816 = qJD(3) * t732;
t619 = (t733 * t815 + t797) * t822 + t713 * t816;
t541 = t735 * t618 - t731 * t619 - t647 * t813 - t649 * t814;
t740 = qJD(4) * t759 - t618 * t731 - t735 * t619;
t503 = t541 * t728 + t726 * t740;
t730 = sin(qJ(6));
t773 = t733 * t794;
t804 = t734 * t503 + t730 * t773 + t811 * t895;
t812 = qJD(6) * t730;
t868 = -t603 * t726 - t728 * t759;
t484 = -t812 * t868 + t804;
t546 = t730 * t895 + t734 * t868;
t791 = t503 * t730 - t734 * t773;
t485 = qJD(6) * t546 + t791;
t854 = t868 * t730;
t544 = -t734 * t895 + t854;
t888 = t484 * t734 - t730 * t485 - t893 * t544;
t482 = t484 * t730;
t502 = t541 * t726 - t728 * t740;
t498 = t730 * t502;
t551 = qJD(6) - t869;
t857 = t546 * t868;
t887 = MDP(22) * t773 + (-t603 ^ 2 + t759 ^ 2) * MDP(19) + (t603 * t895 + t541) * MDP(20) + (-t759 * t895 + t740) * MDP(21) - t603 * MDP(18) * t759 + (t893 * t546 + t482) * MDP(27) + (t498 - t857) * MDP(29) + (t893 * MDP(29) - t868 * MDP(31)) * t551;
t710 = t733 * t807;
t670 = pkin(8) * t800 + t710;
t633 = pkin(9) * t713 + t670;
t661 = (-pkin(2) * t737 - pkin(9) * t733 - pkin(1)) * t727;
t643 = qJD(1) * t661;
t595 = -t633 * t732 + t736 * t643;
t577 = -pkin(10) * t649 + t595;
t567 = -pkin(3) * t704 + t577;
t596 = t633 * t736 + t643 * t732;
t578 = -pkin(10) * t647 + t596;
t574 = t731 * t578;
t524 = t735 * t567 - t574;
t873 = qJ(5) * t759;
t509 = t524 + t873;
t506 = pkin(4) * t895 + t509;
t576 = t735 * t578;
t525 = t567 * t731 + t576;
t874 = qJ(5) * t603;
t510 = t525 - t874;
t859 = t510 * t726;
t475 = t506 * t728 - t859;
t473 = -pkin(5) * t895 - t475;
t886 = t473 * t869;
t858 = t544 * t868;
t885 = t546 * t551;
t826 = -t731 * t706 + t735 * t707;
t883 = -pkin(4) * t801 + t891 * qJ(5) - qJD(4) * t826 - qJD(5) * t685 + t731 * t892 - t890;
t882 = qJ(5) * t831 + qJD(5) * t684 - t889;
t771 = -t670 + (-t774 + t816) * pkin(3);
t881 = pkin(4) * t831 + t771;
t668 = qJD(2) * t756;
t656 = qJD(1) * t668;
t846 = t727 * t733;
t714 = pkin(8) * t846;
t861 = pkin(1) * t737;
t671 = (t729 * t861 - t714) * qJD(2);
t657 = qJD(1) * t671;
t741 = -qJD(3) * t596 + t736 * t656 - t732 * t657;
t532 = pkin(3) * t773 - pkin(10) * t618 + t741;
t752 = -t633 * t816 + t643 * t815 + t732 * t656 + t736 * t657;
t535 = -pkin(10) * t619 + t752;
t742 = -qJD(4) * t525 + t735 * t532 - t731 * t535;
t463 = pkin(4) * t773 - qJ(5) * t541 + qJD(5) * t759 + t742;
t776 = -t731 * t532 - t735 * t535 - t567 * t813 + t578 * t814;
t465 = qJ(5) * t740 - qJD(5) * t603 - t776;
t452 = t463 * t728 - t465 * t726;
t450 = -pkin(5) * t773 - t452;
t449 = t450 * t730;
t507 = t728 * t510;
t476 = t726 * t506 + t507;
t474 = pkin(11) * t895 + t476;
t632 = -pkin(2) * t713 - t666;
t607 = pkin(3) * t647 + t632;
t562 = pkin(4) * t603 + qJD(5) + t607;
t494 = -pkin(5) * t869 - pkin(11) * t868 + t562;
t459 = t474 * t734 + t494 * t730;
t880 = t459 * t868 + t473 * t811 + t449;
t763 = t474 * t730 - t494 * t734;
t879 = -t450 * t734 + t473 * t812 + t763 * t868;
t877 = pkin(5) * t868 - pkin(11) * t869;
t876 = pkin(4) * t759;
t835 = -t726 * t891 + t728 * t831;
t872 = -t726 * t831 - t728 * t891;
t871 = t603 * t607 + t776;
t870 = t607 * t759 + t742;
t723 = t727 ^ 2;
t866 = -0.2e1 * t723 * t808;
t865 = MDP(5) * (t733 ^ 2 - t737 ^ 2);
t839 = t726 * t882 + t728 * t883;
t837 = t726 * t883 - t728 * t882;
t677 = t729 * t732 + t736 * t846;
t845 = t727 * t737;
t862 = pkin(1) * t733;
t660 = pkin(8) * t845 + (pkin(9) + t862) * t729;
t784 = -t660 * t732 + t736 * t661;
t584 = -pkin(3) * t845 - pkin(10) * t677 + t784;
t676 = -t729 * t736 + t732 * t846;
t830 = t736 * t660 + t732 * t661;
t590 = -pkin(10) * t676 + t830;
t834 = t731 * t584 + t735 * t590;
t860 = pkin(3) * qJD(4);
t622 = -t684 * t726 + t685 * t728;
t853 = t622 * t734;
t852 = t647 * t704;
t851 = t649 * t704;
t850 = t704 * t732;
t849 = t704 * t736;
t738 = qJD(1) ^ 2;
t848 = t723 * t738;
t847 = t726 * t731;
t844 = t728 * t731;
t499 = t734 * t502;
t453 = t726 * t463 + t728 * t465;
t615 = t735 * t676 + t677 * t731;
t627 = qJD(3) * t677 + t727 * t797;
t798 = t727 * t817;
t628 = -qJD(3) * t676 + t736 * t798;
t559 = -qJD(4) * t615 - t627 * t731 + t628 * t735;
t616 = -t676 * t731 + t677 * t735;
t743 = -qJD(3) * t830 + t736 * t668 - t671 * t732;
t819 = qJD(2) * t733;
t799 = t727 * t819;
t543 = pkin(3) * t799 - pkin(10) * t628 + t743;
t751 = -t660 * t816 + t661 * t815 + t732 * t668 + t736 * t671;
t548 = -pkin(10) * t627 + t751;
t744 = -qJD(4) * t834 + t735 * t543 - t548 * t731;
t468 = pkin(4) * t799 - qJ(5) * t559 - qJD(5) * t616 + t744;
t560 = qJD(4) * t616 + t735 * t627 + t628 * t731;
t750 = t731 * t543 + t735 * t548 + t584 * t813 - t590 * t814;
t470 = -qJ(5) * t560 - qJD(5) * t615 + t750;
t457 = t726 * t468 + t728 * t470;
t838 = pkin(5) * t801 - t839;
t787 = t735 * t584 - t590 * t731;
t520 = -pkin(4) * t845 - qJ(5) * t616 + t787;
t522 = -qJ(5) * t615 + t834;
t489 = t726 * t520 + t728 * t522;
t836 = t735 * t577 - t574;
t515 = t836 + t873;
t790 = -t577 * t731 - t576;
t755 = t790 + t874;
t828 = -t515 * t726 + t728 * t755 + (t726 * t735 + t844) * t860;
t827 = -t728 * t515 - t726 * t755 + (t728 * t735 - t847) * t860;
t658 = pkin(8) * t772 + qJD(2) * t710;
t672 = t729 * pkin(1) * t819 + pkin(8) * t798;
t720 = pkin(3) * t735 + pkin(4);
t674 = pkin(3) * t844 + t726 * t720;
t818 = qJD(2) * t736;
t810 = qJD(2) - t713;
t806 = t730 * t845;
t721 = -pkin(3) * t736 - pkin(2);
t802 = t723 * t820;
t451 = pkin(11) * t773 + t453;
t594 = pkin(3) * t619 + t658;
t519 = -pkin(4) * t740 + t594;
t461 = pkin(5) * t502 - pkin(11) * t503 + t519;
t792 = -t451 * t730 + t734 * t461;
t789 = -t730 * t872 - t734 * t801;
t788 = t730 * t801 - t734 * t872;
t782 = -t735 * t706 - t707 * t731;
t781 = t551 * t730;
t664 = pkin(11) + t674;
t769 = pkin(3) * t649 - t876;
t779 = qJD(6) * t664 + t769 + t877;
t717 = pkin(4) * t726 + pkin(11);
t778 = qJD(6) * t717 - t876 + t877;
t777 = t723 * t733 * t737 * MDP(4);
t608 = pkin(3) * t627 + t672;
t770 = pkin(1) * t866;
t621 = t728 * t684 + t685 * t726;
t758 = pkin(4) * t684 + t721;
t568 = pkin(5) * t621 - pkin(11) * t622 + t758;
t768 = pkin(11) * t801 - qJD(6) * t568 - t837;
t611 = -qJ(5) * t684 + t826;
t754 = -qJ(5) * t685 + t782;
t570 = t728 * t611 + t726 * t754;
t767 = -pkin(5) * t835 + pkin(11) * t872 + qJD(6) * t570 - t881;
t766 = t451 * t734 + t461 * t730;
t456 = t468 * t728 - t470 * t726;
t765 = -t502 * t717 - t886;
t764 = -t502 * t664 - t886;
t487 = -pkin(11) * t845 + t489;
t571 = t728 * t615 + t616 * t726;
t572 = -t615 * t726 + t616 * t728;
t659 = t714 + (-pkin(2) - t861) * t729;
t617 = pkin(3) * t676 + t659;
t745 = pkin(4) * t615 + t617;
t504 = pkin(5) * t571 - pkin(11) * t572 + t745;
t762 = t487 * t734 + t504 * t730;
t761 = -t487 * t730 + t504 * t734;
t488 = t520 * t728 - t522 * t726;
t757 = t499 + (t730 * t869 - t812) * t551;
t673 = -pkin(3) * t847 + t720 * t728;
t563 = t572 * t730 + t734 * t845;
t753 = pkin(4) * t560 + t608;
t748 = t622 * t811 - t789;
t747 = -t622 * t812 - t788;
t718 = -pkin(4) * t728 - pkin(5);
t663 = -pkin(5) - t673;
t569 = t611 * t726 - t728 * t754;
t564 = t572 * t734 - t806;
t514 = t559 * t728 - t560 * t726;
t513 = t559 * t726 + t728 * t560;
t491 = -qJD(6) * t806 + t514 * t730 + t572 * t811 - t734 * t799;
t490 = -qJD(6) * t563 + t514 * t734 + t730 * t799;
t486 = pkin(5) * t845 - t488;
t478 = t509 * t728 - t859;
t477 = t509 * t726 + t507;
t466 = pkin(5) * t513 - pkin(11) * t514 + t753;
t455 = pkin(11) * t799 + t457;
t454 = -pkin(5) * t799 - t456;
t448 = -qJD(6) * t459 + t792;
t447 = -qJD(6) * t763 + t766;
t1 = [(t727 * t895 - t802) * MDP(22) * t819 + (t541 * t616 - t559 * t759) * MDP(18) + (MDP(6) * t798 - MDP(7) * t799) * (t713 + t821) + (-t618 * t676 - t619 * t677 - t627 * t649 - t628 * t647) * MDP(12) + (t618 * t677 + t628 * t649) * MDP(11) + (-t541 * t615 - t559 * t603 + t560 * t759 + t616 * t740) * MDP(19) + (-t452 * t572 - t453 * t571 - t456 * t868 + t457 * t869 - t475 * t514 - t476 * t513 - t488 * t503 - t489 * t502) * MDP(25) + (-t485 * t571 - t491 * t551 - t502 * t563 - t513 * t544) * MDP(30) + (t484 * t571 + t490 * t551 + t502 * t564 + t513 * t546) * MDP(29) + (t502 * t571 + t513 * t551) * MDP(31) + (-t484 * t563 - t485 * t564 - t490 * t544 - t491 * t546) * MDP(28) + (t484 * t564 + t490 * t546) * MDP(27) + ((-qJD(6) * t762 - t455 * t730 + t466 * t734) * t551 + t761 * t502 + t448 * t571 - t763 * t513 + t454 * t544 + t486 * t485 + t450 * t563 + t473 * t491) * MDP(32) + (t751 * t704 + t672 * t649 + t659 * t618 + t658 * t677 + t632 * t628 + (t752 * t737 + (-qJD(1) * t830 - t596) * t819) * t727) * MDP(17) + (-t628 * t704 + (-t618 * t737 + (qJD(1) * t677 + t649) * t819) * t727) * MDP(13) + (t627 * t704 + (t619 * t737 + (-qJD(1) * t676 - t647) * t819) * t727) * MDP(14) + (-t743 * t704 + t672 * t647 + t659 * t619 + t658 * t676 + t632 * t627 + (-t741 * t737 + (qJD(1) * t784 + t595) * t819) * t727) * MDP(16) + 0.2e1 * t777 * t808 + (-t750 * t895 - t608 * t759 + t617 * t541 + t594 * t616 + t607 * t559 + (-t776 * t737 + (-qJD(1) * t834 - t525) * t819) * t727) * MDP(24) + (t559 * t895 + (-t541 * t737 + (qJD(1) * t616 - t759) * t819) * t727) * MDP(20) + (-t560 * t895 + (-t740 * t737 + (-qJD(1) * t615 - t603) * t819) * t727) * MDP(21) + (t744 * t895 + t608 * t603 - t617 * t740 + t594 * t615 + t607 * t560 + (-t742 * t737 + (qJD(1) * t787 + t524) * t819) * t727) * MDP(23) + (-t704 * t727 - t802) * MDP(15) * t819 + t865 * t866 + (t452 * t488 + t453 * t489 + t475 * t456 + t476 * t457 + t519 * t745 + t562 * t753) * MDP(26) + (-(qJD(6) * t761 + t455 * t734 + t466 * t730) * t551 - t762 * t502 - t447 * t571 - t459 * t513 + t454 * t546 + t486 * t484 + t450 * t564 + t473 * t490) * MDP(33) + (-t657 * t729 - t671 * t713 + t737 * t770) * MDP(10) + (-t658 * t729 - t672 * t713 + t733 * t770) * MDP(9); (-t452 * t569 + t453 * t570 + t839 * t475 + t837 * t476 + t519 * t758 + t562 * t881) * MDP(26) + (t721 * t541 + t594 * t685 - t607 * t891 - t759 * t771) * MDP(24) + (t541 * t685 + t759 * t891) * MDP(18) + (-t541 * t684 + t603 * t891 + t685 * t740 + t759 * t831) * MDP(19) + (t594 * t684 + t771 * t603 + t831 * t607 - t721 * t740) * MDP(23) + (-t452 * t622 - t453 * t621 - t475 * t872 - t835 * t476 - t570 * t502 + t503 * t569 + t837 * t869 - t839 * t868) * MDP(25) + ((t568 * t734 - t570 * t730) * t502 + t448 * t621 + t569 * t485 + t622 * t449 + (t730 * t768 - t734 * t767) * t551 + t838 * t544 - t835 * t763 + t748 * t473) * MDP(32) + (t670 * t713 + t848 * t862 - t658) * MDP(9) + (pkin(8) * t773 + t666 * t713 + (-t729 * t808 + t848) * t861) * MDP(10) + (t789 * t546 + t788 * t544 + (-t482 - t485 * t734 + (t544 * t730 - t546 * t734) * qJD(6)) * t622) * MDP(28) + (t484 * t853 + t546 * t747) * MDP(27) + (-(t568 * t730 + t570 * t734) * t502 - t447 * t621 + t569 * t484 + t450 * t853 + (t730 * t767 + t734 * t768) * t551 + t838 * t546 - t835 * t459 + t747 * t473) * MDP(33) + (-pkin(2) * t618 + t658 * t732 - t829 * t704 - t670 * t649 + (-pkin(9) * t850 + t632 * t736) * qJD(3) + (-t632 * t843 + (-pkin(9) * t818 + t596) * t733) * t822) * MDP(17) + ((t618 + t852) * t736 + (-t619 + t851) * t732) * MDP(12) + (t618 * t732 - t649 * t849) * MDP(11) + (-pkin(2) * t619 - t658 * t736 + t783 * t704 - t670 * t647 + (pkin(9) * t849 + t632 * t732) * qJD(3) + (-t595 * t733 + (-pkin(9) * t819 - t632 * t737) * t732) * t822) * MDP(16) + (t704 * t816 + (-t737 * t850 + (t647 + t818) * t733) * t822) * MDP(14) + (-t485 * t621 - t498 * t622 - t544 * t835 - t551 * t748) * MDP(30) + (t484 * t621 + t499 * t622 + t546 * t835 + t551 * t747) * MDP(29) + (-t704 * t815 + (t704 * t843 + (qJD(2) * t732 - t649) * t733) * t822) * MDP(13) + (t502 * t621 + t551 * t835) * MDP(31) - t738 * t777 - (t889 * MDP(24) + (t707 * t813 + (-qJD(4) * t706 - t892) * t731 + t890) * MDP(23) + t891 * MDP(20) + t831 * MDP(21)) * t895 + (t704 * MDP(15) - t895 * MDP(22) + (qJD(2) * t685 + t759) * MDP(20) + (-qJD(2) * t826 + t525) * MDP(24) + (qJD(2) * t782 - t524) * MDP(23) + (-qJD(2) * t684 + t603) * MDP(21) - t810 * MDP(7)) * t801 + t810 * MDP(6) * t800 + t848 * t865; (-t619 - t851) * MDP(14) + (t836 * t895 + (t649 * t759 - t731 * t773 - t813 * t895) * pkin(3) + t871) * MDP(24) + (-t502 * t674 - t503 * t673 + (t475 + t827) * t869 + (t476 + t828) * t868) * MDP(25) + MDP(15) * t773 + t649 * t647 * MDP(11) + (-t647 ^ 2 + t649 ^ 2) * MDP(12) + (t663 * t485 + t764 * t730 + t828 * t544 + (-t730 * t827 - t734 * t779) * t551 + t879) * MDP(32) + (-t790 * t895 + (-t603 * t649 + t735 * t773 - t814 * t895) * pkin(3) + t870) * MDP(23) + (-t596 * t704 - t632 * t649 + t741) * MDP(16) + (-t546 * t781 + t888) * MDP(28) + (t618 - t852) * MDP(13) + (t663 * t484 + t764 * t734 + t828 * t546 + (t730 * t779 - t734 * t827) * t551 + t880) * MDP(33) + (t452 * t673 + t453 * t674 - t475 * t828 + t476 * t827 - t562 * t769) * MDP(26) + (-t551 * t781 + t499 + t858) * MDP(30) + (-t595 * t704 + t632 * t647 - t752) * MDP(17) + t887; (t525 * t895 + t870) * MDP(23) + (t524 * t895 + t871) * MDP(24) + ((-t502 * t726 - t503 * t728) * pkin(4) + (t475 - t478) * t869 + (t476 - t477) * t868) * MDP(25) + (t475 * t477 - t476 * t478 + (t452 * t728 + t453 * t726 + t562 * t759) * pkin(4)) * MDP(26) + (-t730 * t885 + t888) * MDP(28) + (t757 + t858) * MDP(30) + (-t477 * t544 + t718 * t485 + t765 * t730 + (t730 * t478 - t734 * t778) * t551 + t879) * MDP(32) + (-t477 * t546 + t718 * t484 + t765 * t734 + (t734 * t478 + t730 * t778) * t551 + t880) * MDP(33) + t887; (-t868 ^ 2 - t869 ^ 2) * MDP(25) + (t475 * t868 - t476 * t869 + t519) * MDP(26) + (t757 - t858) * MDP(32) + (-t551 ^ 2 * t734 - t498 - t857) * MDP(33); t546 * t544 * MDP(27) + (-t544 ^ 2 + t546 ^ 2) * MDP(28) + (t544 * t551 + t804) * MDP(29) + (-t791 + t885) * MDP(30) + t502 * MDP(31) + (t459 * t551 - t473 * t546 + t792) * MDP(32) + (t473 * t544 - t551 * t763 - t766) * MDP(33) + (-MDP(29) * t854 - MDP(30) * t546 - MDP(32) * t459 + MDP(33) * t763) * qJD(6);];
tauc  = t1;
