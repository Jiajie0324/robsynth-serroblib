% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:34:19
% EndTime: 2019-03-09 22:35:15
% DurationCPUTime: 34.81s
% Computational Cost: add. (47024->985), mult. (115544->1300), div. (0->0), fcn. (94091->18), ass. (0->445)
t421 = cos(qJ(2));
t417 = sin(qJ(2));
t412 = sin(pkin(6));
t552 = qJD(1) * t412;
t520 = t417 * t552;
t413 = cos(pkin(6));
t551 = qJD(1) * t413;
t532 = pkin(1) * t551;
t308 = -pkin(8) * t520 + t421 * t532;
t477 = pkin(2) * t417 - pkin(9) * t421;
t309 = t477 * t552;
t416 = sin(qJ(3));
t420 = cos(qJ(3));
t216 = -t308 * t416 + t420 * t309;
t423 = -pkin(10) - pkin(9);
t523 = qJD(3) * t423;
t567 = t420 * t421;
t692 = -(pkin(3) * t417 - pkin(10) * t567) * t552 - t216 + t420 * t523;
t217 = t420 * t308 + t416 * t309;
t519 = t421 * t552;
t486 = t416 * t519;
t691 = -pkin(10) * t486 - t416 * t523 + t217;
t632 = cos(qJ(4));
t514 = qJD(4) * t632;
t521 = t632 * t420;
t415 = sin(qJ(4));
t572 = t415 * t416;
t636 = qJD(3) + qJD(4);
t247 = -qJD(3) * t521 - t420 * t514 + t572 * t636;
t456 = t521 - t572;
t266 = t456 * t519;
t560 = t247 + t266;
t337 = t415 * t420 + t416 * t632;
t248 = t636 * t337;
t265 = t337 * t519;
t559 = t248 - t265;
t419 = cos(qJ(6));
t543 = qJD(6) * t419;
t492 = qJD(2) + t551;
t281 = t416 * t520 - t420 * t492;
t283 = t416 * t492 + t420 * t520;
t201 = t281 * t632 + t415 * t283;
t411 = sin(pkin(12));
t457 = -t415 * t281 + t283 * t632;
t605 = cos(pkin(12));
t141 = t605 * t201 + t411 * t457;
t678 = t141 * t419;
t690 = t543 + t678;
t365 = -qJD(3) + t519;
t351 = -qJD(4) + t365;
t414 = sin(qJ(6));
t651 = -t411 * t201 + t457 * t605;
t128 = t419 * t351 + t414 * t651;
t535 = qJDD(1) * t421;
t381 = t412 * t535;
t538 = qJD(1) * qJD(2);
t512 = t417 * t538;
t481 = t412 * t512;
t302 = qJDD(3) - t381 + t481;
t290 = qJDD(4) + t302;
t544 = qJD(6) * t414;
t511 = t421 * t538;
t536 = qJDD(1) * t417;
t452 = t511 + t536;
t461 = qJD(3) * t492;
t432 = t412 * t452 + t461;
t537 = qJDD(1) * t413;
t382 = qJDD(2) + t537;
t482 = qJD(3) * t520;
t496 = (t382 - t482) * t416;
t426 = t432 * t420 + t496;
t510 = t412 * t536;
t658 = -t412 * t511 - t510;
t654 = t461 - t658;
t487 = t654 * t416 + t420 * t482;
t453 = t420 * t382 - t487;
t546 = qJD(4) * t415;
t110 = t281 * t514 + t283 * t546 - t415 * t453 - t632 * t426;
t657 = t415 * t426 - t632 * t453;
t111 = qJD(4) * t457 + t657;
t68 = -t110 * t605 - t411 * t111;
t45 = -t414 * t290 + t351 * t543 - t419 * t68 + t544 * t651;
t130 = -t351 * t414 + t419 * t651;
t503 = -t419 * t290 + t414 * t68;
t46 = qJD(6) * t130 + t503;
t609 = -t128 * t543 - t414 * t46;
t674 = qJD(6) + t141;
t687 = t674 * t414;
t644 = t130 * t687;
t689 = -t128 * t678 - t419 * t45 + t609 - t644;
t367 = t423 * t416;
t368 = t423 * t420;
t563 = t367 * t514 + t368 * t546 + t415 * t692 - t691 * t632;
t269 = t415 * t367 - t632 * t368;
t562 = -qJD(4) * t269 + t691 * t415 + t632 * t692;
t548 = qJD(3) * t416;
t688 = t486 - t548;
t686 = -pkin(4) * t520 + t560 * qJ(5) - t337 * qJD(5) + t562;
t685 = t559 * qJ(5) - qJD(5) * t456 - t563;
t598 = t141 ^ 2;
t600 = t651 ^ 2;
t684 = -t598 + t600;
t42 = t45 * t414;
t682 = t690 * t130 - t42;
t601 = t130 * t651;
t502 = t110 * t411 - t605 * t111;
t66 = qJDD(6) - t502;
t63 = t414 * t66;
t681 = t690 * t674 - t601 + t63;
t312 = pkin(8) * t519 + t417 * t532;
t264 = pkin(9) * t492 + t312;
t463 = -pkin(2) * t421 - pkin(9) * t417 - pkin(1);
t301 = t463 * t412;
t275 = qJD(1) * t301;
t191 = -t264 * t416 + t420 * t275;
t165 = -pkin(10) * t283 + t191;
t154 = -pkin(3) * t365 + t165;
t192 = t264 * t420 + t275 * t416;
t166 = -pkin(10) * t281 + t192;
t522 = t632 * t166;
t107 = t415 * t154 + t522;
t661 = t201 * qJ(5);
t88 = t107 - t661;
t611 = t411 * t88;
t163 = t415 * t166;
t106 = t632 * t154 - t163;
t645 = qJ(5) * t457;
t87 = t106 - t645;
t81 = -pkin(4) * t351 + t87;
t51 = t605 * t81 - t611;
t49 = t351 * pkin(5) - t51;
t680 = t141 * t49;
t597 = t141 * t351;
t679 = t68 - t597;
t85 = t605 * t88;
t52 = t411 * t81 + t85;
t50 = -pkin(11) * t351 + t52;
t263 = -pkin(2) * t492 - t308;
t205 = t281 * pkin(3) + t263;
t149 = t201 * pkin(4) + qJD(5) + t205;
t73 = t141 * pkin(5) - pkin(11) * t651 + t149;
t465 = t414 * t50 - t419 * t73;
t677 = t141 * t465;
t662 = t141 * t651;
t565 = -t411 * t560 + t559 * t605;
t176 = -t247 * t605 - t411 * t248;
t183 = -t411 * t265 + t266 * t605;
t564 = t176 - t183;
t479 = -pkin(3) * t688 - t312;
t599 = t651 * t351;
t676 = t502 - t599;
t23 = t414 * t73 + t419 * t50;
t489 = qJD(2) * t532;
t531 = pkin(1) * t537;
t225 = t658 * pkin(8) - t417 * t489 + t421 * t531;
t618 = t382 * pkin(2);
t210 = -t225 - t618;
t147 = -pkin(3) * t453 + t210;
t77 = t111 * pkin(4) + qJDD(5) + t147;
t16 = -pkin(5) * t502 - t68 * pkin(11) + t77;
t524 = -pkin(8) * t381 - t417 * t531 - t421 * t489;
t224 = -pkin(8) * t481 - t524;
t209 = pkin(9) * t382 + t224;
t458 = t477 * qJD(2);
t214 = (qJD(1) * t458 + qJDD(1) * t463) * t412;
t499 = -t416 * t209 + t420 * t214;
t547 = qJD(3) * t420;
t84 = t302 * pkin(3) - pkin(10) * t426 - t264 * t547 - t275 * t548 + t499;
t451 = -t420 * t209 - t416 * t214 + t264 * t548 - t275 * t547;
t98 = pkin(10) * t453 - t451;
t31 = -qJD(4) * t107 - t415 * t98 + t632 * t84;
t19 = t290 * pkin(4) + t110 * qJ(5) - qJD(5) * t457 + t31;
t493 = -t154 * t514 + t166 * t546 - t415 * t84 - t632 * t98;
t21 = -qJ(5) * t111 - qJD(5) * t201 - t493;
t10 = t411 * t19 + t605 * t21;
t8 = pkin(11) * t290 + t10;
t3 = -qJD(6) * t23 + t419 * t16 - t414 * t8;
t673 = -t141 * t23 - t3;
t672 = pkin(5) * t651 + pkin(11) * t141;
t418 = sin(qJ(1));
t569 = t418 * t421;
t422 = cos(qJ(1));
t570 = t417 * t422;
t326 = t413 * t570 + t569;
t410 = qJ(3) + qJ(4);
t402 = pkin(12) + t410;
t393 = sin(t402);
t394 = cos(t402);
t574 = t412 * t422;
t231 = t326 * t394 - t393 * t574;
t566 = t421 * t422;
t571 = t417 * t418;
t328 = -t413 * t571 + t566;
t577 = t412 * t418;
t235 = t328 * t394 + t393 * t577;
t578 = t412 * t417;
t277 = t393 * t413 + t394 * t578;
t449 = -g(1) * t235 - g(2) * t231 - g(3) * t277;
t671 = t141 * t149 - t10 - t449;
t613 = t411 * t686 - t605 * t685;
t604 = t128 * t651;
t669 = t674 * t651;
t561 = pkin(4) * t559 + t479;
t668 = t23 * t674 + t3;
t2 = -t465 * qJD(6) + t414 * t16 + t419 * t8;
t667 = t465 * t674 + t2;
t234 = t328 * t393 - t394 * t577;
t276 = -t393 * t578 + t394 * t413;
t498 = -t326 * t393 - t394 * t574;
t450 = g(1) * t234 - g(2) * t498 - g(3) * t276;
t9 = t605 * t19 - t411 * t21;
t7 = -pkin(5) * t290 - t9;
t444 = t450 - t7;
t666 = t651 * t23 - t444 * t414 + t49 * t543;
t665 = t651 * t465 + t49 * t544;
t664 = -t149 * t651 + t450 + t9;
t663 = pkin(11) * t520 - t613;
t594 = t201 * t457;
t660 = t565 * pkin(5) - t564 * pkin(11) + t561;
t325 = -t413 * t566 + t571;
t327 = t413 * t569 + t570;
t575 = t412 * t421;
t639 = -g(1) * t327 - g(2) * t325 + g(3) * t575;
t659 = t210 + t639;
t385 = pkin(8) * t578;
t630 = pkin(1) * t421;
t331 = t413 * t630 - t385;
t313 = qJD(2) * t331;
t655 = -t201 ^ 2 + t457 ^ 2;
t653 = -t201 * t351 - t110;
t403 = sin(t410);
t404 = cos(t410);
t240 = -t326 * t404 + t403 * t574;
t242 = t328 * t404 + t403 * t577;
t652 = t201 * t205 + g(1) * t242 - g(2) * t240 - g(3) * (-t403 * t413 - t404 * t578) + t493;
t650 = t231 * t414 - t325 * t419;
t649 = t231 * t419 + t325 * t414;
t407 = t412 ^ 2;
t647 = 0.2e1 * t407;
t646 = pkin(4) * t457;
t615 = t411 * t685 + t605 * t686;
t641 = t639 * t393;
t631 = pkin(1) * t417;
t332 = pkin(8) * t575 + t413 * t631;
t300 = pkin(9) * t413 + t332;
t212 = -t300 * t416 + t420 * t301;
t576 = t412 * t420;
t323 = t413 * t416 + t417 * t576;
t174 = -pkin(3) * t575 - pkin(10) * t323 + t212;
t213 = t420 * t300 + t416 * t301;
t322 = -t413 * t420 + t416 * t578;
t180 = -pkin(10) * t322 + t213;
t122 = t415 * t174 + t632 * t180;
t485 = t420 * t519;
t638 = t485 - t547;
t637 = -t302 * t420 - t365 * t548;
t314 = qJD(2) * t332;
t252 = -t328 * t416 + t418 * t576;
t459 = t326 * t416 + t420 * t574;
t635 = -g(1) * t252 + g(2) * t459 + g(3) * t322;
t528 = t404 * t574;
t586 = t326 * t403;
t239 = -t528 - t586;
t529 = t404 * t577;
t585 = t328 * t403;
t241 = t529 - t585;
t530 = t403 * t578;
t581 = t404 * t413;
t634 = -t205 * t457 - g(1) * t241 - g(2) * t239 - g(3) * (-t530 + t581) + t31;
t633 = t281 * t546 - t283 * t514 - t351 * t457 - t657;
t424 = qJD(1) ^ 2;
t629 = pkin(3) * t420;
t624 = g(1) * t422;
t619 = g(3) * t412;
t1 = t2 * t419;
t237 = t337 * t411 - t456 * t605;
t238 = t337 * t605 + t411 * t456;
t400 = pkin(2) + t629;
t292 = -pkin(4) * t456 - t400;
t157 = pkin(5) * t237 - pkin(11) * t238 + t292;
t219 = qJ(5) * t456 + t269;
t268 = t367 * t632 + t415 * t368;
t438 = -t337 * qJ(5) + t268;
t159 = t219 * t605 + t411 * t438;
t102 = t157 * t419 - t159 * t414;
t617 = qJD(6) * t102 + t660 * t414 - t663 * t419;
t103 = t157 * t414 + t159 * t419;
t616 = -qJD(6) * t103 + t663 * t414 + t660 * t419;
t549 = qJD(2) * t421;
t517 = t412 * t549;
t249 = qJD(3) * t323 + t416 * t517;
t250 = -qJD(3) * t322 + t420 * t517;
t145 = t415 * t249 - t250 * t632 + t322 * t514 + t323 * t546;
t223 = -t415 * t322 + t323 * t632;
t550 = qJD(2) * t417;
t518 = t412 * t550;
t310 = t412 * t458;
t156 = -qJD(3) * t213 + t420 * t310 - t313 * t416;
t127 = pkin(3) * t518 - pkin(10) * t250 + t156;
t155 = -t300 * t548 + t301 * t547 + t416 * t310 + t420 * t313;
t134 = -pkin(10) * t249 + t155;
t58 = -qJD(4) * t122 + t632 * t127 - t415 * t134;
t36 = pkin(4) * t518 + t145 * qJ(5) - t223 * qJD(5) + t58;
t146 = qJD(4) * t223 + t249 * t632 + t415 * t250;
t222 = t322 * t632 + t323 * t415;
t57 = t415 * t127 + t632 * t134 + t174 * t514 - t180 * t546;
t38 = -qJ(5) * t146 - qJD(5) * t222 + t57;
t14 = t411 * t36 + t605 * t38;
t614 = pkin(5) * t520 - t615;
t612 = pkin(3) * qJD(4);
t44 = t46 * t419;
t121 = t632 * t174 - t180 * t415;
t100 = -pkin(4) * t575 - qJ(5) * t223 + t121;
t104 = -qJ(5) * t222 + t122;
t62 = t411 * t100 + t605 * t104;
t112 = -t415 * t165 - t522;
t439 = t112 + t661;
t505 = t605 * t415;
t113 = t632 * t165 - t163;
t94 = t113 - t645;
t607 = -t411 * t94 + t439 * t605 + (t411 * t632 + t505) * t612;
t579 = t411 * t415;
t311 = (t605 * t632 - t579) * t612;
t56 = t411 * t439 + t605 * t94;
t606 = t311 - t56;
t603 = t128 * t414;
t602 = t130 * t128;
t593 = t238 * t414;
t592 = t238 * t419;
t591 = t283 * t281;
t590 = t283 * t365;
t584 = t365 * t416;
t583 = t394 * t414;
t582 = t394 * t419;
t580 = t407 * t424;
t573 = t414 * t421;
t568 = t419 * t421;
t354 = pkin(4) * t404 + t629;
t343 = pkin(2) + t354;
t406 = -qJ(5) + t423;
t558 = -t325 * t343 - t326 * t406;
t557 = -t327 * t343 - t328 * t406;
t353 = pkin(3) * t416 + pkin(4) * t403;
t556 = -t328 * t353 + t354 * t577;
t555 = -t353 * t578 + t413 * t354;
t399 = pkin(3) * t632 + pkin(4);
t316 = pkin(3) * t505 + t411 * t399;
t554 = t422 * pkin(1) + pkin(8) * t577;
t408 = t417 ^ 2;
t409 = t421 ^ 2;
t553 = t408 - t409;
t545 = qJD(6) * t674;
t542 = t281 * qJD(3);
t541 = t283 * qJD(3);
t527 = t421 * t580;
t526 = t416 * t577;
t525 = t412 * t568;
t371 = t412 * t573;
t372 = t416 * t574;
t515 = t412 * t413 * t424;
t513 = pkin(1) * t647;
t509 = -pkin(1) * t418 + pkin(8) * t574;
t508 = pkin(5) * t498 + pkin(11) * t231;
t507 = -t234 * pkin(5) + pkin(11) * t235;
t506 = t276 * pkin(5) + pkin(11) * t277;
t169 = pkin(3) * t283 + t646;
t76 = t169 + t672;
t25 = t414 * t76 + t419 * t56;
t504 = t311 * t419 - t25;
t170 = t183 * t414 - t419 * t520;
t501 = -t176 * t414 + t170;
t171 = t183 * t419 + t414 * t520;
t500 = -t176 * t419 + t171;
t497 = t326 * t420 - t372;
t491 = qJD(2) + 0.2e1 * t551;
t490 = t382 + t537;
t488 = t417 * t527;
t484 = t351 * t520;
t483 = t417 * t511;
t476 = pkin(5) * t394 + pkin(11) * t393;
t475 = g(1) * t498 + g(2) * t234;
t473 = g(1) * t325 - g(2) * t327;
t472 = g(1) * t328 + g(2) * t326;
t471 = g(2) * t418 + t624;
t470 = -t326 * t353 - t354 * t574;
t395 = pkin(4) * t411 + pkin(11);
t468 = -t395 * t66 + t680;
t305 = pkin(11) + t316;
t467 = -t305 * t66 + t680;
t466 = -t23 * t414 + t419 * t465;
t60 = -pkin(11) * t575 + t62;
t160 = t222 * t605 + t223 * t411;
t161 = -t411 * t222 + t223 * t605;
t299 = t385 + (-pkin(2) - t630) * t413;
t227 = pkin(3) * t322 + t299;
t167 = pkin(4) * t222 + t227;
t79 = pkin(5) * t160 - pkin(11) * t161 + t167;
t29 = t414 * t79 + t419 * t60;
t28 = -t414 * t60 + t419 * t79;
t464 = -t327 * t406 + t328 * t343 + t353 * t577 + t554;
t64 = t419 * t66;
t462 = t64 + (-t141 * t414 - t544) * t674;
t150 = t161 * t414 + t525;
t13 = t36 * t605 - t411 * t38;
t455 = t325 * t406 - t326 * t343 + t353 * t574 + t509;
t61 = t100 * t605 - t411 * t104;
t315 = -pkin(3) * t579 + t399 * t605;
t448 = t238 * t543 - t501;
t447 = -t238 * t544 - t500;
t445 = t1 + t449;
t442 = g(3) * t578 + t472;
t441 = t453 * t420;
t117 = -qJD(3) * t192 + t499;
t206 = pkin(3) * t249 + t314;
t434 = qJD(6) * t466 - t3 * t414 + t1;
t433 = -t117 * t416 - t420 * t451 - t442;
t118 = pkin(4) * t146 + t206;
t396 = -pkin(4) * t605 - pkin(5);
t369 = pkin(4) * t581;
t350 = pkin(4) * t529;
t306 = t343 * t575;
t304 = -pkin(5) - t315;
t253 = t328 * t420 + t526;
t211 = (-t290 * t421 - t351 * t550) * t412;
t190 = t235 * t419 + t327 * t414;
t189 = -t235 * t414 + t327 * t419;
t158 = t219 * t411 - t438 * t605;
t151 = t161 * t419 - t371;
t93 = -t145 * t605 - t411 * t146;
t92 = -t145 * t411 + t146 * t605;
t78 = t646 + t672;
t70 = -qJD(6) * t371 + t161 * t543 + t414 * t93 - t419 * t518;
t69 = qJD(6) * t150 - t414 * t518 - t419 * t93;
t59 = pkin(5) * t575 - t61;
t54 = t605 * t87 - t611;
t53 = t411 * t87 + t85;
t32 = pkin(5) * t92 - pkin(11) * t93 + t118;
t27 = t414 * t78 + t419 * t54;
t26 = -t414 * t54 + t419 * t78;
t24 = -t414 * t56 + t419 * t76;
t12 = pkin(11) * t518 + t14;
t11 = -pkin(5) * t518 - t13;
t5 = -qJD(6) * t29 - t12 * t414 + t32 * t419;
t4 = qJD(6) * t28 + t12 * t419 + t32 * t414;
t6 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t418 - g(2) * t422, t471, 0, 0 (qJDD(1) * t408 + 0.2e1 * t483) * t407 (t417 * t535 - t538 * t553) * t647 (t417 * t490 + t491 * t549) * t412 (qJDD(1) * t409 - 0.2e1 * t483) * t407 (t421 * t490 - t491 * t550) * t412, t382 * t413, -t314 * t492 + t331 * t382 + t225 * t413 + g(1) * t326 - g(2) * t328 + (-t512 + t535) * t513, -t224 * t413 - t313 * t492 - t332 * t382 - t452 * t513 - t473 ((-t308 * qJD(2) + qJDD(1) * t332 + t224) * t421 + (-qJD(2) * t312 - qJDD(1) * t331 - t225) * t417 - t471) * t412, t407 * qJDD(1) * pkin(1) ^ 2 - g(1) * t509 - g(2) * t554 + t224 * t332 + t225 * t331 - t308 * t314 + t312 * t313, t283 * t250 + t323 * t426, -t250 * t281 - t323 * t487 - t496 * t322 - t283 * t249 + (-t322 * t654 + t323 * t382) * t420, -t250 * t365 + t323 * t302 + (t283 * t550 - t421 * t426) * t412, t281 * t249 - t322 * t453, t249 * t365 - t322 * t302 + (-t281 * t550 - t421 * t453) * t412 (-t302 * t421 - t365 * t550) * t412, -t156 * t365 + t212 * t302 + t314 * t281 - t299 * t453 + t210 * t322 + t263 * t249 + g(1) * t497 - g(2) * t253 + (-t117 * t421 + t191 * t550) * t412, -g(1) * t459 - g(2) * t252 + t155 * t365 - t192 * t518 + t210 * t323 - t213 * t302 + t263 * t250 + t314 * t283 + t299 * t426 - t451 * t575, -t117 * t323 - t155 * t281 - t156 * t283 - t191 * t250 - t192 * t249 - t212 * t426 + t213 * t453 + t322 * t451 + t473, -t451 * t213 + t192 * t155 + t117 * t212 + t191 * t156 + t210 * t299 + t263 * t314 - g(1) * (-pkin(2) * t326 - pkin(9) * t325 + t509) - g(2) * (pkin(2) * t328 + pkin(9) * t327 + t554) -t110 * t223 - t145 * t457, t110 * t222 - t111 * t223 + t145 * t201 - t146 * t457, t145 * t351 + t223 * t290 + (t110 * t421 + t457 * t550) * t412, t111 * t222 + t146 * t201, t146 * t351 - t222 * t290 + (t111 * t421 - t201 * t550) * t412, t211, -t58 * t351 + t121 * t290 + t206 * t201 + t227 * t111 + t147 * t222 + t205 * t146 - g(1) * t240 - g(2) * t242 + (t106 * t550 - t31 * t421) * t412, -g(1) * t586 - g(2) * t241 - t227 * t110 - t122 * t290 - t205 * t145 + t147 * t223 + t206 * t457 + t57 * t351 + (-t107 * t550 - t404 * t624 - t421 * t493) * t412, t106 * t145 - t107 * t146 + t110 * t121 - t111 * t122 - t201 * t57 + t222 * t493 - t223 * t31 - t457 * t58 + t473, -t493 * t122 + t107 * t57 + t31 * t121 + t106 * t58 + t147 * t227 + t205 * t206 - g(1) * (pkin(3) * t372 + t325 * t423 - t326 * t400 + t509) - g(2) * (pkin(3) * t526 - t327 * t423 + t328 * t400 + t554) t161 * t68 + t651 * t93, -t141 * t93 - t160 * t68 + t161 * t502 - t651 * t92, t161 * t290 - t351 * t93 + (-t421 * t68 + t550 * t651) * t412, t141 * t92 - t160 * t502, -t160 * t290 + t351 * t92 + (-t141 * t550 - t421 * t502) * t412, t211, g(1) * t231 - g(2) * t235 + t118 * t141 - t13 * t351 + t149 * t92 + t160 * t77 - t167 * t502 + t290 * t61 + (-t421 * t9 + t51 * t550) * t412, t118 * t651 + t14 * t351 + t149 * t93 + t161 * t77 + t167 * t68 - t290 * t62 + (t10 * t421 - t52 * t550) * t412 + t475, -t10 * t160 - t13 * t651 - t14 * t141 - t161 * t9 + t502 * t62 - t51 * t93 - t52 * t92 - t61 * t68 + t473, -g(1) * t455 - g(2) * t464 + t10 * t62 + t149 * t118 + t51 * t13 + t52 * t14 + t77 * t167 + t9 * t61, -t130 * t69 - t151 * t45, t128 * t69 - t130 * t70 + t150 * t45 - t151 * t46, t130 * t92 + t151 * t66 - t160 * t45 - t674 * t69, t128 * t70 + t150 * t46, -t128 * t92 - t150 * t66 - t160 * t46 - t674 * t70, t160 * t66 + t674 * t92, g(1) * t649 - g(2) * t190 + t11 * t128 + t7 * t150 + t3 * t160 + t28 * t66 + t59 * t46 - t465 * t92 + t49 * t70 + t5 * t674, -g(1) * t650 - g(2) * t189 + t11 * t130 + t7 * t151 - t2 * t160 - t23 * t92 - t29 * t66 - t4 * t674 - t59 * t45 - t49 * t69, -t128 * t4 - t130 * t5 - t150 * t2 - t151 * t3 - t23 * t70 + t28 * t45 - t29 * t46 - t465 * t69 - t475, t2 * t29 + t23 * t4 + t3 * t28 - t465 * t5 + t7 * t59 + t49 * t11 - g(1) * (-pkin(5) * t231 + pkin(11) * t498 + t455) - g(2) * (pkin(5) * t235 + pkin(11) * t234 + t464); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t488, t553 * t580, -t421 * t515 + t510, t488, t417 * t515 + t381, t382, t312 * t492 + t580 * t631 + t225 - t639, pkin(1) * t527 + t308 * t492 + (pkin(8) * t538 + g(3)) * t578 + t472 + t524, 0, 0, t496 * t416 + (t416 * t432 - t590) * t420, t281 * t485 + t283 * t486 + (t426 - t542) * t420 + (t453 - t541) * t416, -t365 * t547 + t302 * t416 + (-t283 * t417 + t365 * t567) * t552, -t281 * t584 + t441 (t281 * t417 - t421 * t584) * t552 - t637, t365 * t520, -pkin(2) * t487 + t216 * t365 - t191 * t520 - t312 * t281 + (-pkin(9) * t302 - t263 * t365) * t416 + (pkin(9) * qJD(3) * t365 + t618 - t659) * t420, -pkin(2) * t426 + t637 * pkin(9) + t192 * t520 - t217 * t365 - t638 * t263 - t312 * t283 + t416 * t659, t216 * t283 + t217 * t281 + t433 + t688 * t192 + t638 * t191 + ((t426 + t542) * t416 + t420 * t541 + t441) * pkin(9), -t191 * t216 - t192 * t217 - t263 * t312 - t659 * pkin(2) + ((-t191 * t420 - t192 * t416) * qJD(3) + t433) * pkin(9), -t110 * t337 - t457 * t560, -t110 * t456 - t111 * t337 + t201 * t560 - t457 * t559, t290 * t337 + t351 * t560 - t457 * t520, -t111 * t456 + t201 * t559, t201 * t520 + t290 * t456 + t351 * t559, t484, -t106 * t520 - t111 * t400 - t147 * t456 + t201 * t479 + t205 * t559 + t268 * t290 - t351 * t562 - t404 * t639, t107 * t520 + t110 * t400 + t147 * t337 - t205 * t560 - t269 * t290 + t351 * t563 + t403 * t639 + t457 * t479, t106 * t560 - t107 * t559 + t110 * t268 - t111 * t269 - t201 * t563 - t31 * t337 - t456 * t493 - t457 * t562 - t442, -t493 * t269 + t31 * t268 - t147 * t400 - g(1) * (-t327 * t400 - t328 * t423) - g(2) * (-t325 * t400 - t326 * t423) - (t400 * t421 - t417 * t423) * t619 + t479 * t205 + t563 * t107 + t562 * t106, t238 * t68 + t564 * t651, -t141 * t564 - t237 * t68 + t238 * t502 - t565 * t651, t238 * t290 - t351 * t564 - t520 * t651, t141 * t565 - t237 * t502, t141 * t520 - t237 * t290 + t351 * t565, t484, t141 * t561 + t149 * t565 - t158 * t290 + t237 * t77 - t292 * t502 - t351 * t615 - t394 * t639 - t51 * t520, t149 * t564 - t159 * t290 + t238 * t77 + t292 * t68 + t351 * t613 + t52 * t520 + t561 * t651 + t641, -t10 * t237 - t141 * t613 + t158 * t68 + t159 * t502 - t238 * t9 - t51 * t564 - t52 * t565 - t615 * t651 - t442, t10 * t159 - t9 * t158 + t77 * t292 - g(1) * t557 - g(2) * t558 - g(3) * (-t406 * t578 + t306) + t613 * t52 + t615 * t51 + t561 * t149, t130 * t447 - t45 * t592, t501 * t130 + t500 * t128 + (t42 - t44 + (-t130 * t419 + t603) * qJD(6)) * t238, t130 * t565 - t237 * t45 + t447 * t674 + t592 * t66, t128 * t448 + t46 * t593, -t128 * t565 - t237 * t46 - t448 * t674 - t593 * t66, t237 * t66 + t565 * t674, t102 * t66 + t3 * t237 + t158 * t46 + t7 * t593 - g(1) * (-t327 * t582 + t328 * t414) - g(2) * (-t325 * t582 + t326 * t414) - (t394 * t568 + t414 * t417) * t619 - t565 * t465 + t616 * t674 + t614 * t128 + t448 * t49, -t103 * t66 - t2 * t237 - t158 * t45 + t7 * t592 - g(1) * (t327 * t583 + t328 * t419) - g(2) * (t325 * t583 + t326 * t419) - (-t394 * t573 + t417 * t419) * t619 - t565 * t23 - t617 * t674 + t614 * t130 + t447 * t49, t102 * t45 - t103 * t46 + t170 * t23 - t171 * t465 + t466 * t176 - t616 * t130 - t617 * t128 - t641 + (-t2 * t414 - t3 * t419 + (-t23 * t419 - t414 * t465) * qJD(6)) * t238, t2 * t103 + t3 * t102 + t7 * t158 - g(1) * (-t327 * t476 + t557) - g(2) * (-t325 * t476 + t558) - g(3) * t306 + t614 * t49 - (-t406 * t417 + t421 * t476) * t619 + t617 * t23 - t616 * t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, -t281 ^ 2 + t283 ^ 2, -t281 * t365 + t426, -t591, t453 - t590, t302, -t192 * t365 - t263 * t283 + t117 + t635, g(1) * t253 + g(2) * t497 + g(3) * t323 - t191 * t365 + t263 * t281 + t451, 0, 0, t594, t655, t653, -t594, t633, t290, t112 * t351 + (-t201 * t283 + t290 * t632 + t351 * t546) * pkin(3) + t634, -t113 * t351 + (-t283 * t457 - t290 * t415 + t351 * t514) * pkin(3) + t652, -t106 * t201 + t107 * t457 + t112 * t457 + t113 * t201 + (t632 * t110 - t111 * t415 + (-t201 * t632 + t415 * t457) * qJD(4)) * pkin(3), -t106 * t112 - t107 * t113 + (-t493 * t415 + t31 * t632 - t205 * t283 + (-t106 * t415 + t107 * t632) * qJD(4) + t635) * pkin(3), t662, t684, t679, -t662, t676, t290, -t141 * t169 + t290 * t315 + t351 * t607 + t664, -t169 * t651 - t290 * t316 + t351 * t606 + t671, -t315 * t68 + t316 * t502 + (t52 + t607) * t651 + (-t606 - t51) * t141, -g(1) * t556 - g(2) * t470 - g(3) * t555 + t10 * t316 - t149 * t169 + t9 * t315 - t51 * t607 + t52 * t606, t682, t689, t681, t603 * t674 - t44, -t674 * t687 + t604 + t64, -t669, -t674 * t24 + t304 * t46 + t607 * t128 + (-t311 * t674 + t467) * t414 + (-t305 * t545 + t444) * t419 + t665, -t304 * t45 + t467 * t419 + t607 * t130 + (t305 * t544 - t504) * t674 + t666, t128 * t25 + t130 * t24 + (-t128 * t311 + t677 - t305 * t46 + (t130 * t305 + t465) * qJD(6)) * t419 + (t130 * t311 - t305 * t45 + (t128 * t305 - t23) * qJD(6) + t673) * t414 + t445, t7 * t304 - g(1) * (t507 + t556) - g(2) * (t470 + t508) - g(3) * (t506 + t555) + t607 * t49 + t504 * t23 - (-t311 * t414 - t24) * t465 + t434 * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t594, t655, t653, -t594, t633, t290, -t107 * t351 + t634, -t106 * t351 + t652, 0, 0, t662, t684, t679, -t662, t676, t290, -t53 * t351 + (-t141 * t457 + t290 * t605) * pkin(4) + t664, -t351 * t54 + (-t290 * t411 - t457 * t651) * pkin(4) + t671 (t411 * t502 - t605 * t68) * pkin(4) + (t52 - t53) * t651 + (t54 - t51) * t141, -g(1) * t350 - g(3) * t369 + t51 * t53 - t52 * t54 + (g(2) * t528 + t10 * t411 - t149 * t457 + t403 * t442 + t605 * t9) * pkin(4), t682, t689, t681, t128 * t687 - t44, t462 + t604, -t669, -t128 * t53 - t674 * t26 + t396 * t46 + t468 * t414 + (-t395 * t545 + t444) * t419 + t665, -t130 * t53 - t396 * t45 + t468 * t419 + (t395 * t544 + t27) * t674 + t666, t128 * t27 + t130 * t26 + (t677 - t395 * t46 + (t130 * t395 + t465) * qJD(6)) * t419 + (-t395 * t45 + (t128 * t395 - t23) * qJD(6) + t673) * t414 + t445, t7 * t396 - t23 * t27 + t465 * t26 - t49 * t53 - g(1) * (-pkin(4) * t585 + t350 + t507) - g(2) * (pkin(4) * t239 + t508) - g(3) * (-pkin(4) * t530 + t369 + t506) + t434 * t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502 - t599, t68 + t597, -t598 - t600, t141 * t52 + t51 * t651 + t639 + t77, 0, 0, 0, 0, 0, 0, t462 - t604, -t419 * t674 ^ 2 - t601 - t63 (-t128 * t141 + t45) * t419 + t644 + t609, t667 * t414 + t419 * t668 - t651 * t49 + t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, -t128 ^ 2 + t130 ^ 2, t128 * t674 - t45, -t602, -t503 + (-qJD(6) + t674) * t130, t66, -t49 * t130 - g(1) * t189 + g(2) * t650 - g(3) * (-t277 * t414 - t525) + t668, t49 * t128 + g(1) * t190 + g(2) * t649 - g(3) * (-t277 * t419 + t371) - t667, 0, 0;];
tau_reg  = t6;
