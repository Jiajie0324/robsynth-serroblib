% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:34:10
% EndTime: 2019-03-09 22:34:33
% DurationCPUTime: 9.35s
% Computational Cost: add. (21686->531), mult. (55410->943), div. (0->0), fcn. (56162->12), ass. (0->249)
t168 = sin(qJ(3));
t171 = cos(qJ(3));
t311 = sin(qJ(4));
t249 = t311 * qJD(3);
t250 = qJD(4) * t311;
t312 = cos(qJ(4));
t251 = qJD(4) * t312;
t324 = -qJD(3) * t312 - t251;
t100 = (t249 + t250) * t168 + t324 * t171;
t262 = t311 * t171;
t133 = t168 * t312 + t262;
t263 = t311 * t168;
t314 = -pkin(10) - pkin(9);
t134 = t314 * t263;
t264 = t312 * t171;
t102 = -t314 * t264 + t134;
t238 = t314 * t312;
t81 = -qJD(4) * t102 + (t171 * t238 - t134) * qJD(3);
t328 = t100 * qJ(5) - t133 * qJD(5) + t81;
t298 = cos(pkin(6));
t246 = t298 * qJD(3);
t166 = sin(pkin(6));
t172 = cos(qJ(2));
t283 = qJD(2) * t172;
t256 = t166 * t283;
t206 = t246 + t256;
t327 = t168 * t206;
t169 = sin(qJ(2));
t265 = pkin(1) * t298;
t237 = t169 * t265;
t203 = pkin(9) * t298 + t237;
t290 = t166 * t172;
t273 = pkin(8) * t290;
t189 = t203 + t273;
t285 = qJD(2) * t166;
t326 = qJD(3) * t189 - (pkin(2) * t169 - pkin(9) * t172) * t285;
t292 = t166 * t169;
t204 = pkin(8) * t292 - t172 * t265;
t199 = t204 * qJD(2);
t266 = -pkin(9) * t169 - pkin(1);
t213 = -pkin(2) * t172 + t266;
t210 = t166 * t213;
t325 = -qJD(3) * t210 + t199;
t216 = t168 * t238;
t101 = t314 * t262 + t216;
t167 = sin(qJ(6));
t163 = t167 ^ 2;
t170 = cos(qJ(6));
t164 = t170 ^ 2;
t287 = t163 - t164;
t320 = t287 * qJD(6);
t165 = sin(pkin(12));
t291 = t166 * t171;
t125 = t168 * t298 + t169 * t291;
t248 = t298 * t171;
t207 = t168 * t292 - t248;
t195 = t311 * t207;
t260 = qJD(3) * t292;
t267 = t171 * t260 + t327;
t137 = t168 * t260;
t319 = -t171 * t206 + t137;
t202 = -qJD(4) * t195 + t125 * t251 + t267 * t312 - t311 * t319;
t297 = cos(pkin(12));
t196 = t312 * t207;
t57 = qJD(4) * t196 + t125 * t250 + t311 * t267 + t312 * t319;
t183 = t165 * t202 + t297 * t57;
t36 = -t165 * t57 + t202 * t297;
t129 = t237 + t273;
t121 = qJD(2) * t129;
t82 = pkin(3) * t267 + t121;
t47 = pkin(4) * t202 + t82;
t176 = t36 * pkin(5) + pkin(11) * t183 + t47;
t197 = t168 * t203;
t310 = pkin(8) * t168;
t181 = -t197 - t125 * pkin(10) + (t171 * t266 + (-pkin(2) * t171 - pkin(3) - t310) * t172) * t166;
t74 = t312 * t181;
t84 = t168 * t210 + t171 * t189;
t79 = -pkin(10) * t207 + t84;
t49 = -t311 * t79 + t74;
t89 = t125 * t312 - t195;
t40 = -pkin(4) * t290 - t89 * qJ(5) + t49;
t188 = t311 * t125 + t196;
t73 = t311 * t181;
t50 = t312 * t79 + t73;
t45 = -qJ(5) * t188 + t50;
t26 = t165 * t40 + t297 * t45;
t24 = -pkin(11) * t290 + t26;
t279 = qJD(6) * t167;
t284 = qJD(2) * t169;
t148 = t166 * t284;
t69 = t165 * t89 + t188 * t297;
t70 = -t165 * t188 + t297 * t89;
t115 = -pkin(2) * t298 + t204;
t92 = pkin(3) * t207 + t115;
t71 = pkin(4) * t188 + t92;
t178 = t69 * pkin(5) - t70 * pkin(11) + t71;
t244 = pkin(3) * t148;
t66 = t325 * t168 - t326 * t171;
t175 = pkin(10) * t319 + t244 + t66;
t65 = t326 * t168 + t325 * t171;
t182 = -pkin(10) * t267 - t65;
t20 = -qJD(4) * t73 + t175 * t312 - t311 * t182 - t79 * t251;
t243 = pkin(4) * t148;
t174 = t57 * qJ(5) - t89 * qJD(5) + t20 + t243;
t19 = -qJD(4) * t74 - t311 * t175 - t312 * t182 + t250 * t79;
t180 = qJ(5) * t202 + qJD(5) * t188 + t19;
t9 = t165 * t174 - t180 * t297;
t322 = -pkin(11) * t148 - qJD(6) * t178 - t9;
t2 = -t167 * t176 + t170 * t322 + t24 * t279;
t1 = t2 * t170;
t161 = qJD(6) * t170;
t3 = -t161 * t24 + t167 * t322 + t170 * t176;
t323 = -t167 * t3 - t1;
t201 = qJD(3) * t207;
t321 = t168 * t201 - t267 * t171;
t150 = t171 * t249;
t239 = -t168 * t324 + t171 * t250 + t150;
t76 = -t100 * t165 + t239 * t297;
t77 = -t100 * t297 - t165 * t239;
t282 = qJD(3) * t168;
t272 = pkin(3) * t282;
t90 = pkin(4) * t239 + t272;
t185 = t76 * pkin(5) - t77 * pkin(11) + t90;
t132 = t263 - t264;
t160 = -pkin(3) * t171 - pkin(2);
t114 = pkin(4) * t132 + t160;
t95 = t132 * t297 + t133 * t165;
t96 = -t165 * t132 + t133 * t297;
t200 = -pkin(5) * t95 + pkin(11) * t96 - t114;
t191 = t170 * t200;
t80 = -qJD(3) * t216 - t101 * qJD(4) - t314 * t150;
t58 = -qJ(5) * t239 - t132 * qJD(5) - t80;
t38 = t328 * t165 + t297 * t58;
t184 = -t133 * qJ(5) + t101;
t88 = -qJ(5) * t132 + t102;
t68 = t165 * t184 + t297 * t88;
t14 = qJD(6) * t191 - t167 * t185 - t170 * t38 + t279 * t68;
t43 = -t167 * t200 + t170 * t68;
t15 = -qJD(6) * t43 - t167 * t38 + t170 * t185;
t42 = -t167 * t68 - t191;
t218 = t167 * t42 - t170 * t43;
t318 = qJD(6) * t218 + t14 * t167 - t15 * t170;
t11 = -t167 * t24 + t170 * t178;
t12 = t167 * t178 + t170 * t24;
t225 = t11 * t167 - t12 * t170;
t317 = qJD(6) * t225 + t167 * t2 - t170 * t3;
t316 = t172 ^ 2;
t315 = 0.2e1 * t166;
t25 = -t165 * t45 + t297 * t40;
t23 = pkin(5) * t290 - t25;
t22 = t23 * t161;
t179 = -t165 * t180 - t297 * t174;
t7 = -pkin(5) * t148 + t179;
t313 = t7 * t167 + t22;
t309 = pkin(9) * t166;
t37 = t165 * t58 - t297 * t328;
t67 = t165 * t88 - t184 * t297;
t307 = t37 * t67;
t306 = t96 * t77;
t268 = t167 * t290;
t29 = -qJD(6) * t268 - t148 * t170 + t161 * t70 - t167 * t183;
t60 = t167 * t70 + t170 * t290;
t305 = -t60 * t161 - t167 * t29;
t64 = t67 * t161;
t304 = t37 * t167 + t64;
t233 = t297 * t311;
t119 = (t165 * t312 + t233) * qJD(4) * pkin(3);
t303 = t119 * t67;
t28 = qJD(6) * t60 - t148 * t167 + t170 * t183;
t302 = t167 * t28;
t301 = t167 * t60;
t300 = t170 * t29;
t61 = t170 * t70 - t268;
t299 = t170 * t61;
t241 = pkin(3) * t250;
t242 = pkin(3) * t251;
t120 = -t165 * t241 + t242 * t297;
t295 = t120 * t167;
t294 = t120 * t170;
t293 = t121 * t168;
t289 = t167 * t170;
t159 = pkin(3) * t312 + pkin(4);
t122 = -pkin(3) * t165 * t311 + t297 * t159;
t117 = -pkin(5) - t122;
t288 = t117 * t161 + t119 * t167;
t123 = pkin(3) * t233 + t165 * t159;
t286 = t163 + t164;
t281 = qJD(3) * t171;
t280 = qJD(3) * t172;
t278 = t115 * qJD(3);
t277 = t125 * qJD(3);
t276 = 0.2e1 * t69 * t36;
t275 = 0.2e1 * t95 * t76;
t274 = -0.2e1 * pkin(2) * qJD(3);
t271 = pkin(9) * t281;
t270 = t96 * t279;
t269 = t96 * t161;
t21 = t23 * t279;
t63 = t67 * t279;
t162 = t166 ^ 2;
t261 = t162 * t283;
t259 = t168 * t280;
t158 = -pkin(4) * t297 - pkin(5);
t258 = t158 * t279;
t257 = t158 * t161;
t255 = t167 * t161;
t254 = t168 * t281;
t253 = -t170 * t7 + t21;
t247 = -0.4e1 * t96 * t289;
t86 = t286 * t120;
t245 = t117 * t279 - t119 * t170;
t93 = t96 ^ 2;
t240 = t93 * t255;
t236 = t169 * t261;
t235 = t23 * t77 + t7 * t96;
t232 = t298 * t285;
t230 = t36 * t95 + t69 * t76;
t229 = t96 * t36 + t77 * t69;
t228 = t37 * t96 + t67 * t77;
t227 = t76 * t96 + t77 * t95;
t226 = -t11 * t170 - t12 * t167;
t118 = pkin(11) + t123;
t224 = t117 * t96 - t118 * t95;
t223 = t119 * t96 - t120 * t95;
t157 = pkin(4) * t165 + pkin(11);
t221 = -t157 * t76 + t158 * t77;
t220 = t157 * t95 - t158 * t96;
t219 = -t167 * t43 - t170 * t42;
t217 = -t66 * t168 - t65 * t171;
t212 = -t170 * t28 - t279 * t61;
t31 = t161 * t69 + t167 * t36;
t211 = -t170 * t36 + t279 * t69;
t55 = t161 * t95 + t167 * t76;
t208 = t168 * t284 - t171 * t280;
t198 = t117 * t77 - t118 * t76 + t223;
t190 = qJD(6) * t226 + t323;
t4 = qJD(6) * t219 - t14 * t170 - t15 * t167;
t147 = -0.2e1 * t255;
t146 = 0.2e1 * t255;
t136 = -0.2e1 * t236;
t131 = -0.2e1 * t320;
t83 = -t197 + (t171 * t213 - t172 * t310) * t166;
t54 = t170 * t76 - t279 * t95;
t48 = -t289 * t77 + t320 * t96;
t44 = qJD(6) * t247 - t287 * t77;
t18 = t279 * t60 - t300;
t17 = t161 * t61 - t302;
t10 = t212 + t305;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t236, 0.2e1 * (-t169 ^ 2 + t316) * t162 * qJD(2), 0.2e1 * t172 * t232, t136, -0.2e1 * t169 * t232, 0, -0.2e1 * pkin(1) * t162 * t284 - 0.2e1 * t121 * t298, -0.2e1 * pkin(1) * t261 + 0.2e1 * t199 * t298, 0.2e1 * t121 * t292 - 0.2e1 * t129 * t148 - 0.2e1 * t199 * t290 + 0.2e1 * t204 * t256, 0.2e1 * t121 * t204 - 0.2e1 * t129 * t199, -0.2e1 * t125 * t319, -0.2e1 * t125 * t267 + 0.2e1 * t207 * t319 (-(t171 * t246 - t137) * t172 + (t125 * t169 - t316 * t291) * qJD(2)) * t315, 0.2e1 * t207 * t267, -0.2e1 * t148 * t207 + 0.2e1 * t267 * t290, t136, -0.2e1 * t121 * t248 + 0.2e1 * t115 * t267 + 0.2e1 * (-t66 * t172 + (qJD(2) * t83 + t293) * t169) * t166, -0.2e1 * t115 * t319 + 0.2e1 * t121 * t125 - 0.2e1 * t148 * t84 - 0.2e1 * t290 * t65, -0.2e1 * t66 * t125 + 0.2e1 * t207 * t65 - 0.2e1 * t267 * t84 + 0.2e1 * t319 * t83, 0.2e1 * t115 * t121 - 0.2e1 * t65 * t84 + 0.2e1 * t66 * t83, -0.2e1 * t89 * t57, 0.2e1 * t188 * t57 - 0.2e1 * t202 * t89 (t172 * t57 + t284 * t89) * t315, 0.2e1 * t188 * t202, -0.2e1 * t148 * t188 + 0.2e1 * t202 * t290, t136, 0.2e1 * t148 * t49 + 0.2e1 * t188 * t82 - 0.2e1 * t20 * t290 + 0.2e1 * t202 * t92, -0.2e1 * t92 * t57 + 0.2e1 * t82 * t89 + 0.2e1 * (-t172 * t19 - t284 * t50) * t166, 0.2e1 * t188 * t19 - 0.2e1 * t20 * t89 - 0.2e1 * t202 * t50 + 0.2e1 * t49 * t57, -0.2e1 * t19 * t50 + 0.2e1 * t20 * t49 + 0.2e1 * t82 * t92, -0.2e1 * t70 * t183, 0.2e1 * t183 * t69 - 0.2e1 * t70 * t36 (t172 * t183 + t284 * t70) * t315, t276 (t172 * t36 - t284 * t69) * t315, t136, 0.2e1 * t71 * t36 + 0.2e1 * t47 * t69 + 0.2e1 * (t172 * t179 + t25 * t284) * t166, 0.2e1 * t47 * t70 - 0.2e1 * t71 * t183 + 0.2e1 * (t172 * t9 - t26 * t284) * t166, 0.2e1 * t179 * t70 + 0.2e1 * t183 * t25 - 0.2e1 * t26 * t36 - 0.2e1 * t9 * t69, -0.2e1 * t179 * t25 + 0.2e1 * t26 * t9 + 0.2e1 * t47 * t71, -0.2e1 * t61 * t28, 0.2e1 * t28 * t60 - 0.2e1 * t29 * t61, -0.2e1 * t28 * t69 + 0.2e1 * t36 * t61, 0.2e1 * t60 * t29, -0.2e1 * t29 * t69 - 0.2e1 * t36 * t60, t276, 0.2e1 * t11 * t36 + 0.2e1 * t23 * t29 + 0.2e1 * t3 * t69 + 0.2e1 * t60 * t7, -0.2e1 * t12 * t36 + 0.2e1 * t2 * t69 - 0.2e1 * t23 * t28 + 0.2e1 * t61 * t7, 0.2e1 * t11 * t28 - 0.2e1 * t12 * t29 + 0.2e1 * t2 * t60 - 0.2e1 * t3 * t61, 0.2e1 * t11 * t3 - 0.2e1 * t12 * t2 + 0.2e1 * t23 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, 0, -t148, 0, -t121, t199, 0, 0, -t137 * t168 + (t277 + t327) * t171 (-t319 - t201) * t171 + (-t267 - t277) * t168, t208 * t166, t321 (t171 * t284 + t259) * t166, 0, -pkin(2) * t267 - t121 * t171 + t168 * t278 - t208 * t309, pkin(2) * t319 - t259 * t309 + t293 + (-pkin(9) * t148 + t278) * t171, t125 * t271 - t281 * t83 - t282 * t84 + t217 + (-t168 * t319 + t321) * pkin(9), -pkin(2) * t121 + ((-t84 * t168 - t83 * t171) * qJD(3) + t217) * pkin(9), -t100 * t89 - t133 * t57, t100 * t188 + t57 * t132 - t133 * t202 - t239 * t89 (t100 * t172 + t133 * t284) * t166, t132 * t202 + t188 * t239 (-t132 * t284 + t172 * t239) * t166, 0, t101 * t148 + t82 * t132 + t160 * t202 + t188 * t272 + t239 * t92 - t290 * t81, t89 * t272 - t92 * t100 + t82 * t133 - t160 * t57 + (-t102 * t284 - t172 * t80) * t166, t49 * t100 + t101 * t57 - t102 * t202 + t19 * t132 - t20 * t133 + t188 * t80 - t239 * t50 - t81 * t89, t101 * t20 - t102 * t19 + t160 * t82 + t272 * t92 + t49 * t81 - t50 * t80, -t183 * t96 + t70 * t77, t183 * t95 - t70 * t76 - t229 (-t172 * t77 + t284 * t96) * t166, t230 (t172 * t76 - t284 * t95) * t166, 0, t114 * t36 + t47 * t95 + t90 * t69 + t71 * t76 + (t172 * t37 - t284 * t67) * t166, t90 * t70 - t114 * t183 + t47 * t96 + t71 * t77 + (t172 * t38 - t284 * t68) * t166, t179 * t96 - t183 * t67 - t25 * t77 - t26 * t76 - t68 * t36 + t37 * t70 - t38 * t69 - t9 * t95, t114 * t47 + t179 * t67 - t25 * t37 + t26 * t38 + t68 * t9 + t71 * t90, -t61 * t270 + (-t28 * t96 + t61 * t77) * t170 (-t167 * t61 - t170 * t60) * t77 + (t302 - t300 + (-t299 + t301) * qJD(6)) * t96, t170 * t229 - t270 * t69 - t28 * t95 + t61 * t76, t60 * t269 + (t29 * t96 + t60 * t77) * t167, -t167 * t229 - t269 * t69 - t29 * t95 - t60 * t76, t230, t11 * t76 + t15 * t69 + t167 * t235 + t22 * t96 + t29 * t67 + t3 * t95 + t36 * t42 + t37 * t60, -t12 * t76 + t14 * t69 + t170 * t235 + t2 * t95 - t21 * t96 - t28 * t67 - t36 * t43 + t37 * t61, t14 * t60 - t15 * t61 + t226 * t77 + t28 * t42 - t29 * t43 + t317 * t96, t11 * t15 - t12 * t14 - t2 * t43 + t23 * t37 + t3 * t42 + t67 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t254, 0.2e1 * (-t168 ^ 2 + t171 ^ 2) * qJD(3), 0, -0.2e1 * t254, 0, 0, t168 * t274, t171 * t274, 0, 0, -0.2e1 * t133 * t100, 0.2e1 * t100 * t132 - 0.2e1 * t133 * t239, 0, 0.2e1 * t132 * t239, 0, 0, 0.2e1 * t132 * t272 + 0.2e1 * t160 * t239, -0.2e1 * t100 * t160 + 0.2e1 * t133 * t272, 0.2e1 * t101 * t100 - 0.2e1 * t102 * t239 + 0.2e1 * t80 * t132 - 0.2e1 * t81 * t133, 0.2e1 * t101 * t81 - 0.2e1 * t102 * t80 + 0.2e1 * t160 * t272, 0.2e1 * t306, -0.2e1 * t227, 0, t275, 0, 0, 0.2e1 * t114 * t76 + 0.2e1 * t90 * t95, 0.2e1 * t114 * t77 + 0.2e1 * t90 * t96, -0.2e1 * t38 * t95 - 0.2e1 * t68 * t76 + 0.2e1 * t228, 0.2e1 * t114 * t90 + 0.2e1 * t38 * t68 + 0.2e1 * t307, 0.2e1 * t164 * t306 - 0.2e1 * t240, t247 * t77 + 0.2e1 * t320 * t93, 0.2e1 * t170 * t227 - 0.2e1 * t270 * t95, 0.2e1 * t163 * t306 + 0.2e1 * t240, -0.2e1 * t167 * t227 - 0.2e1 * t269 * t95, t275, 0.2e1 * t15 * t95 + 0.2e1 * t167 * t228 + 0.2e1 * t42 * t76 + 0.2e1 * t64 * t96, 0.2e1 * t14 * t95 + 0.2e1 * t170 * t228 - 0.2e1 * t43 * t76 - 0.2e1 * t63 * t96, 0.2e1 * t219 * t77 + 0.2e1 * t318 * t96, -0.2e1 * t14 * t43 + 0.2e1 * t15 * t42 + 0.2e1 * t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, 0, -t267, t148, t66, t65, 0, 0, 0, 0, -t57, 0, -t202, t148, t241 * t290 + t244 * t312 + t20 (t172 * t251 - t284 * t311) * t166 * pkin(3) + t19 (-t311 * t202 + t312 * t57 + (-t188 * t312 + t311 * t89) * qJD(4)) * pkin(3) (-t311 * t19 + t312 * t20 + (-t311 * t49 + t312 * t50) * qJD(4)) * pkin(3), 0, 0, -t183, 0, -t36, t148, t119 * t290 + t122 * t148 - t179, t120 * t290 - t123 * t148 - t9, t119 * t70 - t120 * t69 + t122 * t183 - t123 * t36, -t119 * t25 + t120 * t26 - t122 * t179 + t123 * t9, t17, t10, t31, t18, -t211, 0, t117 * t29 - t118 * t31 + t119 * t60 - t295 * t69 + t253, -t117 * t28 + t118 * t211 + t119 * t61 - t294 * t69 + t313, -t1 + (-t118 * t29 - t120 * t60 + (t118 * t61 - t11) * qJD(6)) * t170 + (-t118 * t28 + t120 * t61 - t3 + (t118 * t60 - t12) * qJD(6)) * t167, t117 * t7 + t118 * t190 + t119 * t23 - t120 * t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, 0, -t282, 0, -t271, pkin(9) * t282, 0, 0, 0, 0, -t100, 0, -t239, 0, t81, t80 (-t311 * t239 + t312 * t100 + (-t132 * t312 + t311 * t133) * qJD(4)) * pkin(3) (-t311 * t80 + t312 * t81 + (-t311 * t101 + t102 * t312) * qJD(4)) * pkin(3), 0, 0, t77, 0, -t76, 0, -t37, -t38, -t122 * t77 - t123 * t76 + t223, t120 * t68 - t122 * t37 + t123 * t38 + t303, -t48, t44, t55, t48, t54, 0, t63 + (qJD(6) * t224 - t37) * t170 + t198 * t167, t170 * t198 - t224 * t279 + t304, t4, t117 * t37 + t118 * t4 - t120 * t218 + t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t241, -0.2e1 * t242, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t119, -0.2e1 * t120, 0, -0.2e1 * t119 * t122 + 0.2e1 * t120 * t123, t146, t131, 0, t147, 0, 0, 0.2e1 * t245, 0.2e1 * t288, 0.2e1 * t86, 0.2e1 * t117 * t119 + 0.2e1 * t118 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, -t202, t148, t20, t19, 0, 0, 0, 0, -t183, 0, -t36, t148, t243 * t297 - t179, -t165 * t243 - t9 (-t165 * t36 + t183 * t297) * pkin(4) (t165 * t9 - t179 * t297) * pkin(4), t17, t10, t31, t18, -t211, 0, -t157 * t31 + t158 * t29 + t253, t157 * t211 - t158 * t28 + t313 (-t300 - t302) * t157 + ((t299 + t301) * t157 + t226) * qJD(6) + t323, t157 * t190 + t158 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, 0, -t239, 0, t81, t80, 0, 0, 0, 0, t77, 0, -t76, 0, -t37, -t38 (-t165 * t76 - t297 * t77) * pkin(4) (t165 * t38 - t297 * t37) * pkin(4), -t48, t44, t55, t48, t54, 0, t63 + t221 * t167 + (-qJD(6) * t220 - t37) * t170, t170 * t221 + t220 * t279 + t304, t4, t157 * t4 + t158 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, -t242, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t120, 0 (-t119 * t297 + t120 * t165) * pkin(4), t146, t131, 0, t147, 0, 0, t245 + t258, t257 + t288, t86, t119 * t158 + t157 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, t131, 0, t147, 0, 0, 0.2e1 * t258, 0.2e1 * t257, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, -t183, 0, t47, 0, 0, 0, 0, 0, 0, -t211, -t31, -t212 + t305, -t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, t77, 0, t90, 0, 0, 0, 0, 0, 0, t54, -t55, -t286 * t77, -t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, 0, -t29, t36, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170 * t77 - t270, 0, -t167 * t77 - t269, t76, t15, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, 0, -t279, 0, -t118 * t161 - t295, t118 * t279 - t294, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, 0, -t279, 0, -t157 * t161, t157 * t279, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, -t161, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
