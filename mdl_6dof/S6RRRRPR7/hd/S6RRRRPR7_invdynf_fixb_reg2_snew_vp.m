% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 21:26
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRRPR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 21:26:19
% EndTime: 2019-05-07 21:26:35
% DurationCPUTime: 16.84s
% Computational Cost: add. (213406->382), mult. (469057->585), div. (0->0), fcn. (388257->14), ass. (0->328)
t2689 = sin(pkin(6));
t2702 = qJD(1) ^ 2;
t2780 = t2689 * t2702;
t2691 = cos(pkin(6));
t2744 = qJD(1) * t2691 + qJD(2);
t2735 = t2744 ^ 2;
t2694 = sin(qJ(3));
t2699 = cos(qJ(3));
t2695 = sin(qJ(2));
t2755 = t2689 * t2695;
t2747 = qJD(1) * t2755;
t2654 = t2694 * t2747 - t2699 * t2744;
t2655 = t2694 * t2744 + t2699 * t2747;
t2693 = sin(qJ(4));
t2698 = cos(qJ(4));
t2633 = t2698 * t2654 + t2655 * t2693;
t2635 = -t2654 * t2693 + t2655 * t2698;
t2688 = sin(pkin(12));
t2690 = cos(pkin(12));
t2599 = t2690 * t2633 + t2635 * t2688;
t2598 = qJD(6) + t2599;
t2779 = qJD(6) + t2598;
t2601 = -t2633 * t2688 + t2635 * t2690;
t2700 = cos(qJ(2));
t2754 = t2689 * t2700;
t2746 = qJD(1) * t2754;
t2675 = -qJD(3) + t2746;
t2668 = -qJD(4) + t2675;
t2692 = sin(qJ(6));
t2697 = cos(qJ(6));
t2584 = t2601 * t2692 + t2697 * t2668;
t2778 = t2584 ^ 2;
t2586 = t2601 * t2697 - t2668 * t2692;
t2777 = t2586 ^ 2;
t2776 = t2598 ^ 2;
t2775 = t2599 ^ 2;
t2774 = t2601 ^ 2;
t2773 = t2633 ^ 2;
t2772 = t2635 ^ 2;
t2771 = t2654 ^ 2;
t2770 = t2655 ^ 2;
t2769 = t2668 ^ 2;
t2768 = t2675 ^ 2;
t2767 = -2 * qJD(5);
t2766 = t2691 * g(3);
t2765 = (-pkin(2) * t2700 - pkin(9) * t2695) * t2780;
t2764 = t2584 * t2586;
t2763 = t2599 * t2601;
t2762 = t2599 * t2668;
t2761 = t2601 * t2668;
t2760 = t2633 * t2635;
t2759 = t2633 * t2668;
t2758 = t2654 * t2655;
t2757 = t2654 * t2675;
t2756 = t2689 ^ 2 * t2702;
t2753 = qJD(3) + t2675;
t2752 = qJD(4) + t2668;
t2751 = qJD(6) - t2598;
t2736 = qJDD(1) * t2691 + qJDD(2);
t2696 = sin(qJ(1));
t2701 = cos(qJ(1));
t2678 = -g(1) * t2701 - g(2) * t2696;
t2748 = qJDD(1) * t2689;
t2657 = -pkin(1) * t2702 + pkin(8) * t2748 + t2678;
t2677 = t2696 * g(1) - t2701 * g(2);
t2706 = qJDD(1) * pkin(1) + pkin(8) * t2780 + t2677;
t2704 = t2691 * t2706;
t2750 = t2700 * t2657 + t2695 * t2704;
t2608 = t2736 * pkin(9) - t2735 * pkin(2) + (-g(3) * t2695 + t2700 * t2765) * t2689 + t2750;
t2661 = qJD(2) * t2746 + t2695 * t2748;
t2732 = qJD(1) * t2744;
t2710 = t2700 * t2732;
t2711 = t2695 * t2732;
t2749 = -qJD(2) * t2747 + t2700 * t2748;
t2609 = -t2766 - t2661 * pkin(9) - t2749 * pkin(2) + (pkin(2) * t2711 - pkin(9) * t2710 - t2706) * t2689;
t2572 = -t2694 * t2608 + t2699 * t2609;
t2745 = -qJDD(3) + t2749;
t2623 = -t2745 - t2758;
t2708 = -t2699 * t2661 - t2694 * t2736;
t2627 = -t2654 * qJD(3) - t2708;
t2545 = (-t2627 + t2757) * pkin(10) + t2623 * pkin(3) + t2572;
t2573 = t2699 * t2608 + t2694 * t2609;
t2639 = -pkin(3) * t2675 - pkin(10) * t2655;
t2737 = t2694 * t2661 - t2699 * t2736;
t2709 = -qJD(3) * t2655 - t2737;
t2554 = -pkin(3) * t2771 + pkin(10) * t2709 + t2675 * t2639 + t2573;
t2518 = t2693 * t2545 + t2698 * t2554;
t2739 = t2693 * t2627 - t2698 * t2709;
t2578 = -qJD(4) * t2635 - t2739;
t2621 = -pkin(4) * t2668 - qJ(5) * t2635;
t2497 = -pkin(4) * t2773 + qJ(5) * t2578 + t2621 * t2668 + t2518;
t2517 = t2698 * t2545 - t2693 * t2554;
t2705 = -t2698 * t2627 - t2693 * t2709;
t2579 = -t2633 * qJD(4) - t2705;
t2734 = -qJDD(4) + t2745;
t2590 = -t2734 - t2760;
t2703 = (-t2579 + t2759) * qJ(5) + t2590 * pkin(4) + t2517;
t2468 = t2690 * t2497 + t2599 * t2767 + t2688 * t2703;
t2743 = t2688 * t2497 - t2690 * t2703;
t2548 = t2578 * t2688 + t2579 * t2690;
t2742 = -t2548 - t2762;
t2741 = -t2692 * t2548 - t2697 * t2734;
t2740 = -t2690 * t2578 + t2579 * t2688;
t2738 = t2695 * t2657 - t2700 * t2704;
t2733 = -qJDD(6) - t2740;
t2567 = pkin(5) * t2599 - pkin(11) * t2601;
t2465 = -pkin(5) * t2769 - pkin(11) * t2734 - t2599 * t2567 + t2468;
t2607 = -t2736 * pkin(2) - t2735 * pkin(9) + (g(3) * t2700 + t2695 * t2765) * t2689 + t2738;
t2561 = -t2709 * pkin(3) - t2771 * pkin(10) + t2655 * t2639 + t2607;
t2522 = -t2578 * pkin(4) - t2773 * qJ(5) + t2635 * t2621 + qJDD(5) + t2561;
t2530 = t2740 - t2761;
t2484 = pkin(5) * t2530 + pkin(11) * t2742 + t2522;
t2449 = -t2465 * t2692 + t2484 * t2697;
t2450 = t2465 * t2697 + t2484 * t2692;
t2431 = -t2449 * t2692 + t2450 * t2697;
t2464 = t2734 * pkin(5) - t2769 * pkin(11) + ((2 * qJD(5)) + t2567) * t2601 + t2743;
t2425 = t2431 * t2688 - t2464 * t2690;
t2426 = t2431 * t2690 + t2464 * t2688;
t2414 = t2425 * t2698 + t2426 * t2693;
t2415 = -t2425 * t2693 + t2426 * t2698;
t2411 = -t2414 * t2694 + t2415 * t2699;
t2430 = t2449 * t2697 + t2450 * t2692;
t2731 = t2411 * t2695 - t2430 * t2700;
t2467 = t2601 * t2767 - t2743;
t2446 = t2467 * t2690 + t2468 * t2688;
t2447 = -t2467 * t2688 + t2468 * t2690;
t2428 = t2446 * t2698 + t2447 * t2693;
t2429 = -t2446 * t2693 + t2447 * t2698;
t2418 = -t2428 * t2694 + t2429 * t2699;
t2730 = t2418 * t2695 - t2522 * t2700;
t2513 = -t2586 * t2751 + t2741;
t2707 = -t2697 * t2548 + t2692 * t2734;
t2515 = t2584 * t2751 + t2707;
t2486 = t2513 * t2697 - t2515 * t2692;
t2540 = -t2777 - t2778;
t2476 = t2486 * t2688 - t2540 * t2690;
t2477 = t2486 * t2690 + t2540 * t2688;
t2453 = t2476 * t2698 + t2477 * t2693;
t2454 = -t2476 * t2693 + t2477 * t2698;
t2437 = -t2453 * t2694 + t2454 * t2699;
t2485 = t2513 * t2692 + t2515 * t2697;
t2729 = t2437 * t2695 - t2485 * t2700;
t2520 = -t2733 - t2764;
t2543 = -t2776 - t2778;
t2499 = -t2520 * t2692 + t2543 * t2697;
t2512 = t2586 * t2779 - t2741;
t2478 = t2499 * t2688 - t2512 * t2690;
t2479 = t2499 * t2690 + t2512 * t2688;
t2457 = t2478 * t2698 + t2479 * t2693;
t2458 = -t2478 * t2693 + t2479 * t2698;
t2439 = -t2457 * t2694 + t2458 * t2699;
t2498 = t2520 * t2697 + t2543 * t2692;
t2728 = t2439 * t2695 - t2498 * t2700;
t2521 = t2733 - t2764;
t2549 = -t2776 - t2777;
t2501 = t2521 * t2697 - t2549 * t2692;
t2514 = -t2584 * t2779 - t2707;
t2480 = t2501 * t2688 - t2514 * t2690;
t2481 = t2501 * t2690 + t2514 * t2688;
t2459 = t2480 * t2698 + t2481 * t2693;
t2460 = -t2480 * t2693 + t2481 * t2698;
t2441 = -t2459 * t2694 + t2460 * t2699;
t2500 = t2521 * t2692 + t2549 * t2697;
t2727 = t2441 * t2695 - t2500 * t2700;
t2531 = -t2740 - t2761;
t2533 = -t2548 + t2762;
t2506 = t2531 * t2688 + t2533 * t2690;
t2507 = t2531 * t2690 - t2533 * t2688;
t2474 = t2506 * t2698 + t2507 * t2693;
t2475 = -t2506 * t2693 + t2507 * t2698;
t2452 = -t2474 * t2694 + t2475 * t2699;
t2553 = -t2774 - t2775;
t2726 = t2452 * t2695 - t2553 * t2700;
t2487 = t2517 * t2698 + t2518 * t2693;
t2488 = -t2517 * t2693 + t2518 * t2698;
t2463 = -t2487 * t2694 + t2488 * t2699;
t2725 = t2463 * t2695 - t2561 * t2700;
t2559 = -t2734 - t2763;
t2566 = -t2769 - t2775;
t2526 = t2559 * t2690 + t2566 * t2688;
t2527 = -t2559 * t2688 + t2566 * t2690;
t2502 = t2526 * t2698 + t2527 * t2693;
t2503 = -t2526 * t2693 + t2527 * t2698;
t2473 = -t2502 * t2694 + t2503 * t2699;
t2724 = t2473 * t2695 - t2530 * t2700;
t2558 = t2734 - t2763;
t2583 = -t2769 - t2774;
t2541 = t2558 * t2688 + t2583 * t2690;
t2542 = t2558 * t2690 - t2583 * t2688;
t2510 = t2541 * t2698 + t2542 * t2693;
t2511 = -t2541 * t2693 + t2542 * t2698;
t2483 = -t2510 * t2694 + t2511 * t2699;
t2723 = t2483 * t2695 + t2700 * t2742;
t2563 = -t2635 * t2752 - t2739;
t2565 = t2633 * t2752 + t2705;
t2528 = t2563 * t2693 + t2565 * t2698;
t2529 = t2563 * t2698 - t2565 * t2693;
t2505 = -t2528 * t2694 + t2529 * t2699;
t2580 = -t2772 - t2773;
t2722 = t2505 * t2695 - t2580 * t2700;
t2593 = -t2769 - t2773;
t2556 = t2590 * t2698 + t2593 * t2693;
t2557 = -t2590 * t2693 + t2593 * t2698;
t2525 = -t2556 * t2694 + t2557 * t2699;
t2562 = (qJD(4) - t2668) * t2635 + t2739;
t2721 = t2525 * t2695 - t2562 * t2700;
t2589 = t2734 - t2760;
t2618 = -t2769 - t2772;
t2570 = t2589 * t2693 + t2618 * t2698;
t2571 = t2589 * t2698 - t2618 * t2693;
t2537 = -t2570 * t2694 + t2571 * t2699;
t2564 = t2579 + t2759;
t2720 = t2537 * t2695 - t2564 * t2700;
t2539 = -t2572 * t2694 + t2573 * t2699;
t2719 = t2539 * t2695 - t2607 * t2700;
t2613 = -t2655 * t2753 - t2737;
t2615 = t2654 * t2753 + t2708;
t2575 = t2613 * t2699 - t2615 * t2694;
t2620 = -t2770 - t2771;
t2718 = t2575 * t2695 - t2620 * t2700;
t2628 = -t2768 - t2771;
t2588 = -t2623 * t2694 + t2628 * t2699;
t2612 = (qJD(3) - t2675) * t2655 + t2737;
t2717 = t2588 * t2695 - t2612 * t2700;
t2622 = t2745 - t2758;
t2637 = -t2768 - t2770;
t2595 = t2622 * t2699 - t2637 * t2694;
t2614 = t2627 + t2757;
t2716 = t2595 * t2695 - t2614 * t2700;
t2630 = -g(3) * t2754 - t2738;
t2631 = -g(3) * t2755 + t2750;
t2715 = t2630 * t2700 + t2631 * t2695;
t2641 = t2689 * t2710 - t2661;
t2664 = t2689 * t2711;
t2642 = t2664 + t2749;
t2714 = t2641 * t2700 + t2642 * t2695;
t2686 = t2695 ^ 2;
t2650 = -t2686 * t2756 - t2735;
t2674 = t2700 * t2695 * t2756;
t2659 = t2674 - t2736;
t2713 = t2650 * t2700 + t2659 * t2695;
t2658 = t2674 + t2736;
t2687 = t2700 ^ 2;
t2662 = -t2687 * t2756 - t2735;
t2712 = t2658 * t2700 + t2662 * t2695;
t2673 = -qJDD(1) * t2696 - t2701 * t2702;
t2672 = qJDD(1) * t2701 - t2696 * t2702;
t2663 = (-t2686 - t2687) * t2756;
t2645 = -t2689 * t2706 - t2766;
t2643 = t2664 - t2749;
t2640 = t2744 * t2746 + t2661;
t2638 = -t2658 * t2695 + t2662 * t2700;
t2636 = -t2650 * t2695 + t2659 * t2700;
t2619 = -t2641 * t2695 + t2642 * t2700;
t2617 = -t2689 * t2643 + t2691 * t2712;
t2616 = t2691 * t2643 + t2689 * t2712;
t2611 = -t2689 * t2640 + t2691 * t2713;
t2610 = t2691 * t2640 + t2689 * t2713;
t2606 = -t2689 * t2663 + t2691 * t2714;
t2605 = t2691 * t2663 + t2689 * t2714;
t2594 = t2622 * t2694 + t2637 * t2699;
t2592 = -t2630 * t2695 + t2631 * t2700;
t2587 = t2623 * t2699 + t2628 * t2694;
t2582 = -t2689 * t2645 + t2691 * t2715;
t2581 = t2691 * t2645 + t2689 * t2715;
t2574 = t2613 * t2694 + t2615 * t2699;
t2569 = t2595 * t2700 + t2614 * t2695;
t2568 = t2588 * t2700 + t2612 * t2695;
t2555 = t2575 * t2700 + t2620 * t2695;
t2551 = -t2689 * t2594 + t2691 * t2716;
t2550 = t2691 * t2594 + t2689 * t2716;
t2547 = -t2689 * t2587 + t2691 * t2717;
t2546 = t2691 * t2587 + t2689 * t2717;
t2538 = t2572 * t2699 + t2573 * t2694;
t2536 = t2570 * t2699 + t2571 * t2694;
t2535 = -t2689 * t2574 + t2691 * t2718;
t2534 = t2691 * t2574 + t2689 * t2718;
t2524 = t2556 * t2699 + t2557 * t2694;
t2523 = t2539 * t2700 + t2607 * t2695;
t2519 = t2537 * t2700 + t2564 * t2695;
t2516 = t2525 * t2700 + t2562 * t2695;
t2509 = -t2689 * t2538 + t2691 * t2719;
t2508 = t2691 * t2538 + t2689 * t2719;
t2504 = t2528 * t2699 + t2529 * t2694;
t2493 = -t2689 * t2536 + t2691 * t2720;
t2492 = t2691 * t2536 + t2689 * t2720;
t2491 = t2505 * t2700 + t2580 * t2695;
t2490 = -t2689 * t2524 + t2691 * t2721;
t2489 = t2691 * t2524 + t2689 * t2721;
t2482 = t2510 * t2699 + t2511 * t2694;
t2472 = t2502 * t2699 + t2503 * t2694;
t2471 = t2483 * t2700 - t2695 * t2742;
t2470 = -t2689 * t2504 + t2691 * t2722;
t2469 = t2691 * t2504 + t2689 * t2722;
t2466 = t2473 * t2700 + t2530 * t2695;
t2462 = t2487 * t2699 + t2488 * t2694;
t2461 = t2463 * t2700 + t2561 * t2695;
t2456 = -t2689 * t2482 + t2691 * t2723;
t2455 = t2691 * t2482 + t2689 * t2723;
t2451 = t2474 * t2699 + t2475 * t2694;
t2448 = t2452 * t2700 + t2553 * t2695;
t2445 = -t2689 * t2472 + t2691 * t2724;
t2444 = t2691 * t2472 + t2689 * t2724;
t2443 = -t2689 * t2462 + t2691 * t2725;
t2442 = t2691 * t2462 + t2689 * t2725;
t2440 = t2459 * t2699 + t2460 * t2694;
t2438 = t2457 * t2699 + t2458 * t2694;
t2436 = t2453 * t2699 + t2454 * t2694;
t2435 = t2441 * t2700 + t2500 * t2695;
t2434 = t2439 * t2700 + t2498 * t2695;
t2433 = -t2689 * t2451 + t2691 * t2726;
t2432 = t2691 * t2451 + t2689 * t2726;
t2427 = t2437 * t2700 + t2485 * t2695;
t2424 = -t2689 * t2440 + t2691 * t2727;
t2423 = t2691 * t2440 + t2689 * t2727;
t2422 = -t2689 * t2438 + t2691 * t2728;
t2421 = t2691 * t2438 + t2689 * t2728;
t2420 = -t2689 * t2436 + t2691 * t2729;
t2419 = t2691 * t2436 + t2689 * t2729;
t2417 = t2428 * t2699 + t2429 * t2694;
t2416 = t2418 * t2700 + t2522 * t2695;
t2413 = -t2689 * t2417 + t2691 * t2730;
t2412 = t2691 * t2417 + t2689 * t2730;
t2410 = t2414 * t2699 + t2415 * t2694;
t2409 = t2411 * t2700 + t2430 * t2695;
t2408 = -t2689 * t2410 + t2691 * t2731;
t2407 = t2691 * t2410 + t2689 * t2731;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2673, -t2672, 0, -t2677 * t2696 + t2678 * t2701, 0, 0, 0, 0, 0, 0, -t2617 * t2696 + t2638 * t2701, -t2611 * t2696 + t2636 * t2701, -t2606 * t2696 + t2619 * t2701, -t2582 * t2696 + t2592 * t2701, 0, 0, 0, 0, 0, 0, -t2547 * t2696 + t2568 * t2701, -t2551 * t2696 + t2569 * t2701, -t2535 * t2696 + t2555 * t2701, -t2509 * t2696 + t2523 * t2701, 0, 0, 0, 0, 0, 0, -t2490 * t2696 + t2516 * t2701, -t2493 * t2696 + t2519 * t2701, -t2470 * t2696 + t2491 * t2701, -t2443 * t2696 + t2461 * t2701, 0, 0, 0, 0, 0, 0, -t2445 * t2696 + t2466 * t2701, -t2456 * t2696 + t2471 * t2701, -t2433 * t2696 + t2448 * t2701, -t2413 * t2696 + t2416 * t2701, 0, 0, 0, 0, 0, 0, -t2422 * t2696 + t2434 * t2701, -t2424 * t2696 + t2435 * t2701, -t2420 * t2696 + t2427 * t2701, -t2408 * t2696 + t2409 * t2701; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2672, t2673, 0, t2677 * t2701 + t2678 * t2696, 0, 0, 0, 0, 0, 0, t2617 * t2701 + t2638 * t2696, t2611 * t2701 + t2636 * t2696, t2606 * t2701 + t2619 * t2696, t2582 * t2701 + t2592 * t2696, 0, 0, 0, 0, 0, 0, t2547 * t2701 + t2568 * t2696, t2551 * t2701 + t2569 * t2696, t2535 * t2701 + t2555 * t2696, t2509 * t2701 + t2523 * t2696, 0, 0, 0, 0, 0, 0, t2490 * t2701 + t2516 * t2696, t2493 * t2701 + t2519 * t2696, t2470 * t2701 + t2491 * t2696, t2443 * t2701 + t2461 * t2696, 0, 0, 0, 0, 0, 0, t2445 * t2701 + t2466 * t2696, t2456 * t2701 + t2471 * t2696, t2433 * t2701 + t2448 * t2696, t2413 * t2701 + t2416 * t2696, 0, 0, 0, 0, 0, 0, t2422 * t2701 + t2434 * t2696, t2424 * t2701 + t2435 * t2696, t2420 * t2701 + t2427 * t2696, t2408 * t2701 + t2409 * t2696; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2616, t2610, t2605, t2581, 0, 0, 0, 0, 0, 0, t2546, t2550, t2534, t2508, 0, 0, 0, 0, 0, 0, t2489, t2492, t2469, t2442, 0, 0, 0, 0, 0, 0, t2444, t2455, t2432, t2412, 0, 0, 0, 0, 0, 0, t2421, t2423, t2419, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2702, -qJDD(1), 0, t2678, 0, 0, 0, 0, 0, 0, t2638, t2636, t2619, t2592, 0, 0, 0, 0, 0, 0, t2568, t2569, t2555, t2523, 0, 0, 0, 0, 0, 0, t2516, t2519, t2491, t2461, 0, 0, 0, 0, 0, 0, t2466, t2471, t2448, t2416, 0, 0, 0, 0, 0, 0, t2434, t2435, t2427, t2409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2702, 0, t2677, 0, 0, 0, 0, 0, 0, t2617, t2611, t2606, t2582, 0, 0, 0, 0, 0, 0, t2547, t2551, t2535, t2509, 0, 0, 0, 0, 0, 0, t2490, t2493, t2470, t2443, 0, 0, 0, 0, 0, 0, t2445, t2456, t2433, t2413, 0, 0, 0, 0, 0, 0, t2422, t2424, t2420, t2408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2616, t2610, t2605, t2581, 0, 0, 0, 0, 0, 0, t2546, t2550, t2534, t2508, 0, 0, 0, 0, 0, 0, t2489, t2492, t2469, t2442, 0, 0, 0, 0, 0, 0, t2444, t2455, t2432, t2412, 0, 0, 0, 0, 0, 0, t2421, t2423, t2419, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2662, t2659, t2642, t2631, 0, 0, 0, 0, 0, 0, t2588, t2595, t2575, t2539, 0, 0, 0, 0, 0, 0, t2525, t2537, t2505, t2463, 0, 0, 0, 0, 0, 0, t2473, t2483, t2452, t2418, 0, 0, 0, 0, 0, 0, t2439, t2441, t2437, t2411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2658, t2650, t2641, t2630, 0, 0, 0, 0, 0, 0, -t2612, -t2614, -t2620, -t2607, 0, 0, 0, 0, 0, 0, -t2562, -t2564, -t2580, -t2561, 0, 0, 0, 0, 0, 0, -t2530, t2742, -t2553, -t2522, 0, 0, 0, 0, 0, 0, -t2498, -t2500, -t2485, -t2430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2643, t2640, t2663, t2645, 0, 0, 0, 0, 0, 0, t2587, t2594, t2574, t2538, 0, 0, 0, 0, 0, 0, t2524, t2536, t2504, t2462, 0, 0, 0, 0, 0, 0, t2472, t2482, t2451, t2417, 0, 0, 0, 0, 0, 0, t2438, t2440, t2436, t2410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2628, t2622, t2613, t2573, 0, 0, 0, 0, 0, 0, t2557, t2571, t2529, t2488, 0, 0, 0, 0, 0, 0, t2503, t2511, t2475, t2429, 0, 0, 0, 0, 0, 0, t2458, t2460, t2454, t2415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2623, t2637, t2615, t2572, 0, 0, 0, 0, 0, 0, t2556, t2570, t2528, t2487, 0, 0, 0, 0, 0, 0, t2502, t2510, t2474, t2428, 0, 0, 0, 0, 0, 0, t2457, t2459, t2453, t2414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2612, t2614, t2620, t2607, 0, 0, 0, 0, 0, 0, t2562, t2564, t2580, t2561, 0, 0, 0, 0, 0, 0, t2530, -t2742, t2553, t2522, 0, 0, 0, 0, 0, 0, t2498, t2500, t2485, t2430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2593, t2589, t2563, t2518, 0, 0, 0, 0, 0, 0, t2527, t2542, t2507, t2447, 0, 0, 0, 0, 0, 0, t2479, t2481, t2477, t2426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2590, t2618, t2565, t2517, 0, 0, 0, 0, 0, 0, t2526, t2541, t2506, t2446, 0, 0, 0, 0, 0, 0, t2478, t2480, t2476, t2425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2562, t2564, t2580, t2561, 0, 0, 0, 0, 0, 0, t2530, -t2742, t2553, t2522, 0, 0, 0, 0, 0, 0, t2498, t2500, t2485, t2430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2566, t2558, t2531, t2468, 0, 0, 0, 0, 0, 0, t2499, t2501, t2486, t2431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2559, t2583, t2533, t2467, 0, 0, 0, 0, 0, 0, -t2512, -t2514, -t2540, -t2464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2530, -t2742, t2553, t2522, 0, 0, 0, 0, 0, 0, t2498, t2500, t2485, t2430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2543, t2521, t2513, t2450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2520, t2549, t2515, t2449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2512, t2514, t2540, t2464;];
f_new_reg  = t1;
