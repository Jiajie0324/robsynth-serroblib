% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x33]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR7_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR7_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR7_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRPR7_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:34:09
% EndTime: 2019-03-09 22:34:21
% DurationCPUTime: 4.38s
% Computational Cost: add. (9652->351), mult. (25100->643), div. (0->0), fcn. (25342->12), ass. (0->191)
t159 = sin(qJ(4));
t163 = cos(qJ(4));
t160 = sin(qJ(3));
t240 = pkin(9) + pkin(10);
t207 = t240 * t160;
t164 = cos(qJ(3));
t243 = t164 * t240;
t224 = -t159 * t207 + t163 * t243;
t244 = t159 * t243 + t163 * t207;
t157 = cos(pkin(6));
t161 = sin(qJ(2));
t156 = sin(pkin(6));
t165 = cos(qJ(2));
t230 = t156 * t165;
t112 = pkin(8) * t230 + (pkin(1) * t161 + pkin(9)) * t157;
t113 = (-pkin(2) * t165 - pkin(9) * t161 - pkin(1)) * t156;
t226 = t164 * t112 + t160 * t113;
t162 = cos(qJ(6));
t154 = t162 ^ 2;
t158 = sin(qJ(6));
t223 = t158 ^ 2 - t154;
t191 = t223 * qJD(6);
t242 = qJD(3) + qJD(4);
t241 = 0.2e1 * t156;
t151 = qJD(6) * t162;
t155 = sin(pkin(12));
t233 = cos(pkin(12));
t231 = t156 * t161;
t125 = t157 * t160 + t164 * t231;
t192 = -t160 * t112 + t164 * t113;
t213 = pkin(3) * t230;
t77 = -t125 * pkin(10) + t192 - t213;
t124 = -t157 * t164 + t160 * t231;
t81 = -t124 * pkin(10) + t226;
t196 = -t159 * t81 + t163 * t77;
t89 = -t159 * t124 + t163 * t125;
t40 = -pkin(4) * t230 - t89 * qJ(5) + t196;
t80 = t163 * t81;
t236 = t159 * t77 + t80;
t88 = t163 * t124 + t159 * t125;
t45 = -t88 * qJ(5) + t236;
t25 = -t155 * t45 + t233 * t40;
t23 = pkin(5) * t230 - t25;
t22 = t23 * t151;
t222 = qJD(2) * t161;
t142 = t156 * t222;
t190 = pkin(3) * t142;
t117 = (pkin(2) * t161 - pkin(9) * t165) * t156 * qJD(2);
t221 = qJD(2) * t165;
t119 = -pkin(1) * t157 * t221 + pkin(8) * t142;
t67 = -t226 * qJD(3) + t164 * t117 + t160 * t119;
t200 = t156 * t221;
t99 = -qJD(3) * t124 + t164 * t200;
t51 = -t99 * pkin(10) + t190 + t67;
t219 = qJD(3) * t164;
t220 = qJD(3) * t160;
t66 = t112 * t220 - t113 * t219 - t160 * t117 + t164 * t119;
t98 = qJD(3) * t125 + t160 * t200;
t53 = -t98 * pkin(10) - t66;
t197 = -t159 * t53 + t163 * t51;
t20 = -t236 * qJD(4) + t197;
t58 = -qJD(4) * t88 - t159 * t98 + t163 * t99;
t15 = pkin(4) * t142 - t58 * qJ(5) - t89 * qJD(5) + t20;
t216 = qJD(4) * t163;
t217 = qJD(4) * t159;
t19 = -t159 * t51 - t163 * t53 - t77 * t216 + t217 * t81;
t59 = qJD(4) * t89 + t159 * t99 + t163 * t98;
t17 = -t59 * qJ(5) - t88 * qJD(5) - t19;
t6 = t15 * t233 - t155 * t17;
t5 = -pkin(5) * t142 - t6;
t239 = t5 * t158 + t22;
t238 = pkin(9) * t156;
t7 = t155 * t15 + t233 * t17;
t131 = t159 * t164 + t163 * t160;
t130 = t159 * t160 - t163 * t164;
t96 = t242 * t130;
t176 = t96 * qJ(5) - t131 * qJD(5);
t187 = qJD(4) * t243;
t188 = qJD(4) * t207;
t82 = qJD(3) * t244 + t159 * t187 + t163 * t188;
t97 = t242 * t131;
t60 = -t97 * qJ(5) - t130 * qJD(5) - t82;
t167 = t224 * qJD(3);
t83 = -qJD(4) * t224 - t167;
t37 = t155 * t60 - t233 * (t176 + t83);
t166 = -t131 * qJ(5) - t244;
t87 = -t130 * qJ(5) + t224;
t69 = t155 * t87 - t166 * t233;
t65 = t69 * t151;
t237 = t37 * t158 + t65;
t26 = t155 * t40 + t233 * t45;
t235 = pkin(3) * qJD(4);
t36 = -t155 * t59 + t233 * t58;
t72 = -t155 * t88 + t233 * t89;
t61 = t158 * t72 + t162 * t230;
t27 = -qJD(6) * t61 + t142 * t158 + t162 * t36;
t234 = t27 * t158;
t232 = t155 * t159;
t118 = (t163 * t233 - t232) * t235;
t229 = t158 * t118;
t228 = t158 * t162;
t227 = t162 * t118;
t148 = t163 * pkin(3) + pkin(4);
t121 = -pkin(3) * t232 + t148 * t233;
t114 = -pkin(5) - t121;
t195 = t233 * t159;
t116 = (t155 * t163 + t195) * t235;
t225 = t114 * t151 + t116 * t158;
t212 = pkin(1) * t222;
t120 = pkin(8) * t200 + t157 * t212;
t122 = pkin(3) * t195 + t155 * t148;
t218 = qJD(3) * t165;
t215 = qJD(6) * t158;
t214 = -0.2e1 * pkin(2) * qJD(3);
t150 = pkin(3) * t220;
t211 = pkin(3) * t217;
t210 = pkin(3) * t216;
t95 = -t155 * t130 + t131 * t233;
t206 = t95 * t215;
t205 = t95 * t151;
t204 = t158 * t230;
t21 = t23 * t215;
t64 = t69 * t215;
t149 = -t164 * pkin(3) - pkin(2);
t152 = t156 ^ 2;
t203 = t152 * t221;
t147 = -pkin(4) * t233 - pkin(5);
t202 = t147 * t215;
t201 = t147 * t151;
t199 = t158 * t151;
t90 = t97 * pkin(4) + t150;
t198 = -t5 * t162 + t21;
t194 = -0.4e1 * t95 * t228;
t193 = t114 * t215 - t116 * t162;
t186 = t161 * t203;
t84 = t98 * pkin(3) + t120;
t79 = -t155 * t97 - t233 * t96;
t185 = t23 * t79 + t5 * t95;
t35 = t155 * t58 + t233 * t59;
t71 = t155 * t89 + t233 * t88;
t184 = t35 * t95 + t71 * t79;
t183 = t37 * t95 + t69 * t79;
t78 = -t155 * t96 + t233 * t97;
t94 = t130 * t233 + t155 * t131;
t182 = t78 * t95 + t79 * t94;
t115 = pkin(11) + t122;
t181 = t114 * t95 - t115 * t94;
t180 = t116 * t95 - t118 * t94;
t146 = t155 * pkin(4) + pkin(11);
t179 = -t146 * t78 + t147 * t79;
t178 = t146 * t94 - t147 * t95;
t24 = -pkin(11) * t230 + t26;
t111 = pkin(8) * t231 + (-pkin(1) * t165 - pkin(2)) * t157;
t91 = t124 * pkin(3) + t111;
t73 = t88 * pkin(4) + t91;
t32 = t71 * pkin(5) - t72 * pkin(11) + t73;
t10 = t158 * t32 + t162 * t24;
t62 = t162 * t72 - t204;
t177 = -t158 * t62 - t162 * t61;
t110 = t130 * pkin(4) + t149;
t68 = t94 * pkin(5) - t95 * pkin(11) + t110;
t70 = t155 * t166 + t233 * t87;
t43 = t158 * t68 + t162 * t70;
t30 = t151 * t71 + t158 * t35;
t175 = -t162 * t35 + t215 * t71;
t56 = t151 * t94 + t158 * t78;
t174 = pkin(11) * t142 + t7;
t47 = t59 * pkin(4) + t84;
t173 = t160 * t218 + t164 * t222;
t172 = t160 * t222 - t164 * t218;
t171 = t78 * pkin(5) - t79 * pkin(11) + t90;
t169 = t114 * t79 - t115 * t78 + t180;
t168 = t35 * pkin(5) - t36 * pkin(11) + t47;
t141 = 0.2e1 * t199;
t134 = -0.2e1 * t186;
t129 = -0.2e1 * t191;
t92 = t95 ^ 2;
t55 = t162 * t78 - t215 * t94;
t48 = -t191 * t95 + t228 * t79;
t44 = qJD(6) * t194 - t223 * t79;
t42 = -t158 * t70 + t162 * t68;
t38 = t233 * t60 + (t159 * t188 - t163 * t187 - t167 + t176) * t155;
t28 = -qJD(6) * t204 - t142 * t162 + t151 * t72 + t158 * t36;
t18 = t151 * t62 + t234;
t13 = -qJD(6) * t43 - t158 * t38 + t162 * t171;
t12 = -t151 * t68 - t158 * t171 - t162 * t38 + t215 * t70;
t9 = -t158 * t24 + t162 * t32;
t8 = qJD(6) * t177 - t158 * t28 + t27 * t162;
t2 = -qJD(6) * t10 - t158 * t174 + t162 * t168;
t1 = -t151 * t32 - t158 * t168 - t162 * t174 + t24 * t215;
t3 = [0, 0, 0, 0.2e1 * t186, 0.2e1 * (-t161 ^ 2 + t165 ^ 2) * t152 * qJD(2), 0.2e1 * t157 * t200, -0.2e1 * t157 * t142, 0, -0.2e1 * t120 * t157 - 0.2e1 * t152 * t212, -0.2e1 * pkin(1) * t203 + 0.2e1 * t119 * t157, 0.2e1 * t125 * t99, -0.2e1 * t99 * t124 - 0.2e1 * t125 * t98 (t125 * t222 - t165 * t99) * t241 (-t124 * t222 + t165 * t98) * t241, t134, 0.2e1 * t111 * t98 + 0.2e1 * t120 * t124 + 0.2e1 * (-t67 * t165 + t192 * t222) * t156, 0.2e1 * t111 * t99 + 0.2e1 * t120 * t125 + 0.2e1 * (-t66 * t165 - t222 * t226) * t156, 0.2e1 * t89 * t58, -0.2e1 * t58 * t88 - 0.2e1 * t89 * t59 (-t165 * t58 + t222 * t89) * t241 (t165 * t59 - t222 * t88) * t241, t134, 0.2e1 * t91 * t59 + 0.2e1 * t84 * t88 + 0.2e1 * (-t20 * t165 + t196 * t222) * t156, 0.2e1 * t91 * t58 + 0.2e1 * t84 * t89 + 0.2e1 * (-t19 * t165 - t236 * t222) * t156, -0.2e1 * t25 * t36 - 0.2e1 * t26 * t35 - 0.2e1 * t6 * t72 - 0.2e1 * t7 * t71, 0.2e1 * t25 * t6 + 0.2e1 * t26 * t7 + 0.2e1 * t73 * t47, 0.2e1 * t62 * t27, -0.2e1 * t27 * t61 - 0.2e1 * t62 * t28, 0.2e1 * t27 * t71 + 0.2e1 * t62 * t35, -0.2e1 * t28 * t71 - 0.2e1 * t61 * t35, 0.2e1 * t71 * t35, 0.2e1 * t2 * t71 + 0.2e1 * t23 * t28 + 0.2e1 * t9 * t35 + 0.2e1 * t5 * t61, 0.2e1 * t1 * t71 - 0.2e1 * t10 * t35 + 0.2e1 * t23 * t27 + 0.2e1 * t5 * t62; 0, 0, 0, 0, 0, t200, -t142, 0, -t120, t119, t125 * t219 + t99 * t160, -t160 * t98 + t99 * t164 + (-t124 * t164 - t125 * t160) * qJD(3), t172 * t156, t173 * t156, 0, -pkin(2) * t98 + t111 * t220 - t120 * t164 - t172 * t238, -pkin(2) * t99 + t111 * t219 + t120 * t160 - t173 * t238, t58 * t131 - t89 * t96, -t58 * t130 - t131 * t59 + t96 * t88 - t89 * t97 (t131 * t222 + t165 * t96) * t156 (-t130 * t222 + t165 * t97) * t156, 0, t84 * t130 - t142 * t244 + t149 * t59 + t150 * t88 - t230 * t83 + t91 * t97, t89 * t150 + t84 * t131 + t149 * t58 - t91 * t96 + (-t82 * t165 - t222 * t224) * t156, -t25 * t79 - t26 * t78 - t70 * t35 + t69 * t36 + t37 * t72 - t38 * t71 - t6 * t95 - t7 * t94, t47 * t110 - t25 * t37 + t26 * t38 - t6 * t69 + t7 * t70 + t73 * t90, -t62 * t206 + (t27 * t95 + t62 * t79) * t162, t177 * t79 + (-t234 - t162 * t28 + (t158 * t61 - t162 * t62) * qJD(6)) * t95, t162 * t184 - t206 * t71 + t27 * t94 + t62 * t78, -t158 * t184 - t205 * t71 - t28 * t94 - t61 * t78, t35 * t94 + t71 * t78, t13 * t71 + t158 * t185 + t2 * t94 + t22 * t95 + t69 * t28 + t42 * t35 + t37 * t61 + t9 * t78, t1 * t94 - t10 * t78 + t12 * t71 + t162 * t185 - t21 * t95 + t69 * t27 - t43 * t35 + t37 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t160 * t219, 0.2e1 * (-t160 ^ 2 + t164 ^ 2) * qJD(3), 0, 0, 0, t160 * t214, t164 * t214, -0.2e1 * t131 * t96, 0.2e1 * t96 * t130 - 0.2e1 * t131 * t97, 0, 0, 0, 0.2e1 * t130 * t150 + 0.2e1 * t149 * t97, 0.2e1 * t131 * t150 - 0.2e1 * t149 * t96, -0.2e1 * t38 * t94 - 0.2e1 * t70 * t78 + 0.2e1 * t183, 0.2e1 * t110 * t90 + 0.2e1 * t69 * t37 + 0.2e1 * t70 * t38, 0.2e1 * t154 * t95 * t79 - 0.2e1 * t199 * t92, 0.2e1 * t92 * t191 + t194 * t79, 0.2e1 * t162 * t182 - 0.2e1 * t206 * t94, -0.2e1 * t158 * t182 - 0.2e1 * t205 * t94, 0.2e1 * t94 * t78, 0.2e1 * t13 * t94 + 0.2e1 * t158 * t183 + 0.2e1 * t42 * t78 + 0.2e1 * t65 * t95, 0.2e1 * t12 * t94 + 0.2e1 * t162 * t183 - 0.2e1 * t43 * t78 - 0.2e1 * t64 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -t98, t142, t67, t66, 0, 0, t58, -t59, t142, t163 * t190 + (-t80 + (-t77 + t213) * t159) * qJD(4) + t197 (-t159 * t222 + t165 * t216) * t156 * pkin(3) + t19, t116 * t72 - t118 * t71 - t121 * t36 - t122 * t35, -t25 * t116 + t26 * t118 + t6 * t121 + t7 * t122, t18, t8, t30, -t175, 0, t114 * t28 - t115 * t30 + t116 * t61 - t229 * t71 + t198, t114 * t27 + t115 * t175 + t116 * t62 - t227 * t71 + t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t220, 0, -pkin(9) * t219, pkin(9) * t220, 0, 0, -t96, -t97, 0, t83, t82, -t121 * t79 - t122 * t78 + t180, t69 * t116 + t70 * t118 - t37 * t121 + t38 * t122, t48, t44, t56, t55, 0, t64 + (qJD(6) * t181 - t37) * t162 + t169 * t158, t162 * t169 - t181 * t215 + t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t211, -0.2e1 * t210, 0, -0.2e1 * t121 * t116 + 0.2e1 * t122 * t118, t141, t129, 0, 0, 0, 0.2e1 * t193, 0.2e1 * t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, -t59, t142, t20, t19 (-t155 * t35 - t233 * t36) * pkin(4) (t155 * t7 + t233 * t6) * pkin(4), t18, t8, t30, -t175, 0, -t146 * t30 + t147 * t28 + t198, t146 * t175 + t147 * t27 + t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t97, 0, t83, t82 (-t155 * t78 - t233 * t79) * pkin(4) (t155 * t38 - t233 * t37) * pkin(4), t48, t44, t56, t55, 0, t64 + t179 * t158 + (-qJD(6) * t178 - t37) * t162, t162 * t179 + t178 * t215 + t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, -t210, 0 (-t116 * t233 + t118 * t155) * pkin(4), t141, t129, 0, 0, 0, t193 + t202, t201 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, t129, 0, 0, 0, 0.2e1 * t202, 0.2e1 * t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, 0, 0, 0, 0, -t175, -t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, 0, 0, 0, t55, -t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t28, t35, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162 * t79 - t206, -t158 * t79 - t205, t78, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, -t215, 0, -t115 * t151 - t229, t115 * t215 - t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, -t215, 0, -t146 * t151, t146 * t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
