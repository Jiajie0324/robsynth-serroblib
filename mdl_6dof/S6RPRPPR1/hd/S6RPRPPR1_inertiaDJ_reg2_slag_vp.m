% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPPR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPPR1_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:39:40
% EndTime: 2019-03-09 02:39:44
% DurationCPUTime: 1.99s
% Computational Cost: add. (3140->191), mult. (6790->350), div. (0->0), fcn. (6618->10), ass. (0->123)
t138 = cos(pkin(10));
t89 = sin(qJ(3));
t122 = t138 * t89;
t86 = sin(pkin(10));
t90 = cos(qJ(3));
t70 = t86 * t90 + t122;
t62 = t70 * qJD(3);
t121 = t138 * t90;
t137 = t89 * qJD(3);
t63 = qJD(3) * t121 - t137 * t86;
t152 = t86 * t89;
t68 = -t121 + t152;
t167 = -t62 * t70 - t63 * t68;
t169 = 0.2e1 * t167;
t163 = sin(qJ(6));
t124 = qJD(6) * t163;
t164 = cos(qJ(6));
t125 = qJD(6) * t164;
t85 = sin(pkin(11));
t87 = cos(pkin(11));
t64 = t124 * t85 - t125 * t87;
t130 = t164 * t85;
t71 = t163 * t87 + t130;
t20 = t71 * t63 - t64 * t70;
t39 = t71 * t70;
t144 = -t20 * t71 + t39 * t64;
t65 = t71 * qJD(6);
t69 = t163 * t85 - t164 * t87;
t19 = t63 * t69 + t70 * t65;
t40 = t69 * t70;
t148 = t19 * t69 + t40 * t65;
t168 = t148 - t144;
t50 = t68 * t62;
t47 = 0.2e1 * t50;
t166 = 0.2e1 * qJD(3);
t77 = pkin(3) * t86 + qJ(5);
t165 = pkin(8) + t77;
t162 = t39 * t20;
t161 = t40 * t19;
t80 = sin(pkin(9)) * pkin(1) + pkin(7);
t139 = qJ(4) + t80;
t119 = qJD(3) * t139;
t103 = t90 * qJD(4) - t119 * t89;
t104 = -t89 * qJD(4) - t119 * t90;
t35 = t103 * t86 - t104 * t138;
t67 = t139 * t90;
t43 = t122 * t139 + t67 * t86;
t160 = t43 * t35;
t159 = t69 * t65;
t158 = t70 * t63;
t157 = t71 * t64;
t83 = t85 ^ 2;
t156 = t83 * t63;
t44 = t138 * t67 - t139 * t152;
t155 = t85 * t44;
t57 = t85 * t62;
t154 = t85 * t63;
t153 = t85 * t70;
t59 = t87 * t62;
t151 = t87 * t63;
t150 = -pkin(8) - qJ(5);
t147 = -t19 * t71 + t40 * t64;
t145 = t20 * t69 + t39 * t65;
t82 = -cos(pkin(9)) * pkin(1) - pkin(2);
t73 = -t90 * pkin(3) + t82;
t105 = t68 * pkin(4) + t73;
t101 = -qJ(5) * t70 + t105;
t22 = t101 * t85 + t44 * t87;
t143 = t151 * t68 + t59 * t70;
t84 = t87 ^ 2;
t140 = t83 + t84;
t136 = t90 * qJD(3);
t135 = 0.2e1 * t158;
t134 = t85 * t151;
t133 = t82 * t166;
t132 = pkin(3) * t137;
t131 = t89 * t136;
t127 = t63 * t140;
t126 = qJD(5) * t163;
t123 = t164 * qJD(5);
t120 = t140 * qJD(5);
t118 = 0.2e1 * t120;
t115 = t165 * t163;
t81 = -pkin(3) * t138 - pkin(4);
t102 = t62 * pkin(4) - t70 * qJD(5) + t132;
t100 = -qJ(5) * t63 + t102;
t95 = t103 * t138 + t104 * t86;
t94 = t85 * t95;
t10 = t100 * t87 - t94;
t93 = t87 * t95;
t11 = t100 * t85 + t93;
t114 = t10 * t87 + t11 * t85;
t113 = -t10 * t85 + t11 * t87;
t21 = t101 * t87 - t155;
t112 = -t21 * t85 + t22 * t87;
t111 = t35 * t68 + t43 * t62;
t110 = t35 * t70 + t43 * t63;
t24 = t62 * t71 - t64 * t68;
t108 = t62 * t69 + t65 * t68;
t107 = t165 * t130;
t106 = -qJD(5) * t68 - t62 * t77 + t63 * t81;
t99 = t150 * t63 + t102;
t98 = t68 * pkin(5) - t155 + (t150 * t70 + t105) * t87;
t97 = t164 * t98;
t96 = t163 * t98;
t92 = t85 * t99 + t93;
t91 = t62 * pkin(5) + t87 * t99 - t94;
t72 = -pkin(5) * t87 + t81;
t66 = t165 * t87;
t58 = t84 * t63;
t42 = -t115 * t85 + t164 * t66;
t41 = -t163 * t66 - t107;
t38 = -t58 - t156;
t34 = pkin(5) * t153 + t43;
t33 = -t66 * t125 - t87 * t126 + (qJD(6) * t115 - t123) * t85;
t32 = qJD(6) * t107 - t123 * t87 + t124 * t66 + t126 * t85;
t23 = pkin(5) * t154 + t35;
t12 = -pkin(8) * t153 + t22;
t4 = t12 * t164 + t96;
t3 = -t12 * t163 + t97;
t2 = -qJD(6) * t96 - t12 * t125 - t163 * t92 + t164 * t91;
t1 = -qJD(6) * t97 + t12 * t124 - t163 * t91 - t164 * t92;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t131 (-t89 ^ 2 + t90 ^ 2) * t166, 0, -0.2e1 * t131, 0, 0, t89 * t133, t90 * t133, 0, 0, t135, t169, 0, t47, 0, 0, 0.2e1 * t132 * t68 + 0.2e1 * t62 * t73, 0.2e1 * t132 * t70 + 0.2e1 * t63 * t73, -0.2e1 * t44 * t62 - 0.2e1 * t68 * t95 + 0.2e1 * t110, 0.2e1 * t132 * t73 + 0.2e1 * t44 * t95 + 0.2e1 * t160, t84 * t135, -0.4e1 * t70 * t134, 0.2e1 * t143, t83 * t135, t85 * t169, t47, 0.2e1 * t10 * t68 + 0.2e1 * t110 * t85 + 0.2e1 * t21 * t62, -0.2e1 * t11 * t68 + 0.2e1 * t110 * t87 - 0.2e1 * t22 * t62, -0.2e1 * t114 * t70 + 0.2e1 * (-t21 * t87 - t22 * t85) * t63, 0.2e1 * t10 * t21 + 0.2e1 * t11 * t22 + 0.2e1 * t160, 0.2e1 * t161, 0.2e1 * t19 * t39 + 0.2e1 * t20 * t40, -0.2e1 * t19 * t68 - 0.2e1 * t40 * t62, 0.2e1 * t162, -0.2e1 * t20 * t68 - 0.2e1 * t39 * t62, t47, 0.2e1 * t2 * t68 + 0.2e1 * t20 * t34 + 0.2e1 * t23 * t39 + 0.2e1 * t3 * t62, 0.2e1 * t1 * t68 - 0.2e1 * t19 * t34 - 0.2e1 * t23 * t40 - 0.2e1 * t4 * t62, 0.2e1 * t1 * t39 + 0.2e1 * t19 * t3 + 0.2e1 * t2 * t40 - 0.2e1 * t20 * t4, -0.2e1 * t1 * t4 + 0.2e1 * t2 * t3 + 0.2e1 * t23 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44 * t63 + t70 * t95 + t111, 0, 0, 0, 0, 0, 0, 0, t167 * t87 + t143, 0, t112 * t63 + t113 * t70 + t111, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t40 - t19 * t4 - t2 * t39 - t20 * t3 + t23 * t68 + t34 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t158 + 0.2e1 * t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t127 * t70 + 0.2e1 * t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161 + 0.2e1 * t50 + 0.2e1 * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, 0, -t137, 0, -t80 * t136, t80 * t137, 0, 0, 0, 0, t63, 0, -t62, 0, -t35, -t95 (-t138 * t63 - t62 * t86) * pkin(3) (-t138 * t35 + t86 * t95) * pkin(3), t134, t58 - t156, t57, -t134, t59, 0, t106 * t85 - t35 * t87, t106 * t87 + t35 * t85, t113, qJD(5) * t112 + t113 * t77 + t35 * t81, t147, t144 + t148, t24, t145, -t108, 0, t20 * t72 + t23 * t69 + t33 * t68 + t34 * t65 + t41 * t62, -t19 * t72 + t23 * t71 + t32 * t68 - t34 * t64 - t42 * t62, t1 * t69 + t19 * t41 - t2 * t71 - t20 * t42 + t3 * t64 + t32 * t39 + t33 * t40 - t4 * t65, -t1 * t42 + t2 * t41 + t23 * t72 + t3 * t33 - t32 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, -t136, 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t63, 0 (-t138 * t62 + t63 * t86) * pkin(3), 0, 0, 0, 0, 0, 0, -t59, t57, -t38, t120 * t70 + t127 * t77 + t62 * t81, 0, 0, 0, 0, 0, 0, t108, t24, t168, -t19 * t42 - t20 * t41 + t32 * t40 - t33 * t39 + t62 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t77 * t118, -0.2e1 * t157, 0.2e1 * t64 * t69 - 0.2e1 * t65 * t71, 0, 0.2e1 * t159, 0, 0, 0.2e1 * t72 * t65, -0.2e1 * t72 * t64, 0.2e1 * t32 * t69 - 0.2e1 * t33 * t71 + 0.2e1 * t41 * t64 - 0.2e1 * t42 * t65, -0.2e1 * t32 * t42 + 0.2e1 * t33 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t63, 0, t132, 0, 0, 0, 0, 0, 0, t59, -t57, t38, t114, 0, 0, 0, 0, 0, 0, -t108, -t24, -t168, -t1 * t71 - t2 * t69 - t3 * t65 - t4 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145 + t147; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32 * t71 - t33 * t69 - t41 * t65 - t42 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t157 + 0.2e1 * t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t151, 0, t35, 0, 0, 0, 0, 0, 0, t20, -t19, 0, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t64, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, 0, -t20, t62, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, t19, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, -t65, 0, t33, t32, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, t64, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
