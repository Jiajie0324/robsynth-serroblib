% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPPR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPPR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:39:35
% EndTime: 2019-03-09 02:39:46
% DurationCPUTime: 4.61s
% Computational Cost: add. (6857->377), mult. (16636->508), div. (0->0), fcn. (12048->10), ass. (0->208)
t176 = sin(pkin(11));
t179 = cos(pkin(11));
t177 = sin(pkin(10));
t182 = sin(qJ(3));
t184 = cos(qJ(3));
t256 = cos(pkin(10));
t154 = t177 * t184 + t182 * t256;
t230 = qJD(1) * t154;
t118 = t176 * qJD(3) + t179 * t230;
t181 = sin(qJ(6));
t183 = cos(qJ(6));
t242 = t176 * t230;
t289 = t179 * qJD(3) - t242;
t195 = t183 * t289;
t67 = -t181 * t118 + t195;
t293 = t67 ^ 2;
t213 = t256 * t184;
t161 = qJD(1) * t213;
t228 = qJD(1) * t182;
t140 = t177 * t228 - t161;
t137 = qJD(6) + t140;
t292 = t67 * t137;
t66 = t183 * t118 + t181 * t289;
t291 = t66 ^ 2;
t221 = qJD(1) * qJD(3);
t215 = t182 * t221;
t160 = t177 * t215;
t132 = qJD(3) * t161 - t160;
t241 = t179 * t132;
t290 = t140 * t289 + t241;
t238 = t183 * t179;
t288 = -t181 * t176 + t238;
t279 = t288 * qJD(6);
t258 = -t140 * t288 - t279;
t155 = t183 * t176 + t181 * t179;
t147 = t155 * qJD(6);
t257 = t155 * t140 + t147;
t243 = t176 * t132;
t285 = t118 * t140 + t243;
t284 = t132 * t155;
t283 = t230 * t289;
t142 = t154 * qJD(3);
t131 = qJD(1) * t142;
t192 = -t177 * t182 + t213;
t145 = t192 * qJD(3);
t198 = t131 * t154 + t140 * t145;
t282 = t179 * t198;
t281 = t289 * t142;
t105 = t131 * t192;
t280 = t140 * t142 - t105;
t278 = -qJD(6) + t137;
t31 = t181 * (qJD(6) * t118 + t243) - qJD(6) * t195 - t132 * t238;
t277 = -t257 * t66 - t288 * t31;
t276 = t155 * t131 - t137 * t258;
t138 = t140 ^ 2;
t275 = -t176 * t131 - t179 * t138;
t167 = sin(pkin(9)) * pkin(1) + pkin(7);
t158 = t167 * qJD(1);
t211 = qJ(4) * qJD(1) + t158;
t224 = t182 * qJD(2);
t122 = t184 * t211 + t224;
t274 = t230 ^ 2;
t270 = t179 * pkin(8);
t112 = t177 * t122;
t171 = t184 * qJD(2);
t121 = -t182 * t211 + t171;
t70 = t121 * t256 - t112;
t219 = pkin(3) * t228;
t88 = pkin(4) * t230 + t140 * qJ(5) + t219;
t33 = -t176 * t70 + t179 * t88;
t21 = pkin(5) * t230 + t140 * t270 + t33;
t250 = t140 * t176;
t34 = t176 * t88 + t179 * t70;
t23 = pkin(8) * t250 + t34;
t164 = t177 * pkin(3) + qJ(5);
t267 = pkin(8) + t164;
t148 = t267 * t176;
t149 = t267 * t179;
t97 = -t181 * t148 + t183 * t149;
t273 = qJD(5) * t155 + qJD(6) * t97 - t181 * t23 + t183 * t21;
t96 = -t183 * t148 - t181 * t149;
t272 = qJD(5) * t288 + qJD(6) * t96 - t181 * t21 - t183 * t23;
t271 = pkin(3) * t182;
t170 = qJD(3) * t171;
t226 = qJD(3) * t182;
t127 = -t158 * t226 + t170;
t222 = t184 * qJD(4);
t102 = (-qJ(4) * t226 + t222) * qJD(1) + t127;
t223 = t182 * qJD(4);
t103 = -qJD(1) * t223 - t122 * qJD(3);
t46 = t177 * t102 - t256 * t103;
t235 = qJ(4) + t167;
t150 = t235 * t182;
t151 = t235 * t184;
t98 = t256 * t150 + t177 * t151;
t269 = t46 * t98;
t268 = t66 * t67;
t32 = qJD(6) * t66 + t284;
t39 = -t145 * t288 + t147 * t154;
t92 = t288 * t154;
t266 = -t92 * t32 - t39 * t67;
t40 = t145 * t155 + t279 * t154;
t91 = t155 * t154;
t265 = -t91 * t131 - t40 * t137;
t47 = t256 * t102 + t177 * t103;
t44 = qJD(3) * qJD(5) + t47;
t163 = pkin(3) * t215;
t53 = t131 * pkin(4) - t132 * qJ(5) - qJD(5) * t230 + t163;
t17 = t176 * t53 + t179 * t44;
t264 = t66 * t142 + t192 * t31;
t115 = qJD(3) * pkin(3) + t121;
t214 = t256 * t122;
t61 = t177 * t115 + t214;
t56 = qJD(3) * qJ(5) + t61;
t169 = -cos(pkin(9)) * pkin(1) - pkin(2);
t157 = -t184 * pkin(3) + t169;
t229 = qJD(1) * t157;
t139 = qJD(4) + t229;
t79 = t140 * pkin(4) - qJ(5) * t230 + t139;
t27 = t176 * t79 + t179 * t56;
t220 = pkin(3) * t226;
t68 = t142 * pkin(4) - t145 * qJ(5) - t154 * qJD(5) + t220;
t212 = qJD(3) * t235;
t126 = -t182 * t212 + t222;
t190 = -t184 * t212 - t223;
t78 = t126 * t256 + t177 * t190;
t30 = t176 * t68 + t179 * t78;
t90 = -pkin(4) * t192 - t154 * qJ(5) + t157;
t99 = -t177 * t150 + t151 * t256;
t42 = t176 * t90 + t179 * t99;
t263 = t230 * t67;
t261 = t46 * t192;
t260 = t66 * t230;
t259 = t118 * t142 - t192 * t241;
t255 = t118 * t230;
t254 = t118 * t176;
t253 = t132 * t154;
t251 = t140 * t230;
t249 = t145 * t176;
t248 = t145 * t179;
t247 = t192 * t132;
t246 = t154 * t176;
t239 = t182 * t158;
t185 = qJD(3) ^ 2;
t237 = t185 * t182;
t236 = t185 * t184;
t232 = t179 * t131 - t176 * t138;
t231 = t182 ^ 2 - t184 ^ 2;
t159 = qJD(1) * t169;
t227 = qJD(3) * t145;
t186 = qJD(1) ^ 2;
t218 = t182 * t186 * t184;
t16 = -t176 * t44 + t179 * t53;
t26 = -t176 * t56 + t179 * t79;
t29 = -t176 * t78 + t179 * t68;
t41 = -t176 * t99 + t179 * t90;
t69 = t177 * t121 + t214;
t77 = t177 * t126 - t256 * t190;
t210 = 0.2e1 * t230;
t208 = -t155 * t32 - t258 * t67;
t207 = t184 * t215;
t168 = -pkin(3) * t256 - pkin(4);
t37 = pkin(5) * t243 + t46;
t206 = t131 * t288 - t137 * t257;
t205 = -t31 * t91 + t40 * t66;
t12 = t131 * pkin(5) - pkin(8) * t241 + t16;
t13 = -pkin(8) * t243 + t17;
t204 = t181 * t12 + t183 * t13;
t203 = -t92 * t131 + t39 * t137;
t202 = t98 * t132 + t46 * t154;
t14 = t140 * pkin(5) - t118 * pkin(8) + t26;
t19 = pkin(8) * t289 + t27;
t5 = t183 * t14 - t181 * t19;
t6 = t181 * t14 + t183 * t19;
t201 = t142 * t67 + t192 * t32;
t200 = -t16 * t176 + t17 * t179;
t199 = -t176 * t26 + t179 * t27;
t28 = -pkin(5) * t192 - t154 * t270 + t41;
t36 = -pkin(8) * t246 + t42;
t9 = -t181 * t36 + t183 * t28;
t10 = t181 * t28 + t183 * t36;
t60 = t115 * t256 - t112;
t197 = -t142 * t230 + t247;
t196 = t179 * t289;
t134 = t184 * t158 + t224;
t193 = 0.2e1 * qJD(3) * t159;
t55 = -qJD(3) * pkin(4) + qJD(5) - t60;
t191 = t55 * t145 + t202;
t189 = -t164 * t131 + t168 * t132 + (-qJD(5) + t55) * t140;
t2 = -qJD(6) * t6 + t183 * t12 - t181 * t13;
t128 = t134 * qJD(3);
t133 = t171 - t239;
t187 = t127 * t184 + t128 * t182 + (-t133 * t184 - t134 * t182) * qJD(3);
t173 = t179 ^ 2;
t172 = t176 ^ 2;
t156 = -t179 * pkin(5) + t168;
t136 = t142 * qJD(3);
t84 = t145 * t196;
t76 = pkin(5) * t246 + t98;
t50 = pkin(5) * t249 + t77;
t45 = -pkin(5) * t250 + t69;
t38 = -pkin(5) * t289 + t55;
t22 = -pkin(8) * t249 + t30;
t15 = t142 * pkin(5) - pkin(8) * t248 + t29;
t4 = -qJD(6) * t10 + t183 * t15 - t181 * t22;
t3 = qJD(6) * t9 + t181 * t15 + t183 * t22;
t1 = qJD(6) * t5 + t204;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t207, -0.2e1 * t231 * t221, t236, -0.2e1 * t207, -t237, 0, -t167 * t236 + t182 * t193, t167 * t237 + t184 * t193, t187, t187 * t167, t145 * t230 + t253, t197 - t198, t227, t280, -t136, 0, t157 * t131 + t139 * t142 + (-t77 + (-qJD(1) * t192 + t140) * t271) * qJD(3), t157 * t132 + t139 * t145 + (t210 * t271 - t78) * qJD(3), -t99 * t131 - t78 * t140 - t61 * t142 - t60 * t145 + t192 * t47 + t230 * t77 + t202, t269 + t47 * t99 - t60 * t77 + t61 * t78 + (t139 + t229) * t220, t118 * t248 + t173 * t253, t84 + (-t118 * t145 - 0.2e1 * t154 * t241) * t176, t259 + t282, t172 * t253 - t249 * t289, t281 + (-t198 + t247) * t176, t280, t41 * t131 + t29 * t140 + t26 * t142 - t16 * t192 + t176 * t191 - t289 * t77, t77 * t118 - t42 * t131 - t30 * t140 - t27 * t142 + t17 * t192 + t179 * t191, -t29 * t118 - t30 * t242 + (t30 * qJD(3) - t41 * t132 - t26 * t145 - t16 * t154) * t179 + (-t42 * t132 - t27 * t145 - t17 * t154) * t176, t16 * t41 + t17 * t42 + t26 * t29 + t27 * t30 + t55 * t77 + t269, -t31 * t92 - t66 * t39, -t205 + t266, -t203 + t264, t32 * t91 - t40 * t67, t201 + t265, t137 * t142 - t105, t9 * t131 + t4 * t137 + t5 * t142 - t192 * t2 + t76 * t32 + t37 * t91 + t38 * t40 - t50 * t67, t1 * t192 - t10 * t131 - t3 * t137 - t6 * t142 - t76 * t31 + t37 * t92 - t38 * t39 + t50 * t66, -t1 * t91 - t10 * t32 - t2 * t92 + t3 * t67 + t9 * t31 + t5 * t39 - t4 * t66 - t6 * t40, t1 * t10 + t2 * t9 + t3 * t6 + t37 * t76 + t38 * t50 + t4 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, -t236, 0, t127 * t182 - t128 * t184 + (-t133 * t182 + t134 * t184) * qJD(3), 0, 0, 0, 0, 0, 0, -t136, -t227, -t197 - t198, -t60 * t142 + t61 * t145 + t47 * t154 - t261, 0, 0, 0, 0, 0, 0, -t281 + (-t198 - t247) * t176, t259 - t282, t118 * t249 + t84, t55 * t142 + t145 * t199 + t154 * t200 - t261, 0, 0, 0, 0, 0, 0, -t201 + t265, t203 + t264, t205 + t266, t1 * t92 + t38 * t142 - t192 * t37 - t2 * t91 - t6 * t39 - t5 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, t231 * t186, 0, t218, 0, 0, -t159 * t228, -t159 * t184 * qJD(1) - t170 + (t133 + t239) * qJD(3), 0, 0, t251, -t138 + t274, -t160 + (t161 + t140) * qJD(3), -t251, 0, 0, t69 * qJD(3) - t139 * t230 - t140 * t219 - t46, t70 * qJD(3) + t139 * t140 - t219 * t230 - t47 (t61 - t69) * t230 + (-t60 + t70) * t140 + (-t131 * t177 - t132 * t256) * pkin(3), t60 * t69 - t61 * t70 + (-t139 * t228 + t177 * t47 - t256 * t46) * pkin(3), t285 * t179 (t196 - t254) * t140 + (-t172 + t173) * t132, -t255 - t275, -t290 * t176, t232 - t283, -t251, -t33 * t140 + t176 * t189 - t46 * t179 - t230 * t26 + t289 * t69, -t69 * t118 + t34 * t140 + t46 * t176 + t179 * t189 + t230 * t27, t33 * t118 + t34 * t242 + (-qJD(5) * t242 - t26 * t140 + t17 + (t179 * qJD(5) - t34) * qJD(3)) * t179 + (qJD(5) * t118 - t27 * t140 - t16) * t176, qJD(5) * t199 + t164 * t200 + t46 * t168 - t26 * t33 - t27 * t34 - t55 * t69, -t31 * t155 - t258 * t66, t208 + t277, -t260 + t276, -t257 * t67 - t288 * t32, t206 - t263, -t137 * t230, t96 * t131 - t273 * t137 + t156 * t32 - t230 * t5 + t257 * t38 - t288 * t37 + t45 * t67, -t97 * t131 - t272 * t137 + t37 * t155 - t156 * t31 + t230 * t6 - t258 * t38 - t45 * t66, t1 * t288 - t2 * t155 - t257 * t6 + t258 * t5 + t272 * t67 + t273 * t66 + t96 * t31 - t97 * t32, t1 * t97 + t37 * t156 + t2 * t96 + t272 * t6 - t273 * t5 - t38 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210 * qJD(3), -t160 + (t161 - t140) * qJD(3), -t138 - t274, t61 * t140 + t230 * t60 + t163, 0, 0, 0, 0, 0, 0, t232 + t283, -t255 + t275 (t196 + t254) * t140 + (-t172 - t173) * t132, t140 * t199 + t16 * t179 + t17 * t176 - t230 * t55, 0, 0, 0, 0, 0, 0, t206 + t263, -t260 - t276, t208 - t277, t1 * t155 + t2 * t288 - t230 * t38 - t257 * t5 - t258 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t290, -t118 ^ 2 - t289 ^ 2, t118 * t26 - t27 * t289 + t46, 0, 0, 0, 0, 0, 0, t66 * t137 + t32, -t31 + t292, -t291 - t293, t5 * t66 - t6 * t67 + t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t291 - t293, -t31 - t292, t268, t278 * t66 - t284, t131, t6 * t137 - t38 * t66 + t2, t278 * t5 - t38 * t67 - t204, 0, 0;];
tauc_reg  = t7;
