% Calculate vector of inverse dynamics joint torques for
% S6RRRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,theta5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRRPP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRRPP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 20:58:30
% EndTime: 2019-03-09 21:02:07
% DurationCPUTime: 193.64s
% Computational Cost: add. (85085->2030), mult. (108302->2484), div. (0->0), fcn. (102193->10), ass. (0->898)
t1683 = Icges(6,1) + Icges(7,1);
t1700 = Icges(7,4) + Icges(6,5);
t1699 = Icges(6,6) - Icges(7,6);
t951 = qJ(3) + qJ(4);
t928 = pkin(10) + t951;
t916 = sin(t928);
t1710 = (Icges(6,4) - Icges(7,5)) * t916;
t1682 = Icges(6,2) + Icges(7,3);
t917 = cos(t928);
t1709 = t1683 * t917 - t1710;
t1708 = Icges(7,2) + Icges(5,3) + Icges(6,3);
t931 = sin(t951);
t932 = cos(t951);
t1707 = Icges(5,5) * t932 - Icges(5,6) * t931 - t1699 * t916 + t1700 * t917;
t1484 = Icges(6,4) * t917;
t1143 = -Icges(6,2) * t916 + t1484;
t953 = sin(qJ(2));
t956 = cos(qJ(2));
t1706 = t1143 * t953 - t1699 * t956;
t1429 = t916 * t953;
t1426 = t917 * t953;
t830 = Icges(7,5) * t1426;
t1689 = Icges(7,3) * t1429 - t1706 + t830;
t1476 = Icges(7,5) * t917;
t1138 = Icges(7,3) * t916 + t1476;
t1645 = (t1138 - t1143) * t956 - t1699 * t953;
t1681 = -t1700 * t956 + t1709 * t953;
t1644 = t1700 * t953 + t1709 * t956;
t1705 = (t1682 * t917 + t1710) * t953;
t1704 = t1707 * t956 + t1708 * t953;
t1703 = (-Icges(5,5) * t931 - Icges(5,6) * t932 - t1699 * t917 - t1700 * t916) * t953;
t950 = qJD(3) + qJD(4);
t1203 = t950 * t956;
t1569 = qJD(1) - t1203;
t957 = cos(qJ(1));
t1419 = t953 * t957;
t1674 = t1707 * t953 - t1708 * t956;
t1487 = Icges(5,4) * t932;
t1144 = -Icges(5,2) * t931 + t1487;
t664 = -Icges(5,6) * t956 + t1144 * t953;
t1488 = Icges(5,4) * t931;
t1149 = Icges(5,1) * t932 - t1488;
t666 = -Icges(5,5) * t956 + t1149 * t953;
t1410 = t957 * t916;
t954 = sin(qJ(1));
t1417 = t954 * t917;
t674 = t1410 * t956 - t1417;
t1412 = t956 * t957;
t675 = t917 * t1412 + t916 * t954;
t1409 = t957 * t931;
t727 = -t956 * t1409 + t932 * t954;
t728 = t1412 * t932 + t931 * t954;
t1604 = t1419 * t1674 + t1681 * t675 + t1689 * t674 + t664 * t727 + t666 * t728;
t368 = Icges(6,5) * t675 - Icges(6,6) * t674 + Icges(6,3) * t1419;
t371 = Icges(7,4) * t675 + Icges(7,2) * t1419 + Icges(7,6) * t674;
t410 = Icges(5,5) * t728 + Icges(5,6) * t727 + Icges(5,3) * t1419;
t1675 = t368 + t371 + t410;
t1478 = Icges(7,5) * t674;
t377 = Icges(7,1) * t675 + Icges(7,4) * t1419 + t1478;
t639 = Icges(6,4) * t674;
t380 = Icges(6,1) * t675 + Icges(6,5) * t1419 - t639;
t1690 = t377 + t380;
t636 = Icges(7,5) * t675;
t365 = Icges(7,6) * t1419 + Icges(7,3) * t674 + t636;
t1486 = Icges(6,4) * t675;
t374 = -Icges(6,2) * t674 + Icges(6,6) * t1419 + t1486;
t1691 = t365 - t374;
t1489 = Icges(5,4) * t728;
t413 = Icges(5,2) * t727 + Icges(5,6) * t1419 + t1489;
t692 = Icges(5,4) * t727;
t416 = Icges(5,1) * t728 + Icges(5,5) * t1419 + t692;
t1607 = t1419 * t1675 + t1690 * t675 + t1691 * t674 + t727 * t413 + t728 * t416;
t1420 = t953 * t954;
t1415 = t954 * t956;
t672 = t1415 * t916 + t917 * t957;
t673 = t1415 * t917 - t1410;
t366 = Icges(6,5) * t673 - Icges(6,6) * t672 + Icges(6,3) * t1420;
t369 = Icges(7,4) * t673 + Icges(7,2) * t1420 + Icges(7,6) * t672;
t725 = t1415 * t931 + t932 * t957;
t726 = t1415 * t932 - t1409;
t408 = Icges(5,5) * t726 - Icges(5,6) * t725 + Icges(5,3) * t1420;
t1602 = t366 + t369 + t408;
t634 = Icges(7,5) * t672;
t376 = -Icges(7,1) * t673 - Icges(7,4) * t1420 - t634;
t637 = Icges(6,4) * t672;
t378 = Icges(6,1) * t673 + Icges(6,5) * t1420 - t637;
t1651 = t376 - t378;
t635 = Icges(7,5) * t673;
t363 = Icges(7,6) * t1420 + Icges(7,3) * t672 + t635;
t638 = Icges(6,4) * t673;
t373 = Icges(6,2) * t672 - Icges(6,6) * t1420 - t638;
t1692 = t363 + t373;
t691 = Icges(5,4) * t726;
t412 = Icges(5,2) * t725 - Icges(5,6) * t1420 - t691;
t690 = Icges(5,4) * t725;
t414 = Icges(5,1) * t726 + Icges(5,5) * t1420 - t690;
t1608 = t1419 * t1602 - t1651 * t675 + t1692 * t674 - t412 * t727 + t728 * t414;
t1312 = qJD(4) * t953;
t1313 = qJD(3) * t957;
t930 = qJD(2) * t954;
t799 = t953 * t1313 + t930;
t703 = t1312 * t957 + t799;
t1315 = qJD(3) * t953;
t1316 = qJD(2) * t957;
t800 = -t954 * t1315 + t1316;
t704 = -t1312 * t954 + t800;
t1614 = t1569 * t1604 + t1607 * t703 - t1608 * t704;
t1605 = t1420 * t1674 + t1681 * t673 + t1689 * t672 - t664 * t725 + t666 * t726;
t1609 = t1420 * t1675 + t1690 * t673 + t1691 * t672 - t725 * t413 + t726 * t416;
t1610 = t1420 * t1602 - t1651 * t673 + t1692 * t672 + t412 * t725 + t414 * t726;
t1615 = t1569 * t1605 + t1609 * t703 - t1610 * t704;
t1248 = t956 * t1316;
t1323 = qJD(1) * t954;
t1256 = t953 * t1323;
t1033 = t1248 - t1256;
t1250 = t953 * t1316;
t307 = qJD(1) * t672 + t1250 * t916 - t675 * t950;
t1088 = t957 * t1569;
t1322 = qJD(1) * t956;
t1204 = -t950 + t1322;
t1558 = t1204 * t954 + t1250;
t308 = t1088 * t916 - t1558 * t917;
t177 = Icges(7,5) * t308 + Icges(7,6) * t1033 - Icges(7,3) * t307;
t183 = Icges(6,4) * t308 + Icges(6,2) * t307 + Icges(6,6) * t1033;
t1698 = t177 - t183;
t1317 = qJD(2) * t956;
t1249 = t954 * t1317;
t1321 = qJD(1) * t957;
t1034 = t953 * t1321 + t1249;
t1251 = t953 * t930;
t309 = -t916 * t1251 - t950 * t1410 - t917 * t1323 + (t1321 * t916 + t1417 * t950) * t956;
t1010 = t1204 * t957 - t1251;
t1089 = t954 * t1569;
t310 = t1010 * t917 + t1089 * t916;
t178 = Icges(7,5) * t310 + Icges(7,6) * t1034 + Icges(7,3) * t309;
t184 = Icges(6,4) * t310 - Icges(6,2) * t309 + Icges(6,6) * t1034;
t1697 = t178 - t184;
t185 = Icges(7,1) * t308 + Icges(7,4) * t1033 - Icges(7,5) * t307;
t187 = Icges(6,1) * t308 + Icges(6,4) * t307 + Icges(6,5) * t1033;
t1696 = t185 + t187;
t186 = Icges(7,1) * t310 + Icges(7,4) * t1034 + Icges(7,5) * t309;
t188 = Icges(6,1) * t310 - Icges(6,4) * t309 + Icges(6,5) * t1034;
t1695 = t186 + t188;
t1694 = qJD(2) * t1645 + t1705 * t950;
t681 = (-Icges(6,1) * t916 - t1484) * t953;
t836 = t950 * t953;
t1693 = (-Icges(7,1) * t916 + t1476) * t836 + t681 * t950 + t1644 * qJD(2);
t179 = Icges(6,5) * t308 + Icges(6,6) * t307 + Icges(6,3) * t1033;
t181 = Icges(7,4) * t308 + Icges(7,2) * t1033 - Icges(7,6) * t307;
t338 = t932 * t1088 + t1558 * t931;
t339 = t1088 * t931 - t1558 * t932;
t201 = Icges(5,5) * t339 + Icges(5,6) * t338 + Icges(5,3) * t1033;
t1688 = t179 + t181 + t201;
t180 = Icges(6,5) * t310 - Icges(6,6) * t309 + Icges(6,3) * t1034;
t182 = Icges(7,4) * t310 + Icges(7,2) * t1034 + Icges(7,6) * t309;
t340 = -t1010 * t931 + t932 * t1089;
t341 = t1010 * t932 + t1089 * t931;
t202 = Icges(5,5) * t341 + Icges(5,6) * t340 + Icges(5,3) * t1034;
t1687 = t180 + t182 + t202;
t1686 = qJD(2) * t1704 + t1703 * t950;
t1685 = t1681 * t917 + t1689 * t916 - t664 * t931 + t666 * t932;
t1669 = rSges(7,1) + pkin(5);
t1684 = rSges(7,3) + qJ(6);
t1667 = t1669 * t673 + t1684 * t672;
t1390 = rSges(7,2) * t1420 + t1667;
t1680 = -t1138 * t953 + t1706;
t1035 = -t1322 * t954 - t1250;
t876 = pkin(8) * t1248;
t561 = pkin(2) * t1035 - pkin(8) * t1256 + t876;
t874 = pkin(2) * t1251;
t915 = pkin(2) * t1412;
t562 = pkin(8) * t1034 + qJD(1) * t915 - t874;
t911 = pkin(8) * t1415;
t782 = -pkin(2) * t1420 + t911;
t943 = t953 * pkin(8);
t946 = t956 * pkin(2);
t1582 = t946 + t943;
t783 = t1582 * t954;
t914 = pkin(8) * t1412;
t784 = -pkin(2) * t1419 + t914;
t1679 = -t784 * t1316 + t783 * t1321 + t957 * t561 + t954 * t562 - t782 * t930;
t204 = Icges(5,4) * t341 + Icges(5,2) * t340 + Icges(5,6) * t1034;
t206 = Icges(5,1) * t341 + Icges(5,4) * t340 + Icges(5,5) * t1034;
t1621 = t1033 * t1602 + t1419 * t1687 - t1651 * t308 - t1692 * t307 + t1695 * t675 + t1697 * t674 + t204 * t727 + t206 * t728 - t338 * t412 + t339 * t414;
t203 = Icges(5,4) * t339 + Icges(5,2) * t338 + Icges(5,6) * t1033;
t205 = Icges(5,1) * t339 + Icges(5,4) * t338 + Icges(5,5) * t1033;
t1620 = t1033 * t1675 + t1419 * t1688 + t1690 * t308 - t1691 * t307 + t1696 * t675 + t1698 * t674 + t203 * t727 + t205 * t728 + t338 * t413 + t339 * t416;
t1619 = t1034 * t1602 + t1420 * t1687 - t1651 * t310 + t1692 * t309 + t1695 * t673 + t1697 * t672 - t204 * t725 + t206 * t726 - t340 * t412 + t341 * t414;
t1618 = t1034 * t1675 + t1420 * t1688 + t1690 * t310 + t1691 * t309 + t1696 * t673 + t1698 * t672 - t203 * t725 + t205 * t726 + t340 * t413 + t341 * t416;
t665 = Icges(5,6) * t953 + t1144 * t956;
t737 = (-Icges(5,2) * t932 - t1488) * t953;
t401 = qJD(2) * t665 + t737 * t950;
t667 = Icges(5,5) * t953 + t1149 * t956;
t738 = (-Icges(5,1) * t931 - t1487) * t953;
t402 = qJD(2) * t667 + t738 * t950;
t1678 = t1034 * t1674 + t1420 * t1686 + t1681 * t310 + t1689 * t309 + t1693 * t673 + t1694 * t672 + t340 * t664 + t341 * t666 - t401 * t725 + t402 * t726;
t1611 = t1033 * t1674 + t1419 * t1686 + t1681 * t308 - t1689 * t307 + t1693 * t675 + t1694 * t674 + t338 * t664 + t339 * t666 + t401 * t727 + t402 * t728;
t1677 = (qJD(2) * t1685 - t1686) * t956 + ((-t664 * t950 + t402) * t932 + (-t666 * t950 - t401) * t931 + (t1689 * t950 + t1693) * t917 + (-t1681 * t950 + t1694) * t916 + t1674 * qJD(2)) * t953;
t1109 = t363 * t916 - t376 * t917;
t159 = t1109 * t953 - t369 * t956;
t1107 = t373 * t916 + t378 * t917;
t161 = t1107 * t953 - t366 * t956;
t1105 = t412 * t931 + t414 * t932;
t163 = t1105 * t953 - t408 * t956;
t1606 = t159 + t161 + t163;
t1108 = t365 * t916 + t377 * t917;
t160 = t1108 * t953 - t371 * t956;
t1106 = -t374 * t916 + t380 * t917;
t162 = t1106 * t953 - t368 * t956;
t1104 = -t413 * t931 + t416 * t932;
t164 = t1104 * t953 - t410 * t956;
t1676 = t160 + t162 + t164;
t1603 = -t1674 * t956 + t1685 * t953;
t1673 = (-Icges(5,5) * t725 - Icges(5,6) * t726 - t1699 * t673 - t1700 * t672) * t704 + (-Icges(5,5) * t727 + Icges(5,6) * t728 + t1699 * t675 + t1700 * t674) * t703 - t1703 * t1569;
t1672 = (t1674 * t954 + t1105 + t1107 + t1109) * t704 + (-t1674 * t957 - t1104 - t1106 - t1108) * t703 + (-t1685 + t1704) * t1569;
t955 = cos(qJ(3));
t1413 = t955 * t957;
t952 = sin(qJ(3));
t765 = t1415 * t952 + t1413;
t1408 = t957 * t952;
t1414 = t955 * t956;
t766 = t1414 * t954 - t1408;
t1584 = -t766 * rSges(4,1) + t765 * rSges(4,2);
t501 = rSges(4,3) * t1420 - t1584;
t1506 = rSges(4,2) * t952;
t1509 = rSges(4,1) * t955;
t1169 = -t1506 + t1509;
t721 = -rSges(4,3) * t956 + t1169 * t953;
t1314 = qJD(3) * t956;
t908 = qJD(1) - t1314;
t1671 = t501 * t908 + t721 * t800;
t1585 = -t726 * rSges(5,1) + t725 * rSges(5,2);
t417 = rSges(5,3) * t1420 - t1585;
t1508 = rSges(5,1) * t932;
t1166 = -rSges(5,2) * t931 + t1508;
t668 = -rSges(5,3) * t956 + t1166 * t953;
t1670 = -t1569 * t417 - t668 * t704;
t1335 = t1684 * t1426;
t1245 = t956 * t1313;
t1246 = t954 * t1314;
t1504 = pkin(3) * qJD(3);
t1288 = t955 * t1504;
t958 = -pkin(9) - pkin(8);
t1418 = t953 * t958;
t1625 = qJD(1) * t1418 + t1288;
t912 = pkin(3) * t1408;
t1259 = qJD(1) * t912 + t1625 * t954;
t1289 = t952 * t1504;
t945 = t955 * pkin(3);
t924 = t945 + pkin(2);
t1513 = pkin(2) - t924;
t242 = -t876 + (pkin(8) * t1323 + t1316 * t1513) * t953 + ((-qJD(2) * t958 - t1289) * t957 + t1513 * t1323) * t956 + t1259;
t1202 = t956 * t1289;
t1153 = t954 * t1202 + t958 * t1249 + t924 * t1251 + t1625 * t957;
t1238 = t1513 * t956;
t1421 = t952 * t954;
t909 = pkin(3) * t1421;
t243 = -pkin(8) * t1249 + t874 + (t909 + (-t1238 - t943) * t957) * qJD(1) - t1153;
t858 = t956 * t924;
t1635 = t1418 - t858;
t1258 = t1635 * t954 + t912;
t507 = t783 + t1258;
t1338 = -t924 * t1412 - t909;
t1407 = t957 * t958;
t1083 = -t1407 * t953 - t1338;
t785 = pkin(8) * t1419 + t915;
t508 = t1083 - t785;
t1411 = t956 * t958;
t1578 = t1513 * t953;
t1045 = -t1411 + t1578;
t543 = t1045 * t954 - t911;
t544 = t1045 * t957 - t914;
t1668 = t1246 * t508 + t957 * t242 + t954 * t243 - t799 * t543 - t544 * t800 + t1679 + (t1245 - t1321) * t507;
t630 = qJD(6) * t672;
t1666 = -t1669 * t310 - t1684 * t309 - t630;
t1044 = -qJD(1) * t782 - t1316 * t1582;
t1511 = pkin(8) + t958;
t640 = t1511 * t956 - t1578;
t594 = t640 * t1323;
t641 = -t1582 - t1635;
t854 = pkin(2) * t953 - pkin(8) * t956;
t791 = t854 * t1323;
t1665 = -t640 * t1246 - t1315 * t507 + t908 * t543 + t800 * t641 - t1044 + t594 + t791;
t938 = t953 * rSges(5,3);
t669 = t1166 * t956 + t938;
t1230 = t930 / 0.2e1;
t1233 = t1321 / 0.2e1;
t1664 = t956 * t1230 + t953 * t1233;
t1228 = t1316 / 0.2e1;
t1663 = t956 * t1228 - t1256 / 0.2e1;
t1422 = t952 * t953;
t1301 = pkin(3) * t1422;
t524 = -t953 * t1289 + (-t1511 * t953 - t1238) * qJD(2);
t748 = t765 * pkin(3);
t1662 = t1034 * t640 - t1301 * t800 + t524 * t1420 + t956 * t243 - t748 * t908;
t1163 = t673 * rSges(6,1) - t672 * rSges(6,2);
t388 = -rSges(6,3) * t1420 - t1163;
t1158 = rSges(7,1) * t917 + rSges(7,3) * t916;
t1624 = (-pkin(5) * t917 - qJ(6) * t916 - t1158) * t953;
t491 = Icges(4,5) * t766 - Icges(4,6) * t765 + Icges(4,3) * t1420;
t746 = Icges(4,4) * t766;
t495 = Icges(4,2) * t765 - Icges(4,6) * t1420 - t746;
t745 = Icges(4,4) * t765;
t497 = Icges(4,1) * t766 + Icges(4,5) * t1420 - t745;
t167 = t1420 * t491 + t495 * t765 + t497 * t766;
t767 = -t956 * t1408 + t954 * t955;
t768 = t1412 * t955 + t1421;
t493 = Icges(4,5) * t768 + Icges(4,6) * t767 + Icges(4,3) * t1419;
t1492 = Icges(4,4) * t768;
t496 = Icges(4,2) * t767 + Icges(4,6) * t1419 + t1492;
t747 = Icges(4,4) * t767;
t499 = Icges(4,1) * t768 + Icges(4,5) * t1419 + t747;
t168 = t493 * t1420 - t765 * t496 + t766 * t499;
t1141 = Icges(4,5) * t955 - Icges(4,6) * t952;
t705 = -Icges(4,3) * t956 + t1141 * t953;
t1490 = Icges(4,4) * t955;
t1145 = -Icges(4,2) * t952 + t1490;
t709 = -Icges(4,6) * t956 + t1145 * t953;
t1491 = Icges(4,4) * t952;
t1150 = Icges(4,1) * t955 - t1491;
t713 = -Icges(4,5) * t956 + t1150 * t953;
t249 = t1420 * t705 - t709 * t765 + t713 * t766;
t111 = -t167 * t800 + t168 * t799 + t249 * t908;
t169 = t491 * t1419 - t495 * t767 + t768 * t497;
t170 = t493 * t1419 + t767 * t496 + t768 * t499;
t250 = t1419 * t705 + t709 * t767 + t713 * t768;
t112 = -t169 * t800 + t170 * t799 + t250 * t908;
t1102 = t495 * t952 + t497 * t955;
t199 = t1102 * t953 - t491 * t956;
t1358 = -rSges(7,2) * t956 - t1624;
t820 = pkin(4) * t932 + t945;
t807 = pkin(2) + t820;
t1339 = t807 - t924;
t1218 = t1339 * t953;
t949 = -qJ(5) + t958;
t1326 = t949 - t958;
t525 = t1326 * t956 + t1218;
t1262 = -t525 - t1358;
t1036 = t1317 * t916 + t836 * t917;
t1309 = qJD(6) * t953;
t825 = t916 * t1309;
t940 = t953 * rSges(7,2);
t1391 = -(-rSges(7,1) * t916 + rSges(7,3) * t917) * t836 - (t1158 * t956 + t940) * qJD(2) - t825 - t1036 * qJ(6) - (t1317 * t917 - t836 * t916) * pkin(5);
t1216 = t1326 * t953;
t1217 = t1339 * t956;
t1311 = qJD(5) * t956;
t1519 = pkin(4) * t950;
t759 = -t1519 * t931 - t1289;
t276 = -t1311 + (t759 + t1289) * t953 + (t1217 - t1216) * qJD(2);
t1280 = -t276 + t1391;
t1380 = rSges(7,2) * t1419 + t1669 * t675 + t1684 * t674;
t632 = qJD(6) * t674;
t1576 = rSges(7,2) * t1248 + t1669 * t308 - t1684 * t307 + t632;
t1400 = -rSges(7,2) * t1256 + t1576;
t1306 = qJD(2) * qJD(3);
t1626 = qJDD(3) * t953 + t956 * t1306;
t1307 = qJD(1) * qJD(2);
t810 = qJDD(2) * t954 + t957 * t1307;
t1186 = t1626 * t957 + t810;
t324 = qJD(4) * t1248 + (qJDD(4) * t957 - t1323 * t950) * t953 + t1186;
t1302 = t953 * t1306 + qJDD(1);
t629 = qJD(2) * t1312 + (-qJDD(3) - qJDD(4)) * t956 + t1302;
t760 = t1519 * t932 + t1288;
t1520 = pkin(4) * t931;
t1521 = pkin(3) * t952;
t819 = t1520 + t1521;
t1310 = qJD(5) * t957;
t885 = t953 * t1310;
t1154 = t949 * t1256 + t819 * t1321 + t759 * t1412 + t954 * t760 + t885;
t153 = -t1218 * t1316 + (-t1339 * t1323 + (-qJD(2) * t1326 + t1289) * t957) * t956 + t1154 - t1259;
t1305 = qJD(2) * qJD(5);
t1627 = qJDD(5) * t953 + t956 * t1305;
t1347 = t807 * t1412 + t954 * t819;
t295 = -t1216 * t957 + t1338 + t1347;
t1237 = qJD(1) * t1315;
t532 = -t1237 * t954 + t1186;
t793 = -qJDD(3) * t956 + t1302;
t857 = t957 * pkin(1) + t954 * pkin(7);
t926 = pkin(7) * t1321;
t1342 = qJD(1) * (-pkin(1) * t1323 + t926) + qJDD(1) * t857;
t808 = t1582 * qJD(2);
t995 = qJD(1) * t561 + qJDD(1) * t785 - t808 * t930 - t810 * t854 + t1342;
t970 = t908 * t242 + t793 * t508 - t799 * t524 - t532 * t640 + t995;
t966 = qJD(1) * t885 + t1569 * t153 + t1627 * t954 + t629 * t295 + t970;
t29 = qJD(6) * t309 + qJDD(6) * t672 + t1262 * t324 + t1280 * t703 + t1380 * t629 + t1400 * t1569 + t966;
t1657 = -g(2) + t29;
t947 = t957 * pkin(7);
t855 = pkin(1) * t954 - t947;
t1330 = -t855 - t783;
t811 = -qJDD(2) * t957 + t954 * t1307;
t1018 = qJDD(1) * t1330 - t1316 * t808 + t811 * t854;
t809 = qJD(1) * t857;
t1372 = -t562 - t809;
t1207 = t1372 * qJD(1);
t1085 = t955 * t908;
t1201 = -qJD(3) + t1322;
t466 = t954 * t1085 + (-t1201 * t957 + t1251) * t952;
t1084 = t908 * t952;
t1318 = qJD(2) * t953;
t467 = t1201 * t1413 + (-t1318 * t955 + t1084) * t954;
t1171 = rSges(4,1) * t467 + rSges(4,2) * t466;
t238 = rSges(4,3) * t1034 + t1171;
t779 = (-rSges(4,1) * t952 - rSges(4,2) * t955) * t953;
t939 = t953 * rSges(4,3);
t518 = qJD(3) * t779 + (t1169 * t956 + t939) * qJD(2);
t533 = t957 * t1237 + t1626 * t954 + t811;
t115 = -t238 * t908 - t501 * t793 - t518 * t800 + t533 * t721 + t1018 + t1207;
t1655 = t115 * t954;
t1653 = t819 * t957;
t1399 = rSges(7,2) * t1034 - t1666;
t1650 = -t1669 * t672 + t1684 * t673;
t1081 = -t1669 * t674 + t1684 * t675;
t1649 = t1680 * t954;
t1648 = t1680 * t957;
t1647 = t1681 * t954;
t1646 = t1681 * t957;
t1359 = t1429 * t1669 - t1335;
t1643 = (-t1682 * t673 - t1651 + t634 - t637) * t704 + (t1682 * t675 - t1478 - t1690 + t639) * t703 + (-t1681 + t1705) * t1569;
t1642 = (t1683 * t672 - t1692 - t635 + t638) * t704 + (-t1683 * t674 - t1486 + t1691 + t636) * t703 + (-Icges(7,1) * t1429 + t1689 + t681 + t830) * t1569;
t929 = qJD(5) * t953;
t883 = t954 * t929;
t1152 = -t1034 * t949 - t807 * t1251 - t957 * t760 + t883;
t154 = t759 * t1415 + (t957 * t1217 + (t819 - t1521) * t954) * qJD(1) + t1152 + t1153;
t769 = t956 * t807;
t741 = t954 * t769;
t1209 = -t741 + t1653;
t294 = t1420 * t949 + t1209 - t1258;
t446 = t525 * t954;
t764 = t957 * t1203;
t1638 = t957 * t153 + t954 * t154 + t703 * t446 + t1668 - t929 + (-t1321 + t764) * t294;
t1199 = t1034 * t525 + t276 * t1420 + t956 * t154;
t1164 = rSges(6,1) * t310 - rSges(6,2) * t309;
t192 = rSges(6,3) * t1034 + t1164;
t1507 = rSges(6,1) * t917;
t1162 = -rSges(6,2) * t916 + t1507;
t1161 = -rSges(6,1) * t916 - rSges(6,2) * t917;
t686 = t1161 * t953;
t937 = t953 * rSges(6,3);
t354 = t950 * t686 + (t1162 * t956 + t937) * qJD(2);
t622 = -rSges(6,3) * t956 + t1162 * t953;
t1637 = t1034 * t622 + t354 * t1420 + t956 * t192 + t704 * t686 + t1199;
t485 = t525 * t1323;
t526 = t769 - t858 - t1216;
t763 = t954 * t1203;
t1636 = -t956 * t1310 - t763 * t525 + t704 * t526 + t1665 + t485;
t1195 = -t524 + t1280;
t1632 = t825 - t808 + t1195;
t1631 = -qJD(6) * t675 + t1034 * t1358 - t1359 * t704 - t1391 * t1420 + t1399 * t956 + t1199;
t786 = t953 * t819;
t682 = -t786 + t1301;
t1629 = t704 * t682 + t1662;
t1168 = rSges(5,1) * t341 + rSges(5,2) * t340;
t208 = rSges(5,3) * t1034 + t1168;
t1165 = -rSges(5,1) * t931 - rSges(5,2) * t932;
t740 = t1165 * t953;
t405 = qJD(2) * t669 + t950 * t740;
t489 = -t725 * rSges(5,1) - t726 * rSges(5,2);
t1628 = t1034 * t668 + t405 * t1420 + t1569 * t489 + t956 * t208 + t704 * t740;
t325 = qJD(4) * t1034 + qJDD(4) * t1420 + t533;
t1623 = t1569 * t1611 + t1604 * t629 + t1607 * t324 + t1608 * t325 + t1620 * t703 - t1621 * t704;
t1622 = t1569 * t1678 + t1605 * t629 + t1609 * t324 + t1610 * t325 + t1618 * t703 - t1619 * t704;
t50 = (qJD(2) * t1109 - t182) * t956 + (qJD(2) * t369 + (t363 * t950 + t186) * t917 + (t376 * t950 + t178) * t916) * t953;
t52 = (qJD(2) * t1107 - t180) * t956 + (qJD(2) * t366 + (t373 * t950 + t188) * t917 + (-t378 * t950 - t184) * t916) * t953;
t60 = (qJD(2) * t1105 - t202) * t956 + (qJD(2) * t408 + (t412 * t950 + t206) * t932 + (-t414 * t950 - t204) * t931) * t953;
t1617 = t50 + t52 + t60;
t51 = (qJD(2) * t1108 - t181) * t956 + (qJD(2) * t371 + (t365 * t950 + t185) * t917 + (-t377 * t950 + t177) * t916) * t953;
t53 = (qJD(2) * t1106 - t179) * t956 + (qJD(2) * t368 + (-t374 * t950 + t187) * t917 + (-t380 * t950 - t183) * t916) * t953;
t61 = (qJD(2) * t1104 - t201) * t956 + (qJD(2) * t410 + (-t413 * t950 + t205) * t932 + (-t416 * t950 - t203) * t931) * t953;
t1616 = t51 + t53 + t61;
t1613 = t1569 * t1603 - t1606 * t704 + t1676 * t703;
t1601 = (t1569 * t1674 - t1602 * t704 + t1675 * t703) * t956 + t1672 * t953;
t1600 = t1673 * t953;
t1599 = t1606 * t954 + t1676 * t957;
t1598 = t1606 * t957 - t1676 * t954;
t1597 = t1607 * t957 + t1608 * t954;
t1596 = -t1607 * t954 + t1608 * t957;
t1595 = t1609 * t957 + t1610 * t954;
t1594 = -t1609 * t954 + t1610 * t957;
t1593 = t1569 * t1677 + t1603 * t629;
t1270 = t339 * rSges(5,1) + t338 * rSges(5,2) + rSges(5,3) * t1248;
t207 = -rSges(5,3) * t1256 + t1270;
t1592 = qJD(1) * t417 + t207;
t1591 = -t763 + t1323;
t1274 = t295 + t1380;
t1590 = t1274 * t1569 - t1358 * t703 + t630;
t1393 = t294 + t388;
t1586 = t908 * t507 - t800 * t640;
t1344 = t785 + t857;
t1583 = -t703 * t525 + t883;
t1424 = t931 * t953;
t1300 = pkin(4) * t1424;
t1580 = t1300 * t704;
t694 = t727 * pkin(4);
t1577 = t1081 + t694;
t1574 = t508 * t908 - t799 * t640;
t936 = Icges(3,4) * t956;
t1146 = -Icges(3,2) * t953 + t936;
t841 = Icges(3,1) * t953 + t936;
t1564 = g(1) * t957 + g(2) * t954;
t1563 = t1564 * t953;
t1493 = Icges(3,4) * t953;
t839 = Icges(3,2) * t956 + t1493;
t1090 = t839 * t953 - t841 * t956;
t838 = Icges(3,5) * t956 - Icges(3,6) * t953;
t1562 = qJD(1) * t1090 + t838 * qJD(2);
t837 = Icges(3,5) * t953 + Icges(3,6) * t956;
t1039 = qJD(2) * t837;
t712 = Icges(3,6) * t954 + t1146 * t957;
t1433 = t712 * t953;
t842 = Icges(3,1) * t956 - t1493;
t716 = Icges(3,5) * t954 + t842 * t957;
t1093 = -t716 * t956 + t1433;
t1468 = Icges(3,3) * t957;
t1561 = -t957 * t1039 + (-t838 * t954 + t1093 + t1468) * qJD(1);
t1473 = Icges(3,6) * t957;
t711 = Icges(3,4) * t1415 - Icges(3,2) * t1420 - t1473;
t1434 = t711 * t953;
t1482 = Icges(3,5) * t957;
t892 = Icges(3,4) * t1420;
t715 = Icges(3,1) * t1415 - t1482 - t892;
t1094 = -t715 * t956 + t1434;
t708 = Icges(3,3) * t954 + t838 * t957;
t1325 = qJD(1) * t708;
t1560 = qJD(1) * t1094 - t1039 * t954 + t1325;
t707 = Icges(3,5) * t1415 - Icges(3,6) * t1420 - t1468;
t279 = -t1094 * t954 - t707 * t957;
t1559 = t1201 * t954 + t1250;
t1557 = (-t839 * t957 + t716) * t954 - (-Icges(3,2) * t1415 + t715 - t892) * t957;
t1095 = -t709 * t952 + t713 * t955;
t1101 = -t496 * t952 + t499 * t955;
t706 = Icges(4,3) * t953 + t1141 * t956;
t1556 = (-t1095 + t706) * t908 + (-t705 * t957 - t1101) * t799 - (-t705 * t954 - t1102) * t800;
t773 = (-Icges(4,2) * t955 - t1491) * t953;
t1552 = (t713 + t773) * t908 + (-Icges(4,2) * t768 + t499 + t747) * t799 - (-Icges(4,2) * t766 + t497 - t745) * t800;
t1551 = (t666 + t737) * t1569 + (-Icges(5,2) * t728 + t416 + t692) * t703 - (-Icges(5,2) * t726 + t414 - t690) * t704;
t1550 = m(6) / 0.2e1;
t1549 = m(7) / 0.2e1;
t1548 = t324 / 0.2e1;
t1547 = t325 / 0.2e1;
t1546 = t532 / 0.2e1;
t1545 = t533 / 0.2e1;
t1543 = -t703 / 0.2e1;
t1542 = t703 / 0.2e1;
t1541 = -t704 / 0.2e1;
t1540 = t704 / 0.2e1;
t1537 = -t799 / 0.2e1;
t1536 = t799 / 0.2e1;
t1535 = -t800 / 0.2e1;
t1534 = t800 / 0.2e1;
t1533 = t810 / 0.2e1;
t1532 = t811 / 0.2e1;
t1531 = -t1569 / 0.2e1;
t1530 = t1569 / 0.2e1;
t1528 = -t908 / 0.2e1;
t1527 = t908 / 0.2e1;
t1525 = -t956 / 0.2e1;
t1522 = -rSges(4,3) - pkin(8);
t1518 = g(1) * t954;
t1515 = g(3) * t949;
t1514 = g(3) * t953;
t1512 = -pkin(7) - t819;
t1510 = rSges(3,1) * t956;
t419 = t728 * rSges(5,1) + t727 * rSges(5,2) + rSges(5,3) * t1419;
t1078 = t561 * t1316 + t562 * t930 + t810 * t783 - t811 * t785;
t981 = t800 * t242 + t799 * t243 - t532 * t507 - t533 * t508 + t1078;
t33 = t207 * t704 + t208 * t703 + t324 * t417 - t325 * t419 + t981;
t1503 = t33 * t419;
t1502 = t50 * t704;
t1501 = t51 * t703;
t1500 = t52 * t704;
t1499 = t53 * t703;
t1498 = t60 * t704;
t1497 = t61 * t703;
t232 = Icges(4,5) * t467 + Icges(4,6) * t466 + Icges(4,3) * t1034;
t234 = Icges(4,4) * t467 + Icges(4,2) * t466 + Icges(4,6) * t1034;
t236 = Icges(4,1) * t467 + Icges(4,4) * t466 + Icges(4,5) * t1034;
t84 = (qJD(2) * t1102 - t232) * t956 + (qJD(2) * t491 - t234 * t952 + t236 * t955 + (t495 * t955 - t497 * t952) * qJD(3)) * t953;
t1496 = t84 * t800;
t464 = t957 * t1085 + t1559 * t952;
t465 = t957 * t1084 - t1559 * t955;
t231 = Icges(4,5) * t465 + Icges(4,6) * t464 + Icges(4,3) * t1033;
t233 = Icges(4,4) * t465 + Icges(4,2) * t464 + Icges(4,6) * t1033;
t235 = Icges(4,1) * t465 + Icges(4,4) * t464 + Icges(4,5) * t1033;
t85 = (qJD(2) * t1101 - t231) * t956 + (qJD(2) * t493 - t233 * t952 + t235 * t955 + (-t496 * t955 - t499 * t952) * qJD(3)) * t953;
t1495 = t85 * t799;
t941 = t954 * rSges(3,3);
t1349 = t785 * t1316 + t783 * t930;
t1080 = -t799 * t507 + t508 * t800 + t1349;
t1011 = -t703 * t294 + t1080 - t1311;
t79 = t1274 * t704 + t1390 * t703 + t1011 + t825;
t1463 = qJD(1) * t79;
t1276 = t294 - t1390;
t1252 = t854 * t1316;
t1025 = qJD(1) * t1330 - t1252;
t991 = t1025 + t1586;
t980 = -t704 * t525 + t885 + t991;
t101 = t1276 * t1569 - t1358 * t704 + t632 + t980;
t1462 = t101 * t1569;
t790 = t854 * t930;
t1087 = qJD(1) * t1344 - t790;
t1020 = t1087 + t1574;
t136 = t1569 * t419 - t668 * t703 + t1020;
t1461 = t136 * t957;
t1454 = t159 * t325;
t1453 = t160 * t324;
t1452 = t161 * t325;
t1451 = t162 * t324;
t1450 = t163 * t325;
t1449 = t164 * t324;
t1446 = t199 * t533;
t200 = t1101 * t953 - t493 * t956;
t1445 = t200 * t532;
t848 = rSges(3,1) * t953 + rSges(3,2) * t956;
t1253 = t848 * t1316;
t1328 = rSges(3,2) * t1420 + t957 * rSges(3,3);
t722 = rSges(3,1) * t1415 - t1328;
t1351 = -t722 - t855;
t454 = qJD(1) * t1351 - t1253;
t1440 = t454 * t954;
t1439 = t454 * t957;
t724 = rSges(3,1) * t1412 - rSges(3,2) * t1419 + t941;
t597 = t724 + t857;
t455 = qJD(1) * t597 - t848 * t930;
t781 = t848 * t957;
t1438 = t455 * t781;
t1431 = t837 * t954;
t1430 = t837 * t957;
t1427 = t916 * t956;
t1425 = t917 * t956;
t770 = (-Icges(4,5) * t952 - Icges(4,6) * t955) * t953;
t509 = qJD(2) * t706 + qJD(3) * t770;
t710 = Icges(4,6) * t953 + t1145 * t956;
t512 = qJD(2) * t710 + qJD(3) * t773;
t714 = Icges(4,5) * t953 + t1150 * t956;
t776 = (-Icges(4,1) * t952 - t1490) * t953;
t515 = qJD(2) * t714 + qJD(3) * t776;
t130 = (qJD(2) * t1095 - t509) * t956 + (qJD(2) * t705 - t512 * t952 + t515 * t955 + (-t709 * t955 - t713 * t952) * qJD(3)) * t953;
t278 = t1095 * t953 - t705 * t956;
t1403 = t130 * t908 + t278 * t793;
t1402 = -t294 * t1248 + t154 * t1419;
t1272 = t308 * rSges(6,1) + t307 * rSges(6,2) + rSges(6,3) * t1248;
t190 = -rSges(6,3) * t1256 + t1272;
t1401 = t153 + t190;
t1398 = t417 * t1248 + t208 * t1419;
t1397 = -t507 * t1248 + t243 * t1419;
t1396 = -t276 - t354;
t277 = t294 * t1419;
t1395 = -t1419 * t388 - t277;
t1394 = t295 * t1318 + t953 * t485;
t390 = t675 * rSges(6,1) - t674 * rSges(6,2) + rSges(6,3) * t1419;
t1392 = t295 + t390;
t1388 = t668 * t1256 + t419 * t1318;
t1387 = -t405 - t524;
t1384 = -t419 - t508;
t435 = -t672 * rSges(6,1) - t673 * rSges(6,2);
t693 = t725 * pkin(4);
t1382 = -t435 + t693;
t440 = -t674 * rSges(6,1) - t675 * rSges(6,2);
t1381 = t440 + t694;
t1379 = t508 * t1318 + t953 * t594;
t1378 = t525 * t1420 - t956 * t294;
t1375 = -t518 - t808;
t1374 = -t525 - t622;
t897 = rSges(7,2) * t1415;
t1373 = t1624 * t954 + t897;
t1371 = t703 * t1300 + t1569 * t694;
t1370 = t640 * t1420 - t956 * t507;
t1369 = t668 * t1420 + t956 * t417;
t906 = rSges(7,2) * t1412;
t1367 = t1624 * t957 + t906;
t1366 = -t715 * t1412 - t954 * t707;
t1365 = t716 * t1412 + t954 * t708;
t749 = t767 * pkin(3);
t1364 = t799 * t1301 + t908 * t749;
t1363 = -t640 - t668;
t1357 = -t1425 * t1669 - t1427 * t1684 - t940;
t490 = t727 * rSges(5,1) - t728 * rSges(5,2);
t1352 = -t721 - t854;
t1346 = t954 * t783 + t957 * t785;
t1343 = -t819 * t1412 + t954 * t820;
t1294 = rSges(6,2) * t1429;
t1341 = rSges(6,3) * t1415 + t954 * t1294;
t1340 = rSges(6,3) * t1412 + t957 * t1294;
t1295 = rSges(5,2) * t1424;
t1337 = rSges(5,3) * t1415 + t954 * t1295;
t1336 = rSges(5,3) * t1412 + t957 * t1295;
t1334 = -t839 + t842;
t1333 = t841 + t1146;
t1296 = rSges(4,2) * t1422;
t1332 = rSges(4,3) * t1415 + t954 * t1296;
t1331 = rSges(4,3) * t1412 + t957 * t1296;
t1329 = rSges(3,2) * t1256 + rSges(3,3) * t1321;
t1327 = t947 - t741;
t1324 = qJD(1) * t838;
t120 = t1393 * t1569 - t622 * t704 + t980;
t1320 = qJD(2) * t120;
t135 = t1670 + t991;
t1319 = qJD(2) * t135;
t468 = -t1090 * t954 - t1430;
t1308 = t468 * qJD(1);
t1299 = t953 * t1509;
t1298 = t953 * t1508;
t1297 = rSges(6,1) * t1426;
t1285 = t949 * t1415;
t1284 = t949 * t1412;
t1282 = -t242 - t1401;
t1281 = t153 + t1400;
t1279 = -t524 + t1396;
t1278 = t1390 * t1419 - t277;
t1277 = t507 + t1393;
t1275 = -t508 - t1392;
t1273 = t917 * t1309 + t1650 * t703;
t1269 = qJD(6) * t673 + t1081 * t1569;
t445 = -t749 + t1343;
t1268 = t1569 * t445 + t1364;
t1267 = -t808 + t1387;
t1266 = t465 * rSges(4,1) + t464 * rSges(4,2) + rSges(4,3) * t1248;
t1263 = -t640 + t1374;
t1260 = -t854 + t1363;
t503 = t768 * rSges(4,1) + t767 * rSges(4,2) + rSges(4,3) * t1419;
t1257 = t1669 * t916;
t1243 = t1420 / 0.2e1;
t1242 = t1419 / 0.2e1;
t1241 = -pkin(1) - t1510;
t1239 = -pkin(1) - t938;
t1232 = t1318 / 0.2e1;
t1231 = -t930 / 0.2e1;
t1229 = -t1316 / 0.2e1;
t1226 = -pkin(1) - t769;
t1225 = t79 * t1390;
t1222 = t101 * t1358;
t104 = t1392 * t704 - t388 * t703 + t1011;
t1221 = t104 * t1392;
t994 = t1020 + t1583;
t121 = t1392 * t1569 - t622 * t703 + t994;
t1220 = t121 * t1374;
t128 = t417 * t703 + t419 * t704 + t1080;
t1219 = t128 * t1384;
t1215 = t703 * t489 + t490 * t704;
t1214 = t1569 * t490 - t703 * t740;
t1212 = -t799 * t748 + t749 * t800;
t625 = t716 * t1415;
t1211 = t708 * t957 - t625;
t1210 = -t707 + t1433;
t1208 = -t819 * t1415 - t820 * t957;
t1200 = -t1248 * t388 + t192 * t1419 + t1402;
t1198 = -t242 - t1281;
t1194 = -t808 + t1279;
t1193 = t622 * t1256 + t390 * t1318 + t1394;
t1192 = t507 + t1276;
t1191 = -t508 - t1274;
t1190 = -t954 * t507 + t957 * t508 + t1346;
t1189 = t622 * t1420 - t388 * t956 + t1378;
t1188 = -t640 + t1262;
t1187 = -t854 + t1263;
t1181 = t79 * t1274;
t1180 = t101 * t1276;
t102 = t1590 + t994;
t1179 = t102 * t1262;
t1178 = t104 * t1275;
t444 = t1208 + t748;
t1176 = t703 * t444 + t1212;
t1175 = t1209 + t947;
t1174 = -pkin(1) + (-rSges(7,2) + t949) * t953;
t1173 = -pkin(1) + (-rSges(6,3) + t949) * t953;
t1172 = qJD(1) * t784 - t1582 * t930;
t851 = rSges(2,1) * t957 - rSges(2,2) * t954;
t849 = rSges(2,1) * t954 + rSges(2,2) * t957;
t850 = -rSges(3,2) * t953 + t1510;
t1155 = -t854 + t1188;
t460 = t712 * t956 + t716 * t953;
t1040 = qJD(2) * t839;
t513 = -t957 * t1040 + (-t1146 * t954 + t1473) * qJD(1);
t1041 = qJD(2) * t841;
t516 = -t957 * t1041 + (-t842 * t954 + t1482) * qJD(1);
t974 = -qJD(2) * t460 - t513 * t953 + t516 * t956 + t1325;
t459 = t711 * t956 + t715 * t953;
t514 = qJD(1) * t712 - t1040 * t954;
t517 = qJD(1) * t716 - t1041 * t954;
t975 = qJD(1) * t707 - qJD(2) * t459 - t514 * t953 + t517 * t956;
t1137 = -(t1560 * t954 + t975 * t957) * t957 + (t1561 * t954 + t974 * t957) * t954;
t1136 = -(-t1560 * t957 + t975 * t954) * t957 + (-t1561 * t957 + t974 * t954) * t954;
t1117 = t167 * t957 - t168 * t954;
t1116 = t167 * t954 + t168 * t957;
t1115 = t169 * t957 - t170 * t954;
t1114 = t169 * t954 + t170 * t957;
t1113 = t199 * t957 - t200 * t954;
t1112 = t199 * t954 + t200 * t957;
t280 = -t1420 * t712 - t1211;
t1111 = -t279 * t957 + t280 * t954;
t281 = -t1419 * t711 - t1366;
t282 = -t1419 * t712 + t1365;
t1110 = -t281 * t957 + t282 * t954;
t1103 = -t455 * t954 - t1439;
t1100 = t501 * t957 - t503 * t954;
t519 = rSges(3,1) * t1035 - rSges(3,2) * t1248 + t1329;
t780 = t848 * t954;
t520 = -qJD(2) * t780 + (t850 * t957 + t941) * qJD(1);
t1099 = t519 * t957 + t520 * t954;
t1092 = t722 * t954 + t724 * t957;
t1091 = t839 * t956 + t841 * t953;
t1086 = t79 * t1191;
t723 = rSges(4,1) * t1414 - t1506 * t956 + t939;
t624 = rSges(6,1) * t1425 - rSges(6,2) * t1427 + t937;
t1077 = t1226 - t940;
t1076 = t1239 - t858;
t1075 = t1226 - t937;
t818 = qJD(1) * t855;
t1074 = -qJD(1) * t783 - t1252 - t818;
t1073 = t1248 * t1390 + t1399 * t1419 + t1402;
t1071 = t1256 * t1358 + t1318 * t1380 + t1394;
t1070 = -t954 * t294 + t957 * t295 + t1190;
t1069 = t1358 * t1420 + t1390 * t956 + t1378;
t1068 = t926 + t1154;
t1043 = t704 * t294;
t1038 = qJD(2) * (-t807 * t953 - t949 * t956);
t1032 = -t1419 * t949 + t1347 + t857;
t1028 = -t491 * t800 + t493 * t799 + t705 * t908;
t1027 = (-Icges(4,5) * t765 - Icges(4,6) * t766) * t800 - (Icges(4,5) * t767 - Icges(4,6) * t768) * t799 - t770 * t908;
t1023 = t711 * t957 - t712 * t954;
t1014 = t953 * t1027;
t1012 = t1074 + t1586;
t996 = (-t1333 * t953 + t1334 * t956) * qJD(1);
t992 = t1569 * t294 + t1012 + t885;
t985 = (Icges(5,1) * t727 - t1489 - t413) * t703 - (-Icges(5,1) * t725 + t412 - t691) * t704 + (-t664 + t738) * t1569;
t983 = (Icges(4,1) * t767 - t1492 - t496) * t799 - (-Icges(4,1) * t765 + t495 - t746) * t800 + (-t709 + t776) * t908;
t979 = -t1245 * t640 + t508 * t1315 + t908 * t544 - t799 * t641 + t1172;
t194 = t501 * t799 + t503 * t800 + t1349;
t223 = t1025 - t1671;
t224 = t503 * t908 - t721 * t799 + t1087;
t977 = t194 * t1100 + (t223 * t954 - t224 * t957) * t721;
t802 = t1146 * qJD(2);
t803 = t842 * qJD(2);
t973 = qJD(1) * t837 - qJD(2) * t1091 - t802 * t953 + t803 * t956;
t972 = -t908 * t243 + t793 * t507 - t800 * t524 + t533 * t640 + t1018;
t447 = t525 * t957;
t971 = t954 * t1311 - t1569 * t447 + t836 * t295 + t979;
t968 = -qJDD(5) * t956 + t953 * t1305 + t703 * t154 - t324 * t294 + t981;
t967 = t1023 * t956 - t1557 * t953;
t965 = t1556 * t953;
t964 = t325 * t525 + (-t883 + t1372) * qJD(1) - t704 * t276 + t972 + t1627 * t957;
t960 = (t1597 * t953 - t1604 * t956) * t1548 + (t1595 * t953 - t1605 * t956) * t1547 + (t1599 * t953 - t1603 * t956) * t629 / 0.2e1 + (t1551 * t727 - t1600 * t957 + t1642 * t675 + t1643 * t674 + t985 * t728) * t1543 + ((qJD(2) * t1597 - t1611) * t956 + (qJD(1) * t1596 + qJD(2) * t1604 + t1620 * t957 + t1621 * t954) * t953) * t1542 + ((qJD(2) * t1595 - t1678) * t956 + (qJD(1) * t1594 + qJD(2) * t1605 + t1618 * t957 + t1619 * t954) * t953) * t1541 + (-t1551 * t725 - t1600 * t954 + t1642 * t673 + t1643 * t672 + t726 * t985) * t1540 + (t1673 * t956 + (-t1551 * t931 + t1642 * t917 + t1643 * t916 + t932 * t985) * t953) * t1531 + ((qJD(2) * t1599 - t1677) * t956 + (qJD(1) * t1598 + qJD(2) * t1603 + t1616 * t957 + t1617 * t954) * t953) * t1530 + (t1453 + t1454 + t1501 - t1502 + t1451 + t1452 + t1499 - t1500 + t1449 + t1450 + t1497 - t1498 + t1593) * t1525 + t1622 * t1243 + t1623 * t1242 + t1613 * t1232 + t1664 * t1615 + t1663 * t1614;
t804 = t850 * qJD(2);
t605 = -t1299 * t957 + t1331;
t604 = -t1299 * t954 + t1332;
t603 = t713 * t957;
t602 = t713 * t954;
t601 = t709 * t957;
t600 = t709 * t954;
t583 = -t1298 * t957 + t1336;
t582 = -t1298 * t954 + t1337;
t577 = t666 * t957;
t576 = t666 * t954;
t575 = t664 * t957;
t574 = t664 * t954;
t560 = -t1297 * t957 + t1340;
t558 = -t1297 * t954 + t1341;
t542 = rSges(4,1) * t767 - rSges(4,2) * t768;
t541 = -rSges(4,1) * t765 - rSges(4,2) * t766;
t506 = t703 * t693;
t505 = -t1420 * t1569 + t704 * t956;
t504 = t1419 * t1569 + t703 * t956;
t469 = -t1090 * t957 + t1431;
t456 = t507 * t1419;
t453 = t469 * qJD(1);
t448 = t1092 * qJD(2);
t403 = (t703 * t954 + t704 * t957) * t953;
t391 = t417 * t1419;
t333 = t1569 * t440;
t298 = t703 * t435;
t237 = -rSges(4,3) * t1256 + t1266;
t220 = qJD(1) * t519 + qJDD(1) * t724 - t804 * t930 - t810 * t848 + t1342;
t219 = -t804 * t1316 + t811 * t848 + t1351 * qJDD(1) + (-t520 - t809) * qJD(1);
t212 = -t1562 * t957 + t973 * t954;
t211 = t1562 * t954 + t973 * t957;
t210 = -qJD(2) * t1093 + t513 * t956 + t516 * t953;
t209 = -qJD(2) * t1094 + t514 * t956 + t517 * t953;
t148 = qJD(2) * t1110 + t453;
t147 = qJD(2) * t1111 + t1308;
t126 = t1034 * t705 + t1420 * t509 + t466 * t709 + t467 * t713 - t512 * t765 + t515 * t766;
t125 = t1033 * t705 + t1419 * t509 + t464 * t709 + t465 * t713 + t512 * t767 + t515 * t768;
t119 = -t199 * t800 + t200 * t799 + t278 * t908;
t116 = t237 * t908 + t503 * t793 - t518 * t799 - t532 * t721 + t995;
t98 = t237 * t800 + t238 * t799 + t501 * t532 - t503 * t533 + t1078;
t70 = t1034 * t493 + t1420 * t231 - t233 * t765 + t235 * t766 + t466 * t496 + t467 * t499;
t69 = t1034 * t491 + t1420 * t232 - t234 * t765 + t236 * t766 - t466 * t495 + t467 * t497;
t68 = t1033 * t493 + t1419 * t231 + t233 * t767 + t235 * t768 + t464 * t496 + t465 * t499;
t67 = t1033 * t491 + t1419 * t232 + t234 * t767 + t236 * t768 - t464 * t495 + t465 * t497;
t59 = t1569 * t207 - t324 * t668 - t405 * t703 + t419 * t629 + t970;
t58 = -t1569 * t208 + t325 * t668 - t405 * t704 - t417 * t629 + t1207 + t972;
t32 = t1374 * t324 + t1396 * t703 + t1569 * t190 + t390 * t629 + t966;
t31 = (-t154 - t192) * t1569 + t1393 * t629 - t704 * t354 + t964 + t325 * t622;
t30 = -t1392 * t325 + t1401 * t704 + t192 * t703 - t324 * t388 + t968;
t28 = (-t154 - t1399) * t1569 + t1391 * t704 + t1276 * t629 + t1358 * t325 + t964 + qJDD(6) * t674 - qJD(6) * t307;
t27 = t126 * t908 + t167 * t533 + t168 * t532 + t249 * t793 - t69 * t800 + t70 * t799;
t26 = t125 * t908 + t169 * t533 + t170 * t532 + t250 * t793 - t67 * t800 + t68 * t799;
t24 = qJD(6) * t1036 + qJDD(6) * t1429 - t1274 * t325 + t1281 * t704 + t1390 * t324 + t1399 * t703 + t968;
t1 = [(-(t1012 - t135 + t1670) * t136 + t135 * (-rSges(5,3) * t1249 + t1153 - t1168) + t136 * (t926 + t1259 + t1270) + (-t1202 + (-t924 * t953 - t1411) * qJD(2)) * t1461 + (t135 * t1076 * t957 + (t135 * (-pkin(7) - t1521) + t136 * t1076) * t954) * qJD(1) + (t59 - g(2)) * (t1083 + t419 + t857) + (t58 - g(1)) * (t1239 * t954 + t1258 + t1585 + t947)) * m(5) + t249 * t1545 + t250 * t1546 + (t455 * (t926 + t1329) + (t1440 * t848 - t1438) * qJD(2) + ((-pkin(1) - t850) * t1439 + (t454 * (-rSges(3,3) - pkin(7)) + t455 * t1241) * t954) * qJD(1) - (-qJD(1) * t722 - t1253 - t454 - t818) * t455 + (t220 - g(2)) * t597 + (t219 - g(1)) * (t1241 * t954 + t1328 + t947)) * m(3) + (m(2) * (t849 ^ 2 + t851 ^ 2) + t1091 + Icges(2,3)) * qJDD(1) + (t147 - t1308 + ((t1210 * t957 - t1365 + t282) * t957 + (t1210 * t954 + t1211 + t281) * t954) * qJD(2)) * t1231 + (t1602 * t956 + (t1651 * t917 - t1692 * t916 - t1105) * t953 + t1606) * t703 * t1531 + (t453 + ((t280 - t625 + (t708 + t1434) * t957 + t1366) * t957 + t1365 * t954) * qJD(2)) * t1228 + (t212 + t148 + t209) * t1229 + (-g(1) * (t1175 - t1667) - t1174 * t1518 + t79 * t1043 - (t294 * t79 + t1179) * t704 + t1657 * (t1032 + t1380) + (t1174 * t954 + t1327 + t1653 - t1667) * t28 + (t1038 * t957 + t1077 * t1323 + t1390 * t1569 + t1068 + t1576 - t632 - t992) * t102 + (-t1152 + (-rSges(7,2) * qJD(2) - t759) * t1415 + t1574 + t1583 - t790 + (t1077 * t957 + t1512 * t954 + t1344) * qJD(1) + t1590 + t1666) * t101) * m(7) + t1614 * t1540 + t125 * t1536 + ((-t1171 + t874 + (-pkin(7) * qJD(1) + t1317 * t1522) * t954) * t223 + (-g(2) + t116) * (t503 + t1344) + (t1321 * t223 - t1518 + t1655) * (t1522 * t953 - pkin(1) - t946) + (-t1074 + t223 - pkin(2) * t1250 + t1266 + t876 + t926 + (-pkin(1) - t1582 - t939) * t1323 + t1671) * t224 + (-g(1) + t115) * (t1584 + t947)) * m(4) + (-qJD(2) * t1090 + t802 * t956 + t803 * t953) * qJD(1) + t112 * t1534 + (t468 + t459) * t1532 + (t210 + t211) * t1230 + t1453 / 0.2e1 + t1454 / 0.2e1 - m(2) * (-g(1) * t849 + g(2) * t851) + (-g(1) * (t1175 - t1163) - t1173 * t1518 + t31 * (-t1163 + t1327) + t120 * (-t1152 - t1164) + t121 * (t1068 + t1272) + (qJD(1) * t1075 * t120 + t1038 * t121 + t31 * t819) * t957 + (t31 * t1173 + t120 * (-rSges(6,3) * qJD(2) - t759) * t956 + (t1075 * t121 + t120 * t1512) * qJD(1)) * t954 + t104 * t1043 - (t1569 * t388 - t120 + t992) * t121 - (t104 * t294 + t1220) * t704 + (-g(2) + t32) * (t1032 + t390)) * m(6) - t1502 / 0.2e1 - t1500 / 0.2e1 + t1501 / 0.2e1 + t1499 / 0.2e1 + t1449 / 0.2e1 + t1450 / 0.2e1 + (t469 + t460) * t1533 + t1403 - t1496 / 0.2e1 + t1495 / 0.2e1 + t1451 / 0.2e1 + t1452 / 0.2e1 + t1446 / 0.2e1 + t1445 / 0.2e1 + (t1678 + t1614) * t1541 + t1593 + (t126 + t112) * t1535 + t1604 * t1548 + t1605 * t1547 + t1611 * t1542 + t1497 / 0.2e1 - t1498 / 0.2e1; -qJD(1) * ((t1333 * t956 + t1334 * t953) * qJD(1) + (t1023 * t953 + t1557 * t956) * qJD(2)) / 0.2e1 - t119 * t1315 / 0.2e1 + (-t1672 * t956 + ((t1644 * t917 + t1645 * t916 - t665 * t931 + t667 * t932 + t1674) * t1569 + (t1647 * t917 - t1649 * t916 - t574 * t931 + t576 * t932 - t1602) * t704 + (-t1646 * t917 + t1648 * t916 + t575 * t931 - t577 * t932 + t1675) * t703) * t953 + t1603 * t836 + t1676 * t764 + t1606 * t763) * t1531 + (t1601 * t957 + t1604 * t836 + (t1644 * t675 + t1645 * t674 + t665 * t727 + t667 * t728) * t1569 + t1607 * t764 + t1608 * t763 + (t1647 * t675 - t1649 * t674 + t574 * t727 + t576 * t728) * t704 + (-t1646 * t675 + t1648 * t674 - t575 * t727 - t577 * t728) * t703) * t1543 + (t1601 * t954 + t1605 * t836 + (t1644 * t673 + t1645 * t672 - t665 * t725 + t667 * t726) * t1569 + t1609 * t764 + t1610 * t763 + (t1647 * t673 - t1649 * t672 - t574 * t725 + t576 * t726) * t704 + (-t1646 * t673 + t1648 * t672 + t575 * t725 - t577 * t726) * t703) * t1540 + (qJD(1) * t1112 - t84 * t957 + t85 * t954) * t1527 - (t111 * t954 + t112 * t957) * t1314 / 0.2e1 - t532 * t1115 / 0.2e1 - t533 * t1117 / 0.2e1 + qJD(1) * (-t209 * t957 + t210 * t954 + (t459 * t954 + t460 * t957) * qJD(1)) / 0.2e1 + (g(1) * t781 + g(2) * t780 - g(3) * t850 - (t454 * t780 - t1438) * qJD(1) - (t448 * (-t780 * t954 - t781 * t957) + t1103 * t850) * qJD(2) + (qJD(2) * t1099 + t722 * t810 - t724 * t811) * t1092 + t448 * ((t722 * t957 - t724 * t954) * qJD(1) + t1099) + t1103 * t804 + (-t219 * t957 - t220 * t954 + (-t455 * t957 + t1440) * qJD(1)) * t848) * m(3) + ((-t1316 * t1431 - t1324) * t957 + (t996 + (t1430 * t957 + t967) * qJD(2)) * t954) * t1228 + ((-t1430 * t930 + t1324) * t954 + (t996 + (t1431 * t954 + t967) * qJD(2)) * t957) * t1231 - t793 * t1113 / 0.2e1 + (-t223 * (-t604 * t908 - t723 * t800 + t1044) - t224 * (t605 * t908 - t723 * t799 + t1172) - ((-t223 * t501 + t224 * t503) * t953 + t977 * t956) * qJD(3) - g(1) * (t914 + t1331) - g(2) * (t911 + t1332) - g(3) * (t723 + t1582) - (-pkin(2) - t1509) * t1563 + t223 * t791 + t98 * t1346 + (t223 * t1375 + t98 * t503 + (qJD(1) * t224 + t115) * t1352) * t957 + (qJD(1) * t223 * t721 + t116 * t1352 + t224 * t1375 + t98 * t501) * t954 + (-t604 * t799 - t605 * t800 + (qJD(1) * t501 + t237) * t957 + (t238 + (-t503 - t785) * qJD(1)) * t954 + t1679) * t194) * m(4) + ((t281 * t954 + t282 * t957) * qJD(1) + t1137) * t1230 + ((t279 * t954 + t280 * t957) * qJD(1) + t1136) * t1229 + t1111 * t1532 + t1110 * t1533 + (qJD(1) * t1116 - t69 * t957 + t70 * t954) * t1535 + (qJD(1) * t1114 - t67 * t957 + t68 * t954) * t1536 + (-g(1) * (-t1407 * t956 + t1336) - g(2) * (-t1411 * t954 + t1337) - g(3) * (t669 + t858) - (-g(3) * t958 + t1564 * (-t924 - t1508)) * t953 + t33 * t1190 + (t1503 + (qJD(1) * t136 + t58) * t1260) * t957 + (t59 * t1260 + t136 * t1267 + t33 * t417) * t954 - t136 * (t1569 * t583 + t419 * t836 - t668 * t764 - t669 * t703 + t979) + (t1267 * t957 + t582 * t1569 + t1591 * t668 + t417 * t836 + t669 * t704 + t1665) * t135 + (t1592 * t957 + (t208 + (-t785 + t1384) * qJD(1)) * t954 - t417 * t764 + t419 * t763 - t582 * t703 - t583 * t704 + t1668) * t128) * m(5) + (t30 * t1070 + (t30 * t390 + (qJD(1) * t121 + t31) * t1187) * t957 + (t32 * t1187 + t121 * t1194 - t30 * t388) * t954 - t121 * (t390 * t836 + t560 * t1569 + t1374 * t764 + (-t526 - t624) * t703 + t971) - g(1) * (-t1284 + t1340) - g(2) * (-t1285 + t1341) - g(3) * (t624 + t769) - (-t1515 + t1564 * (-t807 - t1507)) * t953 + (t1194 * t957 + t624 * t704 - t1393 * t836 - (t446 - t558) * t1569 + t1591 * t622 + t1636) * t120 + ((-qJD(1) * t388 + t190) * t957 + (t192 + (-t785 + t1275) * qJD(1)) * t954 + t388 * t764 - t558 * t703 + t1392 * t763 - (-t447 + t560) * t704 + t1638) * t104) * m(6) + qJDD(1) * (-t459 * t957 + t460 * t954) / 0.2e1 + (-t1180 * t836 - (t1179 + t1225) * t764 - (t1222 - t1181) * t763 - g(1) * (t906 - t1284) - g(2) * (t897 - t1285) - g(3) * (t769 - t1357) - (-t1515 + t1564 * (-t1669 * t917 - t1684 * t916 - t807)) * t953 + t24 * t1070 + (qJD(1) * t1225 + t28 * t1155 + t24 * t1380) * t957 + (qJD(1) * t1222 + t29 * t1155 + t24 * t1390) * t954 + (-t971 - t1380 * t836 - t1367 * t1569 - (-t526 + t1357) * t703 + t1155 * t1321 + t1632 * t954) * t102 + (-qJD(6) * t1427 - (-t447 + t1367) * t704 - t1373 * t703 + t1400 * t957 + (t1399 + (-t785 + t1191) * qJD(1)) * t954 + t1638) * t79 + (-(t446 - t1373) * t1569 - t1357 * t704 + t1632 * t957 + t1636) * t101) * m(7) + ((t601 * t765 - t603 * t766) * t799 - (t600 * t765 - t602 * t766) * t800 + (-t710 * t765 + t714 * t766) * t908 + (t1412 * t168 + t249 * t953) * qJD(3) + ((qJD(3) * t167 + t1028) * t956 + t965) * t954) * t1534 + ((-t601 * t767 - t603 * t768) * t799 - (-t600 * t767 - t602 * t768) * t800 + (t710 * t767 + t714 * t768) * t908 + (t1415 * t169 + t250 * t953) * qJD(3) + ((qJD(3) * t170 + t1028) * t956 + t965) * t957) * t1537 + (((t601 * t952 - t603 * t955 + t493) * t799 - (t600 * t952 - t602 * t955 + t491) * t800 + (-t710 * t952 + t714 * t955 + t705) * t908 + t278 * qJD(3)) * t953 + (qJD(3) * t1112 - t1556) * t956) * t1528 - t1594 * t325 / 0.2e1 - t1596 * t324 / 0.2e1 - t1598 * t629 / 0.2e1 - t1613 * t836 / 0.2e1 + (t148 + t112 + t1614) * t1233 - t1614 * t764 / 0.2e1 + (t147 + t111 + t1615) * t1323 / 0.2e1 - t1615 * t763 / 0.2e1 + (qJD(1) * t1599 + t1616 * t954 - t1617 * t957) * t1530 + (qJD(1) * t1595 + t1618 * t954 - t1619 * t957) * t1541 + (qJD(1) * t1597 + t1620 * t954 - t1621 * t957) * t1542 - (qJD(1) * t212 + qJD(2) * t1136 + qJDD(1) * t468 + t279 * t811 + t280 * t810 + t1622 + t27) * t957 / 0.2e1 + (qJD(1) * t211 + qJD(2) * t1137 + qJDD(1) * t469 + t281 * t811 + t282 * t810 + t1623 + t26) * t954 / 0.2e1; (t1116 * t953 - t249 * t956) * t1545 + (t1114 * t953 - t250 * t956) * t1546 + (t1403 + t1445 + t1446 + t1495 - t1496) * t1525 + ((qJD(2) * t1112 - t130) * t956 + (qJD(1) * t1113 + qJD(2) * t278 + t84 * t954 + t85 * t957) * t953) * t1527 + (t1027 * t956 + (-t1552 * t952 + t955 * t983) * t953) * t1528 + (-t1014 * t954 - t1552 * t765 + t766 * t983) * t1534 + t793 * (t1112 * t953 - t278 * t956) / 0.2e1 + t27 * t1243 + t26 * t1242 + t119 * t1232 + ((qJD(2) * t1116 - t126) * t956 + (qJD(1) * t1117 + qJD(2) * t249 + t69 * t954 + t70 * t957) * t953) * t1535 + ((qJD(2) * t1114 - t125) * t956 + (qJD(1) * t1115 + qJD(2) * t250 + t67 * t954 + t68 * t957) * t953) * t1536 + (-t957 * t1014 + t1552 * t767 + t983 * t768) * t1537 + t960 + t1663 * t112 + t1664 * t111 + (-g(1) * (t1081 + t1343) - g(2) * (t1650 + t1208) - g(3) * (-t1257 * t953 + t1335 - t786) - (-t444 - t1650) * t1462 - (t1176 + t1273 + (t445 + t1081) * t704) * t79 - (t1268 + t1269 + (-t682 + t1359) * t703) * t102 + t28 * (t1069 + t1370) + t102 * (t1071 + t1379) + t24 * (-t456 + t1278) + t79 * (t1073 + t1397) + (t29 * t1191 + t102 * t1198 + (t102 * t1188 * t957 + t1086 * t954) * qJD(2)) * t956 + ((qJD(1) * t1086 + t102 * t1195 + t1188 * t29) * t957 + (t1191 * t24 + t1192 * t1463 + t1198 * t79) * t954) * t953 + (t1192 * t1318 + t1629 + t1631) * t101) * m(7) + (-t121 * (t333 + (-t682 - t686) * t703 + t1268) - t104 * (t298 + (t440 + t445) * t704 + t1176) - g(1) * (t1343 + t440) - g(2) * (t1208 + t435) - g(3) * (-t786 + t686) + t31 * (t1189 + t1370) + t121 * (t1193 + t1379) + t30 * (-t456 + t1395) + t104 * (t1200 + t1397) + (t32 * t1275 + t121 * t1282 + (t121 * t1263 * t957 + t1178 * t954) * qJD(2)) * t956 + (t1277 * t1320 + (qJD(1) * t1178 + t121 * t1279 + t1263 * t32) * t957 + (t1275 * t30 + (qJD(1) * t1277 + t1282) * t104) * t954) * t953 + (-(-t435 - t444) * t1569 + t1629 + t1637) * t120) * m(6) + (t58 * (t1369 + t1370) + t136 * (t1379 + t1388) + t33 * (t391 - t456) + t128 * (t1397 + t1398) + (t59 * t1384 + t136 * (-t207 - t242) + (t1219 * t954 + t1363 * t1461) * qJD(2)) * t956 + ((-t417 + t507) * t1319 + (qJD(1) * t1219 + t136 * t1387 + t1363 * t59) * t957 + (t33 * t1384 + t128 * (qJD(1) * t507 - t1592 - t242)) * t954) * t953 - g(1) * (t749 + t490) - g(2) * (-t748 + t489) - (t1165 - t1521) * t1514 - t136 * (t1214 + t1364) - t128 * (t1212 + t1215) + (t1628 + t1662) * t135) * m(5) + (-t223 * (-t541 * t908 - t779 * t800) - t224 * (t542 * t908 - t779 * t799) - t194 * (t541 * t799 + t542 * t800) + (qJD(2) * t977 + t115 * t501 - t116 * t503 + t223 * t238 - t224 * t237) * t956 + (t223 * (-qJD(2) * t501 + t518 * t954) + t224 * (qJD(2) * t503 - t518 * t957) + t98 * t1100 + t194 * (-t1321 * t503 - t1323 * t501 - t237 * t954 + t238 * t957) + (t1655 - t116 * t957 + (t223 * t957 + t224 * t954) * qJD(1)) * t721) * t953 - g(1) * t542 - g(2) * t541 - g(3) * t779) * m(4); t960 + (t28 * t1069 + t102 * t1071 + t24 * t1278 + (-t29 * t1274 - t102 * t1281 + (t1179 * t957 - t1181 * t954) * qJD(2)) * t956 + (qJD(2) * t1180 + (-qJD(1) * t1181 + t102 * t1280 + t1262 * t29) * t957 + (-t1274 * t24 + t1276 * t1463) * t954) * t953 - t102 * (t1359 * t703 + t1269 + t1371) - g(1) * t1577 - g(3) * t1335 - (-t1257 - t1520) * t1514 + (-t1281 * t1420 - t1577 * t704 + t1073 - t1273 + t506) * t79 + (-t1580 + t1631) * t101 + (-t1462 + g(2)) * (t693 - t1650)) * m(7) + (-t121 * (-t686 * t703 + t1371 + t333) - t104 * (t1381 * t704 + t298 - t506) + t31 * t1189 + t121 * t1193 + t30 * t1395 + t104 * t1200 + (-t32 * t1392 - t121 * t1401 + (t1220 * t957 - t1221 * t954) * qJD(2)) * t956 + (t1393 * t1320 + (-qJD(1) * t1221 + t121 * t1396 + t1374 * t32) * t957 + (-t30 * t1392 + t104 * (qJD(1) * t1393 - t1401)) * t954) * t953 - g(1) * t1381 + g(2) * t1382 - (t1161 - t1520) * t1514 + (-t1382 * t1569 - t1580 + t1637) * t120) * m(6) + (-t1214 * t136 - t1215 * t128 + t58 * t1369 + t136 * t1388 + t33 * t391 + t128 * t1398 + (t136 * (-t1316 * t668 - t207) + (-t128 * t930 - t59) * t419) * t956 + (-t417 * t1319 + (-qJD(1) * t128 * t419 - t136 * t405 - t59 * t668) * t957 + (-t1592 * t128 - t1503) * t954) * t953 - g(1) * t490 - g(2) * t489 - g(3) * t740 + t1628 * t135) * m(5); (-m(6) - m(7)) * (-g(3) * t956 + t1563) - m(6) * (t104 * t403 + t120 * t505 + t121 * t504) - m(7) * (t101 * t505 + t102 * t504 + t403 * t79) + 0.2e1 * ((t120 * t1316 + t121 * t930 - t30) * t1550 + (t101 * t1316 + t102 * t930 - t24) * t1549) * t956 + 0.2e1 * ((qJD(2) * t104 - t120 * t1323 + t121 * t1321 + t31 * t957 + t32 * t954) * t1550 + (qJD(2) * t79 - t101 * t1323 + t102 * t1321 + t28 * t957 + t29 * t954) * t1549) * t953; (t1036 * t79 + (-t704 * t79 - g(1) + t28) * t674 + (-t703 * t79 + t1657) * t672 + (t24 - g(3)) * t1429 + (t1429 * t703 - t1569 * t674 + t309) * t102 + (t1429 * t704 + t1569 * t672 - t307) * t101) * m(7);];
tau  = t1;
