% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP7_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:21:00
% EndTime: 2019-03-09 06:21:11
% DurationCPUTime: 3.75s
% Computational Cost: add. (6593->316), mult. (14731->505), div. (0->0), fcn. (14602->8), ass. (0->149)
t113 = sin(pkin(10));
t114 = cos(pkin(10));
t117 = sin(qJ(3));
t201 = cos(qJ(3));
t90 = t201 * t113 + t117 * t114;
t216 = -0.4e1 * t90;
t132 = -t117 * t113 + t201 * t114;
t194 = pkin(7) + qJ(2);
t94 = t194 * t113;
t95 = t194 * t114;
t136 = -t117 * t95 - t201 * t94;
t122 = t132 * qJD(2) + t136 * qJD(3);
t104 = -t114 * pkin(2) - pkin(1);
t128 = -pkin(3) * t132 - t90 * pkin(8) + t104;
t215 = -qJD(4) * t128 - t122;
t116 = sin(qJ(4));
t118 = cos(qJ(4));
t179 = qJD(4) * t118;
t168 = t90 * t179;
t80 = t132 * qJD(3);
t214 = t116 * t80 + t168;
t115 = sin(qJ(5));
t200 = cos(qJ(5));
t165 = t200 * t116;
t180 = qJD(4) * t116;
t169 = t90 * t180;
t184 = t115 * t116;
t171 = t90 * t184;
t160 = t200 * qJD(5);
t210 = t200 * qJD(4) + t160;
t22 = t80 * t165 - t115 * t169 - qJD(5) * t171 + (t115 * t80 + t210 * t90) * t118;
t183 = t115 * t118;
t92 = t165 + t183;
t57 = t92 * t90;
t206 = qJD(4) + qJD(5);
t65 = -t210 * t118 + t206 * t184;
t192 = -t92 * t22 + t65 * t57;
t164 = t200 * t118;
t209 = t164 - t184;
t66 = t206 * t92;
t21 = -t209 * t80 + t66 * t90;
t58 = t90 * t164 - t171;
t211 = t209 * t21 + t58 * t66;
t213 = t211 - t192;
t212 = t211 + t192;
t185 = t118 * t80;
t208 = t169 - t185;
t189 = t209 * t65 + t66 * t92;
t111 = t116 ^ 2;
t112 = t118 ^ 2;
t181 = t111 - t112;
t159 = qJD(4) * t181;
t81 = t90 * qJD(3);
t155 = t81 * pkin(3) - t80 * pkin(8);
t68 = -t117 * t94 + t201 * t95;
t16 = -t116 * t155 + t215 * t118 + t68 * t180;
t17 = t215 * t116 + t118 * t155 - t68 * t179;
t37 = -t116 * t68 + t118 * t128;
t38 = t116 * t128 + t118 * t68;
t205 = t16 * t116 - t17 * t118 + (t116 * t37 - t118 * t38) * qJD(4);
t120 = t81 * pkin(4) + t208 * pkin(9) + t17;
t124 = -pkin(9) * t214 - t16;
t123 = t115 * t124 - t200 * t120;
t202 = t132 * pkin(4);
t26 = -t118 * t90 * pkin(9) - t202 + t37;
t187 = t116 * t90;
t29 = -pkin(9) * t187 + t38;
t28 = t200 * t29;
t193 = t115 * t26 + t28;
t4 = -qJD(5) * t193 - t123;
t204 = 0.2e1 * t81;
t119 = 2 * qJD(6);
t203 = -pkin(9) - pkin(8);
t78 = t81 * pkin(5);
t47 = t90 * qJD(2) + t68 * qJD(3);
t198 = t136 * t47;
t197 = t90 * t80;
t195 = t209 * t66;
t178 = qJD(5) * t115;
t177 = 0.2e1 * t57 * t22;
t64 = t132 * t204;
t176 = -0.2e1 * t195;
t175 = -0.2e1 * pkin(3) * qJD(4);
t174 = t200 * pkin(4);
t173 = pkin(4) * t180;
t172 = pkin(4) * t178;
t170 = t116 * t185;
t107 = -t118 * pkin(4) - pkin(3);
t167 = t203 * qJD(4);
t163 = t116 * t179;
t157 = t203 * t200;
t137 = qJD(4) * t157;
t139 = t116 * t157;
t96 = t203 * t118;
t41 = -qJD(5) * t139 - t116 * t137 - t167 * t183 - t96 * t178;
t42 = -t96 * t160 - t118 * t137 + (qJD(5) * t203 + t167) * t184;
t69 = -t115 * t96 - t139;
t70 = t203 * t184 - t200 * t96;
t162 = -t70 * t41 + t69 * t42;
t86 = t90 ^ 2;
t158 = t86 * t163;
t48 = pkin(4) * t187 - t136;
t156 = 0.2e1 * (t113 ^ 2 + t114 ^ 2) * qJD(2);
t154 = -pkin(3) * t80 - pkin(8) * t81;
t153 = pkin(3) * t90 - pkin(8) * t132;
t152 = t21 * t57 - t58 * t22;
t150 = -t209 * t22 + t57 * t66;
t149 = -t132 * t22 + t81 * t57;
t148 = t132 * t41 + t70 * t81;
t147 = t132 * t42 - t69 * t81;
t146 = -t136 * t80 + t47 * t90;
t145 = -t132 * t65 - t92 * t81;
t144 = -t132 * t66 - t209 * t81;
t143 = t132 * t80 - t90 * t81;
t141 = t116 * t38 + t118 * t37;
t53 = t92 * t65;
t138 = -0.2e1 * t53 - 0.2e1 * t195;
t13 = -t115 * t29 + t200 * t26;
t133 = t116 * t81 - t132 * t179;
t3 = -t115 * t120 - t200 * t124 - t26 * t160 + t29 * t178;
t131 = -t69 * t21 - t70 * t22 + t41 * t57 + t42 * t58;
t130 = -t209 * t42 - t92 * t41 - t65 * t70 + t66 * t69;
t129 = -t66 * pkin(5) - t65 * qJ(6) + t92 * qJD(6);
t77 = t81 * qJ(6);
t82 = t132 * qJD(6);
t1 = -t3 + t77 - t82;
t127 = -0.2e1 * t209 * t41 + 0.2e1 * t42 * t92 - 0.2e1 * t69 * t65 - 0.2e1 * t70 * t66;
t125 = -t141 * qJD(4) - t17 * t116 - t16 * t118;
t30 = t214 * pkin(4) + t47;
t121 = (-t28 + (-t26 + t202) * t115) * qJD(5) - t123;
t108 = pkin(4) * t160;
t106 = -t174 - pkin(5);
t103 = t115 * pkin(4) + qJ(6);
t101 = -0.2e1 * t172;
t97 = t108 + qJD(6);
t62 = -pkin(5) * t209 - t92 * qJ(6) + t107;
t61 = t118 * t81 + t132 * t180;
t49 = -0.2e1 * t53;
t43 = t90 * t159 - t170;
t32 = -t129 + t173;
t23 = t57 * pkin(5) - t58 * qJ(6) + t48;
t15 = -0.2e1 * t58 * t21;
t12 = 0.2e1 * t132 * t21 + 0.2e1 * t58 * t81;
t10 = -t21 * t92 - t58 * t65;
t9 = pkin(5) * t132 - t13;
t8 = -qJ(6) * t132 + t193;
t5 = t22 * pkin(5) + t21 * qJ(6) - t58 * qJD(6) + t30;
t2 = -t4 - t78;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, qJ(2) * t156, 0.2e1 * t197, 0.2e1 * t143, 0, -t64, 0, 0, t104 * t204, 0.2e1 * t104 * t80, 0.2e1 * t122 * t132 - 0.2e1 * t68 * t81 + 0.2e1 * t146, 0.2e1 * t122 * t68 - 0.2e1 * t198, 0.2e1 * t112 * t197 - 0.2e1 * t158, 0.2e1 * t159 * t86 + t170 * t216, -0.2e1 * t118 * t143 + 0.2e1 * t132 * t169, 0.2e1 * t111 * t197 + 0.2e1 * t158, 0.2e1 * t116 * t143 + 0.2e1 * t132 * t168, -t64, 0.2e1 * t116 * t146 - 0.2e1 * t132 * t17 - 0.2e1 * t136 * t168 + 0.2e1 * t37 * t81, 0.2e1 * t118 * t146 - 0.2e1 * t132 * t16 + 0.2e1 * t136 * t169 - 0.2e1 * t38 * t81, -0.2e1 * t141 * t80 + 0.2e1 * t205 * t90, -0.2e1 * t38 * t16 + 0.2e1 * t37 * t17 - 0.2e1 * t198, t15, 0.2e1 * t152, t12, t177, -0.2e1 * t149, -t64, 0.2e1 * t13 * t81 - 0.2e1 * t132 * t4 + 0.2e1 * t48 * t22 + 0.2e1 * t30 * t57, -0.2e1 * t132 * t3 - 0.2e1 * t193 * t81 - 0.2e1 * t48 * t21 + 0.2e1 * t30 * t58, 0.2e1 * t13 * t21 - 0.2e1 * t193 * t22 + 0.2e1 * t3 * t57 - 0.2e1 * t4 * t58, 0.2e1 * t13 * t4 - 0.2e1 * t193 * t3 + 0.2e1 * t48 * t30, t15, t12, -0.2e1 * t152, -t64, 0.2e1 * t149, t177, 0.2e1 * t132 * t2 + 0.2e1 * t23 * t22 + 0.2e1 * t5 * t57 - 0.2e1 * t9 * t81, -0.2e1 * t1 * t57 + 0.2e1 * t2 * t58 - 0.2e1 * t9 * t21 - 0.2e1 * t8 * t22, -0.2e1 * t1 * t132 + 0.2e1 * t23 * t21 - 0.2e1 * t5 * t58 + 0.2e1 * t8 * t81, 0.2e1 * t8 * t1 + 0.2e1 * t9 * t2 + 0.2e1 * t23 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t80, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t133 -(t111 + t112) * t80, -t205, 0, 0, 0, 0, 0, 0, -t144, t145, t212, -t13 * t66 - t193 * t65 + t209 * t4 - t3 * t92, 0, 0, 0, 0, 0, 0, -t144, t212, -t145, t1 * t92 - t2 * t209 - t8 * t65 + t9 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, -t81, 0, -t47, -t122, 0, 0, -t43, t163 * t216 - t181 * t80, t133, t43, t61, 0, -t47 * t118 + t154 * t116 + (-t116 * t136 - t118 * t153) * qJD(4), t47 * t116 + t154 * t118 + (t116 * t153 - t118 * t136) * qJD(4), t125, -t47 * pkin(3) + pkin(8) * t125, t10, -t213, -t145, t150, -t144, 0, t107 * t22 + t57 * t173 - t209 * t30 + t48 * t66 + t147, -t107 * t21 + t173 * t58 + t30 * t92 - t48 * t65 - t148, t13 * t65 - t193 * t66 - t209 * t3 - t4 * t92 + t131, t30 * t107 - t13 * t42 + t173 * t48 - t193 * t41 - t3 * t70 - t4 * t69, t10, -t145, t213, 0, t144, t150, -t209 * t5 + t62 * t22 + t23 * t66 + t32 * t57 + t147, t1 * t209 + t2 * t92 - t9 * t65 - t8 * t66 + t131, t62 * t21 + t23 * t65 - t32 * t58 - t5 * t92 + t148, t1 * t70 + t2 * t69 + t23 * t32 - t8 * t41 + t9 * t42 + t5 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t163, -0.2e1 * t159, 0, -0.2e1 * t163, 0, 0, t116 * t175, t118 * t175, 0, 0, t49, -0.2e1 * t189, 0, t176, 0, 0, 0.2e1 * t107 * t66 - 0.2e1 * t173 * t209, -0.2e1 * t107 * t65 + 0.2e1 * t173 * t92, t127, 0.2e1 * t107 * t173 + 0.2e1 * t162, t49, 0, 0.2e1 * t189, 0, 0, t176, -0.2e1 * t209 * t32 + 0.2e1 * t62 * t66, t127, -0.2e1 * t32 * t92 + 0.2e1 * t62 * t65, 0.2e1 * t62 * t32 + 0.2e1 * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, 0, -t214, t81, t17, t16, 0, 0, 0, 0, -t21, 0, -t22, t81, t81 * t174 + t121 (-t115 * t81 + t132 * t160) * pkin(4) + t3 (t200 * t21 - t115 * t22 + (t115 * t58 - t200 * t57) * qJD(5)) * pkin(4) (t200 * t4 - t115 * t3 + (-t115 * t13 + t193 * t200) * qJD(5)) * pkin(4), 0, -t21, 0, t81, t22, 0, -t106 * t81 + t121 + t78, -t103 * t22 - t106 * t21 + t172 * t58 - t97 * t57, t103 * t81 - t132 * t97 + t1, t1 * t103 + t2 * t106 + t172 * t9 + t8 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t179, 0, 0, 0, 0, 0, 0, 0, 0, -t66, t65, 0 (-t200 * t66 - t115 * t65 + (-t115 * t209 + t200 * t92) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, -t66, 0, -t65, -t65 * t103 + t66 * t106 - t172 * t209 + t92 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, 0, -t180, 0, -pkin(8) * t179, pkin(8) * t180, 0, 0, 0, 0, -t65, 0, -t66, 0, -t42, t41 (t200 * t65 - t115 * t66 + (t115 * t92 + t200 * t209) * qJD(5)) * pkin(4) (-t200 * t42 - t115 * t41 + (t115 * t69 + t200 * t70) * qJD(5)) * pkin(4), 0, -t65, 0, 0, t66, 0, -t42, -t103 * t66 - t106 * t65 + t172 * t92 + t209 * t97, -t41, -t41 * t103 + t42 * t106 + t172 * t69 + t70 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, -0.2e1 * t108, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, 0.2e1 * t97, 0.2e1 * t103 * t97 + 0.2e1 * t106 * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, 0, -t22, t81, t4, t3, 0, 0, 0, -t21, 0, t81, t22, 0, t4 + 0.2e1 * t78, pkin(5) * t21 - t22 * qJ(6) - t57 * qJD(6), -t3 + 0.2e1 * t77 - 0.2e1 * t82, -t2 * pkin(5) + t1 * qJ(6) + t8 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, t65, 0, 0, 0, 0, 0, 0, 0, 0, -t66, 0, -t65, t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, -t66, 0, -t42, t41, 0, 0, 0, -t65, 0, 0, t66, 0, -t42, pkin(5) * t65 - t66 * qJ(6) + qJD(6) * t209, -t41, -t42 * pkin(5) - t41 * qJ(6) + t70 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t108, 0, 0, 0, 0, 0, 0, 0, 0, -t172, 0, t119 + t108, -pkin(5) * t172 + t97 * qJ(6) + t103 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, qJ(6) * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t21, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, 0, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
