% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:10:07
% EndTime: 2019-03-09 10:10:22
% DurationCPUTime: 9.23s
% Computational Cost: add. (18772->500), mult. (48596->655), div. (0->0), fcn. (38044->10), ass. (0->276)
t269 = sin(qJ(2));
t271 = cos(qJ(2));
t368 = cos(pkin(10));
t316 = qJD(1) * t368;
t307 = t271 * t316;
t367 = sin(pkin(10));
t315 = qJD(1) * t367;
t220 = -t269 * t315 + t307;
t287 = -t368 * t269 - t367 * t271;
t221 = t287 * qJD(1);
t268 = sin(qJ(4));
t390 = cos(qJ(4));
t169 = t390 * t220 + t221 * t268;
t165 = qJD(6) - t169;
t265 = sin(pkin(11));
t266 = cos(pkin(11));
t267 = sin(qJ(6));
t270 = cos(qJ(6));
t232 = t265 * t270 + t266 * t267;
t304 = qJD(2) * t315;
t245 = t269 * t304;
t305 = qJD(2) * t316;
t292 = t271 * t305 - t245;
t294 = -t268 * t220 + t390 * t221;
t333 = t269 * t305 + t271 * t304;
t274 = qJD(4) * t294 - t268 * t292 - t390 * t333;
t344 = t270 * t266;
t394 = -t265 * t267 + t344;
t395 = t394 * qJD(6);
t335 = t394 * t169 - t395;
t446 = -t165 * t335 - t232 * t274;
t224 = t232 * qJD(6);
t336 = t232 * t169 - t224;
t262 = qJD(2) + qJD(4);
t151 = t262 * t265 - t266 * t294;
t320 = qJD(4) * t390;
t328 = qJD(4) * t268;
t293 = t220 * t320 + t221 * t328 - t268 * t333 + t390 * t292;
t159 = t265 * t294;
t396 = t262 * t266 + t159;
t296 = t270 * t396;
t366 = t293 * t265;
t37 = t267 * (qJD(6) * t151 + t366) - qJD(6) * t296 - t293 * t344;
t97 = t270 * t151 + t267 * t396;
t445 = t336 * t97 - t394 * t37;
t98 = -t151 * t267 + t296;
t443 = t98 ^ 2;
t441 = t98 * t165;
t440 = t97 ^ 2;
t399 = t293 * t232;
t38 = qJD(6) * t97 + t399;
t309 = -t232 * t38 - t335 * t98;
t439 = t309 + t445;
t438 = -t37 * t232 - t335 * t97;
t385 = -qJ(3) - pkin(7);
t243 = t385 * t271;
t237 = qJD(1) * t243;
t225 = t367 * t237;
t242 = t385 * t269;
t236 = qJD(1) * t242;
t377 = qJD(2) * pkin(2);
t229 = t236 + t377;
t171 = t368 * t229 + t225;
t388 = t221 * pkin(8);
t145 = qJD(2) * pkin(3) + t171 + t388;
t317 = t368 * t237;
t172 = t367 * t229 - t317;
t389 = t220 * pkin(8);
t149 = t172 + t389;
t87 = t268 * t145 + t390 * t149;
t81 = t262 * qJ(5) + t87;
t256 = -t271 * pkin(2) - pkin(1);
t331 = qJD(1) * t256;
t239 = qJD(3) + t331;
t177 = -t220 * pkin(3) + t239;
t91 = -pkin(4) * t169 + qJ(5) * t294 + t177;
t54 = -t265 * t81 + t266 * t91;
t30 = -pkin(5) * t169 - pkin(9) * t151 + t54;
t55 = t265 * t91 + t266 * t81;
t39 = pkin(9) * t396 + t55;
t12 = t267 * t30 + t270 * t39;
t318 = qJD(2) * t385;
t216 = t271 * qJD(3) + t269 * t318;
t195 = t216 * qJD(1);
t217 = -t269 * qJD(3) + t271 * t318;
t196 = t217 * qJD(1);
t153 = -t367 * t195 + t368 * t196;
t134 = -pkin(8) * t292 + t153;
t154 = t368 * t195 + t367 * t196;
t135 = -pkin(8) * t333 + t154;
t45 = qJD(4) * t87 - t390 * t134 + t268 * t135;
t29 = pkin(5) * t366 + t45;
t86 = t390 * t145 - t268 * t149;
t80 = -t262 * pkin(4) + qJD(5) - t86;
t71 = -pkin(5) * t396 + t80;
t437 = -t12 * t294 + t29 * t232 - t335 * t71;
t373 = t97 * t294;
t436 = t373 + t446;
t310 = -t268 * t134 - t390 * t135 - t145 * t320 + t149 * t328;
t42 = qJD(5) * t262 - t310;
t327 = qJD(1) * qJD(2);
t319 = t269 * t327;
t252 = pkin(2) * t319;
t178 = pkin(3) * t333 + t252;
t53 = -pkin(4) * t274 - qJ(5) * t293 + qJD(5) * t294 + t178;
t21 = t265 * t53 + t266 * t42;
t13 = -pkin(9) * t366 + t21;
t300 = t267 * t39 - t270 * t30;
t20 = -t265 * t42 + t266 * t53;
t345 = t266 * t293;
t8 = -pkin(5) * t274 - pkin(9) * t345 + t20;
t3 = -qJD(6) * t300 + t270 * t13 + t267 * t8;
t4 = -qJD(6) * t12 - t267 * t13 + t270 * t8;
t435 = t336 * t12 - t4 * t232 + t3 * t394 - t335 * t300;
t416 = t169 * t265;
t434 = pkin(5) * t416;
t433 = pkin(9) * t416;
t359 = t294 * t262;
t432 = t274 - t359;
t353 = t169 * t262;
t431 = t293 - t353;
t306 = t336 * t165 - t274 * t394;
t375 = t294 * t98;
t430 = t306 + t375;
t360 = t294 ^ 2;
t420 = t169 ^ 2;
t428 = -t420 + t360;
t415 = t169 * t266;
t427 = -pkin(5) * t294 - pkin(9) * t415;
t19 = t21 * t266;
t426 = t54 * t415 + t19;
t424 = t336 * t98 - t38 * t394;
t422 = -t29 * t394 - t294 * t300 - t336 * t71;
t107 = t265 * t345;
t421 = -t151 * t415 + t107;
t362 = t151 * t294;
t417 = t165 * t294;
t414 = t169 * t294;
t398 = t294 * t396;
t411 = t169 * t55 - t20;
t410 = t45 * t265 - t294 * t55;
t408 = -t45 * t266 + t294 * t54;
t298 = t265 * t396;
t407 = t169 * t298 - t107;
t406 = -t177 * t169 + t310;
t118 = t266 ^ 2 * t293;
t297 = t266 * t396;
t361 = t151 * t265;
t286 = t297 - t361;
t348 = t265 ^ 2 * t293;
t405 = -t169 * t286 + t118 - t348;
t404 = t177 * t294 - t45;
t124 = -pkin(4) * t294 - qJ(5) * t169;
t402 = -0.2e1 * t327;
t176 = t368 * t236 + t225;
t155 = t176 + t388;
t254 = t368 * pkin(2) + pkin(3);
t323 = t367 * pkin(2);
t215 = t268 * t254 + t390 * t323;
t175 = -t367 * t236 + t317;
t291 = t175 - t389;
t369 = t215 * qJD(4) - t155 * t268 + t390 * t291;
t280 = qJD(2) * t287;
t288 = t367 * t269 - t368 * t271;
t283 = t268 * t288;
t393 = qJD(2) * t288;
t130 = -qJD(4) * t283 - t268 * t393 - t390 * t280 - t287 * t320;
t277 = t390 * t288;
t173 = -t268 * t287 + t277;
t82 = t274 * t173;
t400 = -t130 * t169 - t82;
t117 = t265 * t274;
t397 = -t169 * t415 + t117;
t391 = t221 ^ 2;
t272 = qJD(2) ^ 2;
t387 = t266 * pkin(5);
t259 = t266 * pkin(9);
t386 = t97 * t98;
t211 = qJ(5) + t215;
t181 = (-pkin(9) - t211) * t265;
t182 = t211 * t266 + t259;
t138 = t181 * t267 + t182 * t270;
t250 = t268 * t323;
t202 = -qJD(4) * t250 + t254 * t320;
t194 = qJD(5) + t202;
t100 = t390 * t155 + t268 * t291;
t330 = qJD(1) * t269;
t257 = pkin(2) * t330;
t188 = -pkin(3) * t221 + t257;
t101 = t124 + t188;
t58 = -t100 * t265 + t266 * t101;
t35 = t427 + t58;
t59 = t266 * t100 + t265 * t101;
t46 = t59 - t433;
t384 = qJD(6) * t138 + t194 * t232 - t267 * t46 + t270 * t35;
t137 = t181 * t270 - t182 * t267;
t383 = -qJD(6) * t137 - t194 * t394 + t267 * t35 + t270 * t46;
t161 = t368 * t216 + t367 * t217;
t140 = pkin(8) * t280 + t161;
t183 = t368 * t242 + t367 * t243;
t162 = pkin(8) * t287 + t183;
t184 = t367 * t242 - t368 * t243;
t163 = -pkin(8) * t288 + t184;
t160 = -t367 * t216 + t368 * t217;
t275 = pkin(8) * t393 + t160;
t60 = t390 * t140 + t162 * t320 - t163 * t328 + t268 * t275;
t129 = t262 * t277 - t268 * t280 - t287 * t328;
t174 = -t287 * t390 - t283;
t258 = t269 * t377;
t189 = -pkin(3) * t280 + t258;
t64 = t130 * pkin(4) + t129 * qJ(5) - t174 * qJD(5) + t189;
t26 = t265 * t64 + t266 * t60;
t115 = -t390 * t162 + t163 * t268;
t376 = t115 * t45;
t240 = (-pkin(9) - qJ(5)) * t265;
t241 = qJ(5) * t266 + t259;
t179 = t240 * t270 - t241 * t267;
t65 = t266 * t124 - t265 * t86;
t40 = t427 + t65;
t66 = t265 * t124 + t266 * t86;
t48 = t66 - t433;
t372 = qJD(5) * t394 + qJD(6) * t179 - t267 * t40 - t270 * t48;
t180 = t240 * t267 + t241 * t270;
t371 = -qJD(5) * t232 - qJD(6) * t180 + t267 * t48 - t270 * t40;
t370 = t369 - t434;
t365 = t129 * t265;
t364 = t129 * t266;
t350 = t174 * t265;
t349 = t221 * t220;
t273 = qJD(1) ^ 2;
t343 = t271 * t273;
t342 = t272 * t269;
t341 = t272 * t271;
t340 = t100 - t202;
t198 = pkin(3) * t288 + t256;
t113 = t173 * pkin(4) - t174 * qJ(5) + t198;
t116 = t268 * t162 + t390 * t163;
t70 = t265 * t113 + t266 * t116;
t119 = t266 * t274;
t334 = -t169 * t416 - t119;
t332 = t269 ^ 2 - t271 ^ 2;
t329 = qJD(2) * t221;
t325 = t269 * t343;
t25 = -t265 * t60 + t266 * t64;
t314 = pkin(1) * t402;
t69 = t266 * t113 - t116 * t265;
t308 = t271 * t319;
t214 = t390 * t254 - t250;
t302 = -t20 * t265 + t19;
t301 = t265 * t54 - t266 * t55;
t47 = pkin(5) * t173 - t174 * t259 + t69;
t56 = -pkin(9) * t350 + t70;
t23 = -t267 * t56 + t270 * t47;
t24 = t267 * t47 + t270 * t56;
t299 = t115 * t293 + t174 * t45;
t212 = -pkin(4) - t214;
t290 = -t129 * t80 + t299;
t289 = -t129 * t169 - t173 * t293 + t174 * t274;
t285 = -pkin(4) * t293 + qJ(5) * t274 - (-qJD(5) + t80) * t169;
t279 = t274 * t211 + t212 * t293 + (t194 - t80) * t169;
t61 = qJD(4) * t116 + t268 * t140 - t390 * t275;
t255 = -pkin(4) - t387;
t218 = t220 ^ 2;
t190 = t212 - t387;
t128 = t394 * t174;
t127 = t232 * t174;
t74 = pkin(5) * t350 + t115;
t72 = t87 + t434;
t52 = -t129 * t232 + t395 * t174;
t51 = t394 * t129 + t174 * t224;
t36 = -pkin(5) * t365 + t61;
t22 = pkin(9) * t365 + t26;
t14 = pkin(5) * t130 + pkin(9) * t364 + t25;
t6 = -qJD(6) * t24 + t270 * t14 - t267 * t22;
t5 = qJD(6) * t23 + t267 * t14 + t270 * t22;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t308, t332 * t402, t341, -0.2e1 * t308, -t342, 0, -pkin(7) * t341 + t269 * t314, pkin(7) * t342 + t271 * t314, 0, 0, t245 * t287 + (t221 * t288 - t287 * t307) * qJD(2), -t220 * t393 - t221 * t280 + t287 * t333 - t288 * t292, -t288 * t272, t220 * t280 + t288 * t333, t287 * t272, 0, -t220 * t258 + t256 * t333 + t257 * t393 + (-t239 * t287 + t160) * qJD(2), -t161 * qJD(2) - t221 * t258 - t239 * t393 - t252 * t287 + t256 * t292, t153 * t287 - t154 * t288 + t160 * t221 + t161 * t220 + t171 * t393 + t172 * t280 - t183 * t292 - t184 * t333, t153 * t183 + t154 * t184 + t171 * t160 + t172 * t161 + (t239 + t331) * t258, t129 * t294 + t174 * t293, t130 * t294 + t289, -t129 * t262, t400, -t130 * t262, 0, t130 * t177 - t169 * t189 + t173 * t178 - t198 * t274 - t262 * t61, -t129 * t177 + t174 * t178 - t189 * t294 + t198 * t293 - t262 * t60, t116 * t274 + t129 * t86 - t130 * t87 + t169 * t60 + t173 * t310 - t294 * t61 + t299, -t116 * t310 + t177 * t189 + t178 * t198 + t60 * t87 - t61 * t86 + t376, t174 * t118 - t151 * t364, -0.2e1 * t107 * t174 - t129 * t286, t151 * t130 - t266 * t289, t129 * t298 + t174 * t348, t130 * t396 + t265 * t289, t400, t54 * t130 - t169 * t25 + t20 * t173 + t265 * t290 - t274 * t69 - t396 * t61, -t55 * t130 + t61 * t151 + t169 * t26 - t21 * t173 + t266 * t290 + t274 * t70, -t25 * t151 + t26 * t159 + (t129 * t54 - t174 * t20 + t26 * t262 - t293 * t69) * t266 + (t129 * t55 - t174 * t21 - t293 * t70) * t265, t20 * t69 + t21 * t70 + t25 * t54 + t26 * t55 + t61 * t80 + t376, -t128 * t37 - t51 * t97, t127 * t37 - t128 * t38 - t51 * t98 - t52 * t97, -t128 * t274 + t130 * t97 - t165 * t51 - t173 * t37, t127 * t38 - t52 * t98, t127 * t274 + t130 * t98 - t165 * t52 - t173 * t38, t130 * t165 - t82, t127 * t29 - t130 * t300 + t165 * t6 + t173 * t4 - t23 * t274 - t36 * t98 + t38 * t74 + t52 * t71, -t12 * t130 + t128 * t29 - t165 * t5 - t173 * t3 + t24 * t274 + t36 * t97 - t37 * t74 - t51 * t71, -t12 * t52 - t127 * t3 - t128 * t4 + t23 * t37 - t24 * t38 - t300 * t51 + t5 * t98 - t6 * t97, t12 * t5 + t23 * t4 + t24 * t3 + t29 * t74 - t300 * t6 + t36 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t332 * t273, 0, t325, 0, 0, t273 * pkin(1) * t269, pkin(1) * t343, 0, 0, t349, -t218 + t391, -t245 + (t307 - t220) * qJD(2), -t349, -t329 - t333, 0, -t175 * qJD(2) + t220 * t257 + t239 * t221 + t153, qJD(2) * t176 - t220 * t239 + t221 * t257 - t154 -(t172 + t175) * t221 + (-t176 + t171) * t220 + (-t368 * t292 - t333 * t367) * pkin(2), -t171 * t175 - t172 * t176 + (t368 * t153 + t367 * t154 - t239 * t330) * pkin(2), t414, t428, t431, -t414, t432, 0, t169 * t188 - t369 * t262 + t404, t188 * t294 + t340 * t262 + t406, t215 * t274 - t214 * t293 + (-t369 - t87) * t294 + (-t340 + t86) * t169, -t177 * t188 - t45 * t214 - t215 * t310 - t340 * t87 - t369 * t86, t421, t405, t362 - t397, t407, t334 + t398, -t414, t169 * t58 + t265 * t279 - t369 * t396 + t408, t369 * t151 - t169 * t59 + t279 * t266 + t410, t194 * t297 - t59 * t396 + t58 * t151 + (t151 * t194 + t411) * t265 + t426, -t301 * t194 + t302 * t211 + t45 * t212 + t369 * t80 - t54 * t58 - t55 * t59, t438, t439, t436, t424, t430, t417, -t137 * t274 - t165 * t384 + t190 * t38 - t370 * t98 + t422, t138 * t274 + t165 * t383 - t190 * t37 + t370 * t97 + t437, t137 * t37 - t138 * t38 - t383 * t98 + t384 * t97 + t435, -t12 * t383 + t4 * t137 + t3 * t138 + t29 * t190 + t300 * t384 + t370 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t329 + t333, -t245 + (t307 + t220) * qJD(2), -t218 - t391, -t171 * t221 - t172 * t220 + t252, 0, 0, 0, 0, 0, 0, -t274 - t359, t293 + t353, -t420 - t360, -t87 * t169 - t294 * t86 + t178, 0, 0, 0, 0, 0, 0, t334 - t398, t362 + t397, -t348 - t118 + (-t297 - t361) * t169, t169 * t301 + t20 * t266 + t21 * t265 + t294 * t80, 0, 0, 0, 0, 0, 0, t306 - t375, t373 - t446, t309 - t445, -t12 * t335 + t3 * t232 + t294 * t71 - t300 * t336 + t394 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t414, t428, t431, -t414, t432, 0, t87 * t262 + t404, t262 * t86 + t406, 0, 0, t421, t405, t266 * t420 - t117 + t362, t407, -t265 * t420 - t119 + t398, -t414, t169 * t65 + t265 * t285 + t396 * t87 + t408, -t87 * t151 - t169 * t66 + t266 * t285 + t410, qJD(5) * t297 - t66 * t396 + t65 * t151 + (qJD(5) * t151 + t411) * t265 + t426, -t45 * pkin(4) + qJ(5) * t302 - qJD(5) * t301 - t54 * t65 - t55 * t66 - t80 * t87, t438, t439, t436, t424, t430, t417, t165 * t371 - t179 * t274 + t255 * t38 + t72 * t98 + t422, -t165 * t372 + t180 * t274 - t255 * t37 - t72 * t97 + t437, t179 * t37 - t180 * t38 - t371 * t97 + t372 * t98 + t435, t12 * t372 + t4 * t179 + t3 * t180 + t29 * t255 - t300 * t371 - t71 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151 * t169 + t366, -t169 * t396 + t345, -t151 ^ 2 - t396 ^ 2, t151 * t54 - t396 * t55 + t45, 0, 0, 0, 0, 0, 0, t97 * t165 + t38, -t37 + t441, -t440 - t443, -t12 * t98 - t300 * t97 + t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t440 - t443, -t37 - t441, t386, -t399 + (-qJD(6) + t165) * t97, -t274, t12 * t165 - t71 * t97 + t4, -t165 * t300 - t71 * t98 - t3, 0, 0;];
tauc_reg  = t1;
