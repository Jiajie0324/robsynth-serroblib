% Calculate vector of inverse dynamics joint torques for
% S6RRPRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRPP5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRPP5_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:03:31
% EndTime: 2019-03-09 10:06:15
% DurationCPUTime: 152.86s
% Computational Cost: add. (25585->1575), mult. (66505->1868), div. (0->0), fcn. (62338->6), ass. (0->729)
t1501 = Icges(4,4) - Icges(3,5);
t1500 = Icges(4,5) - Icges(3,6);
t1499 = Icges(5,4) - Icges(7,4) - Icges(6,5);
t1498 = Icges(4,1) + Icges(3,3);
t1425 = Icges(5,1) + Icges(6,1) + Icges(7,1);
t1493 = Icges(6,4) + Icges(5,5) - Icges(7,5);
t1423 = Icges(5,2) + Icges(7,2) + Icges(6,3);
t1491 = Icges(5,6) - Icges(6,6) + Icges(7,6);
t725 = sin(qJ(2));
t728 = cos(qJ(2));
t1450 = t1500 * t725 - t1501 * t728;
t727 = cos(qJ(4));
t1497 = t1499 * t727;
t724 = sin(qJ(4));
t1496 = t1499 * t724;
t1192 = Icges(3,4) * t725;
t606 = Icges(3,2) * t728 + t1192;
t1172 = Icges(4,6) * t725;
t869 = Icges(4,3) * t728 + t1172;
t1478 = -t606 - t869;
t709 = Icges(3,4) * t728;
t608 = Icges(3,1) * t725 + t709;
t1171 = Icges(4,6) * t728;
t871 = Icges(4,2) * t725 + t1171;
t1495 = t608 + t871;
t729 = cos(qJ(1));
t1494 = t1498 * t729;
t1492 = Icges(6,2) + Icges(5,3) + Icges(7,3);
t1490 = -t1491 * t727 - t1493 * t724;
t1489 = -t1423 * t727 - t1496;
t1488 = t1425 * t724 + t1497;
t726 = sin(qJ(1));
t1141 = t726 * t728;
t1145 = t725 * t726;
t1453 = t1141 * t1501 - t1500 * t1145 + t1494;
t1465 = t1450 * t729 + t1498 * t726;
t1138 = t728 * t729;
t1142 = t726 * t727;
t527 = t1142 * t725 + t724 * t729;
t1139 = t727 * t729;
t528 = -t1145 * t724 + t1139;
t244 = -Icges(5,5) * t528 + Icges(5,6) * t527 + Icges(5,3) * t1141;
t250 = -Icges(6,4) * t528 + Icges(6,2) * t1141 - Icges(6,6) * t527;
t1467 = t244 + t250;
t1487 = t1467 * t1138;
t1486 = t1467 * t1141;
t1173 = Icges(3,6) * t729;
t428 = Icges(3,4) * t1141 - Icges(3,2) * t1145 - t1173;
t1190 = Icges(4,4) * t729;
t667 = Icges(4,6) * t1145;
t441 = Icges(4,2) * t1141 + t1190 - t667;
t1485 = t428 * t725 - t441 * t728;
t609 = Icges(3,1) * t728 - t1192;
t437 = Icges(3,5) * t726 + t609 * t729;
t870 = -Icges(4,3) * t725 + t1171;
t438 = Icges(4,5) * t726 - t729 * t870;
t1484 = -t437 * t1141 - t438 * t1145;
t1181 = Icges(4,5) * t729;
t439 = Icges(4,6) * t1141 - Icges(4,3) * t1145 + t1181;
t1483 = t428 + t439;
t881 = -Icges(3,2) * t725 + t709;
t429 = Icges(3,6) * t726 + t729 * t881;
t1482 = t429 - t438;
t1182 = Icges(3,5) * t729;
t672 = Icges(3,4) * t1145;
t436 = Icges(3,1) * t1141 - t1182 - t672;
t1481 = t436 + t441;
t1191 = Icges(4,4) * t726;
t1143 = t725 * t729;
t668 = Icges(4,6) * t1143;
t440 = -Icges(4,2) * t1138 + t1191 + t668;
t1480 = t437 - t440;
t602 = Icges(3,5) * t725 + Icges(3,6) * t728;
t879 = Icges(4,4) * t725 + Icges(4,5) * t728;
t1479 = t602 - t879;
t872 = Icges(4,2) * t728 - t1172;
t1476 = t609 + t872;
t1475 = t1478 * qJD(2);
t1474 = t1495 * qJD(2);
t1446 = -t436 * t728 + t439 * t725 + t1485;
t1473 = t870 + t881;
t1472 = -t1490 * t725 + t1492 * t728;
t1320 = t1489 * t725 - t1491 * t728;
t1319 = t1488 * t725 + t1493 * t728;
t1471 = (t1491 * t724 - t1493 * t727) * t728;
t1470 = (-t1423 * t724 + t1497) * t728;
t1469 = (-t1425 * t727 + t1496) * t728;
t1396 = t1489 * t728 + t1491 * t725;
t1395 = t1488 * t728 - t1493 * t725;
t477 = Icges(6,5) * t528;
t240 = -Icges(6,6) * t1141 + Icges(6,3) * t527 + t477;
t483 = Icges(5,4) * t528;
t253 = Icges(5,2) * t527 + Icges(5,6) * t1141 - t483;
t1468 = t240 + t253;
t476 = Icges(6,5) * t527;
t259 = -Icges(6,1) * t528 + Icges(6,4) * t1141 - t476;
t482 = Icges(5,4) * t527;
t261 = Icges(5,1) * t528 - Icges(5,5) * t1141 - t482;
t1466 = -t259 + t261;
t841 = t606 * t725 - t608 * t728;
t1448 = -t725 * t869 + t728 * t871 - t841;
t1464 = t1465 * t729 + t1484;
t237 = Icges(7,5) * t528 + Icges(7,6) * t527 + Icges(7,3) * t1141;
t1463 = t237 + t1467;
t1341 = t437 * t1138 + t438 * t1143 + t1465 * t726;
t1462 = -t436 * t1138 + t439 * t1143 + t1453 * t726;
t1461 = t429 * t725 + t440 * t728;
t1421 = t1490 * t728 + t1492 * t725;
t1365 = -t1446 * t726 + t1453 * t729;
t1364 = -t1141 * t440 - t1145 * t429 - t1464;
t1363 = t1138 * t441 - t1143 * t428 - t1462;
t1362 = -t1138 * t440 - t1143 * t429 + t1341;
t1361 = t1481 * t725 + t1483 * t728;
t1360 = t1480 * t725 + t1482 * t728;
t526 = t1143 * t724 + t1142;
t475 = Icges(6,5) * t526;
t1146 = t724 * t726;
t525 = -t1139 * t725 + t1146;
t239 = Icges(6,6) * t1138 + Icges(6,3) * t525 + t475;
t1189 = Icges(5,4) * t526;
t251 = -Icges(5,2) * t525 + Icges(5,6) * t1138 + t1189;
t1460 = t239 - t251;
t242 = Icges(5,5) * t526 - Icges(5,6) * t525 + Icges(5,3) * t1138;
t248 = Icges(6,4) * t526 + Icges(6,2) * t1138 + Icges(6,6) * t525;
t1459 = -t242 - t248;
t1179 = Icges(6,5) * t525;
t257 = Icges(6,1) * t526 + Icges(6,4) * t1138 + t1179;
t481 = Icges(5,4) * t525;
t260 = Icges(5,1) * t526 + Icges(5,5) * t1138 - t481;
t1458 = t257 + t260;
t1457 = t1475 * t729 + (-t1473 * t726 + t1173 - t1181) * qJD(1);
t1456 = qJD(1) * t1482 + t1475 * t726;
t1455 = -t1474 * t729 + (-t1476 * t726 + t1182 - t1190) * qJD(1);
t1454 = t1474 * t726 + (-t729 * t872 + t1191 - t437) * qJD(1);
t1452 = t1473 * qJD(2);
t1451 = t1476 * qJD(2);
t1449 = t1479 * qJD(2);
t1447 = t1478 * t728 - t1495 * t725;
t1445 = t437 * t728 + t438 * t725 - t1461;
t1345 = t1479 * t726;
t1035 = qJD(4) * t729;
t1044 = qJD(1) * t729;
t1041 = qJD(2) * t728;
t985 = t726 * t1041;
t523 = t725 * t1044 + t985;
t1037 = qJD(4) * t725;
t690 = qJD(1) + t1037;
t225 = t1146 * t690 + (-t1035 - t523) * t727;
t839 = t727 * t690;
t949 = qJD(1) * t725 + qJD(4);
t226 = t726 * t839 + (t729 * t949 + t985) * t724;
t1042 = qJD(2) * t726;
t987 = t725 * t1042;
t989 = t728 * t1044;
t805 = -t987 + t989;
t114 = Icges(7,5) * t226 + Icges(7,6) * t225 - Icges(7,3) * t805;
t118 = Icges(5,5) * t226 - Icges(5,6) * t225 + Icges(5,3) * t805;
t122 = Icges(6,4) * t226 + Icges(6,2) * t805 + Icges(6,6) * t225;
t1444 = -t114 + t118 + t122;
t1040 = qJD(2) * t729;
t984 = t728 * t1040;
t227 = qJD(1) * t527 + qJD(4) * t526 - t727 * t984;
t228 = t729 * t839 + (-t726 * t949 + t984) * t724;
t986 = t725 * t1040;
t1045 = qJD(1) * t726;
t990 = t728 * t1045;
t804 = t986 + t990;
t115 = Icges(7,5) * t228 + Icges(7,6) * t227 + Icges(7,3) * t804;
t119 = Icges(5,5) * t228 - Icges(5,6) * t227 - Icges(5,3) * t804;
t123 = Icges(6,4) * t228 - Icges(6,2) * t804 + Icges(6,6) * t227;
t1443 = -t115 + t119 + t123;
t116 = Icges(6,5) * t226 + Icges(6,6) * t805 + Icges(6,3) * t225;
t120 = Icges(7,4) * t226 + Icges(7,2) * t225 - Icges(7,6) * t805;
t124 = Icges(5,4) * t226 - Icges(5,2) * t225 + Icges(5,6) * t805;
t1442 = t116 + t120 - t124;
t117 = Icges(6,5) * t228 - Icges(6,6) * t804 + Icges(6,3) * t227;
t121 = Icges(7,4) * t228 + Icges(7,2) * t227 + Icges(7,6) * t804;
t125 = Icges(5,4) * t228 - Icges(5,2) * t227 - Icges(5,6) * t804;
t1441 = t117 + t121 - t125;
t126 = Icges(7,1) * t226 + Icges(7,4) * t225 - Icges(7,5) * t805;
t128 = Icges(6,1) * t226 + Icges(6,4) * t805 + Icges(6,5) * t225;
t130 = Icges(5,1) * t226 - Icges(5,4) * t225 + Icges(5,5) * t805;
t1440 = t126 + t128 + t130;
t127 = Icges(7,1) * t228 + Icges(7,4) * t227 + Icges(7,5) * t804;
t129 = Icges(6,1) * t228 - Icges(6,4) * t804 + Icges(6,5) * t227;
t131 = Icges(5,1) * t228 - Icges(5,4) * t227 - Icges(5,5) * t804;
t1439 = t127 + t129 + t131;
t236 = Icges(7,5) * t526 + Icges(7,6) * t525 - Icges(7,3) * t1138;
t1399 = t236 + t1459;
t478 = Icges(7,4) * t526;
t245 = Icges(7,2) * t525 - Icges(7,6) * t1138 + t478;
t1437 = t245 + t1460;
t480 = Icges(7,4) * t528;
t246 = Icges(7,2) * t527 + Icges(7,6) * t1141 + t480;
t1326 = -t246 - t1468;
t1185 = Icges(7,4) * t525;
t254 = Icges(7,1) * t526 - Icges(7,5) * t1138 + t1185;
t1436 = t254 + t1458;
t479 = Icges(7,4) * t527;
t256 = -Icges(7,1) * t528 - Icges(7,5) * t1141 - t479;
t1325 = -t256 + t1466;
t1435 = qJD(2) * t1472 + qJD(4) * t1471;
t1434 = qJD(2) * t1320 + qJD(4) * t1470;
t1433 = qJD(2) * t1319 + qJD(4) * t1469;
t1432 = -t1395 * t724 + t1396 * t727;
t1431 = t1466 * t526 + t1468 * t525 - t1487;
t1430 = t1466 * t528 + t1468 * t527 + t1486;
t1393 = rSges(7,3) + qJ(6);
t1148 = t602 * t729;
t229 = -t726 * t841 - t1148;
t542 = t879 * t729;
t232 = -t1141 * t871 + t1145 * t869 - t542;
t1429 = t229 - t232;
t1359 = t1448 * t729 + t1345;
t1372 = t1138 * t1459 - t1458 * t526 - t1460 * t525;
t1131 = t525 * t245 + t526 * t254;
t77 = -t1138 * t236 + t1131;
t1405 = t77 - t1372;
t1371 = t1141 * t1459 + t1458 * t528 + t1460 * t527;
t1129 = t527 * t245 + t528 * t254;
t83 = -t1141 * t236 - t1129;
t1403 = t83 - t1371;
t1428 = t1393 * t725;
t1426 = t1465 * qJD(1);
t1287 = t1138 * t1421 - t1395 * t526 - t1396 * t525;
t1286 = t1141 * t1421 + t1395 * t528 + t1396 * t527;
t1073 = t528 * rSges(5,1) - t527 * rSges(5,2);
t281 = rSges(5,3) * t1141 - t1073;
t1227 = rSges(5,3) * t725;
t920 = rSges(5,1) * t724 + rSges(5,2) * t727;
t458 = -t728 * t920 + t1227;
t1036 = qJD(4) * t728;
t574 = -t1036 * t726 + t1040;
t1420 = -t281 * t690 - t458 * t574;
t1419 = t729 ^ 2;
t1418 = qJD(1) * t1479 + t1447 * qJD(2) + t1451 * t728 - t1452 * t725;
t1417 = qJD(1) * t1453 + qJD(2) * t1361 + t1454 * t728 + t1456 * t725;
t1416 = -qJD(2) * t1360 + t1455 * t728 - t1457 * t725 + t1426;
t1415 = -t1482 * t726 + t1483 * t729;
t474 = t527 * qJ(5);
t349 = t528 * pkin(4) + t474;
t589 = t729 * pkin(3) - pkin(8) * t1141;
t720 = t729 * pkin(7);
t933 = t589 + t720;
t792 = t349 + t933;
t918 = -t528 * rSges(6,1) - t527 * rSges(6,3);
t1414 = t792 - t918;
t1413 = t1362 * t726 - t1363 * t729;
t1412 = t1364 * t726 - t1365 * t729;
t1411 = t1473 + t1495;
t1410 = t1476 + t1478;
t1409 = (t667 + t672 + (Icges(3,2) + Icges(4,3)) * t1141 - t1481) * t729 + (-Icges(4,3) * t1138 - t606 * t729 + t1480 - t668) * t726;
t1408 = t1448 * qJD(1) - qJD(2) * t1450;
t1407 = -t1449 * t729 + (-t1450 * t726 - t1445 + t1494) * qJD(1);
t1406 = qJD(1) * t1446 - t1449 * t726 + t1426;
t1340 = t1141 * t1443 - t1399 * t805 + t1436 * t226 + t1437 * t225 - t1439 * t528 - t1441 * t527;
t1339 = t1141 * t1444 - t1325 * t226 + t1326 * t225 - t1440 * t528 - t1442 * t527 + t1463 * t805;
t1338 = t1138 * t1443 + t1399 * t804 + t1436 * t228 + t1437 * t227 + t1439 * t526 + t1441 * t525;
t1337 = t1138 * t1444 - t1325 * t228 + t1326 * t227 + t1440 * t526 + t1442 * t525 - t1463 * t804;
t1331 = t1141 * t1435 - t1395 * t226 - t1396 * t225 + t1421 * t805 - t1433 * t528 - t1434 * t527;
t1330 = t1138 * t1435 - t1395 * t228 - t1396 * t227 - t1421 * t804 + t1433 * t526 + t1434 * t525;
t1130 = t246 * t525 - t526 * t256;
t78 = t1138 * t237 - t1130;
t1404 = t78 - t1431;
t859 = t246 * t527 - t256 * t528;
t84 = t1141 * t237 + t859;
t1402 = t84 + t1430;
t860 = t245 * t727 - t254 * t724;
t91 = -t236 * t725 + t728 * t860;
t862 = t239 * t727 - t257 * t724;
t93 = t248 * t725 + t728 * t862;
t857 = t251 * t727 + t260 * t724;
t95 = t242 * t725 - t728 * t857;
t1401 = t91 + t93 + t95;
t858 = -t246 * t727 - t256 * t724;
t92 = t725 * t237 + t728 * t858;
t861 = -t240 * t727 - t259 * t724;
t94 = t250 * t725 + t728 * t861;
t856 = t253 * t727 - t261 * t724;
t96 = t244 * t725 - t728 * t856;
t1400 = t92 + t94 + t96;
t1285 = t1421 * t725 - t1432 * t728;
t573 = t1035 * t728 + t1042;
t1398 = (t1432 + t1472) * t690 + (t1421 * t726 - t856 + t858 + t861) * t574 + (-t1421 * t729 + t857 - t860 - t862) * t573;
t1281 = (t1425 * t525 + t1189 - t1437 - t475 - t478) * t573 - (-t1425 * t527 - t1326 + t477 + t480 - t483) * t574 + (t1396 - t1469) * t690;
t1394 = (-t1423 * t526 + t1179 + t1185 + t1436 - t481) * t573 - (t1423 * t528 - t1325 - t476 - t479 + t482) * t574 + (-t1395 - t1470) * t690;
t1375 = rSges(7,1) + pkin(5);
t1392 = t1359 * qJD(1);
t1391 = -t527 * rSges(7,2) - t1141 * t1393;
t1164 = qJ(3) * t728;
t618 = pkin(2) * t725 - t1164;
t567 = t618 * t1045;
t1038 = qJD(3) * t729;
t662 = qJ(3) * t1141;
t553 = -pkin(2) * t1145 + t662;
t954 = -qJD(1) * t553 + t728 * t1038;
t1390 = t567 - t954;
t280 = rSges(6,2) * t1141 + t918;
t705 = t725 * qJ(3);
t1305 = t728 * pkin(2) + t705;
t556 = t1305 * t726;
t630 = t726 * pkin(1) - t720;
t593 = qJD(1) * t630;
t1307 = -qJD(1) * t556 - t593;
t702 = pkin(3) * t1044;
t658 = t725 * t1038;
t1055 = qJ(3) * t984 + t658;
t701 = pkin(7) * t1044;
t995 = t701 + t1055;
t1388 = -qJD(1) * t589 - t1307 + t702 + t995;
t1387 = t1429 * qJD(1);
t1386 = (t1434 * t727 - t1433 * t724 + (t1395 * t727 + t1396 * t724) * qJD(4) + t1421 * qJD(2)) * t728 + (qJD(2) * t1432 + t1435) * t725;
t1385 = t1471 * t690 + (-t1491 * t528 - t1493 * t527) * t574 + (-t1491 * t526 - t1493 * t525) * t573;
t1384 = t1287 * t690 + t1431 * t574;
t1377 = -t1286 * t690 + t1430 * t574;
t1376 = (t236 * t729 + t237 * t726) * t728 - t1131;
t1109 = t525 * rSges(7,2) - t1138 * t1393 + t1375 * t526;
t1374 = qJD(2) * t1412 + t1387;
t1373 = qJD(2) * t1413 + t1392;
t1370 = qJD(2) * t1445 + t1455 * t725 + t1457 * t728;
t1369 = qJD(2) * t1446 + t1454 * t725 - t1456 * t728;
t1367 = -t1408 * t726 + t1418 * t729;
t1366 = t1408 * t729 + t1418 * t726;
t1357 = -t1409 * t725 + t1415 * t728;
t470 = qJD(5) * t525;
t1078 = t470 + t658;
t133 = t228 * pkin(4) + qJ(5) * t227 + t470;
t1356 = -t690 * t349 - t1078 + t133 + t1388;
t1355 = (t1410 * t728 - t1411 * t725) * qJD(1);
t1354 = t1417 * t1419 + (t1407 * t726 + (-t1406 + t1416) * t729) * t726;
t1353 = t1406 * t1419 + (t1416 * t726 + (-t1407 + t1417) * t729) * t726;
t1352 = t1453 + t1461;
t1144 = t725 * t727;
t1147 = t724 * t725;
t692 = pkin(4) * t1147;
t552 = -qJ(5) * t1144 + t692;
t557 = (-pkin(4) * t724 + qJ(5) * t727) * t728;
t1351 = t1040 * t1305 + t557 * t1045 + t574 * t552 + t1390;
t631 = t729 * pkin(1) + t726 * pkin(7);
t1350 = qJD(1) * t631;
t1031 = qJD(6) * t728;
t1231 = rSges(4,2) * t725;
t914 = rSges(4,3) * t728 + t1231;
t1349 = t914 * t1042;
t1025 = qJD(2) * qJD(3);
t1348 = qJDD(3) * t725 + t728 * t1025;
t1027 = t527 * qJD(5);
t344 = t526 * pkin(4) + qJ(5) * t525;
t588 = t726 * pkin(3) + pkin(8) * t1138;
t646 = pkin(8) * t987;
t404 = qJD(1) * t588 - t646;
t565 = pkin(2) * t1138 + qJ(3) * t1143;
t704 = qJD(3) * t725;
t656 = t726 * t704;
t944 = qJD(1) * t565 - t618 * t1042 + t1350 + t656;
t830 = t404 + t944;
t1347 = -t690 * t344 + t573 * t557 + t1027 - t830;
t1346 = t1148 - t542;
t1106 = -t1375 * t528 + t1391;
t1022 = qJDD(4) * t728;
t1026 = qJD(1) * qJD(2);
t590 = qJDD(2) * t726 + t729 * t1026;
t320 = -qJD(4) * t804 + t1022 * t729 + t590;
t591 = -qJDD(2) * t729 + t726 * t1026;
t321 = qJD(4) * t805 + t1022 * t726 + t591;
t572 = qJD(2) * t1036 + qJDD(4) * t725 + qJDD(1);
t1344 = t1286 * t572 + t1331 * t690 - t1339 * t574 + t1340 * t573 + t1402 * t321 + t1403 * t320;
t1343 = t1287 * t572 + t1330 * t690 - t1337 * t574 + t1338 * t573 + t1404 * t321 + t1405 * t320;
t1342 = t1450 * qJD(1);
t26 = (-qJD(2) * t860 - t115) * t725 + (-qJD(2) * t236 + t121 * t727 - t127 * t724 + (-t245 * t724 - t254 * t727) * qJD(4)) * t728;
t28 = (-qJD(2) * t862 + t123) * t725 + (qJD(2) * t248 + t117 * t727 - t129 * t724 + (-t239 * t724 - t257 * t727) * qJD(4)) * t728;
t30 = (qJD(2) * t857 + t119) * t725 + (qJD(2) * t242 - t125 * t727 - t131 * t724 + (t251 * t724 - t260 * t727) * qJD(4)) * t728;
t1336 = t26 + t28 + t30;
t27 = (-qJD(2) * t858 - t114) * t725 + (qJD(2) * t237 + t120 * t727 - t126 * t724 + (t246 * t724 - t256 * t727) * qJD(4)) * t728;
t29 = (-qJD(2) * t861 + t122) * t725 + (qJD(2) * t250 + t116 * t727 - t128 * t724 + (t240 * t724 - t259 * t727) * qJD(4)) * t728;
t31 = (qJD(2) * t856 + t118) * t725 + (qJD(2) * t244 - t124 * t727 - t130 * t724 + (t253 * t724 + t261 * t727) * qJD(4)) * t728;
t1335 = t27 + t29 + t31;
t1334 = t1405 * t573 - t574 * t78 + t1384;
t1333 = t1403 * t573 - t574 * t84 - t1377;
t1332 = t1285 * t690 - t1400 * t574 + t1401 * t573;
t1324 = t1396 * t726;
t1323 = t1396 * t729;
t1322 = t1395 * t726;
t1321 = t1395 * t729;
t1318 = t1398 * t728;
t1317 = t1399 * t573 - t1421 * t690 + t1463 * t574;
t1279 = t1400 * t726 + t1401 * t729;
t1316 = -t1400 * t729 + t1401 * t726;
t1278 = t1402 * t726 + t1403 * t729;
t1315 = -t1402 * t729 + t1403 * t726;
t1277 = t1404 * t726 + t1405 * t729;
t1314 = -t1404 * t729 + t1405 * t726;
t916 = rSges(7,1) * t724 - rSges(7,2) * t727;
t1082 = (-pkin(5) * t724 - t916) * t728 - t1428;
t653 = t726 * t1031;
t52 = -t1082 * t573 + t1109 * t690 - t1347 - t653;
t1312 = t1129 + (t236 * t726 - t237 * t729) * t728;
t1259 = -pkin(2) - pkin(8);
t1140 = t727 * t728;
t822 = t1140 * t573 - t525 * t690;
t1311 = t225 + t822;
t821 = t1140 * t574 - t527 * t690;
t1310 = t227 + t821;
t1105 = -t280 + t349;
t340 = -t525 * pkin(4) + qJ(5) * t526;
t341 = -t525 * rSges(7,1) + t526 * rSges(7,2);
t1309 = t340 + t341;
t345 = t527 * pkin(4) - qJ(5) * t528;
t346 = t527 * rSges(7,1) - t528 * rSges(7,2);
t1308 = -t345 - t346;
t1306 = t1375 * t1147;
t718 = t728 * pkin(8);
t993 = t718 + t1305;
t1050 = t726 ^ 2 + t1419;
t1242 = -rSges(5,3) - pkin(2);
t1019 = -pkin(8) + t1242;
t966 = -pkin(1) - t705;
t1304 = t1019 * t728 + t966;
t1243 = -rSges(6,2) - pkin(2);
t1020 = -pkin(8) + t1243;
t1303 = t1020 * t728 + t966;
t1258 = -pkin(3) - pkin(7);
t1302 = t1258 * t726;
t1301 = t227 * rSges(7,2) + t1375 * t228 + t1393 * t804;
t274 = t526 * rSges(6,1) + rSges(6,2) * t1138 + t525 * rSges(6,3);
t1229 = rSges(6,2) * t725;
t917 = rSges(6,1) * t724 - rSges(6,3) * t727;
t457 = -t728 * t917 + t1229;
t1300 = -t274 * t690 + t457 * t573 + t1347;
t1013 = t724 * t1138;
t1299 = t1013 * t1375 + t1393 * t1143;
t1014 = t724 * t1141;
t1298 = t1014 * t1375 + t1393 * t1145;
t1294 = -rSges(7,2) * t225 + t653;
t710 = t725 * rSges(4,3);
t915 = -rSges(4,2) * t728 + t710;
t1240 = pkin(8) * t725;
t965 = -t618 - t1240;
t889 = t965 * qJD(2);
t800 = t729 * t889 + t658;
t1071 = -t556 - t630;
t996 = t589 + t1071;
t927 = t996 * qJD(1);
t753 = t927 + t800;
t89 = t1420 + t753;
t1209 = t729 * t89;
t275 = t526 * rSges(5,1) - t525 * rSges(5,2) + rSges(5,3) * t1138;
t90 = t275 * t690 - t458 * t573 + t830;
t1293 = t726 * t90 + t1209;
t1003 = t349 - t1106;
t354 = t574 * t557;
t774 = (t889 - t1031) * t729;
t51 = t1003 * t690 - t1082 * t574 + t1078 - t354 + t774 + t927;
t1217 = t51 * t729;
t1290 = t52 * t726 + t1217;
t1237 = g(2) * t726;
t928 = g(1) * t729 + t1237;
t1280 = t1385 * t728;
t1276 = t1285 * t572 + t1386 * t690;
t1269 = qJD(5) * t225 - qJDD(5) * t527 + t690 * t133 + t572 * t344;
t1033 = qJD(5) * t728;
t654 = t727 * t1033;
t1043 = qJD(2) * t725;
t802 = -t1036 * t727 + t1043 * t724;
t803 = -t1036 * t724 - t1043 * t727;
t270 = pkin(4) * t802 + qJ(5) * t803 + t654;
t1268 = qJD(5) * t227 + qJDD(5) * t525 - t574 * t270 + t321 * t557;
t1264 = m(4) / 0.2e1;
t1263 = m(5) / 0.2e1;
t1262 = m(6) / 0.2e1;
t1261 = m(7) / 0.2e1;
t1260 = -m(6) - m(7);
t1257 = t320 / 0.2e1;
t1256 = t321 / 0.2e1;
t1255 = t572 / 0.2e1;
t1254 = -t573 / 0.2e1;
t1253 = t573 / 0.2e1;
t1252 = -t574 / 0.2e1;
t1251 = t574 / 0.2e1;
t1250 = t590 / 0.2e1;
t1249 = t591 / 0.2e1;
t1248 = -t690 / 0.2e1;
t1247 = t690 / 0.2e1;
t1241 = pkin(4) * t226;
t1239 = g(1) * t726;
t1236 = g(3) * t727;
t1235 = g(3) * t728;
t1232 = rSges(3,1) * t728;
t1226 = rSges(7,3) * t728;
t1225 = pkin(8) * qJD(2);
t171 = t525 * t574 - t527 * t573;
t1004 = t344 + t1109;
t1032 = qJD(6) * t725;
t1039 = qJD(3) * t728;
t923 = t565 * t1040 + t556 * t1042 - t1039;
t816 = t588 * t1040 - t589 * t1042 + t923;
t786 = -t349 * t573 + t654 + t816;
t43 = t1004 * t574 + t1106 * t573 - t1032 + t786;
t1224 = t171 * t43;
t1223 = t26 * t573;
t1222 = t27 * t574;
t1221 = t28 * t573;
t1220 = t29 * t574;
t1219 = t30 * t573;
t1218 = t31 * t574;
t70 = t1105 * t690 - t457 * t574 - t354 + t470 + t753;
t1211 = t70 * t457;
t712 = t726 * rSges(4,1);
t711 = t726 * rSges(3,3);
t714 = t728 * rSges(6,2);
t713 = t728 * rSges(5,3);
t1208 = t91 * t320;
t1207 = t92 * t321;
t1206 = t93 * t320;
t1205 = t94 * t321;
t1204 = t95 * t320;
t1203 = t96 * t321;
t1201 = -rSges(7,2) - qJ(5);
t1200 = -rSges(4,3) - qJ(3);
t1199 = -rSges(6,3) - qJ(5);
t1051 = rSges(3,2) * t1145 + t729 * rSges(3,3);
t455 = rSges(3,1) * t1141 - t1051;
t1083 = -t455 - t630;
t620 = rSges(3,1) * t725 + rSges(3,2) * t728;
t988 = t620 * t1040;
t208 = qJD(1) * t1083 - t988;
t1161 = t208 * t726;
t1160 = t208 * t729;
t459 = rSges(3,1) * t1138 - rSges(3,2) * t1143 + t711;
t209 = qJD(1) * t459 - t1042 * t620 + t1350;
t564 = t620 * t729;
t1159 = t209 * t564;
t730 = qJD(2) ^ 2;
t1137 = t728 * t730;
t1127 = t225 * qJ(5) - t1027;
t132 = t1127 + t1241;
t1136 = t132 * t1138 + t344 * t987;
t919 = rSges(6,1) * t226 + rSges(6,3) * t225;
t135 = rSges(6,2) * t805 + t919;
t1135 = -t132 - t135;
t1126 = t228 * rSges(6,1) + t227 * rSges(6,3);
t138 = -rSges(6,2) * t804 + t1126;
t1134 = t133 + t138;
t1133 = t1375 * t226 - t1393 * t805 - t1294;
t1030 = qJD(6) * t729;
t981 = t728 * t1030;
t1132 = -t981 + t1301;
t1128 = t270 * t1141 + t557 * t989;
t1125 = t228 * rSges(5,1) - t227 * rSges(5,2);
t1112 = -qJD(5) * t528 + t690 * t340;
t560 = (-rSges(6,1) * t727 - rSges(6,3) * t724) * t728;
t308 = qJD(4) * t560 + (t725 * t917 + t714) * qJD(2);
t1111 = -t270 - t308;
t1053 = -pkin(2) * t987 + t656;
t272 = pkin(2) * t989 + qJ(3) * t523 + t1053;
t1110 = -t272 - t1350;
t1108 = t274 + t344;
t559 = (-rSges(7,1) * t727 - rSges(7,2) * t724) * t728;
t1104 = qJD(4) * t559 + (t725 * t916 - t1226) * qJD(2) + pkin(5) * t802 - qJ(6) * t1041 - t1032;
t342 = -t525 * rSges(6,1) + t526 * rSges(6,3);
t1103 = t340 + t342;
t347 = t527 * rSges(6,1) - t528 * rSges(6,3);
t1102 = -t345 - t347;
t1012 = t726 * t1140;
t1101 = -rSges(7,2) * t1012 + t1298;
t1011 = t727 * t1138;
t1100 = -rSges(7,2) * t1011 + t1299;
t1084 = rSges(7,2) * t1144 + qJ(6) * t728 + t1226 - t1306;
t1081 = -t457 - t557;
t460 = -rSges(4,2) * t1138 + rSges(4,3) * t1143 + t712;
t1080 = -t460 - t565;
t1079 = t726 * t556 + t729 * t565;
t558 = (-pkin(4) * t727 - qJ(5) * t724) * t728;
t1077 = qJD(5) * t526 - t574 * t558;
t484 = qJD(2) * t1305 - t1039;
t1076 = -t915 * qJD(2) - t484;
t1018 = pkin(2) * t1143;
t665 = qJ(3) * t1138;
t562 = t665 - t1018;
t1072 = qJD(1) * t562 + t726 * t1039;
t1070 = -t565 - t588;
t1068 = qJD(1) * (-pkin(1) * t1045 + t701) + qJDD(1) * t631;
t1062 = rSges(5,1) * t1014 + rSges(5,2) * t1012;
t1060 = rSges(5,1) * t1013 + rSges(5,2) * t1011;
t1059 = -t618 + t914;
t1058 = -t1305 - t915;
t627 = pkin(4) * t1014;
t1057 = t627 + t662;
t629 = pkin(4) * t1013;
t1056 = t629 + t665;
t992 = t725 * t1045;
t1054 = rSges(3,2) * t992 + rSges(3,3) * t1044;
t1052 = rSges(6,1) * t1147 + t714;
t554 = rSges(4,2) * t1145 + rSges(4,3) * t1141;
t563 = rSges(4,2) * t1143 + rSges(4,3) * t1138;
t1034 = qJD(5) * t727;
t1023 = qJDD(3) * t728;
t1021 = pkin(4) + t1375;
t1015 = t1300 * t1044;
t1010 = t90 * t1044;
t1009 = -t132 - t1133;
t1008 = t133 + t1132;
t271 = -pkin(2) * t804 - qJ(3) * t992 + t1055;
t1006 = t556 * t1044 + t729 * t271 + t726 * t272;
t1005 = -t270 - t1104;
t1002 = -t344 + t1070;
t1001 = t1348 * t729 + t591 * t618;
t1000 = t562 * t1040 + t553 * t1042 + t704;
t998 = -t557 - t1082;
t962 = rSges(4,1) * t729 - rSges(4,3) * t1145;
t461 = rSges(4,2) * t1141 + t962;
t997 = t461 + t1071;
t994 = t646 - t1053;
t454 = rSges(5,1) * t1147 + rSges(5,2) * t1144 + t713;
t977 = -pkin(1) - t1232;
t974 = t1044 / 0.2e1;
t973 = -t1042 / 0.2e1;
t972 = t1042 / 0.2e1;
t970 = -t1040 / 0.2e1;
t969 = t1040 / 0.2e1;
t963 = t51 * t1082;
t956 = qJD(2) * t1076;
t955 = t1050 * qJD(2);
t953 = t729 * t1019;
t951 = t1020 * t729;
t948 = t344 * t1041 + t725 * t133 + t557 * t804;
t947 = t725 * t1025 + t271 * t1040 + t272 * t1042 + t590 * t556;
t945 = t729 * t588 - t726 * t589 + t1079;
t942 = rSges(4,1) * t1044 + rSges(4,2) * t804 + rSges(4,3) * t984;
t941 = t631 + t565;
t940 = t692 + t993;
t932 = -t458 + t965;
t931 = -t557 + t965;
t930 = -pkin(1) + (rSges(4,2) - pkin(2)) * t728;
t929 = -pkin(8) * t1041 - t484;
t926 = -t1033 * t724 + t573 * t345;
t53 = t1108 * t574 + t280 * t573 + t786;
t405 = -pkin(8) * t804 + t702;
t761 = t405 * t1040 + t404 * t1042 + t1070 * t591 - t590 * t589 + t947;
t750 = qJDD(5) * t1140 + t573 * t132 - t320 * t349 + t761;
t8 = qJD(5) * t803 - t1108 * t321 + t1134 * t574 + t573 * t135 + t320 * t280 - t1023 + t750;
t925 = t53 * t135 + t8 * t280;
t625 = rSges(2,1) * t729 - rSges(2,2) * t726;
t621 = rSges(2,1) * t726 + rSges(2,2) * t729;
t624 = -rSges(3,2) * t725 + t1232;
t922 = rSges(5,1) * t226 - rSges(5,2) * t225;
t412 = -qJ(5) * t1012 + t627;
t887 = t726 * t344 * t1037 + t573 * t412 + t1000;
t886 = t994 - t1127;
t863 = -t209 * t726 - t1160;
t855 = t275 * t726 - t281 * t729;
t310 = -rSges(3,1) * t804 - rSges(3,2) * t984 + t1054;
t555 = t620 * t726;
t311 = -qJD(2) * t555 + (t624 * t729 + t711) * qJD(1);
t854 = t310 * t729 + t311 * t726;
t845 = t455 * t726 + t459 * t729;
t840 = -t457 + t931;
t838 = -t270 + t929;
t561 = (-rSges(5,1) * t727 + rSges(5,2) * t724) * t728;
t309 = qJD(4) * t561 + (t725 * t920 + t713) * qJD(2);
t837 = -t309 + t929;
t836 = -pkin(1) - t1305;
t835 = -t656 + t1110;
t834 = -rSges(6,3) * t1140 - t1229;
t833 = -t589 * t1044 + t726 * t404 + t729 * t405 + t1006;
t831 = t729 * t344 - t349 * t726 + t945;
t829 = t941 + t588;
t820 = t1040 * t1059 + t658;
t819 = t931 - t1082;
t818 = t1105 * t53 - t1300 * t457;
t817 = -t308 + t838;
t809 = t1243 * t728 + t966;
t808 = t1242 * t728 + t966;
t807 = qJDD(1) * t565 + t1068 + t1348 * t726 + (t271 + t658) * qJD(1);
t760 = (-pkin(8) * t730 - qJDD(6)) * t728 + (-t484 + t1032) * qJD(2);
t777 = qJDD(1) * t996 + t591 * t1240 + t1001;
t10 = -t1104 * t574 + t1082 * t321 + t1009 * t690 + t1003 * t572 + t760 * t729 + (-t404 + (t1031 - t704) * t726 + t1110) * qJD(1) + t777 + t1268;
t782 = qJD(1) * t405 + qJDD(1) * t588 + t807;
t9 = -qJD(1) * t981 + t1005 * t573 + t1109 * t572 + t1132 * t690 + t320 * t998 + t590 * t965 + t726 * t760 + t1269 + t782;
t806 = -qJD(2) * t43 - t10 * t729 - t726 * t9;
t801 = t838 - t1104;
t7 = t1106 * t320 - t1004 * t321 + (-qJD(4) * qJD(5) * t724 - qJD(2) * qJD(6) - qJDD(3)) * t728 + t1008 * t574 + t1133 * t573 + t750 + (-qJD(2) * t1034 - qJDD(6)) * t725;
t793 = t1106 * t7 + t1133 * t43;
t413 = -qJ(5) * t1011 + t629;
t787 = t725 * t557 * t1035 + t344 * t1036 - t1042 * t1305 + t690 * t413 + t1072;
t785 = t1003 * t51 + t1109 * t52;
t784 = t1003 * t43 + t1082 * t52;
t783 = -t1044 * t349 + t726 * t132 + t729 * t133 + t833;
t775 = t344 + t829;
t76 = t275 * t574 + t281 * t573 + t816;
t751 = t76 * t855 + (-t726 * t89 + t729 * t90) * t458;
t743 = t818 * t729 + (t1081 * t70 + t53 * t274) * t726;
t740 = t784 * t729 + (t1109 * t43 + t51 * t998) * t726;
t739 = (-t1137 * t726 - t590 * t725) * pkin(8) - t590 * t618 - t484 * t1042 + t782;
t732 = (-pkin(8) * t1137 - qJD(2) * t484) * t729 + (-t404 + t835) * qJD(1) + t777;
t615 = rSges(6,1) * t1013;
t611 = rSges(6,1) * t1014;
t582 = t624 * qJD(2);
t524 = t984 - t992;
t522 = t1050 * t1043;
t453 = -rSges(6,3) * t1144 + t1052;
t411 = t557 * t1141;
t386 = -rSges(5,3) * t1143 + t1060;
t385 = t729 * t834 + t615;
t383 = -rSges(5,3) * t1145 + t1062;
t382 = t726 * t834 + t611;
t348 = rSges(5,1) * t527 + rSges(5,2) * t528;
t343 = -rSges(5,1) * t525 - rSges(5,2) * t526;
t317 = t725 * t344;
t313 = -rSges(4,3) * t992 + t942;
t312 = t1349 + (t729 * t915 + t712) * qJD(1);
t306 = t349 * t1138;
t193 = t845 * qJD(2);
t155 = qJD(1) * t460 + t1349 + t944;
t154 = qJD(1) * t997 + t820;
t150 = (t460 * t729 - t461 * t726) * qJD(2) + t923;
t139 = -rSges(5,3) * t804 + t1125;
t136 = rSges(5,3) * t805 + t922;
t107 = qJD(1) * t310 + qJDD(1) * t459 - t1042 * t582 - t590 * t620 + t1068;
t106 = -t582 * t1040 + t591 * t620 + t1083 * qJDD(1) + (-t311 - t1350) * qJD(1);
t69 = qJD(1) * t313 + qJDD(1) * t460 + t1059 * t590 + t726 * t956 + t807;
t68 = -t591 * t914 + t729 * t956 + t997 * qJDD(1) + (-t312 + t835) * qJD(1) + t1001;
t50 = -t1023 - t461 * t590 + t1080 * t591 + (t312 * t726 + t313 * t729) * qJD(2) + t947;
t33 = t139 * t690 + t275 * t572 - t309 * t573 - t320 * t458 + t739;
t32 = -t136 * t690 - t281 * t572 - t309 * t574 + t321 * t458 + t732;
t13 = t136 * t573 + t139 * t574 - t275 * t321 + t281 * t320 - t1023 + t761;
t12 = t1081 * t320 + t1111 * t573 + t690 * t138 + t572 * t274 + t1269 + t739;
t11 = t1105 * t572 + t1135 * t690 - t574 * t308 + t321 * t457 + t1268 + t732;
t1 = [t1203 / 0.2e1 + t1204 / 0.2e1 + (t1367 + t1370) * t972 + (t1366 - t1369 + t1373) * t970 + (m(2) * (t621 ^ 2 + t625 ^ 2) + Icges(2,3) - t1447) * qJDD(1) + (qJD(2) * t1448 + t1451 * t725 + t1452 * t728) * qJD(1) + (((t1352 * t729 - t1341 + t1362) * t729 + (t1352 * t726 + t1363 + t1464) * t726) * qJD(2) + t1374 - t1387) * t973 + (((t1393 + t1259) * t728 + t966) * t1217 * qJD(1) + (t1021 * t528 + t726 * t836 - t1391 + t474 + t933) * t10 - g(1) * (t792 - t1106) - t836 * t1239 + ((t1043 * t1259 - t1031) * t729 + (t836 - t718) * t1045 + t1301 + t1106 * t690 - t998 * t574 - t774 + t1356) * t52 + (-t1021 * t226 + t886 + ((-t1164 - t1428) * qJD(2) + t1258 * qJD(1)) * t726 + t1294 + t52) * t51 + (t9 - g(2)) * (t1109 + t775)) * m(7) + (t1359 + t1360) * t1250 + (t229 + t1361) * t1249 + ((t1341 * t726 + ((t1465 + t1485) * t729 + t1364 + t1462 + t1484) * t729) * qJD(2) + t1392) * t969 + ((t726 * t809 + t1414) * t11 - g(1) * t1414 - t809 * t1239 - (pkin(8) * t986 + t1040 * t618 + t951 * t1043 + t1045 * t1303 - t1081 * t574 + t280 * t690 + t1126 + t1356) * t1300 + (-t1300 + t886 - t919 - t1241 + (-t1164 + t1229) * t1042 + (t1303 * t729 + t1302) * qJD(1)) * t70 + (t12 - g(2)) * (t775 + t274)) * m(6) + (t1331 + t1334) * t1252 + t1287 * t1257 + t1330 * t1253 + t1286 * t1256 + t1207 / 0.2e1 + t1208 / 0.2e1 + ((-t1325 * t724 - t1326 * t727) * t728 - t1463 * t725 + t1400) * t573 * t1248 + ((t83 + t1130 + t1312) * t574 + (-t1325 * t528 + t1326 * t527 - t1372 - t1376 + t1402 - t1486) * t573 + t1384) * t1251 + ((t1376 + t77 + t859) * t574 + (t1325 * t526 - t1326 * t525 + t1312 + t1371 + t1404 - t1487) * t573 + t1333 + t1377) * t1254 - t1222 / 0.2e1 + t1223 / 0.2e1 + t1205 / 0.2e1 + t1206 / 0.2e1 + t1276 + (-(qJD(1) * t461 + t1307 - t154 + t820) * t155 - t154 * t1053 + t155 * (t942 + t995) + (-t155 * t1018 + t154 * (t1200 * t728 - t1231) * t726) * qJD(2) + (t154 * (t1200 * t725 + t930) * t729 + (t154 * (-rSges(4,1) - pkin(7)) + t155 * (t836 - t710)) * t726) * qJD(1) + (-g(2) + t69) * (t460 + t941) + (-g(1) + t68) * (t720 + (t930 - t705) * t726 + t962)) * m(4) + (-(-qJD(1) * t455 - t208 - t593 - t988) * t209 + t209 * (t701 + t1054) + (t1161 * t620 - t1159) * qJD(2) + ((-pkin(1) - t624) * t1160 + (t208 * (-rSges(3,3) - pkin(7)) + t209 * t977) * t726) * qJD(1) + (t107 - g(2)) * (t459 + t631) + (t106 - g(1)) * (t726 * t977 + t1051 + t720)) * m(3) - t1220 / 0.2e1 + t1221 / 0.2e1 - t1218 / 0.2e1 + t1219 / 0.2e1 - m(2) * (-g(1) * t621 + g(2) * t625) - t591 * t232 / 0.2e1 + (t89 * (-t922 + t994) + (t32 * t808 + t89 * (-t1164 + t1227) * qJD(2)) * t726 + (t1209 * t1304 + t1302 * t89) * qJD(1) - t808 * t1239 + (t953 * t1043 + t1045 * t1304 + t1125 + t1388 - t1420 - t800 + t89) * t90 + (t33 - g(2)) * (t829 + t275) + (t32 - g(1)) * (t933 + t1073)) * m(5); ((-t1143 * t1403 + t1286 * t728) * qJD(4) + ((-qJD(4) * t1402 + t1317) * t725 + t1318) * t726 + (-t1319 * t528 - t1320 * t527) * t690 + (t1322 * t528 + t1324 * t527) * t574 + (-t1321 * t528 - t1323 * t527) * t573) * t1251 + ((-t1145 * t1404 + t1287 * t728) * qJD(4) + ((-qJD(4) * t1405 + t1317) * t725 + t1318) * t729 + (t1319 * t526 + t1320 * t525) * t690 + (-t1322 * t526 - t1324 * t525) * t574 + (t1321 * t526 + t1323 * t525) * t573) * t1254 + (t1369 * t729 + t1370 * t726 + (t1360 * t729 + t1361 * t726) * qJD(1)) * qJD(1) / 0.2e1 + (t1334 + t1373) * t974 + (t1333 + t1374) * t1045 / 0.2e1 + ((t1364 * t729 + t1365 * t726) * qJD(1) + t1353) * t970 + (qJD(1) * t1367 + qJD(2) * t1354 + qJDD(1) * t1359 + t1362 * t590 + t1363 * t591 + t1343) * t726 / 0.2e1 + (t1360 * t726 - t1361 * t729) * qJDD(1) / 0.2e1 + ((t1362 * t729 + t1363 * t726) * qJD(1) + t1354) * t972 + (t13 * t945 + (t13 * t275 + (qJD(1) * t90 + t32) * t932) * t729 + (t13 * t281 + t33 * t932 + t90 * t837) * t726 - g(1) * (t665 + t1060) - g(2) * (t662 + t1062) - g(3) * (t993 + t454) - t90 * (t1036 * t275 + t386 * t690 - t454 * t573 + t1072) + t1293 * qJD(2) * t993 + (t1036 * t281 + t1045 * t458 + t383 * t690 + t454 * t574 + t729 * t837 + t1390) * t89 + (t833 + (qJD(1) * t281 + t139) * t729 + (t136 + (-t275 + t1070) * qJD(1)) * t726 - t383 * t573 - t386 * t574 - t1000) * t76 + (-g(1) * t953 - t1019 * t1237 - (-t76 * t955 - t1010) * pkin(8) - t751 * qJD(4)) * t725) * m(5) + ((-t1040 * t1345 - t1342) * t729 + ((t1346 * t729 + t1357) * qJD(2) + t1355) * t726) * t969 + ((-t1042 * t1346 + t1342) * t726 + ((t1345 * t726 + t1357) * qJD(2) + t1355) * t729) * t973 + (t7 * t831 + (t10 * t819 + t7 * t1109) * t729 + (qJD(1) * t963 + t9 * t819 + t793) * t726 - g(1) * (t1056 + t1299) - g(2) * (t1057 + t1298) - g(3) * (t940 + t1306) + (-qJD(4) * t785 - t1290 * (-t1034 - t1225) - t1201 * t727 * t928 + g(3) * t1393) * t728 + (-t740 * qJD(4) - t1201 * t1236 - t1259 * t928) * t725 + (t819 * t1044 + t801 * t726 - t787 - t1100 * t690 - (-t552 + t1084) * t573 - (-pkin(8) * t1044 + qJD(6) * t726) * t725) * t52 + (t783 + (qJD(1) * t1106 + t1132) * t729 + (t1002 - t1109) * t1045 - t887 - (t413 + t1100) * t574 - t1101 * t573 + t1031 - (-t1050 * t1225 - t1034) * t725) * t43 + (t801 * t729 - (-t412 - t1101) * t690 - t1084 * t574 - t1030 * t725 + t1351) * t51) * m(7) - t1332 * t1036 / 0.2e1 + (qJD(1) * t1279 - t1335 * t729 + t1336 * t726) * t1247 + (qJD(1) * t1277 - t1337 * t729 + t1338 * t726) * t1253 + (qJD(1) * t1278 - t1339 * t729 + t1340 * t726) * t1252 + t1316 * t1255 + t1314 * t1257 + t1315 * t1256 + ((qJD(2) * t854 + t455 * t590 - t459 * t591) * t845 + t193 * ((t455 * t729 - t459 * t726) * qJD(1) + t854) + t863 * t582 + (-t106 * t729 - t107 * t726 + (-t209 * t729 + t1161) * qJD(1)) * t620 - (t208 * t555 - t1159) * qJD(1) - (t193 * (-t555 * t726 - t564 * t729) + t863 * t624) * qJD(2) + g(1) * t564 + g(2) * t555 - g(3) * t624) * m(3) + (((-t1319 * t724 + t1320 * t727 + t1421) * t690 + (t1322 * t724 - t1324 * t727 - t1463) * t574 + (-t1321 * t724 + t1323 * t727 - t1399) * t573 + t1285 * qJD(4)) * t728 + (-qJD(4) * t1279 + t1398) * t725) * t1248 + (-g(1) * (t615 + t1056) - g(2) * (t611 + t1057) - g(3) * (t940 + t1052) - t1140 * t928 * t1199 + t1300 * (t385 * t690 + t787 + (-t453 - t552) * t573) - t53 * (t382 * t573 + t887 + (t385 + t413) * t574) + t1300 * (-pkin(8) * t1042 + qJD(4) * t274 - t1034 * t726) * t728 + t8 * t831 + t53 * t783 + (t11 * t840 + t8 * t274 + t53 * t138 + (-t1300 * t840 + t53 * t280) * qJD(1)) * t729 + (t12 * t840 - t1300 * t817 + (t1211 + t53 * (-t274 + t1002)) * qJD(1) + t925) * t726 + (-g(1) * t951 - t1020 * t1237 - t1236 * t1199 + t53 * t1034 - (-t53 * t955 + t1015) * pkin(8) - t743 * qJD(4)) * t725 + (t453 * t574 - (-t382 - t412) * t690 - (-pkin(8) * t1040 + qJD(4) * t1105 - t1034 * t729) * t728 + t817 * t729 + t1351) * t70) * m(6) - (t1366 * qJD(1) + t1353 * qJD(2) + qJDD(1) * t1429 + t1364 * t590 + t1365 * t591 + t1344) * t729 / 0.2e1 + (t1333 * t726 + t1334 * t729) * t1037 / 0.2e1 + (-t154 * (-qJD(1) * t554 + t954) - t155 * (qJD(1) * t563 + t1072) - t150 * t1000 - ((t1058 * t154 + t150 * t563) * t729 + (t1058 * t155 + t150 * t554) * t726) * qJD(2) - g(1) * (t562 + t563) - g(2) * (t553 + t554) + g(3) * t1058 + t154 * t567 + t50 * t1079 + t150 * t1006 + (t68 * t1059 + t154 * t1076 + t50 * t460 + t150 * t313 + (t1059 * t155 - t150 * t461) * qJD(1)) * t729 + (t69 * t1059 + t155 * t1076 - t50 * t461 + t150 * t312 + (t1080 * t150 - t154 * t914) * qJD(1)) * t726) * m(4) + t1412 * t1249 + t1413 * t1250 - ((t1409 * t728 + t1415 * t725) * qJD(2) + (t1410 * t725 + t1411 * t728) * qJD(1)) * qJD(1) / 0.2e1; (-m(4) - m(5) + t1260) * (t725 * t928 - t1235) - m(4) * (t150 * t522 + t154 * t524 + t155 * t523) - m(5) * (t522 * t76 + t523 * t90 + t524 * t89) - m(6) * (-t1300 * t523 + t522 * t53 + t524 * t70) - m(7) * (t43 * t522 + t51 * t524 + t52 * t523) + 0.2e1 * ((t1040 * t154 + t1042 * t155 - t50) * t1264 + (t1040 * t89 + t1042 * t90 - t13) * t1263 + (t1040 * t70 - t1042 * t1300 - t8) * t1262 + (t1040 * t51 + t1042 * t52 - t7) * t1261) * t728 + 0.2e1 * ((qJD(2) * t150 + t1044 * t155 - t1045 * t154 + t68 * t729 + t69 * t726) * t1264 + (qJD(2) * t76 - t1045 * t89 + t32 * t729 + t33 * t726 + t1010) * t1263 + (qJD(2) * t53 - t1045 * t70 + t11 * t729 + t12 * t726 - t1015) * t1262 + (t1044 * t52 - t1045 * t51 - t806) * t1261) * t725; t1344 * t1141 / 0.2e1 + t1343 * t1138 / 0.2e1 + t1332 * t1041 / 0.2e1 + (t1277 * t728 + t1287 * t725) * t1257 + (t1278 * t728 + t1286 * t725) * t1256 + (t1279 * t728 + t1285 * t725) * t1255 + (t1280 * t729 - t1281 * t526 - t1394 * t525) * t1254 + ((-qJD(1) * t1314 + t1287 * qJD(2) + t1337 * t726 + t1338 * t729) * t728 + (-qJD(2) * t1277 + t1330) * t725) * t1253 + ((-qJD(1) * t1315 + t1286 * qJD(2) + t1339 * t726 + t1340 * t729) * t728 + (-qJD(2) * t1278 + t1331) * t725) * t1252 + (t1280 * t726 + t1281 * t528 + t1394 * t527) * t1251 + ((t1281 * t724 - t1394 * t727) * t728 + t1385 * t725) * t1248 + ((-qJD(1) * t1316 + t1285 * qJD(2) + t1335 * t726 + t1336 * t729) * t728 + (-qJD(2) * t1279 + t1386) * t725) * t1247 + (t1207 + t1208 - t1222 + t1223 + t1205 + t1206 - t1220 + t1221 + t1203 + t1204 - t1218 + t1219 + t1276) * t725 / 0.2e1 + (t10 * t411 + t51 * t1128 + t9 * t317 + t52 * t948 - t7 * t306 + t43 * t1136 + (qJD(2) * t740 + t10 * t1003 + t1009 * t51 + t1109 * t9 + t1132 * t52) * t725 + (t785 * qJD(2) + (t9 * t998 + t52 * t1005 + (-t1004 * t43 + t963) * qJD(1) + t793) * t729 + (qJD(1) * t784 + t10 * t1082 - t1004 * t7 - t1008 * t43 + t1104 * t51) * t726) * t728 - g(1) * (-pkin(5) * t525 + t1309) - g(2) * (pkin(5) * t527 - t1308) - (-t1021 * t727 + t1201 * t724) * t1235 - t51 * (t1308 * t690 - t559 * t574 + t1077) - t52 * (t341 * t690 + t1112 + (-t558 - t559) * t573) - t43 * (t1309 * t574 + t346 * t573 + t926) - (t51 * t821 + t52 * t822 - t1224) * pkin(5)) * m(7) + (-t70 * (t1102 * t690 - t560 * t574 + t1077) + t1300 * (t342 * t690 + (-t558 - t560) * t573 + t1112) - t53 * (t1103 * t574 + t347 * t573 + t926) - g(1) * t1103 + g(2) * t1102 - ((-rSges(6,1) - pkin(4)) * t727 + t1199 * t724) * t1235 + t11 * t411 + t70 * t1128 + t12 * t317 - t1300 * t948 - t8 * t306 + t53 * t1136 + (qJD(2) * t743 + t11 * t1105 + t1135 * t70 + t12 * t274 - t1300 * t138) * t725 + ((t1105 * t70 - t1300 * t274) * qJD(2) + (t12 * t1081 - t1300 * t1111 + (-t1108 * t53 + t1211) * qJD(1) + t925) * t729 + (qJD(1) * t818 + t11 * t457 - t1108 * t8 - t1134 * t53 + t70 * t308) * t726) * t728) * m(6) + (-t89 * (-t348 * t690 - t561 * t574) - t90 * (t343 * t690 - t561 * t573) - t76 * (t343 * t574 + t348 * t573) + (qJD(2) * t751 - t89 * t136 + t90 * t139 + t33 * t275 - t32 * t281) * t725 + (t89 * (-qJD(2) * t281 + t309 * t726) + t90 * (qJD(2) * t275 - t309 * t729) - t13 * t855 + t76 * (-t1044 * t275 - t1045 * t281 + t136 * t729 - t139 * t726) + (qJD(1) * t1293 + t32 * t726 - t33 * t729) * t458) * t728 - g(1) * t343 - g(2) * t348 - g(3) * t561) * m(5) + (-t990 / 0.2e1 + t725 * t970) * t1334 + (t725 * t973 + t728 * t974) * t1333; t1260 * (g(1) * t525 - g(2) * t527 + g(3) * t1140) + (t10 * t525 + t1140 * t7 + t1310 * t51 + t1311 * t52 + t43 * t803 - t527 * t9 - t1224) * m(7) + (t11 * t525 + t1140 * t8 - t12 * t527 - t1311 * t1300 + t1310 * t70 + (-t171 + t803) * t53) * m(6); ((t806 - t43 * (-t573 * t726 - t574 * t729) + t928 + (qJD(1) - t690) * (t51 * t726 - t52 * t729)) * t728 + (qJD(2) * t1290 - t51 * t574 - t52 * t573 + g(3) - t7) * t725) * m(7);];
tau  = t1;
