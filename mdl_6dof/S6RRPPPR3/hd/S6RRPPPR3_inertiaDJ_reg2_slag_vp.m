% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPPR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR3_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:15:48
% EndTime: 2019-03-09 08:15:52
% DurationCPUTime: 1.94s
% Computational Cost: add. (1828->188), mult. (3621->346), div. (0->0), fcn. (2966->6), ass. (0->124)
t149 = pkin(2) + pkin(3);
t128 = qJ(5) + t149;
t72 = cos(qJ(2));
t107 = t128 * t72;
t70 = qJ(3) + pkin(4);
t71 = sin(qJ(2));
t154 = t70 * t71 + t107;
t153 = pkin(8) + t128;
t152 = t149 * t72;
t66 = t71 ^ 2;
t48 = (-t72 ^ 2 + t66) * qJD(2);
t151 = 0.2e1 * t48;
t146 = sin(qJ(6));
t112 = qJD(6) * t146;
t147 = cos(qJ(6));
t113 = qJD(6) * t147;
t68 = sin(pkin(9));
t69 = cos(pkin(9));
t34 = t68 * t112 - t69 * t113;
t120 = t147 * t68;
t38 = t146 * t69 + t120;
t145 = t34 * t38;
t35 = t38 * qJD(6);
t37 = t146 * t68 - t147 * t69;
t24 = t37 * t35;
t150 = t24 - t145;
t64 = t68 ^ 2;
t65 = t69 ^ 2;
t137 = t64 + t65;
t42 = t137 * qJD(5);
t40 = -0.2e1 * t48;
t74 = 2 * qJD(3);
t59 = t71 * qJD(2);
t110 = qJ(4) * t59 - qJD(4) * t72;
t127 = pkin(7) * t59;
t31 = -t110 + t127;
t61 = t72 * qJ(4);
t50 = pkin(7) * t72 - t61;
t144 = t50 * t31;
t143 = t50 * t71;
t138 = pkin(7) - qJ(4);
t49 = t138 * t71;
t142 = t68 * t49;
t141 = t68 * t72;
t140 = t69 * t72;
t17 = t69 * t49 + t68 * (pkin(1) + t154);
t135 = qJ(3) * t71;
t134 = qJ(3) * t72;
t133 = qJD(3) * t71;
t132 = qJD(3) * t72;
t131 = qJD(4) * t71;
t130 = t50 * qJD(3);
t60 = t72 * qJD(2);
t129 = -0.2e1 * pkin(1) * qJD(2);
t126 = pkin(7) * t60;
t125 = t68 * t60;
t124 = t69 * t59;
t123 = t69 * t60;
t122 = t71 * t60;
t121 = pkin(5) * t68 - pkin(7);
t117 = t69 * t70;
t115 = pkin(1) + t135;
t114 = qJD(5) * t146;
t111 = t147 * qJD(5);
t53 = -0.2e1 * t122;
t109 = t68 * t124;
t108 = t128 * t71;
t106 = t147 * t59;
t105 = t146 * t59;
t102 = t153 * t146;
t92 = qJD(5) * t72 + t133;
t82 = t68 * t131 + t69 * t92;
t87 = -t68 * t138 + t117;
t8 = (-t69 * t108 + t87 * t72) * qJD(2) + t82;
t81 = -t69 * t131 + t68 * t92;
t85 = (t69 * t138 + t68 * t70) * t72;
t9 = (-t68 * t108 + t85) * qJD(2) + t81;
t101 = t68 * t9 + t69 * t8;
t3 = -t68 * t8 + t69 * t9;
t100 = t71 * t153;
t99 = -pkin(2) * t72 - t135;
t14 = -t68 * t105 + t69 * t106 + t72 * t35;
t29 = t37 * t72;
t98 = -t14 * t38 + t29 * t34;
t97 = t14 * t37 + t29 * t35;
t15 = -t69 * t105 - t68 * t106 - t34 * t72;
t28 = t38 * t72;
t96 = -t15 * t38 + t28 * t34;
t95 = t15 * t37 + t28 * t35;
t93 = t153 * t120;
t91 = 0.2e1 * t150;
t18 = t34 * t71 - t38 * t60;
t90 = t35 * t71 + t37 * t60;
t88 = t138 * t60 - t131;
t13 = pkin(8) * t141 + t17;
t75 = (-t69 * t100 + (pkin(5) + t87) * t72) * qJD(2) + t82;
t76 = -(-t68 * t100 + t85) * qJD(2) - t81;
t79 = t69 * pkin(1) - t142 + (t117 + pkin(5)) * t71 + t153 * t140;
t78 = t147 * t79;
t1 = -qJD(6) * t78 + t13 * t112 - t146 * t75 + t147 * t76;
t77 = t146 * t79;
t2 = -qJD(6) * t77 - t13 * t113 + t146 * t76 + t147 * t75;
t4 = -t146 * t13 + t78;
t5 = t147 * t13 + t77;
t86 = t1 * t37 - t2 * t38 + t34 * t4 - t35 * t5;
t41 = t153 * t69;
t11 = -qJD(6) * t93 + t69 * t111 - t41 * t112 - t68 * t114;
t12 = t41 * t113 + t69 * t114 + (-qJD(6) * t102 + t111) * t68;
t20 = t146 * t41 + t93;
t21 = t68 * t102 - t147 * t41;
t84 = t11 * t37 - t12 * t38 + t20 * t34 - t21 * t35;
t83 = t99 * qJD(2) + t132;
t80 = t154 * qJD(2) + qJD(5) * t71 - t132;
t62 = qJ(3) * t74;
t56 = t69 * pkin(5) + t70;
t52 = 0.2e1 * t122;
t43 = -pkin(1) + t99;
t36 = t115 + t152;
t33 = -t121 * t72 - t61;
t32 = -t133 + (pkin(2) * t71 - t134) * qJD(2);
t27 = t133 + (-t149 * t71 + t134) * qJD(2);
t26 = t121 * t59 + t110;
t16 = -t142 + (pkin(4) * t71 + t107 + t115) * t69;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t40, 0, t53, 0, 0, t71 * t129, t72 * t129, 0, 0, t52, 0, t151, 0, 0, t53, -0.2e1 * t32 * t72 + 0.2e1 * t43 * t59, 0, -0.2e1 * t32 * t71 - 0.2e1 * t43 * t60, 0.2e1 * t43 * t32, t53, t40, 0, t52, 0, 0, 0.2e1 * t27 * t71 + 0.2e1 * t36 * t60, -0.2e1 * t27 * t72 + 0.2e1 * t36 * t59, 0.2e1 * t66 * qJD(4) + 0.2e1 * t31 * t72 + 0.2e1 * (-0.2e1 * t49 * t72 + t143) * qJD(2), 0.2e1 * t36 * t27 + 0.2e1 * t49 * t88 - 0.2e1 * t144, t65 * t53, 0.4e1 * t72 * t109, t69 * t151, t64 * t53, t68 * t40, t52, 0.2e1 * t31 * t141 + 0.2e1 * t71 * t8 + 0.2e1 * (t68 * t143 + t16 * t72) * qJD(2), 0.2e1 * t31 * t140 - 0.2e1 * t71 * t9 + 0.2e1 * (t69 * t143 - t17 * t72) * qJD(2), 0.2e1 * t101 * t72 + 0.2e1 * (-t16 * t69 - t17 * t68) * t59, 0.2e1 * t16 * t8 + 0.2e1 * t17 * t9 - 0.2e1 * t144, 0.2e1 * t29 * t14, 0.2e1 * t14 * t28 + 0.2e1 * t15 * t29, 0.2e1 * t14 * t71 + 0.2e1 * t29 * t60, 0.2e1 * t28 * t15, 0.2e1 * t15 * t71 + 0.2e1 * t28 * t60, t52, -0.2e1 * t15 * t33 + 0.2e1 * t2 * t71 - 0.2e1 * t26 * t28 + 0.2e1 * t4 * t60, 0.2e1 * t1 * t71 + 0.2e1 * t14 * t33 + 0.2e1 * t26 * t29 - 0.2e1 * t5 * t60, -0.2e1 * t1 * t28 - 0.2e1 * t14 * t4 + 0.2e1 * t15 * t5 - 0.2e1 * t2 * t29, -0.2e1 * t1 * t5 + 0.2e1 * t2 * t4 + 0.2e1 * t26 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, -t59, 0, -t126, t127, 0, 0, 0, t60, 0, 0, t59, 0, -t126, t83, -t127, t83 * pkin(7), 0, 0, -t59, 0, t60, 0, -t31, t88, -t132 + (t135 + t152) * qJD(2), -t31 * qJ(3) - t149 * t88 + t130, -t109 (t64 - t65) * t59, -t125, t109, -t123, 0, -t31 * t69 + t80 * t68, t31 * t68 + t80 * t69, -t3, t130 - t31 * t70 - t3 * t128 + (t16 * t68 - t17 * t69) * qJD(5), t98, t96 + t97, t18, t95, t90, 0, -qJD(3) * t28 + t12 * t71 - t15 * t56 + t20 * t60 - t26 * t37 - t33 * t35, qJD(3) * t29 + t11 * t71 + t14 * t56 - t21 * t60 - t26 * t38 + t33 * t34, -t11 * t28 - t12 * t29 - t14 * t20 + t15 * t21 - t86, qJD(3) * t33 - t1 * t21 - t11 * t5 + t12 * t4 + t2 * t20 + t26 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t62, 0, 0, 0, 0, 0, 0, t74, 0, 0, t62, 0, 0, 0, 0, 0, 0, t69 * t74, -0.2e1 * qJD(3) * t68, 0.2e1 * t42, 0.2e1 * qJD(3) * t70 + 0.2e1 * t128 * t42, -0.2e1 * t145, 0.2e1 * t34 * t37 - 0.2e1 * t38 * t35, 0, 0.2e1 * t24, 0, 0, -0.2e1 * qJD(3) * t37 - 0.2e1 * t35 * t56, -0.2e1 * qJD(3) * t38 + 0.2e1 * t34 * t56, -0.2e1 * t84, 0.2e1 * qJD(3) * t56 - 0.2e1 * t11 * t21 + 0.2e1 * t12 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, t126, 0, 0, 0, 0, 0, 0, 0, 0, -t60, t88, 0, 0, 0, 0, 0, 0, -t125, -t123, 0, t3, 0, 0, 0, 0, 0, 0, t18, t90, -t95 - t98, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t150, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t59, 0, t27, 0, 0, 0, 0, 0, 0, t123, -t125, -t137 * t59, t101, 0, 0, 0, 0, 0, 0, -t90, t18, -t96 + t97, -t1 * t38 - t2 * t37 - t34 * t5 - t35 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11 * t38 - t12 * t37 - t20 * t35 - t21 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * t59, t124, 0, -t31, 0, 0, 0, 0, 0, 0, -t15, t14, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), 0, 0, 0, 0, 0, 0, -t35, t34, 0, qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, 0, t15, t60, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, t35, 0, t12, t11, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, t35, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
