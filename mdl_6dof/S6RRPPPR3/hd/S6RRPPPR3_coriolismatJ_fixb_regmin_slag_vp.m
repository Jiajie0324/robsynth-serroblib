% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:15:41
% EndTime: 2019-03-09 08:15:50
% DurationCPUTime: 4.19s
% Computational Cost: add. (2562->369), mult. (4916->484), div. (0->0), fcn. (4738->6), ass. (0->283)
t206 = sin(pkin(9));
t211 = cos(qJ(6));
t321 = t211 * t206;
t207 = cos(pkin(9));
t209 = sin(qJ(6));
t323 = t209 * t207;
t145 = t321 + t323;
t276 = t145 * qJD(6);
t210 = sin(qJ(2));
t225 = -t323 / 0.2e1 - t321 / 0.2e1;
t362 = -t145 / 0.2e1;
t216 = (t362 + t225) * t210;
t364 = t216 * qJD(1);
t365 = t364 - t276;
t212 = cos(qJ(2));
t266 = t212 * qJD(3);
t194 = t210 * qJ(3);
t294 = -t212 * pkin(2) - t194;
t371 = t294 * qJD(2) + t266;
t213 = -pkin(2) - pkin(3);
t199 = -qJ(5) + t213;
t370 = t199 * t210;
t200 = t206 ^ 2;
t201 = t207 ^ 2;
t169 = t201 + t200;
t277 = t145 * qJD(2);
t324 = t209 * t206;
t168 = t212 * t324;
t320 = t211 * t207;
t110 = t212 * t320 - t168;
t287 = t110 * qJD(1);
t369 = t277 + t287;
t244 = -t320 / 0.2e1;
t361 = t168 / 0.2e1;
t142 = -t320 + t324;
t363 = -t142 / 0.2e1;
t68 = t361 + (t244 + t363) * t212;
t368 = -t68 * qJD(1) + t277;
t108 = t145 * t212;
t281 = t142 * qJD(2);
t367 = t108 * qJD(1) + t281;
t120 = t108 / 0.2e1;
t220 = t225 * t212;
t66 = t120 + t220;
t366 = -t66 * qJD(1) + t281;
t302 = t216 * qJD(6);
t357 = t210 / 0.2e1;
t245 = t211 * t357;
t322 = t209 * t210;
t360 = -t206 / 0.2e1;
t295 = t207 * t245 + t322 * t360;
t329 = t142 * t210;
t235 = t329 / 0.2e1 + t295;
t58 = t235 * qJD(6);
t358 = -t210 / 0.2e1;
t359 = t207 / 0.2e1;
t236 = t145 * t358 + t206 * t245 + t322 * t359;
t304 = t236 * qJD(6);
t119 = -t108 / 0.2e1;
t356 = -t212 / 0.2e1;
t355 = t212 / 0.2e1;
t354 = pkin(8) * t212;
t353 = t210 * pkin(7);
t352 = t212 * pkin(7);
t351 = pkin(8) - t199;
t208 = qJ(3) + pkin(4);
t107 = t145 * t210;
t193 = t210 * qJ(4);
t259 = pkin(5) * t206 - pkin(7);
t123 = t259 * t210 + t193;
t195 = t212 * qJ(4);
t124 = -t259 * t212 - t195;
t156 = -pkin(1) + t294;
t136 = t212 * pkin(3) - t156;
t102 = t210 * pkin(4) + t212 * qJ(5) + t136;
t165 = -t193 + t353;
t54 = t207 * t102 - t206 * t165;
t219 = t210 * pkin(5) + t207 * t354 + t54;
t146 = t207 * t165;
t55 = t206 * t102 + t146;
t40 = t206 * t354 + t55;
t16 = t209 * t40 - t211 * t219;
t325 = t207 * t210;
t104 = t212 * t208 + t370;
t167 = -t195 + t352;
t56 = t207 * t104 - t167 * t206;
t39 = t212 * pkin(5) - pkin(8) * t325 + t56;
t346 = t211 * t39;
t326 = t206 * t210;
t57 = t206 * t104 + t167 * t207;
t41 = -pkin(8) * t326 + t57;
t347 = t209 * t41;
t1 = (t346 - t347) * t210 - t16 * t212 - t123 * t108 + t124 * t107;
t350 = t1 * qJD(1);
t17 = t209 * t219 + t211 * t40;
t345 = t211 * t41;
t348 = t209 * t39;
t2 = (t345 + t348) * t210 + t17 * t212 + t123 * t110 + t124 * t329;
t349 = t2 * qJD(1);
t173 = t207 * pkin(5) + t208;
t149 = t351 * t206;
t150 = t351 * t207;
t89 = t209 * t149 - t211 * t150;
t217 = t124 * t145 / 0.2e1 + t173 * t110 / 0.2e1 + t89 * t357;
t229 = -t347 / 0.2e1 + t346 / 0.2e1;
t3 = t217 + t229;
t344 = t3 * qJD(1);
t88 = -t211 * t149 - t209 * t150;
t218 = t173 * t119 + t124 * t363 + t88 * t358;
t230 = -t348 / 0.2e1 - t345 / 0.2e1;
t4 = t218 + t230;
t343 = t4 * qJD(1);
t342 = t56 * t206;
t341 = t57 * t207;
t7 = (-t210 * t54 + t212 * t56) * t207 + (-t210 * t55 + t212 * t57) * t206;
t340 = t7 * qJD(1);
t8 = -t165 * t167 + t54 * t56 + t55 * t57;
t339 = t8 * qJD(1);
t9 = -t124 * t108 - t16 * t210;
t338 = t9 * qJD(1);
t10 = -t124 * t110 - t17 * t210;
t337 = t10 * qJD(1);
t336 = t107 * t210;
t335 = t108 * t212;
t334 = t329 * t210;
t11 = t56 * t210 + t54 * t212 + (t165 * t212 + t167 * t210) * t206;
t333 = t11 * qJD(1);
t332 = t110 * t212;
t12 = t57 * t210 - t167 * t325 + (t55 - t146) * t212;
t331 = t12 * qJD(1);
t243 = -t201 / 0.2e1 - t200 / 0.2e1;
t215 = t208 * t356 + t243 * t370;
t226 = -t56 * t207 / 0.2e1 + t57 * t360;
t14 = t215 + t226;
t330 = t14 * qJD(1);
t327 = t167 * t212;
t15 = t55 * t325 - t54 * t326 + t327;
t328 = t15 * qJD(1);
t319 = t212 * qJ(3);
t238 = t206 * t55 + t207 * t54;
t24 = t238 * t210;
t318 = t24 * qJD(1);
t25 = t238 * t212;
t317 = t25 * qJD(1);
t27 = t110 * t107 - t108 * t329;
t316 = t27 * qJD(1);
t137 = t213 * t210 + t319;
t29 = t136 * t137;
t315 = t29 * qJD(1);
t49 = t335 + t336;
t314 = t49 * qJD(1);
t50 = t335 - t336;
t313 = t50 * qJD(1);
t51 = -t332 - t334;
t312 = t51 * qJD(1);
t52 = -t332 + t334;
t311 = t52 * qJD(1);
t310 = t236 * qJD(1);
t67 = -t329 / 0.2e1 + t295;
t307 = t67 * qJD(1);
t305 = t235 * qJD(1);
t71 = (t142 / 0.2e1 + t244 + t324 / 0.2e1) * t210;
t60 = t71 * qJD(1);
t80 = t136 * t212 + t137 * t210;
t301 = t80 * qJD(1);
t81 = -t136 * t210 + t137 * t212;
t300 = t81 * qJD(1);
t82 = 0.2e1 * t119;
t299 = t82 * qJD(1);
t166 = t210 * pkin(2) - t319;
t94 = t156 * t212 + t166 * t210;
t298 = t94 * qJD(1);
t95 = -t156 * t210 + t166 * t212;
t297 = t95 * qJD(1);
t98 = t165 * t210 + t327;
t296 = t98 * qJD(1);
t204 = t210 ^ 2;
t205 = t212 ^ 2;
t174 = t204 + t205;
t293 = qJD(5) * t210;
t264 = -pkin(2) / 0.2e1 - pkin(3) / 0.2e1;
t105 = t319 + (t213 / 0.2e1 + t264) * t210;
t292 = t105 * qJD(1);
t143 = t169 * t210;
t106 = t212 * t143;
t291 = t106 * qJD(1);
t289 = t108 * qJD(5);
t288 = t108 * qJD(6);
t286 = t110 * qJD(5);
t285 = t110 * qJD(6);
t155 = -0.1e1 / 0.2e1 + t243;
t111 = t155 * t212;
t284 = t111 * qJD(1);
t140 = t169 * t205;
t283 = t140 * qJD(1);
t141 = t174 * t206;
t282 = t141 * qJD(1);
t127 = t142 * qJD(6);
t280 = t143 * qJD(1);
t279 = t143 * qJD(4);
t144 = t174 * t207;
t278 = t144 * qJD(1);
t275 = t155 * qJD(2);
t274 = t169 * qJD(2);
t273 = t174 * qJD(1);
t175 = t205 - t204;
t272 = t175 * qJD(1);
t190 = t204 * qJD(1);
t189 = t204 * qJD(3);
t271 = t206 * qJD(2);
t270 = t207 * qJD(2);
t191 = t210 * qJD(1);
t269 = t210 * qJD(2);
t268 = t210 * qJD(3);
t267 = t212 * qJD(1);
t192 = t212 * qJD(2);
t265 = t212 * qJD(4);
t263 = pkin(1) * t191;
t262 = pkin(1) * t267;
t261 = pkin(7) * t269;
t260 = pkin(7) * t192;
t258 = t107 * t191;
t257 = t329 * t191;
t256 = t142 * t192;
t255 = t156 * t166 * qJD(1);
t254 = t156 * t191;
t253 = t206 * t192;
t252 = t206 * t190;
t251 = t206 * t267;
t250 = t207 * t192;
t249 = t207 * t190;
t248 = t207 * t267;
t176 = t210 * t267;
t247 = t210 * t266;
t246 = t142 * t267;
t103 = t110 * t191;
t242 = qJD(2) * t216 - t103;
t241 = qJD(2) * t173 + qJD(5);
t240 = t193 / 0.2e1 - t353 / 0.2e1;
t239 = -t195 / 0.2e1 + t352 / 0.2e1;
t237 = -t341 + t342;
t21 = t142 * t108 - t110 * t145;
t32 = t108 ^ 2 - t110 ^ 2;
t234 = t32 * qJD(1) + t21 * qJD(2);
t53 = t142 ^ 2 - t145 ^ 2;
t233 = t21 * qJD(1) + t53 * qJD(2);
t126 = t169 * t199;
t228 = t55 * t359 + t54 * t360;
t19 = t228 + t240;
t232 = -t19 * qJD(1) - t126 * qJD(2);
t227 = t342 / 0.2e1 - t341 / 0.2e1;
t23 = t227 + t239;
t231 = t23 * qJD(1) + t208 * qJD(2);
t30 = t108 * t362 + t110 * t363;
t224 = -t30 * qJD(2) + t108 * t287;
t223 = -t30 * qJD(1) + t142 * t277;
t222 = qJD(2) * t236 - t103 - t285;
t221 = t212 * t293 + t189;
t214 = (-t199 * t212 + t208 * t210) * qJD(2) - t266 + t293;
t203 = qJ(3) * qJD(3);
t202 = qJD(2) * qJ(3);
t180 = t192 / 0.2e1;
t177 = t210 * t192;
t154 = 0.1e1 / 0.2e1 + t243;
t151 = t167 * qJD(2);
t139 = qJD(6) * t355 + t176;
t122 = t264 * t210 + t213 * t358;
t112 = t169 * t355 + t356;
t83 = t120 + t119;
t69 = t142 * t355 + t212 * t244 + t361;
t65 = t119 + t220;
t59 = t71 * qJD(6);
t35 = t127 + t60;
t31 = -t71 * qJD(2) - t108 * t191;
t28 = t30 * qJD(6);
t26 = t235 * qJD(2) + (qJD(6) + t191) * t108;
t22 = -t227 + t239;
t20 = -t228 + t240;
t18 = t21 * qJD(6);
t13 = t215 - t226;
t6 = -t217 + t229;
t5 = -t218 + t230;
t33 = [0, 0, 0, t177, t175 * qJD(2), 0, 0, 0, -pkin(1) * t269, -pkin(1) * t192, -t95 * qJD(2) + t247, 0, -t94 * qJD(2) + t189 (qJD(2) * t166 - t268) * t156, t80 * qJD(2) + t189, -t81 * qJD(2) - t247, t174 * qJD(4), t29 * qJD(2) - t98 * qJD(4) + t136 * t268, t11 * qJD(2) + t141 * qJD(4) + t207 * t221, -t12 * qJD(2) + t144 * qJD(4) - t206 * t221, t7 * qJD(2) + t106 * qJD(3) + t140 * qJD(5), t8 * qJD(2) + t24 * qJD(3) - t15 * qJD(4) + t25 * qJD(5) (qJD(2) * t329 - t288) * t110, t27 * qJD(2) + t32 * qJD(6), t51 * qJD(2) + t210 * t288, t50 * qJD(2) + t210 * t285, t177, t1 * qJD(2) + t49 * qJD(4) + t10 * qJD(6) + (-qJD(3) * t329 + t286) * t210, -t2 * qJD(2) - t52 * qJD(4) - t9 * qJD(6) + (-qJD(3) * t107 - t289) * t210; 0, 0, 0, t176, t272, t192, -t269, 0, -t260 - t263, t261 - t262, -t260 - t297, t371, -t261 - t298, pkin(7) * t371 + t255, -t165 * qJD(2) + t301, t151 - t300 (-t213 * t212 + t194) * qJD(2) - t266, t315 + (-t165 * qJ(3) + t167 * t213) * qJD(2) + t167 * qJD(3) + t122 * qJD(4), -t165 * t270 + t206 * t214 + t333, t165 * t271 + t207 * t214 - t331, qJD(2) * t237 + t340, t339 + (-t165 * t208 - t199 * t237) * qJD(2) + t22 * qJD(3) + t13 * qJD(4) + t20 * qJD(5), t329 * t369 + t28, t316 + (t145 * t107 - t142 * t329) * qJD(2) + t18, -t145 * t192 + t312 + t58, t256 + t313 - t304, t139, t350 + (t173 * t107 - t123 * t142 - t88 * t212) * qJD(2) + t65 * qJD(3) - t216 * qJD(5) + t6 * qJD(6), -t349 + (-t123 * t145 - t173 * t329 - t89 * t212) * qJD(2) + t69 * qJD(3) + t83 * qJD(4) - t71 * qJD(5) + t5 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, t192, t190, -t254 + t260, t190, -t176, -t192, t136 * t191 + t151, t249 - t253, -t250 - t252, t291, t22 * qJD(2) + t318, 0, 0, 0, 0, 0, t65 * qJD(2) - t257 + t58, t69 * qJD(2) - t258 - t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, t122 * qJD(2) - t296, t282, t278, 0, t13 * qJD(2) + t112 * qJD(5) - t328, 0, 0, 0, 0, 0, t304 + t314, t83 * qJD(2) - t311 + t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t248 + t271) * t210 (-t251 + t270) * t210, t283, t20 * qJD(2) + t112 * qJD(4) + t317, 0, 0, 0, 0, 0, -t242, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224, t234, t26, -t222, t180, t6 * qJD(2) + qJD(3) * t235 + qJD(4) * t236 - t17 * qJD(6) + t337, t5 * qJD(2) - qJD(3) * t236 + qJD(4) * t235 + t16 * qJD(6) - t338; 0, 0, 0, -t176, -t272, 0, 0, 0, t263, t262, t297, 0, t298, -t255, -t265 - t301, -t210 * qJD(4) + t300, 0, -t105 * qJD(4) - t315, -t207 * t265 - t333, t206 * t265 + t331, t279 - t340, t23 * qJD(3) + t14 * qJD(4) - t19 * qJD(5) - t339, -t287 * t329 + t28, t18 - t316, t59 - t312, -t313 - t302, -t139, t66 * qJD(3) - qJD(5) * t236 - t3 * qJD(6) + t142 * t265 - t350, t68 * qJD(3) - t82 * qJD(4) - qJD(5) * t235 - t4 * qJD(6) + t349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t203, qJD(3), 0, 0, t203, qJD(3) * t207, -qJD(3) * t206, t169 * qJD(5), t208 * qJD(3) - t126 * qJD(5), -t142 * t276, t53 * qJD(6), 0, 0, 0, -qJD(3) * t142 - t173 * t276, -qJD(3) * t145 + t127 * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t202, qJD(2), 0, 0, t202, t270, -t271, 0, t154 * qJD(5) + t231, 0, 0, 0, 0, 0, -t366, -t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, -t191, 0, -t292, -t248, t251, t280, t330, 0, 0, 0, 0, 0, t246, -t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, t154 * qJD(3) + t232, 0, 0, 0, 0, 0, -t310, -t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, t233, t35, -t365, -t267 / 0.2e1, -t89 * qJD(6) - t173 * t277 - t344, t88 * qJD(6) + t173 * t281 - t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, 0, -t190, t254, -t190, t176, 0 (-qJD(1) * t136 - qJD(4)) * t210, -t249, t252, -t291, -t23 * qJD(2) - t279 - t318, 0, 0, 0, 0, 0, -t66 * qJD(2) + t257 + t59, -t68 * qJD(2) + t258 - t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t202, -qJD(2), 0, 0, -t202, -t270, t271, 0, t155 * qJD(5) - t231, 0, 0, 0, 0, 0, t366, t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, 0, 0, 0, -t280, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, -t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t269, -t273, t105 * qJD(2) + t268 + t296, t250 - t282, -t253 - t278, -t143 * qJD(2), -t14 * qJD(2) + t143 * qJD(3) - t111 * qJD(5) + t328, 0, 0, 0, 0, 0, -t256 + t302 - t314, t82 * qJD(2) - t67 * qJD(6) + t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, t191, 0, t292, t248, -t251, -t280, -t330, 0, 0, 0, 0, 0, -t246, t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, 0, 0, 0, t280, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, t127 - t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207 * t176, t206 * t176, -t283, t19 * qJD(2) + t111 * qJD(4) - t317, 0, 0, 0, 0, 0, t222, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, -t155 * qJD(3) - t232, 0, 0, 0, 0, 0, -t276 + t310, t127 + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t369, t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, -t234, t31, t242, t180, t3 * qJD(2) - t71 * qJD(3) - qJD(4) * t216 + t286 - t337, t4 * qJD(2) + qJD(3) * t216 + t67 * qJD(4) - t289 + t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, -t233, -t60, t364, t267 / 0.2e1, t145 * t241 + t344, -t142 * t241 + t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, -t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t33;
