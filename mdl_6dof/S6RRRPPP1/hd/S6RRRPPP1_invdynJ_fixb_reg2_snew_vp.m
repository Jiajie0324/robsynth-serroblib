% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha4,d1,d2,d3,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 04:05
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPPP1_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 04:01:52
% EndTime: 2019-05-07 04:02:41
% DurationCPUTime: 20.89s
% Computational Cost: add. (68218->587), mult. (145568->760), div. (0->0), fcn. (108914->10), ass. (0->394)
t345 = sin(qJ(3));
t346 = sin(qJ(2));
t348 = cos(qJ(3));
t349 = cos(qJ(2));
t340 = sin(pkin(10));
t442 = qJD(1) * t346;
t318 = qJD(2) * t348 - t345 * t442;
t331 = t346 * qJDD(1);
t435 = qJD(1) * qJD(2);
t425 = t349 * t435;
t321 = t331 + t425;
t387 = -t345 * qJDD(2) - t321 * t348;
t294 = qJD(3) * t318 - t387;
t342 = cos(pkin(10));
t343 = cos(pkin(6));
t319 = qJD(2) * t345 + t348 * t442;
t388 = t348 * qJDD(2) - t345 * t321;
t371 = qJD(3) * t319 - t388;
t341 = sin(pkin(6));
t332 = t349 * qJDD(1);
t426 = t346 * t435;
t322 = t332 - t426;
t382 = qJDD(3) - t322;
t373 = t341 * t382;
t534 = t343 * t371 - t373;
t233 = t342 * t294 - t340 * t534;
t330 = -t349 * qJD(1) + qJD(3);
t446 = t342 * t343;
t449 = t341 * t342;
t282 = -t318 * t446 + t319 * t340 - t330 * t449;
t302 = t318 * t341 - t343 * t330;
t465 = t282 * t302;
t518 = t233 + t465;
t232 = t294 * t340 + t342 * t534;
t390 = t318 * t343 + t330 * t341;
t284 = t319 * t342 + t340 * t390;
t254 = t284 * t302;
t182 = t232 - t254;
t568 = t182 * t342;
t578 = -t518 * t340 - t568;
t500 = t284 ^ 2;
t501 = t282 ^ 2;
t229 = t501 - t500;
t569 = t182 * t340;
t577 = t518 * t342 - t569;
t601 = t229 * t341 + t343 * t577;
t602 = -t229 * t343 + t341 * t577;
t638 = t346 * (t345 * t601 - t348 * t578) + t349 * t602;
t362 = -t341 * t371 - t343 * t382;
t464 = t284 * t282;
t357 = t362 + t464;
t471 = t357 * t342;
t301 = t302 ^ 2;
t515 = -t301 - t501;
t533 = t515 * t340 - t471;
t579 = t182 * t343 + t341 * t533;
t637 = pkin(2) * t579;
t614 = pkin(3) * t579;
t636 = t341 * t579;
t635 = t346 * t579;
t247 = -t500 + t301;
t472 = t357 * t340;
t396 = -t247 * t342 + t472;
t514 = -t465 + t233;
t550 = -t341 * t396 + t514 * t343;
t634 = t349 * t550;
t621 = t345 * t578 + t348 * t601;
t513 = -t500 - t301;
t358 = t362 - t464;
t520 = t358 * t340;
t395 = t342 * t513 + t520;
t580 = -t341 * t395 - t518 * t343;
t615 = pkin(2) * t580;
t450 = t340 * t343;
t544 = t182 * t341;
t582 = -t357 * t446 + t450 * t515 - t544;
t558 = t515 * t342 + t472;
t586 = t345 * t558;
t597 = t348 * t582 + t586;
t631 = pkin(2) * t597;
t540 = t341 * t518;
t581 = -t358 * t450 - t446 * t513 + t540;
t525 = t342 * t358;
t552 = t340 * t513 - t525;
t587 = t345 * t552;
t598 = t348 * t581 + t587;
t630 = pkin(2) * t598;
t613 = pkin(3) * t580;
t629 = pkin(9) * t597;
t628 = pkin(9) * t598;
t152 = t247 * t340 + t471;
t627 = t152 * t345;
t626 = t152 * t348;
t625 = t341 * t580;
t605 = t346 * t580;
t246 = t501 - t301;
t394 = t246 * t340 - t525;
t519 = t232 + t254;
t556 = -t341 * t394 + t519 * t343;
t624 = t349 * t556;
t583 = t348 * t558;
t599 = -t345 * t582 + t583;
t623 = pkin(9) * t599 - t637;
t584 = t348 * t552;
t600 = -t345 * t581 + t584;
t622 = pkin(9) * t600 - t615;
t620 = pkin(8) * (t349 * t599 + t635) - pkin(1) * t597;
t619 = pkin(8) * (t349 * t600 + t605) - pkin(1) * t598;
t560 = t514 * t340 - t342 * t519;
t512 = -t500 - t501;
t561 = -t341 * t512 - t514 * t446 - t519 * t450;
t573 = t345 * t560 + t348 * t561;
t617 = pkin(2) * t573;
t612 = pkin(3) * t581;
t611 = pkin(3) * t582;
t610 = pkin(9) * t573;
t155 = t246 * t342 + t520;
t609 = t155 * t345;
t608 = t155 * t348;
t549 = t512 * t343 + (-t519 * t340 - t514 * t342) * t341;
t574 = -t345 * t561 + t348 * t560;
t603 = -pkin(2) * t549 + pkin(9) * t574;
t596 = (-t343 * t582 - t636) * qJ(4);
t595 = (-t343 * t581 - t625) * qJ(4);
t594 = pkin(8) * (t346 * t549 + t349 * t574) - pkin(1) * t573;
t592 = pkin(3) * t549;
t498 = pkin(3) * t561;
t591 = qJ(4) * t552;
t590 = qJ(4) * t558;
t589 = qJ(4) * t560;
t485 = t519 * t341;
t555 = -t246 * t450 + t358 * t446 - t485;
t576 = t348 * t555 - t609;
t481 = t514 * t341;
t557 = t247 * t446 - t357 * t450 - t481;
t575 = t348 * t557 - t627;
t572 = (-t341 * t549 - t343 * t561) * qJ(4);
t571 = t346 * (-t345 * t555 - t608) - t624;
t570 = t346 * (-t345 * t557 - t626) - t634;
t548 = pkin(4) * t182;
t545 = qJ(5) * t518;
t257 = t343 * t362;
t160 = (t282 * t340 + t284 * t342) * t302 * t341 - t257;
t457 = t302 * t340;
t245 = t284 * t457;
t455 = t302 * t342;
t432 = t282 * t455;
t413 = -t245 + t432;
t430 = t302 * t450;
t239 = t282 * t430;
t428 = t302 * t446;
t240 = t284 * t428;
t517 = t341 * t362 + t239 + t240;
t539 = t345 * t517;
t554 = -t349 * t160 + t346 * (t348 * t413 - t539);
t551 = (-t513 - t301) * pkin(4) - qJ(5) * t358;
t547 = qJ(5) * t512;
t546 = qJ(5) * t515;
t538 = t348 * t517;
t532 = (-t512 - t301) * pkin(4);
t527 = t345 * t413 + t538;
t454 = t318 * t319;
t368 = t382 + t454;
t524 = t345 * t368;
t383 = t232 * t340 - t432;
t169 = t345 * t383;
t443 = t342 * t233 + t245;
t170 = t345 * t443;
t522 = t348 * t368;
t171 = t348 * t383;
t172 = t348 * t443;
t440 = qJD(5) * t284;
t273 = 0.2e1 * t440;
t439 = qJD(6) * t282;
t516 = -0.2e1 * t439 + t273;
t511 = t233 * pkin(5) + qJ(6) * t357;
t224 = pkin(4) * t282 - qJ(5) * t284;
t351 = qJD(1) ^ 2;
t347 = sin(qJ(1));
t350 = cos(qJ(1));
t424 = t347 * g(1) - t350 * g(2);
t314 = qJDD(1) * pkin(1) + t351 * pkin(8) + t424;
t405 = -t322 + t426;
t406 = t321 + t425;
t264 = pkin(2) * t405 - pkin(9) * t406 - t314;
t414 = g(1) * t350 + g(2) * t347;
t491 = qJDD(1) * pkin(8);
t364 = -pkin(1) * t351 - t414 + t491;
t307 = -t346 * g(3) + t349 * t364;
t421 = -pkin(2) * t349 - pkin(9) * t346;
t381 = t351 * t421;
t499 = qJD(2) ^ 2;
t288 = -pkin(2) * t499 + qJDD(2) * pkin(9) + t349 * t381 + t307;
t216 = -t348 * t264 + t345 * t288;
t492 = qJ(4) * t341;
t296 = -pkin(3) * t318 - t319 * t492;
t150 = -t319 * t296 + t382 * pkin(3) + (-t294 * t343 + t330 * t390) * qJ(4) - t216;
t217 = t345 * t264 + t348 * t288;
t265 = (qJD(3) - t330) * t319 - t388;
t327 = t330 ^ 2;
t151 = -pkin(3) * t327 + t318 * t296 + (-t265 * t343 + t373) * qJ(4) + t217;
t306 = t349 * g(3) + t346 * t364;
t287 = -qJDD(2) * pkin(2) - t499 * pkin(9) + t346 * t381 + t306;
t317 = t319 ^ 2;
t436 = qJD(3) + t330;
t506 = t319 * t436 - t388;
t353 = t506 * pkin(3) + (-t294 * t341 - t317 * t343 - t318 * t390) * qJ(4) + t287;
t352 = t341 * t353;
t75 = -0.2e1 * qJD(4) * t282 + t150 * t450 + t342 * t151 + t340 * t352;
t380 = -qJ(5) * t362 - 0.2e1 * qJD(5) * t302 - t282 * t224 + t75;
t497 = pkin(4) * t301;
t59 = t380 - t497;
t412 = -t150 * t446 + t151 * t340 - t342 * t352;
t372 = pkin(4) * t362 - t301 * qJ(5) + qJDD(5) + t412;
t60 = (0.2e1 * qJD(4) + t224) * t284 + t372;
t35 = t340 * t60 + t342 * t59;
t495 = pkin(4) * t342;
t272 = -0.2e1 * t440;
t102 = t150 * t341 - t343 * t353 - qJDD(4);
t367 = t102 + t545 - t548;
t67 = t272 - t367;
t510 = (qJ(5) * t340 + t495) * t67 - qJ(4) * t35;
t219 = t232 * t446;
t463 = t284 * t341;
t433 = t282 * t463;
t384 = -t219 - t239 + t433;
t509 = t348 * t384 + t169;
t218 = t233 * t450;
t385 = t218 - t240 - t433;
t508 = t348 * t385 + t170;
t106 = t343 * t395 - t540;
t490 = t102 * t340;
t400 = -t490 - t591;
t505 = pkin(3) * t106 + t341 * t400 - t343 * t75;
t489 = t102 * t342;
t401 = t489 + t590;
t441 = qJD(4) * t284;
t74 = t412 + 0.2e1 * t441;
t504 = t341 * t401 - t343 * t74 + t611;
t503 = t346 * (-t345 * t385 + t172);
t451 = t340 * t341;
t431 = t302 * t451;
t462 = t284 * t343;
t360 = -t232 * t449 + (-t431 - t462) * t282;
t502 = t346 * (-t345 * t384 + t171) - t349 * t360;
t316 = t318 ^ 2;
t496 = pkin(4) * t340;
t494 = pkin(4) + qJ(6);
t461 = t287 * t345;
t460 = t287 * t348;
t291 = -t382 + t454;
t459 = t291 * t345;
t458 = t291 * t348;
t453 = t330 * t345;
t452 = t330 * t348;
t448 = t341 * t349;
t329 = t349 * t351 * t346;
t445 = t346 * (qJDD(2) + t329);
t444 = t349 * (qJDD(2) - t329);
t438 = qJD(6) * t302;
t434 = t233 * t451;
t429 = t302 * t449;
t226 = t282 * t462;
t427 = t349 * t454;
t165 = t216 * t345 + t348 * t217;
t422 = t346 * t306 + t349 * t307;
t355 = t60 + t511;
t50 = (-pkin(5) * t282 + 0.2e1 * qJD(6)) * t302 + t355;
t242 = pkin(5) * t284 + qJ(6) * t302;
t365 = -t302 * t242 + qJDD(6) + t380;
t361 = -pkin(5) * t232 + t365;
t52 = -qJ(6) * t501 + t361 - t497;
t13 = qJ(5) * t52 - t494 * t50;
t404 = t340 * t52 - t342 * t50;
t359 = pkin(5) * t501 + t242 * t284 + t367;
t356 = qJ(6) * t232 - t359;
t54 = t272 + t356 + 0.2e1 * t439;
t16 = -t341 * t54 + t343 * t404;
t420 = pkin(3) * t16 + t343 * t13;
t403 = t340 * t59 - t342 * t60;
t28 = -t341 * t67 + t343 * t403;
t36 = -pkin(4) * t60 + qJ(5) * t59;
t419 = pkin(3) * t28 + t343 * t36;
t43 = (-t513 - t501) * qJ(6) + t361 + t551;
t418 = t343 * t43 + t612;
t53 = pkin(4) * t357 - t546 + t60;
t95 = -t343 * t533 + t544;
t417 = pkin(3) * t95 + t343 * t53;
t180 = qJ(5) * t519;
t82 = -t494 * t514 - t180;
t415 = t343 * t82 + t498;
t51 = t380 + t551;
t410 = t343 * t51 + t612;
t41 = pkin(5) * t465 - t224 * t284 - t357 * t494 - t372 - 0.2e1 * t438 - 0.2e1 * t441 - t511 + t546;
t409 = t343 * t41 + t611;
t127 = -pkin(4) * t514 - t180;
t408 = t127 * t343 + t498;
t402 = t340 * t75 - t342 * t74;
t46 = t340 * t74 + t342 * t75;
t392 = t216 * t348 - t217 * t345;
t389 = -pkin(1) + t421;
t39 = t102 * t341 + t343 * t402;
t386 = pkin(3) * t39 + t46 * t492;
t17 = pkin(5) * t52 - t494 * t54;
t29 = t340 * t50 + t342 * t52;
t31 = pkin(5) * t50 - qJ(5) * t54;
t379 = qJ(4) * t29 + t17 * t342 + t31 * t340;
t55 = t532 + t380;
t56 = t60 - t547;
t378 = t340 * t56 + t342 * t55 + t589;
t42 = (-t512 - t501) * qJ(6) + (-t519 - t232) * pkin(5) + t532 + t365;
t44 = -t547 + 0.2e1 * t438 + (t514 - t465) * pkin(5) + t355;
t377 = t340 * t44 + t342 * t42 + t589;
t376 = t46 + t589;
t47 = pkin(5) * t513 - t356 + t516 + t545;
t89 = -pkin(5) * t358 + t494 * t518;
t375 = t340 * t47 + t342 * t89 + t591;
t128 = pkin(5) * t357 - qJ(5) * t182;
t45 = -t548 + pkin(5) * t515 + (-t182 - t232) * qJ(6) + t359 + t516;
t374 = t128 * t340 + t342 * t45 + t590;
t57 = t273 + t367 + t545;
t370 = -t340 * t57 - t495 * t518 - t591;
t58 = t67 + t548;
t369 = -qJ(5) * t569 - t342 * t58 + t590;
t338 = t349 ^ 2;
t337 = t346 ^ 2;
t334 = t338 * t351;
t333 = t337 * t351;
t323 = t332 - 0.2e1 * t426;
t320 = t331 + 0.2e1 * t425;
t310 = t330 * t318;
t309 = -t317 + t327;
t308 = t316 - t327;
t304 = t317 - t316;
t300 = -t317 - t327;
t295 = -t327 - t316;
t290 = t316 + t317;
t270 = -t318 * t436 + t387;
t269 = t294 - t310;
t268 = t294 + t310;
t256 = -t300 * t345 + t458;
t255 = t300 * t348 + t459;
t244 = t295 * t348 - t524;
t243 = t295 * t345 + t522;
t238 = t284 * t429;
t213 = -t265 * t348 + t269 * t345;
t195 = (t282 * t342 - t284 * t340) * t302;
t159 = -t282 * t431 - t238 + t257;
t140 = t218 + (-t282 * t341 - t428) * t284;
t137 = t226 - t238 + t434;
t136 = t434 + (t282 * t343 - t429) * t284;
t135 = t226 + (t233 * t340 - t284 * t455) * t341;
t134 = -t219 + (-t430 + t463) * t282;
t131 = t226 + (t232 * t342 + t282 * t457) * t341;
t118 = t343 * t394 + t485;
t115 = t343 * t396 + t481;
t79 = -t106 * t345 - t584;
t76 = t106 * t348 - t587;
t73 = -t345 * t95 - t583;
t70 = t348 * t95 - t586;
t49 = -t489 + (-t106 * t343 + t625) * qJ(4);
t48 = -t490 + t596;
t40 = t341 * t75 + t343 * t400 + t613;
t38 = -t102 * t343 + t341 * t402;
t37 = t341 * t74 + t343 * t401 - t614;
t34 = t342 * t57 - t518 * t496 + t595;
t33 = qJ(5) * t568 - t340 * t58 + (-t343 * t95 + t636) * qJ(4);
t32 = t343 * t376 - t592;
t30 = t572 - t402;
t27 = t341 * t403 + t343 * t67;
t26 = t128 * t342 - t340 * t45 + t596;
t25 = -t340 * t89 + t342 * t47 + t595;
t24 = -t341 * t51 - t343 * t370 - t613;
t23 = -t341 * t53 - t343 * t369 + t614;
t22 = -t340 * t55 + t342 * t56 + t572;
t21 = qJ(4) * t343 * t46 - pkin(3) * t38;
t20 = -t345 * t39 + t348 * t46;
t19 = t345 * t46 + t348 * t39;
t18 = -t127 * t341 + t343 * t378 - t592;
t15 = t341 * t404 + t343 * t54;
t14 = (-t341 * t38 - t343 * t39) * qJ(4);
t12 = -t341 * t43 + t343 * t375 - t613;
t11 = -t340 * t42 + t342 * t44 + t572;
t10 = -t341 * t41 + t343 * t374 - t614;
t9 = -t341 * t82 + t343 * t377 - t592;
t8 = -t28 * t345 + t348 * t35;
t7 = t28 * t348 + t345 * t35;
t6 = -t16 * t345 + t29 * t348;
t5 = t16 * t348 + t29 * t345;
t4 = (-qJ(5) * t342 + t496) * t67 + (-t27 * t341 - t28 * t343) * qJ(4);
t3 = -pkin(3) * t27 - t341 * t36 - t343 * t510;
t2 = -t17 * t340 + t31 * t342 + (-t15 * t341 - t16 * t343) * qJ(4);
t1 = -pkin(3) * t15 - t13 * t341 + t343 * t379;
t61 = [0, 0, 0, 0, 0, qJDD(1), t424, t414, 0, 0, t406 * t346, t320 * t349 + t323 * t346, t445 + t349 * (-t333 + t499), -t405 * t349, t346 * (t334 - t499) + t444, 0, t349 * t314 + pkin(1) * t323 + pkin(8) * (t349 * (-t334 - t499) - t445), -t346 * t314 - pkin(1) * t320 + pkin(8) * (-t444 - t346 * (-t333 - t499)), pkin(1) * (t333 + t334) + (t337 + t338) * t491 + t422, pkin(1) * t314 + pkin(8) * t422, t346 * (t294 * t348 - t319 * t453) + t427, t346 * (-t268 * t345 - t348 * t506) - t349 * t304, t346 * (-t309 * t345 + t522) - t349 * t269, t346 * (-t318 * t452 + t345 * t371) - t427, t346 * (t308 * t348 + t459) + t349 * t265, -t349 * t382 + t346 * (t318 * t348 + t319 * t345) * t330, t346 * (-pkin(9) * t243 + t461) + t349 * (-pkin(2) * t243 + t216) - pkin(1) * t243 + pkin(8) * (t244 * t349 + t346 * t506), t346 * (-pkin(9) * t255 + t460) + t349 * (-pkin(2) * t255 + t217) - pkin(1) * t255 + pkin(8) * (t256 * t349 - t270 * t346), t346 * t392 + pkin(8) * (t213 * t349 - t290 * t346) + t389 * (-t265 * t345 - t269 * t348), pkin(8) * (t165 * t349 + t287 * t346) - t389 * t392, -t349 * t135 + t503, -t638, t570, t346 * (-t134 * t345 + t171) + t349 * t131, t346 * (-t118 * t345 + t608) + t624, t554, t346 * (-t345 * t37 + t348 * t48 - t629) + t349 * (-t504 - t631) + t620, t346 * (-pkin(9) * t76 - t345 * t40 + t348 * t49) + t349 * (-pkin(2) * t76 - t505) - pkin(1) * t76 + pkin(8) * (t349 * t79 - t605), t346 * (t30 * t348 - t32 * t345 - t610) + t349 * (-t498 - t617) - t376 * t448 + t594, t346 * (-pkin(9) * t19 + t14 * t348 - t21 * t345) + t349 * (-pkin(2) * t19 - t386) - pkin(1) * t19 + pkin(8) * (t20 * t349 + t346 * t38), t346 * (t195 * t348 - t539) + t349 * t159, t346 * (-t115 * t345 + t626) + t634, t571, t346 * (-t140 * t345 + t172) - t349 * t137, -t638, t502, t346 * (-t18 * t345 + t22 * t348 - t610) + t349 * (-t408 - t617) - t378 * t448 + t594, t346 * (-pkin(9) * t70 - t23 * t345 + t33 * t348) + t349 * (-pkin(2) * t70 - t417) - pkin(1) * t70 + pkin(8) * (t349 * t73 - t635) + t369 * t448, t346 * (-t24 * t345 + t34 * t348 - t628) + t349 * (-t410 - t630) + t370 * t448 + t619, t346 * (-pkin(9) * t7 - t3 * t345 + t348 * t4) + t349 * (-pkin(2) * t7 - t419) - pkin(1) * t7 + pkin(8) * (t27 * t346 + t349 * t8) + t510 * t448, t554, t571, t570, t502, t638, -t349 * t136 + t503, t346 * (t11 * t348 - t345 * t9 - t610) + t349 * (-t415 - t617) - t377 * t448 + t594, t346 * (-t12 * t345 + t25 * t348 - t628) + t349 * (-t418 - t630) - t375 * t448 + t619, t346 * (-t10 * t345 + t26 * t348 - t629) + t349 * (-t409 - t631) - t374 * t448 + t620, t346 * (-pkin(9) * t5 - t1 * t345 + t2 * t348) + t349 * (-pkin(2) * t5 - t420) - pkin(1) * t5 + pkin(8) * (t15 * t346 + t349 * t6) - t379 * t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t329, t333 - t334, t331, t329, t332, qJDD(2), -t306, -t307, 0, 0, t294 * t345 + t319 * t452, t268 * t348 - t345 * t506, t309 * t348 + t524, -t318 * t453 - t348 * t371, t308 * t345 - t458, (t318 * t345 - t319 * t348) * t330, -pkin(2) * t506 + pkin(9) * t244 - t460, pkin(2) * t270 + pkin(9) * t256 + t461, pkin(2) * t290 + pkin(9) * t213 + t165, -pkin(2) * t287 + pkin(9) * t165, t508, t621, t575, t134 * t348 + t169, t118 * t348 + t609, t527, t345 * t48 + t348 * t37 + t623, pkin(9) * t79 + t345 * t49 + t348 * t40 + t615, t30 * t345 + t32 * t348 + t603, -pkin(2) * t38 + pkin(9) * t20 + t14 * t345 + t21 * t348, t195 * t345 + t538, t115 * t348 + t627, t576, t140 * t348 + t170, t621, t509, t18 * t348 + t22 * t345 + t603, pkin(9) * t73 + t23 * t348 + t33 * t345 + t637, t24 * t348 + t34 * t345 + t622, -pkin(2) * t27 + pkin(9) * t8 + t3 * t348 + t345 * t4, t527, t576, t575, t509, -t621, t508, t11 * t345 + t348 * t9 + t603, t12 * t348 + t25 * t345 + t622, t10 * t348 + t26 * t345 + t623, -pkin(2) * t15 + pkin(9) * t6 + t1 * t348 + t2 * t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, t304, t269, t454, -t265, t382, -t216, -t217, 0, 0, t135, t602, t550, -t131, -t556, t160, t504, t505, t341 * t376 + t498, t386, -t159, -t550, t556, t137, t602, t360, t341 * t378 + t408, -t341 * t369 + t417, -t341 * t370 + t410, -t341 * t510 + t419, t160, t556, t550, t360, -t602, t136, t341 * t377 + t415, t341 * t375 + t418, t341 * t374 + t409, t341 * t379 + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, t518, t512, -t102, 0, 0, 0, 0, 0, 0, t512, -t182, -t518, t67, 0, 0, 0, 0, 0, 0, t512, -t518, t182, t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, -t357, t513, t60, 0, 0, 0, 0, 0, 0, t514, t513, t357, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t519, -t358, t515, t52;];
tauJ_reg  = t61;
