% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha4,d1,d2,d3,theta4]';
% 
% Output:
% tauc_reg [6x29]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPP1_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPP1_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPP1_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPP1_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:18:29
% EndTime: 2019-03-09 15:18:48
% DurationCPUTime: 7.55s
% Computational Cost: add. (11809->590), mult. (31656->798), div. (0->0), fcn. (22411->8), ass. (0->273)
t247 = sin(qJ(2));
t249 = cos(qJ(2));
t245 = cos(pkin(6));
t248 = cos(qJ(3));
t364 = t245 * t248;
t330 = qJ(4) * t364;
t270 = pkin(3) * t247 - t249 * t330;
t299 = pkin(2) * t247 - pkin(9) * t249;
t211 = t299 * qJD(1);
t246 = sin(qJ(3));
t346 = qJD(1) * t247;
t325 = t246 * t346;
t349 = pkin(8) * t325 + t248 * t211;
t119 = qJD(1) * t270 + t349;
t384 = qJ(4) * t245;
t313 = pkin(9) + t384;
t291 = qJD(3) * t313;
t338 = qJD(4) * t245;
t319 = t246 * t338;
t161 = -t248 * t291 - t319;
t422 = t119 - t161;
t239 = t249 * qJD(1);
t238 = pkin(8) * t239;
t243 = sin(pkin(6));
t371 = t243 * t248;
t283 = pkin(3) * t246 - qJ(4) * t371;
t155 = t239 * t283 + t238;
t334 = t243 * qJD(4);
t159 = qJD(3) * t283 - t246 * t334;
t421 = t155 - t159;
t189 = t246 * t211;
t318 = t248 * t338;
t362 = t247 * t248;
t360 = t249 * t245;
t372 = t243 * t247;
t419 = -t246 * t360 + t372;
t420 = -t246 * t291 + t318 - t189 - (-pkin(8) * t362 + qJ(4) * t419) * qJD(1);
t244 = cos(pkin(10));
t340 = qJD(3) * t248;
t341 = qJD(3) * t246;
t242 = sin(pkin(10));
t374 = t242 * t245;
t361 = t248 * t249;
t407 = t242 * t419 + t244 * t361;
t354 = t407 * qJD(1) - t244 * t340 + t341 * t374;
t375 = t242 * t243;
t391 = -t420 * t244 + t374 * t422 + t421 * t375;
t389 = t243 * t422 - t421 * t245;
t343 = qJD(2) * t248;
t205 = t325 - t343;
t404 = t239 - qJD(3);
t418 = t205 * t404;
t345 = qJD(2) * t246;
t207 = t248 * t346 + t345;
t417 = t207 * t404;
t308 = t404 * t243;
t379 = t205 * t245;
t271 = t308 + t379;
t416 = t242 * t271;
t366 = t244 * t246;
t281 = t242 * t248 + t245 * t366;
t408 = -t244 * t372 + t249 * t281;
t355 = t408 * qJD(1) - t281 * qJD(3);
t415 = (t119 * t245 + t155 * t243) * t244 + t420 * t242;
t332 = qJD(1) * qJD(2);
t414 = -0.2e1 * t332;
t377 = t207 * t243;
t220 = -pkin(2) * t249 - pkin(9) * t247 - pkin(1);
t193 = t220 * qJD(1);
t223 = qJD(2) * pkin(9) + t238;
t135 = t248 * t193 - t246 * t223;
t108 = -t207 * t384 + t135;
t136 = t246 * t193 + t248 * t223;
t109 = qJ(4) * t379 - t136;
t380 = t205 * t243;
t133 = pkin(3) * t207 + qJ(4) * t380;
t44 = t244 * t108 + t109 * t374 + t133 * t375;
t386 = qJ(5) * t377 - qJD(5) * t245 - t244 * t334 + t44;
t149 = t245 * t404 - t380;
t317 = t249 * t332;
t324 = t247 * t341;
t331 = qJD(2) * qJD(3);
t157 = -qJD(1) * t324 + (t317 + t331) * t248;
t323 = t247 * t340;
t342 = qJD(2) * t249;
t158 = qJD(1) * (t246 * t342 + t323) + t246 * t331;
t315 = t247 * t332;
t300 = t243 * t315;
t265 = -t158 * t245 + t300;
t80 = t244 * t157 + t242 * t265;
t378 = t207 * t242;
t405 = t243 ^ 2 + t245 ^ 2;
t82 = -t244 * t271 - t378 * t405;
t413 = -t82 * t149 + t80;
t282 = qJ(4) * t243 * t246 + pkin(3) * t248;
t199 = -pkin(2) - t282;
t208 = t313 * t246;
t412 = t244 * (t199 * t243 - t208 * t245);
t411 = (t109 * t245 + t133 * t243) * t244;
t368 = t244 * t207;
t106 = t368 - t416;
t148 = t149 ^ 2;
t410 = -t106 ^ 2 - t148;
t367 = t244 * t245;
t409 = t161 * t367 - t415;
t183 = t242 * t364 + t366;
t406 = -qJ(5) * t354 + t183 * qJD(5) - t389;
t363 = t246 * t247;
t370 = t243 * t249;
t280 = t245 * t363 + t370;
t222 = -qJD(2) * pkin(2) + pkin(8) * t346;
t120 = pkin(3) * t205 - qJ(4) * t377 + t222;
t91 = -qJ(4) * t271 + t136;
t95 = -pkin(3) * t404 + t108;
t31 = -t242 * t91 + t244 * (t120 * t243 + t245 * t95);
t212 = t299 * qJD(2);
t351 = t246 * t212 + t220 * t340;
t64 = (-t334 + (-pkin(8) * qJD(3) - qJD(2) * t384) * t246) * t249 + (-pkin(8) * t343 - t319 + (qJD(2) * t243 - t245 * t340) * qJ(4)) * t247 + t351;
t234 = pkin(8) * t361;
t344 = qJD(2) * t247;
t400 = pkin(8) * t246;
t350 = t248 * t212 + t344 * t400;
t365 = t245 * t247;
t73 = -t247 * t318 + t270 * qJD(2) + (-t234 + (qJ(4) * t365 - t220) * t246) * qJD(3) + t350;
t272 = pkin(8) + t283;
t96 = (qJD(3) * t282 - t248 * t334) * t247 + t272 * t342;
t18 = -t242 * t64 + (t243 * t96 + t245 * t73) * t244;
t194 = qJD(1) * t212;
t284 = -t193 * t340 - t246 * t194 + t223 * t341;
t303 = pkin(8) * t315;
t255 = t248 * t303 + t284;
t48 = qJ(4) * t265 - qJD(4) * t271 - t255;
t285 = -qJ(4) * t157 - qJD(4) * t207;
t353 = t248 * t194 + t246 * t303;
t403 = t136 * qJD(3) - t353;
t56 = pkin(3) * t315 + t245 * t285 - t403;
t76 = t158 * pkin(3) + pkin(8) * t317 + t243 * t285;
t10 = -t242 * t48 + t244 * (t243 * t76 + t245 * t56);
t348 = t246 * t220 + t234;
t123 = -qJ(4) * t280 + t348;
t204 = t248 * t220;
t128 = -t247 * t330 + t204 + (-pkin(3) - t400) * t249;
t162 = t272 * t247;
t58 = -t242 * t123 + (t128 * t245 + t162 * t243) * t244;
t279 = t246 * t370 + t365;
t175 = t279 * qJD(1);
t395 = qJ(5) * t175 - t243 * (qJ(5) * t341 - qJD(5) * t248) + t391;
t399 = pkin(4) + qJ(6);
t381 = t159 * t244;
t398 = t175 * t399 + (qJD(6) * t248 - t341 * t399 - t381) * t243 - t409 - t354 * pkin(5);
t397 = -pkin(5) * t355 + t395;
t182 = t242 * t246 - t244 * t364;
t396 = -t182 * qJD(6) + t355 * t399 + t406;
t394 = -t175 * pkin(4) - (-pkin(4) * t341 - t381) * t243 + t409;
t393 = pkin(4) * t355 + t406;
t392 = -(t159 * t243 + t161 * t245) * t244 + t415;
t125 = -t205 * t242 + t207 * t367;
t126 = -t205 * t244 - t207 * t374;
t67 = -t243 * t109 + t245 * t133;
t278 = -t126 * qJ(5) + t67;
t336 = qJD(5) * t242;
t388 = -t125 * t399 + (-qJD(6) * t244 - t336) * t243 - t278;
t322 = t242 * t334;
t101 = t242 * t108;
t356 = -pkin(4) * t377 + t101;
t387 = -qJD(6) * t245 + t322 + t109 * t367 - t126 * pkin(5) - (-qJ(6) * t207 - t133 * t244) * t243 - t356;
t385 = pkin(5) * t125 - t386;
t105 = t205 * t367 + t244 * t308 + t378;
t383 = t105 * t106;
t382 = t157 * t246;
t376 = t207 * t248;
t373 = t243 * t244;
t251 = qJD(1) ^ 2;
t359 = t249 * t251;
t250 = qJD(2) ^ 2;
t358 = t250 * t247;
t357 = t250 * t249;
t209 = t313 * t248;
t186 = t242 * t209;
t352 = pkin(4) * t371 + t186;
t185 = pkin(3) * t374 + qJ(4) * t373;
t240 = t247 ^ 2;
t347 = -t249 ^ 2 + t240;
t339 = qJD(4) * t149;
t337 = qJD(5) * t106;
t335 = t222 * qJD(3);
t11 = t244 * t48 + t56 * t374 + t76 * t375;
t19 = t244 * t64 + t73 * t374 + t96 * t375;
t32 = t120 * t375 + t244 * t91 + t95 * t374;
t59 = t244 * t123 + t128 * t374 + t162 * t375;
t98 = t199 * t375 - t208 * t374 + t244 * t209;
t326 = -pkin(3) * t244 - pkin(4);
t321 = t246 * t335;
t320 = t248 * t335;
t314 = -qJ(5) * t242 - pkin(3);
t26 = -t243 * t56 + t245 * t76;
t40 = -t243 * t73 + t245 * t96;
t312 = pkin(1) * t414;
t84 = -t243 * t128 + t245 * t162;
t311 = t158 * t243 + t245 * t315;
t131 = t245 * t199 + t243 * t208;
t310 = t248 * t404;
t309 = t249 * t404;
t307 = t205 + t343;
t306 = -t207 + t345;
t305 = qJD(3) * t404;
t301 = t245 * t323;
t4 = -qJ(5) * t311 + t149 * qJD(5) - t11;
t163 = -qJ(5) * t245 - t185;
t60 = t245 * t120 - t243 * t95 + qJD(4);
t79 = t157 * t242 + t158 * t367 - t244 * t300;
t297 = t243 * t341 - t175;
t296 = t246 * t305;
t295 = t248 * t305;
t81 = t368 * t405 - t416;
t294 = t105 * t82 - t106 * t81;
t24 = qJ(5) * t149 - t32;
t188 = t243 * t363 - t360;
t49 = -qJ(5) * t188 - t59;
t139 = -t242 * t280 + t244 * t362;
t276 = -t139 * qJ(5) + t84;
t275 = -t183 * qJ(5) + t131;
t274 = -t311 + t383;
t88 = qJ(5) * t371 - t98;
t3 = -pkin(5) * t79 - t4;
t269 = t240 * qJD(1) - t309;
t268 = t149 * t81 - t79;
t266 = -t106 * qJ(5) + t60;
t144 = qJD(2) * t279 + t243 * t323;
t12 = -qJ(5) * t144 - qJD(5) * t188 - t19;
t94 = t407 * qJD(2) - t242 * t301 - t244 * t324;
t258 = -t94 * qJ(5) - t139 * qJD(5) + t40;
t256 = qJD(5) - t31;
t8 = -pkin(4) * t311 - t10;
t5 = pkin(4) * t79 - qJ(5) * t80 + t26 - t337;
t1 = t79 * qJ(6) + t105 * qJD(6) + t5;
t254 = t80 * pkin(5) - t311 * t399 - t10;
t252 = -t149 * t105 + t80;
t230 = qJ(4) * t375;
t184 = pkin(3) * t367 - t230;
t165 = (-pkin(4) * t244 + t314) * t243;
t164 = t245 * t326 + t230;
t146 = (-t244 * t399 + t314) * t243;
t145 = pkin(5) * t373 - t163;
t138 = t242 * t362 + t244 * t280;
t132 = pkin(5) * t375 + t230 + (-qJ(6) + t326) * t245;
t97 = -t186 + t412;
t93 = t408 * qJD(2) - t242 * t324 + t244 * t301;
t89 = t352 - t412;
t83 = pkin(4) * t182 + t275;
t75 = -pkin(5) * t182 - t88;
t69 = t182 * t399 + t275;
t68 = t208 * t367 + t183 * pkin(5) + (qJ(6) * t248 - t199 * t244) * t243 + t352;
t51 = pkin(4) * t138 + t276;
t50 = -t188 * pkin(4) - t58;
t43 = -t101 + t411;
t37 = t138 * t399 + t276;
t36 = -pkin(5) * t138 - t49;
t35 = t356 - t411;
t33 = pkin(4) * t125 + t278;
t30 = t139 * pkin(5) - t188 * t399 - t58;
t22 = t149 * pkin(4) + t256;
t21 = pkin(4) * t105 + t266;
t17 = -pkin(5) * t105 + qJD(6) - t24;
t16 = t105 * t399 + t266;
t15 = -t144 * pkin(4) - t18;
t14 = t106 * pkin(5) + t149 * t399 + t256;
t13 = pkin(4) * t93 + t258;
t9 = -pkin(5) * t93 - t12;
t7 = t94 * pkin(5) - t188 * qJD(6) - t144 * t399 - t18;
t6 = t138 * qJD(6) + t399 * t93 + t258;
t2 = t149 * qJD(6) + t254;
t20 = [0, 0, 0, 0.2e1 * t249 * t315, t347 * t414, t357, -t358, 0, -pkin(8) * t357 + t247 * t312, pkin(8) * t358 + t249 * t312, t157 * t362 + (t248 * t342 - t324) * t207 (-t205 * t248 - t207 * t246) * t342 + (-t382 - t158 * t248 + (t205 * t246 - t376) * qJD(3)) * t247, t247 * t296 - t157 * t249 + (t207 * t247 + t248 * t269) * qJD(2), t247 * t295 + t158 * t249 + (-t205 * t247 - t246 * t269) * qJD(2) (-t239 - t404) * t344 -(-t220 * t341 + t350) * t404 + (t320 + pkin(8) * t158 + (qJD(1) * t204 + t135) * qJD(2)) * t247 + (t222 * t345 + (t205 * qJD(2) + t295) * pkin(8) + t403) * t249 (-pkin(8) * t249 * t341 + t351) * t404 - t284 * t249 + (pkin(8) * t157 - t321) * t247 + ((pkin(8) * t207 + t222 * t248) * t249 + (-pkin(8) * t310 - qJD(1) * t348 - t136) * t247) * qJD(2), t10 * t188 + t105 * t40 + t138 * t26 + t144 * t31 - t149 * t18 + t311 * t58 + t60 * t93 + t79 * t84, t106 * t40 - t11 * t188 + t139 * t26 - t144 * t32 + t149 * t19 - t311 * t59 + t60 * t94 + t80 * t84, -t10 * t139 - t105 * t19 - t106 * t18 - t11 * t138 - t31 * t94 - t32 * t93 - t58 * t80 - t59 * t79, t10 * t58 + t11 * t59 + t18 * t31 + t19 * t32 + t26 * t84 + t40 * t60, t105 * t12 + t106 * t15 + t138 * t4 + t139 * t8 + t22 * t94 + t24 * t93 + t49 * t79 + t50 * t80, -t105 * t13 - t138 * t5 + t144 * t22 - t149 * t15 + t188 * t8 - t21 * t93 + t311 * t50 - t51 * t79, -t106 * t13 + t12 * t149 - t139 * t5 - t144 * t24 - t188 * t4 - t21 * t94 - t311 * t49 - t51 * t80, t12 * t24 + t13 * t21 + t15 * t22 + t4 * t49 + t5 * t51 + t50 * t8, -t105 * t9 + t106 * t7 - t138 * t3 + t139 * t2 + t14 * t94 - t17 * t93 + t30 * t80 - t36 * t79, -t1 * t139 - t106 * t6 + t144 * t17 - t149 * t9 - t16 * t94 + t188 * t3 + t311 * t36 - t37 * t80, t1 * t138 + t105 * t6 - t14 * t144 + t149 * t7 + t16 * t93 - t188 * t2 - t30 * t311 + t37 * t79, t1 * t37 + t14 * t7 + t16 * t6 + t17 * t9 + t2 * t30 + t3 * t36; 0, 0, 0, -t247 * t359, t347 * t251, 0, 0, 0, t251 * pkin(1) * t247, pkin(1) * t359, -t376 * t404 + t382 (t157 + t418) * t248 + (-t158 + t417) * t246, -t295 + (t247 * t306 + t248 * t309) * qJD(1), t296 + (-t246 * t309 + t247 * t307) * qJD(1), t404 * t346, pkin(9) * t295 - pkin(2) * t158 + t321 + t349 * t404 + ((-pkin(9) * t345 - t135) * t247 + (-pkin(8) * t307 - t222 * t246) * t249) * qJD(1), -pkin(2) * t157 + t320 + (-t222 * t361 + (-pkin(9) * t343 + t136) * t247 + (t247 * t310 + t249 * t306) * pkin(8)) * qJD(1) + (-pkin(9) * t341 - t189) * t404, t311 * t97 + t131 * t79 - t175 * t31 + t182 * t26 - t355 * t60 + (-t10 * t248 + t31 * t341) * t243 + t392 * t149 + t389 * t105, -t311 * t98 + t131 * t80 + t175 * t32 + t183 * t26 - t354 * t60 + (t11 * t248 - t32 * t341) * t243 - t391 * t149 + t389 * t106, -t10 * t183 + t105 * t391 + t106 * t392 - t11 * t182 + t31 * t354 + t32 * t355 - t79 * t98 - t80 * t97, t10 * t97 + t11 * t98 + t131 * t26 - t31 * t392 - t32 * t391 + t389 * t60, t105 * t395 - t106 * t394 + t182 * t4 + t183 * t8 - t22 * t354 - t24 * t355 + t79 * t88 + t80 * t89, t105 * t393 + t149 * t394 - t182 * t5 + t21 * t355 + t22 * t297 + t311 * t89 - t371 * t8 - t79 * t83, t106 * t393 + t149 * t395 - t183 * t5 + t21 * t354 - t24 * t297 - t311 * t88 + t371 * t4 - t80 * t83, -t21 * t393 - t22 * t394 + t24 * t395 + t4 * t88 + t5 * t83 + t8 * t89, t105 * t397 + t106 * t398 - t14 * t354 + t17 * t355 - t182 * t3 + t183 * t2 + t68 * t80 - t75 * t79, -t1 * t183 + t106 * t396 + t149 * t397 + t16 * t354 + t17 * t297 - t3 * t371 + t311 * t75 - t69 * t80, t1 * t182 - t105 * t396 - t14 * t297 + t149 * t398 - t16 * t355 + t2 * t371 - t311 * t68 + t69 * t79, t1 * t69 + t14 * t398 - t16 * t396 - t17 * t397 + t2 * t68 + t3 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207 * t205, -t205 ^ 2 + t207 ^ 2, t157 - t418, -t158 - t417, t315, -t136 * t239 - t222 * t207 + t353, -t135 * t404 + t222 * t205 + t255, t10 * t245 - t105 * t67 + t311 * t184 - t125 * t60 + t149 * t43 + (-pkin(3) * t79 - t207 * t31 + t242 * t339 - t244 * t26) * t243, -t106 * t67 - t11 * t245 - t311 * t185 - t126 * t60 - t149 * t44 + (-pkin(3) * t80 + t207 * t32 + t242 * t26 + t244 * t339) * t243, t105 * t44 + t106 * t43 + t125 * t32 + t126 * t31 - t184 * t80 - t185 * t79 + (-t10 * t242 + t11 * t244 + (-t105 * t244 + t106 * t242) * qJD(4)) * t243, t10 * t184 + t11 * t185 - t31 * t43 - t32 * t44 - t60 * t67 + (-pkin(3) * t26 + (-t242 * t31 + t244 * t32) * qJD(4)) * t243, -t106 * t35 - t125 * t24 - t126 * t22 + t163 * t79 + t164 * t80 + t386 * t105 + (-t244 * t4 + (qJD(4) * t106 + t8) * t242) * t243, t105 * t33 + t311 * t164 + t125 * t21 + t149 * t35 - t165 * t79 + t245 * t8 + (-t207 * t22 + t244 * t5 + (qJD(5) * t105 - t339) * t242) * t243, t106 * t33 - t311 * t163 + t126 * t21 - t165 * t80 - t245 * t4 + t386 * t149 + (t207 * t24 + (-t5 + t337) * t242) * t243, t163 * t4 + t164 * t8 + t165 * t5 + t386 * t24 + (-t35 + t322) * t22 + (-t243 * t336 - t33) * t21, t125 * t17 - t126 * t14 + t132 * t80 - t145 * t79 + (t2 * t242 + t244 * t3) * t243 + t387 * t106 - t385 * t105, t311 * t145 + t126 * t16 - t146 * t80 + t245 * t3 + (-t1 * t242 - t17 * t207) * t243 - t385 * t149 - t388 * t106, -t311 * t132 - t125 * t16 + t146 * t79 - t2 * t245 + (-t1 * t244 + t14 * t207) * t243 + t387 * t149 + t388 * t105, t1 * t146 + t2 * t132 + t14 * t387 + t3 * t145 + t16 * t388 + t17 * t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t413, t294, t31 * t81 - t32 * t82 + t26, t294, t268, -t413, -t22 * t81 + t24 * t82 + t5, t294, -t413, -t268, -t14 * t81 - t17 * t82 + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, -t274, t410, t21 * t106 - t24 * t149 + t8, t252, t410, t274, t106 * t16 + (qJD(6) + t17) * t149 + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106 * t149 - t79, t311 + t383, -t105 ^ 2 - t148, -t105 * t16 - t14 * t149 + t3;];
tauc_reg  = t20;
