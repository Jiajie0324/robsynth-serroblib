% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha4,d1,d2,d3,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPP1_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:18:29
% EndTime: 2019-03-09 15:18:48
% DurationCPUTime: 6.58s
% Computational Cost: add. (6549->503), mult. (19390->877), div. (0->0), fcn. (17103->8), ass. (0->228)
t150 = sin(pkin(6));
t283 = -0.2e1 * t150;
t153 = sin(qJ(2));
t282 = -0.4e1 * t153;
t149 = sin(pkin(10));
t151 = cos(pkin(10));
t152 = sin(qJ(3));
t274 = cos(pkin(6));
t217 = qJD(3) * t274;
t206 = t152 * t217;
t154 = cos(qJ(3));
t254 = qJD(3) * t154;
t100 = -t149 * t206 + t151 * t254;
t222 = t154 * t274;
t104 = t149 * t152 - t151 * t222;
t105 = t149 * t222 + t151 * t152;
t223 = t151 * t274;
t164 = t149 * t154 + t152 * t223;
t99 = t164 * qJD(3);
t167 = 0.2e1 * t100 * t104 + 0.2e1 * t105 * t99;
t203 = t154 * t217;
t187 = t153 * t203;
t255 = qJD(3) * t152;
t234 = t153 * t255;
t155 = cos(qJ(2));
t243 = t155 * qJD(2);
t244 = t153 * qJD(2);
t269 = t150 * t151;
t52 = -t149 * t234 + t151 * t187 + t164 * t243 - t244 * t269;
t218 = qJD(2) * t274;
t263 = t154 * t155;
t265 = t152 * t155;
t268 = t150 * t153;
t53 = (t263 * qJD(2) - t234) * t151 + (t268 * qJD(2) - t218 * t265 - t187) * t149;
t219 = t274 * t153;
t163 = t150 * t155 + t152 * t219;
t264 = t153 * t154;
t75 = t149 * t264 + t151 * t163;
t76 = -t163 * t149 + t151 * t264;
t168 = 0.2e1 * t52 * t76 + 0.2e1 * t75 * t53;
t183 = t152 * t150 * qJ(4) + t154 * pkin(3);
t116 = -pkin(2) - t183;
t221 = t274 * qJ(4);
t198 = t221 + pkin(9);
t121 = t198 * t152;
t220 = t274 * t121;
t281 = t151 * (t116 * t150 - t220);
t171 = (t100 * t151 - t149 * t99) * t150;
t173 = (t149 * t52 - t151 * t53) * t150;
t145 = t152 ^ 2;
t147 = t154 ^ 2;
t258 = t145 - t147;
t215 = qJD(3) * t258;
t224 = t149 * t274;
t270 = t149 * t150;
t267 = t150 * t154;
t184 = pkin(3) * t152 - qJ(4) * t267;
t250 = qJD(4) * t150;
t89 = qJD(3) * t184 - t152 * t250;
t174 = qJD(3) * t198;
t216 = qJD(4) * t274;
t204 = t154 * t216;
t90 = -t152 * t174 + t204;
t205 = t152 * t216;
t91 = -t154 * t174 - t205;
t41 = t151 * t90 + t91 * t224 + t89 * t270;
t28 = -t150 * (qJ(5) * t255 - qJD(5) * t154) - t41;
t141 = pkin(8) * t263;
t278 = t155 * pkin(2);
t201 = -t153 * pkin(9) - t278;
t188 = -pkin(1) + t201;
t95 = t152 * t188 + t141;
t66 = -qJ(4) * t163 + t95;
t120 = t154 * t188;
t208 = t154 * t221;
t279 = pkin(8) * t152;
t69 = -t153 * t208 + t120 + (-pkin(3) - t279) * t155;
t169 = pkin(8) + t184;
t92 = t169 * t153;
t26 = -t149 * t66 + t151 * (t150 * t92 + t274 * t69);
t256 = qJD(2) * t154;
t200 = pkin(2) * t153 - pkin(9) * t155;
t178 = t200 * qJD(2);
t260 = -qJD(3) * t120 - t152 * t178;
t33 = (-t250 + (-pkin(8) * qJD(3) - qJ(4) * t218) * t152) * t155 + (-t205 - pkin(8) * t256 + (qJD(2) * t150 - t203) * qJ(4)) * t153 - t260;
t229 = t152 * t244;
t259 = pkin(8) * t229 + t154 * t178;
t42 = -t153 * t204 + (t153 * pkin(3) - t155 * t208) * qJD(2) + (-t141 + (t198 * t153 + pkin(1) + t278) * t152) * qJD(3) + t259;
t248 = qJD(4) * t154;
t54 = (qJD(3) * t183 - t150 * t248) * t153 + t169 * t243;
t7 = -t149 * t33 + t151 * (t150 * t54 + t274 * t42);
t110 = t152 * t268 - t155 * t274;
t232 = t153 * t254;
t79 = t150 * t232 + (t150 * t265 + t219) * qJD(2);
t10 = t150 * (-t154 * t53 + t76 * t255) + t100 * t110 + t105 * t79;
t9 = t150 * (-t154 * t52 + t75 * t255) + t79 * t104 + t110 * t99;
t280 = 0.2e1 * t150;
t277 = pkin(4) + qJ(6);
t249 = qJD(4) * t151;
t115 = t274 * qJD(5) + t150 * t249;
t276 = t115 * t75;
t275 = t151 * t89;
t273 = t115 * t104;
t272 = t115 * t110;
t271 = t115 * t154;
t262 = t76 * qJD(5);
t122 = t198 * t154;
t108 = t149 * t122;
t261 = pkin(4) * t267 + t108;
t107 = pkin(3) * t224 + qJ(4) * t269;
t146 = t153 ^ 2;
t257 = -t155 ^ 2 + t146;
t253 = qJD(3) * t155;
t252 = qJD(4) * t110;
t144 = t150 ^ 2;
t251 = qJD(4) * t144;
t247 = qJD(5) * t144;
t246 = qJD(5) * t149;
t245 = t105 * qJD(5);
t36 = 0.2e1 * t75 * t52;
t37 = 0.2e1 * t76 * t53;
t242 = -0.2e1 * pkin(1) * qJD(2);
t241 = -0.2e1 * pkin(2) * qJD(3);
t67 = 0.2e1 * t104 * t99;
t68 = 0.2e1 * t105 * t100;
t8 = t151 * t33 + t42 * t224 + t54 * t270;
t27 = t151 * t66 + t69 * t224 + t92 * t270;
t240 = pkin(8) * t265;
t239 = pkin(8) * t243;
t238 = t52 * t269;
t45 = t53 * t270;
t237 = t99 * t269;
t56 = t116 * t270 + t151 * t122 - t149 * t220;
t86 = t100 * t270;
t236 = t154 * t243;
t235 = t144 * t255;
t233 = t152 * t253;
t231 = t154 * t253;
t230 = t144 * t248;
t228 = t152 * t254;
t227 = t153 * t243;
t226 = -qJ(5) * t149 - pkin(3);
t15 = -t150 * t42 + t274 * t54;
t46 = -t150 * t69 + t274 * t92;
t57 = -t150 * t91 + t274 * t89;
t225 = t115 * t274;
t72 = t274 * t116 + t150 * t121;
t214 = t257 * qJD(2);
t213 = -0.2e1 * t228;
t212 = 0.2e1 * t227;
t211 = t149 * t230;
t210 = t146 * t228;
t209 = t152 * t236;
t202 = t150 * t216;
t22 = t52 * t104 + t75 * t99;
t197 = t110 * t52 + t79 * t75;
t196 = t53 * t110 + t76 * t79;
t23 = t76 * t100 + t53 * t105;
t94 = t120 - t240;
t193 = -t152 * t95 - t154 * t94;
t189 = -0.2e1 * t202;
t19 = -t110 * qJ(5) - t27;
t106 = pkin(3) * t223 - qJ(4) * t270;
t83 = t149 * t90;
t186 = -t91 * t223 + t83;
t185 = -t76 * qJ(5) + t46;
t93 = -t274 * qJ(5) - t107;
t180 = t104 * t255 - t154 * t99;
t179 = -t105 * qJ(5) + t72;
t175 = -t100 * t154 + t105 * t255;
t47 = qJ(5) * t267 - t56;
t31 = t79 * t270 + t53 * t274;
t166 = t79 * t269 - t274 * t52;
t165 = t154 * t244 + t233;
t4 = -t79 * qJ(5) - t110 * qJD(5) - t8;
t162 = -t53 * qJ(5) + t15 - t262;
t161 = t151 * t235 - t274 * t99;
t160 = -t100 * qJ(5) - t245 + t57;
t70 = t100 * t274 + t149 * t235;
t96 = -t274 * pkin(4) - t106;
t157 = t100 * t75 + t104 * t53 + t105 * t52 + t76 * t99;
t60 = pkin(8) * t165 + t260;
t61 = -t95 * qJD(3) + t259;
t156 = qJD(3) * t193 - t61 * t152 - t60 * t154;
t143 = t149 ^ 2;
t138 = t150 * t255;
t135 = t149 * t250;
t134 = t143 * t251;
t133 = -0.2e1 * t227;
t125 = t150 * t206;
t124 = t144 * t213;
t114 = -t274 * qJD(6) + t135;
t103 = (-qJD(6) * t151 - t246) * t150;
t97 = (-pkin(4) * t151 + t226) * t150;
t88 = t153 * t215 - t209;
t81 = (-t277 * t151 + t226) * t150;
t80 = pkin(5) * t269 - t93;
t74 = t79 * t274;
t73 = pkin(5) * t270 - t274 * qJ(6) + t96;
t62 = 0.2e1 * t110 * t79;
t59 = t175 * t280;
t58 = t180 * t280;
t55 = -t108 + t281;
t51 = (t110 * t255 - t154 * t79) * t150;
t48 = t261 - t281;
t44 = t104 * pkin(4) + t179;
t43 = -t104 * pkin(5) - t47;
t40 = -t83 + (t150 * t89 + t274 * t91) * t151;
t39 = t277 * t104 + t179;
t38 = t151 * t220 + t105 * pkin(5) + (qJ(6) * t154 - t116 * t151) * t150 + t261;
t34 = (-pkin(4) * t255 - t275) * t150 + t186;
t25 = t99 * pkin(4) + t160;
t24 = -t99 * pkin(5) - t28;
t21 = t75 * pkin(4) + t185;
t20 = -t110 * pkin(4) - t26;
t18 = t100 * pkin(5) + (qJD(6) * t154 - t277 * t255 - t275) * t150 + t186;
t17 = 0.2e1 * t197;
t16 = 0.2e1 * t196;
t14 = t104 * qJD(6) + t277 * t99 + t160;
t13 = t277 * t75 + t185;
t12 = -t75 * pkin(5) - t19;
t11 = t76 * pkin(5) - t277 * t110 - t26;
t6 = -t79 * pkin(4) - t7;
t5 = t52 * pkin(4) + t162;
t3 = -t52 * pkin(5) - t4;
t2 = t53 * pkin(5) - t110 * qJD(6) - t277 * t79 - t7;
t1 = t75 * qJD(6) + t277 * t52 + t162;
t29 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, -0.2e1 * t214, 0, t133, 0, 0, t153 * t242, t155 * t242, 0, 0, 0.2e1 * t147 * t227 - 0.2e1 * t210, 0.2e1 * t146 * t215 + t209 * t282, 0.2e1 * t153 * t233 + 0.2e1 * t256 * t257, 0.2e1 * t145 * t227 + 0.2e1 * t210, -0.2e1 * t152 * t214 + 0.2e1 * t153 * t231, t133, 0.2e1 * t94 * t244 - 0.2e1 * t61 * t155 + 0.2e1 * (t146 * t254 + t152 * t212) * pkin(8), -0.2e1 * t95 * t244 - 0.2e1 * t60 * t155 + 0.2e1 * (-t146 * t255 + t154 * t212) * pkin(8), 0.2e1 * t193 * t243 + 0.2e1 * (t152 * t60 - t154 * t61 + (t152 * t94 - t154 * t95) * qJD(3)) * t153, 0.2e1 * pkin(8) ^ 2 * t227 - 0.2e1 * t95 * t60 + 0.2e1 * t94 * t61, t37, -t168, t16, t36, -0.2e1 * t197, t62, 0.2e1 * t110 * t7 + 0.2e1 * t15 * t75 + 0.2e1 * t26 * t79 + 0.2e1 * t46 * t52, -0.2e1 * t110 * t8 + 0.2e1 * t15 * t76 - 0.2e1 * t27 * t79 + 0.2e1 * t46 * t53, -0.2e1 * t26 * t53 - 0.2e1 * t27 * t52 - 0.2e1 * t7 * t76 - 0.2e1 * t75 * t8, 0.2e1 * t15 * t46 + 0.2e1 * t26 * t7 + 0.2e1 * t27 * t8, t62, -0.2e1 * t196, t17, t37, -t168, t36, 0.2e1 * t19 * t52 + 0.2e1 * t20 * t53 + 0.2e1 * t4 * t75 + 0.2e1 * t6 * t76, 0.2e1 * t110 * t6 + 0.2e1 * t20 * t79 - 0.2e1 * t21 * t52 - 0.2e1 * t5 * t75, -0.2e1 * t110 * t4 - 0.2e1 * t19 * t79 - 0.2e1 * t21 * t53 - 0.2e1 * t5 * t76, 0.2e1 * t19 * t4 + 0.2e1 * t20 * t6 + 0.2e1 * t21 * t5, t62, t17, t16, t36, t168, t37, 0.2e1 * t11 * t53 - 0.2e1 * t12 * t52 + 0.2e1 * t2 * t76 - 0.2e1 * t3 * t75, -0.2e1 * t1 * t76 + 0.2e1 * t110 * t3 + 0.2e1 * t12 * t79 - 0.2e1 * t13 * t53, 0.2e1 * t1 * t75 - 0.2e1 * t11 * t79 - 0.2e1 * t110 * t2 + 0.2e1 * t13 * t52, 0.2e1 * t1 * t13 + 0.2e1 * t11 * t2 + 0.2e1 * t12 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, 0, -t244, 0, -t239, pkin(8) * t244, 0, 0, -t88, t228 * t282 - t243 * t258, t229 - t231, t88, t165, 0 (pkin(9) * t263 + (-pkin(2) * t154 + t279) * t153) * qJD(3) + (t152 * t201 - t141) * qJD(2) (pkin(8) * t264 + t152 * t200) * qJD(3) + (t201 * t154 + t240) * qJD(2), t156, -pkin(2) * t239 + pkin(9) * t156, t23, -t157, t10, t22, -t9, t51, t15 * t104 + t40 * t110 + t46 * t99 + t72 * t52 + t55 * t79 + t57 * t75 + (-t154 * t7 + t255 * t26) * t150, t46 * t100 + t15 * t105 - t41 * t110 + t72 * t53 - t56 * t79 + t57 * t76 + (t154 * t8 - t255 * t27) * t150, -t100 * t26 - t104 * t8 - t105 * t7 - t27 * t99 - t40 * t76 - t41 * t75 - t52 * t56 - t53 * t55, t15 * t72 + t26 * t40 + t27 * t41 + t46 * t57 + t55 * t7 + t56 * t8, t51, -t10, t9, t23, -t157, t22, t100 * t20 + t104 * t4 + t105 * t6 + t19 * t99 + t28 * t75 + t34 * t76 + t47 * t52 + t48 * t53, -t5 * t104 + t34 * t110 - t21 * t99 - t25 * t75 - t44 * t52 + t48 * t79 + (-t154 * t6 + t20 * t255) * t150, -t21 * t100 - t5 * t105 - t28 * t110 - t25 * t76 - t44 * t53 - t47 * t79 + (t154 * t4 - t19 * t255) * t150, t19 * t28 + t20 * t34 + t21 * t25 + t4 * t47 + t44 * t5 + t48 * t6, t51, t9, t10, t22, t157, t23, t100 * t11 - t104 * t3 + t105 * t2 - t12 * t99 + t18 * t76 - t24 * t75 + t38 * t53 - t43 * t52, -t1 * t105 - t13 * t100 + t24 * t110 - t14 * t76 - t39 * t53 + t43 * t79 + (t12 * t255 - t154 * t3) * t150, t1 * t104 - t18 * t110 + t13 * t99 + t14 * t75 - t38 * t79 + t39 * t52 + (-t11 * t255 + t154 * t2) * t150, t1 * t39 + t11 * t18 + t12 * t24 + t13 * t14 + t2 * t38 + t3 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t228, -0.2e1 * t215, 0, t213, 0, 0, t152 * t241, t154 * t241, 0, 0, t68, -t167, t59, t67, t180 * t283, t124, 0.2e1 * t57 * t104 + 0.2e1 * t72 * t99 + 0.2e1 * (-t154 * t40 + t255 * t55) * t150, 0.2e1 * t72 * t100 + 0.2e1 * t57 * t105 + 0.2e1 * (t154 * t41 - t255 * t56) * t150, -0.2e1 * t100 * t55 - 0.2e1 * t104 * t41 - 0.2e1 * t105 * t40 - 0.2e1 * t56 * t99, 0.2e1 * t40 * t55 + 0.2e1 * t41 * t56 + 0.2e1 * t57 * t72, t124, t175 * t283, t58, t68, -t167, t67, 0.2e1 * t100 * t48 + 0.2e1 * t104 * t28 + 0.2e1 * t105 * t34 + 0.2e1 * t47 * t99, -0.2e1 * t25 * t104 - 0.2e1 * t44 * t99 + 0.2e1 * (-t154 * t34 + t255 * t48) * t150, -0.2e1 * t44 * t100 - 0.2e1 * t25 * t105 + 0.2e1 * (t154 * t28 - t255 * t47) * t150, 0.2e1 * t25 * t44 + 0.2e1 * t28 * t47 + 0.2e1 * t34 * t48, t124, t58, t59, t67, t167, t68, 0.2e1 * t100 * t38 - 0.2e1 * t104 * t24 + 0.2e1 * t105 * t18 - 0.2e1 * t43 * t99, -0.2e1 * t39 * t100 - 0.2e1 * t14 * t105 + 0.2e1 * (-t154 * t24 + t255 * t43) * t150, 0.2e1 * t14 * t104 + 0.2e1 * t39 * t99 + 0.2e1 * (t154 * t18 - t255 * t38) * t150, 0.2e1 * t14 * t39 + 0.2e1 * t18 * t38 + 0.2e1 * t24 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234 + t236, 0, -t152 * t243 - t232, t244, t61, t60, 0, 0, t45, -t173, t31, -t238, t166, t74, t7 * t274 + t106 * t79 + (-pkin(3) * t52 - t149 * t252 - t15 * t151) * t150, -t8 * t274 - t107 * t79 + (-pkin(3) * t53 - t110 * t249 + t149 * t15) * t150, -t106 * t53 - t107 * t52 + (-t149 * t7 + t151 * t8 + (t149 * t76 - t151 * t75) * qJD(4)) * t150, t7 * t106 + t8 * t107 + (-pkin(3) * t15 + (-t149 * t26 + t151 * t27) * qJD(4)) * t150, t74, -t31, -t166, t45, -t173, -t238, -t276 + t93 * t52 + t96 * t53 + (-t151 * t4 + (qJD(4) * t76 + t6) * t149) * t150, t6 * t274 - t97 * t52 + t96 * t79 + (t151 * t5 + (qJD(5) * t75 + t252) * t149) * t150, -t4 * t274 + t272 - t97 * t53 - t93 * t79 + (-t5 + t262) * t270, -t19 * t115 + t4 * t93 + t5 * t97 + t6 * t96 + (qJD(4) * t20 - qJD(5) * t21) * t270, t74, -t166, t31, -t238, t173, t45, t114 * t76 - t276 - t80 * t52 + t73 * t53 + (t149 * t2 + t151 * t3) * t150, -t1 * t270 - t103 * t76 + t3 * t274 - t81 * t53 + t80 * t79 + t272, -t1 * t269 + t103 * t75 - t114 * t110 - t2 * t274 + t81 * t52 - t73 * t79, t1 * t81 + t103 * t13 + t11 * t114 + t115 * t12 + t2 * t73 + t3 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, 0, -t255, 0, -pkin(9) * t254, pkin(9) * t255, 0, 0, t86, t171, t70, -t237, t161, t125, t211 + t40 * t274 + (-pkin(3) * t99 + t106 * t255 - t151 * t57) * t150, t151 * t230 - t41 * t274 + (-pkin(3) * t100 - t107 * t255 + t149 * t57) * t150, -t106 * t100 - t107 * t99 + (-t149 * t40 + t151 * t41 + (-t104 * t151 + t105 * t149) * qJD(4)) * t150, t40 * t106 + t41 * t107 + (-pkin(3) * t57 + (-t149 * t55 + t151 * t56) * qJD(4)) * t150, t125, -t70, -t161, t86, t171, -t237, t96 * t100 - t273 + t93 * t99 + (-t151 * t28 + (qJD(4) * t105 + t34) * t149) * t150, -t211 + t34 * t274 - t97 * t99 + (t104 * t246 + t151 * t25 + t255 * t96) * t150, -t28 * t274 - t97 * t100 + (-t93 * t255 - t271 + (-t25 + t245) * t149) * t150, -t47 * t115 + t25 * t97 + t28 * t93 + t34 * t96 + (qJD(4) * t48 - qJD(5) * t44) * t270, t125, -t161, t70, -t237, -t171, t86, t73 * t100 - t273 + t114 * t105 - t80 * t99 + (t149 * t18 + t151 * t24) * t150, t24 * t274 - t81 * t100 - t103 * t105 + (-t14 * t149 + t255 * t80 - t271) * t150, -t18 * t274 + t103 * t104 + t81 * t99 + (t114 * t154 - t14 * t151 - t255 * t73) * t150, t103 * t39 + t114 * t38 + t115 * t43 + t14 * t81 + t18 * t73 + t24 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149 * t189, t151 * t189, 0.2e1 * t151 ^ 2 * t251 + 0.2e1 * t134, 0.2e1 * (-t106 * t149 + t107 * t151) * t250, 0, 0, 0, 0, 0, 0, 0.2e1 * t115 * t269 + 0.2e1 * t134, 0.2e1 * (-t151 * t247 + t202) * t149, 0.2e1 * t143 * t247 + 0.2e1 * t225, -0.2e1 * t93 * t115 + 0.2e1 * (qJD(4) * t96 - qJD(5) * t97) * t270, 0, 0, 0, 0, 0, 0 (t114 * t149 + t115 * t151) * t280, -0.2e1 * t103 * t270 + 0.2e1 * t225, -0.2e1 * t103 * t269 - 0.2e1 * t114 * t274, 0.2e1 * t103 * t81 + 0.2e1 * t114 * t73 + 0.2e1 * t115 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t53, 0, t15, 0, 0, 0, 0, 0, 0, 0, -t52, -t53, t5, 0, 0, 0, 0, 0, 0, 0, -t53, t52, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t100, 0, t57, 0, 0, 0, 0, 0, 0, 0, -t99, -t100, t25, 0, 0, 0, 0, 0, 0, 0, -t100, t99, t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t246, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t79, 0, t6, 0, 0, 0, 0, 0, 0, t53, 0, -t79, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t138, 0, t34, 0, 0, 0, 0, 0, 0, t100, 0, -t138, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, t79, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t138, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t29;
