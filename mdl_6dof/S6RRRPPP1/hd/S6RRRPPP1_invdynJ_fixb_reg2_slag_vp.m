% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha4,d1,d2,d3,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPP1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPP1_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:18:36
% EndTime: 2019-03-09 15:19:09
% DurationCPUTime: 17.19s
% Computational Cost: add. (17420->892), mult. (42324->1118), div. (0->0), fcn. (31548->10), ass. (0->399)
t350 = cos(qJ(2));
t347 = sin(qJ(2));
t589 = pkin(2) * t347;
t448 = -pkin(9) * t350 + t589;
t285 = t448 * qJD(1);
t346 = sin(qJ(3));
t264 = t346 * t285;
t559 = cos(pkin(6));
t478 = t559 * qJ(4);
t438 = t478 + pkin(9);
t407 = qJD(3) * t438;
t349 = cos(qJ(3));
t472 = qJD(4) * t559;
t450 = t349 * t472;
t480 = t350 * t559;
t452 = t346 * t480;
t535 = t347 * t349;
t345 = sin(pkin(6));
t540 = t345 * t347;
t618 = -t264 - (-pkin(8) * t535 + (-t452 + t540) * qJ(4)) * qJD(1) - t346 * t407 + t450;
t518 = qJD(1) * t347;
t490 = t346 * t518;
t206 = pkin(8) * t490 + t349 * t285;
t455 = t349 * t478;
t385 = pkin(3) * t347 - t350 * t455;
t451 = t346 * t472;
t617 = qJD(1) * t385 + t349 * t407 + t206 + t451;
t336 = t350 * qJD(1);
t332 = pkin(8) * t336;
t539 = t345 * t349;
t500 = qJ(4) * t539;
t588 = pkin(3) * t346;
t420 = -t500 + t588;
t204 = t336 * t420 + t332;
t507 = t345 * qJD(4);
t209 = qJD(3) * t420 - t346 * t507;
t616 = -t204 + t209;
t344 = sin(pkin(10));
t558 = cos(pkin(10));
t479 = t350 * t558;
t499 = t344 * t540;
t184 = -t344 * t452 + t349 * t479 + t499;
t470 = t559 * qJD(3);
t473 = qJD(3) * t558;
t541 = t344 * t346;
t528 = t184 * qJD(1) - t349 * t473 + t470 * t541;
t482 = t347 * t559;
t615 = -t345 * t350 - t346 * t482;
t484 = t344 * t559;
t542 = t344 * t345;
t566 = -t617 * t484 + t616 * t542 + t558 * t618;
t564 = t345 * t617 + t559 * t616;
t516 = qJD(2) * t349;
t280 = -t490 + t516;
t597 = t336 - qJD(3);
t614 = t280 * t597;
t494 = t349 * t518;
t517 = qJD(2) * t346;
t281 = t494 + t517;
t613 = t281 * t597;
t337 = t347 * pkin(9);
t339 = t350 * pkin(2);
t495 = -pkin(1) - t339;
t428 = t495 - t337;
t267 = t428 * qJD(1);
t306 = qJD(2) * pkin(9) + t332;
t180 = t346 * t267 + t349 * t306;
t612 = t597 * t180;
t436 = t559 * t558;
t380 = t344 * t349 + t346 * t436;
t481 = t347 * t558;
t458 = t345 * t481;
t183 = t380 * t350 - t458;
t529 = t183 * qJD(1) - t380 * qJD(3);
t348 = sin(qJ(1));
t351 = cos(qJ(1));
t530 = t351 * t346;
t261 = t348 * t349 - t350 * t530;
t195 = -t261 * t345 + t351 * t482;
t504 = t347 * qJDD(1);
t330 = pkin(8) * t504;
t505 = qJD(1) * qJD(2);
t487 = t350 * t505;
t250 = -qJDD(2) * pkin(2) + pkin(8) * t487 + t330;
t465 = qJD(3) * t597;
t577 = g(3) * t350;
t443 = g(1) * t351 + g(2) * t348;
t604 = t347 * t443;
t611 = pkin(9) * t465 - t250 - t577 + t604;
t513 = qJD(3) * t347;
t610 = qJD(1) * t513 - qJDD(2);
t179 = t349 * t267 - t346 * t306;
t284 = t448 * qJD(2);
t189 = qJD(1) * t284 + qJDD(1) * t428;
t335 = t350 * qJDD(1);
t488 = t347 * t505;
t249 = qJDD(2) * pkin(9) + (-t488 + t335) * pkin(8);
t512 = qJD(3) * t349;
t514 = qJD(3) * t346;
t401 = -t346 * t189 - t349 * t249 - t267 * t512 + t306 * t514;
t609 = t597 * t179 - t401;
t165 = t346 * (qJD(2) * (qJD(3) + t336) + t504) + t610 * t349;
t467 = t597 * t345;
t546 = t281 * t344;
t131 = -t280 * t436 + t467 * t558 + t546;
t164 = -qJD(2) * t512 + (-t487 - t504) * t349 + t610 * t346;
t503 = qJDD(3) - t335;
t410 = t488 + t503;
t387 = t345 * t410;
t439 = t164 * t344 - t165 * t436 + t558 * t387;
t607 = -qJ(6) * t439 + t131 * qJD(6);
t471 = qJD(4) * t558;
t545 = t281 * t345;
t134 = -t281 * t478 + t179;
t135 = -t280 * t478 - t180;
t549 = t280 * t345;
t174 = pkin(3) * t281 - qJ(4) * t549;
t61 = t558 * t134 + t135 * t484 + t174 * t542;
t561 = qJ(5) * t545 - qJD(5) * t559 - t345 * t471 + t61;
t198 = t559 * t597 + t549;
t367 = t165 * t559 - t387;
t81 = -t558 * t164 - t344 * t367;
t200 = t280 * t559 - t467;
t599 = t345 ^ 2 + t559 ^ 2;
t99 = t558 * t200 - t546 * t599;
t606 = -t99 * t198 + t81;
t605 = t281 * t558;
t543 = t344 * t200;
t132 = t543 + t605;
t197 = t198 ^ 2;
t603 = -t132 ^ 2 - t197;
t522 = t339 + t337;
t304 = -pkin(1) - t522;
t532 = t349 * t350;
t322 = pkin(8) * t532;
t223 = t346 * t304 + t322;
t483 = t345 * t558;
t602 = t204 * t483 + t344 * t618 + t617 * t436;
t252 = t346 * t558 + t349 * t484;
t601 = qJ(5) * t528 - qJD(5) * t252 + t564;
t600 = t615 * t344;
t260 = t348 * t532 - t530;
t531 = t350 * t351;
t262 = t346 * t348 + t349 * t531;
t444 = -g(1) * t262 - g(2) * t260;
t469 = t165 * t345 + t559 * t410;
t575 = pkin(4) + qJ(6);
t598 = t81 * pkin(5) - t469 * t575;
t182 = t349 * t481 + t600;
t533 = t348 * t350;
t259 = t346 * t533 + t349 * t351;
t553 = t259 * t345;
t194 = t348 * t482 + t553;
t537 = t346 * t347;
t257 = t345 * t537 - t480;
t596 = -g(1) * t195 - g(2) * t194 - g(3) * t257;
t305 = -qJD(2) * pkin(2) + pkin(8) * t518;
t595 = -pkin(9) * t410 - t305 * t597;
t166 = t280 * t344 + t281 * t436;
t18 = t345 * (-t131 * t281 - t469 * t558) + t198 * t166 - t559 * t439;
t167 = t280 * t558 - t281 * t484;
t594 = -t167 * t198 + t345 * (t132 * t281 - t344 * t469) - t559 * t81;
t361 = t345 * (t344 * t439 + t558 * t81) + t131 * t167 + t166 * t132;
t536 = t346 * t350;
t496 = t345 * t536;
t258 = t482 + t496;
t239 = t258 * qJD(1);
t569 = qJ(5) * t239 - t345 * (qJ(5) * t514 - qJD(5) * t349) - t566;
t421 = t349 * t436;
t251 = -t421 + t541;
t364 = t131 * t528 + t132 * t529 - t251 * t81 + t252 * t439;
t437 = t345 * t514 - t239;
t9 = t131 * t437 + t198 * t529 + t251 * t469 + t439 * t539;
t10 = t132 * t437 + t198 * t528 + t252 * t469 - t539 * t81;
t587 = pkin(8) * t350;
t584 = g(1) * t348;
t578 = g(3) * t347;
t576 = t469 * pkin(4);
t573 = qJD(6) * t251 - t529 * t575 + t601;
t475 = t558 * t209;
t572 = t575 * t239 + (qJD(6) * t349 - t514 * t575 - t475) * t345 + t602 - t528 * pkin(5);
t571 = pkin(5) * t529 - t569;
t570 = -pkin(4) * t529 + t601;
t568 = t239 * pkin(4) + (-pkin(4) * t514 - t475) * t345 + t602;
t567 = t345 * t475 - t602;
t88 = -t135 * t345 + t559 * t174;
t414 = -qJ(5) * t167 + t88;
t509 = qJD(5) * t344;
t563 = -t575 * t166 + (-qJD(6) * t558 - t509) * t345 - t414;
t241 = pkin(4) * t545;
t390 = -t344 * t134 + t135 * t436;
t476 = t558 * t174;
t491 = t344 * t507;
t562 = -t559 * qJD(6) + t491 - t167 * pkin(5) + t241 - (-qJ(6) * t281 - t476) * t345 + t390;
t560 = pkin(5) * t166 - t561;
t557 = pkin(8) * qJDD(1);
t556 = t131 * t132;
t555 = t164 * t346;
t554 = t165 * t349;
t552 = t260 * t345;
t550 = t262 * t345;
t548 = t280 * t346;
t547 = t281 * t280;
t544 = t281 * t349;
t534 = t347 * t351;
t527 = -g(1) * t550 - g(2) * t552;
t526 = t346 * t284 + t304 * t512;
t525 = t347 * pkin(8) * t517 + t349 * t284;
t321 = pkin(9) * t533;
t459 = t350 * t478;
t524 = t348 * t459 + t321;
t325 = pkin(9) * t531;
t523 = t351 * t459 + t325;
t254 = pkin(3) * t484 + qJ(4) * t483;
t521 = t351 * pkin(1) + t348 * pkin(8);
t342 = t347 ^ 2;
t343 = t350 ^ 2;
t520 = t342 - t343;
t519 = t342 + t343;
t515 = qJD(2) * t350;
t511 = qJD(4) * t198;
t510 = qJD(5) * t132;
t508 = t305 * qJD(3);
t47 = -qJ(4) * t367 + qJD(4) * t200 - t401;
t177 = t349 * t189;
t92 = -qJD(3) * t180 - t346 * t249 + t177;
t54 = pkin(3) * t410 + t164 * t478 - t281 * t472 + t92;
t73 = pkin(3) * t165 + (qJ(4) * t164 - qJD(4) * t281) * t345 + t250;
t8 = t558 * t47 + t54 * t484 + t73 * t542;
t501 = g(3) * t535;
t419 = qJ(4) * t345 * t346 + pkin(3) * t349;
t115 = (qJD(3) * t419 - t349 * t507) * t347 + (pkin(8) + t420) * t515;
t449 = t349 * t470;
t85 = (-t507 + (-pkin(8) * qJD(3) - qJD(2) * t478) * t346) * t350 + (-t451 - pkin(8) * t516 + (qJD(2) * t345 - t449) * qJ(4)) * t347 + t526;
t315 = t347 * t478;
t95 = -t347 * t450 + t385 * qJD(2) + (-t322 + (t315 - t304) * t346) * qJD(3) + t525;
t28 = t115 * t542 + t95 * t484 + t558 * t85;
t353 = qJD(1) ^ 2;
t498 = t347 * t353 * t350;
t108 = qJ(4) * t200 + t180;
t114 = -pkin(3) * t597 + t134;
t155 = -pkin(3) * t280 - qJ(4) * t545 + t305;
t46 = t558 * t108 + t114 * t484 + t155 * t542;
t163 = qJ(4) * t615 + t223;
t279 = t349 * t304;
t169 = -t347 * t455 + t279 + (-pkin(8) * t346 - pkin(3)) * t350;
t300 = t347 * t500;
t212 = -t300 + (pkin(8) + t588) * t347;
t76 = t558 * t163 + t169 * t484 + t212 * t542;
t282 = t438 * t346;
t283 = t438 * t349;
t402 = pkin(2) + t419;
t117 = -t282 * t484 + t558 * t283 - t402 * t542;
t493 = t346 * t513;
t492 = t347 * t512;
t474 = t558 * t402;
t57 = t559 * t115 - t345 * t95;
t101 = -t169 * t345 + t559 * t212;
t172 = t282 * t345 - t402 * t559;
t468 = t350 * t597;
t466 = qJD(2) * t597;
t462 = pkin(2) * t531 + pkin(9) * t534 + t521;
t461 = t347 * t487;
t460 = -pkin(3) * t537 + t300;
t456 = t351 * t481;
t4 = -qJ(5) * t469 + t198 * qJD(5) - t8;
t122 = t259 * t436 + t260 * t344 - t348 * t458;
t125 = -t261 * t436 + t262 * t344 - t345 * t456;
t447 = -g(1) * t122 + g(2) * t125;
t126 = t262 * t558 + (t261 * t559 + t345 * t534) * t344;
t375 = -t259 * t484 + t260 * t558 + t348 * t499;
t446 = g(1) * t375 - g(2) * t126;
t445 = g(1) * t194 - g(2) * t195;
t442 = -g(2) * t351 + t584;
t150 = -t259 * t344 + t260 * t436;
t151 = -t259 * t558 - t260 * t484;
t245 = t259 * pkin(3);
t441 = t151 * pkin(4) + qJ(5) * t150 - t245;
t152 = t261 * t344 + t262 * t436;
t153 = t261 * t558 - t262 * t484;
t247 = t261 * pkin(3);
t440 = t153 * pkin(4) + qJ(5) * t152 + t247;
t22 = -t345 * t54 + t559 * t73 + qJDD(4);
t77 = -t114 * t345 + t559 * t155 + qJD(4);
t435 = t349 * t465;
t98 = t599 * t605 + t543;
t434 = t131 * t99 - t132 * t98;
t432 = pkin(3) * t532 + qJ(4) * t496 + t315 + t522;
t400 = t347 * t421;
t111 = qJD(2) * t183 + qJD(3) * t400 - t344 * t493;
t181 = t345 * t479 + t347 * t380;
t29 = t111 * t131 - t181 * t439;
t112 = -t344 * t347 * t449 + qJD(2) * t184 - t473 * t537;
t30 = t112 * t132 + t182 * t81;
t429 = -t179 * t349 - t180 * t346;
t340 = t351 * pkin(8);
t424 = -t260 * pkin(3) - qJ(4) * t553 + t340;
t35 = qJ(5) * t198 - t46;
t65 = -qJ(5) * t257 - t76;
t159 = t181 * t348;
t160 = t182 * t348;
t423 = -t160 * pkin(4) - qJ(5) * t159 + t524;
t161 = t181 * t351;
t162 = t349 * t456 + t351 * t600;
t422 = -t162 * pkin(4) - qJ(5) * t161 + t523;
t221 = -qJ(5) * t559 - t254;
t39 = -t132 * t167 + t542 * t81;
t415 = -0.2e1 * pkin(1) * t505 - pkin(8) * qJDD(2);
t412 = -qJ(5) * t182 + t101;
t411 = -qJ(5) * t252 + t172;
t409 = -t469 + t556;
t23 = -t131 * t529 - t251 * t439;
t24 = -t132 * t528 + t252 * t81;
t105 = qJ(5) * t539 - t117;
t399 = pkin(1) * t353 + t443;
t217 = t344 * t537 - t400;
t398 = g(1) * t152 + g(2) * t150 - g(3) * t217;
t218 = t252 * t347;
t397 = -g(1) * t153 - g(2) * t151 + g(3) * t218;
t396 = g(1) * t161 + g(2) * t159 - g(3) * t183;
t395 = g(1) * t162 + g(2) * t160 - g(3) * t184;
t219 = t257 * t348;
t220 = t257 * t351;
t394 = g(1) * t220 + g(2) * t219 - g(3) * t258;
t393 = -pkin(4) * t558 - qJ(5) * t344 - pkin(3);
t392 = t198 * t98 + t439;
t253 = pkin(3) * t436 - qJ(4) * t542;
t391 = -qJ(5) * t132 + t77;
t38 = -t131 * t166 + t439 * t483;
t388 = -t282 * t436 - t344 * t283;
t386 = -t218 * pkin(4) - qJ(5) * t217 + t460;
t190 = qJD(2) * t258 + t345 * t492;
t16 = -qJ(5) * t190 - qJD(5) * t257 - t28;
t3 = pkin(5) * t439 + qJDD(6) - t4;
t383 = t184 * pkin(4) + qJ(5) * t183 + t432;
t382 = -qJ(5) * t112 - qJD(5) * t182 + t57;
t379 = -pkin(4) * t375 - qJ(5) * t122 + t424;
t352 = qJD(2) ^ 2;
t378 = 0.2e1 * qJDD(1) * pkin(1) - pkin(8) * t352 + t442;
t377 = t262 * pkin(3) + qJ(4) * t195 + t462;
t376 = t346 * t465 + t349 * t503;
t374 = t111 * t132 + t112 * t131 + t181 * t81 - t182 * t439;
t373 = t111 * t198 - t131 * t190 - t181 * t469 + t257 * t439;
t372 = t112 * t198 - t132 * t190 - t182 * t469 - t257 * t81;
t224 = -pkin(4) * t559 - t253;
t370 = (-t347 * t438 + t495) * t348;
t5 = -pkin(4) * t439 - qJ(5) * t81 + t22 - t510;
t7 = -t344 * t47 + t436 * t54 + t483 * t73;
t369 = g(1) * t370;
t368 = -t115 * t483 + t344 * t85 - t436 * t95;
t45 = -t344 * t108 + t114 * t436 + t155 * t483;
t60 = t345 * t476 + t390;
t365 = t344 * t163 - t169 * t436 - t212 * t483;
t116 = -t345 * t474 + t388;
t363 = t126 * pkin(4) + qJ(5) * t125 + t377;
t362 = qJDD(5) - t7;
t360 = qJD(5) - t45;
t359 = t5 + t596;
t358 = -g(1) * t125 - g(2) * t122 - g(3) * t181 + t362;
t357 = t402 * t604;
t355 = -t198 * t131 + t81;
t319 = pkin(4) * t539;
t225 = t393 * t345;
t222 = -pkin(8) * t536 + t279;
t207 = -pkin(8) * t494 + t264;
t192 = (-qJ(6) * t558 + t393) * t345;
t191 = pkin(5) * t483 - t221;
t173 = pkin(5) * t542 - qJ(6) * t559 + t224;
t141 = -qJD(3) * t223 + t525;
t140 = (-t347 * t516 - t350 * t514) * pkin(8) + t526;
t106 = t319 - t116;
t100 = pkin(4) * t251 + t411;
t96 = -pkin(5) * t251 - t105;
t90 = t251 * t575 + t411;
t89 = t252 * pkin(5) + t319 + (qJ(6) * t349 + t474) * t345 - t388;
t78 = t198 * t545 + t469 * t559;
t67 = pkin(4) * t181 + t412;
t66 = -t257 * pkin(4) + t365;
t63 = -t190 * t198 + t257 * t469;
t62 = -t198 * t437 - t469 * t539;
t53 = t181 * t575 + t412;
t52 = -pkin(5) * t181 - t65;
t51 = -t241 - t60;
t49 = pkin(4) * t166 + t414;
t42 = t182 * pkin(5) - t257 * t575 + t365;
t33 = t198 * pkin(4) + t360;
t32 = pkin(4) * t131 + t391;
t26 = -pkin(5) * t131 + qJD(6) - t35;
t25 = t131 * t575 + t391;
t21 = -t190 * pkin(4) + t368;
t20 = t132 * pkin(5) + t198 * t575 + t360;
t19 = pkin(4) * t111 + t382;
t15 = -pkin(5) * t111 - t16;
t12 = t112 * pkin(5) - t257 * qJD(6) - t190 * t575 + t368;
t11 = qJD(6) * t181 + t111 * t575 + t382;
t6 = t362 - t576;
t2 = t5 + t607;
t1 = t198 * qJD(6) + t362 + t598;
t13 = [0, 0, 0, 0, 0, qJDD(1), t442, t443, 0, 0, qJDD(1) * t342 + 0.2e1 * t461, 0.2e1 * t335 * t347 - 0.2e1 * t505 * t520, qJDD(2) * t347 + t350 * t352, qJDD(1) * t343 - 0.2e1 * t461, qJDD(2) * t350 - t347 * t352, 0, t347 * t415 + t350 * t378, -t347 * t378 + t350 * t415, 0.2e1 * t519 * t557 - t443, -g(1) * (-t348 * pkin(1) + t340) - g(2) * t521 + (pkin(8) ^ 2 * t519 + pkin(1) ^ 2) * qJDD(1), -t164 * t535 + (t349 * t515 - t493) * t281 (t280 * t349 - t281 * t346) * t515 + (t555 - t554 + (-t544 - t548) * qJD(3)) * t347 (-t349 * t466 + t164) * t350 + ((t281 + t494) * qJD(2) + t376) * t347, t165 * t537 + (-t346 * t515 - t492) * t280, t165 * t350 + (t280 * qJD(2) + t435) * t347 + (-t347 * t410 + t350 * t466) * t346, -t347 * t466 - t350 * t410, -t141 * t597 + t222 * t503 + g(1) * t260 - g(2) * t262 + (-t92 + (-pkin(8) * t280 + t305 * t346) * qJD(2)) * t350 + (t349 * t508 + pkin(8) * t165 + t250 * t346 + (qJD(1) * t222 + t179) * qJD(2)) * t347, t140 * t597 - t223 * t503 - g(1) * t259 - g(2) * t261 + (-t401 + (pkin(8) * t281 + t305 * t349) * qJD(2)) * t350 + (-t346 * t508 - pkin(8) * t164 + t250 * t349 + (-qJD(1) * t223 - t180) * qJD(2)) * t347, t140 * t280 - t141 * t281 + t164 * t222 - t165 * t223 + t429 * t515 + (t346 * t401 - t349 * t92 + (t179 * t346 - t180 * t349) * qJD(3) + t442) * t347, -t401 * t223 + t180 * t140 + t92 * t222 + t179 * t141 - g(1) * t340 - g(2) * t462 - t428 * t584 + (t250 * t347 + t305 * t515) * pkin(8), t30, -t374, -t372, t29, t373, t63, -t101 * t439 + t111 * t77 + t131 * t57 + t181 * t22 + t190 * t45 + t198 * t368 + t257 * t7 - t365 * t469 + t446, t101 * t81 + t112 * t77 + t132 * t57 + t182 * t22 - t190 * t46 + t198 * t28 - t257 * t8 - t469 * t76 + t447, -t111 * t46 - t112 * t45 - t131 * t28 + t132 * t368 - t181 * t8 - t182 * t7 + t365 * t81 + t439 * t76 + t445, t8 * t76 + t46 * t28 - t7 * t365 - t45 * t368 + t22 * t101 + t77 * t57 - g(1) * (t370 + t424) - g(2) * t377, t63, t372, -t373, t30, -t374, t29, t111 * t35 + t112 * t33 + t131 * t16 + t132 * t21 + t181 * t4 + t182 * t6 - t439 * t65 + t66 * t81 + t445, -t111 * t32 - t131 * t19 - t181 * t5 + t190 * t33 - t198 * t21 + t257 * t6 + t439 * t67 + t469 * t66 - t446, -t112 * t32 - t132 * t19 + t16 * t198 - t182 * t5 - t190 * t35 - t257 * t4 - t469 * t65 - t67 * t81 - t447, -g(1) * t379 - g(2) * t363 + t35 * t16 + t32 * t19 + t33 * t21 + t4 * t65 + t5 * t67 + t6 * t66 - t369, t63, -t373, -t372, t29, t374, t30, t1 * t182 - t111 * t26 + t112 * t20 + t12 * t132 - t131 * t15 - t181 * t3 + t42 * t81 + t439 * t52 + t445, -t11 * t132 - t112 * t25 - t15 * t198 - t182 * t2 + t190 * t26 + t257 * t3 + t469 * t52 - t53 * t81 - t447, -t1 * t257 + t11 * t131 + t111 * t25 + t12 * t198 + t181 * t2 - t190 * t20 - t42 * t469 - t439 * t53 + t446, t2 * t53 + t25 * t11 + t1 * t42 + t20 * t12 + t3 * t52 + t26 * t15 - g(1) * (-pkin(5) * t194 - qJ(6) * t375 + t379) - g(2) * (pkin(5) * t195 + qJ(6) * t126 + t363) - t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498, t520 * t353, t504, t498, t335, qJDD(2), t347 * t399 - t330 - t577, t578 + (t399 - t557) * t350, 0, 0, -t544 * t597 - t555 (-t164 - t614) * t349 + (-t165 + t613) * t346, -t435 + t346 * t503 + (t349 * t468 + (-t281 + t517) * t347) * qJD(1), t548 * t597 - t554 (-t346 * t468 + (-t280 + t516) * t347) * qJD(1) + t376, t597 * t518, -pkin(2) * t165 + t206 * t597 + (-t179 * t347 + t280 * t587) * qJD(1) + t595 * t346 + t611 * t349, pkin(2) * t164 - t207 * t597 + (t180 * t347 - t281 * t587) * qJD(1) + t595 * t349 - t611 * t346, -t578 + t206 * t281 - t207 * t280 - t443 * t350 + ((qJD(3) * t281 - t165) * pkin(9) + t609) * t349 + (-t92 + t612 + (-qJD(3) * t280 - t164) * pkin(9)) * t346, -t250 * pkin(2) - t180 * t207 - t179 * t206 - t305 * t332 - g(1) * (-pkin(2) * t534 + t325) - g(2) * (-t348 * t589 + t321) - g(3) * t522 + (qJD(3) * t429 - t92 * t346 - t349 * t401) * pkin(9), t24, t364, t10, t23, -t9, t62, t469 * t116 - t172 * t439 + t22 * t251 - t239 * t45 - t529 * t77 + (-t349 * t7 + t45 * t514) * t345 - t567 * t198 + t564 * t131 + t395, -t469 * t117 + t172 * t81 + t22 * t252 + t239 * t46 - t528 * t77 + (t349 * t8 - t46 * t514) * t345 + t566 * t198 + t564 * t132 - t396, -t116 * t81 + t117 * t439 - t131 * t566 - t132 * t567 - t251 * t8 - t252 * t7 + t45 * t528 + t46 * t529 + t394, -g(1) * t523 - g(2) * t524 - g(3) * t432 + t7 * t116 + t8 * t117 + t22 * t172 + t45 * t567 + t46 * t566 + t564 * t77 + t357, t62, -t10, t9, t24, t364, t23, -t105 * t439 + t106 * t81 + t131 * t569 + t132 * t568 + t251 * t4 + t252 * t6 - t33 * t528 - t35 * t529 + t394, t100 * t439 + t106 * t469 - t131 * t570 - t198 * t568 - t251 * t5 + t32 * t529 + t33 * t437 - t539 * t6 - t395, -t100 * t81 - t105 * t469 + t239 * t35 - t252 * t5 + (t349 * t4 - t35 * t514) * t345 + t528 * t32 + t569 * t198 - t570 * t132 + t396, -g(1) * t422 - g(2) * t423 - g(3) * t383 + t5 * t100 + t4 * t105 + t6 * t106 + t32 * t570 + t33 * t568 + t35 * t569 + t357, t62, t9, t10, t23, -t364, t24, t1 * t252 - t131 * t571 + t132 * t572 - t20 * t528 - t251 * t3 + t26 * t529 + t439 * t96 + t81 * t89 + t394, -t132 * t573 - t198 * t571 - t2 * t252 + t25 * t528 + t26 * t437 - t3 * t539 + t469 * t96 - t81 * t90 + t396, t1 * t539 + t131 * t573 + t198 * t572 + t2 * t251 - t20 * t437 - t25 * t529 - t439 * t90 - t469 * t89 + t395, t2 * t90 + t1 * t89 + t3 * t96 - g(1) * (-pkin(5) * t220 - qJ(6) * t162 + t422) - g(2) * (-pkin(5) * t219 - qJ(6) * t160 + t423) - g(3) * (pkin(5) * t258 + qJ(6) * t184 + t383) + t571 * t26 + t573 * t25 + t572 * t20 + t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, -t280 ^ 2 + t281 ^ 2, -t164 + t614, t547, -t165 - t613, t410, -t306 * t512 + t177 - t612 - t305 * t281 - g(1) * t261 + g(2) * t259 + (-qJD(3) * t267 - t249 + t578) * t346, -t305 * t280 - t444 + t501 - t609, 0, 0, t39, t361, -t594, t38, -t18, t78, t7 * t559 + t253 * t469 - t88 * t131 - t77 * t166 + t60 * t198 + (pkin(3) * t439 - t22 * t558 - t281 * t45 + t344 * t511) * t345 + t397, -t8 * t559 - t254 * t469 - t88 * t132 - t77 * t167 - t61 * t198 + (-pkin(3) * t81 + t198 * t471 + t22 * t344 + t281 * t46) * t345 + t398, t61 * t131 + t60 * t132 + t46 * t166 + t45 * t167 - t253 * t81 + t254 * t439 + (-t501 + t558 * t8 - t344 * t7 + (-t131 * t558 + t132 * t344) * qJD(4)) * t345 + t527, t8 * t254 + t7 * t253 - t46 * t61 - t45 * t60 - t77 * t88 - g(1) * t247 + g(2) * t245 - g(3) * t460 + (-t22 * pkin(3) + (-t344 * t45 + t46 * t558) * qJD(4) + t444 * qJ(4)) * t345, t78, t594, t18, t39, t361, t38, -t51 * t132 - t35 * t166 - t33 * t167 - t221 * t439 + t224 * t81 + t561 * t131 + (-t501 - t558 * t4 + (qJD(4) * t132 + t6) * t344) * t345 + t527, t6 * t559 + t224 * t469 + t49 * t131 + t32 * t166 + t51 * t198 + t225 * t439 + (t558 * t5 - t281 * t33 + (qJD(5) * t131 - t511) * t344) * t345 - t397, -t4 * t559 - t221 * t469 + t49 * t132 + t32 * t167 - t225 * t81 + t561 * t198 + (t281 * t35 + (-t5 + t510) * t344) * t345 - t398, t5 * t225 + t4 * t221 + t6 * t224 - g(1) * (qJ(4) * t550 + t440) - g(2) * (qJ(4) * t552 + t441) - g(3) * t386 + t561 * t35 + (-t51 + t491) * t33 + (-t345 * t509 - t49) * t32, t78, t18, -t594, t38, -t361, t39, t26 * t166 - t20 * t167 + t173 * t81 + t191 * t439 + t562 * t132 - t560 * t131 + (t1 * t344 + t3 * t558 - t501) * t345 + t527, t3 * t559 + t191 * t469 + t25 * t167 - t192 * t81 + (-t2 * t344 - t26 * t281) * t345 - t560 * t198 - t563 * t132 - t398, -t1 * t559 - t173 * t469 - t25 * t166 - t192 * t439 + (-t2 * t558 + t20 * t281) * t345 + t562 * t198 + t563 * t131 + t397, t2 * t192 + t1 * t173 + t3 * t191 - g(1) * (qJ(6) * t153 + t440) - g(2) * (qJ(6) * t151 + t441) - g(3) * (-qJ(6) * t218 + t386) + (-pkin(5) * t501 + t444 * (pkin(5) + qJ(4))) * t345 + t560 * t26 + t563 * t25 + t562 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, t606, t434, t45 * t98 - t46 * t99 + t22 + t596, 0, 0, 0, 0, 0, 0, t434, t392, -t606, -t33 * t98 + t35 * t99 + t359, 0, 0, 0, 0, 0, 0, t434, -t606, -t392, -t20 * t98 - t26 * t99 + t359 + t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, -t409, t603, t32 * t132 - t35 * t198 + t358 - t576, 0, 0, 0, 0, 0, 0, t355, t603, t409, t25 * t132 + (qJD(6) + t26) * t198 + t358 + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132 * t198 + t439, t469 + t556, -t131 ^ 2 - t197, -g(1) * t126 - g(2) * t375 - g(3) * t182 - t25 * t131 - t20 * t198 + t3;];
tau_reg  = t13;
