% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 15:13
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR12_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR12_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR12_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 15:07:24
% EndTime: 2019-05-07 15:08:32
% DurationCPUTime: 29.07s
% Computational Cost: add. (306122->762), mult. (669516->1146), div. (0->0), fcn. (546660->14), ass. (0->489)
t418 = sin(pkin(12));
t421 = cos(pkin(6));
t493 = qJD(1) * t421;
t413 = qJD(2) + t493;
t424 = sin(qJ(3));
t428 = cos(qJ(3));
t419 = sin(pkin(6));
t425 = sin(qJ(2));
t492 = qJD(1) * t425;
t472 = t419 * t492;
t390 = t413 * t424 + t428 * t472;
t420 = cos(pkin(12));
t429 = cos(qJ(2));
t491 = qJD(1) * t429;
t411 = t419 * t491;
t485 = t411 - qJD(3);
t370 = t390 * t418 + t420 * t485;
t371 = t420 * t390 - t418 * t485;
t342 = t371 * t370;
t484 = qJDD(1) * t419;
t396 = qJD(2) * t411 + t425 * t484;
t412 = qJDD(1) * t421 + qJDD(2);
t466 = t424 * t396 - t428 * t412;
t356 = t390 * qJD(3) + t466;
t546 = -t342 + t356;
t558 = t418 * t546;
t557 = t420 * t546;
t422 = sin(qJ(6));
t423 = sin(qJ(5));
t427 = cos(qJ(5));
t336 = t427 * t370 + t371 * t423;
t337 = -t370 * t423 + t371 * t427;
t426 = cos(qJ(6));
t285 = t426 * t336 + t337 * t422;
t287 = -t336 * t422 + t337 * t426;
t232 = t287 * t285;
t355 = qJDD(5) + t356;
t354 = qJDD(6) + t355;
t550 = -t232 + t354;
t556 = t422 * t550;
t289 = t337 * t336;
t548 = -t289 + t355;
t555 = t423 * t548;
t554 = t426 * t550;
t553 = t427 * t548;
t483 = qJDD(1) * t429;
t446 = (qJD(2) * t492 - t483) * t419;
t437 = qJDD(3) + t446;
t482 = t485 ^ 2;
t388 = -t428 * t413 + t424 * t472;
t501 = t390 * t388;
t435 = t437 - t501;
t552 = t424 * t435;
t551 = t428 * t435;
t456 = -t428 * t396 - t424 * t412;
t357 = -t388 * qJD(3) - t456;
t340 = t420 * t357 + t418 * t437;
t432 = t418 * t357 - t420 * t437;
t253 = -t336 * qJD(5) + t427 * t340 - t423 * t432;
t468 = t340 * t423 + t427 * t432;
t453 = qJD(5) * t337 + t468;
t179 = -t285 * qJD(6) + t426 * t253 - t422 * t453;
t384 = qJD(5) + t388;
t381 = qJD(6) + t384;
t274 = t381 * t285;
t549 = -t274 + t179;
t314 = t384 * t336;
t547 = -t314 + t253;
t227 = t314 + t253;
t351 = t388 * t370;
t299 = -t351 - t340;
t545 = -t351 + t340;
t377 = t485 * t388;
t544 = -t377 - t357;
t535 = sin(qJ(1));
t536 = cos(qJ(1));
t451 = g(1) * t536 + g(2) * t535;
t538 = qJD(1) ^ 2;
t392 = -pkin(1) * t538 + pkin(8) * t484 - t451;
t450 = g(1) * t535 - g(2) * t536;
t489 = t419 * t538;
t434 = qJDD(1) * pkin(1) + pkin(8) * t489 + t450;
t433 = t421 * t434;
t467 = t425 * t392 - t429 * t433;
t530 = g(3) * t429;
t359 = t419 * t530 + t467;
t500 = t419 * t425;
t431 = -g(3) * t500 + t425 * t433;
t360 = t429 * t392 + t431;
t543 = t425 * t359 + t429 * t360;
t469 = t253 * t422 + t426 * t453;
t151 = (qJD(6) - t381) * t287 + t469;
t224 = (qJD(5) - t384) * t337 + t468;
t283 = t285 ^ 2;
t284 = t287 ^ 2;
t541 = t336 ^ 2;
t335 = t337 ^ 2;
t540 = t370 ^ 2;
t369 = t371 ^ 2;
t379 = t381 ^ 2;
t382 = t384 ^ 2;
t539 = t388 ^ 2;
t387 = t390 ^ 2;
t410 = t413 ^ 2;
t415 = t419 ^ 2;
t534 = pkin(2) * t429;
t463 = -pkin(9) * t425 - t534;
t494 = qJD(1) * t419;
t395 = t463 * t494;
t323 = t412 * pkin(9) - t410 * pkin(2) + (t395 * t494 + t392) * t429 + t431;
t529 = t421 * g(3);
t430 = -t396 * pkin(9) - t529 + ((-pkin(1) - t534) * qJDD(1) + (-pkin(8) * t494 - t429 * t413 * pkin(9) + (qJD(2) + t413) * t425 * pkin(2)) * qJD(1) - t450) * t419;
t277 = t428 * t323 + t424 * t430;
t361 = pkin(3) * t388 - qJ(4) * t390;
t243 = -pkin(3) * t482 + qJ(4) * t437 - t388 * t361 + t277;
t322 = -t412 * pkin(2) - t410 * pkin(9) + (t395 * t492 + t530) * t419 + t467;
t465 = t485 * t390;
t250 = t544 * qJ(4) + (-t465 + t356) * pkin(3) + t322;
t188 = 0.2e1 * qJD(4) * t371 + t243 * t418 - t420 * t250;
t156 = pkin(4) * t546 + pkin(10) * t299 - t188;
t189 = -0.2e1 * qJD(4) * t370 + t420 * t243 + t418 * t250;
t345 = pkin(4) * t388 - pkin(10) * t371;
t163 = -pkin(4) * t540 - pkin(10) * t432 - t388 * t345 + t189;
t108 = -t427 * t156 + t163 * t423;
t91 = pkin(5) * t548 - pkin(11) * t227 - t108;
t109 = t423 * t156 + t427 * t163;
t311 = pkin(5) * t384 - pkin(11) * t337;
t93 = -pkin(5) * t541 - pkin(11) * t453 - t384 * t311 + t109;
t52 = t422 * t93 - t426 * t91;
t53 = t422 * t91 + t426 * t93;
t30 = t422 * t53 - t426 * t52;
t537 = pkin(5) * t30;
t533 = pkin(3) * t424;
t154 = t274 + t179;
t102 = -t151 * t422 - t154 * t426;
t532 = pkin(5) * t102;
t531 = pkin(8) * t419;
t528 = t30 * t423;
t527 = t30 * t427;
t71 = -t108 * t427 + t109 * t423;
t526 = t418 * t71;
t525 = t420 * t71;
t276 = t323 * t424 - t428 * t430;
t242 = -t437 * pkin(3) - t482 * qJ(4) + t361 * t390 + qJDD(4) + t276;
t197 = t432 * pkin(4) - t540 * pkin(10) + t345 * t371 + t242;
t138 = pkin(5) * t453 - pkin(11) * t541 + t311 * t337 + t197;
t524 = t138 * t422;
t523 = t138 * t426;
t522 = t197 * t423;
t521 = t197 * t427;
t207 = t232 + t354;
t520 = t207 * t422;
t519 = t207 * t426;
t518 = t242 * t418;
t517 = t242 * t420;
t260 = t289 + t355;
t516 = t260 * t423;
t515 = t260 * t427;
t301 = t342 + t356;
t514 = t301 * t418;
t513 = t301 * t420;
t512 = t322 * t424;
t511 = t322 * t428;
t346 = -t501 - t437;
t510 = t346 * t424;
t509 = t346 * t428;
t508 = t381 * t422;
t507 = t381 * t426;
t506 = t384 * t423;
t505 = t384 * t427;
t504 = t388 * t371;
t503 = t388 * t418;
t502 = t388 * t420;
t499 = t424 * t356;
t490 = t415 * t538;
t405 = t429 * t425 * t490;
t393 = t405 + t412;
t497 = t425 * t393;
t394 = -t405 + t412;
t495 = t429 * t394;
t488 = 0.2e1 * qJD(3) - t411;
t481 = t424 * t232;
t480 = t428 * t232;
t479 = t424 * t289;
t478 = t428 * t289;
t477 = t424 * t342;
t476 = t428 * t342;
t475 = t429 * t501;
t400 = t413 * t411;
t474 = t400 + t396;
t473 = -pkin(3) * t428 - pkin(2);
t416 = t425 ^ 2;
t471 = t416 * t490;
t417 = t429 ^ 2;
t470 = t417 * t490;
t31 = t422 * t52 + t426 * t53;
t72 = t108 * t423 + t427 * t109;
t129 = t188 * t418 + t420 * t189;
t212 = t276 * t424 + t428 * t277;
t464 = -t413 + t493;
t462 = t424 * t377;
t461 = t424 * t465;
t460 = t428 * t377;
t459 = t428 * t465;
t458 = -pkin(3) * t242 + qJ(4) * t129;
t128 = -t188 * t420 + t189 * t418;
t457 = t276 * t428 - t277 * t424;
t455 = -pkin(1) + t463;
t216 = -t379 - t283;
t166 = t216 * t422 + t554;
t454 = pkin(5) * t166 - t52;
t327 = t390 * t411 + t466;
t262 = -t284 - t379;
t185 = t262 * t426 - t520;
t449 = pkin(5) * t185 - t53;
t318 = -t539 - t540;
t256 = t318 * t420 - t558;
t294 = t432 + t504;
t448 = -pkin(3) * t294 + qJ(4) * t256 - t517;
t339 = -t369 - t539;
t264 = -t339 * t418 - t513;
t447 = -pkin(3) * t545 + qJ(4) * t264 + t518;
t295 = t432 - t504;
t247 = -t295 * t420 - t299 * t418;
t308 = -t369 - t540;
t445 = -pkin(3) * t308 + qJ(4) * t247 + t129;
t17 = t31 * t423 + t527;
t27 = -pkin(5) * t138 + pkin(11) * t31;
t10 = -pkin(10) * t17 - pkin(11) * t527 - t27 * t423;
t18 = t31 * t427 - t528;
t12 = -t17 * t418 + t18 * t420;
t7 = -pkin(4) * t138 + pkin(10) * t18 - pkin(11) * t528 + t27 * t427;
t444 = -pkin(3) * t138 + qJ(4) * t12 + t10 * t418 + t420 * t7;
t195 = -t283 - t284;
t104 = -t151 * t426 + t154 * t422;
t24 = -pkin(5) * t195 + pkin(11) * t104 + t31;
t25 = -pkin(11) * t102 - t30;
t68 = -t102 * t423 + t104 * t427;
t15 = -pkin(4) * t195 + pkin(10) * t68 + t24 * t427 + t25 * t423;
t66 = t102 * t427 + t104 * t423;
t16 = -pkin(10) * t66 - t24 * t423 + t25 * t427;
t43 = -t418 * t66 + t420 * t68;
t443 = -pkin(3) * t195 + qJ(4) * t43 + t15 * t420 + t16 * t418;
t150 = (qJD(6) + t381) * t287 + t469;
t167 = t216 * t426 - t556;
t116 = -t166 * t423 + t167 * t427;
t81 = -pkin(5) * t150 + pkin(11) * t167 - t523;
t96 = -pkin(11) * t166 + t524;
t44 = -pkin(4) * t150 + pkin(10) * t116 + t423 * t96 + t427 * t81;
t115 = t166 * t427 + t167 * t423;
t48 = -pkin(10) * t115 - t423 * t81 + t427 * t96;
t76 = -t115 * t418 + t116 * t420;
t442 = -pkin(3) * t150 + qJ(4) * t76 + t418 * t48 + t420 * t44;
t110 = -pkin(11) * t185 + t523;
t186 = -t262 * t422 - t519;
t126 = -t185 * t423 + t186 * t427;
t82 = -pkin(5) * t549 + pkin(11) * t186 + t524;
t47 = -pkin(4) * t549 + pkin(10) * t126 + t110 * t423 + t427 * t82;
t125 = t185 * t427 + t186 * t423;
t49 = -pkin(10) * t125 + t110 * t427 - t423 * t82;
t84 = -t125 * t418 + t126 * t420;
t441 = -pkin(3) * t549 + qJ(4) * t84 + t418 * t49 + t420 * t47;
t175 = -t224 * t423 - t227 * t427;
t177 = -t224 * t427 + t227 * t423;
t123 = -t175 * t418 + t177 * t420;
t254 = -t335 - t541;
t54 = -pkin(4) * t254 + pkin(10) * t177 + t72;
t55 = -pkin(10) * t175 - t71;
t440 = -pkin(3) * t254 + qJ(4) * t123 + t418 * t55 + t420 * t54;
t278 = -t382 - t541;
t203 = t278 * t427 - t555;
t223 = (qJD(5) + t384) * t337 + t468;
t124 = -pkin(4) * t223 + pkin(10) * t203 - t521;
t202 = t278 * t423 + t553;
t141 = -pkin(10) * t202 + t522;
t160 = -t202 * t418 + t203 * t420;
t439 = -pkin(3) * t223 + qJ(4) * t160 + t124 * t420 + t141 * t418;
t303 = -t335 - t382;
t230 = -t303 * t423 - t515;
t127 = -pkin(4) * t547 + pkin(10) * t230 + t522;
t229 = t303 * t427 - t516;
t157 = -pkin(10) * t229 + t521;
t173 = -t229 * t418 + t230 * t420;
t438 = -pkin(3) * t547 + qJ(4) * t173 + t127 * t420 + t157 * t418;
t46 = t420 * t72 - t526;
t60 = -pkin(4) * t197 + pkin(10) * t72;
t436 = -pkin(3) * t197 - pkin(10) * t526 + qJ(4) * t46 + t420 * t60;
t399 = t413 * t472;
t398 = (t416 - t417) * t490;
t397 = -t410 - t470;
t383 = -t471 - t410;
t378 = t419 * t434 + t529;
t376 = -t399 - t446;
t375 = t399 - t446;
t374 = -t400 + t396;
t373 = -t387 + t482;
t372 = t539 - t482;
t364 = -t387 - t482;
t362 = t387 - t539;
t358 = -t539 - t482;
t353 = t428 * t356;
t350 = -t369 + t539;
t349 = -t539 + t540;
t344 = t539 + t387;
t343 = t462 + t459;
t341 = -t369 + t540;
t332 = t388 * t488 + t456;
t331 = t357 - t377;
t328 = -t390 * t488 - t466;
t325 = t424 * t357 - t459;
t324 = -t462 - t353;
t317 = t372 * t424 - t509;
t316 = t373 * t428 + t552;
t313 = -t335 + t382;
t312 = -t382 + t541;
t310 = -t364 * t424 + t509;
t309 = t364 * t428 + t510;
t307 = t358 * t428 - t552;
t306 = t358 * t424 + t551;
t305 = (-t370 * t420 + t371 * t418) * t388;
t304 = (-t370 * t418 - t371 * t420) * t388;
t293 = t340 * t420 - t371 * t503;
t292 = t340 * t418 + t371 * t502;
t291 = t370 * t502 + t418 * t432;
t290 = -t370 * t503 + t420 * t432;
t288 = t335 - t541;
t282 = -t327 * t428 + t331 * t424;
t280 = t328 * t424 - t428 * t544;
t279 = t305 * t424 - t353;
t272 = -t284 + t379;
t271 = t283 - t379;
t270 = t349 * t420 - t514;
t269 = -t350 * t418 + t557;
t268 = t349 * t418 + t513;
t267 = t350 * t420 + t558;
t266 = (-t336 * t427 + t337 * t423) * t384;
t265 = (-t336 * t423 - t337 * t427) * t384;
t263 = t339 * t420 - t514;
t258 = t293 * t424 - t476;
t257 = t291 * t424 + t476;
t255 = t318 * t418 + t557;
t246 = -t294 * t420 - t418 * t545;
t245 = -t295 * t418 + t299 * t420;
t244 = -t294 * t418 + t420 * t545;
t241 = pkin(2) * t332 + pkin(9) * t310 + t512;
t239 = pkin(2) * t328 + pkin(9) * t307 - t511;
t238 = t312 * t427 - t516;
t237 = -t313 * t423 + t553;
t236 = t312 * t423 + t515;
t235 = t313 * t427 + t555;
t234 = t270 * t424 + t295 * t428;
t233 = t269 * t424 + t299 * t428;
t231 = t284 - t283;
t222 = t253 * t427 - t337 * t506;
t221 = t253 * t423 + t337 * t505;
t220 = t336 * t505 + t423 * t453;
t219 = t336 * t506 - t427 * t453;
t218 = t264 * t428 + t424 * t545;
t217 = t264 * t424 - t428 * t545;
t215 = t246 * t424 + t341 * t428;
t214 = t256 * t428 + t294 * t424;
t213 = t256 * t424 - t294 * t428;
t210 = (-t285 * t426 + t287 * t422) * t381;
t209 = (-t285 * t422 - t287 * t426) * t381;
t205 = t247 * t428 + t308 * t424;
t204 = t247 * t424 - t308 * t428;
t201 = -t265 * t418 + t266 * t420;
t200 = t265 * t420 + t266 * t418;
t199 = -pkin(2) * t322 + pkin(9) * t212;
t198 = t201 * t424 - t355 * t428;
t196 = -qJ(4) * t263 + t517;
t194 = -qJ(4) * t255 + t518;
t193 = t271 * t426 - t520;
t192 = -t272 * t422 + t554;
t191 = t271 * t422 + t519;
t190 = t272 * t426 + t556;
t184 = pkin(2) * t344 + pkin(9) * t282 + t212;
t183 = -t236 * t418 + t238 * t420;
t182 = -t235 * t418 + t237 * t420;
t181 = t236 * t420 + t238 * t418;
t180 = t235 * t420 + t237 * t418;
t178 = -qJD(6) * t287 - t469;
t176 = -t223 * t427 - t423 * t547;
t174 = -t223 * t423 + t427 * t547;
t172 = t229 * t420 + t230 * t418;
t171 = -t221 * t418 + t222 * t420;
t170 = -t219 * t418 + t220 * t420;
t169 = t221 * t420 + t222 * t418;
t168 = t219 * t420 + t220 * t418;
t165 = -t209 * t423 + t210 * t427;
t164 = t209 * t427 + t210 * t423;
t161 = -pkin(3) * t263 + t189;
t159 = t202 * t420 + t203 * t418;
t158 = -pkin(3) * t255 + t188;
t147 = t179 * t426 - t287 * t508;
t146 = t179 * t422 + t287 * t507;
t145 = -t178 * t422 + t285 * t507;
t144 = t178 * t426 + t285 * t508;
t143 = t171 * t424 - t478;
t142 = t170 * t424 + t478;
t140 = t183 * t424 + t224 * t428;
t139 = t182 * t424 - t227 * t428;
t137 = t173 * t428 + t424 * t547;
t136 = t173 * t424 - t428 * t547;
t135 = t160 * t428 + t223 * t424;
t134 = t160 * t424 - t223 * t428;
t133 = -t191 * t423 + t193 * t427;
t132 = -t190 * t423 + t192 * t427;
t131 = t191 * t427 + t193 * t423;
t130 = t190 * t427 + t192 * t423;
t122 = -t174 * t418 + t176 * t420;
t121 = t175 * t420 + t177 * t418;
t120 = t174 * t420 + t176 * t418;
t119 = -qJ(4) * t245 - t128;
t118 = t129 * t428 + t242 * t424;
t117 = t129 * t424 - t242 * t428;
t114 = -t164 * t418 + t165 * t420;
t113 = t164 * t420 + t165 * t418;
t112 = t122 * t424 - t288 * t428;
t111 = t114 * t424 - t354 * t428;
t106 = t123 * t428 + t254 * t424;
t105 = t123 * t424 - t254 * t428;
t103 = -t150 * t426 - t422 * t549;
t101 = -t150 * t422 + t426 * t549;
t100 = -t146 * t423 + t147 * t427;
t99 = -t144 * t423 + t145 * t427;
t98 = t146 * t427 + t147 * t423;
t97 = t144 * t427 + t145 * t423;
t95 = -pkin(2) * t263 + pkin(9) * t218 + t161 * t428 + t196 * t424;
t94 = -pkin(2) * t255 + pkin(9) * t214 + t158 * t428 + t194 * t424;
t92 = -pkin(3) * t121 - pkin(4) * t175;
t89 = -t131 * t418 + t133 * t420;
t88 = -t130 * t418 + t132 * t420;
t87 = t131 * t420 + t133 * t418;
t86 = t130 * t420 + t132 * t418;
t85 = pkin(9) * t205 + t119 * t424 + t245 * t473;
t83 = t125 * t420 + t126 * t418;
t80 = -pkin(3) * t172 - pkin(4) * t229 + t109;
t79 = -qJ(4) * t172 - t127 * t418 + t157 * t420;
t78 = -pkin(3) * t159 - pkin(4) * t202 + t108;
t77 = -qJ(4) * t159 - t124 * t418 + t141 * t420;
t75 = t115 * t420 + t116 * t418;
t74 = t151 * t428 + t424 * t89;
t73 = -t154 * t428 + t424 * t88;
t70 = t424 * t549 + t428 * t84;
t69 = t424 * t84 - t428 * t549;
t67 = -t101 * t423 + t103 * t427;
t65 = t101 * t427 + t103 * t423;
t64 = t100 * t420 - t418 * t98;
t63 = -t418 * t97 + t420 * t99;
t62 = t100 * t418 + t420 * t98;
t61 = t418 * t99 + t420 * t97;
t59 = t424 * t64 - t480;
t58 = t424 * t63 + t480;
t57 = t150 * t424 + t428 * t76;
t56 = -t150 * t428 + t424 * t76;
t50 = pkin(9) * t118 + (-qJ(4) * t424 + t473) * t128;
t45 = t418 * t72 + t525;
t42 = -t418 * t65 + t420 * t67;
t41 = t418 * t68 + t420 * t66;
t40 = t418 * t67 + t420 * t65;
t39 = t197 * t424 + t428 * t46;
t38 = -t197 * t428 + t424 * t46;
t37 = -pkin(2) * t172 + pkin(9) * t137 + t424 * t79 + t428 * t80;
t36 = -t231 * t428 + t42 * t424;
t35 = t195 * t424 + t428 * t43;
t34 = -t195 * t428 + t424 * t43;
t33 = -pkin(2) * t159 + pkin(9) * t135 + t424 * t77 + t428 * t78;
t32 = -pkin(3) * t83 - pkin(4) * t125 - t449;
t29 = -pkin(3) * t75 - pkin(4) * t115 - t454;
t28 = -qJ(4) * t121 - t418 * t54 + t420 * t55;
t26 = -pkin(3) * t45 - pkin(4) * t71;
t23 = -pkin(3) * t41 - pkin(4) * t66 - t532;
t22 = -pkin(10) * t525 - qJ(4) * t45 - t418 * t60;
t21 = -qJ(4) * t83 - t418 * t47 + t420 * t49;
t20 = -pkin(2) * t121 + pkin(9) * t106 + t28 * t424 + t428 * t92;
t19 = -qJ(4) * t75 - t418 * t44 + t420 * t48;
t14 = -pkin(2) * t83 + pkin(9) * t70 + t21 * t424 + t32 * t428;
t13 = -pkin(2) * t75 + pkin(9) * t57 + t19 * t424 + t29 * t428;
t11 = t17 * t420 + t18 * t418;
t9 = t12 * t428 + t138 * t424;
t8 = t12 * t424 - t138 * t428;
t6 = -pkin(2) * t45 + pkin(9) * t39 + t22 * t424 + t26 * t428;
t5 = -qJ(4) * t41 - t15 * t418 + t16 * t420;
t4 = -pkin(3) * t11 - pkin(4) * t17 - t537;
t3 = -pkin(2) * t41 + pkin(9) * t35 + t23 * t428 + t424 * t5;
t2 = -qJ(4) * t11 + t10 * t420 - t418 * t7;
t1 = -pkin(2) * t11 + pkin(9) * t9 + t2 * t424 + t4 * t428;
t51 = [0, 0, 0, 0, 0, qJDD(1), t450, t451, 0, 0, (-t415 * t464 * t491 + t396 * t419) * t425, t421 * t398 + (t425 * t376 + t429 * t474) * t419, t421 * t374 + (t497 + t429 * (t410 - t471)) * t419, (t483 + (-qJD(2) + t464) * t492) * t415 * t429, t421 * t375 + (t425 * (-t410 + t470) + t495) * t419, t421 * t412, (-t359 + pkin(1) * (t393 * t429 + t397 * t425)) * t421 + (t429 * t378 + pkin(1) * t376 + pkin(8) * (t397 * t429 - t497)) * t419, -t378 * t500 - t421 * t360 + pkin(1) * (-t419 * t474 + (t383 * t429 - t394 * t425) * t421) + (-t425 * t383 - t495) * t531, pkin(1) * ((-t374 * t429 + t375 * t425) * t421 - (-t416 - t417) * t415 * t489) + (t425 * t374 + t375 * t429) * t531 + t543 * t419, pkin(1) * (t419 * t378 + (-t359 * t429 + t360 * t425) * t421) + t543 * t531, t421 * t325 + (t425 * (t428 * t357 + t461) - t475) * t419, t421 * t280 + (t425 * (t328 * t428 + t424 * t544) - t429 * t362) * t419, t421 * t316 + (t425 * (-t373 * t424 + t551) - t429 * t331) * t419, t421 * t324 + (t425 * (-t460 + t499) + t475) * t419, t421 * t317 + (t425 * (t372 * t428 + t510) + t429 * t327) * t419, t421 * t343 + (t425 * (t460 - t461) - t437 * t429) * t419, (t239 + pkin(1) * (t307 * t425 + t328 * t429)) * t421 + (t425 * (-pkin(9) * t306 + t512) + t429 * (-pkin(2) * t306 + t276) - pkin(1) * t306 + pkin(8) * (t307 * t429 - t425 * t328)) * t419, (t241 + pkin(1) * (t310 * t425 + t332 * t429)) * t421 + (t425 * (-pkin(9) * t309 + t511) + t429 * (-pkin(2) * t309 + t277) - pkin(1) * t309 + pkin(8) * (t310 * t429 - t425 * t332)) * t419, (t184 + pkin(1) * (t282 * t425 + t344 * t429)) * t421 + (t425 * t457 + pkin(8) * (t282 * t429 - t425 * t344) + t455 * (-t327 * t424 - t331 * t428)) * t419, (t199 + pkin(1) * (t212 * t425 - t322 * t429)) * t421 + (pkin(8) * (t212 * t429 + t425 * t322) - t455 * t457) * t419, t421 * t258 + (t425 * (t293 * t428 + t477) - t429 * t292) * t419, t421 * t215 + (t425 * (t246 * t428 - t341 * t424) - t429 * t244) * t419, t421 * t233 + (t425 * (t269 * t428 - t299 * t424) - t429 * t267) * t419, t421 * t257 + (t425 * (t291 * t428 - t477) + t429 * t290) * t419, t421 * t234 + (t425 * (t270 * t428 - t295 * t424) - t429 * t268) * t419, t421 * t279 + (t425 * (t305 * t428 + t499) - t429 * t304) * t419, (t94 + pkin(1) * (t214 * t425 - t255 * t429)) * t421 + (t425 * (-pkin(9) * t213 - t158 * t424 + t194 * t428) + t429 * (-pkin(2) * t213 - t448) - pkin(1) * t213 + pkin(8) * (t214 * t429 + t425 * t255)) * t419, (t95 + pkin(1) * (t218 * t425 - t263 * t429)) * t421 + (t425 * (-pkin(9) * t217 - t161 * t424 + t196 * t428) + t429 * (-pkin(2) * t217 - t447) - pkin(1) * t217 + pkin(8) * (t218 * t429 + t425 * t263)) * t419, (t85 + pkin(1) * (t205 * t425 - t245 * t429)) * t421 + (t425 * (-pkin(9) * t204 + t119 * t428 + t245 * t533) + t429 * (-pkin(2) * t204 - t445) - pkin(1) * t204 + pkin(8) * (t205 * t429 + t425 * t245)) * t419, (t50 + pkin(1) * (t118 * t425 - t128 * t429)) * t421 + (t425 * (-pkin(9) * t117 + (-qJ(4) * t428 + t533) * t128) + t429 * (-pkin(2) * t117 - t458) - pkin(1) * t117 + pkin(8) * (t118 * t429 + t425 * t128)) * t419, t421 * t143 + (t425 * (t171 * t428 + t479) - t429 * t169) * t419, t421 * t112 + (t425 * (t122 * t428 + t288 * t424) - t429 * t120) * t419, t421 * t139 + (t425 * (t182 * t428 + t227 * t424) - t429 * t180) * t419, t421 * t142 + (t425 * (t170 * t428 - t479) - t429 * t168) * t419, t421 * t140 + (t425 * (t183 * t428 - t224 * t424) - t429 * t181) * t419, t421 * t198 + (t425 * (t201 * t428 + t355 * t424) - t429 * t200) * t419, (t33 + pkin(1) * (t135 * t425 - t159 * t429)) * t421 + (t425 * (-pkin(9) * t134 - t424 * t78 + t428 * t77) + t429 * (-pkin(2) * t134 - t439) - pkin(1) * t134 + pkin(8) * (t135 * t429 + t425 * t159)) * t419, (t37 + pkin(1) * (t137 * t425 - t172 * t429)) * t421 + (t425 * (-pkin(9) * t136 - t424 * t80 + t428 * t79) + t429 * (-pkin(2) * t136 - t438) - pkin(1) * t136 + pkin(8) * (t137 * t429 + t425 * t172)) * t419, (t20 + pkin(1) * (t106 * t425 - t121 * t429)) * t421 + (t425 * (-pkin(9) * t105 + t28 * t428 - t424 * t92) + t429 * (-pkin(2) * t105 - t440) - pkin(1) * t105 + pkin(8) * (t106 * t429 + t425 * t121)) * t419, (t6 + pkin(1) * (t39 * t425 - t429 * t45)) * t421 + (t425 * (-pkin(9) * t38 + t22 * t428 - t26 * t424) + t429 * (-pkin(2) * t38 - t436) - pkin(1) * t38 + pkin(8) * (t39 * t429 + t425 * t45)) * t419, t421 * t59 + (t425 * (t428 * t64 + t481) - t429 * t62) * t419, t421 * t36 + (t425 * (t231 * t424 + t42 * t428) - t429 * t40) * t419, t421 * t73 + (t425 * (t154 * t424 + t428 * t88) - t429 * t86) * t419, t421 * t58 + (t425 * (t428 * t63 - t481) - t429 * t61) * t419, t421 * t74 + (t425 * (-t151 * t424 + t428 * t89) - t429 * t87) * t419, t421 * t111 + (t425 * (t114 * t428 + t354 * t424) - t429 * t113) * t419, (t13 + pkin(1) * (t425 * t57 - t429 * t75)) * t421 + (t425 * (-pkin(9) * t56 + t19 * t428 - t29 * t424) + t429 * (-pkin(2) * t56 - t442) - pkin(1) * t56 + pkin(8) * (t425 * t75 + t429 * t57)) * t419, (t14 + pkin(1) * (t425 * t70 - t429 * t83)) * t421 + (t425 * (-pkin(9) * t69 + t21 * t428 - t32 * t424) + t429 * (-pkin(2) * t69 - t441) - pkin(1) * t69 + pkin(8) * (t425 * t83 + t429 * t70)) * t419, (t3 + pkin(1) * (t35 * t425 - t41 * t429)) * t421 + (t425 * (-pkin(9) * t34 - t23 * t424 + t428 * t5) + t429 * (-pkin(2) * t34 - t443) - pkin(1) * t34 + pkin(8) * (t35 * t429 + t425 * t41)) * t419, (t1 + pkin(1) * (-t11 * t429 + t425 * t9)) * t421 + (t425 * (-pkin(9) * t8 + t2 * t428 - t4 * t424) + t429 * (-pkin(2) * t8 - t444) - pkin(1) * t8 + pkin(8) * (t425 * t11 + t429 * t9)) * t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, t398, t374, t405, t375, t412, -t359, -t360, 0, 0, t325, t280, t316, t324, t317, t343, t239, t241, t184, t199, t258, t215, t233, t257, t234, t279, t94, t95, t85, t50, t143, t112, t139, t142, t140, t198, t33, t37, t20, t6, t59, t36, t73, t58, t74, t111, t13, t14, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t501, t362, t331, -t501, -t327, t437, -t276, -t277, 0, 0, t292, t244, t267, -t290, t268, t304, t448, t447, t445, t458, t169, t120, t180, t168, t181, t200, t439, t438, t440, t436, t62, t40, t86, t61, t87, t113, t442, t441, t443, t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t545, t308, t242, 0, 0, 0, 0, 0, 0, t223, t547, t254, t197, 0, 0, 0, 0, 0, 0, t150, t549, t195, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, t288, t227, -t289, -t224, t355, -t108, -t109, 0, 0, t232, t231, t154, -t232, -t151, t354, t454, t449, t532, t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, t231, t154, -t232, -t151, t354, -t52, -t53, 0, 0;];
tauJ_reg  = t51;
