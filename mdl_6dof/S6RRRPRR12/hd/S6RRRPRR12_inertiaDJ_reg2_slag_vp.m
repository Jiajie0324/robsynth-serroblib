% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR12_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR12_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR12_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR12_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:46:30
% EndTime: 2019-03-09 19:47:07
% DurationCPUTime: 15.46s
% Computational Cost: add. (19680->654), mult. (51101->1173), div. (0->0), fcn. (51368->12), ass. (0->259)
t156 = sin(pkin(12));
t158 = cos(pkin(12));
t341 = sin(qJ(5));
t343 = cos(qJ(5));
t122 = t343 * t156 + t341 * t158;
t157 = sin(pkin(6));
t159 = sin(qJ(3));
t330 = cos(pkin(6));
t275 = t330 * t159;
t160 = sin(qJ(2));
t161 = cos(qJ(3));
t324 = t160 * t161;
t226 = t157 * t324 + t275;
t162 = cos(qJ(2));
t326 = t157 * t162;
t213 = -t156 * t326 + t158 * t226;
t321 = t226 * t156 + t158 * t326;
t235 = t341 * t213 + t343 * t321;
t282 = qJD(5) * t341;
t140 = t156 * t282;
t283 = qJD(5) * t343;
t238 = -t158 * t283 + t140;
t319 = t156 * t283 + t158 * t282;
t267 = t330 * t162 * pkin(1);
t222 = -pkin(2) * t330 - t267;
t327 = t157 * t160;
t304 = pkin(8) * t327;
t106 = t222 + t304;
t274 = t330 * t161;
t115 = t159 * t327 - t274;
t276 = t160 * t330;
t268 = pkin(1) * t276;
t221 = pkin(9) * t330 + t268;
t214 = t161 * t221;
t300 = -pkin(9) * t160 - pkin(1);
t336 = t115 * pkin(3);
t172 = -t156 * (t214 + (t159 * t300 + (-pkin(2) * t159 + pkin(8) * t161 - qJ(4)) * t162) * t157) + t158 * (-qJ(4) * t226 + t106 + t336) - t213 * pkin(10) + t115 * pkin(4);
t195 = -qJ(4) * t275 + t222 + t336;
t243 = -pkin(2) * t162 + t300;
t323 = t161 * t162;
t212 = pkin(8) * t323 + t159 * t243;
t322 = t162 * qJ(4);
t202 = t212 - t322;
t237 = pkin(8) * t160 - qJ(4) * t324;
t45 = t158 * t214 + t156 * t195 + (t156 * t237 + t158 * t202) * t157;
t174 = -pkin(10) * t321 + t45;
t16 = t343 * t172 - t341 * t174;
t334 = pkin(10) + qJ(4);
t335 = t161 * pkin(3);
t232 = -t159 * t334 - pkin(2) - t335;
t299 = pkin(9) * t156 + pkin(4);
t198 = t158 * t232 - t161 * t299;
t337 = pkin(9) * t161;
t305 = t158 * t337;
t205 = t156 * t232 + t305;
t58 = t343 * t198 - t341 * t205;
t62 = t343 * t213 - t341 * t321;
t351 = t122 * t334;
t350 = -0.2e1 * t238;
t349 = 0.2e1 * t319;
t17 = t341 * t172 + t343 * t174;
t59 = t341 * t198 + t343 * t205;
t316 = qJD(2) * t160;
t289 = t157 * t316;
t294 = qJD(3) * t327;
t127 = t159 * t294;
t272 = t330 * qJD(3);
t315 = qJD(2) * t162;
t288 = t157 * t315;
t345 = -t161 * (t272 + t288) + t127;
t190 = t156 * t289 - t158 * t345;
t187 = t190 * t156;
t249 = t341 * t156 - t343 * t158;
t204 = qJD(3) * t213;
t199 = t161 * t204;
t348 = t159 * t190 + t199;
t265 = t158 * t289;
t89 = t345 * t156;
t240 = t89 + t265;
t314 = qJD(3) * t161;
t347 = t240 * t159 - t321 * t314;
t149 = qJD(3) * t159;
t216 = t226 * qJD(3);
t94 = t159 * t288 + t216;
t65 = t115 * t149 - t161 * t94;
t223 = -t267 + t304;
t215 = t223 * qJD(2);
t155 = t161 ^ 2;
t346 = (t159 ^ 2 - t155) * qJD(3);
t153 = t158 ^ 2;
t344 = t94 * pkin(5);
t342 = cos(qJ(6));
t340 = sin(qJ(6));
t339 = pkin(3) * t159;
t338 = pkin(9) * t157;
t150 = t159 * pkin(9);
t333 = t158 * t94;
t254 = pkin(2) * t160 - pkin(9) * t162;
t303 = pkin(8) * t326;
t207 = t221 + t303;
t201 = qJD(3) * t207;
t233 = t243 * t157;
t224 = qJD(3) * t233;
t302 = t161 * t201 + (-t215 + t224) * t159;
t317 = qJD(2) * t157;
t46 = (-t160 * pkin(3) - t161 * t254) * t317 + t302;
t331 = t46 * t156;
t329 = t156 * t159;
t328 = t156 * t161;
t325 = t158 * t159;
t257 = t343 * t334;
t258 = t334 * t341;
t96 = -t156 * t258 + t158 * t257;
t320 = t122 * t159;
t148 = pkin(9) * t314;
t291 = t156 * t314;
t118 = pkin(4) * t291 + t148;
t123 = pkin(4) * t329 + t150;
t313 = qJD(3) * t162;
t312 = qJD(4) * t158;
t311 = qJD(4) * t159;
t310 = qJD(4) * t161;
t309 = t106 * qJD(3);
t308 = -0.2e1 * pkin(2) * qJD(3);
t71 = 0.2e1 * t115 * t94;
t307 = pkin(9) * t328;
t306 = pkin(9) * t325;
t301 = pkin(5) * t149;
t147 = -t158 * pkin(4) - pkin(3);
t152 = t157 ^ 2;
t295 = t152 * t315;
t292 = t159 * t313;
t290 = t156 * t311;
t287 = qJD(4) * t326;
t286 = t158 * t314;
t285 = t158 * t311;
t284 = t159 * t314;
t281 = qJD(6) * t342;
t280 = qJD(6) * t340;
t279 = t319 * pkin(5);
t278 = t343 * qJD(4);
t277 = t341 * qJD(4);
t273 = qJD(2) * t330;
t271 = 0.2e1 * t284;
t270 = pkin(5) * t281;
t269 = pkin(5) * t280;
t266 = t160 * t295;
t264 = t156 * t286;
t263 = t343 * t314;
t262 = t341 * t314;
t151 = t156 ^ 2;
t260 = 0.2e1 * (t151 + t153) * qJD(4);
t259 = -0.2e1 * t346;
t256 = t162 * t274;
t255 = t160 * t273;
t252 = t342 * t320;
t248 = -qJ(4) * t159 - t335;
t247 = -qJ(4) * t161 + t339;
t184 = -t159 * t201 + t161 * t224;
t183 = t184 - t287;
t206 = t94 * pkin(3) - qJD(4) * t226;
t185 = -(t161 * t272 - t127) * qJ(4) + t206;
t203 = -pkin(8) * t324 + qJ(4) * t160 + t159 * t254;
t236 = pkin(8) * t162 - t161 * t322;
t25 = -t156 * t183 + t158 * t185 + ((-t156 * t256 + t158 * t276) * pkin(1) + (-t156 * t203 + t158 * t236) * t157) * qJD(2);
t26 = t158 * t183 + t156 * t185 + ((t156 * t276 + t158 * t256) * pkin(1) + (t156 * t236 + t158 * t203) * t157) * qJD(2);
t246 = -t25 * t156 + t26 * t158;
t92 = -t285 + (pkin(9) * t329 + t158 * t247) * qJD(3);
t93 = -t290 + (t156 * t247 - t306) * qJD(3);
t245 = -t156 * t92 + t158 * t93;
t229 = t254 * t317;
t50 = -t159 * t229 + t161 * t215 - t184;
t51 = t161 * t229 - t302;
t244 = -t51 * t159 - t50 * t161;
t239 = -pkin(2) + t248;
t234 = -t161 * t334 + t339;
t15 = -pkin(11) * t235 + t17;
t179 = qJD(5) * t235 - t190 * t343 - t240 * t341;
t175 = qJ(4) * t289 - t287 - t50;
t180 = pkin(1) * t255 + pkin(8) * t288 + qJ(4) * t345 + t206;
t167 = t94 * pkin(4) - pkin(10) * t190 - t156 * t175 + t158 * t180;
t168 = pkin(10) * t240 + t156 * t180 + t158 * t175;
t7 = -qJD(5) * t17 + t343 * t167 - t341 * t168;
t163 = pkin(11) * t179 + t344 + t7;
t166 = t115 * pkin(5) - t62 * pkin(11) + t16;
t165 = t342 * t166;
t209 = qJD(5) * t62 + t341 * t190 - t240 * t343;
t6 = -qJD(5) * t16 - t341 * t167 - t343 * t168;
t170 = -pkin(11) * t209 - t6;
t1 = -qJD(6) * t165 + t15 * t280 - t340 * t163 - t342 * t170;
t231 = t240 * t158;
t218 = t156 * t262 - t158 * t263 + t159 * t319;
t186 = -t285 + (t158 * t234 + t159 * t299) * qJD(3);
t191 = -t290 + (t156 * t234 - t306) * qJD(3);
t36 = -qJD(5) * t59 + t343 * t186 - t341 * t191;
t169 = pkin(11) * t218 + t301 + t36;
t111 = t249 * t159;
t178 = -t161 * pkin(5) + t111 * pkin(11) + t58;
t177 = t342 * t178;
t217 = t156 * t263 + t158 * t262 - t159 * t238;
t35 = -qJD(5) * t58 - t341 * t186 - t343 * t191;
t182 = -pkin(11) * t217 - t35;
t52 = -pkin(11) * t320 + t59;
t10 = -qJD(6) * t177 - t340 * t169 - t342 * t182 + t280 * t52;
t228 = t342 * t249;
t227 = t159 * t316 - t161 * t313;
t117 = t268 + t303;
t220 = t342 * t235;
t219 = t340 * t235;
t78 = -t111 * t342 - t320 * t340;
t69 = -t159 * t207 + t161 * t233;
t64 = pkin(3) * t326 - t69;
t208 = (qJD(5) * t258 - t278) * t156;
t87 = t122 * t342 - t249 * t340;
t72 = qJD(5) * t351 + t156 * t277 - t158 * t278;
t197 = -t122 * pkin(11) - t351;
t53 = pkin(4) * t321 + t64;
t193 = t342 * t197;
t192 = t340 * t197;
t189 = -pkin(11) * t319 - t72;
t181 = t140 * pkin(11) + (-t277 + (-pkin(11) * t343 - t257) * qJD(5)) * t158 + t208;
t176 = t340 * t178;
t11 = -qJD(6) * t176 + t342 * t169 - t182 * t340 - t281 * t52;
t164 = t340 * t166;
t2 = -qJD(6) * t164 - t15 * t281 + t342 * t163 - t170 * t340;
t138 = -0.2e1 * t284;
t124 = -0.2e1 * t266;
t113 = qJD(2) * t117;
t105 = pkin(5) * t249 + t147;
t102 = t156 * t239 + t305;
t101 = t158 * t239 - t307;
t91 = pkin(5) * t320 + t123;
t86 = t122 * t340 + t228;
t79 = -pkin(11) * t249 + t96;
t77 = -t111 * t340 + t252;
t73 = (-qJD(5) * t257 - t277) * t158 + t208;
t70 = t157 * t212 + t214;
t63 = pkin(5) * t217 + t118;
t55 = qJD(6) * t87 - t238 * t340 + t319 * t342;
t54 = qJD(6) * t228 + t122 * t280 + t238 * t342 + t319 * t340;
t49 = t342 * t79 + t192;
t48 = -t340 * t79 + t193;
t44 = -t156 * t214 + t158 * t195 + (-t156 * t202 + t158 * t237) * t157;
t43 = qJD(6) * t78 + t217 * t342 - t218 * t340;
t42 = qJD(6) * t252 - t111 * t280 + t217 * t340 + t218 * t342;
t41 = t342 * t62 - t219;
t40 = t340 * t62 + t220;
t39 = -t89 * pkin(4) + (pkin(9) * t323 + (-pkin(2) * t161 + t147) * t160) * t317 + t302;
t37 = pkin(5) * t235 + t53;
t29 = t342 * t52 + t176;
t28 = -t340 * t52 + t177;
t22 = -qJD(6) * t192 + t181 * t342 - t189 * t340 - t281 * t79;
t21 = -qJD(6) * t193 - t181 * t340 - t189 * t342 + t280 * t79;
t18 = -pkin(3) * t289 - pkin(4) * t240 + pkin(5) * t209 - t51;
t13 = -qJD(6) * t219 - t179 * t340 + t209 * t342 + t281 * t62;
t12 = qJD(6) * t220 + t179 * t342 + t209 * t340 + t280 * t62;
t9 = t15 * t342 + t164;
t8 = -t15 * t340 + t165;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t266, 0.2e1 * (-t160 ^ 2 + t162 ^ 2) * t152 * qJD(2), 0.2e1 * t273 * t326, t124, -0.2e1 * t157 * t255, 0, -0.2e1 * pkin(1) * t152 * t316 - 0.2e1 * t113 * t330, -0.2e1 * pkin(1) * t295 + 0.2e1 * t215 * t330, 0.2e1 * t113 * t327 - 0.2e1 * t117 * t289 - 0.2e1 * t215 * t326 + 0.2e1 * t223 * t288, 0.2e1 * t113 * t223 - 0.2e1 * t117 * t215, -0.2e1 * t226 * t345, 0.2e1 * t115 * t345 - 0.2e1 * t226 * t94, 0.2e1 * t226 * t289 + 0.2e1 * t326 * t345, t71, 0.2e1 * (-t115 * t316 + t162 * t94) * t157, t124, 0.2e1 * t106 * t94 + 0.2e1 * t113 * t115 + 0.2e1 * (-t162 * t51 + t316 * t69) * t157, -0.2e1 * t106 * t345 + 0.2e1 * t113 * t226 - 0.2e1 * t289 * t70 - 0.2e1 * t326 * t50, 0.2e1 * t50 * t115 - 0.2e1 * t226 * t51 + 0.2e1 * t345 * t69 - 0.2e1 * t70 * t94, 0.2e1 * t106 * t113 - 0.2e1 * t50 * t70 + 0.2e1 * t51 * t69, 0.2e1 * t213 * t190, -0.2e1 * t190 * t321 + 0.2e1 * t213 * t240, 0.2e1 * t115 * t190 + 0.2e1 * t213 * t94, -0.2e1 * t321 * t240, 0.2e1 * t115 * t240 - 0.2e1 * t321 * t94, t71, 0.2e1 * t25 * t115 - 0.2e1 * t240 * t64 + 0.2e1 * t321 * t46 + 0.2e1 * t44 * t94, -0.2e1 * t26 * t115 + 0.2e1 * t190 * t64 + 0.2e1 * t213 * t46 - 0.2e1 * t45 * t94, -0.2e1 * t190 * t44 - 0.2e1 * t213 * t25 + 0.2e1 * t240 * t45 - 0.2e1 * t26 * t321, 0.2e1 * t25 * t44 + 0.2e1 * t26 * t45 + 0.2e1 * t46 * t64, -0.2e1 * t62 * t179, 0.2e1 * t179 * t235 - 0.2e1 * t209 * t62, -0.2e1 * t115 * t179 + 0.2e1 * t62 * t94, 0.2e1 * t235 * t209, -0.2e1 * t115 * t209 - 0.2e1 * t235 * t94, t71, 0.2e1 * t7 * t115 + 0.2e1 * t16 * t94 + 0.2e1 * t209 * t53 + 0.2e1 * t235 * t39, 0.2e1 * t6 * t115 - 0.2e1 * t17 * t94 - 0.2e1 * t179 * t53 + 0.2e1 * t39 * t62, 0.2e1 * t16 * t179 - 0.2e1 * t17 * t209 + 0.2e1 * t235 * t6 - 0.2e1 * t7 * t62, 0.2e1 * t16 * t7 - 0.2e1 * t17 * t6 + 0.2e1 * t39 * t53, -0.2e1 * t41 * t12, 0.2e1 * t12 * t40 - 0.2e1 * t13 * t41, -0.2e1 * t115 * t12 + 0.2e1 * t41 * t94, 0.2e1 * t40 * t13, -0.2e1 * t115 * t13 - 0.2e1 * t40 * t94, t71, 0.2e1 * t115 * t2 + 0.2e1 * t13 * t37 + 0.2e1 * t18 * t40 + 0.2e1 * t8 * t94, 0.2e1 * t1 * t115 - 0.2e1 * t12 * t37 + 0.2e1 * t18 * t41 - 0.2e1 * t9 * t94, 0.2e1 * t1 * t40 + 0.2e1 * t12 * t8 - 0.2e1 * t13 * t9 - 0.2e1 * t2 * t41, -0.2e1 * t1 * t9 + 0.2e1 * t18 * t37 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, 0, -t289, 0, -t113, t215, 0, 0, t155 * t294 + (-t127 + (0.2e1 * t272 + t288) * t161) * t159, -t115 * t314 - t161 * t345 + (-t216 - t94) * t159, t227 * t157, t65 (t161 * t316 + t292) * t157, 0, -pkin(2) * t94 - t113 * t161 + t159 * t309 - t227 * t338, pkin(2) * t345 + t113 * t159 + t161 * t309 - t289 * t337 - t292 * t338, pkin(9) * t65 + t148 * t226 - t70 * t149 - t150 * t345 - t69 * t314 + t244, -pkin(2) * t113 + ((-t70 * t159 - t69 * t161) * qJD(3) + t244) * pkin(9), t348 * t158, -t156 * t199 + t158 * t347 - t159 * t187, t115 * t286 + t159 * t204 - t161 * t190 + t325 * t94, -t347 * t156, -t94 * t329 - t240 * t161 + (-t115 * t328 - t159 * t321) * qJD(3), t65, t101 * t94 + t92 * t115 - t25 * t161 + (-pkin(9) * t240 + t331) * t159 + (t44 * t159 + (pkin(9) * t321 + t64 * t156) * t161) * qJD(3), pkin(9) * t348 - t102 * t94 - t93 * t115 - t149 * t45 + t26 * t161 + t286 * t64 + t325 * t46, -t101 * t190 + t102 * t240 - t213 * t92 - t25 * t325 - t26 * t329 - t286 * t44 - t291 * t45 - t321 * t93, t101 * t25 + t102 * t26 + t44 * t92 + t45 * t93 + (t46 * t159 + t314 * t64) * pkin(9), t111 * t179 - t218 * t62, t111 * t209 + t179 * t320 - t217 * t62 + t218 * t235, -t111 * t94 - t115 * t218 + t149 * t62 + t161 * t179, t209 * t320 + t217 * t235, -t115 * t217 - t149 * t235 + t161 * t209 - t320 * t94, t65, t36 * t115 + t118 * t235 + t123 * t209 + t149 * t16 - t7 * t161 + t217 * t53 + t320 * t39 + t58 * t94, -t39 * t111 + t35 * t115 + t118 * t62 - t123 * t179 - t149 * t17 - t6 * t161 - t218 * t53 - t59 * t94, t7 * t111 + t16 * t218 - t17 * t217 + t179 * t58 - t209 * t59 + t235 * t35 + t320 * t6 - t36 * t62, t118 * t53 + t123 * t39 + t16 * t36 - t17 * t35 + t58 * t7 - t59 * t6, -t12 * t78 - t41 * t42, t12 * t77 - t13 * t78 + t40 * t42 - t41 * t43, -t115 * t42 + t12 * t161 + t149 * t41 + t78 * t94, t13 * t77 + t40 * t43, -t115 * t43 + t13 * t161 - t149 * t40 - t77 * t94, t65, t11 * t115 + t13 * t91 + t149 * t8 - t161 * t2 + t18 * t77 + t28 * t94 + t37 * t43 + t40 * t63, -t1 * t161 + t10 * t115 - t12 * t91 - t149 * t9 + t18 * t78 - t29 * t94 - t37 * t42 + t41 * t63, t1 * t77 + t10 * t40 - t11 * t41 + t12 * t28 - t13 * t29 - t2 * t78 + t42 * t8 - t43 * t9, -t1 * t29 - t10 * t9 + t11 * t8 + t18 * t91 + t2 * t28 + t37 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t259, 0, t138, 0, 0, t159 * t308, t161 * t308, 0, 0, t153 * t271, -0.4e1 * t159 * t264, 0.2e1 * t158 * t346, t151 * t271, t156 * t259, t138, -0.2e1 * t161 * t92 + 0.2e1 * (t101 + 0.2e1 * t307) * t149, 0.2e1 * t161 * t93 + 0.2e1 * (-t102 + 0.2e1 * t305) * t149, 0.2e1 * (-t156 * t93 - t158 * t92) * t159 + 0.2e1 * (-t101 * t158 - t102 * t156) * t314, 0.2e1 * pkin(9) ^ 2 * t284 + 0.2e1 * t101 * t92 + 0.2e1 * t102 * t93, 0.2e1 * t111 * t218, 0.2e1 * t111 * t217 + 0.2e1 * t218 * t320, -0.2e1 * t111 * t149 + 0.2e1 * t161 * t218, 0.2e1 * t320 * t217, -0.2e1 * t149 * t320 + 0.2e1 * t161 * t217, t138, 0.2e1 * t118 * t320 + 0.2e1 * t123 * t217 + 0.2e1 * t149 * t58 - 0.2e1 * t36 * t161, -0.2e1 * t118 * t111 - 0.2e1 * t123 * t218 - 0.2e1 * t149 * t59 - 0.2e1 * t35 * t161, 0.2e1 * t36 * t111 - 0.2e1 * t217 * t59 + 0.2e1 * t218 * t58 + 0.2e1 * t320 * t35, 0.2e1 * t118 * t123 - 0.2e1 * t35 * t59 + 0.2e1 * t36 * t58, -0.2e1 * t78 * t42, 0.2e1 * t42 * t77 - 0.2e1 * t43 * t78, 0.2e1 * t149 * t78 + 0.2e1 * t161 * t42, 0.2e1 * t77 * t43, -0.2e1 * t149 * t77 + 0.2e1 * t161 * t43, t138, -0.2e1 * t11 * t161 + 0.2e1 * t149 * t28 + 0.2e1 * t43 * t91 + 0.2e1 * t63 * t77, -0.2e1 * t10 * t161 - 0.2e1 * t149 * t29 - 0.2e1 * t42 * t91 + 0.2e1 * t63 * t78, 0.2e1 * t10 * t77 - 0.2e1 * t11 * t78 + 0.2e1 * t28 * t42 - 0.2e1 * t29 * t43, -0.2e1 * t10 * t29 + 0.2e1 * t11 * t28 + 0.2e1 * t63 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, 0, -t94, t289, t51, t50, 0, 0, t187, -t345 * t153 + (t89 + 0.2e1 * t265) * t156, t156 * t94, t231, t333, 0, pkin(3) * t240 - t46 * t158 + (-qJ(4) * t94 - qJD(4) * t115) * t156, -pkin(3) * t190 - qJ(4) * t333 - t115 * t312 + t331, qJD(4) * t156 * t213 - t312 * t321 + t246 + (t231 + t187) * qJ(4), -pkin(3) * t46 + (-t156 * t44 + t158 * t45) * qJD(4) + t246 * qJ(4), -t122 * t179 - t238 * t62, -t122 * t209 + t179 * t249 + t235 * t238 - t319 * t62, -t115 * t238 + t122 * t94, t209 * t249 + t235 * t319, -t115 * t319 - t249 * t94, 0, t73 * t115 + t147 * t209 + t249 * t39 + t319 * t53 - t351 * t94, t72 * t115 + t39 * t122 - t147 * t179 - t238 * t53 - t96 * t94, -t7 * t122 + t16 * t238 - t17 * t319 - t179 * t351 - t209 * t96 + t235 * t72 + t249 * t6 - t73 * t62, t147 * t39 + t16 * t73 - t17 * t72 - t351 * t7 - t6 * t96, -t12 * t87 - t41 * t54, t12 * t86 - t13 * t87 + t40 * t54 - t41 * t55, -t115 * t54 + t87 * t94, t13 * t86 + t40 * t55, -t115 * t55 - t86 * t94, 0, t105 * t13 + t22 * t115 + t18 * t86 + t279 * t40 + t37 * t55 + t48 * t94, -t105 * t12 + t21 * t115 + t18 * t87 + t279 * t41 - t37 * t54 - t49 * t94, t1 * t86 + t12 * t48 - t13 * t49 - t2 * t87 + t21 * t40 - t22 * t41 + t54 * t8 - t55 * t9, -t1 * t49 + t18 * t105 + t2 * t48 - t9 * t21 + t8 * t22 + t279 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, 0, -t149, 0, -t148, pkin(9) * t149, 0, 0, t264 (-t151 + t153) * t314, t156 * t149, -t264, t158 * t149, 0, t156 * t310 + (t156 * t248 - t305) * qJD(3), t158 * t310 + (t158 * t248 + t307) * qJD(3), t245, -pkin(3) * t148 + (-t101 * t156 + t102 * t158) * qJD(4) + t245 * qJ(4), t111 * t238 - t122 * t218, t111 * t319 - t122 * t217 + t218 * t249 + t238 * t320, t122 * t149 + t161 * t238, t217 * t249 + t319 * t320, -t149 * t249 + t161 * t319, 0, t118 * t249 + t123 * t319 + t147 * t217 - t149 * t351 - t73 * t161, t118 * t122 - t123 * t238 - t147 * t218 - t149 * t96 - t72 * t161, t73 * t111 - t36 * t122 - t217 * t96 - t218 * t351 + t238 * t58 + t249 * t35 - t319 * t59 + t320 * t72, t118 * t147 - t35 * t96 - t351 * t36 + t58 * t73 - t59 * t72, -t42 * t87 - t54 * t78, t42 * t86 - t43 * t87 + t54 * t77 - t55 * t78, t149 * t87 + t161 * t54, t43 * t86 + t55 * t77, -t149 * t86 + t161 * t55, 0, t105 * t43 + t149 * t48 - t22 * t161 + t279 * t77 + t91 * t55 + t63 * t86, -t105 * t42 - t149 * t49 - t21 * t161 + t279 * t78 - t91 * t54 + t63 * t87, t10 * t86 - t11 * t87 + t21 * t77 - t22 * t78 + t28 * t54 - t29 * t55 + t42 * t48 - t43 * t49, -t10 * t49 + t63 * t105 + t11 * t48 - t29 * t21 + t28 * t22 + t279 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, qJ(4) * t260, t122 * t350, -0.2e1 * t122 * t319 + 0.2e1 * t238 * t249, 0, t249 * t349, 0, 0, t147 * t349, t147 * t350, -0.2e1 * t73 * t122 - 0.2e1 * t238 * t351 + 0.2e1 * t249 * t72 - 0.2e1 * t319 * t96, -0.2e1 * t351 * t73 - 0.2e1 * t72 * t96, -0.2e1 * t87 * t54, 0.2e1 * t54 * t86 - 0.2e1 * t55 * t87, 0, 0.2e1 * t86 * t55, 0, 0, 0.2e1 * t105 * t55 + 0.2e1 * t279 * t86, -0.2e1 * t105 * t54 + 0.2e1 * t279 * t87, 0.2e1 * t21 * t86 - 0.2e1 * t22 * t87 + 0.2e1 * t48 * t54 - 0.2e1 * t49 * t55, 0.2e1 * t105 * t279 - 0.2e1 * t49 * t21 + 0.2e1 * t48 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t190, 0, t46, 0, 0, 0, 0, 0, 0, t209, -t179, 0, t39, 0, 0, 0, 0, 0, 0, t13, -t12, 0, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t286, 0, t148, 0, 0, 0, 0, 0, 0, t217, -t218, 0, t118, 0, 0, 0, 0, 0, 0, t43, -t42, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, -t238, 0, 0, 0, 0, 0, 0, 0, 0, t55, -t54, 0, t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, 0, -t209, t94, t7, t6, 0, 0, 0, 0, -t12, 0, -t13, t94, -t115 * t269 + t342 * t344 + t2 (-t115 * t281 - t340 * t94) * pkin(5) + t1 (t342 * t12 - t340 * t13 + (t340 * t41 - t342 * t40) * qJD(6)) * pkin(5) (t342 * t2 - t340 * t1 + (-t340 * t8 + t342 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, 0, -t217, t149, t36, t35, 0, 0, 0, 0, -t42, 0, -t43, t149, t161 * t269 + t301 * t342 + t11 (-t149 * t340 + t161 * t281) * pkin(5) + t10 (t342 * t42 - t340 * t43 + (t340 * t78 - t342 * t77) * qJD(6)) * pkin(5) (t342 * t11 - t340 * t10 + (-t28 * t340 + t29 * t342) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, 0, -t319, 0, t73, t72, 0, 0, 0, 0, -t54, 0, -t55, 0, t22, t21 (t342 * t54 - t340 * t55 + (t340 * t87 - t342 * t86) * qJD(6)) * pkin(5) (t342 * t22 - t340 * t21 + (-t340 * t48 + t342 * t49) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t269, -0.2e1 * t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, -t13, t94, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, 0, -t43, t149, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, 0, -t55, 0, t22, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
