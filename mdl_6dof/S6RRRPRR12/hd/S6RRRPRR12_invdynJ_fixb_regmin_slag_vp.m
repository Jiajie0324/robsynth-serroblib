% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRR12_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR12_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR12_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR12_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:46:35
% EndTime: 2019-03-09 19:47:19
% DurationCPUTime: 21.57s
% Computational Cost: add. (19517->775), mult. (47416->1081), div. (0->0), fcn. (39452->18), ass. (0->333)
t355 = sin(pkin(6));
t364 = cos(qJ(2));
t466 = qJD(1) * t364;
t443 = t355 * t466;
t553 = qJD(3) - t443;
t360 = sin(qJ(2));
t504 = cos(pkin(6));
t429 = t504 * qJD(1);
t418 = pkin(1) * t429;
t279 = pkin(8) * t443 + t360 * t418;
t359 = sin(qJ(3));
t363 = cos(qJ(3));
t552 = -qJD(4) * t359 - t279 + t553 * (pkin(3) * t359 - qJ(4) * t363);
t398 = t429 + qJD(2);
t467 = qJD(1) * t355;
t444 = t360 * t467;
t420 = t359 * t444;
t257 = -t363 * t398 + t420;
t249 = qJD(5) + t257;
t244 = qJD(6) + t249;
t259 = t359 * t398 + t363 * t444;
t354 = sin(pkin(12));
t356 = cos(pkin(12));
t203 = t259 * t354 - t356 * t553;
t205 = t259 * t356 + t354 * t553;
t358 = sin(qJ(5));
t362 = cos(qJ(5));
t122 = t362 * t203 + t205 * t358;
t357 = sin(qJ(6));
t361 = cos(qJ(6));
t530 = t203 * t358 - t205 * t362;
t64 = t361 * t122 - t357 * t530;
t551 = t244 * t64;
t550 = t122 * t249;
t401 = t122 * t357 + t361 * t530;
t549 = t244 * t401;
t276 = -pkin(8) * t444 + t364 * t418;
t409 = pkin(2) * t360 - pkin(9) * t364;
t277 = t409 * t467;
t475 = t363 * t276 + t359 * t277;
t172 = qJ(4) * t444 + t475;
t463 = qJD(3) * t359;
t450 = pkin(9) * t463;
t478 = t552 * t356 + (t172 + t450) * t354;
t548 = -t356 * t172 + t354 * t552;
t483 = t363 * t364;
t243 = (t354 * t360 + t356 * t483) * t467;
t442 = t359 * t466;
t419 = t355 * t442;
t484 = t356 * t363;
t547 = -pkin(4) * t419 + pkin(10) * t243 + (pkin(4) * t359 - pkin(10) * t484) * qJD(3) + t478;
t488 = t354 * t363;
t242 = -t356 * t444 + t443 * t488;
t485 = t356 * t359;
t541 = pkin(10) * t242 + (-pkin(9) * t485 - pkin(10) * t488) * qJD(3) + t548;
t240 = pkin(9) * t398 + t279;
t518 = pkin(9) * t360;
t396 = -pkin(2) * t364 - pkin(1) - t518;
t271 = t396 * t355;
t248 = qJD(1) * t271;
t157 = -t359 * t240 + t248 * t363;
t185 = pkin(3) * t259 + qJ(4) * t257;
t104 = t356 * t157 + t354 * t185;
t501 = t257 * t354;
t90 = pkin(10) * t501 + t104;
t546 = -qJD(4) * t356 + t90;
t545 = t249 * t530;
t542 = t401 * t64;
t490 = t354 * t358;
t300 = -t362 * t356 + t490;
t301 = t354 * t362 + t356 * t358;
t459 = qJD(5) * t359;
t462 = qJD(3) * t363;
t481 = t242 * t358 - t243 * t362 - t300 * t462 - t301 * t459;
t458 = qJD(5) * t362;
t480 = -t362 * t242 - t243 * t358 + t301 * t462 + t458 * t485 - t459 * t490;
t474 = t249 * t300;
t473 = t249 * t301;
t451 = t360 * qJDD(1);
t434 = t355 * t451;
t454 = qJD(1) * qJD(2);
t435 = t355 * t454;
t540 = t364 * t435 + t434;
t539 = t401 ^ 2 - t64 ^ 2;
t379 = qJD(3) * t398;
t424 = t504 * qJDD(1);
t393 = t424 + qJDD(2);
t160 = -qJD(3) * t420 + t359 * t393 + (t379 + t540) * t363;
t453 = qJDD(1) * t364;
t332 = t355 * t453;
t417 = t360 * t435;
t273 = qJDD(3) - t332 + t417;
t128 = t160 * t354 - t356 * t273;
t129 = t160 * t356 + t273 * t354;
t460 = qJD(5) * t358;
t44 = -t358 * t128 + t362 * t129 - t203 * t458 - t205 * t460;
t45 = -qJD(5) * t530 + t362 * t128 + t129 * t358;
t456 = qJD(6) * t361;
t457 = qJD(6) * t357;
t12 = -t122 * t456 - t357 * t45 + t361 * t44 + t457 * t530;
t538 = t12 + t551;
t520 = sin(qJ(1));
t411 = t504 * t520;
t521 = cos(qJ(1));
t291 = -t360 * t411 + t364 * t521;
t445 = t355 * t520;
t234 = t291 * t363 + t359 * t445;
t290 = t360 * t521 + t364 * t411;
t351 = pkin(12) + qJ(5);
t348 = qJ(6) + t351;
t342 = sin(t348);
t343 = cos(t348);
t156 = t234 * t343 + t290 * t342;
t239 = -pkin(2) * t398 - t276;
t136 = t257 * pkin(3) - t259 * qJ(4) + t239;
t158 = t363 * t240 + t359 * t248;
t140 = qJ(4) * t553 + t158;
t80 = t356 * t136 - t140 * t354;
t50 = pkin(4) * t257 - pkin(10) * t205 + t80;
t81 = t354 * t136 + t356 * t140;
t60 = -pkin(10) * t203 + t81;
t27 = t358 * t50 + t362 * t60;
t21 = -pkin(11) * t122 + t27;
t19 = t21 * t457;
t487 = t355 * t360;
t287 = t359 * t504 + t363 * t487;
t486 = t355 * t364;
t412 = t504 * t521;
t289 = t360 * t412 + t364 * t520;
t446 = t355 * t521;
t230 = t289 * t363 - t359 * t446;
t288 = t360 * t520 - t364 * t412;
t534 = t230 * t343 + t288 * t342;
t138 = -pkin(3) * t553 + qJD(4) - t157;
t106 = pkin(4) * t203 + t138;
t55 = pkin(5) * t122 + t106;
t537 = t55 * t64 + g(1) * t156 + g(2) * t534 - g(3) * (-t287 * t343 + t342 * t486) + t19;
t155 = -t234 * t342 + t290 * t343;
t26 = -t358 * t60 + t362 * t50;
t20 = pkin(11) * t530 + t26;
t18 = pkin(5) * t249 + t20;
t507 = t21 * t361;
t11 = t18 * t357 + t507;
t464 = qJD(2) * t364;
t439 = t359 * t464;
t161 = t355 * (qJD(1) * (t360 * t462 + t439) + t359 * t451) + t359 * t379 - t363 * t393;
t149 = qJDD(5) + t161;
t395 = qJD(2) * t418;
t415 = pkin(1) * t424;
t448 = pkin(8) * t332 + t360 * t415 + t364 * t395;
t373 = -pkin(8) * t417 + t448;
t183 = pkin(9) * t393 + t373;
t387 = t409 * qJD(2);
t189 = (qJD(1) * t387 + qJDD(1) * t396) * t355;
t384 = t363 * t183 + t359 * t189 - t240 * t463 + t248 * t462;
t59 = qJ(4) * t273 + qJD(4) * t553 + t384;
t422 = pkin(8) * t540 + t360 * t395 - t364 * t415;
t184 = -pkin(2) * t393 + t422;
t61 = t161 * pkin(3) - t160 * qJ(4) - t259 * qJD(4) + t184;
t31 = -t354 * t59 + t356 * t61;
t16 = pkin(4) * t161 - pkin(10) * t129 + t31;
t32 = t354 * t61 + t356 * t59;
t25 = -pkin(10) * t128 + t32;
t7 = -qJD(5) * t27 + t362 * t16 - t358 * t25;
t4 = pkin(5) * t149 - pkin(11) * t44 + t7;
t389 = -t358 * t16 - t362 * t25 - t50 * t458 + t460 * t60;
t5 = -pkin(11) * t45 - t389;
t2 = -qJD(6) * t11 - t357 * t5 + t361 * t4;
t535 = t230 * t342 - t288 * t343;
t536 = t55 * t401 - g(1) * t155 + g(2) * t535 - g(3) * (-t287 * t342 - t343 * t486) + t2;
t346 = sin(t351);
t347 = cos(t351);
t533 = t230 * t346 - t288 * t347;
t532 = t230 * t347 + t288 * t346;
t368 = qJD(6) * t401 - t357 * t44 - t361 * t45;
t531 = t368 - t549;
t350 = t355 ^ 2;
t529 = 0.2e1 * t350;
t528 = t547 * t362;
t392 = pkin(3) * t363 + qJ(4) * t359 + pkin(2);
t295 = t356 * t392;
t215 = -pkin(10) * t485 - t295 + (-pkin(9) * t354 - pkin(4)) * t363;
t255 = pkin(9) * t484 - t354 * t392;
t489 = t354 * t359;
t228 = -pkin(10) * t489 + t255;
t479 = t358 * t215 + t362 * t228;
t260 = t359 * t276;
t173 = -pkin(3) * t444 - t277 * t363 + t260;
t472 = -pkin(4) * t242 - t173 + (pkin(4) * t354 + pkin(9)) * t462;
t514 = pkin(10) + qJ(4);
t313 = t514 * t354;
t314 = t514 * t356;
t470 = -t358 * t313 + t362 * t314;
t447 = pkin(1) * t504;
t390 = -pkin(8) * t487 + t364 * t447;
t527 = -t215 * t458 + t228 * t460 - t358 * t547 - t541 * t362;
t526 = (qJDD(2) + 0.2e1 * t424) * t355;
t525 = -pkin(3) * t273 + qJDD(4);
t432 = qJD(6) * t18 + t5;
t524 = t357 * t4 + t361 * t432;
t394 = qJD(4) * t354 + qJD(5) * t314;
t103 = -t157 * t354 + t356 * t185;
t77 = pkin(10) * t257 * t356 + pkin(4) * t259 + t103;
t522 = t313 * t458 + t546 * t362 + (t394 + t77) * t358;
t365 = qJD(1) ^ 2;
t517 = g(1) * t290;
t516 = g(2) * t288;
t269 = -pkin(2) * t504 - t390;
t286 = t359 * t487 - t363 * t504;
t169 = t286 * pkin(3) - t287 * qJ(4) + t269;
t469 = pkin(8) * t486 + t360 * t447;
t270 = pkin(9) * t504 + t469;
t476 = t363 * t270 + t359 * t271;
t170 = -qJ(4) * t486 + t476;
t101 = t356 * t169 - t170 * t354;
t225 = t287 * t356 - t354 * t486;
t72 = pkin(4) * t286 - pkin(10) * t225 + t101;
t102 = t354 * t169 + t356 * t170;
t224 = t287 * t354 + t356 * t486;
t82 = -pkin(10) * t224 + t102;
t513 = t358 * t72 + t362 * t82;
t274 = t301 * t359;
t275 = t300 * t359;
t187 = t361 * t274 - t275 * t357;
t511 = -qJD(6) * t187 - t357 * t480 + t361 * t481;
t188 = -t274 * t357 - t275 * t361;
t510 = qJD(6) * t188 + t357 * t481 + t361 * t480;
t508 = pkin(9) * qJD(3);
t214 = -t300 * t357 + t301 * t361;
t506 = qJD(6) * t214 - t357 * t474 + t361 * t473;
t505 = pkin(5) * t480 + t472;
t503 = qJ(4) * t161;
t502 = t257 * t553;
t500 = t259 * t553;
t385 = t553 * t359;
t495 = t342 * t363;
t494 = t343 * t363;
t493 = t346 * t363;
t492 = t347 * t363;
t491 = t350 * t365;
t278 = t355 * t387;
t280 = t390 * qJD(2);
t383 = -t270 * t463 + t271 * t462 + t359 * t278 + t363 * t280;
t465 = qJD(2) * t360;
t107 = (qJ(4) * t465 - qJD(4) * t364) * t355 + t383;
t226 = qJD(3) * t287 + t355 * t439;
t440 = t355 * t464;
t227 = -qJD(3) * t286 + t363 * t440;
t281 = t469 * qJD(2);
t113 = t226 * pkin(3) - t227 * qJ(4) - t287 * qJD(4) + t281;
t52 = t356 * t107 + t354 * t113;
t213 = t361 * t300 + t301 * t357;
t482 = -qJD(6) * t213 - t357 * t473 - t361 * t474;
t477 = -t356 * t450 + t548;
t302 = pkin(4) * t489 + t359 * pkin(9);
t352 = t360 ^ 2;
t468 = -t364 ^ 2 + t352;
t455 = -qJD(4) + t138;
t449 = t364 * t491;
t130 = -pkin(4) * t501 + t158;
t344 = -pkin(4) * t356 - pkin(3);
t441 = t355 * t465;
t438 = pkin(5) * t473 - t130;
t437 = pkin(1) * t529;
t436 = t364 * t454;
t430 = -t358 * t82 + t362 * t72;
t51 = -t107 * t354 + t356 * t113;
t427 = t362 * t215 - t228 * t358;
t426 = -t359 * t270 + t271 * t363;
t425 = -t362 * t313 - t314 * t358;
t423 = -t359 * t183 + t363 * t189 - t240 * t462 - t248 * t463;
t114 = -pkin(5) * t363 + pkin(11) * t275 + t427;
t414 = pkin(11) * t480 - qJD(6) * t114 + t527;
t116 = -pkin(11) * t274 + t479;
t413 = t479 * qJD(5) + qJD(6) * t116 - t528 + t541 * t358 + t481 * pkin(11) + (t419 - t463) * pkin(5);
t410 = t355 * t365 * t504;
t229 = t289 * t359 + t363 * t446;
t233 = t291 * t359 - t363 * t445;
t408 = -g(1) * t229 + g(2) * t233;
t407 = g(1) * t291 + g(2) * t289;
t197 = -pkin(11) * t301 + t425;
t406 = pkin(11) * t473 - qJD(6) * t197 + t522;
t198 = -pkin(11) * t300 + t470;
t74 = t362 * t77;
t405 = pkin(5) * t259 - pkin(11) * t474 + t301 * qJD(4) + t470 * qJD(5) + qJD(6) * t198 - t358 * t90 + t74;
t171 = pkin(3) * t486 - t426;
t142 = -t224 * t358 + t225 * t362;
t28 = pkin(5) * t286 - pkin(11) * t142 + t430;
t141 = t362 * t224 + t225 * t358;
t30 = -pkin(11) * t141 + t513;
t403 = t28 * t361 - t30 * t357;
t402 = t28 * t357 + t30 * t361;
t88 = t361 * t141 + t142 * t357;
t89 = -t141 * t357 + t142 * t361;
t397 = 0.2e1 * t429 + qJD(2);
t391 = -t270 * t462 - t271 * t463 + t278 * t363 - t359 * t280;
t194 = t227 * t356 + t354 * t441;
t39 = pkin(4) * t226 - pkin(10) * t194 + t51;
t193 = t227 * t354 - t356 * t441;
t47 = -pkin(10) * t193 + t52;
t388 = t358 * t39 + t362 * t47 + t72 * t458 - t460 * t82;
t381 = g(1) * t233 + g(2) * t229 + g(3) * t286;
t380 = -g(1) * t234 - g(2) * t230 - g(3) * t287;
t127 = pkin(4) * t224 + t171;
t62 = -t423 + t525;
t376 = t381 - t62;
t375 = g(3) * t486 - t516 - t517;
t374 = -g(3) * t487 - t407;
t372 = -t184 - t375;
t371 = -pkin(9) * t273 + t239 * t553;
t43 = pkin(4) * t128 + t62;
t112 = -pkin(3) * t441 - t391;
t369 = -qJD(5) * t513 - t358 * t47 + t362 * t39;
t367 = t381 + t423;
t83 = pkin(4) * t193 + t112;
t266 = pkin(5) * t300 + t344;
t254 = -pkin(9) * t488 - t295;
t218 = pkin(5) * t274 + t302;
t167 = t234 * t347 + t290 * t346;
t166 = -t234 * t346 + t290 * t347;
t146 = qJDD(6) + t149;
t78 = pkin(5) * t141 + t127;
t76 = qJD(5) * t142 + t362 * t193 + t194 * t358;
t75 = -qJD(5) * t141 - t193 * t358 + t194 * t362;
t36 = pkin(5) * t76 + t83;
t24 = qJD(6) * t89 + t357 * t75 + t361 * t76;
t23 = -qJD(6) * t88 - t357 * t76 + t361 * t75;
t17 = pkin(5) * t45 + t43;
t10 = t18 * t361 - t21 * t357;
t9 = -pkin(11) * t76 + t388;
t8 = pkin(5) * t226 - pkin(11) * t75 + t369;
t1 = -t19 + t524;
t3 = [qJDD(1), g(1) * t520 - g(2) * t521, g(1) * t521 + g(2) * t520 (qJDD(1) * t352 + 0.2e1 * t360 * t436) * t350 (t364 * t451 - t454 * t468) * t529, t360 * t526 + t397 * t440, t364 * t526 - t397 * t441, t393 * t504, -t281 * t398 + t390 * t393 - t422 * t504 + g(1) * t289 - g(2) * t291 + (-t360 * t454 + t453) * t437, -t280 * t398 - t469 * t393 - t373 * t504 - g(1) * t288 + g(2) * t290 + (-t436 - t451) * t437, t160 * t287 + t227 * t259, -t160 * t286 - t161 * t287 - t226 * t259 - t227 * t257, t227 * t553 + t273 * t287 + (-t160 * t364 + t259 * t465) * t355, -t226 * t553 - t273 * t286 + (t161 * t364 - t257 * t465) * t355 (-t273 * t364 + t465 * t553) * t355, t391 * t553 + t426 * t273 + t281 * t257 + t269 * t161 + t184 * t286 + t239 * t226 + g(1) * t230 - g(2) * t234 + (t157 * t465 - t364 * t423) * t355, -t383 * t553 - t476 * t273 + t281 * t259 + t269 * t160 + t184 * t287 + t239 * t227 + (-t158 * t465 + t364 * t384) * t355 + t408, t51 * t257 + t101 * t161 + t31 * t286 + t80 * t226 + t112 * t203 + t171 * t128 + t62 * t224 + t138 * t193 - g(1) * (-t230 * t356 - t288 * t354) - g(2) * (t234 * t356 + t290 * t354) -t52 * t257 - t102 * t161 - t32 * t286 - t81 * t226 + t112 * t205 + t171 * t129 + t62 * t225 + t138 * t194 - g(1) * (t230 * t354 - t288 * t356) - g(2) * (-t234 * t354 + t290 * t356) -t101 * t129 - t102 * t128 - t193 * t81 - t194 * t80 - t203 * t52 - t205 * t51 - t224 * t32 - t225 * t31 - t408, t32 * t102 + t81 * t52 + t31 * t101 + t80 * t51 + t62 * t171 + t138 * t112 - g(1) * (-pkin(1) * t520 - t289 * pkin(2) - pkin(3) * t230 + pkin(8) * t446 - t288 * pkin(9) - qJ(4) * t229) - g(2) * (pkin(1) * t521 + t291 * pkin(2) + t234 * pkin(3) + pkin(8) * t445 + t290 * pkin(9) + t233 * qJ(4)) t142 * t44 - t530 * t75, -t122 * t75 - t141 * t44 - t142 * t45 + t530 * t76, t142 * t149 - t226 * t530 + t249 * t75 + t286 * t44, -t122 * t226 - t141 * t149 - t249 * t76 - t286 * t45, t149 * t286 + t226 * t249, g(1) * t532 - g(2) * t167 + t106 * t76 + t83 * t122 + t127 * t45 + t43 * t141 + t430 * t149 + t26 * t226 + t369 * t249 + t7 * t286, -g(1) * t533 - g(2) * t166 + t106 * t75 + t127 * t44 + t43 * t142 - t513 * t149 - t27 * t226 - t388 * t249 + t389 * t286 - t530 * t83, t12 * t89 - t23 * t401, -t12 * t88 - t23 * t64 + t24 * t401 + t368 * t89, t12 * t286 + t146 * t89 - t226 * t401 + t23 * t244, -t146 * t88 - t226 * t64 - t24 * t244 + t286 * t368, t146 * t286 + t226 * t244 (-qJD(6) * t402 - t357 * t9 + t361 * t8) * t244 + t403 * t146 + t2 * t286 + t10 * t226 + t36 * t64 - t78 * t368 + t17 * t88 + t55 * t24 + g(1) * t534 - g(2) * t156 -(qJD(6) * t403 + t357 * t8 + t361 * t9) * t244 - t402 * t146 - t1 * t286 - t11 * t226 - t36 * t401 + t78 * t12 + t17 * t89 + t55 * t23 - g(1) * t535 - g(2) * t155; 0, 0, 0, -t360 * t449, t468 * t491, -t364 * t410 + t434, t360 * t410 + t332, t393, pkin(1) * t360 * t491 + t279 * t398 - t375 - t422, pkin(1) * t449 + t276 * t398 + (pkin(8) * t454 + g(3)) * t487 + t407 - t448, t160 * t359 + t363 * t500 (t160 - t502) * t363 + (-t161 - t500) * t359, t553 * t462 + t273 * t359 + (-t259 * t360 - t483 * t553) * t467, -t553 * t463 + t273 * t363 + (t257 * t360 + t364 * t385) * t467, -t553 * t444, -t157 * t444 - pkin(2) * t161 - t279 * t257 + t260 * t553 + t371 * t359 + (-(t277 + t508) * t553 + t372) * t363, -pkin(2) * t160 + t475 * t553 + t158 * t444 - t279 * t259 + t371 * t363 + (t508 * t553 - t372) * t359, -t138 * t242 + t254 * t161 - t173 * t203 + t478 * t257 + t374 * t354 + (-t31 + (pkin(9) * t203 + t138 * t354) * qJD(3) - t375 * t356) * t363 + (pkin(9) * t128 + t62 * t354 + t553 * t80) * t359, -t138 * t243 - t255 * t161 - t173 * t205 - t477 * t257 + t374 * t356 + (t32 + (pkin(9) * t205 + t138 * t356) * qJD(3) + t375 * t354) * t363 + (pkin(9) * t129 + t62 * t356 - t553 * t81) * t359, -t128 * t255 - t129 * t254 + t242 * t81 + t243 * t80 - t478 * t205 - t477 * t203 + (-t354 * t81 - t356 * t80) * t462 + (-t31 * t356 - t32 * t354 - t375) * t359, -t138 * t173 + t31 * t254 + t32 * t255 + t477 * t81 + t478 * t80 + t392 * t517 + t392 * t516 + (t138 * t462 + t359 * t62 - t407) * pkin(9) - g(3) * (t364 * t392 + t518) * t355, -t275 * t44 - t481 * t530, -t122 * t481 - t274 * t44 + t275 * t45 + t480 * t530, -t149 * t275 + t249 * t481 - t363 * t44 - t385 * t530, -t122 * t385 - t149 * t274 - t249 * t480 + t363 * t45, -t149 * t363 + t249 * t385, t427 * t149 - t7 * t363 + t26 * t463 + t302 * t45 + t43 * t274 - g(1) * (-t290 * t492 + t291 * t346) - g(2) * (-t288 * t492 + t289 * t346) + (-t228 * t458 + (-qJD(5) * t215 - t541) * t358 + t528) * t249 + t472 * t122 + t480 * t106 + (-t26 * t442 - g(3) * (t346 * t360 + t347 * t483)) * t355, -t479 * t149 - t389 * t363 - t27 * t463 + t302 * t44 - t43 * t275 - g(1) * (t290 * t493 + t291 * t347) - g(2) * (t288 * t493 + t289 * t347) + t527 * t249 - t472 * t530 + t481 * t106 + (t27 * t442 - g(3) * (-t346 * t483 + t347 * t360)) * t355, t12 * t188 - t401 * t511, -t12 * t187 + t188 * t368 + t401 * t510 - t511 * t64, -t12 * t363 + t146 * t188 + t244 * t511 - t385 * t401, -t146 * t187 - t244 * t510 - t363 * t368 - t385 * t64, -t146 * t363 + t244 * t385 (t114 * t361 - t116 * t357) * t146 - t2 * t363 + t10 * t463 - t218 * t368 + t17 * t187 - g(1) * (-t290 * t494 + t291 * t342) - g(2) * (-t288 * t494 + t289 * t342) + t505 * t64 + t510 * t55 + (t357 * t414 - t361 * t413) * t244 + (-t10 * t442 - g(3) * (t342 * t360 + t343 * t483)) * t355 -(t114 * t357 + t116 * t361) * t146 + t1 * t363 - t11 * t463 + t218 * t12 + t17 * t188 - g(1) * (t290 * t495 + t291 * t343) - g(2) * (t288 * t495 + t289 * t343) - t505 * t401 + t511 * t55 + (t357 * t413 + t361 * t414) * t244 + (t11 * t442 - g(3) * (-t342 * t483 + t343 * t360)) * t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259 * t257, -t257 ^ 2 + t259 ^ 2, t160 + t502, -t161 + t500, t273, t158 * t553 - t239 * t259 + t367, t157 * t553 + t239 * t257 - t380 - t384, -t354 * t503 - pkin(3) * t128 - t158 * t203 - t259 * t80 + (t354 * t455 - t103) * t257 + t376 * t356, -t356 * t503 - pkin(3) * t129 - t158 * t205 + t259 * t81 + (t356 * t455 + t104) * t257 - t376 * t354, t103 * t205 + t104 * t203 + (-qJ(4) * t128 - qJD(4) * t203 - t257 * t80 + t32) * t356 + (qJ(4) * t129 + qJD(4) * t205 - t257 * t81 - t31) * t354 + t380, -t80 * t103 - t81 * t104 - t138 * t158 + (-t354 * t80 + t356 * t81) * qJD(4) + t376 * pkin(3) + (-t31 * t354 + t32 * t356 + t380) * qJ(4), t301 * t44 + t474 * t530, t122 * t474 - t300 * t44 - t301 * t45 + t473 * t530, t149 * t301 - t249 * t474 + t259 * t530, t122 * t259 - t149 * t300 - t249 * t473, -t249 * t259, t425 * t149 + t344 * t45 + t43 * t300 - t26 * t259 - t130 * t122 + (-t74 - t394 * t362 + (qJD(5) * t313 + t546) * t358) * t249 + t473 * t106 + t381 * t347, -t474 * t106 + t130 * t530 - t470 * t149 + t249 * t522 + t27 * t259 + t43 * t301 + t344 * t44 - t381 * t346, t12 * t214 - t401 * t482, -t12 * t213 + t214 * t368 + t401 * t506 - t482 * t64, t146 * t214 + t244 * t482 + t259 * t401, -t146 * t213 - t244 * t506 + t259 * t64, -t244 * t259 (t197 * t361 - t198 * t357) * t146 - t266 * t368 + t17 * t213 - t10 * t259 + t438 * t64 + t506 * t55 + (t357 * t406 - t361 * t405) * t244 + t381 * t343 -(t197 * t357 + t198 * t361) * t146 + t266 * t12 + t17 * t214 + t11 * t259 - t438 * t401 + t482 * t55 + (t357 * t405 + t361 * t406) * t244 - t381 * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205 * t257 + t128, -t203 * t257 + t129, -t203 ^ 2 - t205 ^ 2, t203 * t81 + t205 * t80 - t367 + t525, 0, 0, 0, 0, 0, t45 - t545, t44 - t550, 0, 0, 0, 0, 0, -t368 - t549, t12 - t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530 * t122, -t122 ^ 2 + t530 ^ 2, t44 + t550, -t45 - t545, t149, t27 * t249 + t106 * t530 - g(1) * t166 + g(2) * t533 - g(3) * (-t287 * t346 - t347 * t486) + t7, t26 * t249 + t106 * t122 + g(1) * t167 + g(2) * t532 - g(3) * (-t287 * t347 + t346 * t486) + t389, -t542, t539, t538, t531, t146 -(-t20 * t357 - t507) * t244 + (t146 * t361 - t244 * t457 + t530 * t64) * pkin(5) + t536 (-t21 * t244 - t4) * t357 + (t20 * t244 - t432) * t361 + (-t146 * t357 - t244 * t456 - t401 * t530) * pkin(5) + t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, t539, t538, t531, t146, t11 * t244 + t536, t10 * t244 - t524 + t537;];
tau_reg  = t3;
