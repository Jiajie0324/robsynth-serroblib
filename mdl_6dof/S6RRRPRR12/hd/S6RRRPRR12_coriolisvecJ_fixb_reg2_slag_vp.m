% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:50
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR12_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR12_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR12_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR12_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:46:30
% EndTime: 2019-03-09 19:47:15
% DurationCPUTime: 20.96s
% Computational Cost: add. (36562->783), mult. (93580->1086), div. (0->0), fcn. (75740->12), ass. (0->303)
t376 = sin(qJ(2));
t479 = cos(pkin(6));
t424 = pkin(1) * t479;
t361 = t376 * t424;
t375 = sin(qJ(3));
t378 = cos(qJ(3));
t397 = pkin(3) * t375 - qJ(4) * t378;
t371 = sin(pkin(6));
t379 = cos(qJ(2));
t458 = t371 * t379;
t522 = (t361 + (pkin(8) + t397) * t458) * qJD(1) - qJD(3) * t397 + t375 * qJD(4);
t409 = t479 * qJD(1);
t393 = t409 + qJD(2);
t438 = qJD(1) * t371;
t422 = t376 * t438;
t292 = t375 * t393 + t378 * t422;
t437 = qJD(1) * t379;
t421 = t371 * t437;
t350 = -qJD(3) + t421;
t370 = sin(pkin(12));
t372 = cos(pkin(12));
t237 = t292 * t370 + t372 * t350;
t239 = t292 * t372 - t350 * t370;
t374 = sin(qJ(5));
t377 = cos(qJ(5));
t154 = t237 * t377 + t374 * t239;
t156 = t237 * t374 - t239 * t377;
t373 = sin(qJ(6));
t491 = cos(qJ(6));
t80 = t491 * t154 - t373 * t156;
t521 = t80 ^ 2;
t82 = t373 * t154 + t156 * t491;
t520 = t82 ^ 2;
t290 = t375 * t422 - t378 * t393;
t283 = qJD(5) + t290;
t273 = qJD(6) + t283;
t519 = t273 * t80;
t518 = t82 * t273;
t406 = t379 * t424;
t314 = -pkin(8) * t422 + qJD(1) * t406;
t390 = t371 * (pkin(2) * t376 - pkin(9) * t379);
t315 = qJD(1) * t390;
t229 = t378 * t314 + t375 * t315;
t201 = qJ(4) * t422 + t229;
t433 = qJD(3) * t375;
t426 = pkin(9) * t433;
t447 = t522 * t372 + (-t201 - t426) * t370;
t517 = t372 * t201 + t370 * t522;
t460 = t370 * t378;
t271 = -t372 * t422 + t421 * t460;
t432 = qJD(3) * t378;
t399 = t370 * t432 - t271;
t453 = t378 * t379;
t272 = (t370 * t376 + t372 * t453) * t438;
t516 = -t372 * t432 + t272;
t404 = t375 * t421;
t455 = t372 * t378;
t515 = pkin(4) * t404 - pkin(10) * t272 - (pkin(4) * t375 - pkin(10) * t455) * qJD(3) + t447;
t456 = t372 * t375;
t514 = -pkin(10) * t271 - (-pkin(9) * t456 - pkin(10) * t460) * qJD(3) + t517;
t513 = t154 ^ 2;
t512 = t156 ^ 2;
t511 = t154 * t283;
t510 = t156 * t283;
t337 = t370 * t377 + t372 * t374;
t323 = t337 * qJD(5);
t445 = t323 * t375 + t399 * t374 + t516 * t377;
t430 = qJD(5) * t377;
t431 = qJD(5) * t374;
t495 = -t370 * t431 + t372 * t430;
t444 = -t377 * t271 - t272 * t374 + t337 * t432 + t375 * t495;
t442 = t337 * t290 + t323;
t454 = t377 * t372;
t336 = t370 * t374 - t454;
t443 = t336 * t290 - t495;
t345 = -pkin(3) * t378 - qJ(4) * t375 - pkin(2);
t331 = t372 * t345;
t250 = -pkin(10) * t456 + t331 + (-pkin(9) * t370 - pkin(4)) * t378;
t288 = pkin(9) * t455 + t370 * t345;
t461 = t370 * t375;
t262 = -pkin(10) * t461 + t288;
t484 = -t250 * t430 + t262 * t431 + t374 * t515 + t514 * t377;
t172 = t374 * t250 + t377 * t262;
t482 = -qJD(5) * t172 + t514 * t374 - t377 * t515;
t440 = pkin(8) * t458 + t361;
t306 = t479 * pkin(9) + t440;
t269 = qJD(2) * pkin(9) + qJD(1) * t306;
t307 = (-pkin(2) * t379 - pkin(9) * t376 - pkin(1)) * t371;
t281 = qJD(1) * t307;
t184 = -t375 * t269 + t281 * t378;
t210 = pkin(3) * t292 + qJ(4) * t290;
t133 = t372 * t184 + t370 * t210;
t467 = t290 * t370;
t113 = pkin(10) * t467 + t133;
t489 = pkin(10) + qJ(4);
t348 = t489 * t370;
t349 = t489 * t372;
t132 = -t184 * t370 + t372 * t210;
t466 = t290 * t372;
t98 = pkin(4) * t292 + pkin(10) * t466 + t132;
t481 = qJD(4) * t454 - t377 * t113 - t348 * t430 + (-qJD(4) * t370 - qJD(5) * t349 - t98) * t374;
t267 = -t374 * t348 + t377 * t349;
t480 = -t337 * qJD(4) - qJD(5) * t267 + t113 * t374 - t377 * t98;
t509 = qJD(3) * t290;
t508 = -t482 - t445 * pkin(11) + (t404 - t433) * pkin(5);
t507 = t444 * pkin(11) + t484;
t490 = t80 * t82;
t506 = -t442 * pkin(11) + t481;
t505 = pkin(5) * t292 - pkin(11) * t443 - t480;
t185 = t269 * t378 + t281 * t375;
t316 = qJD(2) * t390;
t300 = qJD(1) * t316;
t459 = t371 * t376;
t326 = -pkin(8) * t459 + t406;
t318 = t326 * qJD(2);
t301 = qJD(1) * t318;
t407 = t269 * t432 + t281 * t433 - t378 * t300 + t375 * t301;
t504 = t185 * t350 + t407;
t386 = t269 * t433 - t281 * t432 - t375 * t300 - t378 * t301;
t503 = t184 * t350 - t386;
t502 = t520 - t521;
t427 = qJD(1) * qJD(2);
t412 = t371 * t427;
t402 = t379 * t412;
t245 = -t378 * t402 + t509;
t403 = t376 * t412;
t199 = -t245 * t370 - t372 * t403;
t200 = -t245 * t372 + t370 * t403;
t391 = t199 * t377 + t374 * t200 - t237 * t431 + t239 * t430;
t414 = qJD(6) * t491;
t429 = qJD(6) * t373;
t74 = t374 * t199 - t377 * t200 + t237 * t430 + t239 * t431;
t26 = t154 * t414 - t156 * t429 + t373 * t391 + t491 * t74;
t501 = -t26 + t519;
t268 = -pkin(2) * t393 - t314;
t166 = t290 * pkin(3) - t292 * qJ(4) + t268;
t173 = -qJ(4) * t350 + t185;
t103 = t372 * t166 - t173 * t370;
t66 = pkin(4) * t290 - pkin(10) * t239 + t103;
t104 = t370 * t166 + t372 * t173;
t76 = -pkin(10) * t237 + t104;
t34 = -t374 * t76 + t377 * t66;
t30 = pkin(11) * t156 + t34;
t28 = pkin(5) * t283 + t30;
t35 = t374 * t66 + t377 * t76;
t31 = -pkin(11) * t154 + t35;
t434 = qJD(3) * t292;
t246 = t375 * t402 + t434;
t119 = qJ(4) * t403 - qJD(4) * t350 - t386;
t319 = t440 * qJD(2);
t302 = qJD(1) * t319;
t128 = t246 * pkin(3) + t245 * qJ(4) - t292 * qJD(4) + t302;
t60 = -t119 * t370 + t372 * t128;
t43 = pkin(4) * t246 - pkin(10) * t200 + t60;
t61 = t372 * t119 + t370 * t128;
t49 = -pkin(10) * t199 + t61;
t9 = -qJD(5) * t35 - t374 * t49 + t377 * t43;
t6 = t246 * pkin(5) + t74 * pkin(11) + t9;
t8 = t374 * t43 + t377 * t49 + t66 * t430 - t431 * t76;
t7 = -pkin(11) * t391 + t8;
t382 = -t28 * t414 + t31 * t429 - t373 * t6 - t491 * t7;
t169 = pkin(3) * t350 + qJD(4) - t184;
t135 = pkin(4) * t237 + t169;
t75 = pkin(5) * t154 + t135;
t500 = t75 * t80 + t382;
t367 = t371 ^ 2;
t413 = t367 * t427;
t498 = -0.2e1 * t413;
t305 = -pkin(2) * t479 - t326;
t324 = t375 * t459 - t378 * t479;
t325 = t375 * t479 + t378 * t459;
t195 = t324 * pkin(3) - t325 * qJ(4) + t305;
t212 = t378 * t306 + t375 * t307;
t196 = -qJ(4) * t458 + t212;
t131 = t370 * t195 + t372 * t196;
t258 = t325 * t370 + t372 * t458;
t105 = -pkin(10) * t258 + t131;
t130 = t372 * t195 - t196 * t370;
t259 = t325 * t372 - t370 * t458;
t93 = pkin(4) * t324 - pkin(10) * t259 + t130;
t47 = t377 * t105 + t374 * t93;
t497 = t376 * t379;
t198 = t246 * t324;
t419 = qJD(2) * t458;
t260 = qJD(3) * t325 + t375 * t419;
t496 = t260 * t290 + t198;
t228 = -t375 * t314 + t315 * t378;
t202 = -pkin(3) * t422 - t228;
t441 = t399 * pkin(4) + pkin(9) * t432 - t202;
t425 = t491 * t31;
t13 = t373 * t28 + t425;
t2 = -qJD(6) * t13 - t373 * t7 + t491 * t6;
t494 = t75 * t82 + t2;
t27 = -qJD(6) * t82 - t373 * t74 + t491 * t391;
t493 = -t27 - t518;
t492 = t290 ^ 2;
t380 = qJD(1) ^ 2;
t266 = -t377 * t348 - t349 * t374;
t231 = -pkin(11) * t337 + t266;
t232 = -pkin(11) * t336 + t267;
t147 = t373 * t231 + t232 * t491;
t488 = qJD(6) * t147 + t506 * t373 + t505 * t491;
t146 = t231 * t491 - t373 * t232;
t487 = -qJD(6) * t146 + t505 * t373 - t506 * t491;
t171 = t377 * t250 - t262 * t374;
t312 = t336 * t375;
t145 = -pkin(5) * t378 + pkin(11) * t312 + t171;
t311 = t337 * t375;
t151 = -pkin(11) * t311 + t172;
t78 = t373 * t145 + t151 * t491;
t486 = qJD(6) * t78 - t507 * t373 + t508 * t491;
t77 = t145 * t491 - t373 * t151;
t485 = -qJD(6) * t77 + t508 * t373 + t507 * t491;
t483 = t373 * t31;
t129 = -pkin(3) * t403 + t407;
t478 = t129 * t370;
t477 = t129 * t372;
t476 = t156 * t154;
t473 = t199 * t372;
t472 = t200 * t370;
t471 = t246 * t378;
t469 = t290 * t292;
t468 = t290 * t350;
t465 = t292 * t350;
t387 = t350 * t375;
t464 = t350 * t378;
t463 = t367 * t380;
t462 = t370 * t246;
t457 = t372 * t246;
t452 = t311 * t414 - t312 * t429 + t444 * t373 + t445 * t491;
t219 = -t373 * t311 - t312 * t491;
t451 = qJD(6) * t219 - t373 * t445 + t444 * t491;
t450 = pkin(5) * t444 + t441;
t249 = -t373 * t336 + t337 * t491;
t449 = -qJD(6) * t249 + t373 * t443 - t442 * t491;
t448 = t336 * t414 + t337 * t429 + t373 * t442 + t443 * t491;
t148 = -t306 * t433 + t307 * t432 + t375 * t316 + t378 * t318;
t436 = qJD(2) * t376;
t138 = (qJ(4) * t436 - qJD(4) * t379) * t371 + t148;
t261 = -qJD(3) * t324 + t378 * t419;
t144 = t260 * pkin(3) - t261 * qJ(4) - t325 * qJD(4) + t319;
t68 = t372 * t138 + t370 * t144;
t446 = t372 * t426 + t517;
t338 = pkin(4) * t461 + t375 * pkin(9);
t439 = t376 ^ 2 - t379 ^ 2;
t435 = qJD(2) * t378;
t428 = -qJD(4) + t169;
t364 = -pkin(4) * t372 - pkin(3);
t420 = t371 * t436;
t160 = -pkin(4) * t467 + t185;
t411 = pkin(5) * t442 - t160;
t46 = -t105 * t374 + t377 * t93;
t67 = -t138 * t370 + t372 * t144;
t211 = -t375 * t306 + t307 * t378;
t408 = t463 * t497;
t401 = t371 * t380 * t479;
t400 = pkin(1) * t498;
t197 = pkin(3) * t458 - t211;
t396 = -t237 * t372 - t239 * t370;
t175 = -t258 * t374 + t259 * t377;
t395 = t413 * t497;
t392 = 0.2e1 * t409 + qJD(2);
t149 = -t306 * t432 - t307 * t433 + t316 * t378 - t375 * t318;
t36 = pkin(5) * t324 - pkin(11) * t175 + t46;
t174 = t377 * t258 + t259 * t374;
t38 = -pkin(11) * t174 + t47;
t18 = t36 * t491 - t373 * t38;
t19 = t373 * t36 + t38 * t491;
t112 = -t373 * t174 + t175 * t491;
t224 = t261 * t372 + t370 * t420;
t55 = pkin(4) * t260 - pkin(10) * t224 + t67;
t223 = t261 * t370 - t372 * t420;
t59 = -pkin(10) * t223 + t68;
t16 = -t105 * t431 + t374 * t55 + t377 * t59 + t93 * t430;
t159 = pkin(4) * t258 + t197;
t384 = pkin(1) * (-qJD(2) * t409 + t463);
t143 = -pkin(3) * t420 - t149;
t383 = -t290 * t387 - t471;
t17 = -qJD(5) * t47 - t374 * t59 + t377 * t55;
t86 = t199 * pkin(4) + t129;
t106 = pkin(4) * t223 + t143;
t39 = pkin(5) * t391 + t86;
t317 = t440 * qJD(1);
t299 = pkin(5) * t336 + t364;
t287 = -pkin(9) * t460 + t331;
t253 = pkin(5) * t311 + t338;
t248 = t336 * t491 + t337 * t373;
t218 = t311 * t491 - t312 * t373;
t111 = t174 * t491 + t175 * t373;
t101 = pkin(5) * t174 + t159;
t97 = qJD(5) * t175 + t377 * t223 + t374 * t224;
t96 = t374 * t223 - t377 * t224 + t258 * t430 + t259 * t431;
t50 = pkin(5) * t97 + t106;
t33 = qJD(6) * t112 - t373 * t96 + t491 * t97;
t32 = t174 * t414 + t175 * t429 + t373 * t97 + t491 * t96;
t15 = t30 * t491 - t483;
t14 = -t373 * t30 - t425;
t12 = t28 * t491 - t483;
t11 = -pkin(11) * t97 + t16;
t10 = t260 * pkin(5) + t96 * pkin(11) + t17;
t4 = -qJD(6) * t19 + t10 * t491 - t373 * t11;
t3 = qJD(6) * t18 + t373 * t10 + t11 * t491;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t395, t439 * t498, t392 * t419, -0.2e1 * t395, -t392 * t420, 0, -t302 * t479 - t319 * t393 + t376 * t400, -t301 * t479 - t318 * t393 + t379 * t400 (t301 * t379 + t302 * t376 + (-t314 * t379 - t317 * t376) * qJD(2) + (t318 * t379 + t319 * t376 + (-t326 * t379 - t376 * t440) * qJD(2)) * qJD(1)) * t371, t301 * t440 - t302 * t326 - t314 * t319 + t317 * t318, -t245 * t325 + t261 * t292, t245 * t324 - t246 * t325 - t260 * t292 - t261 * t290, -t261 * t350 + (t245 * t379 + (qJD(1) * t325 + t292) * t436) * t371, t496, t260 * t350 + (t246 * t379 + (-qJD(1) * t324 - t290) * t436) * t371 (-t350 * t371 - t367 * t437) * t436, -t149 * t350 + t246 * t305 + t260 * t268 + t290 * t319 + t302 * t324 + (t407 * t379 + (qJD(1) * t211 + t184) * t436) * t371, t148 * t350 - t245 * t305 + t261 * t268 + t292 * t319 + t302 * t325 + (-t386 * t379 + (-qJD(1) * t212 - t185) * t436) * t371, -t148 * t290 - t149 * t292 - t184 * t261 - t185 * t260 + t211 * t245 - t212 * t246 + t324 * t386 + t325 * t407, t148 * t185 + t149 * t184 - t211 * t407 - t212 * t386 + t268 * t319 + t302 * t305, t200 * t259 + t224 * t239, -t199 * t259 - t200 * t258 - t223 * t239 - t224 * t237, t200 * t324 + t224 * t290 + t239 * t260 + t246 * t259, t199 * t258 + t223 * t237, -t199 * t324 - t223 * t290 - t237 * t260 - t246 * t258, t496, t103 * t260 + t129 * t258 + t130 * t246 + t143 * t237 + t169 * t223 + t197 * t199 + t290 * t67 + t324 * t60, -t104 * t260 + t129 * t259 - t131 * t246 + t143 * t239 + t169 * t224 + t197 * t200 - t290 * t68 - t324 * t61, -t103 * t224 - t104 * t223 - t130 * t200 - t131 * t199 - t237 * t68 - t239 * t67 - t258 * t61 - t259 * t60, t103 * t67 + t104 * t68 + t129 * t197 + t130 * t60 + t131 * t61 + t143 * t169, t156 * t96 - t175 * t74, t96 * t154 + t156 * t97 + t74 * t174 - t175 * t391, -t156 * t260 + t175 * t246 - t283 * t96 - t324 * t74, t154 * t97 + t174 * t391, -t154 * t260 - t174 * t246 - t97 * t283 - t324 * t391, t260 * t283 + t198, t106 * t154 + t135 * t97 + t159 * t391 + t17 * t283 + t86 * t174 + t46 * t246 + t34 * t260 + t9 * t324, -t106 * t156 - t135 * t96 - t159 * t74 - t16 * t283 + t175 * t86 - t246 * t47 - t260 * t35 - t324 * t8, -t16 * t154 + t156 * t17 - t8 * t174 - t9 * t175 + t34 * t96 - t35 * t97 - t391 * t47 + t46 * t74, t106 * t135 + t159 * t86 + t16 * t35 + t17 * t34 + t46 * t9 + t47 * t8, -t112 * t26 + t32 * t82, t111 * t26 - t112 * t27 + t32 * t80 + t33 * t82, t112 * t246 - t26 * t324 - t260 * t82 - t273 * t32, t111 * t27 + t33 * t80, -t111 * t246 - t260 * t80 - t27 * t324 - t273 * t33, t260 * t273 + t198, t101 * t27 + t111 * t39 + t12 * t260 + t18 * t246 + t2 * t324 + t273 * t4 + t33 * t75 + t50 * t80, -t101 * t26 + t112 * t39 - t13 * t260 - t19 * t246 - t273 * t3 - t32 * t75 + t324 * t382 - t50 * t82, t111 * t382 - t112 * t2 + t12 * t32 - t13 * t33 + t18 * t26 - t19 * t27 - t3 * t80 + t4 * t82, t101 * t39 + t12 * t4 + t13 * t3 + t18 * t2 - t19 * t382 + t50 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408, t439 * t463, -t379 * t401, t408, t376 * t401, 0, -pkin(8) * t402 + t317 * t393 + t376 * t384, pkin(8) * t403 + t314 * t393 + t379 * t384, 0, 0, -t245 * t375 - t292 * t464 (-t245 + t468) * t378 + (-t246 + t465) * t375, -t350 * t432 + (t350 * t453 + (qJD(2) * t375 - t292) * t376) * t438, t383, t350 * t433 + (-t379 * t387 + (t290 + t435) * t376) * t438, t350 * t422, -pkin(2) * t246 + t228 * t350 - t290 * t317 - t302 * t378 + (pkin(9) * t464 + t268 * t375) * qJD(3) + (-t184 * t376 + (-pkin(9) * t436 - t268 * t379) * t375) * t438, pkin(2) * t245 - t229 * t350 - t292 * t317 + t302 * t375 + (-pkin(9) * t387 + t268 * t378) * qJD(3) + (-t268 * t453 + (-pkin(9) * t435 + t185) * t376) * t438, t228 * t292 + t229 * t290 + ((-t246 + t434) * pkin(9) + t503) * t378 + ((-t245 + t509) * pkin(9) + t504) * t375, -pkin(2) * t302 - t184 * t228 - t185 * t229 - t268 * t317 + (-t386 * t378 + t407 * t375 + (-t184 * t378 - t185 * t375) * qJD(3)) * pkin(9), t200 * t456 - t239 * t516, t272 * t237 + t239 * t271 + (-t472 - t473) * t375 + t396 * t432, -t200 * t378 - t516 * t290 + (-t239 * t350 + t457) * t375, t199 * t461 + t237 * t399, t199 * t378 - t399 * t290 + (t237 * t350 - t462) * t375, t383, -t169 * t271 - t202 * t237 + t246 * t287 - t447 * t290 + (-t60 + (pkin(9) * t237 + t169 * t370) * qJD(3)) * t378 + (pkin(9) * t199 - t103 * t350 + t478) * t375, -t169 * t272 - t202 * t239 - t246 * t288 + t446 * t290 + (t61 + (pkin(9) * t239 + t169 * t372) * qJD(3)) * t378 + (pkin(9) * t200 + t104 * t350 + t477) * t375, t103 * t272 + t104 * t271 - t199 * t288 - t200 * t287 + (-t370 * t61 - t372 * t60) * t375 + t447 * t239 + t446 * t237 + (-t103 * t372 - t104 * t370) * t432, -t169 * t202 + t287 * t60 + t288 * t61 - t446 * t104 - t447 * t103 + (t129 * t375 + t169 * t432) * pkin(9), t156 * t445 + t74 * t312, t154 * t445 + t156 * t444 + t74 * t311 + t312 * t391, t156 * t387 - t246 * t312 - t283 * t445 + t378 * t74, t154 * t444 + t311 * t391, t154 * t387 - t311 * t246 - t283 * t444 + t378 * t391, -t283 * t387 - t471, t135 * t444 + t154 * t441 + t171 * t246 + t283 * t482 + t86 * t311 + t338 * t391 - t34 * t387 - t9 * t378, -t135 * t445 - t156 * t441 - t172 * t246 + t283 * t484 - t312 * t86 - t338 * t74 + t35 * t387 + t378 * t8, t154 * t484 + t156 * t482 + t171 * t74 - t172 * t391 - t8 * t311 + t9 * t312 + t34 * t445 - t35 * t444, t135 * t441 + t171 * t9 + t172 * t8 + t338 * t86 + t34 * t482 - t35 * t484, -t26 * t219 + t452 * t82, t26 * t218 - t219 * t27 + t451 * t82 + t452 * t80, t219 * t246 + t26 * t378 - t273 * t452 + t387 * t82, t27 * t218 + t451 * t80, -t218 * t246 + t27 * t378 - t273 * t451 + t387 * t80, -t273 * t387 - t471, -t12 * t387 - t2 * t378 + t218 * t39 + t246 * t77 + t253 * t27 - t273 * t486 + t450 * t80 + t451 * t75, t13 * t387 + t219 * t39 - t246 * t78 - t253 * t26 + t273 * t485 - t378 * t382 - t450 * t82 - t452 * t75, t12 * t452 - t13 * t451 - t2 * t219 + t218 * t382 + t26 * t77 - t27 * t78 + t485 * t80 - t486 * t82, -t12 * t486 - t13 * t485 + t2 * t77 + t253 * t39 - t382 * t78 + t450 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t292 ^ 2 - t492, -t245 - t468, -t469, -t465 - t246, t403, -t268 * t292 - t504, t268 * t290 - t503, 0, 0, t239 * t466 + t472, -t370 * t199 + t200 * t372 + t290 * t396, -t239 * t292 + t372 * t492 + t462, t237 * t467 - t473, t237 * t292 - t370 * t492 + t457, -t469, -qJ(4) * t462 - pkin(3) * t199 - t103 * t292 - t477 - t185 * t237 + (t370 * t428 - t132) * t290, -qJ(4) * t457 - pkin(3) * t200 + t104 * t292 + t478 - t185 * t239 + (t372 * t428 + t133) * t290, t132 * t239 + t133 * t237 + (-qJ(4) * t199 - qJD(4) * t237 - t103 * t290 + t61) * t372 + (qJ(4) * t200 + qJD(4) * t239 - t104 * t290 - t60) * t370, -pkin(3) * t129 - t103 * t132 - t104 * t133 - t169 * t185 + (-t103 * t370 + t104 * t372) * qJD(4) + (-t370 * t60 + t372 * t61) * qJ(4), t156 * t443 - t74 * t337, t154 * t443 + t156 * t442 + t74 * t336 - t337 * t391, t156 * t292 + t337 * t246 - t283 * t443, t154 * t442 + t336 * t391, t154 * t292 - t336 * t246 - t283 * t442, -t283 * t292, t135 * t442 - t160 * t154 + t266 * t246 + t283 * t480 - t34 * t292 + t86 * t336 + t364 * t391, -t135 * t443 + t156 * t160 - t246 * t267 - t283 * t481 + t292 * t35 + t337 * t86 - t364 * t74, -t154 * t481 + t156 * t480 + t266 * t74 - t267 * t391 - t8 * t336 - t9 * t337 + t34 * t443 - t35 * t442, -t135 * t160 + t266 * t9 + t267 * t8 + t34 * t480 + t35 * t481 + t364 * t86, -t26 * t249 + t448 * t82, t26 * t248 - t249 * t27 + t448 * t80 - t449 * t82, t249 * t246 - t273 * t448 + t292 * t82, t27 * t248 - t449 * t80, -t248 * t246 + t273 * t449 + t80 * t292, -t273 * t292, -t12 * t292 + t146 * t246 + t248 * t39 + t27 * t299 - t273 * t488 + t411 * t80 - t449 * t75, t13 * t292 - t147 * t246 + t249 * t39 - t26 * t299 + t273 * t487 - t411 * t82 - t448 * t75, t12 * t448 + t13 * t449 + t146 * t26 - t147 * t27 - t2 * t249 + t248 * t382 + t487 * t80 - t488 * t82, -t12 * t488 - t13 * t487 + t146 * t2 - t147 * t382 + t299 * t39 + t411 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239 * t290 + t199, -t237 * t290 + t200, -t237 ^ 2 - t239 ^ 2, t103 * t239 + t104 * t237 + t129, 0, 0, 0, 0, 0, 0, t391 - t510, -t74 - t511, -t512 - t513, t154 * t35 - t156 * t34 + t86, 0, 0, 0, 0, 0, 0, t27 - t518, -t26 - t519, -t520 - t521, -t12 * t82 + t13 * t80 + t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, t512 - t513, -t74 + t511, t476, -t391 - t510, t246, t135 * t156 + t35 * t283 + t9, t135 * t154 + t283 * t34 - t8, 0, 0, -t490, t502, t501, t490, t493, t246, -t14 * t273 + (t156 * t80 + t246 * t491 - t273 * t429) * pkin(5) + t494, t15 * t273 + (-t156 * t82 - t246 * t373 - t273 * t414) * pkin(5) + t500, -t12 * t80 - t13 * t82 - t14 * t82 + t15 * t80 + (t491 * t26 - t27 * t373 + (-t373 * t82 - t491 * t80) * qJD(6)) * pkin(5), -t12 * t14 - t13 * t15 + (t491 * t2 - t382 * t373 + t156 * t75 + (-t12 * t373 + t13 * t491) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, t502, t501, t490, t493, t246, t13 * t273 + t494, t12 * t273 + t500, 0, 0;];
tauc_reg  = t1;
