% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:13:34
% EndTime: 2019-03-09 05:13:47
% DurationCPUTime: 5.26s
% Computational Cost: add. (11036->420), mult. (29110->509), div. (0->0), fcn. (22974->8), ass. (0->231)
t155 = sin(qJ(6));
t158 = cos(qJ(6));
t153 = sin(pkin(10));
t157 = sin(qJ(3));
t154 = cos(pkin(10));
t159 = cos(qJ(3));
t244 = t154 * t159;
t198 = t153 * t157 - t244;
t126 = t198 * qJD(1);
t133 = t153 * t159 + t154 * t157;
t127 = t133 * qJD(1);
t156 = sin(qJ(4));
t283 = cos(qJ(4));
t192 = t156 * t126 - t283 * t127;
t302 = qJD(6) - t192;
t324 = t158 * t302;
t101 = -t283 * t126 - t127 * t156;
t151 = qJD(3) + qJD(4);
t88 = -t101 * t155 + t151 * t158;
t312 = t88 * t324;
t86 = t101 * t158 + t151 * t155;
t327 = t302 * t86;
t252 = qJD(6) * t88;
t188 = qJD(3) * t198;
t179 = t156 * t188;
t185 = t133 * qJD(3);
t237 = qJD(1) * t185;
t290 = qJD(1) * t179 + qJD(4) * t192 - t283 * t237;
t41 = t158 * t290 + t252;
t38 = t158 * t41;
t230 = qJD(6) * t158;
t231 = qJD(6) * t155;
t40 = t101 * t230 + t151 * t231 + t155 * t290;
t335 = -t312 + (t40 + t327) * t155 - t38;
t275 = t101 * t86;
t180 = t283 * t198;
t177 = qJD(3) * t180;
t221 = qJD(4) * t283;
t232 = qJD(4) * t156;
t189 = -qJD(1) * t177 - t126 * t221 - t127 * t232 - t156 * t237;
t267 = t155 * t189;
t330 = -t302 * t324 - t267;
t334 = t330 + t275;
t333 = t40 - t327;
t325 = t155 * t302;
t60 = t158 * t189;
t193 = -t302 * t325 + t60;
t257 = t88 * t101;
t332 = t193 - t257;
t39 = t158 * t40;
t331 = -t325 * t88 - t39;
t285 = pkin(5) * t101;
t276 = pkin(7) + qJ(2);
t137 = t276 * t153;
t134 = qJD(1) * t137;
t138 = t276 * t154;
t135 = qJD(1) * t138;
t107 = -t157 * t134 + t159 * t135;
t85 = -pkin(8) * t126 + t107;
t82 = t283 * t85;
t247 = t135 * t157;
t106 = -t159 * t134 - t247;
t84 = -pkin(8) * t127 + t106;
t83 = qJD(3) * pkin(3) + t84;
t51 = t156 * t83 + t82;
t49 = -t151 * qJ(5) - t51;
t32 = -t49 + t285;
t328 = t302 * t32;
t227 = qJD(1) * qJD(2);
t219 = t153 * t227;
t143 = qJD(2) * t244;
t233 = qJD(3) * t159;
t239 = qJD(1) * t143 - t134 * t233;
t80 = (-qJD(3) * t135 - t219) * t157 + t239;
t70 = -t237 * pkin(8) + t80;
t186 = t133 * qJD(2);
t187 = t107 * qJD(3);
t71 = -t187 + (pkin(8) * t188 - t186) * qJD(1);
t23 = t156 * t70 + t85 * t221 + t83 * t232 - t283 * t71;
t146 = -t154 * pkin(2) - pkin(1);
t136 = t146 * qJD(1) + qJD(2);
t108 = t126 * pkin(3) + t136;
t169 = qJ(5) * t192 + t108;
t52 = -pkin(4) * t101 + t169;
t273 = t192 * t52;
t326 = t23 - t273;
t251 = t101 * t151;
t323 = t189 - t251;
t110 = -t157 * t137 + t159 * t138;
t322 = t198 * pkin(8) - t110;
t307 = t151 * t192;
t321 = t290 - t307;
t274 = t101 ^ 2;
t316 = t192 ^ 2;
t320 = t316 - t274;
t264 = t156 * t85;
t50 = -t283 * t83 + t264;
t241 = qJD(5) + t50;
t314 = pkin(5) * t192;
t242 = t241 - t314;
t286 = pkin(4) + pkin(9);
t30 = -t286 * t151 + t242;
t35 = -t101 * t286 + t169;
t13 = t155 * t30 + t158 * t35;
t220 = t237 * pkin(3);
t26 = -pkin(4) * t290 - qJ(5) * t189 + qJD(5) * t192 + t220;
t11 = -pkin(9) * t290 + t26;
t9 = pkin(5) * t189 + t23;
t2 = -qJD(6) * t13 - t155 * t11 + t158 * t9;
t319 = t13 * t302 + t2;
t200 = t155 * t35 - t158 * t30;
t1 = -qJD(6) * t200 + t158 * t11 + t155 * t9;
t318 = t200 * t302 + t1;
t317 = t302 * t88 - t41;
t315 = pkin(4) * t192;
t313 = t192 * t32;
t311 = t302 * t101;
t162 = t322 * qJD(3) - t186;
t235 = qJD(2) * t153;
t238 = -t137 * t233 + t143;
t243 = t157 * t138;
t281 = pkin(8) * t133;
t165 = (-t243 - t281) * qJD(3) - t157 * t235 + t238;
t310 = t156 * t165 - t283 * t162;
t256 = t101 * qJ(5);
t309 = t101 * t192;
t308 = t108 * t192;
t306 = t192 * t286;
t303 = t290 + t307;
t217 = -t156 * t71 - t83 * t221 + t85 * t232 - t283 * t70;
t21 = -t151 * qJD(5) + t217;
t7 = pkin(5) * t290 - t21;
t6 = t7 * t158;
t301 = t101 * t13 + t6;
t300 = t13 * t192 - t2;
t222 = -t192 * t200 + t1;
t299 = t52 * t101 - t21;
t105 = t283 * t133 - t156 * t198;
t109 = -t159 * t137 - t243;
t95 = t109 - t281;
t27 = -t156 * t162 - t283 * t165 - t95 * t221 - t232 * t322;
t58 = t156 * t95 - t283 * t322;
t28 = qJD(4) * t58 + t310;
t57 = -t156 * t322 - t283 * t95;
t298 = -t101 * t27 + t23 * t105 + t189 * t57 - t192 * t28 + t290 * t58;
t297 = -t108 * t101 + t217;
t284 = t7 * t155 + t32 * t230;
t296 = t101 * t200 + t284;
t104 = t133 * t156 + t180;
t69 = t105 * qJD(4) + t283 * t185 - t179;
t295 = -t101 * t69 - t104 * t290;
t68 = qJD(4) * t180 + t133 * t232 + t156 * t185 + t177;
t294 = -t101 * t68 - t104 * t189 + t105 * t290 + t192 * t69;
t208 = pkin(3) * t221;
t142 = t208 + qJD(5);
t54 = t283 * t84 - t264;
t253 = t142 - t54;
t47 = t189 * t105;
t293 = t192 * t68 + t47;
t224 = pkin(3) * t232;
t53 = t156 * t84 + t82;
t207 = -t53 + t224;
t288 = t127 ^ 2;
t287 = qJD(3) ^ 2;
t282 = pkin(3) * t156;
t280 = t23 * t57;
t279 = t88 * t86;
t270 = t151 * t68;
t269 = t151 * t69;
t266 = t155 * t88;
t263 = t158 * t69;
t262 = t158 * t86;
t261 = t286 * t189;
t260 = t27 * t151;
t259 = t28 * t151;
t258 = t41 * t155;
t254 = t253 - t314;
t248 = t127 * t126;
t236 = t153 ^ 2 + t154 ^ 2;
t234 = qJD(3) * t127;
t229 = qJD(6) * t286;
t225 = t283 * pkin(3);
t216 = -t41 + t252;
t211 = t236 * qJD(1) ^ 2;
t147 = -t225 - pkin(4);
t205 = t127 * pkin(3) - t256;
t204 = -t316 - t274;
t202 = t13 * t155 - t158 * t200;
t201 = t13 * t158 + t155 * t200;
t114 = pkin(3) * t198 + t146;
t167 = -t105 * qJ(5) + t114;
t43 = t286 * t104 + t167;
t44 = pkin(5) * t105 + t57;
t25 = t155 * t44 + t158 * t43;
t24 = -t155 * t43 + t158 * t44;
t197 = 0.2e1 * t236 * t227;
t194 = t151 * t51 - t23;
t144 = -pkin(9) + t147;
t190 = -t144 * t189 - t224 * t302;
t182 = pkin(3) * t185;
t178 = qJD(1) * t186;
t176 = -t101 * t54 - t192 * t207;
t173 = t189 + t251;
t168 = qJD(6) * t201 + t1 * t155 + t2 * t158;
t166 = t68 * qJ(5) - t105 * qJD(5) + t182;
t145 = qJ(5) + t282;
t123 = t126 ^ 2;
t91 = -qJD(3) * t110 - t186;
t90 = (-qJD(3) * t138 - t235) * t157 + t238;
t81 = -t187 - t178;
t63 = -t256 - t315;
t56 = t104 * pkin(4) + t167;
t55 = t205 - t315;
t48 = -pkin(4) * t151 + t241;
t46 = -t256 - t306;
t45 = -t104 * pkin(5) + t58;
t42 = t205 - t306;
t36 = t53 + t285;
t34 = t51 + t285;
t29 = t69 * pkin(4) + t166;
t20 = t155 * t34 + t158 * t46;
t19 = -t155 * t46 + t158 * t34;
t18 = t286 * t69 + t166;
t17 = t155 * t36 + t158 * t42;
t16 = -t155 * t42 + t158 * t36;
t15 = -t68 * pkin(5) - t221 * t322 + t95 * t232 + t310;
t14 = -pkin(5) * t69 - t27;
t10 = t200 * t231;
t4 = -qJD(6) * t25 + t158 * t15 - t155 * t18;
t3 = qJD(6) * t24 + t155 * t15 + t158 * t18;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, qJ(2) * t197 (-t126 * t133 - t127 * t198) * qJD(3), -t133 * t237 + (0.2e1 * t126 * t198 - t127 * t133) * qJD(3), -t198 * t287, t126 * t185 + t237 * t198, -t133 * t287, 0, t146 * t237 + (t133 * t136 + t91) * qJD(3) (-t126 * t146 - t136 * t198 - t90) * qJD(3), -t110 * t237 - t90 * t126 - t91 * t127 + (-t81 - t187) * t133 + (-t80 + (qJD(1) * t109 + t106) * qJD(3)) * t198, t106 * t91 + t107 * t90 + t109 * t81 + t110 * t80, t293, t294, -t270, t295, -t269, 0, -t101 * t182 + t104 * t220 + t108 * t69 - t114 * t290 - t259, -t108 * t68 + t114 * t189 + t260 + (t237 * t105 - t185 * t192) * pkin(3), t104 * t217 - t50 * t68 - t51 * t69 + t298, -t217 * t58 + t280 - t51 * t27 + t50 * t28 + (t108 * t185 + t114 * t237) * pkin(3), 0, t270, t269, t293, t294, t295, t21 * t104 - t48 * t68 + t49 * t69 + t298, t101 * t29 - t26 * t104 + t290 * t56 - t52 * t69 + t259, -t105 * t26 - t189 * t56 + t192 * t29 + t52 * t68 - t260, -t21 * t58 + t26 * t56 + t27 * t49 + t28 * t48 + t29 * t52 + t280, t69 * t266 + (-t155 * t40 + t230 * t88) * t104 (-t155 * t86 + t158 * t88) * t69 + (-t258 - t39 + (-t262 - t266) * qJD(6)) * t104, t69 * t325 - t40 * t105 - t88 * t68 + (t230 * t302 + t267) * t104, -t69 * t262 + (t231 * t86 - t38) * t104, t302 * t263 - t41 * t105 + t86 * t68 + (-t231 * t302 + t60) * t104, -t302 * t68 + t47, -t32 * t263 + t2 * t105 + t200 * t68 + t14 * t86 + t24 * t189 + t4 * t302 + t45 * t41 + (t231 * t32 - t6) * t104, t32 * t155 * t69 - t1 * t105 + t104 * t284 + t13 * t68 + t14 * t88 - t189 * t25 - t3 * t302 - t45 * t40, t24 * t40 - t25 * t41 - t3 * t86 - t4 * t88 + t201 * t69 + (-qJD(6) * t202 + t1 * t158 - t2 * t155) * t104, t1 * t25 + t13 * t3 + t14 * t32 + t2 * t24 - t200 * t4 + t45 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, -qJ(2) * t211, 0, 0, 0, 0, 0, 0, t234 + t237, -0.2e1 * t126 * qJD(3), -t123 - t288, t106 * t127 + t107 * t126, 0, 0, 0, 0, 0, 0, -t303, t173, t204, -t51 * t101 + t192 * t50 + t220, 0, 0, 0, 0, 0, 0, t204, t303, -t173, t49 * t101 + t192 * t48 + t26, 0, 0, 0, 0, 0, 0, t330 - t275, -t193 - t257, -t155 * t333 + t312 - t38, -t32 * t101 - t319 * t155 + t318 * t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, -t123 + t288, 0, -t248, t234 - t237, 0, -t136 * t127 - t178, t157 * t219 + t136 * t126 + (t106 + t247) * qJD(3) - t239, 0, 0, t309, t320, t323, -t309, t321, 0, t308 + t53 * t151 + (t101 * t127 - t151 * t232) * pkin(3) - t23, t54 * t151 + (t127 * t192 - t151 * t221) * pkin(3) + t297, -t189 * t225 - t192 * t51 + t282 * t290 + t176 + (t208 - t50) * t101, -t50 * t53 - t51 * t54 + (-t283 * t23 - t108 * t127 - t156 * t217 + (t156 * t50 + t283 * t51) * qJD(4)) * pkin(3), 0, -t323, -t321, t309, t320, -t309, t145 * t290 + t147 * t189 + t192 * t49 + t176 + (t142 - t48) * t101, -t101 * t55 + t151 * t207 + t326, t151 * t253 - t192 * t55 + t299, -t21 * t145 + t23 * t147 + t207 * t48 - t253 * t49 - t52 * t55, t331, t335, t332, t324 * t86 + t258, t334, -t311, t145 * t41 + (-t144 * t231 - t16) * t302 + t254 * t86 + (-t190 - t313) * t158 + t296, -t145 * t40 + (-t144 * t230 + t17) * t302 + t254 * t88 + (t190 - t328) * t155 + t301, t16 * t88 + t17 * t86 - t10 + (t144 * t216 - t224 * t86 - t222) * t155 + (-t88 * t224 + t144 * t40 + (-t144 * t86 - t13) * qJD(6) + t300) * t158, -t13 * t17 + t144 * t168 + t145 * t7 + t16 * t200 + t202 * t224 + t254 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t320, t323, -t309, t321, 0, t194 + t308, -t151 * t50 + t297, 0, 0, 0, -t323, -t321, t309, t320, -t309, -pkin(4) * t189 + qJ(5) * t290 - (-t49 - t51) * t192 - (t48 - t241) * t101, -t101 * t63 - t194 - t273, t151 * t241 - t192 * t63 + t299, -t23 * pkin(4) - t21 * qJ(5) - t241 * t49 - t48 * t51 - t52 * t63, t331, t335, t332, t158 * t327 + t258, t334, -t311, qJ(5) * t41 + (t155 * t229 - t19) * t302 + t242 * t86 + (-t261 - t313) * t158 + t296, -qJ(5) * t40 + (t158 * t229 + t20) * t302 + t242 * t88 + (t261 - t328) * t155 + t301, t19 * t88 + t20 * t86 - t10 + (-t216 * t286 - t222) * t155 + (-t286 * t40 + (t286 * t86 - t13) * qJD(6) + t300) * t158, t7 * qJ(5) - t13 * t20 - t168 * t286 + t19 * t200 + t242 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, -t309, -t151 ^ 2 - t316, t151 * t49 + t326, 0, 0, 0, 0, 0, 0, -t151 * t86 + t193, -t151 * t88 + t330, t317 * t155 + t158 * t333, -t32 * t151 + t222 * t155 + t319 * t158 + t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t86 ^ 2 + t88 ^ 2, -t333, -t279, t317, t189, -t32 * t88 + t319, t32 * t86 - t318, 0, 0;];
tauc_reg  = t5;
