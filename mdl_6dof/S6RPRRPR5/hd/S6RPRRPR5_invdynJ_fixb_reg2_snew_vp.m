% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RPRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 22:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RPRRPR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 22:40:01
% EndTime: 2019-05-05 22:40:28
% DurationCPUTime: 13.23s
% Computational Cost: add. (39416->533), mult. (97003->730), div. (0->0), fcn. (76661->10), ass. (0->335)
t319 = cos(qJ(4));
t311 = qJD(3) + qJD(4);
t307 = t311 ^ 2;
t312 = sin(pkin(10));
t313 = cos(pkin(10));
t316 = sin(qJ(3));
t320 = cos(qJ(3));
t292 = (-t312 * t316 + t313 * t320) * qJD(1);
t341 = t312 * t320 + t313 * t316;
t293 = t341 * qJD(1);
t315 = sin(qJ(4));
t266 = t292 * t315 + t293 * t319;
t417 = t266 ^ 2;
t430 = -t417 - t307;
t308 = qJDD(3) + qJDD(4);
t264 = -t319 * t292 + t293 * t315;
t385 = t266 * t264;
t431 = t385 + t308;
t443 = t431 * t315;
t177 = -t319 * t430 + t443;
t442 = t431 * t319;
t179 = t315 * t430 + t442;
t121 = t177 * t320 + t179 * t316;
t124 = t177 * t316 - t179 * t320;
t367 = t313 * qJDD(1);
t368 = t312 * qJDD(1);
t236 = -t316 * t368 + t320 * t367;
t373 = t293 * qJD(3);
t276 = t236 - t373;
t291 = t341 * qJDD(1);
t374 = t292 * qJD(3);
t278 = t291 + t374;
t342 = t315 * t276 + t319 * t278;
t371 = qJD(4) + t311;
t331 = -t264 * t371 + t342;
t479 = -pkin(1) * t331 + qJ(2) * (t121 * t312 + t124 * t313);
t478 = pkin(7) * t121;
t477 = -pkin(2) * t331 + pkin(7) * t124;
t249 = -t417 + t307;
t433 = t308 - t385;
t449 = t315 * t433;
t181 = t249 * t319 + t449;
t445 = t319 * t433;
t185 = -t249 * t315 + t445;
t475 = t312 * (t181 * t316 - t185 * t320) - t313 * (t181 * t320 + t185 * t316);
t418 = t264 ^ 2;
t217 = -t307 - t418;
t149 = t217 * t315 + t445;
t152 = -t217 * t319 + t449;
t102 = t149 * t320 - t152 * t316;
t105 = t149 * t316 + t152 * t320;
t474 = qJ(2) * (t102 * t312 + t105 * t313);
t248 = t418 - t307;
t183 = t248 * t315 + t442;
t187 = t248 * t319 - t443;
t471 = t312 * (t183 * t316 - t187 * t320) - t313 * (t183 * t320 + t187 * t316);
t470 = pkin(3) * t177;
t469 = pkin(7) * t102;
t468 = pkin(7) * t105;
t467 = pkin(8) * t177;
t466 = pkin(8) * t179;
t462 = pkin(3) * t149;
t461 = pkin(8) * t149;
t460 = pkin(8) * t152;
t372 = qJD(4) - t311;
t173 = t264 * t372 - t342;
t459 = t173 * t315;
t458 = t173 * t319;
t322 = qJD(1) ^ 2;
t317 = sin(qJ(1));
t414 = cos(qJ(1));
t339 = g(1) * t414 + t317 * g(2);
t441 = -t322 * pkin(1) + qJDD(1) * qJ(2) + 0.2e1 * qJD(1) * qJD(2) - t339;
t309 = t312 ^ 2;
t310 = t313 ^ 2;
t376 = t309 + t310;
t359 = t317 * g(1) - t414 * g(2);
t346 = -qJDD(2) + t359;
t271 = t322 * (pkin(7) * t376 + qJ(2)) + (pkin(2) * t313 + pkin(1)) * qJDD(1) + t346;
t289 = t292 ^ 2;
t345 = qJD(3) * pkin(3) - pkin(8) * t293;
t190 = t276 * pkin(3) + t289 * pkin(8) - t293 * t345 + t271;
t253 = t311 * t266;
t455 = pkin(4) * t253 - 0.2e1 * qJD(5) * t266 - t190;
t415 = pkin(4) + pkin(9);
t428 = -t418 - t417;
t454 = pkin(1) * t428;
t453 = pkin(2) * t428;
t452 = pkin(3) * t428;
t314 = sin(qJ(6));
t201 = -qJD(4) * t264 + t342;
t198 = qJDD(6) + t201;
t318 = cos(qJ(6));
t239 = -t318 * t264 + t311 * t314;
t241 = t264 * t314 + t311 * t318;
t203 = t241 * t239;
t435 = t198 - t203;
t451 = t314 * t435;
t280 = t292 * t293;
t427 = qJDD(3) + t280;
t448 = t316 * t427;
t447 = t318 * t435;
t444 = t320 * t427;
t386 = t264 * t311;
t354 = t201 + t386;
t224 = pkin(4) * t264 - qJ(5) * t266;
t350 = -g(3) * t312 + t313 * t441;
t413 = pkin(2) * t322;
t254 = pkin(7) * t367 - t310 * t413 + t350;
t408 = t313 * g(3);
t432 = -t408 + (-pkin(7) * qJDD(1) + t313 * t413 - t441) * t312;
t205 = t316 * t254 - t320 * t432;
t146 = (-t278 + t374) * pkin(8) + t427 * pkin(3) - t205;
t206 = t320 * t254 + t316 * t432;
t153 = -t289 * pkin(3) + t276 * pkin(8) - qJD(3) * t345 + t206;
t97 = -t319 * t146 + t315 * t153;
t85 = -t308 * pkin(4) - t307 * qJ(5) + t266 * t224 + qJDD(5) + t97;
t422 = -pkin(9) * t433 + t85;
t327 = t354 * pkin(5) + t422;
t353 = -t319 * t276 + t315 * t278;
t200 = qJD(4) * t266 + t353;
t247 = pkin(5) * t266 - pkin(9) * t311;
t355 = -t201 + t386;
t436 = t355 * qJ(5);
t325 = t436 + t455;
t53 = -pkin(5) * t418 + t200 * t415 - t266 * t247 + t325;
t30 = t314 * t53 - t318 * t327;
t403 = t318 * t53;
t31 = t314 * t327 + t403;
t17 = -t318 * t30 + t31 * t314;
t438 = t315 * t331;
t437 = t319 * t331;
t429 = t417 - t418;
t378 = t322 * qJ(2);
t401 = qJDD(1) * pkin(1);
t288 = t346 + t378 + t401;
t426 = t376 * t378 - t288 - t401;
t335 = (-t264 * t315 - t266 * t319) * t311;
t336 = (-t264 * t319 + t266 * t315) * t311;
t421 = t312 * (-t316 * t335 + t320 * t336) + t313 * (t316 * t336 + t320 * t335);
t379 = t311 * t319;
t338 = t200 * t315 + t264 * t379;
t380 = t311 * t315;
t348 = -t319 * t200 + t264 * t380;
t420 = t312 * (-t316 * t348 + t320 * t338) + t313 * (t316 * t338 + t320 * t348);
t347 = t319 * t201 - t266 * t380;
t349 = t315 * t201 + t266 * t379;
t419 = t312 * (-t316 * t349 + t320 * t347) + t313 * (t316 * t347 + t320 * t349);
t237 = t239 ^ 2;
t238 = t241 ^ 2;
t259 = qJD(6) + t266;
t257 = t259 ^ 2;
t290 = t293 ^ 2;
t416 = 0.2e1 * qJD(5);
t412 = pkin(4) * t315;
t411 = pkin(4) * t319;
t98 = t315 * t146 + t319 * t153;
t329 = -t307 * pkin(4) + t308 * qJ(5) - t264 * t224 + t98;
t83 = t311 * t416 + t329;
t407 = -pkin(4) * t85 + qJ(5) * t83;
t56 = -t200 * pkin(5) - t418 * pkin(9) + (t416 + t247) * t311 + t329;
t405 = t314 * t56;
t51 = t315 * t98 - t319 * t97;
t404 = t316 * t51;
t54 = t318 * t56;
t402 = t320 * t51;
t139 = t198 + t203;
t400 = t139 * t314;
t399 = t139 * t318;
t141 = -t205 * t320 + t206 * t316;
t398 = t141 * t312;
t165 = t200 + t253;
t397 = t165 * t319;
t396 = t190 * t315;
t395 = t190 * t319;
t388 = t259 * t314;
t387 = t259 * t318;
t384 = t271 * t316;
t383 = t271 * t320;
t273 = qJDD(3) - t280;
t382 = t273 * t316;
t381 = t273 * t320;
t166 = -t266 * t372 - t353;
t377 = pkin(4) * t173 + qJ(5) * t166;
t370 = qJD(6) + t259;
t363 = t315 * t203;
t362 = t319 * t203;
t360 = qJ(5) * t315 + pkin(3);
t52 = t315 * t97 + t319 * t98;
t356 = -t318 * t200 + t314 * t308;
t142 = t205 * t316 + t320 * t206;
t352 = t312 * (t312 * t441 + t408) + t313 * t350;
t351 = qJ(5) * t56 - t17 * t415;
t18 = t314 * t30 + t318 * t31;
t189 = -t238 - t257;
t100 = t189 * t318 - t400;
t343 = t314 * t200 + t318 * t308;
t136 = -t239 * t370 + t343;
t344 = qJ(5) * t136 - t100 * t415 + t54;
t131 = t241 * t370 + t356;
t176 = -t257 - t237;
t95 = t176 * t314 + t447;
t337 = qJ(5) * t131 - t415 * t95 + t405;
t175 = -t237 - t238;
t148 = -qJD(6) * t239 + t343;
t213 = t259 * t239;
t135 = t148 + t213;
t333 = (-qJD(6) + t259) * t241 - t356;
t79 = -t135 * t318 + t314 * t333;
t334 = qJ(5) * t175 - t415 * t79 - t17;
t330 = -pkin(4) * t433 - qJ(5) * t217 + t85;
t328 = -pkin(4) * t430 + qJ(5) * t431 + t83;
t326 = -t200 * pkin(4) - t455;
t321 = qJD(3) ^ 2;
t304 = t310 * qJDD(1);
t303 = t309 * qJDD(1);
t295 = t376 * t322;
t284 = -t290 - t321;
t283 = -t290 + t321;
t282 = t289 - t321;
t277 = t291 + 0.2e1 * t374;
t275 = -t236 + 0.2e1 * t373;
t270 = -t321 - t289;
t242 = -t289 - t290;
t235 = -t284 * t316 - t381;
t234 = t284 * t320 - t382;
t233 = t236 * t320 + t291 * t316;
t232 = t236 * t316 - t291 * t320;
t231 = t270 * t320 - t448;
t230 = t270 * t316 + t444;
t212 = -t238 + t257;
t211 = t237 - t257;
t202 = t238 - t237;
t167 = -t200 + t253;
t164 = t266 * t371 + t353;
t147 = -qJD(6) * t241 - t356;
t145 = (-t239 * t318 + t241 * t314) * t259;
t144 = (t239 * t314 + t241 * t318) * t259;
t137 = -t395 + t467;
t134 = t148 - t213;
t128 = t148 * t318 - t241 * t388;
t127 = -t148 * t314 - t241 * t387;
t126 = -t147 * t314 + t239 * t387;
t125 = -t147 * t318 - t239 * t388;
t120 = -t396 - t461;
t119 = -t144 * t315 + t198 * t319;
t118 = t144 * t319 + t198 * t315;
t117 = t211 * t318 - t400;
t116 = -t212 * t314 + t447;
t115 = -t211 * t314 - t399;
t114 = -t212 * t318 - t451;
t113 = t167 * t319 - t459;
t112 = -t397 - t438;
t111 = -t164 * t319 - t438;
t110 = t166 * t319 - t459;
t109 = t167 * t315 + t458;
t108 = -t165 * t315 + t437;
t107 = -t164 * t315 + t437;
t106 = t166 * t315 + t458;
t101 = -t189 * t314 - t399;
t96 = t176 * t318 - t451;
t92 = -t127 * t315 + t362;
t91 = -t125 * t315 - t362;
t90 = t127 * t319 + t363;
t89 = t125 * t319 - t363;
t88 = -pkin(3) * t331 - t396 - t466;
t87 = -pkin(3) * t164 + t395 - t460;
t86 = t326 - t436;
t81 = t135 * t314 + t318 * t333;
t80 = -t131 * t318 - t134 * t314;
t78 = t131 * t314 - t134 * t318;
t76 = -t114 * t315 + t135 * t319;
t75 = -t115 * t315 + t319 * t333;
t74 = t114 * t319 + t135 * t315;
t73 = t115 * t319 + t315 * t333;
t72 = -qJ(5) * t428 + t85;
t71 = -pkin(4) * t428 + t83;
t70 = t100 * t315 + t136 * t319;
t69 = -t100 * t319 + t136 * t315;
t68 = t131 * t319 + t315 * t95;
t67 = t131 * t315 - t319 * t95;
t66 = (t165 + t200) * pkin(4) + t325;
t65 = (t331 - t355) * qJ(5) + t326;
t64 = t202 * t319 - t315 * t78;
t63 = t202 * t315 + t319 * t78;
t62 = -t109 * t316 + t113 * t320;
t61 = -t106 * t316 + t110 * t320;
t60 = t109 * t320 + t113 * t316;
t59 = t106 * t320 + t110 * t316;
t58 = t175 * t319 + t315 * t79;
t57 = t175 * t315 - t319 * t79;
t49 = pkin(3) * t190 + pkin(8) * t52;
t48 = t319 * t65 - t331 * t412 - t467;
t47 = qJ(5) * t397 - t315 * t66 + t461;
t46 = t315 * t85 + t319 * t83;
t45 = t315 * t83 - t319 * t85;
t44 = -pkin(8) * t109 - t51;
t43 = pkin(5) * t79 - qJ(5) * t81;
t42 = t466 + t315 * t65 + (pkin(3) + t411) * t331;
t41 = t165 * t360 + t319 * t66 + t460;
t40 = pkin(8) * t113 - t452 + t52;
t39 = -t316 * t69 + t320 * t70;
t38 = t316 * t70 + t320 * t69;
t37 = -t316 * t67 + t320 * t68;
t36 = t316 * t68 + t320 * t67;
t35 = -t316 * t57 + t320 * t58;
t34 = t316 * t58 + t320 * t57;
t33 = t320 * t52 - t404;
t32 = t316 * t52 + t402;
t28 = -pkin(8) * t106 - t315 * t71 + t319 * t72;
t27 = pkin(8) * t110 + t315 * t72 + t319 * t71 - t452;
t26 = pkin(5) * t136 - t101 * t415 - t405;
t25 = pkin(5) * t131 - t415 * t96 + t54;
t24 = -pkin(8) * t45 + (qJ(5) * t319 - t412) * t86;
t23 = -t316 * t45 + t320 * t46;
t22 = t316 * t46 + t320 * t45;
t21 = -t403 - t314 * t422 - qJ(5) * t101 + (-t314 * t354 + t100) * pkin(5);
t20 = pkin(5) * t95 - qJ(5) * t96 - t30;
t19 = pkin(8) * t46 + (t360 + t411) * t86;
t15 = t17 * t315 + t319 * t56;
t14 = -t17 * t319 + t315 * t56;
t13 = pkin(5) * t175 - t415 * t81 - t18;
t12 = -pkin(8) * t69 + t21 * t319 - t26 * t315;
t11 = -pkin(8) * t67 + t20 * t319 - t25 * t315;
t10 = -pkin(3) * t101 + pkin(8) * t70 + t21 * t315 + t26 * t319;
t9 = -pkin(3) * t96 + pkin(8) * t68 + t20 * t315 + t25 * t319;
t8 = pkin(5) * t17 - qJ(5) * t18;
t7 = -pkin(8) * t57 - t13 * t315 + t319 * t43;
t6 = -pkin(3) * t81 + pkin(8) * t58 + t13 * t319 + t315 * t43;
t5 = pkin(5) * t56 - t18 * t415;
t4 = -t14 * t316 + t15 * t320;
t3 = t14 * t320 + t15 * t316;
t2 = -pkin(8) * t14 - t315 * t5 + t319 * t8;
t1 = -pkin(3) * t18 + pkin(8) * t15 + t315 * t8 + t319 * t5;
t16 = [0, 0, 0, 0, 0, qJDD(1), t359, t339, 0, 0, t303, 0.2e1 * t312 * t367, 0, t304, 0, 0, -t426 * t313, t426 * t312, pkin(1) * t295 + qJ(2) * (t304 + t303) + t352, pkin(1) * t288 + qJ(2) * t352, t312 * (t278 * t320 - t316 * t373) + t313 * (t278 * t316 + t320 * t373), t312 * (-t275 * t320 - t277 * t316) + t313 * (-t275 * t316 + t277 * t320), t312 * (-t283 * t316 + t444) + t313 * (t283 * t320 + t448), t312 * (-t276 * t316 - t320 * t374) + t313 * (t276 * t320 - t316 * t374), t312 * (t282 * t320 - t382) + t313 * (t282 * t316 + t381), (t312 * (t292 * t320 + t293 * t316) + t313 * (t292 * t316 - t293 * t320)) * qJD(3), t312 * (-pkin(7) * t230 - t384) + t313 * (-pkin(2) * t275 + pkin(7) * t231 + t383) - pkin(1) * t275 + qJ(2) * (-t230 * t312 + t231 * t313), t312 * (-pkin(7) * t234 - t383) + t313 * (-pkin(2) * t277 + pkin(7) * t235 - t384) - pkin(1) * t277 + qJ(2) * (-t234 * t312 + t235 * t313), t312 * (-pkin(7) * t232 - t141) + t313 * (-pkin(2) * t242 + pkin(7) * t233 + t142) - pkin(1) * t242 + qJ(2) * (-t232 * t312 + t233 * t313), -pkin(7) * t398 + t313 * (pkin(2) * t271 + pkin(7) * t142) + pkin(1) * t271 + qJ(2) * (t142 * t313 - t398), t419, t312 * (-t107 * t316 + t111 * t320) + t313 * (t107 * t320 + t111 * t316), -t475, t420, -t471, t421, t312 * (t120 * t320 - t316 * t87 - t469) + t313 * (-pkin(2) * t164 + t120 * t316 + t320 * t87 - t468) - pkin(1) * t164 - t474, t312 * (t137 * t320 - t316 * t88 + t478) + t313 * (t137 * t316 + t320 * t88 + t477) + t479, t312 * (-pkin(7) * t60 - t316 * t40 + t320 * t44) + t313 * (pkin(7) * t62 + t316 * t44 + t320 * t40 - t453) - t454 + qJ(2) * (-t312 * t60 + t313 * t62), t312 * (-pkin(7) * t32 - pkin(8) * t402 - t316 * t49) + t313 * (pkin(2) * t190 + pkin(7) * t33 - pkin(8) * t404 + t320 * t49) + pkin(1) * t190 + qJ(2) * (-t312 * t32 + t313 * t33), t421, t475, t471, t419, t312 * (-t108 * t316 + t112 * t320) + t313 * (t108 * t320 + t112 * t316), t420, t312 * (-pkin(7) * t59 - t27 * t316 + t28 * t320) + t313 * (pkin(7) * t61 + t27 * t320 + t28 * t316 - t453) - t454 + qJ(2) * (-t312 * t59 + t313 * t61), t312 * (-t316 * t41 + t320 * t47 + t469) + t313 * (pkin(2) * t165 + t316 * t47 + t320 * t41 + t468) + pkin(1) * t165 + t474, t312 * (-t316 * t42 + t320 * t48 - t478) + t313 * (t316 * t48 + t320 * t42 - t477) - t479, t312 * (-pkin(7) * t22 - t19 * t316 + t24 * t320) + t313 * (pkin(2) * t86 + pkin(7) * t23 + t19 * t320 + t24 * t316) + pkin(1) * t86 + qJ(2) * (-t22 * t312 + t23 * t313), t312 * (-t316 * t90 + t320 * t92) + t313 * (t316 * t92 + t320 * t90), t312 * (-t316 * t63 + t320 * t64) + t313 * (t316 * t64 + t320 * t63), t312 * (-t316 * t74 + t320 * t76) + t313 * (t316 * t76 + t320 * t74), t312 * (-t316 * t89 + t320 * t91) + t313 * (t316 * t91 + t320 * t89), t312 * (-t316 * t73 + t320 * t75) + t313 * (t316 * t75 + t320 * t73), t312 * (-t118 * t316 + t119 * t320) + t313 * (t118 * t320 + t119 * t316), t312 * (-pkin(7) * t36 + t11 * t320 - t316 * t9) + t313 * (-pkin(2) * t96 + pkin(7) * t37 + t11 * t316 + t320 * t9) - pkin(1) * t96 + qJ(2) * (-t312 * t36 + t313 * t37), t312 * (-pkin(7) * t38 - t10 * t316 + t12 * t320) + t313 * (-pkin(2) * t101 + pkin(7) * t39 + t10 * t320 + t12 * t316) - pkin(1) * t101 + qJ(2) * (-t312 * t38 + t313 * t39), t312 * (-pkin(7) * t34 - t316 * t6 + t320 * t7) + t313 * (-pkin(2) * t81 + pkin(7) * t35 + t316 * t7 + t320 * t6) - pkin(1) * t81 + qJ(2) * (-t312 * t34 + t313 * t35), t312 * (-pkin(7) * t3 - t1 * t316 + t2 * t320) + t313 * (-pkin(2) * t18 + pkin(7) * t4 + t1 * t320 + t2 * t316) - pkin(1) * t18 + qJ(2) * (-t3 * t312 + t313 * t4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, t368, -t295, -t288, 0, 0, 0, 0, 0, 0, t275, t277, t242, -t271, 0, 0, 0, 0, 0, 0, t164, t331, t428, -t190, 0, 0, 0, 0, 0, 0, t428, -t165, -t331, -t86, 0, 0, 0, 0, 0, 0, t96, t101, t81, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t290 - t289, t291, t280, t236, qJDD(3), -t205, -t206, 0, 0, t385, t429, -t173, -t385, t166, t308, -t97 + t462, -t98 - t470, pkin(3) * t109, pkin(3) * t51, t308, t173, -t167, t385, t429, -t385, pkin(3) * t106 + t377, t330 - t462, t328 + t470, pkin(3) * t45 + t407, t128, t80, t116, t126, t117, t145, pkin(3) * t67 + t337, pkin(3) * t69 + t344, pkin(3) * t57 + t334, pkin(3) * t14 + t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t429, -t173, -t385, t166, t308, -t97, -t98, 0, 0, t308, t173, -t167, t385, t429, -t385, t377, t330, t328, t407, t128, t80, t116, t126, t117, t145, t337, t344, t334, t351; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, t433, t430, t85, 0, 0, 0, 0, 0, 0, t95, t100, t79, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202, t135, -t203, t333, t198, -t30, -t31, 0, 0;];
tauJ_reg  = t16;
