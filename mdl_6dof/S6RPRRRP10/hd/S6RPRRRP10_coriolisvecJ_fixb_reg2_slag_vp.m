% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRRP10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:32:33
% EndTime: 2019-03-09 06:32:49
% DurationCPUTime: 5.88s
% Computational Cost: add. (7958->499), mult. (17019->649), div. (0->0), fcn. (10883->6), ass. (0->239)
t187 = sin(qJ(3));
t283 = qJD(1) * t187;
t174 = qJD(4) + t283;
t164 = qJD(5) + t174;
t186 = sin(qJ(4));
t188 = cos(qJ(4));
t278 = qJD(3) * t188;
t189 = cos(qJ(3));
t282 = qJD(1) * t189;
t138 = -t186 * t282 + t278;
t256 = t188 * t282;
t280 = qJD(3) * t186;
t139 = t256 + t280;
t185 = sin(qJ(5));
t332 = cos(qJ(5));
t206 = t185 * t138 + t332 * t139;
t272 = qJD(4) * t189;
t250 = t186 * t272;
t202 = t187 * t278 + t250;
t268 = qJD(3) * qJD(4);
t101 = qJD(1) * t202 - t188 * t268;
t279 = qJD(3) * t187;
t254 = t186 * t279;
t249 = t188 * t272;
t286 = qJD(1) * t249 + t186 * t268;
t203 = qJD(1) * t254 - t286;
t37 = qJD(5) * t206 - t185 * t101 - t332 * t203;
t350 = -t164 * t206 + t37;
t258 = t332 * t188;
t297 = t185 * t186;
t204 = t258 - t297;
t84 = -t332 * t138 + t139 * t185;
t190 = -pkin(1) - pkin(7);
t166 = t190 * qJD(1) + qJD(2);
t301 = t166 * t189;
t321 = qJD(3) * pkin(3);
t131 = -t301 - t321;
t95 = -pkin(4) * t138 + t131;
t31 = pkin(5) * t84 - qJ(6) * t206 + t95;
t353 = t31 * t84;
t352 = t84 * t95;
t351 = t84 * t206;
t296 = t185 * t188;
t142 = t332 * t186 + t296;
t124 = t142 * qJD(1);
t339 = qJD(4) + qJD(5);
t91 = t339 * t142;
t313 = t187 * t124 + t91;
t244 = t332 * qJD(4);
t226 = t188 * t244;
t243 = t332 * qJD(5);
t340 = t204 * qJD(1);
t312 = t340 * t187 + t188 * t243 - t339 * t297 + t226;
t114 = t142 * t187;
t277 = qJD(3) * t189;
t310 = t339 * t114 - t204 * t277 + t124;
t348 = t249 - t254;
t334 = t206 ^ 2;
t263 = t84 ^ 2 - t334;
t271 = qJD(5) * t185;
t36 = t332 * t101 - t138 * t243 + t139 * t271 - t185 * t203;
t347 = t164 * t84 - t36;
t51 = pkin(5) * t206 + qJ(6) * t84;
t267 = 0.2e1 * qJD(1);
t333 = -pkin(9) - pkin(8);
t158 = t333 * t186;
t159 = t333 * t188;
t100 = t185 * t158 - t332 * t159;
t259 = qJD(4) * t333;
t145 = t186 * t259;
t294 = t187 * t188;
t266 = pkin(9) * t294;
t222 = pkin(3) * t189 + pkin(8) * t187;
t144 = t222 * qJD(1);
t295 = t186 * t189;
t92 = t188 * t144 - t166 * t295;
t72 = (pkin(4) * t189 + t266) * qJD(1) + t92;
t257 = t186 * t283;
t292 = t188 * t189;
t93 = t186 * t144 + t166 * t292;
t76 = pkin(9) * t257 + t93;
t325 = t100 * qJD(5) - t333 * t226 + t332 * t72 + (t145 - t76) * t185;
t331 = t31 * t206;
t344 = t95 * t206;
t136 = qJD(3) * t222 + qJD(2);
t113 = t136 * qJD(1);
t221 = pkin(3) * t187 - pkin(8) * t189;
t147 = qJ(2) + t221;
t126 = t147 * qJD(1);
t146 = t187 * t166;
t130 = qJD(3) * pkin(8) + t146;
t255 = t166 * t277;
t273 = qJD(4) * t188;
t275 = qJD(4) * t186;
t42 = t186 * t113 + t126 * t273 - t130 * t275 + t188 * t255;
t77 = t188 * t126 - t130 * t186;
t343 = -t174 * t77 + t42;
t78 = t126 * t186 + t130 * t188;
t198 = -qJD(4) * t78 + t188 * t113;
t43 = -t186 * t255 + t198;
t342 = -t78 * t174 - t43;
t223 = -t146 + (t257 + t275) * pkin(4);
t293 = t187 * t190;
t163 = t188 * t293;
t104 = t186 * t147 + t163;
t184 = t189 ^ 2;
t285 = t187 ^ 2 - t184;
t115 = t142 * t189;
t200 = t244 + t243;
t245 = qJD(3) * t332;
t228 = t187 * t245;
t248 = t186 * t271;
t59 = -t202 * t185 - t186 * t228 - t189 * t248 + t200 * t292;
t338 = t164 * t59 + t187 * t37 + (qJD(1) * t115 + t84) * t277;
t135 = t188 * t147;
t241 = -t186 * t190 + pkin(4);
t82 = -pkin(9) * t292 + t187 * t241 + t135;
t94 = -pkin(9) * t295 + t104;
t322 = t185 * t82 + t332 * t94;
t120 = t188 * t136;
t47 = t120 + (-t163 + (pkin(9) * t189 - t147) * t186) * qJD(4) + (t189 * t241 + t266) * qJD(3);
t274 = qJD(4) * t187;
t251 = t186 * t274;
t276 = qJD(3) * t190;
t252 = t189 * t276;
t67 = t186 * t136 + t147 * t273 + t188 * t252 - t190 * t251;
t52 = -pkin(9) * t348 + t67;
t11 = -qJD(5) * t322 - t185 * t52 + t332 * t47;
t337 = t164 * t313 + (-qJD(3) * t204 - t84) * t282;
t336 = t142 * t37 + t204 * t36 + t206 * t313 + t312 * t84;
t116 = t204 * t187;
t335 = qJD(3) * (t116 * t282 - t187 * t206) - t164 * t310 - t189 * t36;
t39 = t185 * t72 + t332 * t76;
t32 = qJ(6) * t282 + t39;
t205 = t332 * t158 + t185 * t159;
t61 = t205 * qJD(5) + t332 * t145 + t259 * t296;
t327 = -t32 + t61;
t326 = -pkin(5) * t282 - t325;
t324 = t39 - t61;
t323 = t313 * pkin(5) - t312 * qJ(6) - qJD(6) * t142 + t223;
t70 = pkin(9) * t138 + t78;
t318 = t185 * t70;
t317 = t188 * t77;
t227 = t189 * t245;
t311 = -t186 * t227 + t185 * t251 + t187 * t248 - (t185 * t277 + t187 * t200) * t188 - t340;
t69 = -pkin(9) * t139 + t77;
t25 = t332 * t69 - t318;
t309 = pkin(4) * t243 + qJD(6) - t25;
t308 = qJD(3) * t205;
t307 = t101 * t186;
t306 = t101 * t187;
t305 = t131 * t186;
t304 = t131 * t187;
t303 = t138 * t174;
t302 = t139 * t138;
t300 = t174 * t186;
t299 = t174 * t187;
t298 = t174 * t188;
t291 = t189 * t101;
t191 = qJD(3) ^ 2;
t290 = t191 * t187;
t289 = t191 * t189;
t192 = qJD(1) ^ 2;
t288 = t192 * qJ(2);
t60 = pkin(4) * t174 + t69;
t19 = t332 * t60 - t318;
t287 = qJD(6) - t19;
t284 = -t191 - t192;
t281 = qJD(3) * t100;
t270 = t139 * qJD(4);
t269 = qJD(1) * qJD(3);
t264 = qJD(2) * t267;
t262 = t332 * t70;
t261 = t186 * t293;
t260 = t189 * t192 * t187;
t181 = -pkin(4) * t188 - pkin(3);
t247 = t164 * t282;
t177 = t189 * t269;
t26 = t101 * pkin(9) + (pkin(4) * qJD(1) - t166 * t186) * t277 + t198;
t30 = pkin(9) * t203 + t42;
t240 = -t185 * t26 - t60 * t243 + t70 * t271 - t332 * t30;
t239 = t185 * t30 + t70 * t243 - t332 * t26 + t60 * t271;
t237 = qJD(1) * t104 + t78;
t234 = -t131 + t301;
t137 = pkin(4) * t295 - t189 * t190;
t233 = -t138 + t278;
t232 = -t139 + t280;
t231 = qJD(1) + t274;
t230 = pkin(5) * t177;
t229 = -t100 * t37 + t205 * t36 - t61 * t84;
t24 = t185 * t69 + t262;
t224 = pkin(4) * t271 - t24;
t219 = t115 * t37 + t59 * t84;
t216 = -t186 * t78 - t317;
t215 = t186 * t77 - t188 * t78;
t214 = t232 * t187;
t213 = t234 * qJD(3);
t148 = t164 * qJD(6);
t168 = qJ(6) * t177;
t1 = t168 + t148 - t240;
t212 = t164 * t19 + t240;
t20 = t185 * t60 + t262;
t211 = t164 * t20 - t239;
t49 = -t185 * t94 + t332 * t82;
t10 = t185 * t47 + t82 * t243 - t271 * t94 + t332 * t52;
t207 = -t204 * t37 + t313 * t84;
t102 = t348 * pkin(4) + t187 * t276;
t2 = -t230 + t239;
t199 = t203 * t188;
t117 = -t185 * t295 + t189 * t258;
t57 = -t185 * t254 + t188 * t228 + t189 * t91;
t197 = t115 * t36 - t117 * t37 - t206 * t59 + t57 * t84;
t74 = -pkin(4) * t203 + t166 * t279;
t196 = -t114 * t36 - t116 * t37 - t206 * t311 + t310 * t84;
t195 = t84 * t279 + (-t114 * t269 - t37) * t189 + t311 * t164;
t193 = qJD(4) * t216 - t43 * t186 + t42 * t188;
t182 = qJ(2) * t264;
t180 = -t332 * pkin(4) - pkin(5);
t176 = pkin(4) * t185 + qJ(6);
t160 = t187 * t177;
t105 = t164 * t277 + t160;
t103 = t135 - t261;
t81 = -pkin(5) * t204 - qJ(6) * t142 + t181;
t68 = -t104 * qJD(4) - t186 * t252 + t120;
t66 = pkin(5) * t115 - qJ(6) * t117 + t137;
t46 = -t187 * pkin(5) - t49;
t45 = qJ(6) * t187 + t322;
t41 = pkin(4) * t139 + t51;
t18 = t312 * t164 + (qJD(3) * t142 - t206) * t282;
t17 = t164 * qJ(6) + t20;
t16 = -t164 * pkin(5) + t287;
t13 = pkin(5) * t59 + qJ(6) * t57 - qJD(6) * t117 + t102;
t12 = -t117 * t36 - t206 * t57;
t9 = -t36 * t142 + t206 * t312;
t8 = -t57 * t164 - t36 * t187 + (qJD(1) * t117 + t206) * t277;
t7 = -pkin(5) * t277 - t11;
t6 = qJ(6) * t277 + qJD(6) * t187 + t10;
t5 = t37 * pkin(5) + t36 * qJ(6) - qJD(6) * t206 + t74;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, t182, -0.2e1 * t160, 0.2e1 * t285 * t269, -t290, 0.2e1 * t160, -t289, 0, -t190 * t290 + (qJ(2) * t277 + qJD(2) * t187) * t267, -t190 * t289 + (-qJ(2) * t279 + qJD(2) * t189) * t267, 0, t182, -t139 * t202 - t188 * t291 (-t138 * t188 + t139 * t186) * t279 + (t199 + t307 + (-t138 * t186 - t139 * t188) * qJD(4)) * t189, -t174 * t250 - t306 + (t139 * t189 + (qJD(1) * t184 - t299) * t188) * qJD(3), -t138 * t348 - t203 * t295, -t174 * t249 - t286 * t187 + (t138 * t189 + (t285 * qJD(1) + t299) * t186) * qJD(3), t174 * t277 + t160, t68 * t174 + (t43 + (-t138 * t190 - t305) * qJD(3)) * t187 + (-t190 * t286 + t131 * t273 + (t186 * t146 + t77 + (t103 + t261) * qJD(1)) * qJD(3)) * t189, -t67 * t174 - t42 * t187 + (t101 * t190 - t131 * t275) * t189 + (-t237 * t189 + (t139 * t190 + t188 * t234) * t187) * qJD(3), t67 * t138 - t104 * t286 - t68 * t139 + t103 * t101 + (t186 * t237 + t317) * t279 + (qJD(4) * t215 - t42 * t186 - t43 * t188) * t189, t43 * t103 + t42 * t104 - t213 * t293 + t78 * t67 + t77 * t68, t12, t197, t8, t219, -t338, t105, t102 * t84 + t11 * t164 + t74 * t115 + t137 * t37 - t239 * t187 + t95 * t59 + (qJD(1) * t49 + t19) * t277, -t10 * t164 + t102 * t206 + t74 * t117 - t137 * t36 + t240 * t187 - t95 * t57 + (-qJD(1) * t322 - t20) * t277, -t10 * t84 - t11 * t206 + t115 * t240 + t117 * t239 + t19 * t57 - t20 * t59 - t322 * t37 + t36 * t49, t10 * t20 + t102 * t95 + t11 * t19 + t137 * t74 - t239 * t49 - t240 * t322, t12, t8, -t197, t105, t338, t219, t5 * t115 + t13 * t84 - t7 * t164 - t2 * t187 + t31 * t59 + t66 * t37 + (-qJD(1) * t46 - t16) * t277, -t1 * t115 + t117 * t2 - t16 * t57 - t17 * t59 + t206 * t7 - t36 * t46 - t37 * t45 - t6 * t84, t1 * t187 - t5 * t117 - t13 * t206 + t6 * t164 + t31 * t57 + t66 * t36 + (qJD(1) * t45 + t17) * t277, t1 * t45 + t13 * t31 + t16 * t7 + t17 * t6 + t2 * t46 + t5 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, -t288, 0, 0, 0, 0, 0, 0, t284 * t187, t284 * t189, 0, -t288, 0, 0, 0, 0, 0, 0, -t189 * t286 - t231 * t298 + (-t138 * t187 - t174 * t295) * qJD(3), t291 + t231 * t300 + (-t174 * t292 + (t139 - t256) * t187) * qJD(3) (-t138 * t231 + t139 * t277 - t306) * t186 + (t138 * t277 + t139 * t231 + t187 * t203) * t188, -t215 * t277 + t216 * qJD(1) + (-t213 + t193) * t187, 0, 0, 0, 0, 0, 0, t195, -t335, t196, t114 * t239 - t116 * t240 - t74 * t189 + t19 * t311 - t20 * t310 + t279 * t95, 0, 0, 0, 0, 0, 0, t195, t196, t335, t1 * t116 + t2 * t114 - t16 * t311 - t17 * t310 - t5 * t189 + t279 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, -t285 * t192, 0, -t260, 0, 0, -t189 * t288, t187 * t288, 0, 0, t139 * t298 - t307 (-t101 + t303) * t188 + (qJD(1) * t214 - t270 - t286) * t186, t174 * t273 + (t174 * t294 + t189 * t232) * qJD(1), -t138 * t300 + t199, -t174 * t275 + (-t186 * t299 + t189 * t233) * qJD(1), -t174 * t282, -pkin(3) * t286 - t92 * t174 - t233 * t146 + (-pkin(8) * t298 + t305) * qJD(4) + (-t77 * t189 + (qJD(3) * t221 + t304) * t186) * qJD(1), pkin(3) * t101 + t93 * t174 + t166 * t214 + (pkin(8) * t300 + t131 * t188) * qJD(4) + (t189 * t78 + (-pkin(8) * t277 + t304) * t188) * qJD(1), -t93 * t138 + t92 * t139 + ((-qJD(4) * t138 - t101) * pkin(8) + t342) * t186 + ((t203 + t270) * pkin(8) + t343) * t188, -t77 * t92 - t78 * t93 + (-t131 - t321) * t146 + t193 * pkin(8), t9, -t336, t18, t207, -t337, -t247, -t74 * t204 + t181 * t37 + t313 * t95 + t223 * t84 - t325 * t164 + (-t19 + t308) * t282, t74 * t142 - t181 * t36 + t312 * t95 + t223 * t206 + t324 * t164 + (t20 - t281) * t282, t142 * t239 - t19 * t312 - t20 * t313 - t204 * t240 + t206 * t325 + t39 * t84 + t229, -t100 * t240 + t74 * t181 - t19 * t325 - t20 * t324 - t205 * t239 + t223 * t95, t9, t18, t336, -t247, t337, t207, -t5 * t204 + t81 * t37 + t323 * t84 + t313 * t31 + t326 * t164 + (t16 + t308) * t282, t1 * t204 + t2 * t142 + t16 * t312 - t17 * t313 - t206 * t326 + t32 * t84 + t229, -t5 * t142 + t81 * t36 - t323 * t206 - t312 * t31 + t327 * t164 + (-t17 + t281) * t282, t1 * t100 - t16 * t326 + t17 * t327 - t2 * t205 + t31 * t323 + t5 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, -t138 ^ 2 + t139 ^ 2, -t101 - t303, t302, t139 * t174 + t203, t177, -t131 * t139 - t342, -t131 * t138 - t343, 0, 0, t351, -t263, t347, -t351, -t350, t177, t24 * t164 - t344 + (qJD(1) * t227 - t139 * t84 - t164 * t271) * pkin(4) - t239, t25 * t164 + t352 + (-t139 * t206 - t164 * t243 - t177 * t185) * pkin(4) + t240, -t19 * t84 + t20 * t206 - t24 * t206 + t25 * t84 + (t332 * t36 - t185 * t37 + (t185 * t206 - t332 * t84) * qJD(5)) * pkin(4), t19 * t24 - t20 * t25 + (-t332 * t239 - t139 * t95 - t185 * t240 + (-t185 * t19 + t332 * t20) * qJD(5)) * pkin(4), t351, t347, t263, t177, t350, -t351, -t331 - t41 * t84 - t224 * t164 + (pkin(5) - t180) * t177 - t239, -t176 * t37 - t180 * t36 + (t17 + t224) * t206 + (t16 - t309) * t84, t164 * t309 + t176 * t177 + t206 * t41 + t1 - t353, t1 * t176 + t16 * t224 + t17 * t309 + t2 * t180 - t31 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, -t263, t347, -t351, -t350, t177, t211 - t344, t212 + t352, 0, 0, t351, t347, t263, t177, t350, -t351, -t51 * t84 + t211 + 0.2e1 * t230 - t331, pkin(5) * t36 - t37 * qJ(6) + (t17 - t20) * t206 + (t16 - t287) * t84, t206 * t51 + 0.2e1 * t148 + 0.2e1 * t168 - t212 - t353, -t2 * pkin(5) + t1 * qJ(6) - t16 * t20 + t17 * t287 - t31 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177 + t351, t347, -t164 ^ 2 - t334, -t164 * t17 + t2 + t331;];
tauc_reg  = t3;
