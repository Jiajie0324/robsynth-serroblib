% Calculate vector of inverse dynamics joint torques for
% S6RRPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRP1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRRP1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:39:00
% EndTime: 2019-03-09 11:41:13
% DurationCPUTime: 116.43s
% Computational Cost: add. (63625->1563), mult. (63798->1931), div. (0->0), fcn. (58061->10), ass. (0->776)
t1514 = -Icges(6,4) - Icges(7,4);
t1440 = Icges(6,1) + Icges(7,1);
t1469 = Icges(6,5) + Icges(7,5);
t1468 = -Icges(6,2) - Icges(7,2);
t1467 = Icges(6,6) + Icges(7,6);
t1513 = Icges(3,3) + Icges(4,3);
t751 = qJ(2) + pkin(10);
t719 = sin(t751);
t720 = cos(t751);
t757 = sin(qJ(2));
t760 = cos(qJ(2));
t1476 = Icges(3,5) * t760 + Icges(4,5) * t720 - Icges(3,6) * t757 - Icges(4,6) * t719;
t759 = cos(qJ(5));
t1512 = t1514 * t759;
t756 = sin(qJ(5));
t1511 = t1514 * t756;
t1510 = -t1467 * t756 + t1469 * t759;
t1509 = t1468 * t756 - t1512;
t1508 = t1440 * t759 + t1511;
t761 = cos(qJ(1));
t1507 = t1513 * t761;
t1505 = Icges(6,3) + Icges(7,3);
t758 = sin(qJ(1));
t1164 = t758 * t760;
t1167 = t757 * t758;
t1172 = t720 * t758;
t1174 = t719 * t758;
t1477 = -Icges(3,5) * t1164 - Icges(4,5) * t1172 + Icges(3,6) * t1167 + Icges(4,6) * t1174 + t1507;
t1496 = t1476 * t761 + t1513 * t758;
t1230 = Icges(4,6) * t761;
t481 = Icges(4,4) * t1172 - Icges(4,2) * t1174 - t1230;
t1231 = Icges(3,6) * t761;
t548 = Icges(3,4) * t1164 - Icges(3,2) * t1167 - t1231;
t1506 = t481 * t719 + t548 * t757;
t1238 = Icges(4,5) * t761;
t670 = Icges(4,4) * t1174;
t483 = Icges(4,1) * t1172 - t1238 - t670;
t1239 = Icges(3,5) * t761;
t694 = Icges(3,4) * t1167;
t550 = Icges(3,1) * t1164 - t1239 - t694;
t1452 = -t483 * t720 - t550 * t760 + t1506;
t1406 = -t1452 * t758 + t1477 * t761;
t1247 = Icges(4,4) * t719;
t602 = Icges(4,1) * t720 - t1247;
t484 = Icges(4,5) * t758 + t602 * t761;
t1248 = Icges(3,4) * t757;
t663 = Icges(3,1) * t760 - t1248;
t551 = Icges(3,5) * t758 + t663 * t761;
t1504 = -t551 * t1164 - t484 * t1172;
t724 = qJ(4) + t751;
t703 = sin(t724);
t704 = cos(t724);
t1478 = -t1467 * t704 + t1509 * t703;
t1457 = -t1469 * t704 + t1508 * t703;
t1503 = Icges(3,5) * t757 + Icges(4,5) * t719 + Icges(3,6) * t760 + Icges(4,6) * t720;
t1502 = t1510 * t704;
t1501 = t1509 * t704;
t1500 = t1508 * t704;
t1499 = -t1467 * t759 - t1469 * t756;
t1498 = t1468 * t759 + t1511;
t1497 = -t1440 * t756 + t1512;
t1181 = t703 * t761;
t1459 = -t1505 * t704 + t1510 * t703;
t1160 = t761 * t756;
t1165 = t758 * t759;
t564 = -t704 * t1160 + t1165;
t1163 = t759 * t761;
t1168 = t756 * t758;
t565 = t1163 * t704 + t1168;
t1352 = t1181 * t1459 + t1457 * t565 + t1478 * t564;
t291 = Icges(7,5) * t565 + Icges(7,6) * t564 + Icges(7,3) * t1181;
t294 = Icges(6,5) * t565 + Icges(6,6) * t564 + Icges(6,3) * t1181;
t1460 = t291 + t294;
t528 = Icges(7,4) * t564;
t303 = Icges(7,1) * t565 + Icges(7,5) * t1181 + t528;
t531 = Icges(6,4) * t564;
t306 = Icges(6,1) * t565 + Icges(6,5) * t1181 + t531;
t1479 = t303 + t306;
t1242 = Icges(7,4) * t565;
t297 = Icges(7,2) * t564 + Icges(7,6) * t1181 + t1242;
t1245 = Icges(6,4) * t565;
t300 = Icges(6,2) * t564 + Icges(6,6) * t1181 + t1245;
t1480 = t297 + t300;
t1411 = t1181 * t1460 + t1479 * t565 + t1480 * t564;
t1182 = t703 * t758;
t562 = t1168 * t704 + t1163;
t526 = Icges(7,4) * t562;
t563 = t1165 * t704 - t1160;
t302 = -Icges(7,1) * t563 - Icges(7,5) * t1182 + t526;
t529 = Icges(6,4) * t562;
t305 = -Icges(6,1) * t563 - Icges(6,5) * t1182 + t529;
t1347 = t302 + t305;
t527 = Icges(7,4) * t563;
t295 = -Icges(7,2) * t562 + Icges(7,6) * t1182 + t527;
t530 = Icges(6,4) * t563;
t298 = -Icges(6,2) * t562 + Icges(6,6) * t1182 + t530;
t1481 = t295 + t298;
t289 = Icges(7,5) * t563 - Icges(7,6) * t562 + Icges(7,3) * t1182;
t292 = Icges(6,5) * t563 - Icges(6,6) * t562 + Icges(6,3) * t1182;
t1482 = t289 + t292;
t1412 = t1181 * t1482 - t1347 * t565 + t1481 * t564;
t1079 = qJD(5) * t761;
t728 = qJD(2) * t758;
t656 = qJD(4) * t758 + t728;
t523 = t1079 * t703 + t656;
t1080 = qJD(5) * t758;
t750 = qJD(2) + qJD(4);
t657 = t750 * t761;
t524 = -t1080 * t703 + t657;
t1082 = qJD(5) * t704;
t651 = qJD(1) - t1082;
t1418 = t1352 * t651 + t1411 * t523 - t1412 * t524;
t1353 = t1182 * t1459 + t1457 * t563 - t1478 * t562;
t1413 = t1182 * t1460 + t1479 * t563 - t1480 * t562;
t1414 = t1182 * t1482 - t1347 * t563 - t1481 * t562;
t1419 = t1353 * t651 + t1413 * t523 - t1414 * t524;
t599 = Icges(4,2) * t720 + t1247;
t700 = Icges(4,4) * t720;
t601 = Icges(4,1) * t719 + t700;
t660 = Icges(3,2) * t760 + t1248;
t738 = Icges(3,4) * t760;
t662 = Icges(3,1) * t757 + t738;
t1474 = t599 * t719 - t601 * t720 + t660 * t757 - t662 * t760;
t1495 = t1496 * t761 + t1504;
t1162 = t760 * t761;
t1171 = t720 * t761;
t1325 = -t551 * t1162 - t484 * t1171 - t1496 * t758;
t1494 = -t550 * t1162 - t483 * t1171 + t1477 * t758;
t932 = -Icges(4,2) * t719 + t700;
t482 = Icges(4,6) * t758 + t761 * t932;
t933 = -Icges(3,2) * t757 + t738;
t549 = Icges(3,6) * t758 + t761 * t933;
t1493 = t482 * t719 + t549 * t757;
t1057 = t703 * t657;
t975 = qJD(1) * t704 - qJD(5);
t1308 = t758 * t975 + t1057;
t879 = t759 * t651;
t274 = t1308 * t756 + t761 * t879;
t878 = t651 * t756;
t275 = -t1308 * t759 + t761 * t878;
t1086 = qJD(1) * t758;
t1031 = t703 * t1086;
t1052 = t704 * t657;
t834 = -t1031 + t1052;
t149 = Icges(7,5) * t275 + Icges(7,6) * t274 + Icges(7,3) * t834;
t151 = Icges(6,5) * t275 + Icges(6,6) * t274 + Icges(6,3) * t834;
t1491 = t149 + t151;
t1170 = t750 * t758;
t1058 = t703 * t1170;
t276 = t758 * t879 + (-t761 * t975 + t1058) * t756;
t1184 = t703 * t750;
t277 = t975 * t1163 + (-t1184 * t759 + t878) * t758;
t1085 = qJD(1) * t761;
t835 = t1085 * t703 + t1170 * t704;
t150 = Icges(7,5) * t277 + Icges(7,6) * t276 + Icges(7,3) * t835;
t152 = Icges(6,5) * t277 + Icges(6,6) * t276 + Icges(6,3) * t835;
t1490 = t150 + t152;
t153 = Icges(7,4) * t275 + Icges(7,2) * t274 + Icges(7,6) * t834;
t155 = Icges(6,4) * t275 + Icges(6,2) * t274 + Icges(6,6) * t834;
t1489 = t153 + t155;
t154 = Icges(7,4) * t277 + Icges(7,2) * t276 + Icges(7,6) * t835;
t156 = Icges(6,4) * t277 + Icges(6,2) * t276 + Icges(6,6) * t835;
t1488 = t154 + t156;
t157 = Icges(7,1) * t275 + Icges(7,4) * t274 + Icges(7,5) * t834;
t159 = Icges(6,1) * t275 + Icges(6,4) * t274 + Icges(6,5) * t834;
t1487 = t157 + t159;
t158 = Icges(7,1) * t277 + Icges(7,4) * t276 + Icges(7,5) * t835;
t160 = Icges(6,1) * t277 + Icges(6,4) * t276 + Icges(6,5) * t835;
t1486 = t158 + t160;
t1405 = -t1167 * t549 - t1174 * t482 - t1495;
t1166 = t757 * t761;
t1173 = t719 * t761;
t1404 = -t1166 * t548 - t1173 * t481 - t1494;
t1403 = -t1166 * t549 - t1173 * t482 - t1325;
t1485 = t1502 * t750 + (qJD(5) * t1499 + t1505 * t750) * t703;
t1484 = t1501 * t750 + (qJD(5) * t1498 + t1467 * t750) * t703;
t1483 = t1500 * t750 + (t1497 * qJD(5) + t1469 * t750) * t703;
t1400 = t481 * t720 + t483 * t719 + t548 * t760 + t550 * t757;
t1399 = t482 * t720 + t484 * t719 + t549 * t760 + t551 * t757;
t1475 = t1503 * qJD(2);
t1473 = -t599 * t720 - t601 * t719 - t660 * t760 - t662 * t757;
t1472 = t484 * t720 + t551 * t760 - t1493;
t1471 = t1457 * t759 - t1478 * t756;
t1367 = t1503 * t761;
t1366 = t1503 * t758;
t754 = -qJ(6) - pkin(9);
t1270 = pkin(9) + t754;
t1331 = t1270 * t703;
t690 = t704 * pkin(4);
t948 = t563 * rSges(7,1) - t562 * rSges(7,2);
t1177 = t704 * t758;
t713 = pkin(5) * t759 + pkin(4);
t585 = t713 * t1177;
t958 = pkin(5) * t1160 - t585;
t1155 = (t690 + t1331) * t758 + t958 - rSges(7,3) * t1182 - t948;
t1075 = qJD(6) * t761;
t632 = t703 * t1075;
t1470 = t1155 * t651 + t632;
t1402 = -t1474 * t758 - t1367;
t1401 = -t1474 * t761 + t1366;
t1466 = t1496 * qJD(1);
t952 = t563 * rSges(6,1) - t562 * rSges(6,2);
t308 = rSges(6,3) * t1182 + t952;
t1268 = rSges(6,1) * t759;
t951 = -rSges(6,2) * t756 + t1268;
t438 = -rSges(6,3) * t704 + t703 * t951;
t1465 = -t308 * t651 - t524 * t438;
t1464 = t761 ^ 2;
t1425 = t1181 * t1490 - t1347 * t275 + t1481 * t274 + t1482 * t834 + t1486 * t565 + t1488 * t564;
t1424 = t1181 * t1491 + t1460 * t834 + t1479 * t275 + t1480 * t274 + t1487 * t565 + t1489 * t564;
t1423 = t1182 * t1490 - t1347 * t277 + t1481 * t276 + t1482 * t835 + t1486 * t563 - t1488 * t562;
t1422 = t1182 * t1491 + t1460 * t835 + t1479 * t277 + t1480 * t276 + t1487 * t563 - t1489 * t562;
t1361 = t1181 * t1485 + t1457 * t275 + t1459 * t834 + t1478 * t274 + t1483 * t565 + t1484 * t564;
t1463 = t1182 * t1485 + t1457 * t277 + t1459 * t835 + t1478 * t276 + t1483 * t563 - t1484 * t562;
t902 = -t295 * t756 - t302 * t759;
t129 = -t289 * t704 + t703 * t902;
t900 = -t298 * t756 - t305 * t759;
t131 = -t292 * t704 + t703 * t900;
t1462 = t129 + t131;
t901 = -t297 * t756 + t303 * t759;
t130 = -t291 * t704 + t703 * t901;
t899 = -t300 * t756 + t306 * t759;
t132 = -t294 * t704 + t703 * t899;
t1461 = t130 + t132;
t1351 = -t1459 * t704 + t1471 * t703;
t1456 = -t703 * rSges(7,3) - t704 * t713;
t569 = t932 * qJD(2);
t570 = t602 * qJD(2);
t617 = t933 * qJD(2);
t618 = t663 * qJD(2);
t1455 = qJD(1) * t1503 + t1473 * qJD(2) - t569 * t719 + t570 * t720 - t617 * t757 + t618 * t760;
t843 = qJD(2) * t599;
t320 = -t761 * t843 + (-t758 * t932 + t1230) * qJD(1);
t845 = qJD(2) * t601;
t322 = -t761 * t845 + (-t602 * t758 + t1238) * qJD(1);
t844 = qJD(2) * t660;
t375 = -t761 * t844 + (-t758 * t933 + t1231) * qJD(1);
t846 = qJD(2) * t662;
t377 = -t761 * t846 + (-t663 * t758 + t1239) * qJD(1);
t1454 = -qJD(2) * t1399 - t320 * t719 + t322 * t720 - t375 * t757 + t377 * t760 + t1466;
t321 = qJD(1) * t482 - t758 * t843;
t323 = qJD(1) * t484 - t758 * t845;
t376 = qJD(1) * t549 - t758 * t844;
t378 = qJD(1) * t551 - t758 * t846;
t1453 = qJD(1) * t1477 + qJD(2) * t1400 + t321 * t719 - t323 * t720 + t376 * t757 - t378 * t760;
t1451 = t1403 * t758 - t1404 * t761;
t1450 = t1405 * t758 - t1406 * t761;
t1262 = pkin(5) * qJD(5);
t1059 = t759 * t1262;
t1278 = pkin(5) * t756;
t1061 = qJD(1) * t1278;
t1449 = t275 * rSges(7,1) + t274 * rSges(7,2) + rSges(7,3) * t1052 + t754 * t1031 + t758 * t1059 + t761 * t1061 + t632;
t1023 = t704 * t1080;
t1448 = -t1023 + t1086;
t1447 = (t1505 * t703 - t1471 + t1502) * t651 + (t1459 * t758 + t900 + t902) * t524 + (-t1459 * t761 - t899 - t901) * t523;
t1446 = t1474 * qJD(1) + qJD(2) * t1476;
t1445 = qJD(1) * t1452 - t1475 * t758 + t1466;
t1444 = -t1475 * t761 + (-t1476 * t758 - t1472 + t1507) * qJD(1);
t1340 = (t1468 * t563 - t1347 - t526 - t529) * t524 - (t1468 * t565 + t1479 + t528 + t531) * t523 - (t1498 * t703 + t1457) * t651;
t1443 = rSges(7,1) + pkin(5);
t1070 = qJD(1) * qJD(3);
t1280 = pkin(2) * t757;
t1071 = qJD(1) * qJD(2);
t709 = t758 * t1071;
t627 = -qJDD(2) * t761 + t709;
t1036 = qJDD(3) * t758 + t761 * t1070 + t627 * t1280;
t755 = -qJ(3) - pkin(7);
t711 = t761 * t755;
t746 = t760 * pkin(2);
t714 = t746 + pkin(1);
t1100 = t758 * t714 + t711;
t747 = t761 * pkin(7);
t673 = pkin(1) * t758 - t747;
t476 = t673 - t1100;
t1127 = t476 - t673;
t489 = rSges(4,1) * t1172 - rSges(4,2) * t1174 - t761 * rSges(4,3);
t1038 = -t489 + t1127;
t1066 = pkin(2) * t1167;
t681 = qJD(2) * t1066;
t727 = qJD(3) * t761;
t1097 = t681 + t727;
t691 = t755 * t1086;
t1032 = t691 + t1097;
t1272 = pkin(1) - t714;
t745 = t758 * pkin(7);
t354 = (-t1272 * t761 - t745) * qJD(1) - t1032;
t674 = t761 * pkin(1) + t745;
t624 = t674 * qJD(1);
t1148 = -t354 - t624;
t762 = qJD(2) ^ 2;
t1161 = t760 * t762;
t701 = t720 * rSges(4,1);
t1326 = -rSges(4,2) * t719 + t701;
t1265 = rSges(4,2) * t720;
t604 = rSges(4,1) * t719 + t1265;
t558 = t604 * t758;
t740 = t758 * rSges(4,3);
t325 = -qJD(2) * t558 + (t1326 * t761 + t740) * qJD(1);
t571 = t1326 * qJD(2);
t108 = t604 * t627 + (-pkin(2) * t1161 - qJD(2) * t571) * t761 + t1038 * qJDD(1) + (-t325 + t1148) * qJD(1) + t1036;
t1442 = t108 - g(1);
t1441 = (t1471 * t750 - t1485) * t704 + (t1483 * t759 - t1484 * t756 + t1459 * t750 + (-t1457 * t756 - t1478 * t759) * qJD(5)) * t703;
t1060 = t756 * t1262;
t609 = pkin(4) * t1058;
t1271 = pkin(4) - t713;
t828 = -t1271 * t704 - t1331;
t949 = rSges(7,1) * t277 + rSges(7,2) * t276;
t977 = t713 * t750 - qJD(6);
t1159 = t609 + (qJD(1) * t828 - t1059) * t761 + (t1061 - t977 * t703 + (-t1270 * t750 - t1060) * t704) * t758 + rSges(7,3) * t835 + t949;
t610 = pkin(9) * t1052;
t1158 = -rSges(7,3) * t1031 - t610 + (pkin(9) * t1086 + t1271 * t657) * t703 + ((-t750 * t754 - t1060) * t761 + t1271 * t1086) * t704 + t1449;
t1439 = t1401 * qJD(1);
t1330 = t1271 * t703;
t1267 = rSges(7,1) * t759;
t947 = -rSges(7,2) * t756 + t1267;
t1145 = t703 * t947 - t1330 + (-rSges(7,3) + t1270) * t704;
t1176 = t704 * t759;
t1178 = t704 * t756;
t855 = rSges(7,1) * t1176 - rSges(7,2) * t1178 - t1456;
t1438 = (-t1467 * t563 - t1469 * t562) * t524 + (t1467 * t565 - t1469 * t564) * t523 - t1499 * t651 * t703;
t1169 = t754 * t761;
t1175 = t704 * t761;
t1437 = t565 * rSges(7,1) + t564 * rSges(7,2) + rSges(7,3) * t1181 + pkin(5) * t1168 - t1169 * t703 + t713 * t1175;
t702 = pkin(3) * t720;
t1341 = -t746 - t702;
t620 = pkin(1) - t1341;
t749 = -pkin(8) + t755;
t1114 = -t758 * t620 - t761 * t749;
t1436 = t1114 - t948;
t1434 = t1402 * qJD(1);
t1068 = qJDD(5) * t703;
t1069 = qJD(1) * qJD(4);
t626 = qJDD(2) * t758 + t761 * t1071;
t498 = qJDD(4) * t758 + t761 * t1069 + t626;
t249 = qJD(5) * t834 + t1068 * t761 + t498;
t1067 = -qJDD(2) - qJDD(4);
t1081 = qJD(5) * t750;
t1083 = qJD(5) * t703;
t1094 = t758 * t1069 + t709;
t250 = (t1081 * t704 + t1068) * t758 + (qJD(1) * t1083 + t1067) * t761 + t1094;
t500 = -qJDD(5) * t704 + t1081 * t703 + qJDD(1);
t1428 = t1352 * t500 + t1361 * t651 + t1411 * t249 + t1412 * t250 + t1424 * t523 - t1425 * t524;
t1427 = t1353 * t500 + t1413 * t249 + t1414 * t250 + t1422 * t523 - t1423 * t524 + t1463 * t651;
t39 = (t750 * t902 - t150) * t704 + (-t154 * t756 + t158 * t759 + t289 * t750 + (-t295 * t759 + t302 * t756) * qJD(5)) * t703;
t41 = (t750 * t900 - t152) * t704 + (-t156 * t756 + t160 * t759 + t292 * t750 + (-t298 * t759 + t305 * t756) * qJD(5)) * t703;
t1421 = t39 + t41;
t40 = (t750 * t901 - t149) * t704 + (-t153 * t756 + t157 * t759 + t291 * t750 + (-t297 * t759 - t303 * t756) * qJD(5)) * t703;
t42 = (t750 * t899 - t151) * t704 + (-t155 * t756 + t159 * t759 + t294 * t750 + (-t300 * t759 - t306 * t756) * qJD(5)) * t703;
t1420 = t40 + t42;
t1417 = t1351 * t651 + t1461 * t523 - t1462 * t524;
t1416 = qJD(2) * t1450 + t1434;
t1415 = qJD(2) * t1451 + t1439;
t1410 = t1446 * t758 + t1455 * t761;
t1409 = -t1446 * t761 + t1455 * t758;
t1408 = qJD(2) * t1452 - t321 * t720 - t323 * t719 - t376 * t760 - t378 * t757;
t1407 = qJD(2) * t1472 + t320 * t720 + t322 * t719 + t375 * t760 + t377 * t757;
t655 = pkin(4) * t1175;
t522 = pkin(9) * t1181 + t655;
t1154 = -t522 + t1437;
t1054 = t703 * t1165;
t1056 = t703 * t1168;
t1110 = rSges(7,2) * t1056 + rSges(7,3) * t1177;
t652 = pkin(9) * t1177;
t1179 = t704 * t754;
t856 = -t1179 + t1330;
t1398 = -rSges(7,1) * t1054 + t758 * t856 + t1110 - t652;
t1053 = t703 * t1163;
t1055 = t703 * t1160;
t1108 = rSges(7,2) * t1055 + rSges(7,3) * t1175;
t654 = pkin(9) * t1175;
t1397 = -rSges(7,1) * t1053 + t761 * t856 + t1108 - t654;
t1183 = t703 * t754;
t1342 = t703 * pkin(9) + t690;
t1396 = t1342 + t1183 - t855;
t1395 = t1478 * t758;
t1394 = t1478 * t761;
t1393 = t1457 * t758;
t1392 = t1457 * t761;
t1109 = rSges(6,2) * t1056 + rSges(6,3) * t1177;
t405 = -rSges(6,1) * t1054 + t1109;
t687 = t703 * rSges(6,3);
t440 = rSges(6,1) * t1176 - rSges(6,2) * t1178 + t687;
t519 = -pkin(4) * t1182 + t652;
t979 = -qJD(1) * t519 - t1342 * t657;
t1391 = t1083 * t308 + t1448 * t438 + t405 * t651 + t524 * t440 - t979;
t1390 = t1467 * t703 + t1501;
t1389 = t1469 * t703 + t1500;
t1229 = Icges(5,6) * t761;
t462 = Icges(5,4) * t1177 - Icges(5,2) * t1182 - t1229;
t685 = Icges(5,4) * t704;
t576 = Icges(5,1) * t703 + t685;
t1388 = -t576 * t758 - t462;
t931 = -Icges(5,2) * t703 + t685;
t463 = Icges(5,6) * t758 + t761 * t931;
t1387 = -t576 * t761 - t463;
t1246 = Icges(5,4) * t703;
t577 = Icges(5,1) * t704 - t1246;
t465 = Icges(5,5) * t758 + t577 * t761;
t574 = Icges(5,2) * t704 + t1246;
t1386 = -t574 * t761 + t465;
t1385 = -t574 + t577;
t1384 = t576 + t931;
t1383 = t1447 * t703;
t1305 = (-t599 * t761 + t484) * t758 - (-Icges(4,2) * t1172 + t483 - t670) * t761;
t1306 = (-t660 * t761 + t551) * t758 - (-Icges(3,2) * t1164 + t550 - t694) * t761;
t818 = t548 * t761 - t549 * t758;
t819 = t481 * t761 - t482 * t758;
t1382 = -t1305 * t719 - t1306 * t757 + t819 * t720 + t818 * t760;
t1076 = qJD(6) * t758;
t1021 = t703 * t1076;
t1279 = pkin(3) * t719;
t1033 = -t728 * t1279 - t1097;
t677 = t761 * t714;
t981 = -t755 * t758 + t677;
t477 = t981 - t674;
t1124 = t477 + t674;
t1093 = -t749 + t755;
t584 = t761 * t620;
t389 = t1093 * t758 + t584 - t677;
t1040 = t389 + t1124;
t580 = pkin(4) * t703 - pkin(9) * t704;
t801 = (t522 + t1040) * qJD(1) - t656 * t580 + t1033;
t81 = -t1145 * t523 + t1154 * t651 + t1021 + t801;
t1002 = t81 * t1145;
t628 = -t1279 - t1280;
t603 = t628 * qJD(2);
t567 = t761 * t603;
t726 = qJD(3) * t758;
t1344 = t567 + t726;
t458 = t657 * t580;
t388 = t1100 + t1114;
t1042 = t388 + t1127;
t520 = t1342 * t758;
t969 = -t520 + t1042;
t774 = qJD(1) * t969 + t1344 - t458;
t80 = -t1145 * t524 + t1470 + t774;
t1003 = t80 * t1155;
t1078 = qJD(6) * t704;
t1084 = qJD(2) * t761;
t1135 = t477 * t1084 - t476 * t728;
t972 = t389 * t1084 - t388 * t728 + t1135;
t830 = t656 * t520 + t522 * t657 + t972;
t61 = t1154 * t524 - t1155 * t523 - t1078 + t830;
t1004 = t61 * t1154;
t1275 = g(2) * t758;
t1320 = g(1) * t761 + t1275;
t1381 = -(t703 * t1003 + (-t1002 * t761 - t1004 * t758) * t704) * qJD(5) - (-g(3) * t754 + t1320 * (-t713 - t1267)) * t703;
t1101 = t662 + t933;
t1102 = -t660 + t663;
t1112 = t601 + t932;
t1113 = -t599 + t602;
t1380 = (-t1101 * t757 + t1102 * t760 - t1112 * t719 + t1113 * t720) * qJD(1);
t1379 = t1459 * t651 + t1460 * t523 - t1482 * t524;
t1337 = t1461 * t761 + t1462 * t758;
t1378 = -t1461 * t758 + t1462 * t761;
t1336 = t1411 * t761 + t1412 * t758;
t1377 = -t1411 * t758 + t1412 * t761;
t1335 = t1413 * t761 + t1414 * t758;
t1376 = -t1413 * t758 + t1414 * t761;
t1375 = t1445 * t1464 + (t1454 * t758 + (-t1444 + t1453) * t761) * t758;
t1374 = t1453 * t1464 + (t1444 * t758 + (-t1445 + t1454) * t761) * t758;
t1180 = t704 * t750;
t1263 = rSges(7,2) * t759;
t946 = -rSges(7,1) * t756 - t1263;
t1157 = t947 * t1180 + t750 * t828 - t1078 + (rSges(7,3) * t750 + qJD(5) * t946 - t1060) * t703;
t1077 = qJD(6) * t750;
t867 = t1341 * t762;
t790 = qJDD(6) * t703 + t1077 * t704 + t867;
t495 = t1342 * t750;
t499 = t1067 * t761 + t1094;
t967 = t627 * t1279 + t1036;
t794 = qJDD(1) * t969 - t657 * t495 + t499 * t580 + t967;
t1106 = t620 - t714;
t679 = t749 * t1086;
t982 = t603 * t758 - t679;
t222 = t1085 * t1106 + t681 + t691 + t982;
t1049 = -t222 + t1148;
t314 = pkin(9) * t835 + qJD(1) * t655 - t609;
t974 = -t314 + t1049;
t24 = -t1159 * t651 - t1157 * t524 + t1155 * t500 + t1145 * t250 + t790 * t761 + (t974 - t1021) * qJD(1) + t794;
t1373 = (qJD(1) * t81 + t24) * t761;
t312 = t565 * rSges(6,1) + t564 * rSges(6,2) + rSges(6,3) * t1181;
t105 = t312 * t651 - t438 * t523 + t801;
t953 = rSges(6,1) * t277 + rSges(6,2) * t276;
t165 = rSges(6,3) * t835 + t953;
t950 = -rSges(6,1) * t756 - rSges(6,2) * t759;
t234 = t951 * t1180 + (rSges(6,3) * t750 + qJD(5) * t950) * t703;
t838 = t761 * t867;
t37 = qJD(1) * t974 - t165 * t651 - t234 * t524 + t250 * t438 - t308 * t500 + t794 + t838;
t1372 = (qJD(1) * t105 + t37) * t761;
t1030 = t719 * t1086;
t1029 = t757 * t1086;
t682 = pkin(2) * t1029;
t1103 = pkin(3) * t1030 + t682;
t525 = t580 * t1086;
t595 = t758 * t628;
t501 = t595 + t1066;
t978 = -qJD(1) * t501 + t682;
t1371 = t525 + t1103 - t978;
t1370 = -t704 * t1075 + t1145 * t1448 - t1396 * t524 + t1398 * t651 - t979;
t1369 = t1155 * t61 + t1002;
t1368 = t1476 * qJD(1);
t1362 = -rSges(6,3) - pkin(9);
t836 = -t1086 * t704 - t1057;
t313 = pkin(4) * t836 - pkin(9) * t1031 + t610;
t1307 = qJD(1) * t313 + qJDD(1) * t522 - t656 * t495 - t498 * t580;
t1027 = t757 * t1084;
t976 = pkin(2) * t1027;
t221 = t976 + t567 + (t1093 * t761 - t1106 * t758) * qJD(1);
t1350 = qJD(1) * t221 + qJDD(1) * t389;
t684 = qJD(6) * t703;
t718 = pkin(7) * t1085;
t1111 = qJD(1) * (-pkin(1) * t1086 + t718) + qJDD(1) * t674;
t353 = -t976 - t718 + t726 + (t1272 * t758 - t711) * qJD(1);
t941 = qJD(1) * t353 + qJDD(1) * t477 + t758 * t1070 + t1111;
t25 = (qJD(1) * t684 - qJDD(3)) * t761 + t1158 * t651 + t628 * t626 - t1157 * t523 + t1154 * t500 - t1145 * t249 + t790 * t758 + t941 + t1307 + t1350;
t1359 = t25 * t758;
t837 = -t604 - t1280;
t1356 = t761 * t837;
t630 = qJD(1) * t673;
t1345 = qJD(1) * t476 - t630;
t1343 = t1326 + t746;
t1339 = (t1497 * t703 - t1478) * t651 + (t1440 * t562 + t1481 + t527 + t530) * t524 + (t1440 * t564 - t1242 - t1245 - t1480) * t523;
t1338 = t1438 * t703;
t1332 = t1477 + t1493;
t688 = t704 * rSges(5,1);
t1327 = -rSges(5,2) * t703 + t688;
t1322 = t1351 * t500 + t1441 * t651;
t1046 = t275 * rSges(6,1) + t274 * rSges(6,2) + rSges(6,3) * t1052;
t163 = -rSges(6,3) * t1031 + t1046;
t775 = (-t1161 * t758 - t626 * t757) * pkin(2) - qJDD(3) * t761 + t941;
t768 = (-t1172 * t762 - t626 * t719) * pkin(3) + t775 + t1350;
t38 = t651 * t163 - t523 * t234 - t249 * t438 + t500 * t312 + t1307 + t768;
t1321 = t37 * t758 - t38 * t761;
t1319 = t308 * t1085 + t761 * t163 + t758 * t165;
t1277 = g(1) * t758;
t1318 = -g(2) * t761 + t1277;
t572 = Icges(5,5) * t703 + Icges(5,6) * t704;
t1191 = t572 * t761;
t1201 = t463 * t703;
t1224 = Icges(5,3) * t761;
t573 = Icges(5,5) * t704 - Icges(5,6) * t703;
t1317 = -t750 * t1191 + (-t465 * t704 - t573 * t758 + t1201 + t1224) * qJD(1);
t461 = Icges(5,3) * t758 + t573 * t761;
t1091 = qJD(1) * t461;
t1192 = t572 * t758;
t1237 = Icges(5,5) * t761;
t638 = Icges(5,4) * t1182;
t464 = Icges(5,1) * t1177 - t1237 - t638;
t892 = t462 * t703 - t464 * t704;
t1316 = qJD(1) * t892 - t1192 * t750 + t1091;
t884 = t574 * t703 - t576 * t704;
t1311 = qJD(1) * t884 + t573 * t750;
t1304 = -t1085 * t1155 + t1158 * t761 + t1159 * t758;
t1301 = qJD(1) * t1384 + t1386 * t656 - (-Icges(5,2) * t1177 + t464 - t638) * t657;
t1300 = t249 / 0.2e1;
t1299 = t250 / 0.2e1;
t1298 = t498 / 0.2e1;
t1297 = t499 / 0.2e1;
t1295 = -t523 / 0.2e1;
t1294 = t523 / 0.2e1;
t1293 = -t524 / 0.2e1;
t1292 = t524 / 0.2e1;
t1291 = t626 / 0.2e1;
t1290 = t627 / 0.2e1;
t1289 = -t651 / 0.2e1;
t1288 = t651 / 0.2e1;
t1287 = -t656 / 0.2e1;
t1286 = t656 / 0.2e1;
t1285 = -t657 / 0.2e1;
t1284 = t657 / 0.2e1;
t1282 = t758 / 0.2e1;
t1281 = -t761 / 0.2e1;
t1274 = -qJD(1) / 0.2e1;
t1273 = qJD(1) / 0.2e1;
t1269 = rSges(3,1) * t760;
t1259 = t39 * t524;
t1258 = t40 * t523;
t1257 = t41 * t524;
t1256 = t42 * t523;
t741 = t758 * rSges(3,3);
t739 = t758 * rSges(5,3);
t1255 = qJDD(1) / 0.2e1;
t1254 = -rSges(7,3) + t754;
t1221 = qJD(1) * t61;
t89 = t308 * t523 + t312 * t524 + t830;
t1219 = qJD(1) * t89;
t1218 = t105 * t758;
t1213 = t129 * t250;
t1212 = t130 * t249;
t1211 = t131 * t250;
t1210 = t132 * t249;
t578 = rSges(5,1) * t703 + rSges(5,2) * t704;
t1187 = t657 * t578;
t468 = rSges(5,1) * t1177 - rSges(5,2) * t1182 - t761 * rSges(5,3);
t970 = -t468 + t1042;
t141 = qJD(1) * t970 - t1187 + t1344;
t1209 = t141 * t758;
t832 = qJD(2) * t1356 + t726;
t188 = qJD(1) * t1038 + t832;
t1206 = t188 * t604;
t664 = rSges(3,1) * t757 + rSges(3,2) * t760;
t1028 = t664 * t1084;
t1096 = rSges(3,2) * t1167 + t761 * rSges(3,3);
t560 = rSges(3,1) * t1164 - t1096;
t1117 = -t560 - t673;
t337 = qJD(1) * t1117 - t1028;
t1205 = t337 * t758;
t1204 = t337 * t761;
t561 = rSges(3,1) * t1162 - rSges(3,2) * t1166 + t741;
t451 = t561 + t674;
t338 = qJD(1) * t451 - t664 * t728;
t594 = t664 * t761;
t1203 = t338 * t594;
t460 = Icges(5,5) * t1177 - Icges(5,6) * t1182 - t1224;
t1202 = t460 * t761;
t1156 = -t234 - t495;
t1149 = -t312 - t522;
t1147 = -t563 * rSges(7,2) - t1443 * t562;
t1146 = -t565 * rSges(7,2) + t1443 * t564;
t1144 = -t464 * t1175 - t758 * t460;
t1143 = t465 * t1175 + t758 * t461;
t469 = rSges(5,1) * t1175 - rSges(5,2) * t1181 + t739;
t1137 = t758 * t468 + t761 * t469;
t1134 = -t758 * t476 + t761 * t477;
t1065 = pkin(2) * t1166;
t596 = t761 * t628;
t502 = t596 + t1065;
t1133 = t502 * t1084 + t501 * t728;
t1128 = t758 * t520 + t761 * t522;
t1126 = -t477 - t389;
t490 = rSges(4,1) * t1171 - rSges(4,2) * t1173 + t740;
t1125 = -t477 - t490;
t1107 = rSges(6,2) * t1055 + rSges(6,3) * t1175;
t1105 = rSges(5,2) * t1031 + rSges(5,3) * t1085;
t1104 = rSges(4,2) * t1030 + rSges(4,3) * t1085;
t1099 = rSges(3,2) * t1029 + rSges(3,3) * t1085;
t1098 = t679 + t727;
t202 = -t758 * t884 - t1191;
t1074 = t202 * qJD(1);
t1062 = qJD(2) * t746;
t1050 = -t495 - t1157;
t272 = rSges(5,1) * t836 - rSges(5,2) * t1052 + t1105;
t517 = t578 * t758;
t273 = -t750 * t517 + (t1327 * t761 + t739) * qJD(1);
t1048 = t468 * t1085 + t761 * t272 + t758 * t273;
t1045 = t520 * t1085 + t761 * t313 + t758 * t314;
t1044 = t353 * t1084 + t354 * t728 - t626 * t476;
t1043 = -t476 * t1085 + t761 * t353 + t758 * t354;
t1041 = t522 - t1126;
t1035 = t652 + t1109;
t1034 = t654 + t1107;
t1026 = t760 * t1084;
t1022 = t704 * t1079;
t1016 = t1180 / 0.2e1;
t1015 = -pkin(1) - t1269;
t1013 = t1086 / 0.2e1;
t1012 = t1085 / 0.2e1;
t1011 = -t728 / 0.2e1;
t1010 = t728 / 0.2e1;
t1009 = -t1084 / 0.2e1;
t1008 = t1084 / 0.2e1;
t1000 = (-t758 ^ 2 - t1464) * t757;
t999 = (-t758 * t931 + t1229) * qJD(1) + t1386 * t750;
t998 = qJD(1) * t463 - t1170 * t574 + t464 * t750;
t997 = (-t577 * t758 + t1237) * qJD(1) + t1387 * t750;
t996 = qJD(1) * t465 + t1388 * t750;
t409 = t465 * t1177;
t995 = t461 * t761 - t409;
t518 = t578 * t761;
t994 = -t656 * t517 - t518 * t657;
t521 = -pkin(4) * t1181 + t654;
t992 = t656 * t519 + t521 * t657;
t991 = -t460 + t1201;
t988 = t1384 * t750;
t987 = t1385 * t750;
t986 = -qJD(1) * t518 - t1327 * t656;
t985 = qJD(1) * t521 - t1342 * t656;
t983 = -t749 * t758 + t584;
t980 = qJD(1) * t517 - t1327 * t657;
t971 = -t758 * t388 + t761 * t389 + t1134;
t968 = t758 * t308 + t761 * t312 + t1128;
t959 = (t1278 - t946) * t703;
t667 = rSges(2,1) * t761 - rSges(2,2) * t758;
t665 = rSges(2,1) * t758 + rSges(2,2) * t761;
t666 = -rSges(3,2) * t757 + t1269;
t945 = t758 * t81 + t761 * t80;
t104 = t1465 + t774;
t920 = t104 * t761 + t1218;
t142 = -t578 * t656 + (t469 + t1040) * qJD(1) + t1033;
t907 = -t141 * t761 - t142 * t758;
t898 = t308 * t761 - t312 * t758;
t324 = -t1084 * t1265 + (-t1084 * t719 - t1086 * t720) * rSges(4,1) + t1104;
t897 = t324 * t761 + t325 * t758;
t896 = -t338 * t758 - t1204;
t383 = -rSges(3,2) * t1026 + (-t1086 * t760 - t1027) * rSges(3,1) + t1099;
t593 = t664 * t758;
t384 = -qJD(2) * t593 + (t666 * t761 + t741) * qJD(1);
t895 = t383 * t761 + t384 * t758;
t223 = t462 * t704 + t464 * t703;
t888 = t489 * t758 + t490 * t761;
t885 = t560 * t758 + t561 * t761;
t877 = (-t1065 + t502) * qJD(1);
t876 = -t578 + t628;
t875 = -t580 + t628;
t873 = -t1177 * t754 + t1110;
t872 = -t1169 * t704 + t1108;
t871 = t1362 * t703 - t690;
t870 = -t388 * t1085 + t761 * t221 + t758 * t222 + t1043;
t869 = t1154 * t761 - t1155 * t758 + t1128;
t868 = -t620 + t1456;
t854 = -t438 + t875;
t847 = t892 * t758;
t840 = -qJD(2) * t702 - t1062;
t839 = -t1342 - t687;
t833 = t440 + t1342;
t831 = t875 - t1145;
t492 = t1327 * t750;
t823 = -t492 + t840;
t822 = -t495 + t840;
t821 = qJD(1) * t573 - t1191 * t656 + t1192 * t657;
t820 = t1145 * t80 - t1004;
t815 = -t234 + t822;
t814 = t870 + t1045;
t805 = t822 - t1157;
t802 = t221 * t1084 + t1126 * t627 + t222 * t728 - t626 * t388 + t1044;
t800 = qJD(1) * t388 + t1344 + t1345;
t793 = qJD(1) * t1385 + t1387 * t656 - t1388 * t657;
t407 = -rSges(6,1) * t1053 + t1107;
t792 = t308 * t1022 - t1023 * t312 + t523 * t405 + t407 * t524 + t992;
t791 = -t1022 * t438 + t312 * t1083 + t651 * t407 - t440 * t523 + t985;
t789 = t1320 * (-pkin(4) - t1268) * t703;
t788 = -t1022 * t1155 + t1397 * t524 + t1398 * t523 + t684 + t992;
t787 = t704 * t1076 + t1083 * t1154 + t1396 * t523 + t1397 * t651 + t985;
t785 = qJD(1) * t460 - t703 * t998 + t704 * t996;
t784 = -t703 * t999 + t704 * t997 + t1091;
t783 = qJD(1) * t572 - t703 * t988 + t704 * t987;
t776 = -qJD(1) * t520 - t458 + t800;
t772 = t657 * t313 + t656 * t314 + t498 * t520 - t499 * t522 + t802;
t765 = -t1301 * t703 + t793 * t704;
t112 = t1311 * t758 + t783 * t761;
t113 = -t1311 * t761 + t783 * t758;
t125 = t703 * t996 + t704 * t998;
t126 = t703 * t997 + t704 * t999;
t182 = -t847 - t1202;
t183 = -t1182 * t463 - t995;
t184 = -t1181 * t462 - t1144;
t185 = -t1181 * t463 + t1143;
t203 = -t761 * t884 + t1192;
t224 = t463 * t704 + t465 * t703;
t84 = t1316 * t758 + t785 * t761;
t85 = t1317 * t758 + t784 * t761;
t86 = -t1316 * t761 + t785 * t758;
t87 = -t1317 * t761 + t784 * t758;
t96 = -t182 * t657 + t183 * t656 + t1074;
t195 = t203 * qJD(1);
t97 = -t184 * t657 + t185 * t656 + t195;
t764 = (-t184 * t761 + t185 * t758) * t1298 + (-t182 * t761 + t183 * t758) * t1297 - t1417 * t1083 / 0.2e1 + (t97 + t1418) * t1012 + (t96 + t1419) * t1013 + ((t1175 * t1413 + t1353 * t703) * qJD(5) + ((qJD(5) * t1414 + t1379) * t704 + t1383) * t758 + (t1389 * t563 - t1390 * t562) * t651 + (t1393 * t563 - t1395 * t562) * t524 + (-t1392 * t563 + t1394 * t562) * t523) * t1292 + (qJD(1) * t1337 + t1420 * t758 - t1421 * t761) * t1288 + (qJD(1) * t1335 + t1422 * t758 - t1423 * t761) * t1293 + (qJD(1) * t1336 + t1424 * t758 - t1425 * t761) * t1294 + (qJD(1) * t113 + qJDD(1) * t202 + t182 * t499 + t183 * t498 + t656 * t87 - t657 * t86 + t1427) * t1281 + (qJD(1) * t112 + qJDD(1) * t203 + t184 * t499 + t185 * t498 + t656 * t85 - t657 * t84 + t1428) * t1282 - t1376 * t250 / 0.2e1 - t1377 * t249 / 0.2e1 - t1378 * t500 / 0.2e1 + (-t125 * t761 + t126 * t758 + (t223 * t758 + t224 * t761) * qJD(1)) * t1273 + ((t1177 * t1412 + t1352 * t703) * qJD(5) + ((qJD(5) * t1411 + t1379) * t704 + t1383) * t761 + (t1389 * t565 + t1390 * t564) * t651 + (t1393 * t565 + t1395 * t564) * t524 + (-t1392 * t565 - t1394 * t564) * t523) * t1295 + (-t223 * t761 + t224 * t758) * t1255 + ((qJD(5) * t1337 - t1447) * t704 + ((t1389 * t759 - t1390 * t756 + t1459) * t651 + (t1393 * t759 - t1395 * t756 - t1482) * t524 + (-t1392 * t759 + t1394 * t756 + t1460) * t523 + t1351 * qJD(5)) * t703) * t1289 + (t1301 * t704 + t793 * t703) * t1274 + (t758 * t765 - t761 * t821) * t1284 + (t758 * t87 - t761 * t86 + (t182 * t758 + t183 * t761) * qJD(1)) * t1285 + (t758 * t85 - t761 * t84 + (t184 * t758 + t185 * t761) * qJD(1)) * t1286 + (t758 * t821 + t761 * t765) * t1287 - (t1418 * t761 + t1419 * t758) * t1082 / 0.2e1;
t621 = t666 * qJD(2);
t559 = t604 * t761;
t516 = t950 * t703;
t372 = rSges(6,1) * t564 - rSges(6,2) * t565;
t370 = -rSges(6,1) * t562 - rSges(6,2) * t563;
t333 = t885 * qJD(2);
t189 = -t604 * t728 + (t490 + t1124) * qJD(1) - t1097;
t180 = qJD(2) * t888 + t1135;
t177 = qJD(1) * t383 + qJDD(1) * t561 - t621 * t728 - t626 * t664 + t1111;
t176 = -t621 * t1084 + t627 * t664 + t1117 * qJDD(1) + (-t384 - t624) * qJD(1);
t114 = t468 * t656 + t469 * t657 + t972;
t109 = qJD(1) * t324 + qJDD(1) * t490 - t571 * t728 - t604 * t626 + t775;
t75 = qJD(1) * t272 + qJDD(1) * t469 - t492 * t656 - t498 * t578 + t768;
t74 = -t492 * t657 + t499 * t578 + t838 + t970 * qJDD(1) + (-t273 + t1049) * qJD(1) + t967;
t43 = t272 * t657 + t273 * t656 + t468 * t498 - t469 * t499 + t802;
t26 = t163 * t524 + t165 * t523 + t249 * t308 - t250 * t312 + t772;
t15 = -qJDD(6) * t704 + t1077 * t703 - t1154 * t250 - t1155 * t249 + t1158 * t524 + t1159 * t523 + t772;
t1 = [((((t1496 + t1506) * t761 + t1405 + t1494 + t1504) * t761 - t1325 * t758) * qJD(2) + t1439) * t1008 + t1322 + (t1482 * t704 + (t1347 * t759 + t1481 * t756) * t703 + t1462) * t523 * t1289 + (-(-qJD(1) * t468 - t1187 - t141 + t800) * t142 + t141 * (t727 - t982) + t142 * (t1105 + t1344) + (t1209 * t578 - t142 * t518) * t750 + ((-t141 * rSges(5,3) + t142 * (-t620 - t688)) * t758 + (t141 * (-t620 - t1327) - t142 * t749) * t761) * qJD(1) + (t75 - g(2)) * (t469 + t983) + (t74 - g(1)) * (-t468 + t1114)) * m(5) + (-t1408 + t1409 + t1415) * t1009 + (t338 * (t718 + t1099) + (t1205 * t664 - t1203) * qJD(2) + ((-pkin(1) - t666) * t1204 + (t337 * (-rSges(3,3) - pkin(7)) + t338 * t1015) * t758) * qJD(1) - (-qJD(1) * t560 - t1028 - t337 - t630) * t338 + (t177 - g(2)) * t451 + (t176 - g(1)) * (t1015 * t758 + t1096 + t747)) * m(3) + (-g(1) * (t1182 * t1254 + t1436 + t958) - (t1470 + t776 - t80) * t81 + t1002 * t524 + t24 * (-t585 + t1436) + t80 * (-t949 + t1098) + t81 * (t1344 + t1449) + (t81 * (-t703 * t713 - t1179) * t750 + (t24 * t756 + (-t1178 * t81 + t759 * t80) * qJD(5)) * pkin(5) + (t80 * (t868 + t1183) - t81 * t749) * qJD(1)) * t761 + (t80 * (-t603 + (t1254 * t750 + t1060) * t704) + (t1254 * t24 + t80 * t977) * t703 + (-t1278 * t80 + t81 * t868) * qJD(1)) * t758 + (-g(2) + t25) * (t983 + t1437)) * m(7) + (t1399 + t1401) * t1291 + (t1400 + t1402) * t1290 + (-t1074 + (t185 - t847 - t1143) * t657 + (t758 * t991 + t184 - t409) * t656 + ((t461 + t892) * t656 + t991 * t657) * t761 + t96) * t1287 + (t1463 + t1418) * t1293 + (((t1332 * t761 + t1325 + t1403) * t761 + (t1332 * t758 + t1404 + t1495) * t758) * qJD(2) + t1416 - t1434) * t1011 + (-(-t104 + t1465 + t776) * t105 + t104 * (t609 - t953 + t1098) + t105 * (-pkin(4) * t1057 + t1046 + t1344 + t610) + (t37 * t839 + t104 * (t1180 * t1362 - t603)) * t758 + ((-t620 + t871) * t1218 + (t104 * (-t620 + t839) - t105 * t749) * t761) * qJD(1) - t871 * t1277 + (t38 - g(2)) * (t983 - t1149) + (t37 - g(1)) * (-t952 + t1114)) * m(6) + (t203 + t224) * t1298 + t1213 / 0.2e1 + t1211 / 0.2e1 + t1212 / 0.2e1 + t1258 / 0.2e1 - t1259 / 0.2e1 + t1256 / 0.2e1 - t1257 / 0.2e1 + (t113 + t125 + t97) * t1285 + t1210 / 0.2e1 + t1352 * t1300 + t1353 * t1299 + (t202 + t223) * t1297 + (t112 + t126) * t1286 + (-(-qJD(1) * t489 + t1345 - t188 + t832) * t189 + t188 * t1032 + t189 * (t726 + t1104) + (t1206 * t758 + t1356 * t189) * qJD(2) + ((-t188 * rSges(4,3) + t189 * (-t714 - t701)) * t758 + (t188 * (-t714 - t1326) - t189 * t755) * t761) * qJD(1) + (t109 - g(2)) * (t490 + t981) + t1442 * (-t489 - t1100)) * m(4) + (t1407 + t1410) * t1010 + t1361 * t1294 + (Icges(2,3) + m(2) * (t665 ^ 2 + t667 ^ 2) + t574 * t704 + t576 * t703 - t1473) * qJDD(1) + (-qJD(2) * t1474 + t569 * t720 + t570 * t719 + t617 * t760 + t618 * t757 + t703 * t987 + t704 * t988) * qJD(1) + (t195 + (t183 + (t462 * t761 + t463 * t758) * t703 + t995 + t1144) * t657 + (-t464 * t1177 + t1202 + t182 + (t462 * t758 - t463 * t761) * t703 + t1143) * t656) * t1284 + t1418 * t1292 - m(2) * (-g(1) * t665 + g(2) * t667); t764 + t1451 * t1291 + t1450 * t1290 + (qJD(1) * t1410 + qJD(2) * t1374 + qJDD(1) * t1401 + t1403 * t626 + t1404 * t627) * t1282 + (qJD(1) * t1409 + qJD(2) * t1375 + qJDD(1) * t1402 + t1405 * t626 + t1406 * t627) * t1281 + ((t1305 * t720 + t1306 * t760 + t819 * t719 + t818 * t757) * qJD(2) + (t1101 * t760 + t1102 * t757 + t1112 * t720 + t1113 * t719) * qJD(1)) * t1274 + (t1408 * t761 + t1407 * t758 + (t1399 * t761 + t1400 * t758) * qJD(1)) * t1273 + (t1399 * t758 - t1400 * t761) * t1255 + t1416 * t1013 + t1415 * t1012 + ((-t1367 * t728 + t1368) * t758 + ((t1366 * t758 + t1382) * qJD(2) + t1380) * t761) * t1011 + ((t1403 * t761 + t1404 * t758) * qJD(1) + t1374) * t1010 + ((t1405 * t761 + t1406 * t758) * qJD(1) + t1375) * t1009 + ((-t1084 * t1366 - t1368) * t761 + ((t1367 * t761 + t1382) * qJD(2) + t1380) * t758) * t1008 + (t15 * (t869 + t971) + t61 * (t814 + t1304) + t831 * t1373 + (t25 * t831 + t81 * t805 + (-t1041 - t1154) * t1221) * t758 - g(1) * (t596 + t872) - g(2) * (t595 + t873) - g(3) * (t855 - t1341) - t81 * (t787 + t877) - t61 * (t788 + t1133) - (-t945 * t702 + (t1000 * t61 - t760 * t945) * pkin(2)) * qJD(2) + (t761 * t805 + t1370 + t1371) * t80 + t1381) * m(7) + (t26 * (t968 + t971) + t89 * (t814 + t1319) + t854 * t1372 + (t38 * t854 + t105 * t815 + (-t312 - t1041) * t1219) * t758 - g(1) * (t596 + t1034) - g(2) * (t595 + t1035) - g(3) * (t833 - t1341) - t789 - t105 * (t791 + t877) - t89 * (t792 + t1133) - (-t920 * t702 + (t1000 * t89 - t760 * t920) * pkin(2)) * qJD(2) + (t761 * t815 + t1371 + t1391) * t104) * m(6) + (t141 * t1103 + t43 * (t971 + t1137) + t114 * (t870 + t1048) + (t141 * t823 + (qJD(1) * t142 + t74) * t876) * t761 + (t75 * t876 + t142 * t823 + (t141 * t578 + t114 * (-t469 + t1126)) * qJD(1)) * t758 - g(1) * (t596 - t518) - g(2) * (t595 - t517) - g(3) * (t1327 - t1341) - t141 * (t978 + t980) - t142 * (t877 + t986) - t114 * (t994 + t1133) - (t907 * t702 + (t1000 * t114 + t760 * t907) * pkin(2)) * qJD(2)) * m(5) + (-g(3) * t1343 - t837 * t1275 + t188 * (-pkin(2) * t1026 - t571 * t761) + (qJD(2) * t897 + t1125 * t627 + t489 * t626 + t1044) * (t888 + t1134) + t180 * (t897 + t1043) + (t180 * t489 + t189 * t837) * t1085 + (t109 * t837 + t189 * (-t1062 - t571) + (t1125 * t180 + t1206) * qJD(1)) * t758 - (t188 * t558 + t189 * (-t559 - t1065)) * qJD(1) - (t180 * pkin(2) * t1000 + (-t1343 * t188 - t180 * t559) * t761 + (-t1343 * t189 - t180 * t558) * t758) * qJD(2) + t1442 * t1356) * m(4) + ((qJD(2) * t895 + t560 * t626 - t561 * t627) * t885 + t333 * ((t560 * t761 - t561 * t758) * qJD(1) + t895) + t896 * t621 + (-t176 * t761 - t177 * t758 + (-t338 * t761 + t1205) * qJD(1)) * t664 - (t337 * t593 - t1203) * qJD(1) - (t333 * (-t593 * t758 - t594 * t761) + t896 * t666) * qJD(2) + g(1) * t594 + g(2) * t593 - g(3) * t666) * m(3); (-m(4) - m(5) - m(7)) * t1318 + 0.2e1 * (t1281 * t25 + t1282 * t24) * m(7) + 0.2e1 * (t1281 * t75 + t1282 * t74) * m(5) + 0.2e1 * (t108 * t1282 + t109 * t1281) * m(4) + (-t1318 + t1321) * m(6); t764 + (-g(1) * t872 - g(2) * t873 - g(3) * t855 + t15 * t869 + (t81 * t1050 + (-t522 - t1154) * t1221) * t758 - t787 * t81 + (t1359 + t1373) * (-t580 - t1145) + (t1050 * t761 + t1370 + t525) * t80 + (t1045 - t788 + t1304) * t61 + t1381) * m(7) + (-t105 * t791 + t26 * t968 + (t105 * t1156 + t1149 * t1219) * t758 - g(1) * t1034 - g(2) * t1035 - g(3) * t833 - t789 + (-t792 + t1045 + t1319) * t89 + (t38 * t758 + t1372) * (-t438 - t580) + (t1156 * t761 + t1391 + t525) * t104) * m(6) + (-t141 * t980 - t142 * t986 + t43 * t1137 + t907 * t492 + (-t74 * t761 - t75 * t758 + (-t142 * t761 + t1209) * qJD(1)) * t578 + g(1) * t518 + g(2) * t517 - g(3) * t1327 + (-t1086 * t469 + t1048 - t994) * t114) * m(5); (t1336 * t703 - t1352 * t704) * t1300 + (t1335 * t703 - t1353 * t704) * t1299 + (t1337 * t703 - t1351 * t704) * t500 / 0.2e1 + (-t1338 * t761 + t1339 * t565 - t1340 * t564) * t1295 + ((t1336 * t750 - t1361) * t704 + (qJD(1) * t1377 + t1352 * t750 + t1424 * t761 + t1425 * t758) * t703) * t1294 + ((t1335 * t750 - t1463) * t704 + (qJD(1) * t1376 + t1353 * t750 + t1422 * t761 + t1423 * t758) * t703) * t1293 + (-t1338 * t758 + t1339 * t563 + t1340 * t562) * t1292 + (t1438 * t704 + (t1339 * t759 + t1340 * t756) * t703) * t1289 + ((t1337 * t750 - t1441) * t704 + (qJD(1) * t1378 + t1351 * t750 + t1420 * t761 + t1421 * t758) * t703) * t1288 - (t1212 + t1213 + t1258 - t1259 + t1210 + t1211 + t1256 - t1257 + t1322) * t704 / 0.2e1 + t1417 * t1184 / 0.2e1 + t1427 * t1182 / 0.2e1 + t1428 * t1181 / 0.2e1 + ((-t24 * t1155 + t80 * t1159 - t25 * t1154 - t81 * t1158 + (-t1369 * t761 + t820 * t758) * t750) * t704 - (t1146 * t81 - t1147 * t80) * t651 - (t1146 * t61 + t80 * t959) * t524 - (t1147 * t61 + t81 * t959) * t523 - g(1) * t1146 - g(2) * t1147 + ((t1154 * t81 + t1003) * t750 + (qJD(1) * t820 - t1145 * t25 - t1155 * t15 - t1157 * t81 + t1159 * t61) * t761 + (qJD(1) * t1369 + t24 * t1145 - t15 * t1154 + t80 * t1157 - t61 * t1158) * t758 - g(3) * (-t1443 * t756 - t1263)) * t703) * m(7) + (-g(1) * t372 - g(2) * t370 - g(3) * t516 + (t104 * t165 - t105 * t163 + t37 * t308 - t38 * t312 + (t89 * t898 + (t104 * t758 - t105 * t761) * t438) * t750) * t704 + (t104 * (t234 * t758 - t308 * t750) + t105 * (-t234 * t761 + t312 * t750) + t26 * t898 + t89 * (-t1085 * t312 - t1086 * t308 - t163 * t758 + t165 * t761) + (qJD(1) * t920 + t1321) * t438) * t703 - t104 * (-t370 * t651 - t516 * t524) - t105 * (t372 * t651 - t516 * t523) - t89 * (t370 * t523 + t372 * t524)) * m(6) + t1418 * (-t1031 / 0.2e1 + t761 * t1016) + t1419 * (t703 * t1012 + t758 * t1016); ((-t523 * t81 - t524 * t80 + t750 * t945 + g(3) - t15) * t704 + (t24 * t761 + t1359 + (qJD(1) - t651) * (-t758 * t80 + t761 * t81) + (-t523 * t758 - t524 * t761 + t750) * t61 - t1320) * t703) * m(7);];
tau  = t1;
