% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP1_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:41:15
% EndTime: 2019-03-09 11:41:24
% DurationCPUTime: 3.35s
% Computational Cost: add. (7225->300), mult. (15562->489), div. (0->0), fcn. (15743->8), ass. (0->158)
t119 = sin(qJ(2));
t121 = cos(qJ(2));
t180 = sin(pkin(10));
t181 = cos(pkin(10));
t134 = t119 * t180 - t121 * t181;
t191 = -qJ(3) - pkin(7);
t97 = t191 * t119;
t99 = t191 * t121;
t64 = t180 * t97 - t181 * t99;
t130 = -pkin(8) * t134 + t64;
t63 = t180 * t99 + t181 * t97;
t89 = t119 * t181 + t121 * t180;
t132 = -pkin(8) * t89 + t63;
t196 = sin(qJ(4));
t197 = cos(qJ(4));
t41 = t130 * t196 - t132 * t197;
t155 = qJD(2) * t180;
t156 = qJD(2) * t181;
t139 = -t119 * t155 + t121 * t156;
t157 = qJD(2) * t191;
t135 = t121 * qJD(3) + t119 * t157;
t136 = -t119 * qJD(3) + t121 * t157;
t53 = -t135 * t180 + t136 * t181;
t124 = -pkin(8) * t139 + t53;
t177 = t119 * t156 + t121 * t155;
t54 = t135 * t181 + t136 * t180;
t125 = -pkin(8) * t177 + t54;
t123 = qJD(4) * t41 - t196 * t124 - t197 * t125;
t58 = t134 * t197 + t196 * t89;
t59 = -t134 * t196 + t197 * t89;
t109 = -t121 * pkin(2) - pkin(1);
t74 = pkin(3) * t134 + t109;
t127 = -t58 * pkin(4) + t59 * pkin(9) - t74;
t204 = qJD(5) * t127 + t123;
t153 = pkin(2) * t181 + pkin(3);
t161 = t180 * pkin(2);
t203 = -t153 * t197 + t161 * t196;
t118 = sin(qJ(5));
t116 = t118 ^ 2;
t120 = cos(qJ(5));
t117 = t120 ^ 2;
t176 = t116 - t117;
t202 = t176 * qJD(5);
t42 = t130 * t197 + t132 * t196;
t18 = -t118 * t42 - t120 * t127;
t19 = -t118 * t127 + t120 * t42;
t142 = t118 * t18 - t120 * t19;
t113 = qJD(5) * t118;
t44 = qJD(4) * t58 - t197 * t139 + t196 * t177;
t45 = qJD(4) * t59 + t139 * t196 + t177 * t197;
t174 = qJD(2) * t119;
t167 = pkin(2) * t174;
t68 = pkin(3) * t177 + t167;
t129 = pkin(4) * t45 + pkin(9) * t44 + t68;
t170 = -t118 * t129 + t120 * t204;
t5 = t113 * t42 + t170;
t21 = t120 * t129;
t6 = -qJD(5) * t19 + t118 * t123 + t21;
t201 = qJD(5) * t142 + t5 * t118 - t6 * t120;
t115 = t120 * qJ(6);
t11 = pkin(5) * t58 - t115 * t59 + t18;
t185 = t118 * t59;
t12 = -qJ(6) * t185 + t19;
t137 = qJ(6) * t44 - qJD(5) * t42 - qJD(6) * t59;
t163 = t59 * t113;
t122 = qJ(6) * t163 + t118 * t204 + t120 * t137 + t21;
t199 = t45 * pkin(5);
t2 = t122 + t199;
t114 = qJD(5) * t120;
t162 = t59 * t114;
t4 = qJ(6) * t162 - t118 * t137 + t170;
t200 = t4 * t118 - t2 * t120 + (t11 * t118 - t12 * t120) * qJD(5);
t28 = pkin(5) * t185 + t41;
t27 = t28 * t114;
t15 = qJD(4) * t42 - t124 * t197 + t125 * t196;
t186 = t118 * t44;
t33 = t162 - t186;
t8 = pkin(5) * t33 + t15;
t198 = t118 * t8 + t27;
t195 = t120 * pkin(5);
t194 = t41 * t15;
t85 = t153 * t196 + t161 * t197;
t77 = t85 * qJD(4);
t193 = t41 * t77;
t192 = t59 * t44;
t190 = -qJ(6) - pkin(9);
t37 = t41 * t114;
t189 = t118 * t15 + t37;
t111 = pkin(5) * t113;
t67 = t111 + t77;
t81 = -pkin(4) + t203;
t73 = t81 - t195;
t188 = t114 * t73 + t118 * t67;
t187 = t114 * t81 + t118 * t77;
t184 = t120 * t44;
t82 = pkin(9) + t85;
t183 = qJ(6) + t82;
t108 = -pkin(4) - t195;
t172 = qJD(5) * t116;
t182 = pkin(5) * t172 + t108 * t114;
t179 = qJD(5) * t59;
t178 = t108 * t120;
t175 = t116 + t117;
t173 = qJD(2) * t121;
t34 = 0.2e1 * t58 * t45;
t171 = -0.2e1 * pkin(1) * qJD(2);
t169 = pkin(4) * t113;
t168 = pkin(4) * t114;
t166 = pkin(5) * t114;
t165 = t118 * t184;
t26 = t28 * t113;
t36 = t41 * t113;
t61 = t73 * t113;
t94 = t108 * t113;
t160 = t118 * t114;
t159 = t119 * t173;
t158 = t113 * t81 - t120 * t77;
t76 = t203 * qJD(4);
t50 = t175 * t76;
t57 = t59 ^ 2;
t154 = t57 * t160;
t152 = -t28 * t44 + t59 * t8;
t149 = t15 * t59 - t41 * t44;
t148 = t44 * t58 - t45 * t59;
t147 = -t44 * t73 + t59 * t67;
t146 = t58 * t76 + t59 * t77;
t145 = t58 * t82 - t59 * t81;
t143 = t118 * t19 + t120 * t18;
t141 = t163 + t184;
t31 = t114 * t58 + t118 * t45;
t140 = t113 * t58 - t120 * t45;
t133 = -t44 * t81 - t45 * t82 + t146;
t1 = -qJD(5) * t143 - t6 * t118 - t5 * t120;
t112 = t120 * qJD(6);
t102 = -0.2e1 * t160;
t101 = 0.2e1 * t160;
t98 = pkin(9) * t120 + t115;
t96 = t190 * t118;
t92 = -0.2e1 * t202;
t87 = -t118 * qJD(6) + t114 * t190;
t86 = -t113 * t190 - t112;
t75 = t86 * t120;
t69 = t120 * t76;
t66 = t120 * t82 + t115;
t65 = t183 * t118;
t49 = (-qJD(6) + t76) * t118 - t183 * t114;
t48 = t113 * t183 - t112 + t69;
t47 = t48 * t120;
t25 = -0.2e1 * t117 * t192 - 0.2e1 * t154;
t24 = -0.2e1 * t116 * t192 + 0.2e1 * t154;
t23 = t175 * t44;
t22 = -t117 * t179 + t172 * t59 + t165;
t17 = 0.4e1 * t165 * t59 + 0.2e1 * t202 * t57;
t16 = -0.4e1 * t160 * t59 + t176 * t44;
t10 = 0.2e1 * t118 * t148 - 0.2e1 * t162 * t58;
t9 = -0.2e1 * t120 * t148 - 0.2e1 * t163 * t58;
t3 = t4 * t120;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t159, 0.2e1 * (-t119 ^ 2 + t121 ^ 2) * qJD(2), 0, -0.2e1 * t159, 0, 0, t119 * t171, t121 * t171, 0, 0, 0.2e1 * t89 * t139, -0.2e1 * t134 * t139 - 0.2e1 * t177 * t89, 0, 0.2e1 * t134 * t177, 0, 0, 0.2e1 * t109 * t177 + 0.2e1 * t134 * t167, 0.2e1 * t109 * t139 + 0.2e1 * t167 * t89, -0.2e1 * t134 * t54 - 0.2e1 * t139 * t63 - 0.2e1 * t177 * t64 - 0.2e1 * t53 * t89, 0.2e1 * t109 * t167 + 0.2e1 * t53 * t63 + 0.2e1 * t54 * t64, -0.2e1 * t192, 0.2e1 * t148, 0, t34, 0, 0, 0.2e1 * t45 * t74 + 0.2e1 * t58 * t68, -0.2e1 * t44 * t74 + 0.2e1 * t59 * t68, 0.2e1 * t123 * t58 - 0.2e1 * t42 * t45 + 0.2e1 * t149, -0.2e1 * t123 * t42 + 0.2e1 * t74 * t68 + 0.2e1 * t194, t25, t17, t9, t24, t10, t34, 0.2e1 * t118 * t149 + 0.2e1 * t18 * t45 + 0.2e1 * t37 * t59 + 0.2e1 * t6 * t58, 0.2e1 * t120 * t149 - 0.2e1 * t19 * t45 - 0.2e1 * t36 * t59 + 0.2e1 * t5 * t58, 0.2e1 * t143 * t44 + 0.2e1 * t201 * t59, 0.2e1 * t18 * t6 - 0.2e1 * t19 * t5 + 0.2e1 * t194, t25, t17, t9, t24, t10, t34, 0.2e1 * t11 * t45 + 0.2e1 * t118 * t152 + 0.2e1 * t2 * t58 + 0.2e1 * t27 * t59, -0.2e1 * t12 * t45 + 0.2e1 * t120 * t152 - 0.2e1 * t26 * t59 + 0.2e1 * t4 * t58, 0.2e1 * (t11 * t120 + t118 * t12) * t44 + 0.2e1 * t200 * t59, 0.2e1 * t11 * t2 - 0.2e1 * t12 * t4 + 0.2e1 * t28 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, 0, -t174, 0, -pkin(7) * t173, pkin(7) * t174, 0, 0, 0, 0, t139, 0, -t177, 0, t53, -t54 (-t139 * t181 - t177 * t180) * pkin(2) (t180 * t54 + t181 * t53) * pkin(2), 0, 0, -t44, 0, -t45, 0, -t15, t123, -t203 * t44 - t45 * t85 + t146, -t123 * t85 + t15 * t203 - t42 * t76 + t193, -t22, t16, t31, t22, -t140, 0, t36 + (-qJD(5) * t145 - t15) * t120 + t133 * t118, t113 * t145 + t120 * t133 + t189, t1, t1 * t82 + t142 * t76 + t15 * t81 + t193, -t22, t16, t31, t22, -t140, 0, -t65 * t45 + t49 * t58 + t26 + (t179 * t73 - t8) * t120 + t147 * t118, t120 * t147 - t66 * t45 + t48 * t58 - t59 * t61 + t198, -t3 + (-t44 * t65 - t49 * t59 + (-t59 * t66 - t11) * qJD(5)) * t120 + (t44 * t66 + t48 * t59 - t2 + (-t59 * t65 - t12) * qJD(5)) * t118, t11 * t49 - t12 * t48 - t2 * t65 + t28 * t67 - t4 * t66 + t73 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t77, 0.2e1 * t76, 0, 0.2e1 * t203 * t77 - 0.2e1 * t76 * t85, t101, t92, 0, t102, 0, 0, 0.2e1 * t158, 0.2e1 * t187, -0.2e1 * t50, -0.2e1 * t50 * t82 + 0.2e1 * t81 * t77, t101, t92, 0, t102, 0, 0, -0.2e1 * t120 * t67 + 0.2e1 * t61, 0.2e1 * t188, -0.2e1 * t49 * t118 - 0.2e1 * t47 + 0.2e1 * (-t118 * t66 + t120 * t65) * qJD(5), -0.2e1 * t48 * t66 - 0.2e1 * t49 * t65 + 0.2e1 * t67 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t139, 0, t167, 0, 0, 0, 0, 0, 0, t45, -t44, 0, t68, 0, 0, 0, 0, 0, 0, -t140, -t31, t23, -t201, 0, 0, 0, 0, 0, 0, -t140, -t31, t23, -t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48 * t118 + t49 * t120 + (t118 * t65 + t120 * t66) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, 0, -t45, 0, -t15, t123, 0, 0, -t22, t16, t31, t22, -t140, 0, t36 + (pkin(4) * t44 - pkin(9) * t45) * t118 + (-t15 + (-pkin(4) * t59 - pkin(9) * t58) * qJD(5)) * t120, pkin(4) * t141 + pkin(9) * t140 + t189, t1, -t15 * pkin(4) + pkin(9) * t1, -t22, t16, t31, t22, -t140, 0, -t108 * t186 - t8 * t120 + t96 * t45 + t87 * t58 + t26 + (pkin(5) * t116 + t178) * t179, -t44 * t178 - t98 * t45 + t86 * t58 + (-t108 + t195) * t163 + t198, -t3 + (t44 * t96 - t59 * t87 + (-t59 * t98 - t11) * qJD(5)) * t120 + (t44 * t98 + t59 * t86 - t2 + (t59 * t96 - t12) * qJD(5)) * t118, pkin(5) * t26 + t108 * t8 + t11 * t87 - t12 * t86 + t2 * t96 - t4 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t76, 0, 0, t101, t92, 0, t102, 0, 0, t158 - t169, -t168 + t187, -t50, -t77 * pkin(4) - pkin(9) * t50, t101, t92, 0, t102, 0, 0, t61 + t94 + (-t67 - t111) * t120, t182 + t188, -t47 - t75 + (-t49 - t87) * t118 + ((t65 - t96) * t120 + (-t66 - t98) * t118) * qJD(5), pkin(5) * t61 + t108 * t67 - t48 * t98 + t49 * t96 - t65 * t87 - t66 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118 * t86 + t120 * t87 + (-t118 * t96 + t120 * t98) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t92, 0, t102, 0, 0, -0.2e1 * t169, -0.2e1 * t168, 0, 0, t101, t92, 0, t102, 0, 0, -0.2e1 * pkin(5) * t160 + 0.2e1 * t94, 0.2e1 * t182, -0.2e1 * t87 * t118 - 0.2e1 * t75 + 0.2e1 * (-t118 * t98 - t120 * t96) * qJD(5), 0.2e1 * pkin(5) * t94 - 0.2e1 * t86 * t98 + 0.2e1 * t87 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141, 0, -t33, t45, t6, t5, 0, 0, 0, 0, -t141, 0, -t33, t45, t122 + 0.2e1 * t199, t4, t141 * pkin(5), t2 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, -t113, 0, -t114 * t82 + t118 * t76, t113 * t82 + t69, 0, 0, 0, 0, t114, 0, -t113, 0, t49, t48, -t166, t49 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t114, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t114, 0, -t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, -t113, 0, -pkin(9) * t114, pkin(9) * t113, 0, 0, 0, 0, t114, 0, -t113, 0, t87, t86, -t166, t87 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, -t141, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t114, 0, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t114, 0, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
