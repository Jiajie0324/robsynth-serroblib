% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRP1_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:41:23
% EndTime: 2019-03-09 11:41:40
% DurationCPUTime: 10.06s
% Computational Cost: add. (18132->659), mult. (43411->787), div. (0->0), fcn. (33368->14), ass. (0->340)
t285 = cos(qJ(5));
t381 = qJD(5) * t285;
t283 = sin(qJ(2));
t425 = sin(pkin(10));
t352 = t425 * t283;
t334 = qJD(1) * t352;
t286 = cos(qJ(2));
t426 = cos(pkin(10));
t353 = t426 * t286;
t335 = qJD(1) * t353;
t209 = -t334 + t335;
t282 = sin(qJ(4));
t455 = cos(qJ(4));
t309 = -t283 * t426 - t286 * t425;
t460 = t309 * qJD(1);
t156 = t455 * t209 + t282 * t460;
t483 = t156 * t285;
t500 = t381 - t483;
t281 = sin(qJ(5));
t318 = -t282 * t209 + t455 * t460;
t376 = qJD(2) + qJD(4);
t341 = t285 * t376;
t139 = -t281 * t318 - t341;
t310 = t352 - t353;
t317 = t310 * qJDD(1);
t479 = t460 * qJD(2);
t163 = t317 - t479;
t296 = -qJD(2) * t334 - qJDD(1) * t309;
t164 = qJD(2) * t335 + t296;
t361 = qJD(4) * t455;
t384 = qJD(4) * t282;
t294 = t282 * t163 - t164 * t455 - t209 * t361 - t384 * t460;
t375 = qJDD(2) + qJDD(4);
t141 = t281 * t376 - t285 * t318;
t383 = qJD(5) * t141;
t69 = -t281 * t294 - t285 * t375 + t383;
t431 = -t139 * t381 - t281 * t69;
t478 = qJD(5) - t156;
t495 = t478 * t281;
t466 = t141 * t495;
t382 = qJD(5) * t281;
t68 = -qJD(5) * t341 - t281 * t375 + t285 * t294 - t318 * t382;
t499 = t139 * t483 - t285 * t68 + t431 - t466;
t435 = t69 * qJ(6);
t273 = t286 * pkin(2);
t265 = t273 + pkin(1);
t231 = -qJD(1) * t265 + qJD(3);
t170 = -t209 * pkin(3) + t231;
t102 = -pkin(4) * t156 + pkin(9) * t318 + t170;
t443 = qJ(3) + pkin(7);
t356 = qJD(2) * t443;
t204 = -t283 * qJD(3) - t286 * t356;
t243 = t443 * t283;
t160 = qJDD(2) * pkin(2) + qJD(1) * t204 - qJDD(1) * t243;
t203 = t286 * qJD(3) - t283 * t356;
t245 = t443 * t286;
t167 = qJD(1) * t203 + qJDD(1) * t245;
t120 = t425 * t160 + t426 * t167;
t100 = -pkin(8) * t163 + t120;
t229 = qJD(1) * t245;
t212 = t425 * t229;
t228 = qJD(1) * t243;
t441 = qJD(2) * pkin(2);
t217 = -t228 + t441;
t161 = t426 * t217 - t212;
t445 = t460 * pkin(8);
t132 = qJD(2) * pkin(3) + t161 + t445;
t354 = t426 * t229;
t162 = t425 * t217 + t354;
t446 = t209 * pkin(8);
t137 = t162 + t446;
t119 = t426 * t160 - t167 * t425;
t95 = qJDD(2) * pkin(3) - t164 * pkin(8) + t119;
t25 = t455 * t100 + t132 * t361 - t137 * t384 + t282 * t95;
t23 = pkin(9) * t375 + t25;
t378 = qJD(1) * qJD(2);
t360 = t283 * t378;
t197 = pkin(2) * t360 - qJDD(1) * t265 + qJDD(3);
t447 = t163 * pkin(3);
t135 = t197 + t447;
t350 = t455 * t163 + t282 * t164;
t480 = qJD(4) * t318;
t92 = t350 - t480;
t42 = t92 * pkin(4) + pkin(9) * t294 + t135;
t97 = t282 * t132 + t137 * t455;
t86 = pkin(9) * t376 + t97;
t5 = t102 * t381 + t285 * t23 + t281 * t42 - t86 * t382;
t3 = -qJD(6) * t139 - t435 + t5;
t276 = qJ(2) + pkin(10);
t270 = qJ(4) + t276;
t261 = sin(t270);
t253 = g(3) * t261;
t262 = cos(t270);
t287 = cos(qJ(1));
t399 = t262 * t287;
t284 = sin(qJ(1));
t400 = t262 * t284;
t368 = g(1) * t399 + g(2) * t400 + t253;
t436 = t68 * qJ(6);
t91 = qJDD(5) + t92;
t456 = t91 * pkin(5);
t53 = t102 * t281 + t285 * t86;
t6 = -qJD(5) * t53 - t281 * t23 + t285 * t42;
t1 = -t141 * qJD(6) + t436 + t456 + t6;
t45 = -qJ(6) * t139 + t53;
t438 = t45 * t478;
t470 = t1 + t438;
t498 = -t281 * t470 + t3 * t285 - t368;
t484 = t156 * t281;
t497 = pkin(5) * t484;
t437 = t53 * t478;
t496 = t6 + t437;
t52 = t285 * t102 - t281 * t86;
t440 = t478 * t52;
t465 = t156 * t376;
t494 = -t294 - t465;
t412 = t156 ^ 2;
t413 = t318 ^ 2;
t493 = -t412 + t413;
t344 = t282 * t100 + t132 * t384 + t137 * t361 - t455 * t95;
t24 = -pkin(4) * t375 + t344;
t18 = t69 * pkin(5) + qJDD(6) + t24;
t351 = t139 * pkin(5) + qJD(6);
t96 = t132 * t455 - t282 * t137;
t85 = -pkin(4) * t376 - t96;
t75 = t351 + t85;
t469 = t18 * t281 + t75 * t381;
t492 = -t45 * t318 - t75 * t483 + t469;
t44 = -qJ(6) * t141 + t52;
t34 = pkin(5) * t478 + t44;
t450 = g(3) * t262;
t363 = -t18 - t450;
t401 = t261 * t287;
t402 = t261 * t284;
t482 = g(1) * t401 + g(2) * t402;
t390 = t482 * t285;
t72 = t75 * t382;
t491 = t285 * t363 + t318 * t34 - t484 * t75 + t390 + t72;
t490 = qJ(6) * t484 + t285 * qJD(6);
t65 = t68 * t281;
t488 = t500 * t141 - t65;
t416 = t141 * t318;
t83 = t281 * t91;
t487 = t500 * t478 + t416 + t83;
t486 = t156 * t85;
t420 = t139 * t318;
t485 = t478 * t318;
t407 = t156 * t318;
t380 = t318 * qJD(2);
t481 = -t380 - t350;
t80 = t85 * t382;
t476 = t52 * t318 + t390 + t80;
t468 = t24 * t281 + t85 * t381;
t474 = -t53 * t318 + t468;
t473 = -t170 * t156 - t25 + t368;
t472 = t170 * t318 - t344 - t450 + t482;
t118 = -pkin(4) * t318 - pkin(9) * t156;
t272 = t285 * qJ(6);
t471 = pkin(5) * t318 + t156 * t272;
t263 = pkin(2) * t426 + pkin(3);
t365 = t425 * pkin(2);
t201 = t455 * t263 - t282 * t365;
t184 = t201 * qJD(4);
t169 = -t426 * t228 - t212;
t143 = t169 + t445;
t168 = t228 * t425 - t354;
t311 = t168 - t446;
t106 = t143 * t455 + t282 * t311;
t385 = qJD(1) * t283;
t176 = pkin(2) * t385 - pkin(3) * t460;
t107 = t118 + t176;
t57 = t285 * t106 + t281 * t107;
t467 = -t285 * t184 + t57;
t171 = -t426 * t243 - t245 * t425;
t148 = pkin(8) * t309 + t171;
t172 = -t425 * t243 + t426 * t245;
t149 = -pkin(8) * t310 + t172;
t114 = t282 * t148 + t149 * t455;
t111 = t285 * t114;
t298 = t455 * t310;
t165 = -t282 * t309 + t298;
t302 = t282 * t310;
t166 = -t309 * t455 - t302;
t180 = pkin(3) * t310 - t265;
t112 = t165 * pkin(4) - t166 * pkin(9) + t180;
t63 = t281 * t112 + t111;
t392 = t184 - t106;
t202 = t282 * t263 + t455 * t365;
t391 = t202 * qJD(4) - t143 * t282 + t455 * t311;
t444 = t285 * pkin(5);
t264 = pkin(4) + t444;
t279 = -qJ(6) - pkin(9);
t464 = -t261 * t279 + t262 * t264;
t462 = t262 * pkin(4) + t261 * pkin(9);
t461 = -g(1) * t284 + g(2) * t287;
t394 = t285 * t287;
t398 = t281 * t284;
t193 = t262 * t398 + t394;
t396 = t284 * t285;
t397 = t281 * t287;
t195 = -t262 * t397 + t396;
t449 = g(3) * t281;
t459 = -g(1) * t195 + g(2) * t193 + t261 * t449;
t458 = t141 ^ 2;
t457 = t460 ^ 2;
t288 = qJD(2) ^ 2;
t269 = cos(t276);
t388 = pkin(3) * t269 + t273;
t227 = pkin(1) + t388;
t216 = t287 * t227;
t451 = g(2) * t216;
t448 = g(3) * t286;
t4 = t5 * t285;
t442 = -t44 + t34;
t439 = t285 * t34;
t67 = t69 * t285;
t199 = pkin(9) + t202;
t393 = -qJ(6) - t199;
t348 = qJD(5) * t393;
t434 = t281 * t348 - t467 + t490;
t56 = -t106 * t281 + t285 * t107;
t433 = (-qJD(6) - t184) * t281 + t285 * t348 - t56 + t471;
t371 = pkin(5) * t382;
t429 = t371 + t391 - t497;
t355 = qJD(5) * t279;
t61 = t281 * t118 + t285 * t96;
t428 = t281 * t355 + t490 - t61;
t60 = t285 * t118 - t281 * t96;
t427 = -t281 * qJD(6) + t285 * t355 + t471 - t60;
t424 = pkin(7) * qJDD(1);
t300 = qJD(2) * t309;
t121 = -t282 * t300 + t298 * t376 - t309 * t384;
t423 = t121 * t281;
t422 = t121 * t285;
t421 = t139 * t478;
t419 = t139 * t281;
t418 = t141 * t139;
t417 = t141 * t478;
t406 = t166 * t281;
t405 = t166 * t285;
t404 = t460 * t209;
t147 = t426 * t203 + t425 * t204;
t277 = t283 ^ 2;
t278 = t286 ^ 2;
t387 = t277 - t278;
t386 = t277 + t278;
t377 = t286 * qJDD(1);
t126 = pkin(8) * t300 + t147;
t146 = -t203 * t425 + t426 * t204;
t301 = qJD(2) * t310;
t292 = pkin(8) * t301 + t146;
t58 = t126 * t455 + t148 * t361 - t149 * t384 + t282 * t292;
t122 = -qJD(4) * t302 - t282 * t301 - t300 * t455 - t309 * t361;
t267 = t283 * t441;
t177 = -pkin(3) * t300 + t267;
t74 = t122 * pkin(4) + t121 * pkin(9) + t177;
t374 = t112 * t381 + t281 * t74 + t285 * t58;
t372 = pkin(9) * qJD(5) * t478;
t289 = qJD(1) ^ 2;
t369 = t283 * t289 * t286;
t364 = t166 * t381;
t362 = -t24 - t450;
t275 = -pkin(8) - t443;
t359 = pkin(5) * t281 - t275;
t357 = -t281 * t58 + t285 * t74;
t62 = t285 * t112 - t114 * t281;
t113 = -t455 * t148 + t149 * t282;
t347 = t478 * t285;
t342 = t4 - t368;
t340 = t286 * t360;
t339 = -pkin(4) * t402 + pkin(9) * t400;
t338 = -pkin(4) * t401 + pkin(9) * t399;
t76 = t97 + t497;
t337 = -t76 + t371;
t336 = -g(1) * t402 + g(2) * t401;
t332 = -pkin(9) * t91 - t486;
t331 = -g(1) * t193 - g(2) * t195;
t194 = -t262 * t396 + t397;
t196 = t262 * t394 + t398;
t330 = -g(1) * t194 - g(2) * t196;
t329 = g(1) * t287 + g(2) * t284;
t327 = -t199 * t91 - t486;
t326 = t281 * t53 + t285 * t52;
t325 = t281 * t52 - t285 * t53;
t323 = t261 * t264 + t262 * t279;
t322 = qJ(6) * t121 - qJD(6) * t166;
t198 = -pkin(4) - t201;
t84 = t285 * t91;
t321 = t84 + (-t382 + t484) * t478;
t320 = t329 * t261;
t319 = -0.2e1 * pkin(1) * t378 - pkin(7) * qJDD(2);
t316 = t364 - t423;
t315 = -t166 * t382 - t422;
t314 = t323 * t284;
t313 = t323 * t287;
t236 = t262 * t449;
t306 = -t281 * t320 + t236;
t305 = g(1) * t196 - g(2) * t194 + t285 * t253 - t5;
t304 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t288 - t461;
t303 = pkin(1) * t289 + t329 - t424;
t297 = t197 + t461;
t295 = -qJD(5) * t326 - t6 * t281 + t4;
t59 = qJD(4) * t114 + t282 * t126 - t455 * t292;
t291 = t6 + t459;
t268 = sin(t276);
t244 = pkin(9) * t285 + t272;
t242 = t279 * t281;
t230 = -pkin(2) * t283 - pkin(3) * t268;
t219 = t287 * t230;
t218 = t284 * t230;
t207 = t209 ^ 2;
t178 = t198 - t444;
t174 = t199 * t285 + t272;
t173 = t393 * t281;
t138 = t139 ^ 2;
t79 = pkin(5) * t406 + t113;
t77 = -t138 + t458;
t54 = -qJ(6) * t406 + t63;
t50 = pkin(5) * t165 - t166 * t272 + t62;
t48 = t122 * t478 + t165 * t91;
t47 = t417 - t69;
t46 = -t68 + t421;
t38 = t139 * t495 - t67;
t37 = t419 * t478 - t67;
t33 = pkin(5) * t316 + t59;
t32 = -t347 * t478 + t416 - t83;
t29 = t321 + t420;
t28 = t321 - t420;
t27 = -t478 * t495 - t420 + t84;
t20 = t139 * t316 + t406 * t69;
t19 = t141 * t315 - t405 * t68;
t16 = -qJD(5) * t63 + t357;
t15 = -t114 * t382 + t374;
t12 = (t139 * t156 + t68) * t285 + t466 + t431;
t11 = -t139 * t122 - t69 * t165 - t316 * t478 - t406 * t91;
t10 = t141 * t122 - t68 * t165 + t315 * t478 + t405 * t91;
t9 = -qJ(6) * t364 + (-qJD(5) * t114 + t322) * t281 + t374;
t8 = t122 * pkin(5) + t322 * t285 + (-t111 + (qJ(6) * t166 - t112) * t281) * qJD(5) + t357;
t7 = (t139 * t285 + t141 * t281) * t121 + (t65 - t67 + (-t141 * t285 + t419) * qJD(5)) * t166;
t2 = [0, 0, 0, 0, 0, qJDD(1), -t461, t329, 0, 0, qJDD(1) * t277 + 0.2e1 * t340, 0.2e1 * t283 * t377 - 0.2e1 * t378 * t387, qJDD(2) * t283 + t286 * t288, qJDD(1) * t278 - 0.2e1 * t340, qJDD(2) * t286 - t283 * t288, 0, t283 * t319 + t286 * t304, -t283 * t304 + t286 * t319, 0.2e1 * t386 * t424 - t329, -g(1) * (-pkin(1) * t284 + pkin(7) * t287) - g(2) * (pkin(1) * t287 + pkin(7) * t284) + (pkin(7) ^ 2 * t386 + pkin(1) ^ 2) * qJDD(1), -t164 * t309 + t301 * t460, t163 * t309 - t164 * t310 - t209 * t301 - t300 * t460, -qJDD(2) * t309 - t288 * t310, t163 * t310 + t209 * t300, -qJDD(2) * t310 + t288 * t309, 0, t171 * qJDD(2) - t265 * t163 + t197 * t310 - t209 * t267 - t461 * t269 + (-t231 * t309 + t146) * qJD(2), -t147 * qJD(2) - t172 * qJDD(2) - t265 * t164 - t197 * t309 - t231 * t301 - t267 * t460 + t268 * t461, t119 * t309 + t146 * t460 + t147 * t209 + t162 * t300 - t172 * t163 - t171 * t164 - t329 + (qJD(2) * t161 - t120) * t310, t120 * t172 + t162 * t147 + t119 * t171 + t161 * t146 - t197 * t265 + t231 * t267 - g(1) * (-t265 * t284 + t287 * t443) - g(2) * (t265 * t287 + t284 * t443) t121 * t318 - t166 * t294, -t121 * t156 + t122 * t318 + t165 * t294 - t166 * t92, -t121 * t376 + t166 * t375, -t122 * t156 + t165 * t92, -t122 * t376 - t165 * t375, 0, -t113 * t375 + t170 * t122 + t135 * t165 - t156 * t177 + t180 * t92 - t262 * t461 - t376 * t59, -t114 * t375 - t170 * t121 + t135 * t166 - t177 * t318 - t180 * t294 - t376 * t58 + t336, -t113 * t294 - t114 * t92 + t96 * t121 - t97 * t122 + t156 * t58 - t25 * t165 + t166 * t344 - t318 * t59 - t329, t25 * t114 + t97 * t58 + t344 * t113 - t96 * t59 + t135 * t180 + t170 * t177 - g(1) * (-t284 * t227 - t287 * t275) - g(2) * (-t284 * t275 + t216) t19, t7, t10, t20, t11, t48, t113 * t69 + t52 * t122 + t59 * t139 + t16 * t478 + t6 * t165 + t166 * t468 - t85 * t423 + t62 * t91 + t330, -t85 * t422 - t113 * t68 - t53 * t122 + t59 * t141 - t15 * t478 - t5 * t165 - t63 * t91 + (t24 * t285 - t80) * t166 + t331, -t15 * t139 - t16 * t141 + t62 * t68 - t63 * t69 + t326 * t121 + (qJD(5) * t325 - t5 * t281 - t6 * t285) * t166 - t336, -t451 + t24 * t113 + t53 * t15 + t52 * t16 + t5 * t63 + t85 * t59 + t6 * t62 + (g(1) * t275 - g(2) * t462) * t287 + (-g(1) * (-t227 - t462) + g(2) * t275) * t284, t19, t7, t10, t20, t11, t48, t1 * t165 + t34 * t122 + t33 * t139 + t166 * t469 - t75 * t423 + t478 * t8 + t50 * t91 + t79 * t69 + t330, -t75 * t422 - t45 * t122 + t33 * t141 - t9 * t478 - t3 * t165 - t54 * t91 - t79 * t68 + (t18 * t285 - t72) * t166 + t331, -t9 * t139 - t8 * t141 + t50 * t68 - t54 * t69 + (t281 * t45 + t439) * t121 + (-t1 * t285 - t3 * t281 + (t281 * t34 - t285 * t45) * qJD(5)) * t166 - t336, -t451 + t1 * t50 + t18 * t79 + t3 * t54 + t75 * t33 + t34 * t8 + t45 * t9 + (-g(1) * t359 - g(2) * t464) * t287 + (-g(1) * (-t227 - t464) - g(2) * t359) * t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t369, t387 * t289, t283 * qJDD(1), t369, t377, qJDD(2), t283 * t303 - t448, g(3) * t283 + t286 * t303, 0, 0, t404, -t207 + t457 (t335 - t209) * qJD(2) + t296, -t404, -t317, qJDD(2), -g(3) * t269 - t168 * qJD(2) + t231 * t460 + t329 * t268 + (qJDD(2) * t426 + t209 * t385) * pkin(2) + t119, g(3) * t268 + t169 * qJD(2) - t231 * t209 + t329 * t269 + (-qJDD(2) * t425 + t385 * t460) * pkin(2) - t120 -(t162 + t168) * t460 + (t161 - t169) * t209 + (-t163 * t425 - t164 * t426) * pkin(2), -t161 * t168 - t162 * t169 + (t425 * t120 + t426 * t119 - t448 + (-qJD(1) * t231 + t329) * t283) * pkin(2), t407, t493, t494, -t407, t481, t375, t156 * t176 + t201 * t375 - t376 * t391 + t472, t176 * t318 - t202 * t375 - t376 * t392 + t473, t201 * t294 - t202 * t92 + (-t391 - t97) * t318 + (t392 + t96) * t156, -g(3) * t388 - t170 * t176 - t201 * t344 + t25 * t202 - t230 * t329 - t391 * t96 + t392 * t97, t488, t499, t487, t38, t28, t485, t198 * t69 + t362 * t285 + t327 * t281 + t391 * t139 + (-t184 * t281 - t199 * t381 - t56) * t478 + t476, -t198 * t68 + t327 * t285 + t391 * t141 + (t199 * t382 + t467) * t478 + t306 + t474, t57 * t139 + t56 * t141 + (-t139 * t184 + t156 * t52 - t199 * t69 + (t141 * t199 - t52) * qJD(5)) * t285 + (t141 * t184 + t156 * t53 - t199 * t68 - t6 + (t139 * t199 - t53) * qJD(5)) * t281 + t342, t24 * t198 - t53 * t57 - t52 * t56 - g(1) * (t219 + t338) - g(2) * (t218 + t339) - g(3) * (t388 + t462) + t391 * t85 - t325 * t184 + t295 * t199, t488, t499, t487, t38, t28, t485, t139 * t429 + t173 * t91 + t178 * t69 + t433 * t478 + t491, t141 * t429 - t174 * t91 - t178 * t68 - t434 * t478 + t306 + t492, -t434 * t139 - t433 * t141 + t173 * t68 - t174 * t69 - t34 * t347 + t498, t3 * t174 + t1 * t173 + t18 * t178 - g(1) * (t219 - t313) - g(2) * (t218 - t314) - g(3) * (t464 + t388) + t429 * t75 + t434 * t45 + t433 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317 - 0.2e1 * t479 (t335 + t209) * qJD(2) + t296, -t207 - t457, -t161 * t460 - t162 * t209 + t297, 0, 0, 0, 0, 0, 0, t350 - t380 - 0.2e1 * t480, -t294 + t465, -t412 - t413, -t97 * t156 - t318 * t96 + t297 + t447, 0, 0, 0, 0, 0, 0, t29, t32, t12, t85 * t318 + t496 * t285 + (t5 - t440) * t281 + t461, 0, 0, 0, 0, 0, 0, t29, t32, t12, t75 * t318 + t470 * t285 + (-t34 * t478 + t3) * t281 + t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t493, t494, -t407, t481, t375, t376 * t97 + t472, t376 * t96 + t473, 0, 0, t488, t499, t487, t37, t27, t485, -pkin(4) * t69 - t97 * t139 - t60 * t478 + t332 * t281 + (t362 - t372) * t285 + t476, pkin(4) * t68 - t97 * t141 + t61 * t478 + t236 + t332 * t285 + (-t320 + t372) * t281 + t474, t61 * t139 + t60 * t141 + (-t440 + (-t69 + t383) * pkin(9)) * t285 + ((qJD(5) * t139 - t68) * pkin(9) - t496) * t281 + t342, -t24 * pkin(4) + pkin(9) * t295 - g(1) * t338 - g(2) * t339 - g(3) * t462 - t52 * t60 - t53 * t61 - t85 * t97, t488, t499, t487, t37, t27, t485, t139 * t337 + t242 * t91 - t264 * t69 + t427 * t478 + t491, -t76 * t141 - t244 * t91 + t264 * t68 + t236 - t428 * t478 + (pkin(5) * t383 - t320) * t281 + t492, -t428 * t139 - t427 * t141 + t242 * t68 - t244 * t69 - t478 * t439 + t498, g(1) * t313 + g(2) * t314 - g(3) * t464 + t1 * t242 - t18 * t264 + t3 * t244 + t337 * t75 + t34 * t427 + t428 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t77, t46, -t418, t47, t91, -t85 * t141 + t291 + t437, t139 * t85 + t305 + t440, 0, 0, t418, t77, t46, -t418, t47, t91, 0.2e1 * t456 + t436 + t438 + (-t351 - t75) * t141 + t291, -t458 * pkin(5) + t435 + t44 * t478 + (qJD(6) + t75) * t139 + t305, pkin(5) * t68 - t139 * t442, t442 * t45 + (-t75 * t141 + t1 + t459) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69 + t417, -t68 - t421, -t138 - t458, t45 * t139 + t34 * t141 - t363 - t482;];
tau_reg  = t2;
