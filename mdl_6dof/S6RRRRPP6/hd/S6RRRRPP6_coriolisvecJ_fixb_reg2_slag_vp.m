% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:15:04
% EndTime: 2019-03-09 21:15:22
% DurationCPUTime: 6.90s
% Computational Cost: add. (9936->588), mult. (24244->706), div. (0->0), fcn. (16475->6), ass. (0->263)
t230 = cos(qJ(2));
t322 = qJD(1) * t230;
t208 = -qJD(3) + t322;
t190 = -qJD(4) + t208;
t227 = sin(qJ(3));
t228 = sin(qJ(2));
t323 = qJD(1) * t228;
t294 = t227 * t323;
t229 = cos(qJ(3));
t317 = qJD(2) * t229;
t165 = -t294 + t317;
t300 = t229 * t323;
t319 = qJD(2) * t227;
t166 = t300 + t319;
t226 = sin(qJ(4));
t372 = cos(qJ(4));
t251 = t226 * t165 + t166 * t372;
t314 = qJD(3) * t228;
t288 = qJD(1) * t314;
t187 = t227 * t288;
t276 = qJD(3) + t322;
t257 = qJD(2) * t276;
t245 = t229 * t257 - t187;
t308 = qJD(1) * qJD(2);
t289 = t230 * t308;
t315 = qJD(3) * t227;
t303 = qJD(2) * t315 + t227 * t289 + t229 * t288;
t56 = qJD(4) * t251 + t226 * t245 + t372 * t303;
t396 = t251 * t190 + t56;
t113 = -t372 * t165 + t166 * t226;
t110 = t113 ^ 2;
t111 = t251 ^ 2;
t259 = t111 - t110;
t301 = t227 * t322;
t302 = t372 * t229;
t339 = t226 * t227;
t376 = qJD(3) + qJD(4);
t290 = t372 * qJD(4);
t291 = t372 * qJD(3);
t378 = t291 + t290;
t327 = -t226 * t301 - t229 * t378 + t302 * t322 + t339 * t376;
t217 = pkin(7) * t323;
t359 = qJD(2) * pkin(2);
t181 = t217 - t359;
t135 = -t165 * pkin(3) + t181;
t243 = -qJ(5) * t251 + t135;
t51 = pkin(4) * t113 + t243;
t358 = t251 * t51;
t212 = t228 * t308;
t206 = pkin(4) * t212;
t312 = qJD(4) * t226;
t175 = -pkin(2) * t230 - pkin(8) * t228 - pkin(1);
t158 = t175 * qJD(1);
t218 = pkin(7) * t322;
t182 = qJD(2) * pkin(8) + t218;
t122 = t158 * t227 + t182 * t229;
t268 = pkin(2) * t228 - pkin(8) * t230;
t171 = t268 * qJD(2);
t159 = qJD(1) * t171;
t275 = pkin(7) * t212;
t80 = -qJD(3) * t122 + t229 * t159 + t227 * t275;
t50 = t187 * pkin(9) + (-pkin(9) * t229 * t276 + pkin(3) * t323) * qJD(2) + t80;
t313 = qJD(3) * t229;
t79 = t158 * t313 + t227 * t159 - t182 * t315 - t229 * t275;
t60 = -pkin(9) * t303 + t79;
t121 = t229 * t158 - t182 * t227;
t97 = -pkin(9) * t166 + t121;
t89 = -pkin(3) * t208 + t97;
t98 = pkin(9) * t165 + t122;
t286 = t226 * t60 + t98 * t290 + t89 * t312 - t372 * t50;
t5 = -t206 + t286;
t399 = t358 + t5;
t170 = t268 * qJD(1);
t133 = pkin(7) * t294 + t229 * t170;
t335 = t229 * t230;
t256 = pkin(3) * t228 - pkin(9) * t335;
t102 = qJD(1) * t256 + t133;
t152 = t227 * t170;
t336 = t228 * t229;
t337 = t227 * t230;
t118 = t152 + (-pkin(7) * t336 - pkin(9) * t337) * qJD(1);
t374 = -pkin(9) - pkin(8);
t183 = t374 * t227;
t184 = t374 * t229;
t258 = t374 * t291;
t274 = qJD(3) * t226 * t374;
t361 = t226 * t102 + t372 * t118 - t183 * t290 - t184 * t312 - t227 * t258 - t229 * t274;
t369 = pkin(4) + qJ(6);
t34 = t113 * t369 + t243;
t398 = t113 * t34;
t397 = t51 * t113;
t352 = qJ(5) * t113;
t395 = t113 * t251;
t168 = t226 * t229 + t227 * t372;
t126 = t376 * t168;
t326 = -t168 * t322 + t126;
t269 = -t218 + (-t301 + t315) * pkin(3);
t316 = qJD(2) * t230;
t299 = t227 * t316;
t394 = t228 * t313 + t299;
t389 = pkin(5) * t251;
t356 = t226 * t98;
t41 = -t372 * t89 + t356;
t254 = t41 + t389;
t329 = qJD(5) + t254;
t377 = t113 * pkin(5) - qJD(6);
t55 = -t165 * t290 + t166 * t312 + t226 * t303 - t372 * t245;
t393 = t113 * t190 + t55;
t287 = -t226 * t50 - t89 * t290 + t98 * t312 - t372 * t60;
t392 = t113 * t135 + t287;
t391 = -0.2e1 * t308;
t390 = pkin(4) * t251;
t364 = qJ(5) * t323 + t361;
t46 = t372 * t97 - t356;
t354 = -pkin(3) * t290 - qJD(5) + t46;
t132 = t226 * t183 - t184 * t372;
t388 = -qJD(4) * t132 - t102 * t372 + t226 * t118 - t227 * t274 + t229 * t258;
t93 = t372 * t98;
t45 = t226 * t97 + t93;
t271 = pkin(3) * t312 - t45;
t387 = t121 * t208 + t79;
t386 = t122 * t208 - t80;
t384 = t135 * t251;
t382 = t251 * t369;
t185 = t190 ^ 2;
t381 = -t111 - t185;
t174 = qJD(5) * t190;
t201 = qJ(5) * t212;
t380 = t201 - t174;
t210 = pkin(7) * t335;
t139 = t227 * t175 + t210;
t379 = qJ(5) * t327 - t168 * qJD(5) + t269;
t1 = -t55 * pkin(5) - qJ(6) * t212 + qJD(6) * t190 + t5;
t239 = -t251 * t34 - t1;
t146 = t168 * t228;
t318 = qJD(2) * t228;
t273 = t372 * t316;
t298 = t227 * t314;
t338 = t227 * t228;
t305 = t226 * t338;
t82 = t227 * t273 - t226 * t298 - qJD(4) * t305 + (t226 * t316 + t228 * t378) * t229;
t13 = -t82 * t190 - t56 * t230 + (qJD(1) * t146 + t113) * t318;
t147 = t228 * t302 - t305;
t81 = t126 * t228 + t226 * t299 - t229 * t273;
t12 = t81 * t190 + t55 * t230 + (qJD(1) * t147 + t251) * t318;
t35 = t190 * t327 + (qJD(2) * t168 - t251) * t323;
t167 = -t302 + t339;
t375 = t190 * t326 - (qJD(2) * t167 - t113) * t323;
t235 = t113 * t327 + t55 * t167 - t56 * t168 - t251 * t326;
t373 = t56 * pkin(5);
t371 = pkin(7) * t227;
t368 = t167 * qJD(6) + t326 * t369 + t379;
t292 = t228 * t369;
t367 = -pkin(5) * t327 + qJD(1) * t292 - t388;
t366 = pkin(5) * t326 + t364;
t365 = pkin(4) * t326 + t379;
t363 = -pkin(4) * t323 + t388;
t360 = qJ(5) * t56;
t211 = pkin(3) * t226 + qJ(5);
t357 = t211 * t56;
t355 = t271 + t377;
t353 = -t354 + t389;
t345 = t165 * t208;
t344 = t166 * t165;
t343 = t166 * t208;
t342 = t181 * t227;
t340 = t208 * t227;
t334 = t230 * t208;
t232 = qJD(1) ^ 2;
t333 = t230 * t232;
t231 = qJD(2) ^ 2;
t332 = t231 * t228;
t331 = t231 * t230;
t330 = -qJD(5) - t41;
t42 = t226 * t89 + t93;
t328 = -t42 + t377;
t164 = t229 * t175;
t120 = -pkin(9) * t336 + t164 + (-pkin(3) - t371) * t230;
t127 = -pkin(9) * t338 + t139;
t75 = t226 * t120 + t372 * t127;
t325 = t229 * t171 + t318 * t371;
t172 = pkin(3) * t338 + t228 * pkin(7);
t223 = t228 ^ 2;
t324 = -t230 ^ 2 + t223;
t131 = -t372 * t183 - t184 * t226;
t321 = qJD(2) * t131;
t320 = qJD(2) * t132;
t311 = t165 * qJD(3);
t310 = t166 * qJD(3);
t309 = t223 * qJD(1);
t307 = pkin(7) * t337;
t219 = pkin(7) * t316;
t304 = t228 * t333;
t136 = pkin(3) * t394 + t219;
t216 = -t229 * pkin(3) - pkin(2);
t296 = t208 * t313;
t295 = t190 * t323;
t285 = -t181 - t359;
t284 = pkin(1) * t391;
t283 = -t212 + t395;
t278 = -t165 + t317;
t277 = -t166 + t319;
t215 = -pkin(3) * t372 - pkin(4);
t272 = t230 * t212;
t270 = -t174 - t287;
t69 = qJ(5) * t230 - t75;
t266 = -t147 * qJ(5) + t172;
t74 = t120 * t372 - t226 * t127;
t264 = t166 * pkin(3) + t352;
t21 = t113 * t82 + t146 * t56;
t20 = -t147 * t55 - t251 * t81;
t263 = -t131 * t55 - t132 * t56;
t4 = -t201 - t270;
t255 = -t168 * qJ(5) + t216;
t253 = -t287 - t373;
t70 = t230 * pkin(4) - t74;
t109 = pkin(3) * t303 + pkin(7) * t289;
t252 = -t190 * t42 - t286;
t73 = t256 * qJD(2) + (-t210 + (pkin(9) * t228 - t175) * t227) * qJD(3) + t325;
t95 = t227 * t171 + t175 * t313 + (-t228 * t317 - t230 * t315) * pkin(7);
t78 = -pkin(9) * t394 + t95;
t249 = t120 * t312 + t127 * t290 + t226 * t78 - t372 * t73;
t18 = t120 * t290 - t127 * t312 + t226 * t73 + t372 * t78;
t248 = t227 * t257;
t14 = -t55 * t168 - t251 * t327;
t15 = t113 * t326 + t56 * t167;
t246 = t253 - t398;
t244 = t81 * qJ(5) - t147 * qJD(5) + t136;
t39 = t190 * qJ(5) - t42;
t240 = t113 * t81 + t146 * t55 - t147 * t56 - t251 * t82;
t238 = t211 * t212 - t4;
t237 = t55 * qJ(5) - qJD(5) * t251 + t109;
t16 = -qJ(5) * t318 + qJD(5) * t230 - t18;
t205 = -qJ(6) + t215;
t197 = 0.2e1 * t201;
t138 = t164 - t307;
t137 = (-t190 - t322) * t318;
t134 = -pkin(7) * t300 + t152;
t108 = pkin(4) * t167 + t255;
t101 = -t167 * pkin(5) + t132;
t100 = pkin(5) * t168 + t131;
t96 = -qJD(3) * t139 + t325;
t94 = t167 * t369 + t255;
t90 = pkin(4) * t146 + t266;
t72 = t352 + t390;
t71 = t146 * t369 + t266;
t62 = t264 + t390;
t57 = -pkin(5) * t146 - t69;
t49 = t147 * pkin(5) + t230 * qJ(6) + t70;
t44 = t352 + t382;
t38 = pkin(4) * t190 - t330;
t37 = t264 + t382;
t24 = -t39 - t377;
t23 = t190 * t369 + t329;
t22 = pkin(4) * t82 + t244;
t17 = -pkin(4) * t318 + t249;
t11 = t146 * qJD(6) + t369 * t82 + t244;
t10 = t56 * pkin(4) + t237;
t9 = -pkin(5) * t82 - t16;
t8 = -t81 * pkin(5) - qJD(2) * t292 + t230 * qJD(6) + t249;
t3 = t113 * qJD(6) + t369 * t56 + t237;
t2 = t253 + t380;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t272, t324 * t391, t331, -0.2e1 * t272, -t332, 0, -pkin(7) * t331 + t228 * t284, pkin(7) * t332 + t230 * t284, 0, 0, t245 * t336 + (t229 * t316 - t298) * t166 (t165 * t229 - t166 * t227) * t316 + ((t187 - t311) * t227 + (-t248 - t303 - t310) * t229) * t228, t208 * t298 + t187 * t230 + (t166 * t228 + (t309 + (-t208 - t276) * t230) * t229) * qJD(2), -t165 * t394 + t303 * t338, t228 * t296 + t303 * t230 + (t165 * t228 + (-t309 + t334) * t227) * qJD(2) (-t208 - t322) * t318, -t96 * t208 - t80 * t230 + (pkin(7) * t303 + t181 * t313) * t228 + ((-pkin(7) * t165 + t342) * t230 + (t121 + (t138 + t307) * qJD(1)) * t228) * qJD(2), t95 * t208 + (-t181 * t315 - pkin(7) * t187 + (pkin(7) * t313 - qJD(1) * t139 - t122) * qJD(2)) * t228 + (t79 + (t181 * t229 + (t166 + 0.2e1 * t300) * pkin(7)) * qJD(2)) * t230, t95 * t165 - t139 * t303 - t96 * t166 + t138 * t187 + (-t122 * t337 + (-t121 * t230 - t138 * t276) * t229) * qJD(2) + (-t79 * t227 - t80 * t229 + (t121 * t227 - t122 * t229) * qJD(3)) * t228, t121 * t96 + t122 * t95 + t80 * t138 + t79 * t139 + (t181 + t217) * t219, t20, t240, t12, t21, -t13, t137, t109 * t146 + t136 * t113 + t135 * t82 + t172 * t56 + t249 * t190 + t286 * t230 + (qJD(1) * t74 - t41) * t318, t109 * t147 + t136 * t251 - t135 * t81 - t172 * t55 + t18 * t190 - t287 * t230 + (-qJD(1) * t75 - t42) * t318, -t113 * t18 + t146 * t287 + t147 * t286 + t249 * t251 - t41 * t81 - t42 * t82 + t55 * t74 - t56 * t75, t109 * t172 + t135 * t136 + t18 * t42 + t249 * t41 - t286 * t74 - t287 * t75, t137, -t12, t13, t20, t240, t21, t113 * t16 + t146 * t4 + t147 * t5 + t17 * t251 - t38 * t81 + t39 * t82 - t55 * t70 + t56 * t69, -t10 * t146 - t22 * t113 - t17 * t190 - t5 * t230 - t51 * t82 - t90 * t56 + (qJD(1) * t70 + t38) * t318, -t10 * t147 - t22 * t251 + t16 * t190 + t4 * t230 + t51 * t81 + t90 * t55 + (-qJD(1) * t69 - t39) * t318, t10 * t90 + t16 * t39 + t17 * t38 + t22 * t51 + t4 * t69 + t5 * t70, t137, t13, t12, t21, -t240, t20, t1 * t147 - t113 * t9 - t146 * t2 - t23 * t81 - t24 * t82 + t251 * t8 - t49 * t55 - t56 * t57, -t11 * t251 - t3 * t147 - t9 * t190 - t2 * t230 + t34 * t81 + t71 * t55 + (qJD(1) * t57 + t24) * t318, t1 * t230 + t11 * t113 + t3 * t146 + t8 * t190 + t34 * t82 + t71 * t56 + (-qJD(1) * t49 - t23) * t318, t1 * t49 + t11 * t34 + t2 * t57 + t23 * t8 + t24 * t9 + t3 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t304, t324 * t232, 0, t304, 0, 0, t232 * pkin(1) * t228, pkin(1) * t333, 0, 0, -t187 * t227 + (t248 - t343) * t229 (-t303 + t343) * t227 + (t245 - t345) * t229, -t296 + (t228 * t277 + t229 * t334) * qJD(1), t165 * t340 - t229 * t303, t208 * t315 + (-t227 * t334 + t228 * t278) * qJD(1), t208 * t323, -pkin(2) * t303 + t133 * t208 + (pkin(8) * t208 * t229 + t342) * qJD(3) + ((-pkin(8) * t319 - t121) * t228 + (-pkin(7) * t278 - t342) * t230) * qJD(1), pkin(2) * t187 - t134 * t208 + (-pkin(8) * t340 + (t181 - t359) * t229) * qJD(3) + ((-pkin(8) * t317 + t122) * t228 + (pkin(7) * t277 + t229 * t285) * t230) * qJD(1), t133 * t166 - t134 * t165 + ((-t303 + t310) * pkin(8) + t387) * t229 + ((t245 - t311) * pkin(8) + t386) * t227, -t121 * t133 - t122 * t134 + t285 * t218 + (-t80 * t227 + t79 * t229 + (-t121 * t229 - t122 * t227) * qJD(3)) * pkin(8), t14, t235, t35, t15, t375, t295, t109 * t167 + t216 * t56 - t388 * t190 + t326 * t135 + t269 * t113 + (t41 - t321) * t323, t109 * t168 - t216 * t55 - t361 * t190 - t327 * t135 + t269 * t251 + (t42 - t320) * t323, t113 * t361 + t167 * t287 + t168 * t286 - t251 * t388 - t326 * t42 - t327 * t41 + t263, t109 * t216 + t131 * t286 - t132 * t287 + t135 * t269 - t361 * t42 - t388 * t41, t295, -t35, -t375, t14, t235, t15, t113 * t364 + t4 * t167 + t5 * t168 - t251 * t363 + t326 * t39 - t327 * t38 + t263, -t10 * t167 - t108 * t56 - t326 * t51 + t363 * t190 - t365 * t113 + (-t38 + t321) * t323, -t10 * t168 + t108 * t55 + t327 * t51 + t364 * t190 - t365 * t251 + (t39 + t320) * t323, t10 * t108 + t131 * t5 - t132 * t4 - t363 * t38 + t364 * t39 + t365 * t51, t295, -t375, t35, t15, -t235, t14, t1 * t168 - t100 * t55 - t101 * t56 + t113 * t366 - t2 * t167 - t23 * t327 - t24 * t326 + t251 * t367, -t3 * t168 + t94 * t55 + t327 * t34 + t366 * t190 - t368 * t251 + (qJD(2) * t101 - t24) * t323, t3 * t167 + t94 * t56 + t326 * t34 + t367 * t190 + t368 * t113 + (-qJD(2) * t100 + t23) * t323, t1 * t100 + t101 * t2 + t23 * t367 - t24 * t366 + t3 * t94 + t34 * t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, -t165 ^ 2 + t166 ^ 2, t245 + t345, t344, -t303 - t343, t212, -t181 * t166 - t386, -t165 * t181 - t387, 0, 0, t395, t259, -t393, -t395, -t396, t212, -t384 - t45 * t190 + (-t113 * t166 + t190 * t312 + t212 * t372) * pkin(3) - t286, -t46 * t190 + (-t166 * t251 + t190 * t290 - t212 * t226) * pkin(3) + t392, t42 * t251 + t46 * t113 + t113 * t41 - t45 * t251 + (t372 * t55 - t226 * t56 + (-t113 * t372 + t226 * t251) * qJD(4)) * pkin(3), -t41 * t45 - t42 * t46 + (-t372 * t286 - t135 * t166 - t226 * t287 + (t226 * t41 + t372 * t42) * qJD(4)) * pkin(3), t212, t393, t396, t395, t259, -t395, -t215 * t55 - t357 + (t271 - t39) * t251 + (t354 + t38) * t113, t62 * t113 - t190 * t271 + t212 * t215 + t399, t190 * t354 + t251 * t62 + t238 - t397, -t4 * t211 + t5 * t215 + t271 * t38 + t354 * t39 - t51 * t62, t212, t396, -t393, -t395, -t259, t395, -t205 * t55 - t357 + (t24 + t355) * t251 + (-t353 + t23) * t113, -t190 * t353 + t251 * t37 + t238 - t373 - t398, -t37 * t113 + t190 * t355 - t205 * t212 + t239, t1 * t205 + t2 * t211 + t23 * t355 + t24 * t353 - t34 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t259, -t393, -t395, -t396, t212, t252 - t384, t190 * t41 + t392, 0, 0, t212, t393, t396, t395, t259, -t395, pkin(4) * t55 - t360 + (-t39 - t42) * t251 + (t38 + t330) * t113, t113 * t72 - 0.2e1 * t206 - t252 + t358, t190 * t330 + t251 * t72 + t197 + t270 - t397, -pkin(4) * t5 - qJ(5) * t4 + t330 * t39 - t38 * t42 - t51 * t72, t212, t396, -t393, -t395, -t259, t395, -t360 + t369 * t55 + (t24 + t328) * t251 + (t23 - t329) * t113, -t190 * t254 + t251 * t44 - 0.2e1 * t174 + t197 + t246, -t44 * t113 + t190 * t328 + t212 * t369 + t239, t2 * qJ(5) - t1 * t369 + t23 * t328 + t24 * t329 - t34 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, -t283, t381, -t190 * t39 + t399, 0, 0, 0, 0, 0, 0, -t393, t381, t283, t190 * t24 - t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t396, t212 + t395, -t110 - t185, -t190 * t23 + t246 + t380;];
tauc_reg  = t6;
