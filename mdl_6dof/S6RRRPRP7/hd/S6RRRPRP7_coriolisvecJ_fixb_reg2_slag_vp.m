% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:11:13
% EndTime: 2019-03-09 17:11:40
% DurationCPUTime: 13.61s
% Computational Cost: add. (21496->687), mult. (56815->898), div. (0->0), fcn. (44924->10), ass. (0->287)
t271 = sin(pkin(6));
t278 = cos(qJ(2));
t358 = qJD(1) * t278;
t256 = t271 * t358;
t311 = t256 - qJD(3);
t275 = sin(qJ(2));
t359 = qJD(1) * t275;
t345 = t271 * t359;
t272 = cos(pkin(6));
t408 = pkin(1) * t278;
t349 = t272 * t408;
t219 = -pkin(8) * t345 + qJD(1) * t349;
t296 = t271 * (pkin(2) * t275 - pkin(9) * t278);
t220 = qJD(1) * t296;
t274 = sin(qJ(3));
t277 = cos(qJ(3));
t164 = -t274 * t219 + t277 * t220;
t406 = -qJ(4) - pkin(9);
t337 = qJD(3) * t406;
t361 = qJD(1) * t271;
t369 = t277 * t278;
t433 = (pkin(3) * t275 - qJ(4) * t369) * t361 + t164 + t274 * qJD(4) - t277 * t337;
t165 = t277 * t219 + t274 * t220;
t318 = t274 * t256;
t432 = qJ(4) * t318 + t277 * qJD(4) + t274 * t337 - t165;
t270 = sin(pkin(11));
t393 = cos(pkin(11));
t335 = t393 * t274;
t236 = t270 * t277 + t335;
t365 = t311 * t236;
t372 = t270 * t274;
t294 = t277 * t393 - t372;
t187 = t294 * t256;
t228 = t294 * qJD(3);
t364 = t228 - t187;
t366 = -t270 * t433 + t432 * t393;
t370 = t271 * t278;
t363 = t272 * t275 * pkin(1) + pkin(8) * t370;
t222 = t363 * qJD(1);
t355 = qJD(3) * t274;
t315 = -t222 + (-t318 + t355) * pkin(3);
t360 = qJD(1) * t272;
t257 = qJD(2) + t360;
t203 = t257 * t277 - t274 * t345;
t204 = t257 * t274 + t277 * t345;
t156 = -t393 * t203 + t204 * t270;
t424 = qJD(5) + t156;
t327 = t424 ^ 2;
t431 = -pkin(10) * t345 + t366;
t273 = sin(qJ(5));
t276 = cos(qJ(5));
t295 = t270 * t203 + t204 * t393;
t134 = -t273 * t311 + t276 * t295;
t328 = t134 * t424;
t325 = t276 * t311;
t132 = t273 * t295 + t325;
t323 = t424 * t132;
t430 = pkin(4) * t365 + t364 * pkin(10) - t315;
t192 = t257 * pkin(9) + t222;
t217 = (-pkin(2) * t278 - pkin(9) * t275 - pkin(1)) * t271;
t199 = qJD(1) * t217;
t147 = -t274 * t192 + t277 * t199;
t122 = -t204 * qJ(4) + t147;
t109 = -pkin(3) * t311 + t122;
t148 = t192 * t277 + t199 * t274;
t123 = qJ(4) * t203 + t148;
t336 = t393 * t123;
t63 = t270 * t109 + t336;
t57 = -pkin(10) * t311 + t63;
t191 = -pkin(2) * t257 - t219;
t154 = -pkin(3) * t203 + qJD(4) + t191;
t80 = pkin(4) * t156 - pkin(10) * t295 + t154;
t28 = t273 * t80 + t276 * t57;
t16 = qJ(6) * t424 + t28;
t357 = qJD(2) * t275;
t344 = t271 * t357;
t253 = qJD(1) * t344;
t221 = qJD(2) * t296;
t211 = qJD(1) * t221;
t371 = t271 * t275;
t258 = pkin(8) * t371;
t231 = -t258 + t349;
t223 = t231 * qJD(2);
t212 = qJD(1) * t223;
t329 = t277 * t211 - t274 * t212;
t106 = -t148 * qJD(3) + t329;
t316 = qJD(3) * t345;
t350 = qJD(1) * qJD(2);
t338 = t278 * t350;
t317 = t271 * t338;
t354 = qJD(3) * t277;
t177 = -t257 * t354 + t274 * t316 - t277 * t317;
t65 = pkin(3) * t253 + t177 * qJ(4) - t204 * qJD(4) + t106;
t291 = t192 * t355 - t199 * t354 - t274 * t211 - t277 * t212;
t346 = t257 * t355 + t274 * t317 + t277 * t316;
t72 = -qJ(4) * t346 + t203 * qJD(4) - t291;
t26 = t270 * t65 + t393 * t72;
t21 = pkin(10) * t253 + t26;
t352 = qJD(5) * t276;
t353 = qJD(5) * t273;
t224 = t363 * qJD(2);
t213 = qJD(1) * t224;
t144 = pkin(3) * t346 + t213;
t284 = t177 * t393 + t270 * t346;
t330 = t270 * t177 - t393 * t346;
t52 = -pkin(4) * t330 + pkin(10) * t284 + t144;
t334 = t273 * t21 - t276 * t52 + t57 * t352 + t80 * t353;
t407 = pkin(5) * t330;
t2 = t334 + t407;
t429 = t16 * t424 - t2;
t27 = -t273 * t57 + t276 * t80;
t3 = t276 * t21 + t273 * t52 + t80 * t352 - t353 * t57;
t428 = -t27 * t424 + t3;
t298 = t28 * t424 - t334;
t427 = t156 * t295;
t367 = t432 * t270 + t393 * t433;
t320 = qJD(3) * t311;
t426 = -pkin(9) * t320 + t213;
t425 = t311 * t147 - t291;
t170 = t187 * t276 + t273 * t345;
t331 = t228 * t276 - t170;
t169 = t187 * t273 - t276 * t345;
t332 = t228 * t273 - t169;
t75 = qJD(5) * t134 - t276 * t253 - t273 * t284;
t397 = t75 * t276;
t74 = qJD(5) * t325 - t273 * t253 + t276 * t284 + t295 * t353;
t398 = t74 * t273;
t423 = -t331 * t132 - t332 * t134 + t236 * (qJD(5) * (t132 * t273 - t134 * t276) - t397 + t398);
t267 = t271 ^ 2;
t422 = -0.2e1 * t267 * t350;
t266 = -pkin(3) * t277 - pkin(2);
t178 = -pkin(4) * t294 - pkin(10) * t236 + t266;
t252 = t406 * t277;
t190 = -t252 * t393 + t372 * t406;
t402 = -t178 * t352 + t190 * t353 + t430 * t273 - t431 * t276;
t395 = pkin(4) * t345 + t367;
t420 = t75 - t328;
t229 = -t272 * t277 + t274 * t371;
t230 = t272 * t274 + t277 * t371;
t172 = t229 * t393 + t230 * t270;
t173 = -t270 * t229 + t230 * t393;
t215 = t258 + (-pkin(2) - t408) * t272;
t176 = t229 * pkin(3) + t215;
t104 = t172 * pkin(4) - t173 * pkin(10) + t176;
t216 = pkin(9) * t272 + t363;
t160 = -t216 * t274 + t277 * t217;
t128 = -pkin(3) * t370 - qJ(4) * t230 + t160;
t161 = t277 * t216 + t274 * t217;
t141 = -qJ(4) * t229 + t161;
t89 = t270 * t128 + t393 * t141;
t84 = -pkin(10) * t370 + t89;
t419 = t273 * t104 + t276 * t84;
t418 = t156 * t311;
t417 = t203 * t311;
t416 = t204 * t311;
t414 = t273 * t178 + t276 * t190;
t115 = t270 * t123;
t62 = t109 * t393 - t115;
t56 = pkin(4) * t311 - t62;
t29 = t132 * pkin(5) - t134 * qJ(6) + t56;
t264 = pkin(3) * t270 + pkin(10);
t389 = t330 * t264;
t413 = t29 * t424 + t389;
t111 = -qJD(3) * t161 + t277 * t221 - t274 * t223;
t343 = qJD(2) * t370;
t183 = -qJD(3) * t229 + t277 * t343;
t85 = pkin(3) * t344 - t183 * qJ(4) - t230 * qJD(4) + t111;
t110 = -t216 * t355 + t217 * t354 + t274 * t221 + t277 * t223;
t182 = qJD(3) * t230 + t274 * t343;
t90 = -qJ(4) * t182 - qJD(4) * t229 + t110;
t38 = t270 * t85 + t393 * t90;
t36 = pkin(10) * t344 + t38;
t139 = t182 * t393 + t183 * t270;
t140 = -t270 * t182 + t183 * t393;
t159 = t182 * pkin(3) + t224;
t59 = t139 * pkin(4) - t140 * pkin(10) + t159;
t8 = -qJD(5) * t419 - t273 * t36 + t276 * t59;
t403 = qJD(5) * t414 + t431 * t273 + t430 * t276;
t119 = t273 * t330;
t290 = t236 * t352 + t332;
t410 = -t119 * t236 - t132 * t365 + t290 * t424 - t294 * t75;
t409 = t134 ^ 2;
t405 = qJ(6) * t365 + qJD(6) * t294 + t402;
t404 = -pkin(5) * t365 - t403;
t312 = pkin(5) * t273 - qJ(6) * t276;
t313 = t276 * pkin(5) + t273 * qJ(6);
t401 = t169 * pkin(5) - t170 * qJ(6) - t312 * t228 - (qJD(5) * t313 - qJD(6) * t276) * t236 - t395;
t25 = -t270 * t72 + t393 * t65;
t71 = t122 * t393 - t115;
t99 = pkin(3) * t204 + pkin(4) * t295 + pkin(10) * t156;
t34 = t273 * t99 + t276 * t71;
t400 = t134 * t29;
t399 = t264 * t74;
t396 = -t132 * t352 - t273 * t75;
t70 = t270 * t122 + t336;
t394 = -t273 * qJD(6) + t312 * t424 - t70;
t392 = qJ(6) * t330;
t391 = t330 * t172;
t390 = t330 * t294;
t388 = t132 * t264;
t387 = t132 * t276;
t386 = t134 * t132;
t384 = t134 * t295;
t383 = t134 * t264;
t382 = t134 * t273;
t381 = t424 * t295;
t380 = t424 * t156;
t379 = t295 * t132;
t378 = t295 ^ 2;
t377 = t156 ^ 2;
t376 = t204 * t203;
t375 = t236 * t273;
t374 = t236 * t276;
t373 = t267 * qJD(1) ^ 2;
t120 = t276 * t330;
t368 = qJD(6) - t27;
t362 = t275 ^ 2 - t278 ^ 2;
t356 = qJD(2) * t277;
t347 = t273 * t370;
t342 = t264 * t353;
t341 = t264 * t352;
t340 = t132 ^ 2 - t409;
t126 = t134 * t353;
t333 = -t276 * t74 - t126;
t189 = -t270 * t252 - t406 * t335;
t326 = t295 * t311;
t324 = t278 * t311;
t322 = t311 * t271;
t321 = t257 + t360;
t319 = t275 * t278 * t373;
t265 = -pkin(3) * t393 - pkin(4);
t314 = pkin(1) * t422;
t37 = -t270 * t90 + t393 * t85;
t151 = t173 * t273 + t276 * t370;
t95 = -qJD(5) * t347 + t140 * t273 + t173 * t352 - t276 * t344;
t310 = t132 * t95 + t151 * t75;
t309 = -t27 * t276 - t273 * t28;
t33 = -t273 * t71 + t276 * t99;
t88 = t128 * t393 - t270 * t141;
t41 = t104 * t276 - t273 * t84;
t129 = t178 * t276 - t190 * t273;
t302 = t267 * t275 * t338;
t301 = t276 * t380 + t352 * t424 - t119;
t300 = -t273 * t380 - t353 * t424 - t120;
t299 = t322 * t359;
t83 = pkin(4) * t370 - t88;
t7 = t104 * t352 + t273 * t59 + t276 * t36 - t353 * t84;
t292 = t424 * t56 + t389;
t289 = t236 * t353 - t331;
t20 = -pkin(4) * t253 - t25;
t288 = pkin(1) * (-t272 * t350 + t373);
t286 = t273 * t323 - t397;
t285 = -t300 - t379;
t35 = -pkin(4) * t344 - t37;
t152 = t173 * t276 - t347;
t94 = qJD(5) * t151 - t276 * t140 - t273 * t344;
t283 = t132 * t94 - t134 * t95 + t151 * t74 - t152 * t75;
t282 = t132 * t139 - t151 * t330 + t172 * t75 + t424 * t95;
t280 = t132 * t290 + t375 * t75;
t233 = -t313 + t265;
t181 = (-t267 * t358 - t322) * t357;
t143 = t236 * t312 + t189;
t118 = pkin(5) * t294 - t129;
t114 = -qJ(6) * t294 + t414;
t91 = pkin(5) * t134 + qJ(6) * t132;
t66 = t264 * t397;
t47 = t139 * t424 - t391;
t46 = -t365 * t424 + t390;
t43 = t151 * pkin(5) - t152 * qJ(6) + t83;
t39 = -t74 + t323;
t31 = -pkin(5) * t172 - t41;
t30 = qJ(6) * t172 + t419;
t24 = -pkin(5) * t295 - t33;
t23 = qJ(6) * t295 + t34;
t22 = t276 * t328 - t398;
t19 = t301 - t384;
t15 = -pkin(5) * t424 + t368;
t14 = -t134 * t94 - t152 * t74;
t13 = -t134 * t289 - t374 * t74;
t12 = t95 * pkin(5) + t94 * qJ(6) - t152 * qJD(6) + t35;
t11 = t134 * t139 - t152 * t330 - t172 * t74 - t424 * t94;
t10 = -t120 * t236 - t134 * t365 - t289 * t424 + t294 * t74;
t9 = pkin(5) * t75 + qJ(6) * t74 - qJD(6) * t134 + t20;
t6 = -t139 * pkin(5) - t8;
t5 = qJ(6) * t139 + qJD(6) * t172 + t7;
t1 = qJD(6) * t424 + t3 - t392;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t302, t362 * t422, t321 * t343, -0.2e1 * t302, -t321 * t344, 0, -t213 * t272 - t224 * t257 + t275 * t314, -t212 * t272 - t223 * t257 + t278 * t314 (t212 * t278 + t213 * t275 + (-t219 * t278 - t222 * t275) * qJD(2) + (t223 * t278 + t224 * t275 + (-t231 * t278 - t275 * t363) * qJD(2)) * qJD(1)) * t271, t212 * t363 - t213 * t231 - t219 * t224 + t222 * t223, -t177 * t230 + t183 * t204, t177 * t229 - t204 * t182 + t183 * t203 - t230 * t346, -t183 * t311 + (t177 * t278 + (qJD(1) * t230 + t204) * t357) * t271, -t203 * t182 + t229 * t346, t182 * t311 + (t346 * t278 + (-qJD(1) * t229 + t203) * t357) * t271, t181, -t111 * t311 - t224 * t203 + t215 * t346 + t213 * t229 + t191 * t182 + (-t106 * t278 + (qJD(1) * t160 + t147) * t357) * t271, t110 * t311 + t224 * t204 - t215 * t177 + t213 * t230 + t191 * t183 + (-t291 * t278 + (-qJD(1) * t161 - t148) * t357) * t271, -t106 * t230 + t110 * t203 - t111 * t204 - t147 * t183 - t148 * t182 + t160 * t177 - t161 * t346 + t229 * t291, t106 * t160 + t110 * t148 + t111 * t147 - t161 * t291 + t191 * t224 + t213 * t215, t140 * t295 - t173 * t284, -t139 * t295 - t140 * t156 + t172 * t284 + t173 * t330, -t140 * t311 + (t284 * t278 + (qJD(1) * t173 + t295) * t357) * t271, t139 * t156 - t391, t139 * t311 + (-t330 * t278 + (-qJD(1) * t172 - t156) * t357) * t271, t181, -t37 * t311 + t159 * t156 - t176 * t330 + t144 * t172 + t154 * t139 + (-t25 * t278 + (qJD(1) * t88 + t62) * t357) * t271, t38 * t311 + t159 * t295 - t176 * t284 + t144 * t173 + t154 * t140 + (t26 * t278 + (-qJD(1) * t89 - t63) * t357) * t271, -t63 * t139 - t62 * t140 - t38 * t156 - t26 * t172 - t25 * t173 + t284 * t88 - t295 * t37 + t330 * t89, t144 * t176 + t154 * t159 + t25 * t88 + t26 * t89 + t37 * t62 + t38 * t63, t14, t283, t11, t310, -t282, t47, t132 * t35 + t139 * t27 + t151 * t20 - t172 * t334 - t330 * t41 + t424 * t8 + t56 * t95 + t75 * t83, t134 * t35 - t139 * t28 + t152 * t20 - t172 * t3 + t330 * t419 - t424 * t7 - t56 * t94 - t74 * t83, -t132 * t7 - t134 * t8 - t151 * t3 + t152 * t334 + t27 * t94 - t28 * t95 + t41 * t74 - t419 * t75, t20 * t83 + t27 * t8 + t28 * t7 + t3 * t419 - t334 * t41 + t35 * t56, t14, t11, -t283, t47, t282, t310, t12 * t132 - t139 * t15 + t151 * t9 - t172 * t2 + t29 * t95 + t31 * t330 - t424 * t6 + t43 * t75, -t1 * t151 - t132 * t5 + t134 * t6 - t15 * t94 + t152 * t2 - t16 * t95 - t30 * t75 - t31 * t74, t1 * t172 - t12 * t134 + t139 * t16 - t152 * t9 + t29 * t94 - t30 * t330 + t424 * t5 + t43 * t74, t1 * t30 + t12 * t29 + t15 * t6 + t16 * t5 + t2 * t31 + t43 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, t362 * t373 (qJD(2) - t257) * t256, t319, t257 * t345 - t253, 0, -pkin(8) * t317 + t222 * t257 + t275 * t288, pkin(8) * t253 + t219 * t257 + t278 * t288, 0, 0, -t177 * t274 - t277 * t416 (-t177 - t417) * t277 + (-t346 + t416) * t274, -t277 * t320 + (t277 * t324 + (qJD(2) * t274 - t204) * t275) * t361, t274 * t417 - t277 * t346, t274 * t320 + (-t274 * t324 + (-t203 + t356) * t275) * t361, t299, -pkin(2) * t346 + t191 * t355 + t164 * t311 + t222 * t203 - t426 * t277 + (-t147 * t275 + (-pkin(9) * t357 - t191 * t278) * t274) * t361, pkin(2) * t177 + t191 * t354 - t165 * t311 - t222 * t204 + t426 * t274 + (-t191 * t369 + (-pkin(9) * t356 + t148) * t275) * t361, t164 * t204 - t165 * t203 + ((qJD(3) * t204 - t346) * pkin(9) + t425) * t277 + (-t106 + t311 * t148 + (-qJD(3) * t203 - t177) * pkin(9)) * t274, -t213 * pkin(2) - t147 * t164 - t148 * t165 - t191 * t222 + (-t291 * t277 - t106 * t274 + (-t147 * t277 - t148 * t274) * qJD(3)) * pkin(9), -t236 * t284 + t295 * t364, -t156 * t364 + t236 * t330 - t284 * t294 + t295 * t365 (qJD(2) * t236 - t295) * t345 - t364 * t311, -t156 * t365 + t390 (qJD(2) * t294 + t156) * t345 - t365 * t311, t299, -t266 * t330 - t144 * t294 + t315 * t156 - t365 * t154 + (-qJD(2) * t189 - t62) * t345 + t367 * t311, -t266 * t284 + t144 * t236 + t315 * t295 + t364 * t154 + (-qJD(2) * t190 + t63) * t345 + t366 * t311, -t156 * t366 - t189 * t284 + t190 * t330 - t25 * t236 + t26 * t294 + t295 * t367 - t364 * t62 + t365 * t63, t144 * t266 + t154 * t315 - t189 * t25 + t190 * t26 + t366 * t63 - t367 * t62, t13, t423, t10, t280, -t410, t46, -t129 * t330 + t132 * t395 + t189 * t75 + t20 * t375 - t27 * t365 + t290 * t56 + t294 * t334 - t403 * t424, t134 * t395 - t189 * t74 + t20 * t374 + t28 * t365 - t289 * t56 + t294 * t3 + t330 * t414 + t402 * t424, t129 * t74 - t414 * t75 + t169 * t28 + t170 * t27 + t309 * t228 + t403 * t134 + t402 * t132 + (-t3 * t273 + t334 * t276 + (t27 * t273 - t276 * t28) * qJD(5)) * t236, -t129 * t334 + t189 * t20 - t27 * t403 - t28 * t402 + t3 * t414 + t395 * t56, t13, t10, -t423, t46, t410, t280, t118 * t330 - t132 * t401 + t143 * t75 + t15 * t365 + t2 * t294 + t29 * t290 + t375 * t9 + t404 * t424, -t114 * t75 - t118 * t74 - t332 * t16 + t331 * t15 - t404 * t134 + t405 * t132 + (-t1 * t273 + t2 * t276 + (-t15 * t273 - t16 * t276) * qJD(5)) * t236, -t1 * t294 - t114 * t330 + t134 * t401 + t143 * t74 - t16 * t365 + t289 * t29 - t374 * t9 - t405 * t424, t1 * t114 + t118 * t2 + t143 * t9 - t15 * t404 - t16 * t405 - t29 * t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, -t203 ^ 2 + t204 ^ 2, -t177 + t417, t376, -t346 - t416, t253, -t148 * t256 - t191 * t204 + t329, -t191 * t203 - t425, 0, 0, t427, -t377 + t378, -t284 - t418, -t427, -t326 + t330, t253, -t70 * t311 - t154 * t295 + (-t204 * t156 + t253 * t393) * pkin(3) + t25, -t71 * t311 + t154 * t156 + (-t204 * t295 - t253 * t270) * pkin(3) - t26 (t270 * t330 + t284 * t393) * pkin(3) + (t63 - t70) * t295 + (t71 - t62) * t156, t62 * t70 - t63 * t71 + (-t154 * t204 + t25 * t393 + t26 * t270) * pkin(3), t22 -(t382 + t387) * t156 + t333 + t396, t19, t286, -t285, -t381, -t132 * t70 - t295 * t27 - t20 * t276 + t265 * t75 + (-t33 - t341) * t424 + t292 * t273, -t134 * t70 + t295 * t28 + t20 * t273 - t265 * t74 + (t34 + t342) * t424 + t292 * t276, t132 * t34 + t134 * t33 - t66 + (-t156 * t27 + t3 + (-t27 + t383) * qJD(5)) * t276 + (-t156 * t28 - t399 + t334 + (-t28 + t388) * qJD(5)) * t273, t20 * t265 - t27 * t33 - t28 * t34 - t56 * t70 + (qJD(5) * t309 + t273 * t334 + t276 * t3) * t264, t22, t19, t126 + (t134 * t156 + t75) * t273 + (t74 + t323) * t276, -t381, t285, t286, t15 * t295 + t233 * t75 - t276 * t9 + (t24 - t341) * t424 + t394 * t132 + t413 * t273, t132 * t23 - t134 * t24 - t66 + (t15 * t156 + t1 + (t15 + t383) * qJD(5)) * t276 + (-t156 * t16 - t399 + t2 + (-t16 + t388) * qJD(5)) * t273, -t295 * t16 + t233 * t74 - t273 * t9 + (-t23 - t342) * t424 - t394 * t134 - t413 * t276, -t15 * t24 - t16 * t23 + t233 * t9 + t394 * t29 + (t1 * t276 + t2 * t273 + (t15 * t276 - t16 * t273) * qJD(5)) * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326 - t330, -t284 + t418, -t377 - t378, t156 * t63 + t295 * t62 + t144, 0, 0, 0, 0, 0, 0, t300 - t379, -t276 * t327 + t119 - t384 (-t132 * t156 + t74) * t276 + t273 * t328 + t396, t428 * t273 + t298 * t276 - t56 * t295, 0, 0, 0, 0, 0, 0, -t273 * t327 - t120 - t379 -(-t382 + t387) * t156 - t333 + t396, t301 + t384, -t29 * t295 + t429 * t276 + (t15 * t424 + t1) * t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t386, -t340, t39, -t386, -t420, -t330, -t134 * t56 + t298, t132 * t56 - t428, 0, 0, t386, t39, t340, -t330, t420, -t386, -t132 * t91 + t298 - t400 - 0.2e1 * t407, pkin(5) * t74 - t75 * qJ(6) + (t16 - t28) * t134 + (t15 - t368) * t132, -0.2e1 * t392 - t132 * t29 + t134 * t91 + (0.2e1 * qJD(6) - t27) * t424 + t3, -t2 * pkin(5) + t1 * qJ(6) - t15 * t28 + t16 * t368 - t29 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330 + t386, t39, -t409 - t327, t400 - t429;];
tauc_reg  = t4;
