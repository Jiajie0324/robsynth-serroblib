% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:11:08
% EndTime: 2019-03-09 17:11:26
% DurationCPUTime: 7.08s
% Computational Cost: add. (11086->481), mult. (29129->843), div. (0->0), fcn. (28617->10), ass. (0->242)
t153 = sin(qJ(3));
t278 = cos(pkin(6));
t219 = t278 * qJD(3);
t151 = sin(pkin(6));
t157 = cos(qJ(2));
t257 = qJD(2) * t157;
t229 = t151 * t257;
t180 = t219 + t229;
t319 = t153 * t180;
t154 = sin(qJ(2));
t258 = qJD(2) * t154;
t135 = t151 * t258;
t220 = qJD(2) * t278;
t212 = t157 * t220;
t107 = -pkin(1) * t212 + pkin(8) * t135;
t186 = (-pkin(2) * t157 - pkin(9) * t154 - pkin(1)) * t151;
t318 = -qJD(3) * t186 + t107;
t150 = sin(pkin(11));
t156 = cos(qJ(3));
t262 = t151 * t156;
t113 = t278 * t153 + t154 * t262;
t218 = pkin(3) * t135;
t263 = t151 * t154;
t233 = qJD(3) * t263;
t122 = t153 * t233;
t310 = -t156 * t180 + t122;
t235 = pkin(1) * t278;
t261 = t151 * t157;
t115 = pkin(8) * t261 + t154 * t235;
t103 = t278 * pkin(9) + t115;
t185 = qJD(2) * t151 * (pkin(2) * t154 - pkin(9) * t157);
t255 = qJD(3) * t156;
t47 = -t103 * t255 + t318 * t153 + t156 * t185;
t160 = qJ(4) * t310 - t113 * qJD(4) + t218 + t47;
t223 = t278 * t156;
t183 = t153 * t263 - t223;
t236 = t156 * t233 + t319;
t256 = qJD(3) * t153;
t46 = t103 * t256 - t153 * t185 + t318 * t156;
t163 = -t236 * qJ(4) - t183 * qJD(4) - t46;
t277 = cos(pkin(11));
t13 = t150 * t160 + t277 * t163;
t79 = t150 * t113 + t277 * t183;
t80 = t277 * t113 - t150 * t183;
t114 = -pkin(8) * t263 + t157 * t235;
t102 = -t278 * pkin(2) - t114;
t87 = pkin(3) * t183 + t102;
t162 = t79 * pkin(4) - t80 * pkin(10) + t87;
t317 = -pkin(10) * t135 - qJD(5) * t162 - t13;
t155 = cos(qJ(5));
t146 = qJD(5) * t155;
t152 = sin(qJ(5));
t164 = -t150 * t236 - t277 * t310;
t238 = t152 * t261;
t38 = -qJD(5) * t238 - t155 * t135 + t80 * t146 + t152 * t164;
t35 = t152 * t38;
t68 = t152 * t80 + t155 * t261;
t291 = -t68 * t146 - t35;
t275 = qJD(5) * t68;
t37 = -t152 * t135 - t155 * t164 + t275;
t145 = qJD(5) * t152;
t69 = t155 * t80 - t238;
t64 = t69 * t145;
t314 = -t155 * t37 - t64;
t316 = -t314 + t291;
t148 = t152 ^ 2;
t149 = t155 ^ 2;
t259 = t148 - t149;
t128 = t259 * qJD(5);
t221 = t277 * t156;
t112 = qJD(3) * t221 - t150 * t256;
t222 = t277 * t153;
t119 = t150 * t156 + t222;
t280 = t155 * t69;
t281 = t155 * t38;
t284 = t152 * t68;
t285 = t152 * t37;
t315 = (qJD(5) * (-t280 + t284) - t281 + t285) * t119 - (t152 * t69 + t155 * t68) * t112;
t174 = qJD(3) * t183;
t312 = t153 * t174 - t236 * t156;
t111 = t119 * qJD(3);
t264 = t150 * t153;
t118 = -t221 + t264;
t270 = t112 * t152;
t59 = -t150 * t310 + t277 * t236;
t42 = t79 * t146 + t152 * t59;
t311 = t111 * t68 + t118 * t38 + t119 * t42 + t79 * t270;
t143 = -pkin(3) * t156 - pkin(2);
t182 = -pkin(4) * t118 + pkin(10) * t119 - t143;
t175 = t155 * t182;
t244 = pkin(3) * t256;
t178 = pkin(4) * t111 - pkin(10) * t112 + t244;
t292 = -qJ(4) - pkin(9);
t224 = qJD(3) * t292;
t110 = qJD(4) * t156 + t153 * t224;
t181 = -qJD(4) * t153 + t156 * t224;
t77 = t277 * t110 + t150 * t181;
t129 = t292 * t156;
t92 = -t277 * t129 + t292 * t264;
t24 = qJD(5) * t175 + t92 * t145 - t152 * t178 - t155 * t77;
t290 = -t152 * t182 + t155 * t92;
t25 = -qJD(5) * t290 - t152 * t77 + t155 * t178;
t53 = -t152 * t92 - t175;
t308 = qJD(5) * (t152 * t53 - t155 * t290) + t152 * t24 - t155 * t25;
t252 = qJD(6) * t118;
t276 = qJ(6) * t111;
t19 = -t24 + t252 + t276;
t297 = t111 * pkin(5);
t23 = -t25 - t297;
t48 = qJ(6) * t118 + t290;
t49 = -t118 * pkin(5) - t53;
t307 = t152 * t19 - t155 * t23 + (t152 * t49 + t155 * t48) * qJD(5);
t71 = -t153 * t103 + t156 * t186;
t52 = -pkin(3) * t261 - t113 * qJ(4) + t71;
t72 = t156 * t103 + t153 * t186;
t60 = -qJ(4) * t183 + t72;
t33 = t150 * t52 + t277 * t60;
t29 = -pkin(10) * t261 + t33;
t15 = -t152 * t29 + t155 * t162;
t16 = t152 * t162 + t155 * t29;
t213 = t154 * t220;
t215 = t236 * pkin(3);
t159 = pkin(1) * t213 + t59 * pkin(4) + pkin(8) * t229 - t164 * pkin(10) + t215;
t3 = t29 * t145 - t152 * t159 + t317 * t155;
t4 = -t29 * t146 + t317 * t152 + t155 * t159;
t306 = t152 * t3 - t155 * t4 + (t15 * t152 - t155 * t16) * qJD(5);
t205 = t155 * pkin(5) + t152 * qJ(6);
t305 = t205 * qJD(5) - qJD(6) * t155;
t274 = qJD(6) * t79;
t289 = qJ(6) * t59;
t1 = t274 - t3 + t289;
t300 = t59 * pkin(5);
t2 = -t4 - t300;
t7 = qJ(6) * t79 + t16;
t8 = -t79 * pkin(5) - t15;
t304 = t1 * t152 - t155 * t2 + (t152 * t8 + t155 * t7) * qJD(5);
t303 = t157 ^ 2;
t302 = 0.2e1 * t151;
t301 = 0.2e1 * qJD(6);
t299 = pkin(9) * t151;
t298 = t1 * t155;
t12 = -t150 * t163 + t277 * t160;
t10 = -pkin(4) * t135 - t12;
t5 = pkin(5) * t38 + qJ(6) * t37 - qJD(6) * t69 + t10;
t296 = t152 * t5;
t295 = t155 * t3;
t294 = t155 * t5;
t76 = t110 * t150 - t277 * t181;
t91 = -t129 * t150 - t292 * t222;
t293 = t76 * t91;
t288 = t10 * t152;
t287 = t10 * t155;
t141 = pkin(3) * t150 + pkin(10);
t286 = t141 * t37;
t283 = t152 * t76;
t279 = t155 * t76;
t108 = t115 * qJD(2);
t273 = t108 * t153;
t272 = t111 * t141;
t271 = t111 * t152;
t269 = t112 * t155;
t268 = t118 * t141;
t267 = t119 * t112;
t266 = t141 * t152;
t265 = t141 * t155;
t260 = t155 * t111;
t254 = qJD(3) * t157;
t251 = qJD(6) * t152;
t249 = t102 * qJD(3);
t248 = t113 * qJD(3);
t247 = 0.2e1 * t68 * t38;
t43 = 0.2e1 * t79 * t59;
t246 = -0.2e1 * pkin(2) * qJD(3);
t89 = 0.2e1 * t118 * t111;
t142 = -t277 * pkin(3) - pkin(4);
t245 = 0.2e1 * qJD(5) * t142;
t243 = pkin(9) * t255;
t242 = t59 * t266;
t241 = t79 * t266;
t240 = t59 * t265;
t239 = t79 * t265;
t237 = t152 * t269;
t147 = t151 ^ 2;
t234 = t147 * t257;
t232 = t153 * t254;
t231 = t141 * t145;
t230 = t141 * t146;
t228 = t152 * t146;
t227 = t153 * t255;
t117 = t119 ^ 2;
t217 = t117 * t228;
t216 = t154 * t234;
t208 = -t152 * t7 + t155 * t8;
t207 = t37 * t68 - t38 * t69;
t206 = t38 * t79 + t59 * t68;
t32 = -t150 * t60 + t277 * t52;
t204 = pkin(5) * t152 - qJ(6) * t155;
t36 = t111 * t79 + t118 * t59;
t203 = -t15 * t155 - t152 * t16;
t197 = -t152 * t48 + t155 * t49;
t196 = -t152 * t290 - t155 * t53;
t192 = -t47 * t153 - t46 * t156;
t191 = t112 * t142 - t272;
t190 = -t119 * t142 + t268;
t28 = pkin(4) * t261 - t32;
t188 = t68 * t145 - t281;
t41 = t79 * t145 - t155 * t59;
t85 = t118 * t146 + t271;
t83 = t118 * t145 - t260;
t86 = t119 * t146 + t270;
t84 = -t119 * t145 + t269;
t187 = (t280 + t284) * t141;
t184 = t153 * t258 - t156 * t254;
t116 = -t205 + t142;
t34 = t204 * t112 + t305 * t119 + t76;
t177 = -t34 + (t116 * t119 - t268) * qJD(5);
t109 = -pkin(5) * t145 + qJ(6) * t146 + t251;
t61 = t204 * t119 + t91;
t171 = qJD(5) * t61 - t109 * t119 + t112 * t116 - t272;
t168 = -t291 * t119 + t68 * t270;
t167 = t197 * qJD(5) + t152 * t23 + t155 * t19;
t166 = t196 * qJD(5) - t152 * t25 - t155 * t24;
t133 = -0.2e1 * t228;
t132 = 0.2e1 * t228;
t121 = -0.2e1 * t216;
t81 = (-t148 - t149) * t112;
t70 = t215 + t108;
t67 = 0.2e1 * t149 * t267 - 0.2e1 * t217;
t66 = 0.2e1 * t148 * t267 + 0.2e1 * t217;
t63 = t119 * t128 - t237;
t62 = t259 * t112 + 0.4e1 * t119 * t228;
t51 = t117 * t128 - 0.2e1 * t119 * t237;
t45 = t118 * t86 + t119 * t271;
t44 = 0.2e1 * t118 * t84 + 0.2e1 * t119 * t260;
t30 = t38 * t265;
t20 = -0.2e1 * t69 * t37;
t18 = t69 * t146 - t285;
t17 = t68 * pkin(5) - t69 * qJ(6) + t28;
t14 = t119 * t314 + t69 * t269;
t11 = -0.2e1 * t37 * t79 + 0.2e1 * t59 * t69;
t6 = t111 * t69 - t118 * t37 - t119 * t41 + t79 * t269;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, 0.2e1 * (-t154 ^ 2 + t303) * t147 * qJD(2), t212 * t302, t121, -0.2e1 * t151 * t213, 0, -0.2e1 * t147 * pkin(1) * t258 - 0.2e1 * t108 * t278, -0.2e1 * pkin(1) * t234 + 0.2e1 * t107 * t278 (-t107 * t157 + t108 * t154 + (-t114 * t157 - t115 * t154) * qJD(2)) * t302, -0.2e1 * t107 * t115 - 0.2e1 * t108 * t114, -0.2e1 * t113 * t310, -0.2e1 * t113 * t236 + 0.2e1 * t183 * t310 (-(t156 * t219 - t122) * t157 + (t113 * t154 - t303 * t262) * qJD(2)) * t302, 0.2e1 * t183 * t236, -0.2e1 * t183 * t135 + 0.2e1 * t236 * t261, t121, -0.2e1 * t108 * t223 + 0.2e1 * t102 * t236 + 0.2e1 * (-t47 * t157 + (qJD(2) * t71 + t273) * t154) * t151, -0.2e1 * t102 * t310 + 0.2e1 * t108 * t113 - 0.2e1 * t135 * t72 - 0.2e1 * t261 * t46, -0.2e1 * t47 * t113 + 0.2e1 * t183 * t46 - 0.2e1 * t236 * t72 + 0.2e1 * t310 * t71, 0.2e1 * t102 * t108 - 0.2e1 * t46 * t72 + 0.2e1 * t47 * t71, 0.2e1 * t80 * t164, -0.2e1 * t164 * t79 - 0.2e1 * t80 * t59, 0.2e1 * t135 * t80 - 0.2e1 * t164 * t261, t43 (t157 * t59 - t258 * t79) * t302, t121, 0.2e1 * t87 * t59 + 0.2e1 * t70 * t79 + 0.2e1 * (-t12 * t157 + t258 * t32) * t151, 0.2e1 * t13 * t261 - 0.2e1 * t135 * t33 + 0.2e1 * t164 * t87 + 0.2e1 * t70 * t80, -0.2e1 * t12 * t80 - 0.2e1 * t13 * t79 - 0.2e1 * t164 * t32 - 0.2e1 * t33 * t59, 0.2e1 * t12 * t32 + 0.2e1 * t13 * t33 + 0.2e1 * t70 * t87, t20, 0.2e1 * t207, t11, t247, -0.2e1 * t206, t43, 0.2e1 * t10 * t68 + 0.2e1 * t15 * t59 + 0.2e1 * t28 * t38 + 0.2e1 * t4 * t79, 0.2e1 * t10 * t69 - 0.2e1 * t16 * t59 - 0.2e1 * t28 * t37 + 0.2e1 * t3 * t79, 0.2e1 * t15 * t37 - 0.2e1 * t16 * t38 + 0.2e1 * t3 * t68 - 0.2e1 * t4 * t69, 0.2e1 * t10 * t28 + 0.2e1 * t15 * t4 - 0.2e1 * t16 * t3, t20, t11, -0.2e1 * t207, t43, 0.2e1 * t206, t247, 0.2e1 * t17 * t38 - 0.2e1 * t2 * t79 + 0.2e1 * t5 * t68 - 0.2e1 * t59 * t8, -0.2e1 * t1 * t68 + 0.2e1 * t2 * t69 - 0.2e1 * t37 * t8 - 0.2e1 * t38 * t7, 0.2e1 * t1 * t79 + 0.2e1 * t17 * t37 - 0.2e1 * t5 * t69 + 0.2e1 * t59 * t7, 0.2e1 * t1 * t7 + 0.2e1 * t17 * t5 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, 0, -t135, 0, -t108, t107, 0, 0, -t122 * t153 + (t248 + t319) * t156 (-t310 - t174) * t156 + (-t236 - t248) * t153, t184 * t151, t312 (t156 * t258 + t232) * t151, 0, -pkin(2) * t236 - t108 * t156 + t153 * t249 - t184 * t299, pkin(2) * t310 - t232 * t299 + t273 + (-pkin(9) * t135 + t249) * t156, t113 * t243 - t255 * t71 - t256 * t72 + t192 + (-t153 * t310 + t312) * pkin(9), -pkin(2) * t108 + ((-t72 * t153 - t71 * t156) * qJD(3) + t192) * pkin(9), t80 * t112 + t119 * t164, -t80 * t111 - t112 * t79 - t118 * t164 - t119 * t59 (-t112 * t157 + t119 * t258) * t151, t36 (t111 * t157 - t118 * t258) * t151, 0, t79 * t244 + t87 * t111 + t70 * t118 + t143 * t59 + (t157 * t76 - t258 * t91) * t151, t87 * t112 + t70 * t119 - t135 * t92 + t143 * t164 + t244 * t80 + t261 * t77, -t33 * t111 - t32 * t112 - t13 * t118 - t12 * t119 + t164 * t91 - t92 * t59 + t76 * t80 - t77 * t79, -t12 * t91 + t13 * t92 + t143 * t70 + t244 * t87 - t32 * t76 + t33 * t77, t14, t315, t6, t168, -t311, t36, t28 * t270 + t111 * t15 + t118 * t4 + t25 * t79 + t38 * t91 + t53 * t59 + t68 * t76 + (t146 * t28 + t288) * t119, t28 * t269 - t111 * t16 + t118 * t3 + t24 * t79 - t37 * t91 - t290 * t59 + t69 * t76 + (-t145 * t28 + t287) * t119, t203 * t112 + t306 * t119 + t24 * t68 - t25 * t69 - t38 * t290 + t37 * t53, t10 * t91 + t15 * t25 - t16 * t24 + t28 * t76 - t290 * t3 + t4 * t53, t14, t6, -t315, t36, t311, t168, t17 * t270 - t111 * t8 - t118 * t2 - t23 * t79 + t34 * t68 + t38 * t61 - t49 * t59 + (t146 * t17 + t296) * t119, t208 * t112 - t119 * t304 - t19 * t68 + t23 * t69 - t37 * t49 - t38 * t48, -t17 * t269 + t1 * t118 + t111 * t7 + t19 * t79 - t34 * t69 + t37 * t61 + t48 * t59 + (t145 * t17 - t294) * t119, t1 * t48 + t17 * t34 + t19 * t7 + t2 * t49 + t23 * t8 + t5 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227, 0.2e1 * (-t153 ^ 2 + t156 ^ 2) * qJD(3), 0, -0.2e1 * t227, 0, 0, t153 * t246, t156 * t246, 0, 0, 0.2e1 * t267, -0.2e1 * t111 * t119 - 0.2e1 * t112 * t118, 0, t89, 0, 0, 0.2e1 * t111 * t143 + 0.2e1 * t118 * t244, 0.2e1 * t112 * t143 + 0.2e1 * t119 * t244, -0.2e1 * t111 * t92 + 0.2e1 * t112 * t91 - 0.2e1 * t118 * t77 + 0.2e1 * t119 * t76, 0.2e1 * t143 * t244 + 0.2e1 * t77 * t92 + 0.2e1 * t293, t67, 0.2e1 * t51, t44, t66, -0.2e1 * t45, t89, 0.2e1 * t91 * t270 + 0.2e1 * t111 * t53 + 0.2e1 * t118 * t25 + 0.2e1 * (t146 * t91 + t283) * t119, 0.2e1 * t91 * t269 - 0.2e1 * t111 * t290 + 0.2e1 * t118 * t24 + 0.2e1 * (-t145 * t91 + t279) * t119, 0.2e1 * t196 * t112 + 0.2e1 * t119 * t308, -0.2e1 * t24 * t290 + 0.2e1 * t25 * t53 + 0.2e1 * t293, t67, t44, -0.2e1 * t51, t89, 0.2e1 * t45, t66, 0.2e1 * t61 * t270 - 0.2e1 * t111 * t49 - 0.2e1 * t118 * t23 + 0.2e1 * (t146 * t61 + t152 * t34) * t119, 0.2e1 * t197 * t112 - 0.2e1 * t119 * t307, -0.2e1 * t61 * t269 + 0.2e1 * t111 * t48 + 0.2e1 * t118 * t19 + 0.2e1 * (t145 * t61 - t155 * t34) * t119, 0.2e1 * t19 * t48 + 0.2e1 * t23 * t49 + 0.2e1 * t34 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310, 0, -t236, t135, t47, t46, 0, 0, 0, 0, t164, 0, -t59, t135, t218 * t277 + t12, -t150 * t218 - t13 (-t150 * t59 - t164 * t277) * pkin(3) (t12 * t277 + t13 * t150) * pkin(3), t18, t314 + t291, t42, t188, -t41, 0, -t242 - t287 + t142 * t38 + (t152 * t28 - t239) * qJD(5), -t240 + t288 - t142 * t37 + (t155 * t28 + t241) * qJD(5), -t295 - t30 + (-t4 - t286) * t152 + (t187 + t203) * qJD(5), t10 * t142 + (qJD(5) * t203 - t152 * t4 - t295) * t141, t18, t42, t35 + t64 + (t37 + t275) * t155, 0, t41, t188, -t242 - t109 * t68 + t116 * t38 - t294 + (t152 * t17 - t239) * qJD(5), t298 - t30 + (t2 - t286) * t152 + (t187 + t208) * qJD(5), t240 + t109 * t69 + t116 * t37 - t296 + (-t155 * t17 - t241) * qJD(5), -t109 * t17 + t116 * t5 + (qJD(5) * t208 + t152 * t2 + t298) * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, 0, -t256, 0, -t243, pkin(9) * t256, 0, 0, 0, 0, t112, 0, -t111, 0, -t76, -t77 (-t111 * t150 - t112 * t277) * pkin(3) (t150 * t77 - t277 * t76) * pkin(3), -t63, -t62, t85, t63, -t83, 0, -t279 + t191 * t152 + (t152 * t91 - t155 * t190) * qJD(5), t283 + t191 * t155 + (t152 * t190 + t155 * t91) * qJD(5), t166, t141 * t166 + t142 * t76, -t63, t85, t62, 0, t83, t63, t152 * t171 + t155 * t177, t167, t152 * t177 - t155 * t171, -t109 * t61 + t116 * t34 + t141 * t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, -0.2e1 * t128, 0, t133, 0, 0, t152 * t245, t155 * t245, 0, 0, t132, 0, 0.2e1 * t128, 0, 0, t133, 0.2e1 * t109 * t155 + 0.2e1 * t116 * t145, 0, 0.2e1 * t109 * t152 - 0.2e1 * t116 * t146, -0.2e1 * t116 * t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t164, 0, t70, 0, 0, 0, 0, 0, 0, -t41, -t42, t316, -t306, 0, 0, 0, 0, 0, 0, -t41, t316, t42, t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, t112, 0, t244, 0, 0, 0, 0, 0, 0, -t83, -t85, t81, -t308, 0, 0, 0, 0, 0, 0, -t83, t81, t85, t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, 0, -t38, t59, t4, t3, 0, 0, 0, -t37, 0, t59, t38, 0, t4 + 0.2e1 * t300, pkin(5) * t37 - qJ(6) * t38 - qJD(6) * t68, 0.2e1 * t274 - t3 + 0.2e1 * t289, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, -t86, t111, t25, t24, 0, 0, 0, t84, 0, t111, t86, 0, t25 + 0.2e1 * t297, -t205 * t112 + (qJD(5) * t204 - t251) * t119, -t24 + 0.2e1 * t252 + 0.2e1 * t276, -pkin(5) * t23 + qJ(6) * t19 + qJD(6) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, -t145, 0, -t230, t231, 0, 0, 0, t146, 0, 0, t145, 0, -t230, -t305, -t231, -t305 * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t146, 0, 0, 0, 0, 0, 0, 0, 0, -t145, 0, t146, t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, qJ(6) * t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, -t37, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t84, 0, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
