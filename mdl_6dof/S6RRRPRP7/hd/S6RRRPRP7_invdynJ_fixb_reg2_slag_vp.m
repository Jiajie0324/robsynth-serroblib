% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRP7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:11:15
% EndTime: 2019-03-09 17:11:54
% DurationCPUTime: 22.06s
% Computational Cost: add. (26567->900), mult. (65608->1135), div. (0->0), fcn. (52870->14), ass. (0->396)
t355 = sin(pkin(6));
t364 = cos(qJ(2));
t506 = qJD(1) * t364;
t332 = t355 * t506;
t425 = t332 - qJD(3);
t360 = sin(qJ(2));
t508 = qJD(1) * t355;
t476 = t360 * t508;
t356 = cos(pkin(6));
t507 = qJD(1) * t356;
t490 = pkin(1) * t507;
t270 = -pkin(8) * t476 + t364 * t490;
t435 = pkin(2) * t360 - pkin(9) * t364;
t271 = t435 * t508;
t359 = sin(qJ(3));
t363 = cos(qJ(3));
t184 = -t270 * t359 + t363 * t271;
t357 = -qJ(4) - pkin(9);
t465 = qJD(3) * t357;
t609 = (-qJ(4) * t363 * t364 + pkin(3) * t360) * t508 + t184 + qJD(4) * t359 - t363 * t465;
t185 = t363 * t270 + t359 * t271;
t443 = t359 * t332;
t608 = qJ(4) * t443 + qJD(4) * t363 + t359 * t465 - t185;
t354 = sin(pkin(11));
t555 = cos(pkin(11));
t463 = t555 * t359;
t291 = t354 * t363 + t463;
t513 = t425 * t291;
t527 = t354 * t359;
t404 = t363 * t555 - t527;
t220 = t404 * t332;
t279 = t404 * qJD(3);
t512 = t279 - t220;
t516 = -t354 * t609 + t608 * t555;
t523 = t355 * t364;
t575 = pkin(1) * t360;
t511 = pkin(8) * t523 + t356 * t575;
t273 = t511 * qJD(1);
t503 = qJD(3) * t359;
t436 = -t273 + (-t443 + t503) * pkin(3);
t497 = qJD(1) * qJD(2);
t468 = t364 * t497;
t495 = qJDD(1) * t360;
t607 = t468 + t495;
t333 = qJD(2) + t507;
t246 = t333 * t363 - t359 * t476;
t247 = t333 * t359 + t363 * t476;
t165 = -t555 * t246 + t247 * t354;
t595 = qJD(5) + t165;
t455 = t595 ^ 2;
t358 = sin(qJ(5));
t362 = cos(qJ(5));
t225 = pkin(9) * t333 + t273;
t415 = -pkin(2) * t364 - pkin(9) * t360 - pkin(1);
t259 = t415 * t355;
t229 = qJD(1) * t259;
t149 = -t359 * t225 + t363 * t229;
t125 = -t247 * qJ(4) + t149;
t115 = -pkin(3) * t425 + t125;
t150 = t225 * t363 + t229 * t359;
t126 = qJ(4) * t246 + t150;
t464 = t555 * t126;
t71 = t354 * t115 + t464;
t67 = -pkin(10) * t425 + t71;
t224 = -pkin(2) * t333 - t270;
t163 = -pkin(3) * t246 + qJD(4) + t224;
t405 = t354 * t246 + t247 * t555;
t82 = pkin(4) * t165 - pkin(10) * t405 + t163;
t30 = t358 * t82 + t362 * t67;
t24 = qJ(6) * t595 + t30;
t606 = t24 * t595;
t29 = -t358 * t67 + t362 * t82;
t605 = t29 * t595;
t562 = t595 * t30;
t604 = -pkin(10) * t476 + t516;
t453 = t362 * t425;
t134 = t358 * t405 + t453;
t603 = t134 * t595;
t602 = -t513 * pkin(4) - t512 * pkin(10) + t436;
t526 = t355 * t360;
t280 = -t356 * t363 + t359 * t526;
t601 = pkin(3) * t280;
t600 = t165 * t405;
t517 = t608 * t354 + t555 * t609;
t449 = qJD(2) * t490;
t496 = qJDD(1) * t356;
t488 = pkin(1) * t496;
t598 = t607 * t355;
t444 = t598 * pkin(8) + t360 * t449 - t364 * t488;
t442 = qJDD(2) + t496;
t592 = pkin(2) * t442;
t173 = t444 - t592;
t576 = cos(qJ(1));
t478 = t576 * t364;
t361 = sin(qJ(1));
t521 = t360 * t361;
t282 = -t356 * t478 + t521;
t479 = t576 * t360;
t520 = t361 * t364;
t284 = t356 * t520 + t479;
t583 = -g(1) * t284 - g(2) * t282 + g(3) * t523;
t381 = t173 + t583;
t450 = qJD(3) * t425;
t599 = -pkin(9) * t450 + t381;
t285 = -t356 * t521 + t478;
t524 = t355 * t363;
t216 = -t285 * t359 + t361 * t524;
t351 = qJ(3) + pkin(11);
t347 = sin(t351);
t348 = cos(t351);
t597 = -pkin(4) * t348 - pkin(10) * t347;
t469 = t360 * t497;
t441 = t355 * t469;
t494 = qJDD(1) * t364;
t331 = t355 * t494;
t482 = pkin(8) * t331 + t360 * t488 + t364 * t449;
t195 = -pkin(8) * t441 + t482;
t172 = pkin(9) * t442 + t195;
t408 = t435 * qJD(2);
t178 = (qJD(1) * t408 + qJDD(1) * t415) * t355;
t502 = qJD(3) * t363;
t400 = -t363 * t172 - t359 * t178 + t225 * t503 - t229 * t502;
t596 = t425 * t149 - t400;
t334 = pkin(8) * t526;
t574 = pkin(1) * t364;
t286 = t356 * t574 - t334;
t274 = qJD(2) * t286;
t283 = t356 * t479 + t520;
t481 = t355 * t576;
t206 = t283 * t348 - t347 * t481;
t153 = t206 * t358 - t282 * t362;
t154 = t206 * t362 + t282 * t358;
t136 = -t358 * t425 + t362 * t405;
t190 = t220 * t362 + t358 * t476;
t458 = t279 * t362 - t190;
t189 = t220 * t358 - t362 * t476;
t459 = t279 * t358 - t189;
t544 = t136 * t362;
t438 = qJD(3) * t476;
t151 = -t333 * t502 - t598 * t363 + (t438 - t442) * t359;
t445 = t333 * t503 + t598 * t359 + t363 * t438;
t376 = -t363 * t442 + t445;
t367 = t151 * t555 + t354 * t376;
t493 = qJDD(3) - t331;
t395 = t441 + t493;
t63 = qJD(5) * t136 - t358 * t367 - t362 * t395;
t559 = t362 * t63;
t501 = qJD(5) * t358;
t62 = qJD(5) * t453 - t358 * t395 + t362 * t367 + t405 * t501;
t560 = t358 * t62;
t594 = -t458 * t134 - t459 * t136 + t291 * (qJD(5) * (t134 * t358 - t544) - t559 + t560);
t350 = t355 ^ 2;
t593 = 0.2e1 * t350;
t346 = pkin(3) * t363 + pkin(2);
t198 = -pkin(4) * t404 - pkin(10) * t291 - t346;
t320 = t357 * t363;
t223 = -t320 * t555 + t357 * t527;
t500 = qJD(5) * t362;
t565 = t198 * t500 - t223 * t501 + t602 * t358 + t604 * t362;
t557 = pkin(4) * t476 + t517;
t426 = pkin(5) * t358 - qJ(6) * t362;
t74 = t125 * t354 + t464;
t556 = -qJD(6) * t358 + t595 * t426 - t74;
t590 = -t136 * t595 + t63;
t281 = t356 * t359 + t360 * t524;
t192 = t280 * t555 + t281 * t354;
t193 = -t354 * t280 + t281 * t555;
t257 = t334 + (-pkin(2) - t574) * t356;
t197 = t257 + t601;
t111 = pkin(4) * t192 - pkin(10) * t193 + t197;
t491 = pkin(10) * t523;
t258 = pkin(9) * t356 + t511;
t174 = -t258 * t359 + t363 * t259;
t130 = -pkin(3) * t523 - qJ(4) * t281 + t174;
t175 = t363 * t258 + t359 * t259;
t143 = -qJ(4) * t280 + t175;
t91 = t354 * t130 + t555 * t143;
t86 = -t491 + t91;
t589 = t358 * t111 + t362 * t86;
t588 = t165 * t425;
t587 = t246 * t425;
t586 = t247 * t425;
t380 = t583 * t347;
t584 = t358 * t198 + t362 * t223;
t275 = t511 * qJD(2);
t582 = -pkin(9) * t395 - t425 * t224;
t121 = t354 * t126;
t70 = t115 * t555 - t121;
t66 = pkin(4) * t425 - t70;
t33 = t134 * pkin(5) - t136 * qJ(6) + t66;
t461 = t354 * t151 - t555 * t376;
t108 = qJDD(5) - t461;
t572 = pkin(3) * t354;
t344 = pkin(10) + t572;
t553 = t108 * t344;
t581 = t33 * t595 - t553;
t272 = t355 * t408;
t117 = -qJD(3) * t175 + t363 * t272 - t274 * t359;
t504 = qJD(2) * t364;
t474 = t355 * t504;
t214 = -qJD(3) * t280 + t363 * t474;
t505 = qJD(2) * t360;
t475 = t355 * t505;
t87 = pkin(3) * t475 - qJ(4) * t214 - qJD(4) * t281 + t117;
t116 = -t258 * t503 + t259 * t502 + t359 * t272 + t363 * t274;
t213 = qJD(3) * t281 + t359 * t474;
t92 = -qJ(4) * t213 - qJD(4) * t280 + t116;
t42 = t354 * t87 + t555 * t92;
t40 = pkin(10) * t475 + t42;
t141 = t213 * t555 + t214 * t354;
t142 = -t354 * t213 + t214 * t555;
t169 = pkin(3) * t213 + t275;
t69 = pkin(4) * t141 - pkin(10) * t142 + t169;
t10 = -qJD(5) * t589 - t358 * t40 + t362 * t69;
t564 = -qJD(5) * t584 - t604 * t358 + t602 * t362;
t102 = t358 * t108;
t393 = t291 * t500 + t459;
t578 = t102 * t291 - t134 * t513 + t393 * t595 - t404 * t63;
t577 = t136 ^ 2;
t573 = pkin(3) * t247;
t570 = pkin(5) * t108;
t460 = -t359 * t172 + t363 * t178;
t81 = -qJD(3) * t150 + t460;
t50 = pkin(3) * t395 + t151 * qJ(4) - t247 * qJD(4) + t81;
t56 = -qJ(4) * t376 + t246 * qJD(4) - t400;
t568 = t354 * t56 - t555 * t50;
t19 = t354 * t50 + t555 * t56;
t567 = -t513 * qJ(6) - qJD(6) * t404 + t565;
t566 = t513 * pkin(5) - t564;
t427 = t362 * pkin(5) + t358 * qJ(6);
t563 = -t189 * pkin(5) + t190 * qJ(6) + t426 * t279 + (qJD(5) * t427 - qJD(6) * t362) * t291 + t557;
t561 = t344 * t62;
t558 = -t134 * t500 - t358 * t63;
t101 = pkin(4) * t405 + pkin(10) * t165 + t573;
t75 = t125 * t555 - t121;
t38 = t358 * t101 + t362 * t75;
t554 = qJ(6) * t108;
t552 = t134 * t405;
t551 = t134 * t344;
t550 = t134 * t362;
t549 = t136 * t134;
t547 = t136 * t405;
t546 = t136 * t344;
t545 = t136 * t358;
t543 = t595 * t405;
t542 = t595 * t165;
t541 = t405 ^ 2;
t540 = t165 ^ 2;
t539 = t247 * t246;
t536 = t283 * t359;
t534 = t291 * t358;
t533 = t291 * t362;
t532 = t344 * t358;
t531 = t344 * t362;
t530 = t348 * t358;
t529 = t348 * t362;
t528 = t350 * qJD(1) ^ 2;
t525 = t355 * t361;
t103 = t362 * t108;
t519 = t362 * t364;
t518 = qJD(6) - t29;
t515 = -t282 * t346 - t283 * t357;
t514 = -t284 * t346 - t285 * t357;
t510 = t576 * pkin(1) + pkin(8) * t525;
t352 = t360 ^ 2;
t353 = t364 ^ 2;
t509 = t352 - t353;
t499 = qJD(2) - t333;
t336 = pkin(4) * t523;
t487 = t364 * t528;
t485 = t359 * t525;
t483 = t355 * t519;
t323 = t358 * t523;
t480 = t363 * t576;
t477 = t555 * pkin(3);
t473 = t344 * t501;
t472 = t344 * t500;
t471 = t134 ^ 2 - t577;
t470 = pkin(1) * t593;
t466 = -pkin(1) * t361 + pkin(8) * t481;
t16 = pkin(10) * t395 + t19;
t112 = pkin(3) * t376 + qJDD(4) + t173;
t31 = -pkin(4) * t461 + pkin(10) * t367 + t112;
t4 = -t358 * t16 + t362 * t31 - t67 * t500 - t82 * t501;
t128 = t136 * t501;
t462 = -t362 * t62 - t128;
t457 = -t283 * t347 - t348 * t481;
t324 = t359 * t481;
t456 = t283 * t363 - t324;
t222 = -t320 * t354 - t357 * t463;
t454 = t405 * t425;
t452 = t364 * t425;
t451 = t595 * t358;
t448 = t360 * t487;
t447 = t282 * t597 + t515;
t446 = t284 * t597 + t514;
t439 = t360 * t468;
t437 = t216 * pkin(3);
t345 = -t477 - pkin(4);
t210 = t285 * t348 + t347 * t525;
t157 = t210 * t358 - t284 * t362;
t434 = g(1) * t153 - g(2) * t157;
t158 = t210 * t362 + t284 * t358;
t433 = g(1) * t154 - g(2) * t158;
t209 = t285 * t347 - t348 * t525;
t432 = g(1) * t457 + g(2) * t209;
t430 = g(1) * t282 - g(2) * t284;
t429 = g(1) * t285 + g(2) * t283;
t428 = t346 * t523 - t357 * t526;
t41 = -t354 * t92 + t555 * t87;
t160 = t193 * t358 + t483;
t97 = -qJD(5) * t323 + t142 * t358 + t193 * t500 - t362 * t475;
t424 = t134 * t97 + t160 * t63;
t90 = t130 * t555 - t354 * t143;
t421 = pkin(3) * t485 - t284 * t357 + t285 * t346 + t510;
t37 = t101 * t362 - t358 * t75;
t46 = t111 * t362 - t358 * t86;
t131 = t198 * t362 - t223 * t358;
t413 = t362 * t542 + t500 * t595 + t102;
t412 = g(1) * t576 + g(2) * t361;
t411 = -t358 * t542 - t501 * t595 + t103;
t410 = t425 * t476;
t85 = t336 - t90;
t3 = t362 * t16 + t358 * t31 + t82 * t500 - t501 * t67;
t9 = t111 * t500 + t358 * t69 + t362 * t40 - t501 * t86;
t407 = pkin(3) * t324 + t282 * t357 - t283 * t346 + t466;
t402 = t348 * t336 + t347 * t491 + t428;
t401 = t595 * t66 - t553;
t180 = -t282 * t530 - t283 * t362;
t182 = -t284 * t530 - t285 * t362;
t230 = t323 * t348 - t362 * t526;
t399 = g(1) * t182 + g(2) * t180 + g(3) * t230;
t181 = -t282 * t529 + t283 * t358;
t183 = -t284 * t529 + t285 * t358;
t231 = (t348 * t519 + t358 * t360) * t355;
t398 = -g(1) * t183 - g(2) * t181 - g(3) * t231;
t255 = -t347 * t526 + t348 * t356;
t397 = g(1) * t209 - g(2) * t457 - g(3) * t255;
t256 = t347 * t356 + t348 * t526;
t396 = g(1) * t210 + g(2) * t206 + g(3) * t256;
t394 = -t355 * t480 - t536;
t392 = t291 * t501 - t458;
t391 = -t209 * pkin(4) + pkin(10) * t210 + t437;
t389 = t134 * t451 - t559;
t388 = -t63 * t531 - t396;
t386 = -g(3) * t526 - t429;
t385 = -t411 - t552;
t384 = t210 * pkin(4) + pkin(10) * t209 + t421;
t383 = t394 * pkin(3);
t382 = t255 * pkin(4) + pkin(10) * t256 - t601;
t39 = -pkin(4) * t475 - t41;
t379 = -pkin(4) * t206 + pkin(10) * t457 + t407;
t161 = t193 * t362 - t323;
t96 = qJD(5) * t160 - t362 * t142 - t358 * t475;
t378 = t134 * t96 - t136 * t97 + t160 * t62 - t161 * t63;
t377 = t108 * t160 + t134 * t141 + t192 * t63 + t595 * t97;
t203 = t256 * t358 + t483;
t375 = g(1) * t157 + g(2) * t153 + g(3) * t203 + t4;
t374 = qJD(5) * t344 * t595 - t397;
t15 = -pkin(4) * t395 + t568;
t5 = t63 * pkin(5) + t62 * qJ(6) - t136 * qJD(6) + t15;
t373 = -t374 - t5;
t372 = t15 + t374;
t371 = pkin(4) * t457 + t206 * pkin(10) + t383;
t370 = t134 * t393 + t534 * t63;
t204 = t256 * t362 - t323;
t369 = -g(1) * t158 - g(2) * t154 - g(3) * t204 + t3;
t368 = t136 * t33 + qJDD(6) - t375;
t288 = -t427 + t345;
t217 = t285 * t363 + t485;
t179 = (-t493 * t364 + (-t332 - t425) * t505) * t355;
t145 = t291 * t426 + t222;
t124 = pkin(5) * t404 - t131;
t120 = -qJ(6) * t404 + t584;
t93 = pkin(5) * t136 + qJ(6) * t134;
t51 = t160 * pkin(5) - t161 * qJ(6) + t85;
t44 = t108 * t192 + t141 * t595;
t43 = -t108 * t404 - t513 * t595;
t35 = -pkin(5) * t192 - t46;
t34 = qJ(6) * t192 + t589;
t32 = -t62 + t603;
t28 = -pkin(5) * t405 - t37;
t25 = qJ(6) * t405 + t38;
t23 = -pkin(5) * t595 + t518;
t22 = t413 - t547;
t21 = t544 * t595 - t560;
t20 = -t136 * t96 - t161 * t62;
t17 = -t136 * t392 - t533 * t62;
t12 = t97 * pkin(5) + t96 * qJ(6) - t161 * qJD(6) + t39;
t11 = t108 * t161 + t136 * t141 - t192 * t62 - t595 * t96;
t8 = t103 * t291 - t136 * t513 - t392 * t595 + t404 * t62;
t7 = -pkin(5) * t141 - t10;
t6 = qJ(6) * t141 + qJD(6) * t192 + t9;
t2 = qJDD(6) - t4 - t570;
t1 = qJD(6) * t595 + t3 + t554;
t13 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t361 - g(2) * t576, t412, 0, 0 (qJDD(1) * t352 + 0.2e1 * t439) * t350 (t360 * t494 - t497 * t509) * t593 (t333 * t504 + t360 * qJDD(2) + (t468 + 0.2e1 * t495) * t356) * t355 (qJDD(1) * t353 - 0.2e1 * t439) * t350 (-t333 * t505 + t364 * qJDD(2) + (-t469 + 0.2e1 * t494) * t356) * t355, t442 * t356, -t275 * t333 + t286 * t442 - t444 * t356 + g(1) * t283 - g(2) * t285 + (-t469 + t494) * t470, -t195 * t356 - t274 * t333 - t511 * t442 - t607 * t470 - t430 ((-qJD(2) * t270 + qJDD(1) * t511 + t195) * t364 + (-qJD(2) * t273 - qJDD(1) * t286 + t444) * t360 - t412) * t355, t350 * qJDD(1) * pkin(1) ^ 2 - g(1) * t466 - g(2) * t510 + t195 * t511 - t270 * t275 + t273 * t274 - t286 * t444, -t151 * t281 + t214 * t247, t151 * t280 - t247 * t213 + t214 * t246 - t281 * t376, -t214 * t425 + t281 * t493 + (t151 * t364 + (qJD(1) * t281 + t247) * t505) * t355, -t246 * t213 + t280 * t376, t213 * t425 - t280 * t493 + (t376 * t364 + (-qJD(1) * t280 + t246) * t505) * t355, t179, -t117 * t425 + t174 * t493 - t275 * t246 + t257 * t376 + t173 * t280 + t224 * t213 + g(1) * t456 - g(2) * t217 + (-t81 * t364 + (qJD(1) * t174 + t149) * t505) * t355, t116 * t425 - t175 * t493 + t275 * t247 - t257 * t151 + t173 * t281 + t224 * t214 - g(1) * t536 - g(2) * t216 + (-g(1) * t480 - t400 * t364 + (-qJD(1) * t175 - t150) * t505) * t355, t116 * t246 - t117 * t247 - t149 * t214 - t150 * t213 + t174 * t151 - t175 * t376 + t280 * t400 - t81 * t281 + t430, -t400 * t175 + t150 * t116 + t81 * t174 + t149 * t117 + t173 * t257 + t224 * t275 - g(1) * (-pkin(2) * t283 - pkin(9) * t282 + t466) - g(2) * (pkin(2) * t285 + pkin(9) * t284 + t510) t142 * t405 - t193 * t367, -t141 * t405 - t142 * t165 + t192 * t367 + t193 * t461, -t142 * t425 + t193 * t493 + (t367 * t364 + (qJD(1) * t193 + t405) * t505) * t355, t141 * t165 - t192 * t461, t141 * t425 - t192 * t493 + (-t461 * t364 + (-qJD(1) * t192 - t165) * t505) * t355, t179, -t41 * t425 + t90 * t493 + t169 * t165 - t197 * t461 + t112 * t192 + t163 * t141 + g(1) * t206 - g(2) * t210 + (t568 * t364 + (qJD(1) * t90 + t70) * t505) * t355, t42 * t425 - t91 * t493 + t169 * t405 - t197 * t367 + t112 * t193 + t163 * t142 + (t19 * t364 + (-qJD(1) * t91 - t71) * t505) * t355 + t432, -t71 * t141 - t70 * t142 - t42 * t165 - t19 * t192 + t193 * t568 + t367 * t90 - t405 * t41 + t461 * t91 + t430, -g(1) * t407 - g(2) * t421 + t112 * t197 + t163 * t169 + t19 * t91 + t70 * t41 + t71 * t42 - t568 * t90, t20, t378, t11, t424, -t377, t44, t10 * t595 + t108 * t46 + t134 * t39 + t141 * t29 + t15 * t160 + t192 * t4 + t63 * t85 + t66 * t97 + t433, -t108 * t589 + t136 * t39 - t141 * t30 + t15 * t161 - t192 * t3 - t595 * t9 - t62 * t85 - t66 * t96 - t434, -t10 * t136 - t134 * t9 - t160 * t3 - t161 * t4 + t29 * t96 - t30 * t97 + t46 * t62 - t589 * t63 - t432, -g(1) * t379 - g(2) * t384 + t29 * t10 + t15 * t85 + t3 * t589 + t30 * t9 + t66 * t39 + t4 * t46, t20, t11, -t378, t44, t377, t424, -t108 * t35 + t12 * t134 - t141 * t23 + t160 * t5 - t192 * t2 + t33 * t97 + t51 * t63 - t595 * t7 + t433, -t1 * t160 - t134 * t6 + t136 * t7 + t161 * t2 - t23 * t96 - t24 * t97 - t34 * t63 - t35 * t62 - t432, t1 * t192 + t108 * t34 - t12 * t136 + t141 * t24 - t161 * t5 + t33 * t96 + t51 * t62 + t595 * t6 + t434, t1 * t34 + t24 * t6 + t5 * t51 + t33 * t12 + t2 * t35 + t23 * t7 - g(1) * (-pkin(5) * t154 - qJ(6) * t153 + t379) - g(2) * (pkin(5) * t158 + qJ(6) * t157 + t384); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t509 * t528 (t499 * t506 + t495) * t355, t448, -t476 * t499 + t331, t442, t273 * t333 + t528 * t575 - t444 - t583, pkin(1) * t487 + t270 * t333 + (pkin(8) * t497 + g(3)) * t526 + t429 - t482, 0, 0, -t359 * t151 - t363 * t586 (-t151 - t587) * t363 + (-t376 + t586) * t359, -t363 * t450 + t359 * t493 + (t363 * t452 + (qJD(2) * t359 - t247) * t360) * t508, t359 * t587 - t363 * t376, t359 * t450 + t363 * t493 + (-t359 * t452 + (qJD(2) * t363 - t246) * t360) * t508, t410, -pkin(2) * t445 + t184 * t425 - t149 * t476 + t273 * t246 + t582 * t359 + (t592 - t599) * t363, pkin(2) * t151 + t150 * t476 - t185 * t425 - t273 * t247 + t599 * t359 + t582 * t363, t184 * t247 - t185 * t246 + ((t247 * qJD(3) - t376) * pkin(9) + t596) * t363 + (-t81 + t425 * t150 + (-t246 * qJD(3) - t151) * pkin(9)) * t359 + t386, -t149 * t184 - t150 * t185 - t224 * t273 - t381 * pkin(2) + (-t81 * t359 - t400 * t363 + (-t149 * t363 - t150 * t359) * qJD(3) + t386) * pkin(9), -t291 * t367 + t405 * t512, -t165 * t512 + t291 * t461 - t367 * t404 + t405 * t513, t291 * t395 - t405 * t476 - t425 * t512, -t165 * t513 + t404 * t461, t165 * t476 + t395 * t404 - t425 * t513, t410, -t112 * t404 - t163 * t513 + t165 * t436 - t222 * t395 + t346 * t461 - t348 * t583 + t425 * t517 - t476 * t70, t112 * t291 + t163 * t512 - t223 * t395 + t346 * t367 + t405 * t436 + t425 * t516 + t476 * t71 + t380, -t165 * t516 + t19 * t404 - t222 * t367 + t223 * t461 + t291 * t568 + t405 * t517 - t512 * t70 + t513 * t71 + t386, -g(1) * t514 - g(2) * t515 - g(3) * t428 - t112 * t346 + t163 * t436 + t19 * t223 + t222 * t568 + t516 * t71 - t517 * t70, t17, t594, t8, t370, -t578, t43, t108 * t131 + t134 * t557 + t15 * t534 + t222 * t63 - t29 * t513 + t393 * t66 - t4 * t404 + t564 * t595 + t398, -t108 * t584 + t136 * t557 + t15 * t533 - t222 * t62 + t3 * t404 + t30 * t513 - t392 * t66 - t565 * t595 + t399, t131 * t62 - t584 * t63 + t189 * t30 + t190 * t29 + (-t29 * t362 - t30 * t358) * t279 - t564 * t136 - t565 * t134 - t380 + (-t3 * t358 - t362 * t4 + (t29 * t358 - t30 * t362) * qJD(5)) * t291, -g(1) * t446 - g(2) * t447 - g(3) * t402 + t4 * t131 + t15 * t222 + t29 * t564 + t3 * t584 + t30 * t565 + t557 * t66, t17, t8, -t594, t43, t578, t370, -t108 * t124 + t134 * t563 + t145 * t63 + t2 * t404 + t23 * t513 + t33 * t393 + t5 * t534 - t566 * t595 + t398, -t120 * t63 - t124 * t62 - t459 * t24 + t458 * t23 + t566 * t136 - t567 * t134 - t380 + (-t1 * t358 + t2 * t362 + (-t23 * t358 - t24 * t362) * qJD(5)) * t291, -t1 * t404 + t108 * t120 - t136 * t563 + t145 * t62 - t24 * t513 + t33 * t392 - t5 * t533 + t567 * t595 - t399, t1 * t120 + t5 * t145 + t2 * t124 - g(1) * (pkin(5) * t183 + qJ(6) * t182 + t446) - g(2) * (pkin(5) * t181 + qJ(6) * t180 + t447) - g(3) * (pkin(5) * t231 + qJ(6) * t230 + t402) + t563 * t33 + t567 * t24 + t566 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t539, -t246 ^ 2 + t247 ^ 2, -t151 + t587, t539, -t376 - t586, t395, -g(1) * t216 - g(2) * t394 + g(3) * t280 - t150 * t332 - t224 * t247 + t460, g(1) * t217 + g(2) * t456 + g(3) * t281 - t224 * t246 - t596, 0, 0, t600, -t540 + t541, -t367 - t588, -t600, -t454 + t461, t395, -t74 * t425 - t163 * t405 + (-t247 * t165 + t395 * t555) * pkin(3) + t397 - t568, -t75 * t425 + t163 * t165 + (-t247 * t405 - t354 * t395) * pkin(3) + t396 - t19 (t354 * t461 + t367 * t555) * pkin(3) + (t71 - t74) * t405 + (t75 - t70) * t165, -g(1) * t437 - g(2) * t383 + g(3) * t601 - t163 * t573 + t19 * t572 - t477 * t568 + t70 * t74 - t71 * t75, t21 -(t545 + t550) * t165 + t462 + t558, t22, t389, -t385, -t543, -t134 * t74 - t29 * t405 + t345 * t63 + t358 * t401 - t362 * t372 - t37 * t595, -t136 * t74 + t30 * t405 - t345 * t62 + t358 * t372 + t362 * t401 + t38 * t595, t134 * t38 + t136 * t37 + (-t165 * t29 + t3 + (-t29 + t546) * qJD(5)) * t362 + (-t165 * t30 - t561 - t4 + (-t30 + t551) * qJD(5)) * t358 + t388, -g(1) * t391 - g(2) * t371 - g(3) * t382 + t15 * t345 + t3 * t531 - t4 * t532 - t66 * t74 + (-t38 - t473) * t30 + (-t37 - t472) * t29, t21, t22, t128 + (t136 * t165 + t63) * t358 + (t62 + t603) * t362, -t543, t385, t389, t556 * t134 + t405 * t23 + t28 * t595 + t288 * t63 + t358 * t581 + t373 * t362, t134 * t25 - t136 * t28 + (t165 * t23 + t1 + (t23 + t546) * qJD(5)) * t362 + (-t165 * t24 - t561 + t2 + (-t24 + t551) * qJD(5)) * t358 + t388, -t556 * t136 - t405 * t24 - t25 * t595 + t288 * t62 + t373 * t358 - t362 * t581, t1 * t531 + t5 * t288 + t2 * t532 - g(1) * (-t209 * t427 + t391) - g(2) * (t427 * t457 + t371) - g(3) * (t255 * t427 + t382) + t556 * t33 + (-t473 - t25) * t24 + (t472 - t28) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454 - t461, -t367 + t588, -t540 - t541, t165 * t71 + t405 * t70 + t112 + t583, 0, 0, 0, 0, 0, 0, t411 - t552, -t362 * t455 - t102 - t547 (-t134 * t165 + t62) * t362 + t136 * t451 + t558, -t405 * t66 + (t4 + t562) * t362 + (t3 - t605) * t358 + t583, 0, 0, 0, 0, 0, 0, -t358 * t455 + t103 - t552 -(-t545 + t550) * t165 - t462 + t558, t413 + t547, -t405 * t33 + (-t2 + t606) * t362 + (t23 * t595 + t1) * t358 + t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t549, -t471, t32, -t549, -t590, t108, -t136 * t66 + t375 + t562, t134 * t66 - t369 + t605, 0, 0, t549, t32, t471, t108, t590, -t549, -t134 * t93 - t368 + t562 + 0.2e1 * t570, pkin(5) * t62 - qJ(6) * t63 + (t24 - t30) * t136 + (t23 - t518) * t134, 0.2e1 * t554 - t134 * t33 + t136 * t93 + (0.2e1 * qJD(6) - t29) * t595 + t369, t1 * qJ(6) - t2 * pkin(5) - t33 * t93 - t23 * t30 - g(1) * (-pkin(5) * t157 + qJ(6) * t158) - g(2) * (-pkin(5) * t153 + qJ(6) * t154) - g(3) * (-pkin(5) * t203 + qJ(6) * t204) + t518 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108 + t549, t32, -t577 - t455, t368 - t570 - t606;];
tau_reg  = t13;
