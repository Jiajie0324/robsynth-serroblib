% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 08:27
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRP7_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 08:22:29
% EndTime: 2019-05-07 08:23:40
% DurationCPUTime: 27.19s
% Computational Cost: add. (113179->687), mult. (250516->968), div. (0->0), fcn. (203137->12), ass. (0->446)
t390 = sin(qJ(3));
t393 = cos(qJ(3));
t388 = cos(pkin(6));
t451 = qJD(1) * t388 + qJD(2);
t391 = sin(qJ(2));
t386 = sin(pkin(6));
t481 = qJD(1) * t386;
t465 = t391 * t481;
t359 = -t390 * t465 + t393 * t451;
t360 = t390 * t451 + t393 * t465;
t385 = sin(pkin(11));
t387 = cos(pkin(11));
t336 = -t387 * t359 + t360 * t385;
t333 = qJD(5) + t336;
t543 = t333 ^ 2;
t338 = t385 * t359 + t387 * t360;
t394 = cos(qJ(2));
t464 = t394 * t481;
t376 = -qJD(3) + t464;
t389 = sin(qJ(5));
t392 = cos(qJ(5));
t310 = t338 * t389 + t392 * t376;
t544 = t310 ^ 2;
t272 = t544 - t543;
t474 = qJD(1) * qJD(2);
t461 = t394 * t474;
t473 = qJDD(1) * t386;
t366 = t386 * t461 + t391 * t473;
t450 = qJDD(1) * t388 + qJDD(2);
t453 = -t366 * t390 + t393 * t450;
t323 = -qJD(3) * t360 + t453;
t414 = -t393 * t366 - t390 * t450;
t324 = t359 * qJD(3) - t414;
t456 = -t387 * t323 + t324 * t385;
t278 = qJDD(5) + t456;
t312 = t338 * t392 - t376 * t389;
t503 = t312 * t310;
t216 = -t503 - t278;
t517 = t216 * t389;
t175 = -t272 * t392 - t517;
t280 = t333 * t312;
t284 = t323 * t385 + t324 * t387;
t421 = -qJDD(1) * t394 + t391 * t474;
t415 = t421 * t386;
t408 = qJDD(3) + t415;
t457 = -t284 * t389 + t392 * t408;
t425 = qJD(5) * t312 - t457;
t199 = -t280 + t425;
t122 = t175 * t385 - t199 * t387;
t126 = t175 * t387 + t199 * t385;
t516 = t216 * t392;
t171 = -t272 * t389 + t516;
t84 = t122 * t393 + t126 * t390;
t637 = t386 * (t394 * t171 + t391 * (t122 * t390 - t126 * t393)) - t388 * t84;
t399 = -t392 * t284 - t389 * t408;
t398 = -t310 * qJD(5) - t399;
t504 = t310 * t333;
t558 = -t504 + t398;
t518 = t558 * t389;
t565 = t280 + t425;
t132 = t565 * t392 + t518;
t309 = t312 ^ 2;
t563 = t309 - t544;
t100 = t132 * t385 + t387 * t563;
t102 = t132 * t387 - t385 * t563;
t130 = -t565 * t389 + t392 * t558;
t67 = t100 * t393 + t102 * t390;
t635 = t386 * (-t394 * t130 + t391 * (t100 * t390 - t102 * t393)) - t388 * t67;
t564 = -t309 - t543;
t154 = -t392 * t564 - t517;
t631 = pkin(2) * t154;
t630 = pkin(3) * t154;
t629 = pkin(4) * t154;
t628 = pkin(10) * t154;
t156 = t389 * t564 - t516;
t627 = pkin(10) * t156;
t626 = t154 * t394;
t625 = t156 * t385;
t624 = t156 * t387;
t623 = t391 * t154;
t273 = -t309 + t543;
t559 = -t503 + t278;
t515 = t559 * t389;
t594 = t273 * t392 + t515;
t557 = t504 + t398;
t514 = t559 * t392;
t593 = -t273 * t389 + t514;
t607 = t385 * t557 + t387 * t593;
t608 = t385 * t593 - t387 * t557;
t616 = t390 * t607 + t393 * t608;
t621 = t388 * t616 + (t391 * (-t390 * t608 + t393 * t607) - t394 * t594) * t386;
t556 = -t543 - t544;
t575 = t392 * t556 - t515;
t591 = t385 * t565 + t387 * t575;
t592 = t385 * t575 - t387 * t565;
t605 = t390 * t591 + t393 * t592;
t620 = pkin(2) * t605;
t619 = pkin(9) * t605;
t576 = t389 * t556 + t514;
t606 = -t390 * t592 + t393 * t591;
t618 = -pkin(2) * t576 + pkin(9) * t606;
t617 = pkin(1) * (t391 * t606 - t394 * t576);
t615 = pkin(8) * (t391 * t576 + t394 * t606) - pkin(1) * t605;
t613 = qJ(4) * t592;
t610 = pkin(3) * t592 + pkin(10) * t575;
t609 = -pkin(3) * t576 + qJ(4) * t591;
t602 = pkin(4) * t576;
t600 = pkin(10) * t576;
t599 = qJ(6) * t558;
t500 = t333 * t389;
t193 = t310 * t500 - t392 * t425;
t499 = t333 * t392;
t470 = t310 * t499;
t429 = t389 * t425 + t470;
t472 = t385 * t503;
t548 = t387 * t429 - t472;
t471 = t387 * t503;
t549 = t385 * t429 + t471;
t573 = t390 * t548 + t393 * t549;
t590 = t388 * t573 + (t391 * (-t390 * t549 + t393 * t548) - t394 * t193) * t386;
t268 = t312 * t500;
t440 = t268 - t470;
t547 = t278 * t385 + t387 * t440;
t550 = -t387 * t278 + t385 * t440;
t566 = (t310 * t389 + t312 * t392) * t333;
t574 = t390 * t547 + t393 * t550;
t589 = t388 * t574 + (t391 * (-t390 * t550 + t393 * t547) + t394 * t566) * t386;
t562 = t309 + t544;
t588 = pkin(4) * t562;
t586 = t385 * t562;
t582 = t387 * t562;
t497 = t338 * t376;
t248 = t456 - t497;
t196 = t312 * t499 + t389 * t398;
t197 = t392 * t398 - t268;
t441 = t387 * t197 + t472;
t442 = t385 * t197 - t471;
t490 = t386 * t394;
t491 = t386 * t391;
t546 = t390 * t441 + t393 * t442;
t577 = t388 * t546 + (-t390 * t442 + t393 * t441) * t491 - t196 * t490;
t447 = t451 ^ 2;
t498 = t338 * t336;
t405 = t408 - t498;
t570 = t385 * t405;
t569 = t387 * t405;
t496 = t359 * t360;
t404 = t408 + t496;
t568 = t390 * t404;
t567 = t393 * t404;
t319 = t336 * t376;
t251 = t284 + t319;
t347 = t359 * t376;
t302 = t347 + t324;
t561 = -t447 * pkin(2) + t450 * pkin(9);
t539 = sin(qJ(1));
t540 = cos(qJ(1));
t420 = g(1) * t540 + g(2) * t539;
t542 = qJD(1) ^ 2;
t363 = -pkin(1) * t542 + pkin(8) * t473 - t420;
t419 = g(1) * t539 - g(2) * t540;
t411 = qJDD(1) * pkin(1) + t419;
t476 = t386 * t542;
t403 = pkin(8) * t476 + t411;
t400 = t388 * t403;
t455 = t391 * t363 - t394 * t400;
t328 = g(3) * t490 + t455;
t454 = -g(3) * t491 + t394 * t363;
t329 = t391 * t400 + t454;
t560 = t391 * t328 + t394 * t329;
t555 = pkin(5) * t425 - t599;
t257 = pkin(5) * t310 - qJ(6) * t312;
t537 = pkin(2) * t394;
t446 = -pkin(9) * t391 - t537;
t427 = t542 * t446;
t295 = -t450 * pkin(2) - t447 * pkin(9) + (t394 * g(3) + t427 * t491) * t386 + t455;
t341 = -pkin(3) * t376 - qJ(4) * t360;
t357 = t359 ^ 2;
t223 = -t323 * pkin(3) - t357 * qJ(4) + t360 * t341 + qJDD(4) + t295;
t141 = pkin(4) * t248 - pkin(10) * t251 + t223;
t480 = qJD(4) * t336;
t330 = -0.2e1 * t480;
t382 = t386 ^ 2;
t484 = t394 * t382;
t396 = t427 * t484 + t329 + t561;
t406 = (-pkin(1) - t537) * qJDD(1) - t419;
t532 = pkin(9) * t394;
t538 = pkin(2) * t391;
t426 = (-t532 + 0.2e1 * t538) * qJD(2);
t530 = t388 * g(3);
t443 = -t366 * pkin(9) - t530;
t445 = -t532 + t538;
t531 = t386 * pkin(8);
t397 = (((t388 * t445 - t531) * qJD(1) + t426) * qJD(1) + t406) * t386 + t443;
t234 = t390 * t397 + t393 * t396;
t208 = -pkin(3) * t357 + qJ(4) * t323 + t341 * t376 + t234;
t395 = pkin(3) * t404 - qJ(4) * t302 - t390 * t396 + t393 * t397;
t483 = t387 * t208 + t385 * t395;
t119 = t330 + t483;
t288 = pkin(4) * t336 - pkin(10) * t338;
t362 = t376 ^ 2;
t95 = -pkin(4) * t362 + pkin(10) * t408 - t336 * t288 + t119;
t79 = t389 * t141 + t392 * t95;
t452 = -t278 * qJ(6) + t310 * t257 - t79;
t554 = -pkin(5) * (t564 + t543) - qJ(6) * t216 - t452;
t478 = qJD(6) * t333;
t325 = 0.2e1 * t478;
t439 = t325 - t452;
t56 = -pkin(5) * t543 + t439;
t78 = -t392 * t141 + t389 * t95;
t57 = -t278 * pkin(5) - qJ(6) * t543 + t257 * t312 + qJDD(6) + t78;
t39 = t389 * t57 + t392 * t56;
t459 = t208 * t385 - t387 * t395;
t430 = -t408 * pkin(4) - t362 * pkin(10) + t459;
t94 = (0.2e1 * qJD(4) + t288) * t338 + t430;
t65 = (pkin(5) * t333 - 0.2e1 * qJD(6)) * t312 + t94 + t555;
t27 = t385 * t39 - t387 * t65;
t460 = qJ(6) * t389 + pkin(4);
t533 = pkin(5) * t392;
t553 = -(t460 + t533) * t65 + pkin(3) * t27 + pkin(10) * t39;
t479 = qJD(4) * t338;
t331 = -0.2e1 * t479;
t402 = 0.2e1 * qJD(6) * t312 - t288 * t338 + t331 - t430 - t555;
t53 = (-t565 - t280) * pkin(5) + t402;
t552 = t392 * t53 - t460 * t565 + t610;
t104 = t387 * t558 + t625;
t52 = -pkin(5) * t280 + t402 + t599;
t551 = pkin(3) * t104 + t627 + t558 * (pkin(4) + t533) + t389 * t52;
t334 = t336 ^ 2;
t335 = t338 ^ 2;
t358 = t360 ^ 2;
t118 = t459 + 0.2e1 * t479;
t80 = -t118 * t387 + t119 * t385;
t541 = pkin(3) * t80;
t252 = t284 - t319;
t428 = -t456 - t497;
t184 = -t252 * t387 + t385 * t428;
t536 = pkin(3) * t184;
t285 = -t362 - t334;
t221 = t285 * t385 + t569;
t535 = pkin(3) * t221;
t534 = pkin(4) * t385;
t529 = t389 * t94;
t528 = t390 * t80;
t527 = t392 * t94;
t526 = t393 * t80;
t525 = qJ(6) * t392;
t520 = t557 * t389;
t519 = t557 * t392;
t513 = t223 * t385;
t512 = t223 * t387;
t275 = -t408 - t498;
t509 = t275 * t385;
t508 = t275 * t387;
t506 = t295 * t390;
t505 = t295 * t393;
t314 = -t408 + t496;
t502 = t314 * t390;
t501 = t314 * t393;
t495 = t376 * t385;
t494 = t376 * t387;
t493 = t376 * t390;
t492 = t376 * t393;
t489 = t388 * t391;
t477 = t382 * t542;
t375 = t394 * t391 * t477;
t365 = t375 + t450;
t487 = t391 * t365;
t364 = -t375 + t450;
t485 = t394 * t364;
t475 = -qJD(3) + t376;
t469 = t394 * t498;
t468 = t394 * t496;
t467 = -pkin(4) * t387 - pkin(3);
t383 = t391 ^ 2;
t463 = t383 * t477;
t384 = t394 ^ 2;
t462 = t384 * t477;
t42 = t389 * t78 + t392 * t79;
t81 = t118 * t385 + t387 * t119;
t233 = t390 * (t411 * t489 + t454 + t561) - t393 * t443 + (-t393 * t406 + (((t390 * t394 * t446 + t393 * pkin(8)) * t386 + (t390 * t391 * pkin(8) - t393 * t445) * t388) * qJD(1) - t393 * t426) * qJD(1)) * t386;
t166 = t233 * t390 + t393 * t234;
t304 = -t335 - t362;
t231 = t304 * t387 + t509;
t448 = pkin(3) * t231 - t483;
t444 = -pkin(5) * t57 + qJ(6) * t56;
t438 = -pkin(5) * t557 - qJ(6) * t199;
t41 = t389 * t79 - t392 * t78;
t436 = t233 * t393 - t234 * t390;
t434 = t382 * t391 * t461;
t433 = -pkin(1) + t446;
t36 = t385 * t42 - t387 * t94;
t424 = pkin(3) * t36 - pkin(4) * t94 + pkin(10) * t42;
t422 = t451 * t481;
t416 = (-qJD(3) - t376) * t360 + t453;
t413 = -pkin(4) * t565 - t527 + t610;
t206 = (qJD(5) + t333) * t310 + t399;
t108 = t206 * t387 - t625;
t412 = pkin(3) * t108 + pkin(4) * t206 + t529 - t627;
t201 = (-qJD(5) + t333) * t312 + t457;
t135 = t201 * t392 + t520;
t97 = t135 * t385 + t582;
t410 = pkin(3) * t97 + pkin(10) * t135 + t42 + t588;
t133 = -t199 * t392 + t520;
t49 = (t562 - t543) * pkin(5) + t439;
t50 = qJ(6) * t562 + t57;
t96 = t133 * t385 + t582;
t407 = pkin(3) * t96 + pkin(10) * t133 + t389 * t50 + t392 * t49 + t588;
t401 = pkin(5) * t559 + qJ(6) * t556 - t57;
t370 = t394 * t422;
t369 = t391 * t422;
t368 = (t383 - t384) * t477;
t367 = -t447 - t462;
t354 = -t463 - t447;
t349 = t408 * t490;
t348 = t386 * t403 + t530;
t346 = -t369 - t415;
t345 = t369 - t415;
t344 = -t370 + t366;
t343 = -t358 + t362;
t342 = t357 - t362;
t340 = -t358 - t362;
t339 = t358 - t357;
t326 = -t362 - t357;
t318 = -t335 + t362;
t317 = t334 - t362;
t313 = t357 + t358;
t306 = (-t359 * t390 + t360 * t393) * t376;
t303 = t359 * t475 + t414;
t301 = -t347 + t324;
t299 = t360 * t475 + t453;
t297 = t324 * t390 - t360 * t492;
t296 = t323 * t393 + t359 * t493;
t292 = t342 * t390 - t501;
t291 = t343 * t393 + t568;
t290 = t335 - t334;
t287 = -t340 * t390 + t501;
t286 = t340 * t393 + t502;
t267 = t326 * t393 - t568;
t266 = t326 * t390 + t567;
t264 = (t336 * t387 - t338 * t385) * t376;
t263 = (t336 * t385 + t338 * t387) * t376;
t256 = -t334 - t335;
t247 = t302 * t390 + t393 * t416;
t245 = t299 * t390 + t301 * t393;
t244 = t284 * t387 + t338 * t495;
t243 = t284 * t385 - t338 * t494;
t242 = -t336 * t494 + t385 * t456;
t241 = -t336 * t495 - t387 * t456;
t238 = t317 * t387 + t509;
t237 = -t318 * t385 + t569;
t236 = t317 * t385 - t508;
t235 = t318 * t387 + t570;
t232 = -t304 * t385 + t508;
t222 = t285 * t387 - t570;
t211 = t263 * t393 + t264 * t390;
t210 = pkin(2) * t303 + pkin(9) * t287 + t506;
t209 = pkin(2) * t299 + pkin(9) * t267 - t505;
t186 = t252 * t385 + t387 * t428;
t185 = -t248 * t387 - t251 * t385;
t183 = -t248 * t385 + t251 * t387;
t178 = t243 * t393 + t244 * t390;
t177 = t241 * t393 + t242 * t390;
t168 = t236 * t393 + t238 * t390;
t167 = t235 * t393 + t237 * t390;
t164 = -t231 * t390 + t232 * t393;
t163 = t231 * t393 + t232 * t390;
t158 = -qJ(4) * t231 + t512;
t153 = -qJ(4) * t221 + t513;
t144 = -t221 * t390 + t222 * t393;
t143 = t221 * t393 + t222 * t390;
t142 = -pkin(2) * t295 + pkin(9) * t166;
t138 = -pkin(3) * t251 + qJ(4) * t232 + t513;
t137 = pkin(2) * t313 + pkin(9) * t247 + t166;
t136 = -pkin(3) * t248 + qJ(4) * t222 - t512;
t131 = t201 * t389 - t519;
t129 = -t199 * t389 - t519;
t117 = -t184 * t390 + t186 * t393;
t116 = t184 * t393 + t186 * t390;
t115 = t183 * t393 + t185 * t390;
t110 = -t206 * t385 - t624;
t106 = -t385 * t558 + t624;
t99 = t135 * t387 - t586;
t98 = t133 * t387 - t586;
t88 = -pkin(4) * t129 - t438;
t87 = t527 + t628;
t86 = t529 - t600;
t75 = -t108 * t390 + t110 * t393;
t73 = t108 * t393 + t110 * t390;
t71 = -t104 * t390 + t106 * t393;
t69 = t104 * t393 + t106 * t390;
t66 = -pkin(2) * t251 + pkin(9) * t164 + t138 * t393 + t158 * t390;
t64 = -pkin(3) * t223 + qJ(4) * t81;
t63 = -t390 * t97 + t393 * t99;
t62 = -t390 * t96 + t393 * t98;
t61 = t390 * t99 + t393 * t97;
t60 = t390 * t98 + t393 * t96;
t59 = -pkin(2) * t248 + pkin(9) * t144 + t136 * t393 + t153 * t390;
t58 = -qJ(4) * t184 - t80;
t55 = t79 + t629;
t54 = t78 - t602;
t51 = -pkin(3) * t256 + qJ(4) * t186 + t81;
t48 = -t389 * t53 - t525 * t565 - t600;
t47 = -t401 - t602;
t46 = -pkin(5) * t518 + t392 * t52 - t628;
t45 = -0.2e1 * t478 - t554 - t629;
t44 = t393 * t81 - t528;
t43 = t390 * t81 + t526;
t40 = -pkin(10) * t131 - t41;
t38 = t389 * t56 - t392 * t57;
t37 = t385 * t94 + t387 * t42;
t35 = -qJ(4) * t108 - t385 * t55 + t387 * t87;
t34 = -t385 * t54 + t387 * t86 - t613;
t33 = qJ(4) * t110 + t385 * t87 + t387 * t55 + t630;
t32 = t385 * t86 + t387 * t54 + t609;
t31 = -pkin(2) * t256 + pkin(9) * t117 + t390 * t58 + t393 * t51;
t30 = -pkin(10) * t129 - t389 * t49 + t392 * t50;
t29 = -qJ(4) * t97 + t131 * t534 + t387 * t40;
t28 = t385 * t65 + t387 * t39;
t26 = qJ(4) * t99 + t131 * t467 + t385 * t40;
t25 = -t385 * t47 + t387 * t48 - t613;
t24 = -pkin(2) * t223 + pkin(9) * t44 - qJ(4) * t528 + t393 * t64;
t23 = -qJ(4) * t104 - t385 * t45 + t387 * t46;
t22 = t385 * t48 + t387 * t47 + t609;
t21 = qJ(4) * t106 + t385 * t46 + t387 * t45 - t630;
t20 = -qJ(4) * t96 + t30 * t387 - t385 * t88;
t19 = -pkin(10) * t38 + (pkin(5) * t389 - t525) * t65;
t18 = -pkin(4) * t38 - t444;
t17 = -pkin(3) * t129 + qJ(4) * t98 + t30 * t385 + t387 * t88;
t16 = -t36 * t390 + t37 * t393;
t15 = t36 * t393 + t37 * t390;
t14 = -qJ(4) * t36 + (-pkin(10) * t387 + t534) * t41;
t13 = pkin(9) * t75 + t33 * t393 + t35 * t390 + t631;
t12 = t32 * t393 + t34 * t390 + t618;
t11 = -t27 * t390 + t28 * t393;
t10 = t27 * t393 + t28 * t390;
t9 = qJ(4) * t37 + (-pkin(10) * t385 + t467) * t41;
t8 = -pkin(2) * t131 + pkin(9) * t63 + t26 * t393 + t29 * t390;
t7 = t22 * t393 + t25 * t390 + t618;
t6 = pkin(9) * t71 + t21 * t393 + t23 * t390 - t631;
t5 = -pkin(2) * t129 + pkin(9) * t62 + t17 * t393 + t20 * t390;
t4 = -qJ(4) * t27 - t18 * t385 + t19 * t387;
t3 = -pkin(3) * t38 + qJ(4) * t28 + t18 * t387 + t19 * t385;
t2 = -pkin(2) * t41 + pkin(9) * t16 + t14 * t390 + t393 * t9;
t1 = -pkin(2) * t38 + pkin(9) * t11 + t3 * t393 + t390 * t4;
t68 = [0, 0, 0, 0, 0, qJDD(1), t419, t420, 0, 0, t366 * t491 + t434, t388 * t368 + (t391 * t346 + t394 * (t370 + t366)) * t386, t388 * t344 + (t487 + t394 * (t447 - t463)) * t386, -t421 * t484 - t434, t388 * t345 + (t391 * (-t447 + t462) + t485) * t386, t388 * t450, (-t328 + pkin(1) * (t365 * t394 + t367 * t391)) * t388 + (t394 * t348 + pkin(1) * t346 + pkin(8) * (t367 * t394 - t487)) * t386, -t348 * t491 - t388 * t329 + pkin(1) * (-t364 * t489 + t388 * t394 * t354 - t386 * (t451 * t464 + t366)) + (-t391 * t354 - t485) * t531, pkin(1) * ((-t344 * t394 + t345 * t391) * t388 - (-t383 - t384) * t382 * t476) + (t391 * t344 + t345 * t394) * t531 + t560 * t386, pkin(1) * (t386 * t348 + (-t328 * t394 + t329 * t391) * t388) + t560 * t531, t388 * t297 + (t391 * (t324 * t393 + t360 * t493) + t468) * t386, t388 * t245 + (t391 * (t299 * t393 - t301 * t390) - t394 * t339) * t386, t388 * t291 + (t391 * (-t343 * t390 + t567) - t394 * t302) * t386, t388 * t296 + (t391 * (-t323 * t390 + t359 * t492) - t468) * t386, t388 * t292 + (t391 * (t342 * t393 + t502) - t394 * t416) * t386, t388 * t306 - t349 + (-t359 * t393 - t360 * t390) * t376 * t491, (-pkin(9) * t266 + t506) * t491 + (-pkin(2) * t266 + t233) * t490 + t388 * t209 + pkin(1) * (-t386 * t266 + (t267 * t391 + t299 * t394) * t388) + (t267 * t394 - t391 * t299) * t531, (t210 + pkin(1) * (t287 * t391 + t303 * t394)) * t388 + (t391 * (-pkin(9) * t286 + t505) + t394 * (-pkin(2) * t286 + t234) - pkin(1) * t286 + pkin(8) * (t287 * t394 - t391 * t303)) * t386, (t137 + pkin(1) * (t247 * t391 + t313 * t394)) * t388 + (t391 * t436 + pkin(8) * (t247 * t394 - t391 * t313) + t433 * (-t302 * t393 + t390 * t416)) * t386, (t142 + pkin(1) * (t166 * t391 - t295 * t394)) * t388 + (pkin(8) * (t166 * t394 + t391 * t295) - t433 * t436) * t386, t388 * t178 + (t391 * (-t243 * t390 + t244 * t393) - t469) * t386, t388 * t115 + (t391 * (-t183 * t390 + t185 * t393) - t394 * t290) * t386, t388 * t167 + (t391 * (-t235 * t390 + t237 * t393) - t394 * t252) * t386, t388 * t177 + (t391 * (-t241 * t390 + t242 * t393) + t469) * t386, t388 * t168 + (t391 * (-t236 * t390 + t238 * t393) - t394 * t428) * t386, (-t263 * t390 + t264 * t393) * t491 - t349 + t388 * t211, (t59 + pkin(1) * (t144 * t391 - t248 * t394)) * t388 + (t391 * (-pkin(9) * t143 - t136 * t390 + t153 * t393) + t394 * (-pkin(2) * t143 + t118 - t535) - pkin(1) * t143 + pkin(8) * (t144 * t394 + t391 * t248)) * t386, (t66 + pkin(1) * (t164 * t391 - t251 * t394)) * t388 + (t391 * (-pkin(9) * t163 - t138 * t390 + t158 * t393) + t394 * (-pkin(2) * t163 + t330 - t448) - pkin(1) * t163 + pkin(8) * (t164 * t394 + t251 * t391)) * t386, (t31 + pkin(1) * (t117 * t391 - t256 * t394)) * t388 + (t391 * (-pkin(9) * t116 - t390 * t51 + t393 * t58) + t394 * (-pkin(2) * t116 - t536) - pkin(1) * t116 + pkin(8) * (t117 * t394 + t391 * t256)) * t386, (t24 + pkin(1) * (-t223 * t394 + t391 * t44)) * t388 + (t391 * (-pkin(9) * t43 - qJ(4) * t526 - t390 * t64) + t394 * (-pkin(2) * t43 - t541) - pkin(1) * t43 + pkin(8) * (t391 * t223 + t394 * t44)) * t386, t577, t635, t621, t590, t637, t589, (t12 + t617) * t388 + (t391 * (-t32 * t390 + t34 * t393 - t619) + t394 * (-t413 - t620) + t615) * t386, (t13 + pkin(1) * (t391 * t75 + t626)) * t388 + (t391 * (-pkin(9) * t73 - t33 * t390 + t35 * t393) + t394 * (-pkin(2) * t73 - t412) - pkin(1) * t73 + pkin(8) * (t394 * t75 - t623)) * t386, (t8 + pkin(1) * (-t131 * t394 + t391 * t63)) * t388 + (t391 * (-pkin(9) * t61 - t26 * t390 + t29 * t393) + t394 * (-pkin(2) * t61 - t410) - pkin(1) * t61 + pkin(8) * (t391 * t131 + t394 * t63)) * t386, (t2 + pkin(1) * (t16 * t391 - t394 * t41)) * t388 + (t391 * (-pkin(9) * t15 + t14 * t393 - t390 * t9) + t394 * (-pkin(2) * t15 - t424) - pkin(1) * t15 + pkin(8) * (t16 * t394 + t391 * t41)) * t386, t577, t621, -t635, t589, -t637, t590, (t7 + t617) * t388 + (t391 * (-t22 * t390 + t25 * t393 - t619) + t394 * (-t552 - t620) + t615) * t386, (t5 + pkin(1) * (-t129 * t394 + t391 * t62)) * t388 + (t391 * (-pkin(9) * t60 - t17 * t390 + t20 * t393) + t394 * (-pkin(2) * t60 - t407) - pkin(1) * t60 + pkin(8) * (t391 * t129 + t394 * t62)) * t386, (t6 + pkin(1) * (t391 * t71 - t626)) * t388 + (t391 * (-pkin(9) * t69 - t21 * t390 + t23 * t393) + t394 * (-pkin(2) * t69 - t551) - pkin(1) * t69 + pkin(8) * (t394 * t71 + t623)) * t386, (t1 + pkin(1) * (t11 * t391 - t38 * t394)) * t388 + (-pkin(1) * t10 + (pkin(8) * t38 - pkin(9) * t10 - t3 * t390 + t393 * t4) * t391 + (-pkin(2) * t10 + pkin(8) * t11 - t553) * t394) * t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, t368, t344, t375, t345, t450, -t328, -t329, 0, 0, t297, t245, t291, t296, t292, t306, t209, t210, t137, t142, t178, t115, t167, t177, t168, t211, t59, t66, t31, t24, t546, -t67, t616, t573, -t84, t574, t12, t13, t8, t2, t546, t616, t67, t574, t84, t573, t7, t5, t6, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t496, t339, t302, t496, t416, t408, -t233, -t234, 0, 0, t498, t290, t252, -t498, t428, t408, t331 - t459 + t535, t448 + 0.2e1 * t480, t536, t541, t196, t130, t594, t193, -t171, -t566, t413, t412, t410, t424, t196, t594, -t130, -t566, t171, t193, t552, t407, t551, t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t251, t256, t223, 0, 0, 0, 0, 0, 0, t576, -t154, t131, t41, 0, 0, 0, 0, 0, 0, t576, t129, t154, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t563, t557, -t503, -t199, t278, -t78, -t79, 0, 0, t503, t557, -t563, t278, t199, -t503, t401, t438, t325 + t554, t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, t557, t564, t57;];
tauJ_reg  = t68;
