% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tau_reg [6x30]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRP7_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP7_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP7_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP7_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:11:17
% EndTime: 2019-03-09 17:11:44
% DurationCPUTime: 14.21s
% Computational Cost: add. (18068->705), mult. (44346->930), div. (0->0), fcn. (35718->14), ass. (0->334)
t311 = sin(pkin(6));
t320 = cos(qJ(2));
t433 = qJD(1) * t320;
t287 = t311 * t433;
t365 = t287 - qJD(3);
t316 = sin(qJ(2));
t374 = pkin(2) * t316 - pkin(9) * t320;
t435 = qJD(1) * t311;
t225 = t374 * t435;
t319 = cos(qJ(3));
t205 = t319 * t225;
t404 = t316 * t435;
t312 = cos(pkin(6));
t434 = qJD(1) * t312;
t417 = pkin(1) * t434;
t224 = -pkin(8) * t404 + t320 * t417;
t315 = sin(qJ(3));
t313 = -qJ(4) - pkin(9);
t397 = qJD(3) * t313;
t514 = t205 + (-qJ(4) * t319 * t320 + pkin(3) * t316) * t435 - t319 * t397 + (-t224 + qJD(4)) * t315;
t379 = t315 * t287;
t439 = t319 * t224 + t315 * t225;
t513 = qJ(4) * t379 + qJD(4) * t319 + t315 * t397 - t439;
t310 = sin(pkin(11));
t473 = cos(pkin(11));
t244 = t310 * t319 + t315 * t473;
t438 = t365 * t244;
t347 = -t310 * t315 + t319 * t473;
t178 = t347 * t287;
t234 = t347 * qJD(3);
t512 = -t234 + t178;
t475 = -t310 * t514 + t513 * t473;
t423 = qJD(1) * qJD(2);
t400 = t320 * t423;
t421 = qJDD(1) * t316;
t511 = t400 + t421;
t227 = pkin(8) * t287 + t316 * t417;
t430 = qJD(3) * t315;
t510 = -t227 + (-t379 + t430) * pkin(3);
t508 = -pkin(10) * t404 + t475;
t507 = pkin(4) * t438 - t512 * pkin(10) - t510;
t314 = sin(qJ(5));
t318 = cos(qJ(5));
t289 = qJD(2) + t434;
t183 = pkin(9) * t289 + t227;
t360 = -pkin(2) * t320 - pkin(9) * t316 - pkin(1);
t213 = t360 * t311;
t187 = qJD(1) * t213;
t122 = t183 * t319 + t187 * t315;
t199 = -t319 * t289 + t315 * t404;
t102 = -qJ(4) * t199 + t122;
t396 = t473 * t102;
t121 = -t315 * t183 + t319 * t187;
t201 = t289 * t315 + t319 * t404;
t101 = -t201 * qJ(4) + t121;
t93 = -pkin(3) * t365 + t101;
t53 = t310 * t93 + t396;
t49 = -pkin(10) * t365 + t53;
t182 = -pkin(2) * t289 - t224;
t135 = pkin(3) * t199 + qJD(4) + t182;
t348 = -t310 * t199 + t201 * t473;
t392 = -t473 * t199 - t201 * t310;
t60 = -pkin(4) * t392 - pkin(10) * t348 + t135;
t22 = t314 * t60 + t318 * t49;
t498 = qJD(5) - t392;
t16 = qJ(6) * t498 + t22;
t509 = t16 * t498;
t476 = t513 * t310 + t473 * t514;
t416 = pkin(1) * qJD(2) * t312;
t382 = qJD(1) * t416;
t422 = qJDD(1) * t312;
t414 = pkin(1) * t422;
t505 = t511 * t311;
t380 = pkin(8) * t505 + t316 * t382 - t320 * t414;
t288 = qJDD(2) + t422;
t488 = t288 * pkin(2);
t144 = t380 - t488;
t384 = qJD(3) * t365;
t321 = cos(qJ(1));
t445 = t320 * t321;
t317 = sin(qJ(1));
t450 = t316 * t317;
t237 = -t312 * t445 + t450;
t448 = t317 * t320;
t449 = t316 * t321;
t239 = t312 * t448 + t449;
t455 = t311 * t320;
t501 = -g(1) * t239 - g(2) * t237 + g(3) * t455;
t506 = -pkin(9) * t384 + t144 + t501;
t238 = t312 * t449 + t448;
t307 = qJ(3) + pkin(11);
t303 = sin(t307);
t304 = cos(t307);
t454 = t311 * t321;
t165 = t238 * t304 - t303 * t454;
t125 = t165 * t314 - t237 * t318;
t126 = t165 * t318 + t237 * t314;
t306 = t311 ^ 2;
t418 = 0.2e1 * t306;
t477 = pkin(4) * t404 + t476;
t503 = t199 * t365;
t502 = t201 * t365;
t302 = pkin(3) * t319 + pkin(2);
t161 = -pkin(4) * t347 - pkin(10) * t244 - t302;
t270 = t313 * t315;
t271 = t313 * t319;
t181 = t310 * t270 - t271 * t473;
t443 = t314 * t161 + t318 * t181;
t492 = pkin(1) * t316;
t437 = pkin(8) * t455 + t312 * t492;
t212 = pkin(9) * t312 + t437;
t442 = t319 * t212 + t315 * t213;
t426 = qJD(5) * t318;
t427 = qJD(5) * t314;
t500 = -t161 * t426 + t181 * t427 + t507 * t314 - t318 * t508;
t446 = t319 * t321;
t408 = t311 * t446;
t465 = t238 * t315;
t499 = -t408 - t465;
t240 = -t312 * t450 + t445;
t457 = t311 * t317;
t168 = t240 * t303 - t304 * t457;
t355 = -t238 * t303 - t304 * t454;
t458 = t311 * t316;
t340 = -g(3) * (-t303 * t458 + t304 * t312) - g(2) * t355 + g(1) * t168;
t401 = t316 * t423;
t378 = t311 * t401;
t420 = qJDD(1) * t320;
t286 = t311 * t420;
t419 = qJDD(3) - t286;
t339 = t378 + t419;
t497 = -pkin(9) * t339 - t365 * t182;
t388 = t318 * t365;
t107 = t314 * t348 + t388;
t109 = -t314 * t365 + t318 * t348;
t97 = t310 * t102;
t52 = t473 * t93 - t97;
t48 = pkin(4) * t365 - t52;
t25 = t107 * pkin(5) - t109 * qJ(6) + t48;
t300 = pkin(3) * t310 + pkin(10);
t376 = qJD(3) * t404;
t429 = qJD(3) * t319;
t123 = t289 * t429 + t505 * t319 + (t288 - t376) * t315;
t381 = t289 * t430 + t315 * t505 + t319 * t376;
t346 = t319 * t288 - t381;
t88 = -t123 * t310 + t473 * t346;
t86 = qJDD(5) - t88;
t480 = t300 * t86;
t496 = t25 * t498 - t480;
t412 = t315 * t458;
t453 = t312 * t319;
t235 = t412 - t453;
t431 = qJD(2) * t320;
t402 = t311 * t431;
t173 = -qJD(3) * t235 + t319 * t402;
t456 = t311 * t319;
t236 = t312 * t315 + t316 * t456;
t353 = t374 * qJD(2);
t226 = t311 * t353;
t290 = pkin(8) * t458;
t452 = t312 * t320;
t228 = (pkin(1) * t452 - t290) * qJD(2);
t328 = -qJD(3) * t442 + t319 * t226 - t315 * t228;
t432 = qJD(2) * t316;
t403 = t311 * t432;
t65 = pkin(3) * t403 - qJ(4) * t173 - qJD(4) * t236 + t328;
t172 = qJD(3) * t236 + t315 * t402;
t344 = -t212 * t430 + t213 * t429 + t315 * t226 + t319 * t228;
t70 = -qJ(4) * t172 - qJD(4) * t235 + t344;
t32 = t310 * t65 + t473 * t70;
t30 = pkin(10) * t403 + t32;
t391 = -t212 * t315 + t319 * t213;
t105 = -pkin(3) * t455 - qJ(4) * t236 + t391;
t115 = -qJ(4) * t235 + t442;
t69 = t310 * t105 + t473 * t115;
t64 = -pkin(10) * t455 + t69;
t158 = t235 * t473 + t236 * t310;
t159 = -t310 * t235 + t236 * t473;
t211 = t290 + (-pkin(1) * t320 - pkin(2)) * t312;
t334 = pkin(3) * t235 + t211;
t89 = pkin(4) * t158 - pkin(10) * t159 + t334;
t363 = t314 * t89 + t318 * t64;
t114 = t172 * t473 + t173 * t310;
t349 = -t310 * t172 + t173 * t473;
t229 = pkin(8) * t402 + t316 * t416;
t375 = t172 * pkin(3) + t229;
t51 = t114 * pkin(4) - pkin(10) * t349 + t375;
t495 = -qJD(5) * t363 - t30 * t314 + t318 * t51;
t494 = t109 ^ 2;
t493 = pkin(5) * t86;
t406 = -pkin(8) * t286 - t316 * t414 - t320 * t382;
t333 = -pkin(8) * t378 - t406;
t143 = pkin(9) * t288 + t333;
t147 = (qJD(1) * t353 + qJDD(1) * t360) * t311;
t395 = -t315 * t143 + t319 * t147;
t329 = -qJD(3) * t122 + t395;
t35 = pkin(3) * t339 - t123 * qJ(4) - t201 * qJD(4) + t329;
t345 = -t319 * t143 - t315 * t147 + t183 * t430 - t187 * t429;
t41 = qJ(4) * t346 - t199 * qJD(4) - t345;
t14 = t310 * t35 + t473 * t41;
t487 = -qJ(6) * t438 - qJD(6) * t347 - t500;
t486 = pkin(5) * t438 + t443 * qJD(5) + t314 * t508 + t318 * t507;
t57 = t101 * t473 - t97;
t79 = pkin(3) * t201 + pkin(4) * t348 - pkin(10) * t392;
t485 = t314 * t79 + t318 * t57;
t155 = t178 * t314 - t318 * t404;
t156 = t178 * t318 + t314 * t404;
t366 = pkin(5) * t314 - qJ(6) * t318;
t367 = t318 * pkin(5) + t314 * qJ(6);
t484 = -t155 * pkin(5) + t156 * qJ(6) + t366 * t234 + (qJD(5) * t367 - qJD(6) * t318) * t244 + t477;
t482 = qJ(6) * t86;
t481 = t498 * t22;
t326 = t123 * t473 + t310 * t346;
t44 = qJD(5) * t388 - t314 * t339 - t318 * t326 + t348 * t427;
t479 = t314 * t44;
t80 = t314 * t86;
t81 = t318 * t86;
t323 = t314 * t326 - t318 * t339;
t45 = qJD(5) * t109 + t323;
t478 = -t107 * t426 - t314 * t45;
t56 = t101 * t310 + t396;
t474 = -qJD(6) * t314 + t366 * t498 - t56;
t472 = t107 * t348;
t471 = t107 * t392;
t470 = t109 * t107;
t469 = t109 * t348;
t468 = t498 * t318;
t464 = t240 * t315;
t463 = t244 * t314;
t462 = t244 * t318;
t461 = t304 * t314;
t460 = t304 * t318;
t459 = t306 * qJD(1) ^ 2;
t451 = t313 * t316;
t447 = t318 * t320;
t21 = -t314 * t49 + t318 * t60;
t444 = qJD(6) - t21;
t441 = -t237 * t302 - t238 * t313;
t440 = -t239 * t302 - t240 * t313;
t308 = t316 ^ 2;
t436 = -t320 ^ 2 + t308;
t428 = qJD(5) * t300;
t425 = qJD(2) - t289;
t413 = t320 * t459;
t411 = t315 * t457;
t410 = t317 * t456;
t409 = t311 * t447;
t274 = t314 * t455;
t275 = t315 * t454;
t405 = t473 * pkin(3);
t12 = pkin(10) * t339 + t14;
t90 = -pkin(3) * t346 + qJDD(4) + t144;
t23 = -t88 * pkin(4) - pkin(10) * t326 + t90;
t398 = t314 * t12 - t318 * t23 + t49 * t426 + t60 * t427;
t394 = -t234 * t314 + t155;
t393 = t234 * t318 - t156;
t390 = t238 * t319 - t275;
t180 = -t473 * t270 - t271 * t310;
t389 = t109 * t498;
t387 = t320 * t365;
t386 = t498 * t314;
t385 = t289 + t434;
t383 = t288 + t422;
t373 = pkin(4) * t304 + pkin(10) * t303;
t169 = t240 * t304 + t303 * t457;
t129 = t169 * t314 - t239 * t318;
t372 = -g(1) * t125 + g(2) * t129;
t130 = t169 * t318 + t239 * t314;
t371 = g(1) * t126 - g(2) * t130;
t369 = -g(1) * t237 + g(2) * t239;
t368 = g(1) * t240 + g(2) * t238;
t13 = -t310 * t41 + t35 * t473;
t31 = -t310 * t70 + t473 * t65;
t362 = -t314 * t64 + t318 * t89;
t68 = t105 * t473 - t310 * t115;
t361 = t321 * pkin(1) + pkin(3) * t411 + pkin(8) * t457 - t239 * t313 + t240 * t302;
t359 = t81 + (t314 * t392 - t427) * t498;
t358 = -t392 * t468 + t426 * t498 + t80;
t357 = pkin(4) + t367;
t63 = pkin(4) * t455 - t68;
t132 = t159 * t314 + t409;
t3 = t318 * t12 + t314 * t23 + t60 * t426 - t427 * t49;
t354 = t318 * t30 + t314 * t51 + t89 * t426 - t427 * t64;
t352 = -pkin(1) * t317 + pkin(3) * t275 + pkin(8) * t454 + t237 * t313 - t238 * t302;
t350 = t48 * t498 - t480;
t148 = -t237 * t461 - t238 * t318;
t150 = -t239 * t461 - t240 * t318;
t188 = t274 * t304 - t318 * t458;
t342 = g(1) * t150 + g(2) * t148 + g(3) * t188;
t149 = -t237 * t460 + t238 * t314;
t151 = -t239 * t460 + t240 * t314;
t189 = (t304 * t447 + t314 * t316) * t311;
t341 = -g(1) * t151 - g(2) * t149 - g(3) * t189;
t338 = t244 * t426 - t394;
t337 = t244 * t427 - t393;
t335 = g(3) * t458 + t368;
t29 = -pkin(4) * t403 - t31;
t210 = t303 * t312 + t304 * t458;
t162 = t210 * t314 + t409;
t331 = g(1) * t129 + g(2) * t125 + g(3) * t162 - t398;
t330 = t428 * t498 - t340;
t11 = -pkin(4) * t339 - t13;
t5 = t45 * pkin(5) + t44 * qJ(6) - t109 * qJD(6) + t11;
t327 = -t330 - t5;
t163 = t210 * t318 - t274;
t325 = -g(1) * t130 - g(2) * t126 - g(3) * t163 + t3;
t324 = t109 * t25 + qJDD(6) - t331;
t301 = -t405 - pkin(4);
t296 = pkin(3) * t453;
t268 = pkin(3) * t410;
t247 = t302 * t455;
t241 = -t405 - t357;
t175 = t240 * t319 + t411;
t174 = t410 - t464;
t133 = t159 * t318 - t274;
t117 = t244 * t366 + t180;
t100 = pkin(5) * t347 - t161 * t318 + t181 * t314;
t96 = -qJ(6) * t347 + t443;
t75 = -qJD(5) * t274 + t159 * t426 + t314 * t349 - t318 * t403;
t74 = qJD(5) * t132 - t314 * t403 - t318 * t349;
t71 = pkin(5) * t109 + qJ(6) * t107;
t36 = t132 * pkin(5) - t133 * qJ(6) + t63;
t27 = -pkin(5) * t158 - t362;
t26 = qJ(6) * t158 + t363;
t24 = t107 * t498 - t44;
t20 = -pkin(5) * t348 + t314 * t57 - t318 * t79;
t17 = qJ(6) * t348 + t485;
t15 = -pkin(5) * t498 + t444;
t8 = t75 * pkin(5) + t74 * qJ(6) - t133 * qJD(6) + t29;
t7 = -pkin(5) * t114 - t495;
t6 = qJ(6) * t114 + qJD(6) * t158 + t354;
t2 = qJDD(6) + t398 - t493;
t1 = qJD(6) * t498 + t3 + t482;
t4 = [qJDD(1), g(1) * t317 - g(2) * t321, g(1) * t321 + g(2) * t317 (qJDD(1) * t308 + 0.2e1 * t316 * t400) * t306 (t316 * t420 - t423 * t436) * t418 (t316 * t383 + t385 * t431) * t311 (t320 * t383 - t385 * t432) * t311, t288 * t312, -t229 * t289 - t290 * t288 - t380 * t312 + g(1) * t238 - g(2) * t240 + (t288 * t452 + (-t401 + t420) * t418) * pkin(1), -pkin(1) * t418 * t511 - t228 * t289 - t437 * t288 - t333 * t312 + t369, t123 * t236 + t173 * t201, -t123 * t235 - t201 * t172 - t173 * t199 + t236 * t346, -t173 * t365 + t236 * t419 + (-t123 * t320 + (qJD(1) * t236 + t201) * t432) * t311, t172 * t365 - t235 * t419 + (-t346 * t320 + (-qJD(1) * t235 - t199) * t432) * t311 (-t419 * t320 + (-t287 - t365) * t432) * t311, g(1) * t390 - g(2) * t175 + t121 * t403 + t144 * t235 + t182 * t172 + t229 * t199 - t211 * t346 - t328 * t365 - t329 * t455 + t339 * t391, t344 * t365 - t442 * t419 + t229 * t201 + t211 * t123 + t144 * t236 + t182 * t173 - g(1) * t465 - g(2) * t174 + (-t345 * t320 - g(1) * t446 + (-qJD(1) * t442 - t122) * t432) * t311, -t53 * t114 - t13 * t159 - t14 * t158 - t31 * t348 + t32 * t392 - t326 * t68 - t349 * t52 + t69 * t88 - t369, -g(1) * t352 - g(2) * t361 + t13 * t68 + t135 * t375 + t14 * t69 + t52 * t31 + t53 * t32 + t334 * t90, -t109 * t74 - t133 * t44, t107 * t74 - t109 * t75 + t132 * t44 - t133 * t45, t109 * t114 + t133 * t86 - t158 * t44 - t498 * t74, -t107 * t114 - t132 * t86 - t158 * t45 - t498 * t75, t114 * t498 + t158 * t86, t29 * t107 + t11 * t132 + t21 * t114 - t158 * t398 + t362 * t86 + t63 * t45 + t48 * t75 + t495 * t498 + t371, t29 * t109 + t11 * t133 - t22 * t114 - t3 * t158 - t354 * t498 - t363 * t86 - t63 * t44 - t48 * t74 + t372, t107 * t8 - t114 * t15 + t132 * t5 - t158 * t2 + t25 * t75 - t27 * t86 + t36 * t45 - t498 * t7 + t371, -g(1) * t355 - g(2) * t168 - t1 * t132 - t107 * t6 + t109 * t7 + t133 * t2 - t15 * t74 - t16 * t75 - t26 * t45 - t27 * t44, t1 * t158 - t109 * t8 + t114 * t16 - t133 * t5 + t25 * t74 + t26 * t86 + t36 * t44 + t498 * t6 - t372, t1 * t26 + t16 * t6 + t5 * t36 + t25 * t8 + t2 * t27 + t15 * t7 - g(1) * (-pkin(4) * t165 - pkin(5) * t126 + pkin(10) * t355 - qJ(6) * t125 + t352) - g(2) * (pkin(4) * t169 + pkin(5) * t130 + pkin(10) * t168 + qJ(6) * t129 + t361); 0, 0, 0, -t316 * t413, t436 * t459 (t425 * t433 + t421) * t311, -t404 * t425 + t286, t288, t227 * t289 + t459 * t492 - t380 - t501, pkin(1) * t413 + t224 * t289 + (pkin(8) * t423 + g(3)) * t458 + t368 + t406, t123 * t315 - t319 * t502 (t123 + t503) * t319 + (t346 + t502) * t315, -t319 * t384 + t315 * t419 + (t319 * t387 + (qJD(2) * t315 - t201) * t316) * t435, t315 * t384 + t319 * t419 + (-t315 * t387 + (qJD(2) * t319 + t199) * t316) * t435, t365 * t404, -pkin(2) * t381 + t205 * t365 - t121 * t404 - t227 * t199 + (-t224 * t365 + t497) * t315 + (t488 - t506) * t319, -pkin(2) * t123 + t122 * t404 - t227 * t201 + t315 * t506 + t497 * t319 - t439 * t365, -t13 * t244 + t14 * t347 + t180 * t326 + t181 * t88 + t476 * t348 + t475 * t392 + t438 * t53 + t512 * t52 - t335, t14 * t181 - t13 * t180 - t90 * t302 - g(1) * t440 - g(2) * t441 - g(3) * (-t311 * t451 + t247) + t475 * t53 - t476 * t52 + t510 * t135, -t109 * t337 - t44 * t462, t394 * t109 - t393 * t107 + (t479 - t318 * t45 + (t107 * t314 - t109 * t318) * qJD(5)) * t244, -t109 * t438 - t337 * t498 + t347 * t44 + t462 * t86, t107 * t438 - t338 * t498 + t347 * t45 - t463 * t86, -t347 * t86 - t438 * t498, -t48 * t155 + t180 * t45 + t398 * t347 - t438 * t21 + t477 * t107 + (t48 * qJD(5) * t244 + t161 * t86 + (-qJD(5) * t181 - t507) * t498) * t318 + (t11 * t244 - t181 * t86 + t48 * t234 + (-qJD(5) * t161 - t508) * t498) * t314 + t341, t477 * t109 + t11 * t462 - t180 * t44 + t438 * t22 + t3 * t347 - t337 * t48 - t443 * t86 + t498 * t500 + t342, -t100 * t86 + t107 * t484 + t117 * t45 + t15 * t438 + t2 * t347 + t25 * t338 + t463 * t5 - t486 * t498 + t341, -t100 * t44 - t45 * t96 + t394 * t16 + t393 * t15 + t486 * t109 - t487 * t107 - t501 * t303 + (-t1 * t314 + t2 * t318 + (-t15 * t314 - t16 * t318) * qJD(5)) * t244, -t1 * t347 - t109 * t484 + t117 * t44 - t16 * t438 + t25 * t337 - t462 * t5 + t487 * t498 + t86 * t96 - t342, t1 * t96 + t5 * t117 + t2 * t100 - g(1) * (pkin(5) * t151 + qJ(6) * t150 - t239 * t373 + t440) - g(2) * (pkin(5) * t149 + qJ(6) * t148 - t237 * t373 + t441) + t484 * t25 + t487 * t16 + t486 * t15 + (-pkin(5) * t189 - qJ(6) * t188 - t247 - (t320 * t373 - t451) * t311) * g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201 * t199, -t199 ^ 2 + t201 ^ 2, t123 - t503, t346 - t502, t339, -g(1) * t174 - g(2) * t499 + g(3) * t235 - t122 * t287 - t182 * t201 + t395, g(1) * t175 + g(2) * t390 + g(3) * t236 - t121 * t365 + t182 * t199 + t345 (t310 * t88 - t326 * t473) * pkin(3) + (-t57 + t52) * t392 + (t53 - t56) * t348, -g(1) * t268 - g(3) * t296 + t52 * t56 - t53 * t57 + (g(2) * t408 + t13 * t473 - t135 * t201 + t14 * t310 + t315 * t335) * pkin(3), t318 * t389 - t479 (-t44 + t471) * t318 - t109 * t386 + t478, t358 - t469, t359 + t472, -t498 * t348, -t56 * t107 - t21 * t348 + t301 * t45 + (t498 * t57 + t350) * t314 + (-t11 + (-t79 - t428) * t498 + t340) * t318, -t301 * t44 + t485 * t498 + t22 * t348 - t56 * t109 + t350 * t318 + (t11 + t330) * t314, t474 * t107 + t348 * t15 + t20 * t498 + t241 * t45 + t314 * t496 + t327 * t318, -g(1) * t169 - g(2) * t165 - g(3) * t210 + t107 * t17 - t109 * t20 + (-t392 * t15 - t300 * t45 + t1 + (t109 * t300 + t15) * qJD(5)) * t318 + (t392 * t16 - t300 * t44 + t2 + (t107 * t300 - t16) * qJD(5)) * t314, -t474 * t109 - t348 * t16 - t17 * t498 + t241 * t44 + t327 * t314 - t318 * t496, t5 * t241 - t16 * t17 - t15 * t20 - g(1) * (-pkin(3) * t464 + pkin(10) * t169 + t268) - g(2) * (pkin(3) * t499 + pkin(10) * t165) - g(3) * (-pkin(3) * t412 + pkin(10) * t210 + t296) + t474 * t25 + (t1 * t318 + t2 * t314 + (t15 * t318 - t16 * t314) * qJD(5)) * t300 + t340 * t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t348 ^ 2 - t392 ^ 2, t348 * t52 - t392 * t53 + t501 + t90, 0, 0, 0, 0, 0, t359 - t472, -t468 * t498 - t469 - t80, -t386 * t498 - t472 + t81 (t44 + t471) * t318 + t314 * t389 + t478, t358 + t469, -t348 * t25 + (-t2 + t509) * t318 + (t15 * t498 + t1) * t314 + t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, -t107 ^ 2 + t494, t24, -t323 + (-qJD(5) + t498) * t109, t86, -t109 * t48 + t331 + t481, t107 * t48 + t21 * t498 - t325, -t107 * t71 - t324 + t481 + 0.2e1 * t493, pkin(5) * t44 - qJ(6) * t45 + (t16 - t22) * t109 + (t15 - t444) * t107, 0.2e1 * t482 - t107 * t25 + t109 * t71 + (0.2e1 * qJD(6) - t21) * t498 + t325, t1 * qJ(6) - t2 * pkin(5) - t25 * t71 - t15 * t22 - g(1) * (-pkin(5) * t129 + qJ(6) * t130) - g(2) * (-pkin(5) * t125 + qJ(6) * t126) - g(3) * (-pkin(5) * t162 + qJ(6) * t163) + t444 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86 + t470, t24, -t498 ^ 2 - t494, t324 - t493 - t509;];
tau_reg  = t4;
