% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PPRRRR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR1_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR1_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR1_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:40:46
% EndTime: 2019-05-04 20:41:36
% DurationCPUTime: 50.18s
% Computational Cost: add. (382486->1015), mult. (716192->1709), div. (0->0), fcn. (581815->16), ass. (0->739)
t892 = cos(pkin(13));
t889 = sin(pkin(12));
t893 = cos(pkin(12));
t862 = g(1) * t893 + g(2) * t889;
t888 = sin(pkin(13));
t847 = t888 * t862;
t1023 = g(1) * t889 - t893 * g(2);
t895 = cos(pkin(6));
t1018 = t895 * t1023;
t1041 = g(3) - qJDD(1);
t891 = sin(pkin(6));
t915 = -t1041 * t891 + t1018;
t912 = t892 * t915 + t847;
t911 = t892 * t912;
t890 = sin(pkin(7));
t900 = sin(qJ(3));
t1034 = qJDD(3) * t900;
t904 = cos(qJ(3));
t906 = qJD(3) ^ 2;
t957 = t904 * t906 + t1034;
t837 = t957 * t890;
t894 = cos(pkin(7));
t839 = t957 * t894;
t1033 = qJDD(3) * t904;
t858 = -t900 * t906 + t1033;
t960 = t839 * t892 + t858 * t888;
t764 = -t837 * t891 + t895 * t960;
t794 = t839 * t888 - t858 * t892;
t707 = t764 * t889 + t794 * t893;
t1088 = t764 * t893 - t794 * t889;
t1032 = t891 * t1023 - qJDD(2);
t953 = t1041 * t895 + t1032;
t1085 = -t890 * t953 + t894 * t912;
t899 = sin(qJ(4));
t1039 = qJD(3) * t899;
t898 = sin(qJ(5));
t902 = cos(qJ(5));
t903 = cos(qJ(4));
t843 = -t902 * t903 * qJD(3) + t1039 * t898;
t884 = qJD(4) + qJD(5);
t834 = t884 * t843;
t1036 = qJD(3) * qJD(4);
t1024 = t903 * t1036;
t1035 = qJDD(3) * t899;
t854 = t1024 + t1035;
t1026 = t899 * t1036;
t879 = t903 * qJDD(3);
t855 = t879 - t1026;
t922 = qJD(5) * t843 - t854 * t902 - t855 * t898;
t1084 = t922 + t834;
t845 = (t898 * t903 + t899 * t902) * qJD(3);
t800 = t845 * t843;
t883 = qJDD(4) + qJDD(5);
t1078 = -t800 + t883;
t1083 = t1078 * t898;
t1082 = t1078 * t902;
t897 = sin(qJ(6));
t901 = cos(qJ(6));
t812 = t845 * t897 - t901 * t884;
t814 = t845 * t901 + t884 * t897;
t769 = t814 * t812;
t1021 = t854 * t898 - t902 * t855;
t772 = -qJD(5) * t845 - t1021;
t938 = qJDD(6) - t772;
t1079 = -t769 + t938;
t1081 = t1079 * t897;
t1080 = t1079 * t901;
t917 = t895 * t953;
t723 = -t812 * qJD(6) + t897 * t883 - t901 * t922;
t836 = qJD(6) + t843;
t781 = t836 * t812;
t685 = -t781 + t723;
t1076 = t889 * t1041;
t1075 = t893 * t1041;
t870 = t899 * t906 * t903;
t863 = qJDD(4) + t870;
t809 = -t1023 * t889 - t893 * t862;
t1074 = t837 * t895 + t891 * t960;
t754 = (qJD(5) - t884) * t845 + t1021;
t1022 = -t901 * t883 - t897 * t922;
t682 = (qJD(6) - t836) * t814 + t1022;
t808 = t1023 * t893 - t889 * t862;
t810 = t812 ^ 2;
t811 = t814 ^ 2;
t835 = t836 ^ 2;
t841 = t843 ^ 2;
t842 = t845 ^ 2;
t1073 = t884 ^ 2;
t1072 = pkin(5) * t898;
t914 = t888 * t915;
t784 = -t892 * t862 + t914;
t694 = -t1085 * t904 + t784 * t900;
t695 = t1085 * t900 + t904 * t784;
t604 = t694 * t900 + t695 * t904;
t1071 = pkin(8) * t604;
t719 = -t888 * t847 + (t784 - t914) * t892;
t1070 = qJ(2) * t719;
t739 = t890 * t912 + t894 * t953;
t908 = -t906 * pkin(3) + qJDD(3) * pkin(9) + t695;
t633 = -t899 * t739 + t903 * t908;
t865 = qJD(4) * pkin(4) - pkin(10) * t1039;
t886 = t903 ^ 2;
t881 = t886 * t906;
t611 = -pkin(4) * t881 + pkin(10) * t855 - qJD(4) * t865 + t633;
t632 = t903 * t739 + t899 * t908;
t907 = -t632 + (t1024 - t854) * pkin(10) + t863 * pkin(4);
t540 = t611 * t898 - t902 * t907;
t541 = t902 * t611 + t898 * t907;
t461 = -t540 * t902 + t541 * t898;
t1069 = t461 * t899;
t1068 = t461 * t903;
t796 = pkin(5) * t843 - pkin(11) * t845;
t533 = -t883 * pkin(5) - pkin(11) * t1073 + t796 * t845 + t540;
t1067 = t533 * t897;
t1066 = t533 * t901;
t691 = -qJDD(3) * pkin(3) - t906 * pkin(9) + t694;
t654 = -t855 * pkin(4) - pkin(10) * t881 + t1039 * t865 + t691;
t1065 = t654 * t898;
t1064 = t654 * t902;
t1063 = t691 * t899;
t1062 = t691 * t903;
t710 = t769 + t938;
t1061 = t710 * t897;
t1060 = t710 * t901;
t1059 = t739 * t900;
t1058 = t739 * t904;
t791 = t800 + t883;
t1057 = t791 * t898;
t1056 = t791 * t902;
t1055 = t836 * t897;
t1054 = t836 * t901;
t1051 = t863 * t899;
t864 = qJDD(4) - t870;
t1050 = t864 * t899;
t1049 = t864 * t903;
t1048 = t884 * t898;
t1047 = t884 * t902;
t885 = t899 ^ 2;
t1046 = t885 * t906;
t1044 = t891 * t784;
t1043 = t891 * t892;
t1042 = t895 * t784;
t534 = -pkin(5) * t1073 + pkin(11) * t883 - t796 * t843 + t541;
t587 = t1084 * pkin(11) + (t845 * t884 - t772) * pkin(5) + t654;
t477 = t901 * t534 + t897 * t587;
t1040 = t885 + t886;
t1031 = t898 * t769;
t1030 = t902 * t769;
t1029 = t900 * t800;
t1028 = t904 * t800;
t1027 = -pkin(5) * t902 - pkin(4);
t1025 = qJDD(3) * t888 * t890;
t476 = t534 * t897 - t901 * t587;
t462 = t540 * t898 + t902 * t541;
t546 = t632 * t899 + t903 * t633;
t1020 = t900 * t870;
t1019 = t904 * t870;
t545 = t632 * t903 - t633 * t899;
t857 = t1040 * qJDD(3);
t860 = t881 + t1046;
t805 = t857 * t904 - t860 * t900;
t1017 = pkin(8) * t805 + t545 * t900;
t1016 = -pkin(8) * t858 - t1059;
t1015 = -pkin(8) * t957 + t1058;
t424 = t476 * t897 + t477 * t901;
t402 = t424 * t898 - t533 * t902;
t403 = t424 * t902 + t533 * t898;
t355 = -t402 * t899 + t403 * t903;
t423 = -t476 * t901 + t477 * t897;
t1013 = t355 * t900 - t423 * t904;
t354 = t402 * t903 + t403 * t899;
t326 = t1013 * t894 - t354 * t890;
t343 = t355 * t904 + t423 * t900;
t1014 = t326 * t892 + t343 * t888;
t413 = t462 * t903 - t1069;
t1011 = t413 * t900 - t654 * t904;
t412 = t462 * t899 + t1068;
t364 = t1011 * t894 - t412 * t890;
t408 = t413 * t904 + t654 * t900;
t1012 = t364 * t892 + t408 * t888;
t686 = -t781 - t723;
t598 = -t682 * t901 - t686 * t897;
t724 = t810 + t811;
t560 = t598 * t898 + t724 * t902;
t561 = t598 * t902 - t724 * t898;
t491 = -t560 * t899 + t561 * t903;
t596 = -t682 * t897 + t686 * t901;
t1000 = t491 * t900 - t596 * t904;
t490 = t560 * t903 + t561 * t899;
t420 = t1000 * t894 - t490 * t890;
t455 = t491 * t904 + t596 * t900;
t1010 = t420 * t892 + t455 * t888;
t684 = (-qJD(6) - t836) * t814 - t1022;
t599 = t684 * t901 - t685 * t897;
t768 = -t811 + t810;
t573 = t599 * t898 + t768 * t902;
t574 = t599 * t902 - t768 * t898;
t501 = t573 * t903 + t574 * t899;
t502 = -t573 * t899 + t574 * t903;
t597 = -t684 * t897 - t685 * t901;
t999 = t502 * t900 + t597 * t904;
t429 = -t501 * t890 + t894 * t999;
t467 = t502 * t904 - t597 * t900;
t1009 = t429 * t892 + t467 * t888;
t738 = -t835 - t810;
t647 = t738 * t901 - t1081;
t577 = t647 * t898 + t684 * t902;
t578 = t647 * t902 - t684 * t898;
t507 = t577 * t903 + t578 * t899;
t508 = -t577 * t899 + t578 * t903;
t646 = t738 * t897 + t1080;
t997 = t508 * t900 - t646 * t904;
t439 = -t507 * t890 + t894 * t997;
t478 = t508 * t904 + t646 * t900;
t1008 = t439 * t892 + t478 * t888;
t761 = -t811 - t835;
t649 = -t761 * t897 - t1060;
t580 = t649 * t898 - t685 * t902;
t581 = t649 * t902 + t685 * t898;
t511 = t580 * t903 + t581 * t899;
t512 = -t580 * t899 + t581 * t903;
t648 = t761 * t901 - t1061;
t995 = t512 * t900 - t648 * t904;
t441 = -t511 * t890 + t894 * t995;
t479 = t512 * t904 + t648 * t900;
t1007 = t441 * t892 + t479 * t888;
t780 = -t811 + t835;
t663 = -t780 * t897 + t1080;
t588 = t663 * t898 + t686 * t902;
t590 = t663 * t902 - t686 * t898;
t513 = t588 * t903 + t590 * t899;
t515 = -t588 * t899 + t590 * t903;
t661 = -t780 * t901 - t1081;
t994 = t515 * t900 + t661 * t904;
t444 = -t513 * t890 + t894 * t994;
t482 = t515 * t904 - t661 * t900;
t1006 = t444 * t892 + t482 * t888;
t779 = t810 - t835;
t664 = t779 * t901 - t1061;
t589 = t664 * t898 + t682 * t902;
t591 = t664 * t902 - t682 * t898;
t514 = t589 * t903 + t591 * t899;
t516 = -t589 * t899 + t591 * t903;
t662 = -t779 * t897 - t1060;
t993 = t516 * t900 + t662 * t904;
t445 = -t514 * t890 + t894 * t993;
t483 = t516 * t904 - t662 * t900;
t1005 = t445 * t892 + t483 * t888;
t992 = t546 * t900 - t691 * t904;
t458 = t545 * t890 + t894 * t992;
t528 = t546 * t904 + t691 * t900;
t1004 = t458 * t892 + t528 * t888;
t722 = -qJD(6) * t814 - t1022;
t675 = t1054 * t812 - t722 * t897;
t634 = t675 * t898 + t1030;
t636 = t675 * t902 - t1031;
t550 = t634 * t903 + t636 * t899;
t552 = -t634 * t899 + t636 * t903;
t674 = -t1055 * t812 - t722 * t901;
t990 = t552 * t900 + t674 * t904;
t465 = -t550 * t890 + t894 * t990;
t529 = t552 * t904 - t674 * t900;
t1003 = t465 * t892 + t529 * t888;
t677 = -t1055 * t814 + t723 * t901;
t635 = t677 * t898 - t1030;
t637 = t677 * t902 + t1031;
t551 = t635 * t903 + t637 * t899;
t553 = -t635 * t899 + t637 * t903;
t676 = -t1054 * t814 - t723 * t897;
t989 = t553 * t900 + t676 * t904;
t466 = -t551 * t890 + t894 * t989;
t530 = t553 * t904 - t676 * t900;
t1002 = t466 * t892 + t530 * t888;
t717 = (-t812 * t901 + t814 * t897) * t836;
t665 = t717 * t898 - t902 * t938;
t666 = t717 * t902 + t898 * t938;
t582 = t665 * t903 + t666 * t899;
t583 = -t665 * t899 + t666 * t903;
t716 = (t812 * t897 + t814 * t901) * t836;
t982 = t583 * t900 + t716 * t904;
t487 = -t582 * t890 + t894 * t982;
t549 = t583 * t904 - t716 * t900;
t1001 = t487 * t892 + t549 * t888;
t753 = -t834 + t922;
t669 = t753 * t902 - t754 * t898;
t671 = -t753 * t898 - t754 * t902;
t593 = t669 * t903 + t671 * t899;
t595 = -t669 * t899 + t671 * t903;
t775 = -t841 - t842;
t980 = t595 * t900 - t775 * t904;
t506 = -t593 * t890 + t894 * t980;
t570 = t595 * t904 + t775 * t900;
t998 = t506 * t892 + t570 * t888;
t749 = (qJD(5) + t884) * t845 + t1021;
t668 = -t1084 * t902 - t749 * t898;
t670 = t1084 * t898 - t749 * t902;
t592 = t668 * t903 + t670 * t899;
t594 = -t668 * t899 + t670 * t903;
t799 = -t842 + t841;
t981 = t594 * t900 + t799 * t904;
t510 = -t592 * t890 + t894 * t981;
t571 = t594 * t904 - t799 * t900;
t996 = t510 * t892 + t571 * t888;
t785 = -t1073 - t841;
t725 = t785 * t898 + t1082;
t726 = t785 * t902 - t1083;
t652 = t725 * t903 + t726 * t899;
t653 = -t725 * t899 + t726 * t903;
t977 = t653 * t900 - t749 * t904;
t548 = -t652 * t890 + t894 * t977;
t607 = t653 * t904 + t749 * t900;
t991 = t548 * t892 + t607 * t888;
t826 = -t842 - t1073;
t755 = t826 * t902 - t1057;
t756 = -t826 * t898 - t1056;
t672 = t755 * t903 + t756 * t899;
t673 = -t755 * t899 + t756 * t903;
t976 = t1084 * t904 + t673 * t900;
t555 = -t672 * t890 + t894 * t976;
t622 = -t1084 * t900 + t673 * t904;
t988 = t555 * t892 + t622 * t888;
t731 = t1048 * t843 + t772 * t902;
t732 = t1047 * t843 - t772 * t898;
t655 = t731 * t903 + t732 * t899;
t657 = -t731 * t899 + t732 * t903;
t955 = t657 * t900 + t1028;
t558 = -t655 * t890 + t894 * t955;
t638 = t657 * t904 - t1029;
t987 = t558 * t892 + t638 * t888;
t733 = t1047 * t845 - t898 * t922;
t734 = -t1048 * t845 - t902 * t922;
t656 = t733 * t903 + t734 * t899;
t658 = -t733 * t899 + t734 * t903;
t954 = t658 * t900 - t1028;
t559 = -t656 * t890 + t894 * t954;
t639 = t658 * t904 + t1029;
t986 = t559 * t892 + t639 * t888;
t831 = -t842 + t1073;
t757 = t831 * t902 + t1083;
t759 = -t831 * t898 + t1082;
t678 = t757 * t903 + t759 * t899;
t680 = -t757 * t899 + t759 * t903;
t975 = t680 * t900 + t753 * t904;
t564 = -t678 * t890 + t894 * t975;
t629 = t680 * t904 - t753 * t900;
t985 = t564 * t892 + t629 * t888;
t830 = t841 - t1073;
t758 = t830 * t898 + t1056;
t760 = t830 * t902 - t1057;
t679 = t758 * t903 + t760 * t899;
t681 = -t758 * t899 + t760 * t903;
t974 = t681 * t900 + t754 * t904;
t565 = -t679 * t890 + t894 * t974;
t630 = t681 * t904 - t754 * t900;
t984 = t565 * t892 + t630 * t888;
t603 = t694 * t904 - t695 * t900;
t576 = -t603 * t894 + t739 * t890;
t983 = t576 * t892 + t604 * t888;
t601 = t604 * t894;
t979 = t601 * t892 + t603 * t888;
t777 = (-t843 * t898 - t845 * t902) * t884;
t778 = (-t843 * t902 + t845 * t898) * t884;
t712 = t777 * t903 + t778 * t899;
t713 = -t777 * t899 + t778 * t903;
t973 = t713 * t900 - t883 * t904;
t628 = -t712 * t890 + t894 * t973;
t704 = t713 * t904 + t883 * t900;
t978 = t628 * t892 + t704 * t888;
t853 = 0.2e1 * t1024 + t1035;
t856 = t879 - 0.2e1 * t1026;
t801 = t853 * t903 + t856 * t899;
t802 = -t853 * t899 + t856 * t903;
t861 = t881 - t1046;
t964 = t802 * t900 + t861 * t904;
t721 = -t801 * t890 + t894 * t964;
t774 = t802 * t904 - t861 * t900;
t972 = t721 * t892 + t774 * t888;
t852 = t903 * t863;
t905 = qJD(4) ^ 2;
t869 = -t881 - t905;
t819 = t869 * t899 + t852;
t823 = t869 * t903 - t1051;
t962 = t823 * t900 + t856 * t904;
t729 = -t819 * t890 + t894 * t962;
t782 = t823 * t904 - t856 * t900;
t971 = t729 * t892 + t782 * t888;
t867 = -t905 - t1046;
t821 = t867 * t903 - t1050;
t825 = -t867 * t899 - t1049;
t961 = t825 * t900 - t853 * t904;
t730 = -t821 * t890 + t894 * t961;
t783 = t825 * t904 + t853 * t900;
t970 = t730 * t892 + t783 * t888;
t868 = t881 - t905;
t818 = t868 * t899 + t1049;
t822 = t868 * t903 - t1050;
t952 = t822 * t900 - t879 * t904;
t742 = -t818 * t890 + t894 * t952;
t786 = t822 * t904 + t879 * t900;
t969 = t742 * t892 + t786 * t888;
t866 = t905 - t1046;
t820 = t866 * t903 + t1051;
t824 = -t866 * t899 + t852;
t951 = -t1033 * t899 + t824 * t900;
t743 = -t820 * t890 + t894 * t951;
t787 = t1034 * t899 + t824 * t904;
t968 = t743 * t892 + t787 * t888;
t816 = (t855 - t1026) * t903;
t827 = -t1036 * t886 - t855 * t899;
t950 = t827 * t900 - t1019;
t746 = -t816 * t890 + t894 * t950;
t788 = t827 * t904 + t1020;
t967 = t746 * t892 + t788 * t888;
t817 = (t854 + t1024) * t899;
t828 = -t1036 * t885 + t854 * t903;
t949 = t828 * t900 + t1019;
t747 = -t817 * t890 + t894 * t949;
t789 = t828 * t904 - t1020;
t966 = t747 * t892 + t789 * t888;
t958 = t857 * t900 + t860 * t904;
t798 = t958 * t894;
t965 = t798 * t892 + t805 * t888;
t851 = t1040 * t1036;
t956 = -qJDD(4) * t904 + t851 * t900;
t807 = t956 * t894;
t829 = qJDD(4) * t900 + t851 * t904;
t963 = t807 * t892 + t829 * t888;
t840 = t858 * t894;
t959 = t840 * t892 - t888 * t957;
t335 = pkin(10) * t403 + (-pkin(11) * t898 + t1027) * t423;
t349 = -pkin(10) * t402 + (-pkin(11) * t902 + t1072) * t423;
t310 = -pkin(9) * t354 - t335 * t899 + t349 * t903;
t333 = -pkin(3) * t354 - pkin(4) * t402 + pkin(5) * t533 - pkin(11) * t424;
t948 = pkin(8) * t343 + t310 * t900 + t333 * t904;
t411 = -pkin(11) * t596 - t423;
t380 = pkin(10) * t561 + t1027 * t596 + t411 * t898;
t388 = -pkin(10) * t560 + t1072 * t596 + t411 * t902;
t342 = -pkin(9) * t490 - t380 * t899 + t388 * t903;
t373 = -pkin(3) * t490 - pkin(4) * t560 - pkin(5) * t724 - pkin(11) * t598 - t424;
t947 = pkin(8) * t455 + t342 * t900 + t373 * t904;
t452 = -pkin(5) * t646 + t476;
t488 = -pkin(11) * t646 + t1067;
t400 = -pkin(4) * t646 + pkin(10) * t578 + t452 * t902 + t488 * t898;
t409 = -pkin(10) * t577 - t452 * t898 + t488 * t902;
t352 = -pkin(9) * t507 - t400 * t899 + t409 * t903;
t415 = -pkin(3) * t507 - pkin(4) * t577 - pkin(5) * t684 - pkin(11) * t647 + t1066;
t946 = pkin(8) * t478 + t352 * t900 + t415 * t904;
t453 = -pkin(5) * t648 + t477;
t492 = -pkin(11) * t648 + t1066;
t404 = -pkin(4) * t648 + pkin(10) * t581 + t453 * t902 + t492 * t898;
t410 = -pkin(10) * t580 - t453 * t898 + t492 * t902;
t353 = -pkin(9) * t511 - t404 * t899 + t410 * t903;
t416 = -pkin(3) * t511 - pkin(4) * t580 + pkin(5) * t685 - pkin(11) * t649 - t1067;
t945 = pkin(8) * t479 + t353 * t900 + t416 * t904;
t448 = -pkin(4) * t654 + pkin(10) * t462;
t365 = -pkin(9) * t412 - pkin(10) * t1068 - t448 * t899;
t379 = -pkin(3) * t412 - pkin(4) * t461;
t944 = pkin(8) * t408 + t365 * t900 + t379 * t904;
t446 = -pkin(4) * t775 + pkin(10) * t671 + t462;
t449 = -pkin(10) * t669 - t461;
t391 = -pkin(9) * t593 - t446 * t899 + t449 * t903;
t542 = -pkin(3) * t593 - pkin(4) * t669;
t943 = pkin(8) * t570 + t391 * t900 + t542 * t904;
t579 = -pkin(4) * t749 + pkin(10) * t726 - t1064;
t605 = -pkin(10) * t725 + t1065;
t485 = -pkin(9) * t652 - t579 * t899 + t605 * t903;
t489 = -pkin(3) * t652 - pkin(4) * t725 + t540;
t942 = pkin(8) * t607 + t485 * t900 + t489 * t904;
t499 = -pkin(3) * t672 - pkin(4) * t755 + t541;
t586 = pkin(4) * t1084 + pkin(10) * t756 + t1065;
t616 = -pkin(10) * t755 + t1064;
t500 = -pkin(9) * t672 - t586 * t899 + t616 * t903;
t941 = pkin(8) * t622 + t499 * t904 + t500 * t900;
t617 = -pkin(3) * t819 + t632;
t659 = -pkin(9) * t819 + t1063;
t940 = pkin(8) * t782 + t617 * t904 + t659 * t900;
t618 = -pkin(3) * t821 + t633;
t660 = -pkin(9) * t821 + t1062;
t939 = pkin(8) * t783 + t618 * t904 + t660 * t900;
t307 = -pkin(3) * t423 + pkin(9) * t355 + t335 * t903 + t349 * t899;
t325 = t1013 * t890 + t354 * t894;
t293 = -pkin(2) * t325 - t307 * t890 + t894 * t948;
t296 = t310 * t904 - t333 * t900 + (-t325 * t890 - t326 * t894) * pkin(8);
t313 = -t326 * t888 + t343 * t892;
t937 = qJ(2) * t313 + t293 * t892 + t296 * t888;
t341 = -pkin(3) * t596 + pkin(9) * t491 + t380 * t903 + t388 * t899;
t419 = t1000 * t890 + t490 * t894;
t309 = -pkin(2) * t419 - t341 * t890 + t894 * t947;
t322 = t342 * t904 - t373 * t900 + (-t419 * t890 - t420 * t894) * pkin(8);
t382 = -t420 * t888 + t455 * t892;
t936 = qJ(2) * t382 + t309 * t892 + t322 * t888;
t360 = -pkin(3) * t654 + pkin(9) * t413 - pkin(10) * t1069 + t448 * t903;
t363 = t1011 * t890 + t412 * t894;
t312 = -pkin(2) * t363 - t360 * t890 + t894 * t944;
t316 = t365 * t904 - t379 * t900 + (-t363 * t890 - t364 * t894) * pkin(8);
t346 = -t364 * t888 + t408 * t892;
t935 = qJ(2) * t346 + t312 * t892 + t316 * t888;
t350 = -pkin(3) * t646 + pkin(9) * t508 + t400 * t903 + t409 * t899;
t438 = t507 * t894 + t890 * t997;
t318 = -pkin(2) * t438 - t350 * t890 + t894 * t946;
t330 = t352 * t904 - t415 * t900 + (-t438 * t890 - t439 * t894) * pkin(8);
t396 = -t439 * t888 + t478 * t892;
t934 = qJ(2) * t396 + t318 * t892 + t330 * t888;
t351 = -pkin(3) * t648 + pkin(9) * t512 + t404 * t903 + t410 * t899;
t440 = t511 * t894 + t890 * t995;
t321 = -pkin(2) * t440 - t351 * t890 + t894 * t945;
t331 = t353 * t904 - t416 * t900 + (-t440 * t890 - t441 * t894) * pkin(8);
t401 = -t441 * t888 + t479 * t892;
t933 = qJ(2) * t401 + t321 * t892 + t331 * t888;
t387 = -pkin(3) * t775 + pkin(9) * t595 + t446 * t903 + t449 * t899;
t505 = t593 * t894 + t890 * t980;
t340 = -pkin(2) * t505 - t387 * t890 + t894 * t943;
t358 = t391 * t904 - t542 * t900 + (-t505 * t890 - t506 * t894) * pkin(8);
t454 = -t506 * t888 + t570 * t892;
t932 = qJ(2) * t454 + t340 * t892 + t358 * t888;
t480 = -pkin(3) * t749 + pkin(9) * t653 + t579 * t903 + t605 * t899;
t547 = t652 * t894 + t890 * t977;
t376 = -pkin(2) * t547 - t480 * t890 + t894 * t942;
t399 = t485 * t904 - t489 * t900 + (-t547 * t890 - t548 * t894) * pkin(8);
t504 = -t548 * t888 + t607 * t892;
t931 = qJ(2) * t504 + t376 * t892 + t399 * t888;
t457 = -t545 * t894 + t890 * t992;
t531 = -pkin(3) * t691 + pkin(9) * t546;
t916 = pkin(8) * t528 - (-pkin(3) * t904 - pkin(9) * t900) * t545;
t378 = -pkin(2) * t457 - t531 * t890 + t894 * t916;
t381 = -(pkin(3) * t900 - pkin(9) * t904) * t545 + (-t457 * t890 - t458 * t894) * pkin(8);
t433 = -t458 * t888 + t528 * t892;
t930 = qJ(2) * t433 + t378 * t892 + t381 * t888;
t484 = pkin(3) * t1084 + pkin(9) * t673 + t586 * t903 + t616 * t899;
t554 = t672 * t894 + t890 * t976;
t384 = -pkin(2) * t554 - t484 * t890 + t894 * t941;
t407 = -t499 * t900 + t500 * t904 + (-t554 * t890 - t555 * t894) * pkin(8);
t517 = -t555 * t888 + t622 * t892;
t929 = qJ(2) * t517 + t384 * t892 + t407 * t888;
t543 = pkin(3) * t860 + pkin(9) * t857 + t546;
t797 = t958 * t890;
t471 = -pkin(2) * t797 + t1017 * t894 - t543 * t890;
t536 = t545 * t904 + (-t797 * t890 - t798 * t894) * pkin(8);
t748 = -t798 * t888 + t805 * t892;
t928 = qJ(2) * t748 + t471 * t892 + t536 * t888;
t651 = pkin(3) * t856 + pkin(9) * t823 - t1062;
t727 = t819 * t894 + t890 * t962;
t497 = -pkin(2) * t727 - t651 * t890 + t894 * t940;
t525 = -t617 * t900 + t659 * t904 + (-t727 * t890 - t729 * t894) * pkin(8);
t689 = -t729 * t888 + t782 * t892;
t927 = qJ(2) * t689 + t497 * t892 + t525 * t888;
t650 = -pkin(3) * t853 + pkin(9) * t825 + t1063;
t728 = t821 * t894 + t890 * t961;
t498 = -pkin(2) * t728 - t650 * t890 + t894 * t939;
t526 = -t618 * t900 + t660 * t904 + (-t728 * t890 - t730 * t894) * pkin(8);
t690 = -t730 * t888 + t783 * t892;
t926 = qJ(2) * t690 + t498 * t892 + t526 * t888;
t575 = -t603 * t890 - t739 * t894;
t503 = (-t575 * t890 - t576 * t894) * pkin(8);
t518 = -t576 * t888 + t604 * t892;
t519 = -pkin(2) * t575 + t1071 * t894;
t925 = qJ(2) * t518 + t503 * t888 + t519 * t892;
t614 = pkin(2) * t837 + t1016 * t894 + t695 * t890;
t697 = -t1058 + (t837 * t890 + t839 * t894) * pkin(8);
t924 = qJ(2) * t794 + t614 * t892 + t697 * t888;
t838 = t858 * t890;
t615 = -pkin(2) * t838 + t1015 * t894 + t694 * t890;
t696 = -t1059 + (-t838 * t890 - t840 * t894) * pkin(8);
t795 = -t840 * t888 - t892 * t957;
t923 = qJ(2) * t795 + t615 * t892 + t696 * t888;
t921 = t888 * t953;
t919 = t891 * t953;
t918 = t892 * t953;
t909 = t892 * t784 - t888 * t912;
t832 = (-t890 * t892 * t895 - t891 * t894) * qJDD(3);
t806 = t956 * t890;
t767 = -t807 * t888 + t829 * t892;
t766 = -t838 * t891 + t895 * t959;
t763 = t838 * t895 + t891 * t959;
t745 = t817 * t894 + t890 * t949;
t744 = t816 * t894 + t890 * t950;
t741 = t820 * t894 + t890 * t951;
t740 = t818 * t894 + t890 * t952;
t737 = -t891 * t847 + (-t891 * t915 + t917) * t892;
t736 = -t888 * t917 + t1044;
t720 = t801 * t894 + t890 * t964;
t718 = -t888 * t784 - t911;
t715 = t909 * t895;
t714 = -t806 * t891 + t895 * t963;
t708 = -t766 * t889 + t795 * t893;
t706 = t766 * t893 + t795 * t889;
t703 = -t797 * t891 + t895 * t965;
t702 = t797 * t895 + t891 * t965;
t701 = -t747 * t888 + t789 * t892;
t700 = -t746 * t888 + t788 * t892;
t699 = -t743 * t888 + t787 * t892;
t698 = -t742 * t888 + t786 * t892;
t693 = t1042 * t888 + t895 * t911 + t919;
t692 = t1044 * t888 + t891 * t911 - t917;
t667 = -t721 * t888 + t774 * t892;
t645 = -t703 * t889 + t748 * t893;
t644 = t703 * t893 + t748 * t889;
t643 = -t745 * t891 + t895 * t966;
t642 = -t744 * t891 + t895 * t967;
t641 = -t741 * t891 + t895 * t968;
t640 = -t740 * t891 + t895 * t969;
t627 = t712 * t894 + t890 * t973;
t626 = -t728 * t891 + t895 * t970;
t625 = -t727 * t891 + t895 * t971;
t624 = t728 * t895 + t891 * t970;
t623 = t727 * t895 + t891 * t971;
t621 = -pkin(1) * t692 + t1070 * t895;
t620 = -t693 * t889 + t719 * t893;
t619 = t693 * t893 + t719 * t889;
t613 = pkin(2) * t840 + t1015 * t890 - t694 * t894;
t612 = -pkin(2) * t839 + t1016 * t890 - t695 * t894;
t606 = -t720 * t891 + t895 * t972;
t602 = (-t692 * t891 - t693 * t895) * qJ(2);
t600 = t604 * t890;
t572 = -t628 * t888 + t704 * t892;
t569 = -t626 * t889 + t690 * t893;
t568 = -t625 * t889 + t689 * t893;
t567 = t626 * t893 + t690 * t889;
t566 = t625 * t893 + t689 * t889;
t563 = t679 * t894 + t890 * t974;
t562 = t678 * t894 + t890 * t975;
t557 = t656 * t894 + t890 * t954;
t556 = t655 * t894 + t890 * t955;
t538 = -t614 * t888 + t697 * t892 + (t1074 * t891 + t764 * t895) * qJ(2);
t537 = -t615 * t888 + t696 * t892 + (-t763 * t891 - t766 * t895) * qJ(2);
t535 = -t601 * t888 + t603 * t892;
t527 = -t627 * t891 + t895 * t978;
t524 = -t559 * t888 + t639 * t892;
t523 = -t558 * t888 + t638 * t892;
t522 = -t565 * t888 + t630 * t892;
t521 = -t564 * t888 + t629 * t892;
t520 = pkin(2) * t576 + t1071 * t890;
t509 = t592 * t894 + t890 * t981;
t496 = pkin(2) * t730 + t650 * t894 + t890 * t939;
t495 = pkin(2) * t729 + t651 * t894 + t890 * t940;
t494 = pkin(1) * t1074 - t612 * t891 + t895 * t924;
t493 = -pkin(1) * t763 - t613 * t891 + t895 * t923;
t486 = t582 * t894 + t890 * t982;
t481 = -t600 * t891 + t895 * t979;
t475 = -t575 * t891 + t895 * t983;
t474 = t575 * t895 + t891 * t983;
t473 = -t557 * t891 + t895 * t986;
t472 = -t556 * t891 + t895 * t987;
t470 = pkin(2) * t798 + t1017 * t890 + t543 * t894;
t469 = -t563 * t891 + t895 * t984;
t468 = -t562 * t891 + t895 * t985;
t464 = t551 * t894 + t890 * t989;
t463 = t550 * t894 + t890 * t990;
t460 = -t554 * t891 + t895 * t988;
t459 = t554 * t895 + t891 * t988;
t456 = -t510 * t888 + t571 * t892;
t451 = -t547 * t891 + t895 * t991;
t450 = t547 * t895 + t891 * t991;
t447 = -t487 * t888 + t549 * t892;
t443 = t514 * t894 + t890 * t993;
t442 = t513 * t894 + t890 * t994;
t437 = -t475 * t889 + t518 * t893;
t436 = t475 * t893 + t518 * t889;
t435 = -t466 * t888 + t530 * t892;
t434 = -t465 * t888 + t529 * t892;
t432 = -t460 * t889 + t517 * t893;
t431 = t460 * t893 + t517 * t889;
t430 = -t509 * t891 + t895 * t996;
t428 = t501 * t894 + t890 * t999;
t427 = -t505 * t891 + t895 * t998;
t426 = t505 * t895 + t891 * t998;
t425 = -t471 * t888 + t536 * t892 + (-t702 * t891 - t703 * t895) * qJ(2);
t422 = -t498 * t888 + t526 * t892 + (-t624 * t891 - t626 * t895) * qJ(2);
t421 = -t497 * t888 + t525 * t892 + (-t623 * t891 - t625 * t895) * qJ(2);
t418 = -t451 * t889 + t504 * t893;
t417 = t451 * t893 + t504 * t889;
t414 = t1001 * t895 - t486 * t891;
t406 = -t445 * t888 + t483 * t892;
t405 = -t444 * t888 + t482 * t892;
t398 = -pkin(1) * t624 - t496 * t891 + t895 * t926;
t397 = -pkin(1) * t623 - t495 * t891 + t895 * t927;
t395 = t1002 * t895 - t464 * t891;
t394 = t1003 * t895 - t463 * t891;
t393 = t1004 * t895 - t457 * t891;
t392 = t1004 * t891 + t457 * t895;
t390 = -pkin(1) * t702 - t470 * t891 + t895 * t928;
t389 = -t429 * t888 + t467 * t892;
t386 = -t427 * t889 + t454 * t893;
t385 = t427 * t893 + t454 * t889;
t383 = pkin(2) * t555 + t484 * t894 + t890 * t941;
t377 = pkin(2) * t458 + t531 * t894 + t890 * t916;
t375 = pkin(2) * t548 + t480 * t894 + t890 * t942;
t374 = t503 * t892 - t519 * t888 + (-t474 * t891 - t475 * t895) * qJ(2);
t372 = -pkin(1) * t474 - t520 * t891 + t895 * t925;
t371 = t1005 * t895 - t443 * t891;
t370 = t1006 * t895 - t442 * t891;
t369 = t1007 * t895 - t440 * t891;
t368 = t1007 * t891 + t440 * t895;
t367 = t1008 * t895 - t438 * t891;
t366 = t1008 * t891 + t438 * t895;
t362 = -t393 * t889 + t433 * t893;
t361 = t393 * t893 + t433 * t889;
t359 = t1009 * t895 - t428 * t891;
t357 = t1010 * t895 - t419 * t891;
t356 = t1010 * t891 + t419 * t895;
t348 = -t369 * t889 + t401 * t893;
t347 = t369 * t893 + t401 * t889;
t345 = -t367 * t889 + t396 * t893;
t344 = t367 * t893 + t396 * t889;
t339 = pkin(2) * t506 + t387 * t894 + t890 * t943;
t338 = -t384 * t888 + t407 * t892 + (-t459 * t891 - t460 * t895) * qJ(2);
t337 = -t357 * t889 + t382 * t893;
t336 = t357 * t893 + t382 * t889;
t334 = -t376 * t888 + t399 * t892 + (-t450 * t891 - t451 * t895) * qJ(2);
t332 = -pkin(1) * t459 - t383 * t891 + t895 * t929;
t329 = -pkin(1) * t450 - t375 * t891 + t895 * t931;
t328 = t1012 * t895 - t363 * t891;
t327 = t1012 * t891 + t363 * t895;
t324 = -t378 * t888 + t381 * t892 + (-t392 * t891 - t393 * t895) * qJ(2);
t323 = -pkin(1) * t392 - t377 * t891 + t895 * t930;
t320 = pkin(2) * t441 + t351 * t894 + t890 * t945;
t319 = -t340 * t888 + t358 * t892 + (-t426 * t891 - t427 * t895) * qJ(2);
t317 = pkin(2) * t439 + t350 * t894 + t890 * t946;
t315 = -t328 * t889 + t346 * t893;
t314 = t328 * t893 + t346 * t889;
t311 = pkin(2) * t364 + t360 * t894 + t890 * t944;
t308 = pkin(2) * t420 + t341 * t894 + t890 * t947;
t306 = -pkin(1) * t426 - t339 * t891 + t895 * t932;
t305 = t1014 * t895 - t325 * t891;
t304 = t1014 * t891 + t325 * t895;
t303 = -t321 * t888 + t331 * t892 + (-t368 * t891 - t369 * t895) * qJ(2);
t302 = -t318 * t888 + t330 * t892 + (-t366 * t891 - t367 * t895) * qJ(2);
t301 = -t309 * t888 + t322 * t892 + (-t356 * t891 - t357 * t895) * qJ(2);
t300 = -pkin(1) * t368 - t320 * t891 + t895 * t933;
t299 = -t305 * t889 + t313 * t893;
t298 = t305 * t893 + t313 * t889;
t297 = -pkin(1) * t366 - t317 * t891 + t895 * t934;
t295 = -t312 * t888 + t316 * t892 + (-t327 * t891 - t328 * t895) * qJ(2);
t294 = -pkin(1) * t356 - t308 * t891 + t895 * t936;
t292 = pkin(2) * t326 + t307 * t894 + t890 * t948;
t291 = -pkin(1) * t327 - t311 * t891 + t895 * t935;
t290 = -t293 * t888 + t296 * t892 + (-t304 * t891 - t305 * t895) * qJ(2);
t289 = -pkin(1) * t304 - t292 * t891 + t895 * t937;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t809, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, 0, 0, 0, 0, 0, 0, t708, t707, 0, t437, 0, 0, 0, 0, 0, 0, t568, t569, t645, t362, 0, 0, 0, 0, 0, 0, t418, t432, t386, t315, 0, 0, 0, 0, 0, 0, t345, t348, t337, t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t808, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, 0, 0, 0, 0, 0, 0, t706, -t1088, 0, t436, 0, 0, 0, 0, 0, 0, t566, t567, t644, t361, 0, 0, 0, 0, 0, 0, t417, t431, t385, t314, 0, 0, 0, 0, 0, 0, t344, t347, t336, t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1041, 0, 0, 0, 0, 0, 0, 0, 0, 0, t692, 0, 0, 0, 0, 0, 0, t763, -t1074, 0, t474, 0, 0, 0, 0, 0, 0, t623, t624, t702, t392, 0, 0, 0, 0, 0, 0, t450, t459, t426, t327, 0, 0, 0, 0, 0, 0, t366, t368, t356, t304; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1076, -t1075, -t808, -qJ(1) * t808, 0, 0, 0, 0, 0, 0, -t889 * t737 - t893 * t921, -t889 * t736 - t893 * t918, -t715 * t889 + t718 * t893, -qJ(1) * t619 + t602 * t893 - t621 * t889, 0, 0, -t707, 0, t708, t1025 * t893 - t832 * t889, -qJ(1) * t706 - t493 * t889 + t537 * t893, qJ(1) * t1088 - t494 * t889 + t538 * t893, -t481 * t889 + t535 * t893, -qJ(1) * t436 - t372 * t889 + t374 * t893, -t643 * t889 + t701 * t893, -t606 * t889 + t667 * t893, -t641 * t889 + t699 * t893, -t642 * t889 + t700 * t893, -t640 * t889 + t698 * t893, -t714 * t889 + t767 * t893, -qJ(1) * t566 - t397 * t889 + t421 * t893, -qJ(1) * t567 - t398 * t889 + t422 * t893, -qJ(1) * t644 - t390 * t889 + t425 * t893, -qJ(1) * t361 - t323 * t889 + t324 * t893, -t473 * t889 + t524 * t893, -t430 * t889 + t456 * t893, -t468 * t889 + t521 * t893, -t472 * t889 + t523 * t893, -t469 * t889 + t522 * t893, -t527 * t889 + t572 * t893, -qJ(1) * t417 - t329 * t889 + t334 * t893, -qJ(1) * t431 - t332 * t889 + t338 * t893, -qJ(1) * t385 - t306 * t889 + t319 * t893, -qJ(1) * t314 - t291 * t889 + t295 * t893, -t395 * t889 + t435 * t893, -t359 * t889 + t389 * t893, -t370 * t889 + t405 * t893, -t394 * t889 + t434 * t893, -t371 * t889 + t406 * t893, -t414 * t889 + t447 * t893, -qJ(1) * t344 - t297 * t889 + t302 * t893, -qJ(1) * t347 - t300 * t889 + t303 * t893, -qJ(1) * t336 - t294 * t889 + t301 * t893, -qJ(1) * t298 - t289 * t889 + t290 * t893; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1075, -t1076, t809, qJ(1) * t809, 0, 0, 0, 0, 0, 0, t893 * t737 - t889 * t921, t893 * t736 - t889 * t918, t715 * t893 + t718 * t889, qJ(1) * t620 + t602 * t889 + t621 * t893, 0, 0, t1088, 0, t706, t1025 * t889 + t832 * t893, qJ(1) * t708 + t493 * t893 + t537 * t889, qJ(1) * t707 + t494 * t893 + t538 * t889, t481 * t893 + t535 * t889, qJ(1) * t437 + t372 * t893 + t374 * t889, t643 * t893 + t701 * t889, t606 * t893 + t667 * t889, t641 * t893 + t699 * t889, t642 * t893 + t700 * t889, t640 * t893 + t698 * t889, t714 * t893 + t767 * t889, qJ(1) * t568 + t397 * t893 + t421 * t889, qJ(1) * t569 + t398 * t893 + t422 * t889, qJ(1) * t645 + t390 * t893 + t425 * t889, qJ(1) * t362 + t323 * t893 + t324 * t889, t473 * t893 + t524 * t889, t430 * t893 + t456 * t889, t468 * t893 + t521 * t889, t472 * t893 + t523 * t889, t469 * t893 + t522 * t889, t527 * t893 + t572 * t889, qJ(1) * t418 + t329 * t893 + t334 * t889, qJ(1) * t432 + t332 * t893 + t338 * t889, qJ(1) * t386 + t306 * t893 + t319 * t889, qJ(1) * t315 + t291 * t893 + t295 * t889, t395 * t893 + t435 * t889, t359 * t893 + t389 * t889, t370 * t893 + t405 * t889, t394 * t893 + t434 * t889, t371 * t893 + t406 * t889, t414 * t893 + t447 * t889, qJ(1) * t345 + t297 * t893 + t302 * t889, qJ(1) * t348 + t300 * t893 + t303 * t889, qJ(1) * t337 + t294 * t893 + t301 * t889, qJ(1) * t299 + t289 * t893 + t290 * t889; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1023, t862, 0, 0, 0, 0, 0, 0, 0, 0, t1032 * t1043 + t895 * (t1018 * t892 + t847), -t888 * t919 - t1042, t909 * t891, pkin(1) * t693 + t1070 * t891, 0, 0, t1074, 0, t763, (-t1043 * t890 + t894 * t895) * qJDD(3), pkin(1) * t766 + t613 * t895 + t891 * t923, -pkin(1) * t764 + t612 * t895 + t891 * t924, t600 * t895 + t891 * t979, pkin(1) * t475 + t520 * t895 + t891 * t925, t745 * t895 + t891 * t966, t720 * t895 + t891 * t972, t741 * t895 + t891 * t968, t744 * t895 + t891 * t967, t740 * t895 + t891 * t969, t806 * t895 + t891 * t963, pkin(1) * t625 + t495 * t895 + t891 * t927, pkin(1) * t626 + t496 * t895 + t891 * t926, pkin(1) * t703 + t470 * t895 + t891 * t928, pkin(1) * t393 + t377 * t895 + t891 * t930, t557 * t895 + t891 * t986, t509 * t895 + t891 * t996, t562 * t895 + t891 * t985, t556 * t895 + t891 * t987, t563 * t895 + t891 * t984, t627 * t895 + t891 * t978, pkin(1) * t451 + t375 * t895 + t891 * t931, pkin(1) * t460 + t383 * t895 + t891 * t929, pkin(1) * t427 + t339 * t895 + t891 * t932, pkin(1) * t328 + t311 * t895 + t891 * t935, t1002 * t891 + t464 * t895, t1009 * t891 + t428 * t895, t1006 * t891 + t442 * t895, t1003 * t891 + t463 * t895, t1005 * t891 + t443 * t895, t1001 * t891 + t486 * t895, pkin(1) * t367 + t317 * t895 + t891 * t934, pkin(1) * t369 + t320 * t895 + t891 * t933, pkin(1) * t357 + t308 * t895 + t891 * t936, pkin(1) * t305 + t292 * t895 + t891 * t937;];
tauB_reg  = t1;
