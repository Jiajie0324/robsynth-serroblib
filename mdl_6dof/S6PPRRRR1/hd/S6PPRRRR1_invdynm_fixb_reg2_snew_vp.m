% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PPRRRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PPRRRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:41:36
% EndTime: 2019-05-04 20:42:35
% DurationCPUTime: 63.36s
% Computational Cost: add. (632688->1071), mult. (1184505->1711), div. (0->0), fcn. (960714->16), ass. (0->769)
t1709 = cos(pkin(13));
t1705 = sin(pkin(13));
t1706 = sin(pkin(12));
t1710 = cos(pkin(12));
t1867 = t1710 * g(1) + t1706 * g(2);
t1665 = t1705 * t1867;
t1708 = sin(pkin(6));
t1712 = cos(pkin(6));
t1852 = g(1) * t1706 - t1710 * g(2);
t1838 = t1712 * t1852;
t1897 = g(3) - qJDD(1);
t1731 = -t1708 * t1897 + t1838;
t1729 = t1709 * t1731 + t1665;
t1727 = t1709 * t1729;
t1707 = sin(pkin(7));
t1717 = sin(qJ(3));
t1721 = cos(qJ(3));
t1903 = qJD(3) ^ 2;
t1776 = qJDD(3) * t1717 + t1721 * t1903;
t1655 = t1776 * t1707;
t1711 = cos(pkin(7));
t1657 = t1776 * t1711;
t1676 = qJDD(3) * t1721 - t1717 * t1903;
t1779 = t1657 * t1709 + t1676 * t1705;
t1584 = -t1655 * t1708 + t1712 * t1779;
t1614 = t1657 * t1705 - t1676 * t1709;
t1919 = t1584 * t1706 + t1614 * t1710;
t1918 = t1584 * t1710 - t1614 * t1706;
t1714 = sin(qJ(6));
t1715 = sin(qJ(5));
t1716 = sin(qJ(4));
t1719 = cos(qJ(5));
t1720 = cos(qJ(4));
t1663 = (t1715 * t1720 + t1716 * t1719) * qJD(3);
t1718 = cos(qJ(6));
t1869 = qJD(4) + qJD(5);
t1629 = t1663 * t1714 - t1718 * t1869;
t1631 = t1718 * t1663 + t1714 * t1869;
t1589 = t1631 * t1629;
t1893 = qJD(3) * t1720;
t1692 = qJD(4) * t1893;
t1865 = t1716 * qJDD(3);
t1672 = t1692 + t1865;
t1696 = t1720 * qJDD(3);
t1894 = qJD(3) * t1716;
t1856 = qJD(4) * t1894;
t1673 = t1696 - t1856;
t1848 = t1715 * t1672 - t1719 * t1673;
t1591 = -t1663 * qJD(5) - t1848;
t1590 = qJDD(6) - t1591;
t1907 = -t1589 + t1590;
t1915 = t1714 * t1907;
t1661 = t1715 * t1894 - t1719 * t1893;
t1620 = t1663 * t1661;
t1702 = qJDD(4) + qJDD(5);
t1906 = -t1620 + t1702;
t1914 = t1715 * t1906;
t1913 = t1718 * t1907;
t1912 = t1719 * t1906;
t1592 = -qJD(5) * t1661 + t1672 * t1719 + t1673 * t1715;
t1652 = t1869 * t1661;
t1911 = t1592 - t1652;
t1864 = t1708 * t1852 - qJDD(2);
t1771 = t1712 * t1897 + t1864;
t1910 = -t1707 * t1771 + t1711 * t1729;
t1863 = t1869 ^ 2;
t1909 = t1706 * t1897;
t1908 = t1710 * t1897;
t1748 = t1712 * t1771;
t1558 = t1707 * t1729 + t1711 * t1771;
t1730 = t1705 * t1731;
t1604 = -t1709 * t1867 + t1730;
t1510 = t1721 * t1604 + t1717 * t1910;
t1724 = -pkin(3) * t1903 + qJDD(3) * pkin(9) + t1510;
t1442 = -t1716 * t1558 + t1720 * t1724;
t1682 = qJD(4) * pkin(4) - pkin(10) * t1894;
t1902 = t1720 ^ 2;
t1698 = t1902 * t1903;
t1421 = -pkin(4) * t1698 + pkin(10) * t1673 - qJD(4) * t1682 + t1442;
t1441 = t1720 * t1558 + t1716 * t1724;
t1687 = t1716 * t1903 * t1720;
t1680 = qJDD(4) + t1687;
t1723 = -t1441 + (-t1672 + t1692) * pkin(10) + t1680 * pkin(4);
t1354 = t1719 * t1421 + t1715 * t1723;
t1616 = pkin(5) * t1661 - pkin(11) * t1663;
t1347 = -pkin(5) * t1863 + t1702 * pkin(11) - t1661 * t1616 + t1354;
t1509 = t1717 * t1604 - t1721 * t1910;
t1506 = -qJDD(3) * pkin(3) - pkin(9) * t1903 + t1509;
t1467 = -t1673 * pkin(4) - pkin(10) * t1698 + t1682 * t1894 + t1506;
t1851 = t1663 * t1869;
t1395 = -t1911 * pkin(11) + (-t1591 + t1851) * pkin(5) + t1467;
t1283 = t1347 * t1714 - t1718 * t1395;
t1284 = t1347 * t1718 + t1395 * t1714;
t1228 = t1714 * t1283 + t1718 * t1284;
t1905 = -t1706 * t1852 - t1710 * t1867;
t1581 = t1655 * t1712 + t1708 * t1779;
t1904 = -t1706 * t1867 + t1710 * t1852;
t1627 = t1629 ^ 2;
t1628 = t1631 ^ 2;
t1654 = qJD(6) + t1661;
t1653 = t1654 ^ 2;
t1659 = t1661 ^ 2;
t1660 = t1663 ^ 2;
t1353 = t1421 * t1715 - t1719 * t1723;
t1262 = -t1353 * t1719 + t1354 * t1715;
t1901 = pkin(4) * t1262;
t1573 = t1592 + t1652;
t1768 = qJD(4) * t1663 - t1848;
t1482 = -t1573 * t1719 + t1715 * t1768;
t1900 = pkin(4) * t1482;
t1899 = pkin(5) * t1715;
t1413 = t1509 * t1717 + t1510 * t1721;
t1898 = pkin(8) * t1413;
t1535 = -t1705 * t1665 + (t1604 - t1730) * t1709;
t1896 = qJ(2) * t1535;
t1895 = qJD(3) * qJD(4);
t1703 = t1716 ^ 2;
t1892 = t1903 * t1703;
t1891 = t1262 * t1716;
t1890 = t1262 * t1720;
t1889 = t1467 * t1715;
t1888 = t1467 * t1719;
t1887 = t1506 * t1716;
t1886 = t1506 * t1720;
t1523 = t1589 + t1590;
t1885 = t1523 * t1714;
t1884 = t1523 * t1718;
t1611 = t1620 + t1702;
t1883 = t1611 * t1715;
t1882 = t1611 * t1719;
t1881 = t1654 * t1714;
t1880 = t1654 * t1718;
t1877 = t1680 * t1716;
t1681 = qJDD(4) - t1687;
t1876 = t1681 * t1716;
t1875 = t1681 * t1720;
t1874 = t1708 * t1604;
t1873 = t1708 * t1709;
t1872 = t1712 * t1604;
t1346 = -t1702 * pkin(5) - pkin(11) * t1863 + t1616 * t1663 + t1353;
t1343 = t1714 * t1346;
t1871 = t1717 * t1558;
t1344 = t1718 * t1346;
t1870 = t1721 * t1558;
t1868 = -pkin(5) * t1346 + pkin(11) * t1228;
t1866 = t1707 * qJDD(3);
t1862 = t1703 + t1902;
t1861 = -pkin(5) * t1719 - pkin(4);
t1860 = t1715 * t1589;
t1859 = t1719 * t1589;
t1858 = t1717 * t1620;
t1857 = t1721 * t1620;
t1580 = -t1628 - t1653;
t1462 = -t1580 * t1714 - t1884;
t1785 = -t1592 * t1718 - t1702 * t1714;
t1502 = (qJD(6) + t1654) * t1629 + t1785;
t1855 = pkin(5) * t1502 + pkin(11) * t1462 + t1343;
t1557 = -t1653 - t1627;
t1459 = t1557 * t1718 - t1915;
t1849 = -t1592 * t1714 + t1718 * t1702;
t1538 = -qJD(6) * t1631 + t1849;
t1601 = t1631 * t1654;
t1499 = t1538 - t1601;
t1854 = pkin(5) * t1499 + pkin(11) * t1459 - t1344;
t1853 = t1705 * t1866;
t1263 = t1353 * t1715 + t1719 * t1354;
t1359 = t1441 * t1716 + t1720 * t1442;
t1847 = t1717 * t1687;
t1846 = t1721 * t1687;
t1498 = (-qJD(6) + t1654) * t1631 + t1849;
t1539 = -qJD(6) * t1629 - t1785;
t1600 = t1654 * t1629;
t1501 = t1539 + t1600;
t1407 = t1498 * t1718 + t1501 * t1714;
t1541 = t1627 + t1628;
t1845 = pkin(5) * t1541 + pkin(11) * t1407 + t1228;
t1206 = t1228 * t1715 - t1346 * t1719;
t1844 = pkin(4) * t1206 + t1868;
t1643 = -t1660 - t1863;
t1574 = t1643 * t1719 - t1883;
t1843 = pkin(4) * t1574 - t1354;
t1842 = t1715 * t1851;
t1841 = t1715 * t1652;
t1840 = t1719 * t1851;
t1839 = t1719 * t1652;
t1358 = t1441 * t1720 - t1442 * t1716;
t1675 = t1862 * qJDD(3);
t1678 = t1698 + t1892;
t1624 = t1675 * t1721 - t1678 * t1717;
t1837 = pkin(8) * t1624 + t1358 * t1717;
t1836 = -pkin(8) * t1676 - t1871;
t1835 = -pkin(8) * t1776 + t1870;
t1207 = t1228 * t1719 + t1346 * t1715;
t1153 = t1206 * t1720 + t1207 * t1716;
t1154 = -t1206 * t1716 + t1207 * t1720;
t1227 = -t1283 * t1718 + t1284 * t1714;
t1833 = t1154 * t1717 - t1227 * t1721;
t1129 = -t1707 * t1153 + t1711 * t1833;
t1146 = t1154 * t1721 + t1227 * t1717;
t1834 = t1129 * t1709 + t1146 * t1705;
t1216 = t1263 * t1716 + t1890;
t1217 = t1263 * t1720 - t1891;
t1831 = t1217 * t1717 - t1467 * t1721;
t1162 = -t1707 * t1216 + t1711 * t1831;
t1212 = t1217 * t1721 + t1467 * t1717;
t1832 = t1162 * t1709 + t1212 * t1705;
t1373 = t1407 * t1715 + t1541 * t1719;
t1374 = t1407 * t1719 - t1541 * t1715;
t1298 = t1373 * t1720 + t1374 * t1716;
t1299 = -t1373 * t1716 + t1374 * t1720;
t1405 = t1498 * t1714 - t1501 * t1718;
t1820 = t1299 * t1717 - t1405 * t1721;
t1223 = -t1707 * t1298 + t1711 * t1820;
t1256 = t1299 * t1721 + t1405 * t1717;
t1830 = t1223 * t1709 + t1256 * t1705;
t1500 = t1539 - t1600;
t1408 = t1499 * t1718 - t1500 * t1714;
t1588 = t1628 - t1627;
t1382 = t1408 * t1715 - t1588 * t1719;
t1383 = t1408 * t1719 + t1588 * t1715;
t1311 = t1382 * t1720 + t1383 * t1716;
t1312 = -t1382 * t1716 + t1383 * t1720;
t1406 = t1499 * t1714 + t1500 * t1718;
t1819 = t1312 * t1717 - t1406 * t1721;
t1233 = -t1707 * t1311 + t1711 * t1819;
t1268 = t1312 * t1721 + t1406 * t1717;
t1829 = t1233 * t1709 + t1268 * t1705;
t1386 = t1459 * t1715 + t1499 * t1719;
t1387 = t1459 * t1719 - t1499 * t1715;
t1317 = t1386 * t1720 + t1387 * t1716;
t1318 = -t1386 * t1716 + t1387 * t1720;
t1458 = t1557 * t1714 + t1913;
t1817 = t1318 * t1717 - t1458 * t1721;
t1240 = -t1707 * t1317 + t1711 * t1817;
t1285 = t1318 * t1721 + t1458 * t1717;
t1828 = t1240 * t1709 + t1285 * t1705;
t1389 = t1462 * t1715 + t1502 * t1719;
t1390 = t1462 * t1719 - t1502 * t1715;
t1321 = t1389 * t1720 + t1390 * t1716;
t1322 = -t1389 * t1716 + t1390 * t1720;
t1461 = t1580 * t1718 - t1885;
t1815 = t1322 * t1717 - t1461 * t1721;
t1242 = -t1707 * t1321 + t1711 * t1815;
t1286 = t1322 * t1721 + t1461 * t1717;
t1827 = t1242 * t1709 + t1286 * t1705;
t1599 = -t1628 + t1653;
t1476 = -t1599 * t1714 + t1913;
t1396 = t1476 * t1715 - t1501 * t1719;
t1398 = t1476 * t1719 + t1501 * t1715;
t1323 = t1396 * t1720 + t1398 * t1716;
t1325 = -t1396 * t1716 + t1398 * t1720;
t1474 = t1599 * t1718 + t1915;
t1814 = t1325 * t1717 - t1474 * t1721;
t1245 = -t1707 * t1323 + t1711 * t1814;
t1290 = t1325 * t1721 + t1474 * t1717;
t1826 = t1245 * t1709 + t1290 * t1705;
t1598 = t1627 - t1653;
t1477 = t1598 * t1718 - t1885;
t1497 = -t1538 - t1601;
t1397 = t1477 * t1715 + t1497 * t1719;
t1399 = t1477 * t1719 - t1497 * t1715;
t1324 = t1397 * t1720 + t1399 * t1716;
t1326 = -t1397 * t1716 + t1399 * t1720;
t1475 = t1598 * t1714 + t1884;
t1813 = t1326 * t1717 - t1475 * t1721;
t1246 = -t1707 * t1324 + t1711 * t1813;
t1291 = t1326 * t1721 + t1475 * t1717;
t1825 = t1246 * t1709 + t1291 * t1705;
t1812 = t1359 * t1717 - t1506 * t1721;
t1259 = t1358 * t1707 + t1711 * t1812;
t1339 = t1359 * t1721 + t1506 * t1717;
t1824 = t1259 * t1709 + t1339 * t1705;
t1488 = -t1538 * t1714 + t1629 * t1880;
t1443 = t1488 * t1715 + t1859;
t1445 = t1488 * t1719 - t1860;
t1363 = t1443 * t1720 + t1445 * t1716;
t1365 = -t1443 * t1716 + t1445 * t1720;
t1487 = -t1718 * t1538 - t1629 * t1881;
t1810 = t1365 * t1717 + t1487 * t1721;
t1266 = -t1707 * t1363 + t1711 * t1810;
t1340 = t1365 * t1721 - t1487 * t1717;
t1823 = t1266 * t1709 + t1340 * t1705;
t1490 = t1539 * t1718 - t1631 * t1881;
t1444 = t1490 * t1715 - t1859;
t1446 = t1490 * t1719 + t1860;
t1364 = t1444 * t1720 + t1446 * t1716;
t1366 = -t1444 * t1716 + t1446 * t1720;
t1489 = t1539 * t1714 + t1631 * t1880;
t1809 = t1366 * t1717 - t1489 * t1721;
t1267 = -t1707 * t1364 + t1711 * t1809;
t1341 = t1366 * t1721 + t1489 * t1717;
t1822 = t1267 * t1709 + t1341 * t1705;
t1532 = (-t1629 * t1718 + t1631 * t1714) * t1654;
t1478 = t1532 * t1715 - t1590 * t1719;
t1479 = t1532 * t1719 + t1590 * t1715;
t1391 = t1478 * t1720 + t1479 * t1716;
t1392 = -t1478 * t1716 + t1479 * t1720;
t1531 = (-t1629 * t1714 - t1631 * t1718) * t1654;
t1802 = t1392 * t1717 - t1531 * t1721;
t1295 = -t1707 * t1391 + t1711 * t1802;
t1362 = t1392 * t1721 + t1531 * t1717;
t1821 = t1295 * t1709 + t1362 * t1705;
t1484 = t1573 * t1715 + t1719 * t1768;
t1401 = t1482 * t1720 + t1484 * t1716;
t1403 = -t1482 * t1716 + t1484 * t1720;
t1594 = -t1659 - t1660;
t1800 = t1403 * t1717 - t1594 * t1721;
t1316 = -t1707 * t1401 + t1711 * t1800;
t1379 = t1403 * t1721 + t1594 * t1717;
t1818 = t1316 * t1709 + t1379 * t1705;
t1568 = (0.2e1 * qJD(5) + qJD(4)) * t1663 + t1848;
t1481 = -t1568 * t1715 + t1719 * t1911;
t1483 = -t1568 * t1719 - t1715 * t1911;
t1400 = t1481 * t1720 + t1483 * t1716;
t1402 = -t1481 * t1716 + t1483 * t1720;
t1619 = t1660 - t1659;
t1801 = t1402 * t1717 - t1619 * t1721;
t1320 = -t1707 * t1400 + t1711 * t1801;
t1380 = t1402 * t1721 + t1619 * t1717;
t1816 = t1320 * t1709 + t1380 * t1705;
t1605 = -t1863 - t1659;
t1542 = t1605 * t1715 + t1912;
t1543 = t1605 * t1719 - t1914;
t1465 = t1542 * t1720 + t1543 * t1716;
t1466 = -t1542 * t1716 + t1543 * t1720;
t1797 = t1466 * t1717 - t1568 * t1721;
t1361 = -t1707 * t1465 + t1711 * t1797;
t1417 = t1466 * t1721 + t1568 * t1717;
t1811 = t1361 * t1709 + t1417 * t1705;
t1575 = -t1643 * t1715 - t1882;
t1485 = t1574 * t1720 + t1575 * t1716;
t1486 = -t1574 * t1716 + t1575 * t1720;
t1796 = t1486 * t1717 - t1721 * t1911;
t1368 = -t1707 * t1485 + t1711 * t1796;
t1431 = t1486 * t1721 + t1717 * t1911;
t1808 = t1368 * t1709 + t1431 * t1705;
t1548 = t1719 * t1591 + t1841;
t1549 = -t1715 * t1591 + t1839;
t1468 = t1548 * t1720 + t1549 * t1716;
t1470 = -t1548 * t1716 + t1549 * t1720;
t1770 = t1470 * t1717 + t1857;
t1371 = -t1468 * t1707 + t1711 * t1770;
t1447 = t1470 * t1721 - t1858;
t1807 = t1371 * t1709 + t1447 * t1705;
t1550 = t1715 * t1592 + t1840;
t1551 = t1719 * t1592 - t1842;
t1469 = t1550 * t1720 + t1551 * t1716;
t1471 = -t1550 * t1716 + t1551 * t1720;
t1769 = t1471 * t1717 - t1857;
t1372 = -t1469 * t1707 + t1711 * t1769;
t1448 = t1471 * t1721 + t1858;
t1806 = t1372 * t1709 + t1448 * t1705;
t1648 = -t1660 + t1863;
t1576 = t1648 * t1719 + t1914;
t1578 = -t1648 * t1715 + t1912;
t1491 = t1576 * t1720 + t1578 * t1716;
t1493 = -t1576 * t1716 + t1578 * t1720;
t1795 = t1493 * t1717 - t1573 * t1721;
t1377 = -t1707 * t1491 + t1711 * t1795;
t1438 = t1493 * t1721 + t1573 * t1717;
t1805 = t1377 * t1709 + t1438 * t1705;
t1647 = t1659 - t1863;
t1577 = t1647 * t1715 + t1882;
t1579 = t1647 * t1719 - t1883;
t1492 = t1577 * t1720 + t1579 * t1716;
t1494 = -t1577 * t1716 + t1579 * t1720;
t1794 = t1494 * t1717 - t1721 * t1768;
t1378 = -t1707 * t1492 + t1711 * t1794;
t1439 = t1494 * t1721 + t1717 * t1768;
t1804 = t1378 * t1709 + t1439 * t1705;
t1412 = t1509 * t1721 - t1510 * t1717;
t1385 = -t1412 * t1711 + t1707 * t1558;
t1803 = t1385 * t1709 + t1413 * t1705;
t1410 = t1413 * t1711;
t1799 = t1410 * t1709 + t1412 * t1705;
t1596 = -t1841 - t1840;
t1597 = -t1839 + t1842;
t1525 = t1596 * t1720 + t1597 * t1716;
t1526 = -t1596 * t1716 + t1597 * t1720;
t1793 = t1526 * t1717 - t1702 * t1721;
t1437 = -t1707 * t1525 + t1711 * t1793;
t1519 = t1526 * t1721 + t1702 * t1717;
t1798 = t1437 * t1709 + t1519 * t1705;
t1671 = 0.2e1 * t1692 + t1865;
t1674 = t1696 - 0.2e1 * t1856;
t1621 = t1671 * t1720 + t1674 * t1716;
t1622 = -t1671 * t1716 + t1674 * t1720;
t1679 = -t1698 + t1892;
t1783 = t1622 * t1717 - t1679 * t1721;
t1537 = -t1707 * t1621 + t1711 * t1783;
t1593 = t1622 * t1721 + t1679 * t1717;
t1792 = t1537 * t1709 + t1593 * t1705;
t1670 = t1720 * t1680;
t1722 = qJD(4) ^ 2;
t1686 = -t1698 - t1722;
t1636 = t1686 * t1716 + t1670;
t1640 = t1686 * t1720 - t1877;
t1781 = t1640 * t1717 + t1674 * t1721;
t1546 = -t1636 * t1707 + t1711 * t1781;
t1602 = t1640 * t1721 - t1674 * t1717;
t1791 = t1546 * t1709 + t1602 * t1705;
t1684 = -t1722 - t1892;
t1638 = t1684 * t1720 - t1876;
t1642 = -t1684 * t1716 - t1875;
t1780 = t1642 * t1717 - t1671 * t1721;
t1547 = -t1638 * t1707 + t1711 * t1780;
t1603 = t1642 * t1721 + t1671 * t1717;
t1790 = t1547 * t1709 + t1603 * t1705;
t1685 = t1698 - t1722;
t1635 = t1685 * t1716 + t1875;
t1639 = t1685 * t1720 - t1876;
t1767 = t1639 * t1717 - t1696 * t1721;
t1561 = -t1635 * t1707 + t1711 * t1767;
t1606 = t1639 * t1721 + t1696 * t1717;
t1789 = t1561 * t1709 + t1606 * t1705;
t1683 = t1722 - t1892;
t1637 = t1683 * t1720 + t1877;
t1641 = -t1683 * t1716 + t1670;
t1766 = t1641 * t1717 - t1721 * t1865;
t1562 = -t1637 * t1707 + t1711 * t1766;
t1607 = t1641 * t1721 + t1717 * t1865;
t1788 = t1562 * t1709 + t1607 * t1705;
t1633 = (t1673 - t1856) * t1720;
t1644 = -t1673 * t1716 - t1895 * t1902;
t1764 = t1644 * t1717 - t1846;
t1565 = -t1633 * t1707 + t1711 * t1764;
t1608 = t1644 * t1721 + t1847;
t1787 = t1565 * t1709 + t1608 * t1705;
t1634 = (t1672 + t1692) * t1716;
t1645 = t1672 * t1720 - t1703 * t1895;
t1763 = t1645 * t1717 + t1846;
t1566 = -t1634 * t1707 + t1711 * t1763;
t1609 = t1645 * t1721 - t1847;
t1786 = t1566 * t1709 + t1609 * t1705;
t1777 = t1675 * t1717 + t1678 * t1721;
t1618 = t1777 * t1711;
t1784 = t1618 * t1709 + t1624 * t1705;
t1669 = t1862 * t1895;
t1775 = -qJDD(4) * t1721 + t1669 * t1717;
t1626 = t1775 * t1711;
t1646 = qJDD(4) * t1717 + t1669 * t1721;
t1782 = t1626 * t1709 + t1646 * t1705;
t1658 = t1676 * t1711;
t1778 = t1658 * t1709 - t1705 * t1776;
t1774 = pkin(4) * t1389 + t1855;
t1773 = pkin(4) * t1386 + t1854;
t1772 = pkin(4) * t1542 - t1353;
t1765 = pkin(4) * t1373 + t1845;
t1140 = pkin(10) * t1207 + (-pkin(11) * t1715 + t1861) * t1227;
t1148 = -pkin(10) * t1206 + (-pkin(11) * t1719 + t1899) * t1227;
t1114 = -pkin(9) * t1153 - t1140 * t1716 + t1148 * t1720;
t1138 = -pkin(3) * t1153 - t1844;
t1762 = pkin(8) * t1146 + t1114 * t1717 + t1138 * t1721;
t1215 = -pkin(11) * t1405 - t1227;
t1181 = pkin(10) * t1374 + t1215 * t1715 + t1405 * t1861;
t1187 = -pkin(10) * t1373 + t1215 * t1719 + t1405 * t1899;
t1145 = -pkin(9) * t1298 - t1181 * t1716 + t1187 * t1720;
t1174 = -pkin(3) * t1298 - t1765;
t1761 = pkin(8) * t1256 + t1145 * t1717 + t1174 * t1721;
t1253 = -pkin(5) * t1458 + t1283;
t1296 = -pkin(11) * t1458 + t1343;
t1204 = -pkin(4) * t1458 + pkin(10) * t1387 + t1253 * t1719 + t1296 * t1715;
t1213 = -pkin(10) * t1386 - t1253 * t1715 + t1296 * t1719;
t1151 = -pkin(9) * t1317 - t1204 * t1716 + t1213 * t1720;
t1220 = -pkin(3) * t1317 - t1773;
t1760 = pkin(8) * t1285 + t1151 * t1717 + t1220 * t1721;
t1254 = -pkin(5) * t1461 + t1284;
t1300 = -pkin(11) * t1461 + t1344;
t1208 = -pkin(4) * t1461 + pkin(10) * t1390 + t1254 * t1719 + t1300 * t1715;
t1214 = -pkin(10) * t1389 - t1254 * t1715 + t1300 * t1719;
t1152 = -pkin(9) * t1321 - t1208 * t1716 + t1214 * t1720;
t1221 = -pkin(3) * t1321 - t1774;
t1759 = pkin(8) * t1286 + t1152 * t1717 + t1221 * t1721;
t1249 = -pkin(4) * t1467 + pkin(10) * t1263;
t1163 = -pkin(9) * t1216 - pkin(10) * t1890 - t1249 * t1716;
t1180 = -pkin(3) * t1216 - t1901;
t1758 = pkin(8) * t1212 + t1163 * t1717 + t1180 * t1721;
t1247 = -pkin(4) * t1594 + pkin(10) * t1484 + t1263;
t1250 = -pkin(10) * t1482 - t1262;
t1191 = -pkin(9) * t1401 - t1247 * t1716 + t1250 * t1720;
t1355 = -pkin(3) * t1401 - t1900;
t1757 = pkin(8) * t1379 + t1191 * t1717 + t1355 * t1721;
t1388 = -pkin(4) * t1568 + pkin(10) * t1543 - t1888;
t1414 = -pkin(10) * t1542 + t1889;
t1293 = -pkin(9) * t1465 - t1388 * t1716 + t1414 * t1720;
t1297 = -pkin(3) * t1465 - t1772;
t1756 = pkin(8) * t1417 + t1293 * t1717 + t1297 * t1721;
t1309 = -pkin(3) * t1485 - t1843;
t1394 = -pkin(4) * t1911 + pkin(10) * t1575 + t1889;
t1426 = -pkin(10) * t1574 + t1888;
t1310 = -pkin(9) * t1485 - t1394 * t1716 + t1426 * t1720;
t1755 = pkin(8) * t1431 + t1309 * t1721 + t1310 * t1717;
t1427 = -pkin(3) * t1636 + t1441;
t1472 = -pkin(9) * t1636 + t1887;
t1754 = pkin(8) * t1602 + t1427 * t1721 + t1472 * t1717;
t1428 = -pkin(3) * t1638 + t1442;
t1473 = -pkin(9) * t1638 + t1886;
t1753 = pkin(8) * t1603 + t1428 * t1721 + t1473 * t1717;
t1752 = t1705 * t1771;
t1750 = t1708 * t1771;
t1749 = t1709 * t1771;
t1111 = -pkin(3) * t1227 + pkin(9) * t1154 + t1140 * t1720 + t1148 * t1716;
t1128 = t1711 * t1153 + t1707 * t1833;
t1095 = -pkin(2) * t1128 - t1111 * t1707 + t1711 * t1762;
t1099 = t1114 * t1721 - t1138 * t1717 + (-t1128 * t1707 - t1129 * t1711) * pkin(8);
t1117 = -t1129 * t1705 + t1146 * t1709;
t1747 = qJ(2) * t1117 + t1095 * t1709 + t1099 * t1705;
t1144 = -pkin(3) * t1405 + pkin(9) * t1299 + t1181 * t1720 + t1187 * t1716;
t1222 = t1711 * t1298 + t1707 * t1820;
t1113 = -pkin(2) * t1222 - t1144 * t1707 + t1711 * t1761;
t1124 = t1145 * t1721 - t1174 * t1717 + (-t1222 * t1707 - t1223 * t1711) * pkin(8);
t1183 = -t1223 * t1705 + t1256 * t1709;
t1746 = qJ(2) * t1183 + t1113 * t1709 + t1124 * t1705;
t1160 = -pkin(3) * t1467 + pkin(9) * t1217 - pkin(10) * t1891 + t1249 * t1720;
t1161 = t1711 * t1216 + t1707 * t1831;
t1116 = -pkin(2) * t1161 - t1160 * t1707 + t1711 * t1758;
t1118 = t1163 * t1721 - t1180 * t1717 + (-t1161 * t1707 - t1162 * t1711) * pkin(8);
t1147 = -t1162 * t1705 + t1212 * t1709;
t1745 = qJ(2) * t1147 + t1116 * t1709 + t1118 * t1705;
t1149 = -pkin(3) * t1458 + pkin(9) * t1318 + t1204 * t1720 + t1213 * t1716;
t1239 = t1711 * t1317 + t1707 * t1817;
t1120 = -pkin(2) * t1239 - t1149 * t1707 + t1711 * t1760;
t1134 = t1151 * t1721 - t1220 * t1717 + (-t1239 * t1707 - t1240 * t1711) * pkin(8);
t1198 = -t1240 * t1705 + t1285 * t1709;
t1744 = qJ(2) * t1198 + t1120 * t1709 + t1134 * t1705;
t1150 = -pkin(3) * t1461 + pkin(9) * t1322 + t1208 * t1720 + t1214 * t1716;
t1241 = t1711 * t1321 + t1707 * t1815;
t1123 = -pkin(2) * t1241 - t1150 * t1707 + t1711 * t1759;
t1135 = t1152 * t1721 - t1221 * t1717 + (-t1241 * t1707 - t1242 * t1711) * pkin(8);
t1205 = -t1242 * t1705 + t1286 * t1709;
t1743 = qJ(2) * t1205 + t1123 * t1709 + t1135 * t1705;
t1186 = -pkin(3) * t1594 + pkin(9) * t1403 + t1247 * t1720 + t1250 * t1716;
t1315 = t1711 * t1401 + t1707 * t1800;
t1143 = -pkin(2) * t1315 - t1186 * t1707 + t1711 * t1757;
t1157 = t1191 * t1721 - t1355 * t1717 + (-t1315 * t1707 - t1316 * t1711) * pkin(8);
t1255 = -t1316 * t1705 + t1379 * t1709;
t1742 = qJ(2) * t1255 + t1143 * t1709 + t1157 * t1705;
t1287 = -pkin(3) * t1568 + pkin(9) * t1466 + t1388 * t1720 + t1414 * t1716;
t1360 = t1711 * t1465 + t1707 * t1797;
t1177 = -pkin(2) * t1360 - t1287 * t1707 + t1711 * t1756;
t1203 = t1293 * t1721 - t1297 * t1717 + (-t1360 * t1707 - t1361 * t1711) * pkin(8);
t1314 = -t1361 * t1705 + t1417 * t1709;
t1741 = qJ(2) * t1314 + t1177 * t1709 + t1203 * t1705;
t1258 = -t1358 * t1711 + t1707 * t1812;
t1342 = -pkin(3) * t1506 + pkin(9) * t1359;
t1732 = pkin(8) * t1339 - (-pkin(3) * t1721 - pkin(9) * t1717) * t1358;
t1179 = -pkin(2) * t1258 - t1342 * t1707 + t1711 * t1732;
t1182 = -(pkin(3) * t1717 - pkin(9) * t1721) * t1358 + (-t1258 * t1707 - t1259 * t1711) * pkin(8);
t1236 = -t1259 * t1705 + t1339 * t1709;
t1740 = qJ(2) * t1236 + t1179 * t1709 + t1182 * t1705;
t1292 = -pkin(3) * t1911 + pkin(9) * t1486 + t1394 * t1720 + t1426 * t1716;
t1367 = t1711 * t1485 + t1707 * t1796;
t1185 = -pkin(2) * t1367 - t1292 * t1707 + t1711 * t1755;
t1211 = -t1309 * t1717 + t1310 * t1721 + (-t1367 * t1707 - t1368 * t1711) * pkin(8);
t1327 = -t1368 * t1705 + t1431 * t1709;
t1739 = qJ(2) * t1327 + t1185 * t1709 + t1211 * t1705;
t1356 = pkin(3) * t1678 + pkin(9) * t1675 + t1359;
t1617 = t1777 * t1707;
t1274 = -pkin(2) * t1617 - t1356 * t1707 + t1711 * t1837;
t1349 = t1721 * t1358 + (-t1617 * t1707 - t1618 * t1711) * pkin(8);
t1567 = -t1618 * t1705 + t1624 * t1709;
t1738 = qJ(2) * t1567 + t1274 * t1709 + t1349 * t1705;
t1464 = pkin(3) * t1674 + pkin(9) * t1640 - t1886;
t1544 = t1636 * t1711 + t1707 * t1781;
t1307 = -pkin(2) * t1544 - t1464 * t1707 + t1711 * t1754;
t1335 = -t1427 * t1717 + t1472 * t1721 + (-t1544 * t1707 - t1546 * t1711) * pkin(8);
t1504 = -t1546 * t1705 + t1602 * t1709;
t1737 = qJ(2) * t1504 + t1307 * t1709 + t1335 * t1705;
t1463 = -pkin(3) * t1671 + pkin(9) * t1642 + t1887;
t1545 = t1638 * t1711 + t1707 * t1780;
t1308 = -pkin(2) * t1545 - t1463 * t1707 + t1711 * t1753;
t1336 = -t1428 * t1717 + t1473 * t1721 + (-t1545 * t1707 - t1547 * t1711) * pkin(8);
t1505 = -t1547 * t1705 + t1603 * t1709;
t1736 = qJ(2) * t1505 + t1308 * t1709 + t1336 * t1705;
t1384 = -t1412 * t1707 - t1711 * t1558;
t1313 = (-t1384 * t1707 - t1385 * t1711) * pkin(8);
t1328 = -t1385 * t1705 + t1413 * t1709;
t1329 = -pkin(2) * t1384 + t1711 * t1898;
t1735 = qJ(2) * t1328 + t1313 * t1705 + t1329 * t1709;
t1424 = pkin(2) * t1655 + t1510 * t1707 + t1711 * t1836;
t1512 = -t1870 + (t1655 * t1707 + t1657 * t1711) * pkin(8);
t1734 = qJ(2) * t1614 + t1424 * t1709 + t1512 * t1705;
t1656 = t1676 * t1707;
t1425 = -pkin(2) * t1656 + t1509 * t1707 + t1711 * t1835;
t1511 = -t1871 + (-t1656 * t1707 - t1658 * t1711) * pkin(8);
t1615 = -t1658 * t1705 - t1709 * t1776;
t1733 = qJ(2) * t1615 + t1425 * t1709 + t1511 * t1705;
t1725 = t1709 * t1604 - t1705 * t1729;
t1650 = (-t1707 * t1709 * t1712 - t1708 * t1711) * qJDD(3);
t1649 = (-t1707 * t1873 + t1711 * t1712) * qJDD(3);
t1625 = t1775 * t1707;
t1587 = -t1626 * t1705 + t1646 * t1709;
t1586 = -t1656 * t1708 + t1712 * t1778;
t1583 = t1656 * t1712 + t1708 * t1778;
t1564 = t1634 * t1711 + t1707 * t1763;
t1563 = t1633 * t1711 + t1707 * t1764;
t1560 = t1637 * t1711 + t1707 * t1766;
t1559 = t1635 * t1711 + t1707 * t1767;
t1556 = -t1708 * t1665 + (-t1708 * t1731 + t1748) * t1709;
t1555 = -t1705 * t1748 + t1874;
t1554 = t1864 * t1873 + t1712 * (t1709 * t1838 + t1665);
t1553 = -t1705 * t1750 - t1872;
t1536 = t1711 * t1621 + t1707 * t1783;
t1534 = -t1705 * t1604 - t1727;
t1530 = t1725 * t1712;
t1529 = t1725 * t1708;
t1528 = -t1708 * t1625 + t1712 * t1782;
t1527 = t1625 * t1712 + t1708 * t1782;
t1521 = -t1586 * t1706 + t1615 * t1710;
t1520 = t1586 * t1710 + t1615 * t1706;
t1518 = -t1708 * t1617 + t1712 * t1784;
t1517 = t1712 * t1617 + t1708 * t1784;
t1516 = -t1566 * t1705 + t1609 * t1709;
t1515 = -t1565 * t1705 + t1608 * t1709;
t1514 = -t1562 * t1705 + t1607 * t1709;
t1513 = -t1561 * t1705 + t1606 * t1709;
t1508 = t1705 * t1872 + t1712 * t1727 + t1750;
t1507 = t1705 * t1874 + t1708 * t1727 - t1748;
t1480 = -t1537 * t1705 + t1593 * t1709;
t1456 = -t1708 * t1564 + t1712 * t1786;
t1455 = -t1708 * t1563 + t1712 * t1787;
t1454 = t1712 * t1564 + t1708 * t1786;
t1453 = t1712 * t1563 + t1708 * t1787;
t1452 = -t1708 * t1560 + t1712 * t1788;
t1451 = -t1708 * t1559 + t1712 * t1789;
t1450 = t1712 * t1560 + t1708 * t1788;
t1449 = t1712 * t1559 + t1708 * t1789;
t1436 = t1711 * t1525 + t1707 * t1793;
t1435 = -t1708 * t1545 + t1712 * t1790;
t1434 = -t1708 * t1544 + t1712 * t1791;
t1433 = t1712 * t1545 + t1708 * t1790;
t1432 = t1712 * t1544 + t1708 * t1791;
t1430 = pkin(1) * t1508 + t1708 * t1896;
t1429 = -pkin(1) * t1507 + t1712 * t1896;
t1423 = pkin(2) * t1658 - t1509 * t1711 + t1707 * t1835;
t1422 = -pkin(2) * t1657 - t1510 * t1711 + t1707 * t1836;
t1416 = -t1708 * t1536 + t1712 * t1792;
t1415 = t1712 * t1536 + t1708 * t1792;
t1411 = (-t1507 * t1708 - t1508 * t1712) * qJ(2);
t1409 = t1413 * t1707;
t1381 = -t1437 * t1705 + t1519 * t1709;
t1376 = t1711 * t1492 + t1707 * t1794;
t1375 = t1711 * t1491 + t1707 * t1795;
t1370 = t1469 * t1711 + t1707 * t1769;
t1369 = t1468 * t1711 + t1707 * t1770;
t1351 = -t1424 * t1705 + t1512 * t1709 + (t1581 * t1708 + t1584 * t1712) * qJ(2);
t1350 = -t1425 * t1705 + t1511 * t1709 + (-t1583 * t1708 - t1586 * t1712) * qJ(2);
t1348 = -t1410 * t1705 + t1412 * t1709;
t1338 = -t1708 * t1436 + t1712 * t1798;
t1337 = t1712 * t1436 + t1708 * t1798;
t1334 = -t1372 * t1705 + t1448 * t1709;
t1333 = -t1371 * t1705 + t1447 * t1709;
t1332 = -t1378 * t1705 + t1439 * t1709;
t1331 = -t1377 * t1705 + t1438 * t1709;
t1330 = pkin(2) * t1385 + t1707 * t1898;
t1319 = t1711 * t1400 + t1707 * t1801;
t1306 = pkin(2) * t1547 + t1463 * t1711 + t1707 * t1753;
t1305 = pkin(2) * t1546 + t1464 * t1711 + t1707 * t1754;
t1304 = pkin(1) * t1581 - t1422 * t1708 + t1712 * t1734;
t1303 = -pkin(1) * t1583 - t1423 * t1708 + t1712 * t1733;
t1302 = -pkin(1) * t1584 + t1422 * t1712 + t1708 * t1734;
t1301 = pkin(1) * t1586 + t1423 * t1712 + t1708 * t1733;
t1294 = t1711 * t1391 + t1707 * t1802;
t1289 = -t1708 * t1409 + t1712 * t1799;
t1288 = t1712 * t1409 + t1708 * t1799;
t1280 = -t1708 * t1384 + t1712 * t1803;
t1279 = t1712 * t1384 + t1708 * t1803;
t1278 = -t1708 * t1370 + t1712 * t1806;
t1277 = -t1708 * t1369 + t1712 * t1807;
t1276 = t1712 * t1370 + t1708 * t1806;
t1275 = t1712 * t1369 + t1708 * t1807;
t1273 = pkin(2) * t1618 + t1356 * t1711 + t1707 * t1837;
t1272 = -t1708 * t1376 + t1712 * t1804;
t1271 = -t1708 * t1375 + t1712 * t1805;
t1270 = t1712 * t1376 + t1708 * t1804;
t1269 = t1712 * t1375 + t1708 * t1805;
t1265 = t1711 * t1364 + t1707 * t1809;
t1264 = t1711 * t1363 + t1707 * t1810;
t1261 = -t1708 * t1367 + t1712 * t1808;
t1260 = t1712 * t1367 + t1708 * t1808;
t1257 = -t1320 * t1705 + t1380 * t1709;
t1252 = -t1708 * t1360 + t1712 * t1811;
t1251 = t1712 * t1360 + t1708 * t1811;
t1248 = -t1295 * t1705 + t1362 * t1709;
t1244 = t1711 * t1324 + t1707 * t1813;
t1243 = t1711 * t1323 + t1707 * t1814;
t1238 = -t1267 * t1705 + t1341 * t1709;
t1237 = -t1266 * t1705 + t1340 * t1709;
t1235 = -t1708 * t1319 + t1712 * t1816;
t1234 = t1712 * t1319 + t1708 * t1816;
t1232 = t1711 * t1311 + t1707 * t1819;
t1231 = -t1708 * t1315 + t1712 * t1818;
t1230 = t1712 * t1315 + t1708 * t1818;
t1229 = -t1274 * t1705 + t1349 * t1709 + (-t1517 * t1708 - t1518 * t1712) * qJ(2);
t1225 = -t1308 * t1705 + t1336 * t1709 + (-t1433 * t1708 - t1435 * t1712) * qJ(2);
t1224 = -t1307 * t1705 + t1335 * t1709 + (-t1432 * t1708 - t1434 * t1712) * qJ(2);
t1219 = -t1708 * t1294 + t1712 * t1821;
t1218 = t1712 * t1294 + t1708 * t1821;
t1210 = -t1246 * t1705 + t1291 * t1709;
t1209 = -t1245 * t1705 + t1290 * t1709;
t1202 = -pkin(1) * t1433 - t1306 * t1708 + t1712 * t1736;
t1201 = -pkin(1) * t1432 - t1305 * t1708 + t1712 * t1737;
t1200 = pkin(1) * t1435 + t1306 * t1712 + t1708 * t1736;
t1199 = pkin(1) * t1434 + t1305 * t1712 + t1708 * t1737;
t1197 = -t1708 * t1265 + t1712 * t1822;
t1196 = -t1708 * t1264 + t1712 * t1823;
t1195 = t1712 * t1265 + t1708 * t1822;
t1194 = t1712 * t1264 + t1708 * t1823;
t1193 = -t1708 * t1258 + t1712 * t1824;
t1192 = t1712 * t1258 + t1708 * t1824;
t1190 = -pkin(1) * t1517 - t1273 * t1708 + t1712 * t1738;
t1189 = pkin(1) * t1518 + t1273 * t1712 + t1708 * t1738;
t1188 = -t1233 * t1705 + t1268 * t1709;
t1184 = pkin(2) * t1368 + t1292 * t1711 + t1707 * t1755;
t1178 = pkin(2) * t1259 + t1342 * t1711 + t1707 * t1732;
t1176 = pkin(2) * t1361 + t1287 * t1711 + t1707 * t1756;
t1175 = t1313 * t1709 - t1329 * t1705 + (-t1279 * t1708 - t1280 * t1712) * qJ(2);
t1173 = -pkin(1) * t1279 - t1330 * t1708 + t1712 * t1735;
t1172 = pkin(1) * t1280 + t1330 * t1712 + t1708 * t1735;
t1171 = -t1708 * t1244 + t1712 * t1825;
t1170 = -t1708 * t1243 + t1712 * t1826;
t1169 = t1712 * t1244 + t1708 * t1825;
t1168 = t1712 * t1243 + t1708 * t1826;
t1167 = -t1708 * t1241 + t1712 * t1827;
t1166 = t1712 * t1241 + t1708 * t1827;
t1165 = -t1708 * t1239 + t1712 * t1828;
t1164 = t1712 * t1239 + t1708 * t1828;
t1159 = -t1708 * t1232 + t1712 * t1829;
t1158 = t1712 * t1232 + t1708 * t1829;
t1156 = -t1708 * t1222 + t1712 * t1830;
t1155 = t1712 * t1222 + t1708 * t1830;
t1142 = pkin(2) * t1316 + t1186 * t1711 + t1707 * t1757;
t1141 = -t1185 * t1705 + t1211 * t1709 + (-t1260 * t1708 - t1261 * t1712) * qJ(2);
t1139 = -t1177 * t1705 + t1203 * t1709 + (-t1251 * t1708 - t1252 * t1712) * qJ(2);
t1137 = -pkin(1) * t1260 - t1184 * t1708 + t1712 * t1739;
t1136 = pkin(1) * t1261 + t1184 * t1712 + t1708 * t1739;
t1133 = -pkin(1) * t1251 - t1176 * t1708 + t1712 * t1741;
t1132 = pkin(1) * t1252 + t1176 * t1712 + t1708 * t1741;
t1131 = -t1708 * t1161 + t1712 * t1832;
t1130 = t1712 * t1161 + t1708 * t1832;
t1127 = -t1179 * t1705 + t1182 * t1709 + (-t1192 * t1708 - t1193 * t1712) * qJ(2);
t1126 = -pkin(1) * t1192 - t1178 * t1708 + t1712 * t1740;
t1125 = pkin(1) * t1193 + t1178 * t1712 + t1708 * t1740;
t1122 = pkin(2) * t1242 + t1150 * t1711 + t1707 * t1759;
t1121 = -t1143 * t1705 + t1157 * t1709 + (-t1230 * t1708 - t1231 * t1712) * qJ(2);
t1119 = pkin(2) * t1240 + t1149 * t1711 + t1707 * t1760;
t1115 = pkin(2) * t1162 + t1160 * t1711 + t1707 * t1758;
t1112 = pkin(2) * t1223 + t1144 * t1711 + t1707 * t1761;
t1110 = -pkin(1) * t1230 - t1142 * t1708 + t1712 * t1742;
t1109 = pkin(1) * t1231 + t1142 * t1712 + t1708 * t1742;
t1108 = -t1708 * t1128 + t1712 * t1834;
t1107 = t1712 * t1128 + t1708 * t1834;
t1106 = -t1123 * t1705 + t1135 * t1709 + (-t1166 * t1708 - t1167 * t1712) * qJ(2);
t1105 = -t1120 * t1705 + t1134 * t1709 + (-t1164 * t1708 - t1165 * t1712) * qJ(2);
t1104 = -t1113 * t1705 + t1124 * t1709 + (-t1155 * t1708 - t1156 * t1712) * qJ(2);
t1103 = -pkin(1) * t1166 - t1122 * t1708 + t1712 * t1743;
t1102 = pkin(1) * t1167 + t1122 * t1712 + t1708 * t1743;
t1101 = -pkin(1) * t1164 - t1119 * t1708 + t1712 * t1744;
t1100 = pkin(1) * t1165 + t1119 * t1712 + t1708 * t1744;
t1098 = -t1116 * t1705 + t1118 * t1709 + (-t1130 * t1708 - t1131 * t1712) * qJ(2);
t1097 = -pkin(1) * t1155 - t1112 * t1708 + t1712 * t1746;
t1096 = pkin(1) * t1156 + t1112 * t1712 + t1708 * t1746;
t1094 = pkin(2) * t1129 + t1111 * t1711 + t1707 * t1762;
t1093 = -pkin(1) * t1130 - t1115 * t1708 + t1712 * t1745;
t1092 = pkin(1) * t1131 + t1115 * t1712 + t1708 * t1745;
t1091 = -t1095 * t1705 + t1099 * t1709 + (-t1107 * t1708 - t1108 * t1712) * qJ(2);
t1090 = -pkin(1) * t1107 - t1094 * t1708 + t1712 * t1747;
t1089 = pkin(1) * t1108 + t1094 * t1712 + t1708 * t1747;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1909, -t1908, -t1904, -qJ(1) * t1904, 0, 0, 0, 0, 0, 0, -t1706 * t1556 - t1710 * t1752, -t1706 * t1555 - t1710 * t1749, -t1530 * t1706 + t1534 * t1710, t1710 * t1411 - t1706 * t1429 - qJ(1) * (t1508 * t1710 + t1535 * t1706), 0, 0, -t1919, 0, t1521, -t1650 * t1706 + t1710 * t1853, -qJ(1) * t1520 - t1303 * t1706 + t1350 * t1710, qJ(1) * t1918 - t1706 * t1304 + t1710 * t1351, -t1289 * t1706 + t1348 * t1710, t1710 * t1175 - t1706 * t1173 - qJ(1) * (t1280 * t1710 + t1328 * t1706), -t1456 * t1706 + t1516 * t1710, -t1416 * t1706 + t1480 * t1710, -t1452 * t1706 + t1514 * t1710, -t1455 * t1706 + t1515 * t1710, -t1451 * t1706 + t1513 * t1710, -t1528 * t1706 + t1587 * t1710, t1710 * t1224 - t1706 * t1201 - qJ(1) * (t1434 * t1710 + t1504 * t1706), t1710 * t1225 - t1706 * t1202 - qJ(1) * (t1435 * t1710 + t1505 * t1706), t1710 * t1229 - t1706 * t1190 - qJ(1) * (t1518 * t1710 + t1567 * t1706), t1710 * t1127 - t1706 * t1126 - qJ(1) * (t1193 * t1710 + t1236 * t1706), -t1278 * t1706 + t1334 * t1710, -t1235 * t1706 + t1257 * t1710, -t1271 * t1706 + t1331 * t1710, -t1277 * t1706 + t1333 * t1710, -t1272 * t1706 + t1332 * t1710, -t1338 * t1706 + t1381 * t1710, t1710 * t1139 - t1706 * t1133 - qJ(1) * (t1252 * t1710 + t1314 * t1706), t1710 * t1141 - t1706 * t1137 - qJ(1) * (t1261 * t1710 + t1327 * t1706), t1710 * t1121 - t1706 * t1110 - qJ(1) * (t1231 * t1710 + t1255 * t1706), t1710 * t1098 - t1706 * t1093 - qJ(1) * (t1131 * t1710 + t1147 * t1706), -t1197 * t1706 + t1238 * t1710, -t1159 * t1706 + t1188 * t1710, -t1170 * t1706 + t1209 * t1710, -t1196 * t1706 + t1237 * t1710, -t1171 * t1706 + t1210 * t1710, -t1219 * t1706 + t1248 * t1710, t1710 * t1105 - t1706 * t1101 - qJ(1) * (t1165 * t1710 + t1198 * t1706), t1710 * t1106 - t1706 * t1103 - qJ(1) * (t1167 * t1710 + t1205 * t1706), t1710 * t1104 - t1706 * t1097 - qJ(1) * (t1156 * t1710 + t1183 * t1706), t1710 * t1091 - t1706 * t1090 - qJ(1) * (t1108 * t1710 + t1117 * t1706); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1908, -t1909, t1905, qJ(1) * t1905, 0, 0, 0, 0, 0, 0, t1710 * t1556 - t1706 * t1752, t1710 * t1555 - t1706 * t1749, t1530 * t1710 + t1534 * t1706, t1706 * t1411 + t1710 * t1429 + qJ(1) * (-t1508 * t1706 + t1535 * t1710), 0, 0, t1918, 0, t1520, t1650 * t1710 + t1706 * t1853, qJ(1) * t1521 + t1303 * t1710 + t1350 * t1706, qJ(1) * t1919 + t1710 * t1304 + t1706 * t1351, t1289 * t1710 + t1348 * t1706, t1706 * t1175 + t1710 * t1173 + qJ(1) * (-t1280 * t1706 + t1328 * t1710), t1456 * t1710 + t1516 * t1706, t1416 * t1710 + t1480 * t1706, t1452 * t1710 + t1514 * t1706, t1455 * t1710 + t1515 * t1706, t1451 * t1710 + t1513 * t1706, t1528 * t1710 + t1587 * t1706, t1706 * t1224 + t1710 * t1201 + qJ(1) * (-t1434 * t1706 + t1504 * t1710), t1706 * t1225 + t1710 * t1202 + qJ(1) * (-t1435 * t1706 + t1505 * t1710), t1706 * t1229 + t1710 * t1190 + qJ(1) * (-t1518 * t1706 + t1567 * t1710), t1706 * t1127 + t1710 * t1126 + qJ(1) * (-t1193 * t1706 + t1236 * t1710), t1278 * t1710 + t1334 * t1706, t1235 * t1710 + t1257 * t1706, t1271 * t1710 + t1331 * t1706, t1277 * t1710 + t1333 * t1706, t1272 * t1710 + t1332 * t1706, t1338 * t1710 + t1381 * t1706, t1706 * t1139 + t1710 * t1133 + qJ(1) * (-t1252 * t1706 + t1314 * t1710), t1706 * t1141 + t1710 * t1137 + qJ(1) * (-t1261 * t1706 + t1327 * t1710), t1706 * t1121 + t1710 * t1110 + qJ(1) * (-t1231 * t1706 + t1255 * t1710), t1706 * t1098 + t1710 * t1093 + qJ(1) * (-t1131 * t1706 + t1147 * t1710), t1197 * t1710 + t1238 * t1706, t1159 * t1710 + t1188 * t1706, t1170 * t1710 + t1209 * t1706, t1196 * t1710 + t1237 * t1706, t1171 * t1710 + t1210 * t1706, t1219 * t1710 + t1248 * t1706, t1706 * t1105 + t1710 * t1101 + qJ(1) * (-t1165 * t1706 + t1198 * t1710), t1706 * t1106 + t1710 * t1103 + qJ(1) * (-t1167 * t1706 + t1205 * t1710), t1706 * t1104 + t1710 * t1097 + qJ(1) * (-t1156 * t1706 + t1183 * t1710), t1706 * t1091 + t1710 * t1090 + qJ(1) * (-t1108 * t1706 + t1117 * t1710); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1852, t1867, 0, 0, 0, 0, 0, 0, 0, 0, t1554, t1553, t1529, t1430, 0, 0, t1581, 0, t1583, t1649, t1301, t1302, t1288, t1172, t1454, t1415, t1450, t1453, t1449, t1527, t1199, t1200, t1189, t1125, t1276, t1234, t1269, t1275, t1270, t1337, t1132, t1136, t1109, t1092, t1195, t1158, t1168, t1194, t1169, t1218, t1100, t1102, t1096, t1089; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1897, -t1852, 0, 0, 0, 0, 0, 0, 0, -t1752, -t1749, t1534, t1411, 0, 0, -t1614, 0, t1615, t1853, t1350, t1351, t1348, t1175, t1516, t1480, t1514, t1515, t1513, t1587, t1224, t1225, t1229, t1127, t1334, t1257, t1331, t1333, t1332, t1381, t1139, t1141, t1121, t1098, t1238, t1188, t1209, t1237, t1210, t1248, t1105, t1106, t1104, t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1897, 0, -t1867, 0, 0, 0, 0, 0, 0, 0, t1556, t1555, t1530, t1429, 0, 0, t1584, 0, t1586, t1650, t1303, t1304, t1289, t1173, t1456, t1416, t1452, t1455, t1451, t1528, t1201, t1202, t1190, t1126, t1278, t1235, t1271, t1277, t1272, t1338, t1133, t1137, t1110, t1093, t1197, t1159, t1170, t1196, t1171, t1219, t1101, t1103, t1097, t1090; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1852, t1867, 0, 0, 0, 0, 0, 0, 0, 0, t1554, t1553, t1529, t1430, 0, 0, t1581, 0, t1583, t1649, t1301, t1302, t1288, t1172, t1454, t1415, t1450, t1453, t1449, t1527, t1199, t1200, t1189, t1125, t1276, t1234, t1269, t1275, t1270, t1337, t1132, t1136, t1109, t1092, t1195, t1158, t1168, t1194, t1169, t1218, t1100, t1102, t1096, t1089; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1771, -t1729, 0, 0, 0, t1676, 0, -t1776, 0, t1511, t1512, t1412, t1313, t1609, t1593, t1607, t1608, t1606, t1646, t1335, t1336, t1349, t1182, t1448, t1380, t1438, t1447, t1439, t1519, t1203, t1211, t1157, t1118, t1341, t1268, t1290, t1340, t1291, t1362, t1134, t1135, t1124, t1099; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1771, 0, t1604, 0, 0, 0, t1657, 0, t1658, -t1866, t1425, t1424, t1410, t1329, t1566, t1537, t1562, t1565, t1561, t1626, t1307, t1308, t1274, t1179, t1372, t1320, t1377, t1371, t1378, t1437, t1177, t1185, t1143, t1116, t1267, t1233, t1245, t1266, t1246, t1295, t1120, t1123, t1113, t1095; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1729, -t1604, 0, 0, 0, 0, t1655, 0, t1656, t1711 * qJDD(3), t1423, t1422, t1409, t1330, t1564, t1536, t1560, t1563, t1559, t1625, t1305, t1306, t1273, t1178, t1370, t1319, t1375, t1369, t1376, t1436, t1176, t1184, t1142, t1115, t1265, t1232, t1243, t1264, t1244, t1294, t1119, t1122, t1112, t1094; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t1903, 0, 0, -t1558, t1509, 0, t1645, t1622, t1641, t1644, t1639, t1669, t1472, t1473, t1358, pkin(9) * t1358, t1471, t1402, t1493, t1470, t1494, t1526, t1293, t1310, t1191, t1163, t1366, t1312, t1325, t1365, t1326, t1392, t1151, t1152, t1145, t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1903, 0, qJDD(3), 0, t1558, 0, t1510, 0, t1687, -t1679, -t1865, -t1687, -t1696, -qJDD(4), t1427, t1428, 0, pkin(3) * t1358, -t1620, -t1619, -t1573, t1620, -t1768, -t1702, t1297, t1309, t1355, t1180, -t1489, -t1406, -t1474, t1487, -t1475, -t1531, t1220, t1221, t1174, t1138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1509, -t1510, 0, 0, t1634, t1621, t1637, t1633, t1635, 0, t1464, t1463, t1356, t1342, t1469, t1400, t1491, t1468, t1492, t1525, t1287, t1292, t1186, t1160, t1364, t1311, t1323, t1363, t1324, t1391, t1149, t1150, t1144, t1111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1672, t1674, t1680, -t1692, t1685, t1692, 0, t1506, t1441, 0, t1551, t1483, t1578, t1549, t1579, t1597, t1414, t1426, t1250, -pkin(10) * t1262, t1446, t1383, t1398, t1445, t1399, t1479, t1213, t1214, t1187, t1148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1856, t1671, t1683, t1673, t1681, -t1856, -t1506, 0, t1442, 0, t1550, t1481, t1576, t1548, t1577, t1596, t1388, t1394, t1247, t1249, t1444, t1382, t1396, t1443, t1397, t1478, t1204, t1208, t1181, t1140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1687, t1679, t1865, t1687, t1696, qJDD(4), -t1441, -t1442, 0, 0, t1620, t1619, t1573, -t1620, t1768, t1702, t1772, t1843, t1900, t1901, t1489, t1406, t1474, -t1487, t1475, t1531, t1773, t1774, t1765, t1844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, -t1568, t1906, t1652, t1647, -t1652, 0, t1467, t1353, 0, t1490, t1408, t1476, t1488, t1477, t1532, t1296, t1300, t1215, -pkin(11) * t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1851, t1911, t1648, t1591, t1611, -t1851, -t1467, 0, t1354, 0, -t1589, -t1588, -t1501, t1589, t1497, -t1590, t1253, t1254, -pkin(5) * t1405, -pkin(5) * t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1620, t1619, t1573, -t1620, t1768, t1702, -t1353, -t1354, 0, 0, t1489, t1406, t1474, -t1487, t1475, t1531, t1854, t1855, t1845, t1868; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1539, t1499, t1907, t1600, t1598, -t1600, 0, t1346, t1283, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1601, t1500, t1599, t1538, t1523, -t1601, -t1346, 0, t1284, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1589, t1588, t1501, -t1589, -t1497, t1590, -t1283, -t1284, 0, 0;];
m_new_reg  = t1;
