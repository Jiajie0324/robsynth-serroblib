% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PPRRRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:01:30
% EndTime: 2019-03-08 19:01:41
% DurationCPUTime: 4.09s
% Computational Cost: add. (8671->421), mult. (22671->606), div. (0->0), fcn. (19781->14), ass. (0->226)
t149 = sin(qJ(4));
t220 = qJD(4) * t149;
t143 = sin(pkin(6));
t141 = sin(pkin(13));
t150 = sin(qJ(3));
t153 = cos(qJ(3));
t144 = cos(pkin(13));
t145 = cos(pkin(7));
t229 = t144 * t145;
t173 = t141 * t153 + t150 * t229;
t164 = t173 * t143;
t146 = cos(pkin(6));
t132 = qJD(1) * t146 + qJD(2);
t142 = sin(pkin(7));
t232 = t142 * t150;
t208 = t132 * t232;
t90 = qJD(1) * t164 + t208;
t186 = pkin(4) * t220 - t90;
t152 = cos(qJ(4));
t270 = cos(qJ(5));
t202 = t270 * t152;
t188 = qJD(4) * t202;
t198 = qJD(5) * t270;
t214 = qJD(4) + qJD(5);
t148 = sin(qJ(5));
t228 = t148 * t149;
t100 = -t152 * t198 + t214 * t228 - t188;
t227 = t148 * t152;
t122 = t270 * t149 + t227;
t101 = t214 * t122;
t281 = pkin(5) * t101 + pkin(11) * t100 + t186;
t273 = -pkin(10) - pkin(9);
t203 = qJD(4) * t273;
t124 = t149 * t203;
t170 = t202 - t228;
t126 = t273 * t149;
t127 = t273 * t152;
t171 = t270 * t126 + t148 * t127;
t224 = qJD(1) * t143;
t201 = t144 * t224;
t233 = t141 * t150;
t89 = t153 * (t132 * t142 + t145 * t201) - t224 * t233;
t264 = -t171 * qJD(5) - t270 * t124 + t170 * t89 - t203 * t227;
t231 = t142 * t153;
t276 = (t153 * t229 - t233) * t143;
t280 = t146 * t231 + t276;
t279 = qJD(1) * t276 + t132 * t231;
t147 = sin(qJ(6));
t151 = cos(qJ(6));
t216 = qJD(6) * t151;
t111 = t132 * t145 - t142 * t201;
t108 = t152 * t111;
t84 = qJD(3) * pkin(9) + t90;
t196 = pkin(10) * qJD(3) + t84;
t183 = t196 * t149;
t59 = t108 - t183;
t58 = qJD(4) * pkin(4) + t59;
t210 = t270 * t58;
t226 = t149 * t111;
t60 = t196 * t152 + t226;
t256 = t148 * t60;
t28 = t210 - t256;
t26 = -t214 * pkin(5) - t28;
t161 = t60 * qJD(4);
t81 = t279 * qJD(3);
t255 = t149 * t81;
t40 = t270 * (-t161 - t255);
t219 = qJD(4) * t152;
t247 = t111 * t219 + t152 * t81;
t42 = -qJD(4) * t183 + t247;
t195 = t148 * t42 - t40;
t209 = t270 * t60;
t29 = t148 * t58 + t209;
t8 = qJD(5) * t29 + t195;
t278 = t8 * t147 + t26 * t216;
t110 = t148 * t126 - t270 * t127;
t263 = -t110 * qJD(5) + t122 * t89 - t148 * t124 + t273 * t188;
t217 = qJD(6) * t147;
t277 = t8 * t151 - t26 * t217;
t27 = t214 * pkin(11) + t29;
t223 = qJD(3) * t149;
t117 = -qJD(3) * t202 + t148 * t223;
t119 = t122 * qJD(3);
t138 = -pkin(4) * t152 - pkin(3);
t79 = t138 * qJD(3) - t89;
t56 = pkin(5) * t117 - pkin(11) * t119 + t79;
t15 = t147 * t56 + t151 * t27;
t180 = t147 * t27 - t151 * t56;
t275 = t147 * t180 + t15 * t151;
t107 = t151 * t119 + t147 * t214;
t274 = t214 * qJD(3);
t91 = t170 * t274;
t65 = qJD(6) * t107 + t147 * t91;
t215 = qJD(3) * qJD(4);
t197 = t149 * t215;
t82 = qJD(3) * t90;
t77 = pkin(4) * t197 + t82;
t92 = t101 * qJD(3);
t43 = pkin(5) * t92 - pkin(11) * t91 + t77;
t218 = qJD(5) * t148;
t163 = -t60 * t218 - t81 * t228 + t270 * t42;
t7 = -t148 * t161 + t58 * t198 + t163;
t2 = -t180 * qJD(6) + t147 * t43 + t151 * t7;
t113 = -t142 * t143 * t144 + t145 * t146;
t99 = t146 * t232 + t164;
t71 = t113 * t152 - t149 * t99;
t72 = t113 * t149 + t152 * t99;
t176 = -t148 * t72 + t270 * t71;
t272 = t176 * t8;
t115 = t145 * t152 - t149 * t232;
t116 = t145 * t149 + t152 * t232;
t172 = t270 * t115 - t148 * t116;
t271 = t8 * t172;
t269 = t171 * t8;
t1 = t2 * t151;
t267 = t82 * t280;
t96 = -pkin(5) * t170 - pkin(11) * t122 + t138;
t66 = -t110 * t147 + t151 * t96;
t266 = t66 * qJD(6) + t281 * t147 - t264 * t151;
t67 = t110 * t151 + t147 * t96;
t265 = -t67 * qJD(6) + t264 * t147 + t281 * t151;
t262 = pkin(4) * qJD(5);
t261 = qJD(3) * pkin(3);
t260 = t170 * t92;
t257 = t147 * t92;
t254 = t149 * t84;
t252 = t151 * t92;
t251 = t153 * t82;
t193 = t151 * t214;
t64 = -qJD(6) * t193 + t119 * t217 - t151 * t91;
t250 = t64 * t147;
t249 = t65 * t151;
t248 = t79 * t119;
t246 = t100 * t147;
t245 = t100 * t151;
t105 = t119 * t147 - t193;
t114 = qJD(6) + t117;
t244 = t105 * t114;
t243 = t105 * t147;
t242 = t107 * t105;
t241 = t107 * t114;
t240 = t107 * t151;
t239 = t114 * t119;
t238 = t117 * t147;
t237 = t117 * t151;
t236 = t119 * t117;
t235 = t122 * t147;
t234 = t122 * t151;
t155 = qJD(3) ^ 2;
t230 = t142 * t155;
t139 = t149 ^ 2;
t140 = t152 ^ 2;
t225 = t139 - t140;
t222 = qJD(3) * t150;
t221 = qJD(3) * t152;
t213 = -t15 * t238 + t180 * t237 + t1;
t212 = pkin(4) * t223;
t206 = t150 * t230;
t204 = t149 * t155 * t152;
t200 = t142 * t222;
t199 = qJD(3) * t231;
t194 = t114 * t151;
t192 = pkin(4) * t198;
t191 = t15 * t119 + t278;
t190 = t152 * t199;
t189 = t149 * t199;
t187 = t152 * t197;
t30 = t148 * t59 + t209;
t185 = pkin(4) * t218 - t30;
t95 = pkin(5) * t119 + pkin(11) * t117;
t136 = pkin(4) * t148 + pkin(11);
t182 = t117 * t26 - t136 * t92;
t181 = t147 * t15 - t151 * t180;
t47 = t148 * t71 + t270 * t72;
t33 = -t147 * t280 + t151 * t47;
t32 = -t147 * t47 - t151 * t280;
t62 = t152 * t84 + t226;
t179 = t119 * t180 - t277;
t154 = qJD(4) ^ 2;
t178 = pkin(9) * t154;
t83 = -t89 - t261;
t177 = qJD(4) * (t83 + t89 - t261);
t87 = t148 * t115 + t270 * t116;
t75 = -t147 * t87 - t151 * t231;
t175 = t147 * t231 - t151 * t87;
t169 = t122 * t216 - t246;
t168 = -t122 * t217 - t245;
t3 = -t15 * qJD(6) - t147 * t7 + t151 * t43;
t162 = -t181 * qJD(6) - t3 * t147;
t160 = t148 * (-pkin(10) * t221 - t62);
t159 = t79 * t117 - t163;
t157 = t162 + t1;
t44 = -t84 * t220 + t247;
t45 = -qJD(4) * t62 - t255;
t61 = t108 - t254;
t156 = -t149 * t45 + t152 * t44 + (-t149 * t62 - t152 * t61) * qJD(4);
t137 = -t270 * pkin(4) - pkin(5);
t103 = -qJD(4) * t116 - t189;
t102 = qJD(4) * t115 + t190;
t94 = t99 * qJD(3);
t93 = t280 * qJD(3);
t85 = t95 + t212;
t78 = -t117 ^ 2 + t119 ^ 2;
t74 = t119 * t214 - t122 * t274;
t73 = (qJD(3) * t170 + t117) * t214;
t52 = qJD(4) * t71 + t93 * t152;
t51 = -qJD(4) * t72 - t93 * t149;
t49 = t87 * qJD(5) + t148 * t102 - t270 * t103;
t48 = t172 * qJD(5) + t270 * t102 + t148 * t103;
t37 = -t107 * t119 + t114 * t194 + t257;
t36 = -t114 ^ 2 * t147 + t105 * t119 + t252;
t35 = t114 * t243 - t249;
t34 = t107 * t194 - t250;
t31 = t270 * t59 - t256;
t23 = qJD(6) * t175 - t147 * t48 + t151 * t200;
t22 = qJD(6) * t75 + t147 * t200 + t151 * t48;
t19 = t147 * t95 + t151 * t28;
t18 = -t147 * t28 + t151 * t95;
t17 = t147 * t85 + t151 * t31;
t16 = -t147 * t31 + t151 * t85;
t11 = (-t64 - t244) * t151 + (-t65 - t241) * t147;
t10 = t47 * qJD(5) + t148 * t52 - t270 * t51;
t9 = t176 * qJD(5) + t148 * t51 + t270 * t52;
t5 = -t33 * qJD(6) - t147 * t9 + t94 * t151;
t4 = t32 * qJD(6) + t94 * t147 + t151 * t9;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94 * qJD(3), -t93 * qJD(3), 0, t81 * t99 - t89 * t94 + t90 * t93 - t267, 0, 0, 0, 0, 0, 0, t51 * qJD(4) + (-t152 * t94 - t220 * t280) * qJD(3), -t52 * qJD(4) + (t149 * t94 - t219 * t280) * qJD(3) (-t149 * t51 + t152 * t52 + (-t149 * t72 - t152 * t71) * qJD(4)) * qJD(3), t44 * t72 + t45 * t71 + t51 * t61 + t52 * t62 + t83 * t94 - t267, 0, 0, 0, 0, 0, 0, -t10 * t214 + t94 * t117 - t280 * t92, t94 * t119 - t214 * t9 - t280 * t91, t10 * t119 - t117 * t9 - t176 * t91 - t47 * t92, -t10 * t28 - t280 * t77 + t29 * t9 + t47 * t7 + t79 * t94 - t272, 0, 0, 0, 0, 0, 0, t10 * t105 + t114 * t5 - t176 * t65 + t32 * t92, t10 * t107 - t114 * t4 + t176 * t64 - t33 * t92, -t105 * t4 - t107 * t5 + t32 * t64 - t33 * t65, t10 * t26 + t15 * t4 - t180 * t5 + t2 * t33 + t3 * t32 - t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, -t153 * t230, 0 (t150 * t81 - t251 + (-t150 * t89 + t153 * t90) * qJD(3)) * t142, 0, 0, 0, 0, 0, 0, -t152 * t206 + (t103 - t189) * qJD(4), t149 * t206 + (-t102 - t190) * qJD(4) (t102 * t152 - t103 * t149 + (-t115 * t152 - t116 * t149) * qJD(4)) * qJD(3), t102 * t62 + t103 * t61 + t115 * t45 + t116 * t44 + (t83 * t222 - t251) * t142, 0, 0, 0, 0, 0, 0, -t49 * t214 + (t117 * t222 - t153 * t92) * t142, -t48 * t214 + (t119 * t222 - t153 * t91) * t142, -t117 * t48 + t119 * t49 - t172 * t91 - t87 * t92, -t28 * t49 + t29 * t48 + t7 * t87 - t271 + (-t153 * t77 + t222 * t79) * t142, 0, 0, 0, 0, 0, 0, t105 * t49 + t114 * t23 - t172 * t65 + t75 * t92, t107 * t49 - t114 * t22 + t172 * t64 + t175 * t92, -t105 * t22 - t107 * t23 + t175 * t65 + t64 * t75, t15 * t22 - t175 * t2 - t180 * t23 + t26 * t49 + t3 * t75 - t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t173 * t224 - t208 + t90) * qJD(3) (-t279 + t89) * qJD(3), 0, 0, 0.2e1 * t187, -0.2e1 * t225 * t215, t154 * t152, -0.2e1 * t187, -t154 * t149, 0, t149 * t177 - t152 * t178, t149 * t178 + t152 * t177 (-t139 - t140) * t89 * qJD(3) + t156, -pkin(3) * t82 - t83 * t90 + (t149 * t61 - t152 * t62) * t89 + t156 * pkin(9), -t100 * t119 + t122 * t91, t100 * t117 - t101 * t119 - t122 * t92 + t170 * t91, -t100 * t214, t101 * t117 - t260, -t101 * t214, 0, t79 * t101 + t117 * t186 + t138 * t92 - t170 * t77 + t214 * t263, -t79 * t100 + t119 * t186 + t77 * t122 + t138 * t91 + t214 * t264, t100 * t28 - t101 * t29 - t110 * t92 + t264 * t117 - t263 * t119 + t122 * t8 + t170 * t7 - t171 * t91, t110 * t7 + t138 * t77 + t186 * t79 + t263 * t28 - t264 * t29 - t269, t107 * t168 - t234 * t64 (t105 * t151 + t107 * t147) * t100 + (t250 - t249 + (-t240 + t243) * qJD(6)) * t122, t101 * t107 + t114 * t168 + t170 * t64 + t234 * t92, t105 * t169 + t235 * t65, -t101 * t105 - t114 * t169 + t170 * t65 - t235 * t92, t101 * t114 - t260, -t101 * t180 - t263 * t105 + t265 * t114 + t122 * t278 - t170 * t3 - t171 * t65 - t26 * t246 + t66 * t92, -t101 * t15 - t263 * t107 - t266 * t114 + t122 * t277 + t170 * t2 + t171 * t64 - t26 * t245 - t67 * t92, t64 * t66 - t65 * t67 - t265 * t107 - t266 * t105 + t181 * t100 + (-qJD(6) * t275 - t147 * t2 - t151 * t3) * t122, t15 * t266 - t180 * t265 + t2 * t67 - t26 * t263 + t3 * t66 - t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, t225 * t155, 0, t204, 0, 0 (-qJD(3) * t83 - t81) * t149, -t83 * t221 + (t61 + t254) * qJD(4) - t247, 0, 0, t236, t78, t73, -t236, t74, 0, -t60 * t198 + t40 + t30 * t214 - t117 * t212 - t248 + (-qJD(5) * t58 - t214 * t262 - t42) * t148 (-t210 + t31) * qJD(5) + (-t160 + t31) * qJD(4) + (-t119 * t223 - t198 * t214) * pkin(4) + t159 (t29 - t30) * t119 + (-t28 + t31) * t117 + (-t270 * t91 - t148 * t92 + (-t270 * t117 + t119 * t148) * qJD(5)) * pkin(4), t28 * t30 - t29 * t31 + (-t79 * t223 - t270 * t8 + t148 * t7 + (-t148 * t28 + t270 * t29) * qJD(5)) * pkin(4), t34, t11, t37, t35, t36, -t239, t137 * t65 + t182 * t147 + t185 * t105 + (-t136 * t216 - t147 * t192 - t16) * t114 + t179, -t137 * t64 + t182 * t151 + t185 * t107 + (t136 * t217 - t151 * t192 + t17) * t114 + t191, t17 * t105 + t16 * t107 + (-t105 * t192 - t136 * t65 + (t107 * t136 + t180) * qJD(6)) * t151 + (t107 * t192 - t136 * t64 - t3 + (t105 * t136 - t15) * qJD(6)) * t147 + t213, t8 * t137 + t180 * t16 - t15 * t17 - t26 * t30 + (t148 * t26 + t270 * t275) * t262 + t157 * t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t78, t73, -t236, t74, 0, t29 * qJD(4) - t195 - t248 (-t210 + t28) * qJD(5) + (-t160 + t28) * qJD(4) + t159, 0, 0, t34, t11, t37, t35, t36, -t239, t26 * t238 - pkin(5) * t65 - t105 * t29 - t114 * t18 + (-t114 * t216 - t257) * pkin(11) + t179, t26 * t237 + pkin(5) * t64 - t107 * t29 + t114 * t19 + (t114 * t217 - t252) * pkin(11) + t191, t105 * t19 + t107 * t18 + (-t250 - t249 + (t240 + t243) * qJD(6)) * pkin(11) + t162 + t213, -pkin(5) * t8 + pkin(11) * t157 - t15 * t19 + t18 * t180 - t26 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, -t105 ^ 2 + t107 ^ 2, -t64 + t244, -t242, t241 - t65, t92, -t107 * t26 + t114 * t15 + t3, t105 * t26 - t114 * t180 - t2, 0, 0;];
tauc_reg  = t6;
