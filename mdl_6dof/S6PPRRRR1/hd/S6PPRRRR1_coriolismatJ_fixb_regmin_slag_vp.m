% Calculate minimal parameter regressor of coriolis matrix for
% S6PPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:01:33
% EndTime: 2019-03-08 19:01:46
% DurationCPUTime: 6.64s
% Computational Cost: add. (5976->389), mult. (16228->625), div. (0->0), fcn. (19526->14), ass. (0->332)
t468 = qJD(4) + qJD(5);
t350 = sin(qJ(4));
t538 = sin(qJ(5));
t457 = t538 * t350;
t353 = cos(qJ(4));
t539 = cos(qJ(5));
t458 = t539 * t353;
t314 = t457 - t458;
t337 = t538 * t353;
t338 = t539 * t350;
t316 = -t338 - t337;
t561 = t468 * t316;
t407 = t314 * t561;
t352 = cos(qJ(6));
t342 = -pkin(4) * t353 - pkin(3);
t536 = t314 * pkin(5);
t414 = t316 * pkin(11) + t536;
t386 = t342 + t414;
t349 = sin(qJ(6));
t550 = pkin(9) + pkin(10);
t326 = t550 * t350;
t327 = t550 * t353;
t393 = -t326 * t538 + t327 * t539;
t563 = t393 * t349;
t130 = -t352 * t386 + t563;
t572 = (t130 - t563) * t316;
t562 = t393 * t352;
t131 = t349 * t386 + t562;
t571 = (t131 - t562) * t316;
t410 = t539 * t326 + t327 * t538;
t380 = t458 / 0.2e1 - t457 / 0.2e1;
t368 = t314 / 0.2e1 + t380;
t347 = sin(pkin(7));
t354 = cos(qJ(3));
t511 = t347 * t354;
t176 = t368 * t511;
t346 = sin(pkin(13));
t348 = sin(pkin(6));
t351 = sin(qJ(3));
t525 = cos(pkin(13));
t526 = cos(pkin(7));
t409 = t526 * t525;
t527 = cos(pkin(6));
t422 = t347 * t527;
t235 = -t354 * t422 + (t346 * t351 - t354 * t409) * t348;
t93 = t368 * t235;
t529 = -t93 * qJD(1) + t176 * qJD(2);
t570 = t468 * t410 + t529;
t443 = t511 / 0.2e1;
t177 = t314 * t443 - t380 * t511;
t512 = t347 * t351;
t302 = t350 * t512 - t353 * t526;
t303 = t350 * t526 + t353 * t512;
t411 = t539 * t302 + t303 * t538;
t569 = t177 * qJD(3) + t468 * t411;
t236 = t351 * t422 + (t346 * t354 + t351 * t409) * t348;
t366 = -t347 * t348 * t525 + t526 * t527;
t156 = t236 * t350 - t353 * t366;
t157 = t236 * t353 + t350 * t366;
t412 = t539 * t156 + t157 * t538;
t549 = -t314 / 0.2e1;
t94 = (t380 + t549) * t235;
t568 = t94 * qJD(3) + t468 * t412;
t395 = -t156 * t538 + t157 * t539;
t548 = -t316 / 0.2e1;
t557 = t338 / 0.2e1 + t337 / 0.2e1;
t95 = (t557 + t548) * t235;
t567 = t95 * qJD(3) - t395 * t468;
t178 = t316 * t443 - t511 * t557;
t394 = -t302 * t538 + t303 * t539;
t566 = t178 * qJD(3) - t394 * t468;
t547 = t316 / 0.2e1;
t367 = t547 + t557;
t175 = t367 * t511;
t92 = t367 * t235;
t528 = -t92 * qJD(1) + t175 * qJD(2);
t565 = -t393 * t468 + t528;
t564 = 0.2e1 * t316;
t247 = t468 * t314;
t309 = t316 ^ 2;
t467 = -t314 ^ 2 + t309;
t464 = t538 * pkin(4);
t340 = t464 + pkin(11);
t515 = t316 * t340;
t465 = t539 * pkin(4);
t341 = -t465 - pkin(5);
t516 = t314 * t341;
t558 = t536 / 0.2e1 + t515 / 0.2e1 - t516 / 0.2e1 + (t538 * t548 + t539 * t549) * pkin(4);
t345 = t352 ^ 2;
t551 = t349 ^ 2;
t224 = (-t551 / 0.2e1 + t345 / 0.2e1) * t316;
t504 = t349 * t352;
t454 = qJD(3) * t504;
t555 = t224 * t468 + t309 * t454;
t466 = -t345 + t551;
t198 = -0.2e1 * t316 * t454 + t466 * t468;
t544 = t340 / 0.2e1;
t543 = -t349 / 0.2e1;
t542 = t349 / 0.2e1;
t541 = -t352 / 0.2e1;
t540 = t352 / 0.2e1;
t537 = pkin(4) * t350;
t535 = t314 * pkin(11);
t534 = t316 * pkin(5);
t510 = t349 * t395;
t51 = -t235 * t352 + t510;
t533 = t51 * t314;
t503 = t352 * t395;
t52 = t235 * t349 + t503;
t532 = t52 * t314;
t508 = t349 * t394;
t159 = t352 * t511 + t508;
t524 = t159 * t314;
t501 = t352 * t394;
t160 = -t349 * t511 + t501;
t523 = t160 * t314;
t522 = t236 * t349;
t521 = t236 * t352;
t518 = t410 * t349;
t517 = t410 * t352;
t514 = t316 * t349;
t513 = t316 * t352;
t125 = t235 * t314;
t509 = t349 * t125;
t249 = -t534 + t535;
t231 = t249 + t537;
t507 = t349 * t231;
t225 = t349 * t314;
t505 = t349 * t351;
t502 = t352 * t125;
t500 = t352 * t231;
t228 = t352 * t314;
t213 = t314 * t537 - t316 * t342;
t495 = qJD(3) * t213;
t214 = -t314 * t342 - t316 * t537;
t494 = qJD(3) * t214;
t493 = qJD(3) * t314;
t492 = qJD(3) * t316;
t491 = qJD(3) * t342;
t490 = qJD(3) * t351;
t489 = qJD(3) * t353;
t488 = qJD(4) * t349;
t487 = qJD(4) * t352;
t486 = qJD(5) * t342;
t485 = qJD(5) * t349;
t484 = qJD(5) * t352;
t483 = qJD(6) * t349;
t482 = qJD(6) * t352;
t173 = t467 * t349;
t481 = t173 * qJD(3);
t174 = t467 * t352;
t480 = t174 * qJD(3);
t477 = t467 * qJD(3);
t476 = t224 * qJD(3);
t475 = t225 * qJD(3);
t223 = t228 * qJD(3);
t234 = t466 * t309;
t474 = t234 * qJD(3);
t473 = t236 * qJD(3);
t472 = t557 * qJD(3);
t332 = -t350 ^ 2 + t353 ^ 2;
t471 = t332 * qJD(3);
t470 = t350 * qJD(4);
t469 = t353 * qJD(4);
t463 = pkin(3) * t350 * qJD(3);
t462 = pkin(3) * t489;
t460 = t51 * t547;
t459 = t52 * t547;
t456 = t314 * t491;
t455 = t316 * t491;
t453 = qJD(6) * t314 * t316;
t254 = t314 * t492;
t452 = t347 * t490;
t451 = qJD(3) * t511;
t335 = t349 * t482;
t450 = t350 * t489;
t89 = t412 * t542;
t90 = t412 * t540;
t449 = t159 * t547;
t448 = t160 * t547;
t189 = t411 * t542;
t190 = t411 * t540;
t447 = -t514 / 0.2e1;
t446 = t514 / 0.2e1;
t445 = -t513 / 0.2e1;
t444 = t512 / 0.2e1;
t442 = -t510 / 0.2e1;
t441 = -t509 / 0.2e1;
t440 = -t508 / 0.2e1;
t261 = t314 * t511;
t439 = t261 * t543;
t437 = -t503 / 0.2e1;
t436 = -t502 / 0.2e1;
t435 = -t501 / 0.2e1;
t434 = t261 * t541;
t426 = t539 * qJD(4);
t425 = t539 * qJD(5);
t424 = t538 * qJD(4);
t423 = t538 * qJD(5);
t420 = t468 * t352;
t419 = pkin(4) * t423;
t418 = pkin(4) * t424;
t417 = -t465 / 0.2e1;
t413 = t236 / 0.2e1 + t412 * t547;
t408 = t349 * t420;
t406 = t468 * t504;
t405 = t515 - t516;
t404 = t316 * (qJD(6) + t493);
t403 = -t341 / 0.2e1 + t417;
t402 = t535 / 0.2e1 - t534 / 0.2e1;
t401 = t314 * t544 + t341 * t547;
t400 = t411 * t547 + t444;
t399 = t352 * t404;
t180 = -qJD(6) * t557 + t254;
t398 = pkin(5) / 0.2e1 + t403;
t397 = t249 / 0.2e1 + t402;
t396 = t408 * t564;
t376 = t235 * t316;
t369 = t376 / 0.2e1;
t360 = t352 * t369 + t460;
t1 = t316 * t442 + t360;
t375 = t354 * t316;
t371 = t347 * t375;
t364 = -t371 / 0.2e1;
t358 = t352 * t364 + t449;
t13 = t316 * t440 + t358;
t35 = t249 * t228 + t572;
t391 = t1 * qJD(1) + t13 * qJD(2) + t35 * qJD(3);
t15 = t394 * t447 + t358;
t3 = t395 * t447 + t360;
t33 = t500 * t314 + t572;
t390 = t3 * qJD(1) + t15 * qJD(2) + t33 * qJD(3);
t365 = t371 / 0.2e1;
t357 = t349 * t365 + t448;
t18 = t316 * t435 + t357;
t36 = -t249 * t225 + t571;
t370 = -t376 / 0.2e1;
t359 = t349 * t370 + t459;
t6 = t316 * t437 + t359;
t389 = t6 * qJD(1) + t18 * qJD(2) + t36 * qJD(3);
t20 = t394 * t445 + t357;
t34 = -t507 * t314 + t571;
t8 = t395 * t445 + t359;
t388 = t8 * qJD(1) + t20 * qJD(2) + t34 * qJD(3);
t47 = -t439 + t523 / 0.2e1 + t400 * t352;
t9 = t441 + t532 / 0.2e1 + t413 * t352;
t97 = -t131 * t314 - t410 * t513;
t387 = qJD(1) * t9 + qJD(2) * t47 - qJD(3) * t97;
t10 = t436 - t533 / 0.2e1 - t413 * t349;
t48 = -t434 - t524 / 0.2e1 - t400 * t349;
t96 = t130 * t314 + t410 * t514;
t385 = qJD(1) * t10 + qJD(2) * t48 - qJD(3) * t96;
t384 = t231 / 0.2e1 + t401;
t355 = (t544 - t464 / 0.2e1 - pkin(11) / 0.2e1) * t316 + (-pkin(5) / 0.2e1 + t403) * t314;
t37 = t349 * t355;
t383 = t37 * qJD(3);
t382 = t395 * t548;
t381 = t394 * t548;
t270 = t398 * t349;
t71 = t397 * t352;
t378 = pkin(5) * t485 + qJD(3) * t71 + qJD(4) * t270;
t271 = t398 * t352;
t69 = t397 * t349;
t377 = pkin(5) * t484 - qJD(3) * t69 + qJD(4) * t271;
t374 = (-t424 - t423) * pkin(4);
t373 = t316 * t376;
t372 = t316 * t375;
t55 = t352 * t384;
t363 = qJD(3) * t55 - t341 * t488;
t53 = t349 * t384;
t362 = -qJD(3) * t53 - t341 * t487;
t40 = t352 * t355;
t361 = -t40 * qJD(3) - t349 * t418;
t330 = t349 * t419;
t324 = t466 * qJD(6);
t273 = pkin(5) * t541 + t341 * t540 + t352 * t417;
t272 = pkin(5) * t543 + t341 * t542 + t349 * t417;
t253 = t352 * t365;
t252 = t349 * t364;
t232 = t468 * t557;
t221 = t224 * qJD(6);
t194 = t223 + t482;
t193 = -t475 - t483;
t165 = t176 * qJD(3);
t163 = t175 * qJD(3);
t162 = t406 - t476;
t161 = -t408 + t476;
t158 = 0.2e1 * t349 * t399;
t136 = -t254 * t345 - t221;
t129 = t235 * t353;
t127 = t235 * t350;
t124 = t352 * t370;
t123 = t349 * t369;
t120 = qJD(6) * t228 - t480;
t119 = -qJD(6) * t225 + t481;
t118 = -t411 * t541 + t190;
t117 = 0.2e1 * t190;
t116 = -t411 * t543 + t189;
t115 = 0.2e1 * t189;
t114 = t394 * t541 + t435;
t109 = t508 / 0.2e1 + t394 * t542;
t106 = -t221 + (t345 * t492 - t408) * t314;
t105 = -t349 * t561 + t480;
t104 = -t316 * t420 - t481;
t91 = (qJD(6) - t493) * t504 * t564 + t466 * t247;
t75 = t93 * qJD(3);
t73 = t92 * qJD(3);
t72 = t249 * t540 - t352 * t402 + t518;
t70 = t249 * t543 + t349 * t402 + t517;
t56 = t518 / 0.2e1 - t410 * t543 + t500 / 0.2e1 - t401 * t352;
t54 = t517 / 0.2e1 - t410 * t541 - t507 / 0.2e1 + t401 * t349;
t50 = -t523 / 0.2e1 + t411 * t445 - t439 + t352 * t444;
t49 = t524 / 0.2e1 + t411 * t446 - t434 - t347 * t505 / 0.2e1;
t39 = t563 + pkin(11) * t513 / 0.2e1 + t558 * t352;
t38 = pkin(11) * t446 + t558 * t349 - t562;
t32 = -t412 * t541 + t90;
t31 = 0.2e1 * t90;
t30 = -t412 * t543 + t89;
t29 = 0.2e1 * t89;
t28 = t395 * t541 + t437;
t23 = t510 / 0.2e1 + t395 * t542;
t19 = t352 * t381 + t252 + t448;
t17 = t252 + (t160 / 0.2e1 + t435) * t316;
t16 = t349 * t381 + t253 + t449;
t14 = t253 + (t159 / 0.2e1 + t440) * t316;
t12 = -t532 / 0.2e1 + t412 * t445 + t441 + t521 / 0.2e1;
t11 = t533 / 0.2e1 + t412 * t446 + t436 - t522 / 0.2e1;
t7 = t352 * t382 + t123 + t459;
t5 = t123 + (t52 / 0.2e1 + t437) * t316;
t4 = t349 * t382 + t124 + t460;
t2 = t124 + (t51 / 0.2e1 + t442) * t316;
t21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, -t473, t235 * qJD(3), 0, 0, 0, 0, 0, qJD(4) * t127 - t353 * t473, qJD(4) * t129 + t350 * t473, 0, 0, 0, 0, 0, t314 * t473 + t468 * t95, -t316 * t473 + t468 * t94, 0, 0, 0, 0, 0 ((-t509 + t521) * t314 - t349 * t373) * qJD(3) + t4 * qJD(4) + t2 * qJD(5) + t12 * qJD(6) (-(t502 + t522) * t314 - t352 * t373) * qJD(3) + t7 * qJD(4) + t5 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t127 - qJD(4) * t157, qJD(3) * t129 + qJD(4) * t156, 0, 0, 0, 0, 0, t567, t568, 0, 0, 0, 0, 0, qJD(3) * t4 + qJD(5) * t28 + qJD(6) * t30 - t395 * t487, qJD(3) * t7 + qJD(5) * t23 + qJD(6) * t32 + t395 * t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t567, t568, 0, 0, 0, 0, 0, qJD(3) * t2 + qJD(4) * t28 + qJD(6) * t29 - t395 * t484, qJD(3) * t5 + qJD(4) * t23 + qJD(6) * t31 + t395 * t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t12 + qJD(4) * t30 + qJD(5) * t29 - qJD(6) * t52, qJD(3) * t11 + qJD(4) * t32 + qJD(5) * t31 + qJD(6) * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, -t452, -t451, 0, 0, 0, 0, 0 (-t351 * t489 - t354 * t470) * t347 (t350 * t490 - t354 * t469) * t347, 0, 0, 0, 0, 0, t178 * t468 + t314 * t452, t177 * t468 - t316 * t452, 0, 0, 0, 0, 0 (t261 * t225 + (t228 * t351 + t349 * t372) * t347) * qJD(3) + t16 * qJD(4) + t14 * qJD(5) + t50 * qJD(6) (t261 * t228 + (-t314 * t505 + t352 * t372) * t347) * qJD(3) + t19 * qJD(4) + t17 * qJD(5) + t49 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303 * qJD(4) - t350 * t451, t302 * qJD(4) - t353 * t451, 0, 0, 0, 0, 0, t566, t569, 0, 0, 0, 0, 0, qJD(3) * t16 + qJD(5) * t114 + qJD(6) * t116 - t394 * t487, qJD(3) * t19 + qJD(5) * t109 + qJD(6) * t118 + t394 * t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t566, t569, 0, 0, 0, 0, 0, qJD(3) * t14 + qJD(4) * t114 + qJD(6) * t115 - t394 * t484, qJD(3) * t17 + qJD(4) * t109 + qJD(6) * t117 + t394 * t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t50 + qJD(4) * t116 + qJD(5) * t115 - qJD(6) * t160, qJD(3) * t49 + qJD(4) * t118 + qJD(5) * t117 + qJD(6) * t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468 * t92, -t468 * t93, 0, 0, 0, 0, 0, qJD(4) * t3 + qJD(5) * t1 - qJD(6) * t9, qJD(4) * t8 + qJD(5) * t6 - qJD(6) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468 * t175, t468 * t176, 0, 0, 0, 0, 0, qJD(4) * t15 + qJD(5) * t13 - qJD(6) * t47, qJD(4) * t20 + qJD(5) * t18 - qJD(6) * t48; 0, 0, 0, 0, 0, t350 * t469, t332 * qJD(4), 0, 0, 0, -pkin(3) * t470, -pkin(3) * t469, t407, -t468 * t467, 0, 0, 0, qJD(4) * t213 - t316 * t486, qJD(4) * t214 - t314 * t486, -t309 * t335 + t345 * t407, t234 * qJD(6) - t314 * t396, t174 * t468 + t349 * t453, -t173 * t468 + t352 * t453, -t407, qJD(4) * t33 + qJD(5) * t35 + qJD(6) * t97, qJD(4) * t34 + qJD(5) * t36 + qJD(6) * t96; 0, 0, 0, 0, 0, t450, t471, t469, -t470, 0, -pkin(9) * t469 - t463, pkin(9) * t470 - t462, t254, -t477, -t247, t561, 0, t495 + t565, t494 + t570, t106, t91, t105, t104, -t180 (t349 * t405 - t562) * qJD(4) + t38 * qJD(5) + t56 * qJD(6) + t390 (t352 * t405 + t563) * qJD(4) + t39 * qJD(5) + t54 * qJD(6) + t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t477, -t247, t561, 0, -t455 + t565, -t456 + t570, t106, t91, t105, t104, -t180, t38 * qJD(4) + (t349 * t414 - t562) * qJD(5) + t72 * qJD(6) + t391, t39 * qJD(4) + (t352 * t414 + t563) * qJD(5) + t70 * qJD(6) + t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t555, t406 * t564 + t474, t349 * t404, t399, t232, qJD(4) * t56 + qJD(5) * t72 - qJD(6) * t131 - t387, qJD(4) * t54 + qJD(5) * t70 + qJD(6) * t130 - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t75, 0, 0, 0, 0, 0, -qJD(3) * t3, -qJD(3) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t165, 0, 0, 0, 0, 0, -qJD(3) * t15, -qJD(3) * t20; 0, 0, 0, 0, 0, -t450, -t471, 0, 0, 0, t463, t462, -t254, t477, 0, 0, 0, -t495 - t528, -t494 - t529, t136, t158, t120, t119, t180, qJD(5) * t37 - qJD(6) * t55 - t390, qJD(5) * t40 + qJD(6) * t53 - t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -pkin(4) * t425, t335, -t324, 0, 0, 0, t341 * t483 - t352 * t419, t341 * t482 + t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374 (-t426 - t425) * pkin(4), t335, -t324, 0, 0, 0, t272 * qJD(6) + t352 * t374 + t383, t273 * qJD(6) + t330 - t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t198, t194, t193, -t472, qJD(5) * t272 - t340 * t482 - t363, qJD(5) * t273 + t340 * t483 - t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t75, 0, 0, 0, 0, 0, -qJD(3) * t1, -qJD(3) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t165, 0, 0, 0, 0, 0, -qJD(3) * t13, -qJD(3) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t477, 0, 0, 0, t455 - t528, t456 - t529, t136, t158, t120, t119, t180, -qJD(4) * t37 - qJD(6) * t71 - t391, -qJD(4) * t40 + qJD(6) * t69 - t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, pkin(4) * t426, t335, -t324, 0, 0, 0, -t270 * qJD(6) + t352 * t418 - t383, -t271 * qJD(6) + t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, -t324, 0, 0, 0, -pkin(5) * t483, -pkin(5) * t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t198, t194, t193, -t472, -pkin(11) * t482 - t378, pkin(11) * t483 - t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t9, qJD(3) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t47, qJD(3) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t555, -t396 - t474, -t228 * t468 - t254 * t349, t225 * t468 - t254 * t352, t232, qJD(4) * t55 + qJD(5) * t71 + t387, -qJD(4) * t53 - qJD(5) * t69 + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t198, -t223, t475, t472, qJD(5) * t270 + t363, qJD(5) * t271 + t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t198, -t223, t475, t472, t378, t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
