% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6PPRRRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,d6,theta1,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6PPRRRR1_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR1_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR1_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRR1_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRR1_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRRRR1_invdynf_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:42:35
% EndTime: 2019-05-04 20:42:43
% DurationCPUTime: 8.89s
% Computational Cost: add. (68541->313), mult. (128375->511), div. (0->0), fcn. (104934->16), ass. (0->283)
t2146 = sin(pkin(12));
t2150 = cos(pkin(12));
t2125 = -g(1) * t2150 - g(2) * t2146;
t2145 = sin(pkin(13));
t2149 = cos(pkin(13));
t2143 = -g(3) + qJDD(1);
t2148 = sin(pkin(6));
t2215 = t2143 * t2148;
t2124 = g(1) * t2146 - g(2) * t2150;
t2152 = cos(pkin(6));
t2217 = t2124 * t2152;
t2170 = t2215 + t2217;
t2084 = -t2145 * t2125 + t2149 * t2170;
t2147 = sin(pkin(7));
t2151 = cos(pkin(7));
t2202 = t2143 * t2152 + qJDD(2);
t2218 = t2124 * t2148;
t2168 = t2202 - t2218;
t2231 = t2084 * t2151 + t2147 * t2168;
t2155 = sin(qJ(5));
t2159 = cos(qJ(5));
t2160 = cos(qJ(4));
t2222 = qJD(3) * t2160;
t2156 = sin(qJ(4));
t2223 = qJD(3) * t2156;
t2111 = t2155 * t2223 - t2159 * t2222;
t2106 = qJD(6) + t2111;
t2230 = qJD(6) + t2106;
t2113 = (t2155 * t2160 + t2156 * t2159) * qJD(3);
t2140 = qJD(4) + qJD(5);
t2154 = sin(qJ(6));
t2158 = cos(qJ(6));
t2097 = t2113 * t2154 - t2158 * t2140;
t2229 = t2097 ^ 2;
t2099 = t2113 * t2158 + t2140 * t2154;
t2228 = t2099 ^ 2;
t2227 = t2106 ^ 2;
t2226 = t2111 ^ 2;
t2225 = t2113 ^ 2;
t2224 = t2140 ^ 2;
t2220 = t2097 * t2099;
t2219 = t2111 * t2113;
t2142 = t2160 ^ 2;
t2163 = qJD(3) ^ 2;
t2216 = t2142 * t2163;
t2085 = t2149 * t2125 + t2145 * t2170;
t2157 = sin(qJ(3));
t2161 = cos(qJ(3));
t2048 = t2161 * t2085 + t2157 * t2231;
t2044 = -pkin(3) * t2163 + qJDD(3) * pkin(9) + t2048;
t2214 = t2156 * t2044;
t2213 = t2156 * t2163;
t2212 = qJD(5) - t2140;
t2211 = qJD(6) - t2106;
t2063 = -t2147 * t2084 + t2151 * t2168;
t2024 = t2160 * t2044 + t2156 * t2063;
t2139 = t2160 * qJDD(3);
t2207 = qJD(4) * t2223;
t2118 = t2139 - t2207;
t2128 = qJD(4) * pkin(4) - pkin(10) * t2223;
t2017 = -pkin(4) * t2216 + pkin(10) * t2118 - qJD(4) * t2128 + t2024;
t2206 = qJD(4) * t2222;
t2209 = t2156 * qJDD(3);
t2117 = t2206 + t2209;
t2164 = qJDD(4) * pkin(4) - t2117 * pkin(10) - t2214 + (pkin(10) * qJD(3) * qJD(4) + pkin(4) * t2213 + t2063) * t2160;
t1991 = t2159 * t2017 + t2155 * t2164;
t2141 = t2156 ^ 2;
t2210 = t2141 + t2142;
t2208 = qJDD(4) + qJDD(5);
t1990 = -t2155 * t2017 + t2159 * t2164;
t2172 = -t2159 * t2117 - t2155 * t2118;
t2076 = -qJD(5) * t2111 - t2172;
t2205 = t2140 * t2111 - t2076;
t2204 = -t2154 * t2076 + t2158 * t2208;
t2203 = t2155 * t2117 - t2159 * t2118;
t2201 = t2157 * t2085 - t2161 * t2231;
t2091 = pkin(5) * t2111 - pkin(11) * t2113;
t1989 = -pkin(5) * t2224 + pkin(11) * t2208 - t2111 * t2091 + t1991;
t2043 = -qJDD(3) * pkin(3) - t2163 * pkin(9) + t2201;
t2031 = -t2118 * pkin(4) - pkin(10) * t2216 + t2128 * t2223 + t2043;
t2065 = (qJD(5) + t2140) * t2113 + t2203;
t2007 = pkin(5) * t2065 + pkin(11) * t2205 + t2031;
t1972 = -t1989 * t2154 + t2007 * t2158;
t1973 = t1989 * t2158 + t2007 * t2154;
t1952 = -t1972 * t2154 + t1973 * t2158;
t1988 = -pkin(5) * t2208 - pkin(11) * t2224 + t2113 * t2091 - t1990;
t1944 = t1952 * t2155 - t1988 * t2159;
t1945 = t1952 * t2159 + t1988 * t2155;
t1929 = t1944 * t2160 + t1945 * t2156;
t1930 = -t1944 * t2156 + t1945 * t2160;
t1951 = t1972 * t2158 + t1973 * t2154;
t2199 = t1930 * t2157 - t1951 * t2161;
t1924 = -t2147 * t1929 + t2151 * t2199;
t1927 = t1930 * t2161 + t1951 * t2157;
t2200 = t1924 * t2149 + t1927 * t2145;
t1968 = t1990 * t2159 + t1991 * t2155;
t1969 = -t1990 * t2155 + t1991 * t2159;
t1947 = t1968 * t2160 + t1969 * t2156;
t1948 = -t1968 * t2156 + t1969 * t2160;
t2197 = t1948 * t2157 - t2031 * t2161;
t1934 = -t2147 * t1947 + t2151 * t2197;
t1946 = t1948 * t2161 + t2031 * t2157;
t2198 = t1934 * t2149 + t1946 * t2145;
t2037 = -t2099 * t2211 + t2204;
t2167 = -t2158 * t2076 - t2154 * t2208;
t2039 = t2097 * t2211 + t2167;
t2011 = t2037 * t2158 - t2039 * t2154;
t2054 = -t2228 - t2229;
t1998 = t2011 * t2155 - t2054 * t2159;
t1999 = t2011 * t2159 + t2054 * t2155;
t1976 = t1998 * t2160 + t1999 * t2156;
t1977 = -t1998 * t2156 + t1999 * t2160;
t2010 = t2037 * t2154 + t2039 * t2158;
t2192 = t1977 * t2157 - t2010 * t2161;
t1950 = -t2147 * t1976 + t2151 * t2192;
t1963 = t1977 * t2161 + t2010 * t2157;
t2196 = t1950 * t2149 + t1963 * t2145;
t2166 = -qJD(5) * t2113 - qJDD(6) - t2203;
t2051 = -t2166 - t2220;
t2062 = -t2227 - t2229;
t2026 = -t2051 * t2154 + t2062 * t2158;
t2036 = t2099 * t2230 - t2204;
t2003 = t2026 * t2155 - t2036 * t2159;
t2004 = t2026 * t2159 + t2036 * t2155;
t1981 = t2003 * t2160 + t2004 * t2156;
t1982 = -t2003 * t2156 + t2004 * t2160;
t2025 = t2051 * t2158 + t2062 * t2154;
t2190 = t1982 * t2157 - t2025 * t2161;
t1957 = -t2147 * t1981 + t2151 * t2190;
t1974 = t1982 * t2161 + t2025 * t2157;
t2195 = t1957 * t2149 + t1974 * t2145;
t2052 = t2166 - t2220;
t2071 = -t2227 - t2228;
t2028 = t2052 * t2158 - t2071 * t2154;
t2038 = -t2097 * t2230 - t2167;
t2005 = t2028 * t2155 - t2038 * t2159;
t2006 = t2028 * t2159 + t2038 * t2155;
t1983 = t2005 * t2160 + t2006 * t2156;
t1984 = -t2005 * t2156 + t2006 * t2160;
t2027 = t2052 * t2154 + t2071 * t2158;
t2189 = t1984 * t2157 - t2027 * t2161;
t1959 = -t2147 * t1983 + t2151 * t2189;
t1975 = t1984 * t2161 + t2027 * t2157;
t2194 = t1959 * t2149 + t1975 * t2145;
t2023 = t2160 * t2063 - t2214;
t1992 = t2023 * t2160 + t2024 * t2156;
t1993 = -t2023 * t2156 + t2024 * t2160;
t2188 = t1993 * t2157 - t2043 * t2161;
t1965 = -t2147 * t1992 + t2151 * t2188;
t1987 = t1993 * t2161 + t2043 * t2157;
t2193 = t1965 * t2149 + t1987 * t2145;
t2066 = -t2113 * t2212 - t2203;
t2068 = t2111 * t2212 + t2172;
t2032 = t2066 * t2155 + t2068 * t2159;
t2033 = t2066 * t2159 - t2068 * t2155;
t2008 = t2032 * t2160 + t2033 * t2156;
t2009 = -t2032 * t2156 + t2033 * t2160;
t2077 = -t2225 - t2226;
t2184 = t2009 * t2157 - t2077 * t2161;
t1980 = -t2147 * t2008 + t2151 * t2184;
t2000 = t2009 * t2161 + t2077 * t2157;
t2191 = t1980 * t2149 + t2000 * t2145;
t2086 = -t2224 - t2226;
t2087 = t2208 - t2219;
t2055 = t2086 * t2155 + t2087 * t2159;
t2056 = t2086 * t2159 - t2087 * t2155;
t2029 = t2055 * t2160 + t2056 * t2156;
t2030 = -t2055 * t2156 + t2056 * t2160;
t2183 = t2030 * t2157 - t2065 * t2161;
t1995 = -t2147 * t2029 + t2151 * t2183;
t2013 = t2030 * t2161 + t2065 * t2157;
t2187 = t1995 * t2149 + t2013 * t2145;
t2088 = -t2208 - t2219;
t2104 = -t2224 - t2225;
t2069 = t2088 * t2155 + t2104 * t2159;
t2070 = t2088 * t2159 - t2104 * t2155;
t2034 = t2069 * t2160 + t2070 * t2156;
t2035 = -t2069 * t2156 + t2070 * t2160;
t2182 = t2035 * t2157 + t2161 * t2205;
t1997 = -t2147 * t2034 + t2151 * t2182;
t2018 = t2035 * t2161 - t2157 * t2205;
t2186 = t1997 * t2149 + t2018 * t2145;
t2181 = t2048 * t2157 - t2161 * t2201;
t2002 = -t2147 * t2063 + t2151 * t2181;
t2012 = t2048 * t2161 + t2157 * t2201;
t2185 = t2002 * t2149 + t2012 * t2145;
t2131 = t2160 * t2213;
t2126 = qJDD(4) + t2131;
t2162 = qJD(4) ^ 2;
t2130 = -t2162 - t2216;
t2100 = t2126 * t2160 + t2130 * t2156;
t2102 = -t2126 * t2156 + t2130 * t2160;
t2119 = t2139 - 0.2e1 * t2207;
t2176 = t2102 * t2157 + t2119 * t2161;
t2059 = -t2147 * t2100 + t2151 * t2176;
t2082 = t2102 * t2161 - t2119 * t2157;
t2180 = t2059 * t2149 + t2082 * t2145;
t2127 = -qJDD(4) + t2131;
t2129 = -t2141 * t2163 - t2162;
t2101 = t2127 * t2156 + t2129 * t2160;
t2103 = t2127 * t2160 - t2129 * t2156;
t2116 = 0.2e1 * t2206 + t2209;
t2175 = t2103 * t2157 - t2116 * t2161;
t2060 = -t2147 * t2101 + t2151 * t2175;
t2083 = t2103 * t2161 + t2116 * t2157;
t2179 = t2060 * t2149 + t2083 * t2145;
t2178 = t2084 * t2149 + t2085 * t2145;
t2120 = t2210 * qJDD(3);
t2123 = t2210 * t2163;
t2171 = t2120 * t2157 + t2123 * t2161;
t2093 = t2171 * t2151;
t2096 = t2120 * t2161 - t2123 * t2157;
t2177 = t2093 * t2149 + t2096 * t2145;
t2122 = -qJDD(3) * t2157 - t2161 * t2163;
t2109 = t2122 * t2151;
t2169 = qJDD(3) * t2161 - t2157 * t2163;
t2174 = t2109 * t2149 - t2145 * t2169;
t2110 = t2169 * t2151;
t2173 = t2110 * t2149 + t2122 * t2145;
t2108 = t2169 * t2147;
t2107 = t2122 * t2147;
t2092 = t2171 * t2147;
t2090 = -t2110 * t2145 + t2122 * t2149;
t2089 = -t2109 * t2145 - t2149 * t2169;
t2075 = -t2148 * t2108 + t2152 * t2173;
t2074 = -t2148 * t2107 + t2152 * t2174;
t2073 = t2152 * t2108 + t2148 * t2173;
t2072 = t2152 * t2107 + t2148 * t2174;
t2064 = -t2093 * t2145 + t2096 * t2149;
t2058 = t2151 * t2101 + t2147 * t2175;
t2057 = t2151 * t2100 + t2147 * t2176;
t2053 = -t2084 * t2145 + t2085 * t2149;
t2050 = -t2148 * t2092 + t2152 * t2177;
t2049 = t2152 * t2092 + t2148 * t2177;
t2046 = -t2148 * (qJDD(2) - t2218) + (t2178 - t2215) * t2152;
t2045 = t2152 * t2202 + (t2178 - t2217) * t2148;
t2042 = -t2060 * t2145 + t2083 * t2149;
t2041 = -t2059 * t2145 + t2082 * t2149;
t2022 = -t2148 * t2058 + t2152 * t2179;
t2021 = -t2148 * t2057 + t2152 * t2180;
t2020 = t2152 * t2058 + t2148 * t2179;
t2019 = t2152 * t2057 + t2148 * t2180;
t2001 = t2151 * t2063 + t2147 * t2181;
t1996 = t2151 * t2034 + t2147 * t2182;
t1994 = t2151 * t2029 + t2147 * t2183;
t1986 = -t2002 * t2145 + t2012 * t2149;
t1985 = -t1997 * t2145 + t2018 * t2149;
t1979 = t2151 * t2008 + t2147 * t2184;
t1978 = -t1995 * t2145 + t2013 * t2149;
t1971 = -t2148 * t2001 + t2152 * t2185;
t1970 = t2152 * t2001 + t2148 * t2185;
t1967 = -t2148 * t1996 + t2152 * t2186;
t1966 = t2152 * t1996 + t2148 * t2186;
t1964 = t2151 * t1992 + t2147 * t2188;
t1962 = -t1980 * t2145 + t2000 * t2149;
t1961 = -t2148 * t1994 + t2152 * t2187;
t1960 = t2152 * t1994 + t2148 * t2187;
t1958 = t2151 * t1983 + t2147 * t2189;
t1956 = t2151 * t1981 + t2147 * t2190;
t1955 = -t1965 * t2145 + t1987 * t2149;
t1954 = -t2148 * t1979 + t2152 * t2191;
t1953 = t2152 * t1979 + t2148 * t2191;
t1949 = t2151 * t1976 + t2147 * t2192;
t1943 = -t1959 * t2145 + t1975 * t2149;
t1942 = -t1957 * t2145 + t1974 * t2149;
t1941 = -t2148 * t1964 + t2152 * t2193;
t1940 = t2152 * t1964 + t2148 * t2193;
t1939 = -t1950 * t2145 + t1963 * t2149;
t1938 = -t2148 * t1958 + t2152 * t2194;
t1937 = t2152 * t1958 + t2148 * t2194;
t1936 = -t2148 * t1956 + t2152 * t2195;
t1935 = t2152 * t1956 + t2148 * t2195;
t1933 = t2151 * t1947 + t2147 * t2197;
t1932 = -t2148 * t1949 + t2152 * t2196;
t1931 = t2152 * t1949 + t2148 * t2196;
t1928 = -t1934 * t2145 + t1946 * t2149;
t1926 = -t2148 * t1933 + t2152 * t2198;
t1925 = t2152 * t1933 + t2148 * t2198;
t1923 = t2151 * t1929 + t2147 * t2199;
t1922 = -t1924 * t2145 + t1927 * t2149;
t1921 = -t2148 * t1923 + t2152 * t2200;
t1920 = t2152 * t1923 + t2148 * t2200;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2124 * t2146 + t2125 * t2150, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2046 * t2146 + t2053 * t2150, 0, 0, 0, 0, 0, 0, -t2075 * t2146 + t2090 * t2150, -t2074 * t2146 + t2089 * t2150, 0, -t1971 * t2146 + t1986 * t2150, 0, 0, 0, 0, 0, 0, -t2021 * t2146 + t2041 * t2150, -t2022 * t2146 + t2042 * t2150, -t2050 * t2146 + t2064 * t2150, -t1941 * t2146 + t1955 * t2150, 0, 0, 0, 0, 0, 0, -t1961 * t2146 + t1978 * t2150, -t1967 * t2146 + t1985 * t2150, -t1954 * t2146 + t1962 * t2150, -t1926 * t2146 + t1928 * t2150, 0, 0, 0, 0, 0, 0, -t1936 * t2146 + t1942 * t2150, -t1938 * t2146 + t1943 * t2150, -t1932 * t2146 + t1939 * t2150, -t1921 * t2146 + t1922 * t2150; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2124 * t2150 + t2125 * t2146, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046 * t2150 + t2053 * t2146, 0, 0, 0, 0, 0, 0, t2075 * t2150 + t2090 * t2146, t2074 * t2150 + t2089 * t2146, 0, t1971 * t2150 + t1986 * t2146, 0, 0, 0, 0, 0, 0, t2021 * t2150 + t2041 * t2146, t2022 * t2150 + t2042 * t2146, t2050 * t2150 + t2064 * t2146, t1941 * t2150 + t1955 * t2146, 0, 0, 0, 0, 0, 0, t1961 * t2150 + t1978 * t2146, t1967 * t2150 + t1985 * t2146, t1954 * t2150 + t1962 * t2146, t1926 * t2150 + t1928 * t2146, 0, 0, 0, 0, 0, 0, t1936 * t2150 + t1942 * t2146, t1938 * t2150 + t1943 * t2146, t1932 * t2150 + t1939 * t2146, t1921 * t2150 + t1922 * t2146; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2143, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2045, 0, 0, 0, 0, 0, 0, t2073, t2072, 0, t1970, 0, 0, 0, 0, 0, 0, t2019, t2020, t2049, t1940, 0, 0, 0, 0, 0, 0, t1960, t1966, t1953, t1925, 0, 0, 0, 0, 0, 0, t1935, t1937, t1931, t1920; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2053, 0, 0, 0, 0, 0, 0, t2090, t2089, 0, t1986, 0, 0, 0, 0, 0, 0, t2041, t2042, t2064, t1955, 0, 0, 0, 0, 0, 0, t1978, t1985, t1962, t1928, 0, 0, 0, 0, 0, 0, t1942, t1943, t1939, t1922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2124, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046, 0, 0, 0, 0, 0, 0, t2075, t2074, 0, t1971, 0, 0, 0, 0, 0, 0, t2021, t2022, t2050, t1941, 0, 0, 0, 0, 0, 0, t1961, t1967, t1954, t1926, 0, 0, 0, 0, 0, 0, t1936, t1938, t1932, t1921; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2143, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2045, 0, 0, 0, 0, 0, 0, t2073, t2072, 0, t1970, 0, 0, 0, 0, 0, 0, t2019, t2020, t2049, t1940, 0, 0, 0, 0, 0, 0, t1960, t1966, t1953, t1925, 0, 0, 0, 0, 0, 0, t1935, t1937, t1931, t1920; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2085, 0, 0, 0, 0, 0, 0, t2122, -t2169, 0, t2012, 0, 0, 0, 0, 0, 0, t2082, t2083, t2096, t1987, 0, 0, 0, 0, 0, 0, t2013, t2018, t2000, t1946, 0, 0, 0, 0, 0, 0, t1974, t1975, t1963, t1927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2084, 0, 0, 0, 0, 0, 0, t2110, t2109, 0, t2002, 0, 0, 0, 0, 0, 0, t2059, t2060, t2093, t1965, 0, 0, 0, 0, 0, 0, t1995, t1997, t1980, t1934, 0, 0, 0, 0, 0, 0, t1957, t1959, t1950, t1924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2168, 0, 0, 0, 0, 0, 0, t2108, t2107, 0, t2001, 0, 0, 0, 0, 0, 0, t2057, t2058, t2092, t1964, 0, 0, 0, 0, 0, 0, t1994, t1996, t1979, t1933, 0, 0, 0, 0, 0, 0, t1956, t1958, t1949, t1923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2163, -qJDD(3), 0, t2048, 0, 0, 0, 0, 0, 0, t2102, t2103, t2120, t1993, 0, 0, 0, 0, 0, 0, t2030, t2035, t2009, t1948, 0, 0, 0, 0, 0, 0, t1982, t1984, t1977, t1930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t2163, 0, -t2201, 0, 0, 0, 0, 0, 0, t2119, -t2116, t2123, -t2043, 0, 0, 0, 0, 0, 0, -t2065, t2205, -t2077, -t2031, 0, 0, 0, 0, 0, 0, -t2025, -t2027, -t2010, -t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2063, 0, 0, 0, 0, 0, 0, t2100, t2101, 0, t1992, 0, 0, 0, 0, 0, 0, t2029, t2034, t2008, t1947, 0, 0, 0, 0, 0, 0, t1981, t1983, t1976, t1929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2130, t2127, t2139, t2024, 0, 0, 0, 0, 0, 0, t2056, t2070, t2033, t1969, 0, 0, 0, 0, 0, 0, t2004, t2006, t1999, t1945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, t2129, -t2209, t2023, 0, 0, 0, 0, 0, 0, t2055, t2069, t2032, t1968, 0, 0, 0, 0, 0, 0, t2003, t2005, t1998, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2119, t2116, -t2123, t2043, 0, 0, 0, 0, 0, 0, t2065, -t2205, t2077, t2031, 0, 0, 0, 0, 0, 0, t2025, t2027, t2010, t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2086, t2088, t2066, t1991, 0, 0, 0, 0, 0, 0, t2026, t2028, t2011, t1952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2087, t2104, t2068, t1990, 0, 0, 0, 0, 0, 0, -t2036, -t2038, -t2054, -t1988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2065, -t2205, t2077, t2031, 0, 0, 0, 0, 0, 0, t2025, t2027, t2010, t1951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2062, t2052, t2037, t1973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2051, t2071, t2039, t1972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2036, t2038, t2054, t1988;];
f_new_reg  = t1;
