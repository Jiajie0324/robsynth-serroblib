% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP1_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:57:06
% EndTime: 2019-03-09 05:57:15
% DurationCPUTime: 3.14s
% Computational Cost: add. (3835->247), mult. (8110->402), div. (0->0), fcn. (7295->8), ass. (0->157)
t109 = sin(qJ(5));
t106 = t109 ^ 2;
t112 = cos(qJ(5));
t107 = t112 ^ 2;
t209 = t106 + t107;
t113 = cos(qJ(3));
t193 = cos(qJ(4));
t149 = t193 * t113;
t139 = qJD(3) * t149;
t145 = qJD(4) * t193;
t110 = sin(qJ(4));
t111 = sin(qJ(3));
t169 = t110 * t111;
t202 = qJD(3) + qJD(4);
t55 = -t113 * t145 + t169 * t202 - t139;
t176 = t106 * t55;
t52 = t107 * t55;
t28 = -t52 - t176;
t141 = pkin(3) * t145;
t208 = t209 * t141;
t168 = t110 * t113;
t85 = t111 * t193 + t168;
t119 = qJ(6) * t55 + (pkin(5) * qJD(5) - qJD(6)) * t85;
t170 = qJD(5) * t85;
t125 = -pkin(5) * t55 + qJ(6) * t170;
t207 = -t109 * t125 - t112 * t119;
t56 = t202 * t85;
t84 = -t149 + t169;
t206 = t55 * t84 - t56 * t85;
t166 = t106 - t107;
t203 = t166 * qJD(5);
t164 = t111 * qJD(3);
t158 = pkin(3) * t164;
t196 = t56 * pkin(4);
t120 = pkin(9) * t55 + t158 + t196;
t99 = -cos(pkin(10)) * pkin(1) - pkin(2);
t88 = -pkin(3) * t113 + t99;
t118 = -pkin(4) * t84 + pkin(9) * t85 - t88;
t98 = sin(pkin(10)) * pkin(1) + pkin(7);
t194 = pkin(8) + t98;
t77 = t194 * t111;
t78 = t194 * t113;
t48 = -t110 * t77 + t193 * t78;
t186 = -t109 * t118 + t112 * t48;
t146 = qJD(3) * t194;
t165 = qJD(4) * t110;
t72 = t111 * t146;
t19 = t145 * t77 + t146 * t168 + t165 * t78 + t193 * t72;
t6 = -qJD(5) * t186 + t109 * t19 + t112 * t120;
t201 = -0.2e1 * t203;
t200 = 0.2e1 * qJD(3);
t199 = 0.2e1 * qJD(6);
t198 = pkin(9) * t56;
t197 = pkin(9) * t84;
t195 = t56 * pkin(5);
t20 = qJD(4) * t48 - t110 * t72 + t139 * t194;
t47 = t110 * t78 + t193 * t77;
t192 = t47 * t20;
t191 = t84 * t56;
t190 = t85 * t55;
t105 = qJD(5) * t112;
t43 = t47 * t105;
t189 = t109 * t20 + t43;
t173 = t112 * t56;
t174 = t112 * t55;
t188 = t173 * t85 - t174 * t84;
t185 = t28 * pkin(9);
t157 = pkin(3) * t165;
t104 = qJD(5) * t109;
t74 = pkin(5) * t104 - qJ(6) * t105 - qJD(6) * t109;
t57 = t74 + t157;
t184 = -t57 - t74;
t101 = pkin(3) * t110 + pkin(9);
t183 = t208 * t101;
t182 = t208 * pkin(9);
t161 = t193 * pkin(3);
t102 = -t161 - pkin(4);
t181 = t102 * t105 + t109 * t157;
t180 = pkin(3) * qJD(4);
t178 = t101 * t56;
t177 = t101 * t84;
t175 = t110 * t47;
t172 = t56 * qJ(6);
t25 = (pkin(5) * t109 - qJ(6) * t112) * t85 + t47;
t171 = qJD(5) * t25;
t167 = t84 * qJD(6);
t163 = t113 * qJD(3);
t37 = 0.2e1 * t191;
t162 = t99 * t200;
t160 = pkin(4) * t104;
t159 = pkin(4) * t105;
t156 = pkin(9) * t104;
t155 = pkin(9) * t105;
t154 = t109 * t174;
t153 = t85 * t104;
t152 = t85 * t105;
t21 = t25 * t104;
t42 = t47 * t104;
t151 = t109 * t193;
t150 = t112 * t193;
t148 = t109 * t105;
t147 = t111 * t163;
t143 = t101 * t28 + t208 * t85;
t81 = t85 ^ 2;
t140 = t81 * t148;
t7 = t20 - t207;
t138 = t25 * t55 - t7 * t85;
t137 = t20 * t85 - t47 * t55;
t136 = t20 * t84 + t47 * t56;
t134 = -pkin(5) * t112 - qJ(6) * t109;
t133 = -t102 * t85 + t177;
t11 = qJ(6) * t84 + t186;
t117 = t112 * t118;
t17 = -t109 * t48 - t117;
t12 = -t84 * pkin(5) - t17;
t132 = -t109 * t12 - t11 * t112;
t131 = t109 * t11 - t112 * t12;
t130 = t109 * t186 + t112 * t17;
t129 = t109 * t17 - t112 * t186;
t126 = t102 * t104 - t112 * t157;
t89 = -pkin(4) + t134;
t30 = t153 + t174;
t29 = t104 * t84 - t173;
t5 = qJD(5) * t117 + t104 * t48 - t109 * t120 + t112 * t19;
t124 = -t55 * t89 + t74 * t85 - t198;
t123 = -t7 + (t85 * t89 - t197) * qJD(5);
t122 = (t110 * t85 - t193 * t84) * qJD(4);
t76 = -t161 + t89;
t121 = -t7 + (t76 * t85 - t177) * qJD(5);
t73 = qJD(5) * t134 + t112 * qJD(6);
t3 = t167 - t5 + t172;
t4 = -t195 - t6;
t1 = -qJD(5) * t131 + t4 * t109 + t3 * t112;
t2 = -qJD(5) * t130 - t6 * t109 - t5 * t112;
t116 = -t141 * t84 - t55 * t76 + t57 * t85 - t178;
t115 = pkin(3) * t122 - t102 * t55 - t178;
t95 = -0.2e1 * t148;
t94 = 0.2e1 * t148;
t75 = t89 * t104;
t71 = t209 * t193 * t180;
t67 = t76 * t104;
t66 = t101 * t105 + t109 * t141;
t65 = t101 * t104 - t112 * t141;
t64 = 0.2e1 * t71;
t34 = t85 * t52;
t33 = t85 * t176;
t32 = -t109 * t55 + t152;
t31 = t105 * t84 + t109 * t56;
t27 = -0.2e1 * t34 - 0.2e1 * t140;
t26 = -0.2e1 * t33 + 0.2e1 * t140;
t24 = t166 * t170 + t154;
t14 = 0.2e1 * t154 * t85 + t203 * t81;
t13 = 0.4e1 * t148 * t85 - t176 + t52;
t10 = -t109 * t206 + t152 * t84;
t9 = -0.2e1 * t153 * t84 + 0.2e1 * t188;
t8 = -0.2e1 * t33 - 0.2e1 * t34 + 0.2e1 * t191;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t147 (-t111 ^ 2 + t113 ^ 2) * t200, 0, -0.2e1 * t147, 0, 0, t111 * t162, t113 * t162, 0, 0, -0.2e1 * t190, 0.2e1 * t206, 0, t37, 0, 0, 0.2e1 * t158 * t84 + 0.2e1 * t56 * t88, 0.2e1 * t158 * t85 - 0.2e1 * t55 * t88, 0.2e1 * t19 * t84 - 0.2e1 * t48 * t56 + 0.2e1 * t137, 0.2e1 * t158 * t88 - 0.2e1 * t19 * t48 + 0.2e1 * t192, t27, 0.2e1 * t14, t9, t26, -0.2e1 * t10, t37, 0.2e1 * t109 * t137 + 0.2e1 * t17 * t56 + 0.2e1 * t43 * t85 + 0.2e1 * t6 * t84, 0.2e1 * t112 * t137 - 0.2e1 * t186 * t56 - 0.2e1 * t42 * t85 + 0.2e1 * t5 * t84, 0.2e1 * t130 * t55 + 0.2e1 * (qJD(5) * t129 + t109 * t5 - t112 * t6) * t85, 0.2e1 * t17 * t6 - 0.2e1 * t186 * t5 + 0.2e1 * t192, t27, t9, -0.2e1 * t14, t37, 0.2e1 * t10, t26, -0.2e1 * t109 * t138 - 0.2e1 * t12 * t56 + 0.2e1 * t152 * t25 - 0.2e1 * t4 * t84, 0.2e1 * t131 * t55 + 0.2e1 * (qJD(5) * t132 - t109 * t3 + t112 * t4) * t85, 0.2e1 * t11 * t56 + 0.2e1 * t112 * t138 + 0.2e1 * t21 * t85 + 0.2e1 * t3 * t84, 0.2e1 * t11 * t3 + 0.2e1 * t12 * t4 + 0.2e1 * t25 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19 * t85 - t48 * t55 + t136, 0, 0, 0, 0, 0, 0, 0, t112 * t206 + t188, 0, t129 * t55 + t2 * t85 + t136, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t85 + t132 * t55 + t25 * t56 + t7 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t190 + 0.2e1 * t191, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, 0, -t164, 0, -t98 * t163, t98 * t164, 0, 0, 0, 0, -t55, 0, -t56, 0, -t20, t19 (-t110 * t56 + t193 * t55 + t122) * pkin(3) (-t193 * t20 - t110 * t19 + (t193 * t48 + t175) * qJD(4)) * pkin(3), -t24, -t13, t31, t24, -t29, 0, t42 + (-qJD(5) * t133 - t20) * t112 + t115 * t109, t104 * t133 + t112 * t115 + t189, t2, t20 * t102 + (t150 * t186 - t151 * t17 + t175) * t180 + t2 * t101, -t24, t31, t13, 0, t29, t24, t109 * t116 + t112 * t121 + t21, t1, t121 * t109 + (-t116 - t171) * t112, t25 * t57 + t7 * t76 + (t11 * t150 + t12 * t151) * t180 + t1 * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, -t163, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t55, 0 (-t193 * t56 - t110 * t55 + (t110 * t84 + t193 * t85) * qJD(4)) * pkin(3), 0, 0, 0, 0, 0, 0, t29, t31, t28, t102 * t56 + t157 * t84 + t143, 0, 0, 0, 0, 0, 0, t29, t28, -t31, t56 * t76 + t57 * t84 + t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t157, -0.2e1 * t141, 0, 0, t94, t201, 0, t95, 0, 0, 0.2e1 * t126, 0.2e1 * t181, t64, 0.2e1 * t102 * t157 + 0.2e1 * t183, t94, 0, -t201, 0, 0, t95, -0.2e1 * t112 * t57 + 0.2e1 * t67, t64, -0.2e1 * t105 * t76 - 0.2e1 * t57 * t109, 0.2e1 * t57 * t76 + 0.2e1 * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, 0, -t56, 0, -t20, t19, 0, 0, -t24, -t13, t31, t24, -t29, 0, t42 + (pkin(4) * t55 - t198) * t109 + (-t20 + (-pkin(4) * t85 - t197) * qJD(5)) * t112, pkin(4) * t30 + pkin(9) * t29 + t189, t2, -t20 * pkin(4) + pkin(9) * t2, -t24, t31, t13, 0, t29, t24, t109 * t124 + t112 * t123 + t21, t1, t123 * t109 + (-t124 - t171) * t112, pkin(9) * t1 + t25 * t74 + t7 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t55, 0, 0, 0, 0, 0, 0, 0, 0, t29, t31, t28, t185 - t196, 0, 0, 0, 0, 0, 0, t29, t28, -t31, t56 * t89 + t74 * t84 + t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t141, 0, 0, t94, t201, 0, t95, 0, 0, t126 - t160, -t159 + t181, t71, -pkin(4) * t157 + t182, t94, 0, -t201, 0, 0, t95, t112 * t184 + t67 + t75, t71, t184 * t109 + (-t76 - t89) * t105, t57 * t89 + t74 * t76 + t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t201, 0, t95, 0, 0, -0.2e1 * t160, -0.2e1 * t159, 0, 0, t94, 0, -t201, 0, 0, t95, -0.2e1 * t112 * t74 + 0.2e1 * t75, 0, -0.2e1 * t105 * t89 - 0.2e1 * t74 * t109, 0.2e1 * t89 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30, 0, -t32, t56, t6, t5, 0, 0, 0, -t30, 0, t56, t32, 0, t6 + 0.2e1 * t195, t109 * t119 - t112 * t125, 0.2e1 * t167 - t5 + 0.2e1 * t172, -pkin(5) * t4 + qJ(6) * t3 + qJD(6) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, t30, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, -t30, t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, -t104, 0, -t66, t65, 0, 0, 0, t105, 0, 0, t104, 0, -t66, t73, -t65 (-pkin(5) * t151 + qJ(6) * t150) * t180 + t73 * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, -t104, 0, -t155, t156, 0, 0, 0, t105, 0, 0, t104, 0, -t155, t73, -t156, t73 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, qJ(6) * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t30, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t15;
