% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRP1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:57:10
% EndTime: 2019-03-09 05:57:32
% DurationCPUTime: 12.29s
% Computational Cost: add. (11922->624), mult. (22237->751), div. (0->0), fcn. (23182->8), ass. (0->489)
t438 = sin(qJ(3));
t713 = cos(qJ(4));
t566 = t713 * t438;
t437 = sin(qJ(4));
t440 = cos(qJ(3));
t642 = t437 * t440;
t402 = t566 + t642;
t708 = t402 * pkin(5);
t436 = sin(qJ(5));
t426 = sin(pkin(10)) * pkin(1) + pkin(7);
t704 = pkin(8) + t426;
t395 = t704 * t438;
t396 = t704 * t440;
t524 = t713 * t395 + t437 * t396;
t765 = t524 * t436;
t775 = -t708 / 0.2e1 - t765 / 0.2e1;
t439 = cos(qJ(5));
t641 = t439 * qJ(6);
t656 = t402 * t436;
t508 = pkin(5) * t656 - t402 * t641;
t158 = t508 + t524;
t679 = t158 * t436;
t150 = t679 / 0.2e1;
t407 = pkin(5) * t436 - t641;
t652 = t407 * t436;
t542 = t652 / 0.2e1;
t774 = t150 + (t542 - pkin(5) / 0.2e1) * t402 + t775;
t602 = qJD(5) * t436;
t560 = t402 * t602;
t400 = t437 * t438 - t440 * t713;
t262 = t439 * t400;
t585 = qJD(3) + qJD(4);
t766 = t262 * t585;
t773 = t560 + t766;
t764 = t524 * t439;
t772 = -t764 / 0.2e1;
t204 = t765 / 0.2e1;
t393 = t402 * qJ(6);
t709 = t402 * pkin(4);
t710 = t400 * pkin(9);
t293 = t709 + t710;
t712 = pkin(3) * t438;
t266 = t293 + t712;
t228 = t436 * t266;
t631 = t772 + t228 / 0.2e1;
t770 = -t393 - t631;
t601 = qJD(5) * t439;
t559 = t402 * t601;
t260 = t436 * t400;
t628 = t260 * t585;
t769 = t559 - t628;
t647 = t436 * qJ(6);
t705 = t439 * pkin(5);
t500 = t647 + t705;
t406 = -pkin(4) - t500;
t583 = t713 * pkin(3);
t392 = -t583 + t406;
t366 = t392 * t436;
t398 = t406 * t436;
t623 = t366 / 0.2e1 + t398 / 0.2e1;
t651 = t407 * t439;
t768 = t651 - t623;
t767 = -t708 - t765;
t746 = t585 * t402;
t503 = t400 * t746;
t639 = t439 * t266;
t123 = -t639 + t767;
t689 = t123 * t436;
t629 = -t764 + t228;
t122 = t393 + t629;
t690 = t122 * t439;
t474 = t690 / 0.2e1 + t689 / 0.2e1;
t379 = pkin(5) * t260;
t505 = -t437 * t395 + t396 * t713;
t453 = qJ(6) * t262 - t379 + t505;
t682 = t453 * t406;
t763 = -t682 / 0.2e1 - t474 * pkin(9);
t427 = -cos(pkin(10)) * pkin(1) - pkin(2);
t405 = -t440 * pkin(3) + t427;
t707 = t402 * pkin(9);
t509 = t400 * pkin(4) - t707;
t449 = t405 + t509;
t749 = t505 * t436;
t144 = -t439 * t449 + t749;
t711 = t400 * pkin(5);
t107 = t144 - t711;
t751 = t453 * t436;
t762 = (-t107 + t751) * t402;
t761 = (-t144 + t749) * t402;
t748 = t505 * t439;
t145 = t436 * t449 + t748;
t760 = (-t145 + t748) * t402;
t661 = t400 * qJ(6);
t105 = t145 + t661;
t692 = t105 * t439;
t718 = -t436 / 0.2e1;
t733 = t453 / 0.2e1;
t759 = (t733 - t692 / 0.2e1 + t107 * t718) * t400;
t758 = t585 * t524;
t750 = t453 * t439;
t757 = t158 * t262 + (t105 - t750) * t402;
t756 = t585 * t505;
t754 = t158 * t453;
t726 = t392 / 0.2e1;
t483 = t583 / 0.2e1 + t726;
t725 = -t406 / 0.2e1;
t753 = t400 * (t725 + t483);
t706 = t437 * pkin(3);
t429 = pkin(9) + t706;
t736 = -pkin(9) / 0.2e1;
t574 = t429 / 0.2e1 + t736;
t752 = t402 * t574;
t747 = t585 * t400;
t251 = t262 * qJD(5);
t605 = qJD(4) * t436;
t608 = qJD(3) * t436;
t620 = (t605 + t608) * t402;
t155 = -t251 - t620;
t399 = t402 ^ 2;
t738 = t400 ^ 2;
t584 = t399 - t738;
t434 = t436 ^ 2;
t435 = t439 ^ 2;
t745 = t435 + t434;
t714 = t439 / 0.2e1;
t512 = t713 * t714;
t569 = t436 * t713;
t514 = -t569 / 0.2e1;
t448 = (pkin(5) * t514 + qJ(6) * t512) * pkin(3);
t724 = t406 / 0.2e1;
t533 = t724 + t726;
t164 = -t407 * t533 + t448;
t723 = -t407 / 0.2e1;
t727 = t379 / 0.2e1;
t170 = t727 + (-t641 / 0.2e1 + t723) * t400;
t595 = t170 * qJD(2);
t653 = t407 * t406;
t257 = t500 * t402;
t536 = -t144 / 0.2e1 + t107 / 0.2e1;
t537 = -t105 / 0.2e1 + t145 / 0.2e1;
t451 = t436 * t537 + t439 * t536;
t722 = t407 / 0.2e1;
t551 = t158 * t722;
t443 = pkin(9) * t451 + t257 * t724 + t551;
t271 = t436 * t293;
t624 = t271 - t764;
t128 = t393 + t624;
t638 = t439 * t293;
t131 = -t638 + t767;
t734 = t131 / 0.2e1;
t478 = -t128 * qJ(6) / 0.2e1 + pkin(5) * t734;
t7 = t443 + t478;
t744 = -t7 * qJD(1) + t164 * qJD(3) - qJD(4) * t653 + t595;
t442 = t257 * t726 + t429 * t451 + t551;
t735 = -t122 / 0.2e1;
t479 = qJ(6) * t735 + t123 * pkin(5) / 0.2e1;
t5 = t442 + t479;
t664 = t392 * t407;
t743 = -t5 * qJD(1) - qJD(3) * t664 + t595;
t40 = t760 + (-t624 - t764) * t400;
t742 = t40 * qJD(1);
t32 = t760 + (-t629 - t764) * t400;
t741 = t32 * qJD(1);
t720 = t434 / 0.2e1;
t258 = (t720 - t435 / 0.2e1) * t402;
t644 = t436 * t439;
t563 = qJD(1) * t644;
t337 = t399 * t563;
t739 = t258 * t585 + t337;
t418 = t435 - t434;
t515 = t402 * t563;
t218 = t418 * t585 - 0.2e1 * t515;
t737 = pkin(4) / 0.2e1;
t732 = t158 / 0.2e1;
t731 = t764 / 0.2e1;
t730 = -t257 / 0.2e1;
t729 = -t266 / 0.2e1;
t728 = -t293 / 0.2e1;
t430 = -t583 - pkin(4);
t721 = -t430 / 0.2e1;
t719 = t435 / 0.2e1;
t717 = t436 / 0.2e1;
t716 = t437 / 0.2e1;
t715 = -t439 / 0.2e1;
t703 = pkin(3) * qJD(4);
t8 = (t732 + t474) * t402 + t759;
t702 = t8 * qJD(1);
t687 = t131 * t436;
t688 = t128 * t439;
t473 = t688 / 0.2e1 + t687 / 0.2e1;
t9 = (t732 + t473) * t402 + t759;
t701 = t9 * qJD(1);
t22 = t144 * t715 + t105 * t718 + t145 * t717 + t107 * t714 + (t647 / 0.2e1 + t705 / 0.2e1) * t400;
t700 = t22 * qJD(5);
t21 = (t711 / 0.2e1 - t536) * t439 + (t661 / 0.2e1 - t537) * t436;
t699 = -t21 * qJD(5) + t262 * qJD(6);
t684 = t145 * t400;
t47 = -t684 + (t158 * t439 + t257 * t436) * t402;
t698 = qJD(1) * t47;
t685 = t144 * t400;
t48 = -t685 + (-t257 * t439 + t679) * t402;
t697 = qJD(1) * t48;
t655 = t402 * t439;
t693 = t105 * t400;
t57 = -t158 * t655 + t693;
t696 = qJD(1) * t57;
t70 = -t524 * t656 + t685;
t695 = qJD(1) * t70;
t71 = t524 * t655 - t684;
t694 = qJD(1) * t71;
t12 = t257 * t400 / 0.2e1 + t451 * t402;
t691 = t12 * qJD(1);
t82 = t107 * t262;
t14 = t82 - t123 * t655 + (t122 * t402 - t693) * t436;
t686 = t14 * qJD(1);
t15 = t82 - t131 * t655 + (t128 * t402 - t693) * t436;
t683 = t15 * qJD(1);
t17 = -t145 * t655 + (t692 + (t107 - t144) * t436) * t402;
t676 = t17 * qJD(1);
t18 = t21 * qJD(1);
t23 = t122 * t400 + t757;
t673 = t23 * qJD(1);
t24 = t762 + (-t123 - t679) * t400;
t671 = t24 * qJD(1);
t25 = t128 * t400 + t757;
t670 = t25 * qJD(1);
t26 = t762 + (-t131 - t679) * t400;
t669 = t26 * qJD(1);
t31 = t639 * t400 + t761;
t668 = t31 * qJD(1);
t39 = t293 * t262 + t761;
t666 = t39 * qJD(1);
t665 = t392 * t400;
t663 = t392 * t439;
t660 = t400 * t430;
t659 = t402 * t392;
t658 = t402 * t406;
t657 = t402 * t429;
t654 = t406 * t439;
t650 = t429 * t400;
t649 = t430 * t402;
t648 = t434 * t400;
t643 = t437 * t402;
t397 = t566 / 0.2e1 + t642 / 0.2e1;
t621 = (-t434 / 0.2e1 + t719) * t402;
t188 = -t397 + t621;
t637 = t188 * qJD(6);
t187 = t397 + t621;
t636 = t187 * qJD(6);
t265 = t638 / 0.2e1;
t635 = t204 + t265;
t634 = t204 + t639 / 0.2e1;
t633 = t772 + t271 / 0.2e1;
t632 = t731 - t271 / 0.2e1;
t604 = qJD(4) * t439;
t607 = qJD(3) * t439;
t619 = (t604 + t607) * t436;
t579 = t437 * t703;
t417 = t436 * t579;
t433 = t434 * qJD(6);
t618 = t433 - t417;
t191 = t584 * t439;
t615 = qJD(1) * t191;
t202 = t400 * t712 + t402 * t405;
t614 = qJD(1) * t202;
t203 = -t400 * t405 + t402 * t712;
t613 = qJD(1) * t203;
t612 = qJD(1) * t400;
t611 = qJD(1) * t402;
t610 = qJD(1) * t405;
t609 = qJD(1) * t440;
t606 = qJD(4) * t405;
t603 = qJD(5) * t144;
t600 = qJD(6) * t436;
t142 = (0.1e1 - t745) * t402 * t400;
t596 = t142 * qJD(2);
t190 = t584 * t436;
t594 = t190 * qJD(1);
t593 = t584 * qJD(1);
t239 = t260 * qJD(1);
t236 = t260 * qJD(5);
t254 = t262 * qJD(1);
t269 = t418 * t399;
t592 = t269 * qJD(1);
t591 = t397 * qJD(1);
t590 = t400 * qJD(5);
t391 = t400 * qJD(6);
t419 = -t438 ^ 2 + t440 ^ 2;
t589 = t419 * qJD(1);
t588 = t438 * qJD(3);
t587 = t439 * qJD(6);
t586 = t440 * qJD(3);
t582 = qJD(3) * t706;
t581 = pkin(9) * t602;
t580 = pkin(9) * t601;
t578 = -t710 / 0.2e1;
t577 = t708 / 0.2e1;
t576 = t706 / 0.2e1;
t575 = t737 + t721;
t539 = -t262 / 0.2e1;
t171 = qJ(6) * t539 + t400 * t722 + t727;
t573 = t171 * qJD(5) - t260 * qJD(6) + t596;
t151 = -t679 / 0.2e1;
t538 = t262 / 0.2e1;
t545 = -t655 / 0.2e1;
t572 = t392 * t545 + t429 * t538 + t151;
t543 = -t654 / 0.2e1;
t571 = pkin(9) * t538 + t402 * t543 + t151;
t570 = -t170 * qJD(5) - t596;
t568 = t713 * t434;
t567 = t713 * t435;
t565 = t400 * t610;
t564 = t402 * t610;
t562 = t429 * t602;
t561 = t429 * t601;
t299 = t400 * t611;
t558 = t427 * t438 * qJD(1);
t557 = t427 * t609;
t425 = t436 * t601;
t556 = t402 * t600;
t422 = t436 * t587;
t555 = t438 * t609;
t554 = t402 * t587;
t548 = t659 / 0.2e1;
t547 = t658 / 0.2e1;
t546 = -t657 / 0.2e1;
t544 = t655 / 0.2e1;
t541 = t430 * t714;
t535 = -t453 / 0.2e1 + t733;
t532 = t719 + t720;
t531 = t713 * qJD(3);
t530 = t713 * qJD(4);
t529 = t745 * t400;
t466 = (t576 - t574) * t402;
t34 = t535 * t439 + (t466 - t753) * t436;
t416 = t439 * t582;
t528 = -qJD(1) * t34 + t416;
t523 = pkin(3) * t439 * t643;
t332 = -t523 / 0.2e1;
t36 = t332 + t535 * t436 + (t752 + t753) * t439;
t415 = t436 * t582;
t527 = -qJD(1) * t36 + t415;
t331 = t523 / 0.2e1;
t516 = -t583 / 0.2e1;
t484 = t516 + t721;
t460 = (-pkin(4) / 0.2e1 + t484) * t400;
t56 = t331 + (t460 - t752) * t439;
t526 = -qJD(1) * t56 - t415;
t53 = (t466 + t460) * t436;
t525 = -qJD(1) * t53 + t416;
t521 = t585 * t439;
t519 = t439 * t579;
t518 = t656 * t736;
t517 = qJD(5) + t612;
t513 = t569 / 0.2e1;
t511 = t730 + t578;
t507 = t532 * t429;
t506 = t730 - t650 / 0.2e1;
t162 = qJD(1) * t187 + t619;
t181 = qJD(1) * t258 - t619;
t502 = t436 * t521;
t501 = t439 * t746;
t499 = t400 * t406 + t707;
t10 = t105 * t122 + t107 * t123 + t754;
t498 = t10 * qJD(1) + t8 * qJD(2);
t11 = t105 * t128 + t107 * t131 + t754;
t497 = t11 * qJD(1) + t9 * qJD(2);
t13 = -t105 * t144 + t107 * t145 + t158 * t257;
t496 = t13 * qJD(1) + t12 * qJD(2);
t495 = t689 + t690;
t494 = t687 + t688;
t493 = t657 + t665;
t492 = -t657 - t660;
t277 = t652 + t663;
t476 = (t402 * t723 - t158 / 0.2e1) * t439;
t444 = t476 + (t548 + t506) * t436;
t42 = t444 + t770;
t491 = -qJD(1) * t42 + qJD(3) * t277;
t278 = -t366 + t651;
t275 = t392 * t544;
t29 = t275 + (t729 + t506) * t439 + t774;
t490 = -qJD(1) * t29 + qJD(3) * t278;
t28 = (t128 / 0.2e1 + t735) * t439 + (t734 - t123 / 0.2e1) * t436;
t464 = t568 + t567;
t394 = t464 * pkin(3);
t489 = -qJD(1) * t28 - qJD(3) * t394;
t488 = t402 * t517;
t283 = t399 * t435 + t738;
t487 = -t283 * qJD(1) - t590;
t486 = qJD(5) * t407 - t600;
t485 = t422 - t519;
t481 = t402 * t502;
t480 = t436 * t501;
t50 = t577 + t572 + t634;
t472 = -qJD(1) * t50 + t392 * t608;
t314 = t429 * t539;
t64 = t314 + (t649 / 0.2e1 + t729) * t439;
t471 = -qJD(1) * t64 - t430 * t608;
t447 = (t650 / 0.2e1 - t649 / 0.2e1) * t436 + t731;
t62 = t447 + t631;
t470 = -qJD(1) * t62 - t430 * t607;
t469 = t439 * t488;
t156 = -t402 * t521 + t236;
t193 = qJD(5) * t397 + t299;
t467 = t402 * t542 + t150 + 0.2e1 * t577;
t465 = 0.2e1 * t480;
t192 = (t392 * t437 + t429 * t464) * pkin(3);
t441 = t473 * t429 + (t105 * t512 + t107 * t513 + t158 * t716) * pkin(3) + t453 * t726;
t3 = t441 + t763;
t459 = t567 / 0.2e1 + t568 / 0.2e1;
t59 = (pkin(3) * t459 + t725 + t726) * t402 + (pkin(9) * t532 - t507 + t576) * t400;
t463 = t3 * qJD(1) + t59 * qJD(2) + t192 * qJD(3);
t412 = pkin(3) * t514;
t177 = t412 + t768;
t301 = -t398 + t651;
t297 = t406 * t544;
t37 = t297 + (t728 + t511) * t439 + t774;
t462 = -qJD(1) * t37 + qJD(3) * t177 + qJD(4) * t301;
t413 = pkin(3) * t512;
t178 = t439 * t533 + t413 + t652;
t300 = t652 + t654;
t445 = t476 + (t547 + t511) * t436;
t44 = -t393 + t445 + t632;
t461 = -qJD(1) * t44 + qJD(3) * t178 + qJD(4) * t300;
t322 = t436 * t575 + t412;
t356 = pkin(9) * t539;
t68 = t356 + (-t709 / 0.2e1 + t728) * t439;
t457 = pkin(4) * t605 - qJD(1) * t68 + qJD(3) * t322;
t414 = t439 * t516;
t323 = t439 * t575 + t414;
t450 = (t710 / 0.2e1 + t709 / 0.2e1) * t436 + t731;
t66 = t450 + t633;
t456 = pkin(4) * t604 - qJD(1) * t66 + qJD(3) * t323;
t411 = pkin(3) * t513;
t200 = t411 + t623;
t52 = t577 + t571 + t635;
t454 = -qJD(1) * t52 + qJD(3) * t200 + t406 * t605;
t452 = -qJD(5) * t500 + t587;
t446 = (-t713 * t400 / 0.2e1 + t643 / 0.2e1) * pkin(3) + t546;
t409 = t418 * qJD(5);
t384 = t435 * t400;
t381 = t394 * qJD(4);
t338 = t436 * t554;
t336 = t517 * qJ(6);
t325 = pkin(4) * t715 + t414 + t541;
t324 = pkin(4) * t718 + t430 * t717 + t412;
t279 = t434 * t585 + t515;
t267 = t585 * t397;
t233 = t258 * qJD(5);
t201 = t411 - t623;
t199 = t254 + t601;
t198 = -t239 - t602;
t180 = t412 - t768;
t179 = -t652 - t663 / 0.2e1 + t543 + t413;
t174 = -0.2e1 * t436 * t469;
t165 = t653 / 0.2e1 + t664 / 0.2e1 + t448;
t161 = t299 * t435 - t233;
t160 = t585 * (-t384 - t648);
t141 = t251 - t615;
t140 = -t236 + t594;
t139 = t145 * qJD(5);
t93 = t299 * t436 - t766;
t88 = -t233 + (-t435 * t611 - t502) * t400;
t77 = t615 + t620;
t76 = t501 - t594;
t75 = t436 * t488;
t74 = 0.2e1 * (-qJD(5) + t612) * t402 * t644 + t585 * (-t384 + t648);
t69 = pkin(4) * t545 + 0.2e1 * t204 + t265 + t356;
t67 = t450 + t632;
t65 = t402 * t541 + t204 + t314 + t634;
t63 = t447 - t631;
t58 = t548 + t547 - t400 * t507 + (t400 * t716 + t402 * t459) * pkin(3) + t745 * t578;
t55 = t331 + t749 + pkin(9) * t545 + pkin(4) * t538 + (t400 * t484 + t546) * t439;
t54 = -t748 + t518 + t260 * t737 + (-t660 / 0.2e1 + t446) * t436;
t51 = -t638 / 0.2e1 + t571 + t775;
t49 = -t639 / 0.2e1 + t572 + t775;
t43 = t393 + t445 + t633;
t41 = t444 - t770;
t38 = t439 * t511 + t297 + t467 + t635;
t35 = t332 - t751 + pkin(9) * t544 + t406 * t538 + (t657 / 0.2e1 + t483 * t400) * t439;
t33 = -t750 + t260 * t725 + t518 + (-t665 / 0.2e1 + t446) * t436;
t30 = t439 * t506 + t275 + t467 + t634;
t27 = t473 + t474;
t16 = t452 - t18;
t6 = t443 - t478;
t4 = t442 - t479;
t2 = t441 - t763;
t1 = qJD(3) * t8 + qJD(4) * t9 + qJD(5) * t12;
t19 = [0, 0, 0, 0, t438 * t586, t419 * qJD(3), 0, 0, 0, t427 * t588, t427 * t586, -t503, -t585 * t584, 0, 0, 0, qJD(3) * t202 + t402 * t606, qJD(3) * t203 - t400 * t606, -t399 * t425 - t435 * t503, -t269 * qJD(5) + t400 * t465, t191 * t585 - t400 * t560, -t190 * t585 - t400 * t559, t503, qJD(3) * t31 + qJD(4) * t39 + qJD(5) * t71, qJD(3) * t32 + qJD(4) * t40 + qJD(5) * t70, qJD(3) * t24 + qJD(4) * t26 + qJD(5) * t47 - t399 * t422, -qJD(3) * t14 - qJD(4) * t15 - qJD(5) * t17 - t400 * t556, qJD(3) * t23 + qJD(4) * t25 + qJD(5) * t48 + qJD(6) * t283, qJD(3) * t10 + qJD(4) * t11 + qJD(5) * t13 + qJD(6) * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t555, t589, t586, -t588, 0, -t426 * t586 + t558, t426 * t588 + t557, -t299, -t593, -t747, -t746, 0, t614 - t756, t613 + t758, t88, t74, t77, t76, t193, t668 + (t436 * t492 - t748) * qJD(3) + t54 * qJD(4) + t65 * qJD(5) (t439 * t492 + t749) * qJD(3) + t55 * qJD(4) + t63 * qJD(5) + t741, t671 + (-t436 * t493 - t750) * qJD(3) + t33 * qJD(4) + t30 * qJD(5) + t637, qJD(3) * t495 + t27 * qJD(4) - t686 + t700, t673 + (t439 * t493 - t751) * qJD(3) + t35 * qJD(4) + t41 * qJD(5) + t338 (t392 * t453 + t429 * t495) * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t49 * qJD(6) + t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, -t593, -t747, -t746, 0, t564 - t756, -t565 + t758, t88, t74, t77, t76, t193, t666 + t54 * qJD(3) + (t436 * t509 - t748) * qJD(4) + t69 * qJD(5), t55 * qJD(3) + (t439 * t509 + t749) * qJD(4) + t67 * qJD(5) + t742, t669 + t33 * qJD(3) + (-t436 * t499 - t750) * qJD(4) + t38 * qJD(5) + t637, t27 * qJD(3) + qJD(4) * t494 - t683 + t700, t670 + t35 * qJD(3) + (t439 * t499 - t751) * qJD(4) + t43 * qJD(5) + t338, t2 * qJD(3) + (pkin(9) * t494 + t682) * qJD(4) + t6 * qJD(5) + t51 * qJD(6) + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t739, -0.2e1 * t481 - t592, -t75, -t469, t267, qJD(3) * t65 + qJD(4) * t69 - t139 + t694, qJD(3) * t63 + qJD(4) * t67 + t603 + t695, qJD(3) * t30 + qJD(4) * t38 - t139 + t698, qJD(5) * t508 + t22 * t585 - t556 - t676, qJD(3) * t41 + qJD(4) * t43 + t391 - t603 + t697, t4 * qJD(3) + t6 * qJD(4) + (-pkin(5) * t145 - qJ(6) * t144) * qJD(5) + t105 * qJD(6) + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188 * t585 - t337, -t75, t480 - t487, qJD(3) * t49 + qJD(4) * t51 + qJD(5) * t105 + t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t585 * t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, -t586, 0, 0, 0, 0, 0, -t746, t747, 0, 0, 0, 0, 0, t156, -t155, t156, t160, t155, t702 + (-t429 * t529 + t659) * qJD(3) + t58 * qJD(4) + t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t746, t747, 0, 0, 0, 0, 0, t156, -t155, t156, t160, t155, t701 + t58 * qJD(3) + (-pkin(9) * t529 + t658) * qJD(4) + t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t769, t773, -t769, 0, -t773, -t257 * qJD(5) + t171 * t585 + t554 + t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t769; 0, 0, 0, 0, -t555, -t589, 0, 0, 0, -t558, -t557, t299, t593, 0, 0, 0, -t614, -t613, t161, t174, t141, t140, -t193, qJD(4) * t53 + qJD(5) * t64 - t668, qJD(4) * t56 + qJD(5) * t62 - t741, qJD(4) * t34 + qJD(5) * t29 + t636 - t671, qJD(4) * t28 + t686 + t699, qJD(4) * t36 + qJD(5) * t42 + t338 - t673, qJD(4) * t3 + qJD(5) * t5 + qJD(6) * t50 - t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t59 + t570 - t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, -pkin(3) * t530, t425, t409, 0, 0, 0, t430 * t602 - t519, t430 * t601 + t417, -qJD(5) * t278 + t485, t381, -qJD(5) * t277 + t618, t192 * qJD(4) + t392 * t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585 * t706 (-t531 - t530) * pkin(3), t425, t409, 0, 0, 0, qJD(5) * t324 - t519 - t525, qJD(5) * t325 + t417 - t526, qJD(5) * t180 + t485 - t528, t381 - t489, qJD(5) * t179 - t527 + t618 (pkin(9) * t464 + t406 * t437) * t703 + t165 * qJD(5) + t201 * qJD(6) + t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, t218, t199, t198, -t591, qJD(4) * t324 - t471 - t561, qJD(4) * t325 - t470 + t562, qJD(4) * t180 - t490 - t561, t16, qJD(4) * t179 - t491 - t562, t165 * qJD(4) + t429 * t452 - t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t199, t279, qJD(4) * t201 - t472 + t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, t593, 0, 0, 0, -t564, t565, t161, t174, t141, t140, -t193, -qJD(3) * t53 + qJD(5) * t68 - t666, -qJD(3) * t56 + qJD(5) * t66 - t742, -qJD(3) * t34 + qJD(5) * t37 + t636 - t669, -qJD(3) * t28 + t683 + t699, -qJD(3) * t36 + qJD(5) * t44 + t338 - t670, -qJD(3) * t3 + qJD(5) * t7 + qJD(6) * t52 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t59 + t570 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, pkin(3) * t531, t425, t409, 0, 0, 0, -qJD(5) * t322 + t525, -qJD(5) * t323 + t526, -qJD(5) * t177 + t422 + t528, t489, -qJD(5) * t178 + t433 + t527, -qJD(5) * t164 - qJD(6) * t200 - t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t409, 0, 0, 0, -pkin(4) * t602, -pkin(4) * t601, -qJD(5) * t301 + t422, 0, -qJD(5) * t300 + t433, t486 * t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, t218, t199, t198, -t591, -t457 - t580, -t456 + t581, -t462 - t580, t16, -t461 - t581, pkin(9) * t452 - t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t199, t279, -t454 + t580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t739, t465 + t592, t93, t299 * t439 + t628, t267, -qJD(3) * t64 - qJD(4) * t68 - t694, -qJD(3) * t62 - qJD(4) * t66 - t695, -qJD(3) * t29 - qJD(4) * t37 - t698, t21 * t585 + t676, -qJD(3) * t42 - qJD(4) * t44 + t391 - t697, qJ(6) * t391 - qJD(3) * t5 - qJD(4) * t7 - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170 * t585 - t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, -t218, -t254, t239, t591, qJD(4) * t322 + t471, qJD(4) * t323 + t470, qJD(4) * t177 + t490, t18, qJD(4) * t178 + t491, qJD(4) * t164 + t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, -t218, -t254, t239, t591, t457, t456, t462, t18, t461, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187 * t585 + t337, t93, -t481 + t487, -qJ(6) * t590 - qJD(3) * t50 - qJD(4) * t52 - t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, -t254, -t279, qJD(4) * t200 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, -t254, -t279, t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, -t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t19;
