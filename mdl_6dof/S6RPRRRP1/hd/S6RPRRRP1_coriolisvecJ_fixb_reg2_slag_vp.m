% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:57:07
% EndTime: 2019-03-09 05:57:18
% DurationCPUTime: 4.09s
% Computational Cost: add. (8494->447), mult. (19475->545), div. (0->0), fcn. (13238->8), ass. (0->245)
t176 = cos(qJ(5));
t259 = qJD(5) * t176;
t174 = sin(qJ(4));
t175 = sin(qJ(3));
t264 = qJD(1) * t175;
t244 = t174 * t264;
t177 = cos(qJ(3));
t313 = cos(qJ(4));
t245 = t313 * t177;
t141 = -qJD(1) * t245 + t244;
t280 = t141 * t176;
t330 = t259 + t280;
t173 = sin(qJ(5));
t149 = t174 * t177 + t313 * t175;
t143 = t149 * qJD(1);
t256 = qJD(3) + qJD(4);
t125 = t176 * t143 + t173 * t256;
t140 = qJD(5) + t141;
t283 = t125 * t140;
t123 = t173 * t143 - t176 * t256;
t286 = t123 * t140;
t238 = t313 * qJD(4);
t197 = t313 * qJD(3) + t238;
t195 = t177 * t197;
t257 = qJD(1) * qJD(3);
t237 = t175 * t257;
t266 = qJD(4) * t244 + t174 * t237;
t185 = -qJD(1) * t195 + t266;
t230 = qJD(5) * t256;
t260 = qJD(5) * t173;
t71 = t143 * t260 + (t185 - t230) * t176;
t183 = t173 * t185;
t72 = qJD(5) * t125 - t183;
t8 = (t72 + t283) * t173 + (t71 + t286) * t176;
t116 = t256 * t149;
t110 = t116 * qJD(1);
t291 = t110 * qJ(6);
t168 = t177 * qJD(2);
t163 = qJD(3) * t168;
t161 = sin(pkin(10)) * pkin(1) + pkin(7);
t152 = t161 * qJD(1);
t234 = pkin(8) * qJD(1) + t152;
t216 = t234 * t175;
t118 = -qJD(3) * t216 + t163;
t258 = t175 * qJD(2);
t128 = t177 * t234 + t258;
t119 = t128 * qJD(3);
t127 = t168 - t216;
t122 = qJD(3) * pkin(3) + t127;
t261 = qJD(4) * t174;
t34 = t313 * t118 - t174 * t119 + t122 * t238 - t128 * t261;
t262 = qJD(3) * t175;
t250 = pkin(3) * t262;
t59 = t266 * pkin(9) + t110 * pkin(4) + (-pkin(9) * t195 + t250) * qJD(1);
t121 = t313 * t128;
t83 = t174 * t122 + t121;
t77 = pkin(9) * t256 + t83;
t162 = -cos(pkin(10)) * pkin(1) - pkin(2);
t150 = -pkin(3) * t177 + t162;
t144 = qJD(1) * t150;
t95 = t141 * pkin(4) - t143 * pkin(9) + t144;
t6 = t173 * t59 + t176 * t34 + t95 * t259 - t260 * t77;
t2 = qJD(6) * t140 + t291 + t6;
t235 = t173 * t34 - t176 * t59 + t77 * t259 + t95 * t260;
t311 = pkin(5) * t110;
t4 = t235 - t311;
t329 = t4 * t173 + t2 * t176;
t270 = t176 * t110;
t328 = (t140 * t260 - t270) * pkin(9);
t114 = t313 * t119;
t273 = t174 * t118;
t35 = qJD(4) * t83 + t114 + t273;
t120 = t174 * t128;
t82 = t313 * t122 - t120;
t76 = -pkin(4) * t256 - t82;
t327 = t35 * t173 + t76 * t259;
t40 = t173 * t95 + t176 * t77;
t27 = qJ(6) * t140 + t40;
t41 = t123 * pkin(5) - t125 * qJ(6) + t76;
t326 = -t27 * t143 - t41 * t280;
t10 = t72 * pkin(5) + t71 * qJ(6) - t125 * qJD(6) + t35;
t325 = -t10 * t176 + t41 * t260;
t322 = t35 * t176 - t76 * t260;
t89 = t127 * t174 + t121;
t226 = pkin(3) * t261 - t89;
t271 = t174 * t175;
t115 = t256 * t271 - t195;
t321 = t115 * t256;
t148 = -t245 + t271;
t106 = pkin(4) * t148 - pkin(9) * t149 + t150;
t309 = pkin(8) + t161;
t146 = t309 * t175;
t147 = t309 * t177;
t109 = -t174 * t146 + t313 * t147;
t319 = t173 * t106 + t176 * t109;
t318 = -t313 * t146 - t174 * t147;
t281 = t141 * t173;
t317 = -qJD(6) * t173 - t330 * qJ(6) + (t260 + t281) * pkin(5);
t242 = t149 * t259;
t288 = t115 * t173;
t204 = t242 - t288;
t274 = t173 * t110;
t188 = -t140 * t204 - t149 * t274;
t308 = t116 * t123 + t148 * t72;
t316 = t188 - t308;
t236 = qJD(3) * t309;
t138 = t175 * t236;
t225 = t177 * t236;
t64 = t318 * qJD(4) - t313 * t138 - t174 * t225;
t70 = pkin(4) * t116 + pkin(9) * t115 + t250;
t15 = -qJD(5) * t319 - t173 * t64 + t176 * t70;
t315 = t125 ^ 2;
t314 = t140 ^ 2;
t312 = pkin(3) * t174;
t310 = pkin(5) * t143;
t5 = t6 * t176;
t287 = t115 * t176;
t276 = t149 * t176;
t56 = t72 * t276;
t307 = t123 * t287 - t56;
t306 = t125 * t116 - t148 * t71;
t305 = -t149 * t110 + t115 * t141;
t304 = pkin(3) * qJD(4);
t303 = t10 * t173;
t301 = t125 * t41;
t299 = t35 * t318;
t298 = t35 * t148;
t296 = t71 * t173;
t295 = t72 * t176;
t165 = pkin(9) + t312;
t229 = pkin(3) * t238;
t215 = t176 * t229;
t294 = -t123 * t215 - t165 * t295;
t293 = t317 + t226;
t292 = -t83 + t317;
t111 = pkin(4) * t143 + pkin(9) * t141;
t48 = t173 * t111 + t176 * t82;
t252 = pkin(3) * t264;
t103 = t111 + t252;
t90 = t313 * t127 - t120;
t46 = t173 * t103 + t176 * t90;
t290 = t110 * t148;
t289 = t110 * t165;
t285 = t123 * t165;
t284 = t125 * t123;
t282 = t140 * t143;
t231 = t140 * t176;
t279 = t143 * t116;
t278 = t143 * t141;
t277 = t149 * t173;
t275 = t152 * t175;
t178 = qJD(3) ^ 2;
t269 = t178 * t175;
t268 = t178 * t177;
t39 = -t173 * t77 + t176 * t95;
t267 = qJD(6) - t39;
t265 = t175 ^ 2 - t177 ^ 2;
t153 = qJD(1) * t162;
t263 = qJD(1) * t177;
t255 = -t39 * t280 - t40 * t281 + t5;
t80 = t125 * t288;
t254 = t125 * t242 - t71 * t277 - t80;
t253 = t313 * pkin(3);
t179 = qJD(1) ^ 2;
t248 = t175 * t179 * t177;
t93 = t149 * t270;
t247 = t173 * t313;
t246 = t176 * t313;
t243 = t149 * t260;
t241 = t165 * t259;
t240 = t123 ^ 2 - t315;
t233 = -t144 * t143 - t114;
t232 = t140 * t173;
t228 = t40 * t143 + t327;
t227 = t177 * t237;
t223 = t176 * pkin(5) + t173 * qJ(6);
t222 = pkin(5) * t173 - qJ(6) * t176;
t23 = -pkin(5) * t140 + t267;
t221 = t173 * t27 - t176 * t23;
t220 = -t173 * t23 - t176 * t27;
t219 = t173 * t40 + t176 * t39;
t218 = t173 * t39 - t176 * t40;
t45 = t103 * t176 - t173 * t90;
t214 = t141 * t76 - t289;
t47 = t111 * t176 - t173 * t82;
t60 = t106 * t176 - t109 * t173;
t212 = -t143 * t123 - t270;
t211 = t123 * t173 + t125 * t176;
t135 = t152 * t177 + t258;
t210 = 0.2e1 * qJD(3) * t153;
t151 = -pkin(4) - t223;
t209 = t23 * t143 + t325;
t208 = -t39 * t143 - t322;
t207 = t140 * t40 - t235;
t206 = t259 * t41 + t303;
t203 = t243 + t287;
t202 = t123 * t243 + t307;
t201 = -t115 * t231 - t140 * t243 + t93;
t14 = t106 * t259 - t109 * t260 + t173 * t70 + t176 * t64;
t200 = t330 * t23 - t27 * t281 + t329;
t199 = (-t140 * t259 - t274) * pkin(9);
t198 = t123 * t232 - t295;
t196 = t125 * t229 - t165 * t71;
t194 = t165 * t260 - t215;
t193 = -t173 * t229 - t241;
t192 = qJD(5) * t211 - t296;
t191 = -qJD(5) * t221 + t329;
t190 = -qJD(5) * t219 + t173 * t235 + t5;
t189 = t123 * t204 + t277 * t72;
t65 = qJD(4) * t109 - t174 * t138 + t313 * t225;
t130 = -t152 * t262 + t163;
t131 = t135 * qJD(3);
t134 = t168 - t275;
t187 = t130 * t177 + t131 * t175 + (-t134 * t177 - t135 * t175) * qJD(3);
t186 = -t197 * t263 + t266;
t184 = t188 + t308;
t182 = t144 * t141 - t34;
t180 = t143 * t259 + t173 * t230 - t183 - t283;
t166 = -t253 - pkin(4);
t145 = -t253 + t151;
t137 = t143 * qJ(6);
t113 = t116 * t256;
t97 = -t141 ^ 2 + t143 ^ 2;
t87 = t141 * t256 - t185;
t86 = pkin(5) * t125 + qJ(6) * t123;
t69 = t149 * t222 - t318;
t68 = pkin(9) * t295;
t52 = -pkin(5) * t148 - t60;
t51 = qJ(6) * t148 + t319;
t50 = t116 * t140 + t290;
t44 = -t71 + t286;
t43 = -t47 - t310;
t42 = t137 + t48;
t38 = -t45 - t310;
t37 = t137 + t46;
t26 = -t125 * t143 + t140 * t231 + t274;
t25 = -t314 * t173 - t212;
t24 = t140 * t232 + t212;
t19 = t125 * t231 - t296;
t17 = -t125 * t203 - t276 * t71;
t16 = -t222 * t115 + (qJD(5) * t223 - qJD(6) * t176) * t149 + t65;
t13 = -t116 * pkin(5) - t15;
t12 = t201 + t306;
t11 = qJ(6) * t116 + qJD(6) * t148 + t14;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227, -0.2e1 * t265 * t257, t268, -0.2e1 * t227, -t269, 0, -t161 * t268 + t175 * t210, t161 * t269 + t177 * t210, t187, t187 * t161, -t143 * t115 - t149 * t185, t148 * t185 - t279 + t305, -t321, t116 * t141 + t290, -t113, 0, t150 * t110 + t144 * t116 - t65 * t256 + (qJD(1) * t148 + t141) * t250, pkin(3) * t149 * t237 - t144 * t115 + t143 * t250 - t150 * t185 - t256 * t64, -t109 * t110 + t82 * t115 - t83 * t116 - t64 * t141 + t65 * t143 - t34 * t148 + t35 * t149 + t186 * t318, t34 * t109 + 0.2e1 * t144 * t250 + t83 * t64 - t82 * t65 - t299, t17, t202 - t254, t12, t189, t316, t50, t60 * t110 + t39 * t116 + t65 * t123 + t15 * t140 - t148 * t235 + t327 * t149 - t76 * t288 - t318 * t72, -t110 * t319 - t40 * t116 + t65 * t125 - t14 * t140 - t6 * t148 + t322 * t149 - t76 * t287 + t318 * t71, -t14 * t123 - t15 * t125 + t60 * t71 - t319 * t72 + t219 * t115 + (qJD(5) * t218 - t173 * t6 + t176 * t235) * t149, t14 * t40 + t15 * t39 - t235 * t60 + t319 * t6 + t65 * t76 - t299, t17, t12, -t123 * t203 + t254 + t56, t50, -t316, t189, -t52 * t110 - t23 * t116 + t16 * t123 - t13 * t140 - t4 * t148 + t149 * t206 - t288 * t41 + t69 * t72, -t11 * t123 + t13 * t125 - t51 * t72 - t52 * t71 + t221 * t115 + (qJD(5) * t220 - t173 * t2 + t176 * t4) * t149, t11 * t140 + t51 * t110 + t27 * t116 - t16 * t125 + t2 * t148 + t325 * t149 + t41 * t287 + t69 * t71, t10 * t69 + t11 * t27 + t13 * t23 + t16 * t41 + t2 * t51 + t4 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t268, 0, t130 * t175 - t131 * t177 + (-t134 * t175 + t135 * t177) * qJD(3), 0, 0, 0, 0, 0, 0, -t113, t321, -t148 * t186 + t279 + t305, -t115 * t83 - t116 * t82 + t149 * t34 + t298, 0, 0, 0, 0, 0, 0, t184, t140 * t203 + t306 - t93, t149 * t192 + t307 - t80, t115 * t218 + t76 * t116 + t149 * t190 + t298, 0, 0, 0, 0, 0, 0, t184, t202 + t254, t201 - t306, t10 * t148 + t115 * t220 + t41 * t116 + t149 * t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t265 * t179, 0, t248, 0, 0, -t153 * t264, -t153 * t263 - t163 + (t134 + t275) * qJD(3), 0, 0, t278, t97, t87, -t278, 0, 0, -t128 * t238 - t141 * t252 + t89 * t256 + (-qJD(4) * t122 - t256 * t304 - t118) * t174 + t233, t90 * t256 + (-t143 * t264 - t238 * t256) * pkin(3) + t182, -t110 * t312 + t186 * t253 + (t83 + t226) * t143 + (-t229 - t82 + t90) * t141, t82 * t89 - t83 * t90 + (-t144 * t264 - t313 * t35 + t174 * t34 + (-t174 * t82 + t313 * t83) * qJD(4)) * pkin(3), t19, -t8, t26, t198, t25, -t282, t166 * t72 + t214 * t173 + t226 * t123 + (-t45 + t193) * t140 + t208, -t166 * t71 + t214 * t176 + t226 * t125 + (t46 + t194) * t140 + t228, t46 * t123 + t45 * t125 + (t125 * t165 - t39) * t259 + (t235 + (-t40 + t285) * qJD(5) + t196) * t173 + t255 + t294, t35 * t166 - t39 * t45 - t40 * t46 - t76 * t89 + (t174 * t76 + t246 * t40 - t247 * t39) * t304 + t190 * t165, t19, t26, t8, -t282, t24, t198, t145 * t72 + (t141 * t41 - t289) * t173 + t293 * t123 + (t38 + t193) * t140 + t209, t37 * t123 + (-t38 + t241) * t125 + ((-t27 + t285) * qJD(5) + t196) * t173 + t200 + t294, -t303 + t145 * t71 + (-qJD(5) * t41 + t289) * t176 - t293 * t125 + (-t37 - t194) * t140 + t326, t10 * t145 - t23 * t38 - t27 * t37 + t293 * t41 + (t23 * t247 + t246 * t27) * t304 + t191 * t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t97, t87, -t278, 0, 0, t83 * qJD(3) + t233 - t273, t256 * t82 + t182, 0, 0, t19, -t8, t26, t198, t25, -t282, -pkin(4) * t72 - t83 * t123 - t47 * t140 + t281 * t76 + t199 + t208, pkin(4) * t71 - t83 * t125 + t48 * t140 + t280 * t76 + t228 + t328, t48 * t123 + t47 * t125 - t68 + (-pkin(9) * t71 + t235) * t173 + (pkin(9) * t211 - t219) * qJD(5) + t255, -t35 * pkin(4) + pkin(9) * t190 - t39 * t47 - t40 * t48 - t76 * t83, t19, t26, t8, -t282, t24, t198, t123 * t292 + t43 * t140 + t151 * t72 + t281 * t41 + t199 + t209, pkin(9) * t192 + t42 * t123 - t43 * t125 - t260 * t27 + t200 - t68, -t125 * t292 - t42 * t140 + t151 * t71 - t206 + t326 - t328, pkin(9) * t191 + t10 * t151 - t23 * t43 - t27 * t42 + t292 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, -t240, t44, -t284, -t180, t110, -t125 * t76 + t207, t123 * t76 + t140 * t39 - t6, 0, 0, t284, t44, t240, t110, t180, -t284, -t123 * t86 + t207 - t301 + 0.2e1 * t311, pkin(5) * t71 - t72 * qJ(6) + (t27 - t40) * t125 + (t23 - t267) * t123, 0.2e1 * t291 - t41 * t123 + t86 * t125 + (0.2e1 * qJD(6) - t39) * t140 + t6, -t4 * pkin(5) + t2 * qJ(6) - t23 * t40 + t267 * t27 - t41 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143 * t256 + t284, t44, -t314 - t315, -t140 * t27 + t301 + t4;];
tauc_reg  = t1;
