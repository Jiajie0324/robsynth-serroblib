% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:52:57
% EndTime: 2019-03-09 03:53:23
% DurationCPUTime: 13.24s
% Computational Cost: add. (13009->560), mult. (27637->732), div. (0->0), fcn. (33656->10), ass. (0->449)
t392 = cos(pkin(11));
t398 = cos(qJ(5));
t551 = t398 * t392;
t390 = sin(pkin(11));
t395 = sin(qJ(5));
t561 = t395 * t390;
t366 = -t551 + t561;
t552 = t398 * t390;
t560 = t395 * t392;
t370 = t552 + t560;
t394 = sin(qJ(6));
t397 = cos(qJ(6));
t459 = t366 * t397 + t370 * t394;
t686 = qJD(5) + qJD(6);
t668 = t686 * t459;
t391 = sin(pkin(10));
t393 = cos(pkin(10));
t396 = sin(qJ(3));
t634 = cos(qJ(3));
t368 = t391 * t396 - t393 * t634;
t679 = t459 * t368;
t474 = t679 / 0.2e1;
t277 = t366 * t368;
t553 = t397 * t277;
t273 = t370 * t368;
t567 = t394 * t273;
t544 = t567 / 0.2e1 + t553 / 0.2e1;
t695 = t474 + t544;
t698 = t695 * qJD(1);
t702 = -t668 - t698;
t689 = -t679 / 0.2e1;
t694 = t689 - t544;
t699 = t694 * qJD(1);
t701 = -t699 + t668;
t700 = qJD(2) * t694;
t693 = t689 + t544;
t656 = qJD(3) * t693;
t482 = t634 * t391;
t559 = t396 * t393;
t371 = t482 + t559;
t209 = t371 * t370;
t554 = t397 * t209;
t329 = t371 * t561;
t278 = t371 * t551 - t329;
t563 = t394 * t278;
t171 = t554 + t563;
t494 = t368 * qJD(1);
t697 = qJD(3) * t695 + t171 * t494;
t627 = pkin(8) + qJ(4);
t374 = t627 * t390;
t376 = t627 * t392;
t312 = -t374 * t395 + t376 * t398;
t269 = -pkin(9) * t366 + t312;
t310 = t374 * t398 + t376 * t395;
t422 = -pkin(9) * t370 - t310;
t160 = t269 * t397 + t394 * t422;
t638 = -t368 / 0.2e1;
t696 = t160 * t638;
t436 = -t269 * t394 + t397 * t422;
t384 = -pkin(4) * t392 - pkin(3);
t314 = pkin(5) * t366 + t384;
t641 = -t314 / 0.2e1;
t692 = t436 * t368 / 0.2e1 - t171 * t641;
t691 = t686 * t160;
t690 = t686 * t436;
t647 = -t554 / 0.2e1;
t264 = t397 * t278;
t666 = t394 * t209;
t662 = t264 - t666;
t670 = t171 ^ 2 - t662 ^ 2;
t688 = qJD(1) * t670;
t434 = t366 * t394 - t370 * t397;
t669 = -t434 ^ 2 + t459 ^ 2;
t687 = qJD(3) * t669;
t643 = t434 / 0.2e1;
t685 = t666 / 0.2e1;
t285 = t390 * t371;
t628 = pkin(7) + qJ(2);
t375 = t628 * t391;
t377 = t628 * t393;
t311 = t375 * t634 + t377 * t396;
t242 = pkin(4) * t285 + t311;
t177 = pkin(5) * t209 + t242;
t684 = t171 * t177;
t533 = qJD(1) * t662;
t682 = t171 * t533;
t680 = t177 * t662;
t529 = qJD(3) * t434;
t678 = t459 * t529;
t677 = t494 * t662;
t646 = t264 / 0.2e1;
t676 = -t666 / 0.2e1 + t646;
t493 = t371 * qJD(1);
t309 = t368 * t493;
t360 = t482 / 0.2e1 + t559 / 0.2e1;
t661 = qJD(5) * t360 + t309;
t675 = qJD(3) * t459;
t674 = qJD(4) * t434;
t673 = qJD(4) * t459;
t574 = t371 * t366;
t555 = t397 * t574;
t542 = t685 + t555 / 0.2e1;
t657 = t542 + t676;
t672 = qJD(4) * t657;
t252 = -t563 / 0.2e1;
t568 = t394 * t574;
t663 = t252 - t568 / 0.2e1 + t554 / 0.2e1 + t647;
t671 = qJD(4) * t663;
t504 = t209 * qJD(1);
t417 = -t560 / 0.2e1 - t552 / 0.2e1;
t652 = t686 * t434;
t667 = t384 / 0.2e1;
t478 = t209 * t494;
t361 = t368 ^ 2;
t651 = t371 ^ 2;
t660 = t361 + t651;
t386 = t390 ^ 2;
t388 = t392 ^ 2;
t378 = t386 + t388;
t658 = qJD(6) * t360 + t661;
t655 = qJD(5) * t209;
t654 = qJD(5) * t693;
t262 = t397 * t273;
t564 = t394 * t277;
t541 = -t564 / 0.2e1 + t262 / 0.2e1;
t84 = -t542 + t676;
t653 = -qJD(1) * t84 + t529;
t385 = -pkin(2) * t393 - pkin(1);
t447 = pkin(3) * t368 - qJ(4) * t371;
t282 = t385 + t447;
t362 = t396 * t375;
t365 = t634 * t377;
t313 = t365 - t362;
t572 = t390 * t313;
t188 = t282 * t392 - t572;
t573 = t371 * t392;
t146 = pkin(4) * t368 - pkin(8) * t573 + t188;
t299 = t392 * t313;
t189 = t282 * t390 + t299;
t161 = -pkin(8) * t285 + t189;
t71 = -t146 * t398 + t161 * t395;
t59 = -pkin(9) * t278 - t71;
t631 = t368 * pkin(5);
t43 = t59 + t631;
t42 = t397 * t43;
t650 = -t42 / 0.2e1;
t649 = -t43 / 0.2e1;
t648 = t662 / 0.2e1;
t469 = -t264 / 0.2e1;
t645 = -t459 / 0.2e1;
t644 = t459 / 0.2e1;
t642 = -t434 / 0.2e1;
t640 = -t366 / 0.2e1;
t639 = t366 / 0.2e1;
t636 = -t370 / 0.2e1;
t635 = t370 / 0.2e1;
t633 = pkin(5) * t278;
t632 = pkin(5) * t370;
t630 = t371 * pkin(3);
t629 = t371 * pkin(5);
t26 = t434 * t648 + t643 * t662 + (t644 - t645) * t171;
t28 = t171 * t459 + t434 * t662;
t626 = qJD(5) * t26 + qJD(6) * t28;
t57 = -t171 * t642 - t459 * t648;
t58 = t171 * t643 + t645 * t662;
t625 = qJD(5) * t57 + qJD(6) * t58;
t406 = t434 * t638;
t101 = t406 + t541;
t581 = t434 * t368;
t102 = -t581 / 0.2e1 + t541;
t624 = -qJD(5) * t101 - qJD(6) * t102;
t100 = t406 - t541;
t111 = t581 / 0.2e1 + t541;
t623 = -qJD(5) * t100 + qJD(6) * t111;
t622 = pkin(5) * qJD(5);
t621 = pkin(5) * qJD(6);
t170 = -t262 + t564;
t283 = t390 * t368;
t243 = -pkin(4) * t283 + t313;
t178 = -pkin(5) * t273 + t243;
t72 = t146 * t395 + t161 * t398;
t60 = -pkin(9) * t209 + t72;
t616 = t394 * t60;
t21 = -t42 + t616;
t610 = qJ(4) * t368;
t300 = t610 + t630;
t578 = t311 * t390;
t201 = t300 * t392 + t578;
t154 = pkin(8) * t368 * t392 + pkin(4) * t371 + t201;
t153 = t398 * t154;
t298 = t392 * t311;
t202 = t300 * t390 - t298;
t179 = pkin(8) * t283 + t202;
t562 = t395 * t179;
t460 = t153 - t562;
t56 = -pkin(9) * t277 + t460 + t629;
t614 = t397 * t56;
t152 = t395 * t154;
t166 = t398 * t179;
t545 = t166 + t152;
t63 = pkin(9) * t273 + t545;
t615 = t394 * t63;
t1 = (t614 - t615) * t368 - t21 * t371 + t178 * t171 + t177 * t170;
t620 = t1 * qJD(1);
t175 = t553 + t567;
t612 = t397 * t60;
t22 = t394 * t43 + t612;
t611 = t397 * t63;
t618 = t394 * t56;
t2 = -(t611 + t618) * t368 - t22 * t371 + t178 * t662 + t177 * t175;
t619 = t2 * qJD(1);
t617 = t394 * t59;
t613 = t397 * t59;
t23 = -t612 - t617;
t15 = t171 * t633 + t23 * t368 + t680;
t609 = qJD(1) * t15;
t24 = t613 - t616;
t16 = -t24 * t368 + t633 * t662 - t684;
t608 = qJD(1) * t16;
t17 = t21 * t368 - t684;
t607 = qJD(1) * t17;
t18 = -t22 * t368 + t680;
t606 = qJD(1) * t18;
t37 = -t209 * t242 + t368 * t71;
t605 = qJD(1) * t37;
t38 = t242 * t278 - t368 * t72;
t604 = qJD(1) * t38;
t592 = t189 * t392;
t593 = t188 * t390;
t66 = t311 * t371 + (-t592 + t593) * t368;
t603 = qJD(1) * t66;
t596 = t171 * t371;
t597 = t170 * t368;
t67 = -t596 - t597;
t602 = qJD(1) * t67;
t68 = t596 - t597;
t601 = qJD(1) * t68;
t594 = t662 * t371;
t595 = t175 * t368;
t69 = t594 + t595;
t600 = qJD(1) * t69;
t70 = t594 - t595;
t599 = qJD(1) * t70;
t438 = -t188 * t392 - t189 * t390;
t81 = t438 * t371;
t598 = qJD(1) * t81;
t19 = t209 * t243 - t242 * t273 + t368 * t460 - t371 * t71;
t591 = t19 * qJD(1);
t20 = t242 * t277 + t243 * t278 - t368 * t545 - t371 * t72;
t590 = t20 * qJD(1);
t589 = t201 * t392;
t588 = t202 * t390;
t587 = t273 * t368;
t586 = t209 * t371;
t585 = t277 * t368;
t584 = t278 * t371;
t30 = -t170 * t662 - t171 * t175;
t580 = t30 * qJD(1);
t31 = (t588 + t589) * t371 + t438 * t368;
t579 = t31 * qJD(1);
t401 = t242 * t635 + t278 * t667 + t312 * t638;
t449 = t153 / 0.2e1 - t562 / 0.2e1;
t32 = -t401 + t449;
t577 = t32 * qJD(1);
t402 = t209 * t667 + t242 * t639 + t310 * t638;
t466 = -t152 / 0.2e1 - t166 / 0.2e1;
t33 = t402 + t466;
t576 = t33 * qJD(1);
t36 = t188 * t201 + t189 * t202 + t311 * t313;
t575 = t36 * qJD(1);
t44 = (t188 + t572) * t371 + (t201 - t578) * t368;
t550 = t44 * qJD(1);
t45 = (-t189 + t299) * t371 + (-t202 - t298) * t368;
t549 = t45 * qJD(1);
t463 = -t386 / 0.2e1 - t388 / 0.2e1;
t405 = t463 * t610 - t630 / 0.2e1;
t418 = t589 / 0.2e1 + t588 / 0.2e1;
t73 = t405 - t418;
t548 = t73 * qJD(1);
t94 = -t209 * t277 + t273 * t278;
t546 = t94 * qJD(1);
t379 = t391 ^ 2 + t393 ^ 2;
t538 = qJD(1) * t693;
t135 = -t586 + t587;
t537 = qJD(1) * t135;
t136 = t586 + t587;
t536 = qJD(1) * t136;
t137 = t584 + t585;
t535 = qJD(1) * t137;
t138 = t584 - t585;
t534 = qJD(1) * t138;
t532 = qJD(1) * t278;
t531 = qJD(3) * t101;
t196 = (t635 - t417) * t368;
t530 = qJD(3) * t196;
t528 = qJD(3) * t313;
t527 = qJD(3) * t314;
t526 = qJD(3) * t370;
t525 = qJD(3) * t384;
t524 = qJD(4) * t368;
t523 = qJD(5) * t368;
t522 = qJD(5) * t370;
t520 = qJD(6) * t314;
t519 = t100 * qJD(1);
t518 = t100 * qJD(3);
t82 = t101 * qJD(1);
t83 = t102 * qJD(1);
t156 = t371 * t459;
t514 = t156 * qJD(1);
t158 = t371 * t434;
t513 = t158 * qJD(1);
t165 = t469 + t646;
t512 = t165 * qJD(1);
t195 = (t635 + t417) * t368;
t511 = t195 * qJD(1);
t510 = t195 * qJD(3);
t192 = t196 * qJD(1);
t471 = t561 / 0.2e1;
t416 = -t551 / 0.2e1 + t471;
t197 = (t639 + t416) * t368;
t509 = t197 * qJD(1);
t198 = (t640 + t416) * t368;
t508 = t198 * qJD(1);
t467 = t551 / 0.2e1;
t472 = t366 * t638;
t199 = t368 * t467 + t561 * t638 + t472;
t507 = t199 * qJD(1);
t203 = t378 * t651;
t506 = t203 * qJD(1);
t505 = t574 * qJD(1);
t450 = t463 * t371;
t220 = t450 - t360;
t502 = t220 * qJD(1);
t233 = t660 * t390;
t501 = t233 * qJD(1);
t271 = t361 - t651;
t500 = t271 * qJD(1);
t499 = t285 * qJD(1);
t290 = t378 * t368;
t498 = t290 * qJD(1);
t291 = t660 * t392;
t497 = t291 * qJD(1);
t496 = t360 * qJD(1);
t356 = t366 * qJD(5);
t357 = t368 * qJD(3);
t492 = t371 * qJD(3);
t372 = t379 * qJ(2);
t491 = t372 * qJD(1);
t490 = t378 * qJD(3);
t489 = t379 * qJD(1);
t488 = t633 / 0.2e1;
t487 = t632 / 0.2e1;
t486 = -t631 / 0.2e1;
t485 = -t615 / 0.2e1;
t484 = -t611 / 0.2e1;
t169 = t555 + t666;
t481 = t169 * t494;
t174 = -t554 + t568;
t480 = t174 * t494;
t479 = t574 * t494;
t477 = t371 * t524;
t308 = t368 * t492;
t476 = t392 * t493;
t464 = -t362 / 0.2e1 + t365 / 0.2e1;
t462 = pkin(5) * t686;
t457 = qJD(1) * t385 + qJD(2);
t456 = qJD(5) + t494;
t455 = -qJD(6) - t494;
t454 = qJD(4) + t525;
t453 = t368 * t476;
t452 = t486 + t59 / 0.2e1;
t451 = t629 / 0.2e1 + t56 / 0.2e1;
t448 = 0.2e1 * t647;
t7 = (t649 + t452) * t394;
t446 = t7 * qJD(1);
t9 = t397 * t452 + t650;
t445 = t9 * qJD(1);
t144 = t314 * t434 - t459 * t632;
t399 = t177 * t643 + t641 * t662 - t696;
t420 = t485 + t614 / 0.2e1;
t4 = (t397 * t371 / 0.2e1 + t171 * t636 + t278 * t645) * pkin(5) + t399 + t420;
t443 = -qJD(1) * t4 - qJD(3) * t144;
t145 = t314 * t459 + t434 * t632;
t400 = t177 * t644 + t692;
t421 = -t618 / 0.2e1 + t484;
t3 = (-t394 * t371 / 0.2e1 + t662 * t636 + t278 * t643) * pkin(5) + t400 + t421;
t442 = -qJD(1) * t3 - qJD(3) * t145;
t441 = qJD(3) * t26 + t688;
t440 = qJD(1) * t26 + t687;
t439 = qJD(3) * t28 + t688;
t437 = -t201 * t390 + t202 * t392;
t128 = t209 ^ 2 - t278 ^ 2;
t93 = t209 * t366 - t278 * t370;
t433 = qJD(1) * t128 + qJD(3) * t93;
t432 = qJD(1) * t28 + t687;
t87 = (-t278 / 0.2e1 + t574 / 0.2e1) * t394 + t448;
t431 = qJD(1) * t87 - t675;
t86 = t469 + t685 + t542;
t430 = qJD(1) * t86 + t529;
t270 = t366 ^ 2 - t370 ^ 2;
t429 = qJD(1) * t93 + qJD(3) * t270;
t89 = t252 + t568 / 0.2e1 + t448;
t428 = qJD(1) * t89 - t675;
t373 = t378 * qJ(4);
t419 = t593 / 0.2e1 - t592 / 0.2e1;
t79 = t419 + t464;
t427 = qJD(1) * t79 - qJD(3) * t373;
t180 = t329 / 0.2e1 + (t471 - t551) * t371;
t426 = qJD(1) * t180 - t526;
t425 = -qJD(3) * t366 - t504;
t424 = t686 * t171;
t403 = t177 * t642 + t314 * t648 + t696;
t11 = -t403 + t420;
t415 = qJD(1) * t11 + t434 * t527;
t404 = t177 * t645 - t692;
t12 = -t404 + t421;
t414 = qJD(1) * t12 + t459 * t527;
t413 = -qJD(3) * t58 + t682;
t412 = qJD(3) * t57 - t682;
t411 = -qJD(1) * t58 - t678;
t410 = qJD(1) * t57 + t678;
t134 = -t209 * t635 + t278 * t640;
t409 = qJD(3) * t134 - t209 * t532;
t408 = -qJD(1) * t134 + t366 * t526;
t350 = t360 * qJD(3);
t219 = t450 + t360;
t200 = t368 * t416 + t472;
t194 = t195 * qJD(5);
t193 = t196 * qJD(5);
t183 = -t329 / 0.2e1 + (t467 + t416) * t371;
t167 = -t192 - t522;
t129 = t134 * qJD(5);
t113 = 0.2e1 * t469 + t666;
t112 = 0.2e1 * t252 - t554;
t109 = t474 - t544;
t92 = t93 * qJD(5);
t80 = -t419 + t464;
t74 = t405 + t418;
t65 = t652 - t83;
t64 = t652 - t82;
t35 = t401 + t449;
t34 = -t402 + t466;
t14 = t403 + t420;
t13 = t404 + t421;
t10 = t397 * t486 + t616 + t650 - t613 / 0.2e1;
t8 = -t612 - t617 / 0.2e1 + (t486 + t649) * t394;
t6 = -t394 * t451 - t434 * t488 + t487 * t662 - t400 + t484;
t5 = t171 * t487 + t397 * t451 + t459 * t488 - t399 + t485;
t25 = [0, 0, 0, 0, 0, t379 * qJD(2), t372 * qJD(2), -t308, t271 * qJD(3), 0, 0, 0, t385 * t492, -t385 * t357, qJD(2) * t233 + qJD(3) * t44 - t392 * t477, qJD(2) * t291 + qJD(3) * t45 + t390 * t477, -qJD(3) * t31 + qJD(4) * t203, qJD(2) * t66 + qJD(3) * t36 + qJD(4) * t81 (qJD(3) * t277 - t655) * t278, qJD(3) * t94 + qJD(5) * t128, qJD(3) * t137 - t209 * t523, qJD(3) * t135 - t278 * t523, t308, qJD(2) * t136 + qJD(3) * t19 + qJD(5) * t38 + t524 * t574, qJD(2) * t138 + qJD(3) * t20 + qJD(5) * t37 + t209 * t524 (qJD(3) * t175 - t424) * t662, qJD(3) * t30 + t670 * t686, t69 * qJD(3) - t368 * t424, -t368 * t662 * t686 + t67 * qJD(3), t308, qJD(2) * t68 + qJD(3) * t1 + qJD(5) * t15 + qJD(6) * t18 + t169 * t524, qJD(2) * t70 + qJD(3) * t2 + qJD(5) * t16 + qJD(6) * t17 - t174 * t524; 0, 0, 0, 0, 0, t489, t491, 0, 0, 0, 0, 0, 0, 0, t501, t497, 0, qJD(3) * t74 + qJD(4) * t219 + t603, 0, 0, 0, 0, 0, -t194 + t536, -qJD(5) * t198 + t534, 0, 0, 0, 0, 0, t601 + t623, qJD(6) * t109 + t599 - t654; 0, 0, 0, 0, 0, 0, 0, -t309, t500, -t357, -t492, 0, t385 * t493 - t528, qJD(3) * t311 - t385 * t494, t550 + (t390 * t447 - t299) * qJD(3) - t283 * qJD(4), t390 * t528 + t549 + (qJD(3) * t447 - t524) * t392, qJD(3) * t437 - t579, t575 + t74 * qJD(2) + (-t313 * pkin(3) + qJ(4) * t437) * qJD(3) + t80 * qJD(4), t129 + (t526 + t532) * t277, t546 + (t273 * t370 - t277 * t366) * qJD(3) + t92, qJD(5) * t200 + t370 * t492 + t535, -t366 * t492 - t194 + t537, t661, t591 + (t243 * t366 - t273 * t384 - t310 * t371) * qJD(3) - t196 * qJD(4) + t35 * qJD(5), t590 + (t243 * t370 + t277 * t384 - t312 * t371) * qJD(3) - t199 * qJD(4) + t34 * qJD(5) (-t529 + t533) * t175 + t625, t580 + (t170 * t434 - t175 * t459) * qJD(3) + t626, qJD(6) * t693 - t434 * t492 + t600 + t654, -t459 * t492 + t602 + t623, t658, t620 + (t170 * t314 + t178 * t459 + t371 * t436) * qJD(3) - t101 * qJD(4) + t5 * qJD(5) + t14 * qJD(6), t619 + (-t160 * t371 + t175 * t314 - t178 * t434) * qJD(3) - t694 * qJD(4) + t6 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t283 - t453 (-qJD(3) * t392 + t390 * t493) * t368, t506, qJD(2) * t219 + qJD(3) * t80 + t598, 0, 0, 0, 0, 0, qJD(5) * t183 + t479 - t530, -qJD(3) * t199 + t478, 0, 0, 0, 0, 0, t657 * t686 + t481 - t531, -qJD(3) * t694 + t663 * t686 - t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, t433, t200 * qJD(3) - t209 * t456, -t278 * t456 - t510, t350, -qJD(2) * t195 + qJD(3) * t35 + qJD(4) * t183 - qJD(5) * t72 + t604, -qJD(2) * t198 + qJD(3) * t34 + qJD(5) * t71 + t605, t412, t441, t112 * qJD(6) - t171 * t456 + t656, t113 * qJD(6) - t456 * t662 - t518, t350, -qJD(2) * t100 + qJD(3) * t5 + qJD(5) * t23 + qJD(6) * t8 + t609 + t672, -qJD(2) * t693 + qJD(3) * t6 - qJD(5) * t24 + qJD(6) * t10 + t608 + t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, t439, t112 * qJD(5) + t171 * t455 + t656, t111 * qJD(3) + t113 * qJD(5) + t455 * t662, t350, qJD(2) * t111 + qJD(3) * t14 + qJD(5) * t8 - qJD(6) * t22 + t606 + t672, qJD(2) * t109 + qJD(3) * t13 + qJD(5) * t10 + qJD(6) * t21 + t607 + t671; 0, 0, 0, 0, 0, -t489, -t491, 0, 0, 0, 0, 0, t492, -t357, t392 * t492 - t501, -qJD(3) * t285 - t497, t290 * qJD(3), -qJD(3) * t73 + qJD(4) * t220 - t603, 0, 0, 0, 0, 0, -qJD(3) * t574 - t193 - t536, -qJD(3) * t209 - qJD(5) * t199 - t534, 0, 0, 0, 0, 0, -qJD(3) * t156 - t601 + t624, qJD(3) * t158 - t686 * t694 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t493, -t494, t476, -t499, t498, -t548, 0, 0, 0, 0, 0, -t505, -t504, 0, 0, 0, 0, 0, -t514, t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, t356 - t507, 0, 0, 0, 0, 0, t64, t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t701; 0, 0, 0, 0, 0, 0, 0, t309, -t500, 0, 0, 0, -t457 * t371, t457 * t368, -qJD(2) * t573 - t550, qJD(2) * t285 - t549, -qJD(2) * t290 + t579, qJD(2) * t73 - qJD(4) * t79 - t575, -t277 * t532 + t129, t92 - t546, -qJD(5) * t197 - t535, -t193 - t537, -t661, qJD(2) * t574 - qJD(4) * t195 - qJD(5) * t32 - t591, qJD(2) * t209 - qJD(4) * t198 - qJD(5) * t33 - t590, -t175 * t533 + t625, -t580 + t626, -t686 * t695 - t600, -t602 + t624, -t658, qJD(2) * t156 - qJD(4) * t100 - qJD(5) * t4 - qJD(6) * t11 - t620, -qJD(2) * t158 - qJD(4) * t693 - qJD(5) * t3 - qJD(6) * t12 - t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493, t494, -t476, t499, -t498, t548, 0, 0, 0, 0, 0, t505, t504, 0, 0, 0, 0, 0, t514, -t513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378 * qJD(4), t373 * qJD(4), -t370 * t356, t270 * qJD(5), 0, 0, 0, t384 * t522, -t384 * t356, t668 * t434, t686 * t669, 0, 0, 0, -qJD(5) * t144 - t434 * t520, -qJD(5) * t145 - t459 * t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, -t427, 0, 0, 0, 0, 0, -t511, -t508, 0, 0, 0, 0, 0, -t519, -t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408, t429, -t356 - t509, t167, -t496, -qJD(5) * t312 + t370 * t525 - t577, qJD(5) * t310 - t366 * t525 - t576, t410, t440, t702, t64, -t496, t443 - t691, t442 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t411, t432, t702, t65, -t496, -t415 - t691, -t414 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t453, -t390 * t309, -t506, -qJD(2) * t220 + qJD(3) * t79 - t598, 0, 0, 0, 0, 0, -qJD(5) * t180 - t479 + t510, qJD(3) * t198 - t478 - t655, 0, 0, 0, 0, 0, qJD(5) * t84 - qJD(6) * t86 - t481 + t518, qJD(5) * t89 + qJD(6) * t87 + t480 + t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, t427, 0, 0, 0, 0, 0, t511 + t522, -t356 + t508, 0, 0, 0, 0, 0, t519 - t652, t538 - t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t425, 0, 0, 0, 0, 0, -t653, t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t430, t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, -t433, qJD(3) * t197 + t478, t278 * t494 + t530, t350, qJD(2) * t196 + qJD(3) * t32 + qJD(4) * t180 - t604, qJD(2) * t199 + qJD(3) * t33 + qJD(4) * t209 - t605, -t412, -t441, t697, qJD(6) * t165 + t531 + t677, t350, qJD(2) * t101 + qJD(3) * t4 - qJD(4) * t84 + qJD(6) * t7 - t609, qJD(3) * t3 - qJD(4) * t89 + qJD(6) * t9 - t608 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t507, 0, 0, 0, 0, 0, t82, t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408, -t429, t509, t192, t496, -t370 * t454 + t577, t366 * t454 + t576, -t410, -t440, t698, t82, t496, -t443 + t674, -t442 + t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, -t425, 0, 0, 0, 0, 0, t653, -t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394 * t621, -t397 * t621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t512, 0, -t394 * t462 + t446, -t397 * t462 + t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, -t439, t697, qJD(3) * t102 - qJD(5) * t165 + t677, t350, qJD(2) * t102 + qJD(3) * t11 + qJD(4) * t86 - qJD(5) * t7 - t606, qJD(3) * t12 - qJD(4) * t87 - qJD(5) * t9 - t607 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t411, -t432, t698, t83, t496, t415 + t674, t414 + t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t430, -t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512, 0, t394 * t622 - t446, t397 * t622 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
