% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 19:05
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPRR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR6_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR6_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR6_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 19:05:35
% EndTime: 2019-05-05 19:05:44
% DurationCPUTime: 9.52s
% Computational Cost: add. (91293->332), mult. (226620->465), div. (0->0), fcn. (176762->12), ass. (0->259)
t2191 = qJD(1) ^ 2;
t2186 = sin(qJ(1));
t2190 = cos(qJ(1));
t2165 = t2186 * g(1) - t2190 * g(2);
t2202 = -qJDD(2) + t2165;
t2182 = cos(pkin(10));
t2208 = pkin(2) * t2182 + pkin(1);
t2180 = sin(pkin(10));
t2175 = t2180 ^ 2;
t2176 = t2182 ^ 2;
t2211 = t2175 + t2176;
t2131 = t2208 * qJDD(1) + (pkin(7) * t2211 + qJ(2)) * t2191 + t2202;
t2162 = t2211 * t2191;
t2185 = sin(qJ(3));
t2189 = cos(qJ(3));
t2156 = (t2180 * t2185 - t2182 * t2189) * qJD(1);
t2153 = qJD(5) + t2156;
t2149 = qJD(6) + t2153;
t2240 = qJD(6) + t2149;
t2201 = t2180 * t2189 + t2182 * t2185;
t2158 = t2201 * qJD(1);
t2152 = t2158 * qJD(3);
t2173 = t2182 * qJDD(1);
t2210 = t2180 * qJDD(1);
t2212 = -t2189 * t2173 + t2185 * t2210;
t2135 = t2152 + t2212;
t2179 = sin(pkin(11));
t2181 = cos(pkin(11));
t2145 = -qJD(3) * t2181 + t2158 * t2179;
t2146 = qJD(3) * t2179 + t2158 * t2181;
t2221 = t2145 * t2146;
t2098 = t2135 - t2221;
t2239 = t2201 * qJDD(1);
t2236 = qJD(3) ^ 2;
t2184 = sin(qJ(5));
t2188 = cos(qJ(5));
t2115 = t2188 * t2145 + t2146 * t2184;
t2117 = -t2145 * t2184 + t2146 * t2188;
t2183 = sin(qJ(6));
t2187 = cos(qJ(6));
t2088 = t2187 * t2115 + t2117 * t2183;
t2235 = t2088 ^ 2;
t2090 = -t2115 * t2183 + t2117 * t2187;
t2234 = t2090 ^ 2;
t2233 = t2115 ^ 2;
t2232 = t2117 ^ 2;
t2231 = t2145 ^ 2;
t2230 = t2146 ^ 2;
t2229 = t2149 ^ 2;
t2228 = t2153 ^ 2;
t2138 = t2156 ^ 2;
t2227 = t2158 ^ 2;
t2226 = -2 * qJD(4);
t2225 = t2182 * g(3);
t2224 = qJD(2) * qJD(1);
t2223 = t2088 * t2090;
t2222 = t2115 * t2117;
t2220 = t2146 * t2156;
t2219 = t2153 * t2115;
t2218 = t2156 * qJD(3);
t2217 = t2156 * t2145;
t2216 = t2156 * t2158;
t2215 = t2176 * t2191;
t2214 = qJD(5) - t2153;
t2213 = qJD(6) - t2149;
t2203 = t2190 * g(1) + t2186 * g(2);
t2196 = -t2191 * pkin(1) + qJDD(1) * qJ(2) - t2203;
t2140 = -g(3) * t2180 + (t2196 + 0.2e1 * t2224) * t2182;
t2127 = -pkin(2) * t2215 + pkin(7) * t2173 + t2140;
t2209 = -0.2e1 * t2224;
t2194 = -t2225 + (t2209 + t2208 * t2191 + (-pkin(7) - qJ(2)) * qJDD(1) + t2203) * t2180;
t2092 = t2189 * t2127 + t2185 * t2194;
t2129 = pkin(3) * t2156 - qJ(4) * t2158;
t2076 = -pkin(3) * t2236 + qJDD(3) * qJ(4) - t2129 * t2156 + t2092;
t2137 = t2239 - t2218;
t2083 = (-t2137 + t2218) * qJ(4) + (t2135 + t2152) * pkin(3) - t2131;
t2039 = -t2179 * t2076 + t2181 * t2083 + t2146 * t2226;
t2126 = qJDD(3) * t2179 + t2137 * t2181;
t2097 = -t2126 - t2217;
t2027 = pkin(4) * t2098 + t2097 * pkin(8) + t2039;
t2040 = t2181 * t2076 + t2179 * t2083 + t2145 * t2226;
t2125 = pkin(4) * t2156 - pkin(8) * t2146;
t2205 = t2181 * qJDD(3) - t2137 * t2179;
t2031 = -pkin(4) * t2231 + pkin(8) * t2205 - t2156 * t2125 + t2040;
t1997 = t2184 * t2027 + t2188 * t2031;
t1996 = t2188 * t2027 - t2184 * t2031;
t2197 = -t2188 * t2126 - t2184 * t2205;
t2075 = -t2115 * qJD(5) - t2197;
t2206 = t2184 * t2126 - t2188 * t2205;
t2199 = qJD(5) * t2117 + t2206;
t2207 = -t2183 * t2075 - t2187 * t2199;
t2091 = -t2127 * t2185 + t2189 * t2194;
t2204 = -qJDD(5) - t2135;
t2200 = -qJDD(6) + t2204;
t2079 = -t2204 - t2222;
t2074 = -qJDD(3) * pkin(3) - qJ(4) * t2236 + t2129 * t2158 + qJDD(4) - t2091;
t2195 = -t2187 * t2075 + t2183 * t2199;
t2041 = -t2205 * pkin(4) - t2231 * pkin(8) + t2125 * t2146 + t2074;
t2167 = t2180 * t2191 * t2182;
t2164 = -qJDD(1) * t2186 - t2190 * t2191;
t2163 = qJDD(1) * t2190 - t2186 * t2191;
t2161 = t2211 * qJDD(1);
t2160 = t2182 * t2162;
t2159 = t2180 * t2162;
t2154 = qJDD(1) * pkin(1) + t2191 * qJ(2) + t2202;
t2147 = -t2227 - t2236;
t2139 = -t2225 + (-t2196 + t2209) * t2180;
t2136 = t2239 - 0.2e1 * t2218;
t2134 = 0.2e1 * t2152 + t2212;
t2133 = -qJDD(3) - t2216;
t2132 = qJDD(3) - t2216;
t2130 = -t2138 - t2236;
t2119 = -t2227 - t2138;
t2118 = -t2135 + t2152;
t2114 = -t2138 - t2230;
t2111 = t2133 * t2189 - t2147 * t2185;
t2110 = t2133 * t2185 + t2147 * t2189;
t2109 = -t2138 - t2231;
t2108 = -t2139 * t2180 + t2140 * t2182;
t2107 = t2139 * t2182 + t2140 * t2180;
t2105 = t2118 * t2189 + t2185 * t2239;
t2104 = t2118 * t2185 - t2189 * t2239;
t2103 = t2130 * t2189 - t2132 * t2185;
t2102 = t2130 * t2185 + t2132 * t2189;
t2101 = -t2230 - t2231;
t2100 = pkin(5) * t2153 - pkin(9) * t2117;
t2099 = -t2135 - t2221;
t2096 = t2126 - t2217;
t2095 = t2205 + t2220;
t2094 = -t2205 + t2220;
t2093 = -t2228 - t2232;
t2087 = -t2110 * t2180 + t2111 * t2182;
t2086 = t2110 * t2182 + t2111 * t2180;
t2085 = -t2228 - t2233;
t2080 = t2204 - t2222;
t2078 = t2099 * t2181 - t2114 * t2179;
t2077 = t2099 * t2179 + t2114 * t2181;
t2070 = -t2104 * t2180 + t2105 * t2182;
t2069 = t2104 * t2182 + t2105 * t2180;
t2068 = -t2098 * t2179 + t2109 * t2181;
t2067 = t2098 * t2181 + t2109 * t2179;
t2066 = -t2229 - t2234;
t2065 = -t2102 * t2180 + t2103 * t2182;
t2064 = t2102 * t2182 + t2103 * t2180;
t2063 = -t2232 - t2233;
t2062 = t2095 * t2181 - t2097 * t2179;
t2061 = t2095 * t2179 + t2097 * t2181;
t2060 = -t2091 * t2185 + t2092 * t2189;
t2059 = t2091 * t2189 + t2092 * t2185;
t2058 = t2115 * t2214 + t2197;
t2057 = t2075 - t2219;
t2056 = -t2117 * t2214 - t2206;
t2055 = (qJD(5) + t2153) * t2117 + t2206;
t2054 = t2078 * t2189 + t2096 * t2185;
t2053 = t2078 * t2185 - t2096 * t2189;
t2052 = t2080 * t2188 - t2093 * t2184;
t2051 = t2080 * t2184 + t2093 * t2188;
t2050 = t2068 * t2189 + t2094 * t2185;
t2049 = t2068 * t2185 - t2094 * t2189;
t2048 = t2062 * t2189 + t2101 * t2185;
t2047 = t2062 * t2185 - t2101 * t2189;
t2046 = -t2229 - t2235;
t2045 = t2200 - t2223;
t2044 = -t2200 - t2223;
t2043 = -t2079 * t2184 + t2085 * t2188;
t2042 = t2079 * t2188 + t2085 * t2184;
t2038 = -t2234 - t2235;
t2037 = -t2059 * t2180 + t2060 * t2182;
t2036 = t2059 * t2182 + t2060 * t2180;
t2035 = t2045 * t2187 - t2066 * t2183;
t2034 = t2045 * t2183 + t2066 * t2187;
t2033 = t2056 * t2188 - t2058 * t2184;
t2032 = t2056 * t2184 + t2058 * t2188;
t2029 = -t2053 * t2180 + t2054 * t2182;
t2028 = t2053 * t2182 + t2054 * t2180;
t2024 = -t2051 * t2179 + t2052 * t2181;
t2023 = t2051 * t2181 + t2052 * t2179;
t2022 = -t2049 * t2180 + t2050 * t2182;
t2021 = t2049 * t2182 + t2050 * t2180;
t2020 = -t2047 * t2180 + t2048 * t2182;
t2019 = t2047 * t2182 + t2048 * t2180;
t2018 = -t2044 * t2183 + t2046 * t2187;
t2017 = t2044 * t2187 + t2046 * t2183;
t2016 = t2088 * t2213 + t2195;
t2015 = -t2088 * t2240 - t2195;
t2014 = -t2090 * t2213 + t2207;
t2013 = t2090 * t2240 - t2207;
t2012 = -t2042 * t2179 + t2043 * t2181;
t2011 = t2042 * t2181 + t2043 * t2179;
t2010 = pkin(5) * t2199 - pkin(9) * t2233 + t2100 * t2117 + t2041;
t2009 = -t2039 * t2179 + t2040 * t2181;
t2008 = t2039 * t2181 + t2040 * t2179;
t2007 = t2024 * t2189 + t2057 * t2185;
t2006 = t2024 * t2185 - t2057 * t2189;
t2005 = t2012 * t2189 + t2055 * t2185;
t2004 = t2012 * t2185 - t2055 * t2189;
t2003 = t2009 * t2189 + t2074 * t2185;
t2002 = t2009 * t2185 - t2074 * t2189;
t2001 = -t2034 * t2184 + t2035 * t2188;
t2000 = t2034 * t2188 + t2035 * t2184;
t1999 = -t2032 * t2179 + t2033 * t2181;
t1998 = t2032 * t2181 + t2033 * t2179;
t1995 = -t2017 * t2184 + t2018 * t2188;
t1994 = t2017 * t2188 + t2018 * t2184;
t1993 = t1999 * t2189 + t2063 * t2185;
t1992 = t1999 * t2185 - t2063 * t2189;
t1991 = t2014 * t2187 - t2016 * t2183;
t1990 = t2014 * t2183 + t2016 * t2187;
t1989 = -pkin(5) * t2233 - pkin(9) * t2199 - t2153 * t2100 + t1997;
t1988 = (-t2075 - t2219) * pkin(9) + t2079 * pkin(5) + t1996;
t1987 = -t2006 * t2180 + t2007 * t2182;
t1986 = t2006 * t2182 + t2007 * t2180;
t1985 = -t2004 * t2180 + t2005 * t2182;
t1984 = t2004 * t2182 + t2005 * t2180;
t1983 = -t2002 * t2180 + t2003 * t2182;
t1982 = t2002 * t2182 + t2003 * t2180;
t1981 = -t2000 * t2179 + t2001 * t2181;
t1980 = t2000 * t2181 + t2001 * t2179;
t1979 = -t1996 * t2184 + t1997 * t2188;
t1978 = t1996 * t2188 + t1997 * t2184;
t1977 = -t1994 * t2179 + t1995 * t2181;
t1976 = t1994 * t2181 + t1995 * t2179;
t1975 = -t1992 * t2180 + t1993 * t2182;
t1974 = t1992 * t2182 + t1993 * t2180;
t1973 = -t1990 * t2184 + t1991 * t2188;
t1972 = t1990 * t2188 + t1991 * t2184;
t1971 = t1981 * t2189 + t2015 * t2185;
t1970 = t1981 * t2185 - t2015 * t2189;
t1969 = t1988 * t2183 + t1989 * t2187;
t1968 = t1988 * t2187 - t1989 * t2183;
t1967 = t1977 * t2189 + t2013 * t2185;
t1966 = t1977 * t2185 - t2013 * t2189;
t1965 = -t1978 * t2179 + t1979 * t2181;
t1964 = t1978 * t2181 + t1979 * t2179;
t1963 = t1965 * t2189 + t2041 * t2185;
t1962 = t1965 * t2185 - t2041 * t2189;
t1961 = -t1972 * t2179 + t1973 * t2181;
t1960 = t1972 * t2181 + t1973 * t2179;
t1959 = -t1970 * t2180 + t1971 * t2182;
t1958 = t1970 * t2182 + t1971 * t2180;
t1957 = t1961 * t2189 + t2038 * t2185;
t1956 = t1961 * t2185 - t2038 * t2189;
t1955 = -t1968 * t2183 + t1969 * t2187;
t1954 = t1968 * t2187 + t1969 * t2183;
t1953 = -t1966 * t2180 + t1967 * t2182;
t1952 = t1966 * t2182 + t1967 * t2180;
t1951 = -t1962 * t2180 + t1963 * t2182;
t1950 = t1962 * t2182 + t1963 * t2180;
t1949 = -t1956 * t2180 + t1957 * t2182;
t1948 = t1956 * t2182 + t1957 * t2180;
t1947 = -t1954 * t2184 + t1955 * t2188;
t1946 = t1954 * t2188 + t1955 * t2184;
t1945 = -t1946 * t2179 + t1947 * t2181;
t1944 = t1946 * t2181 + t1947 * t2179;
t1943 = t1945 * t2189 + t2010 * t2185;
t1942 = t1945 * t2185 - t2010 * t2189;
t1941 = -t1942 * t2180 + t1943 * t2182;
t1940 = t1942 * t2182 + t1943 * t2180;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2164, -t2163, 0, -t2165 * t2186 - t2190 * t2203, 0, 0, 0, 0, 0, 0, -t2160 * t2190 - t2173 * t2186, t2159 * t2190 + t2186 * t2210, t2161 * t2190 - t2162 * t2186, t2108 * t2190 - t2154 * t2186, 0, 0, 0, 0, 0, 0, t2065 * t2190 + t2134 * t2186, t2087 * t2190 + t2136 * t2186, t2070 * t2190 + t2119 * t2186, t2037 * t2190 - t2131 * t2186, 0, 0, 0, 0, 0, 0, t2022 * t2190 + t2067 * t2186, t2029 * t2190 + t2077 * t2186, t2020 * t2190 + t2061 * t2186, t1983 * t2190 + t2008 * t2186, 0, 0, 0, 0, 0, 0, t1985 * t2190 + t2011 * t2186, t1987 * t2190 + t2023 * t2186, t1975 * t2190 + t1998 * t2186, t1951 * t2190 + t1964 * t2186, 0, 0, 0, 0, 0, 0, t1953 * t2190 + t1976 * t2186, t1959 * t2190 + t1980 * t2186, t1949 * t2190 + t1960 * t2186, t1941 * t2190 + t1944 * t2186; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2163, t2164, 0, t2165 * t2190 - t2186 * t2203, 0, 0, 0, 0, 0, 0, -t2160 * t2186 + t2173 * t2190, t2159 * t2186 - t2190 * t2210, t2161 * t2186 + t2162 * t2190, t2108 * t2186 + t2154 * t2190, 0, 0, 0, 0, 0, 0, t2065 * t2186 - t2134 * t2190, t2087 * t2186 - t2136 * t2190, t2070 * t2186 - t2119 * t2190, t2037 * t2186 + t2131 * t2190, 0, 0, 0, 0, 0, 0, t2022 * t2186 - t2067 * t2190, t2029 * t2186 - t2077 * t2190, t2020 * t2186 - t2061 * t2190, t1983 * t2186 - t2008 * t2190, 0, 0, 0, 0, 0, 0, t1985 * t2186 - t2011 * t2190, t1987 * t2186 - t2023 * t2190, t1975 * t2186 - t1998 * t2190, t1951 * t2186 - t1964 * t2190, 0, 0, 0, 0, 0, 0, t1953 * t2186 - t1976 * t2190, t1959 * t2186 - t1980 * t2190, t1949 * t2186 - t1960 * t2190, t1941 * t2186 - t1944 * t2190; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2107, 0, 0, 0, 0, 0, 0, t2064, t2086, t2069, t2036, 0, 0, 0, 0, 0, 0, t2021, t2028, t2019, t1982, 0, 0, 0, 0, 0, 0, t1984, t1986, t1974, t1950, 0, 0, 0, 0, 0, 0, t1952, t1958, t1948, t1940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2191, -qJDD(1), 0, -t2203, 0, 0, 0, 0, 0, 0, -t2160, t2159, t2161, t2108, 0, 0, 0, 0, 0, 0, t2065, t2087, t2070, t2037, 0, 0, 0, 0, 0, 0, t2022, t2029, t2020, t1983, 0, 0, 0, 0, 0, 0, t1985, t1987, t1975, t1951, 0, 0, 0, 0, 0, 0, t1953, t1959, t1949, t1941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2191, 0, t2165, 0, 0, 0, 0, 0, 0, t2173, -t2210, t2162, t2154, 0, 0, 0, 0, 0, 0, -t2134, -t2136, -t2119, t2131, 0, 0, 0, 0, 0, 0, -t2067, -t2077, -t2061, -t2008, 0, 0, 0, 0, 0, 0, -t2011, -t2023, -t1998, -t1964, 0, 0, 0, 0, 0, 0, -t1976, -t1980, -t1960, -t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2107, 0, 0, 0, 0, 0, 0, t2064, t2086, t2069, t2036, 0, 0, 0, 0, 0, 0, t2021, t2028, t2019, t1982, 0, 0, 0, 0, 0, 0, t1984, t1986, t1974, t1950, 0, 0, 0, 0, 0, 0, t1952, t1958, t1948, t1940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2215, t2167, t2173, t2140, 0, 0, 0, 0, 0, 0, t2103, t2111, t2105, t2060, 0, 0, 0, 0, 0, 0, t2050, t2054, t2048, t2003, 0, 0, 0, 0, 0, 0, t2005, t2007, t1993, t1963, 0, 0, 0, 0, 0, 0, t1967, t1971, t1957, t1943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2167, -t2175 * t2191, -t2210, t2139, 0, 0, 0, 0, 0, 0, t2102, t2110, t2104, t2059, 0, 0, 0, 0, 0, 0, t2049, t2053, t2047, t2002, 0, 0, 0, 0, 0, 0, t2004, t2006, t1992, t1962, 0, 0, 0, 0, 0, 0, t1966, t1970, t1956, t1942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2173, t2210, -t2162, -t2154, 0, 0, 0, 0, 0, 0, t2134, t2136, t2119, -t2131, 0, 0, 0, 0, 0, 0, t2067, t2077, t2061, t2008, 0, 0, 0, 0, 0, 0, t2011, t2023, t1998, t1964, 0, 0, 0, 0, 0, 0, t1976, t1980, t1960, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2130, t2133, t2118, t2092, 0, 0, 0, 0, 0, 0, t2068, t2078, t2062, t2009, 0, 0, 0, 0, 0, 0, t2012, t2024, t1999, t1965, 0, 0, 0, 0, 0, 0, t1977, t1981, t1961, t1945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2132, t2147, -t2239, t2091, 0, 0, 0, 0, 0, 0, -t2094, -t2096, -t2101, -t2074, 0, 0, 0, 0, 0, 0, -t2055, -t2057, -t2063, -t2041, 0, 0, 0, 0, 0, 0, -t2013, -t2015, -t2038, -t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2134, t2136, t2119, -t2131, 0, 0, 0, 0, 0, 0, t2067, t2077, t2061, t2008, 0, 0, 0, 0, 0, 0, t2011, t2023, t1998, t1964, 0, 0, 0, 0, 0, 0, t1976, t1980, t1960, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2109, t2099, t2095, t2040, 0, 0, 0, 0, 0, 0, t2043, t2052, t2033, t1979, 0, 0, 0, 0, 0, 0, t1995, t2001, t1973, t1947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2098, t2114, t2097, t2039, 0, 0, 0, 0, 0, 0, t2042, t2051, t2032, t1978, 0, 0, 0, 0, 0, 0, t1994, t2000, t1972, t1946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2094, t2096, t2101, t2074, 0, 0, 0, 0, 0, 0, t2055, t2057, t2063, t2041, 0, 0, 0, 0, 0, 0, t2013, t2015, t2038, t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2085, t2080, t2056, t1997, 0, 0, 0, 0, 0, 0, t2018, t2035, t1991, t1955; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2079, t2093, t2058, t1996, 0, 0, 0, 0, 0, 0, t2017, t2034, t1990, t1954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2055, t2057, t2063, t2041, 0, 0, 0, 0, 0, 0, t2013, t2015, t2038, t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046, t2045, t2014, t1969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2044, t2066, t2016, t1968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2013, t2015, t2038, t2010;];
f_new_reg  = t1;
