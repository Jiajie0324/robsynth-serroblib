% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:23:09
% EndTime: 2019-03-08 19:23:17
% DurationCPUTime: 5.69s
% Computational Cost: add. (5197->385), mult. (11951->609), div. (0->0), fcn. (13053->10), ass. (0->299)
t317 = sin(qJ(6));
t510 = 0.2e1 * t317;
t313 = sin(pkin(11));
t315 = cos(pkin(11));
t314 = sin(pkin(6));
t488 = cos(qJ(2));
t402 = t314 * t488;
t319 = sin(qJ(2));
t463 = t314 * t319;
t251 = -t313 * t402 + t315 * t463;
t316 = cos(pkin(6));
t318 = sin(qJ(5));
t321 = cos(qJ(5));
t200 = t251 * t321 - t316 * t318;
t250 = (t313 * t319 + t315 * t488) * t314;
t320 = cos(qJ(6));
t356 = t200 * t320 + t250 * t317;
t509 = -t356 / 0.2e1;
t446 = t321 * t313;
t287 = t320 * t446;
t456 = t317 * t315;
t375 = -t287 + t456;
t508 = -t375 / 0.2e1;
t409 = t318 * qJD(6);
t303 = t317 * t409;
t430 = qJD(5) * t321;
t507 = -t320 * t430 + t303;
t506 = -pkin(5) / 0.2e1;
t505 = -pkin(2) - pkin(3);
t474 = t250 * t320;
t477 = t200 * t317;
t118 = -t474 + t477;
t504 = t118 / 0.2e1;
t503 = -t200 / 0.2e1;
t502 = t200 / 0.2e1;
t449 = t320 * t315;
t258 = t317 * t446 + t449;
t501 = -t258 / 0.2e1;
t500 = t258 / 0.2e1;
t445 = t321 * t315;
t457 = t317 * t313;
t260 = t320 * t445 + t457;
t499 = -t260 / 0.2e1;
t309 = t317 ^ 2;
t498 = t309 / 0.2e1;
t310 = t318 ^ 2;
t497 = t310 / 0.2e1;
t312 = t321 ^ 2;
t496 = t312 / 0.2e1;
t495 = -t317 / 0.2e1;
t494 = t317 / 0.2e1;
t493 = t318 / 0.2e1;
t492 = -t320 / 0.2e1;
t491 = t320 / 0.2e1;
t490 = t321 / 0.2e1;
t199 = t251 * t318 + t316 * t321;
t342 = t356 * t320;
t461 = t317 * t118;
t324 = t342 / 0.2e1 + t461 / 0.2e1 + t503;
t363 = t375 * t320;
t460 = t317 * t258;
t331 = t363 / 0.2e1 - t460 / 0.2e1;
t386 = t199 * t490;
t9 = t331 * t199 + (-t318 * t324 + t386) * t313;
t489 = t9 * qJD(5);
t487 = t318 * pkin(5);
t486 = t321 * pkin(5);
t485 = t321 * pkin(9);
t311 = t320 ^ 2;
t367 = t311 / 0.2e1 + t498 - 0.1e1 / 0.2e1;
t68 = t331 * t321 + (t310 * t367 + t496) * t313;
t484 = t68 * qJD(5);
t470 = t251 * t320;
t473 = t250 * t321;
t139 = -t317 * t473 - t470;
t471 = t251 * t317;
t140 = t320 * t473 - t471;
t346 = t139 * t495 + t140 * t491;
t385 = -t473 / 0.2e1;
t39 = (t385 + t346) * t318;
t483 = qJD(1) * t39;
t273 = -t313 * qJ(3) + t315 * t505;
t268 = pkin(4) - t273;
t366 = t318 * pkin(9) + t486;
t326 = t268 + t366;
t274 = qJ(3) * t315 + t313 * t505;
t269 = -pkin(8) + t274;
t447 = t321 * t269;
t405 = t317 * t447;
t160 = -t320 * t326 + t405;
t482 = t160 * t321;
t403 = t320 * t447;
t161 = t317 * t326 + t403;
t481 = t161 * t321;
t455 = t317 * t318;
t253 = t269 * t455;
t286 = t485 - t487;
t452 = t320 * t286;
t196 = t253 + t452;
t480 = t196 * t318;
t448 = t320 * t318;
t404 = t269 * t448;
t459 = t317 * t286;
t197 = -t404 + t459;
t479 = t197 * t318;
t84 = t199 * t317;
t478 = t199 * t318;
t86 = t199 * t320;
t476 = t200 * t321;
t475 = t250 * t313;
t472 = t251 * t315;
t469 = t258 * t321;
t450 = t320 * t313;
t259 = -t317 * t445 + t450;
t468 = t259 * t317;
t467 = t269 * t318;
t466 = t310 * t269;
t465 = t311 * t321;
t464 = t313 * t315;
t462 = t315 * t318;
t458 = t317 * t310;
t454 = t318 * t313;
t453 = t318 * t321;
t451 = t320 * t310;
t37 = (-t251 + t476 + t478) * t250;
t444 = t37 * qJD(1);
t49 = -t161 * t318 + (t197 + 0.2e1 * t404) * t321;
t443 = t49 * qJD(2);
t347 = t375 * t495;
t66 = t321 * t347 + t468 / 0.2e1 + (-t469 / 0.2e1 + t499) * t320;
t442 = t66 * qJD(2);
t441 = t309 + t311;
t440 = t310 + t312;
t298 = t311 - t309;
t299 = t312 - t310;
t439 = qJD(2) * qJ(3);
t344 = t260 * t491 - t468 / 0.2e1;
t378 = -t445 / 0.2e1;
t121 = (t378 + t344) * t318;
t438 = qJD(2) * t121;
t158 = (t259 * t320 + t317 * t260) * t318;
t437 = qJD(2) * t158;
t203 = t259 * t321 - t310 * t456;
t436 = qJD(2) * t203;
t204 = t260 * t321 + t310 * t449;
t435 = qJD(2) * t204;
t434 = qJD(2) * t321;
t433 = qJD(5) * t317;
t432 = qJD(5) * t318;
t431 = qJD(5) * t320;
t429 = qJD(6) * t317;
t428 = qJD(6) * t320;
t427 = qJD(6) * t321;
t369 = -t456 + t287 / 0.2e1;
t408 = 0.1e1 / 0.2e1 + t497;
t148 = t321 * t369 + t408 * t450;
t426 = t148 * qJD(2);
t149 = (-t449 / 0.2e1 + t501) * t321 - t408 * t457;
t425 = t149 * qJD(2);
t379 = -t446 / 0.2e1;
t350 = t317 * t379 + t500;
t163 = (t449 / 0.2e1 + t350) * t318;
t424 = t163 * qJD(2);
t370 = t320 * t379;
t166 = (t370 + t369) * t318;
t423 = t166 * qJD(2);
t422 = t200 * qJD(5);
t421 = t250 * qJD(2);
t420 = t251 * qJD(2);
t261 = (t498 - t311 / 0.2e1) * t318;
t419 = t261 * qJD(6);
t265 = t440 * t315;
t418 = t265 * qJD(2);
t271 = t299 * t317;
t417 = t271 * qJD(2);
t272 = t312 * t320 - t451;
t416 = t272 * qJD(2);
t415 = t299 * qJD(2);
t414 = t313 * qJD(2);
t413 = t313 * qJD(3);
t412 = t315 * qJD(2);
t411 = t315 * qJD(3);
t410 = t318 * qJD(2);
t23 = (t479 / 0.2e1 + t481 / 0.2e1) * t320 + (-t480 / 0.2e1 + t482 / 0.2e1) * t317 + (t497 - t312 / 0.2e1) * t269;
t407 = qJD(3) * t121 + qJD(5) * t23;
t406 = -t487 / 0.2e1;
t401 = t320 * t410;
t400 = t317 * t427;
t399 = t320 * t427;
t398 = qJD(2) * t463;
t397 = t321 * t412;
t396 = t317 * t432;
t395 = t317 * t428;
t394 = t317 * t431;
t393 = t318 * t430;
t392 = t313 * t410;
t391 = t313 * t432;
t390 = t315 * t410;
t302 = t321 * t410;
t389 = t318 * t431;
t387 = t321 * t414;
t216 = t475 / 0.2e1;
t384 = t313 * t497;
t383 = -t462 / 0.2e1;
t382 = -t455 / 0.2e1;
t381 = t455 / 0.2e1;
t380 = -t448 / 0.2e1;
t377 = t496 + t497;
t376 = pkin(9) * t441;
t374 = qJD(5) * t441;
t373 = qJD(6) + t434;
t372 = t310 * t395;
t371 = t317 * t389;
t368 = qJD(2) * t402;
t365 = t251 / 0.2e1 - t478 / 0.2e1;
t364 = -t474 / 0.2e1 - t118 / 0.2e1;
t325 = (t118 * t492 + t356 * t494) * t321;
t20 = t325 - t346;
t29 = (t480 - t482) * t320 + (t479 + t481) * t317;
t362 = qJD(1) * t20 + qJD(2) * t29;
t25 = (t477 / 0.2e1 + t364) * t318;
t48 = t196 * t321 + (t160 - 0.2e1 * t405) * t318;
t361 = -t25 * qJD(1) + t48 * qJD(2);
t332 = -t476 / 0.2e1 + t365;
t33 = t332 * t320;
t94 = -t269 * t451 - t481;
t360 = -qJD(1) * t33 - qJD(2) * t94;
t34 = t317 * t365 + t321 * t364;
t93 = -t269 * t458 - t482;
t359 = qJD(1) * t34 + qJD(2) * t93;
t15 = -t118 * t139 + t140 * t356 + t250 * t478;
t358 = qJD(1) * t15 + qJD(4) * t39;
t357 = -t196 * t317 + t197 * t320;
t122 = t265 * t269 + t268 * t313;
t30 = t332 * t315 + (-0.1e1 / 0.2e1 + t377) * t475;
t355 = t30 * qJD(1) - t122 * qJD(2);
t354 = t373 * t320;
t143 = t216 - t475 / 0.2e1;
t198 = -t273 * t313 + t274 * t315;
t353 = qJD(1) * t143 - qJD(2) * t198;
t352 = qJD(2) * t268 - t411;
t351 = t485 / 0.2e1 + t406;
t341 = t286 / 0.2e1 + t351;
t201 = t341 * t317;
t349 = pkin(5) * t431 - qJD(2) * t201;
t202 = t341 * t320;
t348 = pkin(5) * t433 + qJD(2) * t202;
t345 = t160 * t494 + t161 * t491;
t343 = t318 * t354;
t220 = qJD(2) * t261 + t394;
t207 = qJD(2) * t317 * t451 - qJD(5) * t261;
t270 = t298 * t310;
t340 = -qJD(2) * t270 + 0.2e1 * t371;
t339 = qJD(5) * t298 + t401 * t510;
t338 = t317 * t430 + t320 * t409;
t337 = t346 * pkin(9);
t336 = t344 * pkin(9);
t327 = t196 * t504 + t197 * t509;
t1 = t250 * t406 + t467 * t503 + t337 + (-t447 / 0.2e1 + t345) * t199 + t327;
t32 = t269 ^ 2 * t453 - t160 * t196 + t161 * t197;
t335 = -t1 * qJD(1) + t32 * qJD(2) + t23 * qJD(4);
t14 = t321 * t324 - t367 * t478;
t18 = (t200 - t342 - t461) * t199;
t334 = t18 * qJD(1) + t9 * qJD(3) + t14 * qJD(4);
t38 = -t160 * t259 + t161 * t260 + t315 * t466;
t322 = t199 * t383 + t259 * t504 + t356 * t499;
t323 = t139 * t501 + t140 * t508 + t250 * t384;
t6 = t322 + t323;
t333 = -qJD(1) * t6 + qJD(2) * t38 + qJD(4) * t121;
t116 = -t313 ^ 2 * t453 + (-t363 + t460) * t454;
t329 = t197 * t375 / 0.2e1 + t196 * t500 - t446 * t467;
t12 = t336 + (t313 * t345 + t315 * t506) * t318 + t329;
t330 = t9 * qJD(1) - t12 * qJD(2) - t116 * qJD(3) - t68 * qJD(4);
t224 = (-0.1e1 + t441) * t453;
t328 = t14 * qJD(1) + t23 * qJD(2) - t68 * qJD(3) + t224 * qJD(4);
t306 = t309 * t321;
t304 = -t432 / 0.2e1;
t284 = t310 * t464;
t264 = t302 + t409 / 0.2e1;
t187 = t250 * t466;
t165 = t315 * t381 + (t370 + t508) * t318;
t164 = t315 * t380 + t318 * t350;
t151 = t317 * t378 + t375 * t490 + (-t310 / 0.2e1 + 0.1e1 / 0.2e1) * t450;
t150 = t469 / 0.2e1 + t317 * t384 + t320 * t378 - t457 / 0.2e1;
t147 = t253 + t452 / 0.2e1 - t351 * t320;
t146 = t404 - t459 / 0.2e1 + t351 * t317;
t80 = 0.2e1 * t216 + t472;
t65 = (t258 * t492 + t347) * t321 + t344;
t36 = t321 * t509 + t199 * t380 + t317 * t385 - t470 / 0.2e1;
t35 = t118 * t490 + t199 * t381 + t320 * t385 + t471 / 0.2e1;
t31 = t445 * t502 + t199 * t462 / 0.2e1 + t216 + t472 / 0.2e1 + t377 * t475;
t27 = t200 * t380 + t250 * t381 + t356 * t493;
t26 = t118 * t493 + t200 * t382 + t250 * t380;
t19 = t325 + t346;
t13 = pkin(5) * t383 - t329 + t336 + (t160 * t382 + t161 * t380) * t313;
t7 = -t322 + t323;
t3 = qJD(2) * t39 + qJD(5) * t14;
t2 = -t161 * t86 / 0.2e1 - t160 * t84 / 0.2e1 + t269 * t386 + (t250 * t506 + t269 * t502) * t318 + t337 - t327;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t15 + qJD(5) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, -t368, 0, 0, 0, 0, 0, 0, 0, 0, -t398, 0, t368 ((-pkin(2) * t319 + qJ(3) * t488) * qJD(2) + t319 * qJD(3)) * t314, 0, 0, 0, 0, 0, 0, -t420, t421, 0 (t250 * t274 + t251 * t273) * qJD(2) + t80 * qJD(3), 0, 0, 0, 0, 0, 0, -t250 * t432 - t321 * t420, -t250 * t430 + t251 * t410, -t421 * t440, t444 + (t250 * t269 * t312 - t251 * t268 + t187) * qJD(2) + t31 * qJD(3), 0, 0, 0, 0, 0, 0 (t139 * t321 - t250 * t458) * qJD(2) + t26 * qJD(5) + t36 * qJD(6) (-t140 * t321 - t250 * t451) * qJD(2) + t27 * qJD(5) + t35 * qJD(6), t19 * qJD(5) + (t139 * t320 + t317 * t140) * t410 (-t139 * t160 + t140 * t161 + t187) * qJD(2) + t7 * qJD(3) + t2 * qJD(5) + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t7 + t489; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250 * t410 - t422, qJD(5) * t199 - t321 * t421, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t26 + qJD(6) * t84 - t320 * t422, qJD(2) * t27 + qJD(6) * t86 + t317 * t422, t19 * qJD(2) - t199 * t374, t2 * qJD(2) + (-t200 * pkin(5) - t199 * t376) * qJD(5) + t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t36 + qJD(5) * t84 - qJD(6) * t356, qJD(2) * t35 + qJD(5) * t86 + qJD(6) * t118, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t143, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t30 - t444, 0, 0, 0, 0, 0, 0, -qJD(5) * t25 + qJD(6) * t33, -qJD(6) * t34, qJD(5) * t20, -qJD(3) * t6 - qJD(5) * t1 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, 0, t413, t411, 0, t198 * qJD(3), t393, t299 * qJD(5), 0, -t393, 0, 0, -t268 * t432 + t321 * t413, -t268 * t430 - t318 * t413, -t265 * qJD(3), t122 * qJD(3), t311 * t393 - t372, -qJD(6) * t270 - 0.2e1 * t321 * t371, -qJD(5) * t272 + t318 * t400, t309 * t393 + t372, qJD(5) * t271 + t318 * t399, -t393, qJD(3) * t203 + qJD(5) * t48 + qJD(6) * t94, -qJD(3) * t204 - qJD(5) * t49 - qJD(6) * t93, qJD(3) * t158 + qJD(5) * t29, qJD(3) * t38 + qJD(5) * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t439, 0, 0, 0, 0, 0, 0, t414, t412, 0, -t353, 0, 0, 0, 0, 0, 0, t387, -t392, -t418 (t284 + (t312 - 0.1e1) * t464) * qJD(3) - t355, 0, 0, 0, 0, 0, 0, qJD(5) * t164 + qJD(6) * t151 + t436, qJD(5) * t165 + qJD(6) * t150 - t435, qJD(5) * t65 + t437 (-t258 * t259 - t260 * t375 + t284) * qJD(3) + t13 * qJD(5) + t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407 - t483; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, t415, -t430, -t302, t432, 0, -t268 * t410 - t269 * t430, -t268 * t434 + t269 * t432, 0, 0, t419 + (t311 * t410 - t394) * t321 (t306 - t465) * qJD(5) + (qJD(6) - t434) * t448 * t510, -t396 - t416, -t419 + (t309 * t410 + t394) * t321, -t389 + t417, -t264, t164 * qJD(3) + (t317 * t366 - t403) * qJD(5) + t147 * qJD(6) + t361, -t443 + t165 * qJD(3) + (t320 * t366 + t405) * qJD(5) + t146 * qJD(6), qJD(3) * t65 + qJD(5) * t357 + t362, t13 * qJD(3) + (-pkin(5) * t447 + pkin(9) * t357) * qJD(5) + t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207, t340, t302 * t317 + t303, t207, t343, t304, qJD(3) * t151 + qJD(5) * t147 - qJD(6) * t161 - t360, qJD(3) * t150 + qJD(5) * t146 + qJD(6) * t160 - t359, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t6 + t489; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t439, 0, 0, 0, 0, 0, 0, -t414, -t412, 0, t353, 0, 0, 0, 0, 0, 0, t315 * t432 - t387, t315 * t430 + t392, t418, t355, 0, 0, 0, 0, 0, 0, qJD(5) * t163 - qJD(6) * t148 - t436, qJD(5) * t166 - qJD(6) * t149 + t435, qJD(5) * t66 - t437, -qJD(5) * t12 - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438 - t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313 * t430 + t390, t391 + t397, 0, 0, 0, 0, 0, 0, 0, 0, t313 * t507 + t424, t313 * t338 + t423, -t374 * t454 + t442 (-t318 * t376 - t486) * qJD(5) * t313 + t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6) * t375 + t317 * t391 - t426, qJD(6) * t258 + t313 * t389 - t425, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407 + t483; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438 - t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432, -t430, 0, 0, 0, 0, 0, 0, 0, 0, -t389 - t400, t396 - t399 (t306 + t465) * qJD(5) (t441 * t485 - t487) * qJD(5) + t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, t507, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t25, 0, -qJD(2) * t20, qJD(2) * t1 - t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, -t415, 0, t302, 0, 0, t352 * t318, t352 * t321, 0, 0, -t302 * t311 + t419, t343 * t510, t399 + t416, -t302 * t309 - t419, -t400 - t417, t264, -qJD(3) * t163 - qJD(6) * t202 - t361, -qJD(3) * t166 + qJD(6) * t201 + t443, -qJD(3) * t66 - t362, qJD(3) * t12 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t390, -t397, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t423, -t442, -t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t298 * qJD(6), 0, -t395, 0, 0, -pkin(5) * t429, -pkin(5) * t428, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, t339, t354, -t220, -t373 * t317, t410 / 0.2e1, -pkin(9) * t428 - t348, pkin(9) * t429 - t349, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t33, qJD(2) * t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, -t340 (-t317 * t410 - t431) * t321, -t207 (-t401 + t433) * t321, t304, qJD(3) * t148 + qJD(5) * t202 + t360, qJD(3) * t149 - qJD(5) * t201 + t359, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, t425, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220, -t339, -t320 * t434, t220, t317 * t434, -t410 / 0.2e1, t348, t349, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
