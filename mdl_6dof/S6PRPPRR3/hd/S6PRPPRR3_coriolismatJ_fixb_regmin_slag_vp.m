% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:23
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPPRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPPRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:23:05
% EndTime: 2019-03-08 19:23:10
% DurationCPUTime: 1.92s
% Computational Cost: add. (1030->206), mult. (2783->346), div. (0->0), fcn. (2917->10), ass. (0->169)
t122 = sin(qJ(6));
t231 = 0.2e1 * t122;
t123 = sin(qJ(5));
t181 = t123 * qJD(6);
t108 = t122 * t181;
t125 = cos(qJ(6));
t126 = cos(qJ(5));
t191 = qJD(5) * t126;
t230 = -t125 * t191 + t108;
t114 = t122 ^ 2;
t116 = t125 ^ 2;
t104 = t116 - t114;
t182 = t123 * qJD(2);
t174 = t125 * t182;
t130 = t104 * qJD(5) + t174 * t231;
t118 = sin(pkin(11));
t205 = t125 * t126;
t120 = cos(pkin(11));
t212 = t122 * t120;
t76 = t118 * t205 - t212;
t229 = t76 / 0.2e1;
t115 = t123 ^ 2;
t228 = t115 / 0.2e1;
t227 = t123 / 0.2e1;
t226 = -t126 / 0.2e1;
t225 = t126 / 0.2e1;
t224 = cos(qJ(2));
t223 = t123 * pkin(5);
t222 = t126 * pkin(9);
t97 = t222 - t223;
t221 = t122 * t97;
t220 = t125 * t97;
t119 = sin(pkin(6));
t175 = t119 * t224;
t124 = sin(qJ(2));
t215 = t119 * t124;
t71 = -t118 * t175 + t120 * t215;
t219 = t71 * t122;
t218 = t71 * t125;
t210 = t122 * t126;
t127 = -pkin(2) - pkin(3);
t89 = t120 * qJ(3) + t118 * t127;
t84 = -pkin(8) + t89;
t178 = t84 * t210;
t148 = t126 * pkin(5) + t123 * pkin(9);
t88 = -t118 * qJ(3) + t120 * t127;
t83 = pkin(4) - t88;
t128 = t148 + t83;
t31 = -t125 * t128 + t178;
t211 = t122 * t123;
t73 = t84 * t211;
t9 = (t73 + t220) * t126 + (t31 - 0.2e1 * t178) * t123;
t217 = t9 * qJD(2);
t209 = t123 * t125;
t177 = t84 * t209;
t176 = t84 * t205;
t32 = t122 * t128 + t176;
t10 = -t32 * t123 + (t177 + t221) * t126;
t216 = t10 * qJD(2);
t214 = t122 * t115;
t213 = t122 * t118;
t208 = t125 * t115;
t207 = t125 * t118;
t206 = t125 * t120;
t158 = -t212 / 0.2e1;
t179 = 0.1e1 / 0.2e1 + t228;
t26 = (t158 + t229) * t126 + t179 * t207;
t204 = t26 * qJD(2);
t154 = -t206 / 0.2e1;
t75 = t118 * t210 + t206;
t27 = (t154 - t75 / 0.2e1) * t126 - t179 * t213;
t203 = t27 * qJD(2);
t156 = -t210 / 0.2e1;
t141 = t118 * t156 + t75 / 0.2e1;
t33 = (t206 / 0.2e1 + t141) * t123;
t202 = t33 * qJD(2);
t153 = -t205 / 0.2e1;
t140 = t118 * t153 + t229;
t36 = (t158 + t140) * t123;
t201 = t36 * qJD(2);
t49 = -t88 * t118 + t89 * t120;
t200 = t49 * qJD(2);
t54 = (-t120 * t210 + t207) * t126 - t115 * t212;
t199 = t54 * qJD(2);
t55 = (t120 * t205 + t213) * t126 + t115 * t206;
t198 = t55 * qJD(2);
t117 = t126 ^ 2;
t105 = t117 - t115;
t86 = t105 * t122;
t197 = t86 * qJD(2);
t87 = t125 * t117 - t208;
t196 = t87 * qJD(2);
t195 = qJD(2) * qJ(3);
t194 = qJD(5) * t122;
t193 = qJD(5) * t123;
t192 = qJD(5) * t125;
t190 = qJD(6) * t122;
t189 = qJD(6) * t125;
t188 = qJD(6) * t126;
t187 = t105 * qJD(2);
t186 = t118 * qJD(2);
t185 = t118 * qJD(3);
t184 = t120 * qJD(2);
t183 = t120 * qJD(3);
t180 = t126 * qJD(2);
t173 = t122 * t188;
t172 = t125 * t188;
t171 = qJD(2) * t215;
t170 = t120 * t180;
t169 = t122 * t193;
t168 = t122 * t189;
t167 = t122 * t192;
t166 = t123 * t191;
t165 = t118 * t182;
t164 = t118 * t193;
t163 = t120 * t182;
t162 = t123 * t180;
t161 = t123 * t192;
t159 = t118 * t180;
t157 = t211 / 0.2e1;
t155 = -t209 / 0.2e1;
t152 = qJD(6) + t180;
t150 = t122 * t161;
t149 = qJD(2) * t175;
t121 = cos(pkin(6));
t51 = -t121 * t123 + t71 * t126;
t70 = (t118 * t124 + t224 * t120) * t119;
t147 = t70 * t122 + t51 * t125;
t146 = t51 * t122 - t70 * t125;
t17 = -t31 * t126 - t84 * t214;
t50 = t121 * t126 + t71 * t123;
t131 = t71 / 0.2e1 + t51 * t226 - t50 * t123 / 0.2e1;
t6 = t131 * t122;
t145 = t6 * qJD(1) + t17 * qJD(2);
t18 = -t32 * t126 - t84 * t208;
t5 = t131 * t125;
t144 = -t5 * qJD(1) - t18 * qJD(2);
t143 = qJD(2) * t83 - t183;
t142 = t152 * t125;
t139 = t222 / 0.2e1 - t223 / 0.2e1;
t134 = t97 / 0.2e1 + t139;
t53 = t134 * t125;
t138 = pkin(5) * t194 + t53 * qJD(2);
t52 = t134 * t122;
t137 = pkin(5) * t192 - t52 * qJD(2);
t77 = (t114 / 0.2e1 - t116 / 0.2e1) * t123;
t136 = t77 * qJD(2) + t167;
t135 = t123 * t142;
t133 = t122 * qJD(2) * t208 - t77 * qJD(5);
t85 = t104 * t115;
t132 = -t85 * qJD(2) + 0.2e1 * t150;
t129 = t122 * t191 + t125 * t181;
t109 = -t193 / 0.2e1;
t80 = (t180 + qJD(6) / 0.2e1) * t123;
t74 = t77 * qJD(6);
t35 = t120 * t157 + t140 * t123;
t34 = (t141 + t154) * t123;
t29 = t120 * t156 + t76 * t226 + (-t115 / 0.2e1 + 0.1e1 / 0.2e1) * t207;
t28 = t120 * t153 + t75 * t225 + (t228 - 0.1e1 / 0.2e1) * t213;
t25 = t73 + t220 / 0.2e1 - t139 * t125;
t24 = t177 - t221 / 0.2e1 + t139 * t122;
t16 = t50 * t125;
t14 = t50 * t122;
t12 = t70 * t118 + t71 * t120;
t8 = t147 * t226 + t50 * t155 + t70 * t156 - t218 / 0.2e1;
t7 = t146 * t225 + t50 * t157 + t70 * t153 + t219 / 0.2e1;
t4 = t147 * t227 + t51 * t155 + t70 * t157;
t3 = t146 * t227 - t51 * t211 / 0.2e1 + t70 * t155;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t171, -t149, -t171, t149 ((-pkin(2) * t124 + t224 * qJ(3)) * qJD(2) + t124 * qJD(3)) * t119, -t71 * qJD(2), t70 * qJD(2) (t70 * t89 + t71 * t88) * qJD(2) + t12 * qJD(3), 0, 0, 0, 0, 0, -t71 * t180 - t70 * t193, t71 * t182 - t70 * t191, 0, 0, 0, 0, 0 ((-t70 * t210 - t218) * t126 - t70 * t214) * qJD(2) + t3 * qJD(5) + t8 * qJD(6) (-(t205 * t70 - t219) * t126 - t70 * t208) * qJD(2) + t4 * qJD(5) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, t171, 0, 0, t12 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51 * qJD(5) - t70 * t182, t50 * qJD(5) - t70 * t180, 0, 0, 0, 0, 0, t3 * qJD(2) + t14 * qJD(6) - t192 * t51, t4 * qJD(2) + t16 * qJD(6) + t194 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8 * qJD(2) + t14 * qJD(5) - qJD(6) * t147, t7 * qJD(2) + t16 * qJD(5) + qJD(6) * t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6) * t5, -t6 * qJD(6); 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), t185, t183, t49 * qJD(3), t166, t105 * qJD(5), 0, 0, 0, t126 * t185 - t83 * t193, -t123 * t185 - t83 * t191, -t115 * t168 + t116 * t166, -t85 * qJD(6) - 0.2e1 * t126 * t150, -t87 * qJD(5) + t123 * t173, t86 * qJD(5) + t123 * t172, -t166, t54 * qJD(3) + t9 * qJD(5) + t18 * qJD(6), -t55 * qJD(3) - t10 * qJD(5) - t17 * qJD(6); 0, 0, 0, 0, 0, qJD(2), t195, t186, t184, t200, 0, 0, 0, 0, 0, t159, -t165, 0, 0, 0, 0, 0, t34 * qJD(5) + t29 * qJD(6) + t199, t35 * qJD(5) + t28 * qJD(6) - t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, t187, -t191, t193, 0, -t83 * t182 - t84 * t191, -t83 * t180 + t84 * t193, t74 + (t116 * t182 - t167) * t126, 0.2e1 * t123 * t168 - t130 * t126, -t169 - t196, -t161 + t197, -t80, t217 + t34 * qJD(3) + (t122 * t148 - t176) * qJD(5) + t25 * qJD(6), -t216 + t35 * qJD(3) + (t125 * t148 + t178) * qJD(5) + t24 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, t132, t122 * t162 + t108, t135, t109, t29 * qJD(3) + t25 * qJD(5) - t32 * qJD(6) - t144, t28 * qJD(3) + t24 * qJD(5) + t31 * qJD(6) - t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, -qJD(2), -t195, -t186, -t184, -t200, 0, 0, 0, 0, 0, t120 * t193 - t159, t120 * t191 + t165, 0, 0, 0, 0, 0, t33 * qJD(5) - t26 * qJD(6) - t199, t36 * qJD(5) - t27 * qJD(6) + t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118 * t191 + t163, t164 + t170, 0, 0, 0, 0, 0, t230 * t118 + t202, t118 * t129 + t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76 * qJD(6) + t122 * t164 - t204, t75 * qJD(6) + t118 * t161 - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, -t191, 0, 0, 0, 0, 0, -t161 - t173, t169 - t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, -t187, 0, 0, 0, t143 * t123, t143 * t126, -t116 * t162 + t74, t135 * t231, t172 + t196, -t173 - t197, t80, -t33 * qJD(3) - t53 * qJD(6) - t217, -t36 * qJD(3) + t52 * qJD(6) + t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t170, 0, 0, 0, 0, 0, -t202, -t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168, t104 * qJD(6), 0, 0, 0, -pkin(5) * t190, -pkin(5) * t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t130, t142, -t152 * t122, t182 / 0.2e1, -pkin(9) * t189 - t138, pkin(9) * t190 - t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5 * qJD(2), t6 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, -t132 (-t122 * t182 - t192) * t126 (-t174 + t194) * t126, t109, t26 * qJD(3) + t53 * qJD(5) + t144, t27 * qJD(3) - t52 * qJD(5) + t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, -t130, -t125 * t180, t122 * t180, -t182 / 0.2e1, t138, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
