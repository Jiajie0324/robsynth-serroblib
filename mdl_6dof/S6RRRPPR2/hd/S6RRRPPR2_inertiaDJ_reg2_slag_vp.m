% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:26:43
% EndTime: 2019-03-09 15:26:51
% DurationCPUTime: 2.76s
% Computational Cost: add. (5487->217), mult. (12023->370), div. (0->0), fcn. (11760->8), ass. (0->138)
t166 = qJD(2) + qJD(3);
t164 = -pkin(8) - pkin(7);
t82 = sin(qJ(2));
t129 = t164 * t82;
t84 = cos(qJ(3));
t123 = t84 * t129;
t85 = cos(qJ(2));
t169 = t164 * t85;
t81 = sin(qJ(3));
t124 = t81 * t169;
t42 = t124 + t123;
t80 = sin(qJ(6));
t77 = t80 ^ 2;
t83 = cos(qJ(6));
t78 = t83 ^ 2;
t167 = (t77 - t78) * qJD(6);
t171 = -t81 * t129 + t169 * t84;
t165 = pkin(4) + pkin(9);
t147 = cos(pkin(10));
t61 = t81 * t82 - t84 * t85;
t41 = t166 * t61;
t79 = sin(pkin(10));
t152 = t82 * t84;
t153 = t81 * t85;
t116 = t152 + t153;
t104 = t116 * qJD(3);
t105 = t116 * qJD(2);
t91 = -t104 - t105;
t29 = -t147 * t91 - t79 * t41;
t30 = -t147 * t41 + t79 * t91;
t162 = t82 * pkin(2);
t35 = pkin(3) * t104 + (t116 * pkin(3) + t162) * qJD(2);
t40 = t147 * t116 - t79 * t61;
t90 = -t30 * qJ(5) - t40 * qJD(5) + t35;
t120 = -qJ(4) * t61 - t171;
t96 = t116 * (-qJ(4) + t164);
t26 = t79 * t120 - t147 * t96;
t99 = t40 * pkin(5) + t26;
t170 = -qJD(6) * t99 - t165 * t29 - t90;
t121 = t166 * qJ(4);
t134 = -t42 * qJD(2) - qJD(3) * t123;
t168 = -t61 * qJD(4) - t134 + (qJD(3) * t164 - t121) * t153;
t86 = 0.2e1 * qJD(5);
t143 = qJD(6) * t80;
t74 = -pkin(2) * t85 - pkin(1);
t47 = pkin(3) * t61 + t74;
t100 = -qJ(5) * t40 + t47;
t39 = t79 * t116 + t147 * t61;
t19 = t165 * t39 + t100;
t141 = t82 * qJD(2);
t146 = qJD(3) * t84;
t32 = t166 * t171;
t88 = t41 * qJ(4) - t116 * qJD(4) + t32;
t12 = -t147 * t88 + ((-t84 * t141 - t82 * t146) * qJ(4) + t168) * t79;
t87 = t30 * pkin(5) + t12;
t2 = t19 * t143 + t170 * t83 - t80 * t87;
t163 = t2 * t80;
t13 = t147 * (-t121 * t152 + t168) + t79 * t88;
t7 = -t29 * pkin(5) + t13;
t5 = t7 * t80;
t6 = t7 * t83;
t142 = qJD(6) * t83;
t27 = t147 * t120 + t79 * t96;
t20 = -t39 * pkin(5) + t27;
t161 = t20 * t142 + t5;
t125 = t147 * t81;
t148 = qJD(3) * pkin(2);
t52 = (t79 * t84 + t125) * t148;
t160 = t26 * t52;
t159 = t29 * t77;
t158 = t29 * t80;
t157 = t29 * t83;
t156 = t39 * t29;
t155 = t40 * t52;
t131 = pkin(2) * t146;
t132 = t81 * t148;
t53 = t147 * t131 - t79 * t132;
t48 = qJD(5) + t53;
t73 = pkin(2) * t84 + pkin(3);
t55 = pkin(2) * t125 + t79 * t73;
t50 = qJ(5) + t55;
t154 = t48 * t50;
t28 = t78 * t29;
t151 = t50 * t142 + t48 * t80;
t70 = pkin(3) * t79 + qJ(5);
t150 = qJD(5) * t80 + t70 * t142;
t145 = qJD(6) * t20;
t140 = t85 * qJD(2);
t139 = 0.2e1 * t156;
t24 = 0.2e1 * t40 * t30;
t138 = -0.2e1 * pkin(1) * qJD(2);
t136 = t80 * t157;
t135 = t70 * t86;
t133 = pkin(2) * t141;
t127 = t82 * t140;
t126 = t80 * t142;
t34 = (t77 + t78) * t52;
t37 = t39 ^ 2;
t122 = t37 * t126;
t71 = -t147 * pkin(3) - pkin(4);
t10 = -t80 * t19 + t83 * t99;
t11 = t83 * t19 + t80 * t99;
t119 = t10 * t83 + t11 * t80;
t118 = -t10 * t80 + t11 * t83;
t117 = t12 * t26 + t13 * t27;
t54 = -t79 * t81 * pkin(2) + t147 * t73;
t115 = -qJD(5) * t39 - t29 * t70;
t114 = qJD(5) * t50 + t48 * t70;
t51 = -pkin(4) - t54;
t112 = t39 * t142 + t158;
t111 = t39 * t143 - t157;
t110 = t40 * t142 + t30 * t80;
t109 = t40 * t143 - t83 * t30;
t108 = t74 * t116;
t49 = -pkin(9) + t51;
t107 = qJD(6) * (t39 * t50 - t40 * t49);
t69 = -pkin(9) + t71;
t106 = qJD(6) * (t39 * t70 - t40 * t69);
t103 = -0.2e1 * t29 * t40 - 0.2e1 * t30 * t39;
t102 = -t29 * t50 - t39 * t48 + t155;
t101 = t30 * t69 + t115;
t98 = t30 * t49 + t102;
t3 = -t19 * t142 + t170 * t80 + t83 * t87;
t94 = t118 * qJD(6) + t3 * t83 - t163;
t93 = -t119 * qJD(6) - t2 * t83 - t3 * t80;
t92 = 0.2e1 * t12 * t40 - 0.2e1 * t13 * t39 + 0.2e1 * t26 * t30 - 0.2e1 * t27 * t29;
t76 = qJD(5) * t83;
t67 = -0.2e1 * t126;
t66 = 0.2e1 * t126;
t60 = 0.2e1 * t167;
t46 = t48 * t83;
t31 = -qJD(3) * t124 + t134;
t25 = pkin(4) * t39 + t100;
t16 = -t39 * t167 + t136;
t15 = -0.4e1 * t39 * t126 - t159 + t28;
t14 = t29 * pkin(4) + t90;
t1 = -t10 * t143 - t163 + (qJD(6) * t11 + t3) * t83;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t127, 0.2e1 * (-t82 ^ 2 + t85 ^ 2) * qJD(2), 0, -0.2e1 * t127, 0, 0, t82 * t138, t85 * t138, 0, 0, -0.2e1 * t116 * t41, 0.2e1 * t116 * t91 + 0.2e1 * t41 * t61, 0, -0.2e1 * t61 * t91, 0, 0, 0.2e1 * qJD(3) * t108 + 0.2e1 * (t61 * t162 + t108) * qJD(2), 0.2e1 * t116 * t133 - 0.2e1 * t74 * t41, -0.2e1 * t32 * t116 - 0.2e1 * t171 * t91 + 0.2e1 * t31 * t61 + 0.2e1 * t42 * t41, 0.2e1 * t133 * t74 + 0.2e1 * t171 * t31 + 0.2e1 * t32 * t42, t24, t103, 0, t139, 0, 0, 0.2e1 * t29 * t47 + 0.2e1 * t35 * t39, 0.2e1 * t30 * t47 + 0.2e1 * t35 * t40, t92, 0.2e1 * t35 * t47 + 0.2e1 * t117, 0, 0, 0, t24, t103, t139, t92, -0.2e1 * t14 * t39 - 0.2e1 * t25 * t29, -0.2e1 * t14 * t40 - 0.2e1 * t25 * t30, 0.2e1 * t14 * t25 + 0.2e1 * t117, 0.2e1 * t156 * t77 + 0.2e1 * t122, 0.4e1 * t136 * t39 - 0.2e1 * t37 * t167, 0.2e1 * t110 * t39 + 0.2e1 * t158 * t40, 0.2e1 * t28 * t39 - 0.2e1 * t122, -0.2e1 * t109 * t39 + 0.2e1 * t157 * t40, t24, 0.2e1 * t10 * t30 + 0.2e1 * t111 * t20 + 0.2e1 * t3 * t40 - 0.2e1 * t39 * t6, -0.2e1 * t11 * t30 + 0.2e1 * t112 * t20 + 0.2e1 * t2 * t40 + 0.2e1 * t39 * t5, 0.2e1 * t118 * t29 + 0.2e1 * t39 * t93, 0.2e1 * t10 * t3 - 0.2e1 * t11 * t2 + 0.2e1 * t20 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t141, 0, -pkin(7) * t140, pkin(7) * t141, 0, 0, 0, 0, -t41, 0, t91, 0, t32, t31 (-t105 * t81 + t84 * t41) * pkin(2) - t61 * t131 (-t31 * t81 + t32 * t84 + (-t171 * t84 - t42 * t81) * qJD(3)) * pkin(2), 0, 0, t30, 0, -t29, 0, -t12, -t13, -t29 * t55 - t30 * t54 - t39 * t53 + t155, -t12 * t54 + t13 * t55 + t27 * t53 + t160, 0, -t30, t29, 0, 0, 0, t30 * t51 + t102, t12, t13, t12 * t51 + t13 * t50 + t27 * t48 + t160, t16, t15, -t109, -t16, -t110, 0, t107 * t80 + t83 * t98 + t161, t6 + t83 * t107 + (-t98 - t145) * t80, -t1, t119 * t52 + t20 * t48 + t49 * t94 + t50 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t132, -0.2e1 * t131, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t52, -0.2e1 * t53, 0, -0.2e1 * t52 * t54 + 0.2e1 * t53 * t55, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t52, 0.2e1 * t48, 0.2e1 * t51 * t52 + 0.2e1 * t154, t67, t60, 0, t66, 0, 0, 0.2e1 * t151, -0.2e1 * t143 * t50 + 0.2e1 * t46, -0.2e1 * t34, 0.2e1 * t34 * t49 + 0.2e1 * t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, t91, 0, t32, t31, 0, 0, 0, 0, t30, 0, -t29, 0, -t12, -t13 (-t147 * t30 - t29 * t79) * pkin(3) (-t12 * t147 + t13 * t79) * pkin(3), 0, -t30, t29, 0, 0, 0, t30 * t71 + t115, t12, t13, qJD(5) * t27 + t12 * t71 + t13 * t70, t16, t15, -t109, -t16, -t110, 0, t101 * t83 + t106 * t80 + t161, t6 + t83 * t106 + (-t101 - t145) * t80, -t1, qJD(5) * t20 + t69 * t94 + t7 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, -t131, 0, 0, 0, 0, 0, 0, 0, 0, -t52, -t53, 0 (-t147 * t52 + t53 * t79) * pkin(3), 0, 0, 0, 0, 0, 0, 0, t52, t86 + t53, t52 * t71 + t114, t67, t60, 0, t66, 0, 0, t150 + t151, t46 + t76 + (-t50 - t70) * t143, -t34, t34 * t69 + t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t135, t67, t60, 0, t66, 0, 0, 0.2e1 * t150, -0.2e1 * t143 * t70 + 0.2e1 * t76, 0, t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t30, 0, t35, 0, 0, 0, 0, 0, 0, 0, -t29, -t30, t14, 0, 0, 0, 0, 0, 0, -t110, t109, t28 + t159, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, 0, 0, t12, 0, 0, 0, 0, 0, 0, -t109, -t110, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, -t111, t30, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, 0, -t142, 0, -t143 * t49 + t52 * t83, -t142 * t49 - t52 * t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, 0, -t142, 0, -t69 * t143, -t69 * t142, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, t143, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t142, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
