% Calculate vector of inverse dynamics joint torques for
% S6RRRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPPR2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPPR2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:24:58
% EndTime: 2019-03-09 15:26:41
% DurationCPUTime: 92.57s
% Computational Cost: add. (49215->1543), mult. (50534->1876), div. (0->0), fcn. (43621->10), ass. (0->766)
t1391 = Icges(6,4) - Icges(5,5);
t1390 = Icges(6,5) - Icges(5,6);
t734 = qJ(2) + qJ(3);
t701 = pkin(10) + t734;
t682 = cos(t701);
t666 = Icges(5,4) * t682;
t681 = sin(t701);
t540 = Icges(5,1) * t681 + t666;
t1170 = Icges(6,6) * t682;
t876 = Icges(6,2) * t681 + t1170;
t1385 = t540 + t876;
t1389 = Icges(6,1) + Icges(4,3) + Icges(5,3);
t737 = sin(qJ(1));
t1131 = t682 * t737;
t1134 = t681 * t737;
t740 = cos(qJ(1));
t1172 = Icges(5,6) * t740;
t404 = Icges(5,4) * t1131 - Icges(5,2) * t1134 - t1172;
t1179 = Icges(6,5) * t740;
t409 = Icges(6,6) * t1131 - Icges(6,3) * t1134 + t1179;
t1388 = t404 + t409;
t884 = -Icges(5,2) * t681 + t666;
t405 = Icges(5,6) * t737 + t740 * t884;
t875 = -Icges(6,3) * t681 + t1170;
t408 = Icges(6,5) * t737 - t740 * t875;
t1382 = t405 - t408;
t1180 = Icges(5,5) * t740;
t620 = Icges(5,4) * t1134;
t406 = Icges(5,1) * t1131 - t1180 - t620;
t1186 = Icges(6,4) * t740;
t615 = Icges(6,6) * t1134;
t411 = Icges(6,2) * t1131 + t1186 - t615;
t1369 = t406 + t411;
t1188 = Icges(5,4) * t681;
t541 = Icges(5,1) * t682 - t1188;
t407 = Icges(5,5) * t737 + t541 * t740;
t1129 = t682 * t740;
t1187 = Icges(6,4) * t737;
t1133 = t681 * t740;
t616 = Icges(6,6) * t1133;
t410 = -Icges(6,2) * t1129 + t1187 + t616;
t1387 = t407 - t410;
t538 = Icges(5,2) * t682 + t1188;
t1171 = Icges(6,6) * t681;
t874 = Icges(6,3) * t682 + t1171;
t1386 = t538 + t874;
t877 = Icges(6,2) * t682 - t1171;
t1384 = -t541 - t877;
t1383 = t875 + t884;
t706 = sin(t734);
t707 = cos(t734);
t1358 = Icges(4,5) * t707 - Icges(4,6) * t706 + t1390 * t681 - t1391 * t682;
t1381 = -Icges(4,5) * t706 - Icges(5,5) * t681 - Icges(4,6) * t707 - Icges(5,6) * t682;
t1380 = t538 * t740 - t1387;
t1379 = -t1383 - t1385;
t1378 = -t1384 - t1386;
t1377 = t1385 * t737 + t1388;
t1376 = -t1385 * t740 - t1382;
t882 = Icges(6,4) * t681 + Icges(6,5) * t682;
t1375 = -t882 - t1381;
t1374 = t1389 * t740;
t1189 = Icges(4,4) * t706;
t576 = Icges(4,2) * t707 + t1189;
t679 = Icges(4,4) * t707;
t578 = Icges(4,1) * t706 + t679;
t1373 = -t538 * t681 + t540 * t682 - t576 * t706 + t578 * t707;
t1125 = t707 * t737;
t1128 = t706 * t737;
t1359 = -Icges(4,5) * t1125 + Icges(4,6) * t1128 + t1131 * t1391 - t1390 * t1134 + t1374;
t1372 = t1358 * t740 + t1389 * t737;
t1371 = t681 * t874 - t682 * t876 - t1373;
t1173 = Icges(4,6) * t740;
t446 = Icges(4,4) * t1125 - Icges(4,2) * t1128 - t1173;
t1181 = Icges(4,5) * t740;
t655 = Icges(4,4) * t1128;
t448 = Icges(4,1) * t1125 - t1181 - t655;
t1357 = -t1369 * t682 + t1388 * t681 + t446 * t706 - t448 * t707;
t731 = qJD(2) + qJD(3);
t1368 = t1378 * t731;
t1367 = t1379 * t731;
t1366 = t1376 * t731 + (t1384 * t737 + t1180 - t1186) * qJD(1);
t1365 = t1377 * t731 + (-t740 * t877 + t1187 - t407) * qJD(1);
t823 = t731 * t874;
t1364 = t740 * t823 + t1380 * t731 + (t1383 * t737 - t1172 + t1179) * qJD(1);
t1123 = t731 * t737;
t1363 = qJD(1) * t1382 - t1123 * t538 + t1369 * t731 - t737 * t823;
t1361 = t1381 * t740;
t1333 = t1373 * t737 + t1361;
t468 = t882 * t740;
t193 = -t1131 * t876 + t1134 * t874 - t468;
t1362 = t193 - t1333;
t579 = Icges(4,1) * t707 - t1189;
t449 = Icges(4,5) * t737 + t579 * t740;
t1360 = -t449 * t1125 - t407 * t1131 - t408 * t1134;
t1356 = t468 + t1361;
t1355 = t1375 * t737;
t885 = -Icges(4,2) * t706 + t679;
t447 = Icges(4,6) * t737 + t740 * t885;
t1354 = t405 * t681 + t410 * t682 + t447 * t706;
t1291 = -t1371 * t740 + t1355;
t1353 = t1357 * t737;
t1352 = t1372 * t740 + t1360;
t1351 = t1372 * qJD(1);
t1124 = t707 * t740;
t1265 = -t449 * t1124 - t407 * t1129 - t408 * t1133 - t1372 * t737;
t1350 = -t448 * t1124 - t406 * t1129 + t409 * t1133 + t1359 * t737;
t1349 = t1359 * t740;
t738 = cos(qJ(6));
t1118 = t737 * t738;
t735 = sin(qJ(6));
t1121 = t735 * t740;
t523 = t1118 * t681 + t1121;
t1116 = t738 * t740;
t1122 = t735 * t737;
t524 = -t1122 * t681 + t1116;
t1075 = t524 * rSges(7,1) - t523 * rSges(7,2);
t277 = rSges(7,3) * t1131 - t1075;
t1212 = rSges(7,1) * t735;
t900 = rSges(7,2) * t738 + t1212;
t374 = rSges(7,3) * t681 - t682 * t900;
t1034 = qJD(6) * t737;
t638 = t731 * t740;
t489 = -t1034 * t682 + t638;
t1037 = qJD(6) * t681;
t632 = qJD(1) + t1037;
t1348 = t277 * t632 + t374 * t489;
t705 = qJD(2) * t737;
t637 = qJD(3) * t737 + t705;
t1347 = qJD(1) * t1378 + t1376 * t637 + t1377 * t638;
t1346 = (-t615 - t620 + (-Icges(5,2) - Icges(6,3)) * t1131 + t1369) * t638 + (Icges(6,3) * t1129 + t1380 + t616) * t637 + t1379 * qJD(1);
t1295 = t1349 - t1353;
t1294 = -t1128 * t447 - t1131 * t410 - t1134 * t405 - t1352;
t1127 = t706 * t740;
t1293 = -t1127 * t446 + t1129 * t411 - t1133 * t404 - t1350;
t1292 = -t1127 * t447 - t1129 * t410 - t1133 * t405 - t1265;
t1320 = -t576 + t579;
t937 = t1320 * t731;
t1319 = t578 + t885;
t938 = t1319 * t731;
t1345 = qJD(1) * t1375 + t1367 * t681 + t1368 * t682 - t706 * t938 + t707 * t937;
t1324 = -t578 * t740 - t447;
t954 = (-t579 * t737 + t1181) * qJD(1) + t1324 * t731;
t1323 = -t576 * t740 + t449;
t956 = (-t737 * t885 + t1173) * qJD(1) + t1323 * t731;
t1344 = t1364 * t681 + t1366 * t682 - t706 * t956 + t707 * t954 + t1351;
t1325 = -t578 * t737 - t446;
t953 = qJD(1) * t449 + t1325 * t731;
t955 = qJD(1) * t447 - t1123 * t576 + t448 * t731;
t1343 = qJD(1) * t1359 + t1363 * t681 + t1365 * t682 + t706 * t955 - t707 * t953;
t1342 = qJD(1) * t1371 + t1358 * t731;
t1341 = qJD(1) * t1357 - t1355 * t731 + t1351;
t1340 = t1356 * t731 + (-t1358 * t737 - t407 * t682 - t408 * t681 - t449 * t707 + t1354 + t1374) * qJD(1);
t1042 = qJD(1) * t737;
t665 = t681 * qJ(5);
t1276 = t682 * pkin(4) + t665;
t1221 = pkin(4) * t681;
t542 = -qJ(5) * t682 + t1221;
t689 = pkin(3) * t707;
t550 = t638 * t689;
t1038 = qJD(5) * t740;
t610 = t682 * t1038;
t986 = t706 * t1042;
t639 = pkin(3) * t986;
t1339 = t542 * t1042 + t1276 * t638 + t550 - t610 + t639;
t741 = -pkin(8) - pkin(7);
t730 = -qJ(4) + t741;
t1282 = t740 * t730;
t739 = cos(qJ(2));
t727 = t739 * pkin(2);
t690 = t727 + pkin(1);
t594 = t689 + t690;
t1068 = -t737 * t594 - t1282;
t554 = t740 * pkin(5) - pkin(9) * t1131;
t1338 = t554 + t1068 + t1075;
t1337 = t1291 * qJD(1);
t1336 = t1362 * qJD(1);
t521 = t1116 * t681 - t1122;
t522 = t1121 * t681 + t1118;
t266 = Icges(7,5) * t522 + Icges(7,6) * t521 + Icges(7,3) * t1129;
t1185 = Icges(7,4) * t522;
t269 = Icges(7,2) * t521 + Icges(7,6) * t1129 + t1185;
t494 = Icges(7,4) * t521;
t272 = Icges(7,1) * t522 + Icges(7,5) * t1129 + t494;
t119 = t266 * t1129 + t521 * t269 + t522 * t272;
t268 = -Icges(7,5) * t524 + Icges(7,6) * t523 + Icges(7,3) * t1131;
t496 = Icges(7,4) * t524;
t271 = Icges(7,2) * t523 + Icges(7,6) * t1131 - t496;
t495 = Icges(7,4) * t523;
t273 = Icges(7,1) * t524 - Icges(7,5) * t1131 - t495;
t120 = t268 * t1129 + t521 * t271 - t273 * t522;
t878 = Icges(7,5) * t735 + Icges(7,6) * t738;
t782 = -Icges(7,3) * t681 + t682 * t878;
t1184 = Icges(7,4) * t735;
t880 = Icges(7,2) * t738 + t1184;
t783 = -Icges(7,6) * t681 + t682 * t880;
t1183 = Icges(7,4) * t738;
t887 = Icges(7,1) * t735 + t1183;
t784 = -Icges(7,5) * t681 + t682 * t887;
t151 = -t1129 * t782 - t521 * t783 - t522 * t784;
t1033 = qJD(6) * t740;
t488 = t1033 * t682 + t637;
t40 = t119 * t488 - t120 * t489 + t151 * t632;
t121 = t266 * t1131 + t523 * t269 - t524 * t272;
t122 = t1131 * t268 + t271 * t523 + t273 * t524;
t152 = -t1131 * t782 - t523 * t783 + t524 * t784;
t41 = t121 * t488 - t122 * t489 + t152 * t632;
t863 = t271 * t738 - t273 * t735;
t130 = t268 * t681 - t682 * t863;
t1203 = pkin(2) * qJD(2);
t1206 = rSges(6,2) * t682;
t667 = t681 * rSges(6,3);
t1271 = t667 - t1206;
t721 = t737 * rSges(6,1);
t1207 = rSges(6,2) * t681;
t898 = rSges(6,3) * t682 + t1207;
t247 = t898 * t1123 + (t1271 * t740 + t721) * qJD(1);
t450 = t1271 * t731;
t1022 = -qJDD(2) - qJDD(3);
t1027 = qJD(1) * qJD(3);
t1028 = qJD(1) * qJD(2);
t687 = t737 * t1028;
t1052 = t737 * t1027 + t687;
t457 = t1022 * t740 + t1052;
t1025 = qJDD(5) * t681;
t1135 = t681 * t731;
t357 = qJ(5) * t1135 + (pkin(4) * t731 - qJD(5)) * t682;
t1026 = qJD(1) * qJD(4);
t1222 = pkin(3) * t706;
t1114 = t739 * qJD(2) ^ 2;
t736 = sin(qJ(2));
t1223 = pkin(2) * t736;
t599 = -qJDD(2) * t740 + t687;
t844 = -pkin(2) * t1114 * t740 + t599 * t1223;
t786 = qJDD(4) * t737 + t740 * t1026 + t457 * t1222 - t731 * t550 + t844;
t767 = t740 * t1025 - t638 * t357 + t457 * t542 + t731 * t610 + t786;
t1015 = t736 * t1203;
t662 = t737 * t1015;
t1054 = t741 * t1042 + t662;
t1214 = pkin(1) - t690;
t725 = t737 * pkin(7);
t332 = (-t1214 * t740 - t725) * qJD(1) - t1054;
t651 = t740 * pkin(1) + t725;
t595 = t651 * qJD(1);
t1106 = -t332 - t595;
t1041 = qJD(1) * t740;
t1062 = t594 - t690;
t703 = qJD(4) * t740;
t1055 = t730 * t1042 + t703;
t551 = -t1222 * t731 - t1015;
t907 = t551 * t737 - t1055;
t182 = t1041 * t1062 + t1054 + t907;
t1008 = -t182 + t1106;
t1011 = t682 * t1123;
t1013 = t681 * t1123;
t573 = pkin(4) * t1013;
t1039 = qJD(5) * t737;
t979 = t681 * t1039;
t987 = t682 * t1041;
t989 = t681 * t1041;
t214 = pkin(4) * t987 + t979 - t573 + (t989 + t1011) * qJ(5);
t800 = -t214 - t979 + t1008;
t967 = rSges(6,1) * t740 - rSges(6,3) * t1134;
t422 = rSges(6,2) * t1131 + t967;
t695 = t740 * t741;
t1057 = t737 * t690 + t695;
t728 = t740 * pkin(7);
t650 = pkin(1) * t737 - t728;
t430 = t650 - t1057;
t1083 = t430 - t650;
t335 = t1057 + t1068;
t1005 = t335 + t1083;
t479 = t1276 * t737;
t923 = -t479 + t1005;
t892 = t422 + t923;
t35 = t892 * qJDD(1) + (-t247 + t800) * qJD(1) - t457 * t898 + t767 - t638 * t450;
t1335 = t35 * t740;
t275 = t522 * rSges(7,1) + t521 * rSges(7,2) + rSges(7,3) * t1129;
t553 = t737 * pkin(5) + pkin(9) * t1129;
t1332 = t275 + t553;
t1331 = t277 - t554;
t1010 = t638 * t682;
t1012 = t681 * t638;
t988 = t682 * t1042;
t805 = -t988 - t1012;
t918 = rSges(6,1) * t1041 - rSges(6,2) * t805 + rSges(6,3) * t1010;
t990 = t681 * t1042;
t248 = -rSges(6,3) * t990 + t918;
t477 = rSges(6,2) * t1134 + rSges(6,3) * t1131;
t1051 = -t730 + t741;
t702 = qJD(4) * t737;
t1072 = t740 * t551 + t702;
t1040 = qJD(2) * t740;
t981 = t736 * t1040;
t930 = pkin(2) * t981;
t181 = t930 + (t1051 * t740 - t1062 * t737) * qJD(1) + t1072;
t1009 = -t335 * t1041 + t740 * t181 + t737 * t182;
t609 = t681 * t1038;
t613 = qJ(5) * t1129;
t1067 = t731 * t613 + t609;
t213 = pkin(4) * t805 - qJ(5) * t990 + t1067;
t832 = t479 * t1041 + t740 * t213 + t737 * t214 + t1009;
t1318 = -t422 * t1041 + t737 * t247 + t740 * t248 - t637 * t477 + t832;
t1130 = t682 * t738;
t1307 = rSges(7,2) * t1130 + t682 * t1212;
t1064 = t1307 * t737;
t337 = -rSges(7,3) * t1134 + t1064;
t373 = t682 * rSges(7,3) + t681 * t900;
t611 = qJ(5) * t1131;
t476 = -pkin(4) * t1134 + t611;
t1315 = pkin(9) * t1010 + qJD(1) * t476 + t374 * t1042 + t337 * t632 + t489 * t373 + t1339;
t1314 = -t1042 * t898 + t1271 * t638 + t1339;
t1313 = qJD(2) * t739;
t1132 = t682 * t731;
t806 = t987 - t1013;
t929 = qJD(1) * t681 + qJD(6);
t840 = t929 * t740;
t841 = t632 * t735;
t251 = t738 * t840 + (t1130 * t731 - t841) * t737;
t842 = t738 * t632;
t252 = t737 * t842 + (t840 + t1011) * t735;
t903 = rSges(7,1) * t252 + rSges(7,2) * t251;
t148 = rSges(7,3) * t806 + t903;
t1204 = rSges(7,3) * t731;
t901 = -rSges(7,1) * t738 + rSges(7,2) * t735;
t212 = t900 * t1135 + (qJD(6) * t901 + t1204) * t682;
t1024 = qJDD(6) * t682;
t1035 = qJD(6) * t731;
t1036 = qJD(6) * t682;
t228 = (-t1035 * t681 + t1024) * t737 + (qJD(1) * t1036 + t1022) * t740 + t1052;
t355 = pkin(5) * t1042 + pkin(9) * t806;
t458 = qJDD(6) * t681 + t1035 * t682 + qJDD(1);
t893 = t554 + t923;
t19 = (-t355 + t800) * qJD(1) - t489 * t212 - t632 * t148 + t893 * qJDD(1) + t767 + (-t1132 * t638 + t457 * t681) * pkin(9) - t458 * t277 + t228 * t374;
t548 = t637 * t1222;
t996 = -t548 - t662 - t703;
t920 = -t637 * t542 + t996;
t657 = t740 * t690;
t934 = -t737 * t741 + t657;
t431 = t934 - t651;
t1082 = t431 + t651;
t556 = t740 * t594;
t336 = t1051 * t737 + t556 - t657;
t1003 = t336 + t1082;
t484 = pkin(4) * t1129 + qJ(5) * t1133;
t922 = t484 + t1003;
t81 = t275 * t632 - t374 * t488 + (-pkin(9) * t637 + t1039) * t681 + (t553 + t922) * qJD(1) + t920;
t1311 = (qJD(1) * t81 + t19) * t740;
t1224 = -rSges(7,3) - pkin(4);
t1308 = t1224 * t682 - t665;
t1306 = t40 * t740 + t41 * t737;
t1305 = -t1341 * t737 + t1343 * t740;
t1304 = t1340 * t737 + t1344 * t740;
t1303 = t1341 * t740 + t1343 * t737;
t1302 = -t1340 * t740 + t1344 * t737;
t1301 = t1294 * t637 - t1295 * t638 - t1336;
t1300 = t1292 * t637 - t1293 * t638 + t1337;
t1299 = t1342 * t737 + t1345 * t740;
t1298 = -t1342 * t740 + t1345 * t737;
t1297 = -t1363 * t682 + t1365 * t681 - t706 * t953 - t707 * t955;
t1296 = -t1364 * t682 + t1366 * t681 + t706 * t954 + t707 * t956;
t1290 = t1369 * t681 + t1388 * t682 + t446 * t707 + t448 * t706;
t1289 = t1382 * t682 + t1387 * t681 + t447 * t707 + t449 * t706;
t1250 = qJD(1) * t1319 + t1323 * t637 - (-Icges(4,2) * t1125 + t448 - t655) * t638;
t768 = qJD(1) * t1320 + t1324 * t637 - t1325 * t638;
t1288 = -t1250 * t706 + t1346 * t681 + t1347 * t682 + t768 * t707;
t1287 = qJD(1) * t1358 + t1355 * t638 + t1356 * t637;
t680 = t707 * rSges(4,1);
t1269 = -rSges(4,2) * t706 + t680;
t1092 = t431 * t1040 - t430 * t705;
t452 = rSges(4,1) * t1125 - rSges(4,2) * t1128 - t740 * rSges(4,3);
t719 = t737 * rSges(4,3);
t453 = rSges(4,1) * t1124 - rSges(4,2) * t1127 + t719;
t160 = t452 * t637 + t453 * t638 + t1092;
t1209 = rSges(4,2) * t707;
t580 = rSges(4,1) * t706 + t1209;
t809 = -t580 * t638 - t930;
t999 = -t452 + t1083;
t171 = qJD(1) * t999 + t809;
t172 = -t580 * t637 - t662 + (t453 + t1082) * qJD(1);
t525 = t580 * t737;
t526 = t580 * t740;
t1286 = -t171 * (qJD(1) * t525 - t1269 * t638) - t160 * (-t637 * t525 - t526 * t638) - t172 * (-qJD(1) * t526 - t1269 * t637);
t1229 = t637 / 0.2e1;
t1228 = -t638 / 0.2e1;
t785 = -t737 * t929 + t1010;
t253 = t738 * t785 - t740 * t841;
t254 = t735 * t785 + t740 * t842;
t1112 = t254 * rSges(7,1) + t253 * rSges(7,2);
t149 = rSges(7,3) * t805 + t1112;
t598 = qJDD(2) * t737 + t740 * t1028;
t456 = qJDD(3) * t737 + t740 * t1027 + t598;
t227 = qJD(6) * t805 + t1024 * t740 + t456;
t697 = pkin(5) * t1041;
t356 = pkin(9) * t805 + t697;
t608 = t682 * t1039;
t696 = pkin(7) * t1041;
t1066 = qJD(1) * (-pkin(1) * t1042 + t696) + qJDD(1) * t651;
t331 = -t930 - t696 + (t1214 * t737 - t695) * qJD(1);
t776 = qJD(1) * t331 + qJDD(1) * t431 + (-t1114 * t737 - t598 * t736) * pkin(2) + t1066;
t752 = qJD(1) * t181 + qJDD(1) * t336 - qJDD(4) * t740 + t737 * t1026 + t776;
t750 = qJDD(1) * t484 + t737 * t1025 + t731 * t608 + t752 + (t213 + t609) * qJD(1);
t1220 = pkin(9) * t681;
t910 = -t1220 - t1222;
t837 = -t542 + t910;
t670 = t682 * pkin(9);
t909 = -t670 - t689;
t18 = -t488 * t212 + t632 * t149 + (t731 * t909 - t357) * t637 + t837 * t456 + qJDD(1) * t553 + t458 * t275 + t750 + qJD(1) * t356 - t227 * t374;
t1285 = t18 * t737;
t544 = rSges(5,1) * t681 + rSges(5,2) * t682;
t478 = t544 * t737;
t1284 = t637 * t737;
t421 = -rSges(6,2) * t1129 + rSges(6,3) * t1133 + t721;
t114 = t979 + t898 * t637 + (t421 + t922) * qJD(1) + t920;
t991 = t689 + t1276;
t826 = t1271 + t991;
t1283 = t637 * t114 * t826;
t718 = t737 * rSges(5,3);
t420 = rSges(5,1) * t1129 - rSges(5,2) * t1133 + t718;
t136 = -t544 * t637 + (t420 + t1003) * qJD(1) + t996;
t669 = t682 * rSges(5,1);
t1270 = -rSges(5,2) * t681 + t669;
t246 = -t731 * t478 + (t1270 * t740 + t718) * qJD(1);
t451 = t1270 * t731;
t419 = rSges(5,1) * t1131 - rSges(5,2) * t1134 - t740 * rSges(5,3);
t924 = -t419 + t1005;
t55 = -t451 * t638 + t457 * t544 + t924 * qJDD(1) + (-t246 + t1008) * qJD(1) + t786;
t1281 = qJD(1) * t136 + t55;
t603 = qJD(1) * t650;
t1279 = qJD(1) * t430 - t603;
t481 = -pkin(4) * t1133 + t613;
t482 = rSges(6,2) * t1133 + rSges(6,3) * t1129;
t1278 = t481 + t482;
t1277 = t898 - t542;
t1023 = -pkin(9) + t1224;
t1275 = t1023 * t682 - t594 - t665;
t1120 = t736 * t737;
t604 = -t1222 - t1223;
t567 = t737 * t604;
t474 = pkin(2) * t1120 + t567;
t984 = t736 * t1042;
t663 = pkin(2) * t984;
t1272 = -qJD(1) * t474 + t663;
t717 = Icges(3,4) * t739;
t886 = -Icges(3,2) * t736 + t717;
t644 = Icges(3,1) * t736 + t717;
t1267 = g(1) * t740 + g(2) * t737;
t1266 = t1354 + t1359;
t1168 = Icges(3,3) * t740;
t641 = Icges(3,5) * t739 - Icges(3,6) * t736;
t640 = Icges(3,5) * t736 + Icges(3,6) * t739;
t812 = qJD(2) * t640;
t508 = Icges(3,6) * t737 + t740 * t886;
t1143 = t508 * t736;
t1190 = Icges(3,4) * t736;
t645 = Icges(3,1) * t739 - t1190;
t510 = Icges(3,5) * t737 + t645 * t740;
t851 = -t510 * t739 + t1143;
t1258 = -t740 * t812 + (-t641 * t737 + t1168 + t851) * qJD(1);
t506 = Icges(3,3) * t737 + t641 * t740;
t1044 = qJD(1) * t506;
t1117 = t737 * t739;
t1174 = Icges(3,6) * t740;
t507 = Icges(3,4) * t1117 - Icges(3,2) * t1120 - t1174;
t1144 = t507 * t736;
t1182 = Icges(3,5) * t740;
t675 = Icges(3,4) * t1120;
t509 = Icges(3,1) * t1117 - t1182 - t675;
t852 = -t509 * t739 + t1144;
t1257 = qJD(1) * t852 - t737 * t812 + t1044;
t642 = Icges(3,2) * t739 + t1190;
t845 = t642 * t736 - t644 * t739;
t1253 = t845 * qJD(1) + t641 * qJD(2);
t505 = Icges(3,5) * t1117 - Icges(3,6) * t1120 - t1168;
t185 = -t505 * t740 - t737 * t852;
t1252 = t1267 * t681;
t1251 = (-t642 * t740 + t510) * t737 - (-Icges(3,2) * t1117 + t509 - t675) * t740;
t881 = Icges(7,2) * t735 - t1183;
t771 = (t881 * t682 - t784) * t632 - (Icges(7,2) * t524 - t273 + t495) * t489 + (-Icges(7,2) * t522 + t272 + t494) * t488;
t888 = -Icges(7,1) * t738 + t1184;
t772 = (-t888 * t682 - t783) * t632 - (-Icges(7,1) * t523 + t271 - t496) * t489 + (-Icges(7,1) * t521 + t1185 + t269) * t488;
t1247 = m(6) / 0.2e1;
t1246 = m(7) / 0.2e1;
t1245 = -m(6) - m(7);
t1244 = t227 / 0.2e1;
t1243 = t228 / 0.2e1;
t1242 = t737 * t1228 + t1229 * t740;
t1241 = t456 / 0.2e1;
t1240 = t457 / 0.2e1;
t1239 = t458 / 0.2e1;
t1238 = -t488 / 0.2e1;
t1237 = t488 / 0.2e1;
t1236 = -t489 / 0.2e1;
t1235 = t489 / 0.2e1;
t1234 = t598 / 0.2e1;
t1233 = t599 / 0.2e1;
t1232 = -t632 / 0.2e1;
t1231 = t632 / 0.2e1;
t1230 = -t637 / 0.2e1;
t1227 = t638 / 0.2e1;
t1226 = t737 / 0.2e1;
t1225 = -t740 / 0.2e1;
t1219 = g(1) * t737;
t1216 = -qJD(1) / 0.2e1;
t1215 = qJD(1) / 0.2e1;
t1213 = rSges(3,1) * t739;
t1211 = rSges(3,2) * t739;
t1202 = t18 * t740;
t1201 = t19 * t737;
t141 = Icges(7,5) * t254 + Icges(7,6) * t253 + Icges(7,3) * t805;
t143 = Icges(7,4) * t254 + Icges(7,2) * t253 + Icges(7,6) * t805;
t145 = Icges(7,1) * t254 + Icges(7,4) * t253 + Icges(7,5) * t805;
t864 = t269 * t738 + t272 * t735;
t31 = (t731 * t864 + t141) * t681 + (-t143 * t738 - t145 * t735 + t266 * t731 + (t269 * t735 - t272 * t738) * qJD(6)) * t682;
t1200 = t31 * t488;
t140 = Icges(7,5) * t252 + Icges(7,6) * t251 + Icges(7,3) * t806;
t142 = Icges(7,4) * t252 + Icges(7,2) * t251 + Icges(7,6) * t806;
t144 = Icges(7,1) * t252 + Icges(7,4) * t251 + Icges(7,5) * t806;
t32 = (t731 * t863 + t140) * t681 + (-t142 * t738 - t144 * t735 + t268 * t731 + (t271 * t735 + t273 * t738) * qJD(6)) * t682;
t1199 = t32 * t489;
t720 = t737 * rSges(3,3);
t1196 = qJDD(1) / 0.2e1;
t859 = -t735 * t784 - t738 * t783;
t161 = -t681 * t782 - t682 * t859;
t820 = t878 * t681;
t879 = -Icges(7,5) * t738 + Icges(7,6) * t735;
t209 = t731 * t820 + (Icges(7,3) * t731 + qJD(6) * t879) * t682;
t821 = t880 * t681;
t210 = t731 * t821 + (Icges(7,6) * t731 + qJD(6) * t881) * t682;
t822 = t887 * t681;
t211 = t731 * t822 + (Icges(7,5) * t731 + qJD(6) * t888) * t682;
t58 = (t731 * t859 + t209) * t681 + (-t210 * t738 - t211 * t735 - t782 * t731 + (-t735 * t783 + t738 * t784) * qJD(6)) * t682;
t1195 = t161 * t458 + t58 * t632;
t1103 = t336 + t484;
t1002 = t553 + t1103;
t1000 = -t637 * t335 + t1092;
t815 = -qJD(5) * t682 + t637 * t479 + t1000;
t59 = t1002 * t638 + t275 * t489 + t277 * t488 - t554 * t637 + t815;
t1164 = qJD(1) * t59;
t1004 = t421 + t1103;
t91 = t1004 * t638 - t422 * t637 + t815;
t1162 = qJD(1) * t91;
t129 = t266 * t681 - t682 * t864;
t1159 = t129 * t227;
t1158 = t130 * t228;
t1156 = t171 * t737;
t1053 = rSges(3,2) * t1120 + t740 * rSges(3,3);
t512 = rSges(3,1) * t1117 - t1053;
t1071 = -t512 - t650;
t646 = rSges(3,1) * t736 + t1211;
t982 = t646 * t1040;
t288 = qJD(1) * t1071 - t982;
t1155 = t288 * t737;
t1154 = t288 * t740;
t1115 = t739 * t740;
t1119 = t736 * t740;
t513 = rSges(3,1) * t1115 - rSges(3,2) * t1119 + t720;
t392 = t513 + t651;
t289 = qJD(1) * t392 - t646 * t705;
t564 = t646 * t740;
t1153 = t289 * t564;
t1138 = t637 * t707;
t1137 = t640 * t737;
t1136 = t640 * t740;
t1126 = t707 * t731;
t1113 = t181 + t213;
t1107 = -t737 * t335 + t740 * t336;
t1104 = t336 + t420;
t664 = qJD(5) * t681;
t1098 = t637 * t476 + t664;
t1091 = -t737 * t430 + t740 * t431;
t1086 = t737 * t452 + t740 * t453;
t1085 = -t509 * t1115 - t737 * t505;
t1084 = t510 * t1115 + t737 * t506;
t1081 = qJD(1) * t481 + t608;
t1078 = -t476 - t477;
t1076 = t544 * t1042 + t639;
t1063 = t1307 * t740;
t1061 = rSges(5,2) * t990 + rSges(5,3) * t1041;
t1060 = rSges(4,2) * t986 + rSges(4,3) * t1041;
t1059 = -t642 + t645;
t1058 = t644 + t886;
t1056 = rSges(3,2) * t984 + rSges(3,3) * t1041;
t110 = t1104 * t638 + t419 * t637 + t1000;
t1050 = qJD(1) * t110;
t1043 = qJD(1) * t641;
t292 = -t737 * t845 - t1136;
t1029 = t292 * qJD(1);
t1021 = pkin(3) * t1128;
t1020 = pkin(3) * t1126;
t1019 = t638 * t1220;
t549 = t638 * t1222;
t1014 = t739 * t1203;
t278 = -t638 * t1209 + (-t1042 * t707 - t638 * t706) * rSges(4,1) + t1060;
t279 = -t731 * t525 + (t1269 * t740 + t719) * qJD(1);
t1007 = t452 * t1041 + t740 * t278 + t737 * t279;
t1006 = -t430 * t1041 + t740 * t331 + t737 * t332;
t998 = qJD(1) * t482 + t1081;
t995 = t573 + t1055;
t994 = t611 + t1064;
t993 = t613 + t1063;
t985 = t706 * t1041;
t983 = t736 * t1041;
t978 = t681 * t1034;
t977 = t681 * t1033;
t975 = -pkin(1) - t1213;
t974 = t1042 / 0.2e1;
t973 = t1041 / 0.2e1;
t972 = -t705 / 0.2e1;
t971 = t705 / 0.2e1;
t970 = -t1040 / 0.2e1;
t969 = t1040 / 0.2e1;
t808 = -t580 - t1223;
t807 = -t544 - t1222;
t966 = t736 * (-t737 ^ 2 - t740 ^ 2);
t349 = t637 * t474;
t568 = t740 * t604;
t475 = pkin(2) * t1119 + t568;
t950 = t475 * t638 + t349;
t483 = t544 * t740;
t949 = -t637 * t478 - t483 * t638;
t424 = t510 * t1117;
t945 = t506 * t740 - t424;
t940 = -qJD(1) * t483 - t1270 * t637;
t936 = -t505 + t1143;
t935 = -t730 * t737 + t556;
t931 = pkin(3) * t985;
t928 = -t275 - t1002;
t926 = t737 * t419 + t740 * t420 + t1107;
t925 = t737 * t479 + t740 * t484 + t1107;
t919 = t1067 + t1072;
t916 = -t357 - t1020;
t915 = -t451 - t1020;
t914 = -t1222 + t1277;
t502 = t1269 * t731;
t913 = -t502 - t1014;
t912 = t1270 + t689;
t911 = -t1221 - t1222;
t908 = t481 * t638 + t1098;
t906 = qJD(1) * t478 - t1270 * t638 - t550;
t649 = rSges(2,1) * t740 - rSges(2,2) * t737;
t647 = rSges(2,1) * t737 + rSges(2,2) * t740;
t648 = -rSges(3,2) * t736 + t1213;
t839 = t702 - t930;
t827 = -t549 + t839;
t792 = -t638 * t542 + t609 + t827;
t80 = qJD(1) * t893 - t1019 - t1348 + t792;
t896 = t737 * t81 + t740 * t80;
t291 = t508 * t739 + t510 * t736;
t813 = qJD(2) * t642;
t313 = -t740 * t813 + (-t737 * t886 + t1174) * qJD(1);
t814 = qJD(2) * t644;
t315 = -t740 * t814 + (-t645 * t737 + t1182) * qJD(1);
t754 = -qJD(2) * t291 - t313 * t736 + t315 * t739 + t1044;
t290 = t507 * t739 + t509 * t736;
t314 = qJD(1) * t508 - t737 * t813;
t316 = qJD(1) * t510 - t737 * t814;
t755 = qJD(1) * t505 - qJD(2) * t290 - t314 * t736 + t316 * t739;
t895 = t737 * (t1258 * t737 + t754 * t740) - t740 * (t1257 * t737 + t755 * t740);
t894 = t737 * (-t1258 * t740 + t754 * t737) - t740 * (-t1257 * t740 + t755 * t737);
t873 = t119 * t740 + t120 * t737;
t872 = t119 * t737 - t120 * t740;
t871 = t121 * t740 + t122 * t737;
t870 = t121 * t737 - t122 * t740;
t869 = t129 * t740 + t130 * t737;
t868 = t129 * t737 - t130 * t740;
t867 = -t171 * t740 - t172 * t737;
t186 = -t1120 * t508 - t945;
t866 = -t185 * t740 + t186 * t737;
t187 = -t1119 * t507 - t1085;
t188 = -t1119 * t508 + t1084;
t865 = -t187 * t740 + t188 * t737;
t862 = t275 * t737 - t277 * t740;
t861 = -t289 * t737 - t1154;
t318 = -t1040 * t1211 + (-t1042 * t739 - t981) * rSges(3,1) + t1056;
t563 = t646 * t737;
t319 = -qJD(2) * t563 + (t648 * t740 + t720) * qJD(1);
t860 = t318 * t740 + t319 * t737;
t850 = t512 * t737 + t513 * t740;
t846 = t642 * t739 + t644 * t736;
t843 = -t450 + t916;
t838 = -t544 + t604;
t836 = t331 * t1040 + t332 * t705 - t598 * t430 - t599 * t431;
t835 = t935 + t484;
t834 = t114 * t914;
t245 = rSges(5,1) * t805 - rSges(5,2) * t1010 + t1061;
t831 = t419 * t1041 + t740 * t245 + t737 * t246 + t1009;
t830 = t740 * t421 - t737 * t422 + t925;
t825 = t604 + t1277;
t824 = -t374 + t837;
t816 = -t1014 - t1020;
t811 = t81 * (-t1276 + t909);
t810 = t670 + t991 + t373;
t804 = t637 * t182 - t456 * t335 + t836;
t803 = -t266 * t488 + t268 * t489 + t632 * t782;
t802 = (Icges(7,5) * t521 - Icges(7,6) * t522) * t488 - (Icges(7,5) * t523 + Icges(7,6) * t524) * t489 + t879 * t682 * t632;
t801 = -t451 + t816;
t796 = t1331 * t737 + t1332 * t740 + t925;
t795 = t507 * t740 - t508 * t737;
t794 = -t594 - t1276 - t667;
t793 = qJD(1) * t335 + t1279 + t839;
t791 = -pkin(9) * t1132 - t212 + t916;
t790 = -t357 - t450 + t816;
t789 = t824 - t1223;
t787 = t682 * t802;
t781 = (-t1058 * t736 + t1059 * t739) * qJD(1);
t780 = -qJD(1) * t479 + t609 + t793;
t777 = t1023 * t1252;
t775 = t832 + (t149 + t356) * t740 + (t148 + t355) * t737 + t1331 * t1041;
t774 = t791 - t1014;
t338 = -rSges(7,3) * t1133 + t1063;
t773 = -pkin(9) * t989 + t275 * t1036 + t632 * t338 - t373 * t488 + t374 * t977 + t1081;
t766 = -qJDD(5) * t682 + t637 * t214 + t456 * t479 + t731 * t664 + t804;
t756 = -t740 * t1019 + t275 * t978 - t277 * t977 + t488 * t337 + t338 * t489 + t908;
t587 = t886 * qJD(2);
t588 = t645 * qJD(2);
t753 = qJD(1) * t640 - qJD(2) * t846 - t587 * t736 + t588 * t739;
t751 = -t1251 * t736 + t795 * t739;
t749 = (t782 * t740 + t864) * t488 - (t782 * t737 + t863) * t489 + (Icges(7,3) * t682 + t820 + t859) * t632;
t748 = t749 * t682;
t27 = t1131 * t141 + t143 * t523 - t145 * t524 + t251 * t269 + t252 * t272 + t266 * t806;
t28 = t1131 * t140 + t142 * t523 - t144 * t524 + t251 * t271 - t252 * t273 + t268 * t806;
t29 = t1129 * t141 + t143 * t521 + t145 * t522 + t253 * t269 + t254 * t272 + t266 * t805;
t46 = t1131 * t209 + t210 * t523 - t211 * t524 - t251 * t783 - t252 * t784 - t782 * t806;
t3 = t121 * t227 + t122 * t228 + t152 * t458 + t27 * t488 - t28 * t489 + t46 * t632;
t30 = t1129 * t140 + t142 * t521 + t144 * t522 + t253 * t271 - t254 * t273 + t268 * t805;
t327 = t783 * t737;
t328 = t783 * t740;
t329 = t784 * t737;
t330 = t784 * t740;
t365 = Icges(7,6) * t682 + t821;
t367 = Icges(7,5) * t682 + t822;
t47 = t1129 * t209 + t210 * t521 + t211 * t522 - t253 * t783 - t254 * t784 - t782 * t805;
t4 = t119 * t227 + t120 * t228 + t151 * t458 + t29 * t488 - t30 * t489 + t47 * t632;
t45 = t129 * t488 - t130 * t489 + t161 * t632;
t744 = -t45 * t1036 / 0.2e1 + t870 * t1243 + t872 * t1244 + (qJD(1) * t869 + t31 * t737 - t32 * t740) * t1231 + (((-t328 * t738 - t330 * t735 + t266) * t488 - (-t327 * t738 - t329 * t735 + t268) * t489 + (-t365 * t738 - t367 * t735 - t782) * t632 + t161 * qJD(6)) * t682 + (-qJD(6) * t869 + t749) * t681) * t1232 + ((t328 * t523 - t330 * t524) * t488 - (t327 * t523 - t329 * t524) * t489 + (t365 * t523 - t367 * t524) * t632 + (-t1133 * t121 + t152 * t682) * qJD(6) + ((-qJD(6) * t122 + t803) * t681 + t748) * t737) * t1235 + (qJD(1) * t871 + t27 * t737 - t28 * t740) * t1236 + (qJD(1) * t873 + t29 * t737 - t30 * t740) * t1237 + ((t328 * t521 + t330 * t522) * t488 - (t327 * t521 + t329 * t522) * t489 + (t365 * t521 + t367 * t522) * t632 + (-t1134 * t120 + t151 * t682) * qJD(6) + ((-qJD(6) * t119 + t803) * t681 + t748) * t740) * t1238 + t868 * t1239 + t1306 * t1037 / 0.2e1 + (t1292 * t737 - t1293 * t740) * t1241 + (t1294 * t737 - t1295 * t740) * t1240 + (t1287 * t737 + t1288 * t740) * t1230 + (t1305 * t740 + t1304 * t737 + (t1292 * t740 + t1293 * t737) * qJD(1)) * t1229 + (t1303 * t740 + t1302 * t737 + (t1294 * t740 + t1295 * t737) * qJD(1)) * t1228 + (-t1287 * t740 + t1288 * t737) * t1227 + (t1250 * t707 - t1346 * t682 + t1347 * t681 + t768 * t706) * t1216 + (t1297 * t740 + t1296 * t737 + (t1289 * t740 + t1290 * t737) * qJD(1)) * t1215 + (t1289 * t737 - t1290 * t740) * t1196 + (t41 + t1301) * t974 + (t40 + t1300) * t973 + (qJD(1) * t1299 + qJDD(1) * t1291 + t1292 * t456 + t1293 * t457 + t1304 * t637 + t1305 * t638 + t4) * t1226 + (t1298 * qJD(1) - qJDD(1) * t1362 + t1294 * t456 + t1295 * t457 + t1302 * t637 + t1303 * t638 + t3) * t1225;
t589 = t648 * qJD(2);
t520 = t740 * t549;
t480 = t901 * t682;
t433 = qJD(1) * t475;
t388 = -t990 + t1010;
t387 = t637 * t682 + t989;
t321 = (t638 * t740 + t1284) * t681;
t306 = rSges(7,1) * t523 + rSges(7,2) * t524;
t305 = rSges(7,1) * t521 - rSges(7,2) * t522;
t293 = -t740 * t845 + t1137;
t287 = t293 * qJD(1);
t286 = t850 * qJD(2);
t158 = qJD(1) * t318 + qJDD(1) * t513 - t589 * t705 - t598 * t646 + t1066;
t157 = -t589 * t1040 + t599 * t646 + t1071 * qJDD(1) + (-t319 - t595) * qJD(1);
t156 = -t1253 * t740 + t753 * t737;
t155 = t1253 * t737 + t753 * t740;
t154 = -qJD(2) * t851 + t313 * t739 + t315 * t736;
t153 = -qJD(2) * t852 + t314 * t739 + t316 * t736;
t135 = qJD(1) * t924 - t544 * t638 + t827;
t118 = qJD(2) * t865 + t287;
t117 = qJD(2) * t866 + t1029;
t113 = qJD(1) * t892 + t638 * t898 + t792;
t101 = qJD(1) * t278 + qJDD(1) * t453 - t456 * t580 - t502 * t637 + t776;
t100 = t457 * t580 - t502 * t638 + t999 * qJDD(1) + (-t279 + t1106) * qJD(1) + t844;
t71 = t278 * t638 + t279 * t637 + t452 * t456 - t453 * t457 + t836;
t56 = qJD(1) * t245 + qJDD(1) * t420 - t451 * t637 - t456 * t544 + (-t1126 * t637 - t456 * t706) * pkin(3) + t752;
t34 = qJD(1) * t248 + qJDD(1) * t421 + t456 * t914 + t637 * t843 + t750;
t33 = t246 * t637 + t419 * t456 + (t181 + t245) * t638 - t1104 * t457 + t804;
t24 = (t248 + t1113) * t638 - t422 * t456 - t1004 * t457 + t247 * t637 + t766;
t11 = (t356 + t1113) * t638 - t1002 * t457 + t488 * t148 + t489 * t149 + t637 * t355 + t766 - t456 * t554 - t228 * t275 + t227 * t277;
t1 = [(t1290 + t1333) * t1240 + (t117 - t1029 + ((t740 * t936 - t1084 + t188) * t740 + (t737 * t936 + t187 + t945) * t737) * qJD(2)) * t972 + (t113 * t995 + t114 * (-pkin(4) * t1012 + t918 + t919) + t113 * (-t664 - t551 + (-t1207 + (-rSges(6,3) - qJ(5)) * t682) * t731) * t737 + ((-t113 * rSges(6,1) + t114 * t794) * t737 + (t113 * (t794 + t1206) - t114 * t730) * t740) * qJD(1) - (qJD(1) * t422 - t113 + t780) * t114 - t834 * t638 + (t34 - g(2)) * (t421 + t835) + (t35 - g(1)) * ((-t665 + (rSges(6,2) - pkin(4)) * t682) * t737 + t967 + t1068)) * m(6) + (-g(1) * t1338 - t1308 * t1219 + (t1308 * t737 + t1338) * t19 + (-t903 + t995 + t1275 * t1041 + (-t551 - qJ(5) * t1132 + (pkin(9) * t731 - qJD(5) + t1204) * t681 - pkin(5) * qJD(1)) * t737) * t80 + (t1023 * t1135 * t740 - t837 * t638 + t1112 + t697 - t780 + t80 + t919 + (t1275 * t737 - t1282 - t554) * qJD(1) + t1348) * t81 + (-g(2) + t18) * (t835 + t1332)) * m(7) + ((t1266 * t740 + t1265 + t1292 - t1353) * t638 + ((t1357 + t1372) * t740 + t1266 * t737 + t1293 + t1360) * t637 + t1301 + t1336) * t1230 + (t46 + t40) * t1236 + t1200 / 0.2e1 - t1199 / 0.2e1 + (-qJD(2) * t845 - t1367 * t682 + t1368 * t681 + t587 * t739 + t588 * t736 + t706 * t937 + t707 * t938) * qJD(1) + (t155 + t154) * t971 + (t1296 + t1299) * t1229 + (-t1297 + t1298 + t1300) * t1228 + t1195 + (-(-qJD(1) * t452 + t1279 - t171 + t809) * t172 + t171 * t1054 + t172 * (-t930 + t1060) + (t1156 * t580 - t172 * t526) * t731 + ((-t171 * rSges(4,3) + t172 * (-t690 - t680)) * t737 + (t171 * (-t690 - t1269) - t172 * t741) * t740) * qJD(1) + (t101 - g(2)) * (t453 + t934) + (t100 - g(1)) * (-t452 - t1057)) * m(4) + (-t135 * t907 + t136 * (t1061 + t1072) + (t135 * t478 - t136 * t483) * t731 + ((-t135 * rSges(5,3) + t136 * (-t594 - t669)) * t737 + (t135 * (-t594 - t1270) - t136 * t730) * t740) * qJD(1) - (-qJD(1) * t419 + t638 * t807 - t135 + t793) * t136 + (t56 - g(2)) * (t420 + t935) + (t55 - g(1)) * (-t419 + t1068)) * m(5) + t1159 / 0.2e1 + t1158 / 0.2e1 + (t289 * (t696 + t1056) + (t1155 * t646 - t1153) * qJD(2) + ((-pkin(1) - t648) * t1154 + (t288 * (-rSges(3,3) - pkin(7)) + t289 * t975) * t737) * qJD(1) - (-qJD(1) * t512 - t288 - t603 - t982) * t289 + (t158 - g(2)) * t392 + (t157 - g(1)) * (t737 * t975 + t1053 + t728)) * m(3) + (t1289 + t1291) * t1241 + (t287 + ((t186 - t424 + (t506 + t1144) * t740 + t1085) * t740 + t1084 * t737) * qJD(2)) * t969 + (t153 + t156 + t118) * t970 + t152 * t1243 + t151 * t1244 + t47 * t1237 + (((t446 * t740 + t447 * t737) * t706 + (t410 * t737 - t411 * t740) * t682 + (t404 * t740 + t405 * t737) * t681 + t1294 + t1350 + t1352) * t638 + (-t448 * t1125 + (t446 * t737 - t447 * t740) * t706 + t409 * t1134 + (-t410 * t740 - t411 * t737) * t682 - t406 * t1131 + (t404 * t737 - t405 * t740) * t681 - t1265 + t1295 - t1349) * t637 + t1337) * t1227 + t40 * t1235 + (t293 + t291) * t1234 + (t292 + t290) * t1233 - m(2) * (-g(1) * t647 + g(2) * t649) - t457 * t193 / 0.2e1 + (m(2) * (t647 ^ 2 + t649 ^ 2) + t846 + t576 * t707 + t578 * t706 + Icges(2,3) + t1386 * t682 + t1385 * t681) * qJDD(1); t744 + ((-t1136 * t705 + t1043) * t737 + (t781 + (t1137 * t737 + t751) * qJD(2)) * t740) * t972 + ((-t1040 * t1137 - t1043) * t740 + (t781 + (t1136 * t740 + t751) * qJD(2)) * t737) * t969 + t118 * t973 + t117 * t974 + t866 * t1233 + t865 * t1234 + (qJD(1) * t155 + qJD(2) * t895 + qJDD(1) * t293 + t187 * t599 + t188 * t598) * t1226 + ((t185 * t737 + t186 * t740) * qJD(1) + t894) * t970 + ((t187 * t737 + t188 * t740) * qJD(1) + t895) * t971 + ((t1058 * t739 + t1059 * t736) * qJD(1) + (t1251 * t739 + t795 * t736) * qJD(2)) * t1216 + (-t290 * t740 + t291 * t737) * t1196 + (-t153 * t740 + t154 * t737 + (t290 * t737 + t291 * t740) * qJD(1)) * t1215 + (qJD(1) * t156 + qJD(2) * t894 + qJDD(1) * t292 + t185 * t599 + t186 * t598) * t1225 + (-t81 * (t433 + t773) - t59 * (t756 + t950) - (-pkin(9) * t1134 * t59 + t811) * t637 - (-t81 * t983 + (t59 * t966 - t739 * t896) * qJD(2)) * pkin(2) - g(1) * (t568 + t993) - g(2) * (t567 + t994) - g(3) * (t727 + t810) - t777 + t11 * (t796 + t1091) + t59 * (t775 + t1006) + t789 * t1311 + (t18 * t789 + t81 * t774 + (-t431 + t928) * t1164) * t737 + (t1036 * t277 + t374 * t978 + t740 * t774 - t1272 + t1315 + t663) * t80) * m(7) + (t24 * (t830 + t1091) + t825 * t1335 + (t34 * t825 + (-t431 - t1004) * t1162) * t737 - g(1) * (t568 + t1278) - g(2) * (t567 - t1078) - g(3) * (t727 + t826) + t1283 + (t825 * t1041 + t790 * t737 - t433 - t998 - (-t1313 * t737 - t983) * pkin(2)) * t114 + (t1006 - t349 - t1098 - (t475 + t1278) * t638 - t966 * t1203 + t1318) * t91 + (-(-t474 + t1078) * qJD(1) + (pkin(2) * t1313 + t790) * t740 + t1314) * t113) * m(6) + (-g(1) * (t568 - t483) - g(2) * (t567 - t478) - g(3) * (t727 + t912) - t135 * (t906 + t1272) - t136 * (-pkin(3) * t1138 + t433 + t940) - t110 * (t949 + t950) - (-t136 * t983 + ((-t135 * t740 - t136 * t737) * t739 + t110 * t966) * qJD(2)) * pkin(2) + t135 * (t663 + t1076) + t33 * (t926 + t1091) + t110 * (t831 + t1006) + (t1281 * t838 + t135 * t801) * t740 + (t56 * t838 + t136 * t801 + (-t431 - t1104) * t1050) * t737) * m(5) + (t71 * (t1086 + t1091) + t160 * (t1006 + t1007) + (t171 * t913 + (qJD(1) * t172 + t100) * t808) * t740 + (t101 * t808 + t172 * t913 + (t171 * t580 + t160 * (-t431 - t453)) * qJD(1)) * t737 - (-t172 * t983 + (t160 * t966 + t739 * t867) * qJD(2)) * pkin(2) - g(3) * (t1269 + t727) - t1267 * t808 + t1286) * m(4) + (g(1) * t564 + g(2) * t563 - g(3) * t648 - (t288 * t563 - t1153) * qJD(1) - (t286 * (-t563 * t737 - t564 * t740) + t861 * t648) * qJD(2) + (qJD(2) * t860 + t512 * t598 - t513 * t599) * t850 + t286 * ((t512 * t740 - t513 * t737) * qJD(1) + t860) + t861 * t589 + (-t157 * t740 - t158 * t737 + (-t289 * t740 + t1155) * qJD(1)) * t646) * m(3); t744 + (-g(1) * (-pkin(3) * t1127 + t993) - g(2) * (t994 - t1021) - g(3) * t810 - t777 - t81 * (t773 - t931) - t811 * t637 + t11 * t796 + (t1164 * t928 + t791 * t81) * t737 + (t1285 + t1311) * t824 + (-t639 - (-t1134 * t374 - t277 * t682) * qJD(6) + t791 * t740 + t1315) * t80 + (-t1284 * t910 + t520 - t756 + t775) * t59) * m(7) + (-g(1) * (t740 * t911 + t482 + t613) - g(2) * (t737 * t911 + t477 + t611) - g(3) * t826 - t114 * (-t931 + t998) + t1283 + t24 * t830 + (qJD(1) * t834 + t35 * t914) * t740 + (-t1004 * t1162 + t114 * t843 + t34 * t914) * t737 + (t1021 * t637 - t482 * t638 + t1318 + t520 - t908) * t91 + (-qJD(1) * t1078 + t740 * t843 + t1314 - t639) * t113) * m(6) + (-g(3) * t912 + t33 * t926 + (-t1050 * t1104 + t136 * t915) * t737 - t136 * ((-t985 - t1138) * pkin(3) + t940) + (t548 * t737 + t520 + t831 - t949) * t110 + (t740 * t915 + t1076 - t639 - t906) * t135 + (t1281 * t740 + t56 * t737 - t1267) * t807) * m(5) + (g(1) * t526 + g(2) * t525 - g(3) * t1269 + t71 * t1086 + t160 * (-t1042 * t453 + t1007) + t867 * t502 + (-t100 * t740 - t101 * t737 + (-t172 * t740 + t1156) * qJD(1)) * t580 + t1286) * m(4); (-m(5) + t1245) * (-g(2) * t740 + t1219) + 0.2e1 * (-t1202 / 0.2e1 + t1201 / 0.2e1 + t59 * t1242) * m(7) + 0.2e1 * (t1225 * t34 + t1226 * t35 + t1242 * t91) * m(6) + 0.2e1 * (t110 * t1242 + t1225 * t56 + t1226 * t55) * m(5); t1245 * (-g(3) * t682 + t1252) - m(6) * (t113 * t388 + t114 * t387 + t321 * t91) - m(7) * (t321 * t59 + t387 * t81 + t388 * t80) + 0.2e1 * ((t1123 * t114 + t113 * t638 - t24) * t1247 + (t1123 * t81 + t638 * t80 - t11) * t1246) * t682 + 0.2e1 * ((t1041 * t114 - t1042 * t113 + t34 * t737 + t731 * t91 + t1335) * t1247 + (t1041 * t81 - t1042 * t80 + t19 * t740 + t59 * t731 + t1285) * t1246) * t681; -t40 * t988 / 0.2e1 + t4 * t1129 / 0.2e1 + (t151 * t681 + t682 * t873) * t1244 + ((-t731 * t873 + t47) * t681 + (-qJD(1) * t872 + t151 * t731 + t29 * t740 + t30 * t737) * t682) * t1237 + t682 * t41 * t973 + t3 * t1131 / 0.2e1 + (t152 * t681 + t682 * t871) * t1243 + ((-t731 * t871 + t46) * t681 + (-qJD(1) * t870 + t152 * t731 + t27 * t740 + t28 * t737) * t682) * t1236 + t45 * t1132 / 0.2e1 + t681 * (t1158 + t1159 + t1195 - t1199 + t1200) / 0.2e1 + (t161 * t681 + t682 * t869) * t1239 + ((-t731 * t869 + t58) * t681 + (-qJD(1) * t868 + t161 * t731 + t31 * t740 + t32 * t737) * t682) * t1231 + (t771 * t521 - t522 * t772 + t740 * t787) * t1238 + (t523 * t771 + t524 * t772 + t737 * t787) * t1235 + (t802 * t681 + (t772 * t735 - t738 * t771) * t682) * t1232 - t1306 * t1135 / 0.2e1 + ((-t80 * t148 + t81 * t149 + t18 * t275 - t19 * t277 + (t59 * t862 + (-t737 * t80 + t740 * t81) * t374) * t731) * t681 + (t80 * (t212 * t737 - t277 * t731) + t81 * (-t212 * t740 + t275 * t731) - t11 * t862 + t59 * (-t1041 * t275 - t1042 * t277 + t148 * t740 - t149 * t737) + (qJD(1) * t896 + t1201 - t1202) * t374) * t682 - t80 * (-t306 * t632 - t480 * t489) - t81 * (t305 * t632 - t480 * t488) - t59 * (t305 * t489 + t306 * t488) - g(1) * t305 - g(2) * t306 - g(3) * t480) * m(7);];
tau  = t1;
