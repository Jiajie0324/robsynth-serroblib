% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RPRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauc_reg [6x30]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR9_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR9_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR9_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR9_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:31:34
% EndTime: 2019-03-09 05:31:51
% DurationCPUTime: 5.93s
% Computational Cost: add. (16928->452), mult. (56141->664), div. (0->0), fcn. (48730->14), ass. (0->235)
t235 = sin(pkin(7));
t234 = sin(pkin(12));
t236 = sin(pkin(6));
t238 = cos(pkin(12));
t245 = cos(qJ(3));
t239 = cos(pkin(7));
t242 = sin(qJ(3));
t329 = t239 * t242;
t255 = (t234 * t329 - t238 * t245) * t236;
t317 = qJD(3) * t245;
t374 = qJD(1) * t255 + t235 * t317;
t340 = cos(pkin(6));
t299 = t340 * t235;
t281 = t245 * t299;
t328 = t239 * t245;
t310 = t238 * t328;
t373 = t236 * t310 + t281;
t294 = qJD(1) * t340;
t284 = pkin(1) * t294;
t320 = qJD(1) * t236;
t306 = t238 * t320;
t198 = qJ(2) * t306 + t234 * t284;
t331 = t236 * t238;
t252 = (t239 * t331 + t299) * pkin(9);
t158 = qJD(1) * t252 + t198;
t221 = t238 * t284;
t335 = t234 * t236;
t250 = t340 * pkin(2) + (-pkin(9) * t239 - qJ(2)) * t335;
t165 = qJD(1) * t250 + t221;
t192 = (-pkin(9) * t234 * t235 - pkin(2) * t238 - pkin(1)) * t236;
t184 = qJD(1) * t192 + qJD(2);
t359 = t242 * t158 - (t165 * t239 + t184 * t235) * t245;
t372 = qJD(3) * t359;
t307 = t234 * t320;
t363 = qJD(1) * t373 - t242 * t307;
t164 = qJD(4) - t363;
t241 = sin(qJ(4));
t244 = cos(qJ(4));
t351 = -qJ(5) - pkin(10);
t300 = qJD(4) * t351;
t337 = t363 * t241;
t179 = t236 * (t234 * t245 + t238 * t329) + t242 * t299;
t171 = qJD(1) * t179;
t124 = pkin(3) * t171 - pkin(10) * t363;
t341 = t241 * t124 - t244 * t359;
t371 = qJ(5) * t337 + t244 * qJD(5) + t241 * t300 - t341;
t123 = t244 * t124;
t370 = -pkin(4) * t171 - t123 + (qJ(5) * t363 + t300) * t244 + (-qJD(5) - t359) * t241;
t193 = t235 * t306 - t239 * t294 - qJD(3);
t130 = t171 * t241 + t244 * t193;
t132 = t171 * t244 - t193 * t241;
t233 = sin(pkin(13));
t237 = cos(pkin(13));
t291 = -t237 * t130 - t132 * t233;
t357 = qJD(6) - t291;
t240 = sin(qJ(6));
t243 = cos(qJ(6));
t273 = -t130 * t233 + t237 * t132;
t71 = -t243 * t164 + t240 * t273;
t369 = t357 * t71;
t209 = t233 * t241 - t237 * t244;
t121 = t209 * t363;
t202 = t209 * qJD(4);
t368 = -t121 + t202;
t333 = t235 * t242;
t204 = t239 * t241 + t244 * t333;
t287 = t235 * t307;
t367 = qJD(4) * t204 + t374 * t241 + t244 * t287;
t203 = t239 * t244 - t241 * t333;
t366 = -qJD(4) * t203 + t241 * t287 - t374 * t244;
t210 = t233 * t244 + t237 * t241;
t323 = t164 * t210;
t319 = qJD(2) * t236;
t305 = t234 * t319;
t330 = t238 * t242;
t365 = t305 * t328 + t319 * t330;
t293 = t243 * t357;
t153 = t363 * qJD(3);
t315 = qJD(4) * t244;
t316 = qJD(4) * t241;
t107 = t244 * t153 - t171 * t316 - t193 * t315;
t108 = qJD(4) * t132 + t241 * t153;
t66 = t107 * t233 + t237 * t108;
t346 = t240 * t66;
t364 = -t293 * t357 - t346;
t343 = t233 * t371 - t370 * t237;
t342 = t370 * t233 + t237 * t371;
t361 = t236 ^ 2 * (t234 ^ 2 + t238 ^ 2);
t103 = t245 * t158 + t165 * t329 + t184 * t333;
t358 = -t103 + (t316 - t337) * pkin(4);
t170 = t179 * qJD(3);
t154 = qJD(1) * t170;
t228 = pkin(4) * t233 + pkin(11);
t285 = t235 * t305;
t114 = pkin(3) * t154 - pkin(10) * t153 + qJD(1) * t285;
t251 = qJD(2) * t255;
t77 = -qJD(1) * t251 - t372;
t297 = t244 * t114 - t241 * t77;
t125 = -t165 * t235 + t239 * t184;
t81 = -pkin(3) * t363 - pkin(10) * t171 + t125;
t83 = -pkin(10) * t193 + t103;
t57 = t241 * t81 + t244 * t83;
t249 = -qJD(4) * t57 + t297;
t18 = t154 * pkin(4) - t107 * qJ(5) - t132 * qJD(5) + t249;
t264 = t241 * t114 + t244 * t77 + t81 * t315 - t316 * t83;
t22 = -qJ(5) * t108 - qJD(5) * t130 + t264;
t5 = t18 * t237 - t22 * t233;
t3 = -pkin(5) * t154 - t5;
t356 = (pkin(4) * t132 + pkin(5) * t273 - pkin(11) * t291 + qJD(6) * t228) * t357 + t3;
t309 = -pkin(4) * t244 - pkin(3);
t172 = pkin(5) * t209 - pkin(11) * t210 + t309;
t217 = t351 * t244;
t301 = t351 * t241;
t186 = -t237 * t217 + t233 * t301;
t355 = (-pkin(5) * t323 - pkin(11) * t368 + qJD(6) * t186 - t358) * t357 - t172 * t66;
t308 = pkin(1) * t340;
t322 = qJ(2) * t331 + t234 * t308;
t175 = t252 + t322;
t225 = t238 * t308;
t180 = t225 + t250;
t271 = t180 * t239 + t192 * t235;
t354 = -t242 * t175 + t245 * t271;
t318 = qJD(3) * t242;
t302 = t239 * t318;
t304 = t235 * t318;
t78 = qJD(1) * t365 + t158 * t317 + t165 * t302 + t184 * t304;
t61 = pkin(4) * t108 + t78;
t67 = t107 * t237 - t108 * t233;
t24 = pkin(5) * t66 - pkin(11) * t67 + t61;
t56 = -t241 * t83 + t244 * t81;
t48 = -qJ(5) * t132 + t56;
t45 = pkin(4) * t164 + t48;
t49 = -qJ(5) * t130 + t57;
t46 = t237 * t49;
t17 = t233 * t45 + t46;
t14 = pkin(11) * t164 + t17;
t82 = t193 * pkin(3) + t359;
t68 = t130 * pkin(4) + qJD(5) + t82;
t38 = -pkin(5) * t291 - pkin(11) * t273 + t68;
t277 = t14 * t240 - t243 * t38;
t6 = t233 * t18 + t237 * t22;
t4 = pkin(11) * t154 + t6;
t1 = -qJD(6) * t277 + t240 * t24 + t243 * t4;
t353 = t71 * t273;
t73 = t164 * t240 + t243 * t273;
t352 = t73 * t273;
t200 = t235 * t331 - t239 * t340;
t135 = t179 * t241 + t200 * t244;
t334 = t234 * t242;
t169 = (t281 + (t310 - t334) * t236) * qJD(3);
t113 = -qJD(4) * t135 + t169 * t244;
t136 = t179 * t244 - t200 * t241;
t119 = pkin(3) * t170 - pkin(10) * t169 + t285;
t90 = qJD(3) * t354 - t251;
t296 = t244 * t119 - t241 * t90;
t101 = -t200 * pkin(10) + t245 * t175 + t242 * t271;
t133 = -t180 * t235 + t239 * t192;
t178 = t236 * t334 - t373;
t95 = pkin(3) * t178 - pkin(10) * t179 + t133;
t350 = t244 * t101 + t241 * t95;
t28 = t170 * pkin(4) - t113 * qJ(5) - qJD(4) * t350 - t136 * qJD(5) + t296;
t112 = qJD(4) * t136 + t169 * t241;
t262 = -t101 * t316 + t241 * t119 + t244 * t90 + t95 * t315;
t32 = -qJ(5) * t112 - qJD(5) * t135 + t262;
t10 = t233 * t28 + t237 * t32;
t298 = -t101 * t241 + t244 * t95;
t51 = pkin(4) * t178 - qJ(5) * t136 + t298;
t55 = -qJ(5) * t135 + t350;
t30 = t233 * t51 + t237 * t55;
t348 = t186 * t66;
t347 = t233 * t49;
t313 = qJD(6) * t243;
t314 = qJD(6) * t240;
t39 = t240 * t154 + t164 * t313 + t243 * t67 - t273 * t314;
t345 = t39 * t240;
t344 = pkin(5) * t171 + t343;
t339 = t130 * t164;
t338 = t132 * t164;
t336 = t210 * t243;
t332 = t235 * t245;
t325 = -t233 * t367 - t237 * t366;
t324 = -t233 * t366 + t237 * t367;
t312 = qJD(1) * qJD(2);
t295 = -t243 * t154 + t240 * t67;
t290 = t164 * t244;
t246 = qJD(1) ^ 2;
t283 = t236 * t246 * t340;
t189 = (t234 * t328 + t330) * t320;
t279 = -t189 + t304;
t12 = t14 * t243 + t240 * t38;
t9 = -t233 * t32 + t237 * t28;
t16 = t237 * t45 - t347;
t29 = -t233 * t55 + t237 * t51;
t26 = pkin(11) * t178 + t30;
t104 = t237 * t135 + t136 * t233;
t105 = -t135 * t233 + t136 * t237;
t100 = t200 * pkin(3) - t354;
t247 = t135 * pkin(4) + t100;
t41 = t104 * pkin(5) - t105 * pkin(11) + t247;
t276 = t240 * t41 + t243 * t26;
t275 = -t240 * t26 + t243 * t41;
t91 = t175 * t317 + t180 * t302 + t192 * t304 + t365;
t75 = t105 * t243 + t178 * t240;
t74 = t105 * t240 - t178 * t243;
t270 = (-qJ(2) * t307 + t221) * t234 - t198 * t238;
t269 = t243 * t66 + (t240 * t291 - t314) * t357;
t268 = qJD(6) * t332 - t325;
t265 = -0.2e1 * t294 * t319;
t263 = -pkin(10) * t154 + t164 * t82;
t96 = -t121 * t240 - t243 * t171;
t259 = -t202 * t240 + t210 * t313 - t96;
t97 = -t121 * t243 + t171 * t240;
t258 = -t202 * t243 - t210 * t314 - t97;
t257 = pkin(4) * t112 + t91;
t156 = t203 * t233 + t204 * t237;
t256 = -qJD(6) * t156 + t279;
t13 = -pkin(5) * t164 - t16;
t21 = t237 * t48 - t347;
t253 = -t228 * t66 + (t13 + t21) * t357;
t2 = -qJD(6) * t12 + t243 * t24 - t240 * t4;
t248 = -t348 + t3 * t210 + (pkin(11) * t171 - qJD(6) * t172 - t342) * t357;
t229 = -pkin(4) * t237 - pkin(5);
t185 = -t217 * t233 - t237 * t301;
t155 = -t237 * t203 + t204 * t233;
t70 = -t112 * t233 + t113 * t237;
t69 = t237 * t112 + t113 * t233;
t44 = qJD(6) * t75 - t170 * t243 + t240 * t70;
t43 = -qJD(6) * t74 + t170 * t240 + t243 * t70;
t40 = qJD(6) * t73 + t295;
t33 = pkin(5) * t69 - pkin(11) * t70 + t257;
t25 = -pkin(5) * t178 - t29;
t20 = t233 * t48 + t46;
t8 = pkin(11) * t170 + t10;
t7 = -pkin(5) * t170 - t9;
t11 = [0, 0, 0, t234 * t265, t238 * t265, 0.2e1 * t312 * t361 ((t238 * t322 + (qJ(2) * t335 - t225) * t234) * qJD(1) - t270) * t319, t153 * t179 + t169 * t171, -t153 * t178 - t154 * t179 + t169 * t363 - t170 * t171, -t153 * t200 - t169 * t193, t154 * t200 + t170 * t193, 0, t125 * t170 + t133 * t154 + t91 * t193 + t78 * t200 + (qJD(1) * t178 - t363) * t285, t125 * t169 + t133 * t153 + 0.2e1 * t171 * t285 + t90 * t193 + t77 * t200, t107 * t136 + t113 * t132, -t107 * t135 - t108 * t136 - t112 * t132 - t113 * t130, t107 * t178 + t113 * t164 + t132 * t170 + t136 * t154, -t108 * t178 - t112 * t164 - t130 * t170 - t135 * t154, t154 * t178 + t164 * t170, t296 * t164 + t298 * t154 + t297 * t178 + t56 * t170 + t91 * t130 + t100 * t108 + t78 * t135 + t82 * t112 + (-t164 * t350 - t178 * t57) * qJD(4), t100 * t107 + t82 * t113 + t91 * t132 + t78 * t136 - t154 * t350 - t164 * t262 - t57 * t170 - t178 * t264, t10 * t291 - t104 * t6 - t105 * t5 - t16 * t70 - t17 * t69 - t273 * t9 - t29 * t67 - t30 * t66, t17 * t10 + t16 * t9 + t247 * t61 + t257 * t68 + t5 * t29 + t6 * t30, t39 * t75 + t43 * t73, -t39 * t74 - t40 * t75 - t43 * t71 - t44 * t73, t104 * t39 + t357 * t43 + t66 * t75 + t69 * t73, -t104 * t40 - t357 * t44 - t66 * t74 - t69 * t71, t104 * t66 + t357 * t69 (-qJD(6) * t276 - t240 * t8 + t243 * t33) * t357 + t275 * t66 + t2 * t104 - t277 * t69 + t7 * t71 + t25 * t40 + t3 * t74 + t13 * t44 -(qJD(6) * t275 + t240 * t33 + t243 * t8) * t357 - t276 * t66 - t1 * t104 - t12 * t69 + t7 * t73 + t25 * t39 + t3 * t75 + t13 * t43; 0, 0, 0, t234 * t283, t238 * t283, -t246 * t361, t270 * t320, 0, 0, 0, 0, 0, t239 * t154 + t193 * t279 + t287 * t363, t239 * t153 - t171 * t287 + t374 * t193, 0, 0, 0, 0, 0, -t108 * t332 + t279 * t130 + t203 * t154 - t164 * t367, -t107 * t332 + t279 * t132 - t204 * t154 + t164 * t366, t155 * t67 - t156 * t66 + t273 * t324 + t291 * t325, -t5 * t155 + t6 * t156 - t68 * t189 + (-t245 * t61 + t318 * t68) * t235 + t325 * t17 - t324 * t16, 0, 0, 0, 0, 0 (-t156 * t240 - t243 * t332) * t66 + t155 * t40 + (t240 * t268 + t243 * t256) * t357 + t324 * t71 -(t156 * t243 - t240 * t332) * t66 + t155 * t39 + (-t240 * t256 + t243 * t268) * t357 + t324 * t73; 0, 0, 0, 0, 0, 0, 0, -t171 * t363, t171 ^ 2 - t363 ^ 2, t193 * t363 + t153, -t171 * t193 - t154, 0, -t103 * t193 - t125 * t171 - t78, -t125 * t363 + t193 * t359 + t255 * t312 + t372, t107 * t241 + t132 * t290 (t107 - t339) * t244 + (-t108 - t338) * t241, -t132 * t171 + t241 * t154 + t164 * t290, -t164 ^ 2 * t241 + t130 * t171 + t244 * t154, -t164 * t171, -pkin(3) * t108 - t103 * t130 - t56 * t171 - t78 * t244 + (-pkin(10) * t315 - t123) * t164 + (-t164 * t359 + t263) * t241, -pkin(3) * t107 - t103 * t132 + t57 * t171 + t78 * t241 + (pkin(10) * t316 + t341) * t164 + t263 * t244, t16 * t368 - t323 * t17 + t185 * t67 - t6 * t209 - t5 * t210 + t343 * t273 + t342 * t291 - t348, -t343 * t16 + t342 * t17 - t5 * t185 + t6 * t186 + t61 * t309 + t358 * t68, t258 * t73 + t336 * t39, t97 * t71 + t73 * t96 - (-t240 * t73 - t243 * t71) * t202 + (-t345 - t243 * t40 + (t240 * t71 - t243 * t73) * qJD(6)) * t210, t39 * t209 + t258 * t357 + t323 * t73 + t336 * t66, -t40 * t209 - t210 * t346 - t259 * t357 - t323 * t71, t66 * t209 + t323 * t357, t259 * t13 + t185 * t40 + t2 * t209 + t248 * t240 - t243 * t355 - t277 * t323 + t344 * t71, -t1 * t209 - t323 * t12 + t258 * t13 + t185 * t39 + t240 * t355 + t248 * t243 + t344 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132 * t130, -t130 ^ 2 + t132 ^ 2, t107 + t339, -t108 + t338, t154, -t82 * t132 + t57 * t164 + t249, t130 * t82 + t164 * t56 - t264 (-t233 * t66 - t237 * t67) * pkin(4) + (t16 - t21) * t291 + (t17 - t20) * t273, t16 * t20 - t17 * t21 + (-t132 * t68 + t233 * t6 + t237 * t5) * pkin(4), t293 * t73 + t345 (t39 - t369) * t243 + (-t357 * t73 - t40) * t240, -t352 - t364, t269 + t353, -t357 * t273, -t20 * t71 + t229 * t40 + t253 * t240 - t243 * t356 + t273 * t277, t12 * t273 - t20 * t73 + t229 * t39 + t240 * t356 + t253 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273 ^ 2 - t291 ^ 2, t16 * t273 - t17 * t291 + t61, 0, 0, 0, 0, 0, t269 - t353, -t352 + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73 * t71, -t71 ^ 2 + t73 ^ 2, t39 + t369, -t295 + (-qJD(6) + t357) * t73, t66, t12 * t357 - t13 * t73 + t2, t13 * t71 - t277 * t357 - t1;];
tauc_reg  = t11;
