% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 23:35
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRPR9_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR9_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR9_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR9_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR9_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR9_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 23:28:27
% EndTime: 2019-05-05 23:30:49
% DurationCPUTime: 149.23s
% Computational Cost: add. (1704378->1302), mult. (5361848->2179), div. (0->0), fcn. (4646503->16), ass. (0->955)
t1388 = sin(pkin(13));
t1389 = sin(pkin(12));
t1391 = sin(pkin(6));
t1393 = cos(pkin(12));
t1395 = cos(pkin(6));
t1402 = cos(qJ(3));
t1394 = cos(pkin(7));
t1398 = sin(qJ(3));
t1600 = t1394 * t1398;
t1390 = sin(pkin(7));
t1608 = t1390 * t1398;
t1420 = t1395 * t1608 + (t1389 * t1402 + t1393 * t1600) * t1391;
t1340 = t1420 * qJD(1);
t1601 = t1394 * t1395;
t1604 = t1391 * t1393;
t1668 = t1390 * t1604 - t1601;
t1351 = qJD(1) * t1668 - qJD(3);
t1397 = sin(qJ(4));
t1401 = cos(qJ(4));
t1318 = -t1397 * t1340 - t1351 * t1401;
t1319 = t1340 * t1401 - t1351 * t1397;
t1392 = cos(pkin(13));
t1259 = -t1392 * t1318 + t1319 * t1388;
t1261 = t1388 * t1318 + t1392 * t1319;
t1198 = t1261 * t1259;
t1588 = qJDD(1) * t1391;
t1568 = t1389 * t1588;
t1603 = t1391 * t1394;
t1572 = t1393 * t1603;
t1606 = t1390 * t1402;
t1678 = -t1395 * t1606 - t1402 * t1572;
t1461 = qJDD(1) * t1678 + t1398 * t1568;
t1301 = -qJD(3) * t1340 - t1461;
t1295 = qJDD(4) - t1301;
t1671 = -t1198 + t1295;
t1685 = t1388 * t1671;
t1684 = t1392 * t1671;
t1396 = sin(qJ(6));
t1611 = t1389 * t1398;
t1338 = (t1391 * t1611 + t1678) * qJD(1);
t1333 = qJD(4) + t1338;
t1400 = cos(qJ(6));
t1227 = t1261 * t1396 - t1400 * t1333;
t1229 = t1261 * t1400 + t1333 * t1396;
t1156 = t1229 * t1227;
t1419 = t1420 * qJDD(1);
t1302 = -qJD(3) * t1338 + t1419;
t1587 = qJDD(1) * t1393;
t1566 = t1391 * t1587;
t1586 = qJDD(1) * t1395;
t1451 = -t1390 * t1566 + t1394 * t1586 + qJDD(3);
t1558 = t1302 * t1397 - t1401 * t1451;
t1240 = -qJD(4) * t1319 - t1558;
t1241 = t1318 * qJD(4) + t1401 * t1302 + t1397 * t1451;
t1560 = -t1392 * t1240 + t1241 * t1388;
t1550 = qJDD(6) + t1560;
t1672 = -t1156 + t1550;
t1683 = t1396 * t1672;
t1271 = t1318 * t1319;
t1670 = t1271 + t1295;
t1682 = t1397 * t1670;
t1681 = t1400 * t1672;
t1680 = t1401 * t1670;
t1322 = t1338 * t1351;
t1266 = t1322 + t1302;
t1399 = sin(qJ(1));
t1403 = cos(qJ(1));
t1376 = t1399 * g(1) - t1403 * g(2);
t1655 = pkin(9) * t1390;
t1660 = pkin(2) * t1393;
t1469 = t1389 * t1655 + t1660;
t1564 = t1395 * g(3) - qJDD(2);
t1383 = t1389 ^ 2;
t1386 = t1393 ^ 2;
t1590 = t1383 + t1386;
t1667 = qJD(1) ^ 2;
t1605 = t1391 * t1667;
t1609 = t1390 * t1395;
t1650 = qJ(2) * t1391;
t1659 = pkin(2) * t1395;
t1411 = ((-pkin(1) - t1469) * qJDD(1) - t1376) * t1391 + (t1389 * t1659 - t1650 + (-t1393 * t1609 - t1590 * t1603) * pkin(9)) * t1605 - t1564;
t1468 = qJDD(1) * pkin(1) + t1376;
t1450 = t1395 * t1468;
t1585 = pkin(2) * t1586;
t1417 = -g(3) * t1604 + t1393 * t1450 + t1585;
t1377 = t1403 * g(1) + t1399 * g(2);
t1427 = qJ(2) * t1588 - t1377;
t1556 = pkin(9) * t1568;
t1415 = -t1389 * t1427 - t1394 * t1556 + t1417;
t1413 = t1390 * t1415 - t1394 * t1411;
t1410 = -pkin(10) * t1266 - t1413;
t1559 = -t1340 * t1351 - t1301;
t1679 = t1559 * pkin(3) + t1410;
t1633 = t1261 * t1333;
t1129 = t1560 + t1633;
t1662 = 2 * qJD(2);
t1463 = t1572 + t1609;
t1434 = t1463 * pkin(9);
t1460 = t1391 * t1469;
t1624 = t1338 * t1340;
t1423 = t1451 - t1624;
t1676 = t1398 * t1423;
t1675 = t1402 * t1423;
t1610 = t1390 * t1391;
t1576 = t1389 * t1610;
t1583 = qJ(2) * t1604;
t1612 = t1389 * t1391;
t1652 = t1389 * pkin(1);
t1674 = (t1576 * t1662 - t1390 * (pkin(2) * t1604 * t1612 + t1395 * t1583 + t1652 + (t1395 * t1463 + t1576 * t1612) * pkin(9)) * qJD(1)) * qJD(1);
t1385 = t1391 ^ 2;
t1387 = t1395 ^ 2;
t1575 = t1389 * t1393 * t1667;
t1673 = (t1385 + t1387) * t1391 * t1575;
t1169 = t1240 * t1388 + t1241 * t1392;
t1236 = t1333 * t1259;
t1132 = t1169 - t1236;
t1105 = -t1227 * qJD(6) + t1400 * t1169 + t1396 * t1295;
t1256 = qJD(6) + t1259;
t1179 = t1256 * t1227;
t1067 = -t1179 + t1105;
t1283 = t1333 * t1318;
t1204 = t1283 - t1241;
t1203 = t1283 + t1241;
t1296 = pkin(3) * t1338 - pkin(10) * t1340;
t1669 = t1451 * pkin(10) - t1338 * t1296;
t1561 = t1169 * t1396 - t1400 * t1295;
t1064 = (qJD(6) - t1256) * t1229 + t1561;
t1200 = (qJD(4) - t1333) * t1319 + t1558;
t1224 = t1227 ^ 2;
t1225 = t1229 ^ 2;
t1252 = t1256 ^ 2;
t1257 = t1259 ^ 2;
t1258 = t1261 ^ 2;
t1666 = t1318 ^ 2;
t1317 = t1319 ^ 2;
t1665 = t1333 ^ 2;
t1336 = t1338 ^ 2;
t1337 = t1340 ^ 2;
t1664 = t1351 ^ 2;
t1663 = -2 * qJD(2);
t1661 = 2 * qJD(5);
t1658 = pkin(3) * t1398;
t1657 = pkin(3) * t1402;
t1656 = pkin(5) * t1388;
t1654 = pkin(9) * t1394;
t1653 = t1664 * pkin(3);
t1651 = t1391 * g(3);
t1196 = pkin(5) * t1259 - pkin(11) * t1261;
t1414 = t1398 * ((t1393 * t1601 - t1610) * t1650 - t1668 * t1434);
t1416 = -pkin(2) * t1566 - t1391 * t1468 - t1564;
t1569 = qJ(2) + t1654;
t1380 = g(3) * t1612;
t1553 = t1395 * t1569;
t1249 = t1393 * t1427 + t1389 * t1450 - t1380 + qJDD(1) * t1434 + ((-t1393 * pkin(1) - pkin(2) * t1387) * qJD(1) + (t1393 * t1662 + (t1389 * t1553 - t1393 * t1460) * qJD(1)) * t1391) * qJD(1);
t1594 = t1402 * t1249;
t1147 = t1594 + (t1390 * t1416 + t1394 * t1417) * t1398 + t1667 * t1414 + (t1394 * (t1667 * pkin(1) + t1377) + ((-pkin(9) * t1390 ^ 2 - t1394 * t1569) * qJDD(1) + (pkin(2) * qJD(1) * t1463 + t1394 * t1663) * qJD(1)) * t1391) * t1611;
t1406 = t1147 - t1653 + t1669;
t1408 = t1674 + t1679;
t1405 = pkin(4) * t1670 + qJ(5) * t1204 - t1397 * t1406 + t1401 * t1408;
t1029 = t1397 * t1408 + t1401 * t1406;
t1280 = pkin(4) * t1333 - qJ(5) * t1319;
t994 = -pkin(4) * t1666 + qJ(5) * t1240 - t1280 * t1333 + t1029;
t904 = -0.2e1 * qJD(5) * t1259 + t1388 * t1405 + t1392 * t994;
t894 = -pkin(5) * t1665 + pkin(11) * t1295 - t1196 * t1259 + t904;
t1599 = t1394 * t1402;
t1146 = t1249 * t1398 - (t1585 + (t1450 - t1651) * t1393 + (-t1569 * t1588 + t1377) * t1389 + ((t1387 * t1655 + t1652) * qJD(1) + (t1389 * t1663 + (t1389 * t1460 + t1393 * t1553) * qJD(1)) * t1391) * qJD(1)) * t1599 - t1411 * t1606;
t1113 = -t1451 * pkin(3) - t1664 * pkin(10) + t1296 * t1340 + t1146;
t1057 = -t1240 * pkin(4) - t1666 * qJ(5) + t1280 * t1319 + qJDD(5) + t1113;
t956 = pkin(5) * t1129 - pkin(11) * t1132 + t1057;
t833 = t1396 * t956 + t1400 * t894;
t1563 = t1388 * t994 - t1392 * t1405;
t893 = -t1295 * pkin(5) - t1665 * pkin(11) + (t1661 + t1196) * t1261 + t1563;
t1649 = t1396 * t893;
t903 = t1261 * t1661 + t1563;
t821 = t1388 * t904 - t1392 * t903;
t1648 = t1397 * t821;
t1647 = t1400 * t893;
t1646 = t1401 * t821;
t1645 = t1057 * t1388;
t1644 = t1057 * t1392;
t1089 = t1156 + t1550;
t1643 = t1089 * t1396;
t1642 = t1089 * t1400;
t1641 = t1113 * t1397;
t1640 = t1113 * t1401;
t1165 = t1198 + t1295;
t1639 = t1165 * t1388;
t1638 = t1165 * t1392;
t1219 = -t1271 + t1295;
t1637 = t1219 * t1397;
t1636 = t1219 * t1401;
t1635 = t1256 * t1396;
t1634 = t1256 * t1400;
t1285 = -t1451 - t1624;
t1632 = t1285 * t1398;
t1631 = t1285 * t1402;
t1630 = t1295 * t1398;
t1629 = t1333 * t1388;
t1628 = t1333 * t1392;
t1627 = t1333 * t1397;
t1626 = t1333 * t1401;
t1623 = t1338 * t1402;
t1621 = t1340 * t1398;
t1368 = t1385 * t1575;
t1356 = t1368 + t1586;
t1620 = t1356 * t1389;
t1619 = t1356 * t1393;
t1357 = -t1368 + t1586;
t1618 = t1357 * t1389;
t1617 = t1357 * t1393;
t1616 = t1383 * t1385;
t1615 = t1385 * t1667;
t1614 = t1385 * t1386;
t1424 = qJ(2) * t1605 + t1468;
t1341 = t1391 * t1424 + t1564;
t1613 = t1389 * t1341;
t1607 = t1390 * t1401;
t1602 = t1393 * t1341;
t1598 = t1395 * t1667;
t1597 = t1397 * t1398;
t1208 = t1413 - t1674;
t1596 = t1398 * t1208;
t1595 = t1402 * t1208;
t1593 = qJD(3) - t1351;
t1589 = qJDD(1) * t1385;
t1584 = -pkin(5) * t1392 - pkin(4);
t1582 = t1388 * t1156;
t1581 = t1392 * t1156;
t1580 = t1398 * t1198;
t1579 = t1402 * t1198;
t1578 = t1398 * t1271;
t1577 = t1402 * t1271;
t1571 = t1391 * t1598;
t1570 = t1394 * t1597;
t1567 = t1389 * t1587;
t1565 = t1391 * t1586;
t822 = t1388 * t903 + t1392 * t904;
t832 = t1396 * t894 - t1400 * t956;
t1407 = (((t1434 + t1583) * t1395 * t1607 + t1397 * t1414 + ((t1385 * t1660 + pkin(1)) * t1570 + (t1401 * pkin(1) + (t1401 * t1460 + t1597 * t1659) * t1391) * t1390) * t1389) * qJD(1) + (-t1570 - t1607) * t1612 * t1662) * qJD(1);
t1409 = t1594 + t1415 * t1600 + (-t1390 * t1556 + t1416) * t1608 + t1669;
t1028 = t1397 * (t1409 - t1653) - t1401 * t1679 + t1407;
t941 = t1028 * t1397 + t1401 * t1029;
t1343 = -t1376 * t1399 - t1403 * t1377;
t1374 = qJDD(1) * t1403 - t1399 * t1667;
t1554 = -pkin(8) * t1374 - g(3) * t1399;
t1284 = -t1664 - t1336;
t1221 = t1284 * t1402 - t1676;
t1552 = pkin(9) * t1221 + t1595;
t1290 = -t1337 - t1664;
t1226 = -t1290 * t1398 + t1631;
t1551 = pkin(9) * t1226 - t1596;
t787 = t1396 * t832 + t1400 * t833;
t757 = t1388 * t787 - t1392 * t893;
t758 = t1388 * t893 + t1392 * t787;
t715 = -t1397 * t757 + t1401 * t758;
t786 = t1396 * t833 - t1400 * t832;
t1531 = t1398 * t715 - t1402 * t786;
t714 = t1397 * t758 + t1401 * t757;
t685 = -t1390 * t714 + t1394 * t1531;
t703 = t1398 * t786 + t1402 * t715;
t1549 = t1389 * t703 + t1393 * t685;
t774 = t1401 * t822 - t1648;
t1520 = -t1057 * t1402 + t1398 * t774;
t773 = t1397 * t822 + t1646;
t723 = -t1390 * t773 + t1394 * t1520;
t769 = t1057 * t1398 + t1402 * t774;
t1548 = t1389 * t769 + t1393 * t723;
t1118 = t1224 + t1225;
t1068 = -t1179 - t1105;
t971 = -t1064 * t1400 - t1068 * t1396;
t930 = t1118 * t1392 + t1388 * t971;
t931 = -t1118 * t1388 + t1392 * t971;
t858 = -t1397 * t930 + t1401 * t931;
t969 = -t1064 * t1396 + t1068 * t1400;
t1530 = t1398 * t858 - t1402 * t969;
t857 = t1397 * t931 + t1401 * t930;
t785 = -t1390 * t857 + t1394 * t1530;
t820 = t1398 * t969 + t1402 * t858;
t1547 = t1389 * t820 + t1393 * t785;
t1155 = -t1225 + t1224;
t1065 = (-qJD(6) - t1256) * t1229 - t1561;
t970 = t1065 * t1400 - t1067 * t1396;
t938 = t1155 * t1392 + t1388 * t970;
t939 = -t1155 * t1388 + t1392 * t970;
t871 = -t1397 * t938 + t1401 * t939;
t968 = -t1065 * t1396 - t1067 * t1400;
t1529 = t1398 * t871 + t1402 * t968;
t870 = t1397 * t939 + t1401 * t938;
t790 = -t1390 * t870 + t1394 * t1529;
t823 = -t1398 * t968 + t1402 * t871;
t1546 = t1389 * t823 + t1393 * t790;
t1138 = -t1252 - t1224;
t1013 = t1138 * t1396 + t1681;
t1014 = t1138 * t1400 - t1683;
t943 = t1014 * t1388 + t1065 * t1392;
t944 = t1014 * t1392 - t1065 * t1388;
t876 = -t1397 * t943 + t1401 * t944;
t1524 = -t1013 * t1402 + t1398 * t876;
t875 = t1397 * t944 + t1401 * t943;
t794 = -t1390 * t875 + t1394 * t1524;
t835 = t1013 * t1398 + t1402 * t876;
t1545 = t1389 * t835 + t1393 * t794;
t1141 = -t1225 - t1252;
t1019 = t1141 * t1400 - t1643;
t1020 = -t1141 * t1396 - t1642;
t946 = t1020 * t1388 - t1067 * t1392;
t947 = t1020 * t1392 + t1067 * t1388;
t882 = -t1397 * t946 + t1401 * t947;
t1523 = -t1019 * t1402 + t1398 * t882;
t881 = t1397 * t947 + t1401 * t946;
t798 = -t1390 * t881 + t1394 * t1523;
t838 = t1019 * t1398 + t1402 * t882;
t1544 = t1389 * t838 + t1393 * t798;
t1178 = -t1225 + t1252;
t1048 = -t1178 * t1400 - t1683;
t1050 = -t1178 * t1396 + t1681;
t959 = t1050 * t1388 + t1068 * t1392;
t961 = t1050 * t1392 - t1068 * t1388;
t885 = -t1397 * t959 + t1401 * t961;
t1522 = t1048 * t1402 + t1398 * t885;
t883 = t1397 * t961 + t1401 * t959;
t801 = -t1390 * t883 + t1394 * t1522;
t848 = -t1048 * t1398 + t1402 * t885;
t1543 = t1389 * t848 + t1393 * t801;
t1177 = t1224 - t1252;
t1049 = -t1177 * t1396 - t1642;
t1051 = t1177 * t1400 - t1643;
t960 = t1051 * t1388 + t1064 * t1392;
t962 = t1051 * t1392 - t1064 * t1388;
t886 = -t1397 * t960 + t1401 * t962;
t1521 = t1049 * t1402 + t1398 * t886;
t884 = t1397 * t962 + t1401 * t960;
t802 = -t1390 * t884 + t1394 * t1521;
t849 = -t1049 * t1398 + t1402 * t886;
t1542 = t1389 * t849 + t1393 * t802;
t1104 = -qJD(6) * t1229 - t1561;
t1060 = -t1104 * t1400 - t1227 * t1635;
t1061 = -t1104 * t1396 + t1227 * t1634;
t1007 = t1061 * t1388 + t1581;
t1009 = t1061 * t1392 - t1582;
t925 = -t1007 * t1397 + t1009 * t1401;
t1519 = t1060 * t1402 + t1398 * t925;
t923 = t1007 * t1401 + t1009 * t1397;
t827 = -t1390 * t923 + t1394 * t1519;
t895 = -t1060 * t1398 + t1402 * t925;
t1541 = t1389 * t895 + t1393 * t827;
t1062 = -t1105 * t1396 - t1229 * t1634;
t1063 = t1105 * t1400 - t1229 * t1635;
t1008 = t1063 * t1388 - t1581;
t1010 = t1063 * t1392 + t1582;
t926 = -t1008 * t1397 + t1010 * t1401;
t1518 = t1062 * t1402 + t1398 * t926;
t924 = t1008 * t1401 + t1010 * t1397;
t828 = -t1390 * t924 + t1394 * t1518;
t896 = -t1062 * t1398 + t1402 * t926;
t1540 = t1389 * t896 + t1393 * t828;
t1515 = -t1113 * t1402 + t1398 * t941;
t940 = -t1028 * t1401 + t1029 * t1397;
t851 = -t1390 * t940 + t1394 * t1515;
t913 = t1113 * t1398 + t1402 * t941;
t1539 = t1389 * t913 + t1393 * t851;
t1100 = (t1227 * t1396 + t1229 * t1400) * t1256;
t1101 = (-t1227 * t1400 + t1229 * t1396) * t1256;
t1052 = t1101 * t1388 - t1392 * t1550;
t1053 = t1101 * t1392 + t1388 * t1550;
t958 = -t1052 * t1397 + t1053 * t1401;
t1516 = t1100 * t1402 + t1398 * t958;
t957 = t1052 * t1401 + t1053 * t1397;
t862 = -t1390 * t957 + t1394 * t1516;
t920 = -t1100 * t1398 + t1402 * t958;
t1538 = t1389 * t920 + t1393 * t862;
t1145 = -t1257 - t1258;
t1130 = t1560 - t1633;
t1134 = -t1169 - t1236;
t1043 = -t1130 * t1388 + t1134 * t1392;
t1045 = -t1130 * t1392 - t1134 * t1388;
t951 = -t1043 * t1397 + t1045 * t1401;
t1514 = -t1145 * t1402 + t1398 * t951;
t949 = t1043 * t1401 + t1045 * t1397;
t865 = -t1390 * t949 + t1394 * t1514;
t927 = t1145 * t1398 + t1402 * t951;
t1537 = t1389 * t927 + t1393 * t865;
t1197 = -t1258 + t1257;
t1042 = -t1129 * t1388 + t1132 * t1392;
t1044 = -t1129 * t1392 - t1132 * t1388;
t950 = -t1042 * t1397 + t1044 * t1401;
t1513 = t1197 * t1402 + t1398 * t950;
t948 = t1042 * t1401 + t1044 * t1397;
t869 = -t1390 * t948 + t1394 * t1513;
t936 = -t1197 * t1398 + t1402 * t950;
t1536 = t1389 * t936 + t1393 * t869;
t1184 = -t1665 - t1257;
t1096 = t1184 * t1388 + t1684;
t1097 = t1184 * t1392 - t1685;
t1000 = t1096 * t1401 + t1097 * t1397;
t1001 = -t1096 * t1397 + t1097 * t1401;
t1512 = t1001 * t1398 - t1129 * t1402;
t900 = -t1390 * t1000 + t1394 * t1512;
t967 = t1001 * t1402 + t1129 * t1398;
t1535 = t1389 * t967 + t1393 * t900;
t1215 = -t1258 - t1665;
t1110 = t1215 * t1392 - t1639;
t1111 = -t1215 * t1388 - t1638;
t1023 = t1110 * t1401 + t1111 * t1397;
t1024 = -t1110 * t1397 + t1111 * t1401;
t1509 = t1024 * t1398 - t1132 * t1402;
t910 = -t1023 * t1390 + t1394 * t1509;
t977 = t1024 * t1402 + t1132 * t1398;
t1534 = t1389 * t977 + t1393 * t910;
t1235 = -t1258 + t1665;
t1120 = t1235 * t1392 + t1685;
t1122 = -t1235 * t1388 + t1684;
t1032 = t1120 * t1401 + t1122 * t1397;
t1034 = -t1120 * t1397 + t1122 * t1401;
t1507 = t1034 * t1398 + t1134 * t1402;
t918 = -t1032 * t1390 + t1394 * t1507;
t980 = t1034 * t1402 - t1134 * t1398;
t1533 = t1389 * t980 + t1393 * t918;
t1234 = t1257 - t1665;
t1121 = t1234 * t1388 + t1638;
t1123 = t1234 * t1392 - t1639;
t1033 = t1121 * t1401 + t1123 * t1397;
t1035 = -t1121 * t1397 + t1123 * t1401;
t1506 = t1035 * t1398 + t1130 * t1402;
t919 = -t1033 * t1390 + t1394 * t1506;
t981 = t1035 * t1402 - t1130 * t1398;
t1532 = t1389 * t981 + t1393 * t919;
t1364 = (-t1387 - t1614) * t1667;
t1328 = t1364 * t1393 - t1620;
t1528 = qJ(2) * t1328 + t1602;
t1362 = (-t1387 - t1616) * t1667;
t1330 = -t1362 * t1389 - t1617;
t1527 = qJ(2) * t1330 - t1613;
t1124 = t1259 * t1629 - t1392 * t1560;
t1125 = t1259 * t1628 + t1388 * t1560;
t1040 = -t1124 * t1397 + t1125 * t1401;
t1002 = t1040 * t1402 - t1580;
t1038 = t1124 * t1401 + t1125 * t1397;
t1467 = t1040 * t1398 + t1579;
t934 = -t1038 * t1390 + t1394 * t1467;
t1526 = t1002 * t1389 + t1393 * t934;
t1126 = t1169 * t1388 + t1261 * t1628;
t1127 = t1169 * t1392 - t1261 * t1629;
t1041 = -t1126 * t1397 + t1127 * t1401;
t1003 = t1041 * t1402 + t1580;
t1039 = t1126 * t1401 + t1127 * t1397;
t1466 = t1041 * t1398 - t1579;
t935 = -t1039 * t1390 + t1394 * t1466;
t1525 = t1003 * t1389 + t1393 * t935;
t1157 = (-t1259 * t1388 - t1261 * t1392) * t1333;
t1158 = (-t1259 * t1392 + t1261 * t1388) * t1333;
t1087 = -t1157 * t1397 + t1158 * t1401;
t1082 = t1087 * t1402 + t1630;
t1086 = t1157 * t1401 + t1158 * t1397;
t1289 = t1295 * t1599;
t987 = -t1086 * t1390 + t1087 * t1600 - t1289;
t1517 = t1082 * t1389 + t1393 * t987;
t1115 = -t1200 * t1397 + t1204 * t1401;
t1117 = -t1200 * t1401 - t1204 * t1397;
t1222 = t1317 + t1666;
t1498 = t1117 * t1398 + t1222 * t1402;
t1006 = -t1115 * t1390 + t1394 * t1498;
t1085 = t1117 * t1402 - t1222 * t1398;
t1511 = t1006 * t1393 + t1085 * t1389;
t1201 = (-qJD(4) - t1333) * t1319 - t1558;
t1114 = t1201 * t1397 + t1203 * t1401;
t1116 = t1201 * t1401 - t1203 * t1397;
t1268 = -t1317 + t1666;
t1499 = t1116 * t1398 + t1268 * t1402;
t1012 = -t1114 * t1390 + t1394 * t1499;
t1095 = t1116 * t1402 - t1268 * t1398;
t1510 = t1012 * t1393 + t1095 * t1389;
t1496 = -t1146 * t1402 + t1147 * t1398;
t1031 = t1208 * t1390 + t1394 * t1496;
t1081 = t1146 * t1398 + t1147 * t1402;
t1508 = t1031 * t1393 + t1081 * t1389;
t1242 = -t1665 - t1666;
t1150 = t1242 * t1397 + t1680;
t1151 = t1242 * t1401 - t1682;
t1494 = t1151 * t1398 + t1201 * t1402;
t1047 = -t1150 * t1390 + t1394 * t1494;
t1099 = t1151 * t1402 - t1201 * t1398;
t1505 = t1047 * t1393 + t1099 * t1389;
t1248 = -t1317 - t1665;
t1161 = t1248 * t1401 - t1637;
t1162 = -t1248 * t1397 - t1636;
t1492 = t1162 * t1398 - t1203 * t1402;
t1056 = -t1161 * t1390 + t1394 * t1492;
t1103 = t1162 * t1402 + t1203 * t1398;
t1504 = t1056 * t1393 + t1103 * t1389;
t1282 = -t1317 + t1665;
t1180 = t1282 * t1401 + t1682;
t1182 = -t1282 * t1397 + t1680;
t1489 = t1182 * t1398 + t1204 * t1402;
t1072 = -t1180 * t1390 + t1394 * t1489;
t1108 = t1182 * t1402 - t1204 * t1398;
t1503 = t1072 * t1393 + t1108 * t1389;
t1281 = -t1665 + t1666;
t1181 = t1281 * t1397 + t1636;
t1183 = t1281 * t1401 - t1637;
t1488 = t1183 * t1398 + t1200 * t1402;
t1073 = -t1181 * t1390 + t1394 * t1488;
t1109 = t1183 * t1402 - t1200 * t1398;
t1502 = t1073 * t1393 + t1109 * t1389;
t1192 = t1240 * t1401 - t1318 * t1627;
t1193 = -t1240 * t1397 - t1318 * t1626;
t1465 = t1193 * t1398 - t1577;
t1093 = -t1192 * t1390 + t1394 * t1465;
t1143 = t1193 * t1402 + t1578;
t1501 = t1093 * t1393 + t1143 * t1389;
t1194 = t1241 * t1397 + t1319 * t1626;
t1195 = t1241 * t1401 - t1319 * t1627;
t1464 = t1195 * t1398 + t1577;
t1094 = -t1194 * t1390 + t1394 * t1464;
t1144 = t1195 * t1402 - t1578;
t1500 = t1094 * t1393 + t1144 * t1389;
t1216 = (t1318 * t1397 - t1319 * t1401) * t1333;
t1217 = (t1318 * t1401 + t1319 * t1397) * t1333;
t1136 = -t1216 * t1390 + t1217 * t1600 - t1289;
t1190 = t1217 * t1402 + t1630;
t1497 = t1136 * t1393 + t1190 * t1389;
t1279 = -t1336 - t1337;
t1267 = -t1322 + t1302;
t1421 = (-qJD(3) - t1351) * t1340 - t1461;
t1481 = -t1267 * t1402 + t1398 * t1421;
t1149 = -t1279 * t1390 + t1394 * t1481;
t1207 = t1267 * t1398 + t1402 * t1421;
t1495 = t1149 * t1393 + t1207 * t1389;
t1303 = t1337 - t1336;
t1262 = t1340 * t1593 + t1461;
t1482 = -t1262 * t1398 + t1266 * t1402;
t1160 = -t1303 * t1390 + t1394 * t1482;
t1206 = -t1262 * t1402 - t1266 * t1398;
t1493 = t1160 * t1393 + t1206 * t1389;
t1480 = t1284 * t1398 + t1675;
t1171 = -t1262 * t1390 + t1394 * t1480;
t1491 = t1171 * t1393 + t1221 * t1389;
t1265 = -t1338 * t1593 + t1419;
t1479 = t1290 * t1402 + t1632;
t1173 = -t1265 * t1390 + t1394 * t1479;
t1490 = t1173 * t1393 + t1226 * t1389;
t1321 = -t1337 + t1664;
t1477 = t1321 * t1402 + t1676;
t1187 = -t1267 * t1390 + t1394 * t1477;
t1243 = -t1321 * t1398 + t1675;
t1487 = t1187 * t1393 + t1243 * t1389;
t1320 = t1336 - t1664;
t1478 = t1320 * t1398 - t1631;
t1188 = -t1390 * t1421 + t1394 * t1478;
t1244 = t1320 * t1402 + t1632;
t1486 = t1188 * t1393 + t1244 * t1389;
t1210 = t1301 * t1599 + (t1340 * t1390 - t1351 * t1600) * t1338;
t1253 = -t1301 * t1398 - t1351 * t1623;
t1485 = t1210 * t1393 + t1253 * t1389;
t1212 = t1302 * t1600 + (-t1338 * t1390 - t1351 * t1599) * t1340;
t1255 = t1302 * t1402 + t1351 * t1621;
t1484 = t1212 * t1393 + t1255 * t1389;
t1462 = t1351 * (t1338 * t1398 + t1340 * t1402);
t1246 = -t1390 * t1451 + t1394 * t1462;
t1272 = (-t1621 + t1623) * t1351;
t1483 = t1246 * t1393 + t1272 * t1389;
t1418 = (-pkin(1) * qJD(1) + t1391 * t1662) * qJD(1) + t1427;
t1422 = t1395 * t1424;
t1315 = (-t1422 + t1651) * t1393 + t1418 * t1389;
t1316 = t1389 * t1422 + t1393 * t1418 - t1380;
t1476 = -t1315 * t1393 + t1316 * t1389;
t1254 = t1315 * t1389 + t1316 * t1393;
t1370 = t1393 * t1571;
t1352 = t1370 + t1568;
t1369 = t1389 * t1571;
t1355 = -t1369 + t1566;
t1475 = t1352 * t1393 + t1355 * t1389;
t1353 = -t1370 + t1568;
t1354 = t1369 + t1566;
t1474 = -t1353 * t1393 + t1354 * t1389;
t1361 = (t1387 - t1616) * t1667;
t1473 = t1361 * t1393 + t1620;
t1472 = t1364 * t1389 + t1619;
t1471 = t1362 * t1393 - t1618;
t1363 = (-t1387 + t1614) * t1667;
t1470 = t1363 * t1389 + t1617;
t1342 = t1376 * t1403 - t1399 * t1377;
t695 = qJ(5) * t758 + (-pkin(11) * t1388 + t1584) * t786;
t709 = -qJ(5) * t757 + (-pkin(11) * t1392 + t1656) * t786;
t670 = -pkin(10) * t714 - t1397 * t695 + t1401 * t709;
t692 = -pkin(3) * t714 - pkin(4) * t757 + pkin(5) * t893 - pkin(11) * t787;
t1459 = pkin(9) * t703 + t1398 * t670 + t1402 * t692;
t772 = -pkin(11) * t969 - t786;
t738 = qJ(5) * t931 + t1388 * t772 + t1584 * t969;
t747 = -qJ(5) * t930 + t1392 * t772 + t1656 * t969;
t702 = -pkin(10) * t857 - t1397 * t738 + t1401 * t747;
t731 = -pkin(3) * t857 - pkin(4) * t930 - pkin(5) * t1118 - pkin(11) * t971 - t787;
t1458 = pkin(9) * t820 + t1398 * t702 + t1402 * t731;
t817 = -pkin(5) * t1013 + t832;
t852 = -pkin(11) * t1013 + t1649;
t756 = -pkin(4) * t1013 + qJ(5) * t944 + t1388 * t852 + t1392 * t817;
t765 = -qJ(5) * t943 - t1388 * t817 + t1392 * t852;
t712 = -pkin(10) * t875 - t1397 * t756 + t1401 * t765;
t777 = -pkin(3) * t875 - pkin(4) * t943 - pkin(5) * t1065 - pkin(11) * t1014 + t1647;
t1457 = pkin(9) * t835 + t1398 * t712 + t1402 * t777;
t818 = -pkin(5) * t1019 + t833;
t854 = -pkin(11) * t1019 + t1647;
t759 = -pkin(4) * t1019 + qJ(5) * t947 + t1388 * t854 + t1392 * t818;
t768 = -qJ(5) * t946 - t1388 * t818 + t1392 * t854;
t713 = -pkin(10) * t881 - t1397 * t759 + t1401 * t768;
t778 = -pkin(3) * t881 - pkin(4) * t946 + pkin(5) * t1067 - pkin(11) * t1020 - t1649;
t1456 = pkin(9) * t838 + t1398 * t713 + t1402 * t778;
t812 = -pkin(4) * t1057 + qJ(5) * t822;
t724 = -pkin(10) * t773 - qJ(5) * t1646 - t1397 * t812;
t741 = -pkin(3) * t773 - pkin(4) * t821;
t1455 = pkin(9) * t769 + t1398 * t724 + t1402 * t741;
t807 = -pkin(4) * t1145 + qJ(5) * t1045 + t822;
t809 = -qJ(5) * t1043 - t821;
t748 = -pkin(10) * t949 - t1397 * t807 + t1401 * t809;
t905 = -pkin(3) * t949 - pkin(4) * t1043;
t1454 = pkin(9) * t927 + t1398 * t748 + t1402 * t905;
t843 = -pkin(3) * t1000 - pkin(4) * t1096 + t903;
t942 = -pkin(4) * t1129 + qJ(5) * t1097 - t1644;
t978 = -qJ(5) * t1096 + t1645;
t846 = -pkin(10) * t1000 - t1397 * t942 + t1401 * t978;
t1453 = pkin(9) * t967 + t1398 * t846 + t1402 * t843;
t853 = -pkin(3) * t1023 - pkin(4) * t1110 + t904;
t953 = -pkin(4) * t1132 + qJ(5) * t1111 + t1645;
t985 = -qJ(5) * t1110 + t1644;
t860 = -pkin(10) * t1023 - t1397 * t953 + t1401 * t985;
t1452 = pkin(9) * t977 + t1398 * t860 + t1402 * t853;
t1058 = -pkin(10) * t1150 + t1641;
t993 = t1397 * t1409 - t1401 * t1410 + (-t1397 * t1664 - t1401 * t1559 - t1150) * pkin(3) + t1407;
t1449 = pkin(9) * t1099 + t1058 * t1398 + t1402 * t993;
t1074 = -pkin(10) * t1161 + t1640;
t995 = -pkin(3) * t1161 + t1029;
t1448 = pkin(9) * t1103 + t1074 * t1398 + t1402 * t995;
t667 = -pkin(3) * t786 + pkin(10) * t715 + t1397 * t709 + t1401 * t695;
t684 = t1390 * t1531 + t1394 * t714;
t653 = -pkin(2) * t684 - t1390 * t667 + t1394 * t1459;
t656 = -t1398 * t692 + t1402 * t670 + (-t1390 * t684 - t1394 * t685) * pkin(9);
t671 = -t1389 * t685 + t1393 * t703;
t1447 = qJ(2) * t671 + t1389 * t656 + t1393 * t653;
t701 = -pkin(3) * t969 + pkin(10) * t858 + t1397 * t747 + t1401 * t738;
t784 = t1390 * t1530 + t1394 * t857;
t669 = -pkin(2) * t784 - t1390 * t701 + t1394 * t1458;
t682 = -t1398 * t731 + t1402 * t702 + (-t1390 * t784 - t1394 * t785) * pkin(9);
t745 = -t1389 * t785 + t1393 * t820;
t1446 = qJ(2) * t745 + t1389 * t682 + t1393 * t669;
t721 = -pkin(3) * t1057 + pkin(10) * t774 - qJ(5) * t1648 + t1401 * t812;
t722 = t1390 * t1520 + t1394 * t773;
t673 = -pkin(2) * t722 - t1390 * t721 + t1394 * t1455;
t677 = -t1398 * t741 + t1402 * t724 + (-t1390 * t722 - t1394 * t723) * pkin(9);
t706 = -t1389 * t723 + t1393 * t769;
t1445 = qJ(2) * t706 + t1389 * t677 + t1393 * t673;
t710 = -pkin(3) * t1013 + pkin(10) * t876 + t1397 * t765 + t1401 * t756;
t793 = t1390 * t1524 + t1394 * t875;
t679 = -pkin(2) * t793 - t1390 * t710 + t1394 * t1457;
t689 = -t1398 * t777 + t1402 * t712 + (-t1390 * t793 - t1394 * t794) * pkin(9);
t753 = -t1389 * t794 + t1393 * t835;
t1444 = qJ(2) * t753 + t1389 * t689 + t1393 * t679;
t711 = -pkin(3) * t1019 + pkin(10) * t882 + t1397 * t768 + t1401 * t759;
t797 = t1390 * t1523 + t1394 * t881;
t681 = -pkin(2) * t797 - t1390 * t711 + t1394 * t1456;
t690 = -t1398 * t778 + t1402 * t713 + (-t1390 * t797 - t1394 * t798) * pkin(9);
t760 = -t1389 * t798 + t1393 * t838;
t1443 = qJ(2) * t760 + t1389 * t690 + t1393 * t681;
t746 = -pkin(3) * t1145 + pkin(10) * t951 + t1397 * t809 + t1401 * t807;
t864 = t1390 * t1514 + t1394 * t949;
t700 = -pkin(2) * t864 - t1390 * t746 + t1394 * t1454;
t718 = -t1398 * t905 + t1402 * t748 + (-t1390 * t864 - t1394 * t865) * pkin(9);
t814 = -t1389 * t865 + t1393 * t927;
t1442 = qJ(2) * t814 + t1389 * t718 + t1393 * t700;
t834 = -pkin(3) * t1129 + pkin(10) * t1001 + t1397 * t978 + t1401 * t942;
t899 = t1394 * t1000 + t1390 * t1512;
t733 = -pkin(2) * t899 - t1390 * t834 + t1394 * t1453;
t750 = -t1398 * t843 + t1402 * t846 + (-t1390 * t899 - t1394 * t900) * pkin(9);
t847 = -t1389 * t900 + t1393 * t967;
t1441 = qJ(2) * t847 + t1389 * t750 + t1393 * t733;
t841 = -pkin(3) * t1132 + pkin(10) * t1024 + t1397 * t985 + t1401 * t953;
t909 = t1023 * t1394 + t1390 * t1509;
t740 = -pkin(2) * t909 - t1390 * t841 + t1394 * t1452;
t755 = -t1398 * t853 + t1402 * t860 + (-t1390 * t909 - t1394 * t910) * pkin(9);
t867 = -t1389 * t910 + t1393 * t977;
t1440 = qJ(2) * t867 + t1389 * t755 + t1393 * t740;
t1425 = pkin(9) * t913 + (-pkin(10) * t1398 - t1657) * t940;
t850 = t1390 * t1515 + t1394 * t940;
t914 = -pkin(3) * t1113 + pkin(10) * t941;
t763 = -pkin(2) * t850 - t1390 * t914 + t1394 * t1425;
t764 = (-pkin(10) * t1402 + t1658) * t940 + (-t1390 * t850 - t1394 * t851) * pkin(9);
t808 = -t1389 * t851 + t1393 * t913;
t1439 = qJ(2) * t808 + t1389 * t764 + t1393 * t763;
t1005 = t1115 * t1394 + t1390 * t1498;
t915 = -pkin(10) * t1115 - t940;
t1428 = pkin(9) * t1085 - t1115 * t1657 + t1398 * t915;
t908 = pkin(3) * t1222 + pkin(10) * t1117 + t941;
t806 = -pkin(2) * t1005 - t1390 * t908 + t1394 * t1428;
t831 = t1115 * t1658 + t1402 * t915 + (-t1005 * t1390 - t1006 * t1394) * pkin(9);
t952 = -t1006 * t1389 + t1085 * t1393;
t1438 = qJ(2) * t952 + t1389 * t831 + t1393 * t806;
t1015 = pkin(3) * t1201 + pkin(10) * t1151 - t1640;
t1046 = t1150 * t1394 + t1390 * t1494;
t840 = -pkin(2) * t1046 - t1015 * t1390 + t1394 * t1449;
t866 = t1058 * t1402 - t1398 * t993 + (-t1046 * t1390 - t1047 * t1394) * pkin(9);
t976 = -t1047 * t1389 + t1099 * t1393;
t1437 = qJ(2) * t976 + t1389 * t866 + t1393 * t840;
t1018 = -pkin(3) * t1203 + pkin(10) * t1162 + t1641;
t1055 = t1161 * t1394 + t1390 * t1492;
t845 = -pkin(2) * t1055 - t1018 * t1390 + t1394 * t1448;
t874 = t1074 * t1402 - t1398 * t995 + (-t1055 * t1390 - t1056 * t1394) * pkin(9);
t979 = -t1056 * t1389 + t1103 * t1393;
t1436 = qJ(2) * t979 + t1389 * t874 + t1393 * t845;
t1030 = -t1208 * t1394 + t1390 * t1496;
t945 = (-t1030 * t1390 - t1031 * t1394) * pkin(9);
t964 = -t1031 * t1389 + t1081 * t1393;
t965 = -pkin(2) * t1030 + t1081 * t1654;
t1435 = qJ(2) * t964 + t1389 * t945 + t1393 * t965;
t1433 = pkin(9) * t1207 + t1081;
t1098 = -t1149 * t1389 + t1207 * t1393;
t1148 = t1279 * t1394 + t1390 * t1481;
t982 = (-t1148 * t1390 - t1149 * t1394) * pkin(9) - t1496;
t991 = -pkin(2) * t1148 + t1394 * t1433;
t1432 = qJ(2) * t1098 + t1389 * t982 + t1393 * t991;
t1170 = t1262 * t1394 + t1390 * t1480;
t1017 = -pkin(2) * t1170 + t1146 * t1390 + t1394 * t1552;
t1059 = -t1596 + (-t1170 * t1390 - t1171 * t1394) * pkin(9);
t1119 = -t1171 * t1389 + t1221 * t1393;
t1431 = qJ(2) * t1119 + t1017 * t1393 + t1059 * t1389;
t1172 = t1265 * t1394 + t1390 * t1479;
t1022 = -pkin(2) * t1172 + t1147 * t1390 + t1394 * t1551;
t1075 = -t1595 + (-t1172 * t1390 - t1173 * t1394) * pkin(9);
t1137 = -t1173 * t1389 + t1226 * t1393;
t1430 = qJ(2) * t1137 + t1022 * t1393 + t1075 * t1389;
t1323 = t1353 * t1389 + t1354 * t1393;
t1429 = qJ(2) * t1323 + t1254;
t1373 = t1399 * qJDD(1) + t1403 * t1667;
t1360 = -pkin(8) * t1373 + g(3) * t1403;
t1359 = t1590 * t1615;
t1358 = (t1383 - t1386) * t1615;
t1349 = t1590 * t1571;
t1348 = (-t1383 * t1598 + t1567) * t1391;
t1347 = (-t1386 * t1598 - t1567) * t1391;
t1335 = t1383 * t1565 + t1673;
t1334 = t1386 * t1565 - t1673;
t1329 = -t1361 * t1389 + t1619;
t1327 = t1363 * t1393 - t1618;
t1324 = -t1352 * t1389 + t1355 * t1393;
t1309 = -t1352 * t1391 + t1395 * t1471;
t1308 = -t1353 * t1391 + t1395 * t1473;
t1307 = t1355 * t1391 + t1395 * t1472;
t1306 = -t1354 * t1391 + t1395 * t1470;
t1305 = t1352 * t1395 + t1391 * t1471;
t1304 = -t1355 * t1395 + t1391 * t1472;
t1300 = -t1358 * t1391 + t1395 * t1475;
t1299 = t1359 * t1391 + t1395 * t1474;
t1298 = -t1359 * t1395 + t1391 * t1474;
t1288 = t1295 * t1606;
t1276 = -t1399 * t1309 + t1330 * t1403;
t1275 = -t1399 * t1307 + t1328 * t1403;
t1274 = t1309 * t1403 + t1399 * t1330;
t1273 = t1307 * t1403 + t1399 * t1328;
t1270 = -t1399 * t1299 + t1323 * t1403;
t1269 = t1299 * t1403 + t1399 * t1323;
t1245 = t1390 * t1462 + t1394 * t1451;
t1233 = t1341 * t1391 + t1395 * t1476;
t1232 = -t1341 * t1395 + t1391 * t1476;
t1231 = -t1602 + (-t1305 * t1391 - t1309 * t1395) * qJ(2);
t1230 = -t1613 + (-t1304 * t1391 - t1307 * t1395) * qJ(2);
t1214 = -pkin(1) * t1304 + t1315 * t1391 + t1395 * t1528;
t1213 = -pkin(1) * t1305 + t1316 * t1391 + t1395 * t1527;
t1211 = t1302 * t1608 + (t1338 * t1394 - t1351 * t1606) * t1340;
t1209 = t1301 * t1606 + (-t1340 * t1394 - t1351 * t1608) * t1338;
t1199 = -pkin(1) * t1298 + t1395 * t1429;
t1191 = -t1246 * t1389 + t1272 * t1393;
t1189 = (-t1298 * t1391 - t1299 * t1395) * qJ(2) - t1476;
t1186 = t1390 * t1478 + t1394 * t1421;
t1185 = t1267 * t1394 + t1390 * t1477;
t1176 = qJ(2) * t1254 * t1395 - pkin(1) * t1232;
t1175 = -t1399 * t1233 + t1254 * t1403;
t1174 = t1233 * t1403 + t1399 * t1254;
t1159 = t1303 * t1394 + t1390 * t1482;
t1154 = (-t1232 * t1391 - t1233 * t1395) * qJ(2);
t1153 = -t1212 * t1389 + t1255 * t1393;
t1152 = -t1210 * t1389 + t1253 * t1393;
t1142 = -t1245 * t1391 + t1395 * t1483;
t1140 = -t1188 * t1389 + t1244 * t1393;
t1139 = -t1187 * t1389 + t1243 * t1393;
t1135 = t1216 * t1394 + t1217 * t1608 - t1288;
t1107 = -t1211 * t1391 + t1395 * t1484;
t1106 = -t1209 * t1391 + t1395 * t1485;
t1102 = -t1160 * t1389 + t1206 * t1393;
t1092 = t1194 * t1394 + t1390 * t1464;
t1091 = t1192 * t1394 + t1390 * t1465;
t1084 = -t1186 * t1391 + t1395 * t1486;
t1083 = -t1185 * t1391 + t1395 * t1487;
t1080 = -t1136 * t1389 + t1190 * t1393;
t1079 = -t1172 * t1391 + t1395 * t1490;
t1078 = t1172 * t1395 + t1391 * t1490;
t1077 = -t1170 * t1391 + t1395 * t1491;
t1076 = t1170 * t1395 + t1391 * t1491;
t1071 = t1181 * t1394 + t1390 * t1488;
t1070 = t1180 * t1394 + t1390 * t1489;
t1054 = -t1159 * t1391 + t1395 * t1493;
t1037 = -t1148 * t1391 + t1395 * t1495;
t1036 = t1148 * t1395 + t1391 * t1495;
t1026 = -t1094 * t1389 + t1144 * t1393;
t1025 = -t1093 * t1389 + t1143 * t1393;
t1021 = pkin(2) * t1173 - t1147 * t1394 + t1390 * t1551;
t1016 = pkin(2) * t1171 - t1146 * t1394 + t1390 * t1552;
t1011 = t1114 * t1394 + t1390 * t1499;
t1004 = -t1135 * t1391 + t1395 * t1497;
t999 = -t1399 * t1079 + t1137 * t1403;
t998 = t1079 * t1403 + t1399 * t1137;
t997 = -t1399 * t1077 + t1119 * t1403;
t996 = t1077 * t1403 + t1399 * t1119;
t990 = pkin(2) * t1149 + t1390 * t1433;
t989 = -t1073 * t1389 + t1109 * t1393;
t988 = -t1072 * t1389 + t1108 * t1393;
t986 = t1086 * t1394 + t1087 * t1608 - t1288;
t975 = -t1399 * t1037 + t1098 * t1403;
t974 = t1037 * t1403 + t1399 * t1098;
t973 = -t1092 * t1391 + t1395 * t1500;
t972 = -t1091 * t1391 + t1395 * t1501;
t966 = pkin(2) * t1031 + t1081 * t1655;
t963 = -t1012 * t1389 + t1095 * t1393;
t937 = t1082 * t1393 - t1389 * t987;
t933 = t1039 * t1394 + t1390 * t1466;
t932 = t1038 * t1394 + t1390 * t1467;
t929 = -t1071 * t1391 + t1395 * t1502;
t928 = -t1070 * t1391 + t1395 * t1503;
t922 = -t1055 * t1391 + t1395 * t1504;
t921 = t1055 * t1395 + t1391 * t1504;
t917 = t1033 * t1394 + t1390 * t1506;
t916 = t1032 * t1394 + t1390 * t1507;
t912 = -t1046 * t1391 + t1395 * t1505;
t911 = t1046 * t1395 + t1391 * t1505;
t907 = -t1030 * t1391 + t1395 * t1508;
t906 = t1030 * t1395 + t1391 * t1508;
t901 = -t1011 * t1391 + t1395 * t1510;
t898 = -t1005 * t1391 + t1395 * t1511;
t897 = t1005 * t1395 + t1391 * t1511;
t891 = t1003 * t1393 - t1389 * t935;
t890 = t1002 * t1393 - t1389 * t934;
t889 = -t1022 * t1389 + t1075 * t1393 + (-t1078 * t1391 - t1079 * t1395) * qJ(2);
t888 = -t1391 * t986 + t1395 * t1517;
t887 = -t1017 * t1389 + t1059 * t1393 + (-t1076 * t1391 - t1077 * t1395) * qJ(2);
t880 = -t1399 * t922 + t1403 * t979;
t879 = t1399 * t979 + t1403 * t922;
t878 = -t1389 * t919 + t1393 * t981;
t877 = -t1389 * t918 + t1393 * t980;
t873 = -t1399 * t912 + t1403 * t976;
t872 = t1399 * t976 + t1403 * t912;
t868 = t1390 * t1513 + t1394 * t948;
t863 = -pkin(1) * t1078 - t1021 * t1391 + t1395 * t1430;
t861 = t1390 * t1516 + t1394 * t957;
t859 = -pkin(1) * t1076 - t1016 * t1391 + t1395 * t1431;
t856 = -t1399 * t907 + t1403 * t964;
t855 = t1399 * t964 + t1403 * t907;
t844 = pkin(2) * t1056 + t1018 * t1394 + t1390 * t1448;
t842 = -t1389 * t991 + t1393 * t982 + (-t1036 * t1391 - t1037 * t1395) * qJ(2);
t839 = pkin(2) * t1047 + t1015 * t1394 + t1390 * t1449;
t837 = -t1399 * t898 + t1403 * t952;
t836 = t1399 * t952 + t1403 * t898;
t830 = -t1391 * t933 + t1395 * t1525;
t829 = -t1391 * t932 + t1395 * t1526;
t826 = t1390 * t1518 + t1394 * t924;
t825 = t1390 * t1519 + t1394 * t923;
t824 = -pkin(1) * t1036 - t1391 * t990 + t1395 * t1432;
t819 = -t1389 * t869 + t1393 * t936;
t816 = -t1391 * t917 + t1395 * t1532;
t815 = -t1391 * t916 + t1395 * t1533;
t813 = -t1389 * t862 + t1393 * t920;
t811 = -t1391 * t909 + t1395 * t1534;
t810 = t1391 * t1534 + t1395 * t909;
t805 = pkin(2) * t1006 + t1390 * t1428 + t1394 * t908;
t804 = -t1391 * t899 + t1395 * t1535;
t803 = t1391 * t1535 + t1395 * t899;
t800 = t1390 * t1521 + t1394 * t884;
t799 = t1390 * t1522 + t1394 * t883;
t796 = -t1389 * t828 + t1393 * t896;
t795 = -t1389 * t827 + t1393 * t895;
t792 = -t1389 * t965 + t1393 * t945 + (-t1391 * t906 - t1395 * t907) * qJ(2);
t791 = -pkin(1) * t906 - t1391 * t966 + t1395 * t1435;
t789 = t1390 * t1529 + t1394 * t870;
t788 = -t1391 * t868 + t1395 * t1536;
t783 = -t1391 * t864 + t1395 * t1537;
t782 = t1391 * t1537 + t1395 * t864;
t781 = -t1399 * t811 + t1403 * t867;
t780 = t1399 * t867 + t1403 * t811;
t779 = -t1391 * t861 + t1395 * t1538;
t776 = -t1391 * t850 + t1395 * t1539;
t775 = t1391 * t1539 + t1395 * t850;
t771 = -t1399 * t804 + t1403 * t847;
t770 = t1399 * t847 + t1403 * t804;
t767 = -t1389 * t802 + t1393 * t849;
t766 = -t1389 * t801 + t1393 * t848;
t762 = pkin(2) * t851 + t1390 * t1425 + t1394 * t914;
t761 = -t1389 * t845 + t1393 * t874 + (-t1391 * t921 - t1395 * t922) * qJ(2);
t754 = -t1389 * t840 + t1393 * t866 + (-t1391 * t911 - t1395 * t912) * qJ(2);
t752 = -t1391 * t826 + t1395 * t1540;
t751 = -t1391 * t825 + t1395 * t1541;
t749 = -t1389 * t790 + t1393 * t823;
t744 = -t1399 * t783 + t1403 * t814;
t743 = t1399 * t814 + t1403 * t783;
t742 = -pkin(1) * t921 - t1391 * t844 + t1395 * t1436;
t739 = pkin(2) * t910 + t1390 * t1452 + t1394 * t841;
t737 = -pkin(1) * t911 - t1391 * t839 + t1395 * t1437;
t736 = -t1399 * t776 + t1403 * t808;
t735 = t1399 * t808 + t1403 * t776;
t734 = -t1389 * t806 + t1393 * t831 + (-t1391 * t897 - t1395 * t898) * qJ(2);
t732 = pkin(2) * t900 + t1390 * t1453 + t1394 * t834;
t730 = -t1391 * t800 + t1395 * t1542;
t729 = -t1391 * t799 + t1395 * t1543;
t728 = -t1391 * t797 + t1395 * t1544;
t727 = t1391 * t1544 + t1395 * t797;
t726 = -t1391 * t793 + t1395 * t1545;
t725 = t1391 * t1545 + t1395 * t793;
t720 = -pkin(1) * t897 - t1391 * t805 + t1395 * t1438;
t719 = -t1391 * t789 + t1395 * t1546;
t717 = -t1391 * t784 + t1395 * t1547;
t716 = t1391 * t1547 + t1395 * t784;
t708 = -t1399 * t728 + t1403 * t760;
t707 = t1399 * t760 + t1403 * t728;
t705 = -t1399 * t726 + t1403 * t753;
t704 = t1399 * t753 + t1403 * t726;
t699 = pkin(2) * t865 + t1390 * t1454 + t1394 * t746;
t698 = -t1399 * t717 + t1403 * t745;
t697 = t1399 * t745 + t1403 * t717;
t696 = -t1389 * t740 + t1393 * t755 + (-t1391 * t810 - t1395 * t811) * qJ(2);
t694 = -t1389 * t763 + t1393 * t764 + (-t1391 * t775 - t1395 * t776) * qJ(2);
t693 = -t1389 * t733 + t1393 * t750 + (-t1391 * t803 - t1395 * t804) * qJ(2);
t691 = -pkin(1) * t775 - t1391 * t762 + t1395 * t1439;
t688 = -pkin(1) * t810 - t1391 * t739 + t1395 * t1440;
t687 = -t1391 * t722 + t1395 * t1548;
t686 = t1391 * t1548 + t1395 * t722;
t683 = -pkin(1) * t803 - t1391 * t732 + t1395 * t1441;
t680 = pkin(2) * t798 + t1390 * t1456 + t1394 * t711;
t678 = pkin(2) * t794 + t1390 * t1457 + t1394 * t710;
t676 = -t1389 * t700 + t1393 * t718 + (-t1391 * t782 - t1395 * t783) * qJ(2);
t675 = -t1399 * t687 + t1403 * t706;
t674 = t1399 * t706 + t1403 * t687;
t672 = pkin(2) * t723 + t1390 * t1455 + t1394 * t721;
t668 = pkin(2) * t785 + t1390 * t1458 + t1394 * t701;
t666 = -pkin(1) * t782 - t1391 * t699 + t1395 * t1442;
t665 = -t1391 * t684 + t1395 * t1549;
t664 = t1391 * t1549 + t1395 * t684;
t663 = -t1389 * t681 + t1393 * t690 + (-t1391 * t727 - t1395 * t728) * qJ(2);
t662 = -t1389 * t679 + t1393 * t689 + (-t1391 * t725 - t1395 * t726) * qJ(2);
t661 = -t1389 * t669 + t1393 * t682 + (-t1391 * t716 - t1395 * t717) * qJ(2);
t660 = -pkin(1) * t727 - t1391 * t680 + t1395 * t1443;
t659 = -pkin(1) * t725 - t1391 * t678 + t1395 * t1444;
t658 = -t1399 * t665 + t1403 * t671;
t657 = t1399 * t671 + t1403 * t665;
t655 = -t1389 * t673 + t1393 * t677 + (-t1391 * t686 - t1395 * t687) * qJ(2);
t654 = -pkin(1) * t716 - t1391 * t668 + t1395 * t1446;
t652 = pkin(2) * t685 + t1390 * t1459 + t1394 * t667;
t651 = -pkin(1) * t686 - t1391 * t672 + t1395 * t1445;
t650 = -t1389 * t653 + t1393 * t656 + (-t1391 * t664 - t1395 * t665) * qJ(2);
t649 = -pkin(1) * t664 - t1391 * t652 + t1395 * t1447;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1373, -t1374, 0, t1343, 0, 0, 0, 0, 0, 0, t1275, t1276, t1270, t1175, 0, 0, 0, 0, 0, 0, t997, t999, t975, t856, 0, 0, 0, 0, 0, 0, t873, t880, t837, t736, 0, 0, 0, 0, 0, 0, t771, t781, t744, t675, 0, 0, 0, 0, 0, 0, t705, t708, t698, t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1374, -t1373, 0, t1342, 0, 0, 0, 0, 0, 0, t1273, t1274, t1269, t1174, 0, 0, 0, 0, 0, 0, t996, t998, t974, t855, 0, 0, 0, 0, 0, 0, t872, t879, t836, t735, 0, 0, 0, 0, 0, 0, t770, t780, t743, t674, 0, 0, 0, 0, 0, 0, t704, t707, t697, t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1304, t1305, t1298, t1232, 0, 0, 0, 0, 0, 0, t1076, t1078, t1036, t906, 0, 0, 0, 0, 0, 0, t911, t921, t897, t775, 0, 0, 0, 0, 0, 0, t803, t810, t782, t686, 0, 0, 0, 0, 0, 0, t725, t727, t716, t664; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1374, 0, -t1373, 0, t1554, -t1360, -t1342, -pkin(8) * t1342, -t1399 * t1335 + t1348 * t1403, -t1399 * t1300 + t1324 * t1403, -t1399 * t1308 + t1329 * t1403, -t1399 * t1334 + t1347 * t1403, -t1399 * t1306 + t1327 * t1403, t1349 * t1403 + t1399 * t1565, -pkin(8) * t1273 - t1399 * t1214 + t1230 * t1403, -pkin(8) * t1274 - t1399 * t1213 + t1231 * t1403, -pkin(8) * t1269 + t1189 * t1403 - t1399 * t1199, -pkin(8) * t1174 + t1154 * t1403 - t1399 * t1176, -t1399 * t1107 + t1153 * t1403, -t1399 * t1054 + t1102 * t1403, -t1399 * t1083 + t1139 * t1403, -t1399 * t1106 + t1152 * t1403, -t1399 * t1084 + t1140 * t1403, -t1399 * t1142 + t1191 * t1403, -pkin(8) * t996 - t1399 * t859 + t1403 * t887, -pkin(8) * t998 - t1399 * t863 + t1403 * t889, -pkin(8) * t974 - t1399 * t824 + t1403 * t842, -pkin(8) * t855 - t1399 * t791 + t1403 * t792, t1026 * t1403 - t1399 * t973, -t1399 * t901 + t1403 * t963, -t1399 * t928 + t1403 * t988, t1025 * t1403 - t1399 * t972, -t1399 * t929 + t1403 * t989, -t1399 * t1004 + t1080 * t1403, -pkin(8) * t872 - t1399 * t737 + t1403 * t754, -pkin(8) * t879 - t1399 * t742 + t1403 * t761, -pkin(8) * t836 - t1399 * t720 + t1403 * t734, -pkin(8) * t735 - t1399 * t691 + t1403 * t694, -t1399 * t830 + t1403 * t891, -t1399 * t788 + t1403 * t819, -t1399 * t815 + t1403 * t877, -t1399 * t829 + t1403 * t890, -t1399 * t816 + t1403 * t878, -t1399 * t888 + t1403 * t937, -pkin(8) * t770 - t1399 * t683 + t1403 * t693, -pkin(8) * t780 - t1399 * t688 + t1403 * t696, -pkin(8) * t743 - t1399 * t666 + t1403 * t676, -pkin(8) * t674 - t1399 * t651 + t1403 * t655, -t1399 * t752 + t1403 * t796, -t1399 * t719 + t1403 * t749, -t1399 * t729 + t1403 * t766, -t1399 * t751 + t1403 * t795, -t1399 * t730 + t1403 * t767, -t1399 * t779 + t1403 * t813, -pkin(8) * t704 - t1399 * t659 + t1403 * t662, -pkin(8) * t707 - t1399 * t660 + t1403 * t663, -pkin(8) * t697 - t1399 * t654 + t1403 * t661, -pkin(8) * t657 - t1399 * t649 + t1403 * t650; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1373, 0, t1374, 0, t1360, t1554, t1343, pkin(8) * t1343, t1335 * t1403 + t1399 * t1348, t1300 * t1403 + t1399 * t1324, t1308 * t1403 + t1399 * t1329, t1334 * t1403 + t1399 * t1347, t1306 * t1403 + t1399 * t1327, t1399 * t1349 - t1403 * t1565, pkin(8) * t1275 + t1214 * t1403 + t1399 * t1230, pkin(8) * t1276 + t1213 * t1403 + t1399 * t1231, pkin(8) * t1270 + t1399 * t1189 + t1199 * t1403, pkin(8) * t1175 + t1399 * t1154 + t1176 * t1403, t1107 * t1403 + t1399 * t1153, t1054 * t1403 + t1399 * t1102, t1083 * t1403 + t1399 * t1139, t1106 * t1403 + t1399 * t1152, t1084 * t1403 + t1399 * t1140, t1142 * t1403 + t1399 * t1191, pkin(8) * t997 + t1399 * t887 + t1403 * t859, pkin(8) * t999 + t1399 * t889 + t1403 * t863, pkin(8) * t975 + t1399 * t842 + t1403 * t824, pkin(8) * t856 + t1399 * t792 + t1403 * t791, t1399 * t1026 + t1403 * t973, t1399 * t963 + t1403 * t901, t1399 * t988 + t1403 * t928, t1399 * t1025 + t1403 * t972, t1399 * t989 + t1403 * t929, t1004 * t1403 + t1399 * t1080, pkin(8) * t873 + t1399 * t754 + t1403 * t737, pkin(8) * t880 + t1399 * t761 + t1403 * t742, pkin(8) * t837 + t1399 * t734 + t1403 * t720, pkin(8) * t736 + t1399 * t694 + t1403 * t691, t1399 * t891 + t1403 * t830, t1399 * t819 + t1403 * t788, t1399 * t877 + t1403 * t815, t1399 * t890 + t1403 * t829, t1399 * t878 + t1403 * t816, t1399 * t937 + t1403 * t888, pkin(8) * t771 + t1399 * t693 + t1403 * t683, pkin(8) * t781 + t1399 * t696 + t1403 * t688, pkin(8) * t744 + t1399 * t676 + t1403 * t666, pkin(8) * t675 + t1399 * t655 + t1403 * t651, t1399 * t796 + t1403 * t752, t1399 * t749 + t1403 * t719, t1399 * t766 + t1403 * t729, t1399 * t795 + t1403 * t751, t1399 * t767 + t1403 * t730, t1399 * t813 + t1403 * t779, pkin(8) * t705 + t1399 * t662 + t1403 * t659, pkin(8) * t708 + t1399 * t663 + t1403 * t660, pkin(8) * t698 + t1399 * t661 + t1403 * t654, pkin(8) * t658 + t1399 * t650 + t1403 * t649; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1376, t1377, 0, 0, t1383 * t1589, t1358 * t1395 + t1391 * t1475, t1353 * t1395 + t1391 * t1473, t1386 * t1589, t1354 * t1395 + t1391 * t1470, t1387 * qJDD(1), pkin(1) * t1307 - t1315 * t1395 + t1391 * t1528, pkin(1) * t1309 - t1316 * t1395 + t1391 * t1527, pkin(1) * t1299 + t1391 * t1429, pkin(1) * t1233 + t1254 * t1650, t1211 * t1395 + t1391 * t1484, t1159 * t1395 + t1391 * t1493, t1185 * t1395 + t1391 * t1487, t1209 * t1395 + t1391 * t1485, t1186 * t1395 + t1391 * t1486, t1245 * t1395 + t1391 * t1483, pkin(1) * t1077 + t1016 * t1395 + t1391 * t1431, pkin(1) * t1079 + t1021 * t1395 + t1391 * t1430, pkin(1) * t1037 + t1391 * t1432 + t1395 * t990, pkin(1) * t907 + t1391 * t1435 + t1395 * t966, t1092 * t1395 + t1391 * t1500, t1011 * t1395 + t1391 * t1510, t1070 * t1395 + t1391 * t1503, t1091 * t1395 + t1391 * t1501, t1071 * t1395 + t1391 * t1502, t1135 * t1395 + t1391 * t1497, pkin(1) * t912 + t1391 * t1437 + t1395 * t839, pkin(1) * t922 + t1391 * t1436 + t1395 * t844, pkin(1) * t898 + t1391 * t1438 + t1395 * t805, pkin(1) * t776 + t1391 * t1439 + t1395 * t762, t1391 * t1525 + t1395 * t933, t1391 * t1536 + t1395 * t868, t1391 * t1533 + t1395 * t916, t1391 * t1526 + t1395 * t932, t1391 * t1532 + t1395 * t917, t1391 * t1517 + t1395 * t986, pkin(1) * t804 + t1391 * t1441 + t1395 * t732, pkin(1) * t811 + t1391 * t1440 + t1395 * t739, pkin(1) * t783 + t1391 * t1442 + t1395 * t699, pkin(1) * t687 + t1391 * t1445 + t1395 * t672, t1391 * t1540 + t1395 * t826, t1391 * t1546 + t1395 * t789, t1391 * t1543 + t1395 * t799, t1391 * t1541 + t1395 * t825, t1391 * t1542 + t1395 * t800, t1391 * t1538 + t1395 * t861, pkin(1) * t726 + t1391 * t1444 + t1395 * t678, pkin(1) * t728 + t1391 * t1443 + t1395 * t680, pkin(1) * t717 + t1391 * t1446 + t1395 * t668, pkin(1) * t665 + t1391 * t1447 + t1395 * t652;];
tauB_reg  = t1;
