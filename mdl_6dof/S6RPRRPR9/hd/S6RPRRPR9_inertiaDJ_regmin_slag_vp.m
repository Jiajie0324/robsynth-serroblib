% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR9_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR9_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR9_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRPR9_inertiaDJ_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:31:34
% EndTime: 2019-03-09 05:31:45
% DurationCPUTime: 3.85s
% Computational Cost: add. (8718->317), mult. (25564->606), div. (0->0), fcn. (27594->14), ass. (0->173)
t132 = sin(qJ(4));
t126 = sin(pkin(12));
t128 = sin(pkin(6));
t129 = cos(pkin(12));
t133 = sin(qJ(3));
t136 = cos(qJ(3));
t127 = sin(pkin(7));
t202 = cos(pkin(6));
t166 = t202 * t127;
t130 = cos(pkin(7));
t191 = t130 * t136;
t223 = (-t126 * t133 + t129 * t191) * t128 + t136 * t166;
t79 = t223 * qJD(3);
t224 = t132 * t79;
t125 = sin(pkin(13));
t201 = cos(pkin(13));
t135 = cos(qJ(4));
t192 = t129 * t133;
t86 = t133 * t166 + (t126 * t136 + t130 * t192) * t128;
t193 = t128 * t129;
t97 = t127 * t193 - t130 * t202;
t65 = -t132 * t97 + t135 * t86;
t52 = t65 * qJD(4) + t224;
t64 = t132 * t86 + t135 * t97;
t53 = -t64 * qJD(4) + t135 * t79;
t30 = t125 * t53 + t201 * t52;
t31 = -t125 * t52 + t201 * t53;
t221 = t30 * pkin(5) - t31 * pkin(11);
t80 = t86 * qJD(3);
t220 = 0.2e1 * t80;
t219 = 2 * qJD(6);
t216 = t52 * pkin(4);
t131 = sin(qJ(6));
t175 = pkin(1) * t202;
t115 = t129 * t175;
t197 = t126 * t128;
t87 = t202 * pkin(2) + t115 + (-pkin(9) * t130 - qJ(2)) * t197;
t93 = (-pkin(9) * t126 * t127 - pkin(2) * t129 - pkin(1)) * t128;
t62 = -t127 * t87 + t130 * t93;
t45 = -pkin(3) * t223 - pkin(10) * t86 + t62;
t211 = t130 * t87;
t156 = t127 * t93 + t211;
t189 = qJ(2) * t193 + t126 * t175;
t83 = (t130 * t193 + t166) * pkin(9) + t189;
t139 = t133 * t156 + t136 * t83;
t48 = -t97 * pkin(10) + t139;
t212 = t132 * t45 + t135 * t48;
t187 = qJD(2) * t128;
t174 = t126 * t187;
t159 = t130 * t174;
t185 = qJD(3) * t136;
t170 = t127 * t185;
t173 = t129 * t187;
t40 = -t136 * t173 - t185 * t211 - t93 * t170 + (qJD(3) * t83 + t159) * t133;
t160 = t127 * t174;
t56 = pkin(3) * t80 - pkin(10) * t79 + t160;
t19 = -qJD(4) * t212 + t132 * t40 + t135 * t56;
t12 = pkin(4) * t80 - qJ(5) * t53 - qJD(5) * t65 + t19;
t183 = qJD(4) * t135;
t184 = qJD(4) * t132;
t18 = -t132 * t56 + t135 * t40 - t45 * t183 + t184 * t48;
t16 = -qJ(5) * t52 - qJD(5) * t64 - t18;
t5 = t12 * t201 - t125 * t16;
t4 = -t80 * pkin(5) - t5;
t215 = t131 * t4;
t134 = cos(qJ(6));
t214 = t134 * t4;
t213 = -qJ(5) - pkin(10);
t6 = t125 * t12 + t201 * t16;
t168 = -t132 * t48 + t135 * t45;
t25 = -pkin(4) * t223 - qJ(5) * t65 + t168;
t28 = -qJ(5) * t64 + t212;
t14 = t125 * t25 + t201 * t28;
t50 = -t125 * t64 + t201 * t65;
t35 = t131 * t50 + t134 * t223;
t22 = -qJD(6) * t35 + t131 * t80 + t134 * t31;
t210 = t131 * t22;
t167 = qJD(4) * t213;
t140 = -qJD(5) * t132 + t135 * t167;
t96 = qJD(5) * t135 + t132 * t167;
t70 = t125 * t96 - t140 * t201;
t209 = t131 * t70;
t165 = t201 * t132;
t103 = t125 * t135 + t165;
t98 = t103 * qJD(4);
t208 = t131 * t98;
t164 = t201 * t135;
t99 = qJD(4) * t164 - t125 * t184;
t207 = t131 * t99;
t206 = t134 * t22;
t205 = t134 * t70;
t204 = t134 * t98;
t203 = t134 * t99;
t118 = pkin(4) * t125 + pkin(11);
t200 = t118 * t131;
t199 = t118 * t134;
t198 = t125 * t132;
t195 = t127 * t133;
t194 = t127 * t136;
t190 = t131 * t134;
t124 = t134 ^ 2;
t188 = t131 ^ 2 - t124;
t186 = qJD(3) * t133;
t182 = qJD(4) * t136;
t181 = qJD(6) * t131;
t180 = qJD(6) * t134;
t179 = -0.2e1 * pkin(3) * qJD(4);
t119 = -pkin(4) * t201 - pkin(5);
t178 = t119 * t219;
t121 = pkin(4) * t184;
t177 = t132 * t195;
t120 = -pkin(4) * t135 - pkin(3);
t172 = t132 * t182;
t171 = t127 * t186;
t169 = t131 * t180;
t163 = -0.4e1 * t103 * t190;
t162 = t188 * qJD(6);
t161 = pkin(11) * t80 + t6;
t10 = -pkin(11) * t223 + t14;
t47 = t97 * pkin(3) + t133 * t83 - t136 * t156;
t32 = t64 * pkin(4) + t47;
t49 = t125 * t65 + t201 * t64;
t21 = t49 * pkin(5) - t50 * pkin(11) + t32;
t8 = t134 * t10 + t131 * t21;
t157 = -t118 * t98 + t119 * t99;
t36 = -t131 * t223 + t134 * t50;
t155 = -t131 * t36 - t134 * t35;
t102 = -t164 + t198;
t81 = pkin(5) * t102 - pkin(11) * t103 + t120;
t109 = t213 * t135;
t91 = -t109 * t201 + t198 * t213;
t58 = t131 * t81 + t134 * t91;
t154 = -0.2e1 * t202 * t187;
t153 = t102 * t118 - t103 * t119;
t152 = pkin(5) * t98 - pkin(11) * t99 + t121;
t151 = t132 * t80 - t183 * t223;
t150 = -t135 * t80 - t184 * t223;
t149 = t131 * t30 + t180 * t49;
t26 = t134 * t30 - t181 * t49;
t100 = t130 * t132 + t135 * t195;
t137 = -qJD(4) * t100 - t132 * t170;
t89 = qJD(4) * t177 - t130 * t183 - t135 * t170;
t60 = -t125 * t89 - t137 * t201;
t141 = t130 * t135 - t177;
t73 = t100 * t125 - t141 * t201;
t148 = t131 * t60 + t180 * t73;
t147 = -t134 * t60 + t181 * t73;
t74 = t100 * t201 + t125 * t141;
t146 = t131 * t74 + t134 * t194;
t145 = t131 * t194 - t134 * t74;
t144 = t102 * t180 + t208;
t143 = -t180 * t103 - t207;
t142 = -t181 * t103 + t203;
t13 = -t125 * t28 + t201 * t25;
t138 = t139 * qJD(3);
t41 = (t126 * t191 + t192) * t187 + t138;
t29 = t41 + t216;
t101 = t103 ^ 2;
t90 = -t109 * t125 - t165 * t213;
t77 = -t102 * t181 + t204;
t71 = t125 * t140 + t201 * t96;
t61 = t125 * t137 - t201 * t89;
t57 = -t131 * t91 + t134 * t81;
t39 = qJD(6) * t145 - t131 * t61 + t134 * t171;
t38 = qJD(6) * t146 - t131 * t171 - t134 * t61;
t34 = -qJD(6) * t58 - t131 * t71 + t134 * t152;
t33 = -t131 * t152 - t134 * t71 - t180 * t81 + t181 * t91;
t23 = qJD(6) * t36 + t131 * t31 - t80 * t134;
t9 = pkin(5) * t223 - t13;
t7 = -t10 * t131 + t134 * t21;
t2 = -t8 * qJD(6) - t131 * t161 + (t133 * t173 + t136 * t159 + t138 + t216 + t221) * t134;
t1 = t10 * t181 - t131 * (t29 + t221) - t21 * t180 - t134 * t161;
t3 = [0, 0, 0, t126 * t154, t129 * t154, 0.2e1 * (t126 ^ 2 + t129 ^ 2) * t128 ^ 2 * qJD(2), 0.2e1 * (t189 * t129 + (qJ(2) * t197 - t115) * t126) * t187, 0.2e1 * t86 * t79, 0.2e1 * t223 * t79 - 0.2e1 * t80 * t86, -0.2e1 * t79 * t97, t97 * t220, 0, -0.2e1 * t160 * t223 + 0.2e1 * t41 * t97 + 0.2e1 * t62 * t80, 0.2e1 * t160 * t86 - 0.2e1 * t40 * t97 + 0.2e1 * t62 * t79, 0.2e1 * t65 * t53, -0.2e1 * t52 * t65 - 0.2e1 * t53 * t64, -0.2e1 * t223 * t53 + 0.2e1 * t65 * t80, 0.2e1 * t223 * t52 - 0.2e1 * t64 * t80, -t223 * t220, 0.2e1 * t168 * t80 - 0.2e1 * t19 * t223 + 0.2e1 * t41 * t64 + 0.2e1 * t47 * t52, -0.2e1 * t18 * t223 - 0.2e1 * t212 * t80 + 0.2e1 * t41 * t65 + 0.2e1 * t47 * t53, -0.2e1 * t13 * t31 - 0.2e1 * t14 * t30 - 0.2e1 * t49 * t6 - 0.2e1 * t5 * t50, 0.2e1 * t13 * t5 + 0.2e1 * t14 * t6 + 0.2e1 * t29 * t32, 0.2e1 * t36 * t22, -0.2e1 * t22 * t35 - 0.2e1 * t23 * t36, 0.2e1 * t22 * t49 + 0.2e1 * t30 * t36, -0.2e1 * t23 * t49 - 0.2e1 * t30 * t35, 0.2e1 * t49 * t30, 0.2e1 * t2 * t49 + 0.2e1 * t23 * t9 + 0.2e1 * t30 * t7 + 0.2e1 * t35 * t4, 0.2e1 * t1 * t49 + 0.2e1 * t22 * t9 - 0.2e1 * t30 * t8 + 0.2e1 * t36 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130 * t80 + t171 * t97, t130 * t79 + t170 * t97, 0, 0, 0, 0, 0, -t150 * t130 + ((-t52 + t224) * t136 + (qJD(3) * t64 - t151) * t133) * t127, -t100 * t80 - t89 * t223 + (-t136 * t53 + t186 * t65) * t127, -t30 * t74 + t31 * t73 - t49 * t61 + t50 * t60, -t13 * t60 + t14 * t61 - t5 * t73 + t6 * t74 + (-t136 * t29 + t186 * t32) * t127, 0, 0, 0, 0, 0, -t146 * t30 + t23 * t73 + t35 * t60 + t39 * t49, t145 * t30 + t22 * t73 + t36 * t60 + t38 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t127 ^ 2 * t133 * t185 + 0.2e1 * t73 * t60 + 0.2e1 * t74 * t61, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, -t80, 0, -t41, t40, t132 * t53 + t183 * t65, -t132 * t52 + t135 * t53 + (-t132 * t65 - t135 * t64) * qJD(4), t151, -t150, 0, -pkin(3) * t52 - pkin(10) * t151 - t135 * t41 + t184 * t47, -pkin(3) * t53 + pkin(10) * t150 + t132 * t41 + t183 * t47, -t102 * t6 - t103 * t5 - t13 * t99 - t14 * t98 - t30 * t91 + t31 * t90 - t49 * t71 + t50 * t70, t120 * t29 + t121 * t32 - t13 * t70 + t14 * t71 - t5 * t90 + t6 * t91, t36 * t203 + (-t181 * t36 + t206) * t103, t155 * t99 + (-t210 - t134 * t23 + (t131 * t35 - t134 * t36) * qJD(6)) * t103, t102 * t22 + t103 * t26 + t203 * t49 + t36 * t98, -t102 * t23 - t103 * t149 - t207 * t49 - t35 * t98, t102 * t30 + t49 * t98, t9 * t207 + t102 * t2 + t23 * t90 + t30 * t57 + t34 * t49 + t35 * t70 + t7 * t98 + (t180 * t9 + t215) * t103, t9 * t203 + t1 * t102 + t22 * t90 - t30 * t58 + t33 * t49 + t36 * t70 - t8 * t98 + (-t181 * t9 + t214) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, -t170, 0, 0, 0, 0, 0 (-t135 * t186 - t172) * t127 (t132 * t186 - t135 * t182) * t127, -t102 * t61 + t103 * t60 + t73 * t99 - t74 * t98, t60 * t90 + t61 * t91 + t73 * t70 + t74 * t71 + (-pkin(4) * t172 + t120 * t186) * t127, 0, 0, 0, 0, 0, t102 * t39 + t103 * t148 - t146 * t98 + t207 * t73, t102 * t38 - t103 * t147 + t145 * t98 + t203 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t132 * t183, 0.2e1 * (-t132 ^ 2 + t135 ^ 2) * qJD(4), 0, 0, 0, t132 * t179, t135 * t179, -0.2e1 * t102 * t71 + 0.2e1 * t103 * t70 + 0.2e1 * t90 * t99 - 0.2e1 * t91 * t98, 0.2e1 * t120 * t121 + 0.2e1 * t70 * t90 + 0.2e1 * t71 * t91, 0.2e1 * t103 * t124 * t99 - 0.2e1 * t101 * t169, t101 * t188 * t219 + t163 * t99, 0.2e1 * t102 * t142 + 0.2e1 * t103 * t204, 0.2e1 * t102 * t143 - 0.2e1 * t103 * t208, 0.2e1 * t102 * t98, 0.2e1 * t90 * t207 + 0.2e1 * t102 * t34 + 0.2e1 * t57 * t98 + 0.2e1 * (t180 * t90 + t209) * t103, 0.2e1 * t90 * t203 + 0.2e1 * t102 * t33 - 0.2e1 * t58 * t98 + 0.2e1 * (-t90 * t181 + t205) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t52, t80, t19, t18 (-t125 * t30 - t201 * t31) * pkin(4) (t125 * t6 + t201 * t5) * pkin(4), t180 * t36 + t210, qJD(6) * t155 - t131 * t23 + t206, t149, t26, 0, -t30 * t200 + t119 * t23 - t214 + (t131 * t9 - t199 * t49) * qJD(6), -t30 * t199 + t119 * t22 + t215 + (t134 * t9 + t200 * t49) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t89, 0 (t125 * t61 - t201 * t60) * pkin(4), 0, 0, 0, 0, 0, t147, t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, -t184, 0, -pkin(10) * t183, pkin(10) * t184 (-t125 * t98 - t201 * t99) * pkin(4) (t125 * t71 - t201 * t70) * pkin(4), -t103 * t162 + t190 * t99, qJD(6) * t163 - t188 * t99, t144, t77, 0, -t205 + t157 * t131 + (t131 * t90 - t134 * t153) * qJD(6), t209 + t157 * t134 + (t131 * t153 + t134 * t90) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t169, -0.2e1 * t162, 0, 0, 0, t131 * t178, t134 * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, 0, 0, 0, 0, t26, -t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, 0, 0, 0, 0, 0, t77, -t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t23, t30, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t143, t98, t34, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t181, 0, -t118 * t180, t118 * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, -t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
