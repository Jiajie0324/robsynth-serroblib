% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR12_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:52:58
% EndTime: 2019-03-09 05:53:21
% DurationCPUTime: 9.54s
% Computational Cost: add. (22816->599), mult. (75280->808), div. (0->0), fcn. (64015->12), ass. (0->277)
t214 = sin(pkin(6));
t213 = sin(pkin(12));
t215 = cos(pkin(12));
t218 = sin(qJ(3));
t360 = cos(pkin(7));
t317 = t218 * t360;
t383 = cos(qJ(3));
t253 = t213 * t317 - t215 * t383;
t246 = t214 * t253;
t173 = qJD(1) * t246;
t359 = sin(pkin(7));
t294 = t359 * t383;
t392 = -qJD(3) * t294 - t173;
t361 = cos(pkin(6));
t283 = t361 * t359;
t295 = t360 * t383;
t345 = t214 * t215;
t233 = t383 * t283 + t295 * t345;
t336 = qJD(1) * t214;
t321 = t213 * t336;
t153 = -qJD(1) * t233 + t218 * t321;
t149 = qJD(4) + t153;
t217 = sin(qJ(4));
t334 = qJD(4) * t217;
t348 = t153 * t217;
t203 = qJ(2) * t345;
t310 = qJD(1) * t361;
t298 = pkin(1) * t310;
t179 = qJD(1) * t203 + t213 * t298;
t240 = (t345 * t360 + t283) * pkin(9);
t144 = qJD(1) * t240 + t179;
t202 = t215 * t298;
t346 = t213 * t214;
t241 = t361 * pkin(2) + (-pkin(9) * t360 - qJ(2)) * t346;
t151 = qJD(1) * t241 + t202;
t175 = (-pkin(9) * t213 * t359 - pkin(2) * t215 - pkin(1)) * t214;
t167 = qJD(1) * t175 + qJD(2);
t91 = t218 * (t151 * t360 + t167 * t359) + t383 * t144;
t408 = -t217 * qJD(5) - t91 + (t334 + t348) * pkin(4);
t220 = cos(qJ(4));
t357 = qJ(5) * t220;
t407 = t408 + t149 * (pkin(11) * t217 - t357);
t160 = t214 * (t213 * t383 + t215 * t317) + t218 * t283;
t157 = t160 * qJD(1);
t116 = pkin(3) * t157 + pkin(10) * t153;
t384 = pkin(5) + pkin(10);
t200 = t384 * t220;
t385 = pkin(4) + pkin(11);
t393 = -t218 * t144 + t151 * t295 + t167 * t294;
t86 = t217 * t393;
t406 = qJD(4) * t200 - t86 - (-pkin(5) * t153 - t116) * t220 + t385 * t157;
t123 = -t151 * t359 + t167 * t360;
t237 = t153 * pkin(3) - t157 * pkin(10) + t123;
t243 = qJD(2) * t246;
t64 = -qJD(1) * t243 + qJD(3) * t393;
t405 = qJD(4) * t237 + t64;
t284 = t361 * t360;
t309 = qJD(1) * t359;
t293 = t214 * t309;
t192 = t215 * t293;
t327 = qJD(3) - t192;
t250 = -qJD(1) * t284 - t327;
t73 = -pkin(10) * t250 + t91;
t40 = t217 * t73 - t220 * t237;
t343 = qJD(5) + t40;
t316 = t218 * t359;
t183 = t217 * t360 + t220 * t316;
t274 = t213 * t293;
t340 = -qJD(4) * t183 + t217 * t392 - t220 * t274;
t324 = t218 * t346;
t299 = qJD(3) * t324;
t189 = qJD(1) * t299;
t230 = t233 * qJD(3);
t404 = -qJD(1) * t230 + t189;
t403 = qJD(4) * t250 + t404;
t251 = t213 * t295 + t215 * t218;
t245 = t214 * t251;
t172 = qJD(1) * t245;
t267 = qJD(3) * t316 - t172;
t156 = t160 * qJD(3);
t142 = qJD(1) * t156;
t308 = qJD(2) * t359;
t273 = t308 * t346;
t262 = qJD(1) * t273;
t108 = t142 * pkin(3) + pkin(10) * t404 + t262;
t332 = qJD(4) * t220;
t305 = -t220 * t108 + t217 * t405 + t73 * t332;
t41 = t217 * t237 + t220 * t73;
t269 = t149 * t41 - t305;
t306 = -t217 * t108 - t220 * t405 + t73 * t334;
t402 = t149 * t40 - t306;
t323 = pkin(1) * t361;
t338 = t213 * t323 + t203;
t158 = t240 + t338;
t206 = t215 * t323;
t161 = t206 + t241;
t102 = t383 * t158 + (t360 * t161 + t359 * t175) * t218;
t216 = sin(qJ(6));
t219 = cos(qJ(6));
t129 = t220 * t157 - t217 * t250;
t242 = qJD(2) * t245;
t65 = qJD(1) * t242 + qJD(3) * t91;
t96 = t157 * t334 + t220 * t403;
t224 = t96 * qJ(5) - t129 * qJD(5) + t65;
t97 = t157 * t332 - t217 * t403;
t23 = t385 * t97 + t224;
t344 = t129 * pkin(5) + t343;
t28 = -t149 * t385 + t344;
t127 = t157 * t217 + t220 * t250;
t72 = pkin(3) * t250 - t393;
t226 = -t129 * qJ(5) + t72;
t36 = t127 * t385 + t226;
t281 = t216 * t36 - t219 * t28;
t8 = -t96 * pkin(5) - t142 * t385 + t305;
t1 = -qJD(6) * t281 + t216 * t8 + t219 * t23;
t126 = qJD(6) + t129;
t401 = t126 * t281 + t1;
t6 = t216 * t28 + t219 * t36;
t2 = -qJD(6) * t6 - t216 * t23 + t219 * t8;
t400 = t6 * t126 + t2;
t382 = pkin(4) * t142;
t15 = t305 - t382;
t38 = -t149 * qJ(5) - t41;
t399 = t149 * t38 + t15;
t98 = -t219 * t127 + t149 * t216;
t307 = t126 * t98;
t330 = qJD(6) * t219;
t331 = qJD(6) * t216;
t47 = -t127 * t330 - t219 * t142 + t149 * t331 - t216 * t97;
t398 = t47 - t307;
t100 = t127 * t216 + t149 * t219;
t356 = t100 * t126;
t48 = qJD(6) * t100 + t216 * t142 - t219 * t97;
t397 = -t48 + t356;
t155 = t299 - t230;
t181 = t345 * t359 - t284;
t107 = -t160 * t334 + (-qJD(4) * t181 - t155) * t220;
t134 = t160 * t220 - t181 * t217;
t61 = t96 * t134;
t396 = t107 * t129 - t61;
t302 = t149 * t220;
t95 = t96 * t217;
t395 = t129 * t302 - t95;
t394 = t214 ^ 2 * (t213 ^ 2 + t215 ^ 2);
t101 = -t218 * t158 + t161 * t295 + t175 * t294;
t182 = t217 * t316 - t220 * t360;
t380 = t127 * pkin(5);
t30 = -t38 - t380;
t390 = t126 * t30 + t385 * t96;
t389 = t127 * t267 - t182 * t142 + t149 * t340 - t294 * t97;
t339 = t182 * qJD(4) + t217 * t274 + t220 * t392;
t388 = t129 * t267 - t183 * t142 + t149 * t339 + t294 * t96;
t387 = t129 ^ 2;
t386 = t149 ^ 2;
t381 = pkin(10) * t142;
t140 = t142 * qJ(5);
t14 = -t149 * qJD(5) - t140 + t306;
t9 = -pkin(5) * t97 - t14;
t377 = t9 * t216;
t376 = t9 * t219;
t131 = -t161 * t359 + t360 * t175;
t159 = -t233 + t324;
t82 = t159 * pkin(3) - t160 * pkin(10) + t131;
t89 = -pkin(10) * t181 + t102;
t50 = t217 * t82 + t220 * t89;
t375 = t100 * t98;
t46 = t127 * pkin(4) + t226;
t374 = t129 * t46;
t370 = t149 * t98;
t369 = t216 * t96;
t368 = t219 * t47;
t93 = t219 * t96;
t366 = t48 * t216;
t318 = -t217 * qJ(5) - pkin(3);
t184 = -t220 * t385 + t318;
t199 = t384 * t217;
t162 = -t184 * t216 + t199 * t219;
t365 = qJD(6) * t162 + t406 * t216 + t219 * t407;
t163 = t184 * t219 + t199 * t216;
t364 = -qJD(6) * t163 - t216 * t407 + t406 * t219;
t363 = -qJ(5) * t332 - t153 * t357 + t408;
t58 = t217 * t116 + t220 * t393;
t51 = -qJ(5) * t157 - t58;
t362 = -pkin(5) * t348 - t384 * t334 + t51;
t358 = qJ(5) * t127;
t354 = t127 * t129;
t353 = t127 * t149;
t352 = t129 * t149;
t351 = t142 * t159;
t350 = t149 * t100;
t349 = t149 * t157;
t347 = t157 * t153;
t254 = -t216 * t182 + t219 * t294;
t342 = -qJD(6) * t254 + t216 * t267 + t219 * t340;
t168 = t219 * t182 + t216 * t294;
t341 = -qJD(6) * t168 + t216 * t340 - t219 * t267;
t335 = qJD(2) * t214;
t333 = qJD(4) * t219;
t329 = qJD(6) * t220;
t328 = qJD(6) * t385;
t326 = pkin(10) * t334;
t325 = pkin(10) * t332;
t320 = t213 * t335;
t319 = -t127 ^ 2 + t387;
t49 = -t217 * t89 + t220 * t82;
t313 = t359 * t123;
t57 = t220 * t116 - t86;
t303 = t149 * t217;
t301 = t126 * t216;
t43 = -qJ(5) * t159 - t50;
t222 = qJD(1) ^ 2;
t297 = t214 * t222 * t361;
t291 = t216 * t281 + t219 * t6;
t113 = t157 * t216 + t219 * t348;
t289 = t217 * t333 + t113;
t114 = t157 * t219 - t216 * t348;
t288 = t216 * t334 - t114;
t286 = (qJD(4) * t127 - t96) * pkin(10);
t285 = (qJD(4) * t129 - t97) * pkin(10);
t32 = t134 * pkin(5) - t159 * t385 - t49;
t133 = t160 * t217 + t181 * t220;
t88 = t181 * pkin(3) - t101;
t229 = -t134 * qJ(5) + t88;
t42 = t133 * t385 + t229;
t10 = -t216 * t42 + t219 * t32;
t11 = t216 * t32 + t219 * t42;
t106 = qJD(4) * t134 - t155 * t217;
t280 = t106 * t127 + t133 * t97;
t279 = -t157 * t127 - t220 * t142;
t278 = -t129 * t157 + t217 * t142;
t277 = t133 * t219 - t159 * t216;
t110 = t133 * t216 + t159 * t219;
t276 = (-qJ(2) * t321 + t202) * t213 - t179 * t215;
t112 = t156 * pkin(3) + t155 * pkin(10) + t273;
t76 = qJD(3) * t101 - t243;
t27 = t220 * t112 - t217 * t76 - t89 * t332 - t82 * t334;
t275 = t65 * t294;
t268 = -t126 * t301 - t93;
t266 = -0.2e1 * t310 * t335;
t26 = t217 * t112 + t220 * t76 + t82 * t332 - t334 * t89;
t265 = t149 * t72 - t381;
t264 = -t149 * t46 + t381;
t260 = -t126 ^ 2 * t219 + t369;
t259 = t127 * t303 - t97 * t220;
t257 = t96 - t353;
t249 = -t106 * t129 - t107 * t127 + t133 * t96 - t134 * t97;
t248 = t106 * t149 + t127 * t156 + t133 * t142 + t159 * t97;
t247 = t107 * t149 + t129 * t156 + t134 * t142 - t159 * t96;
t20 = -qJ(5) * t156 - qJD(5) * t159 - t26;
t236 = t127 * t339 - t129 * t340 - t182 * t96 - t183 * t97;
t234 = (-t96 - t353) * t220 + (-t97 - t352) * t217;
t77 = qJD(3) * t102 + t242;
t225 = -t107 * qJ(5) - t134 * qJD(5) + t77;
t223 = t97 - t352;
t195 = -pkin(4) * t220 + t318;
t80 = pkin(4) * t129 + t358;
t71 = t149 * t156 + t351;
t60 = t129 * t385 + t358;
t56 = qJD(6) * t277 + t106 * t216 + t156 * t219;
t55 = qJD(6) * t110 - t106 * t219 + t156 * t216;
t54 = t133 * pkin(4) + t229;
t53 = -t157 * pkin(4) - t57;
t44 = -pkin(4) * t159 - t49;
t37 = -pkin(4) * t149 + t343;
t35 = -pkin(5) * t133 - t43;
t34 = t41 - t380;
t31 = t106 * pkin(4) + t225;
t29 = t97 * pkin(4) + t224;
t25 = t106 * t385 + t225;
t24 = -pkin(4) * t156 - t27;
t17 = t216 * t34 + t219 * t60;
t16 = -t216 * t60 + t219 * t34;
t13 = -pkin(5) * t106 - t20;
t12 = t107 * pkin(5) - t156 * t385 - t27;
t4 = -qJD(6) * t11 + t219 * t12 - t216 * t25;
t3 = qJD(6) * t10 + t216 * t12 + t219 * t25;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213 * t266, t215 * t266, 0.2e1 * qJD(2) * qJD(1) * t394 ((t215 * t338 + (qJ(2) * t346 - t206) * t213) * qJD(1) - t276) * t335, -t157 * t155 - t160 * t404, -t160 * t142 + t155 * t153 - t157 * t156 + t159 * t404, t155 * t250 + t181 * t404, t153 * t156 + t351, t142 * t181 + t156 * t250, 0, t77 * t250 + t65 * t181 + t131 * t142 + t123 * t156 + (t153 * t359 + t159 * t309) * t320, -t123 * t155 - t131 * t404 + t157 * t273 + t160 * t262 + t64 * t181 + t250 * t76, t101 * t404 - t102 * t142 - t76 * t153 + t155 * t393 - t91 * t156 + t77 * t157 - t64 * t159 + t65 * t160, -t65 * t101 + t64 * t102 + t91 * t76 - t393 * t77 + (t131 * t309 + t313) * t320, t396, t249, t247, t280, -t248, t71, t106 * t72 + t127 * t77 + t133 * t65 + t142 * t49 + t149 * t27 - t156 * t40 - t159 * t305 + t88 * t97, t107 * t72 + t129 * t77 + t134 * t65 - t142 * t50 - t149 * t26 - t156 * t41 + t159 * t306 - t88 * t96, -t106 * t41 + t107 * t40 - t127 * t26 - t129 * t27 + t133 * t306 + t134 * t305 + t49 * t96 - t50 * t97, t26 * t41 - t27 * t40 - t305 * t49 - t306 * t50 + t65 * t88 + t72 * t77, t71, -t247, t248, t396, t249, t280, t106 * t38 + t107 * t37 + t127 * t20 + t129 * t24 + t133 * t14 + t134 * t15 + t43 * t97 - t44 * t96, -t106 * t46 - t127 * t31 - t133 * t29 + t142 * t44 + t149 * t24 + t15 * t159 + t156 * t37 - t54 * t97, -t107 * t46 - t129 * t31 - t134 * t29 - t14 * t159 - t142 * t43 - t149 * t20 - t156 * t38 + t54 * t96, t14 * t43 + t15 * t44 + t20 * t38 + t24 * t37 + t29 * t54 + t31 * t46, t100 * t56 - t110 * t47, -t100 * t55 - t110 * t48 - t277 * t47 - t56 * t98, t100 * t107 - t110 * t96 + t126 * t56 - t134 * t47, -t277 * t48 + t55 * t98, -t107 * t98 - t126 * t55 - t134 * t48 - t277 * t96, t107 * t126 - t61, -t10 * t96 - t107 * t281 + t126 * t4 + t13 * t98 + t134 * t2 - t277 * t9 + t30 * t55 + t35 * t48, -t1 * t134 + t100 * t13 - t107 * t6 + t11 * t96 + t110 * t9 - t126 * t3 + t30 * t56 - t35 * t47, t1 * t277 + t10 * t47 - t100 * t4 - t11 * t48 - t110 * t2 + t281 * t56 - t3 * t98 - t55 * t6, t1 * t11 + t10 * t2 + t13 * t30 - t281 * t4 + t3 * t6 + t35 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213 * t297, t215 * t297, -t222 * t394, t276 * t336, 0, 0, 0, 0, 0, 0, t142 * t360 - t153 * t274 + t250 * t267, -t157 * t274 - t250 * t392 - t360 * t404, -t142 * t316 + t153 * t392 + t157 * t267 + t294 * t404, -t275 + t64 * t316 + t393 * t172 + t91 * t173 + (t294 * t91 - t316 * t393) * qJD(3) + (t308 * t360 - t313) * t321, 0, 0, 0, 0, 0, 0, t389, t388, t236, t182 * t305 - t183 * t306 + t267 * t72 - t339 * t41 - t340 * t40 - t275, 0, 0, 0, 0, 0, 0, t236, -t389, -t388, -t14 * t183 + t15 * t182 + t267 * t46 - t29 * t294 + t339 * t38 - t340 * t37, 0, 0, 0, 0, 0, 0, -t126 * t342 - t168 * t96 + t183 * t48 - t339 * t98, -t100 * t339 + t126 * t341 - t183 * t47 - t254 * t96, t100 * t342 + t168 * t47 + t254 * t48 + t341 * t98, -t1 * t254 + t2 * t168 + t9 * t183 + t281 * t342 - t30 * t339 - t341 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, -t153 ^ 2 + t157 ^ 2, -t189 + t153 * t327 + (t153 * t284 + t230) * qJD(1), -t347, t157 * t327 + (t157 * t284 - t156) * qJD(1), 0, -t123 * t157 - t91 * t192 + (-t251 * t335 + t284 * t91) * qJD(1), t123 * t153 - t393 * t192 + (t253 * t335 + t284 * t393) * qJD(1), 0, 0, t395, t234, t149 * t302 + t278, t259, -t217 * t386 - t279, -t349, -pkin(3) * t97 - t91 * t127 + t40 * t157 - t65 * t220 + (-t57 - t325) * t149 + t265 * t217, pkin(3) * t96 - t91 * t129 + t41 * t157 + t65 * t217 + (t58 + t326) * t149 + t265 * t220, t58 * t127 + t57 * t129 + (t285 + t402) * t220 + (t286 - t269) * t217, -t65 * pkin(3) + t40 * t57 - t41 * t58 - t72 * t91 + (-t306 * t220 + t305 * t217 + (-t217 * t41 + t220 * t40) * qJD(4)) * pkin(10), -t349, -t220 * t386 - t278, t149 * t303 + t279, t395, t234, t259, -t51 * t127 - t53 * t129 + (t149 * t37 - t14 + t285) * t220 + (t286 + t399) * t217, -t37 * t157 - t195 * t97 + t29 * t220 + (-t53 + t325) * t149 - t363 * t127 + t264 * t217, t38 * t157 + t195 * t96 - t29 * t217 + (t51 - t326) * t149 - t363 * t129 + t264 * t220, t29 * t195 - t37 * t53 - t38 * t51 + t363 * t46 + (-t14 * t220 + t15 * t217 + (t217 * t38 + t220 * t37) * qJD(4)) * pkin(10), t47 * t216 * t220 + (-t219 * t329 + t288) * t100, t100 * t113 + t114 * t98 + (t100 * t219 - t216 * t98) * t334 + (t366 + t368 + (t100 * t216 + t219 * t98) * qJD(6)) * t220, -t47 * t217 + t288 * t126 + (-t126 * t330 + t350 + t369) * t220, t48 * t219 * t220 + (-t216 * t329 - t289) * t98, -t48 * t217 + t289 * t126 + (t126 * t331 - t370 + t93) * t220, t126 * t302 - t95, -t30 * t113 - t162 * t96 + t200 * t48 + t362 * t98 + (-t30 * t333 + t2) * t217 + t364 * t126 + (-t149 * t281 - t30 * t331 + t376) * t220, -t30 * t114 + t163 * t96 - t200 * t47 + (qJD(4) * t216 * t30 - t1) * t217 - t365 * t126 + t362 * t100 + (-t149 * t6 - t30 * t330 - t377) * t220, t6 * t113 - t281 * t114 + t162 * t47 - t163 * t48 - t365 * t98 - t364 * t100 + t291 * t334 + (-t1 * t219 + t2 * t216 + (t216 * t6 - t219 * t281) * qJD(6)) * t220, t1 * t163 + t2 * t162 + t9 * t200 - t281 * t364 + t30 * t362 + t365 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t319, -t257, -t354, -t223, t142, -t129 * t72 + t269, t127 * t72 - t402, 0, 0, t142, t257, t223, t354, t319, -t354, pkin(4) * t96 - qJ(5) * t97 + (-t38 - t41) * t129 + (t37 - t343) * t127, t127 * t80 - t269 + t374 - 0.2e1 * t382, -t46 * t127 + t80 * t129 + t149 * t343 - t14 + t140, -t15 * pkin(4) - t14 * qJ(5) - t343 * t38 - t37 * t41 - t46 * t80, -t100 * t301 - t368 (-t48 - t356) * t219 + (t47 + t307) * t216, t100 * t127 + t268, t219 * t307 + t366, -t98 * t127 + t260, t126 * t127, qJ(5) * t48 - t281 * t127 + t377 + t344 * t98 + (t216 * t328 - t16) * t126 + t390 * t219, -qJ(5) * t47 - t6 * t127 + t376 + (t219 * t328 + t17) * t126 + t344 * t100 - t390 * t216, t16 * t100 + t17 * t98 + (-t129 * t6 - t385 * t47 - t2 + (t385 * t98 - t6) * qJD(6)) * t219 + (-t129 * t281 + t385 * t48 - t1 + (-t100 * t385 - t281) * qJD(6)) * t216, t9 * qJ(5) + t281 * t16 - t6 * t17 + t344 * t30 - (qJD(6) * t291 + t1 * t216 + t2 * t219) * t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, t142 - t354, -t386 - t387, t374 + t399, 0, 0, 0, 0, 0, 0, t268 - t370, t260 - t350, t216 * t397 + t219 * t398, -t30 * t149 + t216 * t401 + t400 * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t375, t100 ^ 2 - t98 ^ 2, -t398, -t375, t397, -t96, -t30 * t100 + t400, t30 * t98 - t401, 0, 0;];
tauc_reg  = t5;
