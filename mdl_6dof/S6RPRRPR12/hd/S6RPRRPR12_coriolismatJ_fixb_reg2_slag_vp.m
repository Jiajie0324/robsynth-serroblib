% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR12_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:53:06
% EndTime: 2019-03-09 05:54:18
% DurationCPUTime: 58.64s
% Computational Cost: add. (57541->1313), mult. (157533->1731), div. (0->0), fcn. (180202->12), ass. (0->937)
t901 = sin(pkin(6));
t902 = cos(pkin(12));
t1372 = t901 * t902;
t1463 = cos(pkin(7));
t1464 = cos(pkin(6));
t900 = sin(pkin(7));
t1001 = t1372 * t900 - t1463 * t1464;
t1134 = t900 * t1464;
t905 = sin(qJ(3));
t1088 = t905 * t1134;
t1130 = t905 * t1463;
t1471 = cos(qJ(3));
t899 = sin(pkin(12));
t1204 = t1471 * t899;
t766 = t1088 + (t1130 * t902 + t1204) * t901;
t904 = sin(qJ(4));
t907 = cos(qJ(4));
t642 = -t1001 * t904 + t766 * t907;
t1406 = t642 * t907;
t1174 = -t1406 / 0.2e1;
t1477 = t904 / 0.2e1;
t1392 = t766 * t904;
t809 = t1001 * t907;
t640 = t809 + t1392;
t1550 = t1477 * t640 + t1174;
t1600 = t1550 * qJD(4);
t1085 = t1463 * t1471;
t1375 = t899 * t901;
t764 = -t1085 * t1372 - t1134 * t1471 + t1375 * t905;
t1224 = t907 * qJD(3);
t879 = t904 * t1224;
t1629 = -t764 * t879 - t1600;
t1087 = t899 * t1130;
t1203 = t1471 * t902;
t798 = (-t1087 + t1203) * t901;
t1358 = t904 * t798;
t1374 = t900 * t901;
t1215 = t899 * t1374;
t844 = t907 * t1215;
t1078 = t844 / 0.2e1 - t1358 / 0.2e1;
t1210 = t900 * t1471;
t1096 = t1210 / 0.2e1;
t1131 = t904 * t1463;
t1373 = t900 * t905;
t823 = t1373 * t907 + t1131;
t1486 = t823 / 0.2e1;
t1165 = t764 * t1486;
t969 = t1096 * t642 + t1165;
t336 = -t969 + t1078;
t1570 = qJD(2) * t336;
t1465 = t766 * pkin(10);
t1081 = t764 * pkin(3) - t1465;
t1212 = -pkin(2) * t902 - pkin(1);
t1376 = t899 * t900;
t1211 = pkin(1) * t1464;
t1107 = t902 * t1211;
t968 = pkin(2) * t1464 + t1107;
t609 = -t900 * t968 + (qJ(2) * t1376 + t1212 * t1463) * t901;
t911 = t1081 + t609;
t350 = t904 * t911;
t1612 = t1463 * ((-pkin(9) * t1463 - qJ(2)) * t1375 + t968) + (-pkin(9) * t1376 + t1212) * t1374;
t1132 = t901 * t1463;
t1334 = qJ(2) * t1372 + t1211 * t899;
t753 = (t1132 * t902 + t1134) * pkin(9) + t1334;
t419 = t1471 * t753 + t1612 * t905;
t910 = -pkin(10) * t1001 + t419;
t363 = t907 * t910;
t240 = t363 + t350;
t1628 = -qJD(4) * t240 + t1570;
t1627 = t642 / 0.2e1;
t1037 = t899 * t1085;
t1371 = t902 * t905;
t797 = (t1037 + t1371) * t901;
t1626 = -t797 / 0.2e1;
t1291 = qJD(1) * t764;
t1187 = t907 * t1291;
t459 = t642 * t1187;
t1625 = -t1600 + t459;
t1232 = t764 * qJD(3);
t1407 = t642 * t904;
t1409 = t640 * t907;
t309 = t1407 + t1409;
t1605 = t309 * qJD(4);
t896 = t904 ^ 2;
t898 = t907 ^ 2;
t875 = t898 - t896;
t1624 = -t1232 * t875 - t1605;
t1201 = t640 * t1291;
t1104 = t904 * t1201;
t1623 = -t1104 - t1629;
t1292 = qJD(1) * t642;
t1190 = t640 * t1292;
t1622 = qJD(3) * t1550 + t1190;
t1231 = t766 * qJD(3);
t763 = t764 ^ 2;
t324 = -t642 * t766 + t763 * t907;
t1611 = qJD(1) * t324;
t1621 = t1231 * t904 - t1611;
t552 = t907 * t764;
t1620 = qJD(4) * t552 + t1611;
t418 = -t1471 * t1612 + t905 * t753;
t413 = t907 * t418;
t1470 = pkin(10) * t764;
t576 = pkin(3) * t766 + t1470;
t558 = t904 * t576;
t1341 = t413 / 0.2e1 - t558 / 0.2e1;
t1394 = t766 * qJ(5);
t1619 = t1394 - t1341;
t709 = -t844 + t1358;
t339 = t640 * t797 - t709 * t764;
t1610 = qJD(1) * t339;
t926 = t969 + t1078;
t1618 = -qJD(4) * t926 - t1610;
t1617 = -t459 + t1629;
t1616 = t1600 + t1104;
t1213 = t904 * t1375;
t1112 = t900 * t1213;
t1344 = t907 * t798;
t710 = t1112 + t1344;
t340 = t642 * t797 - t710 * t764;
t1609 = qJD(1) * t340;
t1221 = -t1471 / 0.2e1;
t1090 = t640 * t1221;
t822 = t1373 * t904 - t1463 * t907;
t1489 = -t822 / 0.2e1;
t1166 = t764 * t1489;
t918 = t1166 - t1344 / 0.2e1 + (t1090 - t1213 / 0.2e1) * t900;
t1385 = t797 * t904;
t1504 = -t642 / 0.2e1;
t988 = t1373 * t1504 + t1486 * t766;
t936 = t1385 / 0.2e1 + t988;
t1615 = qJD(3) * t936 + qJD(4) * t918 + t1609;
t970 = t1090 * t900 + t1166;
t327 = t1344 / 0.2e1 + t1112 / 0.2e1 + t970;
t346 = -t1385 / 0.2e1 + t988;
t1614 = -qJD(3) * t346 - qJD(4) * t327 + t1609;
t1613 = qJD(4) * t336 + t1610;
t903 = sin(qJ(6));
t1479 = t903 / 0.2e1;
t906 = cos(qJ(6));
t1475 = t906 / 0.2e1;
t1608 = qJD(2) * t339;
t1607 = qJD(2) * t340;
t1517 = pkin(4) + pkin(11);
t1606 = t1517 * t640;
t1343 = t1517 * t907;
t1516 = pkin(5) + pkin(10);
t1556 = t1516 * t907;
t1378 = t1556 * t903;
t842 = t1556 * t906;
t1604 = t346 * qJD(2);
t1603 = qJD(1) * t1550 - t879;
t914 = (-t710 / 0.2e1 + t970) * t907 + (-t709 / 0.2e1 + t969) * t904;
t1575 = qJD(1) * t914;
t1590 = t1210 * (t896 + t898);
t1602 = qJD(3) * t1590 + t1575;
t1098 = qJD(3) * t1210;
t1230 = t822 * qJD(4);
t1553 = t918 * qJD(1);
t1601 = t1098 * t907 - t1230 + t1553;
t1395 = t764 * t906;
t1410 = t640 * t903;
t458 = t1395 + t1410;
t1422 = t458 * t906;
t1178 = -t1422 / 0.2e1;
t1396 = t764 * t903;
t630 = t640 * t906;
t456 = -t630 + t1396;
t1425 = t456 * t903;
t1019 = t1178 + t1425 / 0.2e1;
t1564 = t1019 * t907;
t1599 = t1564 * qJD(6);
t1059 = t640 * t766 - t763 * t904;
t1547 = qJD(1) * t1059;
t1598 = t1224 * t766 - t1547;
t550 = t904 * t764;
t1597 = qJD(4) * t550 - t1547;
t1351 = t906 * t456;
t1150 = -t1351 / 0.2e1;
t1424 = t458 * t903;
t1003 = t1150 - t1424 / 0.2e1;
t897 = t906 ^ 2;
t1481 = t897 / 0.2e1;
t895 = t903 ^ 2;
t827 = (t1481 - t895 / 0.2e1) * t907;
t1278 = qJD(4) * t906;
t881 = t903 * t1278;
t1596 = -qJD(1) * t1003 + qJD(3) * t827 + t881;
t1060 = -t640 * t710 + t642 * t709;
t1546 = qJD(1) * t1060;
t1595 = qJD(3) * t914 - t1546;
t1473 = t907 / 0.2e1;
t1018 = t1473 * t710 + t1477 * t709;
t1209 = t904 * t1471;
t1094 = t1209 / 0.2e1;
t1474 = -t907 / 0.2e1;
t912 = (t1090 * t907 + t1094 * t642) * t900 + (t1474 * t822 + t1477 * t823) * t764 + t1018;
t1594 = qJD(3) * t912 + t1546;
t1137 = qJD(4) * t1471;
t1287 = qJD(3) * t905;
t1551 = t936 * qJD(1);
t1593 = t1551 + t900 * (t1137 * t907 - t1287 * t904);
t1552 = t926 * qJD(1);
t813 = t823 * qJD(4);
t1592 = t1098 * t904 + t1552 + t813;
t1579 = t1018 * pkin(10);
t1359 = t904 * qJ(5);
t1072 = -t907 * pkin(4) - t1359;
t852 = -pkin(3) + t1072;
t1591 = t1626 * t852 - t1579;
t1469 = t640 * pkin(4);
t1408 = t642 * qJ(5);
t374 = pkin(3) * t1001 + t418;
t922 = t374 - t1408;
t262 = t922 + t1469;
t1434 = t262 * t904;
t1532 = t852 * t1627 + t1434 / 0.2e1;
t1589 = -qJD(1) * t309 + qJD(3) * t875;
t239 = t904 * t910 - t907 * t911;
t1587 = -qJD(2) * t327 + qJD(4) * t239;
t634 = t640 * qJD(4);
t1586 = qJD(3) * t324 + t634 * t764;
t1520 = t642 ^ 2;
t1138 = t640 ^ 2 - t1520;
t1585 = qJD(1) * t1138 - qJD(3) * t309;
t1295 = qJD(1) * t458;
t1583 = -qJD(3) * t1564 - qJD(4) * t1003 + t1295 * t456;
t1286 = qJD(3) * t906;
t1377 = t898 * t903;
t1582 = -qJD(1) * t1564 + qJD(4) * t827 - t1286 * t1377;
t1509 = t458 / 0.2e1;
t1580 = -t764 / 0.2e1;
t1577 = t900 * (t1137 * t904 + t1224 * t905);
t1574 = qJD(2) * t912;
t1573 = qJD(2) * t914;
t1572 = qJD(2) * t918;
t1571 = qJD(2) * t926;
t1569 = qJD(2) * t936;
t874 = t895 - t897;
t1129 = qJD(4) * t874;
t1109 = t903 * t1210;
t1348 = t906 * t822;
t772 = t1109 + t1348;
t1208 = t906 * t1471;
t1108 = t900 * t1208;
t1364 = t903 * t822;
t773 = t1108 - t1364;
t1010 = t1475 * t773 + t1479 * t772;
t1565 = t1010 * t642;
t1280 = qJD(4) * t903;
t1296 = qJD(1) * t456;
t1563 = (t1280 + t1296) * t642;
t1557 = t1516 * t904;
t825 = -pkin(3) - t1359 - t1343;
t768 = t1557 * t903 + t825 * t906;
t1389 = t768 * t906;
t767 = -t1557 * t906 + t825 * t903;
t1390 = t767 * t903;
t1058 = t1389 + t1390;
t520 = t1058 * t904;
t204 = t922 + t1606;
t1467 = t642 * pkin(5);
t1466 = t764 * pkin(4);
t211 = t239 - t1466;
t909 = -t764 * pkin(11) + t1467 + t211;
t108 = t906 * t204 + t903 * t909;
t1453 = t108 * t906;
t107 = t204 * t903 - t906 * t909;
t1454 = t107 * t903;
t1562 = (t1453 + t1454) * t642;
t189 = -t239 - t1467;
t1561 = (t1517 * t1580 + t189 / 0.2e1) * t907;
t1115 = qJD(4) + t1291;
t1560 = t1115 * t642;
t1139 = t1481 + t895 / 0.2e1;
t1559 = t1139 * t823;
t1140 = t239 / 0.2e1 - t211 / 0.2e1;
t1558 = t1140 * t907;
t1555 = t1520 * t903;
t1554 = t1520 * t906;
t1236 = t552 * qJD(1);
t889 = qJD(4) * t907;
t1549 = t1236 + t889;
t1544 = qJD(2) * t1060;
t1543 = qJD(4) * t1138;
t1542 = t1003 * qJD(6);
t1056 = t900 * t1094;
t1095 = -t1209 / 0.2e1;
t1541 = (t1095 * t900 + t1056) * t764;
t1478 = -t904 / 0.2e1;
t1167 = t773 * t1478;
t1168 = t772 * t1478;
t1356 = t905 * t906;
t803 = (t1209 * t903 + t1356) * t900;
t1490 = t803 / 0.2e1;
t1361 = t903 * t905;
t802 = (t1208 * t904 - t1361) * t900;
t1492 = t802 / 0.2e1;
t384 = (t1167 + t1492) * t906 + (t1168 + t1490) * t903;
t1244 = t384 * qJD(2);
t1483 = t1556 / 0.2e1;
t1169 = t764 * t1483;
t1499 = -t768 / 0.2e1;
t1016 = t108 * t1478 + t1499 * t642;
t412 = t904 * t418;
t762 = t766 * pkin(4);
t215 = -pkin(11) * t766 - t412 - t762 + (-pkin(5) * t764 - t576) * t907;
t1354 = t906 * t215;
t315 = -pkin(4) * t550 + qJ(5) * t552 + t419;
t282 = -pkin(11) * t550 + t315;
t1368 = t903 * t282;
t138 = t1354 - t1368;
t1515 = -t138 / 0.2e1;
t985 = t1515 + t1016;
t1500 = -t767 / 0.2e1;
t1017 = t107 * t1478 + t1500 * t642;
t1353 = t906 * t282;
t1369 = t903 * t215;
t139 = t1353 + t1369;
t1514 = -t139 / 0.2e1;
t986 = t1514 + t1017;
t20 = t903 * t986 + t906 * t985 + t1169;
t1540 = qJD(1) * t20 - qJD(3) * t520 - t1244;
t1461 = qJ(5) * t907;
t863 = pkin(4) * t904 - t1461;
t828 = pkin(11) * t904 + t863;
t1347 = t906 * t828;
t770 = t1347 + t1378;
t1497 = t770 / 0.2e1;
t1363 = t903 * t828;
t769 = t842 - t1363;
t1015 = t1497 * t456 + t1509 * t769;
t1472 = t1517 / 0.2e1;
t1391 = t766 * t906;
t536 = -t550 * t903 + t1391;
t1144 = t536 * t1472;
t1393 = t766 * t903;
t1357 = t904 * t906;
t715 = t764 * t1357;
t535 = t715 + t1393;
t1145 = t535 * t1472;
t1468 = t640 * pkin(5);
t190 = t240 - t1468;
t1355 = t906 * t190;
t1462 = qJ(5) * t640;
t316 = t1517 * t642 + t1462;
t1367 = t903 * t316;
t141 = t1355 - t1367;
t1352 = t906 * t316;
t1370 = t903 * t190;
t142 = t1352 + t1370;
t3 = (t142 * t1473 + t1144 + t985) * t906 + (t141 * t1474 + t1145 + t986) * t903 + t1015;
t1346 = t906 * t907;
t1360 = t903 * t907;
t341 = t1346 * t770 - t1360 * t769 - t520;
t1539 = qJD(1) * t3 + qJD(3) * t341 - t1244;
t637 = t1392 / 0.2e1 + t809 / 0.2e1;
t1538 = -qJD(6) * t637 - t1622;
t1379 = t1556 * t642;
t561 = t764 * qJ(5);
t179 = t240 + t561;
t172 = t179 - t1468;
t1533 = -t1379 / 0.2e1 + t172 * t1478;
t1237 = t550 * qJD(1);
t1279 = qJD(4) * t904;
t1528 = t1237 + t1279;
t1223 = t907 * qJD(6);
t1135 = t1223 / 0.2e1;
t1527 = -t1135 + t1603;
t1445 = t179 * t904;
t1526 = t211 * t907 - t1445;
t1350 = t906 * t709;
t1365 = t903 * t797;
t572 = t1350 - t1365;
t1349 = t906 * t797;
t1366 = t903 * t709;
t573 = t1349 + t1366;
t1340 = t1475 * t572 + t1479 * t573;
t1205 = t1471 * t797;
t644 = t710 * t823;
t1525 = (-t1205 * t900 + t709 * t822 + t644) * qJD(2);
t1281 = qJD(4) * t764;
t1523 = qJD(3) * t1059 + t1281 * t642;
t1519 = -pkin(10) / 0.2e1;
t1518 = pkin(10) / 0.2e1;
t1513 = t142 / 0.2e1;
t397 = pkin(4) * t642 + t1462;
t1512 = -t397 / 0.2e1;
t1511 = -t412 / 0.2e1;
t1510 = -t456 / 0.2e1;
t1508 = t535 / 0.2e1;
t1507 = t536 / 0.2e1;
t1506 = -t630 / 0.2e1;
t1505 = t640 / 0.2e1;
t1502 = -t762 / 0.2e1;
t1501 = t766 / 0.2e1;
t1498 = -t769 / 0.2e1;
t1496 = -t772 / 0.2e1;
t1495 = -t773 / 0.2e1;
t1494 = t773 / 0.2e1;
t1493 = -t802 / 0.2e1;
t1491 = -t803 / 0.2e1;
t1488 = t822 / 0.2e1;
t1487 = -t823 / 0.2e1;
t1485 = -t863 / 0.2e1;
t1484 = -t1556 / 0.2e1;
t1480 = -t903 / 0.2e1;
t1476 = -t906 / 0.2e1;
t34 = t172 * t764 - t1562;
t1460 = qJD(1) * t34;
t60 = t107 * t642 - t172 * t456;
t1459 = qJD(1) * t60;
t61 = -t108 * t642 + t172 * t458;
t1458 = qJD(1) * t61;
t1435 = t262 * t642;
t1441 = t240 * t764;
t78 = -t397 * t640 - t1435 + t1441;
t1457 = qJD(1) * t78;
t1443 = t239 * t764;
t79 = t262 * t640 - t397 * t642 - t1443;
t1456 = qJD(1) * t79;
t10 = -t107 * t141 + t108 * t142 + t172 * t189;
t1455 = t10 * qJD(1);
t312 = -t413 + t558;
t281 = -t312 - t1394;
t249 = pkin(5) * t550 - t281;
t11 = -t107 * t138 + t108 * t139 + t172 * t249;
t1452 = t11 * qJD(1);
t1451 = t141 * t906;
t1450 = t142 * t903;
t17 = t107 * t536 - t108 * t535 - t138 * t458 - t139 * t456;
t1449 = t17 * qJD(1);
t1448 = t172 * t903;
t1447 = t172 * t906;
t18 = -t141 * t458 - t142 * t456 + t1562;
t1446 = t18 * qJD(1);
t1442 = t239 * t907;
t1440 = t240 * t904;
t1439 = t249 * t903;
t1438 = t249 * t906;
t25 = t107 * t640 + t189 * t456 + (t141 - t1447) * t642;
t1437 = t25 * qJD(1);
t26 = t108 * t640 + t189 * t458 + (-t142 + t1448) * t642;
t1436 = t26 * qJD(1);
t1433 = t262 * t907;
t27 = t107 * t552 + t138 * t642 + t172 * t535 + t249 * t456;
t1432 = t27 * qJD(1);
t28 = t108 * t552 - t139 * t642 + t172 * t536 + t249 * t458;
t1431 = t28 * qJD(1);
t31 = -t107 * t572 + t108 * t573 + t172 * t710;
t1430 = t31 * qJD(1);
t1429 = t374 * t904;
t1428 = t374 * t907;
t43 = -t179 * t239 + t211 * t240 + t262 * t397;
t1427 = t43 * qJD(1);
t1345 = t907 * t576;
t311 = t412 + t1345;
t283 = -t311 - t762;
t44 = -t179 * t281 + t211 * t283 + t262 * t315;
t1426 = t44 * qJD(1);
t1423 = t458 * t904;
t1402 = t710 * qJ(5);
t1029 = t709 * pkin(4) / 0.2e1 - t1402 / 0.2e1;
t1097 = -t1210 / 0.2e1;
t1141 = -t179 / 0.2e1 + t240 / 0.2e1;
t920 = t1097 * t397 - t1140 * t823 + t1141 * t822;
t49 = t920 + t1029;
t1421 = t49 * qJD(1);
t53 = (-t179 + t240) * t642 + (-t211 + t239) * t640;
t1420 = t53 * qJD(1);
t1419 = t535 * t903;
t1418 = t536 * t906;
t54 = (-t1466 / 0.2e1 - t1140) * t907 + (-t561 / 0.2e1 + t1141) * t904;
t1417 = t54 * qJD(1);
t1416 = t572 * t904;
t1413 = t573 * t904;
t59 = -t1526 * t764 + t281 * t640 + t283 * t642;
t1412 = t59 * qJD(1);
t63 = -t239 * t311 + t240 * t312 + t374 * t419;
t1411 = t63 * qJD(1);
t388 = t642 * t903;
t65 = t179 * t766 - t315 * t642 + (-t281 + t1433) * t764;
t1405 = t65 * qJD(1);
t66 = t211 * t766 - t315 * t640 + (t283 + t1434) * t764;
t1404 = t66 * qJD(1);
t67 = -t311 * t642 - t312 * t640 + (t1440 - t1442) * t764;
t1403 = t67 * qJD(1);
t1401 = t710 * t903;
t1400 = t710 * t906;
t73 = t179 * t710 + t211 * t709 + t262 * t797;
t1399 = t73 * qJD(1);
t74 = -t239 * t766 + t419 * t640 + (t311 - t1429) * t764;
t1398 = t74 * qJD(1);
t75 = -t240 * t766 + t419 * t642 + (-t312 - t1428) * t764;
t1397 = t75 * qJD(1);
t1388 = t769 * t906;
t1387 = t770 * t903;
t1384 = t797 * t907;
t82 = t239 * t709 + t240 * t710 + t374 * t797;
t1383 = t82 * qJD(1);
t1382 = t822 * qJ(5);
t1380 = t863 * t640;
t1362 = t903 * t904;
t1335 = pkin(10) * t1590;
t1333 = t895 + t897;
t111 = t179 * t764 - t1435;
t1332 = qJD(1) * t111;
t145 = -t374 * t640 + t1443;
t1331 = qJD(1) * t145;
t146 = t374 * t642 - t1441;
t1330 = qJD(1) * t146;
t1012 = t1489 * t458 + t1495 * t640;
t1171 = -t1400 / 0.2e1;
t159 = t1171 + t1012;
t1329 = qJD(1) * t159;
t928 = t1165 + t1565;
t162 = t928 - t1340;
t1328 = qJD(1) * t162;
t180 = -t456 * t573 - t458 * t572;
t1327 = qJD(1) * t180;
t193 = (t1351 - t1424) * t642;
t1324 = qJD(1) * t193;
t1004 = -t1365 / 0.2e1 + t1350 / 0.2e1;
t1011 = t1486 * t458 + t1494 * t642;
t224 = t1004 - t1011;
t1323 = qJD(1) * t224;
t1005 = -t1366 / 0.2e1 - t1349 / 0.2e1;
t1006 = t1487 * t456 + t1496 * t642;
t225 = t1005 - t1006;
t1322 = qJD(1) * t225;
t243 = t456 * t710 + t572 * t642;
t1321 = qJD(1) * t243;
t244 = t458 * t710 - t573 * t642;
t1320 = qJD(1) * t244;
t255 = -t456 * t764 - t1555;
t1319 = qJD(1) * t255;
t1177 = -t1418 / 0.2e1;
t1157 = t1362 / 0.2e1;
t973 = t1157 * t458 + t1174 * t895;
t257 = t1177 + t973;
t1318 = qJD(1) * t257;
t1069 = t1150 * t904 + t1174 * t897;
t505 = -t1419 / 0.2e1;
t258 = t505 + t1069;
t1317 = qJD(1) * t258;
t1013 = t1489 * t456 + t1496 * t640;
t261 = -t1401 / 0.2e1 + t1013;
t1316 = qJD(1) * t261;
t275 = -t1001 * t418 - t609 * t764;
t1315 = qJD(1) * t275;
t276 = t1001 * t419 + t609 * t766;
t1314 = qJD(1) * t276;
t284 = -t458 * t640 + t1555;
t1313 = qJD(1) * t284;
t285 = t456 * t640 + t1554;
t1312 = qJD(1) * t285;
t305 = -t550 * t642 - t552 * t640;
t1309 = qJD(1) * t305;
t306 = t309 * t764;
t1308 = qJD(1) * t306;
t411 = -t764 * t798 + t766 * t797;
t1297 = qJD(1) * t411;
t487 = t1001 * t797 + t1215 * t764;
t1294 = qJD(1) * t487;
t488 = t1001 * t798 + t1215 * t766;
t1293 = qJD(1) * t488;
t1290 = qJD(3) * t384;
t1289 = qJD(3) * t896;
t1288 = qJD(3) * t904;
t1277 = qJD(5) * t903;
t1276 = qJD(5) * t904;
t1275 = qJD(5) * t906;
t1274 = qJD(5) * t907;
t1273 = qJD(6) * t642;
t1272 = qJD(6) * t903;
t1271 = qJD(6) * t904;
t1270 = qJD(6) * t906;
t1269 = qJD(6) * t1517;
t927 = t1491 * t456 + t1493 * t458 + t1494 * t535 + t1496 * t536;
t987 = (t1476 * t573 + t1479 * t572) * t907;
t112 = t987 - t927;
t1268 = t112 * qJD(1);
t919 = (-t1425 / 0.2e1 + t1178) * t823 - t1565;
t116 = t919 + t1340;
t1267 = t116 * qJD(1);
t1009 = t1486 * t535 + t1492 * t642;
t972 = t1096 * t456 + t1496 * t764;
t148 = -t1416 / 0.2e1 + (t1171 + t972) * t907 + t1009;
t1266 = t148 * qJD(1);
t1008 = t1486 * t536 + t1491 * t642;
t1172 = t1401 / 0.2e1;
t971 = t1096 * t458 + t1495 * t764;
t149 = t1413 / 0.2e1 + (t1172 + t971) * t907 + t1008;
t1265 = t149 * qJD(1);
t1180 = t456 * t1478;
t588 = t1346 * t388;
t153 = -t588 + (t1423 / 0.2e1 + t1508) * t906 + (t1180 + t1507) * t903;
t1264 = t153 * qJD(1);
t175 = -t456 * t536 - t458 * t535;
t1263 = t175 * qJD(1);
t177 = t1215 * t609 + t418 * t797 + t419 * t798;
t1262 = t177 * qJD(1);
t205 = t1422 - t1425;
t194 = t205 * t642;
t1261 = t194 * qJD(1);
t241 = t456 * t552 - t535 * t642;
t1260 = t241 * qJD(1);
t242 = -t458 * t552 + t536 * t642;
t1259 = t242 * qJD(1);
t1077 = t1406 / 0.2e1 + t1501;
t1179 = -t1423 / 0.2e1;
t263 = t1179 + t715 / 0.2e1 + t1077 * t903;
t1258 = t263 * qJD(1);
t266 = -t1077 * t906 + (t1510 + t1396 / 0.2e1) * t904;
t1257 = t266 * qJD(1);
t785 = t1384 / 0.2e1;
t1159 = t1373 / 0.2e1;
t989 = t1159 * t640 + t1489 * t766;
t952 = t989 + t1541;
t271 = t785 + t952;
t1256 = t271 * qJD(1);
t786 = -t1384 / 0.2e1;
t953 = -t989 + t1541;
t274 = t786 + t953;
t1255 = t274 * qJD(1);
t1214 = t642 * t1362;
t292 = t552 * t906 + t1214;
t1254 = t292 * qJD(1);
t303 = t458 * t764 + t1554;
t1253 = t303 * qJD(1);
t614 = t642 * t1357;
t343 = -t552 * t903 + t614;
t1247 = t343 * qJD(1);
t1007 = t1475 * t802 + t1479 * t803;
t385 = -t1010 * t904 - t1007;
t1243 = t385 * qJD(3);
t455 = -t766 ^ 2 + t763;
t1240 = t455 * qJD(1);
t923 = t1001 * t1159 + t1463 * t1501;
t932 = (-t1371 / 0.2e1 - t1037 / 0.2e1) * t901;
t483 = t932 - t923;
t1239 = t483 * qJD(1);
t921 = t1001 * t1096 + t1463 * t1580;
t485 = (t1203 / 0.2e1 - t1087 / 0.2e1) * t901 + t921;
t1238 = t485 * qJD(1);
t1235 = t640 * qJD(5);
t665 = (t1334 * t902 + (qJ(2) * t1375 - t1107) * t899) * t901;
t1234 = t665 * qJD(1);
t1082 = t1130 / 0.2e1;
t754 = t1088 / 0.2e1 + (t1204 / 0.2e1 + t902 * t1082) * t901;
t1233 = t754 * qJD(1);
t761 = t764 * qJD(5);
t826 = (t899 ^ 2 + t902 ^ 2) * t901 ^ 2;
t1229 = t826 * qJD(1);
t1226 = t827 * qJD(6);
t1222 = t1518 + pkin(5) / 0.2e1;
t1220 = t1471 / 0.2e1;
t1219 = pkin(10) * t1279;
t1207 = t907 * t1471;
t1200 = t903 * t1292;
t1199 = t906 * t1292;
t1196 = t903 * t1224;
t1195 = t906 * t1224;
t1192 = t903 * t889;
t1191 = t904 * t1223;
t1189 = t642 * t1276;
t1188 = t766 * t1291;
t587 = t764 * t1231;
t880 = t904 * t889;
t1186 = t903 * t1270;
t1185 = qJ(5) * t1510;
t1184 = qJ(5) * t1509;
t1182 = t1447 / 0.2e1;
t1176 = t1418 / 0.2e1;
t1175 = t630 / 0.2e1;
t1164 = t823 * t1479;
t1163 = t823 * t1476;
t1160 = t1379 / 0.2e1;
t1158 = -t1369 / 0.2e1;
t1156 = -t1360 / 0.2e1;
t1155 = t1360 / 0.2e1;
t1154 = -t550 / 0.2e1;
t1153 = t550 / 0.2e1;
t1152 = t1357 / 0.2e1;
t1151 = t1354 / 0.2e1;
t1149 = -t1346 / 0.2e1;
t1148 = t1346 / 0.2e1;
t1147 = -t552 / 0.2e1;
t1146 = t552 / 0.2e1;
t1143 = t642 * t1472;
t1142 = t172 / 0.2e1 - t190 / 0.2e1;
t1136 = -t1224 / 0.2e1;
t1133 = t901 * t1464;
t325 = t754 - t1550;
t1124 = qJD(1) * t325 + t879;
t878 = t903 * t1288;
t1123 = qJD(1) * t388 + t878;
t894 = qJ(5) * qJD(4);
t1119 = qJD(1) * t561 + t894;
t1114 = -qJD(6) - t1292;
t1113 = qJD(6) + t1288;
t1111 = t1222 * t907;
t1110 = t900 ^ 2 * t905 * t1471;
t1106 = t822 * t1209;
t1105 = t823 * t1207;
t1103 = t907 * t881;
t1102 = t898 * t1186;
t1101 = t903 * t1195;
t1100 = -t1557 / 0.2e1;
t706 = t903 * t1146;
t707 = t906 * t1147;
t1099 = t1396 + t1506;
t1093 = t1208 / 0.2e1;
t1092 = -t1207 / 0.2e1;
t1091 = t1207 / 0.2e1;
t1086 = -t1470 / 0.2e1 - t576 / 0.2e1;
t1084 = qJD(1) * t1133;
t1083 = qJD(2) * t1133;
t1080 = 0.2e1 * t1101;
t1079 = -t282 / 0.2e1 + t172 * t1473;
t1076 = t1143 + t316 / 0.2e1;
t1074 = -t634 - t1201;
t882 = t904 * t1286;
t1073 = t882 + t1199;
t1071 = t764 * t852 + t1465;
t1070 = t900 * t1105;
t1068 = t1408 - t1606;
t353 = (t772 * t906 - t773 * t903 - t822) * t823;
t929 = -t1340 * t1517 + t1402 / 0.2e1;
t947 = t141 * t1496 + t142 * t1494 + t1488 * t172;
t5 = (t108 * t1480 + t107 * t1475 - t189 / 0.2e1) * t823 + t929 + t947;
t1067 = -t5 * qJD(1) + t353 * qJD(2);
t362 = t772 * t802 - t773 * t803 + t1070;
t1055 = t900 * t1091;
t915 = t107 * t1493 + t108 * t1490 + t138 * t772 / 0.2e1 + t139 * t1495 + t249 * t1486 + t172 * t1055;
t946 = t572 * t767 / 0.2e1 + t573 * t1499 + t710 * t1484;
t8 = t915 + t946;
t1066 = qJD(1) * t8 + qJD(2) * t362;
t1063 = t1450 + t1451;
t1062 = -t281 * t907 + t283 * t904;
t1061 = -t311 * t904 + t312 * t907;
t1057 = t1387 + t1388;
t1054 = t903 * t1096;
t1053 = t900 * t1093;
t1052 = qJ(5) * t1091;
t1051 = t1135 * t764 + t459;
t913 = (t315 * t1221 + t262 * t905 / 0.2e1 - t179 * t1092 + t211 * t1094) * t900 + t281 * t1487 + t283 * t1488;
t40 = t913 + t1591;
t629 = -t1106 * t900 - t1070 + t1110;
t1050 = t40 * qJD(1) - t629 * qJD(2);
t1020 = t1487 * t312 + t1488 * t311;
t933 = pkin(3) * t1626 + t1579;
t56 = (t240 * t1092 + t239 * t1095 + t419 * t1220 - t374 * t905 / 0.2e1) * t900 + t933 + t1020;
t628 = -t1110 + (t1106 + t1105) * t900;
t1049 = -qJD(1) * t56 + qJD(2) * t628;
t925 = pkin(10) * t1154 - t1433 / 0.2e1 + t397 * t1478 + t852 * t1505 + t642 * t1485;
t76 = t925 - t1619;
t776 = t852 * t907 + t863 * t904;
t1047 = -qJD(1) * t76 + qJD(3) * t776;
t777 = -t852 * t904 + t863 * t907;
t80 = -t762 + t1511 + t1380 / 0.2e1 + (t1512 + t1086) * t907 + t1532;
t1046 = qJD(1) * t80 - qJD(3) * t777;
t506 = t1419 / 0.2e1;
t931 = t1139 * t1406 + t1152 * t456 + t1179 * t903;
t144 = t506 + t1176 + t931;
t814 = t1333 * t907 * t904;
t1045 = qJD(1) * t144 + qJD(3) * t814;
t236 = t1214 + (t1410 / 0.2e1 + t1509 + t1395 / 0.2e1) * t907;
t838 = t875 * t903;
t1044 = qJD(1) * t236 - qJD(3) * t838;
t237 = t614 + (t1175 + t1510 - t1396 / 0.2e1) * t907;
t840 = t875 * t906;
t1043 = qJD(1) * t237 - qJD(3) * t840;
t320 = t1175 + t1099;
t1040 = qJD(1) * t320 + t1280;
t1038 = -t1271 - t1289;
t1036 = t899 * t1084;
t1035 = t902 * t1084;
t1034 = t1407 + t1409 / 0.2e1;
t1032 = pkin(3) * t1504 + t1429 / 0.2e1;
t1031 = -t281 * qJ(5) / 0.2e1 - t283 * pkin(4) / 0.2e1;
t1030 = qJD(1) * t637 + t1136;
t993 = pkin(10) * t1153 + pkin(3) * t1505 + t1428 / 0.2e1;
t154 = t993 - t1341;
t1028 = pkin(3) * t1224 - qJD(1) * t154;
t975 = t1086 * t907 + t1511;
t156 = t975 + t1032;
t1027 = pkin(3) * t1288 - qJD(1) * t156;
t1024 = qJ(5) * t1508 + t1439 / 0.2e1;
t1023 = qJ(5) * t1507 + t1438 / 0.2e1;
t1022 = t138 * t1475 + t139 * t1479;
t1021 = -t1451 / 0.2e1 - t1450 / 0.2e1;
t1014 = -t1388 / 0.2e1 - t1387 / 0.2e1;
t1002 = t904 * t1472 - t1461 / 0.2e1;
t114 = t1502 + t975 + t1532;
t1000 = qJD(1) * t114 + t1288 * t852;
t997 = qJD(3) * t550 + t1291 * t642;
t996 = -qJD(3) * t552 + t1201;
t436 = qJD(4) * t754 + t1188;
t995 = (t1278 + t1295) * t642;
t994 = t1114 * t906 - t882;
t991 = t1149 * t823 + t1168;
t990 = t1155 * t823 + t1167;
t984 = t828 / 0.2e1 + t1002;
t916 = t107 * t1498 + t108 * t1497 + t1100 * t172 + t141 * t1500 + t1483 * t189 + t1513 * t768;
t930 = -t1022 * t1517 + t249 * qJ(5) / 0.2e1;
t1 = -t916 + t930;
t924 = -t1007 * t1517 + t1052 * t900;
t945 = t1483 * t822 + t1494 * t770 + t1496 * t769;
t173 = (t1222 * t904 + t1475 * t767 + t1480 * t768) * t823 + t924 + t945;
t342 = -t1556 * t1557 - t767 * t769 + t768 * t770;
t983 = -t1 * qJD(1) - t173 * qJD(2) + t342 * qJD(3);
t286 = (-t1224 * t764 - t634) * t642;
t982 = (qJD(4) * t642 - t1232 * t904) * t640;
t948 = t108 * t1473 + t1497 * t642 + t1499 * t640;
t21 = (t1509 * t1516 + t1513) * t904 + (t1533 + t1561) * t903 + t948 + t1023;
t451 = t768 * t907 - t1556 * t1362 + (t770 - t1378) * t904;
t567 = (t1053 + t1495 - t1364 / 0.2e1) * t907;
t981 = -t21 * qJD(1) - t567 * qJD(2) - t451 * qJD(3);
t950 = t107 * t1473 + t1498 * t642 + t1500 * t640;
t22 = (t1160 - t1561) * t906 + (-t141 / 0.2e1 - t1516 * t1510 + t1182) * t904 + t950 + t1024;
t450 = -t767 * t907 + (t769 - 0.2e1 * t842) * t904;
t566 = (t1054 + t1496 + t1348 / 0.2e1) * t907;
t980 = -t22 * qJD(1) - t566 * qJD(2) + t450 * qJD(3);
t949 = t1484 * t458 - t1016;
t35 = t1079 * t903 + t1151 + t949;
t942 = (-t1361 / 0.2e1 + t904 * t1093) * t900;
t498 = t942 + t990;
t652 = -t1360 * t1556 - t768 * t904;
t979 = -qJD(1) * t35 - qJD(2) * t498 + qJD(3) * t652;
t951 = t1483 * t456 + t1017;
t36 = t1079 * t906 + t1158 + t951;
t941 = (-t1356 / 0.2e1 + t903 * t1095) * t900;
t499 = t941 - t991;
t651 = t1346 * t1556 - t767 * t904;
t978 = -qJD(1) * t36 - qJD(2) * t499 - qJD(3) * t651;
t977 = qJD(3) * t1001;
t976 = t1001 * qJD(1);
t196 = (-t1351 - t1424) * t907;
t212 = t456 ^ 2 - t458 ^ 2;
t974 = qJD(1) * t212 - qJD(3) * t196 - qJD(4) * t205;
t964 = t412 / 0.2e1 + t1345 / 0.2e1 + pkin(10) * t1147;
t963 = t561 + t350 / 0.2e1 + t363 / 0.2e1 - t1468 / 0.2e1;
t962 = t1131 / 0.2e1 + t907 * t1159;
t69 = t1076 * t903 + t1142 * t906 + t1184;
t743 = t984 * t903;
t960 = -qJ(5) * t1278 - qJD(1) * t69 - qJD(3) * t743;
t71 = t1076 * t906 - t1142 * t903 + t1185;
t744 = t984 * t906;
t959 = qJ(5) * t1280 - qJD(1) * t71 - qJD(3) * t744;
t940 = t1440 * t1519 + t1485 * t262 + t1512 * t852;
t29 = (t1445 / 0.2e1 + t1558) * pkin(10) + t940 + t1031;
t937 = pkin(4) * t1095 + t1052;
t489 = (t1220 * t863 + t937) * t900;
t958 = t852 * t863 * qJD(3) - t29 * qJD(1) - t489 * qJD(2);
t497 = t1111 + t1014;
t52 = t963 + t1021;
t636 = t962 - t1559;
t957 = qJD(1) * t52 + qJD(2) * t636 + qJD(3) * t497 + t894;
t467 = t1520 + t763;
t954 = qJD(1) * t467 + t1288 * t642 + t1281;
t944 = t976 - qJD(3);
t943 = qJD(4) * t1072 + t1274;
t839 = t874 * t898;
t939 = -qJD(1) * t196 - qJD(3) * t839 + 0.2e1 * t1103;
t938 = -qJD(1) * t205 + t1080 + t1129;
t934 = -t964 - t1532;
t893 = qJ(5) * qJD(5);
t888 = pkin(10) * t889;
t885 = t889 / 0.2e1;
t883 = t906 * t889;
t864 = t875 * qJD(4);
t847 = 0.2e1 * t907 * t1186;
t740 = t754 * qJD(3);
t695 = t1115 * t906;
t664 = -t1378 - t1347 / 0.2e1 + t1002 * t906;
t663 = t842 - t1363 / 0.2e1 + t1002 * t903;
t635 = t962 + t1559;
t582 = -t1292 * t904 - t1289;
t569 = t1053 * t907 + t1155 * t822 + t1473 * t773;
t568 = t1054 * t907 + t1149 * t822 + t1473 * t772;
t501 = t942 - t990;
t500 = t941 + t991;
t496 = t1111 - t1014;
t490 = t1097 * t863 + t900 * t937;
t486 = -t901 * t1203 / 0.2e1 + t1082 * t1375 + t921;
t484 = t932 + t923;
t454 = -qJD(4) * t637 + t1136 * t764;
t344 = t1147 * t903 + t614 + t706;
t326 = t754 + t1550;
t319 = t1506 + t1099;
t291 = t1146 * t906 + t1214 + t707;
t273 = t785 + t953;
t272 = t786 + t952;
t265 = t642 * t1149 + t1180 + t1391 / 0.2e1 + t903 * t1154;
t264 = t642 * t1155 + t1179 - t1393 / 0.2e1 - t715 / 0.2e1;
t260 = t1172 + t1013;
t259 = t506 + t1069;
t256 = t1176 + t973;
t238 = t1034 * t906 + t1474 * t456 + t706;
t235 = t1034 * t903 + t1473 * t458 + t707;
t227 = t1004 + t1011;
t226 = t1005 + t1006;
t201 = t205 * qJD(6);
t195 = t196 * qJD(6);
t174 = t1100 * t823 + t1163 * t767 + t1164 * t768 + t924 - t945;
t161 = t928 + t1340;
t158 = t1400 / 0.2e1 + t1012;
t157 = t964 + t1032;
t155 = t993 + t1341;
t152 = -t1019 * t904 + t1476 * t535 + t1480 * t536 - t588;
t150 = -t1413 / 0.2e1 + t710 * t1156 + t971 * t907 + t1008;
t147 = t1416 / 0.2e1 + t710 * t1148 + t972 * t907 + t1009;
t143 = t505 + t1177 + t931;
t117 = t919 - t1340;
t115 = t1502 + t934;
t113 = t987 + t927;
t81 = -t1380 / 0.2e1 + t397 * t1473 - t762 + t934;
t77 = t925 + t1619;
t72 = t906 * t1143 + t1185 - t1448 / 0.2e1 - t1352 / 0.2e1 - t1370 / 0.2e1;
t70 = t903 * t1143 + t1184 + t1182 - t1367 / 0.2e1 + t1355 / 0.2e1;
t57 = t1055 * t240 + t1056 * t239 + t1097 * t419 + t1159 * t374 - t1020 + t933;
t55 = pkin(4) * t1146 + qJ(5) * t1153 + t1141 * t904 - t1558;
t51 = t963 - t1021;
t50 = t920 - t1029;
t39 = t913 - t1591;
t38 = t172 * t1156 - t1368 / 0.2e1 + t1151 - t949;
t37 = t172 * t1149 - t1353 / 0.2e1 + t1158 - t951;
t30 = t1442 * t1519 + t1518 * t1526 + t1031 - t940;
t24 = t1100 * t458 + t1156 * t189 + t1157 * t172 + t1160 * t903 + t142 * t1478 - t1517 * t706 + t1023 - t948;
t23 = t1100 * t456 + t1148 * t189 + t141 * t1477 - t1517 * t707 + t1533 * t906 + t1024 - t950;
t19 = t1169 + (-t1453 / 0.2e1 - t1454 / 0.2e1) * t904 + (-t1389 / 0.2e1 - t1390 / 0.2e1) * t642 + t1022;
t7 = t915 - t946;
t6 = t107 * t1163 + t108 * t1164 + t1486 * t189 + t929 - t947;
t4 = t142 * t1149 + t108 * t1152 + t141 * t1155 + t107 * t1157 + (t1144 + t1515) * t906 + (t1145 + t1514) * t903 - t1015 + t1058 * t1627;
t2 = t916 + t930;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t899 * t1083, -t902 * t1083, t826 * qJD(2), t665 * qJD(2), -t587, t455 * qJD(3), t764 * t977, t587, t766 * t977, 0, qJD(2) * t487 + qJD(3) * t276, qJD(2) * t488 + qJD(3) * t275, qJD(2) * t411, qJD(2) * t177, t286, qJD(3) * t306 + t1543, -t1586, t982, -t1523, t587, qJD(3) * t74 + qJD(4) * t146 + t1608, qJD(3) * t75 + qJD(4) * t145 + t1607, qJD(3) * t67 + t1544, qJD(2) * t82 + qJD(3) * t63, t587, t1586, t1523, t286, -qJD(3) * t305 + t1543, t982, qJD(3) * t59 + qJD(4) * t53 - t640 * t761 + t1544, qJD(3) * t66 + qJD(4) * t78 + t1235 * t642 - t1608, qJD(3) * t65 + qJD(4) * t79 + qJD(5) * t467 - t1607, qJD(2) * t73 + qJD(3) * t44 + qJD(4) * t43 + qJD(5) * t111 (qJD(3) * t536 - qJD(6) * t456 + t1280 * t642) * t458, qJD(3) * t175 + qJD(4) * t194 + qJD(6) * t212, qJD(3) * t242 + qJD(4) * t284 - t1273 * t456 (qJD(3) * t535 + qJD(6) * t458 - t1278 * t642) * t456, qJD(3) * t241 + qJD(4) * t285 - t1273 * t458, t286, qJD(2) * t243 + qJD(3) * t27 + qJD(4) * t25 - qJD(5) * t255 + qJD(6) * t61, qJD(2) * t244 + qJD(3) * t28 + qJD(4) * t26 + qJD(5) * t303 + qJD(6) * t60, qJD(2) * t180 + qJD(3) * t17 + qJD(4) * t18 + qJD(5) * t193, qJD(2) * t31 + qJD(3) * t11 + qJD(4) * t10 + qJD(5) * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1036, -t1035, t1229, t1234, 0, 0, 0, 0, 0, 0, qJD(3) * t484 + t1294, qJD(3) * t486 + t1293, t1297, t1262 + (t1132 * t899 + t798 * t905 - t1205) * qJD(2) * t900, 0, 0, 0, 0, 0, 0, qJD(3) * t272 + t1613, t1614, t1594, qJD(3) * t57 + t1383 + t1525, 0, 0, 0, 0, 0, 0, t1594, qJD(3) * t273 - t1613, -t1614, qJD(3) * t39 + qJD(4) * t50 - qJD(5) * t336 + t1399 + t1525, 0, 0, 0, 0, 0, 0, qJD(3) * t147 + qJD(4) * t260 + qJD(6) * t227 + t1321, qJD(3) * t150 + qJD(4) * t158 + qJD(6) * t226 + t1320, qJD(3) * t113 + qJD(4) * t117 + t1327, t1430 + (t572 * t772 - t573 * t773 + t644) * qJD(2) + t7 * qJD(3) + t6 * qJD(4) + t161 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1188, t1240, t944 * t764, t1188, t944 * t766, 0, qJD(2) * t484 - qJD(3) * t419 + t1314, qJD(2) * t486 + qJD(3) * t418 + t1315, 0, 0, t1617, t1308 + t1624, t1621, t1623, t1598, t436, t1398 + t272 * qJD(2) + (t1081 * t904 - t419 * t907) * qJD(3) + t157 * qJD(4), t1397 - t1604 + (t1081 * t907 + t419 * t904) * qJD(3) + t155 * qJD(4), qJD(3) * t1061 + t1403 + t1574, t1411 + t57 * qJD(2) + (-t419 * pkin(3) + pkin(10) * t1061) * qJD(3), t436, -t1621, -t1598, t1617, -t1309 + t1624, t1623, qJD(3) * t1062 + qJD(4) * t55 + t1412 + t1574, t1404 + t273 * qJD(2) + (t1071 * t904 + t315 * t907) * qJD(3) + t81 * qJD(4) + t326 * qJD(5), t1405 + t1604 + (t1071 * t907 - t315 * t904) * qJD(3) + t77 * qJD(4) + t1189, t1426 + t39 * qJD(2) + (pkin(10) * t1062 + t315 * t852) * qJD(3) + t30 * qJD(4) + t115 * qJD(5), t256 * qJD(4) + t1599 + (-t1196 + t1295) * t536, t1263 + t152 * qJD(4) - t195 + (-t1418 + t1419) * t1224, t1259 + (t1377 * t764 + t536 * t904) * qJD(3) + t235 * qJD(4) + t265 * qJD(6), t259 * qJD(4) - t1599 + (t1195 + t1296) * t535, t1260 + (t1395 * t898 - t535 * t904) * qJD(3) + t238 * qJD(4) + t264 * qJD(6), -t1051 + t1629, t1432 + t147 * qJD(2) + (t138 * t904 + t1556 * t535 + (t764 * t767 + t1438) * t907) * qJD(3) + t23 * qJD(4) + t291 * qJD(5) + t38 * qJD(6), t1431 + t150 * qJD(2) + (-t139 * t904 + t1556 * t536 + (t764 * t768 - t1439) * t907) * qJD(3) + t24 * qJD(4) + t344 * qJD(5) + t37 * qJD(6), t1449 + t113 * qJD(2) + (-t768 * t535 + t767 * t536 + (t138 * t903 - t139 * t906) * t907) * qJD(3) + t4 * qJD(4) + t143 * qJD(5), t1452 + t7 * qJD(2) + (-t138 * t767 + t139 * t768 + t1556 * t249) * qJD(3) + t2 * qJD(4) + t19 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1622, t1585, t1074, t1622, -t1560, t740, qJD(3) * t157 + t1330 + t1628, qJD(3) * t155 + t1331 + t1587, 0, 0, t740, t1115 * t640, t1560, -t1622, t1585, t1622, t1420 + t55 * qJD(3) + (-t1408 + t1469) * qJD(4) - t1235, qJD(3) * t81 + t1457 - t1628, qJD(3) * t77 + t1456 - t1587 + t761, t1427 + t50 * qJD(2) + t30 * qJD(3) + (-pkin(4) * t240 - qJ(5) * t239) * qJD(4) + t179 * qJD(5), t256 * qJD(3) + t903 * t995 + t1542, t152 * qJD(3) - t1129 * t642 + t1261 - t201, qJD(3) * t235 - t634 * t906 + t1313, t259 * qJD(3) - t1563 * t906 - t1542, qJD(3) * t238 + t634 * t903 + t1312, t1538, t1437 + t260 * qJD(2) + t23 * qJD(3) + (-t1068 * t906 + t189 * t903) * qJD(4) + t319 * qJD(5) + t70 * qJD(6), t1436 + t158 * qJD(2) + t24 * qJD(3) + (t1068 * t903 + t189 * t906) * qJD(4) + qJD(5) * t458 + t72 * qJD(6), qJD(2) * t117 + qJD(3) * t4 - qJD(4) * t1063 + t1446, t1455 + t6 * qJD(2) + t2 * qJD(3) + (t189 * qJ(5) - t1063 * t1517) * qJD(4) + t51 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1074, qJD(3) * t326 + t1190, t954, qJD(3) * t115 + qJD(4) * t179 + t1332 - t1570, 0, 0, 0, 0, 0, 0, qJD(3) * t291 + qJD(4) * t319 - t1319, qJD(3) * t344 + qJD(4) * t458 + t1253, qJD(3) * t143 + t1324, qJD(2) * t161 + qJD(3) * t19 + qJD(4) * t51 + t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1583, t974, qJD(3) * t265 + t1114 * t456, t1583, qJD(3) * t264 + t1114 * t458, t454, qJD(2) * t227 + qJD(3) * t38 + qJD(4) * t70 - qJD(6) * t108 + t1458, qJD(2) * t226 + qJD(3) * t37 + qJD(4) * t72 + qJD(6) * t107 + t1459, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1036, t1035, -t1229, -t1234, 0, 0, 0, 0, 0, 0, -qJD(3) * t483 - t1294, qJD(3) * t485 - t1293, -t1297, -t1262, 0, 0, 0, 0, 0, 0, qJD(3) * t271 + t1618, -t1615, t1595, -qJD(3) * t56 - t1383, 0, 0, 0, 0, 0, 0, t1595, qJD(3) * t274 - t1618, t1615, qJD(3) * t40 + qJD(4) * t49 + qJD(5) * t926 - t1399, 0, 0, 0, 0, 0, 0, qJD(3) * t148 + qJD(4) * t261 - qJD(6) * t224 - t1321, qJD(3) * t149 + qJD(4) * t159 - qJD(6) * t225 - t1320, -qJD(3) * t112 + qJD(4) * t116 - t1327, qJD(3) * t8 - qJD(4) * t5 + qJD(5) * t162 - t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t628, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t629, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t362 + qJD(4) * t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1287 * t900 - t1239, -t1098 + t1238, 0, 0, 0, 0, 0, 0, 0, 0, t1256 - t1577, -t1593, t1602 (-pkin(3) * t1373 + t1335) * qJD(3) + t1049, 0, 0, 0, 0, 0, 0, t1602, t1255 + t1577, t1593 (t1373 * t852 + t1335) * qJD(3) + t490 * qJD(4) + t900 * qJD(5) * t1209 + t1050, 0, 0, 0, 0, 0, 0, t1266 + (t1108 * t898 + t802 * t904) * qJD(3) + t568 * qJD(4) + t501 * qJD(6), t1265 + (-t1109 * t898 - t803 * t904) * qJD(3) + t569 * qJD(4) + t500 * qJD(6), -t1268 + t385 * qJD(4) + (t802 * t903 - t803 * t906) * t1224 (t1207 * t1556 * t900 - t767 * t802 + t768 * t803) * qJD(3) + t174 * qJD(4) - t385 * qJD(5) + t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1592, -t1601, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, t1601, t1421 + t490 * qJD(3) + (-pkin(4) * t823 - t1382) * qJD(4) + t823 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(3) * t568 - t1230 * t903 + t1270 * t823 + t1316, qJD(3) * t569 - t1230 * t906 - t1272 * t823 + t1329, -t1333 * t813 + t1243 + t1267, t174 * qJD(3) + (-t1333 * t1517 * t823 - t1382) * qJD(4) + t635 * qJD(5) + t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t635 - t1243 + t1328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t501 + qJD(6) * t773 + t813 * t906 - t1323, qJD(3) * t500 - qJD(6) * t772 - t813 * t903 - t1322, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1188, -t1240, -t764 * t976, -t1188, -t766 * t976, 0, qJD(2) * t483 - t1314, -qJD(2) * t485 - t1315, 0, 0, t1625, -t1605 - t1308, t1620, t1616, -t1597, -t436, -qJD(2) * t271 + qJD(4) * t156 - t1398, qJD(4) * t154 - t1397 + t1569, -t1403 - t1573, qJD(2) * t56 - t1411, -t436, -t1620, t1597, t1625, -t1605 + t1309, t1616, qJD(4) * t54 + t761 * t907 - t1412 - t1573, -qJD(2) * t274 - qJD(4) * t80 - qJD(5) * t325 - t1404, qJD(4) * t76 + t1189 - t1405 - t1569, -qJD(2) * t40 - qJD(4) * t29 - qJD(5) * t114 - t1426, qJD(4) * t257 - t1295 * t536 + t1599, qJD(4) * t153 - t1263 - t195, qJD(4) * t236 + qJD(6) * t266 - t1259, qJD(4) * t258 - t1296 * t535 - t1599, qJD(4) * t237 + qJD(6) * t263 - t1260, -t1600 + t1051, -qJD(2) * t148 - qJD(4) * t22 + qJD(5) * t292 - qJD(6) * t35 - t1432, -qJD(2) * t149 - qJD(4) * t21 + qJD(5) * t343 - qJD(6) * t36 - t1431, qJD(2) * t112 - qJD(4) * t3 + qJD(5) * t144 - t1449, -qJD(2) * t8 - qJD(4) * t1 + qJD(5) * t20 - t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1239, -t1238, 0, 0, 0, 0, 0, 0, 0, 0, -t1256, t1551, -t1575, -t1049, 0, 0, 0, 0, 0, 0, -t1575, -t1255, -t1551, -qJD(4) * t489 - t1050, 0, 0, 0, 0, 0, 0, -qJD(4) * t566 - qJD(6) * t498 - t1266, -qJD(4) * t567 - qJD(6) * t499 - t1265, qJD(4) * t384 + t1268, -qJD(4) * t173 - qJD(5) * t384 - t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t880, t864, 0, -t880, 0, 0, -pkin(3) * t1279, -pkin(3) * t889, 0, 0, 0, 0, 0, t880, t864, -t880, 0, qJD(4) * t777 - t1274 * t904, -qJD(4) * t776 + qJD(5) * t896 (qJD(4) * t863 - t1276) * t852, -t880 * t895 + t1102, -qJD(6) * t839 - 0.2e1 * t1103 * t904, -qJD(4) * t838 - t1191 * t906, -t880 * t897 - t1102, -qJD(4) * t840 + t1191 * t903, t880, qJD(4) * t450 + qJD(6) * t652 + t1277 * t896, -qJD(4) * t451 - qJD(6) * t651 + t1275 * t896, -qJD(4) * t341 + qJD(5) * t814, qJD(4) * t342 - qJD(5) * t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1603, t1589, t1549, t1603, -t1528, -t1233, -t1027 - t888, -t1028 + t1219, 0, 0, -t1233, -t1549, t1528, -t1603, t1589, t1603, t943 + t1417, -t1046 + t888, -t1047 - t1219, pkin(10) * t943 + t958, t1318 - t1226 + (-t1224 * t895 + t881) * t904, t1264 + t847 + (-0.2e1 * t1101 - t1129) * t904, t1044 + t883, t1317 + t1226 + (-t1224 * t897 - t881) * t904, t1043 - t1192, -t1527 (-t906 * t1343 + (-qJ(5) * t906 - t1516 * t903) * t904) * qJD(4) + t906 * t1274 + t663 * qJD(6) + t980 (t903 * t1343 + (qJ(5) * t903 - t1516 * t906) * t904) * qJD(4) - t903 * t1274 + t664 * qJD(6) + t981, -qJD(4) * t1057 - t1539 (-qJ(5) * t1557 - t1057 * t1517) * qJD(4) + t496 * qJD(5) + t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t889 + t1187, -t1124, -t582, -t1000 + t888, 0, 0, 0, 0, 0, 0, t1289 * t903 + t1254 + t883, t1286 * t896 - t1192 + t1247, t1045, qJD(4) * t496 + t1540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1582, t939, -t1113 * t1346 + t1257, t1582, t1113 * t1360 + t1258, qJD(1) * t1146 + t885, qJD(4) * t663 - qJD(6) * t768 + t979, qJD(4) * t664 + qJD(6) * t767 + t978, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1622, -t1585, t996, -t1622, t997, t740, -qJD(3) * t156 - t1330 + t1571, -qJD(3) * t154 - t1331 + t1572, 0, 0, t740, -t996, -t997, t1622, -t1585, -t1622, -qJD(3) * t54 - t1420, qJD(3) * t80 - t1457 - t1571, -qJD(3) * t76 - t1456 - t1572 + t761, -qJD(2) * t49 + qJD(3) * t29 + qJD(5) * t561 - t1427, -qJD(3) * t257 - t1200 * t458 + t1542, -qJD(3) * t153 - t1261 - t201, -qJD(3) * t236 - t1272 * t642 - t1313, -qJD(3) * t258 + t1199 * t456 - t1542, -qJD(3) * t237 - t1270 * t642 - t1312, -t1538, -qJD(2) * t261 + qJD(3) * t22 + qJD(5) * t320 + qJD(6) * t69 - t1437, -qJD(2) * t159 + qJD(3) * t21 + qJD(6) * t71 + t761 * t906 - t1436, -qJD(2) * t116 + qJD(3) * t3 - t1446, qJD(2) * t5 + qJD(3) * t1 + qJD(5) * t52 - t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1552, t1553, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1552, -t1553, qJD(3) * t489 - t1421, 0, 0, 0, 0, 0, 0, qJD(3) * t566 - t1316, qJD(3) * t567 - t1329, -t1267 - t1290, qJD(3) * t173 + qJD(5) * t636 - t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1603, -t1589, -t1236, -t1603, t1237, t1233, t1027, t1028, 0, 0, t1233, t1236, -t1237, t1603, -t1589, -t1603, -t1417, t1046, t1047, -t958, t879 * t895 - t1226 - t1318, t1080 * t904 - t1264 + t847, -t1271 * t903 - t1044, t879 * t897 + t1226 - t1317, -t1270 * t904 - t1043, t1527, qJD(6) * t743 - t980, qJD(6) * t744 - t981, t1539, qJD(5) * t497 - t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t893, -t1186, t874 * qJD(6), 0, t1186, 0, 0, qJ(5) * t1270 + t1277, -qJ(5) * t1272 + t1275, 0, t893; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, t1119, 0, 0, 0, 0, 0, 0, t1040, t695, 0, t957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1596, t938, t1114 * t903 - t878, t1596, t994, t1030, t1269 * t903 - t960, t1269 * t906 - t959, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(1) * t640 - t1224) * t764, qJD(3) * t325 - t1190, -t954, qJD(3) * t114 - qJD(4) * t561 - t1332 - t1571, 0, 0, 0, 0, 0, 0, -qJD(3) * t292 - qJD(4) * t320 - qJD(6) * t388 + t1319, -t1253 - t343 * qJD(3) + (-t1273 - t1281) * t906, -qJD(3) * t144 - t1324, -qJD(2) * t162 - qJD(3) * t20 - qJD(4) * t52 - t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1552, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t636 + t1290 - t1328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1187, t1124, t582, t1000, 0, 0, 0, 0, 0, 0, t1038 * t903 - t1254, t1038 * t906 - t1247, -t1045, -qJD(4) * t497 - t1540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1115, -t1119, 0, 0, 0, 0, 0, 0, -t1040, -t695, 0, -t957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1123 - t1272, t994, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1583, -t974, -t266 * qJD(3) + t1563, -t1583, -t263 * qJD(3) + t995, t454, qJD(2) * t224 + qJD(3) * t35 - qJD(4) * t69 + qJD(5) * t388 - t1458, qJD(2) * t225 + qJD(3) * t36 - qJD(4) * t71 + t1275 * t642 - t1459, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t498 + t1323, qJD(3) * t499 + t1322, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1582, -t939, -t1257 + (t1195 + t1280) * t904, -t1582, -t1258 + (-t1196 + t1278) * t904, qJD(1) * t1147 + t885, -qJD(4) * t743 + t1276 * t903 - t979, -qJD(4) * t744 + t1275 * t904 - t978, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1596, -t938, t878 + t1200, -t1596, t1073, -t1030, t960, t959, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1123, t1073, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
