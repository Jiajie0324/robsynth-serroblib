% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:52:57
% EndTime: 2019-03-09 05:53:09
% DurationCPUTime: 3.66s
% Computational Cost: add. (5572->317), mult. (16655->580), div. (0->0), fcn. (17633->12), ass. (0->169)
t107 = sin(pkin(12));
t109 = sin(pkin(6));
t110 = cos(pkin(12));
t114 = sin(qJ(3));
t117 = cos(qJ(3));
t108 = sin(pkin(7));
t197 = cos(pkin(6));
t156 = t197 * t108;
t111 = cos(pkin(7));
t189 = t111 * t117;
t219 = (-t107 * t114 + t110 * t189) * t109 + t117 * t156;
t116 = cos(qJ(4));
t113 = sin(qJ(4));
t187 = t113 * qJ(5);
t208 = pkin(4) + pkin(11);
t218 = t208 * t116 + t187;
t179 = qJD(4) * t113;
t190 = t110 * t114;
t121 = t114 * t156 + (t107 * t117 + t111 * t190) * t109;
t58 = t121 * qJD(3);
t135 = -t116 * t58 - t179 * t219;
t217 = pkin(10) * t135;
t101 = qJD(4) * t116;
t136 = -t101 * t219 + t113 * t58;
t216 = t136 * pkin(10);
t215 = -t58 * qJ(5) + qJD(5) * t219;
t106 = t116 ^ 2;
t154 = qJD(4) * (t113 ^ 2 - t106);
t112 = sin(qJ(6));
t103 = t112 ^ 2;
t115 = cos(qJ(6));
t185 = -t115 ^ 2 + t103;
t153 = t185 * qJD(6);
t182 = qJD(3) * t114;
t120 = t121 * t113;
t57 = t219 * qJD(3);
t191 = t109 * t110;
t77 = t108 * t191 - t197 * t111;
t40 = -qJD(4) * t120 + (-t77 * qJD(4) + t57) * t116;
t52 = -t77 * t113 + t121 * t116;
t181 = qJD(3) * t117;
t161 = t108 * t181;
t193 = t108 * t114;
t168 = t113 * t193;
t66 = qJD(4) * t168 - t111 * t101 - t116 * t161;
t79 = t113 * t111 + t116 * t193;
t213 = t108 * (-t117 * t40 + t52 * t182) - t79 * t58 - t66 * t219;
t39 = qJD(4) * t52 + t57 * t113;
t51 = t77 * t116 + t120;
t67 = qJD(4) * t79 + t113 * t161;
t78 = -t116 * t111 + t168;
t212 = (-t117 * t39 + t51 * t182) * t108 - t78 * t58 + t67 * t219;
t176 = qJD(5) * t116;
t207 = pkin(5) + pkin(10);
t92 = t207 * t116;
t211 = qJD(4) * t218 - qJD(6) * t92 - t176;
t210 = 0.2e1 * t58;
t209 = 0.2e1 * qJD(5);
t206 = t39 * pkin(4);
t205 = t58 * pkin(4);
t183 = qJD(2) * t109;
t166 = t107 * t183;
t152 = t111 * t166;
t165 = t110 * t183;
t195 = t107 * t109;
t167 = pkin(1) * t197;
t97 = t110 * t167;
t62 = t197 * pkin(2) + t97 + (-pkin(9) * t111 - qJ(2)) * t195;
t200 = t111 * t62;
t201 = qJ(2) * t191 + t107 * t167;
t59 = (t111 * t191 + t156) * pkin(9) + t201;
t72 = (-pkin(9) * t107 * t108 - pkin(2) * t110 - pkin(1)) * t109;
t27 = -t181 * t200 - t72 * t161 - t117 * t165 + (qJD(3) * t59 + t152) * t114;
t49 = -t108 * t62 + t111 * t72;
t32 = -pkin(3) * t219 - t121 * pkin(10) + t49;
t144 = t108 * t72 + t200;
t129 = t144 * t114 + t117 * t59;
t37 = -t77 * pkin(10) + t129;
t151 = t108 * t166;
t44 = t58 * pkin(3) - t57 * pkin(10) + t151;
t10 = -t32 * t101 - t113 * t44 + t116 * t27 + t37 * t179;
t7 = t10 + t215;
t6 = -t39 * pkin(5) - t7;
t204 = t6 * t112;
t203 = t6 * t115;
t202 = t113 * t32 + t116 * t37;
t41 = -t112 * t219 - t51 * t115;
t21 = -t41 * qJD(6) + t39 * t112 + t58 * t115;
t199 = t21 * t115;
t198 = t40 * t113;
t196 = qJ(5) * t116;
t192 = t108 * t117;
t188 = t112 * t208;
t186 = t115 * t208;
t180 = qJD(4) * t112;
t178 = qJD(4) * t115;
t177 = qJD(4) * t117;
t175 = qJD(6) * t112;
t174 = qJD(6) * t115;
t173 = qJD(6) * t116;
t172 = qJD(6) * t208;
t171 = -0.2e1 * pkin(3) * qJD(4);
t170 = pkin(10) * t179;
t164 = t112 * t173;
t163 = t115 * t173;
t162 = t108 * t182;
t160 = t113 * t101;
t159 = t113 * t178;
t158 = t112 * t174;
t157 = -t113 * t37 + t116 * t32;
t155 = pkin(4) * t179 - t113 * qJD(5);
t150 = t112 * t159;
t17 = qJ(5) * t219 - t202;
t100 = pkin(10) * t101;
t148 = pkin(5) * t101 + t100;
t145 = -t116 * pkin(4) - t187;
t14 = t52 * pkin(5) + t208 * t219 - t157;
t36 = t77 * pkin(3) + t114 * t59 - t144 * t117;
t122 = -t52 * qJ(5) + t36;
t16 = t208 * t51 + t122;
t4 = t112 * t14 + t115 * t16;
t42 = t51 * t112 - t115 * t219;
t143 = t112 * t41 - t115 * t42;
t83 = -pkin(3) - t218;
t91 = t207 * t113;
t64 = t112 * t91 + t115 * t83;
t142 = -t40 * qJ(5) - t52 * qJD(5);
t11 = -t37 * t101 + t113 * t27 + t116 * t44 - t32 * t179;
t141 = -0.2e1 * t197 * t183;
t134 = -t40 * t112 - t52 * t174;
t23 = t40 * t115 - t52 * t175;
t133 = -t66 * t112 + t79 * t174;
t132 = -t66 * t115 - t79 * t175;
t131 = -t112 * t78 + t115 * t192;
t68 = t112 * t192 + t115 * t78;
t86 = t207 * t179;
t130 = -t86 + (t113 * t208 - t196) * qJD(6);
t128 = t145 * qJD(4) + t176;
t127 = t40 * pkin(5) - t208 * t58 - t11;
t126 = -(pkin(11) * t113 - t196) * qJD(4) - t155;
t125 = t129 * qJD(3);
t18 = pkin(4) * t219 - t157;
t8 = -t11 - t205;
t124 = t8 * t113 - t7 * t116 + (t113 * t17 + t116 * t18) * qJD(4);
t123 = t67 * t113 - t66 * t116 + (-t113 * t79 + t116 * t78) * qJD(4);
t28 = (t107 * t189 + t190) * t183 + t125;
t119 = t142 + t28;
t93 = 0.2e1 * t160;
t88 = -pkin(3) + t145;
t81 = -t112 * t101 - t113 * t174;
t80 = t115 * t101 - t113 * t175;
t76 = -qJ(5) * t101 + t155;
t74 = (t113 * t177 + t116 * t182) * t108;
t73 = (t113 * t182 - t116 * t177) * t108;
t63 = -t112 * t83 + t115 * t91;
t48 = t131 * qJD(6) - t112 * t162 + t115 * t67;
t47 = t68 * qJD(6) + t112 * t67 + t115 * t162;
t46 = -t64 * qJD(6) + t112 * t126 + t115 * t148;
t45 = -t112 * t148 + t115 * t126 - t91 * t174 + t83 * t175;
t24 = 0.2e1 * t52 * t40;
t22 = t52 * t101 + t198;
t20 = qJD(6) * t42 + t58 * t112 - t39 * t115;
t19 = t51 * pkin(4) + t122;
t15 = -t51 * pkin(5) - t17;
t12 = t119 + t206;
t3 = -t112 * t16 + t115 * t14;
t2 = -t4 * qJD(6) + t115 * t127 + (-t39 * pkin(11) - t114 * t165 - t117 * t152 - t125 - t142 - t206) * t112;
t1 = t16 * t175 - t14 * t174 - t112 * t127 - t115 * (t208 * t39 + t119);
t5 = [0, 0, 0, t107 * t141, t110 * t141, 0.2e1 * (t107 ^ 2 + t110 ^ 2) * t109 ^ 2 * qJD(2), 0.2e1 * (t201 * t110 + (qJ(2) * t195 - t97) * t107) * t183, 0.2e1 * t121 * t57, -0.2e1 * t121 * t58 + 0.2e1 * t219 * t57, -0.2e1 * t57 * t77, t77 * t210, 0, -0.2e1 * t151 * t219 + 0.2e1 * t28 * t77 + 0.2e1 * t49 * t58, 0.2e1 * t121 * t151 - 0.2e1 * t27 * t77 + 0.2e1 * t49 * t57, t24, -0.2e1 * t52 * t39 - 0.2e1 * t40 * t51, -0.2e1 * t219 * t40 + 0.2e1 * t52 * t58, 0.2e1 * t219 * t39 - 0.2e1 * t51 * t58, -t219 * t210, -0.2e1 * t11 * t219 + 0.2e1 * t157 * t58 + 0.2e1 * t28 * t51 + 0.2e1 * t36 * t39, -0.2e1 * t10 * t219 - 0.2e1 * t202 * t58 + 0.2e1 * t28 * t52 + 0.2e1 * t36 * t40, 0.2e1 * t17 * t39 + 0.2e1 * t18 * t40 + 0.2e1 * t7 * t51 + 0.2e1 * t8 * t52, -0.2e1 * t12 * t51 + 0.2e1 * t18 * t58 - 0.2e1 * t19 * t39 - 0.2e1 * t219 * t8, -0.2e1 * t12 * t52 - 0.2e1 * t17 * t58 - 0.2e1 * t19 * t40 + 0.2e1 * t219 * t7, 0.2e1 * t12 * t19 + 0.2e1 * t17 * t7 + 0.2e1 * t18 * t8, 0.2e1 * t42 * t21, -0.2e1 * t42 * t20 - 0.2e1 * t21 * t41, 0.2e1 * t21 * t52 + 0.2e1 * t42 * t40, -0.2e1 * t20 * t52 - 0.2e1 * t41 * t40, t24, 0.2e1 * t15 * t20 + 0.2e1 * t2 * t52 + 0.2e1 * t3 * t40 + 0.2e1 * t6 * t41, 0.2e1 * t1 * t52 + 0.2e1 * t15 * t21 - 0.2e1 * t4 * t40 + 0.2e1 * t6 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111 * t58 + t77 * t162, t111 * t57 + t77 * t161, 0, 0, 0, 0, 0, t212, t213, -t79 * t39 + t78 * t40 + t66 * t51 + t67 * t52, -t212, -t213, t17 * t66 + t18 * t67 - t7 * t79 + t8 * t78 + (-t117 * t12 + t19 * t182) * t108, 0, 0, 0, 0, 0, t79 * t20 + t68 * t40 - t66 * t41 + t48 * t52, t131 * t40 + t79 * t21 - t66 * t42 - t47 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t108 ^ 2 * t114 * t181 - 0.2e1 * t79 * t66 + 0.2e1 * t78 * t67, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t58, 0, -t28, t27, t22, -t113 * t39 + t40 * t116 + (-t113 * t52 - t116 * t51) * qJD(4), t136, -t135, 0, -pkin(3) * t39 - t28 * t116 + t36 * t179 - t216, -pkin(3) * t40 + t101 * t36 + t28 * t113 + t217 (t198 - t116 * t39 + (t113 * t51 + t116 * t52) * qJD(4)) * pkin(10) + t124, t12 * t116 - t179 * t19 - t88 * t39 - t76 * t51 + t216, -t101 * t19 - t12 * t113 - t88 * t40 - t76 * t52 - t217, pkin(10) * t124 + t12 * t88 + t19 * t76, -t42 * t163 + (-t116 * t21 + t179 * t42) * t112, -t143 * t179 + (t112 * t20 - t199 + (t112 * t42 + t115 * t41) * qJD(6)) * t116 (t180 * t52 + t21) * t113 + (qJD(4) * t42 + t134) * t116 (t178 * t52 - t20) * t113 + (-qJD(4) * t41 - t23) * t116, t22, t92 * t20 + t63 * t40 - t86 * t41 + t46 * t52 + (-t15 * t178 + t2) * t113 + (qJD(4) * t3 - t15 * t175 + t203) * t116, t92 * t21 - t64 * t40 - t86 * t42 + t45 * t52 + (t15 * t180 + t1) * t113 + (-qJD(4) * t4 - t15 * t174 - t204) * t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, -t161, 0, 0, 0, 0, 0, -t74, t73, t123, t74, -t73 (-t117 * t76 + t182 * t88) * t108 + t123 * pkin(10), 0, 0, 0, 0, 0 (-t178 * t79 + t48) * t113 + (qJD(4) * t68 + t132) * t116 (t180 * t79 - t47) * t113 + (qJD(4) * t131 - t133) * t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, -0.2e1 * t154, 0, 0, 0, t113 * t171, t116 * t171, 0, 0.2e1 * t76 * t116 - 0.2e1 * t179 * t88, -0.2e1 * t101 * t88 - 0.2e1 * t76 * t113, 0.2e1 * t88 * t76, -0.2e1 * t103 * t160 + 0.2e1 * t106 * t158, -0.2e1 * t106 * t153 - 0.4e1 * t116 * t150, 0.2e1 * t112 * t154 - 0.2e1 * t113 * t163, 0.2e1 * t113 * t164 + 0.2e1 * t115 * t154, t93, 0.2e1 * (-t178 * t92 + t46) * t113 + 0.2e1 * (qJD(4) * t63 - t86 * t115 - t175 * t92) * t116, 0.2e1 * (t180 * t92 + t45) * t113 + 0.2e1 * (-qJD(4) * t64 + t86 * t112 - t174 * t92) * t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t39, t58, t11, t10, -t40 * pkin(4) - qJ(5) * t39 - qJD(5) * t51, -t11 - 0.2e1 * t205, -t7 - t215, -pkin(4) * t8 - qJ(5) * t7 - qJD(5) * t17, -t175 * t42 + t199, qJD(6) * t143 - t21 * t112 - t115 * t20, t23, t134, 0, -t40 * t186 + qJ(5) * t20 + qJD(5) * t41 + t204 + (t115 * t15 + t188 * t52) * qJD(6), t40 * t188 + qJ(5) * t21 + qJD(5) * t42 + t203 + (-t112 * t15 + t186 * t52) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, t66, 0, t67, -t66, -t67 * pkin(4) - t66 * qJ(5) + t79 * qJD(5), 0, 0, 0, 0, 0, t133, t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, -t179, 0, -t100, t170, t128, t100, -t170, t128 * pkin(10), t116 * t153 + t150, 0.4e1 * t116 * t158 - t179 * t185, t80, t81, 0, t130 * t112 - t211 * t115, t211 * t112 + t130 * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, qJ(5) * t209, -0.2e1 * t158, 0.2e1 * t153, 0, 0, 0, 0.2e1 * qJ(5) * t174 + 0.2e1 * qJD(5) * t112, -0.2e1 * qJ(5) * t175 + 0.2e1 * qJD(5) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t58, 0, t8, 0, 0, 0, 0, 0, t23, t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, 0, 0, t100, 0, 0, 0, 0, 0, t80, t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t20, t40, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, -t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112 * t179 - t163, t159 + t164, t101, t46, t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t174, 0, t112 * t172, t115 * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
