% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:53:02
% EndTime: 2019-03-09 05:53:47
% DurationCPUTime: 28.21s
% Computational Cost: add. (25105->978), mult. (70355->1341), div. (0->0), fcn. (80816->12), ass. (0->722)
t578 = sin(pkin(6));
t579 = cos(pkin(12));
t582 = sin(qJ(3));
t577 = sin(pkin(7));
t980 = cos(pkin(6));
t742 = t980 * t577;
t714 = t582 * t742;
t979 = cos(pkin(7));
t743 = t582 * t979;
t576 = sin(pkin(12));
t994 = cos(qJ(3));
t791 = t994 * t576;
t470 = t714 + (t579 * t743 + t791) * t578;
t581 = sin(qJ(4));
t584 = cos(qJ(4));
t923 = t578 * t579;
t648 = t577 * t923 - t979 * t980;
t382 = t470 * t584 - t581 * t648;
t1015 = t382 / 0.2e1;
t796 = pkin(1) * t980;
t882 = qJ(2) * t923 + t576 * t796;
t459 = (t923 * t979 + t742) * pkin(9) + t882;
t556 = t579 * t796;
t925 = t576 * t578;
t471 = t980 * pkin(2) + t556 + (-pkin(9) * t979 - qJ(2)) * t925;
t491 = (-pkin(9) * t576 * t577 - pkin(2) * t579 - pkin(1)) * t578;
t711 = t979 * t994;
t795 = t577 * t994;
t243 = t582 * t459 - t471 * t711 - t491 * t795;
t238 = t584 * t243;
t468 = t582 * t925 - t711 * t923 - t742 * t994;
t988 = t468 * pkin(10);
t334 = pkin(3) * t470 + t988;
t322 = t581 * t334;
t885 = t238 / 0.2e1 - t322 / 0.2e1;
t936 = t470 * qJ(5);
t1071 = t936 - t885;
t798 = t581 * t925;
t732 = t577 * t798;
t713 = t576 * t743;
t790 = t994 * t579;
t497 = (-t713 + t790) * t578;
t892 = t584 * t497;
t429 = t732 + t892;
t675 = t576 * t711;
t922 = t579 * t582;
t496 = (t675 + t922) * t578;
t200 = t382 * t496 - t429 * t468;
t1066 = qJD(1) * t200;
t505 = t648 * t584;
t934 = t470 * t581;
t380 = t505 + t934;
t806 = -t994 / 0.2e1;
t717 = t380 * t806;
t924 = t577 * t582;
t512 = t581 * t924 - t584 * t979;
t1008 = -t512 / 0.2e1;
t767 = t468 * t1008;
t588 = t767 - t892 / 0.2e1 + (t717 - t798 / 0.2e1) * t577;
t513 = t581 * t979 + t584 * t924;
t1006 = t513 / 0.2e1;
t1016 = -t382 / 0.2e1;
t638 = t1006 * t470 + t1016 * t924;
t931 = t496 * t581;
t598 = t931 / 0.2e1 + t638;
t1070 = -qJD(3) * t598 - qJD(4) * t588 - t1066;
t797 = t584 * t925;
t731 = t577 * t797;
t907 = t581 * t497;
t428 = -t731 + t907;
t199 = t380 * t496 - t428 * t468;
t1067 = qJD(1) * t199;
t805 = t994 / 0.2e1;
t716 = t382 * t805;
t724 = t797 / 0.2e1;
t756 = -t907 / 0.2e1;
t766 = t468 * t1006;
t587 = t766 + t756 + (t716 + t724) * t577;
t1069 = -qJD(4) * t587 - t1067;
t624 = t577 * t717 + t767;
t187 = t892 / 0.2e1 + t732 / 0.2e1 + t624;
t204 = -t931 / 0.2e1 + t638;
t1068 = -qJD(3) * t204 - qJD(4) * t187 + t1066;
t941 = t382 * t584;
t770 = t941 / 0.2e1;
t999 = -t581 / 0.2e1;
t226 = t380 * t999 + t770;
t855 = qJD(1) * t382;
t229 = t380 * t855;
t1049 = -qJD(3) * t226 + t229;
t808 = t584 * qJD(3);
t562 = t581 * t808;
t1045 = qJD(1) * t226 + t562;
t1065 = qJD(2) * t199;
t1064 = qJD(2) * t200;
t1026 = pkin(4) + pkin(11);
t1063 = t1026 * t380;
t1062 = t204 * qJD(2);
t1035 = t587 * qJD(1);
t509 = t513 * qJD(4);
t722 = qJD(3) * t795;
t1061 = t581 * t722 + t1035 + t509;
t1034 = t588 * qJD(1);
t810 = t512 * qJD(4);
t1060 = t584 * t722 + t1034 - t810;
t1033 = t598 * qJD(1);
t747 = qJD(4) * t994;
t850 = qJD(3) * t582;
t1059 = t1033 + t577 * (-t581 * t850 + t584 * t747);
t908 = t581 * qJ(5);
t699 = -t584 * pkin(4) - t908;
t541 = -pkin(3) + t699;
t215 = pkin(3) * t648 + t243;
t943 = t382 * qJ(5);
t592 = t215 - t943;
t990 = t380 * pkin(4);
t141 = t592 + t990;
t963 = t141 * t581;
t1047 = t541 * t1015 + t963 / 0.2e1;
t359 = -t471 * t577 + t491 * t979;
t992 = pkin(10) * t470;
t705 = pkin(3) * t468 - t992;
t209 = t359 + t705;
t244 = t459 * t994 + t471 * t743 + t491 * t924;
t216 = -pkin(10) * t648 + t244;
t123 = -t209 * t584 + t216 * t581;
t1058 = -qJD(2) * t187 + qJD(4) * t123;
t1057 = t1026 * t584 + t908;
t1055 = -t468 / 0.2e1;
t792 = t584 * t994;
t1054 = t792 / 0.2e1;
t1052 = t577 * (t581 * t747 + t582 * t808);
t124 = t209 * t581 + t216 * t584;
t325 = t468 * qJ(5);
t78 = t124 + t325;
t1051 = -t78 + t124;
t218 = t226 * qJD(4);
t1050 = -t468 * t562 + t218;
t377 = t934 / 0.2e1 + t505 / 0.2e1;
t1046 = -qJD(6) * t377 - t1049;
t807 = t584 * qJD(6);
t745 = t807 / 0.2e1;
t1044 = t745 + t1045;
t1043 = qJD(2) * t587;
t1042 = qJD(2) * t588;
t623 = t577 * t716 + t766;
t597 = t907 / 0.2e1 - t731 / 0.2e1 + t623;
t1041 = qJD(2) * t597;
t1040 = qJD(2) * t598;
t573 = t581 ^ 2;
t575 = t584 ^ 2;
t558 = t575 - t573;
t1039 = qJD(3) * t558;
t580 = sin(qJ(6));
t572 = t580 ^ 2;
t583 = cos(qJ(6));
t574 = t583 ^ 2;
t557 = t572 - t574;
t739 = qJD(4) * t557;
t1028 = t382 ^ 2;
t1037 = t1028 * t580;
t1036 = t1028 * t583;
t839 = qJD(5) * t584;
t1032 = qJD(4) * t1057 - t839;
t671 = pkin(5) * t382 + t123;
t993 = pkin(5) * t380;
t76 = t78 - t993;
t1027 = t76 / 0.2e1;
t86 = t124 - t993;
t801 = t1027 - t86 / 0.2e1;
t1031 = -t581 * t801 + t584 * (t1026 * t1055 - t671 / 0.2e1);
t989 = t468 * pkin(4);
t104 = t123 - t989;
t748 = t123 / 0.2e1 - t104 / 0.2e1;
t749 = -t78 / 0.2e1 + t124 / 0.2e1;
t1030 = -t581 * t749 + t584 * t748;
t467 = t468 ^ 2;
t1025 = pkin(5) + pkin(10);
t978 = qJ(5) * t380;
t228 = pkin(4) * t382 + t978;
t1024 = -t228 / 0.2e1;
t237 = t581 * t243;
t1023 = -t237 / 0.2e1;
t373 = t380 * t583;
t938 = t468 * t580;
t268 = -t373 + t938;
t1022 = -t268 / 0.2e1;
t937 = t468 * t583;
t944 = t380 * t580;
t270 = t937 + t944;
t1021 = t270 / 0.2e1;
t906 = t581 * t583;
t433 = t468 * t906;
t935 = t470 * t580;
t311 = t433 + t935;
t1020 = t311 / 0.2e1;
t315 = t581 * t468;
t933 = t470 * t583;
t312 = -t315 * t580 + t933;
t1019 = t312 / 0.2e1;
t1018 = -t373 / 0.2e1;
t1017 = t380 / 0.2e1;
t1014 = -t429 / 0.2e1;
t466 = t470 * pkin(4);
t1013 = -t466 / 0.2e1;
t1012 = t470 / 0.2e1;
t515 = -pkin(3) - t1057;
t550 = t1025 * t581;
t896 = t583 * t550;
t472 = t515 * t580 - t896;
t1011 = -t472 / 0.2e1;
t728 = t580 * t795;
t898 = t583 * t512;
t476 = t728 + t898;
t1010 = -t476 / 0.2e1;
t793 = t583 * t994;
t727 = t577 * t793;
t914 = t580 * t512;
t477 = t727 - t914;
t1009 = -t477 / 0.2e1;
t1007 = -t513 / 0.2e1;
t570 = pkin(4) * t581;
t977 = qJ(5) * t584;
t697 = -pkin(11) * t581 + t977;
t518 = t570 - t697;
t1005 = t518 / 0.2e1;
t548 = t570 - t977;
t1004 = -t548 / 0.2e1;
t1003 = t550 / 0.2e1;
t551 = t1025 * t584;
t1002 = t551 / 0.2e1;
t1001 = -t572 / 0.2e1;
t1000 = -t580 / 0.2e1;
t998 = t581 / 0.2e1;
t997 = -t584 / 0.2e1;
t996 = t584 / 0.2e1;
t995 = t1026 / 0.2e1;
t991 = pkin(10) * t584;
t987 = t76 - t86;
t607 = -t1026 * t468 + t671;
t99 = t592 + t1063;
t46 = t580 * t99 - t583 * t607;
t179 = t1026 * t382 + t978;
t918 = t580 * t179;
t5 = -t671 * t268 + t46 * t380 + (-t583 * t987 - t918) * t382;
t986 = t5 * qJD(1);
t985 = t580 * t86;
t984 = t583 * t86;
t47 = t580 * t607 + t583 * t99;
t902 = t583 * t179;
t6 = -t671 * t270 + t47 * t380 + (t580 * t987 - t902) * t382;
t983 = t6 * qJD(1);
t884 = t238 - t322;
t158 = t884 - t936;
t132 = pkin(5) * t315 - t158;
t318 = t584 * t468;
t108 = -pkin(11) * t470 - t237 - t466 + (-pkin(5) * t468 - t334) * t584;
t904 = t583 * t108;
t730 = -pkin(4) * t315 + t244;
t159 = t468 * t697 + t730;
t919 = t580 * t159;
t53 = t904 - t919;
t7 = t132 * t268 + t311 * t76 + t318 * t46 + t382 * t53;
t982 = t7 * qJD(1);
t903 = t583 * t159;
t920 = t580 * t108;
t54 = t903 + t920;
t8 = t132 * t270 + t312 * t76 + t318 * t47 - t382 * t54;
t981 = t8 * qJD(1);
t25 = -t268 * t76 + t382 * t46;
t976 = qJD(1) * t25;
t26 = t270 * t76 - t382 * t47;
t975 = qJD(1) * t26;
t964 = t141 * t382;
t967 = t124 * t468;
t38 = -t228 * t380 - t964 + t967;
t974 = qJD(1) * t38;
t968 = t123 * t468;
t39 = t141 * t380 - t228 * t382 - t968;
t973 = qJD(1) * t39;
t48 = t468 * t78 - t964;
t972 = qJD(1) * t48;
t55 = -t215 * t380 + t968;
t971 = qJD(1) * t55;
t56 = t215 * t382 - t967;
t970 = qJD(1) * t56;
t657 = t1008 * t270 + t1009 * t380;
t939 = t429 * t583;
t768 = -t939 / 0.2e1;
t68 = t768 + t657;
t969 = qJD(1) * t68;
t966 = t132 * t580;
t965 = t132 * t583;
t962 = t141 * t584;
t17 = t104 * t124 - t123 * t78 + t141 * t228;
t961 = t17 * qJD(1);
t894 = t584 * t334;
t741 = -t237 - t894;
t160 = -t466 + t741;
t178 = qJ(5) * t318 + t730;
t18 = t104 * t160 + t141 * t178 - t158 * t78;
t960 = t18 * qJD(1);
t721 = -t795 / 0.2e1;
t589 = t228 * t721 + t512 * t749 - t513 * t748;
t667 = t428 * pkin(4) / 0.2e1 + qJ(5) * t1014;
t19 = t589 + t667;
t959 = t19 * qJD(1);
t21 = t1051 * t382 + (-t104 + t123) * t380;
t958 = t21 * qJD(1);
t957 = t215 * t581;
t956 = t215 * t584;
t22 = (-t989 / 0.2e1 - t748) * t584 + (-t325 / 0.2e1 + t749) * t581;
t955 = t22 * qJD(1);
t24 = t158 * t380 + t160 * t382 + (-t104 * t584 + t581 * t78) * t468;
t954 = t24 * qJD(1);
t27 = t78 * t470 - t178 * t382 + (-t158 + t962) * t468;
t953 = t27 * qJD(1);
t952 = t270 * t580;
t951 = t270 * t581;
t950 = t270 * t583;
t28 = t104 * t470 - t178 * t380 + (t160 + t963) * t468;
t949 = t28 * qJD(1);
t948 = t312 * t583;
t33 = t104 * t428 + t141 * t496 + t429 * t78;
t947 = t33 * qJD(1);
t34 = -t123 * t470 + t244 * t380 + (-t741 - t957) * t468;
t946 = t34 * qJD(1);
t35 = -t124 * t470 + t244 * t382 + (t884 - t956) * t468;
t945 = t35 * qJD(1);
t225 = t382 * t580;
t942 = t382 * t581;
t940 = t429 * t580;
t932 = t496 * t541;
t930 = t496 * t584;
t928 = t548 * t380;
t927 = t551 * t580;
t532 = t551 * t583;
t926 = t575 * t580;
t720 = t795 / 0.2e1;
t626 = t1010 * t468 + t268 * t720;
t900 = t583 * t428;
t915 = t580 * t496;
t691 = t900 - t915;
t646 = t691 * t581;
t910 = t580 * t582;
t501 = (t581 * t793 - t910) * t577;
t655 = t1006 * t311 + t1015 * t501;
t58 = -t646 / 0.2e1 + (t768 + t626) * t584 + t655;
t921 = t58 * qJD(1);
t917 = t580 * t268;
t916 = t580 * t428;
t913 = t580 * t518;
t912 = t580 * t550;
t911 = t580 * t581;
t909 = t580 * t584;
t905 = t582 * t583;
t901 = t583 * t268;
t899 = t583 * t496;
t897 = t583 * t518;
t895 = t583 * t584;
t893 = t584 * t380;
t625 = t1009 * t468 + t270 * t720;
t690 = t899 + t916;
t645 = t690 * t581;
t794 = t581 * t994;
t502 = (t580 * t794 + t905) * t577;
t654 = t1006 * t312 + t1016 * t502;
t769 = t940 / 0.2e1;
t59 = t645 / 0.2e1 + (t769 + t625) * t584 + t654;
t891 = t59 * qJD(1);
t341 = t895 * t225;
t773 = t268 * t999;
t62 = -t341 + (t951 / 0.2e1 + t1020) * t583 + (t773 + t1019) * t580;
t890 = t62 * qJD(1);
t77 = -t268 * t312 - t270 * t311;
t889 = t77 * qJD(1);
t83 = (t1014 + t624) * t584 + (-t428 / 0.2e1 + t623) * t581;
t888 = t83 * qJD(1);
t100 = -t917 + t950;
t89 = t100 * t382;
t887 = t89 * qJD(1);
t651 = -t915 / 0.2e1 + t900 / 0.2e1;
t656 = t1006 * t270 + t1015 * t477;
t111 = t651 - t656;
t881 = qJD(1) * t111;
t652 = -t916 / 0.2e1 - t899 / 0.2e1;
t658 = t1007 * t268 + t1010 * t382;
t112 = t652 - t658;
t880 = qJD(1) * t112;
t127 = t268 * t429 + t382 * t691;
t879 = qJD(1) * t127;
t128 = t270 * t429 - t382 * t690;
t878 = qJD(1) * t128;
t136 = -t268 * t468 - t1037;
t877 = qJD(1) * t136;
t761 = t911 / 0.2e1;
t627 = t1001 * t941 + t270 * t761;
t138 = -t948 / 0.2e1 + t627;
t876 = qJD(1) * t138;
t659 = t1008 * t268 + t1010 * t380;
t140 = -t940 / 0.2e1 + t659;
t875 = qJD(1) * t140;
t703 = t770 + t1012;
t772 = -t951 / 0.2e1;
t142 = t772 + t433 / 0.2e1 + t703 * t580;
t874 = qJD(1) * t142;
t145 = -t703 * t583 + (t1022 + t938 / 0.2e1) * t581;
t873 = qJD(1) * t145;
t152 = -t243 * t648 - t359 * t468;
t872 = qJD(1) * t152;
t153 = t244 * t648 + t359 * t470;
t871 = qJD(1) * t153;
t161 = -t270 * t380 + t1037;
t870 = qJD(1) * t161;
t162 = t268 * t380 + t1036;
t869 = qJD(1) * t162;
t799 = t382 * t911;
t167 = t318 * t583 + t799;
t868 = qJD(1) * t167;
t170 = -t380 * t429 + t382 * t428;
t867 = qJD(1) * t170;
t171 = t270 * t468 + t1036;
t866 = qJD(1) * t171;
t183 = t380 * t470 - t467 * t581;
t865 = qJD(1) * t183;
t184 = t382 * t470 - t467 * t584;
t864 = qJD(1) * t184;
t360 = t382 * t906;
t201 = -t318 * t580 + t360;
t859 = qJD(1) * t201;
t858 = qJD(1) * t270;
t800 = t577 * t925;
t290 = t468 * t800 + t496 * t648;
t857 = qJD(1) * t290;
t291 = t470 * t800 + t497 * t648;
t856 = qJD(1) * t291;
t854 = qJD(1) * t468;
t853 = qJD(3) * t573;
t852 = qJD(3) * t577;
t851 = qJD(3) * t581;
t849 = qJD(3) * t583;
t847 = qJD(4) * t124;
t846 = qJD(4) * t468;
t845 = qJD(4) * t580;
t844 = qJD(4) * t581;
t843 = qJD(4) * t583;
t569 = qJD(4) * t584;
t842 = qJD(5) * t580;
t841 = qJD(5) * t581;
t840 = qJD(5) * t583;
t838 = qJD(6) * t382;
t837 = qJD(6) * t580;
t836 = qJD(6) * t581;
t835 = qJD(6) * t583;
t834 = qJD(6) * t1026;
t125 = t268 * t318 - t311 * t382;
t833 = t125 * qJD(1);
t126 = -t270 * t318 + t312 * t382;
t832 = t126 * qJD(1);
t485 = t930 / 0.2e1;
t763 = t924 / 0.2e1;
t639 = t1008 * t470 + t380 * t763;
t148 = t485 + t639;
t831 = t148 * qJD(1);
t486 = -t930 / 0.2e1;
t151 = t486 - t639;
t830 = t151 * qJD(1);
t692 = t893 + t942;
t173 = t692 * t468;
t829 = t173 * qJD(1);
t267 = -t470 ^ 2 + t467;
t819 = t267 * qJD(1);
t593 = t1012 * t979 + t648 * t763;
t595 = (-t922 / 0.2e1 - t675 / 0.2e1) * t578;
t286 = t595 - t593;
t818 = t286 * qJD(1);
t590 = t1055 * t979 + t648 * t720;
t288 = (t790 / 0.2e1 - t713 / 0.2e1) * t578 + t590;
t817 = t288 * qJD(1);
t816 = t315 * qJD(1);
t815 = t318 * qJD(1);
t376 = t380 * qJD(4);
t814 = t380 * qJD(5);
t399 = (t882 * t579 + (qJ(2) * t925 - t556) * t576) * t578;
t813 = t399 * qJD(1);
t708 = t743 / 0.2e1;
t460 = t714 / 0.2e1 + (t791 / 0.2e1 + t579 * t708) * t578;
t812 = t460 * qJD(1);
t465 = t468 * qJD(5);
t811 = t470 * qJD(3);
t516 = (t576 ^ 2 + t579 ^ 2) * t578 ^ 2;
t809 = t516 * qJD(1);
t804 = pkin(10) * t844;
t803 = pkin(10) * t998;
t802 = t991 / 0.2e1;
t789 = t380 * t854;
t788 = t580 * t855;
t787 = t580 * t808;
t786 = t583 * t808;
t785 = t580 * t843;
t784 = t580 * t569;
t783 = t581 * t807;
t782 = t470 * t854;
t781 = t468 * t811;
t780 = t584 * t854;
t563 = t581 * t569;
t779 = t382 * t841;
t565 = t583 * t569;
t778 = t580 * t835;
t777 = qJ(5) * t1022;
t776 = qJ(5) * t1021;
t775 = qJ(5) * t1019;
t771 = t373 / 0.2e1;
t764 = t382 * t1002;
t762 = -t920 / 0.2e1;
t760 = -t909 / 0.2e1;
t759 = t909 / 0.2e1;
t758 = -t315 / 0.2e1;
t757 = t315 / 0.2e1;
t755 = t904 / 0.2e1;
t754 = -t895 / 0.2e1;
t753 = t895 / 0.2e1;
t752 = -t318 / 0.2e1;
t751 = t318 / 0.2e1;
t750 = t382 * t995;
t746 = -t808 / 0.2e1;
t744 = t578 * t980;
t740 = t532 - t913;
t185 = t460 + t226;
t738 = qJD(1) * t185 + t562;
t561 = t580 * t851;
t737 = qJD(1) * t225 + t561;
t735 = qJD(4) + t854;
t734 = -qJD(6) - t855;
t733 = qJD(6) + t851;
t729 = t577 * t794;
t726 = t580 * t565;
t725 = t580 * t786;
t425 = t580 * t751;
t426 = t583 * t752;
t723 = t938 + t1018;
t719 = -t794 / 0.2e1;
t718 = t793 / 0.2e1;
t712 = -t988 / 0.2e1 - t334 / 0.2e1;
t710 = qJD(1) * t744;
t709 = qJD(2) * t744;
t707 = -t159 / 0.2e1 + t76 * t996;
t704 = 0.2e1 * t725;
t702 = t750 + t179 / 0.2e1;
t701 = -t376 - t789;
t564 = t581 * t849;
t700 = t583 * t855 + t564;
t698 = t468 * t541 + t992;
t695 = t943 - t1063;
t693 = -t158 * t584 + t160 * t581;
t689 = t897 + t927;
t688 = t580 * t720;
t687 = t577 * t718;
t271 = t382 * t780;
t686 = t468 * t745 + t271;
t586 = (t178 * t806 + t141 * t582 / 0.2e1 + t78 * t1054 + t104 * t794 / 0.2e1) * t577 + t158 * t1007 + t160 * t512 / 0.2e1;
t660 = t428 * t999 + t429 * t997;
t16 = -t932 / 0.2e1 + t660 * pkin(10) + t586;
t372 = -t512 * t729 + (-t513 * t792 + t582 * t795) * t577;
t685 = t16 * qJD(1) - t372 * qJD(2);
t594 = pkin(10) * t758 - t962 / 0.2e1 + t228 * t999 + t541 * t1017 + t382 * t1004;
t36 = t594 - t1071;
t478 = t541 * t584 + t548 * t581;
t684 = -qJD(1) * t36 + qJD(3) * t478;
t40 = -t466 + t1023 + t928 / 0.2e1 + (t1024 + t712) * t584 + t1047;
t479 = -t541 * t581 + t548 * t584;
t683 = qJD(1) * t40 - qJD(3) * t479;
t682 = qJ(5) * qJD(4) + qJD(1) * t325;
t120 = t799 + (t944 / 0.2e1 + t1021 + t937 / 0.2e1) * t584;
t528 = t558 * t580;
t681 = qJD(1) * t120 - qJD(3) * t528;
t121 = t360 + (t771 + t1022 - t938 / 0.2e1) * t584;
t530 = t558 * t583;
t680 = qJD(1) * t121 - qJD(3) * t530;
t180 = t380 ^ 2 - t1028;
t679 = qJD(1) * t180 - qJD(3) * t692;
t678 = -qJD(1) * t692 + t1039;
t182 = t771 + t723;
t677 = qJD(1) * t182 + t845;
t676 = -t836 - t853;
t674 = t576 * t710;
t673 = t579 * t710;
t672 = t942 + t893 / 0.2e1;
t670 = pkin(3) * t1016 + t957 / 0.2e1;
t669 = -t158 * qJ(5) / 0.2e1 - t160 * pkin(4) / 0.2e1;
t668 = qJD(1) * t377 + t746;
t628 = t584 * t712 + t1023;
t65 = t628 + t670;
t666 = pkin(3) * t851 - qJD(1) * t65;
t642 = pkin(10) * t757 + pkin(3) * t1017 + t956 / 0.2e1;
t63 = t642 - t885;
t665 = pkin(3) * t808 - qJD(1) * t63;
t662 = qJ(5) * t1020 + t966 / 0.2e1;
t661 = t1004 * t141 + t1024 * t541;
t653 = -t917 / 0.2e1 + t950 / 0.2e1;
t650 = t581 * t995 - t977 / 0.2e1;
t49 = t1013 + t628 + t1047;
t649 = qJD(1) * t49 + t541 * t851;
t647 = qJD(4) * t460 + t782;
t644 = (t843 + t858) * t382;
t643 = t583 * t734 - t564;
t641 = t476 * t999 + t513 * t754;
t640 = t477 * t999 + t513 * t759;
t637 = (t573 + t575) * t994;
t636 = t1005 + t650;
t473 = t515 * t583 + t912;
t610 = t47 * t996 - t473 * t380 / 0.2e1 + t270 * t1003;
t1 = t775 + (t132 / 0.2e1 + t382 * t1005 + t179 * t998) * t583 + t1031 * t580 + t610;
t263 = t689 * t581 - t551 * t911 + (t473 - t912) * t584;
t327 = (t687 + t1009 - t914 / 0.2e1) * t584;
t635 = -t1 * qJD(1) - t327 * qJD(2) - t263 * qJD(3);
t591 = t1003 * t268 + t1011 * t380 + t1016 * t740 + t46 * t996;
t2 = t179 * t761 + (-t1031 + t764) * t583 + t591 + t662;
t262 = (-t472 - t896) * t584 + (t740 - t532) * t581;
t326 = (t688 + t1010 + t898 / 0.2e1) * t584;
t634 = -t2 * qJD(1) - t326 * qJD(2) + t262 * qJD(3);
t611 = t47 * t998 + t473 * t1015 - t551 * t270 / 0.2e1;
t11 = t580 * t707 + t611 + t755;
t604 = (-t910 / 0.2e1 + t581 * t718) * t577;
t296 = t604 + t640;
t387 = -t473 * t581 - t551 * t909;
t633 = -qJD(1) * t11 - qJD(2) * t296 + qJD(3) * t387;
t612 = t1002 * t268 + t1011 * t382 + t46 * t999;
t12 = t583 * t707 + t612 + t762;
t603 = (-t905 / 0.2e1 + t580 * t719) * t577;
t297 = t603 - t641;
t386 = -t472 * t581 + t551 * t895;
t632 = -qJD(1) * t12 - qJD(2) * t297 - qJD(3) * t386;
t105 = t268 ^ 2 - t270 ^ 2;
t91 = (-t901 - t952) * t584;
t631 = qJD(1) * t105 - qJD(3) * t91 - qJD(4) * t100;
t630 = qJD(3) * t648;
t629 = t648 * qJD(1);
t619 = t237 / 0.2e1 + t894 / 0.2e1 + pkin(10) * t752;
t599 = pkin(4) * t719 + qJ(5) * t1054;
t292 = (t548 * t805 + t599) * t577;
t9 = pkin(10) * t1030 + t661 + t669;
t618 = t541 * t548 * qJD(3) - t9 * qJD(1) - t292 * qJD(2);
t29 = t580 * t702 + t583 * t801 + t776;
t451 = t636 * t580;
t617 = -qJ(5) * t843 - qJD(1) * t29 - qJD(3) * t451;
t31 = -t580 * t801 + t583 * t702 + t777;
t452 = t636 * t583;
t616 = qJ(5) * t845 - qJD(1) * t31 - qJD(3) * t452;
t165 = t653 * t584;
t169 = -t901 / 0.2e1 - t952 / 0.2e1;
t615 = qJD(3) * t165 - qJD(4) * t169 + t268 * t858;
t517 = (t574 / 0.2e1 + t1001) * t584;
t614 = -qJD(1) * t169 + qJD(3) * t517 + t785;
t274 = t1028 + t467;
t613 = qJD(1) * t274 + t382 * t851 + t846;
t606 = t629 - qJD(3);
t605 = qJD(4) * t699 + t839;
t529 = t557 * t575;
t602 = -qJD(1) * t91 - qJD(3) * t529 + 0.2e1 * t726;
t601 = -qJD(1) * t100 + t704 + t739;
t600 = -qJD(1) * t165 - qJD(4) * t517 + t849 * t926;
t596 = -t619 - t1047;
t568 = pkin(10) * t569;
t567 = t569 / 0.2e1;
t536 = 0.2e1 * t584 * t778;
t511 = t517 * qJD(6);
t450 = t460 * qJD(3);
t416 = t735 * t583;
t398 = -t927 - t897 / 0.2e1 + t650 * t583;
t397 = t532 - t913 / 0.2e1 + t650 * t580;
t337 = -t581 * t855 - t853;
t329 = t477 * t996 + t512 * t759 + t584 * t687;
t328 = t476 * t996 + t512 * t754 + t584 * t688;
t299 = t604 - t640;
t298 = t603 + t641;
t293 = t548 * t721 + t577 * t599;
t289 = -t578 * t790 / 0.2e1 + t708 * t925 + t590;
t287 = t595 + t593;
t266 = -qJD(4) * t377 + t468 * t746;
t202 = t580 * t752 + t360 + t425;
t196 = t577 * t724 - t623 + t756;
t186 = t460 - t226;
t181 = t1018 + t723;
t174 = t692 * qJD(4);
t168 = t169 * qJD(6);
t166 = t583 * t751 + t426 + t799;
t164 = t165 * qJD(6);
t163 = (-t468 * t808 - t376) * t382;
t150 = t485 - t639;
t149 = t486 + t639;
t144 = t382 * t754 + t773 + t933 / 0.2e1 + t580 * t758;
t143 = t382 * t759 + t772 - t935 / 0.2e1 - t433 / 0.2e1;
t139 = t769 + t659;
t137 = t948 / 0.2e1 + t627;
t122 = t268 * t997 + t583 * t672 + t425;
t119 = t270 * t996 + t580 * t672 + t426;
t114 = t651 + t656;
t113 = t652 + t658;
t96 = t100 * qJD(6);
t90 = t91 * qJD(6);
t84 = (t581 * t716 + t584 * t717) * t577 + (t512 * t997 + t513 * t998) * t468 - t660;
t67 = t939 / 0.2e1 + t657;
t66 = t619 + t670;
t64 = t642 + t885;
t61 = -t341 - t583 * t311 / 0.2e1 + t312 * t1000 + t653 * t581;
t60 = -t645 / 0.2e1 + t429 * t760 + t625 * t584 + t654;
t57 = t646 / 0.2e1 + t429 * t753 + t626 * t584 + t655;
t50 = t1013 + t596;
t41 = -t928 / 0.2e1 + t228 * t996 - t466 + t596;
t37 = t594 + t1071;
t32 = t583 * t750 + t777 + t76 * t1000 - t902 / 0.2e1 - t985 / 0.2e1;
t30 = t580 * t750 + t776 + t583 * t1027 - t918 / 0.2e1 + t984 / 0.2e1;
t23 = pkin(4) * t751 + qJ(5) * t757 - t1030;
t20 = t589 - t667;
t15 = t932 / 0.2e1 + t429 * t802 + t428 * t803 + t586;
t14 = t76 * t760 - t919 / 0.2e1 + t755 - t611;
t13 = t76 * t754 - t903 / 0.2e1 + t762 - t612;
t10 = -t123 * t991 / 0.2e1 + t104 * t802 - t661 + t669 + t1051 * t803;
t4 = t689 * t1016 + (t902 + t985) * t999 + t580 * t764 - t671 * t760 + t76 * t761 - t1026 * t425 + t775 + t965 / 0.2e1 - t610;
t3 = (-t918 + t984) * t998 + t532 * t1016 - t671 * t753 - t76 * t906 / 0.2e1 - t1026 * t426 - t591 + t662;
t42 = [0, 0, 0, -t576 * t709, -t579 * t709, t516 * qJD(2), t399 * qJD(2), -t781, t267 * qJD(3), t468 * t630, t470 * t630, 0, qJD(2) * t290 + qJD(3) * t153, qJD(2) * t291 + qJD(3) * t152, t163, qJD(3) * t173 + qJD(4) * t180, qJD(3) * t184 - t376 * t468, -qJD(3) * t183 - t382 * t846, t781, qJD(3) * t34 + qJD(4) * t56 + t1065, qJD(3) * t35 + qJD(4) * t55 + t1064, qJD(2) * t170 + qJD(3) * t24 + qJD(4) * t21 - t380 * t465, qJD(3) * t28 + qJD(4) * t38 + t382 * t814 - t1065, qJD(3) * t27 + qJD(4) * t39 + qJD(5) * t274 - t1064, qJD(2) * t33 + qJD(3) * t18 + qJD(4) * t17 + qJD(5) * t48 (qJD(3) * t312 - qJD(6) * t268 + t382 * t845) * t270, qJD(3) * t77 + qJD(4) * t89 + qJD(6) * t105, qJD(3) * t126 + qJD(4) * t161 - t268 * t838, qJD(3) * t125 + qJD(4) * t162 - t270 * t838, t163, qJD(2) * t127 + qJD(3) * t7 + qJD(4) * t5 - qJD(5) * t136 + qJD(6) * t26, qJD(2) * t128 + qJD(3) * t8 + qJD(4) * t6 + qJD(5) * t171 + qJD(6) * t25; 0, 0, 0, -t674, -t673, t809, t813, 0, 0, 0, 0, 0, qJD(3) * t287 + t857, qJD(3) * t289 + t856, 0, 0, 0, 0, 0, qJD(3) * t149 + qJD(4) * t196 + t1067, t1068, qJD(3) * t84 + t867, qJD(3) * t150 + qJD(4) * t597 - t1067, -t1068, t947 + (t428 * t512 + t429 * t513 - t496 * t795) * qJD(2) + t15 * qJD(3) + t20 * qJD(4) + t597 * qJD(5), 0, 0, 0, 0, 0, qJD(3) * t57 + qJD(4) * t139 + qJD(6) * t114 + t879, qJD(3) * t60 + qJD(4) * t67 + qJD(6) * t113 + t878; 0, 0, 0, 0, 0, 0, 0, -t782, t819, t606 * t468, t606 * t470, 0, qJD(2) * t287 - qJD(3) * t244 + t871, qJD(2) * t289 + qJD(3) * t243 + t872, -t271 + t1050, -t1039 * t468 - t174 + t829, t581 * t811 + t864, t470 * t808 - t865, t647, t946 + t149 * qJD(2) + (-t244 * t584 + t581 * t705) * qJD(3) + t66 * qJD(4), t945 - t1062 + (t244 * t581 + t584 * t705) * qJD(3) + t64 * qJD(4), qJD(2) * t84 + qJD(3) * t693 + qJD(4) * t23 + t954, t949 + t150 * qJD(2) + (t178 * t584 + t581 * t698) * qJD(3) + t41 * qJD(4) + t186 * qJD(5), t953 + t1062 + (-t178 * t581 + t584 * t698) * qJD(3) + t37 * qJD(4) + t779, t960 + t15 * qJD(2) + (pkin(10) * t693 + t178 * t541) * qJD(3) + t10 * qJD(4) + t50 * qJD(5), qJD(4) * t137 - t164 + (-t787 + t858) * t312, t889 + t61 * qJD(4) - t90 + (t311 * t580 - t948) * t808, t832 + (t312 * t581 + t468 * t926) * qJD(3) + t119 * qJD(4) + t144 * qJD(6), t833 + (-t311 * t581 + t575 * t937) * qJD(3) + t122 * qJD(4) + t143 * qJD(6), -t686 + t1050, t982 + t57 * qJD(2) + (t311 * t551 + t53 * t581 + (t468 * t472 + t965) * t584) * qJD(3) + t3 * qJD(4) + t166 * qJD(5) + t14 * qJD(6), t981 + t60 * qJD(2) + (t312 * t551 - t54 * t581 + (t468 * t473 - t966) * t584) * qJD(3) + t4 * qJD(4) + t202 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1049, t679, t701, -t735 * t382, t450, qJD(2) * t196 + qJD(3) * t66 - t847 + t970, qJD(3) * t64 + t1058 + t971, t958 + t23 * qJD(3) + (-t943 + t990) * qJD(4) - t814, qJD(3) * t41 + t1041 + t847 + t974, qJD(3) * t37 - t1058 + t465 + t973, t961 + t20 * qJD(2) + t10 * qJD(3) + (-pkin(4) * t124 - qJ(5) * t123) * qJD(4) + t78 * qJD(5), qJD(3) * t137 + t580 * t644 + t168, t61 * qJD(3) - t382 * t739 + t887 - t96, qJD(3) * t119 - t376 * t583 + t870, qJD(3) * t122 + t376 * t580 + t869, t1046, t986 + t139 * qJD(2) + t3 * qJD(3) + (-t580 * t671 - t583 * t695) * qJD(4) + t181 * qJD(5) + t30 * qJD(6), t983 + t67 * qJD(2) + t4 * qJD(3) + (t580 * t695 - t583 * t671) * qJD(4) + qJD(5) * t270 + t32 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701, qJD(3) * t186 + t229, t613, qJD(3) * t50 + qJD(4) * t78 + t1041 + t972, 0, 0, 0, 0, 0, qJD(3) * t166 + qJD(4) * t181 - t877, qJD(3) * t202 + qJD(4) * t270 + t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t615, t631, qJD(3) * t144 + t268 * t734, qJD(3) * t143 + t270 * t734, t266, qJD(2) * t114 + qJD(3) * t14 + qJD(4) * t30 - qJD(6) * t47 + t975, qJD(2) * t113 + qJD(3) * t13 + qJD(4) * t32 + qJD(6) * t46 + t976; 0, 0, 0, t674, t673, -t809, -t813, 0, 0, 0, 0, 0, -qJD(3) * t286 - t857, qJD(3) * t288 - t856, 0, 0, 0, 0, 0, qJD(3) * t148 + t1069, t1070, qJD(3) * t83 - t867, qJD(3) * t151 - t1069, -t1070, qJD(3) * t16 + qJD(4) * t19 + qJD(5) * t587 - t947, 0, 0, 0, 0, 0, qJD(3) * t58 + qJD(4) * t140 - qJD(6) * t111 - t879, qJD(3) * t59 + qJD(4) * t68 - qJD(6) * t112 - t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t372, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t577 * t850 - t818, -t722 + t817, 0, 0, 0, 0, 0, t831 - t1052, -t1059, t637 * t852 + t888, t830 + t1052, t1059 (pkin(10) * t637 + t541 * t582) * t852 + t293 * qJD(4) + qJD(5) * t729 + t685, 0, 0, 0, 0, 0, t921 + (t501 * t581 + t575 * t727) * qJD(3) + t328 * qJD(4) + t299 * qJD(6), t891 + (-t502 * t581 - t575 * t728) * qJD(3) + t329 * qJD(4) + t298 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1061, -t1060, 0, t1061, t1060, t959 + t293 * qJD(3) + (-pkin(4) * t513 - qJ(5) * t512) * qJD(4) + t513 * qJD(5), 0, 0, 0, 0, 0, qJD(3) * t328 + t513 * t835 - t580 * t810 + t875, qJD(3) * t329 - t513 * t837 - t583 * t810 + t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1061, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t299 + qJD(6) * t477 + t509 * t583 - t881, qJD(3) * t298 - qJD(6) * t476 - t509 * t580 - t880; 0, 0, 0, 0, 0, 0, 0, t782, -t819, -t468 * t629, -t470 * t629, 0, qJD(2) * t286 - t871, -qJD(2) * t288 - t872, t271 + t218, -t174 - t829, qJD(4) * t318 - t864, -qJD(4) * t315 + t865, -t647, -qJD(2) * t148 + qJD(4) * t65 - t946, qJD(4) * t63 + t1040 - t945, -qJD(2) * t83 + qJD(4) * t22 + t465 * t584 - t954, -qJD(2) * t151 - qJD(4) * t40 - qJD(5) * t185 - t949, qJD(4) * t36 - t1040 + t779 - t953, -qJD(2) * t16 - qJD(4) * t9 - qJD(5) * t49 - t960, qJD(4) * t138 - t312 * t858 - t164, qJD(4) * t62 - t889 - t90, qJD(4) * t120 + qJD(6) * t145 - t832, qJD(4) * t121 + qJD(6) * t142 - t833, t218 + t686, -qJD(2) * t58 - qJD(4) * t2 + qJD(5) * t167 - qJD(6) * t11 - t982, -qJD(2) * t59 - qJD(4) * t1 + qJD(5) * t201 - qJD(6) * t12 - t981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t818, -t817, 0, 0, 0, 0, 0, -t831, t1033, -t888, -t830, -t1033, -qJD(4) * t292 - t685, 0, 0, 0, 0, 0, -qJD(4) * t326 - qJD(6) * t296 - t921, -qJD(4) * t327 - qJD(6) * t297 - t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t563, t558 * qJD(4), 0, 0, 0, -pkin(3) * t844, -pkin(3) * t569, 0, qJD(4) * t479 - t581 * t839, -qJD(4) * t478 + qJD(5) * t573 (qJD(4) * t548 - t841) * t541, -t563 * t572 + t575 * t778, -qJD(6) * t529 - 0.2e1 * t581 * t726, -qJD(4) * t528 - t583 * t783, -qJD(4) * t530 + t580 * t783, t563, qJD(4) * t262 + qJD(6) * t387 + t573 * t842, -qJD(4) * t263 - qJD(6) * t386 + t573 * t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1045, t678, t569 + t815, -t816 - t844, -t812, -t568 - t666, -t665 + t804, t605 + t955, t568 - t683, -t684 - t804, pkin(10) * t605 + t618, t876 - t511 + (-t572 * t808 + t785) * t581, t890 + t536 + (-0.2e1 * t725 - t739) * t581, t565 + t681, t680 - t784, t1044, t397 * qJD(6) - t1032 * t583 - t550 * t845 + t634, t398 * qJD(6) + t1032 * t580 - t550 * t843 + t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569 + t780, -t738, -t337, t568 - t649, 0, 0, 0, 0, 0, t580 * t853 + t565 + t868, t573 * t849 - t784 + t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t600, t602, -t733 * t895 + t873, t733 * t909 + t874, qJD(1) * t751 + t567, qJD(4) * t397 - qJD(6) * t473 + t633, qJD(4) * t398 + qJD(6) * t472 + t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1049, -t679, -qJD(3) * t318 + t789, qJD(3) * t315 + t382 * t854, t450, -qJD(3) * t65 + t1043 - t970, -qJD(3) * t63 + t1042 - t971, -qJD(3) * t22 - t958, qJD(3) * t40 - t1043 - t974, -qJD(3) * t36 - t1042 + t465 - t973, -qJD(2) * t19 + qJD(3) * t9 + qJD(5) * t325 - t961, -qJD(3) * t138 - t270 * t788 + t168, -qJD(3) * t62 - t887 - t96, -qJD(3) * t120 - t382 * t837 - t870, -qJD(3) * t121 - t382 * t835 - t869, -t1046, -qJD(2) * t140 + qJD(3) * t2 + qJD(5) * t182 + qJD(6) * t29 - t986, -qJD(2) * t68 + qJD(3) * t1 + qJD(6) * t31 + t465 * t583 - t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1035, t1034, 0, -t1035, -t1034, qJD(3) * t292 - t959, 0, 0, 0, 0, 0, qJD(3) * t326 - t875, qJD(3) * t327 - t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1045, -t678, -t815, t816, t812, t666, t665, -t955, t683, t684, -t618, t562 * t572 - t511 - t876, t581 * t704 + t536 - t890, -t580 * t836 - t681, -t581 * t835 - t680, -t1044, qJD(6) * t451 - t634, qJD(6) * t452 - t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), -t778, t557 * qJD(6), 0, 0, 0, qJ(5) * t835 + t842, -qJ(5) * t837 + t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t735, t682, 0, 0, 0, 0, 0, t677, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t614, t601, t580 * t734 - t561, t643, t668, t580 * t834 - t617, t583 * t834 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(1) * t380 - t808) * t468, qJD(3) * t185 - t229, -t613, qJD(3) * t49 - qJD(4) * t325 - t1043 - t972, 0, 0, 0, 0, 0, -qJD(3) * t167 - qJD(4) * t182 - qJD(6) * t225 + t877, -t866 - qJD(3) * t201 + (-t838 - t846) * t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1035, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t780, t738, t337, t649, 0, 0, 0, 0, 0, t580 * t676 - t868, t583 * t676 - t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t735, -t682, 0, 0, 0, 0, 0, -t677, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t737 - t837, t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615, -t631, -qJD(3) * t145 + (qJD(1) * t268 + t845) * t382, -qJD(3) * t142 + t644, t266, qJD(2) * t111 + qJD(3) * t11 - qJD(4) * t29 + qJD(5) * t225 - t975, qJD(2) * t112 + qJD(3) * t12 - qJD(4) * t31 + t382 * t840 - t976; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t296 + t881, qJD(3) * t297 + t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t600, -t602, -t873 + (t786 + t845) * t581, -t874 + (-t787 + t843) * t581, qJD(1) * t752 + t567, -qJD(4) * t451 + t580 * t841 - t633, -qJD(4) * t452 + t581 * t840 - t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t614, -t601, t561 + t788, t700, -t668, t617, t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t737, t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t42;
