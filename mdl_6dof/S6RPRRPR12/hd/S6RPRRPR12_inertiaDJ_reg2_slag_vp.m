% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR12_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:52:58
% EndTime: 2019-03-09 05:53:16
% DurationCPUTime: 7.10s
% Computational Cost: add. (11846->418), mult. (34499->749), div. (0->0), fcn. (36614->12), ass. (0->198)
t102 = sin(pkin(7));
t101 = sin(pkin(12));
t103 = sin(pkin(6));
t104 = cos(pkin(12));
t226 = cos(pkin(6));
t201 = pkin(1) * t226;
t145 = t226 * pkin(2) + t104 * t201;
t225 = cos(pkin(7));
t129 = (-t225 * pkin(9) - qJ(2)) * t103 * t101 + t145;
t202 = -pkin(2) * t104 - pkin(1);
t222 = t101 * t102;
t149 = t103 * (-pkin(9) * t222 + t202);
t258 = t102 * t149 + t129 * t225;
t106 = sin(qJ(4));
t241 = pkin(4) + pkin(11);
t204 = t241 * t106;
t108 = cos(qJ(4));
t223 = qJ(5) * t108;
t257 = t204 - t223;
t185 = t104 * t225;
t186 = t102 * t226;
t221 = t103 * t104;
t126 = t101 * t201 + qJ(2) * t221 + (t103 * t185 + t186) * pkin(9);
t237 = sin(qJ(3));
t238 = cos(qJ(3));
t35 = t238 * t126 + t258 * t237;
t256 = t35 * qJD(3);
t218 = qJD(2) * t103;
t197 = t101 * t218;
t158 = t225 * t197;
t196 = t104 * t218;
t34 = -t237 * t126 + t258 * t238;
t115 = -t34 * qJD(3) + t237 * t158 - t238 * t196;
t175 = t225 * t237;
t245 = (t238 * t101 + t104 * t175) * t103 + t237 * t186;
t61 = -t238 * t186 + (t237 * t101 - t238 * t185) * t103;
t119 = -t61 * pkin(3) + pkin(10) * t245 + t102 * t129 - t225 * t149;
t255 = qJD(4) * t119 + t115;
t153 = t102 * t221 - t226 * t225;
t117 = -t153 * pkin(10) + t35;
t178 = t102 * t197;
t58 = t61 * qJD(3);
t59 = t245 * qJD(3);
t254 = -t59 * pkin(3) - t58 * pkin(10) + qJD(4) * t117 - t178;
t224 = qJ(5) * t106;
t253 = t241 * t108 + t224;
t252 = 0.2e1 * t153;
t216 = qJD(4) * t106;
t42 = -t108 * t59 + t61 * t216;
t251 = pkin(10) * t42;
t93 = qJD(4) * t108;
t43 = t106 * t59 + t61 * t93;
t250 = pkin(10) * t43;
t249 = -t59 * qJ(5) - t61 * qJD(5);
t18 = -t106 * t117 - t108 * t119;
t17 = -t61 * pkin(4) - t18;
t52 = -t153 * t106 + t108 * t245;
t113 = t52 * pkin(5) - t61 * pkin(11) + t17;
t29 = t238 * t158 + t237 * t196 + t256;
t37 = qJD(4) * t52 - t58 * t106;
t124 = t245 * t106;
t38 = -qJD(4) * t124 + (-t153 * qJD(4) - t58) * t108;
t12 = t37 * pkin(4) - t38 * qJ(5) - t52 * qJD(5) + t29;
t248 = -t37 * pkin(11) - qJD(6) * t113 - t12;
t199 = t102 * t237;
t74 = t106 * t199 - t108 * t225;
t100 = t108 ^ 2;
t183 = (-t106 ^ 2 + t100) * qJD(4);
t105 = sin(qJ(6));
t97 = t105 ^ 2;
t107 = cos(qJ(6));
t99 = t107 ^ 2;
t234 = t97 - t99;
t187 = t234 * qJD(6);
t189 = qJD(3) * t237;
t200 = t102 * t238;
t177 = qJD(3) * t200;
t64 = t74 * qJD(4) - t108 * t177;
t75 = t106 * t225 + t108 * t199;
t247 = t102 * (t52 * t189 - t238 * t38) - t75 * t59 + t64 * t61;
t51 = t153 * t108 + t124;
t65 = qJD(4) * t75 + t106 * t177;
t246 = t102 * (t51 * t189 - t238 * t37) - t74 * t59 - t65 * t61;
t213 = qJD(5) * t108;
t240 = pkin(5) + pkin(10);
t88 = t240 * t108;
t244 = qJD(4) * t253 - qJD(6) * t88 - t213;
t53 = t75 * t64;
t243 = -0.2e1 * t102 ^ 2 * t238 * t189 + 0.2e1 * t74 * t65 - 0.2e1 * t53;
t242 = 0.2e1 * qJD(5);
t239 = t59 * pkin(4);
t10 = t254 * t106 + t255 * t108;
t7 = t10 + t249;
t6 = -t37 * pkin(5) - t7;
t236 = t6 * t105;
t235 = t6 * t107;
t19 = -t106 * t119 + t108 * t117;
t40 = t105 * t51 + t107 * t61;
t21 = qJD(6) * t40 + t105 * t59 - t37 * t107;
t233 = t105 * t21;
t232 = t105 * t40;
t231 = t106 * t38;
t212 = qJD(6) * t105;
t22 = t105 * t37 - t61 * t212 + (qJD(6) * t51 + t59) * t107;
t230 = t107 * t22;
t39 = t105 * t61 - t51 * t107;
t229 = t107 * t39;
t228 = t108 * t37;
t220 = t105 * t241;
t219 = t107 * t241;
t217 = qJD(4) * t105;
t215 = qJD(4) * t107;
t214 = qJD(5) * t106;
t211 = qJD(6) * t107;
t210 = qJD(6) * t108;
t209 = qJD(6) * t241;
t208 = 0.2e1 * t51 * t37;
t27 = 0.2e1 * t52 * t38;
t48 = 0.2e1 * t61 * t59;
t207 = -0.2e1 * pkin(3) * qJD(4);
t206 = pkin(10) * t216;
t205 = pkin(10) * t93;
t203 = t240 * t106;
t195 = t105 * t93;
t194 = t106 * t215;
t193 = t105 * t210;
t192 = t107 * t210;
t191 = t106 * t93;
t190 = t105 * t211;
t188 = qJD(4) * t238;
t182 = t107 * t203;
t180 = t105 * t194;
t179 = t100 * t190;
t16 = -qJ(5) * t61 - t19;
t176 = t102 * t189;
t33 = t153 * pkin(3) - t34;
t20 = t51 * pkin(4) - t52 * qJ(5) + t33;
t15 = t51 * pkin(11) + t20;
t3 = -t105 * t15 + t107 * t113;
t4 = t105 * t113 + t107 * t15;
t174 = -t105 * t3 + t107 * t4;
t173 = t37 * t61 + t51 * t59;
t172 = t38 * t61 + t52 * t59;
t169 = -pkin(4) * t108 - t224;
t168 = t105 * t39 - t107 * t40;
t79 = -pkin(3) - t253;
t62 = -t105 * t79 + t182;
t63 = t105 * t203 + t107 * t79;
t167 = -t105 * t62 + t107 * t63;
t150 = -t105 * t74 + t107 * t200;
t66 = t105 * t200 + t107 * t74;
t166 = -t105 * t66 - t107 * t150;
t165 = -t64 * qJ(5) + t75 * qJD(5);
t164 = -0.2e1 * t226 * t218;
t157 = t51 * t216 - t228;
t25 = t52 * t93 + t231;
t156 = -t105 * t38 - t52 * t211;
t26 = t107 * t38 - t52 * t212;
t155 = -t105 * t64 + t75 * t211;
t154 = -t107 * t64 - t75 * t212;
t152 = 0.2e1 * (t101 ^ 2 + t104 ^ 2) * t103 ^ 2 * qJD(2);
t151 = -0.2e1 * t37 * t52 - 0.2e1 * t38 * t51;
t83 = t240 * t216;
t148 = t257 * qJD(6) - t83;
t141 = -t37 * t75 + t38 * t74 + t51 * t64 + t52 * t65;
t140 = t169 * qJD(4) + t213;
t111 = -t255 * t106 + t254 * t108;
t8 = t111 - t239;
t110 = t38 * pkin(5) - t59 * pkin(11) + t8;
t1 = -t105 * t110 + t248 * t107 + t15 * t212;
t2 = t248 * t105 + t107 * t110 - t15 * t211;
t136 = t174 * qJD(6) - t1 * t105 + t2 * t107;
t135 = t106 * t8 - t108 * t7 + (t106 * t16 + t108 * t17) * qJD(4);
t134 = -t10 * t108 + t106 * t111 + (-t106 * t19 - t108 * t18) * qJD(4);
t44 = t79 * t212 - t107 * (t257 * qJD(4) - t214) - t240 * t195 - qJD(6) * t182;
t45 = -t79 * t211 + (-qJD(6) * t240 + qJD(5)) * t105 * t106 + (-t105 * t204 + (t105 * qJ(5) + t107 * t240) * t108) * qJD(4);
t23 = t167 * qJD(6) - t105 * t44 + t107 * t45;
t46 = t66 * qJD(6) + t105 * t65 + t107 * t176;
t47 = t150 * qJD(6) - t105 * t176 + t107 * t65;
t24 = t166 * qJD(6) + t105 * t46 + t107 * t47;
t133 = -t106 * t37 + t108 * t38 + (-t106 * t52 - t108 * t51) * qJD(4);
t132 = t106 * t65 - t108 * t64 + (-t106 * t75 + t108 * t74) * qJD(4);
t131 = (t231 - t228 + (t106 * t51 + t108 * t52) * qJD(4)) * pkin(10);
t130 = t132 * pkin(10);
t94 = qJ(5) * t242;
t90 = -0.2e1 * t191;
t89 = 0.2e1 * t191;
t84 = -pkin(3) + t169;
t81 = 0.2e1 * t183;
t77 = -t106 * t211 - t195;
t76 = -t106 * t212 + t107 * t93;
t73 = -t214 + (pkin(4) * t106 - t223) * qJD(4);
t71 = (t106 * t188 + t108 * t189) * t102;
t70 = (t106 * t189 - t108 * t188) * t102;
t69 = -t108 * t187 - t180;
t49 = -t102 * t145 + (qJ(2) * t222 + t225 * t202) * t103;
t14 = -pkin(5) * t51 - t16;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t164, t104 * t164, t152, qJ(2) * t152, -0.2e1 * t245 * t58, -0.2e1 * t245 * t59 + 0.2e1 * t58 * t61, t58 * t252, t48, t59 * t252, 0, 0.2e1 * t29 * t153 + 0.2e1 * t61 * t178 + 0.2e1 * t49 * t59, -0.2e1 * t115 * t153 + 0.2e1 * t178 * t245 - 0.2e1 * t49 * t58, 0.2e1 * t115 * t61 + 0.2e1 * t245 * t29 + 0.2e1 * t34 * t58 - 0.2e1 * t35 * t59, 0.2e1 * (t35 * (-t101 * t175 + t238 * t104) + t49 * t222) * t218 + 0.2e1 * (-t29 + t256) * t34, t27, t151, 0.2e1 * t172, t208, -0.2e1 * t173, t48, -0.2e1 * t111 * t61 + 0.2e1 * t18 * t59 + 0.2e1 * t29 * t51 + 0.2e1 * t33 * t37, 0.2e1 * t10 * t61 - 0.2e1 * t19 * t59 + 0.2e1 * t29 * t52 + 0.2e1 * t33 * t38, 0.2e1 * t10 * t51 + 0.2e1 * t111 * t52 - 0.2e1 * t18 * t38 - 0.2e1 * t19 * t37, -0.2e1 * t10 * t19 - 0.2e1 * t111 * t18 + 0.2e1 * t29 * t33, t48, -0.2e1 * t172, 0.2e1 * t173, t27, t151, t208, 0.2e1 * t16 * t37 + 0.2e1 * t17 * t38 + 0.2e1 * t51 * t7 + 0.2e1 * t52 * t8, -0.2e1 * t12 * t51 + 0.2e1 * t17 * t59 - 0.2e1 * t20 * t37 + 0.2e1 * t61 * t8, -0.2e1 * t12 * t52 - 0.2e1 * t16 * t59 - 0.2e1 * t20 * t38 - 0.2e1 * t61 * t7, 0.2e1 * t12 * t20 + 0.2e1 * t16 * t7 + 0.2e1 * t17 * t8, 0.2e1 * t40 * t22, -0.2e1 * t21 * t40 - 0.2e1 * t22 * t39, 0.2e1 * t22 * t52 + 0.2e1 * t38 * t40, 0.2e1 * t39 * t21, -0.2e1 * t21 * t52 - 0.2e1 * t38 * t39, t27, 0.2e1 * t14 * t21 + 0.2e1 * t2 * t52 + 0.2e1 * t3 * t38 + 0.2e1 * t39 * t6, 0.2e1 * t1 * t52 + 0.2e1 * t14 * t22 - 0.2e1 * t38 * t4 + 0.2e1 * t40 * t6, 0.2e1 * t1 * t39 - 0.2e1 * t2 * t40 - 0.2e1 * t21 * t4 - 0.2e1 * t22 * t3, -0.2e1 * t1 * t4 + 0.2e1 * t14 * t6 + 0.2e1 * t2 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * t176 + t225 * t59, t153 * t177 - t225 * t58, t176 * t245 - t177 * t61 - t199 * t59 + t200 * t58, t102 * t158 - t115 * t199 - t176 * t34 + t177 * t35 - t200 * t29, 0, 0, 0, 0, 0, 0, t246, t247, t141, -t10 * t75 + t111 * t74 - t18 * t65 - t19 * t64 + (t33 * t189 - t29 * t238) * t102, 0, 0, 0, 0, 0, 0, t141, -t246, -t247, t16 * t64 + t17 * t65 - t7 * t75 + t8 * t74 + (-t238 * t12 + t20 * t189) * t102, 0, 0, 0, 0, 0, 0, t21 * t75 + t38 * t66 - t39 * t64 + t47 * t52, t150 * t38 + t22 * t75 - t40 * t64 - t46 * t52, t150 * t21 - t22 * t66 - t39 * t46 - t40 * t47, t1 * t150 - t14 * t64 + t2 * t66 + t3 * t47 + t4 * t46 + t6 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t150 * t46 + 0.2e1 * t47 * t66 - 0.2e1 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t59, 0, -t29, t115, 0, 0, t25, t133, t43, t157, -t42, 0, -pkin(3) * t37 - t108 * t29 + t216 * t33 - t250, -pkin(3) * t38 + t106 * t29 + t33 * t93 + t251, t131 + t134, -pkin(3) * t29 + pkin(10) * t134, 0, -t43, t42, t25, t133, t157, t131 + t135, t108 * t12 - t20 * t216 - t37 * t84 - t51 * t73 + t250, -t106 * t12 - t20 * t93 - t38 * t84 - t52 * t73 - t251, pkin(10) * t135 + t12 * t84 + t20 * t73, -t40 * t192 + (-t108 * t22 + t216 * t40) * t105, -t168 * t216 + (t233 - t230 + (t229 + t232) * qJD(6)) * t108 (t217 * t52 + t22) * t106 + (qJD(4) * t40 + t156) * t108, -t39 * t193 + (t108 * t21 - t216 * t39) * t107 (t215 * t52 - t21) * t106 + (-qJD(4) * t39 - t26) * t108, t25, t21 * t88 + t38 * t62 - t39 * t83 + t45 * t52 + (-t14 * t215 + t2) * t106 + (qJD(4) * t3 - t14 * t212 + t235) * t108, t22 * t88 - t38 * t63 - t40 * t83 + t44 * t52 + (t14 * t217 + t1) * t106 + (-qJD(4) * t4 - t14 * t211 - t236) * t108, -t21 * t63 - t22 * t62 + t39 * t44 - t40 * t45 + t174 * t216 + (t1 * t107 + t105 * t2 + (t105 * t4 + t107 * t3) * qJD(6)) * t108, -t1 * t63 - t14 * t83 + t2 * t62 + t3 * t45 - t4 * t44 + t6 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t177, 0, 0, 0, 0, 0, 0, 0, 0, -t71, t70, t132, -pkin(3) * t176 + t130, 0, 0, 0, 0, 0, 0, t132, t71, -t70 (t84 * t189 - t238 * t73) * t102 + t130, 0, 0, 0, 0, 0, 0 (-t215 * t75 + t47) * t106 + (qJD(4) * t66 + t154) * t108 (t217 * t75 - t46) * t106 + (qJD(4) * t150 - t155) * t108, t166 * t216 + (t105 * t47 - t107 * t46 + (-t105 * t150 + t107 * t66) * qJD(6)) * t108, t150 * t44 + t45 * t66 + t46 * t63 + t47 * t62 - t64 * t88 - t75 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t81, 0, t90, 0, 0, t106 * t207, t108 * t207, 0, 0, 0, 0, 0, t89, t81, t90, 0, 0.2e1 * t108 * t73 - 0.2e1 * t216 * t84, -0.2e1 * t106 * t73 - 0.2e1 * t84 * t93, 0.2e1 * t84 * t73, -0.2e1 * t191 * t97 + 0.2e1 * t179, -0.2e1 * t100 * t187 - 0.4e1 * t108 * t180, -0.2e1 * t105 * t183 - 0.2e1 * t106 * t192, -0.2e1 * t191 * t99 - 0.2e1 * t179, 0.2e1 * t106 * t193 - 0.2e1 * t107 * t183, t89, 0.2e1 * (-t215 * t88 + t45) * t106 + 0.2e1 * (qJD(4) * t62 - t83 * t107 - t212 * t88) * t108, 0.2e1 * (t217 * t88 + t44) * t106 + 0.2e1 * (-qJD(4) * t63 + t83 * t105 - t211 * t88) * t108, 0.2e1 * t167 * t216 + 0.2e1 * (t105 * t45 + t107 * t44 + (t105 * t63 + t107 * t62) * qJD(6)) * t108, -0.2e1 * t44 * t63 + 0.2e1 * t45 * t62 - 0.2e1 * t83 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, 0, -t37, t59, -t111, t10, 0, 0, t59, -t38, t37, 0, 0, 0, -pkin(4) * t38 - qJ(5) * t37 - qJD(5) * t51, t111 - 0.2e1 * t239, -t7 - t249, -pkin(4) * t8 - qJ(5) * t7 - qJD(5) * t16, -t212 * t40 + t230, qJD(6) * t168 - t105 * t22 - t107 * t21, t26, t211 * t39 + t233, t156, 0, -t38 * t219 + qJ(5) * t21 + qJD(5) * t39 + t236 + (t107 * t14 + t220 * t52) * qJD(6), t38 * t220 + qJ(5) * t22 + qJD(5) * t40 + t235 + (-t105 * t14 + t219 * t52) * qJD(6) (t22 * t241 - t2) * t107 + (t21 * t241 + t1) * t105 + ((t241 * t39 - t4) * t107 + (-t241 * t40 + t3) * t105) * qJD(6), t6 * qJ(5) + t14 * qJD(5) - t136 * t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t65, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, -t64, -pkin(4) * t65 + t165, 0, 0, 0, 0, 0, 0, t155, t154, -t24, -t24 * t241 + t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t216, 0, -t205, t206, 0, 0, 0, -t93, t216, 0, 0, 0, t140, t205, -t206, t140 * pkin(10), -t69, 0.4e1 * t108 * t190 - t234 * t216, t76, t69, t77, 0, t148 * t105 - t244 * t107, t244 * t105 + t148 * t107, -t23, -t83 * qJ(5) + t88 * qJD(5) - t23 * t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, t94, -0.2e1 * t190, 0.2e1 * t187, 0, 0.2e1 * t190, 0, 0, 0.2e1 * qJ(5) * t211 + 0.2e1 * t105 * qJD(5), -0.2e1 * qJ(5) * t212 + 0.2e1 * qJD(5) * t107, 0, t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t59, 0, t8, 0, 0, 0, 0, 0, 0, t26, t156, -t233 - t230 + (-t229 + t232) * qJD(6), t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, t205, 0, 0, 0, 0, 0, 0, t76, t77, 0, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, 0, -t21, t38, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, -t46, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105 * t216 - t192, 0, t193 + t194, t93, t45, t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, 0, -t211, 0, t105 * t209, t107 * t209, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, -t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
