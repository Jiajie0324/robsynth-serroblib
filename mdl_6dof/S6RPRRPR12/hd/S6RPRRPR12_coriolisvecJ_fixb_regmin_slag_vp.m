% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR12_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:52:57
% EndTime: 2019-03-09 05:53:13
% DurationCPUTime: 5.64s
% Computational Cost: add. (11260->475), mult. (37478->660), div. (0->0), fcn. (32135->12), ass. (0->228)
t193 = sin(pkin(12));
t195 = cos(pkin(12));
t198 = sin(qJ(3));
t310 = cos(pkin(7));
t327 = cos(qJ(3));
t261 = t310 * t327;
t344 = t193 * t261 + t195 * t198;
t194 = sin(pkin(6));
t276 = t198 * t310;
t218 = t193 * t276 - t195 * t327;
t213 = t194 * t218;
t309 = sin(pkin(7));
t260 = t309 * t327;
t343 = qJD(1) * t213 + qJD(3) * t260;
t197 = sin(qJ(4));
t311 = cos(pkin(6));
t251 = t311 * t310;
t269 = qJD(1) * t309;
t259 = t194 * t269;
t173 = t195 * t259;
t284 = qJD(3) - t173;
t216 = -qJD(1) * t251 - t284;
t250 = t311 * t309;
t145 = t194 * (t193 * t327 + t195 * t276) + t198 * t250;
t140 = qJD(1) * t145;
t200 = cos(qJ(4));
t297 = t200 * t140;
t107 = -t197 * t216 + t297;
t104 = qJD(6) + t107;
t270 = qJD(1) * t311;
t264 = pkin(1) * t270;
t183 = t195 * t264;
t301 = t193 * t194;
t210 = t311 * pkin(2) + (-pkin(9) * t310 - qJ(2)) * t301;
t133 = qJD(1) * t210 + t183;
t156 = (-pkin(9) * t193 * t309 - pkin(2) * t195 - pkin(1)) * t194;
t150 = qJD(1) * t156 + qJD(2);
t101 = -t133 * t309 + t150 * t310;
t290 = qJD(1) * t194;
t281 = t193 * t290;
t225 = t327 * t250;
t241 = t195 * t261;
t340 = -t194 * t241 - t225;
t136 = qJD(1) * t340 + t198 * t281;
t56 = pkin(3) * t136 - pkin(10) * t140 + t101;
t299 = t194 * t195;
t184 = qJ(2) * t299;
t160 = qJD(1) * t184 + t193 * t264;
t209 = (t299 * t310 + t250) * pkin(9);
t126 = qJD(1) * t209 + t160;
t275 = t198 * t309;
t77 = t126 * t327 + t133 * t276 + t150 * t275;
t59 = -pkin(10) * t216 + t77;
t28 = t197 * t59 - t200 * t56;
t295 = qJD(5) + t28;
t289 = qJD(2) * t194;
t342 = t344 * t289;
t300 = t193 * t198;
t138 = (t225 + (t241 - t300) * t194) * qJD(3);
t204 = qJD(1) * t138;
t341 = qJD(4) * t216 - t204;
t131 = qJD(4) + t136;
t287 = qJD(4) * t200;
t288 = qJD(4) * t197;
t211 = qJD(2) * t213;
t337 = -t126 * t198 + t133 * t261 + t150 * t260;
t48 = -qJD(1) * t211 + qJD(3) * t337;
t139 = t145 * qJD(3);
t124 = qJD(1) * t139;
t277 = t194 * t309;
t239 = t193 * qJD(2) * t277;
t226 = qJD(1) * t239;
t92 = t124 * pkin(3) - pkin(10) * t204 + t226;
t272 = t197 * t48 - t200 * t92 + t287 * t59 + t288 * t56;
t326 = pkin(4) * t124;
t11 = t272 - t326;
t29 = t197 * t56 + t200 * t59;
t26 = -qJ(5) * t131 - t29;
t339 = t131 * t26 + t11;
t338 = t194 ^ 2 * (t193 ^ 2 + t195 ^ 2);
t164 = t197 * t310 + t200 * t275;
t240 = t193 * t259;
t294 = -qJD(4) * t164 - t197 * t343 - t200 * t240;
t163 = t197 * t275 - t200 * t310;
t293 = -qJD(4) * t163 - t197 * t240 + t200 * t343;
t282 = pkin(1) * t311;
t292 = t193 * t282 + t184;
t142 = t209 + t292;
t187 = t195 * t282;
t146 = t187 + t210;
t336 = -t142 * t198 + t146 * t261 + t156 * t260;
t257 = qJD(3) * t275;
t233 = -t290 * t344 + t257;
t303 = t136 * t197;
t335 = -qJD(5) * t197 - t77 + (t288 + t303) * pkin(4);
t296 = pkin(5) * t107 + t295;
t105 = t140 * t197 + t200 * t216;
t325 = pkin(5) * t105;
t18 = -t26 - t325;
t329 = pkin(4) + pkin(11);
t82 = t140 * t288 + t200 * t341;
t334 = t329 * t82 + (t18 - t29 + t325) * t104;
t196 = sin(qJ(6));
t199 = cos(qJ(6));
t302 = t138 * t197;
t83 = (t197 * t284 + t297) * qJD(4) + (t251 * t288 + t302) * qJD(1);
t86 = t105 * t196 + t131 * t199;
t36 = qJD(6) * t86 + t124 * t196 - t199 * t83;
t333 = t105 * t233 - t163 * t124 + t131 * t294 - t260 * t83;
t332 = t107 * t233 - t164 * t124 - t131 * t293 + t260 * t82;
t331 = t107 ^ 2;
t330 = t131 ^ 2;
t328 = pkin(5) + pkin(10);
t324 = pkin(10) * t124;
t109 = -t146 * t309 + t156 * t310;
t144 = t194 * t300 + t340;
t68 = pkin(3) * t144 - pkin(10) * t145 + t109;
t162 = t195 * t277 - t251;
t75 = t327 * t142 - t162 * pkin(10) + (t146 * t310 + t156 * t309) * t198;
t323 = t197 * t68 + t200 * t75;
t100 = pkin(3) * t140 + pkin(10) * t136;
t322 = t100 * t197 + t200 * t337;
t84 = -t105 * t199 + t131 * t196;
t321 = t104 * t84;
t320 = t104 * t86;
t58 = pkin(3) * t216 - t337;
t203 = -t107 * qJ(5) + t58;
t34 = t105 * pkin(4) + t203;
t319 = t107 * t34;
t317 = t131 * t84;
t316 = t131 * t86;
t315 = t196 * t82;
t285 = qJD(6) * t199;
t286 = qJD(6) * t196;
t35 = t105 * t285 + t124 * t199 - t131 * t286 + t196 * t83;
t314 = t199 * t35;
t79 = t199 * t82;
t307 = qJ(5) * t200;
t313 = -qJ(5) * t287 - t136 * t307 + t335;
t37 = -qJ(5) * t140 - t322;
t312 = -pkin(5) * t303 - t288 * t328 + t37;
t308 = qJ(5) * t105;
t306 = t105 * t131;
t305 = t107 * t105;
t304 = t107 * t131;
t122 = t124 * qJ(5);
t283 = pkin(10) * t288;
t181 = t328 * t200;
t280 = qJD(3) * t327;
t279 = -qJ(5) * t197 - pkin(3);
t278 = -t197 * t75 + t200 * t68;
t273 = -t197 * t92 - t200 * t48 - t287 * t56 + t288 * t59;
t268 = t131 * t200;
t267 = t104 * t196;
t31 = -qJ(5) * t144 - t323;
t202 = qJD(1) ^ 2;
t263 = t194 * t202 * t311;
t258 = qJD(3) * t276;
t98 = t140 * t199 - t196 * t303;
t256 = t196 * t288 - t98;
t97 = t140 * t196 + t199 * t303;
t255 = t199 * t288 + t97;
t180 = t328 * t197;
t254 = -qJD(6) * t180 - t335 - t131 * (pkin(11) * t197 - t307);
t166 = -t200 * t329 + t279;
t72 = t197 * t337;
t253 = qJD(6) * t166 - qJD(4) * t181 + t72 + (-pkin(5) * t136 - t100) * t200 - t329 * t140;
t49 = qJD(1) * t342 + t126 * t280 + t133 * t258 + t150 * t257;
t215 = qJ(5) * t82 - qJD(5) * t107 + t49;
t13 = t329 * t83 + t215;
t6 = -pkin(5) * t82 - t124 * t329 + t272;
t252 = t13 * t199 + t196 * t6;
t16 = -t131 * t329 + t296;
t24 = t105 * t329 + t203;
t3 = t16 * t199 - t196 * t24;
t4 = t16 * t196 + t199 * t24;
t112 = t145 * t200 - t162 * t197;
t20 = pkin(5) * t112 - t144 * t329 - t278;
t111 = t145 * t197 + t162 * t200;
t74 = pkin(3) * t162 - t336;
t205 = -qJ(5) * t112 + t74;
t30 = t111 * t329 + t205;
t247 = -t196 * t30 + t199 * t20;
t246 = t196 * t20 + t199 * t30;
t63 = t142 * t280 + t146 * t258 + t156 * t257 + t342;
t62 = qJD(3) * t336 - t211;
t96 = pkin(3) * t139 - pkin(10) * t138 + t239;
t245 = -t197 * t62 + t200 * t96 - t287 * t75 - t288 * t68;
t244 = t111 * t199 - t144 * t196;
t94 = t111 * t196 + t144 * t199;
t243 = (-qJ(2) * t281 + t183) * t193 - t160 * t195;
t10 = -qJD(5) * t131 - t122 + t273;
t235 = t131 * t29 - t272;
t234 = -t104 * t267 - t79;
t232 = t197 * t96 + t200 * t62 + t287 * t68 - t288 * t75;
t231 = -0.2e1 * t270 * t289;
t7 = -pkin(5) * t83 - t10;
t230 = t7 + (t104 * t329 + t308) * t104;
t229 = t131 * t58 - t324;
t228 = -t131 * t34 + t324;
t224 = -t104 ^ 2 * t199 + t315;
t223 = -t82 + t306;
t220 = t163 * t199 + t196 * t260;
t219 = -t163 * t196 + t199 * t260;
t91 = -t145 * t288 + (-qJD(4) * t162 + t138) * t200;
t214 = -qJ(5) * t91 - qJD(5) * t112 + t63;
t2 = -qJD(6) * t4 - t13 * t196 + t199 * t6;
t12 = -qJ(5) * t139 - qJD(5) * t144 - t232;
t176 = -pkin(4) * t200 + t279;
t90 = qJD(4) * t112 + t302;
t81 = t82 * t197;
t66 = pkin(4) * t107 + t308;
t45 = t82 * t112;
t42 = qJD(6) * t244 + t139 * t199 + t196 * t90;
t41 = qJD(6) * t94 + t139 * t196 - t199 * t90;
t40 = pkin(4) * t111 + t205;
t39 = -pkin(4) * t140 - t100 * t200 + t72;
t32 = -pkin(4) * t144 - t278;
t25 = -pkin(4) * t131 + t295;
t23 = -pkin(5) * t111 - t31;
t19 = pkin(4) * t90 + t214;
t17 = pkin(4) * t83 + t215;
t15 = t329 * t90 + t214;
t14 = -pkin(4) * t139 - t245;
t9 = -pkin(5) * t90 - t12;
t8 = pkin(5) * t91 - t139 * t329 - t245;
t1 = qJD(6) * t3 + t252;
t5 = [0, 0, 0, t193 * t231, t195 * t231, 0.2e1 * qJD(2) * qJD(1) * t338 ((t195 * t292 + (qJ(2) * t301 - t187) * t193) * qJD(1) - t243) * t289, t140 * t138 + t145 * t204, -t145 * t124 - t138 * t136 - t140 * t139 - t144 * t204 (t284 + (-t162 + t251) * qJD(1)) * t138, t124 * t162 + t139 * t216, 0, t63 * t216 + t49 * t162 + t109 * t124 + t101 * t139 + (t136 * t309 + t144 * t269) * t193 * t289, t101 * t138 + t109 * t204 + t140 * t239 + t145 * t226 + t48 * t162 + t216 * t62, t107 * t91 - t45, -t105 * t91 - t107 * t90 + t111 * t82 - t112 * t83, t107 * t139 + t112 * t124 + t131 * t91 - t144 * t82, -t105 * t139 - t111 * t124 - t131 * t90 - t144 * t83, t124 * t144 + t131 * t139, t63 * t105 + t49 * t111 + t124 * t278 + t131 * t245 - t28 * t139 - t144 * t272 + t58 * t90 + t74 * t83, t107 * t63 + t112 * t49 - t124 * t323 - t131 * t232 - t139 * t29 + t144 * t273 + t58 * t91 - t74 * t82, t10 * t111 + t105 * t12 + t107 * t14 + t11 * t112 + t25 * t91 + t26 * t90 + t31 * t83 - t32 * t82, -t105 * t19 + t11 * t144 - t111 * t17 + t124 * t32 + t131 * t14 + t139 * t25 - t34 * t90 - t40 * t83, -t10 * t144 - t107 * t19 - t112 * t17 - t12 * t131 - t124 * t31 - t139 * t26 - t34 * t91 + t40 * t82, t10 * t31 + t11 * t32 + t12 * t26 + t14 * t25 + t17 * t40 + t19 * t34, t35 * t94 + t42 * t86, t244 * t35 - t36 * t94 - t41 * t86 - t42 * t84, t104 * t42 + t112 * t35 - t82 * t94 + t86 * t91, -t104 * t41 - t112 * t36 - t244 * t82 - t84 * t91, t104 * t91 - t45 (-qJD(6) * t246 - t15 * t196 + t199 * t8) * t104 - t247 * t82 + t2 * t112 + t3 * t91 + t9 * t84 + t23 * t36 - t7 * t244 + t18 * t41 -(qJD(6) * t247 + t15 * t199 + t196 * t8) * t104 + t246 * t82 - t1 * t112 - t4 * t91 + t9 * t86 + t23 * t35 + t7 * t94 + t18 * t42; 0, 0, 0, t193 * t263, t195 * t263, -t202 * t338, t243 * t290, 0, 0, 0, 0, 0, t310 * t124 - t136 * t240 + t216 * t233, -t140 * t240 + t310 * t204 + t216 * t343, 0, 0, 0, 0, 0, t333, t332, -t105 * t293 - t107 * t294 - t163 * t82 - t164 * t83, -t333, -t332, -t10 * t164 + t11 * t163 - t17 * t260 + t233 * t34 - t25 * t294 - t26 * t293, 0, 0, 0, 0, 0, t164 * t36 - t220 * t82 + t293 * t84 + (qJD(6) * t219 - t196 * t233 - t199 * t294) * t104, t164 * t35 - t219 * t82 + t293 * t86 + (-qJD(6) * t220 + t196 * t294 - t199 * t233) * t104; 0, 0, 0, 0, 0, 0, 0, t140 * t136, -t136 ^ 2 + t140 ^ 2, t136 * t284 + (t136 * t251 + t138) * qJD(1), t140 * t284 + (t140 * t251 - t139) * qJD(1), 0, -t101 * t140 - t216 * t77 - t49, t101 * t136 - t337 * t173 + (t218 * t289 + t251 * t337) * qJD(1), t107 * t268 - t81 (-t82 - t306) * t200 + (-t83 - t304) * t197, -t107 * t140 + t124 * t197 + t131 * t268, t105 * t140 + t124 * t200 - t197 * t330, -t131 * t140, -pkin(3) * t83 - t77 * t105 + t28 * t140 - t49 * t200 + (t72 + (-pkin(10) * qJD(4) - t100) * t200) * t131 + t229 * t197, pkin(3) * t82 - t77 * t107 + t29 * t140 + t49 * t197 + (t283 + t322) * t131 + t229 * t200, -t105 * t37 - t107 * t39 + (-t10 + t131 * t25 + (qJD(4) * t107 - t83) * pkin(10)) * t200 + ((qJD(4) * t105 - t82) * pkin(10) + t339) * t197, -t140 * t25 + t17 * t200 - t176 * t83 + (pkin(10) * t287 - t39) * t131 - t313 * t105 + t228 * t197, t140 * t26 - t17 * t197 + t176 * t82 + (t37 - t283) * t131 - t313 * t107 + t228 * t200, t17 * t176 - t25 * t39 - t26 * t37 + t313 * t34 + (-t10 * t200 + t11 * t197 + (t197 * t26 + t200 * t25) * qJD(4)) * pkin(10), -t196 * t200 * t35 + (-t200 * t285 + t256) * t86, t84 * t98 + t86 * t97 + (-t196 * t84 + t199 * t86) * t288 + (t196 * t36 - t314 + (t196 * t86 + t199 * t84) * qJD(6)) * t200, t197 * t35 + t256 * t104 + (-t104 * t285 + t315 + t316) * t200, -t197 * t36 + t255 * t104 + (t104 * t286 - t317 + t79) * t200, t104 * t268 - t81 -(-t166 * t196 + t180 * t199) * t82 + t2 * t197 + t181 * t36 + t312 * t84 - t255 * t18 + (t196 * t254 - t199 * t253) * t104 + (t131 * t3 - t18 * t286 + t7 * t199) * t200 (t166 * t199 + t180 * t196) * t82 - t1 * t197 + t181 * t35 + t312 * t86 + t256 * t18 + (t196 * t253 + t199 * t254) * t104 + (-t131 * t4 - t18 * t285 - t7 * t196) * t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, -t105 ^ 2 + t331, t223, -t140 * t287 + t197 * t341 + t304, t124, -t107 * t58 + t235, t105 * t58 - t131 * t28 + t273, pkin(4) * t82 - qJ(5) * t83 + (-t26 - t29) * t107 + (t25 - t295) * t105, t105 * t66 - t235 + t319 - 0.2e1 * t326, -t105 * t34 + t107 * t66 + t131 * t295 - t10 + t122, -pkin(4) * t11 - qJ(5) * t10 - t25 * t29 - t26 * t295 - t34 * t66, -t267 * t86 + t314 (-t36 - t320) * t199 + (-t35 + t321) * t196, t105 * t86 + t234, -t105 * t84 + t224, t104 * t105, qJ(5) * t36 + t3 * t105 + t196 * t230 + t199 * t334 + t296 * t84, qJ(5) * t35 - t4 * t105 - t196 * t334 + t199 * t230 + t296 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t124 - t305, -t330 - t331, t319 + t339, 0, 0, 0, 0, 0, t234 - t317, t224 - t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86 * t84, -t84 ^ 2 + t86 ^ 2, t35 + t321, t320 - t36, -t82, t104 * t4 - t18 * t86 + t2, t18 * t84 - t252 + (-qJD(6) + t104) * t3;];
tauc_reg  = t5;
