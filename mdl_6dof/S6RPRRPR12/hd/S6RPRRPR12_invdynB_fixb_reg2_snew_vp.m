% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 00:53
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRPR12_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR12_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR12_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 00:47:39
% EndTime: 2019-05-06 00:49:58
% DurationCPUTime: 146.95s
% Computational Cost: add. (630555->1139), mult. (1976132->1824), div. (0->0), fcn. (1692027->14), ass. (0->855)
t1341 = sin(qJ(1));
t1345 = cos(qJ(1));
t1334 = sin(pkin(6));
t1337 = cos(pkin(6));
t1344 = cos(qJ(3));
t1335 = cos(pkin(12));
t1336 = cos(pkin(7));
t1558 = t1334 * t1336;
t1531 = t1335 * t1558;
t1333 = sin(pkin(7));
t1560 = t1333 * t1344;
t1532 = t1337 * t1560;
t1332 = sin(pkin(12));
t1340 = sin(qJ(3));
t1563 = t1332 * t1340;
t1283 = (t1334 * t1563 - t1344 * t1531 - t1532) * qJD(1);
t1278 = qJD(4) + t1283;
t1277 = t1278 ^ 2;
t1555 = t1336 * t1340;
t1561 = t1333 * t1340;
t1362 = t1337 * t1561 + (t1332 * t1344 + t1335 * t1555) * t1334;
t1285 = t1362 * qJD(1);
t1339 = sin(qJ(4));
t1343 = cos(qJ(4));
t1559 = t1334 * t1335;
t1533 = t1333 * t1559;
t1312 = qJD(1) * t1533;
t1556 = t1336 * t1337;
t1512 = qJD(1) * t1556 - t1312;
t1426 = qJD(3) + t1512;
t1263 = t1343 * t1285 + t1339 * t1426;
t1611 = t1263 ^ 2;
t1186 = t1611 + t1277;
t1543 = qJDD(1) * t1335;
t1524 = t1334 * t1543;
t1514 = t1336 * t1524;
t1544 = qJDD(1) * t1334;
t1526 = t1332 * t1544;
t1409 = -qJDD(1) * t1532 + t1340 * t1526 - t1344 * t1514;
t1241 = -t1285 * qJD(3) - t1409;
t1236 = qJDD(4) - t1241;
t1261 = t1285 * t1339 - t1343 * t1426;
t1577 = t1263 * t1261;
t1622 = t1577 + t1236;
t1641 = t1622 * t1343;
t1091 = t1186 * t1339 - t1641;
t1358 = t1362 * qJDD(1);
t1242 = -t1283 * qJD(3) + t1358;
t1542 = qJDD(1) * t1337;
t1541 = t1336 * t1542 + qJDD(3);
t1402 = t1333 * t1524 - t1541;
t1363 = t1343 * t1242 - t1339 * t1402;
t1135 = t1261 * (qJD(4) + t1278) - t1363;
t1017 = t1091 * t1344 - t1135 * t1340;
t1642 = t1622 * t1339;
t1088 = t1186 * t1343 + t1642;
t1451 = t1091 * t1340 + t1135 * t1344;
t969 = t1333 * t1088 + t1336 * t1451;
t1478 = t1017 * t1332 + t1335 * t969;
t967 = -t1336 * t1088 + t1333 * t1451;
t846 = -t1334 * t967 + t1337 * t1478;
t890 = -t1017 * t1335 + t1332 * t969;
t798 = -t1341 * t890 + t1345 * t846;
t1753 = pkin(8) * t798;
t799 = t1341 * t846 + t1345 * t890;
t1752 = pkin(8) * t799;
t1612 = t1261 ^ 2;
t1180 = -t1277 - t1612;
t1153 = -t1577 + t1236;
t1668 = t1153 * t1339;
t1078 = -t1180 * t1343 + t1668;
t1178 = qJD(4) * t1263 + t1242 * t1339 + t1343 * t1402;
t1576 = t1278 * t1263;
t1127 = t1178 + t1576;
t1012 = t1078 * t1344 - t1127 * t1340;
t1667 = t1153 * t1343;
t1075 = t1180 * t1339 + t1667;
t1454 = t1078 * t1340 + t1127 * t1344;
t964 = t1333 * t1075 + t1336 * t1454;
t1481 = t1012 * t1332 + t1335 * t964;
t962 = -t1336 * t1075 + t1333 * t1454;
t839 = -t1334 * t962 + t1337 * t1481;
t885 = -t1012 * t1335 + t1332 * t964;
t793 = -t1341 * t885 + t1345 * t839;
t1751 = pkin(8) * t793;
t794 = t1341 * t839 + t1345 * t885;
t1750 = pkin(8) * t794;
t844 = t1334 * t1478 + t1337 * t967;
t1749 = qJ(2) * (t1334 * t844 + t1337 * t846);
t1748 = pkin(1) * t844;
t1747 = pkin(1) * t846;
t837 = t1334 * t1481 + t1337 * t962;
t1746 = qJ(2) * (t1334 * t837 + t1337 * t839);
t1221 = t1612 - t1277;
t1107 = t1221 * t1343 - t1642;
t1126 = t1178 - t1576;
t1023 = t1107 * t1344 - t1126 * t1340;
t1103 = t1221 * t1339 + t1641;
t1445 = t1107 * t1340 + t1126 * t1344;
t979 = -t1333 * t1103 + t1336 * t1445;
t1474 = t1023 * t1332 + t1335 * t979;
t975 = t1336 * t1103 + t1333 * t1445;
t851 = -t1334 * t975 + t1337 * t1474;
t898 = -t1023 * t1335 + t1332 * t979;
t1745 = t1341 * t851 + t1345 * t898;
t1744 = -t1341 * t898 + t1345 * t851;
t1742 = pkin(1) * t837;
t1741 = pkin(1) * t839;
t1739 = qJ(2) * t890;
t1734 = t1334 * t1474 + t1337 * t975;
t1733 = pkin(9) * (t1333 * t967 + t1336 * t969);
t1732 = qJ(2) * t885;
t1729 = pkin(2) * t967;
t1728 = pkin(2) * t969;
t1727 = pkin(9) * (t1333 * t962 + t1336 * t964);
t1721 = pkin(2) * t962;
t1720 = pkin(2) * t964;
t1716 = pkin(9) * t1017;
t1711 = pkin(9) * t1012;
t1708 = pkin(3) * t1088;
t1707 = pkin(10) * t1088;
t1706 = pkin(10) * t1091;
t1222 = -t1611 + t1277;
t1104 = -t1222 * t1339 + t1667;
t1705 = t1104 * t1340;
t1704 = t1104 * t1344;
t1100 = t1222 * t1343 + t1668;
t1702 = t1333 * t1100;
t1699 = t1336 * t1100;
t1574 = t1278 * t1343;
t1416 = t1178 * t1339 + t1261 * t1574;
t1536 = t1340 * t1577;
t1617 = t1344 * t1416 - t1536;
t1575 = t1278 * t1339;
t1510 = -t1343 * t1178 + t1261 * t1575;
t1535 = t1344 * t1577;
t1620 = t1340 * t1416 + t1535;
t1637 = -t1333 * t1510 + t1336 * t1620;
t1658 = -t1332 * t1637 + t1335 * t1617;
t1639 = t1333 * t1620 + t1336 * t1510;
t1655 = t1332 * t1617 + t1335 * t1637;
t1681 = -t1334 * t1639 + t1337 * t1655;
t1697 = -t1341 * t1681 + t1345 * t1658;
t1179 = -t1261 * qJD(4) + t1363;
t1509 = t1343 * t1179 - t1263 * t1575;
t1616 = t1344 * t1509 + t1536;
t1511 = t1339 * t1179 + t1263 * t1574;
t1619 = t1340 * t1509 - t1535;
t1638 = -t1333 * t1511 + t1336 * t1619;
t1657 = -t1332 * t1638 + t1335 * t1616;
t1640 = t1333 * t1619 + t1336 * t1511;
t1654 = t1332 * t1616 + t1335 * t1638;
t1682 = -t1334 * t1640 + t1337 * t1654;
t1696 = -t1341 * t1682 + t1345 * t1657;
t1695 = t1341 * t1658 + t1345 * t1681;
t1694 = t1341 * t1657 + t1345 * t1682;
t1693 = pkin(3) * t1075;
t1692 = pkin(10) * t1075;
t1691 = pkin(10) * t1078;
t1684 = t1334 * t1654 + t1337 * t1640;
t1683 = t1334 * t1655 + t1337 * t1639;
t1411 = (-t1261 * t1339 - t1263 * t1343) * t1278;
t1412 = (-t1261 * t1343 + t1263 * t1339) * t1278;
t1554 = t1336 * t1344;
t1614 = -t1236 * t1554 - t1333 * t1411 + t1412 * t1555;
t1618 = t1236 * t1340 + t1344 * t1412;
t1635 = -t1332 * t1614 + t1335 * t1618;
t1615 = -t1236 * t1560 + t1336 * t1411 + t1412 * t1561;
t1636 = t1332 * t1618 + t1335 * t1614;
t1653 = -t1334 * t1615 + t1337 * t1636;
t1680 = -t1341 * t1653 + t1345 * t1635;
t1679 = t1341 * t1635 + t1345 * t1653;
t1161 = t1612 + t1611;
t1678 = pkin(3) * t1161;
t1677 = t1126 * t1339;
t1675 = t1126 * t1343;
t1673 = t1127 * t1339;
t1590 = t1127 * t1343;
t1666 = t1161 * t1340;
t1665 = t1161 * t1344;
t1656 = t1334 * t1636 + t1337 * t1615;
t1338 = sin(qJ(6));
t1342 = cos(qJ(6));
t1215 = -t1342 * t1261 + t1278 * t1338;
t1217 = t1261 * t1338 + t1278 * t1342;
t1147 = t1217 * t1215;
t1175 = qJDD(6) + t1179;
t1625 = -t1147 + t1175;
t1646 = t1338 * t1625;
t1621 = -t1611 + t1612;
t1645 = t1340 * t1621;
t1644 = t1342 * t1625;
t1643 = t1344 * t1621;
t1224 = t1261 * t1278;
t1130 = -t1224 + t1179;
t1421 = t1426 ^ 2;
t1562 = t1333 * t1337;
t1415 = t1531 + t1562;
t1634 = pkin(9) * t1415;
t1573 = t1283 * t1285;
t1366 = -t1402 - t1573;
t1629 = t1340 * t1366;
t1628 = t1344 * t1366;
t1321 = t1341 * g(1) - t1345 * g(2);
t1346 = qJD(1) ^ 2;
t1599 = qJ(2) * t1334;
t1410 = -t1346 * t1599 - t1321;
t1367 = qJDD(1) * pkin(1) - t1410;
t1364 = t1337 * t1367;
t1627 = (-t1334 * g(3) + t1364) * t1335;
t1329 = t1334 ^ 2;
t1331 = t1337 ^ 2;
t1534 = t1332 * t1335 * t1346;
t1626 = (t1329 + t1331) * t1334 * t1534;
t1134 = -t1224 - t1179;
t1327 = t1332 ^ 2;
t1330 = t1335 ^ 2;
t1546 = t1327 + t1330;
t1564 = t1332 * t1334;
t1540 = pkin(9) * t1564;
t1368 = t1334 * (-pkin(2) * t1559 - t1333 * t1540);
t1610 = -2 * qJD(2);
t1624 = (-t1332 * t1368 + t1337 * t1634) * qJD(1) + t1564 * t1610;
t1267 = t1426 * t1283;
t1395 = t1426 * t1285;
t1623 = -t1340 * t1267 - t1344 * t1395;
t1192 = pkin(4) * t1261 - qJ(5) * t1263;
t1360 = -g(3) * t1564 + t1332 * t1364;
t1322 = t1345 * g(1) + t1341 * g(2);
t1413 = t1346 * pkin(1) + t1322;
t1365 = qJ(2) * t1544 - t1413;
t1515 = t1336 * t1540;
t1606 = pkin(2) * t1337;
t1609 = 2 * qJD(2);
t1188 = t1335 * t1365 + qJDD(1) * t1634 + (t1559 * t1609 + (t1335 * t1368 - t1337 * (-t1515 + t1606)) * qJD(1)) * qJD(1) + t1360;
t1521 = t1337 * g(3) - qJDD(2);
t1286 = t1334 * t1367 + t1521;
t1539 = pkin(2) * t1542;
t1352 = -g(3) * t1559 + t1335 * t1364 + t1539;
t1600 = pkin(9) * t1336;
t1527 = -qJ(2) - t1600;
t1069 = t1344 * t1188 + (t1336 * t1352 + t1333 * (-pkin(2) * t1524 - t1286) + (-t1533 + t1556) * t1346 * t1634) * t1340 + (t1336 * t1413 + ((-pkin(9) * t1333 ^ 2 + t1336 * t1527) * qJDD(1) + (pkin(2) * qJD(1) * t1415 + t1336 * t1610) * qJD(1)) * t1334) * t1563;
t1237 = pkin(3) * t1283 - pkin(10) * t1285;
t1031 = -pkin(3) * t1421 - pkin(10) * t1402 - t1283 * t1237 + t1069;
t1601 = pkin(9) * t1333;
t1349 = -t1521 + ((-pkin(2) * t1335 - t1332 * t1601 - pkin(1)) * qJDD(1) + t1410 + (t1332 * t1606 + (-t1335 * t1562 - t1546 * t1558) * pkin(9)) * t1346) * t1334;
t1348 = t1333 * (-qJDD(1) * t1515 - t1332 * t1365 + t1352) - t1336 * t1349;
t1350 = t1624 * t1333;
t1055 = (-t1242 + t1283 * (qJD(3) - t1312)) * pkin(10) + (pkin(10) * t1283 * t1556 - t1350) * qJD(1) + (-t1241 + t1395) * pkin(3) - t1348;
t1547 = -t1339 * t1031 + t1343 * t1055;
t1414 = -t1236 * pkin(4) - t1277 * qJ(5) + t1263 * t1192 + qJDD(5) - t1547;
t876 = -pkin(5) * t1134 - pkin(11) * t1153 + t1414;
t1218 = pkin(5) * t1263 - pkin(11) * t1278;
t1068 = t1340 * t1188 - (t1539 + t1627 + (t1527 * t1544 + t1413) * t1332 + t1624 * qJD(1)) * t1554 - t1349 * t1560;
t1030 = t1402 * pkin(3) - t1421 * pkin(10) + t1285 * t1237 + t1068;
t1361 = t1178 * pkin(4) - qJ(5) * t1130 + t1030;
t1608 = -2 * qJD(5);
t1522 = pkin(4) * t1278 + t1608;
t895 = -t1612 * pkin(5) + t1178 * pkin(11) + (-t1218 + t1522) * t1263 + t1361;
t1520 = -t1338 * t895 + t1342 * t876;
t814 = t1338 * t876 + t1342 * t895;
t754 = -t1338 * t1520 + t1342 * t814;
t753 = t1338 * t814 + t1342 * t1520;
t1213 = t1215 ^ 2;
t1613 = t1217 ^ 2;
t1254 = qJD(6) + t1263;
t1252 = t1254 ^ 2;
t1281 = t1283 ^ 2;
t1282 = t1285 ^ 2;
t1607 = pkin(4) + pkin(11);
t1605 = pkin(3) * t1340;
t1604 = pkin(3) * t1344;
t1603 = pkin(4) * t1339;
t1602 = pkin(4) * t1343;
t1598 = t1236 * qJ(5);
t952 = t1343 * t1031 + t1339 * t1055;
t1424 = t1277 * pkin(4) + t1261 * t1192 - t952;
t882 = t1598 - t1178 * pkin(5) - t1612 * pkin(11) + ((2 * qJD(5)) + t1218) * t1278 - t1424;
t1596 = t1338 * t882;
t1594 = t1342 * t882;
t1593 = t1030 * t1339;
t1592 = t1030 * t1343;
t1074 = t1147 + t1175;
t1591 = t1074 * t1342;
t1583 = t1215 * t1254;
t1228 = t1402 - t1573;
t1582 = t1228 * t1340;
t1581 = t1228 * t1344;
t1579 = t1254 * t1338;
t1578 = t1254 * t1342;
t1313 = t1329 * t1534;
t1300 = t1313 + t1542;
t1572 = t1300 * t1332;
t1571 = t1300 * t1335;
t1301 = -t1313 + t1542;
t1570 = t1301 * t1332;
t1569 = t1301 * t1335;
t1568 = t1327 * t1329;
t1567 = t1329 * t1330;
t1566 = t1329 * t1346;
t1565 = t1332 * t1286;
t1557 = t1335 * t1286;
t1553 = t1337 * t1346;
t1552 = t1338 * t1074;
t1138 = qJD(1) * t1350 + t1348;
t1551 = t1340 * t1138;
t1550 = t1344 * t1138;
t1549 = t1344 * t1241;
t1545 = qJDD(1) * t1329;
t1538 = t1339 * t1147;
t1537 = t1343 * t1147;
t1530 = t1334 * t1553;
t1083 = -t1215 * qJD(6) + t1338 * t1178 + t1342 * t1236;
t1529 = -t1252 - t1613;
t1528 = qJ(5) * t1339 + pkin(3);
t1525 = t1332 * t1543;
t1523 = t1334 * t1542;
t857 = -t1339 * t1547 + t1343 * t952;
t1518 = -t1342 * t1178 + t1338 * t1236;
t1288 = -t1321 * t1341 - t1345 * t1322;
t1319 = qJDD(1) * t1345 - t1341 * t1346;
t1513 = -pkin(8) * t1319 - g(3) * t1341;
t1227 = -t1421 - t1281;
t1159 = t1227 * t1344 - t1629;
t1508 = pkin(9) * t1159 + t1550;
t1233 = -t1282 - t1421;
t1162 = -t1233 * t1340 + t1581;
t1507 = pkin(9) * t1162 - t1551;
t738 = t1339 * t753 + t1343 * t882;
t1491 = t1340 * t738 - t1344 * t754;
t737 = t1339 * t882 - t1343 * t753;
t692 = -t1333 * t737 + t1336 * t1491;
t707 = t1340 * t754 + t1344 * t738;
t1506 = t1332 * t707 + t1335 * t692;
t1370 = t1278 * t1608 + t1424;
t906 = -t1370 + t1598;
t831 = t1339 * t1414 + t1343 * t906;
t940 = t1263 * t1522 + t1361;
t1490 = t1340 * t831 - t1344 * t940;
t830 = t1339 * t906 - t1343 * t1414;
t756 = -t1333 * t830 + t1336 * t1490;
t801 = t1340 * t940 + t1344 * t831;
t1505 = t1332 * t801 + t1335 * t756;
t1471 = -t1030 * t1344 + t1340 * t857;
t856 = t1339 * t952 + t1343 * t1547;
t780 = -t1333 * t856 + t1336 * t1471;
t840 = t1030 * t1340 + t1344 * t857;
t1504 = t1332 * t840 + t1335 * t780;
t1094 = -t1213 - t1613;
t1376 = (-qJD(6) + t1254) * t1217 - t1518;
t1422 = t1083 + t1583;
t954 = t1338 * t1376 - t1342 * t1422;
t912 = t1094 * t1343 + t1339 * t954;
t956 = t1338 * t1422 + t1342 * t1376;
t1489 = t1340 * t912 - t1344 * t956;
t911 = t1094 * t1339 - t1343 * t954;
t805 = -t1333 * t911 + t1336 * t1489;
t847 = t1340 * t956 + t1344 * t912;
t1503 = t1332 * t847 + t1335 * t805;
t1140 = -t1213 + t1613;
t1046 = (qJD(6) + t1254) * t1217 + t1518;
t1423 = t1083 - t1583;
t953 = t1046 * t1338 - t1342 * t1423;
t925 = t1140 * t1343 - t1339 * t953;
t955 = t1046 * t1342 + t1338 * t1423;
t1488 = t1340 * t925 + t1344 * t955;
t924 = t1140 * t1339 + t1343 * t953;
t811 = -t1333 * t924 + t1336 * t1488;
t852 = -t1340 * t955 + t1344 * t925;
t1502 = t1332 * t852 + t1335 * t811;
t1115 = -t1252 - t1213;
t1009 = t1115 * t1342 - t1646;
t1008 = t1338 * t1115 + t1644;
t931 = t1008 * t1339 + t1046 * t1343;
t1483 = -t1009 * t1344 + t1340 * t931;
t930 = -t1008 * t1343 + t1046 * t1339;
t824 = -t1333 * t930 + t1336 * t1483;
t872 = t1009 * t1340 + t1344 * t931;
t1501 = t1332 * t872 + t1335 * t824;
t1014 = -t1338 * t1529 - t1591;
t1013 = t1342 * t1529 - t1552;
t937 = t1013 * t1339 + t1343 * t1423;
t1480 = -t1014 * t1344 + t1340 * t937;
t936 = -t1013 * t1343 + t1339 * t1423;
t826 = -t1333 * t936 + t1336 * t1480;
t881 = t1014 * t1340 + t1344 * t937;
t1500 = t1332 * t881 + t1335 * t826;
t1167 = t1213 - t1252;
t1025 = -t1167 * t1342 + t1552;
t1026 = -t1167 * t1338 - t1591;
t947 = -t1026 * t1339 + t1343 * t1376;
t1473 = t1025 * t1344 + t1340 * t947;
t945 = t1026 * t1343 + t1339 * t1376;
t834 = -t1333 * t945 + t1336 * t1473;
t887 = -t1025 * t1340 + t1344 * t947;
t1499 = t1332 * t887 + t1335 * t834;
t1168 = t1252 - t1613;
t1027 = t1168 * t1338 - t1644;
t1024 = -t1168 * t1342 - t1646;
t948 = -t1339 * t1024 + t1343 * t1422;
t1472 = t1027 * t1344 + t1340 * t948;
t946 = t1343 * t1024 + t1339 * t1422;
t835 = -t1333 * t946 + t1336 * t1472;
t888 = -t1027 * t1340 + t1344 * t948;
t1498 = t1332 * t888 + t1335 * t835;
t1082 = -qJD(6) * t1217 - t1518;
t1042 = t1082 * t1338 - t1215 * t1578;
t1040 = -t1082 * t1342 - t1215 * t1579;
t994 = -t1040 * t1339 - t1537;
t1469 = t1042 * t1344 + t1340 * t994;
t992 = t1040 * t1343 - t1538;
t865 = -t1333 * t992 + t1336 * t1469;
t918 = -t1042 * t1340 + t1344 * t994;
t1497 = t1332 * t918 + t1335 * t865;
t1041 = -t1083 * t1342 + t1217 * t1579;
t1043 = -t1083 * t1338 - t1217 * t1578;
t995 = -t1043 * t1339 + t1537;
t1470 = t1041 * t1344 + t1340 * t995;
t993 = t1043 * t1343 + t1538;
t866 = -t1333 * t993 + t1336 * t1470;
t919 = -t1041 * t1340 + t1344 * t995;
t1496 = t1332 * t919 + t1335 * t866;
t1084 = (t1215 * t1338 + t1217 * t1342) * t1254;
t1051 = t1084 * t1343 + t1175 * t1339;
t1052 = -t1084 * t1339 + t1175 * t1343;
t1085 = (t1215 * t1342 - t1217 * t1338) * t1254;
t1460 = t1052 * t1340 + t1085 * t1344;
t908 = -t1333 * t1051 + t1336 * t1460;
t982 = t1052 * t1344 - t1085 * t1340;
t1495 = t1332 * t982 + t1335 * t908;
t1131 = (-qJD(4) + t1278) * t1261 + t1363;
t1032 = -t1131 * t1343 - t1677;
t1036 = t1131 * t1339 - t1675;
t1464 = t1036 * t1340 + t1665;
t922 = -t1333 * t1032 + t1336 * t1464;
t996 = t1036 * t1344 - t1666;
t1494 = t1332 * t996 + t1335 * t922;
t1035 = t1134 * t1343 - t1677;
t1039 = -t1134 * t1339 - t1675;
t1461 = t1039 * t1340 + t1665;
t923 = -t1333 * t1035 + t1336 * t1461;
t997 = t1039 * t1344 - t1666;
t1493 = t1332 * t997 + t1335 * t923;
t1457 = -t1344 * t1068 + t1340 * t1069;
t958 = t1333 * t1138 + t1336 * t1457;
t989 = t1068 * t1340 + t1069 * t1344;
t1492 = t1332 * t989 + t1335 * t958;
t1308 = (-t1331 - t1567) * t1346;
t1273 = t1308 * t1335 - t1572;
t1487 = qJ(2) * t1273 + t1557;
t1306 = (-t1331 - t1568) * t1346;
t1275 = -t1306 * t1332 - t1569;
t1486 = qJ(2) * t1275 - t1565;
t1037 = -t1130 * t1339 - t1590;
t1006 = t1037 * t1344 - t1645;
t1033 = t1130 * t1343 - t1673;
t1463 = t1037 * t1340 + t1643;
t928 = -t1333 * t1033 + t1336 * t1463;
t1485 = t1006 * t1332 + t1335 * t928;
t1038 = t1135 * t1339 - t1590;
t1007 = t1038 * t1344 - t1645;
t1034 = -t1135 * t1343 - t1673;
t1462 = t1038 * t1340 + t1643;
t929 = -t1333 * t1034 + t1336 * t1462;
t1484 = t1007 * t1332 + t1335 * t929;
t1020 = -t1134 * t1340 + t1704;
t1448 = t1134 * t1344 + t1705;
t976 = t1336 * t1448 - t1702;
t1477 = t1020 * t1332 + t1335 * t976;
t1021 = -t1131 * t1340 - t1704;
t1447 = t1131 * t1344 - t1705;
t977 = t1336 * t1447 + t1702;
t1476 = t1021 * t1332 + t1335 * t977;
t1214 = -t1281 - t1282;
t1198 = t1267 + t1242;
t1357 = t1285 * t1512 - t1409;
t1438 = -t1198 * t1344 + t1340 * t1357;
t1072 = -t1333 * t1214 + t1336 * t1438;
t1137 = t1198 * t1340 + t1344 * t1357;
t1456 = t1072 * t1335 + t1137 * t1332;
t1243 = t1282 - t1281;
t1425 = 0.2e1 * qJD(3) + t1512;
t1193 = t1285 * t1425 + t1409;
t1197 = -t1267 + t1242;
t1439 = -t1193 * t1340 + t1197 * t1344;
t1087 = -t1333 * t1243 + t1336 * t1439;
t1136 = -t1193 * t1344 - t1197 * t1340;
t1453 = t1087 * t1335 + t1136 * t1332;
t1437 = t1227 * t1340 + t1628;
t1093 = -t1333 * t1193 + t1336 * t1437;
t1450 = t1093 * t1335 + t1159 * t1332;
t1196 = -t1283 * t1425 + t1358;
t1436 = t1233 * t1344 + t1582;
t1096 = -t1333 * t1196 + t1336 * t1436;
t1449 = t1096 * t1335 + t1162 * t1332;
t1266 = -t1282 + t1421;
t1434 = t1266 * t1344 + t1629;
t1110 = -t1333 * t1198 + t1336 * t1434;
t1181 = -t1266 * t1340 + t1628;
t1444 = t1110 * t1335 + t1181 * t1332;
t1265 = t1281 - t1421;
t1435 = t1265 * t1340 - t1581;
t1111 = -t1333 * t1357 + t1336 * t1435;
t1182 = t1265 * t1344 + t1582;
t1443 = t1111 * t1335 + t1182 * t1332;
t1397 = t1340 * t1426;
t1142 = t1336 * t1549 + (t1333 * t1285 + t1336 * t1397) * t1283;
t1372 = t1344 * t1267;
t1189 = -t1340 * t1241 + t1372;
t1442 = t1142 * t1335 + t1189 * t1332;
t1396 = t1344 * t1426;
t1144 = t1242 * t1555 + (-t1333 * t1283 + t1336 * t1396) * t1285;
t1373 = t1340 * t1395;
t1191 = t1344 * t1242 - t1373;
t1441 = t1144 * t1335 + t1191 * t1332;
t1184 = t1333 * t1402 + t1336 * t1623;
t1205 = -t1372 + t1373;
t1440 = t1184 * t1335 + t1205 * t1332;
t1356 = (qJ(2) * qJDD(1) + qJD(1) * t1609) * t1334 - t1413;
t1255 = t1332 * t1356 - t1627;
t1256 = t1335 * t1356 + t1360;
t1433 = -t1335 * t1255 + t1332 * t1256;
t1190 = t1255 * t1332 + t1256 * t1335;
t1315 = t1335 * t1530;
t1296 = t1315 + t1526;
t1314 = t1332 * t1530;
t1299 = -t1314 + t1524;
t1432 = t1296 * t1335 + t1299 * t1332;
t1297 = -t1315 + t1526;
t1298 = t1314 + t1524;
t1431 = -t1297 * t1335 + t1298 * t1332;
t1305 = (t1331 - t1568) * t1346;
t1430 = t1305 * t1335 + t1572;
t1429 = t1308 * t1332 + t1571;
t1428 = t1306 * t1335 - t1570;
t1307 = (-t1331 + t1567) * t1346;
t1427 = t1307 * t1332 + t1569;
t1287 = t1321 * t1345 - t1322 * t1341;
t708 = pkin(5) * t882 - t1607 * t754;
t715 = pkin(5) * t753 - qJ(5) * t754;
t675 = -pkin(10) * t737 - t1339 * t708 + t1343 * t715;
t693 = -pkin(3) * t737 - qJ(5) * t882 + t1607 * t753;
t1408 = pkin(9) * t707 + t1340 * t675 + t1344 * t693;
t736 = pkin(5) * t1094 - t1607 * t956 - t754;
t858 = pkin(5) * t954 - qJ(5) * t956;
t718 = -pkin(10) * t911 - t1339 * t736 + t1343 * t858;
t726 = -pkin(3) * t911 - qJ(5) * t1094 + t1607 * t954 + t753;
t1407 = pkin(9) * t847 + t1340 * t718 + t1344 * t726;
t784 = pkin(5) * t1008 - qJ(5) * t1009 + t1520;
t809 = pkin(5) * t1046 - t1009 * t1607 + t1594;
t734 = -pkin(10) * t930 - t1339 * t809 + t1343 * t784;
t778 = -pkin(3) * t930 - qJ(5) * t1046 + t1008 * t1607 - t1596;
t1406 = pkin(9) * t872 + t1340 * t734 + t1344 * t778;
t787 = pkin(5) * t1013 - qJ(5) * t1014 - t814;
t812 = pkin(5) * t1423 - t1014 * t1607 - t1596;
t735 = -pkin(10) * t936 - t1339 * t812 + t1343 * t787;
t785 = -pkin(3) * t936 - qJ(5) * t1423 + t1013 * t1607 - t1594;
t1405 = pkin(9) * t881 + t1340 * t735 + t1344 * t785;
t764 = -pkin(3) * t830 + pkin(4) * t1414 - qJ(5) * t906;
t774 = -pkin(10) * t830 + (-qJ(5) * t1343 + t1603) * t940;
t1404 = pkin(9) * t801 + t1340 * t774 + t1344 * t764;
t889 = pkin(4) * t1161 + t906;
t892 = qJ(5) * t1161 + t1414;
t806 = -pkin(10) * t1032 - t1339 * t889 + t1343 * t892;
t949 = -pkin(3) * t1032 + pkin(4) * t1131 + qJ(5) * t1126;
t1403 = pkin(9) * t996 + t1340 * t806 + t1344 * t949;
t902 = -t1547 - t1693;
t970 = t1593 - t1692;
t1401 = t1340 * t970 + t1344 * t902 - t1711;
t859 = pkin(4) * t1153 + qJ(5) * t1180 - t1414 + t1693;
t1355 = t1263 * t1608 + t1361;
t904 = (t1127 + t1576) * pkin(4) + t1355;
t862 = qJ(5) * t1590 - t1339 * t904 + t1692;
t1400 = t1340 * t862 + t1344 * t859 + t1711;
t861 = -t1708 - pkin(4) * t1186 + (-t1622 - t1236) * qJ(5) + t1370;
t903 = -pkin(4) * t1576 - qJ(5) * t1135 - t1355;
t867 = t1135 * t1603 + t1343 * t903 - t1707;
t1399 = t1340 * t867 + t1344 * t861 - t1716;
t905 = t952 + t1708;
t980 = t1592 + t1707;
t1398 = t1340 * t980 + t1344 * t905 + t1716;
t671 = -pkin(3) * t754 + pkin(10) * t738 + t1339 * t715 + t1343 * t708;
t691 = t1333 * t1491 + t1336 * t737;
t655 = -pkin(2) * t691 - t1333 * t671 + t1336 * t1408;
t657 = -t1340 * t693 + t1344 * t675 + (-t1333 * t691 - t1336 * t692) * pkin(9);
t674 = -t1332 * t692 + t1335 * t707;
t1394 = qJ(2) * t674 + t1332 * t657 + t1335 * t655;
t714 = -pkin(3) * t956 + pkin(10) * t912 + t1339 * t858 + t1343 * t736;
t804 = t1333 * t1489 + t1336 * t911;
t673 = -pkin(2) * t804 - t1333 * t714 + t1336 * t1407;
t677 = -t1340 * t726 + t1344 * t718 + (-t1333 * t804 - t1336 * t805) * pkin(9);
t757 = -t1332 * t805 + t1335 * t847;
t1393 = qJ(2) * t757 + t1332 * t677 + t1335 * t673;
t728 = -pkin(3) * t1009 + pkin(10) * t931 + t1339 * t784 + t1343 * t809;
t823 = t1333 * t1483 + t1336 * t930;
t679 = -pkin(2) * t823 - t1333 * t728 + t1336 * t1406;
t694 = -t1340 * t778 + t1344 * t734 + (-t1333 * t823 - t1336 * t824) * pkin(9);
t777 = -t1332 * t824 + t1335 * t872;
t1392 = qJ(2) * t777 + t1332 * t694 + t1335 * t679;
t731 = -pkin(3) * t1014 + pkin(10) * t937 + t1339 * t787 + t1343 * t812;
t825 = t1333 * t1480 + t1336 * t936;
t681 = -pkin(2) * t825 - t1333 * t731 + t1336 * t1405;
t696 = -t1340 * t785 + t1344 * t735 + (-t1333 * t825 - t1336 * t826) * pkin(9);
t783 = -t1332 * t826 + t1335 * t881;
t1391 = qJ(2) * t783 + t1332 * t696 + t1335 * t681;
t755 = t1333 * t1490 + t1336 * t830;
t758 = pkin(10) * t831 + (-t1528 - t1602) * t940;
t685 = -pkin(2) * t755 - t1333 * t758 + t1336 * t1404;
t690 = -t1340 * t764 + t1344 * t774 + (-t1333 * t755 - t1336 * t756) * pkin(9);
t725 = -t1332 * t756 + t1335 * t801;
t1390 = qJ(2) * t725 + t1332 * t690 + t1335 * t685;
t1369 = pkin(9) * t840 + (-pkin(10) * t1340 - t1604) * t856;
t779 = t1333 * t1471 + t1336 * t856;
t841 = -pkin(3) * t1030 + pkin(10) * t857;
t712 = -pkin(2) * t779 - t1333 * t841 + t1336 * t1369;
t713 = (-pkin(10) * t1344 + t1605) * t856 + (-t1333 * t779 - t1336 * t780) * pkin(9);
t749 = -t1332 * t780 + t1335 * t840;
t1389 = qJ(2) * t749 + t1332 * t713 + t1335 * t712;
t802 = pkin(10) * t1036 + t1339 * t892 + t1343 * t889 + t1678;
t920 = t1336 * t1032 + t1333 * t1464;
t724 = -pkin(2) * t920 - t1333 * t802 + t1336 * t1403;
t750 = -t1340 * t949 + t1344 * t806 + (-t1333 * t920 - t1336 * t922) * pkin(9);
t868 = -t1332 * t922 + t1335 * t996;
t1388 = qJ(2) * t868 + t1332 * t750 + t1335 * t724;
t853 = t1127 * t1528 + t1343 * t904 + t1691;
t740 = -t1333 * t853 + t1336 * t1400 - t1721;
t759 = -t1340 * t859 + t1344 * t862 - t1727;
t1387 = t1332 * t759 + t1335 * t740 - t1732;
t842 = -pkin(10) * t1035 - t856;
t1375 = pkin(9) * t997 - t1035 * t1604 + t1340 * t842;
t829 = pkin(10) * t1039 + t1678 + t857;
t921 = t1336 * t1035 + t1333 * t1461;
t742 = -pkin(2) * t921 - t1333 * t829 + t1336 * t1375;
t763 = t1035 * t1605 + t1344 * t842 + (-t1333 * t921 - t1336 * t923) * pkin(9);
t869 = -t1332 * t923 + t1335 * t997;
t1386 = qJ(2) * t869 + t1332 * t763 + t1335 * t742;
t854 = -t1706 + t1339 * t903 - (pkin(3) + t1602) * t1135;
t746 = -t1333 * t854 + t1336 * t1399 + t1729;
t761 = -t1340 * t861 + t1344 * t867 + t1733;
t1385 = t1332 * t761 + t1335 * t746 + t1739;
t932 = -pkin(3) * t1127 - t1592 - t1691;
t772 = -t1333 * t932 + t1336 * t1401 + t1721;
t791 = -t1340 * t902 + t1344 * t970 + t1727;
t1384 = t1332 * t791 + t1335 * t772 + t1732;
t935 = pkin(3) * t1135 + t1593 + t1706;
t776 = -t1333 * t935 + t1336 * t1398 - t1729;
t796 = -t1340 * t905 + t1344 * t980 - t1733;
t1383 = t1332 * t796 + t1335 * t776 - t1739;
t957 = -t1336 * t1138 + t1333 * t1457;
t860 = (-t1333 * t957 - t1336 * t958) * pkin(9);
t873 = -t1332 * t958 + t1335 * t989;
t874 = -pkin(2) * t957 + t1600 * t989;
t1382 = qJ(2) * t873 + t1332 * t860 + t1335 * t874;
t1381 = pkin(9) * t1137 + t989;
t1010 = -t1072 * t1332 + t1137 * t1335;
t1071 = t1336 * t1214 + t1333 * t1438;
t893 = (-t1071 * t1333 - t1072 * t1336) * pkin(9) - t1457;
t901 = -pkin(2) * t1071 + t1336 * t1381;
t1380 = qJ(2) * t1010 + t1332 * t893 + t1335 * t901;
t1045 = -t1093 * t1332 + t1159 * t1335;
t1092 = t1336 * t1193 + t1333 * t1437;
t934 = -pkin(2) * t1092 + t1333 * t1068 + t1336 * t1508;
t971 = -t1551 + (-t1092 * t1333 - t1093 * t1336) * pkin(9);
t1379 = qJ(2) * t1045 + t1332 * t971 + t1335 * t934;
t1060 = -t1096 * t1332 + t1162 * t1335;
t1095 = t1336 * t1196 + t1333 * t1436;
t939 = -pkin(2) * t1095 + t1333 * t1069 + t1336 * t1507;
t981 = -t1550 + (-t1095 * t1333 - t1096 * t1336) * pkin(9);
t1378 = qJ(2) * t1060 + t1332 * t981 + t1335 * t939;
t1268 = t1297 * t1332 + t1298 * t1335;
t1377 = qJ(2) * t1268 + t1190;
t1318 = qJDD(1) * t1341 + t1345 * t1346;
t1304 = -pkin(8) * t1318 + g(3) * t1345;
t1303 = t1546 * t1566;
t1302 = (t1327 - t1330) * t1566;
t1294 = t1546 * t1530;
t1293 = (-t1327 * t1553 + t1525) * t1334;
t1292 = (-t1330 * t1553 - t1525) * t1334;
t1280 = t1327 * t1523 + t1626;
t1279 = t1330 * t1523 - t1626;
t1274 = -t1305 * t1332 + t1571;
t1272 = t1307 * t1335 - t1570;
t1269 = -t1296 * t1332 + t1299 * t1335;
t1249 = -t1334 * t1296 + t1337 * t1428;
t1248 = -t1334 * t1297 + t1337 * t1430;
t1247 = t1334 * t1299 + t1337 * t1429;
t1246 = -t1334 * t1298 + t1337 * t1427;
t1245 = t1337 * t1296 + t1334 * t1428;
t1244 = -t1337 * t1299 + t1334 * t1429;
t1240 = -t1334 * t1302 + t1337 * t1432;
t1239 = t1334 * t1303 + t1337 * t1431;
t1238 = -t1337 * t1303 + t1334 * t1431;
t1209 = -t1249 * t1341 + t1275 * t1345;
t1208 = -t1247 * t1341 + t1273 * t1345;
t1207 = t1249 * t1345 + t1275 * t1341;
t1206 = t1247 * t1345 + t1273 * t1341;
t1202 = -t1239 * t1341 + t1268 * t1345;
t1201 = t1239 * t1345 + t1268 * t1341;
t1183 = t1336 * t1541 + (-t1514 + t1623) * t1333;
t1166 = t1334 * t1286 + t1337 * t1433;
t1165 = -t1337 * t1286 + t1334 * t1433;
t1164 = -t1557 + (-t1245 * t1334 - t1249 * t1337) * qJ(2);
t1163 = -t1565 + (-t1244 * t1334 - t1247 * t1337) * qJ(2);
t1146 = -pkin(1) * t1244 + t1334 * t1255 + t1337 * t1487;
t1145 = -pkin(1) * t1245 + t1334 * t1256 + t1337 * t1486;
t1143 = t1242 * t1561 + (t1336 * t1283 + t1333 * t1396) * t1285;
t1141 = t1333 * t1549 + (-t1336 * t1285 + t1333 * t1397) * t1283;
t1125 = -pkin(1) * t1238 + t1337 * t1377;
t1116 = -t1184 * t1332 + t1205 * t1335;
t1112 = (-t1238 * t1334 - t1239 * t1337) * qJ(2) - t1433;
t1109 = t1333 * t1435 + t1336 * t1357;
t1108 = t1336 * t1198 + t1333 * t1434;
t1099 = qJ(2) * t1190 * t1337 - pkin(1) * t1165;
t1098 = -t1166 * t1341 + t1190 * t1345;
t1097 = t1166 * t1345 + t1190 * t1341;
t1086 = t1336 * t1243 + t1333 * t1439;
t1081 = (-t1165 * t1334 - t1166 * t1337) * qJ(2);
t1080 = -t1144 * t1332 + t1191 * t1335;
t1079 = -t1142 * t1332 + t1189 * t1335;
t1063 = -t1334 * t1183 + t1337 * t1440;
t1062 = -t1111 * t1332 + t1182 * t1335;
t1061 = -t1110 * t1332 + t1181 * t1335;
t1019 = -t1334 * t1143 + t1337 * t1441;
t1018 = -t1334 * t1141 + t1337 * t1442;
t1015 = -t1087 * t1332 + t1136 * t1335;
t991 = -t1334 * t1109 + t1337 * t1443;
t990 = -t1334 * t1108 + t1337 * t1444;
t986 = -t1334 * t1095 + t1337 * t1449;
t985 = t1337 * t1095 + t1334 * t1449;
t984 = -t1334 * t1092 + t1337 * t1450;
t983 = t1337 * t1092 + t1334 * t1450;
t973 = t1333 * t1447 - t1699;
t972 = t1333 * t1448 + t1699;
t965 = -t1334 * t1086 + t1337 * t1453;
t960 = -t1334 * t1071 + t1337 * t1456;
t959 = t1337 * t1071 + t1334 * t1456;
t938 = pkin(2) * t1096 - t1336 * t1069 + t1333 * t1507;
t933 = pkin(2) * t1093 - t1336 * t1068 + t1333 * t1508;
t927 = t1336 * t1034 + t1333 * t1462;
t926 = t1336 * t1033 + t1333 * t1463;
t915 = t1060 * t1345 - t1341 * t986;
t914 = t1060 * t1341 + t1345 * t986;
t910 = t1045 * t1345 - t1341 * t984;
t909 = t1045 * t1341 + t1345 * t984;
t907 = t1336 * t1051 + t1333 * t1460;
t900 = pkin(2) * t1072 + t1333 * t1381;
t897 = t1021 * t1335 - t1332 * t977;
t896 = t1020 * t1335 - t1332 * t976;
t884 = t1010 * t1345 - t1341 * t960;
t883 = t1010 * t1341 + t1345 * t960;
t875 = pkin(2) * t958 + t1601 * t989;
t871 = t1007 * t1335 - t1332 * t929;
t870 = t1006 * t1335 - t1332 * t928;
t864 = t1333 * t1470 + t1336 * t993;
t863 = t1333 * t1469 + t1336 * t992;
t855 = -t1332 * t908 + t1335 * t982;
t849 = -t1334 * t973 + t1337 * t1476;
t848 = -t1334 * t972 + t1337 * t1477;
t833 = t1333 * t1472 + t1336 * t946;
t832 = t1333 * t1473 + t1336 * t945;
t828 = -t1334 * t957 + t1337 * t1492;
t827 = t1334 * t1492 + t1337 * t957;
t822 = -t1334 * t927 + t1337 * t1484;
t821 = -t1334 * t926 + t1337 * t1485;
t820 = -t1334 * t921 + t1337 * t1493;
t819 = -t1334 * t920 + t1337 * t1494;
t818 = t1334 * t1493 + t1337 * t921;
t817 = t1334 * t1494 + t1337 * t920;
t816 = -t1332 * t866 + t1335 * t919;
t815 = -t1332 * t865 + t1335 * t918;
t810 = t1333 * t1488 + t1336 * t924;
t808 = -t1332 * t939 + t1335 * t981 + (-t1334 * t985 - t1337 * t986) * qJ(2);
t807 = -t1334 * t907 + t1337 * t1495;
t803 = -t1332 * t934 + t1335 * t971 + (-t1334 * t983 - t1337 * t984) * qJ(2);
t790 = -t1332 * t835 + t1335 * t888;
t789 = -t1332 * t834 + t1335 * t887;
t788 = -pkin(1) * t985 - t1334 * t938 + t1337 * t1378;
t786 = -pkin(1) * t983 - t1334 * t933 + t1337 * t1379;
t782 = -t1341 * t828 + t1345 * t873;
t781 = t1341 * t873 + t1345 * t828;
t775 = t1333 * t1398 + t1336 * t935 + t1728;
t773 = -t1332 * t901 + t1335 * t893 + (-t1334 * t959 - t1337 * t960) * qJ(2);
t771 = t1333 * t1401 + t1336 * t932 - t1720;
t770 = -t1341 * t820 + t1345 * t869;
t769 = -t1341 * t819 + t1345 * t868;
t768 = t1341 * t869 + t1345 * t820;
t767 = t1341 * t868 + t1345 * t819;
t766 = -t1334 * t864 + t1337 * t1496;
t765 = -t1334 * t863 + t1337 * t1497;
t762 = -t1332 * t811 + t1335 * t852;
t760 = -pkin(1) * t959 - t1334 * t900 + t1337 * t1380;
t752 = -t1334 * t833 + t1337 * t1498;
t751 = -t1334 * t832 + t1337 * t1499;
t748 = -t1334 * t825 + t1337 * t1500;
t747 = t1334 * t1500 + t1337 * t825;
t745 = t1333 * t1399 + t1336 * t854 - t1728;
t744 = -t1334 * t823 + t1337 * t1501;
t743 = t1334 * t1501 + t1337 * t823;
t741 = pkin(2) * t923 + t1333 * t1375 + t1336 * t829;
t739 = t1333 * t1400 + t1336 * t853 + t1720;
t733 = -t1334 * t810 + t1337 * t1502;
t732 = -t1332 * t874 + t1335 * t860 + (-t1334 * t827 - t1337 * t828) * qJ(2);
t730 = -t1334 * t804 + t1337 * t1503;
t729 = t1334 * t1503 + t1337 * t804;
t727 = -pkin(1) * t827 - t1334 * t875 + t1337 * t1382;
t723 = pkin(2) * t922 + t1333 * t1403 + t1336 * t802;
t722 = -t1334 * t779 + t1337 * t1504;
t721 = t1334 * t1504 + t1337 * t779;
t720 = -t1341 * t748 + t1345 * t783;
t719 = t1341 * t783 + t1345 * t748;
t717 = -t1341 * t744 + t1345 * t777;
t716 = t1341 * t777 + t1345 * t744;
t711 = pkin(2) * t780 + t1333 * t1369 + t1336 * t841;
t710 = -t1332 * t776 + t1335 * t796 - t1749;
t709 = -t1332 * t772 + t1335 * t791 + t1746;
t706 = -t1341 * t730 + t1345 * t757;
t705 = t1341 * t757 + t1345 * t730;
t704 = -t1334 * t755 + t1337 * t1505;
t703 = t1334 * t1505 + t1337 * t755;
t702 = -t1334 * t775 + t1337 * t1383 - t1748;
t701 = -t1332 * t746 + t1335 * t761 + t1749;
t700 = -t1334 * t771 + t1337 * t1384 + t1742;
t699 = -t1332 * t740 + t1335 * t759 - t1746;
t698 = -t1341 * t722 + t1345 * t749;
t697 = t1341 * t749 + t1345 * t722;
t695 = -t1332 * t742 + t1335 * t763 + (-t1334 * t818 - t1337 * t820) * qJ(2);
t689 = -t1332 * t724 + t1335 * t750 + (-t1334 * t817 - t1337 * t819) * qJ(2);
t688 = -t1334 * t745 + t1337 * t1385 + t1748;
t687 = -t1334 * t739 + t1337 * t1387 - t1742;
t686 = -pkin(1) * t818 - t1334 * t741 + t1337 * t1386;
t684 = pkin(2) * t756 + t1333 * t1404 + t1336 * t758;
t683 = -t1341 * t704 + t1345 * t725;
t682 = t1341 * t725 + t1345 * t704;
t680 = pkin(2) * t826 + t1333 * t1405 + t1336 * t731;
t678 = pkin(2) * t824 + t1333 * t1406 + t1336 * t728;
t676 = -pkin(1) * t817 - t1334 * t723 + t1337 * t1388;
t672 = pkin(2) * t805 + t1333 * t1407 + t1336 * t714;
t670 = -t1332 * t712 + t1335 * t713 + (-t1334 * t721 - t1337 * t722) * qJ(2);
t669 = -pkin(1) * t721 - t1334 * t711 + t1337 * t1389;
t668 = -t1334 * t691 + t1337 * t1506;
t667 = t1334 * t1506 + t1337 * t691;
t666 = -t1332 * t681 + t1335 * t696 + (-t1334 * t747 - t1337 * t748) * qJ(2);
t665 = -t1332 * t679 + t1335 * t694 + (-t1334 * t743 - t1337 * t744) * qJ(2);
t664 = -t1332 * t685 + t1335 * t690 + (-t1334 * t703 - t1337 * t704) * qJ(2);
t663 = -pkin(1) * t747 - t1334 * t680 + t1337 * t1391;
t662 = -pkin(1) * t743 - t1334 * t678 + t1337 * t1392;
t661 = -t1332 * t673 + t1335 * t677 + (-t1334 * t729 - t1337 * t730) * qJ(2);
t660 = -t1341 * t668 + t1345 * t674;
t659 = t1341 * t674 + t1345 * t668;
t658 = -pkin(1) * t703 - t1334 * t684 + t1337 * t1390;
t656 = -pkin(1) * t729 - t1334 * t672 + t1337 * t1393;
t654 = pkin(2) * t692 + t1333 * t1408 + t1336 * t671;
t653 = -t1332 * t655 + t1335 * t657 + (-t1334 * t667 - t1337 * t668) * qJ(2);
t652 = -pkin(1) * t667 - t1334 * t654 + t1337 * t1394;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1318, -t1319, 0, t1288, 0, 0, 0, 0, 0, 0, t1208, t1209, t1202, t1098, 0, 0, 0, 0, 0, 0, t910, t915, t884, t782, 0, 0, 0, 0, 0, 0, t794, -t799, t770, t698, 0, 0, 0, 0, 0, 0, t769, -t794, t799, t683, 0, 0, 0, 0, 0, 0, t717, t720, t706, t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1319, -t1318, 0, t1287, 0, 0, 0, 0, 0, 0, t1206, t1207, t1201, t1097, 0, 0, 0, 0, 0, 0, t909, t914, t883, t781, 0, 0, 0, 0, 0, 0, -t793, t798, t768, t697, 0, 0, 0, 0, 0, 0, t767, t793, -t798, t682, 0, 0, 0, 0, 0, 0, t716, t719, t705, t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1244, t1245, t1238, t1165, 0, 0, 0, 0, 0, 0, t983, t985, t959, t827, 0, 0, 0, 0, 0, 0, -t837, t844, t818, t721, 0, 0, 0, 0, 0, 0, t817, t837, -t844, t703, 0, 0, 0, 0, 0, 0, t743, t747, t729, t667; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1319, 0, -t1318, 0, t1513, -t1304, -t1287, -pkin(8) * t1287, -t1280 * t1341 + t1293 * t1345, -t1240 * t1341 + t1269 * t1345, -t1248 * t1341 + t1274 * t1345, -t1279 * t1341 + t1292 * t1345, -t1246 * t1341 + t1272 * t1345, t1294 * t1345 + t1341 * t1523, -pkin(8) * t1206 - t1146 * t1341 + t1163 * t1345, -pkin(8) * t1207 - t1145 * t1341 + t1164 * t1345, -pkin(8) * t1201 + t1112 * t1345 - t1125 * t1341, -pkin(8) * t1097 + t1081 * t1345 - t1099 * t1341, -t1019 * t1341 + t1080 * t1345, t1015 * t1345 - t1341 * t965, t1061 * t1345 - t1341 * t990, -t1018 * t1341 + t1079 * t1345, t1062 * t1345 - t1341 * t991, -t1063 * t1341 + t1116 * t1345, -pkin(8) * t909 - t1341 * t786 + t1345 * t803, -pkin(8) * t914 - t1341 * t788 + t1345 * t808, -pkin(8) * t883 - t1341 * t760 + t1345 * t773, -pkin(8) * t781 - t1341 * t727 + t1345 * t732, t1696, -t1341 * t821 + t1345 * t870, -t1341 * t848 + t1345 * t896, t1697, -t1745, t1680, -t1341 * t700 + t1345 * t709 + t1751, -t1341 * t702 + t1345 * t710 - t1753, -pkin(8) * t768 - t1341 * t686 + t1345 * t695, -pkin(8) * t697 - t1341 * t669 + t1345 * t670, t1680, -t1341 * t849 + t1345 * t897, t1745, t1696, -t1341 * t822 + t1345 * t871, t1697, -pkin(8) * t767 - t1341 * t676 + t1345 * t689, -t1341 * t687 + t1345 * t699 - t1751, -t1341 * t688 + t1345 * t701 + t1753, -pkin(8) * t682 - t1341 * t658 + t1345 * t664, -t1341 * t766 + t1345 * t816, -t1341 * t733 + t1345 * t762, -t1341 * t752 + t1345 * t790, -t1341 * t765 + t1345 * t815, -t1341 * t751 + t1345 * t789, -t1341 * t807 + t1345 * t855, -pkin(8) * t716 - t1341 * t662 + t1345 * t665, -pkin(8) * t719 - t1341 * t663 + t1345 * t666, -pkin(8) * t705 - t1341 * t656 + t1345 * t661, -pkin(8) * t659 - t1341 * t652 + t1345 * t653; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1318, 0, t1319, 0, t1304, t1513, t1288, pkin(8) * t1288, t1280 * t1345 + t1293 * t1341, t1240 * t1345 + t1269 * t1341, t1248 * t1345 + t1274 * t1341, t1279 * t1345 + t1292 * t1341, t1246 * t1345 + t1272 * t1341, t1294 * t1341 - t1345 * t1523, pkin(8) * t1208 + t1146 * t1345 + t1163 * t1341, pkin(8) * t1209 + t1145 * t1345 + t1164 * t1341, pkin(8) * t1202 + t1112 * t1341 + t1125 * t1345, pkin(8) * t1098 + t1081 * t1341 + t1099 * t1345, t1019 * t1345 + t1080 * t1341, t1015 * t1341 + t1345 * t965, t1061 * t1341 + t1345 * t990, t1018 * t1345 + t1079 * t1341, t1062 * t1341 + t1345 * t991, t1063 * t1345 + t1116 * t1341, pkin(8) * t910 + t1341 * t803 + t1345 * t786, pkin(8) * t915 + t1341 * t808 + t1345 * t788, pkin(8) * t884 + t1341 * t773 + t1345 * t760, pkin(8) * t782 + t1341 * t732 + t1345 * t727, t1694, t1341 * t870 + t1345 * t821, t1341 * t896 + t1345 * t848, t1695, t1744, t1679, t1341 * t709 + t1345 * t700 + t1750, t1341 * t710 + t1345 * t702 - t1752, pkin(8) * t770 + t1341 * t695 + t1345 * t686, pkin(8) * t698 + t1341 * t670 + t1345 * t669, t1679, t1341 * t897 + t1345 * t849, -t1744, t1694, t1341 * t871 + t1345 * t822, t1695, pkin(8) * t769 + t1341 * t689 + t1345 * t676, t1341 * t699 + t1345 * t687 - t1750, t1341 * t701 + t1345 * t688 + t1752, pkin(8) * t683 + t1341 * t664 + t1345 * t658, t1341 * t816 + t1345 * t766, t1341 * t762 + t1345 * t733, t1341 * t790 + t1345 * t752, t1341 * t815 + t1345 * t765, t1341 * t789 + t1345 * t751, t1341 * t855 + t1345 * t807, pkin(8) * t717 + t1341 * t665 + t1345 * t662, pkin(8) * t720 + t1341 * t666 + t1345 * t663, pkin(8) * t706 + t1341 * t661 + t1345 * t656, pkin(8) * t660 + t1341 * t653 + t1345 * t652; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1321, t1322, 0, 0, t1327 * t1545, t1337 * t1302 + t1334 * t1432, t1337 * t1297 + t1334 * t1430, t1330 * t1545, t1337 * t1298 + t1334 * t1427, t1331 * qJDD(1), pkin(1) * t1247 - t1337 * t1255 + t1334 * t1487, pkin(1) * t1249 - t1337 * t1256 + t1334 * t1486, pkin(1) * t1239 + t1334 * t1377, pkin(1) * t1166 + t1190 * t1599, t1337 * t1143 + t1334 * t1441, t1337 * t1086 + t1334 * t1453, t1337 * t1108 + t1334 * t1444, t1337 * t1141 + t1334 * t1442, t1337 * t1109 + t1334 * t1443, t1337 * t1183 + t1334 * t1440, pkin(1) * t984 + t1334 * t1379 + t1337 * t933, pkin(1) * t986 + t1334 * t1378 + t1337 * t938, pkin(1) * t960 + t1334 * t1380 + t1337 * t900, pkin(1) * t828 + t1334 * t1382 + t1337 * t875, t1684, t1334 * t1485 + t1337 * t926, t1334 * t1477 + t1337 * t972, t1683, t1734, t1656, t1334 * t1384 + t1337 * t771 - t1741, t1334 * t1383 + t1337 * t775 + t1747, pkin(1) * t820 + t1334 * t1386 + t1337 * t741, pkin(1) * t722 + t1334 * t1389 + t1337 * t711, t1656, t1334 * t1476 + t1337 * t973, -t1734, t1684, t1334 * t1484 + t1337 * t927, t1683, pkin(1) * t819 + t1334 * t1388 + t1337 * t723, t1334 * t1387 + t1337 * t739 + t1741, t1334 * t1385 + t1337 * t745 - t1747, pkin(1) * t704 + t1334 * t1390 + t1337 * t684, t1334 * t1496 + t1337 * t864, t1334 * t1502 + t1337 * t810, t1334 * t1498 + t1337 * t833, t1334 * t1497 + t1337 * t863, t1334 * t1499 + t1337 * t832, t1334 * t1495 + t1337 * t907, pkin(1) * t744 + t1334 * t1392 + t1337 * t678, pkin(1) * t748 + t1334 * t1391 + t1337 * t680, pkin(1) * t730 + t1334 * t1393 + t1337 * t672, pkin(1) * t668 + t1334 * t1394 + t1337 * t654;];
tauB_reg  = t1;
