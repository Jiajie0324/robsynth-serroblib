% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RPRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d6,theta2]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPR12_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR12_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR12_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR12_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR12_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRPR12_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:53:11
% EndTime: 2019-03-09 05:53:30
% DurationCPUTime: 11.15s
% Computational Cost: add. (14386->632), mult. (45965->845), div. (0->0), fcn. (40261->14), ass. (0->293)
t250 = sin(pkin(12));
t252 = cos(pkin(12));
t258 = cos(qJ(1));
t413 = cos(pkin(6));
t366 = t258 * t413;
t435 = sin(qJ(1));
t203 = t250 * t366 + t435 * t252;
t255 = sin(qJ(3));
t411 = sin(pkin(7));
t436 = cos(qJ(3));
t346 = t411 * t436;
t251 = sin(pkin(6));
t400 = t251 * t258;
t312 = t435 * t250 - t252 * t366;
t412 = cos(pkin(7));
t447 = t312 * t412;
t126 = t203 * t255 + t346 * t400 + t436 * t447;
t253 = sin(qJ(6));
t256 = cos(qJ(6));
t368 = t255 * t411;
t129 = -t203 * t436 + t255 * t447 + t368 * t400;
t254 = sin(qJ(4));
t257 = cos(qJ(4));
t371 = t251 * t412;
t443 = -t258 * t371 + t312 * t411;
t98 = t129 * t254 + t257 * t443;
t457 = -t126 * t256 + t253 * t98;
t456 = t126 * t253 + t256 * t98;
t99 = t129 * t257 - t254 * t443;
t369 = t255 * t412;
t281 = t251 * (-t250 * t369 + t436 * t252);
t315 = qJD(3) * t346;
t453 = qJD(1) * t281 - t315;
t293 = t436 * t250 + t252 * t369;
t331 = t413 * t411;
t313 = t255 * t331;
t176 = t251 * t293 + t313;
t167 = t176 * qJD(1);
t332 = t413 * t412;
t370 = t251 * t411;
t345 = qJD(1) * t370;
t383 = -t252 * t345 + qJD(3);
t291 = -qJD(1) * t332 - t383;
t120 = t257 * t167 - t254 * t291;
t117 = qJD(6) + t120;
t361 = qJD(1) * t413;
t356 = pkin(1) * t361;
t234 = t252 * t356;
t402 = t250 * t251;
t277 = t413 * pkin(2) + (-t412 * pkin(9) - qJ(2)) * t402;
t157 = qJD(1) * t277 + t234;
t193 = (-t411 * pkin(9) * t250 - pkin(2) * t252 - pkin(1)) * t251;
t183 = qJD(1) * t193 + qJD(2);
t114 = -t411 * t157 + t412 * t183;
t300 = t436 * t331;
t222 = qJD(1) * t300;
t347 = t412 * t436;
t321 = t252 * t347;
t305 = t251 * t321;
t390 = qJD(1) * t251;
t376 = t250 * t390;
t163 = -qJD(1) * t305 + t255 * t376 - t222;
t66 = t163 * pkin(3) - t167 * pkin(10) + t114;
t236 = t252 * t251 * qJ(2);
t200 = qJD(1) * t236 + t250 * t356;
t275 = (t252 * t371 + t331) * pkin(9);
t148 = qJD(1) * t275 + t200;
t87 = t436 * t148 + t157 * t369 + t183 * t368;
t69 = -pkin(10) * t291 + t87;
t30 = t254 * t69 - t257 * t66;
t395 = qJD(5) + t30;
t450 = t255 * t148 - t157 * t347;
t449 = t250 * t347 + t252 * t255;
t202 = t252 * t370 - t332;
t155 = qJD(4) + t163;
t401 = t250 * t255;
t175 = t251 * t401 - t300 - t305;
t248 = t251 ^ 2;
t448 = t248 * (t250 ^ 2 + t252 ^ 2);
t208 = t254 * t412 + t257 * t368;
t319 = t250 * t345;
t394 = -qJD(4) * t208 + t254 * t453 - t257 * t319;
t378 = pkin(1) * t413;
t206 = t250 * t378 + t236;
t169 = t275 + t206;
t241 = t252 * t378;
t177 = t241 + t277;
t272 = -t255 * t169 + t177 * t347 + t193 * t346;
t207 = t254 * t368 - t257 * t412;
t393 = -t207 * qJD(4) - t254 * t319 - t257 * t453;
t292 = t321 - t401;
t262 = (qJD(1) * qJD(3) * t292 + qJDD(1) * t293) * t251 + qJD(3) * t222 + qJDD(1) * t313;
t287 = t202 * qJDD(1) - qJDD(3);
t388 = qJD(4) * t120;
t57 = t262 * t254 + t257 * t287 + t388;
t348 = t413 * t435;
t296 = t258 * t250 + t252 * t348;
t446 = t296 * t412 - t435 * t370;
t343 = qJD(3) * t368;
t309 = -t449 * t390 + t343;
t387 = qJD(4) * t254;
t403 = t163 * t254;
t445 = -qJD(5) * t254 - t87 + (t387 + t403) * pkin(4);
t166 = t176 * qJD(3);
t396 = pkin(5) * t120 + t395;
t204 = -t250 * t348 + t258 * t252;
t130 = t204 * t255 + t446 * t436;
t303 = g(1) * t130 + g(2) * t126 + g(3) * t175;
t31 = t254 * t66 + t257 * t69;
t28 = -qJ(5) * t155 - t31;
t280 = t257 * t291;
t118 = t167 * t254 + t280;
t432 = pkin(5) * t118;
t18 = -t28 - t432;
t438 = pkin(4) + pkin(11);
t56 = qJD(4) * t280 + t167 * t387 + t254 * t287 - t257 * t262;
t55 = -qJDD(6) + t56;
t444 = t438 * t55 + (t18 - t31 + t432) * t117;
t301 = t175 * qJDD(1);
t112 = qJD(1) * t166 + t301;
t111 = qJDD(4) + t112;
t90 = t118 * t253 + t155 * t256;
t24 = qJD(6) * t90 + t111 * t253 - t256 * t57;
t442 = -t207 * t111 + t118 * t309 + t155 * t394 - t346 * t57;
t441 = -t208 * t111 + t120 * t309 - t155 * t393 + t346 * t56;
t440 = t120 ^ 2;
t439 = t155 ^ 2;
t437 = pkin(5) + pkin(10);
t434 = pkin(1) * t248;
t433 = pkin(4) * t111;
t431 = pkin(10) * t111;
t124 = t176 * t254 + t202 * t257;
t427 = t124 * pkin(4);
t122 = -t411 * t177 + t412 * t193;
t78 = t175 * pkin(3) - t176 * pkin(10) + t122;
t379 = t436 * t169 + t177 * t369 + t193 * t368;
t85 = -pkin(10) * t202 + t379;
t426 = t254 * t78 + t257 * t85;
t425 = pkin(10) * qJD(4);
t88 = -t256 * t118 + t155 * t253;
t424 = t117 * t88;
t423 = t117 * t90;
t422 = t155 * t28;
t421 = t155 * t31;
t420 = t155 * t88;
t419 = t155 * t90;
t384 = qJD(6) * t256;
t385 = qJD(6) * t253;
t23 = t256 * t111 + t118 * t384 - t155 * t385 + t253 * t57;
t418 = t23 * t256;
t417 = t253 * t55;
t52 = t256 * t55;
t386 = qJD(4) * t257;
t408 = qJ(5) * t257;
t416 = -qJ(5) * t386 - t163 * t408 + t445;
t113 = pkin(3) * t167 + pkin(10) * t163;
t86 = t183 * t346 - t450;
t414 = t254 * t113 + t257 * t86;
t41 = -qJ(5) * t167 - t414;
t415 = -pkin(5) * t403 - t437 * t387 + t41;
t410 = pkin(1) * qJDD(1);
t409 = qJ(5) * t118;
t108 = t111 * qJ(5);
t407 = t118 * t155;
t406 = t120 * t118;
t405 = t120 * t155;
t125 = t176 * t257 - t202 * t254;
t404 = t125 * qJ(5);
t398 = t253 * t254;
t397 = t254 * t256;
t377 = t251 * t435;
t392 = t258 * pkin(1) + qJ(2) * t377;
t382 = qJD(1) * qJD(2);
t381 = g(1) * t435;
t230 = t437 * t257;
t355 = qJDD(1) * t378;
t374 = t251 * t382;
t185 = qJDD(1) * t236 + t250 * t355 + t252 * t374;
t375 = qJD(3) * t436;
t373 = -qJ(5) * t254 - pkin(3);
t372 = -t254 * t85 + t257 * t78;
t260 = qJD(1) ^ 2;
t365 = t260 * t413;
t136 = qJDD(1) * t275 + t185;
t232 = t252 * t355;
t137 = qJDD(1) * t277 - t250 * t374 + t232;
t179 = qJDD(1) * t193 + qJDD(2);
t290 = t450 * qJD(3) - t436 * t136 - t137 * t369 - t179 * t368 - t183 * t315;
t37 = -pkin(10) * t287 - t290;
t104 = -t411 * t137 + t412 * t179;
t47 = t112 * pkin(3) - t262 * pkin(10) + t104;
t364 = -t254 * t47 - t257 * t37 - t66 * t386 + t69 * t387;
t363 = t254 * t37 - t257 * t47 + t69 * t386 + t66 * t387;
t360 = t155 * t257;
t359 = t117 * t253;
t35 = -qJ(5) * t175 - t426;
t351 = -t435 * pkin(1) + qJ(2) * t400;
t131 = t204 * t436 - t446 * t255;
t266 = -t296 * t411 - t435 * t371;
t100 = t131 * t254 + t257 * t266;
t350 = g(1) * t98 + g(2) * t100;
t101 = t131 * t257 - t254 * t266;
t349 = -g(1) * t99 - g(2) * t101;
t344 = qJD(3) * t369;
t342 = -g(1) * t126 + g(2) * t130;
t335 = qJDD(5) + t363;
t4 = -pkin(5) * t56 - t438 * t111 + t335;
t311 = t255 * t136 - t137 * t347 + t148 * t375 + t157 * t344 - t179 * t346 + t183 * t343;
t38 = pkin(3) * t287 + t311;
t265 = t56 * qJ(5) - t120 * qJD(5) + t38;
t8 = t438 * t57 + t265;
t341 = t253 * t4 + t256 * t8;
t229 = t437 * t254;
t340 = -qJD(6) * t229 - t445 - t155 * (pkin(11) * t254 - t408);
t209 = -t438 * t257 + t373;
t82 = t254 * t86;
t339 = qJD(6) * t209 - qJD(4) * t230 + t82 + (-pkin(5) * t163 - t113) * t257 - t438 * t167;
t338 = qJD(2) * t361;
t336 = g(2) * t400 - g(3) * t413;
t105 = t163 * t397 + t167 * t253;
t334 = t256 * t387 + t105;
t106 = -t163 * t398 + t167 * t256;
t333 = t253 * t387 - t106;
t17 = -t438 * t155 + t396;
t68 = pkin(3) * t291 - t86;
t263 = -t120 * qJ(5) + t68;
t26 = t438 * t118 + t263;
t9 = t17 * t256 - t253 * t26;
t10 = t17 * t253 + t256 * t26;
t20 = pkin(5) * t125 - t438 * t175 - t372;
t84 = t202 * pkin(3) - t272;
t267 = t84 - t404;
t32 = t438 * t124 + t267;
t328 = t20 * t256 - t253 * t32;
t327 = t20 * t253 + t256 * t32;
t73 = t449 * qJD(2) * t251 + t169 * t375 + t177 * t344 + t193 * t343;
t326 = t124 * t256 - t175 * t253;
t95 = t124 * t253 + t175 * t256;
t325 = (-qJ(2) * t376 + t234) * t250 - t200 * t252;
t165 = (t251 * t292 + t300) * qJD(3);
t318 = t250 * qJD(2) * t370;
t103 = t166 * pkin(3) - t165 * pkin(10) + t318;
t72 = qJD(2) * t281 + t272 * qJD(3);
t324 = t103 * t257 - t254 * t72 - t85 * t386 - t78 * t387;
t149 = t155 * qJD(5);
t6 = -t108 - t149 + t364;
t317 = pkin(4) * t257 - t373;
t314 = g(1) * t258 + g(2) * t435;
t310 = -t117 * t359 - t52;
t308 = t254 * t103 + t257 * t72 + t78 * t386 - t387 * t85;
t307 = t155 * t68 - t431;
t40 = t118 * pkin(4) + t263;
t306 = -t155 * t40 + t431;
t304 = -g(1) * t101 + g(2) * t99 - g(3) * t125;
t302 = -g(1) * t131 + g(2) * t129 - g(3) * t176;
t299 = -t117 ^ 2 * t256 + t417;
t295 = t256 * t207 + t253 * t346;
t294 = -t253 * t207 + t256 * t346;
t286 = -t56 + t407;
t2 = -qJD(6) * t10 - t253 * t8 + t256 * t4;
t93 = -t176 * t387 + (-qJD(4) * t202 + t165) * t257;
t284 = -qJ(5) * t93 - qJD(5) * t125 + t73;
t283 = g(1) * t100 - g(2) * t98 + g(3) * t124 - t363;
t282 = t304 - t364;
t279 = t155 * t425 - t303;
t11 = t57 * pkin(4) + t265;
t278 = t11 + t279;
t14 = -qJ(5) * t166 - qJD(5) * t175 - t308;
t5 = -pkin(5) * t57 - t6;
t273 = t5 + (t117 * t438 + t409) * t117 + t304;
t271 = t120 * t40 + qJDD(5) - t283;
t235 = -t251 * t410 + qJDD(2);
t205 = -qJ(2) * t402 + t241;
t184 = t232 + (-qJ(2) * qJDD(1) - t382) * t402;
t92 = qJD(4) * t125 + t165 * t254;
t76 = pkin(4) * t120 + t409;
t59 = t100 * t253 + t130 * t256;
t58 = t100 * t256 - t130 * t253;
t49 = qJD(6) * t326 + t166 * t256 + t253 * t92;
t48 = qJD(6) * t95 + t166 * t253 - t92 * t256;
t46 = t267 + t427;
t43 = -pkin(4) * t167 - t113 * t257 + t82;
t36 = -pkin(4) * t175 - t372;
t27 = -pkin(4) * t155 + t395;
t25 = -pkin(5) * t124 - t35;
t19 = pkin(4) * t92 + t284;
t16 = t438 * t92 + t284;
t15 = -pkin(4) * t166 - t324;
t13 = -pkin(5) * t92 - t14;
t12 = pkin(5) * t93 - t438 * t166 - t324;
t7 = t335 - t433;
t1 = t9 * qJD(6) + t341;
t3 = [qJDD(1), -g(2) * t258 + t381, t314, t184 * t413 + g(1) * t203 - g(2) * t204 + (-t235 * t252 - t250 * t338) * t251 + (t205 * t413 + t252 * t434) * qJDD(1), -t185 * t413 - g(1) * t312 + g(2) * t296 + (t235 * t250 - t252 * t338) * t251 + (-t206 * t413 - t250 * t434) * qJDD(1), t382 * t448 + (-t184 * t250 + t185 * t252 + (-t205 * t250 + t206 * t252) * qJDD(1) - t314) * t251, t185 * t206 + t184 * t205 - g(1) * t351 - g(2) * t392 + (-t235 * pkin(1) - qJD(2) * t325) * t251, t167 * t165 + t262 * t176, -t176 * t112 - t165 * t163 - t167 * t166 - t262 * t175, -t165 * t291 - t176 * t287 - t262 * t202, t112 * t202 + t166 * t291 + t175 * t287, t287 * t202, -g(1) * t129 - g(2) * t131 + t104 * t175 + t122 * t112 + t114 * t166 + t163 * t318 + t202 * t311 - t272 * t287 + t291 * t73, t104 * t176 + t114 * t165 + t122 * t262 + t167 * t318 - t202 * t290 + t287 * t379 + t291 * t72 + t342, t120 * t93 - t125 * t56, -t118 * t93 - t120 * t92 + t124 * t56 - t125 * t57, t111 * t125 + t120 * t166 + t155 * t93 - t175 * t56, -t111 * t124 - t118 * t166 - t155 * t92 - t175 * t57, t111 * t175 + t155 * t166, t111 * t372 + t73 * t118 + t38 * t124 + t155 * t324 - t30 * t166 - t175 * t363 + t84 * t57 + t68 * t92 + t349, -t111 * t426 + t73 * t120 + t38 * t125 - t155 * t308 - t31 * t166 + t175 * t364 - t84 * t56 + t68 * t93 + t350, t118 * t14 + t120 * t15 + t124 * t6 + t125 * t7 + t27 * t93 + t28 * t92 + t35 * t57 - t36 * t56 - t342, -t11 * t124 + t111 * t36 - t118 * t19 + t15 * t155 + t166 * t27 + t175 * t7 - t40 * t92 - t46 * t57 - t349, -t11 * t125 - t111 * t35 - t120 * t19 - t14 * t155 - t166 * t28 - t175 * t6 - t40 * t93 + t46 * t56 - t350, t11 * t46 + t40 * t19 + t6 * t35 + t28 * t14 + t7 * t36 + t27 * t15 - g(1) * (-t203 * pkin(2) + t129 * pkin(3) + t99 * pkin(4) - pkin(10) * t126 + t98 * qJ(5) + t351) - g(2) * (t204 * pkin(2) + t131 * pkin(3) + t101 * pkin(4) + t130 * pkin(10) + t100 * qJ(5) + t392) + (g(1) * t443 + g(2) * t266) * pkin(9), t23 * t95 + t49 * t90, t23 * t326 - t24 * t95 - t48 * t90 - t49 * t88, t117 * t49 + t125 * t23 - t55 * t95 + t90 * t93, -t117 * t48 - t125 * t24 - t326 * t55 - t88 * t93, t117 * t93 - t125 * t55 (-qJD(6) * t327 + t12 * t256 - t16 * t253) * t117 - t328 * t55 + t2 * t125 + t9 * t93 + t13 * t88 + t25 * t24 - t5 * t326 + t18 * t48 - g(1) * t457 - g(2) * t59 -(qJD(6) * t328 + t12 * t253 + t16 * t256) * t117 + t327 * t55 - t1 * t125 - t10 * t93 + t13 * t90 + t25 * t23 + t5 * t95 + t18 * t49 - g(1) * t456 - g(2) * t58; 0, 0, 0 (-qJDD(1) * t252 + t250 * t365) * t251 (qJDD(1) * t250 + t252 * t365) * t251, -t260 * t448, qJDD(2) + (qJD(1) * t325 - t381 - t410) * t251 + t336, 0, 0, 0, 0, 0, t112 * t412 - t163 * t319 - t287 * t346 + t309 * t291, -t167 * t319 + t262 * t412 + t287 * t368 - t291 * t453, 0, 0, 0, 0, 0, t442, t441, -t118 * t393 - t120 * t394 - t207 * t56 - t208 * t57, -t442, -t441, -g(1) * t377 - t11 * t346 + t7 * t207 - t6 * t208 - t27 * t394 - t28 * t393 + t309 * t40 + t336, 0, 0, 0, 0, 0, t208 * t24 - t295 * t55 + t393 * t88 + (qJD(6) * t294 - t309 * t253 - t394 * t256) * t117, t208 * t23 - t294 * t55 + t393 * t90 + (-qJD(6) * t295 + t394 * t253 - t309 * t256) * t117; 0, 0, 0, 0, 0, 0, 0, t167 * t163, -t163 ^ 2 + t167 ^ 2, -t163 * t291 + t262, t167 * t383 + (t167 * t332 - t166) * qJD(1) - t301, -t287, -t114 * t167 - t291 * t87 + t303 - t311, t114 * t163 - t291 * t86 + t290 - t302, t120 * t360 - t254 * t56 (-t56 - t407) * t257 + (-t57 - t405) * t254, t111 * t254 - t120 * t167 + t155 * t360, t111 * t257 + t118 * t167 - t439 * t254, -t155 * t167, -pkin(3) * t57 - t87 * t118 + t82 * t155 + t30 * t167 + t307 * t254 + (-t38 + (-t113 - t425) * t155 + t303) * t257, pkin(3) * t56 + t414 * t155 + t31 * t167 - t87 * t120 + t307 * t257 + (t279 + t38) * t254, -t118 * t41 - t120 * t43 + (-t6 + t155 * t27 + (-t57 + t388) * pkin(10)) * t257 + (t7 + t422 + (qJD(4) * t118 - t56) * pkin(10)) * t254 + t302, -t118 * t416 - t155 * t43 - t167 * t27 + t254 * t306 + t257 * t278 + t317 * t57, -t120 * t416 + t155 * t41 + t167 * t28 - t254 * t278 + t257 * t306 - t317 * t56, -t27 * t43 - t28 * t41 + t416 * t40 + (t7 * t254 - t6 * t257 + (t254 * t28 + t257 * t27) * qJD(4) + t302) * pkin(10) + (-t11 + t303) * t317, -t23 * t253 * t257 + (-t257 * t384 + t333) * t90, t105 * t90 + t106 * t88 + (-t253 * t88 + t256 * t90) * t387 + (-t418 + t24 * t253 + (t253 * t90 + t256 * t88) * qJD(6)) * t257, t23 * t254 + t333 * t117 + (-t117 * t384 + t417 + t419) * t257, -t24 * t254 + t334 * t117 + (t117 * t385 - t420 + t52) * t257, t117 * t360 - t254 * t55 -(-t209 * t253 + t229 * t256) * t55 + t2 * t254 + t230 * t24 - g(1) * (-t130 * t398 + t131 * t256) - g(2) * (-t126 * t398 - t129 * t256) - g(3) * (-t175 * t398 + t176 * t256) + t415 * t88 - t334 * t18 + (t253 * t340 - t256 * t339) * t117 + (t155 * t9 - t18 * t385 + t5 * t256) * t257 (t209 * t256 + t229 * t253) * t55 - t1 * t254 + t230 * t23 - g(1) * (-t130 * t397 - t131 * t253) - g(2) * (-t126 * t397 + t129 * t253) - g(3) * (-t175 * t397 - t176 * t253) + t415 * t90 + t333 * t18 + (t253 * t339 + t256 * t340) * t117 + (-t10 * t155 - t18 * t384 - t5 * t253) * t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, -t118 ^ 2 + t440, t286, t405 - t57, t111, -t120 * t68 + t283 + t421, t118 * t68 - t155 * t30 - t282, pkin(4) * t56 - qJ(5) * t57 + (-t28 - t31) * t120 + (t27 - t395) * t118, t118 * t76 + t271 - t421 - 0.2e1 * t433, -t118 * t40 + t120 * t76 + t155 * t395 + 0.2e1 * t108 + t149 + t282, -t6 * qJ(5) - t7 * pkin(4) - t40 * t76 - t27 * t31 - g(1) * (-pkin(4) * t100 + qJ(5) * t101) - g(2) * (pkin(4) * t98 - qJ(5) * t99) - g(3) * (t404 - t427) - t395 * t28, -t359 * t90 + t418 (-t24 - t423) * t256 + (-t23 + t424) * t253, t118 * t90 + t310, -t118 * t88 + t299, t117 * t118, qJ(5) * t24 + t9 * t118 + t273 * t253 + t256 * t444 + t396 * t88, qJ(5) * t23 - t10 * t118 - t253 * t444 + t273 * t256 + t396 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t111 - t406, -t439 - t440, t271 + t422 - t433, 0, 0, 0, 0, 0, t310 - t420, t299 - t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90 * t88, -t88 ^ 2 + t90 ^ 2, t23 + t424, -t24 + t423, -t55, -g(1) * t58 + g(2) * t456 - g(3) * t326 + t10 * t117 - t18 * t90 + t2, t18 * t88 + g(1) * t59 - g(2) * t457 + g(3) * t95 - t341 + (t117 - qJD(6)) * t9;];
tau_reg  = t3;
