% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 10:25
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRRRR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 10:23:27
% EndTime: 2019-05-08 10:23:47
% DurationCPUTime: 18.63s
% Computational Cost: add. (223019->384), mult. (484139->586), div. (0->0), fcn. (403129->14), ass. (0->329)
t2670 = sin(pkin(6));
t2684 = qJD(1) ^ 2;
t2762 = t2670 * t2684;
t2671 = cos(pkin(6));
t2727 = qJD(1) * t2671 + qJD(2);
t2719 = t2727 ^ 2;
t2675 = sin(qJ(3));
t2681 = cos(qJ(3));
t2676 = sin(qJ(2));
t2739 = t2670 * t2676;
t2730 = qJD(1) * t2739;
t2635 = t2675 * t2730 - t2681 * t2727;
t2636 = t2675 * t2727 + t2681 * t2730;
t2674 = sin(qJ(4));
t2680 = cos(qJ(4));
t2616 = t2635 * t2680 + t2636 * t2674;
t2618 = -t2635 * t2674 + t2636 * t2680;
t2673 = sin(qJ(5));
t2679 = cos(qJ(5));
t2582 = t2679 * t2616 + t2618 * t2673;
t2581 = qJD(6) + t2582;
t2761 = qJD(6) + t2581;
t2584 = -t2616 * t2673 + t2618 * t2679;
t2682 = cos(qJ(2));
t2738 = t2670 * t2682;
t2729 = qJD(1) * t2738;
t2657 = -qJD(3) + t2729;
t2650 = -qJD(4) + t2657;
t2648 = -qJD(5) + t2650;
t2672 = sin(qJ(6));
t2678 = cos(qJ(6));
t2569 = t2584 * t2672 + t2678 * t2648;
t2760 = t2569 ^ 2;
t2571 = t2584 * t2678 - t2648 * t2672;
t2759 = t2571 ^ 2;
t2758 = t2581 ^ 2;
t2757 = t2582 ^ 2;
t2756 = t2584 ^ 2;
t2755 = t2616 ^ 2;
t2754 = t2618 ^ 2;
t2753 = t2635 ^ 2;
t2752 = t2636 ^ 2;
t2751 = t2648 ^ 2;
t2750 = t2650 ^ 2;
t2749 = t2657 ^ 2;
t2748 = t2671 * g(3);
t2747 = (-pkin(2) * t2682 - pkin(9) * t2676) * t2762;
t2746 = t2569 * t2571;
t2745 = t2582 * t2584;
t2744 = t2616 * t2618;
t2743 = t2616 * t2650;
t2742 = t2635 * t2636;
t2741 = t2635 * t2657;
t2740 = t2670 ^ 2 * t2684;
t2737 = qJD(3) + t2657;
t2736 = qJD(4) + t2650;
t2735 = qJD(5) + t2648;
t2734 = qJD(6) - t2581;
t2720 = qJDD(1) * t2671 + qJDD(2);
t2677 = sin(qJ(1));
t2683 = cos(qJ(1));
t2660 = -g(1) * t2683 - g(2) * t2677;
t2731 = qJDD(1) * t2670;
t2638 = -pkin(1) * t2684 + pkin(8) * t2731 + t2660;
t2659 = t2677 * g(1) - t2683 * g(2);
t2689 = qJDD(1) * pkin(1) + pkin(8) * t2762 + t2659;
t2686 = t2671 * t2689;
t2733 = t2682 * t2638 + t2676 * t2686;
t2591 = t2720 * pkin(9) - t2719 * pkin(2) + (-g(3) * t2676 + t2682 * t2747) * t2670 + t2733;
t2642 = qJD(2) * t2729 + t2676 * t2731;
t2717 = qJD(1) * t2727;
t2693 = t2682 * t2717;
t2694 = t2676 * t2717;
t2732 = -qJD(2) * t2730 + t2682 * t2731;
t2592 = -t2748 - t2642 * pkin(9) - t2732 * pkin(2) + (pkin(2) * t2694 - pkin(9) * t2693 - t2689) * t2670;
t2557 = -t2675 * t2591 + t2681 * t2592;
t2728 = -qJDD(3) + t2732;
t2606 = -t2728 - t2742;
t2690 = -t2681 * t2642 - t2675 * t2720;
t2610 = -t2635 * qJD(3) - t2690;
t2531 = (-t2610 + t2741) * pkin(10) + t2606 * pkin(3) + t2557;
t2558 = t2681 * t2591 + t2675 * t2592;
t2622 = -pkin(3) * t2657 - pkin(10) * t2636;
t2721 = t2675 * t2642 - t2681 * t2720;
t2692 = -qJD(3) * t2636 - t2721;
t2538 = -pkin(3) * t2753 + pkin(10) * t2692 + t2657 * t2622 + t2558;
t2505 = t2674 * t2531 + t2680 * t2538;
t2723 = t2674 * t2610 - t2680 * t2692;
t2563 = -qJD(4) * t2618 - t2723;
t2604 = -pkin(4) * t2650 - pkin(11) * t2618;
t2488 = -pkin(4) * t2755 + pkin(11) * t2563 + t2604 * t2650 + t2505;
t2504 = t2680 * t2531 - t2674 * t2538;
t2687 = -t2680 * t2610 - t2674 * t2692;
t2564 = -t2616 * qJD(4) - t2687;
t2718 = -qJDD(4) + t2728;
t2575 = -t2718 - t2744;
t2685 = (-t2564 + t2743) * pkin(11) + t2575 * pkin(4) + t2504;
t2460 = t2679 * t2488 + t2673 * t2685;
t2459 = -t2488 * t2673 + t2679 * t2685;
t2702 = -t2673 * t2563 - t2679 * t2564;
t2519 = -qJD(5) * t2582 - t2702;
t2726 = -t2582 * t2648 - t2519;
t2695 = -qJDD(5) + t2718;
t2725 = -t2672 * t2519 - t2678 * t2695;
t2724 = -t2679 * t2563 + t2673 * t2564;
t2722 = t2676 * t2638 - t2682 * t2686;
t2553 = pkin(5) * t2582 - pkin(12) * t2584;
t2451 = -pkin(5) * t2751 - pkin(12) * t2695 - t2582 * t2553 + t2460;
t2507 = (qJD(5) - t2648) * t2584 + t2724;
t2590 = -t2720 * pkin(2) - t2719 * pkin(9) + (g(3) * t2682 + t2676 * t2747) * t2670 + t2722;
t2546 = -t2692 * pkin(3) - t2753 * pkin(10) + t2636 * t2622 + t2590;
t2511 = -t2563 * pkin(4) - t2755 * pkin(11) + t2618 * t2604 + t2546;
t2467 = pkin(5) * t2507 + pkin(12) * t2726 + t2511;
t2436 = -t2451 * t2672 + t2467 * t2678;
t2437 = t2451 * t2678 + t2467 * t2672;
t2420 = -t2436 * t2672 + t2437 * t2678;
t2450 = pkin(5) * t2695 - pkin(12) * t2751 + t2553 * t2584 - t2459;
t2410 = t2420 * t2673 - t2450 * t2679;
t2411 = t2420 * t2679 + t2450 * t2673;
t2399 = t2410 * t2680 + t2411 * t2674;
t2400 = -t2410 * t2674 + t2411 * t2680;
t2396 = -t2399 * t2675 + t2400 * t2681;
t2419 = t2436 * t2678 + t2437 * t2672;
t2716 = t2396 * t2676 - t2419 * t2682;
t2438 = t2459 * t2679 + t2460 * t2673;
t2439 = -t2459 * t2673 + t2460 * t2679;
t2421 = t2438 * t2680 + t2439 * t2674;
t2422 = -t2438 * t2674 + t2439 * t2680;
t2409 = -t2421 * t2675 + t2422 * t2681;
t2715 = t2409 * t2676 - t2511 * t2682;
t2496 = -t2571 * t2734 + t2725;
t2688 = -t2678 * t2519 + t2672 * t2695;
t2498 = t2569 * t2734 + t2688;
t2469 = t2496 * t2678 - t2498 * t2672;
t2526 = -t2759 - t2760;
t2455 = t2469 * t2673 - t2526 * t2679;
t2456 = t2469 * t2679 + t2526 * t2673;
t2434 = t2455 * t2680 + t2456 * t2674;
t2435 = -t2455 * t2674 + t2456 * t2680;
t2418 = -t2434 * t2675 + t2435 * t2681;
t2468 = t2496 * t2672 + t2498 * t2678;
t2714 = t2418 * t2676 - t2468 * t2682;
t2691 = -qJD(5) * t2584 - qJDD(6) - t2724;
t2502 = -t2691 - t2746;
t2529 = -t2758 - t2760;
t2480 = -t2502 * t2672 + t2529 * t2678;
t2495 = t2571 * t2761 - t2725;
t2461 = t2480 * t2673 - t2495 * t2679;
t2462 = t2480 * t2679 + t2495 * t2673;
t2440 = t2461 * t2680 + t2462 * t2674;
t2441 = -t2461 * t2674 + t2462 * t2680;
t2424 = -t2440 * t2675 + t2441 * t2681;
t2479 = t2502 * t2678 + t2529 * t2672;
t2713 = t2424 * t2676 - t2479 * t2682;
t2503 = t2691 - t2746;
t2534 = -t2758 - t2759;
t2484 = t2503 * t2678 - t2534 * t2672;
t2497 = -t2569 * t2761 - t2688;
t2463 = t2484 * t2673 - t2497 * t2679;
t2464 = t2484 * t2679 + t2497 * t2673;
t2442 = t2463 * t2680 + t2464 * t2674;
t2443 = -t2463 * t2674 + t2464 * t2680;
t2426 = -t2442 * t2675 + t2443 * t2681;
t2483 = t2503 * t2672 + t2534 * t2678;
t2712 = t2426 * t2676 - t2483 * t2682;
t2508 = -t2584 * t2735 - t2724;
t2510 = t2582 * t2735 + t2702;
t2476 = t2508 * t2673 + t2510 * t2679;
t2477 = t2508 * t2679 - t2510 * t2673;
t2452 = t2476 * t2680 + t2477 * t2674;
t2453 = -t2476 * t2674 + t2477 * t2680;
t2431 = -t2452 * t2675 + t2453 * t2681;
t2539 = -t2756 - t2757;
t2711 = t2431 * t2676 - t2539 * t2682;
t2472 = t2504 * t2680 + t2505 * t2674;
t2473 = -t2504 * t2674 + t2505 * t2680;
t2448 = -t2472 * t2675 + t2473 * t2681;
t2710 = t2448 * t2676 - t2546 * t2682;
t2544 = -t2695 - t2745;
t2551 = -t2751 - t2757;
t2515 = t2544 * t2679 + t2551 * t2673;
t2516 = -t2544 * t2673 + t2551 * t2679;
t2489 = t2515 * t2680 + t2516 * t2674;
t2490 = -t2515 * t2674 + t2516 * t2680;
t2466 = -t2489 * t2675 + t2490 * t2681;
t2709 = t2466 * t2676 - t2507 * t2682;
t2543 = t2695 - t2745;
t2568 = -t2751 - t2756;
t2527 = t2543 * t2673 + t2568 * t2679;
t2528 = t2543 * t2679 - t2568 * t2673;
t2499 = t2527 * t2680 + t2528 * t2674;
t2500 = -t2527 * t2674 + t2528 * t2680;
t2471 = -t2499 * t2675 + t2500 * t2681;
t2708 = t2471 * t2676 + t2682 * t2726;
t2548 = -t2618 * t2736 - t2723;
t2550 = t2616 * t2736 + t2687;
t2517 = t2548 * t2674 + t2550 * t2680;
t2518 = t2548 * t2680 - t2550 * t2674;
t2492 = -t2517 * t2675 + t2518 * t2681;
t2565 = -t2754 - t2755;
t2707 = t2492 * t2676 - t2565 * t2682;
t2578 = -t2750 - t2755;
t2541 = t2575 * t2680 + t2578 * t2674;
t2542 = -t2575 * t2674 + t2578 * t2680;
t2514 = -t2541 * t2675 + t2542 * t2681;
t2547 = (qJD(4) - t2650) * t2618 + t2723;
t2706 = t2514 * t2676 - t2547 * t2682;
t2574 = t2718 - t2744;
t2601 = -t2750 - t2754;
t2555 = t2574 * t2674 + t2601 * t2680;
t2556 = t2574 * t2680 - t2601 * t2674;
t2523 = -t2555 * t2675 + t2556 * t2681;
t2549 = t2564 + t2743;
t2705 = t2523 * t2676 - t2549 * t2682;
t2525 = -t2557 * t2675 + t2558 * t2681;
t2704 = t2525 * t2676 - t2590 * t2682;
t2596 = -t2636 * t2737 - t2721;
t2598 = t2635 * t2737 + t2690;
t2560 = t2596 * t2681 - t2598 * t2675;
t2603 = -t2752 - t2753;
t2703 = t2560 * t2676 - t2603 * t2682;
t2611 = -t2749 - t2753;
t2573 = -t2606 * t2675 + t2611 * t2681;
t2595 = (qJD(3) - t2657) * t2636 + t2721;
t2701 = t2573 * t2676 - t2595 * t2682;
t2605 = t2728 - t2742;
t2620 = -t2749 - t2752;
t2580 = t2605 * t2681 - t2620 * t2675;
t2597 = t2610 + t2741;
t2700 = t2580 * t2676 - t2597 * t2682;
t2612 = -g(3) * t2738 - t2722;
t2613 = -g(3) * t2739 + t2733;
t2699 = t2612 * t2682 + t2613 * t2676;
t2624 = t2670 * t2693 - t2642;
t2646 = t2670 * t2694;
t2625 = t2646 + t2732;
t2698 = t2624 * t2682 + t2625 * t2676;
t2668 = t2676 ^ 2;
t2633 = -t2668 * t2740 - t2719;
t2656 = t2682 * t2676 * t2740;
t2640 = t2656 - t2720;
t2697 = t2633 * t2682 + t2640 * t2676;
t2639 = t2656 + t2720;
t2669 = t2682 ^ 2;
t2643 = -t2669 * t2740 - t2719;
t2696 = t2639 * t2682 + t2643 * t2676;
t2655 = -qJDD(1) * t2677 - t2683 * t2684;
t2654 = qJDD(1) * t2683 - t2677 * t2684;
t2644 = (-t2668 - t2669) * t2740;
t2628 = -t2670 * t2689 - t2748;
t2626 = t2646 - t2732;
t2623 = t2727 * t2729 + t2642;
t2621 = -t2639 * t2676 + t2643 * t2682;
t2619 = -t2633 * t2676 + t2640 * t2682;
t2602 = -t2624 * t2676 + t2625 * t2682;
t2600 = -t2670 * t2626 + t2671 * t2696;
t2599 = t2671 * t2626 + t2670 * t2696;
t2594 = -t2670 * t2623 + t2671 * t2697;
t2593 = t2671 * t2623 + t2670 * t2697;
t2589 = -t2670 * t2644 + t2671 * t2698;
t2588 = t2671 * t2644 + t2670 * t2698;
t2579 = t2605 * t2675 + t2620 * t2681;
t2577 = -t2612 * t2676 + t2613 * t2682;
t2572 = t2606 * t2681 + t2611 * t2675;
t2567 = -t2670 * t2628 + t2671 * t2699;
t2566 = t2671 * t2628 + t2670 * t2699;
t2559 = t2596 * t2675 + t2598 * t2681;
t2554 = t2580 * t2682 + t2597 * t2676;
t2552 = t2573 * t2682 + t2595 * t2676;
t2540 = t2560 * t2682 + t2603 * t2676;
t2536 = -t2670 * t2579 + t2671 * t2700;
t2535 = t2671 * t2579 + t2670 * t2700;
t2533 = -t2670 * t2572 + t2671 * t2701;
t2532 = t2671 * t2572 + t2670 * t2701;
t2524 = t2557 * t2681 + t2558 * t2675;
t2522 = t2555 * t2681 + t2556 * t2675;
t2521 = -t2670 * t2559 + t2671 * t2703;
t2520 = t2671 * t2559 + t2670 * t2703;
t2513 = t2541 * t2681 + t2542 * t2675;
t2512 = t2525 * t2682 + t2590 * t2676;
t2506 = t2523 * t2682 + t2549 * t2676;
t2501 = t2514 * t2682 + t2547 * t2676;
t2494 = -t2670 * t2524 + t2671 * t2704;
t2493 = t2671 * t2524 + t2670 * t2704;
t2491 = t2517 * t2681 + t2518 * t2675;
t2482 = -t2670 * t2522 + t2671 * t2705;
t2481 = t2671 * t2522 + t2670 * t2705;
t2478 = t2492 * t2682 + t2565 * t2676;
t2475 = -t2670 * t2513 + t2671 * t2706;
t2474 = t2671 * t2513 + t2670 * t2706;
t2470 = t2499 * t2681 + t2500 * t2675;
t2465 = t2489 * t2681 + t2490 * t2675;
t2458 = -t2670 * t2491 + t2671 * t2707;
t2457 = t2671 * t2491 + t2670 * t2707;
t2454 = t2471 * t2682 - t2676 * t2726;
t2449 = t2466 * t2682 + t2507 * t2676;
t2447 = t2472 * t2681 + t2473 * t2675;
t2446 = t2448 * t2682 + t2546 * t2676;
t2445 = -t2670 * t2470 + t2671 * t2708;
t2444 = t2671 * t2470 + t2670 * t2708;
t2433 = -t2670 * t2465 + t2671 * t2709;
t2432 = t2671 * t2465 + t2670 * t2709;
t2430 = t2452 * t2681 + t2453 * t2675;
t2429 = t2431 * t2682 + t2539 * t2676;
t2428 = -t2670 * t2447 + t2671 * t2710;
t2427 = t2671 * t2447 + t2670 * t2710;
t2425 = t2442 * t2681 + t2443 * t2675;
t2423 = t2440 * t2681 + t2441 * t2675;
t2417 = t2434 * t2681 + t2435 * t2675;
t2416 = t2426 * t2682 + t2483 * t2676;
t2415 = t2424 * t2682 + t2479 * t2676;
t2414 = -t2670 * t2430 + t2671 * t2711;
t2413 = t2671 * t2430 + t2670 * t2711;
t2412 = t2418 * t2682 + t2468 * t2676;
t2408 = t2421 * t2681 + t2422 * t2675;
t2407 = -t2670 * t2425 + t2671 * t2712;
t2406 = t2671 * t2425 + t2670 * t2712;
t2405 = -t2670 * t2423 + t2671 * t2713;
t2404 = t2671 * t2423 + t2670 * t2713;
t2403 = t2409 * t2682 + t2511 * t2676;
t2402 = -t2670 * t2417 + t2671 * t2714;
t2401 = t2671 * t2417 + t2670 * t2714;
t2398 = -t2670 * t2408 + t2671 * t2715;
t2397 = t2671 * t2408 + t2670 * t2715;
t2395 = t2399 * t2681 + t2400 * t2675;
t2394 = t2396 * t2682 + t2419 * t2676;
t2393 = -t2670 * t2395 + t2671 * t2716;
t2392 = t2671 * t2395 + t2670 * t2716;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2655, -t2654, 0, -t2659 * t2677 + t2660 * t2683, 0, 0, 0, 0, 0, 0, -t2600 * t2677 + t2621 * t2683, -t2594 * t2677 + t2619 * t2683, -t2589 * t2677 + t2602 * t2683, -t2567 * t2677 + t2577 * t2683, 0, 0, 0, 0, 0, 0, -t2533 * t2677 + t2552 * t2683, -t2536 * t2677 + t2554 * t2683, -t2521 * t2677 + t2540 * t2683, -t2494 * t2677 + t2512 * t2683, 0, 0, 0, 0, 0, 0, -t2475 * t2677 + t2501 * t2683, -t2482 * t2677 + t2506 * t2683, -t2458 * t2677 + t2478 * t2683, -t2428 * t2677 + t2446 * t2683, 0, 0, 0, 0, 0, 0, -t2433 * t2677 + t2449 * t2683, -t2445 * t2677 + t2454 * t2683, -t2414 * t2677 + t2429 * t2683, -t2398 * t2677 + t2403 * t2683, 0, 0, 0, 0, 0, 0, -t2405 * t2677 + t2415 * t2683, -t2407 * t2677 + t2416 * t2683, -t2402 * t2677 + t2412 * t2683, -t2393 * t2677 + t2394 * t2683; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2654, t2655, 0, t2659 * t2683 + t2660 * t2677, 0, 0, 0, 0, 0, 0, t2600 * t2683 + t2621 * t2677, t2594 * t2683 + t2619 * t2677, t2589 * t2683 + t2602 * t2677, t2567 * t2683 + t2577 * t2677, 0, 0, 0, 0, 0, 0, t2533 * t2683 + t2552 * t2677, t2536 * t2683 + t2554 * t2677, t2521 * t2683 + t2540 * t2677, t2494 * t2683 + t2512 * t2677, 0, 0, 0, 0, 0, 0, t2475 * t2683 + t2501 * t2677, t2482 * t2683 + t2506 * t2677, t2458 * t2683 + t2478 * t2677, t2428 * t2683 + t2446 * t2677, 0, 0, 0, 0, 0, 0, t2433 * t2683 + t2449 * t2677, t2445 * t2683 + t2454 * t2677, t2414 * t2683 + t2429 * t2677, t2398 * t2683 + t2403 * t2677, 0, 0, 0, 0, 0, 0, t2405 * t2683 + t2415 * t2677, t2407 * t2683 + t2416 * t2677, t2402 * t2683 + t2412 * t2677, t2393 * t2683 + t2394 * t2677; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2599, t2593, t2588, t2566, 0, 0, 0, 0, 0, 0, t2532, t2535, t2520, t2493, 0, 0, 0, 0, 0, 0, t2474, t2481, t2457, t2427, 0, 0, 0, 0, 0, 0, t2432, t2444, t2413, t2397, 0, 0, 0, 0, 0, 0, t2404, t2406, t2401, t2392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2684, -qJDD(1), 0, t2660, 0, 0, 0, 0, 0, 0, t2621, t2619, t2602, t2577, 0, 0, 0, 0, 0, 0, t2552, t2554, t2540, t2512, 0, 0, 0, 0, 0, 0, t2501, t2506, t2478, t2446, 0, 0, 0, 0, 0, 0, t2449, t2454, t2429, t2403, 0, 0, 0, 0, 0, 0, t2415, t2416, t2412, t2394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2684, 0, t2659, 0, 0, 0, 0, 0, 0, t2600, t2594, t2589, t2567, 0, 0, 0, 0, 0, 0, t2533, t2536, t2521, t2494, 0, 0, 0, 0, 0, 0, t2475, t2482, t2458, t2428, 0, 0, 0, 0, 0, 0, t2433, t2445, t2414, t2398, 0, 0, 0, 0, 0, 0, t2405, t2407, t2402, t2393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2599, t2593, t2588, t2566, 0, 0, 0, 0, 0, 0, t2532, t2535, t2520, t2493, 0, 0, 0, 0, 0, 0, t2474, t2481, t2457, t2427, 0, 0, 0, 0, 0, 0, t2432, t2444, t2413, t2397, 0, 0, 0, 0, 0, 0, t2404, t2406, t2401, t2392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2643, t2640, t2625, t2613, 0, 0, 0, 0, 0, 0, t2573, t2580, t2560, t2525, 0, 0, 0, 0, 0, 0, t2514, t2523, t2492, t2448, 0, 0, 0, 0, 0, 0, t2466, t2471, t2431, t2409, 0, 0, 0, 0, 0, 0, t2424, t2426, t2418, t2396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2639, t2633, t2624, t2612, 0, 0, 0, 0, 0, 0, -t2595, -t2597, -t2603, -t2590, 0, 0, 0, 0, 0, 0, -t2547, -t2549, -t2565, -t2546, 0, 0, 0, 0, 0, 0, -t2507, t2726, -t2539, -t2511, 0, 0, 0, 0, 0, 0, -t2479, -t2483, -t2468, -t2419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2626, t2623, t2644, t2628, 0, 0, 0, 0, 0, 0, t2572, t2579, t2559, t2524, 0, 0, 0, 0, 0, 0, t2513, t2522, t2491, t2447, 0, 0, 0, 0, 0, 0, t2465, t2470, t2430, t2408, 0, 0, 0, 0, 0, 0, t2423, t2425, t2417, t2395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2611, t2605, t2596, t2558, 0, 0, 0, 0, 0, 0, t2542, t2556, t2518, t2473, 0, 0, 0, 0, 0, 0, t2490, t2500, t2453, t2422, 0, 0, 0, 0, 0, 0, t2441, t2443, t2435, t2400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2606, t2620, t2598, t2557, 0, 0, 0, 0, 0, 0, t2541, t2555, t2517, t2472, 0, 0, 0, 0, 0, 0, t2489, t2499, t2452, t2421, 0, 0, 0, 0, 0, 0, t2440, t2442, t2434, t2399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2595, t2597, t2603, t2590, 0, 0, 0, 0, 0, 0, t2547, t2549, t2565, t2546, 0, 0, 0, 0, 0, 0, t2507, -t2726, t2539, t2511, 0, 0, 0, 0, 0, 0, t2479, t2483, t2468, t2419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2578, t2574, t2548, t2505, 0, 0, 0, 0, 0, 0, t2516, t2528, t2477, t2439, 0, 0, 0, 0, 0, 0, t2462, t2464, t2456, t2411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2575, t2601, t2550, t2504, 0, 0, 0, 0, 0, 0, t2515, t2527, t2476, t2438, 0, 0, 0, 0, 0, 0, t2461, t2463, t2455, t2410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2547, t2549, t2565, t2546, 0, 0, 0, 0, 0, 0, t2507, -t2726, t2539, t2511, 0, 0, 0, 0, 0, 0, t2479, t2483, t2468, t2419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2551, t2543, t2508, t2460, 0, 0, 0, 0, 0, 0, t2480, t2484, t2469, t2420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2544, t2568, t2510, t2459, 0, 0, 0, 0, 0, 0, -t2495, -t2497, -t2526, -t2450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2507, -t2726, t2539, t2511, 0, 0, 0, 0, 0, 0, t2479, t2483, t2468, t2419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2529, t2503, t2496, t2437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2502, t2534, t2498, t2436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2495, t2497, t2526, t2450;];
f_new_reg  = t1;
