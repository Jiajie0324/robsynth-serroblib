% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR5_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:04:48
% EndTime: 2019-03-10 04:05:03
% DurationCPUTime: 5.07s
% Computational Cost: add. (11893->399), mult. (30542->694), div. (0->0), fcn. (31608->12), ass. (0->203)
t171 = sin(qJ(5));
t176 = cos(qJ(4));
t172 = sin(qJ(4));
t268 = cos(qJ(5));
t222 = t268 * t172;
t272 = qJD(4) + qJD(5);
t275 = t272 * pkin(3) * (t171 * t176 + t222);
t177 = cos(qJ(3));
t241 = qJD(3) * t177;
t173 = sin(qJ(3));
t242 = qJD(3) * t173;
t274 = t172 * t241 + t176 * t242;
t175 = cos(qJ(6));
t170 = sin(qJ(6));
t236 = qJD(6) * t170;
t169 = cos(pkin(6));
t168 = sin(pkin(6));
t174 = sin(qJ(2));
t253 = t168 * t174;
t126 = t169 * t173 + t177 * t253;
t178 = cos(qJ(2));
t252 = t168 * t178;
t118 = pkin(8) * t252 + (pkin(1) * t174 + pkin(9)) * t169;
t119 = (-pkin(2) * t178 - pkin(9) * t174 - pkin(1)) * t168;
t210 = -t173 * t118 + t177 * t119;
t234 = pkin(3) * t252;
t80 = -t126 * pkin(10) + t210 - t234;
t125 = -t169 * t177 + t173 * t253;
t249 = t177 * t118 + t173 * t119;
t82 = -pkin(10) * t125 + t249;
t214 = -t172 * t82 + t176 * t80;
t233 = pkin(4) * t252;
t91 = -t125 * t172 + t126 * t176;
t42 = -t91 * pkin(11) + t214 - t233;
t81 = t176 * t82;
t264 = t172 * t80 + t81;
t90 = t125 * t176 + t126 * t172;
t46 = -pkin(11) * t90 + t264;
t196 = -t171 * t46 + t268 * t42;
t28 = pkin(5) * t252 - t196;
t244 = qJD(2) * t174;
t152 = t168 * t244;
t44 = t268 * t46;
t195 = t171 * t42 + t44;
t206 = pkin(4) * t152;
t243 = qJD(2) * t178;
t220 = t168 * t243;
t104 = -qJD(3) * t125 + t177 * t220;
t207 = pkin(3) * t152;
t120 = (pkin(2) * t174 - pkin(9) * t178) * t168 * qJD(2);
t121 = -pkin(1) * t169 * t243 + pkin(8) * t152;
t68 = -t249 * qJD(3) + t177 * t120 + t121 * t173;
t54 = -pkin(10) * t104 + t207 + t68;
t103 = qJD(3) * t126 + t173 * t220;
t67 = t118 * t242 - t119 * t241 - t173 * t120 + t177 * t121;
t56 = -pkin(10) * t103 - t67;
t215 = -t172 * t56 + t176 * t54;
t23 = -t264 * qJD(4) + t215;
t58 = -qJD(4) * t90 - t103 * t172 + t104 * t176;
t17 = -pkin(11) * t58 + t206 + t23;
t238 = qJD(4) * t176;
t239 = qJD(4) * t172;
t198 = t103 * t176 + t172 * t104 - t125 * t239 + t126 * t238;
t22 = -t172 * t54 - t176 * t56 - t80 * t238 + t239 * t82;
t19 = -pkin(11) * t198 - t22;
t216 = -t268 * t17 + t171 * t19;
t7 = -qJD(5) * t195 - t216;
t5 = -pkin(5) * t152 - t7;
t218 = -t5 * t175 + t28 * t236;
t270 = pkin(9) + pkin(10);
t143 = t270 * t173;
t134 = t172 * t143;
t144 = t270 * t177;
t248 = t176 * t144 - t134;
t167 = t175 ^ 2;
t245 = t170 ^ 2 - t167;
t208 = t245 * qJD(6);
t271 = 0.2e1 * t168;
t164 = qJD(6) * t175;
t269 = t28 * t164 + t5 * t170;
t267 = pkin(9) * t168;
t250 = t176 * t177;
t132 = t172 * t173 - t250;
t102 = (-qJD(4) - qJD(3)) * t132;
t84 = -t248 * qJD(4) + (-t270 * t250 + t134) * qJD(3);
t179 = t102 * pkin(11) - t84;
t204 = t173 * t238 + t177 * t239 + t274;
t83 = t143 * t238 + t144 * t239 + t270 * t274;
t182 = -pkin(11) * t204 - t83;
t133 = t172 * t177 + t173 * t176;
t209 = -t176 * t143 - t144 * t172;
t88 = -pkin(11) * t133 + t209;
t89 = -pkin(11) * t132 + t248;
t73 = t171 * t88 + t268 * t89;
t35 = t73 * qJD(5) + t171 * t182 + t268 * t179;
t72 = t171 * t89 - t268 * t88;
t265 = t72 * t164 + t35 * t170;
t263 = qJD(5) * pkin(4);
t100 = -t171 * t132 + t268 * t133;
t190 = -t268 * t132 - t171 * t133;
t59 = t190 * qJD(5) + t268 * t102 - t171 * t204;
t262 = t100 * t59;
t194 = -t171 * t91 - t268 * t90;
t30 = t194 * qJD(5) - t171 * t198 + t268 * t58;
t75 = -t171 * t90 + t268 * t91;
t61 = t170 * t75 + t175 * t252;
t20 = -qJD(6) * t61 + t152 * t170 + t175 * t30;
t261 = t170 * t20;
t260 = t170 * t59;
t223 = pkin(3) * t176 + pkin(4);
t197 = t268 * t223;
t227 = pkin(3) * t238;
t232 = t171 * t172 * pkin(3);
t95 = -qJD(5) * t197 - t268 * t227 + t272 * t232;
t259 = t170 * t95;
t258 = t175 * t20;
t257 = t175 * t59;
t224 = t170 * t252;
t62 = t175 * t75 - t224;
t256 = t175 * t62;
t255 = t175 * t95;
t185 = t197 - t232;
t123 = -pkin(5) - t185;
t237 = qJD(5) * t171;
t226 = pkin(4) * t237;
t96 = t226 + t275;
t254 = t123 * t164 + t96 * t170;
t251 = t170 * t175;
t231 = pkin(1) * t244;
t122 = pkin(8) * t220 + t169 * t231;
t161 = -t268 * pkin(4) - pkin(5);
t247 = t161 * t164 + t170 * t226;
t246 = pkin(3) * t222 + t171 * t223;
t240 = qJD(3) * t178;
t235 = -0.2e1 * pkin(2) * qJD(3);
t230 = pkin(5) * t236;
t229 = pkin(5) * t164;
t163 = pkin(3) * t242;
t228 = pkin(3) * t239;
t225 = t194 * t268;
t69 = t72 * t236;
t162 = -pkin(3) * t177 - pkin(2);
t165 = t168 ^ 2;
t221 = t165 * t243;
t219 = t170 * t164;
t217 = t268 * qJD(5);
t213 = -0.2e1 * t226;
t6 = -t171 * t17 - t268 * t19 - t42 * t217 + t46 * t237;
t109 = t123 * t236;
t212 = -t175 * t96 + t109;
t211 = -0.4e1 * t100 * t251;
t205 = pkin(4) * t217;
t203 = t174 * t221;
t85 = t103 * pkin(3) + t122;
t29 = -pkin(12) * t252 + t195;
t117 = pkin(8) * t253 + (-pkin(1) * t178 - pkin(2)) * t169;
t94 = t125 * pkin(3) + t117;
t76 = t90 * pkin(4) + t94;
t37 = -pkin(5) * t194 - t75 * pkin(12) + t76;
t13 = t170 * t37 + t175 * t29;
t202 = -t170 * t62 - t175 * t61;
t116 = pkin(4) * t132 + t162;
t71 = -pkin(5) * t190 - pkin(12) * t100 + t116;
t48 = t170 * t71 + t175 * t73;
t124 = pkin(12) + t246;
t201 = t100 * t123 + t124 * t190;
t160 = t171 * pkin(4) + pkin(12);
t200 = t100 * t161 + t160 * t190;
t138 = t161 * t236;
t199 = -t175 * t226 + t138;
t31 = t75 * qJD(5) + t171 * t58 + t268 * t198;
t25 = -t164 * t194 + t170 * t31;
t193 = -t175 * t31 - t194 * t236;
t60 = t100 * qJD(5) + t171 * t102 + t268 * t204;
t51 = -t164 * t190 + t170 * t60;
t192 = -t175 * t60 - t190 * t236;
t191 = t100 * t236 - t257;
t93 = pkin(4) * t204 + t163;
t188 = t173 * t240 + t177 * t244;
t187 = t173 * t244 - t177 * t240;
t186 = pkin(12) * t152 - t6;
t184 = t100 * t96 + t123 * t59 - t124 * t60 - t190 * t95;
t183 = t60 * pkin(5) - t59 * pkin(12) + t93;
t49 = pkin(4) * t198 + t85;
t181 = -t160 * t60 + t161 * t59 + (t100 * t171 + t190 * t268) * t263;
t180 = t31 * pkin(5) - t30 * pkin(12) + t49;
t151 = 0.2e1 * t219;
t137 = -0.2e1 * t203;
t131 = -0.2e1 * t208;
t98 = t100 ^ 2;
t47 = -t170 * t73 + t175 * t71;
t45 = -t100 * t208 + t59 * t251;
t38 = qJD(6) * t211 - t245 * t59;
t34 = t171 * t179 - t268 * t182 - t88 * t217 + t89 * t237;
t21 = -qJD(6) * t224 - t152 * t175 + t164 * t75 + t170 * t30;
t14 = t164 * t62 + t261;
t12 = -t170 * t29 + t175 * t37;
t11 = -qJD(6) * t48 + t170 * t34 + t175 * t183;
t10 = -t164 * t71 - t170 * t183 + t175 * t34 + t236 * t73;
t8 = qJD(6) * t202 - t170 * t21 + t258;
t2 = -qJD(6) * t13 - t170 * t186 + t175 * t180;
t1 = -t164 * t37 - t170 * t180 - t175 * t186 + t236 * t29;
t3 = [0, 0, 0, 0.2e1 * t203, 0.2e1 * (-t174 ^ 2 + t178 ^ 2) * t165 * qJD(2), 0.2e1 * t169 * t220, -0.2e1 * t169 * t152, 0, -0.2e1 * t122 * t169 - 0.2e1 * t165 * t231, -0.2e1 * pkin(1) * t221 + 0.2e1 * t121 * t169, 0.2e1 * t126 * t104, -0.2e1 * t103 * t126 - 0.2e1 * t104 * t125 (-t104 * t178 + t126 * t244) * t271 (t103 * t178 - t125 * t244) * t271, t137, 0.2e1 * t117 * t103 + 0.2e1 * t122 * t125 + 0.2e1 * (-t68 * t178 + t210 * t244) * t168, 0.2e1 * t117 * t104 + 0.2e1 * t122 * t126 + 0.2e1 * (-t67 * t178 - t244 * t249) * t168, 0.2e1 * t91 * t58, -0.2e1 * t198 * t91 - 0.2e1 * t58 * t90 (-t178 * t58 + t244 * t91) * t271 (t178 * t198 - t244 * t90) * t271, t137, 0.2e1 * t85 * t90 + 0.2e1 * t94 * t198 + 0.2e1 * (-t23 * t178 + t214 * t244) * t168, 0.2e1 * t94 * t58 + 0.2e1 * t85 * t91 + 0.2e1 * (-t22 * t178 - t244 * t264) * t168, 0.2e1 * t75 * t30, 0.2e1 * t194 * t30 - 0.2e1 * t31 * t75 (-t178 * t30 + t244 * t75) * t271 (t178 * t31 + t194 * t244) * t271, t137, 0.2e1 * t76 * t31 - 0.2e1 * t49 * t194 + 0.2e1 * (-t7 * t178 + t196 * t244) * t168, 0.2e1 * t76 * t30 + 0.2e1 * t49 * t75 + 0.2e1 * (-t6 * t178 - t195 * t244) * t168, 0.2e1 * t62 * t20, -0.2e1 * t20 * t61 - 0.2e1 * t21 * t62, -0.2e1 * t194 * t20 + 0.2e1 * t31 * t62, 0.2e1 * t194 * t21 - 0.2e1 * t31 * t61, -0.2e1 * t194 * t31, 0.2e1 * t12 * t31 - 0.2e1 * t194 * t2 + 0.2e1 * t21 * t28 + 0.2e1 * t5 * t61, -0.2e1 * t1 * t194 - 0.2e1 * t13 * t31 + 0.2e1 * t20 * t28 + 0.2e1 * t5 * t62; 0, 0, 0, 0, 0, t220, -t152, 0, -t122, t121, t104 * t173 + t126 * t241, -t103 * t173 + t104 * t177 + (-t125 * t177 - t126 * t173) * qJD(3), t187 * t168, t188 * t168, 0, -pkin(2) * t103 + t117 * t242 - t122 * t177 - t187 * t267, -pkin(2) * t104 + t117 * t241 + t122 * t173 - t188 * t267, t102 * t91 + t133 * t58, -t102 * t90 - t58 * t132 - t133 * t198 - t204 * t91 (-t102 * t178 + t133 * t244) * t168 (-t132 * t244 + t178 * t204) * t168, 0, t90 * t163 + t162 * t198 + t85 * t132 + t94 * t204 + (-t84 * t178 + t209 * t244) * t168, t91 * t163 + t94 * t102 + t85 * t133 + t162 * t58 + (-t83 * t178 - t244 * t248) * t168, t100 * t30 + t59 * t75, -t100 * t31 + t190 * t30 + t194 * t59 - t60 * t75 (t100 * t244 - t178 * t59) * t168 (t178 * t60 + t190 * t244) * t168, 0, t116 * t31 - t49 * t190 + t76 * t60 - t93 * t194 + (t178 * t35 - t244 * t72) * t168, t49 * t100 + t116 * t30 + t76 * t59 + t93 * t75 + (-t178 * t34 - t244 * t73) * t168, t59 * t256 + (-t236 * t62 + t258) * t100, t202 * t59 + (-t261 - t175 * t21 + (t170 * t61 - t256) * qJD(6)) * t100, -t100 * t193 - t190 * t20 - t194 * t257 + t60 * t62, -t100 * t25 + t190 * t21 + t194 * t260 - t60 * t61, -t190 * t31 - t194 * t60, t100 * t269 - t11 * t194 + t12 * t60 - t190 * t2 + t21 * t72 + t260 * t28 + t31 * t47 + t35 * t61, -t1 * t190 - t10 * t194 - t218 * t100 - t13 * t60 + t20 * t72 + t28 * t257 - t31 * t48 + t35 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t173 * t241, 0.2e1 * (-t173 ^ 2 + t177 ^ 2) * qJD(3), 0, 0, 0, t173 * t235, t177 * t235, 0.2e1 * t133 * t102, -0.2e1 * t102 * t132 - 0.2e1 * t133 * t204, 0, 0, 0, 0.2e1 * t132 * t163 + 0.2e1 * t162 * t204, 0.2e1 * t102 * t162 + 0.2e1 * t133 * t163, 0.2e1 * t262, -0.2e1 * t100 * t60 + 0.2e1 * t190 * t59, 0, 0, 0, 0.2e1 * t116 * t60 - 0.2e1 * t190 * t93, 0.2e1 * t100 * t93 + 0.2e1 * t116 * t59, 0.2e1 * t167 * t262 - 0.2e1 * t219 * t98, 0.2e1 * t98 * t208 + t211 * t59, -0.2e1 * t100 * t192 - 0.2e1 * t190 * t257, -0.2e1 * t100 * t51 + 0.2e1 * t190 * t260, -0.2e1 * t190 * t60, 0.2e1 * t100 * t265 - 0.2e1 * t11 * t190 + 0.2e1 * t260 * t72 + 0.2e1 * t47 * t60, 0.2e1 * t72 * t257 - 0.2e1 * t10 * t190 - 0.2e1 * t48 * t60 + 0.2e1 * (t35 * t175 - t69) * t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t103, t152, t68, t67, 0, 0, t58, -t198, t152, t176 * t207 + (-t81 + (-t80 + t234) * t172) * qJD(4) + t215 (-t172 * t244 + t178 * t238) * t168 * pkin(3) + t22, 0, 0, t30, -t31, t152 (t96 * t178 + t185 * t244) * t168 + t7 (-t95 * t178 - t244 * t246) * t168 + t6, t14, t8, t25, -t193, 0, t123 * t21 - t124 * t25 - t194 * t259 + t61 * t96 + t218, t123 * t20 + t124 * t193 - t194 * t255 + t62 * t96 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, -t242, 0, -pkin(9) * t241, pkin(9) * t242, 0, 0, t102, -t204, 0, t84, t83, 0, 0, t59, -t60, 0, -t35, t34, t45, t38, t51, -t192, 0, t69 + (qJD(6) * t201 - t35) * t175 + t184 * t170, t175 * t184 - t201 * t236 + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t228, -0.2e1 * t227, 0, 0, 0, 0, 0, -0.2e1 * t96, 0.2e1 * t95, t151, t131, 0, 0, 0, 0.2e1 * t212, 0.2e1 * t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, -t198, t152, t23, t22, 0, 0, t30, -t31, t152, t268 * t206 + (-t44 + (-t42 + t233) * t171) * qJD(5) - t216 (-t171 * t244 + t178 * t217) * t168 * pkin(4) + t6, t14, t8, t25, -t193, 0, t161 * t21 - t25 * t160 + (t170 * t225 + t171 * t61) * t263 + t218, t161 * t20 + t193 * t160 + (t171 * t62 + t175 * t225) * t263 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t204, 0, t84, t83, 0, 0, t59, -t60, 0, -t35, t34, t45, t38, t51, -t192, 0, t69 + (qJD(6) * t200 - t35) * t175 + t181 * t170, t175 * t181 - t200 * t236 + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, -t227, 0, 0, 0, 0, 0, t213 - t275, -t205 + t95, t151, t131, 0, 0, 0, t109 + t138 + (-t96 - t226) * t175, t247 + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, -0.2e1 * t205, t151, t131, 0, 0, 0, 0.2e1 * t199, 0.2e1 * t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t31, t152, t7, t6, t14, t8, t25, -t193, 0, -pkin(5) * t21 - pkin(12) * t25 + t218, -pkin(5) * t20 + pkin(12) * t193 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, -t60, 0, -t35, t34, t45, t38, t51, -t192, 0, t69 + (-pkin(5) * t59 - pkin(12) * t60) * t170 + (-t35 + (-pkin(5) * t100 + pkin(12) * t190) * qJD(6)) * t175, pkin(5) * t191 + pkin(12) * t192 + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t95, t151, t131, 0, 0, 0, t212 - t230, -t229 + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, -t205, t151, t131, 0, 0, 0, t199 - t230, -t229 + t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t131, 0, 0, 0, -0.2e1 * t230, -0.2e1 * t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, -t21, t31, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, -t100 * t164 - t260, t60, t11, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t236, 0, -t124 * t164 + t259, t124 * t236 + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t236, 0, -t160 * t164 - t170 * t205, t160 * t236 - t175 * t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, -t236, 0, -pkin(12) * t164, pkin(12) * t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
