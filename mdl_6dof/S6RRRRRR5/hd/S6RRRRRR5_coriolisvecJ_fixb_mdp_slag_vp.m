% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR5_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRR5_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR5_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:05:18
% EndTime: 2019-03-10 04:05:53
% DurationCPUTime: 22.48s
% Computational Cost: add. (21693->674), mult. (55195->924), div. (0->0), fcn. (45601->12), ass. (0->272)
t750 = sin(pkin(6));
t761 = cos(qJ(2));
t854 = qJD(1) * t761;
t833 = t750 * t854;
t729 = -qJD(3) + t833;
t950 = -qJD(4) + t729;
t760 = cos(qJ(3));
t841 = qJD(1) * qJD(2);
t828 = t750 * t841;
t801 = t761 * t828;
t755 = sin(qJ(3));
t751 = cos(pkin(6));
t855 = qJD(1) * t751;
t809 = qJD(2) + t855;
t756 = sin(qJ(2));
t856 = qJD(1) * t750;
t834 = t756 * t856;
t927 = -t755 * t834 + t760 * t809;
t642 = qJD(3) * t927 + t760 * t801;
t675 = t755 * t809 + t760 * t834;
t643 = qJD(3) * t675 + t755 * t801;
t754 = sin(qJ(4));
t759 = cos(qJ(4));
t848 = qJD(4) * t759;
t849 = qJD(4) * t754;
t560 = t642 * t759 - t643 * t754 - t675 * t849 + t848 * t927;
t753 = sin(qJ(5));
t758 = cos(qJ(5));
t781 = -t675 * t759 - t754 * t927;
t763 = qJD(4) * t781 - t642 * t754 - t643 * t759;
t782 = -t675 * t754 + t759 * t927;
t846 = qJD(5) * t758;
t847 = qJD(5) * t753;
t513 = t560 * t758 + t753 * t763 + t781 * t847 + t782 * t846;
t707 = -qJD(5) + t950;
t752 = sin(qJ(6));
t757 = cos(qJ(6));
t802 = t756 * t828;
t844 = qJD(6) * t757;
t837 = t513 * t757 - t707 * t844 + t752 * t802;
t845 = qJD(6) * t752;
t924 = t753 * t782 - t758 * t781;
t490 = -t845 * t924 + t837;
t488 = t490 * t752;
t565 = -t707 * t752 + t757 * t924;
t824 = t513 * t752 - t757 * t802;
t491 = qJD(6) * t565 + t824;
t514 = qJD(5) * t924 + t560 * t753 - t758 * t763;
t512 = t757 * t514;
t892 = t924 * t752;
t563 = t707 * t757 + t892;
t576 = t753 * t781 + t758 * t782;
t842 = -qJD(6) + t576;
t510 = t752 * t514;
t878 = -t842 * t844 + t510;
t942 = t842 * t752;
t943 = t576 * t757;
t947 = t844 - t943;
t949 = MDP(29) * t802 + (t565 * t947 + t488) * MDP(32) + (-t565 * t924 + t842 * t943 + t878) * MDP(34) + (t563 * t924 - t842 * t942 + t512) * MDP(35) + (t490 * t757 - t752 * t491 - t563 * t947 + t565 * t942) * MDP(33) - t514 * MDP(28) - t576 ^ 2 * MDP(26) + (t576 * t707 + t513) * MDP(27) + (-MDP(25) * t576 + MDP(26) * t924 - MDP(28) * t707 + MDP(36) * t842) * t924;
t840 = pkin(1) * t855;
t690 = -pkin(8) * t834 + t761 * t840;
t777 = (pkin(2) * t756 - pkin(9) * t761) * t750;
t691 = qJD(1) * t777;
t816 = -t690 * t755 + t691 * t760;
t900 = pkin(9) + pkin(10);
t836 = qJD(3) * t900;
t881 = t760 * t761;
t946 = (pkin(3) * t756 - pkin(10) * t881) * t856 + t816 + t760 * t836;
t803 = t755 * t833;
t863 = t690 * t760 + t691 * t755;
t944 = pkin(10) * t803 - t755 * t836 - t863;
t945 = MDP(22) * t802 + t782 * MDP(18) * t781 + (t782 * t950 + t560) * MDP(20) + (t781 ^ 2 - t782 ^ 2) * MDP(19) + (t781 * t950 + t763) * MDP(21) + t949;
t708 = t754 * t755 - t759 * t760;
t866 = t950 * t708;
t709 = t754 * t760 + t755 * t759;
t865 = t950 * t709;
t735 = t756 * t840;
t693 = pkin(8) * t833 + t735;
t659 = pkin(9) * t809 + t693;
t688 = (-pkin(2) * t761 - pkin(9) * t756 - pkin(1)) * t750;
t669 = qJD(1) * t688;
t617 = -t659 * t755 + t669 * t760;
t599 = -pkin(10) * t675 + t617;
t587 = -pkin(3) * t729 + t599;
t618 = t659 * t760 + t669 * t755;
t600 = pkin(10) * t927 + t618;
t596 = t754 * t600;
t541 = t587 * t759 - t596;
t931 = pkin(11) * t781;
t529 = t541 + t931;
t527 = -pkin(4) * t950 + t529;
t598 = t759 * t600;
t542 = t587 * t754 + t598;
t917 = pkin(11) * t782;
t530 = t542 + t917;
t897 = t530 * t753;
t500 = t527 * t758 - t897;
t498 = pkin(5) * t707 - t500;
t930 = t498 * t576;
t941 = t946 * t759;
t730 = t900 * t755;
t731 = t900 * t760;
t940 = -t730 * t848 - t731 * t849 - t754 * t946 + t759 * t944;
t533 = pkin(5) * t924 - pkin(12) * t576;
t658 = -pkin(2) * t809 - t690;
t630 = -pkin(3) * t927 + t658;
t582 = -pkin(4) * t782 + t630;
t692 = qJD(2) * t777;
t682 = qJD(1) * t692;
t885 = t750 * t756;
t738 = pkin(8) * t885;
t898 = pkin(1) * t761;
t694 = (t751 * t898 - t738) * qJD(2);
t683 = qJD(1) * t694;
t765 = -qJD(3) * t618 + t682 * t760 - t683 * t755;
t548 = pkin(3) * t802 - pkin(10) * t642 + t765;
t850 = qJD(3) * t760;
t851 = qJD(3) * t755;
t776 = -t659 * t851 + t669 * t850 + t682 * t755 + t683 * t760;
t552 = -pkin(10) * t643 + t776;
t766 = -qJD(4) * t542 + t548 * t759 - t754 * t552;
t484 = pkin(4) * t802 - pkin(11) * t560 + t766;
t805 = -t548 * t754 - t552 * t759 - t587 * t848 + t600 * t849;
t486 = pkin(11) * t763 - t805;
t806 = -t484 * t753 - t486 * t758 - t527 * t846 + t530 * t847;
t926 = -t582 * t576 + t806;
t862 = -t730 * t754 + t731 * t759;
t936 = pkin(4) * t834 + pkin(11) * t866 + qJD(4) * t862 + t754 * t944 + t941;
t935 = pkin(11) * t865 + t940;
t896 = t530 * t758;
t501 = t527 * t753 + t896;
t767 = -qJD(5) * t501 + t484 * t758 - t753 * t486;
t474 = -pkin(5) * t802 - t767;
t472 = t474 * t752;
t499 = -pkin(12) * t707 + t501;
t517 = -pkin(5) * t576 - pkin(12) * t924 + t582;
t480 = t499 * t757 + t517 * t752;
t908 = t480 * t924 + t498 * t844 + t472;
t905 = -t582 * t924 + t767;
t790 = t499 * t752 - t517 * t757;
t909 = -t474 * t757 + t498 * t845 + t790 * t924;
t932 = pkin(4) * t781;
t647 = t708 * t758 + t709 * t753;
t874 = -qJD(5) * t647 + t753 * t865 + t758 * t866;
t648 = -t708 * t753 + t709 * t758;
t873 = qJD(5) * t648 + t753 * t866 - t758 * t865;
t800 = -t693 + (-t803 + t851) * pkin(3);
t925 = t630 * t781 + t766;
t747 = t750 ^ 2;
t919 = -0.2e1 * t747 * t841;
t916 = MDP(5) * (t756 ^ 2 - t761 ^ 2);
t815 = -t730 * t759 - t731 * t754;
t633 = -pkin(11) * t709 + t815;
t634 = -pkin(11) * t708 + t862;
t783 = t633 * t758 - t634 * t753;
t913 = qJD(5) * t783 - t753 * t936 + t758 * t935;
t592 = t633 * t753 + t634 * t758;
t912 = qJD(5) * t592 + t753 * t935 + t758 * t936;
t699 = -t751 * t760 + t755 * t885;
t700 = t751 * t755 + t760 * t885;
t639 = -t699 * t754 + t700 * t759;
t884 = t750 * t761;
t899 = pkin(1) * t756;
t687 = pkin(8) * t884 + (pkin(9) + t899) * t751;
t817 = -t687 * t755 + t688 * t760;
t608 = -pkin(3) * t884 - pkin(10) * t700 + t817;
t864 = t687 * t760 + t688 * t755;
t612 = -pkin(10) * t699 + t864;
t819 = t608 * t759 - t612 * t754;
t537 = -pkin(4) * t884 - pkin(11) * t639 + t819;
t638 = t699 * t759 + t700 * t754;
t871 = t608 * t754 + t612 * t759;
t539 = -pkin(11) * t638 + t871;
t911 = t537 * t753 + t539 * t758;
t869 = -pkin(4) * t865 + t800;
t904 = -t630 * t782 + t805;
t831 = qJD(2) * t884;
t653 = qJD(3) * t700 + t755 * t831;
t654 = -qJD(3) * t699 + t760 * t831;
t578 = -qJD(4) * t638 - t653 * t754 + t654 * t759;
t768 = -qJD(3) * t864 + t692 * t760 - t694 * t755;
t853 = qJD(2) * t756;
t832 = t750 * t853;
t562 = pkin(3) * t832 - pkin(10) * t654 + t768;
t775 = -t687 * t851 + t688 * t850 + t692 * t755 + t694 * t760;
t567 = -pkin(10) * t653 + t775;
t769 = -qJD(4) * t871 + t562 * t759 - t567 * t754;
t493 = pkin(4) * t832 - pkin(11) * t578 + t769;
t579 = qJD(4) * t639 + t653 * t759 + t654 * t754;
t774 = t562 * t754 + t567 * t759 + t608 * t848 - t612 * t849;
t495 = -pkin(11) * t579 + t774;
t903 = -qJD(5) * t911 + t493 * t758 - t495 * t753;
t762 = qJD(1) ^ 2;
t891 = t648 * t757;
t890 = t927 * t729;
t889 = t675 * t729;
t888 = t729 * t755;
t887 = t729 * t760;
t886 = t747 * t762;
t883 = t753 * t754;
t882 = t754 * t758;
t877 = pkin(5) * t834 + t912;
t872 = t599 * t759 - t596;
t820 = -t599 * t754 - t598;
t531 = t820 - t917;
t532 = t872 + t931;
t744 = pkin(3) * t759 + pkin(4);
t868 = -t531 * t753 - t532 * t758 + t744 * t846 + (-t754 * t847 + (t758 * t759 - t883) * qJD(4)) * pkin(3);
t867 = t531 * t758 - t532 * t753 + t744 * t847 + (t754 * t846 + (t753 * t759 + t882) * qJD(4)) * pkin(3);
t684 = pkin(8) * t801 + qJD(2) * t735;
t695 = pkin(1) * t751 * t853 + pkin(8) * t831;
t860 = pkin(3) * t882 + t744 * t753;
t852 = qJD(2) * t760;
t839 = t752 * t884;
t745 = -pkin(3) * t760 - pkin(2);
t835 = t747 * t854;
t473 = pkin(12) * t802 - t806;
t616 = pkin(3) * t643 + t684;
t536 = -pkin(4) * t763 + t616;
t478 = pkin(5) * t514 - pkin(12) * t513 + t536;
t827 = -t473 * t752 + t478 * t757;
t822 = -t752 * t874 - t757 * t834;
t821 = t752 * t834 - t757 * t874;
t603 = pkin(3) * t675 - t932;
t697 = pkin(12) + t860;
t811 = qJD(6) * t697 + t533 + t603;
t742 = pkin(4) * t753 + pkin(12);
t810 = qJD(6) * t742 + t533 - t932;
t807 = t747 * t756 * t761 * MDP(4);
t631 = pkin(3) * t653 + t695;
t502 = t529 * t753 + t896;
t799 = pkin(4) * t847 - t502;
t503 = t529 * t758 - t897;
t798 = -pkin(4) * t846 + t503;
t797 = pkin(1) * t919;
t685 = pkin(4) * t708 + t745;
t590 = pkin(5) * t647 - pkin(12) * t648 + t685;
t796 = pkin(12) * t834 - qJD(6) * t590 - t913;
t795 = -pkin(5) * t873 + pkin(12) * t874 + qJD(6) * t592 - t869;
t794 = t473 * t757 + t478 * t752;
t792 = -t514 * t742 - t930;
t791 = -t514 * t697 - t930;
t509 = -pkin(12) * t884 + t911;
t593 = t638 * t758 + t639 * t753;
t594 = -t638 * t753 + t639 * t758;
t686 = t738 + (-pkin(2) - t898) * t751;
t641 = pkin(3) * t699 + t686;
t601 = pkin(4) * t638 + t641;
t524 = pkin(5) * t593 - pkin(12) * t594 + t601;
t789 = t509 * t757 + t524 * t752;
t788 = -t509 * t752 + t524 * t757;
t787 = t537 * t758 - t539 * t753;
t778 = -pkin(3) * t883 + t744 * t758;
t583 = t594 * t752 + t757 * t884;
t547 = pkin(4) * t579 + t631;
t772 = t493 * t753 + t495 * t758 + t537 * t846 - t539 * t847;
t771 = t648 * t844 - t822;
t770 = -t648 * t845 - t821;
t743 = -pkin(4) * t758 - pkin(5);
t696 = -pkin(5) - t778;
t584 = t594 * t757 - t839;
t519 = qJD(5) * t594 + t578 * t753 + t579 * t758;
t518 = -qJD(5) * t593 + t578 * t758 - t579 * t753;
t508 = pkin(5) * t884 - t787;
t507 = -qJD(6) * t839 + t518 * t752 + t594 * t844 - t757 * t832;
t506 = -qJD(6) * t583 + t518 * t757 + t752 * t832;
t481 = pkin(5) * t519 - pkin(12) * t518 + t547;
t476 = -pkin(5) * t832 - t903;
t475 = pkin(12) * t832 + t772;
t471 = -qJD(6) * t480 + t827;
t470 = -qJD(6) * t790 + t794;
t1 = [(-t707 * t750 - t835) * MDP(29) * t853 + (-t750 * t950 - t835) * MDP(22) * t853 + (-t560 * t638 + t578 * t782 + t579 * t781 + t639 * t763) * MDP(19) + (t772 * t707 + t547 * t924 + t601 * t513 + t536 * t594 + t582 * t518 + (-t806 * t761 + (-qJD(1) * t911 - t501) * t853) * t750) * MDP(31) + (-t518 * t707 + (-t513 * t761 + (qJD(1) * t594 + t924) * t853) * t750) * MDP(27) + (t513 * t594 + t518 * t924) * MDP(25) + (t775 * t729 + t695 * t675 + t686 * t642 + t684 * t700 + t658 * t654 + (t776 * t761 + (-qJD(1) * t864 - t618) * t853) * t750) * MDP(17) + (-t654 * t729 + (-t642 * t761 + (qJD(1) * t700 + t675) * t853) * t750) * MDP(13) + 0.2e1 * t807 * t841 + (-(-qJD(6) * t789 - t475 * t752 + t481 * t757) * t842 + t788 * t514 + t471 * t593 - t790 * t519 + t476 * t563 + t508 * t491 + t474 * t583 + t498 * t507) * MDP(37) + (t514 * t593 - t519 * t842) * MDP(36) + ((qJD(6) * t788 + t475 * t757 + t481 * t752) * t842 - t789 * t514 - t470 * t593 - t480 * t519 + t476 * t565 + t508 * t490 + t474 * t584 + t498 * t506) * MDP(38) + (-t491 * t593 + t507 * t842 - t514 * t583 - t519 * t563) * MDP(35) + (t490 * t593 - t506 * t842 + t514 * t584 + t519 * t565) * MDP(34) + (t560 * t639 - t578 * t781) * MDP(18) + (-t729 * t750 - t835) * MDP(15) * t853 + (-t684 * t751 - t695 * t809 + t756 * t797) * MDP(9) + (-t683 * t751 - t694 * t809 + t761 * t797) * MDP(10) + (t642 * t700 + t654 * t675) * MDP(11) + (-t490 * t583 - t491 * t584 - t506 * t563 - t507 * t565) * MDP(33) + (t490 * t584 + t506 * t565) * MDP(32) + (MDP(6) * t831 - MDP(7) * t832) * (qJD(2) + 0.2e1 * t855) + (-t903 * t707 - t547 * t576 + t601 * t514 + t536 * t593 + t582 * t519 + (-t767 * t761 + (qJD(1) * t787 + t500) * t853) * t750) * MDP(30) + (-t513 * t593 - t514 * t594 + t518 * t576 - t519 * t924) * MDP(26) + (t519 * t707 + (t514 * t761 + (-qJD(1) * t593 + t576) * t853) * t750) * MDP(28) + (t653 * t729 + (t643 * t761 + (-qJD(1) * t699 + t927) * t853) * t750) * MDP(14) + (-t768 * t729 - t695 * t927 + t686 * t643 + t684 * t699 + t658 * t653 + (-t765 * t761 + (qJD(1) * t817 + t617) * t853) * t750) * MDP(16) + (-t642 * t699 - t643 * t700 - t653 * t675 + t654 * t927) * MDP(12) + t916 * t919 + (t579 * t950 + (-t763 * t761 + (-qJD(1) * t638 + t782) * t853) * t750) * MDP(21) + (-t769 * t950 - t631 * t782 - t641 * t763 + t616 * t638 + t630 * t579 + (-t766 * t761 + (qJD(1) * t819 + t541) * t853) * t750) * MDP(23) + (t774 * t950 - t631 * t781 + t641 * t560 + t616 * t639 + t630 * t578 + (-t805 * t761 + (-qJD(1) * t871 - t542) * t853) * t750) * MDP(24) + (-t578 * t950 + (-t560 * t761 + (qJD(1) * t639 - t781) * t853) * t750) * MDP(20); (t490 * t891 + t565 * t770) * MDP(32) + (t822 * t565 + t821 * t563 + (-t488 - t491 * t757 + (t563 * t752 - t565 * t757) * qJD(6)) * t648) * MDP(33) + (-t729 * t850 + (t729 * t881 + (qJD(2) * t755 - t675) * t756) * t856) * MDP(13) + (t514 * t647 - t842 * t873) * MDP(36) + (t490 * t647 + t512 * t648 + t565 * t873 - t770 * t842) * MDP(34) + (-t491 * t647 - t510 * t648 - t563 * t873 + t771 * t842) * MDP(35) + ((t642 - t890) * t760 + (-t643 + t889) * t755) * MDP(12) + (pkin(8) * t802 + t690 * t809 + (-t751 * t841 + t886) * t898) * MDP(10) + (t693 * t809 + t886 * t899 - t684) * MDP(9) + (t513 * t648 + t874 * t924) * MDP(25) + (t685 * t513 + t536 * t648 + t874 * t582 + t869 * t924) * MDP(31) + (t642 * t755 - t675 * t887) * MDP(11) + (-pkin(2) * t642 + t684 * t755 - t863 * t729 - t693 * t675 + (-pkin(9) * t888 + t658 * t760) * qJD(3) + (-t658 * t881 + (-pkin(9) * t852 + t618) * t756) * t856) * MDP(17) + (-MDP(27) * t874 + MDP(28) * t873 + MDP(30) * t912 + MDP(31) * t913) * t707 + ((t590 * t757 - t592 * t752) * t514 + t471 * t647 - t783 * t491 + t648 * t472 - (t752 * t796 - t757 * t795) * t842 + t877 * t563 - t873 * t790 + t771 * t498) * MDP(37) + (-(t590 * t752 + t592 * t757) * t514 - t470 * t647 - t783 * t490 + t474 * t891 - (t752 * t795 + t757 * t796) * t842 + t877 * t565 - t873 * t480 + t770 * t498) * MDP(38) + (t560 * t709 - t781 * t866) * MDP(18) + (t745 * t560 + t616 * t709 + t866 * t630 - t781 * t800) * MDP(24) + (-t807 + (-MDP(6) * t761 + MDP(7) * t756) * t750 * t751) * t762 + (-t560 * t708 + t709 * t763 - t781 * t865 + t782 * t866) * MDP(19) + (t616 * t708 - t865 * t630 - t745 * t763 - t782 * t800) * MDP(23) + (-t513 * t647 - t514 * t648 + t576 * t874 - t873 * t924) * MDP(26) + (t685 * t514 + t536 * t647 - t576 * t869 + t873 * t582) * MDP(30) + (-pkin(2) * t643 - t684 * t760 + t816 * t729 + t693 * t927 + (pkin(9) * t887 + t658 * t755) * qJD(3) + (-t617 * t756 + (-pkin(9) * t853 - t658 * t761) * t755) * t856) * MDP(16) + (t729 * t851 + (-t761 * t888 + (-t927 + t852) * t756) * t856) * MDP(14) + t886 * t916 + (t940 * MDP(24) + (t731 * t848 + (-qJD(4) * t730 + t944) * t754 + t941) * MDP(23) - t866 * MDP(20) - t865 * MDP(21)) * t950 + ((-qJD(2) * t647 - t576) * MDP(28) + (qJD(2) * t783 - t500) * MDP(30) + (qJD(2) * t648 - t924) * MDP(27) + (-qJD(2) * t592 + t501) * MDP(31) + (qJD(2) * t709 + t781) * MDP(20) + (-qJD(2) * t862 + t542) * MDP(24) + (-qJD(2) * t708 - t782) * MDP(21) + (qJD(2) * t815 - t541) * MDP(23) + t729 * MDP(15) + t950 * MDP(22) + t707 * MDP(29)) * t834; (t642 + t890) * MDP(13) + (-t603 * t924 + t707 * t868 - t802 * t860 + t926) * MDP(31) + (-t618 * t729 - t658 * t675 + t765) * MDP(16) + (t696 * t490 + t791 * t757 + t867 * t565 - (t752 * t811 - t757 * t868) * t842 + t908) * MDP(38) + (-t872 * t950 + (t675 * t781 - t754 * t802 + t848 * t950) * pkin(3) + t904) * MDP(24) + (t696 * t491 + t791 * t752 + t867 * t563 - (-t752 * t868 - t757 * t811) * t842 + t909) * MDP(37) + (-t643 - t889) * MDP(14) - t675 * t927 * MDP(11) + MDP(15) * t802 + (t576 * t603 + t707 * t867 + t778 * t802 + t905) * MDP(30) + (-t617 * t729 - t658 * t927 - t776) * MDP(17) + (t675 ^ 2 - t927 ^ 2) * MDP(12) + (t820 * t950 + (t675 * t782 + t759 * t802 + t849 * t950) * pkin(3) + t925) * MDP(23) + t945; (-t542 * t950 + t925) * MDP(23) + (-t541 * t950 + t904) * MDP(24) + (-t502 * t707 + (-t576 * t781 + t707 * t847 + t758 * t802) * pkin(4) + t905) * MDP(30) + (-t503 * t707 + (t707 * t846 - t753 * t802 + t781 * t924) * pkin(4) + t926) * MDP(31) + (t743 * t491 + t792 * t752 + t799 * t563 - (t752 * t798 - t757 * t810) * t842 + t909) * MDP(37) + (t743 * t490 + t792 * t757 + t799 * t565 - (t752 * t810 + t757 * t798) * t842 + t908) * MDP(38) + t945; (-t501 * t707 + t905) * MDP(30) + (-t500 * t707 + t926) * MDP(31) + (-pkin(5) * t491 + (-t500 * t752 + t533 * t757) * t842 - t501 * t563 - t752 * t930 - t878 * pkin(12) + t909) * MDP(37) + (-pkin(5) * t490 - (t500 * t757 + t533 * t752) * t842 - t501 * t565 - t498 * t943 + (-t842 * t845 - t512) * pkin(12) + t908) * MDP(38) + t949; t565 * t563 * MDP(32) + (-t563 ^ 2 + t565 ^ 2) * MDP(33) + (-t563 * t842 + t837) * MDP(34) + (-t565 * t842 - t824) * MDP(35) + t514 * MDP(36) + (-t480 * t842 - t498 * t565 + t827) * MDP(37) + (t498 * t563 + t790 * t842 - t794) * MDP(38) + (-MDP(34) * t892 - MDP(35) * t565 - MDP(37) * t480 + MDP(38) * t790) * qJD(6);];
tauc  = t1;
