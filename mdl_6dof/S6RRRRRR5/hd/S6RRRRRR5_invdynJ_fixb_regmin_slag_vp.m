% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x38]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR5_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR5_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR5_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:04:54
% EndTime: 2019-03-10 04:05:30
% DurationCPUTime: 18.21s
% Computational Cost: add. (25391->705), mult. (61201->996), div. (0->0), fcn. (51186->18), ass. (0->353)
t337 = cos(qJ(6));
t443 = qJD(6) * t337;
t332 = sin(qJ(5));
t338 = cos(qJ(5));
t340 = cos(qJ(3));
t334 = sin(qJ(3));
t335 = sin(qJ(2));
t329 = sin(pkin(6));
t454 = qJD(1) * t329;
t428 = t335 * t454;
t400 = t334 * t428;
t330 = cos(pkin(6));
t453 = qJD(1) * t330;
t405 = qJD(2) + t453;
t229 = -t340 * t405 + t400;
t231 = t334 * t405 + t340 * t428;
t333 = sin(qJ(4));
t339 = cos(qJ(4));
t375 = t229 * t333 - t339 * t231;
t376 = -t229 * t339 - t333 * t231;
t108 = t332 * t375 + t338 * t376;
t565 = t108 * t337;
t569 = t443 - t565;
t341 = cos(qJ(2));
t390 = pkin(2) * t335 - pkin(9) * t341;
t248 = t390 * t454;
t235 = t340 * t248;
t436 = pkin(1) * t453;
t247 = -pkin(8) * t428 + t341 * t436;
t516 = pkin(9) + pkin(10);
t429 = qJD(3) * t516;
t471 = t340 * t341;
t568 = -t247 * t334 + t235 + (pkin(3) * t335 - pkin(10) * t471) * t454 + t340 * t429;
t427 = t341 * t454;
t399 = t334 * t427;
t459 = t340 * t247 + t334 * t248;
t567 = -pkin(10) * t399 + t334 * t429 + t459;
t269 = t333 * t334 - t339 * t340;
t527 = qJD(3) + qJD(4);
t201 = t527 * t269;
t214 = t269 * t427;
t566 = t201 - t214;
t270 = t333 * t340 + t334 * t339;
t202 = t527 * t270;
t213 = t270 * t427;
t461 = t202 - t213;
t331 = sin(qJ(6));
t440 = qJDD(1) * t330;
t308 = qJDD(2) + t440;
t373 = qJD(3) * t405;
t439 = qJDD(1) * t335;
t420 = t329 * t439;
t441 = qJD(1) * qJD(2);
t422 = t341 * t441;
t548 = -t329 * t422 - t420;
t157 = -qJD(3) * t400 + t334 * t308 + (t373 - t548) * t340;
t451 = qJD(2) * t341;
t424 = t334 * t451;
t449 = qJD(3) * t340;
t158 = -t340 * t308 + t329 * (qJD(1) * (t335 * t449 + t424) + t334 * t439) + t334 * t373;
t347 = qJD(4) * t375 - t157 * t333 - t339 * t158;
t538 = t332 * t376 - t338 * t375;
t447 = qJD(4) * t339;
t448 = qJD(4) * t333;
t83 = t339 * t157 - t333 * t158 - t229 * t447 - t231 * t448;
t40 = qJD(5) * t538 + t332 * t83 - t338 * t347;
t38 = qJDD(6) + t40;
t36 = t337 * t38;
t442 = -qJD(6) + t108;
t292 = -qJD(3) + t427;
t279 = -qJD(4) + t292;
t268 = -qJD(5) + t279;
t95 = t337 * t268 + t331 * t538;
t557 = -t442 ^ 2 * t331 + t538 * t95 + t36;
t438 = qJDD(1) * t341;
t307 = t329 * t438;
t421 = t335 * t441;
t398 = t329 * t421;
t245 = qJDD(3) - t307 + t398;
t238 = qJDD(4) + t245;
t226 = qJDD(5) + t238;
t445 = qJD(5) * t338;
t446 = qJD(5) * t332;
t39 = t332 * t347 + t338 * t83 + t375 * t446 + t376 * t445;
t444 = qJD(6) * t331;
t21 = t331 * t226 - t268 * t443 + t337 * t39 - t444 * t538;
t19 = t21 * t331;
t97 = -t268 * t331 + t337 * t538;
t556 = t569 * t97 + t19;
t555 = t331 * t38 - t442 * t569 - t538 * t97;
t534 = pkin(11) * t376;
t250 = pkin(8) * t427 + t335 * t436;
t212 = pkin(9) * t405 + t250;
t374 = -pkin(2) * t341 - pkin(9) * t335 - pkin(1);
t244 = t374 * t329;
t222 = qJD(1) * t244;
t152 = -t212 * t334 + t340 * t222;
t132 = -pkin(10) * t231 + t152;
t120 = -pkin(3) * t292 + t132;
t153 = t212 * t340 + t222 * t334;
t133 = -pkin(10) * t229 + t153;
t131 = t339 * t133;
t79 = t120 * t333 + t131;
t66 = t79 + t534;
t506 = t332 * t66;
t553 = pkin(11) * t375;
t129 = t333 * t133;
t78 = t339 * t120 - t129;
t65 = t78 + t553;
t60 = -pkin(4) * t279 + t65;
t31 = t338 * t60 - t506;
t29 = pkin(5) * t268 - t31;
t552 = t29 * t108;
t550 = t538 * t108;
t563 = t568 * t339;
t293 = t516 * t334;
t294 = t516 * t340;
t562 = -t293 * t447 - t294 * t448 - t333 * t568 - t567 * t339;
t547 = -t108 ^ 2 + t538 ^ 2;
t70 = pkin(5) * t538 - pkin(12) * t108;
t545 = t108 * t268 + t39;
t211 = -pkin(2) * t405 - t247;
t170 = t229 * pkin(3) + t211;
t115 = -pkin(4) * t376 + t170;
t336 = sin(qJ(1));
t473 = t336 * t341;
t342 = cos(qJ(1));
t474 = t335 * t342;
t261 = t330 * t474 + t473;
t328 = qJ(3) + qJ(4);
t324 = qJ(5) + t328;
t315 = sin(t324);
t316 = cos(t324);
t480 = t329 * t342;
t189 = t261 * t316 - t315 * t480;
t469 = t341 * t342;
t475 = t335 * t336;
t263 = -t330 * t475 + t469;
t483 = t329 * t336;
t192 = t263 * t316 + t315 * t483;
t484 = t329 * t335;
t228 = t315 * t330 + t316 * t484;
t435 = pkin(1) * qJD(2) * t330;
t402 = qJD(1) * t435;
t434 = pkin(1) * t440;
t430 = -pkin(8) * t307 - t335 * t434 - t341 * t402;
t357 = -pkin(8) * t398 - t430;
t174 = pkin(9) * t308 + t357;
t369 = t390 * qJD(2);
t176 = (qJD(1) * t369 + qJDD(1) * t374) * t329;
t348 = -qJD(3) * t153 - t334 * t174 + t340 * t176;
t63 = pkin(3) * t245 - pkin(10) * t157 + t348;
t450 = qJD(3) * t334;
t367 = -t340 * t174 - t334 * t176 + t212 * t450 - t222 * t449;
t71 = -pkin(10) * t158 - t367;
t352 = -qJD(4) * t79 - t333 * t71 + t339 * t63;
t12 = pkin(4) * t238 - pkin(11) * t83 + t352;
t406 = -t120 * t447 + t133 * t448 - t333 * t63 - t339 * t71;
t16 = pkin(11) * t347 - t406;
t416 = -t332 * t12 - t338 * t16 - t60 * t445 + t66 * t446;
t544 = g(1) * t192 + g(2) * t189 + g(3) * t228 - t115 * t108 + t416;
t22 = qJD(6) * t97 - t337 * t226 + t331 * t39;
t382 = t331 * t97 + t337 * t95;
t543 = t108 * t382 + t21 * t337 - t331 * t22 - t95 * t443 - t444 * t97;
t559 = -t461 * pkin(11) + t562;
t458 = -t333 * t293 + t339 * t294;
t558 = -pkin(4) * t428 + t566 * pkin(11) - qJD(4) * t458 + t567 * t333 - t563;
t531 = t442 * t538;
t505 = t338 * t66;
t32 = t332 * t60 + t505;
t30 = -pkin(12) * t268 + t32;
t49 = -pkin(5) * t108 - pkin(12) * t538 + t115;
t14 = t30 * t337 + t331 * t49;
t191 = -t263 * t315 + t316 * t483;
t490 = t261 * t315;
t364 = -g(3) * (-t315 * t484 + t316 * t330) - g(2) * (-t316 * t480 - t490) - g(1) * t191;
t354 = -qJD(5) * t32 + t338 * t12 - t332 * t16;
t5 = -pkin(5) * t226 - t354;
t360 = t364 - t5;
t524 = t14 * t538 + t29 * t443 - t331 * t360;
t519 = -t268 * t538 - t40;
t385 = t30 * t331 - t337 * t49;
t526 = t29 * t444 + t385 * t538;
t521 = -t115 * t538 + t354 + t364;
t554 = pkin(4) * t375;
t194 = t338 * t269 + t270 * t332;
t113 = -qJD(5) * t194 - t201 * t338 - t202 * t332;
t151 = -t213 * t332 - t214 * t338;
t468 = t113 - t151;
t195 = -t269 * t332 + t270 * t338;
t467 = qJD(5) * t195 - t332 * t566 + t461 * t338;
t394 = -t250 + (-t399 + t450) * pkin(3);
t546 = t375 ^ 2 - t376 ^ 2;
t322 = sin(t328);
t323 = cos(t328);
t198 = -t263 * t322 + t323 * t483;
t489 = t261 * t322;
t542 = t170 * t375 - g(1) * t198 - g(2) * (-t323 * t480 - t489) - g(3) * (-t322 * t484 + t323 * t330) + t352;
t260 = -t330 * t469 + t475;
t541 = t189 * t331 - t260 * t337;
t540 = t189 * t337 + t260 * t331;
t539 = t279 * t375 + t347;
t325 = t329 ^ 2;
t437 = 0.2e1 * t325;
t407 = -t339 * t293 - t294 * t333;
t178 = -pkin(11) * t270 + t407;
t179 = -pkin(11) * t269 + t458;
t125 = t178 * t332 + t179 * t338;
t533 = qJD(5) * t125 + t559 * t332 - t558 * t338;
t377 = t178 * t338 - t179 * t332;
t532 = qJD(5) * t377 + t558 * t332 + t559 * t338;
t530 = t375 * t376;
t482 = t329 * t340;
t257 = t330 * t334 + t335 * t482;
t481 = t329 * t341;
t515 = pkin(1) * t335;
t457 = pkin(8) * t481 + t330 * t515;
t243 = pkin(9) * t330 + t457;
t409 = -t243 * t334 + t340 * t244;
t141 = -pkin(3) * t481 - pkin(10) * t257 + t409;
t256 = -t330 * t340 + t334 * t484;
t460 = t340 * t243 + t334 * t244;
t145 = -pkin(10) * t256 + t460;
t465 = t333 * t141 + t339 * t145;
t463 = t461 * pkin(4) + t394;
t523 = t279 * t376 + t83;
t197 = -t261 * t323 + t322 * t480;
t199 = t263 * t323 + t322 * t483;
t520 = -t170 * t376 + g(1) * t199 - g(2) * t197 - g(3) * (-t322 * t330 - t323 * t484) + t406;
t180 = t339 * t256 + t257 * t333;
t204 = qJD(3) * t257 + t329 * t424;
t425 = t329 * t451;
t205 = -qJD(3) * t256 + t340 * t425;
t110 = -qJD(4) * t180 - t204 * t333 + t205 * t339;
t249 = t329 * t369;
t309 = pkin(8) * t484;
t479 = t330 * t341;
t251 = (pkin(1) * t479 - t309) * qJD(2);
t349 = -qJD(3) * t460 + t340 * t249 - t251 * t334;
t452 = qJD(2) * t335;
t426 = t329 * t452;
t94 = pkin(3) * t426 - pkin(10) * t205 + t349;
t366 = -t243 * t450 + t244 * t449 + t334 * t249 + t340 * t251;
t99 = -pkin(10) * t204 + t366;
t351 = -qJD(4) * t465 - t333 * t99 + t339 * t94;
t24 = pkin(4) * t426 - pkin(11) * t110 + t351;
t181 = -t256 * t333 + t257 * t339;
t111 = qJD(4) * t181 + t339 * t204 + t205 * t333;
t368 = t141 * t447 - t145 * t448 + t333 * t94 + t339 * t99;
t26 = -pkin(11) * t111 + t368;
t411 = t339 * t141 - t145 * t333;
t74 = -pkin(4) * t481 - pkin(11) * t181 + t411;
t76 = -pkin(11) * t180 + t465;
t380 = t332 * t74 + t338 * t76;
t517 = -qJD(5) * t380 + t24 * t338 - t26 * t332;
t4 = pkin(12) * t226 - t416;
t401 = pkin(8) * t548 - t335 * t402 + t341 * t434;
t175 = -pkin(2) * t308 - t401;
t112 = pkin(3) * t158 + t175;
t53 = -pkin(4) * t347 + t112;
t9 = pkin(5) * t40 - pkin(12) * t39 + t53;
t1 = -t385 * qJD(6) + t331 * t9 + t337 * t4;
t343 = qJD(1) ^ 2;
t513 = g(1) * t342;
t510 = g(3) * t329;
t508 = pkin(5) * t428 + t533;
t319 = pkin(3) * t339 + pkin(4);
t477 = t332 * t333;
t412 = -t132 * t333 - t131;
t67 = t412 - t534;
t466 = t339 * t132 - t129;
t68 = t466 + t553;
t503 = -t332 * t67 - t338 * t68 + t319 * t445 + (-t333 * t446 + (t338 * t339 - t477) * qJD(4)) * pkin(3);
t476 = t333 * t338;
t502 = -t332 * t68 + t338 * t67 + t319 * t446 + (t333 * t445 + (t332 * t339 + t476) * qJD(4)) * pkin(3);
t496 = t195 * t331;
t495 = t195 * t337;
t494 = t229 * t292;
t493 = t231 * t292;
t488 = t261 * t334;
t487 = t316 * t331;
t486 = t316 * t337;
t485 = t325 * t343;
t478 = t331 * t341;
t472 = t337 * t341;
t470 = t340 * t342;
t252 = pkin(8) * t425 + t335 * t435;
t456 = pkin(3) * t476 + t332 * t319;
t326 = t335 ^ 2;
t455 = -t341 ^ 2 + t326;
t433 = t341 * t485;
t432 = t329 * t478;
t431 = t329 * t472;
t320 = -pkin(3) * t340 - pkin(2);
t423 = t329 * t330 * t343;
t136 = pkin(3) * t231 - t554;
t254 = pkin(12) + t456;
t414 = qJD(6) * t254 + t136 + t70;
t317 = pkin(4) * t332 + pkin(12);
t413 = qJD(6) * t317 - t554 + t70;
t408 = t261 * t340 - t334 * t480;
t404 = qJD(2) + 0.2e1 * t453;
t403 = t308 + t440;
t33 = t332 * t65 + t505;
t396 = pkin(4) * t446 - t33;
t34 = t338 * t65 - t506;
t395 = -pkin(4) * t445 + t34;
t171 = pkin(3) * t204 + t252;
t239 = pkin(4) * t269 + t320;
t123 = pkin(5) * t194 - pkin(12) * t195 + t239;
t393 = pkin(12) * t428 - qJD(6) * t123 - t532;
t392 = -pkin(5) * t467 + pkin(12) * t468 + qJD(6) * t125 - t463;
t388 = -t317 * t38 - t552;
t387 = -t254 * t38 - t552;
t46 = -pkin(12) * t481 + t380;
t126 = t338 * t180 + t181 * t332;
t127 = -t180 * t332 + t181 * t338;
t242 = t309 + (-pkin(1) * t341 - pkin(2)) * t330;
t185 = pkin(3) * t256 + t242;
t134 = pkin(4) * t180 + t185;
t57 = pkin(5) * t126 - pkin(12) * t127 + t134;
t384 = t331 * t57 + t337 * t46;
t383 = -t331 * t46 + t337 * t57;
t381 = -t332 * t76 + t338 * t74;
t372 = -pkin(3) * t477 + t319 * t338;
t116 = t127 * t331 + t431;
t371 = t332 * t24 + t338 * t26 + t74 * t445 - t446 * t76;
t87 = pkin(4) * t111 + t171;
t137 = t151 * t331 - t337 * t428;
t363 = t113 * t331 + t195 * t443 - t137;
t138 = t151 * t337 + t331 * t428;
t362 = t113 * t337 - t195 * t444 - t138;
t262 = t330 * t473 + t474;
t359 = -g(1) * t262 - g(2) * t260 + g(3) * t481;
t356 = -pkin(9) * t245 - t211 * t292;
t2 = -qJD(6) * t14 - t331 * t4 + t337 * t9;
t346 = pkin(9) * qJD(3) * t292 - t175 - t359;
t318 = -pkin(4) * t338 - pkin(5);
t253 = -pkin(5) - t372;
t208 = t263 * t340 + t334 * t483;
t207 = -t263 * t334 + t336 * t482;
t155 = t192 * t337 + t262 * t331;
t154 = -t192 * t331 + t262 * t337;
t117 = t127 * t337 - t432;
t51 = qJD(5) * t127 + t110 * t332 + t338 * t111;
t50 = -qJD(5) * t126 + t110 * t338 - t111 * t332;
t45 = pkin(5) * t481 - t381;
t44 = -qJD(6) * t432 + t127 * t443 + t331 * t50 - t337 * t426;
t43 = -qJD(6) * t116 + t331 * t426 + t337 * t50;
t17 = pkin(5) * t51 - pkin(12) * t50 + t87;
t7 = -pkin(5) * t426 - t517;
t6 = pkin(12) * t426 + t371;
t3 = [qJDD(1), g(1) * t336 - g(2) * t342, g(2) * t336 + t513 (qJDD(1) * t326 + 0.2e1 * t341 * t421) * t325 (t335 * t438 - t441 * t455) * t437 (t335 * t403 + t404 * t451) * t329 (t341 * t403 - t404 * t452) * t329, t308 * t330, -t252 * t405 - t309 * t308 + t401 * t330 + g(1) * t261 - g(2) * t263 + (t308 * t479 + (-t421 + t438) * t437) * pkin(1), -t251 * t405 - t457 * t308 - t357 * t330 - g(1) * t260 + g(2) * t262 + (-t422 - t439) * pkin(1) * t437, t157 * t257 + t205 * t231, -t157 * t256 - t158 * t257 - t204 * t231 - t205 * t229, -t205 * t292 + t245 * t257 + (-t157 * t341 + t231 * t452) * t329, t204 * t292 - t245 * t256 + (t158 * t341 - t229 * t452) * t329 (-t245 * t341 - t292 * t452) * t329, -t349 * t292 + t409 * t245 + t252 * t229 + t242 * t158 + t175 * t256 + t211 * t204 + g(1) * t408 - g(2) * t208 + (t152 * t452 - t341 * t348) * t329, t366 * t292 - t460 * t245 + t252 * t231 + t242 * t157 + t175 * t257 + t211 * t205 - g(1) * t488 - g(2) * t207 + (-g(1) * t470 - t153 * t452 - t341 * t367) * t329, -t110 * t375 + t181 * t83, t110 * t376 + t111 * t375 - t180 * t83 + t181 * t347, -t110 * t279 + t181 * t238 + (-t341 * t83 - t375 * t452) * t329, t111 * t279 - t180 * t238 + (-t341 * t347 + t376 * t452) * t329 (-t238 * t341 - t279 * t452) * t329, -t351 * t279 + t411 * t238 - t171 * t376 - t185 * t347 + t112 * t180 + t170 * t111 - g(1) * t197 - g(2) * t199 + (-t341 * t352 + t452 * t78) * t329, t368 * t279 - t465 * t238 - t171 * t375 + t185 * t83 + t112 * t181 + t170 * t110 - g(1) * t489 - g(2) * t198 + (-t323 * t513 - t341 * t406 - t452 * t79) * t329, t127 * t39 + t50 * t538, t108 * t50 - t126 * t39 - t127 * t40 - t51 * t538, t127 * t226 - t268 * t50 + (-t341 * t39 + t452 * t538) * t329, -t126 * t226 + t268 * t51 + (t108 * t452 + t341 * t40) * t329 (-t226 * t341 - t268 * t452) * t329, -t517 * t268 + t381 * t226 - t87 * t108 + t134 * t40 + t53 * t126 + t115 * t51 + g(1) * t189 - g(2) * t192 + (t31 * t452 - t341 * t354) * t329, t371 * t268 - t380 * t226 + t87 * t538 + t134 * t39 + t53 * t127 + t115 * t50 - g(1) * t490 - g(2) * t191 + (-t316 * t513 - t32 * t452 - t341 * t416) * t329, t117 * t21 + t43 * t97, -t116 * t21 - t117 * t22 - t43 * t95 - t44 * t97, t117 * t38 + t126 * t21 - t43 * t442 + t51 * t97, -t116 * t38 - t126 * t22 + t44 * t442 - t51 * t95, t126 * t38 - t442 * t51 -(-qJD(6) * t384 + t17 * t337 - t331 * t6) * t442 + t383 * t38 + t2 * t126 - t385 * t51 + t7 * t95 + t45 * t22 + t5 * t116 + t29 * t44 + g(1) * t540 - g(2) * t155 (qJD(6) * t383 + t17 * t331 + t337 * t6) * t442 - t384 * t38 - t1 * t126 - t14 * t51 + t7 * t97 + t45 * t21 + t5 * t117 + t29 * t43 - g(1) * t541 - g(2) * t154; 0, 0, 0, -t335 * t433, t455 * t485, -t341 * t423 + t420, t335 * t423 + t307, t308, t250 * t405 + t485 * t515 - t359 + t401, pkin(1) * t433 + t247 * t405 + g(1) * t263 + g(2) * t261 + (pkin(8) * t441 + g(3)) * t484 + t430, t157 * t334 - t340 * t493 (t157 + t494) * t340 + (-t158 + t493) * t334, -t292 * t449 + t334 * t245 + (-t231 * t335 + t292 * t471) * t454, t292 * t450 + t340 * t245 + (-t292 * t334 * t341 + t229 * t335) * t454, t292 * t428, -t152 * t428 - pkin(2) * t158 - t250 * t229 + t235 * t292 + (-t247 * t292 + t356) * t334 + t346 * t340, -pkin(2) * t157 + t153 * t428 - t250 * t231 - t292 * t459 - t334 * t346 + t340 * t356, t270 * t83 + t375 * t566, -t269 * t83 + t270 * t347 + t375 * t461 - t376 * t566, t238 * t270 + t279 * t566 + t375 * t428, -t238 * t269 + t279 * t461 - t376 * t428, t279 * t428, t407 * t238 - t320 * t347 + t112 * t269 - t78 * t428 + (t294 * t447 + (-qJD(4) * t293 - t567) * t333 + t563) * t279 + t461 * t170 - t394 * t376 - t359 * t323, t112 * t270 - t170 * t566 - t458 * t238 + t279 * t562 + t320 * t83 + t359 * t322 - t394 * t375 + t79 * t428, t195 * t39 + t468 * t538, t108 * t468 - t194 * t39 - t195 * t40 - t467 * t538, t195 * t226 - t268 * t468 - t428 * t538, -t108 * t428 - t194 * t226 + t268 * t467, t268 * t428, -t108 * t463 + t467 * t115 + t53 * t194 + t226 * t377 + t239 * t40 + t268 * t533 - t31 * t428 - t359 * t316, t468 * t115 - t125 * t226 + t53 * t195 + t239 * t39 + t268 * t532 + t359 * t315 + t32 * t428 + t463 * t538, t21 * t495 + t362 * t97, t137 * t97 + t138 * t95 - t382 * t113 + (-t19 - t22 * t337 + (t331 * t95 - t337 * t97) * qJD(6)) * t195, t194 * t21 - t362 * t442 + t38 * t495 + t467 * t97, -t194 * t22 + t363 * t442 - t38 * t496 - t467 * t95, t194 * t38 - t442 * t467 (t123 * t337 - t125 * t331) * t38 + t2 * t194 - t377 * t22 + t5 * t496 - g(1) * (-t262 * t486 + t263 * t331) - g(2) * (-t260 * t486 + t261 * t331) + t508 * t95 - (t316 * t472 + t331 * t335) * t510 - t467 * t385 - (t331 * t393 - t337 * t392) * t442 + t363 * t29 -(t123 * t331 + t125 * t337) * t38 - t1 * t194 - t377 * t21 + t5 * t495 - g(1) * (t262 * t487 + t263 * t337) - g(2) * (t260 * t487 + t261 * t337) + t508 * t97 - (-t316 * t478 + t335 * t337) * t510 - t467 * t14 - (t331 * t392 + t337 * t393) * t442 + t362 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231 * t229, -t229 ^ 2 + t231 ^ 2, t157 - t494, -t158 - t493, t245, -t153 * t292 - t211 * t231 - g(1) * t207 - g(2) * (-t329 * t470 - t488) + g(3) * t256 + t348, g(1) * t208 + g(2) * t408 + g(3) * t257 - t152 * t292 + t211 * t229 + t367, t530, t546, t523, t539, t238, t412 * t279 + (t231 * t376 + t238 * t339 + t279 * t448) * pkin(3) + t542, -t466 * t279 + (t231 * t375 - t238 * t333 + t279 * t447) * pkin(3) + t520, -t550, t547, t545, t519, t226, t108 * t136 + t226 * t372 + t268 * t502 + t521, -t136 * t538 - t226 * t456 + t268 * t503 + t544, t556, t543, t555, t557, t531, t253 * t22 + t502 * t95 + (t442 * t503 + t387) * t331 + (t414 * t442 + t360) * t337 + t526, t253 * t21 + t502 * t97 + t387 * t337 - (t331 * t414 - t337 * t503) * t442 + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, t546, t523, t539, t238, -t279 * t79 + t542, -t279 * t78 + t520, -t550, t547, t545, t519, t226, -t268 * t33 + (-t108 * t375 + t226 * t338 + t268 * t446) * pkin(4) + t521, -t268 * t34 + (-t226 * t332 + t268 * t445 + t375 * t538) * pkin(4) + t544, t556, t543, t555, t557, t531, t318 * t22 + t396 * t95 + (-t395 * t442 + t388) * t331 + (t413 * t442 + t360) * t337 + t526, t318 * t21 + t396 * t97 + t388 * t337 - (t331 * t413 + t337 * t395) * t442 + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t550, t547, t545, t519, t226, -t268 * t32 + t521, -t268 * t31 + t544, t556, t543, t555, t557, t531, -pkin(5) * t22 - t32 * t95 + (-pkin(12) * t38 - t31 * t442 - t552) * t331 + (-(-pkin(12) * qJD(6) - t70) * t442 + t360) * t337 + t526, -pkin(5) * t21 - (t31 * t337 + t331 * t70) * t442 - t32 * t97 - t29 * t565 + (-t442 * t444 - t36) * pkin(12) + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97 * t95, -t95 ^ 2 + t97 ^ 2, -t442 * t95 + t21, -t442 * t97 - t22, t38, -t14 * t442 - t29 * t97 - g(1) * t154 + g(2) * t541 - g(3) * (-t228 * t331 - t431) + t2, t385 * t442 + t29 * t95 + g(1) * t155 + g(2) * t540 - g(3) * (-t228 * t337 + t432) - t1;];
tau_reg  = t3;
