% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 10:25
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 10:18:06
% EndTime: 2019-05-08 10:20:46
% DurationCPUTime: 103.69s
% Computational Cost: add. (1115512->1122), mult. (2420129->1825), div. (0->0), fcn. (2016888->14), ass. (0->809)
t1263 = sin(pkin(6));
t1430 = qJD(1) * t1263;
t1265 = sin(qJ(6));
t1268 = sin(qJ(3));
t1274 = cos(qJ(3));
t1264 = cos(pkin(6));
t1429 = qJD(1) * t1264;
t1373 = qJD(2) + t1429;
t1269 = sin(qJ(2));
t1398 = t1263 * t1269;
t1387 = qJD(1) * t1398;
t1217 = t1268 * t1387 - t1274 * t1373;
t1218 = t1268 * t1373 + t1274 * t1387;
t1267 = sin(qJ(4));
t1273 = cos(qJ(4));
t1184 = -t1217 * t1273 - t1267 * t1218;
t1185 = -t1217 * t1267 + t1218 * t1273;
t1266 = sin(qJ(5));
t1272 = cos(qJ(5));
t1127 = t1184 * t1266 + t1185 * t1272;
t1275 = cos(qJ(2));
t1397 = t1263 * t1275;
t1249 = qJD(1) * t1397 - qJD(3);
t1241 = -qJD(4) + t1249;
t1237 = -qJD(5) + t1241;
t1271 = cos(qJ(6));
t1105 = t1127 * t1265 + t1271 * t1237;
t1107 = t1127 * t1271 - t1237 * t1265;
t1032 = t1107 * t1105;
t1427 = qJD(1) * t1275;
t1375 = qJD(2) * t1427;
t1389 = t1269 * qJDD(1);
t1225 = (t1375 + t1389) * t1263;
t1368 = qJDD(1) * t1264 + qJDD(2);
t1175 = -t1217 * qJD(3) + t1274 * t1225 + t1268 * t1368;
t1290 = -t1268 * t1225 + t1274 * t1368;
t1283 = t1218 * qJD(3) - t1290;
t1371 = t1175 * t1267 + t1273 * t1283;
t1088 = -qJD(4) * t1185 - t1371;
t1089 = t1184 * qJD(4) + t1273 * t1175 - t1267 * t1283;
t1372 = -t1272 * t1088 + t1089 * t1266;
t985 = -qJD(5) * t1127 - t1372;
t1294 = qJDD(6) - t985;
t1455 = -t1032 + t1294;
t1464 = t1265 * t1455;
t1463 = t1271 * t1455;
t1125 = -t1272 * t1184 + t1185 * t1266;
t1115 = t1125 * t1237;
t1293 = qJD(5) * t1125 - t1088 * t1266 - t1089 * t1272;
t1462 = t1293 - t1115;
t1367 = t1373 ^ 2;
t1122 = qJD(6) + t1125;
t1048 = t1122 * t1105;
t1390 = qJDD(1) * t1263;
t1226 = -qJD(2) * t1387 + t1275 * t1390;
t1220 = -qJDD(3) + t1226;
t1298 = -qJDD(4) + t1220;
t1215 = -qJDD(5) + t1298;
t944 = -t1105 * qJD(6) - t1265 * t1215 - t1271 * t1293;
t921 = -t944 + t1048;
t1418 = t1125 * t1127;
t1284 = -t1215 - t1418;
t1461 = t1266 * t1284;
t1413 = t1184 * t1185;
t1286 = -t1298 + t1413;
t1460 = t1267 * t1286;
t1410 = t1217 * t1218;
t1289 = -t1220 - t1410;
t1459 = t1268 * t1289;
t1458 = t1272 * t1284;
t1457 = t1273 * t1286;
t1456 = t1274 * t1289;
t1171 = t1184 * t1241;
t1057 = -t1171 - t1089;
t1453 = -t1171 + t1089;
t1202 = t1217 * t1249;
t1154 = t1202 - t1175;
t1152 = t1202 + t1175;
t1100 = (-t1184 * t1267 + t1185 * t1273) * t1241;
t1101 = (-t1184 * t1273 - t1185 * t1267) * t1241;
t1029 = -t1100 * t1268 + t1101 * t1274;
t1452 = t1269 * t1029 + t1275 * t1298;
t1260 = t1263 ^ 2;
t1451 = (t1264 ^ 2 + t1260) * t1430 + qJD(2) * t1264 * t1263;
t1374 = t1271 * t1215 - t1265 * t1293;
t916 = (qJD(6) - t1122) * t1107 + t1374;
t955 = (qJD(5) + t1237) * t1127 + t1372;
t1053 = (qJD(4) + t1241) * t1185 + t1371;
t1149 = t1218 * (qJD(3) + t1249) - t1290;
t1270 = sin(qJ(1));
t1276 = cos(qJ(1));
t1252 = g(1) * t1276 + t1270 * g(2);
t1449 = qJD(1) ^ 2;
t1221 = -pkin(1) * t1449 + pkin(8) * t1390 - t1252;
t1444 = pkin(2) * t1275;
t1366 = -pkin(9) * t1269 - t1444;
t1224 = t1366 * t1430;
t1251 = g(1) * t1270 - t1276 * g(2);
t1442 = pkin(8) * t1263;
t1287 = qJDD(1) * pkin(1) + t1442 * t1449 + t1251;
t1285 = t1264 * t1287;
t1282 = -g(3) * t1398 + t1269 * t1285;
t1140 = t1368 * pkin(9) - t1367 * pkin(2) + (t1224 * t1430 + t1221) * t1275 + t1282;
t1336 = qJD(1) * t1373;
t1313 = t1275 * t1336;
t1314 = t1269 * t1336;
t1441 = t1264 * g(3);
t1141 = -t1226 * pkin(2) - t1225 * pkin(9) - t1441 + (pkin(2) * t1314 - pkin(9) * t1313 - t1287) * t1263;
t1071 = t1140 * t1268 - t1274 * t1141;
t1450 = pkin(10) * t1154 - t1071;
t1103 = t1105 ^ 2;
t1104 = t1107 ^ 2;
t1121 = t1122 ^ 2;
t1123 = t1125 ^ 2;
t1124 = t1127 ^ 2;
t1448 = t1184 ^ 2;
t1183 = t1185 ^ 2;
t1447 = t1217 ^ 2;
t1216 = t1218 ^ 2;
t1446 = t1237 ^ 2;
t1240 = t1241 ^ 2;
t1245 = t1249 ^ 2;
t1445 = pkin(2) * t1269;
t1443 = pkin(5) * t1266;
t1063 = pkin(5) * t1125 - pkin(12) * t1127;
t1072 = t1274 * t1140 + t1268 * t1141;
t1194 = -pkin(3) * t1249 - pkin(10) * t1218;
t1280 = -pkin(10) * t1283 + t1249 * t1194 + t1072;
t1279 = -pkin(3) * t1447 + t1280;
t1281 = t1289 * pkin(3) + t1450;
t936 = t1267 * t1279 - t1273 * t1281;
t1278 = t1286 * pkin(4) + pkin(11) * t1057 - t936;
t1165 = -pkin(4) * t1241 - pkin(11) * t1185;
t937 = t1267 * t1281 + t1273 * t1279;
t896 = -pkin(4) * t1448 + pkin(11) * t1088 + t1165 * t1241 + t937;
t809 = t1266 * t1278 + t1272 * t896;
t785 = -pkin(5) * t1446 - pkin(12) * t1215 - t1063 * t1125 + t809;
t1370 = t1221 * t1269 - t1275 * t1285;
t1428 = qJD(1) * t1269;
t1139 = -t1368 * pkin(2) - t1367 * pkin(9) + (g(3) * t1275 + t1224 * t1428) * t1263 + t1370;
t1051 = t1283 * pkin(3) - t1447 * pkin(10) + t1194 * t1218 + t1139;
t960 = -t1088 * pkin(4) - t1448 * pkin(11) + t1165 * t1185 + t1051;
t835 = (-t1127 * t1237 - t985) * pkin(5) + t1462 * pkin(12) + t960;
t749 = t1265 * t835 + t1271 * t785;
t808 = t1266 * t896 - t1272 * t1278;
t784 = t1215 * pkin(5) - pkin(12) * t1446 + t1063 * t1127 + t808;
t1440 = t1265 * t784;
t931 = t1032 + t1294;
t1439 = t1265 * t931;
t1438 = t1266 * t960;
t750 = t1266 * t809 - t1272 * t808;
t1437 = t1267 * t750;
t858 = t1267 * t937 - t1273 * t936;
t1436 = t1268 * t858;
t1435 = t1271 * t784;
t1434 = t1271 * t931;
t1433 = t1272 * t960;
t1432 = t1273 * t750;
t1431 = t1274 * t858;
t1045 = t1215 - t1418;
t1426 = t1045 * t1266;
t1425 = t1045 * t1272;
t1424 = t1051 * t1267;
t1423 = t1051 * t1273;
t1112 = t1298 + t1413;
t1422 = t1112 * t1267;
t1421 = t1112 * t1273;
t1420 = t1122 * t1265;
t1419 = t1122 * t1271;
t1417 = t1139 * t1268;
t1416 = t1139 * t1274;
t1168 = t1220 - t1410;
t1415 = t1168 * t1268;
t1414 = t1168 * t1274;
t1204 = t1263 * t1287 + t1441;
t1412 = t1204 * t1269;
t1411 = t1204 * t1275;
t1399 = t1260 * t1449;
t1248 = t1275 * t1269 * t1399;
t1222 = -t1248 + t1368;
t1409 = t1222 * t1269;
t1408 = t1222 * t1275;
t1223 = t1248 + t1368;
t1407 = t1223 * t1269;
t1406 = t1223 * t1275;
t1405 = t1237 * t1266;
t1404 = t1237 * t1272;
t1403 = t1241 * t1267;
t1402 = t1241 * t1273;
t1401 = t1249 * t1268;
t1400 = t1249 * t1274;
t1261 = t1269 ^ 2;
t1262 = t1275 ^ 2;
t1391 = t1261 + t1262;
t1388 = -pkin(5) * t1272 - pkin(4);
t1385 = t1266 * t1032;
t1384 = t1272 * t1032;
t1383 = t1269 * t1418;
t1382 = t1275 * t1418;
t1381 = t1269 * t1413;
t1380 = t1275 * t1413;
t1379 = t1269 * t1410;
t1378 = t1275 * t1410;
t1377 = t1261 * t1399;
t1376 = t1262 * t1399;
t748 = t1265 * t785 - t1271 * t835;
t751 = t1266 * t808 + t1272 * t809;
t859 = t1267 * t936 + t1273 * t937;
t994 = t1071 * t1268 + t1274 * t1072;
t1208 = -t1251 * t1270 - t1276 * t1252;
t1247 = qJDD(1) * t1276 - t1270 * t1449;
t1365 = -pkin(7) * t1247 - g(3) * t1270;
t1213 = -t1377 - t1367;
t1186 = -t1213 * t1269 - t1408;
t1364 = pkin(8) * t1186 - t1412;
t1230 = -t1367 - t1376;
t1191 = t1230 * t1275 - t1407;
t1363 = pkin(8) * t1191 + t1411;
t688 = t1265 * t749 - t1271 * t748;
t689 = t1265 * t748 + t1271 * t749;
t665 = t1266 * t689 - t1272 * t784;
t666 = t1266 * t784 + t1272 * t689;
t637 = t1267 * t666 + t1273 * t665;
t638 = -t1267 * t665 + t1273 * t666;
t611 = -t1268 * t637 + t1274 * t638;
t1362 = t1269 * t611 - t1275 * t688;
t692 = t1267 * t751 + t1432;
t693 = t1273 * t751 - t1437;
t653 = -t1268 * t692 + t1274 * t693;
t1361 = t1269 * t653 - t1275 * t960;
t920 = -t1048 - t944;
t839 = -t1265 * t920 - t1271 * t916;
t999 = t1103 + t1104;
t800 = t1266 * t839 + t1272 * t999;
t801 = -t1266 * t999 + t1272 * t839;
t745 = t1267 * t801 + t1273 * t800;
t746 = -t1267 * t800 + t1273 * t801;
t687 = -t1268 * t745 + t1274 * t746;
t837 = -t1265 * t916 + t1271 * t920;
t1360 = t1269 * t687 - t1275 * t837;
t1030 = -t1104 + t1103;
t917 = (-qJD(6) - t1122) * t1107 - t1374;
t838 = t1265 * t921 + t1271 * t917;
t812 = t1030 * t1272 + t1266 * t838;
t813 = -t1030 * t1266 + t1272 * t838;
t752 = t1267 * t813 + t1273 * t812;
t753 = -t1267 * t812 + t1273 * t813;
t697 = -t1268 * t752 + t1274 * t753;
t836 = -t1265 * t917 + t1271 * t921;
t1359 = t1269 * t697 + t1275 * t836;
t1006 = -t1121 - t1103;
t881 = t1006 * t1271 - t1464;
t816 = t1266 * t881 + t1272 * t917;
t817 = -t1266 * t917 + t1272 * t881;
t754 = t1267 * t817 + t1273 * t816;
t755 = -t1267 * t816 + t1273 * t817;
t699 = -t1268 * t754 + t1274 * t755;
t880 = t1006 * t1265 + t1463;
t1358 = t1269 * t699 - t1275 * t880;
t1010 = -t1104 - t1121;
t885 = -t1010 * t1265 - t1434;
t819 = t1266 * t885 + t1272 * t921;
t820 = -t1266 * t921 + t1272 * t885;
t756 = t1267 * t820 + t1273 * t819;
t757 = -t1267 * t819 + t1273 * t820;
t701 = -t1268 * t756 + t1274 * t757;
t884 = t1010 * t1271 - t1439;
t1357 = t1269 * t701 - t1275 * t884;
t1044 = -t1104 + t1121;
t899 = -t1044 * t1265 + t1463;
t826 = t1266 * t899 + t1272 * t920;
t828 = -t1266 * t920 + t1272 * t899;
t764 = t1267 * t828 + t1273 * t826;
t766 = -t1267 * t826 + t1273 * t828;
t704 = -t1268 * t764 + t1274 * t766;
t897 = -t1044 * t1271 - t1464;
t1356 = t1269 * t704 + t1275 * t897;
t1043 = t1103 - t1121;
t900 = t1043 * t1271 - t1439;
t827 = t1266 * t900 + t1272 * t916;
t829 = -t1266 * t916 + t1272 * t900;
t765 = t1267 * t829 + t1273 * t827;
t767 = -t1267 * t827 + t1273 * t829;
t705 = -t1268 * t765 + t1274 * t767;
t898 = -t1043 * t1265 - t1434;
t1355 = t1269 * t705 + t1275 * t898;
t943 = -qJD(6) * t1107 - t1374;
t913 = t1105 * t1419 - t1265 * t943;
t873 = t1266 * t913 + t1384;
t875 = t1272 * t913 - t1385;
t794 = t1267 * t875 + t1273 * t873;
t796 = -t1267 * t873 + t1273 * t875;
t739 = -t1268 * t794 + t1274 * t796;
t912 = -t1105 * t1420 - t1271 * t943;
t1354 = t1269 * t739 + t1275 * t912;
t915 = -t1107 * t1420 + t1271 * t944;
t874 = t1266 * t915 - t1384;
t876 = t1272 * t915 + t1385;
t795 = t1267 * t876 + t1273 * t874;
t797 = -t1267 * t874 + t1273 * t876;
t740 = -t1268 * t795 + t1274 * t797;
t914 = -t1107 * t1419 - t1265 * t944;
t1353 = t1269 * t740 + t1275 * t914;
t976 = (-t1105 * t1271 + t1107 * t1265) * t1122;
t908 = t1266 * t976 - t1272 * t1294;
t909 = t1266 * t1294 + t1272 * t976;
t823 = t1267 * t909 + t1273 * t908;
t824 = -t1267 * t908 + t1273 * t909;
t760 = -t1268 * t823 + t1274 * t824;
t975 = (t1105 * t1265 + t1107 * t1271) * t1122;
t1352 = t1269 * t760 + t1275 * t975;
t1058 = -t1446 - t1123;
t977 = t1058 * t1266 + t1458;
t978 = t1058 * t1272 - t1461;
t902 = t1267 * t978 + t1273 * t977;
t903 = -t1267 * t977 + t1273 * t978;
t822 = -t1268 * t902 + t1274 * t903;
t954 = (qJD(5) - t1237) * t1127 + t1372;
t1351 = t1269 * t822 - t1275 * t954;
t1097 = -t1124 - t1446;
t1000 = t1097 * t1272 + t1426;
t1001 = -t1097 * t1266 + t1425;
t922 = t1000 * t1273 + t1001 * t1267;
t923 = -t1000 * t1267 + t1001 * t1273;
t846 = -t1268 * t922 + t1274 * t923;
t1350 = t1269 * t846 + t1275 * t1462;
t1111 = -t1124 + t1446;
t1002 = t1111 * t1272 + t1461;
t1004 = -t1111 * t1266 + t1458;
t924 = t1002 * t1273 + t1004 * t1267;
t926 = -t1002 * t1267 + t1004 * t1273;
t850 = -t1268 * t924 + t1274 * t926;
t959 = t1115 + t1293;
t1349 = t1269 * t850 + t1275 * t959;
t1110 = t1123 - t1446;
t1003 = t1110 * t1266 - t1425;
t1005 = t1110 * t1272 + t1426;
t925 = t1003 * t1273 + t1005 * t1267;
t927 = -t1003 * t1267 + t1005 * t1273;
t851 = -t1268 * t925 + t1274 * t927;
t1348 = t1269 * t851 + t1275 * t955;
t1015 = -t1123 - t1124;
t870 = -t1266 * t955 + t1272 * t959;
t872 = -t1266 * t959 - t1272 * t955;
t791 = t1267 * t872 + t1273 * t870;
t793 = -t1267 * t870 + t1273 * t872;
t735 = -t1268 * t791 + t1274 * t793;
t1347 = -t1015 * t1275 + t1269 * t735;
t778 = t1274 * t859 - t1436;
t1346 = -t1051 * t1275 + t1269 * t778;
t1052 = (qJD(4) - t1241) * t1185 + t1371;
t1118 = -t1240 - t1448;
t1037 = t1118 * t1267 + t1457;
t1038 = t1118 * t1273 - t1460;
t969 = -t1037 * t1268 + t1038 * t1274;
t1345 = -t1052 * t1275 + t1269 * t969;
t1166 = -t1240 + t1448;
t1076 = t1166 * t1267 - t1421;
t1078 = t1166 * t1273 + t1422;
t998 = -t1076 * t1268 + t1078 * t1274;
t1344 = t1053 * t1275 + t1269 * t998;
t1159 = -t1183 - t1240;
t1069 = t1159 * t1273 + t1422;
t1070 = -t1159 * t1267 + t1421;
t992 = -t1069 * t1268 + t1070 * t1274;
t1343 = t1269 * t992 - t1275 * t1453;
t1167 = -t1183 + t1240;
t1075 = t1167 * t1273 + t1460;
t1077 = -t1167 * t1267 + t1457;
t997 = -t1075 * t1268 + t1077 * t1274;
t1342 = t1057 * t1275 + t1269 * t997;
t1064 = -t1124 + t1123;
t869 = -t1266 * t954 - t1272 * t1462;
t871 = t1266 * t1462 - t1272 * t954;
t790 = t1267 * t871 + t1273 * t869;
t792 = -t1267 * t869 + t1273 * t871;
t734 = -t1268 * t790 + t1274 * t792;
t1341 = t1064 * t1275 + t1269 * t734;
t1090 = -t1183 - t1448;
t980 = -t1053 * t1267 + t1057 * t1273;
t982 = -t1053 * t1273 - t1057 * t1267;
t907 = -t1268 * t980 + t1274 * t982;
t1340 = -t1090 * t1275 + t1269 * t907;
t1132 = -t1183 + t1448;
t979 = -t1052 * t1267 + t1273 * t1453;
t981 = -t1052 * t1273 - t1267 * t1453;
t906 = -t1268 * t979 + t1274 * t981;
t1339 = t1132 * t1275 + t1269 * t906;
t1338 = -t1139 * t1275 + t1269 * t994;
t1035 = (t1125 * t1266 + t1127 * t1272) * t1237;
t1036 = (t1125 * t1272 - t1127 * t1266) * t1237;
t966 = t1035 * t1273 + t1036 * t1267;
t967 = -t1035 * t1267 + t1036 * t1273;
t894 = -t1268 * t966 + t1274 * t967;
t1337 = t1215 * t1275 + t1269 * t894;
t1335 = t1260 * t1269 * t1375;
t993 = -t1071 * t1274 + t1072 * t1268;
t1150 = (-qJD(3) + t1249) * t1218 + t1290;
t1081 = t1150 * t1274 - t1152 * t1268;
t1187 = -t1216 + t1447;
t1334 = t1081 * t1269 + t1187 * t1275;
t1082 = -t1149 * t1274 - t1154 * t1268;
t1164 = t1216 + t1447;
t1333 = t1082 * t1269 + t1164 * t1275;
t1178 = -t1245 - t1447;
t1109 = t1178 * t1274 - t1459;
t1332 = t1109 * t1269 + t1150 * t1275;
t1188 = -t1216 - t1245;
t1120 = -t1188 * t1268 + t1414;
t1331 = t1120 * t1269 - t1152 * t1275;
t1196 = -t1216 + t1245;
t1130 = -t1196 * t1268 + t1456;
t1330 = t1130 * t1269 + t1154 * t1275;
t1195 = -t1245 + t1447;
t1131 = t1195 * t1274 + t1415;
t1329 = t1131 * t1269 + t1149 * t1275;
t1163 = (t1217 * t1274 - t1218 * t1268) * t1249;
t1328 = t1163 * t1269 + t1220 * t1275;
t1179 = g(3) * t1397 + t1370;
t1180 = t1275 * t1221 + t1282;
t1327 = -t1179 * t1275 + t1180 * t1269;
t1117 = t1179 * t1269 + t1180 * t1275;
t1235 = t1263 * t1313;
t1198 = t1235 + t1225;
t1234 = t1263 * t1314;
t1201 = t1226 - t1234;
t1326 = t1198 * t1275 + t1201 * t1269;
t1199 = -t1235 + t1225;
t1200 = t1226 + t1234;
t1325 = -t1199 * t1275 + t1200 * t1269;
t1324 = t1213 * t1275 - t1409;
t1229 = -t1367 + t1376;
t1323 = t1229 * t1269 + t1408;
t1228 = t1367 - t1377;
t1322 = t1228 * t1275 + t1407;
t1321 = t1230 * t1269 + t1406;
t1207 = t1251 * t1276 - t1270 * t1252;
t1320 = t1263 * t1368;
t948 = -t1125 * t1405 + t1272 * t985;
t949 = -t1125 * t1404 - t1266 * t985;
t865 = t1267 * t949 + t1273 * t948;
t867 = -t1267 * t948 + t1273 * t949;
t788 = -t1268 * t865 + t1274 * t867;
t1319 = t1269 * t788 + t1382;
t950 = -t1127 * t1404 - t1266 * t1293;
t951 = t1127 * t1405 - t1272 * t1293;
t866 = t1267 * t951 + t1273 * t950;
t868 = -t1267 * t950 + t1273 * t951;
t789 = -t1268 * t866 + t1274 * t868;
t1318 = t1269 * t789 - t1382;
t1039 = t1088 * t1273 + t1184 * t1403;
t1040 = -t1088 * t1267 + t1184 * t1402;
t972 = -t1039 * t1268 + t1040 * t1274;
t1317 = t1269 * t972 - t1380;
t1041 = t1089 * t1267 - t1185 * t1402;
t1042 = t1089 * t1273 + t1185 * t1403;
t973 = -t1041 * t1268 + t1042 * t1274;
t1316 = t1269 * t973 + t1380;
t1315 = t1263 * t1336;
t1144 = -t1217 * t1400 + t1268 * t1283;
t1312 = t1144 * t1269 + t1378;
t1146 = t1175 * t1274 + t1218 * t1401;
t1311 = t1146 * t1269 - t1378;
t612 = pkin(11) * t666 + (-pkin(12) * t1266 + t1388) * t688;
t625 = -pkin(11) * t665 + (-pkin(12) * t1272 + t1443) * t688;
t594 = -pkin(3) * t688 + pkin(10) * t638 + t1267 * t625 + t1273 * t612;
t597 = -pkin(10) * t637 - t1267 * t612 + t1273 * t625;
t610 = t1268 * t638 + t1274 * t637;
t581 = -pkin(9) * t610 - t1268 * t594 + t1274 * t597;
t596 = -pkin(2) * t610 - pkin(3) * t637 - pkin(4) * t665 + pkin(5) * t784 - pkin(12) * t689;
t606 = t1269 * t688 + t1275 * t611;
t1310 = pkin(8) * t606 + t1269 * t581 + t1275 * t596;
t672 = -pkin(12) * t837 - t688;
t656 = pkin(11) * t801 + t1266 * t672 + t1388 * t837;
t660 = -pkin(11) * t800 + t1272 * t672 + t1443 * t837;
t613 = -pkin(3) * t837 + pkin(10) * t746 + t1267 * t660 + t1273 * t656;
t614 = -pkin(10) * t745 - t1267 * t656 + t1273 * t660;
t686 = t1268 * t746 + t1274 * t745;
t599 = -pkin(9) * t686 - t1268 * t613 + t1274 * t614;
t633 = -pkin(2) * t686 - pkin(3) * t745 - pkin(4) * t800 - pkin(5) * t999 - pkin(12) * t839 - t689;
t671 = t1269 * t837 + t1275 * t687;
t1309 = pkin(8) * t671 + t1269 * t599 + t1275 * t633;
t722 = -pkin(5) * t880 + t748;
t770 = -pkin(12) * t880 + t1440;
t663 = -pkin(4) * t880 + pkin(11) * t817 + t1266 * t770 + t1272 * t722;
t667 = -pkin(11) * t816 - t1266 * t722 + t1272 * t770;
t624 = -pkin(3) * t880 + pkin(10) * t755 + t1267 * t667 + t1273 * t663;
t627 = -pkin(10) * t754 - t1267 * t663 + t1273 * t667;
t698 = t1268 * t755 + t1274 * t754;
t602 = -pkin(9) * t698 - t1268 * t624 + t1274 * t627;
t642 = -pkin(2) * t698 - pkin(3) * t754 - pkin(4) * t816 - pkin(5) * t917 - pkin(12) * t881 + t1435;
t681 = t1269 * t880 + t1275 * t699;
t1308 = pkin(8) * t681 + t1269 * t602 + t1275 * t642;
t723 = -pkin(5) * t884 + t749;
t771 = -pkin(12) * t884 + t1435;
t664 = -pkin(4) * t884 + pkin(11) * t820 + t1266 * t771 + t1272 * t723;
t668 = -pkin(11) * t819 - t1266 * t723 + t1272 * t771;
t626 = -pkin(3) * t884 + pkin(10) * t757 + t1267 * t668 + t1273 * t664;
t628 = -pkin(10) * t756 - t1267 * t664 + t1273 * t668;
t700 = t1268 * t757 + t1274 * t756;
t603 = -pkin(9) * t700 - t1268 * t626 + t1274 * t628;
t643 = -pkin(2) * t700 - pkin(3) * t756 - pkin(4) * t819 - pkin(5) * t921 - pkin(12) * t885 - t1440;
t684 = t1269 * t884 + t1275 * t701;
t1307 = pkin(8) * t684 + t1269 * t603 + t1275 * t643;
t736 = -pkin(4) * t960 + pkin(11) * t751;
t645 = -pkin(3) * t960 + pkin(10) * t693 - pkin(11) * t1437 + t1273 * t736;
t647 = -pkin(10) * t692 - pkin(11) * t1432 - t1267 * t736;
t652 = t1268 * t693 + t1274 * t692;
t607 = -pkin(9) * t652 - t1268 * t645 + t1274 * t647;
t622 = -pkin(2) * t652 - pkin(3) * t692 - pkin(4) * t750;
t646 = t1269 * t960 + t1275 * t653;
t1306 = pkin(8) * t646 + t1269 * t607 + t1275 * t622;
t717 = -pkin(4) * t1015 + pkin(11) * t872 + t751;
t721 = -pkin(11) * t870 - t750;
t661 = -pkin(3) * t1015 + pkin(10) * t793 + t1267 * t721 + t1273 * t717;
t662 = -pkin(10) * t791 - t1267 * t717 + t1273 * t721;
t733 = t1268 * t793 + t1274 * t791;
t619 = -pkin(9) * t733 - t1268 * t661 + t1274 * t662;
t694 = -pkin(2) * t733 - pkin(3) * t791 - pkin(4) * t870;
t725 = t1015 * t1269 + t1275 * t735;
t1305 = pkin(8) * t725 + t1269 * t619 + t1275 * t694;
t842 = -pkin(4) * t954 + pkin(11) * t978 - t1433;
t887 = -pkin(11) * t977 + t1438;
t744 = -pkin(3) * t954 + pkin(10) * t903 + t1267 * t887 + t1273 * t842;
t763 = -pkin(10) * t902 - t1267 * t842 + t1273 * t887;
t821 = t1268 * t903 + t1274 * t902;
t675 = -pkin(9) * t821 - t1268 * t744 + t1274 * t763;
t718 = -pkin(2) * t821 - pkin(3) * t902 - pkin(4) * t977 + t808;
t782 = t1269 * t954 + t1275 * t822;
t1304 = pkin(8) * t782 + t1269 * t675 + t1275 * t718;
t847 = pkin(4) * t1462 + pkin(11) * t1001 + t1438;
t901 = -pkin(11) * t1000 + t1433;
t758 = pkin(3) * t1462 + pkin(10) * t923 + t1267 * t901 + t1273 * t847;
t772 = -pkin(10) * t922 - t1267 * t847 + t1273 * t901;
t845 = t1268 * t923 + t1274 * t922;
t685 = -pkin(9) * t845 - t1268 * t758 + t1274 * t772;
t731 = -pkin(2) * t845 - pkin(3) * t922 - pkin(4) * t1000 + t809;
t799 = -t1269 * t1462 + t1275 * t846;
t1303 = pkin(8) * t799 + t1269 * t685 + t1275 * t731;
t777 = t1268 * t859 + t1431;
t843 = -pkin(3) * t1051 + pkin(10) * t859;
t715 = -pkin(9) * t777 - pkin(10) * t1431 - t1268 * t843;
t747 = -pkin(2) * t777 - pkin(3) * t858;
t775 = t1051 * t1269 + t1275 * t778;
t1302 = pkin(8) * t775 + t1269 * t715 + t1275 * t747;
t811 = -pkin(3) * t1090 + pkin(10) * t982 + t859;
t825 = -pkin(10) * t980 - t858;
t905 = t1268 * t982 + t1274 * t980;
t730 = -pkin(9) * t905 - t1268 * t811 + t1274 * t825;
t855 = -pkin(2) * t905 - pkin(3) * t980;
t877 = t1090 * t1269 + t1275 * t907;
t1301 = pkin(8) * t877 + t1269 * t730 + t1275 * t855;
t929 = -pkin(3) * t1052 + pkin(10) * t1038 - t1423;
t968 = t1037 * t1274 + t1038 * t1268;
t974 = -pkin(10) * t1037 + t1424;
t840 = -pkin(9) * t968 - t1268 * t929 + t1274 * t974;
t856 = -pkin(2) * t968 + t1267 * t1280 - t1273 * t1450 + (-t1267 * t1447 - t1273 * t1289 - t1037) * pkin(3);
t928 = t1052 * t1269 + t1275 * t969;
t1300 = pkin(8) * t928 + t1269 * t840 + t1275 * t856;
t938 = -pkin(3) * t1453 + pkin(10) * t1070 + t1424;
t989 = -pkin(10) * t1069 + t1423;
t991 = t1069 * t1274 + t1070 * t1268;
t844 = -pkin(9) * t991 - t1268 * t938 + t1274 * t989;
t860 = -pkin(2) * t991 - pkin(3) * t1069 + t937;
t940 = t1269 * t1453 + t1275 * t992;
t1299 = pkin(8) * t940 + t1269 * t844 + t1275 * t860;
t1108 = t1178 * t1268 + t1456;
t1014 = -pkin(2) * t1108 + t1071;
t1059 = -pkin(9) * t1108 + t1417;
t1062 = t1109 * t1275 - t1150 * t1269;
t1297 = pkin(8) * t1062 + t1014 * t1275 + t1059 * t1269;
t1119 = t1188 * t1274 + t1415;
t1018 = -pkin(2) * t1119 + t1072;
t1065 = -pkin(9) * t1119 + t1416;
t1066 = t1120 * t1275 + t1152 * t1269;
t1296 = pkin(8) * t1066 + t1018 * t1275 + t1065 * t1269;
t1160 = t1199 * t1269 + t1200 * t1275;
t1295 = pkin(8) * t1160 + t1117;
t1031 = t1082 * t1275 - t1164 * t1269;
t1080 = -t1149 * t1268 + t1154 * t1274;
t947 = -pkin(9) * t1080 - t993;
t1292 = pkin(8) * t1031 - t1080 * t1444 + t1269 * t947;
t964 = t1139 * t1269 + t1275 * t994;
t1291 = pkin(8) * t964 + t1366 * t993;
t1246 = t1270 * qJDD(1) + t1276 * t1449;
t1232 = t1391 * t1399;
t1231 = (t1261 - t1262) * t1399;
t1227 = -pkin(7) * t1246 + g(3) * t1276;
t1203 = t1373 * t1391 * t1430;
t1197 = (t1389 + (0.2e1 * qJD(2) + t1429) * t1427) * t1263;
t1193 = t1275 * t1225 - t1261 * t1315;
t1192 = -t1269 * t1226 - t1262 * t1315;
t1190 = t1229 * t1275 - t1409;
t1189 = -t1228 * t1269 + t1406;
t1177 = (t1264 * t1225 + t1427 * t1451) * t1269;
t1176 = (t1264 * t1226 - t1428 * t1451) * t1275;
t1162 = (t1217 * t1268 + t1218 * t1274) * t1249;
t1161 = -t1198 * t1269 + t1201 * t1275;
t1158 = t1201 * t1263 + t1264 * t1321;
t1157 = -t1200 * t1263 + t1264 * t1323;
t1156 = -t1199 * t1263 + t1264 * t1322;
t1155 = -t1201 * t1264 + t1263 * t1321;
t1148 = -t1197 * t1263 + t1264 * t1324;
t1147 = t1197 * t1264 + t1263 * t1324;
t1145 = t1175 * t1268 - t1218 * t1400;
t1143 = -t1217 * t1401 - t1274 * t1283;
t1142 = t1163 * t1275 - t1220 * t1269;
t1138 = -t1231 * t1263 + t1264 * t1326;
t1137 = t1232 * t1263 + t1264 * t1325;
t1136 = -t1232 * t1264 + t1263 * t1325;
t1129 = t1195 * t1268 - t1414;
t1128 = t1196 * t1274 + t1459;
t1099 = -t1270 * t1158 + t1191 * t1276;
t1098 = t1158 * t1276 + t1270 * t1191;
t1096 = t1146 * t1275 + t1379;
t1095 = t1144 * t1275 - t1379;
t1094 = -t1270 * t1148 + t1186 * t1276;
t1093 = t1148 * t1276 + t1270 * t1186;
t1092 = t1204 * t1263 + t1264 * t1327;
t1091 = -t1204 * t1264 + t1263 * t1327;
t1085 = -t1162 * t1263 + t1264 * t1328;
t1084 = -t1270 * t1137 + t1160 * t1276;
t1083 = t1137 * t1276 + t1270 * t1160;
t1079 = t1150 * t1268 + t1152 * t1274;
t1074 = t1131 * t1275 - t1149 * t1269;
t1073 = t1130 * t1275 - t1154 * t1269;
t1067 = -t1412 + (-t1155 * t1263 - t1158 * t1264) * pkin(8);
t1061 = -t1411 + (-t1147 * t1263 - t1148 * t1264) * pkin(8);
t1060 = -pkin(1) * t1155 + t1179 * t1263 + t1264 * t1363;
t1050 = t1081 * t1275 - t1187 * t1269;
t1049 = -pkin(1) * t1147 + t1180 * t1263 + t1264 * t1364;
t1034 = -t1145 * t1263 + t1264 * t1311;
t1033 = -t1143 * t1263 + t1264 * t1312;
t1028 = t1100 * t1274 + t1101 * t1268;
t1027 = pkin(8) * t1117 * t1264 - pkin(1) * t1091;
t1026 = -t1270 * t1092 + t1117 * t1276;
t1025 = t1092 * t1276 + t1270 * t1117;
t1024 = t1275 * t1029 - t1269 * t1298;
t1023 = -pkin(1) * t1136 + t1264 * t1295;
t1022 = -pkin(2) * t1152 + pkin(9) * t1120 + t1417;
t1021 = -t1129 * t1263 + t1264 * t1329;
t1020 = -t1128 * t1263 + t1264 * t1330;
t1019 = (-t1091 * t1263 - t1092 * t1264) * pkin(8);
t1017 = pkin(2) * t1150 + pkin(9) * t1109 - t1416;
t1016 = (-t1136 * t1263 - t1137 * t1264) * pkin(8) - t1327;
t1012 = -t1119 * t1263 + t1264 * t1331;
t1011 = t1119 * t1264 + t1263 * t1331;
t1009 = -t1108 * t1263 + t1264 * t1332;
t1008 = t1108 * t1264 + t1263 * t1332;
t996 = t1076 * t1274 + t1078 * t1268;
t995 = t1075 * t1274 + t1077 * t1268;
t990 = -t1079 * t1263 + t1264 * t1334;
t988 = -t1080 * t1263 + t1264 * t1333;
t987 = t1080 * t1264 + t1263 * t1333;
t971 = t1041 * t1274 + t1042 * t1268;
t970 = t1039 * t1274 + t1040 * t1268;
t965 = -pkin(2) * t1139 + pkin(9) * t994;
t963 = -t1270 * t1012 + t1066 * t1276;
t962 = t1012 * t1276 + t1270 * t1066;
t961 = -t1263 * t1028 + t1264 * t1452;
t953 = -t1270 * t1009 + t1062 * t1276;
t952 = t1009 * t1276 + t1270 * t1062;
t946 = t1275 * t973 - t1381;
t945 = t1275 * t972 + t1381;
t942 = -t1053 * t1269 + t1275 * t998;
t941 = -t1057 * t1269 + t1275 * t997;
t939 = pkin(2) * t1164 + pkin(9) * t1082 + t994;
t934 = t1031 * t1276 - t1270 * t988;
t933 = t1270 * t1031 + t1276 * t988;
t911 = -t1263 * t993 + t1264 * t1338;
t910 = t1263 * t1338 + t1264 * t993;
t904 = t1268 * t981 + t1274 * t979;
t893 = t1268 * t967 + t1274 * t966;
t892 = -t1263 * t996 + t1264 * t1344;
t891 = -t1263 * t995 + t1264 * t1342;
t890 = -t1215 * t1269 + t1275 * t894;
t886 = -t1132 * t1269 + t1275 * t906;
t883 = -t1263 * t991 + t1264 * t1343;
t882 = t1263 * t1343 + t1264 * t991;
t879 = -t1263 * t971 + t1264 * t1316;
t878 = -t1263 * t970 + t1264 * t1317;
t864 = -t1018 * t1269 + t1065 * t1275 + (-t1011 * t1263 - t1012 * t1264) * pkin(8);
t863 = -t1263 * t968 + t1264 * t1345;
t862 = t1263 * t1345 + t1264 * t968;
t861 = -t1014 * t1269 + t1059 * t1275 + (-t1008 * t1263 - t1009 * t1264) * pkin(8);
t857 = -pkin(1) * t1011 - t1022 * t1263 + t1264 * t1296;
t854 = -t1270 * t911 + t1276 * t964;
t853 = t1270 * t964 + t1276 * t911;
t852 = -pkin(1) * t1008 - t1017 * t1263 + t1264 * t1297;
t849 = t1268 * t927 + t1274 * t925;
t848 = t1268 * t926 + t1274 * t924;
t841 = t1080 * t1445 + t1275 * t947 + (-t1263 * t987 - t1264 * t988) * pkin(8);
t834 = -t1270 * t883 + t1276 * t940;
t833 = t1270 * t940 + t1276 * t883;
t830 = -pkin(2) * t1453 + pkin(9) * t992 + t1268 * t989 + t1274 * t938;
t818 = -pkin(2) * t1052 + pkin(9) * t969 + t1268 * t974 + t1274 * t929;
t815 = -t1270 * t863 + t1276 * t928;
t814 = t1270 * t928 + t1276 * t863;
t810 = -t1263 * t904 + t1264 * t1339;
t806 = -t1263 * t893 + t1264 * t1337;
t805 = -t1263 * t905 + t1264 * t1340;
t804 = t1263 * t1340 + t1264 * t905;
t803 = -t1269 * t955 + t1275 * t851;
t802 = -t1269 * t959 + t1275 * t850;
t798 = -pkin(1) * t987 - t1263 * t939 + t1264 * t1292;
t787 = t1268 * t868 + t1274 * t866;
t786 = t1268 * t867 + t1274 * t865;
t781 = t1275 * t789 + t1383;
t780 = t1275 * t788 - t1383;
t779 = (-pkin(9) * t1275 + t1445) * t993 + (-t1263 * t910 - t1264 * t911) * pkin(8);
t776 = -pkin(1) * t910 - t1263 * t965 + t1264 * t1291;
t774 = -t1270 * t805 + t1276 * t877;
t773 = t1270 * t877 + t1276 * t805;
t769 = -t1263 * t849 + t1264 * t1348;
t768 = -t1263 * t848 + t1264 * t1349;
t762 = -t1263 * t845 + t1264 * t1350;
t761 = t1263 * t1350 + t1264 * t845;
t759 = t1268 * t824 + t1274 * t823;
t743 = -t1269 * t975 + t1275 * t760;
t742 = -t1263 * t821 + t1264 * t1351;
t741 = t1263 * t1351 + t1264 * t821;
t738 = t1268 * t797 + t1274 * t795;
t737 = t1268 * t796 + t1274 * t794;
t732 = t1268 * t792 + t1274 * t790;
t729 = -t1064 * t1269 + t1275 * t734;
t728 = -t1263 * t787 + t1264 * t1318;
t727 = -t1263 * t786 + t1264 * t1319;
t726 = -pkin(2) * t1090 + pkin(9) * t907 + t1268 * t825 + t1274 * t811;
t724 = -t1269 * t860 + t1275 * t844 + (-t1263 * t882 - t1264 * t883) * pkin(8);
t720 = -t1269 * t914 + t1275 * t740;
t719 = -t1269 * t912 + t1275 * t739;
t716 = -t1269 * t856 + t1275 * t840 + (-t1263 * t862 - t1264 * t863) * pkin(8);
t714 = -t1263 * t777 + t1264 * t1346;
t713 = t1263 * t1346 + t1264 * t777;
t712 = -t1270 * t762 + t1276 * t799;
t711 = t1270 * t799 + t1276 * t762;
t710 = -pkin(2) * t1051 + pkin(9) * t778 - pkin(10) * t1436 + t1274 * t843;
t709 = -pkin(1) * t882 - t1263 * t830 + t1264 * t1299;
t708 = -t1270 * t742 + t1276 * t782;
t707 = t1270 * t782 + t1276 * t742;
t706 = -pkin(1) * t862 - t1263 * t818 + t1264 * t1300;
t703 = t1268 * t767 + t1274 * t765;
t702 = t1268 * t766 + t1274 * t764;
t696 = t1268 * t753 + t1274 * t752;
t695 = -t1263 * t759 + t1264 * t1352;
t691 = -t1269 * t898 + t1275 * t705;
t690 = -t1269 * t897 + t1275 * t704;
t683 = -t1270 * t714 + t1276 * t775;
t682 = t1270 * t775 + t1276 * t714;
t680 = pkin(2) * t1462 + pkin(9) * t846 + t1268 * t772 + t1274 * t758;
t679 = -t1263 * t732 + t1264 * t1341;
t678 = -t1269 * t836 + t1275 * t697;
t677 = -t1263 * t733 + t1264 * t1347;
t676 = t1263 * t1347 + t1264 * t733;
t674 = -t1263 * t738 + t1264 * t1353;
t673 = -t1263 * t737 + t1264 * t1354;
t670 = -pkin(2) * t954 + pkin(9) * t822 + t1268 * t763 + t1274 * t744;
t669 = -t1269 * t855 + t1275 * t730 + (-t1263 * t804 - t1264 * t805) * pkin(8);
t659 = -pkin(1) * t804 - t1263 * t726 + t1264 * t1301;
t658 = -t1270 * t677 + t1276 * t725;
t657 = t1270 * t725 + t1276 * t677;
t655 = -t1263 * t703 + t1264 * t1355;
t654 = -t1263 * t702 + t1264 * t1356;
t651 = -t1263 * t700 + t1264 * t1357;
t650 = t1263 * t1357 + t1264 * t700;
t649 = -t1263 * t698 + t1264 * t1358;
t648 = t1263 * t1358 + t1264 * t698;
t644 = -t1263 * t696 + t1264 * t1359;
t641 = -t1263 * t686 + t1264 * t1360;
t640 = t1263 * t1360 + t1264 * t686;
t639 = -t1269 * t731 + t1275 * t685 + (-t1263 * t761 - t1264 * t762) * pkin(8);
t636 = -t1269 * t747 + t1275 * t715 + (-t1263 * t713 - t1264 * t714) * pkin(8);
t635 = -t1269 * t718 + t1275 * t675 + (-t1263 * t741 - t1264 * t742) * pkin(8);
t634 = -pkin(1) * t713 - t1263 * t710 + t1264 * t1302;
t632 = -t1270 * t651 + t1276 * t684;
t631 = t1270 * t684 + t1276 * t651;
t630 = -t1270 * t649 + t1276 * t681;
t629 = t1270 * t681 + t1276 * t649;
t623 = -pkin(1) * t761 - t1263 * t680 + t1264 * t1303;
t621 = -t1270 * t641 + t1276 * t671;
t620 = t1270 * t671 + t1276 * t641;
t618 = -pkin(2) * t1015 + pkin(9) * t735 + t1268 * t662 + t1274 * t661;
t617 = -pkin(1) * t741 - t1263 * t670 + t1264 * t1304;
t616 = -t1263 * t652 + t1264 * t1361;
t615 = t1263 * t1361 + t1264 * t652;
t609 = -t1270 * t616 + t1276 * t646;
t608 = t1270 * t646 + t1276 * t616;
t605 = -pkin(2) * t960 + pkin(9) * t653 + t1268 * t647 + t1274 * t645;
t604 = -t1269 * t694 + t1275 * t619 + (-t1263 * t676 - t1264 * t677) * pkin(8);
t601 = -pkin(2) * t884 + pkin(9) * t701 + t1268 * t628 + t1274 * t626;
t600 = -pkin(2) * t880 + pkin(9) * t699 + t1268 * t627 + t1274 * t624;
t598 = -pkin(2) * t837 + pkin(9) * t687 + t1268 * t614 + t1274 * t613;
t595 = -pkin(1) * t676 - t1263 * t618 + t1264 * t1305;
t593 = -t1263 * t610 + t1264 * t1362;
t592 = t1263 * t1362 + t1264 * t610;
t591 = -t1269 * t643 + t1275 * t603 + (-t1263 * t650 - t1264 * t651) * pkin(8);
t590 = -t1269 * t642 + t1275 * t602 + (-t1263 * t648 - t1264 * t649) * pkin(8);
t589 = -t1269 * t633 + t1275 * t599 + (-t1263 * t640 - t1264 * t641) * pkin(8);
t588 = -t1270 * t593 + t1276 * t606;
t587 = t1270 * t606 + t1276 * t593;
t586 = -t1269 * t622 + t1275 * t607 + (-t1263 * t615 - t1264 * t616) * pkin(8);
t585 = -pkin(1) * t650 - t1263 * t601 + t1264 * t1307;
t584 = -pkin(1) * t648 - t1263 * t600 + t1264 * t1308;
t583 = -pkin(1) * t615 - t1263 * t605 + t1264 * t1306;
t582 = -pkin(1) * t640 - t1263 * t598 + t1264 * t1309;
t580 = -pkin(2) * t688 + pkin(9) * t611 + t1268 * t597 + t1274 * t594;
t579 = -t1269 * t596 + t1275 * t581 + (-t1263 * t592 - t1264 * t593) * pkin(8);
t578 = -pkin(1) * t592 - t1263 * t580 + t1264 * t1310;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1246, -t1247, 0, t1208, 0, 0, 0, 0, 0, 0, t1099, t1094, t1084, t1026, 0, 0, 0, 0, 0, 0, t953, t963, t934, t854, 0, 0, 0, 0, 0, 0, t815, t834, t774, t683, 0, 0, 0, 0, 0, 0, t708, t712, t658, t609, 0, 0, 0, 0, 0, 0, t630, t632, t621, t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1247, -t1246, 0, t1207, 0, 0, 0, 0, 0, 0, t1098, t1093, t1083, t1025, 0, 0, 0, 0, 0, 0, t952, t962, t933, t853, 0, 0, 0, 0, 0, 0, t814, t833, t773, t682, 0, 0, 0, 0, 0, 0, t707, t711, t657, t608, 0, 0, 0, 0, 0, 0, t629, t631, t620, t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1155, t1147, t1136, t1091, 0, 0, 0, 0, 0, 0, t1008, t1011, t987, t910, 0, 0, 0, 0, 0, 0, t862, t882, t804, t713, 0, 0, 0, 0, 0, 0, t741, t761, t676, t615, 0, 0, 0, 0, 0, 0, t648, t650, t640, t592; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1247, 0, -t1246, 0, t1365, -t1227, -t1207, -pkin(7) * t1207, -t1270 * t1177 + t1193 * t1276, -t1270 * t1138 + t1161 * t1276, -t1270 * t1156 + t1189 * t1276, -t1270 * t1176 + t1192 * t1276, -t1270 * t1157 + t1190 * t1276, t1276 * t1203 + t1270 * t1320, -pkin(7) * t1098 - t1270 * t1060 + t1067 * t1276, -pkin(7) * t1093 - t1270 * t1049 + t1061 * t1276, -pkin(7) * t1083 + t1016 * t1276 - t1270 * t1023, -pkin(7) * t1025 + t1019 * t1276 - t1270 * t1027, -t1270 * t1034 + t1096 * t1276, t1050 * t1276 - t1270 * t990, -t1270 * t1020 + t1073 * t1276, -t1270 * t1033 + t1095 * t1276, -t1270 * t1021 + t1074 * t1276, -t1270 * t1085 + t1142 * t1276, -pkin(7) * t952 - t1270 * t852 + t1276 * t861, -pkin(7) * t962 - t1270 * t857 + t1276 * t864, -pkin(7) * t933 - t1270 * t798 + t1276 * t841, -pkin(7) * t853 - t1270 * t776 + t1276 * t779, -t1270 * t879 + t1276 * t946, -t1270 * t810 + t1276 * t886, -t1270 * t891 + t1276 * t941, -t1270 * t878 + t1276 * t945, -t1270 * t892 + t1276 * t942, t1024 * t1276 - t1270 * t961, -pkin(7) * t814 - t1270 * t706 + t1276 * t716, -pkin(7) * t833 - t1270 * t709 + t1276 * t724, -pkin(7) * t773 - t1270 * t659 + t1276 * t669, -pkin(7) * t682 - t1270 * t634 + t1276 * t636, -t1270 * t728 + t1276 * t781, -t1270 * t679 + t1276 * t729, -t1270 * t768 + t1276 * t802, -t1270 * t727 + t1276 * t780, -t1270 * t769 + t1276 * t803, -t1270 * t806 + t1276 * t890, -pkin(7) * t707 - t1270 * t617 + t1276 * t635, -pkin(7) * t711 - t1270 * t623 + t1276 * t639, -pkin(7) * t657 - t1270 * t595 + t1276 * t604, -pkin(7) * t608 - t1270 * t583 + t1276 * t586, -t1270 * t674 + t1276 * t720, -t1270 * t644 + t1276 * t678, -t1270 * t654 + t1276 * t690, -t1270 * t673 + t1276 * t719, -t1270 * t655 + t1276 * t691, -t1270 * t695 + t1276 * t743, -pkin(7) * t629 - t1270 * t584 + t1276 * t590, -pkin(7) * t631 - t1270 * t585 + t1276 * t591, -pkin(7) * t620 - t1270 * t582 + t1276 * t589, -pkin(7) * t587 - t1270 * t578 + t1276 * t579; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1246, 0, t1247, 0, t1227, t1365, t1208, pkin(7) * t1208, t1177 * t1276 + t1270 * t1193, t1138 * t1276 + t1270 * t1161, t1156 * t1276 + t1270 * t1189, t1176 * t1276 + t1270 * t1192, t1157 * t1276 + t1270 * t1190, t1270 * t1203 - t1276 * t1320, pkin(7) * t1099 + t1060 * t1276 + t1270 * t1067, pkin(7) * t1094 + t1049 * t1276 + t1270 * t1061, pkin(7) * t1084 + t1270 * t1016 + t1023 * t1276, pkin(7) * t1026 + t1270 * t1019 + t1027 * t1276, t1034 * t1276 + t1270 * t1096, t1270 * t1050 + t1276 * t990, t1020 * t1276 + t1270 * t1073, t1033 * t1276 + t1270 * t1095, t1021 * t1276 + t1270 * t1074, t1085 * t1276 + t1270 * t1142, pkin(7) * t953 + t1270 * t861 + t1276 * t852, pkin(7) * t963 + t1270 * t864 + t1276 * t857, pkin(7) * t934 + t1270 * t841 + t1276 * t798, pkin(7) * t854 + t1270 * t779 + t1276 * t776, t1270 * t946 + t1276 * t879, t1270 * t886 + t1276 * t810, t1270 * t941 + t1276 * t891, t1270 * t945 + t1276 * t878, t1270 * t942 + t1276 * t892, t1270 * t1024 + t1276 * t961, pkin(7) * t815 + t1270 * t716 + t1276 * t706, pkin(7) * t834 + t1270 * t724 + t1276 * t709, pkin(7) * t774 + t1270 * t669 + t1276 * t659, pkin(7) * t683 + t1270 * t636 + t1276 * t634, t1270 * t781 + t1276 * t728, t1270 * t729 + t1276 * t679, t1270 * t802 + t1276 * t768, t1270 * t780 + t1276 * t727, t1270 * t803 + t1276 * t769, t1270 * t890 + t1276 * t806, pkin(7) * t708 + t1270 * t635 + t1276 * t617, pkin(7) * t712 + t1270 * t639 + t1276 * t623, pkin(7) * t658 + t1270 * t604 + t1276 * t595, pkin(7) * t609 + t1270 * t586 + t1276 * t583, t1270 * t720 + t1276 * t674, t1270 * t678 + t1276 * t644, t1270 * t690 + t1276 * t654, t1270 * t719 + t1276 * t673, t1270 * t691 + t1276 * t655, t1270 * t743 + t1276 * t695, pkin(7) * t630 + t1270 * t590 + t1276 * t584, pkin(7) * t632 + t1270 * t591 + t1276 * t585, pkin(7) * t621 + t1270 * t589 + t1276 * t582, pkin(7) * t588 + t1270 * t579 + t1276 * t578; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1251, t1252, 0, 0, t1225 * t1398 + t1335, t1231 * t1264 + t1263 * t1326, t1199 * t1264 + t1263 * t1322, t1226 * t1397 - t1335, t1200 * t1264 + t1263 * t1323, t1264 * t1368, pkin(1) * t1158 - t1179 * t1264 + t1263 * t1363, pkin(1) * t1148 - t1180 * t1264 + t1263 * t1364, pkin(1) * t1137 + t1263 * t1295, pkin(1) * t1092 + t1117 * t1442, t1145 * t1264 + t1263 * t1311, t1079 * t1264 + t1263 * t1334, t1128 * t1264 + t1263 * t1330, t1143 * t1264 + t1263 * t1312, t1129 * t1264 + t1263 * t1329, t1162 * t1264 + t1263 * t1328, pkin(1) * t1009 + t1017 * t1264 + t1263 * t1297, pkin(1) * t1012 + t1022 * t1264 + t1263 * t1296, pkin(1) * t988 + t1263 * t1292 + t1264 * t939, pkin(1) * t911 + t1263 * t1291 + t1264 * t965, t1263 * t1316 + t1264 * t971, t1263 * t1339 + t1264 * t904, t1263 * t1342 + t1264 * t995, t1263 * t1317 + t1264 * t970, t1263 * t1344 + t1264 * t996, t1264 * t1028 + t1263 * t1452, pkin(1) * t863 + t1263 * t1300 + t1264 * t818, pkin(1) * t883 + t1263 * t1299 + t1264 * t830, pkin(1) * t805 + t1263 * t1301 + t1264 * t726, pkin(1) * t714 + t1263 * t1302 + t1264 * t710, t1263 * t1318 + t1264 * t787, t1263 * t1341 + t1264 * t732, t1263 * t1349 + t1264 * t848, t1263 * t1319 + t1264 * t786, t1263 * t1348 + t1264 * t849, t1263 * t1337 + t1264 * t893, pkin(1) * t742 + t1263 * t1304 + t1264 * t670, pkin(1) * t762 + t1263 * t1303 + t1264 * t680, pkin(1) * t677 + t1263 * t1305 + t1264 * t618, pkin(1) * t616 + t1263 * t1306 + t1264 * t605, t1263 * t1353 + t1264 * t738, t1263 * t1359 + t1264 * t696, t1263 * t1356 + t1264 * t702, t1263 * t1354 + t1264 * t737, t1263 * t1355 + t1264 * t703, t1263 * t1352 + t1264 * t759, pkin(1) * t649 + t1263 * t1308 + t1264 * t600, pkin(1) * t651 + t1263 * t1307 + t1264 * t601, pkin(1) * t641 + t1263 * t1309 + t1264 * t598, pkin(1) * t593 + t1263 * t1310 + t1264 * t580;];
tauB_reg  = t1;
