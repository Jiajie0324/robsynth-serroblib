% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR5_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:04:48
% EndTime: 2019-03-10 04:05:20
% DurationCPUTime: 13.28s
% Computational Cost: add. (28741->611), mult. (71967->1046), div. (0->0), fcn. (73831->12), ass. (0->267)
t174 = sin(qJ(6));
t171 = t174 ^ 2;
t178 = cos(qJ(6));
t172 = t178 ^ 2;
t363 = t171 + t172;
t175 = sin(qJ(5));
t352 = cos(qJ(4));
t304 = t352 * pkin(3);
t260 = t304 + pkin(4);
t351 = cos(qJ(5));
t232 = t351 * t260;
t278 = t352 * qJD(4);
t269 = pkin(3) * t278;
t350 = sin(qJ(4));
t277 = t350 * qJD(4);
t95 = -qJD(5) * t232 - t351 * t269 + (qJD(5) * t350 + t277) * t175 * pkin(3);
t276 = t363 * t95;
t259 = t351 * t350;
t371 = (qJD(4) + qJD(5)) * pkin(3) * (t175 * t352 + t259);
t177 = sin(qJ(2));
t180 = cos(qJ(2));
t326 = cos(pkin(6));
t293 = pkin(1) * t326;
t263 = t177 * t293;
t220 = pkin(9) * t326 + t263;
t173 = sin(pkin(6));
t323 = t173 * t180;
t305 = pkin(8) * t323;
t206 = t220 + t305;
t319 = qJD(2) * t173;
t370 = qJD(3) * t206 - (pkin(2) * t177 - pkin(9) * t180) * t319;
t176 = sin(qJ(3));
t179 = cos(qJ(3));
t324 = t173 * t177;
t226 = t176 * t326 + t179 * t324;
t275 = t326 * t179;
t227 = t176 * t324 - t275;
t88 = t352 * t226 - t350 * t227;
t221 = pkin(8) * t324 - t180 * t293;
t215 = t221 * qJD(2);
t294 = -pkin(2) * t180 - pkin(1);
t241 = -pkin(9) * t177 + t294;
t233 = t241 * t173;
t369 = -qJD(3) * t233 + t215;
t354 = -pkin(10) - pkin(9);
t265 = t354 * t352;
t289 = t350 * t179;
t106 = t176 * t265 + t354 * t289;
t272 = t326 * qJD(3);
t317 = qJD(2) * t180;
t285 = t173 * t317;
t368 = t272 + t285;
t367 = qJD(3) * t350 + t277;
t366 = t352 * qJD(3) + t278;
t264 = t354 * t350;
t136 = t176 * t264;
t290 = t352 * t179;
t107 = -t354 * t290 + t136;
t365 = t107 * qJD(4);
t320 = t171 - t172;
t360 = t320 * qJD(6);
t287 = qJD(3) * t324;
t295 = t368 * t176 + t179 * t287;
t142 = t176 * t287;
t358 = -t179 * t368 + t142;
t217 = t88 * qJD(4) + t295 * t352 - t350 * t358;
t313 = qJD(5) * t175;
t205 = t350 * t226 + t352 * t227;
t56 = t205 * qJD(4) + t350 * t295 + t352 * t358;
t194 = t175 * t217 + t88 * t313 + t351 * t56;
t197 = t351 * t205;
t188 = qJD(5) * t197 + t194;
t71 = -t175 * t205 + t351 * t88;
t32 = qJD(5) * t71 - t175 * t56 + t217 * t351;
t132 = t263 + t305;
t121 = qJD(2) * t132;
t81 = pkin(3) * t295 + t121;
t47 = pkin(4) * t217 + t81;
t183 = t32 * pkin(5) + pkin(12) * t188 + t47;
t306 = pkin(4) * t323;
t349 = pkin(8) * t176;
t189 = (-pkin(10) * t326 - t220) * t176 + ((-pkin(3) - t349) * t180 + (t177 * t354 + t294) * t179) * t173;
t76 = t352 * t189;
t83 = t176 * t233 + t179 * t206;
t78 = -pkin(10) * t227 + t83;
t50 = -t350 * t78 + t76;
t41 = -t88 * pkin(11) - t306 + t50;
t75 = t350 * t189;
t51 = t352 * t78 + t75;
t44 = -pkin(11) * t205 + t51;
t42 = t351 * t44;
t343 = t175 * t41 + t42;
t28 = -pkin(12) * t323 + t343;
t311 = qJD(6) * t174;
t318 = qJD(2) * t177;
t156 = t173 * t318;
t70 = t175 * t88 + t197;
t119 = -pkin(2) * t326 + t221;
t94 = pkin(3) * t227 + t119;
t73 = pkin(4) * t205 + t94;
t187 = t70 * pkin(5) - t71 * pkin(12) + t73;
t271 = pkin(3) * t156;
t64 = t369 * t176 - t370 * t179;
t184 = pkin(10) * t358 + t271 + t64;
t63 = t370 * t176 + t369 * t179;
t190 = -pkin(10) * t295 - t63;
t22 = -qJD(4) * t75 + t184 * t352 - t190 * t350 - t278 * t78;
t270 = pkin(4) * t156;
t182 = t56 * pkin(11) + t22 + t270;
t21 = -qJD(4) * t76 - t350 * t184 - t352 * t190 + t277 * t78;
t192 = pkin(11) * t217 + t21;
t280 = qJD(5) * t351;
t8 = -t175 * t182 + t192 * t351 - t280 * t41 + t313 * t44;
t362 = -pkin(12) * t156 - qJD(6) * t187 + t8;
t2 = -t174 * t183 + t362 * t178 + t28 * t311;
t1 = t2 * t178;
t14 = -t174 * t28 + t178 * t187;
t15 = t174 * t187 + t178 * t28;
t253 = t14 * t178 + t15 * t174;
t169 = qJD(6) * t178;
t3 = -t28 * t169 + t362 * t174 + t178 * t183;
t207 = -qJD(6) * t253 - t3 * t174 - t1;
t29 = -t175 * t44 + t351 * t41;
t27 = pkin(5) * t323 - t29;
t191 = -t175 * t192 - t351 * t182;
t9 = -qJD(5) * t343 - t191;
t7 = -pkin(5) * t156 - t9;
t282 = -t7 * t178 + t27 * t311;
t218 = qJD(3) * t227;
t361 = t176 * t218 - t295 * t179;
t357 = t367 * t176 - t179 * t366;
t356 = t179 ^ 2;
t355 = 0.2e1 * t173;
t353 = t27 * t169 + t7 * t174;
t348 = pkin(9) * t173;
t242 = qJD(3) * t264;
t243 = qJD(3) * t265;
t185 = -pkin(11) * t357 + t176 * t242 - t179 * t243 + t365;
t135 = t176 * t352 + t289;
t200 = -t135 * pkin(11) + t106;
t196 = t175 * t200;
t266 = t366 * t176 + t367 * t179;
t79 = -t106 * qJD(4) - t176 * t243 - t179 * t242;
t67 = -pkin(11) * t266 - t79;
t256 = t350 * t176 - t290;
t87 = -pkin(11) * t256 + t107;
t36 = qJD(5) * t196 + t175 * t67 + t185 * t351 + t280 * t87;
t193 = t351 * t200;
t68 = t175 * t87 - t193;
t347 = t36 * t68;
t298 = pkin(4) * t313;
t96 = t298 + t371;
t346 = t68 * t96;
t344 = t68 * t169 + t36 * t174;
t342 = pkin(4) * qJD(5);
t234 = t175 * t256;
t102 = t135 * t351 - t234;
t230 = t351 * t256;
t57 = qJD(5) * t230 + t135 * t313 + t175 * t266 + t351 * t357;
t341 = t102 * t57;
t59 = t174 * t71 + t178 * t323;
t19 = qJD(6) * t59 - t156 * t174 + t178 * t188;
t340 = t174 * t19;
t296 = t174 * t323;
t20 = -qJD(6) * t296 - t156 * t178 + t169 * t71 - t174 * t188;
t339 = t174 * t20;
t338 = t174 * t57;
t58 = -qJD(5) * t234 + t135 * t280 - t175 * t357 + t266 * t351;
t337 = t174 * t58;
t336 = t174 * t59;
t335 = t174 * t95;
t334 = t175 * t68;
t333 = t178 * t19;
t332 = t178 * t20;
t331 = t178 * t57;
t330 = t178 * t58;
t60 = t178 * t71 - t296;
t329 = t178 * t60;
t328 = t178 * t95;
t303 = t350 * pkin(3);
t126 = -t175 * t303 + t232;
t122 = -pkin(5) - t126;
t327 = t122 * t169 + t96 * t174;
t325 = t121 * t176;
t267 = pkin(4) * t280;
t125 = t363 * t267;
t167 = -pkin(4) * t351 - pkin(5);
t322 = t167 * t169 + t174 * t298;
t127 = pkin(3) * t259 + t175 * t260;
t316 = qJD(3) * t176;
t315 = qJD(3) * t179;
t314 = qJD(3) * t180;
t310 = t119 * qJD(3);
t309 = 0.2e1 * t70 * t32;
t308 = -0.2e1 * pkin(2) * qJD(3);
t101 = t135 * t175 + t230;
t307 = 0.2e1 * t101 * t58;
t302 = pkin(5) * t311;
t301 = pkin(5) * t169;
t300 = pkin(3) * t316;
t299 = pkin(9) * t315;
t297 = t174 * t331;
t65 = t68 * t311;
t168 = -t179 * pkin(3) - pkin(2);
t292 = t174 * t351;
t291 = t178 * t351;
t170 = t173 ^ 2;
t288 = t170 * t317;
t286 = t176 * t314;
t284 = t174 * t169;
t283 = t176 * t315;
t274 = -0.2e1 * t298;
t111 = t122 * t311;
t273 = -t178 * t96 + t111;
t268 = pkin(3) * t277;
t100 = t102 ^ 2;
t262 = t100 * t284;
t261 = t177 * t288;
t257 = t326 * t319;
t255 = t101 * t32 + t58 * t70;
t254 = t101 * t95 + t102 * t96;
t252 = t14 * t174 - t15 * t178;
t118 = pkin(4) * t256 + t168;
t198 = -t101 * pkin(5) + t102 * pkin(12) - t118;
t195 = t178 * t198;
t69 = t351 * t87 + t196;
t45 = -t174 * t69 - t195;
t46 = -t174 * t198 + t178 * t69;
t251 = t174 * t46 + t178 * t45;
t250 = t174 * t45 - t178 * t46;
t249 = t174 * t60 + t178 * t59;
t248 = -t64 * t176 - t63 * t179;
t123 = pkin(12) + t127;
t245 = t101 * t123 - t102 * t122;
t166 = t175 * pkin(4) + pkin(12);
t244 = t101 * t166 - t102 * t167;
t139 = t167 * t311;
t240 = -t178 * t298 + t139;
t24 = t169 * t70 + t174 * t32;
t238 = -t178 * t32 + t311 * t70;
t237 = t101 * t311 - t330;
t236 = -t102 * t169 + t338;
t235 = t102 * t311 + t331;
t229 = t363 * t351;
t228 = t176 * t318 - t179 * t314;
t223 = (-t101 * t351 + t102 * t175) * qJD(5);
t92 = pkin(4) * t266 + t300;
t214 = -t122 * t57 - t123 * t58 + t254;
t201 = t58 * pkin(5) + t57 * pkin(12) + t92;
t35 = -qJD(5) * t193 + t175 * t185 + t313 * t87 - t351 * t67;
t12 = qJD(6) * t195 - t174 * t201 + t178 * t35 + t311 * t69;
t13 = -qJD(6) * t46 + t174 * t35 + t178 * t201;
t4 = -qJD(6) * t251 - t12 * t178 - t13 * t174;
t199 = pkin(4) * t223 - t166 * t58 - t167 * t57;
t155 = -0.2e1 * t284;
t154 = 0.2e1 * t284;
t138 = -0.2e1 * t261;
t134 = -0.2e1 * t360;
t82 = -t176 * t220 + (t179 * t241 - t180 * t349) * t173;
t80 = -t365 + (t179 * t265 - t136) * qJD(3);
t49 = t101 * t169 + t337;
t43 = t102 * t360 + t297;
t38 = -0.4e1 * t102 * t284 + t320 * t57;
t17 = t311 * t59 - t332;
t16 = t169 * t60 - t340;
t10 = -qJD(6) * t249 - t333 - t339;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t261, 0.2e1 * (-t177 ^ 2 + t180 ^ 2) * t170 * qJD(2), 0.2e1 * t180 * t257, t138, -0.2e1 * t177 * t257, 0, -0.2e1 * pkin(1) * t170 * t318 - 0.2e1 * t121 * t326, -0.2e1 * pkin(1) * t288 + 0.2e1 * t215 * t326, 0.2e1 * t121 * t324 - 0.2e1 * t132 * t156 - 0.2e1 * t215 * t323 + 0.2e1 * t221 * t285, 0.2e1 * t121 * t221 - 0.2e1 * t132 * t215, -0.2e1 * t226 * t358, -0.2e1 * t226 * t295 + 0.2e1 * t227 * t358, 0.2e1 * t156 * t226 + 0.2e1 * t323 * t358, 0.2e1 * t227 * t295, -0.2e1 * t156 * t227 + 0.2e1 * t295 * t323, t138, -0.2e1 * t121 * t275 + 0.2e1 * t119 * t295 + 0.2e1 * (-t64 * t180 + (qJD(2) * t82 + t325) * t177) * t173, -0.2e1 * t119 * t358 + 0.2e1 * t121 * t226 - 0.2e1 * t156 * t83 - 0.2e1 * t323 * t63, -0.2e1 * t226 * t64 + 0.2e1 * t227 * t63 - 0.2e1 * t295 * t83 + 0.2e1 * t358 * t82, 0.2e1 * t119 * t121 - 0.2e1 * t63 * t83 + 0.2e1 * t64 * t82, -0.2e1 * t88 * t56, 0.2e1 * t205 * t56 - 0.2e1 * t217 * t88 (t180 * t56 + t318 * t88) * t355, 0.2e1 * t205 * t217, -0.2e1 * t156 * t205 + 0.2e1 * t217 * t323, t138, 0.2e1 * t156 * t50 + 0.2e1 * t205 * t81 + 0.2e1 * t217 * t94 - 0.2e1 * t22 * t323, -0.2e1 * t94 * t56 + 0.2e1 * t81 * t88 + 0.2e1 * (-t180 * t21 - t318 * t51) * t173, 0.2e1 * t205 * t21 - 0.2e1 * t217 * t51 - 0.2e1 * t22 * t88 + 0.2e1 * t50 * t56, -0.2e1 * t21 * t51 + 0.2e1 * t22 * t50 + 0.2e1 * t81 * t94, -0.2e1 * t71 * t188, 0.2e1 * t188 * t70 - 0.2e1 * t71 * t32, 0.2e1 * t156 * t71 + 0.2e1 * t188 * t323, t309 (t180 * t32 - t318 * t70) * t355, t138, 0.2e1 * t73 * t32 + 0.2e1 * t47 * t70 + 0.2e1 * (-t180 * t9 + t29 * t318) * t173, -0.2e1 * t156 * t343 - 0.2e1 * t188 * t73 - 0.2e1 * t323 * t8 + 0.2e1 * t47 * t71, 0.2e1 * t188 * t29 - 0.2e1 * t32 * t343 + 0.2e1 * t8 * t70 - 0.2e1 * t9 * t71, 0.2e1 * t29 * t9 - 0.2e1 * t343 * t8 + 0.2e1 * t47 * t73, -0.2e1 * t60 * t19, 0.2e1 * t19 * t59 - 0.2e1 * t20 * t60, -0.2e1 * t19 * t70 + 0.2e1 * t32 * t60, 0.2e1 * t59 * t20, -0.2e1 * t20 * t70 - 0.2e1 * t32 * t59, t309, 0.2e1 * t14 * t32 + 0.2e1 * t20 * t27 + 0.2e1 * t3 * t70 + 0.2e1 * t59 * t7, -0.2e1 * t15 * t32 - 0.2e1 * t19 * t27 + 0.2e1 * t2 * t70 + 0.2e1 * t60 * t7, 0.2e1 * t14 * t19 - 0.2e1 * t15 * t20 + 0.2e1 * t2 * t59 - 0.2e1 * t3 * t60, 0.2e1 * t14 * t3 - 0.2e1 * t15 * t2 + 0.2e1 * t27 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, 0, -t156, 0, -t121, t215, 0, 0, t356 * t287 + (-t142 + (0.2e1 * t272 + t285) * t179) * t176, -t176 * t295 - t226 * t316 + (-t358 - t218) * t179, t228 * t173, t361 (t179 * t318 + t286) * t173, 0, -pkin(2) * t295 - t121 * t179 + t176 * t310 - t228 * t348, pkin(2) * t358 - t286 * t348 + t325 + (-pkin(9) * t156 + t310) * t179, t226 * t299 - t315 * t82 - t316 * t83 + t248 + (-t176 * t358 + t361) * pkin(9), -pkin(2) * t121 + ((-t83 * t176 - t82 * t179) * qJD(3) + t248) * pkin(9), -t56 * t135 - t357 * t88, -t135 * t217 + t205 * t357 + t256 * t56 - t266 * t88 (t135 * t318 + t180 * t357) * t173, t205 * t266 + t217 * t256 (t180 * t266 - t256 * t318) * t173, 0, t106 * t156 + t168 * t217 + t205 * t300 + t256 * t81 + t266 * t94 - t323 * t80, -t107 * t156 + t81 * t135 - t168 * t56 + t300 * t88 - t323 * t79 - t357 * t94, t106 * t56 - t107 * t217 - t22 * t135 + t205 * t79 + t21 * t256 - t266 * t51 + t357 * t50 - t80 * t88, t106 * t22 - t107 * t21 + t168 * t81 + t300 * t94 + t50 * t80 - t51 * t79, -t102 * t188 - t71 * t57, t101 * t188 - t102 * t32 + t57 * t70 - t71 * t58 (t102 * t318 + t180 * t57) * t173, t255 (-t101 * t318 + t180 * t58) * t173, 0, t47 * t101 + t118 * t32 + t73 * t58 + t92 * t70 + (t180 * t36 - t318 * t68) * t173, t47 * t102 - t118 * t188 - t156 * t69 - t323 * t35 - t73 * t57 + t92 * t71, t8 * t101 - t9 * t102 - t188 * t68 + t29 * t57 - t69 * t32 - t343 * t58 + t35 * t70 + t36 * t71, t118 * t47 - t29 * t36 - t343 * t35 - t68 * t9 - t69 * t8 + t73 * t92, -t57 * t329 + (-t311 * t60 - t333) * t102, t249 * t57 + (t340 - t332 + (-t329 + t336) * qJD(6)) * t102, -t101 * t19 - t102 * t238 - t331 * t70 + t58 * t60, -t57 * t336 + (t169 * t59 + t339) * t102, -t101 * t20 - t102 * t24 + t338 * t70 - t58 * t59, t255, t101 * t3 + t102 * t353 + t13 * t70 + t14 * t58 + t20 * t68 - t27 * t338 + t32 * t45 + t36 * t59, t101 * t2 - t282 * t102 + t12 * t70 - t15 * t58 - t19 * t68 - t27 * t331 - t32 * t46 + t36 * t60, t12 * t59 - t13 * t60 + t19 * t45 - t20 * t46 + t253 * t57 + (qJD(6) * t252 + t174 * t2 - t178 * t3) * t102, -t12 * t15 + t13 * t14 - t2 * t46 + t27 * t36 + t3 * t45 + t68 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t283, 0.2e1 * (-t176 ^ 2 + t356) * qJD(3), 0, -0.2e1 * t283, 0, 0, t176 * t308, t179 * t308, 0, 0, -0.2e1 * t135 * t357, -0.2e1 * t135 * t266 + 0.2e1 * t256 * t357, 0, 0.2e1 * t256 * t266, 0, 0, 0.2e1 * t168 * t266 + 0.2e1 * t256 * t300, 0.2e1 * t135 * t300 - 0.2e1 * t168 * t357, 0.2e1 * t106 * t357 - 0.2e1 * t107 * t266 - 0.2e1 * t80 * t135 + 0.2e1 * t256 * t79, 0.2e1 * t106 * t80 - 0.2e1 * t107 * t79 + 0.2e1 * t168 * t300, -0.2e1 * t341, 0.2e1 * t101 * t57 - 0.2e1 * t102 * t58, 0, t307, 0, 0, 0.2e1 * t101 * t92 + 0.2e1 * t118 * t58, 0.2e1 * t102 * t92 - 0.2e1 * t118 * t57, 0.2e1 * t101 * t35 + 0.2e1 * t102 * t36 - 0.2e1 * t57 * t68 - 0.2e1 * t58 * t69, 0.2e1 * t118 * t92 - 0.2e1 * t35 * t69 + 0.2e1 * t347, -0.2e1 * t172 * t341 - 0.2e1 * t262, 0.2e1 * t100 * t360 + 0.4e1 * t102 * t297, -0.2e1 * t101 * t235 + 0.2e1 * t102 * t330, -0.2e1 * t171 * t341 + 0.2e1 * t262, 0.2e1 * t101 * t236 - 0.2e1 * t102 * t337, t307, 0.2e1 * t101 * t13 + 0.2e1 * t102 * t344 - 0.2e1 * t338 * t68 + 0.2e1 * t45 * t58, -0.2e1 * t68 * t331 + 0.2e1 * t101 * t12 - 0.2e1 * t46 * t58 + 0.2e1 * (t36 * t178 - t65) * t102, 0.2e1 * t251 * t57 + 0.2e1 * (qJD(6) * t250 + t12 * t174 - t13 * t178) * t102, -0.2e1 * t12 * t46 + 0.2e1 * t13 * t45 + 0.2e1 * t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, 0, -t295, t156, t64, t63, 0, 0, 0, 0, -t56, 0, -t217, t156, t268 * t323 + t271 * t352 + t22 (t180 * t278 - t318 * t350) * t173 * pkin(3) + t21 (-t350 * t217 + t56 * t352 + (-t205 * t352 + t350 * t88) * qJD(4)) * pkin(3) (-t350 * t21 + t352 * t22 + (-t350 * t50 + t352 * t51) * qJD(4)) * pkin(3), 0, 0, -t188, 0, -t32, t156 (t126 * t318 + t180 * t96) * t173 + t9, -t127 * t156 - t323 * t95 + t8, t126 * t188 - t127 * t32 + t95 * t70 + t96 * t71, t126 * t9 - t127 * t8 - t29 * t96 - t343 * t95, t16, t10, t24, t17, -t238, 0, t122 * t20 - t123 * t24 + t335 * t70 + t59 * t96 + t282, -t122 * t19 + t123 * t238 + t328 * t70 + t60 * t96 + t353, -t1 + (-t123 * t20 + t59 * t95 + (t123 * t60 - t14) * qJD(6)) * t178 + (-t123 * t19 - t60 * t95 - t3 + (t123 * t59 - t15) * qJD(6)) * t174, t122 * t7 + t123 * t207 + t252 * t95 + t27 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, 0, -t316, 0, -t299, pkin(9) * t316, 0, 0, 0, 0, -t357, 0, -t266, 0, t80, t79, t135 * t268 - t256 * t269 - t266 * t303 + t304 * t357 (-t350 * t79 + t352 * t80 + (-t106 * t350 + t107 * t352) * qJD(4)) * pkin(3), 0, 0, -t57, 0, -t58, 0, -t36, t35, t126 * t57 - t127 * t58 + t254, -t126 * t36 - t127 * t35 - t69 * t95 + t346, -t43, t38, t49, t43, -t237, 0, t65 + (-qJD(6) * t245 - t36) * t178 + t214 * t174, t178 * t214 + t245 * t311 + t344, t4, t122 * t36 + t123 * t4 + t250 * t95 + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t268, -0.2e1 * t269, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t96, 0.2e1 * t95, 0, -0.2e1 * t126 * t96 - 0.2e1 * t127 * t95, t154, t134, 0, t155, 0, 0, 0.2e1 * t273, 0.2e1 * t327, -0.2e1 * t276, 0.2e1 * t122 * t96 - 0.2e1 * t123 * t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t217, t156, t22, t21, 0, 0, 0, 0, -t188, 0, -t32, t156, t351 * t270 + (-t42 + (-t41 + t306) * t175) * qJD(5) - t191, -t175 * t270 + t267 * t323 + t8 (-t175 * t32 + t351 * t194 + (t175 * t71 + (-t70 + t197) * t351) * qJD(5)) * pkin(4) (t351 * t9 - t175 * t8 + (-t175 * t29 + t343 * t351) * qJD(5)) * pkin(4), t16, t10, t24, t17, -t238, 0, t167 * t20 - t24 * t166 + (t175 * t59 - t292 * t70) * t342 + t282, -t167 * t19 + t238 * t166 + (t175 * t60 - t291 * t70) * t342 + t353, -t1 + (-t59 * t267 - t166 * t20 + (t166 * t60 - t14) * qJD(6)) * t178 + (t60 * t267 - t166 * t19 - t3 + (t166 * t59 - t15) * qJD(6)) * t174, t7 * t167 + (-t14 * t292 + t15 * t291 + t175 * t27) * t342 + t207 * t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, 0, -t266, 0, t80, t79, 0, 0, 0, 0, -t57, 0, -t58, 0, -t36, t35 (-t175 * t58 + t351 * t57 + t223) * pkin(4) (-t351 * t36 - t175 * t35 + (t351 * t69 + t334) * qJD(5)) * pkin(4), -t43, t38, t49, t43, -t237, 0, t65 + (-qJD(6) * t244 - t36) * t178 + t199 * t174, t178 * t199 + t244 * t311 + t344, t4, t36 * t167 + (t291 * t46 - t292 * t45 + t334) * t342 + t4 * t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, -t269, 0, 0, 0, 0, 0, 0, 0, 0, t274 - t371, -t267 + t95, 0 (-t351 * t96 - t175 * t95 + (-t126 * t175 + t127 * t351) * qJD(5)) * pkin(4), t154, t134, 0, t155, 0, 0, t111 + t139 + (-t96 - t298) * t178, t322 + t327, t125 - t276, t96 * t167 - t166 * t276 + (t122 * t175 + t123 * t229) * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, -0.2e1 * t267, 0, 0, t154, t134, 0, t155, 0, 0, 0.2e1 * t240, 0.2e1 * t322, 0.2e1 * t125, 0.2e1 * (t166 * t229 + t167 * t175) * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, 0, -t32, t156, t9, t8, 0, 0, t16, t10, t24, t17, -t238, 0, -pkin(5) * t20 - pkin(12) * t24 + t282, pkin(5) * t19 + pkin(12) * t238 + t353 (-t340 - t332 + (t329 + t336) * qJD(6)) * pkin(12) + t207, -pkin(5) * t7 + pkin(12) * t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, -t58, 0, -t36, t35, 0, 0, -t43, t38, t49, t43, -t237, 0, t65 + (pkin(5) * t57 - pkin(12) * t58) * t174 + (-t36 + (-pkin(5) * t102 - pkin(12) * t101) * qJD(6)) * t178, pkin(5) * t235 + pkin(12) * t237 + t344, t4, -pkin(5) * t36 + pkin(12) * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t95, 0, 0, t154, t134, 0, t155, 0, 0, t273 - t302, -t301 + t327, -t276, -pkin(5) * t96 - pkin(12) * t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t267, 0, 0, t154, t134, 0, t155, 0, 0, t240 - t302, -t301 + t322, t125 (-pkin(5) * t175 + pkin(12) * t229) * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t134, 0, t155, 0, 0, -0.2e1 * t302, -0.2e1 * t301, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, 0, -t20, t32, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, t236, t58, t13, t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, 0, -t311, 0, -t123 * t169 + t335, t123 * t311 + t328, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, 0, -t311, 0, -t166 * t169 - t174 * t267, t166 * t311 - t178 * t267, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, 0, -t311, 0, -pkin(12) * t169, pkin(12) * t311, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
