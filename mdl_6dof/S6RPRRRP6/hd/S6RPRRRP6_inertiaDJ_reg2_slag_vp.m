% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP6_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:16:45
% EndTime: 2019-03-09 06:16:56
% DurationCPUTime: 4.13s
% Computational Cost: add. (6660->303), mult. (15030->508), div. (0->0), fcn. (15032->8), ass. (0->149)
t122 = sin(qJ(4));
t117 = t122 ^ 2;
t123 = cos(qJ(4));
t118 = t123 ^ 2;
t206 = (t117 - t118) * qJD(4);
t119 = sin(pkin(10));
t120 = cos(pkin(10));
t201 = cos(qJ(3));
t196 = pkin(7) + qJ(2);
t199 = sin(qJ(3));
t215 = t196 * t199;
t218 = -t201 * qJD(2) + qJD(3) * t215;
t214 = t196 * t201;
t219 = t199 * qJD(2) + qJD(3) * t214;
t128 = -t119 * t219 - t120 * t218;
t100 = t201 * t119 + t199 * t120;
t111 = -t120 * pkin(2) - pkin(1);
t99 = t199 * t119 - t201 * t120;
t145 = t99 * pkin(3) - pkin(8) * t100 + t111;
t221 = -qJD(4) * t145 - t128;
t132 = -t119 * t215 + t120 * t214;
t142 = t99 * qJD(3);
t91 = t100 * qJD(3);
t220 = -t91 * pkin(3) - pkin(8) * t142 + qJD(4) * t132;
t136 = t122 * t142;
t181 = qJD(4) * t123;
t210 = t100 * t181 - t136;
t217 = -0.4e1 * t100;
t121 = sin(qJ(5));
t200 = cos(qJ(5));
t163 = qJD(5) * t200;
t171 = t200 * t123;
t209 = qJD(4) * t171 + t123 * t163;
t135 = t123 * t142;
t182 = qJD(4) * t122;
t211 = -t100 * t182 - t135;
t180 = qJD(5) * t121;
t212 = -t100 * t180 - t200 * t142;
t29 = t209 * t100 + t211 * t121 + t212 * t122;
t172 = t200 * t122;
t102 = t121 * t123 + t172;
t63 = t102 * t100;
t216 = t29 * qJ(6) + t63 * qJD(6);
t185 = t121 * t122;
t203 = -pkin(9) - pkin(8);
t213 = t203 * t185;
t208 = t171 - t185;
t146 = t122 * t91 + t99 * t181;
t207 = -t123 * t91 + t99 * t182;
t205 = qJD(4) + qJD(5);
t204 = 0.2e1 * t91;
t74 = t205 * t102;
t202 = t74 * pkin(5);
t198 = t121 * pkin(4);
t51 = -t119 * t218 + t120 * t219;
t75 = t119 * t214 + t120 * t215;
t197 = t75 * t51;
t159 = pkin(4) * t163;
t195 = -t63 * t159 - t29 * t198;
t186 = t100 * t123;
t44 = -t122 * t132 + t123 * t145;
t127 = t99 * pkin(4) - pkin(9) * t186 + t44;
t31 = t121 * t127;
t187 = t100 * t122;
t45 = t122 * t145 + t123 * t132;
t38 = -pkin(9) * t187 + t45;
t19 = t200 * t38 + t31;
t73 = t205 * t185 - t209;
t194 = -t102 * t29 + t73 * t63;
t193 = t159 * t208 - t74 * t198;
t192 = t102 * t159 - t73 * t198;
t191 = t208 * t74;
t190 = t102 * t73;
t106 = t203 * t123;
t77 = -t200 * t106 + t213;
t72 = t99 * t204;
t179 = -0.2e1 * pkin(3) * qJD(4);
t178 = t200 * pkin(4);
t177 = pkin(4) * t182;
t176 = pkin(4) * t180;
t64 = t208 * t100;
t173 = t64 * t180;
t114 = -pkin(4) * t123 - pkin(3);
t167 = t208 * t180;
t166 = t102 * t180;
t165 = t121 * t181;
t164 = t122 * t181;
t32 = t200 * t127;
t18 = -t121 * t38 + t32;
t157 = t203 * t200;
t104 = t122 * t157;
t76 = t106 * t121 + t104;
t160 = t99 * t176;
t96 = t100 ^ 2;
t158 = t96 * t164;
t153 = 0.2e1 * (t119 ^ 2 + t120 ^ 2) * qJD(2);
t28 = -t121 * t136 - t212 * t123 + (t172 * t205 + t165) * t100;
t148 = t208 * t28 + t64 * t74;
t41 = t102 * t91 - t73 * t99;
t147 = qJD(4) * t157;
t24 = t221 * t122 - t220 * t123;
t124 = t91 * pkin(4) - t211 * pkin(9) + t24;
t23 = t220 * t122 + t221 * t123;
t126 = -t210 * pkin(9) - t23;
t3 = -qJD(5) * t32 - t121 * t124 - t200 * t126 + t38 * t180;
t47 = -qJD(5) * t104 - t106 * t180 - t122 * t147 - t203 * t165;
t52 = pkin(4) * t187 + t75;
t144 = -t99 * t159 - t91 * t198 + t3;
t141 = -0.2e1 * t142;
t138 = t117 * t142;
t137 = t118 * t142;
t134 = t122 * t135;
t131 = -t24 * t122 - t123 * t23 + (-t122 * t45 - t123 * t44) * qJD(4);
t48 = t106 * t163 + t123 * t147 - t205 * t213;
t40 = pkin(4) * t210 + t51;
t4 = -qJD(5) * t31 - t121 * t126 + t200 * t124 - t38 * t163;
t125 = t28 * qJ(6) - t64 * qJD(6) + t4;
t89 = t91 * pkin(5);
t1 = t89 + t125;
t113 = t178 + pkin(5);
t110 = -0.2e1 * t159;
t109 = -0.2e1 * t176;
t83 = -pkin(5) * t208 + t114;
t67 = t177 + t202;
t61 = qJ(6) * t208 + t77;
t60 = -qJ(6) * t102 + t76;
t55 = -0.2e1 * t190;
t54 = -0.2e1 * t191;
t49 = t206 * t100 + t134;
t43 = t208 * t91 - t74 * t99;
t39 = t63 * pkin(5) + t52;
t37 = -0.2e1 * t190 - 0.2e1 * t191;
t36 = -0.2e1 * t102 * t74 - 0.2e1 * t208 * t73;
t34 = t73 * qJ(6) - t102 * qJD(6) + t48;
t33 = t74 * qJ(6) - qJD(6) * t208 + t47;
t22 = -0.2e1 * t64 * t28;
t21 = 0.2e1 * t63 * t29;
t17 = -0.2e1 * t29 * t99 - 0.2e1 * t63 * t91;
t16 = -0.2e1 * t28 * t99 + 0.2e1 * t64 * t91;
t14 = -t208 * t29 + t63 * t74;
t13 = -t102 * t28 - t64 * t73;
t12 = t29 * pkin(5) + t40;
t9 = -qJ(6) * t63 + t19;
t8 = pkin(5) * t99 - qJ(6) * t64 + t18;
t7 = 0.2e1 * t28 * t63 - 0.2e1 * t29 * t64;
t6 = t148 + t194;
t5 = -t148 + t194;
t2 = t3 + t216;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, qJ(2) * t153, t100 * t141, -0.2e1 * t100 * t91 + 0.2e1 * t99 * t142, 0, t72, 0, 0, t111 * t204, t111 * t141, 0.2e1 * t51 * t100 - 0.2e1 * t132 * t91 + 0.2e1 * (-qJD(3) * t75 - t128) * t99, 0.2e1 * t132 * t128 + 0.2e1 * t197, -0.2e1 * t100 * t137 - 0.2e1 * t158, -t134 * t217 + 0.2e1 * t206 * t96, 0.2e1 * t91 * t186 + 0.2e1 * t211 * t99, -0.2e1 * t100 * t138 + 0.2e1 * t158, -0.2e1 * t91 * t187 - 0.2e1 * t210 * t99, t72, 0.2e1 * t51 * t187 + 0.2e1 * t210 * t75 + 0.2e1 * t24 * t99 + 0.2e1 * t44 * t91, 0.2e1 * t51 * t186 + 0.2e1 * t211 * t75 + 0.2e1 * t23 * t99 - 0.2e1 * t45 * t91, -0.2e1 * t24 * t186 + 0.2e1 * t23 * t187 - 0.2e1 * t210 * t45 - 0.2e1 * t211 * t44, -0.2e1 * t23 * t45 + 0.2e1 * t24 * t44 + 0.2e1 * t197, t22, t7, t16, t21, t17, t72, 0.2e1 * t18 * t91 + 0.2e1 * t29 * t52 + 0.2e1 * t4 * t99 + 0.2e1 * t40 * t63, -0.2e1 * t19 * t91 - 0.2e1 * t28 * t52 + 0.2e1 * t3 * t99 + 0.2e1 * t40 * t64, 0.2e1 * t18 * t28 - 0.2e1 * t19 * t29 + 0.2e1 * t3 * t63 - 0.2e1 * t4 * t64, 0.2e1 * t18 * t4 - 0.2e1 * t19 * t3 + 0.2e1 * t40 * t52, t22, t7, t16, t21, t17, t72, 0.2e1 * t1 * t99 + 0.2e1 * t12 * t63 + 0.2e1 * t29 * t39 + 0.2e1 * t8 * t91, 0.2e1 * t12 * t64 + 0.2e1 * t2 * t99 - 0.2e1 * t28 * t39 - 0.2e1 * t9 * t91, -0.2e1 * t1 * t64 + 0.2e1 * t2 * t63 + 0.2e1 * t28 * t8 - 0.2e1 * t29 * t9, 0.2e1 * t1 * t8 + 0.2e1 * t12 * t39 - 0.2e1 * t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, -t142, 0, 0, 0, 0, 0, 0, 0, 0, -t207, -t146 (t117 + t118) * t142, -t23 * t122 + t24 * t123 + (-t122 * t44 + t123 * t45) * qJD(4), 0, 0, 0, 0, 0, 0, t43, -t41, t6, -t102 * t3 - t18 * t74 - t19 * t73 + t208 * t4, 0, 0, 0, 0, 0, 0, t43, -t41, t6, t1 * t208 - t102 * t2 - t73 * t9 - t74 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, 0, -t91, 0, -t51, -t128, 0, 0, -t49, t164 * t217 - t137 + t138, t146, t49, -t207, 0, -t210 * pkin(3) - t146 * pkin(8) - t51 * t123 + t75 * t182, -t211 * pkin(3) + t207 * pkin(8) + t51 * t122 + t75 * t181, t131, -t51 * pkin(3) + pkin(8) * t131, t13, t5, t41, t14, t43, 0, t114 * t29 + t63 * t177 - t208 * t40 + t48 * t99 + t52 * t74 + t76 * t91, t102 * t40 - t114 * t28 + t64 * t177 + t47 * t99 - t52 * t73 - t77 * t91, -t102 * t4 + t18 * t73 - t19 * t74 - t208 * t3 + t28 * t76 - t29 * t77 + t47 * t63 - t48 * t64, t114 * t40 + t52 * t177 + t18 * t48 - t19 * t47 - t3 * t77 + t4 * t76, t13, t5, t41, t14, t43, 0, -t12 * t208 + t29 * t83 + t34 * t99 + t39 * t74 + t60 * t91 + t63 * t67, t102 * t12 - t28 * t83 + t33 * t99 - t39 * t73 - t61 * t91 + t64 * t67, -t1 * t102 - t2 * t208 + t28 * t60 - t29 * t61 + t33 * t63 - t34 * t64 + t73 * t8 - t74 * t9, t1 * t60 + t12 * t83 - t2 * t61 - t33 * t9 + t34 * t8 + t39 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102 * t47 + t208 * t48 - t73 * t77 - t74 * t76, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102 * t33 + t208 * t34 - t60 * t74 - t61 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t164, -0.2e1 * t206, 0, -0.2e1 * t164, 0, 0, t122 * t179, t123 * t179, 0, 0, t55, t36, 0, t54, 0, 0, 0.2e1 * t114 * t74 - 0.2e1 * t177 * t208, 0.2e1 * t102 * t177 - 0.2e1 * t114 * t73, -0.2e1 * t102 * t48 - 0.2e1 * t208 * t47 + 0.2e1 * t73 * t76 - 0.2e1 * t74 * t77, 0.2e1 * t114 * t177 - 0.2e1 * t47 * t77 + 0.2e1 * t48 * t76, t55, t36, 0, t54, 0, 0, -0.2e1 * t208 * t67 + 0.2e1 * t74 * t83, 0.2e1 * t102 * t67 - 0.2e1 * t73 * t83, -0.2e1 * t102 * t34 - 0.2e1 * t208 * t33 + 0.2e1 * t60 * t73 - 0.2e1 * t61 * t74, -0.2e1 * t33 * t61 + 0.2e1 * t34 * t60 + 0.2e1 * t67 * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, 0, -t210, t91, t24, t23, 0, 0, 0, 0, -t28, 0, -t29, t91, t91 * t178 - t160 + t4, t144 (t200 * t28 + t173) * pkin(4) + t195 (t200 * t4 - t121 * t3 + (-t121 * t18 + t200 * t19) * qJD(5)) * pkin(4), 0, 0, -t28, 0, -t29, t91, t113 * t91 + t1 - t160, t144 + t216, pkin(4) * t173 + t113 * t28 + t195, t1 * t113 + (-t121 * t2 + (-t121 * t8 + t200 * t9) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t181, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t73, 0 (-t200 * t74 - t167) * pkin(4) + t192, 0, 0, 0, 0, 0, 0, -t74, t73, 0, -pkin(4) * t167 - t113 * t74 + t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, 0, -t182, 0, -pkin(8) * t181, pkin(8) * t182, 0, 0, 0, 0, -t73, 0, -t74, 0, t48, t47 (t200 * t73 + t166) * pkin(4) + t193 (t200 * t48 - t121 * t47 + (-t121 * t76 + t200 * t77) * qJD(5)) * pkin(4), 0, 0, -t73, 0, -t74, 0, t34, t33, pkin(4) * t166 + t113 * t73 + t193, t34 * t113 + (-t121 * t33 + (-t121 * t60 + t200 * t61) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t110, 0, 0, 0, 0, 0, 0, 0, 0, t109, t110, 0, 0.2e1 * (t178 - t113) * t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, 0, -t29, t91, t4, t3, 0, 0, 0, 0, -t28, 0, -t29, t91, 0.2e1 * t89 + t125, t2, t28 * pkin(5), t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t73, 0, 0, 0, 0, 0, 0, 0, 0, -t74, t73, 0, -t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, 0, -t74, 0, t48, t47, 0, 0, 0, 0, -t73, 0, -t74, 0, t34, t33, t73 * pkin(5), t34 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t159, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t159, 0, -pkin(5) * t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, -t28, 0, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t73, 0, t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
