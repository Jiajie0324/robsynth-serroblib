% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:16:50
% EndTime: 2019-03-09 06:17:03
% DurationCPUTime: 5.65s
% Computational Cost: add. (13582->493), mult. (34874->622), div. (0->0), fcn. (26901->8), ass. (0->234)
t242 = sin(qJ(4));
t344 = -pkin(9) - pkin(8);
t285 = qJD(4) * t344;
t240 = cos(pkin(10));
t343 = cos(qJ(3));
t279 = qJD(1) * t343;
t239 = sin(pkin(10));
t243 = sin(qJ(3));
t303 = t243 * t239;
t197 = qJD(1) * t303 - t240 * t279;
t313 = t197 * t242;
t302 = t243 * t240;
t209 = t343 * t239 + t302;
t199 = t209 * qJD(1);
t152 = t199 * pkin(3) + t197 * pkin(8);
t244 = cos(qJ(4));
t339 = pkin(7) + qJ(2);
t220 = t339 * t239;
t210 = qJD(1) * t220;
t221 = t339 * t240;
t211 = qJD(1) * t221;
t354 = -t343 * t210 - t243 * t211;
t99 = t242 * t152 + t244 * t354;
t374 = -pkin(9) * t313 + t242 * t285 - t99;
t98 = t244 * t152 - t242 * t354;
t373 = -t199 * pkin(4) - t98 + (-pkin(9) * t197 + t285) * t244;
t170 = t244 * qJD(3) - t242 * t199;
t171 = t242 * qJD(3) + t244 * t199;
t241 = sin(qJ(5));
t342 = cos(qJ(5));
t110 = -t342 * t170 + t241 * t171;
t107 = t110 ^ 2;
t255 = t241 * t170 + t342 * t171;
t346 = t255 ^ 2;
t372 = -t107 + t346;
t295 = qJD(4) * t242;
t371 = t295 + t313;
t293 = qJD(5) * t241;
t370 = pkin(4) * t293;
t369 = t342 * pkin(4);
t193 = qJD(4) + t197;
t188 = qJD(5) + t193;
t326 = t110 * t188;
t256 = t343 * t240 - t303;
t351 = t256 * qJD(1);
t248 = qJD(3) * t351;
t362 = qJD(3) * qJD(4) + t248;
t123 = t199 * t295 - t244 * t362;
t276 = t342 * qJD(5);
t294 = qJD(4) * t244;
t286 = t199 * t294 + t242 * t362;
t61 = t342 * t123 - t170 * t276 + t171 * t293 + t241 * t286;
t368 = -t61 + t326;
t367 = t110 * qJ(6);
t366 = t110 * t255;
t314 = t193 * t242;
t365 = t171 * t314;
t283 = t342 * t242;
t213 = t241 * t244 + t283;
t350 = qJD(4) + qJD(5);
t161 = t350 * t213;
t364 = t213 * t197 + t161;
t282 = t342 * t244;
t307 = t241 * t242;
t212 = -t282 + t307;
t352 = t342 * qJD(4) + t276;
t298 = t212 * t197 - t244 * t352 + t307 * t350;
t323 = t255 * t188;
t62 = qJD(5) * t255 - t241 * t123 + t342 * t286;
t363 = -t62 + t323;
t278 = qJD(3) * t343;
t296 = qJD(3) * t243;
t201 = t239 * t296 - t240 * t278;
t305 = t242 * t201;
t254 = t209 * t294 - t305;
t150 = -qJD(3) * pkin(3) - t354;
t103 = -t170 * pkin(4) + t150;
t202 = t209 * qJD(3);
t189 = qJD(1) * t202;
t340 = t189 * pkin(4);
t249 = t256 * qJD(2);
t115 = qJD(1) * t249 + qJD(3) * t354;
t135 = t189 * pkin(3) - pkin(8) * t248;
t231 = -t240 * pkin(2) - pkin(1);
t219 = t231 * qJD(1) + qJD(2);
t127 = t197 * pkin(3) - t199 * pkin(8) + t219;
t156 = -t243 * t210 + t343 * t211;
t151 = qJD(3) * pkin(8) + t156;
t92 = t242 * t127 + t244 * t151;
t57 = -qJD(4) * t92 - t242 * t115 + t244 * t135;
t27 = t123 * pkin(9) + t340 + t57;
t56 = t244 * t115 + t127 * t294 + t242 * t135 - t151 * t295;
t33 = -t286 * pkin(9) + t56;
t91 = t244 * t127 - t242 * t151;
t77 = -t171 * pkin(9) + t91;
t67 = t193 * pkin(4) + t77;
t78 = t170 * pkin(9) + t92;
t274 = -t241 * t27 - t67 * t276 + t78 * t293 - t342 * t33;
t361 = t103 * t110 + t274;
t273 = t110 * pkin(5) + qJD(6);
t70 = t103 + t273;
t360 = t70 * t255;
t222 = t344 * t242;
t223 = t344 * t244;
t330 = t222 * t276 + t223 * t293 + t373 * t241 + t342 * t374;
t169 = t241 * t222 - t342 * t223;
t329 = -qJD(5) * t169 - t241 * t374 + t373 * t342;
t261 = -t91 * t193 + t56;
t359 = t92 * t193 + t57;
t358 = qJ(6) * t255;
t265 = pkin(4) * t371 - t156;
t154 = -pkin(3) * t256 - t209 * pkin(8) + t231;
t167 = -t243 * t220 + t343 * t221;
t159 = t244 * t167;
t101 = t242 * t154 + t159;
t267 = pkin(4) * t276;
t356 = -t188 * t267 - t241 * t340;
t182 = t189 * pkin(5);
t355 = -t255 * qJD(6) + t182;
t353 = -t343 * t220 - t243 * t221;
t275 = -t241 * t33 + t342 * t27;
t74 = t342 * t78;
t30 = t241 * t67 + t74;
t7 = -qJD(5) * t30 + t275;
t349 = -t103 * t255 + t7;
t348 = -t298 * t188 + t213 * t189;
t347 = -t212 * t61 + t255 * t364;
t345 = t199 ^ 2;
t341 = t171 * pkin(4);
t72 = t241 * t78;
t29 = t342 * t67 - t72;
t19 = t29 - t358;
t18 = t188 * pkin(5) + t19;
t338 = t18 - t19;
t337 = t199 * pkin(5) - qJ(6) * t298 + t213 * qJD(6) - t329;
t336 = qJ(6) * t364 + t212 * qJD(6) - t330;
t40 = t342 * t77 - t72;
t100 = t244 * t154 - t242 * t167;
t309 = t209 * t244;
t86 = -pkin(4) * t256 - pkin(9) * t309 + t100;
t310 = t209 * t242;
t93 = -pkin(9) * t310 + t101;
t55 = t241 * t86 + t342 * t93;
t334 = t61 * qJ(6);
t331 = -t241 * pkin(4) * t62 - t110 * t267;
t328 = pkin(5) * t364 + t265;
t322 = t255 * t199;
t290 = qJD(1) * qJD(2);
t116 = t239 * qJD(2) * t279 - t210 * t296 + t211 * t278 + t290 * t302;
t321 = t116 * t353;
t320 = t123 * t242;
t319 = t170 * t197;
t318 = t170 * t199;
t317 = t171 * t170;
t316 = t171 * t199;
t315 = t188 * t199;
t157 = t189 * t256;
t312 = t199 * t110;
t311 = t199 * t197;
t306 = t242 * t189;
t176 = t244 * t189;
t301 = t244 * t201;
t119 = t242 * t286;
t291 = t170 * qJD(4);
t300 = t244 * t291 - t119;
t297 = t239 ^ 2 + t240 ^ 2;
t287 = t209 * t307;
t236 = -t244 * pkin(4) - pkin(3);
t281 = t209 * t295;
t39 = -t241 * t77 - t74;
t54 = -t241 * t93 + t342 * t86;
t272 = t297 * qJD(1) ^ 2;
t128 = qJD(3) * t353 + t249;
t153 = t202 * pkin(3) + t201 * pkin(8);
t270 = -t242 * t128 + t244 * t153;
t168 = t342 * t222 + t241 * t223;
t268 = t193 * t244;
t266 = t110 * t298 - t213 * t62;
t264 = t286 * t244;
t263 = -t188 * t364 - t212 * t189;
t130 = pkin(4) * t310 - t353;
t262 = t92 * t242 + t91 * t244;
t260 = 0.2e1 * t297 * t290;
t259 = -t193 * t371 + t176;
t258 = t62 * qJ(6) + t274;
t48 = pkin(9) * t301 + t202 * pkin(4) + (-t159 + (pkin(9) * t209 - t154) * t242) * qJD(4) + t270;
t63 = t244 * t128 + t242 * t153 + t154 * t294 - t167 * t295;
t53 = -pkin(9) * t254 + t63;
t10 = t241 * t48 + t86 * t276 - t93 * t293 + t342 * t53;
t253 = -t281 - t301;
t252 = -pkin(8) * t189 + t193 * t150;
t2 = -t110 * qJD(6) - t258;
t83 = t286 * pkin(4) + t116;
t24 = t62 * pkin(5) + t83;
t11 = -t55 * qJD(5) - t241 * t53 + t342 * t48;
t246 = t7 + t334;
t129 = qJD(2) * t209 + qJD(3) * t167;
t97 = pkin(4) * t254 + t129;
t235 = pkin(5) + t369;
t195 = t197 ^ 2;
t185 = t212 * pkin(5) + t236;
t144 = t209 * t282 - t287;
t143 = t213 * t209;
t138 = -t212 * qJ(6) + t169;
t137 = -t213 * qJ(6) + t168;
t102 = t188 * t202 - t157;
t96 = pkin(5) * t255 + t341;
t95 = t143 * pkin(5) + t130;
t69 = -t201 * t283 - t241 * t281 - qJD(5) * t287 + (-t201 * t241 + t209 * t352) * t244;
t68 = t161 * t209 + t201 * t282 - t241 * t305;
t64 = -qJD(4) * t101 + t270;
t51 = t69 * pkin(5) + t97;
t47 = t263 + t312;
t46 = t263 - t312;
t45 = -t322 - t348;
t44 = -t322 + t348;
t38 = -qJ(6) * t143 + t55;
t31 = -pkin(5) * t256 - t144 * qJ(6) + t54;
t22 = t40 - t358;
t21 = t39 + t367;
t20 = t30 - t367;
t17 = t110 * t364 + t62 * t212;
t16 = -t61 * t213 - t255 * t298;
t15 = t110 * t69 + t143 * t62;
t14 = -t144 * t61 - t255 * t68;
t13 = -t110 * t202 - t143 * t189 - t69 * t188 + t256 * t62;
t12 = t144 * t189 - t68 * t188 + t202 * t255 + t256 * t61;
t9 = t266 + t347;
t8 = t266 - t347;
t5 = t110 * t68 + t143 * t61 - t144 * t62 - t255 * t69;
t4 = -t69 * qJ(6) - t143 * qJD(6) + t10;
t3 = t202 * pkin(5) + t68 * qJ(6) - t144 * qJD(6) + t11;
t1 = t246 + t355;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, qJ(2) * t260, -t199 * t201 + t209 * t248, -t209 * t189 + t201 * t197 - t199 * t202 + t248 * t256, -t201 * qJD(3), t197 * t202 - t157, -t202 * qJD(3), 0, -t129 * qJD(3) + t231 * t189 + t219 * t202, -t128 * qJD(3) - t219 * t201 + t231 * t248, t115 * t256 + t116 * t209 - t128 * t197 + t129 * t199 - t156 * t202 - t167 * t189 + t201 * t354 - t248 * t353, t115 * t167 + t156 * t128 - t129 * t354 - t321, -t123 * t309 + t171 * t253 (-t244 * t170 + t171 * t242) * t201 + (-t264 + t320 + (-t170 * t242 - t171 * t244) * qJD(4)) * t209, t123 * t256 + t171 * t202 + t209 * t176 + t193 * t253, t119 * t209 - t170 * t254, t170 * t202 - t254 * t193 - t209 * t306 + t256 * t286, t193 * t202 - t157, t100 * t189 + t116 * t310 - t129 * t170 + t254 * t150 + t64 * t193 + t91 * t202 - t256 * t57 - t286 * t353, -t101 * t189 + t116 * t309 + t123 * t353 + t129 * t171 + t150 * t253 - t63 * t193 - t92 * t202 + t256 * t56, t63 * t170 - t101 * t286 - t64 * t171 + t100 * t123 + t262 * t201 + (-t56 * t242 - t57 * t244 + (t242 * t91 - t244 * t92) * qJD(4)) * t209, t57 * t100 + t56 * t101 + t150 * t129 + t92 * t63 + t91 * t64 - t321, t14, t5, t12, t15, t13, t102, t103 * t69 + t11 * t188 + t97 * t110 + t130 * t62 + t83 * t143 + t54 * t189 + t29 * t202 - t256 * t7, -t10 * t188 - t103 * t68 - t130 * t61 + t83 * t144 - t55 * t189 - t30 * t202 + t255 * t97 - t256 * t274, -t10 * t110 - t11 * t255 + t143 * t274 - t144 * t7 + t29 * t68 - t30 * t69 + t54 * t61 - t55 * t62, t30 * t10 + t103 * t97 + t29 * t11 + t130 * t83 - t274 * t55 + t7 * t54, t14, t5, t12, t15, t13, t102, -t1 * t256 + t51 * t110 + t24 * t143 + t18 * t202 + t3 * t188 + t31 * t189 + t95 * t62 + t70 * t69, t24 * t144 - t4 * t188 - t38 * t189 + t2 * t256 - t20 * t202 + t255 * t51 - t95 * t61 - t70 * t68, -t1 * t144 - t110 * t4 - t143 * t2 + t18 * t68 - t20 * t69 - t255 * t3 + t31 * t61 - t38 * t62, t1 * t31 + t18 * t3 + t2 * t38 + t20 * t4 + t24 * t95 + t51 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, -qJ(2) * t272, 0, 0, 0, 0, 0, 0, 0.2e1 * t199 * qJD(3) (-t197 + t351) * qJD(3), -t195 - t345, t156 * t197 + t199 * t354, 0, 0, 0, 0, 0, 0, t259 + t318, -t193 ^ 2 * t244 - t306 - t316 (t123 + t319) * t244 + t365 + t300, -t150 * t199 + t261 * t242 + t244 * t359, 0, 0, 0, 0, 0, 0, t46, t45, t9, -t103 * t199 - t7 * t212 - t213 * t274 - t29 * t364 - t298 * t30, 0, 0, 0, 0, 0, 0, t46, t45, t9, -t1 * t212 - t18 * t364 - t70 * t199 + t2 * t213 - t20 * t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t195 + t345 (t197 + t351) * qJD(3), -t311, 0, 0, t156 * qJD(3) - t219 * t199 - t116, -qJD(2) * t351 + t219 * t197, 0, 0, t171 * t268 - t320 (-t123 + t319) * t244 - t365 + t300, t193 * t268 + t306 - t316, -t170 * t314 - t264, t259 - t318, -t193 * t199, -pkin(3) * t286 - t116 * t244 - t91 * t199 + t156 * t170 + (-pkin(8) * t294 - t98) * t193 + t252 * t242, pkin(3) * t123 + t116 * t242 - t156 * t171 + t92 * t199 + (pkin(8) * t295 + t99) * t193 + t252 * t244, -t99 * t170 + t98 * t171 + ((t171 * qJD(4) - t286) * pkin(8) + t261) * t244 + ((-t123 - t291) * pkin(8) - t359) * t242, -t116 * pkin(3) - t150 * t156 - t91 * t98 - t92 * t99 + (-qJD(4) * t262 - t57 * t242 + t56 * t244) * pkin(8), t16, t8, t44, t17, t47, -t315, t103 * t364 + t110 * t265 + t168 * t189 + t188 * t329 - t29 * t199 + t83 * t212 + t236 * t62, -t103 * t298 - t169 * t189 - t188 * t330 + t30 * t199 + t83 * t213 - t236 * t61 + t255 * t265, -t110 * t330 + t168 * t61 - t169 * t62 + t212 * t274 - t7 * t213 - t255 * t329 + t29 * t298 - t30 * t364, t103 * t265 + t7 * t168 - t169 * t274 + t83 * t236 + t29 * t329 + t30 * t330, t16, t8, t44, t17, t47, -t315, t110 * t328 + t137 * t189 - t18 * t199 + t185 * t62 - t188 * t337 + t24 * t212 + t364 * t70, -t138 * t189 - t185 * t61 + t188 * t336 + t20 * t199 + t24 * t213 + t255 * t328 - t298 * t70, -t1 * t213 + t110 * t336 + t137 * t61 - t138 * t62 + t18 * t298 - t2 * t212 - t20 * t364 + t255 * t337, t1 * t137 + t2 * t138 - t18 * t337 + t24 * t185 - t20 * t336 + t328 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t170 ^ 2 + t171 ^ 2, -t170 * t193 - t123, t317, t171 * t193 - t286, t189, -t150 * t171 + t359, -t150 * t170 - t261, 0, 0, t366, t372, t368, -t366, t363, t189, -t39 * t188 + (-t110 * t171 - t188 * t293 + t342 * t189) * pkin(4) + t349, t40 * t188 - t255 * t341 + t356 + t361, t61 * t369 + t331 + (t30 + t39 + t370) * t255 + (t40 - t29) * t110, -t29 * t39 - t30 * t40 + (t342 * t7 - t103 * t171 - t241 * t274 + (-t241 * t29 + t342 * t30) * qJD(5)) * pkin(4), t366, t372, t368, -t366, t363, t189, t334 - t360 - t96 * t110 - t21 * t188 + t235 * t189 + (-t74 + (-pkin(4) * t188 - t67) * t241) * qJD(5) + t275 + t355, t110 * t70 + t22 * t188 - t255 * t96 - t2 + t356, t235 * t61 + t331 + (t20 + t21 + t370) * t255 + (t22 - t18) * t110, t1 * t235 - t18 * t21 - t20 * t22 - t70 * t96 + (t2 * t241 + (-t18 * t241 + t342 * t20) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, t372, t368, -t366, t363, t189, t30 * t188 + t349, t29 * t188 + t361, 0, 0, t366, t372, t368, -t366, t363, t189, t20 * t188 + 0.2e1 * t182 + (-t273 - t70) * t255 + t246, -t346 * pkin(5) + t19 * t188 + (qJD(6) + t70) * t110 + t258, t61 * pkin(5) - t110 * t338, t338 * t20 + (t1 - t360) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62 + t323, -t61 - t326, -t107 - t346, t20 * t110 + t18 * t255 + t24;];
tauc_reg  = t6;
