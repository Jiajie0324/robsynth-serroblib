% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RPRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 01:38
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RPRRRP6_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP6_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP6_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRP6_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRP6_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP6_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 01:36:53
% EndTime: 2019-05-06 01:37:14
% DurationCPUTime: 9.64s
% Computational Cost: add. (50103->518), mult. (119163->711), div. (0->0), fcn. (92243->10), ass. (0->335)
t299 = sin(pkin(10));
t307 = cos(qJ(3));
t300 = cos(pkin(10));
t304 = sin(qJ(3));
t363 = t300 * t304;
t285 = (t299 * t307 + t363) * qJD(1);
t303 = sin(qJ(4));
t306 = cos(qJ(4));
t267 = qJD(3) * t303 + t285 * t306;
t302 = sin(qJ(5));
t305 = cos(qJ(5));
t334 = qJD(3) * t306 - t303 * t285;
t233 = t267 * t302 - t305 * t334;
t235 = t305 * t267 + t302 * t334;
t189 = t235 * t233;
t350 = t300 * qJDD(1);
t351 = t299 * qJDD(1);
t329 = t304 * t351 - t307 * t350;
t352 = t285 * qJD(3);
t317 = t329 + t352;
t249 = qJDD(4) + t317;
t248 = qJDD(5) + t249;
t419 = t189 - t248;
t426 = pkin(5) * t419;
t239 = t334 * t267;
t418 = t239 + t249;
t425 = t303 * t418;
t424 = t306 * t418;
t231 = t233 ^ 2;
t357 = qJD(1) * t300;
t364 = t299 * t304;
t283 = qJD(1) * t364 - t307 * t357;
t278 = qJD(4) + t283;
t274 = qJD(5) + t278;
t271 = t274 ^ 2;
t184 = -t271 - t231;
t373 = t419 * t305;
t127 = t184 * t302 - t373;
t126 = pkin(4) * t127;
t282 = t304 * t350 + t307 * t351;
t353 = t283 * qJD(3);
t258 = -t353 + t282;
t219 = -t267 * qJD(4) + t306 * qJDD(3) - t303 * t258;
t220 = qJD(4) * t334 + t303 * qJDD(3) + t306 * t258;
t161 = -qJD(5) * t233 + t219 * t302 + t220 * t305;
t215 = t274 * t233;
t140 = t161 + t215;
t422 = qJ(6) * t140;
t250 = pkin(3) * t283 - pkin(8) * t285;
t398 = sin(qJ(1));
t399 = cos(qJ(1));
t319 = g(1) * t399 + g(2) * t398;
t346 = pkin(2) * t300 + pkin(1);
t416 = qJ(2) + pkin(7);
t311 = (-t416 * qJDD(1) + (qJD(1) * t346 - (2 * qJD(2))) * qJD(1) + t319) * t299;
t393 = t300 * g(3);
t310 = t311 - t393;
t297 = t300 ^ 2;
t312 = qJDD(1) * qJ(2) - t319;
t408 = 2 * qJD(2);
t410 = qJD(1) ^ 2;
t332 = -g(3) * t299 + t300 * (-pkin(1) * t410 + t312) + t357 * t408;
t244 = -pkin(2) * t297 * t410 + pkin(7) * t350 + t332;
t359 = t307 * t244;
t409 = qJD(3) ^ 2;
t174 = -pkin(3) * t409 + qJDD(3) * pkin(8) - t283 * t250 + t304 * t310 + t359;
t331 = g(1) * t398 - t399 * g(2);
t323 = -qJDD(2) + t331;
t296 = t299 ^ 2;
t358 = t296 + t297;
t252 = t346 * qJDD(1) + (pkin(7) * t358 + qJ(2)) * t410 + t323;
t181 = (-t258 + t353) * pkin(8) + (t317 + t352) * pkin(3) - t252;
t123 = t303 * t174 - t306 * t181;
t245 = t278 * t334;
t194 = -t245 + t220;
t105 = pkin(4) * t418 - pkin(9) * t194 - t123;
t124 = t306 * t174 + t303 * t181;
t241 = pkin(4) * t278 - pkin(9) * t267;
t333 = t334 ^ 2;
t112 = -pkin(4) * t333 + t219 * pkin(9) - t278 * t241 + t124;
t65 = -t305 * t105 + t112 * t302;
t314 = 0.2e1 * qJD(6) * t235 + t422 + t426 + t65;
t313 = -t314 - t426;
t423 = t126 + t313;
t261 = t285 * t283;
t413 = -t261 + qJDD(3);
t421 = t304 * t413;
t420 = t307 * t413;
t374 = t419 * t302;
t356 = t410 * qJ(2);
t382 = qJDD(1) * pkin(1);
t279 = t323 + t356 + t382;
t417 = t356 * t358 - t279 - t382;
t415 = t161 - t215;
t193 = t245 + t220;
t232 = t235 ^ 2;
t266 = t267 ^ 2;
t277 = t278 ^ 2;
t280 = t283 ^ 2;
t281 = t285 ^ 2;
t128 = t184 * t305 + t374;
t86 = t127 * t306 + t128 * t303;
t407 = pkin(3) * t86;
t66 = t302 * t105 + t305 * t112;
t34 = t302 * t66 - t305 * t65;
t406 = pkin(4) * t34;
t165 = -t231 - t232;
t336 = -t305 * t219 + t302 * t220;
t315 = (-qJD(5) + t274) * t235 - t336;
t96 = -t140 * t305 + t302 * t315;
t98 = t140 * t302 + t305 * t315;
t62 = -t303 * t96 + t306 * t98;
t55 = -t165 * t307 + t304 * t62;
t405 = pkin(7) * t55;
t136 = (qJD(5) + t274) * t235 + t336;
t87 = -t127 * t303 + t128 * t306;
t69 = -t136 * t307 + t304 * t87;
t404 = pkin(7) * t69;
t199 = -t232 - t271;
t177 = t189 + t248;
t376 = t177 * t302;
t148 = t199 * t305 - t376;
t375 = t177 * t305;
t149 = -t199 * t302 - t375;
t102 = -t148 * t303 + t149 * t306;
t75 = t304 * t102 - t307 * t415;
t403 = pkin(7) * t75;
t60 = t303 * t98 + t306 * t96;
t402 = pkin(8) * t60;
t401 = pkin(8) * t86;
t400 = pkin(9) * t96;
t101 = t148 * t306 + t149 * t303;
t397 = pkin(3) * t101;
t396 = pkin(8) * t101;
t395 = pkin(9) * t127;
t394 = pkin(9) * t148;
t56 = t304 * t165 + t307 * t62;
t392 = qJ(2) * (-t299 * t55 + t300 * t56) - pkin(1) * t60;
t70 = t304 * t136 + t307 * t87;
t391 = qJ(2) * (-t299 * t69 + t300 * t70) - pkin(1) * t86;
t390 = t302 * t314;
t389 = t303 * t34;
t388 = t305 * t314;
t387 = t306 * t34;
t76 = t102 * t307 + t304 * t415;
t386 = qJ(2) * (-t299 * t75 + t300 * t76) - pkin(1) * t101;
t385 = -pkin(3) * t165 + pkin(8) * t62;
t384 = -pkin(3) * t136 + pkin(8) * t87;
t383 = -pkin(3) * t415 + pkin(8) * t102;
t200 = t244 * t304 - t307 * t310;
t173 = -qJDD(3) * pkin(3) - t409 * pkin(8) + t250 * t285 + t200;
t117 = -t219 * pkin(4) - t333 * pkin(9) + t241 * t267 + t173;
t381 = t117 * t302;
t380 = t117 * t305;
t201 = -g(3) * t363 + t304 * t311 + t359;
t162 = -t200 * t307 + t304 * t201;
t379 = t162 * t299;
t378 = t173 * t303;
t377 = t173 * t306;
t204 = -t239 + t249;
t372 = t204 * t303;
t371 = t204 * t306;
t370 = t252 * t304;
t369 = t252 * t307;
t253 = qJDD(3) + t261;
t368 = t253 * t307;
t367 = t267 * t278;
t366 = t274 * t302;
t365 = t274 * t305;
t362 = t303 * t267;
t361 = t304 * t253;
t360 = t306 * t267;
t355 = qJD(6) * t233;
t349 = t307 * t189;
t348 = t304 * t189;
t147 = pkin(4) * t148;
t347 = t147 - t66;
t345 = -pkin(3) * t307 - pkin(2);
t344 = -pkin(2) * t60 + pkin(7) * t56;
t343 = -pkin(2) * t86 + pkin(7) * t70;
t94 = pkin(4) * t96;
t43 = -pkin(3) * t60 - t94;
t225 = -0.2e1 * t355;
t160 = -qJD(5) * t235 - t336;
t206 = pkin(5) * t274 - qJ(6) * t235;
t327 = t231 * pkin(5) - t160 * qJ(6) + t274 * t206 - t66;
t53 = t225 - t327;
t21 = t302 * t53 - t388;
t49 = pkin(5) * t314;
t342 = pkin(4) * t21 - t49;
t341 = -pkin(2) * t101 + pkin(7) * t76;
t340 = -pkin(4) * t165 + pkin(9) * t98;
t339 = -pkin(4) * t136 + pkin(9) * t128;
t338 = -pkin(4) * t415 + pkin(9) * t149;
t35 = t302 * t65 + t305 * t66;
t83 = t123 * t303 + t306 * t124;
t163 = t200 * t304 + t307 * t201;
t335 = t299 * (t393 + ((-pkin(1) * qJD(1) + t408) * qJD(1) + t312) * t299) + t300 * t332;
t330 = -t126 + t65;
t82 = -t123 * t306 + t124 * t303;
t326 = t303 * t334;
t325 = t306 * t334;
t324 = t219 + t367;
t322 = pkin(5) * t199 + t327;
t321 = t304 * t239;
t320 = t307 * t239;
t318 = t147 + t322;
t80 = -t160 * pkin(5) - t231 * qJ(6) + t206 * t235 + qJDD(6) + t117;
t293 = t297 * qJDD(1);
t292 = t296 * qJDD(1);
t286 = t358 * t410;
t270 = -t281 - t409;
t269 = -t281 + t409;
t268 = t280 - t409;
t259 = 0.2e1 * t353 - t282;
t256 = t329 + 0.2e1 * t352;
t251 = -t409 - t280;
t243 = -t266 + t277;
t242 = t333 - t277;
t238 = -t280 - t281;
t237 = t266 - t333;
t226 = 0.2e1 * t355;
t224 = -t266 - t277;
t223 = -t304 * t270 - t368;
t222 = t270 * t307 - t361;
t221 = -t277 - t333;
t214 = t333 + t266;
t213 = t304 * t282 - t307 * t329;
t212 = -t282 * t307 - t304 * t329;
t210 = -t232 + t271;
t209 = t231 - t271;
t208 = t251 * t307 - t421;
t207 = t304 * t251 + t420;
t202 = (t325 + t362) * t278;
t191 = t219 - t367;
t187 = t232 - t231;
t186 = t220 * t306 - t278 * t362;
t185 = -t303 * t219 - t278 * t325;
t183 = t242 * t306 - t372;
t182 = -t243 * t303 + t424;
t172 = -t224 * t303 - t371;
t171 = t224 * t306 - t372;
t169 = (-t233 * t305 + t235 * t302) * t274;
t168 = (-t233 * t302 - t235 * t305) * t274;
t167 = t221 * t306 - t425;
t166 = t221 * t303 + t424;
t156 = t194 * t303 + t306 * t324;
t155 = t191 * t306 - t193 * t303;
t154 = -t194 * t306 + t303 * t324;
t153 = t209 * t305 - t376;
t152 = -t210 * t302 - t373;
t151 = t209 * t302 + t375;
t150 = t210 * t305 - t374;
t145 = t172 * t307 + t193 * t304;
t144 = t304 * t172 - t193 * t307;
t143 = t167 * t307 - t304 * t191;
t142 = t304 * t167 + t191 * t307;
t133 = pkin(5) * t140;
t132 = t161 * t305 - t235 * t366;
t131 = t161 * t302 + t235 * t365;
t130 = -t160 * t302 + t233 * t365;
t129 = t160 * t305 + t233 * t366;
t121 = -pkin(8) * t171 + t377;
t120 = t156 * t307 - t304 * t214;
t119 = t304 * t156 + t214 * t307;
t118 = -pkin(8) * t166 + t378;
t116 = -t168 * t303 + t169 * t306;
t115 = t168 * t306 + t169 * t303;
t114 = -pkin(5) * t415 - qJ(6) * t177;
t113 = -pkin(3) * t171 + t124;
t111 = -pkin(3) * t166 + t123;
t109 = -t151 * t303 + t153 * t306;
t108 = -t150 * t303 + t152 * t306;
t107 = t151 * t306 + t153 * t303;
t106 = t150 * t306 + t152 * t303;
t97 = -t136 * t305 - t302 * t415;
t95 = -t136 * t302 + t305 * t415;
t92 = t380 - t394;
t91 = -t131 * t303 + t132 * t306;
t90 = -t129 * t303 + t130 * t306;
t89 = t131 * t306 + t132 * t303;
t88 = t129 * t306 + t130 * t303;
t81 = t381 - t395;
t79 = t299 * (t116 * t307 + t304 * t248) + t300 * (t304 * t116 - t248 * t307);
t73 = -qJ(6) * t199 + t80;
t72 = -pkin(8) * t154 - t82;
t71 = t338 + t381;
t67 = t339 - t380;
t63 = -pkin(5) * t136 + qJ(6) * t184 - t80;
t61 = -t303 * t95 + t306 * t97;
t59 = t303 * t97 + t306 * t95;
t52 = t299 * (t307 * t91 + t348) + t300 * (t304 * t91 - t349);
t51 = t299 * (t307 * t90 - t348) + t300 * (t304 * t90 + t349);
t48 = -t114 * t302 + t305 * t73 - t394;
t47 = t299 * (t109 * t307 + t304 * t315) + t300 * (t304 * t109 - t307 * t315);
t46 = t299 * (t108 * t307 + t304 * t140) + t300 * (t304 * t108 - t140 * t307);
t45 = qJ(6) * t373 - t302 * t63 - t395;
t42 = -t347 - t397;
t41 = t314 + t422;
t39 = t114 * t305 + t302 * t73 + t338;
t38 = -pkin(5) * t165 + qJ(6) * t315 + t53;
t37 = t330 - t407;
t36 = qJ(6) * t374 + t305 * t63 + t339;
t33 = -t303 * t71 + t306 * t92 - t396;
t32 = t133 + t43;
t31 = -t303 * t67 + t306 * t81 - t401;
t30 = -pkin(5) * t80 + qJ(6) * t53;
t29 = t225 - t318 - t397;
t28 = -pkin(4) * t117 + pkin(9) * t35;
t27 = -t407 - t423;
t26 = -t34 - t400;
t25 = t299 * (t304 * t187 + t307 * t61) + t300 * (-t187 * t307 + t304 * t61);
t23 = t340 + t35;
t22 = t305 * t53 + t390;
t20 = -t303 * t39 + t306 * t48 - t396;
t19 = t306 * t35 - t389;
t18 = t303 * t35 + t387;
t17 = -t303 * t36 + t306 * t45 - t401;
t16 = -t302 * t38 + t305 * t41 - t400;
t15 = t304 * t117 + t19 * t307;
t14 = -t117 * t307 + t304 * t19;
t13 = t302 * t41 + t305 * t38 + t340;
t12 = -t21 * t303 + t22 * t306;
t11 = t21 * t306 + t22 * t303;
t10 = -pkin(3) * t18 - t406;
t9 = -t23 * t303 + t26 * t306 - t402;
t8 = -pkin(9) * t21 + qJ(6) * t388 - t30 * t302;
t7 = t12 * t307 + t304 * t80;
t6 = t304 * t12 - t307 * t80;
t5 = -pkin(4) * t80 + pkin(9) * t22 + qJ(6) * t390 + t30 * t305;
t4 = -pkin(8) * t18 - pkin(9) * t387 - t28 * t303;
t3 = -t13 * t303 + t16 * t306 - t402;
t2 = -pkin(3) * t11 - t342;
t1 = -pkin(8) * t11 - t303 * t5 + t306 * t8;
t24 = [0, 0, 0, 0, 0, qJDD(1), t331, t319, 0, 0, t292, 0.2e1 * t299 * t350, 0, t293, 0, 0, -t417 * t300, t417 * t299, pkin(1) * t286 + qJ(2) * (t293 + t292) + t335, pkin(1) * t279 + qJ(2) * t335, t299 * (t258 * t307 - t304 * t352) + t300 * (t304 * t258 + t307 * t352), t299 * (-t256 * t307 + t304 * t259) + t300 * (-t304 * t256 - t259 * t307), t299 * (-t304 * t269 + t420) + t300 * (t269 * t307 + t421), t299 * (t304 * t317 + t307 * t353) + t300 * (t304 * t353 - t307 * t317), t299 * (t268 * t307 - t361) + t300 * (t304 * t268 + t368), (t299 * (-t283 * t307 + t285 * t304) + t300 * (-t283 * t304 - t285 * t307)) * qJD(3), t299 * (-pkin(7) * t207 - t370) + t300 * (-pkin(2) * t256 + pkin(7) * t208 + t369) - pkin(1) * t256 + qJ(2) * (-t207 * t299 + t208 * t300), t299 * (-pkin(7) * t222 - t369) + t300 * (pkin(2) * t259 + pkin(7) * t223 - t370) + pkin(1) * t259 + qJ(2) * (-t222 * t299 + t223 * t300), t299 * (-pkin(7) * t212 - t162) + t300 * (-pkin(2) * t238 + pkin(7) * t213 + t163) - pkin(1) * t238 + qJ(2) * (-t212 * t299 + t213 * t300), -pkin(7) * t379 + t300 * (pkin(2) * t252 + pkin(7) * t163) + pkin(1) * t252 + qJ(2) * (t163 * t300 - t379), t299 * (t307 * t186 - t321) + t300 * (t304 * t186 + t320), t299 * (t155 * t307 + t304 * t237) + t300 * (t304 * t155 - t237 * t307), t299 * (t182 * t307 + t304 * t194) + t300 * (t304 * t182 - t194 * t307), t299 * (t307 * t185 + t321) + t300 * (t304 * t185 - t320), t299 * (t183 * t307 + t304 * t324) + t300 * (t304 * t183 - t307 * t324), t299 * (t202 * t307 + t304 * t249) + t300 * (t304 * t202 - t249 * t307), t299 * (-pkin(7) * t142 - t304 * t111 + t118 * t307) + t300 * (-pkin(2) * t166 + pkin(7) * t143 + t111 * t307 + t304 * t118) - pkin(1) * t166 + qJ(2) * (-t142 * t299 + t143 * t300), t299 * (-pkin(7) * t144 - t304 * t113 + t121 * t307) + t300 * (-pkin(2) * t171 + pkin(7) * t145 + t113 * t307 + t304 * t121) - pkin(1) * t171 + qJ(2) * (-t144 * t299 + t145 * t300), t299 * (-pkin(7) * t119 + t307 * t72) + t300 * (pkin(7) * t120 + t304 * t72) + qJ(2) * (-t119 * t299 + t120 * t300) + (pkin(3) * t364 + t300 * t345 - pkin(1)) * t154, (t299 * (pkin(3) * t304 - pkin(8) * t307) + t300 * (-pkin(8) * t304 + t345) - pkin(1)) * t82 + t416 * (-t299 * (-t173 * t307 + t304 * t83) + t300 * (t304 * t173 + t307 * t83)), t52, t25, t46, t51, t47, t79, t299 * (-t304 * t37 + t307 * t31 - t404) + t300 * (t304 * t31 + t307 * t37 + t343) + t391, t299 * (-t304 * t42 + t307 * t33 - t403) + t300 * (t304 * t33 + t307 * t42 + t341) + t386, t299 * (-t304 * t43 + t307 * t9 - t405) + t300 * (t304 * t9 + t307 * t43 + t344) + t392, t299 * (-pkin(7) * t14 - t304 * t10 + t307 * t4) + t300 * (-pkin(2) * t18 + pkin(7) * t15 + t10 * t307 + t304 * t4) - pkin(1) * t18 + qJ(2) * (-t14 * t299 + t15 * t300), t52, t25, t46, t51, t47, t79, t299 * (t17 * t307 - t304 * t27 - t404) + t300 * (t304 * t17 + t27 * t307 + t343) + t391, t299 * (t20 * t307 - t304 * t29 - t403) + t300 * (t304 * t20 + t29 * t307 + t341) + t386, t299 * (t3 * t307 - t304 * t32 - t405) + t300 * (t304 * t3 + t307 * t32 + t344) + t392, t299 * (-pkin(7) * t6 + t1 * t307 - t304 * t2) + t300 * (-pkin(2) * t11 + pkin(7) * t7 + t304 * t1 + t2 * t307) - pkin(1) * t11 + qJ(2) * (-t299 * t6 + t300 * t7); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350, t351, -t286, -t279, 0, 0, 0, 0, 0, 0, t256, -t259, t238, -t252, 0, 0, 0, 0, 0, 0, t166, t171, t154, t82, 0, 0, 0, 0, 0, 0, t86, t101, t60, t18, 0, 0, 0, 0, 0, 0, t86, t101, t60, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t281 - t280, t282, -t261, -t329, qJDD(3), -t200, -t201, 0, 0, t220 * t303 + t278 * t360, t191 * t303 + t193 * t306, t243 * t306 + t425, t306 * t219 - t278 * t326, t242 * t303 + t371, (t326 - t360) * t278, pkin(3) * t191 + pkin(8) * t167 - t377, -pkin(3) * t193 + pkin(8) * t172 + t378, pkin(3) * t214 + pkin(8) * t156 + t83, -pkin(3) * t173 + pkin(8) * t83, t89, t59, t106, t88, t107, t115, t303 * t81 + t306 * t67 + t384, t303 * t92 + t306 * t71 + t383, t23 * t306 + t26 * t303 + t385, -pkin(3) * t117 + pkin(8) * t19 - pkin(9) * t389 + t28 * t306, t89, t59, t106, t88, t107, t115, t303 * t45 + t306 * t36 + t384, t303 * t48 + t306 * t39 + t383, t13 * t306 + t16 * t303 + t385, -pkin(3) * t80 + pkin(8) * t12 + t303 * t8 + t306 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, t237, t194, t239, t324, t249, -t123, -t124, 0, 0, t189, t187, t140, -t189, t315, t248, -t330, t347, t94, t406, t189, t187, t140, -t189, t315, t248, t423, t226 + t318, -t133 + t94, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t187, t140, -t189, t315, t248, -t65, -t66, 0, 0, t189, t187, t140, -t189, t315, t248, t313, t226 + t322, -t133, -t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t415, t165, t80;];
tauJ_reg  = t24;
