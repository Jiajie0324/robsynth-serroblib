% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRPRR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:05:10
% EndTime: 2019-03-09 04:05:53
% DurationCPUTime: 24.56s
% Computational Cost: add. (32028->825), mult. (91581->1191), div. (0->0), fcn. (109067->14), ass. (0->633)
t521 = sin(qJ(3));
t851 = sin(pkin(7));
t854 = cos(pkin(6));
t614 = t854 * t851;
t853 = cos(pkin(7));
t872 = cos(qJ(3));
t627 = t853 * t872;
t517 = sin(pkin(6));
t518 = cos(pkin(12));
t807 = t517 * t518;
t516 = sin(pkin(12));
t808 = t516 * t517;
t435 = t521 * t808 - t614 * t872 - t627 * t807;
t644 = t521 * t853;
t437 = t521 * t614 + (t516 * t872 + t518 * t644) * t517;
t515 = sin(pkin(13));
t852 = cos(pkin(13));
t375 = t852 * t435 + t437 * t515;
t523 = cos(qJ(5));
t908 = t523 * t375;
t911 = t908 / 0.2e1;
t912 = -t908 / 0.2e1;
t913 = t911 + t912;
t914 = qJD(5) * t913;
t889 = -t375 / 0.2e1;
t910 = t375 * pkin(11);
t519 = sin(qJ(6));
t801 = t375 * t519;
t631 = t516 * t644;
t689 = t872 * t518;
t909 = t517 * (t689 / 0.2e1 - t631 / 0.2e1);
t520 = sin(qJ(5));
t427 = t852 * t437;
t809 = t515 * t435;
t902 = t427 - t809;
t243 = t520 * t902;
t771 = t523 * t902;
t645 = t517 * t851;
t572 = t518 * t645 - t853 * t854;
t907 = t572 / 0.2e1;
t691 = pkin(1) * t854;
t762 = qJ(2) * t807 + t516 * t691;
t433 = (t807 * t853 + t614) * pkin(9) + t762;
t498 = t518 * t691;
t438 = t854 * pkin(2) + t498 + (-pkin(9) * t853 - qJ(2)) * t808;
t647 = t516 * t851;
t460 = (-pkin(2) * t518 - pkin(9) * t647 - pkin(1)) * t517;
t626 = t851 * t872;
t280 = t521 * t433 - t438 * t627 - t460 * t626;
t258 = -t437 * qJ(4) - t280;
t224 = -pkin(3) * t572 + t258;
t281 = -t521 * (t438 * t853 + t460 * t851) - t872 * t433;
t259 = -t435 * qJ(4) - t281;
t641 = t852 * t259;
t140 = t515 * t224 + t641;
t131 = -pkin(10) * t572 + t140;
t384 = -t438 * t851 + t853 * t460;
t314 = t435 * pkin(3) + t384;
t531 = t375 * pkin(4) - pkin(10) * t902 + t314;
t66 = t131 * t520 - t523 * t531;
t60 = -pkin(5) * t375 + t66;
t702 = t66 / 0.2e1 - t60 / 0.2e1;
t906 = t519 * t702;
t522 = cos(qJ(6));
t905 = t522 * t702;
t802 = t519 * t902;
t904 = t522 * t912 + t802 / 0.2e1;
t903 = t522 * t911 - t802 / 0.2e1;
t512 = t520 ^ 2;
t514 = t523 ^ 2;
t500 = t514 - t512;
t901 = qJD(3) * t500;
t511 = t519 ^ 2;
t513 = t522 ^ 2;
t499 = t513 - t511;
t900 = qJD(5) * t499;
t555 = t572 * t520;
t317 = -t555 + t771;
t315 = t523 * t572 + t243;
t876 = -t520 / 0.2e1;
t675 = t315 * t876;
t873 = t523 / 0.2e1;
t589 = t317 * t873 + t675;
t899 = t589 * qJD(5);
t707 = t523 * qJD(3);
t504 = t520 * t707;
t639 = t589 * qJD(1) + t504;
t715 = t315 * qJD(1);
t571 = -qJD(3) * t589 + t317 * t715;
t897 = t315 ^ 2;
t784 = t522 * t317;
t219 = t784 + t801;
t896 = -t219 / 0.2e1;
t367 = t522 * t902;
t240 = -t519 * t908 - t367;
t895 = -t240 / 0.2e1;
t241 = -t522 * t908 + t802;
t894 = -t241 / 0.2e1;
t893 = -t315 / 0.2e1;
t892 = t315 / 0.2e1;
t891 = t317 / 0.2e1;
t890 = t367 / 0.2e1;
t613 = t852 * t851;
t643 = t521 * t851;
t465 = t515 * t643 - t613 * t872;
t780 = t522 * t465;
t466 = t515 * t626 + t521 * t613;
t442 = t523 * t466 + t520 * t853;
t798 = t519 * t442;
t397 = -t780 + t798;
t888 = -t397 / 0.2e1;
t887 = t397 / 0.2e1;
t781 = t522 * t442;
t797 = t519 * t465;
t398 = t781 + t797;
t886 = -t398 / 0.2e1;
t441 = t466 * t520 - t523 * t853;
t885 = -t441 / 0.2e1;
t884 = t441 / 0.2e1;
t883 = -t442 / 0.2e1;
t882 = t442 / 0.2e1;
t881 = -t465 / 0.2e1;
t880 = t465 / 0.2e1;
t879 = t466 / 0.2e1;
t506 = pkin(3) * t515 + pkin(10);
t878 = -t506 / 0.2e1;
t877 = t515 / 0.2e1;
t875 = t520 / 0.2e1;
t874 = -t523 / 0.2e1;
t871 = t315 * pkin(11);
t870 = t437 * pkin(3);
t869 = t520 * pkin(5);
t868 = t523 * pkin(11);
t867 = -t60 + t66;
t866 = pkin(3) * qJD(3);
t217 = t519 * t317 - t522 * t375;
t810 = t515 * t259;
t139 = t224 * t852 - t810;
t130 = pkin(4) * t572 - t139;
t622 = t315 * pkin(5) - t317 * pkin(11);
t524 = t130 + t622;
t67 = t523 * t131 + t520 * t531;
t61 = t67 + t910;
t29 = t519 * t61 - t522 * t524;
t154 = t515 * t258 + t641;
t491 = -t868 + t869;
t107 = -t375 * t491 + t154;
t787 = t522 * t107;
t155 = t258 * t852 - t810;
t147 = t523 * t155;
t203 = pkin(4) * t902 + pkin(10) * t375 + t870;
t195 = t520 * t203;
t763 = t147 + t195;
t80 = pkin(11) * t902 + t763;
t863 = t519 * t80;
t33 = t787 - t863;
t775 = t523 * t203;
t792 = t520 * t155;
t611 = t775 - t792;
t79 = -pkin(5) * t902 - t611;
t790 = t520 * t375;
t5 = t217 * t79 + t240 * t60 + t29 * t790 + t315 * t33;
t865 = t5 * qJD(1);
t864 = t519 * t66;
t862 = t522 * t66;
t861 = t522 * t80;
t30 = t519 * t524 + t522 * t61;
t805 = t519 * t107;
t34 = t805 + t861;
t6 = t219 * t79 + t241 * t60 + t30 * t790 - t315 * t34;
t860 = t6 * qJD(1);
t859 = t60 * t522;
t182 = pkin(5) * t317 + t871;
t786 = t522 * t182;
t7 = t67 * t217 - t29 * t317 + (t519 * t867 + t786) * t315;
t858 = t7 * qJD(1);
t857 = t79 * t519;
t856 = t79 * t522;
t804 = t519 * t182;
t8 = t67 * t219 - t30 * t317 + (t522 * t867 - t804) * t315;
t855 = t8 * qJD(1);
t13 = -t217 * t60 + t29 * t315;
t850 = qJD(1) * t13;
t14 = t219 * t60 - t30 * t315;
t849 = qJD(1) * t14;
t31 = -t130 * t315 + t375 * t66;
t848 = qJD(1) * t31;
t32 = t130 * t317 - t375 * t67;
t847 = qJD(1) * t32;
t48 = -t139 * t902 - t140 * t375;
t846 = qJD(1) * t48;
t586 = t217 * t882 + t317 * t888;
t630 = t516 * t645;
t462 = (-t631 + t689) * t517;
t599 = t516 * t627;
t806 = t518 * t521;
t549 = -t599 - t806;
t535 = t517 * t549;
t400 = t462 * t852 + t515 * t535;
t789 = t520 * t400;
t378 = -t523 * t630 + t789;
t819 = t378 * t522;
t49 = t819 / 0.2e1 + t586;
t845 = qJD(1) * t49;
t583 = t219 * t882 + t317 * t886;
t820 = t378 * t519;
t674 = -t820 / 0.2e1;
t52 = t674 + t583;
t844 = qJD(1) * t52;
t701 = t217 * t790;
t827 = t240 * t315;
t87 = -t701 - t827;
t843 = qJD(1) * t87;
t700 = t219 * t790;
t825 = t241 * t315;
t90 = -t700 - t825;
t842 = qJD(1) * t90;
t399 = t462 * t515 - t535 * t852;
t782 = t522 * t399;
t602 = t520 * t630;
t770 = t523 * t400;
t379 = t602 + t770;
t800 = t519 * t379;
t577 = -t800 / 0.2e1 + t782 / 0.2e1;
t584 = t219 * t884 + t315 * t886;
t91 = t577 - t584;
t841 = qJD(1) * t91;
t783 = t522 * t379;
t799 = t519 * t399;
t576 = -t799 / 0.2e1 - t783 / 0.2e1;
t587 = t217 * t885 + t315 * t887;
t92 = t576 - t587;
t840 = qJD(1) * t92;
t607 = t782 - t800;
t95 = t378 * t217 + t315 * t607;
t839 = qJD(1) * t95;
t608 = t783 + t799;
t96 = t378 * t219 - t315 * t608;
t838 = qJD(1) * t96;
t97 = t217 * t317 - t519 * t897;
t837 = qJD(1) * t97;
t98 = t219 * t317 - t522 * t897;
t836 = qJD(1) * t98;
t15 = -t130 * t790 + t154 * t315 + t375 * t611 - t66 * t902;
t835 = t15 * qJD(1);
t16 = -t130 * t908 + t154 * t317 - t375 * t763 - t67 * t902;
t834 = t16 * qJD(1);
t833 = t217 * t523;
t832 = t219 * t519;
t831 = t219 * t522;
t830 = t219 * t523;
t692 = -t852 / 0.2e1;
t561 = t399 * t692 + t400 * t877;
t642 = t853 * t437;
t22 = (-t155 / 0.2e1 + t139 / 0.2e1) * t466 + (t140 / 0.2e1 - t154 / 0.2e1) * t465 + (-t642 / 0.2e1 + t561) * pkin(3);
t829 = t22 * qJD(1);
t24 = -t139 * t154 + t140 * t155 + t314 * t870;
t828 = t24 * qJD(1);
t826 = t240 * t523;
t824 = t241 * t519;
t823 = t317 * t902;
t822 = t317 * t520;
t821 = t902 * t315;
t568 = t607 * t523;
t779 = t522 * t466;
t793 = t519 * t523;
t401 = t465 * t793 + t779;
t581 = t240 * t884 + t401 * t892;
t585 = t217 * t881 - t375 * t888;
t39 = t568 / 0.2e1 + (t674 + t585) * t520 + t581;
t818 = t39 * qJD(1);
t817 = t399 * t520;
t816 = t399 * t523;
t569 = t608 * t523;
t776 = t522 * t523;
t796 = t519 * t466;
t402 = -t465 * t776 + t796;
t580 = t241 * t884 + t402 * t893;
t582 = t219 * t881 - t375 * t886;
t673 = -t819 / 0.2e1;
t42 = -t569 / 0.2e1 + (t673 + t582) * t520 + t580;
t815 = t42 * qJD(1);
t43 = -t139 * t399 + t140 * t400 + t314 * t630;
t814 = t43 * qJD(1);
t813 = t435 * t437;
t507 = -pkin(3) * t852 - pkin(4);
t621 = -t523 * pkin(5) - t520 * pkin(11);
t546 = t621 + t507;
t694 = t506 * t776;
t440 = t519 * t546 + t694;
t812 = t440 * t317;
t172 = t522 * t315;
t794 = t519 * t520;
t282 = t172 * t794;
t676 = -t830 / 0.2e1;
t45 = t282 + (-t833 / 0.2e1 + t894) * t522 + (t676 + t240 / 0.2e1) * t519;
t811 = t45 * qJD(1);
t803 = t519 * t217;
t795 = t519 * t491;
t791 = t520 * t217;
t788 = t520 * t522;
t785 = t522 * t217;
t778 = t522 * t491;
t777 = t522 * t512;
t774 = t523 * t315;
t53 = -t217 * t241 - t219 * t240;
t769 = t53 * qJD(1);
t659 = t788 / 0.2e1;
t341 = t375 * t659;
t652 = -t774 / 0.2e1;
t559 = (t652 - t822 / 0.2e1) * t519;
t662 = t791 / 0.2e1;
t663 = t793 / 0.2e1;
t529 = t315 * t663 + t559 + t662;
t71 = -t341 + t529;
t768 = t71 * qJD(1);
t610 = t785 + t832;
t78 = t610 * t315;
t767 = t78 * qJD(1);
t88 = t701 - t827;
t766 = t88 * qJD(1);
t89 = -t700 + t825;
t765 = t89 * qJD(1);
t620 = (t375 / 0.2e1 + t889) * t465;
t528 = t315 * t879 + t520 * t620 + t885 * t902;
t99 = t816 / 0.2e1 + t528;
t764 = t99 * qJD(1);
t527 = t317 * t879 + t523 * t620 + t883 * t902;
t102 = -t817 / 0.2e1 + t527;
t761 = qJD(1) * t102;
t699 = t375 * t790;
t132 = -t699 - t821;
t760 = qJD(1) * t132;
t133 = -t699 + t821;
t759 = qJD(1) * t133;
t698 = t375 * t908;
t134 = -t698 + t823;
t758 = qJD(1) * t134;
t135 = t698 + t823;
t757 = qJD(1) * t135;
t145 = t315 * t399 - t375 * t378;
t756 = qJD(1) * t145;
t146 = t317 * t399 - t375 * t379;
t755 = qJD(1) * t146;
t596 = t630 / 0.2e1;
t541 = -t789 / 0.2e1 + t523 * t596;
t578 = t317 * t880 + t375 * t883;
t148 = t541 - t578;
t754 = qJD(1) * t148;
t540 = -t770 / 0.2e1 - t602 / 0.2e1;
t579 = t315 * t881 + t375 * t884;
t149 = t540 - t579;
t753 = qJD(1) * t149;
t157 = -t375 * t400 + t399 * t902;
t752 = qJD(1) * t157;
t160 = -t280 * t572 - t384 * t435;
t751 = qJD(1) * t160;
t161 = -t281 * t572 + t384 * t437;
t750 = qJD(1) * t161;
t749 = qJD(1) * t219;
t334 = (t435 * t647 - t549 * t572) * t517;
t748 = qJD(1) * t334;
t335 = t437 * t630 + t462 * t572;
t747 = qJD(1) * t335;
t746 = qJD(1) * t375;
t745 = qJD(1) * t523;
t744 = qJD(5) * t315;
t743 = qJD(5) * t375;
t742 = qJD(5) * t519;
t741 = qJD(5) * t520;
t740 = qJD(5) * t522;
t739 = qJD(5) * t523;
t738 = qJD(6) * t315;
t737 = qJD(6) * t519;
t736 = qJD(6) * t522;
t735 = qJD(6) * t523;
t653 = t776 / 0.2e1;
t550 = t219 * t653 + t513 * t675;
t106 = -t824 / 0.2e1 + t550;
t734 = t106 * qJD(1);
t665 = -t794 / 0.2e1;
t633 = t315 * t665;
t677 = t833 / 0.2e1;
t565 = t677 + t633;
t109 = t565 + t903;
t733 = t109 * qJD(1);
t664 = t794 / 0.2e1;
t564 = t315 * t664 + t677;
t110 = t564 + t904;
t732 = t110 * qJD(1);
t595 = t315 * t659 + t890;
t667 = t801 / 0.2e1;
t617 = t667 + t219 / 0.2e1;
t112 = t523 * t617 + t595;
t731 = t112 * qJD(1);
t113 = (t667 + t896) * t523 + t595;
t730 = t113 * qJD(1);
t349 = t512 * t801;
t116 = t349 - t826;
t729 = t116 * qJD(1);
t728 = t620 * qJD(1);
t655 = t784 / 0.2e1;
t122 = (t655 - t617) * t520;
t727 = t122 * qJD(1);
t142 = -t774 - t822;
t125 = t142 * t375;
t726 = t125 * qJD(1);
t153 = t375 ^ 2 + t902 ^ 2;
t725 = t153 * qJD(1);
t230 = t241 * t523;
t350 = t375 * t777;
t159 = t350 - t230;
t724 = t159 * qJD(1);
t168 = t519 * t315;
t723 = t168 * qJD(1);
t722 = t172 * qJD(1);
t588 = -t375 * t879 + t880 * t902;
t183 = t596 - t588;
t721 = t183 * qJD(1);
t562 = -t375 * t877 + t692 * t902;
t185 = (-t437 / 0.2e1 + t562) * pkin(3);
t720 = t185 * qJD(1);
t719 = t243 * qJD(1);
t244 = 0.2e1 * t889 * t520;
t239 = t244 * qJD(1);
t247 = 0.2e1 * t911;
t718 = t247 * qJD(1);
t248 = 0.2e1 * t912;
t717 = t248 * qJD(1);
t313 = t435 ^ 2 - t437 ^ 2;
t716 = t313 * qJD(1);
t623 = t642 / 0.2e1;
t526 = t643 * t907 + t623;
t532 = (-t806 / 0.2e1 - t599 / 0.2e1) * t517;
t328 = t532 - t526;
t714 = t328 * qJD(1);
t525 = -t853 * t435 / 0.2e1 + t626 * t907;
t330 = t525 + t909;
t713 = t330 * qJD(1);
t373 = -t809 / 0.2e1 + t427 / 0.2e1;
t712 = t373 * qJD(1);
t409 = (t762 * t518 + (qJ(2) * t808 - t498) * t516) * t517;
t711 = t409 * qJD(1);
t471 = (t516 ^ 2 + t518 ^ 2) * t517 ^ 2;
t710 = t471 * qJD(1);
t709 = t520 * qJD(3);
t708 = t520 * qJD(6);
t706 = pkin(5) * t217 / 0.2e1;
t705 = pkin(5) * t896;
t704 = pkin(5) * t894;
t703 = t871 / 0.2e1;
t697 = t506 * t793;
t483 = t506 * t794;
t696 = t506 * t788;
t695 = t522 * t774;
t693 = -t861 / 0.2e1;
t688 = t219 * t715;
t686 = t522 * t709;
t685 = t519 * t740;
t684 = t519 * t735;
t683 = t522 * t735;
t682 = qJD(1) * t813;
t681 = t519 * t736;
t680 = t520 * t739;
t679 = t520 * t740;
t678 = t902 * t745;
t672 = t219 * t878;
t671 = t506 * t875;
t670 = t506 * t873;
t669 = t507 * t891;
t668 = -t804 / 0.2e1;
t666 = t798 / 0.2e1;
t661 = t790 / 0.2e1;
t660 = -t790 / 0.2e1;
t658 = t786 / 0.2e1;
t657 = -t172 / 0.2e1;
t656 = -t784 / 0.2e1;
t654 = t780 / 0.2e1;
t649 = -t147 / 0.2e1 - t195 / 0.2e1;
t648 = t709 / 0.2e1;
t646 = t517 * t854;
t640 = t483 + t778;
t638 = -qJD(5) - t746;
t637 = -qJD(6) - t715;
t636 = -qJD(6) + t707;
t635 = t519 * t679;
t634 = t519 * t686;
t292 = t520 * t657;
t342 = t522 * t661;
t632 = t910 / 0.2e1 - t67 / 0.2e1;
t629 = t703 + t182 / 0.2e1;
t628 = -t715 - qJD(6) / 0.2e1;
t625 = qJD(1) * t646;
t624 = qJD(2) * t646;
t619 = 0.2e1 * t634;
t618 = t441 * t876 + t879;
t616 = t797 / 0.2e1 + t886;
t615 = t654 + t887;
t612 = t219 * t875 + t519 * t660;
t609 = -t375 * t507 - t506 * t902;
t21 = (-t140 + t154) * t902 + (t139 - t155) * t375;
t606 = -t21 * qJD(1) - qJD(2) * t620;
t479 = t500 * t519;
t530 = t519 * t652 + t559 - t791 / 0.2e1;
t70 = t342 + t530;
t605 = t70 * qJD(1) + t479 * qJD(3);
t480 = t514 * t522 - t777;
t68 = -t695 + (t656 - t617) * t520;
t604 = -t68 * qJD(1) - t480 * qJD(3);
t603 = t636 * t520;
t152 = -t317 ^ 2 + t897;
t601 = qJD(1) * t152 + qJD(3) * t142;
t600 = qJD(1) * t142 + t901;
t598 = t516 * t625;
t597 = t518 * t625;
t594 = t868 / 0.2e1 - t869 / 0.2e1;
t593 = pkin(5) * t895 - t856 / 0.2e1;
t312 = t771 / 0.2e1 - t555 / 0.2e1;
t592 = t312 * qJD(1) + t648;
t591 = t30 * t874 + t440 * t892;
t590 = -t863 / 0.2e1 + t787 / 0.2e1;
t575 = -t785 / 0.2e1 - t832 / 0.2e1;
t533 = t130 * t873 + t375 * t671 + t507 * t893;
t35 = t533 - t649;
t574 = -t35 * qJD(1) - t507 * t707;
t37 = t669 + (t375 * t878 - t203 / 0.2e1) * t523 + (t130 / 0.2e1 + t155 / 0.2e1) * t520;
t573 = -t37 * qJD(1) - t507 * t709;
t570 = qJD(5) * t373 + t746 * t902;
t567 = t519 * t911 + t292 + t890;
t566 = -t708 / 0.2e1 + t639;
t563 = -t491 / 0.2e1 + t594;
t82 = (-t803 + t831) * t520;
t85 = t217 ^ 2 - t219 ^ 2;
t560 = qJD(1) * t85 - qJD(3) * t82 - qJD(5) * t610;
t439 = -t522 * t546 + t697;
t542 = t439 * t891 + t640 * t893;
t1 = (t217 * t878 + t658 + t906) * t523 + (t29 / 0.2e1 + (t506 * t892 + t632) * t519) * t520 + t542 + t593;
t178 = (t666 - t615) * t520;
t345 = t439 * t520 + (t640 - 0.2e1 * t483) * t523;
t558 = -t1 * qJD(1) + t178 * qJD(2) - t345 * qJD(3);
t180 = (-t781 / 0.2e1 - t616) * t520;
t2 = t704 + t812 / 0.2e1 + (t79 / 0.2e1 + t491 * t892) * t519 + (t668 + t672 + t905) * t523 + (t30 / 0.2e1 + t632 * t522) * t520;
t346 = t491 * t793 + (-t440 + t694) * t520;
t557 = -t2 * qJD(1) - t180 * qJD(2) + t346 * qJD(3);
t250 = t522 * t618 + t523 * t616;
t408 = -t440 * t523 - t506 * t777;
t9 = (t672 - t859 / 0.2e1) * t520 + t590 + t591;
t556 = qJD(1) * t9 + qJD(2) * t250 + qJD(3) * t408;
t534 = t29 * t873 + t439 * t893 + t506 * t662;
t10 = t693 + (-t107 / 0.2e1 + t60 * t875) * t519 + t534;
t251 = -t519 * t618 + t523 * t615;
t407 = -t512 * t506 * t519 - t439 * t523;
t553 = qJD(1) * t10 + qJD(2) * t251 - qJD(3) * t407;
t552 = qJD(3) * t572;
t551 = t572 * qJD(1);
t17 = t519 * t629 + t706 - t905;
t444 = t563 * t519;
t548 = pkin(5) * t740 - qJD(1) * t17 + qJD(3) * t444;
t19 = -t522 * t629 + t705 - t906;
t445 = t563 * t522;
t547 = pkin(5) * t742 - qJD(1) * t19 - qJD(3) * t445;
t120 = t575 * t520;
t124 = -t803 / 0.2e1 + t831 / 0.2e1;
t545 = -qJD(3) * t120 - qJD(5) * t124 + t217 * t749;
t470 = (t511 / 0.2e1 - t513 / 0.2e1) * t520;
t544 = qJD(1) * t124 - qJD(3) * t470 + t685;
t543 = qJD(6) * t312 + t571;
t539 = t551 - qJD(3);
t478 = t499 * t512;
t538 = qJD(1) * t82 + qJD(3) * t478 + 0.2e1 * t635;
t537 = qJD(1) * t610 + t619 - t900;
t536 = qJD(3) * t519 * t777 - qJD(1) * t120 + qJD(5) * t470;
t508 = t741 / 0.2e1;
t503 = t519 * t741;
t485 = -0.2e1 * t520 * t681;
t468 = t470 * qJD(6);
t411 = t483 + t778 / 0.2e1 + t594 * t522;
t410 = t696 - t795 / 0.2e1 - t594 * t519;
t406 = t465 * t523;
t405 = t465 * t520;
t383 = t441 * t522;
t382 = t441 * t519;
t366 = t373 * qJD(3);
t365 = t902 * t707;
t331 = t525 - t909;
t329 = t532 + t526;
t253 = t398 * t873 + t441 * t659 + t465 * t663 + t779 / 0.2e1;
t252 = t397 * t874 + t441 * t665 + t465 * t653 - t796 / 0.2e1;
t245 = t375 * t876 + t661;
t238 = t245 * qJD(5);
t237 = t244 * qJD(5);
t223 = t239 - t741;
t216 = t312 * qJD(5) - t375 * t648;
t186 = t870 / 0.2e1 + t562 * pkin(3);
t184 = t596 + t588;
t181 = t398 * t876 + t442 * t659 + t465 * t665;
t179 = (t654 + t888 + t666) * t520;
t151 = t541 + t578;
t150 = t540 + t579;
t141 = t142 * qJD(5);
t123 = t520 * t656 + t612;
t121 = t124 * qJD(6);
t119 = t120 * qJD(6);
t117 = t620 * qJD(3);
t115 = t830 / 0.2e1 + t567;
t114 = t676 + t567;
t111 = t564 + t903;
t108 = t565 + t904;
t105 = t824 / 0.2e1 + t550;
t101 = t817 / 0.2e1 + t527;
t100 = -t816 / 0.2e1 + t528;
t94 = t577 + t584;
t93 = t576 + t587;
t83 = t610 * qJD(6);
t81 = t82 * qJD(6);
t73 = t520 * t655 + t612 + t695;
t72 = t342 + t529;
t69 = -t341 + t530;
t51 = t820 / 0.2e1 + t583;
t50 = t673 + t586;
t44 = t282 + t519 * t895 + t241 * t522 / 0.2e1 + t575 * t523;
t41 = t569 / 0.2e1 + t378 * t659 + t582 * t520 + t580;
t40 = -t568 / 0.2e1 + t378 * t664 + t585 * t520 + t581;
t38 = t506 * t912 + t669 + t130 * t875 - t792 / 0.2e1 + t775 / 0.2e1;
t36 = t533 + t649;
t23 = t155 * t879 + t140 * t881 + t154 * t880 - t139 * t466 / 0.2e1 + (t623 + t561) * pkin(3);
t20 = pkin(11) * t657 + t705 + t60 * t519 / 0.2e1 + t864 / 0.2e1 + t658;
t18 = t519 * t703 + t706 + t859 / 0.2e1 + t862 / 0.2e1 + t668;
t12 = t219 * t671 + t60 * t659 + t590 - t591;
t11 = t60 * t665 + t693 - t805 / 0.2e1 - t534;
t4 = (-t696 + t795) * t893 - t812 / 0.2e1 + (t804 - t862) * t873 + t30 * t876 + t219 * t670 + t506 * t292 + t67 * t659 + t60 * t653 + pkin(11) * t342 + t704 + t857 / 0.2e1;
t3 = (t786 + t864) * t874 + t29 * t876 + t217 * t670 + t506 * t633 + t67 * t664 + t60 * t663 + t519 * pkin(11) * t661 - t542 + t593;
t25 = [0, 0, 0, -t516 * t624, -t518 * t624, t471 * qJD(2), t409 * qJD(2), -qJD(3) * t813, t313 * qJD(3), t435 * t552, t437 * t552, 0, qJD(2) * t334 + qJD(3) * t161, qJD(2) * t335 + qJD(3) * t160, qJD(2) * t157 + qJD(3) * t21 + qJD(4) * t153, qJD(2) * t43 + qJD(3) * t24 + qJD(4) * t48 (-t375 * t707 - t744) * t317, -qJD(3) * t125 + qJD(5) * t152, qJD(3) * t134 - t315 * t743, -qJD(3) * t133 - t317 * t743, t375 * t902 * qJD(3), qJD(2) * t145 + qJD(3) * t15 - qJD(4) * t132 + qJD(5) * t32, qJD(2) * t146 + qJD(3) * t16 + qJD(4) * t135 + qJD(5) * t31 (qJD(3) * t241 - qJD(6) * t217 - t315 * t740) * t219, qJD(3) * t53 + qJD(5) * t78 + qJD(6) * t85, qJD(3) * t89 + qJD(5) * t98 - t217 * t738, qJD(3) * t88 - qJD(5) * t97 - t219 * t738 (qJD(5) * t317 - t375 * t709) * t315, qJD(2) * t95 + qJD(3) * t5 + qJD(4) * t87 + qJD(5) * t7 + qJD(6) * t14, qJD(2) * t96 + qJD(3) * t6 + qJD(4) * t90 + qJD(5) * t8 + qJD(6) * t13; 0, 0, 0, -t598, -t597, t710, t711, 0, 0, 0, 0, 0, qJD(3) * t329 + t748, qJD(3) * t331 + t747, t117 + t752, t814 + (t399 * t465 + t400 * t466 + t630 * t853) * qJD(2) + t23 * qJD(3) + t184 * qJD(4), 0, 0, 0, 0, 0, qJD(3) * t100 + qJD(5) * t151 + t756, qJD(3) * t101 + qJD(5) * t150 + t755, 0, 0, 0, 0, 0, qJD(3) * t40 + qJD(5) * t50 + qJD(6) * t94 + t839, qJD(3) * t41 + qJD(5) * t51 + qJD(6) * t93 + t838; 0, 0, 0, 0, 0, 0, 0, -t682, t716, t539 * t435, t539 * t437, 0, qJD(2) * t329 + qJD(3) * t281 + t750, qJD(2) * t331 + qJD(3) * t280 + t751 (t375 * t852 - t515 * t902) * t866 - t606, t828 + t23 * qJD(2) + (-t154 * t852 + t155 * t515) * t866 + t186 * qJD(4), t899 - (qJD(1) * t317 + t709) * t908, -t375 * t901 + t141 - t726, t709 * t902 + t758 + t914, t238 + t365 - t759, t570, t835 + t100 * qJD(2) + (-t154 * t523 + t520 * t609) * qJD(3) + t38 * qJD(5), t834 + t101 * qJD(2) + (t154 * t520 + t523 * t609) * qJD(3) + t36 * qJD(5), t105 * qJD(5) + t119 + (t686 + t749) * t241, t769 + t44 * qJD(5) - t81 + (-t240 * t522 - t824) * t709, t765 + (-t350 - t230) * qJD(3) + t73 * qJD(5) + t108 * qJD(6), t766 + (t349 + t826) * qJD(3) + t69 * qJD(5) + t115 * qJD(6), -t899 - (-t628 - t707) * t790, -t33 * t707 + t865 + t40 * qJD(2) + t3 * qJD(5) + t12 * qJD(6) + (t240 * t506 + t375 * t439 + t857) * t709, t34 * t707 + t860 + t41 * qJD(2) + t4 * qJD(5) + t11 * qJD(6) + (t241 * t506 + t375 * t440 + t856) * t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t725, qJD(2) * t184 + qJD(3) * t186 + t846, 0, 0, 0, 0, 0, t238 - t760, t757 + t914, 0, 0, 0, 0, 0, qJD(5) * t72 + qJD(6) * t114 + t843, qJD(5) * t123 + qJD(6) * t111 + t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571, t601, qJD(3) * t913 + t315 * t638, t245 * qJD(3) + t317 * t638, t366, qJD(2) * t151 + qJD(3) * t38 + qJD(4) * t245 - qJD(5) * t67 + t847, qJD(2) * t150 + qJD(3) * t36 + qJD(4) * t913 + qJD(5) * t66 + t848, t105 * qJD(3) + t121 + (-t742 - t749) * t172, t44 * qJD(3) - t499 * t744 + t767 - t83, qJD(3) * t73 + t317 * t742 + t836, qJD(3) * t69 + t317 * t740 - t837, t543, t858 + t50 * qJD(2) + t3 * qJD(3) + t72 * qJD(4) + (t519 * t622 - t67 * t522) * qJD(5) + t20 * qJD(6), t855 + t51 * qJD(2) + t4 * qJD(3) + t123 * qJD(4) + (t67 * t519 + t522 * t622) * qJD(5) + t18 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, t560, t108 * qJD(3) + t217 * t637, t115 * qJD(3) + t219 * t637, t216, qJD(2) * t94 + qJD(3) * t12 + qJD(4) * t114 + qJD(5) * t20 - qJD(6) * t30 + t849, qJD(2) * t93 + qJD(3) * t11 + qJD(4) * t111 + qJD(5) * t18 + qJD(6) * t29 + t850; 0, 0, 0, t598, t597, -t710, -t711, 0, 0, 0, 0, 0, -qJD(3) * t328 - t748, qJD(3) * t330 - t747, t117 - t752, -qJD(3) * t22 - qJD(4) * t183 - t814, 0, 0, 0, 0, 0, qJD(3) * t99 - qJD(5) * t148 - t756, qJD(3) * t102 - qJD(5) * t149 - t755, 0, 0, 0, 0, 0, qJD(3) * t39 + qJD(5) * t49 - qJD(6) * t91 - t839, qJD(3) * t42 + qJD(5) * t52 - qJD(6) * t92 - t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t643 - t714, -qJD(3) * t626 + t713, t728, -t829 + (-t465 * t515 - t466 * t852) * t866, 0, 0, 0, 0, 0, t405 * qJD(5) - t466 * t707 + t764, qJD(5) * t406 + t466 * t709 + t761, 0, 0, 0, 0, 0, t818 + (-t401 * t523 - t512 * t797) * qJD(3) + t179 * qJD(5) + t253 * qJD(6), t815 + (t402 * t523 - t465 * t777) * qJD(3) + t181 * qJD(5) + t252 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t405 - qJD(5) * t442 - t754, qJD(3) * t406 + qJD(5) * t441 - t753, 0, 0, 0, 0, 0, qJD(3) * t179 + qJD(6) * t382 - t442 * t740 + t845, qJD(3) * t181 + qJD(6) * t383 + t442 * t742 + t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t253 + qJD(5) * t382 - qJD(6) * t398 - t841, qJD(3) * t252 + qJD(5) * t383 + qJD(6) * t397 - t840; 0, 0, 0, 0, 0, 0, 0, t682, -t716, -t435 * t551, -t437 * t551, 0, qJD(2) * t328 - t750, -qJD(2) * t330 - t751, t606, qJD(2) * t22 + qJD(4) * t185 - t828, t317 * t375 * t745 + t899, t141 + t726, qJD(5) * t247 - t758, t237 + t759, -t570, -t99 * qJD(2) - qJD(4) * t771 + t37 * qJD(5) - t835, -qJD(2) * t102 + qJD(4) * t243 + qJD(5) * t35 - t834, qJD(5) * t106 - t241 * t749 + t119, qJD(5) * t45 - t769 - t81, -qJD(5) * t68 + qJD(6) * t109 - t765, qJD(5) * t70 - qJD(6) * t113 - t766, -t628 * t790 - t899, -qJD(2) * t39 - qJD(4) * t116 - qJD(5) * t1 - qJD(6) * t9 - t865, -qJD(2) * t42 - qJD(4) * t159 - qJD(5) * t2 - qJD(6) * t10 - t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t714, -t713, -t728, t829, 0, 0, 0, 0, 0, -t764, -t761, 0, 0, 0, 0, 0, qJD(5) * t178 - qJD(6) * t250 - t818, -qJD(5) * t180 - qJD(6) * t251 - t815; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t680, t500 * qJD(5), 0, 0, 0, t507 * t741, t507 * t739, -t512 * t681 + t513 * t680, -t478 * qJD(6) - 0.2e1 * t523 * t635, -t480 * qJD(5) + t520 * t684, t479 * qJD(5) + t520 * t683, -t680, -qJD(5) * t345 - qJD(6) * t408, qJD(5) * t346 + qJD(6) * t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, 0, 0, 0, 0, 0, -t678, t719, 0, 0, 0, 0, 0, -t729, -t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639, t600, t718 + t739, t223, -t712, -t506 * t739 - t573, t506 * t741 - t574, t734 - t468 + (t513 * t709 + t685) * t523, t811 + t485 + (-0.2e1 * t634 + t900) * t523, t503 + t604, t605 + t679, -t566 (t519 * t621 - t694) * qJD(5) + t411 * qJD(6) + t558 (t522 * t621 + t697) * qJD(5) + t410 * qJD(6) + t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t536, -t538, t519 * t603 + t733, t522 * t603 - t730, qJD(1) * t661 + t508, qJD(5) * t411 - qJD(6) * t440 - t556, qJD(5) * t410 + qJD(6) * t439 - t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t725, qJD(2) * t183 - qJD(3) * t185 - t846, 0, 0, 0, 0, 0, t237 + t365 + t760, -qJD(3) * t243 + qJD(5) * t248 - t757, 0, 0, 0, 0, 0, qJD(3) * t116 + qJD(5) * t71 - qJD(6) * t112 - t843, qJD(3) * t159 - qJD(5) * t122 + qJD(6) * t110 - t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, 0, 0, 0, 0, 0, t678, -t719, 0, 0, 0, 0, 0, t729, t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t717 - t739, 0, 0, 0, 0, 0, -t679 - t684 + t768, t503 - t683 - t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t519 * t739 - t522 * t708 - t731, t519 * t708 - t522 * t739 + t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571, -t601, -qJD(3) * t247 + t375 * t715, -qJD(3) * t244 + t317 * t746, t366, qJD(2) * t148 - qJD(3) * t37 - qJD(4) * t244 - t847, qJD(2) * t149 - qJD(3) * t35 - qJD(4) * t248 - t848, -qJD(3) * t106 + t522 * t688 + t121, -qJD(3) * t45 - t767 - t83, qJD(3) * t68 + qJD(6) * t172 - t836, -qJD(3) * t70 - qJD(6) * t168 + t837, -t543, -qJD(2) * t49 + qJD(3) * t1 - qJD(4) * t71 + qJD(6) * t19 - t858, -qJD(2) * t52 + qJD(3) * t2 + qJD(4) * t122 + qJD(6) * t17 - t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754, t753, 0, 0, 0, 0, 0, -qJD(3) * t178 - t845, qJD(3) * t180 - t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t639, -t600, -t718, -t239, t712, t573, t574, -t504 * t513 - t468 - t734, t523 * t619 + t485 - t811, -t604 - t683, -t605 + t684, t566, qJD(6) * t445 - t558, -qJD(6) * t444 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t717, 0, 0, 0, 0, 0, -t768, t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t681, t499 * qJD(6), 0, 0, 0, -pkin(5) * t737, -pkin(5) * t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544, -t537, -t522 * t636 + t722, t519 * t636 - t723, -t592, -pkin(11) * t736 - t547, pkin(11) * t737 - t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, -t560, -qJD(3) * t109 - qJD(5) * t172 + t217 * t715, qJD(3) * t113 + qJD(5) * t168 + t688, t216, qJD(2) * t91 + qJD(3) * t9 + qJD(4) * t112 - qJD(5) * t19 - t849, qJD(2) * t92 + qJD(3) * t10 - qJD(4) * t110 - qJD(5) * t17 - t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t250 + t841, qJD(3) * t251 + t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, t538, -t733 + (-t519 * t709 + t740) * t523, t730 + (-t686 - t742) * t523, qJD(1) * t660 + t508, -qJD(5) * t445 + t556, qJD(5) * t444 + t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t731, -t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t544, t537, t522 * t707 - t722, -t519 * t707 + t723, t592, t547, t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
