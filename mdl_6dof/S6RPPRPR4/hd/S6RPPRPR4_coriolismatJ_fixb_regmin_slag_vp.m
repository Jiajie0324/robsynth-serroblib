% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:47:12
% EndTime: 2019-03-09 01:47:18
% DurationCPUTime: 2.51s
% Computational Cost: add. (3270->236), mult. (6295->375), div. (0->0), fcn. (6853->8), ass. (0->212)
t203 = cos(qJ(4));
t198 = sin(pkin(9));
t199 = cos(pkin(9));
t204 = -pkin(1) - pkin(2);
t284 = t199 * qJ(2) + t198 * t204;
t177 = -pkin(7) + t284;
t285 = qJ(5) - t177;
t147 = t285 * t203;
t197 = sin(pkin(10));
t201 = sin(qJ(4));
t235 = t285 * t201;
t322 = cos(pkin(10));
t60 = -t147 * t197 - t322 * t235;
t336 = t60 / 0.2e1;
t237 = t322 * t201;
t298 = t197 * t203;
t174 = t237 + t298;
t202 = cos(qJ(6));
t275 = qJD(4) * t202;
t166 = t174 * t275;
t200 = sin(qJ(6));
t213 = -t197 * t201 + t322 * t203;
t102 = t213 * t200;
t84 = t102 * qJD(6);
t340 = -t84 - t166;
t206 = -t322 * t147 + t197 * t235;
t325 = t206 * t200;
t324 = t206 * t202;
t172 = t174 ^ 2;
t337 = t213 ^ 2;
t339 = t172 + t337;
t338 = 0.2e1 * t336;
t195 = t200 ^ 2;
t196 = t202 ^ 2;
t184 = t196 - t195;
t98 = t200 * t174;
t234 = 0.2e1 * t202 * t98;
t210 = qJD(1) * t234 + qJD(4) * t184;
t151 = t213 * t199;
t333 = t151 / 0.2e1;
t332 = -t213 / 0.2e1;
t331 = t198 / 0.2e1;
t330 = t201 * pkin(4);
t328 = qJD(4) * pkin(4);
t103 = -pkin(5) * t174 + pkin(8) * t213 - t330;
t292 = t202 * t103;
t233 = -t198 * qJ(2) + t199 * t204;
t176 = pkin(3) - t233;
t167 = t203 * pkin(4) + t176;
t205 = pkin(5) * t213 + t174 * pkin(8) + t167;
t30 = -t202 * t205 + t325;
t2 = (t30 - t325) * t174 + t292 * t213;
t327 = t2 * qJD(1);
t297 = t200 * t103;
t31 = t200 * t205 + t324;
t3 = (t31 - t324) * t174 - t297 * t213;
t326 = t3 * qJD(1);
t13 = t213 * t30 + t60 * t98;
t321 = qJD(1) * t13;
t300 = t174 * t202;
t14 = -t213 * t31 - t60 * t300;
t320 = qJD(1) * t14;
t148 = t213 * t198;
t296 = t200 * t148;
t124 = t199 * t202 + t296;
t220 = (t124 / 0.2e1 - t296 / 0.2e1) * t174;
t149 = t174 * t199;
t303 = t149 * t202;
t15 = t303 / 0.2e1 + t220;
t319 = qJD(1) * t15;
t291 = t202 * t148;
t125 = -t199 * t200 + t291;
t219 = (t125 / 0.2e1 - t291 / 0.2e1) * t174;
t304 = t149 * t200;
t18 = -t304 / 0.2e1 + t219;
t318 = qJD(1) * t18;
t25 = -t60 * t174 - t206 * t213;
t317 = qJD(1) * t25;
t150 = t174 * t198;
t302 = t150 * t174;
t241 = t302 / 0.2e1;
t229 = t331 + t241;
t295 = t200 * t151;
t240 = -t295 / 0.2e1;
t306 = t125 * t213;
t26 = t240 + t306 / 0.2e1 + t229 * t202;
t316 = qJD(1) * t26;
t290 = t202 * t151;
t239 = -t290 / 0.2e1;
t307 = t124 * t213;
t27 = t239 - t307 / 0.2e1 - t229 * t200;
t315 = qJD(1) * t27;
t289 = t202 * t198;
t36 = (t289 - t295) * t213 - t149 * t98;
t314 = qJD(1) * t36;
t294 = t200 * t198;
t37 = -(t290 + t294) * t213 - t149 * t300;
t313 = qJD(1) * t37;
t45 = t149 * t332 + t174 * t333;
t312 = qJD(1) * t45;
t46 = -t149 * t174 - t151 * t213;
t311 = qJD(1) * t46;
t259 = t172 - t337;
t64 = t259 * t200;
t310 = qJD(1) * t64;
t65 = t339 * t200;
t309 = qJD(1) * t65;
t66 = t259 * t202;
t308 = qJD(1) * t66;
t305 = t148 * t213;
t301 = t213 * t197;
t293 = t201 * t199;
t39 = t305 / 0.2e1 + t229;
t288 = t39 * qJD(1);
t238 = t322 * t174;
t208 = -t301 / 0.2e1 + t238 / 0.2e1;
t76 = (t201 / 0.2e1 + t208) * pkin(4);
t287 = t76 * qJD(1);
t286 = t98 * qJD(1);
t283 = qJ(2) * qJD(1);
t116 = t339 * t202;
t282 = qJD(1) * t116;
t281 = qJD(1) * t174;
t280 = qJD(1) * t176;
t279 = qJD(1) * t202;
t278 = qJD(1) * t203;
t277 = qJD(4) * t102;
t276 = qJD(4) * t200;
t274 = qJD(5) * t202;
t101 = t213 * t202;
t273 = qJD(6) * t101;
t272 = qJD(6) * t200;
t271 = qJD(6) * t202;
t270 = t101 * qJD(1);
t85 = t102 * qJD(1);
t117 = -t233 * t198 + t284 * t199;
t269 = t117 * qJD(1);
t268 = t339 * qJD(1);
t171 = t237 / 0.2e1 + t298 / 0.2e1;
t267 = t171 * qJD(1);
t185 = -t201 ^ 2 + t203 ^ 2;
t266 = t185 * qJD(1);
t265 = t198 * qJD(1);
t264 = t198 * qJD(2);
t263 = t199 * qJD(1);
t262 = t199 * qJD(2);
t261 = t201 * qJD(4);
t260 = t203 * qJD(4);
t257 = -t60 / 0.2e1 + t336;
t255 = t213 * t281;
t254 = t196 * t281;
t253 = t174 * t276;
t252 = t200 * t275;
t251 = t174 * t272;
t250 = t174 * t271;
t249 = t213 * t174 * qJD(4);
t248 = t203 * t263;
t247 = t200 * t271;
t246 = t201 * t265;
t245 = t201 * t263;
t244 = t201 * t278;
t243 = t174 * t279;
t242 = t203 * t265;
t109 = -t302 / 0.2e1;
t232 = -qJD(1) * t213 - qJD(6);
t231 = qJD(4) * t234;
t6 = t257 * t174;
t8 = t167 * t330;
t228 = -t8 * qJD(1) + t6 * qJD(3);
t24 = t109 + t241;
t227 = -t6 * qJD(1) - t24 * qJD(2);
t209 = t197 * t333 - t149 * t322 / 0.2e1;
t4 = -t257 * t148 + (-t293 / 0.2e1 + t209) * pkin(4);
t226 = t4 * qJD(1) - t24 * qJD(3);
t20 = t149 * t60 + t151 * t206 + t167 * t198;
t225 = t20 * qJD(1) + t45 * qJD(3);
t187 = pkin(4) * t197 + pkin(8);
t188 = -t322 * pkin(4) - pkin(5);
t224 = t174 * t187 - t188 * t213;
t223 = t174 * t232;
t222 = -t262 + t280;
t218 = t187 * t332 - t188 * t174 / 0.2e1;
t207 = -t103 / 0.2e1 + t218;
t9 = -t207 * t200 + t257 * t202;
t221 = -qJD(1) * t9 - t188 * t275;
t11 = t257 * t200 + t207 * t202;
t217 = -qJD(1) * t11 - t188 * t276;
t95 = (-t195 / 0.2e1 + t196 / 0.2e1) * t174;
t216 = -qJD(1) * t95 + t252;
t215 = t202 * t223;
t214 = -qJD(6) * t171 - t255;
t212 = t172 * t200 * t279 + qJD(4) * t95;
t115 = t184 * t172;
t211 = -qJD(1) * t115 + t231;
t168 = t171 * qJD(4);
t86 = t101 * qJD(4);
t80 = t95 * qJD(6);
t77 = -t330 / 0.2e1 + t208 * pkin(4);
t75 = -t85 - t272;
t70 = t150 * t202;
t69 = t150 * t200;
t40 = -t305 / 0.2e1 + t109 + t331;
t29 = -t306 / 0.2e1 + t202 * t109 + t240 + t289 / 0.2e1;
t28 = t307 / 0.2e1 + t200 * t241 + t239 - t294 / 0.2e1;
t22 = t24 * qJD(4);
t17 = t304 / 0.2e1 + t219;
t16 = -t303 / 0.2e1 + t220;
t12 = t292 / 0.2e1 + t218 * t202 + t338 * t200;
t10 = -t297 / 0.2e1 - t218 * t200 + t338 * t202;
t5 = (t293 / 0.2e1 + t209) * pkin(4);
t1 = qJD(2) * t45 + qJD(4) * t6;
t7 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), t264, t262, t117 * qJD(2), t201 * t260, t185 * qJD(4), 0, 0, 0, -t176 * t261 + t203 * t264, -t176 * t260 - t201 * t264, qJD(2) * t46 + qJD(5) * t339, qJD(2) * t20 - qJD(4) * t8 + qJD(5) * t25, -t172 * t247 + t196 * t249, -qJD(6) * t115 - t213 * t231, qJD(4) * t66 + t213 * t251, -qJD(4) * t64 + t213 * t250, -t249, qJD(2) * t36 + qJD(4) * t2 + qJD(5) * t65 + qJD(6) * t14, qJD(2) * t37 + qJD(4) * t3 + qJD(5) * t116 + qJD(6) * t13; 0, 0, 0, 0, qJD(1), t283, t265, t263, t269, 0, 0, 0, 0, 0, t242, -t246, t311 (t148 * t151 + t149 * t150 - t198 * t199) * qJD(2) + t5 * qJD(4) + t40 * qJD(5) + t225, 0, 0, 0, 0, 0, qJD(4) * t16 + qJD(6) * t29 + t314, qJD(4) * t17 + qJD(6) * t28 + t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t266, -t260, t261, 0, -t177 * t260 - t201 * t280, -t176 * t278 + t177 * t261 (t174 * t197 + t213 * t322) * t328, t5 * qJD(2) + (-t197 * t60 - t206 * t322) * t328 + t77 * qJD(5) + t228, -t80 - (t252 - t254) * t213, qJD(6) * t234 - t210 * t213, -t253 + t308, -t166 - t310, t214, t327 + t16 * qJD(2) + (t200 * t224 - t324) * qJD(4) + t12 * qJD(6), t326 + t17 * qJD(2) + (t202 * t224 + t325) * qJD(4) + t10 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, qJD(2) * t40 + qJD(4) * t77 + t317, 0, 0, 0, 0, 0, t309, t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, t211, -t200 * t223, -t215, -t168, qJD(2) * t29 + qJD(4) * t12 - qJD(6) * t31 + t320, qJD(2) * t28 + qJD(4) * t10 + qJD(6) * t30 + t321; 0, 0, 0, 0, -qJD(1), -t283, -t265, -t263, -t269, 0, 0, 0, 0, 0, t199 * t261 - t242, t199 * t260 + t246, -t311, -qJD(4) * t4 - qJD(5) * t39 - t225, 0, 0, 0, 0, 0, qJD(4) * t15 - qJD(6) * t26 - t314, qJD(4) * t18 - qJD(6) * t27 - t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 - t312, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198 * t260 + t245, t198 * t261 + t248, 0 (-t322 * t148 - t150 * t197) * t328 - t226, 0, 0, 0, 0, 0, qJD(6) * t69 - t148 * t275 + t319, qJD(6) * t70 + t148 * t276 + t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t288, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t69 - qJD(6) * t125 - t316, qJD(4) * t70 + qJD(6) * t124 - t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22 + t312, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t260, 0 (-t238 + t301) * t328 - t227, 0, 0, 0, 0, 0, t340, t253 - t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250 - t277, -t86 + t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, -t266, 0, 0, 0, t222 * t201, t222 * t203, 0, qJD(2) * t4 + qJD(5) * t76 - t228, -t213 * t254 - t80, -0.2e1 * t200 * t215, t273 - t308, -t84 + t310, -t214, -qJD(2) * t15 + qJD(6) * t11 + t174 * t274 - t327, -qJD(2) * t18 - qJD(5) * t98 + qJD(6) * t9 - t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245, -t248, 0, t226, 0, 0, 0, 0, 0, -t319, -t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247, t184 * qJD(6), 0, 0, 0, t188 * t272, t188 * t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, 0, 0, 0, 0, 0, t243, -t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, t210, t270 + t271, t75, t267, -t187 * t271 - t217, t187 * t272 - t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, qJD(2) * t39 - qJD(4) * t76 - t317, 0, 0, 0, 0, 0, -t309 + t340, qJD(4) * t98 - t213 * t271 - t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, 0, 0, 0, 0, 0, -t243, t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t232 * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, -t211, -t200 * t255 - t86, -t213 * t243 + t277, -t168, qJD(2) * t26 - qJD(4) * t11 + qJD(5) * t102 - t320, qJD(2) * t27 - qJD(4) * t9 + t213 * t274 - t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, -t210, -t270, t85, -t267, t217, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t213 * t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
