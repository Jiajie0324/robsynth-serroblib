% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:16
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRPR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR4_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR4_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR4_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:16:37
% EndTime: 2019-05-05 14:16:41
% DurationCPUTime: 3.57s
% Computational Cost: add. (16509->292), mult. (33467->324), div. (0->0), fcn. (19801->10), ass. (0->183)
t1462 = sin(pkin(10));
t1464 = cos(pkin(10));
t1472 = cos(qJ(4));
t1502 = qJD(1) * t1472;
t1469 = sin(qJ(4));
t1503 = qJD(1) * t1469;
t1425 = t1462 * t1503 - t1464 * t1502;
t1422 = -qJD(6) + t1425;
t1511 = qJD(6) - t1422;
t1426 = (-t1462 * t1472 - t1464 * t1469) * qJD(1);
t1468 = sin(qJ(6));
t1471 = cos(qJ(6));
t1408 = -t1471 * qJD(4) + t1468 * t1426;
t1510 = t1408 ^ 2;
t1410 = t1468 * qJD(4) + t1471 * t1426;
t1509 = t1410 ^ 2;
t1508 = t1422 ^ 2;
t1507 = t1425 ^ 2;
t1506 = t1426 ^ 2;
t1505 = -2 * qJD(5);
t1504 = -pkin(1) - pkin(2);
t1501 = qJD(4) * t1425;
t1500 = qJD(4) * t1426;
t1499 = t1410 * t1408;
t1498 = t1425 * t1426;
t1459 = t1472 ^ 2;
t1475 = qJD(1) ^ 2;
t1497 = t1459 * t1475;
t1470 = sin(qJ(1));
t1473 = cos(qJ(1));
t1445 = -t1473 * g(1) - t1470 * g(2);
t1479 = qJDD(1) * qJ(2) + 0.2e1 * qJD(2) * qJD(1) + t1445;
t1417 = t1504 * t1475 + t1479;
t1463 = sin(pkin(9));
t1465 = cos(pkin(9));
t1444 = t1470 * g(1) - t1473 * g(2);
t1478 = -t1475 * qJ(2) + qJDD(2) - t1444;
t1477 = t1504 * qJDD(1) + t1478;
t1389 = t1465 * t1417 + t1463 * t1477;
t1387 = -t1475 * pkin(3) - qJDD(1) * pkin(7) + t1389;
t1496 = t1469 * t1387;
t1495 = t1469 * t1475;
t1494 = qJD(6) + t1422;
t1460 = g(3) + qJDD(3);
t1381 = t1472 * t1387 + t1469 * t1460;
t1458 = t1469 ^ 2;
t1493 = t1458 + t1459;
t1492 = t1469 * qJDD(1);
t1491 = t1472 * qJDD(1);
t1490 = qJD(4) * t1503;
t1489 = qJD(4) * t1502;
t1435 = t1490 - t1491;
t1480 = qJD(4) * pkin(4) + qJ(5) * t1503;
t1372 = -pkin(4) * t1497 + t1435 * qJ(5) - qJD(4) * t1480 + t1381;
t1433 = -t1489 - t1492;
t1476 = qJDD(4) * pkin(4) - t1433 * qJ(5) - t1496 + (-qJ(5) * qJD(1) * qJD(4) + pkin(4) * t1495 + t1460) * t1472;
t1341 = 0.2e1 * qJD(5) * t1425 + t1464 * t1372 + t1462 * t1476;
t1404 = t1464 * t1433 + t1462 * t1435;
t1488 = -t1404 - t1501;
t1487 = t1462 * t1372 - t1464 * t1476;
t1486 = t1471 * qJDD(4) - t1468 * t1404;
t1388 = -t1463 * t1417 + t1465 * t1477;
t1485 = t1462 * t1433 - t1464 * t1435;
t1436 = -t1463 * qJDD(1) + t1465 * t1475;
t1437 = t1465 * qJDD(1) + t1463 * t1475;
t1484 = -t1470 * t1436 + t1473 * t1437;
t1483 = -qJDD(6) - t1485;
t1482 = t1473 * t1436 + t1470 * t1437;
t1481 = -t1468 * qJDD(4) - t1471 * t1404;
t1391 = t1485 + t1500;
t1386 = qJDD(1) * pkin(3) - t1475 * pkin(7) - t1388;
t1373 = -t1435 * pkin(4) - qJ(5) * t1497 - t1480 * t1503 + qJDD(5) + t1386;
t1474 = qJD(4) ^ 2;
t1449 = t1472 * t1495;
t1448 = -t1474 - t1497;
t1447 = -t1458 * t1475 - t1474;
t1443 = -qJDD(4) + t1449;
t1442 = qJDD(4) + t1449;
t1441 = t1493 * t1475;
t1440 = t1473 * qJDD(1) - t1470 * t1475;
t1439 = t1470 * qJDD(1) + t1473 * t1475;
t1438 = t1493 * qJDD(1);
t1434 = -0.2e1 * t1490 + t1491;
t1432 = 0.2e1 * t1489 + t1492;
t1424 = qJDD(1) * pkin(1) - t1478;
t1419 = -t1475 * pkin(1) + t1479;
t1418 = -t1474 - t1506;
t1414 = t1472 * t1443 - t1469 * t1447;
t1413 = -t1469 * t1442 + t1472 * t1448;
t1412 = t1469 * t1443 + t1472 * t1447;
t1411 = t1472 * t1442 + t1469 * t1448;
t1406 = -t1465 * t1438 - t1463 * t1441;
t1405 = -t1463 * t1438 + t1465 * t1441;
t1403 = -qJDD(4) + t1498;
t1402 = qJDD(4) + t1498;
t1401 = -t1474 - t1507;
t1400 = -t1425 * pkin(5) - t1426 * pkin(8);
t1398 = t1465 * t1414 - t1463 * t1432;
t1397 = t1465 * t1413 + t1463 * t1434;
t1396 = t1463 * t1414 + t1465 * t1432;
t1395 = t1463 * t1413 - t1465 * t1434;
t1394 = -t1404 + t1501;
t1392 = -t1485 + t1500;
t1390 = -t1506 - t1507;
t1384 = -t1508 - t1509;
t1383 = t1464 * t1403 - t1462 * t1418;
t1382 = t1462 * t1403 + t1464 * t1418;
t1380 = t1472 * t1460 - t1496;
t1379 = -t1508 - t1510;
t1378 = -t1509 - t1510;
t1377 = t1464 * t1401 - t1462 * t1402;
t1376 = t1462 * t1401 + t1464 * t1402;
t1375 = t1483 - t1499;
t1374 = -t1483 - t1499;
t1368 = t1464 * t1392 - t1462 * t1394;
t1367 = t1462 * t1392 + t1464 * t1394;
t1366 = -t1463 * t1388 + t1465 * t1389;
t1365 = t1465 * t1388 + t1463 * t1389;
t1364 = t1494 * t1408 + t1481;
t1363 = -t1408 * t1511 - t1481;
t1362 = -t1494 * t1410 + t1486;
t1361 = t1410 * t1511 - t1486;
t1360 = -t1469 * t1382 + t1472 * t1383;
t1359 = t1472 * t1382 + t1469 * t1383;
t1358 = -t1469 * t1380 + t1472 * t1381;
t1357 = t1472 * t1380 + t1469 * t1381;
t1356 = t1471 * t1375 - t1468 * t1384;
t1355 = t1468 * t1375 + t1471 * t1384;
t1354 = -t1468 * t1374 + t1471 * t1379;
t1353 = t1471 * t1374 + t1468 * t1379;
t1352 = -t1469 * t1376 + t1472 * t1377;
t1351 = t1472 * t1376 + t1469 * t1377;
t1350 = t1465 * t1360 - t1463 * t1488;
t1349 = t1463 * t1360 + t1465 * t1488;
t1348 = t1391 * pkin(5) + t1488 * pkin(8) + t1373;
t1347 = t1465 * t1358 + t1463 * t1386;
t1346 = t1463 * t1358 - t1465 * t1386;
t1345 = -t1469 * t1367 + t1472 * t1368;
t1344 = t1472 * t1367 + t1469 * t1368;
t1343 = t1465 * t1352 + t1463 * t1391;
t1342 = t1463 * t1352 - t1465 * t1391;
t1340 = t1426 * t1505 - t1487;
t1339 = t1471 * t1362 - t1468 * t1364;
t1338 = t1468 * t1362 + t1471 * t1364;
t1337 = t1464 * t1356 + t1462 * t1363;
t1336 = t1462 * t1356 - t1464 * t1363;
t1335 = t1464 * t1354 + t1462 * t1361;
t1334 = t1462 * t1354 - t1464 * t1361;
t1333 = t1465 * t1345 + t1463 * t1390;
t1332 = t1463 * t1345 - t1465 * t1390;
t1331 = -t1474 * pkin(5) + qJDD(4) * pkin(8) + t1425 * t1400 + t1341;
t1330 = -qJDD(4) * pkin(5) - t1474 * pkin(8) - (t1505 - t1400) * t1426 + t1487;
t1329 = t1464 * t1339 + t1462 * t1378;
t1328 = t1462 * t1339 - t1464 * t1378;
t1327 = -t1462 * t1340 + t1464 * t1341;
t1326 = t1464 * t1340 + t1462 * t1341;
t1325 = t1471 * t1331 + t1468 * t1348;
t1324 = -t1468 * t1331 + t1471 * t1348;
t1323 = -t1469 * t1336 + t1472 * t1337;
t1322 = t1472 * t1336 + t1469 * t1337;
t1321 = -t1469 * t1334 + t1472 * t1335;
t1320 = t1472 * t1334 + t1469 * t1335;
t1319 = -t1469 * t1328 + t1472 * t1329;
t1318 = t1472 * t1328 + t1469 * t1329;
t1317 = t1465 * t1323 + t1463 * t1355;
t1316 = t1463 * t1323 - t1465 * t1355;
t1315 = t1465 * t1321 + t1463 * t1353;
t1314 = t1463 * t1321 - t1465 * t1353;
t1313 = t1465 * t1319 + t1463 * t1338;
t1312 = t1463 * t1319 - t1465 * t1338;
t1311 = -t1469 * t1326 + t1472 * t1327;
t1310 = t1472 * t1326 + t1469 * t1327;
t1309 = -t1468 * t1324 + t1471 * t1325;
t1308 = t1471 * t1324 + t1468 * t1325;
t1307 = t1465 * t1311 + t1463 * t1373;
t1306 = t1463 * t1311 - t1465 * t1373;
t1305 = t1464 * t1309 + t1462 * t1330;
t1304 = t1462 * t1309 - t1464 * t1330;
t1303 = -t1469 * t1304 + t1472 * t1305;
t1302 = t1472 * t1304 + t1469 * t1305;
t1301 = t1465 * t1303 + t1463 * t1308;
t1300 = t1463 * t1303 - t1465 * t1308;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1439, -t1440, 0, -t1470 * t1444 + t1473 * t1445, 0, 0, 0, 0, 0, 0, -t1439, 0, t1440, t1473 * t1419 - t1470 * t1424, 0, 0, 0, 0, 0, 0, -t1482, t1484, 0, t1470 * t1365 + t1473 * t1366, 0, 0, 0, 0, 0, 0, t1470 * t1395 + t1473 * t1397, t1470 * t1396 + t1473 * t1398, t1470 * t1405 + t1473 * t1406, t1470 * t1346 + t1473 * t1347, 0, 0, 0, 0, 0, 0, t1470 * t1342 + t1473 * t1343, t1470 * t1349 + t1473 * t1350, t1470 * t1332 + t1473 * t1333, t1470 * t1306 + t1473 * t1307, 0, 0, 0, 0, 0, 0, t1470 * t1314 + t1473 * t1315, t1470 * t1316 + t1473 * t1317, t1470 * t1312 + t1473 * t1313, t1470 * t1300 + t1473 * t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1440, -t1439, 0, t1473 * t1444 + t1470 * t1445, 0, 0, 0, 0, 0, 0, t1440, 0, t1439, t1470 * t1419 + t1473 * t1424, 0, 0, 0, 0, 0, 0, t1484, t1482, 0, -t1473 * t1365 + t1470 * t1366, 0, 0, 0, 0, 0, 0, -t1473 * t1395 + t1470 * t1397, -t1473 * t1396 + t1470 * t1398, -t1473 * t1405 + t1470 * t1406, -t1473 * t1346 + t1470 * t1347, 0, 0, 0, 0, 0, 0, -t1473 * t1342 + t1470 * t1343, -t1473 * t1349 + t1470 * t1350, -t1473 * t1332 + t1470 * t1333, -t1473 * t1306 + t1470 * t1307, 0, 0, 0, 0, 0, 0, -t1473 * t1314 + t1470 * t1315, -t1473 * t1316 + t1470 * t1317, -t1473 * t1312 + t1470 * t1313, -t1473 * t1300 + t1470 * t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1460, 0, 0, 0, 0, 0, 0, -t1411, -t1412, 0, -t1357, 0, 0, 0, 0, 0, 0, -t1351, -t1359, -t1344, -t1310, 0, 0, 0, 0, 0, 0, -t1320, -t1322, -t1318, -t1302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1475, -qJDD(1), 0, t1445, 0, 0, 0, 0, 0, 0, -t1475, 0, qJDD(1), t1419, 0, 0, 0, 0, 0, 0, -t1436, t1437, 0, t1366, 0, 0, 0, 0, 0, 0, t1397, t1398, t1406, t1347, 0, 0, 0, 0, 0, 0, t1343, t1350, t1333, t1307, 0, 0, 0, 0, 0, 0, t1315, t1317, t1313, t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1475, 0, t1444, 0, 0, 0, 0, 0, 0, qJDD(1), 0, t1475, t1424, 0, 0, 0, 0, 0, 0, t1437, t1436, 0, -t1365, 0, 0, 0, 0, 0, 0, -t1395, -t1396, -t1405, -t1346, 0, 0, 0, 0, 0, 0, -t1342, -t1349, -t1332, -t1306, 0, 0, 0, 0, 0, 0, -t1314, -t1316, -t1312, -t1300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1460, 0, 0, 0, 0, 0, 0, -t1411, -t1412, 0, -t1357, 0, 0, 0, 0, 0, 0, -t1351, -t1359, -t1344, -t1310, 0, 0, 0, 0, 0, 0, -t1320, -t1322, -t1318, -t1302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1475, 0, qJDD(1), t1419, 0, 0, 0, 0, 0, 0, -t1436, t1437, 0, t1366, 0, 0, 0, 0, 0, 0, t1397, t1398, t1406, t1347, 0, 0, 0, 0, 0, 0, t1343, t1350, t1333, t1307, 0, 0, 0, 0, 0, 0, t1315, t1317, t1313, t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1460, 0, 0, 0, 0, 0, 0, -t1411, -t1412, 0, -t1357, 0, 0, 0, 0, 0, 0, -t1351, -t1359, -t1344, -t1310, 0, 0, 0, 0, 0, 0, -t1320, -t1322, -t1318, -t1302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), 0, -t1475, -t1424, 0, 0, 0, 0, 0, 0, -t1437, -t1436, 0, t1365, 0, 0, 0, 0, 0, 0, t1395, t1396, t1405, t1346, 0, 0, 0, 0, 0, 0, t1342, t1349, t1332, t1306, 0, 0, 0, 0, 0, 0, t1314, t1316, t1312, t1300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1475, qJDD(1), 0, t1389, 0, 0, 0, 0, 0, 0, t1413, t1414, -t1438, t1358, 0, 0, 0, 0, 0, 0, t1352, t1360, t1345, t1311, 0, 0, 0, 0, 0, 0, t1321, t1323, t1319, t1303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), -t1475, 0, t1388, 0, 0, 0, 0, 0, 0, -t1434, t1432, t1441, -t1386, 0, 0, 0, 0, 0, 0, -t1391, t1488, -t1390, -t1373, 0, 0, 0, 0, 0, 0, -t1353, -t1355, -t1338, -t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1460, 0, 0, 0, 0, 0, 0, t1411, t1412, 0, t1357, 0, 0, 0, 0, 0, 0, t1351, t1359, t1344, t1310, 0, 0, 0, 0, 0, 0, t1320, t1322, t1318, t1302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1448, t1443, -t1491, t1381, 0, 0, 0, 0, 0, 0, t1377, t1383, t1368, t1327, 0, 0, 0, 0, 0, 0, t1335, t1337, t1329, t1305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1442, t1447, t1492, t1380, 0, 0, 0, 0, 0, 0, t1376, t1382, t1367, t1326, 0, 0, 0, 0, 0, 0, t1334, t1336, t1328, t1304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1434, -t1432, -t1441, t1386, 0, 0, 0, 0, 0, 0, t1391, -t1488, t1390, t1373, 0, 0, 0, 0, 0, 0, t1353, t1355, t1338, t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1401, t1403, t1392, t1341, 0, 0, 0, 0, 0, 0, t1354, t1356, t1339, t1309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1402, t1418, t1394, t1340, 0, 0, 0, 0, 0, 0, -t1361, -t1363, -t1378, -t1330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1391, -t1488, t1390, t1373, 0, 0, 0, 0, 0, 0, t1353, t1355, t1338, t1308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1379, t1375, t1362, t1325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, t1384, t1364, t1324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1363, t1378, t1330;];
f_new_reg  = t1;
