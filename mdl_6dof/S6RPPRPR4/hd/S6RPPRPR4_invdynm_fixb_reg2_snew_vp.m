% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:16
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR4_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:16:18
% EndTime: 2019-05-05 14:16:37
% DurationCPUTime: 20.54s
% Computational Cost: add. (118361->824), mult. (239506->1007), div. (0->0), fcn. (140454->10), ass. (0->493)
t1153 = sin(pkin(10));
t1155 = cos(pkin(10));
t1163 = cos(qJ(4));
t1160 = sin(qJ(4));
t1261 = qJD(1) * t1160;
t1107 = -t1155 * t1163 * qJD(1) + t1153 * t1261;
t1108 = (-t1153 * t1163 - t1155 * t1160) * qJD(1);
t1252 = t1107 * t1108;
t1294 = qJDD(4) + t1252;
t1299 = t1153 * t1294;
t1298 = t1155 * t1294;
t1154 = sin(pkin(9));
t1156 = cos(pkin(9));
t1283 = qJD(1) ^ 2;
t1121 = -t1154 * qJDD(1) + t1156 * t1283;
t1151 = g(3) + qJDD(3);
t1088 = qJ(3) * t1121 + t1151 * t1156;
t1161 = sin(qJ(1));
t1164 = cos(qJ(1));
t1122 = qJDD(1) * t1156 + t1154 * t1283;
t1211 = qJ(3) * t1122 + t1151 * t1154;
t1285 = t1164 * t1121 + t1122 * t1161;
t1297 = -pkin(6) * t1285 + t1164 * t1088 + t1161 * t1211;
t1159 = sin(qJ(6));
t1162 = cos(qJ(6));
t1065 = -t1162 * qJD(4) + t1108 * t1159;
t1067 = qJD(4) * t1159 + t1108 * t1162;
t1019 = t1067 * t1065;
t1258 = qJD(4) * t1163;
t1227 = qJD(1) * t1258;
t1238 = t1160 * qJDD(1);
t1119 = -t1227 - t1238;
t1228 = qJD(4) * t1261;
t1237 = t1163 * qJDD(1);
t1192 = t1228 - t1237;
t1221 = t1119 * t1153 - t1155 * t1192;
t1052 = qJDD(6) + t1221;
t1286 = -t1019 + t1052;
t1296 = t1159 * t1286;
t1295 = t1162 * t1286;
t1259 = qJD(4) * t1108;
t1020 = t1221 + t1259;
t1148 = 0.2e1 * qJD(2) * qJD(1);
t1131 = t1164 * g(1) + t1161 * g(2);
t1149 = qJDD(1) * qJ(2);
t1205 = t1131 - t1149;
t1281 = pkin(1) + pkin(2);
t1083 = -t1281 * t1283 + t1148 - t1205;
t1130 = t1161 * g(1) - t1164 * g(2);
t1204 = -qJDD(2) + t1130;
t1175 = -qJ(2) * t1283 - t1204;
t1167 = -qJDD(1) * t1281 + t1175;
t1016 = t1154 * t1083 - t1156 * t1167;
t1017 = t1156 * t1083 + t1154 * t1167;
t1209 = t1016 * t1154 + t1017 * t1156;
t963 = t1016 * t1156 - t1017 * t1154;
t1293 = t1161 * t963 - t1164 * t1209;
t1292 = t1161 * t1209 + t1164 * t963;
t1058 = -t1121 * t1161 + t1164 * t1122;
t1291 = pkin(6) * t1058 + t1161 * t1088 - t1164 * t1211;
t1046 = -pkin(5) * t1107 - pkin(8) * t1108;
t1165 = qJD(4) ^ 2;
t1257 = qJD(5) * t1107;
t1094 = 0.2e1 * t1257;
t1214 = -qJDD(1) * pkin(7) + t1017;
t1239 = t1163 * t1151;
t1166 = -t1160 * t1214 + t1239 - t1119 * qJ(5) + qJDD(4) * pkin(4) + (-qJ(5) * t1258 + (pkin(4) * t1163 + pkin(3)) * t1261) * qJD(1);
t1191 = -pkin(3) * t1283 + t1214;
t1001 = t1160 * t1151 + t1163 * t1191;
t1282 = t1163 ^ 2;
t1147 = t1282 * t1283;
t1136 = -t1147 - t1165;
t974 = pkin(4) * t1136 - qJ(5) * t1237 + t1001;
t1269 = t1153 * t1166 + t1155 * t974;
t889 = t1094 + t1269;
t861 = -pkin(5) * t1165 + qJDD(4) * pkin(8) + t1046 * t1107 + t889;
t1055 = t1155 * t1119 + t1153 * t1192;
t1097 = qJD(4) * t1107;
t1023 = t1097 + t1055;
t1014 = qJDD(1) * pkin(3) - pkin(7) * t1283 + t1016;
t981 = qJDD(5) + t1014 - (qJD(4) * pkin(4) + qJ(5) * t1261) * t1261 - t1192 * pkin(4) - qJ(5) * t1147;
t900 = pkin(5) * t1020 - t1023 * pkin(8) + t981;
t830 = t1159 * t861 - t1162 * t900;
t831 = t1159 * t900 + t1162 * t861;
t789 = t1159 * t830 + t1162 * t831;
t1063 = t1065 ^ 2;
t1064 = t1067 ^ 2;
t1099 = -qJD(6) + t1107;
t1098 = t1099 ^ 2;
t1104 = t1107 ^ 2;
t1105 = t1108 ^ 2;
t1000 = t1160 * t1191 - t1239;
t929 = t1000 * t1163 - t1001 * t1160;
t1280 = pkin(3) * t929;
t1225 = t1153 * t974 - t1155 * t1166;
t888 = 0.2e1 * qJD(5) * t1108 + t1225;
t838 = t1153 * t889 - t1155 * t888;
t1279 = pkin(4) * t838;
t1022 = -t1221 + t1259;
t1024 = -t1097 + t1055;
t965 = t1022 * t1153 - t1024 * t1155;
t1278 = pkin(4) * t965;
t1277 = pkin(5) * t1153;
t1275 = pkin(7) * t1156;
t930 = t1160 * t1000 + t1163 * t1001;
t898 = t1014 * t1154 + t1156 * t930;
t1274 = qJ(3) * t898;
t1273 = qJ(3) * t963;
t1272 = qJ(3) * t1209;
t1271 = qJDD(1) * pkin(1);
t860 = -qJDD(4) * pkin(5) - t1165 * pkin(8) - (-0.2e1 * qJD(5) - t1046) * t1108 + t1225;
t1270 = -pkin(5) * t860 + pkin(8) * t789;
t1268 = t1153 * t981;
t1267 = t1155 * t981;
t857 = t1159 * t860;
t989 = t1019 + t1052;
t1266 = t1159 * t989;
t1265 = t1160 * t838;
t858 = t1162 * t860;
t1264 = t1162 * t989;
t1263 = t1163 * t838;
t1262 = qJD(1) * qJD(4);
t1150 = t1160 ^ 2;
t1260 = t1283 * t1150;
t1049 = qJDD(4) - t1252;
t1256 = t1049 * t1153;
t1255 = t1049 * t1155;
t1254 = t1099 * t1159;
t1253 = t1099 * t1162;
t1251 = t1107 * t1153;
t1250 = t1107 * t1155;
t1249 = t1108 * t1153;
t1248 = t1108 * t1155;
t1120 = 0.2e1 * t1228 - t1237;
t1068 = t1120 * t1163;
t1137 = t1163 * t1283 * t1160;
t1128 = qJDD(4) + t1137;
t1245 = t1128 * t1160;
t1244 = t1128 * t1163;
t1129 = qJDD(4) - t1137;
t1243 = t1129 * t1160;
t1242 = t1129 * t1163;
t1241 = t1160 * t1014;
t1240 = t1163 * t1014;
t1236 = -t1150 - t1282;
t1008 = -t1064 - t1098;
t926 = -t1008 * t1159 - t1264;
t1206 = -t1159 * qJDD(4) - t1162 * t1055;
t960 = (qJD(6) - t1099) * t1065 + t1206;
t1235 = pkin(5) * t960 + pkin(8) * t926 + t857;
t997 = -t1098 - t1063;
t923 = t1162 * t997 - t1296;
t1036 = t1099 * t1067;
t1223 = t1162 * qJDD(4) - t1159 * t1055;
t998 = -qJD(6) * t1067 + t1223;
t956 = t1036 + t998;
t1234 = pkin(5) * t956 + pkin(8) * t923 - t858;
t1233 = -pkin(5) * t1155 - pkin(4);
t1232 = t1153 * t1019;
t1231 = t1155 * t1019;
t1230 = t1154 * t1252;
t1229 = t1156 * t1252;
t897 = -t1014 * t1156 + t1154 * t930;
t1226 = -qJ(3) * t897 - t1154 * t1280;
t839 = t1153 * t888 + t1155 * t889;
t957 = (-qJD(6) - t1099) * t1067 + t1223;
t1035 = t1065 * t1099;
t999 = -qJD(6) * t1065 - t1206;
t959 = -t1035 + t999;
t886 = t1159 * t959 + t1162 * t957;
t994 = t1063 + t1064;
t1224 = pkin(5) * t994 + pkin(8) * t886 + t789;
t1093 = (pkin(1) * qJD(1) - 0.2e1 * qJD(2)) * qJD(1) + t1205;
t1101 = -t1175 + t1271;
t1222 = -t1164 * t1093 - t1101 * t1161;
t1220 = -t1130 * t1161 - t1164 * t1131;
t781 = t1153 * t789 - t1155 * t860;
t1219 = pkin(4) * t781 + t1270;
t1092 = -t1105 - t1165;
t1004 = t1092 * t1155 - t1256;
t1218 = pkin(4) * t1004 - t1269;
t1217 = t1154 * t1137;
t1216 = t1156 * t1137;
t1215 = pkin(3) * t1014 - pkin(7) * t930;
t1124 = qJDD(1) * t1161 + t1164 * t1283;
t1103 = -pkin(6) * t1124 + g(3) * t1164;
t1125 = qJDD(1) * t1164 - t1161 * t1283;
t1102 = pkin(6) * t1125 + g(3) * t1161;
t868 = t1153 * t926 + t1155 * t960;
t1213 = pkin(4) * t868 + t1235;
t864 = t1153 * t923 + t1155 * t956;
t1212 = pkin(4) * t864 + t1234;
t788 = t1159 * t831 - t1162 * t830;
t1210 = -pkin(3) * t1156 - pkin(7) * t1154 - pkin(2);
t1208 = t1093 * t1161 - t1101 * t1164;
t1207 = t1130 * t1164 - t1131 * t1161;
t782 = t1153 * t860 + t1155 * t789;
t749 = qJ(5) * t782 + (-pkin(8) * t1153 + t1233) * t788;
t756 = -qJ(5) * t781 + (-pkin(8) * t1155 + t1277) * t788;
t757 = t1160 * t782 + t1163 * t781;
t733 = -pkin(7) * t757 - t1160 * t749 + t1163 * t756;
t746 = -pkin(3) * t757 - t1219;
t758 = -t1160 * t781 + t1163 * t782;
t750 = t1154 * t758 - t1156 * t788;
t1203 = -qJ(3) * t750 - t1154 * t746 + t1156 * t733;
t884 = t1159 * t957 - t1162 * t959;
t783 = -pkin(8) * t884 - t788;
t852 = -t1153 * t994 + t1155 * t886;
t763 = qJ(5) * t852 + t1153 * t783 + t1233 * t884;
t851 = t1153 * t886 + t1155 * t994;
t766 = -qJ(5) * t851 + t1155 * t783 + t1277 * t884;
t809 = t1160 * t852 + t1163 * t851;
t748 = -pkin(7) * t809 - t1160 * t763 + t1163 * t766;
t1195 = pkin(4) * t851 + t1224;
t762 = -pkin(3) * t809 - t1195;
t810 = -t1160 * t851 + t1163 * t852;
t792 = t1154 * t810 - t1156 * t884;
t1202 = -qJ(3) * t792 - t1154 * t762 + t1156 * t748;
t922 = t1159 * t997 + t1295;
t806 = -pkin(5) * t922 + t830;
t840 = -pkin(8) * t922 + t857;
t865 = -t1153 * t956 + t1155 * t923;
t768 = -pkin(4) * t922 + qJ(5) * t865 + t1153 * t840 + t1155 * t806;
t775 = -qJ(5) * t864 - t1153 * t806 + t1155 * t840;
t817 = t1160 * t865 + t1163 * t864;
t753 = -pkin(7) * t817 - t1160 * t768 + t1163 * t775;
t774 = -pkin(3) * t817 - t1212;
t818 = -t1160 * t864 + t1163 * t865;
t798 = t1154 * t818 - t1156 * t922;
t1201 = -qJ(3) * t798 - t1154 * t774 + t1156 * t753;
t925 = t1008 * t1162 - t1266;
t808 = -pkin(5) * t925 + t831;
t841 = -pkin(8) * t925 + t858;
t869 = -t1153 * t960 + t1155 * t926;
t769 = -pkin(4) * t925 + qJ(5) * t869 + t1153 * t841 + t1155 * t808;
t778 = -qJ(5) * t868 - t1153 * t808 + t1155 * t841;
t820 = t1160 * t869 + t1163 * t868;
t755 = -pkin(7) * t820 - t1160 * t769 + t1163 * t778;
t776 = -pkin(3) * t820 - t1213;
t821 = -t1160 * t868 + t1163 * t869;
t800 = t1154 * t821 - t1156 * t925;
t1200 = -qJ(3) * t800 - t1154 * t776 + t1156 * t755;
t790 = t1160 * t839 + t1263;
t819 = -pkin(4) * t981 + qJ(5) * t839;
t765 = -pkin(7) * t790 - qJ(5) * t1263 - t1160 * t819;
t777 = -pkin(3) * t790 - t1279;
t791 = t1163 * t839 - t1265;
t785 = t1154 * t791 - t1156 * t981;
t1199 = -qJ(3) * t785 - t1154 * t777 + t1156 * t765;
t1018 = -t1104 - t1105;
t967 = t1022 * t1155 + t1024 * t1153;
t811 = -pkin(4) * t1018 + qJ(5) * t967 + t839;
t816 = -qJ(5) * t965 - t838;
t892 = t1160 * t967 + t1163 * t965;
t772 = -pkin(7) * t892 - t1160 * t811 + t1163 * t816;
t849 = -pkin(3) * t892 - t1278;
t894 = -t1160 * t965 + t1163 * t967;
t862 = -t1018 * t1156 + t1154 * t894;
t1198 = -qJ(3) * t862 - t1154 * t849 + t1156 * t772;
t1047 = -t1165 - t1104;
t992 = t1047 * t1155 - t1299;
t882 = -pkin(4) * t1020 + qJ(5) * t992 - t1267;
t991 = t1047 * t1153 + t1298;
t907 = -qJ(5) * t991 + t1268;
t914 = t1160 * t992 + t1163 * t991;
t815 = -pkin(7) * t914 - t1160 * t882 + t1163 * t907;
t1176 = pkin(4) * t991 - t888;
t836 = -pkin(3) * t914 - t1176;
t915 = -t1160 * t991 + t1163 * t992;
t890 = -t1020 * t1156 + t1154 * t915;
t1197 = -qJ(3) * t890 - t1154 * t836 + t1156 * t815;
t1007 = -t1092 * t1153 - t1255;
t896 = -pkin(4) * t1023 + qJ(5) * t1007 + t1268;
t921 = -qJ(5) * t1004 + t1267;
t939 = t1004 * t1163 + t1007 * t1160;
t823 = -pkin(7) * t939 - t1160 * t896 + t1163 * t921;
t842 = -pkin(3) * t939 + t1094 - t1218;
t942 = -t1004 * t1160 + t1007 * t1163;
t903 = -t1023 * t1156 + t1154 * t942;
t1196 = -qJ(3) * t903 - t1154 * t842 + t1156 * t823;
t1075 = t1136 * t1163 - t1245;
t1029 = t1075 * t1154 + t1120 * t1156;
t1071 = t1136 * t1160 + t1244;
t977 = -pkin(3) * t1071 + t1000;
t986 = -pkin(7) * t1071 + t1241;
t1194 = -qJ(3) * t1029 - t1154 * t977 + t1156 * t986;
t1134 = -t1165 - t1260;
t1077 = -t1134 * t1160 - t1242;
t1118 = 0.2e1 * t1227 + t1238;
t1030 = t1077 * t1154 + t1118 * t1156;
t1073 = t1134 * t1163 - t1243;
t978 = -pkin(3) * t1073 + t1001;
t987 = -pkin(7) * t1073 + t1240;
t1193 = -qJ(3) * t1030 - t1154 * t978 + t1156 * t987;
t1190 = pkin(3) * t1120 + pkin(7) * t1075 - t1240;
t1189 = pkin(3) * t1118 + pkin(7) * t1077 + t1241;
t751 = t1154 * t788 + t1156 * t758;
t1188 = -qJ(3) * t751 - t1154 * t733 - t1156 * t746;
t793 = t1154 * t884 + t1156 * t810;
t1187 = -qJ(3) * t793 - t1154 * t748 - t1156 * t762;
t799 = t1154 * t922 + t1156 * t818;
t1186 = -qJ(3) * t799 - t1154 * t753 - t1156 * t774;
t801 = t1154 * t925 + t1156 * t821;
t1185 = -qJ(3) * t801 - t1154 * t755 - t1156 * t776;
t786 = t1154 * t981 + t1156 * t791;
t1184 = -qJ(3) * t786 - t1154 * t765 - t1156 * t777;
t863 = t1018 * t1154 + t1156 * t894;
t1183 = -qJ(3) * t863 - t1154 * t772 - t1156 * t849;
t891 = t1020 * t1154 + t1156 * t915;
t1182 = -qJ(3) * t891 - t1154 * t815 - t1156 * t836;
t906 = t1023 * t1154 + t1156 * t942;
t1181 = -qJ(3) * t906 - t1154 * t823 - t1156 * t842;
t1031 = t1075 * t1156 - t1120 * t1154;
t1180 = -qJ(3) * t1031 - t1154 * t986 - t1156 * t977;
t1032 = t1077 * t1156 - t1118 * t1154;
t1179 = -qJ(3) * t1032 - t1154 * t987 - t1156 * t978;
t1178 = pkin(3) * t981 - pkin(7) * t791 + qJ(5) * t1265 - t1163 * t819;
t1123 = t1236 * qJDD(1);
t1126 = t1147 + t1260;
t1177 = pkin(3) * t1126 + pkin(7) * t1123 + t930;
t1174 = pkin(3) * t788 - pkin(7) * t758 - t1160 * t756 - t1163 * t749;
t1173 = pkin(3) * t884 - pkin(7) * t810 - t1160 * t766 - t1163 * t763;
t1172 = pkin(3) * t922 - pkin(7) * t818 - t1160 * t775 - t1163 * t768;
t1171 = pkin(3) * t925 - pkin(7) * t821 - t1160 * t778 - t1163 * t769;
t1170 = pkin(3) * t1018 - pkin(7) * t894 - t1160 * t816 - t1163 * t811;
t1169 = pkin(3) * t1020 - pkin(7) * t915 - t1160 * t907 - t1163 * t882;
t1168 = pkin(3) * t1023 - pkin(7) * t942 - t1160 * t921 - t1163 * t896;
t1143 = t1156 * qJDD(4);
t1141 = t1154 * qJDD(4);
t1135 = t1147 - t1165;
t1133 = t1165 - t1260;
t1127 = -t1147 + t1260;
t1116 = t1236 * t1262;
t1114 = t1204 + 0.2e1 * t1271;
t1106 = -t1131 + t1148 + 0.2e1 * t1149;
t1091 = -t1105 + t1165;
t1090 = t1104 - t1165;
t1085 = t1119 * t1163 + t1150 * t1262;
t1084 = -t1160 * t1192 + t1262 * t1282;
t1081 = t1116 * t1156 + t1141;
t1080 = t1116 * t1154 - t1143;
t1076 = -t1133 * t1160 + t1244;
t1074 = t1135 * t1163 - t1243;
t1072 = t1133 * t1163 + t1245;
t1070 = t1135 * t1160 + t1242;
t1069 = (t1119 - t1227) * t1160;
t1061 = t1123 * t1156 - t1126 * t1154;
t1060 = t1123 * t1154 + t1126 * t1156;
t1057 = t1118 * t1160 + t1068;
t1056 = -t1118 * t1163 + t1120 * t1160;
t1051 = t1105 - t1104;
t1045 = t1085 * t1156 - t1217;
t1044 = t1084 * t1156 + t1217;
t1043 = t1085 * t1154 + t1216;
t1042 = t1084 * t1154 - t1216;
t1041 = t1076 * t1156 - t1154 * t1238;
t1040 = t1074 * t1156 - t1154 * t1237;
t1039 = t1076 * t1154 + t1156 * t1238;
t1038 = t1074 * t1154 + t1156 * t1237;
t1037 = pkin(1) * t1101 - qJ(2) * t1093;
t1034 = (t1249 + t1250) * qJD(4);
t1033 = (-t1248 + t1251) * qJD(4);
t1028 = -t1064 + t1098;
t1027 = t1063 - t1098;
t1026 = t1057 * t1156 + t1127 * t1154;
t1025 = t1057 * t1154 - t1127 * t1156;
t1015 = t1064 - t1063;
t1013 = -qJD(4) * t1249 + t1055 * t1155;
t1012 = qJD(4) * t1248 + t1055 * t1153;
t1011 = -qJD(4) * t1250 + t1153 * t1221;
t1010 = -qJD(4) * t1251 - t1155 * t1221;
t1006 = -t1091 * t1153 + t1298;
t1005 = t1090 * t1155 - t1256;
t1003 = t1091 * t1155 + t1299;
t1002 = t1090 * t1153 + t1255;
t985 = -qJ(2) * t1121 + t1122 * t1281 + t1016;
t984 = qJ(2) * t1122 + t1121 * t1281 + t1017;
t980 = (t1065 * t1162 - t1067 * t1159) * t1099;
t979 = (t1065 * t1159 + t1067 * t1162) * t1099;
t976 = -t1033 * t1160 + t1034 * t1163;
t975 = t1033 * t1163 + t1034 * t1160;
t970 = t1156 * t976 + t1141;
t969 = t1154 * t976 - t1143;
t968 = -t1020 * t1155 - t1023 * t1153;
t966 = -t1020 * t1153 + t1023 * t1155;
t958 = t1035 + t999;
t955 = t1036 - t998;
t952 = qJ(2) * t1151 + t1273;
t951 = t1067 * t1254 + t1162 * t999;
t950 = -t1067 * t1253 + t1159 * t999;
t949 = -t1065 * t1253 - t1159 * t998;
t948 = t1065 * t1254 - t1162 * t998;
t947 = t1151 * t1281 - t1272;
t946 = -t1012 * t1160 + t1013 * t1163;
t945 = -t1010 * t1160 + t1011 * t1163;
t944 = t1012 * t1163 + t1013 * t1160;
t943 = t1010 * t1163 + t1011 * t1160;
t941 = -t1003 * t1160 + t1006 * t1163;
t940 = -t1002 * t1160 + t1005 * t1163;
t938 = t1003 * t1163 + t1006 * t1160;
t937 = t1002 * t1163 + t1005 * t1160;
t936 = t1052 * t1153 + t1155 * t980;
t935 = -t1052 * t1155 + t1153 * t980;
t934 = t1027 * t1162 - t1266;
t933 = -t1028 * t1159 + t1295;
t932 = t1027 * t1159 + t1264;
t931 = t1028 * t1162 + t1296;
t919 = t1156 * t946 - t1230;
t918 = t1156 * t945 + t1230;
t917 = t1154 * t946 + t1229;
t916 = t1154 * t945 - t1229;
t913 = t1155 * t951 + t1232;
t912 = t1155 * t949 - t1232;
t911 = t1153 * t951 - t1231;
t910 = t1153 * t949 + t1231;
t909 = -qJ(3) * t1060 + t1156 * t929;
t908 = qJ(3) * t1061 + t1154 * t929;
t905 = t1024 * t1154 + t1156 * t941;
t904 = t1022 * t1154 + t1156 * t940;
t902 = -t1024 * t1156 + t1154 * t941;
t901 = -t1022 * t1156 + t1154 * t940;
t895 = -t1160 * t966 + t1163 * t968;
t893 = t1160 * t968 + t1163 * t966;
t885 = -t1159 * t958 + t1162 * t956;
t883 = t1159 * t956 + t1162 * t958;
t880 = qJ(2) * t1032 - t1030 * t1281 - t1189;
t879 = qJ(2) * t1031 - t1029 * t1281 - t1190;
t878 = -t1153 * t955 + t1155 * t934;
t877 = t1153 * t959 + t1155 * t933;
t876 = t1153 * t934 + t1155 * t955;
t875 = t1153 * t933 - t1155 * t959;
t874 = qJ(2) * t1061 - t1060 * t1281 - t1177;
t873 = qJ(2) * t1073 + t1193;
t872 = qJ(2) * t1071 + t1194;
t871 = t1051 * t1154 + t1156 * t895;
t870 = -t1051 * t1156 + t1154 * t895;
t867 = -t1160 * t935 + t1163 * t936;
t866 = t1160 * t936 + t1163 * t935;
t856 = t1073 * t1281 + t1179;
t855 = t1071 * t1281 + t1180;
t854 = t1015 * t1153 + t1155 * t885;
t853 = -t1015 * t1155 + t1153 * t885;
t850 = qJ(2) * t1209 + t1281 * t963;
t848 = -t1160 * t911 + t1163 * t913;
t847 = -t1160 * t910 + t1163 * t912;
t846 = t1160 * t913 + t1163 * t911;
t845 = t1160 * t912 + t1163 * t910;
t844 = t1154 * t979 + t1156 * t867;
t843 = t1154 * t867 - t1156 * t979;
t835 = t1154 * t950 + t1156 * t848;
t834 = -t1154 * t948 + t1156 * t847;
t833 = t1154 * t848 - t1156 * t950;
t832 = t1154 * t847 + t1156 * t948;
t827 = -t1160 * t876 + t1163 * t878;
t826 = -t1160 * t875 + t1163 * t877;
t825 = t1160 * t878 + t1163 * t876;
t824 = t1160 * t877 + t1163 * t875;
t813 = -t1160 * t853 + t1163 * t854;
t812 = t1160 * t854 + t1163 * t853;
t807 = -(qJ(2) - t1275) * t929 + t1226;
t805 = t1154 * t932 + t1156 * t827;
t804 = t1154 * t931 + t1156 * t826;
t803 = t1154 * t827 - t1156 * t932;
t802 = t1154 * t826 - t1156 * t931;
t797 = -t1274 - (pkin(1) - t1210) * t929;
t796 = t1154 * t883 + t1156 * t813;
t795 = t1154 * t813 - t1156 * t883;
t794 = qJ(2) * t898 - t1281 * t897 + t1215;
t784 = qJ(2) * t906 - t1281 * t903 + t1168;
t780 = qJ(2) * t939 + t1196;
t779 = qJ(2) * t891 - t1281 * t890 + t1169;
t773 = t1281 * t939 + t1181;
t770 = qJ(2) * t914 + t1197;
t767 = t1281 * t914 + t1182;
t761 = qJ(2) * t892 + t1198;
t760 = qJ(2) * t863 - t1281 * t862 + t1170;
t759 = t1281 * t892 + t1183;
t745 = qJ(2) * t786 - t1281 * t785 + t1178;
t744 = qJ(2) * t790 + t1199;
t743 = qJ(2) * t801 - t1281 * t800 + t1171;
t742 = qJ(2) * t799 - t1281 * t798 + t1172;
t741 = qJ(2) * t820 + t1200;
t740 = t1281 * t790 + t1184;
t739 = qJ(2) * t817 + t1201;
t738 = t1281 * t820 + t1185;
t737 = t1281 * t817 + t1186;
t736 = qJ(2) * t793 - t1281 * t792 + t1173;
t735 = qJ(2) * t809 + t1202;
t734 = t1281 * t809 + t1187;
t731 = qJ(2) * t757 + t1203;
t730 = qJ(2) * t751 - t1281 * t750 + t1174;
t729 = t1281 * t757 + t1188;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1125, 0, -t1124, 0, -t1102, -t1103, -t1207, -pkin(6) * t1207, 0, t1125, 0, 0, t1124, 0, -t1102, t1208, t1103, pkin(6) * t1208 + (-pkin(1) * t1161 + qJ(2) * t1164) * g(3), 0, 0, -t1058, 0, -t1285, 0, -t1291, t1297, t1292, -pkin(6) * t1292 - t1161 * t947 + t1164 * t952, t1043 * t1161 + t1045 * t1164, t1025 * t1161 + t1026 * t1164, t1039 * t1161 + t1041 * t1164, t1042 * t1161 + t1044 * t1164, t1038 * t1161 + t1040 * t1164, t1080 * t1161 + t1081 * t1164, t1164 * t872 - t1161 * t855 - pkin(6) * (-t1029 * t1164 + t1031 * t1161), t1164 * t873 - t1161 * t856 - pkin(6) * (-t1030 * t1164 + t1032 * t1161), t1164 * t909 + t1161 * t908 - pkin(6) * (-t1060 * t1164 + t1061 * t1161), t1164 * t807 - t1161 * t797 - pkin(6) * (t1161 * t898 - t1164 * t897), t1161 * t917 + t1164 * t919, t1161 * t870 + t1164 * t871, t1161 * t902 + t1164 * t905, t1161 * t916 + t1164 * t918, t1161 * t901 + t1164 * t904, t1161 * t969 + t1164 * t970, t1164 * t770 - t1161 * t767 - pkin(6) * (t1161 * t891 - t1164 * t890), t1164 * t780 - t1161 * t773 - pkin(6) * (t1161 * t906 - t1164 * t903), t1164 * t761 - t1161 * t759 - pkin(6) * (t1161 * t863 - t1164 * t862), t1164 * t744 - t1161 * t740 - pkin(6) * (t1161 * t786 - t1164 * t785), t1161 * t833 + t1164 * t835, t1161 * t795 + t1164 * t796, t1161 * t802 + t1164 * t804, t1161 * t832 + t1164 * t834, t1161 * t803 + t1164 * t805, t1161 * t843 + t1164 * t844, t1164 * t739 - t1161 * t737 - pkin(6) * (t1161 * t799 - t1164 * t798), t1164 * t741 - t1161 * t738 - pkin(6) * (t1161 * t801 - t1164 * t800), t1164 * t735 - t1161 * t734 - pkin(6) * (t1161 * t793 - t1164 * t792), t1164 * t731 - t1161 * t729 - pkin(6) * (t1161 * t751 - t1164 * t750); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1124, 0, t1125, 0, t1103, -t1102, t1220, pkin(6) * t1220, 0, t1124, 0, 0, -t1125, 0, t1103, t1222, t1102, pkin(6) * t1222 + (pkin(1) * t1164 + qJ(2) * t1161) * g(3), 0, 0, -t1285, 0, t1058, 0, t1297, t1291, t1293, -pkin(6) * t1293 + t1161 * t952 + t1164 * t947, -t1043 * t1164 + t1045 * t1161, -t1025 * t1164 + t1026 * t1161, -t1039 * t1164 + t1041 * t1161, -t1042 * t1164 + t1044 * t1161, -t1038 * t1164 + t1040 * t1161, -t1080 * t1164 + t1081 * t1161, t1161 * t872 + t1164 * t855 + pkin(6) * (t1029 * t1161 + t1031 * t1164), t1161 * t873 + t1164 * t856 + pkin(6) * (t1030 * t1161 + t1032 * t1164), t1161 * t909 - t1164 * t908 + pkin(6) * (t1060 * t1161 + t1061 * t1164), t1161 * t807 + t1164 * t797 + pkin(6) * (t1161 * t897 + t1164 * t898), t1161 * t919 - t1164 * t917, t1161 * t871 - t1164 * t870, t1161 * t905 - t1164 * t902, t1161 * t918 - t1164 * t916, t1161 * t904 - t1164 * t901, t1161 * t970 - t1164 * t969, t1161 * t770 + t1164 * t767 + pkin(6) * (t1161 * t890 + t1164 * t891), t1161 * t780 + t1164 * t773 + pkin(6) * (t1161 * t903 + t1164 * t906), t1161 * t761 + t1164 * t759 + pkin(6) * (t1161 * t862 + t1164 * t863), t1161 * t744 + t1164 * t740 + pkin(6) * (t1161 * t785 + t1164 * t786), t1161 * t835 - t1164 * t833, t1161 * t796 - t1164 * t795, t1161 * t804 - t1164 * t802, t1161 * t834 - t1164 * t832, t1161 * t805 - t1164 * t803, t1161 * t844 - t1164 * t843, t1161 * t739 + t1164 * t737 + pkin(6) * (t1161 * t798 + t1164 * t799), t1161 * t741 + t1164 * t738 + pkin(6) * (t1161 * t800 + t1164 * t801), t1161 * t735 + t1164 * t734 + pkin(6) * (t1161 * t792 + t1164 * t793), t1161 * t731 + t1164 * t729 + pkin(6) * (t1161 * t750 + t1164 * t751); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1130, t1131, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t1114, 0, t1106, t1037, 0, 0, 0, 0, 0, qJDD(1), t985, t984, 0, t850, -t1069, -t1056, -t1072, -t1068, -t1070, 0, t879, t880, t874, t794, -t944, -t893, -t938, -t943, -t937, -t975, t779, t784, t760, t745, -t846, -t812, -t824, -t845, -t825, -t866, t742, t743, t736, t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1283, 0, 0, -g(3), -t1130, 0, 0, qJDD(1), 0, 0, t1283, 0, 0, -t1101, g(3), qJ(2) * g(3), 0, 0, -t1122, 0, -t1121, 0, t1211, t1088, t963, t952, t1045, t1026, t1041, t1044, t1040, t1081, t872, t873, t909, t807, t919, t871, t905, t918, t904, t970, t770, t780, t761, t744, t835, t796, t804, t834, t805, t844, t739, t741, t735, t731; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, 0, qJDD(1), 0, g(3), 0, -t1131, 0, 0, t1283, 0, 0, -qJDD(1), 0, g(3), -t1093, 0, pkin(1) * g(3), 0, 0, -t1121, 0, t1122, 0, t1088, -t1211, -t1209, t947, -t1043, -t1025, -t1039, -t1042, -t1038, -t1080, t855, t856, -t908, t797, -t917, -t870, -t902, -t916, -t901, -t969, t767, t773, t759, t740, -t833, -t795, -t802, -t832, -t803, -t843, t737, t738, t734, t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1130, t1131, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t1114, 0, t1106, t1037, 0, 0, 0, 0, 0, qJDD(1), t985, t984, 0, t850, -t1069, -t1056, -t1072, -t1068, -t1070, 0, t879, t880, t874, t794, -t944, -t893, -t938, -t943, -t937, -t975, t779, t784, t760, t745, -t846, -t812, -t824, -t845, -t825, -t866, t742, t743, t736, t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t1283, 0, 0, -t1101, g(3), 0, 0, 0, -t1122, 0, -t1121, 0, t1211, t1088, t963, t1273, t1045, t1026, t1041, t1044, t1040, t1081, t1194, t1193, t909, t1275 * t929 + t1226, t919, t871, t905, t918, t904, t970, t1197, t1196, t1198, t1199, t835, t796, t804, t834, t805, t844, t1201, t1200, t1202, t1203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t1101, 0, -t1093, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(2) * t1122 + t1016, pkin(2) * t1121 + t1017, 0, pkin(2) * t963, -t1069, -t1056, -t1072, -t1068, -t1070, 0, -pkin(2) * t1029 - t1190, -pkin(2) * t1030 - t1189, -pkin(2) * t1060 - t1177, -pkin(2) * t897 + t1215, -t944, -t893, -t938, -t943, -t937, -t975, -pkin(2) * t890 + t1169, -pkin(2) * t903 + t1168, -pkin(2) * t862 + t1170, -pkin(2) * t785 + t1178, -t846, -t812, -t824, -t845, -t825, -t866, -pkin(2) * t798 + t1172, -pkin(2) * t800 + t1171, -pkin(2) * t792 + t1173, -pkin(2) * t750 + t1174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1283, 0, 0, qJDD(1), 0, -g(3), t1093, 0, 0, 0, 0, t1121, 0, -t1122, 0, -t1088, t1211, t1209, -pkin(2) * t1151 + t1272, t1043, t1025, t1039, t1042, t1038, t1080, -pkin(2) * t1071 - t1180, -pkin(2) * t1073 - t1179, t908, -t1210 * t929 + t1274, t917, t870, t902, t916, t901, t969, -pkin(2) * t914 - t1182, -pkin(2) * t939 - t1181, -pkin(2) * t892 - t1183, -pkin(2) * t790 - t1184, t833, t795, t802, t832, t803, t843, -pkin(2) * t817 - t1186, -pkin(2) * t820 - t1185, -pkin(2) * t809 - t1187, -pkin(2) * t757 - t1188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), 0, -t1283, 0, 0, t1151, t1016, 0, t1085, t1057, t1076, t1084, t1074, t1116, t986, t987, t929, pkin(7) * t929, t946, t895, t941, t945, t940, t976, t815, t823, t772, t765, t848, t813, t826, t847, t827, t867, t753, t755, t748, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, 0, -qJDD(1), 0, -t1151, 0, t1017, 0, t1137, -t1127, t1238, -t1137, t1237, -qJDD(4), t977, t978, 0, t1280, t1252, -t1051, -t1024, -t1252, -t1022, -qJDD(4), t836, t842, t849, t777, -t950, -t883, -t931, t948, -t932, -t979, t774, t776, t762, t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), -t1016, -t1017, 0, 0, t1069, t1056, t1072, t1068, t1070, 0, t1190, t1189, t1177, -t1215, t944, t893, t938, t943, t937, t975, -t1169, -t1168, -t1170, -t1178, t846, t812, t824, t845, t825, t866, -t1172, -t1171, -t1173, -t1174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1119, t1120, t1128, t1227, t1135, -t1227, 0, t1014, t1000, 0, t1013, t968, t1006, t1011, t1005, t1034, t907, t921, t816, -qJ(5) * t838, t913, t854, t877, t912, t878, t936, t775, t778, t766, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1228, -t1118, t1133, t1192, t1129, t1228, -t1014, 0, t1001, 0, t1012, t966, t1003, t1010, t1002, t1033, t882, t896, t811, t819, t911, t853, t875, t910, t876, t935, t768, t769, t763, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1137, t1127, -t1238, t1137, -t1237, qJDD(4), -t1000, -t1001, 0, 0, -t1252, t1051, t1024, t1252, t1022, qJDD(4), t1176, t1218 - 0.2e1 * t1257, t1278, t1279, t950, t883, t931, -t948, t932, t979, t1212, t1213, t1195, t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1055, -t1020, t1294, -t1097, t1090, t1097, 0, t981, t888, 0, t951, t885, t933, t949, t934, t980, t840, t841, t783, -pkin(8) * t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1259, t1023, t1091, -t1221, t1049, -t1259, -t981, 0, t889, 0, -t1019, -t1015, -t959, t1019, t955, -t1052, t806, t808, -pkin(5) * t884, -pkin(5) * t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1252, t1051, t1024, t1252, t1022, qJDD(4), -t888, -t889, 0, 0, t950, t883, t931, -t948, t932, t979, t1234, t1235, t1224, t1270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t999, t956, t1286, -t1035, t1027, t1035, 0, t860, t830, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1036, t958, t1028, t998, t989, t1036, -t860, 0, t831, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1019, t1015, t959, -t1019, -t955, t1052, -t830, -t831, 0, 0;];
m_new_reg  = t1;
