% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:51:41
% EndTime: 2019-03-09 02:51:52
% DurationCPUTime: 4.52s
% Computational Cost: add. (4808->377), mult. (9732->485), div. (0->0), fcn. (11328->8), ass. (0->307)
t238 = sin(pkin(9));
t393 = pkin(7) + qJ(2);
t219 = t393 * t238;
t400 = cos(qJ(3));
t206 = t400 * t219;
t240 = cos(pkin(9));
t220 = t393 * t240;
t243 = sin(qJ(3));
t350 = t243 * t220;
t146 = t206 + t350;
t212 = t238 * t400 + t240 * t243;
t395 = t212 * pkin(4);
t109 = t146 + t395;
t237 = sin(pkin(10));
t424 = t237 * t109;
t239 = cos(pkin(10));
t105 = t239 * t109;
t244 = cos(qJ(6));
t347 = t244 * t239;
t242 = sin(qJ(6));
t353 = t242 * t237;
t268 = -t347 + t353;
t423 = t268 * t212;
t227 = t400 * t240;
t349 = t243 * t238;
t209 = -t227 + t349;
t394 = pkin(3) + qJ(5);
t422 = t394 * t209;
t348 = t244 * t237;
t352 = t242 * t239;
t207 = t348 + t352;
t185 = t207 * qJD(6);
t258 = t348 / 0.2e1 + t352 / 0.2e1;
t247 = (t207 / 0.2e1 + t258) * t212;
t410 = t247 * qJD(1);
t421 = -t185 - t410;
t358 = t207 * t209;
t420 = t358 / 0.2e1;
t403 = -t212 / 0.2e1;
t137 = t207 * t403;
t228 = -t240 * pkin(2) - pkin(1);
t355 = t212 * qJ(4);
t265 = t228 - t355;
t95 = t265 + t422;
t46 = -t237 * t95 + t105;
t47 = t239 * t95 + t424;
t272 = t237 * t46 - t239 * t47;
t23 = t272 * t212;
t231 = t237 ^ 2;
t233 = t239 ^ 2;
t282 = t233 / 0.2e1 + t231 / 0.2e1;
t419 = t282 * t209;
t303 = t268 * qJD(3);
t409 = t358 * qJD(1);
t418 = t303 - t409;
t405 = -t207 / 0.2e1;
t251 = t405 + t258;
t71 = t251 * t209;
t417 = -qJD(1) * t71 + t303;
t162 = t209 * t347;
t115 = t209 * t353 - t162;
t307 = t207 * qJD(3);
t416 = qJD(1) * t115 + t307;
t284 = t353 / 0.2e1;
t404 = -t268 / 0.2e1;
t274 = t284 + t404;
t406 = -t162 / 0.2e1;
t66 = t209 * t274 + t406;
t415 = qJD(1) * t66 + t307;
t202 = t209 ^ 2;
t408 = t212 ^ 2;
t414 = -t408 - t202;
t413 = qJD(3) * (t355 - t422);
t246 = t212 * t258 + t137;
t412 = qJD(6) * t246;
t411 = qJD(6) * t247;
t308 = t408 * qJD(1);
t201 = t349 / 0.2e1 - t227 / 0.2e1;
t407 = -t115 / 0.2e1;
t399 = pkin(3) * t212;
t398 = pkin(8) * t212;
t397 = t209 * pkin(3);
t396 = t209 * pkin(4);
t392 = -pkin(8) - t394;
t250 = t212 * pkin(5) + t105 + (-pkin(8) * t209 - t95) * t237;
t127 = t239 * t209;
t34 = pkin(8) * t127 + t47;
t14 = t242 * t34 - t244 * t250;
t294 = t400 * t220;
t351 = t243 * t219;
t147 = t294 - t351;
t295 = -pkin(5) * t239 - pkin(4);
t84 = t209 * t295 + t147;
t9 = -t115 * t84 + t14 * t212;
t391 = qJD(1) * t9;
t163 = t212 * t347;
t117 = t212 * t353 - t163;
t111 = t147 - t396;
t107 = t111 * t239;
t374 = qJ(4) * t209;
t108 = t212 * t394 + t374;
t32 = -t209 * pkin(5) + t107 + (-t108 - t398) * t237;
t386 = t244 * t32;
t106 = t111 * t237;
t53 = t108 * t239 + t106;
t37 = t239 * t398 + t53;
t387 = t242 * t37;
t83 = t212 * t295 - t146;
t1 = (t386 - t387) * t212 + t14 * t209 + t83 * t115 + t84 * t117;
t390 = t1 * qJD(1);
t15 = t242 * t250 + t244 * t34;
t254 = t207 * t212;
t385 = t244 * t37;
t388 = t242 * t32;
t2 = -(t385 + t388) * t212 + t15 * t209 + t83 * t358 + t84 * t254;
t389 = t2 * qJD(1);
t52 = -t108 * t237 + t107;
t3 = -t109 * t111 + t46 * t52 + t47 * t53;
t384 = t3 * qJD(1);
t376 = t53 * t239;
t379 = t52 * t237;
t4 = -t23 + (t376 - t379) * t209;
t383 = t4 * qJD(1);
t382 = t46 * t239;
t381 = t47 * t237;
t214 = t392 * t237;
t215 = t392 * t239;
t131 = t214 * t244 + t215 * t242;
t225 = pkin(5) * t237 + qJ(4);
t248 = t131 * t403 + t225 * t420 + t404 * t84;
t263 = -t387 / 0.2e1 + t386 / 0.2e1;
t5 = -t248 + t263;
t380 = t5 * qJD(1);
t378 = t52 * t239;
t377 = t53 * t237;
t130 = t214 * t242 - t215 * t244;
t249 = t130 * t212 / 0.2e1 + t225 * t407 + t84 * t405;
t264 = -t388 / 0.2e1 - t385 / 0.2e1;
t6 = -t249 + t264;
t375 = t6 * qJD(1);
t10 = -t15 * t212 + t358 * t84;
t373 = qJD(1) * t10;
t13 = -t111 * t209 + (t381 + t382) * t212;
t372 = qJD(1) * t13;
t22 = t272 * t209;
t371 = qJD(1) * t22;
t370 = qJD(1) * t23;
t363 = t117 * t212;
t364 = t115 * t209;
t41 = -t363 - t364;
t369 = qJD(1) * t41;
t360 = t254 * t212;
t362 = t358 * t209;
t43 = -t360 - t362;
t368 = qJD(1) * t43;
t81 = t414 * t237;
t366 = qJD(1) * t81;
t11 = (t52 - t107) * t212 + (-t46 + t105) * t209;
t365 = t11 * qJD(1);
t12 = (-t53 + t106) * t212 + (t47 - t424) * t209;
t361 = t12 * qJD(1);
t177 = -t374 / 0.2e1;
t275 = t282 * t212;
t253 = -t275 * t394 + t177;
t261 = t379 / 0.2e1 - t376 / 0.2e1;
t16 = t253 + t261;
t359 = t16 * qJD(1);
t357 = t268 * t209;
t174 = t231 * t212;
t175 = t233 * t212;
t125 = t237 * t212;
t123 = t265 + t397;
t132 = t374 + t399;
t24 = t123 * t132;
t354 = t24 * qJD(1);
t28 = -t115 * t254 - t117 * t358;
t346 = t28 * qJD(1);
t40 = -t363 + t364;
t345 = t40 * qJD(1);
t42 = t360 - t362;
t344 = t42 * qJD(1);
t54 = -t123 * t212 - t132 * t209;
t343 = t54 * qJD(1);
t55 = t123 * t209 - t132 * t212;
t342 = t55 * qJD(1);
t57 = t146 * t212 - t147 * t209;
t341 = t57 * qJD(1);
t60 = t275 + t175 / 0.2e1 + t174 / 0.2e1;
t340 = t60 * qJD(1);
t67 = -t163 / 0.2e1 + t274 * t212;
t339 = t67 * qJD(1);
t285 = -t353 / 0.2e1;
t68 = t212 * t285 + t163 / 0.2e1 - t423 / 0.2e1;
t62 = t68 * qJD(1);
t73 = t251 * t212;
t335 = t73 * qJD(1);
t74 = 0.2e1 * t137;
t334 = t74 * qJD(1);
t257 = t347 / 0.2e1 + t285;
t75 = (t404 + t257) * t212;
t333 = t75 * qJD(1);
t178 = t374 / 0.2e1;
t79 = 0.2e1 * t178 + t399;
t332 = t79 * qJD(1);
t326 = t231 + t233;
t82 = t326 * t212 * t209;
t331 = t82 * qJD(1);
t140 = t357 / 0.2e1;
t87 = 0.2e1 * t140;
t329 = t87 * qJD(1);
t96 = -t201 - t419;
t328 = t96 * qJD(1);
t222 = t238 ^ 2 + t240 ^ 2;
t324 = qJD(4) * t408;
t323 = qJD(4) * t212;
t322 = qJD(5) * t115;
t321 = qJD(5) * t358;
t320 = qJD(5) * t212;
t319 = qJD(6) * t358;
t101 = t414 * t239;
t318 = t101 * qJD(1);
t113 = -t408 + t202;
t317 = t113 * qJD(1);
t114 = t115 * qJD(6);
t315 = t127 * qJD(1);
t314 = t127 * qJD(3);
t128 = -t174 - t175;
t313 = t128 * qJD(1);
t129 = t326 * t202;
t312 = t129 * qJD(1);
t311 = t414 * qJD(1);
t310 = t146 * qJD(3);
t133 = t147 * qJD(3);
t309 = t201 * qJD(1);
t306 = t209 * qJD(1);
t305 = t209 * qJD(2);
t188 = t209 * qJD(3);
t304 = t209 * qJD(4);
t191 = t268 * qJD(6);
t302 = t212 * qJD(1);
t195 = t212 * qJD(3);
t217 = -0.1e1 / 0.2e1 - t282;
t301 = t217 * qJD(3);
t218 = t222 * qJ(2);
t300 = t218 * qJD(1);
t299 = t326 * qJD(3);
t298 = t222 * qJD(1);
t297 = t237 * qJD(3);
t296 = t239 * qJD(3);
t293 = t115 * t302;
t292 = t254 * t302;
t291 = t423 * t302;
t290 = t123 * t302;
t145 = t209 * t302;
t289 = t237 * t306;
t288 = t209 * t297;
t287 = t237 * t308;
t286 = t239 * t308;
t93 = t358 * t302;
t281 = qJD(3) * t68 + t93;
t245 = -t396 / 0.2e1 - t351 / 0.2e1 + t294 / 0.2e1;
t260 = -t378 / 0.2e1 - t377 / 0.2e1;
t21 = t245 + t260;
t235 = qJD(3) * qJ(4);
t280 = qJD(1) * t21 + t235;
t279 = qJD(6) * t201 + t145;
t278 = qJD(1) * t228 + qJD(2);
t277 = qJD(3) * t225 + qJD(5);
t276 = t239 * t145;
t273 = -t114 - t293;
t271 = t377 + t378;
t27 = t115 * t207 + t268 * t358;
t33 = t115 ^ 2 - t358 ^ 2;
t269 = qJD(1) * t33 + qJD(3) * t27;
t112 = t207 ^ 2 - t268 ^ 2;
t267 = qJD(1) * t27 + qJD(3) * t112;
t252 = -t206 / 0.2e1 - t395 / 0.2e1 - t350 / 0.2e1;
t262 = t382 / 0.2e1 + t381 / 0.2e1;
t18 = t252 + t262;
t205 = t326 * t394;
t266 = -qJD(1) * t18 + qJD(3) * t205;
t259 = qJD(3) * t67 + t319 + t93;
t39 = -t268 * t407 + t358 * t405;
t256 = -qJD(3) * t39 + t115 * t409;
t255 = -qJD(1) * t39 - t207 * t303;
t236 = qJ(4) * qJD(4);
t216 = 0.1e1 / 0.2e1 - t282;
t193 = t212 * qJD(2);
t176 = t201 * qJD(3);
t144 = t209 * t195;
t97 = -t201 + t419;
t88 = -t357 / 0.2e1 + t140;
t80 = t178 + t177;
t78 = t423 / 0.2e1 + t257 * t212;
t70 = t209 * t258 + t420;
t65 = t209 * t284 + t140 + t406;
t64 = t67 * qJD(6);
t63 = t68 * qJD(6);
t56 = t191 - t62;
t38 = t39 * qJD(6);
t26 = t27 * qJD(6);
t20 = t245 - t260;
t19 = t252 - t262;
t17 = t253 - t261;
t8 = t248 + t263;
t7 = t249 + t264;
t25 = [0, 0, 0, 0, 0, t222 * qJD(2), t218 * qJD(2), -t144, t113 * qJD(3), 0, 0, 0, t228 * t195, -t228 * t188, -qJD(2) * t414, qJD(3) * t54 + t212 * t304, qJD(3) * t55 + t324, qJD(2) * t57 + qJD(3) * t24 - t123 * t323, -t101 * qJD(2) + t11 * qJD(3) + (-qJD(5) * t209 + t323) * t125, t81 * qJD(2) + t12 * qJD(3) + (-t209 * t320 + t324) * t239, qJD(3) * t4 - qJD(4) * t82 + qJD(5) * t129, qJD(2) * t13 + qJD(3) * t3 + qJD(4) * t23 - qJD(5) * t22 (qJD(3) * t254 - t114) * t358, qJD(3) * t28 + qJD(6) * t33, qJD(3) * t42 - t114 * t212, qJD(3) * t40 - t212 * t319, -t144, t41 * qJD(2) + t1 * qJD(3) + t10 * qJD(6) + (qJD(4) * t254 - t321) * t212, t43 * qJD(2) + t2 * qJD(3) + t9 * qJD(6) + (-qJD(4) * t423 + t322) * t212; 0, 0, 0, 0, 0, t298, t300, 0, 0, 0, 0, 0, 0, 0, -t311, 0, 0, qJD(3) * t80 + t341, -t318, t366, 0, qJD(3) * t17 + qJD(5) * t97 + t372, 0, 0, 0, 0, 0, -t64 + t369, qJD(3) * t88 - qJD(6) * t73 + t368; 0, 0, 0, 0, 0, 0, 0, -t145, t317, -t188, -t195, 0, t228 * t302 - t133, -t228 * t306 + t310 (-t355 + t397) * qJD(3) - t304, t133 + t343, -t310 + t342, t354 + t80 * qJD(2) + (-pkin(3) * t147 - qJ(4) * t146) * qJD(3) + t147 * qJD(4), -t109 * t297 + t365 - t127 * qJD(4) + (-t320 - t413) * t239, -t109 * t296 + t361 + t125 * qJD(5) + (t304 + t413) * t237, -qJD(3) * t271 + t383, t384 + t17 * qJD(2) + (-qJ(4) * t109 - t271 * t394) * qJD(3) + t20 * qJD(4) + t19 * qJD(5), -t254 * t418 + t38, t346 + (t117 * t268 - t207 * t254) * qJD(3) + t26, t209 * t303 + t344 + t412, t188 * t207 + t345 - t64, -t279, t390 + (t117 * t225 + t130 * t209 + t207 * t83) * qJD(3) + t65 * qJD(4) - t68 * qJD(5) + t8 * qJD(6), t389 + t88 * qJD(2) + (t131 * t209 + t225 * t254 - t268 * t83) * qJD(3) + t70 * qJD(4) - t74 * qJD(5) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, t145, t308, t133 - t290, t287 - t314, t286 + t288, -t331, qJD(3) * t20 + t370, 0, 0, 0, 0, 0, qJD(3) * t65 + t292 + t412, qJD(3) * t70 + qJD(6) * t78 - t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t289 - t296) * t212, qJD(3) * t125 - t276, t312, qJD(2) * t97 + qJD(3) * t19 - t371, 0, 0, 0, 0, 0, -t281, -qJD(3) * t74 + t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256, t269, qJD(3) * t246 + t273, -t259, -t176, -qJD(2) * t67 + qJD(3) * t8 + qJD(4) * t246 - qJD(6) * t15 + t373, -qJD(2) * t73 + qJD(3) * t7 + qJD(4) * t78 + qJD(6) * t14 + t391; 0, 0, 0, 0, 0, -t298, -t300, 0, 0, 0, 0, 0, t195, -t188, t311, -t195, t188, qJD(3) * t79 - t323 - t341, t288 + t318, t314 - t366, -t128 * qJD(3), -qJD(3) * t16 - qJD(4) * t60 - qJD(5) * t96 - t372, 0, 0, 0, 0, 0, qJD(3) * t358 - t369 - t63, -qJD(3) * t87 - qJD(6) * t74 - t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, -t306, 0, -t302, t306, t332, t289, t315, -t313, -t359, 0, 0, 0, 0, 0, t409, -t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, 0, 0, 0, -t340, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, t185 - t334; 0, 0, 0, 0, 0, 0, 0, t145, -t317, 0, 0, 0, -t278 * t212, t278 * t209, 0, t193 - t343, -t305 - t342, -qJD(2) * t79 - t354, -t237 * t305 - t365, -qJD(2) * t127 - t361, qJD(2) * t128 - t383, qJD(2) * t16 + qJD(4) * t21 - qJD(5) * t18 - t384, -t254 * t409 + t38, t26 - t346, -t344 - t411, -t63 - t345, t279, -qJD(2) * t358 + qJD(4) * t66 - qJD(5) * t67 - qJD(6) * t5 - t390, qJD(2) * t87 + qJD(4) * t71 - qJD(5) * t73 - qJD(6) * t6 - t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t306, 0, t302, -t306, -t332, -t289, -t315, t313, t359, 0, 0, 0, 0, 0, -t409, t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t236, qJD(4) * t237, qJD(4) * t239, t326 * qJD(5), qJD(5) * t205 + t236, t207 * t191, t112 * qJD(6), 0, 0, 0, qJD(4) * t207 - t191 * t225, -qJD(4) * t268 - t185 * t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t235, t297, t296, 0, qJD(5) * t216 + t280, 0, 0, 0, 0, 0, t415, -t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, qJD(4) * t216 + t266, 0, 0, 0, 0, 0, -t339, -t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, t267, t421, t56, t309, -qJD(6) * t131 - t225 * t303 - t380, qJD(6) * t130 - t225 * t307 - t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t308, t193 + t290, -t287, -t286, t331, qJD(2) * t60 - qJD(3) * t21 - t370, 0, 0, 0, 0, 0, -qJD(3) * t66 - t292 - t411, -qJD(3) * t71 - qJD(6) * t75 + t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, 0, 0, 0, t340, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t235, -t297, -t296, 0, qJD(5) * t217 - t280, 0, 0, 0, 0, 0, -t415, t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t191 - t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212 * t289, t276, -t312, qJD(2) * t96 + qJD(3) * t18 + t371, 0, 0, 0, 0, 0, t259, qJD(3) * t73 + t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, -qJD(4) * t217 - t266, 0, 0, 0, 0, 0, -t191 + t339, -t185 + t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t301, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, -t269, qJD(3) * t247 + t293, t281, -t176, qJD(2) * t68 + qJD(3) * t5 + qJD(4) * t247 - t321 - t373, qJD(2) * t74 + qJD(3) * t6 + qJD(4) * t75 + t322 - t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, -t267, t410, t62, -t309, t268 * t277 + t380, t207 * t277 + t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t410, t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
