% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR5_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:51:38
% EndTime: 2019-03-09 02:51:45
% DurationCPUTime: 2.08s
% Computational Cost: add. (3128->203), mult. (6830->362), div. (0->0), fcn. (6844->8), ass. (0->121)
t147 = sin(qJ(3));
t149 = cos(qJ(3));
t74 = sin(pkin(9));
t76 = cos(pkin(9));
t56 = t147 * t74 - t149 * t76;
t129 = t149 * t74;
t58 = t147 * t76 + t129;
t98 = qJD(3) * t58;
t95 = 0.2e1 * t98;
t90 = t56 * t95;
t146 = sin(qJ(6));
t123 = qJD(6) * t146;
t148 = cos(qJ(6));
t124 = qJD(6) * t148;
t73 = sin(pkin(10));
t75 = cos(pkin(10));
t51 = -t73 * t123 + t75 * t124;
t55 = t146 * t75 + t148 * t73;
t144 = t55 * t51;
t50 = t55 * qJD(6);
t127 = t146 * t73;
t128 = t148 * t75;
t57 = t128 - t127;
t38 = t57 * t50;
t107 = 0.2e1 * t38 - 0.2e1 * t144;
t139 = pkin(3) + qJ(5);
t150 = -pkin(8) - t139;
t121 = t147 * qJD(2);
t122 = t149 * qJD(2);
t125 = qJD(3) * t147;
t138 = pkin(7) + qJ(2);
t54 = t138 * t129;
t61 = t138 * t76;
t28 = qJD(3) * t54 + t74 * t121 - t76 * t122 + t61 * t125;
t115 = t138 * t147;
t117 = t76 * t121;
t126 = qJD(3) * t149;
t29 = t61 * t126 + t117 + (-qJD(3) * t115 + t122) * t74;
t40 = t147 * t61 + t54;
t41 = -t74 * t115 + t149 * t61;
t52 = t74 * t125 - t76 * t126;
t156 = 0.2e1 * t28 * t56 + 0.2e1 * t29 * t58 - 0.2e1 * t40 * t52 - 0.2e1 * t41 * t98;
t155 = 0.2e1 * t52 * t56 - 0.2e1 * t58 * t98;
t69 = t73 ^ 2;
t71 = t75 ^ 2;
t60 = (t69 + t71) * qJD(5);
t91 = qJ(4) * t98;
t153 = qJD(5) * t58 - t139 * t52 + t91;
t152 = -0.2e1 * t52;
t151 = t52 * pkin(4);
t143 = t73 * t52;
t142 = t73 * t56;
t47 = t75 * t52;
t141 = t75 * t56;
t87 = t146 * t98;
t88 = t148 * t98;
t16 = t123 * t141 + t124 * t142 + t73 * t87 - t75 * t88;
t31 = t57 * t56;
t137 = -t57 * t16 - t50 * t31;
t104 = t58 * pkin(4) + t40;
t68 = -t76 * pkin(2) - pkin(1);
t106 = -t58 * qJ(4) + t68;
t97 = t139 * t56 + t106;
t13 = t73 * t104 + t75 * t97;
t134 = qJD(4) * t73;
t133 = qJD(4) * t75;
t131 = t56 * qJD(5);
t130 = qJ(4) * qJD(4);
t36 = t58 * t152;
t120 = 0.2e1 * (t74 ^ 2 + t76 ^ 2) * qJD(2);
t116 = t150 * t146;
t109 = t52 * qJ(4) - t58 * qJD(4);
t102 = t109 + t131;
t85 = t139 * t58;
t86 = t74 * t122 + t117 - t151;
t8 = -t73 * t102 + t75 * t86 + (t75 * t41 - t73 * t85) * qJD(3);
t9 = t75 * t102 + t73 * t86 + (t73 * t41 + t75 * t85) * qJD(3);
t3 = t9 * t73 + t8 * t75;
t15 = -t51 * t56 - t73 * t88 - t75 * t87;
t32 = t55 * t56;
t114 = -t57 * t15 - t32 * t50;
t113 = -t55 * t15 + t32 * t51;
t112 = t55 * t16 - t51 * t31;
t111 = -t41 * t28 + t40 * t29;
t110 = t50 * t58 + t57 * t52;
t20 = -t51 * t58 + t55 * t52;
t108 = t150 * t128;
t101 = t75 * t104;
t11 = pkin(8) * t141 + t13;
t24 = pkin(3) * t98 + t109;
t80 = qJ(5) * t98 + t131 + t24;
t83 = t29 - t151;
t93 = t73 * t98;
t78 = -t52 * pkin(5) - pkin(8) * t93 - t73 * t80 + t75 * t83;
t92 = t75 * t98;
t79 = pkin(8) * t92 + t73 * t83 + t75 * t80;
t84 = t58 * pkin(5) - t73 * t106 + t150 * t142 + t101;
t82 = t148 * t84;
t1 = -qJD(6) * t82 + t11 * t123 - t146 * t78 - t148 * t79;
t81 = t146 * t84;
t2 = -qJD(6) * t81 - t11 * t124 - t146 * t79 + t148 * t78;
t4 = -t146 * t11 + t82;
t5 = t148 * t11 + t81;
t100 = -t1 * t55 + t2 * t57 - t4 * t50 + t5 * t51;
t59 = t150 * t73;
t25 = t55 * qJD(5) - qJD(6) * t108 + t59 * t123;
t26 = -t59 * t124 + qJD(5) * t127 + (-t148 * qJD(5) - qJD(6) * t116) * t75;
t34 = -t146 * t59 + t108;
t35 = t75 * t116 + t148 * t59;
t96 = t25 * t55 - t26 * t57 + t34 * t50 - t35 * t51;
t94 = t69 * t98;
t89 = t73 * t92;
t18 = -pkin(4) * t98 - t28;
t65 = t73 * pkin(5) + qJ(4);
t46 = t71 * t98;
t33 = t56 * pkin(3) + t106;
t30 = -t56 * pkin(4) + t41;
t21 = (-t75 * pkin(5) - pkin(4)) * t56 + t41;
t17 = -pkin(5) * t92 + t18;
t12 = -t73 * t97 + t101;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, qJ(2) * t120, t36, t155, 0, t90, 0, 0, t68 * t95, t68 * t152, t156, 0.2e1 * t111, 0, 0, 0, t36, t155, t90, t156, -0.2e1 * t24 * t56 - 0.2e1 * t33 * t98, -0.2e1 * t24 * t58 + 0.2e1 * t33 * t52, 0.2e1 * t33 * t24 + 0.2e1 * t111, t69 * t90, 0.4e1 * t56 * t89, -0.2e1 * t52 * t142 + 0.2e1 * t58 * t93, t71 * t90, -0.2e1 * t52 * t141 + 0.2e1 * t58 * t92, t36, -0.2e1 * t12 * t52 - 0.2e1 * t18 * t141 - 0.2e1 * t30 * t92 + 0.2e1 * t8 * t58, 0.2e1 * t13 * t52 + 0.2e1 * t18 * t142 + 0.2e1 * t30 * t93 - 0.2e1 * t9 * t58, -0.2e1 * t12 * t93 + 0.2e1 * t13 * t92 + 0.2e1 * t9 * t141 - 0.2e1 * t8 * t142, 0.2e1 * t12 * t8 + 0.2e1 * t13 * t9 + 0.2e1 * t30 * t18, -0.2e1 * t32 * t15, -0.2e1 * t15 * t31 - 0.2e1 * t32 * t16, -0.2e1 * t15 * t58 - 0.2e1 * t32 * t52, -0.2e1 * t31 * t16, -0.2e1 * t16 * t58 - 0.2e1 * t31 * t52, t36, 0.2e1 * t21 * t16 - 0.2e1 * t17 * t31 + 0.2e1 * t2 * t58 - 0.2e1 * t4 * t52, 0.2e1 * t1 * t58 - 0.2e1 * t21 * t15 + 0.2e1 * t17 * t32 + 0.2e1 * t5 * t52, -0.2e1 * t1 * t31 + 0.2e1 * t4 * t15 - 0.2e1 * t5 * t16 - 0.2e1 * t2 * t32, -0.2e1 * t5 * t1 + 0.2e1 * t21 * t17 + 0.2e1 * t4 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t52, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t52, t24, 0, 0, 0, 0, 0, 0, t143, t47, t46 + t94, -t8 * t73 + t9 * t75, 0, 0, 0, 0, 0, 0, t20, t110, t113 + t137, -t1 * t57 - t2 * t55 - t4 * t51 - t5 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, 0, -t98, 0, -t29, t28, 0, 0, 0, t52, t98, 0, 0, 0, pkin(3) * t52 - qJD(4) * t56 - t91, t29, -t28, -t29 * pkin(3) - t28 * qJ(4) + t41 * qJD(4), t89, t46 - t94, -t47, -t89, t143, 0, -t56 * t133 - t153 * t75 + t18 * t73, t56 * t134 + t153 * t73 + t18 * t75, -t3, t18 * qJ(4) + t30 * qJD(4) - t3 * t139 + (-t12 * t75 - t13 * t73) * qJD(5), t114, -t113 + t137, -t110, t112, t20, 0, -qJD(4) * t31 + t65 * t16 + t17 * t55 + t21 * t51 + t26 * t58 - t34 * t52, qJD(4) * t32 - t65 * t15 + t17 * t57 - t21 * t50 + t25 * t58 + t35 * t52, t34 * t15 - t35 * t16 - t25 * t31 - t26 * t32 - t100, t21 * qJD(4) - t1 * t35 + t17 * t65 + t2 * t34 - t5 * t25 + t4 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57 * t25 - t55 * t26 - t51 * t34 - t50 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(4), 0.2e1 * t130, 0, 0, 0, 0, 0, 0, 0.2e1 * t134, 0.2e1 * t133, 0.2e1 * t60, 0.2e1 * t139 * t60 + 0.2e1 * t130, -0.2e1 * t38, 0.2e1 * t50 * t55 - 0.2e1 * t57 * t51, 0, 0.2e1 * t144, 0, 0, 0.2e1 * qJD(4) * t55 + 0.2e1 * t65 * t51, 0.2e1 * qJD(4) * t57 - 0.2e1 * t65 * t50, 0.2e1 * t96, 0.2e1 * t65 * qJD(4) - 0.2e1 * t35 * t25 + 0.2e1 * t34 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, 0, 0, t29, 0, 0, 0, 0, 0, 0, -t47, t143, 0, t3, 0, 0, 0, 0, 0, 0, -t110, t20, -t112 - t114, t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, 0, 0, 0, 0, 0, 0, 0, 0, t107, -t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, t93, 0, t18, 0, 0, 0, 0, 0, 0, t16, -t15, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), 0, 0, 0, 0, 0, 0, t51, -t50, 0, qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15, 0, -t16, -t52, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, t50, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -t51, 0, t26, t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, -t51, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
