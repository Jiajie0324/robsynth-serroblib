% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPPR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:51:38
% EndTime: 2019-03-09 02:51:49
% DurationCPUTime: 4.42s
% Computational Cost: add. (7007->383), mult. (17913->493), div. (0->0), fcn. (13603->8), ass. (0->201)
t184 = cos(pkin(9));
t284 = cos(qJ(3));
t232 = t284 * t184;
t219 = qJD(1) * t232;
t166 = qJD(3) * t219;
t182 = sin(pkin(9));
t187 = sin(qJ(3));
t248 = t187 * t182;
t228 = qJD(1) * t248;
t128 = qJD(3) * t228 - t166;
t154 = t284 * t182 + t187 * t184;
t292 = t154 * qJD(1);
t135 = qJD(6) + t292;
t181 = sin(pkin(10));
t183 = cos(pkin(10));
t186 = sin(qJ(6));
t283 = cos(qJ(6));
t153 = -t186 * t181 + t283 * t183;
t199 = -t283 * t181 - t186 * t183;
t145 = t199 * qJD(6);
t308 = t199 * t292 + t145;
t297 = -t153 * t128 + t308 * t135;
t148 = t154 * qJD(3);
t129 = qJD(1) * t148;
t141 = -t219 + t228;
t260 = t128 * qJ(4);
t206 = -qJD(4) * t292 + t260;
t279 = pkin(3) + qJ(5);
t37 = t141 * qJD(5) + t279 * t129 + t206;
t278 = pkin(7) + qJ(2);
t160 = t278 * t182;
t155 = qJD(1) * t160;
t161 = t278 * t184;
t156 = qJD(1) * t161;
t227 = qJD(2) * t284;
t218 = qJD(1) * t227;
t234 = qJD(1) * qJD(2);
t224 = t187 * t234;
t226 = qJD(3) * t284;
t237 = qJD(3) * t187;
t75 = -t155 * t237 + t156 * t226 + t182 * t218 + t184 * t224;
t47 = -t128 * pkin(4) - qJD(3) * qJD(5) + t75;
t45 = t183 * t47;
t12 = -t128 * pkin(5) + t45 + (-pkin(8) * t129 - t37) * t181;
t16 = t181 * t47 + t183 * t37;
t251 = t183 * t129;
t13 = pkin(8) * t251 + t16;
t115 = t183 * qJD(3) + t181 * t141;
t173 = -t184 * pkin(2) - pkin(1);
t159 = qJD(1) * t173 + qJD(2);
t192 = -qJ(4) * t292 + t159;
t54 = t279 * t141 + t192;
t102 = t284 * t155 + t187 * t156;
t291 = qJD(4) + t102;
t244 = pkin(4) * t292 + t291;
t61 = -t279 * qJD(3) + t244;
t25 = -t181 * t54 + t183 * t61;
t18 = pkin(5) * t292 - t115 * pkin(8) + t25;
t113 = t181 * qJD(3) - t183 * t141;
t26 = t181 * t61 + t183 * t54;
t19 = -t113 * pkin(8) + t26;
t200 = -t283 * t18 + t186 * t19;
t1 = -qJD(6) * t200 + t186 * t12 + t283 * t13;
t6 = t186 * t18 + t283 * t19;
t2 = -qJD(6) * t6 + t283 * t12 - t186 * t13;
t225 = qJD(6) * t283;
t236 = qJD(6) * t186;
t146 = -t181 * t236 + t183 * t225;
t305 = t153 * t292 + t146;
t307 = -t1 * t199 + t2 * t153 - t200 * t308 + t305 * t6;
t215 = t153 * t129;
t66 = -t186 * t113 + t283 * t115;
t32 = qJD(6) * t66 - t215;
t63 = t283 * t113 + t186 * t115;
t306 = -t199 * t32 + t305 * t63;
t217 = -t199 * t128 - t135 * t305;
t31 = t113 * t225 + t115 * t236 + t199 * t129;
t304 = -t153 * t31 + t308 * t66;
t302 = t63 ^ 2;
t301 = t66 ^ 2;
t300 = t63 * t135;
t287 = t292 ^ 2;
t295 = t183 * t128 + t181 * t287;
t298 = t292 * qJD(3);
t104 = t128 * t154;
t147 = t182 * t237 - t184 * t226;
t53 = -t147 * t292 - t104;
t288 = t141 ^ 2;
t294 = -t288 - t287;
t293 = -t288 + t287;
t290 = -t199 * t31 - t305 * t66;
t265 = qJ(4) * t129;
t180 = qJD(3) * qJ(4);
t103 = -t187 * t155 + t284 * t156;
t79 = -t141 * pkin(4) + t103;
t69 = t180 + qJD(5) + t79;
t289 = -t128 * t279 + (qJD(5) - t69) * t292 + t265;
t208 = t181 * t128 - t183 * t287;
t85 = (qJD(2) * t182 + qJD(3) * t161) * t187 + t160 * t226 - t184 * t227;
t277 = -pkin(8) - t279;
t157 = t277 * t181;
t158 = t277 * t183;
t108 = t283 * t157 + t186 * t158;
t72 = t183 * t79;
t259 = t141 * qJ(4);
t73 = t279 * t292 + t259;
t22 = -t141 * pkin(5) + t72 + (-pkin(8) * t292 - t73) * t181;
t282 = pkin(8) * t183;
t30 = t181 * t79 + t183 * t73;
t24 = t282 * t292 + t30;
t286 = qJD(5) * t153 + qJD(6) * t108 - t186 * t24 + t283 * t22;
t107 = -t186 * t157 + t283 * t158;
t285 = -qJD(5) * t199 - qJD(6) * t107 + t186 * t22 + t283 * t24;
t281 = t129 * pkin(3);
t280 = t66 * t63;
t152 = -t232 + t248;
t205 = t147 * qJ(4) - t154 * qJD(4);
t41 = t152 * qJD(5) + t279 * t148 + t205;
t112 = -t187 * t160 + t284 * t161;
t86 = qJD(2) * t154 + qJD(3) * t112;
t56 = -t147 * pkin(4) + t86;
t21 = t181 * t56 + t183 * t41;
t202 = -t154 * qJ(4) + t173;
t77 = t279 * t152 + t202;
t111 = t284 * t160 + t187 * t161;
t91 = t154 * pkin(4) + t111;
t35 = t181 * t91 + t183 * t77;
t276 = t141 * t63;
t272 = t66 * t141;
t271 = t75 * t111;
t82 = t141 * pkin(3) + t192;
t270 = t82 * t292;
t264 = t113 * t181;
t263 = t115 * t141;
t262 = t115 * t181;
t261 = t115 * t183;
t258 = t141 * t113;
t257 = t141 * t292;
t255 = t148 * t183;
t254 = t181 ^ 2 * t129;
t120 = t183 ^ 2 * t129;
t247 = t85 * qJD(3);
t246 = t86 * qJD(3);
t233 = -pkin(5) * t183 - pkin(4);
t245 = -t233 * t292 + t291;
t240 = t182 ^ 2 + t184 ^ 2;
t239 = qJD(3) * t147;
t238 = qJD(3) * t148;
t223 = t240 * qJD(1) ^ 2;
t222 = t155 * t226 + t156 * t237 + t182 * t224 - t184 * t218;
t221 = -t153 * t32 - t308 * t63;
t15 = -t181 * t37 + t45;
t214 = t15 * t183 + t16 * t181;
t213 = -t181 * t26 - t183 * t25;
t179 = qJD(3) * qJD(4);
t68 = -t179 + t222;
t211 = -t261 + t264;
t210 = -t113 * t292 + t181 * t129;
t209 = -t115 * t292 + t251;
t207 = t129 * t152 + t141 * t148;
t204 = 0.2e1 * t240 * t234;
t84 = t183 * t91;
t23 = t154 * pkin(5) + t84 + (-pkin(8) * t152 - t77) * t181;
t28 = t152 * t282 + t35;
t9 = -t186 * t28 + t283 * t23;
t10 = t186 * t23 + t283 * t28;
t198 = -t102 * qJD(3) + t222;
t197 = t103 * qJD(3) - t75;
t46 = -t129 * pkin(4) - t68;
t92 = -t152 * pkin(4) + t112;
t196 = t129 * t92 + t148 * t69 + t152 * t46;
t195 = -t128 * t152 + t154 * t129 + t148 * t292;
t36 = t129 * t233 - t68;
t190 = t147 * t141 - t195;
t189 = -t111 * t128 - t112 * t129 + t85 * t141 + t75 * t154 + t292 * t86;
t171 = t181 * pkin(5) + qJ(4);
t130 = qJD(3) * t141;
t99 = t152 * pkin(3) + t202;
t98 = pkin(3) * t292 + t259;
t97 = -t180 - t103;
t96 = t128 - t130;
t95 = -qJD(3) * pkin(3) + t291;
t94 = t199 * t152;
t93 = t153 * t152;
t76 = t148 * pkin(3) + t205;
t60 = t206 + t281;
t59 = t152 * t233 + t112;
t55 = -t148 * pkin(4) - t85;
t52 = t183 * t56;
t43 = t113 * pkin(5) + t69;
t42 = t148 * t233 - t85;
t40 = -t145 * t152 - t153 * t148;
t39 = -t146 * t152 + t199 * t148;
t34 = -t181 * t77 + t84;
t29 = -t181 * t73 + t72;
t20 = -t181 * t41 + t52;
t17 = pkin(8) * t255 + t21;
t14 = -t147 * pkin(5) + t52 + (-pkin(8) * t148 - t41) * t181;
t4 = -t10 * qJD(6) + t283 * t14 - t186 * t17;
t3 = t9 * qJD(6) + t186 * t14 + t283 * t17;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, qJ(2) * t204, t53, t190, -t239, t207, -t238, 0, t173 * t129 + t159 * t148 - t246, -t173 * t128 - t159 * t147 + t247, -t102 * t147 - t103 * t148 + t152 * t222 + t189, t102 * t86 - t103 * t85 - t112 * t222 + t271, 0, t239, t238, t53, t190, t207, -t95 * t147 + t97 * t148 + t68 * t152 + t189, -t99 * t129 - t76 * t141 - t82 * t148 - t60 * t152 + t246, t99 * t128 + t82 * t147 - t60 * t154 - t292 * t76 - t247, -t68 * t112 + t60 * t99 + t82 * t76 + t97 * t85 + t95 * t86 + t271, t148 * t262 + t152 * t254, 0.2e1 * t152 * t181 * t251 - t148 * t211, -t115 * t147 + t181 * t195, -t113 * t255 + t120 * t152, t113 * t147 + t183 * t195, t53, t55 * t113 - t34 * t128 - t25 * t147 + t15 * t154 - t183 * t196 + t20 * t292, t55 * t115 + t35 * t128 + t26 * t147 - t16 * t154 + t181 * t196 - t21 * t292, -t21 * t113 - t20 * t115 + (t129 * t35 + t148 * t26 + t152 * t16) * t183 + (-t129 * t34 - t148 * t25 - t15 * t152) * t181, t15 * t34 + t16 * t35 + t25 * t20 + t26 * t21 + t46 * t92 + t69 * t55, t31 * t94 - t66 * t39, -t31 * t93 + t94 * t32 + t39 * t63 - t66 * t40, t94 * t128 - t39 * t135 - t66 * t147 - t31 * t154, -t32 * t93 + t63 * t40, -t93 * t128 - t40 * t135 + t63 * t147 - t32 * t154, -t135 * t147 - t104, -t9 * t128 + t4 * t135 + t147 * t200 + t2 * t154 + t59 * t32 - t36 * t93 + t43 * t40 + t42 * t63, -t1 * t154 + t10 * t128 - t3 * t135 + t6 * t147 - t59 * t31 - t36 * t94 - t43 * t39 + t42 * t66, t1 * t93 - t10 * t32 + t2 * t94 - t200 * t39 - t3 * t63 + t9 * t31 - t4 * t66 - t6 * t40, t1 * t10 + t2 * t9 - t200 * t4 + t6 * t3 + t36 * t59 + t43 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -qJ(2) * t223, 0, 0, 0, 0, 0, 0, 0.2e1 * t298, t166 + (-t141 - t228) * qJD(3), t294, -t102 * t292 + t103 * t141, 0, 0, 0, 0, 0, 0, t294, -0.2e1 * t298, t128 + t130, t281 + t260 - t97 * t141 + (-qJD(4) - t95) * t292, 0, 0, 0, 0, 0, 0, t208 + t258, t263 + t295, t254 + t120 + (t261 + t264) * t292, t69 * t141 - t15 * t181 + t16 * t183 + t213 * t292, 0, 0, 0, 0, 0, 0, t217 + t276, t272 - t297, t221 - t290, t1 * t153 + t43 * t141 + t199 * t2 + t200 * t305 + t308 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t293, t166 + (t141 - t228) * qJD(3), -t257, 0, 0, -t159 * t292 + t197, t159 * t141 + t198, 0, 0, 0, t96, 0, t257, t293, -t257, pkin(3) * t128 - t265 + (-t103 - t97) * t292 + (t95 - t291) * t141, t98 * t141 - t197 + t270, -t82 * t141 + t292 * t98 + 0.2e1 * t179 - t198, -t75 * pkin(3) - t68 * qJ(4) - t95 * t103 - t291 * t97 - t82 * t98, t209 * t181, t211 * t292 + t120 - t254, t263 - t295, -t210 * t183, t208 - t258, t257, t244 * t113 + t25 * t141 + t46 * t181 - t289 * t183 - t29 * t292, t244 * t115 - t26 * t141 + t289 * t181 + t46 * t183 + t292 * t30, t30 * t113 + t29 * t115 + (qJD(5) * t115 - t26 * t292 - t15) * t183 + (qJD(5) * t113 + t25 * t292 - t16) * t181, t46 * qJ(4) + qJD(5) * t213 - t214 * t279 + t244 * t69 - t25 * t29 - t26 * t30, t304, t221 + t290, t272 + t297, t306, t217 - t276, t135 * t141, -t107 * t128 - t286 * t135 - t141 * t200 + t171 * t32 - t199 * t36 + t245 * t63 + t305 * t43, t108 * t128 + t285 * t135 - t6 * t141 + t36 * t153 - t171 * t31 + t245 * t66 + t308 * t43, t107 * t31 - t108 * t32 + t285 * t63 + t286 * t66 - t307, t1 * t108 + t2 * t107 + t36 * t171 + t200 * t286 + t245 * t43 - t285 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t257, -qJD(3) ^ 2 - t287, t97 * qJD(3) + t270 + t75, 0, 0, 0, 0, 0, 0, -qJD(3) * t113 - t295, -qJD(3) * t115 + t208 (-t113 * t183 + t262) * t292, -t69 * qJD(3) + (-t181 * t25 + t183 * t26) * t292 + t214, 0, 0, 0, 0, 0, 0, -qJD(3) * t63 + t297, -qJD(3) * t66 + t217, -t304 - t306, -t43 * qJD(3) + t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, t210, -t113 ^ 2 - t115 ^ 2, t26 * t113 + t25 * t115 + t46, 0, 0, 0, 0, 0, 0, t66 * t135 + t32, -t31 - t300, -t301 - t302, -t200 * t66 + t6 * t63 + t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, t301 - t302, -t31 + t300, -t280, t215 + (-qJD(6) + t135) * t66, -t128, t6 * t135 - t43 * t66 + t2, -t135 * t200 + t43 * t63 - t1, 0, 0;];
tauc_reg  = t5;
