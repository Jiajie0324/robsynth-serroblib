% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:20:28
% EndTime: 2019-03-08 23:20:50
% DurationCPUTime: 9.53s
% Computational Cost: add. (11763->570), mult. (29455->798), div. (0->0), fcn. (22373->12), ass. (0->259)
t255 = sin(qJ(3));
t258 = cos(qJ(3));
t273 = pkin(3) * t255 - pkin(9) * t258;
t219 = t273 * qJD(3);
t254 = sin(qJ(4));
t256 = sin(qJ(2));
t257 = cos(qJ(4));
t309 = qJD(3) * t255;
t250 = sin(pkin(6));
t315 = qJD(1) * t250;
t259 = cos(qJ(2));
t326 = t258 * t259;
t372 = pkin(8) * t254;
t401 = (-t254 * t326 + t256 * t257) * t315 - t257 * t219 - t309 * t372;
t225 = -pkin(3) * t258 - pkin(9) * t255 - pkin(2);
t305 = qJD(4) * t257;
t400 = t254 * t219 + t225 * t305 - (t254 * t256 + t257 * t326) * t315;
t311 = qJD(2) * t258;
t235 = -qJD(4) + t311;
t327 = t257 * t258;
t237 = pkin(8) * t327;
t268 = pkin(4) * t255 - qJ(5) * t327;
t302 = t257 * qJD(5);
t399 = t255 * t302 - t268 * qJD(3) - (-t237 + (qJ(5) * t255 - t225) * t254) * qJD(4) + t401;
t328 = t255 * t257;
t398 = -(-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t328 - (-qJD(5) * t255 + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t258) * t254 - t400;
t303 = t257 * qJD(3);
t312 = qJD(2) * t255;
t215 = t254 * t312 - t303;
t310 = qJD(3) * t254;
t217 = t257 * t312 + t310;
t249 = sin(pkin(12));
t251 = cos(pkin(12));
t138 = t215 * t251 + t249 * t217;
t253 = sin(qJ(6));
t270 = -t215 * t249 + t251 * t217;
t374 = cos(qJ(6));
t283 = qJD(6) * t374;
t304 = qJD(6) * t253;
t300 = qJD(3) * qJD(4);
t306 = qJD(4) * t255;
t289 = t254 * t306;
t290 = t258 * t303;
t383 = t289 - t290;
t161 = qJD(2) * t383 - t257 * t300;
t308 = qJD(3) * t258;
t291 = t254 * t308;
t266 = t255 * t305 + t291;
t162 = qJD(2) * t266 + t254 * t300;
t98 = -t249 * t161 + t162 * t251;
t99 = -t161 * t251 - t162 * t249;
t24 = t138 * t283 + t253 * t98 + t270 * t304 - t374 * t99;
t230 = -qJD(6) + t235;
t72 = t138 * t374 + t253 * t270;
t364 = t230 * t72;
t397 = -t24 - t364;
t285 = t256 * t315;
t222 = qJD(2) * pkin(8) + t285;
t252 = cos(pkin(6));
t314 = qJD(1) * t258;
t168 = -t255 * t222 + t252 * t314;
t218 = t273 * qJD(2);
t118 = -t254 * t168 + t257 * t218;
t368 = -qJ(5) - pkin(9);
t280 = qJD(4) * t368;
t396 = -qJD(2) * t268 - t254 * qJD(5) + t257 * t280 - t118;
t119 = t257 * t168 + t254 * t218;
t292 = t254 * t311;
t395 = -qJ(5) * t292 - t254 * t280 + t119 - t302;
t370 = t72 ^ 2;
t382 = -t253 * t138 + t270 * t374;
t371 = t382 ^ 2;
t394 = -t370 + t371;
t369 = t72 * t382;
t209 = t249 * t257 + t251 * t254;
t197 = t209 * qJD(4);
t320 = t209 * t311 - t197;
t208 = t249 * t254 - t251 * t257;
t393 = t235 * t208;
t331 = t252 * t255;
t296 = qJD(1) * t331;
t169 = t222 * t258 + t296;
t158 = qJD(3) * pkin(9) + t169;
t284 = t259 * t315;
t171 = qJD(2) * t225 - t284;
t102 = -t158 * t254 + t257 * t171;
t83 = -qJ(5) * t217 + t102;
t65 = -pkin(4) * t235 + t83;
t104 = t158 * t257 + t171 * t254;
t84 = -qJ(5) * t215 + t104;
t78 = t249 * t84;
t36 = t251 * t65 - t78;
t381 = pkin(10) * t270;
t21 = -pkin(5) * t235 + t36 - t381;
t363 = t251 * t84;
t37 = t249 * t65 + t363;
t389 = pkin(10) * t138;
t26 = t37 - t389;
t301 = qJD(2) * qJD(3);
t241 = t255 * t301;
t313 = qJD(2) * t250;
t293 = t259 * t313;
t129 = -t222 * t309 + (qJD(3) * t252 + t293) * t314;
t166 = (t219 + t285) * qJD(2);
t51 = -qJD(4) * t104 - t254 * t129 + t257 * t166;
t33 = pkin(4) * t241 + t161 * qJ(5) - t217 * qJD(5) + t51;
t307 = qJD(4) * t254;
t50 = t257 * t129 - t158 * t307 + t254 * t166 + t171 * t305;
t35 = -qJ(5) * t162 - qJD(5) * t215 + t50;
t14 = -t249 * t35 + t251 * t33;
t8 = pkin(5) * t241 - pkin(10) * t99 + t14;
t15 = t249 * t33 + t251 * t35;
t9 = -pkin(10) * t98 + t15;
t264 = -t21 * t283 - t253 * t8 + t26 * t304 - t374 * t9;
t157 = -qJD(3) * pkin(3) - t168;
t124 = pkin(4) * t215 + qJD(5) + t157;
t67 = pkin(5) * t138 + t124;
t392 = t67 * t72 + t264;
t361 = -t398 * t249 + t251 * t399;
t360 = t249 * t399 + t398 * t251;
t356 = t249 * t395 + t251 * t396;
t355 = t249 * t396 - t251 * t395;
t25 = qJD(6) * t382 + t253 * t99 + t374 * t98;
t362 = t382 * t230;
t391 = -t25 - t362;
t11 = t253 * t21 + t26 * t374;
t2 = -qJD(6) * t11 - t253 * t9 + t374 * t8;
t390 = -t382 * t67 + t2;
t388 = pkin(5) * t312 + pkin(10) * t393 - t356;
t387 = -pkin(10) * t320 - t355;
t121 = t197 * t255 + t249 * t291 - t251 * t290;
t386 = pkin(5) * t309 + pkin(10) * t121 - t361;
t120 = t208 * t306 - t209 * t308;
t385 = -pkin(10) * t120 + t360;
t384 = t138 * t270;
t380 = t102 * t235 + t50;
t379 = t104 * t235 - t51;
t274 = -t169 + (-t292 + t307) * pkin(4);
t177 = t254 * t225 + t237;
t188 = t208 * t255;
t211 = t257 * t225;
t141 = -qJ(5) * t328 + t211 + (-pkin(4) - t372) * t258;
t330 = t254 * t255;
t149 = -qJ(5) * t330 + t177;
t85 = t251 * t141 - t149 * t249;
t57 = -pkin(5) * t258 + pkin(10) * t188 + t85;
t187 = t209 * t255;
t86 = t249 * t141 + t251 * t149;
t60 = -pkin(10) * t187 + t86;
t27 = -t253 * t60 + t374 * t57;
t376 = qJD(6) * t27 + t253 * t386 - t374 * t385;
t28 = t253 * t57 + t374 * t60;
t375 = -qJD(6) * t28 + t253 * t385 + t374 * t386;
t373 = pkin(4) * t249;
t226 = t368 * t254;
t227 = t368 * t257;
t154 = t251 * t226 + t227 * t249;
t125 = -pkin(10) * t209 + t154;
t155 = t249 * t226 - t251 * t227;
t126 = -pkin(10) * t208 + t155;
t59 = t253 * t125 + t126 * t374;
t367 = qJD(6) * t59 - t253 * t387 + t374 * t388;
t58 = t125 * t374 - t253 * t126;
t366 = -qJD(6) * t58 + t253 * t388 + t374 * t387;
t43 = t251 * t83 - t78;
t365 = qJD(2) * pkin(2);
t136 = -t253 * t208 + t209 * t374;
t359 = -qJD(6) * t136 - t253 * t393 + t320 * t374;
t358 = t208 * t283 + t209 * t304 - t253 * t320 - t374 * t393;
t240 = pkin(4) * t251 + pkin(5);
t191 = t253 * t240 + t373 * t374;
t42 = -t249 * t83 - t363;
t29 = t42 + t389;
t30 = t43 - t381;
t357 = t191 * qJD(6) - t253 * t30 + t29 * t374;
t190 = t240 * t374 - t253 * t373;
t354 = -t190 * qJD(6) + t253 * t29 + t30 * t374;
t276 = qJD(2) * t284;
t130 = qJD(3) * t296 + t222 * t308 + t255 * t276;
t334 = t250 * t256;
t200 = -t252 * t258 + t255 * t334;
t351 = t130 * t200;
t350 = t130 * t254;
t349 = t130 * t255;
t348 = t130 * t257;
t347 = t270 ^ 2;
t346 = t270 * t235;
t345 = t138 ^ 2;
t344 = t138 * t235;
t343 = t157 * t254;
t342 = t157 * t257;
t341 = t161 * t254;
t340 = t162 * t257;
t339 = t215 * t235;
t338 = t217 * t215;
t337 = t217 * t235;
t336 = t235 * t254;
t335 = t235 * t257;
t333 = t250 * t259;
t261 = qJD(2) ^ 2;
t332 = t250 * t261;
t329 = t254 * t258;
t260 = qJD(3) ^ 2;
t325 = t260 * t255;
t324 = t260 * t258;
t323 = -pkin(5) * t320 + t274;
t322 = (-t255 * t303 - t258 * t307) * pkin(8) + t400;
t321 = -qJD(4) * t177 - t401;
t220 = pkin(4) * t330 + t255 * pkin(8);
t247 = t255 ^ 2;
t248 = t258 ^ 2;
t316 = t247 - t248;
t298 = t256 * t332;
t297 = t255 * t261 * t258;
t170 = pkin(4) * t266 + pkin(8) * t308;
t243 = -pkin(4) * t257 - pkin(3);
t294 = t256 * t313;
t287 = t235 * t305;
t286 = t235 * t312;
t279 = t255 * t284;
t278 = t255 * t293;
t277 = t258 * t293;
t275 = t258 * t241;
t223 = -t284 - t365;
t272 = -t223 - t284;
t271 = -t102 * t257 - t104 * t254;
t269 = qJD(2) * t247 - t235 * t258;
t90 = pkin(4) * t162 + t130;
t201 = t258 * t334 + t331;
t147 = -t201 * t254 - t257 * t333;
t267 = -t201 * t257 + t254 * t333;
t88 = t147 * t251 + t249 * t267;
t89 = t147 * t249 - t251 * t267;
t45 = -t253 * t89 + t374 * t88;
t46 = t253 * t88 + t374 * t89;
t117 = -t253 * t187 - t188 * t374;
t52 = pkin(5) * t98 + t90;
t265 = qJD(3) * (-t272 - t365);
t262 = t129 * t258 + t349 + (-t168 * t258 - t169 * t255) * qJD(3);
t178 = pkin(5) * t208 + t243;
t176 = -pkin(8) * t329 + t211;
t175 = (-t235 - t311) * t309;
t146 = qJD(3) * t201 + t278;
t145 = -qJD(3) * t200 + t277;
t142 = pkin(5) * t187 + t220;
t135 = t208 * t374 + t209 * t253;
t116 = t187 * t374 - t188 * t253;
t108 = pkin(4) * t217 + pkin(5) * t270;
t87 = -pkin(5) * t120 + t170;
t77 = qJD(4) * t147 + t145 * t257 + t254 * t294;
t76 = qJD(4) * t267 - t145 * t254 + t257 * t294;
t49 = qJD(6) * t117 - t120 * t374 - t253 * t121;
t48 = -t253 * t120 + t121 * t374 + t187 * t283 - t188 * t304;
t41 = t249 * t76 + t251 * t77;
t39 = -t249 * t77 + t251 * t76;
t10 = t21 * t374 - t253 * t26;
t6 = -qJD(6) * t46 - t253 * t41 + t374 * t39;
t5 = qJD(6) * t45 + t253 * t39 + t374 * t41;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t259 * t332, 0, 0, 0, 0, 0, 0, 0, 0, -t258 * t298 + (-t146 - t278) * qJD(3), t255 * t298 + (-t145 - t277) * qJD(3) (t145 * t258 + t146 * t255 + (t200 * t258 - t201 * t255) * qJD(3)) * qJD(2), t129 * t201 + t351 + t169 * t145 - t168 * t146 + (t223 - t284) * t294, 0, 0, 0, 0, 0, 0, t146 * t215 + t147 * t241 + t162 * t200 - t235 * t76, t146 * t217 - t161 * t200 + t235 * t77 + t241 * t267, t147 * t161 + t162 * t267 - t215 * t77 - t217 * t76, t102 * t76 + t104 * t77 + t146 * t157 + t147 * t51 - t267 * t50 + t351, 0, 0, 0, 0, 0, 0, t138 * t146 + t200 * t98 - t235 * t39 + t241 * t88, t146 * t270 + t200 * t99 + t235 * t41 - t241 * t89, -t138 * t41 - t270 * t39 - t88 * t99 - t89 * t98, t124 * t146 + t14 * t88 + t15 * t89 + t200 * t90 + t36 * t39 + t37 * t41, 0, 0, 0, 0, 0, 0, t146 * t72 + t200 * t25 - t230 * t6 + t241 * t45, t146 * t382 - t200 * t24 + t230 * t5 - t241 * t46, t24 * t45 - t25 * t46 - t382 * t6 - t5 * t72, t10 * t6 + t11 * t5 + t146 * t67 + t2 * t45 + t200 * t52 - t264 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t275, -0.2e1 * t316 * t301, t324, -0.2e1 * t275, -t325, 0, -pkin(8) * t324 + t255 * t265, pkin(8) * t325 + t258 * t265 (-t247 - t248) * t276 + t262 ((t168 * t255 - t169 * t258) * t259 + (-t223 - t365) * t256) * t315 + t262 * pkin(8), -t161 * t328 - t217 * t383 (-t215 * t257 - t217 * t254) * t308 + (t341 - t340 + (t215 * t254 - t217 * t257) * qJD(4)) * t255, t235 * t289 + t161 * t258 + (t217 * t255 + t257 * t269) * qJD(3), t162 * t330 + t215 * t266, t255 * t287 + t162 * t258 + (-t215 * t255 - t254 * t269) * qJD(3), t175, -t321 * t235 + (-t51 + (pkin(8) * t215 + t343) * qJD(3)) * t258 + (-t215 * t284 + t157 * t305 + pkin(8) * t162 + t350 + (qJD(2) * t176 + t102) * qJD(3)) * t255, t322 * t235 + (t50 + (pkin(8) * t217 + t342) * qJD(3)) * t258 + (-t217 * t284 - t157 * t307 - pkin(8) * t161 + t348 + (-qJD(2) * t177 - t104) * qJD(3)) * t255, t161 * t176 - t162 * t177 - t321 * t217 - t322 * t215 + t271 * t308 + (-t254 * t50 - t257 * t51 + (t102 * t254 - t104 * t257) * qJD(4)) * t255, -t157 * t279 + t176 * t51 + t177 * t50 + t322 * t104 + t321 * t102 + (t157 * t308 + t349) * pkin(8), -t121 * t270 - t188 * t99, t120 * t270 + t121 * t138 - t187 * t99 + t188 * t98, t121 * t235 - t99 * t258 + (-qJD(2) * t188 + t270) * t309, -t120 * t138 + t187 * t98, -t120 * t235 + t98 * t258 + (-qJD(2) * t187 - t138) * t309, t175, -t120 * t124 + t138 * t170 - t14 * t258 + t187 * t90 + t220 * t98 + t361 * t235 + (-t138 * t284 + (qJD(2) * t85 + t36) * qJD(3)) * t255, -t121 * t124 + t270 * t170 + t15 * t258 - t188 * t90 + t220 * t99 - t360 * t235 + (-t270 * t284 + (-qJD(2) * t86 - t37) * qJD(3)) * t255, t120 * t37 + t121 * t36 + t138 * t360 + t14 * t188 - t15 * t187 + t270 * t361 - t85 * t99 - t86 * t98, t14 * t85 + t15 * t86 + t220 * t90 - t360 * t37 - t361 * t36 + (t170 - t279) * t124, -t117 * t24 - t382 * t48, t116 * t24 - t117 * t25 - t382 * t49 + t48 * t72, t48 * t230 + t24 * t258 + (qJD(2) * t117 + t382) * t309, t116 * t25 + t49 * t72, t49 * t230 + t25 * t258 + (-qJD(2) * t116 - t72) * t309 (-t230 - t311) * t309, t116 * t52 + t142 * t25 - t2 * t258 + t49 * t67 + t72 * t87 - t375 * t230 + (-t72 * t284 + (qJD(2) * t27 + t10) * qJD(3)) * t255, -t264 * t258 + t117 * t52 - t142 * t24 - t48 * t67 + t382 * t87 + t376 * t230 + (-t382 * t284 + (-qJD(2) * t28 - t11) * qJD(3)) * t255, t10 * t48 - t11 * t49 + t116 * t264 - t117 * t2 + t24 * t27 - t25 * t28 - t375 * t382 - t376 * t72, -t264 * t28 + t142 * t52 + t2 * t27 + (t87 - t279) * t67 + t376 * t11 + t375 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, t316 * t261, 0, t297, 0, 0, qJD(3) * t169 - t223 * t312 - t130, t272 * t311, 0, 0, -t217 * t335 - t341 (-t161 + t339) * t257 + (-t162 + t337) * t254, -t287 + (t235 * t327 + (-t217 + t310) * t255) * qJD(2), -t215 * t336 - t340, t235 * t307 + (-t235 * t329 + (t215 + t303) * t255) * qJD(2), t286, -pkin(3) * t162 + t118 * t235 - t348 - t169 * t215 + (pkin(9) * t335 + t343) * qJD(4) + (-t102 * t255 + (-pkin(9) * t309 - t157 * t258) * t254) * qJD(2), pkin(3) * t161 - t119 * t235 + t350 - t169 * t217 + (-pkin(9) * t336 + t342) * qJD(4) + (-t157 * t327 + (-pkin(9) * t303 + t104) * t255) * qJD(2), t118 * t217 + t119 * t215 + ((qJD(4) * t217 - t162) * pkin(9) + t380) * t257 + ((qJD(4) * t215 - t161) * pkin(9) + t379) * t254, -t130 * pkin(3) - t102 * t118 - t104 * t119 - t157 * t169 + (qJD(4) * t271 - t51 * t254 + t50 * t257) * pkin(9), t99 * t209 + t270 * t393, -t138 * t393 - t99 * t208 - t209 * t98 + t270 * t320, -t393 * t235 + (qJD(3) * t209 - t270) * t312, -t138 * t320 + t98 * t208, -t320 * t235 + (-qJD(3) * t208 + t138) * t312, t286, t208 * t90 + t243 * t98 - t356 * t235 + t274 * t138 - t320 * t124 + (qJD(3) * t154 - t36) * t312, t209 * t90 + t243 * t99 + t355 * t235 + t274 * t270 + t393 * t124 + (-qJD(3) * t155 + t37) * t312, -t138 * t355 - t14 * t209 - t15 * t208 - t154 * t99 - t155 * t98 - t270 * t356 + t320 * t37 - t36 * t393, t124 * t274 + t14 * t154 + t15 * t155 + t90 * t243 + t355 * t37 + t356 * t36, -t24 * t136 - t358 * t382, t24 * t135 - t136 * t25 + t358 * t72 + t359 * t382, t358 * t230 + (qJD(3) * t136 - t382) * t312, t25 * t135 - t359 * t72, -t359 * t230 + (-qJD(3) * t135 + t72) * t312, t230 * t312, t135 * t52 + t178 * t25 + t323 * t72 - t359 * t67 + t367 * t230 + (qJD(3) * t58 - t10) * t312, t136 * t52 - t178 * t24 + t323 * t382 - t358 * t67 - t366 * t230 + (-qJD(3) * t59 + t11) * t312, t10 * t358 + t11 * t359 + t135 * t264 - t136 * t2 + t24 * t58 - t25 * t59 + t366 * t72 + t367 * t382, -t10 * t367 - t11 * t366 + t52 * t178 + t2 * t58 - t264 * t59 + t323 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, -t215 ^ 2 + t217 ^ 2, -t161 - t339, -t338, -t162 - t337, t241, -t157 * t217 - t379, t157 * t215 - t380, 0, 0, t384, -t345 + t347, t99 - t344, -t384, -t98 - t346, t241, -t124 * t270 + t42 * t235 + (-t138 * t217 + t241 * t251) * pkin(4) + t14, t124 * t138 - t43 * t235 + (-t217 * t270 - t241 * t249) * pkin(4) - t15 (-t249 * t98 - t251 * t99) * pkin(4) + (t37 + t42) * t270 + (t43 - t36) * t138, -t36 * t42 - t37 * t43 + (-t124 * t217 + t14 * t251 + t15 * t249) * pkin(4), t369, t394, t397, -t369, t391, t241, -t108 * t72 + t190 * t241 + t230 * t357 + t390, -t108 * t382 - t191 * t241 - t230 * t354 + t392, t190 * t24 - t191 * t25 + (t11 + t357) * t382 + (-t10 + t354) * t72, -t10 * t357 - t67 * t108 - t11 * t354 + t2 * t190 - t191 * t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98 - t346, t99 + t344, -t345 - t347, t138 * t37 + t270 * t36 + t90, 0, 0, 0, 0, 0, 0, t25 - t362, -t24 + t364, -t370 - t371, t10 * t382 + t11 * t72 + t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, t394, t397, -t369, t391, t241, -t11 * t230 + t390, -t10 * t230 + t392, 0, 0;];
tauc_reg  = t1;
