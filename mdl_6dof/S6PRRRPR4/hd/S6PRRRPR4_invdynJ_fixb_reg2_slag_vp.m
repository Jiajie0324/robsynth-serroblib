% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRPR4_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR4_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR4_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR4_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR4_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR4_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:20:36
% EndTime: 2019-03-08 23:21:05
% DurationCPUTime: 17.61s
% Computational Cost: add. (14568->766), mult. (33762->1052), div. (0->0), fcn. (26271->18), ass. (0->322)
t304 = sin(qJ(3));
t307 = cos(qJ(3));
t343 = pkin(3) * t304 - pkin(9) * t307;
t244 = t343 * qJD(3);
t303 = sin(qJ(4));
t305 = sin(qJ(2));
t306 = cos(qJ(4));
t389 = qJD(3) * t304;
t298 = sin(pkin(6));
t397 = qJD(1) * t298;
t308 = cos(qJ(2));
t408 = t307 * t308;
t460 = pkin(8) * t303;
t500 = t306 * t244 + t389 * t460 - (-t303 * t408 + t305 * t306) * t397;
t344 = pkin(3) * t307 + pkin(9) * t304;
t251 = -pkin(2) - t344;
t385 = qJD(4) * t306;
t412 = t303 * t305;
t499 = t303 * t244 + t251 * t385 - (t306 * t408 + t412) * t397;
t391 = qJD(2) * t307;
t498 = qJD(4) - t391;
t409 = t306 * t307;
t274 = pkin(8) * t409;
t334 = pkin(4) * t304 - qJ(5) * t409;
t382 = t306 * qJD(5);
t497 = -t304 * t382 + t334 * qJD(3) + (-t274 + (qJ(5) * t304 - t251) * t303) * qJD(4) + t500;
t383 = t306 * qJD(3);
t393 = qJD(2) * t304;
t239 = t303 * t393 - t383;
t390 = qJD(3) * t303;
t241 = t306 * t393 + t390;
t297 = sin(pkin(12));
t299 = cos(pkin(12));
t152 = t239 * t299 + t297 * t241;
t302 = sin(qJ(6));
t338 = -t239 * t297 + t299 * t241;
t466 = cos(qJ(6));
t363 = qJD(6) * t466;
t384 = qJD(6) * t302;
t380 = qJD(2) * qJD(3);
t359 = t307 * t380;
t378 = t304 * qJDD(2);
t386 = qJD(4) * t304;
t479 = qJD(2) * t386 - qJDD(3);
t143 = -qJD(4) * t383 + (-t359 - t378) * t306 + t479 * t303;
t144 = t303 * (qJD(3) * (qJD(4) + t391) + t378) + t479 * t306;
t67 = -t297 * t143 + t144 * t299;
t68 = -t143 * t299 - t144 * t297;
t18 = t152 * t363 + t302 * t67 + t338 * t384 - t466 * t68;
t262 = -qJD(6) - t498;
t78 = t152 * t466 + t302 * t338;
t448 = t262 * t78;
t496 = -t18 - t448;
t410 = t304 * t306;
t495 = -(-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t410 - (-qJD(5) * t304 + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t307) * t303 - t499;
t246 = qJD(2) * pkin(8) + t305 * t397;
t230 = t304 * t246;
t300 = cos(pkin(6));
t396 = qJD(1) * t300;
t183 = t307 * t396 - t230;
t243 = t343 * qJD(2);
t130 = -t303 * t183 + t306 * t243;
t452 = qJ(5) + pkin(9);
t355 = qJD(4) * t452;
t494 = -qJD(2) * t334 - t303 * qJD(5) - t306 * t355 - t130;
t131 = t306 * t183 + t303 * t243;
t370 = t303 * t391;
t493 = -qJ(5) * t370 + t303 * t355 + t131 - t382;
t455 = t78 ^ 2;
t478 = -t302 * t152 + t338 * t466;
t456 = t478 ^ 2;
t492 = -t455 + t456;
t454 = t78 * t478;
t233 = t297 * t306 + t299 * t303;
t219 = t233 * qJD(4);
t403 = t233 * t391 - t219;
t232 = t297 * t303 - t299 * t306;
t402 = t498 * t232;
t395 = qJD(1) * t304;
t184 = t246 * t307 + t300 * t395;
t174 = qJD(3) * pkin(9) + t184;
t394 = qJD(1) * t308;
t365 = t298 * t394;
t186 = qJD(2) * t251 - t365;
t111 = -t174 * t303 + t306 * t186;
t89 = -qJ(5) * t241 + t111;
t71 = pkin(4) * t498 + t89;
t113 = t174 * t306 + t186 * t303;
t90 = -qJ(5) * t239 + t113;
t84 = t297 * t90;
t39 = t299 * t71 - t84;
t477 = pkin(10) * t338;
t28 = pkin(5) * t498 + t39 - t477;
t447 = t299 * t90;
t40 = t297 * t71 + t447;
t488 = pkin(10) * t152;
t31 = t40 - t488;
t288 = t307 * qJDD(2);
t231 = t304 * t380 + qJDD(4) - t288;
t381 = qJD(1) * qJD(2);
t362 = t305 * t381;
t414 = t298 * t308;
t340 = -qJDD(1) * t414 + t298 * t362;
t124 = qJD(2) * t244 + qJDD(2) * t251 + t340;
t379 = qJDD(1) * t300;
t361 = t308 * t381;
t434 = qJDD(2) * pkin(8);
t482 = t434 + (qJDD(1) * t305 + t361) * t298 + qJD(3) * t396;
t375 = -t304 * t379 - t307 * t482;
t107 = -t246 * t389 - t375;
t97 = qJDD(3) * pkin(9) + t107;
t38 = -qJD(4) * t113 + t306 * t124 - t303 * t97;
t22 = pkin(4) * t231 + qJ(5) * t143 - qJD(5) * t241 + t38;
t387 = qJD(4) * t303;
t328 = -t303 * t124 + t174 * t387 - t186 * t385 - t306 * t97;
t24 = -qJ(5) * t144 - qJD(5) * t239 - t328;
t8 = t299 * t22 - t297 * t24;
t6 = pkin(5) * t231 - pkin(10) * t68 + t8;
t9 = t297 * t22 + t299 * t24;
t7 = -pkin(10) * t67 + t9;
t1 = t28 * t363 + t302 * t6 - t31 * t384 + t466 * t7;
t436 = sin(pkin(11));
t349 = t436 * t308;
t437 = cos(pkin(11));
t352 = t437 * t305;
t216 = t300 * t352 + t349;
t354 = t298 * t437;
t160 = t216 * t307 - t304 * t354;
t350 = t436 * t305;
t351 = t437 * t308;
t218 = -t300 * t350 + t351;
t353 = t298 * t436;
t162 = t218 * t307 + t304 * t353;
t215 = -t300 * t351 + t350;
t217 = t300 * t349 + t352;
t415 = t298 * t305;
t223 = t300 * t304 + t307 * t415;
t294 = qJ(4) + pkin(12);
t289 = qJ(6) + t294;
t278 = sin(t289);
t279 = cos(t289);
t173 = -qJD(3) * pkin(3) - t183;
t136 = pkin(4) * t239 + qJD(5) + t173;
t73 = pkin(5) * t152 + t136;
t491 = t73 * t78 - g(1) * (-t162 * t279 - t217 * t278) - g(2) * (-t160 * t279 - t215 * t278) - g(3) * (-t223 * t279 + t278 * t414) - t1;
t443 = t297 * t493 + t299 * t494;
t442 = t297 * t494 - t299 * t493;
t19 = qJD(6) * t478 + t302 * t68 + t466 * t67;
t446 = t478 * t262;
t490 = -t19 - t446;
t439 = t495 * t297 + t299 * t497;
t438 = t297 * t497 - t495 * t299;
t13 = t302 * t28 + t31 * t466;
t2 = -qJD(6) * t13 - t302 * t7 + t466 * t6;
t489 = -t478 * t73 - g(1) * (-t162 * t278 + t217 * t279) - g(2) * (-t160 * t278 + t215 * t279) - g(3) * (-t223 * t278 - t279 * t414) + t2;
t487 = -pkin(5) * t393 + pkin(10) * t402 + t443;
t486 = pkin(10) * t403 + t442;
t368 = t307 * t383;
t388 = qJD(3) * t307;
t369 = t303 * t388;
t133 = t219 * t304 + t297 * t369 - t299 * t368;
t485 = pkin(5) * t389 + pkin(10) * t133 + t439;
t132 = t232 * t386 - t233 * t388;
t484 = -pkin(10) * t132 - t438;
t483 = t152 * t338;
t481 = t304 * t385 + t369;
t480 = -t111 * t498 - t328;
t476 = -t113 * t498 - t38;
t345 = -t184 + (-t370 + t387) * pkin(4);
t193 = t303 * t251 + t274;
t166 = -t223 * t303 - t306 * t414;
t473 = -g(1) * (-t162 * t303 + t217 * t306) - g(2) * (-t160 * t303 + t215 * t306) - g(3) * t166;
t472 = pkin(4) * t144 + qJDD(5);
t435 = qJDD(2) * pkin(2);
t190 = t340 - t435;
t309 = qJD(3) ^ 2;
t342 = g(1) * t217 + g(2) * t215;
t471 = -pkin(8) * t309 + t298 * (-g(3) * t308 + t362) - t190 + t342 + t435;
t469 = pkin(5) * t67;
t204 = t232 * t304;
t235 = t306 * t251;
t155 = -qJ(5) * t410 + t235 + (-pkin(4) - t460) * t307;
t413 = t303 * t304;
t168 = -qJ(5) * t413 + t193;
t91 = t299 * t155 - t168 * t297;
t58 = -pkin(5) * t307 + pkin(10) * t204 + t91;
t203 = t233 * t304;
t92 = t297 * t155 + t299 * t168;
t61 = -pkin(10) * t203 + t92;
t32 = -t302 * t61 + t466 * t58;
t468 = qJD(6) * t32 + t302 * t485 - t466 * t484;
t33 = t302 * t58 + t466 * t61;
t467 = -qJD(6) * t33 + t302 * t484 + t466 * t485;
t463 = pkin(4) * t297;
t462 = pkin(4) * t303;
t461 = pkin(4) * t306;
t457 = g(3) * t305;
t284 = sin(t294);
t248 = pkin(5) * t284 + t462;
t453 = pkin(8) + t248;
t252 = t452 * t303;
t253 = t452 * t306;
t170 = -t299 * t252 - t253 * t297;
t137 = -pkin(10) * t233 + t170;
t171 = -t297 * t252 + t299 * t253;
t138 = -pkin(10) * t232 + t171;
t59 = t137 * t466 - t302 * t138;
t451 = qJD(6) * t59 + t302 * t487 + t466 * t486;
t60 = t302 * t137 + t138 * t466;
t450 = -qJD(6) * t60 - t302 * t486 + t466 * t487;
t46 = t299 * t89 - t84;
t449 = qJD(2) * pkin(2);
t150 = -t302 * t232 + t233 * t466;
t445 = -qJD(6) * t150 + t302 * t402 + t403 * t466;
t444 = t232 * t363 + t233 * t384 - t302 * t403 + t402 * t466;
t280 = pkin(4) * t299 + pkin(5);
t208 = t280 * t466 - t302 * t463;
t45 = -t297 * t89 - t447;
t34 = t45 + t488;
t35 = t46 - t477;
t441 = t208 * qJD(6) - t302 * t34 - t35 * t466;
t209 = t302 * t280 + t463 * t466;
t440 = -t209 * qJD(6) + t302 * t35 - t34 * t466;
t433 = qJDD(3) * pkin(3);
t430 = t143 * t303;
t429 = t144 * t306;
t428 = t338 ^ 2;
t427 = t338 * t498;
t426 = t152 ^ 2;
t425 = t152 * t498;
t424 = t239 * t498;
t423 = t239 * t303;
t422 = t241 * t239;
t421 = t241 * t498;
t420 = t241 * t306;
t419 = t278 * t307;
t418 = t279 * t307;
t417 = t284 * t307;
t285 = cos(t294);
t416 = t285 * t307;
t411 = t303 * t307;
t407 = qJDD(1) - g(3);
t406 = (-t304 * t383 - t307 * t387) * pkin(8) + t499;
t405 = -qJD(4) * t193 + t500;
t404 = -pkin(5) * t403 + t345;
t245 = pkin(4) * t413 + t304 * pkin(8);
t295 = t304 ^ 2;
t296 = t307 ^ 2;
t399 = t295 - t296;
t398 = t295 + t296;
t392 = qJD(2) * t305;
t310 = qJD(2) ^ 2;
t376 = t304 * t310 * t307;
t185 = pkin(4) * t481 + pkin(8) * t388;
t282 = pkin(3) + t461;
t374 = pkin(8) + t462;
t373 = t304 * t394;
t372 = t298 * t392;
t371 = qJD(2) * t414;
t366 = t498 * t393;
t364 = g(3) * (pkin(2) * t414 + pkin(8) * t415);
t358 = t308 * t380;
t249 = pkin(5) * t285 + t461;
t347 = t246 * t388 + t304 * t482 - t307 * t379;
t346 = t304 * t359;
t341 = g(1) * t218 + g(2) * t216;
t339 = -t111 * t306 - t113 * t303;
t242 = pkin(3) + t249;
t292 = -pkin(10) - t452;
t337 = t242 * t307 - t292 * t304;
t336 = t282 * t307 + t304 * t452;
t335 = qJDD(2) * t308 - t305 * t310;
t331 = -t223 * t306 + t303 * t414;
t94 = t166 * t299 + t297 * t331;
t95 = t166 * t297 - t299 * t331;
t48 = -t302 * t95 + t466 * t94;
t49 = t302 * t94 + t466 * t95;
t222 = -t300 * t307 + t304 * t415;
t129 = -t302 * t203 - t204 * t466;
t330 = t303 * t231 + t385 * t498;
t329 = t306 * t231 - t387 * t498;
t98 = t347 - t433;
t159 = t216 * t304 + t307 * t354;
t161 = t218 * t304 - t307 * t353;
t327 = g(1) * t161 + g(2) * t159 + g(3) * t222;
t326 = g(1) * t162 + g(2) * t160 + g(3) * t223;
t325 = t327 - t98;
t324 = g(3) * t414 - t342;
t323 = -g(3) * t415 - t341;
t322 = -pkin(9) * t231 + t173 * t498;
t321 = t324 * t304;
t57 = t98 + t472;
t319 = t327 - t347;
t318 = -pkin(9) * qJD(4) * t498 + t325;
t247 = -t365 - t449;
t316 = -pkin(8) * qJDD(3) + (t247 + t365 - t449) * qJD(3);
t314 = -t319 - t433 + t472;
t313 = t107 * t307 + t347 * t304 + (-t183 * t307 - t184 * t304) * qJD(3) - t341;
t228 = qJDD(6) + t231;
t207 = t217 * pkin(2);
t206 = t215 * pkin(2);
t194 = pkin(5) * t232 - t282;
t192 = -pkin(8) * t411 + t235;
t165 = -t231 * t307 + t389 * t498;
t164 = qJD(3) * t223 + t304 * t371;
t163 = -qJD(3) * t222 + t307 * t371;
t156 = pkin(5) * t203 + t245;
t149 = t232 * t466 + t233 * t302;
t128 = t203 * t466 - t204 * t302;
t117 = pkin(4) * t241 + pkin(5) * t338;
t93 = -pkin(5) * t132 + t185;
t83 = qJD(4) * t166 + t163 * t306 + t303 * t372;
t82 = qJD(4) * t331 - t163 * t303 + t306 * t372;
t52 = qJD(6) * t129 - t132 * t466 - t302 * t133;
t51 = -t302 * t132 + t133 * t466 + t203 * t363 - t204 * t384;
t44 = t297 * t82 + t299 * t83;
t42 = -t297 * t83 + t299 * t82;
t36 = t57 + t469;
t12 = t28 * t466 - t302 * t31;
t11 = -qJD(6) * t49 - t302 * t44 + t42 * t466;
t10 = qJD(6) * t48 + t302 * t42 + t44 * t466;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t407, 0, 0, 0, 0, 0, 0, t335 * t298 (-qJDD(2) * t305 - t308 * t310) * t298, 0, -g(3) + (t300 ^ 2 + (t305 ^ 2 + t308 ^ 2) * t298 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t164 - qJDD(3) * t222 + (-t304 * t358 + t307 * t335) * t298, -qJD(3) * t163 - qJDD(3) * t223 + (-t304 * t335 - t307 * t358) * t298 (t222 * t304 + t223 * t307) * qJDD(2) + (t163 * t307 + t164 * t304 + (t222 * t307 - t223 * t304) * qJD(3)) * qJD(2), t107 * t223 + t347 * t222 + t163 * t184 - t164 * t183 - g(3) + (-t190 * t308 + t247 * t392) * t298, 0, 0, 0, 0, 0, 0, t144 * t222 + t164 * t239 + t166 * t231 + t498 * t82, -t143 * t222 + t164 * t241 + t231 * t331 - t498 * t83, t143 * t166 + t144 * t331 - t239 * t83 - t241 * t82, t111 * t82 + t113 * t83 + t164 * t173 + t166 * t38 + t222 * t98 + t328 * t331 - g(3), 0, 0, 0, 0, 0, 0, t152 * t164 + t222 * t67 + t231 * t94 + t42 * t498, t164 * t338 + t222 * t68 - t231 * t95 - t44 * t498, -t152 * t44 - t338 * t42 - t67 * t95 - t68 * t94, t136 * t164 + t222 * t57 + t39 * t42 + t40 * t44 + t8 * t94 + t9 * t95 - g(3), 0, 0, 0, 0, 0, 0, -t11 * t262 + t164 * t78 + t19 * t222 + t228 * t48, t10 * t262 + t164 * t478 - t18 * t222 - t228 * t49, -t10 * t78 - t11 * t478 + t18 * t48 - t19 * t49, t1 * t49 + t10 * t13 + t11 * t12 + t164 * t73 + t2 * t48 + t222 * t36 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t407 * t414 + t342, -t407 * t415 + t341, 0, 0, qJDD(2) * t295 + 0.2e1 * t346, 0.2e1 * t288 * t304 - 0.2e1 * t380 * t399, qJDD(3) * t304 + t307 * t309, qJDD(2) * t296 - 0.2e1 * t346, qJDD(3) * t307 - t304 * t309, 0, t316 * t304 + t307 * t471, -t304 * t471 + t316 * t307, t398 * t434 + (-t361 * t398 - t457) * t298 + t313, -t190 * pkin(2) + g(1) * t207 + g(2) * t206 - t364 + (-t247 * t305 + (t183 * t304 - t184 * t307) * t308) * t397 + t313 * pkin(8), -t143 * t410 + (-t303 * t386 + t368) * t241 (-t239 * t306 - t241 * t303) * t388 + (t430 - t429 + (-t420 + t423) * qJD(4)) * t304 (t383 * t498 + t143) * t307 + (qJD(3) * t241 + t329) * t304, t144 * t413 + t239 * t481 (-t390 * t498 + t144) * t307 + (-qJD(3) * t239 - t330) * t304, t165, t192 * t231 + t405 * t498 + t323 * t303 + (-t38 + (pkin(8) * t239 + t173 * t303) * qJD(3) - t324 * t306) * t307 + (pkin(8) * t144 + qJD(3) * t111 + t173 * t385 - t239 * t365 + t303 * t98) * t304, -t193 * t231 - t406 * t498 + t323 * t306 + (-t328 + (pkin(8) * t241 + t173 * t306) * qJD(3) + t324 * t303) * t307 + (-pkin(8) * t143 - qJD(3) * t113 - t173 * t387 - t241 * t365 + t306 * t98) * t304, t143 * t192 - t144 * t193 - t405 * t241 - t406 * t239 + t339 * t388 + (t303 * t328 - t306 * t38 + (t111 * t303 - t113 * t306) * qJD(4) - t324) * t304, -t328 * t193 + t38 * t192 - g(1) * (-t217 * t344 - t207) - g(2) * (-t215 * t344 - t206) - t364 + (-g(3) * t344 - t173 * t395) * t414 + t406 * t113 + t405 * t111 + (t173 * t388 + t304 * t98 - t341) * pkin(8), -t133 * t338 - t204 * t68, t132 * t338 + t133 * t152 - t203 * t68 + t204 * t67, -t133 * t498 - t204 * t231 - t307 * t68 + t338 * t389, -t132 * t152 + t203 * t67, t132 * t498 - t152 * t389 - t203 * t231 + t307 * t67, t165, t91 * t231 - t8 * t307 + t39 * t389 + t185 * t152 + t245 * t67 + t57 * t203 - t136 * t132 - g(1) * (-t217 * t416 + t218 * t284) - g(2) * (-t215 * t416 + t216 * t284) + t439 * t498 + (-t152 * t373 - g(3) * (t284 * t305 + t285 * t408)) * t298, -t92 * t231 + t9 * t307 - t40 * t389 + t185 * t338 + t245 * t68 - t57 * t204 - t136 * t133 - g(1) * (t217 * t417 + t218 * t285) - g(2) * (t215 * t417 + t216 * t285) - t438 * t498 + (-t338 * t373 - g(3) * (-t284 * t408 + t285 * t305)) * t298, t132 * t40 + t133 * t39 - t152 * t438 - t203 * t9 + t204 * t8 - t338 * t439 - t67 * t92 - t68 * t91 - t321, t9 * t92 + t8 * t91 + t57 * t245 + t136 * t185 - g(1) * (-t217 * t336 + t218 * t374 - t207) - g(2) * (-t215 * t336 + t216 * t374 - t206) - t364 + t438 * t40 + t439 * t39 + (-g(3) * pkin(4) * t412 + (-g(3) * t336 - t136 * t395) * t308) * t298, -t129 * t18 - t478 * t51, t128 * t18 - t129 * t19 - t478 * t52 + t51 * t78, t129 * t228 + t18 * t307 + t262 * t51 + t389 * t478, t128 * t19 + t52 * t78, -t128 * t228 + t19 * t307 + t262 * t52 - t389 * t78, -t228 * t307 - t262 * t389, t32 * t228 - t2 * t307 + t12 * t389 + t93 * t78 + t156 * t19 + t36 * t128 + t73 * t52 - g(1) * (-t217 * t418 + t218 * t278) - g(2) * (-t215 * t418 + t216 * t278) - t467 * t262 + (-t78 * t373 - g(3) * (t278 * t305 + t279 * t408)) * t298, -t33 * t228 + t1 * t307 - t13 * t389 + t93 * t478 - t156 * t18 + t36 * t129 - t73 * t51 - g(1) * (t217 * t419 + t218 * t279) - g(2) * (t215 * t419 + t216 * t279) + t468 * t262 + (-t478 * t373 - g(3) * (-t278 * t408 + t279 * t305)) * t298, -t1 * t128 + t12 * t51 - t129 * t2 - t13 * t52 + t18 * t32 - t19 * t33 - t467 * t478 - t468 * t78 - t321, t1 * t33 + t2 * t32 + t36 * t156 + t73 * t93 - g(1) * (-t217 * t337 + t218 * t453 - t207) - g(2) * (-t215 * t337 + t216 * t453 - t206) - t364 + t468 * t13 + t467 * t12 + (-t248 * t457 + (-g(3) * t337 - t395 * t73) * t308) * t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, t399 * t310, t378, t376, t288, qJDD(3), qJD(3) * t184 - t247 * t393 + t319, -t247 * t391 + (t183 + t230) * qJD(3) + t326 + t375, 0, 0, t420 * t498 - t430 (-t143 - t424) * t306 + (-t144 - t421) * t303 (-t241 * t304 - t409 * t498) * qJD(2) + t330, t423 * t498 - t429 (t239 * t304 + t411 * t498) * qJD(2) + t329, -t366, -pkin(3) * t144 - t111 * t393 - t130 * t498 - t184 * t239 + t303 * t322 + t306 * t318, pkin(3) * t143 + t113 * t393 + t131 * t498 - t184 * t241 - t303 * t318 + t306 * t322, t130 * t241 + t131 * t239 + ((qJD(4) * t241 - t144) * pkin(9) + t480) * t306 + ((qJD(4) * t239 - t143) * pkin(9) + t476) * t303 - t326, -t111 * t130 - t113 * t131 - t173 * t184 + t325 * pkin(3) + (qJD(4) * t339 - t38 * t303 - t306 * t328 - t326) * pkin(9), t68 * t233 - t338 * t402, t152 * t402 - t232 * t68 - t233 * t67 + t338 * t403, t233 * t231 - t338 * t393 - t402 * t498, -t152 * t403 + t67 * t232, t152 * t393 - t232 * t231 + t403 * t498, -t366, -t136 * t403 + t152 * t345 + t170 * t231 + t232 * t57 - t282 * t67 + t285 * t327 - t39 * t393 + t443 * t498, -t136 * t402 - t171 * t231 + t233 * t57 - t282 * t68 - t284 * t327 + t338 * t345 + t393 * t40 - t442 * t498, -t152 * t442 - t170 * t68 - t171 * t67 - t232 * t9 - t233 * t8 - t338 * t443 + t39 * t402 + t40 * t403 - t326, t9 * t171 + t8 * t170 - t57 * t282 - g(1) * (-t161 * t282 + t162 * t452) - g(2) * (-t159 * t282 + t160 * t452) - g(3) * (-t222 * t282 + t223 * t452) + t442 * t40 + t443 * t39 + t345 * t136, -t18 * t150 - t444 * t478, t149 * t18 - t150 * t19 + t444 * t78 + t445 * t478, t150 * t228 + t262 * t444 - t393 * t478, t19 * t149 - t445 * t78, -t149 * t228 - t262 * t445 + t393 * t78, t262 * t393, -t12 * t393 + t149 * t36 + t19 * t194 + t228 * t59 - t262 * t450 + t279 * t327 + t404 * t78 - t445 * t73, t13 * t393 + t150 * t36 - t18 * t194 - t228 * t60 + t262 * t451 - t278 * t327 + t404 * t478 - t444 * t73, -t1 * t149 + t12 * t444 + t13 * t445 - t150 * t2 + t18 * t59 - t19 * t60 - t450 * t478 - t451 * t78 - t326, t1 * t60 + t2 * t59 + t36 * t194 - g(1) * (-t161 * t242 - t162 * t292) - g(2) * (-t159 * t242 - t160 * t292) - g(3) * (-t222 * t242 - t223 * t292) + t404 * t73 + t451 * t13 + t450 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t239 ^ 2 + t241 ^ 2, -t143 + t424, -t422, -t144 + t421, t231, -t173 * t241 + t473 - t476, t173 * t239 - g(1) * (-t162 * t306 - t217 * t303) - g(2) * (-t160 * t306 - t215 * t303) - g(3) * t331 - t480, 0, 0, t483, -t426 + t428, t68 + t425, -t483, -t67 + t427, t231, -t45 * t498 - t136 * t338 - g(1) * (-t162 * t284 + t217 * t285) - g(2) * (-t160 * t284 + t215 * t285) - g(3) * (-t223 * t284 - t285 * t414) + (-t152 * t241 + t231 * t299) * pkin(4) + t8, t46 * t498 + t136 * t152 - g(1) * (-t162 * t285 - t217 * t284) - g(2) * (-t160 * t285 - t215 * t284) - g(3) * (-t223 * t285 + t284 * t414) + (-t231 * t297 - t241 * t338) * pkin(4) - t9 (-t297 * t67 - t299 * t68) * pkin(4) + (t40 + t45) * t338 + (t46 - t39) * t152, -t39 * t45 - t40 * t46 + (-t136 * t241 + t9 * t297 + t8 * t299 + t473) * pkin(4), t454, t492, t496, -t454, t490, t228, -t117 * t78 + t208 * t228 - t262 * t440 + t489, -t117 * t478 - t209 * t228 + t262 * t441 + t491, t18 * t208 - t19 * t209 + (t13 - t440) * t478 + (-t12 - t441) * t78, t1 * t209 + t2 * t208 - t73 * t117 - g(1) * (-t162 * t248 + t217 * t249) - g(2) * (-t160 * t248 + t215 * t249) - g(3) * (-t223 * t248 - t249 * t414) + t441 * t13 + t440 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67 + t427, t68 - t425, -t426 - t428, t152 * t40 + t338 * t39 + t314, 0, 0, 0, 0, 0, 0, t19 - t446, -t18 + t448, -t455 - t456, t12 * t478 + t13 * t78 + t314 + t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t492, t496, -t454, t490, t228, -t13 * t262 + t489, -t12 * t262 + t491, 0, 0;];
tau_reg  = t3;
