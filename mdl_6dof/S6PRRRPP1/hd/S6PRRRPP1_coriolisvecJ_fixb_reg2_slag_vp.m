% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:47:04
% EndTime: 2019-03-08 22:47:14
% DurationCPUTime: 5.84s
% Computational Cost: add. (6519->506), mult. (16811->672), div. (0->0), fcn. (12351->10), ass. (0->244)
t197 = sin(qJ(3));
t200 = cos(qJ(3));
t227 = pkin(3) * t197 - pkin(9) * t200;
t156 = t227 * qJD(3);
t166 = -t200 * pkin(3) - t197 * pkin(9) - pkin(2);
t196 = sin(qJ(4));
t198 = sin(qJ(2));
t199 = cos(qJ(4));
t272 = qJD(4) * t199;
t194 = sin(pkin(6));
t281 = qJD(1) * t194;
t201 = cos(qJ(2));
t290 = t200 * t201;
t347 = (t196 * t198 + t199 * t290) * t281 - t196 * t156 - t166 * t272;
t190 = t197 * pkin(8);
t271 = t196 * qJD(3);
t346 = t199 * t156 + t271 * t190 - (-t196 * t290 + t198 * t199) * t281;
t291 = t199 * t200;
t180 = pkin(8) * t291;
t218 = pkin(4) * t197 - qJ(5) * t291;
t269 = t199 * qJD(5);
t345 = -t197 * t269 + t218 * qJD(3) + (-t180 + (qJ(5) * t197 - t166) * t196) * qJD(4) + t346;
t292 = t197 * t199;
t344 = -(-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t292 - (-qJD(5) * t197 + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t200) * t196 + t347;
t268 = t200 * qJD(2);
t177 = -qJD(4) + t268;
t278 = qJD(2) * t197;
t247 = t196 * t278;
t270 = t199 * qJD(3);
t152 = t247 - t270;
t154 = t199 * t278 + t271;
t193 = sin(pkin(11));
t309 = cos(pkin(11));
t92 = t309 * t152 + t154 * t193;
t312 = t92 * t177;
t255 = t200 * t270;
t266 = qJD(3) * qJD(4);
t116 = -qJD(2) * t255 + qJD(4) * t247 - t199 * t266;
t256 = t200 * t271;
t211 = t197 * t272 + t256;
t117 = qJD(2) * t211 + t196 * t266;
t68 = -t116 * t309 - t193 * t117;
t38 = t68 - t312;
t212 = -t193 * t152 + t154 * t309;
t343 = t92 * t212;
t244 = t309 * t196;
t148 = t193 * t199 + t244;
t136 = t148 * qJD(4);
t286 = t148 * t268 - t136;
t243 = t309 * t199;
t273 = qJD(4) * t196;
t137 = qJD(4) * t243 - t193 * t273;
t257 = t196 * t268;
t285 = -t193 * t257 + t243 * t268 - t137;
t335 = t212 ^ 2;
t328 = t344 * t193 + t309 * t345;
t327 = t193 * t345 - t344 * t309;
t331 = -qJ(5) - pkin(9);
t245 = qJD(4) * t331;
t133 = t196 * t245 + t269;
t210 = -t196 * qJD(5) + t199 * t245;
t249 = t198 * t281;
t159 = qJD(2) * pkin(8) + t249;
t195 = cos(pkin(6));
t280 = qJD(1) * t200;
t121 = -t197 * t159 + t195 * t280;
t155 = t227 * qJD(2);
t79 = -t196 * t121 + t199 * t155;
t69 = qJD(2) * t218 + t79;
t80 = t199 * t121 + t196 * t155;
t76 = -qJ(5) * t257 + t80;
t324 = (-t210 + t69) * t309 + (t133 - t76) * t193;
t113 = -qJD(3) * pkin(3) - t121;
t85 = pkin(4) * t152 + qJD(5) + t113;
t36 = pkin(5) * t92 - qJ(6) * t212 + t85;
t342 = t36 * t212;
t295 = t195 * t197;
t261 = qJD(1) * t295;
t122 = t159 * t200 + t261;
t114 = qJD(3) * pkin(9) + t122;
t120 = (t156 + t249) * qJD(2);
t248 = t201 * t281;
t124 = qJD(2) * t166 - t248;
t279 = qJD(2) * t194;
t258 = t201 * t279;
t275 = qJD(3) * t197;
t87 = -t159 * t275 + (qJD(3) * t195 + t258) * t280;
t29 = -t114 * t273 + t196 * t120 + t124 * t272 + t199 * t87;
t71 = -t114 * t196 + t199 * t124;
t341 = t177 * t71 + t29;
t73 = t114 * t199 + t124 * t196;
t30 = -qJD(4) * t73 + t199 * t120 - t196 * t87;
t340 = t73 * t177 - t30;
t230 = -t122 + (-t257 + t273) * pkin(4);
t129 = t196 * t166 + t180;
t131 = t148 * t197;
t67 = -t116 * t193 + t309 * t117;
t242 = qJD(3) * t309;
t229 = t200 * t242;
t81 = -t137 * t197 - t193 * t255 - t196 * t229;
t339 = t81 * t177 - t200 * t67 + (qJD(2) * t131 + t92) * t275;
t299 = t193 * t196;
t147 = -t243 + t299;
t338 = t177 * t286 + (qJD(3) * t147 - t92) * t278;
t337 = -t68 * t147 - t148 * t67 + t212 * t286 + t285 * t92;
t267 = qJD(2) * qJD(3);
t186 = t197 * t267;
t10 = pkin(4) * t186 + t116 * qJ(5) - t154 * qJD(5) + t30;
t14 = -qJ(5) * t117 - qJD(5) * t152 + t29;
t3 = t309 * t10 - t193 * t14;
t4 = t193 * t10 + t309 * t14;
t58 = -qJ(5) * t152 + t73;
t51 = t309 * t58;
t57 = -qJ(5) * t154 + t71;
t26 = t193 * t57 + t51;
t336 = t26 * t212;
t333 = t92 ^ 2;
t330 = qJ(6) * t275 - qJD(6) * t200 + t327;
t329 = -pkin(5) * t275 - t328;
t35 = t193 * t69 + t309 * t76;
t32 = qJ(6) * t278 + t35;
t84 = t133 * t309 + t193 * t210;
t326 = t32 - t84;
t325 = pkin(5) * t278 + t324;
t323 = -t35 + t84;
t322 = pkin(5) * t286 - qJ(6) * t285 + qJD(6) * t148 - t230;
t43 = -pkin(4) * t177 + t57;
t20 = t193 * t43 + t51;
t294 = t196 * t197;
t104 = -qJ(5) * t294 + t129;
t150 = t199 * t166;
t97 = -qJ(5) * t292 + t150 + (-pkin(8) * t196 - pkin(4)) * t200;
t60 = t309 * t104 + t193 * t97;
t321 = qJD(2) * pkin(2);
t319 = t177 * t212;
t318 = t193 * t58;
t298 = t194 * t198;
t139 = -t195 * t200 + t197 * t298;
t232 = qJD(2) * t248;
t274 = qJD(3) * t200;
t88 = qJD(3) * t261 + t159 * t274 + t197 * t232;
t316 = t88 * t139;
t315 = t88 * t196;
t314 = t88 * t197;
t313 = t88 * t199;
t311 = qJD(4) * t129 - t346;
t310 = -(-t197 * t270 - t200 * t273) * pkin(8) + t347;
t308 = t113 * t196;
t307 = t113 * t199;
t306 = t116 * t196;
t305 = t117 * t199;
t304 = t152 * t177;
t303 = t154 * t152;
t302 = t154 * t177;
t301 = t177 * t196;
t300 = t177 * t199;
t297 = t194 * t201;
t203 = qJD(2) ^ 2;
t296 = t194 * t203;
t293 = t196 * t200;
t202 = qJD(3) ^ 2;
t289 = t202 * t197;
t288 = t202 * t200;
t27 = t309 * t57 - t318;
t287 = qJD(6) - t27;
t157 = pkin(4) * t294 + t190;
t191 = t197 ^ 2;
t192 = t200 ^ 2;
t282 = t191 - t192;
t167 = t331 * t199;
t110 = -t193 * t167 - t331 * t244;
t277 = qJD(3) * t110;
t111 = -t309 * t167 + t331 * t299;
t276 = qJD(3) * t111;
t265 = qJ(6) * t186 + t4;
t263 = t198 * t296;
t262 = t197 * t203 * t200;
t123 = pkin(4) * t211 + pkin(8) * t274;
t187 = -t199 * pkin(4) - pkin(3);
t259 = t198 * t279;
t254 = t197 * t273;
t252 = t177 * t272;
t251 = t177 * t278;
t239 = t92 * t248;
t238 = t212 * t248;
t237 = -t26 * t177 + t3;
t236 = t197 * t248;
t235 = t197 * t258;
t234 = t200 * t258;
t233 = t110 * t68 - t111 * t67 - t84 * t92;
t231 = t200 * t186;
t226 = -t333 - t335;
t225 = -t333 + t335;
t160 = -t248 - t321;
t224 = -t160 - t248;
t223 = t131 * t67 - t81 * t92;
t220 = -t196 * t73 - t199 * t71;
t219 = qJD(2) * t191 - t177 * t200;
t63 = pkin(4) * t117 + t88;
t217 = t67 - t319;
t216 = -t67 - t319;
t140 = t200 * t298 + t295;
t102 = -t140 * t196 - t199 * t297;
t215 = -t140 * t199 + t196 * t297;
t2 = -pkin(5) * t186 - t3;
t100 = -qJD(3) * t139 + t234;
t49 = qJD(4) * t215 - t100 * t196 + t199 * t259;
t50 = qJD(4) * t102 + t100 * t199 + t196 * t259;
t22 = t193 * t50 - t309 * t49;
t24 = t193 * t49 + t309 * t50;
t61 = -t102 * t309 - t193 * t215;
t62 = t193 * t102 - t215 * t309;
t214 = t212 * t22 - t24 * t92 + t61 * t68 - t62 * t67;
t19 = t309 * t43 - t318;
t59 = -t193 * t104 + t309 * t97;
t213 = t67 * t147 - t286 * t92;
t209 = qJD(3) * (-t224 - t321);
t101 = qJD(3) * t140 + t235;
t208 = t101 * t92 + t139 * t67 + t177 * t22 - t186 * t61;
t207 = -t68 - t312;
t132 = -t193 * t294 + t197 * t243;
t82 = t136 * t197 + t193 * t256 - t199 * t229;
t206 = t131 * t68 + t132 * t67 - t212 * t81 - t82 * t92;
t205 = -t101 * t212 - t139 * t68 - t177 * t24 + t186 * t62;
t204 = t314 + t87 * t200 + (-t121 * t200 - t122 * t197) * qJD(3);
t5 = pkin(5) * t67 - qJ(6) * t68 - qJD(6) * t212 + t63;
t184 = -pkin(4) * t309 - pkin(5);
t181 = t193 * pkin(4) + qJ(6);
t128 = -pkin(8) * t293 + t150;
t127 = (-t177 - t268) * t275;
t89 = pkin(5) * t147 - qJ(6) * t148 + t187;
t75 = pkin(5) * t131 - qJ(6) * t132 + t157;
t55 = t200 * pkin(5) - t59;
t54 = -qJ(6) * t200 + t60;
t39 = pkin(4) * t154 + pkin(5) * t212 + qJ(6) * t92;
t37 = t285 * t177 + (qJD(3) * t148 - t212) * t278;
t28 = -pkin(5) * t81 + qJ(6) * t82 - qJD(6) * t132 + t123;
t25 = t132 * t68 - t212 * t82;
t17 = -qJ(6) * t177 + t20;
t15 = t177 * pkin(5) + qJD(6) - t19;
t11 = t82 * t177 - t68 * t200 + (qJD(2) * t132 + t212) * t275;
t9 = t68 * t148 - t212 * t285;
t1 = -qJD(6) * t177 + t265;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, -t201 * t296, 0, 0, 0, 0, 0, 0, 0, 0, -t200 * t263 + (-t101 - t235) * qJD(3), t197 * t263 + (-t100 - t234) * qJD(3) (t100 * t200 + t101 * t197 + (t139 * t200 - t140 * t197) * qJD(3)) * qJD(2), t122 * t100 - t121 * t101 + t316 + t87 * t140 + (t160 - t248) * t259, 0, 0, 0, 0, 0, 0, t101 * t152 + t102 * t186 + t117 * t139 - t177 * t49, t101 * t154 - t116 * t139 + t177 * t50 + t186 * t215, t102 * t116 + t117 * t215 - t152 * t50 - t154 * t49, t101 * t113 + t102 * t30 - t215 * t29 + t49 * t71 + t50 * t73 + t316, 0, 0, 0, 0, 0, 0, t208, -t205, t214, t101 * t85 + t139 * t63 - t19 * t22 + t20 * t24 - t3 * t61 + t4 * t62, 0, 0, 0, 0, 0, 0, t208, t214, t205, t1 * t62 + t101 * t36 + t139 * t5 + t15 * t22 + t17 * t24 + t2 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t231, -0.2e1 * t282 * t267, t288, -0.2e1 * t231, -t289, 0, -pkin(8) * t288 + t197 * t209, pkin(8) * t289 + t200 * t209 (-t191 - t192) * t232 + t204 ((t121 * t197 - t122 * t200) * t201 + (-t160 - t321) * t198) * t281 + t204 * pkin(8), -t116 * t292 + (-t254 + t255) * t154 (-t152 * t199 - t154 * t196) * t274 + (t306 - t305 + (t152 * t196 - t154 * t199) * qJD(4)) * t197, t177 * t254 + t116 * t200 + (t154 * t197 + t199 * t219) * qJD(3), t117 * t294 + t152 * t211, t197 * t252 + t117 * t200 + (-t152 * t197 - t196 * t219) * qJD(3), t127, t311 * t177 + (-t30 + (pkin(8) * t152 + t308) * qJD(3)) * t200 + (-t152 * t248 + t113 * t272 + pkin(8) * t117 + t315 + (qJD(2) * t128 + t71) * qJD(3)) * t197, -t310 * t177 + (t29 + (pkin(8) * t154 + t307) * qJD(3)) * t200 + (-t154 * t248 - t113 * t273 - pkin(8) * t116 + t313 + (-qJD(2) * t129 - t73) * qJD(3)) * t197, t128 * t116 - t129 * t117 + t311 * t154 + t310 * t152 + t220 * t274 + (-t196 * t29 - t199 * t30 + (t196 * t71 - t199 * t73) * qJD(4)) * t197, -t113 * t236 + t30 * t128 + t29 * t129 - t310 * t73 - t311 * t71 + (t113 * t274 + t314) * pkin(8), t25, -t206, t11, t223, -t339, t127, t123 * t92 + t63 * t131 + t157 * t67 - t3 * t200 - t85 * t81 - t328 * t177 + (-t239 + (qJD(2) * t59 + t19) * qJD(3)) * t197, t123 * t212 + t63 * t132 + t157 * t68 + t4 * t200 - t85 * t82 + t327 * t177 + (-t238 + (-qJD(2) * t60 - t20) * qJD(3)) * t197, -t4 * t131 - t3 * t132 + t19 * t82 + t20 * t81 - t212 * t328 - t327 * t92 - t59 * t68 - t60 * t67, t63 * t157 + t3 * t59 + t4 * t60 + (t123 - t236) * t85 + t327 * t20 + t328 * t19, t25, t11, t206, t127, t339, t223, t5 * t131 + t2 * t200 + t28 * t92 - t36 * t81 + t75 * t67 + t329 * t177 + (-t239 + (-qJD(2) * t55 - t15) * qJD(3)) * t197, -t1 * t131 + t2 * t132 - t15 * t82 + t17 * t81 + t212 * t329 - t330 * t92 - t54 * t67 + t55 * t68, -t1 * t200 - t5 * t132 - t28 * t212 + t36 * t82 - t75 * t68 - t330 * t177 + (t238 + (qJD(2) * t54 + t17) * qJD(3)) * t197, t1 * t54 + t2 * t55 + t5 * t75 + (t28 - t236) * t36 + t330 * t17 + t329 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, t282 * t203, 0, t262, 0, 0, qJD(3) * t122 - t160 * t278 - t88, t224 * t268, 0, 0, -t154 * t300 - t306 (-t116 + t304) * t199 + (-t117 + t302) * t196, -t252 + (t177 * t291 + (-t154 + t271) * t197) * qJD(2), -t152 * t301 - t305, t177 * t273 + (-t177 * t293 + (t152 + t270) * t197) * qJD(2), t251, -pkin(3) * t117 - t122 * t152 + t79 * t177 - t313 + (pkin(9) * t300 + t308) * qJD(4) + (-t197 * t71 + (-pkin(9) * t275 - t113 * t200) * t196) * qJD(2), pkin(3) * t116 - t122 * t154 - t80 * t177 + t315 + (-pkin(9) * t301 + t307) * qJD(4) + (-t113 * t291 + (-pkin(9) * t270 + t73) * t197) * qJD(2), t80 * t152 + t79 * t154 + ((qJD(4) * t154 - t117) * pkin(9) + t341) * t199 + ((qJD(4) * t152 - t116) * pkin(9) + t340) * t196, -t88 * pkin(3) - t113 * t122 - t71 * t79 - t73 * t80 + (qJD(4) * t220 - t30 * t196 + t29 * t199) * pkin(9), t9, t337, t37, t213, -t338, t251, t63 * t147 + t187 * t67 + t230 * t92 - t286 * t85 + t324 * t177 + (-t19 - t277) * t278, t63 * t148 + t187 * t68 + t230 * t212 - t285 * t85 + t323 * t177 + (t20 - t276) * t278, -t4 * t147 - t3 * t148 + t19 * t285 + t20 * t286 + t212 * t324 + t35 * t92 + t233, -t3 * t110 + t4 * t111 + t63 * t187 - t19 * t324 + t20 * t323 + t230 * t85, t9, t37, -t337, t251, t338, t213, t5 * t147 + t89 * t67 - t322 * t92 - t286 * t36 + t325 * t177 + (t15 - t277) * t278, -t1 * t147 + t2 * t148 - t15 * t285 + t17 * t286 + t212 * t325 + t32 * t92 + t233, -t5 * t148 - t89 * t68 + t322 * t212 + t285 * t36 + t326 * t177 + (-t17 + t276) * t278, t1 * t111 + t2 * t110 + t15 * t325 - t17 * t326 - t322 * t36 + t5 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, -t152 ^ 2 + t154 ^ 2, -t116 - t304, -t303, -t117 - t302, t186, -t113 * t154 - t340, t113 * t152 - t341, 0, 0, t343, t225, t38, -t343, t216, t186, -t85 * t212 + (-t154 * t92 + t242 * t278) * pkin(4) + t237, -t27 * t177 + t85 * t92 + (-t154 * t212 - t186 * t193) * pkin(4) - t4, t20 * t212 - t336 + (-t193 * t67 - t309 * t68) * pkin(4) + (-t19 + t27) * t92, t19 * t26 - t20 * t27 + (-t154 * t85 + t193 * t4 + t3 * t309) * pkin(4), t343, t38, -t225, t186, -t216, -t343, -t342 - t39 * t92 + (pkin(5) - t184) * t186 + t237, t17 * t212 - t181 * t67 + t184 * t68 - t336 + (t15 - t287) * t92, t181 * t186 - t36 * t92 + t39 * t212 + (-0.2e1 * qJD(6) + t27) * t177 + t265, t1 * t181 - t15 * t26 + t17 * t287 + t2 * t184 - t36 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t207, t226, t19 * t212 + t20 * t92 + t63, 0, 0, 0, 0, 0, 0, t217, t226, t207, -t15 * t212 + t17 * t92 + t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186 + t343, t38, -t177 ^ 2 - t335, t17 * t177 + t2 + t342;];
tauc_reg  = t6;
