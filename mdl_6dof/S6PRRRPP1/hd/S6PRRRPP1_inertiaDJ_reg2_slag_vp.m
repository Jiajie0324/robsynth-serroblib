% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPP1_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:46:54
% EndTime: 2019-03-08 22:47:03
% DurationCPUTime: 3.48s
% Computational Cost: add. (2915->315), mult. (8036->554), div. (0->0), fcn. (7298->10), ass. (0->167)
t114 = sin(qJ(3));
t113 = sin(qJ(4));
t117 = cos(qJ(3));
t188 = qJD(3) * t117;
t166 = t113 * t188;
t116 = cos(qJ(4));
t184 = qJD(4) * t116;
t213 = t114 * t184 + t166;
t186 = qJD(4) * t113;
t212 = -0.4e1 * t114;
t110 = sin(pkin(11));
t201 = cos(pkin(11));
t159 = t201 * t116;
t71 = qJD(4) * t159 - t110 * t186;
t106 = t113 ^ 2;
t108 = t116 ^ 2;
t193 = t106 - t108;
t157 = qJD(4) * t193;
t211 = 2 * qJD(6);
t210 = pkin(8) * t113;
t209 = t110 * pkin(4);
t208 = t114 * pkin(4);
t207 = t117 * pkin(3);
t111 = sin(pkin(6));
t118 = cos(qJ(2));
t190 = qJD(2) * t118;
t168 = t111 * t190;
t112 = cos(pkin(6));
t115 = sin(qJ(2));
t199 = t111 * t115;
t73 = t112 * t114 + t117 * t199;
t56 = qJD(3) * t73 + t114 * t168;
t72 = -t112 * t117 + t114 * t199;
t42 = t72 * t56;
t206 = -qJ(5) - pkin(9);
t182 = t116 * qJD(5);
t195 = t116 * t117;
t149 = pkin(3) * t114 - pkin(9) * t117;
t132 = t149 * qJD(3);
t104 = qJD(3) * t114;
t167 = t113 * t104;
t204 = pkin(8) * t167 + t116 * t132;
t95 = pkin(8) * t195;
t19 = -t114 * t182 + (-qJ(5) * t195 + t208) * qJD(3) + (-t95 + (-t206 * t114 + pkin(2) + t207) * t113) * qJD(4) + t204;
t196 = t114 * t116;
t150 = -t114 * pkin(9) - t207;
t143 = -pkin(2) + t150;
t80 = t116 * t143;
t205 = -qJD(4) * t80 - t113 * t132;
t26 = (-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t196 + (-t114 * qJD(5) + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t117) * t113 - t205;
t9 = t110 * t19 + t201 * t26;
t52 = -qJ(5) * t196 + t80 + (-pkin(4) - t210) * t117;
t197 = t113 * t114;
t65 = t113 * t143 + t95;
t59 = -qJ(5) * t197 + t65;
t30 = t110 * t52 + t201 * t59;
t203 = t56 * t114;
t198 = t111 * t118;
t57 = -t73 * t113 - t116 * t198;
t202 = t57 * t116;
t82 = pkin(4) * t197 + t114 * pkin(8);
t200 = t110 * t113;
t194 = t72 * qJD(3);
t107 = t114 ^ 2;
t192 = -t117 ^ 2 + t107;
t191 = qJD(2) * t115;
t189 = qJD(3) * t116;
t187 = qJD(3) * t118;
t185 = qJD(4) * t114;
t183 = qJD(4) * t117;
t181 = t117 * qJD(6);
t158 = qJD(3) * t201;
t152 = t117 * t158;
t163 = t116 * t188;
t44 = -t110 * t163 - t113 * t152 - t71 * t114;
t160 = t201 * t113;
t78 = t110 * t116 + t160;
t67 = t78 * t114;
t180 = -0.2e1 * t67 * t44;
t70 = t78 * qJD(4);
t77 = -t159 + t200;
t179 = 0.2e1 * t77 * t70;
t178 = -0.2e1 * pkin(2) * qJD(3);
t177 = -0.2e1 * pkin(3) * qJD(4);
t176 = t117 * t210;
t175 = qJ(6) * t104 + t9;
t102 = pkin(8) * t188;
t63 = t213 * pkin(4) + t102;
t103 = pkin(4) * t186;
t174 = t72 * t186;
t101 = -t116 * pkin(4) - pkin(3);
t173 = t113 * t183;
t171 = t116 * t183;
t169 = t111 * t191;
t165 = t113 * t184;
t164 = t114 * t188;
t161 = qJD(4) * t206;
t126 = -t113 * qJD(5) + t116 * t161;
t69 = t113 * t161 + t182;
t46 = t110 * t69 - t201 * t126;
t47 = t110 * t126 + t201 * t69;
t87 = t206 * t116;
t60 = -t110 * t87 - t206 * t160;
t61 = t206 * t200 - t201 * t87;
t162 = t60 * t46 + t61 * t47;
t7 = -t110 * t26 + t201 * t19;
t156 = t192 * qJD(3);
t155 = 0.2e1 * t164;
t154 = t113 * t163;
t153 = t107 * t165;
t45 = t110 * t166 + t114 * t70 - t116 * t152;
t68 = -t110 * t197 + t114 * t159;
t148 = t68 * t44 + t45 * t67;
t147 = -t44 * t77 + t67 * t70;
t146 = t56 * t78 + t72 * t71;
t145 = t78 * t70 + t71 * t77;
t64 = t80 - t176;
t144 = -t113 * t65 - t116 * t64;
t55 = t117 * t168 - t194;
t129 = -t55 * t113 + t116 * t169;
t136 = t113 * t198 - t73 * t116;
t120 = qJD(4) * t136 + t129;
t22 = t57 * qJD(4) + t113 * t169 + t55 * t116;
t10 = t110 * t120 + t201 * t22;
t31 = -t110 * t136 - t201 * t57;
t32 = t110 * t57 - t136 * t201;
t8 = t110 * t22 - t201 * t120;
t142 = 0.2e1 * t32 * t10 + 0.2e1 * t31 * t8 + 0.2e1 * t42;
t141 = t67 * t104 + t44 * t117;
t140 = -t60 * t104 + t46 * t117;
t139 = t61 * t104 - t47 * t117;
t138 = t77 * t104 - t117 * t70;
t137 = -t56 * t116 + t174;
t135 = -t10 * t67 - t31 * t45 + t32 * t44 + t8 * t68;
t134 = t10 * t61 + t31 * t46 + t32 * t47 + t8 * t60;
t133 = -t10 * t77 + t31 * t71 - t32 * t70 + t8 * t78;
t29 = -t110 * t59 + t201 * t52;
t131 = t61 * t44 - t60 * t45 + t46 * t68 - t47 * t67;
t128 = t114 * t189 + t173;
t127 = -t31 * t104 + t8 * t117 - t72 * t44 + t56 * t67;
t125 = 0.2e1 * t46 * t78 - 0.2e1 * t47 * t77 + 0.2e1 * t60 * t71 - 0.2e1 * t61 * t70;
t124 = t78 * t44 + t45 * t77 - t71 * t67 - t68 * t70;
t123 = -t10 * t117 + t32 * t104 + t72 * t45 - t56 * t68;
t40 = pkin(8) * t128 + t205;
t41 = -t65 * qJD(4) + t204;
t122 = qJD(4) * t144 - t41 * t113 - t40 * t116;
t121 = t203 + t55 * t117 + (-t114 * t73 + t117 * t72) * qJD(3);
t119 = -t202 * qJD(4) - t129 * t113 + t22 * t116;
t99 = -t201 * pkin(4) - pkin(5);
t96 = qJ(6) + t209;
t92 = -0.2e1 * t164;
t62 = t114 * t157 - t154;
t54 = 0.2e1 * t78 * t71;
t49 = t77 * pkin(5) - t78 * qJ(6) + t101;
t48 = t78 * t104 - t71 * t117;
t38 = t67 * pkin(5) - t68 * qJ(6) + t82;
t36 = t70 * pkin(5) - t71 * qJ(6) - t78 * qJD(6) + t103;
t33 = -0.2e1 * t68 * t45;
t25 = 0.2e1 * t68 * t104 + 0.2e1 * t45 * t117;
t24 = t117 * pkin(5) - t29;
t23 = -t117 * qJ(6) + t30;
t20 = t56 * t77 + t72 * t70;
t14 = -t45 * t78 + t68 * t71;
t11 = -t44 * pkin(5) + t45 * qJ(6) - t68 * qJD(6) + t63;
t6 = -pkin(5) * t104 - t7;
t5 = t175 - t181;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t111 ^ 2 * t115 * t190 + 0.2e1 * t73 * t55 + 0.2e1 * t42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t120 * t57 - 0.2e1 * t136 * t22 + 0.2e1 * t42, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, -t168, 0, 0, 0, 0, 0, 0, 0, 0 (-t114 * t187 - t117 * t191) * t111 (t114 * t191 - t117 * t187) * t111, t121, -pkin(2) * t169 + pkin(8) * t121, 0, 0, 0, 0, 0, 0, t57 * t104 + (-(-qJD(4) * t73 + t169) * t117 + t72 * t185) * t116 + (t203 + (-qJD(4) * t198 + t194 + t55) * t117) * t113 (t189 * t72 + t22) * t117 + (qJD(3) * t136 - t137) * t114 (t113 * t136 - t202) * t188 + (-t22 * t113 - t129 * t116 + t57 * t186) * t114, t22 * t65 + t136 * t40 + t120 * t64 + t57 * t41 + (t188 * t72 + t203) * pkin(8), 0, 0, 0, 0, 0, 0, t127, -t123, t135, t10 * t30 - t8 * t29 - t31 * t7 + t32 * t9 + t56 * t82 + t72 * t63, 0, 0, 0, 0, 0, 0, t127, t135, t123, t10 * t23 + t72 * t11 + t8 * t24 + t31 * t6 + t32 * t5 + t56 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, -0.2e1 * t156, 0, t92, 0, 0, t114 * t178, t117 * t178, 0, 0, 0.2e1 * t108 * t164 - 0.2e1 * t153, 0.2e1 * t107 * t157 + t154 * t212, 0.2e1 * t114 * t173 + 0.2e1 * t189 * t192, 0.2e1 * t106 * t164 + 0.2e1 * t153, -0.2e1 * t113 * t156 + 0.2e1 * t114 * t171, t92, 0.2e1 * t64 * t104 - 0.2e1 * t41 * t117 + 0.2e1 * (t107 * t184 + t113 * t155) * pkin(8), -0.2e1 * t65 * t104 - 0.2e1 * t40 * t117 + 0.2e1 * (-t107 * t186 + t116 * t155) * pkin(8), 0.2e1 * t144 * t188 + 0.2e1 * (t113 * t40 - t116 * t41 + (t113 * t64 - t116 * t65) * qJD(4)) * t114, 0.2e1 * pkin(8) ^ 2 * t164 - 0.2e1 * t65 * t40 + 0.2e1 * t64 * t41, t33, 0.2e1 * t148, t25, t180, -0.2e1 * t141, t92, 0.2e1 * t104 * t29 - 0.2e1 * t7 * t117 - 0.2e1 * t82 * t44 + 0.2e1 * t63 * t67, -0.2e1 * t104 * t30 + 0.2e1 * t9 * t117 - 0.2e1 * t82 * t45 + 0.2e1 * t63 * t68, 0.2e1 * t29 * t45 + 0.2e1 * t30 * t44 - 0.2e1 * t9 * t67 - 0.2e1 * t7 * t68, 0.2e1 * t29 * t7 + 0.2e1 * t30 * t9 + 0.2e1 * t82 * t63, t33, t25, -0.2e1 * t148, t92, 0.2e1 * t141, t180, -0.2e1 * t104 * t24 + 0.2e1 * t11 * t67 + 0.2e1 * t6 * t117 - 0.2e1 * t38 * t44, 0.2e1 * t23 * t44 - 0.2e1 * t24 * t45 - 0.2e1 * t5 * t67 + 0.2e1 * t6 * t68, 0.2e1 * t104 * t23 - 0.2e1 * t11 * t68 - 0.2e1 * t5 * t117 + 0.2e1 * t38 * t45, 0.2e1 * t38 * t11 + 0.2e1 * t23 * t5 + 0.2e1 * t24 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t55, 0, 0, 0, 0, 0, 0, 0, 0, t137, t56 * t113 + t184 * t72, t119, -t56 * pkin(3) + pkin(9) * t119, 0, 0, 0, 0, 0, 0, t20, t146, t133, pkin(4) * t174 + t56 * t101 + t134, 0, 0, 0, 0, 0, 0, t20, t133, -t146, t72 * t36 + t56 * t49 + t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, 0, -t104, 0, -t102, pkin(8) * t104, 0, 0, -t62, t165 * t212 - t188 * t193, t167 - t171, t62, t128, 0 (pkin(9) * t195 + (-pkin(3) * t116 + t210) * t114) * qJD(4) + (t113 * t150 - t95) * qJD(3) (pkin(8) * t196 + t113 * t149) * qJD(4) + (t116 * t150 + t176) * qJD(3), t122, -pkin(3) * t102 + pkin(9) * t122, t14, t124, t48, t147, -t138, 0, -t101 * t44 + t103 * t67 + t63 * t77 + t82 * t70 + t140, -t101 * t45 + t103 * t68 + t63 * t78 + t82 * t71 - t139, -t29 * t71 - t30 * t70 - t7 * t78 - t9 * t77 + t131, t63 * t101 + t103 * t82 - t29 * t46 + t30 * t47 - t7 * t60 + t9 * t61, t14, t48, -t124, 0, t138, t147, t11 * t77 + t36 * t67 + t38 * t70 - t49 * t44 + t140, -t23 * t70 + t24 * t71 - t5 * t77 + t6 * t78 + t131, -t11 * t78 - t36 * t68 - t38 * t71 + t49 * t45 + t139, t11 * t49 + t23 * t47 + t24 * t46 + t38 * t36 + t5 * t61 + t6 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t165, -0.2e1 * t157, 0, -0.2e1 * t165, 0, 0, t113 * t177, t116 * t177, 0, 0, t54, -0.2e1 * t145, 0, t179, 0, 0, 0.2e1 * t101 * t70 + 0.2e1 * t103 * t77, 0.2e1 * t101 * t71 + 0.2e1 * t103 * t78, t125, 0.2e1 * t101 * t103 + 0.2e1 * t162, t54, 0, 0.2e1 * t145, 0, 0, t179, 0.2e1 * t36 * t77 + 0.2e1 * t49 * t70, t125, -0.2e1 * t36 * t78 - 0.2e1 * t49 * t71, 0.2e1 * t49 * t36 + 0.2e1 * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, -t22, 0, 0, 0, 0, 0, 0, 0, 0, -t8, -t10, 0 (t10 * t110 - t201 * t8) * pkin(4), 0, 0, 0, 0, 0, 0, -t8, 0, t10, t32 * qJD(6) + t10 * t96 + t8 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113 * t185 + t163, 0, -t213, t104, t41, t40, 0, 0, 0, 0, -t45, 0, t44, t104, t158 * t208 + t7, -t104 * t209 - t9 (t110 * t44 + t201 * t45) * pkin(4) (t110 * t9 + t201 * t7) * pkin(4), 0, -t45, 0, t104, -t44, 0 (pkin(5) - t99) * t104 + t7, -qJD(6) * t67 + t96 * t44 - t99 * t45, t104 * t96 + t175 - 0.2e1 * t181, t23 * qJD(6) + t5 * t96 + t6 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, 0, -t186, 0, -pkin(9) * t184, pkin(9) * t186, 0, 0, 0, 0, t71, 0, -t70, 0, -t46, -t47 (-t110 * t70 - t201 * t71) * pkin(4) (t110 * t47 - t201 * t46) * pkin(4), 0, t71, 0, 0, t70, 0, -t46, -qJD(6) * t77 - t96 * t70 + t99 * t71, t47, t61 * qJD(6) + t46 * t99 + t47 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, t96 * t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t45, 0, t63, 0, 0, 0, 0, 0, 0, -t44, 0, t45, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t71, 0, t103, 0, 0, 0, 0, 0, 0, t70, 0, -t71, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, -t45, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, 0, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
