% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPPR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:01:10
% EndTime: 2019-03-09 16:02:03
% DurationCPUTime: 34.35s
% Computational Cost: add. (11578->917), mult. (24441->1207), div. (0->0), fcn. (25282->8), ass. (0->650)
t779 = qJD(3) - qJD(6);
t600 = sin(qJ(3));
t929 = pkin(8) - qJ(5);
t535 = t929 * t600;
t597 = sin(pkin(10));
t598 = cos(pkin(10));
t603 = cos(qJ(3));
t725 = t929 * t603;
t382 = t597 * t535 + t598 * t725;
t891 = t598 * t603;
t896 = t597 * t600;
t502 = t891 + t896;
t1012 = -pkin(9) * t502 + t382;
t381 = -t598 * t535 + t597 * t725;
t895 = t597 * t603;
t505 = t598 * t600 - t895;
t264 = -pkin(9) * t505 - t381;
t599 = sin(qJ(6));
t602 = cos(qJ(6));
t1024 = t602 * t1012 + t599 * t264;
t601 = sin(qJ(2));
t447 = t502 * t601;
t860 = t602 * t447;
t853 = t603 * t601;
t871 = t600 * t601;
t445 = t597 * t853 - t598 * t871;
t880 = t599 * t445;
t689 = -t860 + t880;
t604 = cos(qJ(2));
t942 = -t604 / 0.2e1;
t584 = t600 * qJ(4);
t589 = t603 * pkin(3);
t704 = t584 + t589;
t521 = -pkin(2) - t704;
t492 = t603 * pkin(4) - t521;
t365 = pkin(5) * t502 + t492;
t973 = t365 / 0.2e1;
t1031 = t1024 * t942 - t689 * t973;
t1030 = t779 * t1024;
t52 = -t599 * t1012 + t602 * t264;
t1029 = t779 * t52;
t429 = t602 * t445;
t879 = t599 * t447;
t259 = t429 + t879;
t68 = t259 ^ 2 - t689 ^ 2;
t1027 = qJD(1) * t68;
t858 = t602 * t505;
t876 = t599 * t502;
t688 = -t858 + t876;
t1003 = t688 / 0.2e1;
t1018 = t604 * t1003;
t870 = t600 * t604;
t539 = t598 * t870;
t852 = t603 * t604;
t449 = t597 * t852 - t539;
t430 = t602 * t449;
t450 = t502 * t604;
t877 = t599 * t450;
t837 = t877 / 0.2e1 + t430 / 0.2e1;
t989 = t1018 + t837;
t1026 = qJD(1) * t989;
t481 = t602 * t502;
t875 = t599 * t505;
t986 = t481 + t875;
t976 = t986 / 0.2e1;
t1019 = t604 * t976;
t859 = t602 * t450;
t878 = t599 * t449;
t838 = t878 / 0.2e1 - t859 / 0.2e1;
t991 = t1019 - t838;
t1025 = qJD(1) * t991;
t149 = t1019 + t838;
t1008 = t149 * qJD(2);
t151 = t1018 - t837;
t1009 = t151 * qJD(2);
t780 = t604 * qJD(1);
t765 = t259 * t780;
t1007 = qJD(2) * t991 + t765;
t766 = t689 * t780;
t1006 = qJD(2) * t989 + t766;
t67 = t688 ^ 2 - t986 ^ 2;
t1023 = qJD(2) * t67;
t590 = t604 * pkin(3);
t936 = pkin(8) * t601;
t939 = pkin(2) * t604;
t709 = -t936 - t939;
t682 = -pkin(1) + t709;
t508 = t603 * t682;
t708 = -qJ(5) * t853 - t508;
t937 = pkin(7) * t600;
t308 = t590 + (pkin(4) + t937) * t604 + t708;
t624 = (-t601 * t929 - pkin(1) - t939) * t600;
t930 = t603 * pkin(7);
t724 = -qJ(4) + t930;
t334 = t604 * t724 + t624;
t178 = t597 * t308 + t598 * t334;
t776 = pkin(7) * t870;
t371 = -t708 - t776;
t775 = pkin(7) * t852;
t615 = t624 + t775;
t208 = t371 * t597 - t598 * t615;
t1022 = t178 + t208;
t970 = -t381 / 0.2e1;
t835 = -pkin(3) * t871 + qJ(4) * t853;
t386 = (-t600 * pkin(4) - pkin(7)) * t601 + t835;
t245 = pkin(5) * t445 + t386;
t1017 = t245 * t259;
t818 = qJD(1) * t689;
t1016 = t259 * t818;
t1015 = t382 * t942;
t857 = t602 * t597;
t873 = t599 * t598;
t507 = t857 + t873;
t958 = -t507 / 0.2e1;
t303 = (t958 - t873 / 0.2e1 - t857 / 0.2e1) * t604;
t841 = t303 * qJD(1) + t507 * qJD(3);
t1011 = qJD(6) * t507 - t841;
t856 = t602 * t598;
t874 = t599 * t597;
t504 = -t856 + t874;
t651 = t856 / 0.2e1 - t874 / 0.2e1;
t960 = -t504 / 0.2e1;
t299 = (t960 + t651) * t604;
t843 = t299 * qJD(1) + t504 * qJD(3);
t1010 = qJD(6) * t504 - t843;
t781 = t603 * qJD(4);
t1005 = -qJD(3) * t704 + t781;
t949 = -t598 / 0.2e1;
t950 = t597 / 0.2e1;
t660 = -t381 * t950 + t382 * t949;
t1002 = t245 * t689;
t813 = qJD(2) * t688;
t999 = t813 * t986;
t997 = -t813 - t818;
t405 = t880 / 0.2e1;
t749 = -t880 / 0.2e1;
t984 = t749 + t405;
t996 = qJD(3) * t984;
t457 = t876 / 0.2e1;
t746 = -t876 / 0.2e1;
t985 = t746 + t457;
t995 = qJD(3) * t985;
t994 = qJD(6) * t688;
t993 = qJD(6) * t689;
t744 = t875 / 0.2e1;
t745 = -t875 / 0.2e1;
t319 = t745 + t744;
t747 = -t879 / 0.2e1;
t748 = t879 / 0.2e1;
t248 = t747 + t748;
t593 = t600 ^ 2;
t595 = t603 ^ 2;
t557 = t595 - t593;
t782 = t601 * qJD(1);
t764 = t603 * t782;
t715 = t600 * t764;
t983 = qJD(2) * t557 - 0.2e1 * t715;
t596 = t604 ^ 2;
t605 = -pkin(3) - pkin(4);
t177 = t598 * t308 - t334 * t597;
t982 = -t177 / 0.2e1;
t981 = t178 / 0.2e1;
t980 = t208 / 0.2e1;
t209 = t598 * t371 + t597 * t615;
t979 = -t209 / 0.2e1;
t978 = -t259 / 0.2e1;
t977 = -t986 / 0.2e1;
t974 = -t688 / 0.2e1;
t586 = t603 * qJ(4);
t767 = t605 * t600;
t497 = t586 + t767;
t370 = -pkin(5) * t505 + t497;
t972 = t370 / 0.2e1;
t971 = -t382 / 0.2e1;
t931 = t600 * pkin(2);
t390 = t600 * (-pkin(1) - t936) + (t724 - t931) * t604;
t969 = -t390 / 0.2e1;
t968 = t429 / 0.2e1;
t443 = pkin(7) * t601 - t835;
t967 = t443 / 0.2e1;
t966 = t445 / 0.2e1;
t965 = t481 / 0.2e1;
t491 = t704 * t601;
t964 = -t491 / 0.2e1;
t963 = t492 / 0.2e1;
t962 = -t497 / 0.2e1;
t961 = t502 / 0.2e1;
t959 = t505 / 0.2e1;
t519 = -qJ(4) * t597 + t598 * t605;
t957 = t519 / 0.2e1;
t520 = t598 * qJ(4) + t597 * t605;
t956 = -t520 / 0.2e1;
t955 = t520 / 0.2e1;
t935 = pkin(8) * t604;
t940 = pkin(2) * t601;
t537 = -t935 + t940;
t954 = -t537 / 0.2e1;
t953 = -t539 / 0.2e1;
t569 = pkin(7) * t871;
t952 = -t569 / 0.2e1;
t951 = -t597 / 0.2e1;
t948 = t598 / 0.2e1;
t947 = t600 / 0.2e1;
t946 = -t601 / 0.2e1;
t945 = t601 / 0.2e1;
t944 = -t603 / 0.2e1;
t943 = t603 / 0.2e1;
t941 = t604 / 0.2e1;
t938 = pkin(3) * t600;
t934 = pkin(9) * t445;
t933 = pkin(9) * t447;
t28 = 0.2e1 * t1003 * t689 + t259 * t977 + t978 * t986;
t42 = t259 * t986 - t688 * t689;
t928 = t28 * qJD(3) + t42 * qJD(6);
t61 = t259 * t974 - t689 * t976;
t62 = t1003 * t259 - t689 * t977;
t927 = t61 * qJD(3) + t62 * qJD(6);
t851 = t604 * qJ(4);
t565 = t603 * t851;
t387 = t565 + (-pkin(7) + t767) * t604;
t246 = pkin(5) * t449 + t387;
t258 = t430 + t877;
t101 = t178 - t934;
t888 = t599 * t101;
t625 = pkin(5) * t604 + t177 - t933;
t92 = t602 * t625;
t46 = -t92 + t888;
t587 = t601 * pkin(3);
t317 = -t601 * pkin(4) - t569 - t587 + (-qJ(5) * t604 - t537) * t603;
t288 = t598 * t317;
t518 = t600 * t537;
t585 = t601 * qJ(4);
t394 = -pkin(7) * t853 + t518 + t585;
t343 = qJ(5) * t870 + t394;
t898 = t597 * t343;
t183 = t288 - t898;
t100 = -pkin(5) * t601 - pkin(9) * t450 + t183;
t869 = t602 * t100;
t287 = t597 * t317;
t322 = t598 * t343;
t184 = t322 + t287;
t108 = -pkin(9) * t449 + t184;
t887 = t599 * t108;
t7 = (t869 - t887) * t604 + t46 * t601 + t246 * t259 + t245 * t258;
t926 = t7 * qJD(1);
t262 = t859 - t878;
t618 = t599 * t625;
t868 = t602 * t101;
t47 = t618 + t868;
t867 = t602 * t108;
t889 = t599 * t100;
t8 = (t867 + t889) * t604 - t47 * t601 + t246 * t689 - t245 * t262;
t925 = t8 * qJD(1);
t431 = (t603 * t605 - t584) * t601;
t267 = -pkin(5) * t447 + t431;
t138 = -t208 - t934;
t866 = t602 * t138;
t139 = t209 + t933;
t885 = t599 * t139;
t56 = -t866 + t885;
t22 = t259 * t267 - t56 * t604 + t1002;
t924 = qJD(1) * t22;
t865 = t602 * t139;
t886 = t599 * t138;
t57 = t865 + t886;
t23 = t267 * t689 + t57 * t604 - t1017;
t923 = qJD(1) * t23;
t31 = -t46 * t604 + t1017;
t922 = qJD(1) * t31;
t32 = -t47 * t604 - t1002;
t921 = qJD(1) * t32;
t890 = t598 * t604;
t894 = t597 * t604;
t48 = -t177 * t894 + t178 * t890 - t386 * t853;
t920 = qJD(1) * t48;
t49 = -t177 * t447 - t178 * t445;
t919 = qJD(1) * t49;
t63 = -t208 * t604 - t386 * t447 + t431 * t445;
t918 = qJD(1) * t63;
t64 = t209 * t604 - t386 * t445 - t431 * t447;
t917 = qJD(1) * t64;
t19 = -t177 * t450 - t178 * t449 - t183 * t447 - t184 * t445;
t916 = t19 * qJD(1);
t20 = t1022 * t447 + (-t177 - t209) * t445;
t915 = t20 * qJD(1);
t21 = t177 * t183 + t178 * t184 + t386 * t387;
t914 = t21 * qJD(1);
t26 = -t177 * t208 + t178 * t209 + t386 * t431;
t913 = t26 * qJD(1);
t39 = -t177 * t601 + t183 * t604 + t386 * t449 + t387 * t445;
t908 = t39 * qJD(1);
t907 = t390 * t604;
t40 = -t178 * t601 + t184 * t604 - t386 * t450 - t387 * t447;
t906 = t40 * qJD(1);
t434 = -t508 + t776;
t905 = t434 * t604;
t435 = t600 * t682 + t775;
t904 = t435 * t604;
t903 = t443 * t600;
t902 = t443 * t603;
t901 = t491 * t600;
t900 = t521 * t600;
t55 = t258 * t689 - t259 * t262;
t899 = t55 * qJD(1);
t897 = t597 * t505;
t893 = t598 * t502;
t872 = t600 * t447;
t855 = t603 * t537;
t594 = t601 ^ 2;
t854 = t603 * t594;
t391 = t434 + t590;
t722 = -t569 - t855;
t395 = -t587 + t722;
t444 = -t565 + (pkin(7) + t938) * t604;
t65 = t390 * t394 + t391 * t395 + t443 * t444;
t850 = t65 * qJD(1);
t69 = -t390 * t434 + t391 * t435 + t443 * t491;
t849 = t69 * qJD(1);
t728 = -t434 / 0.2e1 + t391 / 0.2e1;
t729 = t969 + t435 / 0.2e1;
t74 = (-t590 / 0.2e1 - t728) * t603 + (-t851 / 0.2e1 - t729) * t600;
t848 = t74 * qJD(1);
t76 = -t391 * t852 - t395 * t853 + (t394 * t601 + t907) * t600;
t847 = t76 * qJD(1);
t77 = -t435 * t853 + (t390 * t603 + (t391 - t434) * t600) * t601;
t846 = t77 * qJD(1);
t690 = t443 * t604 + t444 * t601;
t86 = -t390 * t601 + t394 * t604 + t603 * t690;
t845 = t86 * qJD(1);
t87 = -t391 * t601 + t395 * t604 + t600 * t690;
t844 = t87 * qJD(1);
t558 = t596 - t594;
t102 = -t258 * t604 + t259 * t601;
t833 = qJD(1) * t102;
t103 = t262 * t604 + t601 * t689;
t832 = qJD(1) * t103;
t753 = t505 * t942;
t754 = t502 * t941;
t134 = (t754 + t450 / 0.2e1) * t598 + (t753 + t449 / 0.2e1) * t597;
t831 = qJD(1) * t134;
t829 = qJD(1) * t151;
t826 = qJD(1) * t149;
t189 = t259 * t853 + t507 * t596;
t824 = qJD(1) * t189;
t190 = t504 * t596 + t689 * t853;
t823 = qJD(1) * t190;
t191 = t904 + (t901 + t902) * t601;
t822 = qJD(1) * t191;
t192 = -t443 * t871 + t491 * t853 - t905;
t821 = qJD(1) * t192;
t214 = t443 * t853 + t907;
t820 = qJD(1) * t214;
t222 = -t445 * t890 + t447 * t894;
t819 = qJD(1) * t222;
t346 = -t594 * t937 - t905;
t817 = qJD(1) * t346;
t347 = -pkin(7) * t854 - t904;
t816 = qJD(1) * t347;
t516 = t558 * t600;
t815 = qJD(1) * t516;
t517 = t596 * t603 - t854;
t814 = qJD(1) * t517;
t812 = qJD(2) * t365;
t811 = qJD(2) * t600;
t810 = qJD(2) * t601;
t809 = qJD(2) * t603;
t808 = qJD(2) * t604;
t807 = qJD(3) * t986;
t806 = qJD(3) * t434;
t805 = qJD(3) * t600;
t804 = qJD(3) * t603;
t803 = qJD(3) * t604;
t802 = qJD(4) * t504;
t801 = qJD(4) * t507;
t800 = qJD(4) * t600;
t799 = qJD(4) * t604;
t798 = qJD(5) * t604;
t797 = qJD(6) * t986;
t796 = qJD(6) * t365;
t210 = t434 * t601 + (-t722 - 0.2e1 * t569) * t604;
t793 = t210 * qJD(1);
t211 = t518 * t604 + (-t435 + t775) * t601;
t792 = t211 * qJD(1);
t296 = t953 + (t895 / 0.2e1 + t959) * t604;
t791 = t296 * qJD(1);
t654 = t891 / 0.2e1 + t896 / 0.2e1;
t297 = (-t502 / 0.2e1 + t654) * t604;
t790 = t297 * qJD(1);
t281 = t299 * qJD(4);
t283 = t303 * qJD(4);
t785 = t558 * qJD(1);
t784 = t597 * qJD(4);
t783 = t598 * qJD(4);
t778 = -pkin(3) / 0.2e1 - pkin(4) / 0.2e1;
t777 = t952 - t587;
t774 = pkin(1) * t782;
t773 = pkin(1) * t780;
t772 = pkin(8) * t805;
t771 = pkin(8) * t804;
t770 = -t935 / 0.2e1;
t769 = t935 / 0.2e1;
t768 = t931 / 0.2e1;
t763 = t600 * t803;
t762 = t603 * t803;
t761 = t604 * t784;
t760 = t604 * t783;
t759 = t600 * t781;
t758 = t600 * t804;
t562 = t600 * t809;
t757 = t601 * t808;
t756 = t601 * t800;
t755 = t601 * t780;
t752 = t521 * t945;
t751 = t894 / 0.2e1;
t750 = -t885 / 0.2e1;
t743 = -t584 / 0.2e1;
t742 = t259 * t947;
t741 = t689 * t947;
t740 = t445 * t947;
t739 = -t865 / 0.2e1;
t736 = -t853 / 0.2e1;
t735 = t853 / 0.2e1;
t734 = t138 / 0.2e1 - t101 / 0.2e1;
t731 = t381 / 0.2e1 + t970;
t730 = t382 / 0.2e1 + t971;
t727 = t952 - t587 / 0.2e1;
t726 = t593 / 0.2e1 - t595 / 0.2e1;
t477 = (-0.1e1 / 0.2e1 + t726) * t601;
t721 = qJD(1) * t477 - t562;
t493 = t726 * t601;
t720 = qJD(1) * t493 - t562;
t533 = t600 * qJD(1) * t854;
t719 = qJD(2) * t493 + t533;
t566 = -qJD(3) + t780;
t718 = -qJD(6) - t780;
t717 = t778 * t600;
t716 = t601 * t562;
t714 = 0.2e1 * t968;
t713 = 0.2e1 * t965;
t249 = t968 - t429 / 0.2e1;
t320 = t965 - t481 / 0.2e1;
t712 = -pkin(5) + t519;
t711 = t780 - qJD(3) / 0.2e1;
t344 = t520 * t599 - t602 * t712;
t710 = -t92 / 0.2e1 + t344 * t942;
t536 = -t586 + t938;
t707 = t536 * t945 + t967;
t706 = t519 * t941 + t982;
t705 = t520 * t942 + t981;
t703 = -t521 * t604 + t936;
t607 = t177 * t971 + t382 * t979 + t386 * t962 - t431 * t492 / 0.2e1 + t1022 * t970;
t661 = t183 * t957 + t184 * t955;
t1 = t607 + t661;
t66 = t492 * t497;
t702 = -t1 * qJD(1) + t66 * qJD(2);
t612 = t1003 * t245 + t259 * t972 + t267 * t976 - t1031;
t652 = -t887 / 0.2e1 + t869 / 0.2e1;
t620 = t344 * t946 + t652;
t3 = t612 + t620;
t70 = t365 * t688 + t370 * t986;
t701 = -qJD(1) * t3 - qJD(2) * t70;
t611 = t245 * t976 + t259 * t973 + t267 * t974 - t52 * t942 - t689 * t972;
t345 = t602 * t520 + t599 * t712;
t653 = -t889 / 0.2e1 - t867 / 0.2e1;
t619 = t345 * t946 + t653;
t6 = t611 + t619;
t71 = t365 * t986 - t370 * t688;
t700 = -qJD(1) * t6 - qJD(2) * t71;
t606 = (t981 + t980) * t505 + (t979 + t982) * t502 - t731 * t445 + t730 * t447;
t658 = -t519 * t450 / 0.2e1 + t449 * t956;
t10 = t606 - t658;
t698 = t10 * qJD(1);
t613 = t345 * t941 - t618 / 0.2e1;
t15 = t602 * t734 + t613 + t750;
t697 = t15 * qJD(1);
t16 = -t599 * t734 + t710 + t739;
t696 = t16 * qJD(1);
t695 = qJD(2) * t28 - t1027;
t694 = qJD(1) * t28 + t1023;
t693 = qJD(2) * t42 + t1027;
t692 = qJD(1) * t42 - t1023;
t691 = t394 * t603 + t395 * t600;
t153 = t381 * t505 - t382 * t502;
t614 = t177 * t959 + t178 * t961 + t382 * t966 + t447 * t970;
t617 = (-pkin(7) / 0.2e1 + t717) * t604 + t565 / 0.2e1;
t29 = t614 + t617;
t687 = qJD(1) * t29 - qJD(2) * t153;
t212 = -t492 * t505 + t497 * t502;
t610 = -t1015 - t386 * t505 / 0.2e1 + t431 * t961 - t447 * t963 + t497 * t966;
t627 = -t288 / 0.2e1 + t519 * t946 + t898 / 0.2e1;
t35 = t610 - t627;
t686 = qJD(1) * t35 + qJD(2) * t212;
t213 = t492 * t502 + t497 * t505;
t609 = t381 * t942 + t386 * t961 + t431 * t959 + t445 * t963 - t447 * t962;
t649 = -t287 / 0.2e1 - t322 / 0.2e1 + t520 * t946;
t38 = t609 + t649;
t685 = qJD(1) * t38 + qJD(2) * t213;
t373 = t521 * t603 + t536 * t600;
t495 = -t518 / 0.2e1;
t545 = t600 * t769;
t79 = t545 - t901 / 0.2e1 - t902 / 0.2e1 - t585 + t495 + (t900 / 0.2e1 + (-t536 / 0.2e1 + pkin(7) / 0.2e1) * t603) * t601;
t684 = -qJD(1) * t79 + qJD(2) * t373;
t374 = t536 * t603 - t900;
t666 = t769 + t752;
t628 = t964 + t666;
t662 = t707 * t600;
t81 = t662 + (t954 + t628) * t603 + t777;
t683 = -qJD(1) * t81 + qJD(2) * t374;
t681 = t566 * t601;
t115 = 0.2e1 * t405 - t860;
t193 = 0.2e1 * t457 - t858;
t680 = qJD(1) * t115 + qJD(2) * t193;
t117 = 0.2e1 * t748 + t714;
t195 = 0.2e1 * t744 + t713;
t679 = qJD(1) * t117 + qJD(2) * t195;
t623 = (t603 * t778 + t743) * t601;
t659 = t445 * t956 - t447 * t957;
t135 = t623 - t659;
t650 = t717 + t586 / 0.2e1;
t657 = t502 * t955 + t505 * t957;
t200 = t650 + t657;
t678 = qJD(1) * t135 + qJD(2) * t200;
t204 = 0.2e1 * t747 - t429;
t219 = 0.2e1 * t745 - t481;
t676 = qJD(1) * t204 + qJD(2) * t219;
t207 = t445 * t502 + t447 * t505;
t286 = t445 ^ 2 + t447 ^ 2;
t675 = qJD(1) * t286 + qJD(2) * t207;
t368 = t502 ^ 2 + t505 ^ 2;
t674 = qJD(1) * t207 + qJD(2) * t368;
t656 = t445 * t951 - t447 * t948;
t216 = t736 + t656;
t655 = t502 * t950 + t505 * t948;
t278 = t947 + t655;
t673 = qJD(1) * t216 - qJD(2) * t278;
t672 = qJD(1) * t984 + qJD(2) * t985;
t671 = qJD(1) * t249 + qJD(2) * t320;
t670 = qJD(1) * t445 + qJD(2) * t502;
t669 = -qJD(1) * t447 - qJD(2) * t505;
t668 = t779 * t259;
t667 = t769 - t940 / 0.2e1;
t665 = -t394 * qJ(4) / 0.2e1 + t395 * pkin(3) / 0.2e1;
t494 = t518 / 0.2e1;
t546 = t600 * t770;
t366 = t601 * t768 + t494 + t546;
t664 = pkin(2) * t809 - qJD(1) * t366;
t367 = (t954 + t667) * t603;
t663 = pkin(2) * t811 - qJD(1) * t367;
t621 = t245 * t974 + t1031;
t11 = -t621 + t652;
t648 = qJD(1) * t11 + t688 * t812;
t622 = t245 * t977 + t365 * t978 - t52 * t941;
t12 = -t622 + t653;
t647 = qJD(1) * t12 + t812 * t986;
t646 = -qJD(2) * t62 - t1016;
t645 = qJD(2) * t61 - t1016;
t644 = -qJD(1) * t62 - t999;
t82 = t742 + (t943 * t986 + t960) * t601;
t643 = qJD(1) * t82 + t811 * t986;
t642 = qJD(1) * t61 - t999;
t85 = -t741 + (-t688 * t943 + t958) * t601;
t641 = qJD(1) * t85 - t688 * t811;
t631 = t386 * t947 + t492 * t735;
t34 = (t1015 - t183 / 0.2e1) * t598 + (-t381 * t941 - t184 / 0.2e1) * t597 + t631;
t640 = -qJD(1) * t34 - t492 * t811;
t608 = (t600 * t729 + t603 * t728) * pkin(8) + t536 * t967 + t491 * t521 / 0.2e1;
t44 = t608 + t665;
t639 = -t521 * t536 * qJD(2) - t44 * qJD(1);
t638 = t603 * t681;
t187 = t903 / 0.2e1 + (t954 + t666) * t603 + t727;
t637 = qJD(1) * t187 + t521 * t811;
t224 = -t872 / 0.2e1 + (t505 * t944 + t950) * t601;
t636 = -qJD(1) * t224 + t505 * t811;
t225 = t740 + (t502 * t943 + t948) * t601;
t635 = qJD(1) * t225 + t502 * t811;
t354 = t445 * t853 + t596 * t597;
t634 = -qJD(1) * t354 + t597 * t803;
t355 = t447 * t853 + t596 * t598;
t633 = -qJD(1) * t355 + t598 * t803;
t515 = t557 * t594;
t630 = qJD(1) * t515 + 0.2e1 * t716;
t25 = (t980 + t705) * t598 + (t979 + t706) * t597;
t356 = -t597 * t519 + t598 * t520;
t72 = t597 * t731 - t598 * t730;
t626 = qJD(1) * t25 - qJD(2) * t72 + qJD(3) * t356;
t532 = t594 * t595 + t596;
t616 = qJD(1) * t532 + t716 - t803;
t575 = -t810 / 0.2e1;
t574 = t810 / 0.2e1;
t573 = -t782 / 0.2e1;
t572 = t782 / 0.2e1;
t563 = t603 * t780;
t534 = t603 * t756;
t531 = t566 * qJ(4);
t514 = -t563 + t804;
t501 = t566 * t598;
t500 = t711 * t601;
t499 = t566 * t597;
t496 = t855 / 0.2e1;
t486 = qJD(2) * t593 + t715;
t484 = t493 * qJD(3);
t478 = t593 * t946 + t595 * t945 + t946;
t456 = (-t600 * t782 + t809) * t604;
t455 = t600 * t681;
t442 = (qJD(6) / 0.2e1 + t711) * t601;
t427 = t435 * qJD(3);
t316 = t603 * t667 + t496 + t569;
t315 = t546 + t495 + (t768 + t930) * t601;
t302 = t507 * t942 + t602 * t751 + t873 * t941;
t301 = t603 * t751 + t753 + t953;
t300 = t504 * t941 + t604 * t651;
t298 = t604 * t654 + t754;
t279 = t947 - t655;
t227 = t872 / 0.2e1 + t505 * t735 + t597 * t945;
t226 = t502 * t735 + t598 * t946 + t740;
t221 = 0.2e1 * t746 + t858;
t220 = t713 + t875;
t217 = -t893 + t897;
t215 = t735 + t656;
t206 = 0.2e1 * t749 + t860;
t205 = t714 + t879;
t202 = t207 * qJD(5);
t201 = t650 - t657;
t199 = -t598 * t445 + t597 * t447;
t196 = t320 + t319;
t188 = t603 * t770 + t521 * t736 - t903 / 0.2e1 - t855 / 0.2e1 + t727;
t136 = t623 + t659;
t133 = t449 * t951 + t450 * t949 + (t893 / 0.2e1 - t897 / 0.2e1) * t604;
t118 = t249 + t248;
t84 = t507 * t945 - t688 * t735 - t741;
t83 = t504 * t945 + t735 * t986 + t742;
t80 = t603 * t628 + t496 + t662 - t777;
t78 = t545 + t585 + pkin(7) * t736 + t494 - t707 * t603 + (t752 + t964) * t600;
t75 = t434 * t944 + t600 * t969 + t435 * t947 + t391 * t943 + (t743 - t589 / 0.2e1) * t604;
t73 = -0.2e1 * t660;
t43 = t608 - t665;
t37 = t609 - t649;
t36 = t610 + t627;
t33 = t183 * t948 + t184 * t950 + t604 * t660 + t631;
t30 = -t614 + t617;
t24 = t208 * t949 + t209 * t950 + t597 * t706 + t598 * t705;
t18 = t868 / 0.2e1 + t750 + t866 / 0.2e1 - t613;
t17 = -t888 / 0.2e1 + t739 - t886 / 0.2e1 - t710;
t14 = t621 + t652;
t13 = t622 + t653;
t9 = t606 + t658;
t5 = t611 - t619;
t4 = t612 - t620;
t2 = -t607 + t661;
t27 = [0, 0, 0, t757, t558 * qJD(2), 0, 0, 0, -pkin(1) * t810, -pkin(1) * t808, -t594 * t758 + t595 * t757, -qJD(3) * t515 - 0.2e1 * t604 * t716, -qJD(2) * t517 + t601 * t763, qJD(2) * t516 + t601 * t762, -t757, -qJD(2) * t210 - qJD(3) * t347, qJD(2) * t211 + qJD(3) * t346, qJD(2) * t87 + qJD(3) * t191 - t594 * t759, -qJD(2) * t76 - qJD(3) * t77 + t604 * t756, -qJD(2) * t86 - qJD(3) * t192 + qJD(4) * t532, qJD(2) * t65 + qJD(3) * t69 - qJD(4) * t214, qJD(2) * t39 + qJD(3) * t63 + qJD(4) * t354 - t447 * t798, -qJD(2) * t40 - qJD(3) * t64 + qJD(4) * t355 + t445 * t798, qJD(2) * t19 + qJD(3) * t20 - qJD(4) * t222 + qJD(5) * t286, qJD(2) * t21 + qJD(3) * t26 - qJD(4) * t48 + qJD(5) * t49 -(qJD(2) * t262 + t668) * t689, qJD(2) * t55 - t68 * t779, t103 * qJD(2) + t604 * t668, t102 * qJD(2) + (-qJD(3) * t689 + t993) * t604, -t757, qJD(2) * t7 + qJD(3) * t22 + qJD(4) * t189 + qJD(6) * t32 + t689 * t798, -qJD(2) * t8 - qJD(3) * t23 - qJD(4) * t190 - qJD(6) * t31 + t259 * t798; 0, 0, 0, t755, t785, t808, -t810, 0, -pkin(7) * t808 - t774, pkin(7) * t810 - t773, -t484 + (t595 * t782 + t562) * t604, -0.2e1 * t601 * t758 + t604 * t983, t600 * t810 - t814, t601 * t809 + t815, -t500, -t793 + (t600 * t709 - t775) * qJD(2) + t316 * qJD(3), t792 + (t603 * t709 + t776) * qJD(2) + t315 * qJD(3), t844 + (-t444 * t603 - t600 * t703) * qJD(2) + t80 * qJD(3) + t478 * qJD(4), qJD(2) * t691 + t75 * qJD(3) - t847, -t845 + (-t444 * t600 + t603 * t703) * qJD(2) + t78 * qJD(3) + t534, t850 + (pkin(8) * t691 + t444 * t521) * qJD(2) + t43 * qJD(3) + t188 * qJD(4), t908 + (t381 * t601 + t387 * t502 + t449 * t492) * qJD(2) + t36 * qJD(3) + t226 * qJD(4) + t301 * qJD(5), -t906 + (t382 * t601 + t387 * t505 + t450 * t492) * qJD(2) + t37 * qJD(3) + t227 * qJD(4) + t298 * qJD(5), t916 + (-t183 * t505 - t184 * t502 + t381 * t450 - t382 * t449) * qJD(2) + t9 * qJD(3) + t133 * qJD(4) + t202, t914 + (-t183 * t381 + t184 * t382 + t387 * t492) * qJD(2) + t2 * qJD(3) + t33 * qJD(4) + t30 * qJD(5), t262 * t997 + t927, t899 + (t258 * t688 - t262 * t986) * qJD(2) + t928, t149 * t779 + t688 * t810 + t832, -t151 * t779 + t810 * t986 + t833, -t442, t926 + (t246 * t986 + t258 * t365 - t52 * t601) * qJD(2) + t4 * qJD(3) + t83 * qJD(4) + t989 * qJD(5) + t14 * qJD(6), -t925 + (t1024 * t601 - t246 * t688 + t262 * t365) * qJD(2) + t5 * qJD(3) + t84 * qJD(4) + t991 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t719, -t630, t455, t638, t574, qJD(2) * t316 - t427 - t816, qJD(2) * t315 + t806 + t817, qJD(2) * t80 - t427 + t822, t75 * qJD(2) - qJD(3) * t835 - t756 - t846, qJD(2) * t78 - t799 - t806 - t821, t849 + t43 * qJD(2) + (-pkin(3) * t435 - qJ(4) * t434) * qJD(3) + t390 * qJD(4), qJD(2) * t36 + qJD(3) * t208 - t761 + t918, qJD(2) * t37 + qJD(3) * t209 - t760 - t917, t915 + t9 * qJD(2) + (-t445 * t519 + t447 * t520) * qJD(3) + t199 * qJD(4), t913 + t2 * qJD(2) + (-t208 * t519 + t209 * t520) * qJD(3) + t24 * qJD(4) + t136 * qJD(5), t645, t695, t205 * qJD(6) + t259 * t566 + t1008, t206 * qJD(6) - t566 * t689 - t1009, t574, qJD(2) * t4 + qJD(3) * t56 + qJD(5) * t984 + qJD(6) * t18 + t283 + t924, qJD(2) * t5 + qJD(3) * t57 + qJD(5) * t118 + qJD(6) * t17 - t281 - t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t478 - t533, t455, t616, qJD(2) * t188 + qJD(3) * t390 - t820, qJD(2) * t226 - t634, qJD(2) * t227 - t633, qJD(2) * t133 + qJD(3) * t199 - t819, qJD(2) * t33 + qJD(3) * t24 + qJD(5) * t215 - t920, 0, 0, 0, 0, 0, qJD(2) * t83 + qJD(3) * t303 + qJD(6) * t302 + t824, qJD(2) * t84 - qJD(3) * t299 + qJD(6) * t300 - t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t301 - t447 * t780, qJD(2) * t298 + t445 * t780, t675, qJD(2) * t30 + qJD(3) * t136 + qJD(4) * t215 + t919, 0, 0, 0, 0, 0, t1006 + t996, qJD(3) * t118 + qJD(6) * t248 + t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t646, t693, t205 * qJD(3) + t259 * t718 - t1008, t206 * qJD(3) - t689 * t718 + t1009, t575, qJD(2) * t14 + qJD(3) * t18 + qJD(4) * t302 - qJD(6) * t47 + t921, qJD(2) * t13 + qJD(3) * t17 + qJD(4) * t300 + qJD(5) * t248 + qJD(6) * t46 - t922; 0, 0, 0, -t755, -t785, 0, 0, 0, t774, t773, -t595 * t755 - t484, 0.2e1 * t600 * t638, -t762 + t814, t763 - t815, t500, qJD(3) * t367 + t793, qJD(3) * t366 - t792, qJD(3) * t81 - qJD(4) * t477 - t844, -qJD(3) * t74 - t604 * t781 + t847, qJD(3) * t79 + t534 + t845, qJD(3) * t44 - qJD(4) * t187 - t850, qJD(3) * t35 + qJD(4) * t225 - qJD(5) * t296 - t908, qJD(3) * t38 - qJD(4) * t224 - qJD(5) * t297 + t906, qJD(3) * t10 + qJD(4) * t134 + t202 - t916, -qJD(3) * t1 + qJD(4) * t34 - qJD(5) * t29 - t914, t262 * t818 + t927, -t899 + t928, t779 * t991 - t832, -t779 * t989 - t833, t442, qJD(3) * t3 + qJD(4) * t82 + qJD(5) * t151 - qJD(6) * t11 - t926, qJD(3) * t6 + qJD(4) * t85 + qJD(5) * t149 - qJD(6) * t12 + t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, t557 * qJD(3), 0, 0, 0, -pkin(2) * t805, -pkin(2) * t804, -qJD(3) * t374 + t759, 0, -qJD(3) * t373 + qJD(4) * t593 (qJD(3) * t536 - t800) * t521, qJD(3) * t212 + t502 * t800, qJD(3) * t213 + t505 * t800, qJD(5) * t368, qJD(3) * t66 + qJD(5) * t153 + t492 * t800 -(-t797 + t807) * t688, t779 * t67, 0, 0, 0, qJD(3) * t70 - t688 * t796 + t800 * t986, qJD(3) * t71 - t688 * t800 - t796 * t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, t983, t514, t566 * t600, t573, -t663 - t771, -t664 + t772, -t683 - t771, t1005 - t848, -t684 - t772, pkin(8) * t1005 - t639, -qJD(3) * t382 + t686, qJD(3) * t381 + t685 (-t502 * t519 + t505 * t520) * qJD(3) + t217 * qJD(4) + t698 (t381 * t520 + t382 * t519) * qJD(3) + t73 * qJD(4) + t201 * qJD(5) + t702, t642, t694, qJD(6) * t220 + t1025 - t807, qJD(3) * t688 + qJD(6) * t221 - t1026, t573, qJD(5) * t985 - t1030 - t701, qJD(5) * t196 - t1029 - t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, t514, t486, -t637 + t771, t635, t636, qJD(3) * t217 + t831, qJD(3) * t73 + qJD(5) * t279 - t640, 0, 0, 0, 0, 0, t643, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t791, -t790, t674, qJD(3) * t201 + qJD(4) * t279 - t687, 0, 0, 0, 0, 0, t829 + t995, qJD(3) * t196 + qJD(6) * t319 + t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t644, t692, qJD(3) * t220 - t1025 - t797, qJD(3) * t221 + t1026 + t994, t572, t1030 - t648, qJD(5) * t319 + t1029 - t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t719, t630, t456 (-t764 - t811) * t604, t574, -qJD(2) * t367 + t816, -qJD(2) * t366 - t817, -qJD(2) * t81 - t822, qJD(2) * t74 + t846, -qJD(2) * t79 - t799 + t821, -qJ(4) * t799 - qJD(2) * t44 - t849, -qJD(2) * t35 + qJD(5) * t447 - t761 - t918, -qJD(2) * t38 - qJD(5) * t445 - t760 + t917, -qJD(2) * t10 - t915, qJD(2) * t1 + qJD(4) * t25 - qJD(5) * t135 - t913, -t645, -t695, -qJD(6) * t249 - t1007, -qJD(6) * t984 + t1006, t574, -qJD(2) * t3 - qJD(5) * t115 - qJD(6) * t15 + t283 - t924, -qJD(2) * t6 - qJD(5) * t117 - qJD(6) * t16 - t281 + t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, -t983, t563, -t600 * t780, t572, t663, t664, t683, t848, t684, t639, qJD(5) * t505 - t686, -qJD(5) * t502 - t685, -t698, -qJD(4) * t72 - qJD(5) * t200 - t702, -t642, -t694, -qJD(6) * t320 - t1025, -qJD(6) * t985 + t1026, t572, -qJD(5) * t193 + t701, -qJD(5) * t195 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), t784, t783, 0, t356 * qJD(4), 0, 0, 0, 0, 0, qJD(6) * t345 + t801, -qJD(6) * t344 - t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t566, -t531, -t499, -t501, 0, t626, 0, 0, 0, 0, 0, t841, -t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669, -t670, 0, -t678, 0, 0, 0, 0, 0, -t680, -t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, -t672, 0, t345 * t779 - t697, -t344 * t779 - t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t477 + t533, t456, -t616, qJ(4) * t803 + qJD(2) * t187 + t820, -qJD(2) * t225 + t634, qJD(2) * t224 + t633, -qJD(2) * t134 + t819, -qJD(2) * t34 - qJD(3) * t25 + qJD(5) * t216 + t920, 0, 0, 0, 0, 0, -qJD(2) * t82 - t303 * t779 - t824, -qJD(2) * t85 + t299 * t779 + t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, t563, -t486, t637, -t635, -t636, -t831, qJD(3) * t72 - qJD(5) * t278 + t640, 0, 0, 0, 0, 0, -t643, -t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t566, t531, t499, t501, 0, -t626, 0, 0, 0, 0, 0, t1011, -t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t673, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1011, t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296 * qJD(2) + t447 * t566, t297 * qJD(2) - t445 * t566, -t675, qJD(2) * t29 + qJD(3) * t135 - qJD(4) * t216 - t919, 0, 0, 0, 0, 0, qJD(3) * t115 - t1009 - t766 - t993, qJD(3) * t117 + qJD(6) * t204 - t1008 - t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t505 + t791, qJD(3) * t502 + t790, -t674, qJD(3) * t200 + qJD(4) * t278 + t687, 0, 0, 0, 0, 0, qJD(3) * t193 - t829 - t994, qJD(3) * t195 + qJD(6) * t219 - t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, t670, 0, t678, 0, 0, 0, 0, 0, t680, t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t673, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t997, t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t646, -t693, qJD(3) * t249 + t1007, -t1006 + t996, t575, qJD(2) * t11 + qJD(3) * t15 + qJD(5) * t689 - t283 - t921, qJD(2) * t12 + qJD(3) * t16 - qJD(5) * t204 + t281 + t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t644, -t692, qJD(3) * t320 + t1025, -t1026 + t995, t573, qJD(5) * t688 + t648, -qJD(5) * t219 + t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, t672, 0, -qJD(3) * t345 + t697 - t801, qJD(3) * t344 + t696 + t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t841, t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t997, -t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t27;
