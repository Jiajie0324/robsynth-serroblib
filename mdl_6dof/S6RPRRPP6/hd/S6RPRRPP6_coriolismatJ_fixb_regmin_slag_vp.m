% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:48:31
% EndTime: 2019-03-09 04:48:52
% DurationCPUTime: 10.16s
% Computational Cost: add. (10237->667), mult. (20371->847), div. (0->0), fcn. (20665->6), ass. (0->467)
t434 = sin(pkin(9));
t436 = sin(qJ(4));
t439 = cos(qJ(3));
t627 = t436 * t439;
t380 = t434 * t627;
t435 = cos(pkin(9));
t438 = cos(qJ(4));
t622 = t438 * t439;
t325 = t435 * t622 - t380;
t720 = t325 / 0.2e1;
t412 = t435 * t438;
t633 = t434 * t436;
t351 = -t412 + t633;
t719 = -t351 / 0.2e1;
t718 = t351 / 0.2e1;
t629 = t435 * t436;
t632 = t434 * t438;
t354 = t629 + t632;
t766 = -t354 / 0.2e1;
t717 = t354 / 0.2e1;
t437 = sin(qJ(3));
t705 = t437 / 0.2e1;
t703 = t439 / 0.2e1;
t619 = t439 * t354;
t765 = -t619 / 0.2e1;
t764 = t619 / 0.2e1;
t624 = t438 * qJ(5);
t377 = t438 * pkin(8) + t624;
t358 = t435 * t377;
t534 = (-qJ(5) - pkin(8)) * t436;
t523 = t434 * t534;
t753 = t358 + t523;
t726 = t753 / 0.2e1;
t321 = t354 * t437;
t628 = t436 * t437;
t379 = t434 * t628;
t324 = t412 * t437 - t379;
t721 = t324 / 0.2e1;
t485 = t321 * t720 - t619 * t721;
t737 = t485 * qJD(5);
t763 = (t351 * t321 + t354 * t324) * qJD(2) + t737;
t734 = t321 * t717 + t324 * t719;
t463 = t705 - t734;
t751 = qJD(1) * t485;
t762 = qJD(3) * t463 - t751;
t495 = t705 + t734;
t761 = qJD(3) * t495 + t751;
t346 = t354 ^ 2;
t754 = t351 ^ 2 + t346;
t760 = qJD(5) * t754;
t512 = t325 * t354 + t351 * t619;
t319 = t325 ^ 2;
t755 = t619 ^ 2 + t319;
t759 = qJD(1) * t755 + qJD(3) * t512;
t758 = qJD(1) * t512 + qJD(3) * t754;
t259 = t351 * t325;
t655 = t619 * t354;
t513 = t259 - t655;
t757 = qJD(2) * t513 + qJD(5) * t755;
t756 = 0.2e1 * t436;
t652 = t324 * qJ(6);
t702 = t321 * pkin(5);
t752 = t652 / 0.2e1 - t702 / 0.2e1;
t749 = qJD(1) * t513;
t748 = qJD(2) * t485;
t492 = t321 * t619 + t324 * t325 - t439 * t437;
t747 = qJD(2) * t492;
t743 = qJD(3) * t492;
t739 = qJD(5) * t463;
t280 = t377 * t434 - t435 * t534;
t514 = t280 * t354 - t351 * t753;
t738 = qJD(5) * t514;
t736 = t495 * qJD(5);
t735 = t512 * qJD(5);
t527 = t280 * t718 + t354 * t726;
t525 = t324 * t705 + t325 * t703;
t733 = t280 * t720 + t753 * t765;
t522 = pkin(3) * t437 - pkin(8) * t439;
t368 = qJ(2) + t522;
t349 = t438 * t368;
t440 = -pkin(1) - pkin(7);
t626 = t436 * t440;
t533 = pkin(4) - t626;
t567 = qJ(5) * t622;
t241 = t437 * t533 + t349 - t567;
t621 = t438 * t440;
t568 = t437 * t621;
t266 = t568 + (-qJ(5) * t439 + t368) * t436;
t666 = t266 * t434;
t125 = t241 * t435 - t666;
t218 = t434 * t241;
t630 = t435 * t266;
t126 = t630 + t218;
t732 = t125 * t766 + t126 * t719;
t625 = t437 * qJ(6);
t117 = t126 + t625;
t118 = -pkin(5) * t437 - t125;
t731 = t117 * t718 + t118 * t766;
t430 = t436 ^ 2;
t432 = t438 ^ 2;
t398 = t432 - t430;
t532 = t622 * t756;
t469 = qJD(1) * t532 - qJD(3) * t398;
t730 = -qJD(2) * t463 + qJD(3) * t514;
t729 = -t126 / 0.2e1;
t420 = t437 * t440;
t304 = t420 * t436 - t349;
t265 = -t304 - t567;
t635 = t434 * t265;
t138 = t630 + t635;
t728 = -t138 / 0.2e1;
t139 = t265 * t435 - t666;
t727 = t139 / 0.2e1;
t725 = -t280 / 0.2e1;
t724 = t321 / 0.2e1;
t548 = t358 / 0.2e1;
t716 = -t380 / 0.2e1;
t411 = pkin(4) * t434 + qJ(6);
t715 = -t411 / 0.2e1;
t714 = t411 / 0.2e1;
t396 = -t412 / 0.2e1;
t395 = t412 / 0.2e1;
t413 = -pkin(4) * t435 - pkin(5);
t713 = t413 / 0.2e1;
t433 = t439 ^ 2;
t417 = t433 * t438;
t712 = -t417 / 0.2e1;
t711 = t417 / 0.2e1;
t710 = t434 / 0.2e1;
t709 = -t435 / 0.2e1;
t708 = -t436 / 0.2e1;
t706 = -t437 / 0.2e1;
t704 = -t439 / 0.2e1;
t701 = t325 * pkin(5);
t700 = t354 * pkin(5);
t699 = t436 * pkin(4);
t698 = t437 * pkin(8);
t697 = t439 * pkin(3);
t696 = t439 * pkin(5);
t695 = pkin(4) * qJD(4);
t572 = pkin(4) * t622;
t657 = t619 * qJ(6);
t169 = t572 + t657 + t701;
t410 = pkin(4) * t627;
t618 = t439 * t440;
t356 = t410 - t618;
t166 = pkin(5) * t619 - t325 * qJ(6) + t356;
t673 = t166 * t325;
t41 = -t138 * t437 + t169 * t619 + t673;
t694 = qJD(1) * t41;
t42 = t139 * t437 + t166 * t619 - t169 * t325;
t693 = qJD(1) * t42;
t60 = t117 * t437 - t673;
t692 = qJD(1) * t60;
t690 = t117 * t321;
t688 = t117 * t354;
t687 = t118 * t324;
t686 = t118 * t351;
t684 = t125 * t324;
t683 = t125 * t351;
t681 = t126 * t321;
t679 = t126 * t354;
t638 = t354 * t411;
t641 = t351 * t413;
t483 = t641 / 0.2e1 + t638 / 0.2e1;
t540 = t727 + t118 / 0.2e1;
t542 = t117 / 0.2e1 + t728;
t672 = t169 * t439;
t13 = t672 / 0.2e1 - t540 * t324 + t542 * t321 + t483;
t678 = t13 * qJD(1);
t677 = t138 * t280;
t676 = t139 * t753;
t378 = t697 + t698;
t363 = t438 * t378;
t258 = t437 * t624 + t439 * t533 + t363;
t233 = t434 * t258;
t362 = t436 * t378;
t382 = t438 * t618;
t269 = qJ(5) * t628 + t362 + t382;
t261 = t435 * t269;
t134 = t261 + t233;
t123 = t439 * qJ(6) + t134;
t631 = t435 * t258;
t634 = t434 * t269;
t133 = t631 - t634;
t124 = -t133 - t696;
t573 = pkin(4) * t628;
t353 = t420 - t573;
t165 = t353 + t652 - t702;
t15 = t117 * t123 + t118 * t124 + t165 * t166;
t675 = t15 * qJD(1);
t637 = t354 * t434;
t640 = t351 * t435;
t482 = t637 / 0.2e1 - t640 / 0.2e1;
t539 = t727 - t125 / 0.2e1;
t541 = t126 / 0.2e1 + t728;
t16 = -t539 * t324 + t541 * t321 + (t711 + t482) * pkin(4);
t674 = t16 * qJD(1);
t18 = t117 * t139 + t118 * t138 + t166 * t169;
t671 = t18 * qJD(1);
t19 = -t123 * t619 + t124 * t325 - t687 + t690;
t670 = t19 * qJD(1);
t20 = (-t117 + t138) * t325 + (-t118 - t139) * t619;
t669 = t20 * qJD(1);
t21 = -t133 * t325 - t134 * t619 + t681 + t684;
t668 = t21 * qJD(1);
t26 = (-t126 + t138) * t325 + (t125 - t139) * t619;
t667 = t26 * qJD(1);
t188 = t753 * t321;
t29 = t125 * t133 + t126 * t134 + t353 * t356;
t663 = t29 * qJD(1);
t30 = t117 * t439 + t123 * t437 - t165 * t325 + t166 * t324;
t662 = t30 * qJD(1);
t31 = -t118 * t439 - t124 * t437 + t165 * t619 - t166 * t321;
t661 = t31 * qJD(1);
t32 = -t125 * t138 + t126 * t139 + t356 * t572;
t660 = t32 * qJD(1);
t658 = t321 * t434;
t656 = t619 * t280;
t654 = t619 * t413;
t653 = t619 * t435;
t651 = t324 * t280;
t649 = t324 * t413;
t648 = t324 * t435;
t187 = t325 * t753;
t646 = t325 * t411;
t645 = t325 * t434;
t644 = t351 * qJ(6);
t636 = t411 * t321;
t431 = t437 ^ 2;
t623 = t438 * t431;
t49 = t686 + t688;
t617 = t49 * qJD(1);
t51 = t679 - t683;
t616 = t51 * qJD(1);
t545 = t622 / 0.2e1;
t547 = t629 / 0.2e1;
t615 = t434 * t545 + t439 * t547;
t546 = -t622 / 0.2e1;
t614 = t434 * t546 + t627 * t709;
t613 = t633 / 0.2e1 + t396;
t612 = -t633 / 0.2e1 + t395;
t397 = t431 - t433;
t611 = qJD(1) * qJ(2);
t150 = -t525 + t613;
t606 = qJD(1) * t150;
t151 = t525 + t612;
t605 = qJD(1) * t151;
t478 = t632 / 0.2e1 + t547;
t488 = t321 * t706 - t619 * t703;
t152 = t478 - t488;
t604 = qJD(1) * t152;
t235 = -t304 * t437 - t433 * t626;
t603 = qJD(1) * t235;
t305 = t436 * t368 + t568;
t236 = -t305 * t437 - t433 * t621;
t602 = qJD(1) * t236;
t601 = qJD(1) * t325;
t360 = t397 * t436;
t600 = qJD(1) * t360;
t361 = -t417 + t623;
t599 = qJD(1) * t361;
t598 = qJD(2) * t437;
t597 = qJD(3) * t354;
t596 = qJD(3) * t438;
t595 = qJD(4) * t324;
t594 = qJD(4) * t351;
t593 = qJD(4) * t436;
t592 = qJD(4) * t437;
t591 = qJD(4) * t438;
t590 = qJD(5) * t619;
t589 = qJD(5) * t325;
t588 = qJD(6) * t619;
t587 = qJD(6) * t354;
t566 = t436 * t618;
t148 = -t304 * t439 + (t363 + t566) * t437;
t586 = t148 * qJD(1);
t149 = t305 * t439 + (-t382 + t362) * t437;
t585 = t149 * qJD(1);
t221 = (t717 - t478) * t437;
t584 = t221 * qJD(1);
t518 = t395 + t718;
t224 = -t379 / 0.2e1 + t518 * t437;
t583 = t224 * qJD(1);
t225 = t379 / 0.2e1 + (t396 + t718) * t437;
t582 = t225 * qJD(1);
t571 = 0.1e1 / 0.2e1 + t431 / 0.2e1;
t334 = (-t433 / 0.2e1 - t571) * t436;
t581 = t334 * qJD(1);
t335 = t438 * t571 + t711;
t580 = t335 * qJD(1);
t579 = t397 * qJD(1);
t578 = t437 * qJD(1);
t577 = t437 * qJD(3);
t423 = t437 * qJD(6);
t576 = t439 * qJD(1);
t575 = t439 * qJD(3);
t574 = t439 * qJD(4);
t421 = t699 / 0.2e1;
t569 = t713 - pkin(5) / 0.2e1;
t419 = -pkin(4) * t438 - pkin(3);
t565 = qJ(2) * t578;
t564 = qJ(2) * t576;
t563 = t619 * t601;
t562 = t351 * t578;
t561 = t354 * t578;
t560 = t436 * t596;
t559 = t436 * t575;
t558 = t438 * t575;
t557 = t436 * t592;
t556 = t436 * t574;
t555 = t437 * t591;
t554 = t438 * t574;
t553 = t436 * t591;
t552 = t437 * t575;
t551 = t437 * t576;
t550 = -t676 / 0.2e1;
t538 = -t218 / 0.2e1 - t630 / 0.2e1;
t537 = t725 + t280 / 0.2e1;
t535 = t715 - qJ(6) / 0.2e1;
t531 = t187 + t656;
t530 = t188 - t651;
t303 = t619 * t578;
t529 = qJD(3) * t225 + t303;
t387 = pkin(4) * t545;
t409 = qJD(4) + t578;
t528 = t138 * t724 + t139 * t721;
t521 = qJD(3) * t532;
t519 = t630 / 0.2e1 + t635 / 0.2e1;
t449 = t537 * t619;
t468 = (t658 / 0.2e1 + t648 / 0.2e1) * pkin(4);
t9 = t351 * t539 + t354 * t541 + t449 + t468;
t517 = t9 * qJD(1);
t442 = t117 * t720 + t118 * t764 + t123 * t721 + t124 * t724 + t165 * t704 + t166 * t705;
t6 = t442 - t527;
t516 = t6 * qJD(1) + t747;
t511 = t513 * qJD(3);
t441 = t125 * t764 + t325 * t729 + t133 * t724 - t134 * t324 / 0.2e1 + t353 * t703 + t356 * t706;
t11 = t441 + t527;
t509 = -t11 * qJD(1) + t747;
t47 = -t117 * t619 + t118 * t325;
t508 = qJD(1) * t47 + t748;
t48 = -t125 * t325 - t126 * t619;
t507 = qJD(1) * t48 + t748;
t222 = t765 + t615;
t234 = pkin(5) * t351 - qJ(6) * t354 + t419;
t489 = t166 * t717 + t234 * t720;
t451 = t705 * t753 - t489;
t481 = t634 / 0.2e1 - t631 / 0.2e1;
t454 = -t696 / 0.2e1 + t481;
t39 = -t451 + t454;
t506 = t39 * qJD(1) + t222 * qJD(2);
t113 = -t351 * t535 - t354 * t569 + t421;
t68 = -t325 * t569 - t535 * t619 + t387;
t505 = qJD(1) * t68 + qJD(3) * t113;
t504 = t409 * t439;
t503 = t420 / 0.2e1 - t573 / 0.2e1;
t480 = t325 * t709 - t619 * t710;
t162 = (t546 + t480) * pkin(4);
t479 = t354 * t709 + t434 * t719;
t192 = (t708 + t479) * pkin(4);
t498 = qJD(1) * t162 + qJD(3) * t192;
t497 = -qJD(1) * t619 - qJD(3) * t351;
t231 = t597 + t601;
t496 = t698 / 0.2e1 + t697 / 0.2e1;
t472 = t496 * t436;
t267 = t362 / 0.2e1 + t472;
t494 = pkin(3) * t596 - qJD(1) * t267;
t473 = t496 * t438;
t268 = -t363 / 0.2e1 - t473;
t493 = pkin(3) * qJD(3) * t436 - qJD(1) * t268;
t491 = t123 * t714 + t124 * t713;
t490 = t134 * t710 + t133 * t435 / 0.2e1;
t487 = t655 / 0.2e1 + t259 / 0.2e1;
t486 = -t654 / 0.2e1 - t646 / 0.2e1;
t484 = -t649 / 0.2e1 + t636 / 0.2e1;
t477 = t438 * t504;
t129 = t704 + t487;
t476 = qJD(1) * t129 + t351 * t597;
t343 = (t430 / 0.2e1 - t432 / 0.2e1) * t439;
t475 = -qJD(1) * t343 + t560;
t474 = qJD(3) * t224 + qJD(4) * t619 + t303;
t471 = qJD(1) * t417 * t436 + qJD(3) * t343;
t359 = t398 * t433;
t470 = qJD(1) * t359 + t521;
t467 = (t645 / 0.2e1 - t653 / 0.2e1) * pkin(4);
t237 = t644 + t699 + t700;
t445 = t117 * t725 + t118 * t726 + t677 / 0.2e1 + t166 * t237 / 0.2e1 + t169 * t234 / 0.2e1;
t1 = t550 - t445 + t491;
t456 = -t188 / 0.2e1 - t280 * t721 + t753 * t724 + t651 / 0.2e1;
t448 = t237 * t704 + t456;
t36 = t448 + t486;
t50 = t234 * t237;
t466 = -t1 * qJD(1) + t36 * qJD(2) + t50 * qJD(3);
t3 = t351 * t540 + t354 * t542 + t449 + t484;
t465 = t3 * qJD(1);
t37 = t410 / 0.2e1 - t537 * t324 + t467;
t65 = t419 * t699;
t452 = t125 * t726 - t280 * t729 - t677 / 0.2e1;
t7 = t550 + (t356 * t708 + t419 * t546 + t490) * pkin(4) + t452;
t464 = -t7 * qJD(1) - t37 * qJD(2) + t65 * qJD(3);
t444 = t166 * t719 + t169 * t717 + t234 * t765 + t237 * t720 - t280 * t706;
t455 = -t535 * t439 + t233 / 0.2e1 + t261 / 0.2e1;
t22 = t444 + t455;
t226 = t439 * t518 + t716;
t73 = t234 * t351 - t237 * t354;
t462 = -qJD(1) * t22 - qJD(2) * t226 + qJD(3) * t73;
t223 = t764 + t614;
t443 = t169 * t718 + t237 * t764 + t706 * t753 + t489;
t24 = t439 * t569 + t443 + t481;
t72 = t234 * t354 + t237 * t351;
t461 = qJD(1) * t24 - qJD(2) * t223 + qJD(3) * t72;
t447 = t503 - t733;
t27 = t447 + t731 + t752;
t460 = -qJD(1) * t27 + t730;
t33 = t447 - t732;
t459 = -qJD(1) * t33 + t730;
t275 = t548 - t358 / 0.2e1;
t54 = t437 * t535 + t519 + t538;
t458 = qJD(1) * t54 - qJD(3) * t275 - qJD(4) * t411;
t292 = t431 + t319;
t453 = qJD(1) * t292 + t325 * t597 + t592;
t450 = t503 + t733;
t446 = t139 * t719 - t280 * t765 - t187 / 0.2e1 + t138 * t717 + t753 * t720 - t656 / 0.2e1;
t414 = t575 / 0.2e1;
t407 = t438 * t578;
t406 = t436 * t577;
t405 = t436 * t578;
t350 = (t578 + qJD(4) / 0.2e1) * t439;
t340 = t343 * qJD(4);
t337 = -t623 / 0.2e1 + t712 + t438 / 0.2e1;
t336 = t708 + (t431 + t433) * t436 / 0.2e1;
t253 = t325 * t587;
t230 = -t321 / 0.2e1 - t478 * t437;
t229 = t764 + t615;
t228 = t765 + t614;
t227 = t351 * t704 + t435 * t545 + t716;
t220 = -t566 + t363 / 0.2e1 - t473;
t219 = -t382 - t362 / 0.2e1 + t472;
t196 = 0.2e1 * t548 + t523;
t191 = pkin(4) * t479 + t421;
t168 = qJD(3) * t346 + t354 * t601;
t161 = pkin(4) * t480 + t387;
t155 = t525 + t613;
t154 = t478 + t488;
t153 = -t525 + t612;
t132 = t704 - t487;
t114 = t351 * t715 + t354 * t713 + t421 + t644 / 0.2e1 + t700 / 0.2e1;
t80 = t676 / 0.2e1;
t69 = -t619 * t714 + t325 * t713 + t387 + t657 / 0.2e1 + t701 / 0.2e1;
t55 = t411 * t705 + t625 / 0.2e1 + t519 - t538;
t40 = t451 + t454;
t38 = -t410 / 0.2e1 + t467 + t456;
t35 = t448 - t486;
t34 = t450 + t732;
t28 = t450 - t731 + t752;
t25 = t413 * t704 + t443 - t454;
t23 = -t444 + t455;
t17 = -t681 / 0.2e1 - t684 / 0.2e1 + t528 + (t712 + t482) * pkin(4);
t14 = -t690 / 0.2e1 - t672 / 0.2e1 + t687 / 0.2e1 + t483 + t528;
t12 = -t441 + t527;
t10 = -t679 / 0.2e1 + t683 / 0.2e1 + t468 + t446;
t8 = pkin(4) * t490 + t356 * t421 + t387 * t419 - t452 + t80;
t5 = t442 + t527;
t4 = -t688 / 0.2e1 - t686 / 0.2e1 + t446 + t484;
t2 = t80 + t445 + t491;
t43 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t552, t397 * qJD(3), 0, 0, 0, qJ(2) * t575 + t598, -qJ(2) * t577 + qJD(2) * t439, -t432 * t552 - t433 * t553, -qJD(4) * t359 + t437 * t521, -qJD(3) * t361 - t437 * t556, qJD(3) * t360 - t437 * t554, t552, qJD(3) * t148 + qJD(4) * t236 + t438 * t598, -qJD(3) * t149 - qJD(4) * t235 - t436 * t598, qJD(3) * t21 + qJD(4) * t26 + t757, qJD(2) * t51 + qJD(3) * t29 + qJD(4) * t32 + qJD(5) * t48, -t351 * t598 + t31 * qJD(3) + t41 * qJD(4) + (-qJD(5) * t437 - t588) * t325, qJD(3) * t19 + qJD(4) * t20 - t423 * t619 + t757, t30 * qJD(3) + t42 * qJD(4) + t292 * qJD(6) + (qJD(2) * t354 - t590) * t437, qJD(2) * t49 + qJD(3) * t15 + qJD(4) * t18 + qJD(5) * t47 + qJD(6) * t60; 0, 0, 0, 0, qJD(1), t611, 0, 0, 0, 0, 0, t578, t576, 0, 0, 0, 0, 0, qJD(4) * t337 + t407, qJD(4) * t336 - t405, t749, t12 * qJD(3) + t17 * qJD(4) + t616 + t763, qJD(4) * t153 - t562, t749, qJD(4) * t154 + t561, t5 * qJD(3) + t14 * qJD(4) + t155 * qJD(6) + t617 + t763; 0, 0, 0, 0, 0, 0, -t551, t579, -t577, -t575, 0, -t440 * t577 + t564, -t440 * t575 - t565, -t340 + (-t432 * t576 - t560) * t437, t437 * t469 - 0.2e1 * t439 * t553, t559 - t599, t558 + t600, t350, t586 + (t436 * t522 - t568) * qJD(3) + t220 * qJD(4), -t585 + (-pkin(8) * t622 + (pkin(3) * t438 + t626) * t437) * qJD(3) + t219 * qJD(4), t668 + (-t133 * t354 - t134 * t351 + t530) * qJD(3) + t10 * qJD(4) + t735, t663 + t12 * qJD(2) + (-t133 * t280 + t134 * t753 + t353 * t419) * qJD(3) + t8 * qJD(4) + t34 * qJD(5), t661 + (t165 * t351 - t234 * t321 - t280 * t439) * qJD(3) + t25 * qJD(4) + t230 * qJD(5) + t132 * qJD(6), t670 + (-t123 * t351 + t124 * t354 + t530) * qJD(3) + t4 * qJD(4) + t735 - t224 * qJD(6), t662 + (-t165 * t354 + t234 * t324 + t439 * t753) * qJD(3) + t23 * qJD(4) - t225 * qJD(5) + t253, t675 + t5 * qJD(2) + (t123 * t753 + t124 * t280 + t165 * t234) * qJD(3) + t2 * qJD(4) + t28 * qJD(5) + t40 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, -t470, -t436 * t504, -t477, t414, qJD(2) * t337 + qJD(3) * t220 - qJD(4) * t305 + t602, qJD(2) * t336 + qJD(3) * t219 + qJD(4) * t304 - t603, t667 + t10 * qJD(3) + (-t645 + t653) * t695, t660 + t17 * qJD(2) + t8 * qJD(3) + t161 * qJD(5) + (-t138 * t435 + t139 * t434) * t695, qJD(2) * t153 + qJD(3) * t25 - qJD(4) * t138 + t694, t669 + t4 * qJD(3) + (-t646 - t654) * qJD(4) - t588, qJD(2) * t154 + qJD(3) * t23 + qJD(4) * t139 + t423 + t693, t671 + t14 * qJD(2) + t2 * qJD(3) + (t138 * t413 + t139 * t411) * qJD(4) + t69 * qJD(5) + t55 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t759, qJD(3) * t34 + qJD(4) * t161 + t507, qJD(3) * t230 - t325 * t578, t759, -t529, qJD(3) * t28 + qJD(4) * t69 + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t132 - t563, -t474, t453, qJD(2) * t155 + qJD(3) * t40 + qJD(4) * t55 + t692; 0, 0, 0, 0, -qJD(1), -t611, 0, 0, 0, 0, 0, -t578, -t576, 0, 0, 0, 0, 0, -qJD(4) * t335 - t407, -qJD(4) * t334 + t405, -t749, -qJD(3) * t11 - qJD(4) * t16 - t616 + t737, -qJD(4) * t151 + t562, -t749, -qJD(4) * t152 - t561, qJD(3) * t6 - qJD(4) * t13 - qJD(6) * t150 - t617 + t737; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, 0, 0, 0, t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t577, -t575, 0, 0, 0, 0, 0, -t438 * t577 - t556, t406 - t554, -t511 (t419 * t437 + t531) * qJD(3) + t38 * qJD(4) + t736 + t509, qJD(4) * t228 + t351 * t577, -t511, qJD(4) * t227 - t354 * t577 (t234 * t437 + t531) * qJD(3) + t35 * qJD(4) + t736 + t229 * qJD(6) + t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t555 - t559 - t580, t557 - t558 - t581, 0, -t674 + t38 * qJD(3) + (-t648 - t658) * t695, qJD(3) * t228 - t595 - t605, 0, qJD(3) * t227 - qJD(4) * t321 - t604, -t678 + t35 * qJD(3) + (-t636 + t649) * qJD(4) + t324 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t761, 0, 0, 0, t761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t229 + t595 - t606; 0, 0, 0, 0, 0, 0, t551, -t579, 0, 0, 0, -t564, t565, t432 * t551 - t340, -t477 * t756, t555 + t599, -t557 - t600, -t350, qJD(4) * t268 - t586, qJD(4) * t267 + t585, -qJD(4) * t9 - t668 + t735, qJD(2) * t11 - qJD(4) * t7 - qJD(5) * t33 - t663, qJD(4) * t24 - qJD(5) * t221 - qJD(6) * t129 - t661, -qJD(4) * t3 - qJD(6) * t225 - t670 + t735, -qJD(4) * t22 - qJD(5) * t224 + t253 - t662, -qJD(2) * t6 - qJD(4) * t1 - qJD(5) * t27 - qJD(6) * t39 - t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t37 - t509 - t739, -qJD(4) * t223, 0, -qJD(4) * t226, qJD(4) * t36 - qJD(6) * t222 - t516 - t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, t398 * qJD(4), 0, 0, 0, -pkin(3) * t593, -pkin(3) * t591, t760, qJD(4) * t65 + t738, qJD(4) * t72 - t351 * t587, t760, qJD(4) * t73 + qJD(6) * t346, qJD(4) * t50 - t234 * t587 + t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, -t469, t407 + t591, -t405 - t593, -t576 / 0.2e1, -pkin(8) * t591 - t493, pkin(8) * t593 - t494 (-t637 + t640) * t695 - t517, t191 * qJD(5) + (-t280 * t434 - t435 * t753) * t695 + t464, -qJD(4) * t753 + t461 (-t638 - t641) * qJD(4) - qJD(6) * t351 - t465, -qJD(4) * t280 + t462 (-t280 * t411 + t413 * t753) * qJD(4) + t114 * qJD(5) + t196 * qJD(6) + t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, qJD(4) * t191 + t459, -t584, t758, -t583, qJD(4) * t114 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, -t582 - t594, t168, qJD(4) * t196 - t234 * t597 - t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t470 (t436 * t576 - t596) * t437, t438 * t551 + t406, t414, qJD(2) * t335 - qJD(3) * t268 - t602, qJD(2) * t334 - qJD(3) * t267 + t603, qJD(3) * t9 - t667, qJD(2) * t16 + qJD(3) * t7 + qJD(5) * t162 - t660, qJD(2) * t151 - qJD(3) * t24 - t589 - t694, qJD(3) * t3 - t669, qJD(2) * t152 + qJD(3) * t22 + t423 - t590 - t693, qJD(2) * t13 + qJD(3) * t1 - qJD(5) * t68 - qJD(6) * t54 - t671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t580, t581, 0, qJD(3) * t37 + t674, qJD(3) * t223 + t605, 0, qJD(3) * t226 + t604, -qJD(3) * t36 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t475, t469, -t407, t405, t576 / 0.2e1, t493, t494, t517, qJD(5) * t192 - t464, -qJD(5) * t354 - t461, t465, -qJD(5) * t351 - t462, -qJD(5) * t113 + qJD(6) * t275 - t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t411 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t498, -t231, 0, t497, -t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, -t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t759, qJD(3) * t33 - qJD(4) * t162 - t507, t221 * qJD(3) + t325 * t409, -t759, t474, qJD(3) * t27 + qJD(4) * t68 - qJD(6) * t325 - t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t762, 0, 0, 0, t762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, -qJD(4) * t192 - t459, qJD(4) * t354 + t584, -t758, t583 + t594, qJD(4) * t113 - t460 - t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498, t231, 0, -t497, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t129 + t563, t529, -t453, qJD(2) * t150 + qJD(3) * t39 + qJD(4) * t54 + t589 - t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t222 + t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476, t582, -t168, -t275 * qJD(4) + (qJD(3) * t234 + qJD(5)) * t354 + t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
