% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP6_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:48:28
% EndTime: 2019-03-09 04:48:37
% DurationCPUTime: 3.08s
% Computational Cost: add. (2619->281), mult. (6094->482), div. (0->0), fcn. (5112->6), ass. (0->151)
t106 = cos(qJ(4));
t104 = sin(qJ(4));
t184 = sin(pkin(9));
t147 = t184 * t104;
t185 = cos(pkin(9));
t72 = -t106 * t185 + t147;
t107 = cos(qJ(3));
t170 = qJD(4) * t107;
t158 = t106 * t170;
t105 = sin(qJ(3));
t97 = t105 * qJD(3);
t68 = t104 * t97 - t158;
t64 = t72 * qJD(4);
t194 = t107 * t64;
t193 = t64 * t105;
t100 = t104 ^ 2;
t102 = t106 ^ 2;
t176 = t100 - t102;
t143 = qJD(4) * t176;
t101 = t105 ^ 2;
t103 = t107 ^ 2;
t142 = (t101 - t103) * qJD(3);
t145 = qJD(3) * t184;
t137 = t107 * t145;
t146 = qJD(3) * t185;
t139 = t107 * t146;
t149 = t185 * t104;
t73 = t106 * t184 + t149;
t63 = t73 * qJD(4);
t187 = t105 * t63;
t35 = t104 * t137 - t106 * t139 + t187;
t180 = t105 * t106;
t186 = t107 * t63;
t36 = -t104 * t105 * t145 + t146 * t180 + t186;
t58 = t72 * t105;
t59 = t72 * t107;
t192 = (-t105 * t59 + t107 * t58) * qJD(3) + t35 * t105 + t107 * t36;
t191 = 2 * qJD(2);
t190 = 2 * qJD(6);
t134 = pkin(3) * t107 + pkin(8) * t105;
t114 = qJD(3) * t134 + qJD(2);
t108 = -pkin(1) - pkin(7);
t98 = t107 * qJD(3);
t153 = t108 * t98;
t189 = t105 * pkin(3);
t133 = -pkin(8) * t107 + t189;
t125 = qJ(2) + t133;
t71 = t106 * t125;
t162 = qJD(4) * t71 + t104 * t114 + t106 * t153;
t167 = t107 * qJD(5);
t169 = qJD(4) * t108;
t12 = -qJ(5) * t158 + (-t167 + (qJ(5) * qJD(3) - t169) * t105) * t104 + t162;
t181 = t104 * t108;
t151 = pkin(4) - t181;
t188 = -qJ(5) - pkin(8);
t62 = t106 * t114;
t179 = t105 * t108;
t85 = t106 * t179;
t9 = -t106 * t167 + t62 + (-t85 + (-t107 * t188 - qJ(2) - t189) * t104) * qJD(4) + (qJ(5) * t180 + t107 * t151) * qJD(3);
t4 = t12 * t185 + t184 * t9;
t178 = t106 * t107;
t44 = -qJ(5) * t178 + t105 * t151 + t71;
t182 = t104 * t107;
t54 = t104 * t125 + t85;
t47 = -qJ(5) * t182 + t54;
t15 = t184 * t44 + t185 * t47;
t56 = t73 * t105;
t183 = qJD(3) * t56;
t177 = t107 * t108;
t175 = t100 + t102;
t173 = t101 + t103;
t172 = qJD(4) * t104;
t171 = qJD(4) * t106;
t168 = t105 * qJD(6);
t34 = t183 + t194;
t57 = t73 * t107;
t166 = -0.2e1 * t57 * t34;
t165 = 0.2e1 * t72 * t63;
t164 = -0.2e1 * pkin(3) * qJD(4);
t163 = qJ(6) * t98 + t4;
t96 = pkin(4) * t172;
t161 = t104 * t179;
t95 = -pkin(4) * t106 - pkin(3);
t160 = t104 * t170;
t159 = t104 * t169;
t156 = t104 * t171;
t89 = t108 * t97;
t155 = t106 * t97;
t154 = t105 * t98;
t150 = qJD(4) * t188;
t115 = -t104 * qJD(5) + t106 * t150;
t60 = t106 * qJD(5) + t104 * t150;
t37 = -t115 * t185 + t184 * t60;
t38 = t115 * t184 + t185 * t60;
t83 = t188 * t106;
t48 = -t149 * t188 - t184 * t83;
t49 = t147 * t188 - t185 * t83;
t152 = t37 * t48 + t38 * t49;
t74 = pkin(4) * t182 - t177;
t144 = t175 * t107;
t87 = 0.2e1 * t154;
t141 = t104 * t155;
t140 = t103 * t156;
t135 = t12 * t184 - t185 * t9;
t132 = -t34 * t59 + t36 * t57;
t131 = -t34 * t72 + t57 * t63;
t130 = t63 * t73 - t64 * t72;
t53 = t71 - t161;
t129 = t104 * t54 + t106 * t53;
t128 = t104 * t53 - t106 * t54;
t124 = -t105 * t34 + t57 * t98;
t123 = -t105 * t37 - t48 * t98;
t122 = t105 * t38 + t49 * t98;
t121 = t72 * t98 + t187;
t120 = t73 * t97 + t194;
t51 = -pkin(4) * t68 + t89;
t33 = -t104 * t139 - t106 * t137 + t193;
t119 = -t33 * t48 - t35 * t49 + t37 * t56 - t38 * t58;
t118 = t34 * t49 - t36 * t48 - t37 * t59 - t38 * t57;
t117 = t33 * t59 - t34 * t58 + t35 * t57 - t36 * t56;
t116 = -t33 * t73 + t35 * t72 - t56 * t64 + t58 * t63;
t14 = -t184 * t47 + t185 * t44;
t113 = 0.2e1 * t37 * t73 - 0.2e1 * t38 * t72 - 0.2e1 * t48 * t64 - 0.2e1 * t49 * t63;
t112 = t33 * t105 + t57 * t97 + (t34 - t183) * t107;
t111 = -0.2e1 * t33 * t56 + 0.2e1 * t35 * t58 - 0.2e1 * t154;
t110 = t34 * t73 + t36 * t72 + t57 * t64 + t59 * t63;
t30 = t105 * t159 - t162;
t31 = -qJD(4) * t54 - t104 * t153 + t62;
t109 = -qJD(4) * t129 - t31 * t104 - t30 * t106;
t99 = qJ(2) * t191;
t93 = -pkin(4) * t185 - pkin(5);
t91 = pkin(4) * t184 + qJ(6);
t67 = t104 * t98 + t105 * t171;
t66 = -t155 - t160;
t65 = t105 * t172 - t106 * t98;
t50 = t107 * t143 + t141;
t46 = -0.2e1 * t73 * t64;
t42 = pkin(5) * t72 - qJ(6) * t73 + t95;
t40 = t73 * t98 - t193;
t39 = t72 * t97 - t186;
t29 = pkin(5) * t57 + qJ(6) * t59 + t74;
t26 = pkin(5) * t63 + qJ(6) * t64 - qJD(6) * t73 + t96;
t20 = 0.2e1 * t59 * t36;
t16 = -0.2e1 * t105 * t36 - 0.2e1 * t59 * t98;
t13 = -pkin(5) * t105 - t14;
t11 = qJ(6) * t105 + t15;
t6 = -t36 * t73 + t59 * t64;
t5 = -pkin(5) * t34 + qJ(6) * t36 + qJD(6) * t59 + t51;
t2 = -pkin(5) * t98 + t135;
t1 = t163 + t168;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t99, -0.2e1 * t154, 0.2e1 * t142, 0, t87, 0, 0, 0.2e1 * qJ(2) * t98 + 0.2e1 * qJD(2) * t105, -0.2e1 * qJ(2) * t97 + 0.2e1 * qJD(2) * t107, 0, t99, -0.2e1 * t102 * t154 - 0.2e1 * t140, 0.2e1 * t103 * t143 + 0.4e1 * t107 * t141, -0.2e1 * t105 * t160 - 0.2e1 * t106 * t142, -0.2e1 * t100 * t154 + 0.2e1 * t140, 0.2e1 * t104 * t142 - 0.2e1 * t105 * t158, t87, -0.2e1 * t103 * t106 * t169 + 0.2e1 * t31 * t105 + 0.2e1 * (t53 + 0.2e1 * t161) * t98, 0.2e1 * t103 * t159 + 0.2e1 * t30 * t105 + 0.2e1 * (-t54 + 0.2e1 * t85) * t98, 0.2e1 * t129 * t97 + 0.2e1 * (qJD(4) * t128 + t104 * t30 - t106 * t31) * t107, -0.2e1 * t108 ^ 2 * t154 - 0.2e1 * t30 * t54 + 0.2e1 * t31 * t53, t20, 0.2e1 * t132, t16, t166, -0.2e1 * t124, t87, -0.2e1 * t105 * t135 + 0.2e1 * t14 * t98 - 0.2e1 * t34 * t74 + 0.2e1 * t51 * t57, -0.2e1 * t105 * t4 - 0.2e1 * t15 * t98 - 0.2e1 * t36 * t74 - 0.2e1 * t51 * t59, -0.2e1 * t135 * t59 + 0.2e1 * t14 * t36 + 0.2e1 * t15 * t34 - 0.2e1 * t4 * t57, -0.2e1 * t135 * t14 + 0.2e1 * t15 * t4 + 0.2e1 * t51 * t74, t20, t16, -0.2e1 * t132, t87, 0.2e1 * t124, t166, -0.2e1 * t105 * t2 - 0.2e1 * t13 * t98 - 0.2e1 * t29 * t34 + 0.2e1 * t5 * t57, -0.2e1 * t1 * t57 + 0.2e1 * t11 * t34 - 0.2e1 * t13 * t36 - 0.2e1 * t2 * t59, 0.2e1 * t1 * t105 + 0.2e1 * t11 * t98 + 0.2e1 * t29 * t36 + 0.2e1 * t5 * t59, 0.2e1 * t1 * t11 + 0.2e1 * t13 * t2 + 0.2e1 * t29 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173 * t171, t173 * t172, 0, -t128 * t98 + (t109 - 0.2e1 * t153) * t105, 0, 0, 0, 0, 0, 0, t112, t192, t117, -t107 * t51 + t135 * t56 + t14 * t33 - t15 * t35 - t4 * t58 + t74 * t97, 0, 0, 0, 0, 0, 0, t112, t117, -t192, -t1 * t58 - t107 * t5 - t11 * t35 - t13 * t33 + t2 * t56 + t29 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t175) * t87, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, 0, -t98, 0, -t89, -t153, 0, 0, -t50, -0.4e1 * t107 * t156 + t176 * t97, t67, t50, -t65, 0 (-t104 * t177 - t106 * t134) * qJD(4) + (t104 * t133 - t85) * qJD(3) (t104 * t134 - t106 * t177) * qJD(4) + (-pkin(8) * t178 + (pkin(3) * t106 + t181) * t105) * qJD(3), t109, -pkin(3) * t89 + pkin(8) * t109, t6, t110, t40, t131, -t121, 0, -t34 * t95 + t51 * t72 + t57 * t96 + t63 * t74 + t123, -t36 * t95 + t51 * t73 - t59 * t96 - t64 * t74 - t122, t135 * t73 + t14 * t64 - t15 * t63 - t4 * t72 + t118, t135 * t48 - t14 * t37 + t15 * t38 + t4 * t49 + t51 * t95 + t74 * t96, t6, t40, -t110, 0, t121, t131, t26 * t57 + t29 * t63 - t34 * t42 + t5 * t72 + t123, -t1 * t72 - t11 * t63 - t13 * t64 + t2 * t73 + t118, t26 * t59 + t29 * t64 + t36 * t42 - t5 * t73 + t122, t1 * t49 + t11 * t38 + t13 * t37 + t2 * t48 + t26 * t29 + t42 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, -t98, 0, 0, 0, 0, 0, 0, 0, 0, t66, t68, qJD(3) * t144 (pkin(8) * t144 - t189) * qJD(3), 0, 0, 0, 0, 0, 0, t39, t120, t116, -pkin(4) * t160 + t95 * t97 + t119, 0, 0, 0, 0, 0, 0, t39, t116, -t120, -t107 * t26 + t42 * t97 + t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t156, -0.2e1 * t143, 0, -0.2e1 * t156, 0, 0, t104 * t164, t106 * t164, 0, 0, t46, -0.2e1 * t130, 0, t165, 0, 0, 0.2e1 * t63 * t95 + 0.2e1 * t72 * t96, -0.2e1 * t64 * t95 + 0.2e1 * t73 * t96, t113, 0.2e1 * t95 * t96 + 0.2e1 * t152, t46, 0, 0.2e1 * t130, 0, 0, t165, 0.2e1 * t26 * t72 + 0.2e1 * t42 * t63, t113, -0.2e1 * t26 * t73 + 0.2e1 * t42 * t64, 0.2e1 * t26 * t42 + 0.2e1 * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, t68, t98, t31, t30, 0, 0, 0, 0, -t36, 0, t34, t98, pkin(4) * t139 - t135, -pkin(4) * t137 - t4 (t184 * t34 + t185 * t36) * pkin(4) (-t135 * t185 + t184 * t4) * pkin(4), 0, -t36, 0, t98, -t34, 0 (pkin(5) - t93) * t98 - t135, -qJD(6) * t57 + t34 * t91 - t36 * t93, t91 * t98 + t163 + 0.2e1 * t168, qJD(6) * t11 + t1 * t91 + t2 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, t65, 0, 0, 0, 0, 0, 0, 0, 0, t33, t35, 0 (-t184 * t35 + t185 * t33) * pkin(4), 0, 0, 0, 0, 0, 0, t33, 0, -t35, -qJD(6) * t58 - t33 * t93 - t35 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, -t172, 0, -pkin(8) * t171, pkin(8) * t172, 0, 0, 0, 0, -t64, 0, -t63, 0, -t37, -t38 (-t184 * t63 + t185 * t64) * pkin(4) (t184 * t38 - t185 * t37) * pkin(4), 0, -t64, 0, 0, t63, 0, -t37, -qJD(6) * t72 - t63 * t91 - t64 * t93, t38, qJD(6) * t49 + t37 * t93 + t38 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t91 * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t34, -t36, 0, t51, 0, 0, 0, 0, 0, 0, -t34, 0, t36, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, -t64, 0, t96, 0, 0, 0, 0, 0, 0, t63, 0, t64, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, -t36, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
