% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR2_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:08:59
% EndTime: 2019-03-08 23:09:10
% DurationCPUTime: 4.34s
% Computational Cost: add. (5377->326), mult. (13148->558), div. (0->0), fcn. (13080->12), ass. (0->188)
t138 = sin(pkin(12));
t135 = t138 ^ 2;
t140 = cos(pkin(12));
t137 = t140 ^ 2;
t215 = t135 + t137;
t250 = t215 * qJD(5);
t251 = 0.2e1 * t250;
t243 = cos(qJ(4));
t191 = t243 * qJD(4);
t182 = pkin(3) * t191;
t120 = t182 + qJD(5);
t249 = t215 * t120;
t145 = cos(qJ(3));
t204 = t243 * t145;
t142 = sin(qJ(4));
t143 = sin(qJ(3));
t219 = t142 * t143;
t110 = -t204 + t219;
t218 = t142 * t145;
t111 = t243 * t143 + t218;
t178 = qJD(3) * t204;
t246 = qJD(3) + qJD(4);
t84 = -t145 * t191 + t219 * t246 - t178;
t85 = t246 * t111;
t174 = t110 * t84 - t111 * t85;
t248 = 0.2e1 * t174;
t139 = sin(pkin(6));
t144 = sin(qJ(2));
t223 = t139 * t144;
t227 = cos(pkin(6));
t167 = t143 * t223 - t227 * t145;
t163 = t167 * qJD(3);
t146 = cos(qJ(2));
t213 = qJD(2) * t146;
t197 = t139 * t213;
t156 = t145 * t197 - t163;
t141 = sin(qJ(6));
t242 = cos(qJ(6));
t202 = t242 * t140;
t247 = -t141 * t138 + t202;
t102 = t227 * t143 + t145 * t223;
t157 = t102 * qJD(3) + t143 * t197;
t210 = t143 * qJD(3);
t245 = -t102 * t210 + t157 * t143 + (t156 + t163) * t145;
t244 = -pkin(9) - pkin(8);
t241 = t140 * pkin(5);
t240 = t142 * pkin(3);
t164 = t142 * t167;
t36 = -qJD(4) * t164 + t102 * t191 + t142 * t156 + t243 * t157;
t161 = t243 * t167;
t68 = t142 * t102 + t161;
t23 = t68 * t36;
t118 = t244 * t143;
t113 = qJD(3) * t118;
t119 = t244 * t145;
t92 = t142 * t118 - t243 * t119;
t55 = t92 * qJD(4) + t142 * t113 - t244 * t178;
t91 = -t243 * t118 - t142 * t119;
t239 = t91 * t55;
t126 = qJ(5) + t240;
t238 = -pkin(10) - t126;
t237 = pkin(10) + qJ(5);
t203 = t242 * t138;
t220 = t141 * t140;
t109 = t203 + t220;
t101 = t109 * qJD(6);
t232 = t138 * t84;
t38 = -pkin(5) * t232 + t55;
t224 = t138 * t111;
t67 = pkin(5) * t224 + t91;
t236 = t67 * t101 - t247 * t38;
t194 = qJD(6) * t242;
t211 = qJD(6) * t141;
t200 = t138 * t211;
t100 = -t140 * t194 + t200;
t235 = -t67 * t100 + t38 * t109;
t130 = -t145 * pkin(3) - pkin(2);
t171 = t110 * pkin(4) + t130;
t166 = -t111 * qJ(5) + t171;
t48 = t138 * t166 + t140 * t92;
t206 = t243 * pkin(3);
t129 = -t206 - pkin(4);
t116 = t129 - t241;
t212 = qJD(4) * t142;
t131 = pkin(3) * t212;
t234 = t116 * t101 - t131 * t247;
t233 = -t116 * t100 + t109 * t131;
t231 = t138 * t92;
t230 = t140 * t84;
t229 = t36 * t140;
t228 = t55 * t140;
t127 = -pkin(4) - t241;
t226 = t127 * t100;
t225 = t127 * t101;
t222 = t139 * t146;
t214 = qJD(2) * t144;
t209 = t145 * qJD(3);
t208 = -0.2e1 * pkin(2) * qJD(3);
t66 = 0.2e1 * t110 * t85;
t207 = -0.2e1 * t111 * t84;
t205 = pkin(3) * t210;
t75 = t138 * t230;
t201 = t146 * t210;
t198 = t139 * t214;
t196 = t143 * t209;
t154 = t110 * pkin(5) - t231 + (-t237 * t111 + t171) * t140;
t149 = t242 * t154;
t39 = -pkin(10) * t224 + t48;
t14 = -t141 * t39 + t149;
t150 = t141 * t154;
t15 = t242 * t39 + t150;
t162 = t243 * t113 + t118 * t191 + t119 * t212;
t181 = t244 * t218;
t155 = qJD(3) * t181 + t162;
t165 = t85 * pkin(4) - t111 * qJD(5) + t205;
t159 = t84 * qJ(5) + t165;
t21 = -t138 * t155 + t140 * t159;
t147 = t85 * pkin(5) + pkin(10) * t230 + t21;
t151 = t140 * t155;
t148 = t151 + (t237 * t84 + t165) * t138;
t4 = -qJD(6) * t149 - t141 * t147 - t242 * t148 + t39 * t211;
t5 = -qJD(6) * t150 - t141 * t148 + t242 * t147 - t39 * t194;
t195 = t14 * t100 - t15 * t101 - t5 * t109 - t247 * t4;
t193 = t237 * t138;
t192 = t238 * t138;
t190 = t242 * qJD(5);
t134 = t140 * pkin(10);
t104 = t140 * t126 + t134;
t169 = t242 * t192;
t44 = -t120 * t202 - qJD(6) * t169 + (qJD(6) * t104 + t120 * t138) * t141;
t45 = -t104 * t194 - t120 * t220 + (-t242 * t120 - t238 * t211) * t138;
t73 = -t141 * t104 + t169;
t74 = t242 * t104 + t141 * t192;
t189 = t73 * t100 - t74 * t101 - t45 * t109 - t247 * t44;
t117 = t140 * qJ(5) + t134;
t170 = t242 * t193;
t61 = qJD(6) * t170 - t140 * t190 + (t138 * qJD(5) + qJD(6) * t117) * t141;
t62 = -t117 * t194 - qJD(5) * t220 + (t237 * t211 - t190) * t138;
t87 = -t141 * t117 - t170;
t88 = t242 * t117 - t141 * t193;
t188 = t87 * t100 - t88 * t101 - t62 * t109 - t247 * t61;
t185 = t91 * t131;
t184 = t138 * t131;
t183 = t140 * t131;
t180 = t139 ^ 2 * t144 * t213;
t177 = t36 * t91 + t68 * t55;
t176 = t111 * t36 - t68 * t84;
t175 = t55 * t111 - t91 * t84;
t22 = t138 * t159 + t151;
t9 = -t21 * t138 + t22 * t140;
t35 = qJD(4) * t161 + t102 * t212 + t142 * t157 - t243 * t156;
t26 = t138 * t35 + t140 * t198;
t27 = t138 * t198 - t140 * t35;
t10 = -t26 * t138 + t27 * t140;
t47 = t140 * t166 - t231;
t173 = -t138 * t47 + t140 * t48;
t69 = t243 * t102 - t164;
t59 = -t138 * t69 - t140 * t222;
t60 = -t138 * t222 + t140 * t69;
t172 = -t138 * t59 + t140 * t60;
t31 = t141 * t59 + t242 * t60;
t168 = pkin(4) * t84 - qJ(5) * t85 - qJD(5) * t110;
t158 = -t110 * t120 + t111 * t131 - t126 * t85 - t129 * t84;
t83 = -0.2e1 * t109 * t100;
t82 = -0.2e1 * t247 * t101;
t78 = t140 * t85;
t77 = t138 * t85;
t71 = t247 * t111;
t70 = t109 * t111;
t63 = t68 * t131;
t50 = t55 * t138;
t49 = -0.2e1 * t100 * t247 - 0.2e1 * t101 * t109;
t46 = (t135 - t137) * t84;
t43 = -t101 * t110 + t247 * t85;
t42 = -t100 * t110 + t109 * t85;
t32 = t36 * t138;
t30 = -t141 * t60 + t242 * t59;
t29 = -t84 * t203 - t111 * t200 + (t111 * t194 - t141 * t84) * t140;
t28 = t111 * t101 + t247 * t84;
t20 = -t100 * t68 + t109 * t36;
t19 = t101 * t68 - t247 * t36;
t18 = t101 * t70 - t247 * t29;
t17 = -t100 * t71 - t109 * t28;
t8 = -t31 * qJD(6) - t141 * t27 + t242 * t26;
t7 = -t141 * t26 - t59 * t194 + t60 * t211 - t242 * t27;
t6 = t100 * t70 - t101 * t71 - t109 * t29 - t247 * t28;
t1 = t100 * t30 - t101 * t31 - t109 * t8 - t247 * t7;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t102 * t156 + 0.2e1 * t167 * t157 - 0.2e1 * t180, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t69 * t35 - 0.2e1 * t180 + 0.2e1 * t23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t26 * t59 + 0.2e1 * t27 * t60 + 0.2e1 * t23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t30 * t8 - 0.2e1 * t31 * t7 + 0.2e1 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, -t197, 0, 0, 0, 0, 0, 0, 0, 0 (-t145 * t214 - t201) * t139 (t143 * t214 - t146 * t209) * t139, t245, -pkin(2) * t198 + pkin(8) * t245, 0, 0, 0, 0, 0, 0 (t110 * t214 - t146 * t85) * t139 (t111 * t214 + t146 * t84) * t139, t110 * t35 - t69 * t85 + t176, -t139 * pkin(3) * t201 + t130 * t198 + t155 * t69 - t35 * t92 + t177, 0, 0, 0, 0, 0, 0, t26 * t110 + t176 * t138 + t59 * t85, -t27 * t110 + t176 * t140 - t60 * t85 (t138 * t60 + t140 * t59) * t84 + (-t138 * t27 - t140 * t26) * t111, t21 * t59 + t22 * t60 + t26 * t47 + t27 * t48 + t177, 0, 0, 0, 0, 0, 0, t110 * t8 + t29 * t68 + t30 * t85 + t36 * t70, t110 * t7 - t28 * t68 - t31 * t85 + t36 * t71, t28 * t30 - t29 * t31 + t7 * t70 - t71 * t8, t14 * t8 - t15 * t7 + t30 * t5 - t31 * t4 + t36 * t67 + t38 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t196, 0.2e1 * (-t143 ^ 2 + t145 ^ 2) * qJD(3), 0, -0.2e1 * t196, 0, 0, t143 * t208, t145 * t208, 0, 0, t207, t248, 0, t66, 0, 0, 0.2e1 * t110 * t205 + 0.2e1 * t130 * t85, 0.2e1 * t111 * t205 - 0.2e1 * t130 * t84, -0.2e1 * t110 * t155 - 0.2e1 * t92 * t85 + 0.2e1 * t175, 0.2e1 * t92 * t162 + 0.2e1 * t239 + 0.2e1 * (t130 * t143 * pkin(3) + t92 * t181) * qJD(3), t137 * t207, 0.4e1 * t111 * t75, -0.2e1 * t174 * t140, t135 * t207, t138 * t248, t66, 0.2e1 * t21 * t110 + 0.2e1 * t175 * t138 + 0.2e1 * t47 * t85, -0.2e1 * t22 * t110 + 0.2e1 * t175 * t140 - 0.2e1 * t48 * t85, 0.2e1 * (t138 * t48 + t140 * t47) * t84 + 0.2e1 * (-t138 * t22 - t140 * t21) * t111, 0.2e1 * t21 * t47 + 0.2e1 * t22 * t48 + 0.2e1 * t239, -0.2e1 * t71 * t28, 0.2e1 * t28 * t70 - 0.2e1 * t29 * t71, -0.2e1 * t110 * t28 + 0.2e1 * t71 * t85, 0.2e1 * t70 * t29, -0.2e1 * t110 * t29 - 0.2e1 * t70 * t85, t66, 0.2e1 * t110 * t5 + 0.2e1 * t14 * t85 + 0.2e1 * t29 * t67 + 0.2e1 * t38 * t70, 0.2e1 * t110 * t4 - 0.2e1 * t15 * t85 - 0.2e1 * t28 * t67 + 0.2e1 * t38 * t71, 0.2e1 * t14 * t28 - 0.2e1 * t15 * t29 + 0.2e1 * t4 * t70 - 0.2e1 * t5 * t71, 0.2e1 * t14 * t5 - 0.2e1 * t15 * t4 + 0.2e1 * t38 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t156, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t35, 0 (-t243 * t36 - t142 * t35 + (t142 * t68 + t243 * t69) * qJD(4)) * pkin(3), 0, 0, 0, 0, 0, 0, -t229, t32, t10, t10 * t126 + t172 * t120 + t36 * t129 + t63, 0, 0, 0, 0, 0, 0, t19, t20, t1, t116 * t36 + t30 * t45 - t31 * t44 - t7 * t74 + t73 * t8 + t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, 0, -t210, 0, -pkin(8) * t209, pkin(8) * t210, 0, 0, 0, 0, -t84, 0, -t85, 0, -t55, -t155 (t243 * t84 - t142 * t85 + (-t243 * t110 + t111 * t142) * qJD(4)) * pkin(3), t155 * t240 + t92 * t182 - t55 * t206 + t185, -t75, t46, t77, t75, t78, 0, t138 * t158 - t228, t140 * t158 + t50, t9, t173 * t120 + t9 * t126 + t55 * t129 + t185, t17, t6, t42, t18, t43, 0, t45 * t110 + t116 * t29 + t70 * t131 + t73 * t85 + t236, t44 * t110 - t116 * t28 + t71 * t131 - t74 * t85 + t235, t28 * t73 - t29 * t74 + t44 * t70 - t45 * t71 + t195, t38 * t116 + t131 * t67 + t14 * t45 - t15 * t44 - t4 * t74 + t5 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t131, -0.2e1 * t182, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t183, 0.2e1 * t184, 0.2e1 * t249, 0.2e1 * t126 * t249 + 0.2e1 * t129 * t131, t83, t49, 0, t82, 0, 0, 0.2e1 * t234, 0.2e1 * t233, 0.2e1 * t189, 0.2e1 * t116 * t131 - 0.2e1 * t74 * t44 + 0.2e1 * t73 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t35, 0, 0, 0, 0, 0, 0, 0, 0, -t229, t32, t10, -t36 * pkin(4) + t10 * qJ(5) + t172 * qJD(5), 0, 0, 0, 0, 0, 0, t19, t20, t1, t127 * t36 + t30 * t62 - t31 * t61 - t7 * t88 + t8 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, 0, -t85, 0, -t55, -t155, 0, 0, -t75, t46, t77, t75, t78, 0, t138 * t168 - t228, t140 * t168 + t50, t9, -t55 * pkin(4) + t9 * qJ(5) + t173 * qJD(5), t17, t6, t42, t18, t43, 0, t110 * t62 + t127 * t29 + t85 * t87 + t236, t110 * t61 - t127 * t28 - t85 * t88 + t235, t28 * t87 - t29 * t88 + t61 * t70 - t62 * t71 + t195, t127 * t38 + t14 * t62 - t15 * t61 - t4 * t88 + t5 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131, -t182, 0, 0, 0, 0, 0, 0, 0, 0, -t183, t184, t250 + t249, -pkin(4) * t131 + qJ(5) * t249 + t126 * t250, t83, t49, 0, t82, 0, 0, t225 + t234, -t226 + t233, t188 + t189, t127 * t131 - t44 * t88 + t45 * t87 - t74 * t61 + t73 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, qJ(5) * t251, t83, t49, 0, t82, 0, 0, 0.2e1 * t225, -0.2e1 * t226, 0.2e1 * t188, -0.2e1 * t61 * t88 + 0.2e1 * t62 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t232, -t230, 0, t55, 0, 0, 0, 0, 0, 0, t29, -t28, 0, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, 0, 0, 0, 0, 0, 0, t101, -t100, 0, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, -t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, t7, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t28, 0, -t29, t85, t5, t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, 0, -t101, 0, t45, t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, 0, -t101, 0, t62, t61, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
