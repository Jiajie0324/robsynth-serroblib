% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:09:06
% EndTime: 2019-03-08 23:09:54
% DurationCPUTime: 38.83s
% Computational Cost: add. (29352->953), mult. (65069->1275), div. (0->0), fcn. (76444->12), ass. (0->720)
t1054 = qJD(3) + qJD(4);
t1206 = cos(qJ(4));
t1204 = sin(qJ(2));
t810 = sin(pkin(6));
t1043 = t810 * t1204;
t1191 = cos(pkin(6));
t814 = sin(qJ(3));
t815 = cos(qJ(3));
t744 = t1043 * t815 + t1191 * t814;
t724 = t1206 * t744;
t813 = sin(qJ(4));
t861 = t1043 * t814 - t1191 * t815;
t845 = t813 * t861;
t1288 = -t845 + t724;
t1202 = t1288 * pkin(4);
t809 = sin(pkin(12));
t805 = t809 ^ 2;
t811 = cos(pkin(12));
t806 = t811 ^ 2;
t1343 = t806 / 0.2e1 + t805 / 0.2e1;
t986 = t1206 * t861 + t744 * t813;
t1379 = t1343 * t986;
t1380 = -t1202 / 0.2e1 - t1379 * qJ(5);
t1205 = cos(qJ(6));
t1032 = t1205 * t809;
t812 = sin(qJ(6));
t1109 = t812 * t811;
t762 = t1032 + t1109;
t1040 = t1206 * t814;
t1107 = t813 * t815;
t773 = t1040 + t1107;
t870 = t762 * t773;
t1241 = -t870 / 0.2e1;
t1328 = t986 * t762;
t1250 = -t1328 / 0.2e1;
t816 = cos(qJ(2));
t1120 = t810 * t816;
t1122 = t809 * t1288;
t495 = -t1120 * t811 - t1122;
t1118 = t811 * t1288;
t496 = -t1120 * t809 + t1118;
t282 = t1205 * t496 + t495 * t812;
t1251 = t282 / 0.2e1;
t281 = -t1205 * t495 + t496 * t812;
t1252 = t281 / 0.2e1;
t1031 = t1205 * t811;
t1110 = t812 * t809;
t890 = t1031 - t1110;
t1329 = t890 * t986;
t1039 = t1206 * t815;
t1108 = t813 * t814;
t891 = t1039 - t1108;
t607 = t762 * t891;
t729 = t891 * t1110;
t611 = t1031 * t891 - t729;
t730 = t773 * t1110;
t612 = t1031 * t773 - t730;
t1378 = -t1241 * t1329 + t1250 * t612 - t1251 * t607 + t1252 * t611;
t1222 = -t890 / 0.2e1;
t684 = t773 * t1120;
t1013 = t684 * t1222;
t1219 = -t891 / 0.2e1;
t1300 = t870 / 0.2e1;
t1330 = t986 / 0.2e1;
t1331 = -t773 / 0.2e1;
t1371 = -t1219 * t1328 - t1288 * t1300 - t1330 * t607 - t1331 * t281;
t1358 = t1013 + t1371;
t1377 = qJD(1) * t1358;
t1221 = t762 / 0.2e1;
t1012 = t684 * t1221;
t1220 = t891 / 0.2e1;
t1238 = t612 / 0.2e1;
t1370 = t1220 * t1329 - t1238 * t1288 - t1330 * t611 - t1331 * t282;
t1359 = t1012 + t1370;
t1376 = qJD(1) * t1359;
t1223 = t890 / 0.2e1;
t1332 = -t762 / 0.2e1;
t685 = t891 * t1120;
t617 = t1043 * t811 - t685 * t809;
t1034 = t1205 * t617;
t619 = t1043 * t809 + t685 * t811;
t1111 = t812 * t619;
t348 = t1034 - t1111;
t1033 = t1205 * t619;
t1112 = t812 * t617;
t349 = t1033 + t1112;
t1265 = t1223 * t349 + t1332 * t348;
t1360 = -t1265 + t1378;
t1375 = qJD(1) * t1360;
t1374 = qJD(2) * t1358;
t1373 = qJD(2) * t1359;
t1372 = qJD(2) * t1360;
t1264 = t1222 * t282 + t1332 * t281;
t703 = t724 / 0.2e1;
t1326 = t703 - t845 / 0.2e1;
t1294 = -t1264 + t1326;
t1159 = t1288 * t986;
t1333 = -t1328 * t281 - t1329 * t282 + t1159;
t1354 = t1333 * qJD(1);
t1369 = qJD(5) * t1294 + t1354;
t1296 = t1264 + t1326;
t1368 = -qJD(5) * t1296 - t1354;
t475 = t1329 / 0.2e1;
t963 = t1031 / 0.2e1;
t873 = t963 - t1110 / 0.2e1;
t858 = t873 * t986;
t1352 = t475 + t858;
t1362 = t1012 - t1370;
t1367 = qJD(2) * t1362 + qJD(6) * t1352;
t476 = t1328 / 0.2e1;
t876 = t1109 / 0.2e1 + t1032 / 0.2e1;
t859 = t876 * t986;
t1351 = t476 + t859;
t1361 = t1013 - t1371;
t1366 = qJD(2) * t1361 + qJD(6) * t1351;
t1357 = t1265 + t1378;
t1365 = qJD(2) * t1357 + t1054 * (-t1328 * t762 - t1329 * t890);
t1243 = t1288 / 0.2e1;
t1254 = -pkin(9) - pkin(8);
t787 = t1254 * t815;
t985 = -t1040 * t1254 - t787 * t813;
t1310 = t1243 * t985;
t1249 = -t1329 / 0.2e1;
t775 = t1206 * t787;
t977 = t1254 * t1108;
t1289 = -t775 + t977;
t634 = t809 * t891;
t740 = pkin(5) * t634;
t1317 = t740 + t1289;
t1129 = t773 * t809;
t1321 = t1289 * t811;
t1131 = t773 * qJ(5);
t1199 = t891 * pkin(4);
t802 = -pkin(3) * t815 - pkin(2);
t926 = t802 - t1199;
t867 = t926 - t1131;
t406 = t809 * t867 + t1321;
t337 = -pkin(10) * t1129 + t406;
t1196 = -pkin(10) - qJ(5);
t1322 = t1289 * t809;
t828 = -t891 * pkin(5) - t1322 + (t1196 * t773 + t926) * t811;
t186 = -t1205 * t828 + t337 * t812;
t187 = t1205 * t337 + t812 * t828;
t576 = pkin(5) * t1129 + t985;
t1353 = t1243 * t576 + t1249 * t187 + t1250 * t186 + t1317 * t1330;
t1233 = -t1321 / 0.2e1;
t756 = -t775 / 0.2e1;
t1324 = t756 + t977 / 0.2e1;
t1003 = t1120 / 0.2e1;
t1101 = t1003 * t773;
t1350 = t1317 * t576;
t1349 = t1317 * t762;
t1348 = t1317 * t890;
t1078 = qJD(3) * t986;
t874 = -t1039 / 0.2e1 + t1108 / 0.2e1;
t548 = -t1003 * t891 + t1120 * t874;
t1344 = qJD(2) * t548 + qJD(4) * t986 + t1078;
t1283 = t1054 * t762;
t297 = -t1221 * t870 + t1223 * t612;
t1342 = qJD(2) * t297 + t1283 * t890;
t405 = t811 * t867 - t1322;
t1341 = (t405 + t1322) * t773;
t1340 = (-t406 + t1321) * t773;
t1339 = t1317 * t612 - t187 * t773 + t576 * t611;
t1338 = t1317 * t870 - t186 * t773 + t576 * t607;
t1201 = t1289 * pkin(4);
t658 = t811 * t985;
t1138 = t985 * t809;
t1325 = t740 / 0.2e1 + t1324;
t1141 = t1289 * t985;
t1320 = t297 * qJD(6);
t1279 = t1054 * t811;
t953 = t809 * t1279;
t1281 = t1054 * t773;
t1318 = t891 * t1281;
t1287 = qJD(2) * t870;
t1316 = -t1054 * t890 + t1287;
t1315 = qJD(1) * t1296;
t1208 = t811 / 0.2e1;
t904 = t406 * t1208 - t405 * t809 / 0.2e1;
t1292 = -t904 + t1324;
t1314 = qJD(5) * t1292;
t1169 = t496 * t811;
t1170 = t495 * t809;
t1266 = t1169 / 0.2e1 - t1170 / 0.2e1;
t1297 = -t1266 + t1326;
t1312 = qJD(5) * t1297;
t1290 = t904 + t1324;
t1308 = t1290 * qJD(5);
t1295 = t1266 + t1326;
t1306 = t1295 * qJD(5);
t359 = t730 / 0.2e1 + (t1110 / 0.2e1 - t1031) * t773;
t1305 = -qJD(2) * t359 + t1283;
t547 = (t1220 + t874) * t1120;
t1060 = t547 * qJD(1);
t1304 = t1054 * t985 - t1060;
t1087 = qJD(2) * t612;
t1303 = t1054 * t297 - t1087 * t870;
t1302 = qJD(1) * t1297 + qJD(2) * t1292;
t1301 = t870 ^ 2;
t1198 = t811 * pkin(5);
t799 = -pkin(4) - t1198;
t1214 = t799 / 0.2e1;
t1050 = t1206 * pkin(3);
t801 = -t1050 - pkin(4);
t784 = t801 - t1198;
t1216 = t784 / 0.2e1;
t995 = t1214 + t1216;
t1299 = t762 * t995;
t1298 = 0.2e1 * t1288;
t1263 = t1222 * t187 + t1332 * t186;
t1293 = t1263 + t1325;
t1291 = -t1263 + t1325;
t790 = t806 + t805;
t1286 = qJD(6) * t870;
t857 = t1332 + t876;
t415 = t857 * t891;
t1285 = t1054 * t415;
t416 = (t1221 + t876) * t891;
t1284 = t1054 * t416;
t1282 = t1054 * t891;
t1280 = t1054 * t790;
t1084 = qJD(2) * t891;
t1278 = t870 * t1084;
t1041 = t1206 * t891;
t1127 = t773 * t813;
t1197 = t813 * pkin(3);
t798 = qJ(5) + t1197;
t1130 = t773 * t798;
t1132 = t891 * t801;
t1277 = -t1199 / 0.2e1 - t1130 / 0.2e1 + t1132 / 0.2e1 + (t1041 / 0.2e1 + t1127 / 0.2e1) * pkin(3);
t764 = t773 ^ 2;
t1053 = -t891 ^ 2 + t764;
t1082 = qJD(2) * t802;
t1273 = t773 * t1082;
t1203 = pkin(3) * t814;
t628 = -t1203 * t891 + t773 * t802;
t1272 = qJD(2) * t628;
t1210 = t809 / 0.2e1;
t901 = t1208 * t495 + t1210 * t496;
t871 = t901 * t891;
t1154 = t617 * t809;
t1209 = -t811 / 0.2e1;
t896 = t619 * t1209 + t1154 / 0.2e1;
t156 = -t871 + t896;
t1067 = t156 * qJD(1);
t655 = pkin(4) * t773 - qJ(5) * t891;
t441 = t655 * t811 + t1138;
t442 = t655 * t809 - t658;
t932 = -t405 * t811 - t406 * t809;
t889 = t932 * t891;
t92 = (t441 * t811 + t442 * t809) * t773 - t889;
t1271 = qJD(2) * t92 - t1067;
t637 = t655 + t1203;
t421 = t637 * t811 + t1138;
t422 = t637 * t809 - t658;
t83 = (t421 * t811 + t422 * t809) * t773 - t889;
t1270 = qJD(2) * t83 - t1067;
t215 = -t762 * t612 - t870 * t890;
t279 = -t612 ^ 2 + t1301;
t1258 = qJD(2) * t279 + t1054 * t215;
t606 = t890 * t773;
t170 = (t1238 + t606 / 0.2e1) * t762 - 0.2e1 * t1300 * t890;
t220 = t606 * t612 + t1301;
t1257 = qJD(2) * t220 + t1054 * t170;
t1256 = t762 ^ 2;
t752 = t890 ^ 2;
t591 = t752 - t1256;
t138 = qJD(2) * t215 + t1054 * t591;
t663 = t752 + t1256;
t122 = qJD(2) * t170 + t1054 * t663;
t1253 = -t281 / 0.2e1;
t1248 = t495 / 0.2e1;
t1247 = -t496 / 0.2e1;
t1246 = t496 / 0.2e1;
t1117 = t811 * t798;
t804 = t811 * pkin(10);
t749 = t804 + t1117;
t991 = (-pkin(10) - t798) * t809;
t618 = -t1205 * t991 + t749 * t812;
t1237 = -t618 / 0.2e1;
t1236 = t618 / 0.2e1;
t620 = t1205 * t749 + t812 * t991;
t1235 = -t620 / 0.2e1;
t1234 = t620 / 0.2e1;
t1119 = t811 * qJ(5);
t785 = t804 + t1119;
t992 = t1196 * t809;
t670 = -t1205 * t992 + t785 * t812;
t1232 = -t670 / 0.2e1;
t1231 = t670 / 0.2e1;
t671 = t1205 * t785 + t812 * t992;
t1230 = -t671 / 0.2e1;
t1229 = t671 / 0.2e1;
t1227 = t1289 / 0.2e1;
t969 = t1206 * t1205;
t1042 = t812 * t1206;
t974 = t811 * t1042;
t708 = (-t809 * t969 - t974) * pkin(3);
t1226 = -t708 / 0.2e1;
t975 = t809 * t1042;
t709 = (t811 * t969 - t975) * pkin(3);
t1225 = t709 / 0.2e1;
t704 = -t724 / 0.2e1;
t1224 = -t729 / 0.2e1;
t1218 = t773 / 0.2e1;
t757 = t775 / 0.2e1;
t1217 = -t784 / 0.2e1;
t1215 = -t799 / 0.2e1;
t1213 = t801 / 0.2e1;
t1207 = t813 / 0.2e1;
t1200 = t684 * pkin(4);
t1195 = pkin(3) * qJD(4);
t1194 = qJD(3) * pkin(3);
t962 = pkin(5) * t773 - t804 * t891;
t317 = t421 + t962;
t1038 = t1205 * t317;
t1052 = pkin(10) * t634;
t340 = -t1052 + t422;
t1114 = t812 * t340;
t188 = t1038 - t1114;
t1188 = t188 * t762;
t1036 = t1205 * t340;
t1116 = t812 * t317;
t189 = t1036 + t1116;
t1187 = t189 * t890;
t320 = t441 + t962;
t1037 = t1205 * t320;
t350 = -t1052 + t442;
t1113 = t812 * t350;
t196 = t1037 - t1113;
t1186 = t196 * t762;
t1035 = t1205 * t350;
t1115 = t812 * t320;
t197 = t1035 + t1115;
t1185 = t197 * t890;
t1174 = t421 * t809;
t1173 = t422 * t811;
t1172 = t441 * t809;
t1171 = t442 * t811;
t1164 = t576 * t890;
t1163 = t576 * t762;
t1156 = t986 * t684;
t59 = -t281 * t348 + t282 * t349 + t1156;
t1160 = t59 * qJD(1);
t1153 = t618 * t611;
t1152 = t618 * t762;
t1151 = t618 * t773;
t1150 = t620 * t607;
t1149 = t620 * t890;
t1148 = t620 * t773;
t1147 = t670 * t611;
t1146 = t670 * t762;
t1145 = t670 * t773;
t1144 = t671 * t607;
t1143 = t671 * t890;
t1142 = t671 * t773;
t1137 = t684 * t985;
t1136 = t684 * t801;
t1135 = t684 * t809;
t1134 = t684 * t811;
t1133 = t890 * t891;
t1128 = t773 * t811;
t1126 = t784 * t607;
t1125 = t784 * t611;
t1124 = t799 * t607;
t1123 = t799 * t611;
t960 = (t1330 - t986 / 0.2e1) * t891;
t999 = t1243 - t1288 / 0.2e1;
t172 = -t773 * t999 - t960;
t1104 = t172 * qJD(3);
t388 = -t708 * t762 + t709 * t890;
t648 = t663 * qJD(5);
t1103 = qJD(4) * t388 + t648;
t875 = t790 * t1206;
t748 = t875 * pkin(3);
t786 = t790 * qJD(5);
t1102 = qJD(4) * t748 + t786;
t221 = -t607 * t612 - t611 * t870;
t1096 = qJD(2) * t221;
t308 = t607 * t891 - t773 * t870;
t1092 = qJD(2) * t308;
t309 = -t611 * t891 + t612 * t773;
t1091 = qJD(2) * t309;
t629 = t1203 * t773 + t802 * t891;
t1085 = qJD(2) * t629;
t1083 = qJD(2) * t773;
t1081 = qJD(2) * t810;
t1080 = qJD(2) * t815;
t1079 = qJD(3) * t1288;
t1077 = qJD(3) * t784;
t1076 = qJD(4) * t1288;
t1075 = qJD(4) * t799;
t1074 = qJD(4) * t802;
t1073 = qJD(5) * t891;
t1072 = qJD(6) * t762;
t1071 = qJD(6) * t891;
t929 = t1169 - t1170;
t124 = (t1288 - t929) * t986;
t1070 = t124 * qJD(1);
t125 = -t929 * t986 + t1159;
t1069 = t125 * qJD(1);
t140 = t495 * t617 + t496 * t619 + t1156;
t1068 = t140 * qJD(1);
t1066 = t172 * qJD(2);
t788 = t810 ^ 2 * t1204 * t816;
t251 = t1288 * t685 + t1156 - t788;
t1064 = t251 * qJD(1);
t396 = t415 * qJD(2);
t389 = t416 * qJD(2);
t964 = -t1031 / 0.2e1;
t417 = t1224 - (t964 + t1222) * t891;
t390 = t417 * qJD(2);
t418 = t1224 - (t964 + t1223) * t891;
t393 = t418 * qJD(2);
t450 = -t788 + (t744 * t815 + t814 * t861) * t1120;
t1063 = t450 * qJD(1);
t451 = t790 * t764;
t1062 = t451 * qJD(2);
t542 = t1053 * t809;
t518 = t542 * qJD(2);
t543 = t1053 * t811;
t519 = t543 * qJD(2);
t1059 = t1053 * qJD(2);
t751 = t1040 / 0.2e1 + t1107 / 0.2e1;
t1058 = t751 * qJD(2);
t746 = t890 * qJD(6);
t807 = t814 ^ 2;
t808 = t815 ^ 2;
t791 = t808 - t807;
t1057 = t791 * qJD(2);
t1056 = t814 * qJD(3);
t1055 = t815 * qJD(3);
t1051 = -t1206 / 0.2e1;
t1049 = pkin(2) * t814 * qJD(2);
t1048 = pkin(2) * t1080;
t1047 = t813 * t1194;
t1046 = t813 * t1195;
t1044 = t1197 / 0.2e1;
t1030 = t606 * t1084;
t1027 = t891 * t1082;
t1025 = t762 * t746;
t1024 = t891 * t1083;
t1023 = t816 * t1081;
t739 = t811 * t1073;
t1022 = t814 * t1055;
t1017 = -t1164 / 0.2e1;
t1016 = -t1163 / 0.2e1;
t1015 = t986 * t1207;
t1014 = -t1154 / 0.2e1;
t1011 = -t1135 / 0.2e1;
t1010 = t1134 / 0.2e1;
t1009 = -t1129 / 0.2e1;
t1008 = -t1128 / 0.2e1;
t1005 = t1122 / 0.2e1;
t1004 = -t1120 / 0.2e1;
t1002 = t1119 / 0.2e1;
t998 = t1236 + t1232;
t997 = t1235 + t1229;
t996 = t1216 + t1215;
t993 = qJD(2) * t1204;
t990 = t1206 * qJD(3);
t989 = t1206 * qJD(4);
t988 = t986 * t790;
t710 = t790 * t798;
t987 = (t807 + t808) * t816;
t562 = qJD(6) * t751 - t1024;
t978 = -qJD(6) + t1084;
t973 = t811 * t1024;
t972 = t805 * t1024;
t971 = t806 * t1024;
t970 = t809 * t1024;
t968 = t810 * t993;
t967 = t809 * t1051;
t966 = t1206 * t1208;
t961 = t1054 * t1197;
t957 = t1343 * t798;
t952 = -t1131 - t1199;
t824 = t1251 * t189 + t1253 * t188 + t1353;
t850 = t1217 * t684 + t1235 * t349 + t1236 * t348;
t2 = t824 + t850;
t24 = -t186 * t188 + t187 * t189 + t1350;
t951 = qJD(1) * t2 + qJD(2) * t24;
t25 = -t186 * t196 + t187 * t197 + t1350;
t823 = t1251 * t197 + t1253 * t196 + t1353;
t849 = t1215 * t684 + t1230 * t349 + t1231 * t348;
t4 = t823 + t849;
t950 = qJD(1) * t4 + qJD(2) * t25;
t948 = t811 * t970;
t935 = t186 * t611 - t187 * t607;
t18 = -t188 * t612 - t189 * t870 + t935;
t944 = qJD(2) * t18 + t1375;
t21 = -t196 * t612 - t197 * t870 + t935;
t943 = qJD(2) * t21 + t1375;
t819 = t1246 * t422 + t1248 * t421 + t1289 * t1330 - t904 * t986 + t1310;
t32 = -t1136 / 0.2e1 + t896 * t798 + t819;
t93 = t405 * t421 + t406 * t422 + t1141;
t942 = t32 * qJD(1) + t93 * qJD(2);
t822 = (t1227 - t904) * t986 + t441 * t1248 + t442 * t1246 + t1310;
t34 = t1200 / 0.2e1 + t896 * qJ(5) + t822;
t95 = t405 * t441 + t406 * t442 + t1141;
t941 = qJD(1) * t34 + qJD(2) * t95;
t43 = -t188 * t891 + t1338;
t940 = qJD(2) * t43 - t1377;
t44 = t189 * t891 + t1339;
t939 = qJD(2) * t44 - t1376;
t47 = -t196 * t891 + t1338;
t938 = qJD(2) * t47 - t1377;
t48 = t197 * t891 + t1339;
t937 = qJD(2) * t48 - t1376;
t58 = t186 * t606 - t187 * t870;
t912 = -t1252 * t606 + t1300 * t282;
t86 = t912 + t1101;
t936 = qJD(1) * t86 - qJD(2) * t58;
t931 = t1173 - t1174;
t930 = t1171 - t1172;
t928 = -t1130 + t1132;
t280 = t1203 * t802;
t883 = t1051 * t684 + t1207 * t685;
t84 = (t1003 * t814 + t883) * pkin(3);
t927 = -t84 * qJD(1) + t280 * qJD(2);
t925 = -t969 / 0.2e1;
t877 = -t1111 / 0.2e1 + t1034 / 0.2e1;
t909 = t1220 * t282 + t1238 * t986;
t110 = t877 - t909;
t115 = t187 * t891 + t576 * t612;
t924 = qJD(1) * t110 - qJD(2) * t115;
t878 = -t1112 / 0.2e1 - t1033 / 0.2e1;
t910 = t1219 * t281 + t1241 * t986;
t111 = t878 - t910;
t114 = -t186 * t891 - t576 * t870;
t923 = qJD(1) * t111 - qJD(2) * t114;
t914 = (t1248 + t1005) * t773;
t130 = t1010 + t914;
t143 = t1341 - (t441 - t1138) * t891;
t922 = qJD(1) * t130 + qJD(2) * t143;
t862 = t1218 * t1288 - t960;
t831 = t1218 * t495 + t809 * t862;
t132 = t1010 + t831;
t141 = t1341 - (t421 - t1138) * t891;
t921 = t132 * qJD(1) + t141 * qJD(2);
t913 = (t1247 + t1118 / 0.2e1) * t773;
t135 = t1011 + t913;
t144 = t1340 - (-t442 - t658) * t891;
t920 = t135 * qJD(1) + t144 * qJD(2);
t830 = t1247 * t773 + t811 * t862;
t137 = t1011 + t830;
t142 = t1340 - (-t422 - t658) * t891;
t919 = t137 * qJD(1) + t142 * qJD(2);
t918 = t172 * qJD(1);
t827 = (-t798 / 0.2e1 + t1044 + qJ(5) / 0.2e1) * t773 - (-t1050 / 0.2e1 - t801 / 0.2e1 - pkin(4) / 0.2e1) * t891;
t192 = t1233 + t1321 / 0.2e1 + t827 * t809;
t331 = t999 * t811;
t917 = -qJD(1) * t331 + qJD(2) * t192;
t206 = t932 * t773;
t212 = t773 * t901 + t1101;
t916 = qJD(1) * t212 - qJD(2) * t206;
t595 = t704 + t703;
t676 = t757 + t756;
t915 = qJD(1) * t595 + qJD(2) * t676;
t903 = -t1173 / 0.2e1 + t1174 / 0.2e1;
t902 = t1171 / 0.2e1 - t1172 / 0.2e1;
t899 = -t1235 * t870 - t1236 * t606;
t898 = -t1230 * t870 - t1231 * t606;
t897 = -t1216 * t870 + t1219 * t618;
t895 = t1216 * t612 + t1220 * t620;
t894 = -t1214 * t870 + t1219 * t670;
t893 = t1214 * t612 + t1220 * t671;
t892 = -t1225 * t870 + t1226 * t612;
t887 = -t891 * t964 + t1224;
t886 = t1197 * t1300 + t1219 * t708;
t885 = t1044 * t612 + t1220 * t709;
t882 = -t1116 / 0.2e1 - t1036 / 0.2e1;
t881 = -t1115 / 0.2e1 - t1035 / 0.2e1;
t880 = -t1114 / 0.2e1 + t1038 / 0.2e1;
t879 = -t1113 / 0.2e1 + t1037 / 0.2e1;
t820 = pkin(3) * t1015 + t1216 * t1288 + t1225 * t282 + t1226 * t281 - t1234 * t1329 + t1237 * t1328;
t851 = t1215 * t1288 - t1230 * t1329 + t1231 * t1328;
t20 = t820 + t851;
t258 = t1197 * t784 - t618 * t708 + t620 * t709;
t821 = t1044 * t576 + t1216 * t1317 + t1225 * t187 + t1226 * t186 + t1234 * t197 + t1237 * t196;
t854 = t1215 * t1317 + t1230 * t189 + t1231 * t188;
t6 = t821 + t854;
t872 = qJD(1) * t20 + qJD(2) * t6 + qJD(3) * t258;
t10 = (-t196 / 0.2e1 + t188 / 0.2e1) * t762 - (-t197 / 0.2e1 + t189 / 0.2e1) * t890 + t998 * t611 + t997 * t607 + t892;
t72 = (t1250 + t476) * t762 - (t475 + t1249) * t890;
t869 = -qJD(1) * t72 - qJD(2) * t10 - qJD(3) * t388;
t817 = t902 * t798 + (t1207 * t985 + t405 * t967 + t406 * t966) * pkin(3) + t1289 * t1213;
t50 = t1201 / 0.2e1 + t903 * qJ(5) + t817;
t818 = (t495 * t967 + t496 * t966 + t1015) * pkin(3) - t986 * t957 + t1288 * t1213;
t62 = t818 - t1380;
t621 = (t798 * t875 + t801 * t813) * pkin(3);
t868 = t62 * qJD(1) + t50 * qJD(2) + t621 * qJD(3);
t311 = t1149 + t1152;
t36 = t899 + t1293;
t866 = qJD(2) * t36 - qJD(3) * t311 + t1315;
t121 = (t442 / 0.2e1 - t422 / 0.2e1) * t811 + (-t441 / 0.2e1 + t421 / 0.2e1) * t809;
t865 = -qJD(2) * t121 - qJD(3) * t748;
t864 = -qJD(3) * t710 + t1302;
t240 = t1250 + t859;
t79 = t1016 + t880 - t895;
t856 = qJD(1) * t240 + qJD(2) * t79 - t1077 * t762;
t242 = t1249 + t858;
t80 = t1017 + t882 - t897;
t855 = qJD(1) * t242 + qJD(2) * t80 - t1077 * t890;
t292 = t999 * t890;
t74 = t607 * t996 - t773 * t998 + t886;
t848 = qJD(1) * t292 - qJD(2) * t74 + t1047 * t890;
t293 = t999 * t762;
t76 = t611 * t996 + t773 * t997 + t885;
t847 = -qJD(1) * t293 - qJD(2) * t76 - t1047 * t762;
t195 = (t1227 - t1289 / 0.2e1) * t809 + t827 * t811;
t330 = t999 * t809;
t846 = -qJD(1) * t330 - qJD(2) * t195 - t1047 * t809;
t184 = t1044 + (t1232 + t1237) * t762 - (t1229 + t1234) * t890;
t343 = t1143 + t1146;
t41 = t898 + t1293;
t844 = qJD(2) * t41 + qJD(3) * t184 - qJD(4) * t343 + t1315;
t614 = -qJ(5) * t1343 + t1044 - t957;
t783 = t790 * qJ(5);
t843 = qJD(3) * t614 - qJD(4) * t783 + t1302;
t239 = t857 * t986;
t836 = (-t974 / 0.2e1 + t809 * t925) * pkin(3);
t409 = t836 - t1299;
t88 = t1016 + t879 - t893;
t840 = qJD(1) * t239 + qJD(2) * t88 + qJD(3) * t409 - t1075 * t762;
t241 = (t1222 + t873) * t986;
t835 = (t811 * t925 + t975 / 0.2e1) * pkin(3);
t410 = -t890 * t995 + t835;
t89 = t1017 + t881 - t894;
t839 = qJD(1) * t241 + qJD(2) * t89 + qJD(3) * t410 - t1075 * t890;
t794 = t814 * t1080;
t789 = t809 * t1046;
t747 = t762 * qJD(5);
t745 = t890 * qJD(5);
t728 = t762 * t1046;
t727 = t890 * t1046;
t662 = -t1134 / 0.2e1;
t661 = t1135 / 0.2e1;
t642 = t1054 * t751;
t636 = 0.2e1 * t948;
t624 = t634 * qJD(5);
t615 = t1044 + (qJ(5) + t798) * t1343;
t599 = 0.2e1 * t757 - t977;
t566 = t591 * qJD(6);
t549 = t1004 * t773 - t1101;
t537 = t549 * qJD(2);
t532 = t547 * qJD(2);
t455 = t1163 / 0.2e1;
t454 = t1164 / 0.2e1;
t449 = 0.2e1 * t704 + t845;
t420 = t1133 / 0.2e1 + t887;
t419 = -t1133 / 0.2e1 + t887;
t412 = t836 + t1299;
t411 = t835 - (t1215 + t1217) * t890;
t395 = t415 * qJD(5);
t394 = t416 * qJD(5);
t392 = t418 * qJD(5);
t391 = t420 * qJD(5);
t380 = (-t1083 * t806 - t953) * t891;
t379 = (-t1083 * t805 + t953) * t891;
t362 = -t730 / 0.2e1 + (t963 - t873) * t773;
t342 = t1281 * t809 + t519;
t341 = t1279 * t773 - t518;
t336 = t389 - t1072;
t335 = t746 - t390;
t334 = t746 + t393;
t333 = t396 + t1072;
t332 = -t1118 / 0.2e1 + t1288 * t1209;
t329 = t1210 * t1288 + t1005;
t307 = -0.2e1 * t948 - (t805 - t806) * t1282;
t295 = t1298 * t1221;
t294 = t1298 * t1222;
t214 = t215 * qJD(6);
t213 = t1008 * t495 + t1009 * t496 + t1101;
t200 = -0.2e1 * t1379;
t199 = -qJD(6) * t417 - t1091;
t198 = qJD(6) * t416 - t1092;
t194 = qJ(5) * t1008 + t1277 * t811 + t1322;
t193 = qJ(5) * t1009 + t1277 * t809 + 0.2e1 * t1233;
t191 = -t1087 * t611 + t1320;
t190 = -t1287 * t607 - t1320;
t185 = t1143 / 0.2e1 + t1149 / 0.2e1 + t1146 / 0.2e1 + t1152 / 0.2e1 + t1044;
t165 = t170 * qJD(5);
t155 = -t871 - t896;
t153 = t156 * qJD(2);
t151 = t155 * qJD(2);
t146 = qJD(6) * t419 + t1281 * t762 + t1091;
t145 = -qJD(6) * t415 + t1281 * t890 + t1092;
t136 = t661 + t830;
t134 = t661 + t913;
t133 = t662 + t831;
t131 = t662 + t914;
t120 = t902 - t903;
t113 = t877 + t909;
t112 = t878 + t910;
t105 = t1320 + (t1283 + t1087) * t611;
t104 = t1316 * t607 - t1320;
t94 = t214 - t1096;
t91 = t455 + t879 + t893;
t90 = t454 + t881 + t894;
t87 = -t912 + t1101;
t85 = pkin(3) * t883 + t1004 * t1203;
t82 = t455 + t880 + t895;
t81 = t454 + t882 + t897;
t75 = -t1148 / 0.2e1 + t1125 / 0.2e1 + t1349 - t1142 / 0.2e1 + t1123 / 0.2e1 + t885;
t73 = -t1151 / 0.2e1 + t1126 / 0.2e1 - t1348 - t1145 / 0.2e1 + t1124 / 0.2e1 + t886;
t61 = t818 + t1380;
t51 = t1096 + t214 + t1054 * (-t607 * t762 + t611 * t890);
t49 = t422 * t1002 - qJ(5) * t1174 / 0.2e1 - t1201 / 0.2e1 + t817;
t42 = -t898 + t1291;
t37 = -t899 + t1291;
t33 = t619 * t1002 + qJ(5) * t1014 - t1200 / 0.2e1 + t822;
t31 = t619 * t1117 / 0.2e1 + t798 * t1014 + t1136 / 0.2e1 + t819;
t19 = t820 - t851;
t9 = -t1150 / 0.2e1 + t1185 / 0.2e1 + t1153 / 0.2e1 - t1186 / 0.2e1 - t1144 / 0.2e1 + t1187 / 0.2e1 + t1147 / 0.2e1 - t1188 / 0.2e1 + t892;
t5 = t821 - t854;
t3 = t823 - t849;
t1 = t824 - t850;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t450, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t251, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t140 + qJD(3) * t125 + qJD(4) * t124, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t59 + t1054 * t1333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t968, -t1023, 0, 0, 0, 0, 0, 0, 0, 0 (-t1056 * t816 - t815 * t993) * t810 (-t1055 * t816 + t814 * t993) * t810, t1081 * t987, t1063 + (-pkin(2) * t1204 + pkin(8) * t987) * t1081, 0, 0, 0, 0, 0, 0, t1054 * t549 - t891 * t968, t1054 * t548 + t773 * t968 (t684 * t773 + t685 * t891) * qJD(2) + t1104, t1064 + (t1043 * t802 + t1289 * t685 + t1137) * qJD(2) + t85 * qJD(3), 0, 0, 0, 0, 0, 0 (t1129 * t684 - t617 * t891) * qJD(2) + t133 * qJD(3) + t131 * qJD(4) (t1128 * t684 + t619 * t891) * qJD(2) + t136 * qJD(3) + t134 * qJD(4) (-t617 * t811 - t619 * t809) * t1083 + t1054 * t155, t1068 + (t405 * t617 + t406 * t619 + t1137) * qJD(2) + t31 * qJD(3) + t33 * qJD(4) + t213 * qJD(5), 0, 0, 0, 0, 0, 0 (-t348 * t891 + t684 * t870) * qJD(2) + t113 * qJD(6) + t1054 * t1361 (t349 * t891 + t612 * t684) * qJD(2) + t112 * qJD(6) + t1054 * t1362 (-t348 * t612 - t349 * t870) * qJD(2) + t1054 * t1357, t1160 + (-t186 * t348 + t187 * t349 + t576 * t684) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t87 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t744 - t1023 * t814, qJD(3) * t861 - t1023 * t815, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t449 - t1079 + t537, t1344, t1066, t85 * qJD(2) + (-t1206 * t1288 - t813 * t986) * t1194, 0, 0, 0, 0, 0, 0, qJD(2) * t133 + qJD(4) * t332 - t1079 * t811, qJD(2) * t136 + qJD(4) * t329 + t1079 * t809, qJD(4) * t200 - t1078 * t790 + t151, t1069 + t31 * qJD(2) + (t1288 * t801 - t710 * t986) * qJD(3) + t61 * qJD(4) + t1306, 0, 0, 0, 0, 0, 0, qJD(4) * t294 - t1079 * t890 + t1366, qJD(4) * t295 + t1079 * t762 + t1367, t1365, t1 * qJD(2) + (t1288 * t784 - t1328 * t618 - t1329 * t620) * qJD(3) + t19 * qJD(4) + t1369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t449 - t1076 + t537, t1344, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t131 + qJD(3) * t332 - t1076 * t811, qJD(2) * t134 + qJD(3) * t329 + t1076 * t809, t200 * qJD(3) - qJD(4) * t988 + t151, t1070 + t33 * qJD(2) + t61 * qJD(3) + (-qJ(5) * t988 - t1202) * qJD(4) + t1306, 0, 0, 0, 0, 0, 0, qJD(3) * t294 - t1076 * t890 + t1366, qJD(3) * t295 + t1076 * t762 + t1367, t1365, t3 * qJD(2) + t19 * qJD(3) + (t1288 * t799 - t1328 * t670 - t1329 * t671) * qJD(4) + t1369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t213 + t1054 * t1295, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t87 + t1054 * t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t113 - qJD(6) * t282 + t1054 * t1351, qJD(2) * t112 + qJD(6) * t281 + t1054 * t1352, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1063, 0, 0, 0, 0, 0, 0, 0, -t1054 * t547, t1104, -qJD(3) * t84 - t1064, 0, 0, 0, 0, 0, 0, qJD(3) * t132 + qJD(4) * t130, qJD(3) * t137 + qJD(4) * t135, t1054 * t156, qJD(3) * t32 + qJD(4) * t34 - qJD(5) * t212 - t1068, 0, 0, 0, 0, 0, 0, -qJD(6) * t110 - t1054 * t1358, -qJD(6) * t111 - t1054 * t1359, t1054 * t1360, qJD(3) * t2 + qJD(4) * t4 - qJD(5) * t86 - t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1022, t791 * qJD(3), 0, -t1022, 0, 0, -pkin(2) * t1056, -pkin(2) * t1055, 0, 0, t1318, -t1054 * t1053, 0, -t1318, 0, 0, qJD(3) * t628 + t1074 * t773, qJD(3) * t629 + t1074 * t891, 0, qJD(3) * t280, t806 * t1318, -0.2e1 * t773 * t891 * t953, t1054 * t543, t805 * t1318, -t1054 * t542, -t1318, qJD(3) * t141 + qJD(4) * t143 + t739 * t773, qJD(3) * t142 + qJD(4) * t144 - t1073 * t1129, -qJD(3) * t83 - qJD(4) * t92 + qJD(5) * t451, qJD(3) * t93 + qJD(4) * t95 + qJD(5) * t206 (t1054 * t611 - t1286) * t612, qJD(6) * t279 + t1054 * t221, t1054 * t309 + t1071 * t870 (qJD(6) * t612 + t1054 * t607) * t870, t1054 * t308 + t1071 * t612, -t1318, qJD(3) * t43 + qJD(4) * t47 + qJD(6) * t115 + t1073 * t606, qJD(3) * t44 + qJD(4) * t48 + qJD(6) * t114 - t1073 * t870, qJD(3) * t18 + qJD(4) * t21 + qJD(5) * t220, qJD(3) * t24 + qJD(4) * t25 + qJD(5) * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t794, t1057, t1055, -t794, -t1056, 0, -pkin(8) * t1055 - t1049, pkin(8) * t1056 - t1048, 0, 0, t1024, -t1059, t1282, -t1024, -t1281, 0, -qJD(3) * t1289 + qJD(4) * t599 + t1272, t1085 + t1304 (-t1041 - t1127) * t1194 + t918 (-t1206 * t1289 - t813 * t985) * t1194 + t927, -t380, t307, t342, -t379, t341, -t1024 (t809 * t928 - t1321) * qJD(3) + t193 * qJD(4) + t624 + t921 (t811 * t928 + t1322) * qJD(3) + t194 * qJD(4) + t739 + t919, qJD(3) * t931 + qJD(4) * t120 - t1270 (t1289 * t801 + t798 * t931) * qJD(3) + t49 * qJD(4) + t1308 + t942, t105, t51, t146, t104, t145, t562 (t1126 - t1151 - t1348) * qJD(3) + t73 * qJD(4) + t394 + t82 * qJD(6) + t940 (t1125 - t1148 + t1349) * qJD(3) + t75 * qJD(4) + t391 + t81 * qJD(6) + t939 (-t1150 + t1153 + t1187 - t1188) * qJD(3) + t9 * qJD(4) + t944 + t165 (t1317 * t784 - t188 * t618 + t189 * t620) * qJD(3) + t5 * qJD(4) + t37 * qJD(5) + t951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1024, -t1059, t1282, -t1024, -t1281, 0, qJD(3) * t599 - qJD(4) * t1289 + t1273, t1027 + t1304, 0, 0, -t380, t307, t342, -t379, t341, -t1024, t193 * qJD(3) + (t809 * t952 - t1321) * qJD(4) + t624 + t922, t194 * qJD(3) + (t811 * t952 + t1322) * qJD(4) + t739 + t920, qJD(3) * t120 + qJD(4) * t930 - t1271, t49 * qJD(3) + (qJ(5) * t930 - t1201) * qJD(4) + t1308 + t941, t105, t51, t146, t104, t145, t562, t73 * qJD(3) + (t1124 - t1145 - t1348) * qJD(4) + t394 + t91 * qJD(6) + t938, t75 * qJD(3) + (t1123 - t1142 + t1349) * qJD(4) + t391 + t90 * qJD(6) + t937, t9 * qJD(3) + (-t1144 + t1147 + t1185 - t1186) * qJD(4) + t943 + t165, t5 * qJD(3) + (t1317 * t799 - t196 * t670 + t197 * t671) * qJD(4) + t42 * qJD(5) + t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1054 * t634 + t973 -(t1083 * t809 - t1279) * t891, t1062, t1054 * t1290 - t916, 0, 0, 0, 0, 0, 0, qJD(6) * t362 + t1030 + t1284, t1054 * t420 - t1278, t1257, qJD(3) * t37 + qJD(4) * t42 - t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1303, t1258, t1054 * t419 + t870 * t978, -t1303, t612 * t978 - t1285, t642, qJD(3) * t82 + qJD(4) * t91 + qJD(5) * t362 - qJD(6) * t187 - t924, qJD(3) * t81 + qJD(4) * t90 + qJD(6) * t186 - t923, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t595, t532, -t1066, qJD(2) * t84, 0, 0, 0, 0, 0, 0, -qJD(2) * t132 - qJD(4) * t331, -qJD(2) * t137 + qJD(4) * t330, -t153, -qJD(2) * t32 + qJD(4) * t62 - t1069 - t1312, 0, 0, 0, 0, 0, 0, -qJD(4) * t292 - qJD(6) * t240 + t1374, qJD(4) * t293 - qJD(6) * t242 + t1373, qJD(4) * t72 - t1372, -qJD(2) * t2 + qJD(4) * t20 + t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794, -t1057, 0, t794, 0, 0, t1049, t1048, 0, 0, -t1024, t1059, 0, t1024, 0, 0, qJD(4) * t676 - t1272, t1060 - t1085, -t918, -t927, -t971, t636, -t519, -t972, t518, t1024, qJD(4) * t192 - t921, qJD(4) * t195 - t919, qJD(4) * t121 + t1270, qJD(4) * t50 - t1314 - t942, t191, t94, t199, t190, t198, -t562, qJD(4) * t74 - qJD(6) * t79 - t395 - t940, qJD(4) * t76 - qJD(6) * t80 - t392 - t939, qJD(4) * t10 + t165 - t944, qJD(4) * t6 - qJD(5) * t36 - t951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1046, -pkin(3) * t989, 0, 0, 0, 0, 0, 0, 0, 0, -t811 * t1046, t789, t1102, qJD(4) * t621 + qJD(5) * t710, t1025, t566, 0, -t1025, 0, 0, t1072 * t784 - t727, t746 * t784 + t728, t1103, qJD(4) * t258 + qJD(5) * t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t961 + t915 (-t990 - t989) * pkin(3), 0, 0, 0, 0, 0, 0, 0, 0, -t811 * t961 + t917, t789 - t846, -t865 + t1102 (-pkin(4) * t813 + qJ(5) * t875) * t1195 + t615 * qJD(5) + t868, t1025, t566, 0, -t1025, 0, 0, qJD(6) * t412 - t727 - t848, qJD(6) * t411 + t728 - t847, -t869 + t1103 (t1197 * t799 - t670 * t708 + t671 * t709) * qJD(4) + t185 * qJD(5) + t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, qJD(4) * t615 - t864, 0, 0, 0, 0, 0, 0, -t396, -t393, t122, qJD(4) * t185 - t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1342, t138, t335, -t1342, t336, -t1058, qJD(4) * t412 - qJD(6) * t620 - t856, qJD(4) * t411 + qJD(6) * t618 - t855, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t595, t532, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t130 + qJD(3) * t331, -qJD(2) * t135 - qJD(3) * t330, -t153, -qJD(2) * t34 - qJD(3) * t62 - t1070 - t1312, 0, 0, 0, 0, 0, 0, qJD(3) * t292 - qJD(6) * t239 + t1374, -qJD(3) * t293 - qJD(6) * t241 + t1373, -qJD(3) * t72 - t1372, -qJD(2) * t4 - qJD(3) * t20 + t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1024, t1059, 0, t1024, 0, 0, -qJD(3) * t676 - t1273, t1060 - t1027, 0, 0, -t971, t636, -t519, -t972, t518, t1024, -qJD(3) * t192 - t922, -qJD(3) * t195 - t920, -qJD(3) * t121 + t1271, -qJD(3) * t50 - t1314 - t941, t191, t94, t199, t190, t198, -t562, -qJD(3) * t74 - qJD(6) * t88 - t395 - t938, -qJD(3) * t76 - qJD(6) * t89 - t392 - t937, -qJD(3) * t10 + t165 - t943, -qJD(3) * t6 - qJD(5) * t41 - t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t915 + t1047, pkin(3) * t990, 0, 0, 0, 0, 0, 0, 0, 0, t1047 * t811 - t917, t846, t786 + t865, -qJD(5) * t614 - t868, t1025, t566, 0, -t1025, 0, 0, -qJD(6) * t409 + t848, -qJD(6) * t410 + t847, t648 + t869, -qJD(5) * t184 - t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t786, t783 * qJD(5), t1025, t566, 0, -t1025, 0, 0, t799 * t1072, t799 * t746, t648, qJD(5) * t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, -t843, 0, 0, 0, 0, 0, 0, -t396, -t393, t122, -t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1342, t138, t335, -t1342, t336, -t1058, -qJD(6) * t671 - t840, qJD(6) * t670 - t839, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t212 + t1054 * t1297, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t86 + t1054 * t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t973, t970, -t1062, t1054 * t1292 + t916, 0, 0, 0, 0, 0, 0, -qJD(6) * t359 - t1030 + t1285, t1054 * t418 + t1278 - t1286, -t1257, qJD(3) * t36 + qJD(4) * t41 + t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1280, qJD(4) * t614 + t864, 0, 0, 0, 0, 0, 0, t333, t334, -t122, qJD(4) * t184 + t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1280, t843, 0, 0, 0, 0, 0, 0, t333, t334, -t122, t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1305, -t1316, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t110 + qJD(3) * t240 + qJD(4) * t239, qJD(2) * t111 + qJD(3) * t242 + qJD(4) * t241, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1303, -t1258, t1054 * t417 - t1278, t1303, -t1084 * t612 - t1284, t642, qJD(3) * t79 + qJD(4) * t88 + qJD(5) * t359 + t924, qJD(3) * t80 + qJD(4) * t89 + qJD(5) * t870 + t923, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1342, -t138, t390, t1342, -t389, t1058, qJD(4) * t409 - t747 + t856, qJD(4) * t410 - t745 + t855, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1342, -t138, t390, t1342, -t389, t1058, -t747 + t840, -t745 + t839, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1305, t1316, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
