% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:09
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:09:07
% EndTime: 2019-03-08 23:09:36
% DurationCPUTime: 18.89s
% Computational Cost: add. (11138->686), mult. (26070->959), div. (0->0), fcn. (30353->12), ass. (0->552)
t509 = sin(qJ(3));
t511 = cos(qJ(3));
t506 = sin(pkin(6));
t796 = sin(qJ(2));
t679 = t506 * t796;
t787 = cos(pkin(6));
t548 = t509 * t679 - t511 * t787;
t795 = sin(qJ(4));
t533 = t795 * t548;
t445 = t509 * t787 + t511 * t679;
t797 = cos(qJ(4));
t676 = t797 * t445;
t522 = t676 - t533;
t792 = t522 * pkin(4);
t616 = t445 * t795 + t548 * t797;
t505 = sin(pkin(12));
t503 = t505 ^ 2;
t507 = cos(pkin(12));
t504 = t507 ^ 2;
t876 = t504 / 0.2e1 + t503 / 0.2e1;
t884 = t876 * t616;
t885 = -t792 / 0.2e1 - t884 * qJ(5);
t740 = t507 * t522;
t512 = cos(qJ(2));
t742 = t506 * t512;
t248 = -t505 * t742 + t740;
t779 = t248 * t507;
t744 = t505 * t522;
t247 = -t507 * t742 - t744;
t780 = t247 * t505;
t832 = t779 / 0.2e1 - t780 / 0.2e1;
t413 = t676 / 0.2e1;
t872 = t413 - t533 / 0.2e1;
t843 = t832 + t872;
t875 = (t522 - t779 + t780) * t616;
t879 = t875 * qJD(1);
t883 = qJD(5) * t843 + t879;
t844 = -t832 + t872;
t882 = -qJD(5) * t844 - t879;
t688 = qJD(3) + qJD(4);
t651 = t742 / 0.2e1;
t496 = t795 * t511;
t497 = t797 * t509;
t870 = t496 + t497;
t719 = t870 * t651;
t510 = cos(qJ(6));
t724 = t510 * t505;
t508 = sin(qJ(6));
t731 = t508 * t507;
t569 = t731 / 0.2e1 + t724 / 0.2e1;
t560 = t569 * t616;
t461 = t724 + t731;
t768 = t616 * t461;
t877 = t768 / 0.2e1 + t560;
t881 = qJD(6) * t877;
t732 = t508 * t505;
t648 = -t732 / 0.2e1;
t723 = t510 * t507;
t568 = t723 / 0.2e1 + t648;
t559 = t568 * t616;
t459 = -t723 + t732;
t769 = t616 * t459;
t878 = -t769 / 0.2e1 + t559;
t880 = qJD(6) * t878;
t819 = t616 / 0.2e1;
t823 = -pkin(9) - pkin(8);
t482 = t823 * t509;
t469 = t795 * t482;
t483 = t823 * t511;
t675 = t797 * t483;
t617 = -t675 + t469;
t848 = t617 * t507;
t816 = -t848 / 0.2e1;
t673 = t795 * t509;
t674 = t797 * t511;
t466 = t673 - t674;
t846 = t688 * t870;
t874 = t466 * t846;
t615 = -t482 * t797 - t483 * t795;
t374 = t507 * t615;
t757 = t615 * t505;
t456 = -t675 / 0.2e1;
t871 = t456 + t469 / 0.2e1;
t550 = -t674 / 0.2e1 + t673 / 0.2e1;
t286 = t466 * t651 + t550 * t742;
t704 = qJD(3) * t616;
t869 = qJD(2) * t286 + qJD(4) * t616 + t704;
t434 = t870 * t732;
t164 = t434 / 0.2e1 - (t648 + t723) * t870;
t847 = t688 * t461;
t868 = -qJD(2) * t164 + t847;
t500 = -pkin(3) * t511 - pkin(2);
t789 = t466 * pkin(4);
t614 = -qJ(5) * t870 + t789;
t359 = t500 + t614;
t849 = t617 * t505;
t190 = t359 * t507 - t849;
t191 = t359 * t505 + t848;
t798 = t507 / 0.2e1;
t801 = -t505 / 0.2e1;
t584 = t190 * t801 + t191 * t798;
t842 = -t584 + t871;
t867 = qJD(5) * t842;
t841 = t584 + t871;
t865 = t841 * qJD(5);
t863 = (-t190 - t849) * t870;
t862 = (t191 - t848) * t870;
t338 = t723 * t870 - t434;
t563 = t461 * t870;
t811 = t461 / 0.2e1;
t813 = -t459 / 0.2e1;
t126 = t338 * t813 - t563 * t811;
t90 = -qJD(2) * t126 + t459 * t847;
t810 = -t466 / 0.2e1;
t285 = (t810 + t550) * t742;
t694 = t285 * qJD(1);
t861 = t615 * t688 - t694;
t860 = qJD(1) * t844 + qJD(2) * t842;
t859 = 0.2e1 * t522;
t767 = t522 * t563;
t858 = -t767 / 0.2e1;
t791 = t617 * pkin(4);
t556 = -t461 / 0.2e1 + t569;
t200 = t556 * t466;
t857 = t200 * t688;
t201 = (t811 + t569) * t466;
t856 = t201 * t688;
t855 = t461 * t466;
t788 = t507 * pkin(5);
t495 = -pkin(4) - t788;
t805 = t495 / 0.2e1;
t684 = t797 * pkin(3);
t499 = -t684 - pkin(4);
t478 = t499 - t788;
t806 = t478 / 0.2e1;
t646 = t805 + t806;
t854 = t461 * t646;
t853 = t522 * t615 / 0.2e1;
t709 = qJD(2) * t466;
t670 = t563 * t709;
t357 = t505 * t466;
t587 = -pkin(5) * t357 + t617;
t852 = t587 * t459;
t851 = t587 * t461;
t850 = t615 * t617;
t485 = t504 + t503;
t845 = t688 * t485;
t452 = t497 / 0.2e1 + t496 / 0.2e1;
t808 = t870 / 0.2e1;
t284 = (t808 - t452) * t742;
t695 = t284 * qJD(1);
t707 = qJD(2) * t500;
t839 = -t707 * t870 + t695;
t686 = -t797 / 0.2e1;
t683 = t795 * pkin(3);
t494 = t683 + qJ(5);
t752 = t870 * t494;
t753 = t466 * t499;
t838 = t789 / 0.2e1 - t752 / 0.2e1 - t753 / 0.2e1 + (t466 * t686 + t795 * t808) * pkin(3);
t793 = pkin(3) * t509;
t353 = t466 * t793 + t500 * t870;
t837 = -qJD(2) * t353 + t695;
t373 = pkin(4) * t870 + qJ(5) * t466;
t212 = t373 * t507 + t757;
t213 = t373 * t505 - t374;
t596 = t190 * t507 + t191 * t505;
t567 = t596 * t466;
t35 = -(-t212 * t507 - t213 * t505) * t870 - t567;
t665 = t247 * t798;
t800 = t505 / 0.2e1;
t581 = t248 * t800 + t665;
t561 = t581 * t466;
t397 = t466 * t742;
t344 = -t397 * t507 + t505 * t679;
t342 = t397 * t505 + t507 * t679;
t765 = t342 * t505;
t799 = -t507 / 0.2e1;
t579 = t344 * t799 + t765 / 0.2e1;
t72 = t561 + t579;
t721 = t72 * qJD(1);
t836 = qJD(2) * t35 - t721;
t360 = t373 + t793;
t206 = t360 * t507 + t757;
t207 = t360 * t505 - t374;
t30 = -(-t206 * t507 - t207 * t505) * t870 - t567;
t835 = qJD(2) * t30 - t721;
t833 = qJD(6) * t563;
t116 = -t338 ^ 2 + t563 ^ 2;
t94 = -t338 * t461 + t459 * t563;
t831 = qJD(2) * t116 + t688 * t94;
t712 = qJD(2) * t338;
t830 = t126 * t688 - t563 * t712;
t318 = t459 ^ 2 - t461 ^ 2;
t58 = qJD(2) * t94 + t318 * t688;
t751 = t870 * t505;
t305 = pkin(5) * t751 + t615;
t337 = t459 * t466;
t151 = -pkin(10) * t751 + t191;
t542 = pkin(5) * t466 - t849 + (-pkin(10) * t870 + t359) * t507;
t74 = t151 * t510 + t508 * t542;
t829 = t305 * t337 + t338 * t587 - t74 * t870;
t828 = qJD(2) * t563 + t459 * t688;
t73 = t151 * t508 - t510 * t542;
t827 = -t305 * t855 + t563 * t587 - t73 * t870;
t824 = t870 ^ 2;
t822 = t247 / 0.2e1;
t821 = t248 / 0.2e1;
t820 = -t616 / 0.2e1;
t818 = t855 / 0.2e1;
t817 = -t338 / 0.2e1;
t814 = t617 / 0.2e1;
t812 = t459 / 0.2e1;
t809 = t466 / 0.2e1;
t804 = t499 / 0.2e1;
t794 = pkin(3) * t466;
t396 = t870 * t742;
t790 = t396 * pkin(4);
t502 = t507 * pkin(10);
t95 = -t337 * t563 + t338 * t855;
t785 = qJD(2) * t95;
t784 = t206 * t505;
t783 = t207 * t507;
t782 = t212 * t505;
t781 = t213 * t507;
t775 = t305 * t459;
t774 = t305 * t461;
t771 = t616 * t855;
t770 = t616 * t337;
t766 = t522 * t338;
t739 = t507 * t494;
t450 = t502 + t739;
t643 = (-pkin(10) - t494) * t505;
t343 = t450 * t508 - t510 * t643;
t764 = t343 * t870;
t345 = t510 * t450 + t508 * t643;
t763 = t345 * t870;
t479 = (-pkin(10) - qJ(5)) * t505;
t741 = t507 * qJ(5);
t480 = t502 + t741;
t384 = -t479 * t510 + t480 * t508;
t761 = t384 * t870;
t385 = t479 * t508 + t480 * t510;
t760 = t385 * t870;
t756 = t396 * t499;
t755 = t396 * t505;
t754 = t396 * t507;
t750 = t478 * t855;
t749 = t478 * t337;
t746 = t495 * t855;
t745 = t495 * t337;
t621 = pkin(5) * t870 + t466 * t502;
t139 = t206 + t621;
t738 = t508 * t139;
t140 = t212 + t621;
t737 = t508 * t140;
t687 = pkin(10) * t357;
t154 = t687 + t207;
t736 = t508 * t154;
t155 = t687 + t213;
t735 = t508 * t155;
t734 = t508 * t342;
t733 = t508 * t344;
t730 = t510 * t139;
t729 = t510 * t140;
t728 = t510 * t154;
t727 = t510 * t155;
t726 = t510 * t342;
t725 = t510 * t344;
t60 = t247 * t342 + t248 * t344 + t396 * t616;
t722 = t60 * qJD(1);
t562 = t485 * t797;
t449 = t562 * pkin(3);
t481 = t485 * qJD(5);
t720 = qJD(4) * t449 + t481;
t132 = t466 * t855 - t563 * t870;
t716 = qJD(2) * t132;
t133 = t337 * t466 + t338 * t870;
t715 = qJD(2) * t133;
t354 = -t466 * t500 + t793 * t870;
t710 = qJD(2) * t354;
t708 = qJD(2) * t870;
t706 = qJD(2) * t511;
t705 = qJD(3) * t522;
t703 = qJD(3) * t478;
t702 = qJD(4) * t522;
t701 = qJD(4) * t495;
t700 = qJD(4) * t500;
t699 = qJD(5) * t466;
t698 = qJD(6) * t461;
t697 = qJD(6) * t466;
t189 = t200 * qJD(2);
t182 = t201 * qJD(2);
t202 = (t812 - t568) * t466;
t183 = t202 * qJD(2);
t555 = t812 + t568;
t203 = t555 * t466;
t186 = t203 * qJD(2);
t218 = t485 * t824;
t696 = t218 * qJD(2);
t323 = t466 ^ 2 - t824;
t693 = t323 * qJD(2);
t692 = t452 * qJD(2);
t447 = t459 * qJD(6);
t486 = -t509 ^ 2 + t511 ^ 2;
t691 = t486 * qJD(2);
t690 = t509 * qJD(3);
t689 = t511 * qJD(3);
t685 = t795 / 0.2e1;
t682 = pkin(2) * t509 * qJD(2);
t681 = pkin(2) * t706;
t678 = t508 * t797;
t677 = t510 * t797;
t332 = t459 * t870;
t672 = t332 * t709;
t669 = t466 * t707;
t386 = t466 * t708;
t667 = qJD(2) * t742;
t440 = t507 * t699;
t666 = t509 * t706;
t664 = t775 / 0.2e1;
t663 = -t774 / 0.2e1;
t662 = -t770 / 0.2e1;
t661 = t396 * t812;
t660 = t396 * t811;
t659 = -t755 / 0.2e1;
t658 = t754 / 0.2e1;
t657 = -t337 / 0.2e1;
t656 = -t751 / 0.2e1;
t655 = t510 * t808;
t652 = qJ(5) * t801;
t650 = t741 / 0.2e1;
t649 = -t740 / 0.2e1;
t644 = qJD(2) * t796;
t642 = t797 * qJD(3);
t641 = t797 * qJD(4);
t640 = t795 * qJD(3);
t639 = t795 * qJD(4);
t638 = t485 * t616;
t416 = t485 * t494;
t633 = -qJD(6) - t709;
t632 = pkin(3) * t639;
t631 = pkin(3) * t640;
t630 = -t683 / 0.2e1;
t629 = t683 / 0.2e1;
t628 = t505 * t678;
t627 = t507 * t678;
t626 = t507 * t386;
t625 = t506 * t644;
t624 = t505 * t686;
t623 = t797 * t798;
t622 = -t677 / 0.2e1;
t414 = -t676 / 0.2e1;
t457 = t675 / 0.2e1;
t618 = t876 * t494;
t592 = t247 * t510 - t248 * t508;
t566 = t592 * t870;
t535 = t661 - t566 / 0.2e1;
t14 = t858 + (-t855 / 0.2e1 + t818) * t616 + t535;
t7 = (t729 - t735) * t466 + t827;
t613 = -qJD(1) * t14 + qJD(2) * t7;
t528 = -t616 * t818 + t858;
t15 = t771 / 0.2e1 + t528 + t535;
t5 = (t730 - t736) * t466 + t827;
t612 = -qJD(1) * t15 + qJD(2) * t5;
t591 = t247 * t508 + t248 * t510;
t565 = t591 * t870;
t534 = t660 + t565 / 0.2e1;
t16 = -t766 / 0.2e1 + t534;
t8 = -(t727 + t737) * t466 + t829;
t611 = -qJD(1) * t16 + qJD(2) * t8;
t527 = t522 * t817 - t616 * t657;
t17 = t662 + t527 + t534;
t6 = -(t728 + t738) * t466 + t829;
t610 = -qJD(1) * t17 + qJD(2) * t6;
t517 = t206 * t822 + t207 * t821 - t584 * t616 + t617 * t819 + t853;
t2 = -t756 / 0.2e1 + t579 * t494 + t517;
t36 = t190 * t206 + t191 * t207 + t850;
t609 = t2 * qJD(1) + t36 * qJD(2);
t38 = t190 * t212 + t191 * t213 + t850;
t518 = (t814 - t584) * t616 + t212 * t822 + t213 * t821 + t853;
t4 = t790 / 0.2e1 + t579 * qJ(5) + t518;
t608 = t4 * qJD(1) + t38 * qJD(2);
t605 = t566 / 0.2e1 - t771 / 0.2e1 + t661;
t604 = -t565 / 0.2e1 + t770 / 0.2e1 + t660;
t536 = t591 * t809 + t616 * t817;
t570 = -t733 / 0.2e1 + t726 / 0.2e1;
t40 = t536 + t570;
t45 = t305 * t338 - t466 * t74;
t603 = qJD(1) * t40 - qJD(2) * t45;
t537 = -t563 * t820 + t592 * t809;
t571 = -t734 / 0.2e1 - t725 / 0.2e1;
t41 = t537 + t571;
t44 = -t305 * t563 + t466 * t73;
t602 = qJD(1) * t41 - qJD(2) * t44;
t586 = (-t247 / 0.2e1 - t744 / 0.2e1) * t870;
t50 = t658 - t586;
t63 = -t863 + (t212 - t757) * t466;
t601 = t50 * qJD(1) + t63 * qJD(2);
t551 = t522 * t808 + (t820 + t819) * t466;
t525 = t247 * t808 + t505 * t551;
t52 = t658 + t525;
t61 = -t863 + (t206 - t757) * t466;
t600 = t52 * qJD(1) + t61 * qJD(2);
t585 = (t821 + t649) * t870;
t55 = t659 - t585;
t64 = -t862 + (-t213 - t374) * t466;
t599 = t55 * qJD(1) + t64 * qJD(2);
t524 = t507 * t551 - t821 * t870;
t57 = t659 + t524;
t62 = -t862 + (-t207 - t374) * t466;
t598 = t57 * qJD(1) + t62 * qJD(2);
t88 = t596 * t870;
t91 = t581 * t870 + t719;
t597 = qJD(1) * t91 + qJD(2) * t88;
t595 = t783 - t784;
t594 = t781 - t782;
t590 = -t752 - t753;
t520 = -(t494 / 0.2e1 + t630 - qJ(5) / 0.2e1) * t870 + (-t684 / 0.2e1 - t499 / 0.2e1 - pkin(4) / 0.2e1) * t466;
t76 = t816 + t848 / 0.2e1 + t520 * t505;
t589 = t76 * qJD(2);
t322 = t414 + t413;
t388 = t457 + t456;
t588 = -t322 * qJD(1) - t388 * qJD(2);
t583 = -t783 / 0.2e1 + t784 / 0.2e1;
t582 = t781 / 0.2e1 - t782 / 0.2e1;
t580 = t343 * t809 - t563 * t806;
t578 = t338 * t806 + t345 * t810;
t577 = t384 * t809 - t563 * t805;
t576 = t338 * t805 + t385 * t810;
t575 = -t738 / 0.2e1 - t728 / 0.2e1;
t574 = -t737 / 0.2e1 - t727 / 0.2e1;
t573 = -t736 / 0.2e1 + t730 / 0.2e1;
t572 = -t735 / 0.2e1 + t729 / 0.2e1;
t298 = -qJD(6) * t452 - t386;
t558 = t568 * t466;
t513 = t582 * t494 + (t190 * t624 + t191 * t623 + t615 * t685) * pkin(3) + t617 * t804;
t10 = t791 / 0.2e1 + t583 * qJ(5) + t513;
t516 = (t247 * t624 + t248 * t623 + t616 * t685) * pkin(3) - t616 * t618 + t522 * t804;
t13 = t516 - t885;
t346 = (t494 * t562 + t499 * t795) * pkin(3);
t554 = t13 * qJD(1) + t10 * qJD(2) + t346 * qJD(3);
t553 = -qJD(3) * t416 + t860;
t47 = (t213 / 0.2e1 - t207 / 0.2e1) * t507 + (-t212 / 0.2e1 + t206 / 0.2e1) * t505;
t552 = -qJD(2) * t47 - qJD(3) * t449;
t547 = (-t640 - t639) * pkin(3);
t101 = -t768 / 0.2e1 + t560;
t26 = t663 + t573 - t578;
t546 = qJD(1) * t101 + qJD(2) * t26 - t461 * t703;
t103 = t769 / 0.2e1 + t559;
t27 = t664 + t575 - t580;
t545 = qJD(1) * t103 + qJD(2) * t27 + t459 * t703;
t544 = -t852 / 0.2e1 + t761 / 0.2e1 + t746 / 0.2e1;
t543 = -t851 / 0.2e1 + t760 / 0.2e1 - t745 / 0.2e1;
t340 = -qJ(5) * t876 - t618 + t629;
t477 = t485 * qJ(5);
t541 = qJD(3) * t340 - qJD(4) * t477 + t860;
t515 = t852 / 0.2e1 - t764 / 0.2e1 - t750 / 0.2e1 + (-t505 * t677 - t627) * t794 / 0.2e1 - t563 * t630;
t23 = t515 + t544;
t540 = -qJD(2) * t23 - t459 * t631;
t514 = t851 / 0.2e1 - t763 / 0.2e1 + t749 / 0.2e1 - (t507 * t677 - t628) * t794 / 0.2e1 + t338 * t629;
t25 = t514 + t543;
t539 = -qJD(2) * t25 - t461 * t631;
t79 = (t814 - t617 / 0.2e1) * t505 + t520 * t507;
t538 = -qJD(2) * t79 - t505 * t631;
t100 = t556 * t616;
t530 = (-t627 / 0.2e1 + t505 * t622) * pkin(3);
t194 = t530 - t854;
t31 = t663 + t572 - t576;
t532 = qJD(1) * t100 + qJD(2) * t31 + qJD(3) * t194 - t461 * t701;
t102 = t555 * t616;
t529 = (t507 * t622 + t628 / 0.2e1) * pkin(3);
t195 = t459 * t646 + t529;
t32 = t664 + t574 - t577;
t531 = qJD(1) * t102 + qJD(2) * t32 + qJD(3) * t195 + t459 * t701;
t484 = t505 * t632;
t448 = t461 * qJD(5);
t446 = t459 * qJD(5);
t433 = t461 * t632;
t432 = t459 * t632;
t379 = t461 * t447;
t378 = -t754 / 0.2e1;
t377 = t755 / 0.2e1;
t371 = t688 * t466;
t364 = t688 * t452;
t349 = t357 * qJD(5);
t341 = t629 + (qJ(5) + t494) * t876;
t325 = 0.2e1 * t457 - t469;
t301 = t318 * qJD(6);
t287 = -t452 * t742 - t719;
t277 = t287 * qJD(2);
t272 = t285 * qJD(2);
t270 = t284 * qJD(2);
t222 = t774 / 0.2e1;
t221 = -t775 / 0.2e1;
t217 = 0.2e1 * t414 + t533;
t205 = t337 / 0.2e1 - t558;
t204 = t657 - t558;
t197 = t530 + t854;
t196 = t529 + (t478 + t495) * t813;
t188 = t200 * qJD(5);
t187 = t201 * qJD(5);
t185 = t203 * qJD(5);
t184 = t205 * qJD(5);
t167 = t507 * t655 - t434 / 0.2e1 - t568 * t870;
t166 = t505 * t655 - t569 * t870 + t731 * t808;
t150 = -t182 - t698;
t149 = -t447 - t183;
t148 = -t447 - t186;
t147 = -t189 + t698;
t146 = t522 * t799 + t649;
t143 = t744 / 0.2e1 + t522 * t800;
t125 = t811 * t859;
t124 = t812 * t859;
t121 = t126 * qJD(6);
t93 = t94 * qJD(6);
t92 = t248 * t656 - t665 * t870 + t719;
t82 = -0.2e1 * t884;
t81 = -qJD(6) * t202 - t715;
t80 = -qJD(6) * t201 - t716;
t78 = t507 * t838 - t650 * t870 + t849;
t77 = qJ(5) * t656 + t505 * t838 + 0.2e1 * t816;
t75 = -t337 * t712 + t121;
t71 = t561 - t579;
t69 = t72 * qJD(2);
t67 = t71 * qJD(2);
t66 = qJD(6) * t204 + t461 * t846 + t715;
t65 = qJD(6) * t200 - t459 * t846 + t716;
t56 = t377 + t524;
t54 = t377 - t585;
t53 = t378 + t525;
t51 = t378 - t586;
t46 = t582 - t583;
t43 = -t536 + t570;
t42 = -t537 + t571;
t39 = t121 + (t847 + t712) * t337;
t37 = t93 - t785;
t34 = t222 + t572 + t576;
t33 = t221 + t574 + t577;
t29 = t222 + t573 + t578;
t28 = t221 + t575 + t580;
t24 = t514 - t543;
t22 = t515 - t544;
t21 = -t527 + t604;
t20 = t662 + t766 / 0.2e1 + t604;
t19 = -t528 + t605;
t18 = t855 * t819 + t767 / 0.2e1 + t605;
t12 = t516 + t885;
t11 = t785 + t93 + t688 * (-t337 * t459 + t461 * t855);
t9 = t207 * t650 + t206 * t652 - t791 / 0.2e1 + t513;
t3 = t344 * t650 + t342 * t652 - t790 / 0.2e1 + t518;
t1 = t344 * t739 / 0.2e1 - t494 * t765 / 0.2e1 + t756 / 0.2e1 + t517;
t48 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t60 + t688 * t875, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t625, -t667, 0, 0, 0, 0, 0 (-t511 * t644 - t512 * t690) * t506 (t509 * t644 - t512 * t689) * t506, 0, 0, 0, 0, 0, t287 * t688 + t466 * t625, t286 * t688 + t625 * t870 (t342 * t466 + t396 * t751) * qJD(2) + t53 * qJD(3) + t51 * qJD(4) (-t344 * t466 + t754 * t870) * qJD(2) + t56 * qJD(3) + t54 * qJD(4), t688 * t71 - (t342 * t507 + t344 * t505) * t708, t722 + (t190 * t342 + t191 * t344 + t396 * t615) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t92 * qJD(5), 0, 0, 0, 0, 0 ((t726 - t733) * t466 + t396 * t563) * qJD(2) + t19 * qJD(3) + t18 * qJD(4) + t43 * qJD(6) (-(t725 + t734) * t466 + t396 * t338) * qJD(2) + t21 * qJD(3) + t20 * qJD(4) + t42 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t445 - t509 * t667, qJD(3) * t548 - t511 * t667, 0, 0, 0, 0, 0, qJD(4) * t217 + t277 - t705, t869, qJD(2) * t53 + qJD(4) * t146 - t507 * t705, qJD(2) * t56 + qJD(4) * t143 + t505 * t705, t82 * qJD(4) - t485 * t704 + t67, t1 * qJD(2) + (-t416 * t616 + t499 * t522) * qJD(3) + t12 * qJD(4) + t883, 0, 0, 0, 0, 0, qJD(2) * t19 + qJD(4) * t124 + t459 * t705 + t881, qJD(2) * t21 + qJD(4) * t125 + t461 * t705 + t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t217 + t277 - t702, t869, qJD(2) * t51 + qJD(3) * t146 - t507 * t702, qJD(2) * t54 + qJD(3) * t143 + t505 * t702, qJD(3) * t82 - qJD(4) * t638 + t67, t3 * qJD(2) + t12 * qJD(3) + (-qJ(5) * t638 - t792) * qJD(4) + t883, 0, 0, 0, 0, 0, qJD(2) * t18 + qJD(3) * t124 + t459 * t702 + t881, qJD(2) * t20 + qJD(3) * t125 + t461 * t702 + t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t92 + t688 * t843, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43 * qJD(2) - qJD(6) * t591 + t688 * t877, t42 * qJD(2) - qJD(6) * t592 + t688 * t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688 * t284, -t688 * t285, qJD(3) * t52 + qJD(4) * t50, qJD(3) * t57 + qJD(4) * t55, t688 * t72, qJD(3) * t2 + qJD(4) * t4 - qJD(5) * t91 - t722, 0, 0, 0, 0, 0, -qJD(3) * t15 - qJD(4) * t14 - qJD(6) * t40, -qJD(3) * t17 - qJD(4) * t16 - qJD(6) * t41; 0, 0, 0, 0, t509 * t689, t486 * qJD(3), 0, 0, 0, -pkin(2) * t690, -pkin(2) * t689, -t874, t688 * t323, 0, 0, 0, qJD(3) * t353 + t700 * t870, qJD(3) * t354 - t466 * t700, qJD(3) * t61 + qJD(4) * t63 - t440 * t870, qJD(3) * t62 + qJD(4) * t64 + t699 * t751, -qJD(3) * t30 - qJD(4) * t35 + qJD(5) * t218, qJD(3) * t36 + qJD(4) * t38 - qJD(5) * t88 (t337 * t688 - t833) * t338, qJD(6) * t116 + t688 * t95, t133 * t688 - t563 * t697, t132 * t688 - t338 * t697, t874, qJD(3) * t5 + qJD(4) * t7 + qJD(6) * t45 + t332 * t699, qJD(3) * t6 + qJD(4) * t8 + qJD(6) * t44 + t563 * t699; 0, 0, 0, 0, t666, t691, t689, -t690, 0, -pkin(8) * t689 - t682, pkin(8) * t690 - t681, -t386, t693, -t371, -t846, 0, -qJD(3) * t617 + qJD(4) * t325 - t837, t710 + t861 (t505 * t590 - t848) * qJD(3) + t77 * qJD(4) - t349 + t600 (t507 * t590 + t849) * qJD(3) + t78 * qJD(4) - t440 + t598, qJD(3) * t595 + qJD(4) * t46 - t835 (t494 * t595 + t499 * t617) * qJD(3) + t9 * qJD(4) + t865 + t609, t39, t11, t66, t65, -t298 (-t750 - t764 + t852) * qJD(3) + t22 * qJD(4) - t187 + t29 * qJD(6) + t612 (t749 - t763 + t851) * qJD(3) + t24 * qJD(4) + t184 + t28 * qJD(6) + t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t693, -t371, -t846, 0, qJD(3) * t325 - qJD(4) * t617 - t839, -t669 + t861, t77 * qJD(3) + (t505 * t614 - t848) * qJD(4) - t349 + t601, t78 * qJD(3) + (t507 * t614 + t849) * qJD(4) - t440 + t599, qJD(3) * t46 + qJD(4) * t594 - t836, t9 * qJD(3) + (qJ(5) * t594 - t791) * qJD(4) + t865 + t608, t39, t11, t66, t65, -t298, t22 * qJD(3) + (-t746 - t761 + t852) * qJD(4) - t187 + t34 * qJD(6) + t613, t24 * qJD(3) + (t745 - t760 + t851) * qJD(4) + t184 + t33 * qJD(6) + t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357 * t688 - t626 (t505 * t708 - t507 * t688) * t466, t696, t688 * t841 - t597, 0, 0, 0, 0, 0, qJD(6) * t167 + t672 - t856, qJD(6) * t166 + t205 * t688 + t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, t831, t204 * t688 + t563 * t633, t338 * t633 + t857, t364, qJD(3) * t29 + qJD(4) * t34 + qJD(5) * t167 - qJD(6) * t74 - t603, qJD(3) * t28 + qJD(4) * t33 + qJD(5) * t166 + qJD(6) * t73 - t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t322 + t270, t272, -qJD(2) * t52, -qJD(2) * t57, -t69, -qJD(2) * t2 + qJD(4) * t13 + t882, 0, 0, 0, 0, 0, qJD(2) * t15 - qJD(6) * t101, qJD(2) * t17 - qJD(6) * t103; 0, 0, 0, 0, -t666, -t691, 0, 0, 0, t682, t681, t386, -t693, 0, 0, 0, qJD(4) * t388 + t837, t694 - t710, qJD(4) * t76 - t600, qJD(4) * t79 - t598, qJD(4) * t47 + t835, qJD(4) * t10 - t609 - t867, t75, t37, t81, t80, t298, qJD(4) * t23 - qJD(6) * t26 + t188 - t612, qJD(4) * t25 - qJD(6) * t27 + t185 - t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t632, -pkin(3) * t641, -t507 * t632, t484, t720, qJD(4) * t346 + qJD(5) * t416, -t379, t301, 0, 0, 0, t478 * t698 + t432, -t447 * t478 + t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547 - t588 (-t642 - t641) * pkin(3), t507 * t547 + t589, t484 - t538, -t552 + t720 (-pkin(4) * t795 + qJ(5) * t562) * pkin(3) * qJD(4) + t341 * qJD(5) + t554, -t379, t301, 0, 0, 0, qJD(6) * t197 + t432 - t540, qJD(6) * t196 + t433 - t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, qJD(4) * t341 - t553, 0, 0, 0, 0, 0, t189, t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t58, t149, t150, -t692, qJD(4) * t197 - qJD(6) * t345 - t546, qJD(4) * t196 + qJD(6) * t343 - t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t322 + t270, t272, -qJD(2) * t50, -qJD(2) * t55, -t69, -qJD(2) * t4 - qJD(3) * t13 + t882, 0, 0, 0, 0, 0, qJD(2) * t14 - qJD(6) * t100, qJD(2) * t16 - qJD(6) * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t386, -t693, 0, 0, 0, -qJD(3) * t388 + t839, t694 + t669, -qJD(3) * t76 - t601, -qJD(3) * t79 - t599, -qJD(3) * t47 + t836, -qJD(3) * t10 - t608 - t867, t75, t37, t81, t80, t298, -qJD(3) * t23 - qJD(6) * t31 + t188 - t613, -qJD(3) * t25 - qJD(6) * t32 + t185 - t611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t631 + t588, pkin(3) * t642, t507 * t631 - t589, t538, t481 + t552, -qJD(5) * t340 - t554, -t379, t301, 0, 0, 0, -qJD(6) * t194 + t540, -qJD(6) * t195 + t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, t477 * qJD(5), -t379, t301, 0, 0, 0, t495 * t698, -t495 * t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, -t541, 0, 0, 0, 0, 0, t189, t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t58, t149, t150, -t692, -qJD(6) * t385 - t532, qJD(6) * t384 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t91 + t688 * t844, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t626, -t505 * t386, -t696, t688 * t842 + t597, 0, 0, 0, 0, 0, -qJD(6) * t164 - t672 - t857, -t203 * t688 - t670 - t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t845, qJD(4) * t340 + t553, 0, 0, 0, 0, 0, t147, t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t845, t541, 0, 0, 0, 0, 0, t147, t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, -t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t40 + qJD(3) * t101 + qJD(4) * t100, qJD(2) * t41 + qJD(3) * t103 + qJD(4) * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, -t831, t202 * t688 + t670, t338 * t709 + t856, t364, qJD(3) * t26 + qJD(4) * t31 + qJD(5) * t164 + t603, qJD(3) * t27 + qJD(4) * t32 + qJD(5) * t563 + t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t58, t183, t182, t692, qJD(4) * t194 - t448 + t546, qJD(4) * t195 + t446 + t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t58, t183, t182, t692, -t448 + t532, t446 + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t868, t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
