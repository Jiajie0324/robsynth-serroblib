% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR10_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:27:54
% EndTime: 2019-03-09 16:28:14
% DurationCPUTime: 7.44s
% Computational Cost: add. (8310->553), mult. (21925->761), div. (0->0), fcn. (16808->10), ass. (0->248)
t248 = sin(pkin(6));
t256 = cos(qJ(2));
t331 = qJD(1) * t256;
t313 = t248 * t331;
t225 = -qJD(3) + t313;
t252 = sin(qJ(3));
t255 = cos(qJ(3));
t357 = cos(pkin(6));
t304 = t357 * qJD(1);
t274 = t304 + qJD(2);
t253 = sin(qJ(2));
t332 = qJD(1) * t248;
t314 = t253 * t332;
t171 = t252 * t274 + t255 * t314;
t164 = qJD(6) + t171;
t263 = t255 * t274;
t169 = t252 * t314 - t263;
t247 = sin(pkin(11));
t249 = cos(pkin(11));
t126 = t249 * t169 + t225 * t247;
t127 = t169 * t247 - t225 * t249;
t251 = sin(qJ(6));
t254 = cos(qJ(6));
t379 = t126 * t254 - t127 * t251;
t386 = t379 * t164;
t292 = pkin(1) * t304;
t233 = t253 * t292;
t193 = pkin(8) * t313 + t233;
t295 = t252 * t313;
t327 = qJD(3) * t252;
t385 = qJD(4) * t252 + t193 + (t295 - t327) * pkin(3);
t205 = t247 * t254 + t249 * t251;
t198 = t205 * qJD(6);
t360 = -t205 * t171 - t198;
t190 = -pkin(8) * t314 + t256 * t292;
t270 = (pkin(2) * t253 - pkin(9) * t256) * t248;
t191 = qJD(1) * t270;
t302 = -t252 * t190 + t191 * t255;
t372 = pkin(3) + qJ(5);
t310 = t372 * t253;
t326 = qJD(3) * t255;
t342 = t255 * t256;
t374 = pkin(4) + pkin(9);
t384 = t374 * t326 - (pkin(4) * t342 - t310) * t332 + t302;
t383 = qJD(5) * t255 + t385 + t225 * (-qJ(4) * t255 + qJ(5) * t252);
t323 = qJD(1) * qJD(2);
t308 = t248 * t323;
t291 = t256 * t308;
t347 = t248 * t253;
t317 = t252 * t347;
t293 = qJD(3) * t317;
t130 = qJD(1) * t293 - qJD(3) * t263 - t255 * t291;
t276 = t247 * t251 - t249 * t254;
t324 = qJD(6) * t254;
t325 = qJD(6) * t251;
t359 = -t171 * t276 - t247 * t325 + t249 * t324;
t382 = t205 * t130 - t164 * t359;
t278 = -t126 * t251 - t127 * t254;
t381 = t164 * t278;
t152 = pkin(9) * t274 + t193;
t185 = (-pkin(2) * t256 - pkin(9) * t253 - pkin(1)) * t248;
t163 = qJD(1) * t185;
t89 = t252 * t152 - t255 * t163;
t341 = -qJD(4) - t89;
t365 = t383 * t247 + t384 * t249;
t364 = t384 * t247 - t383 * t249;
t228 = t253 * t308;
t281 = pkin(3) * t228;
t192 = qJD(2) * t270;
t179 = qJD(1) * t192;
t306 = t256 * t357;
t376 = pkin(1) * t306 - pkin(8) * t347;
t194 = t376 * qJD(2);
t180 = qJD(1) * t194;
t298 = t152 * t326 + t163 * t327 - t255 * t179 + t252 * t180;
t51 = -t281 + t298;
t217 = t225 * qJ(4);
t90 = t255 * t152 + t252 * t163;
t84 = t217 - t90;
t378 = -t225 * t84 + t51;
t328 = qJD(3) * t171;
t131 = t252 * t291 + t328;
t375 = t130 * t276 + t360 * t164;
t339 = pkin(4) * t171 - t341;
t104 = -t249 * t131 + t228 * t247;
t105 = t131 * t247 + t228 * t249;
t22 = -qJD(6) * t278 + t254 * t104 + t251 * t105;
t168 = t171 ^ 2;
t257 = qJD(1) ^ 2;
t373 = pkin(10) * t249;
t371 = -pkin(10) - t372;
t181 = pkin(8) * t291 + qJD(2) * t233;
t262 = qJ(4) * t130 - qJD(4) * t171 + t181;
t29 = qJD(5) * t169 + t131 * t372 + t262;
t290 = qJD(2) * t310;
t30 = -pkin(4) * t130 + qJD(5) * t225 - t290 * t332 + t298;
t10 = t247 * t30 + t249 * t29;
t346 = t248 * t256;
t311 = qJD(2) * t346;
t143 = -t293 + (qJD(3) * t357 + t311) * t255;
t297 = t357 * t253 * pkin(1);
t184 = pkin(8) * t346 + pkin(9) * t357 + t297;
t272 = -t184 * t326 - t185 * t327 + t192 * t255 - t252 * t194;
t43 = pkin(4) * t143 + (qJD(5) * t256 - t290) * t248 - t272;
t201 = t252 * t357 + t255 * t347;
t142 = qJD(3) * t201 + t252 * t311;
t200 = -t255 * t357 + t317;
t195 = pkin(8) * t311 + qJD(2) * t297;
t261 = -qJ(4) * t143 - qJD(4) * t201 + t195;
t44 = qJD(5) * t200 + t142 * t372 + t261;
t13 = t247 * t43 + t249 * t44;
t56 = t225 * t372 + t339;
t151 = -pkin(2) * t274 - t190;
t258 = -t171 * qJ(4) + t151;
t61 = t169 * t372 + t258;
t18 = t247 * t56 + t249 * t61;
t303 = -t252 * t184 + t185 * t255;
t102 = pkin(3) * t346 - t303;
t73 = pkin(4) * t201 + qJ(5) * t346 + t102;
t183 = -pkin(2) * t357 - t376;
t259 = -t201 * qJ(4) + t183;
t79 = t200 * t372 + t259;
t37 = t247 * t73 + t249 * t79;
t72 = -pkin(4) * t169 + t90;
t354 = t169 * qJ(4);
t82 = t171 * t372 + t354;
t38 = t247 * t72 + t249 * t82;
t78 = t169 * pkin(3) + t258;
t369 = t171 * t78;
t221 = qJ(4) * t228;
t299 = t152 * t327 - t163 * t326 - t252 * t179 - t255 * t180;
t280 = -qJD(4) * t225 - t299;
t49 = -t221 - t280;
t32 = -pkin(4) * t131 - t49;
t367 = t247 * t32;
t366 = t249 * t32;
t154 = t247 * t314 - t249 * t295;
t343 = t252 * t256;
t155 = (t247 * t343 + t249 * t253) * t332;
t187 = t276 * t255;
t363 = qJD(6) * t187 + t154 * t251 - t155 * t254 + t205 * t327;
t362 = t254 * t154 + t155 * t251 + t255 * t198 - t276 * t327;
t315 = -pkin(5) * t249 - pkin(4);
t334 = t255 * t190 + t252 * t191;
t107 = -qJ(4) * t314 - t334;
t87 = -pkin(4) * t295 - t107;
t361 = -pkin(5) * t154 + (-pkin(9) + t315) * t327 - t87;
t358 = -t374 * t327 - t87;
t62 = qJD(5) - t217 + t72;
t356 = qJD(3) * t62;
t355 = t130 * t372;
t353 = t169 * t225;
t352 = t171 * t169;
t351 = t171 * t225;
t267 = t225 * t255;
t244 = t248 ^ 2;
t349 = t244 * t257;
t344 = t249 * t255;
t340 = -t171 * t315 - t341;
t338 = qJD(5) - t62;
t294 = t255 * t313;
t337 = (-t294 + t326) * qJ(4) + t385;
t335 = t255 * t184 + t252 * t185;
t307 = -t252 * qJ(4) - pkin(2);
t204 = -t255 * t372 + t307;
t226 = t374 * t252;
t135 = t249 * t204 + t247 * t226;
t227 = t374 * t255;
t333 = t253 ^ 2 - t256 ^ 2;
t330 = qJD(2) * t253;
t329 = qJD(2) * t255;
t322 = pkin(9) * t225 * t252;
t321 = pkin(9) * t267;
t320 = pkin(9) * t330;
t319 = pkin(9) * t329;
t318 = t253 * t349;
t312 = t248 * t330;
t309 = t244 * t323;
t9 = -t247 * t29 + t249 * t30;
t12 = -t247 * t44 + t249 * t43;
t17 = -t247 * t61 + t249 * t56;
t35 = -t247 * t79 + t249 * t73;
t300 = 0.2e1 * t309;
t209 = t249 * t226;
t117 = t252 * pkin(5) + t209 + (pkin(10) * t255 - t204) * t247;
t289 = -pkin(10) * t154 - qJD(6) * t117 - t327 * t373 - t364;
t129 = -pkin(10) * t344 + t135;
t288 = pkin(5) * t294 - pkin(10) * t155 + qJD(6) * t129 - (-pkin(10) * t247 * t252 + pkin(5) * t255) * qJD(3) - t365;
t287 = -0.2e1 * pkin(1) * t309;
t6 = -pkin(5) * t130 - pkin(10) * t105 + t9;
t7 = -pkin(10) * t104 + t10;
t286 = t251 * t6 + t254 * t7;
t285 = t10 * t247 + t249 * t9;
t14 = pkin(5) * t171 - pkin(10) * t127 + t17;
t15 = pkin(10) * t126 + t18;
t3 = t14 * t254 - t15 * t251;
t4 = t14 * t251 + t15 * t254;
t284 = -t17 * t247 + t18 * t249;
t141 = -t200 * t247 + t249 * t346;
t20 = pkin(5) * t201 + pkin(10) * t141 + t35;
t140 = t200 * t249 + t247 * t346;
t23 = pkin(10) * t140 + t37;
t283 = t20 * t254 - t23 * t251;
t282 = t20 * t251 + t23 * t254;
t277 = t254 * t140 + t141 * t251;
t86 = t140 * t251 - t141 * t254;
t273 = 0.2e1 * t304 + qJD(2);
t101 = qJ(4) * t346 - t335;
t214 = t371 * t247;
t68 = t249 * t72;
t269 = qJD(5) * t249 + qJD(6) * t214 - t169 * pkin(5) + t68 + (-pkin(10) * t171 - t82) * t247;
t215 = t371 * t249;
t268 = qJD(5) * t247 - qJD(6) * t215 + t171 * t373 + t38;
t21 = -t251 * t104 + t254 * t105 + t126 * t324 - t127 * t325;
t265 = -t225 * t90 - t298;
t264 = -t184 * t327 + t185 * t326 + t252 * t192 + t255 * t194;
t81 = -pkin(4) * t200 - t101;
t2 = -qJD(6) * t4 - t251 * t7 + t254 * t6;
t260 = -t130 - t353;
t54 = -qJ(4) * t312 + qJD(4) * t346 - t264;
t45 = -pkin(4) * t142 - t54;
t239 = pkin(5) * t247 + qJ(4);
t220 = -pkin(3) * t255 + t307;
t197 = pkin(5) * t344 + t227;
t188 = t205 * t255;
t134 = -t204 * t247 + t209;
t128 = t130 * t252;
t115 = t142 * t247 + t249 * t312;
t114 = -t142 * t249 + t247 * t312;
t113 = pkin(3) * t171 + t354;
t108 = -pkin(3) * t314 - t302;
t103 = t130 * t201;
t100 = t200 * pkin(3) + t259;
t83 = pkin(3) * t225 - t341;
t60 = pkin(3) * t142 + t261;
t58 = -pkin(3) * t312 - t272;
t57 = -pkin(5) * t140 + t81;
t50 = pkin(3) * t131 + t262;
t46 = -pkin(5) * t126 + t62;
t36 = -t247 * t82 + t68;
t34 = qJD(6) * t86 + t254 * t114 + t251 * t115;
t33 = qJD(6) * t277 - t251 * t114 + t254 * t115;
t26 = pkin(5) * t114 + t45;
t16 = pkin(5) * t104 + t32;
t11 = -pkin(10) * t114 + t13;
t8 = pkin(5) * t143 - pkin(10) * t115 + t12;
t1 = qJD(6) * t3 + t286;
t5 = [0, 0, 0, t253 * t256 * t300, -t333 * t300, t273 * t311, -t273 * t312, 0, -t181 * t357 - t195 * t274 + t253 * t287, -t180 * t357 - t194 * t274 + t256 * t287, t143 * t171 - t103, t130 * t200 - t131 * t201 - t142 * t171 - t143 * t169, -t143 * t225 + (t130 * t256 + (qJD(1) * t201 + t171) * t330) * t248, t142 * t225 + (t131 * t256 + (-qJD(1) * t200 - t169) * t330) * t248 (-t225 * t248 - t244 * t331) * t330, -t272 * t225 + t195 * t169 + t183 * t131 + t181 * t200 + t151 * t142 + (t298 * t256 + (qJD(1) * t303 - t89) * t330) * t248, t264 * t225 + t195 * t171 - t183 * t130 + t181 * t201 + t151 * t143 + (-t299 * t256 + (-qJD(1) * t335 - t90) * t330) * t248, t101 * t131 - t102 * t130 + t142 * t84 + t143 * t83 + t169 * t54 + t171 * t58 + t200 * t49 + t201 * t51, -t100 * t131 - t142 * t78 - t169 * t60 - t200 * t50 - t225 * t58 + (-t256 * t51 + (qJD(1) * t102 + t83) * t330) * t248, t100 * t130 - t143 * t78 - t171 * t60 - t201 * t50 + t225 * t54 + (t256 * t49 + (-qJD(1) * t101 - t84) * t330) * t248, t100 * t50 + t101 * t49 + t102 * t51 + t54 * t84 + t58 * t83 + t60 * t78, t104 * t81 + t114 * t62 + t12 * t171 - t126 * t45 - t130 * t35 - t140 * t32 + t143 * t17 + t201 * t9, -t10 * t201 + t105 * t81 + t115 * t62 + t127 * t45 - t13 * t171 + t130 * t37 - t141 * t32 - t143 * t18, t10 * t140 - t104 * t37 - t105 * t35 - t114 * t18 - t115 * t17 - t12 * t127 + t126 * t13 + t141 * t9, t10 * t37 + t12 * t17 + t13 * t18 + t32 * t81 + t35 * t9 + t45 * t62, t21 * t86 - t278 * t33, t21 * t277 - t22 * t86 + t278 * t34 + t33 * t379, -t130 * t86 - t143 * t278 + t164 * t33 + t201 * t21, -t130 * t277 + t143 * t379 - t164 * t34 - t201 * t22, t143 * t164 - t103 (-qJD(6) * t282 - t251 * t11 + t254 * t8) * t164 - t283 * t130 + t2 * t201 + t3 * t143 - t26 * t379 + t57 * t22 - t16 * t277 + t46 * t34 -(qJD(6) * t283 + t254 * t11 + t251 * t8) * t164 + t282 * t130 - t1 * t201 - t4 * t143 - t26 * t278 + t57 * t21 + t16 * t86 + t46 * t33; 0, 0, 0, -t256 * t318, t333 * t349, -t248 * t257 * t306, t274 * t314 - t228, 0, pkin(1) * t318 + t193 * t274 - t181, pkin(8) * t228 + t190 * t274 + (-qJD(2) * t304 + t349) * t256 * pkin(1), -t171 * t267 - t128 (-t130 + t353) * t255 + (-t131 + t351) * t252, -t225 * t326 + (t225 * t342 + (t252 * qJD(2) - t171) * t253) * t332, t225 * t327 + (-t225 * t343 + (t169 + t329) * t253) * t332, t225 * t314, -pkin(2) * t131 - t181 * t255 + t302 * t225 - t193 * t169 + (t151 * t252 + t321) * qJD(3) + (t89 * t253 + (-t151 * t256 - t320) * t252) * t332, pkin(2) * t130 + t181 * t252 - t334 * t225 - t193 * t171 + (t151 * t255 - t322) * qJD(3) + (-t151 * t342 + (t90 - t319) * t253) * t332, -t107 * t169 - t108 * t171 + (-t49 - t225 * t83 + (-t131 + t328) * pkin(9)) * t255 + ((qJD(3) * t169 - t130) * pkin(9) + t378) * t252, t108 * t225 - t131 * t220 + t255 * t50 + t337 * t169 + (-t252 * t78 - t321) * qJD(3) + (-t253 * t83 + (t256 * t78 + t320) * t252) * t332, -t107 * t225 + t130 * t220 - t252 * t50 + t337 * t171 + (-t255 * t78 + t322) * qJD(3) + (t78 * t342 + (t84 + t319) * t253) * t332, -t107 * t84 - t108 * t83 + t220 * t50 - t337 * t78 + (t252 * t51 - t255 * t49 + (t252 * t84 + t255 * t83) * qJD(3)) * pkin(9), t104 * t227 - t130 * t134 - t154 * t62 + (-t249 * t356 + t9) * t252 + t365 * t171 - t358 * t126 + (-t17 * t225 + t366) * t255, t105 * t227 + t130 * t135 - t155 * t62 + (t247 * t356 - t10) * t252 - t364 * t171 + t358 * t127 + (t18 * t225 - t367) * t255, -t104 * t135 - t105 * t134 + t154 * t18 + t155 * t17 + (-t10 * t249 + t247 * t9) * t255 - t365 * t127 + t364 * t126 + t284 * t327, t10 * t135 + t134 * t9 + t17 * t365 + t18 * t364 + t227 * t32 + t358 * t62, -t21 * t188 - t278 * t363, t187 * t21 + t188 * t22 - t278 * t362 + t363 * t379, t130 * t188 + t164 * t363 + t21 * t252 + t267 * t278, -t130 * t187 + t164 * t362 - t22 * t252 - t267 * t379, -t164 * t267 - t128 -(t117 * t254 - t129 * t251) * t130 + t2 * t252 + t197 * t22 - t16 * t187 - t361 * t379 - t362 * t46 - t3 * t267 + (t251 * t289 - t254 * t288) * t164 (t117 * t251 + t129 * t254) * t130 - t1 * t252 + t197 * t21 - t16 * t188 - t361 * t278 + t363 * t46 + t4 * t267 + (t251 * t288 + t254 * t289) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t352, -t169 ^ 2 + t168, t260, -t351 - t131, t228, -t151 * t171 + t265, t151 * t169 + t225 * t89 + t299, pkin(3) * t130 - qJ(4) * t131 + (-t84 - t90) * t171 + (t83 + t341) * t169, t113 * t169 - t265 - 0.2e1 * t281 + t369, t113 * t171 - t169 * t78 + t225 * t341 + 0.2e1 * t221 + t280, -pkin(3) * t51 - qJ(4) * t49 - t113 * t78 + t341 * t84 - t83 * t90, t249 * t355 + qJ(4) * t104 + t169 * t17 + t367 - t339 * t126 + (-t249 * t338 - t36) * t171, -t247 * t355 + qJ(4) * t105 - t169 * t18 + t366 + t339 * t127 + (t247 * t338 + t38) * t171, -t126 * t38 + t127 * t36 + (qJD(5) * t127 + t105 * t372 - t171 * t18 - t9) * t249 + (-qJD(5) * t126 + t104 * t372 + t17 * t171 - t10) * t247, qJ(4) * t32 - t17 * t36 - t18 * t38 + t339 * t62 - t285 * t372 + (-t17 * t249 - t18 * t247) * qJD(5), -t21 * t276 - t278 * t360, -t205 * t21 + t22 * t276 + t278 * t359 + t360 * t379, -t169 * t278 + t375, t169 * t379 + t382, t164 * t169 -(-t214 * t251 + t215 * t254) * t130 + t239 * t22 + t16 * t205 + t3 * t169 - t340 * t379 + t359 * t46 + (t251 * t268 - t254 * t269) * t164 (t214 * t254 + t215 * t251) * t130 + t239 * t21 - t16 * t276 - t4 * t169 - t340 * t278 + t360 * t46 + (t251 * t269 + t254 * t268) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t228 - t352, -t225 ^ 2 - t168, t369 + t378, -t126 * t225 - t130 * t249 - t168 * t247, t127 * t225 + t130 * t247 - t168 * t249, -t247 * t104 - t249 * t105 + (t126 * t249 + t127 * t247) * t171, t171 * t284 + t225 * t62 + t285, 0, 0, 0, 0, 0, -t225 * t379 + t375, -t225 * t278 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127 * t171 + t104, t126 * t171 + t105, -t126 ^ 2 - t127 ^ 2, -t126 * t18 + t127 * t17 + t32, 0, 0, 0, 0, 0, t22 - t381, t21 + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278 * t379, t278 ^ 2 - t379 ^ 2, t21 - t386, -t22 - t381, -t130, t164 * t4 + t278 * t46 + t2, -t46 * t379 - t286 + (-qJD(6) + t164) * t3;];
tauc_reg  = t5;
