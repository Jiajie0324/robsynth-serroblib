% Calculate vector of inverse dynamics joint torques for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPPR10_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPPR10_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRRPPR10_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:28:25
% EndTime: 2019-03-09 16:28:52
% DurationCPUTime: 20.74s
% Computational Cost: add. (10818->821), mult. (26288->1078), div. (0->0), fcn. (20776->14), ass. (0->320)
t794 = sin(pkin(6));
t803 = cos(qJ(2));
t923 = qJD(1) * t803;
t897 = t794 * t923;
t752 = -qJD(3) + t897;
t799 = sin(qJ(2));
t971 = cos(pkin(6));
t884 = t971 * qJD(1);
t866 = pkin(1) * t884;
t707 = pkin(8) * t897 + t799 * t866;
t798 = sin(qJ(3));
t869 = t798 * t897;
t920 = qJD(3) * t798;
t997 = -qJD(4) * t798 - t707 + (-t869 + t920) * pkin(3);
t802 = cos(qJ(3));
t842 = t884 + qJD(2);
t924 = qJD(1) * t794;
t898 = t799 * t924;
t680 = t798 * t898 - t802 * t842;
t793 = sin(pkin(11));
t795 = cos(pkin(11));
t634 = t795 * t680 + t752 * t793;
t801 = cos(qJ(6));
t635 = t680 * t793 - t752 * t795;
t797 = sin(qJ(6));
t964 = t635 * t797;
t564 = -t634 * t801 + t964;
t682 = t798 * t842 + t802 * t898;
t675 = qJD(6) + t682;
t996 = t564 * t675;
t704 = -pkin(8) * t898 + t803 * t866;
t684 = t798 * t704;
t859 = pkin(2) * t799 - pkin(9) * t803;
t705 = t859 * t924;
t877 = -t705 * t802 + t684;
t974 = pkin(3) + qJ(5);
t893 = t974 * t799;
t919 = qJD(3) * t802;
t940 = t802 * t803;
t980 = pkin(4) + pkin(9);
t995 = -(pkin(4) * t940 - t893) * t924 - t877 + t980 * t919;
t994 = qJD(5) * t802 - t997 + t752 * (-qJ(4) * t802 + qJ(5) * t798);
t728 = t793 * t801 + t795 * t797;
t717 = t728 * qJD(6);
t930 = -t728 * t682 - t717;
t824 = qJD(3) * t842;
t876 = t971 * qJDD(1);
t837 = t876 + qJDD(2);
t948 = t794 * t799;
t906 = t798 * t948;
t867 = qJD(3) * t906;
t911 = qJDD(1) * t799;
t889 = t794 * t911;
t912 = qJD(1) * qJD(2);
t890 = t803 * t912;
t989 = t794 * t890 + t889;
t596 = qJD(1) * t867 - t798 * t837 + (-t824 - t989) * t802;
t593 = -qJDD(6) + t596;
t844 = t793 * t797 - t795 * t801;
t917 = qJD(6) * t801;
t918 = qJD(6) * t797;
t929 = -t682 * t844 - t793 * t918 + t795 * t917;
t993 = t728 * t593 - t675 * t929;
t887 = -qJ(4) * t798 - pkin(2);
t846 = -t634 * t797 - t635 * t801;
t991 = t675 * t846;
t667 = pkin(9) * t842 + t707;
t839 = -pkin(2) * t803 - pkin(9) * t799 - pkin(1);
t674 = t839 * t924;
t594 = t667 * t798 - t802 * t674;
t916 = -qJD(4) - t594;
t800 = sin(qJ(1));
t979 = cos(qJ(1));
t861 = t971 * t979;
t722 = t799 * t861 + t800 * t803;
t899 = t794 * t979;
t653 = t722 * t798 + t802 * t899;
t721 = t799 * t800 - t803 * t861;
t790 = pkin(11) + qJ(6);
t784 = sin(t790);
t785 = cos(t790);
t988 = t653 * t784 + t721 * t785;
t987 = t653 * t785 - t721 * t784;
t921 = qJD(2) * t803;
t597 = t794 * (qJD(1) * (t798 * t921 + t799 * t919) + t798 * t911) + t798 * t824 - t802 * t837;
t939 = t793 * t994 + t795 * t995;
t938 = t793 * t995 - t795 * t994;
t910 = qJDD(1) * t803;
t771 = t794 * t910;
t891 = t799 * t912;
t864 = t794 * t891;
t700 = qJDD(3) - t771 + t864;
t690 = t700 * qJ(4);
t985 = qJD(4) * t752 - t690;
t885 = t803 * t971;
t835 = pkin(1) * t885 - pkin(8) * t948;
t984 = (qJDD(2) + 0.2e1 * t876) * t794;
t983 = t593 * t844 + t675 * t930;
t914 = pkin(4) * t682 - t916;
t982 = -pkin(4) * t597 + qJDD(5);
t679 = t682 ^ 2;
t804 = qJD(1) ^ 2;
t978 = pkin(3) * t700;
t976 = pkin(9) * t700;
t975 = pkin(10) * t795;
t973 = -pkin(10) - t974;
t972 = pkin(9) * qJD(3);
t970 = qJ(4) * t680;
t595 = t802 * t667 + t798 * t674;
t740 = t752 * qJ(4);
t587 = t740 - t595;
t968 = t587 * t752;
t967 = t595 * t752;
t966 = t596 * t974;
t963 = t680 * t682;
t962 = t680 * t752;
t961 = t682 * t752;
t719 = -t802 * t971 + t906;
t960 = t719 * qJ(5);
t957 = t721 * t802;
t723 = t799 * t979 + t800 * t885;
t956 = t723 * t802;
t954 = t752 * t802;
t953 = t784 * t798;
t952 = t785 * t798;
t789 = t794 ^ 2;
t951 = t789 * t804;
t949 = t793 * t798;
t947 = t794 * t800;
t946 = t794 * t802;
t945 = t794 * t803;
t944 = t795 * t798;
t942 = t795 * t802;
t941 = t798 * t803;
t865 = pkin(1) * qJD(2) * t971;
t838 = qJD(1) * t865;
t862 = pkin(1) * t876;
t901 = pkin(8) * t771 + t799 * t862 + t803 * t838;
t817 = -pkin(8) * t864 + t901;
t619 = pkin(9) * t837 + t817;
t832 = t859 * qJD(2);
t622 = (qJD(1) * t832 + qJDD(1) * t839) * t794;
t873 = t798 * t619 - t802 * t622 + t667 * t919 + t674 * t920;
t840 = qJDD(4) + t873;
t516 = -pkin(4) * t596 + qJD(5) * t752 - t700 * t974 + t840;
t872 = pkin(8) * t989 + t799 * t838 - t803 * t862;
t620 = -pkin(2) * t837 + t872;
t805 = t596 * qJ(4) - t682 * qJD(4) + t620;
t517 = t680 * qJD(5) + t597 * t974 + t805;
t504 = t793 * t516 + t795 * t517;
t894 = t794 * t921;
t652 = -t867 + (qJD(3) * t971 + t894) * t802;
t886 = t799 * t971;
t926 = pkin(1) * t886 + pkin(8) * t945;
t697 = pkin(9) * t971 + t926;
t927 = pkin(2) * t945 + pkin(9) * t948;
t698 = -pkin(1) * t794 - t927;
t706 = t794 * t832;
t708 = t835 * qJD(2);
t836 = -t697 * t919 - t698 * t920 + t706 * t802 - t798 * t708;
t543 = pkin(4) * t652 + (-qJD(2) * t893 + qJD(5) * t803) * t794 - t836;
t720 = t798 * t971 + t799 * t946;
t651 = qJD(3) * t720 + t798 * t894;
t709 = pkin(8) * t894 + t799 * t865;
t822 = -qJ(4) * t652 - qJD(4) * t720 + t709;
t544 = qJD(5) * t719 + t651 * t974 + t822;
t511 = t793 * t543 + t795 * t544;
t553 = t752 * t974 + t914;
t666 = -pkin(2) * t842 - t704;
t806 = -t682 * qJ(4) + t666;
t558 = t680 * t974 + t806;
t523 = t793 * t553 + t795 * t558;
t776 = pkin(3) * t945;
t878 = -t798 * t697 + t698 * t802;
t608 = t776 - t878;
t575 = pkin(4) * t720 + qJ(5) * t945 + t608;
t696 = -pkin(2) * t971 - t835;
t881 = -t719 * pkin(3) + t720 * qJ(4);
t606 = t696 - t881;
t582 = t606 + t960;
t537 = t793 * t575 + t795 * t582;
t574 = -pkin(4) * t680 + t595;
t585 = t682 * t974 + t970;
t538 = t793 * t574 + t795 * t585;
t669 = t793 * t898 - t795 * t869;
t833 = t793 * t941 + t795 * t799;
t670 = t833 * t924;
t701 = t844 * t802;
t937 = qJD(6) * t701 + t669 * t797 - t670 * t801 + t728 * t920;
t936 = -t801 * t669 - t670 * t797 - t717 * t802 + t844 * t920;
t934 = t802 * t697 + t798 * t698;
t933 = t802 * t704 + t798 * t705;
t610 = -qJ(4) * t898 - t933;
t590 = -pkin(4) * t869 - t610;
t900 = -pkin(5) * t795 - pkin(4);
t932 = -pkin(5) * t669 - t590 + (-pkin(9) + t900) * t920;
t727 = -t802 * t974 + t887;
t754 = t980 * t798;
t640 = t795 * t727 + t793 * t754;
t896 = t802 * t923;
t868 = t794 * t896;
t931 = (t868 - t919) * qJ(4) + t997;
t928 = -t980 * t920 - t590;
t755 = t980 * t802;
t791 = t799 ^ 2;
t925 = -t803 ^ 2 + t791;
t922 = qJD(2) * t799;
t915 = -t682 * t900 - t916;
t559 = qJD(5) + t574 - t740;
t913 = qJD(5) - t559;
t908 = qJ(4) * t945;
t907 = t803 * t951;
t567 = -t795 * t597 + t700 * t793;
t568 = t597 * t793 + t700 * t795;
t905 = -t797 * t567 + t801 * t568 + t634 * t917;
t904 = -pkin(3) * t957 + t721 * t887;
t903 = -pkin(3) * t956 + t723 * t887;
t895 = t794 * t922;
t892 = 0.2e1 * pkin(1) * t789;
t654 = t722 * t802 - t798 * t899;
t883 = -t653 * pkin(3) + qJ(4) * t654;
t724 = -t800 * t886 + t803 * t979;
t657 = t724 * t798 - t800 * t946;
t658 = t724 * t802 + t798 * t947;
t882 = -t657 * pkin(3) + qJ(4) * t658;
t503 = t795 * t516 - t517 * t793;
t501 = -pkin(5) * t596 - pkin(10) * t568 + t503;
t502 = -pkin(10) * t567 + t504;
t880 = t801 * t501 - t797 * t502;
t510 = t795 * t543 - t544 * t793;
t522 = t795 * t553 - t558 * t793;
t879 = t801 * t567 + t797 * t568;
t535 = t795 * t575 - t582 * t793;
t874 = -t802 * t619 - t798 * t622 + t667 * t920 - t674 * t919;
t871 = t802 * t776 + t798 * t908 + t927;
t860 = t794 * t804 * t971;
t858 = g(1) * t653 - g(2) * t657;
t857 = -g(1) * t654 + g(2) * t658;
t856 = -g(1) * t721 + g(2) * t723;
t855 = -g(1) * t724 - g(2) * t722;
t636 = -pkin(10) * t942 + t640;
t854 = pkin(5) * t868 - pkin(10) * t670 + qJD(6) * t636 - (pkin(5) * t802 - pkin(10) * t949) * qJD(3) - t939;
t732 = t795 * t754;
t626 = pkin(5) * t798 + t732 + (pkin(10) * t802 - t727) * t793;
t853 = -pkin(10) * t669 - qJD(6) * t626 - t920 * t975 - t938;
t851 = t797 * t501 + t801 * t502;
t850 = t503 * t795 + t504 * t793;
t515 = pkin(5) * t682 - pkin(10) * t635 + t522;
t521 = pkin(10) * t634 + t523;
t505 = t515 * t801 - t521 * t797;
t506 = t515 * t797 + t521 * t801;
t849 = -t522 * t793 + t523 * t795;
t650 = -t719 * t793 + t795 * t945;
t525 = pkin(5) * t720 + pkin(10) * t650 + t535;
t649 = t719 * t795 + t793 * t945;
t527 = pkin(10) * t649 + t537;
t848 = t525 * t801 - t527 * t797;
t847 = t525 * t797 + t527 * t801;
t845 = t801 * t649 + t650 * t797;
t589 = t649 * t797 - t650 * t801;
t841 = 0.2e1 * t884 + qJD(2);
t607 = t908 - t934;
t526 = t874 + t985;
t570 = t795 * t574;
t737 = t973 * t793;
t830 = qJD(5) * t795 + qJD(6) * t737 - pkin(5) * t680 + t570 + (-pkin(10) * t682 - t585) * t793;
t738 = t973 * t795;
t829 = qJD(5) * t793 - qJD(6) * t738 + t682 * t975 + t538;
t828 = t979 * pkin(1) + t724 * pkin(2) + t658 * pkin(3) + pkin(8) * t947 + qJ(4) * t657;
t827 = -t697 * t920 + t698 * t919 + t798 * t706 + t802 * t708;
t518 = -t635 * t918 + t905;
t826 = g(1) * t657 + g(2) * t653 + g(3) * t719;
t825 = -g(1) * t658 - g(2) * t654 - g(3) * t720;
t823 = t837 * MDP(8);
t820 = -g(1) * t723 - g(2) * t721 + g(3) * t945;
t584 = -pkin(4) * t719 - t607;
t520 = -t526 + t982;
t819 = t520 + t825;
t818 = -pkin(1) * t800 - t722 * pkin(2) - pkin(3) * t654 + pkin(8) * t899 - qJ(4) * t653;
t816 = -t666 * t752 - t976;
t580 = t680 * pkin(3) + t806;
t815 = t580 * t752 + t976;
t813 = t826 - t873;
t812 = -t825 + t874;
t519 = -qJD(6) * t846 + t879;
t811 = t752 * t972 - t820;
t551 = -qJ(4) * t895 + qJD(4) * t945 - t827;
t528 = t597 * pkin(3) + t805;
t810 = -t528 + t811;
t809 = -t596 - t962;
t808 = -t812 - t985;
t545 = -pkin(4) * t651 - t551;
t807 = t580 * t682 + qJDD(4) - t813;
t781 = pkin(5) * t793 + qJ(4);
t746 = -pkin(3) * t802 + t887;
t716 = pkin(5) * t942 + t755;
t702 = t728 * t802;
t639 = -t727 * t793 + t732;
t624 = t651 * t793 + t795 * t895;
t623 = -t651 * t795 + t793 * t895;
t621 = pkin(3) * t682 + t970;
t611 = -pkin(3) * t898 + t877;
t604 = t657 * t784 + t723 * t785;
t603 = t657 * t785 - t723 * t784;
t586 = pkin(3) * t752 - t916;
t557 = pkin(3) * t651 + t822;
t555 = -pkin(3) * t895 - t836;
t554 = -pkin(5) * t649 + t584;
t546 = -pkin(5) * t634 + t559;
t536 = -t585 * t793 + t570;
t534 = qJD(6) * t589 + t801 * t623 + t624 * t797;
t533 = qJD(6) * t845 - t623 * t797 + t624 * t801;
t531 = t840 - t978;
t530 = pkin(5) * t623 + t545;
t509 = pkin(5) * t567 + t520;
t508 = -pkin(10) * t623 + t511;
t507 = pkin(5) * t652 - pkin(10) * t624 + t510;
t499 = -qJD(6) * t506 + t880;
t498 = qJD(6) * t505 + t851;
t1 = [(-(qJD(6) * t848 + t507 * t797 + t508 * t801) * t675 + t847 * t593 - t498 * t720 - t506 * t652 - t530 * t846 + t554 * t518 + t509 * t589 + t546 * t533 + g(1) * t987 - g(2) * t603) * MDP(32) + (t803 * t984 - t841 * t895) * MDP(7) + (t799 * t984 + t841 * t894) * MDP(6) + (t518 * t720 + t533 * t675 - t589 * t593 - t652 * t846) * MDP(28) + (t518 * t589 - t533 * t846) * MDP(26) + (t518 * t845 - t519 * t589 - t533 * t564 + t534 * t846) * MDP(27) + (-t519 * t720 - t534 * t675 - t564 * t652 - t593 * t845) * MDP(29) + (t503 * t650 + t504 * t649 - t510 * t635 + t511 * t634 - t522 * t624 - t523 * t623 - t535 * t568 - t537 * t567 - t857) * MDP(24) + (t510 * t682 - t535 * t596 + t503 * t720 + t522 * t652 - t545 * t634 + t584 * t567 - t520 * t649 + t559 * t623 - g(1) * (-t653 * t793 - t721 * t795) - g(2) * (t657 * t793 + t723 * t795)) * MDP(22) + (-t511 * t682 + t537 * t596 - t504 * t720 - t523 * t652 + t545 * t635 + t584 * t568 - t520 * t650 + t559 * t624 - g(1) * (-t653 * t795 + t721 * t793) - g(2) * (t657 * t795 - t723 * t793)) * MDP(23) + (t504 * t537 + t523 * t511 + t503 * t535 + t522 * t510 + t520 * t584 + t559 * t545 - g(1) * (-qJ(5) * t654 - t721 * t980 + t818) - g(2) * (qJ(5) * t658 + t723 * t980 + t828)) * MDP(25) + (0.2e1 * (t799 * t910 - t912 * t925) * MDP(5) + (qJDD(1) * t791 + 0.2e1 * t799 * t890) * MDP(4)) * t789 + ((-qJD(6) * t847 + t507 * t801 - t508 * t797) * t675 - t848 * t593 + t499 * t720 + t505 * t652 + t530 * t564 + t554 * t519 - t509 * t845 + t546 * t534 + g(1) * t988 - g(2) * t604) * MDP(31) + t971 * t823 + (-t708 * t842 - t926 * t837 - t817 * t971 + (-t890 - t911) * t892 + t856) * MDP(10) + (-t709 * t842 + t835 * t837 - t872 * t971 + g(1) * t722 - g(2) * t724 + (-t891 + t910) * t892) * MDP(9) + (t827 * t752 - t934 * t700 + t709 * t682 - t696 * t596 + t620 * t720 + t666 * t652 + (-t595 * t922 - t803 * t874) * t794 - t858) * MDP(17) + (-t836 * t752 + t878 * t700 + t709 * t680 + t696 * t597 + t620 * t719 + t666 * t651 + (-t594 * t922 + t803 * t873) * t794 - t857) * MDP(16) + (t651 * t752 - t700 * t719 + (t597 * t803 - t680 * t922) * t794) * MDP(14) + (-t528 * t720 + t551 * t752 - t557 * t682 - t580 * t652 + t596 * t606 - t607 * t700 + (t526 * t803 - t587 * t922) * t794 + t858) * MDP(20) + (-t652 * t752 + t700 * t720 + (t596 * t803 + t682 * t922) * t794) * MDP(13) + (-t528 * t719 - t555 * t752 - t557 * t680 - t580 * t651 - t597 * t606 + t608 * t700 + (-t531 * t803 + t586 * t922) * t794 + t857) * MDP(19) + (t526 * t719 + t531 * t720 + t551 * t680 + t555 * t682 + t586 * t652 + t587 * t651 - t596 * t608 + t597 * t607 - t856) * MDP(18) + (t528 * t606 + t580 * t557 + t526 * t607 + t587 * t551 + t531 * t608 + t586 * t555 - g(1) * (-pkin(9) * t721 + t818) - g(2) * (pkin(9) * t723 + t828)) * MDP(21) + (t596 * t719 - t597 * t720 - t651 * t682 - t652 * t680) * MDP(12) + (-t596 * t720 + t652 * t682) * MDP(11) + (-t593 * t720 + t652 * t675) * MDP(30) + (-t700 * t803 - t752 * t922) * t794 * MDP(15) + qJDD(1) * MDP(1) + (g(1) * t800 - g(2) * t979) * MDP(2) + (g(1) * t979 + g(2) * t800) * MDP(3); t752 * MDP(15) * t898 + (t518 * t798 + t593 * t702 + t675 * t937 + t846 * t954) * MDP(28) + (-t596 * t798 - t682 * t954) * MDP(11) + (-t593 * t798 - t675 * t954) * MDP(30) + ((t626 * t797 + t636 * t801) * t593 - t498 * t798 - t506 * t919 + t716 * t518 - t509 * t702 - g(1) * (-t723 * t952 - t724 * t784) - g(2) * (-t721 * t952 - t722 * t784) + (t797 * t854 + t801 * t853) * t675 - t932 * t846 + t937 * t546 + (t506 * t896 - g(3) * (-t784 * t799 + t785 * t941)) * t794) * MDP(32) + (-t518 * t702 - t846 * t937) * MDP(26) + (t518 * t701 + t519 * t702 - t564 * t937 + t846 * t936) * MDP(27) + (-t639 * t596 + t503 * t798 + t755 * t567 + t520 * t942 - t559 * t669 - g(1) * (-t723 * t949 + t724 * t795) - g(2) * (-t721 * t949 + t722 * t795) + t939 * t682 - t928 * t634 + (t522 * t802 - t559 * t944) * qJD(3) + (-g(3) * t833 - t522 * t896) * t794) * MDP(22) + (t522 * t670 + t523 * t669 - t567 * t640 - t568 * t639 - t939 * t635 + t938 * t634 + t849 * t920 + (t503 * t793 - t504 * t795 - t820) * t802) * MDP(24) + (-g(3) * t948 - t610 * t680 - t611 * t682 + (-t526 - t752 * t586 + (qJD(3) * t682 - t597) * pkin(9)) * t802 + (t531 - t968 + (qJD(3) * t680 - t596) * pkin(9)) * t798 + t855) * MDP(18) + ((-t596 + t962) * t802 + (-t597 + t961) * t798) * MDP(12) + (t594 * t898 - pkin(2) * t597 - t707 * t680 - t684 * t752 + t816 * t798 + (-t620 + (t705 + t972) * t752 - t820) * t802) * MDP(16) + (pkin(1) * t799 * t951 + t707 * t842 - t820 - t872) * MDP(9) + (-(t626 * t801 - t636 * t797) * t593 + t499 * t798 + t505 * t919 + t716 * t519 - t509 * t701 - g(1) * (-t723 * t953 + t724 * t785) - g(2) * (-t721 * t953 + t722 * t785) + (t797 * t853 - t801 * t854) * t675 + t932 * t564 + t936 * t546 + (-t505 * t896 - g(3) * (t784 * t941 + t785 * t799)) * t794) * MDP(31) + (-t519 * t798 + t564 * t954 - t593 * t701 - t675 * t936) * MDP(29) + (pkin(1) * t907 + t704 * t842 + (pkin(8) * t912 + g(3)) * t948 - t855 - t901) * MDP(10) + (t640 * t596 - t504 * t798 + t755 * t568 - t520 * t793 * t802 - t559 * t670 - g(1) * (-t723 * t944 - t724 * t793) - g(2) * (-t721 * t944 - t722 * t793) - t938 * t682 + t928 * t635 + (-t523 * t802 + t559 * t949) * qJD(3) + (t523 * t896 - g(3) * (-t793 * t799 + t795 * t941)) * t794) * MDP(23) + (-t752 * t919 + t700 * t798 + (-t682 * t799 + t752 * t940) * t924) * MDP(13) + (t752 * t920 + t700 * t802 + (t680 * t799 - t752 * t941) * t924) * MDP(14) + (t587 * t898 + t596 * t746 - t610 * t752 - t682 * t931 + t798 * t810 + t802 * t815) * MDP(20) + (pkin(2) * t596 - t933 * t752 + t595 * t898 - t707 * t682 + t816 * t802 + (t620 - t811) * t798) * MDP(17) + (t528 * t746 - t587 * t610 - t586 * t611 - g(1) * t903 - g(2) * t904 - g(3) * t871 + t931 * t580 + (-t526 * t802 + t531 * t798 + (t586 * t802 + t587 * t798) * qJD(3) + t855) * pkin(9)) * MDP(21) + (-t586 * t898 - t597 * t746 + t611 * t752 - t680 * t931 + t798 * t815 - t802 * t810) * MDP(19) + t823 + (-t803 * t860 + t889) * MDP(6) + (t799 * t860 + t771) * MDP(7) - t799 * MDP(4) * t907 + t925 * MDP(5) * t951 + (t504 * t640 + t503 * t639 + t520 * t755 - g(1) * (-qJ(5) * t956 + t724 * t980 + t903) - g(2) * (-qJ(5) * t957 + t722 * t980 + t904) - g(3) * ((pkin(4) * t799 + qJ(5) * t940) * t794 + t871) + t928 * t559 + t938 * t523 + t939 * t522) * MDP(25); MDP(11) * t963 + (-t680 ^ 2 + t679) * MDP(12) + t809 * MDP(13) + (-t597 - t961) * MDP(14) + t700 * MDP(15) + (-t666 * t682 + t813 - t967) * MDP(16) + (t594 * t752 + t666 * t680 + t812) * MDP(17) + (pkin(3) * t596 - qJ(4) * t597 + (-t587 - t595) * t682 + (t586 + t916) * t680) * MDP(18) + (t621 * t680 + t807 + t967 - 0.2e1 * t978) * MDP(19) + (-t580 * t680 + t621 * t682 + t752 * t916 + t690 + t808) * MDP(20) + (-t531 * pkin(3) - g(1) * t882 - g(2) * t883 - g(3) * t881 - t526 * qJ(4) - t580 * t621 - t586 * t595 + t587 * t916) * MDP(21) + (t795 * t966 + qJ(4) * t567 + t522 * t680 - t914 * t634 + (-t795 * t913 - t536) * t682 + t819 * t793) * MDP(22) + (-t793 * t966 + qJ(4) * t568 - t523 * t680 + t914 * t635 + (t793 * t913 + t538) * t682 + t819 * t795) * MDP(23) + (t536 * t635 - t538 * t634 + (qJD(5) * t635 - t523 * t682 + t568 * t974 - t503) * t795 + (-qJD(5) * t634 + t522 * t682 + t567 * t974 - t504) * t793 + t826) * MDP(24) + (t520 * qJ(4) - t523 * t538 - t522 * t536 - g(1) * (-qJ(5) * t657 + t882) - g(2) * (-qJ(5) * t653 + t883) - g(3) * (t881 - t960) - t850 * t974 + t914 * t559 + (-t522 * t795 - t523 * t793) * qJD(5)) * MDP(25) + (-t518 * t844 - t846 * t930) * MDP(26) + (-t518 * t728 + t519 * t844 - t564 * t930 + t846 * t929) * MDP(27) + (-t680 * t846 + t983) * MDP(28) + (-t564 * t680 + t993) * MDP(29) + t675 * t680 * MDP(30) + (-(-t737 * t797 + t738 * t801) * t593 + t781 * t519 + t509 * t728 + t505 * t680 + (t797 * t829 - t801 * t830) * t675 + t915 * t564 + t929 * t546 + t825 * t784) * MDP(31) + ((t737 * t801 + t738 * t797) * t593 + t781 * t518 - t509 * t844 - t506 * t680 + (t797 * t830 + t801 * t829) * t675 - t915 * t846 + t930 * t546 + t825 * t785) * MDP(32); t809 * MDP(18) + (t700 - t963) * MDP(19) + (-t752 ^ 2 - t679) * MDP(20) + (t807 - t968 - t978) * MDP(21) + (-t596 * t795 - t634 * t752 - t679 * t793) * MDP(22) + (t596 * t793 + t635 * t752 - t679 * t795) * MDP(23) + (-t567 * t793 - t568 * t795 + (t634 * t795 + t635 * t793) * t682) * MDP(24) + (t559 * t752 + t682 * t849 - t826 + t850) * MDP(25) + (t752 * t564 + t983) * MDP(31) + (-t752 * t846 + t993) * MDP(32); (t635 * t682 + t567) * MDP(22) + (t634 * t682 + t568) * MDP(23) + (-t634 ^ 2 - t635 ^ 2) * MDP(24) + (t522 * t635 - t523 * t634 + t808 + t982) * MDP(25) + (t519 - t991) * MDP(31) + (t518 - t996) * MDP(32); -t846 * t564 * MDP(26) + (-t564 ^ 2 + t846 ^ 2) * MDP(27) + (t905 + t996) * MDP(28) + (-t879 - t991) * MDP(29) - t593 * MDP(30) + (t506 * t675 + t546 * t846 - g(1) * t603 - g(2) * t987 - g(3) * (t719 * t785 + t784 * t945) + t880) * MDP(31) + (t505 * t675 + t546 * t564 + g(1) * t604 + g(2) * t988 - g(3) * (-t719 * t784 + t785 * t945) - t851) * MDP(32) + (-MDP(28) * t964 + MDP(29) * t846 - MDP(31) * t506 - MDP(32) * t505) * qJD(6);];
tau  = t1;
