% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPR10_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR10_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:27:57
% EndTime: 2019-03-09 16:28:25
% DurationCPUTime: 12.69s
% Computational Cost: add. (10723->720), mult. (26182->970), div. (0->0), fcn. (20776->14), ass. (0->316)
t297 = sin(pkin(6));
t306 = cos(qJ(2));
t419 = qJD(1) * t306;
t398 = t297 * t419;
t255 = -qJD(3) + t398;
t301 = sin(qJ(3));
t305 = cos(qJ(3));
t461 = cos(pkin(6));
t384 = t461 * qJD(1);
t344 = t384 + qJD(2);
t302 = sin(qJ(2));
t420 = qJD(1) * t297;
t399 = t302 * t420;
t185 = t301 * t344 + t305 * t399;
t178 = qJD(6) + t185;
t183 = t301 * t399 - t305 * t344;
t296 = sin(pkin(11));
t298 = cos(pkin(11));
t137 = t298 * t183 + t255 * t296;
t138 = t183 * t296 - t255 * t298;
t300 = sin(qJ(6));
t304 = cos(qJ(6));
t487 = t137 * t304 - t138 * t300;
t497 = t178 * t487;
t368 = pkin(1) * t384;
t210 = pkin(8) * t398 + t302 * t368;
t371 = t301 * t398;
t416 = qJD(3) * t301;
t496 = -t301 * qJD(4) - t210 + (-t371 + t416) * pkin(3);
t207 = -pkin(8) * t399 + t306 * t368;
t187 = t301 * t207;
t360 = pkin(2) * t302 - pkin(9) * t306;
t208 = t360 * t420;
t379 = -t305 * t208 + t187;
t473 = pkin(3) + qJ(5);
t394 = t473 * t302;
t415 = qJD(3) * t305;
t435 = t305 * t306;
t479 = pkin(4) + pkin(9);
t495 = t479 * t415 - (pkin(4) * t435 - t394) * t420 - t379;
t494 = t305 * qJD(5) - t496 + t255 * (-qJ(4) * t305 + qJ(5) * t301);
t231 = t296 * t304 + t298 * t300;
t220 = t231 * qJD(6);
t425 = -t231 * t185 - t220;
t346 = t296 * t300 - t298 * t304;
t413 = qJD(6) * t304;
t414 = qJD(6) * t300;
t424 = -t185 * t346 - t296 * t414 + t298 * t413;
t326 = qJD(3) * t344;
t378 = t461 * qJDD(1);
t339 = t378 + qJDD(2);
t444 = t297 * t302;
t406 = t301 * t444;
t369 = qJD(3) * t406;
t411 = qJDD(1) * t302;
t390 = t297 * t411;
t412 = qJD(1) * qJD(2);
t391 = t297 * t412;
t490 = t306 * t391 + t390;
t99 = qJD(1) * t369 - t301 * t339 + (-t326 - t490) * t305;
t96 = -qJDD(6) + t99;
t493 = -t178 * t424 + t231 * t96;
t388 = -t301 * qJ(4) - pkin(2);
t348 = -t137 * t300 - t138 * t304;
t492 = t178 * t348;
t170 = pkin(9) * t344 + t210;
t341 = -pkin(2) * t306 - pkin(9) * t302 - pkin(1);
t177 = t341 * t420;
t97 = t301 * t170 - t305 * t177;
t434 = -qJD(4) - t97;
t303 = sin(qJ(1));
t478 = cos(qJ(1));
t362 = t461 * t478;
t225 = t302 * t362 + t303 * t306;
t400 = t297 * t478;
t156 = t225 * t301 + t305 * t400;
t224 = t302 * t303 - t306 * t362;
t293 = pkin(11) + qJ(6);
t287 = sin(t293);
t288 = cos(t293);
t489 = t156 * t287 + t224 * t288;
t488 = t156 * t288 - t224 * t287;
t417 = qJD(2) * t306;
t100 = t297 * (qJD(1) * (t301 * t417 + t302 * t415) + t301 * t411) + t301 * t326 - t305 * t339;
t292 = t297 ^ 2;
t486 = 0.2e1 * t292;
t466 = t494 * t296 + t298 * t495;
t465 = t296 * t495 - t494 * t298;
t410 = qJDD(1) * t306;
t274 = t297 * t410;
t366 = t302 * t391;
t203 = qJDD(3) - t274 + t366;
t193 = t203 * qJ(4);
t484 = qJD(4) * t255 - t193;
t385 = t306 * t461;
t337 = pkin(1) * t385 - pkin(8) * t444;
t483 = (qJDD(2) + 0.2e1 * t378) * t297;
t482 = t178 * t425 + t346 * t96;
t432 = t185 * pkin(4) - t434;
t481 = -pkin(4) * t100 + qJDD(5);
t70 = -t298 * t100 + t203 * t296;
t71 = t100 * t296 + t203 * t298;
t22 = -qJD(6) * t348 + t300 * t71 + t304 * t70;
t182 = t185 ^ 2;
t307 = qJD(1) ^ 2;
t477 = pkin(3) * t203;
t475 = pkin(9) * t203;
t474 = pkin(10) * t298;
t472 = -pkin(10) - t473;
t367 = pkin(1) * qJD(2) * t461;
t340 = qJD(1) * t367;
t364 = pkin(1) * t378;
t402 = pkin(8) * t274 + t302 * t364 + t306 * t340;
t320 = -pkin(8) * t366 + t402;
t122 = pkin(9) * t339 + t320;
t334 = t360 * qJD(2);
t125 = (qJD(1) * t334 + qJDD(1) * t341) * t297;
t375 = t301 * t122 - t305 * t125 + t170 * t415 + t177 * t416;
t342 = qJDD(4) + t375;
t19 = -pkin(4) * t99 + qJD(5) * t255 - t203 * t473 + t342;
t374 = pkin(8) * t490 + t302 * t340 - t306 * t364;
t123 = -pkin(2) * t339 + t374;
t308 = t99 * qJ(4) - t185 * qJD(4) + t123;
t20 = t183 * qJD(5) + t100 * t473 + t308;
t7 = t296 * t19 + t298 * t20;
t395 = t297 * t417;
t155 = -t369 + (qJD(3) * t461 + t395) * t305;
t386 = t302 * t461;
t441 = t297 * t306;
t422 = pkin(1) * t386 + pkin(8) * t441;
t200 = pkin(9) * t461 + t422;
t423 = pkin(2) * t441 + pkin(9) * t444;
t201 = -pkin(1) * t297 - t423;
t209 = t297 * t334;
t211 = t337 * qJD(2);
t338 = -t200 * t415 - t201 * t416 + t305 * t209 - t301 * t211;
t46 = t155 * pkin(4) + (-qJD(2) * t394 + qJD(5) * t306) * t297 - t338;
t442 = t297 * t305;
t223 = t301 * t461 + t302 * t442;
t154 = qJD(3) * t223 + t301 * t395;
t222 = -t305 * t461 + t406;
t212 = pkin(8) * t395 + t302 * t367;
t325 = -qJ(4) * t155 - qJD(4) * t223 + t212;
t47 = qJD(5) * t222 + t154 * t473 + t325;
t14 = t296 * t46 + t298 * t47;
t56 = t255 * t473 + t432;
t169 = -pkin(2) * t344 - t207;
t309 = -t185 * qJ(4) + t169;
t61 = t183 * t473 + t309;
t26 = t296 * t56 + t298 * t61;
t279 = pkin(3) * t441;
t380 = -t301 * t200 + t201 * t305;
t111 = t279 - t380;
t78 = pkin(4) * t223 + qJ(5) * t441 + t111;
t199 = -pkin(2) * t461 - t337;
t381 = -t222 * pkin(3) + t223 * qJ(4);
t109 = t199 - t381;
t455 = t222 * qJ(5);
t85 = t109 + t455;
t40 = t296 * t78 + t298 * t85;
t98 = t305 * t170 + t301 * t177;
t77 = -pkin(4) * t183 + t98;
t460 = qJ(4) * t183;
t88 = t185 * t473 + t460;
t41 = t296 * t77 + t298 * t88;
t471 = pkin(9) * qJD(3);
t243 = t255 * qJ(4);
t90 = t243 - t98;
t469 = t255 * t90;
t468 = t255 * t98;
t467 = t473 * t99;
t172 = t296 * t399 - t298 * t371;
t401 = -pkin(5) * t298 - pkin(4);
t427 = t305 * t207 + t301 * t208;
t113 = -qJ(4) * t399 - t427;
t93 = -pkin(4) * t371 - t113;
t463 = -pkin(5) * t172 + (-pkin(9) + t401) * t416 - t93;
t462 = -t479 * t416 - t93;
t458 = t183 * t255;
t457 = t185 * t183;
t456 = t185 * t255;
t452 = t224 * t305;
t226 = t302 * t478 + t303 * t385;
t451 = t226 * t305;
t450 = t255 * t305;
t449 = t287 * t301;
t448 = t288 * t301;
t447 = t292 * t307;
t445 = t296 * t301;
t443 = t297 * t303;
t440 = t298 * t301;
t438 = t298 * t305;
t436 = t301 * t306;
t433 = -t185 * t401 - t434;
t62 = qJD(5) - t243 + t77;
t431 = qJD(5) - t62;
t335 = t296 * t436 + t298 * t302;
t173 = t335 * t420;
t204 = t346 * t305;
t430 = qJD(6) * t204 + t172 * t300 - t173 * t304 + t231 * t416;
t429 = -t304 * t172 - t173 * t300 - t220 * t305 + t346 * t416;
t428 = t305 * t200 + t301 * t201;
t230 = -t305 * t473 + t388;
t257 = t479 * t301;
t143 = t298 * t230 + t296 * t257;
t397 = t305 * t419;
t370 = t297 * t397;
t426 = (t370 - t415) * qJ(4) + t496;
t258 = t479 * t305;
t294 = t302 ^ 2;
t421 = -t306 ^ 2 + t294;
t418 = qJD(2) * t302;
t408 = qJ(4) * t441;
t407 = t306 * t447;
t405 = -pkin(3) * t452 + t224 * t388;
t404 = -pkin(3) * t451 + t226 * t388;
t396 = t297 * t418;
t393 = pkin(1) * t486;
t392 = t302 * t412;
t6 = t298 * t19 - t20 * t296;
t13 = -t296 * t47 + t298 * t46;
t25 = -t296 * t61 + t298 * t56;
t38 = -t296 * t85 + t298 * t78;
t157 = t225 * t305 - t301 * t400;
t383 = -t156 * pkin(3) + qJ(4) * t157;
t227 = -t303 * t386 + t306 * t478;
t160 = t227 * t301 - t303 * t442;
t161 = t227 * t305 + t301 * t443;
t382 = -t160 * pkin(3) + qJ(4) * t161;
t376 = -t305 * t122 - t301 * t125 + t170 * t416 - t177 * t415;
t373 = t305 * t279 + t301 * t408 + t423;
t139 = -pkin(10) * t438 + t143;
t363 = pkin(5) * t370 - pkin(10) * t173 + qJD(6) * t139 - (pkin(5) * t305 - pkin(10) * t445) * qJD(3) - t466;
t361 = t297 * t307 * t461;
t359 = g(1) * t156 - g(2) * t160;
t358 = -g(1) * t157 + g(2) * t161;
t357 = -g(1) * t224 + g(2) * t226;
t356 = -g(1) * t227 - g(2) * t225;
t355 = t7 * t296 + t6 * t298;
t4 = -pkin(5) * t99 - pkin(10) * t71 + t6;
t5 = -pkin(10) * t70 + t7;
t354 = t300 * t4 + t304 * t5;
t235 = t298 * t257;
t129 = t301 * pkin(5) + t235 + (pkin(10) * t305 - t230) * t296;
t353 = -pkin(10) * t172 - qJD(6) * t129 - t416 * t474 - t465;
t18 = pkin(5) * t185 - pkin(10) * t138 + t25;
t24 = pkin(10) * t137 + t26;
t8 = t18 * t304 - t24 * t300;
t9 = t18 * t300 + t24 * t304;
t352 = -t25 * t296 + t26 * t298;
t153 = -t222 * t296 + t298 * t441;
t28 = pkin(5) * t223 + pkin(10) * t153 + t38;
t152 = t222 * t298 + t296 * t441;
t30 = pkin(10) * t152 + t40;
t351 = t28 * t304 - t30 * t300;
t350 = t28 * t300 + t30 * t304;
t347 = t304 * t152 + t153 * t300;
t92 = t152 * t300 - t153 * t304;
t343 = 0.2e1 * t384 + qJD(2);
t110 = t408 - t428;
t29 = t376 + t484;
t240 = t472 * t296;
t73 = t298 * t77;
t333 = qJD(5) * t298 + qJD(6) * t240 - pkin(5) * t183 + t73 + (-pkin(10) * t185 - t88) * t296;
t241 = t472 * t298;
t332 = qJD(5) * t296 - qJD(6) * t241 + t185 * t474 + t41;
t21 = t137 * t413 - t138 * t414 - t300 * t70 + t304 * t71;
t330 = t478 * pkin(1) + t227 * pkin(2) + t161 * pkin(3) + pkin(8) * t443 + qJ(4) * t160;
t329 = -t200 * t416 + t201 * t415 + t301 * t209 + t305 * t211;
t328 = g(1) * t160 + g(2) * t156 + g(3) * t222;
t327 = -g(1) * t161 - g(2) * t157 - g(3) * t223;
t23 = -t29 + t481;
t323 = t23 + t327;
t322 = -g(1) * t226 - g(2) * t224 + g(3) * t441;
t87 = -pkin(4) * t222 - t110;
t321 = -t303 * pkin(1) - t225 * pkin(2) - pkin(3) * t157 + pkin(8) * t400 - qJ(4) * t156;
t83 = t183 * pkin(3) + t309;
t319 = t255 * t83 + t475;
t318 = -t169 * t255 - t475;
t2 = -qJD(6) * t9 - t300 * t5 + t304 * t4;
t316 = t328 - t375;
t315 = -t327 + t376;
t314 = -t255 * t471 + t322;
t54 = -qJ(4) * t396 + qJD(4) * t441 - t329;
t31 = t100 * pkin(3) + t308;
t313 = -t31 - t314;
t312 = -t99 - t458;
t311 = -t315 - t484;
t48 = -pkin(4) * t154 - t54;
t310 = t185 * t83 + qJDD(4) - t316;
t284 = pkin(5) * t296 + qJ(4);
t249 = -pkin(3) * t305 + t388;
t219 = pkin(5) * t438 + t258;
t205 = t231 * t305;
t142 = -t230 * t296 + t235;
t127 = t154 * t296 + t298 * t396;
t126 = -t154 * t298 + t296 * t396;
t124 = pkin(3) * t185 + t460;
t114 = -pkin(3) * t399 + t379;
t107 = t160 * t287 + t226 * t288;
t106 = t160 * t288 - t226 * t287;
t89 = pkin(3) * t255 - t434;
t60 = pkin(3) * t154 + t325;
t58 = -pkin(3) * t396 - t338;
t57 = -pkin(5) * t152 + t87;
t49 = -pkin(5) * t137 + t62;
t39 = -t296 * t88 + t73;
t37 = qJD(6) * t92 + t304 * t126 + t300 * t127;
t36 = qJD(6) * t347 - t300 * t126 + t304 * t127;
t34 = t342 - t477;
t33 = pkin(5) * t126 + t48;
t12 = pkin(5) * t70 + t23;
t11 = -pkin(10) * t126 + t14;
t10 = pkin(5) * t155 - pkin(10) * t127 + t13;
t1 = t8 * qJD(6) + t354;
t3 = [qJDD(1), g(1) * t303 - g(2) * t478, g(1) * t478 + g(2) * t303 (qJDD(1) * t294 + 0.2e1 * t306 * t392) * t292 (t302 * t410 - t412 * t421) * t486, t302 * t483 + t343 * t395, t306 * t483 - t343 * t396, t339 * t461, -t212 * t344 + t337 * t339 - t374 * t461 + g(1) * t225 - g(2) * t227 + (-t392 + t410) * t393, -t211 * t344 - t422 * t339 - t320 * t461 + (-t306 * t412 - t411) * t393 + t357, t155 * t185 - t223 * t99, -t100 * t223 - t154 * t185 - t155 * t183 + t222 * t99, -t155 * t255 + t223 * t203 + (t185 * t418 + t306 * t99) * t297, t154 * t255 - t222 * t203 + (t100 * t306 - t183 * t418) * t297 (-t203 * t306 - t255 * t418) * t297, -t338 * t255 + t380 * t203 + t212 * t183 + t199 * t100 + t123 * t222 + t169 * t154 + (t306 * t375 - t418 * t97) * t297 - t358, t329 * t255 - t428 * t203 + t212 * t185 - t199 * t99 + t123 * t223 + t169 * t155 + (-t306 * t376 - t418 * t98) * t297 - t359, t100 * t110 - t111 * t99 + t154 * t90 + t155 * t89 + t183 * t54 + t185 * t58 + t222 * t29 + t223 * t34 - t357, -t109 * t100 + t111 * t203 - t83 * t154 - t60 * t183 - t31 * t222 - t58 * t255 + (-t306 * t34 + t418 * t89) * t297 + t358, t109 * t99 - t110 * t203 - t83 * t155 - t60 * t185 - t31 * t223 + t54 * t255 + (t29 * t306 - t418 * t90) * t297 + t359, t31 * t109 + t83 * t60 + t29 * t110 + t90 * t54 + t34 * t111 + t89 * t58 - g(1) * (-pkin(9) * t224 + t321) - g(2) * (pkin(9) * t226 + t330) t13 * t185 - t38 * t99 + t6 * t223 + t25 * t155 - t48 * t137 + t87 * t70 - t23 * t152 + t62 * t126 - g(1) * (-t156 * t296 - t224 * t298) - g(2) * (t160 * t296 + t226 * t298) -t14 * t185 + t40 * t99 - t7 * t223 - t26 * t155 + t48 * t138 + t87 * t71 - t23 * t153 + t62 * t127 - g(1) * (-t156 * t298 + t224 * t296) - g(2) * (t160 * t298 - t226 * t296) -t126 * t26 - t127 * t25 - t13 * t138 + t137 * t14 + t152 * t7 + t153 * t6 - t38 * t71 - t40 * t70 - t358, t7 * t40 + t26 * t14 + t6 * t38 + t25 * t13 + t23 * t87 + t62 * t48 - g(1) * (-qJ(5) * t157 - t224 * t479 + t321) - g(2) * (qJ(5) * t161 + t226 * t479 + t330) t21 * t92 - t348 * t36, t21 * t347 - t22 * t92 + t348 * t37 + t36 * t487, -t155 * t348 + t178 * t36 + t21 * t223 - t92 * t96, t155 * t487 - t178 * t37 - t22 * t223 - t347 * t96, t155 * t178 - t223 * t96 (-qJD(6) * t350 + t304 * t10 - t300 * t11) * t178 - t351 * t96 + t2 * t223 + t8 * t155 - t33 * t487 + t57 * t22 - t12 * t347 + t49 * t37 + g(1) * t489 - g(2) * t107 -(qJD(6) * t351 + t300 * t10 + t304 * t11) * t178 + t350 * t96 - t1 * t223 - t9 * t155 - t33 * t348 + t57 * t21 + t12 * t92 + t49 * t36 + g(1) * t488 - g(2) * t106; 0, 0, 0, -t302 * t407, t421 * t447, -t306 * t361 + t390, t302 * t361 + t274, t339, pkin(1) * t302 * t447 + t210 * t344 - t322 - t374, pkin(1) * t407 + t207 * t344 + (pkin(8) * t412 + g(3)) * t444 - t356 - t402, -t185 * t450 - t99 * t301 (-t99 + t458) * t305 + (-t100 + t456) * t301, -t255 * t415 + t301 * t203 + (-t185 * t302 + t255 * t435) * t420, t255 * t416 + t305 * t203 + (t183 * t302 - t255 * t436) * t420, t255 * t399, t97 * t399 - pkin(2) * t100 - t210 * t183 - t187 * t255 + t318 * t301 + (-t123 + (t208 + t471) * t255 - t322) * t305, pkin(2) * t99 - t427 * t255 + t98 * t399 - t210 * t185 + t318 * t305 + (t123 + t314) * t301, -g(3) * t444 - t113 * t183 - t114 * t185 + (-t29 - t255 * t89 + (qJD(3) * t185 - t100) * pkin(9)) * t305 + (t34 - t469 + (qJD(3) * t183 - t99) * pkin(9)) * t301 + t356, -t100 * t249 + t114 * t255 - t183 * t426 + t301 * t319 - t305 * t313 - t399 * t89, -t113 * t255 - t185 * t426 + t249 * t99 + t301 * t313 + t305 * t319 + t399 * t90, t31 * t249 - t90 * t113 - t89 * t114 - g(1) * t404 - g(2) * t405 - g(3) * t373 + t426 * t83 + (-t29 * t305 + t34 * t301 + (t301 * t90 + t305 * t89) * qJD(3) + t356) * pkin(9), -t142 * t99 + t6 * t301 + t258 * t70 + t23 * t438 - t62 * t172 - g(1) * (-t226 * t445 + t227 * t298) - g(2) * (-t224 * t445 + t225 * t298) + t466 * t185 - t462 * t137 + (t25 * t305 - t440 * t62) * qJD(3) + (-g(3) * t335 - t25 * t397) * t297, t143 * t99 - t7 * t301 + t258 * t71 - t23 * t296 * t305 - t62 * t173 - g(1) * (-t226 * t440 - t227 * t296) - g(2) * (-t224 * t440 - t225 * t296) - t465 * t185 + t462 * t138 + (-t26 * t305 + t445 * t62) * qJD(3) + (t26 * t397 - g(3) * (-t296 * t302 + t298 * t436)) * t297, -t142 * t71 - t143 * t70 + t172 * t26 + t173 * t25 - t466 * t138 + t465 * t137 + t352 * t416 + (t296 * t6 - t298 * t7 - t322) * t305, t7 * t143 + t6 * t142 + t23 * t258 - g(1) * (-qJ(5) * t451 + t227 * t479 + t404) - g(2) * (-qJ(5) * t452 + t225 * t479 + t405) - g(3) * ((pkin(4) * t302 + qJ(5) * t435) * t297 + t373) + t462 * t62 + t465 * t26 + t466 * t25, -t205 * t21 - t348 * t430, t204 * t21 + t205 * t22 + t348 * t429 + t430 * t487, t178 * t430 + t205 * t96 + t21 * t301 + t348 * t450, -t178 * t429 - t204 * t96 - t22 * t301 - t450 * t487, -t178 * t450 - t96 * t301 -(t129 * t304 - t139 * t300) * t96 + t2 * t301 + t8 * t415 + t219 * t22 - t12 * t204 - g(1) * (-t226 * t449 + t227 * t288) - g(2) * (-t224 * t449 + t225 * t288) - t463 * t487 + t429 * t49 + (t300 * t353 - t304 * t363) * t178 + (-t8 * t397 - g(3) * (t287 * t436 + t288 * t302)) * t297 (t129 * t300 + t139 * t304) * t96 - t1 * t301 - t9 * t415 + t219 * t21 - t12 * t205 - g(1) * (-t226 * t448 - t227 * t287) - g(2) * (-t224 * t448 - t225 * t287) - t463 * t348 + t430 * t49 + (t300 * t363 + t304 * t353) * t178 + (t9 * t397 - g(3) * (-t287 * t302 + t288 * t436)) * t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, -t183 ^ 2 + t182, t312, -t100 - t456, t203, -t169 * t185 + t316 - t468, t169 * t183 + t255 * t97 + t315, pkin(3) * t99 - qJ(4) * t100 + (-t90 - t98) * t185 + (t89 + t434) * t183, t124 * t183 + t310 + t468 - 0.2e1 * t477, t124 * t185 - t183 * t83 + t255 * t434 + t193 + t311, -t34 * pkin(3) - g(1) * t382 - g(2) * t383 - g(3) * t381 - t29 * qJ(4) - t83 * t124 + t434 * t90 - t89 * t98, t298 * t467 + qJ(4) * t70 + t25 * t183 - t432 * t137 + (-t298 * t431 - t39) * t185 + t323 * t296, -t296 * t467 + qJ(4) * t71 - t26 * t183 + t432 * t138 + (t296 * t431 + t41) * t185 + t323 * t298, -t137 * t41 + t138 * t39 + (qJD(5) * t138 - t185 * t26 + t473 * t71 - t6) * t298 + (-qJD(5) * t137 + t185 * t25 + t473 * t70 - t7) * t296 + t328, t23 * qJ(4) - t26 * t41 - t25 * t39 - g(1) * (-qJ(5) * t160 + t382) - g(2) * (-qJ(5) * t156 + t383) - g(3) * (t381 - t455) + t432 * t62 - t355 * t473 + (-t25 * t298 - t26 * t296) * qJD(5), -t21 * t346 - t348 * t425, -t21 * t231 + t22 * t346 + t348 * t424 + t425 * t487, -t183 * t348 + t482, t183 * t487 + t493, t178 * t183 -(-t240 * t300 + t241 * t304) * t96 + t284 * t22 + t12 * t231 + t8 * t183 - t433 * t487 + t424 * t49 + (t300 * t332 - t304 * t333) * t178 + t327 * t287 (t240 * t304 + t241 * t300) * t96 + t284 * t21 - t12 * t346 - t9 * t183 - t433 * t348 + t425 * t49 + (t300 * t333 + t304 * t332) * t178 + t327 * t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t203 - t457, -t255 ^ 2 - t182, t310 - t469 - t477, -t137 * t255 - t182 * t296 - t298 * t99, t138 * t255 - t182 * t298 + t296 * t99, -t296 * t70 - t298 * t71 + (t137 * t298 + t138 * t296) * t185, t185 * t352 + t255 * t62 - t328 + t355, 0, 0, 0, 0, 0, -t255 * t487 + t482, -t255 * t348 + t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138 * t185 + t70, t137 * t185 + t71, -t137 ^ 2 - t138 ^ 2, -t137 * t26 + t138 * t25 + t311 + t481, 0, 0, 0, 0, 0, t22 - t492, t21 + t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348 * t487, t348 ^ 2 - t487 ^ 2, t21 - t497, -t22 - t492, -t96, t9 * t178 + t49 * t348 - g(1) * t106 - g(2) * t488 - g(3) * (t222 * t288 + t287 * t441) + t2, -t49 * t487 + g(1) * t107 + g(2) * t489 - g(3) * (-t222 * t287 + t288 * t441) - t354 + (t178 - qJD(6)) * t8;];
tau_reg  = t3;
