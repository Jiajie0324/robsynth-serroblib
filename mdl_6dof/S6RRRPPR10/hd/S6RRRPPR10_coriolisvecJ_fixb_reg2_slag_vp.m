% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:27:54
% EndTime: 2019-03-09 16:28:24
% DurationCPUTime: 13.80s
% Computational Cost: add. (15834->678), mult. (40924->906), div. (0->0), fcn. (31571->10), ass. (0->300)
t282 = sin(qJ(3));
t278 = sin(pkin(6));
t285 = cos(qJ(2));
t379 = qJD(1) * t285;
t359 = t278 * t379;
t333 = t282 * t359;
t375 = qJD(3) * t282;
t479 = qJD(4) * t282 + (t333 - t375) * pkin(3);
t284 = cos(qJ(3));
t424 = cos(pkin(6));
t346 = t424 * qJD(1);
t311 = t346 + qJD(2);
t300 = t284 * t311;
t283 = sin(qJ(2));
t380 = qJD(1) * t278;
t360 = t283 * t380;
t199 = t282 * t360 - t300;
t257 = -qJD(3) + t359;
t277 = sin(pkin(11));
t279 = cos(pkin(11));
t155 = t199 * t277 - t257 * t279;
t281 = sin(qJ(6));
t442 = cos(qJ(6));
t237 = t277 * t257;
t454 = t199 * t279 + t237;
t305 = t442 * t454;
t85 = -t155 * t281 + t305;
t478 = t85 ^ 2;
t201 = t282 * t311 + t284 * t360;
t193 = qJD(6) + t201;
t477 = t193 * t85;
t347 = t285 * t424;
t334 = pkin(1) * t347;
t220 = -pkin(8) * t360 + qJD(1) * t334;
t306 = t278 * (pkin(2) * t283 - pkin(9) * t285);
t221 = qJD(1) * t306;
t145 = -t220 * t282 + t221 * t284;
t438 = pkin(3) + qJ(5);
t351 = t438 * t283;
t374 = qJD(3) * t284;
t395 = t284 * t285;
t443 = pkin(4) + pkin(9);
t476 = -(pkin(4) * t395 - t351) * t380 + t145 + t443 * t374;
t268 = t424 * t283 * pkin(1);
t422 = qJ(4) * t284;
t316 = qJ(5) * t282 - t422;
t399 = t278 * t285;
t475 = (t268 + (pkin(8) + t316) * t399) * qJD(1) - qJD(3) * t316 + qJD(5) * t284 + t479;
t86 = t155 * t442 + t281 * t454;
t474 = t86 ^ 2;
t183 = t277 * t360 - t279 * t333;
t473 = t279 * t375 + t183;
t427 = t277 * t475 + t279 * t476;
t426 = t277 * t476 - t279 * t475;
t304 = -t277 * t442 - t279 * t281;
t228 = t304 * qJD(6);
t452 = -t201 * t304 - t228;
t382 = pkin(8) * t399 + t268;
t214 = pkin(9) * t424 + t382;
t182 = qJD(2) * pkin(9) + qJD(1) * t214;
t215 = (-pkin(2) * t285 - pkin(9) * t283 - pkin(1)) * t278;
t192 = qJD(1) * t215;
t109 = t182 * t282 - t192 * t284;
t372 = -qJD(4) - t109;
t393 = pkin(4) * t201 - t372;
t68 = t257 * t438 + t393;
t181 = -pkin(2) * t311 - t220;
t289 = -t201 * qJ(4) + t181;
t75 = t199 * t438 + t289;
t27 = -t277 * t75 + t279 * t68;
t22 = pkin(5) * t201 - pkin(10) * t155 + t27;
t28 = t277 * t68 + t279 * t75;
t23 = pkin(10) * t454 + t28;
t307 = -t22 * t442 + t23 * t281;
t371 = qJD(1) * qJD(2);
t349 = t285 * t371;
t330 = t278 * t349;
t376 = qJD(3) * t201;
t159 = t282 * t330 + t376;
t378 = qJD(2) * t283;
t358 = t278 * t378;
t260 = qJD(1) * t358;
t126 = t159 * t277 + t260 * t279;
t400 = t278 * t283;
t364 = t282 * t400;
t331 = qJD(3) * t364;
t158 = qJD(1) * t331 - qJD(3) * t300 - t284 * t330;
t225 = t382 * qJD(2);
t211 = qJD(1) * t225;
t288 = qJ(4) * t158 - qJD(4) * t201 + t211;
t39 = qJD(5) * t199 + t159 * t438 + t288;
t329 = qJD(2) * t351;
t222 = qJD(2) * t306;
t209 = qJD(1) * t222;
t234 = -pkin(8) * t400 + t334;
t224 = t234 * qJD(2);
t210 = qJD(1) * t224;
t335 = t182 * t374 + t192 * t375 - t209 * t284 + t210 * t282;
t40 = -pkin(4) * t158 + qJD(5) * t257 - t329 * t380 + t335;
t15 = -t277 * t39 + t279 * t40;
t8 = -pkin(5) * t158 - pkin(10) * t126 + t15;
t16 = t277 * t40 + t279 * t39;
t344 = t159 * t279 - t260 * t277;
t9 = pkin(10) * t344 + t16;
t1 = -qJD(6) * t307 + t281 * t8 + t442 * t9;
t6 = t22 * t281 + t23 * t442;
t2 = -qJD(6) * t6 - t281 * t9 + t442 * t8;
t239 = -t277 * t281 + t279 * t442;
t352 = qJD(6) * t442;
t373 = qJD(6) * t281;
t466 = -t201 * t239 + t277 * t373 - t279 * t352;
t472 = -t1 * t304 + t2 * t239 + t307 * t452 - t466 * t6;
t345 = t281 * t126 - t344 * t442;
t32 = qJD(6) * t86 + t345;
t471 = -t304 * t32 + t466 * t85;
t470 = -t158 * t304 + t193 * t466;
t396 = t282 * t285;
t184 = (t277 * t396 + t279 * t283) * t380;
t441 = pkin(5) * t284;
t469 = -pkin(10) * t184 + t359 * t441 - (-pkin(10) * t277 * t282 + t441) * qJD(3) - t427;
t468 = pkin(10) * t473 + t426;
t110 = t182 * t284 + t192 * t282;
t301 = -t110 * t257 - t335;
t336 = t182 * t375 - t192 * t374 - t209 * t282 - t210 * t284;
t465 = -t109 * t257 - t336;
t31 = -qJD(6) * t305 - t126 * t442 + t155 * t373 - t281 * t344;
t464 = -t239 * t31 - t452 * t86;
t354 = qJD(2) * t399;
t174 = -t331 + (qJD(3) * t424 + t354) * t284;
t231 = t282 * t424 + t284 * t400;
t463 = -t174 * t257 + t278 * ((qJD(1) * t231 + t201) * t378 + t158 * t285);
t173 = qJD(3) * t231 + t282 * t354;
t230 = -t284 * t424 + t364;
t462 = -t173 * t257 + t278 * ((qJD(1) * t230 + t199) * t378 - t159 * t285);
t460 = -t257 * t374 + t380 * (t283 * (qJD(2) * t282 - t201) + t257 * t395);
t377 = qJD(2) * t284;
t459 = t257 * t375 + t380 * (t283 * (t199 + t377) - t257 * t396);
t274 = t278 ^ 2;
t458 = -0.2e1 * t274 * t371;
t251 = t257 * qJ(4);
t104 = -t110 + t251;
t321 = pkin(3) * t260;
t61 = -t321 + t335;
t457 = -t104 * t257 + t61;
t125 = t158 * t231;
t69 = t174 * t201 - t125;
t156 = t158 * t282;
t302 = t257 * t284;
t73 = -t201 * t302 - t156;
t404 = t201 * t257;
t455 = t159 + t404;
t146 = t220 * t284 + t221 * t282;
t128 = -qJ(4) * t360 - t146;
t107 = -pkin(4) * t333 - t128;
t453 = t375 * t443 + t107;
t151 = t279 * t158;
t444 = t201 ^ 2;
t451 = -t277 * t444 - t151;
t450 = -t239 * t158 - t193 * t452;
t401 = t277 * t158;
t449 = -t279 * t444 + t401;
t286 = qJD(1) ^ 2;
t440 = pkin(10) * t201;
t439 = t86 * t85;
t437 = -pkin(10) - t438;
t348 = -qJ(4) * t282 - pkin(2);
t236 = -t284 * t438 + t348;
t258 = t443 * t282;
t242 = t279 * t258;
t144 = pkin(5) * t282 + t242 + (pkin(10) * t284 - t236) * t277;
t164 = t236 * t279 + t258 * t277;
t398 = t279 * t284;
t157 = -pkin(10) * t398 + t164;
t80 = t144 * t281 + t157 * t442;
t436 = qJD(6) * t80 + t281 * t468 + t442 * t469;
t79 = t144 * t442 - t157 * t281;
t435 = -qJD(6) * t79 + t281 * t469 - t442 * t468;
t78 = -t214 * t374 - t215 * t375 + t222 * t284 - t224 * t282;
t53 = pkin(4) * t174 + (qJD(5) * t285 - t329) * t278 - t78;
t290 = -t174 * qJ(4) - t231 * qJD(4) + t225;
t54 = t230 * qJD(5) + t173 * t438 + t290;
t21 = t277 * t53 + t279 * t54;
t139 = -t214 * t282 + t215 * t284;
t124 = pkin(3) * t399 - t139;
t93 = pkin(4) * t231 + qJ(5) * t399 + t124;
t213 = -pkin(2) * t424 - t234;
t291 = -qJ(4) * t231 + t213;
t99 = t230 * t438 + t291;
t47 = t277 * t93 + t279 * t99;
t423 = qJ(4) * t199;
t102 = t201 * t438 + t423;
t92 = -pkin(4) * t199 + t110;
t48 = t102 * t279 + t277 * t92;
t98 = t199 * pkin(3) + t289;
t434 = t201 * t98;
t255 = qJ(4) * t260;
t320 = -qJD(4) * t257 - t336;
t59 = -t255 - t320;
t42 = -t159 * pkin(4) - t59;
t431 = t42 * t277;
t430 = t42 * t279;
t248 = t437 * t277;
t249 = t437 * t279;
t169 = t248 * t442 + t249 * t281;
t88 = t279 * t92;
t29 = -pkin(5) * t199 + t88 + (-t102 - t440) * t277;
t34 = t279 * t440 + t48;
t429 = qJD(5) * t239 + qJD(6) * t169 - t281 * t34 + t29 * t442;
t168 = -t248 * t281 + t249 * t442;
t428 = -qJD(5) * t304 - qJD(6) * t168 + t281 * t29 + t34 * t442;
t363 = -pkin(5) * t279 - pkin(4);
t425 = -pkin(5) * t183 - t107 + (-pkin(9) + t363) * t375;
t76 = qJD(5) - t251 + t92;
t421 = qJD(3) * t76;
t417 = t126 * t277;
t416 = t126 * t279;
t415 = t155 * t257;
t414 = t155 * t277;
t407 = t199 * t201;
t406 = t199 * t257;
t403 = t257 * t282;
t402 = t274 * t286;
t394 = -t201 * t363 - t372;
t392 = qJD(5) - t76;
t391 = t183 * t442 + t184 * t281 - t228 * t284 + t239 * t375;
t217 = t239 * t284;
t390 = qJD(6) * t217 - t183 * t281 + t184 * t442 + t304 * t375;
t384 = (t268 + (pkin(8) - t422) * t399) * qJD(1) + qJ(4) * t374 + t479;
t140 = t214 * t284 + t215 * t282;
t259 = t443 * t284;
t381 = t283 ^ 2 - t285 ^ 2;
t370 = pkin(9) * t403;
t369 = pkin(9) * t302;
t368 = pkin(9) * t378;
t367 = pkin(9) * t377;
t353 = -t199 ^ 2 + t444;
t20 = -t277 * t54 + t279 * t53;
t45 = -t277 * t99 + t279 * t93;
t337 = t283 * t285 * t402;
t332 = t257 * t360;
t328 = pkin(1) * t458;
t326 = t277 * t375 - t184;
t325 = t15 * t279 + t16 * t277;
t324 = -t27 * t277 + t279 * t28;
t323 = (qJD(3) * t199 - t158) * pkin(9);
t322 = (-t159 + t376) * pkin(9);
t319 = t279 * t344;
t318 = t344 * t277;
t317 = t454 * t279;
t315 = t159 * t230 + t173 * t199;
t314 = t454 * qJD(3);
t313 = t274 * t283 * t349;
t310 = 0.2e1 * t346 + qJD(2);
t123 = qJ(4) * t399 - t140;
t172 = -t230 * t277 + t279 * t399;
t30 = pkin(5) * t231 + pkin(10) * t172 + t45;
t171 = t230 * t279 + t277 * t399;
t33 = pkin(10) * t171 + t47;
t10 = -t281 * t33 + t30 * t442;
t11 = t281 * t30 + t33 * t442;
t106 = t171 * t281 - t172 * t442;
t77 = -t214 * t375 + t215 * t374 + t222 * t282 + t224 * t284;
t101 = -pkin(4) * t230 - t123;
t296 = t155 * t279 + t277 * t454;
t295 = pkin(1) * (-qJD(2) * t346 + t402);
t294 = t158 * t230 - t159 * t231 - t173 * t201 - t174 * t199;
t293 = t158 + t406;
t292 = -t159 * t284 - t199 * t403;
t66 = -qJ(4) * t358 + qJD(4) * t399 - t77;
t24 = -pkin(5) * t344 + t42;
t55 = -pkin(4) * t173 - t66;
t287 = (-t158 + t406) * t284 + (-t159 + t404) * t282;
t269 = pkin(5) * t277 + qJ(4);
t254 = -pkin(3) * t284 + t348;
t227 = pkin(5) * t398 + t259;
t223 = t382 * qJD(1);
t218 = t304 * t284;
t170 = (-t257 * t278 - t274 * t379) * t378;
t163 = -t236 * t277 + t242;
t142 = t173 * t277 + t279 * t358;
t141 = -t173 * t279 + t277 * t358;
t138 = pkin(3) * t201 + t423;
t129 = -pkin(3) * t360 - t145;
t122 = pkin(3) * t230 + t291;
t105 = -t171 * t442 - t172 * t281;
t103 = pkin(3) * t257 - t372;
t74 = t173 * pkin(3) + t290;
t71 = -pkin(3) * t358 - t78;
t70 = -pkin(5) * t171 + t101;
t60 = pkin(3) * t159 + t288;
t56 = -pkin(5) * t454 + t76;
t46 = -t102 * t277 + t88;
t44 = qJD(6) * t106 + t141 * t442 + t142 * t281;
t43 = t141 * t281 - t142 * t442 - t171 * t352 - t172 * t373;
t36 = pkin(5) * t141 + t55;
t17 = -pkin(10) * t141 + t21;
t14 = pkin(5) * t174 - pkin(10) * t142 + t20;
t4 = -qJD(6) * t11 + t14 * t442 - t17 * t281;
t3 = qJD(6) * t10 + t14 * t281 + t17 * t442;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t313, t381 * t458, t310 * t354, -0.2e1 * t313, -t310 * t358, 0, -t211 * t424 - t225 * t311 + t283 * t328, -t210 * t424 - t224 * t311 + t285 * t328 (t210 * t285 + t211 * t283 + (-t220 * t285 - t223 * t283) * qJD(2) + (t224 * t285 + t225 * t283 + (-t234 * t285 - t283 * t382) * qJD(2)) * qJD(1)) * t278, t210 * t382 - t211 * t234 - t220 * t225 + t223 * t224, t69, t294, t463, t315, -t462, t170, t159 * t213 + t173 * t181 + t199 * t225 + t211 * t230 - t257 * t78 + (t285 * t335 + (qJD(1) * t139 - t109) * t378) * t278, -t158 * t213 + t174 * t181 + t201 * t225 + t211 * t231 + t257 * t77 + (-t285 * t336 + (-qJD(1) * t140 - t110) * t378) * t278, t109 * t174 - t110 * t173 + t139 * t158 - t140 * t159 - t199 * t77 - t201 * t78 + t230 * t336 + t231 * t335, -t109 * t78 + t110 * t77 - t139 * t335 - t140 * t336 + t181 * t225 + t211 * t213, t170, -t463, t462, t69, t294, t315, t103 * t174 + t104 * t173 + t123 * t159 - t124 * t158 + t199 * t66 + t201 * t71 + t230 * t59 + t231 * t61, -t122 * t159 - t173 * t98 - t199 * t74 - t230 * t60 - t257 * t71 + (-t285 * t61 + (qJD(1) * t124 + t103) * t378) * t278, t122 * t158 - t174 * t98 - t201 * t74 - t231 * t60 + t257 * t66 + (t285 * t59 + (-qJD(1) * t123 - t104) * t378) * t278, t103 * t71 + t104 * t66 + t122 * t60 + t123 * t59 + t124 * t61 + t74 * t98, -t126 * t172 + t142 * t155, t126 * t171 - t141 * t155 + t142 * t454 - t172 * t344, t126 * t231 + t142 * t201 + t155 * t174 + t158 * t172, -t141 * t454 + t171 * t344, -t141 * t201 - t158 * t171 + t174 * t454 + t231 * t344, t69, -t101 * t344 + t76 * t141 + t15 * t231 - t45 * t158 - t42 * t171 + t27 * t174 + t20 * t201 - t454 * t55, t101 * t126 + t142 * t76 + t155 * t55 + t158 * t47 - t16 * t231 - t172 * t42 - t174 * t28 - t201 * t21, -t45 * t126 - t28 * t141 - t27 * t142 + t15 * t172 - t20 * t155 + t16 * t171 + t21 * t454 + t344 * t47, t101 * t42 + t15 * t45 + t16 * t47 + t20 * t27 + t21 * t28 + t55 * t76, -t106 * t31 - t43 * t86, t105 * t31 - t106 * t32 - t43 * t85 - t44 * t86, -t106 * t158 + t174 * t86 - t193 * t43 - t231 * t31, t105 * t32 - t44 * t85, t105 * t158 + t174 * t85 - t193 * t44 - t231 * t32, t174 * t193 - t125, -t10 * t158 + t105 * t24 - t174 * t307 + t193 * t4 + t2 * t231 + t32 * t70 - t36 * t85 + t44 * t56, -t1 * t231 + t106 * t24 + t11 * t158 - t174 * t6 - t193 * t3 - t31 * t70 + t36 * t86 - t43 * t56, -t1 * t105 + t10 * t31 - t106 * t2 - t11 * t32 + t3 * t85 - t307 * t43 - t4 * t86 - t44 * t6, t1 * t11 + t10 * t2 + t24 * t70 + t3 * t6 - t307 * t4 + t36 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337, t381 * t402, -t278 * t286 * t347, t337, t311 * t360 - t260, 0, -pkin(8) * t330 + t223 * t311 + t283 * t295, pkin(8) * t260 + t220 * t311 + t285 * t295, 0, 0, t73, t287, t460, t292, t459, t332, -pkin(2) * t159 + t145 * t257 - t199 * t223 - t211 * t284 + (t181 * t282 + t369) * qJD(3) + (t109 * t283 + (-t181 * t285 - t368) * t282) * t380, pkin(2) * t158 - t146 * t257 - t201 * t223 + t211 * t282 + (t181 * t284 - t370) * qJD(3) + (-t181 * t395 + (t110 - t367) * t283) * t380, t145 * t201 + t146 * t199 + (t322 + t465) * t284 + (t323 - t301) * t282, -pkin(2) * t211 + t109 * t145 - t110 * t146 - t181 * t223 + (t282 * t335 - t284 * t336 + (t109 * t284 - t110 * t282) * qJD(3)) * pkin(9), t332, -t460, -t459, t73, t287, t292, -t128 * t199 - t129 * t201 + (-t103 * t257 + t322 - t59) * t284 + (t323 + t457) * t282, t129 * t257 - t159 * t254 + t284 * t60 + t384 * t199 + (-t282 * t98 - t369) * qJD(3) + (-t103 * t283 + (t285 * t98 + t368) * t282) * t380, -t128 * t257 + t158 * t254 - t282 * t60 + t384 * t201 + (-t284 * t98 + t370) * qJD(3) + (t98 * t395 + (t104 + t367) * t283) * t380, -t103 * t129 - t104 * t128 + t254 * t60 - t384 * t98 + (t282 * t61 - t284 * t59 + (t103 * t284 + t104 * t282) * qJD(3)) * pkin(9), t155 * t326 - t284 * t417, -t184 * t454 + t155 * t183 + (-t318 - t416) * t284 + t296 * t375, t126 * t282 + t326 * t201 + (t401 - t415) * t284, t279 * t282 * t314 + t183 * t454 - t284 * t319, t344 * t282 + t473 * t201 + (-t359 * t454 + t151 + t314) * t284, t73, -t163 * t158 - t259 * t344 - t76 * t183 + (-t279 * t421 + t15) * t282 + t427 * t201 + (-t257 * t27 + t430) * t284 + t453 * t454, t126 * t259 + t158 * t164 - t184 * t76 + (t277 * t421 - t16) * t282 - t426 * t201 - t453 * t155 + (t257 * t28 - t431) * t284, t164 * t344 - t163 * t126 + t28 * t183 + t27 * t184 + (t15 * t277 - t16 * t279) * t284 - t427 * t155 + t324 * t375 + t426 * t454, t15 * t163 + t16 * t164 + t259 * t42 + t27 * t427 + t28 * t426 - t453 * t76, -t218 * t31 - t390 * t86, t217 * t31 - t218 * t32 - t390 * t85 + t391 * t86, -t158 * t218 - t193 * t390 - t282 * t31 - t302 * t86, t217 * t32 + t391 * t85, t158 * t217 + t193 * t391 - t282 * t32 - t302 * t85, -t193 * t302 - t156, -t158 * t79 - t193 * t436 + t2 * t282 + t217 * t24 + t227 * t32 + t302 * t307 - t391 * t56 - t425 * t85, -t1 * t282 + t158 * t80 + t193 * t435 + t218 * t24 - t227 * t31 + t302 * t6 - t390 * t56 + t425 * t86, -t1 * t217 - t2 * t218 - t307 * t390 + t31 * t79 - t32 * t80 + t391 * t6 - t435 * t85 + t436 * t86, t1 * t80 + t2 * t79 + t227 * t24 + t307 * t436 + t425 * t56 - t435 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t353, -t293, -t407, -t455, t260, -t181 * t201 + t301, t181 * t199 - t465, 0, 0, t260, t293, t455, t407, t353, -t407, pkin(3) * t158 - qJ(4) * t159 + (-t104 - t110) * t201 + (t103 + t372) * t199, t138 * t199 - t301 - 0.2e1 * t321 + t434, t138 * t201 - t199 * t98 + t257 * t372 + 0.2e1 * t255 + t320, -pkin(3) * t61 - qJ(4) * t59 - t103 * t110 + t104 * t372 - t138 * t98, -t201 * t414 + t416, -t201 * t296 + t319 - t417, t155 * t199 + t451, -t201 * t317 - t318, t199 * t454 + t449, t407, t438 * t151 - qJ(4) * t344 + t431 + t27 * t199 + (-t279 * t392 - t46) * t201 - t393 * t454, -t438 * t401 + qJ(4) * t126 - t199 * t28 + t430 + t393 * t155 + (t277 * t392 + t48) * t201, t46 * t155 - t48 * t237 + (qJD(5) * t155 + t126 * t438 - t199 * t48 - t201 * t28 - t15) * t279 + (-qJD(5) * t454 + t27 * t201 - t344 * t438 - t16) * t277, qJ(4) * t42 - t27 * t46 - t28 * t48 + t393 * t76 - t325 * t438 + (-t27 * t279 - t277 * t28) * qJD(5), t464, -t239 * t32 - t304 * t31 - t452 * t85 + t466 * t86, t199 * t86 + t450, t471, t199 * t85 + t470, t193 * t199, -t158 * t168 - t193 * t429 - t199 * t307 - t24 * t304 + t269 * t32 - t394 * t85 - t466 * t56, t158 * t169 + t193 * t428 - t199 * t6 + t239 * t24 - t269 * t31 + t394 * t86 - t452 * t56, t168 * t31 - t169 * t32 - t428 * t85 + t429 * t86 - t472, t1 * t169 + t168 * t2 + t24 * t269 + t307 * t429 + t394 * t56 - t428 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293, t260 - t407, -t257 ^ 2 - t444, t434 + t457, 0, 0, 0, 0, 0, 0, -t257 * t454 + t451, t415 + t449, t318 - t416 + (t317 + t414) * t201, t201 * t324 + t257 * t76 + t325, 0, 0, 0, 0, 0, 0, -t257 * t85 + t450, t257 * t86 + t470, -t464 - t471, t257 * t56 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155 * t201 - t344, t201 * t454 + t126, -t155 ^ 2 - t454 ^ 2, t155 * t27 - t28 * t454 + t42, 0, 0, 0, 0, 0, 0, t86 * t193 + t32, -t31 + t477, -t474 - t478, -t307 * t86 - t6 * t85 + t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t439, t474 - t478, -t31 - t477, t439, -t345 + (-qJD(6) + t193) * t86, -t158, t193 * t6 - t56 * t86 + t2, -t193 * t307 - t56 * t85 - t1, 0, 0;];
tauc_reg  = t5;
