% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPR10_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:28:01
% EndTime: 2019-03-09 16:28:40
% DurationCPUTime: 22.92s
% Computational Cost: add. (19835->893), mult. (47928->1153), div. (0->0), fcn. (38016->14), ass. (0->389)
t335 = sin(qJ(3));
t330 = sin(pkin(6));
t339 = cos(qJ(2));
t480 = qJD(1) * t339;
t458 = t330 * t480;
t426 = t335 * t458;
t477 = qJD(3) * t335;
t592 = -qJD(4) * t335 + (-t426 + t477) * pkin(3);
t338 = cos(qJ(3));
t532 = cos(pkin(6));
t440 = t532 * qJD(1);
t394 = t440 + qJD(2);
t336 = sin(qJ(2));
t481 = qJD(1) * t330;
t459 = t336 * t481;
t216 = t335 * t459 - t338 * t394;
t291 = -qJD(3) + t458;
t329 = sin(pkin(11));
t331 = cos(pkin(11));
t167 = t216 * t329 - t291 * t331;
t334 = sin(qJ(6));
t553 = cos(qJ(6));
t266 = t329 * t291;
t570 = t216 * t331 + t266;
t378 = t553 * t570;
t88 = -t167 * t334 + t378;
t591 = t88 ^ 2;
t218 = t335 * t394 + t338 * t459;
t209 = qJD(6) + t218;
t590 = t209 * t88;
t423 = pkin(1) * t440;
t240 = -pkin(8) * t459 + t339 * t423;
t415 = pkin(2) * t336 - pkin(9) * t339;
t241 = t415 * t481;
t158 = -t335 * t240 + t241 * t338;
t545 = pkin(3) + qJ(5);
t451 = t545 * t336;
t476 = qJD(3) * t338;
t498 = t338 * t339;
t555 = pkin(4) + pkin(9);
t589 = -(pkin(4) * t498 - t451) * t481 + t158 + t555 * t476;
t442 = t336 * t532;
t315 = pkin(1) * t442;
t529 = qJ(4) * t338;
t401 = qJ(5) * t335 - t529;
t503 = t330 * t339;
t588 = (t315 + (pkin(8) + t401) * t503) * qJD(1) - qJD(3) * t401 + qJD(5) * t338 - t592;
t89 = t167 * t553 + t334 * t570;
t587 = t89 ^ 2;
t203 = t329 * t459 - t331 * t426;
t586 = t331 * t477 + t203;
t535 = t588 * t329 + t589 * t331;
t534 = t589 * t329 - t588 * t331;
t377 = -t329 * t553 - t334 * t331;
t253 = t377 * qJD(6);
t567 = -t377 * t218 - t253;
t484 = pkin(8) * t503 + t315;
t233 = t532 * pkin(9) + t484;
t202 = qJD(2) * pkin(9) + qJD(1) * t233;
t391 = -pkin(2) * t339 - pkin(9) * t336 - pkin(1);
t208 = t391 * t481;
t116 = t202 * t335 - t338 * t208;
t474 = -qJD(4) - t116;
t496 = pkin(4) * t218 - t474;
t70 = t291 * t545 + t496;
t201 = -pkin(2) * t394 - t240;
t343 = -t218 * qJ(4) + t201;
t75 = t216 * t545 + t343;
t35 = -t329 * t75 + t331 * t70;
t26 = pkin(5) * t218 - pkin(10) * t167 + t35;
t36 = t329 * t70 + t331 * t75;
t32 = pkin(10) * t570 + t36;
t383 = -t26 * t553 + t334 * t32;
t368 = qJD(3) * t394;
t434 = t532 * qJDD(1);
t388 = t434 + qJDD(2);
t506 = t330 * t336;
t467 = t335 * t506;
t424 = qJD(3) * t467;
t472 = qJDD(1) * t336;
t447 = t330 * t472;
t473 = qJD(1) * qJD(2);
t448 = t339 * t473;
t577 = t330 * t448 + t447;
t118 = qJD(1) * t424 - t335 * t388 + (-t368 - t577) * t338;
t471 = qJDD(1) * t339;
t306 = t330 * t471;
t449 = t336 * t473;
t421 = t330 * t449;
t236 = qJDD(3) - t306 + t421;
t389 = qJD(2) * t423;
t418 = pkin(1) * t434;
t463 = pkin(8) * t306 + t336 * t418 + t339 * t389;
t169 = -pkin(8) * t421 + t463;
t147 = pkin(9) * t388 + t169;
t379 = t415 * qJD(2);
t152 = (qJD(1) * t379 + qJDD(1) * t391) * t330;
t53 = -t335 * t147 + t338 * t152 - t202 * t476 - t208 * t477;
t392 = qJDD(4) - t53;
t27 = -pkin(4) * t118 + qJD(5) * t291 - t236 * t545 + t392;
t478 = qJD(2) * t339;
t119 = t330 * (qJD(1) * (t335 * t478 + t336 * t476) + t335 * t472) + t335 * t368 - t338 * t388;
t429 = pkin(8) * t577 + t336 * t389 - t339 * t418;
t148 = -pkin(2) * t388 + t429;
t342 = t118 * qJ(4) - t218 * qJD(4) + t148;
t28 = t216 * qJD(5) + t119 * t545 + t342;
t8 = t331 * t27 - t28 * t329;
t90 = t119 * t329 + t236 * t331;
t6 = -pkin(5) * t118 - pkin(10) * t90 + t8;
t436 = t119 * t331 - t329 * t236;
t9 = t329 * t27 + t331 * t28;
t7 = pkin(10) * t436 + t9;
t1 = -t383 * qJD(6) + t334 * t6 + t553 * t7;
t11 = t334 * t26 + t32 * t553;
t2 = -qJD(6) * t11 - t334 * t7 + t553 * t6;
t268 = -t334 * t329 + t553 * t331;
t337 = sin(qJ(1));
t554 = cos(qJ(1));
t417 = t532 * t554;
t258 = t336 * t417 + t337 * t339;
t462 = t330 * t554;
t189 = t258 * t335 + t338 * t462;
t260 = -t337 * t442 + t339 * t554;
t504 = t330 * t338;
t193 = t260 * t335 - t337 * t504;
t255 = -t338 * t532 + t467;
t370 = g(1) * t193 + g(2) * t189 + g(3) * t255;
t452 = qJD(6) * t553;
t475 = qJD(6) * t334;
t578 = -t268 * t218 + t329 * t475 - t331 * t452;
t585 = -t1 * t377 - t11 * t578 + t2 * t268 + t383 * t567 - t370;
t443 = t334 * t90 - t553 * t436;
t30 = qJD(6) * t89 + t443;
t584 = -t377 * t30 + t578 * t88;
t115 = -qJDD(6) + t118;
t583 = -t115 * t377 + t209 * t578;
t499 = t335 * t339;
t380 = t329 * t499 + t331 * t336;
t204 = t380 * t481;
t457 = t338 * t480;
t508 = t329 * t335;
t582 = -pkin(5) * t330 * t457 + pkin(10) * t204 + (pkin(5) * t338 - pkin(10) * t508) * qJD(3) + t535;
t581 = pkin(10) * t586 + t534;
t519 = t218 * t291;
t579 = t119 + t519;
t441 = t339 * t532;
t263 = pkin(1) * t441 - pkin(8) * t506;
t244 = qJD(2) * t263;
t29 = -qJD(6) * t378 + t167 * t475 - t334 * t436 - t553 * t90;
t576 = -t268 * t29 - t567 * t89;
t257 = t336 * t337 - t339 * t417;
t326 = pkin(11) + qJ(6);
t320 = sin(t326);
t321 = cos(t326);
t575 = t189 * t320 + t257 * t321;
t574 = t189 * t321 - t257 * t320;
t325 = t330 ^ 2;
t572 = 0.2e1 * t325;
t159 = t338 * t240 + t335 * t241;
t134 = -qJ(4) * t459 - t159;
t112 = -pkin(4) * t426 - t134;
t569 = t555 * t477 + t112;
t226 = t236 * qJ(4);
t568 = qJD(4) * t291 - t226;
t566 = (qJDD(2) + 0.2e1 * t434) * t330;
t245 = t484 * qJD(2);
t565 = -t119 * pkin(4) + qJDD(5);
t114 = t331 * t118;
t556 = t218 ^ 2;
t564 = -t329 * t556 - t114;
t563 = -t268 * t115 - t209 * t567;
t256 = t335 * t532 + t336 * t504;
t454 = t330 * t478;
t187 = qJD(3) * t256 + t335 * t454;
t479 = qJD(2) * t336;
t562 = t330 * (-t119 * t339 + t216 * t479) - t187 * t291 + t236 * t255;
t188 = -t424 + (qJD(3) * t532 + t454) * t338;
t561 = t330 * (t118 * t339 + t218 * t479) - t188 * t291 + t236 * t256;
t509 = t329 * t118;
t560 = -t331 * t556 + t509;
t559 = -t236 * t338 - t291 * t477 + (-t216 * t336 + t291 * t499) * t481;
t558 = t236 * t335 - t291 * t476 + (-t218 * t336 + t291 * t498) * t481;
t340 = qJD(1) ^ 2;
t552 = pkin(3) * t236;
t551 = pkin(9) * t236;
t550 = pkin(9) * t257;
t259 = t336 * t554 + t337 * t441;
t549 = pkin(9) * t259;
t548 = pkin(10) * t218;
t546 = t89 * t88;
t318 = pkin(5) * t331 + pkin(4);
t544 = pkin(9) + t318;
t543 = -pkin(10) - t545;
t530 = qJ(4) * t335;
t444 = -pkin(2) - t530;
t265 = -t338 * t545 + t444;
t293 = t555 * t335;
t271 = t331 * t293;
t157 = pkin(5) * t335 + t271 + (pkin(10) * t338 - t265) * t329;
t175 = t331 * t265 + t329 * t293;
t501 = t331 * t338;
t168 = -pkin(10) * t501 + t175;
t79 = t157 * t553 - t334 * t168;
t542 = qJD(6) * t79 + t334 * t582 + t553 * t581;
t80 = t334 * t157 + t168 * t553;
t541 = -qJD(6) * t80 - t334 * t581 + t553 * t582;
t485 = pkin(2) * t503 + pkin(9) * t506;
t234 = -pkin(1) * t330 - t485;
t242 = t330 * t379;
t78 = -t233 * t476 - t234 * t477 + t242 * t338 - t335 * t244;
t58 = pkin(4) * t188 + (-qJD(2) * t451 + qJD(5) * t339) * t330 - t78;
t345 = -t188 * qJ(4) - t256 * qJD(4) + t245;
t59 = t255 * qJD(5) + t187 * t545 + t345;
t22 = t329 * t58 + t331 * t59;
t232 = -pkin(2) * t532 - t263;
t246 = t255 * pkin(3);
t437 = t256 * qJ(4) - t246;
t130 = t232 - t437;
t518 = t255 * qJ(5);
t104 = t130 + t518;
t150 = -t335 * t233 + t234 * t338;
t311 = pkin(3) * t503;
t132 = -t150 + t311;
t97 = pkin(4) * t256 + qJ(5) * t503 + t132;
t50 = t331 * t104 + t329 * t97;
t538 = t90 * t331;
t531 = qJ(4) * t216;
t107 = t218 * t545 + t531;
t117 = t338 * t202 + t335 * t208;
t96 = -t216 * pkin(4) + t117;
t51 = t331 * t107 + t329 * t96;
t276 = t543 * t329;
t277 = t543 * t331;
t179 = -t334 * t276 + t277 * t553;
t92 = t331 * t96;
t37 = -pkin(5) * t216 + t92 + (-t107 - t548) * t329;
t42 = t331 * t548 + t51;
t537 = qJD(5) * t377 + qJD(6) * t179 - t334 * t37 - t42 * t553;
t180 = t276 * t553 + t334 * t277;
t536 = -qJD(5) * t268 - qJD(6) * t180 + t334 * t42 - t37 * t553;
t533 = -pkin(5) * t203 - t544 * t477 - t112;
t279 = t291 * qJ(4);
t109 = -t117 + t279;
t528 = t109 * t291;
t526 = t116 * t291;
t525 = t117 * t291;
t524 = t167 * t291;
t523 = t167 * t329;
t522 = t216 * t218;
t521 = t216 * t291;
t515 = t257 * t338;
t514 = t259 * t338;
t513 = t291 * t338;
t512 = t320 * t335;
t511 = t321 * t335;
t510 = t325 * t340;
t507 = t329 * t338;
t505 = t330 * t337;
t502 = t331 * t335;
t497 = t218 * t318 - t474;
t76 = qJD(5) - t279 + t96;
t495 = qJD(5) - t76;
t237 = t268 * t338;
t489 = -qJD(6) * t237 + t334 * t203 - t204 * t553 - t377 * t477;
t488 = -t203 * t553 - t204 * t334 + t253 * t338 - t268 * t477;
t151 = t338 * t233 + t335 * t234;
t487 = -qJ(4) * t476 - (t315 + (pkin(8) - t529) * t503) * qJD(1) + t592;
t294 = t555 * t338;
t483 = t554 * pkin(1) + pkin(8) * t505;
t327 = t336 ^ 2;
t328 = t339 ^ 2;
t482 = t327 - t328;
t469 = qJ(4) * t503;
t468 = t339 * t510;
t247 = t257 * pkin(2);
t466 = -pkin(3) * t515 - t257 * t530 - t247;
t249 = t259 * pkin(2);
t465 = -pkin(3) * t514 - t259 * t530 - t249;
t464 = t260 * pkin(2) + t483;
t456 = t330 * t479;
t453 = -t216 ^ 2 + t556;
t450 = pkin(1) * t572;
t445 = -pkin(1) * t337 + pkin(8) * t462;
t316 = pkin(5) * t329 + qJ(4);
t21 = -t329 * t59 + t331 * t58;
t48 = -t104 * t329 + t331 * t97;
t181 = t189 * pkin(3);
t190 = t258 * t338 - t335 * t462;
t439 = qJ(4) * t190 - t181;
t183 = t193 * pkin(3);
t194 = t260 * t338 + t335 * t505;
t438 = qJ(4) * t194 - t183;
t432 = t336 * t468;
t431 = -t338 * t147 - t335 * t152 + t202 * t477 - t208 * t476;
t430 = t194 * pkin(3) + t464;
t428 = t338 * t311 + t335 * t469 + t485;
t425 = t291 * t459;
t422 = t336 * t448;
t419 = -t258 * pkin(2) + t445;
t416 = t330 * t340 * t532;
t414 = g(1) * t189 - g(2) * t193;
t413 = -g(1) * t190 + g(2) * t194;
t412 = g(1) * t257 - g(2) * t259;
t411 = -g(1) * t260 - g(2) * t258;
t410 = t9 * t329 + t8 * t331;
t409 = t329 * t477 - t204;
t408 = t436 * pkin(5);
t407 = -t329 * t35 + t331 * t36;
t406 = (qJD(3) * t216 - t118) * pkin(9);
t405 = (qJD(3) * t218 - t119) * pkin(9);
t404 = t331 * t436;
t403 = t436 * t329;
t402 = t570 * t331;
t64 = -t118 * t256 + t188 * t218;
t400 = t119 * t255 + t187 * t216;
t397 = g(3) * t428;
t396 = t570 * qJD(3);
t393 = 0.2e1 * t440 + qJD(2);
t390 = -pkin(3) * t190 + t419;
t131 = t469 - t151;
t387 = g(1) * t554 + g(2) * t337;
t332 = -pkin(10) - qJ(5);
t385 = pkin(5) * t508 - t332 * t338;
t186 = -t255 * t329 + t331 * t503;
t38 = pkin(5) * t256 + pkin(10) * t186 + t48;
t185 = t255 * t331 + t329 * t503;
t40 = pkin(10) * t185 + t50;
t12 = -t334 * t40 + t38 * t553;
t13 = t334 * t38 + t40 * t553;
t39 = t431 + t568;
t111 = t334 * t185 - t186 * t553;
t371 = qJ(4) * t193 + t430;
t77 = -t233 * t477 + t234 * t476 + t335 * t242 + t338 * t244;
t369 = -g(1) * t194 - g(2) * t190 - g(3) * t256;
t31 = -t39 + t565;
t366 = t31 + t369;
t364 = -g(1) * t259 - g(2) * t257 + g(3) * t503;
t363 = -g(3) * t506 + t411;
t106 = -pkin(4) * t255 - t131;
t362 = -qJ(4) * t189 + t390;
t360 = t167 * t331 + t329 * t570;
t359 = -t201 * t291 - t551;
t102 = t216 * pkin(3) + t343;
t358 = t102 * t291 + t551;
t356 = t118 * t255 - t119 * t256 - t187 * t218 - t188 * t216;
t65 = -t118 * t335 - t218 * t513;
t355 = -t119 * t338 - t335 * t521;
t354 = t370 + t53;
t353 = -t369 + t431;
t352 = pkin(9) * qJD(3) * t291 - t364;
t68 = -qJ(4) * t456 + qJD(4) * t503 - t77;
t41 = t119 * pkin(3) + t342;
t350 = t352 - t41;
t349 = -t148 + t352;
t348 = t118 + t521;
t347 = -t353 - t568;
t60 = -pkin(4) * t187 - t68;
t346 = t102 * t218 + qJDD(4) - t354;
t344 = t347 + t565;
t341 = (-t118 + t521) * t338 + (-t119 + t519) * t335;
t285 = -pkin(3) * t338 + t444;
t252 = pkin(5) * t501 + t294;
t243 = t484 * qJD(1);
t238 = t377 * t338;
t174 = -t265 * t329 + t271;
t156 = (-t236 * t339 - t291 * t479) * t330;
t154 = t187 * t329 + t331 * t456;
t153 = -t187 * t331 + t329 * t456;
t149 = pkin(3) * t218 + t531;
t135 = -pkin(3) * t459 - t158;
t128 = t193 * t320 + t259 * t321;
t127 = t193 * t321 - t259 * t320;
t110 = -t185 * t553 - t186 * t334;
t108 = pkin(3) * t291 - t474;
t74 = t187 * pkin(3) + t345;
t72 = -pkin(3) * t456 - t78;
t71 = -pkin(5) * t185 + t106;
t61 = -pkin(5) * t570 + t76;
t49 = -t107 * t329 + t92;
t47 = qJD(6) * t111 + t153 * t553 + t334 * t154;
t46 = t334 * t153 - t154 * t553 - t185 * t452 - t186 * t475;
t44 = t392 - t552;
t43 = pkin(5) * t153 + t60;
t18 = -t408 + t31;
t17 = -pkin(10) * t153 + t22;
t16 = pkin(5) * t188 - pkin(10) * t154 + t21;
t4 = -qJD(6) * t13 + t16 * t553 - t334 * t17;
t3 = qJD(6) * t12 + t334 * t16 + t17 * t553;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t337 - g(2) * t554, t387, 0, 0 (qJDD(1) * t327 + 0.2e1 * t422) * t325 (t336 * t471 - t473 * t482) * t572, t336 * t566 + t393 * t454 (qJDD(1) * t328 - 0.2e1 * t422) * t325, t339 * t566 - t393 * t456, t388 * t532, -t245 * t394 + t263 * t388 - t429 * t532 + g(1) * t258 - g(2) * t260 + (-t449 + t471) * t450, -t244 * t394 - t484 * t388 - t169 * t532 + (-t448 - t472) * t450 - t412 ((-t240 * qJD(2) + qJDD(1) * t484 + t169) * t339 + (-qJD(2) * t243 - qJDD(1) * t263 + t429) * t336 - t387) * t330, t325 * qJDD(1) * pkin(1) ^ 2 - g(1) * t445 - g(2) * t483 + t169 * t484 - t240 * t245 + t243 * t244 - t263 * t429, t64, t356, t561, t400, -t562, t156, t119 * t232 + t148 * t255 + t150 * t236 + t187 * t201 + t216 * t245 - t291 * t78 + (-t116 * t479 - t339 * t53) * t330 - t413, -t118 * t232 + t148 * t256 - t151 * t236 + t188 * t201 + t218 * t245 + t291 * t77 + (-t117 * t479 - t339 * t431) * t330 - t414, t116 * t188 - t117 * t187 + t118 * t150 - t119 * t151 - t216 * t77 - t218 * t78 + t255 * t431 - t256 * t53 + t412, -t431 * t151 + t117 * t77 + t53 * t150 - t116 * t78 + t148 * t232 + t201 * t245 - g(1) * (t419 - t550) - g(2) * (t464 + t549) t156, -t561, t562, t64, t356, t400, t108 * t188 + t109 * t187 - t118 * t132 + t119 * t131 + t216 * t68 + t218 * t72 + t255 * t39 + t256 * t44 + t412, -t102 * t187 - t119 * t130 + t132 * t236 - t216 * t74 - t255 * t41 - t291 * t72 + (t108 * t479 - t339 * t44) * t330 + t413, -t102 * t188 + t118 * t130 - t131 * t236 - t218 * t74 - t256 * t41 + t291 * t68 + (-t109 * t479 + t339 * t39) * t330 + t414, t41 * t130 + t102 * t74 + t39 * t131 + t109 * t68 + t44 * t132 + t108 * t72 - g(1) * (t362 - t550) - g(2) * (t371 + t549) t154 * t167 - t186 * t90, -t167 * t153 + t154 * t570 + t90 * t185 - t186 * t436, t118 * t186 + t154 * t218 + t167 * t188 + t256 * t90, -t153 * t570 + t185 * t436, -t185 * t118 - t153 * t218 + t188 * t570 + t256 * t436, t64, t21 * t218 - t48 * t118 + t8 * t256 + t35 * t188 - t60 * t570 - t106 * t436 - t31 * t185 + t76 * t153 - g(1) * (-t189 * t329 - t257 * t331) - g(2) * (t193 * t329 + t259 * t331) -t22 * t218 + t50 * t118 - t9 * t256 - t36 * t188 + t60 * t167 + t106 * t90 - t31 * t186 + t76 * t154 - g(1) * (-t189 * t331 + t257 * t329) - g(2) * (t193 * t331 - t259 * t329) -t36 * t153 - t35 * t154 - t21 * t167 + t9 * t185 + t8 * t186 + t22 * t570 + t436 * t50 - t48 * t90 - t413, t9 * t50 + t36 * t22 + t8 * t48 + t35 * t21 + t31 * t106 + t76 * t60 - g(1) * (-qJ(5) * t190 - t257 * t555 + t362) - g(2) * (qJ(5) * t194 + t259 * t555 + t371) -t111 * t29 - t46 * t89, t110 * t29 - t111 * t30 - t46 * t88 - t47 * t89, -t111 * t115 + t188 * t89 - t209 * t46 - t256 * t29, t110 * t30 - t47 * t88, t110 * t115 + t188 * t88 - t209 * t47 - t256 * t30, -t115 * t256 + t188 * t209, g(1) * t575 - g(2) * t128 + t18 * t110 - t12 * t115 - t383 * t188 + t2 * t256 + t4 * t209 + t71 * t30 - t43 * t88 + t61 * t47, g(1) * t574 - g(2) * t127 - t1 * t256 - t11 * t188 + t18 * t111 + t13 * t115 - t3 * t209 - t71 * t29 + t43 * t89 - t61 * t46, -t1 * t110 - t11 * t47 - t111 * t2 + t12 * t29 - t13 * t30 + t3 * t88 - t383 * t46 - t4 * t89 - t413, t1 * t13 + t11 * t3 + t2 * t12 - t383 * t4 + t18 * t71 + t61 * t43 - g(1) * (-t189 * t316 + t190 * t332 - t257 * t544 + t390) - g(2) * (t193 * t316 - t194 * t332 + t259 * t544 + t430); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432, t482 * t510, -t339 * t416 + t447, t432, t336 * t416 + t306, t388, pkin(1) * t336 * t510 + t243 * t394 - t364 - t429, pkin(1) * t468 + t240 * t394 + (pkin(8) * t473 + g(3)) * t506 - t411 - t463, 0, 0, t65, t341, t558, t355, -t559, t425, -pkin(2) * t119 + t116 * t459 + t158 * t291 - t216 * t243 + t335 * t359 + t338 * t349, pkin(2) * t118 + t117 * t459 - t159 * t291 - t218 * t243 - t335 * t349 + t338 * t359, t158 * t218 + t159 * t216 + (t405 - t431 - t526) * t338 + (t406 - t53 + t525) * t335 + t363, -t148 * pkin(2) - t117 * t159 + t116 * t158 - t201 * t243 + g(1) * t249 + g(2) * t247 - g(3) * t485 + (-t53 * t335 - t431 * t338 + (t116 * t338 - t117 * t335) * qJD(3) + t411) * pkin(9), t425, -t558, t559, t65, t341, t355, -t134 * t216 - t135 * t218 + (-t108 * t291 - t39 + t405) * t338 + (t406 + t44 - t528) * t335 + t363, -t108 * t459 - t119 * t285 + t135 * t291 - t216 * t487 + t335 * t358 - t338 * t350, t109 * t459 + t118 * t285 - t134 * t291 - t218 * t487 + t335 * t350 + t338 * t358, t41 * t285 - t109 * t134 - t108 * t135 - g(1) * t465 - g(2) * t466 - t397 + t487 * t102 + (t44 * t335 - t39 * t338 + (t108 * t338 + t109 * t335) * qJD(3) + t411) * pkin(9), t167 * t409 - t507 * t90, -t204 * t570 + t167 * t203 + (-t403 - t538) * t338 + t360 * t477, t335 * t90 + t409 * t218 + (t509 - t524) * t338, t203 * t570 - t338 * t404 + t396 * t502, t436 * t335 + t586 * t218 + (-t458 * t570 + t114 + t396) * t338, t65, -t174 * t118 + t8 * t335 - t294 * t436 + t31 * t501 - t76 * t203 - g(1) * (-t259 * t508 + t260 * t331) - g(2) * (-t257 * t508 + t258 * t331) + t535 * t218 + (t338 * t35 - t502 * t76) * qJD(3) + (-g(3) * t380 - t35 * t457) * t330 + t569 * t570, t175 * t118 - t9 * t335 + t294 * t90 - t31 * t507 - t76 * t204 - g(1) * (-t259 * t502 - t260 * t329) - g(2) * (-t257 * t502 - t258 * t329) - t534 * t218 - t569 * t167 + (-t338 * t36 + t508 * t76) * qJD(3) + (t36 * t457 - g(3) * (-t329 * t336 + t331 * t499)) * t330, t175 * t436 - t174 * t90 + t36 * t203 + t35 * t204 - t535 * t167 + t407 * t477 + (t329 * t8 - t331 * t9 - t364) * t338 + t534 * t570, t9 * t175 + t8 * t174 + t31 * t294 - g(1) * (-qJ(5) * t514 + t260 * t555 + t465) - g(2) * (-qJ(5) * t515 + t258 * t555 + t466) - g(3) * ((pkin(4) * t336 + qJ(5) * t498) * t330 + t428) - t569 * t76 + t534 * t36 + t535 * t35, -t238 * t29 + t489 * t89, t237 * t29 - t238 * t30 - t488 * t89 + t489 * t88, -t115 * t238 + t209 * t489 - t29 * t335 - t513 * t89, t237 * t30 - t488 * t88, t115 * t237 - t209 * t488 - t30 * t335 - t513 * t88, -t115 * t335 - t209 * t513, -t79 * t115 + t2 * t335 - t383 * t476 + t252 * t30 + t18 * t237 - g(1) * (-t259 * t512 + t260 * t321) - g(2) * (-t257 * t512 + t258 * t321) - t533 * t88 + t488 * t61 + t541 * t209 + (t383 * t457 - g(3) * (t320 * t499 + t321 * t336)) * t330, t80 * t115 - t1 * t335 - t11 * t476 - t252 * t29 + t18 * t238 - g(1) * (-t259 * t511 - t260 * t320) - g(2) * (-t257 * t511 - t258 * t320) + t533 * t89 + t489 * t61 - t542 * t209 + (t11 * t457 - g(3) * (-t320 * t336 + t321 * t499)) * t330, -t1 * t237 - t11 * t488 - t2 * t238 + t29 * t79 - t30 * t80 - t338 * t364 + t383 * t489 - t541 * t89 + t542 * t88, t1 * t80 + t2 * t79 + t18 * t252 - g(1) * (-t259 * t385 + t260 * t544 + t465) - g(2) * (-t257 * t385 + t258 * t544 + t466) - t397 + t533 * t61 - g(3) * (t318 * t336 + t339 * t385) * t330 + t542 * t11 - t541 * t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522, t453, -t348, -t522, -t579, t236, -t201 * t218 + t354 - t525, t201 * t216 + t353 + t526, 0, 0, t236, t348, t579, t522, t453, -t522, pkin(3) * t118 - qJ(4) * t119 + (-t109 - t117) * t218 + (t108 + t474) * t216, t149 * t216 + t346 + t525 - 0.2e1 * t552, -t102 * t216 + t149 * t218 + t291 * t474 + t226 + t347, -t44 * pkin(3) - g(1) * t438 - g(2) * t439 - g(3) * t437 - t39 * qJ(4) - t102 * t149 - t108 * t117 + t109 * t474, -t218 * t523 + t538, -t218 * t360 - t90 * t329 + t404, t167 * t216 + t564, -t218 * t402 - t403, t216 * t570 + t560, t522, t545 * t114 - qJ(4) * t436 + t35 * t216 + (-t331 * t495 - t49) * t218 + t366 * t329 - t496 * t570, -t545 * t509 + qJ(4) * t90 - t216 * t36 + t496 * t167 + (t329 * t495 + t51) * t218 + t366 * t331, t49 * t167 - t51 * t266 + (qJD(5) * t167 - t216 * t51 - t218 * t36 + t545 * t90 - t8) * t331 + (-qJD(5) * t570 + t35 * t218 - t436 * t545 - t9) * t329 + t370, t31 * qJ(4) - t36 * t51 - t35 * t49 - g(1) * (-qJ(5) * t193 + t438) - g(2) * (-qJ(5) * t189 + t439) - g(3) * (t437 - t518) + t496 * t76 - t410 * t545 + (-t329 * t36 - t331 * t35) * qJD(5), t576, -t268 * t30 - t29 * t377 - t567 * t88 + t578 * t89, t216 * t89 + t563, t584, t216 * t88 + t583, t209 * t216, -t115 * t179 - t18 * t377 + t209 * t536 - t216 * t383 + t30 * t316 + t320 * t369 - t497 * t88 - t578 * t61, -t11 * t216 + t115 * t180 + t18 * t268 - t209 * t537 - t29 * t316 + t321 * t369 + t497 * t89 - t567 * t61, t179 * t29 - t180 * t30 - t536 * t89 + t537 * t88 - t585, t1 * t180 + t2 * t179 + t18 * t316 - g(1) * (t193 * t332 + t194 * t316 - t183) - g(2) * (t189 * t332 + t190 * t316 - t181) - g(3) * (t255 * t332 + t256 * t316 - t246) + t497 * t61 + t537 * t11 - t536 * t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t348, t236 - t522, -t291 ^ 2 - t556, t346 - t528 - t552, 0, 0, 0, 0, 0, 0, -t291 * t570 + t564, t524 + t560, t403 - t538 + (t402 + t523) * t218, t218 * t407 + t291 * t76 - t370 + t410, 0, 0, 0, 0, 0, 0, -t291 * t88 + t563, t291 * t89 + t583, -t576 - t584, t291 * t61 + t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167 * t218 - t436, t218 * t570 + t90, -t167 ^ 2 - t570 ^ 2, t167 * t35 - t36 * t570 + t344, 0, 0, 0, 0, 0, 0, t89 * t209 + t30, -t29 + t590, -t587 - t591, -t11 * t88 - t383 * t89 + t344 - t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t546, t587 - t591, -t29 - t590, t546, -t443 + (-qJD(6) + t209) * t89, -t115, t11 * t209 - t61 * t89 - g(1) * t127 - g(2) * t574 - g(3) * (t255 * t321 + t320 * t503) + t2, -t383 * t209 - t61 * t88 + g(1) * t128 + g(2) * t575 - g(3) * (-t255 * t320 + t321 * t503) - t1, 0, 0;];
tau_reg  = t5;
