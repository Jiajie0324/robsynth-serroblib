% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 07:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPPR10_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR10_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 07:05:42
% EndTime: 2019-05-07 07:06:18
% DurationCPUTime: 16.35s
% Computational Cost: add. (90491->634), mult. (198423->907), div. (0->0), fcn. (156317->12), ass. (0->398)
t344 = cos(pkin(6));
t336 = qJD(1) * t344 + qJD(2);
t346 = sin(qJ(3));
t349 = cos(qJ(3));
t342 = sin(pkin(6));
t347 = sin(qJ(2));
t419 = qJD(1) * t347;
t402 = t342 * t419;
t305 = -t349 * t336 + t346 * t402;
t302 = t305 ^ 2;
t350 = cos(qJ(2));
t420 = qJD(1) * t342;
t401 = t350 * t420;
t328 = -qJD(3) + t401;
t326 = t328 ^ 2;
t264 = -t326 - t302;
t400 = qJD(2) * t420;
t412 = qJDD(1) * t342;
t316 = -t347 * t400 + t350 * t412;
t310 = -qJDD(3) + t316;
t307 = t336 * t346 + t349 * t402;
t436 = t307 * t305;
t366 = t310 + t436;
t494 = t349 * t366;
t193 = t264 * t346 - t494;
t528 = pkin(1) * t193;
t472 = t307 ^ 2;
t488 = -t472 - t326;
t367 = t310 - t436;
t492 = t367 * t349;
t201 = t346 * t488 - t492;
t315 = t347 * t412 + t350 * t400;
t335 = qJDD(1) * t344 + qJDD(2);
t382 = t315 * t349 + t335 * t346;
t414 = qJD(3) - t328;
t227 = t305 * t414 - t382;
t527 = pkin(1) * (t201 * t347 - t227 * t350);
t526 = pkin(2) * t193;
t525 = pkin(9) * t193;
t495 = t346 * t366;
t195 = t264 * t349 + t495;
t524 = pkin(9) * t195;
t523 = t195 * t347;
t522 = t195 * t350;
t283 = -t472 + t326;
t206 = t283 * t349 - t495;
t521 = t344 * t206;
t284 = t326 - t302;
t208 = t284 * t346 + t492;
t520 = t344 * t208;
t493 = t367 * t346;
t198 = t349 * t488 + t493;
t519 = -pkin(8) * (t201 * t350 + t227 * t347) - pkin(1) * t198;
t470 = -2 * qJD(4);
t517 = pkin(2) * t198;
t516 = pkin(9) * t198;
t515 = pkin(9) * t201;
t514 = t347 * (t284 * t349 - t493);
t513 = t347 * (t283 * t346 + t494);
t242 = -t472 - t302;
t510 = pkin(2) * t242;
t507 = t242 * t347;
t506 = t242 * t350;
t263 = -qJD(3) * t305 + t382;
t290 = t305 * t328;
t225 = t263 + t290;
t392 = -pkin(2) * t350 - pkin(9) * t347;
t314 = t392 * t420;
t351 = qJD(1) ^ 2;
t468 = sin(qJ(1));
t469 = cos(qJ(1));
t375 = g(1) * t469 + g(2) * t468;
t311 = -t351 * pkin(1) + pkin(8) * t412 - t375;
t374 = g(1) * t468 - g(2) * t469;
t427 = t342 * t351;
t359 = qJDD(1) * pkin(1) + pkin(8) * t427 + t374;
t356 = t344 * t359;
t395 = t311 * t347 - t350 * t356;
t471 = t336 ^ 2;
t211 = t342 * (g(3) * t350 + t314 * t419) - t335 * pkin(2) - t471 * pkin(9) + t395;
t394 = -t315 * t346 + t349 * t335;
t262 = qJD(3) * t307 - t394;
t353 = t262 * pkin(3) - qJ(4) * t225 + t211;
t505 = t307 * t470 + t353;
t502 = -2 * qJD(5);
t341 = sin(pkin(11));
t343 = cos(pkin(11));
t278 = -t343 * t305 - t328 * t341;
t280 = t305 * t341 - t328 * t343;
t239 = t280 * t278;
t490 = -t239 + t263;
t501 = t341 * t490;
t500 = t343 * t490;
t345 = sin(qJ(6));
t348 = cos(qJ(6));
t232 = t348 * t278 + t280 * t345;
t234 = -t278 * t345 + t280 * t348;
t175 = t234 * t232;
t259 = qJDD(6) + t263;
t491 = -t175 + t259;
t499 = t345 * t491;
t498 = t348 * t491;
t487 = t472 - t302;
t497 = t350 * t487;
t338 = t342 ^ 2;
t421 = qJD(1) * t336;
t496 = t338 * (-t344 * t351 + t421);
t237 = t341 * t262 - t343 * t310;
t440 = t278 * t307;
t185 = t237 + t440;
t226 = t263 - t290;
t281 = pkin(4) * t307 + qJ(5) * t328;
t398 = -pkin(3) * t328 + t470;
t100 = -pkin(4) * t302 + qJ(5) * t262 + (-t281 + t398) * t307 + t353;
t429 = t342 * t347;
t352 = -g(3) * t429 + t347 * t356;
t212 = t335 * pkin(9) - t471 * pkin(2) + (t314 * t420 + t311) * t350 + t352;
t464 = t344 * g(3);
t213 = -t316 * pkin(2) - t315 * pkin(9) - t464 + ((pkin(2) * t347 - pkin(9) * t350) * t421 - t359) * t342;
t164 = t212 * t346 - t349 * t213;
t267 = pkin(3) * t305 - qJ(4) * t307;
t139 = t310 * pkin(3) - t326 * qJ(4) + t267 * t307 + qJDD(4) + t164;
t95 = pkin(4) * t226 + t366 * qJ(5) + t139;
t393 = -t100 * t341 + t280 * t502 + t343 * t95;
t64 = t343 * t100 + t278 * t502 + t341 * t95;
t428 = t342 * t350;
t265 = g(3) * t428 + t395;
t266 = t350 * t311 + t352;
t489 = t347 * t265 + t350 * t266;
t473 = -pkin(10) * t185 + t393;
t354 = pkin(5) * t490 + t473;
t236 = t343 * t262 + t310 * t341;
t244 = pkin(5) * t307 - pkin(10) * t280;
t276 = t278 ^ 2;
t52 = -pkin(5) * t276 + pkin(10) * t236 - t244 * t307 + t64;
t31 = t345 * t52 - t348 * t354;
t455 = t348 * t52;
t32 = t345 * t354 + t455;
t18 = t31 * t345 + t348 * t32;
t17 = -t31 * t348 + t32 * t345;
t460 = t17 * t343;
t11 = t18 * t341 + t460;
t165 = t212 * t349 + t213 * t346;
t365 = -t326 * pkin(3) - t267 * t305 + t165;
t453 = qJ(4) * t310;
t99 = -t453 + qJDD(5) - t262 * pkin(4) - t302 * qJ(5) + (t470 - t281) * t328 + t365;
t86 = -t236 * pkin(5) - t276 * pkin(10) + t244 * t280 + t99;
t15 = -pkin(5) * t86 + pkin(10) * t18;
t463 = pkin(3) + qJ(5);
t485 = -pkin(10) * t460 + qJ(4) * t86 - t11 * t463 - t15 * t341;
t35 = t341 * t64 + t343 * t393;
t484 = qJ(4) * t99 - t35 * t463;
t230 = t232 ^ 2;
t231 = t234 ^ 2;
t147 = -t230 - t231;
t383 = t236 * t345 + t237 * t348;
t146 = -qJD(6) * t232 + t383;
t300 = qJD(6) + t307;
t204 = t300 * t232;
t126 = t146 + t204;
t396 = -t348 * t236 + t237 * t345;
t369 = (-qJD(6) + t300) * t234 - t396;
t79 = t126 * t345 + t348 * t369;
t13 = -pkin(5) * t147 + pkin(10) * t79 + t18;
t77 = -t126 * t348 + t345 * t369;
t14 = -pkin(10) * t77 - t17;
t42 = t341 * t79 + t343 * t77;
t483 = qJ(4) * t147 - t13 * t341 + t14 * t343 - t42 * t463;
t413 = qJD(6) + t300;
t127 = -t232 * t413 + t383;
t297 = t300 ^ 2;
t190 = -t231 - t297;
t153 = t175 + t259;
t451 = t153 * t348;
t129 = -t190 * t345 - t451;
t456 = t345 * t86;
t47 = -pkin(5) * t127 + pkin(10) * t129 + t456;
t452 = t153 * t345;
t128 = t190 * t348 - t452;
t454 = t348 * t86;
t60 = -pkin(10) * t128 + t454;
t74 = t128 * t343 + t129 * t341;
t482 = qJ(4) * t127 - t341 * t47 + t343 * t60 - t463 * t74;
t122 = t234 * t413 + t396;
t166 = -t297 - t230;
t103 = t166 * t348 - t499;
t45 = -pkin(5) * t122 + pkin(10) * t103 - t454;
t102 = t166 * t345 + t498;
t55 = -pkin(10) * t102 + t456;
t67 = t102 * t343 + t103 * t341;
t481 = qJ(4) * t122 - t341 * t45 + t343 * t55 - t463 * t67;
t361 = 0.2e1 * qJD(4) * t328 - t365;
t480 = -pkin(3) * t488 - qJ(4) * (t367 + t310) - t361;
t439 = t280 * t307;
t377 = t236 + t439;
t142 = -t185 * t343 + t341 * t377;
t277 = t280 ^ 2;
t197 = -t276 - t277;
t479 = qJ(4) * t197 - t142 * t463 - t35;
t209 = -t472 - t276;
t148 = t341 * t209 + t500;
t181 = -t236 + t439;
t458 = t341 * t99;
t478 = qJ(4) * t181 - t148 * t463 + t458;
t411 = -t277 - t472;
t189 = t239 + t263;
t430 = t341 * t189;
t155 = t343 * t411 - t430;
t389 = t237 - t440;
t457 = t343 * t99;
t477 = qJ(4) * t389 - t155 * t463 + t457;
t433 = t328 * t346;
t390 = -t349 * t262 - t305 * t433;
t404 = t350 * t436;
t432 = t328 * t349;
t476 = t344 * t390 + (t347 * (t262 * t346 - t305 * t432) + t404) * t342;
t257 = t349 * t263;
t255 = t346 * t263;
t391 = -t307 * t432 + t255;
t475 = t344 * t391 + (t347 * (t307 * t433 + t257) - t404) * t342;
t376 = (t305 * t346 + t307 * t349) * t328;
t474 = t344 * t376 + t310 * t428 + (t305 * t349 - t307 * t346) * t328 * t429;
t467 = pkin(3) * t346;
t466 = pkin(3) * t349;
t465 = pkin(8) * t342;
t459 = t341 * t17;
t450 = t189 * t343;
t449 = t211 * t346;
t448 = t211 * t349;
t291 = t328 * t307;
t219 = t262 - t291;
t447 = t219 * t349;
t438 = t300 * t345;
t437 = t300 * t348;
t435 = t307 * t341;
t434 = t307 * t343;
t431 = t338 * t351;
t327 = t350 * t347 * t431;
t313 = t327 + t335;
t425 = t347 * t313;
t312 = -t327 + t335;
t423 = t350 * t312;
t415 = -qJD(3) - t328;
t410 = t346 * t175;
t409 = t349 * t175;
t408 = t346 * t239;
t407 = t349 * t239;
t339 = t347 ^ 2;
t406 = t339 * t431;
t340 = t350 ^ 2;
t405 = t340 * t431;
t320 = t336 * t401;
t403 = t320 + t315;
t399 = qJ(4) * t346 + pkin(2);
t107 = t164 * t346 + t349 * t165;
t137 = -t361 - t453;
t388 = -pkin(3) * t139 + qJ(4) * t137;
t220 = t307 * t415 + t394;
t223 = t305 * t415 + t382;
t387 = -pkin(3) * t223 + qJ(4) * t220;
t36 = -t341 * t393 + t343 * t64;
t384 = t164 * t349 - t165 * t346;
t380 = -pkin(1) + t392;
t355 = pkin(3) * t366 - qJ(4) * t264 + t139;
t319 = t336 * t402;
t318 = (t339 - t340) * t431;
t317 = -t405 - t471;
t298 = -t406 - t471;
t292 = t342 * t359 + t464;
t289 = t316 - t319;
t288 = t316 + t319;
t287 = -t320 + t315;
t252 = -t277 + t472;
t251 = t276 - t472;
t238 = t277 - t276;
t221 = -t307 * t414 + t394;
t218 = t262 + t291;
t203 = -t231 + t297;
t202 = t230 - t297;
t192 = (-t278 * t343 + t280 * t341) * t307;
t191 = (t278 * t341 + t280 * t343) * t307;
t179 = t237 * t343 - t280 * t435;
t178 = -t237 * t341 - t280 * t434;
t177 = t236 * t341 - t278 * t434;
t176 = -t236 * t343 - t278 * t435;
t174 = t231 - t230;
t173 = -t218 * t349 + t226 * t346;
t172 = t220 * t349 + t223 * t346;
t170 = -t219 * t346 - t227 * t349;
t169 = t221 * t346 + t225 * t349;
t168 = t220 * t346 - t223 * t349;
t167 = t191 * t349 + t255;
t162 = t251 * t343 - t430;
t161 = -t252 * t341 + t500;
t160 = -t251 * t341 - t450;
t159 = -t252 * t343 - t501;
t158 = (-t232 * t348 + t234 * t345) * t300;
t157 = (-t232 * t345 - t234 * t348) * t300;
t156 = -t341 * t411 - t450;
t151 = t178 * t349 + t408;
t150 = t176 * t349 - t408;
t149 = t209 * t343 - t501;
t145 = -qJD(6) * t234 - t396;
t144 = t341 * t185 + t343 * t377;
t143 = -t181 * t343 - t341 * t389;
t141 = t181 * t341 - t343 * t389;
t140 = t307 * t398 + t353;
t138 = pkin(2) * t227 + t449 - t515;
t136 = pkin(2) * t221 - t448 + t524;
t135 = t202 * t348 - t452;
t134 = -t203 * t345 + t498;
t133 = t202 * t345 + t451;
t132 = t203 * t348 + t499;
t131 = t159 * t349 + t185 * t346;
t130 = t160 * t349 + t346 * t377;
t125 = t146 - t204;
t121 = -qJ(4) * t242 + t139;
t119 = t146 * t348 - t234 * t438;
t118 = t146 * t345 + t234 * t437;
t117 = -t145 * t345 + t232 * t437;
t116 = t145 * t348 + t232 * t438;
t115 = t155 * t346 + t349 * t389;
t114 = -t155 * t349 + t346 * t389;
t113 = -pkin(3) * t242 + t137;
t112 = t141 * t349 + t238 * t346;
t111 = (t219 - t291) * pkin(3) + t505;
t110 = pkin(3) * t291 - qJ(4) * t227 - t505;
t109 = t148 * t346 + t181 * t349;
t108 = -t148 * t349 + t181 * t346;
t105 = t142 * t346 + t197 * t349;
t104 = -t142 * t349 + t197 * t346;
t97 = -t157 * t341 + t158 * t343;
t96 = -t157 * t343 - t158 * t341;
t92 = -pkin(2) * t211 + pkin(9) * t107;
t91 = t259 * t346 + t349 * t96;
t90 = pkin(4) * t142 - qJ(4) * t144;
t89 = t137 * t349 + t139 * t346;
t88 = t137 * t346 - t139 * t349;
t87 = pkin(9) * t173 + t107 - t510;
t85 = t515 + t110 * t346 - (pkin(2) + t466) * t227;
t84 = t111 * t349 + t219 * t399 - t524;
t83 = -t133 * t341 + t135 * t343;
t82 = -t132 * t341 + t134 * t343;
t81 = -t133 * t343 - t135 * t341;
t80 = -t132 * t343 - t134 * t341;
t78 = -t122 * t348 - t125 * t345;
t76 = -t122 * t345 + t125 * t348;
t75 = -t341 * t128 + t129 * t343;
t72 = -t118 * t341 + t119 * t343;
t71 = -t116 * t341 + t117 * t343;
t70 = -t118 * t343 - t119 * t341;
t69 = -t116 * t343 - t117 * t341;
t68 = -t341 * t102 + t103 * t343;
t66 = t349 * t70 + t410;
t65 = t349 * t69 - t410;
t61 = pkin(9) * t172 + t113 * t349 + t121 * t346 - t510;
t59 = pkin(4) * t389 - t156 * t463 - t458;
t58 = t126 * t346 + t349 * t80;
t57 = t346 * t369 + t349 * t81;
t56 = pkin(4) * t181 - t149 * t463 + t457;
t54 = t127 * t349 + t346 * t74;
t53 = t127 * t346 - t349 * t74;
t50 = t122 * t349 + t346 * t67;
t49 = t122 * t346 - t349 * t67;
t48 = pkin(4) * t155 - qJ(4) * t156 - t64;
t46 = pkin(4) * t148 - qJ(4) * t149 + t393;
t44 = -t341 * t77 + t343 * t79;
t43 = -t341 * t76 + t343 * t78;
t41 = -t341 * t78 - t343 * t76;
t40 = pkin(9) * t89 + (-t399 - t466) * t140;
t39 = t174 * t346 + t349 * t41;
t38 = t147 * t349 + t346 * t42;
t37 = t147 * t346 - t349 * t42;
t34 = t346 * t35 + t349 * t99;
t33 = t346 * t99 - t349 * t35;
t29 = pkin(4) * t197 - t144 * t463 - t36;
t28 = -pkin(2) * t156 + pkin(9) * t115 + t346 * t48 + t349 * t59;
t27 = -pkin(2) * t149 + pkin(9) * t109 + t346 * t46 + t349 * t56;
t26 = pkin(4) * t42 + pkin(5) * t77 - qJ(4) * t44;
t25 = pkin(4) * t35 - qJ(4) * t36;
t24 = -pkin(2) * t144 + pkin(9) * t105 + t29 * t349 + t346 * t90;
t23 = pkin(4) * t99 - t36 * t463;
t22 = -qJ(4) * t75 + pkin(4) * t74 - t455 - t345 * t473 + (-t345 * t490 + t128) * pkin(5);
t21 = pkin(4) * t127 - t341 * t60 - t343 * t47 - t463 * t75;
t20 = pkin(4) * t67 + pkin(5) * t102 - qJ(4) * t68 - t31;
t19 = pkin(4) * t122 - t341 * t55 - t343 * t45 - t463 * t68;
t12 = t18 * t343 - t459;
t10 = t11 * t346 + t349 * t86;
t9 = -t11 * t349 + t346 * t86;
t8 = -pkin(2) * t75 + pkin(9) * t54 + t21 * t349 + t22 * t346;
t7 = -pkin(2) * t68 + pkin(9) * t50 + t19 * t349 + t20 * t346;
t6 = -pkin(2) * t36 + pkin(9) * t34 + t23 * t349 + t25 * t346;
t5 = pkin(4) * t147 - t13 * t343 - t14 * t341 - t44 * t463;
t4 = -pkin(2) * t44 + pkin(9) * t38 + t26 * t346 + t349 * t5;
t3 = pkin(4) * t11 + pkin(5) * t17 - qJ(4) * t12;
t2 = pkin(4) * t86 + pkin(10) * t459 - t12 * t463 - t15 * t343;
t1 = -pkin(2) * t12 + pkin(9) * t10 + t2 * t349 + t3 * t346;
t16 = [0, 0, 0, 0, 0, qJDD(1), t374, t375, 0, 0, (t315 * t342 + t350 * t496) * t347, t344 * t318 + (t347 * t289 + t350 * t403) * t342, t344 * t287 + (t425 + t350 * (-t406 + t471)) * t342, (t316 * t342 - t347 * t496) * t350, t344 * t288 + (t347 * (t405 - t471) + t423) * t342, t344 * t335, (-t265 + pkin(1) * (t313 * t350 + t317 * t347)) * t344 + (t350 * t292 + pkin(1) * t289 + pkin(8) * (t317 * t350 - t425)) * t342, -t292 * t429 - t344 * t266 + pkin(1) * (-t342 * t403 + (t298 * t350 - t312 * t347) * t344) + (-t298 * t347 - t423) * t465, pkin(1) * ((-t287 * t350 + t288 * t347) * t344 - (-t339 - t340) * t338 * t427) + (t287 * t347 + t288 * t350) * t465 + t489 * t342, pkin(1) * (t292 * t342 + (-t265 * t350 + t266 * t347) * t344) + t489 * t465, t475, t344 * t169 + (t347 * (t221 * t349 - t225 * t346) - t497) * t342, t521 + (-t350 * t226 - t513) * t342, t476, -t520 + (-t350 * t220 - t514) * t342, t474, (t136 + pkin(1) * (t221 * t350 + t523)) * t344 + (t347 * (t449 - t525) + t350 * (t164 - t526) - t528 + pkin(8) * (-t221 * t347 + t522)) * t342, (t138 - t527) * t344 + (t347 * (t448 - t516) + t350 * (t165 - t517) + t519) * t342, (t87 + pkin(1) * (t173 * t347 - t506)) * t344 + (t347 * t384 + pkin(8) * (t173 * t350 + t507) + t380 * (-t218 * t346 - t226 * t349)) * t342, (t92 + pkin(1) * (t107 * t347 - t211 * t350)) * t344 + (pkin(8) * (t107 * t350 + t211 * t347) - t380 * t384) * t342, t474, -t521 + (t350 * t223 + t513) * t342, t520 + (-t350 * t218 + t514) * t342, t475, t344 * t170 + (t347 * (t227 * t346 - t447) - t497) * t342, t476, (t61 + pkin(1) * (t172 * t347 - t506)) * t344 + (t347 * (-pkin(9) * t168 - t113 * t346 + t121 * t349) + t350 * (-pkin(2) * t168 - t387) - pkin(1) * t168 + pkin(8) * (t172 * t350 + t507)) * t342, (t84 + pkin(1) * (t219 * t350 - t523)) * t344 + (t347 * (qJ(4) * t447 - t111 * t346 + t525) + t350 * (-t355 + t526) + t528 + pkin(8) * (-t219 * t347 - t522)) * t342, (t85 + t527) * t344 + (t347 * (t110 * t349 + t227 * t467 + t516) + t350 * (-t480 + t517) - t519) * t342, (t40 + pkin(1) * (-t140 * t350 + t347 * t89)) * t344 + (t347 * (-pkin(9) * t88 + (-qJ(4) * t349 + t467) * t140) + t350 * (-pkin(2) * t88 - t388) - pkin(1) * t88 + pkin(8) * (t140 * t347 + t350 * t89)) * t342, t344 * t151 + (t347 * (-t178 * t346 + t407) - t350 * t179) * t342, t344 * t112 + (t347 * (-t141 * t346 + t238 * t349) - t350 * t143) * t342, t344 * t131 + (t347 * (-t159 * t346 + t185 * t349) - t350 * t161) * t342, t344 * t150 + (t347 * (-t176 * t346 - t407) + t350 * t177) * t342, t344 * t130 + (t347 * (-t160 * t346 + t349 * t377) - t350 * t162) * t342, t344 * t167 + (t347 * (-t191 * t346 + t257) - t350 * t192) * t342, (t27 + pkin(1) * (t109 * t347 - t149 * t350)) * t344 + (t347 * (-pkin(9) * t108 - t346 * t56 + t349 * t46) + t350 * (-pkin(2) * t108 - t478) - pkin(1) * t108 + pkin(8) * (t109 * t350 + t149 * t347)) * t342, (t28 + pkin(1) * (t115 * t347 - t156 * t350)) * t344 + (t347 * (-pkin(9) * t114 - t346 * t59 + t349 * t48) + t350 * (-pkin(2) * t114 - t477) - pkin(1) * t114 + pkin(8) * (t115 * t350 + t156 * t347)) * t342, (t24 + pkin(1) * (t105 * t347 - t144 * t350)) * t344 + (t347 * (-pkin(9) * t104 - t29 * t346 + t349 * t90) + t350 * (-pkin(2) * t104 - t479) - pkin(1) * t104 + pkin(8) * (t105 * t350 + t144 * t347)) * t342, (t6 + pkin(1) * (t34 * t347 - t350 * t36)) * t344 + (t347 * (-pkin(9) * t33 - t23 * t346 + t25 * t349) + t350 * (-pkin(2) * t33 - t484) - pkin(1) * t33 + pkin(8) * (t34 * t350 + t347 * t36)) * t342, t344 * t66 + (t347 * (-t346 * t70 + t409) - t350 * t72) * t342, t344 * t39 + (t347 * (t174 * t349 - t346 * t41) - t350 * t43) * t342, t344 * t58 + (t347 * (t126 * t349 - t346 * t80) - t350 * t82) * t342, t344 * t65 + (t347 * (-t346 * t69 - t409) - t350 * t71) * t342, t344 * t57 + (t347 * (-t346 * t81 + t349 * t369) - t350 * t83) * t342, t344 * t91 + (t347 * (t259 * t349 - t346 * t96) - t350 * t97) * t342, (t7 + pkin(1) * (t347 * t50 - t350 * t68)) * t344 + (t347 * (-pkin(9) * t49 - t19 * t346 + t20 * t349) + t350 * (-pkin(2) * t49 - t481) - pkin(1) * t49 + pkin(8) * (t347 * t68 + t350 * t50)) * t342, (t8 + pkin(1) * (t347 * t54 - t350 * t75)) * t344 + (t347 * (-pkin(9) * t53 - t21 * t346 + t22 * t349) + t350 * (-pkin(2) * t53 - t482) - pkin(1) * t53 + pkin(8) * (t347 * t75 + t350 * t54)) * t342, (t4 + pkin(1) * (t347 * t38 - t350 * t44)) * t344 + (t347 * (-pkin(9) * t37 + t26 * t349 - t346 * t5) + t350 * (-pkin(2) * t37 - t483) - pkin(1) * t37 + pkin(8) * (t347 * t44 + t350 * t38)) * t342, (t1 + pkin(1) * (t10 * t347 - t12 * t350)) * t344 + (t347 * (-pkin(9) * t9 - t2 * t346 + t3 * t349) + t350 * (-pkin(2) * t9 - t485) - pkin(1) * t9 + pkin(8) * (t10 * t350 + t12 * t347)) * t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, t318, t287, t327, t288, t335, -t265, -t266, 0, 0, t391, t169, t206, t390, -t208, t376, t136, t138, t87, t92, t376, -t206, t208, t391, t170, t390, t61, t84, t85, t40, t151, t112, t131, t150, t130, t167, t27, t28, t24, t6, t66, t39, t58, t65, t57, t91, t7, t8, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t436, t487, t226, -t436, t220, -t310, -t164, -t165, 0, 0, -t310, -t223, t218, t436, t487, -t436, t387, t355, t480, t388, t179, t143, t161, -t177, t162, t192, t478, t477, t479, t484, t72, t43, t82, t71, t83, t97, t481, t482, t483, t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, -t366, t488, t139, 0, 0, 0, 0, 0, 0, t148, t155, t142, t35, 0, 0, 0, 0, 0, 0, t67, t74, t42, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, t389, t197, t99, 0, 0, 0, 0, 0, 0, t122, t127, t147, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t174, t126, -t175, t369, t259, -t31, -t32, 0, 0;];
tauJ_reg  = t16;
