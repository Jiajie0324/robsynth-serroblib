% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:29:49
% EndTime: 2019-03-10 03:30:16
% DurationCPUTime: 12.41s
% Computational Cost: add. (35762->625), mult. (91950->806), div. (0->0), fcn. (70355->10), ass. (0->305)
t266 = cos(qJ(6));
t360 = qJD(6) * t266;
t263 = sin(qJ(5));
t265 = sin(qJ(2));
t417 = sin(qJ(3));
t345 = t417 * t265;
t324 = qJD(1) * t345;
t267 = cos(qJ(2));
t420 = cos(qJ(3));
t348 = t420 * t267;
t219 = -qJD(1) * t348 + t324;
t298 = t265 * t420 + t267 * t417;
t221 = t298 * qJD(1);
t264 = sin(qJ(4));
t419 = cos(qJ(4));
t302 = -t264 * t219 + t221 * t419;
t303 = -t219 * t419 - t264 * t221;
t418 = cos(qJ(5));
t129 = t263 * t302 - t303 * t418;
t462 = t129 * t266;
t471 = t360 + t462;
t262 = sin(qJ(6));
t259 = qJD(2) + qJD(3);
t258 = qJD(4) + t259;
t321 = qJD(5) + t258;
t307 = t266 * t321;
t424 = t263 * t303 + t302 * t418;
t116 = t262 * t424 - t307;
t118 = t262 * t321 + t266 * t424;
t361 = qJD(6) * t262;
t341 = qJD(5) * t418;
t363 = qJD(5) * t263;
t282 = t259 * t298;
t278 = t282 * qJD(1);
t342 = qJD(4) * t419;
t364 = qJD(4) * t264;
t340 = t420 * qJD(3);
t425 = -(qJD(2) * t420 + t340) * qJD(1) * t267 + t259 * t324;
t98 = t219 * t342 + t221 * t364 + t264 * t278 + t419 * t425;
t276 = t419 * t282;
t99 = qJD(1) * t276 - t219 * t364 + t221 * t342 - t264 * t425;
t54 = t263 * t99 + t302 * t363 - t303 * t341 + t418 * t98;
t40 = -qJD(6) * t307 + t266 * t54 + t361 * t424;
t362 = qJD(6) * t118;
t41 = -t262 * t54 + t362;
t459 = qJD(6) + t129;
t468 = t459 * t262;
t470 = -t116 * t471 - t118 * t468 - t262 * t41 - t40 * t266;
t335 = t263 * t98 - t418 * t99;
t55 = qJD(5) * t424 - t335;
t53 = t266 * t55;
t469 = t116 * t424 - t459 * t468 + t53;
t39 = t41 * t266;
t392 = t116 * t262;
t17 = t392 * t459 - t39;
t37 = t40 * t262;
t467 = t118 * t471 - t37;
t395 = t262 * t55 + t360 * t459;
t465 = -t118 * t424 + t459 * t462 + t395;
t423 = -pkin(8) - pkin(7);
t243 = t423 * t267;
t237 = qJD(1) * t243;
t222 = t417 * t237;
t242 = t423 * t265;
t235 = qJD(1) * t242;
t408 = qJD(2) * pkin(2);
t228 = t235 + t408;
t190 = t420 * t228 + t222;
t213 = t221 * pkin(9);
t154 = -t213 + t190;
t145 = t259 * pkin(3) + t154;
t226 = t420 * t237;
t191 = t228 * t417 - t226;
t413 = t219 * pkin(9);
t155 = t191 - t413;
t347 = t419 * t155;
t101 = t264 * t145 + t347;
t414 = t303 * pkin(10);
t86 = t101 + t414;
t398 = t263 * t86;
t149 = t264 * t155;
t100 = t419 * t145 - t149;
t174 = t302 * pkin(10);
t85 = t100 - t174;
t81 = pkin(4) * t258 + t85;
t58 = t418 * t81 - t398;
t56 = -pkin(5) * t321 - t58;
t463 = t129 * t56;
t461 = t129 * t424;
t350 = qJD(2) * t423;
t325 = qJD(1) * t350;
t229 = t265 * t325;
t230 = t267 * t325;
t343 = qJD(3) * t417;
t134 = t228 * t340 + t420 * t229 + t417 * t230 + t237 * t343;
t105 = -pkin(9) * t278 + t134;
t320 = -t229 * t417 + t420 * t230;
t106 = pkin(9) * t425 - t228 * t343 + t237 * t340 + t320;
t333 = -t264 * t105 + t419 * t106;
t47 = -qJD(4) * t101 + t333;
t33 = t98 * pkin(10) + t47;
t31 = t418 * t33;
t328 = -t419 * t105 - t264 * t106 - t145 * t342 + t155 * t364;
t32 = -pkin(10) * t99 - t328;
t336 = t263 * t32 - t31;
t255 = -t267 * pkin(2) - pkin(1);
t241 = qJD(1) * t255;
t195 = pkin(3) * t219 + t241;
t138 = -pkin(4) * t303 + t195;
t433 = t138 * t424;
t308 = -t336 - t433;
t458 = -t129 ^ 2 + t424 ^ 2;
t77 = pkin(5) * t424 + pkin(11) * t129;
t457 = t129 * t321 - t54;
t352 = t418 * t86;
t59 = t263 * t81 + t352;
t317 = -t58 * t129 + t59 * t424;
t287 = -t263 * t33 - t32 * t418 - t341 * t81 + t86 * t363;
t454 = t138 * t129 + t287;
t377 = t195 * t302;
t450 = t47 - t377;
t449 = t459 * t424;
t57 = pkin(11) * t321 + t59;
t72 = pkin(5) * t129 - pkin(11) * t424 + t138;
t22 = t262 * t72 + t266 * t57;
t9 = qJD(5) * t59 + t336;
t421 = t9 * t262 + t56 * t360;
t443 = t22 * t424 + t421;
t441 = t258 * t424 + t335;
t311 = t262 * t57 - t266 * t72;
t344 = -t9 * t266 + t56 * t361;
t440 = t311 * t424 + t344;
t438 = 0.2e1 * t241;
t357 = qJD(1) * qJD(2);
t437 = -0.2e1 * t357;
t415 = pkin(4) * t302;
t339 = t265 * t357;
t159 = pkin(2) * t339 + pkin(3) * t278;
t78 = t99 * pkin(4) + t159;
t13 = t55 * pkin(5) + t54 * pkin(11) + t78;
t3 = -qJD(6) * t22 + t266 * t13 + t262 * t287;
t435 = -t22 * t459 - t3;
t193 = -t235 * t417 + t226;
t157 = t193 + t413;
t194 = t420 * t235 + t222;
t158 = -t213 + t194;
t112 = t157 * t419 - t264 * t158;
t294 = t112 - t414;
t113 = t264 * t157 + t419 * t158;
t90 = -t174 + t113;
t65 = t263 * t294 + t418 * t90;
t354 = t420 * pkin(2);
t254 = t354 + pkin(3);
t349 = t264 * t417;
t215 = -pkin(2) * t349 + t419 * t254;
t211 = pkin(4) + t215;
t326 = t419 * t417;
t217 = pkin(2) * t326 + t264 * t254;
t167 = t211 * t418 - t263 * t217;
t187 = t254 * t342 + (-qJD(4) * t349 + (t419 * t420 - t349) * qJD(3)) * pkin(2);
t188 = -t254 * t364 + (-qJD(4) * t326 + (-t264 * t420 - t326) * qJD(3)) * pkin(2);
t93 = qJD(5) * t167 + t187 * t418 + t263 * t188;
t411 = -t93 + t65;
t168 = t263 * t211 + t418 * t217;
t410 = -qJD(5) * t168 + (t188 - t294) * t418 + (-t187 + t90) * t263;
t253 = pkin(3) * t419 + pkin(4);
t374 = t263 * t264;
t185 = t253 * t341 + (-t264 * t363 + (t418 * t419 - t374) * qJD(4)) * pkin(3);
t107 = -t264 * t154 - t347;
t295 = t107 - t414;
t108 = t419 * t154 - t149;
t88 = -t174 + t108;
t63 = t263 * t295 + t418 * t88;
t394 = t185 - t63;
t346 = t418 * t264;
t393 = -t263 * t88 + t295 * t418 + t253 * t363 + (t264 * t341 + (t263 * t419 + t346) * qJD(4)) * pkin(3);
t432 = t303 * t302;
t196 = t420 * t242 + t243 * t417;
t172 = -pkin(9) * t298 + t196;
t197 = t417 * t242 - t420 * t243;
t297 = t345 - t348;
t173 = -pkin(9) * t297 + t197;
t125 = t264 * t172 + t419 * t173;
t192 = -t264 * t297 + t419 * t298;
t279 = t264 * t298 + t419 * t297;
t431 = t22 * t266 + t262 * t311;
t84 = t302 ^ 2 - t303 ^ 2;
t80 = t258 * t302 - t99;
t79 = -t258 * t303 - t98;
t300 = -t195 * t303 + t328;
t2 = -qJD(6) * t311 + t13 * t262 - t266 * t287;
t124 = t419 * t172 - t264 * t173;
t96 = -pkin(10) * t192 + t124;
t97 = -pkin(10) * t279 + t125;
t70 = t263 * t97 - t418 * t96;
t422 = t70 * t9;
t416 = pkin(3) * t221;
t1 = t2 * t266;
t409 = pkin(4) * qJD(5);
t407 = t459 * t311;
t275 = t418 * t279;
t136 = t192 * t263 + t275;
t404 = t136 * t55;
t402 = t22 * t262;
t280 = t259 * t297;
t274 = t264 * t280 - t276;
t271 = qJD(4) * t192 - t274;
t273 = -t264 * t282 - t280 * t419;
t272 = qJD(4) * t279 - t273;
t66 = qJD(5) * t275 + t192 * t363 + t263 * t271 + t272 * t418;
t399 = t262 * t66;
t397 = t266 * t66;
t391 = t118 * t116;
t277 = t263 * t279;
t137 = t192 * t418 - t277;
t382 = t137 * t262;
t381 = t137 * t266;
t376 = t221 * t219;
t375 = t241 * t221;
t269 = qJD(1) ^ 2;
t373 = t267 * t269;
t268 = qJD(2) ^ 2;
t372 = t268 * t265;
t371 = t268 * t267;
t370 = t112 - t188;
t369 = t113 - t187;
t216 = pkin(3) * t346 + t263 * t253;
t367 = t265 ^ 2 - t267 ^ 2;
t366 = qJD(1) * t265;
t356 = -t129 * t402 + t311 * t462 + t1;
t353 = t417 * pkin(2);
t257 = t265 * t408;
t256 = pkin(2) * t366;
t351 = t265 * t373;
t144 = t416 + t415;
t74 = t144 + t77;
t73 = t256 + t74;
t25 = -t262 * t65 + t266 * t73;
t338 = -t262 * t93 - t25;
t26 = t262 * t73 + t266 * t65;
t337 = t266 * t93 - t26;
t334 = pkin(1) * t437;
t329 = pkin(4) * t341;
t323 = t267 * t339;
t60 = t263 * t85 + t352;
t322 = pkin(4) * t363 - t60;
t236 = t265 * t350;
t238 = t267 * t350;
t319 = -t236 * t417 + t420 * t238;
t251 = pkin(4) * t263 + pkin(11);
t316 = -t251 * t55 + t463;
t166 = pkin(11) + t168;
t315 = -t166 * t55 + t463;
t212 = pkin(11) + t216;
t314 = -t212 * t55 + t463;
t313 = -t266 * t311 + t402;
t71 = t263 * t96 + t418 * t97;
t201 = pkin(3) * t297 + t255;
t151 = pkin(4) * t279 + t201;
t76 = t136 * pkin(5) - t137 * pkin(11) + t151;
t35 = t262 * t76 + t266 * t71;
t34 = -t262 * t71 + t266 * t76;
t310 = t100 * t303 + t101 * t302;
t306 = t137 * t360 - t399;
t305 = -t137 * t361 - t397;
t142 = t420 * t236 + t417 * t238 + t242 * t340 + t243 * t343;
t121 = -pkin(9) * t282 + t142;
t122 = pkin(9) * t280 - t242 * t343 + t243 * t340 + t319;
t304 = -t264 * t121 + t122 * t419;
t299 = t241 * t219 - t134;
t68 = t419 * t121 + t264 * t122 + t172 * t342 - t173 * t364;
t214 = -pkin(3) * t374 + t253 * t418;
t291 = t298 * qJD(2);
t290 = t297 * qJD(2);
t286 = -qJD(6) * t313 - t3 * t262 + t1;
t135 = -t191 * qJD(3) + t320;
t183 = pkin(3) * t282 + t257;
t270 = pkin(10) * t272 - t172 * t364 - t173 * t342 + t304;
t91 = pkin(4) * t271 + t183;
t252 = -pkin(4) * t418 - pkin(5);
t210 = -pkin(5) - t214;
t198 = t256 + t416;
t165 = -pkin(5) - t167;
t156 = -t219 ^ 2 + t221 ^ 2;
t148 = t221 * t259 - t278;
t147 = t219 * t259 - t425;
t143 = -qJD(3) * t197 + t319;
t139 = t144 + t256;
t75 = t415 + t77;
t69 = -qJD(4) * t125 + t304;
t67 = -qJD(5) * t277 + t192 * t341 - t263 * t272 + t271 * t418;
t61 = t418 * t85 - t398;
t45 = -pkin(10) * t271 + t68;
t30 = t262 * t77 + t266 * t58;
t29 = -t262 * t58 + t266 * t77;
t28 = t262 * t75 + t266 * t61;
t27 = -t262 * t61 + t266 * t75;
t24 = t262 * t74 + t266 * t63;
t23 = -t262 * t63 + t266 * t74;
t18 = t67 * pkin(5) + t66 * pkin(11) + t91;
t11 = qJD(5) * t71 + t263 * t45 - t270 * t418;
t10 = t263 * t270 + t341 * t96 - t363 * t97 + t418 * t45;
t5 = -qJD(6) * t35 - t10 * t262 + t18 * t266;
t4 = qJD(6) * t34 + t10 * t266 + t18 * t262;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t323, t367 * t437, t371, -0.2e1 * t323, -t372, 0, -pkin(7) * t371 + t265 * t334, pkin(7) * t372 + t267 * t334, 0, 0, -t221 * t280 - t298 * t425, t219 * t280 - t221 * t282 - t278 * t298 + t297 * t425, -t280 * t259, t219 * t282 + t278 * t297, -t282 * t259, 0, t143 * t259 + t219 * t257 + (qJD(3) * t298 + t291) * t438 + t290 * t256, -t142 * t259 + t221 * t257 - t241 * t280 - t255 * t425 + t256 * t291, -t142 * t219 - t197 * t278 - t134 * t297 - t191 * t282 - t143 * t221 + t196 * t425 - t135 * t298 + t190 * (qJD(3) * t297 + t290) t134 * t197 + t135 * t196 + t142 * t191 + t143 * t190 + t257 * t438, -t98 * t192 - t272 * t302, t273 * t303 - t192 * t99 + t98 * t279 + t302 * t274 + (-t192 * t302 - t279 * t303) * qJD(4), -t272 * t258, -t271 * t303 + t279 * t99, -t271 * t258, 0, t159 * t279 - t183 * t303 + t195 * t271 + t201 * t99 + t69 * t258, t159 * t192 + t183 * t302 - t195 * t272 - t201 * t98 - t68 * t258, t100 * t272 - t101 * t271 + t124 * t98 - t125 * t99 - t47 * t192 + t279 * t328 - t302 * t69 + t303 * t68, t100 * t69 + t101 * t68 + t124 * t47 - t125 * t328 + t159 * t201 + t183 * t195, -t137 * t54 - t424 * t66, t129 * t66 + t136 * t54 - t137 * t55 - t424 * t67, -t66 * t321, t129 * t67 + t404, -t67 * t321, 0, -t11 * t321 + t91 * t129 + t78 * t136 + t138 * t67 + t151 * t55, -t10 * t321 + t78 * t137 - t138 * t66 - t151 * t54 + t424 * t91, -t10 * t129 + t11 * t424 + t136 * t287 + t137 * t9 - t54 * t70 - t55 * t71 + t58 * t66 - t59 * t67, t10 * t59 - t11 * t58 + t138 * t91 + t151 * t78 - t287 * t71 + t422, t118 * t305 - t381 * t40 (t116 * t266 + t118 * t262) * t66 + (t37 - t39 + (-t118 * t266 + t392) * qJD(6)) * t137, t118 * t67 - t136 * t40 + t305 * t459 + t381 * t55, t116 * t306 + t382 * t41, -t116 * t67 - t136 * t41 - t306 * t459 - t382 * t55, t459 * t67 + t404, t11 * t116 + t136 * t3 + t137 * t421 - t311 * t67 + t34 * t55 - t399 * t56 + t41 * t70 + t459 * t5, t11 * t118 - t136 * t2 - t137 * t344 - t22 * t67 - t35 * t55 - t56 * t397 - t4 * t459 - t40 * t70, -t116 * t4 - t118 * t5 + t34 * t40 - t35 * t41 + t313 * t66 + (-qJD(6) * t431 - t2 * t262 - t266 * t3) * t137, t11 * t56 + t2 * t35 + t22 * t4 + t3 * t34 - t311 * t5 + t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, t367 * t269, 0, t351, 0, 0, t269 * pkin(1) * t265, pkin(1) * t373, 0, 0, t376, t156, t147, -t376, t148, 0, -t219 * t256 - t193 * t259 - t375 + (-t259 * t353 - t191) * qJD(3) + t320, t194 * t259 + (-t221 * t366 - t259 * t340) * pkin(2) + t299, -t278 * t353 + t425 * t354 + (pkin(2) * t343 + t191 + t193) * t221 + (-pkin(2) * t340 - t190 + t194) * t219, -t190 * t193 - t191 * t194 + (-t241 * t366 + t420 * t135 + t417 * t134 + (-t190 * t417 + t191 * t420) * qJD(3)) * pkin(2), -t432, t84, t79, t432, t80, 0, t198 * t303 - t258 * t370 + t450, -t198 * t302 + t258 * t369 + t300, t215 * t98 - t217 * t99 + t302 * t370 - t303 * t369 + t310, -t100 * t370 - t101 * t369 - t195 * t198 + t215 * t47 - t217 * t328, t461, t458, t457, -t461, t441, 0, -t139 * t129 + (-t59 + t410) * qJD(5) + t308 + t410 * t258, -t139 * t424 + t321 * t411 + t454, t129 * t411 + t167 * t54 - t168 * t55 - t410 * t424 + t317, -t138 * t139 - t167 * t9 - t168 * t287 + t410 * t58 - t411 * t59, t467, t470, t465, t17, t469, -t449, t165 * t41 + t315 * t262 - t410 * t116 + (-t166 * t360 + t338) * t459 + t440, -t165 * t40 + t315 * t266 - t410 * t118 + (t166 * t361 - t337) * t459 + t443, t116 * t26 + t118 * t25 + (-t116 * t93 - t166 * t41 + (t118 * t166 + t311) * qJD(6)) * t266 + (t118 * t93 - t166 * t40 - t3 + (t116 * t166 - t22) * qJD(6)) * t262 + t356, t165 * t9 + t166 * t286 + t22 * t337 - t311 * t338 - t410 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, t156, t147, -t376, t148, 0, t191 * t259 + t135 - t375, t190 * t259 + t299, 0, 0, -t432, t84, t79, t432, t80, 0, t303 * t416 - t107 * t258 - t377 + (-t347 + (-pkin(3) * t258 - t145) * t264) * qJD(4) + t333, t108 * t258 + (-t221 * t302 - t258 * t342) * pkin(3) + t300, t107 * t302 - t108 * t303 + (t419 * t98 - t264 * t99 + (t264 * t302 + t303 * t419) * qJD(4)) * pkin(3) + t310, -t100 * t107 - t101 * t108 + (t419 * t47 - t195 * t221 - t264 * t328 + (-t100 * t264 + t101 * t419) * qJD(4)) * pkin(3), t461, t458, t457, -t461, t441, 0, -t144 * t129 + (-t59 - t393) * qJD(5) + t308 - t393 * t258, -t144 * t424 - t321 * t394 + t454, -t129 * t394 + t214 * t54 - t216 * t55 + t393 * t424 + t317, -t138 * t144 - t214 * t9 - t216 * t287 - t393 * t58 + t394 * t59, t467, t470, t465, t17, t469, -t449, t210 * t41 + t314 * t262 + t393 * t116 + (-t185 * t262 - t212 * t360 - t23) * t459 + t440, -t210 * t40 + t314 * t266 + t393 * t118 + (-t185 * t266 + t212 * t361 + t24) * t459 + t443, t116 * t24 + t118 * t23 + (-t116 * t185 - t212 * t41 + (t118 * t212 + t311) * qJD(6)) * t266 + (t118 * t185 - t212 * t40 - t3 + (t116 * t212 - t22) * qJD(6)) * t262 + t356, t185 * t431 + t210 * t9 + t212 * t286 - t22 * t24 + t23 * t311 + t393 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432, t84, t79, t432, t80, 0, t101 * t258 + t450, t100 * t258 + t300, 0, 0, t461, t458, t457, -t461, t441, 0, -t86 * t341 + t31 - t129 * t415 - t433 + t60 * t321 + (-qJD(5) * t81 - t321 * t409 - t32) * t263, t61 * t321 + (-t302 * t424 - t321 * t341) * pkin(4) + t454, t61 * t129 - t60 * t424 + (t418 * t54 - t263 * t55 + (-t129 * t418 + t263 * t424) * qJD(5)) * pkin(4) + t317, t58 * t60 - t59 * t61 + (-t418 * t9 - t138 * t302 - t263 * t287 + (-t263 * t58 + t418 * t59) * qJD(5)) * pkin(4), t467, t470, t465, t17, t469, -t449, t252 * t41 + t316 * t262 + t322 * t116 + (-t251 * t360 - t262 * t329 - t27) * t459 + t440, -t252 * t40 + t316 * t266 + t322 * t118 + (t251 * t361 - t266 * t329 + t28) * t459 + t443, t28 * t116 + t27 * t118 + t1 + (-t116 * t329 + t129 * t311 - t251 * t41 + (t118 * t251 + t311) * qJD(6)) * t266 + (t118 * t329 - t129 * t22 - t251 * t40 - t3 + (t116 * t251 - t22) * qJD(6)) * t262, t311 * t27 - t22 * t28 + t9 * t252 - t56 * t60 + (t263 * t56 + t418 * t431) * t409 + t286 * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t461, t458, t457, -t461, t441, 0, t258 * t59 + t308, t321 * t58 + t454, 0, 0, t467, t470, t465, t116 * t468 - t39, t469, -t449, -pkin(5) * t41 - pkin(11) * t395 - t116 * t59 + t262 * t463 - t29 * t459 + t440, t56 * t462 + pkin(5) * t40 - t118 * t59 + t459 * t30 + (t361 * t459 - t53) * pkin(11) + t443, t116 * t30 + t118 * t29 + t1 + (t407 + (-t41 + t362) * pkin(11)) * t266 + ((qJD(6) * t116 - t40) * pkin(11) + t435) * t262, -pkin(5) * t9 + pkin(11) * t286 - t22 * t30 + t29 * t311 - t56 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t391, -t116 ^ 2 + t118 ^ 2, t116 * t459 - t40, -t391, t118 * t459 - t41, t55, -t118 * t56 - t435, t116 * t56 - t2 - t407, 0, 0;];
tauc_reg  = t6;
