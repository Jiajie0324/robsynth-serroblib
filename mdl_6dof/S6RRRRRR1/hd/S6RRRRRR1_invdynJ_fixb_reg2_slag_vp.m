% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR1_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:29:56
% EndTime: 2019-03-10 03:30:28
% DurationCPUTime: 18.03s
% Computational Cost: add. (41218->807), mult. (100136->1005), div. (0->0), fcn. (76892->18), ass. (0->383)
t324 = cos(qJ(6));
t459 = qJD(6) * t324;
t320 = sin(qJ(5));
t322 = sin(qJ(2));
t534 = sin(qJ(3));
t435 = qJD(1) * t534;
t325 = cos(qJ(2));
t537 = cos(qJ(3));
t438 = t537 * t325;
t235 = -qJD(1) * t438 + t322 * t435;
t439 = t537 * t322;
t375 = t325 * t534 + t439;
t237 = t375 * qJD(1);
t321 = sin(qJ(4));
t536 = cos(qJ(4));
t382 = -t321 * t235 + t237 * t536;
t383 = -t235 * t536 - t321 * t237;
t535 = cos(qJ(5));
t137 = t320 * t382 - t383 * t535;
t580 = t137 * t324;
t591 = t459 + t580;
t319 = sin(qJ(6));
t314 = qJD(2) + qJD(3);
t307 = qJD(4) + t314;
t407 = qJD(5) + t307;
t390 = t324 * t407;
t538 = t320 * t383 + t382 * t535;
t124 = t319 * t538 - t390;
t126 = t319 * t407 + t324 * t538;
t313 = qJDD(2) + qJDD(3);
t306 = qJDD(4) + t313;
t394 = qJDD(5) + t306;
t460 = qJD(6) * t319;
t565 = t314 * t375;
t344 = t565 * qJD(1);
t374 = t322 * t534 - t438;
t365 = t374 * qJDD(1);
t337 = -t365 - t344;
t434 = qJD(3) * t534;
t563 = qJD(1) * t434 + qJD(2) * t435;
t469 = t563 * t322;
t430 = t537 * qJD(3);
t545 = qJD(1) * (t537 * qJD(2) + t430);
t339 = qJDD(1) * t439 + (t534 * qJDD(1) + t545) * t325 - t469;
t433 = qJD(4) * t536;
t463 = qJD(4) * t321;
t101 = t235 * t433 + t237 * t463 - t321 * t337 - t536 * t339;
t102 = qJD(4) * t382 + t321 * t339 - t536 * t337;
t432 = qJD(5) * t535;
t462 = qJD(5) * t320;
t54 = t101 * t535 + t320 * t102 + t382 * t462 - t383 * t432;
t40 = -qJD(6) * t390 - t319 * t394 + t324 * t54 + t460 * t538;
t461 = qJD(6) * t126;
t41 = -t319 * t54 - t324 * t394 + t461;
t577 = qJD(6) + t137;
t588 = t577 * t319;
t590 = -t591 * t124 - t126 * t588 - t319 * t41 - t40 * t324;
t423 = t320 * t101 - t535 * t102;
t55 = qJD(5) * t538 - t423;
t53 = qJDD(6) + t55;
t589 = t124 * t538 + t324 * t53 - t577 * t588;
t327 = -pkin(8) - pkin(7);
t275 = t327 * t325;
t255 = qJD(1) * t275;
t238 = t534 * t255;
t274 = t327 * t322;
t253 = qJD(1) * t274;
t522 = qJD(2) * pkin(2);
t244 = t253 + t522;
t196 = t537 * t244 + t238;
t228 = t237 * pkin(9);
t164 = -t228 + t196;
t154 = t314 * pkin(3) + t164;
t242 = t537 * t255;
t197 = t244 * t534 - t242;
t523 = t235 * pkin(9);
t165 = t197 - t523;
t437 = t536 * t165;
t112 = t321 * t154 + t437;
t524 = t383 * pkin(10);
t96 = t112 + t524;
t448 = t535 * t96;
t156 = t321 * t165;
t111 = t536 * t154 - t156;
t183 = t382 * pkin(10);
t95 = t111 - t183;
t87 = pkin(4) * t307 + t95;
t64 = t320 * t87 + t448;
t62 = pkin(11) * t407 + t64;
t312 = t325 * pkin(2);
t302 = t312 + pkin(1);
t273 = t302 * qJD(1);
t206 = pkin(3) * t235 - t273;
t147 = -pkin(4) * t383 + t206;
t77 = pkin(5) * t137 - pkin(11) * t538 + t147;
t28 = -t319 * t62 + t324 * t77;
t318 = qJ(2) + qJ(3);
t310 = qJ(4) + t318;
t303 = qJ(5) + t310;
t290 = sin(t303);
t326 = cos(qJ(1));
t487 = t290 * t326;
t323 = sin(qJ(1));
t488 = t290 * t323;
t564 = g(1) * t487 + g(2) * t488;
t514 = t320 * t96;
t63 = t535 * t87 - t514;
t61 = -pkin(5) * t407 - t63;
t59 = t61 * t460;
t587 = -t28 * t538 + t564 * t324 + t59;
t29 = t319 * t77 + t324 * t62;
t291 = cos(t303);
t529 = g(3) * t291;
t456 = qJD(1) * qJD(2);
t428 = t325 * t456;
t455 = t322 * qJDD(1);
t204 = qJDD(2) * pkin(2) - t327 * (-t428 - t455);
t429 = t322 * t456;
t454 = t325 * qJDD(1);
t205 = t327 * (-t429 + t454);
t402 = t537 * t204 + t205 * t534;
t92 = t313 * pkin(3) - pkin(9) * t339 - t244 * t434 + t255 * t430 + t402;
t122 = t534 * t204 - t537 * t205 + t244 * t430 + t255 * t434;
t99 = pkin(9) * t337 + t122;
t49 = -t112 * qJD(4) - t321 * t99 + t536 * t92;
t25 = t306 * pkin(4) + t101 * pkin(10) + t49;
t417 = -t154 * t433 + t165 * t463 - t321 * t92 - t536 * t99;
t27 = -pkin(10) * t102 - t417;
t425 = -t535 * t25 + t320 * t27;
t11 = -t64 * qJD(5) - t425;
t9 = -pkin(5) * t394 - t11;
t555 = t9 * t319 + t61 * t459;
t586 = t29 * t538 + t319 * t529 + t555;
t39 = t41 * t324;
t504 = t124 * t319;
t19 = t504 * t577 - t39;
t37 = t40 * t319;
t585 = t591 * t126 - t37;
t583 = -t126 * t538 + t319 * t53 + t591 * t577;
t581 = t137 * t61;
t579 = t137 * t538;
t404 = g(1) * t326 + g(2) * t323;
t389 = t404 * t290;
t352 = -t319 * t389 + t586;
t442 = -t9 - t529;
t355 = t324 * t442 + t587;
t576 = -t137 ^ 2 + t538 ^ 2;
t85 = pkin(5) * t538 + pkin(11) * t137;
t575 = t137 * t407 - t54;
t400 = -t63 * t137 + t64 * t538;
t10 = t320 * t25 + t535 * t27 + t87 * t432 - t96 * t462;
t286 = g(3) * t290;
t485 = t291 * t326;
t486 = t291 * t323;
t446 = g(1) * t485 + g(2) * t486 + t286;
t572 = t147 * t137 - t10 + t446;
t568 = t577 * t538;
t558 = -t147 * t538 - t425 - t529 + t564;
t557 = t538 * t307 + t423;
t554 = pkin(4) * t382;
t451 = t537 * pkin(2);
t301 = t451 + pkin(3);
t440 = t321 * t534;
t231 = -pkin(2) * t440 + t536 * t301;
t226 = pkin(4) + t231;
t414 = t536 * t534;
t233 = pkin(2) * t414 + t321 * t301;
t176 = t226 * t535 - t320 * t233;
t193 = t301 * t433 + (-qJD(4) * t440 + (t536 * t537 - t440) * qJD(3)) * pkin(2);
t194 = -t301 * t463 + (-qJD(4) * t414 + (-t321 * t537 - t414) * qJD(3)) * pkin(2);
t107 = qJD(5) * t176 + t193 * t535 + t320 * t194;
t201 = -t253 * t534 + t242;
t167 = t201 + t523;
t202 = t537 * t253 + t238;
t168 = -t228 + t202;
t119 = t321 * t167 + t536 * t168;
t104 = -t183 + t119;
t118 = t167 * t536 - t321 * t168;
t369 = t118 - t524;
t70 = t104 * t535 + t320 * t369;
t512 = t107 - t70;
t177 = t320 * t226 + t535 * t233;
t511 = qJD(5) * t177 + (-t194 + t369) * t535 + (-t104 + t193) * t320;
t300 = pkin(3) * t536 + pkin(4);
t474 = t320 * t321;
t191 = t300 * t432 + (-t321 * t462 + (t535 * t536 - t474) * qJD(4)) * pkin(3);
t114 = t536 * t164 - t156;
t100 = -t183 + t114;
t113 = -t321 * t164 - t437;
t370 = t113 - t524;
t68 = t100 * t535 + t320 * t370;
t508 = t191 - t68;
t436 = t535 * t321;
t507 = -t100 * t320 + t370 * t535 + t300 * t462 + (t321 * t432 + (t320 * t536 + t436) * qJD(4)) * pkin(3);
t549 = t196 * t314;
t548 = t383 * t382;
t403 = g(1) * t323 - g(2) * t326;
t547 = t403 * t290;
t207 = t537 * t274 + t275 * t534;
t181 = -pkin(9) * t375 + t207;
t208 = t534 * t274 - t537 * t275;
t182 = -pkin(9) * t374 + t208;
t133 = t321 * t181 + t536 * t182;
t546 = t291 * pkin(5) + t290 * pkin(11);
t213 = pkin(3) * t374 - t302;
t200 = -t321 * t374 + t536 * t375;
t345 = t321 * t375 + t536 * t374;
t544 = -t28 * t319 + t29 * t324;
t94 = t382 ^ 2 - t383 ^ 2;
t83 = -t307 * t383 - t101;
t296 = sin(t310);
t483 = t296 * t326;
t484 = t296 * t323;
t297 = cos(t310);
t528 = g(3) * t297;
t349 = g(1) * t483 + g(2) * t484 - t206 * t382 + t49 - t528;
t481 = t297 * t326;
t482 = t297 * t323;
t364 = g(1) * t481 + g(2) * t482 + g(3) * t296 - t206 * t383 + t417;
t84 = t307 * t382 - t102;
t533 = pkin(2) * t322;
t532 = pkin(3) * t237;
t308 = sin(t318);
t531 = pkin(3) * t308;
t530 = pkin(5) * t290;
t309 = cos(t318);
t527 = g(3) * t309;
t526 = g(3) * t325;
t525 = t102 * pkin(4);
t292 = pkin(2) * t429;
t505 = qJDD(1) * pkin(1);
t15 = -pkin(2) * t454 - pkin(3) * t337 + t55 * pkin(5) + t54 * pkin(11) + t292 - t505 + t525;
t8 = pkin(11) * t394 + t10;
t2 = qJD(6) * t28 + t15 * t319 + t324 * t8;
t1 = t2 * t324;
t521 = t577 * t28;
t520 = t577 * t29;
t517 = t29 * t319;
t346 = t314 * t374;
t335 = t321 * t346 - t536 * t565;
t332 = qJD(4) * t200 - t335;
t334 = -t321 * t565 - t346 * t536;
t333 = qJD(4) * t345 - t334;
t341 = t535 * t345;
t71 = qJD(5) * t341 + t200 * t462 + t320 * t332 + t333 * t535;
t515 = t319 * t71;
t513 = t324 * t71;
t506 = pkin(7) * qJDD(1);
t503 = t126 * t124;
t342 = t320 * t345;
t143 = t200 * t535 - t342;
t494 = t143 * t319;
t493 = t143 * t324;
t489 = t237 * t235;
t480 = t308 * t323;
t479 = t308 * t326;
t478 = t309 * t323;
t477 = t309 * t326;
t476 = t319 * t323;
t475 = t319 * t326;
t473 = t323 * t324;
t472 = t324 * t326;
t471 = t193 - t119;
t470 = t194 - t118;
t232 = pkin(3) * t436 + t320 * t300;
t295 = pkin(3) * t309;
t467 = t295 + t312;
t316 = t322 ^ 2;
t317 = t325 ^ 2;
t466 = t316 - t317;
t465 = t316 + t317;
t464 = qJD(1) * t322;
t315 = -pkin(9) + t327;
t450 = pkin(11) * qJD(6) * t577;
t305 = t322 * t522;
t329 = qJD(1) ^ 2;
t447 = t322 * t329 * t325;
t289 = pkin(4) * t297;
t445 = t289 + t546;
t444 = t289 + t467;
t441 = qJD(2) * t327;
t245 = -pkin(4) * t296 - t531;
t223 = t245 - t533;
t427 = t223 - t530;
t426 = t245 - t530;
t132 = t536 * t181 - t321 * t182;
t418 = t1 - t446;
t416 = pkin(4) * t432;
t415 = t295 + t445;
t413 = t322 * t428;
t65 = t320 * t95 + t448;
t412 = pkin(4) * t462 - t65;
t153 = t532 + t554;
t405 = -pkin(11) * t53 + t581;
t254 = t322 * t441;
t256 = t325 * t441;
t401 = -t254 * t534 + t537 * t256;
t298 = pkin(4) * t320 + pkin(11);
t399 = -t298 * t53 + t581;
t175 = pkin(11) + t177;
t398 = -t175 * t53 + t581;
t227 = pkin(11) + t232;
t397 = -t227 * t53 + t581;
t396 = t28 * t324 + t517;
t109 = -pkin(10) * t200 + t132;
t110 = -pkin(10) * t345 + t133;
t76 = t320 * t109 + t110 * t535;
t142 = t200 * t320 + t341;
t158 = pkin(4) * t345 + t213;
t82 = t142 * pkin(5) - t143 * pkin(11) + t158;
t47 = t319 * t82 + t324 * t76;
t46 = -t319 * t76 + t324 * t82;
t393 = t111 * t383 + t112 * t382;
t392 = -t137 * t517 - t28 * t580 + t418;
t391 = -qJD(6) * t77 + t286 - t8;
t388 = t404 * t296;
t387 = -0.2e1 * pkin(1) * t456 - pkin(7) * qJDD(2);
t386 = t143 * t459 - t515;
t385 = -t143 * t460 - t513;
t151 = t537 * t254 + t534 * t256 + t274 * t430 + t275 * t434;
t129 = -pkin(9) * t565 + t151;
t130 = pkin(9) * t346 - t274 * t434 + t275 * t430 + t401;
t384 = -t321 * t129 + t130 * t536;
t73 = t536 * t129 + t321 * t130 + t181 * t433 - t182 * t463;
t230 = -pkin(3) * t474 + t300 * t535;
t79 = t153 + t85;
t328 = qJD(2) ^ 2;
t363 = -pkin(7) * t328 + t403 + 0.2e1 * t505;
t362 = pkin(1) * t329 + t404 - t506;
t361 = g(1) * t477 + g(2) * t478 + g(3) * t308 - t273 * t235 - t122;
t14 = t324 * t15;
t3 = -qJD(6) * t29 - t319 * t8 + t14;
t354 = -qJD(6) * t396 - t3 * t319 + t1;
t257 = pkin(11) * t486;
t258 = pkin(11) * t485;
t353 = -g(1) * (-pkin(5) * t487 + t258) - g(2) * (-pkin(5) * t488 + t257);
t123 = -t197 * qJD(3) + t402;
t343 = g(1) * t479 + g(2) * t480 + t273 * t237 + t123 - t527;
t189 = pkin(3) * t565 + t305;
t146 = pkin(3) * t344 + qJDD(1) * t213 + t292;
t331 = pkin(10) * t333 - t181 * t463 - t182 * t433 + t384;
t105 = pkin(4) * t332 + t189;
t311 = -pkin(10) + t315;
t304 = pkin(2) * t464;
t299 = -pkin(4) * t535 - pkin(5);
t252 = pkin(1) + t467;
t229 = -qJDD(1) * t302 + t292;
t225 = -pkin(5) - t230;
t220 = pkin(1) + t444;
t218 = t291 * t472 + t476;
t217 = -t291 * t475 + t473;
t216 = -t291 * t473 + t475;
t215 = t291 * t476 + t472;
t210 = t326 * t220;
t209 = t304 + t532;
t174 = -pkin(5) - t176;
t166 = -t235 ^ 2 + t237 ^ 2;
t152 = -qJD(3) * t208 + t401;
t148 = t153 + t304;
t145 = t237 * t314 + t337;
t144 = t235 * t314 + t339;
t81 = t554 + t85;
t80 = t146 + t525;
t78 = t304 + t79;
t75 = -t109 * t535 + t110 * t320;
t74 = -qJD(4) * t133 + t384;
t72 = -qJD(5) * t342 + t200 * t432 - t320 * t333 + t332 * t535;
t66 = t535 * t95 - t514;
t57 = -pkin(10) * t332 + t73;
t43 = t319 * t85 + t324 * t63;
t42 = -t319 * t63 + t324 * t85;
t35 = t319 * t81 + t324 * t66;
t34 = -t319 * t66 + t324 * t81;
t33 = t319 * t78 + t324 * t70;
t32 = -t319 * t70 + t324 * t78;
t31 = t319 * t79 + t324 * t68;
t30 = -t319 * t68 + t324 * t79;
t20 = t72 * pkin(5) + t71 * pkin(11) + t105;
t13 = qJD(5) * t76 + t320 * t57 - t331 * t535;
t12 = t109 * t432 - t110 * t462 + t320 * t331 + t535 * t57;
t5 = -qJD(6) * t47 - t12 * t319 + t20 * t324;
t4 = qJD(6) * t46 + t12 * t324 + t20 * t319;
t6 = [0, 0, 0, 0, 0, qJDD(1), t403, t404, 0, 0, qJDD(1) * t316 + 0.2e1 * t413, 0.2e1 * t322 * t454 - 0.2e1 * t456 * t466, qJDD(2) * t322 + t325 * t328, qJDD(1) * t317 - 0.2e1 * t413, qJDD(2) * t325 - t322 * t328, 0, t322 * t387 + t325 * t363, -t322 * t363 + t325 * t387, 0.2e1 * t465 * t506 - t404, -g(1) * (-pkin(1) * t323 + pkin(7) * t326) - g(2) * (pkin(1) * t326 + pkin(7) * t323) + (pkin(7) ^ 2 * t465 + pkin(1) ^ 2) * qJDD(1), -t237 * t346 + t339 * t375, t346 * t235 - t237 * t565 + (-t545 * t325 + t469) * t374 + (-t545 * t322 - t563 * t325 - 0.2e1 * t365) * t375, t313 * t375 - t314 * t346, t235 * t565 - t337 * t374, -t313 * t374 - t314 * t565, 0, g(1) * t478 - g(2) * t477 + t152 * t314 + t207 * t313 + t229 * t374 + t235 * t305 - t273 * t565 + t302 * t337, -g(1) * t480 + g(2) * t479 - t151 * t314 - t208 * t313 + t229 * t375 + t237 * t305 + t273 * t346 - t302 * t339, -t123 * t375 - t151 * t235 - t152 * t237 - t197 * t565 - t207 * t339 + t208 * t337 - t404 + (-t122 + t549) * t374, t122 * t208 + t197 * t151 + t123 * t207 + t196 * t152 - t229 * t302 - t273 * t305 - g(1) * (-t302 * t323 - t326 * t327) - g(2) * (t302 * t326 - t323 * t327) -t101 * t200 - t333 * t382, t334 * t383 - t200 * t102 + t101 * t345 + t382 * t335 + (-t200 * t382 - t345 * t383) * qJD(4), t200 * t306 - t307 * t333, t102 * t345 - t332 * t383, -t306 * t345 - t307 * t332, 0, g(1) * t482 - g(2) * t481 + t213 * t102 + t132 * t306 + t146 * t345 - t189 * t383 + t206 * t332 + t74 * t307, -g(1) * t484 + g(2) * t483 - t213 * t101 - t133 * t306 + t146 * t200 + t189 * t382 - t206 * t333 - t73 * t307, t132 * t101 - t133 * t102 + t111 * t333 - t112 * t332 - t49 * t200 + t345 * t417 - t382 * t74 + t383 * t73 - t404, -t417 * t133 + t112 * t73 + t49 * t132 + t111 * t74 + t146 * t213 + t206 * t189 - g(1) * (-t252 * t323 - t315 * t326) - g(2) * (t252 * t326 - t315 * t323) -t143 * t54 - t538 * t71, t137 * t71 + t142 * t54 - t143 * t55 - t538 * t72, t143 * t394 - t407 * t71, t137 * t72 + t142 * t55, -t142 * t394 - t407 * t72, 0, t105 * t137 - t13 * t407 + t80 * t142 + t147 * t72 + t158 * t55 + t291 * t403 - t394 * t75, t105 * t538 - t12 * t407 + t80 * t143 - t147 * t71 - t158 * t54 - t394 * t76 - t547, -t10 * t142 - t11 * t143 - t12 * t137 + t13 * t538 - t54 * t75 - t55 * t76 + t63 * t71 - t64 * t72 - t404, t10 * t76 + t64 * t12 - t11 * t75 - t63 * t13 + t80 * t158 + t147 * t105 - g(1) * (-t220 * t323 - t311 * t326) - g(2) * (-t311 * t323 + t210) t126 * t385 - t40 * t493 (t124 * t324 + t126 * t319) * t71 + (t37 - t39 + (-t126 * t324 + t504) * qJD(6)) * t143, t126 * t72 - t142 * t40 + t385 * t577 + t493 * t53, t124 * t386 + t41 * t494, -t124 * t72 - t142 * t41 - t386 * t577 - t494 * t53, t142 * t53 + t577 * t72, -g(1) * t216 - g(2) * t218 + t124 * t13 + t142 * t3 + t555 * t143 + t28 * t72 + t41 * t75 + t46 * t53 + t5 * t577 - t61 * t515, -t61 * t513 - g(1) * t215 - g(2) * t217 + t126 * t13 - t577 * t4 - t142 * t2 - t29 * t72 - t40 * t75 - t47 * t53 + (t9 * t324 - t59) * t143, -t124 * t4 - t126 * t5 + t40 * t46 - t41 * t47 + t396 * t71 + t547 + (-qJD(6) * t544 - t2 * t319 - t3 * t324) * t143, -g(2) * t210 + t61 * t13 + t2 * t47 + t28 * t5 + t29 * t4 + t3 * t46 + t9 * t75 + (g(1) * t311 - g(2) * t546) * t326 + (-g(1) * (-t220 - t546) + g(2) * t311) * t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t447, t466 * t329, t455, t447, t454, qJDD(2), t322 * t362 - t526, g(3) * t322 + t325 * t362, 0, 0, t489, t166, t144, -t489, t145, t313, -t201 * t314 + (-t235 * t464 + t313 * t537 - t314 * t434) * pkin(2) + t343, t202 * t314 + (-t237 * t464 - t313 * t534 - t314 * t430) * pkin(2) + t361, -t339 * t451 + (t197 + t201) * t237 + (-t196 + t202) * t235 + (-t235 * t430 + t237 * t434 + t337 * t534) * pkin(2), -t196 * t201 - t197 * t202 + (t123 * t537 + t122 * t534 - t526 + (-t196 * t534 + t197 * t537) * qJD(3) + (qJD(1) * t273 + t404) * t322) * pkin(2), -t548, t94, t83, t548, t84, t306, t209 * t383 + t231 * t306 + t307 * t470 + t349, -t209 * t382 - t233 * t306 - t307 * t471 + t364, t101 * t231 - t102 * t233 - t382 * t470 + t383 * t471 + t393, -t417 * t233 + t49 * t231 - t206 * t209 - g(3) * t467 - t404 * (-t531 - t533) + t471 * t112 + t470 * t111, t579, t576, t575, -t579, t557, t394, t176 * t394 - t148 * t137 + (-t64 - t511) * qJD(5) + t558 - t511 * t307, -t148 * t538 - t177 * t394 - t512 * t407 + t572, -t137 * t512 + t176 * t54 - t177 * t55 + t511 * t538 + t400, -g(3) * t444 + t10 * t177 + t11 * t176 - t147 * t148 - t223 * t404 - t511 * t63 + t512 * t64, t585, t590, t583, t19, t589, -t568, t174 * t41 + t398 * t319 + t511 * t124 + (-t107 * t319 - t175 * t459 - t32) * t577 + t355, -t174 * t40 + t398 * t324 + t511 * t126 + (-t107 * t324 + t175 * t460 + t33) * t577 + t352, t124 * t33 + t126 * t32 + (-t107 * t124 - t175 * t41 + (t126 * t175 - t28) * qJD(6)) * t324 + (t107 * t126 - t175 * t40 - t3 + (t124 * t175 - t29) * qJD(6)) * t319 + t392, t9 * t174 - t29 * t33 - t28 * t32 - g(1) * (t326 * t427 + t258) - g(2) * (t323 * t427 + t257) - g(3) * (t312 + t415) + t511 * t61 + t544 * t107 + t354 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, t166, t144, -t489, t145, t313, t197 * t314 + t343, t361 + t549, 0, 0, -t548, t94, t83, t548, t84, t306, -t113 * t307 + (t237 * t383 + t306 * t536 - t307 * t463) * pkin(3) + t349, t114 * t307 + (-t237 * t382 - t306 * t321 - t307 * t433) * pkin(3) + t364, t113 * t382 - t114 * t383 + (t536 * t101 - t102 * t321 + (t321 * t382 + t383 * t536) * qJD(4)) * pkin(3) + t393, -t111 * t113 - t112 * t114 + (t536 * t49 - t527 - t206 * t237 - t321 * t417 + t404 * t308 + (-t111 * t321 + t112 * t536) * qJD(4)) * pkin(3), t579, t576, t575, -t579, t557, t394, t230 * t394 - t153 * t137 + (-t64 - t507) * qJD(5) + t558 - t507 * t307, -t153 * t538 - t232 * t394 - t407 * t508 + t572, -t137 * t508 + t230 * t54 - t232 * t55 + t507 * t538 + t400, t10 * t232 + t11 * t230 - t147 * t153 - g(3) * (t289 + t295) + t508 * t64 - t507 * t63 - t404 * t245, t585, t590, t583, t19, t589, -t568, t225 * t41 + t397 * t319 + t507 * t124 + (-t191 * t319 - t227 * t459 - t30) * t577 + t355, -t225 * t40 + t397 * t324 + t507 * t126 + (-t191 * t324 + t227 * t460 + t31) * t577 + t352, t124 * t31 + t126 * t30 + (-t124 * t191 - t227 * t41 + (t126 * t227 - t28) * qJD(6)) * t324 + (t126 * t191 - t227 * t40 - t3 + (t124 * t227 - t29) * qJD(6)) * t319 + t392, t9 * t225 - t29 * t31 - t28 * t30 - g(1) * (t326 * t426 + t258) - g(2) * (t323 * t426 + t257) - g(3) * t415 + t507 * t61 + t544 * t191 + t354 * t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t548, t94, t83, t548, t84, t306, t112 * t307 + t349, t111 * t307 + t364, 0, 0, t579, t576, t575, -t579, t557, t394, t65 * t307 + (t65 - t64) * qJD(5) + (-t137 * t382 + t394 * t535 - t407 * t462) * pkin(4) + t558, t66 * t407 + (-t320 * t394 - t382 * t538 - t407 * t432) * pkin(4) + t572, t66 * t137 - t65 * t538 + (t535 * t54 - t320 * t55 + (-t137 * t535 + t320 * t538) * qJD(5)) * pkin(4) + t400, t63 * t65 - t64 * t66 + (t535 * t11 - t528 + t10 * t320 - t147 * t382 + t388 + (-t320 * t63 + t535 * t64) * qJD(5)) * pkin(4), t585, t590, t583, t19, t589, -t568, t299 * t41 + t399 * t319 + t412 * t124 + (-t298 * t459 - t416 * t319 - t34) * t577 + t355, -t299 * t40 + t399 * t324 + t412 * t126 + (t298 * t460 - t416 * t324 + t35) * t577 + t352, t35 * t124 + t34 * t126 + (-t124 * t416 - t137 * t28 - t298 * t41 + (t126 * t298 - t28) * qJD(6)) * t324 + (t126 * t416 - t137 * t29 - t298 * t40 - t3 + (t124 * t298 - t29) * qJD(6)) * t319 + t418, t9 * t299 - t29 * t35 - t28 * t34 - t61 * t65 - g(3) * t445 + (t388 + (t320 * t61 + t535 * t544) * qJD(5)) * pkin(4) + t354 * t298 + t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579, t576, t575, -t579, t557, t394, t307 * t64 + t558, t407 * t63 + t572, 0, 0, t585, t590, t583, t124 * t588 - t39, t589, -t568, -pkin(5) * t41 - t124 * t64 - t577 * t42 + t405 * t319 + (t442 - t450) * t324 + t587, pkin(5) * t40 - t126 * t64 + t577 * t43 + t405 * t324 + (-t389 + t450) * t319 + t586, t124 * t43 + t126 * t42 + (-t521 + (-t41 + t461) * pkin(11)) * t324 + (-t3 - t520 + (qJD(6) * t124 - t40) * pkin(11)) * t319 + t418, -t9 * pkin(5) + pkin(11) * t354 - g(3) * t546 - t28 * t42 - t29 * t43 - t61 * t64 + t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, -t124 ^ 2 + t126 ^ 2, t124 * t577 - t40, -t503, t126 * t577 - t41, t53, -g(1) * t217 + g(2) * t215 - t126 * t61 + t319 * t391 - t459 * t62 + t14 + t520, g(1) * t218 - g(2) * t216 + t124 * t61 + t521 + (qJD(6) * t62 - t15) * t319 + t391 * t324, 0, 0;];
tau_reg  = t6;
