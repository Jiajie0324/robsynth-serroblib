% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR10_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR10_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR10_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR10_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR10_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR10_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:34:20
% EndTime: 2019-03-09 07:35:07
% DurationCPUTime: 27.20s
% Computational Cost: add. (57983->934), mult. (183576->1245), div. (0->0), fcn. (159333->18), ass. (0->405)
t379 = sin(pkin(13));
t380 = sin(pkin(6));
t381 = cos(pkin(13));
t386 = sin(qJ(3));
t382 = cos(pkin(6));
t585 = sin(pkin(7));
t498 = t585 * t382;
t586 = cos(pkin(7));
t503 = t386 * t586;
t614 = cos(qJ(3));
t288 = t380 * (t379 * t614 + t381 * t503) + t386 * t498;
t564 = t379 * t380;
t517 = t386 * t564;
t486 = qJD(3) * t517;
t477 = t586 * t614;
t563 = t380 * t381;
t447 = t477 * t563;
t476 = t585 * t614;
t410 = t382 * t476 + t447;
t628 = t410 * qJD(1);
t398 = -qJD(1) * t486 + qJD(3) * t628;
t668 = t288 * qJDD(1) + t398;
t420 = t380 * (-t379 * t503 + t381 * t614);
t306 = qJD(1) * t420;
t457 = qJD(3) * t476;
t624 = t457 - t306;
t612 = sin(qJ(1));
t512 = t612 * t381;
t389 = cos(qJ(1));
t558 = t389 * t379;
t322 = t382 * t558 + t512;
t502 = t386 * t585;
t562 = t380 * t389;
t367 = t612 * t379;
t557 = t389 * t381;
t469 = t382 * t557 - t367;
t630 = t469 * t586;
t228 = t322 * t614 + t386 * t630 - t502 * t562;
t506 = t380 * t586;
t293 = -t389 * t506 - t469 * t585;
t378 = qJ(4) + qJ(5);
t372 = sin(t378);
t373 = cos(t378);
t176 = t228 * t373 + t293 * t372;
t229 = -t322 * t386 - t476 * t562 + t614 * t630;
t383 = sin(qJ(6));
t387 = cos(qJ(6));
t667 = t176 * t383 + t229 * t387;
t666 = t176 * t387 - t229 * t383;
t358 = qJ(2) * t563;
t611 = pkin(1) * t382;
t522 = qJD(1) * t611;
t318 = qJD(1) * t358 + t379 * t522;
t416 = (t381 * t506 + t498) * pkin(9);
t251 = qJD(1) * t416 + t318;
t309 = (-pkin(9) * t379 * t585 - pkin(2) * t381 - pkin(1)) * t380;
t298 = qJD(1) * t309 + qJD(2);
t355 = t381 * t522;
t422 = t382 * pkin(2) + (-pkin(9) * t586 - qJ(2)) * t564;
t263 = qJD(1) * t422 + t355;
t462 = t263 * t477;
t158 = -t386 * t251 + t298 * t476 + t462;
t511 = qJD(1) * t564;
t269 = t386 * t511 - t628;
t652 = t288 * qJD(1);
t198 = pkin(3) * t652 + pkin(10) * t269;
t385 = sin(qJ(4));
t388 = cos(qJ(4));
t112 = t388 * t158 + t385 * t198;
t390 = -pkin(11) - pkin(10);
t516 = qJD(4) * t390;
t574 = t269 * t385;
t665 = -pkin(11) * t574 + t385 * t516 - t112;
t534 = qJD(6) * t387;
t496 = qJD(1) * t585;
t475 = t380 * t496;
t504 = t382 * t586;
t313 = -qJD(1) * t504 + t381 * t475 - qJD(3);
t206 = -t313 * t388 - t385 * t652;
t207 = -t313 * t385 + t388 * t652;
t384 = sin(qJ(5));
t613 = cos(qJ(5));
t140 = -t613 * t206 + t207 * t384;
t645 = t140 * t387;
t664 = t534 + t645;
t570 = t293 * t388;
t663 = -t228 * t385 + t570;
t571 = t293 * t385;
t662 = t228 * t388 + t571;
t327 = t385 * t586 + t388 * t502;
t459 = t379 * t475;
t550 = qJD(4) * t327 + t385 * t624 + t388 * t459;
t326 = -t385 * t502 + t388 * t586;
t549 = -qJD(4) * t326 + t385 * t459 - t388 * t624;
t513 = t613 * t388;
t560 = t384 * t385;
t332 = -t513 + t560;
t485 = qJD(4) * t513;
t510 = qJD(5) * t613;
t527 = qJD(4) + qJD(5);
t547 = -t332 * t269 + t388 * t510 - t527 * t560 + t485;
t559 = t384 * t388;
t333 = t385 * t613 + t559;
t546 = (t269 + t527) * t333;
t262 = qJD(4) + t269;
t425 = qJD(5) + t262;
t414 = t387 * t425;
t450 = t384 * t206 + t207 * t613;
t115 = t383 * t450 - t414;
t117 = t383 * t425 + t387 * t450;
t272 = t288 * qJD(3);
t399 = qJD(1) * t272;
t287 = -t410 + t517;
t440 = t287 * qJDD(1);
t197 = t399 + t440;
t196 = qJDD(4) + t197;
t395 = qJDD(5) + t196;
t535 = qJD(6) * t383;
t505 = t380 * t585;
t481 = t381 * t505;
t526 = -qJDD(1) * t481 + qJDD(3);
t433 = -qJDD(1) * t504 - t526;
t539 = qJD(4) * t388;
t540 = qJD(4) * t385;
t124 = t313 * t539 + t385 * t433 - t388 * t668 + t540 * t652;
t541 = qJD(4) * t207;
t125 = t385 * t668 + t388 * t433 + t541;
t538 = qJD(5) * t384;
t69 = t613 * t124 + t384 * t125 - t206 * t510 + t207 * t538;
t45 = -qJD(6) * t414 - t383 * t395 + t387 * t69 + t450 * t535;
t537 = qJD(6) * t117;
t46 = -t383 * t69 - t387 * t395 + t537;
t642 = qJD(6) + t140;
t653 = t642 * t383;
t656 = -t664 * t115 - t117 * t653 - t383 * t46 - t45 * t387;
t495 = t384 * t124 - t613 * t125;
t70 = qJD(5) * t450 - t495;
t68 = qJDD(6) + t70;
t64 = t387 * t68;
t655 = t115 * t450 - t642 * t653 + t64;
t654 = -t228 * t372 + t293 * t373;
t350 = t390 * t385;
t351 = t390 * t388;
t448 = t350 * t613 + t384 * t351;
t111 = -t158 * t385 + t388 * t198;
t96 = pkin(11) * t269 * t388 + pkin(4) * t652 + t111;
t589 = qJD(5) * t448 - t384 * t96 + t516 * t559 + t665 * t613;
t501 = t586 * t263;
t514 = t614 * t251;
t159 = t514 + (t298 * t585 + t501) * t386;
t629 = -t159 + (t540 + t574) * pkin(4);
t42 = t45 * t383;
t650 = t664 * t117 - t42;
t649 = -t117 * t450 + t383 * t68 + t664 * t642;
t323 = -t367 * t382 + t557;
t439 = t382 * t512 + t558;
t625 = t439 * t586 - t612 * t505;
t232 = t323 * t614 - t386 * t625;
t644 = t439 * t585 + t612 * t506;
t179 = t232 * t372 - t373 * t644;
t321 = t481 - t504;
t216 = -t288 * t372 - t321 * t373;
t444 = g(1) * t179 - g(2) * t654 - g(3) * t216;
t199 = -t263 * t585 + t586 * t298;
t133 = t269 * pkin(3) - pkin(10) * t652 + t199;
t135 = -t313 * pkin(10) + t159;
t91 = t133 * t385 + t135 * t388;
t79 = pkin(11) * t206 + t91;
t519 = t613 * t79;
t90 = t388 * t133 - t135 * t385;
t78 = -pkin(11) * t207 + t90;
t75 = pkin(4) * t262 + t78;
t40 = t384 * t75 + t519;
t528 = qJDD(1) * t382;
t518 = pkin(1) * t528;
t353 = t381 * t518;
t532 = qJD(1) * qJD(2);
t509 = t380 * t532;
t484 = t379 * t509;
t240 = qJDD(1) * t422 + t353 - t484;
t294 = qJDD(1) * t309 + qJDD(2);
t188 = -t240 * t585 + t586 * t294;
t106 = t197 * pkin(3) - pkin(10) * t668 + t188;
t300 = qJDD(1) * t358 + t379 * t518 + t381 * t509;
t239 = qJDD(1) * t416 + t300;
t542 = qJD(3) * t386;
t98 = qJD(3) * t462 + t614 * t239 + t240 * t503 - t251 * t542 + t294 * t502 + t298 * t457;
t93 = -pkin(10) * t433 + t98;
t34 = -qJD(4) * t91 + t388 * t106 - t385 * t93;
t23 = pkin(4) * t196 + pkin(11) * t124 + t34;
t445 = -t385 * t106 - t133 * t539 + t135 * t540 - t388 * t93;
t29 = -pkin(11) * t125 - t445;
t507 = -t613 * t23 + t384 * t29;
t10 = -qJD(5) * t40 - t507;
t622 = -qJDD(4) - qJDD(5);
t424 = t440 - t622;
t626 = t399 + t424;
t8 = -pkin(5) * t626 - t10;
t431 = t444 - t8;
t596 = t384 * t79;
t39 = t613 * t75 - t596;
t37 = -pkin(5) * t425 - t39;
t648 = t140 * t37;
t647 = pkin(5) * t546 - pkin(12) * t547 + t629;
t646 = -pkin(12) * t652 + t589;
t578 = t140 * t450;
t449 = t326 * t613 - t384 * t327;
t554 = qJD(5) * t449 - t384 * t550 - t549 * t613;
t643 = -t90 * t262 - t445;
t419 = t380 * (t379 * t477 + t381 * t386);
t305 = qJD(1) * t419;
t474 = qJD(3) * t502;
t452 = t474 - t305;
t641 = -t140 ^ 2 + t450 ^ 2;
t97 = pkin(5) * t450 + pkin(12) * t140;
t640 = t140 * t425 - t69;
t134 = t313 * pkin(3) - t158;
t108 = -t206 * pkin(4) + t134;
t180 = t232 * t373 + t372 * t644;
t217 = t288 * t373 - t321 * t372;
t443 = -g(1) * t180 - g(2) * t176 - g(3) * t217;
t9 = t384 * t23 + t613 * t29 + t75 * t510 - t79 * t538;
t639 = t108 * t140 - t443 - t9;
t325 = t379 * t611 + t358;
t278 = t416 + t325;
t362 = t381 * t611;
t289 = t362 + t422;
t165 = t614 * t278 + (t586 * t289 + t585 * t309) * t386;
t38 = pkin(12) * t425 + t40;
t71 = t140 * pkin(5) - pkin(12) * t450 + t108;
t18 = t38 * t387 + t383 * t71;
t453 = qJD(3) * t514 + t386 * t239 - t240 * t477 - t294 * t476 + t298 * t474 + t501 * t542;
t94 = pkin(3) * t433 + t453;
t72 = t125 * pkin(4) + t94;
t16 = t70 * pkin(5) + t69 * pkin(12) + t72;
t7 = pkin(12) * t626 + t9;
t3 = -qJD(6) * t18 + t387 * t16 - t383 * t7;
t636 = -t18 * t642 - t3;
t304 = t384 * t350 - t351 * t613;
t587 = t304 * qJD(5) + t665 * t384 - t390 * t485 + t613 * t96;
t635 = -t91 * t262 - t34;
t47 = t384 * t78 + t519;
t634 = -pkin(4) * t538 + t47;
t633 = t642 * t450;
t375 = t379 ^ 2;
t376 = t380 ^ 2;
t377 = t381 ^ 2;
t632 = t376 * (t375 + t377);
t231 = t323 * t386 + t614 * t625;
t442 = g(1) * t231 - g(2) * t229 + g(3) * t287;
t631 = t442 * t372;
t209 = -t289 * t585 + t586 * t309;
t149 = t287 * pkin(3) - t288 * pkin(10) + t209;
t157 = -pkin(10) * t321 + t165;
t101 = t385 * t149 + t388 * t157;
t253 = t384 * t326 + t327 * t613;
t553 = qJD(5) * t253 - t384 * t549 + t550 * t613;
t164 = -t386 * t278 + t289 * t477 + t309 * t476;
t465 = t38 * t383 - t387 * t71;
t623 = t18 * t387 + t383 * t465;
t621 = t37 * t535 + t450 * t465;
t619 = t18 * t450 + t37 * t534 - t383 * t431;
t618 = -t108 * t450 + t444 - t507;
t616 = t450 * t262 + t495;
t569 = t321 * t388;
t225 = t288 * t385 + t569;
t271 = -qJD(3) * t447 - t382 * t457 + t486;
t172 = -qJD(4) * t225 - t271 * t388;
t144 = qJD(2) * t420 + qJD(3) * t164;
t458 = t379 * qJD(2) * t505;
t187 = t272 * pkin(3) + t271 * pkin(10) + t458;
t67 = -qJD(4) * t101 - t144 * t385 + t388 * t187;
t54 = pkin(4) * t272 - pkin(11) * t172 + t67;
t226 = t288 * t388 - t321 * t385;
t171 = qJD(4) * t226 - t271 * t385;
t66 = t388 * t144 + t149 * t539 - t157 * t540 + t385 * t187;
t56 = -pkin(11) * t171 + t66;
t100 = t388 * t149 - t157 * t385;
t82 = pkin(4) * t287 - pkin(11) * t226 + t100;
t89 = -pkin(11) * t225 + t101;
t601 = t384 * t82 + t613 * t89;
t14 = -qJD(5) * t601 - t384 * t56 + t54 * t613;
t2 = -t465 * qJD(6) + t383 * t16 + t387 * t7;
t610 = pkin(4) * t207;
t609 = pkin(4) * t384;
t604 = g(2) * t389;
t1 = t2 * t387;
t600 = t465 * t642;
t44 = t46 * t387;
t371 = pkin(4) * t388 + pkin(3);
t279 = pkin(5) * t332 - pkin(12) * t333 - t371;
t204 = t279 * t387 - t304 * t383;
t593 = qJD(6) * t204 + t383 * t647 + t387 * t646;
t205 = t279 * t383 + t304 * t387;
t592 = -qJD(6) * t205 - t383 * t646 + t387 * t647;
t588 = pkin(5) * t652 + t587;
t584 = pkin(1) * qJDD(1);
t583 = t115 * t383;
t582 = t117 * t115;
t577 = t206 * t262;
t576 = t207 * t206;
t575 = t207 * t262;
t573 = t652 * t269;
t572 = t287 * t383;
t568 = t333 * t383;
t567 = t333 * t387;
t566 = t373 * t383;
t565 = t373 * t387;
t391 = qJD(1) ^ 2;
t561 = t382 * t391;
t237 = -t383 * t253 - t387 * t476;
t556 = qJD(6) * t237 + t383 * t452 + t387 * t554;
t427 = -t387 * t253 + t383 * t476;
t555 = qJD(6) * t427 - t383 * t554 + t387 * t452;
t552 = -t228 * t390 + t229 * t371;
t551 = -t231 * t371 - t232 * t390;
t548 = -t287 * t371 - t288 * t390;
t515 = t380 * t612;
t544 = t389 * pkin(1) + qJ(2) * t515;
t536 = qJD(6) * t642;
t530 = qJDD(1) * t376;
t529 = qJDD(1) * t381;
t524 = g(1) * t612;
t523 = t613 * pkin(4);
t508 = g(2) * t562 - g(3) * t382;
t494 = -t383 * t547 - t387 * t652;
t493 = t383 * t652 - t387 * t547;
t491 = t262 * t385;
t490 = t262 * t388;
t488 = 0.2e1 * t380 * t528;
t487 = pkin(4) * t510;
t483 = t527 - t628;
t478 = -pkin(1) * t612 + qJ(2) * t562;
t472 = -pkin(5) * t373 - pkin(12) * t372;
t471 = g(1) * t654 + g(2) * t179;
t470 = g(1) * t229 + g(2) * t231;
t369 = pkin(12) + t609;
t466 = -t369 * t68 + t648;
t50 = pkin(12) * t287 + t601;
t156 = t321 * pkin(3) - t164;
t118 = t225 * pkin(4) + t156;
t160 = t225 * t613 + t226 * t384;
t161 = -t384 * t225 + t226 * t613;
t73 = t160 * pkin(5) - t161 * pkin(12) + t118;
t20 = t383 * t73 + t387 * t50;
t19 = -t383 * t50 + t387 * t73;
t130 = t161 * t387 + t572;
t464 = (-qJ(2) * t511 + t355) * t379 - t318 * t381;
t456 = g(1) * t389 + g(2) * t612;
t51 = -t384 * t89 + t613 * t82;
t356 = -t380 * t584 + qJDD(2);
t451 = pkin(1) * t530 - t356 * t380;
t13 = t384 * t54 + t82 * t510 - t538 * t89 + t613 * t56;
t446 = -pkin(10) * t196 + t134 * t262;
t441 = g(1) * t232 + g(2) * t228 + g(3) * t288;
t438 = t333 * t534 - t494;
t437 = -t333 * t535 - t493;
t432 = t1 + t443;
t430 = -g(1) * t515 + t508;
t429 = t442 - t94;
t428 = t441 * t385;
t413 = pkin(10) * qJD(4) * t262 - t429;
t412 = t1 - t3 * t383 + (-t18 * t383 + t387 * t465) * qJD(6);
t409 = -t322 * pkin(2) - pkin(9) * t293 + t478;
t408 = t323 * pkin(2) + pkin(9) * t644 + t544;
t403 = -pkin(4) * t571 - t228 * t371 - t229 * t390 + t409;
t402 = t644 * t385;
t401 = t644 * t388;
t400 = pkin(4) * t402 - t231 * t390 + t232 * t371 + t408;
t397 = -qJD(3) * t652 - t440;
t145 = qJD(2) * t419 + qJD(3) * t165;
t396 = t397 + t622;
t107 = t171 * pkin(4) + t145;
t370 = -t523 - pkin(5);
t324 = -qJ(2) * t564 + t362;
t314 = pkin(4) * t569;
t299 = t353 + (-qJ(2) * qJDD(1) - t532) * t564;
t283 = pkin(4) * t401;
t281 = pkin(4) * t570;
t276 = t287 * t387;
t214 = t216 * pkin(5);
t184 = t232 * t388 + t402;
t183 = -t232 * t385 + t401;
t174 = t179 * pkin(5);
t173 = t654 * pkin(5);
t129 = t161 * t383 - t276;
t128 = t180 * t387 + t231 * t383;
t127 = -t180 * t383 + t231 * t387;
t87 = qJD(5) * t161 + t171 * t613 + t384 * t172;
t86 = t384 * t171 - t172 * t613 + t225 * t510 + t226 * t538;
t83 = t610 + t97;
t62 = qJD(6) * t130 - t272 * t387 - t383 * t86;
t61 = t161 * t535 - t272 * t383 - t287 * t534 + t387 * t86;
t49 = -t287 * pkin(5) - t51;
t48 = t613 * t78 - t596;
t32 = t87 * pkin(5) + t86 * pkin(12) + t107;
t27 = t383 * t97 + t387 * t39;
t26 = -t383 * t39 + t387 * t97;
t25 = t383 * t83 + t387 * t48;
t24 = -t383 * t48 + t387 * t83;
t12 = -t272 * pkin(5) - t14;
t11 = pkin(12) * t272 + t13;
t5 = -qJD(6) * t20 - t11 * t383 + t32 * t387;
t4 = qJD(6) * t19 + t11 * t387 + t32 * t383;
t6 = [0, 0, 0, 0, 0, qJDD(1), t524 - t604, t456, 0, 0, t375 * t530, 0.2e1 * t376 * t379 * t529, t379 * t488, t377 * t530, t381 * t488, t382 ^ 2 * qJDD(1), g(1) * t322 - g(2) * t323 + t451 * t381 + (qJDD(1) * t324 + t299 - t484) * t382, -g(1) * t367 + (-t451 + t604) * t379 + (-t325 * qJDD(1) - t300 + (t456 - t509) * t381) * t382, t532 * t632 + (-t299 * t379 + t300 * t381 + (-t324 * t379 + t325 * t381) * qJDD(1) - t456) * t380, t300 * t325 + t299 * t324 - g(1) * t478 - g(2) * t544 + (-t356 * pkin(1) - qJD(2) * t464) * t380, -t271 * t652 + t288 * t668, -t288 * t197 + t271 * t269 - t272 * t652 - t287 * t668, t271 * t313 - t398 * t321 + (t526 + (-t321 + t504) * qJDD(1)) * t288, t197 * t287 + t269 * t272, t197 * t321 + t272 * t313 + t287 * t433, t433 * t321, g(1) * t228 - g(2) * t232 + t145 * t313 - t164 * t433 + t188 * t287 + t209 * t197 + t199 * t272 + t269 * t458 + t321 * t453, t144 * t313 + t165 * t433 + t188 * t288 - t199 * t271 + t209 * t668 + t98 * t321 + t458 * t652 + t470, g(1) * t293 - g(2) * t644 - t144 * t269 + t145 * t652 + t158 * t271 - t159 * t272 - t164 * t668 - t165 * t197 - t98 * t287 + t288 * t453, -g(1) * t409 - g(2) * t408 + t159 * t144 - t158 * t145 - t164 * t453 + t98 * t165 + t188 * t209 + t199 * t458, -t124 * t226 + t172 * t207, t124 * t225 - t125 * t226 - t171 * t207 + t172 * t206, -t124 * t287 + t172 * t262 + t196 * t226 + t207 * t272, t125 * t225 - t171 * t206, -t125 * t287 - t171 * t262 - t196 * t225 + t206 * t272, t196 * t287 + t262 * t272, g(1) * t662 - g(2) * t184 + t100 * t196 + t156 * t125 + t134 * t171 - t145 * t206 + t94 * t225 + t67 * t262 + t90 * t272 + t34 * t287, g(1) * t663 - g(2) * t183 - t101 * t196 - t156 * t124 + t134 * t172 + t145 * t207 + t94 * t226 - t66 * t262 - t91 * t272 + t445 * t287, t100 * t124 - t101 * t125 - t171 * t91 - t172 * t90 + t206 * t66 - t207 * t67 + t225 * t445 - t226 * t34 - t470, -t445 * t101 + t91 * t66 + t34 * t100 + t90 * t67 + t94 * t156 + t134 * t145 - g(1) * (-pkin(3) * t228 + t229 * pkin(10) + t409) - g(2) * (t232 * pkin(3) + t231 * pkin(10) + t408) -t161 * t69 - t450 * t86, t140 * t86 + t160 * t69 - t161 * t70 - t450 * t87, -t86 * t483 + t161 * t424 - t69 * t287 + t450 * t272 + (t161 * t272 - t517 * t86) * qJD(1), t140 * t87 + t160 * t70, -t87 * t483 - t160 * t424 - t70 * t287 - t140 * t272 + (-t160 * t272 - t517 * t87) * qJD(1), t424 * t287 + (t483 + (t287 + t517) * qJD(1)) * t272, g(1) * t176 - g(2) * t180 + t10 * t287 + t107 * t140 + t108 * t87 + t118 * t70 + t14 * t425 + t72 * t160 + t39 * t272 + t395 * t51, t107 * t450 - t108 * t86 - t118 * t69 - t13 * t425 + t72 * t161 - t40 * t272 - t9 * t287 + t396 * t601 + t471, -t10 * t161 - t13 * t140 - t14 * t450 - t160 * t9 + t39 * t86 - t40 * t87 + t51 * t69 - t601 * t70 - t470, -g(1) * t403 - g(2) * t400 + t10 * t51 + t108 * t107 + t72 * t118 + t40 * t13 + t39 * t14 + t601 * t9, -t117 * t61 - t130 * t45, t115 * t61 - t117 * t62 + t129 * t45 - t130 * t46, t117 * t87 + t130 * t68 - t160 * t45 - t61 * t642, t115 * t62 + t129 * t46, -t115 * t87 - t129 * t68 - t160 * t46 - t62 * t642, t160 * t68 + t642 * t87, g(1) * t666 - g(2) * t128 + t12 * t115 + t8 * t129 + t3 * t160 + t19 * t68 + t37 * t62 + t49 * t46 - t465 * t87 + t5 * t642, -g(1) * t667 - g(2) * t127 + t12 * t117 + t8 * t130 - t2 * t160 - t18 * t87 - t20 * t68 - t37 * t61 - t4 * t642 - t49 * t45, -t115 * t4 - t117 * t5 - t129 * t2 - t130 * t3 - t18 * t62 + t19 * t45 - t20 * t46 - t465 * t61 - t471, t2 * t20 + t18 * t4 + t3 * t19 - t465 * t5 + t8 * t49 + t37 * t12 - g(1) * (-pkin(5) * t176 + pkin(12) * t654 + t403) - g(2) * (t180 * pkin(5) + t179 * pkin(12) + t400); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t379 * t561 - t529) * t380 (qJDD(1) * t379 + t381 * t561) * t380, -t391 * t632, qJDD(2) + (qJD(1) * t464 - t524 - t584) * t380 + t508, 0, 0, 0, 0, 0, 0, t197 * t586 - t269 * t459 + t313 * t452 - t433 * t476, t313 * t624 + t433 * t502 - t459 * t652 + t586 * t668, -t197 * t502 - t269 * t624 + t452 * t652 - t476 * t668, -t453 * t476 + t98 * t502 + t188 * t586 + t158 * t305 - t159 * t306 + (-t199 * t379 * t496 - t524) * t380 + (-t158 * t502 + t159 * t476) * qJD(3) + t508, 0, 0, 0, 0, 0, 0, -t125 * t476 + t326 * t196 - t206 * t452 - t262 * t550, t124 * t476 - t327 * t196 + t207 * t452 + t262 * t549, t124 * t326 - t125 * t327 - t206 * t549 + t207 * t550, t134 * t452 + t34 * t326 - t327 * t445 - t476 * t94 - t549 * t91 - t550 * t90 + t430, 0, 0, 0, 0, 0, 0, t449 * t424 - t70 * t476 - t305 * t140 + (t140 * t502 + t449 * t652) * qJD(3) - t553 * t425, -t253 * t424 + t69 * t476 - t305 * t450 + (-t253 * t652 + t450 * t502) * qJD(3) - t554 * t425, -t140 * t554 - t253 * t70 + t449 * t69 + t450 * t553, t10 * t449 + t108 * t452 + t9 * t253 - t39 * t553 + t40 * t554 - t476 * t72 + t430, 0, 0, 0, 0, 0, 0, t115 * t553 + t237 * t68 - t449 * t46 + t555 * t642, t117 * t553 + t427 * t68 + t449 * t45 - t556 * t642, -t115 * t556 - t117 * t555 + t237 * t45 + t427 * t46, t18 * t556 - t2 * t427 + t3 * t237 + t37 * t553 - t449 * t8 - t465 * t555 + t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t573, -t269 ^ 2 + t652 ^ 2, -t269 * t313 + t668, -t573, -t313 * t652 + t397, -t433, -t159 * t313 - t199 * t652 + t442 - t453, -t158 * t313 + t199 * t269 + t441 - t98, 0, 0, -t124 * t385 + t207 * t490 (-t124 + t577) * t388 + (-t125 - t575) * t385, t196 * t385 - t207 * t652 + t262 * t490, -t125 * t388 - t206 * t491, t196 * t388 - t206 * t652 - t262 * t491, -t262 * t652, -pkin(3) * t125 - t111 * t262 + t159 * t206 + t385 * t446 - t388 * t413 - t652 * t90, pkin(3) * t124 + t112 * t262 - t159 * t207 + t385 * t413 + t388 * t446 + t652 * t91, t111 * t207 - t112 * t206 + ((-t125 + t541) * pkin(10) + t643) * t388 + ((-qJD(4) * t206 - t124) * pkin(10) + t635) * t385 - t441, -t90 * t111 - t91 * t112 - t134 * t159 + t429 * pkin(3) + (-t445 * t388 - t34 * t385 + (-t385 * t91 - t388 * t90) * qJD(4) - t441) * pkin(10), -t333 * t69 + t450 * t547, -t140 * t547 + t332 * t69 - t333 * t70 - t450 * t546, t333 * t424 - t450 * t652 + (t272 * t333 + t517 * t547) * qJD(1) + t547 * t483, t140 * t546 + t332 * t70, -t332 * t424 + t140 * t652 + (-t272 * t332 - t517 * t546) * qJD(1) - t546 * t483, -t425 * t652, t108 * t546 + t140 * t629 + t72 * t332 - t371 * t70 + t373 * t442 - t39 * t652 + t395 * t448 - t425 * t587, t108 * t547 + t304 * t396 + t72 * t333 + t371 * t69 + t40 * t652 - t425 * t589 + t450 * t629 - t631, -t10 * t333 - t140 * t589 - t304 * t70 - t332 * t9 - t39 * t547 - t40 * t546 + t448 * t69 + t450 * t587 - t441, -g(1) * t551 - g(2) * t552 - g(3) * t548 + t10 * t448 + t108 * t629 + t9 * t304 - t72 * t371 - t587 * t39 + t589 * t40, t117 * t437 - t45 * t567, t494 * t117 + t493 * t115 + (t42 - t44 + (-t117 * t387 + t583) * qJD(6)) * t333, t117 * t546 - t332 * t45 + t437 * t642 + t567 * t68, t115 * t438 + t46 * t568, -t115 * t546 - t332 * t46 - t438 * t642 - t568 * t68, t332 * t68 + t546 * t642, t204 * t68 + t3 * t332 - t448 * t46 + t8 * t568 - g(1) * (-t231 * t565 + t232 * t383) - g(2) * (t228 * t383 + t229 * t565) - g(3) * (-t287 * t565 + t288 * t383) - t546 * t465 + t592 * t642 + t588 * t115 + t438 * t37, -t205 * t68 - t2 * t332 + t448 * t45 + t8 * t567 - g(1) * (t231 * t566 + t232 * t387) - g(2) * (t228 * t387 - t229 * t566) - g(3) * (t287 * t566 + t288 * t387) - t546 * t18 - t593 * t642 + t588 * t117 + t437 * t37, t204 * t45 - t205 * t46 + t494 * t18 - t493 * t465 - t592 * t117 - t593 * t115 + t631 + (-qJD(6) * t623 - t2 * t383 - t3 * t387) * t333, t2 * t205 + t3 * t204 - t8 * t448 - g(1) * (t231 * t472 + t551) - g(2) * (-t229 * t472 + t552) - g(3) * (t287 * t472 + t548) + t588 * t37 + t593 * t18 - t592 * t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t576, -t206 ^ 2 + t207 ^ 2, -t124 - t577, t576, t575 - t125, t196, -g(1) * t183 - g(2) * t663 + g(3) * t225 - t134 * t207 - t635, g(1) * t184 + g(2) * t662 + g(3) * t226 - t134 * t206 - t643, 0, 0, t578, t641, t640, -t578, t616, t395, -t140 * t610 + t395 * t523 + t425 * t634 - t510 * t79 - t538 * t75 + t618, -t450 * t610 + t396 * t609 + (t48 - t487) * t425 + t639, t40 * t450 + t48 * t140 - t39 * t140 - t47 * t450 + (t613 * t69 - t384 * t70 + (-t140 * t613 + t384 * t450) * qJD(5)) * pkin(4), -g(1) * t283 - g(2) * t281 + g(3) * t314 + t39 * t47 - t40 * t48 + (t10 * t613 - t108 * t207 + t9 * t384 + (-t384 * t39 + t40 * t613) * qJD(5) + t428) * pkin(4), t650, t656, t649, t583 * t642 - t44, t655, -t633, -t24 * t642 + t370 * t46 - t634 * t115 + (-t487 * t642 + t466) * t383 + (-t369 * t536 + t431) * t387 + t621, -t370 * t45 + t466 * t387 - t634 * t117 + (t369 * t535 - t387 * t487 + t25) * t642 + t619, t25 * t115 + t24 * t117 + (-t115 * t487 + t140 * t465 - t369 * t46 + (t117 * t369 + t465) * qJD(6)) * t387 + (t117 * t487 - t140 * t18 - t369 * t45 - t3 + (t115 * t369 - t18) * qJD(6)) * t383 + t432, t8 * t370 - t18 * t25 + t465 * t24 - t37 * t47 - g(1) * (pkin(12) * t180 - t174 + t283) - g(2) * (pkin(12) * t176 + t173 + t281) - g(3) * (pkin(12) * t217 + t214 - t314) + (t428 + (t37 * t384 + t613 * t623) * qJD(5)) * pkin(4) + t412 * t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t578, t641, t640, -t578, t616, t395, t262 * t40 + t618, t39 * t425 + t639, 0, 0, t650, t656, t649, t115 * t653 - t44, t655, -t633, -pkin(5) * t46 - t115 * t40 - t642 * t26 + (-pkin(12) * t68 + t648) * t383 + (-pkin(12) * t536 + t431) * t387 + t621, t37 * t645 + pkin(5) * t45 - t117 * t40 + t642 * t27 + (t535 * t642 - t64) * pkin(12) + t619, t115 * t27 + t117 * t26 + (t600 + (-t46 + t537) * pkin(12)) * t387 + ((qJD(6) * t115 - t45) * pkin(12) + t636) * t383 + t432, -t8 * pkin(5) + g(1) * t174 - g(2) * t173 - g(3) * t214 + t465 * t26 - t18 * t27 - t37 * t40 + (t412 + t443) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, -t115 ^ 2 + t117 ^ 2, t115 * t642 - t45, -t582, t117 * t642 - t46, t68, -t37 * t117 - g(1) * t127 + g(2) * t667 - g(3) * (-t217 * t383 + t276) - t636, -t600 + t37 * t115 + g(1) * t128 + g(2) * t666 - g(3) * (-t217 * t387 - t572) - t2, 0, 0;];
tau_reg  = t6;
