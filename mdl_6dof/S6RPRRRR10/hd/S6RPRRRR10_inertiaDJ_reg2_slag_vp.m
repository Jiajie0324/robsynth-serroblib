% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR10_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR10_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR10_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR10_inertiaDJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:34:10
% EndTime: 2019-03-09 07:34:41
% DurationCPUTime: 12.41s
% Computational Cost: add. (27371->532), mult. (77748->943), div. (0->0), fcn. (84560->14), ass. (0->232)
t140 = sin(pkin(13));
t142 = sin(pkin(6));
t143 = cos(pkin(13));
t289 = cos(pkin(7));
t308 = sin(qJ(3));
t227 = t289 * t308;
t141 = sin(pkin(7));
t290 = cos(pkin(6));
t242 = t141 * t290;
t310 = cos(qJ(3));
t314 = t142 * (t140 * t310 + t143 * t227) + t308 * t242;
t324 = t314 * qJD(3);
t323 = 0.2e1 * t324;
t241 = t142 * t289;
t319 = t143 * t241 + t242;
t186 = t319 * t310;
t283 = t140 * t142;
t237 = t308 * t283;
t95 = t237 - t186;
t67 = t95 * t323;
t259 = pkin(1) * t290;
t200 = pkin(2) * t290 + t143 * t259;
t183 = (-pkin(9) * t289 - qJ(2)) * t283 + t200;
t260 = -pkin(2) * t143 - pkin(1);
t284 = t140 * t141;
t203 = (-pkin(9) * t284 + t260) * t142;
t329 = t141 * t203 + t183 * t289;
t148 = cos(qJ(4));
t146 = sin(qJ(4));
t276 = qJD(4) * t146;
t328 = t148 * t324 - t276 * t95;
t216 = qJD(2) * t140 * t241;
t277 = qJD(2) * t142;
t251 = t143 * t277;
t282 = t142 * t143;
t176 = pkin(9) * t319 + qJ(2) * t282 + t140 * t259;
t315 = t308 * t176 - t310 * t329;
t158 = qJD(3) * t315 + t308 * t216 - t310 * t251;
t163 = t95 * pkin(3) - pkin(10) * t314 - t141 * t183 + t203 * t289;
t327 = -qJD(4) * t163 + t158;
t209 = t141 * t282 - t289 * t290;
t60 = t310 * t176 + t308 * t329;
t161 = -pkin(10) * t209 + t60;
t117 = qJD(3) * t237;
t182 = qJD(3) * t186 - t117;
t234 = t277 * t284;
t326 = -pkin(3) * t324 + pkin(10) * t182 + qJD(4) * t161 - t234;
t325 = -qJD(4) * t209 + t182;
t144 = sin(qJ(6));
t138 = t144 ^ 2;
t147 = cos(qJ(6));
t139 = t147 ^ 2;
t278 = t138 - t139;
t317 = t278 * qJD(6);
t145 = sin(qJ(5));
t171 = pkin(4) * t324;
t26 = t146 * t327 - t148 * t326;
t174 = qJD(4) * t314;
t62 = -t146 * t174 + t148 * t325;
t150 = -t62 * pkin(11) + t171 + t26;
t25 = t146 * t326 + t148 * t327;
t268 = t146 * t325 + t148 * t174;
t156 = pkin(11) * t268 + t25;
t35 = -t146 * t161 + t148 * t163;
t77 = -t146 * t209 + t148 * t314;
t159 = -t95 * pkin(4) + t77 * pkin(11) - t35;
t196 = t146 * t314 + t148 * t209;
t36 = t146 * t163 + t148 * t161;
t187 = -pkin(11) * t196 + t36;
t309 = cos(qJ(5));
t20 = -t145 * t159 + t187 * t309;
t151 = qJD(5) * t20 - t145 * t156 - t150 * t309;
t188 = t309 * t196;
t274 = qJD(5) * t145;
t197 = t145 * t268 + t274 * t77 - t309 * t62;
t165 = qJD(5) * t188 + t197;
t55 = -t145 * t196 + t309 * t77;
t33 = qJD(5) * t55 + t145 * t62 + t268 * t309;
t322 = qJD(3) * t60;
t48 = t310 * t216 + t308 * t251 + t322;
t37 = pkin(4) * t268 + t48;
t152 = t33 * pkin(5) + pkin(12) * t165 + t37;
t16 = pkin(12) * t95 + t20;
t272 = qJD(6) * t144;
t53 = pkin(3) * t209 + t315;
t40 = pkin(4) * t196 + t53;
t54 = t145 * t77 + t188;
t154 = t54 * pkin(5) - t55 * pkin(12) + t40;
t19 = -t145 * t187 - t159 * t309;
t7 = -qJD(5) * t19 - t145 * t150 + t309 * t156;
t321 = -pkin(12) * t324 - qJD(6) * t154 + t7;
t2 = -t144 * t152 + t147 * t321 + t16 * t272;
t1 = t2 * t147;
t10 = -t144 * t16 + t147 * t154;
t11 = t144 * t154 + t147 * t16;
t224 = t10 * t147 + t11 * t144;
t135 = qJD(6) * t147;
t3 = -t16 * t135 + t144 * t321 + t147 * t152;
t190 = -qJD(6) * t224 - t3 * t144 - t1;
t15 = -t95 * pkin(5) - t19;
t6 = -pkin(5) * t324 + t151;
t246 = -t6 * t147 + t15 * t272;
t275 = qJD(4) * t148;
t320 = t146 * t324 + t275 * t95;
t256 = t141 * t308;
t318 = t146 * t256 - t148 * t289;
t316 = qJD(4) + qJD(5);
t257 = t141 * t310;
t232 = qJD(3) * t257;
t100 = qJD(4) * t318 - t148 * t232;
t108 = t146 * t289 + t148 * t256;
t180 = qJD(4) * t108 + t146 * t232;
t313 = -t100 * t148 - t108 * t276 + t146 * t180 + t275 * t318;
t312 = -pkin(11) - pkin(10);
t311 = t135 * t15 + t144 * t6;
t307 = pkin(4) * t145;
t83 = t108 * t309 - t145 * t318;
t58 = qJD(5) * t83 - t100 * t145 + t180 * t309;
t82 = t108 * t145 + t309 * t318;
t305 = t82 * t58;
t124 = t312 * t148;
t253 = t309 * t146;
t101 = -t124 * t145 - t253 * t312;
t281 = t145 * t146;
t102 = -t124 * t309 + t281 * t312;
t258 = qJD(4) * t312;
t116 = t146 * t258;
t252 = t309 * t148;
t229 = qJD(4) * t252;
t76 = qJD(5) * t102 + t145 * t116 - t229 * t312;
t304 = t101 * t135 + t144 * t76;
t303 = pkin(4) * qJD(5);
t302 = t101 * t76;
t280 = t145 * t148;
t113 = t253 + t280;
t243 = qJD(5) * t309;
t98 = -t148 * t243 + t281 * t316 - t229;
t301 = t113 * t98;
t23 = -t135 * t95 - t144 * t324 + t147 * t165 + t272 * t55;
t300 = t144 * t23;
t44 = t144 * t95 + t147 * t55;
t24 = qJD(6) * t44 - t144 * t165 - t147 * t324;
t299 = t144 * t24;
t43 = t144 * t55 - t147 * t95;
t298 = t144 * t43;
t297 = t144 * t98;
t296 = t145 * t82;
t295 = t147 * t23;
t294 = t147 * t24;
t293 = t147 * t44;
t292 = t147 * t98;
t291 = t62 * t146;
t287 = t101 * t145;
t286 = t113 * t144;
t285 = t113 * t147;
t133 = -pkin(4) * t309 - pkin(5);
t264 = pkin(4) * t274;
t279 = t133 * t135 + t144 * t264;
t271 = 0.2e1 * t54 * t33;
t270 = -0.2e1 * pkin(3) * qJD(4);
t112 = -t252 + t281;
t99 = t316 * t113;
t269 = 0.2e1 * t112 * t99;
t267 = pkin(4) * t276;
t266 = pkin(5) * t272;
t265 = pkin(5) * t135;
t263 = t144 * t292;
t134 = -pkin(4) * t148 - pkin(3);
t255 = t144 * t309;
t254 = t147 * t309;
t248 = t144 * t135;
t247 = t146 * t275;
t245 = qJD(3) * t308;
t244 = qJD(4) * t310;
t239 = pkin(4) * t243;
t238 = t48 * t257;
t110 = t113 ^ 2;
t235 = t110 * t248;
t233 = t268 * t148;
t231 = t141 * t245;
t230 = t146 * t244;
t226 = t58 * t101 + t82 * t76;
t225 = t112 * t33 + t54 * t99;
t223 = t144 * t44 + t147 * t43;
t205 = -pkin(5) * t112 + pkin(12) * t113 - t134;
t198 = t147 * t205;
t68 = -t102 * t144 - t198;
t69 = t102 * t147 - t144 * t205;
t222 = t144 * t69 + t147 * t68;
t207 = t144 * t83 + t147 * t257;
t208 = t144 * t257 - t147 * t83;
t221 = -t144 * t208 - t147 * t207;
t220 = -0.2e1 * t290 * t277;
t132 = pkin(12) + t307;
t219 = t112 * t132 - t113 * t133;
t218 = t133 * t272 - t147 * t264;
t29 = t135 * t54 + t144 * t33;
t215 = -t147 * t33 + t272 * t54;
t45 = t135 * t82 + t144 * t58;
t46 = -t147 * t58 + t272 * t82;
t214 = t112 * t272 - t147 * t99;
t213 = t113 * t135 - t297;
t212 = t113 * t272 + t292;
t211 = t141 ^ 2 * t310 * t245;
t210 = 0.2e1 * (t140 ^ 2 + t143 ^ 2) * t142 ^ 2 * qJD(2);
t206 = (t138 + t139) * t309;
t204 = pkin(5) * t99 + pkin(12) * t98 + t267;
t202 = (-t112 * t309 + t113 * t145) * qJD(5);
t193 = t196 * t146;
t75 = qJD(5) * t101 - t116 * t309 - t258 * t280;
t38 = qJD(6) * t198 + t102 * t272 - t144 * t204 + t147 * t75;
t39 = -qJD(6) * t69 + t144 * t75 + t147 * t204;
t22 = -qJD(6) * t222 - t144 * t39 - t147 * t38;
t57 = t100 * t309 + t108 * t274 + t145 * t180 + t243 * t318;
t41 = qJD(6) * t207 - t144 * t231 + t147 * t57;
t42 = qJD(6) * t208 + t144 * t57 + t147 * t231;
t27 = -qJD(6) * t221 - t144 * t42 - t147 * t41;
t189 = -t26 * t146 - t25 * t148 + (-t36 * t146 - t35 * t148) * qJD(4);
t185 = pkin(4) * t202 - t132 * t99 - t133 * t98;
t127 = -0.2e1 * t248;
t126 = 0.2e1 * t248;
t111 = -0.2e1 * t317;
t106 = t206 * t303;
t96 = t101 * t272;
t81 = t112 * t135 + t144 * t99;
t70 = -t141 * t200 + (qJ(2) * t284 + t260 * t289) * t142;
t66 = t113 * t317 + t263;
t64 = -0.4e1 * t113 * t248 + t278 * t98;
t18 = t272 * t43 - t294;
t17 = t135 * t44 - t300;
t9 = -qJD(6) * t223 - t295 - t299;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140 * t220, t143 * t220, t210, qJ(2) * t210, 0.2e1 * t314 * t182, 0.2e1 * t117 * t95 + 0.2e1 * (-t186 * t95 - t314 ^ 2) * qJD(3), -0.2e1 * t182 * t209, t67, t209 * t323, 0, 0.2e1 * t209 * t48 + 0.2e1 * t234 * t95 + 0.2e1 * t324 * t70, -0.2e1 * t158 * t209 + 0.2e1 * t182 * t70 + 0.2e1 * t234 * t314, 0.2e1 * t158 * t95 + 0.2e1 * t182 * t315 + 0.2e1 * t314 * t48 - 0.2e1 * t324 * t60, 0.2e1 * (t60 * (-t140 * t227 + t143 * t310) + t70 * t284) * t277 - 0.2e1 * (-t48 + t322) * t315, 0.2e1 * t77 * t62, -0.2e1 * t196 * t62 - 0.2e1 * t268 * t77, 0.2e1 * t324 * t77 + 0.2e1 * t62 * t95, 0.2e1 * t196 * t268, -0.2e1 * t196 * t324 - 0.2e1 * t268 * t95, t67, 0.2e1 * t196 * t48 + 0.2e1 * t26 * t95 + 0.2e1 * t268 * t53 + 0.2e1 * t324 * t35, 0.2e1 * t25 * t95 - 0.2e1 * t324 * t36 + 0.2e1 * t48 * t77 + 0.2e1 * t53 * t62, 0.2e1 * t196 * t25 - 0.2e1 * t26 * t77 - 0.2e1 * t268 * t36 - 0.2e1 * t35 * t62, -0.2e1 * t25 * t36 + 0.2e1 * t26 * t35 + 0.2e1 * t48 * t53, -0.2e1 * t55 * t165, 0.2e1 * t165 * t54 - 0.2e1 * t33 * t55, -0.2e1 * t165 * t95 + 0.2e1 * t324 * t55, t271, -0.2e1 * t324 * t54 - 0.2e1 * t33 * t95, t67, -0.2e1 * t151 * t95 + 0.2e1 * t19 * t324 + 0.2e1 * t33 * t40 + 0.2e1 * t37 * t54, -0.2e1 * t165 * t40 - 0.2e1 * t20 * t324 + 0.2e1 * t37 * t55 + 0.2e1 * t7 * t95, 0.2e1 * t151 * t55 + 0.2e1 * t165 * t19 - 0.2e1 * t20 * t33 + 0.2e1 * t54 * t7, -0.2e1 * t151 * t19 - 0.2e1 * t20 * t7 + 0.2e1 * t37 * t40, -0.2e1 * t44 * t23, 0.2e1 * t23 * t43 - 0.2e1 * t24 * t44, -0.2e1 * t23 * t54 + 0.2e1 * t33 * t44, 0.2e1 * t43 * t24, -0.2e1 * t24 * t54 - 0.2e1 * t33 * t43, t271, 0.2e1 * t10 * t33 + 0.2e1 * t15 * t24 + 0.2e1 * t3 * t54 + 0.2e1 * t43 * t6, -0.2e1 * t11 * t33 - 0.2e1 * t15 * t23 + 0.2e1 * t2 * t54 + 0.2e1 * t44 * t6, 0.2e1 * t10 * t23 - 0.2e1 * t11 * t24 + 0.2e1 * t2 * t43 - 0.2e1 * t3 * t44, 0.2e1 * t10 * t3 - 0.2e1 * t11 * t2 + 0.2e1 * t15 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t209 * t256 + t289 * t314) * qJD(3), t182 * t289 + t209 * t232, -t182 * t257 - t232 * t95, t141 * t216 - t158 * t256 + t231 * t315 + t232 * t60 - t238, 0, 0, 0, 0, 0, 0, -t180 * t95 + t196 * t231 - t257 * t268 - t318 * t324, t100 * t95 - t108 * t324 + t231 * t77 - t257 * t62, t100 * t196 - t108 * t268 + t180 * t77 + t318 * t62, -t36 * t100 - t25 * t108 - t180 * t35 + t231 * t53 - t26 * t318 - t238, 0, 0, 0, 0, 0, 0, t231 * t54 - t257 * t33 - t324 * t82 - t58 * t95, t165 * t257 + t231 * t55 - t324 * t83 + t57 * t95, -t165 * t82 - t33 * t83 + t54 * t57 + t55 * t58, -t19 * t58 - t20 * t57 - t7 * t83 + t151 * t82 + (t245 * t40 - t310 * t37) * t141, 0, 0, 0, 0, 0, 0, -t207 * t33 + t24 * t82 + t42 * t54 + t43 * t58, t208 * t33 - t23 * t82 + t41 * t54 + t44 * t58, -t207 * t23 + t208 * t24 + t41 * t43 - t42 * t44, t10 * t42 - t11 * t41 + t15 * t58 + t2 * t208 - t207 * t3 + t6 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t100 * t108 + 0.2e1 * t180 * t318 - 0.2e1 * t211, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t57 * t83 - 0.2e1 * t211 + 0.2e1 * t305, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t207 * t42 + 0.2e1 * t208 * t41 + 0.2e1 * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, -t324, 0, -t48, t158, 0, 0, t275 * t77 + t291, -t146 * t268 + t62 * t148 + (-t77 * t146 - t148 * t196) * qJD(4), t320, qJD(4) * t193 - t233, t328, 0, -pkin(3) * t268 - pkin(10) * t320 - t48 * t148 + t276 * t53, -pkin(3) * t62 - pkin(10) * t328 + t48 * t146 + t275 * t53 (-t233 + t291 + (t148 * t77 + t193) * qJD(4)) * pkin(10) + t189, -t48 * pkin(3) + pkin(10) * t189, -t113 * t165 - t55 * t98, t112 * t165 - t113 * t33 + t54 * t98 - t55 * t99, t113 * t324 - t98 * t95, t225, -t112 * t324 - t99 * t95, 0, -t101 * t324 + t37 * t112 + t134 * t33 + t267 * t54 + t40 * t99 - t76 * t95, -t102 * t324 + t37 * t113 - t134 * t165 + t267 * t55 - t40 * t98 + t75 * t95, -t101 * t165 - t102 * t33 + t112 * t7 + t113 * t151 + t19 * t98 - t20 * t99 + t54 * t75 + t55 * t76, t101 * t151 - t102 * t7 + t134 * t37 - t19 * t76 - t20 * t75 + t267 * t40, -t44 * t292 + (-t272 * t44 - t295) * t113, t223 * t98 + (t300 - t294 + (-t293 + t298) * qJD(6)) * t113, -t112 * t23 - t113 * t215 - t292 * t54 + t44 * t99, -t43 * t297 + (t135 * t43 + t299) * t113, -t112 * t24 - t113 * t29 + t297 * t54 - t43 * t99, t225, t10 * t99 + t101 * t24 + t112 * t3 + t113 * t311 - t15 * t297 + t33 * t68 + t39 * t54 + t43 * t76, -t101 * t23 - t11 * t99 + t112 * t2 - t113 * t246 - t15 * t292 - t33 * t69 + t38 * t54 + t44 * t76, t23 * t68 - t24 * t69 + t38 * t43 - t39 * t44 + t224 * t98 + (t144 * t2 - t147 * t3 + (t10 * t144 - t11 * t147) * qJD(6)) * t113, t10 * t39 + t101 * t6 - t11 * t38 + t15 * t76 - t2 * t69 + t3 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t232, 0, 0, 0, 0, 0, 0, 0, 0 (-t148 * t245 - t230) * t141 (t146 * t245 - t148 * t244) * t141, t313, -pkin(3) * t231 + pkin(10) * t313, 0, 0, 0, 0, 0, 0 (t112 * t245 - t310 * t99) * t141 (t113 * t245 + t310 * t98) * t141, t112 * t57 + t113 * t58 - t82 * t98 - t83 * t99, -t57 * t102 - t83 * t75 + (-pkin(4) * t230 + t134 * t245) * t141 + t226, 0, 0, 0, 0, 0, 0, t112 * t42 + t113 * t45 - t207 * t99 - t297 * t82, t112 * t41 - t113 * t46 + t208 * t99 - t292 * t82, t221 * t98 + (t144 * t41 - t147 * t42 + (-t144 * t207 + t147 * t208) * qJD(6)) * t113, -t207 * t39 + t208 * t38 - t41 * t69 + t42 * t68 + t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t247, 0.2e1 * (-t146 ^ 2 + t148 ^ 2) * qJD(4), 0, -0.2e1 * t247, 0, 0, t146 * t270, t148 * t270, 0, 0, -0.2e1 * t301, 0.2e1 * t112 * t98 - 0.2e1 * t113 * t99, 0, t269, 0, 0, 0.2e1 * t112 * t267 + 0.2e1 * t134 * t99, 0.2e1 * t113 * t267 - 0.2e1 * t134 * t98, -0.2e1 * t101 * t98 - 0.2e1 * t102 * t99 + 0.2e1 * t112 * t75 + 0.2e1 * t113 * t76, -0.2e1 * t102 * t75 + 0.2e1 * t134 * t267 + 0.2e1 * t302, -0.2e1 * t139 * t301 - 0.2e1 * t235, 0.2e1 * t110 * t317 + 0.4e1 * t113 * t263, -0.2e1 * t112 * t212 + 0.2e1 * t285 * t99, -0.2e1 * t138 * t301 + 0.2e1 * t235, -0.2e1 * t112 * t213 - 0.2e1 * t286 * t99, t269, 0.2e1 * t101 * t213 + 0.2e1 * t112 * t39 + 0.2e1 * t286 * t76 + 0.2e1 * t68 * t99, -0.2e1 * t101 * t212 + 0.2e1 * t112 * t38 + 0.2e1 * t285 * t76 - 0.2e1 * t69 * t99, 0.2e1 * t222 * t98 + 0.2e1 * (t144 * t38 - t147 * t39 + (t144 * t68 - t147 * t69) * qJD(6)) * t113, -0.2e1 * t38 * t69 + 0.2e1 * t39 * t68 + 0.2e1 * t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, -t268, t324, t26, t25, 0, 0, 0, 0, -t165, 0, -t33, t324, t171 * t309 - t264 * t95 - t151, -t239 * t95 - t307 * t324 + t7 (-t145 * t33 + t309 * t197 + (t145 * t55 + (-t54 + t188) * t309) * qJD(5)) * pkin(4) (-t309 * t151 - t145 * t7 + (-t145 * t19 + t20 * t309) * qJD(5)) * pkin(4), t17, t9, t29, t18, -t215, 0, t133 * t24 - t29 * t132 + (t145 * t43 - t255 * t54) * t303 + t246, -t133 * t23 + t215 * t132 + (t145 * t44 - t254 * t54) * t303 + t311, -t1 + (-t43 * t239 - t132 * t24 + (t132 * t44 - t10) * qJD(6)) * t147 + (t44 * t239 - t132 * t23 - t3 + (t132 * t43 - t11) * qJD(6)) * t144, t6 * t133 + (-t10 * t255 + t11 * t254 + t145 * t15) * t303 + t190 * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, t100, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t57, 0 (-t309 * t58 - t145 * t57 + (t309 * t83 + t296) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, t46, t45, t27, t58 * t133 + (t207 * t255 - t208 * t254 + t296) * t303 + t27 * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t275, 0, -t276, 0, -pkin(10) * t275, pkin(10) * t276, 0, 0, 0, 0, -t98, 0, -t99, 0, -t76, t75 (-t145 * t99 + t309 * t98 + t202) * pkin(4) (-t309 * t76 - t145 * t75 + (t102 * t309 + t287) * qJD(5)) * pkin(4), -t66, t64, t81, t66, -t214, 0, t96 + (-qJD(6) * t219 - t76) * t147 + t185 * t144, t147 * t185 + t219 * t272 + t304, t22, t76 * t133 + (t254 * t69 - t255 * t68 + t287) * t303 + t22 * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t264, -0.2e1 * t239, 0, 0, t126, t111, 0, t127, 0, 0, 0.2e1 * t218, 0.2e1 * t279, 0.2e1 * t106, 0.2e1 * (t132 * t206 + t133 * t145) * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165, 0, -t33, t324, -t151, t7, 0, 0, t17, t9, t29, t18, -t215, 0, -pkin(5) * t24 - pkin(12) * t29 + t246, pkin(5) * t23 + pkin(12) * t215 + t311 (-t300 - t294 + (t293 + t298) * qJD(6)) * pkin(12) + t190, -pkin(5) * t6 + pkin(12) * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t57, 0, 0, 0, 0, 0, 0, 0, 0, t46, t45, t27, -pkin(5) * t58 + pkin(12) * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, -t76, t75, 0, 0, -t66, t64, t81, t66, -t214, 0, t96 + (pkin(5) * t98 - pkin(12) * t99) * t144 + (-t76 + (-pkin(5) * t113 - pkin(12) * t112) * qJD(6)) * t147, pkin(5) * t212 + pkin(12) * t214 + t304, t22, -pkin(5) * t76 + pkin(12) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, -t239, 0, 0, t126, t111, 0, t127, 0, 0, t218 - t266, -t265 + t279, t106 (-pkin(5) * t145 + pkin(12) * t206) * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t111, 0, t127, 0, 0, -0.2e1 * t266, -0.2e1 * t265, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, 0, -t24, t33, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, 0, -t213, t99, t39, t38, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, -t272, 0, -t132 * t135 - t144 * t239, t132 * t272 - t147 * t239, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, 0, -t272, 0, -pkin(12) * t135, pkin(12) * t272, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
