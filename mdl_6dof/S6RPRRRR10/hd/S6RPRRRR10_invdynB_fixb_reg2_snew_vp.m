% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:58
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRRR10_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR10_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR10_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR10_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR10_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RPRRRR10_invdynB_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:51:17
% EndTime: 2019-05-06 04:53:51
% DurationCPUTime: 159.30s
% Computational Cost: add. (1781086->1303), mult. (5531942->2183), div. (0->0), fcn. (4814623->16), ass. (0->955)
t1396 = sin(qJ(6));
t1390 = sin(pkin(13));
t1392 = sin(pkin(6));
t1393 = cos(pkin(13));
t1395 = cos(pkin(6));
t1404 = cos(qJ(3));
t1394 = cos(pkin(7));
t1399 = sin(qJ(3));
t1604 = t1394 * t1399;
t1391 = sin(pkin(7));
t1611 = t1391 * t1399;
t1423 = t1395 * t1611 + (t1390 * t1404 + t1393 * t1604) * t1392;
t1342 = t1423 * qJD(1);
t1605 = t1394 * t1395;
t1607 = t1392 * t1393;
t1671 = t1391 * t1607 - t1605;
t1353 = qJD(1) * t1671 - qJD(3);
t1398 = sin(qJ(4));
t1403 = cos(qJ(4));
t1319 = -t1398 * t1342 - t1353 * t1403;
t1320 = t1342 * t1403 - t1353 * t1398;
t1397 = sin(qJ(5));
t1402 = cos(qJ(5));
t1267 = t1319 * t1397 + t1320 * t1402;
t1614 = t1390 * t1399;
t1606 = t1392 * t1394;
t1577 = t1393 * t1606;
t1609 = t1391 * t1404;
t1682 = -t1395 * t1609 - t1404 * t1577;
t1340 = (t1392 * t1614 + t1682) * qJD(1);
t1335 = qJD(4) + t1340;
t1333 = qJD(5) + t1335;
t1401 = cos(qJ(6));
t1234 = t1267 * t1396 - t1401 * t1333;
t1236 = t1267 * t1401 + t1333 * t1396;
t1168 = t1236 * t1234;
t1422 = t1423 * qJDD(1);
t1305 = -qJD(3) * t1340 + t1422;
t1592 = qJDD(1) * t1393;
t1570 = t1392 * t1592;
t1591 = qJDD(1) * t1395;
t1457 = -t1391 * t1570 + t1394 * t1591 + qJDD(3);
t1564 = t1305 * t1398 - t1403 * t1457;
t1248 = -qJD(4) * t1320 - t1564;
t1249 = t1319 * qJD(4) + t1403 * t1305 + t1398 * t1457;
t1566 = -t1402 * t1248 + t1249 * t1397;
t1149 = -qJD(5) * t1267 - t1566;
t1438 = qJDD(6) - t1149;
t1676 = -t1168 + t1438;
t1690 = t1396 * t1676;
t1265 = -t1402 * t1319 + t1320 * t1397;
t1207 = t1267 * t1265;
t1593 = qJDD(1) * t1392;
t1572 = t1390 * t1593;
t1467 = qJDD(1) * t1682 + t1399 * t1572;
t1304 = -qJD(3) * t1342 - t1467;
t1425 = qJDD(4) - t1304;
t1299 = qJDD(5) + t1425;
t1675 = -t1207 + t1299;
t1689 = t1397 * t1675;
t1277 = t1319 * t1320;
t1673 = t1277 + t1425;
t1688 = t1398 * t1673;
t1687 = t1401 * t1676;
t1686 = t1402 * t1675;
t1685 = t1403 * t1673;
t1323 = t1340 * t1353;
t1272 = t1323 + t1305;
t1400 = sin(qJ(1));
t1405 = cos(qJ(1));
t1378 = t1400 * g(1) - t1405 * g(2);
t1659 = pkin(9) * t1391;
t1664 = pkin(2) * t1393;
t1475 = t1390 * t1659 + t1664;
t1568 = t1395 * g(3) - qJDD(2);
t1385 = t1390 ^ 2;
t1388 = t1393 ^ 2;
t1595 = t1385 + t1388;
t1670 = qJD(1) ^ 2;
t1608 = t1392 * t1670;
t1612 = t1391 * t1395;
t1654 = qJ(2) * t1392;
t1663 = pkin(2) * t1395;
t1413 = ((-pkin(1) - t1475) * qJDD(1) - t1378) * t1392 + (t1390 * t1663 - t1654 + (-t1393 * t1612 - t1595 * t1606) * pkin(9)) * t1608 - t1568;
t1474 = qJDD(1) * pkin(1) + t1378;
t1456 = t1395 * t1474;
t1590 = pkin(2) * t1591;
t1419 = -g(3) * t1607 + t1393 * t1456 + t1590;
t1379 = t1405 * g(1) + t1400 * g(2);
t1431 = qJ(2) * t1593 - t1379;
t1562 = pkin(9) * t1572;
t1417 = -t1390 * t1431 - t1394 * t1562 + t1419;
t1415 = t1391 * t1417 - t1394 * t1413;
t1412 = -pkin(10) * t1272 - t1415;
t1565 = -t1342 * t1353 - t1304;
t1684 = t1565 * pkin(3) + t1412;
t1244 = t1333 * t1265;
t1433 = qJD(5) * t1265 - t1248 * t1397 - t1249 * t1402;
t1683 = t1433 + t1244;
t1665 = 2 * qJD(2);
t1469 = t1577 + t1612;
t1442 = t1469 * pkin(9);
t1628 = t1340 * t1342;
t1427 = t1457 - t1628;
t1680 = t1399 * t1427;
t1679 = t1404 * t1427;
t1613 = t1391 * t1392;
t1581 = t1390 * t1613;
t1588 = qJ(2) * t1607;
t1615 = t1390 * t1392;
t1656 = t1390 * pkin(1);
t1678 = (t1581 * t1665 - t1391 * (pkin(2) * t1607 * t1615 + t1395 * t1588 + t1656 + (t1395 * t1469 + t1581 * t1615) * pkin(9)) * qJD(1)) * qJD(1);
t1466 = t1475 * t1392;
t1387 = t1392 ^ 2;
t1389 = t1395 ^ 2;
t1580 = t1390 * t1393 * t1670;
t1677 = (t1387 + t1389) * t1392 * t1580;
t1289 = t1335 * t1319;
t1212 = t1289 - t1249;
t1211 = t1289 + t1249;
t1300 = pkin(3) * t1340 - pkin(10) * t1342;
t1672 = t1457 * pkin(10) - t1340 * t1300;
t1262 = qJD(6) + t1265;
t1187 = t1262 * t1234;
t1574 = t1234 * qJD(6) - t1396 * t1299 + t1401 * t1433;
t1067 = t1574 + t1187;
t1567 = -t1401 * t1299 - t1396 * t1433;
t1062 = (qJD(6) - t1262) * t1236 + t1567;
t1114 = (qJD(5) - t1333) * t1267 + t1566;
t1208 = (qJD(4) - t1335) * t1320 + t1564;
t1232 = t1234 ^ 2;
t1233 = t1236 ^ 2;
t1261 = t1262 ^ 2;
t1263 = t1265 ^ 2;
t1264 = t1267 ^ 2;
t1669 = t1319 ^ 2;
t1318 = t1320 ^ 2;
t1668 = t1333 ^ 2;
t1334 = t1335 ^ 2;
t1338 = t1340 ^ 2;
t1339 = t1342 ^ 2;
t1667 = t1353 ^ 2;
t1666 = -2 * qJD(2);
t1662 = pkin(3) * t1399;
t1661 = pkin(3) * t1404;
t1660 = pkin(5) * t1397;
t1658 = pkin(9) * t1394;
t1657 = t1667 * pkin(3);
t1655 = t1392 * g(3);
t1204 = pkin(5) * t1265 - pkin(12) * t1267;
t1416 = t1399 * ((t1393 * t1605 - t1613) * t1654 - t1671 * t1442);
t1418 = -pkin(2) * t1570 - t1392 * t1474 - t1568;
t1573 = qJ(2) + t1658;
t1382 = g(3) * t1615;
t1559 = t1395 * t1573;
t1257 = t1393 * t1431 + t1390 * t1456 - t1382 + qJDD(1) * t1442 + ((-t1393 * pkin(1) - pkin(2) * t1389) * qJD(1) + (t1393 * t1665 + (t1390 * t1559 - t1393 * t1466) * qJD(1)) * t1392) * qJD(1);
t1600 = t1404 * t1257;
t1159 = t1600 + (t1391 * t1418 + t1394 * t1419) * t1399 + t1670 * t1416 + (t1394 * (t1670 * pkin(1) + t1379) + ((-t1391 ^ 2 * pkin(9) - t1394 * t1573) * qJDD(1) + (pkin(2) * qJD(1) * t1469 + t1394 * t1666) * qJD(1)) * t1392) * t1614;
t1408 = t1159 - t1657 + t1672;
t1410 = t1678 + t1684;
t1051 = t1398 * t1410 + t1403 * t1408;
t1286 = pkin(4) * t1335 - pkin(11) * t1320;
t1004 = -pkin(4) * t1669 + pkin(11) * t1248 - t1286 * t1335 + t1051;
t1407 = pkin(4) * t1673 + pkin(11) * t1212 - t1398 * t1408 + t1403 * t1410;
t914 = t1402 * t1004 + t1397 * t1407;
t905 = -pkin(5) * t1668 + pkin(12) * t1299 - t1204 * t1265 + t914;
t1603 = t1394 * t1404;
t1158 = t1257 * t1399 - (t1590 + (t1456 - t1655) * t1393 + (-t1573 * t1593 + t1379) * t1390 + ((t1389 * t1659 + t1656) * qJD(1) + (t1390 * t1666 + (t1390 * t1466 + t1393 * t1559) * qJD(1)) * t1392) * qJD(1)) * t1603 - t1413 * t1609;
t1131 = -t1457 * pkin(3) - t1667 * pkin(10) + t1300 * t1342 + t1158;
t1075 = -t1248 * pkin(4) - t1669 * pkin(11) + t1286 * t1320 + t1131;
t959 = t1683 * pkin(12) + (t1267 * t1333 - t1149) * pkin(5) + t1075;
t844 = t1396 * t959 + t1401 * t905;
t913 = t1004 * t1397 - t1402 * t1407;
t904 = -t1299 * pkin(5) - pkin(12) * t1668 + t1204 * t1267 + t913;
t1653 = t1396 * t904;
t839 = t1397 * t914 - t1402 * t913;
t1652 = t1398 * t839;
t1651 = t1401 * t904;
t1650 = t1403 * t839;
t1649 = t1075 * t1397;
t1648 = t1075 * t1402;
t1087 = t1168 + t1438;
t1647 = t1087 * t1396;
t1646 = t1087 * t1401;
t1645 = t1131 * t1398;
t1644 = t1131 * t1403;
t1176 = t1207 + t1299;
t1643 = t1176 * t1397;
t1642 = t1176 * t1402;
t1216 = t1415 - t1678;
t1641 = t1216 * t1399;
t1640 = t1216 * t1404;
t1227 = -t1277 + t1425;
t1639 = t1227 * t1398;
t1638 = t1227 * t1403;
t1637 = t1262 * t1396;
t1636 = t1262 * t1401;
t1291 = -t1457 - t1628;
t1635 = t1291 * t1399;
t1634 = t1291 * t1404;
t1633 = t1333 * t1397;
t1632 = t1333 * t1402;
t1631 = t1335 * t1398;
t1630 = t1335 * t1403;
t1627 = t1340 * t1404;
t1625 = t1342 * t1399;
t1428 = qJ(2) * t1608 + t1474;
t1343 = t1392 * t1428 + t1568;
t1624 = t1343 * t1390;
t1623 = t1343 * t1393;
t1370 = t1387 * t1580;
t1358 = t1370 + t1591;
t1622 = t1358 * t1390;
t1621 = t1358 * t1393;
t1359 = -t1370 + t1591;
t1620 = t1359 * t1390;
t1619 = t1359 * t1393;
t1618 = t1385 * t1387;
t1617 = t1387 * t1670;
t1616 = t1387 * t1388;
t1610 = t1391 * t1403;
t1602 = t1395 * t1670;
t1601 = t1398 * t1399;
t1599 = qJD(3) - t1353;
t1594 = qJDD(1) * t1387;
t1589 = -pkin(5) * t1402 - pkin(4);
t1587 = t1397 * t1168;
t1586 = t1402 * t1168;
t1585 = t1399 * t1207;
t1584 = t1404 * t1207;
t1583 = t1399 * t1277;
t1582 = t1404 * t1277;
t1576 = t1392 * t1602;
t1575 = t1394 * t1601;
t1571 = t1390 * t1592;
t1569 = t1392 * t1591;
t843 = t1396 * t905 - t1401 * t959;
t840 = t1397 * t913 + t1402 * t914;
t1409 = (((t1442 + t1588) * t1395 * t1610 + t1398 * t1416 + ((t1387 * t1664 + pkin(1)) * t1575 + (t1403 * pkin(1) + (t1403 * t1466 + t1601 * t1663) * t1392) * t1391) * t1390) * qJD(1) + (-t1575 - t1610) * t1615 * t1665) * qJD(1);
t1411 = t1600 + t1417 * t1604 + (-t1391 * t1562 + t1418) * t1611 + t1672;
t1050 = t1398 * (t1411 - t1657) - t1403 * t1684 + t1409;
t968 = t1050 * t1398 + t1403 * t1051;
t1345 = -t1378 * t1400 - t1405 * t1379;
t1376 = qJDD(1) * t1405 - t1400 * t1670;
t1560 = -pkin(8) * t1376 - g(3) * t1400;
t1290 = -t1667 - t1338;
t1229 = t1290 * t1404 - t1680;
t1558 = pkin(9) * t1229 + t1640;
t1296 = -t1339 - t1667;
t1237 = -t1296 * t1399 + t1634;
t1557 = pkin(9) * t1237 - t1641;
t798 = t1396 * t843 + t1401 * t844;
t769 = t1397 * t798 - t1402 * t904;
t770 = t1397 * t904 + t1402 * t798;
t727 = -t1398 * t769 + t1403 * t770;
t797 = t1396 * t844 - t1401 * t843;
t1536 = t1399 * t727 - t1404 * t797;
t726 = t1398 * t770 + t1403 * t769;
t693 = -t1391 * t726 + t1394 * t1536;
t715 = t1399 * t797 + t1404 * t727;
t1556 = t1390 * t715 + t1393 * t693;
t796 = t1403 * t840 - t1652;
t1525 = -t1075 * t1404 + t1399 * t796;
t795 = t1398 * t840 + t1650;
t737 = -t1391 * t795 + t1394 * t1525;
t785 = t1075 * t1399 + t1404 * t796;
t1555 = t1390 * t785 + t1393 * t737;
t1136 = t1232 + t1233;
t1066 = -t1187 + t1574;
t973 = -t1062 * t1401 - t1066 * t1396;
t939 = t1136 * t1402 + t1397 * t973;
t940 = -t1136 * t1397 + t1402 * t973;
t855 = -t1398 * t939 + t1403 * t940;
t971 = -t1062 * t1396 + t1066 * t1401;
t1535 = t1399 * t855 - t1404 * t971;
t854 = t1398 * t940 + t1403 * t939;
t788 = -t1391 * t854 + t1394 * t1535;
t822 = t1399 * t971 + t1404 * t855;
t1554 = t1390 * t822 + t1393 * t788;
t1166 = -t1233 + t1232;
t1063 = (-qJD(6) - t1262) * t1236 - t1567;
t972 = t1063 * t1401 + t1067 * t1396;
t947 = t1166 * t1402 + t1397 * t972;
t948 = -t1166 * t1397 + t1402 * t972;
t867 = -t1398 * t947 + t1403 * t948;
t970 = -t1063 * t1396 + t1067 * t1401;
t1534 = t1399 * t867 + t1404 * t970;
t866 = t1398 * t948 + t1403 * t947;
t794 = -t1391 * t866 + t1394 * t1534;
t829 = -t1399 * t970 + t1404 * t867;
t1553 = t1390 * t829 + t1393 * t794;
t1146 = -t1261 - t1232;
t1014 = t1146 * t1396 + t1687;
t1015 = t1146 * t1401 - t1690;
t951 = t1015 * t1397 + t1063 * t1402;
t952 = t1015 * t1402 - t1063 * t1397;
t874 = -t1398 * t951 + t1403 * t952;
t1531 = -t1014 * t1404 + t1399 * t874;
t873 = t1398 * t952 + t1403 * t951;
t800 = -t1391 * t873 + t1394 * t1531;
t837 = t1014 * t1399 + t1404 * t874;
t1552 = t1390 * t837 + t1393 * t800;
t1153 = -t1233 - t1261;
t1027 = t1153 * t1401 - t1647;
t1028 = -t1153 * t1396 - t1646;
t953 = t1028 * t1397 + t1067 * t1402;
t954 = t1028 * t1402 - t1067 * t1397;
t880 = -t1398 * t953 + t1403 * t954;
t1530 = -t1027 * t1404 + t1399 * t880;
t879 = t1398 * t954 + t1403 * t953;
t802 = -t1391 * t879 + t1394 * t1530;
t838 = t1027 * t1399 + t1404 * t880;
t1551 = t1390 * t838 + t1393 * t802;
t1186 = -t1233 + t1261;
t1037 = -t1186 * t1401 - t1690;
t1039 = -t1186 * t1396 + t1687;
t962 = t1039 * t1397 + t1066 * t1402;
t964 = t1039 * t1402 - t1066 * t1397;
t890 = -t1398 * t962 + t1403 * t964;
t1529 = t1037 * t1404 + t1399 * t890;
t888 = t1398 * t964 + t1403 * t962;
t808 = -t1391 * t888 + t1394 * t1529;
t847 = -t1037 * t1399 + t1404 * t890;
t1550 = t1390 * t847 + t1393 * t808;
t1185 = t1232 - t1261;
t1038 = -t1185 * t1396 - t1646;
t1040 = t1185 * t1401 - t1647;
t963 = t1040 * t1397 + t1062 * t1402;
t965 = t1040 * t1402 - t1062 * t1397;
t891 = -t1398 * t963 + t1403 * t965;
t1528 = t1038 * t1404 + t1399 * t891;
t889 = t1398 * t965 + t1403 * t963;
t809 = -t1391 * t889 + t1394 * t1528;
t848 = -t1038 * t1399 + t1404 * t891;
t1549 = t1390 * t848 + t1393 * t809;
t1096 = -qJD(6) * t1236 - t1567;
t1052 = -t1096 * t1401 - t1234 * t1637;
t1053 = -t1096 * t1396 + t1234 * t1636;
t1005 = t1053 * t1397 + t1586;
t1007 = t1053 * t1402 - t1587;
t928 = -t1005 * t1398 + t1007 * t1403;
t1527 = t1052 * t1404 + t1399 * t928;
t926 = t1005 * t1403 + t1007 * t1398;
t834 = -t1391 * t926 + t1394 * t1527;
t897 = -t1052 * t1399 + t1404 * t928;
t1548 = t1390 * t897 + t1393 * t834;
t1054 = -t1236 * t1636 + t1396 * t1574;
t1055 = -t1236 * t1637 - t1401 * t1574;
t1006 = t1055 * t1397 - t1586;
t1008 = t1055 * t1402 + t1587;
t929 = -t1006 * t1398 + t1008 * t1403;
t1526 = t1054 * t1404 + t1399 * t929;
t927 = t1006 * t1403 + t1008 * t1398;
t835 = -t1391 * t927 + t1394 * t1526;
t898 = -t1054 * t1399 + t1404 * t929;
t1547 = t1390 * t898 + t1393 * t835;
t1157 = -t1263 - t1264;
t1118 = -t1244 + t1433;
t1024 = -t1114 * t1397 + t1118 * t1402;
t1026 = -t1114 * t1402 - t1118 * t1397;
t944 = -t1024 * t1398 + t1026 * t1403;
t1521 = -t1157 * t1404 + t1399 * t944;
t942 = t1024 * t1403 + t1026 * t1398;
t846 = -t1391 * t942 + t1394 * t1521;
t911 = t1157 * t1399 + t1404 * t944;
t1546 = t1390 * t911 + t1393 * t846;
t1205 = -t1264 + t1263;
t1113 = (qJD(5) + t1333) * t1267 + t1566;
t1023 = -t1113 * t1397 - t1402 * t1683;
t1025 = -t1113 * t1402 + t1397 * t1683;
t943 = -t1023 * t1398 + t1025 * t1403;
t1520 = t1205 * t1404 + t1399 * t943;
t941 = t1023 * t1403 + t1025 * t1398;
t850 = -t1391 * t941 + t1394 * t1520;
t923 = -t1205 * t1399 + t1404 * t943;
t1545 = t1390 * t923 + t1393 * t850;
t1120 = (t1234 * t1396 + t1236 * t1401) * t1262;
t1121 = (-t1234 * t1401 + t1236 * t1396) * t1262;
t1045 = t1121 * t1397 - t1402 * t1438;
t1046 = t1121 * t1402 + t1397 * t1438;
t961 = -t1045 * t1398 + t1046 * t1403;
t1523 = t1120 * t1404 + t1399 * t961;
t960 = t1045 * t1403 + t1046 * t1398;
t862 = -t1391 * t960 + t1394 * t1523;
t924 = -t1120 * t1399 + t1404 * t961;
t1544 = t1390 * t924 + t1393 * t862;
t1522 = -t1131 * t1404 + t1399 * t968;
t967 = -t1050 * t1403 + t1051 * t1398;
t869 = -t1391 * t967 + t1394 * t1522;
t936 = t1131 * t1399 + t1404 * t968;
t1543 = t1390 * t936 + t1393 * t869;
t1192 = -t1668 - t1263;
t1106 = t1192 * t1397 + t1686;
t1107 = t1192 * t1402 - t1689;
t1016 = t1106 * t1403 + t1107 * t1398;
t1017 = -t1106 * t1398 + t1107 * t1403;
t1519 = t1017 * t1399 - t1113 * t1404;
t909 = -t1016 * t1391 + t1394 * t1519;
t975 = t1017 * t1404 + t1113 * t1399;
t1542 = t1390 * t975 + t1393 * t909;
t1223 = -t1264 - t1668;
t1128 = t1223 * t1402 - t1643;
t1129 = -t1223 * t1397 - t1642;
t1043 = t1128 * t1403 + t1129 * t1398;
t1044 = -t1128 * t1398 + t1129 * t1403;
t1516 = t1044 * t1399 + t1404 * t1683;
t918 = -t1043 * t1391 + t1394 * t1516;
t982 = t1044 * t1404 - t1399 * t1683;
t1541 = t1390 * t982 + t1393 * t918;
t1109 = t1149 * t1402 + t1265 * t1633;
t1110 = -t1149 * t1397 + t1265 * t1632;
t1018 = t1109 * t1403 + t1110 * t1398;
t1020 = -t1109 * t1398 + t1110 * t1403;
t1473 = t1020 * t1399 + t1584;
t921 = -t1018 * t1391 + t1394 * t1473;
t990 = t1020 * t1404 - t1585;
t1540 = t1390 * t990 + t1393 * t921;
t1111 = t1267 * t1632 - t1397 * t1433;
t1112 = -t1267 * t1633 - t1402 * t1433;
t1019 = t1111 * t1403 + t1112 * t1398;
t1021 = -t1111 * t1398 + t1112 * t1403;
t1472 = t1021 * t1399 - t1584;
t922 = -t1019 * t1391 + t1394 * t1472;
t991 = t1021 * t1404 + t1585;
t1539 = t1390 * t991 + t1393 * t922;
t1243 = -t1264 + t1668;
t1138 = t1243 * t1402 + t1689;
t1140 = -t1243 * t1397 + t1686;
t1058 = t1138 * t1403 + t1140 * t1398;
t1060 = -t1138 * t1398 + t1140 * t1403;
t1514 = t1060 * t1399 + t1118 * t1404;
t932 = -t1058 * t1391 + t1394 * t1514;
t985 = t1060 * t1404 - t1118 * t1399;
t1538 = t1390 * t985 + t1393 * t932;
t1242 = t1263 - t1668;
t1139 = t1242 * t1397 + t1642;
t1141 = t1242 * t1402 - t1643;
t1059 = t1139 * t1403 + t1141 * t1398;
t1061 = -t1139 * t1398 + t1141 * t1403;
t1513 = t1061 * t1399 + t1114 * t1404;
t933 = -t1059 * t1391 + t1394 * t1513;
t986 = t1061 * t1404 - t1114 * t1399;
t1537 = t1390 * t986 + t1393 * t933;
t1366 = (-t1389 - t1616) * t1670;
t1330 = t1366 * t1393 - t1622;
t1533 = qJ(2) * t1330 + t1623;
t1364 = (-t1389 - t1618) * t1670;
t1332 = -t1364 * t1390 - t1619;
t1532 = qJ(2) * t1332 - t1624;
t1169 = (-t1265 * t1397 - t1267 * t1402) * t1333;
t1170 = (-t1265 * t1402 + t1267 * t1397) * t1333;
t1100 = -t1169 * t1398 + t1170 * t1403;
t1093 = t1100 * t1404 + t1299 * t1399;
t1099 = t1169 * t1403 + t1170 * t1398;
t1508 = t1100 * t1399 - t1299 * t1404;
t997 = -t1099 * t1391 + t1394 * t1508;
t1524 = t1093 * t1390 + t1393 * t997;
t1133 = -t1208 * t1398 + t1212 * t1403;
t1135 = -t1208 * t1403 - t1212 * t1398;
t1230 = t1318 + t1669;
t1504 = t1135 * t1399 + t1230 * t1404;
t1030 = -t1133 * t1391 + t1394 * t1504;
t1098 = t1135 * t1404 - t1230 * t1399;
t1518 = t1030 * t1393 + t1098 * t1390;
t1209 = (-qJD(4) - t1335) * t1320 - t1564;
t1132 = t1209 * t1398 + t1211 * t1403;
t1134 = t1209 * t1403 - t1211 * t1398;
t1274 = -t1318 + t1669;
t1505 = t1134 * t1399 + t1274 * t1404;
t1032 = -t1132 * t1391 + t1394 * t1505;
t1105 = t1134 * t1404 - t1274 * t1399;
t1517 = t1032 * t1393 + t1105 * t1390;
t1502 = -t1158 * t1404 + t1159 * t1399;
t1057 = t1216 * t1391 + t1394 * t1502;
t1092 = t1158 * t1399 + t1159 * t1404;
t1515 = t1057 * t1393 + t1092 * t1390;
t1250 = -t1334 - t1669;
t1162 = t1250 * t1398 + t1685;
t1163 = t1250 * t1403 - t1688;
t1500 = t1163 * t1399 + t1209 * t1404;
t1071 = -t1162 * t1391 + t1394 * t1500;
t1119 = t1163 * t1404 - t1209 * t1399;
t1512 = t1071 * t1393 + t1119 * t1390;
t1256 = -t1318 - t1334;
t1173 = t1256 * t1403 - t1639;
t1174 = -t1256 * t1398 - t1638;
t1498 = t1174 * t1399 - t1211 * t1404;
t1074 = -t1173 * t1391 + t1394 * t1498;
t1123 = t1174 * t1404 + t1211 * t1399;
t1511 = t1074 * t1393 + t1123 * t1390;
t1288 = -t1318 + t1334;
t1188 = t1288 * t1403 + t1688;
t1190 = -t1288 * t1398 + t1685;
t1495 = t1190 * t1399 + t1212 * t1404;
t1080 = -t1188 * t1391 + t1394 * t1495;
t1126 = t1190 * t1404 - t1212 * t1399;
t1510 = t1080 * t1393 + t1126 * t1390;
t1287 = -t1334 + t1669;
t1189 = t1287 * t1398 + t1638;
t1191 = t1287 * t1403 - t1639;
t1494 = t1191 * t1399 + t1208 * t1404;
t1081 = -t1189 * t1391 + t1394 * t1494;
t1127 = t1191 * t1404 - t1208 * t1399;
t1509 = t1081 * t1393 + t1127 * t1390;
t1200 = t1248 * t1403 - t1319 * t1631;
t1201 = -t1248 * t1398 - t1319 * t1630;
t1471 = t1201 * t1399 - t1582;
t1103 = -t1200 * t1391 + t1394 * t1471;
t1155 = t1201 * t1404 + t1583;
t1507 = t1103 * t1393 + t1155 * t1390;
t1202 = t1249 * t1398 + t1320 * t1630;
t1203 = t1249 * t1403 - t1320 * t1631;
t1470 = t1203 * t1399 + t1582;
t1104 = -t1202 * t1391 + t1394 * t1470;
t1156 = t1203 * t1404 - t1583;
t1506 = t1104 * t1393 + t1156 * t1390;
t1224 = (t1319 * t1398 - t1320 * t1403) * t1335;
t1225 = (t1319 * t1403 + t1320 * t1398) * t1335;
t1420 = t1399 * t1225 - t1404 * t1425;
t1144 = -t1391 * t1224 + t1394 * t1420;
t1198 = t1404 * t1225 + t1399 * t1425;
t1503 = t1144 * t1393 + t1198 * t1390;
t1285 = -t1338 - t1339;
t1273 = -t1323 + t1305;
t1424 = (-qJD(3) - t1353) * t1342 - t1467;
t1487 = -t1273 * t1404 + t1399 * t1424;
t1161 = -t1285 * t1391 + t1394 * t1487;
t1215 = t1273 * t1399 + t1404 * t1424;
t1501 = t1161 * t1393 + t1215 * t1390;
t1306 = t1339 - t1338;
t1268 = t1342 * t1599 + t1467;
t1488 = -t1268 * t1399 + t1272 * t1404;
t1172 = -t1306 * t1391 + t1394 * t1488;
t1214 = -t1268 * t1404 - t1272 * t1399;
t1499 = t1172 * t1393 + t1214 * t1390;
t1486 = t1290 * t1399 + t1679;
t1179 = -t1268 * t1391 + t1394 * t1486;
t1497 = t1179 * t1393 + t1229 * t1390;
t1271 = -t1340 * t1599 + t1422;
t1485 = t1296 * t1404 + t1635;
t1181 = -t1271 * t1391 + t1394 * t1485;
t1496 = t1181 * t1393 + t1237 * t1390;
t1322 = -t1339 + t1667;
t1483 = t1322 * t1404 + t1680;
t1195 = -t1273 * t1391 + t1394 * t1483;
t1251 = -t1322 * t1399 + t1679;
t1493 = t1195 * t1393 + t1251 * t1390;
t1321 = t1338 - t1667;
t1484 = t1321 * t1399 - t1634;
t1196 = -t1391 * t1424 + t1394 * t1484;
t1252 = t1321 * t1404 + t1635;
t1492 = t1196 * t1393 + t1252 * t1390;
t1218 = t1304 * t1603 + (t1342 * t1391 - t1353 * t1604) * t1340;
t1258 = -t1304 * t1399 - t1353 * t1627;
t1491 = t1218 * t1393 + t1258 * t1390;
t1220 = t1305 * t1604 + (-t1340 * t1391 - t1353 * t1603) * t1342;
t1260 = t1305 * t1404 + t1353 * t1625;
t1490 = t1220 * t1393 + t1260 * t1390;
t1468 = t1353 * (t1340 * t1399 + t1342 * t1404);
t1254 = -t1391 * t1457 + t1394 * t1468;
t1278 = (-t1625 + t1627) * t1353;
t1489 = t1254 * t1393 + t1278 * t1390;
t1421 = (-pkin(1) * qJD(1) + t1392 * t1665) * qJD(1) + t1431;
t1426 = t1395 * t1428;
t1316 = (-t1426 + t1655) * t1393 + t1421 * t1390;
t1317 = t1390 * t1426 + t1393 * t1421 - t1382;
t1482 = -t1316 * t1393 + t1317 * t1390;
t1259 = t1316 * t1390 + t1317 * t1393;
t1372 = t1393 * t1576;
t1354 = t1372 + t1572;
t1371 = t1390 * t1576;
t1357 = -t1371 + t1570;
t1481 = t1354 * t1393 + t1357 * t1390;
t1355 = -t1372 + t1572;
t1356 = t1371 + t1570;
t1480 = -t1355 * t1393 + t1356 * t1390;
t1363 = (t1389 - t1618) * t1670;
t1479 = t1363 * t1393 + t1622;
t1478 = t1366 * t1390 + t1621;
t1477 = t1364 * t1393 - t1620;
t1365 = (-t1389 + t1616) * t1670;
t1476 = t1365 * t1390 + t1619;
t1344 = t1378 * t1405 - t1400 * t1379;
t706 = pkin(11) * t770 + (-pkin(12) * t1397 + t1589) * t797;
t716 = -pkin(11) * t769 + (-pkin(12) * t1402 + t1660) * t797;
t678 = -pkin(10) * t726 - t1398 * t706 + t1403 * t716;
t700 = -pkin(3) * t726 - pkin(4) * t769 + pkin(5) * t904 - pkin(12) * t798;
t1465 = pkin(9) * t715 + t1399 * t678 + t1404 * t700;
t782 = -pkin(12) * t971 - t797;
t745 = pkin(11) * t940 + t1397 * t782 + t1589 * t971;
t754 = -pkin(11) * t939 + t1402 * t782 + t1660 * t971;
t712 = -pkin(10) * t854 - t1398 * t745 + t1403 * t754;
t741 = -pkin(3) * t854 - pkin(4) * t939 - pkin(5) * t1136 - pkin(12) * t973 - t798;
t1464 = pkin(9) * t822 + t1399 * t712 + t1404 * t741;
t828 = -pkin(5) * t1014 + t843;
t870 = -pkin(12) * t1014 + t1653;
t763 = -pkin(4) * t1014 + pkin(11) * t952 + t1397 * t870 + t1402 * t828;
t774 = -pkin(11) * t951 - t1397 * t828 + t1402 * t870;
t720 = -pkin(10) * t873 - t1398 * t763 + t1403 * t774;
t784 = -pkin(3) * t873 - pkin(4) * t951 - pkin(5) * t1063 - pkin(12) * t1015 + t1651;
t1463 = pkin(9) * t837 + t1399 * t720 + t1404 * t784;
t830 = -pkin(5) * t1027 + t844;
t872 = -pkin(12) * t1027 + t1651;
t766 = -pkin(4) * t1027 + pkin(11) * t954 + t1397 * t872 + t1402 * t830;
t777 = -pkin(11) * t953 - t1397 * t830 + t1402 * t872;
t721 = -pkin(10) * t879 - t1398 * t766 + t1403 * t777;
t786 = -pkin(3) * t879 - pkin(4) * t953 - pkin(5) * t1067 - pkin(12) * t1028 - t1653;
t1462 = pkin(9) * t838 + t1399 * t721 + t1404 * t786;
t831 = -pkin(4) * t1075 + pkin(11) * t840;
t738 = -pkin(10) * t795 - pkin(11) * t1650 - t1398 * t831;
t756 = -pkin(3) * t795 - pkin(4) * t839;
t1461 = pkin(9) * t785 + t1399 * t738 + t1404 * t756;
t818 = -pkin(4) * t1157 + pkin(11) * t1026 + t840;
t825 = -pkin(11) * t1024 - t839;
t757 = -pkin(10) * t942 - t1398 * t818 + t1403 * t825;
t899 = -pkin(3) * t942 - pkin(4) * t1024;
t1460 = pkin(9) * t911 + t1399 * t757 + t1404 * t899;
t956 = -pkin(4) * t1113 + pkin(11) * t1107 - t1648;
t988 = -pkin(11) * t1106 + t1649;
t859 = -pkin(10) * t1016 - t1398 * t956 + t1403 * t988;
t865 = -pkin(3) * t1016 - pkin(4) * t1106 + t913;
t1459 = pkin(9) * t975 + t1399 * t859 + t1404 * t865;
t966 = pkin(4) * t1683 + pkin(11) * t1129 + t1649;
t995 = -pkin(11) * t1128 + t1648;
t871 = -pkin(10) * t1043 - t1398 * t966 + t1403 * t995;
t881 = -pkin(3) * t1043 - pkin(4) * t1128 + t914;
t1458 = pkin(9) * t982 + t1399 * t871 + t1404 * t881;
t677 = -pkin(3) * t797 + pkin(10) * t727 + t1398 * t716 + t1403 * t706;
t692 = t1391 * t1536 + t1394 * t726;
t660 = -pkin(2) * t692 - t1391 * t677 + t1394 * t1465;
t664 = -t1399 * t700 + t1404 * t678 + (-t1391 * t692 - t1394 * t693) * pkin(9);
t679 = -t1390 * t693 + t1393 * t715;
t1455 = qJ(2) * t679 + t1390 * t664 + t1393 * t660;
t709 = -pkin(3) * t971 + pkin(10) * t855 + t1398 * t754 + t1403 * t745;
t787 = t1391 * t1535 + t1394 * t854;
t676 = -pkin(2) * t787 - t1391 * t709 + t1394 * t1464;
t690 = -t1399 * t741 + t1404 * t712 + (-t1391 * t787 - t1394 * t788) * pkin(9);
t746 = -t1390 * t788 + t1393 * t822;
t1454 = qJ(2) * t746 + t1390 * t690 + t1393 * t676;
t733 = -pkin(3) * t1075 + pkin(10) * t796 - pkin(11) * t1652 + t1403 * t831;
t736 = t1391 * t1525 + t1394 * t795;
t682 = -pkin(2) * t736 - t1391 * t733 + t1394 * t1461;
t689 = -t1399 * t756 + t1404 * t738 + (-t1391 * t736 - t1394 * t737) * pkin(9);
t717 = -t1390 * t737 + t1393 * t785;
t1453 = qJ(2) * t717 + t1390 * t689 + t1393 * t682;
t718 = -pkin(3) * t1014 + pkin(10) * t874 + t1398 * t774 + t1403 * t763;
t799 = t1391 * t1531 + t1394 * t873;
t684 = -pkin(2) * t799 - t1391 * t718 + t1394 * t1463;
t694 = -t1399 * t784 + t1404 * t720 + (-t1391 * t799 - t1394 * t800) * pkin(9);
t760 = -t1390 * t800 + t1393 * t837;
t1452 = qJ(2) * t760 + t1390 * t694 + t1393 * t684;
t719 = -pkin(3) * t1027 + pkin(10) * t880 + t1398 * t777 + t1403 * t766;
t801 = t1391 * t1530 + t1394 * t879;
t688 = -pkin(2) * t801 - t1391 * t719 + t1394 * t1462;
t695 = -t1399 * t786 + t1404 * t721 + (-t1391 * t801 - t1394 * t802) * pkin(9);
t762 = -t1390 * t802 + t1393 * t838;
t1451 = qJ(2) * t762 + t1390 * t695 + t1393 * t688;
t755 = -pkin(3) * t1157 + pkin(10) * t944 + t1398 * t825 + t1403 * t818;
t845 = t1391 * t1521 + t1394 * t942;
t708 = -pkin(2) * t845 - t1391 * t755 + t1394 * t1460;
t724 = -t1399 * t899 + t1404 * t757 + (-t1391 * t845 - t1394 * t846) * pkin(9);
t811 = -t1390 * t846 + t1393 * t911;
t1450 = qJ(2) * t811 + t1390 * t724 + t1393 * t708;
t841 = -pkin(3) * t1113 + pkin(10) * t1017 + t1398 * t988 + t1403 * t956;
t908 = t1016 * t1394 + t1391 * t1519;
t743 = -pkin(2) * t908 - t1391 * t841 + t1394 * t1459;
t761 = -t1399 * t865 + t1404 * t859 + (-t1391 * t908 - t1394 * t909) * pkin(9);
t856 = -t1390 * t909 + t1393 * t975;
t1449 = qJ(2) * t856 + t1390 * t761 + t1393 * t743;
t851 = pkin(3) * t1683 + pkin(10) * t1044 + t1398 * t995 + t1403 * t966;
t917 = t1043 * t1394 + t1391 * t1516;
t750 = -pkin(2) * t917 - t1391 * t851 + t1394 * t1458;
t767 = -t1399 * t881 + t1404 * t871 + (-t1391 * t917 - t1394 * t918) * pkin(9);
t878 = -t1390 * t918 + t1393 * t982;
t1448 = qJ(2) * t878 + t1390 * t767 + t1393 * t750;
t1429 = pkin(9) * t936 + (-pkin(10) * t1399 - t1661) * t967;
t868 = t1391 * t1522 + t1394 * t967;
t937 = -pkin(3) * t1131 + pkin(10) * t968;
t773 = -pkin(2) * t868 - t1391 * t937 + t1394 * t1429;
t778 = (-pkin(10) * t1404 + t1662) * t967 + (-t1391 * t868 - t1394 * t869) * pkin(9);
t821 = -t1390 * t869 + t1393 * t936;
t1447 = qJ(2) * t821 + t1390 * t778 + t1393 * t773;
t1029 = t1133 * t1394 + t1391 * t1504;
t938 = -pkin(10) * t1133 - t967;
t1432 = pkin(9) * t1098 - t1133 * t1661 + t1399 * t938;
t925 = pkin(3) * t1230 + pkin(10) * t1135 + t968;
t816 = -pkin(2) * t1029 - t1391 * t925 + t1394 * t1432;
t842 = t1133 * t1662 + t1404 * t938 + (-t1029 * t1391 - t1030 * t1394) * pkin(9);
t974 = -t1030 * t1390 + t1098 * t1393;
t1446 = qJ(2) * t974 + t1390 * t842 + t1393 * t816;
t1033 = pkin(3) * t1209 + pkin(10) * t1163 - t1644;
t1070 = t1162 * t1394 + t1391 * t1500;
t1003 = t1398 * t1411 - t1403 * t1412 + (-t1398 * t1667 - t1403 * t1565 - t1162) * pkin(3) + t1409;
t1076 = -pkin(10) * t1162 + t1645;
t1441 = pkin(9) * t1119 + t1003 * t1404 + t1076 * t1399;
t858 = -pkin(2) * t1070 - t1033 * t1391 + t1394 * t1441;
t887 = -t1003 * t1399 + t1076 * t1404 + (-t1070 * t1391 - t1071 * t1394) * pkin(9);
t987 = -t1071 * t1390 + t1119 * t1393;
t1445 = qJ(2) * t987 + t1390 * t887 + t1393 * t858;
t1036 = -pkin(3) * t1211 + pkin(10) * t1174 + t1645;
t1073 = t1173 * t1394 + t1391 * t1498;
t1009 = -pkin(3) * t1173 + t1051;
t1082 = -pkin(10) * t1173 + t1644;
t1440 = pkin(9) * t1123 + t1009 * t1404 + t1082 * t1399;
t864 = -pkin(2) * t1073 - t1036 * t1391 + t1394 * t1440;
t894 = -t1009 * t1399 + t1082 * t1404 + (-t1073 * t1391 - t1074 * t1394) * pkin(9);
t989 = -t1074 * t1390 + t1123 * t1393;
t1444 = qJ(2) * t989 + t1390 * t894 + t1393 * t864;
t1056 = -t1216 * t1394 + t1391 * t1502;
t969 = (-t1056 * t1391 - t1057 * t1394) * pkin(9);
t977 = -t1057 * t1390 + t1092 * t1393;
t978 = -pkin(2) * t1056 + t1092 * t1658;
t1443 = qJ(2) * t977 + t1390 * t969 + t1393 * t978;
t1439 = pkin(9) * t1215 + t1092;
t1160 = t1285 * t1394 + t1391 * t1487;
t1001 = -pkin(2) * t1160 + t1394 * t1439;
t1108 = -t1161 * t1390 + t1215 * t1393;
t992 = (-t1160 * t1391 - t1161 * t1394) * pkin(9) - t1502;
t1437 = qJ(2) * t1108 + t1001 * t1393 + t1390 * t992;
t1178 = t1268 * t1394 + t1391 * t1486;
t1035 = -pkin(2) * t1178 + t1158 * t1391 + t1394 * t1558;
t1077 = -t1641 + (-t1178 * t1391 - t1179 * t1394) * pkin(9);
t1137 = -t1179 * t1390 + t1229 * t1393;
t1436 = qJ(2) * t1137 + t1035 * t1393 + t1077 * t1390;
t1180 = t1271 * t1394 + t1391 * t1485;
t1042 = -pkin(2) * t1180 + t1159 * t1391 + t1394 * t1557;
t1083 = -t1640 + (-t1180 * t1391 - t1181 * t1394) * pkin(9);
t1145 = -t1181 * t1390 + t1237 * t1393;
t1435 = qJ(2) * t1145 + t1042 * t1393 + t1083 * t1390;
t1324 = t1355 * t1390 + t1356 * t1393;
t1434 = qJ(2) * t1324 + t1259;
t1375 = t1400 * qJDD(1) + t1405 * t1670;
t1362 = -pkin(8) * t1375 + g(3) * t1405;
t1361 = t1595 * t1617;
t1360 = (t1385 - t1388) * t1617;
t1351 = t1595 * t1576;
t1350 = (-t1385 * t1602 + t1571) * t1392;
t1349 = (-t1388 * t1602 - t1571) * t1392;
t1337 = t1385 * t1569 + t1677;
t1336 = t1388 * t1569 - t1677;
t1331 = -t1363 * t1390 + t1621;
t1329 = t1365 * t1393 - t1620;
t1325 = -t1354 * t1390 + t1357 * t1393;
t1312 = -t1354 * t1392 + t1395 * t1477;
t1311 = -t1355 * t1392 + t1395 * t1479;
t1310 = t1357 * t1392 + t1395 * t1478;
t1309 = -t1356 * t1392 + t1395 * t1476;
t1308 = t1354 * t1395 + t1392 * t1477;
t1307 = -t1357 * t1395 + t1392 * t1478;
t1303 = -t1360 * t1392 + t1395 * t1481;
t1302 = t1361 * t1392 + t1395 * t1480;
t1301 = -t1361 * t1395 + t1392 * t1480;
t1282 = -t1400 * t1312 + t1332 * t1405;
t1281 = -t1400 * t1310 + t1330 * t1405;
t1280 = t1312 * t1405 + t1400 * t1332;
t1279 = t1310 * t1405 + t1400 * t1330;
t1276 = -t1400 * t1302 + t1324 * t1405;
t1275 = t1302 * t1405 + t1400 * t1324;
t1253 = t1391 * t1468 + t1394 * t1457;
t1241 = t1343 * t1392 + t1395 * t1482;
t1240 = -t1343 * t1395 + t1392 * t1482;
t1239 = -t1623 + (-t1308 * t1392 - t1312 * t1395) * qJ(2);
t1238 = -t1624 + (-t1307 * t1392 - t1310 * t1395) * qJ(2);
t1222 = -pkin(1) * t1307 + t1316 * t1392 + t1395 * t1533;
t1221 = -pkin(1) * t1308 + t1317 * t1392 + t1395 * t1532;
t1219 = t1305 * t1611 + (t1340 * t1394 - t1353 * t1609) * t1342;
t1217 = t1304 * t1609 + (-t1342 * t1394 - t1353 * t1611) * t1340;
t1206 = -pkin(1) * t1301 + t1395 * t1434;
t1199 = -t1254 * t1390 + t1278 * t1393;
t1197 = (-t1301 * t1392 - t1302 * t1395) * qJ(2) - t1482;
t1194 = t1391 * t1484 + t1394 * t1424;
t1193 = t1273 * t1394 + t1391 * t1483;
t1184 = qJ(2) * t1259 * t1395 - pkin(1) * t1240;
t1183 = -t1400 * t1241 + t1259 * t1405;
t1182 = t1241 * t1405 + t1400 * t1259;
t1171 = t1306 * t1394 + t1391 * t1488;
t1167 = (-t1240 * t1392 - t1241 * t1395) * qJ(2);
t1165 = -t1220 * t1390 + t1260 * t1393;
t1164 = -t1218 * t1390 + t1258 * t1393;
t1154 = -t1253 * t1392 + t1395 * t1489;
t1152 = -t1196 * t1390 + t1252 * t1393;
t1151 = -t1195 * t1390 + t1251 * t1393;
t1143 = t1394 * t1224 + t1391 * t1420;
t1125 = -t1219 * t1392 + t1395 * t1490;
t1124 = -t1217 * t1392 + t1395 * t1491;
t1122 = -t1172 * t1390 + t1214 * t1393;
t1102 = t1202 * t1394 + t1391 * t1470;
t1101 = t1200 * t1394 + t1391 * t1471;
t1095 = -t1194 * t1392 + t1395 * t1492;
t1094 = -t1193 * t1392 + t1395 * t1493;
t1091 = -t1144 * t1390 + t1198 * t1393;
t1090 = -t1180 * t1392 + t1395 * t1496;
t1089 = t1180 * t1395 + t1392 * t1496;
t1085 = -t1178 * t1392 + t1395 * t1497;
t1084 = t1178 * t1395 + t1392 * t1497;
t1079 = t1189 * t1394 + t1391 * t1494;
t1078 = t1188 * t1394 + t1391 * t1495;
t1072 = -t1171 * t1392 + t1395 * t1499;
t1069 = -t1160 * t1392 + t1395 * t1501;
t1068 = t1160 * t1395 + t1392 * t1501;
t1048 = -t1104 * t1390 + t1156 * t1393;
t1047 = -t1103 * t1390 + t1155 * t1393;
t1041 = pkin(2) * t1181 - t1159 * t1394 + t1391 * t1557;
t1034 = pkin(2) * t1179 - t1158 * t1394 + t1391 * t1558;
t1031 = t1132 * t1394 + t1391 * t1505;
t1022 = -t1143 * t1392 + t1395 * t1503;
t1013 = -t1400 * t1090 + t1145 * t1405;
t1012 = t1090 * t1405 + t1400 * t1145;
t1011 = -t1400 * t1085 + t1137 * t1405;
t1010 = t1085 * t1405 + t1400 * t1137;
t1000 = pkin(2) * t1161 + t1391 * t1439;
t999 = -t1081 * t1390 + t1127 * t1393;
t998 = -t1080 * t1390 + t1126 * t1393;
t996 = t1099 * t1394 + t1391 * t1508;
t984 = -t1400 * t1069 + t1108 * t1405;
t983 = t1069 * t1405 + t1400 * t1108;
t981 = -t1102 * t1392 + t1395 * t1506;
t980 = -t1101 * t1392 + t1395 * t1507;
t979 = pkin(2) * t1057 + t1092 * t1659;
t976 = -t1032 * t1390 + t1105 * t1393;
t955 = t1093 * t1393 - t1390 * t997;
t950 = -t1079 * t1392 + t1395 * t1509;
t949 = -t1078 * t1392 + t1395 * t1510;
t946 = -t1073 * t1392 + t1395 * t1511;
t945 = t1073 * t1395 + t1392 * t1511;
t935 = -t1070 * t1392 + t1395 * t1512;
t934 = t1070 * t1395 + t1392 * t1512;
t931 = t1059 * t1394 + t1391 * t1513;
t930 = t1058 * t1394 + t1391 * t1514;
t920 = t1019 * t1394 + t1391 * t1472;
t919 = t1018 * t1394 + t1391 * t1473;
t916 = -t1056 * t1392 + t1395 * t1515;
t915 = t1056 * t1395 + t1392 * t1515;
t910 = -t1031 * t1392 + t1395 * t1517;
t907 = -t1029 * t1392 + t1395 * t1518;
t906 = t1029 * t1395 + t1392 * t1518;
t902 = -t1042 * t1390 + t1083 * t1393 + (-t1089 * t1392 - t1090 * t1395) * qJ(2);
t901 = -t1392 * t996 + t1395 * t1524;
t900 = -t1035 * t1390 + t1077 * t1393 + (-t1084 * t1392 - t1085 * t1395) * qJ(2);
t896 = -t1400 * t946 + t1405 * t989;
t895 = t1400 * t989 + t1405 * t946;
t893 = -t1400 * t935 + t1405 * t987;
t892 = t1400 * t987 + t1405 * t935;
t886 = -t1390 * t933 + t1393 * t986;
t885 = -t1390 * t932 + t1393 * t985;
t884 = -t1390 * t922 + t1393 * t991;
t883 = -t1390 * t921 + t1393 * t990;
t882 = -pkin(1) * t1089 - t1041 * t1392 + t1395 * t1435;
t877 = -pkin(1) * t1084 - t1034 * t1392 + t1395 * t1436;
t876 = -t1400 * t916 + t1405 * t977;
t875 = t1400 * t977 + t1405 * t916;
t863 = pkin(2) * t1074 + t1036 * t1394 + t1391 * t1440;
t861 = t1391 * t1523 + t1394 * t960;
t860 = -t1001 * t1390 + t1393 * t992 + (-t1068 * t1392 - t1069 * t1395) * qJ(2);
t857 = pkin(2) * t1071 + t1033 * t1394 + t1391 * t1441;
t853 = -t1400 * t907 + t1405 * t974;
t852 = t1400 * t974 + t1405 * t907;
t849 = t1391 * t1520 + t1394 * t941;
t836 = -pkin(1) * t1068 - t1000 * t1392 + t1395 * t1437;
t833 = t1391 * t1526 + t1394 * t927;
t832 = t1391 * t1527 + t1394 * t926;
t827 = -t1392 * t931 + t1395 * t1537;
t826 = -t1392 * t930 + t1395 * t1538;
t824 = -t1392 * t920 + t1395 * t1539;
t823 = -t1392 * t919 + t1395 * t1540;
t820 = -t1392 * t917 + t1395 * t1541;
t819 = t1392 * t1541 + t1395 * t917;
t817 = -t1390 * t862 + t1393 * t924;
t815 = pkin(2) * t1030 + t1391 * t1432 + t1394 * t925;
t814 = -t1390 * t850 + t1393 * t923;
t813 = -t1392 * t908 + t1395 * t1542;
t812 = t1392 * t1542 + t1395 * t908;
t810 = -t1390 * t978 + t1393 * t969 + (-t1392 * t915 - t1395 * t916) * qJ(2);
t807 = t1391 * t1528 + t1394 * t889;
t806 = t1391 * t1529 + t1394 * t888;
t805 = -pkin(1) * t915 - t1392 * t979 + t1395 * t1443;
t804 = -t1390 * t835 + t1393 * t898;
t803 = -t1390 * t834 + t1393 * t897;
t793 = t1391 * t1534 + t1394 * t866;
t792 = -t1400 * t820 + t1405 * t878;
t791 = t1400 * t878 + t1405 * t820;
t790 = -t1392 * t868 + t1395 * t1543;
t789 = t1392 * t1543 + t1395 * t868;
t783 = -t1392 * t861 + t1395 * t1544;
t781 = -t1400 * t813 + t1405 * t856;
t780 = t1400 * t856 + t1405 * t813;
t779 = -t1392 * t849 + t1395 * t1545;
t776 = -t1392 * t845 + t1395 * t1546;
t775 = t1392 * t1546 + t1395 * t845;
t772 = pkin(2) * t869 + t1391 * t1429 + t1394 * t937;
t771 = -t1390 * t864 + t1393 * t894 + (-t1392 * t945 - t1395 * t946) * qJ(2);
t768 = -t1390 * t858 + t1393 * t887 + (-t1392 * t934 - t1395 * t935) * qJ(2);
t765 = -t1390 * t809 + t1393 * t848;
t764 = -t1390 * t808 + t1393 * t847;
t759 = -t1392 * t833 + t1395 * t1547;
t758 = -t1392 * t832 + t1395 * t1548;
t753 = -pkin(1) * t945 - t1392 * t863 + t1395 * t1444;
t752 = -t1390 * t794 + t1393 * t829;
t751 = -pkin(1) * t934 - t1392 * t857 + t1395 * t1445;
t749 = pkin(2) * t918 + t1391 * t1458 + t1394 * t851;
t748 = -t1400 * t790 + t1405 * t821;
t747 = t1400 * t821 + t1405 * t790;
t744 = -t1390 * t816 + t1393 * t842 + (-t1392 * t906 - t1395 * t907) * qJ(2);
t742 = pkin(2) * t909 + t1391 * t1459 + t1394 * t841;
t740 = -t1400 * t776 + t1405 * t811;
t739 = t1400 * t811 + t1405 * t776;
t735 = -t1392 * t807 + t1395 * t1549;
t734 = -t1392 * t806 + t1395 * t1550;
t732 = -t1392 * t801 + t1395 * t1551;
t731 = t1392 * t1551 + t1395 * t801;
t730 = -pkin(1) * t906 - t1392 * t815 + t1395 * t1446;
t729 = -t1392 * t799 + t1395 * t1552;
t728 = t1392 * t1552 + t1395 * t799;
t725 = -t1392 * t793 + t1395 * t1553;
t723 = -t1392 * t787 + t1395 * t1554;
t722 = t1392 * t1554 + t1395 * t787;
t714 = -t1400 * t732 + t1405 * t762;
t713 = t1400 * t762 + t1405 * t732;
t711 = -t1400 * t729 + t1405 * t760;
t710 = t1400 * t760 + t1405 * t729;
t707 = pkin(2) * t846 + t1391 * t1460 + t1394 * t755;
t705 = -t1390 * t750 + t1393 * t767 + (-t1392 * t819 - t1395 * t820) * qJ(2);
t704 = -t1400 * t723 + t1405 * t746;
t703 = t1400 * t746 + t1405 * t723;
t702 = -t1390 * t773 + t1393 * t778 + (-t1392 * t789 - t1395 * t790) * qJ(2);
t701 = -t1390 * t743 + t1393 * t761 + (-t1392 * t812 - t1395 * t813) * qJ(2);
t699 = -t1392 * t736 + t1395 * t1555;
t698 = t1392 * t1555 + t1395 * t736;
t697 = -pkin(1) * t789 - t1392 * t772 + t1395 * t1447;
t696 = -pkin(1) * t819 - t1392 * t749 + t1395 * t1448;
t691 = -pkin(1) * t812 - t1392 * t742 + t1395 * t1449;
t687 = pkin(2) * t802 + t1391 * t1462 + t1394 * t719;
t686 = -t1400 * t699 + t1405 * t717;
t685 = t1400 * t717 + t1405 * t699;
t683 = pkin(2) * t800 + t1391 * t1463 + t1394 * t718;
t681 = pkin(2) * t737 + t1391 * t1461 + t1394 * t733;
t680 = -t1390 * t708 + t1393 * t724 + (-t1392 * t775 - t1395 * t776) * qJ(2);
t675 = pkin(2) * t788 + t1391 * t1464 + t1394 * t709;
t674 = -pkin(1) * t775 - t1392 * t707 + t1395 * t1450;
t673 = -t1392 * t692 + t1395 * t1556;
t672 = t1392 * t1556 + t1395 * t692;
t671 = -t1390 * t688 + t1393 * t695 + (-t1392 * t731 - t1395 * t732) * qJ(2);
t670 = -t1390 * t684 + t1393 * t694 + (-t1392 * t728 - t1395 * t729) * qJ(2);
t669 = -t1390 * t676 + t1393 * t690 + (-t1392 * t722 - t1395 * t723) * qJ(2);
t668 = -t1400 * t673 + t1405 * t679;
t667 = t1400 * t679 + t1405 * t673;
t666 = -pkin(1) * t731 - t1392 * t687 + t1395 * t1451;
t665 = -pkin(1) * t728 - t1392 * t683 + t1395 * t1452;
t663 = -t1390 * t682 + t1393 * t689 + (-t1392 * t698 - t1395 * t699) * qJ(2);
t662 = -pkin(1) * t698 - t1392 * t681 + t1395 * t1453;
t661 = -pkin(1) * t722 - t1392 * t675 + t1395 * t1454;
t659 = pkin(2) * t693 + t1391 * t1465 + t1394 * t677;
t658 = -t1390 * t660 + t1393 * t664 + (-t1392 * t672 - t1395 * t673) * qJ(2);
t657 = -pkin(1) * t672 - t1392 * t659 + t1395 * t1455;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1375, -t1376, 0, t1345, 0, 0, 0, 0, 0, 0, t1281, t1282, t1276, t1183, 0, 0, 0, 0, 0, 0, t1011, t1013, t984, t876, 0, 0, 0, 0, 0, 0, t893, t896, t853, t748, 0, 0, 0, 0, 0, 0, t781, t792, t740, t686, 0, 0, 0, 0, 0, 0, t711, t714, t704, t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1376, -t1375, 0, t1344, 0, 0, 0, 0, 0, 0, t1279, t1280, t1275, t1182, 0, 0, 0, 0, 0, 0, t1010, t1012, t983, t875, 0, 0, 0, 0, 0, 0, t892, t895, t852, t747, 0, 0, 0, 0, 0, 0, t780, t791, t739, t685, 0, 0, 0, 0, 0, 0, t710, t713, t703, t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1307, t1308, t1301, t1240, 0, 0, 0, 0, 0, 0, t1084, t1089, t1068, t915, 0, 0, 0, 0, 0, 0, t934, t945, t906, t789, 0, 0, 0, 0, 0, 0, t812, t819, t775, t698, 0, 0, 0, 0, 0, 0, t728, t731, t722, t672; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1376, 0, -t1375, 0, t1560, -t1362, -t1344, -pkin(8) * t1344, -t1400 * t1337 + t1350 * t1405, -t1400 * t1303 + t1325 * t1405, -t1400 * t1311 + t1331 * t1405, -t1400 * t1336 + t1349 * t1405, -t1400 * t1309 + t1329 * t1405, t1351 * t1405 + t1400 * t1569, -pkin(8) * t1279 - t1400 * t1222 + t1238 * t1405, -pkin(8) * t1280 - t1400 * t1221 + t1239 * t1405, -pkin(8) * t1275 + t1197 * t1405 - t1400 * t1206, -pkin(8) * t1182 + t1167 * t1405 - t1400 * t1184, -t1400 * t1125 + t1165 * t1405, -t1400 * t1072 + t1122 * t1405, -t1400 * t1094 + t1151 * t1405, -t1400 * t1124 + t1164 * t1405, -t1400 * t1095 + t1152 * t1405, -t1400 * t1154 + t1199 * t1405, -pkin(8) * t1010 - t1400 * t877 + t1405 * t900, -pkin(8) * t1012 - t1400 * t882 + t1405 * t902, -pkin(8) * t983 - t1400 * t836 + t1405 * t860, -pkin(8) * t875 - t1400 * t805 + t1405 * t810, t1048 * t1405 - t1400 * t981, -t1400 * t910 + t1405 * t976, -t1400 * t949 + t1405 * t998, t1047 * t1405 - t1400 * t980, -t1400 * t950 + t1405 * t999, -t1400 * t1022 + t1091 * t1405, -pkin(8) * t892 - t1400 * t751 + t1405 * t768, -pkin(8) * t895 - t1400 * t753 + t1405 * t771, -pkin(8) * t852 - t1400 * t730 + t1405 * t744, -pkin(8) * t747 - t1400 * t697 + t1405 * t702, -t1400 * t824 + t1405 * t884, -t1400 * t779 + t1405 * t814, -t1400 * t826 + t1405 * t885, -t1400 * t823 + t1405 * t883, -t1400 * t827 + t1405 * t886, -t1400 * t901 + t1405 * t955, -pkin(8) * t780 - t1400 * t691 + t1405 * t701, -pkin(8) * t791 - t1400 * t696 + t1405 * t705, -pkin(8) * t739 - t1400 * t674 + t1405 * t680, -pkin(8) * t685 - t1400 * t662 + t1405 * t663, -t1400 * t759 + t1405 * t804, -t1400 * t725 + t1405 * t752, -t1400 * t734 + t1405 * t764, -t1400 * t758 + t1405 * t803, -t1400 * t735 + t1405 * t765, -t1400 * t783 + t1405 * t817, -pkin(8) * t710 - t1400 * t665 + t1405 * t670, -pkin(8) * t713 - t1400 * t666 + t1405 * t671, -pkin(8) * t703 - t1400 * t661 + t1405 * t669, -pkin(8) * t667 - t1400 * t657 + t1405 * t658; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1375, 0, t1376, 0, t1362, t1560, t1345, pkin(8) * t1345, t1337 * t1405 + t1400 * t1350, t1303 * t1405 + t1400 * t1325, t1311 * t1405 + t1400 * t1331, t1336 * t1405 + t1400 * t1349, t1309 * t1405 + t1400 * t1329, t1400 * t1351 - t1405 * t1569, pkin(8) * t1281 + t1222 * t1405 + t1400 * t1238, pkin(8) * t1282 + t1221 * t1405 + t1400 * t1239, pkin(8) * t1276 + t1400 * t1197 + t1206 * t1405, pkin(8) * t1183 + t1400 * t1167 + t1184 * t1405, t1125 * t1405 + t1400 * t1165, t1072 * t1405 + t1400 * t1122, t1094 * t1405 + t1400 * t1151, t1124 * t1405 + t1400 * t1164, t1095 * t1405 + t1400 * t1152, t1154 * t1405 + t1400 * t1199, pkin(8) * t1011 + t1400 * t900 + t1405 * t877, pkin(8) * t1013 + t1400 * t902 + t1405 * t882, pkin(8) * t984 + t1400 * t860 + t1405 * t836, pkin(8) * t876 + t1400 * t810 + t1405 * t805, t1400 * t1048 + t1405 * t981, t1400 * t976 + t1405 * t910, t1400 * t998 + t1405 * t949, t1400 * t1047 + t1405 * t980, t1400 * t999 + t1405 * t950, t1022 * t1405 + t1400 * t1091, pkin(8) * t893 + t1400 * t768 + t1405 * t751, pkin(8) * t896 + t1400 * t771 + t1405 * t753, pkin(8) * t853 + t1400 * t744 + t1405 * t730, pkin(8) * t748 + t1400 * t702 + t1405 * t697, t1400 * t884 + t1405 * t824, t1400 * t814 + t1405 * t779, t1400 * t885 + t1405 * t826, t1400 * t883 + t1405 * t823, t1400 * t886 + t1405 * t827, t1400 * t955 + t1405 * t901, pkin(8) * t781 + t1400 * t701 + t1405 * t691, pkin(8) * t792 + t1400 * t705 + t1405 * t696, pkin(8) * t740 + t1400 * t680 + t1405 * t674, pkin(8) * t686 + t1400 * t663 + t1405 * t662, t1400 * t804 + t1405 * t759, t1400 * t752 + t1405 * t725, t1400 * t764 + t1405 * t734, t1400 * t803 + t1405 * t758, t1400 * t765 + t1405 * t735, t1400 * t817 + t1405 * t783, pkin(8) * t711 + t1400 * t670 + t1405 * t665, pkin(8) * t714 + t1400 * t671 + t1405 * t666, pkin(8) * t704 + t1400 * t669 + t1405 * t661, pkin(8) * t668 + t1400 * t658 + t1405 * t657; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1378, t1379, 0, 0, t1385 * t1594, t1360 * t1395 + t1392 * t1481, t1355 * t1395 + t1392 * t1479, t1388 * t1594, t1356 * t1395 + t1392 * t1476, t1389 * qJDD(1), pkin(1) * t1310 - t1316 * t1395 + t1392 * t1533, pkin(1) * t1312 - t1317 * t1395 + t1392 * t1532, pkin(1) * t1302 + t1392 * t1434, pkin(1) * t1241 + t1259 * t1654, t1219 * t1395 + t1392 * t1490, t1171 * t1395 + t1392 * t1499, t1193 * t1395 + t1392 * t1493, t1217 * t1395 + t1392 * t1491, t1194 * t1395 + t1392 * t1492, t1253 * t1395 + t1392 * t1489, pkin(1) * t1085 + t1034 * t1395 + t1392 * t1436, pkin(1) * t1090 + t1041 * t1395 + t1392 * t1435, pkin(1) * t1069 + t1000 * t1395 + t1392 * t1437, pkin(1) * t916 + t1392 * t1443 + t1395 * t979, t1102 * t1395 + t1392 * t1506, t1031 * t1395 + t1392 * t1517, t1078 * t1395 + t1392 * t1510, t1101 * t1395 + t1392 * t1507, t1079 * t1395 + t1392 * t1509, t1143 * t1395 + t1392 * t1503, pkin(1) * t935 + t1392 * t1445 + t1395 * t857, pkin(1) * t946 + t1392 * t1444 + t1395 * t863, pkin(1) * t907 + t1392 * t1446 + t1395 * t815, pkin(1) * t790 + t1392 * t1447 + t1395 * t772, t1392 * t1539 + t1395 * t920, t1392 * t1545 + t1395 * t849, t1392 * t1538 + t1395 * t930, t1392 * t1540 + t1395 * t919, t1392 * t1537 + t1395 * t931, t1392 * t1524 + t1395 * t996, pkin(1) * t813 + t1392 * t1449 + t1395 * t742, pkin(1) * t820 + t1392 * t1448 + t1395 * t749, pkin(1) * t776 + t1392 * t1450 + t1395 * t707, pkin(1) * t699 + t1392 * t1453 + t1395 * t681, t1392 * t1547 + t1395 * t833, t1392 * t1553 + t1395 * t793, t1392 * t1550 + t1395 * t806, t1392 * t1548 + t1395 * t832, t1392 * t1549 + t1395 * t807, t1392 * t1544 + t1395 * t861, pkin(1) * t729 + t1392 * t1452 + t1395 * t683, pkin(1) * t732 + t1392 * t1451 + t1395 * t687, pkin(1) * t723 + t1392 * t1454 + t1395 * t675, pkin(1) * t673 + t1392 * t1455 + t1395 * t659;];
tauB_reg  = t1;
