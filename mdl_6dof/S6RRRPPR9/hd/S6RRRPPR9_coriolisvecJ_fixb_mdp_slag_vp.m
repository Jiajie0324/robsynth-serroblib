% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPPR9_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPPR9_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:18:14
% EndTime: 2019-03-09 16:18:33
% DurationCPUTime: 11.91s
% Computational Cost: add. (8969->665), mult. (24042->879), div. (0->0), fcn. (18463->10), ass. (0->254)
t641 = sin(qJ(3));
t644 = cos(qJ(3));
t769 = cos(pkin(6));
t700 = t769 * qJD(1);
t672 = t700 + qJD(2);
t642 = sin(qJ(2));
t638 = sin(pkin(6));
t730 = qJD(1) * t638;
t710 = t642 * t730;
t571 = t641 * t672 + t644 * t710;
t645 = cos(qJ(2));
t729 = qJD(1) * t645;
t709 = t638 * t729;
t620 = -qJD(3) + t709;
t637 = sin(pkin(11));
t639 = cos(pkin(11));
t514 = t571 * t637 + t639 * t620;
t643 = cos(qJ(6));
t640 = sin(qJ(6));
t674 = t639 * t571 - t620 * t637;
t760 = t674 * t640;
t463 = -t643 * t514 + t760;
t786 = -t641 * t710 + t644 * t672;
t717 = qJD(6) + t786;
t791 = t463 * t717;
t465 = t514 * t640 + t643 * t674;
t790 = t465 * t717;
t789 = t514 * t786;
t753 = t637 * t644;
t549 = -t639 * t710 + t709 * t753;
t725 = qJD(3) * t644;
t788 = -t637 * t725 + t549;
t747 = t644 * t645;
t550 = (t637 * t642 + t639 * t747) * t730;
t787 = -t639 * t725 + t550;
t785 = t674 ^ 2;
t634 = t638 ^ 2;
t716 = qJD(1) * qJD(2);
t784 = -0.2e1 * t634 * t716;
t783 = MDP(5) * (t642 ^ 2 - t645 ^ 2);
t689 = pkin(1) * t700;
t594 = pkin(8) * t709 + t642 * t689;
t545 = pkin(9) * t672 + t594;
t587 = (-pkin(2) * t645 - pkin(9) * t642 - pkin(1)) * t638;
t558 = qJD(1) * t587;
t667 = (pkin(2) * t642 - pkin(9) * t645) * t638;
t593 = qJD(2) * t667;
t580 = qJD(1) * t593;
t711 = pkin(1) * t769;
t752 = t638 * t642;
t779 = -pkin(8) * t752 + t645 * t711;
t595 = t779 * qJD(2);
t581 = qJD(1) * t595;
t726 = qJD(3) * t641;
t660 = t545 * t726 - t558 * t725 - t641 * t580 - t644 * t581;
t702 = t638 * t716;
t688 = t642 * t702;
t441 = qJ(4) * t688 - qJD(4) * t620 - t660;
t687 = t645 * t702;
t521 = qJD(3) * t786 + t644 * t687;
t522 = qJD(3) * t571 + t641 * t687;
t751 = t638 * t645;
t656 = pkin(8) * t751 + t642 * t711;
t596 = t656 * qJD(2);
t582 = qJD(1) * t596;
t444 = t522 * pkin(3) - t521 * qJ(4) - t571 * qJD(4) + t582;
t409 = -t637 * t441 + t444 * t639;
t405 = -pkin(4) * t522 - t409;
t591 = -pkin(8) * t710 + t645 * t689;
t544 = -pkin(2) * t672 - t591;
t467 = -pkin(3) * t786 - t571 * qJ(4) + t544;
t478 = t644 * t545 + t641 * t558;
t471 = -qJ(4) * t620 + t478;
t430 = t637 * t467 + t639 * t471;
t423 = -qJ(5) * t786 + t430;
t781 = t423 * t786 + t405;
t477 = -t641 * t545 + t644 * t558;
t502 = pkin(3) * t571 - qJ(4) * t786;
t450 = t639 * t477 + t637 * t502;
t434 = t571 * qJ(5) + t450;
t724 = qJD(4) * t639;
t780 = -t434 + t724;
t592 = qJD(1) * t667;
t735 = -t641 * t591 + t644 * t592;
t661 = pkin(3) * t710 + t735;
t749 = t639 * t641;
t778 = -qJ(5) * t550 + qJD(5) * t749 - t661;
t754 = t637 * t643;
t607 = -t639 * t640 + t754;
t734 = t644 * t591 + t641 * t592;
t496 = qJ(4) * t710 + t734;
t681 = pkin(3) * t641 - qJ(4) * t644;
t512 = t681 * t709 + t594;
t598 = qJD(3) * t681 - qJD(4) * t641;
t777 = t637 * t496 + (-t512 + t598) * t639;
t460 = t639 * t496 + t637 * t512;
t690 = t641 * t709;
t776 = qJD(5) * t644 + t460 + (t690 - t726) * qJ(5);
t766 = qJ(5) * t639;
t773 = pkin(4) + pkin(5);
t775 = t637 * t773 - t766;
t494 = t521 * t637 - t639 * t688;
t495 = t521 * t639 + t637 * t688;
t698 = -t643 * t494 + t640 * t495;
t418 = t465 * qJD(6) + t698;
t774 = t786 ^ 2;
t646 = qJD(1) ^ 2;
t772 = pkin(10) * t786;
t771 = pkin(10) * t641;
t770 = -pkin(10) + qJ(4);
t768 = qJ(4) * t522;
t767 = qJ(4) * t639;
t694 = t545 * t725 + t558 * t726 - t644 * t580 + t641 * t581;
t651 = pkin(3) * t688 - t694;
t648 = qJ(5) * t495 + qJD(5) * t674 + t651;
t407 = pkin(4) * t494 - t648;
t765 = t407 * t637;
t764 = t407 * t639;
t762 = t651 * t637;
t761 = t651 * t639;
t759 = t786 * t620;
t758 = t571 * t620;
t664 = t620 * t641;
t756 = t620 * t644;
t755 = t634 * t646;
t748 = t639 * t644;
t410 = t639 * t441 + t637 * t444;
t583 = t637 * t598;
t715 = pkin(9) * t726;
t530 = -t639 * t715 + t583;
t746 = -t530 + t776;
t585 = pkin(9) * t769 + t656;
t659 = -t585 * t726 + t587 * t725 + t641 * t593 + t644 * t595;
t728 = qJD(2) * t642;
t456 = (qJ(4) * t728 - qJD(4) * t645) * t638 + t659;
t602 = t641 * t769 + t644 * t752;
t707 = qJD(2) * t751;
t535 = qJD(3) * t602 + t641 * t707;
t601 = t641 * t752 - t644 * t769;
t536 = -qJD(3) * t601 + t644 * t707;
t462 = t535 * pkin(3) - t536 * qJ(4) - t602 * qJD(4) + t596;
t416 = t639 * t456 + t637 * t462;
t712 = -pkin(9) * t637 - pkin(4);
t745 = -pkin(4) * t690 - t712 * t726 + t777;
t680 = -pkin(4) * t637 + t766;
t669 = pkin(9) - t680;
t744 = pkin(4) * t549 - t669 * t725 + t778;
t743 = -t637 * t715 - t777;
t742 = t460 - t530;
t584 = -pkin(2) * t769 - t779;
t491 = t601 * pkin(3) - t602 * qJ(4) + t584;
t736 = t644 * t585 + t641 * t587;
t492 = -qJ(4) * t751 + t736;
t447 = t637 * t491 + t639 * t492;
t741 = -t494 * t767 - t514 * t724;
t606 = t637 * t640 + t639 * t643;
t740 = qJD(6) * t607 * t641 - t549 * t640 - t550 * t643 + t606 * t725;
t589 = t606 * t641;
t739 = qJD(6) * t589 - t640 * t787 + t643 * t788;
t657 = -pkin(9) - t775;
t738 = t549 * t773 + t657 * t725 + t778;
t737 = -t641 * t585 + t644 * t587;
t733 = t717 * t606;
t720 = qJD(6) * t643;
t721 = qJD(6) * t640;
t732 = t607 * t786 + t637 * t720 - t639 * t721;
t616 = -pkin(3) * t644 - qJ(4) * t641 - pkin(2);
t568 = pkin(9) * t748 + t637 * t616;
t727 = qJD(2) * t644;
t723 = qJD(5) * t637;
t470 = pkin(3) * t620 + qJD(4) - t477;
t719 = -qJD(4) + t470;
t655 = qJ(5) * t674 - t470;
t428 = pkin(4) * t514 - t655;
t718 = qJD(4) - t428;
t714 = t522 * t767;
t437 = t601 * qJ(5) + t447;
t713 = t640 * t494 + t643 * t495 + t514 * t720;
t493 = pkin(3) * t751 - t737;
t708 = t638 * t728;
t701 = qJ(5) * t637 + pkin(3);
t399 = -pkin(10) * t495 - t522 * t773 - t409;
t403 = t522 * qJ(5) - qJD(5) * t786 + t410;
t400 = pkin(10) * t494 + t403;
t699 = t643 * t399 - t400 * t640;
t415 = -t637 * t456 + t462 * t639;
t429 = t467 * t639 - t637 * t471;
t474 = t637 * t477;
t449 = t502 * t639 - t474;
t446 = t491 * t639 - t637 * t492;
t627 = pkin(9) * t753;
t567 = t616 * t639 - t627;
t697 = t717 ^ 2;
t696 = t775 * t786 + t478 + t723;
t695 = t634 * t642 * t645 * MDP(4);
t408 = t535 * qJ(5) + t601 * qJD(5) + t416;
t693 = -t585 * t725 - t587 * t726 + t644 * t593 - t641 * t595;
t685 = pkin(1) * t784;
t546 = -qJ(5) * t644 + t568;
t684 = qJD(5) - t429;
t524 = t637 * t771 + t546;
t683 = -pkin(10) * t550 + qJD(6) * t524 - t690 * t773 - (-pkin(10) * t748 + (-pkin(5) + t712) * t641) * qJD(3) + t777;
t633 = t644 * pkin(4);
t520 = pkin(5) * t644 + t627 + t633 + (-t616 - t771) * t639;
t682 = -pkin(10) * t549 + qJD(6) * t520 + t583 + (-pkin(9) * t749 + pkin(10) * t753) * qJD(3) - t776;
t679 = t399 * t640 + t400 * t643;
t412 = -pkin(10) * t674 + t773 * t786 + t684;
t414 = pkin(10) * t514 + t423;
t396 = t412 * t643 - t414 * t640;
t397 = t412 * t640 + t414 * t643;
t534 = t602 * t639 - t637 * t751;
t421 = -pkin(10) * t534 - t601 * t773 - t446;
t533 = t602 * t637 + t639 * t751;
t424 = pkin(10) * t533 + t437;
t678 = t421 * t643 - t424 * t640;
t677 = t421 * t640 + t424 * t643;
t675 = t533 * t643 - t534 * t640;
t473 = t533 * t640 + t534 * t643;
t670 = qJ(4) * t495 + qJD(4) * t674;
t668 = qJ(5) * t534 - t493;
t619 = t770 * t639;
t663 = qJD(4) * t637 - qJD(6) * t619 - t474 - (-t502 - t772) * t639 + t773 * t571;
t618 = t770 * t637;
t662 = qJD(6) * t618 - t637 * t772 + t780;
t658 = t674 * t721 - t713;
t654 = pkin(3) * t708 + t693;
t652 = pkin(1) * (-qJD(2) * t700 + t755);
t506 = t536 * t639 + t637 * t708;
t649 = qJ(5) * t506 + qJD(5) * t534 + t654;
t612 = -pkin(4) * t639 - t701;
t603 = t639 * t773 + t701;
t588 = t640 * t749 - t641 * t754;
t586 = t669 * t641;
t547 = -t567 + t633;
t543 = t657 * t641;
t505 = t536 * t637 - t639 * t708;
t455 = -t680 * t786 + t478;
t448 = pkin(4) * t533 - t668;
t438 = -pkin(4) * t601 - t446;
t436 = -pkin(4) * t571 - t449;
t432 = -t533 * t773 + t668;
t426 = qJD(6) * t675 + t505 * t640 + t506 * t643;
t425 = qJD(6) * t473 - t505 * t643 + t506 * t640;
t422 = pkin(4) * t786 + t684;
t419 = -t514 * t773 + t655;
t413 = pkin(4) * t505 - t649;
t411 = -pkin(4) * t535 - t415;
t406 = -t505 * t773 + t649;
t404 = pkin(10) * t505 + t408;
t402 = -pkin(10) * t506 - t535 * t773 - t415;
t401 = -t494 * t773 + t648;
t395 = -qJD(6) * t397 + t699;
t394 = qJD(6) * t396 + t679;
t1 = [(-t581 * t769 - t595 * t672 + t645 * t685) * MDP(10) + (-t582 * t769 - t596 * t672 + t642 * t685) * MDP(9) + (t426 * t465 - t473 * t658) * MDP(26) + (t409 * t446 + t410 * t447 + t415 * t429 + t416 * t430 - t470 * t654 - t493 * t651) * MDP(21) + (-t418 * t473 - t425 * t465 - t426 * t463 - t658 * t675) * MDP(27) + (t659 * t620 + t596 * t571 + t584 * t521 + t582 * t602 + t544 * t536 + (-t660 * t645 + (-qJD(1) * t736 - t478) * t728) * t638) * MDP(17) + (-t536 * t620 + (-t521 * t645 + (qJD(1) * t602 + t571) * t728) * t638) * MDP(13) + 0.2e1 * t695 * t716 + (-(qJD(6) * t678 + t402 * t640 + t404 * t643) * t717 + t677 * t522 + t394 * t601 + t397 * t535 + t406 * t465 - t432 * t658 + t401 * t473 + t419 * t426) * MDP(32) + (t426 * t717 - t465 * t535 - t473 * t522 + t601 * t658) * MDP(28) + ((-qJD(6) * t677 + t402 * t643 - t404 * t640) * t717 - t678 * t522 - t395 * t601 - t396 * t535 + t406 * t463 + t432 * t418 - t401 * t675 + t419 * t425) * MDP(31) + (t418 * t601 - t425 * t717 + t463 * t535 - t522 * t675) * MDP(29) + (t522 * t601 - t535 * t717) * MDP(30) + (-t403 * t533 + t405 * t534 - t408 * t514 + t411 * t674 + t422 * t506 - t423 * t505 - t437 * t494 + t438 * t495) * MDP(23) + (-t409 * t534 - t410 * t533 - t415 * t674 - t416 * t514 - t429 * t506 - t430 * t505 - t446 * t495 - t447 * t494) * MDP(20) + (MDP(6) * t707 - MDP(7) * t708) * (0.2e1 * t700 + qJD(2)) + (-t410 * t601 + t416 * t786 - t430 * t535 - t447 * t522 + t470 * t506 + t493 * t495 - t534 * t651 - t654 * t674) * MDP(19) + (t409 * t601 - t415 * t786 + t429 * t535 + t446 * t522 + t470 * t505 + t493 * t494 - t514 * t654 - t533 * t651) * MDP(18) + (-t693 * t620 - t596 * t786 + t584 * t522 + t582 * t601 + t544 * t535 + (t694 * t645 + (qJD(1) * t737 + t477) * t728) * t638) * MDP(16) + (t535 * t620 + (t522 * t645 + (-qJD(1) * t601 + t786) * t728) * t638) * MDP(14) + (t403 * t601 - t407 * t534 - t408 * t786 - t413 * t674 + t423 * t535 - t428 * t506 + t437 * t522 - t448 * t495) * MDP(24) + (-t405 * t601 + t407 * t533 + t411 * t786 + t413 * t514 - t422 * t535 + t428 * t505 - t438 * t522 + t448 * t494) * MDP(22) + (-t521 * t601 - t522 * t602 - t535 * t571 + t536 * t786) * MDP(12) + (t521 * t602 + t536 * t571) * MDP(11) + (-t620 * t638 - t634 * t729) * MDP(15) * t728 + (t403 * t437 + t405 * t438 + t407 * t448 + t408 * t423 + t411 * t422 + t413 * t428) * MDP(25) + t783 * t784; (t521 * t641 - t571 * t756) * MDP(11) + (-pkin(2) * t521 + t582 * t641 - t734 * t620 - t594 * t571 + (-pkin(9) * t664 + t544 * t644) * qJD(3) + (-t544 * t747 + (-pkin(9) * t727 + t478) * t642) * t730) * MDP(17) + (t465 * t740 - t589 * t658) * MDP(26) + (-t418 * t589 - t463 * t740 - t465 * t739 + t588 * t658) * MDP(27) + (t409 * t567 + t410 * t568 + t470 * t661 - t742 * t430 - t743 * t429 + (t470 * t725 - t641 * t651) * pkin(9)) * MDP(21) + (t465 * t664 - t522 * t589 - t644 * t658 + t717 * t740) * MDP(28) + (-(t520 * t643 - t524 * t640) * t522 + t395 * t644 + t543 * t418 + t401 * t588 - (t640 * t682 + t643 * t683) * t717 + t738 * t463 + t739 * t419 + t396 * t664) * MDP(31) + (t403 * t546 + t405 * t547 + t407 * t586 - t422 * t745 - t423 * t746 - t428 * t744) * MDP(25) + (-t620 * t725 + (t620 * t747 + (qJD(2) * t641 - t571) * t642) * t730) * MDP(13) + (-t695 + (-MDP(6) * t645 + MDP(7) * t642) * t638 * t769) * t646 + t620 * MDP(15) * t710 + ((t521 - t759) * t644 + (-t522 + t758) * t641) * MDP(12) + ((t520 * t640 + t524 * t643) * t522 - t394 * t644 - t543 * t658 + t401 * t589 - (-t640 * t683 + t643 * t682) * t717 + t738 * t465 + t740 * t419 - t397 * t664) * MDP(32) + (-t418 * t644 - t463 * t664 + t522 * t588 - t717 * t739) * MDP(29) + (-t522 * t644 + t664 * t717) * MDP(30) + (-t422 * t550 + t423 * t549 - t494 * t546 + t495 * t547 + (-t403 * t637 + t405 * t639) * t641 - t745 * t674 + t746 * t514 + (t422 * t639 - t423 * t637) * t725) * MDP(23) + (t429 * t550 + t430 * t549 - t494 * t568 - t495 * t567 + (-t409 * t639 - t410 * t637) * t641 + t743 * t674 + t742 * t514 + (-t429 * t639 - t430 * t637) * t725) * MDP(20) + (pkin(8) * t688 + t591 * t672 + t645 * t652) * MDP(10) + (-pkin(2) * t522 - t582 * t644 + t735 * t620 + t594 * t786 + (pkin(9) * t756 + t544 * t641) * qJD(3) + (-t477 * t642 + (-pkin(9) * t728 - t544 * t645) * t641) * t730) * MDP(16) + (t620 * t726 + (-t645 * t664 + (-t786 + t727) * t642) * t730) * MDP(14) + (-t470 * t550 + t661 * t674 - t522 * t568 - t742 * t786 + (t410 + (pkin(9) * t674 + t470 * t639) * qJD(3)) * t644 + (pkin(9) * t495 + t430 * t620 - t761) * t641) * MDP(19) + (-t470 * t549 + t661 * t514 + t522 * t567 + t743 * t786 + (-t409 + (pkin(9) * t514 + t470 * t637) * qJD(3)) * t644 + (pkin(9) * t494 - t429 * t620 - t762) * t641) * MDP(18) + (-t403 * t644 - t495 * t586 + t522 * t546 + t746 * t786 + t744 * t674 + t787 * t428 + (-t423 * t620 - t764) * t641) * MDP(24) + (t405 * t644 + t494 * t586 - t522 * t547 - t745 * t786 - t744 * t514 - t788 * t428 + (t422 * t620 + t765) * t641) * MDP(22) + (-pkin(8) * t687 + t594 * t672 + t642 * t652) * MDP(9) + t755 * t783; -t774 * MDP(12) + (t521 + t759) * MDP(13) + (-t522 - t758) * MDP(14) + MDP(15) * t688 + (-t478 * t620 - t694) * MDP(16) + (-t477 * t620 - t544 * t786 + t660) * MDP(17) + (-t637 * t768 - pkin(3) * t494 + t761 - t478 * t514 - (t637 * t719 - t449) * t786) * MDP(18) + (-t714 - pkin(3) * t495 - t762 - t478 * t674 - (t639 * t719 + t450) * t786) * MDP(19) + (t449 * t674 + t450 * t514 + (t429 * t786 + t410) * t639 + (t430 * t786 - t409 + t670) * t637 + t741) * MDP(20) + (pkin(3) * t651 - t429 * t449 - t430 * t450 - t470 * t478 + (-t429 * t637 + t430 * t639) * qJD(4) + (-t409 * t637 + t410 * t639) * qJ(4)) * MDP(21) + (-t764 - t436 * t786 - t455 * t514 + t494 * t612 + (-qJD(5) * t514 + t718 * t786 - t768) * t637) * MDP(22) + (t434 * t514 - t436 * t674 + (-t422 * t786 + t403) * t639 + (t670 + t781) * t637 + t741) * MDP(23) + (t714 - t765 - t495 * t612 + (t455 + t723) * t674 - (t639 * t718 - t434) * t786) * MDP(24) + (t403 * t767 + t407 * t612 - t422 * t436 - t428 * t455 + t780 * t423 + (qJ(4) * t405 + qJD(4) * t422 - qJD(5) * t428) * t637) * MDP(25) + (-t465 * t733 - t607 * t658) * MDP(26) + (-t418 * t607 + t463 * t733 - t465 * t732 + t606 * t658) * MDP(27) + (-t522 * t607 - t717 * t733) * MDP(28) + (t522 * t606 - t717 * t732) * MDP(29) + (-(t618 * t643 - t619 * t640) * t522 + t603 * t418 + t401 * t606 - (t640 * t662 - t643 * t663) * t717 + t696 * t463 + t732 * t419) * MDP(31) + ((t618 * t640 + t619 * t643) * t522 - t603 * t658 + t401 * t607 - (t640 * t663 + t643 * t662) * t717 + t696 * t465 - t733 * t419) * MDP(32) + (-MDP(11) * t786 + MDP(12) * t571 - MDP(16) * t544 - MDP(18) * t429 + MDP(19) * t430 + MDP(22) * t422 - MDP(24) * t423 + MDP(28) * t465 - MDP(29) * t463 + MDP(30) * t717 + MDP(31) * t396 - MDP(32) * t397) * t571; (t429 * t674 + t430 * t514 - t651) * MDP(21) + (-t422 * t674 + t423 * t514 + t407) * MDP(25) + (-t418 - t790) * MDP(31) + (t658 + t791) * MDP(32) + (MDP(20) + MDP(23)) * (-t514 ^ 2 - t785) + (MDP(18) + MDP(22)) * (-t674 * t786 + t494) + (MDP(19) - MDP(24)) * (t495 + t789); (t514 * t674 - t522) * MDP(22) + (t495 - t789) * MDP(23) + (-t774 - t785) * MDP(24) + (t428 * t674 + t781) * MDP(25) + (-t463 * t674 - t522 * t643 - t640 * t697) * MDP(31) + (-t465 * t674 + t522 * t640 - t643 * t697) * MDP(32); t465 * t463 * MDP(26) + (-t463 ^ 2 + t465 ^ 2) * MDP(27) + (t713 + t791) * MDP(28) + (-t698 + t790) * MDP(29) - t522 * MDP(30) + (t397 * t717 - t419 * t465 + t699) * MDP(31) + (t396 * t717 + t419 * t463 - t679) * MDP(32) + (-MDP(28) * t760 - MDP(29) * t465 - MDP(31) * t397 - MDP(32) * t396) * qJD(6);];
tauc  = t1;
