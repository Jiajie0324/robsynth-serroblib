% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR9_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:17:55
% EndTime: 2019-03-09 16:18:14
% DurationCPUTime: 6.69s
% Computational Cost: add. (8879->576), mult. (23941->786), div. (0->0), fcn. (18463->10), ass. (0->254)
t248 = sin(qJ(3));
t251 = cos(qJ(3));
t357 = cos(pkin(6));
t306 = t357 * qJD(1);
t280 = t306 + qJD(2);
t249 = sin(qJ(2));
t245 = sin(pkin(6));
t332 = qJD(1) * t245;
t315 = t249 * t332;
t390 = -t248 * t315 + t251 * t280;
t321 = qJD(6) + t390;
t178 = t248 * t280 + t251 * t315;
t252 = cos(qJ(2));
t331 = qJD(1) * t252;
t314 = t245 * t331;
t227 = -qJD(3) + t314;
t244 = sin(pkin(11));
t246 = cos(pkin(11));
t121 = t178 * t244 + t246 * t227;
t247 = sin(qJ(6));
t250 = cos(qJ(6));
t282 = t246 * t178 - t227 * t244;
t70 = -t250 * t121 + t247 * t282;
t393 = t321 * t70;
t72 = t121 * t247 + t250 * t282;
t392 = t321 * t72;
t391 = t121 * t390;
t389 = t282 ^ 2;
t320 = qJD(1) * qJD(2);
t309 = t245 * t320;
t295 = t252 * t309;
t129 = qJD(3) * t178 + t248 * t295;
t297 = pkin(1) * t306;
t201 = pkin(8) * t314 + t249 * t297;
t152 = pkin(9) * t280 + t201;
t194 = (-pkin(2) * t252 - pkin(9) * t249 - pkin(1)) * t245;
t165 = qJD(1) * t194;
t275 = (pkin(2) * t249 - pkin(9) * t252) * t245;
t200 = qJD(2) * t275;
t187 = qJD(1) * t200;
t316 = pkin(1) * t357;
t345 = t245 * t249;
t382 = -pkin(8) * t345 + t252 * t316;
t202 = t382 * qJD(2);
t188 = qJD(1) * t202;
t327 = qJD(3) * t251;
t328 = qJD(3) * t248;
t267 = t152 * t328 - t165 * t327 - t248 * t187 - t251 * t188;
t296 = t249 * t309;
t48 = qJ(4) * t296 - qJD(4) * t227 - t267;
t128 = qJD(3) * t390 + t251 * t295;
t344 = t245 * t252;
t264 = pkin(8) * t344 + t249 * t316;
t203 = t264 * qJD(2);
t189 = qJD(1) * t203;
t51 = t129 * pkin(3) - t128 * qJ(4) - t178 * qJD(4) + t189;
t16 = -t244 * t48 + t246 * t51;
t12 = -pkin(4) * t129 - t16;
t198 = -pkin(8) * t315 + t252 * t297;
t151 = -pkin(2) * t280 - t198;
t74 = -pkin(3) * t390 - t178 * qJ(4) + t151;
t85 = t251 * t152 + t248 * t165;
t78 = -qJ(4) * t227 + t85;
t37 = t244 * t74 + t246 * t78;
t30 = -qJ(5) * t390 + t37;
t388 = t30 * t390 + t12;
t199 = qJD(1) * t275;
t334 = t251 * t198 + t248 * t199;
t103 = qJ(4) * t315 + t334;
t288 = pkin(3) * t248 - qJ(4) * t251;
t119 = t288 * t314 + t201;
t205 = qJD(3) * t288 - qJD(4) * t248;
t387 = t244 * t103 + (-t119 + t205) * t246;
t385 = t249 * t252;
t340 = t251 * t252;
t157 = (t244 * t249 + t246 * t340) * t332;
t335 = -t248 * t198 + t251 * t199;
t269 = pkin(3) * t315 + t335;
t342 = t246 * t248;
t383 = qJ(5) * t157 - qJD(5) * t342 + t269;
t347 = t244 * t250;
t381 = t246 * t247 - t347;
t298 = t248 * t314;
t67 = t103 * t246 + t119 * t244;
t380 = -qJD(5) * t251 - t67 + (-t298 + t328) * qJ(5);
t101 = t128 * t244 - t246 * t296;
t102 = t128 * t246 + t244 * t296;
t25 = qJD(6) * t72 - t101 * t250 + t247 * t102;
t354 = qJ(5) * t246;
t377 = pkin(4) + pkin(5);
t379 = t244 * t377 - t354;
t378 = t390 ^ 2;
t253 = qJD(1) ^ 2;
t376 = pkin(10) * t390;
t375 = pkin(10) * t248;
t374 = -pkin(10) + qJ(4);
t17 = t244 * t51 + t246 * t48;
t192 = pkin(9) * t357 + t264;
t266 = -t192 * t328 + t194 * t327 + t200 * t248 + t202 * t251;
t330 = qJD(2) * t249;
t63 = (qJ(4) * t330 - qJD(4) * t252) * t245 + t266;
t209 = t248 * t357 + t251 * t345;
t312 = qJD(2) * t344;
t142 = qJD(3) * t209 + t248 * t312;
t208 = t248 * t345 - t251 * t357;
t143 = -qJD(3) * t208 + t251 * t312;
t69 = pkin(3) * t142 - qJ(4) * t143 - qJD(4) * t209 + t203;
t23 = t244 * t69 + t246 * t63;
t191 = -pkin(2) * t357 - t382;
t98 = pkin(3) * t208 - qJ(4) * t209 + t191;
t336 = t192 * t251 + t194 * t248;
t99 = -qJ(4) * t344 + t336;
t54 = t244 * t98 + t246 * t99;
t302 = t152 * t327 + t165 * t328 - t187 * t251 + t188 * t248;
t259 = pkin(3) * t296 - t302;
t255 = qJ(5) * t102 + qJD(5) * t282 + t259;
t14 = pkin(4) * t101 - t255;
t373 = t14 * t244;
t372 = t14 * t246;
t370 = t244 * t259;
t369 = t246 * t259;
t326 = qJD(4) * t246;
t355 = qJ(4) * t246;
t368 = -t101 * t355 - t121 * t326;
t346 = t244 * t251;
t156 = -t246 * t315 + t314 * t346;
t213 = t244 * t247 + t246 * t250;
t367 = -qJD(6) * t248 * t381 - t156 * t247 - t157 * t250 + t213 * t327;
t196 = t213 * t248;
t366 = qJD(6) * t196 + t156 * t250 - t157 * t247 + t327 * t381;
t190 = t244 * t205;
t319 = pkin(9) * t328;
t137 = -t246 * t319 + t190;
t365 = t137 + t380;
t265 = -pkin(9) - t379;
t364 = t156 * t377 + t265 * t327 - t383;
t317 = -pkin(9) * t244 - pkin(4);
t363 = pkin(4) * t298 + t317 * t328 - t387;
t287 = -pkin(4) * t244 + t354;
t277 = pkin(9) - t287;
t362 = -pkin(4) * t156 + t277 * t327 + t383;
t361 = t244 * t319 + t387;
t360 = t137 - t67;
t359 = t321 * t213;
t322 = qJD(6) * t250;
t323 = qJD(6) * t247;
t358 = t244 * t322 - t246 * t323 - t381 * t390;
t109 = pkin(3) * t178 - qJ(4) * t390;
t84 = -t152 * t248 + t165 * t251;
t57 = t109 * t244 + t246 * t84;
t356 = qJ(4) * t129;
t77 = pkin(3) * t227 + qJD(4) - t84;
t263 = qJ(5) * t282 - t77;
t35 = pkin(4) * t121 - t263;
t353 = qJD(3) * t35;
t352 = t390 * t227;
t351 = t178 * t227;
t271 = t227 * t248;
t349 = t227 * t251;
t241 = t245 ^ 2;
t348 = t241 * t253;
t341 = t246 * t251;
t339 = -qJD(4) + t77;
t338 = qJD(4) - t35;
t337 = -t192 * t248 + t194 * t251;
t223 = -pkin(3) * t251 - qJ(4) * t248 - pkin(2);
t175 = pkin(9) * t341 + t223 * t244;
t333 = t249 ^ 2 - t252 ^ 2;
t329 = qJD(2) * t251;
t325 = qJD(5) * t244;
t44 = qJ(5) * t208 + t54;
t41 = qJ(5) * t178 + t57;
t318 = t129 * t355;
t100 = pkin(3) * t344 - t337;
t313 = t245 * t330;
t310 = t241 * t320;
t308 = qJ(5) * t244 + pkin(3);
t22 = -t244 * t63 + t246 * t69;
t36 = -t244 * t78 + t246 * t74;
t53 = -t244 * t99 + t246 * t98;
t81 = t244 * t84;
t56 = t109 * t246 - t81;
t305 = t379 * t390 + t325 + t85;
t234 = pkin(9) * t346;
t174 = t223 * t246 - t234;
t304 = t321 ^ 2;
t10 = qJ(5) * t129 - qJD(5) * t390 + t17;
t15 = qJ(5) * t142 + qJD(5) * t208 + t23;
t303 = 0.2e1 * t310;
t301 = -t192 * t327 - t194 * t328 + t200 * t251 - t202 * t248;
t294 = qJD(5) - t36;
t293 = t245 * t253 * t357;
t292 = -0.2e1 * pkin(1) * t310;
t6 = -pkin(10) * t102 - t129 * t377 - t16;
t7 = pkin(10) * t101 + t10;
t291 = t247 * t6 + t250 * t7;
t153 = -qJ(5) * t251 + t175;
t131 = t244 * t375 + t153;
t290 = -pkin(10) * t157 + qJD(6) * t131 - t377 * t298 - (-pkin(10) * t341 + (-pkin(5) + t317) * t248) * qJD(3) + t387;
t240 = t251 * pkin(4);
t127 = pkin(5) * t251 + t234 + t240 + (-t223 - t375) * t246;
t289 = -pkin(10) * t156 + qJD(6) * t127 + t190 + (-pkin(9) * t342 + pkin(10) * t346) * qJD(3) + t380;
t19 = -pkin(10) * t282 + t377 * t390 + t294;
t21 = pkin(10) * t121 + t30;
t3 = t19 * t250 - t21 * t247;
t4 = t19 * t247 + t21 * t250;
t141 = t209 * t246 - t244 * t344;
t28 = -pkin(10) * t141 - t208 * t377 - t53;
t140 = t209 * t244 + t246 * t344;
t31 = pkin(10) * t140 + t44;
t286 = -t247 * t31 + t250 * t28;
t285 = t247 * t28 + t250 * t31;
t284 = -t121 ^ 2 - t389;
t283 = t140 * t250 - t141 * t247;
t80 = t140 * t247 + t141 * t250;
t279 = 0.2e1 * t306 + qJD(2);
t278 = qJ(4) * t102 + qJD(4) * t282;
t276 = qJ(5) * t141 - t100;
t274 = -t282 * t390 + t101;
t225 = t374 * t244;
t273 = qJD(6) * t225 - t244 * t376 + t326 - t41;
t226 = t374 * t246;
t272 = qJD(4) * t244 - qJD(6) * t226 - t81 - (-t109 - t376) * t246 + t377 * t178;
t268 = -t101 * t247 - t102 * t250 - t121 * t322 + t282 * t323;
t262 = pkin(3) * t313 + t301;
t260 = pkin(1) * (-qJD(2) * t306 + t348);
t2 = -qJD(6) * t4 - t247 * t7 + t250 * t6;
t257 = t102 + t391;
t113 = t143 * t246 + t244 * t313;
t256 = qJ(5) * t113 + qJD(5) * t141 + t262;
t219 = -pkin(4) * t246 - t308;
t210 = t246 * t377 + t308;
t195 = t247 * t342 - t248 * t347;
t193 = t277 * t248;
t154 = -t174 + t240;
t150 = t265 * t248;
t112 = t143 * t244 - t246 * t313;
t62 = -t287 * t390 + t85;
t55 = pkin(4) * t140 - t276;
t45 = -pkin(4) * t208 - t53;
t43 = -pkin(4) * t178 - t56;
t39 = -t140 * t377 + t276;
t33 = qJD(6) * t283 + t112 * t247 + t113 * t250;
t32 = qJD(6) * t80 - t112 * t250 + t113 * t247;
t29 = pkin(4) * t390 + t294;
t26 = -t121 * t377 + t263;
t20 = pkin(4) * t112 - t256;
t18 = -pkin(4) * t142 - t22;
t13 = -t112 * t377 + t256;
t11 = pkin(10) * t112 + t15;
t9 = -pkin(10) * t113 - t142 * t377 - t22;
t8 = -t101 * t377 + t255;
t1 = qJD(6) * t3 + t291;
t5 = [0, 0, 0, t303 * t385, -t333 * t303, t279 * t312, -t279 * t313, 0, -t189 * t357 - t203 * t280 + t249 * t292, -t188 * t357 - t202 * t280 + t252 * t292, t128 * t209 + t143 * t178, -t128 * t208 - t129 * t209 - t142 * t178 + t143 * t390, -t143 * t227 + (-t128 * t252 + (qJD(1) * t209 + t178) * t330) * t245, t142 * t227 + (t129 * t252 + (-qJD(1) * t208 + t390) * t330) * t245 (-t227 * t245 - t241 * t331) * t330, -t301 * t227 - t203 * t390 + t191 * t129 + t189 * t208 + t151 * t142 + (t302 * t252 + (qJD(1) * t337 + t84) * t330) * t245, t266 * t227 + t203 * t178 + t191 * t128 + t189 * t209 + t151 * t143 + (-t267 * t252 + (-qJD(1) * t336 - t85) * t330) * t245, t100 * t101 + t112 * t77 - t121 * t262 + t129 * t53 - t140 * t259 + t142 * t36 + t16 * t208 - t22 * t390, t100 * t102 + t113 * t77 - t129 * t54 - t141 * t259 - t142 * t37 - t17 * t208 + t23 * t390 - t262 * t282, -t101 * t54 - t102 * t53 - t112 * t37 - t113 * t36 - t121 * t23 - t140 * t17 - t141 * t16 - t22 * t282, -t100 * t259 + t16 * t53 + t17 * t54 + t22 * t36 + t23 * t37 - t262 * t77, t101 * t55 + t112 * t35 - t12 * t208 + t121 * t20 - t129 * t45 + t14 * t140 - t142 * t29 + t18 * t390, -t10 * t140 - t101 * t44 + t102 * t45 - t112 * t30 + t113 * t29 + t12 * t141 - t121 * t15 + t18 * t282, t10 * t208 - t102 * t55 - t113 * t35 + t129 * t44 - t14 * t141 + t142 * t30 - t15 * t390 - t20 * t282, t10 * t44 + t12 * t45 + t14 * t55 + t15 * t30 + t18 * t29 + t20 * t35, -t268 * t80 + t33 * t72, -t25 * t80 - t268 * t283 - t32 * t72 - t33 * t70, -t129 * t80 - t142 * t72 + t208 * t268 + t321 * t33, -t129 * t283 + t142 * t70 + t208 * t25 - t32 * t321, t129 * t208 - t142 * t321 (-qJD(6) * t285 - t11 * t247 + t250 * t9) * t321 - t286 * t129 - t2 * t208 - t3 * t142 + t13 * t70 + t39 * t25 - t8 * t283 + t26 * t32 -(qJD(6) * t286 + t11 * t250 + t247 * t9) * t321 + t285 * t129 + t1 * t208 + t4 * t142 + t13 * t72 - t39 * t268 + t8 * t80 + t26 * t33; 0, 0, 0, -t348 * t385, t333 * t348, -t252 * t293, t249 * t293, 0, -pkin(8) * t295 + t201 * t280 + t249 * t260, pkin(8) * t296 + t198 * t280 + t252 * t260, t128 * t248 - t178 * t349 (t128 - t352) * t251 + (-t129 + t351) * t248, -t227 * t327 + (t227 * t340 + (qJD(2) * t248 - t178) * t249) * t332, t227 * t328 + (-t252 * t271 + (-t390 + t329) * t249) * t332, t227 * t315, -pkin(2) * t129 - t189 * t251 + t335 * t227 + t201 * t390 + (pkin(9) * t349 + t151 * t248) * qJD(3) + (-t84 * t249 + (-pkin(9) * t330 - t151 * t252) * t248) * t332, -pkin(2) * t128 + t189 * t248 - t334 * t227 - t201 * t178 + (-pkin(9) * t271 + t151 * t251) * qJD(3) + (-t151 * t340 + (-pkin(9) * t329 + t85) * t249) * t332, t269 * t121 + t129 * t174 - t156 * t77 - t361 * t390 + (-t16 + (pkin(9) * t121 + t244 * t77) * qJD(3)) * t251 + (pkin(9) * t101 - t227 * t36 - t370) * t248, t269 * t282 - t129 * t175 - t157 * t77 + t360 * t390 + (t17 + (pkin(9) * t282 + t246 * t77) * qJD(3)) * t251 + (pkin(9) * t102 + t227 * t37 - t369) * t248, -t101 * t175 - t102 * t174 + t156 * t37 + t157 * t36 + (-t16 * t246 - t17 * t244) * t248 - t361 * t282 - t360 * t121 + (-t244 * t37 - t246 * t36) * t327, t269 * t77 + t16 * t174 + t17 * t175 + t360 * t37 + t361 * t36 + (-t248 * t259 + t327 * t77) * pkin(9), t101 * t193 - t129 * t154 - t156 * t35 + (t244 * t353 + t12) * t251 + t363 * t390 + t362 * t121 + (t227 * t29 + t373) * t248, -t101 * t153 + t102 * t154 + t156 * t30 - t157 * t29 + (-t10 * t244 + t12 * t246) * t248 + t363 * t282 - t365 * t121 + (-t244 * t30 + t246 * t29) * t327, -t102 * t193 + t129 * t153 + t157 * t35 + (-t246 * t353 - t10) * t251 - t365 * t390 - t362 * t282 + (-t227 * t30 - t372) * t248, t10 * t153 + t12 * t154 + t14 * t193 + t29 * t363 + t30 * t365 + t35 * t362, -t196 * t268 + t367 * t72, t195 * t268 - t196 * t25 - t366 * t72 - t367 * t70, -t129 * t196 - t251 * t268 + t271 * t72 + t321 * t367, t129 * t195 - t25 * t251 - t271 * t70 - t321 * t366, -t129 * t251 + t271 * t321 -(t127 * t250 - t131 * t247) * t129 + t2 * t251 + t150 * t25 + t8 * t195 + t364 * t70 + t366 * t26 + t3 * t271 - (t247 * t289 + t250 * t290) * t321 (t127 * t247 + t131 * t250) * t129 - t1 * t251 - t150 * t268 + t8 * t196 + t364 * t72 + t367 * t26 - t4 * t271 - (-t247 * t290 + t250 * t289) * t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178 * t390, t178 ^ 2 - t378, t128 + t352, -t129 - t351, t296, -t151 * t178 - t227 * t85 - t302, -t151 * t390 - t227 * t84 + t267, -t244 * t356 - pkin(3) * t101 - t121 * t85 - t178 * t36 + t369 - (t244 * t339 - t56) * t390, -t318 - pkin(3) * t102 - t282 * t85 + t178 * t37 - t370 - (t246 * t339 + t57) * t390, t121 * t57 + t282 * t56 + (t36 * t390 + t17) * t246 + (t37 * t390 - t16 + t278) * t244 + t368, pkin(3) * t259 - t36 * t56 - t37 * t57 - t77 * t85 + (-t244 * t36 + t246 * t37) * qJD(4) + (-t16 * t244 + t17 * t246) * qJ(4), t101 * t219 - t121 * t62 - t372 - t390 * t43 + t178 * t29 + (-qJD(5) * t121 + t338 * t390 - t356) * t244, t121 * t41 - t282 * t43 + (-t29 * t390 + t10) * t246 + (t278 + t388) * t244 + t368, t318 - t102 * t219 - t373 - t178 * t30 + (t62 + t325) * t282 - (t246 * t338 - t41) * t390, t14 * t219 - t29 * t43 - t30 * t41 - t35 * t62 + (qJ(4) * t10 + qJD(4) * t30) * t246 + (qJ(4) * t12 + qJD(4) * t29 - qJD(5) * t35) * t244, t268 * t381 - t359 * t72, t213 * t268 + t25 * t381 - t358 * t72 + t359 * t70, t129 * t381 + t178 * t72 - t321 * t359, t129 * t213 - t178 * t70 - t321 * t358, t321 * t178 -(t225 * t250 - t226 * t247) * t129 + t210 * t25 + t8 * t213 + t3 * t178 + t305 * t70 + t358 * t26 - (t247 * t273 - t250 * t272) * t321 (t225 * t247 + t226 * t250) * t129 - t210 * t268 - t8 * t381 - t4 * t178 + t305 * t72 - t359 * t26 - (t247 * t272 + t250 * t273) * t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, t257, t284, t121 * t37 + t282 * t36 - t259, t274, t284, -t257, t121 * t30 - t282 * t29 + t14, 0, 0, 0, 0, 0, -t25 - t392, t268 + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121 * t282 - t129, t102 - t391, -t378 - t389, t282 * t35 + t388, 0, 0, 0, 0, 0, -t250 * t129 - t247 * t304 - t282 * t70, t247 * t129 - t250 * t304 - t282 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72 * t70, -t70 ^ 2 + t72 ^ 2, -t268 + t393, -t25 + t392, -t129, -t26 * t72 + t321 * t4 + t2, t26 * t70 - t291 + (-qJD(6) + t321) * t3;];
tauc_reg  = t5;
