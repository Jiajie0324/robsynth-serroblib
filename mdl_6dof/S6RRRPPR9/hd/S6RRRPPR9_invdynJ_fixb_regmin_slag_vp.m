% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPR9_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR9_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:17:59
% EndTime: 2019-03-09 16:18:25
% DurationCPUTime: 11.50s
% Computational Cost: add. (11557->738), mult. (28912->979), div. (0->0), fcn. (23196->12), ass. (0->326)
t317 = sin(qJ(2));
t320 = cos(qJ(2));
t477 = cos(pkin(6));
t495 = cos(qJ(1));
t387 = t477 * t495;
t494 = sin(qJ(1));
t252 = t317 * t387 + t320 * t494;
t316 = sin(qJ(3));
t319 = cos(qJ(3));
t313 = sin(pkin(6));
t420 = t313 * t495;
t169 = t252 * t319 - t316 * t420;
t251 = t317 * t494 - t320 * t387;
t312 = sin(pkin(11));
t314 = cos(pkin(11));
t109 = t169 * t312 - t251 * t314;
t110 = t169 * t314 + t251 * t312;
t315 = sin(qJ(6));
t318 = cos(qJ(6));
t517 = t109 * t318 - t110 * t315;
t516 = t109 * t315 + t110 * t318;
t405 = t477 * qJD(1);
t366 = t405 + qJD(2);
t445 = qJD(1) * t313;
t418 = t317 * t445;
t394 = t316 * t418;
t205 = -t319 * t366 + t394;
t435 = qJD(6) - t205;
t207 = t316 * t366 + t319 * t418;
t417 = t320 * t445;
t277 = -qJD(3) + t417;
t144 = t207 * t312 + t277 * t314;
t368 = t207 * t314 - t277 * t312;
t76 = -t144 * t318 + t315 * t368;
t515 = t435 * t76;
t78 = t144 * t315 + t318 * t368;
t514 = t435 * t78;
t513 = t144 * t205;
t433 = qJDD(1) * t317;
t409 = t313 * t433;
t434 = qJD(1) * qJD(2);
t410 = t320 * t434;
t512 = t313 * t410 + t409;
t269 = -pkin(3) * t319 - qJ(4) * t316 - pkin(2);
t343 = qJD(3) * t366;
t401 = t477 * qJDD(1);
t362 = t401 + qJDD(2);
t443 = qJD(2) * t320;
t414 = t316 * t443;
t441 = qJD(3) * t319;
t99 = t313 * (qJD(1) * (t317 * t441 + t414) + t316 * t433) + t316 * t343 - t319 * t362;
t511 = t368 ^ 2;
t309 = t313 ^ 2;
t510 = 0.2e1 * t309;
t432 = qJDD(1) * t320;
t293 = t313 * t432;
t411 = t317 * t434;
t391 = t313 * t411;
t225 = qJDD(3) - t293 + t391;
t392 = pkin(1) * t405;
t363 = qJD(2) * t392;
t389 = pkin(1) * t401;
t423 = pkin(8) * t293 + t317 * t389 + t320 * t363;
t334 = -pkin(8) * t391 + t423;
t125 = pkin(9) * t362 + t334;
t384 = pkin(2) * t317 - pkin(9) * t320;
t357 = t384 * qJD(2);
t364 = -pkin(2) * t320 - pkin(9) * t317 - pkin(1);
t129 = (qJD(1) * t357 + qJDD(1) * t364) * t313;
t236 = pkin(8) * t417 + t317 * t392;
t182 = pkin(9) * t366 + t236;
t191 = t364 * t445;
t442 = qJD(3) * t316;
t350 = t125 * t319 + t129 * t316 - t182 * t442 + t191 * t441;
t30 = qJ(4) * t225 - qJD(4) * t277 + t350;
t397 = pkin(8) * t512 + t317 * t363 - t320 * t389;
t126 = -pkin(2) * t362 + t397;
t98 = -qJD(3) * t394 + t316 * t362 + (t343 + t512) * t319;
t31 = pkin(3) * t99 - qJ(4) * t98 - qJD(4) * t207 + t126;
t12 = -t30 * t312 + t31 * t314;
t376 = qJDD(5) - t12;
t10 = -pkin(4) * t99 + t376;
t233 = -pkin(8) * t418 + t320 * t392;
t181 = -pkin(2) * t366 - t233;
t82 = t205 * pkin(3) - t207 * qJ(4) + t181;
t95 = t182 * t319 + t191 * t316;
t86 = -qJ(4) * t277 + t95;
t43 = t312 * t82 + t314 * t86;
t36 = qJ(5) * t205 + t43;
t509 = -t205 * t36 + t10;
t234 = t384 * t445;
t451 = t233 * t319 + t234 * t316;
t115 = qJ(4) * t418 + t451;
t375 = pkin(3) * t316 - qJ(4) * t319;
t142 = t375 * t417 + t236;
t245 = qJD(3) * t375 - t316 * qJD(4);
t508 = t312 * t115 + (-t142 + t245) * t314;
t421 = pkin(1) * t477;
t465 = t313 * t317;
t359 = -pkin(8) * t465 + t320 * t421;
t459 = t319 * t320;
t202 = (t312 * t317 + t314 * t459) * t313;
t187 = qJD(1) * t202;
t452 = -t233 * t316 + t234 * t319;
t352 = pkin(3) * t418 + t452;
t461 = t314 * t316;
t505 = qJ(5) * t187 - qJD(5) * t461 + t352;
t504 = (qJDD(2) + 0.2e1 * t401) * t313;
t467 = t312 * t318;
t503 = t314 * t315 - t467;
t502 = pkin(3) * t225 - qJDD(4);
t393 = t316 * t417;
t69 = t115 * t314 + t142 * t312;
t501 = -qJD(5) * t319 - t69 + (-t393 + t442) * qJ(5);
t168 = t252 * t316 + t319 * t420;
t386 = t477 * t494;
t254 = -t317 * t386 + t320 * t495;
t419 = t313 * t494;
t172 = t254 * t316 - t319 * t419;
t248 = t316 * t465 - t319 * t477;
t345 = g(1) * t172 + g(2) * t168 + g(3) * t248;
t79 = -t225 * t314 + t312 * t98;
t80 = t225 * t312 + t314 * t98;
t18 = qJD(6) * t78 + t315 * t80 - t318 * t79;
t474 = qJ(5) * t314;
t496 = pkin(4) + pkin(5);
t500 = t312 * t496 - t474;
t399 = t125 * t316 - t129 * t319 + t182 * t441 + t191 * t442;
t340 = -t399 + t502;
t439 = qJD(5) * t368;
t324 = qJ(5) * t80 + t340 + t439;
t6 = -t496 * t79 + t324;
t499 = t6 + t345;
t497 = t205 ^ 2;
t321 = qJD(1) ^ 2;
t491 = pkin(10) * t205;
t490 = pkin(10) * t316;
t486 = -pkin(10) + qJ(4);
t13 = t30 * t314 + t31 * t312;
t464 = t313 * t320;
t447 = pkin(8) * t464 + t317 * t421;
t222 = pkin(9) * t477 + t447;
t448 = pkin(2) * t464 + pkin(9) * t465;
t224 = -pkin(1) * t313 - t448;
t235 = t313 * t357;
t237 = t359 * qJD(2);
t349 = -t222 * t442 + t224 * t441 + t235 * t316 + t237 * t319;
t444 = qJD(2) * t317;
t65 = (qJ(4) * t444 - qJD(4) * t320) * t313 + t349;
t249 = t316 * t477 + t319 * t465;
t166 = qJD(3) * t249 + t313 * t414;
t415 = t313 * t443;
t167 = -qJD(3) * t248 + t319 * t415;
t238 = t447 * qJD(2);
t71 = pkin(3) * t166 - qJ(4) * t167 - qJD(4) * t249 + t238;
t25 = t312 * t71 + t314 * t65;
t221 = -pkin(2) * t477 - t359;
t240 = t248 * pkin(3);
t404 = t249 * qJ(4) - t240;
t106 = t221 - t404;
t428 = qJ(4) * t464;
t453 = t222 * t319 + t224 * t316;
t107 = -t428 + t453;
t54 = t106 * t312 + t107 * t314;
t485 = qJ(4) * t99;
t216 = t312 * t245;
t430 = pkin(9) * t442;
t161 = -t314 * t430 + t216;
t483 = t161 + t501;
t426 = t312 * t464;
t400 = t319 * t426;
t186 = qJD(1) * t400 - t314 * t418;
t348 = -pkin(9) - t500;
t482 = t186 * t496 + t348 * t441 - t505;
t422 = -pkin(9) * t312 - pkin(4);
t481 = pkin(4) * t393 + t422 * t442 - t508;
t374 = -pkin(4) * t312 + t474;
t361 = pkin(9) - t374;
t480 = -pkin(4) * t186 + t361 * t441 + t505;
t479 = t312 * t430 + t508;
t478 = t161 - t69;
t127 = pkin(3) * t207 + qJ(4) * t205;
t94 = -t182 * t316 + t191 * t319;
t57 = t127 * t312 + t314 * t94;
t476 = qJ(4) * t314;
t85 = pkin(3) * t277 + qJD(4) - t94;
t336 = qJ(5) * t368 - t85;
t41 = pkin(4) * t144 - t336;
t473 = qJD(3) * t41;
t472 = t205 * t277;
t471 = t207 * t277;
t353 = t277 * t316;
t468 = t309 * t321;
t466 = t312 * t319;
t460 = t314 * t319;
t458 = -qJD(4) + t85;
t457 = qJD(4) - t41;
t257 = t312 * t315 + t314 * t318;
t456 = -qJD(6) * t316 * t503 - t186 * t315 - t187 * t318 + t257 * t441;
t231 = t257 * t316;
t455 = qJD(6) * t231 + t186 * t318 - t187 * t315 + t441 * t503;
t454 = -t222 * t316 + t224 * t319;
t450 = t435 * t257;
t436 = qJD(6) * t318;
t437 = qJD(6) * t315;
t449 = t205 * t503 + t312 * t436 - t314 * t437;
t204 = pkin(9) * t460 + t269 * t312;
t310 = t317 ^ 2;
t446 = -t320 ^ 2 + t310;
t440 = qJD(4) * t314;
t299 = pkin(3) * t464;
t50 = qJ(5) * t248 + t54;
t429 = t99 * t476;
t47 = qJ(5) * t207 + t57;
t427 = t320 * t468;
t108 = t299 - t454;
t425 = t269 * t251;
t253 = t317 * t495 + t320 * t386;
t424 = t269 * t253;
t416 = t313 * t444;
t412 = pkin(1) * t510;
t407 = qJ(5) * t312 + pkin(3);
t24 = -t312 * t65 + t314 * t71;
t42 = -t312 * t86 + t314 * t82;
t53 = t106 * t314 - t107 * t312;
t89 = t312 * t94;
t56 = t127 * t314 - t89;
t7 = qJ(5) * t99 + qJD(5) * t205 + t13;
t403 = qJD(5) * t312 - t205 * t500 + t95;
t295 = pkin(9) * t466;
t203 = t269 * t314 - t295;
t402 = t435 ^ 2;
t19 = qJ(5) * t166 + qJD(5) * t248 + t25;
t398 = -t222 * t441 - t224 * t442 + t235 * t319 - t237 * t316;
t396 = t299 * t319 + t316 * t428 + t448;
t388 = qJD(5) - t42;
t385 = t313 * t321 * t477;
t173 = t254 * t319 + t316 * t419;
t113 = t173 * t312 - t253 * t314;
t383 = -g(1) * t109 + g(2) * t113;
t114 = t173 * t314 + t253 * t312;
t382 = g(1) * t110 - g(2) * t114;
t381 = -g(1) * t168 + g(2) * t172;
t380 = g(1) * t254 + g(2) * t252;
t4 = -pkin(10) * t80 - t496 * t99 + t376;
t5 = pkin(10) * t79 + t7;
t379 = t315 * t4 + t318 * t5;
t183 = -qJ(5) * t319 + t204;
t151 = t312 * t490 + t183;
t378 = -pkin(10) * t187 + qJD(6) * t151 - t496 * t393 - (-pkin(10) * t460 + (-pkin(5) + t422) * t316) * qJD(3) + t508;
t307 = t319 * pkin(4);
t149 = pkin(5) * t319 + t295 + t307 + (-t269 - t490) * t314;
t377 = -pkin(10) * t186 + qJD(6) * t149 + t216 + (-pkin(9) * t461 + pkin(10) * t466) * qJD(3) + t501;
t21 = -pkin(10) * t368 - t205 * t496 + t388;
t23 = pkin(10) * t144 + t36;
t8 = t21 * t318 - t23 * t315;
t9 = t21 * t315 + t23 * t318;
t165 = t249 * t314 - t426;
t33 = -pkin(10) * t165 - t248 * t496 - t53;
t164 = t249 * t312 + t314 * t464;
t37 = pkin(10) * t164 + t50;
t373 = -t315 * t37 + t318 * t33;
t372 = t315 * t33 + t318 * t37;
t371 = qJ(4) * t80 + qJD(4) * t368;
t370 = -t144 ^ 2 - t511;
t369 = t164 * t318 - t165 * t315;
t88 = t164 * t315 + t165 * t318;
t365 = 0.2e1 * t405 + qJD(2);
t360 = qJ(5) * t165 - t108;
t358 = t205 * t368 + t79;
t271 = t486 * t312;
t356 = qJD(6) * t271 + t312 * t491 + t440 - t47;
t272 = t486 * t314;
t355 = qJD(4) * t312 - qJD(6) * t272 - t89 - (-t127 + t491) * t314 + t496 * t207;
t351 = -t144 * t436 - t315 * t79 - t318 * t80 + t368 * t437;
t137 = -t251 * t466 - t252 * t314;
t139 = -t253 * t466 - t254 * t314;
t201 = -t314 * t465 + t400;
t347 = g(1) * t139 + g(2) * t137 + g(3) * t201;
t138 = -t251 * t460 + t252 * t312;
t140 = -t253 * t460 + t254 * t312;
t346 = -g(1) * t140 - g(2) * t138 - g(3) * t202;
t344 = -g(1) * t173 - g(2) * t169 - g(3) * t249;
t341 = t80 - t513;
t11 = pkin(4) * t79 - t324;
t339 = -t11 + t345;
t338 = t340 + t345;
t337 = -g(1) * t253 - g(2) * t251 + g(3) * t464;
t335 = pkin(3) * t416 + t398;
t333 = -t144 * t440 - t476 * t79 + t344;
t332 = pkin(1) * t495 + pkin(2) * t254 + pkin(3) * t173 + pkin(8) * t419 + pkin(9) * t253 + qJ(4) * t172;
t330 = -pkin(9) * t225 - t181 * t277;
t2 = -qJD(6) * t9 - t315 * t5 + t318 * t4;
t327 = t345 - t399;
t326 = -pkin(1) * t494 - pkin(2) * t252 - pkin(3) * t169 + pkin(8) * t420 - pkin(9) * t251 - qJ(4) * t168;
t325 = pkin(9) * qJD(3) * t277 - t126 - t337;
t132 = t167 * t314 + t312 * t416;
t323 = qJ(5) * t132 + qJD(5) * t165 + t335;
t262 = -pkin(4) * t314 - t407;
t250 = t314 * t496 + t407;
t230 = t315 * t461 - t316 * t467;
t223 = t361 * t316;
t184 = -t203 + t307;
t180 = t348 * t316;
t158 = t172 * pkin(3);
t156 = t168 * pkin(3);
t131 = t167 * t312 - t314 * t416;
t92 = -qJDD(6) + t99;
t64 = t205 * t374 + t95;
t63 = t113 * t315 + t114 * t318;
t62 = t113 * t318 - t114 * t315;
t55 = pkin(4) * t164 - t360;
t51 = -pkin(4) * t248 - t53;
t49 = -pkin(4) * t207 - t56;
t45 = -t164 * t496 + t360;
t39 = qJD(6) * t369 + t131 * t315 + t132 * t318;
t38 = qJD(6) * t88 - t131 * t318 + t132 * t315;
t35 = -pkin(4) * t205 + t388;
t28 = -t144 * t496 + t336;
t22 = pkin(4) * t131 - t323;
t20 = -pkin(4) * t166 - t24;
t16 = -t131 * t496 + t323;
t15 = pkin(10) * t131 + t19;
t14 = -pkin(10) * t132 - t166 * t496 - t24;
t1 = t8 * qJD(6) + t379;
t3 = [qJDD(1), g(1) * t494 - g(2) * t495, g(1) * t495 + g(2) * t494 (qJDD(1) * t310 + 0.2e1 * t317 * t410) * t309 (t317 * t432 - t434 * t446) * t510, t317 * t504 + t365 * t415, t320 * t504 - t365 * t416, t362 * t477, -t238 * t366 + t359 * t362 - t397 * t477 + g(1) * t252 - g(2) * t254 + (-t411 + t432) * t412, -t237 * t366 - t447 * t362 - t334 * t477 - g(1) * t251 + g(2) * t253 + (-t410 - t433) * t412, t167 * t207 + t249 * t98, -t166 * t207 - t167 * t205 - t248 * t98 - t249 * t99, -t167 * t277 + t225 * t249 + (t207 * t444 - t320 * t98) * t313, t166 * t277 - t225 * t248 + (-t205 * t444 + t320 * t99) * t313 (-t225 * t320 - t277 * t444) * t313, -t398 * t277 + t454 * t225 + t238 * t205 + t221 * t99 + t126 * t248 + t181 * t166 + g(1) * t169 - g(2) * t173 + (t320 * t399 + t444 * t94) * t313, t349 * t277 - t453 * t225 + t238 * t207 + t221 * t98 + t126 * t249 + t181 * t167 + (t320 * t350 - t444 * t95) * t313 + t381, t108 * t79 + t12 * t248 + t131 * t85 - t144 * t335 - t164 * t340 + t166 * t42 + t205 * t24 + t53 * t99 + t382, t108 * t80 - t13 * t248 + t132 * t85 - t165 * t340 - t166 * t43 - t205 * t25 - t335 * t368 - t54 * t99 + t383, -t12 * t165 - t13 * t164 - t131 * t43 - t132 * t42 - t144 * t25 - t24 * t368 - t53 * t80 - t54 * t79 - t381, -g(1) * t326 - g(2) * t332 - t108 * t340 + t12 * t53 + t13 * t54 + t24 * t42 + t25 * t43 - t335 * t85, -t10 * t248 + t11 * t164 + t131 * t41 + t144 * t22 - t166 * t35 - t20 * t205 - t51 * t99 + t55 * t79 + t382, t10 * t165 - t131 * t36 + t132 * t35 - t144 * t19 - t164 * t7 + t20 * t368 - t50 * t79 + t51 * t80 - t381, -t11 * t165 - t132 * t41 + t166 * t36 + t19 * t205 - t22 * t368 + t248 * t7 + t50 * t99 - t55 * t80 - t383, t7 * t50 + t36 * t19 + t11 * t55 + t41 * t22 + t10 * t51 + t35 * t20 - g(1) * (-pkin(4) * t110 - qJ(5) * t109 + t326) - g(2) * (pkin(4) * t114 + qJ(5) * t113 + t332) -t351 * t88 + t39 * t78, -t18 * t88 - t351 * t369 - t38 * t78 - t39 * t76, -t166 * t78 + t248 * t351 + t39 * t435 - t88 * t92, t166 * t76 + t18 * t248 - t369 * t92 - t38 * t435, -t166 * t435 + t248 * t92 (-qJD(6) * t372 + t318 * t14 - t315 * t15) * t435 - t373 * t92 - t2 * t248 - t8 * t166 + t16 * t76 + t45 * t18 - t6 * t369 + t28 * t38 + g(1) * t516 - g(2) * t63 -(qJD(6) * t373 + t315 * t14 + t318 * t15) * t435 + t372 * t92 + t1 * t248 + t9 * t166 + t16 * t78 - t45 * t351 + t6 * t88 + t28 * t39 + g(1) * t517 - g(2) * t62; 0, 0, 0, -t317 * t427, t446 * t468, -t320 * t385 + t409, t317 * t385 + t293, t362, pkin(1) * t317 * t468 + t236 * t366 - t337 - t397, pkin(1) * t427 + t233 * t366 + (pkin(8) * t434 + g(3)) * t465 + t380 - t423, t98 * t316 - t319 * t471 (t98 + t472) * t319 + (-t99 + t471) * t316, -t277 * t441 + t225 * t316 + (-t207 * t317 + t277 * t459) * t445, t277 * t442 + t225 * t319 + (t205 * t317 - t320 * t353) * t445, t277 * t418, -pkin(2) * t99 - t236 * t205 + t277 * t452 + t316 * t330 + t319 * t325 - t418 * t94, -pkin(2) * t98 - t236 * t207 - t277 * t451 - t316 * t325 + t319 * t330 + t418 * t95, t352 * t144 - t186 * t85 + t203 * t99 + t479 * t205 + (-t12 + (pkin(9) * t144 + t312 * t85) * qJD(3)) * t319 + (pkin(9) * t79 - t277 * t42 - t312 * t340) * t316 + t346, t352 * t368 - t187 * t85 - t204 * t99 - t478 * t205 + (t13 + (pkin(9) * t368 + t314 * t85) * qJD(3)) * t319 + (pkin(9) * t80 + t277 * t43 - t314 * t340) * t316 + t347, t186 * t43 + t187 * t42 - t203 * t80 - t204 * t79 - t479 * t368 - t478 * t144 + (-t312 * t43 - t314 * t42) * t441 + (-t12 * t314 - t13 * t312 - t337) * t316, t13 * t204 + t12 * t203 + t85 * t352 - g(1) * t424 - g(2) * t425 - g(3) * t396 + t478 * t43 + t479 * t42 + (-t316 * t340 + t441 * t85 - t380) * pkin(9), -t184 * t99 - t186 * t41 + t223 * t79 + (t312 * t473 + t10) * t319 - t481 * t205 + t480 * t144 + (t11 * t312 + t277 * t35) * t316 + t346, -t183 * t79 + t184 * t80 + t186 * t36 - t187 * t35 + t481 * t368 - t483 * t144 + (-t312 * t36 + t314 * t35) * t441 + (t10 * t314 - t312 * t7 - t337) * t316, t183 * t99 + t187 * t41 - t223 * t80 + (-t314 * t473 - t7) * t319 + t483 * t205 - t480 * t368 + (-t11 * t314 - t277 * t36) * t316 - t347, t7 * t183 + t11 * t223 + t10 * t184 - g(1) * (pkin(4) * t140 + pkin(9) * t254 + qJ(5) * t139 + t424) - g(2) * (pkin(4) * t138 + pkin(9) * t252 + qJ(5) * t137 + t425) - g(3) * (pkin(4) * t202 + qJ(5) * t201 + t396) + t480 * t41 + t483 * t36 + t481 * t35, -t231 * t351 + t456 * t78, -t18 * t231 + t230 * t351 - t455 * t78 - t456 * t76, -t231 * t92 - t319 * t351 + t353 * t78 + t435 * t456, -t18 * t319 + t230 * t92 - t353 * t76 - t435 * t455, -t92 * t319 + t353 * t435 -(t149 * t318 - t151 * t315) * t92 + t2 * t319 + t180 * t18 + t6 * t230 - g(1) * (t139 * t315 + t140 * t318) - g(2) * (t137 * t315 + t138 * t318) - g(3) * (t201 * t315 + t202 * t318) + t482 * t76 + t8 * t353 + t455 * t28 - (t315 * t377 + t318 * t378) * t435 (t149 * t315 + t151 * t318) * t92 - t1 * t319 - t180 * t351 + t6 * t231 - g(1) * (t139 * t318 - t140 * t315) - g(2) * (t137 * t318 - t138 * t315) - g(3) * (t201 * t318 - t202 * t315) + t482 * t78 - t9 * t353 + t456 * t28 - (-t315 * t378 + t318 * t377) * t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207 * t205, t207 ^ 2 - t497, t98 - t472, -t99 - t471, t225, -t181 * t207 - t277 * t95 + t327, t181 * t205 - t277 * t94 - t344 - t350, -t312 * t485 - pkin(3) * t79 - t144 * t95 - t207 * t42 + (t312 * t458 - t56) * t205 + t338 * t314, -t429 - pkin(3) * t80 - t368 * t95 + t207 * t43 + (t314 * t458 + t57) * t205 - t338 * t312, t144 * t57 + t368 * t56 + (-t205 * t42 + t13) * t314 + (-t205 * t43 - t12 + t371) * t312 + t333, t340 * pkin(3) + g(1) * t158 + g(2) * t156 + g(3) * t240 - t42 * t56 - t43 * t57 - t85 * t95 + (-t312 * t42 + t314 * t43) * qJD(4) + (-t12 * t312 + t13 * t314 + t344) * qJ(4), -t144 * t64 + t205 * t49 + t207 * t35 + t262 * t79 + t339 * t314 + (-qJD(5) * t144 - t205 * t457 - t485) * t312, t144 * t47 - t368 * t49 + (t205 * t35 + t7) * t314 + (t371 + t509) * t312 + t333, t429 + t368 * t64 - t207 * t36 - t262 * t80 + (t314 * t457 - t47) * t205 + (t339 + t439) * t312, t11 * t262 - t36 * t47 - t41 * t64 - t35 * t49 - g(1) * (t173 * qJ(4) - t158) - g(2) * (qJ(4) * t169 - t156) - g(3) * t404 + (pkin(4) * t345 + t7 * qJ(4) + t36 * qJD(4)) * t314 + (qJ(4) * t10 + qJ(5) * t345 + qJD(4) * t35 - qJD(5) * t41) * t312, t351 * t503 - t450 * t78, t18 * t503 + t257 * t351 - t449 * t78 + t450 * t76, t78 * t207 - t435 * t450 + t503 * t92, -t207 * t76 + t257 * t92 - t435 * t449, t435 * t207 -(t271 * t318 - t272 * t315) * t92 + t250 * t18 + t8 * t207 + t403 * t76 + t449 * t28 - (t315 * t356 - t318 * t355) * t435 + t499 * t257 (t271 * t315 + t272 * t318) * t92 - t250 * t351 - t9 * t207 + t403 * t78 - t450 * t28 - (t315 * t355 + t318 * t356) * t435 - t499 * t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, t341, t370, t144 * t43 + t368 * t42 - t327 - t502, t358, t370, -t341, t144 * t36 - t35 * t368 - t339, 0, 0, 0, 0, 0, -t18 - t514, t351 + t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144 * t368 - t99, t80 + t513, -t497 - t511, -g(1) * t113 - g(2) * t109 - g(3) * t164 + t368 * t41 + t509, 0, 0, 0, 0, 0, -t315 * t402 - t318 * t92 - t368 * t76, t315 * t92 - t318 * t402 - t368 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78 * t76, -t76 ^ 2 + t78 ^ 2, -t351 + t515, -t18 + t514, -t92, -g(1) * t62 - g(2) * t517 - g(3) * t369 - t28 * t78 + t435 * t9 + t2, t28 * t76 + g(1) * t63 + g(2) * t516 + g(3) * t88 - t379 + (t435 - qJD(6)) * t8;];
tau_reg  = t3;
