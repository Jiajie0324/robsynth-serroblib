% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:18:04
% EndTime: 2019-03-09 16:18:43
% DurationCPUTime: 22.15s
% Computational Cost: add. (20019->929), mult. (49712->1204), div. (0->0), fcn. (39866->12), ass. (0->410)
t368 = sin(qJ(2));
t573 = cos(pkin(6));
t508 = pkin(1) * t573;
t355 = t368 * t508;
t367 = sin(qJ(3));
t593 = cos(qJ(3));
t422 = pkin(3) * t367 - qJ(4) * t593;
t364 = sin(pkin(6));
t370 = cos(qJ(2));
t550 = t364 * t370;
t640 = -(t355 + (pkin(8) + t422) * t550) * qJD(1) + qJD(3) * t422 - t367 * qJD(4);
t480 = t573 * qJD(1);
t465 = pkin(1) * t480;
t534 = qJD(1) * t364;
t494 = t368 * t534;
t280 = -pkin(8) * t494 + t370 * t465;
t454 = pkin(2) * t368 - pkin(9) * t370;
t281 = t454 * t534;
t169 = t593 * t280 + t367 * t281;
t143 = qJ(4) * t494 + t169;
t363 = sin(pkin(11));
t365 = cos(pkin(11));
t639 = -t365 * t143 + t363 * t640;
t594 = cos(qJ(1));
t457 = t573 * t594;
t592 = sin(qJ(1));
t299 = t368 * t457 + t370 * t592;
t503 = t364 * t594;
t210 = t299 * t593 - t367 * t503;
t298 = t368 * t592 - t370 * t457;
t137 = t210 * t363 - t298 * t365;
t138 = t210 * t365 + t298 * t363;
t366 = sin(qJ(6));
t369 = cos(qJ(6));
t638 = t137 * t369 - t138 * t366;
t637 = t137 * t366 + t138 * t369;
t433 = t480 + qJD(2);
t413 = t367 * t433;
t502 = t364 * t593;
t464 = qJD(1) * t502;
t250 = t368 * t464 + t413;
t344 = t370 * t534;
t443 = t344 - qJD(3);
t180 = t250 * t363 + t365 * t443;
t411 = t365 * t250 - t363 * t443;
t623 = -t369 * t180 + t366 * t411;
t636 = t623 ^ 2;
t624 = t180 * t366 + t369 * t411;
t635 = t624 ^ 2;
t474 = t573 * qJDD(1);
t427 = t474 + qJDD(2);
t435 = t370 * t464;
t470 = t368 * t502;
t248 = t367 * t494 - t593 * t433;
t631 = qJD(3) * t248;
t124 = -qJD(2) * t435 - qJDD(1) * t470 - t367 * t427 + t631;
t524 = qJDD(1) * t370;
t343 = t364 * t524;
t525 = qJD(1) * qJD(2);
t486 = t368 * t525;
t460 = t364 * t486;
t272 = qJDD(3) - t343 + t460;
t103 = -t124 * t363 - t365 * t272;
t104 = -t124 * t365 + t272 * t363;
t28 = qJD(6) * t624 - t369 * t103 + t104 * t366;
t526 = qJD(6) - t248;
t628 = t624 * t526;
t634 = -t28 + t628;
t466 = t367 * t344;
t531 = qJD(3) * t367;
t633 = -qJD(5) * t593 + t639 + (-t466 + t531) * qJ(5);
t618 = t363 * t143 + t365 * t640;
t632 = t526 * t623;
t499 = t370 * t593;
t245 = (t363 * t368 + t365 * t499) * t364;
t229 = qJD(1) * t245;
t500 = t365 * t593;
t509 = -pkin(9) * t363 - pkin(4);
t595 = pkin(4) + pkin(5);
t630 = pkin(10) * t229 + t466 * t595 + (-pkin(10) * t500 + (-pkin(5) + t509) * t367) * qJD(3) - t618;
t228 = t363 * t435 - t365 * t494;
t504 = t363 * t593;
t546 = t365 * t367;
t629 = -pkin(10) * t228 + (-pkin(9) * t546 + pkin(10) * t504) * qJD(3) + t633;
t627 = t180 * t248;
t488 = qJD(3) * t593;
t424 = t365 * t488 - t229;
t425 = t363 * t488 - t228;
t551 = t364 * t368;
t302 = -pkin(8) * t551 + t370 * t508;
t284 = qJD(2) * t302;
t223 = -pkin(2) * t433 - t280;
t108 = t248 * pkin(3) - t250 * qJ(4) + t223;
t537 = pkin(8) * t550 + t355;
t269 = t573 * pkin(9) + t537;
t224 = qJD(2) * pkin(9) + qJD(1) * t269;
t430 = -pkin(2) * t370 - pkin(9) * t368 - pkin(1);
t233 = t430 * t534;
t121 = t224 * t593 + t367 * t233;
t112 = -qJ(4) * t443 + t121;
t60 = t108 * t365 - t363 * t112;
t446 = qJD(5) - t60;
t31 = -pkin(10) * t411 - t248 * t595 + t446;
t61 = t363 * t108 + t365 * t112;
t50 = t248 * qJ(5) + t61;
t33 = pkin(10) * t180 + t50;
t11 = t31 * t366 + t33 * t369;
t532 = qJD(2) * t370;
t492 = t367 * t532;
t522 = t368 * qJDD(1);
t125 = qJD(3) * t413 + t364 * (qJD(1) * (t368 * t488 + t492) + t367 * t522) - t593 * t427;
t428 = qJD(2) * t465;
t459 = pkin(1) * t474;
t511 = pkin(8) * t343 + t368 * t459 + t370 * t428;
t185 = -pkin(8) * t460 + t511;
t153 = pkin(9) * t427 + t185;
t419 = t454 * qJD(2);
t161 = (qJD(1) * t419 + qJDD(1) * t430) * t364;
t414 = -t593 * t153 - t367 * t161 + t224 * t531 - t233 * t488;
t42 = t272 * qJ(4) - qJD(4) * t443 - t414;
t484 = t364 * t522;
t485 = t370 * t525;
t186 = -t368 * t428 + t370 * t459 + (-t364 * t485 - t484) * pkin(8);
t154 = -pkin(2) * t427 - t186;
t43 = t125 * pkin(3) + t124 * qJ(4) - t250 * qJD(4) + t154;
t14 = -t363 * t42 + t365 * t43;
t447 = qJDD(5) - t14;
t6 = -pkin(10) * t104 - t125 * t595 + t447;
t15 = t363 * t43 + t365 * t42;
t9 = t125 * qJ(5) + t248 * qJD(5) + t15;
t7 = pkin(10) * t103 + t9;
t2 = -qJD(6) * t11 - t366 * t7 + t369 * t6;
t626 = t11 * t526 + t2;
t528 = qJD(6) * t369;
t529 = qJD(6) * t366;
t27 = -t366 * t103 - t369 * t104 - t180 * t528 + t411 * t529;
t625 = -t27 + t632;
t554 = t363 * t125;
t622 = t593 * t103 - t425 * t248 + t367 * (t180 * t443 - t554);
t621 = t411 ^ 2;
t360 = t364 ^ 2;
t620 = 0.2e1 * t360;
t12 = -pkin(4) * t125 + t447;
t619 = -t248 * t50 + t12;
t617 = t103 * t595;
t616 = t248 * t411;
t615 = t250 * t443;
t613 = t367 * t443;
t611 = t443 * t121;
t295 = t367 * t551 - t573 * t593;
t286 = t295 * qJ(5);
t560 = t295 * t365;
t610 = -pkin(4) * t560 - t363 * t286;
t358 = t593 * pkin(4);
t609 = -t593 * pkin(5) - t358;
t168 = -t367 * t280 + t593 * t281;
t415 = pkin(3) * t494 + t168;
t608 = qJ(5) * t229 - qJD(5) * t546 + t415;
t607 = (qJDD(2) + 0.2e1 * t474) * t364;
t606 = -t363 * t528 + t365 * t529;
t530 = qJD(5) * t411;
t605 = -qJ(5) * t104 - t530;
t552 = t363 * t369;
t307 = -t365 * t366 + t552;
t285 = t537 * qJD(2);
t604 = pkin(3) * t272 - qJDD(4);
t209 = t299 * t367 + t502 * t594;
t456 = t573 * t592;
t301 = -t368 * t456 + t370 * t594;
t501 = t364 * t592;
t213 = t301 * t367 - t501 * t593;
t407 = g(1) * t213 + g(2) * t209 + g(3) * t295;
t566 = t180 * t365;
t601 = t248 * (t363 * t411 + t566) + t103 * t363 - t104 * t365;
t569 = qJ(5) * t365;
t600 = t363 * t595 - t569;
t57 = -t367 * t153 + t593 * t161 - t224 * t488 - t233 * t531;
t405 = t57 + t604;
t376 = t405 - t605;
t8 = t376 - t617;
t599 = t8 + t407;
t567 = t104 * t363;
t568 = t103 * t365;
t597 = qJD(3) * (t180 * t500 + t411 * t504) + t367 * (t567 + t568) - t229 * t180 - t228 * t411;
t596 = t248 ^ 2;
t371 = qJD(1) ^ 2;
t590 = pkin(4) * t103;
t586 = -pkin(10) + qJ(4);
t545 = t367 * qJ(4);
t318 = -pkin(3) * t593 - pkin(2) - t545;
t346 = pkin(9) * t504;
t187 = t346 + (-pkin(10) * t367 - t318) * t365 - t609;
t247 = pkin(9) * t500 + t363 * t318;
t497 = t593 * qJ(5);
t225 = -t497 + t247;
t553 = t363 * t367;
t189 = pkin(10) * t553 + t225;
t105 = t187 * t369 - t189 * t366;
t585 = qJD(6) * t105 + t366 * t630 + t629 * t369;
t106 = t187 * t366 + t189 * t369;
t584 = -qJD(6) * t106 - t629 * t366 + t369 * t630;
t533 = qJD(2) * t368;
t538 = pkin(2) * t550 + pkin(9) * t551;
t271 = -pkin(1) * t364 - t538;
t282 = t364 * t419;
t92 = -t269 * t531 + t271 * t488 + t367 * t282 + t593 * t284;
t85 = (qJ(4) * t533 - qJD(4) * t370) * t364 + t92;
t296 = t367 * t573 + t470;
t207 = qJD(3) * t296 + t364 * t492;
t469 = t364 * t499;
t208 = qJD(2) * t469 - qJD(3) * t295;
t91 = t207 * pkin(3) - t208 * qJ(4) - t296 * qJD(4) + t285;
t35 = t363 * t91 + t365 * t85;
t583 = t624 * t623;
t323 = t586 * t363;
t324 = t586 * t365;
t219 = t323 * t369 - t324 * t366;
t306 = t363 * t366 + t365 * t369;
t120 = -t367 * t224 + t593 * t233;
t115 = t363 * t120;
t155 = pkin(3) * t250 + qJ(4) * t248;
t46 = t115 + (pkin(10) * t248 - t155) * t365 - t595 * t250;
t561 = t248 * t363;
t77 = t365 * t120 + t363 * t155;
t65 = t250 * qJ(5) + t77;
t55 = -pkin(10) * t561 + t65;
t581 = qJD(4) * t306 + qJD(6) * t219 - t366 * t46 - t369 * t55;
t220 = t323 * t366 + t324 * t369;
t580 = qJD(4) * t307 - qJD(6) * t220 + t366 * t55 - t369 * t46;
t519 = pkin(9) * t531;
t473 = t365 * t519;
t579 = -t473 + t633;
t520 = t593 * pkin(9);
t397 = -t365 * t497 + t520;
t578 = t595 * t228 + (t363 * t609 - t397) * qJD(3) - t608;
t577 = pkin(4) * t466 + t509 * t531 - t618;
t576 = -pkin(4) * t228 + (pkin(4) * t504 + t397) * qJD(3) + t608;
t575 = t363 * t519 + t618;
t574 = -t473 + t639;
t572 = qJ(4) * t213;
t570 = qJ(5) * t363;
t565 = t209 * t365;
t564 = t209 * qJ(4);
t563 = t213 * t365;
t562 = t248 * t250;
t557 = t298 * t367;
t300 = t368 * t594 + t370 * t456;
t556 = t300 * t367;
t555 = t360 * t371;
t549 = t365 * t125;
t544 = t367 * t370;
t111 = pkin(3) * t443 + qJD(4) - t120;
t384 = qJ(5) * t411 - t111;
t59 = t180 * pkin(4) - t384;
t543 = qJD(4) - t59;
t268 = -pkin(2) * t573 - t302;
t287 = t295 * pkin(3);
t479 = -t296 * qJ(4) + t287;
t132 = t268 + t479;
t157 = t593 * t269 + t367 * t271;
t133 = -qJ(4) * t550 + t157;
t74 = t363 * t132 + t365 * t133;
t293 = t306 * qJD(6);
t542 = -t293 * t367 - t366 * t424 + t369 * t425;
t541 = t366 * t425 - t606 * t367 + t369 * t424;
t156 = -t367 * t269 + t593 * t271;
t540 = t306 * t248 - t293;
t539 = -t248 * t307 - t606;
t536 = t594 * pkin(1) + pkin(8) * t501;
t361 = t368 ^ 2;
t362 = t370 ^ 2;
t535 = t361 - t362;
t527 = -qJD(4) + t111;
t518 = qJ(4) * t549;
t517 = t370 * t555;
t516 = t364 * t544;
t68 = t286 + t74;
t198 = t209 * pkin(3);
t515 = -pkin(4) * t565 - t209 * t570 - t198;
t200 = t213 * pkin(3);
t514 = -pkin(4) * t563 - t213 * t570 - t200;
t134 = pkin(3) * t550 - t156;
t288 = t298 * pkin(2);
t506 = t298 * t593;
t513 = -pkin(3) * t506 - t298 * t545 - t288;
t290 = t300 * pkin(2);
t505 = t300 * t593;
t512 = -pkin(3) * t505 - t300 * t545 - t290;
t510 = -g(1) * t556 - g(2) * t557 + g(3) * t516;
t507 = t125 * t593;
t495 = t593 * t272;
t493 = t364 * t533;
t487 = pkin(1) * t620;
t482 = pkin(3) + t570;
t34 = -t363 * t85 + t365 * t91;
t478 = qJD(5) * t363 - t248 * t600 + t121;
t76 = t155 * t365 - t115;
t73 = t132 * t365 - t363 * t133;
t246 = t365 * t318 - t346;
t477 = t526 ^ 2;
t475 = t368 * t443;
t29 = t207 * qJ(5) + t295 * qJD(5) + t35;
t472 = t368 * t517;
t93 = -t269 * t488 - t271 * t531 + t593 * t282 - t367 * t284;
t471 = pkin(3) * t469 + qJ(4) * t516 + t538;
t461 = t368 * t485;
t458 = -pkin(1) * t592 + pkin(8) * t503;
t455 = t364 * t371 * t573;
t214 = t301 * t593 + t367 * t501;
t141 = t214 * t363 - t300 * t365;
t453 = -g(1) * t137 + g(2) * t141;
t142 = t214 * t365 + t300 * t363;
t452 = g(1) * t138 - g(2) * t142;
t451 = -g(1) * t209 + g(2) * t213;
t450 = -g(1) * t298 + g(2) * t300;
t449 = g(1) * t301 + g(2) * t299;
t448 = t366 * t6 + t369 * t7;
t445 = t443 * t593;
t444 = -pkin(4) * t363 + t569;
t10 = t31 * t369 - t33 * t366;
t206 = t296 * t365 - t363 * t550;
t47 = -pkin(10) * t206 - t295 * t595 - t73;
t205 = t296 * t363 + t365 * t550;
t52 = pkin(10) * t205 + t68;
t16 = -t366 * t52 + t369 * t47;
t17 = t366 * t47 + t369 * t52;
t163 = t208 * t363 - t365 * t493;
t440 = t103 * t205 + t163 * t180;
t71 = t125 * t295 + t207 * t248;
t439 = -t180 ^ 2 - t621;
t436 = t205 * t369 - t206 * t366;
t114 = t205 * t366 + t206 * t369;
t432 = 0.2e1 * t480 + qJD(2);
t431 = qJ(4) * t104 + qJD(4) * t411;
t429 = t301 * pkin(2) + pkin(9) * t300 + t536;
t426 = qJ(5) * t206 - t134;
t421 = t180 * t561 - t568;
t420 = t103 + t616;
t418 = t214 * pkin(3) + t429;
t412 = g(1) * t594 + g(2) * t592;
t410 = -g(1) * t141 - g(2) * t137 - g(3) * t205;
t173 = -t298 * t504 - t299 * t365;
t175 = -t300 * t504 - t301 * t365;
t244 = t363 * t469 - t365 * t551;
t409 = g(1) * t175 + g(2) * t173 + g(3) * t244;
t174 = -t298 * t500 + t299 * t363;
t176 = -t300 * t500 + t301 * t363;
t408 = -g(1) * t176 - g(2) * t174 - g(3) * t245;
t406 = g(1) * t214 + g(2) * t210 + g(3) * t296;
t404 = t245 * pkin(4) + qJ(5) * t244 + t471;
t403 = -t299 * pkin(2) - t298 * pkin(9) + t458;
t402 = -t104 + t627;
t401 = -t180 * t250 + t363 * t596 - t549;
t13 = -t376 + t590;
t400 = -t13 + t407;
t399 = t407 + t405;
t396 = -t414 * t593 - t449;
t395 = pkin(3) * t493 + t93;
t393 = -pkin(3) * t210 + t403;
t392 = -qJ(4) * t568 - qJD(4) * t566 - t406;
t391 = t174 * pkin(4) + pkin(9) * t299 + qJ(5) * t173 + t513;
t390 = t176 * pkin(4) + pkin(9) * t301 + qJ(5) * t175 + t512;
t388 = qJD(3) * t445 - t367 * t272;
t385 = t435 - t488;
t383 = t142 * pkin(4) + qJ(5) * t141 + t418;
t164 = t208 * t365 + t363 * t493;
t382 = t103 * t206 + t104 * t205 + t163 * t411 + t164 * t180;
t381 = t103 * t295 + t125 * t205 + t163 * t248 + t180 * t207;
t379 = t407 + t57;
t378 = t103 * t553 + t180 * t425;
t72 = -t248 * t613 - t507;
t377 = -pkin(4) * t138 - qJ(5) * t137 + t393;
t375 = qJ(5) * t164 + qJD(5) * t206 + t395;
t374 = -t379 - t604;
t373 = t374 + t605;
t311 = -pkin(4) * t365 - t482;
t297 = t365 * t595 + t482;
t283 = t537 * qJD(1);
t278 = t306 * t367;
t277 = t366 * t546 - t367 * t552;
t270 = (pkin(9) - t444) * t367;
t226 = -t246 + t358;
t222 = (-pkin(9) - t600) * t367;
t118 = -qJDD(6) + t125;
t84 = t248 * t444 + t121;
t83 = t141 * t366 + t142 * t369;
t82 = t141 * t369 - t142 * t366;
t75 = pkin(4) * t205 - t426;
t69 = -pkin(4) * t295 - t73;
t67 = -pkin(4) * t250 - t76;
t63 = -t205 * t595 + t426;
t58 = t365 * t616 + t567;
t54 = qJD(6) * t436 + t163 * t366 + t164 * t369;
t53 = qJD(6) * t114 - t163 * t369 + t164 * t366;
t51 = -t250 * t411 + t365 * t596 + t554;
t49 = -pkin(4) * t248 + t446;
t40 = -t180 * t595 + t384;
t37 = t104 * t206 + t164 * t411;
t36 = t104 * t546 + t411 * t424;
t32 = pkin(4) * t163 - t375;
t30 = -pkin(4) * t207 - t34;
t26 = -t163 * t595 + t375;
t23 = pkin(10) * t163 + t29;
t22 = -pkin(10) * t164 - t207 * t595 - t34;
t21 = -t104 * t593 + t424 * t248 + (-t411 * t443 + t549) * t367;
t20 = t104 * t295 + t125 * t206 + t164 * t248 + t207 * t411;
t4 = -qJD(6) * t17 + t22 * t369 - t23 * t366;
t3 = qJD(6) * t16 + t22 * t366 + t23 * t369;
t1 = t10 * qJD(6) + t448;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t592 - g(2) * t594, t412, 0, 0 (qJDD(1) * t361 + 0.2e1 * t461) * t360 (t370 * t522 - t525 * t535) * t620, t364 * t432 * t532 + t368 * t607 (qJDD(1) * t362 - 0.2e1 * t461) * t360, t370 * t607 - t432 * t493, t427 * t573, -t285 * t433 + t302 * t427 + t186 * t573 + g(1) * t299 - g(2) * t301 + (-t486 + t524) * t487, -t284 * t433 - t537 * t427 - t185 * t573 + (-t485 - t522) * t487 + t450 ((-t280 * qJD(2) + qJDD(1) * t537 + t185) * t370 + (-qJD(2) * t283 - qJDD(1) * t302 - t186) * t368 - t412) * t364, t360 * qJDD(1) * pkin(1) ^ 2 - g(1) * t458 - g(2) * t536 + t185 * t537 + t186 * t302 - t280 * t285 + t283 * t284, -t124 * t296 + t208 * t250, t124 * t295 - t125 * t296 - t207 * t250 - t208 * t248, -t208 * t443 + t296 * t272 + (t124 * t370 + t250 * t533) * t364, t71, t207 * t443 - t295 * t272 + (t125 * t370 - t248 * t533) * t364 (-qJD(2) * t475 - t272 * t370) * t364, -t93 * t443 + t156 * t272 + t285 * t248 + t268 * t125 + t154 * t295 + t223 * t207 + g(1) * t210 - g(2) * t214 + (t120 * t533 - t370 * t57) * t364, t92 * t443 - t157 * t272 + t285 * t250 - t268 * t124 + t154 * t296 + t223 * t208 + (-t121 * t533 - t370 * t414) * t364 + t451, -t120 * t208 - t121 * t207 + t124 * t156 - t125 * t157 - t248 * t92 - t250 * t93 + t295 * t414 - t296 * t57 - t450, -g(1) * t403 - g(2) * t429 + t120 * t93 + t121 * t92 + t154 * t268 + t57 * t156 - t157 * t414 + t223 * t285, t37, -t382, t20, t440, -t381, t71, t103 * t134 + t111 * t163 + t125 * t73 + t14 * t295 - t180 * t395 - t205 * t405 + t207 * t60 + t248 * t34 + t452, t104 * t134 + t111 * t164 - t125 * t74 - t15 * t295 - t206 * t405 - t207 * t61 - t248 * t35 - t395 * t411 + t453, -t103 * t74 - t104 * t73 - t14 * t206 - t15 * t205 - t163 * t61 - t164 * t60 - t180 * t35 - t34 * t411 - t451, t15 * t74 + t61 * t35 + t14 * t73 + t60 * t34 - t405 * t134 - t111 * t395 - g(1) * (t393 - t564) - g(2) * (t418 + t572) t37, t20, t382, t71, t381, t440, t103 * t75 - t12 * t295 - t125 * t69 + t13 * t205 + t163 * t59 + t180 * t32 - t207 * t49 - t248 * t30 + t452, -t103 * t68 + t104 * t69 + t12 * t206 - t163 * t50 + t164 * t49 - t180 * t29 - t205 * t9 + t30 * t411 - t451, -t104 * t75 + t125 * t68 - t13 * t206 - t164 * t59 + t207 * t50 + t248 * t29 + t295 * t9 - t32 * t411 - t453, t9 * t68 + t50 * t29 + t13 * t75 + t59 * t32 + t12 * t69 + t49 * t30 - g(1) * (t377 - t564) - g(2) * (t383 + t572) -t114 * t27 + t54 * t624, -t114 * t28 - t27 * t436 - t53 * t624 - t54 * t623, -t114 * t118 - t207 * t624 + t27 * t295 + t526 * t54, -t28 * t436 + t53 * t623, -t118 * t436 + t207 * t623 + t28 * t295 - t526 * t53, t118 * t295 - t207 * t526, g(1) * t637 - g(2) * t83 - t10 * t207 - t16 * t118 - t2 * t295 + t26 * t623 + t63 * t28 + t4 * t526 + t40 * t53 - t8 * t436, g(1) * t638 - g(2) * t82 + t1 * t295 + t11 * t207 + t8 * t114 + t17 * t118 + t26 * t624 - t63 * t27 - t3 * t526 + t40 * t54, t1 * t436 - t10 * t54 - t11 * t53 - t114 * t2 + t16 * t27 - t17 * t28 - t3 * t623 - t4 * t624 + t451, t1 * t17 + t11 * t3 + t2 * t16 + t10 * t4 + t8 * t63 + t40 * t26 - g(1) * (-pkin(5) * t138 - t209 * t586 + t377) - g(2) * (pkin(5) * t142 + t213 * t586 + t383); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t472, t535 * t555, -t370 * t455 + t484, t472, t368 * t455 + t343, t427, pkin(1) * t368 * t555 + g(1) * t300 + g(2) * t298 - g(3) * t550 + t283 * t433 + t186, pkin(1) * t517 + t280 * t433 + (pkin(8) * t525 + g(3)) * t551 + t449 - t511, 0, 0, -t124 * t367 - t250 * t385, -t124 * t593 + t385 * t248 + (-t125 + t615) * t367 (-t250 * t368 + t370 * t445) * t534 - t388, t72, qJD(3) * t613 + t495 + (t248 * t368 - t370 * t613) * t534, t475 * t534, -pkin(2) * t125 - t154 * t593 + t223 * t531 + t168 * t443 - t283 * t248 + g(1) * t505 + g(2) * t506 + t388 * pkin(9) + (-g(3) * t499 + (-t120 * t368 - t223 * t544) * qJD(1)) * t364, pkin(2) * t124 + t154 * t367 + t223 * t488 - t169 * t443 - t283 * t250 + (t121 * t368 - t223 * t499) * t534 + (-t443 * t531 - t495) * pkin(9) + t510, -g(3) * t551 + t168 * t250 + t169 * t248 + t385 * t120 + (t250 * t488 - t507) * pkin(9) + (-t57 + t611 + (-t124 + t631) * pkin(9)) * t367 + t396, -t154 * pkin(2) - t121 * t169 - t120 * t168 - t223 * t283 + g(1) * t290 + g(2) * t288 - g(3) * t538 + (-t57 * t367 + (-t120 * t593 - t121 * t367) * qJD(3) + t396) * pkin(9), t36, -t597, t21, t378, t622, t72, -t14 * t593 - t111 * t228 + t246 * t125 + t415 * t180 + t575 * t248 + (t111 * t504 + t180 * t520) * qJD(3) + (pkin(9) * t103 - t363 * t405 - t443 * t60) * t367 + t408, t15 * t593 - t111 * t229 - t247 * t125 + t415 * t411 - t574 * t248 + (t111 * t500 + t411 * t520) * qJD(3) + (pkin(9) * t104 - t365 * t405 + t443 * t61) * t367 + t409, -t247 * t103 - t246 * t104 + t61 * t228 + t60 * t229 + (-t14 * t365 - t15 * t363) * t367 - t575 * t411 - t574 * t180 + (-t500 * t60 - t504 * t61) * qJD(3) - t510, t15 * t247 + t14 * t246 + t111 * t415 - g(1) * t512 - g(2) * t513 - g(3) * t471 + t574 * t61 + t575 * t60 + (t111 * t488 - t367 * t405 - t449) * pkin(9), t36, t21, t597, t72, -t622, t378, t12 * t593 + t270 * t103 - t226 * t125 + t425 * t59 - t577 * t248 + t576 * t180 + (t13 * t363 + t443 * t49) * t367 + t408, -t225 * t103 + t226 * t104 + t50 * t228 - t49 * t229 + (t12 * t365 - t363 * t9) * t367 + t577 * t411 - t579 * t180 + (t49 * t500 - t50 * t504) * qJD(3) - t510, -t9 * t593 - t270 * t104 + t225 * t125 - t424 * t59 + t579 * t248 - t576 * t411 + (-t13 * t365 - t443 * t50) * t367 - t409, -g(1) * t390 - g(2) * t391 - g(3) * t404 + t12 * t226 + t13 * t270 + t9 * t225 + t49 * t577 + t50 * t579 + t576 * t59, -t27 * t278 + t541 * t624, t27 * t277 - t278 * t28 - t541 * t623 + t542 * t624, -t278 * t118 - t27 * t593 + t526 * t541 + t613 * t624, t277 * t28 - t542 * t623, t277 * t118 - t28 * t593 + t526 * t542 - t613 * t623, -t118 * t593 + t526 * t613, -t105 * t118 + t2 * t593 + t222 * t28 + t8 * t277 - g(1) * (t175 * t366 + t176 * t369) - g(2) * (t173 * t366 + t174 * t369) - g(3) * (t244 * t366 + t245 * t369) + t578 * t623 - t542 * t40 + t584 * t526 + t10 * t613, t106 * t118 - t1 * t593 - t222 * t27 + t8 * t278 - g(1) * (t175 * t369 - t176 * t366) - g(2) * (t173 * t369 - t174 * t366) - g(3) * (t244 * t369 - t245 * t366) + t541 * t40 - t585 * t526 - t11 * t613 + t578 * t624, -t1 * t277 - t10 * t541 + t105 * t27 - t106 * t28 + t11 * t542 - t2 * t278 - t584 * t624 - t585 * t623 + t510, t1 * t106 + t2 * t105 + t8 * t222 - g(1) * (pkin(5) * t176 + pkin(10) * t556 + t390) - g(2) * (pkin(5) * t174 + pkin(10) * t557 + t391) - g(3) * (pkin(5) * t245 - pkin(10) * t516 + t404) + t578 * t40 + t585 * t11 + t584 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t250 ^ 2 - t596, -t248 * t443 - t124, -t562, -t125 - t615, t272, -t223 * t250 + t379 - t611, -t120 * t443 + t223 * t248 + t406 + t414, 0, 0, t58, -t601, t51, t421, -t401, -t562, -qJ(4) * t554 - pkin(3) * t103 - t121 * t180 - t250 * t60 + (t363 * t527 - t76) * t248 + t399 * t365, -t518 - pkin(3) * t104 - t121 * t411 + t250 * t61 + (t365 * t527 + t77) * t248 - t399 * t363, t180 * t77 + t411 * t76 + (-t248 * t60 + t15) * t365 + (-t248 * t61 - t14 + t431) * t363 + t392, t405 * pkin(3) + g(1) * t200 + g(2) * t198 + g(3) * t287 - t111 * t121 - t60 * t76 - t61 * t77 + (-t363 * t60 + t365 * t61) * qJD(4) + (-t14 * t363 + t15 * t365 - t406) * qJ(4), t58, t51, t601, -t562, t401, t421, t103 * t311 - t180 * t84 + t248 * t67 + t250 * t49 + t400 * t365 + (-qJ(4) * t125 - qJD(5) * t180 - t248 * t543) * t363, t180 * t65 - t411 * t67 + (t248 * t49 + t9) * t365 + (t431 + t619) * t363 + t392, t518 - t104 * t311 + t411 * t84 - t250 * t50 + (t365 * t543 - t65) * t248 + (t400 + t530) * t363, t13 * t311 - t50 * t65 - t59 * t84 - t49 * t67 - g(1) * (qJ(4) * t214 + t514) - g(2) * (qJ(4) * t210 + t515) - g(3) * (-t479 + t610) + (qJ(4) * t9 + qJD(4) * t50) * t365 + (qJ(4) * t12 + qJD(4) * t49 - qJD(5) * t59) * t363, -t27 * t307 + t540 * t624, t27 * t306 - t28 * t307 - t539 * t624 - t540 * t623, -t118 * t307 + t250 * t624 + t526 * t540, t28 * t306 + t539 * t623, t118 * t306 - t250 * t623 - t526 * t539, t526 * t250, t10 * t250 - t219 * t118 + t297 * t28 + t306 * t599 + t40 * t539 + t478 * t623 + t526 * t580, -t11 * t250 + t220 * t118 - t297 * t27 + t307 * t599 + t40 * t540 + t478 * t624 - t526 * t581, -t1 * t306 - t10 * t540 - t11 * t539 - t2 * t307 + t219 * t27 - t220 * t28 - t580 * t624 - t581 * t623 + t406, t1 * t220 + t2 * t219 + t8 * t297 - g(1) * (-pkin(5) * t563 + t214 * t586 + t514) - g(2) * (-pkin(5) * t565 + t210 * t586 + t515) - g(3) * (-pkin(5) * t560 + t296 * t586 - t287 + t610) + t478 * t40 + t581 * t11 + t580 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420, -t402, t439, t180 * t61 + t411 * t60 + t374, 0, 0, 0, 0, 0, 0, t420, t439, t402, t180 * t50 - t411 * t49 + t373 + t590, 0, 0, 0, 0, 0, 0, -t28 - t628, t27 + t632, t635 + t636, -t10 * t624 - t11 * t623 + t373 + t617; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180 * t411 - t125, t104 + t627, -t596 - t621, t411 * t59 + t410 + t619, 0, 0, 0, 0, 0, 0, -t118 * t369 - t366 * t477 - t411 * t623, t118 * t366 - t369 * t477 - t411 * t624, t366 * t634 - t625 * t369, -t411 * t40 + t626 * t369 + (-t10 * t526 + t1) * t366 + t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t583, t635 - t636, t625, -t583, t634, -t118, -g(1) * t82 - g(2) * t638 - g(3) * t436 - t40 * t624 + t626, t40 * t623 + g(1) * t83 + g(2) * t637 + g(3) * t114 - t448 + (t526 - qJD(6)) * t10, 0, 0;];
tau_reg  = t5;
