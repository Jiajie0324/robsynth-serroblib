% Calculate vector of inverse dynamics joint torques for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPPR9_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPPR9_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRRPPR9_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:18:25
% EndTime: 2019-03-09 16:18:51
% DurationCPUTime: 20.04s
% Computational Cost: add. (11652->838), mult. (29018->1083), div. (0->0), fcn. (23196->12), ass. (0->329)
t1015 = sin(qJ(1));
t834 = sin(qJ(2));
t837 = cos(qJ(2));
t1005 = cos(pkin(6));
t1016 = cos(qJ(1));
t905 = t1005 * t1016;
t769 = t1015 * t837 + t834 * t905;
t833 = sin(qJ(3));
t836 = cos(qJ(3));
t830 = sin(pkin(6));
t939 = t830 * t1016;
t686 = t769 * t836 - t833 * t939;
t768 = t1015 * t834 - t837 * t905;
t829 = sin(pkin(11));
t831 = cos(pkin(11));
t626 = t686 * t829 - t768 * t831;
t627 = t686 * t831 + t768 * t829;
t832 = sin(qJ(6));
t835 = cos(qJ(6));
t1039 = t626 * t835 - t627 * t832;
t1038 = t626 * t832 + t627 * t835;
t923 = t1005 * qJD(1);
t884 = t923 + qJD(2);
t967 = qJD(1) * t830;
t937 = t834 * t967;
t724 = t833 * t884 + t836 * t937;
t936 = t837 * t967;
t794 = -qJD(3) + t936;
t661 = t724 * t829 + t831 * t794;
t886 = t831 * t724 - t794 * t829;
t999 = t886 * t832;
t593 = -t835 * t661 + t999;
t911 = t833 * t937;
t722 = -t836 * t884 + t911;
t955 = qJD(6) - t722;
t1037 = t593 * t955;
t595 = t661 * t832 + t835 * t886;
t1036 = t595 * t955;
t1035 = t661 * t722;
t989 = t830 * t837;
t946 = t829 * t989;
t917 = t836 * t946;
t703 = qJD(1) * t917 - t831 * t937;
t963 = qJD(3) * t836;
t1034 = -t829 * t963 + t703;
t985 = t836 * t837;
t719 = (t829 * t834 + t831 * t985) * t830;
t704 = qJD(1) * t719;
t1033 = -t831 * t963 + t704;
t953 = qJDD(1) * t834;
t926 = t830 * t953;
t954 = qJD(1) * qJD(2);
t927 = t837 * t954;
t1032 = t830 * t927 + t926;
t786 = -pkin(3) * t836 - qJ(4) * t833 - pkin(2);
t860 = qJD(3) * t884;
t919 = t1005 * qJDD(1);
t879 = t919 + qJDD(2);
t965 = qJD(2) * t837;
t933 = t833 * t965;
t616 = (qJD(1) * (t834 * t963 + t933) + t833 * t953) * t830 + t833 * t860 - t836 * t879;
t1031 = t886 ^ 2;
t909 = pkin(1) * t923;
t753 = pkin(8) * t936 + t834 * t909;
t699 = pkin(9) * t884 + t753;
t881 = -pkin(2) * t837 - pkin(9) * t834 - pkin(1);
t708 = t881 * t967;
t611 = -t833 * t699 + t836 * t708;
t644 = pkin(3) * t724 + qJ(4) * t722;
t574 = t831 * t611 + t829 * t644;
t564 = t724 * qJ(5) + t574;
t962 = qJD(4) * t831;
t1029 = -t564 + t962;
t940 = pkin(1) * t1005;
t990 = t830 * t834;
t876 = -pkin(8) * t990 + t837 * t940;
t750 = -pkin(8) * t937 + t837 * t909;
t902 = pkin(2) * t834 - pkin(9) * t837;
t751 = t902 * t967;
t974 = -t833 * t750 + t836 * t751;
t869 = pkin(3) * t937 + t974;
t987 = t831 * t833;
t1027 = qJ(5) * t704 - qJD(5) * t987 + t869;
t1026 = (qJDD(2) + 0.2e1 * t919) * t830;
t992 = t829 * t835;
t775 = -t831 * t832 + t992;
t973 = t836 * t750 + t833 * t751;
t632 = qJ(4) * t937 + t973;
t894 = pkin(3) * t833 - qJ(4) * t836;
t659 = t894 * t936 + t753;
t762 = qJD(3) * t894 - qJD(4) * t833;
t1025 = t829 * t632 + (-t659 + t762) * t831;
t952 = qJDD(1) * t837;
t810 = t830 * t952;
t928 = t834 * t954;
t908 = t830 * t928;
t742 = qJDD(3) - t810 + t908;
t880 = qJD(2) * t909;
t906 = pkin(1) * t919;
t942 = pkin(8) * t810 + t834 * t906 + t837 * t880;
t850 = -pkin(8) * t908 + t942;
t642 = pkin(9) * t879 + t850;
t874 = t902 * qJD(2);
t646 = (qJD(1) * t874 + qJDD(1) * t881) * t830;
t964 = qJD(3) * t833;
t868 = t836 * t642 + t833 * t646 - t699 * t964 + t708 * t963;
t547 = qJ(4) * t742 - qJD(4) * t794 + t868;
t615 = -qJD(3) * t911 + t833 * t879 + (t860 + t1032) * t836;
t914 = pkin(8) * t1032 + t834 * t880 - t837 * t906;
t643 = -pkin(2) * t879 + t914;
t548 = t616 * pkin(3) - t615 * qJ(4) - t724 * qJD(4) + t643;
t529 = -t829 * t547 + t548 * t831;
t892 = qJDD(5) - t529;
t527 = -pkin(4) * t616 + t892;
t698 = -pkin(2) * t884 - t750;
t599 = t722 * pkin(3) - t724 * qJ(4) + t698;
t612 = t836 * t699 + t833 * t708;
t603 = -qJ(4) * t794 + t612;
t560 = t829 * t599 + t831 * t603;
t553 = t722 * qJ(5) + t560;
t1024 = -t553 * t722 + t527;
t1023 = pkin(3) * t742 - qJDD(4);
t586 = t831 * t632 + t829 * t659;
t910 = t833 * t936;
t1022 = -qJD(5) * t836 - t586 + (-t910 + t964) * qJ(5);
t685 = t769 * t833 + t836 * t939;
t904 = t1005 * t1015;
t771 = t1016 * t837 - t834 * t904;
t938 = t830 * t1015;
t689 = t771 * t833 - t836 * t938;
t765 = -t1005 * t836 + t833 * t990;
t862 = g(1) * t689 + g(2) * t685 + g(3) * t765;
t596 = t615 * t829 - t831 * t742;
t597 = t615 * t831 + t742 * t829;
t920 = -t835 * t596 + t832 * t597;
t535 = t595 * qJD(6) + t920;
t1001 = qJ(5) * t831;
t1017 = pkin(4) + pkin(5);
t1020 = t1017 * t829 - t1001;
t916 = t833 * t642 - t836 * t646 + t699 * t963 + t708 * t964;
t857 = -t916 + t1023;
t961 = qJD(5) * t886;
t841 = qJ(5) * t597 + t857 + t961;
t523 = -t1017 * t596 + t841;
t1019 = t523 + t862;
t1018 = t722 ^ 2;
t838 = qJD(1) ^ 2;
t1012 = pkin(4) * t831;
t1011 = pkin(10) * t722;
t1010 = pkin(10) * t833;
t1006 = -pkin(10) + qJ(4);
t1004 = qJ(4) * t616;
t1003 = qJ(4) * t831;
t998 = t722 * t794;
t997 = t724 * t794;
t872 = t794 * t833;
t826 = t830 ^ 2;
t993 = t826 * t838;
t991 = t829 * t836;
t986 = t831 * t836;
t530 = t831 * t547 + t829 * t548;
t969 = pkin(8) * t989 + t834 * t940;
t739 = pkin(9) * t1005 + t969;
t970 = pkin(2) * t989 + pkin(9) * t990;
t741 = -pkin(1) * t830 - t970;
t752 = t830 * t874;
t754 = t876 * qJD(2);
t867 = -t739 * t964 + t741 * t963 + t833 * t752 + t836 * t754;
t966 = qJD(2) * t834;
t582 = (qJ(4) * t966 - qJD(4) * t837) * t830 + t867;
t766 = t1005 * t833 + t836 * t990;
t683 = qJD(3) * t766 + t830 * t933;
t934 = t830 * t965;
t684 = -qJD(3) * t765 + t836 * t934;
t755 = t969 * qJD(2);
t588 = t683 * pkin(3) - t684 * qJ(4) - t766 * qJD(4) + t755;
t542 = t831 * t582 + t829 * t588;
t738 = -pkin(2) * t1005 - t876;
t757 = t765 * pkin(3);
t922 = -t766 * qJ(4) + t757;
t623 = t738 + t922;
t948 = qJ(4) * t989;
t975 = t836 * t739 + t833 * t741;
t624 = -t948 + t975;
t571 = t829 * t623 + t831 * t624;
t774 = t829 * t832 + t831 * t835;
t984 = qJD(6) * t775 * t833 - t703 * t832 - t704 * t835 + t774 * t963;
t748 = t774 * t833;
t983 = qJD(6) * t748 - t1033 * t832 + t1034 * t835;
t733 = t829 * t762;
t950 = pkin(9) * t964;
t678 = -t831 * t950 + t733;
t982 = t678 + t1022;
t865 = -pkin(9) - t1020;
t981 = t1017 * t703 + t865 * t963 - t1027;
t941 = -pkin(9) * t829 - pkin(4);
t980 = pkin(4) * t910 + t941 * t964 - t1025;
t893 = -pkin(4) * t829 + t1001;
t878 = pkin(9) - t893;
t979 = -pkin(4) * t703 + t878 * t963 + t1027;
t978 = t829 * t950 + t1025;
t977 = t678 - t586;
t976 = -t833 * t739 + t836 * t741;
t972 = t955 * t774;
t958 = qJD(6) * t835;
t959 = qJD(6) * t832;
t971 = -t722 * t775 + t829 * t958 - t831 * t959;
t721 = pkin(9) * t986 + t829 * t786;
t827 = t834 ^ 2;
t968 = -t837 ^ 2 + t827;
t602 = pkin(3) * t794 + qJD(4) - t611;
t957 = -qJD(4) + t602;
t852 = qJ(5) * t886 - t602;
t558 = pkin(4) * t661 - t852;
t956 = qJD(4) - t558;
t816 = pkin(3) * t989;
t949 = t616 * t1003;
t947 = t837 * t993;
t945 = t832 * t596 + t835 * t597 + t661 * t958;
t567 = t765 * qJ(5) + t571;
t625 = t816 - t976;
t944 = t786 * t768;
t770 = t1016 * t834 + t837 * t904;
t943 = t786 * t770;
t935 = t830 * t966;
t929 = 0.2e1 * pkin(1) * t826;
t924 = qJ(5) * t829 + pkin(3);
t521 = -pkin(10) * t597 - t1017 * t616 + t892;
t524 = t616 * qJ(5) + t722 * qJD(5) + t530;
t522 = pkin(10) * t596 + t524;
t921 = t835 * t521 - t832 * t522;
t541 = -t829 * t582 + t588 * t831;
t559 = t599 * t831 - t829 * t603;
t606 = t829 * t611;
t573 = t644 * t831 - t606;
t570 = t623 * t831 - t829 * t624;
t812 = pkin(9) * t991;
t720 = t786 * t831 - t812;
t918 = qJD(5) * t829 - t1020 * t722 + t612;
t536 = t683 * qJ(5) + t765 * qJD(5) + t542;
t915 = -t739 * t963 - t741 * t964 + t836 * t752 - t833 * t754;
t913 = t836 * t816 + t833 * t948 + t970;
t903 = t830 * t838 * t1005;
t690 = t771 * t836 + t833 * t938;
t630 = t690 * t829 - t770 * t831;
t901 = g(1) * t626 - g(2) * t630;
t631 = t690 * t831 + t770 * t829;
t900 = g(1) * t627 - g(2) * t631;
t899 = -g(1) * t685 + g(2) * t689;
t898 = g(1) * t771 + g(2) * t769;
t700 = -qJ(5) * t836 + t721;
t897 = qJD(5) - t559;
t668 = t1010 * t829 + t700;
t896 = -pkin(10) * t704 + qJD(6) * t668 - t1017 * t910 - (-pkin(10) * t986 + (-pkin(5) + t941) * t833) * qJD(3) + t1025;
t824 = t836 * pkin(4);
t666 = pkin(5) * t836 + t812 + t824 + (-t786 - t1010) * t831;
t895 = -pkin(10) * t703 + qJD(6) * t666 + t733 + (-pkin(9) * t987 + pkin(10) * t991) * qJD(3) + t1022;
t891 = t832 * t521 + t835 * t522;
t538 = -pkin(10) * t886 - t1017 * t722 + t897;
t540 = pkin(10) * t661 + t553;
t525 = t538 * t835 - t540 * t832;
t526 = t538 * t832 + t540 * t835;
t682 = t766 * t831 - t946;
t550 = -pkin(10) * t682 - t1017 * t765 - t570;
t681 = t766 * t829 + t831 * t989;
t554 = pkin(10) * t681 + t567;
t890 = t550 * t835 - t554 * t832;
t889 = t550 * t832 + t554 * t835;
t887 = t681 * t835 - t682 * t832;
t605 = t681 * t832 + t682 * t835;
t883 = 0.2e1 * t923 + qJD(2);
t882 = qJ(4) * t597 + qJD(4) * t886;
t877 = qJ(5) * t682 - t625;
t789 = t1006 * t831;
t871 = qJD(4) * t829 - qJD(6) * t789 - t606 - (-t644 + t1011) * t831 + t1017 * t724;
t788 = t1006 * t829;
t870 = qJD(6) * t788 + t1011 * t829 + t1029;
t866 = t886 * t959 - t945;
t654 = -t768 * t991 - t769 * t831;
t656 = -t770 * t991 - t771 * t831;
t718 = -t831 * t990 + t917;
t864 = g(1) * t656 + g(2) * t654 + g(3) * t718;
t655 = -t768 * t986 + t769 * t829;
t657 = -t770 * t986 + t771 * t829;
t863 = -g(1) * t657 - g(2) * t655 - g(3) * t719;
t861 = -g(1) * t690 - g(2) * t686 - g(3) * t766;
t859 = t879 * MDP(8);
t855 = -g(1) * t770 - g(2) * t768 + g(3) * t989;
t528 = pkin(4) * t596 - t841;
t854 = -t528 + t862;
t853 = t857 + t862;
t851 = pkin(3) * t935 + t915;
t849 = -t596 * t1003 - t661 * t962 + t861;
t848 = t1016 * pkin(1) + t771 * pkin(2) + t690 * pkin(3) + pkin(8) * t938 + pkin(9) * t770 + qJ(4) * t689;
t846 = -pkin(9) * t742 - t698 * t794;
t844 = t862 - t916;
t843 = -pkin(1) * t1015 - t769 * pkin(2) - pkin(3) * t686 + pkin(8) * t939 - t768 * pkin(9) - qJ(4) * t685;
t842 = pkin(9) * qJD(3) * t794 - t643 - t855;
t649 = t684 * t831 + t829 * t935;
t840 = qJ(5) * t649 + qJD(5) * t682 + t851;
t779 = -t924 - t1012;
t767 = t1017 * t831 + t924;
t747 = t832 * t987 - t833 * t992;
t740 = t878 * t833;
t701 = -t720 + t824;
t697 = t865 * t833;
t675 = t689 * pkin(3);
t673 = t685 * pkin(3);
t648 = t684 * t829 - t831 * t935;
t609 = -qJDD(6) + t616;
t581 = t722 * t893 + t612;
t580 = t630 * t832 + t631 * t835;
t579 = t630 * t835 - t631 * t832;
t572 = pkin(4) * t681 - t877;
t568 = -pkin(4) * t765 - t570;
t566 = -pkin(4) * t724 - t573;
t562 = -t1017 * t681 + t877;
t556 = qJD(6) * t887 + t648 * t832 + t649 * t835;
t555 = qJD(6) * t605 - t648 * t835 + t649 * t832;
t552 = -pkin(4) * t722 + t897;
t545 = -t1017 * t661 + t852;
t539 = pkin(4) * t648 - t840;
t537 = -pkin(4) * t683 - t541;
t533 = -t1017 * t648 + t840;
t532 = pkin(10) * t648 + t536;
t531 = -pkin(10) * t649 - t1017 * t683 - t541;
t519 = -qJD(6) * t526 + t921;
t518 = qJD(6) * t525 + t891;
t1 = [(t556 * t595 - t605 * t866) * MDP(26) + (-t530 * t765 - t542 * t722 - t560 * t683 - t571 * t616 + t597 * t625 + t602 * t649 - t682 * t857 - t851 * t886 - t901) * MDP(19) + (t529 * t765 + t541 * t722 + t559 * t683 + t570 * t616 + t596 * t625 + t602 * t648 - t661 * t851 - t681 * t857 + t900) * MDP(18) + (-g(1) * t843 - g(2) * t848 + t529 * t570 + t530 * t571 + t559 * t541 + t560 * t542 - t602 * t851 - t625 * t857) * MDP(21) + (-t535 * t605 - t555 * t595 - t556 * t593 - t866 * t887) * MDP(27) + (-t915 * t794 + t976 * t742 + t755 * t722 + t738 * t616 + t643 * t765 + t698 * t683 + g(1) * t686 - g(2) * t690 + (t611 * t966 + t837 * t916) * t830) * MDP(16) + (t556 * t955 - t595 * t683 - t605 * t609 + t765 * t866) * MDP(28) + (t535 * t765 - t555 * t955 + t593 * t683 - t609 * t887) * MDP(29) + (t609 * t765 - t683 * t955) * MDP(30) + (0.2e1 * (t834 * t952 - t954 * t968) * MDP(5) + (qJDD(1) * t827 + 0.2e1 * t834 * t927) * MDP(4)) * t826 + (-t529 * t682 - t530 * t681 - t541 * t886 - t542 * t661 - t559 * t649 - t560 * t648 - t570 * t597 - t571 * t596 - t899) * MDP(20) + (-t524 * t681 + t527 * t682 - t536 * t661 + t537 * t886 + t552 * t649 - t553 * t648 - t567 * t596 + t568 * t597 - t899) * MDP(23) + (t524 * t765 - t528 * t682 + t536 * t722 - t539 * t886 + t553 * t683 - t558 * t649 + t567 * t616 - t572 * t597 + t901) * MDP(24) + ((-qJD(6) * t889 + t531 * t835 - t532 * t832) * t955 - t890 * t609 - t519 * t765 - t525 * t683 + t533 * t593 + t562 * t535 - t523 * t887 + t545 * t555 + g(1) * t1038 - g(2) * t580) * MDP(31) + (-(qJD(6) * t890 + t531 * t832 + t532 * t835) * t955 + t889 * t609 + t518 * t765 + t526 * t683 + t533 * t595 - t562 * t866 + t523 * t605 + t545 * t556 + g(1) * t1039 - g(2) * t579) * MDP(32) + (g(1) * t1016 + g(2) * t1015) * MDP(3) + (g(1) * t1015 - g(2) * t1016) * MDP(2) + (t1026 * t837 - t883 * t935) * MDP(7) + (t1026 * t834 + t883 * t934) * MDP(6) + (t683 * t794 - t742 * t765 + (t616 * t837 - t722 * t966) * t830) * MDP(14) + (-t684 * t794 + t742 * t766 + (-t615 * t837 + t724 * t966) * t830) * MDP(13) + (-t755 * t884 + t876 * t879 - t914 * t1005 + g(1) * t769 - g(2) * t771 + (-t928 + t952) * t929) * MDP(9) + t1005 * t859 + (-t754 * t884 - t969 * t879 - t850 * t1005 - g(1) * t768 + g(2) * t770 + (-t927 - t953) * t929) * MDP(10) + (-t527 * t765 + t528 * t681 - t537 * t722 + t539 * t661 - t552 * t683 + t558 * t648 - t568 * t616 + t572 * t596 + t900) * MDP(22) + (t867 * t794 - t975 * t742 + t755 * t724 + t738 * t615 + t643 * t766 + t698 * t684 + (-t612 * t966 + t837 * t868) * t830 + t899) * MDP(17) + (-t615 * t765 - t616 * t766 - t683 * t724 - t684 * t722) * MDP(12) + (t615 * t766 + t684 * t724) * MDP(11) + (-t742 * t837 - t794 * t966) * t830 * MDP(15) + (t524 * t567 + t553 * t536 + t528 * t572 + t558 * t539 + t527 * t568 + t552 * t537 - g(1) * (-pkin(4) * t627 - qJ(5) * t626 + t843) - g(2) * (pkin(4) * t631 + qJ(5) * t630 + t848)) * MDP(25) + qJDD(1) * MDP(1); (t595 * t984 - t748 * t866) * MDP(26) + (-t535 * t748 - t593 * t984 - t595 * t983 + t747 * t866) * MDP(27) + (-t602 * t704 - t616 * t721 + t869 * t886 - t977 * t722 + (t530 + (pkin(9) * t886 + t602 * t831) * qJD(3)) * t836 + (pkin(9) * t597 + t560 * t794 - t831 * t857) * t833 + t864) * MDP(19) + (t530 * t721 + t529 * t720 + t602 * t869 - g(1) * t943 - g(2) * t944 - g(3) * t913 + t977 * t560 + t978 * t559 + (t602 * t963 - t833 * t857 - t898) * pkin(9)) * MDP(21) + (-t602 * t703 + t616 * t720 + t869 * t661 + t978 * t722 + (-t529 + (pkin(9) * t661 + t602 * t829) * qJD(3)) * t836 + (pkin(9) * t596 - t559 * t794 - t829 * t857) * t833 + t863) * MDP(18) + (t595 * t872 - t609 * t748 - t836 * t866 + t955 * t984) * MDP(28) + (-(t666 * t835 - t668 * t832) * t609 + t519 * t836 + t697 * t535 + t523 * t747 - g(1) * (t656 * t832 + t657 * t835) - g(2) * (t654 * t832 + t655 * t835) - g(3) * (t718 * t832 + t719 * t835) - (t832 * t895 + t835 * t896) * t955 + t981 * t593 + t983 * t545 + t525 * t872) * MDP(31) + ((t666 * t832 + t668 * t835) * t609 - t518 * t836 - t697 * t866 + t523 * t748 - g(1) * (t656 * t835 - t657 * t832) - g(2) * (t654 * t835 - t655 * t832) - g(3) * (t718 * t835 - t719 * t832) - (-t832 * t896 + t835 * t895) * t955 + t981 * t595 + t984 * t545 - t526 * t872) * MDP(32) + (-t535 * t836 - t593 * t872 + t609 * t747 - t955 * t983) * MDP(29) + (-t609 * t836 + t872 * t955) * MDP(30) + (t527 * t836 + t596 * t740 - t616 * t701 - t980 * t722 + t979 * t661 - t1034 * t558 + (t528 * t829 + t552 * t794) * t833 + t863) * MDP(22) + (t559 * t704 + t560 * t703 - t596 * t721 - t597 * t720 - t978 * t886 - t977 * t661 + (-t559 * t831 - t560 * t829) * t963 + (-t529 * t831 - t530 * t829 - t855) * t833) * MDP(20) + (-t552 * t704 + t553 * t703 - t596 * t700 + t597 * t701 + t980 * t886 - t982 * t661 + (t552 * t831 - t553 * t829) * t963 + (-t524 * t829 + t527 * t831 - t855) * t833) * MDP(23) + (-t524 * t836 - t597 * t740 + t616 * t700 + t982 * t722 - t979 * t886 + t1033 * t558 + (-t528 * t831 - t553 * t794) * t833 - t864) * MDP(24) + t968 * MDP(5) * t993 + t794 * MDP(15) * t937 + (-t837 * t903 + t926) * MDP(6) + t859 + (pkin(1) * t947 + t750 * t884 + (pkin(8) * t954 + g(3)) * t990 + t898 - t942) * MDP(10) + (pkin(1) * t834 * t993 + t753 * t884 - t855 - t914) * MDP(9) + (t794 * t964 + t742 * t836 + (t722 * t834 - t837 * t872) * t967) * MDP(14) + (t615 * t833 - t836 * t997) * MDP(11) + ((t615 + t998) * t836 + (-t616 + t997) * t833) * MDP(12) + (t834 * t903 + t810) * MDP(7) + (-t794 * t963 + t742 * t833 + (-t724 * t834 + t794 * t985) * t967) * MDP(13) + (t524 * t700 + t528 * t740 + t527 * t701 - g(1) * (pkin(4) * t657 + pkin(9) * t771 + qJ(5) * t656 + t943) - g(2) * (pkin(4) * t655 + pkin(9) * t769 + qJ(5) * t654 + t944) - g(3) * (pkin(4) * t719 + qJ(5) * t718 + t913) + t979 * t558 + t982 * t553 + t980 * t552) * MDP(25) + (-pkin(2) * t615 + t612 * t937 - t753 * t724 - t794 * t973 - t833 * t842 + t836 * t846) * MDP(17) + (-pkin(2) * t616 - t611 * t937 - t753 * t722 + t794 * t974 + t833 * t846 + t836 * t842) * MDP(16) - t834 * MDP(4) * t947; -t1018 * MDP(12) + (t615 - t998) * MDP(13) + (-t997 - t616) * MDP(14) + t742 * MDP(15) + (-t612 * t794 + t844) * MDP(16) + (-t611 * t794 + t698 * t722 - t861 - t868) * MDP(17) + (-t829 * t1004 - pkin(3) * t596 - t612 * t661 + (t829 * t957 - t573) * t722 + t853 * t831) * MDP(18) + (-t949 - pkin(3) * t597 - t612 * t886 + (t831 * t957 + t574) * t722 - t853 * t829) * MDP(19) + (t573 * t886 + t574 * t661 + (-t559 * t722 + t530) * t831 + (-t560 * t722 - t529 + t882) * t829 + t849) * MDP(20) + (t857 * pkin(3) + g(1) * t675 + g(2) * t673 + g(3) * t757 - t559 * t573 - t560 * t574 - t602 * t612 + (-t559 * t829 + t560 * t831) * qJD(4) + (-t529 * t829 + t530 * t831 + t861) * qJ(4)) * MDP(21) + (t566 * t722 - t581 * t661 + t596 * t779 + t854 * t831 + (-qJD(5) * t661 - t722 * t956 - t1004) * t829) * MDP(22) + (t564 * t661 - t566 * t886 + (t552 * t722 + t524) * t831 + (t882 + t1024) * t829 + t849) * MDP(23) + (t949 + t581 * t886 - t597 * t779 + (t831 * t956 - t564) * t722 + (t854 + t961) * t829) * MDP(24) + (t524 * t1003 + t528 * t779 - t558 * t581 - t552 * t566 - g(1) * (qJ(4) * t690 - t1012 * t689 - t675) - g(2) * (qJ(4) * t686 - t1012 * t685 - t673) - g(3) * (-t1012 * t765 - t922) + t1029 * t553 + (t527 * qJ(4) + qJ(5) * t862 + t552 * qJD(4) - t558 * qJD(5)) * t829) * MDP(25) + (-t595 * t972 - t775 * t866) * MDP(26) + (-t535 * t775 + t593 * t972 - t595 * t971 + t774 * t866) * MDP(27) + (-t609 * t775 - t955 * t972) * MDP(28) + (t609 * t774 - t955 * t971) * MDP(29) + (-(t788 * t835 - t789 * t832) * t609 + t767 * t535 - (t832 * t870 - t835 * t871) * t955 + t918 * t593 + t971 * t545 + t1019 * t774) * MDP(31) + ((t788 * t832 + t789 * t835) * t609 - t767 * t866 - (t832 * t871 + t835 * t870) * t955 + t918 * t595 - t972 * t545 + t1019 * t775) * MDP(32) + (MDP(11) * t722 + MDP(12) * t724 - MDP(16) * t698 - MDP(18) * t559 + MDP(19) * t560 + MDP(22) * t552 - MDP(24) * t553 + MDP(28) * t595 - MDP(29) * t593 + MDP(30) * t955 + MDP(31) * t525 - MDP(32) * t526) * t724; (t559 * t886 + t560 * t661 - t1023 - t844) * MDP(21) + (-t552 * t886 + t553 * t661 - t854) * MDP(25) + (-t535 - t1036) * MDP(31) + (t866 + t1037) * MDP(32) + (MDP(20) + MDP(23)) * (-t661 ^ 2 - t1031) + (MDP(18) + MDP(22)) * (t722 * t886 + t596) + (MDP(19) - MDP(24)) * (t597 - t1035); (t597 + t1035) * MDP(23) + (-t1018 - t1031) * MDP(24) + (-g(1) * t630 - g(2) * t626 - g(3) * t681 + t558 * t886 + t1024) * MDP(25) + (-t593 * t886 - t609 * t835) * MDP(31) + (-t595 * t886 + t609 * t832) * MDP(32) - (MDP(31) * t832 + MDP(32) * t835) * t955 ^ 2 + (t661 * t886 - t616) * MDP(22); t595 * t593 * MDP(26) + (-t593 ^ 2 + t595 ^ 2) * MDP(27) + (t945 + t1037) * MDP(28) + (-t920 + t1036) * MDP(29) - t609 * MDP(30) + (-g(1) * t579 - g(2) * t1039 - g(3) * t887 + t526 * t955 - t545 * t595 + t921) * MDP(31) + (g(1) * t580 + g(2) * t1038 + g(3) * t605 + t525 * t955 + t545 * t593 - t891) * MDP(32) + (-MDP(28) * t999 - MDP(29) * t595 - MDP(31) * t526 - MDP(32) * t525) * qJD(6);];
tau  = t1;
