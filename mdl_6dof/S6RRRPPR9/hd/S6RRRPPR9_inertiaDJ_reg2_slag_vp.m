% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR9_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:17:55
% EndTime: 2019-03-09 16:18:18
% DurationCPUTime: 8.43s
% Computational Cost: add. (7822->555), mult. (21161->994), div. (0->0), fcn. (20063->10), ass. (0->242)
t141 = sin(pkin(11));
t136 = t141 ^ 2;
t143 = cos(pkin(11));
t138 = t143 ^ 2;
t300 = (t136 + t138) * qJD(4);
t144 = sin(qJ(3));
t142 = sin(pkin(6));
t274 = cos(pkin(6));
t220 = t274 * t144;
t145 = sin(qJ(2));
t146 = cos(qJ(3));
t265 = t145 * t146;
t178 = t142 * t265 + t220;
t173 = t178 * qJD(3);
t147 = cos(qJ(2));
t258 = qJD(2) * t147;
t235 = t142 * t258;
t73 = t144 * t235 + t173;
t219 = t274 * t146;
t270 = t142 * t145;
t242 = t144 * t270;
t96 = -t219 + t242;
t196 = qJ(4) * t73 + qJD(4) * t96;
t299 = t196 * t143;
t293 = pkin(4) + pkin(5);
t298 = t293 * t141;
t289 = sin(qJ(6));
t226 = qJD(6) * t289;
t290 = cos(qJ(6));
t227 = qJD(6) * t290;
t95 = t141 * t227 - t143 * t226;
t240 = t290 * t141;
t104 = -t289 * t143 + t240;
t224 = qJ(5) * t141 + pkin(3);
t105 = -pkin(4) * t143 - t224;
t273 = qJ(4) * t144;
t297 = qJD(3) * (-t105 * t146 + t273);
t215 = t274 * t147 * pkin(1);
t245 = pkin(8) * t270;
t176 = -t215 + t245;
t172 = t176 * qJD(2);
t218 = (t144 ^ 2 - t146 ^ 2) * qJD(3);
t241 = -pkin(9) * t145 - pkin(1);
t192 = -pkin(2) * t147 + t241;
t286 = pkin(8) * t147;
t170 = t144 * t192 + t146 * t286;
t221 = t145 * t274;
t216 = pkin(1) * t221;
t174 = t274 * pkin(9) + t216;
t171 = t146 * t174;
t175 = -t274 * pkin(2) - t215;
t292 = t96 * pkin(3);
t24 = -t142 * (t141 * (-t147 * qJ(4) + t170) - t143 * (pkin(8) * t145 - qJ(4) * t265)) + t143 * (-qJ(4) * t220 + t175 + t292) - t141 * t171;
t271 = t141 * t146;
t272 = t141 * t144;
t259 = qJD(2) * t145;
t236 = t142 * t259;
t74 = -qJD(3) * t242 + (t274 * qJD(3) + t235) * t146;
t54 = t141 * t74 - t143 * t236;
t266 = t143 * t147;
t71 = t141 * t178 + t142 * t266;
t296 = qJD(3) * (t144 * t71 + t96 * t271) - t146 * t54 + t73 * t272;
t256 = qJD(3) * t146;
t277 = t54 * t143;
t55 = t141 * t236 + t143 * t74;
t44 = t55 * t141;
t269 = t142 * t147;
t72 = -t141 * t269 + t143 * t178;
t295 = t144 * (t44 + t277) + (t141 * t72 + t143 * t71) * t256;
t294 = 0.2e1 * t143;
t291 = t96 * pkin(4);
t288 = pkin(3) * t144;
t287 = pkin(4) * t141;
t285 = pkin(9) * t142;
t284 = pkin(10) - qJ(4);
t156 = t171 + (t144 * t241 + (-pkin(2) * t144 + pkin(8) * t146 - qJ(4)) * t147) * t142;
t85 = t175 + t245;
t159 = -qJ(4) * t178 + t292 + t85;
t25 = t141 * t159 + t143 * t156;
t254 = qJD(4) * t143;
t283 = -qJ(4) * t277 - t71 * t254;
t244 = pkin(8) * t269;
t169 = t174 + t244;
t183 = t192 * t142;
t46 = -t144 * t169 + t146 * t183;
t166 = qJD(3) * t169;
t177 = qJD(3) * t183;
t158 = -t144 * t166 + t146 * t177;
t234 = qJD(4) * t269;
t155 = t158 - t234;
t165 = t73 * pkin(3) - t74 * qJ(4) - qJD(4) * t178;
t206 = pkin(2) * t145 - pkin(9) * t147;
t167 = -pkin(8) * t265 + qJ(4) * t145 + t144 * t206;
t208 = t147 * t219;
t12 = t143 * t155 + t141 * t165 + ((t141 * t221 + t143 * t208) * pkin(1) + (t141 * t286 + t143 * t167) * t142) * qJD(2);
t282 = t12 * t143;
t260 = qJD(2) * t142;
t182 = t206 * t260;
t29 = (t172 - t177) * t144 + (-t166 + t182) * t146;
t27 = -pkin(3) * t236 - t29;
t281 = t141 * t27;
t280 = t143 * t27;
t279 = t143 * t73;
t278 = t146 * t73;
t276 = t74 * t144;
t99 = t216 + t244;
t90 = qJD(2) * t99;
t275 = t90 * t146;
t268 = t143 * t144;
t267 = t143 * t146;
t67 = t72 * qJD(5);
t127 = t143 * t256;
t264 = -qJ(5) * t127 - qJD(5) * t268;
t131 = pkin(9) * t267;
t203 = -pkin(3) * t146 - t273;
t189 = -pkin(2) + t203;
t83 = t141 * t189 + t131;
t263 = qJ(4) * t300;
t257 = qJD(3) * t144;
t255 = qJD(3) * t147;
t253 = qJD(4) * t146;
t252 = t136 * qJD(5);
t251 = t141 * qJD(4);
t250 = t141 * qJD(5);
t249 = 0.2e1 * t71 * t54;
t248 = 0.2e1 * t96 * t73;
t247 = -0.2e1 * pkin(2) * qJD(3);
t21 = t96 * qJ(5) + t25;
t246 = pkin(9) * t271;
t38 = pkin(3) * t269 - t46;
t243 = pkin(9) * t256;
t137 = t142 ^ 2;
t238 = t137 * t258;
t237 = t144 * t251;
t233 = t143 * t257;
t232 = t144 * t254;
t231 = t144 * t256;
t230 = qJD(3) * t290;
t229 = qJD(3) * t289;
t228 = qJD(4) * t289;
t116 = t284 * t143;
t225 = t290 * qJD(4);
t223 = qJ(5) * t143 - pkin(9);
t222 = -pkin(9) * t143 + qJ(5);
t217 = 0.2e1 * t231;
t214 = t145 * t238;
t110 = t141 * t127;
t213 = t146 * t230;
t212 = t146 * t229;
t209 = t284 * t289;
t207 = t274 * t260;
t205 = t54 * t72 + t55 * t71;
t204 = t54 * t96 + t71 * t73;
t78 = -qJ(5) * t146 + t83;
t202 = -qJ(4) * t146 + t288;
t200 = t141 * t54 - t143 * t55;
t69 = -t232 + (pkin(9) * t272 + t143 * t202) * qJD(3);
t70 = -t237 + (-pkin(9) * t268 + t141 * t202) * qJD(3);
t199 = -t141 * t69 + t143 * t70;
t197 = qJ(4) * t55 + qJD(4) * t72;
t195 = t144 * t110;
t193 = qJ(5) * t72 - t38;
t191 = pkin(3) * t143 + pkin(9) * t141 + pkin(4);
t190 = t284 * t240;
t186 = t96 * t257 - t278;
t185 = pkin(5) + t191;
t184 = -t146 * qJD(5) - t237;
t35 = t71 * t289 + t72 * t290;
t103 = t289 * t141 + t290 * t143;
t181 = t144 * t255 + t146 * t259;
t180 = t144 * t259 - t146 * t255;
t179 = (t144 * t54 + t71 * t256) * t141;
t94 = t103 * qJD(6);
t28 = -t144 * t182 + t146 * t172 - t158;
t47 = t142 * t170 + t171;
t168 = -t29 * t144 - t28 * t146 + (-t47 * t144 - t46 * t146) * qJD(3);
t164 = (-t284 * t144 + pkin(2)) * t143 + t185 * t146;
t163 = t290 * t164;
t162 = t232 + (-t146 * t116 - t185 * t144) * qJD(3);
t64 = pkin(10) * t272 + t78;
t32 = t289 * t164 + t290 * t64;
t161 = -(t222 * t144 + (t284 * t146 + t288) * t141) * qJD(3) - t184;
t157 = t90 + t165;
t10 = t54 * pkin(4) - t55 * qJ(5) + t27 - t67;
t153 = qJ(4) * t236 - t234 - t28;
t152 = -t96 * pkin(5) - t72 * pkin(10) + t141 * t156 - t143 * t159 - t291;
t151 = t290 * t152;
t150 = t289 * t152;
t9 = -t73 * pkin(4) + t141 * t153 - t143 * t157;
t8 = t73 * qJ(5) + t96 * qJD(5) + t141 * t157 + t143 * t153;
t149 = -t73 * pkin(5) - t55 * pkin(10) + t9;
t148 = t54 * pkin(10) + t8;
t124 = t141 * t256;
t123 = t141 * t257;
t122 = t146 * t251;
t121 = -0.2e1 * t231;
t108 = t138 * t217;
t107 = -0.2e1 * t214;
t106 = t136 * t217;
t102 = 0.2e1 * t300;
t97 = t293 * t143 + t224;
t93 = t141 * t218;
t92 = (t136 - t138) * t256;
t89 = t103 * t144;
t88 = t104 * t144;
t87 = t294 * t218;
t86 = (-t223 + t287) * t144;
t82 = t143 * t189 - t246;
t79 = -t143 * (-pkin(2) - t273) + t191 * t146;
t77 = (t223 - t298) * t144;
t76 = -t290 * t116 - t141 * t209;
t75 = t289 * t116 - t190;
t68 = (pkin(9) + t287) * t256 + t264;
t66 = t141 * t73;
t61 = t232 + (qJ(4) * t267 - t144 * t191) * qJD(3);
t60 = (pkin(9) + t298) * t256 + t264;
t59 = (-qJ(4) * t271 + (pkin(3) * t141 + t222) * t144) * qJD(3) + t184;
t58 = -t141 * t213 + t143 * t212 + t144 * t94;
t57 = -t141 * t212 - t143 * t213 - t95 * t144;
t52 = t116 * t227 - t143 * t228 + (qJD(6) * t209 + t225) * t141;
t51 = qJD(6) * t190 - t116 * t226 - t141 * t228 - t143 * t225;
t34 = t72 * t289 - t71 * t290;
t33 = 0.2e1 * t72 * t55;
t31 = -t289 * t64 + t163;
t30 = (t144 * t55 + t72 * t256) * t143;
t26 = pkin(4) * t71 - t193;
t23 = 0.2e1 * t55 * t96 + 0.2e1 * t72 * t73;
t22 = -t24 - t291;
t20 = t73 * t268 - t146 * t55 + (t144 * t72 + t96 * t267) * qJD(3);
t19 = -t293 * t71 + t193;
t18 = -t72 * t226 + t71 * t227 + t54 * t289 + t55 * t290;
t17 = t35 * qJD(6) + t55 * t289 - t54 * t290;
t16 = pkin(10) * t71 + t21;
t15 = -t32 * qJD(6) + t289 * t161 + t290 * t162;
t14 = -qJD(6) * t163 + t290 * t161 - t289 * t162 + t64 * t226;
t11 = -t141 * t155 + t143 * t165 + ((-t141 * t208 + t143 * t221) * pkin(1) + (pkin(8) * t266 - t141 * t167) * t142) * qJD(2);
t7 = t54 * pkin(5) + t10;
t4 = t290 * t16 + t150;
t3 = -t289 * t16 + t151;
t2 = -qJD(6) * t150 - t289 * t148 + t290 * t149 - t16 * t227;
t1 = -qJD(6) * t151 - t290 * t148 - t289 * t149 + t16 * t226;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t214, 0.2e1 * (-t145 ^ 2 + t147 ^ 2) * t137 * qJD(2), 0.2e1 * t147 * t207, t107, -0.2e1 * t145 * t207, 0, -0.2e1 * t137 * pkin(1) * t259 - 0.2e1 * t90 * t274, -0.2e1 * pkin(1) * t238 + 0.2e1 * t274 * t172, -0.2e1 * t172 * t269 + 0.2e1 * t176 * t235 - 0.2e1 * t99 * t236 + 0.2e1 * t90 * t270, -0.2e1 * t172 * t99 + 0.2e1 * t176 * t90, 0.2e1 * t178 * t74, -0.2e1 * t178 * t73 - 0.2e1 * t74 * t96, 0.2e1 * t178 * t236 - 0.2e1 * t74 * t269, t248, 0.2e1 * (t147 * t73 - t96 * t259) * t142, t107, 0.2e1 * t85 * t73 + 0.2e1 * t90 * t96 + 0.2e1 * (-t147 * t29 + t46 * t259) * t142, 0.2e1 * t90 * t220 + 0.2e1 * t85 * t74 + 0.2e1 * (-t28 * t147 + (-qJD(2) * t47 + t275) * t145) * t142, -0.2e1 * t178 * t29 + 0.2e1 * t28 * t96 - 0.2e1 * t46 * t74 - 0.2e1 * t47 * t73, -0.2e1 * t28 * t47 + 0.2e1 * t29 * t46 + 0.2e1 * t85 * t90, t33, -0.2e1 * t205, t23, t249, -0.2e1 * t204, t248, 0.2e1 * t11 * t96 + 0.2e1 * t24 * t73 + 0.2e1 * t27 * t71 + 0.2e1 * t38 * t54, -0.2e1 * t12 * t96 - 0.2e1 * t25 * t73 + 0.2e1 * t27 * t72 + 0.2e1 * t38 * t55, -0.2e1 * t11 * t72 - 0.2e1 * t12 * t71 - 0.2e1 * t24 * t55 - 0.2e1 * t25 * t54, 0.2e1 * t11 * t24 + 0.2e1 * t12 * t25 + 0.2e1 * t27 * t38, t33, t23, 0.2e1 * t205, t248, 0.2e1 * t204, t249, 0.2e1 * t10 * t71 - 0.2e1 * t22 * t73 + 0.2e1 * t26 * t54 - 0.2e1 * t9 * t96, -0.2e1 * t21 * t54 + 0.2e1 * t22 * t55 - 0.2e1 * t71 * t8 + 0.2e1 * t72 * t9, -0.2e1 * t10 * t72 + 0.2e1 * t21 * t73 - 0.2e1 * t26 * t55 + 0.2e1 * t8 * t96, 0.2e1 * t10 * t26 + 0.2e1 * t21 * t8 + 0.2e1 * t22 * t9, 0.2e1 * t35 * t18, -0.2e1 * t17 * t35 - 0.2e1 * t18 * t34, -0.2e1 * t18 * t96 - 0.2e1 * t35 * t73, 0.2e1 * t34 * t17, 0.2e1 * t17 * t96 + 0.2e1 * t34 * t73, t248, 0.2e1 * t17 * t19 - 0.2e1 * t2 * t96 - 0.2e1 * t3 * t73 - 0.2e1 * t34 * t7, -0.2e1 * t1 * t96 + 0.2e1 * t18 * t19 - 0.2e1 * t35 * t7 + 0.2e1 * t4 * t73, 0.2e1 * t1 * t34 - 0.2e1 * t17 * t4 - 0.2e1 * t18 * t3 - 0.2e1 * t2 * t35, -0.2e1 * t1 * t4 - 0.2e1 * t19 * t7 + 0.2e1 * t2 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, 0, -t236, 0, -t90, t172, 0, 0, t146 * t173 + t276, -t144 * t73 + t74 * t146 + (-t144 * t178 - t146 * t96) * qJD(3), t180 * t142, t186, t181 * t142, 0, -pkin(2) * t73 - t180 * t285 + t85 * t257 - t275, -pkin(2) * t74 + t90 * t144 - t181 * t285 + t85 * t256 (t276 - t278 + (t144 * t96 + t146 * t178) * qJD(3)) * pkin(9) + t168, -pkin(2) * t90 + pkin(9) * t168, t30, -t295, t20, t179, -t296, t186, -t11 * t146 + t69 * t96 + t73 * t82 + (pkin(9) * t54 + t281) * t144 + (t144 * t24 + (pkin(9) * t71 + t141 * t38) * t146) * qJD(3), t12 * t146 - t70 * t96 - t73 * t83 + (pkin(9) * t55 + t280) * t144 + (-t144 * t25 + (pkin(9) * t72 + t143 * t38) * t146) * qJD(3), -t54 * t83 - t55 * t82 - t69 * t72 - t70 * t71 + (-t11 * t143 - t12 * t141) * t144 + (-t141 * t25 - t143 * t24) * t256, t11 * t82 + t12 * t83 + t24 * t69 + t25 * t70 + (t144 * t27 + t38 * t256) * pkin(9), t30, t20, t295, t186, t296, t179, t10 * t272 + t146 * t9 + t54 * t86 - t61 * t96 + t68 * t71 - t73 * t79 + (-t144 * t22 + t26 * t271) * qJD(3), -t54 * t78 + t55 * t79 - t59 * t71 + t61 * t72 + (-t141 * t8 + t143 * t9) * t144 + (-t141 * t21 + t143 * t22) * t256, -t10 * t268 - t146 * t8 - t55 * t86 + t59 * t96 - t68 * t72 + t73 * t78 + (t144 * t21 - t26 * t267) * qJD(3), t10 * t86 + t21 * t59 + t22 * t61 + t26 * t68 + t78 * t8 + t79 * t9, t18 * t89 - t35 * t57, -t17 * t89 + t18 * t88 + t34 * t57 - t35 * t58, t146 * t18 - t257 * t35 + t57 * t96 - t73 * t89, -t17 * t88 + t34 * t58, -t146 * t17 + t257 * t34 + t58 * t96 - t73 * t88, t186, t146 * t2 - t15 * t96 + t17 * t77 + t19 * t58 - t257 * t3 - t31 * t73 - t34 * t60 + t7 * t88, t1 * t146 - t14 * t96 + t18 * t77 - t19 * t57 + t257 * t4 + t32 * t73 - t35 * t60 - t7 * t89, -t1 * t88 + t14 * t34 - t15 * t35 - t17 * t32 - t18 * t31 - t2 * t89 + t3 * t57 - t4 * t58, -t1 * t32 - t14 * t4 + t15 * t3 - t19 * t60 + t2 * t31 - t7 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -0.2e1 * t218, 0, t121, 0, 0, t144 * t247, t146 * t247, 0, 0, t108, -0.4e1 * t195, t87, t106, -0.2e1 * t93, t121, -0.2e1 * t146 * t69 + 0.2e1 * (t82 + 0.2e1 * t246) * t257, 0.2e1 * t146 * t70 + 0.2e1 * (-t83 + 0.2e1 * t131) * t257, 0.2e1 * (-t141 * t70 - t143 * t69) * t144 + 0.2e1 * (-t141 * t83 - t143 * t82) * t256, 0.2e1 * pkin(9) ^ 2 * t231 + 0.2e1 * t69 * t82 + 0.2e1 * t70 * t83, t108, t87, 0.4e1 * t195, t121, 0.2e1 * t93, t106, 0.2e1 * t68 * t272 + 0.2e1 * t146 * t61 + 0.2e1 * (-t144 * t79 + t271 * t86) * qJD(3), 0.2e1 * (-t141 * t59 + t143 * t61) * t144 + 0.2e1 * (-t141 * t78 + t143 * t79) * t256, -0.2e1 * t68 * t268 - 0.2e1 * t146 * t59 + 0.2e1 * (t144 * t78 - t267 * t86) * qJD(3), 0.2e1 * t59 * t78 + 0.2e1 * t61 * t79 + 0.2e1 * t68 * t86, -0.2e1 * t89 * t57, -0.2e1 * t57 * t88 - 0.2e1 * t58 * t89, -0.2e1 * t146 * t57 - 0.2e1 * t257 * t89, -0.2e1 * t88 * t58, -0.2e1 * t146 * t58 - 0.2e1 * t257 * t88, t121, 0.2e1 * t146 * t15 - 0.2e1 * t257 * t31 + 0.2e1 * t58 * t77 + 0.2e1 * t60 * t88, 0.2e1 * t14 * t146 + 0.2e1 * t257 * t32 - 0.2e1 * t57 * t77 - 0.2e1 * t60 * t89, -0.2e1 * t14 * t88 - 0.2e1 * t15 * t89 + 0.2e1 * t31 * t57 - 0.2e1 * t32 * t58, -0.2e1 * t14 * t32 + 0.2e1 * t15 * t31 - 0.2e1 * t60 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, 0, -t73, t236, t29, t28, 0, 0, t44, -t200, t66, -t277, t279, 0, -pkin(3) * t54 - t141 * t196 - t280, -pkin(3) * t55 + t281 - t299, t282 + (-t11 + t197) * t141 + t283, -pkin(3) * t27 + (-t141 * t24 + t143 * t25) * qJD(4) + (-t11 * t141 + t282) * qJ(4), t44, t66, t200, 0, -t279, -t277, -t10 * t143 + t105 * t54 + (-qJD(5) * t71 - t196) * t141, t143 * t8 + (t197 + t9) * t141 + t283, -t105 * t55 + t299 + (-t10 + t67) * t141, t10 * t105 + (qJ(4) * t8 + qJD(4) * t21) * t143 + (qJ(4) * t9 + qJD(4) * t22 - qJD(5) * t26) * t141, t104 * t18 - t35 * t94, -t103 * t18 - t104 * t17 + t34 * t94 - t35 * t95, -t104 * t73 + t94 * t96, t103 * t17 + t34 * t95, t103 * t73 + t95 * t96, 0, -t103 * t7 + t17 * t97 + t19 * t95 + t250 * t34 - t52 * t96 - t73 * t75, -t104 * t7 + t18 * t97 - t19 * t94 + t250 * t35 - t51 * t96 + t73 * t76, t1 * t103 - t104 * t2 - t17 * t76 - t18 * t75 + t3 * t94 + t34 * t51 - t35 * t52 - t4 * t95, -t1 * t76 + t19 * t250 + t2 * t75 + t3 * t52 - t4 * t51 - t7 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, 0, -t257, 0, -t243, pkin(9) * t257, 0, 0, t110, -t92, t123, -t110, t233, 0, t122 + (t141 * t203 - t131) * qJD(3), t143 * t253 + (t143 * t203 + t246) * qJD(3), t199, -pkin(3) * t243 + (-t141 * t82 + t143 * t83) * qJD(4) + t199 * qJ(4), t110, t123, t92, 0, -t233, -t110, -t141 * t297 - t143 * t68 - t144 * t252 + t122, t141 * t61 + t143 * t59, -t141 * t68 + (t144 * t250 - t253 + t297) * t143, t105 * t68 + (qJ(4) * t59 + qJD(4) * t78) * t143 + (qJ(4) * t61 + qJD(4) * t79 - qJD(5) * t86) * t141, -t104 * t57 - t89 * t94, t103 * t57 - t104 * t58 - t88 * t94 - t89 * t95, -t104 * t257 - t146 * t94, t103 * t58 - t88 * t95, t103 * t257 - t146 * t95, 0, -t103 * t60 + t146 * t52 - t250 * t88 - t257 * t75 + t58 * t97 + t77 * t95, -t104 * t60 + t146 * t51 + t250 * t89 + t257 * t76 - t57 * t97 - t77 * t94, t103 * t14 - t104 * t15 + t31 * t94 - t32 * t95 - t51 * t88 - t52 * t89 + t57 * t75 - t58 * t76, -t14 * t76 + t15 * t75 + t250 * t77 + t31 * t52 - t32 * t51 - t60 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0.2e1 * t263, 0, 0, 0, 0, 0, 0, t250 * t294, t102, 0.2e1 * t252, -0.2e1 * t105 * t250 + 0.2e1 * t263, -0.2e1 * t104 * t94, 0.2e1 * t103 * t94 - 0.2e1 * t104 * t95, 0, 0.2e1 * t103 * t95, 0, 0, 0.2e1 * t103 * t250 + 0.2e1 * t95 * t97, 0.2e1 * t104 * t250 - 0.2e1 * t94 * t97, 0.2e1 * t103 * t51 - 0.2e1 * t104 * t52 + 0.2e1 * t75 * t94 - 0.2e1 * t76 * t95, 0.2e1 * t250 * t97 - 0.2e1 * t51 * t76 + 0.2e1 * t52 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, t55, 0, t27, 0, 0, 0, 0, 0, 0, t54, 0, -t55, t10, 0, 0, 0, 0, 0, 0, -t17, -t18, 0, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, t127, 0, t243, 0, 0, 0, 0, 0, 0, t124, 0, -t127, t68, 0, 0, 0, 0, 0, 0, -t58, t57, 0, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, 0, 0, 0, 0, 0, 0, -t95, t94, 0, -t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, t55, 0, t9, 0, 0, 0, 0, 0, 0, t226 * t96 - t290 * t73, t227 * t96 + t289 * t73, -t290 * t18 - t289 * t17 + (t289 * t35 - t290 * t34) * qJD(6), t2 * t290 - t1 * t289 + (-t289 * t3 + t290 * t4) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, t127, 0, t61, 0, 0, 0, 0, 0, 0, -t144 * t230 - t146 * t226, t144 * t229 - t146 * t227, t290 * t57 - t289 * t58 + (t289 * t89 + t290 * t88) * qJD(6), t15 * t290 - t14 * t289 + (-t289 * t31 + t290 * t32) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, 0, 0, 0, 0, 0, 0, 0, t290 * t94 - t289 * t95 + (-t103 * t290 + t104 * t289) * qJD(6), t52 * t290 - t51 * t289 + (-t289 * t75 + t290 * t76) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, 0, -t17, -t73, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, 0, -t58, -t257, t15, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, 0, -t95, 0, t52, t51, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, -t227, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
