% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 17:24
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRPPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 17:23:51
% EndTime: 2019-05-05 17:24:03
% DurationCPUTime: 13.05s
% Computational Cost: add. (26562->729), mult. (54984->657), div. (0->0), fcn. (26694->6), ass. (0->437)
t959 = sin(qJ(3));
t965 = qJD(1) ^ 2;
t1190 = t959 * t965;
t962 = cos(qJ(3));
t932 = t962 * t1190;
t919 = -t932 + qJDD(3);
t1111 = t919 * t962;
t955 = t959 ^ 2;
t1107 = t955 * t965;
t964 = qJD(3) ^ 2;
t926 = t964 + t1107;
t858 = -t926 * t959 + t1111;
t1086 = qJD(1) * qJD(3);
t1066 = t962 * t1086;
t1083 = t959 * qJDD(1);
t905 = 0.2e1 * t1066 + t1083;
t960 = sin(qJ(1));
t963 = cos(qJ(1));
t1154 = pkin(6) * (t858 * t963 - t905 * t960);
t803 = pkin(6) * (t858 * t960 + t905 * t963);
t918 = t932 + qJDD(3);
t1114 = t918 * t959;
t956 = t962 ^ 2;
t1106 = t956 * t965;
t928 = t964 + t1106;
t853 = t928 * t962 + t1114;
t1082 = t962 * qJDD(1);
t940 = t959 * t1086;
t908 = -0.2e1 * t940 + t1082;
t1153 = pkin(6) * (t853 * t963 + t908 * t960);
t804 = pkin(6) * (t853 * t960 - t908 * t963);
t844 = pkin(2) * t853;
t1208 = pkin(2) * t858;
t1151 = pkin(7) * t853;
t1150 = pkin(7) * t858;
t1113 = t918 * t962;
t860 = -t928 * t959 + t1113;
t1207 = pkin(7) * t860;
t1112 = t919 * t959;
t862 = t926 * t962 + t1112;
t1206 = pkin(7) * t862;
t1205 = qJ(2) * t860;
t1143 = qJ(2) * t862;
t1092 = qJD(1) * t959;
t958 = sin(qJ(6));
t961 = cos(qJ(6));
t898 = qJD(3) * t961 + t1092 * t958;
t900 = -t958 * qJD(3) + t1092 * t961;
t841 = t900 * t898;
t907 = -t940 + t1082;
t893 = qJDD(6) + t907;
t1188 = -t841 + t893;
t1204 = t1188 * t958;
t1203 = t1188 * t961;
t906 = t1066 + t1083;
t923 = t963 * g(1) + t960 * g(2);
t954 = qJDD(1) * qJ(2);
t1024 = t923 - t954;
t1166 = -pkin(7) - pkin(1);
t993 = -t1166 * t965 + t1024;
t986 = -pkin(3) * t1066 - qJ(4) * t940 + t993;
t982 = -t906 * pkin(4) - qJ(5) * t1107 + qJDD(5) + t986;
t927 = -t964 + t1107;
t856 = t927 * t959 + t1113;
t819 = -t963 * t1083 + t856 * t960;
t1202 = t960 * t1083 + t856 * t963;
t1120 = t908 * t962;
t1127 = t905 * t959;
t830 = -t1120 + t1127;
t917 = (-t955 + t956) * t965;
t1201 = t830 * t960 - t917 * t963;
t799 = t830 * t963 + t917 * t960;
t1196 = 0.2e1 * qJD(1);
t1195 = (t905 + t906) * pkin(3);
t1194 = pkin(4) * (-t928 + t1107);
t1193 = (t919 + qJDD(3)) * pkin(4);
t1093 = t955 + t956;
t913 = t1093 * qJDD(1);
t1118 = t913 * t960;
t916 = t1093 * t965;
t835 = pkin(6) * (t916 * t963 + t1118);
t1192 = (-t916 + t1107) * pkin(4);
t1095 = t916 - t964;
t1191 = t1095 * pkin(3);
t826 = -qJD(6) * t898 - t958 * qJDD(3) + t906 * t961;
t1090 = t962 * qJD(1);
t934 = qJD(6) + t1090;
t877 = t934 * t898;
t1189 = t826 - t877;
t891 = qJ(2) * t908;
t1187 = -pkin(1) * t853 - t891;
t1070 = qJ(5) * t1090;
t1018 = -qJD(3) * pkin(4) - t1070;
t1186 = -t906 * qJ(5) - qJD(3) * t1018;
t890 = qJ(2) * t905;
t1185 = -pkin(1) * t858 + t890;
t903 = qJ(2) * t916;
t1184 = pkin(1) * t913 - t903;
t1183 = pkin(3) * t928 + qJ(4) * t918;
t1182 = qJ(4) * t1095;
t1148 = t906 * pkin(3);
t1123 = t907 * qJ(4);
t977 = (qJD(4) * t962 - qJD(2)) * t1196 + t986;
t974 = t977 + t1123;
t768 = t974 - t1148;
t1181 = (pkin(3) * t962 + qJ(4) * t959 + pkin(2)) * t768;
t1091 = qJD(3) * t959;
t1145 = -qJ(4) - pkin(5);
t1167 = -pkin(4) - pkin(8);
t1168 = pkin(3) + pkin(8);
t1170 = 0.2e1 * qJD(4);
t1171 = -0.2e1 * qJD(2);
t702 = -t1145 * t907 - t1168 * t906 + (-pkin(5) * t1091 + t1171 + (qJD(3) * t1167 - t1070 + t1170) * t962) * qJD(1) + t982;
t1041 = pkin(5) * t962 - pkin(8) * t959;
t1088 = pkin(3) - t1167;
t925 = pkin(4) * t932;
t1079 = -0.2e1 * t1090;
t938 = qJD(5) * t1079;
t1140 = qJ(4) * t962;
t1157 = pkin(3) * t959;
t902 = (-t1140 + t1157) * qJD(1);
t1178 = -t902 * t1090 - qJDD(4);
t1147 = t959 * g(3);
t922 = t960 * g(1) - t963 * g(2);
t1038 = qJDD(2) - t922;
t1012 = -t965 * qJ(2) + t1038;
t987 = qJDD(1) * t1166 + t1012;
t837 = t962 * t987 + t1147;
t979 = t837 + t1178;
t734 = t925 - t907 * qJ(5) + t938 + t1145 * t964 - t1088 * qJDD(3) + (-qJ(5) * t1091 - t1041 * t1090) * qJD(1) - t979;
t676 = -t961 * t702 + t958 * t734;
t677 = t702 * t958 + t734 * t961;
t659 = t958 * t676 + t677 * t961;
t1180 = -t961 * t676 + t958 * t677;
t838 = t962 * g(3) - t959 * t987;
t778 = t962 * t837 - t838 * t959;
t1179 = t844 - t1205;
t1177 = -pkin(4) * t905 + qJ(5) * t926;
t1176 = pkin(3) * t919 - qJ(4) * t926;
t1175 = -t844 - t1183;
t1173 = (t907 + t940) * qJ(5) - t925;
t1027 = t961 * qJDD(3) + t958 * t906;
t792 = (qJD(6) - t934) * t900 + t1027;
t892 = t898 ^ 2;
t1172 = t900 ^ 2;
t930 = t934 ^ 2;
t1169 = pkin(3) + pkin(4);
t1165 = pkin(1) * t860;
t1164 = pkin(1) * t862;
t1163 = pkin(2) * t778;
t1085 = qJD(2) * qJD(1);
t1077 = -0.2e1 * t1085;
t870 = t993 + t1077;
t1161 = pkin(2) * t870;
t895 = pkin(2) * t905;
t896 = pkin(2) * t908;
t1160 = pkin(2) * t913;
t1159 = pkin(2) * t916;
t1101 = t964 * qJ(4);
t1078 = qJD(5) * t1196;
t970 = t1147 + (t987 + t1078) * t962 + t1173 + t1178;
t968 = qJDD(3) * t1169 + t970;
t746 = t968 + t1101;
t1156 = pkin(4) * t746;
t1117 = t913 * t963;
t1152 = pkin(6) * (-t916 * t960 + t1117);
t1149 = pkin(7) * t913;
t1146 = t964 * pkin(3);
t1142 = qJ(4) * t905;
t1049 = (-0.2e1 * qJD(5) + t902) * qJD(1);
t1042 = -qJDD(3) * qJ(4) + t838;
t1014 = t1042 + t1186;
t1084 = qJD(4) * qJD(3);
t1076 = -0.2e1 * t1084;
t992 = t1014 + t1076;
t981 = t1049 * t959 + t992;
t978 = pkin(4) * t1107 + t981;
t733 = -qJDD(3) * pkin(5) - t1041 * t1190 + t1168 * t964 + t978;
t1139 = qJ(5) * t733;
t745 = t978 + t1146;
t1138 = qJ(5) * t745;
t1137 = qJ(5) * t746;
t1136 = qJ(5) * t918;
t1135 = qJ(5) * t919;
t1133 = qJ(5) * t928;
t1132 = qJDD(1) * pkin(1);
t1131 = qJDD(3) * pkin(3);
t814 = t841 + t893;
t1129 = t814 * t961;
t1125 = t905 * t962;
t1122 = t908 * t959;
t1110 = t934 * t900;
t1109 = t934 * t958;
t1108 = t934 * t961;
t725 = t958 * t733;
t1104 = t958 * t814;
t1103 = t959 * t870;
t1102 = t961 * t733;
t849 = t962 * t870;
t1100 = pkin(5) * t733 + pkin(8) * t659;
t998 = -t1092 * t902 - t1042;
t988 = -t998 + t1146;
t796 = t988 + t1076;
t975 = -t979 - t1131;
t798 = -t975 + t1101;
t1099 = pkin(3) * t798 - qJ(4) * t796;
t1098 = t896 + t1207;
t1097 = t895 + t1206;
t1094 = -pkin(3) * t1082 - qJ(4) * t1083;
t1087 = qJ(5) * qJDD(1);
t1080 = t930 - t1172;
t1075 = t959 * t841;
t1074 = t962 * t841;
t1069 = -t930 - t1172;
t766 = -t1069 * t958 - t1129;
t1073 = -pkin(5) * t1189 + pkin(8) * t766 - t725;
t827 = -t930 - t892;
t758 = t827 * t961 - t1204;
t791 = (qJD(6) + t934) * t900 + t1027;
t1072 = -pkin(5) * t791 + pkin(8) * t758 + t1102;
t757 = t958 * t827 + t1203;
t1071 = -pkin(5) * t757 + t676;
t1065 = (t908 + t907) * qJ(4);
t656 = pkin(5) * t1180;
t1064 = -qJ(5) * t659 + t656;
t795 = t826 + t877;
t722 = -t792 * t958 - t795 * t961;
t719 = pkin(5) * t722;
t724 = -t792 * t961 + t958 * t795;
t1063 = -qJ(5) * t724 + t719;
t1062 = -qJ(5) * t1189 + t1102;
t639 = t1088 * t1180 + t1139;
t641 = qJ(4) * t1180 + t1064;
t1061 = -t959 * t639 + t962 * t641;
t811 = -t892 - t1172;
t1017 = -qJ(5) * t811 + t1180;
t649 = t1088 * t722 + t1017;
t669 = qJ(4) * t722 + t1063;
t1060 = -t959 * t649 + t962 * t669;
t1023 = -qJ(5) * t758 - t1071;
t661 = qJ(4) * t757 + t1023;
t1033 = -qJ(5) * t791 + t725;
t666 = t1088 * t757 + t1033;
t1059 = t962 * t661 - t959 * t666;
t765 = t1069 * t961 - t1104;
t1016 = -pkin(5) * t765 + t677;
t994 = -qJ(5) * t766 - t1016;
t663 = qJ(4) * t765 + t994;
t667 = t1088 * t765 + t1062;
t1058 = t962 * t663 - t959 * t667;
t969 = (t1171 + (t1170 + t1018) * t962) * qJD(1) - t1148 + t982;
t737 = t969 + t1123;
t671 = t1169 * t737 + t1138;
t684 = qJ(4) * t737 + t1137;
t1057 = -t959 * t671 + t962 * t684;
t951 = 0.2e1 * t1085;
t705 = qJD(4) * t1079 - t1018 * t1090 - t1123 - t1177 + t1195 + t951 - t982;
t848 = -t1135 + t1142;
t1055 = -t959 * t705 + t962 * t848;
t717 = t1192 - t1191 + (t1049 - t1087) * t959 + t992;
t941 = qJ(5) * t1082;
t736 = t941 + t968 - t1182;
t1054 = -t959 * t717 + t962 * t736;
t878 = t965 * pkin(1) + t1024 + t1077;
t879 = -t1012 + t1132;
t1053 = -t963 * t878 - t879 * t960;
t1052 = -t922 * t960 - t963 * t923;
t1048 = t960 * t932;
t1047 = t963 * t932;
t731 = -t796 * t959 + t798 * t962;
t1046 = -pkin(2) * t731 - t1099;
t851 = t1094 - t1160;
t1045 = -pkin(4) * t659 - t1100;
t1044 = pkin(3) * t746 - qJ(4) * t745 + t1156;
t752 = t1065 + t977 - t1148;
t1043 = -pkin(3) * t1122 + t962 * t752 - t1151;
t914 = qJDD(1) * t963 - t960 * t965;
t1040 = pkin(6) * t914 + g(3) * t960;
t915 = qJDD(1) * t960 + t963 * t965;
t1039 = -pkin(6) * t915 + g(3) * t963;
t1037 = -t1097 + t849;
t1036 = t1103 + t896;
t1035 = -t1103 - t1150;
t779 = -t837 * t959 - t838 * t962;
t1032 = t878 * t960 - t879 * t963;
t832 = t1122 + t1125;
t864 = -t927 * t962 + t1114;
t1030 = t922 * t963 - t923 * t960;
t1029 = -pkin(4) * t766 - t1073;
t1028 = -pkin(4) * t758 - t1072;
t1025 = -t838 + t844;
t1022 = -pkin(5) * t811 + pkin(8) * t724 + t659;
t715 = t1065 + t969 + t1133;
t815 = t1169 * t908 - t1136;
t1021 = t962 * t715 - t815 * t959 - t1151;
t950 = 0.2e1 * t1084;
t774 = t950 + t998 + t1191;
t777 = t975 + t1182;
t1020 = -t774 * t959 + t962 * t777 + t1149;
t1019 = t1149 - t778;
t1015 = -pkin(3) * t659 - qJ(4) * t733 + t1045;
t685 = -t745 * t959 + t746 * t962;
t1013 = -pkin(2) * t685 - t1044;
t1011 = t715 * t959 + t815 * t962 + t1098;
t1009 = -pkin(3) * t766 + qJ(4) * t1189 + t1029;
t1008 = -pkin(3) * t758 + qJ(4) * t791 + t1028;
t1007 = -pkin(2) * t1180 - t962 * t639 - t959 * t641;
t1006 = -pkin(2) * t722 - t962 * t649 - t959 * t669;
t1005 = -pkin(2) * t757 - t959 * t661 - t962 * t666;
t1004 = -pkin(2) * t765 - t959 * t663 - t962 * t667;
t1003 = -pkin(2) * t737 - t962 * t671 - t959 * t684;
t1002 = -t962 * t705 - t959 * t848 - t895;
t1000 = pkin(3) * t1120 + t752 * t959 + t1098;
t999 = -pkin(4) * t724 - t1022;
t756 = t974 - t1195;
t997 = -qJ(4) * t1127 + t756 * t962 - t1097;
t996 = -qJ(4) * t1125 - t756 * t959 - t1150;
t653 = -t659 * t962 - t733 * t959;
t995 = -pkin(2) * t653 - t1015;
t703 = -t758 * t962 + t791 * t959;
t991 = -pkin(2) * t703 - t1008;
t706 = t1189 * t959 - t766 * t962;
t990 = -pkin(2) * t706 - t1009;
t989 = -pkin(3) * t724 + qJ(4) * t811 + t999;
t985 = t950 - t988;
t694 = -t724 * t962 + t811 * t959;
t984 = -pkin(2) * t694 - t989;
t983 = t985 + t1183;
t980 = t1208 + t837;
t937 = t959 * t1078;
t976 = -t1186 + t937 + t985 - t1194;
t973 = t976 + t1183;
t972 = t798 + t1176;
t971 = -t1208 - t972;
t967 = -t1173 - t798 + t938 - t1193;
t966 = t967 - t1176;
t944 = pkin(4) * t1082;
t929 = -t964 + t1106;
t897 = t1093 * t1086;
t888 = t1038 - 0.2e1 * t1132;
t886 = -t923 + t951 + 0.2e1 * t954;
t875 = t892 - t930;
t874 = qJDD(3) * t963 - t897 * t960;
t873 = qJDD(3) * t960 + t897 * t963;
t872 = t1086 * t956 + t907 * t959;
t871 = t1086 * t955 - t906 * t962;
t866 = (t907 - t940) * t962;
t861 = t929 * t959 + t1111;
t854 = -t929 * t962 + t1112;
t852 = (t906 + t1066) * t959;
t840 = -t892 + t1172;
t834 = -t851 + t944;
t825 = -qJD(6) * t900 - t1027;
t824 = t871 * t960 - t1047;
t823 = t872 * t960 + t1047;
t822 = -t871 * t963 - t1048;
t821 = -t872 * t963 + t1048;
t820 = t1082 * t963 + t854 * t960;
t818 = t1082 * t960 - t854 * t963;
t812 = pkin(1) * t879 - qJ(2) * t878;
t802 = (-t898 * t961 + t900 * t958) * t934;
t801 = (-t898 * t958 - t900 * t961) * t934;
t783 = -t1109 * t900 + t826 * t961;
t782 = t1108 * t900 + t826 * t958;
t781 = -t1108 * t898 + t825 * t958;
t780 = -t1109 * t898 - t961 * t825;
t776 = t802 * t959 + t893 * t962;
t775 = -t802 * t962 + t893 * t959;
t773 = t875 * t961 - t1104;
t772 = -t1080 * t958 + t1203;
t771 = t875 * t958 + t1129;
t770 = t1080 * t961 + t1204;
t767 = t768 * t1157;
t764 = t779 + t1159;
t760 = -t1025 + t1205;
t759 = t980 + t1143;
t750 = -t1037 + t1164;
t749 = -t1166 * t860 + t1036;
t748 = -t1166 * t853 - t849 + t891;
t747 = t1035 + t1185;
t742 = t783 * t959 + t1074;
t741 = -t781 * t959 - t1074;
t740 = t783 * t962 - t1075;
t739 = t781 * t962 - t1075;
t738 = t1019 + t1184;
t732 = -t796 * t962 - t798 * t959;
t723 = -t1189 * t958 - t791 * t961;
t721 = t1189 * t961 - t958 * t791;
t716 = -t971 + t1143;
t714 = t983 + t1179;
t712 = t772 * t959 + t795 * t962;
t711 = t773 * t959 - t792 * t962;
t710 = -t772 * t962 + t795 * t959;
t709 = -t773 * t962 - t792 * t959;
t708 = -qJ(2) * t779 + t1163;
t707 = t1189 * t962 + t766 * t959;
t704 = t758 * t959 + t791 * t962;
t700 = t774 * t962 + t777 * t959 + t1159;
t699 = t723 * t959 + t840 * t962;
t698 = -t723 * t962 + t840 * t959;
t697 = t1166 * t779 - t1161;
t696 = -qJ(2) * t870 + t1166 * t778;
t695 = t724 * t959 + t811 * t962;
t693 = -t1000 - t1165;
t692 = -t997 + t1164;
t691 = t1043 + t1187;
t690 = t996 + t1185;
t689 = t973 + t1179;
t688 = t1020 + t1184;
t687 = -t1208 + t966 - t1143;
t686 = -t745 * t962 - t746 * t959;
t682 = t1166 * t862 + t1002;
t681 = -t1011 - t1165;
t680 = -t1166 * t858 + t1055 - t890;
t679 = t1021 + t1187;
t678 = t717 * t962 + t736 * t959 - t1159;
t672 = t1166 * t913 + t1054 + t903;
t670 = -qJ(2) * t732 - t1046;
t665 = t1166 * t732 - t1181;
t664 = -t767 + (-qJ(2) + t1140) * t768 + t1166 * t731;
t654 = t659 * t959 - t733 * t962;
t652 = -qJ(2) * t686 - t1013;
t651 = -qJ(2) * t707 - t990;
t650 = -qJ(2) * t704 - t991;
t648 = t1166 * t686 + t1003;
t647 = -qJ(2) * t737 + t1166 * t685 + t1057;
t646 = t1166 * t707 + t1004;
t645 = -qJ(2) * t765 + t1166 * t706 + t1058;
t644 = -qJ(2) * t695 - t984;
t643 = t1166 * t704 + t1005;
t642 = -qJ(2) * t757 + t1166 * t703 + t1059;
t638 = t1166 * t695 + t1006;
t637 = -qJ(2) * t722 + t1166 * t694 + t1060;
t636 = -qJ(2) * t654 - t995;
t635 = t1166 * t654 + t1007;
t634 = -qJ(2) * t1180 + t1166 * t653 + t1061;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t914, 0, -t915, 0, -t1040, -t1039, -t1030, -pkin(6) * t1030, 0, -t914, t915, 0, 0, 0, t1032, t1040, t1039, pkin(6) * t1032 + (-pkin(1) * t960 + qJ(2) * t963) * g(3), t823, -t1201, t820, t824, t819, t874, -t750 * t960 + t759 * t963 + t1154, -t960 * t749 + t963 * t760 - t1153, -pkin(2) * t1117 + t764 * t960 - t1152, t963 * t708 - t960 * t697 - pkin(6) * (-t778 * t963 - t870 * t960), t823, t820, t1201, t874, -t819, t824, -t692 * t960 + t716 * t963 + t1154, t700 * t960 + t851 * t963 - t1152, -t693 * t960 + t714 * t963 + t1153, t963 * t670 - t960 * t665 - pkin(6) * (-t731 * t963 - t768 * t960), t824, -t1201, t819, t823, t820, t874, -t681 * t960 + t689 * t963 + t1153, -t960 * t682 + t963 * t687 - t1154, t960 * t678 + t963 * t834 + t1152, t963 * t652 - t960 * t648 - pkin(6) * (-t685 * t963 - t737 * t960), -t740 * t960 - t782 * t963, t698 * t960 - t721 * t963, t710 * t960 - t770 * t963, t739 * t960 + t780 * t963, t709 * t960 - t771 * t963, t775 * t960 - t801 * t963, t963 * t650 - t960 * t643 - pkin(6) * (-t703 * t963 - t757 * t960), t963 * t651 - t960 * t646 - pkin(6) * (-t706 * t963 - t765 * t960), t963 * t644 - t960 * t638 - pkin(6) * (-t694 * t963 - t722 * t960), t963 * t636 - t960 * t635 - pkin(6) * (-t1180 * t960 - t653 * t963); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t915, 0, t914, 0, t1039, -t1040, t1052, pkin(6) * t1052, 0, -t915, -t914, 0, 0, 0, t1053, -t1039, t1040, pkin(6) * t1053 + (pkin(1) * t963 + qJ(2) * t960) * g(3), t821, t799, t818, t822, -t1202, t873, t750 * t963 + t759 * t960 + t803, t963 * t749 + t960 * t760 - t804, -pkin(2) * t1118 - t764 * t963 - t835, t960 * t708 + t963 * t697 + pkin(6) * (t778 * t960 - t870 * t963), t821, t818, -t799, t873, t1202, t822, t692 * t963 + t716 * t960 + t803, -t700 * t963 + t851 * t960 - t835, t693 * t963 + t714 * t960 + t804, t960 * t670 + t963 * t665 + pkin(6) * (t731 * t960 - t768 * t963), t822, t799, -t1202, t821, t818, t873, t681 * t963 + t689 * t960 + t804, t963 * t682 + t960 * t687 - t803, -t963 * t678 + t960 * t834 + t835, t960 * t652 + t963 * t648 + pkin(6) * (t685 * t960 - t737 * t963), t740 * t963 - t782 * t960, -t698 * t963 - t721 * t960, -t710 * t963 - t770 * t960, -t739 * t963 + t780 * t960, -t709 * t963 - t771 * t960, -t775 * t963 - t801 * t960, t960 * t650 + t963 * t643 + pkin(6) * (t703 * t960 - t757 * t963), t960 * t651 + t963 * t646 + pkin(6) * (t706 * t960 - t765 * t963), t960 * t644 + t963 * t638 + pkin(6) * (t694 * t960 - t722 * t963), t960 * t636 + t963 * t635 + pkin(6) * (-t1180 * t963 + t653 * t960); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t922, t923, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t888, t886, t812, t866, -t832, t861, t852, -t864, 0, t747, t748, t738, t696, t866, t861, t832, 0, t864, t852, t690, t688, t691, t664, t852, -t832, -t864, t866, t861, 0, t679, t680, t672, t647, t742, t699, t712, t741, t711, t776, t642, t645, t637, t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t965, 0, 0, -g(3), -t922, 0, 0, -qJDD(1), t965, 0, 0, 0, -t879, 0, g(3), qJ(2) * g(3), t932, t917, t1082, -t932, -t1083, qJDD(3), t759, t760, -t1160, t708, t932, t1082, -t917, qJDD(3), t1083, -t932, t716, t851, t714, t670, -t932, t917, -t1083, t932, t1082, qJDD(3), t689, t687, t834, t652, -t782, -t721, -t770, t780, -t771, -t801, t650, t651, t644, t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t965, 0, qJDD(1), 0, g(3), 0, -t923, 0, 0, -t965, -qJDD(1), 0, 0, 0, -t878, -g(3), 0, pkin(1) * g(3), -t872, t830, -t854, -t871, -t856, t897, t750, t749, -t764, t697, -t872, -t854, -t830, t897, t856, -t871, t692, -t700, t693, t665, -t871, t830, -t856, -t872, -t854, t897, t681, t682, -t678, t648, t740, -t698, -t710, -t739, -t709, -t775, t643, t646, t638, t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t922, t923, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t888, t886, t812, t866, -t832, t861, t852, -t864, 0, t747, t748, t738, t696, t866, t861, t832, 0, t864, t852, t690, t688, t691, t664, t852, -t832, -t864, t866, t861, 0, t679, t680, t672, t647, t742, t699, t712, t741, t711, t776, t642, t645, t637, t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t879, -t878, 0, t866, -t832, t861, t852, -t864, 0, t1035, -t849 + t1151, t1019, -pkin(7) * t778, t866, t861, t832, 0, t864, t852, t996, t1020, t1043, -pkin(7) * t731 + t1140 * t768 - t767, t852, -t832, -t864, t866, t861, 0, t1021, t1055 + t1150, t1054 - t1149, -pkin(7) * t685 + t1057, t742, t699, t712, t741, t711, t776, -pkin(7) * t703 + t1059, -pkin(7) * t706 + t1058, -pkin(7) * t694 + t1060, -pkin(7) * t653 + t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t965, 0, 0, 0, t879, 0, -g(3), 0, -t932, -t917, -t1082, t932, t1083, -qJDD(3), -t980, t1025, t1160, -t1163, -t932, -t1082, t917, -qJDD(3), -t1083, t932, t971, -t851, t796 + t1175, t1046, t932, -t917, t1083, -t932, -t1082, -qJDD(3), t1146 + t1175 + t981 + t1194, t1101 + t1131 + t1208 + t1176 + t970 + t1193, -t834, t1013, t782, t721, t770, -t780, t771, t801, t991, t990, t984, t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t965, qJDD(1), 0, 0, 0, t878, g(3), 0, 0, t872, -t830, t854, t871, t856, -t897, t1037, -t1036 - t1207, t764, pkin(7) * t779 + t1161, t872, t854, t830, -t897, -t856, t871, t997, t700, t1000, pkin(7) * t732 + t1181, t871, -t830, t856, t872, t854, -t897, t1011, -t1002 + t1206, t678, pkin(7) * t686 - t1003, -t740, t698, t710, t739, t709, t775, pkin(7) * t704 - t1005, pkin(7) * t707 - t1004, pkin(7) * t695 - t1006, pkin(7) * t654 - t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t907, -t905, t919, t940, t927, -t940, 0, -t870, -t837, 0, t907, t919, t905, -t940, -t927, t940, -t1142, t777, t752, qJ(4) * t768, t940, -t905, t927, t907, t919, -t940, t715, t848, t736, t684, t841, t840, t795, -t841, -t792, t893, t661, t663, t669, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1066, t908, -t929, -t906, t918, -t1066, t870, 0, -t838, 0, t1066, -t929, -t908, -t1066, -t918, -t906, t756, t774, pkin(3) * t908, pkin(3) * t768, -t906, t908, t918, t1066, -t929, -t1066, t815, t705, t717, t671, -t783, -t723, -t772, t781, -t773, -t802, t666, t667, t649, t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t932, t917, t1082, -t932, -t1083, qJDD(3), t837, t838, 0, 0, t932, t1082, -t917, qJDD(3), t1083, -t932, t972, t1094, t983, t1099, -t932, t917, -t1083, t932, t1082, qJDD(3), t973, t966, t944 - t1094, t1044, -t782, -t721, -t770, t780, -t771, -t801, t1008, t1009, t989, t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t907, t919, t905, -t940, -t927, t940, 0, -t798, t768, 0, t940, -t905, t927, t907, t919, -t940, t737 + t1133, -t1135, t941 + t746, t1137, t841, t840, t795, -t841, -t792, t893, t1023, t994, t1063, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t932, t1082, -t917, qJDD(3), t1083, -t932, t798, 0, -t796, 0, -t932, t917, -t1083, t932, t1082, qJDD(3), t976, t967, t944, t1156, -t782, -t721, -t770, t780, -t771, -t801, t1028, t1029, t999, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1066, t929, t908, t1066, t918, t906, -t768, t796, 0, 0, t906, -t908, -t918, -t1066, t929, t1066, -pkin(4) * t908 + t1136, t737 + t1177, -t1146 + t937 + t950 + (-qJD(1) * t902 + t1087) * t959 - t1192 - t1014, -pkin(4) * t737 - t1138, t783, t723, t772, -t781, t773, t802, t1167 * t757 - t1033, t1167 * t765 - t1062, t1167 * t722 - t1017, t1167 * t1180 - t1139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, -t908, -t918, -t1066, t929, t1066, 0, t737, -t745, 0, t783, t723, t772, -t781, t773, t802, -pkin(8) * t757 - t725, -pkin(8) * t765 - t1102, -pkin(8) * t722 - t1180, -pkin(8) * t1180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t940, t905, -t927, -t907, -t919, t940, -t737, 0, -t746, 0, -t841, -t840, -t795, t841, t792, -t893, t1071, t1016, -t719, -t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t932, -t917, t1083, -t932, -t1082, -qJDD(3), t745, t746, 0, 0, t782, t721, t770, -t780, t771, t801, t1072, t1073, t1022, t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826, -t791, t1188, t877, t875, -t877, 0, -t733, t676, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1110, t1189, t1080, t825, t814, -t1110, t733, 0, t677, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t841, t840, t795, -t841, -t792, t893, -t676, -t677, 0, 0;];
m_new_reg  = t1;
