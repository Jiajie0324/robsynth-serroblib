% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPPR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRPPR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:00:02
% EndTime: 2019-03-09 03:00:07
% DurationCPUTime: 2.02s
% Computational Cost: add. (859->223), mult. (1526->272), div. (0->0), fcn. (1193->4), ass. (0->164)
t104 = sin(qJ(6));
t200 = 0.2e1 * t104;
t105 = sin(qJ(3));
t197 = pkin(3) + pkin(4);
t199 = t197 * t105;
t107 = cos(qJ(3));
t93 = t107 * qJ(4);
t60 = -t105 * pkin(3) + t93;
t84 = t105 * qJD(4);
t131 = t60 * qJD(3) + t84;
t102 = t107 ^ 2;
t157 = qJD(2) * t107;
t129 = t102 * qJD(4) - t157;
t96 = -pkin(8) - t197;
t128 = t105 * t96;
t183 = t93 - qJ(2);
t198 = t107 * pkin(5) + t128 + t183;
t106 = cos(qJ(6));
t86 = t105 * qJD(1);
t135 = t106 * t86;
t101 = t106 ^ 2;
t99 = t104 ^ 2;
t63 = t101 - t99;
t112 = t63 * qJD(3) + t135 * t200;
t196 = t102 / 0.2e1;
t195 = t106 / 0.2e1;
t193 = (t93 - t199) * qJD(3) + t84;
t148 = t106 * qJD(3);
t73 = t105 * t148;
t152 = qJD(6) * t107;
t76 = t104 * t152;
t192 = -t73 - t76;
t109 = -pkin(1) - pkin(7);
t160 = qJ(5) + t109;
t51 = t160 * t107;
t11 = -t51 * t104 - t106 * t198;
t178 = t106 * t107;
t180 = t104 * t105;
t184 = t96 * t107;
t92 = t105 * qJ(4);
t24 = -t105 * pkin(5) + t184 - t92;
t1 = t11 * t105 + t24 * t178 + t51 * t180;
t191 = t1 * qJD(1);
t190 = t104 * t24;
t12 = t198 * t104 - t51 * t106;
t179 = t105 * t106;
t50 = t160 * t105;
t185 = t50 * t106;
t2 = (t185 + t190) * t107 - t12 * t105 - t51 * t179 - t50 * t178;
t189 = t2 * qJD(1);
t36 = -t183 + t199;
t39 = -t197 * t107 - t92;
t3 = t36 * t39;
t188 = t3 * qJD(1);
t4 = -t11 * t107 + t50 * t180;
t187 = t4 * qJD(1);
t5 = -t12 * t107 + t50 * t179;
t186 = t5 * qJD(1);
t100 = t105 ^ 2;
t182 = t100 * t106;
t181 = t104 * t102;
t13 = t39 * t105 - t36 * t107;
t177 = t13 * qJD(1);
t14 = t36 * t105 + t39 * t107;
t176 = t14 * qJD(1);
t18 = -t50 * t105 - t51 * t107;
t175 = t18 * qJD(1);
t52 = qJ(2) - t60;
t59 = t107 * pkin(3) + t92;
t19 = t59 * t105 + t52 * t107;
t174 = t19 * qJD(1);
t20 = -t52 * t105 + t59 * t107;
t173 = t20 * qJD(1);
t146 = -pkin(3) / 0.2e1 - pkin(4) / 0.2e1;
t25 = -t92 + (-t197 / 0.2e1 + t146) * t107;
t172 = t25 * qJD(1);
t79 = t100 * t104;
t26 = t79 / 0.2e1 + (0.1e1 / 0.2e1 + t196) * t104;
t171 = t26 * qJD(1);
t132 = t100 / 0.2e1 + t196;
t55 = 0.1e1 / 0.2e1 + t132;
t27 = t55 * t106;
t170 = t27 * qJD(1);
t169 = t36 * qJD(1);
t46 = t79 + t181;
t168 = t46 * qJD(1);
t47 = -t79 + t181;
t167 = t47 * qJD(1);
t159 = t100 + t102;
t48 = t159 * t106;
t166 = t48 * qJD(1);
t61 = t100 - t102;
t49 = t61 * t106;
t165 = t49 * qJD(1);
t164 = t52 * qJD(1);
t163 = t55 * qJD(1);
t162 = t61 * qJD(1);
t161 = t159 * qJD(1);
t158 = qJD(1) * qJ(2);
t156 = qJD(4) * t104;
t155 = qJD(4) * t106;
t154 = qJD(6) * t104;
t153 = qJD(6) * t106;
t88 = t102 * qJD(1);
t151 = t104 * qJD(3);
t85 = t105 * qJD(3);
t150 = t105 * qJD(5);
t149 = t105 * qJD(6);
t90 = t107 * qJD(1);
t89 = t107 * qJD(3);
t147 = t107 * qJD(4);
t145 = t59 * t164;
t144 = t52 * t90;
t143 = qJ(2) * t86;
t142 = qJ(2) * t90;
t141 = t106 * t152;
t140 = t104 * t153;
t139 = t104 * t88;
t138 = t104 * t86;
t137 = t104 * t148;
t136 = t109 * t85;
t134 = t105 * t89;
t75 = t105 * t90;
t133 = t109 * t89;
t130 = t179 * t200;
t127 = qJD(6) + t90;
t126 = qJD(2) - t147;
t124 = t104 * t73;
t91 = qJD(2) * t105;
t122 = t105 * t147 - t91;
t71 = t104 * t85;
t121 = -t71 + t141;
t120 = t127 * t105;
t103 = qJ(4) + pkin(5);
t118 = t184 / 0.2e1 - t103 * t105 / 0.2e1;
t111 = t24 / 0.2e1 + t118;
t9 = t111 * t106;
t117 = t9 * qJD(1) + t103 * t151;
t8 = t111 * t104;
t116 = -t8 * qJD(1) + t103 * t148;
t37 = (t99 / 0.2e1 - t101 / 0.2e1) * t105;
t115 = t37 * qJD(1) + t137;
t114 = t104 * qJD(1) * t182 - t37 * qJD(3);
t45 = t63 * t100;
t113 = -t45 * qJD(1) + 0.2e1 * t124;
t110 = (t103 * t107 + t128) * qJD(3) + t84;
t98 = qJ(4) * qJD(4);
t97 = qJD(3) * qJ(4);
t78 = -t85 / 0.2e1;
t74 = t106 * t89;
t72 = t106 * t90;
t70 = t104 * t90;
t56 = -0.1e1 / 0.2e1 + t132;
t44 = -t72 - t153;
t43 = t70 + t154;
t41 = t50 * qJD(3);
t40 = t75 + t149 / 0.2e1;
t33 = t37 * qJD(6);
t30 = (t197 / 0.2e1 + t146) * t107;
t29 = t102 * t195 + t182 / 0.2e1 - t106 / 0.2e1;
t28 = -t181 / 0.2e1 - t79 / 0.2e1 + t104 / 0.2e1;
t7 = -t50 * t104 - t118 * t106 + t24 * t195;
t6 = -t185 - t190 / 0.2e1 + t118 * t104;
t10 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t134, t61 * qJD(3), 0, 0, 0, qJ(2) * t89 + t91, -qJ(2) * t85 + t157, t19 * qJD(3) - t122, 0, -t20 * qJD(3) + t129 (qJD(3) * t59 + t126) * t52, t14 * qJD(3) + t129, t13 * qJD(3) + t122, t159 * qJD(5), -t3 * qJD(3) - t18 * qJD(5) + t126 * t36, -t100 * t140 + t101 * t134, -t45 * qJD(6) - 0.2e1 * t107 * t124, -t49 * qJD(3) - t105 * t76, -t47 * qJD(3) - t105 * t141, -t134, t1 * qJD(3) + t46 * qJD(5) + t5 * qJD(6) + t106 * t129, -t2 * qJD(3) + t48 * qJD(5) - t4 * qJD(6) - t104 * t129; 0, 0, 0, 0, qJD(1), t158, 0, 0, 0, 0, 0, t86, t90, t86, 0, -t90, t164, -t90, -t86, 0, t56 * qJD(5) + t169, 0, 0, 0, 0, 0, t29 * qJD(6) - t72, t28 * qJD(6) + t70; 0, 0, 0, 0, 0, 0, -t75, t162, -t85, -t89, 0, -t136 + t142, -t133 - t143, -t136 + t174, -t131, t133 - t173, t131 * t109 + t145, t51 * qJD(3) + t176, t41 + t177, t193, -t188 + (t51 * qJ(4) - t197 * t50) * qJD(3) + t50 * qJD(4) + t30 * qJD(5), t33 + (t101 * t86 - t137) * t107, qJD(6) * t130 - t112 * t107, t71 - t165, t73 - t167, -t40, t7 * qJD(6) + t104 * t110 + t148 * t51 + t191, t6 * qJD(6) + t106 * t110 - t151 * t51 - t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, -t85, t88, t136 - t144, t88, t75, t85, -t36 * t90 + t41, 0, 0, 0, 0, 0, t106 * t88 + t71, t73 - t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t56 * qJD(2) + t30 * qJD(3) - t175, 0, 0, 0, 0, 0, t168, t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, t113, -t104 * t120, -t106 * t120, t78, t29 * qJD(2) + t7 * qJD(3) - t12 * qJD(6) + t186, t28 * qJD(2) + t6 * qJD(3) + t11 * qJD(6) - t187; 0, 0, 0, 0, -qJD(1), -t158, 0, 0, 0, 0, 0, -t86, -t90, -t86, 0, t90, -t164, t90, t86, 0, t55 * qJD(5) - t169, 0, 0, 0, 0, 0, t27 * qJD(6) + t72, -t26 * qJD(6) - t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t89, -t85, 0, t89, t131, t89, t85, 0, t193, 0, 0, 0, 0, 0, -t104 * t149 + t74, -t104 * t89 - t106 * t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, 0, 0, t85, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121 + t170, -t171 + t192; 0, 0, 0, 0, 0, 0, t75, -t162, 0, 0, 0, -t142, t143, -t174, 0, t173, -t145, t150 - t176, -t107 * qJD(5) - t177, 0, -t25 * qJD(5) + t188, -t101 * t75 + t33, t127 * t130, -t141 + t165, t76 + t167, t40, -t9 * qJD(6) + t106 * t150 - t191, t8 * qJD(6) - t104 * t150 + t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t98, qJD(4), 0, 0, t98, t140, t63 * qJD(6), 0, 0, 0, -t103 * t154 + t155, -t103 * t153 - t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t97, qJD(3), 0, 0, t97, 0, 0, 0, 0, 0, t148, -t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, -t90, 0, -t172, 0, 0, 0, 0, 0, t135, -t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, t112, t44, t43, t86 / 0.2e1, -t153 * t96 - t117, t154 * t96 - t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, 0, -t88, t144, -t88, -t75, 0 (-qJD(5) + t169) * t107, 0, 0, 0, 0, 0 (-t88 - t152) * t106, t76 + t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t97, -qJD(3), 0, 0, -t97, 0, 0, 0, 0, 0, -t148, t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t89, -t161, -t55 * qJD(2) + t25 * qJD(3) + t147 + t175, 0, 0, 0, 0, 0, -t168 + t192, -t121 - t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, t90, 0, t172, 0, 0, 0, 0, 0, -t135, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, -t113, t104 * t75 + t74 (t135 - t151) * t107, t78, -t186 - t27 * qJD(2) + t9 * qJD(3) + (qJD(5) * t104 + t155) * t107, t187 + t26 * qJD(2) - t8 * qJD(3) + (qJD(5) * t106 - t156) * t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115, -t112, t72, -t70, -t86 / 0.2e1, t117, t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
