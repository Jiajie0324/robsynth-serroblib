% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRPPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 17:24
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRPPR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPPR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPPR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRPPR8_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 17:24:03
% EndTime: 2019-05-05 17:24:06
% DurationCPUTime: 3.00s
% Computational Cost: add. (3956->284), mult. (8266->216), div. (0->0), fcn. (4116->6), ass. (0->132)
t1318 = cos(qJ(3));
t1315 = sin(qJ(3));
t1321 = qJD(1) ^ 2;
t1375 = t1315 * t1321;
t1343 = t1318 * t1375;
t1287 = qJDD(3) + t1343;
t1312 = t1318 ^ 2;
t1320 = qJD(3) ^ 2;
t1293 = t1312 * t1321 + t1320;
t1259 = t1287 * t1315 + t1293 * t1318;
t1358 = qJD(3) * t1315;
t1302 = qJD(1) * t1358;
t1346 = t1318 * qJDD(1);
t1281 = -0.2e1 * t1302 + t1346;
t1316 = sin(qJ(1));
t1319 = cos(qJ(1));
t1249 = t1259 * t1316 - t1281 * t1319;
t1377 = t1259 * t1319 + t1281 * t1316;
t1288 = qJDD(3) - t1343;
t1311 = t1315 ^ 2;
t1351 = t1311 * t1321;
t1292 = t1320 + t1351;
t1261 = t1288 * t1318 - t1292 * t1315;
t1359 = qJD(1) * t1318;
t1342 = qJD(3) * t1359;
t1347 = t1315 * qJDD(1);
t1279 = 0.2e1 * t1342 + t1347;
t1248 = t1261 * t1316 + t1279 * t1319;
t1376 = t1261 * t1319 - t1279 * t1316;
t1278 = (pkin(3) * t1315 - qJ(4) * t1318) * qJD(1);
t1374 = -t1278 * t1359 - qJDD(4);
t1334 = t1342 + t1347;
t1373 = -t1334 * pkin(4) - qJ(5) * t1351 + qJDD(5);
t1314 = sin(qJ(6));
t1317 = cos(qJ(6));
t1360 = qJD(1) * t1315;
t1275 = qJD(3) * t1317 + t1314 * t1360;
t1372 = t1275 ^ 2;
t1277 = -t1314 * qJD(3) + t1317 * t1360;
t1371 = t1277 ^ 2;
t1296 = qJD(6) + t1359;
t1370 = t1296 ^ 2;
t1369 = -2 * qJD(2);
t1368 = 2 * qJD(4);
t1367 = pkin(3) + pkin(4);
t1366 = pkin(3) + pkin(8);
t1365 = -pkin(7) - pkin(1);
t1364 = -qJ(4) - pkin(5);
t1363 = t1315 * g(3);
t1362 = t1320 * pkin(3);
t1361 = t1320 * qJ(4);
t1357 = qJD(5) * qJD(1);
t1356 = t1275 * t1277;
t1350 = qJD(6) - t1296;
t1349 = qJD(6) + t1296;
t1348 = t1311 + t1312;
t1345 = qJD(1) * t1369;
t1344 = qJ(5) * t1359;
t1341 = -t1370 - t1371;
t1289 = t1316 * g(1) - t1319 * g(2);
t1331 = -t1321 * qJ(2) + qJDD(2) - t1289;
t1326 = t1365 * qJDD(1) + t1331;
t1256 = -t1318 * g(3) + t1315 * t1326;
t1280 = -t1302 + t1346;
t1340 = pkin(5) * t1318 - pkin(8) * t1315;
t1290 = -t1319 * g(1) - t1316 * g(2);
t1339 = t1368 - t1344;
t1338 = -qJDD(6) - t1280;
t1335 = -qJDD(1) * qJ(2) - t1290;
t1330 = -t1365 * t1321 + t1335;
t1328 = -pkin(3) * t1342 - qJ(4) * t1302 + t1330;
t1219 = -t1364 * t1280 - t1366 * t1347 + (-pkin(5) * t1358 + t1369 + ((-0.2e1 * pkin(8) - t1367) * qJD(3) + t1339) * t1318) * qJD(1) + t1328 + t1373;
t1291 = pkin(4) * t1343;
t1255 = t1318 * t1326 + t1363;
t1322 = t1255 + t1374;
t1229 = t1291 - t1280 * qJ(5) - 0.2e1 * t1318 * t1357 + t1364 * t1320 + (-pkin(4) - t1366) * qJDD(3) + (-qJ(5) * t1358 - t1340 * t1359) * qJD(1) - t1322;
t1337 = t1219 * t1317 - t1229 * t1314;
t1283 = t1348 * qJDD(1);
t1286 = t1348 * t1321;
t1257 = t1283 * t1319 - t1286 * t1316;
t1336 = t1283 * t1316 + t1286 * t1319;
t1263 = t1287 * t1318 - t1293 * t1315;
t1264 = t1288 * t1315 + t1292 * t1318;
t1333 = -qJDD(3) * qJ(4) - 0.2e1 * qJD(4) * qJD(3) - t1256;
t1332 = -t1338 - t1356;
t1329 = t1314 * qJDD(3) - t1317 * t1334;
t1327 = -t1317 * qJDD(3) - t1314 * t1334;
t1325 = t1350 * t1275 + t1329;
t1324 = -pkin(3) * t1347 + t1280 * qJ(4) + t1328;
t1323 = pkin(4) * t1351 + (-0.2e1 * qJD(5) + t1278) * t1360 - t1334 * qJ(5) - qJD(3) * (-qJD(3) * pkin(4) - t1344) + t1333;
t1285 = qJDD(1) * t1316 + t1319 * t1321;
t1284 = qJDD(1) * t1319 - t1316 * t1321;
t1270 = qJDD(1) * pkin(1) - t1331;
t1269 = t1321 * pkin(1) + t1335 + t1345;
t1268 = t1330 + t1345;
t1253 = -t1370 - t1372;
t1252 = t1338 - t1356;
t1251 = -t1371 - t1372;
t1245 = qJDD(3) * pkin(3) + t1322 + t1361;
t1244 = -t1278 * t1360 - t1333 - t1362;
t1243 = -t1349 * t1275 - t1329;
t1242 = -t1350 * t1277 + t1327;
t1241 = t1349 * t1277 - t1327;
t1239 = -t1255 * t1315 + t1256 * t1318;
t1238 = t1255 * t1318 + t1256 * t1315;
t1237 = (t1369 + (-pkin(3) * qJD(3) + t1368) * t1318) * qJD(1) + t1324;
t1236 = t1317 * t1252 - t1314 * t1341;
t1235 = t1314 * t1252 + t1317 * t1341;
t1234 = t1317 * t1253 - t1314 * t1332;
t1233 = t1314 * t1253 + t1317 * t1332;
t1232 = t1363 + t1361 - t1291 + (t1326 + 0.2e1 * t1357) * t1318 + t1367 * qJDD(3) + (t1280 + t1302) * qJ(5) + t1374;
t1231 = t1323 + t1362;
t1230 = (t1369 + (-t1367 * qJD(3) + t1339) * t1318) * qJD(1) + t1324 + t1373;
t1228 = -qJDD(3) * pkin(5) + t1366 * t1320 - t1340 * t1375 + t1323;
t1227 = t1244 * t1318 - t1245 * t1315;
t1226 = t1244 * t1315 + t1245 * t1318;
t1225 = t1317 * t1242 - t1314 * t1325;
t1224 = t1314 * t1242 + t1317 * t1325;
t1223 = t1236 * t1315 + t1243 * t1318;
t1222 = -t1236 * t1318 + t1243 * t1315;
t1221 = t1234 * t1315 + t1241 * t1318;
t1220 = -t1234 * t1318 + t1241 * t1315;
t1218 = t1225 * t1315 + t1251 * t1318;
t1217 = -t1225 * t1318 + t1251 * t1315;
t1216 = -t1231 * t1318 - t1232 * t1315;
t1215 = -t1231 * t1315 + t1232 * t1318;
t1214 = t1219 * t1314 + t1229 * t1317;
t1212 = t1317 * t1214 - t1314 * t1337;
t1211 = t1314 * t1214 + t1317 * t1337;
t1210 = t1212 * t1315 - t1228 * t1318;
t1209 = -t1212 * t1318 - t1228 * t1315;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1285, -t1284, 0, -t1289 * t1316 + t1290 * t1319, 0, 0, 0, 0, 0, 0, 0, t1285, t1284, -t1269 * t1319 - t1270 * t1316, 0, 0, 0, 0, 0, 0, t1248, -t1249, -t1336, t1238 * t1316 - t1268 * t1319, 0, 0, 0, 0, 0, 0, t1248, -t1336, t1249, t1226 * t1316 - t1237 * t1319, 0, 0, 0, 0, 0, 0, t1249, -t1248, t1336, t1215 * t1316 - t1230 * t1319, 0, 0, 0, 0, 0, 0, t1220 * t1316 - t1233 * t1319, t1222 * t1316 - t1235 * t1319, t1217 * t1316 - t1224 * t1319, t1209 * t1316 - t1211 * t1319; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1284, -t1285, 0, t1289 * t1319 + t1290 * t1316, 0, 0, 0, 0, 0, 0, 0, -t1284, t1285, -t1269 * t1316 + t1270 * t1319, 0, 0, 0, 0, 0, 0, -t1376, t1377, t1257, -t1238 * t1319 - t1268 * t1316, 0, 0, 0, 0, 0, 0, -t1376, t1257, -t1377, -t1226 * t1319 - t1237 * t1316, 0, 0, 0, 0, 0, 0, -t1377, t1376, -t1257, -t1215 * t1319 - t1230 * t1316, 0, 0, 0, 0, 0, 0, -t1220 * t1319 - t1233 * t1316, -t1222 * t1319 - t1235 * t1316, -t1217 * t1319 - t1224 * t1316, -t1209 * t1319 - t1211 * t1316; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1264, -t1263, 0, t1239, 0, 0, 0, 0, 0, 0, -t1264, 0, t1263, t1227, 0, 0, 0, 0, 0, 0, t1263, t1264, 0, t1216, 0, 0, 0, 0, 0, 0, t1221, t1223, t1218, t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1321, -qJDD(1), 0, t1290, 0, 0, 0, 0, 0, 0, 0, t1321, qJDD(1), -t1269, 0, 0, 0, 0, 0, 0, t1279, t1281, -t1286, -t1268, 0, 0, 0, 0, 0, 0, t1279, -t1286, -t1281, -t1237, 0, 0, 0, 0, 0, 0, -t1281, -t1279, t1286, -t1230, 0, 0, 0, 0, 0, 0, -t1233, -t1235, -t1224, -t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1321, 0, t1289, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1321, t1270, 0, 0, 0, 0, 0, 0, -t1261, t1259, t1283, -t1238, 0, 0, 0, 0, 0, 0, -t1261, t1283, -t1259, -t1226, 0, 0, 0, 0, 0, 0, -t1259, t1261, -t1283, -t1215, 0, 0, 0, 0, 0, 0, -t1220, -t1222, -t1217, -t1209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1264, -t1263, 0, t1239, 0, 0, 0, 0, 0, 0, -t1264, 0, t1263, t1227, 0, 0, 0, 0, 0, 0, t1263, t1264, 0, t1216, 0, 0, 0, 0, 0, 0, t1221, t1223, t1218, t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1264, -t1263, 0, t1239, 0, 0, 0, 0, 0, 0, -t1264, 0, t1263, t1227, 0, 0, 0, 0, 0, 0, t1263, t1264, 0, t1216, 0, 0, 0, 0, 0, 0, t1221, t1223, t1218, t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1321, -qJDD(1), t1269, 0, 0, 0, 0, 0, 0, -t1279, -t1281, t1286, t1268, 0, 0, 0, 0, 0, 0, -t1279, t1286, t1281, t1237, 0, 0, 0, 0, 0, 0, t1281, t1279, -t1286, t1230, 0, 0, 0, 0, 0, 0, t1233, t1235, t1224, t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1321, -t1270, 0, 0, 0, 0, 0, 0, t1261, -t1259, -t1283, t1238, 0, 0, 0, 0, 0, 0, t1261, -t1283, t1259, t1226, 0, 0, 0, 0, 0, 0, t1259, -t1261, t1283, t1215, 0, 0, 0, 0, 0, 0, t1220, t1222, t1217, t1209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1292, -t1287, -t1347, t1256, 0, 0, 0, 0, 0, 0, -t1292, -t1347, t1287, t1244, 0, 0, 0, 0, 0, 0, t1287, t1292, t1347, -t1231, 0, 0, 0, 0, 0, 0, t1241, t1243, t1251, -t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1288, -t1293, -t1346, t1255, 0, 0, 0, 0, 0, 0, t1288, -t1346, t1293, t1245, 0, 0, 0, 0, 0, 0, t1293, -t1288, t1346, t1232, 0, 0, 0, 0, 0, 0, -t1234, -t1236, -t1225, -t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, t1281, -t1286, -t1268, 0, 0, 0, 0, 0, 0, t1279, -t1286, -t1281, -t1237, 0, 0, 0, 0, 0, 0, -t1281, -t1279, t1286, -t1230, 0, 0, 0, 0, 0, 0, -t1233, -t1235, -t1224, -t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1292, -t1347, t1287, t1244, 0, 0, 0, 0, 0, 0, t1287, t1292, t1347, -t1231, 0, 0, 0, 0, 0, 0, t1241, t1243, t1251, -t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, -t1286, -t1281, -t1237, 0, 0, 0, 0, 0, 0, -t1281, -t1279, t1286, -t1230, 0, 0, 0, 0, 0, 0, -t1233, -t1235, -t1224, -t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1288, t1346, -t1293, -t1245, 0, 0, 0, 0, 0, 0, -t1293, t1288, -t1346, -t1232, 0, 0, 0, 0, 0, 0, t1234, t1236, t1225, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1293, t1288, -t1346, -t1232, 0, 0, 0, 0, 0, 0, t1234, t1236, t1225, t1212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1287, -t1292, -t1347, t1231, 0, 0, 0, 0, 0, 0, -t1241, -t1243, -t1251, t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1281, t1279, -t1286, t1230, 0, 0, 0, 0, 0, 0, t1233, t1235, t1224, t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, t1252, t1242, t1214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332, t1341, t1325, t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1241, t1243, t1251, -t1228;];
f_new_reg  = t1;
