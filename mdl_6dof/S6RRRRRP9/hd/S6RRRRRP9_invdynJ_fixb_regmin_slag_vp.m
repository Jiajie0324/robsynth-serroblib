% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x33]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP9_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP9_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP9_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP9_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP9_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP9_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:11:43
% EndTime: 2019-03-10 02:12:22
% DurationCPUTime: 18.80s
% Computational Cost: add. (17290->728), mult. (41621->1001), div. (0->0), fcn. (33621->14), ass. (0->333)
t315 = sin(pkin(6));
t323 = cos(qJ(2));
t442 = qJD(1) * t323;
t418 = t315 * t442;
t273 = -qJD(3) + t418;
t285 = pkin(8) * t418;
t319 = sin(qJ(2));
t486 = cos(pkin(6));
t391 = t486 * qJD(1);
t378 = pkin(1) * t391;
t229 = t319 * t378 + t285;
t318 = sin(qJ(3));
t322 = cos(qJ(3));
t560 = t229 + t273 * (pkin(3) * t318 - pkin(10) * t322);
t317 = sin(qJ(4));
t321 = cos(qJ(4));
t379 = t322 * t418;
t443 = qJD(1) * t315;
t419 = t319 * t443;
t204 = t317 * t379 - t321 * t419;
t436 = qJD(3) * t322;
t556 = -t317 * t436 + t204;
t433 = qJD(4) * t321;
t559 = t318 * t433 - t556;
t512 = cos(qJ(5));
t407 = t512 * qJD(5);
t558 = t321 * (t512 * qJD(4) + t407);
t439 = qJD(3) * t318;
t510 = pkin(9) * t317;
t557 = -t321 * t560 + t439 * t510;
t460 = t322 * t323;
t205 = (t317 * t319 + t321 * t460) * t443;
t368 = t321 * t436 - t205;
t434 = qJD(4) * t317;
t555 = -t318 * t434 + t368;
t226 = -pkin(8) * t419 + t323 * t378;
t372 = pkin(2) * t319 - pkin(9) * t323;
t227 = t372 * t443;
t450 = t322 * t226 + t318 * t227;
t143 = pkin(10) * t419 + t450;
t266 = -pkin(3) * t322 - pkin(10) * t318 - pkin(2);
t554 = t321 * t143 - t266 * t433 + t317 * t560;
t461 = t321 * t322;
t299 = pkin(9) * t461;
t417 = t318 * t442;
t380 = t315 * t417;
t553 = -pkin(4) * t380 + pkin(11) * t205 + t143 * t317 + (pkin(4) * t318 - pkin(11) * t461) * qJD(3) + (-t299 + (pkin(11) * t318 - t266) * t317) * qJD(4) + t557;
t437 = qJD(3) * t321;
t552 = -(-t318 * t437 - t322 * t434) * pkin(9) + t554 + t559 * pkin(11);
t514 = pkin(10) + pkin(11);
t421 = qJD(4) * t514;
t366 = t391 + qJD(2);
t196 = pkin(9) * t366 + t229;
t364 = -pkin(2) * t323 - pkin(9) * t319 - pkin(1);
t224 = t364 * t315;
t206 = qJD(1) * t224;
t126 = -t318 * t196 + t206 * t322;
t213 = t318 * t419 - t322 * t366;
t215 = t318 * t366 + t322 * t419;
t154 = pkin(3) * t215 + pkin(10) * t213;
t459 = t321 * t126 + t317 * t154;
t481 = t213 * t317;
t551 = pkin(11) * t481 + t317 * t421 + t459;
t149 = t321 * t154;
t550 = pkin(4) * t215 - t126 * t317 + t149 + (pkin(11) * t213 + t421) * t321;
t164 = -t317 * t215 - t273 * t321;
t165 = t215 * t321 - t273 * t317;
t316 = sin(qJ(5));
t356 = t316 * t164 + t165 * t512;
t515 = t356 ^ 2;
t89 = -t512 * t164 + t165 * t316;
t87 = t89 ^ 2;
t549 = -t87 + t515;
t320 = sin(qJ(1));
t513 = cos(qJ(1));
t374 = t486 * t513;
t237 = t319 * t374 + t320 * t323;
t393 = t319 * t486;
t239 = -t320 * t393 + t323 * t513;
t369 = g(1) * t239 + g(2) * t237;
t470 = t315 * t319;
t339 = -g(3) * t470 - t369;
t468 = t315 * t322;
t235 = t318 * t486 + t319 * t468;
t467 = t315 * t323;
t359 = -t235 * t321 + t317 * t467;
t548 = pkin(11) * t359;
t546 = t356 * t89;
t545 = t89 * qJ(6);
t252 = t316 * t321 + t317 * t512;
t520 = qJD(4) + qJD(5);
t177 = t520 * t252;
t377 = t512 * t436;
t458 = t177 * t318 + t205 * t512 - t556 * t316 - t321 * t377;
t432 = qJD(5) * t316;
t463 = t317 * t318;
t457 = -t204 * t512 + t555 * t316 + t317 * t377 + t318 * t558 - t432 * t463;
t532 = t252 * t213 + t177;
t384 = t486 * qJDD(1);
t291 = t384 + qJDD(2);
t363 = qJD(2) * t378;
t375 = pkin(1) * t384;
t430 = qJDD(1) * t319;
t403 = t315 * t430;
t382 = pkin(8) * t403 + qJD(2) * t285 + t319 * t363 - t323 * t375;
t153 = -t291 * pkin(2) + t382;
t236 = t319 * t320 - t323 * t374;
t392 = t323 * t486;
t238 = t319 * t513 + t320 * t392;
t340 = g(1) * t238 + g(2) * t236 - g(3) * t467;
t544 = t153 - t340;
t466 = t316 * t317;
t355 = t321 * t512 - t466;
t452 = t355 * t213 - t466 * t520 + t558;
t543 = pkin(4) * t559 + pkin(9) * t436;
t522 = t439 - t380;
t207 = qJD(4) + t213;
t200 = qJD(5) + t207;
t429 = qJDD(1) * t323;
t290 = t315 * t429;
t431 = qJD(1) * qJD(2);
t406 = t319 * t431;
t376 = t315 * t406;
t225 = qJDD(3) - t290 + t376;
t343 = qJD(3) * t366;
t335 = t318 * t291 + t322 * t343;
t401 = t322 * t430;
t440 = qJD(2) * t323;
t413 = t322 * t440;
t438 = qJD(3) * t319;
t325 = (t401 + (-t318 * t438 + t413) * qJD(1)) * t315 + t335;
t423 = t215 * t433 - t273 * t434 + t317 * t325;
t362 = t225 * t321 - t423;
t77 = -t215 * t434 + t317 * t225 - t273 * t433 + t321 * t325;
t31 = -t164 * t407 + t165 * t432 - t316 * t362 - t512 * t77;
t541 = t200 * t89 - t31;
t469 = t315 * t320;
t189 = t239 * t322 + t318 * t469;
t314 = qJ(4) + qJ(5);
t306 = sin(t314);
t307 = cos(t314);
t137 = t189 * t307 + t238 * t306;
t195 = -pkin(2) * t366 - t226;
t106 = t213 * pkin(3) - t215 * pkin(10) + t195;
t127 = t322 * t196 + t318 * t206;
t111 = -pkin(10) * t273 + t127;
t422 = -pkin(8) * t290 - t319 * t375 - t323 * t363;
t338 = -pkin(8) * t376 - t422;
t152 = pkin(9) * t291 + t338;
t357 = t372 * qJD(2);
t155 = (qJD(1) * t357 + qJDD(1) * t364) * t315;
t350 = t322 * t152 + t318 * t155 - t196 * t439 + t206 * t436;
t51 = pkin(10) * t225 + t350;
t415 = t318 * t440;
t128 = -t322 * t291 + t315 * (qJD(1) * (t319 * t436 + t415) + t318 * t430) + t318 * t343;
t59 = t128 * pkin(3) - pkin(10) * t325 + t153;
t353 = -t106 * t433 + t111 * t434 - t317 * t59 - t321 * t51;
t12 = pkin(11) * t362 - t353;
t65 = t321 * t106 - t111 * t317;
t48 = -pkin(11) * t165 + t65;
t42 = pkin(4) * t207 + t48;
t66 = t106 * t317 + t111 * t321;
t49 = pkin(11) * t164 + t66;
t123 = qJDD(4) + t128;
t15 = -qJD(4) * t66 - t317 * t51 + t321 * t59;
t9 = pkin(4) * t123 - pkin(11) * t77 + t15;
t400 = -t512 * t12 - t316 * t9 - t42 * t407 + t49 * t432;
t420 = t315 * t513;
t185 = t237 * t322 - t318 * t420;
t538 = t185 * t307 + t236 * t306;
t110 = pkin(3) * t273 - t126;
t79 = -pkin(4) * t164 + t110;
t540 = t79 * t89 + g(1) * t137 + g(2) * t538 - g(3) * (-t235 * t307 + t306 * t467) + t400;
t539 = t185 * t306 - t236 * t307;
t537 = t185 * t317 - t236 * t321;
t536 = t185 * t321 + t236 * t317;
t311 = t315 ^ 2;
t428 = 0.2e1 * t311;
t43 = pkin(5) * t89 + qJD(6) + t79;
t535 = t356 * t43;
t534 = -t127 + (t434 + t481) * pkin(4);
t533 = qJ(6) * t356;
t294 = pkin(8) * t470;
t525 = pkin(1) * t392 - t294;
t222 = -pkin(2) * t486 - t525;
t234 = t318 * t470 - t322 * t486;
t139 = t234 * pkin(3) - t235 * pkin(10) + t222;
t446 = pkin(1) * t393 + pkin(8) * t467;
t223 = pkin(9) * t486 + t446;
t451 = t322 * t223 + t318 * t224;
t141 = -pkin(10) * t467 + t451;
t456 = t317 * t139 + t321 * t141;
t250 = t321 * t266;
t462 = t318 * t321;
t173 = -pkin(11) * t462 + t250 + (-pkin(4) - t510) * t322;
t445 = t317 * t266 + t299;
t192 = -pkin(11) * t463 + t445;
t453 = t316 * t173 + t512 * t192;
t216 = t318 * t226;
t387 = t227 * t322 - t216;
t142 = -pkin(3) * t419 - t387;
t531 = -t142 + t543;
t274 = t514 * t317;
t275 = t514 * t321;
t447 = -t316 * t274 + t512 * t275;
t530 = -qJD(5) * t447 + t551 * t316 - t550 * t512;
t529 = -qJD(5) * t453 + t552 * t316 + t553 * t512;
t528 = t274 * t407 + t275 * t432 + t550 * t316 + t551 * t512;
t527 = -t173 * t407 + t192 * t432 - t553 * t316 + t552 * t512;
t526 = t379 - t436;
t523 = -t225 * t322 - t273 * t439;
t184 = t237 * t318 + t322 * t420;
t188 = t239 * t318 - t320 * t468;
t345 = g(1) * t188 + g(2) * t184 + g(3) * t234;
t136 = -t189 * t306 + t238 * t307;
t519 = -g(3) * (-t235 * t306 - t307 * t467) + g(2) * t539 - g(1) * t136;
t47 = t512 * t49;
t24 = t316 * t42 + t47;
t4 = -qJD(5) * t24 - t316 * t12 + t512 * t9;
t518 = -t79 * t356 + t4 + t519;
t32 = qJD(5) * t356 + t316 * t77 - t512 * t362;
t517 = t200 * t356 - t32;
t324 = qJD(1) ^ 2;
t499 = t225 * pkin(3);
t309 = t321 * pkin(4);
t498 = pkin(3) + t309;
t261 = pkin(4) * t317 + pkin(5) * t306;
t497 = pkin(9) + t261;
t45 = t316 * t49;
t23 = t512 * t42 - t45;
t16 = t23 - t533;
t13 = pkin(5) * t200 + t16;
t496 = -t16 + t13;
t233 = t355 * t318;
t495 = t522 * pkin(5) + t458 * qJ(6) - t233 * qJD(6) + t529;
t232 = t252 * t318;
t494 = -t457 * qJ(6) - qJD(6) * t232 - t527;
t493 = t512 * t48 - t45;
t464 = t317 * t141;
t390 = t321 * t139 - t464;
t62 = pkin(4) * t234 + t390 + t548;
t182 = t235 * t317 + t321 * t467;
t67 = -pkin(11) * t182 + t456;
t492 = t316 * t62 + t512 * t67;
t489 = -t532 * qJ(6) + qJD(6) * t355 - t528;
t488 = -pkin(5) * t215 - t452 * qJ(6) - t252 * qJD(6) + t530;
t487 = t77 * t317;
t485 = t123 * t321;
t484 = t164 * t207;
t483 = t165 * t207;
t181 = -qJD(3) * t234 + t315 * t413;
t482 = t181 * t317;
t480 = t215 * t273;
t474 = t273 * t318;
t473 = t306 * t322;
t472 = t307 * t322;
t471 = t311 * t324;
t465 = t317 * t123;
t262 = pkin(5) * t307 + t309;
t260 = pkin(4) * t463 + t318 * pkin(9);
t312 = t319 ^ 2;
t444 = -t323 ^ 2 + t312;
t441 = qJD(2) * t319;
t435 = qJD(4) * t207;
t228 = t315 * t357;
t230 = t525 * qJD(2);
t349 = -t223 * t439 + t224 * t436 + t318 * t228 + t322 * t230;
t416 = t315 * t441;
t83 = pkin(10) * t416 + t349;
t180 = qJD(3) * t235 + t315 * t415;
t231 = t446 * qJD(2);
t98 = t180 * pkin(3) - t181 * pkin(10) + t231;
t426 = t139 * t433 + t317 * t98 + t321 * t83;
t424 = t323 * t471;
t414 = t321 * t441;
t405 = t323 * t431;
t404 = qJD(1) * t438;
t399 = -t316 * t48 - t47;
t398 = -t316 * t67 + t512 * t62;
t394 = -t317 * t83 + t321 * t98;
t389 = t512 * t173 - t192 * t316;
t388 = -t318 * t223 + t224 * t322;
t386 = -t512 * t274 - t275 * t316;
t385 = t207 * t321;
t383 = t318 * t152 - t322 * t155 + t196 * t436 + t206 * t439;
t373 = t315 * t324 * t486;
t370 = -g(1) * t184 + g(2) * t188;
t140 = pkin(3) * t467 - t388;
t365 = 0.2e1 * t391 + qJD(2);
t361 = -t223 * t436 - t224 * t439 + t322 * t228 - t318 * t230;
t105 = -qJD(4) * t182 + t181 * t321 + t317 * t416;
t22 = pkin(4) * t180 - pkin(11) * t105 - qJD(4) * t456 + t394;
t342 = t315 * t414 - t482;
t29 = t342 * pkin(11) + (-t464 + t548) * qJD(4) + t426;
t358 = t316 * t22 + t512 * t29 + t62 * t407 - t432 * t67;
t114 = -t316 * t182 - t359 * t512;
t52 = t383 - t499;
t352 = -pkin(10) * t123 + t110 * t207;
t351 = t405 + t430;
t346 = t315 * (t384 + t291);
t344 = -g(1) * t189 - g(2) * t185 - g(3) * t235;
t94 = pkin(4) * t182 + t140;
t334 = pkin(10) * t435 - t345 + t52;
t333 = pkin(9) * t435 - t340;
t332 = -qJD(5) * t492 + t512 * t22 - t316 * t29;
t35 = -pkin(4) * t362 + t52;
t327 = qJD(4) * t359 + t342;
t10 = t32 * pkin(5) + qJDD(6) + t35;
t53 = -(-t235 * t433 - t482) * pkin(4) + (-pkin(3) * t441 - (t323 * t434 + t414) * pkin(4)) * t315 - t361;
t310 = -qJ(6) - t514;
t303 = pkin(4) * t512 + pkin(5);
t256 = pkin(3) + t262;
t163 = qJ(6) * t355 + t447;
t162 = -qJ(6) * t252 + t386;
t145 = t189 * t321 + t238 * t317;
t144 = -t189 * t317 + t238 * t321;
t119 = qJDD(5) + t123;
t113 = t182 * t512 - t316 * t359;
t86 = -qJ(6) * t232 + t453;
t85 = -pkin(5) * t322 - qJ(6) * t233 + t389;
t84 = -pkin(3) * t416 - t361;
t39 = qJD(5) * t114 + t316 * t105 - t327 * t512;
t38 = -t105 * t512 + t182 * t407 - t316 * t327 - t359 * t432;
t27 = -qJ(6) * t113 + t492;
t25 = pkin(5) * t234 - qJ(6) * t114 + t398;
t19 = t493 - t533;
t18 = t399 + t545;
t17 = t24 - t545;
t6 = -qJ(6) * t39 - qJD(6) * t113 + t358;
t5 = t180 * pkin(5) + t38 * qJ(6) - t114 * qJD(6) + t332;
t2 = -qJ(6) * t32 - qJD(6) * t89 - t400;
t1 = t119 * pkin(5) + t31 * qJ(6) - qJD(6) * t356 + t4;
t3 = [qJDD(1), g(1) * t320 - g(2) * t513, g(1) * t513 + g(2) * t320 (qJDD(1) * t312 + 0.2e1 * t319 * t405) * t311 (t319 * t429 - t431 * t444) * t428, t315 * t365 * t440 + t319 * t346, t323 * t346 - t365 * t416, t291 * t486, -t231 * t366 - t294 * t291 - t382 * t486 + g(1) * t237 - g(2) * t239 + (t291 * t392 + (-t406 + t429) * t428) * pkin(1), -pkin(1) * t351 * t428 - g(1) * t236 + g(2) * t238 - t230 * t366 - t291 * t446 - t338 * t486, t215 * t181 + t235 * t325, -t235 * t128 - t215 * t180 - t181 * t213 - t234 * t325, -t181 * t273 + t235 * t225 + (-t335 * t323 + t215 * t441 - (-t318 * t404 + t322 * t405 + t401) * t467) * t315, t180 * t273 - t225 * t234 + (t128 * t323 - t213 * t441) * t315 (-t225 * t323 - t273 * t441) * t315, -t361 * t273 + t388 * t225 + t231 * t213 + t222 * t128 + t153 * t234 + t195 * t180 + g(1) * t185 - g(2) * t189 + (t126 * t441 + t323 * t383) * t315, -t127 * t416 + t153 * t235 + t195 * t181 + t231 * t215 + t222 * t325 - t225 * t451 + t273 * t349 + t350 * t467 + t370, t105 * t165 - t359 * t77, t105 * t164 + t165 * t327 - t77 * t182 - t359 * t362, t105 * t207 - t123 * t359 + t165 * t180 + t234 * t77, -t182 * t123 + t164 * t180 + t207 * t327 + t234 * t362, t123 * t234 + t180 * t207, t394 * t207 + t390 * t123 + t15 * t234 + t65 * t180 - t84 * t164 - t140 * t362 + t52 * t182 - t110 * t342 + g(1) * t536 - g(2) * t145 + (-t110 * t359 - t207 * t456) * qJD(4) -(-t141 * t434 + t426) * t207 - t456 * t123 + t353 * t234 - t66 * t180 + t84 * t165 + t140 * t77 - t52 * t359 + t110 * t105 - g(1) * t537 - g(2) * t144, -t114 * t31 - t356 * t38, t113 * t31 - t114 * t32 - t356 * t39 + t38 * t89, t114 * t119 + t180 * t356 - t200 * t38 - t234 * t31, -t113 * t119 - t180 * t89 - t200 * t39 - t234 * t32, t119 * t234 + t180 * t200, g(1) * t538 - g(2) * t137 + t35 * t113 + t398 * t119 + t23 * t180 + t332 * t200 + t4 * t234 + t94 * t32 + t79 * t39 + t53 * t89, -g(1) * t539 - g(2) * t136 + t35 * t114 - t492 * t119 - t24 * t180 - t358 * t200 + t400 * t234 - t94 * t31 + t53 * t356 - t79 * t38, -t1 * t114 - t113 * t2 + t13 * t38 - t17 * t39 + t25 * t31 - t27 * t32 - t356 * t5 - t6 * t89 - t370, t2 * t27 + t17 * t6 + t1 * t25 + t13 * t5 + t10 * (pkin(5) * t113 + t94) + t43 * (t39 * pkin(5) + t53) - g(1) * (-t320 * pkin(1) - t237 * pkin(2) + pkin(8) * t420 + t184 * t310 - t185 * t256 - t236 * t497) - g(2) * (pkin(1) * t513 + t239 * pkin(2) + pkin(8) * t469 - t188 * t310 + t189 * t256 + t238 * t497); 0, 0, 0, -t319 * t424, t444 * t471, -t323 * t373 + t403, t319 * t373 + t290, t291, pkin(1) * t319 * t471 + t229 * t366 + t340 - t382, pkin(1) * t424 + t226 * t366 + (pkin(8) * t431 + g(3)) * t470 + t369 + t422 (-t315 * t404 + t291) * t318 ^ 2 + ((t315 * t351 + t343) * t318 - t480) * t322, -t318 * t128 + t213 * t526 - t215 * t522 + t322 * t325, -t273 * t436 + t225 * t318 + (-t215 * t319 + t273 * t460) * t443 (t213 * t319 - t323 * t474) * t443 - t523, t273 * t419, -t126 * t419 - pkin(2) * t128 - t229 * t213 - t216 * t273 + (-pkin(9) * t225 - t195 * t273) * t318 + ((pkin(9) * qJD(3) + t227) * t273 - t544) * t322, -pkin(2) * t325 + t523 * pkin(9) + t127 * t419 - t526 * t195 - t229 * t215 - t273 * t450 + t544 * t318, t555 * t165 + t77 * t462, -t205 * t164 + t165 * t204 + (t164 * t321 - t165 * t317) * t436 + (t321 * t362 - t487 + (-t164 * t317 - t165 * t321) * qJD(4)) * t318, -t322 * t77 + t368 * t207 + (-t165 * t273 - t207 * t434 + t485) * t318, -t362 * t322 + t556 * t207 + (-t164 * t273 - t207 * t433 - t465) * t318, -t123 * t322 - t207 * t474, -t110 * t204 + t250 * t123 + t142 * t164 + t557 * t207 + ((-qJD(4) * t266 + t143) * t207 + t339) * t317 + (t110 * t317 * qJD(3) - t15 + (-qJD(3) * t164 - t465) * pkin(9) - t333 * t321) * t322 + (-pkin(9) * t362 + t110 * t433 - t273 * t65 + t52 * t317) * t318, -t445 * t123 - t142 * t165 - t110 * t205 + t554 * t207 + t339 * t321 + (-t353 + (pkin(9) * t165 + t110 * t321) * qJD(3) + t333 * t317) * t322 + (-t110 * t434 + t52 * t321 + t273 * t66 + (t207 * t437 + t77) * pkin(9)) * t318, -t233 * t31 - t356 * t458, t232 * t31 - t233 * t32 - t356 * t457 + t458 * t89, t119 * t233 - t200 * t458 + t31 * t322 - t356 * t474, -t119 * t232 - t200 * t457 + t32 * t322 + t474 * t89, -t119 * t322 - t200 * t474, t389 * t119 - t4 * t322 + t260 * t32 + t35 * t232 - g(1) * (-t238 * t472 + t239 * t306) - g(2) * (-t236 * t472 + t237 * t306) - g(3) * (t306 * t319 + t307 * t460) * t315 + t531 * t89 + t457 * t79 + t522 * t23 + t529 * t200, -t453 * t119 - t400 * t322 - t24 * t439 - t260 * t31 + t35 * t233 - g(1) * (t238 * t473 + t239 * t307) - g(2) * (t236 * t473 + t237 * t307) + t531 * t356 - t458 * t79 + t527 * t200 + (t24 * t417 - g(3) * (-t306 * t460 + t307 * t319)) * t315, -t1 * t233 + t13 * t458 - t17 * t457 - t2 * t232 + t31 * t85 + t318 * t340 - t32 * t86 - t356 * t495 - t494 * t89, t2 * t86 + t1 * t85 + t10 * (pkin(5) * t232 + t260) + t494 * t17 + t495 * t13 + t340 * (t256 * t322 - t310 * t318 + pkin(2)) + (pkin(3) * qJD(1) * t470 + pkin(5) * t457 + t387 + t543) * t43 + t339 * t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215 * t213, -t213 ^ 2 + t215 ^ 2, -t213 * t273 + t325, -t128 - t480, t225, -t127 * t273 - t195 * t215 + t345 - t383, -t126 * t273 + t195 * t213 - t344 - t350, t165 * t385 + t487 (t77 + t484) * t321 + (t362 - t483) * t317, -t165 * t215 + t207 * t385 + t465, -t207 ^ 2 * t317 - t164 * t215 + t485, -t207 * t215, -pkin(3) * t423 - t149 * t207 - t65 * t215 + t127 * t164 + (t126 * t207 + t352) * t317 + (-t334 + t499) * t321, -pkin(3) * t77 - t127 * t165 + t207 * t459 + t66 * t215 + t317 * t334 + t321 * t352, -t252 * t31 + t356 * t452, -t252 * t32 - t31 * t355 - t356 * t532 - t452 * t89, t119 * t252 + t200 * t452 - t215 * t356, t119 * t355 - t200 * t532 + t215 * t89, -t200 * t215, t119 * t386 + t200 * t530 - t23 * t215 + t307 * t345 - t32 * t498 - t35 * t355 + t532 * t79 + t534 * t89, -t447 * t119 + t200 * t528 + t24 * t215 + t35 * t252 - t345 * t306 + t31 * t498 + t356 * t534 + t452 * t79, -t1 * t252 - t13 * t452 + t162 * t31 - t163 * t32 - t17 * t532 + t2 * t355 - t356 * t488 - t489 * t89 + t344, t2 * t163 + t1 * t162 + t10 * (-pkin(5) * t355 - t498) - g(1) * (-t188 * t256 - t189 * t310) - g(2) * (-t184 * t256 - t185 * t310) - g(3) * (-t234 * t256 - t235 * t310) + (pkin(5) * t532 + t534) * t43 + t489 * t17 + t488 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165 * t164, -t164 ^ 2 + t165 ^ 2, t77 - t484, t362 + t483, t123, -g(1) * t144 + g(2) * t537 + g(3) * t182 - t110 * t165 + t66 * t207 + t15, g(1) * t145 + g(2) * t536 - g(3) * t359 - t110 * t164 + t65 * t207 + t353, t546, t549, t541, t517, t119, -t399 * t200 + (t119 * t512 - t165 * t89 - t200 * t432) * pkin(4) + t518, t493 * t200 + (-t316 * t119 - t165 * t356 - t200 * t407) * pkin(4) + t540, -t13 * t89 + t17 * t356 + t18 * t356 + t19 * t89 + t303 * t31 + (-t316 * t32 + (t316 * t356 - t512 * t89) * qJD(5)) * pkin(4), t1 * t303 - t17 * t19 - t13 * t18 - pkin(5) * t535 - g(1) * (-t189 * t261 + t238 * t262) - g(2) * (-t185 * t261 + t236 * t262) - g(3) * (-t235 * t261 - t262 * t467) + (-t43 * t165 + t2 * t316 + (-t13 * t316 + t17 * t512) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t546, t549, t541, t517, t119, t24 * t200 + t518, t200 * t23 + t540, pkin(5) * t31 - t496 * t89, t496 * t17 + (t1 + t519 - t535) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87 - t515, t13 * t356 + t17 * t89 + t10 - t345;];
tau_reg  = t3;
