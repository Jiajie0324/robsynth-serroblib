% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP9_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP9_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP9_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP9_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:11:40
% EndTime: 2019-03-10 02:12:18
% DurationCPUTime: 17.09s
% Computational Cost: add. (28524->774), mult. (73122->1017), div. (0->0), fcn. (57793->10), ass. (0->325)
t351 = sin(qJ(2));
t480 = cos(pkin(6));
t425 = pkin(1) * t480;
t335 = t351 * t425;
t350 = sin(qJ(3));
t353 = cos(qJ(3));
t386 = pkin(3) * t350 - pkin(10) * t353;
t347 = sin(pkin(6));
t354 = cos(qJ(2));
t461 = t347 * t354;
t534 = (t335 + (pkin(8) + t386) * t461) * qJD(1) - t386 * qJD(3);
t349 = sin(qJ(4));
t352 = cos(qJ(4));
t439 = qJD(1) * t354;
t420 = t347 * t439;
t394 = t353 * t420;
t440 = qJD(1) * t347;
t421 = t351 * t440;
t252 = t349 * t394 - t352 * t421;
t436 = qJD(3) * t353;
t531 = -t349 * t436 + t252;
t434 = qJD(4) * t352;
t530 = -t350 * t434 + t531;
t497 = cos(qJ(5));
t410 = t497 * qJD(5);
t533 = t352 * (qJD(4) * t497 + t410);
t397 = t354 * t425;
t282 = -pkin(8) * t421 + qJD(1) * t397;
t375 = (pkin(2) * t351 - pkin(9) * t354) * t347;
t283 = qJD(1) * t375;
t206 = t282 * t353 + t283 * t350;
t194 = pkin(10) * t421 + t206;
t437 = qJD(3) * t350;
t428 = pkin(9) * t437;
t532 = t534 * t352 + (-t194 - t428) * t349;
t318 = -pkin(3) * t353 - pkin(10) * t350 - pkin(2);
t435 = qJD(4) * t349;
t445 = -t352 * t194 + t318 * t434 + (-t352 * t437 - t353 * t435) * pkin(9) - t534 * t349;
t453 = t353 * t354;
t253 = (t349 * t351 + t352 * t453) * t440;
t384 = t352 * t436 - t253;
t529 = -t350 * t435 + t384;
t442 = pkin(8) * t461 + t335;
t280 = pkin(9) * t480 + t442;
t242 = pkin(9) * qJD(2) + qJD(1) * t280;
t281 = (-pkin(2) * t354 - pkin(9) * t351 - pkin(1)) * t347;
t258 = qJD(1) * t281;
t181 = -t242 * t350 + t258 * t353;
t404 = t480 * qJD(1);
t378 = t404 + qJD(2);
t396 = t350 * t421;
t264 = -t353 * t378 + t396;
t266 = t350 * t378 + t353 * t421;
t199 = pkin(3) * t266 + pkin(10) * t264;
t115 = -t181 * t349 + t199 * t352;
t498 = -pkin(11) - pkin(10);
t424 = qJD(4) * t498;
t528 = -pkin(4) * t266 - t115 + (-pkin(11) * t264 + t424) * t352;
t116 = t181 * t352 + t199 * t349;
t465 = t264 * t349;
t527 = pkin(11) * t465 - t349 * t424 + t116;
t454 = t352 * t353;
t337 = pkin(9) * t454;
t395 = t350 * t420;
t526 = pkin(4) * t395 - pkin(11) * t253 - (pkin(4) * t350 - pkin(11) * t454) * qJD(3) - (-t337 + (pkin(11) * t350 - t318) * t349) * qJD(4) + t532;
t525 = -pkin(11) * t530 - t445;
t322 = -qJD(3) + t420;
t215 = -t266 * t349 - t322 * t352;
t216 = t266 * t352 - t322 * t349;
t348 = sin(qJ(5));
t144 = -t215 * t497 + t216 * t348;
t141 = t144 ^ 2;
t372 = t215 * t348 + t216 * t497;
t499 = t372 ^ 2;
t524 = -t141 + t499;
t433 = qJD(5) * t348;
t523 = pkin(4) * t433;
t522 = pkin(4) * t497;
t462 = t347 * t351;
t291 = t350 * t480 + t353 * t462;
t373 = -t291 * t352 + t349 * t461;
t521 = pkin(11) * t373;
t259 = qJD(4) + t264;
t248 = qJD(5) + t259;
t475 = t144 * t248;
t438 = qJD(2) * t351;
t419 = t347 * t438;
t391 = qJD(1) * t419;
t430 = qJD(1) * qJD(2);
t408 = t354 * t430;
t390 = t347 * t408;
t500 = qJD(3) * t396 - t353 * (qJD(3) * t378 + t390);
t135 = t266 * t435 + t322 * t434 - t349 * t391 + t352 * t500;
t364 = -t266 * t434 + t322 * t435 + t349 * t500 + t352 * t391;
t67 = t135 * t497 - t215 * t410 + t216 * t433 - t348 * t364;
t520 = -t67 + t475;
t519 = t144 * qJ(6);
t518 = t144 * t372;
t306 = t348 * t352 + t349 * t497;
t502 = qJD(4) + qJD(5);
t230 = t502 * t306;
t392 = t497 * t436;
t449 = t230 * t350 + t253 * t497 - t348 * t531 - t352 * t392;
t457 = t349 * t350;
t427 = t348 * t457;
t448 = -qJD(5) * t427 - t252 * t497 + t348 * t529 + t349 * t392 + t350 * t533;
t517 = t264 * t306 + t230;
t422 = t497 * t352;
t460 = t348 * t349;
t305 = -t422 + t460;
t446 = t264 * t305 + t460 * t502 - t533;
t472 = t372 * t248;
t68 = qJD(5) * t372 - t348 * t135 - t364 * t497;
t516 = -t68 + t472;
t515 = t395 - t437;
t165 = pkin(3) * t322 - t181;
t117 = -pkin(4) * t215 + t165;
t431 = t266 * qJD(3);
t220 = t350 * t390 + t431;
t284 = qJD(2) * t375;
t275 = qJD(1) * t284;
t297 = -pkin(8) * t462 + t397;
t286 = t297 * qJD(2);
t276 = qJD(1) * t286;
t118 = -t242 * t437 + t258 * t436 + t275 * t350 + t276 * t353;
t111 = pkin(10) * t391 + t118;
t382 = pkin(8) * t390;
t385 = qJD(2) * t404;
t131 = pkin(1) * t351 * t385 + t220 * pkin(3) + pkin(10) * t500 + t382;
t241 = -pkin(2) * t378 - t282;
t161 = t264 * pkin(3) - t266 * pkin(10) + t241;
t182 = t242 * t353 + t258 * t350;
t166 = -pkin(10) * t322 + t182;
t98 = t161 * t349 + t166 * t352;
t51 = -t98 * qJD(4) - t349 * t111 + t131 * t352;
t25 = pkin(4) * t220 + pkin(11) * t135 + t51;
t50 = t111 * t352 + t131 * t349 + t161 * t434 - t166 * t435;
t32 = pkin(11) * t364 + t50;
t97 = t161 * t352 - t166 * t349;
t85 = -pkin(11) * t216 + t97;
t76 = pkin(4) * t259 + t85;
t86 = pkin(11) * t215 + t98;
t406 = -t25 * t348 - t32 * t497 - t410 * t76 + t433 * t86;
t513 = t117 * t144 + t406;
t344 = t347 ^ 2;
t512 = -0.2e1 * t344 * t430;
t304 = t352 * t318;
t456 = t350 * t352;
t225 = -pkin(11) * t456 + t304 + (-pkin(9) * t349 - pkin(4)) * t353;
t274 = t318 * t349 + t337;
t238 = -pkin(11) * t457 + t274;
t168 = t225 * t348 + t238 * t497;
t490 = t168 * qJD(5) - t348 * t525 + t497 * t526;
t489 = -t225 * t410 + t238 * t433 + t348 * t526 + t497 * t525;
t405 = -pkin(5) * t144 - qJD(6);
t80 = t117 - t405;
t511 = t80 * t372;
t323 = t498 * t349;
t324 = t498 * t352;
t482 = t323 * t410 + t324 * t433 + t348 * t528 - t497 * t527;
t246 = t323 * t348 - t324 * t497;
t481 = -t246 * qJD(5) + t348 * t527 + t497 * t528;
t510 = -t259 * t97 + t50;
t509 = -t259 * t98 - t51;
t508 = qJ(6) * t372;
t389 = -t182 + (t435 + t465) * pkin(4);
t205 = -t282 * t350 + t283 * t353;
t193 = -pkin(3) * t421 - t205;
t450 = -pkin(4) * t530 + pkin(9) * t436 - t193;
t279 = -pkin(2) * t480 - t297;
t290 = t350 * t462 - t353 * t480;
t189 = pkin(3) * t290 - pkin(10) * t291 + t279;
t201 = t280 * t353 + t281 * t350;
t191 = -pkin(10) * t461 + t201;
t114 = t189 * t349 + t191 * t352;
t400 = pkin(4) * t410;
t495 = pkin(4) * t348;
t506 = -t220 * t495 - t248 * t400;
t218 = t220 * pkin(5);
t505 = -qJD(6) * t372 + t218;
t504 = t394 - t436;
t84 = t497 * t86;
t37 = t348 * t76 + t84;
t407 = t25 * t497 - t348 * t32;
t6 = -qJD(5) * t37 + t407;
t501 = -t117 * t372 + t6;
t417 = t352 * t438;
t418 = qJD(2) * t461;
t234 = -qJD(3) * t290 + t353 * t418;
t467 = t234 * t349;
t368 = t347 * t417 - t467;
t356 = qJD(4) * t373 + t368;
t355 = qJD(1) ^ 2;
t496 = pkin(4) * t216;
t494 = pkin(9) * t353;
t343 = t350 * pkin(9);
t82 = t348 * t86;
t36 = t497 * t76 - t82;
t26 = t36 - t508;
t22 = pkin(5) * t248 + t26;
t493 = t22 - t26;
t289 = t350 * t422 - t427;
t492 = pkin(5) * t515 - qJ(6) * t449 + t289 * qJD(6) + t490;
t288 = t306 * t350;
t491 = qJ(6) * t448 + qJD(6) * t288 + t489;
t46 = t497 * t85 - t82;
t459 = t349 * t191;
t113 = t189 * t352 - t459;
t93 = pkin(4) * t290 + t113 + t521;
t374 = t291 * t349 + t352 * t461;
t99 = -pkin(11) * t374 + t114;
t57 = t348 * t93 + t497 * t99;
t486 = t67 * qJ(6);
t485 = -qJ(6) * t517 - qJD(6) * t305 + t482;
t484 = -pkin(5) * t266 + qJ(6) * t446 - t306 * qJD(6) + t481;
t483 = -t144 * t400 - t495 * t68;
t398 = t242 * t436 + t258 * t437 - t275 * t353 + t276 * t350;
t112 = -pkin(3) * t391 + t398;
t479 = t112 * t349;
t478 = t112 * t352;
t477 = t135 * t349;
t471 = t215 * t259;
t470 = t216 * t215;
t469 = t216 * t259;
t192 = t220 * t290;
t468 = t220 * t353;
t466 = t248 * t266;
t464 = t266 * t264;
t370 = t322 * t350;
t463 = t344 * t355;
t458 = t349 * t220;
t455 = t352 * t220;
t452 = pkin(5) * t517 + t389;
t451 = pkin(5) * t448 + t450;
t444 = -qJD(4) * t274 - t532;
t313 = pkin(4) * t457 + t343;
t441 = t351 ^ 2 - t354 ^ 2;
t136 = -t280 * t437 + t281 * t436 + t284 * t350 + t286 * t353;
t125 = pkin(10) * t419 + t136;
t233 = qJD(3) * t291 + t350 * t418;
t287 = t442 * qJD(2);
t153 = pkin(3) * t233 - pkin(10) * t234 + t287;
t426 = t125 * t352 + t153 * t349 + t189 * t434;
t341 = -pkin(4) * t352 - pkin(3);
t415 = t322 * t437;
t412 = t353 * t431;
t45 = -t348 * t85 - t84;
t56 = -t348 * t99 + t497 * t93;
t167 = t225 * t497 - t238 * t348;
t200 = -t280 * t350 + t281 * t353;
t245 = t323 * t497 + t324 * t348;
t402 = t259 * t352;
t401 = t259 * t349;
t399 = t351 * t354 * t463;
t393 = t266 * t420;
t388 = t347 * t355 * t480;
t387 = pkin(1) * t512;
t190 = pkin(3) * t461 - t200;
t383 = -t349 * t98 - t352 * t97;
t381 = t118 * t353 + t350 * t398;
t380 = t344 * t351 * t408;
t377 = 0.2e1 * t404 + qJD(2);
t137 = -t280 * t436 - t281 * t437 + t353 * t284 - t286 * t350;
t376 = qJ(6) * t68 + t406;
t160 = -qJD(4) * t374 + t234 * t352 + t349 * t419;
t61 = -qJD(4) * t114 - t349 * t125 + t153 * t352;
t35 = pkin(4) * t233 - pkin(11) * t160 + t61;
t49 = t368 * pkin(11) + (-t459 + t521) * qJD(4) + t426;
t9 = t348 * t35 + t410 * t93 - t433 * t99 + t49 * t497;
t369 = -pkin(10) * t220 + t165 * t259;
t2 = -qJD(6) * t144 - t376;
t365 = t497 * t374;
t363 = pkin(1) * (-t385 + t463);
t362 = t364 * t352;
t10 = -qJD(5) * t57 - t348 * t49 + t35 * t497;
t171 = -t348 * t374 - t373 * t497;
t149 = pkin(4) * t374 + t190;
t359 = t6 + t486;
t77 = -pkin(4) * t364 + t112;
t28 = t68 * pkin(5) + t77;
t87 = -(-t291 * t434 - t467) * pkin(4) + (-pkin(3) * t438 - (t354 * t435 + t417) * pkin(4)) * t347 - t137;
t340 = pkin(5) + t522;
t285 = t442 * qJD(1);
t278 = pkin(5) * t305 + t341;
t277 = qJD(1) * t287;
t273 = -t349 * t494 + t304;
t227 = pkin(5) * t288 + t313;
t212 = -qJ(6) * t305 + t246;
t211 = -qJ(6) * t306 + t245;
t170 = -t348 * t373 + t365;
t140 = -qJ(6) * t288 + t168;
t138 = -pkin(5) * t353 - qJ(6) * t289 + t167;
t126 = -pkin(3) * t419 - t137;
t123 = -t248 * t370 - t468;
t120 = t233 * t248 + t192;
t108 = pkin(5) * t372 + t496;
t95 = pkin(5) * t170 + t149;
t73 = qJD(5) * t171 + t160 * t348 - t356 * t497;
t72 = qJD(5) * t365 - t160 * t497 - t348 * t356 - t373 * t433;
t64 = t144 * t266 - t305 * t220 - t248 * t517;
t63 = t220 * t306 - t248 * t446 - t266 * t372;
t60 = -t191 * t435 + t426;
t47 = -qJ(6) * t170 + t57;
t39 = t73 * pkin(5) + t87;
t38 = pkin(5) * t290 - qJ(6) * t171 + t56;
t30 = t46 - t508;
t29 = t45 + t519;
t27 = t37 - t519;
t21 = t144 * t517 + t68 * t305;
t20 = -t67 * t306 - t372 * t446;
t19 = t144 * t448 + t288 * t68;
t18 = -t289 * t67 - t372 * t449;
t17 = t144 * t73 + t170 * t68;
t16 = -t171 * t67 - t372 * t72;
t15 = t144 * t370 - t220 * t288 - t248 * t448 + t353 * t68;
t14 = t220 * t289 - t248 * t449 + t353 * t67 - t370 * t372;
t13 = -t144 * t233 - t170 * t220 - t248 * t73 - t290 * t68;
t12 = t171 * t220 + t233 * t372 - t248 * t72 - t290 * t67;
t11 = t144 * t446 + t305 * t67 - t306 * t68 - t372 * t517;
t8 = t144 * t449 + t288 * t67 - t289 * t68 - t372 * t448;
t7 = t144 * t72 + t170 * t67 - t171 * t68 - t372 * t73;
t4 = -qJ(6) * t73 - qJD(6) * t170 + t9;
t3 = pkin(5) * t233 + qJ(6) * t72 - qJD(6) * t171 + t10;
t1 = t359 + t505;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t380, t441 * t512, t377 * t418, -0.2e1 * t380, -t377 * t419, 0, -t277 * t480 - t287 * t378 + t351 * t387, -t276 * t480 - t286 * t378 + t354 * t387 (t276 * t354 + t277 * t351 + (-t282 * t354 - t285 * t351) * qJD(2) + (t286 * t354 + t287 * t351 + (-t297 * t354 - t351 * t442) * qJD(2)) * qJD(1)) * t347, t276 * t442 - t277 * t297 - t282 * t287 + t285 * t286, t234 * t266 - t291 * t500, -t291 * t220 - t266 * t233 - t234 * t264 + t290 * t500, -t234 * t322 + t266 * t419 + t291 * t391 + t461 * t500, t233 * t264 + t192, t233 * t322 + (t220 * t354 + (-qJD(1) * t290 - t264) * t438) * t347 (-t322 * t347 - t344 * t439) * t438, -t137 * t322 + t220 * t279 + t233 * t241 + t264 * t287 + t277 * t290 + (t398 * t354 + (qJD(1) * t200 + t181) * t438) * t347, t118 * t461 + t136 * t322 - t182 * t419 - t201 * t391 + t234 * t241 + t266 * t287 + t277 * t291 - t279 * t500, -t118 * t290 - t136 * t264 - t137 * t266 - t181 * t234 - t182 * t233 + t200 * t500 - t201 * t220 + t291 * t398, t118 * t201 + t136 * t182 + t137 * t181 - t200 * t398 + t241 * t287 + t277 * t279, t135 * t373 + t160 * t216, t135 * t374 + t160 * t215 + t216 * t356 - t364 * t373, -t135 * t290 + t160 * t259 + t216 * t233 - t220 * t373, t215 * t356 - t364 * t374, t215 * t233 - t220 * t374 + t259 * t356 + t290 * t364, t233 * t259 + t192, t112 * t374 + t113 * t220 - t126 * t215 - t165 * t356 - t190 * t364 + t233 * t97 + t259 * t61 + t290 * t51, -t112 * t373 - t114 * t220 + t126 * t216 - t135 * t190 + t160 * t165 - t233 * t98 - t259 * t60 - t290 * t50, t113 * t135 + t114 * t364 - t160 * t97 + t215 * t60 - t216 * t61 + t356 * t98 + t373 * t51 - t374 * t50, t112 * t190 + t113 * t51 + t114 * t50 + t126 * t165 + t60 * t98 + t61 * t97, t16, t7, t12, t17, t13, t120, t10 * t248 + t117 * t73 + t144 * t87 + t149 * t68 + t170 * t77 + t220 * t56 + t233 * t36 + t290 * t6, -t117 * t72 - t149 * t67 + t171 * t77 - t220 * t57 - t233 * t37 - t248 * t9 + t290 * t406 + t372 * t87, -t10 * t372 - t144 * t9 + t170 * t406 - t171 * t6 + t36 * t72 - t37 * t73 + t56 * t67 - t57 * t68, t10 * t36 + t117 * t87 + t149 * t77 + t37 * t9 - t406 * t57 + t56 * t6, t16, t7, t12, t17, t13, t120, t1 * t290 + t144 * t39 + t170 * t28 + t22 * t233 + t220 * t38 + t248 * t3 + t68 * t95 + t73 * t80, t171 * t28 - t2 * t290 - t220 * t47 - t233 * t27 - t248 * t4 + t372 * t39 - t67 * t95 - t72 * t80, -t1 * t171 - t144 * t4 - t170 * t2 + t22 * t72 - t27 * t73 - t3 * t372 + t38 * t67 - t47 * t68, t1 * t38 + t2 * t47 + t22 * t3 + t27 * t4 + t28 * t95 + t39 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, t441 * t463, -t354 * t388, t399, t351 * t388, 0, t285 * t378 + t351 * t363 - t382, pkin(8) * t391 + t282 * t378 + t354 * t363, 0, 0, -t350 * t500 - t353 * t393 + t412, -t353 * t500 + t504 * t264 + (-t220 + t393 - t431) * t350, -t322 * t436 + (t322 * t453 + (qJD(2) * t350 - t266) * t351) * t440, -t264 * t370 - t468, t415 + (-t354 * t370 + (qJD(2) * t353 + t264) * t351) * t440, t322 * t421, -pkin(2) * t220 + t205 * t322 - t264 * t285 - t277 * t353 + (t241 * t350 + t322 * t494) * qJD(3) + (-t181 * t351 + (-pkin(9) * t438 - t241 * t354) * t350) * t440, pkin(2) * t500 - pkin(9) * t415 + t182 * t421 - t206 * t322 - t241 * t504 - t285 * t266 + t277 * t350 - t391 * t494, t205 * t266 - t500 * t343 + t381 + (t206 + t428) * t264 + t515 * t182 + t504 * t181 + (t412 - t468) * pkin(9), -pkin(2) * t277 - t181 * t205 - t182 * t206 - t241 * t285 + ((-t181 * t353 - t182 * t350) * qJD(3) + t381) * pkin(9), -t135 * t456 + t216 * t529, -t253 * t215 + t216 * t252 + (t215 * t352 - t216 * t349) * t436 + (t362 + t477 + (-t215 * t349 - t216 * t352) * qJD(4)) * t350, t135 * t353 + t384 * t259 + (-t216 * t322 - t259 * t435 + t455) * t350, t215 * t530 - t364 * t457, -t364 * t353 + t531 * t259 + (-t215 * t322 - t259 * t434 - t458) * t350, -t259 * t370 - t468, -t165 * t252 + t193 * t215 + t273 * t220 + t444 * t259 + (-t51 + (-pkin(9) * t215 + t165 * t349) * qJD(3)) * t353 + (-pkin(9) * t364 + t165 * t434 - t322 * t97 + t479) * t350, -t165 * t253 - t193 * t216 - t220 * t274 - t445 * t259 + (t50 + (pkin(9) * t216 + t165 * t352) * qJD(3)) * t353 + (-pkin(9) * t135 - t165 * t435 + t322 * t98 + t478) * t350, t274 * t364 + t273 * t135 + t98 * t252 + t97 * t253 - t444 * t216 + t445 * t215 + t383 * t436 + (-t50 * t349 - t51 * t352 + (t349 * t97 - t352 * t98) * qJD(4)) * t350, -t165 * t193 + t273 * t51 + t274 * t50 + t445 * t98 + t444 * t97 + (t112 * t350 + t165 * t436) * pkin(9), t18, t8, t14, t19, t15, t123, t117 * t448 + t144 * t450 + t167 * t220 - t248 * t490 + t288 * t77 + t313 * t68 - t353 * t6 - t36 * t370, -t117 * t449 - t168 * t220 + t248 * t489 + t289 * t77 - t313 * t67 - t353 * t406 + t37 * t370 + t372 * t450, t144 * t489 + t167 * t67 - t168 * t68 + t288 * t406 - t289 * t6 + t36 * t449 - t37 * t448 + t372 * t490, t117 * t450 + t167 * t6 - t168 * t406 + t313 * t77 - t36 * t490 - t37 * t489, t18, t8, t14, t19, t15, t123, -t1 * t353 + t138 * t220 + t144 * t451 - t22 * t370 + t227 * t68 - t248 * t492 + t28 * t288 + t448 * t80, -t140 * t220 + t2 * t353 - t227 * t67 + t248 * t491 + t27 * t370 + t28 * t289 + t372 * t451 - t449 * t80, -t1 * t289 + t138 * t67 - t140 * t68 + t144 * t491 - t2 * t288 + t22 * t449 - t27 * t448 + t372 * t492, t1 * t138 + t140 * t2 - t22 * t492 + t227 * t28 - t27 * t491 + t451 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464, -t264 ^ 2 + t266 ^ 2, -t264 * t322 - t500, -t464, -t266 * t322 - t220, t391, -t182 * t322 - t241 * t266 - t398, -t181 * t322 + t241 * t264 - t118, 0, 0, t216 * t402 - t477 (-t135 + t471) * t352 + (t364 - t469) * t349, -t216 * t266 + t259 * t402 + t458, -t215 * t401 + t362, -t215 * t266 - t259 * t401 + t455, -t259 * t266, pkin(3) * t364 - t478 - t97 * t266 + t182 * t215 + (-pkin(10) * t434 - t115) * t259 + t369 * t349, pkin(3) * t135 + t479 - t182 * t216 + t266 * t98 + (pkin(10) * t435 + t116) * t259 + t369 * t352, t115 * t216 - t116 * t215 + ((qJD(4) * t216 + t364) * pkin(10) + t510) * t352 + ((-qJD(4) * t215 - t135) * pkin(10) + t509) * t349, -pkin(3) * t112 - t115 * t97 - t116 * t98 - t165 * t182 + (qJD(4) * t383 - t51 * t349 + t50 * t352) * pkin(10), t20, t11, t63, t21, t64, -t466, t117 * t517 + t144 * t389 + t220 * t245 + t248 * t481 - t266 * t36 + t305 * t77 + t341 * t68, -t117 * t446 - t220 * t246 - t248 * t482 + t266 * t37 + t306 * t77 - t341 * t67 + t372 * t389, -t144 * t482 + t245 * t67 - t246 * t68 + t305 * t406 - t306 * t6 + t36 * t446 - t37 * t517 - t372 * t481, t117 * t389 + t245 * t6 - t246 * t406 + t341 * t77 + t36 * t481 + t37 * t482, t20, t11, t63, t21, t64, -t466, t144 * t452 + t211 * t220 - t22 * t266 + t248 * t484 + t278 * t68 + t28 * t305 + t517 * t80, -t212 * t220 - t248 * t485 + t266 * t27 - t278 * t67 + t28 * t306 + t372 * t452 - t446 * t80, -t1 * t306 - t144 * t485 - t2 * t305 + t211 * t67 - t212 * t68 + t22 * t446 - t27 * t517 - t372 * t484, t1 * t211 + t2 * t212 + t22 * t484 + t27 * t485 + t278 * t28 + t452 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, -t215 ^ 2 + t216 ^ 2, -t135 - t471, t470, t364 + t469, t220, -t165 * t216 - t509, -t165 * t215 - t510, 0, 0, t518, t524, t520, -t518, t516, t220, -t45 * t248 + (-t144 * t216 + t220 * t497 - t248 * t433) * pkin(4) + t501, t248 * t46 - t372 * t496 + t506 + t513, t67 * t522 + t483 + (t37 + t45 + t523) * t372 + (t46 - t36) * t144, -t36 * t45 - t37 * t46 + (t497 * t6 - t117 * t216 - t348 * t406 + (-t348 * t36 + t37 * t497) * qJD(5)) * pkin(4), t518, t524, t520, -t518, t516, t220, t486 - t108 * t144 - t511 + t340 * t220 - t29 * t248 + (-t84 + (-pkin(4) * t248 - t76) * t348) * qJD(5) + t407 + t505, -t108 * t372 + t144 * t80 + t248 * t30 - t2 + t506, t340 * t67 + t483 + (t27 + t29 + t523) * t372 + (t30 - t22) * t144, t1 * t340 - t80 * t108 - t22 * t29 - t27 * t30 + (t2 * t348 + (-t22 * t348 + t27 * t497) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t518, t524, t520, -t518, t516, t220, t248 * t37 + t501, t248 * t36 + t513, 0, 0, t518, t524, t520, -t518, t516, t220, t27 * t248 + 0.2e1 * t218 + (t405 - t80) * t372 + t359, -pkin(5) * t499 + t248 * t26 + (qJD(6) + t80) * t144 + t376, pkin(5) * t67 - t144 * t493, t493 * t27 + (t1 - t511) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 + t472, -t67 - t475, -t141 - t499, t27 * t144 + t22 * t372 + t28;];
tauc_reg  = t5;
