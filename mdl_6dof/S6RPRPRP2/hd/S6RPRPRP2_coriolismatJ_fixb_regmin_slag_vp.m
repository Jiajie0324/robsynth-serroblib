% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:06:16
% EndTime: 2019-03-09 03:06:27
% DurationCPUTime: 5.42s
% Computational Cost: add. (6985->374), mult. (12882->495), div. (0->0), fcn. (13793->8), ass. (0->305)
t267 = cos(qJ(5));
t264 = sin(pkin(10));
t266 = sin(qJ(3));
t268 = cos(qJ(3));
t432 = cos(pkin(10));
t245 = t264 * t266 - t268 * t432;
t243 = t245 ^ 2;
t324 = t432 * t266;
t405 = t264 * t268;
t247 = t324 + t405;
t244 = t247 ^ 2;
t352 = -t244 - t243;
t471 = t352 * t267;
t476 = qJD(1) * t471;
t265 = sin(qJ(5));
t472 = t352 * t265;
t475 = qJD(1) * t472;
t474 = qJD(4) * t471;
t473 = qJD(4) * t472;
t238 = t247 * qJ(6);
t450 = t266 * pkin(3);
t160 = pkin(4) * t247 + pkin(8) * t245 + t450;
t127 = t265 * t160;
t257 = sin(pkin(9)) * pkin(1) + pkin(7);
t397 = qJ(4) + t257;
t240 = t397 * t266;
t242 = t397 * t268;
t129 = t432 * t240 + t242 * t264;
t469 = t129 * t267;
t395 = -t469 / 0.2e1 + t127 / 0.2e1;
t470 = -t238 - t395;
t467 = -t264 * t240 + t432 * t242;
t420 = t467 * t265;
t419 = t467 * t267;
t468 = 0.2e1 * t265;
t374 = qJD(3) * t267;
t227 = t247 * t374;
t153 = t265 * t245;
t364 = t153 * qJD(5);
t389 = -t227 + t364;
t136 = t153 * qJD(3);
t368 = qJD(5) * t267;
t344 = t247 * t368;
t466 = t344 - t136;
t157 = t267 * t245;
t147 = t157 * qJD(3);
t369 = qJD(5) * t265;
t345 = t247 * t369;
t465 = t345 + t147;
t365 = t153 * qJD(1);
t464 = t365 + t369;
t404 = t265 * qJ(6);
t449 = t267 * pkin(5);
t311 = t404 + t449;
t150 = t311 * t247;
t463 = t150 / 0.2e1;
t462 = -t160 / 0.2e1;
t402 = t267 * qJ(6);
t453 = pkin(5) * t265;
t249 = t402 - t453;
t461 = -t249 / 0.2e1;
t460 = t249 / 0.2e1;
t262 = t265 ^ 2;
t459 = -t262 / 0.2e1;
t263 = t267 ^ 2;
t458 = -t263 / 0.2e1;
t457 = -t265 / 0.2e1;
t456 = t265 / 0.2e1;
t455 = -t267 / 0.2e1;
t454 = t267 / 0.2e1;
t452 = t245 * pkin(5);
t451 = t247 * pkin(5);
t259 = -cos(pkin(9)) * pkin(1) - pkin(2);
t283 = -t268 * pkin(3) + t259;
t272 = t245 * pkin(4) - t247 * pkin(8) + t283;
t84 = -t267 * t272 + t420;
t61 = t84 - t452;
t349 = -t84 / 0.2e1 + t61 / 0.2e1;
t414 = t245 * qJ(6);
t85 = t265 * t272 + t419;
t60 = t85 + t414;
t350 = -t60 / 0.2e1 + t85 / 0.2e1;
t274 = t265 * t350 + t267 * t349;
t6 = t245 * t463 + t247 * t274;
t448 = qJD(1) * t6;
t447 = qJD(3) * pkin(3);
t446 = t60 * t245;
t445 = t60 * t267;
t444 = t61 * t265;
t393 = -t469 + t127;
t70 = t238 + t393;
t443 = t70 * t267;
t401 = t267 * t160;
t403 = t129 * t265;
t71 = -t401 - t403 - t451;
t442 = t71 * t265;
t158 = t267 * t247;
t8 = t61 * t157 - t71 * t158 + (t70 * t247 - t446) * t265;
t441 = t8 * qJD(1);
t440 = t84 * t245;
t439 = t85 * t245;
t9 = -t85 * t158 + (t445 + (t61 - t84) * t265) * t247;
t438 = t9 * qJD(1);
t90 = t245 * t249 + t467;
t437 = t90 * t265;
t436 = t90 * t267;
t155 = t265 * t247;
t316 = pkin(5) * t155 - qJ(6) * t158;
t91 = t129 + t316;
t435 = t91 * t265;
t434 = t91 * t267;
t258 = -pkin(3) * t432 - pkin(4);
t239 = -t311 + t258;
t328 = t158 / 0.2e1;
t433 = t239 * t328 + t435 / 0.2e1;
t26 = -t439 + (t150 * t265 + t434) * t247;
t431 = qJD(1) * t26;
t27 = -t440 + (-t150 * t267 + t435) * t247;
t430 = qJD(1) * t27;
t32 = -t158 * t91 + t446;
t429 = qJD(1) * t32;
t40 = -t129 * t155 + t440;
t428 = qJD(1) * t40;
t41 = t129 * t158 - t439;
t427 = qJD(1) * t41;
t56 = t129 * t247 - t245 * t467;
t426 = qJD(1) * t56;
t423 = qJD(5) * t84;
t289 = t414 / 0.2e1 - t350;
t293 = t452 / 0.2e1 - t349;
t10 = t265 * t289 + t267 * t293;
t422 = t10 * qJD(1);
t11 = t265 * t293 - t267 * t289;
t421 = t11 * qJD(1);
t14 = (t60 - t436) * t247 + (t70 + t434) * t245;
t417 = t14 * qJD(1);
t19 = (-t84 + t420) * t247 + t401 * t245;
t416 = t19 * qJD(1);
t326 = t458 + t459;
t411 = t247 * t239;
t332 = t411 / 0.2e1;
t256 = pkin(3) * t264 + pkin(8);
t408 = t256 * t245;
t276 = t326 * t408 + t332;
t290 = t454 * t71 + t457 * t70;
t24 = t276 + t290;
t415 = t24 * qJD(1);
t413 = t245 * t247;
t412 = t245 * t264;
t410 = t247 * t256;
t409 = t249 * t265;
t407 = t258 * t247;
t72 = (0.1e1 / 0.2e1 + t326) * t413;
t399 = t72 * qJD(1);
t396 = t403 / 0.2e1 + t401 / 0.2e1;
t146 = t157 * qJD(5);
t375 = qJD(3) * t265;
t226 = t247 * t375;
t391 = t146 + t226;
t390 = (t459 + t263 / 0.2e1) * t247;
t387 = -t262 - t263;
t252 = t263 - t262;
t351 = t244 - t243;
t107 = t351 * t265;
t386 = qJD(1) * t107;
t109 = t351 * t267;
t384 = qJD(1) * t109;
t380 = qJD(1) * t245;
t379 = qJD(1) * t247;
t378 = qJD(1) * t265;
t377 = qJD(1) * t267;
t376 = qJD(1) * t268;
t373 = qJD(4) * t153;
t372 = qJD(4) * t265;
t371 = qJD(4) * t267;
t370 = qJD(5) * t245;
t367 = qJD(6) * t265;
t325 = t432 * t247;
t278 = -t412 / 0.2e1 - t325 / 0.2e1;
t115 = (-t266 / 0.2e1 + t278) * pkin(3);
t366 = t115 * qJD(1);
t363 = t153 * qJD(6);
t362 = t155 * qJD(1);
t148 = t157 * qJD(1);
t361 = t158 * qJD(1);
t230 = t262 * t245;
t231 = t263 * t245;
t161 = t230 + t231;
t360 = t161 * qJD(1);
t359 = t161 * qJD(3);
t358 = t352 * qJD(1);
t241 = t324 / 0.2e1 + t405 / 0.2e1;
t357 = t241 * qJD(1);
t237 = t245 * qJD(6);
t253 = -t266 ^ 2 + t268 ^ 2;
t356 = t253 * qJD(1);
t355 = t266 * qJD(3);
t354 = t267 * qJD(6);
t353 = t268 * qJD(3);
t232 = t451 / 0.2e1;
t329 = t408 / 0.2e1;
t348 = -t239 * t158 / 0.2e1 + t267 * t329 - t435 / 0.2e1;
t347 = t232 + t396;
t346 = t263 * t379;
t343 = t256 * t369;
t342 = t256 * t368;
t341 = t265 * t354;
t340 = qJD(3) * t413;
t339 = t259 * t266 * qJD(1);
t338 = t259 * t376;
t337 = t265 * t368;
t336 = t247 * t378;
t335 = t247 * t367;
t254 = t265 * t374;
t334 = t266 * t376;
t333 = t247 * t377;
t331 = -t409 / 0.2e1;
t330 = -t408 / 0.2e1;
t105 = t241 + t390;
t323 = qJD(1) * t105 + t254;
t151 = (t262 / 0.2e1 + t458) * t247;
t322 = qJD(1) * t151 - t254;
t202 = t244 * t265 * t377;
t321 = qJD(3) * t151 + t202;
t320 = qJD(5) + t380;
t319 = t265 * t333;
t318 = t265 * t227;
t317 = -t451 / 0.2e1 - t403 / 0.2e1;
t315 = 0.2e1 * t318;
t314 = -t150 / 0.2e1 + t330;
t291 = -t445 / 0.2e1 - t444 / 0.2e1;
t4 = (t443 / 0.2e1 + t91 / 0.2e1 + t442 / 0.2e1) * t247 + (t90 / 0.2e1 + t291) * t245;
t5 = t60 * t70 + t61 * t71 + t90 * t91;
t310 = t5 * qJD(1) + t4 * qJD(2);
t7 = t150 * t91 - t60 * t84 + t61 * t85;
t309 = t7 * qJD(1) + t6 * qJD(2);
t308 = t442 + t443;
t80 = (0.1e1 + t387) * t413;
t307 = t4 * qJD(1) + t80 * qJD(2);
t15 = (-t61 + t437) * t247 + (-t71 - t435) * t245;
t306 = t15 * qJD(1);
t16 = t91 * t247 + (-t444 - t445) * t245;
t305 = qJD(1) * t16 + qJD(2) * t72;
t20 = (-t85 + t419) * t247 + (-t393 - t469) * t245;
t304 = t20 * qJD(1);
t37 = t283 * t450;
t303 = t37 * qJD(1);
t301 = t239 * t245 + t410;
t300 = -t245 * t258 - t410;
t168 = t239 * t267 - t409;
t270 = (t247 * t460 - t91 / 0.2e1) * t267 + (t332 + t314) * t265;
t22 = t270 + t470;
t299 = -qJD(1) * t22 + qJD(3) * t168;
t169 = -t239 * t265 - t249 * t267;
t17 = (t331 - pkin(5) / 0.2e1) * t247 + (t462 + t314) * t267 + t317 + t433;
t298 = -qJD(1) * t17 + qJD(3) * t169;
t297 = t320 * t265;
t296 = t320 * t267;
t295 = -qJD(5) * t249 - t367;
t294 = -t70 * qJ(6) / 0.2e1 + t71 * pkin(5) / 0.2e1;
t292 = -t402 / 0.2e1 + t453 / 0.2e1;
t29 = t347 + t348;
t288 = -qJD(1) * t29 + t239 * t375;
t197 = t267 * t330;
t35 = t197 + (t407 / 0.2e1 + t462) * t267;
t287 = -qJD(1) * t35 - t258 * t375;
t271 = (t329 - t407 / 0.2e1) * t265 + t469 / 0.2e1;
t33 = t271 + t395;
t286 = -qJD(1) * t33 - t258 * t374;
t285 = t247 * t296;
t284 = qJD(5) * t241 + t245 * t379;
t162 = t252 * t244;
t281 = qJD(1) * t162 + t315;
t280 = -qJD(3) * t252 + 0.2e1 * t319;
t279 = t292 * t245;
t269 = t239 * t463 + t256 * t274 + t461 * t91;
t3 = t269 + t294;
t95 = (t460 + t292) * t245;
t277 = t239 * t249 * qJD(3) - t3 * qJD(1) + t95 * qJD(2);
t275 = -qJD(5) * t311 + t354;
t170 = t244 * t263 + t243;
t273 = qJD(1) * t170 + t318 + t370;
t229 = t241 * qJD(3);
t203 = t267 * t335;
t201 = t320 * qJ(6);
t190 = qJD(3) * t262 + t319;
t132 = t151 * qJD(5);
t114 = t450 / 0.2e1 + t278 * pkin(3);
t113 = t148 + t368;
t106 = -t241 + t390;
t96 = t245 * t461 + t279;
t92 = t245 * t336 - t147;
t82 = t85 * qJD(5);
t81 = t247 * t297;
t36 = t129 * t456 + t258 * t328 + t197 + t396;
t34 = t271 - t395;
t28 = -t401 / 0.2e1 + t317 + t348;
t23 = t276 - t290;
t21 = t270 - t470;
t18 = t247 * t331 + t267 * t314 + t232 + t347 + t433;
t13 = t84 * t455 + t60 * t457 + t85 * t456 + t61 * t454 + (t404 / 0.2e1 + t449 / 0.2e1) * t245;
t12 = t455 * t85 + t457 * t84 + t279 - t291;
t2 = t269 - t294;
t1 = qJD(3) * t4 + qJD(4) * t72 + qJD(5) * t6;
t25 = [0, 0, 0, 0, t266 * t353, t253 * qJD(3), 0, 0, 0, t259 * t355, t259 * t353, -qJD(4) * t352, qJD(3) * t37 + qJD(4) * t56, -t244 * t337 - t263 * t340, -qJD(5) * t162 + t245 * t315, qJD(3) * t109 - t245 * t345, -qJD(3) * t107 - t245 * t344, t340, qJD(3) * t19 + qJD(5) * t41 - t473, qJD(3) * t20 + qJD(5) * t40 - t474, qJD(3) * t15 + qJD(5) * t26 - t244 * t341 - t473, -qJD(3) * t8 - qJD(5) * t9 - t245 * t335, qJD(3) * t14 + qJD(5) * t27 + qJD(6) * t170 + t474, qJD(3) * t5 + qJD(4) * t16 + qJD(5) * t7 + qJD(6) * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, t334, t356, t353, -t355, 0, -t257 * t353 + t339, t257 * t355 + t338 (t245 * t432 - t247 * t264) * t447 (-t129 * t264 - t432 * t467) * t447 + t114 * qJD(4) + t303, -t132 + (-t254 - t346) * t245 (t230 - t231) * qJD(3) + (-qJD(5) + t380) * t158 * t468, t226 + t384, t227 - t386, t284, t416 + (t265 * t300 - t419) * qJD(3) + t36 * qJD(5) (t267 * t300 + t420) * qJD(3) + t34 * qJD(5) + t304 (-t265 * t301 - t436) * qJD(3) + t18 * qJD(5) + t106 * qJD(6) + t306, qJD(3) * t308 + t13 * qJD(5) - t441, t417 + (t267 * t301 - t437) * qJD(3) + t21 * qJD(5) + t203 (t90 * t239 + t256 * t308) * qJD(3) + t23 * qJD(4) + t2 * qJD(5) + t28 * qJD(6) + t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, qJD(3) * t114 + t426, 0, 0, 0, 0, 0, -t475, -t476, -t475, 0, t476, qJD(3) * t23 + qJD(5) * t12 + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, -t281, -t81, -t285, t229, qJD(3) * t36 + t427 - t82, qJD(3) * t34 + t423 + t428, qJD(3) * t18 + t431 - t82, t13 * qJD(3) + qJD(5) * t316 - t335 - t438, qJD(3) * t21 + t237 - t423 + t430, t2 * qJD(3) + t12 * qJD(4) + (-pkin(5) * t85 - qJ(6) * t84) * qJD(5) + t60 * qJD(6) + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t106 - t202, -t81, t273, qJD(3) * t28 + qJD(5) * t60 + t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, -t353, 0 (-t325 - t412) * t447, 0, 0, 0, 0, 0, t389, t391, t389, -t359, -t391 (t387 * t408 + t411) * qJD(3) + t96 * qJD(5) - t363 + t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466, t465, -t466, 0, -t465, qJD(3) * t96 - qJD(5) * t150 + t247 * t354 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466; 0, 0, 0, 0, -t334, -t356, 0, 0, 0, -t339, -t338, 0, qJD(4) * t115 - t303, t245 * t346 - t132, -t285 * t468, t146 - t384, -t364 + t386, -t284, qJD(5) * t35 - t247 * t371 - t416, qJD(4) * t155 + qJD(5) * t33 - t304, -qJD(4) * t158 + qJD(5) * t17 + qJD(6) * t105 - t306, -qJD(4) * t161 - qJD(5) * t10 + qJD(6) * t157 + t441, qJD(5) * t22 - t247 * t372 + t203 - t417, qJD(4) * t24 + qJD(5) * t3 + qJD(6) * t29 - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t95 - t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t337, t252 * qJD(5), 0, 0, 0, t258 * t369, t258 * t368, -qJD(5) * t169 + t341, 0, -qJD(5) * t168 + qJD(6) * t262, t295 * t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, 0, 0, 0, 0, 0, -t333, t362, -t361, -t360, -t336, t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, -t280, t113, -t464, -t357, -t287 - t342, -t286 + t343, -t298 - t342, t275 - t422, -t299 - t343, t256 * t275 - t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, t113, t190, -t288 + t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, -qJD(3) * t115 - t426, 0, 0, 0, 0, 0, t475 - t389, -qJD(3) * t155 - t245 * t368 + t476, qJD(3) * t158 - t245 * t369 + t475, t359, -t476 + t391, -qJD(3) * t24 - qJD(5) * t11 - t305 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, 0, 0, 0, 0, 0, t333, -t362, t361, t360, t336, -t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t464, -t296, -t297, 0, t113, -t295 - t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, t281, t92, t245 * t333 + t136, t229, -qJD(3) * t35 + t373 - t427, -qJD(3) * t33 + t245 * t371 - t428, -qJD(3) * t17 + t245 * t372 - t431, qJD(3) * t10 + t438, -qJD(3) * t22 - qJD(4) * t157 + t237 - t430, qJ(6) * t237 - qJD(3) * t3 + qJD(4) * t11 - t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t95 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, t280, -t148, t365, t357, t287, t286, t298, t422, t299, t277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, t245 * t377, t245 * t378, 0, -t148, t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t105 + t202, t92, -t273, -qJ(6) * t370 - qJD(3) * t29 - t373 - t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, -t148, -t190, t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t25;
