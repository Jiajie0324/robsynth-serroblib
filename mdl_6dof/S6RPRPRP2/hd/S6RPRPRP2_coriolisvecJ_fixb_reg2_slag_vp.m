% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPRP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:06:23
% EndTime: 2019-03-09 03:06:27
% DurationCPUTime: 3.24s
% Computational Cost: add. (5642->392), mult. (13424->485), div. (0->0), fcn. (9246->8), ass. (0->208)
t142 = sin(pkin(10));
t146 = sin(qJ(3));
t148 = cos(qJ(3));
t232 = cos(pkin(10));
t124 = t142 * t148 + t146 * t232;
t116 = t124 * qJD(3);
t105 = qJD(1) * t116;
t147 = cos(qJ(5));
t101 = t147 * t105;
t188 = t232 * t148;
t129 = qJD(1) * t188;
t213 = qJD(1) * t146;
t114 = t142 * t213 - t129;
t110 = qJD(5) + t114;
t145 = sin(qJ(5));
t210 = qJD(5) * t145;
t196 = t124 * t210;
t165 = -t142 * t146 + t188;
t119 = t165 * qJD(3);
t222 = t119 * t147;
t166 = t124 * t101 - (t196 - t222) * t110;
t203 = qJD(1) * qJD(3);
t190 = t146 * t203;
t128 = t142 * t190;
t163 = qJD(3) * t129 - t128;
t205 = t147 * qJD(3);
t215 = qJD(1) * t124;
t59 = -qJD(5) * t205 - t147 * t163 + t210 * t215;
t94 = qJD(3) * t145 + t147 * t215;
t253 = t94 * t116 + t165 * t59;
t277 = t166 - t253;
t85 = t94 * t210;
t272 = -t147 * t59 - t85;
t209 = qJD(5) * t147;
t133 = sin(pkin(9)) * pkin(1) + pkin(7);
t126 = t133 * qJD(1);
t139 = t148 * qJD(2);
t137 = qJD(3) * t139;
t211 = qJD(3) * t146;
t103 = -t126 * t211 + t137;
t204 = t148 * qJD(4);
t81 = (-qJ(4) * t211 + t204) * qJD(1) + t103;
t192 = t232 * t81;
t206 = t146 * qJD(4);
t183 = qJ(4) * qJD(1) + t126;
t207 = t146 * qJD(2);
t97 = t148 * t183 + t207;
t269 = -qJD(1) * t206 - t97 * qJD(3);
t33 = t269 * t142 + t192;
t191 = t232 * t97;
t96 = -t146 * t183 + t139;
t90 = qJD(3) * pkin(3) + t96;
t45 = t142 * t90 + t191;
t42 = qJD(3) * pkin(8) + t45;
t135 = -cos(pkin(9)) * pkin(1) - pkin(2);
t125 = -pkin(3) * t148 + t135;
t214 = qJD(1) * t125;
t113 = qJD(4) + t214;
t56 = t114 * pkin(4) - pkin(8) * t215 + t113;
t130 = pkin(3) * t190;
t61 = t105 * pkin(4) - pkin(8) * t163 + t130;
t187 = t145 * t33 - t147 * t61 + t42 * t209 + t56 * t210;
t20 = t145 * t56 + t147 * t42;
t169 = t110 * t20 - t187;
t14 = qJ(6) * t110 + t20;
t262 = pkin(5) * t105;
t2 = t187 - t262;
t275 = t110 * t14 - t2;
t19 = -t145 * t42 + t147 * t56;
t3 = t145 * t61 + t147 * t33 + t56 * t209 - t210 * t42;
t274 = -t19 * t110 + t3;
t60 = qJD(5) * t94 + t145 * t163;
t273 = -t94 * t110 + t60;
t92 = t145 * t215 - t205;
t240 = t147 * t92;
t243 = t145 * t94;
t254 = -t145 * t60 - t92 * t209;
t271 = (-t240 + t243) * t114 + t254 - t272;
t100 = t145 * t105;
t195 = t124 * t209;
t223 = t119 * t145;
t153 = -t110 * (t195 + t223) - t124 * t100;
t255 = t116 * t92 - t165 * t60;
t270 = t153 - t255;
t87 = t142 * t97;
t44 = t232 * t90 - t87;
t41 = -qJD(3) * pkin(4) - t44;
t21 = t92 * pkin(5) - t94 * qJ(6) + t41;
t132 = pkin(3) * t142 + pkin(8);
t228 = t105 * t132;
t268 = t110 * t21 - t228;
t267 = t116 * t215 - t163 * t165;
t74 = -pkin(4) * t165 - pkin(8) * t124 + t125;
t218 = qJ(4) + t133;
t121 = t218 * t146;
t122 = t218 * t148;
t77 = -t142 * t121 + t122 * t232;
t252 = t145 * t74 + t147 * t77;
t185 = qJD(3) * t218;
t161 = -t148 * t185 - t206;
t98 = -t146 * t185 + t204;
t55 = t142 * t161 + t232 * t98;
t200 = pkin(3) * t211;
t70 = pkin(4) * t116 - pkin(8) * t119 + t200;
t10 = -qJD(5) * t252 - t145 * t55 + t147 * t70;
t266 = t94 ^ 2;
t265 = t110 ^ 2;
t264 = t215 ^ 2;
t263 = pkin(3) * t146;
t32 = t142 * t81 - t232 * t269;
t7 = pkin(5) * t60 + qJ(6) * t59 - qJD(6) * t94 + t32;
t261 = t145 * t7;
t260 = t147 * t7;
t259 = t21 * t94;
t76 = t232 * t121 + t142 * t122;
t258 = t32 * t76;
t257 = t94 * t92;
t236 = t60 * t147;
t65 = t92 * t222;
t256 = -t124 * t236 - t65;
t48 = t232 * t96 - t87;
t201 = pkin(3) * t213;
t69 = pkin(4) * t215 + pkin(8) * t114 + t201;
t23 = t145 * t69 + t147 * t48;
t251 = -t124 * t105 - t119 * t114;
t186 = t110 * t92;
t248 = t215 * t92;
t247 = t132 * t59;
t246 = t132 * t92;
t245 = t132 * t94;
t244 = t145 * t32;
t242 = t147 * t32;
t238 = t32 * t165;
t237 = t59 * t145;
t234 = t94 * t215;
t179 = pkin(5) * t145 - qJ(6) * t147;
t47 = t142 * t96 + t191;
t233 = -t145 * qJD(6) + t110 * t179 - t47;
t230 = t105 * qJ(6);
t229 = t105 * t165;
t227 = t110 * t215;
t226 = t110 * t147;
t225 = t215 * t114;
t221 = t126 * t146;
t149 = qJD(3) ^ 2;
t220 = t149 * t146;
t219 = t149 * t148;
t217 = qJD(6) - t19;
t216 = t146 ^ 2 - t148 ^ 2;
t127 = qJD(1) * t135;
t212 = qJD(1) * t148;
t208 = t119 * qJD(3);
t66 = t94 * t223;
t202 = -t124 * t237 + t94 * t195 + t66;
t199 = t92 ^ 2 - t266;
t150 = qJD(1) ^ 2;
t197 = t146 * t150 * t148;
t194 = t132 * t210;
t193 = t132 * t209;
t54 = t142 * t98 - t232 * t161;
t182 = 0.2e1 * t215;
t181 = t148 * t190;
t134 = -pkin(3) * t232 - pkin(4);
t180 = t147 * pkin(5) + t145 * qJ(6);
t13 = -pkin(5) * t110 + t217;
t178 = t13 * t147 - t14 * t145;
t177 = t13 * t145 + t14 * t147;
t176 = -t145 * t20 - t147 * t19;
t175 = t145 * t19 - t147 * t20;
t22 = -t145 * t48 + t147 * t69;
t28 = -t145 * t77 + t147 * t74;
t107 = t126 * t148 + t207;
t172 = 0.2e1 * qJD(3) * t127;
t171 = t110 * t209 + t114 * t226 + t100;
t170 = t101 + (-t114 * t145 - t210) * t110;
t9 = t145 * t70 + t147 * t55 + t74 * t209 - t210 * t77;
t167 = t92 * t196 + t256;
t164 = t110 * t41 - t228;
t162 = t145 * t186 - t236;
t160 = -t170 - t248;
t156 = -t124 * t254 + t223 * t92;
t1 = t110 * qJD(6) + t230 + t3;
t155 = qJD(5) * t178 + t1 * t147 + t2 * t145;
t154 = qJD(5) * t176 + t145 * t187 + t3 * t147;
t104 = t107 * qJD(3);
t106 = t139 - t221;
t152 = t103 * t148 + t104 * t146 + (-t106 * t148 - t107 * t146) * qJD(3);
t151 = t153 + t255;
t120 = -t180 + t134;
t112 = t114 ^ 2;
t109 = t116 * qJD(3);
t52 = pkin(5) * t94 + qJ(6) * t92;
t46 = t132 * t236;
t35 = t110 * t116 - t229;
t34 = t124 * t179 + t76;
t27 = -t59 + t186;
t25 = pkin(5) * t165 - t28;
t24 = -qJ(6) * t165 + t252;
t18 = -pkin(5) * t215 - t22;
t17 = qJ(6) * t215 + t23;
t16 = t171 - t234;
t15 = t226 * t94 - t237;
t12 = t179 * t119 + (qJD(5) * t180 - qJD(6) * t147) * t124 + t54;
t11 = t272 * t124 + t94 * t222;
t8 = -t116 * pkin(5) - t10;
t6 = t166 + t253;
t5 = qJ(6) * t116 - qJD(6) * t165 + t9;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t181, -0.2e1 * t216 * t203, t219, -0.2e1 * t181, -t220, 0, -t133 * t219 + t146 * t172, t133 * t220 + t148 * t172, t152, t152 * t133, t119 * t215 + t124 * t163, t251 - t267, t208, t114 * t116 - t229, -t109, 0, t125 * t105 + t113 * t116 + (-t54 + (-qJD(1) * t165 + t114) * t263) * qJD(3), t113 * t119 - t125 * t128 + (t125 * t129 + t182 * t263 - t55) * qJD(3), -t77 * t105 - t55 * t114 - t45 * t116 - t44 * t119 + t32 * t124 + t163 * t76 + t165 * t33 + t215 * t54, t258 + t33 * t77 - t44 * t54 + t45 * t55 + (t113 + t214) * t200, t11, t167 - t202, t6, t156, t270, t35, t41 * t223 + t10 * t110 + t105 * t28 + t116 * t19 + t165 * t187 + t54 * t92 + t60 * t76 + (t209 * t41 + t244) * t124, t41 * t222 - t105 * t252 - t110 * t9 - t116 * t20 + t165 * t3 + t54 * t94 - t59 * t76 + (-t210 * t41 + t242) * t124, -t10 * t94 + t28 * t59 - t252 * t60 - t9 * t92 + t176 * t119 + (qJD(5) * t175 - t3 * t145 + t147 * t187) * t124, t10 * t19 - t187 * t28 + t20 * t9 + t252 * t3 + t41 * t54 + t258, t11, t6, t65 + (-t210 * t92 + t236) * t124 + t202, t35, -t270, t156, t21 * t223 - t105 * t25 - t110 * t8 - t116 * t13 + t12 * t92 + t165 * t2 + t34 * t60 + (t209 * t21 + t261) * t124, -t24 * t60 - t25 * t59 - t5 * t92 + t8 * t94 + t178 * t119 + (-qJD(5) * t177 - t1 * t145 + t2 * t147) * t124, -t21 * t222 - t1 * t165 + t105 * t24 + t110 * t5 + t116 * t14 - t12 * t94 + t34 * t59 + (t21 * t210 - t260) * t124, t1 * t24 + t12 * t21 + t13 * t8 + t14 * t5 + t2 * t25 + t34 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220, -t219, 0, t103 * t146 - t104 * t148 + (-t106 * t146 + t107 * t148) * qJD(3), 0, 0, 0, 0, 0, 0, -t109, -t208, t251 + t267, -t116 * t44 + t119 * t45 + t124 * t33 - t238, 0, 0, 0, 0, 0, 0, t151, -t277, t66 + (-t237 + (t145 * t92 + t147 * t94) * qJD(5)) * t124 + t256, t41 * t116 - t119 * t175 + t124 * t154 - t238, 0, 0, 0, 0, 0, 0, t151, t167 + t202, t277, t21 * t116 + t119 * t177 + t124 * t155 - t165 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, t216 * t150, 0, t197, 0, 0, -t127 * t213, -t127 * t212 - t137 + (t106 + t221) * qJD(3), 0, 0, t225, -t112 + t264, -t128 + (t129 + t114) * qJD(3), -t225, 0, 0, qJD(3) * t47 - t113 * t215 - t114 * t201 - t32, -t192 + t113 * t114 + (-pkin(3) * t215 + qJD(4) * t142) * t213 + (-t142 * (-qJ(4) * t212 - t107) + t48) * qJD(3) (t45 - t47) * t215 + (t48 - t44) * t114 + (-t142 * t105 - t163 * t232) * pkin(3), t44 * t47 - t45 * t48 + (-t113 * t213 + t142 * t33 - t232 * t32) * pkin(3), t15 (-t240 - t243) * t114 + t254 + t272, t16, t162, -t160, -t227, -t215 * t19 + t134 * t60 - t242 - t47 * t92 + (-t22 - t193) * t110 + t164 * t145, t215 * t20 - t134 * t59 + t244 - t47 * t94 + (t23 + t194) * t110 + t164 * t147, t22 * t94 + t23 * t92 - t46 + (-t114 * t19 + t3 + (-t19 + t245) * qJD(5)) * t147 + (-t114 * t20 - t247 + t187 + (-t20 + t246) * qJD(5)) * t145, t132 * t154 + t32 * t134 - t19 * t22 - t20 * t23 - t41 * t47, t15, t16, t85 + (t114 * t94 + t60) * t145 + (t59 + t186) * t147, -t227, t160, t162, t215 * t13 + t120 * t60 - t260 + t233 * t92 + (t18 - t193) * t110 + t268 * t145, t17 * t92 - t18 * t94 - t46 + (t114 * t13 + t1 + (t13 + t245) * qJD(5)) * t147 + (-t114 * t14 - t247 + t2 + (-t14 + t246) * qJD(5)) * t145, -t215 * t14 + t120 * t59 - t261 - t233 * t94 + (-t17 - t194) * t110 - t268 * t147, t120 * t7 - t13 * t18 + t132 * t155 - t14 * t17 + t21 * t233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182 * qJD(3), -t128 + (t129 - t114) * qJD(3), -t112 - t264, t114 * t45 + t215 * t44 + t130, 0, 0, 0, 0, 0, 0, t170 - t248, -t147 * t265 - t100 - t234, t271, t274 * t145 + t147 * t169 - t41 * t215, 0, 0, 0, 0, 0, 0, -t145 * t265 + t101 - t248, t271, t171 + t234, -t21 * t215 + t275 * t147 + (t110 * t13 + t1) * t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, -t199, t27, -t257, -t273, t105, -t41 * t94 + t169, t41 * t92 - t274, 0, 0, t257, t27, t199, t105, t273, -t257, -t52 * t92 + t169 - t259 + 0.2e1 * t262, pkin(5) * t59 - t60 * qJ(6) + (t14 - t20) * t94 + (t13 - t217) * t92, 0.2e1 * t230 - t21 * t92 + t52 * t94 + (0.2e1 * qJD(6) - t19) * t110 + t3, -t2 * pkin(5) + t1 * qJ(6) - t13 * t20 + t14 * t217 - t21 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t215 + t257, t27, -t265 - t266, t259 - t275;];
tauc_reg  = t4;
