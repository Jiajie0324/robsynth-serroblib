% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:19:14
% EndTime: 2019-03-09 13:19:55
% DurationCPUTime: 23.59s
% Computational Cost: add. (21261->712), mult. (42479->913), div. (0->0), fcn. (52326->10), ass. (0->569)
t856 = cos(qJ(4));
t515 = sin(pkin(11));
t519 = sin(qJ(2));
t522 = cos(qJ(2));
t828 = cos(pkin(11));
t485 = -t515 * t522 - t519 * t828;
t844 = -qJ(3) - pkin(7);
t494 = t844 * t519;
t495 = t844 * t522;
t887 = t828 * t494 + t515 * t495;
t906 = pkin(8) * t485 + t887;
t932 = t856 * t906;
t441 = t515 * t494 - t828 * t495;
t484 = -t515 * t519 + t522 * t828;
t350 = -pkin(8) * t484 - t441;
t518 = sin(qJ(4));
t935 = t518 * t350;
t233 = t932 + t935;
t521 = cos(qJ(5));
t970 = t521 * t233;
t635 = -t970 / 0.2e1;
t602 = t856 * t484 + t518 * t485;
t908 = t521 * t602;
t475 = t856 * t485;
t755 = t518 * t484;
t888 = -t475 + t755;
t916 = pkin(5) * t888;
t517 = sin(qJ(5));
t971 = t517 * t233;
t973 = -pkin(10) * t908 + t916 - t971;
t663 = qJD(2) + qJD(4);
t972 = t233 * t602;
t520 = cos(qJ(6));
t750 = t520 * t521;
t516 = sin(qJ(6));
t767 = t516 * t517;
t491 = -t750 + t767;
t910 = t517 * t602;
t933 = t856 * t350;
t934 = t518 * t906;
t944 = -t933 + t934;
t959 = pkin(5) * t910 + t944;
t969 = t959 * t491;
t751 = t520 * t517;
t766 = t516 * t521;
t493 = t751 + t766;
t968 = t959 * t493;
t662 = qJD(5) + qJD(6);
t557 = t766 / 0.2e1 + t751 / 0.2e1;
t542 = t557 * t602;
t912 = t493 * t602;
t930 = t912 / 0.2e1 - t542;
t742 = t662 * t930;
t911 = t493 * t888;
t797 = t911 * t888;
t798 = t912 * t602;
t945 = -t797 + t798;
t958 = qJD(1) * t945;
t967 = t742 + t958;
t939 = t908 / 0.2e1;
t940 = -t908 / 0.2e1;
t943 = t939 + t940;
t954 = qJD(5) * t943;
t786 = t602 ^ 2;
t918 = t888 ^ 2;
t929 = t918 - t786;
t948 = t929 * t521;
t956 = qJD(1) * t948;
t966 = t954 + t956;
t909 = t517 * t888;
t160 = pkin(5) * t909 - t233;
t747 = t521 * t888;
t250 = t516 * t909 - t520 * t747;
t650 = -pkin(2) * t522 - pkin(1);
t457 = -t484 * pkin(3) + t650;
t849 = pkin(9) * t888;
t586 = -pkin(4) * t602 - t849;
t533 = t457 + t586;
t962 = t944 * t521;
t108 = t517 * t533 + t962;
t100 = -pkin(10) * t909 + t108;
t754 = t520 * t100;
t848 = t602 * pkin(5);
t963 = t944 * t517;
t107 = -t521 * t533 + t963;
t99 = -pkin(10) * t747 - t107;
t77 = t99 - t848;
t44 = t516 * t77 + t754;
t913 = t491 * t602;
t965 = -t160 * t913 - t959 * t250 - t44 * t888;
t76 = t520 * t77;
t770 = t516 * t100;
t43 = -t76 + t770;
t964 = t160 * t912 - t43 * t888 + t959 * t911;
t851 = pkin(5) * t521;
t507 = -pkin(4) - t851;
t862 = -t507 / 0.2e1;
t917 = t602 / 0.2e1;
t952 = -t911 / 0.2e1;
t71 = t493 * t250 + t491 * t911;
t843 = t662 * t71;
t921 = t250 * t912 + t911 * t913;
t942 = t921 * qJD(1);
t961 = t843 - t942;
t592 = -t475 / 0.2e1;
t886 = t592 + t755 / 0.2e1;
t901 = t888 * qJD(1);
t290 = t602 * t901;
t947 = t886 * qJD(5) - t290;
t960 = qJD(6) * t886 + t947;
t795 = t913 * t602;
t799 = t250 * t888;
t946 = t795 - t799;
t957 = qJD(1) * t946;
t949 = t929 * t517;
t955 = qJD(1) * t949;
t953 = t843 + t942 + t663 * (t913 * t491 - t493 * t912);
t870 = -t602 / 0.2e1;
t873 = -t932 / 0.2e1;
t593 = t933 / 0.2e1;
t941 = t929 * qJD(1);
t874 = pkin(9) + pkin(10);
t498 = t874 * t517;
t499 = t874 * t521;
t572 = -t520 * t498 - t516 * t499;
t927 = t507 * t952 + t572 * t917;
t446 = -t516 * t498 + t520 * t499;
t926 = t250 * t862 + t446 * t917;
t588 = pkin(2) * t828 + pkin(3);
t855 = pkin(2) * t515;
t472 = t518 * t588 + t855 * t856;
t466 = pkin(9) + t472;
t845 = pkin(10) + t466;
t443 = t845 * t517;
t444 = t845 * t521;
t302 = -t516 * t443 + t520 * t444;
t471 = t518 * t855 - t856 * t588;
t465 = -pkin(4) + t471;
t453 = t465 - t851;
t928 = -t453 * t250 / 0.2e1 + t302 * t917;
t625 = t909 / 0.2e1;
t632 = t911 / 0.2e1;
t327 = t913 / 0.2e1;
t656 = t916 / 0.2e1;
t937 = pkin(10) * t910;
t846 = t888 * pkin(4);
t847 = pkin(9) * t602;
t288 = t846 - t847;
t286 = t517 * t288;
t741 = -t970 - t286;
t104 = -t741 - t937;
t768 = t516 * t104;
t629 = -t768 / 0.2e1;
t287 = t521 * t288;
t83 = t287 + t973;
t830 = t520 * t83;
t563 = t629 + t830 / 0.2e1;
t805 = t160 * t493;
t636 = -t805 / 0.2e1;
t29 = t636 + t563 - t926;
t512 = t519 * pkin(2);
t460 = -pkin(3) * t485 + t512;
t235 = t460 + t288;
t227 = t517 * t235;
t740 = t970 + t227;
t101 = t740 - t937;
t769 = t516 * t101;
t630 = -t769 / 0.2e1;
t228 = t521 * t235;
t78 = t228 + t973;
t831 = t520 * t78;
t564 = t630 + t831 / 0.2e1;
t17 = t636 + t564 - t928;
t752 = t520 * t104;
t621 = -t752 / 0.2e1;
t833 = t516 * t83;
t561 = -t833 / 0.2e1 + t621;
t806 = t160 * t491;
t637 = t806 / 0.2e1;
t30 = t637 + t561 - t927;
t603 = t520 * t443 + t516 * t444;
t900 = t453 * t952 + t603 * t870;
t719 = qJD(1) * t250;
t863 = t493 / 0.2e1;
t864 = t491 / 0.2e1;
t111 = t250 * t864 - t863 * t911;
t744 = t662 * t111;
t922 = -t719 * t913 + t744;
t858 = -t521 / 0.2e1;
t860 = t517 / 0.2e1;
t920 = (-t911 * t860 + (t491 * t858 + t520 / 0.2e1) * t888) * pkin(5);
t861 = -t516 / 0.2e1;
t919 = (t250 * t860 + (t493 * t858 + t861) * t888) * pkin(5);
t872 = t888 / 0.2e1;
t478 = t493 * qJD(6);
t733 = -t493 * qJD(5) - t478;
t904 = t602 * qJD(1);
t903 = t886 * qJD(1);
t753 = t520 * t101;
t622 = -t753 / 0.2e1;
t834 = t516 * t78;
t562 = -t834 / 0.2e1 + t622;
t18 = t637 + t562 - t900;
t899 = t663 * t602;
t898 = t662 * t302;
t897 = t662 * t446;
t896 = t662 * t572;
t895 = 0.2e1 * t888;
t894 = -t466 / 0.2e1;
t893 = t602 * t662;
t513 = t517 ^ 2;
t514 = t521 ^ 2;
t500 = t514 - t513;
t892 = t500 * t663;
t280 = 0.2e1 * t939;
t866 = -t465 / 0.2e1;
t609 = t471 / 0.2e1 + t866;
t532 = (t894 + t472 / 0.2e1) * t888 - t609 * t602;
t885 = -t849 / 0.2e1 + t532;
t882 = qJD(3) * t602;
t868 = -t888 / 0.2e1;
t329 = t491 * t868;
t183 = t888 * t491;
t634 = -t183 / 0.2e1;
t594 = t329 + t634;
t881 = qJD(4) * t594;
t84 = -t250 ^ 2 + t911 ^ 2;
t23 = qJD(1) * t84 + t663 * t71;
t39 = t111 * t663 + t719 * t911;
t607 = t513 / 0.2e1 - t514 / 0.2e1;
t263 = t607 * t888;
t760 = t517 * t521;
t642 = qJD(1) * t760;
t879 = t263 * t663 + t642 * t918;
t366 = t491 ^ 2 - t493 ^ 2;
t59 = qJD(1) * t71 + t366 * t663;
t82 = t491 * t493 * t663 - qJD(1) * t111;
t878 = t662 * t603;
t876 = -t76 / 0.2e1;
t875 = -t77 / 0.2e1;
t633 = -t913 / 0.2e1;
t867 = t453 / 0.2e1;
t865 = -t472 / 0.2e1;
t857 = t521 / 0.2e1;
t852 = pkin(5) * t517;
t842 = pkin(5) * qJD(5);
t841 = pkin(5) * qJD(6);
t653 = t848 / 0.2e1;
t589 = t653 + t99 / 0.2e1;
t9 = (t875 + t589) * t516;
t840 = qJD(1) * t9;
t839 = qJD(2) * pkin(2);
t1 = -(-t769 + t831) * t602 + t964;
t838 = t1 * qJD(1);
t2 = (t753 + t834) * t602 + t965;
t837 = t2 * qJD(1);
t3 = -(-t768 + t830) * t602 + t964;
t836 = t3 * qJD(1);
t4 = (t752 + t833) * t602 + t965;
t835 = t4 * qJD(1);
t832 = t516 * t99;
t829 = t520 * t99;
t11 = t520 * t589 + t876;
t827 = qJD(1) * t11;
t49 = -t754 - t832;
t660 = pkin(5) * t747;
t808 = t160 * t250;
t21 = -t49 * t602 + t660 * t911 - t808;
t826 = qJD(1) * t21;
t50 = -t770 + t829;
t807 = t160 * t911;
t22 = -t250 * t660 + t50 * t602 - t807;
t825 = qJD(1) * t22;
t33 = -t43 * t602 - t807;
t824 = qJD(1) * t33;
t34 = t44 * t602 - t808;
t823 = qJD(1) * t34;
t525 = t849 / 0.2e1 + pkin(4) * t917 + t532;
t45 = t517 * t525;
t822 = qJD(1) * t45;
t612 = t633 + t327;
t58 = t612 * t491;
t821 = qJD(1) * t58;
t61 = -t107 * t602 + t233 * t909;
t820 = qJD(1) * t61;
t62 = t108 * t602 - t233 * t747;
t819 = qJD(1) * t62;
t95 = t797 + t798;
t814 = qJD(1) * t95;
t98 = -t795 - t799;
t811 = qJD(1) * t98;
t576 = t888 * t944 - t972;
t35 = -t107 * t888 - t228 * t602 + (t576 + t972) * t517;
t791 = t35 * qJD(1);
t36 = -t108 * t888 + t521 * t576 + t602 * t740;
t790 = t36 * qJD(1);
t37 = -t287 * t602 + (-t107 + t963) * t888;
t789 = t37 * qJD(1);
t38 = (-t108 + t962) * t888 - (t741 + t970) * t602;
t788 = t38 * qJD(1);
t781 = t453 * t491;
t780 = t453 * t493;
t772 = t507 * t491;
t771 = t507 * t493;
t761 = t517 * t471;
t631 = -t912 / 0.2e1;
t150 = t631 - t542;
t743 = t662 * t150;
t243 = t662 * t366;
t628 = t767 / 0.2e1;
t739 = t520 * t940 + t602 * t628;
t624 = -t910 / 0.2e1;
t738 = t516 * t624 + t520 * t939;
t610 = 0.2e1 * t872;
t275 = t610 * t521;
t707 = qJD(2) * t521;
t737 = t275 * qJD(4) + t707 * t888;
t736 = -t781 / 0.2e1 - t772 / 0.2e1;
t315 = t733 * t491;
t619 = t471 * t857;
t735 = t520 * t619 + t761 * t861;
t476 = t491 * qJD(6);
t734 = -t491 * qJD(5) - t476;
t110 = t612 * t493;
t732 = qJD(1) * t110;
t575 = t786 + t918;
t131 = t575 * t517;
t728 = qJD(1) * t131;
t133 = t575 * t521;
t726 = qJD(1) * t133;
t167 = t457 * t888 - t460 * t602;
t725 = qJD(1) * t167;
t168 = t457 * t602 + t460 * t888;
t724 = qJD(1) * t168;
t247 = t441 * t484 + t485 * t887;
t721 = qJD(1) * t247;
t249 = (t917 + t870) * t760;
t720 = qJD(1) * t249;
t718 = qJD(1) * t263;
t285 = t500 * t918;
t717 = qJD(1) * t285;
t714 = qJD(1) * t457;
t713 = qJD(1) * t522;
t712 = qJD(2) * t888;
t710 = qJD(2) * t491;
t709 = qJD(2) * t493;
t708 = qJD(2) * t517;
t706 = qJD(3) * t888;
t704 = qJD(4) * t888;
t703 = qJD(4) * t457;
t702 = qJD(4) * t493;
t701 = qJD(4) * t507;
t700 = qJD(4) * t517;
t699 = qJD(4) * t521;
t698 = qJD(5) * t517;
t511 = qJD(5) * t521;
t149 = (t863 + t557) * t602;
t136 = t149 * qJD(1);
t138 = t150 * qJD(1);
t556 = -t750 / 0.2e1 + t628;
t151 = (t864 + t556) * t602;
t139 = t151 * qJD(1);
t152 = t633 + t738;
t140 = t152 * qJD(1);
t153 = t327 + t739;
t142 = t153 * qJD(1);
t166 = t512 * t650;
t695 = t166 * qJD(1);
t611 = t872 + t868;
t182 = t611 * t491;
t693 = t182 * qJD(1);
t692 = t183 * qJD(1);
t691 = t594 * qJD(1);
t690 = t911 * qJD(1);
t190 = t611 * t493;
t689 = t190 * qJD(1);
t191 = t610 * t493;
t688 = t191 * qJD(1);
t687 = t909 * qJD(1);
t266 = t611 * t517;
t686 = t266 * qJD(1);
t267 = t610 * t517;
t685 = t267 * qJD(1);
t684 = t910 * qJD(1);
t270 = 0.2e1 * t917 * t517;
t260 = t270 * qJD(1);
t274 = t611 * t521;
t683 = t274 * qJD(1);
t682 = t275 * qJD(1);
t681 = t908 * qJD(1);
t279 = 0.2e1 * t940;
t680 = t279 * qJD(1);
t679 = t280 * qJD(1);
t321 = 0.2e1 * t592 + t755;
t677 = t321 * qJD(1);
t536 = (t515 * t484 / 0.2e1 + t828 * t485 / 0.2e1) * pkin(2);
t346 = -t512 / 0.2e1 + t536;
t676 = t346 * qJD(1);
t420 = t592 + t475 / 0.2e1;
t671 = t420 * qJD(1);
t670 = t420 * qJD(4);
t434 = t484 ^ 2 + t485 ^ 2;
t667 = t434 * qJD(1);
t462 = t472 * qJD(4);
t501 = -t519 ^ 2 + t522 ^ 2;
t666 = t501 * qJD(1);
t665 = t519 * qJD(2);
t664 = t522 * qJD(2);
t659 = t493 * t852;
t658 = pkin(1) * t519 * qJD(1);
t657 = pkin(1) * t713;
t655 = -t852 / 0.2e1;
t126 = -t806 / 0.2e1;
t598 = t521 * t656;
t652 = t250 * t655 + t493 * t598 + t126;
t127 = t805 / 0.2e1;
t651 = t491 * t598 - t655 * t911 + t127;
t645 = t602 * t714;
t644 = t888 * t714;
t643 = t514 * t901;
t641 = qJD(5) * t602 * t888;
t640 = t888 * t904;
t502 = t517 * t511;
t639 = t519 * t713;
t638 = t521 * t901;
t615 = t970 / 0.2e1 + t286 / 0.2e1;
t614 = t635 - t227 / 0.2e1;
t608 = t507 / 0.2e1 + t867;
t604 = pkin(5) * t662;
t599 = t663 * t521;
t597 = -qJD(5) + t904;
t595 = t888 * t642;
t591 = t656 + t78 / 0.2e1;
t590 = t656 + t83 / 0.2e1;
t587 = pkin(4) / 0.2e1 + t609;
t584 = -0.2e1 * t595;
t583 = 0.2e1 * t595;
t582 = t517 * t599;
t581 = t663 * t760;
t580 = qJD(6) - t597;
t473 = t491 * t852;
t316 = t473 + t780;
t6 = t920 + t17;
t578 = -t6 * qJD(1) + t316 * qJD(2);
t317 = t659 - t781;
t5 = t919 + t18;
t577 = -t5 * qJD(1) + t317 * qJD(2);
t573 = t465 * t602 - t466 * t888;
t571 = t659 + t736;
t570 = t888 * t597;
t112 = t593 - t933 / 0.2e1;
t569 = qJD(1) * t112 + qJD(2) * t472;
t113 = t873 + t932 / 0.2e1;
t568 = -qJD(1) * t113 - qJD(2) * t471;
t567 = qJD(4) * t321 + t712;
t565 = -t847 / 0.2e1 + t846 / 0.2e1;
t560 = -t572 * t872 + t862 * t912;
t559 = t446 * t872 - t862 * t913;
t558 = t602 * t894 + t866 * t888;
t555 = qJD(1) * t17 - t453 * t709;
t554 = qJD(1) * t18 + t453 * t710;
t524 = t471 * t631 + t603 * t868 - t865 * t911 + t867 * t912;
t26 = t524 + t560;
t553 = -qJD(1) * t26 - t472 * t710;
t523 = t250 * t865 + t302 * t868 + t327 * t471 - t867 * t913;
t28 = t523 + t559;
t552 = -qJD(1) * t28 - t472 * t709;
t530 = t517 * t558 + t635;
t51 = t530 - t614;
t551 = -qJD(1) * t51 - t465 * t707;
t543 = t558 * t521;
t53 = -t228 / 0.2e1 - t543;
t550 = -qJD(1) * t53 - t465 * t708;
t48 = t521 * t525;
t549 = -qJD(1) * t48 - t472 * t708;
t545 = t899 * t888;
t544 = t565 * t521;
t541 = t557 * t471;
t13 = t919 + t30;
t164 = t471 * t556 + t571;
t416 = t659 - t772;
t540 = t13 * qJD(1) - t164 * qJD(2) - t416 * qJD(4);
t14 = t920 + t29;
t175 = -t493 * t608 + t541;
t162 = -t473 + t175;
t415 = t473 + t771;
t539 = t14 * qJD(1) + t162 * qJD(2) - t415 * qJD(4);
t322 = t587 * t517;
t65 = -t287 / 0.2e1 - t544;
t538 = pkin(4) * t700 - qJD(1) * t65 + qJD(2) * t322;
t323 = t587 * t521;
t531 = t517 * t565 + t635;
t63 = t531 + t615;
t537 = pkin(4) * t699 - qJD(1) * t63 + qJD(2) * t323;
t535 = qJD(1) * t29 + qJD(2) * t175 - t493 * t701;
t176 = t491 * t608 + t735;
t534 = qJD(1) * t30 + qJD(2) * t176 + t491 * t701;
t178 = t771 / 0.2e1 + t780 / 0.2e1 + t541;
t497 = t500 * qJD(5);
t461 = t471 * qJD(4);
t456 = t517 * t462;
t428 = t493 * t462;
t427 = t491 * t462;
t347 = -0.2e1 * t888 * t502;
t345 = t512 / 0.2e1 + t536;
t330 = t183 / 0.2e1;
t325 = pkin(4) * t858 + t465 * t857 + t619;
t324 = -pkin(4) * t517 / 0.2e1 + t465 * t860 + t761 / 0.2e1;
t300 = t584 + t892;
t299 = t583 - t892;
t284 = t663 * t886;
t273 = t625 - t909 / 0.2e1;
t272 = 0.2e1 * t625;
t271 = t910 / 0.2e1 + t624;
t262 = t274 * qJD(4);
t259 = t271 * qJD(5);
t258 = t270 * qJD(5);
t257 = t263 * qJD(5);
t248 = t280 * t517;
t244 = t260 - t698;
t226 = t581 - t718;
t225 = -t582 + t718;
t193 = t632 + t952;
t192 = 0.2e1 * t632;
t187 = t330 + t634;
t185 = t329 + t330;
t177 = t735 + t736;
t165 = t571 + t735;
t163 = t473 + t178;
t156 = t633 + t739;
t155 = t327 + t738;
t154 = -t556 * t602 + t327;
t148 = t930 * qJD(3);
t143 = t156 * qJD(3);
t141 = t153 * qJD(3);
t137 = t150 * qJD(3);
t134 = (t704 + t712) * t602;
t123 = t513 * t870 + t514 * t917 - t602 * t607;
t121 = -t138 + t733;
t120 = t136 + t733;
t119 = t491 * t662 - t142;
t118 = -t140 + t734;
t117 = t139 + t734;
t115 = 0.2e1 * t593 - t934;
t114 = -t935 + 0.2e1 * t873;
t109 = -0.2e1 * t913 * t863;
t66 = -t971 + t287 / 0.2e1 - t544;
t64 = t531 - t615;
t56 = qJD(2) * t152 - qJD(4) * t151 - t904 * t911;
t55 = qJD(2) * t150 - qJD(4) * t149 + t250 * t904;
t54 = -t971 + t228 / 0.2e1 - t543;
t52 = t530 + t614;
t47 = pkin(4) * t940 + t885 * t521 + t963;
t46 = pkin(4) * t624 + t885 * t517 - t962;
t42 = qJD(2) * t155 + qJD(4) * t154 - t580 * t911;
t41 = t250 * t580 + t663 * t930;
t32 = t127 + t563 + t926;
t31 = t126 + t561 + t927;
t27 = t968 + t523 - t559;
t25 = t969 + t524 - t560;
t20 = t127 + t564 + t928;
t19 = t126 + t562 + t900;
t16 = -t590 * t516 + t621 + t652 + t927;
t15 = t590 * t520 + t629 + t651 + t926;
t12 = t520 * t653 + t770 + t876 - t829 / 0.2e1;
t10 = -t754 - t832 / 0.2e1 + (t653 + t875) * t516;
t8 = -t591 * t516 + t622 + t652 + t900;
t7 = t591 * t520 + t630 + t651 + t928;
t24 = [0, 0, 0, t519 * t664, t501 * qJD(2), 0, 0, 0, -pkin(1) * t665, -pkin(1) * t664, qJD(3) * t434, qJD(2) * t166 + qJD(3) * t247, t545, -t663 * t929, 0, 0, 0, qJD(2) * t167 + t703 * t888, qJD(2) * t168 + t602 * t703, -t502 * t918 + t514 * t545, -0.2e1 * t517 * t747 * t899 - qJD(5) * t285, t517 * t641 + t663 * t948, t521 * t641 - t663 * t949, -t134, qJD(2) * t35 + qJD(3) * t131 + qJD(4) * t37 + qJD(5) * t62, qJD(2) * t36 + qJD(3) * t133 + qJD(4) * t38 + qJD(5) * t61 (t662 * t911 + t663 * t913) * t250, t662 * t84 + t663 * t921, t663 * t946 + t893 * t911, -t250 * t893 + t663 * t945, -t134, qJD(2) * t1 + qJD(3) * t95 + qJD(4) * t3 + qJD(5) * t21 + qJD(6) * t34, qJD(2) * t2 + qJD(3) * t98 + qJD(4) * t4 + qJD(5) * t22 + qJD(6) * t33; 0, 0, 0, t639, t666, t664, -t665, 0, -pkin(7) * t664 - t658, pkin(7) * t665 - t657 (-t484 * t828 + t485 * t515) * t839, t695 + (-t441 * t828 + t515 * t887) * t839 + t345 * qJD(3), t640, -t941, t899, -t567, 0, -qJD(2) * t944 + qJD(4) * t115 + t725, -qJD(2) * t233 + qJD(4) * t114 + t724, qJD(4) * t248 - t257 + (t517 * t707 + t643) * t602, t123 * qJD(4) + t347 + (qJD(2) * t500 + t584) * t602, qJD(4) * t272 + t708 * t888 + t966, t259 - t955 + t737, t947, t791 + (t517 * t573 - t962) * qJD(2) + t46 * qJD(4) + t54 * qJD(5), t790 + (t521 * t573 + t963) * qJD(2) + t47 * qJD(4) + t52 * qJD(5), qJD(4) * t109 - (t709 - t719) * t913 + t744, t953, qJD(4) * t192 + t155 * t662 + t709 * t888 + t957, -t710 * t888 + t881 + t967, t960, t838 + (t453 * t912 - t603 * t888 + t969) * qJD(2) + t187 * qJD(3) + t25 * qJD(4) + t7 * qJD(5) + t20 * qJD(6), t837 + (-t302 * t888 - t453 * t913 + t968) * qJD(2) + t27 * qJD(4) + t8 * qJD(5) + t19 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t667, qJD(2) * t345 + t721, 0, 0, 0, 0, 0, t670, 0, 0, 0, 0, 0, 0, t259 - t262 + t728, qJD(4) * t273 + t726 + t954, 0, 0, 0, 0, 0, qJD(2) * t187 + qJD(4) * t185 + t742 + t814, qJD(4) * t193 + t156 * t662 + t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, -t941, t899, -qJD(2) * t321 - t704, 0, qJD(2) * t115 + qJD(3) * t420 - qJD(4) * t944 + t644, qJD(2) * t114 - qJD(4) * t233 + t645, qJD(2) * t248 - t257 - (-t517 * t699 - t643) * t602, t123 * qJD(2) + t347 - (-qJD(4) * t500 + t583) * t602, qJD(2) * t272 + t700 * t888 + t966, qJD(2) * t275 + t699 * t888 - t955, t947, t789 + t46 * qJD(2) - t274 * qJD(3) + (t517 * t586 - t962) * qJD(4) + t66 * qJD(5), t788 + t47 * qJD(2) + t273 * qJD(3) + (t521 * t586 + t963) * qJD(4) + t64 * qJD(5), qJD(2) * t109 - (t702 - t719) * t913 + t744, t953, qJD(2) * t192 + t154 * t662 + t702 * t888 + t957, qJD(2) * t594 - t491 * t704 + t967, t960, t836 + t25 * qJD(2) + t185 * qJD(3) + (t507 * t912 + t572 * t888 + t969) * qJD(4) + t15 * qJD(5) + t32 * qJD(6), t835 + t27 * qJD(2) + t193 * qJD(3) + (-t446 * t888 - t507 * t913 + t968) * qJD(4) + t16 * qJD(5) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t879, -t582 * t895 - t717, t517 * t570 + t663 * t943, qJD(2) * t271 + t521 * t570, t284, qJD(2) * t54 + qJD(3) * t271 + qJD(4) * t66 - qJD(5) * t108 + t819, qJD(2) * t52 + qJD(3) * t943 + qJD(4) * t64 + qJD(5) * t107 + t820, t39, t23, t42, t41, t284, qJD(2) * t7 + qJD(4) * t15 + qJD(5) * t49 + qJD(6) * t10 + t148 + t826, qJD(2) * t8 + qJD(4) * t16 - qJD(5) * t50 + qJD(6) * t12 + t143 + t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t23, t42, t41, t284, qJD(2) * t20 + qJD(4) * t32 + qJD(5) * t10 - qJD(6) * t44 + t148 + t823, qJD(2) * t19 + qJD(4) * t31 + qJD(5) * t12 + qJD(6) * t43 + t143 + t824; 0, 0, 0, -t639, -t666, 0, 0, 0, t658, t657, 0, qJD(3) * t346 - t695, -t640, t941, 0, -t670, 0, -qJD(4) * t112 - t706 - t725, qJD(4) * t113 - t724 - t882, qJD(4) * t249 - t514 * t640 - t257, t583 * t602 + t347, -qJD(4) * t266 + qJD(5) * t279 - t956, t258 - t262 + t955, -t947, qJD(4) * t45 + qJD(5) * t53 - t521 * t706 - t791, qJD(3) * t909 + qJD(4) * t48 + qJD(5) * t51 - t790, qJD(4) * t110 + t922, -qJD(4) * t58 + t961, -qJD(4) * t190 - t152 * t662 - t957, qJD(4) * t182 - t743 - t958, -t960, qJD(3) * t183 + qJD(4) * t26 - qJD(5) * t6 - qJD(6) * t17 - t838, qJD(3) * t911 + qJD(4) * t28 - qJD(5) * t5 - qJD(6) * t18 - t837; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, t461, t502, t497, 0, 0, 0, -t462 * t521 + t465 * t698, t465 * t511 + t456, t315, t243, 0, 0, 0, qJD(5) * t316 + t453 * t478 + t427, qJD(5) * t317 - t453 * t476 + t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t676, 0, 0, 0, 0, 0, -t901, -t904, 0, 0, 0, 0, 0, -t638, t687, 0, 0, 0, 0, 0, t692, t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, 0, -t462 - t569, t461 - t568, t502 + t720, t497, -t686, -t683, 0, qJD(5) * t324 - t472 * t599 + t822, qJD(5) * t325 + t456 - t549, t732 + t315, t243 - t821, -t689, t693, 0, qJD(5) * t163 + qJD(6) * t178 + t427 - t553, qJD(5) * t165 + qJD(6) * t177 + t428 - t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, t300, t511 + t680, t244, -t903, qJD(4) * t324 - t466 * t511 - t550, qJD(4) * t325 + t466 * t698 - t551, -t82, t59, t118, t121, -t903, t163 * qJD(4) + t578 - t898, t165 * qJD(4) + t577 + t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t59, t118, t121, -t903, qJD(4) * t178 - t555 - t898, qJD(4) * t177 - t554 + t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t667, -qJD(2) * t346 - t721, 0, 0, 0, 0, 0, t567, t899, 0, 0, 0, 0, 0, t258 - t728 + t737, -qJD(2) * t909 - qJD(4) * t267 + qJD(5) * t280 - t726, 0, 0, 0, 0, 0, -qJD(2) * t183 - t743 - t814 + t881, -qJD(2) * t911 - qJD(4) * t191 - t153 * t662 - t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t676, 0, 0, 0, 0, 0, t901, t904, 0, 0, 0, 0, 0, t638, -t687, 0, 0, 0, 0, 0, -t692, -t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677, t904, 0, 0, 0, 0, 0, t682, -t685, 0, 0, 0, 0, 0, t691, -t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, -t511 + t679, 0, 0, 0, 0, 0, t121, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t290, t941, 0, t420 * qJD(2), 0, qJD(2) * t112 - qJD(3) * t321 - t644, -qJD(2) * t113 - t645 - t882, -qJD(2) * t249 - t290 * t514 - t257, -t584 * t602 + t347, qJD(2) * t266 - qJD(5) * t908 - t956, qJD(2) * t274 + qJD(5) * t910 + t955, -t947, -qJD(2) * t45 - qJD(3) * t275 + qJD(5) * t65 - t789, -qJD(2) * t48 + qJD(3) * t267 + qJD(5) * t63 - t788, -qJD(2) * t110 + t922, qJD(2) * t58 + t961, qJD(2) * t190 + t151 * t662 - t957, -qJD(2) * t182 + t149 * t662 - t958, -t960, -qJD(2) * t26 - qJD(3) * t594 - qJD(5) * t14 - qJD(6) * t29 - t836, -qJD(2) * t28 + qJD(3) * t191 - qJD(5) * t13 - qJD(6) * t30 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, 0, t569, t568, t502 - t720, t497, t686, t683, 0, -qJD(5) * t322 + t472 * t707 - t822, -qJD(5) * t323 + t549, -t732 + t315, t243 + t821, t689, -t693, 0, -qJD(5) * t162 - qJD(6) * t175 + t553, qJD(5) * t164 - qJD(6) * t176 + t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t677, -t904, 0, 0, 0, 0, 0, -t682, t685, 0, 0, 0, 0, 0, -t691, t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, t497, 0, 0, 0, -pkin(4) * t698, -pkin(4) * t511, t315, t243, 0, 0, 0, qJD(5) * t415 + t478 * t507, qJD(5) * t416 - t476 * t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, t300, t511 - t681, t684 - t698, -t903, -pkin(9) * t511 - t538, pkin(9) * t698 - t537, -t82, t59, t117, t120, -t903, -t539 - t897, -t540 - t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t59, t117, t120, -t903, -t535 - t897, -t534 - t896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t879, t581 * t895 + t717, -qJD(2) * t279 + qJD(4) * t908 - t290 * t517, -qJD(2) * t270 - qJD(4) * t910 - t290 * t521, t284, -qJD(2) * t53 - qJD(3) * t270 - qJD(4) * t65 - t819, -qJD(2) * t51 - qJD(3) * t280 - qJD(4) * t63 - t820, -t39, -t23, t56, t55, t284, qJD(2) * t6 + qJD(4) * t14 + qJD(6) * t9 + t137 - t826, qJD(2) * t5 + qJD(4) * t13 + qJD(6) * t11 + t141 - t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, t299, -t680, -t260, t903, qJD(4) * t322 + t550, qJD(4) * t323 + t551, t82, -t59, t140, t138, t903, qJD(4) * t162 - t578, -qJD(4) * t164 - t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t679, 0, 0, 0, 0, 0, t138, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, t299, t681, -t684, t903, t538, t537, t82, -t59, -t139, -t136, t903, t539, t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t516 * t841, -t520 * t841; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t516 * t604 + t840, -t520 * t604 + t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, -t23, t56, t55, t284, qJD(2) * t17 + qJD(4) * t29 - qJD(5) * t9 + t137 - t823, qJD(2) * t18 + qJD(4) * t30 - qJD(5) * t11 + t141 - t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, -t59, t140, t138, t903, qJD(4) * t175 + t555, qJD(4) * t176 + t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, -t59, -t139, -t136, t903, t535, t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516 * t842 - t840, t520 * t842 - t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t24;
