% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR2_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:19:10
% EndTime: 2019-03-09 13:19:24
% DurationCPUTime: 5.21s
% Computational Cost: add. (12983->342), mult. (27466->587), div. (0->0), fcn. (28795->10), ass. (0->190)
t151 = sin(qJ(4));
t152 = sin(qJ(2));
t154 = cos(qJ(2));
t246 = sin(pkin(11));
t262 = -qJ(3) - pkin(7);
t197 = t246 * t262;
t247 = cos(pkin(11));
t198 = t247 * t262;
t167 = (t247 * pkin(8) - t198) * t154 + (-t246 * pkin(8) + t197) * t152;
t127 = t247 * t152 + t246 * t154;
t100 = t127 * t262;
t174 = -t127 * pkin(8) + t100;
t267 = cos(qJ(4));
t54 = t151 * t167 - t267 * t174;
t206 = qJD(2) * t246;
t207 = qJD(2) * t247;
t188 = -t152 * t206 + t154 * t207;
t212 = qJD(2) * t262;
t186 = -t152 * qJD(3) + t154 * t212;
t187 = qJD(3) * t154 + t152 * t212;
t84 = t247 * t186 - t246 * t187;
t163 = -t188 * pkin(8) + t84;
t239 = t152 * t207 + t154 * t206;
t85 = t246 * t186 + t247 * t187;
t164 = -t239 * pkin(8) + t85;
t156 = qJD(4) * t54 - t151 * t163 - t267 * t164;
t144 = -t154 * pkin(2) - pkin(1);
t185 = t246 * t152 - t247 * t154;
t111 = pkin(3) * t185 + t144;
t95 = t151 * t127 + t267 * t185;
t96 = t267 * t127 - t151 * t185;
t170 = t95 * pkin(4) - t96 * pkin(9) + t111;
t278 = -qJD(5) * t170 + t156;
t234 = t152 * qJD(2);
t229 = pkin(2) * t234;
t106 = t239 * pkin(3) + t229;
t162 = t151 * t174 + t267 * t167;
t62 = t95 * qJD(4) + t151 * t239 - t267 * t188;
t63 = t96 * qJD(4) + t151 * t188 + t267 * t239;
t277 = -t63 * pkin(4) - t62 * pkin(9) + qJD(5) * t162 - t106;
t150 = sin(qJ(5));
t147 = t150 ^ 2;
t153 = cos(qJ(5));
t148 = t153 ^ 2;
t238 = t147 - t148;
t272 = t238 * qJD(5);
t141 = t247 * pkin(2) + pkin(3);
t218 = t246 * pkin(2);
t276 = -t267 * t141 + t151 * t218;
t112 = t276 * qJD(4);
t237 = -t148 - t147;
t77 = t237 * t112;
t266 = cos(qJ(6));
t213 = t266 * qJD(6);
t275 = t266 * qJD(5) + t213;
t219 = t266 * t153;
t149 = sin(qJ(6));
t244 = t149 * t150;
t274 = t219 - t244;
t145 = qJD(5) * t153;
t222 = t96 * t145;
t273 = -t150 * t62 + t222;
t236 = qJD(5) * t150;
t223 = t96 * t236;
t251 = t153 * t62;
t190 = t223 + t251;
t271 = qJD(5) + qJD(6);
t10 = t150 * t277 + t153 * t278;
t11 = t150 * t278 - t153 * t277;
t30 = -t150 * t162 + t153 * t170;
t31 = t150 * t170 + t153 * t162;
t270 = t10 * t150 - t11 * t153 + (t30 * t150 - t31 * t153) * qJD(5);
t269 = -pkin(10) - pkin(9);
t268 = t63 * pkin(5);
t265 = t153 * pkin(5);
t146 = t153 * pkin(10);
t28 = t162 * qJD(4) + t151 * t164 - t267 * t163;
t264 = t54 * t28;
t263 = t96 * t62;
t21 = t273 * pkin(5) + t28;
t252 = t150 * t96;
t43 = pkin(5) * t252 + t54;
t220 = t266 * t150;
t130 = t149 * t153 + t220;
t99 = t271 * t130;
t261 = -t21 * t274 + t43 * t99;
t98 = -t275 * t153 + t271 * t244;
t260 = t21 * t130 - t43 * t98;
t51 = t54 * t145;
t259 = t28 * t150 + t51;
t226 = t96 * t244;
t23 = -t62 * t220 - t149 * t223 - qJD(6) * t226 + (-t149 * t62 + t275 * t96) * t153;
t60 = t130 * t96;
t258 = -t130 * t23 + t98 * t60;
t122 = t151 * t141 + t267 * t218;
t113 = t122 * qJD(4);
t228 = pkin(5) * t236;
t103 = t113 + t228;
t117 = -pkin(4) + t276;
t110 = t117 - t265;
t257 = -t103 * t274 + t110 * t99;
t256 = t103 * t130 - t110 * t98;
t255 = t274 * t99;
t254 = t130 * t98;
t250 = t54 * t113;
t143 = -pkin(4) - t265;
t249 = t143 * t99 - t228 * t274;
t248 = t130 * t228 - t143 * t98;
t243 = t150 * t112;
t241 = t153 * t112;
t240 = t113 * t150 + t117 * t145;
t235 = qJD(6) * t149;
t233 = t154 * qJD(2);
t47 = 0.2e1 * t95 * t63;
t232 = -0.2e1 * pkin(1) * qJD(2);
t231 = pkin(4) * t236;
t230 = pkin(4) * t145;
t227 = pkin(5) * t235;
t225 = t150 * t251;
t224 = t149 * t269;
t50 = t54 * t236;
t217 = t150 * t145;
t216 = t152 * t233;
t159 = t95 * pkin(5) - t96 * t146 + t30;
t157 = t266 * t159;
t25 = -pkin(10) * t252 + t31;
t14 = -t149 * t25 + t157;
t158 = t149 * t159;
t15 = t266 * t25 + t158;
t155 = t190 * pkin(10) + t11 + t268;
t160 = -t273 * pkin(10) - t10;
t3 = -qJD(6) * t157 - t149 * t155 - t266 * t160 + t25 * t235;
t4 = -qJD(6) * t158 - t149 * t160 + t266 * t155 - t25 * t213;
t215 = -t4 * t130 + t14 * t98 - t15 * t99 - t274 * t3;
t184 = pkin(9) + t122;
t102 = t153 * t184 + t146;
t183 = -pkin(10) - t184;
t179 = qJD(5) * t183;
t172 = -t150 * t179 + t241;
t173 = t153 * t179 + t243;
t180 = t150 * t183;
t176 = t266 * t180;
t35 = -qJD(6) * t176 + t102 * t235 - t149 * t173 + t266 * t172;
t177 = t149 * t180;
t36 = -qJD(6) * t177 - t102 * t213 + t149 * t172 + t266 * t173;
t67 = -t149 * t102 + t176;
t68 = t266 * t102 + t177;
t209 = -t36 * t130 - t274 * t35 + t67 * t98 - t68 * t99;
t132 = t153 * pkin(9) + t146;
t201 = t269 * t266;
t191 = t150 * t201;
t104 = -t149 * t132 + t191;
t203 = t150 * t224;
t105 = t266 * t132 + t203;
t69 = t132 * t235 - t224 * t145 - t271 * t191;
t70 = -t105 * qJD(6) + (t153 * t201 - t203) * qJD(5);
t208 = t104 * t98 - t105 * t99 - t70 * t130 - t274 * t69;
t205 = -t113 * t153 + t117 * t236;
t204 = pkin(5) * t213;
t94 = t96 ^ 2;
t202 = t94 * t217;
t200 = t28 * t96 - t54 * t62;
t199 = t62 * t95 - t63 * t96;
t22 = t274 * t62 + t99 * t96;
t61 = t96 * t219 - t226;
t196 = t22 * t274 + t61 * t99;
t41 = t130 * t63 - t95 * t98;
t194 = t112 * t95 + t113 * t96;
t193 = t150 * t31 + t153 * t30;
t45 = t95 * t145 + t150 * t63;
t189 = -t153 * t63 + t95 * t236;
t181 = qJD(5) * t184;
t5 = -t193 * qJD(5) - t10 * t153 - t11 * t150;
t175 = -t117 * t96 + t184 * t95;
t169 = -t117 * t62 - t184 * t63 + t194;
t134 = -0.2e1 * t217;
t133 = 0.2e1 * t217;
t128 = -0.2e1 * t272;
t101 = t152 * t197 - t154 * t198;
t81 = -0.2e1 * t254;
t80 = -0.2e1 * t255;
t57 = -0.2e1 * t130 * t99 - 0.2e1 * t274 * t98;
t48 = (t266 * t98 - t149 * t99 + (t130 * t149 + t266 * t274) * qJD(6)) * pkin(5);
t42 = t274 * t63 - t95 * t99;
t40 = t272 * t96 + t225;
t29 = -0.4e1 * t96 * t217 + t238 * t62;
t17 = -t23 * t274 + t60 * t99;
t16 = -t130 * t22 - t61 * t98;
t6 = -t196 + t258;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, 0.2e1 * (-t152 ^ 2 + t154 ^ 2) * qJD(2), 0, -0.2e1 * t216, 0, 0, t152 * t232, t154 * t232, 0, 0, 0.2e1 * t127 * t188, -0.2e1 * t127 * t239 - 0.2e1 * t188 * t185, 0, 0.2e1 * t185 * t239, 0, 0, 0.2e1 * t144 * t239 + 0.2e1 * t185 * t229, 0.2e1 * t127 * t229 + 0.2e1 * t144 * t188, -0.2e1 * t100 * t188 - 0.2e1 * t101 * t239 - 0.2e1 * t84 * t127 - 0.2e1 * t85 * t185, 0.2e1 * t100 * t84 + 0.2e1 * t101 * t85 + 0.2e1 * t144 * t229, -0.2e1 * t263, 0.2e1 * t199, 0, t47, 0, 0, 0.2e1 * t106 * t95 + 0.2e1 * t111 * t63, 0.2e1 * t106 * t96 - 0.2e1 * t111 * t62, 0.2e1 * t156 * t95 - 0.2e1 * t162 * t63 + 0.2e1 * t200, 0.2e1 * t111 * t106 - 0.2e1 * t156 * t162 + 0.2e1 * t264, -0.2e1 * t148 * t263 - 0.2e1 * t202, 0.4e1 * t96 * t225 + 0.2e1 * t94 * t272, -0.2e1 * t199 * t153 - 0.2e1 * t95 * t223, -0.2e1 * t147 * t263 + 0.2e1 * t202, 0.2e1 * t199 * t150 - 0.2e1 * t95 * t222, t47, 0.2e1 * t11 * t95 + 0.2e1 * t200 * t150 + 0.2e1 * t30 * t63 + 0.2e1 * t96 * t51, 0.2e1 * t10 * t95 + 0.2e1 * t200 * t153 - 0.2e1 * t31 * t63 - 0.2e1 * t96 * t50, 0.2e1 * t193 * t62 + 0.2e1 * t270 * t96, -0.2e1 * t10 * t31 + 0.2e1 * t11 * t30 + 0.2e1 * t264, -0.2e1 * t61 * t22, 0.2e1 * t22 * t60 - 0.2e1 * t23 * t61, -0.2e1 * t22 * t95 + 0.2e1 * t61 * t63, 0.2e1 * t60 * t23, -0.2e1 * t23 * t95 - 0.2e1 * t60 * t63, t47, 0.2e1 * t14 * t63 + 0.2e1 * t21 * t60 + 0.2e1 * t23 * t43 + 0.2e1 * t4 * t95, -0.2e1 * t15 * t63 + 0.2e1 * t21 * t61 - 0.2e1 * t22 * t43 + 0.2e1 * t3 * t95, 0.2e1 * t14 * t22 - 0.2e1 * t15 * t23 + 0.2e1 * t3 * t60 - 0.2e1 * t4 * t61, 0.2e1 * t14 * t4 - 0.2e1 * t15 * t3 + 0.2e1 * t21 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, 0, -t234, 0, -pkin(7) * t233, pkin(7) * t234, 0, 0, 0, 0, t188, 0, -t239, 0, t84, -t85 (-t247 * t188 - t246 * t239) * pkin(2) (t246 * t85 + t247 * t84) * pkin(2), 0, 0, -t62, 0, -t63, 0, -t28, t156, -t122 * t63 - t276 * t62 + t194, -t112 * t162 - t122 * t156 + t276 * t28 + t250, -t40, t29, t45, t40, -t189, 0, t50 + (-qJD(5) * t175 - t28) * t153 + t169 * t150, t153 * t169 + t175 * t236 + t259, t5, t250 + t28 * t117 + (-t10 * t184 - t31 * t112 - t181 * t30) * t153 + (-t11 * t184 + t30 * t112 - t181 * t31) * t150, t16, t6, t41, t17, t42, 0, t103 * t60 + t110 * t23 + t36 * t95 + t63 * t67 + t261, t103 * t61 - t110 * t22 + t35 * t95 - t63 * t68 + t260, t22 * t67 - t23 * t68 + t35 * t60 - t36 * t61 + t215, t103 * t43 + t110 * t21 + t14 * t36 - t15 * t35 - t3 * t68 + t4 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t113, 0.2e1 * t112, 0, -0.2e1 * t112 * t122 + 0.2e1 * t113 * t276, t133, t128, 0, t134, 0, 0, 0.2e1 * t205, 0.2e1 * t240, 0.2e1 * t77, 0.2e1 * t117 * t113 + 0.2e1 * t184 * t77, t81, t57, 0, t80, 0, 0, 0.2e1 * t257, 0.2e1 * t256, 0.2e1 * t209, 0.2e1 * t103 * t110 - 0.2e1 * t35 * t68 + 0.2e1 * t36 * t67; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t188, 0, t229, 0, 0, 0, 0, 0, 0, t63, -t62, 0, t106, 0, 0, 0, 0, 0, 0, -t189, -t45, -t237 * t62, -t270, 0, 0, 0, 0, 0, 0, t42, -t41, t196 + t258, -t130 * t3 - t14 * t99 - t15 * t98 + t274 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130 * t35 + t274 * t36 - t67 * t99 - t68 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t254 - 0.2e1 * t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, 0, -t63, 0, -t28, t156, 0, 0, -t40, t29, t45, t40, -t189, 0, t50 + (pkin(4) * t62 - pkin(9) * t63) * t150 + (-t28 + (-pkin(4) * t96 - pkin(9) * t95) * qJD(5)) * t153, t190 * pkin(4) + t189 * pkin(9) + t259, t5, -pkin(4) * t28 + pkin(9) * t5, t16, t6, t41, t17, t42, 0, t104 * t63 + t143 * t23 + t228 * t60 + t70 * t95 + t261, -t105 * t63 - t143 * t22 + t228 * t61 + t69 * t95 + t260, t104 * t22 - t105 * t23 + t60 * t69 - t61 * t70 + t215, t104 * t4 - t105 * t3 + t14 * t70 + t143 * t21 - t15 * t69 + t228 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, t112, 0, 0, t133, t128, 0, t134, 0, 0, t205 - t231, -t230 + t240, t77, -pkin(4) * t113 + pkin(9) * t77, t81, t57, 0, t80, 0, 0, t249 + t257, t248 + t256, t208 + t209, t103 * t143 + t104 * t36 - t105 * t35 + t110 * t228 + t67 * t70 - t68 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104 * t99 - t105 * t98 - t130 * t69 + t274 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t128, 0, t134, 0, 0, -0.2e1 * t231, -0.2e1 * t230, 0, 0, t81, t57, 0, t80, 0, 0, 0.2e1 * t249, 0.2e1 * t248, 0.2e1 * t208, 0.2e1 * t104 * t70 - 0.2e1 * t105 * t69 + 0.2e1 * t143 * t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, 0, -t273, t63, t11, t10, 0, 0, 0, 0, -t22, 0, -t23, t63, -t95 * t227 + t266 * t268 + t4 (-t149 * t63 - t213 * t95) * pkin(5) + t3 (t266 * t22 - t149 * t23 + (t149 * t61 - t266 * t60) * qJD(6)) * pkin(5) (t266 * t4 - t149 * t3 + (-t14 * t149 + t266 * t15) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, -t236, 0, -t153 * t181 + t243, t150 * t181 + t241, 0, 0, 0, 0, -t98, 0, -t99, 0, t36, t35, t48 (t266 * t36 - t149 * t35 + (-t149 * t67 + t266 * t68) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, -t145, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0 (-t266 * t99 - t149 * t98 + (t266 * t130 - t149 * t274) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, -t236, 0, -pkin(9) * t145, pkin(9) * t236, 0, 0, 0, 0, -t98, 0, -t99, 0, t70, t69, t48 (t266 * t70 - t149 * t69 + (-t104 * t149 + t266 * t105) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t227, -0.2e1 * t204, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, -t23, t63, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, t36, t35, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, t70, t69, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t227, -t204, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
