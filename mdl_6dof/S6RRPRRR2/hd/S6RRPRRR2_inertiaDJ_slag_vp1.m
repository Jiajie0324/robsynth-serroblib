% Calculate time derivative of joint inertia matrix for
% S6RRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [6x6]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6RRPRRR2_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRRR2_inertiaDJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:16:42
% EndTime: 2019-03-09 13:17:30
% DurationCPUTime: 28.16s
% Computational Cost: add. (78309->1151), mult. (63941->1546), div. (0->0), fcn. (60950->12), ass. (0->593)
t477 = qJ(2) + pkin(11);
t464 = qJ(4) + t477;
t455 = sin(t464);
t484 = sin(qJ(1));
t664 = qJD(1) * t484;
t628 = t455 * t664;
t480 = qJ(5) + qJ(6);
t467 = sin(t480);
t468 = cos(t480);
t487 = cos(qJ(1));
t456 = cos(t464);
t475 = qJD(5) + qJD(6);
t608 = -t456 * t475 + qJD(1);
t537 = t487 * t608;
t665 = qJD(1) * t456;
t607 = -t475 + t665;
t476 = qJD(2) + qJD(4);
t698 = t476 * t487;
t645 = t455 * t698;
t780 = t484 * t607 + t645;
t237 = t467 * t780 + t468 * t537;
t238 = t467 * t537 - t468 * t780;
t643 = t456 * t698;
t638 = t238 * rSges(7,1) + t237 * rSges(7,2) + rSges(7,3) * t643;
t154 = -rSges(7,3) * t628 + t638;
t425 = pkin(9) * t643;
t488 = -pkin(10) - pkin(9);
t482 = sin(qJ(5));
t657 = qJD(5) * t482;
t651 = pkin(5) * t657;
t526 = -t476 * t488 - t651;
t485 = cos(qJ(5));
t656 = qJD(5) * t485;
t650 = pkin(5) * t656;
t762 = pkin(5) * t482;
t652 = qJD(1) * t762;
t630 = t484 * t650 + t487 * t652 + t488 * t628;
t457 = pkin(5) * t485 + pkin(4);
t759 = pkin(4) - t457;
t805 = t154 - t425 + (pkin(9) * t664 + t698 * t759) * t455 + (t487 * t526 + t664 * t759) * t456 + t630;
t701 = t468 * t487;
t704 = t467 * t484;
t384 = -t456 * t704 - t701;
t702 = t468 * t484;
t703 = t467 * t487;
t385 = t456 * t702 - t703;
t708 = t455 * t484;
t256 = Icges(7,5) * t385 + Icges(7,6) * t384 + Icges(7,3) * t708;
t258 = Icges(7,4) * t385 + Icges(7,2) * t384 + Icges(7,6) * t708;
t260 = Icges(7,1) * t385 + Icges(7,4) * t384 + Icges(7,5) * t708;
t555 = -t258 * t467 + t260 * t468;
t128 = -t256 * t456 + t455 * t555;
t567 = Icges(7,5) * t468 - Icges(7,6) * t467;
t338 = -Icges(7,3) * t456 + t455 * t567;
t736 = Icges(7,4) * t468;
t572 = -Icges(7,2) * t467 + t736;
t339 = -Icges(7,6) * t456 + t455 * t572;
t737 = Icges(7,4) * t467;
t579 = Icges(7,1) * t468 - t737;
t340 = -Icges(7,5) * t456 + t455 * t579;
t163 = t338 * t708 + t339 * t384 + t340 * t385;
t804 = -t163 - t128;
t386 = -t456 * t703 + t702;
t387 = t456 * t701 + t704;
t707 = t455 * t487;
t257 = Icges(7,5) * t387 + Icges(7,6) * t386 + Icges(7,3) * t707;
t259 = Icges(7,4) * t387 + Icges(7,2) * t386 + Icges(7,6) * t707;
t261 = Icges(7,1) * t387 + Icges(7,4) * t386 + Icges(7,5) * t707;
t554 = -t259 * t467 + t261 * t468;
t129 = -t257 * t456 + t455 * t554;
t164 = t338 * t707 + t339 * t386 + t340 * t387;
t803 = -t164 - t129;
t587 = -t385 * rSges(7,1) - t384 * rSges(7,2);
t263 = rSges(7,3) * t708 - t587;
t757 = pkin(9) + t488;
t504 = -t455 * t757 - t456 * t759;
t695 = t482 * t487;
t285 = -pkin(5) * t695 + t484 * t504;
t802 = t263 + t285;
t706 = t456 * t476;
t621 = t706 / 0.2e1;
t801 = -t487 * t621 + t628 / 0.2e1;
t663 = qJD(1) * t487;
t617 = t663 / 0.2e1;
t800 = -t455 * t617 - t484 * t621;
t700 = t476 * t484;
t644 = t456 * t700;
t508 = t455 * t663 + t644;
t222 = t572 * t706 + (Icges(7,6) * t476 + (-Icges(7,2) * t468 - t737) * t475) * t455;
t799 = -t475 * t468 * t339 + (-t340 * t475 - t222) * t467;
t413 = rSges(5,1) * t455 + rSges(5,2) * t456;
t524 = t413 * t476;
t483 = sin(qJ(2));
t486 = cos(qJ(2));
t744 = Icges(3,4) * t486;
t578 = -Icges(3,2) * t483 + t744;
t396 = Icges(3,6) * t484 + t487 * t578;
t745 = Icges(3,4) * t483;
t585 = Icges(3,1) * t486 - t745;
t398 = Icges(3,5) * t484 + t487 * t585;
t540 = t396 * t483 - t398 * t486;
t798 = t484 * t540;
t462 = sin(t477);
t463 = cos(t477);
t742 = Icges(4,4) * t463;
t576 = -Icges(4,2) * t462 + t742;
t374 = Icges(4,6) * t484 + t487 * t576;
t743 = Icges(4,4) * t462;
t583 = Icges(4,1) * t463 - t743;
t376 = Icges(4,5) * t484 + t487 * t583;
t542 = t374 * t462 - t376 * t463;
t797 = t484 * t542;
t740 = Icges(5,4) * t456;
t574 = -Icges(5,2) * t455 + t740;
t357 = Icges(5,6) * t484 + t487 * t574;
t741 = Icges(5,4) * t455;
t581 = Icges(5,1) * t456 - t741;
t359 = Icges(5,5) * t484 + t487 * t581;
t544 = t357 * t455 - t359 * t456;
t796 = t484 * t544;
t472 = t486 * pkin(2);
t458 = t472 + pkin(1);
t760 = pkin(1) - t458;
t795 = t484 * t760;
t395 = -Icges(3,6) * t487 + t484 * t578;
t397 = -Icges(3,5) * t487 + t484 * t585;
t541 = t395 * t483 - t397 * t486;
t794 = t487 * t541;
t373 = -Icges(4,6) * t487 + t484 * t576;
t375 = -Icges(4,5) * t487 + t484 * t583;
t543 = t373 * t462 - t375 * t463;
t793 = t487 * t543;
t356 = -Icges(5,6) * t487 + t484 * t574;
t358 = -Icges(5,5) * t487 + t484 * t581;
t545 = t356 * t455 - t358 * t456;
t792 = t487 * t545;
t221 = t567 * t706 + (Icges(7,3) * t476 + (-Icges(7,5) * t467 - Icges(7,6) * t468) * t475) * t455;
t724 = t339 * t467;
t791 = -t476 * t724 - t221;
t568 = Icges(6,5) * t485 - Icges(6,6) * t482;
t246 = t568 * t706 + (Icges(6,3) * t476 + (-Icges(6,5) * t482 - Icges(6,6) * t485) * qJD(5)) * t455;
t738 = Icges(6,4) * t485;
t573 = -Icges(6,2) * t482 + t738;
t344 = -Icges(6,6) * t456 + t455 * t573;
t721 = t344 * t482;
t790 = -t476 * t721 - t246;
t264 = t387 * rSges(7,1) + t386 * rSges(7,2) + rSges(7,3) * t707;
t789 = -t484 * t263 - t487 * t264;
t693 = t485 * t487;
t696 = t482 * t484;
t401 = -t456 * t696 - t693;
t694 = t484 * t485;
t402 = t456 * t694 - t695;
t590 = -rSges(6,1) * t402 - rSges(6,2) * t401;
t297 = rSges(6,3) * t708 - t590;
t403 = -t456 * t695 + t694;
t404 = t456 * t693 + t696;
t298 = t404 * rSges(6,1) + t403 * rSges(6,2) + rSges(6,3) * t707;
t788 = -t484 * t297 - t487 * t298;
t334 = -t455 * t759 + t456 * t757;
t319 = t334 * t664;
t586 = rSges(7,1) * t468 - rSges(7,2) * t467;
t341 = -rSges(7,3) * t456 + t455 * t586;
t333 = t341 * t664;
t787 = t319 + t333;
t470 = t484 * rSges(4,3);
t752 = rSges(4,2) * t462;
t786 = -t487 * t752 + t470;
t765 = pkin(2) * t483;
t597 = -pkin(3) * t462 - t765;
t533 = -t413 + t597;
t335 = t533 * t484;
t336 = t533 * t487;
t785 = t335 * t484 + t336 * t487;
t569 = Icges(5,5) * t456 - Icges(5,6) * t455;
t354 = -Icges(5,3) * t487 + t484 * t569;
t784 = qJD(1) * t354;
t605 = -qJD(5) * t456 + qJD(1);
t536 = t485 * t605;
t604 = -qJD(5) + t665;
t781 = t484 * t604 + t645;
t276 = t482 * t781 + t487 * t536;
t535 = t605 * t482;
t277 = -t485 * t781 + t487 * t535;
t636 = t277 * rSges(6,1) + t276 * rSges(6,2) + rSges(6,3) * t643;
t179 = -rSges(6,3) * t628 + t636;
t646 = t455 * t700;
t278 = t484 * t536 + (-t487 * t604 + t646) * t482;
t699 = t476 * t485;
t279 = t604 * t693 + (-t455 * t699 + t535) * t484;
t591 = rSges(6,1) * t279 + rSges(6,2) * t278;
t180 = rSges(6,3) * t508 + t591;
t783 = t487 * t179 + t484 * t180 + t297 * t663;
t570 = Icges(4,5) * t463 - Icges(4,6) * t462;
t371 = -Icges(4,3) * t487 + t484 * t570;
t571 = Icges(3,5) * t486 - Icges(3,6) * t483;
t393 = -Icges(3,3) * t487 + t484 * t571;
t779 = t487 * t607 - t646;
t411 = Icges(5,2) * t456 + t741;
t412 = Icges(5,1) * t455 + t740;
t539 = t411 * t455 - t412 * t456;
t778 = qJD(1) * t539 + t569 * t476;
t481 = -qJ(3) - pkin(7);
t474 = -pkin(8) + t481;
t670 = t474 - t481;
t764 = pkin(3) * t463;
t430 = t458 + t764;
t677 = t430 - t458;
t331 = t484 * t677 + t487 * t670;
t538 = t484 * t608;
t239 = -t467 * t779 + t468 * t538;
t240 = t467 * t538 + t468 * t779;
t588 = t240 * rSges(7,1) + t239 * rSges(7,2);
t155 = rSges(7,3) * t508 + t588;
t424 = pkin(4) * t646;
t454 = pkin(5) * t696;
t709 = t455 * t476;
t647 = t457 * t709;
t172 = -t487 * t650 + t424 + (-t647 + (-t476 * t757 - t651) * t456) * t484 + (t487 * t504 + t454) * qJD(1);
t777 = t802 * t663 + t805 * t487 + (t155 + t172) * t484;
t776 = 2 * m(3);
t775 = 2 * m(4);
t774 = 2 * m(5);
t773 = 2 * m(6);
t772 = 2 * m(7);
t478 = t484 ^ 2;
t479 = t487 ^ 2;
t771 = -t456 / 0.2e1;
t770 = t484 / 0.2e1;
t769 = -t487 / 0.2e1;
t768 = -rSges(6,3) - pkin(9);
t443 = rSges(3,1) * t483 + rSges(3,2) * t486;
t767 = m(3) * t443;
t766 = m(5) * t413;
t763 = pkin(4) * t456;
t761 = pkin(7) * t484;
t473 = t487 * pkin(7);
t758 = -pkin(7) - t481;
t756 = rSges(3,1) * t486;
t755 = rSges(4,1) * t463;
t754 = rSges(5,1) * t456;
t753 = rSges(3,2) * t483;
t751 = rSges(3,3) * t487;
t149 = Icges(7,5) * t240 + Icges(7,6) * t239 + Icges(7,3) * t508;
t151 = Icges(7,4) * t240 + Icges(7,2) * t239 + Icges(7,6) * t508;
t153 = Icges(7,1) * t240 + Icges(7,4) * t239 + Icges(7,5) * t508;
t38 = (t476 * t555 - t149) * t456 + (t256 * t476 + (-t258 * t475 + t153) * t468 + (-t260 * t475 - t151) * t467) * t455;
t750 = t38 * t487;
t507 = -t628 + t643;
t148 = Icges(7,5) * t238 + Icges(7,6) * t237 + Icges(7,3) * t507;
t150 = Icges(7,4) * t238 + Icges(7,2) * t237 + Icges(7,6) * t507;
t152 = Icges(7,1) * t238 + Icges(7,4) * t237 + Icges(7,5) * t507;
t39 = (t476 * t554 - t148) * t456 + (t257 * t476 + (-t259 * t475 + t152) * t468 + (-t261 * t475 - t150) * t467) * t455;
t749 = t39 * t484;
t174 = Icges(6,5) * t279 + Icges(6,6) * t278 + Icges(6,3) * t508;
t176 = Icges(6,4) * t279 + Icges(6,2) * t278 + Icges(6,6) * t508;
t178 = Icges(6,1) * t279 + Icges(6,4) * t278 + Icges(6,5) * t508;
t291 = Icges(6,5) * t402 + Icges(6,6) * t401 + Icges(6,3) * t708;
t293 = Icges(6,4) * t402 + Icges(6,2) * t401 + Icges(6,6) * t708;
t295 = Icges(6,1) * t402 + Icges(6,4) * t401 + Icges(6,5) * t708;
t553 = -t293 * t482 + t295 * t485;
t48 = (t476 * t553 - t174) * t456 + (-t176 * t482 + t178 * t485 + t291 * t476 + (-t293 * t485 - t295 * t482) * qJD(5)) * t455;
t748 = t48 * t487;
t471 = t484 * rSges(3,3);
t469 = t484 * rSges(5,3);
t173 = Icges(6,5) * t277 + Icges(6,6) * t276 + Icges(6,3) * t507;
t175 = Icges(6,4) * t277 + Icges(6,2) * t276 + Icges(6,6) * t507;
t177 = Icges(6,1) * t277 + Icges(6,4) * t276 + Icges(6,5) * t507;
t292 = Icges(6,5) * t404 + Icges(6,6) * t403 + Icges(6,3) * t707;
t294 = Icges(6,4) * t404 + Icges(6,2) * t403 + Icges(6,6) * t707;
t296 = Icges(6,1) * t404 + Icges(6,4) * t403 + Icges(6,5) * t707;
t552 = -t294 * t482 + t296 * t485;
t49 = (t476 * t552 - t173) * t456 + (-t175 * t482 + t177 * t485 + t292 * t476 + (-t294 * t485 - t296 * t482) * qJD(5)) * t455;
t747 = t49 * t484;
t746 = -rSges(7,3) + t488;
t739 = Icges(6,4) * t482;
t723 = t340 * t468;
t720 = t373 * t463;
t719 = t374 * t463;
t718 = t375 * t462;
t717 = t376 * t462;
t716 = t395 * t486;
t715 = t396 * t486;
t714 = t397 * t483;
t713 = t398 * t483;
t712 = t411 * t476;
t711 = t412 * t476;
t705 = t456 * t487;
t247 = t573 * t706 + (Icges(6,6) * t476 + (-Icges(6,2) * t485 - t739) * qJD(5)) * t455;
t697 = t482 * t247;
t692 = t487 * t474;
t691 = t155 * t707 + t263 * t643;
t224 = t586 * t706 + (rSges(7,3) * t476 + (-rSges(7,1) * t467 - rSges(7,2) * t468) * t475) * t455;
t624 = t455 * t657;
t251 = -pkin(5) * t624 + t476 * t504;
t689 = -t224 - t251;
t688 = t264 * t709 + t455 * t333;
t589 = rSges(6,1) * t485 - rSges(6,2) * t482;
t250 = t589 * t706 + (rSges(6,3) * t476 + (-rSges(6,1) * t482 - rSges(6,2) * t485) * qJD(5)) * t455;
t596 = pkin(9) * t455 + t763;
t383 = t596 * t476;
t687 = -t250 - t383;
t439 = pkin(4) * t705;
t389 = pkin(9) * t707 + t439;
t531 = t457 * t705 - t488 * t707 + t454;
t286 = t531 - t389;
t685 = -t264 - t286;
t684 = -t298 - t389;
t195 = t456 * t263 + t341 * t708;
t415 = t487 * t430;
t445 = t487 * t458;
t332 = -t484 * t670 + t415 - t445;
t368 = -pkin(1) * t487 + t484 * t758 + t445;
t683 = -t332 - t368;
t682 = -t334 - t341;
t346 = -rSges(6,3) * t456 + t455 * t589;
t414 = t455 * pkin(4) - t456 * pkin(9);
t681 = -t346 - t414;
t592 = -rSges(5,2) * t455 + t754;
t360 = -rSges(5,3) * t487 + t484 * t592;
t361 = rSges(5,1) * t705 - rSges(5,2) * t707 + t469;
t267 = t484 * t360 + t487 * t361;
t367 = t481 * t487 + t473 - t795;
t680 = t484 * t367 + t487 * t368;
t388 = t596 * t484;
t679 = t484 * t388 + t487 * t389;
t420 = t597 * qJD(2);
t405 = t487 * t420;
t465 = qJD(3) * t484;
t678 = t405 + t465;
t676 = rSges(5,2) * t628 + rSges(5,3) * t663;
t626 = t462 * t664;
t675 = rSges(4,2) * t626 + rSges(4,3) * t663;
t625 = t483 * t664;
t450 = pkin(2) * t625;
t674 = pkin(3) * t626 + t450;
t447 = t474 * t664;
t466 = qJD(3) * t487;
t673 = t447 + t466;
t660 = qJD(2) * t483;
t653 = pkin(2) * t660;
t672 = t481 * t664 + t484 * t653;
t671 = t487 * t756 + t471;
t669 = t478 + t479;
t355 = Icges(5,3) * t484 + t487 * t569;
t668 = qJD(1) * t355;
t372 = Icges(4,3) * t484 + t487 * t570;
t667 = qJD(1) * t372;
t394 = Icges(3,3) * t484 + t487 * t571;
t666 = qJD(1) * t394;
t662 = qJD(2) * t462;
t661 = qJD(2) * t463;
t659 = qJD(2) * t484;
t658 = qJD(2) * t486;
t655 = t487 * t753;
t223 = t579 * t706 + (Icges(7,5) * t476 + (-Icges(7,1) * t467 - t736) * t475) * t455;
t641 = t455 * t468 * t223 + t338 * t709 + t706 * t723;
t640 = -t383 + t689;
t580 = Icges(6,1) * t485 - t739;
t248 = t580 * t706 + (Icges(6,5) * t476 + (-Icges(6,1) * t482 - t738) * qJD(5)) * t455;
t343 = -Icges(6,3) * t456 + t455 * t568;
t345 = -Icges(6,5) * t456 + t455 * t580;
t639 = t455 * t485 * t248 + t456 * t345 * t699 + t343 * t709;
t509 = -t456 * t664 - t645;
t637 = t484 * (-t484 * t524 + (t487 * t592 + t469) * qJD(1)) + t487 * (rSges(5,1) * t509 - rSges(5,2) * t643 + t676) + t360 * t663;
t635 = t484 * (pkin(9) * t508 + qJD(1) * t439 - t424) + t487 * (pkin(4) * t509 - pkin(9) * t628 + t425) + t388 * t663;
t606 = t487 * t653;
t629 = -t466 - t672;
t634 = t484 * ((-t487 * t760 - t761) * qJD(1) + t629) + t487 * (-t606 + t465 + (t487 * t758 + t795) * qJD(1)) + t367 * t663;
t633 = -t389 + t683;
t632 = -t414 + t682;
t390 = t414 * t664;
t631 = t390 + t674;
t337 = t346 * t664;
t623 = t708 / 0.2e1;
t622 = t707 / 0.2e1;
t142 = -t291 * t456 + t455 * t553;
t184 = t343 * t708 + t344 * t401 + t345 * t402;
t620 = t184 / 0.2e1 + t142 / 0.2e1;
t143 = -t292 * t456 + t455 * t552;
t185 = t343 * t707 + t344 * t403 + t345 * t404;
t619 = -t185 / 0.2e1 - t143 / 0.2e1;
t618 = t664 / 0.2e1;
t421 = rSges(4,1) * t462 + rSges(4,2) * t463;
t616 = -t421 - t765;
t615 = t487 * t682;
t290 = t681 * t487;
t270 = -qJD(1) * t356 - t487 * t712;
t614 = t359 * t476 + t270;
t271 = qJD(1) * t357 - t484 * t712;
t613 = t358 * t476 + t271;
t272 = -qJD(1) * t358 - t487 * t711;
t612 = -t357 * t476 + t272;
t273 = qJD(1) * t359 - t484 * t711;
t611 = t356 * t476 - t273;
t610 = -t484 * t474 + t415;
t609 = -t456 * t457 - t430;
t603 = t456 * t155 + t224 * t708 + t341 * t508;
t602 = t484 * t331 + t487 * t332 + t680;
t162 = t679 - t788;
t206 = t632 * t487;
t187 = -t338 * t456 + (t723 - t724) * t455;
t29 = t149 * t707 + t151 * t386 + t153 * t387 + t237 * t258 + t238 * t260 + t256 * t507;
t30 = t148 * t707 + t150 * t386 + t152 * t387 + t237 * t259 + t238 * t261 + t257 * t507;
t114 = t256 * t707 + t258 * t386 + t260 * t387;
t115 = t257 * t707 + t259 * t386 + t261 * t387;
t563 = t114 * t484 + t115 * t487;
t564 = t114 * t487 - t115 * t484;
t63 = t221 * t707 + t222 * t386 + t223 * t387 + t237 * t339 + t238 * t340 + t338 * t507;
t5 = (t476 * t563 - t63) * t456 + (qJD(1) * t564 + t164 * t476 + t29 * t484 + t30 * t487) * t455;
t112 = t256 * t708 + t258 * t384 + t260 * t385;
t113 = t257 * t708 + t259 * t384 + t261 * t385;
t565 = t112 * t484 + t113 * t487;
t55 = -t163 * t456 + t455 * t565;
t56 = -t164 * t456 + t455 * t563;
t561 = t128 * t484 + t129 * t487;
t31 = t149 * t708 + t151 * t384 + t153 * t385 + t239 * t258 + t240 * t260 + t256 * t508;
t32 = t148 * t708 + t150 * t384 + t152 * t385 + t239 * t259 + t240 * t261 + t257 * t508;
t566 = t112 * t487 - t113 * t484;
t64 = t221 * t708 + t222 * t384 + t223 * t385 + t239 * t339 + t240 * t340 + t338 * t508;
t6 = (t476 * t565 - t64) * t456 + (qJD(1) * t566 + t163 * t476 + t31 * t484 + t32 * t487) * t455;
t595 = t5 * t707 + t56 * t643 + t6 * t708 + (-t187 * t456 + t455 * t561) * t709 + t508 * t55;
t594 = -t753 + t756;
t593 = -t752 + t755;
t584 = Icges(3,1) * t483 + t744;
t582 = Icges(4,1) * t462 + t742;
t577 = Icges(3,2) * t486 + t745;
t575 = Icges(4,2) * t463 + t743;
t410 = Icges(5,5) * t455 + Icges(5,6) * t456;
t562 = t128 * t487 - t129 * t484;
t132 = t291 * t708 + t293 * t401 + t295 * t402;
t133 = t292 * t708 + t294 * t401 + t296 * t402;
t560 = t132 * t487 - t133 * t484;
t559 = t132 * t484 + t133 * t487;
t134 = t291 * t707 + t293 * t403 + t295 * t404;
t135 = t292 * t707 + t294 * t403 + t296 * t404;
t558 = t134 * t487 - t135 * t484;
t557 = t134 * t484 + t135 * t487;
t556 = t142 * t484 + t143 * t487;
t551 = t297 * t487 - t298 * t484;
t529 = -t430 - t592;
t308 = (rSges(5,3) - t474) * t487 + t529 * t484;
t309 = t361 + t610;
t548 = t308 * t487 + t309 * t484;
t381 = t487 * t755 + t786;
t534 = -pkin(1) - t594;
t532 = -t414 + t597;
t530 = -t458 - t593;
t527 = t484 * (t484 * t420 + t663 * t677 - t447 + t672) + t487 * (-qJD(1) * t331 + t405 + t606) + t331 * t663 + t634;
t106 = t484 * t285 + t487 * t286 + t679 - t789;
t525 = (-t472 - t764) * qJD(2);
t523 = qJD(2) * t443;
t522 = qJD(2) * t421;
t521 = -t346 + t532;
t518 = t476 * t410;
t517 = t285 * t487 + t484 * t685;
t516 = qJD(2) * t584;
t515 = qJD(2) * t582;
t514 = qJD(2) * t577;
t513 = qJD(2) * t575;
t512 = qJD(2) * (-Icges(3,5) * t483 - Icges(3,6) * t486);
t511 = qJD(2) * (-Icges(4,5) * t462 - Icges(4,6) * t463);
t510 = t455 * t768 - t430 - t763;
t506 = t455 * t746 + t609;
t505 = t532 + t682;
t382 = t592 * t476;
t503 = -t382 + t525;
t502 = t525 - t383;
t15 = qJD(1) * t563 - t29 * t487 + t30 * t484;
t199 = -t354 * t487 - t484 * t545;
t200 = -t355 * t487 - t796;
t201 = t354 * t484 - t792;
t202 = t355 * t484 - t487 * t544;
t40 = t174 * t707 + t176 * t403 + t178 * t404 + t276 * t293 + t277 * t295 + t291 * t507;
t41 = t173 * t707 + t175 * t403 + t177 * t404 + t276 * t294 + t277 * t296 + t292 * t507;
t21 = qJD(1) * t557 - t40 * t487 + t41 * t484;
t268 = -t487 * t518 - t784;
t269 = -t484 * t518 + t668;
t501 = (-t199 * t487 - t560 - t566) * t664 + (-t201 * t487 - t558 - t564) * t663 + (t15 + t21 + t200 * t664 + t202 * t663 + (t202 * qJD(1) + (t271 * t455 - t273 * t456 + t356 * t706 + t358 * t709 - t784) * t487) * t487 + ((t201 + t796) * qJD(1) + (-t269 + t612 * t456 - t614 * t455 + (t355 - t545) * qJD(1)) * t487 + t484 * t268) * t484) * t484;
t244 = t521 * t487;
t500 = -t250 + t502;
t499 = t527 + t635;
t194 = t505 * t487;
t498 = t502 + t689;
t16 = qJD(1) * t565 - t31 * t487 + t32 * t484;
t497 = t15 * t622 + t16 * t623 + t5 * t770 + t6 * t769 + (qJD(1) * t561 + t749 - t750) * t771 + t55 * t618 + t56 * t617 - t562 * t709 / 0.2e1 + t801 * t564 + t800 * t566;
t496 = rSges(3,2) * t625 + rSges(3,3) * t663 - t487 * t523;
t495 = t484 * t510 - t692;
t183 = t187 * t709;
t76 = t455 * t799 + t791 * t456 + t641;
t7 = t183 + (t476 * t561 - t76) * t456 + (qJD(1) * t562 + t38 * t484 + t39 * t487) * t455;
t494 = -t456 * t7 - t56 * t628 + t595;
t493 = t183 + (t38 + t64) * t623 + (t39 + t63) * t622 + t803 * t801 + t804 * t800;
t42 = t174 * t708 + t176 * t401 + t178 * t402 + t278 * t293 + t279 * t295 + t291 * t508;
t43 = t173 * t708 + t175 * t401 + t177 * t402 + t278 * t294 + t279 * t296 + t292 * t508;
t22 = qJD(1) * t559 - t42 * t487 + t43 * t484;
t28 = (t487 * t269 + (t200 + t792) * qJD(1)) * t487 + (t199 * qJD(1) + (-t270 * t455 + t272 * t456 - t357 * t706 - t359 * t709 + t668) * t484 + (-t268 + t611 * t456 + t613 * t455 + (-t354 - t544) * qJD(1)) * t487) * t484;
t492 = (-t16 - t22 - t28) * t487 + t501;
t378 = t574 * t476;
t379 = t581 * t476;
t491 = qJD(1) * t410 + (t379 - t712) * t456 + (-t378 - t711) * t455;
t74 = t246 * t707 + t247 * t403 + t248 * t404 + t276 * t344 + t277 * t345 + t343 * t507;
t10 = (t476 * t557 - t74) * t456 + (qJD(1) * t558 + t185 * t476 + t40 * t484 + t41 * t487) * t455;
t75 = t246 * t708 + t247 * t401 + t248 * t402 + t278 * t344 + t279 * t345 + t343 * t508;
t11 = (t476 * t559 - t75) * t456 + (qJD(1) * t560 + t184 * t476 + t42 * t484 + t43 * t487) * t455;
t67 = -t184 * t456 + t455 * t559;
t68 = -t185 * t456 + t455 * t557;
t490 = t10 * t770 + t11 * t769 + t21 * t622 + t22 * t623 + (qJD(1) * t556 + t747 - t748) * t771 + t497 + t67 * t618 + t68 * t617 + (-t142 * t487 + t143 * t484) * t709 / 0.2e1 + t801 * t558 + t800 * t560;
t489 = -t750 / 0.2e1 + t749 / 0.2e1 - t748 / 0.2e1 + t747 / 0.2e1 + (t455 * t612 + t456 * t614 + t484 * t778 + t491 * t487 + t63 + t74) * t770 + (-t455 * t611 + t456 * t613 + t491 * t484 - t487 * t778 + t64 + t75) * t769 + (t356 * t456 + t358 * t455 - t410 * t487 - t484 * t539 + t142 + t184 - t804) * t618 + (t357 * t456 + t359 * t455 + t410 * t484 - t487 * t539 + t143 + t185 - t803) * t617;
t431 = t594 * qJD(2);
t409 = t593 * qJD(2);
t400 = -t655 + t671;
t399 = t484 * t594 - t751;
t380 = -rSges(4,3) * t487 + t484 * t593;
t364 = t616 * t487;
t363 = t616 * t484;
t353 = t761 + (pkin(1) - t753) * t487 + t671;
t352 = t484 * t534 + t473 + t751;
t330 = -t481 * t484 + t381 + t445;
t329 = (rSges(4,3) - t481) * t487 + t530 * t484;
t323 = t484 * t512 + t666;
t322 = -qJD(1) * t393 + t487 * t512;
t302 = t484 * t511 + t667;
t301 = -qJD(1) * t371 + t487 * t511;
t300 = t443 * t659 + ((-rSges(3,3) - pkin(7)) * t484 + t534 * t487) * qJD(1);
t299 = (t473 + (-pkin(1) - t756) * t484) * qJD(1) + t496;
t289 = t681 * t484;
t282 = -t421 * t663 - t409 * t484 + (-t483 * t663 - t484 * t658) * pkin(2);
t281 = t421 * t664 + t450 + (-pkin(2) * t658 - t409) * t487;
t243 = t521 * t484;
t242 = t263 * t707;
t228 = t394 * t484 - t487 * t540;
t227 = t393 * t484 - t794;
t226 = -t394 * t487 - t798;
t225 = -t393 * t487 - t484 * t541;
t218 = t421 * t659 + (t487 * t530 - t470) * qJD(1) - t629;
t217 = t465 + (-t458 - t755) * t664 + (-qJD(1) * t481 + qJD(2) * t616) * t487 + t675;
t215 = qJD(1) * t336 + t484 * t503;
t214 = t413 * t664 + t487 * t503 + t674;
t212 = t372 * t484 - t487 * t542;
t211 = t371 * t484 - t793;
t210 = -t372 * t487 - t797;
t209 = -t371 * t487 - t484 * t543;
t208 = t610 - t684;
t207 = t495 + t590;
t205 = t632 * t484;
t204 = -t298 * t456 - t346 * t707;
t203 = t297 * t456 + t346 * t708;
t198 = (-t420 + t524) * t484 + (t487 * t529 - t469) * qJD(1) + t673;
t197 = -t487 * t524 + (-t692 + (-t430 - t754) * t484) * qJD(1) + t676 + t678;
t196 = -t264 * t456 - t341 * t707;
t193 = t505 * t484;
t192 = t531 + t610 + t264;
t191 = (-t474 + t762) * t487 + t506 * t484 + t587;
t190 = -t343 * t456 + (t345 * t485 - t721) * t455;
t189 = t551 * t455;
t188 = t190 * t709;
t186 = -t264 * t708 + t242;
t168 = qJD(1) * t290 + t484 * t687;
t167 = t487 * t687 + t337 + t390;
t141 = -t361 * t664 + t637;
t140 = qJD(1) * t244 + t484 * t500;
t139 = t487 * t500 + t337 + t631;
t136 = t602 + t267;
t123 = t455 * t615 + t456 * t685;
t122 = t285 * t456 + t334 * t708 + t195;
t111 = t424 + (t706 * t768 - t420) * t484 + t510 * t663 - t591 + t673;
t110 = -pkin(4) * t645 + qJD(1) * t495 + t425 + t636 + t678;
t109 = t455 * t517 + t242;
t108 = qJD(1) * t206 + t484 * t640;
t107 = t487 * t640 + t390 + t787;
t105 = t162 + t602;
t104 = qJD(1) * t194 + t484 * t498;
t103 = t487 * t498 + t631 + t787;
t102 = (qJD(1) * t506 + t650) * t487 + (-t652 + t647 - t420 + (t476 * t746 + t651) * t456) * t484 - t588 + t673;
t101 = (t456 * t526 - t647) * t487 + (-t692 + (-rSges(7,3) * t455 + t609) * t484) * qJD(1) + t630 + t638 + t678;
t100 = (t346 * t700 + t180) * t456 + (t250 * t484 - t297 * t476 + t346 * t663) * t455;
t99 = (-t346 * t698 - t179) * t456 + (-t250 * t487 + t298 * t476 + t337) * t455;
t93 = -t263 * t709 + t603;
t92 = -t224 * t707 + (-t341 * t698 - t154) * t456 + t688;
t91 = t790 * t456 + (-t697 + (-t344 * t485 - t345 * t482) * qJD(5)) * t455 + t639;
t90 = t106 + t602;
t71 = t551 * t706 + (qJD(1) * t788 - t179 * t484 + t180 * t487) * t455;
t70 = (-t361 + t683) * t664 + t527 + t637;
t69 = t664 * t684 + t635 + t783;
t57 = -t264 * t644 + (qJD(1) * t789 - t154 * t484) * t455 + t691;
t45 = (t334 * t700 + t172) * t456 + (t251 * t484 + t334 * t663 - t476 * t802) * t455 + t603;
t44 = (t476 * t615 - t805) * t456 + (t286 * t476 + t487 * t689 + t319) * t455 + t688;
t33 = (-t298 + t633) * t664 + t499 + t783;
t26 = (-t389 + t685) * t664 + t635 + t777;
t25 = t517 * t706 + (t172 * t487 - t805 * t484 + (-t484 * t802 + t487 * t685) * qJD(1)) * t455 + t691;
t24 = t499 + (t633 + t685) * t664 + t777;
t1 = [-t411 * t709 - t345 * t624 + t639 + t641 + (t101 * t192 + t102 * t191) * t772 + (t110 * t208 + t111 * t207) * t773 + (t197 * t309 + t198 * t308) * t774 + (t217 * t330 + t218 * t329) * t775 + (t299 * t353 + t300 * t352) * t776 + t412 * t706 + (-t575 + t583) * t662 + (t576 + t582) * t661 + (-t577 + t585) * t660 + (t578 + t584) * t658 + (t378 + t790 + t791) * t456 + (-t344 * t656 + t379 - t697 + t799) * t455; m(3) * ((-t299 * t484 - t300 * t487) * t443 + (-t352 * t487 - t353 * t484) * t431) + t489 + m(4) * (t217 * t363 + t218 * t364 + t281 * t329 + t282 * t330) + m(5) * (t197 * t335 + t198 * t336 + t214 * t308 + t215 * t309) + m(6) * (t110 * t243 + t111 * t244 + t139 * t207 + t140 * t208) + m(7) * (t101 * t193 + t102 * t194 + t103 * t191 + t104 * t192) + ((t715 / 0.2e1 + t713 / 0.2e1 - t353 * t767 + t719 / 0.2e1 + t717 / 0.2e1) * t487 + (t352 * t767 + t716 / 0.2e1 + t714 / 0.2e1 + t720 / 0.2e1 + t718 / 0.2e1) * t484) * qJD(1) + ((-qJD(1) * t373 - t487 * t513) * t463 + (-qJD(1) * t375 - t487 * t515) * t462 + (-qJD(1) * t395 - t487 * t514) * t486 + (-qJD(1) * t397 - t487 * t516) * t483 + (-t540 - t542) * qJD(2)) * t770 + ((qJD(1) * t374 - t484 * t513) * t463 + (qJD(1) * t376 - t484 * t515) * t462 + (qJD(1) * t396 - t484 * t514) * t486 + (qJD(1) * t398 - t484 * t516) * t483 + (-t541 - t543) * qJD(2)) * t769 + (t571 + t570) * qJD(2) * (t479 / 0.2e1 + t478 / 0.2e1); -t487 * t16 - t487 * t22 - t487 * t28 + t501 + t484 * ((t484 * t322 + (t227 + t798) * qJD(1)) * t484 + (t228 * qJD(1) + (t395 * t658 + t397 * t660) * t487 + (-t323 + (-t713 - t715) * qJD(2) + (t394 - t541) * qJD(1)) * t484) * t487) - t487 * ((t487 * t323 + (t226 + t794) * qJD(1)) * t487 + (t225 * qJD(1) + (-t396 * t658 - t398 * t660 + t666) * t484 + (-t322 + (t714 + t716) * qJD(2) - t540 * qJD(1)) * t487) * t484) + ((t399 * t484 + t400 * t487) * ((qJD(1) * t399 + t496) * t487 + (-t484 * t523 + (-t400 - t655 + t471) * qJD(1)) * t484) + t669 * t443 * t431) * t776 + t484 * ((t484 * t301 + (t211 + t797) * qJD(1)) * t484 + (t212 * qJD(1) + (t373 * t661 + t375 * t662) * t487 + (-t302 + (-t717 - t719) * qJD(2) + (t372 - t543) * qJD(1)) * t484) * t487) - t487 * ((t487 * t302 + (t210 + t793) * qJD(1)) * t487 + (t209 * qJD(1) + (-t374 * t661 - t376 * t662 + t667) * t484 + (-t301 + (t718 + t720) * qJD(2) - t542 * qJD(1)) * t487) * t484) + (t136 * t70 + t214 * t336 + t215 * t335) * t774 + (t105 * t33 + t139 * t244 + t140 * t243) * t773 + (t103 * t194 + t104 * t193 + t24 * t90) * t772 + (t364 * t281 + t363 * t282 + (t380 * t484 + t381 * t487 + t680) * ((qJD(1) * t380 - t487 * t522 + t675) * t487 + (-t484 * t522 + (-t368 - t381 + t786) * qJD(1)) * t484 + t634)) * t775 + ((-t209 - t225) * t487 + (t210 + t226) * t484) * t664 + ((-t211 - t227) * t487 + (t212 + t228) * t484) * t663; m(7) * (-t101 * t487 + t102 * t484 + (t191 * t487 + t192 * t484) * qJD(1)) + m(6) * (-t110 * t487 + t111 * t484 + (t207 * t487 + t208 * t484) * qJD(1)) + m(5) * (qJD(1) * t548 - t197 * t487 + t198 * t484) + m(4) * (-t217 * t487 + t218 * t484 + (t329 * t487 + t330 * t484) * qJD(1)); m(7) * (t103 * t484 - t104 * t487 + (t193 * t484 + t194 * t487) * qJD(1)) + m(6) * (t139 * t484 - t140 * t487 + (t243 * t484 + t244 * t487) * qJD(1)) + m(5) * (qJD(1) * t785 + t214 * t484 - t215 * t487) + m(4) * (t281 * t484 - t282 * t487 + (t363 * t484 + t364 * t487) * qJD(1)); 0; t489 + (-t197 * t484 - t198 * t487 + (t308 * t484 - t309 * t487) * qJD(1)) * t766 - m(5) * t548 * t382 + m(6) * (t110 * t289 + t111 * t290 + t167 * t207 + t168 * t208) + m(7) * (t101 * t205 + t102 * t206 + t107 * t191 + t108 * t192); t492 + m(7) * (t103 * t206 + t104 * t205 + t106 * t24 + t107 * t194 + t108 * t193 + t26 * t90) + m(6) * (t105 * t69 + t139 * t290 + t140 * t289 + t162 * t33 + t167 * t244 + t168 * t243) + (-t214 * t487 - t215 * t484 + (-t335 * t487 + t336 * t484) * qJD(1)) * t766 + m(5) * (t136 * t141 + t267 * t70 - t382 * t785); m(6) * (t167 * t484 - t168 * t487 + (t289 * t484 + t290 * t487) * qJD(1)) + m(7) * (t107 * t484 - t108 * t487 + (t205 * t484 + t206 * t487) * qJD(1)); (t106 * t26 + t107 * t206 + t108 * t205) * t772 + (t162 * t69 + t167 * t290 + t168 * t289) * t773 + (t382 * t413 * t669 + t141 * t267) * t774 + t492; t493 + ((t49 / 0.2e1 + t74 / 0.2e1) * t487 + (t48 / 0.2e1 + t75 / 0.2e1) * t484 + (t484 * t619 + t487 * t620) * qJD(1)) * t455 + (-t76 - t91 + (t484 * t620 - t487 * t619) * t476) * t456 + m(6) * (t100 * t207 + t110 * t204 + t111 * t203 + t208 * t99) + m(7) * (t101 * t123 + t102 * t122 + t191 * t45 + t192 * t44) + t188; t490 + m(6) * (t100 * t244 + t105 * t71 + t139 * t203 + t140 * t204 + t189 * t33 + t243 * t99) + m(7) * (t103 * t122 + t104 * t123 + t109 * t24 + t193 * t44 + t194 * t45 + t25 * t90); m(6) * (t100 * t484 - t487 * t99 + (t203 * t487 + t204 * t484) * qJD(1)) + m(7) * (-t44 * t487 + t45 * t484 + (t122 * t487 + t123 * t484) * qJD(1)); t490 + m(6) * (t100 * t290 + t162 * t71 + t167 * t203 + t168 * t204 + t189 * t69 + t289 * t99) + m(7) * (t106 * t25 + t107 * t122 + t108 * t123 + t109 * t26 + t205 * t44 + t206 * t45); (t109 * t25 + t122 * t45 + t123 * t44) * t772 + (t100 * t203 + t189 * t71 + t204 * t99) * t773 + (t91 * t456 - t188 - t7 + (-t456 * t556 + t484 * t67 + t487 * t68) * t476) * t456 + (t487 * t10 + t484 * t11 + t556 * t709 + (-t190 * t476 - t48 * t484 - t49 * t487) * t456 + ((-t142 * t456 + t67) * t487 + (t143 * t456 - t56 - t68) * t484) * qJD(1)) * t455 + t595; t493 - t76 * t456 + m(7) * (t101 * t196 + t102 * t195 + t191 * t93 + t192 * t92); m(7) * (t103 * t195 + t104 * t196 + t186 * t24 + t193 * t92 + t194 * t93 + t57 * t90) + t497; m(7) * (t484 * t93 - t487 * t92 + (t195 * t487 + t196 * t484) * qJD(1)); m(7) * (t106 * t57 + t107 * t195 + t108 * t196 + t186 * t26 + t205 * t92 + t206 * t93) + t497; m(7) * (t109 * t57 + t122 * t93 + t123 * t92 + t186 * t25 + t195 * t45 + t196 * t44) + t494; (t186 * t57 + t195 * t93 + t196 * t92) * t772 + t494;];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t1(1) t1(2) t1(4) t1(7) t1(11) t1(16); t1(2) t1(3) t1(5) t1(8) t1(12) t1(17); t1(4) t1(5) t1(6) t1(9) t1(13) t1(18); t1(7) t1(8) t1(9) t1(10) t1(14) t1(19); t1(11) t1(12) t1(13) t1(14) t1(15) t1(20); t1(16) t1(17) t1(18) t1(19) t1(20) t1(21);];
Mq  = res;
