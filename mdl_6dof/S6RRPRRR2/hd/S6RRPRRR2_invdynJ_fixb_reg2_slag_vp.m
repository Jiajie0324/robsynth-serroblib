% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR2_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:19:19
% EndTime: 2019-03-09 13:19:47
% DurationCPUTime: 15.89s
% Computational Cost: add. (29152->736), mult. (69538->928), div. (0->0), fcn. (54482->18), ass. (0->371)
t337 = qJD(2) + qJD(4);
t345 = sin(qJ(5));
t349 = cos(qJ(5));
t342 = sin(pkin(11));
t350 = cos(qJ(2));
t499 = cos(pkin(11));
t417 = t499 * t350;
t400 = qJD(1) * t417;
t347 = sin(qJ(2));
t453 = qJD(1) * t347;
t258 = -t342 * t453 + t400;
t346 = sin(qJ(4));
t534 = cos(qJ(4));
t271 = t342 * t350 + t347 * t499;
t539 = t271 * qJD(1);
t383 = -t346 * t258 - t534 * t539;
t176 = -t349 * t337 - t345 * t383;
t178 = t337 * t345 - t349 * t383;
t344 = sin(qJ(6));
t335 = qJDD(2) + qJDD(4);
t446 = t347 * qJDD(1);
t395 = -qJDD(1) * t417 + t342 * t446;
t558 = qJD(2) * t539;
t205 = t395 + t558;
t447 = qJD(1) * qJD(2);
t425 = t347 * t447;
t364 = qJDD(1) * t271 - t342 * t425;
t206 = qJD(2) * t400 + t364;
t428 = qJD(4) * t534;
t452 = qJD(4) * t346;
t408 = t346 * t205 - t534 * t206 - t258 * t428 + t452 * t539;
t450 = qJD(5) * t349;
t451 = qJD(5) * t345;
t437 = t337 * t451 - t345 * t408 - t383 * t450;
t388 = t335 * t349 - t437;
t533 = cos(qJ(6));
t426 = t533 * qJD(6);
t449 = qJD(6) * t344;
t80 = -t345 * t335 - t337 * t450 + t349 * t408 - t383 * t451;
t36 = t176 * t426 + t178 * t449 - t344 * t388 + t533 * t80;
t468 = t344 * t345;
t381 = t533 * t349 - t468;
t382 = -t344 * t176 + t178 * t533;
t196 = t534 * t258 - t346 * t539;
t432 = t533 * t345;
t278 = t344 * t349 + t432;
t538 = qJD(5) + qJD(6);
t213 = t538 * t278;
t461 = t278 * t196 - t213;
t601 = -t381 * t36 + t382 * t461;
t359 = qJD(4) * t383 - t534 * t205 - t346 * t206;
t108 = qJDD(5) - t359;
t104 = qJDD(6) + t108;
t557 = qJD(5) - t196;
t183 = qJD(6) + t557;
t541 = t533 * qJD(5) + t426;
t460 = t381 * t196 - t349 * t541 + t468 * t538;
t600 = -t278 * t104 + t183 * t460;
t562 = t196 * t349;
t597 = t450 - t562;
t563 = t196 * t345;
t596 = t451 - t563;
t74 = t345 * t388;
t501 = -t176 * t450 + t74;
t589 = t557 * t345;
t545 = t178 * t589;
t595 = t176 * t562 - t349 * t80 + t501 - t545;
t343 = -qJ(3) - pkin(7);
t420 = qJD(2) * t343;
t255 = -qJD(3) * t347 + t350 * t420;
t298 = t343 * t347;
t202 = qJDD(2) * pkin(2) + qJD(1) * t255 + qJDD(1) * t298;
t254 = qJD(3) * t350 + t347 * t420;
t299 = t343 * t350;
t209 = qJD(1) * t254 - qJDD(1) * t299;
t148 = t499 * t202 - t342 * t209;
t112 = qJDD(2) * pkin(3) - pkin(8) * t206 + t148;
t149 = t342 * t202 + t499 * t209;
t117 = -pkin(8) * t205 + t149;
t282 = qJD(1) * t299;
t261 = t342 * t282;
t281 = qJD(1) * t298;
t511 = qJD(2) * pkin(2);
t266 = t281 + t511;
t203 = t499 * t266 + t261;
t530 = pkin(8) * t539;
t165 = qJD(2) * pkin(3) + t203 - t530;
t418 = t499 * t282;
t204 = t342 * t266 - t418;
t531 = pkin(8) * t258;
t173 = t204 + t531;
t410 = -t346 * t112 - t534 * t117 - t165 * t428 + t173 * t452;
t40 = pkin(9) * t335 - t410;
t333 = t350 * pkin(2);
t324 = t333 + pkin(1);
t248 = pkin(2) * t425 - qJDD(1) * t324 + qJDD(3);
t520 = t205 * pkin(3);
t169 = t248 + t520;
t52 = -pkin(4) * t359 + pkin(9) * t408 + t169;
t50 = t349 * t52;
t114 = t346 * t165 + t173 * t534;
t101 = t337 * pkin(9) + t114;
t289 = -qJD(1) * t324 + qJD(3);
t214 = -pkin(3) * t258 + t289;
t119 = -pkin(4) * t196 + pkin(9) * t383 + t214;
t60 = t101 * t349 + t119 * t345;
t12 = -qJD(5) * t60 - t345 * t40 + t50;
t509 = t557 * t60;
t594 = t12 + t509;
t123 = t533 * t176 + t178 * t344;
t37 = qJD(6) * t382 - t344 * t80 - t533 * t388;
t402 = t123 * t460 - t278 * t37;
t593 = t402 + t601;
t592 = pkin(10) * t563;
t59 = -t101 * t345 + t349 * t119;
t510 = t557 * t59;
t321 = pkin(2) * t499 + pkin(3);
t532 = pkin(2) * t342;
t252 = t534 * t321 - t346 * t532;
t235 = t252 * qJD(4);
t211 = t499 * t281 + t261;
t179 = t211 - t530;
t210 = -t281 * t342 + t418;
t387 = t210 - t531;
t128 = t179 * t534 + t346 * t387;
t144 = -pkin(4) * t383 - pkin(9) * t196;
t222 = pkin(2) * t453 + pkin(3) * t539;
t129 = t144 + t222;
t63 = -t128 * t345 + t349 * t129;
t591 = -t345 * t235 - t63;
t64 = t349 * t128 + t345 * t129;
t590 = -t349 * t235 + t64;
t488 = t383 * t337;
t588 = t359 - t488;
t401 = t104 * t381 + t183 * t461;
t497 = t123 * t383;
t587 = t401 - t497;
t484 = t196 * t337;
t586 = -t408 - t484;
t487 = t196 ^ 2;
t489 = t383 ^ 2;
t585 = -t487 + t489;
t584 = t596 * pkin(5);
t583 = pkin(5) * t383 + pkin(10) * t562;
t55 = -pkin(10) * t176 + t60;
t439 = t533 * t55;
t54 = -pkin(10) * t178 + t59;
t45 = pkin(5) * t557 + t54;
t18 = t344 * t45 + t439;
t409 = -t534 * t112 + t346 * t117 + t165 * t452 + t173 * t428;
t519 = t335 * pkin(4);
t41 = t409 - t519;
t29 = -pkin(5) * t388 + t41;
t338 = qJ(2) + pkin(11);
t329 = qJ(4) + t338;
t320 = cos(t329);
t341 = qJ(5) + qJ(6);
t330 = sin(t341);
t319 = sin(t329);
t348 = sin(qJ(1));
t351 = cos(qJ(1));
t398 = g(1) * t351 + g(2) * t348;
t386 = t398 * t319;
t524 = g(3) * t330;
t113 = t165 * t534 - t346 * t173;
t100 = -t337 * pkin(4) - t113;
t86 = t176 * pkin(5) + t100;
t582 = -t18 * t383 + t29 * t278 + t320 * t524 - t330 * t386 - t460 * t86;
t508 = t344 * t55;
t17 = t45 * t533 - t508;
t331 = cos(t341);
t523 = g(3) * t331;
t476 = t319 * t351;
t477 = t319 * t348;
t559 = g(1) * t476 + g(2) * t477;
t581 = t17 * t383 - t29 * t381 - t320 * t523 + t331 * t559 - t461 * t86;
t580 = -t123 * t461 - t37 * t381;
t77 = t80 * t345;
t578 = t178 * t597 - t77;
t577 = -t36 * t278 - t382 * t460;
t495 = t382 * t383;
t575 = t495 - t600;
t490 = t178 * t383;
t98 = t345 * t108;
t574 = t557 * t597 + t490 + t98;
t8 = pkin(5) * t108 + pkin(10) * t80 + t12;
t11 = -t101 * t451 + t119 * t450 + t345 * t52 + t349 * t40;
t9 = pkin(10) * t388 + t11;
t3 = t344 * t8 + t426 * t45 - t55 * t449 + t533 * t9;
t4 = -qJD(6) * t18 - t344 * t9 + t533 * t8;
t310 = g(3) * t319;
t473 = t320 * t351;
t474 = t320 * t348;
t436 = g(1) * t473 + g(2) * t474 + t310;
t573 = t17 * t460 + t18 * t461 - t4 * t278 + t3 * t381 - t436;
t571 = t11 - t510;
t253 = t346 * t321 + t534 * t532;
t250 = pkin(9) + t253;
t517 = -pkin(10) - t250;
t419 = qJD(5) * t517;
t570 = t345 * t419 - t590 + t592;
t569 = t349 * t419 + t583 + t591;
t352 = -pkin(10) - pkin(9);
t434 = qJD(5) * t352;
t68 = t349 * t113 + t345 * t144;
t568 = t345 * t434 + t592 - t68;
t67 = -t113 * t345 + t349 * t144;
t567 = t349 * t434 + t583 - t67;
t566 = t100 * t196;
t496 = t123 * t382;
t493 = t176 * t383;
t565 = t183 * t383;
t564 = t557 * t383;
t481 = t196 * t383;
t556 = -t123 ^ 2 + t382 ^ 2;
t555 = t123 * t183 - t36;
t470 = t331 * t348;
t471 = t330 * t351;
t225 = -t320 * t470 + t471;
t469 = t331 * t351;
t472 = t330 * t348;
t227 = t320 * t469 + t472;
t554 = g(1) * t227 - g(2) * t225 + t86 * t123 + t319 * t523 - t3;
t551 = t100 * t451 + t349 * t559 + t59 * t383;
t522 = g(3) * t345;
t550 = t100 * t450 + t320 * t522 + t41 * t345 - t383 * t60;
t549 = -t196 * t214 + t410 + t436;
t525 = g(3) * t320;
t548 = t214 * t383 - t409 - t525 + t559;
t215 = t499 * t298 + t299 * t342;
t186 = -pkin(8) * t271 + t215;
t216 = t342 * t298 - t499 * t299;
t378 = t342 * t347 - t417;
t187 = -pkin(8) * t378 + t216;
t140 = t346 * t186 + t187 * t534;
t133 = t349 * t140;
t367 = t534 * t378;
t207 = t271 * t346 + t367;
t373 = t346 * t378;
t208 = t271 * t534 - t373;
t231 = pkin(3) * t378 - t324;
t134 = t207 * pkin(4) - t208 * pkin(9) + t231;
t72 = t345 * t134 + t133;
t458 = t253 * qJD(4) - t179 * t346 + t534 * t387;
t518 = t349 * pkin(5);
t323 = pkin(4) + t518;
t544 = -t319 * t352 + t320 * t323;
t543 = t320 * pkin(4) + t319 * pkin(9);
t542 = -g(1) * t348 + g(2) * t351;
t462 = t349 * t351;
t466 = t345 * t348;
t244 = t320 * t466 + t462;
t464 = t348 * t349;
t465 = t345 * t351;
t246 = -t320 * t465 + t464;
t540 = -g(1) * t246 + g(2) * t244;
t224 = t320 * t472 + t469;
t226 = -t320 * t471 + t470;
t537 = -g(1) * t226 + g(2) * t224 + t319 * t524 - t86 * t382 + t4;
t536 = t183 * t382 - t37;
t535 = t539 ^ 2;
t353 = qJD(2) ^ 2;
t328 = cos(t338);
t456 = pkin(3) * t328 + t333;
t280 = pkin(1) + t456;
t265 = t351 * t280;
t526 = g(2) * t265;
t521 = g(3) * t350;
t217 = t517 * t345;
t332 = t349 * pkin(10);
t218 = t250 * t349 + t332;
t157 = t217 * t533 - t344 * t218;
t514 = qJD(6) * t157 + t344 * t569 + t533 * t570;
t158 = t344 * t217 + t218 * t533;
t513 = -qJD(6) * t158 - t344 * t570 + t533 * t569;
t10 = t11 * t349;
t301 = t352 * t345;
t302 = pkin(9) * t349 + t332;
t220 = t301 * t533 - t344 * t302;
t506 = qJD(6) * t220 + t344 * t567 + t533 * t568;
t221 = t344 * t301 + t302 * t533;
t505 = -qJD(6) * t221 - t344 * t568 + t533 * t567;
t502 = t458 + t584;
t498 = pkin(7) * qJDD(1);
t371 = qJD(2) * t271;
t150 = t271 * t452 + t337 * t367 + t346 * t371;
t494 = t150 * t349;
t492 = t176 * t345;
t491 = t178 * t176;
t480 = t208 * t345;
t479 = t208 * t349;
t478 = t539 * t258;
t99 = t349 * t108;
t185 = t499 * t254 + t342 * t255;
t459 = t235 - t128;
t339 = t347 ^ 2;
t340 = t350 ^ 2;
t455 = t339 - t340;
t454 = t339 + t340;
t445 = t350 * qJDD(1);
t326 = t347 * t511;
t442 = qJD(5) * pkin(9) * t557;
t354 = qJD(1) ^ 2;
t438 = t347 * t354 * t350;
t430 = t208 * t451;
t429 = -t41 - t525;
t336 = -pkin(8) + t343;
t424 = pkin(5) * t345 - t336;
t159 = -pkin(8) * t371 + t185;
t184 = -t342 * t254 + t499 * t255;
t372 = qJD(2) * t378;
t358 = pkin(8) * t372 + t184;
t65 = t159 * t534 + t186 * t428 - t187 * t452 + t346 * t358;
t151 = -qJD(4) * t373 + t271 * t428 - t346 * t372 + t371 * t534;
t223 = pkin(3) * t371 + t326;
t83 = t151 * pkin(4) + t150 * pkin(9) + t223;
t421 = -t345 * t65 + t349 * t83;
t71 = t349 * t134 - t140 * t345;
t139 = -t534 * t186 + t187 * t346;
t411 = t10 - t436;
t407 = t350 * t425;
t406 = -pkin(4) * t477 + pkin(9) * t474;
t405 = -pkin(4) * t476 + pkin(9) * t473;
t404 = -t114 + t584;
t403 = -g(1) * t477 + g(2) * t476;
t396 = -pkin(9) * t108 - t566;
t394 = t345 * t60 + t349 * t59;
t393 = t345 * t59 - t349 * t60;
t392 = -t108 * t250 - t566;
t390 = t319 * t323 + t320 * t352;
t249 = -pkin(4) - t252;
t389 = -t557 * t596 + t99;
t57 = pkin(5) * t207 - pkin(10) * t479 + t71;
t61 = -pkin(10) * t480 + t72;
t30 = -t344 * t61 + t533 * t57;
t31 = t344 * t57 + t533 * t61;
t384 = -0.2e1 * pkin(1) * t447 - pkin(7) * qJDD(2);
t380 = -t150 * t345 + t208 * t450;
t379 = -t430 - t494;
t19 = t134 * t450 - t140 * t451 + t345 * t83 + t349 * t65;
t377 = t390 * t348;
t376 = t390 * t351;
t79 = t388 * t349;
t369 = qJD(5) * t178 + t388;
t366 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t353 - t542;
t365 = pkin(1) * t354 + t398 - t498;
t362 = t248 + t542;
t360 = -qJD(5) * t394 - t12 * t345 + t10;
t66 = qJD(4) * t140 + t346 * t159 - t534 * t358;
t327 = sin(t338);
t288 = -pkin(2) * t347 - pkin(3) * t327;
t270 = t351 * t288;
t269 = t348 * t288;
t256 = t258 ^ 2;
t247 = t320 * t462 + t466;
t245 = -t320 * t464 + t465;
t228 = t249 - t518;
t147 = t381 * t208;
t146 = t278 * t208;
t95 = pkin(5) * t480 + t139;
t47 = -t150 * t432 - t344 * t430 - t449 * t480 + (-t150 * t344 + t208 * t541) * t349;
t46 = t150 * t381 + t208 * t213;
t44 = pkin(5) * t380 + t66;
t22 = t533 * t54 - t508;
t21 = -t344 * t54 - t439;
t20 = -qJD(5) * t72 + t421;
t14 = -pkin(10) * t380 + t19;
t13 = pkin(10) * t494 + pkin(5) * t151 + (-t133 + (pkin(10) * t208 - t134) * t345) * qJD(5) + t421;
t6 = -qJD(6) * t31 + t13 * t533 - t344 * t14;
t5 = qJD(6) * t30 + t344 * t13 + t14 * t533;
t1 = [0, 0, 0, 0, 0, qJDD(1), -t542, t398, 0, 0, qJDD(1) * t339 + 0.2e1 * t407, 0.2e1 * t347 * t445 - 0.2e1 * t447 * t455, qJDD(2) * t347 + t350 * t353, qJDD(1) * t340 - 0.2e1 * t407, qJDD(2) * t350 - t347 * t353, 0, t347 * t384 + t350 * t366, -t347 * t366 + t350 * t384, 0.2e1 * t454 * t498 - t398, -g(1) * (-pkin(1) * t348 + pkin(7) * t351) - g(2) * (pkin(1) * t351 + pkin(7) * t348) + (pkin(7) ^ 2 * t454 + pkin(1) ^ 2) * qJDD(1), t206 * t271 - t372 * t539, -t271 * t205 - t206 * t378 - t258 * t372 - t371 * t539, t271 * qJDD(2) - t353 * t378, t205 * t378 - t258 * t371, -qJDD(2) * t378 - t271 * t353, 0, t215 * qJDD(2) - t324 * t205 + t248 * t378 - t258 * t326 - t542 * t328 + (t271 * t289 + t184) * qJD(2), -t185 * qJD(2) - t216 * qJDD(2) - t324 * t206 + t248 * t271 - t289 * t372 + t326 * t539 + t327 * t542, -t148 * t271 - t184 * t539 + t185 * t258 - t204 * t371 - t216 * t205 - t215 * t206 - t398 + (qJD(2) * t203 - t149) * t378, t149 * t216 + t204 * t185 + t148 * t215 + t203 * t184 - t248 * t324 + t289 * t326 - g(1) * (-t324 * t348 - t343 * t351) - g(2) * (t324 * t351 - t343 * t348) t150 * t383 - t208 * t408, -t150 * t196 + t151 * t383 + t207 * t408 + t208 * t359, -t150 * t337 + t208 * t335, -t151 * t196 - t207 * t359, -t151 * t337 - t207 * t335, 0, -t139 * t335 + t151 * t214 + t169 * t207 - t196 * t223 - t231 * t359 - t320 * t542 - t337 * t66, -t140 * t335 - t214 * t150 + t169 * t208 - t223 * t383 - t231 * t408 - t65 * t337 + t403, t113 * t150 - t114 * t151 - t139 * t408 + t140 * t359 + t196 * t65 + t207 * t410 + t208 * t409 - t383 * t66 - t398, -t410 * t140 + t114 * t65 + t409 * t139 - t113 * t66 + t169 * t231 + t214 * t223 - g(1) * (-t280 * t348 - t336 * t351) - g(2) * (-t336 * t348 + t265) t178 * t379 - t479 * t80 (t176 * t349 + t178 * t345) * t150 + (t79 + t77 + (-t178 * t349 + t492) * qJD(5)) * t208, t151 * t178 - t207 * t80 + t208 * t99 + t379 * t557, t176 * t380 - t208 * t74, -t176 * t151 + t207 * t388 - t208 * t98 - t380 * t557, t108 * t207 + t151 * t557, -g(1) * t245 - g(2) * t247 + t100 * t380 + t71 * t108 + t12 * t207 - t139 * t388 + t59 * t151 + t66 * t176 + t20 * t557 + t41 * t480, -g(1) * t244 - g(2) * t246 + t100 * t379 - t108 * t72 - t11 * t207 - t139 * t80 - t151 * t60 + t178 * t66 - t19 * t557 + t41 * t479, -t19 * t176 + t72 * t388 - t20 * t178 + t71 * t80 + t394 * t150 + (qJD(5) * t393 - t11 * t345 - t12 * t349) * t208 - t403, -t526 + t100 * t66 + t11 * t72 + t12 * t71 + t41 * t139 + t60 * t19 + t59 * t20 + (g(1) * t336 - g(2) * t543) * t351 + (-g(1) * (-t280 - t543) + g(2) * t336) * t348, -t147 * t36 - t382 * t46, t123 * t46 + t146 * t36 - t147 * t37 - t382 * t47, t104 * t147 + t151 * t382 - t183 * t46 - t207 * t36, t123 * t47 + t146 * t37, -t104 * t146 - t123 * t151 - t183 * t47 - t207 * t37, t104 * t207 + t151 * t183, -g(1) * t225 - g(2) * t227 + t104 * t30 + t123 * t44 + t146 * t29 + t151 * t17 + t183 * t6 + t207 * t4 + t37 * t95 + t47 * t86, -g(1) * t224 - g(2) * t226 - t104 * t31 + t147 * t29 - t151 * t18 - t183 * t5 - t207 * t3 - t36 * t95 + t382 * t44 - t46 * t86, -t123 * t5 - t146 * t3 - t147 * t4 + t17 * t46 - t18 * t47 + t30 * t36 - t31 * t37 - t382 * t6 - t403, -t526 + t17 * t6 + t18 * t5 + t29 * t95 + t3 * t31 + t4 * t30 + t86 * t44 + (-g(1) * t424 - g(2) * t544) * t351 + (-g(1) * (-t280 - t544) - g(2) * t424) * t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t455 * t354, t446, t438, t445, qJDD(2), t347 * t365 - t521, g(3) * t347 + t350 * t365, 0, 0, -t478, -t256 + t535 (t400 - t258) * qJD(2) + t364, t478, -t395, qJDD(2), -g(3) * t328 - t210 * qJD(2) - t289 * t539 + t398 * t327 + (qJDD(2) * t499 + t258 * t453) * pkin(2) + t148, g(3) * t327 + qJD(2) * t211 - t258 * t289 + t398 * t328 + (-qJDD(2) * t342 - t453 * t539) * pkin(2) - t149 (t204 + t210) * t539 + (t203 - t211) * t258 + (-t205 * t342 - t206 * t499) * pkin(2), -t203 * t210 - t204 * t211 + (t499 * t148 - t521 + t149 * t342 + (-qJD(1) * t289 + t398) * t347) * pkin(2), t481, t585, t586, -t481, t588, t335, t196 * t222 + t252 * t335 - t337 * t458 + t548, t222 * t383 - t253 * t335 - t337 * t459 + t549, t253 * t359 + t252 * t408 + (-t114 - t458) * t383 + (t113 + t459) * t196, -g(3) * t456 - t113 * t458 + t114 * t459 - t214 * t222 - t252 * t409 - t253 * t410 - t288 * t398, t578, t595, t574, t176 * t589 + t79, t389 - t493, t564, t249 * t437 + (-t249 * t335 + t429) * t349 + t392 * t345 + t458 * t176 + (-t250 * t450 + t591) * t557 + t551, -t249 * t80 + t392 * t349 - t345 * t386 + t458 * t178 + (t250 * t451 + t590) * t557 + t550, t64 * t176 + t63 * t178 + (-t235 * t176 + t250 * t369 - t510) * t349 + (t235 * t178 + t60 * t196 - t250 * t80 - t12 + (t176 * t250 - t60) * qJD(5)) * t345 + t411, t41 * t249 - t60 * t64 - t59 * t63 - g(1) * (t270 + t405) - g(2) * (t269 + t406) - g(3) * (t456 + t543) - t393 * t235 + t458 * t100 + t360 * t250, t577, t593, t575, t580, t587, t565, t104 * t157 + t123 * t502 + t183 * t513 + t228 * t37 + t581, -t104 * t158 - t183 * t514 - t228 * t36 + t382 * t502 + t582, -t123 * t514 + t157 * t36 - t158 * t37 - t382 * t513 + t573, t3 * t158 + t4 * t157 + t29 * t228 - g(1) * (t270 - t376) - g(2) * (t269 - t377) - g(3) * (t544 + t456) + t502 * t86 + t514 * t18 + t513 * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395 + 0.2e1 * t558 (t400 + t258) * qJD(2) + t364, -t256 - t535, t203 * t539 - t204 * t258 + t362, 0, 0, 0, 0, 0, 0, -t359 - t488, -t408 + t484, -t487 - t489, -t113 * t383 - t114 * t196 + t362 + t520, 0, 0, 0, 0, 0, 0, t389 + t493, -t349 * t557 ^ 2 + t490 - t98 (t176 * t196 + t80) * t349 + t545 + t501, t100 * t383 + t571 * t345 + t349 * t594 + t542, 0, 0, 0, 0, 0, 0, t401 + t497, t495 + t600, t402 - t601, t17 * t461 - t18 * t460 + t278 * t3 + t381 * t4 + t383 * t86 + t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t481, t585, t586, -t481, t588, t335, t114 * t337 + t548, t113 * t337 + t549, 0, 0, t578, t595, t574, t492 * t557 + t79, -t557 * t589 - t493 + t99, t564, -pkin(4) * t437 - t67 * t557 - t114 * t176 + t396 * t345 + (t429 - t442 + t519) * t349 + t551, pkin(4) * t80 - t114 * t178 + t557 * t68 + t396 * t349 + (-t386 + t442) * t345 + t550, t68 * t176 + t67 * t178 + (pkin(9) * t369 - t510) * t349 + ((qJD(5) * t176 - t80) * pkin(9) - t594) * t345 + t411, -t41 * pkin(4) + pkin(9) * t360 - g(1) * t405 - g(2) * t406 - g(3) * t543 - t100 * t114 - t59 * t67 - t60 * t68, t577, t593, t575, t580, t587, t565, t104 * t220 + t123 * t404 + t183 * t505 - t323 * t37 + t581, -t104 * t221 - t183 * t506 + t323 * t36 + t382 * t404 + t582, -t123 * t506 + t220 * t36 - t221 * t37 - t382 * t505 + t573, g(1) * t376 + g(2) * t377 - g(3) * t544 + t17 * t505 + t18 * t506 + t4 * t220 + t3 * t221 - t29 * t323 + t404 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, -t176 ^ 2 + t178 ^ 2, t176 * t557 - t80, -t491, t178 * t557 + t388, t108, -t101 * t450 - t100 * t178 + t509 + t50 + (-qJD(5) * t119 + t310 - t40) * t345 + t540, g(1) * t247 - g(2) * t245 + t100 * t176 + t310 * t349 - t571, 0, 0, t496, t556, t555, -t496, t536, t104, -t21 * t183 + (t104 * t533 - t123 * t178 - t183 * t449) * pkin(5) + t537, t22 * t183 + (-t104 * t344 - t178 * t382 - t183 * t426) * pkin(5) + t554, t18 * t382 + t22 * t123 - t17 * t123 + t21 * t382 + (t533 * t36 - t344 * t37 + (-t123 * t533 + t344 * t382) * qJD(6)) * pkin(5), -t17 * t21 - t18 * t22 + (t3 * t344 + t4 * t533 - t86 * t178 + t319 * t522 + (-t17 * t344 + t18 * t533) * qJD(6) + t540) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496, t556, t555, -t496, t536, t104, t18 * t183 + t537, t17 * t183 + t554, 0, 0;];
tau_reg  = t1;
