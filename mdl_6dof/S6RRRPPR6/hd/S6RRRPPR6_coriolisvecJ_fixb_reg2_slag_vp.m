% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:53:55
% EndTime: 2019-03-09 15:54:22
% DurationCPUTime: 11.90s
% Computational Cost: add. (16991->634), mult. (45022->845), div. (0->0), fcn. (35536->10), ass. (0->286)
t248 = sin(qJ(3));
t244 = sin(pkin(6));
t252 = cos(qJ(2));
t337 = qJD(1) * t252;
t319 = t244 * t337;
t294 = t248 * t319;
t331 = qJD(3) * t248;
t422 = -t294 + t331;
t249 = sin(qJ(2));
t339 = qJD(1) * t244;
t320 = t249 * t339;
t246 = cos(pkin(6));
t338 = qJD(1) * t246;
t323 = pkin(1) * t338;
t193 = -pkin(8) * t320 + t252 * t323;
t271 = t244 * (pkin(2) * t249 - pkin(9) * t252);
t194 = qJD(1) * t271;
t251 = cos(qJ(3));
t137 = -t248 * t193 + t251 * t194;
t389 = -qJ(4) - pkin(9);
t314 = qJD(3) * t389;
t345 = t251 * t252;
t421 = (pkin(3) * t249 - qJ(4) * t345) * t339 + t137 + t248 * qJD(4) - t251 * t314;
t138 = t251 * t193 + t248 * t194;
t420 = qJ(4) * t294 + t251 * qJD(4) + t248 * t314 - t138;
t243 = sin(pkin(11));
t245 = cos(pkin(11));
t330 = qJD(3) * t251;
t347 = t245 * t251;
t341 = t422 * t243 - t245 * t330 + t319 * t347;
t227 = t249 * t323;
t196 = pkin(8) * t319 + t227;
t290 = t422 * pkin(3) - t196;
t208 = t243 * t251 + t245 * t248;
t159 = t208 * t319;
t201 = t208 * qJD(3);
t342 = t159 - t201;
t374 = t420 * t243 + t245 * t421;
t419 = qJ(5) * t341 - t208 * qJD(5) + t290;
t325 = qJD(1) * qJD(2);
t315 = t252 * t325;
t291 = t244 * t315;
t299 = qJD(2) + t338;
t176 = t248 * t320 - t251 * t299;
t418 = qJD(3) * t176;
t149 = -t251 * t291 + t418;
t178 = t248 * t299 + t251 * t320;
t332 = qJD(3) * t178;
t150 = t248 * t291 + t332;
t278 = t149 * t245 + t150 * t243;
t128 = t245 * t176 + t178 * t243;
t221 = -qJD(3) + t319;
t360 = t128 * t221;
t261 = -t278 - t360;
t417 = pkin(5) * t128;
t391 = pkin(4) + pkin(10);
t416 = t342 * t391 - t419;
t349 = t244 * t249;
t297 = t391 * t349;
t415 = t341 * pkin(5) - qJD(1) * t297 - t374;
t372 = -t243 * t421 + t420 * t245;
t247 = sin(qJ(6));
t277 = -t176 * t243 + t245 * t178;
t397 = qJD(6) + t277;
t308 = t247 * t397;
t250 = cos(qJ(6));
t93 = t250 * t278;
t414 = -t397 * t308 - t93;
t102 = -t250 * t128 - t221 * t247;
t306 = t397 * t102;
t334 = qJD(2) * t249;
t318 = t244 * t334;
t224 = qJD(1) * t318;
t310 = t149 * t243 - t245 * t150;
t328 = qJD(6) * t250;
t329 = qJD(6) * t247;
t54 = -t128 * t328 - t221 * t329 - t250 * t224 + t247 * t310;
t409 = -t54 + t306;
t104 = t128 * t247 - t221 * t250;
t398 = t397 * t250;
t413 = t104 * t398;
t412 = t128 * t277;
t187 = pkin(8) * t291 + qJD(2) * t227;
t114 = t150 * pkin(3) + t187;
t259 = qJ(5) * t278 - qJD(5) * t277 + t114;
t20 = -t310 * t391 + t259;
t165 = pkin(9) * t299 + t196;
t191 = (-pkin(2) * t252 - pkin(9) * t249 - pkin(1)) * t244;
t172 = qJD(1) * t191;
t117 = -t165 * t248 + t251 * t172;
t94 = -qJ(4) * t178 + t117;
t84 = -pkin(3) * t221 + t94;
t118 = t165 * t251 + t172 * t248;
t95 = -qJ(4) * t176 + t118;
t88 = t243 * t95;
t44 = t245 * t84 - t88;
t289 = qJD(5) - t44;
t405 = pkin(5) * t277;
t29 = t221 * t391 + t289 + t405;
t164 = -pkin(2) * t299 - t193;
t126 = t176 * pkin(3) + qJD(4) + t164;
t254 = -qJ(5) * t277 + t126;
t36 = t128 * t391 + t254;
t6 = t247 * t29 + t250 * t36;
t281 = qJD(2) * t297;
t195 = qJD(2) * t271;
t185 = qJD(1) * t195;
t229 = pkin(8) * t349;
t346 = t246 * t252;
t205 = pkin(1) * t346 - t229;
t197 = t205 * qJD(2);
t186 = qJD(1) * t197;
t79 = -qJD(3) * t118 + t251 * t185 - t248 * t186;
t46 = pkin(3) * t224 + t149 * qJ(4) - t178 * qJD(4) + t79;
t78 = -t165 * t331 + t172 * t330 + t248 * t185 + t251 * t186;
t52 = -qJ(4) * t150 - qJD(4) * t176 + t78;
t386 = t243 * t52 - t245 * t46;
t9 = -pkin(5) * t278 - qJD(1) * t281 + t386;
t2 = -qJD(6) * t6 - t247 * t20 + t250 * t9;
t411 = t397 * t6 + t2;
t283 = t247 * t36 - t250 * t29;
t1 = -qJD(6) * t283 + t250 * t20 + t247 * t9;
t410 = t283 * t397 + t1;
t204 = t246 * t248 + t251 * t349;
t348 = t244 * t252;
t317 = qJD(2) * t348;
t155 = qJD(3) * t204 + t248 * t317;
t203 = -t246 * t251 + t248 * t349;
t156 = -qJD(3) * t203 + t251 * t317;
t108 = t245 * t155 + t156 * t243;
t145 = t245 * t203 + t204 * t243;
t408 = -t221 * t108 + t244 * ((qJD(1) * t145 + t128) * t334 + t252 * t310);
t109 = -t155 * t243 + t156 * t245;
t146 = -t203 * t243 + t204 * t245;
t407 = -t109 * t221 + t244 * ((qJD(1) * t146 + t277) * t334 + t252 * t278);
t365 = t277 ^ 2;
t240 = t244 ^ 2;
t406 = -0.2e1 * t240 * t325;
t58 = t128 * pkin(4) + t254;
t404 = t58 * t277;
t373 = qJ(5) * t320 - t372;
t75 = t278 * t146;
t403 = t109 * t277 - t75;
t402 = t117 * t221 + t78;
t401 = t118 * t221 - t79;
t83 = t278 * t208;
t400 = -t341 * t277 - t83;
t51 = t245 * t94 - t88;
t344 = -qJD(5) + t51;
t206 = t246 * t249 * pkin(1) + pkin(8) * t348;
t190 = pkin(9) * t246 + t206;
t135 = t251 * t190 + t248 * t191;
t86 = -qJD(3) * t135 + t251 * t195 - t248 * t197;
t62 = pkin(3) * t318 - t156 * qJ(4) - t204 * qJD(4) + t86;
t85 = -t190 * t331 + t191 * t330 + t248 * t195 + t251 * t197;
t67 = -qJ(4) * t155 - qJD(4) * t203 + t85;
t24 = t243 * t62 + t245 * t67;
t21 = -t244 * (qJ(5) * t334 - qJD(5) * t252) - t24;
t237 = -pkin(3) * t245 - pkin(4);
t233 = -pkin(10) + t237;
t384 = t245 * t95;
t45 = t243 * t84 + t384;
t39 = qJ(5) * t221 - t45;
t30 = -t39 - t417;
t396 = -t233 * t278 + t30 * t397;
t393 = t221 * t341 + (qJD(2) * t208 - t277) * t320;
t207 = t243 * t248 - t347;
t392 = t221 * t342 + (qJD(2) * t207 - t128) * t320;
t253 = qJD(1) ^ 2;
t390 = pkin(1) * t252;
t238 = -t251 * pkin(3) - pkin(2);
t273 = -t208 * qJ(5) + t238;
t132 = t207 * t391 + t273;
t222 = t389 * t248;
t223 = t389 * t251;
t162 = -t245 * t222 - t223 * t243;
t141 = pkin(5) * t208 + t162;
t81 = t132 * t250 + t141 * t247;
t388 = qJD(6) * t81 - t247 * t416 + t250 * t415;
t80 = -t132 * t247 + t141 * t250;
t387 = -qJD(6) * t80 + t247 * t415 + t250 * t416;
t19 = t243 * t46 + t245 * t52;
t383 = t247 * t278;
t382 = t250 * t54;
t50 = t243 * t94 + t384;
t379 = t50 * t277;
t265 = t224 * t247 + t250 * t310;
t55 = qJD(6) * t104 + t265;
t378 = t55 * t247;
t134 = -t190 * t248 + t251 * t191;
t100 = -pkin(3) * t348 - qJ(4) * t204 + t134;
t110 = -qJ(4) * t203 + t135;
t66 = t243 * t100 + t245 * t110;
t377 = pkin(5) * t342 - t373;
t376 = -pkin(4) * t342 + t419;
t375 = pkin(4) * t320 + t374;
t371 = t104 * t102;
t370 = t104 * t128;
t364 = t277 * t221;
t362 = t128 ^ 2;
t361 = t128 * t102;
t358 = t176 * t221;
t357 = t178 * t176;
t356 = t178 * t221;
t355 = t207 * t247;
t354 = t207 * t250;
t352 = t221 * t248;
t351 = t221 * t251;
t350 = t240 * t253;
t343 = -t344 + t405;
t340 = t249 ^ 2 - t252 ^ 2;
t336 = qJD(2) * t162;
t163 = t222 * t243 - t223 * t245;
t335 = qJD(2) * t163;
t333 = qJD(2) * t251;
t322 = t249 * t350;
t321 = t250 * t348;
t23 = -t243 * t67 + t245 * t62;
t65 = t100 * t245 - t243 * t110;
t143 = -t250 * t159 + t247 * t320;
t312 = t201 * t250 + t143;
t144 = t159 * t247 + t250 * t320;
t311 = -t201 * t247 + t144;
t309 = t397 ^ 2;
t304 = qJ(5) * t224 - qJD(5) * t221 + t19;
t298 = qJD(2) + 0.2e1 * t338;
t296 = t252 * t322;
t293 = t221 * t320;
t292 = -t50 * t221 - t386;
t288 = pkin(1) * t406;
t287 = t247 * t283 + t250 * t6;
t61 = pkin(4) * t348 - t65;
t285 = t178 * pkin(3) + qJ(5) * t128;
t284 = -t162 * t278 + t163 * t310;
t37 = pkin(5) * t146 + pkin(10) * t348 + t61;
t189 = t229 + (-pkin(2) - t390) * t246;
t148 = t203 * pkin(3) + t189;
t257 = -t146 * qJ(5) + t148;
t57 = t145 * t391 + t257;
t15 = -t247 * t57 + t250 * t37;
t16 = t247 * t37 + t250 * t57;
t282 = t108 * t128 - t145 * t310;
t280 = -t362 - t365;
t279 = -t362 + t365;
t276 = t240 * t249 * t315;
t60 = qJ(5) * t348 - t66;
t123 = t145 * t250 + t247 * t348;
t270 = -t310 + t364;
t269 = t310 + t364;
t266 = -t128 * t342 - t207 * t310;
t264 = t207 * t329 - t312;
t263 = t207 * t328 - t311;
t17 = -pkin(4) * t224 + t386;
t262 = -t397 * t398 + t383;
t260 = t278 - t360;
t198 = t206 * qJD(2);
t258 = -t108 * t277 - t109 * t128 + t145 * t278 + t146 * t310;
t133 = t155 * pkin(3) + t198;
t28 = -pkin(4) * t310 + t259;
t256 = t128 * t341 + t207 * t278 + t208 * t310 + t277 * t342;
t255 = -t109 * qJ(5) - t146 * qJD(5) + t133;
t234 = pkin(3) * t243 + qJ(5);
t154 = (-t221 * t244 - t240 * t337) * t334;
t151 = pkin(4) * t207 + t273;
t142 = -pkin(5) * t207 + t163;
t124 = -t247 * t145 + t321;
t76 = t145 * pkin(4) + t257;
t72 = pkin(4) * t277 + t285;
t69 = qJD(6) * t123 + t247 * t108 + t250 * t318;
t68 = -t250 * t108 - qJD(6) * t321 + (qJD(6) * t145 + t318) * t247;
t53 = t250 * t55;
t43 = t277 * t391 + t285;
t40 = -pkin(5) * t145 - t60;
t38 = pkin(4) * t221 + t289;
t34 = t50 - t417;
t33 = t108 * pkin(4) + t255;
t27 = t108 * t391 + t255;
t22 = -pkin(4) * t318 - t23;
t13 = -t108 * pkin(5) - t21;
t12 = t109 * pkin(5) - t23 - t281;
t11 = t247 * t34 + t250 * t43;
t10 = -t247 * t43 + t250 * t34;
t8 = pkin(5) * t310 + t304;
t4 = -qJD(6) * t16 + t250 * t12 - t247 * t27;
t3 = qJD(6) * t15 + t247 * t12 + t250 * t27;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t276, t340 * t406, t298 * t317, -0.2e1 * t276, -t298 * t318, 0, -t187 * t246 - t198 * t299 + t249 * t288, -t186 * t246 - t197 * t299 + t252 * t288 (t186 * t252 + t187 * t249 + (-t193 * t252 - t196 * t249) * qJD(2) + (t197 * t252 + t198 * t249 + (-t205 * t252 - t206 * t249) * qJD(2)) * qJD(1)) * t244, t186 * t206 - t187 * t205 - t193 * t198 + t196 * t197, -t149 * t204 + t156 * t178, t149 * t203 - t150 * t204 - t155 * t178 - t156 * t176, -t156 * t221 + (t149 * t252 + (qJD(1) * t204 + t178) * t334) * t244, t150 * t203 + t155 * t176, t155 * t221 + (t150 * t252 + (-qJD(1) * t203 - t176) * t334) * t244, t154, t189 * t150 + t164 * t155 + t198 * t176 + t187 * t203 - t86 * t221 + (-t252 * t79 + (qJD(1) * t134 + t117) * t334) * t244, -t189 * t149 + t164 * t156 + t198 * t178 + t187 * t204 + t85 * t221 + (t252 * t78 + (-qJD(1) * t135 - t118) * t334) * t244, -t117 * t156 - t118 * t155 + t134 * t149 - t135 * t150 - t176 * t85 - t178 * t86 - t203 * t78 - t204 * t79, t117 * t86 + t118 * t85 + t134 * t79 + t135 * t78 + t164 * t198 + t187 * t189, t403, t258, t407, t282, -t408, t154, t126 * t108 + t114 * t145 + t133 * t128 - t148 * t310 - t23 * t221 + (t386 * t252 + (qJD(1) * t65 + t44) * t334) * t244, t126 * t109 + t114 * t146 + t133 * t277 - t148 * t278 + t24 * t221 + (t19 * t252 + (-qJD(1) * t66 - t45) * t334) * t244, -t108 * t45 - t109 * t44 - t128 * t24 - t145 * t19 + t146 * t386 - t23 * t277 + t278 * t65 + t310 * t66, t114 * t148 + t126 * t133 + t19 * t66 + t23 * t44 + t24 * t45 - t386 * t65, t154, -t407, t408, t403, t258, t282, t108 * t39 + t109 * t38 + t128 * t21 - t145 * t304 + t146 * t17 + t22 * t277 - t278 * t61 - t310 * t60, -t58 * t108 - t33 * t128 - t28 * t145 - t22 * t221 + t76 * t310 + (-t17 * t252 + (qJD(1) * t61 + t38) * t334) * t244, -t58 * t109 - t33 * t277 - t28 * t146 + t21 * t221 + t76 * t278 + (-t304 * t252 + (-qJD(1) * t60 - t39) * t334) * t244, t17 * t61 + t21 * t39 + t22 * t38 + t28 * t76 - t304 * t60 + t33 * t58, t104 * t69 + t124 * t54, -t102 * t69 - t104 * t68 - t123 * t54 + t124 * t55, t104 * t109 + t124 * t278 - t146 * t54 + t397 * t69, t102 * t68 - t123 * t55, -t102 * t109 - t123 * t278 - t146 * t55 - t397 * t68, t109 * t397 - t75, t102 * t13 - t109 * t283 - t123 * t8 + t146 * t2 - t15 * t278 + t30 * t68 + t397 * t4 + t40 * t55, -t1 * t146 + t104 * t13 - t109 * t6 - t124 * t8 + t16 * t278 - t3 * t397 + t30 * t69 - t40 * t54, t1 * t123 - t102 * t3 - t104 * t4 + t124 * t2 + t15 * t54 - t16 * t55 + t283 * t69 - t6 * t68, t1 * t16 + t13 * t30 + t15 * t2 - t283 * t4 + t3 * t6 + t40 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, t340 * t350, -t244 * t253 * t346, t296, t299 * t320 - t224, 0, pkin(1) * t322 + t196 * t299 - t187, pkin(8) * t224 + t193 * t299 + (-t246 * t325 + t350) * t390, 0, 0, -t149 * t248 - t178 * t351 (-t149 + t358) * t251 + (-t150 + t356) * t248, -t221 * t330 + (t221 * t345 + (t248 * qJD(2) - t178) * t249) * t339, -t150 * t251 - t176 * t352, t221 * t331 + (-t252 * t352 + (t176 + t333) * t249) * t339, t293, -pkin(2) * t150 + t137 * t221 - t196 * t176 - t187 * t251 + (pkin(9) * t351 + t164 * t248) * qJD(3) + (-t117 * t249 + (-pkin(9) * t334 - t164 * t252) * t248) * t339, pkin(2) * t149 - t138 * t221 - t196 * t178 + t187 * t248 + (-pkin(9) * t352 + t164 * t251) * qJD(3) + (-t164 * t345 + (-pkin(9) * t333 + t118) * t249) * t339, t137 * t178 + t138 * t176 + ((-t150 + t332) * pkin(9) + t402) * t251 + ((-t149 + t418) * pkin(9) + t401) * t248, -t187 * pkin(2) - t117 * t137 - t118 * t138 - t164 * t196 + (-t79 * t248 + t78 * t251 + (-t117 * t251 - t118 * t248) * qJD(3)) * pkin(9), t400, t256, t393, t266, -t392, t293, t114 * t207 - t238 * t310 + t374 * t221 + t290 * t128 - t342 * t126 + (-t44 - t336) * t320, t114 * t208 - t238 * t278 + t372 * t221 + t290 * t277 - t341 * t126 + (t45 - t335) * t320, -t128 * t372 - t19 * t207 + t208 * t386 + t277 * t374 + t341 * t44 + t342 * t45 + t284, t114 * t238 + t126 * t290 + t162 * t386 + t19 * t163 + t372 * t45 - t374 * t44, t293, -t393, t392, t400, t256, t266, t128 * t373 + t17 * t208 - t207 * t304 + t277 * t375 - t341 * t38 - t342 * t39 + t284, t151 * t310 - t28 * t207 + t342 * t58 - t375 * t221 - t376 * t128 + (-t38 + t336) * t320, t151 * t278 - t28 * t208 + t341 * t58 + t373 * t221 - t376 * t277 + (t39 + t335) * t320, t28 * t151 + t17 * t162 + t163 * t304 + t373 * t39 + t375 * t38 + t376 * t58, t104 * t263 - t355 * t54, t312 * t104 + t311 * t102 + (-t378 - t382 + (-t102 * t250 - t104 * t247) * qJD(6)) * t207, -t104 * t341 - t54 * t208 + t263 * t397 - t278 * t355, t102 * t264 - t354 * t55, t102 * t341 - t55 * t208 - t264 * t397 - t278 * t354, -t341 * t397 - t83, t102 * t377 + t142 * t55 + t2 * t208 + t264 * t30 - t278 * t80 + t283 * t341 - t354 * t8 - t388 * t397, -t1 * t208 + t104 * t377 - t142 * t54 + t263 * t30 + t278 * t81 + t341 * t6 + t355 * t8 + t387 * t397, t6 * t143 - t283 * t144 + t80 * t54 - t81 * t55 + t287 * t201 + t388 * t104 + t387 * t102 + (t1 * t250 - t2 * t247 + (-t247 * t6 + t250 * t283) * qJD(6)) * t207, t1 * t81 + t8 * t142 + t2 * t80 + t283 * t388 + t30 * t377 - t387 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, -t176 ^ 2 + t178 ^ 2, -t149 - t358, -t357, -t356 - t150, t224, -t164 * t178 - t401, t164 * t176 - t402, 0, 0, t412, t279, t261, -t412, -t270, t224, -t126 * t277 + (-t128 * t178 + t224 * t245) * pkin(3) + t292, t126 * t128 - t51 * t221 + (-t178 * t277 - t224 * t243) * pkin(3) - t19, t45 * t277 - t379 + (t243 * t310 + t245 * t278) * pkin(3) + (t51 - t44) * t128, t44 * t50 - t45 * t51 + (-t126 * t178 + t19 * t243 - t245 * t386) * pkin(3), t224, -t261, t270, t412, t279, -t412, t234 * t310 - t237 * t278 - t277 * t39 - t379 + (t344 + t38) * t128, t404 + t72 * t128 + (-pkin(4) + t237) * t224 - t292, -t128 * t58 + t221 * t344 + t224 * t234 + t277 * t72 + t304, t17 * t237 + t234 * t304 + t344 * t39 - t38 * t50 - t58 * t72, -t104 * t308 - t382, -t53 - t413 + (t54 + t306) * t247, t370 + t414, t102 * t398 + t378, t262 - t361, t397 * t128, -t283 * t128 + t234 * t55 + t8 * t247 + (-t233 * t329 - t10) * t397 + t343 * t102 + t396 * t250, -t6 * t128 - t234 * t54 + t8 * t250 + (-t233 * t328 + t11) * t397 + t343 * t104 - t396 * t247, t10 * t104 + t11 * t102 + (-t277 * t6 + t233 * t54 - t2 + (-t102 * t233 - t6) * qJD(6)) * t250 + (-t277 * t283 - t233 * t55 - t1 + (t104 * t233 - t283) * qJD(6)) * t247, t283 * t10 - t6 * t11 + t8 * t234 + t343 * t30 + (qJD(6) * t287 + t1 * t247 + t2 * t250) * t233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, -t260, t280, t128 * t45 + t277 * t44 + t114, 0, 0, 0, 0, 0, 0, t280, t269, t260, -t128 * t39 - t277 * t38 + t28, 0, 0, 0, 0, 0, 0, t262 + t361, t370 - t414, t247 * t409 + t413 - t53, t30 * t128 - t247 * t411 + t250 * t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t224 - t412, -t221 ^ 2 - t365, -t221 * t39 + t17 + t404, 0, 0, 0, 0, 0, 0, t221 * t102 - t247 * t309 - t93, t221 * t104 - t250 * t309 + t383, -t409 * t250 + (t104 * t397 - t55) * t247, t30 * t221 + t247 * t410 + t250 * t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371, -t102 ^ 2 + t104 ^ 2, t409, -t371, -t265 + (-qJD(6) + t397) * t104, -t278, -t30 * t104 + t411, t30 * t102 - t410, 0, 0;];
tauc_reg  = t5;
