% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPPR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:54:03
% EndTime: 2019-03-09 15:54:37
% DurationCPUTime: 20.06s
% Computational Cost: add. (21141->830), mult. (52221->1073), div. (0->0), fcn. (42024->14), ass. (0->383)
t315 = cos(qJ(2));
t307 = sin(pkin(6));
t535 = cos(qJ(3));
t448 = t307 * t535;
t407 = qJD(1) * t448;
t377 = t315 * t407;
t439 = qJD(3) * t535;
t329 = t377 - t439;
t311 = sin(qJ(3));
t470 = qJD(1) * t307;
t443 = t315 * t470;
t411 = t311 * t443;
t467 = qJD(3) * t311;
t572 = t411 - t467;
t265 = -qJD(3) + t443;
t512 = cos(pkin(6));
t429 = t512 * qJD(1);
t408 = pkin(1) * t429;
t312 = sin(qJ(2));
t444 = t312 * t470;
t226 = -pkin(8) * t444 + t315 * t408;
t397 = pkin(2) * t312 - pkin(9) * t315;
t227 = t397 * t470;
t148 = -t311 * t226 + t535 * t227;
t446 = t535 * qJ(4);
t270 = pkin(9) * t535 + t446;
t571 = (pkin(3) * t312 - t315 * t446) * t470 + t148 + qJD(3) * t270 + t311 * qJD(4);
t149 = t535 * t226 + t311 * t227;
t309 = -qJ(4) - pkin(9);
t269 = t309 * t311;
t570 = qJ(4) * t411 + qJD(3) * t269 + qJD(4) * t535 - t149;
t306 = sin(pkin(11));
t308 = cos(pkin(11));
t473 = t572 * t306 - t329 * t308;
t484 = t307 * t312;
t561 = -t311 * t484 + t512 * t535;
t373 = t561 * pkin(3);
t279 = pkin(8) * t443;
t229 = t312 * t408 + t279;
t402 = -t572 * pkin(3) - t229;
t245 = t306 * t535 + t308 * t311;
t476 = t265 * t245;
t515 = t570 * t306 + t308 * t571;
t569 = -qJ(5) * t473 - t245 * qJD(5) + t402;
t421 = t512 * qJDD(1);
t370 = t421 + qJDD(2);
t415 = t312 * t448;
t375 = t429 + qJD(2);
t204 = t311 * t444 - t535 * t375;
t568 = qJD(3) * t204;
t119 = -qJD(2) * t377 - qJDD(1) * t415 - t311 * t370 + t568;
t354 = t311 * t375;
t468 = qJD(2) * t315;
t440 = t311 * t468;
t459 = t312 * qJDD(1);
t120 = qJD(3) * t354 + t307 * (qJD(1) * (t312 * t439 + t440) + t311 * t459) - t535 * t370;
t381 = t119 * t308 + t120 * t306;
t206 = t312 * t407 + t354;
t132 = t308 * t204 + t206 * t306;
t502 = t132 * t265;
t345 = t381 + t502;
t567 = pkin(5) * t132;
t537 = pkin(4) + pkin(10);
t566 = t476 * t537 - t569;
t420 = t537 * t484;
t565 = pkin(5) * t473 + qJD(1) * t420 + t515;
t513 = -t306 * t571 + t570 * t308;
t310 = sin(qJ(6));
t314 = cos(qJ(6));
t102 = -t314 * t132 - t265 * t310;
t378 = -t204 * t306 + t308 * t206;
t546 = qJD(6) + t378;
t422 = t546 * t102;
t461 = qJDD(1) * t315;
t282 = t307 * t461;
t462 = qJD(1) * qJD(2);
t437 = t312 * t462;
t405 = t307 * t437;
t221 = qJDD(3) - t282 + t405;
t428 = t119 * t306 - t308 * t120;
t465 = qJD(6) * t314;
t466 = qJD(6) * t310;
t43 = -t132 * t465 - t314 * t221 - t265 * t466 + t310 * t428;
t558 = -t43 + t422;
t424 = t546 * t310;
t80 = qJDD(6) - t381;
t75 = t314 * t80;
t564 = t546 * t424 - t75;
t563 = t132 * t378;
t186 = pkin(9) * t375 + t229;
t372 = -pkin(2) * t315 - pkin(9) * t312 - pkin(1);
t219 = t372 * t307;
t190 = qJD(1) * t219;
t118 = t186 * t535 + t311 * t190;
t97 = -t204 * qJ(4) + t118;
t93 = t306 * t97;
t117 = -t186 * t311 + t535 * t190;
t96 = -qJ(4) * t206 + t117;
t55 = t308 * t96 - t93;
t478 = -qJD(5) + t55;
t183 = -t308 * t269 + t270 * t306;
t303 = qJ(3) + pkin(11);
t300 = cos(t303);
t313 = sin(qJ(1));
t536 = cos(qJ(1));
t400 = t512 * t536;
t238 = t312 * t313 - t315 * t400;
t431 = t315 * t512;
t240 = t312 * t536 + t313 * t431;
t394 = g(1) * t240 + g(2) * t238;
t482 = t307 * t315;
t548 = g(3) * t482 - t394;
t332 = t548 * t300;
t562 = -t183 * t221 - t332;
t432 = t312 * t512;
t241 = -t313 * t432 + t315 * t536;
t177 = -t241 * t311 + t313 * t448;
t242 = pkin(1) * t431 - pkin(8) * t484;
t230 = qJD(2) * t242;
t89 = -pkin(3) * t265 + t96;
t51 = t308 * t89 - t93;
t401 = qJD(5) - t51;
t554 = pkin(5) * t378;
t32 = t265 * t537 + t401 + t554;
t185 = -pkin(2) * t375 - t226;
t130 = t204 * pkin(3) + qJD(4) + t185;
t318 = -qJ(5) * t378 + t130;
t45 = t132 * t537 + t318;
t14 = t310 * t32 + t314 * t45;
t371 = qJD(2) * t408;
t403 = pkin(1) * t421;
t451 = pkin(8) * t282 + t312 * t403 + t315 * t371;
t158 = -pkin(8) * t405 + t451;
t141 = pkin(9) * t370 + t158;
t362 = t397 * qJD(2);
t145 = (qJD(1) * t362 + qJDD(1) * t372) * t307;
t59 = -qJD(3) * t118 - t311 * t141 + t535 * t145;
t31 = t221 * pkin(3) + t119 * qJ(4) - t206 * qJD(4) + t59;
t355 = -t535 * t141 - t311 * t145 + t186 * t467 - t190 * t439;
t38 = -qJ(4) * t120 - qJD(4) * t204 - t355;
t527 = t306 * t38 - t308 * t31;
t452 = qJDD(5) + t527;
t6 = -pkin(5) * t381 - t221 * t537 + t452;
t435 = t307 * t459;
t416 = pkin(8) * t435 + qJD(2) * t279 + t312 * t371 - t315 * t403;
t142 = -pkin(2) * t370 + t416;
t85 = t120 * pkin(3) + qJDD(4) + t142;
t317 = qJ(5) * t381 - qJD(5) * t378 + t85;
t9 = -t428 * t537 + t317;
t2 = -qJD(6) * t14 - t310 * t9 + t314 * t6;
t560 = t14 * t546 + t2;
t387 = t310 * t45 - t314 * t32;
t1 = -t387 * qJD(6) + t310 * t6 + t314 * t9;
t559 = t387 * t546 + t1;
t239 = t312 * t400 + t313 * t315;
t299 = sin(t303);
t449 = t307 * t536;
t166 = t239 * t299 + t300 * t449;
t557 = t166 * t310 + t238 * t314;
t556 = t166 * t314 - t238 * t310;
t507 = t378 ^ 2;
t302 = t307 ^ 2;
t555 = 0.2e1 * t302;
t514 = qJ(5) * t444 - t513;
t553 = t118 * t265 - t59;
t104 = t132 * t310 - t265 * t314;
t423 = t546 * t314;
t552 = t104 * t423;
t477 = t554 - t478;
t243 = pkin(1) * t432 + pkin(8) * t482;
t218 = pkin(9) * t512 + t243;
t144 = t535 * t218 + t311 * t219;
t286 = pkin(4) * t482;
t458 = qJ(5) * t482;
t550 = t300 * t286 + t299 * t458;
t549 = -t221 * qJ(5) + qJD(5) * t265;
t547 = (qJDD(2) + 0.2e1 * t421) * t307;
t231 = qJD(2) * t243;
t441 = t307 * t468;
t175 = qJD(3) * t561 + t441 * t535;
t237 = t311 * t512 + t415;
t469 = qJD(2) * t312;
t442 = t307 * t469;
t228 = t307 * t362;
t91 = -qJD(3) * t144 + t535 * t228 - t311 * t230;
t64 = pkin(3) * t442 - t175 * qJ(4) - t237 * qJD(4) + t91;
t174 = qJD(3) * t237 + t307 * t440;
t90 = -t218 * t467 + t219 * t439 + t311 * t228 + t535 * t230;
t69 = -qJ(4) * t174 + qJD(4) * t561 + t90;
t25 = t306 * t64 + t308 * t69;
t22 = -t307 * (qJ(5) * t469 - qJD(5) * t315) - t25;
t533 = pkin(3) * t308;
t296 = -pkin(4) - t533;
t292 = -pkin(10) + t296;
t522 = t308 * t97;
t52 = t306 * t89 + t522;
t48 = qJ(5) * t265 - t52;
t33 = -t48 - t567;
t545 = t292 * t80 + t33 * t546;
t544 = -t245 * t221 + t265 * t473 + t378 * t444;
t244 = t306 * t311 - t308 * t535;
t543 = -t132 * t444 + t221 * t244 + t265 * t476;
t184 = t269 * t306 + t270 * t308;
t542 = -t184 * t221 + t299 * t548;
t109 = -t174 * t306 + t175 * t308;
t157 = t237 * t308 + t306 * t561;
t541 = t307 * (t315 * t381 + t378 * t469) - t109 * t265 + t157 * t221;
t108 = t308 * t174 + t175 * t306;
t156 = t237 * t306 - t308 * t561;
t540 = t307 * (t132 * t469 + t315 * t428) - t265 * t108 + t221 * t156;
t60 = t132 * pkin(4) + t318;
t538 = t378 * t60 + qJDD(5);
t316 = qJD(1) ^ 2;
t534 = pkin(3) * t306;
t532 = pkin(4) * t221;
t529 = g(3) * t307;
t528 = t206 * pkin(3);
t12 = t306 * t31 + t308 * t38;
t297 = pkin(3) * t535 + pkin(2);
t356 = -t245 * qJ(5) - t297;
t136 = t244 * t537 + t356;
t152 = pkin(5) * t245 + t183;
t86 = -t136 * t310 + t152 * t314;
t526 = qJD(6) * t86 + t310 * t565 - t314 * t566;
t87 = t136 * t314 + t152 * t310;
t525 = -qJD(6) * t87 + t310 * t566 + t314 * t565;
t54 = t306 * t96 + t522;
t524 = t378 * t54;
t521 = t310 * t80;
t520 = t314 * t43;
t430 = t310 * t221 + t314 * t428;
t44 = qJD(6) * t104 + t430;
t519 = t44 * t310;
t143 = -t218 * t311 + t535 * t219;
t100 = -pkin(3) * t482 - qJ(4) * t237 + t143;
t110 = qJ(4) * t561 + t144;
t68 = t306 * t100 + t308 * t110;
t518 = pkin(5) * t476 - t514;
t517 = -pkin(4) * t476 + t569;
t516 = pkin(4) * t444 + t515;
t511 = qJ(5) * t299;
t510 = t104 * t102;
t509 = t104 * t132;
t506 = t378 * t265;
t504 = t132 ^ 2;
t503 = t132 * t102;
t498 = t204 * t265;
t497 = t206 * t204;
t496 = t206 * t265;
t495 = t238 * t300;
t492 = t239 * t311;
t491 = t240 * t300;
t489 = t244 * t310;
t488 = t244 * t314;
t487 = t299 * t310;
t486 = t299 * t314;
t485 = t302 * t316;
t483 = t307 * t313;
t481 = t310 * t315;
t480 = t311 * t315;
t479 = t314 * t315;
t475 = -t238 * t297 - t239 * t309;
t474 = -t240 * t297 - t241 * t309;
t472 = t536 * pkin(1) + pkin(8) * t483;
t304 = t312 ^ 2;
t305 = t315 ^ 2;
t471 = t304 - t305;
t457 = t315 * t485;
t456 = t307 * t481;
t454 = t307 * t479;
t453 = t311 * t483;
t450 = t120 * t535;
t447 = t315 * t535;
t445 = t535 * t221;
t438 = pkin(1) * t555;
t436 = t315 * t462;
t433 = -pkin(1) * t313 + pkin(8) * t449;
t24 = -t306 * t69 + t308 * t64;
t67 = t100 * t308 - t306 * t110;
t427 = t310 * t444 - t314 * t476;
t426 = t310 * t476 + t314 * t444;
t167 = t239 * t300 - t299 * t449;
t425 = t546 ^ 2;
t8 = -t12 + t549;
t419 = t312 * t457;
t418 = -pkin(4) * t495 - t238 * t511 + t475;
t417 = -pkin(4) * t491 - t240 * t511 + t474;
t272 = t311 * t449;
t410 = t265 * t444;
t409 = t536 * t535;
t406 = t312 * t436;
t404 = t177 * pkin(3);
t398 = t307 * t316 * t512;
t170 = t241 * t299 - t300 * t483;
t396 = g(1) * t166 - g(2) * t170;
t171 = t241 * t300 + t299 * t483;
t395 = -g(1) * t167 + g(2) * t171;
t393 = g(1) * t238 - g(2) * t240;
t392 = g(1) * t241 + g(2) * t239;
t250 = t297 * t482;
t391 = -t309 * t484 + t250;
t63 = t286 - t67;
t389 = t239 * t535 - t272;
t388 = qJ(5) * t132 + t528;
t46 = pkin(5) * t157 + pkin(10) * t482 + t63;
t217 = -pkin(2) * t512 - t242;
t160 = t217 - t373;
t320 = -t157 * qJ(5) + t160;
t57 = t156 * t537 + t320;
t20 = -t310 * t57 + t314 * t46;
t21 = t310 * t46 + t314 * t57;
t386 = pkin(3) * t453 - t240 * t309 + t241 * t297 + t472;
t385 = t108 * t132 - t156 * t428;
t384 = t109 * t378 - t157 * t381;
t380 = -t504 - t507;
t379 = -t504 + t507;
t374 = 0.2e1 * t429 + qJD(2);
t62 = t458 - t68;
t367 = g(1) * t536 + g(2) * t313;
t127 = t156 * t314 + t456;
t364 = t428 - t506;
t363 = t428 + t506;
t360 = pkin(3) * t272 + t238 * t309 - t239 * t297 + t433;
t358 = -t132 * t476 - t244 * t428;
t357 = -t245 * t381 + t378 * t473;
t215 = t299 * t484 - t300 * t512;
t353 = g(1) * t170 + g(2) * t166 + g(3) * t215;
t216 = t299 * t512 + t300 * t484;
t352 = g(1) * t171 + g(2) * t167 + g(3) * t216;
t349 = t244 * t466 - t427;
t348 = t244 * t465 - t426;
t347 = -t311 * t221 + t265 * t439;
t346 = -t423 * t546 - t521;
t344 = t381 - t502;
t342 = -g(3) * t484 - t392;
t341 = -t170 * pkin(4) + qJ(5) * t171 + t404;
t339 = -t307 * t409 - t492;
t337 = t353 - t527;
t336 = t352 - t12;
t335 = t171 * pkin(4) + qJ(5) * t170 + t386;
t334 = -t215 * pkin(4) + qJ(5) * t216 + t373;
t333 = -t142 - t548;
t330 = t339 * pkin(3);
t328 = -pkin(4) * t167 - qJ(5) * t166 + t360;
t327 = -t108 * t378 - t109 * t132 + t156 * t381 + t157 * t428;
t326 = -t265 * t54 + t337;
t7 = pkin(5) * t428 - t8;
t325 = -qJD(6) * t292 * t546 - t352 + t7;
t324 = -t355 * t535 + t342;
t138 = t174 * pkin(3) + t231;
t323 = -t183 * t381 + t184 * t428 + t342;
t322 = -t132 * t473 + t244 * t381 + t245 * t428 + t378 * t476;
t321 = -t166 * pkin(4) + t167 * qJ(5) + t330;
t319 = -t109 * qJ(5) - t157 * qJD(5) + t138;
t17 = -pkin(4) * t428 + t317;
t293 = qJ(5) + t534;
t178 = t241 * t535 + t453;
t161 = t244 * pkin(4) + t356;
t153 = -pkin(5) * t244 + t184;
t146 = (-t221 * t315 - t265 * t469) * t307;
t128 = -t310 * t156 + t454;
t123 = t170 * t310 + t240 * t314;
t122 = t170 * t314 - t240 * t310;
t83 = t156 * pkin(4) + t320;
t74 = pkin(4) * t378 + t388;
t71 = qJD(6) * t127 + t310 * t108 + t314 * t442;
t70 = -t314 * t108 - qJD(6) * t454 + (qJD(6) * t156 + t442) * t310;
t50 = t378 * t537 + t388;
t49 = -pkin(5) * t156 - t62;
t47 = pkin(4) * t265 + t401;
t42 = t314 * t44;
t40 = t54 - t567;
t39 = t108 * pkin(4) + t319;
t28 = t108 * t537 + t319;
t23 = -pkin(4) * t442 - t24;
t19 = -pkin(5) * t108 - t22;
t18 = t109 * pkin(5) - qJD(2) * t420 - t24;
t16 = t310 * t40 + t314 * t50;
t15 = -t310 * t50 + t314 * t40;
t10 = t452 - t532;
t4 = -qJD(6) * t21 + t314 * t18 - t310 * t28;
t3 = qJD(6) * t20 + t310 * t18 + t314 * t28;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t313 - g(2) * t536, t367, 0, 0 (qJDD(1) * t304 + 0.2e1 * t406) * t302 (t315 * t459 - t462 * t471) * t555, t312 * t547 + t374 * t441 (qJDD(1) * t305 - 0.2e1 * t406) * t302, t315 * t547 - t374 * t442, t370 * t512, -t231 * t375 + t242 * t370 - t416 * t512 + g(1) * t239 - g(2) * t241 + (-t437 + t461) * t438, -t230 * t375 - t243 * t370 - t158 * t512 + (-t436 - t459) * t438 - t393 ((-t226 * qJD(2) + qJDD(1) * t243 + t158) * t315 + (-qJD(2) * t229 - qJDD(1) * t242 + t416) * t312 - t367) * t307, t302 * qJDD(1) * pkin(1) ^ 2 - g(1) * t433 - g(2) * t472 + t158 * t243 - t226 * t231 + t229 * t230 - t242 * t416, -t119 * t237 + t175 * t206, -t119 * t561 - t120 * t237 - t174 * t206 - t175 * t204, -t175 * t265 + t237 * t221 + (t119 * t315 + t206 * t469) * t307, -t120 * t561 + t174 * t204, t174 * t265 + t561 * t221 + (t120 * t315 - t204 * t469) * t307, t146, -t91 * t265 + t143 * t221 + t231 * t204 + t217 * t120 - t142 * t561 + t185 * t174 + g(1) * t389 - g(2) * t178 + (t117 * t469 - t315 * t59) * t307, -g(1) * t492 - g(2) * t177 - t217 * t119 + t142 * t237 - t144 * t221 + t185 * t175 + t231 * t206 + t90 * t265 + (-g(1) * t409 - t118 * t469 - t315 * t355) * t307, -t117 * t175 - t118 * t174 + t119 * t143 - t120 * t144 - t204 * t90 - t206 * t91 - t237 * t59 - t355 * t561 + t393, -t355 * t144 + t118 * t90 + t59 * t143 + t117 * t91 + t142 * t217 + t185 * t231 - g(1) * (-pkin(2) * t239 - pkin(9) * t238 + t433) - g(2) * (pkin(2) * t241 + pkin(9) * t240 + t472) t384, t327, t541, t385, -t540, t146, t108 * t130 + t132 * t138 + t156 * t85 - t160 * t428 + t221 * t67 - t24 * t265 + (t315 * t527 + t469 * t51) * t307 - t395, t109 * t130 + t378 * t138 + t157 * t85 - t160 * t381 - t221 * t68 + t25 * t265 + (t12 * t315 - t469 * t52) * t307 - t396, -t108 * t52 - t109 * t51 - t12 * t156 - t132 * t25 + t157 * t527 - t24 * t378 + t381 * t67 + t428 * t68 + t393, -g(1) * t360 - g(2) * t386 + t12 * t68 + t130 * t138 + t85 * t160 + t51 * t24 + t52 * t25 - t527 * t67, t146, -t541, t540, t384, t327, t385, t10 * t157 + t108 * t48 + t109 * t47 + t132 * t22 + t156 * t8 + t23 * t378 - t381 * t63 - t428 * t62 + t393, -t108 * t60 - t132 * t39 - t156 * t17 + t221 * t63 - t23 * t265 + t428 * t83 + (-t10 * t315 + t469 * t47) * t307 + t395, -t109 * t60 - t378 * t39 - t157 * t17 + t22 * t265 - t221 * t62 + t381 * t83 + (t315 * t8 - t469 * t48) * t307 + t396, -g(1) * t328 - g(2) * t335 + t10 * t63 + t17 * t83 + t48 * t22 + t47 * t23 + t60 * t39 + t8 * t62, t104 * t71 + t128 * t43, -t102 * t71 - t104 * t70 - t127 * t43 + t128 * t44, t104 * t109 - t128 * t80 - t157 * t43 + t546 * t71, t102 * t70 - t127 * t44, -t102 * t109 + t127 * t80 - t157 * t44 - t546 * t70, t109 * t546 + t157 * t80, g(1) * t557 - g(2) * t123 + t19 * t102 - t387 * t109 - t7 * t127 + t2 * t157 + t20 * t80 + t33 * t70 + t4 * t546 + t49 * t44, g(1) * t556 - g(2) * t122 - t1 * t157 + t19 * t104 - t14 * t109 - t7 * t128 - t21 * t80 - t3 * t546 + t33 * t71 - t49 * t43, t1 * t127 - t102 * t3 - t104 * t4 + t128 * t2 - t14 * t70 + t20 * t43 - t21 * t44 + t387 * t71 - t395, t1 * t21 + t14 * t3 + t2 * t20 - t387 * t4 + t7 * t49 + t33 * t19 - g(1) * (-pkin(5) * t238 - pkin(10) * t167 + t328) - g(2) * (pkin(5) * t240 + pkin(10) * t171 + t335); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, t471 * t485, -t315 * t398 + t435, t419, t312 * t398 + t282, t370, pkin(1) * t312 * t485 + t229 * t375 - t416 - t548, pkin(1) * t457 + t226 * t375 + (pkin(8) * t462 + g(3)) * t484 + t392 - t451, 0, 0, -t119 * t311 - t206 * t329, -t119 * t535 + t329 * t204 + (-t120 + t496) * t311 (-t206 * t312 + t265 * t447) * t470 - t347, -t311 * t498 - t450, t265 * t467 + t445 + (t204 * t312 - t265 * t480) * t470, t410, t185 * t467 - pkin(2) * t120 + t148 * t265 - t229 * t204 + t347 * pkin(9) + (-g(3) * t447 + (-t117 * t312 - t185 * t480) * qJD(1)) * t307 + (-t142 + t394) * t535, -pkin(9) * t445 + t185 * t439 + pkin(2) * t119 - t149 * t265 - t229 * t206 + (t118 * t312 - t185 * t447) * t470 + (-pkin(9) * qJD(3) * t265 - t333) * t311, t148 * t206 + t149 * t204 + t329 * t117 + (t206 * t439 - t450) * pkin(9) + ((-t119 + t568) * pkin(9) + t553) * t311 + t324, -t117 * t148 - t118 * t149 - t185 * t229 + t333 * pkin(2) + (-t59 * t311 + (-t117 * t535 - t118 * t311) * qJD(3) + t324) * pkin(9), t357, t322, -t544, t358, -t543, t410, -t130 * t476 + t132 * t402 + t244 * t85 + t265 * t515 + t297 * t428 - t444 * t51 + t562, t130 * t473 + t245 * t85 + t265 * t513 + t297 * t381 + t378 * t402 + t444 * t52 + t542, -t12 * t244 - t132 * t513 + t245 * t527 + t378 * t515 - t473 * t51 + t476 * t52 + t323, -g(1) * t474 - g(2) * t475 - g(3) * t391 + t12 * t184 + t130 * t402 + t183 * t527 - t85 * t297 - t51 * t515 + t513 * t52, t410, t544, t543, t357, t322, t358, t10 * t245 + t132 * t514 + t244 * t8 + t378 * t516 + t47 * t473 - t476 * t48 + t323, -t132 * t517 + t161 * t428 - t17 * t244 - t265 * t516 - t444 * t47 + t476 * t60 - t562, t161 * t381 - t17 * t245 + t265 * t514 - t378 * t517 + t444 * t48 - t473 * t60 - t542, t17 * t161 - t8 * t184 + t10 * t183 - g(1) * t417 - g(2) * t418 - g(3) * (t391 + t550) + t517 * t60 + t514 * t48 + t516 * t47, t104 * t348 - t43 * t489, t427 * t104 + t426 * t102 + (-t519 - t520 + (-t102 * t314 - t104 * t310) * qJD(6)) * t244, t104 * t473 - t245 * t43 + t348 * t546 + t489 * t80, t102 * t349 - t44 * t488, -t102 * t473 - t245 * t44 - t349 * t546 + t488 * t80, t80 * t245 + t473 * t546, t86 * t80 + t2 * t245 + t153 * t44 - t7 * t488 - g(1) * (-t240 * t487 + t241 * t314) - g(2) * (-t238 * t487 + t239 * t314) - (t299 * t481 + t312 * t314) * t529 - t473 * t387 + t525 * t546 + t518 * t102 + t349 * t33, -t87 * t80 - t1 * t245 - t153 * t43 + t7 * t489 - g(1) * (-t240 * t486 - t241 * t310) - g(2) * (-t238 * t486 - t239 * t310) - (t299 * t479 - t310 * t312) * t529 - t473 * t14 - t526 * t546 + t518 * t104 + t348 * t33, t43 * t86 - t44 * t87 + t427 * t14 - t426 * t387 - t525 * t104 - t526 * t102 - t332 + (t1 * t314 - t2 * t310 + (-t14 * t310 + t314 * t387) * qJD(6)) * t244, t1 * t87 + t2 * t86 + t7 * t153 - g(1) * (pkin(5) * t241 - pkin(10) * t491 + t417) - g(2) * (pkin(5) * t239 - pkin(10) * t495 + t418) - g(3) * (t250 + t550) + t518 * t33 - (pkin(10) * t300 * t315 + (pkin(5) - t309) * t312) * t529 + t526 * t14 - t525 * t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, -t204 ^ 2 + t206 ^ 2, -t119 - t498, -t497, -t120 - t496, t221, -g(1) * t177 - g(2) * t339 - g(3) * t561 - t185 * t206 - t553, g(1) * t178 + g(2) * t389 + g(3) * t237 - t117 * t265 + t185 * t204 + t355, 0, 0, t563, t379, -t345, -t563, t364, t221, -t130 * t378 + (-t132 * t206 + t221 * t308) * pkin(3) + t326, t130 * t132 - t265 * t55 + (-t206 * t378 - t221 * t306) * pkin(3) + t336, t378 * t52 - t524 + (t306 * t428 + t308 * t381) * pkin(3) + (t55 - t51) * t132, -g(1) * t404 - g(2) * t330 - g(3) * t373 + t12 * t534 - t130 * t528 + t51 * t54 - t52 * t55 - t527 * t533, t221, t345, -t364, t563, t379, -t563, t293 * t428 - t296 * t381 - t378 * t48 - t524 + (t47 + t478) * t132, t132 * t74 + (-pkin(4) + t296) * t221 - t326 + t538, -t132 * t60 + t221 * t293 + t265 * t478 + t378 * t74 - t336 - t549, -g(1) * t341 - g(2) * t321 - g(3) * t334 + t10 * t296 - t8 * t293 - t47 * t54 + t478 * t48 - t60 * t74, -t104 * t424 - t520, -t42 - t552 + (t43 + t422) * t310, t509 - t564, t314 * t422 + t519, t346 - t503, t546 * t132, t477 * t102 - t132 * t387 - t15 * t546 + t293 * t44 + t325 * t310 + t314 * t545, t477 * t104 - t132 * t14 + t16 * t546 - t293 * t43 - t310 * t545 + t325 * t314, t102 * t16 + t104 * t15 + (-t378 * t14 + t292 * t43 - t2 + (-t102 * t292 - t14) * qJD(6)) * t314 + (-t387 * t378 - t292 * t44 - t1 + (t104 * t292 - t387) * qJD(6)) * t310 + t353, t7 * t293 - t14 * t16 + t387 * t15 - g(1) * (-pkin(10) * t170 + t341) - g(2) * (-t166 * pkin(10) + t321) - g(3) * (-pkin(10) * t215 + t334) + t477 * t33 + (t1 * t310 + t14 * t465 + t2 * t314 + t387 * t466) * t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t363, -t344, t380, t132 * t52 + t378 * t51 + t548 + t85, 0, 0, 0, 0, 0, 0, t380, t363, t344, -t132 * t48 - t378 * t47 + t17 + t548, 0, 0, 0, 0, 0, 0, t346 + t503, t509 + t564, t310 * t558 - t42 + t552, t132 * t33 - t310 * t560 + t314 * t559 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t221 - t563, -t265 ^ 2 - t507, -t265 * t48 - t337 - t532 + t538, 0, 0, 0, 0, 0, 0, t265 * t102 - t310 * t425 + t75, t265 * t104 - t314 * t425 - t521, -t558 * t314 + (t104 * t546 - t44) * t310, t265 * t33 + t310 * t559 + t314 * t560 - t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, -t102 ^ 2 + t104 ^ 2, t558, -t510, -t430 + (-qJD(6) + t546) * t104, t80, -t33 * t104 - g(1) * t122 - g(2) * t556 - g(3) * (t215 * t314 + t456) + t560, t33 * t102 + g(1) * t123 + g(2) * t557 - g(3) * (-t215 * t310 + t454) - t559, 0, 0;];
tau_reg  = t5;
