% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 05:37
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRPPR6_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR6_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR6_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR6_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR6_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR6_invdynB_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 05:34:20
% EndTime: 2019-05-07 05:35:50
% DurationCPUTime: 87.25s
% Computational Cost: add. (327288->961), mult. (729847->1475), div. (0->0), fcn. (587632->12), ass. (0->715)
t1243 = sin(qJ(1));
t1247 = cos(qJ(1));
t1237 = sin(pkin(6));
t1239 = cos(pkin(6));
t1242 = sin(qJ(2));
t1246 = cos(qJ(2));
t1228 = qJD(1) * t1239 + qJD(2);
t1241 = sin(qJ(3));
t1245 = cos(qJ(3));
t1372 = t1237 * t1242;
t1361 = qJD(1) * t1372;
t1191 = -t1245 * t1228 + t1241 * t1361;
t1363 = qJDD(1) * t1242;
t1406 = qJD(1) * t1246;
t1201 = (qJD(2) * t1406 + t1363) * t1237;
t1344 = qJDD(1) * t1239 + qJDD(2);
t1138 = -t1191 * qJD(3) + t1245 * t1201 + t1241 * t1344;
t1236 = sin(pkin(11));
t1238 = cos(pkin(11));
t1192 = t1228 * t1241 + t1245 * t1361;
t1261 = -t1241 * t1201 + t1245 * t1344;
t1254 = t1192 * qJD(3) - t1261;
t1072 = t1138 * t1236 + t1238 * t1254;
t1159 = -t1191 * t1236 + t1192 * t1238;
t1371 = t1237 * t1246;
t1360 = qJD(1) * t1371;
t1221 = -qJD(3) + t1360;
t1133 = t1221 * t1159;
t1447 = t1072 - t1133;
t1430 = t1221 ^ 2;
t1157 = t1238 * t1191 + t1192 * t1236;
t1433 = t1157 ^ 2;
t1075 = -t1430 - t1433;
t1364 = qJDD(1) * t1237;
t1202 = -qJD(2) * t1361 + t1246 * t1364;
t1196 = -qJDD(3) + t1202;
t1387 = t1157 * t1159;
t1259 = t1196 + t1387;
t1457 = t1238 * t1259;
t975 = t1075 * t1236 - t1457;
t1458 = t1236 * t1259;
t977 = t1075 * t1238 + t1458;
t875 = t1241 * t975 - t1245 * t977;
t1322 = t1242 * t875 + t1246 * t1447;
t872 = t1241 * t977 + t1245 * t975;
t787 = t1237 * t872 + t1239 * t1322;
t848 = -t1242 * t1447 + t1246 * t875;
t728 = t1243 * t848 + t1247 * t787;
t1591 = pkin(7) * t728;
t729 = t1243 * t787 - t1247 * t848;
t1590 = pkin(7) * t729;
t1073 = t1238 * t1138 - t1236 * t1254;
t1386 = t1157 * t1221;
t1446 = t1073 + t1386;
t1432 = t1159 ^ 2;
t1112 = -t1432 - t1430;
t1260 = t1196 - t1387;
t1451 = t1260 * t1236;
t993 = t1112 * t1238 + t1451;
t1450 = t1260 * t1238;
t996 = t1112 * t1236 - t1450;
t896 = t1241 * t993 + t1245 * t996;
t1319 = t1242 * t896 + t1246 * t1446;
t894 = t1241 * t996 - t1245 * t993;
t794 = -t1237 * t894 + t1239 * t1319;
t858 = -t1242 * t1446 + t1246 * t896;
t750 = t1243 * t858 + t1247 * t794;
t1589 = pkin(7) * t750;
t751 = t1243 * t794 - t1247 * t858;
t1588 = pkin(7) * t751;
t792 = t1237 * t1319 + t1239 * t894;
t1587 = pkin(8) * (t1237 * t792 + t1239 * t794);
t785 = t1237 * t1322 - t1239 * t872;
t1586 = pkin(8) * (t1237 * t785 + t1239 * t787);
t1585 = pkin(1) * t785;
t1584 = pkin(1) * t787;
t1583 = pkin(1) * t792;
t1582 = pkin(1) * t794;
t1448 = -t1072 - t1133;
t1129 = t1433 - t1430;
t1004 = t1129 * t1236 - t1450;
t1008 = t1129 * t1238 + t1451;
t905 = t1004 * t1241 - t1008 * t1245;
t1320 = t1242 * t905 + t1246 * t1448;
t902 = t1004 * t1245 + t1008 * t1241;
t802 = t1237 * t902 + t1239 * t1320;
t864 = -t1242 * t1448 + t1246 * t905;
t1581 = t1243 * t802 - t1247 * t864;
t1445 = t1386 - t1073;
t1130 = -t1432 + t1430;
t1002 = t1130 * t1238 - t1458;
t1005 = t1130 * t1236 + t1457;
t903 = t1002 * t1241 + t1005 * t1245;
t1317 = t1242 * t903 - t1246 * t1445;
t900 = t1002 * t1245 - t1005 * t1241;
t800 = t1237 * t900 + t1239 * t1317;
t862 = t1242 * t1445 + t1246 * t903;
t1580 = t1243 * t800 - t1247 * t862;
t1579 = t1243 * t864 + t1247 * t802;
t1578 = t1243 * t862 + t1247 * t800;
t1575 = pkin(8) * t848;
t1574 = pkin(8) * t858;
t1565 = t1237 * t1317 - t1239 * t900;
t1564 = t1237 * t1320 - t1239 * t902;
t1563 = pkin(9) * t872;
t1562 = pkin(9) * t894;
t1443 = -t1433 - t1432;
t1463 = -t1236 * t1445 + t1238 * t1448;
t1464 = t1236 * t1448 + t1238 * t1445;
t1493 = -t1241 * t1464 + t1245 * t1463;
t1512 = t1242 * t1443 + t1246 * t1493;
t1492 = t1241 * t1463 + t1245 * t1464;
t1516 = t1242 * t1493 - t1246 * t1443;
t1524 = -t1237 * t1492 + t1239 * t1516;
t1538 = t1243 * t1512 + t1247 * t1524;
t1561 = pkin(7) * t1538;
t1539 = -t1243 * t1524 + t1247 * t1512;
t1560 = pkin(7) * t1539;
t1551 = -pkin(2) * t894 + pkin(3) * t993;
t1550 = -pkin(2) * t872 - pkin(3) * t975;
t1549 = pkin(2) * t1446 + pkin(9) * t896;
t1548 = pkin(2) * t1447 + pkin(9) * t875;
t1444 = -t1432 + t1433;
t1462 = -t1236 * t1447 + t1238 * t1446;
t1401 = t1447 * t1238;
t1499 = -t1236 * t1446 - t1401;
t1513 = -t1241 * t1462 + t1245 * t1499;
t1522 = -t1242 * t1444 + t1246 * t1513;
t1517 = t1241 * t1499 + t1245 * t1462;
t1523 = t1242 * t1513 + t1246 * t1444;
t1540 = -t1237 * t1517 + t1239 * t1523;
t1547 = -t1243 * t1540 + t1247 * t1522;
t1546 = t1243 * t1522 + t1247 * t1540;
t1545 = pkin(1) * t1524;
t1525 = t1237 * t1516 + t1239 * t1492;
t1544 = pkin(1) * t1525;
t1541 = t1237 * t1523 + t1239 * t1517;
t1537 = (-t1237 * t1525 - t1239 * t1524) * pkin(8);
t1534 = pkin(8) * t1512;
t1533 = qJ(4) * t975;
t1532 = qJ(4) * t977;
t1531 = qJ(4) * t993;
t1530 = qJ(4) * t996;
t1428 = -2 * qJD(5);
t1521 = pkin(9) * t1492;
t788 = -pkin(2) * t1492 - pkin(3) * t1464;
t1518 = -pkin(2) * t1443 + pkin(9) * t1493;
t1357 = t1242 * t1387;
t1378 = t1221 * t1236;
t1338 = t1238 * t1073 + t1159 * t1378;
t1377 = t1221 * t1238;
t1340 = t1236 * t1073 - t1159 * t1377;
t1436 = -t1241 * t1340 + t1245 * t1338;
t1467 = t1246 * t1436 + t1357;
t1435 = t1241 * t1338 + t1245 * t1340;
t1356 = t1246 * t1387;
t1469 = t1242 * t1436 - t1356;
t1494 = -t1237 * t1435 + t1239 * t1469;
t1515 = -t1243 * t1494 + t1247 * t1467;
t1285 = t1072 * t1236 - t1157 * t1377;
t1339 = -t1238 * t1072 - t1157 * t1378;
t1438 = -t1241 * t1339 + t1245 * t1285;
t1466 = t1246 * t1438 - t1357;
t1437 = t1241 * t1285 + t1245 * t1339;
t1468 = t1242 * t1438 + t1356;
t1495 = -t1237 * t1437 + t1239 * t1468;
t1514 = -t1243 * t1495 + t1247 * t1466;
t1511 = t1243 * t1467 + t1247 * t1494;
t1510 = t1243 * t1466 + t1247 * t1495;
t1508 = qJ(4) * t1464;
t1507 = qJ(5) * t1446;
t1425 = pkin(2) * t1246;
t1343 = -pkin(9) * t1242 - t1425;
t1407 = qJD(1) * t1237;
t1200 = t1343 * t1407;
t1224 = g(1) * t1247 + g(2) * t1243;
t1248 = qJD(1) ^ 2;
t1197 = -pkin(1) * t1248 + pkin(8) * t1364 - t1224;
t1223 = t1243 * g(1) - t1247 * g(2);
t1422 = pkin(8) * t1237;
t1257 = qJDD(1) * pkin(1) + t1248 * t1422 + t1223;
t1255 = t1239 * t1257;
t1345 = t1242 * t1197 - t1246 * t1255;
t1429 = t1228 ^ 2;
t1091 = (qJD(1) * t1200 * t1242 + g(3) * t1246) * t1237 - t1344 * pkin(2) - t1429 * pkin(9) + t1345;
t1169 = -pkin(3) * t1221 - qJ(4) * t1192;
t1431 = t1191 ^ 2;
t979 = t1254 * pkin(3) - t1431 * qJ(4) + t1192 * t1169 + qJDD(4) + t1091;
t1250 = t1072 * pkin(4) - t1507 + t979;
t1500 = t1159 * t1428 + t1250;
t1498 = -pkin(3) * t1443 + qJ(4) * t1463;
t1497 = t1237 * t1468 + t1239 * t1437;
t1496 = t1237 * t1469 + t1239 * t1435;
t1183 = t1239 * t1246 * t1196;
t1370 = t1239 * t1242;
t1281 = (t1157 * t1236 + t1159 * t1238) * t1221;
t1282 = (t1157 * t1238 - t1159 * t1236) * t1221;
t1439 = -t1241 * t1281 + t1245 * t1282;
t1440 = t1241 * t1282 + t1245 * t1281;
t1460 = -t1237 * t1440 + t1370 * t1439 + t1183;
t1383 = t1196 * t1242;
t1465 = t1246 * t1439 - t1383;
t1491 = t1243 * t1465 + t1247 * t1460;
t1490 = -t1243 * t1460 + t1247 * t1465;
t1240 = sin(qJ(6));
t1244 = cos(qJ(6));
t1119 = -t1244 * t1157 - t1221 * t1240;
t1121 = t1157 * t1240 - t1221 * t1244;
t1046 = t1121 * t1119;
t1069 = qJDD(6) + t1073;
t1449 = -t1046 + t1069;
t1481 = t1240 * t1449;
t1475 = t1244 * t1449;
t1182 = t1196 * t1371;
t1461 = t1239 * t1440 + t1372 * t1439 + t1182;
t1209 = t1228 * t1361;
t1176 = t1202 - t1209;
t1456 = t1239 * t1176;
t1385 = t1191 * t1192;
t1258 = -t1196 - t1385;
t1455 = t1241 * t1258;
t1453 = t1245 * t1258;
t1177 = t1191 * t1221;
t1105 = t1177 - t1138;
t1103 = t1177 + t1138;
t1210 = t1228 * t1360;
t1172 = t1210 + t1201;
t1106 = (t1221 + qJD(3)) * t1192 - t1261;
t1404 = qJD(4) * t1159;
t1149 = 0.2e1 * t1404;
t1078 = pkin(4) * t1157 - qJ(5) * t1159;
t1253 = -g(3) * t1372 + t1242 * t1255;
t1092 = t1344 * pkin(9) - t1429 * pkin(2) + (t1200 * t1407 + t1197) * t1246 + t1253;
t1426 = pkin(2) * t1242;
t1342 = -pkin(9) * t1246 + t1426;
t1408 = qJD(1) * t1228;
t1421 = t1239 * g(3);
t1093 = -t1202 * pkin(2) - t1201 * pkin(9) - t1421 + (t1342 * t1408 - t1257) * t1237;
t997 = t1241 * t1092 - t1245 * t1093;
t931 = t1258 * pkin(3) + qJ(4) * t1105 - t997;
t998 = t1245 * t1092 + t1241 * t1093;
t948 = -pkin(3) * t1431 - qJ(4) * t1254 + t1221 * t1169 + t998;
t1419 = t1236 * t948 - t1238 * t931;
t1290 = -t1196 * pkin(4) + qJ(5) * t1430 - t1159 * t1078 - qJDD(5) - t1419;
t1266 = t1149 - t1290;
t780 = -pkin(5) * t1445 + t1259 * pkin(10) + t1266;
t1123 = pkin(5) * t1159 + pkin(10) * t1221;
t1348 = -pkin(4) * t1221 + t1428;
t805 = (-t1123 + t1348) * t1159 + t1250 - t1433 * pkin(5) + t1072 * pkin(10);
t1347 = -t1240 * t805 + t1244 * t780;
t719 = t1240 * t780 + t1244 * t805;
t681 = -t1240 * t1347 + t1244 * t719;
t680 = t1240 * t719 + t1244 * t1347;
t1118 = t1119 ^ 2;
t1434 = t1121 ^ 2;
t1152 = qJD(6) + t1159;
t1150 = t1152 ^ 2;
t1190 = t1192 ^ 2;
t1427 = pkin(4) + pkin(10);
t1424 = pkin(4) * t1236;
t1423 = pkin(4) * t1238;
t1420 = t1236 * t931 + t1238 * t948;
t1418 = t1236 * t979;
t1417 = t1238 * t979;
t1405 = qJD(4) * t1157;
t1146 = -0.2e1 * t1405;
t1295 = -pkin(4) * t1430 - t1157 * t1078 + t1420;
t1256 = -t1196 * qJ(5) + t1146 + t1295;
t783 = -t1072 * pkin(5) - t1433 * pkin(10) + (t1428 - t1123) * t1221 + t1256;
t1415 = t1240 * t783;
t969 = t1046 + t1069;
t1414 = t1240 * t969;
t839 = t1149 + t1419;
t840 = t1146 + t1420;
t759 = t1236 * t840 - t1238 * t839;
t1413 = t1241 * t759;
t1411 = t1244 * t783;
t1410 = t1244 * t969;
t1409 = t1245 * t759;
t1402 = qJD(5) * t1221;
t1394 = t1091 * t1241;
t1393 = t1091 * t1245;
t1392 = t1119 * t1152;
t1124 = t1196 - t1385;
t1391 = t1124 * t1241;
t1390 = t1124 * t1245;
t1389 = t1152 * t1240;
t1388 = t1152 * t1244;
t1367 = t1246 * t1248;
t1233 = t1237 ^ 2;
t1374 = t1233 * t1242;
t1220 = t1367 * t1374;
t1198 = -t1220 + t1344;
t1382 = t1198 * t1242;
t1381 = t1198 * t1246;
t1199 = t1220 + t1344;
t1380 = t1199 * t1242;
t1379 = t1199 * t1246;
t1376 = t1221 * t1241;
t1375 = t1221 * t1245;
t1373 = t1233 * t1248;
t1179 = t1237 * t1257 + t1421;
t1369 = t1242 * t1179;
t1368 = t1246 * t1179;
t1234 = t1242 ^ 2;
t1235 = t1246 ^ 2;
t1365 = t1234 + t1235;
t1362 = t1228 * t1407;
t1359 = t1236 * t1046;
t1358 = t1238 * t1046;
t1355 = t1242 * t1385;
t1354 = t1246 * t1385;
t1353 = t1234 * t1373;
t1352 = t1235 * t1373;
t1351 = t1119 * qJD(6) - t1240 * t1072 + t1244 * t1196;
t1350 = -t1150 - t1434;
t1349 = qJ(5) * t1236 + pkin(3);
t760 = t1236 * t839 + t1238 * t840;
t898 = t1241 * t997 + t1245 * t998;
t1346 = t1244 * t1072 + t1240 * t1196;
t1181 = -t1223 * t1243 - t1247 * t1224;
t1219 = qJDD(1) * t1247 - t1243 * t1248;
t1341 = -pkin(7) * t1219 - g(3) * t1243;
t1187 = -t1353 - t1429;
t1161 = -t1187 * t1242 - t1381;
t1337 = pkin(8) * t1161 - t1369;
t1206 = -t1352 - t1429;
t1166 = t1206 * t1246 - t1380;
t1336 = pkin(8) * t1166 + t1368;
t897 = t1241 * t998 - t1245 * t997;
t670 = t1236 * t783 - t1238 * t680;
t671 = t1236 * t680 + t1238 * t783;
t633 = -t1241 * t670 + t1245 * t671;
t1335 = t1242 * t633 - t1246 * t681;
t806 = t1256 - 0.2e1 * t1402;
t807 = -0.2e1 * t1404 + t1290;
t725 = t1236 * t806 + t1238 * t807;
t726 = -t1236 * t807 + t1238 * t806;
t687 = -t1241 * t725 + t1245 * t726;
t855 = t1159 * t1348 + t1250;
t1334 = t1242 * t687 - t1246 * t855;
t703 = t1245 * t760 - t1413;
t1333 = t1242 * t703 - t1246 * t979;
t1264 = (-qJD(6) + t1152) * t1121 + t1346;
t1293 = -t1351 + t1392;
t850 = t1240 * t1264 - t1244 * t1293;
t991 = -t1118 - t1434;
t812 = t1236 * t991 - t1238 * t850;
t813 = t1236 * t850 + t1238 * t991;
t736 = -t1241 * t812 + t1245 * t813;
t852 = t1240 * t1293 + t1244 * t1264;
t1332 = t1242 * t736 - t1246 * t852;
t1045 = -t1118 + t1434;
t1294 = -t1351 - t1392;
t939 = (qJD(6) + t1152) * t1121 - t1346;
t849 = t1240 * t939 - t1244 * t1294;
t822 = t1045 * t1236 + t1238 * t849;
t823 = t1045 * t1238 - t1236 * t849;
t747 = -t1241 * t822 + t1245 * t823;
t851 = t1240 * t1294 + t1244 * t939;
t1331 = t1242 * t747 + t1246 * t851;
t1009 = -t1150 - t1118;
t885 = t1240 * t1009 + t1475;
t824 = t1236 * t939 - t1238 * t885;
t825 = t1236 * t885 + t1238 * t939;
t756 = -t1241 * t824 + t1245 * t825;
t886 = t1009 * t1244 - t1481;
t1330 = t1242 * t756 - t1246 * t886;
t890 = t1244 * t1350 - t1414;
t826 = t1236 * t1294 - t1238 * t890;
t827 = t1236 * t890 + t1238 * t1294;
t758 = -t1241 * t826 + t1245 * t827;
t891 = -t1240 * t1350 - t1410;
t1329 = t1242 * t758 - t1246 * t891;
t1060 = t1118 - t1150;
t909 = -t1060 * t1240 - t1410;
t841 = t1236 * t1264 + t1238 * t909;
t843 = -t1236 * t909 + t1238 * t1264;
t766 = -t1241 * t841 + t1245 * t843;
t908 = -t1060 * t1244 + t1414;
t1328 = t1242 * t766 + t1246 * t908;
t1061 = t1150 - t1434;
t907 = -t1061 * t1244 - t1481;
t842 = t1236 * t1293 + t1238 * t907;
t844 = -t1236 * t907 + t1238 * t1293;
t767 = -t1241 * t842 + t1245 * t844;
t910 = t1061 * t1240 - t1475;
t1327 = t1242 * t767 + t1246 * t910;
t986 = -qJD(6) * t1121 + t1346;
t934 = -t1119 * t1389 - t1244 * t986;
t880 = t1238 * t934 - t1359;
t882 = -t1236 * t934 - t1358;
t798 = -t1241 * t880 + t1245 * t882;
t936 = -t1119 * t1388 + t1240 * t986;
t1326 = t1242 * t798 + t1246 * t936;
t937 = -t1121 * t1388 + t1240 * t1351;
t881 = t1238 * t937 + t1359;
t883 = -t1236 * t937 + t1358;
t799 = -t1241 * t881 + t1245 * t883;
t935 = t1121 * t1389 + t1244 * t1351;
t1325 = t1242 * t799 + t1246 * t935;
t973 = (t1119 * t1240 + t1121 * t1244) * t1152;
t919 = t1069 * t1236 + t1238 * t973;
t920 = t1069 * t1238 - t1236 * t973;
t829 = -t1241 * t919 + t1245 * t920;
t974 = (t1119 * t1244 - t1121 * t1240) * t1152;
t1324 = t1242 * t829 + t1246 * t974;
t1311 = -t1091 * t1246 + t1242 * t898;
t1310 = -t1239 * t1248 + t1408;
t1101 = (-qJD(3) + t1221) * t1192 + t1261;
t1020 = t1101 * t1245 - t1103 * t1241;
t1162 = -t1190 + t1431;
t1309 = t1020 * t1242 + t1162 * t1246;
t1021 = -t1105 * t1241 - t1106 * t1245;
t1122 = t1190 + t1431;
t1308 = t1021 * t1242 + t1122 * t1246;
t1141 = -t1430 - t1431;
t1054 = t1141 * t1245 - t1455;
t1307 = t1054 * t1242 + t1101 * t1246;
t1163 = -t1190 - t1430;
t1077 = -t1163 * t1241 + t1390;
t1306 = t1077 * t1242 - t1103 * t1246;
t1171 = -t1190 + t1430;
t1083 = -t1171 * t1241 + t1453;
t1305 = t1083 * t1242 + t1105 * t1246;
t1170 = -t1430 + t1431;
t1084 = t1170 * t1245 + t1391;
t1304 = t1084 * t1242 + t1106 * t1246;
t1143 = g(3) * t1371 + t1345;
t1144 = t1246 * t1197 + t1253;
t1303 = -t1246 * t1143 + t1242 * t1144;
t1074 = t1143 * t1242 + t1144 * t1246;
t1302 = t1172 * t1246 + t1176 * t1242;
t1174 = -t1210 + t1201;
t1175 = t1202 + t1209;
t1301 = -t1174 * t1246 + t1175 * t1242;
t1300 = t1187 * t1246 - t1382;
t1205 = t1352 - t1429;
t1299 = t1205 * t1242 + t1381;
t1204 = -t1353 + t1429;
t1298 = t1204 * t1246 + t1380;
t1297 = t1206 * t1242 + t1379;
t1180 = t1223 * t1247 - t1224 * t1243;
t1296 = t1237 * t1344;
t1096 = -t1191 * t1375 + t1241 * t1254;
t1284 = t1096 * t1242 + t1354;
t1098 = t1138 * t1245 + t1192 * t1376;
t1283 = t1098 * t1242 - t1354;
t637 = pkin(5) * t783 - t1427 * t681;
t643 = pkin(5) * t680 - qJ(5) * t681;
t611 = -pkin(3) * t681 + qJ(4) * t671 + t1236 * t643 + t1238 * t637;
t618 = -qJ(4) * t670 - t1236 * t637 + t1238 * t643;
t632 = t1241 * t671 + t1245 * t670;
t602 = -pkin(9) * t632 - t1241 * t611 + t1245 * t618;
t615 = -pkin(2) * t632 - pkin(3) * t670 - qJ(5) * t783 + t1427 * t680;
t623 = t1242 * t681 + t1246 * t633;
t1280 = pkin(8) * t623 + t1242 * t602 + t1246 * t615;
t665 = pkin(5) * t991 - t1427 * t852 - t681;
t774 = pkin(5) * t850 - qJ(5) * t852;
t642 = -pkin(3) * t852 + qJ(4) * t813 + t1236 * t774 + t1238 * t665;
t647 = -qJ(4) * t812 - t1236 * t665 + t1238 * t774;
t735 = t1241 * t813 + t1245 * t812;
t621 = -pkin(9) * t735 - t1241 * t642 + t1245 * t647;
t644 = -pkin(2) * t735 - pkin(3) * t812 - qJ(5) * t991 + t1427 * t850 + t680;
t712 = t1242 * t852 + t1246 * t736;
t1279 = pkin(8) * t712 + t1242 * t621 + t1246 * t644;
t699 = pkin(5) * t885 - qJ(5) * t886 + t1347;
t713 = pkin(5) * t939 - t1427 * t886 + t1411;
t652 = -pkin(3) * t886 + qJ(4) * t825 + t1236 * t699 + t1238 * t713;
t657 = -qJ(4) * t824 - t1236 * t713 + t1238 * t699;
t755 = t1241 * t825 + t1245 * t824;
t626 = -pkin(9) * t755 - t1241 * t652 + t1245 * t657;
t674 = -pkin(2) * t755 - pkin(3) * t824 - qJ(5) * t939 + t1427 * t885 - t1415;
t721 = t1242 * t886 + t1246 * t756;
t1278 = pkin(8) * t721 + t1242 * t626 + t1246 * t674;
t700 = pkin(5) * t890 - qJ(5) * t891 - t719;
t714 = pkin(5) * t1294 - t1427 * t891 - t1415;
t655 = -pkin(3) * t891 + qJ(4) * t827 + t1236 * t700 + t1238 * t714;
t658 = -qJ(4) * t826 - t1236 * t714 + t1238 * t700;
t757 = t1241 * t827 + t1245 * t826;
t627 = -pkin(9) * t757 - t1241 * t655 + t1245 * t658;
t676 = -pkin(2) * t757 - pkin(3) * t826 - qJ(5) * t1294 + t1427 * t890 - t1411;
t723 = t1242 * t891 + t1246 * t758;
t1277 = pkin(8) * t723 + t1242 * t627 + t1246 * t676;
t685 = qJ(4) * t726 + (-t1349 - t1423) * t855;
t686 = t1241 * t726 + t1245 * t725;
t698 = -qJ(4) * t725 + (-qJ(5) * t1238 + t1424) * t855;
t635 = -pkin(9) * t686 - t1241 * t685 + t1245 * t698;
t648 = -pkin(2) * t686 - pkin(3) * t725 - pkin(4) * t807 - qJ(5) * t806;
t679 = t1242 * t855 + t1246 * t687;
t1276 = pkin(8) * t679 + t1242 * t635 + t1246 * t648;
t702 = t1241 * t760 + t1409;
t739 = -pkin(3) * t979 + qJ(4) * t760;
t661 = -pkin(9) * t702 - qJ(4) * t1409 - t1241 * t739;
t678 = -pkin(2) * t702 - pkin(3) * t759;
t696 = t1242 * t979 + t1246 * t703;
t1275 = pkin(8) * t696 + t1242 * t661 + t1246 * t678;
t789 = -pkin(4) * t1443 + t806;
t790 = -qJ(5) * t1443 + t1266;
t705 = t1236 * t790 + t1238 * t789 + t1498;
t711 = -t1236 * t789 + t1238 * t790 - t1508;
t664 = -t1241 * t705 + t1245 * t711 - t1521;
t762 = -pkin(4) * t1445 - qJ(5) * t1448 + t788;
t1274 = t1242 * t664 + t1246 * t762 + t1534;
t722 = t1498 + t760;
t731 = -t759 - t1508;
t677 = -t1241 * t722 + t1245 * t731 - t1521;
t1273 = t1242 * t677 + t1246 * t788 + t1534;
t821 = (t1447 - t1133) * pkin(4) + t1500;
t769 = t1238 * t821 + t1349 * t1447 - t1532;
t779 = qJ(5) * t1401 - t1236 * t821 + t1533;
t697 = -t1241 * t769 + t1245 * t779 + t1563;
t724 = -pkin(4) * t1259 + qJ(5) * t1075 - t1550 + t807;
t1272 = t1242 * t697 + t1246 * t724 + t1575;
t820 = pkin(4) * t1133 - t1500 + t1507;
t772 = t1530 + t1236 * t820 + (pkin(3) + t1423) * t1446;
t781 = t1238 * t820 - t1424 * t1446 + t1531;
t701 = -t1241 * t772 + t1245 * t781 - t1562;
t738 = pkin(4) * t1112 + 0.2e1 * t1405 + 0.2e1 * t1402 + (t1260 + t1196) * qJ(5) - t1295 + t1551;
t1271 = t1242 * t701 + t1246 * t738 + t1574;
t853 = -pkin(3) * t1447 - t1417 + t1532;
t884 = t1418 - t1533;
t748 = -t1241 * t853 + t1245 * t884 - t1563;
t763 = t1550 + t839;
t1270 = t1242 * t748 + t1246 * t763 - t1575;
t856 = -pkin(3) * t1446 + t1418 - t1530;
t889 = t1417 - t1531;
t761 = -t1241 * t856 + t1245 * t889 + t1562;
t775 = -t1551 + t840;
t1269 = t1242 * t761 + t1246 * t775 - t1574;
t1053 = t1141 * t1241 + t1453;
t949 = -pkin(2) * t1053 + t997;
t982 = -pkin(9) * t1053 + t1394;
t985 = t1054 * t1246 - t1101 * t1242;
t1268 = pkin(8) * t985 + t1242 * t982 + t1246 * t949;
t1076 = t1163 * t1245 + t1391;
t952 = -pkin(2) * t1076 + t998;
t988 = -pkin(9) * t1076 + t1393;
t989 = t1077 * t1246 + t1103 * t1242;
t1267 = pkin(8) * t989 + t1242 * t988 + t1246 * t952;
t1113 = t1174 * t1242 + t1175 * t1246;
t1265 = pkin(8) * t1113 + t1074;
t1019 = t1105 * t1245 - t1106 * t1241;
t859 = -pkin(9) * t1019 - t897;
t970 = t1021 * t1246 - t1122 * t1242;
t1263 = pkin(8) * t970 - t1019 * t1425 + t1242 * t859;
t870 = t1091 * t1242 + t1246 * t898;
t1262 = pkin(8) * t870 + t1343 * t897;
t1232 = t1237 * t1233;
t1218 = qJDD(1) * t1243 + t1247 * t1248;
t1208 = t1365 * t1373;
t1207 = (t1234 - t1235) * t1373;
t1203 = -pkin(7) * t1218 + g(3) * t1247;
t1178 = t1365 * t1362;
t1173 = (t1363 + (qJD(2) + t1228) * t1406) * t1237;
t1168 = t1201 * t1246 - t1234 * t1362;
t1167 = -t1202 * t1242 - t1235 * t1362;
t1165 = t1205 * t1246 - t1382;
t1164 = -t1204 * t1242 + t1379;
t1140 = (t1172 * t1239 + t1232 * t1367) * t1242;
t1139 = (-t1232 * t1242 * t1248 + t1456) * t1246;
t1117 = (t1191 * t1245 - t1192 * t1241) * t1221;
t1116 = (t1191 * t1241 + t1192 * t1245) * t1221;
t1114 = -t1172 * t1242 + t1176 * t1246;
t1110 = t1237 * t1176 + t1239 * t1297;
t1109 = -t1237 * t1175 + t1239 * t1299;
t1108 = -t1237 * t1174 + t1239 * t1298;
t1107 = t1237 * t1297 - t1456;
t1100 = -t1237 * t1173 + t1239 * t1300;
t1099 = t1239 * t1173 + t1237 * t1300;
t1097 = t1138 * t1241 - t1192 * t1375;
t1095 = -t1191 * t1376 - t1245 * t1254;
t1094 = t1117 * t1246 - t1383;
t1090 = -t1237 * t1207 + t1239 * t1302;
t1089 = t1237 * t1208 + t1239 * t1301;
t1088 = -t1239 * t1208 + t1237 * t1301;
t1082 = t1170 * t1241 - t1390;
t1081 = t1171 * t1245 + t1455;
t1048 = -t1110 * t1243 + t1166 * t1247;
t1047 = t1110 * t1247 + t1166 * t1243;
t1044 = t1098 * t1246 + t1355;
t1043 = t1096 * t1246 - t1355;
t1042 = -t1100 * t1243 + t1161 * t1247;
t1041 = t1100 * t1247 + t1161 * t1243;
t1040 = t1237 * t1179 + t1239 * t1303;
t1039 = -t1239 * t1179 + t1237 * t1303;
t1035 = -t1116 * t1237 + t1117 * t1370 + t1183;
t1034 = -t1089 * t1243 + t1113 * t1247;
t1033 = t1089 * t1247 + t1113 * t1243;
t1018 = t1101 * t1241 + t1103 * t1245;
t1000 = t1084 * t1246 - t1106 * t1242;
t999 = t1083 * t1246 - t1105 * t1242;
t990 = -t1369 + (-t1107 * t1237 - t1110 * t1239) * pkin(8);
t984 = -t1368 + (-t1099 * t1237 - t1100 * t1239) * pkin(8);
t983 = -pkin(1) * t1107 + t1237 * t1143 + t1239 * t1336;
t981 = t1020 * t1246 - t1162 * t1242;
t980 = -pkin(1) * t1099 + t1237 * t1144 + t1239 * t1337;
t972 = -t1237 * t1097 + t1239 * t1283;
t971 = -t1237 * t1095 + t1239 * t1284;
t962 = pkin(8) * t1074 * t1239 - pkin(1) * t1039;
t961 = -t1040 * t1243 + t1074 * t1247;
t960 = t1040 * t1247 + t1074 * t1243;
t957 = -pkin(1) * t1088 + t1239 * t1265;
t956 = -pkin(2) * t1103 + pkin(9) * t1077 + t1394;
t955 = -t1237 * t1082 + t1239 * t1304;
t954 = -t1237 * t1081 + t1239 * t1305;
t953 = (-t1039 * t1237 - t1040 * t1239) * pkin(8);
t951 = pkin(2) * t1101 + pkin(9) * t1054 - t1393;
t950 = (-t1088 * t1237 - t1089 * t1239) * pkin(8) - t1303;
t947 = -t1237 * t1076 + t1239 * t1306;
t946 = t1239 * t1076 + t1237 * t1306;
t933 = -t1237 * t1053 + t1239 * t1307;
t932 = t1239 * t1053 + t1237 * t1307;
t892 = -t1237 * t1018 + t1239 * t1309;
t888 = -t1237 * t1019 + t1239 * t1308;
t887 = t1239 * t1019 + t1237 * t1308;
t871 = -pkin(2) * t1091 + pkin(9) * t898;
t869 = -t1243 * t947 + t1247 * t989;
t868 = t1243 * t989 + t1247 * t947;
t861 = -t1243 * t933 + t1247 * t985;
t860 = t1243 * t985 + t1247 * t933;
t854 = pkin(2) * t1122 + pkin(9) * t1021 + t898;
t846 = -t1243 * t888 + t1247 * t970;
t845 = t1243 * t970 + t1247 * t888;
t828 = t1241 * t920 + t1245 * t919;
t809 = -t1237 * t897 + t1239 * t1311;
t808 = t1237 * t1311 + t1239 * t897;
t797 = t1241 * t883 + t1245 * t881;
t796 = t1241 * t882 + t1245 * t880;
t795 = -t1242 * t974 + t1246 * t829;
t782 = -t1242 * t952 + t1246 * t988 + (-t1237 * t946 - t1239 * t947) * pkin(8);
t778 = -t1242 * t949 + t1246 * t982 + (-t1237 * t932 - t1239 * t933) * pkin(8);
t777 = -t1242 * t935 + t1246 * t799;
t776 = -t1242 * t936 + t1246 * t798;
t773 = -pkin(1) * t946 - t1237 * t956 + t1239 * t1267;
t771 = -t1243 * t809 + t1247 * t870;
t770 = t1243 * t870 + t1247 * t809;
t768 = -pkin(1) * t932 - t1237 * t951 + t1239 * t1268;
t765 = t1241 * t844 + t1245 * t842;
t764 = t1241 * t843 + t1245 * t841;
t746 = t1241 * t823 + t1245 * t822;
t741 = t1241 * t889 + t1245 * t856 - t1549;
t740 = t1019 * t1426 + t1246 * t859 + (-t1237 * t887 - t1239 * t888) * pkin(8);
t737 = -t1237 * t828 + t1239 * t1324;
t734 = t1241 * t884 + t1245 * t853 - t1548;
t733 = -t1242 * t910 + t1246 * t767;
t732 = -t1242 * t908 + t1246 * t766;
t720 = -pkin(1) * t887 - t1237 * t854 + t1239 * t1263;
t717 = -t1237 * t797 + t1239 * t1325;
t716 = -t1237 * t796 + t1239 * t1326;
t715 = -t1242 * t851 + t1246 * t747;
t706 = t1342 * t897 + (-t1237 * t808 - t1239 * t809) * pkin(8);
t704 = -pkin(1) * t808 - t1237 * t871 + t1239 * t1262;
t695 = t1241 * t781 + t1245 * t772 + t1549;
t694 = -t1237 * t765 + t1239 * t1327;
t693 = -t1237 * t764 + t1239 * t1328;
t692 = t1241 * t779 + t1245 * t769 + t1548;
t691 = -t1237 * t757 + t1239 * t1329;
t690 = t1237 * t1329 + t1239 * t757;
t689 = -t1237 * t755 + t1239 * t1330;
t688 = t1237 * t1330 + t1239 * t755;
t684 = -t1237 * t746 + t1239 * t1331;
t683 = -t1237 * t735 + t1239 * t1332;
t682 = t1237 * t1332 + t1239 * t735;
t675 = t1241 * t731 + t1245 * t722 + t1518;
t673 = -t1242 * t775 + t1246 * t761 + t1587;
t672 = -t1242 * t763 + t1246 * t748 + t1586;
t669 = -t1243 * t691 + t1247 * t723;
t668 = t1243 * t723 + t1247 * t691;
t667 = -t1243 * t689 + t1247 * t721;
t666 = t1243 * t721 + t1247 * t689;
t663 = -t1237 * t741 + t1239 * t1269 + t1583;
t662 = t1241 * t711 + t1245 * t705 + t1518;
t660 = -t1237 * t702 + t1239 * t1333;
t659 = t1237 * t1333 + t1239 * t702;
t656 = -pkin(2) * t979 + pkin(9) * t703 - qJ(4) * t1413 + t1245 * t739;
t654 = -t1243 * t683 + t1247 * t712;
t653 = t1243 * t712 + t1247 * t683;
t651 = -t1237 * t734 + t1239 * t1270 + t1585;
t650 = -t1242 * t738 + t1246 * t701 - t1587;
t649 = -t1242 * t724 + t1246 * t697 - t1586;
t646 = -t1237 * t686 + t1239 * t1334;
t645 = t1237 * t1334 + t1239 * t686;
t641 = -t1242 * t788 + t1246 * t677 + t1537;
t640 = -t1243 * t660 + t1247 * t696;
t639 = t1243 * t696 + t1247 * t660;
t638 = -t1237 * t695 + t1239 * t1271 - t1583;
t636 = -t1237 * t692 + t1239 * t1272 - t1585;
t634 = -t1242 * t762 + t1246 * t664 + t1537;
t631 = -pkin(2) * t855 + pkin(9) * t687 + t1241 * t698 + t1245 * t685;
t630 = -t1243 * t646 + t1247 * t679;
t629 = t1243 * t679 + t1247 * t646;
t628 = -t1237 * t675 + t1239 * t1273 - t1544;
t625 = -pkin(2) * t891 + pkin(9) * t758 + t1241 * t658 + t1245 * t655;
t624 = -pkin(2) * t886 + pkin(9) * t756 + t1241 * t657 + t1245 * t652;
t622 = -t1237 * t662 + t1239 * t1274 - t1544;
t620 = -pkin(2) * t852 + pkin(9) * t736 + t1241 * t647 + t1245 * t642;
t619 = -t1242 * t678 + t1246 * t661 + (-t1237 * t659 - t1239 * t660) * pkin(8);
t617 = -t1242 * t676 + t1246 * t627 + (-t1237 * t690 - t1239 * t691) * pkin(8);
t616 = -pkin(1) * t659 - t1237 * t656 + t1239 * t1275;
t614 = -t1237 * t632 + t1239 * t1335;
t613 = t1237 * t1335 + t1239 * t632;
t612 = -t1242 * t674 + t1246 * t626 + (-t1237 * t688 - t1239 * t689) * pkin(8);
t610 = -t1242 * t648 + t1246 * t635 + (-t1237 * t645 - t1239 * t646) * pkin(8);
t609 = -t1242 * t644 + t1246 * t621 + (-t1237 * t682 - t1239 * t683) * pkin(8);
t608 = -pkin(1) * t690 - t1237 * t625 + t1239 * t1277;
t607 = -pkin(1) * t688 - t1237 * t624 + t1239 * t1278;
t606 = -t1243 * t614 + t1247 * t623;
t605 = t1243 * t623 + t1247 * t614;
t604 = -pkin(1) * t645 - t1237 * t631 + t1239 * t1276;
t603 = -pkin(1) * t682 - t1237 * t620 + t1239 * t1279;
t601 = -pkin(2) * t681 + pkin(9) * t633 + t1241 * t618 + t1245 * t611;
t600 = -t1242 * t615 + t1246 * t602 + (-t1237 * t613 - t1239 * t614) * pkin(8);
t599 = -pkin(1) * t613 - t1237 * t601 + t1239 * t1280;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1218, -t1219, 0, t1181, 0, 0, 0, 0, 0, 0, t1048, t1042, t1034, t961, 0, 0, 0, 0, 0, 0, t861, t869, t846, t771, 0, 0, 0, 0, 0, 0, t729, t751, t1539, t640, 0, 0, 0, 0, 0, 0, t1539, -t729, -t751, t630, 0, 0, 0, 0, 0, 0, t667, t669, t654, t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1219, -t1218, 0, t1180, 0, 0, 0, 0, 0, 0, t1047, t1041, t1033, t960, 0, 0, 0, 0, 0, 0, t860, t868, t845, t770, 0, 0, 0, 0, 0, 0, -t728, -t750, t1538, t639, 0, 0, 0, 0, 0, 0, t1538, t728, t750, t629, 0, 0, 0, 0, 0, 0, t666, t668, t653, t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1107, t1099, t1088, t1039, 0, 0, 0, 0, 0, 0, t932, t946, t887, t808, 0, 0, 0, 0, 0, 0, -t785, -t792, t1525, t659, 0, 0, 0, 0, 0, 0, t1525, t785, t792, t645, 0, 0, 0, 0, 0, 0, t688, t690, t682, t613; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1219, 0, -t1218, 0, t1341, -t1203, -t1180, -pkin(7) * t1180, -t1140 * t1243 + t1168 * t1247, -t1090 * t1243 + t1114 * t1247, -t1108 * t1243 + t1164 * t1247, -t1139 * t1243 + t1167 * t1247, -t1109 * t1243 + t1165 * t1247, t1247 * t1178 + t1243 * t1296, -pkin(7) * t1047 - t1243 * t983 + t1247 * t990, -pkin(7) * t1041 - t1243 * t980 + t1247 * t984, -pkin(7) * t1033 - t1243 * t957 + t1247 * t950, -pkin(7) * t960 - t1243 * t962 + t1247 * t953, t1044 * t1247 - t1243 * t972, -t1243 * t892 + t1247 * t981, -t1243 * t954 + t1247 * t999, t1043 * t1247 - t1243 * t971, t1000 * t1247 - t1243 * t955, -t1035 * t1243 + t1094 * t1247, -pkin(7) * t860 - t1243 * t768 + t1247 * t778, -pkin(7) * t868 - t1243 * t773 + t1247 * t782, -pkin(7) * t845 - t1243 * t720 + t1247 * t740, -pkin(7) * t770 - t1243 * t704 + t1247 * t706, t1515, t1547, t1580, t1514, t1581, t1490, -t1243 * t651 + t1247 * t672 + t1591, -t1243 * t663 + t1247 * t673 + t1589, -t1243 * t628 + t1247 * t641 - t1561, -pkin(7) * t639 - t1243 * t616 + t1247 * t619, t1490, -t1580, -t1581, t1515, t1547, t1514, -t1243 * t622 + t1247 * t634 - t1561, -t1243 * t636 + t1247 * t649 - t1591, -t1243 * t638 + t1247 * t650 - t1589, -pkin(7) * t629 - t1243 * t604 + t1247 * t610, -t1243 * t717 + t1247 * t777, -t1243 * t684 + t1247 * t715, -t1243 * t694 + t1247 * t733, -t1243 * t716 + t1247 * t776, -t1243 * t693 + t1247 * t732, -t1243 * t737 + t1247 * t795, -pkin(7) * t666 - t1243 * t607 + t1247 * t612, -pkin(7) * t668 - t1243 * t608 + t1247 * t617, -pkin(7) * t653 - t1243 * t603 + t1247 * t609, -pkin(7) * t605 - t1243 * t599 + t1247 * t600; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1218, 0, t1219, 0, t1203, t1341, t1181, pkin(7) * t1181, t1140 * t1247 + t1168 * t1243, t1090 * t1247 + t1114 * t1243, t1108 * t1247 + t1164 * t1243, t1139 * t1247 + t1167 * t1243, t1109 * t1247 + t1165 * t1243, t1243 * t1178 - t1247 * t1296, pkin(7) * t1048 + t1243 * t990 + t1247 * t983, pkin(7) * t1042 + t1243 * t984 + t1247 * t980, pkin(7) * t1034 + t1243 * t950 + t1247 * t957, pkin(7) * t961 + t1243 * t953 + t1247 * t962, t1044 * t1243 + t1247 * t972, t1243 * t981 + t1247 * t892, t1243 * t999 + t1247 * t954, t1043 * t1243 + t1247 * t971, t1000 * t1243 + t1247 * t955, t1035 * t1247 + t1094 * t1243, pkin(7) * t861 + t1243 * t778 + t1247 * t768, pkin(7) * t869 + t1243 * t782 + t1247 * t773, pkin(7) * t846 + t1243 * t740 + t1247 * t720, pkin(7) * t771 + t1243 * t706 + t1247 * t704, t1511, t1546, -t1578, t1510, -t1579, t1491, t1243 * t672 + t1247 * t651 + t1590, t1243 * t673 + t1247 * t663 + t1588, t1243 * t641 + t1247 * t628 + t1560, pkin(7) * t640 + t1243 * t619 + t1247 * t616, t1491, t1578, t1579, t1511, t1546, t1510, t1243 * t634 + t1247 * t622 + t1560, t1243 * t649 + t1247 * t636 - t1590, t1243 * t650 + t1247 * t638 - t1588, pkin(7) * t630 + t1243 * t610 + t1247 * t604, t1243 * t777 + t1247 * t717, t1243 * t715 + t1247 * t684, t1243 * t733 + t1247 * t694, t1243 * t776 + t1247 * t716, t1243 * t732 + t1247 * t693, t1243 * t795 + t1247 * t737, pkin(7) * t667 + t1243 * t612 + t1247 * t607, pkin(7) * t669 + t1243 * t617 + t1247 * t608, pkin(7) * t654 + t1243 * t609 + t1247 * t603, pkin(7) * t606 + t1243 * t600 + t1247 * t599; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1223, t1224, 0, 0, (t1233 * t1246 * t1310 + t1201 * t1237) * t1242, t1239 * t1207 + t1237 * t1302, t1239 * t1174 + t1237 * t1298, (t1202 * t1237 - t1310 * t1374) * t1246, t1239 * t1175 + t1237 * t1299, t1239 * t1344, pkin(1) * t1110 - t1239 * t1143 + t1237 * t1336, pkin(1) * t1100 - t1239 * t1144 + t1237 * t1337, pkin(1) * t1089 + t1237 * t1265, pkin(1) * t1040 + t1074 * t1422, t1239 * t1097 + t1237 * t1283, t1239 * t1018 + t1237 * t1309, t1239 * t1081 + t1237 * t1305, t1239 * t1095 + t1237 * t1284, t1239 * t1082 + t1237 * t1304, t1116 * t1239 + t1117 * t1372 + t1182, pkin(1) * t933 + t1237 * t1268 + t1239 * t951, pkin(1) * t947 + t1237 * t1267 + t1239 * t956, pkin(1) * t888 + t1237 * t1263 + t1239 * t854, pkin(1) * t809 + t1237 * t1262 + t1239 * t871, t1496, t1541, -t1565, t1497, -t1564, t1461, t1237 * t1270 + t1239 * t734 - t1584, t1237 * t1269 + t1239 * t741 - t1582, t1237 * t1273 + t1239 * t675 + t1545, pkin(1) * t660 + t1237 * t1275 + t1239 * t656, t1461, t1565, t1564, t1496, t1541, t1497, t1237 * t1274 + t1239 * t662 + t1545, t1237 * t1272 + t1239 * t692 + t1584, t1237 * t1271 + t1239 * t695 + t1582, pkin(1) * t646 + t1237 * t1276 + t1239 * t631, t1237 * t1325 + t1239 * t797, t1237 * t1331 + t1239 * t746, t1237 * t1327 + t1239 * t765, t1237 * t1326 + t1239 * t796, t1237 * t1328 + t1239 * t764, t1237 * t1324 + t1239 * t828, pkin(1) * t689 + t1237 * t1278 + t1239 * t624, pkin(1) * t691 + t1237 * t1277 + t1239 * t625, pkin(1) * t683 + t1237 * t1279 + t1239 * t620, pkin(1) * t614 + t1237 * t1280 + t1239 * t601;];
tauB_reg  = t1;
