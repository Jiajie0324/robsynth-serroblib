% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:53:55
% EndTime: 2019-03-09 15:54:10
% DurationCPUTime: 5.57s
% Computational Cost: add. (8485->415), mult. (22281->749), div. (0->0), fcn. (21848->10), ass. (0->201)
t109 = sin(qJ(3));
t112 = cos(qJ(3));
t215 = sin(pkin(11));
t216 = cos(pkin(11));
t87 = t216 * t109 + t215 * t112;
t106 = sin(pkin(6));
t245 = -0.2e1 * t106;
t107 = cos(pkin(6));
t113 = cos(qJ(2));
t233 = pkin(1) * t113;
t196 = t107 * t233;
t110 = sin(qJ(2));
t214 = t106 * t110;
t95 = pkin(8) * t214;
t244 = -t95 + t196;
t208 = qJD(2) * t110;
t230 = -qJ(4) - pkin(9);
t183 = qJD(3) * t230;
t142 = t112 * qJD(4) + t109 * t183;
t143 = -t109 * qJD(4) + t112 * t183;
t57 = t216 * t142 + t215 * t143;
t86 = t215 * t109 - t216 * t112;
t70 = t86 * t230;
t243 = t106 * (-t113 * t57 + t70 * t208);
t56 = t215 * t142 - t216 * t143;
t69 = t87 * t230;
t242 = t106 * (-t113 * t56 - t69 * t208);
t80 = t86 * qJD(3);
t241 = (t113 * t80 + t87 * t208) * t106;
t79 = t87 * qJD(3);
t240 = (-t113 * t79 + t86 * t208) * t106;
t213 = t106 * t113;
t84 = t107 * t110 * pkin(1) + pkin(8) * t213;
t175 = t107 * pkin(9) + t84;
t160 = t109 * t175;
t162 = -pkin(2) * t113 - pkin(9) * t110 - pkin(1);
t82 = t107 * t109 + t112 * t214;
t118 = -t160 - t82 * qJ(4) + (-t113 * pkin(3) + t112 * t162) * t106;
t147 = t162 * t106;
t53 = t109 * t147 + t112 * t175;
t212 = t109 * t110;
t189 = t106 * t212;
t81 = -t107 * t112 + t189;
t121 = -t81 * qJ(4) + t53;
t24 = t216 * t118 - t215 * t121;
t22 = pkin(4) * t213 - t24;
t60 = -t215 * t81 + t216 * t82;
t115 = t60 * pkin(5) + pkin(10) * t213 + t22;
t210 = qJD(2) * t106;
t186 = t113 * t210;
t67 = qJD(3) * t82 + t109 * t186;
t68 = -qJD(3) * t189 + (qJD(3) * t107 + t186) * t112;
t43 = -t215 * t67 + t216 * t68;
t78 = t84 * qJD(2);
t51 = t67 * pkin(3) + t78;
t122 = -t43 * qJ(5) - t60 * qJD(5) + t51;
t234 = pkin(4) + pkin(10);
t42 = t215 * t68 + t216 * t67;
t239 = -qJD(6) * t115 - t234 * t42 - t122;
t135 = t87 * pkin(5) - t69;
t207 = qJD(3) * t109;
t195 = pkin(3) * t207;
t138 = t80 * qJ(5) - t87 * qJD(5) + t195;
t238 = -qJD(6) * t135 - t234 * t79 - t138;
t139 = t244 * qJD(2);
t108 = sin(qJ(6));
t104 = t108 ^ 2;
t111 = cos(qJ(6));
t105 = t111 ^ 2;
t178 = (t104 - t105) * qJD(6);
t237 = 0.2e1 * t106;
t236 = 0.2e1 * qJD(2);
t235 = 0.2e1 * qJD(5);
t232 = pkin(9) * t106;
t231 = pkin(9) * t113;
t159 = qJD(3) * t175;
t209 = qJD(2) * t109;
t125 = -t112 * t159 - t196 * t209;
t140 = t162 * t207;
t116 = -t68 * qJ(4) - t82 * qJD(4) + (-t140 + (-t112 * t231 + (t112 * pkin(2) + t109 * pkin(8) + pkin(3)) * t110) * qJD(2)) * t106 + t125;
t141 = t112 * t147;
t172 = pkin(2) * t110 - t231;
t36 = -t172 * t106 * t209 - qJD(3) * t141 + t109 * t159 - t112 * t139;
t123 = -t67 * qJ(4) - t81 * qJD(4) - t36;
t11 = t215 * t116 + t216 * t123;
t25 = t215 * t118 + t216 * t121;
t229 = t104 * t79;
t77 = t105 * t79;
t59 = t215 * t82 + t216 * t81;
t48 = t108 * t213 + t111 * t59;
t228 = t108 * t48;
t188 = t111 * t213;
t49 = -t108 * t59 + t188;
t227 = t108 * t49;
t101 = -t216 * pkin(3) - pkin(4);
t98 = -pkin(10) + t101;
t226 = t108 * t98;
t225 = t111 * t48;
t224 = t111 * t49;
t223 = t111 * t79;
t222 = t111 * t98;
t94 = t106 * t208;
t28 = -t111 * t42 - qJD(6) * t188 + (qJD(6) * t59 + t94) * t108;
t221 = t28 * t108;
t29 = qJD(6) * t48 + t108 * t42 + t111 * t94;
t220 = t29 * t108;
t219 = t29 * t111;
t218 = t67 * t112;
t217 = t68 * t109;
t206 = qJD(3) * t112;
t205 = qJD(3) * t113;
t204 = qJD(5) * t113;
t203 = qJD(6) * t108;
t202 = qJD(6) * t111;
t201 = 0.2e1 * t59 * t42;
t33 = 0.2e1 * t60 * t43;
t200 = 0.2e1 * t86 * t79;
t66 = -0.2e1 * t87 * t80;
t199 = -0.2e1 * pkin(2) * qJD(3);
t99 = t215 * pkin(3) + qJ(5);
t198 = t99 * t235;
t197 = qJ(5) * t94 + t11;
t194 = t108 * t223;
t193 = t86 * t203;
t192 = t87 * t203;
t191 = t86 * t202;
t190 = t87 * t202;
t102 = -t112 * pkin(3) - pkin(2);
t103 = t106 ^ 2;
t187 = t103 * t208;
t185 = t109 * t206;
t184 = t108 * t202;
t177 = pkin(3) * t94;
t85 = t86 ^ 2;
t176 = t85 * t184;
t174 = t113 * t187;
t21 = qJ(5) * t213 - t25;
t17 = -t59 * pkin(5) - t21;
t8 = t106 * t204 - t197;
t5 = -t42 * pkin(5) - t8;
t173 = t17 * t79 + t5 * t86;
t75 = t95 + (-pkin(2) - t233) * t107;
t63 = t81 * pkin(3) + t75;
t133 = -t60 * qJ(5) + t63;
t18 = t234 * t59 + t133;
t6 = -t108 * t18 + t111 * t115;
t7 = t108 * t115 + t111 * t18;
t171 = -t108 * t6 + t111 * t7;
t170 = t42 * t86 + t59 * t79;
t169 = t43 * t86 + t60 * t79;
t27 = t43 * t87 - t60 * t80;
t45 = -t79 * pkin(5) + t57;
t58 = -t86 * pkin(5) + t70;
t168 = t45 * t86 + t58 * t79;
t167 = -t69 * t56 + t70 * t57;
t166 = t87 * t79 - t80 * t86;
t165 = -qJD(5) * t86 - t99 * t79;
t161 = -t87 * qJ(5) + t102;
t50 = t234 * t86 + t161;
t34 = -t108 * t50 + t111 * t135;
t35 = t108 * t135 + t111 * t50;
t164 = -t108 * t34 + t111 * t35;
t163 = -t224 + t228;
t158 = -t113 * t42 + t59 * t208;
t157 = -t113 * t43 + t60 * t208;
t32 = -t108 * t43 - t60 * t202;
t152 = -t111 * t43 + t60 * t203;
t62 = t108 * t80 - t190;
t151 = t111 * t80 + t192;
t149 = -0.2e1 * t42 * t60 - 0.2e1 * t43 * t59;
t148 = 0.2e1 * t166;
t146 = t109 * t205 + t112 * t208;
t145 = t109 * t208 - t112 * t205;
t144 = t45 + (t86 * t99 - t87 * t98) * qJD(6);
t137 = -t70 * t42 - t69 * t43 + t56 * t60 - t57 * t59;
t136 = -t87 * t42 + t80 * t59 - t169;
t134 = -qJD(6) * t58 + t80 * t98 - t165;
t131 = 0.2e1 * t56 * t87 - 0.2e1 * t57 * t86 + 0.2e1 * t69 * t80 - 0.2e1 * t70 * t79;
t120 = -t216 * t116 + t215 * t123;
t117 = t43 * pkin(5) - t234 * t94 + t120;
t1 = -t108 * t117 + t239 * t111 + t18 * t203;
t2 = t239 * t108 + t111 * t117 - t18 * t202;
t130 = t171 * qJD(6) - t1 * t108 + t2 * t111;
t129 = -t1 * t111 - t2 * t108 + (-t108 * t7 - t111 * t6) * qJD(6);
t124 = -t80 * pkin(5) + t56;
t13 = -t108 * t124 + t238 * t111 + t50 * t203;
t14 = t238 * t108 + t111 * t124 - t50 * t202;
t3 = qJD(6) * t164 - t13 * t108 + t14 * t111;
t127 = -t14 * t108 - t13 * t111 + (-t108 * t35 - t111 * t34) * qJD(6);
t37 = (-t140 + (pkin(8) * t212 + t112 * t172) * qJD(2)) * t106 + t125;
t52 = -t160 + t141;
t126 = -t37 * t109 - t36 * t112 + (-t109 * t53 - t112 * t52) * qJD(3);
t89 = -0.2e1 * t174;
t64 = t86 * pkin(4) + t161;
t47 = t79 * pkin(4) + t138;
t46 = -t86 * t178 + t194;
t30 = t59 * pkin(4) + t133;
t26 = t111 * t28;
t15 = t42 * pkin(4) + t122;
t9 = -pkin(4) * t94 + t120;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t174 (-t110 ^ 2 + t113 ^ 2) * t103 * t236, 0.2e1 * t107 * t186, t89, -0.2e1 * t107 * t94, 0, -0.2e1 * pkin(1) * t187 - 0.2e1 * t78 * t107 (-t103 * t233 - t107 * t244) * t236, -0.2e1 * t84 * t110 * t210 + 0.2e1 * t78 * t214, 0.2e1 * t139 * t84 - 0.2e1 * t244 * t78, 0.2e1 * t82 * t68, -0.2e1 * t67 * t82 - 0.2e1 * t68 * t81 (-t113 * t68 + t82 * t208) * t237, 0.2e1 * t81 * t67 (t113 * t67 - t208 * t81) * t237, t89, 0.2e1 * t75 * t67 + 0.2e1 * t78 * t81 + 0.2e1 * (-t113 * t37 + t208 * t52) * t106, 0.2e1 * t75 * t68 + 0.2e1 * t78 * t82 + 0.2e1 * (-t113 * t36 - t208 * t53) * t106, 0.2e1 * t36 * t81 - 0.2e1 * t37 * t82 - 0.2e1 * t52 * t68 - 0.2e1 * t53 * t67, -0.2e1 * t36 * t53 + 0.2e1 * t37 * t52 + 0.2e1 * t75 * t78, t33, t149, t157 * t237, t201, t158 * t245, t89, 0.2e1 * t63 * t42 + 0.2e1 * t51 * t59 + 0.2e1 * (t113 * t120 + t208 * t24) * t106, 0.2e1 * t63 * t43 + 0.2e1 * t51 * t60 + 0.2e1 * (t11 * t113 - t208 * t25) * t106, -0.2e1 * t11 * t59 + 0.2e1 * t120 * t60 - 0.2e1 * t24 * t43 - 0.2e1 * t25 * t42, 0.2e1 * t11 * t25 - 0.2e1 * t120 * t24 + 0.2e1 * t51 * t63, t89, t157 * t245, t158 * t237, t33, t149, t201, 0.2e1 * t21 * t42 + 0.2e1 * t22 * t43 + 0.2e1 * t59 * t8 + 0.2e1 * t60 * t9, -0.2e1 * t15 * t59 - 0.2e1 * t30 * t42 + 0.2e1 * (-t113 * t9 + t208 * t22) * t106, -0.2e1 * t15 * t60 - 0.2e1 * t30 * t43 + 0.2e1 * (t113 * t8 - t208 * t21) * t106, 0.2e1 * t15 * t30 + 0.2e1 * t21 * t8 + 0.2e1 * t22 * t9, -0.2e1 * t49 * t29, 0.2e1 * t28 * t49 + 0.2e1 * t29 * t48, 0.2e1 * t29 * t60 - 0.2e1 * t43 * t49, -0.2e1 * t48 * t28, -0.2e1 * t28 * t60 + 0.2e1 * t43 * t48, t33, 0.2e1 * t17 * t28 + 0.2e1 * t2 * t60 + 0.2e1 * t43 * t6 - 0.2e1 * t48 * t5, 0.2e1 * t1 * t60 + 0.2e1 * t17 * t29 - 0.2e1 * t43 * t7 - 0.2e1 * t49 * t5, -0.2e1 * t1 * t48 + 0.2e1 * t2 * t49 - 0.2e1 * t28 * t7 - 0.2e1 * t29 * t6, -0.2e1 * t1 * t7 + 0.2e1 * t17 * t5 + 0.2e1 * t2 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, 0, -t94, 0, -t78, -t139, 0, 0, t82 * t206 + t217, -t109 * t67 + t68 * t112 + (-t109 * t82 - t112 * t81) * qJD(3), t145 * t106, t207 * t81 - t218, t146 * t106, 0, -pkin(2) * t67 - t78 * t112 - t145 * t232 + t207 * t75, -pkin(2) * t68 + t78 * t109 - t146 * t232 + t206 * t75 (t217 - t218 + (t109 * t81 + t112 * t82) * qJD(3)) * pkin(9) + t126, -t78 * pkin(2) + pkin(9) * t126, t27, t136, t241, t170, -t240, 0, t102 * t42 + t195 * t59 + t51 * t86 + t63 * t79 - t242, t102 * t43 + t195 * t60 + t51 * t87 - t63 * t80 - t243, -t11 * t86 + t120 * t87 + t24 * t80 - t25 * t79 + t137, t51 * t102 + t11 * t70 - t120 * t69 + t195 * t63 - t24 * t56 + t25 * t57, 0, -t241, t240, t27, t136, t170, t21 * t79 - t22 * t80 + t8 * t86 + t9 * t87 + t137, -t15 * t86 - t30 * t79 - t64 * t42 - t47 * t59 + t242, -t15 * t87 + t30 * t80 - t64 * t43 - t47 * t60 + t243, t15 * t64 - t21 * t57 + t22 * t56 + t30 * t47 - t69 * t9 - t70 * t8, -t49 * t191 + (t29 * t86 - t49 * t79) * t108, t163 * t79 + (-t221 + t219 + (t225 + t227) * qJD(6)) * t86, t108 * t169 + t191 * t60 + t29 * t87 + t49 * t80, -t48 * t193 + (-t28 * t86 + t48 * t79) * t111, t111 * t169 - t193 * t60 - t28 * t87 - t48 * t80, t27, -t111 * t173 + t14 * t60 + t17 * t193 + t2 * t87 + t58 * t28 + t34 * t43 - t45 * t48 - t6 * t80, t1 * t87 + t108 * t173 + t13 * t60 + t17 * t191 + t58 * t29 - t35 * t43 - t45 * t49 + t7 * t80, t129 * t86 - t13 * t48 + t14 * t49 + t171 * t79 - t35 * t28 - t34 * t29, -t1 * t35 - t13 * t7 + t14 * t6 + t17 * t45 + t2 * t34 + t5 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t185, 0.2e1 * (-t109 ^ 2 + t112 ^ 2) * qJD(3), 0, -0.2e1 * t185, 0, 0, t109 * t199, t112 * t199, 0, 0, t66, -t148, 0, t200, 0, 0, 0.2e1 * t102 * t79 + 0.2e1 * t195 * t86, -0.2e1 * t102 * t80 + 0.2e1 * t195 * t87, t131, 0.2e1 * t102 * t195 + 0.2e1 * t167, 0, 0, 0, t66, -t148, t200, t131, -0.2e1 * t47 * t86 - 0.2e1 * t64 * t79, -0.2e1 * t47 * t87 + 0.2e1 * t64 * t80, 0.2e1 * t47 * t64 + 0.2e1 * t167, 0.2e1 * t229 * t86 + 0.2e1 * t176, -0.2e1 * t178 * t85 + 0.4e1 * t194 * t86, 0.2e1 * t108 * t166 + 0.2e1 * t190 * t86, 0.2e1 * t77 * t86 - 0.2e1 * t176, 0.2e1 * t111 * t166 - 0.2e1 * t192 * t86, t66, -0.2e1 * t111 * t168 + 0.2e1 * t14 * t87 + 0.2e1 * t193 * t58 - 0.2e1 * t34 * t80, 0.2e1 * t108 * t168 + 0.2e1 * t13 * t87 + 0.2e1 * t191 * t58 + 0.2e1 * t35 * t80, 0.2e1 * t127 * t86 + 0.2e1 * t164 * t79, -0.2e1 * t13 * t35 + 0.2e1 * t14 * t34 + 0.2e1 * t45 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, 0, -t67, t94, t37, t36, 0, 0, 0, 0, t43, 0, -t42, t94, t216 * t177 - t120, -t177 * t215 - t11 (-t215 * t42 - t216 * t43) * pkin(3) (t11 * t215 - t120 * t216) * pkin(3), t94, -t43, t42, 0, 0, 0, -qJD(5) * t59 + t101 * t43 - t99 * t42 (-pkin(4) + t101) * t94 + t120 (t208 * t99 - 0.2e1 * t204) * t106 + t197, -t21 * qJD(5) + t9 * t101 - t8 * t99, t203 * t49 + t219, -qJD(6) * t163 - t220 - t26, -t152, -t202 * t48 + t221, t32, 0, t43 * t222 - qJD(5) * t48 + t5 * t108 + t99 * t28 + (t111 * t17 - t226 * t60) * qJD(6), -t43 * t226 - qJD(5) * t49 + t5 * t111 + t99 * t29 + (-t108 * t17 - t222 * t60) * qJD(6) (-t29 * t98 - t2) * t111 + (-t28 * t98 + t1) * t108 + ((t48 * t98 - t7) * t111 + (-t49 * t98 + t6) * t108) * qJD(6), t17 * qJD(5) + t130 * t98 + t5 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206, 0, -t207, 0, -pkin(9) * t206, pkin(9) * t207, 0, 0, 0, 0, -t80, 0, -t79, 0, -t56, -t57 (-t215 * t79 + t216 * t80) * pkin(3) (t215 * t57 - t216 * t56) * pkin(3), 0, t80, t79, 0, 0, 0, -t101 * t80 + t165, t56, t57, t70 * qJD(5) + t56 * t101 + t57 * t99, t46, -0.4e1 * t184 * t86 - t229 + t77, -t151, -t46, t62, 0, t108 * t144 - t111 * t134, t108 * t134 + t111 * t144, -t3, t58 * qJD(5) + t3 * t98 + t45 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t198, -0.2e1 * t184, 0.2e1 * t178, 0, 0.2e1 * t184, 0, 0, 0.2e1 * qJD(5) * t108 + 0.2e1 * t202 * t99, 0.2e1 * qJD(5) * t111 - 0.2e1 * t203 * t99, 0, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t43, 0, t51, 0, 0, 0, 0, 0, 0, 0, -t42, -t43, t15, 0, 0, 0, 0, 0, 0, t32, t152, t220 - t26 + (-t224 - t228) * qJD(6), t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, -t80, 0, t195, 0, 0, 0, 0, 0, 0, 0, -t79, t80, t47, 0, 0, 0, 0, 0, 0, t62, t151, t77 + t229, t127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, t94, 0, t9, 0, 0, 0, 0, 0, 0, -t152, t32, -t221 - t219 + (t225 - t227) * qJD(6), t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, 0, 0, t56, 0, 0, 0, 0, 0, 0, -t151, t62, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t28, t43, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * t79 + t191, 0, -t193 + t223, -t80, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, 0, -t202, 0, -t98 * t203, -t98 * t202, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t203, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t202, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
