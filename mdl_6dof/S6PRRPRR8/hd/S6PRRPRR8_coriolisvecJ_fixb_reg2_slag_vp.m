% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRR8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:40:38
% EndTime: 2019-03-08 22:41:00
% DurationCPUTime: 9.40s
% Computational Cost: add. (8992->575), mult. (24063->802), div. (0->0), fcn. (18912->12), ass. (0->294)
t200 = sin(pkin(7));
t206 = sin(qJ(3));
t307 = qJD(3) * t206;
t284 = t200 * t307;
t185 = pkin(3) * t284;
t210 = cos(qJ(3));
t256 = pkin(10) * t206 - qJ(4) * t210;
t305 = qJD(4) * t206;
t221 = (qJD(3) * t256 - t305) * t200;
t207 = sin(qJ(2));
t201 = sin(pkin(6));
t316 = qJD(1) * t201;
t289 = t207 * t316;
t270 = t200 * t289;
t397 = t270 - t185 - t221;
t202 = cos(pkin(7));
t326 = t207 * t210;
t211 = cos(qJ(2));
t327 = t206 * t211;
t241 = t202 * t326 + t327;
t117 = t241 * t316;
t331 = t202 * t206;
t194 = pkin(2) * t331;
t334 = t200 * t210;
t376 = pkin(4) + pkin(9);
t396 = (t334 * t376 + t194) * qJD(3) - t117;
t294 = t201 * t206 * t207;
t272 = t202 * t294;
t306 = qJD(3) * t210;
t282 = t202 * t306;
t288 = t211 * t316;
t395 = -pkin(2) * t282 - qJD(1) * t272 + t210 * t288;
t212 = -pkin(3) - pkin(10);
t343 = qJ(4) * t206;
t246 = t210 * t212 - t343;
t111 = (-pkin(2) + t246) * t200;
t205 = sin(qJ(5));
t209 = cos(qJ(5));
t303 = qJD(5) * t209;
t304 = qJD(5) * t205;
t335 = t200 * t206;
t191 = pkin(9) * t335;
t291 = -pkin(2) * t210 - pkin(3);
t97 = pkin(4) * t335 + t191 + (-pkin(10) + t291) * t202;
t366 = -t111 * t304 + t396 * t205 - t209 * t397 + t97 * t303;
t195 = t202 * qJD(4);
t344 = -t284 * t376 + t195 - t395;
t364 = qJD(2) * pkin(2);
t165 = t288 + t364;
t203 = cos(pkin(6));
t315 = qJD(1) * t203;
t290 = t200 * t315;
t166 = t210 * t290;
t330 = t202 * t210;
t319 = t165 * t330 + t166;
t394 = qJD(4) - t319;
t263 = qJD(2) * t284;
t312 = qJD(2) * t202;
t189 = qJD(3) + t312;
t314 = qJD(2) * t200;
t149 = pkin(9) * t314 + t289;
t313 = qJD(2) * t201;
t278 = qJD(1) * t313;
t265 = t207 * t278;
t248 = t206 * t265;
t264 = t210 * t278;
t251 = -qJD(3) * t166 + t149 * t307 - t165 * t282 + t202 * t248 - t211 * t264;
t45 = -t189 * qJD(4) + t251;
t34 = -pkin(4) * t263 - t45;
t280 = t210 * t303;
t281 = t205 * t307;
t89 = t189 * t304 + (t280 - t281) * t314;
t310 = qJD(2) * t210;
t286 = t200 * t310;
t266 = t205 * t286;
t90 = -qJD(5) * t266 + t189 * t303 - t209 * t263;
t18 = pkin(5) * t90 + pkin(11) * t89 + t34;
t204 = sin(qJ(6));
t208 = cos(qJ(6));
t311 = qJD(2) * t206;
t287 = t200 * t311;
t255 = qJD(5) + t287;
t324 = (pkin(4) * t314 + t149) * t206 + t394;
t52 = t189 * t212 + t324;
t188 = t202 * t315;
t75 = t188 + (qJD(2) * t246 - t165) * t200;
t30 = t205 * t52 + t209 * t75;
t22 = pkin(11) * t255 + t30;
t337 = t189 * t205;
t128 = t209 * t286 + t337;
t130 = t189 * t209 - t266;
t182 = t189 * qJ(4);
t338 = t165 * t202;
t339 = t149 * t210;
t79 = t206 * (t290 + t338) + t339;
t69 = pkin(4) * t286 + t79;
t59 = t182 + t69;
t31 = pkin(5) * t128 - pkin(11) * t130 + t59;
t252 = t204 * t22 - t208 * t31;
t298 = qJD(2) * qJD(3);
t277 = t210 * t298;
t181 = t200 * t277;
t224 = t241 * qJD(2);
t222 = t201 * t224;
t242 = t165 * t331 + t339;
t44 = qJD(1) * t222 + ((pkin(4) * t310 + t206 * t315) * t200 + t242) * qJD(3);
t318 = pkin(3) * t263 + t200 * t265;
t72 = qJD(2) * t221 + t318;
t239 = -t205 * t44 - t209 * t72 - t52 * t303 + t304 * t75;
t7 = pkin(11) * t181 - t239;
t1 = -qJD(6) * t252 + t18 * t204 + t208 * t7;
t125 = qJD(6) + t128;
t393 = t252 * t125 + t1;
t283 = t200 * t306;
t392 = pkin(11) * t283 + t366;
t143 = t202 * t205 + t209 * t334;
t103 = qJD(5) * t143 - t200 * t281;
t296 = t205 * t334;
t104 = -qJD(5) * t296 + t202 * t303 - t209 * t284;
t391 = pkin(5) * t104 + pkin(11) * t103 + t344;
t261 = pkin(5) * t209 + pkin(11) * t205;
t390 = -qJD(5) * t261 + (-t149 + (-pkin(4) - t261) * t314) * t206 - t394;
t302 = qJD(5) * t212;
t187 = pkin(3) * t287;
t112 = t256 * t314 + t187;
t43 = t209 * t112 + t205 * t69;
t389 = -pkin(11) * t286 + t209 * t302 - t43;
t29 = -t205 * t75 + t209 * t52;
t388 = -t29 * t255 - t239;
t379 = qJD(5) * t255;
t387 = -t212 * t379 + t34;
t12 = t204 * t31 + t208 * t22;
t2 = -qJD(6) * t12 + t208 * t18 - t204 * t7;
t386 = -t12 * t125 - t2;
t233 = t208 * t255;
t85 = t130 * t204 - t233;
t385 = t255 * t85;
t384 = t209 * t111 + t205 * t97;
t381 = t130 * t255;
t383 = -t90 + t381;
t382 = t128 * t255;
t320 = pkin(9) * t284 + t395;
t87 = t208 * t130 + t204 * t255;
t342 = qJD(6) * t87;
t39 = -t208 * t181 - t204 * t89 + t342;
t146 = pkin(9) * t334 + t194;
t380 = qJD(3) * t146;
t276 = t205 * t72 - t209 * t44;
t10 = -qJD(5) * t30 - t276;
t322 = t117 - t380;
t267 = t203 * t284;
t49 = t242 * qJD(3) + (t222 + t267) * qJD(1);
t378 = -t322 * t189 + t202 * t49;
t377 = (t206 * t59 + t212 * t306) * t314 + t59 * qJD(5);
t365 = -qJD(5) * t384 + t205 * t397 + t396 * t209;
t56 = pkin(11) * t335 + t384;
t132 = -t202 * qJ(4) - t146;
t110 = pkin(4) * t334 - t132;
t144 = t202 * t209 - t296;
t60 = pkin(5) * t143 - pkin(11) * t144 + t110;
t23 = -t204 * t56 + t208 * t60;
t375 = qJD(6) * t23 + t204 * t391 + t208 * t392;
t24 = t204 * t60 + t208 * t56;
t374 = -qJD(6) * t24 - t204 * t392 + t208 * t391;
t8 = -pkin(5) * t181 - t10;
t373 = t204 * t8;
t372 = t208 * t8;
t333 = t201 * t211;
t295 = t202 * t333;
t98 = -t203 * t334 - t210 * t295 + t294;
t371 = t49 * t98;
t370 = t87 * t85;
t167 = pkin(5) * t205 - pkin(11) * t209 + qJ(4);
t329 = t205 * t212;
t127 = t167 * t204 + t208 * t329;
t369 = qJD(6) * t127 + t204 * t389 + t208 * t390;
t126 = t167 * t208 - t204 * t329;
t368 = -qJD(6) * t126 + t204 * t390 - t208 * t389;
t367 = -pkin(5) * t283 - t365;
t361 = t125 * t85;
t360 = t143 * t90;
t359 = t189 * t79;
t357 = t204 * t85;
t356 = t204 * t87;
t355 = t204 * t90;
t354 = t205 * t90;
t353 = t206 * t49;
t352 = t208 * t85;
t351 = t208 * t87;
t350 = t208 * t90;
t301 = qJD(6) * t204;
t38 = -qJD(6) * t233 + t130 * t301 - t204 * t181 + t208 * t89;
t349 = t209 * t38;
t348 = t209 * t39;
t347 = t38 * t204;
t346 = t39 * t208;
t345 = t87 * t125;
t123 = -t165 * t200 + t188;
t341 = t123 * t200;
t340 = t130 * t128;
t197 = t200 ^ 2;
t213 = qJD(2) ^ 2;
t336 = t197 * t213;
t332 = t201 * t213;
t328 = t206 * t208;
t78 = t149 * t206 - t319;
t323 = qJD(4) + t78;
t321 = -t195 + t320;
t198 = t206 ^ 2;
t317 = -t210 ^ 2 + t198;
t309 = qJD(3) * t200;
t308 = qJD(3) * t205;
t300 = qJD(6) * t208;
t299 = qJD(6) * t209;
t297 = t197 * t364;
t293 = t207 * t332;
t292 = t200 * t328;
t285 = t211 * t313;
t274 = t125 * t208;
t273 = t197 * t293;
t271 = t30 * t287;
t269 = t200 * t207 * t313;
t268 = t209 * t287;
t121 = t204 * t205 * t287 - t208 * t286;
t260 = t204 * t304 + t121;
t122 = (t204 * t210 + t205 * t328) * t314;
t259 = -t208 * t304 - t122;
t257 = -pkin(3) * t210 - t343;
t254 = t12 * t204 - t208 * t252;
t253 = -t12 * t208 - t204 * t252;
t141 = -t200 * t333 + t202 * t203;
t71 = t141 * t209 + t205 * t98;
t240 = t202 * t327 + t326;
t99 = t201 * t240 + t203 * t335;
t36 = t204 * t99 + t208 * t71;
t35 = -t204 * t71 + t208 * t99;
t57 = -t111 * t205 + t209 * t97;
t42 = -t112 * t205 + t209 * t69;
t70 = t141 * t205 - t98 * t209;
t247 = t197 * t206 * t277;
t116 = -t189 * t286 + t181;
t244 = -t125 * t300 - t355;
t243 = -t125 * t301 + t350;
t106 = t144 * t208 + t204 * t335;
t237 = t255 * t87;
t21 = -pkin(5) * t255 - t29;
t236 = -pkin(11) * t90 + t125 * t21;
t231 = t255 * t200;
t230 = t255 * t209;
t229 = (t189 + t312) * t309;
t226 = qJD(2) * t231;
t225 = qJD(3) * (-t297 + t341);
t223 = (-qJ(4) * t306 - t305) * t200;
t220 = -qJD(6) * t254 + t1 * t208 - t2 * t204;
t62 = t267 + (qJD(3) * t240 + t224) * t201;
t219 = t141 * t263 - t189 * t62 - t210 * t273;
t63 = -qJD(2) * t272 - qJD(3) * t294 + (t285 + (t200 * t203 + t295) * qJD(3)) * t210;
t218 = t141 * t181 - t189 * t63 + t206 * t273;
t217 = (t206 * t62 + t210 * t63 + (-t206 * t99 + t210 * t98) * qJD(3)) * t314;
t216 = -t206 * t226 - t379;
t215 = t209 * t181 + t205 * t216;
t83 = t188 + (qJD(2) * t257 - t165) * t200;
t214 = t83 * t287 + t49;
t171 = t206 * t210 * t336;
t155 = -0.2e1 * t247;
t154 = 0.2e1 * t247;
t145 = pkin(2) * t330 - t191;
t142 = t317 * t336;
t137 = -qJ(4) * t286 + t187;
t134 = t202 * t291 + t191;
t133 = (-pkin(2) + t257) * t200;
t131 = -0.2e1 * t317 * t197 * t298;
t120 = t189 * t204 - t208 * t268;
t119 = t189 * t208 + t204 * t268;
t115 = (qJD(3) - t189) * t287;
t114 = t185 + t223;
t108 = t210 * t229;
t107 = t206 * t229;
t105 = t144 * t204 - t292;
t80 = qJD(2) * t223 + t318;
t77 = pkin(5) * t130 + pkin(11) * t128;
t66 = -t182 - t79;
t65 = -pkin(3) * t189 + t323;
t55 = -pkin(5) * t335 - t57;
t51 = qJD(6) * t106 - t103 * t204 - t208 * t283;
t50 = -qJD(6) * t292 + t208 * t103 + t144 * t301 - t204 * t283;
t32 = -pkin(5) * t286 - t42;
t28 = -qJD(5) * t70 + t205 * t62 + t209 * t269;
t27 = qJD(5) * t71 + t205 * t269 - t62 * t209;
t14 = t204 * t77 + t208 * t29;
t13 = -t204 * t29 + t208 * t77;
t6 = qJD(6) * t35 + t204 * t63 + t208 * t28;
t5 = -qJD(6) * t36 - t204 * t28 + t208 * t63;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293, -t211 * t332, 0, 0, 0, 0, 0, 0, 0, 0, t219, t218, t217, -t251 * t99 + t371 + t62 * t78 + t63 * t79 + (qJD(1) * t141 + t123) * t269, 0, 0, 0, 0, 0, 0, t217, -t219, -t218, t141 * t80 + t269 * t83 - t45 * t99 + t62 * t65 - t63 * t66 + t371, 0, 0, 0, 0, 0, 0, t63 * t128 - t181 * t70 - t255 * t27 + t99 * t90, t63 * t130 - t181 * t71 - t255 * t28 - t99 * t89, -t128 * t28 + t130 * t27 - t70 * t89 - t71 * t90, -t10 * t70 - t239 * t71 - t27 * t29 + t28 * t30 + t34 * t99 + t59 * t63, 0, 0, 0, 0, 0, 0, t125 * t5 + t27 * t85 + t35 * t90 + t39 * t70, -t125 * t6 + t27 * t87 - t36 * t90 - t38 * t70, t35 * t38 - t36 * t39 - t5 * t87 - t6 * t85, t1 * t36 + t12 * t6 + t2 * t35 + t21 * t27 - t252 * t5 + t70 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t131, t108, t155, -t107, 0, t206 * t225 - t378, t189 * t320 + t202 * t251 + t210 * t225 (t353 - t210 * t251 + (-t206 * t79 + t210 * t78) * qJD(3) + ((-qJD(3) * t145 - t320) * t210 + (-t322 - t380) * t206) * qJD(2)) * t200, -t145 * t49 - t146 * t251 - t320 * t79 - t322 * t78 + (-t297 - t341) * t289, 0, -t108, t107, t154, t131, t155 (t353 - t210 * t45 + (t206 * t66 + t210 * t65) * qJD(3) + ((qJD(3) * t134 - t321) * t210 + (qJD(3) * t132 - t322) * t206) * qJD(2)) * t200, -t197 * t207 * t264 + (-t83 * t307 + t210 * t80 + (t114 * t210 - t133 * t307) * qJD(2)) * t200 + t378, t197 * t248 - t202 * t45 - t321 * t189 + (-t83 * t306 - t206 * t80 + (-t114 * t206 - t133 * t306) * qJD(2)) * t200, t132 * t45 + t133 * t80 + t134 * t49 + (t114 - t270) * t83 + t321 * t66 - t322 * t65, -t103 * t130 - t144 * t89, t103 * t128 - t104 * t130 + t143 * t89 - t144 * t90, -t103 * qJD(5) + (t130 * t306 - t89 * t206 + (-t103 * t206 + t144 * t306) * qJD(2)) * t200, t104 * t128 + t360, -t104 * qJD(5) + (-t128 * t306 - t90 * t206 + (-t104 * t206 - t143 * t306) * qJD(2)) * t200 (t197 * t311 + t231) * t306, t59 * t104 + t110 * t90 + t34 * t143 + t344 * t128 + t365 * qJD(5) + (t29 * t306 + t10 * t206 + (t206 * t365 + t306 * t57) * qJD(2)) * t200, -t59 * t103 - t110 * t89 + t34 * t144 + t344 * t130 - t366 * qJD(5) + (-t30 * t306 + t239 * t206 + (-t206 * t366 - t306 * t384) * qJD(2)) * t200, -t10 * t144 + t103 * t29 - t104 * t30 - t128 * t366 - t130 * t365 + t143 * t239 - t384 * t90 + t57 * t89, t10 * t57 + t110 * t34 - t239 * t384 + t29 * t365 + t30 * t366 + t344 * t59, -t106 * t38 - t50 * t87, t105 * t38 - t106 * t39 + t50 * t85 - t51 * t87, t104 * t87 + t106 * t90 - t125 * t50 - t143 * t38, t105 * t39 + t51 * t85, -t104 * t85 - t105 * t90 - t125 * t51 - t143 * t39, t104 * t125 + t360, -t104 * t252 + t105 * t8 + t125 * t374 + t143 * t2 + t21 * t51 + t23 * t90 + t367 * t85 + t39 * t55, -t1 * t143 - t104 * t12 + t106 * t8 - t125 * t375 - t21 * t50 - t24 * t90 + t367 * t87 - t38 * t55, -t1 * t105 - t106 * t2 - t12 * t51 + t23 * t38 - t24 * t39 - t252 * t50 - t374 * t87 - t375 * t85, t1 * t24 + t12 * t375 + t2 * t23 + t21 * t367 - t252 * t374 + t55 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, t142, t116, t171, -t115, 0, t359 + (-qJD(3) * t149 - t202 * t265) * t210 + (-t123 * t314 - qJD(3) * t338 + (-t203 * t309 - t285) * qJD(1)) * t206, -t123 * t286 - t189 * t78 + t251, 0, 0, 0, -t116, t115, -t171, t142, t171 ((-qJ(4) * qJD(3) - t66 - t79) * t206 + (-pkin(3) * qJD(3) + t323 - t65) * t210) * t314, -t137 * t286 + t214 - t359, t323 * t189 + (t137 * t206 + t210 * t83) * t314 - t45, -pkin(3) * t49 - qJ(4) * t45 - t137 * t83 - t323 * t66 - t65 * t79, -t205 * t381 - t209 * t89 (-t90 - t381) * t209 + (t89 + t382) * t205, -t130 * t286 + t215, t128 * t230 + t354 (t128 - t308) * t286 + t216 * t209, -t210 * t226, qJ(4) * t90 + t324 * t128 + t205 * t387 + t377 * t209 - t42 * t255 - t29 * t286, -qJ(4) * t89 + t324 * t130 - t377 * t205 + t209 * t387 + t43 * t255 + t30 * t286, t128 * t43 + t130 * t42 + (-t271 + t212 * t89 - t10 + (-t128 * t212 - t30) * qJD(5)) * t209 + (t29 * t287 - t212 * t90 + t239 + (t130 * t212 + t29) * qJD(5)) * t205, qJ(4) * t34 - t29 * t42 - t30 * t43 + t324 * t59 + (t10 * t209 - t205 * t239 + (-t205 * t29 + t209 * t30) * qJD(5)) * t212, -t208 * t349 + (-t204 * t299 + t259) * t87, t121 * t87 + t122 * t85 + (t352 + t356) * t304 + (t347 - t346 + (-t351 + t357) * qJD(6)) * t209, -t205 * t38 + t259 * t125 + (t237 + t243) * t209, t204 * t348 + (t208 * t299 - t260) * t85, -t205 * t39 + t260 * t125 + (t244 - t385) * t209, t125 * t230 + t354, -t121 * t21 + t126 * t90 - t32 * t85 - t369 * t125 + (t2 + (-t204 * t21 + t212 * t85) * qJD(5)) * t205 + (t21 * t300 - t212 * t39 - t252 * t255 + t373) * t209, -t122 * t21 - t127 * t90 - t32 * t87 + t368 * t125 + (-t1 + (-t208 * t21 + t212 * t87) * qJD(5)) * t205 + (-t12 * t255 - t21 * t301 + t212 * t38 + t372) * t209, -t252 * t122 + t12 * t121 + t126 * t38 - t127 * t39 + t369 * t87 + t368 * t85 + t254 * t304 + (qJD(6) * t253 - t1 * t204 - t2 * t208) * t209, -t209 * t212 * t8 + t1 * t127 + t126 * t2 + (t205 * t302 - t32) * t21 - t368 * t12 + t369 * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, t171, -t189 ^ 2 - t198 * t336, t189 * t66 + t214, 0, 0, 0, 0, 0, 0, -t189 * t128 + t215, -t205 * t181 - t189 * t130 + (-t255 * t287 - t379) * t209 (t89 - t382) * t209 + t383 * t205, -t189 * t59 + (t255 * t30 + t10) * t209 + t388 * t205, 0, 0, 0, 0, 0, 0, -t348 + (-t204 * t303 - t119) * t125 + (t244 + t385) * t205, t349 + (-t208 * t303 + t120) * t125 + (t237 - t243) * t205, t119 * t87 + t120 * t85 + (-t352 + t356) * t303 + (-t347 - t346 + (t351 + t357) * qJD(6)) * t205, t252 * t119 - t12 * t120 + (-qJD(5) * t253 - t8) * t209 + (t21 * t255 + t220) * t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, -t128 ^ 2 + t130 ^ 2 (t128 - t337) * qJD(5) + (-t280 + (t128 + t308) * t206) * t314, -t340, t383, t181, -t59 * t130 + t271 - t276, t59 * t128 - t388, 0, 0, t274 * t87 - t347 (-t38 - t361) * t208 + (-t39 - t345) * t204, t125 * t274 - t130 * t87 + t355, t125 * t357 - t346, -t125 ^ 2 * t204 + t130 * t85 + t350, -t125 * t130, -pkin(5) * t39 + t252 * t130 - t372 - t30 * t85 + (-pkin(11) * t300 - t13) * t125 + t236 * t204, pkin(5) * t38 + t12 * t130 + t373 - t30 * t87 + (pkin(11) * t301 + t14) * t125 + t236 * t208, t13 * t87 + t14 * t85 + ((-t39 + t342) * pkin(11) + t393) * t208 + ((qJD(6) * t85 - t38) * pkin(11) + t386) * t204, -pkin(5) * t8 + pkin(11) * t220 - t12 * t14 + t13 * t252 - t21 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t370, -t85 ^ 2 + t87 ^ 2, -t38 + t361, -t370, t345 - t39, t90, -t21 * t87 - t386, t21 * t85 - t393, 0, 0;];
tauc_reg  = t3;
