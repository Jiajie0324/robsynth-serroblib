% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:40:42
% EndTime: 2019-03-08 22:41:13
% DurationCPUTime: 17.52s
% Computational Cost: add. (7446->827), mult. (20785->1211), div. (0->0), fcn. (22851->12), ass. (0->605)
t487 = sin(qJ(5));
t483 = sin(pkin(7));
t492 = cos(qJ(3));
t778 = t483 * t492;
t442 = t487 * t778;
t485 = cos(pkin(7));
t491 = cos(qJ(5));
t739 = t491 * t485;
t390 = -t442 + t739;
t388 = t487 * t485 + t491 * t778;
t787 = t388 * t491;
t826 = t487 / 0.2e1;
t236 = t390 * t826 + t787 / 0.2e1;
t851 = t236 * qJD(5);
t685 = t491 * qJD(3);
t464 = t487 * t685;
t610 = -t236 * qJD(2) - t464;
t688 = t388 * qJD(2);
t533 = qJD(3) * t236 + t390 * t688;
t484 = sin(pkin(6));
t488 = sin(qJ(3));
t817 = cos(pkin(6));
t616 = t483 * t817;
t489 = sin(qJ(2));
t755 = t489 * t492;
t493 = cos(qJ(2));
t756 = t488 * t493;
t298 = t488 * t616 + (t485 * t756 + t755) * t484;
t776 = t484 * t493;
t386 = -t483 * t776 + t485 * t817;
t780 = t483 * t488;
t640 = -t780 / 0.2e1;
t830 = t485 / 0.2e1;
t521 = t298 * t830 + t386 * t640;
t669 = t485 * t755;
t608 = t484 * t669;
t634 = t776 / 0.2e1;
t726 = t608 / 0.2e1 + t488 * t634;
t502 = t521 + t726;
t850 = qJD(2) * t502 + t298 * qJD(3);
t486 = sin(qJ(6));
t490 = cos(qJ(6));
t659 = t490 * t685;
t605 = t486 * t659;
t478 = t486 ^ 2;
t481 = t490 ^ 2;
t454 = t481 - t478;
t615 = qJD(5) * t454;
t849 = 0.2e1 * t605 - t615;
t757 = t488 * t490;
t667 = t483 * t757;
t768 = t486 * t390;
t303 = -t667 + t768;
t761 = t487 * t303;
t629 = t761 / 0.2e1;
t764 = t486 * t491;
t630 = t764 / 0.2e1;
t520 = t388 * t630 + t629;
t477 = t483 ^ 2;
t822 = pkin(2) * t488;
t395 = pkin(9) * t778 + t485 * t822;
t784 = t395 * t485;
t313 = -t477 * t822 - t784;
t635 = -t776 / 0.2e1;
t119 = t488 * t635 - t608 / 0.2e1 + t521;
t698 = t119 * qJD(1);
t848 = -qJD(2) * t313 + t698;
t474 = t485 * qJ(4);
t374 = -t474 - t395;
t816 = qJ(4) * t488;
t580 = -pkin(3) * t492 - t816;
t375 = (-pkin(2) + t580) * t483;
t205 = t374 * t485 + t375 * t780;
t847 = qJD(2) * t205 - t698;
t777 = t484 * t489;
t671 = t488 * t777;
t422 = t485 * t671;
t670 = t492 * t776;
t359 = -t422 + t670;
t846 = qJD(2) * (-t359 * t485 + t477 * t671);
t775 = t485 * t492;
t469 = pkin(2) * t775;
t843 = pkin(4) + pkin(9);
t356 = -t780 * t843 + t469;
t494 = -pkin(3) - pkin(10);
t573 = -t492 * t494 + t816;
t358 = (t669 + t756) * t484;
t845 = qJD(2) * (t477 * t484 * t755 + t358 * t485) + qJD(3) * t502;
t844 = t388 ^ 2;
t842 = -t303 / 0.2e1;
t841 = t303 / 0.2e1;
t668 = t486 * t780;
t748 = t490 * t390;
t305 = t668 + t748;
t840 = -t305 / 0.2e1;
t839 = t305 / 0.2e1;
t444 = t490 * t778;
t363 = t487 * t668 - t444;
t838 = t363 / 0.2e1;
t763 = t486 * t492;
t364 = (t487 * t757 + t763) * t483;
t837 = -t364 / 0.2e1;
t836 = -t388 / 0.2e1;
t835 = t388 / 0.2e1;
t834 = -t390 / 0.2e1;
t818 = t491 * pkin(5);
t819 = t487 * pkin(11);
t440 = t818 + t819;
t833 = t440 / 0.2e1;
t832 = t444 / 0.2e1;
t831 = -t481 / 0.2e1;
t829 = -t486 / 0.2e1;
t828 = t486 / 0.2e1;
t827 = -t487 / 0.2e1;
t825 = t490 / 0.2e1;
t824 = -t491 / 0.2e1;
t823 = t491 / 0.2e1;
t821 = pkin(3) * t485;
t820 = t388 * pkin(11);
t357 = pkin(4) * t778 + t395;
t740 = t491 * t357;
t470 = pkin(3) * t780;
t355 = t470 + (pkin(10) * t488 - qJ(4) * t492) * t483;
t760 = t487 * t355;
t199 = -pkin(5) * t778 - t740 + t760;
t815 = t199 * t486;
t814 = t199 * t490;
t297 = -t485 * t670 - t492 * t616 + t671;
t202 = t297 * t487 + t386 * t491;
t813 = t202 * t486;
t812 = t202 * t490;
t675 = t483 * t777;
t793 = t358 * t491;
t248 = t487 * t675 - t793;
t811 = t248 * t486;
t810 = t248 * t490;
t794 = t358 * t487;
t249 = t491 * t675 + t794;
t809 = t249 * t486;
t808 = t249 * t490;
t807 = t297 * t485;
t806 = t297 * t486;
t805 = t297 * t490;
t804 = t298 * t388;
t803 = t298 * t390;
t802 = t298 * t486;
t801 = t298 * t490;
t800 = t303 * t491;
t799 = t305 * t486;
t798 = t305 * t487;
t797 = t305 * t490;
t590 = pkin(5) * t487 - pkin(11) * t491;
t549 = qJ(4) + t590;
t762 = t486 * t494;
t353 = t487 * t762 - t490 * t549;
t796 = t353 * t390;
t743 = t490 * t494;
t666 = t487 * t743;
t354 = t486 * t549 + t666;
t795 = t354 * t390;
t792 = t359 * t486;
t791 = t359 * t487;
t790 = t359 * t490;
t789 = t359 * t491;
t788 = t364 * t486;
t786 = t390 * t491;
t394 = pkin(9) * t780 - t469;
t785 = t394 * t485;
t480 = t488 ^ 2;
t783 = t477 * t480;
t782 = t477 * t492;
t482 = t491 ^ 2;
t781 = t482 * t486;
t472 = t482 * t490;
t779 = t483 * t491;
t309 = (-pkin(2) - t573) * t483;
t506 = t485 * t494 - t356;
t170 = t309 * t487 - t491 * t506;
t774 = t486 * t170;
t327 = t491 * t355;
t330 = t487 * t357;
t729 = t327 + t330;
t200 = pkin(11) * t778 + t729;
t773 = t486 * t200;
t226 = t469 + (-t440 - t843) * t780;
t772 = t486 * t226;
t268 = pkin(5) * t390 + t820;
t771 = t486 * t268;
t770 = t486 * t303;
t769 = t486 * t388;
t767 = t486 * t440;
t766 = t486 * t485;
t765 = t486 * t487;
t759 = t487 * t388;
t758 = t487 * t490;
t754 = t490 * t170;
t753 = t490 * t200;
t752 = t490 * t226;
t751 = t490 * t268;
t750 = t490 * t303;
t749 = t490 * t388;
t747 = t490 * t440;
t479 = t487 ^ 2;
t746 = t490 * t479;
t745 = t490 * t485;
t744 = t490 * t491;
t742 = t491 * t305;
t741 = t491 * t309;
t738 = t491 * t494;
t737 = t494 * t305;
t333 = t744 * t769;
t643 = t798 / 0.2e1;
t52 = t333 + (t629 + t837) * t490 + (t643 + t838) * t486;
t736 = t52 * qJD(2);
t59 = t297 * t358 + t298 * t359 + t386 * t675;
t735 = t59 * qJD(1);
t626 = t757 / 0.2e1;
t599 = t483 * t626;
t72 = (t599 + t768 / 0.2e1 + t842) * t487;
t734 = t72 * qJD(2);
t90 = -t303 * t364 - t305 * t363;
t733 = t90 * qJD(2);
t563 = t750 + t799;
t97 = t563 * t388;
t732 = t97 * qJD(2);
t376 = t394 - t821;
t98 = (-t374 - t395) * t780 + (-t376 + t394) * t778;
t731 = t98 * qJD(2);
t153 = -pkin(5) * t780 + t170;
t730 = -t153 + t170;
t728 = t422 / 0.2e1 + t492 * t635;
t727 = -t422 / 0.2e1 + t492 * t634;
t453 = t479 - t482;
t122 = t303 * t390 - t486 * t844;
t724 = qJD(2) * t122;
t123 = t305 * t390 - t490 * t844;
t723 = qJD(2) * t123;
t607 = t491 * t668;
t524 = t607 + t745;
t673 = t487 * t780;
t149 = -t303 * t673 + t388 * t524;
t722 = qJD(2) * t149;
t525 = -t491 * t667 + t766;
t150 = -t305 * t673 - t388 * t525;
t721 = qJD(2) * t150;
t678 = t487 * t783;
t290 = t390 * t778 + t678;
t719 = qJD(2) * t290;
t677 = t491 * t783;
t291 = -t388 * t778 + t677;
t718 = qJD(2) * t291;
t717 = qJD(2) * t305;
t715 = qJD(2) * t483;
t714 = qJD(2) * t484;
t713 = qJD(3) * t297;
t712 = qJD(3) * t394;
t711 = qJD(3) * t395;
t710 = qJD(3) * t483;
t709 = qJD(3) * t485;
t708 = qJD(4) * t487;
t707 = qJD(5) * t486;
t706 = qJD(5) * t487;
t705 = qJD(5) * t490;
t704 = qJD(5) * t491;
t703 = qJD(5) * t494;
t702 = qJD(6) * t388;
t701 = qJD(6) * t486;
t700 = qJD(6) * t490;
t627 = -t758 / 0.2e1;
t511 = t305 * t627 + t787 * t831;
t109 = -t788 / 0.2e1 + t511;
t699 = t109 * qJD(2);
t697 = t119 * qJD(2);
t623 = t744 / 0.2e1;
t597 = t388 * t623;
t601 = t486 * t640;
t129 = t832 + t597 + (t601 + t839) * t487;
t696 = t129 * qJD(2);
t598 = t487 * t626;
t507 = (t598 + t763 / 0.2e1) * t483;
t130 = t507 + t520;
t695 = t130 * qJD(2);
t672 = t488 * t779;
t138 = t303 * t672 - t363 * t388;
t694 = t138 * qJD(2);
t139 = -t305 * t672 + t364 * t388;
t693 = t139 * qJD(2);
t163 = (t601 + t748 / 0.2e1 + t840) * t487;
t692 = t163 * qJD(2);
t194 = -t759 + t786;
t206 = t194 * t780;
t691 = t206 * qJD(2);
t299 = t388 * t485 + t678;
t690 = t299 * qJD(2);
t300 = t390 * t485 + t677;
t689 = t300 * qJD(2);
t402 = (t492 ^ 2 - t480) * t477;
t687 = t402 * qJD(2);
t473 = t485 * qJD(4);
t686 = t487 * qJD(3);
t684 = t491 * qJD(6);
t683 = 0.1e1 / 0.2e1 + t479 / 0.2e1;
t682 = pkin(5) * t841;
t681 = pkin(5) * t840;
t680 = -pkin(5) * t363 / 0.2e1;
t679 = pkin(5) * t837;
t676 = t488 * t782;
t674 = t483 * t775;
t665 = t486 * t738;
t664 = t490 * t738;
t663 = t305 * t688;
t661 = t488 * t715;
t660 = t488 * t710;
t658 = qJD(4) * t780;
t657 = qJD(5) * t780;
t656 = t486 * t705;
t655 = t486 * t704;
t654 = t490 * t704;
t653 = t487 * t701;
t652 = t486 * t684;
t651 = t487 * t700;
t650 = t490 * t684;
t649 = t492 * t710;
t648 = t486 * t700;
t647 = t487 * t704;
t646 = qJ(4) * t390 / 0.2e1;
t645 = -t811 / 0.2e1;
t644 = -t810 / 0.2e1;
t642 = -t794 / 0.2e1;
t641 = t793 / 0.2e1;
t639 = t780 / 0.2e1;
t638 = -t778 / 0.2e1;
t637 = t778 / 0.2e1;
t636 = -t777 / 0.2e1;
t633 = -t773 / 0.2e1;
t366 = -t769 / 0.2e1;
t367 = t769 / 0.2e1;
t632 = -t765 / 0.2e1;
t631 = -t764 / 0.2e1;
t628 = t759 / 0.2e1;
t625 = -t753 / 0.2e1;
t624 = -t749 / 0.2e1;
t368 = t749 / 0.2e1;
t622 = t363 * t824;
t621 = t364 * t824;
t620 = t494 * t842;
t619 = t737 / 0.2e1;
t618 = t153 / 0.2e1 - t170 / 0.2e1;
t617 = -t327 / 0.2e1 - t330 / 0.2e1;
t412 = t607 / 0.2e1;
t112 = t622 + t624 + (t412 - t745 / 0.2e1) * t487;
t463 = t490 * t686;
t614 = qJD(2) * t112 - t463;
t415 = t491 * t599;
t113 = t621 + t367 + (t415 + t766 / 0.2e1) * t487;
t461 = t486 * t686;
t613 = qJD(2) * t113 + t461;
t231 = 0.2e1 * t366;
t612 = -qJD(2) * t231 + t461;
t234 = 0.2e1 * t368;
t611 = -qJD(2) * t234 - t463;
t465 = qJD(2) * t485 + qJD(3);
t609 = -qJD(6) - t688;
t308 = t474 + t357;
t606 = qJD(2) * t674;
t435 = t487 * t661;
t604 = t491 * t640;
t603 = t487 * t636;
t602 = t491 * t636;
t343 = t486 * t628;
t345 = t487 * t624;
t596 = t494 * t640;
t595 = t386 * t637 + t807 / 0.2e1;
t594 = t386 * t638 - t807 / 0.2e1;
t593 = t820 / 0.2e1 + t268 / 0.2e1;
t99 = -t801 + t813;
t592 = -t801 / 0.2e1 - t99 / 0.2e1;
t591 = pkin(5) * t388 - pkin(11) * t390;
t589 = t618 * t486;
t588 = t618 * t490;
t587 = 0.2e1 * t486 * t654;
t585 = t199 / 0.2e1 + t388 * t833;
t584 = t226 / 0.2e1 + t153 * t824;
t201 = -t297 * t491 + t386 * t487;
t583 = t297 / 0.2e1 + t201 * t823;
t582 = t830 + t628;
t100 = t802 + t812;
t581 = -t802 / 0.2e1 + t100 / 0.2e1;
t579 = -qJD(5) - t661;
t528 = t298 * t842 + t639 * t99;
t564 = t790 - t809;
t530 = t564 * t487;
t156 = -t298 * t765 - t805;
t540 = t156 * t835 + t201 * t838;
t10 = -t530 / 0.2e1 + (t645 + t528) * t491 + t540;
t154 = t741 + t487 * (-pkin(10) * t485 - t469 - t821) + (t487 * t843 + pkin(11)) * t780;
t510 = t591 + t308;
t53 = t154 * t486 - t490 * t510;
t84 = t752 - t773;
t7 = t153 * t363 + t199 * t303 + t388 * t84 + t53 * t672;
t578 = t10 * qJD(1) + t7 * qJD(2);
t519 = t100 * t639 + t298 * t840;
t565 = t792 + t808;
t531 = t565 * t487;
t157 = t298 * t758 - t806;
t539 = t157 * t836 + t201 * t364 / 0.2e1;
t11 = t531 / 0.2e1 + (t644 + t519) * t491 + t539;
t54 = t490 * t154 + t486 * t510;
t85 = t753 + t772;
t8 = t153 * t364 + t199 * t305 - t388 * t85 + t54 * t672;
t577 = t11 * qJD(1) + t8 * qJD(2);
t543 = t202 * t841 + t834 * t99;
t17 = t810 / 0.2e1 + t543;
t171 = t487 * t506 + t741;
t5 = t171 * t303 - t53 * t390 + (t486 * t730 + t751) * t388;
t576 = t17 * qJD(1) + t5 * qJD(2);
t541 = t100 * t834 + t202 * t839;
t20 = t645 + t541;
t6 = t171 * t305 - t54 * t390 + (t490 * t730 - t771) * t388;
t575 = t20 * qJD(1) + t6 * qJD(2);
t574 = t487 * t601;
t393 = -qJ(4) * t778 + t470;
t495 = (t374 / 0.2e1 + t395 / 0.2e1) * t297 + (-t394 / 0.2e1 + t376 / 0.2e1) * t298 + t386 * t393 / 0.2e1;
t546 = t358 * pkin(3) / 0.2e1 - t359 * qJ(4) / 0.2e1;
t25 = t495 + t546;
t86 = t374 * t394 + t375 * t393 + t376 * t395;
t572 = t25 * qJD(1) + t86 * qJD(2);
t538 = -t809 / 0.2e1 + t790 / 0.2e1;
t542 = t100 * t836 + t201 * t839;
t27 = t538 - t542;
t32 = t153 * t305 - t388 * t54;
t571 = qJD(1) * t27 - qJD(2) * t32;
t537 = -t808 / 0.2e1 - t792 / 0.2e1;
t544 = t201 * t841 + t836 * t99;
t28 = t537 + t544;
t31 = -t153 * t303 + t388 * t53;
t570 = qJD(1) * t28 - qJD(2) * t31;
t41 = t356 * t388 + (-t170 * t492 + (-t760 + (-t308 + t357) * t491) * t488) * t483;
t523 = t201 * t638 + t297 * t836;
t56 = -t791 / 0.2e1 + t523;
t569 = t56 * qJD(1) + t41 * qJD(2);
t42 = -t356 * t390 - t308 * t673 + (t171 * t492 + t488 * t729) * t483;
t522 = t202 * t638 + t297 * t834;
t58 = -t789 / 0.2e1 + t522;
t568 = t58 * qJD(1) - t42 * qJD(2);
t43 = t641 - t803 / 0.2e1 + (t603 + t202 * t488 / 0.2e1) * t483;
t66 = -t171 * t780 + t308 * t390;
t567 = -qJD(1) * t43 + qJD(2) * t66;
t44 = t642 + t804 / 0.2e1 + (t602 - t201 * t488 / 0.2e1) * t483;
t65 = -t170 * t780 + t308 * t388;
t566 = -qJD(1) * t44 - qJD(2) * t65;
t420 = t453 * t486;
t284 = t800 / 0.2e1;
t416 = t490 * t604;
t547 = t759 - t786 / 0.2e1;
t73 = -t486 * t547 + t284 + t416;
t562 = -qJD(2) * t73 + qJD(3) * t420;
t421 = -t472 + t746;
t281 = -t742 / 0.2e1;
t413 = t491 * t601;
t71 = t490 * t547 + t281 + t413;
t561 = -qJD(2) * t71 - qJD(3) * t421;
t560 = (-qJD(6) - t686) * t491;
t559 = pkin(11) * t639 - t171 / 0.2e1;
t114 = -t521 + t726;
t168 = t784 + (-t375 * t488 + t393 * t492) * t483;
t558 = qJD(1) * t114 - qJD(2) * t168;
t115 = t595 + t727;
t167 = t785 + (t375 * t492 + t393 * t488) * t483;
t557 = qJD(1) * t115 + qJD(2) * t167;
t116 = t594 + t728;
t312 = pkin(2) * t782 - t785;
t556 = qJD(1) * t116 + qJD(2) * t312;
t280 = t742 / 0.2e1;
t140 = t490 * t582 + t280 + t412;
t382 = t472 / 0.2e1 + t683 * t490;
t555 = qJD(2) * t140 + qJD(3) * t382;
t283 = -t800 / 0.2e1;
t141 = -t486 * t582 + t283 + t415;
t381 = (-t482 / 0.2e1 - t683) * t486;
t554 = qJD(2) * t141 + qJD(3) * t381;
t207 = -t390 ^ 2 + t844;
t553 = qJD(2) * t207 - qJD(3) * t194;
t552 = qJD(2) * t194 - qJD(3) * t453;
t551 = t686 + t688;
t425 = t485 ^ 2 + t783;
t550 = qJD(2) * t425 + t709;
t548 = t819 / 0.2e1 + t818 / 0.2e1;
t385 = t739 / 0.2e1 - t442 / 0.2e1;
t545 = t385 * qJD(2) + t685 / 0.2e1;
t536 = t750 / 0.2e1 + t799 / 0.2e1;
t496 = qJ(4) * t836 + t308 * t827 + t491 * t596;
t69 = t496 - t617;
t535 = qJ(4) * t686 - t69 * qJD(2);
t67 = t646 + (t308 / 0.2e1 - t357 / 0.2e1) * t491 + (t596 + t355 / 0.2e1) * t487;
t534 = -qJ(4) * t685 - t67 * qJD(2);
t532 = -t657 - t709;
t529 = t684 / 0.2e1 - t610;
t518 = t833 + t548;
t1 = t680 + t796 / 0.2e1 - t585 * t490 + (-t751 / 0.2e1 + t620 + t589) * t487 + (t53 / 0.2e1 + t559 * t486) * t491;
t179 = -t353 * t491 + (t665 + t747) * t487;
t22 = (-t813 / 0.2e1 - t592) * t491;
t517 = -t22 * qJD(1) - t1 * qJD(2) + t179 * qJD(3);
t180 = t354 * t491 + (-t664 + t767) * t487;
t2 = t679 + t795 / 0.2e1 + t585 * t486 + (t771 / 0.2e1 - t737 / 0.2e1 + t588) * t487 + (t54 / 0.2e1 + t559 * t490) * t491;
t21 = (-t812 / 0.2e1 + t581) * t491;
t516 = -t21 * qJD(1) - t2 * qJD(2) - t180 * qJD(3);
t497 = t354 * t835 + t491 * t619 + t54 * t826;
t13 = t490 * t584 + t497 + t633;
t272 = -t354 * t487 - t482 * t743;
t37 = t487 * t581 - t490 * t583;
t515 = qJD(1) * t37 + qJD(2) * t13 - qJD(3) * t272;
t498 = t353 * t836 + t491 * t620 + t53 * t827;
t14 = -t486 * t584 + t498 + t625;
t271 = -t353 * t487 - t482 * t762;
t38 = t486 * t583 + t487 * t592;
t514 = qJD(1) * t38 + qJD(2) * t14 + qJD(3) * t271;
t103 = t303 ^ 2 - t305 ^ 2;
t87 = (-t770 + t797) * t491;
t513 = qJD(2) * t103 - qJD(3) * t87 - qJD(5) * t563;
t512 = (qJD(2) * t390 + t685) * t780;
t301 = t518 * t486;
t33 = t486 * t593 + t588 + t682;
t509 = pkin(5) * t705 - qJD(2) * t33 - qJD(3) * t301;
t302 = t518 * t490;
t35 = -t490 * t593 + t589 + t681;
t508 = pkin(5) * t707 - qJD(2) * t35 + qJD(3) * t302;
t155 = t536 * t491;
t169 = -t770 / 0.2e1 + t797 / 0.2e1;
t505 = qJD(3) * t155 - qJD(5) * t169 + t303 * t717;
t396 = (t478 / 0.2e1 + t831) * t491;
t504 = qJD(2) * t169 - qJD(3) * t396 + t656;
t503 = qJD(6) * t385 + t533;
t419 = t454 * t482;
t501 = qJD(2) * t87 + qJD(3) * t419 + t587;
t500 = qJD(2) * t563 + t849;
t499 = qJD(3) * t472 * t486 + qJD(2) * t155 + qJD(5) * t396;
t471 = t704 / 0.2e1;
t462 = t486 * t706;
t441 = qJD(3) * t637;
t438 = t491 * t661;
t437 = qJD(3) * t676;
t436 = qJD(2) * t676;
t427 = t465 * qJ(4);
t426 = -0.2e1 * t491 * t648;
t410 = t465 * t491;
t409 = t465 * t487;
t392 = -t438 - t704;
t391 = -t435 - t706;
t387 = t396 * qJD(6);
t384 = -t746 / 0.2e1 - t472 / 0.2e1 + t825;
t383 = t479 * t828 + t781 / 0.2e1 + t829;
t380 = t465 * t778;
t377 = qJD(5) * t637 + t436;
t341 = t388 * t631;
t296 = qJD(3) * t604 + t385 * qJD(5);
t251 = -t665 + t747 / 0.2e1 - t548 * t490;
t250 = -t664 - t767 / 0.2e1 + t548 * t486;
t233 = t368 + t624;
t232 = t366 + t367;
t193 = t194 * qJD(5);
t166 = t524 * t826 + t368 + t622;
t165 = t525 * t827 + t366 + t621;
t164 = t390 * t627 + t574 + t643;
t162 = t169 * qJD(6);
t148 = t155 * qJD(6);
t143 = t345 + t281 + t412 + t745 / 0.2e1;
t142 = t343 + t284 + t415 - t766 / 0.2e1;
t132 = t491 * t624 - t798 / 0.2e1 + t574 + t832;
t131 = t341 - t761 / 0.2e1 + t507;
t121 = t595 + t728;
t120 = t594 + t727;
t108 = t788 / 0.2e1 + t511;
t91 = t563 * qJD(6);
t83 = t87 * qJD(6);
t76 = t390 * t623 + t280 + 0.2e1 * t345 + t413;
t75 = t390 * t632 + t483 * t598 + t341 + t520;
t74 = t390 * t631 + t283 + 0.2e1 * t343 + t416;
t70 = t496 + t617;
t68 = t487 * t596 + t646 + t308 * t823 - t760 / 0.2e1 + t740 / 0.2e1;
t64 = t201 * t490;
t62 = t201 * t486;
t57 = t789 / 0.2e1 + t522;
t55 = t791 / 0.2e1 + t523;
t51 = t363 * t829 + t364 * t825 + t487 * t536 + t333;
t46 = t202 * t640 + t803 / 0.2e1 + t483 * t603 + t641;
t45 = t201 * t639 - t804 / 0.2e1 + t483 * t602 + t642;
t40 = t100 * t827 + t201 * t623 + t298 * t632 - t805 / 0.2e1;
t39 = t99 * t826 + t201 * t631 + t298 * t627 + t806 / 0.2e1;
t36 = pkin(11) * t624 + t681 + t153 * t828 + t774 / 0.2e1 + t751 / 0.2e1;
t34 = pkin(11) * t367 + t682 + t153 * t825 + t754 / 0.2e1 - t771 / 0.2e1;
t30 = t538 + t542;
t29 = t537 - t544;
t26 = t495 - t546;
t24 = t100 * t824 + t202 * t623 + t298 * t631;
t23 = t202 * t630 + t298 * t623 + t824 * t99;
t19 = t811 / 0.2e1 + t541;
t18 = t644 + t543;
t16 = t153 * t623 + t633 + t752 / 0.2e1 - t497;
t15 = t153 * t631 + t625 - t772 / 0.2e1 - t498;
t12 = -t531 / 0.2e1 + t248 * t623 + t519 * t491 + t539;
t9 = t530 / 0.2e1 + t248 * t630 + t528 * t491 + t540;
t4 = (t664 + t767) * t836 - t795 / 0.2e1 + (-t754 + t771) * t827 + t54 * t824 + t487 * t619 + t494 * t597 + t171 * t623 + t153 * t627 + pkin(11) * t415 + t679 + t815 / 0.2e1;
t3 = (-t665 + t747) * t835 - t796 / 0.2e1 + (t751 + t774) * t826 + t53 * t824 + t171 * t630 + t153 * t632 + pkin(11) * t412 + t680 - t814 / 0.2e1 + t520 * t494;
t47 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t489 * t714, -t493 * t714, 0, 0, 0, 0, 0, -t845, t121 * qJD(3) + t846 (t358 * t488 + t359 * t492) * t715, t845, t120 * qJD(3) - t846, t735 + (t358 * t376 - t359 * t374 + t375 * t675) * qJD(2) + t26 * qJD(3) + t502 * qJD(4), 0, 0, 0, 0, 0 (-t248 * t780 + t359 * t388) * qJD(2) + t55 * qJD(3) + t46 * qJD(5) (-t249 * t780 + t359 * t390) * qJD(2) + t57 * qJD(3) + t45 * qJD(5), 0, 0, 0, 0, 0 (t248 * t303 + t388 * t564) * qJD(2) + t9 * qJD(3) + t18 * qJD(5) + t30 * qJD(6) (t248 * t305 - t388 * t565) * qJD(2) + t12 * qJD(3) + t19 * qJD(5) + t29 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t850, qJD(2) * t121 + t713, 0, t850, qJD(2) * t120 - t713, t26 * qJD(2) + (-pkin(3) * t298 - qJ(4) * t297) * qJD(3) + t298 * qJD(4), 0, 0, 0, 0, 0, qJD(2) * t55 - t297 * t686 + t298 * t704, qJD(2) * t57 - t297 * t685 - t298 * t706, 0, 0, 0, 0, 0, t9 * qJD(2) + (t156 * t487 - t298 * t781) * qJD(3) + t23 * qJD(5) + t40 * qJD(6), t12 * qJD(2) + (-t157 * t487 - t298 * t472) * qJD(3) + t24 * qJD(5) + t39 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t850, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t46 - qJD(5) * t202 + t298 * t685, qJD(2) * t45 + qJD(5) * t201 - t298 * t686, 0, 0, 0, 0, 0, qJD(2) * t18 + qJD(3) * t23 + qJD(6) * t62 - t202 * t705, qJD(2) * t19 + qJD(3) * t24 + qJD(6) * t64 + t202 * t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30 + qJD(3) * t40 + qJD(5) * t62 - qJD(6) * t100, qJD(2) * t29 + qJD(3) * t39 + qJD(5) * t64 + qJD(6) * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119 * qJD(3), -t116 * qJD(3), 0, -t114 * qJD(3), -t115 * qJD(3), qJD(3) * t25 + qJD(4) * t119 - t735, 0, 0, 0, 0, 0, qJD(3) * t56 - qJD(5) * t43, qJD(3) * t58 - qJD(5) * t44, 0, 0, 0, 0, 0, qJD(3) * t10 + qJD(5) * t17 - qJD(6) * t27, qJD(3) * t11 + qJD(5) * t20 - qJD(6) * t28; 0, 0, 0, 0, t437, t402 * qJD(3), t485 * t649, -t485 * t660, 0, t313 * qJD(3), -t312 * qJD(3), -qJD(3) * t98 + qJD(4) * t674, qJD(3) * t168 - qJD(4) * t676, -qJD(3) * t167 + qJD(4) * t425, qJD(3) * t86 - qJD(4) * t205 (-qJD(5) * t388 + t487 * t660) * t390, qJD(3) * t206 + qJD(5) * t207, qJD(3) * t290 - t388 * t657, qJD(3) * t291 - t390 * t657, t437, qJD(3) * t41 + qJD(4) * t299 + qJD(5) * t66, -qJD(3) * t42 + qJD(4) * t300 - qJD(5) * t65 (qJD(3) * t364 - qJD(6) * t303 - t388 * t705) * t305, qJD(3) * t90 + qJD(5) * t97 + qJD(6) * t103, qJD(3) * t139 + qJD(5) * t123 - t303 * t702, qJD(3) * t138 - qJD(5) * t122 - t305 * t702 (qJD(5) * t390 - t491 * t660) * t388, qJD(3) * t7 + qJD(4) * t149 + qJD(5) * t5 + qJD(6) * t32, qJD(3) * t8 + qJD(4) * t150 + qJD(5) * t6 + qJD(6) * t31; 0, 0, 0, 0, t436, t687, t380, -t465 * t780, 0, -t711 - t848, -t556 + t712, -t731 + (qJD(3) * t580 + qJD(4) * t492) * t483, -t558 + t711, t473 - t557 - t712 (-pkin(3) * t395 - qJ(4) * t394) * qJD(3) - t374 * qJD(4) + t572, t487 * t512 - t851, -t453 * t660 - t193 + t691, t491 * t649 + t719, -t487 * t649 + t718, t377 (t356 * t487 - t573 * t779) * qJD(3) + qJD(4) * t388 + t68 * qJD(5) + t569 (t483 * t487 * t573 + t356 * t491) * qJD(3) + qJD(4) * t390 + t70 * qJD(5) + t568, t108 * qJD(5) - t148 + (t659 + t717) * t364, t733 + t51 * qJD(5) - t83 + (-t363 * t490 - t788) * t685, t693 + (t364 * t487 - t482 * t667) * qJD(3) + t76 * qJD(5) + t131 * qJD(6), t694 + (-t363 * t487 + t482 * t668) * qJD(3) + t74 * qJD(5) + t132 * qJD(6), t851 + (-qJD(6) / 0.2e1 - t551) * t672, t84 * t686 + t166 * qJD(4) + t3 * qJD(5) + t16 * qJD(6) + (t353 * t780 - t363 * t494 + t815) * t685 + t578, -t85 * t686 + t165 * qJD(4) + t4 * qJD(5) + t15 * qJD(6) + (t354 * t780 - t364 * t494 + t814) * t685 + t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, -t436, t550, -qJD(3) * t374 - t847, 0, 0, 0, 0, 0, qJD(3) * t388 + t690, qJD(3) * t390 + t689, 0, 0, 0, 0, 0, qJD(3) * t166 + qJD(5) * t75 + qJD(6) * t143 + t722, qJD(3) * t165 + qJD(5) * t164 + qJD(6) * t142 + t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533, t553, t579 * t388, t579 * t390, t441, qJD(3) * t68 - qJD(5) * t171 + t567, qJD(3) * t70 + qJD(5) * t170 + t566, t108 * qJD(3) + t162 + (-t707 - t717) * t749, t51 * qJD(3) - t388 * t615 + t732 - t91, qJD(3) * t76 + qJD(6) * t233 + t390 * t707 + t723, qJD(3) * t74 + qJD(6) * t232 + t390 * t705 - t724, t503, t3 * qJD(3) + t75 * qJD(4) + (-t171 * t490 + t486 * t591) * qJD(5) + t36 * qJD(6) + t576, t4 * qJD(3) + t164 * qJD(4) + (t171 * t486 + t490 * t591) * qJD(5) + t34 * qJD(6) + t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, t513, t131 * qJD(3) + t233 * qJD(5) + t303 * t609, t132 * qJD(3) + t232 * qJD(5) + t305 * t609, t296, qJD(3) * t16 + qJD(4) * t143 + qJD(5) * t36 - qJD(6) * t54 - t571, qJD(3) * t15 + qJD(4) * t142 + qJD(5) * t34 + qJD(6) * t53 - t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, t697, t116 * qJD(2), 0, t114 * qJD(2), t115 * qJD(2), -qJD(2) * t25, 0, 0, 0, 0, 0, -t56 * qJD(2), -t58 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t10 - qJD(5) * t22 - qJD(6) * t37, -qJD(2) * t11 - qJD(5) * t21 - qJD(6) * t38; 0, 0, 0, 0, -t436, -t687, -t606, t485 * t661, 0, t848, t556, t731, t558, t473 + t557, qJ(4) * t473 - t572, -t390 * t435 - t851, -t193 - t691, -t487 * t657 - t719, -t491 * t657 - t718, -t377, qJD(5) * t67 + t473 * t487 - t569, qJD(5) * t69 + t473 * t491 - t568, qJD(5) * t109 - t364 * t717 - t148, qJD(5) * t52 - t733 - t83, -qJD(5) * t71 - qJD(6) * t130 - t693, -qJD(5) * t73 - qJD(6) * t129 - t694, t851 + (t688 + qJD(6) / 0.2e1) * t672, -qJD(4) * t112 - qJD(5) * t1 - qJD(6) * t13 - t578, -qJD(4) * t113 - qJD(5) * t2 - qJD(6) * t14 - t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t647, t453 * qJD(5), 0, 0, 0, qJ(4) * t704 + t708, -qJ(4) * t706 + qJD(4) * t491, -t481 * t647 - t482 * t648, -qJD(6) * t419 + t487 * t587, -qJD(5) * t421 - t487 * t652, qJD(5) * t420 - t487 * t650, t647, qJD(5) * t179 + qJD(6) * t272 + t490 * t708, -qJD(5) * t180 - qJD(6) * t271 - t486 * t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t465, t427, 0, 0, 0, 0, 0, t409, t410, 0, 0, 0, 0, 0, qJD(6) * t384 - t614, qJD(6) * t383 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t610, -t552, t391, t392, qJD(2) * t638, -t487 * t703 - t534, -t491 * t703 - t535, t699 - t387 + (-t481 * t685 - t656) * t487, t487 * t849 + t426 + t736, t561 + t655, t562 + t654, t529 (t486 * t590 - t666) * qJD(5) + t251 * qJD(6) + t517 (-pkin(11) * t744 + (pkin(5) * t490 + t762) * t487) * qJD(5) + t250 * qJD(6) + t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, -t501, t486 * t560 - t695, t490 * t560 - t696, t438 / 0.2e1 + t471, qJD(4) * t384 + qJD(5) * t251 - qJD(6) * t354 - t515, qJD(4) * t383 + qJD(5) * t250 + qJD(6) * t353 - t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t697, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t606, t436, -t550, -qJ(4) * t709 + t847, 0, 0, 0, 0, 0, t487 * t532 - t690, t491 * t532 - t689, 0, 0, 0, 0, 0, qJD(3) * t112 - qJD(5) * t72 - qJD(6) * t140 - t722, qJD(3) * t113 - qJD(5) * t163 - qJD(6) * t141 - t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t465, -t427, 0, 0, 0, 0, 0, -t409, -t410, 0, 0, 0, 0, 0, -qJD(6) * t382 + t614, -qJD(6) * t381 + t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t391, t392, 0, 0, 0, 0, 0, -t487 * t705 - t652 - t734, t462 - t650 - t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t555 - t651 - t655, -t554 + t653 - t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43 * qJD(2), t44 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t17 + qJD(3) * t22, -qJD(2) * t20 + qJD(3) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, -t553, t551 * t780, t512, t441, -qJD(3) * t67 + t487 * t658 - t567, -qJD(3) * t69 + t491 * t658 - t566, -qJD(3) * t109 + t490 * t663 + t162, -qJD(3) * t52 - t732 - t91, qJD(3) * t71 + qJD(6) * t234 - t723, qJD(3) * t73 + qJD(6) * t231 + t724, -t503, qJD(3) * t1 + qJD(4) * t72 + qJD(6) * t35 - t576, qJD(3) * t2 + qJD(4) * t163 + qJD(6) * t33 - t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610, t552, t435, t438, qJD(2) * t637, t534, t535, t464 * t481 - t387 - t699, -0.2e1 * t487 * t605 + t426 - t736, -t561 + t651, -t562 - t653, -t529, -qJD(6) * t302 - t517, qJD(6) * t301 - t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, t438, 0, 0, 0, 0, 0, t734, t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t648, t454 * qJD(6), 0, 0, 0, -pkin(5) * t701, -pkin(5) * t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t504, -t500, -t611 + t700, -t612 - t701, -t545, -pkin(11) * t700 - t508, pkin(11) * t701 - t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t27 + qJD(3) * t37, qJD(2) * t28 + qJD(3) * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, -t513, qJD(3) * t130 - qJD(5) * t234 + t303 * t688, qJD(3) * t129 - qJD(5) * t231 + t663, t296, qJD(3) * t13 + qJD(4) * t140 - qJD(5) * t35 + t571, qJD(3) * t14 + qJD(4) * t141 - qJD(5) * t33 + t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, t501, t695 + (t486 * t685 - t705) * t487, t464 * t490 + t462 + t696, -t438 / 0.2e1 + t471, qJD(4) * t382 + qJD(5) * t302 + t515, qJD(4) * t381 - qJD(5) * t301 + t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t555, t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, t500, t611, t612, t545, t508, t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t47;
