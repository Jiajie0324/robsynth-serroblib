% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRPR14_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPR14_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:26:15
% EndTime: 2019-03-10 00:27:04
% DurationCPUTime: 28.40s
% Computational Cost: add. (30732->838), mult. (92591->1157), div. (0->0), fcn. (77008->14), ass. (0->329)
t927 = cos(qJ(3));
t1026 = qJD(3) * t927;
t917 = sin(pkin(7));
t1004 = t917 * t1026;
t918 = sin(pkin(6));
t1029 = qJD(1) * t918;
t928 = cos(qJ(2));
t1054 = t927 * t928;
t923 = sin(qJ(3));
t924 = sin(qJ(2));
t1057 = t923 * t924;
t920 = cos(pkin(7));
t950 = -t1057 * t920 + t1054;
t843 = t950 * t1029;
t1103 = -t843 + t1004;
t1059 = t920 * t923;
t1064 = t917 * t923;
t1058 = t920 * t927;
t903 = pkin(10) * t1064;
t1082 = pkin(2) * t1058 - t903;
t1075 = cos(pkin(6));
t1009 = pkin(1) * t1075;
t983 = t928 * t1009;
t901 = qJD(1) * t983;
t976 = t918 * (-pkin(10) * t920 - pkin(9));
t954 = t924 * t976;
t824 = qJD(1) * t954 + t901;
t984 = t924 * t1009;
t933 = t928 * t976 - t984;
t825 = t933 * qJD(1);
t1077 = pkin(10) * t917;
t942 = (pkin(2) * t924 - t1077 * t928) * t918;
t857 = qJD(1) * t942;
t1102 = t1082 * qJD(3) - t825 * t1059 - t857 * t1064 - t927 * t824;
t757 = -t825 * t917 + t920 * t857;
t1055 = t924 * t927;
t1056 = t923 * t928;
t952 = t1055 * t920 + t1056;
t842 = t952 * t1029;
t1101 = pkin(3) * t842 - pkin(11) * t843 + t757 - (pkin(3) * t923 - pkin(11) * t927) * t917 * qJD(3);
t1008 = t924 * t1029;
t982 = t917 * t1008;
t1100 = pkin(11) * t982 - t1102;
t922 = sin(qJ(4));
t926 = cos(qJ(4));
t874 = t1064 * t922 - t926 * t920;
t1038 = -qJD(4) * t874 + t1103 * t926 - t922 * t982;
t875 = t1064 * t926 + t920 * t922;
t1037 = qJD(4) * t875 + t1103 * t922 + t926 * t982;
t1063 = t917 * t927;
t1031 = pkin(2) * t1059 + pkin(10) * t1063;
t1099 = t1031 * qJD(3) - t923 * t824;
t951 = t1056 * t920 + t1055;
t941 = t951 * t918;
t997 = t1075 * qJD(1);
t957 = t997 + qJD(2);
t943 = t957 * t917;
t788 = qJD(1) * t941 + t923 * t943;
t1007 = t928 * t1029;
t892 = t917 * t1007;
t1020 = t892 - qJD(3);
t935 = -t920 * t957 + t1020;
t745 = t926 * t788 - t922 * t935;
t979 = t920 * t1007;
t888 = t927 * t979;
t981 = t923 * t1008;
t786 = -t927 * t943 - t888 + t981;
t783 = qJD(4) + t786;
t916 = sin(pkin(13));
t919 = cos(pkin(13));
t714 = t745 * t919 + t783 * t916;
t921 = sin(qJ(6));
t1071 = t714 * t921;
t712 = t745 * t916 - t783 * t919;
t925 = cos(qJ(6));
t1091 = -t925 * t712 - t1071;
t837 = t926 * t935;
t743 = t788 * t922 + t837;
t742 = qJD(6) + t743;
t1098 = t1091 * t742;
t1035 = t825 * t1058 - (-pkin(3) * t1008 - t857 * t927) * t917 + t1099;
t1027 = qJD(3) * t923;
t1005 = t917 * t1027;
t971 = -t842 + t1005;
t1024 = qJD(4) * t926;
t1025 = qJD(4) * t922;
t863 = pkin(11) * t920 + t1031;
t864 = (-pkin(3) * t927 - pkin(11) * t923 - pkin(2)) * t917;
t1097 = -t864 * t1024 + t1025 * t863 + t1100 * t926 + t1101 * t922;
t1096 = -t863 * t1024 - t864 * t1025 + t1100 * t922 - t1101 * t926;
t1095 = qJ(5) * t842 - (qJ(5) * t1027 - qJD(5) * t927) * t917 + t1097;
t1062 = t918 * t928;
t939 = pkin(9) * t1062 + t984;
t780 = t939 * qJD(1) + (t943 + t979) * pkin(10);
t934 = pkin(2) * t1075 + t954;
t785 = qJD(2) * pkin(2) + qJD(1) * t934 + t901;
t851 = (-pkin(2) * t928 - t1077 * t924 - pkin(1)) * t918;
t838 = qJD(1) * t851;
t704 = t785 * t1059 + t838 * t1064 + t927 * t780;
t1094 = qJD(5) * t922 + t704 - t783 * (pkin(4) * t922 - qJ(5) * t926);
t1093 = -t1037 * pkin(4) + qJ(5) * t1038 + qJD(5) * t875 - t1035;
t962 = t712 * t921 - t714 * t925;
t1090 = t742 * t962;
t1042 = -t1038 * t916 + t971 * t919;
t1041 = -t1038 * t919 - t971 * t916;
t1019 = qJD(1) * qJD(2);
t913 = t918 ^ 2;
t1087 = -0.2e1 * t913 * t1019;
t1086 = MDP(6) * t928;
t1085 = t783 * t922;
t1016 = pkin(11) * t1025;
t703 = -t923 * t780 + t927 * (t785 * t920 + t838 * t917);
t735 = pkin(3) * t788 + pkin(11) * t786;
t1045 = t926 * t703 + t922 * t735;
t628 = qJ(5) * t788 + t1045;
t1053 = t1094 * t919 + (-t1016 - t628) * t916;
t1084 = t1094 * t916 + t919 * t628;
t1051 = t1093 * t919 - t1095 * t916;
t1050 = t1093 * t916 + t1095 * t919;
t1049 = -pkin(4) * t971 - t1096;
t1083 = MDP(5) * (t924 ^ 2 - t928 ^ 2);
t1081 = t920 * t1054 - t1057;
t999 = t1075 * t917;
t807 = (t1062 * t920 + t999) * pkin(10) + t939;
t821 = t983 + t934;
t1080 = -t923 * t807 + t927 * (t821 * t920 + t851 * t917);
t1079 = qJD(2) * t952 + qJD(3) * t951;
t929 = qJD(1) ^ 2;
t1078 = pkin(5) * t922;
t1076 = pkin(12) + qJ(5);
t940 = qJD(3) * t943;
t1000 = t918 * t1019;
t977 = t928 * t1000;
t988 = -t920 * qJD(2) - qJD(3);
t746 = qJD(3) * t888 + t981 * t988 + (t940 + t977) * t927;
t978 = t924 * t1000;
t958 = t917 * t978;
t993 = t922 * t746 - t926 * t958;
t673 = qJD(4) * t745 + t993;
t1074 = qJ(5) * t673;
t930 = t1079 * t918;
t936 = t923 * t940;
t747 = qJD(1) * t930 + t936;
t1002 = t920 * t1026;
t972 = qJD(2) * t997;
t955 = pkin(1) * t972;
t898 = t928 * t955;
t946 = qJD(2) * t954;
t802 = qJD(1) * t946 + t898;
t827 = t933 * qJD(2);
t803 = qJD(1) * t827;
t858 = qJD(2) * t942;
t847 = qJD(1) * t858;
t938 = -t785 * t1002 - t838 * t1004 + t1027 * t780 - t803 * t1059 - t847 * t1064 - t927 * t802;
t630 = pkin(11) * t958 - t938;
t750 = -t803 * t917 + t920 * t847;
t656 = pkin(3) * t747 - pkin(11) * t746 + t750;
t739 = -t785 * t917 + t920 * t838;
t680 = pkin(3) * t786 - pkin(11) * t788 + t739;
t687 = -pkin(11) * t935 + t704;
t986 = t687 * t1024 + t680 * t1025 + t922 * t630 - t926 * t656;
t567 = -pkin(4) * t747 + t986;
t1073 = t567 * t916;
t1072 = t567 * t919;
t1070 = t743 * t783;
t1069 = t743 * t916;
t1068 = t745 * t783;
t1067 = t913 * t929;
t1066 = t916 * t921;
t1065 = t916 * t926;
t1061 = t919 * t922;
t1060 = t919 * t926;
t569 = t680 * t1024 - t1025 * t687 + t926 * t630 + t922 * t656;
t566 = qJ(5) * t747 + qJD(5) * t783 + t569;
t1003 = t920 * t1027;
t643 = -t785 * t1003 - t838 * t1005 - t780 * t1026 + t803 * t1058 + t847 * t1063 - t923 * t802;
t631 = -pkin(3) * t958 - t643;
t672 = -qJD(4) * t837 - t1025 * t788 + t926 * t746 + t922 * t958;
t582 = pkin(4) * t673 - qJ(5) * t672 - qJD(5) * t745 + t631;
t559 = t919 * t566 + t916 * t582;
t975 = qJD(3) * t999;
t753 = t923 * t975 + t930;
t812 = -t1081 * t918 - t927 * t999;
t902 = qJD(2) * t983;
t826 = t902 + t946;
t937 = t821 * t1002 + t851 * t1004 - t1027 * t807 + t827 * t1059 + t858 * t1064 + t927 * t826;
t1028 = qJD(2) * t918;
t1006 = t924 * t1028;
t980 = t917 * t1006;
t649 = pkin(11) * t980 + t937;
t754 = t927 * t975 + (t950 * qJD(2) + qJD(3) * t1081) * t918;
t758 = -t827 * t917 + t920 * t858;
t668 = pkin(3) * t753 - pkin(11) * t754 + t758;
t752 = -t821 * t917 + t920 * t851;
t813 = t923 * t999 + t941;
t699 = pkin(3) * t812 - pkin(11) * t813 + t752;
t1013 = t821 * t1059 + t851 * t1064 + t927 * t807;
t998 = t1075 * t920;
t871 = t1062 * t917 - t998;
t707 = -pkin(11) * t871 + t1013;
t945 = t699 * t1024 - t1025 * t707 + t926 * t649 + t922 * t668;
t573 = qJ(5) * t753 + qJD(5) * t812 + t945;
t985 = -t821 * t1003 - t851 * t1005 - t807 * t1026 - t923 * t826;
t650 = -t827 * t1058 + (-pkin(3) * t1006 - t858 * t927) * t917 - t985;
t762 = t813 * t926 - t871 * t922;
t692 = qJD(4) * t762 + t754 * t922 - t926 * t980;
t761 = t813 * t922 + t871 * t926;
t693 = -qJD(4) * t761 + t754 * t926 + t922 * t980;
t592 = pkin(4) * t692 - qJ(5) * t693 - qJD(5) * t762 + t650;
t562 = t919 * t573 + t916 * t592;
t1052 = t1016 * t919 + t1084;
t613 = t922 * t680 + t926 * t687;
t608 = qJ(5) * t783 + t613;
t686 = pkin(3) * t935 - t703;
t617 = t743 * pkin(4) - t745 * qJ(5) + t686;
t579 = t919 * t608 + t916 * t617;
t612 = t680 * t926 - t922 * t687;
t691 = pkin(4) * t745 + qJ(5) * t743;
t601 = t919 * t612 + t916 * t691;
t1044 = t922 * t699 + t926 * t707;
t619 = qJ(5) * t812 + t1044;
t706 = pkin(3) * t871 - t1080;
t644 = pkin(4) * t761 - qJ(5) * t762 + t706;
t596 = t919 * t619 + t916 * t644;
t822 = t1063 * t919 + t875 * t916;
t823 = -t1063 * t916 + t875 * t919;
t748 = t925 * t822 + t823 * t921;
t1048 = -qJD(6) * t748 - t1041 * t925 + t1042 * t921;
t749 = -t822 * t921 + t823 * t925;
t1047 = qJD(6) * t749 - t1041 * t921 - t1042 * t925;
t1046 = -pkin(5) * t1042 + t1049;
t862 = t903 + (-pkin(2) * t927 - pkin(3)) * t920;
t760 = pkin(4) * t874 - qJ(5) * t875 + t862;
t1036 = t926 * t863 + t922 * t864;
t763 = -qJ(5) * t1063 + t1036;
t710 = t916 * t760 + t919 * t763;
t1023 = qJD(6) * t922;
t731 = -t1065 * t786 - t919 * t788;
t732 = -t1060 * t786 + t788 * t916;
t884 = -t925 * t919 + t1066;
t885 = t916 * t925 + t919 * t921;
t1040 = -t1023 * t885 - t1024 * t884 + t731 * t921 - t732 * t925;
t1022 = qJD(6) * t925;
t1039 = t1022 * t1061 - t1023 * t1066 + t1024 * t885 - t925 * t731 - t732 * t921;
t1034 = t742 * t884;
t1033 = t742 * t885;
t1010 = pkin(5) * t916 + pkin(11);
t697 = t922 * t703;
t629 = -pkin(4) * t788 - t735 * t926 + t697;
t1032 = -pkin(5) * t731 + t1010 * t1024 - t629;
t894 = -pkin(4) * t926 - qJ(5) * t922 - pkin(3);
t853 = pkin(11) * t1060 + t916 * t894;
t607 = -pkin(4) * t783 + qJD(5) - t612;
t1021 = -qJD(5) + t607;
t1018 = pkin(1) * t1067;
t640 = t672 * t916 - t919 * t747;
t641 = t672 * t919 + t747 * t916;
t1014 = -t712 * t1022 - t921 * t640 + t925 * t641;
t558 = -t566 * t916 + t919 * t582;
t553 = pkin(5) * t673 - pkin(12) * t641 + t558;
t554 = -pkin(12) * t640 + t559;
t996 = t925 * t553 - t554 * t921;
t561 = -t573 * t916 + t919 * t592;
t578 = -t608 * t916 + t919 * t617;
t600 = -t612 * t916 + t919 * t691;
t595 = -t619 * t916 + t919 * t644;
t995 = t925 * t640 + t921 * t641;
t994 = t699 * t926 - t922 * t707;
t709 = t919 * t760 - t763 * t916;
t992 = -t922 * t863 + t864 * t926;
t989 = t783 * t926;
t987 = t913 * t924 * t928 * MDP(4);
t973 = pkin(1) * t1087;
t764 = pkin(4) * t1063 - t992;
t830 = -pkin(12) * t916 * t922 + t853;
t970 = -pkin(12) * t732 + qJD(6) * t830 - t1078 * t786 - (-pkin(12) * t1060 + t1078) * qJD(4) + t1053;
t685 = -pkin(12) * t822 + t710;
t969 = -pkin(5) * t1037 - pkin(12) * t1041 + qJD(6) * t685 + t1051;
t882 = t919 * t894;
t804 = -pkin(12) * t1061 + t882 + (-pkin(11) * t916 - pkin(5)) * t926;
t968 = -pkin(12) * t731 - qJD(6) * t804 - (-pkin(11) * t1061 - pkin(12) * t1065) * qJD(4) + t1084;
t669 = pkin(5) * t874 - pkin(12) * t823 + t709;
t967 = -pkin(12) * t1042 - qJD(6) * t669 + t1050;
t965 = t553 * t921 + t554 * t925;
t568 = pkin(5) * t743 - pkin(12) * t714 + t578;
t571 = -pkin(12) * t712 + t579;
t556 = t568 * t925 - t571 * t921;
t557 = t568 * t921 + t571 * t925;
t729 = t762 * t919 + t812 * t916;
t577 = pkin(5) * t761 - pkin(12) * t729 + t595;
t728 = t762 * t916 - t812 * t919;
t583 = -pkin(12) * t728 + t596;
t964 = t577 * t925 - t583 * t921;
t963 = t577 * t921 + t583 * t925;
t663 = t925 * t728 + t729 * t921;
t664 = -t728 * t921 + t729 * t925;
t959 = t917 ^ 2 * t978;
t953 = -t707 * t1024 - t699 * t1025 - t922 * t649 + t668 * t926;
t620 = -pkin(4) * t812 - t994;
t897 = t1076 * t919;
t949 = pkin(12) * t743 * t919 + pkin(5) * t745 + qJD(5) * t916 + qJD(6) * t897 + t600;
t896 = t1076 * t916;
t948 = pkin(12) * t1069 - qJD(5) * t919 + qJD(6) * t896 + t601;
t947 = -pkin(11) * t747 + t686 * t783;
t574 = -qJD(6) * t1071 + t1014;
t576 = -pkin(4) * t753 - t953;
t575 = -qJD(6) * t962 + t995;
t932 = qJD(3) * t935;
t931 = t957 * t939;
t911 = -pkin(5) * t919 - pkin(4);
t889 = t1010 * t922;
t866 = t884 * t922;
t865 = t885 * t922;
t852 = -pkin(11) * t1065 + t882;
t733 = pkin(5) * t822 + t764;
t659 = t693 * t919 + t753 * t916;
t658 = t693 * t916 - t753 * t919;
t605 = pkin(5) * t728 + t620;
t604 = -pkin(5) * t1069 + t613;
t597 = pkin(5) * t712 + t607;
t585 = qJD(6) * t664 + t925 * t658 + t659 * t921;
t584 = -qJD(6) * t663 - t658 * t921 + t659 * t925;
t564 = pkin(5) * t658 + t576;
t563 = pkin(5) * t640 + t567;
t560 = -pkin(12) * t658 + t562;
t555 = pkin(5) * t692 - pkin(12) * t659 + t561;
t551 = -qJD(6) * t557 + t996;
t550 = qJD(6) * t556 + t965;
t1 = [(-t754 * t935 - t746 * t871 + (qJD(1) * t813 + t788) * t980) * MDP(13) + (t753 * t935 + t747 * t871 + (-qJD(1) * t812 - t786) * t980) * MDP(14) + 0.2e1 * t987 * t1019 + (-t892 + (t998 - t871) * qJD(1) - t988) * MDP(15) * t980 + (t612 * t753 + t631 * t761 + t650 * t743 + t706 * t673 + t686 * t692 + t747 * t994 + t783 * t953 - t812 * t986) * MDP(23) + (-(qJD(6) * t964 + t555 * t921 + t560 * t925) * t742 - t963 * t673 - t550 * t761 - t557 * t692 - t564 * t962 + t605 * t574 + t563 * t664 + t597 * t584) * MDP(35) + (t574 * t761 + t584 * t742 + t664 * t673 - t692 * t962) * MDP(31) + (t574 * t664 - t584 * t962) * MDP(29) + (t1091 * t584 - t574 * t663 - t575 * t664 + t585 * t962) * MDP(30) + ((-qJD(6) * t963 + t555 * t925 - t560 * t921) * t742 + t964 * t673 + t551 * t761 + t556 * t692 - t564 * t1091 + t605 * t575 + t563 * t663 + t597 * t585) * MDP(34) + (t1091 * t692 - t575 * t761 - t585 * t742 - t663 * t673) * MDP(32) + (-qJD(2) * t931 + t924 * t973 - t939 * t972) * MDP(9) + (t937 * t935 - t938 * t871 + t758 * t788 + t752 * t746 + t750 * t813 + t739 * t754 + (-qJD(1) * t1013 - t704) * t980) * MDP(17) + (-(-pkin(9) * t1006 + t902) * t957 - (-pkin(9) * t978 + t898) * t1075 + t928 * t973) * MDP(10) + (t672 * t812 + t693 * t783 + t745 * t753 + t747 * t762) * MDP(20) + (-t673 * t812 - t692 * t783 - t743 * t753 - t747 * t761) * MDP(21) + (t747 * t812 + t753 * t783) * MDP(22) + (-t746 * t812 - t747 * t813 - t753 * t788 - t754 * t786) * MDP(12) + (t746 * t813 + t754 * t788) * MDP(11) + (-MDP(7) * t1006 + t1028 * t1086) * (0.2e1 * t997 + qJD(2)) + (-t672 * t761 - t673 * t762 - t692 * t745 - t693 * t743) * MDP(19) + (t672 * t762 + t693 * t745) * MDP(18) + (t558 * t761 + t561 * t743 + t567 * t728 + t576 * t712 + t578 * t692 + t595 * t673 + t607 * t658 + t620 * t640) * MDP(25) + (t673 * t761 + t692 * t742) * MDP(33) + (-t559 * t761 - t562 * t743 + t567 * t729 + t576 * t714 - t579 * t692 - t596 * t673 + t607 * t659 + t620 * t641) * MDP(26) + (-t558 * t729 - t559 * t728 - t561 * t714 - t562 * t712 - t578 * t659 - t579 * t658 - t595 * t641 - t596 * t640) * MDP(27) + (-((t827 * t920 + t858 * t917) * t927 + t985) * t935 - t643 * t871 + t758 * t786 + t752 * t747 + t750 * t812 + t739 * t753 + (qJD(1) * t1080 + t703) * t980) * MDP(16) + (-t1044 * t747 - t569 * t812 - t613 * t753 + t631 * t762 + t650 * t745 + t706 * t672 + t686 * t693 - t783 * t945) * MDP(24) + (t558 * t595 + t559 * t596 + t561 * t578 + t562 * t579 + t567 * t620 + t576 * t607) * MDP(28) + t1083 * t1087; (t786 * t843 + t788 * t842 + (t746 * t927 - t747 * t923 + (-t786 * t927 - t788 * t923) * qJD(3)) * t917) * MDP(12) + (-t898 + (-pkin(9) * t1008 + t901) * t997 + t928 * t1018 + t901 * qJD(2)) * MDP(10) + (-t1037 * t962 + t1048 * t742 + t574 * t874 + t673 * t749) * MDP(31) + (-(t669 * t921 + t685 * t925) * t673 - t550 * t874 + t733 * t574 + t563 * t749 + (t921 * t969 + t925 * t967) * t742 - t1046 * t962 + t1048 * t597 - t1037 * t557) * MDP(35) + (-t1048 * t962 + t574 * t749) * MDP(29) + (t1047 * t962 + t1048 * t1091 - t574 * t748 - t575 * t749) * MDP(30) + ((t669 * t925 - t685 * t921) * t673 + t551 * t874 + t733 * t575 + t563 * t748 + (t921 * t967 - t925 * t969) * t742 - t1046 * t1091 + t1047 * t597 + t1037 * t556) * MDP(34) + (t1037 * t1091 - t1047 * t742 - t575 * t874 - t673 * t748) * MDP(32) + (-pkin(9) * t977 + qJD(1) * t931 + (t1018 - t955) * t924) * MDP(9) + (t923 * t959 + t746 * t920 + t843 * t935 + (-t1008 * t788 - t927 * t932) * t917) * MDP(13) + (t927 * t959 - t747 * t920 - t842 * t935 + (t1008 * t786 + t923 * t932) * t917) * MDP(14) - (t920 * t997 - t1020) * MDP(15) * t982 + (t643 * t920 - t917 * pkin(2) * t747 - t750 * t1063 - t757 * t786 + (qJD(2) * t1082 - t703) * t982 + t971 * t739 + ((t825 * t920 + t857 * t917) * t927 + t1099) * t935) * MDP(16) + (-t987 + (MDP(7) * t924 - t1086) * t918 * t1075) * t929 + (t1037 * t742 + t673 * t874) * MDP(33) + (t1038 * t745 + t672 * t875) * MDP(18) + (-t1037 * t745 - t1038 * t743 - t672 * t874 - t673 * t875) * MDP(19) + (t938 * t920 - t757 * t788 - t739 * t843 + (t739 * t1026 - pkin(2) * t746 + t750 * t923 + (-qJD(2) * t1031 + t704) * t1008) * t917 + t1102 * t935) * MDP(17) + (t746 * t1064 + t1103 * t788) * MDP(11) + (-t1063 * t747 + t783 * t971) * MDP(22) + (t1038 * t783 - t1063 * t672 + t745 * t971 + t747 * t875) * MDP(20) + (-t1037 * t783 + t1063 * t673 - t743 * t971 - t747 * t874) * MDP(21) + (t1035 * t745 - t1036 * t747 + t1038 * t686 + t569 * t1063 + t1097 * t783 - t971 * t613 + t631 * t875 + t862 * t672) * MDP(24) + (-t1037 * t579 - t1041 * t607 + t1049 * t714 + t1050 * t743 - t559 * t874 + t567 * t823 + t641 * t764 - t673 * t710) * MDP(26) + (t1041 * t578 + t1042 * t579 + t1050 * t712 + t1051 * t714 - t558 * t823 - t559 * t822 - t640 * t710 - t641 * t709) * MDP(27) + (t1037 * t578 - t1042 * t607 + t1049 * t712 - t1051 * t743 + t558 * t874 + t567 * t822 + t640 * t764 + t673 * t709) * MDP(25) + (t1049 * t607 - t1050 * t579 - t1051 * t578 + t558 * t709 + t559 * t710 + t567 * t764) * MDP(28) + (t1035 * t743 + t1037 * t686 + t986 * t1063 + t1096 * t783 + t971 * t612 + t631 * t874 + t862 * t673 + t992 * t747) * MDP(23) + t1067 * t1083; (-t1029 * t1079 - t936) * MDP(14) + (-t703 * t935 + t739 * t786 + t938) * MDP(17) + (-t786 * t935 + t746) * MDP(13) + (t747 * t922 + t783 * t989) * MDP(20) + (t672 * t922 + t745 * t989) * MDP(18) + (t1085 * t742 - t673 * t926) * MDP(33) + (-t1085 * t783 + t747 * t926) * MDP(21) + (-t704 * t935 + t643) * MDP(16) + MDP(15) * t958 + (-t607 * t732 - t629 * t714 - t673 * t853 + t1052 * t743 + (t559 + (pkin(11) * t714 + t607 * t919) * qJD(4)) * t926 + (pkin(11) * t641 - t579 * t783 + t1072) * t922) * MDP(26) + (-t607 * t731 - t629 * t712 + t673 * t852 - t1053 * t743 + (-t558 + (pkin(11) * t712 + t607 * t916) * qJD(4)) * t926 + (pkin(11) * t640 + t578 * t783 + t1073) * t922) * MDP(25) + ((t672 - t1070) * t926 + (-t673 - t1068) * t922) * MDP(19) + ((t804 * t925 - t830 * t921) * t673 - t551 * t926 + t889 * t575 + t563 * t865 + (t921 * t968 - t925 * t970) * t742 - t1032 * t1091 + t1039 * t597 + t556 * t1085) * MDP(34) + (-t1039 * t742 + t1085 * t1091 + t575 * t926 - t673 * t865) * MDP(32) + (-pkin(3) * t673 - t631 * t926 - t704 * t743 + (t697 + (-pkin(11) * qJD(4) - t735) * t926) * t783 + t947 * t922) * MDP(23) + (t578 * t732 + t579 * t731 - t640 * t853 - t641 * t852 + (-t558 * t919 - t559 * t916) * t922 + t1053 * t714 + t1052 * t712 + (-t578 * t919 - t579 * t916) * t1024) * MDP(27) - t786 ^ 2 * MDP(12) + (t1040 * t742 - t1085 * t962 - t574 * t926 - t673 * t866) * MDP(31) + (-(t804 * t921 + t830 * t925) * t673 + t550 * t926 + t889 * t574 - t563 * t866 + (t921 * t970 + t925 * t968) * t742 - t1032 * t962 + t1040 * t597 - t557 * t1085) * MDP(35) + (-t1040 * t962 - t574 * t866) * MDP(29) + (t1039 * t962 + t1040 * t1091 - t574 * t865 + t575 * t866) * MDP(30) + (-pkin(3) * t672 + t631 * t922 - t704 * t745 + (t1016 + t1045) * t783 + t947 * t926) * MDP(24) + (t558 * t852 + t559 * t853 - t607 * t629 - t1052 * t579 - t1053 * t578 + (t1024 * t607 + t567 * t922) * pkin(11)) * MDP(28) + (MDP(11) * t786 + MDP(12) * t788 - MDP(14) * t935 - t739 * MDP(16) - t745 * MDP(20) + t743 * MDP(21) - t783 * MDP(22) - t612 * MDP(23) + t613 * MDP(24)) * t788; -t743 ^ 2 * MDP(19) + (t672 + t1070) * MDP(20) + (t1068 - t993) * MDP(21) + t747 * MDP(22) + (t613 * t783 - t986) * MDP(23) + (t612 * t783 + t686 * t743 - t569) * MDP(24) + (-t916 * t1074 - pkin(4) * t640 - t1072 - t613 * t712 + (t1021 * t916 - t600) * t743) * MDP(25) + (-t919 * t1074 - pkin(4) * t641 + t1073 - t613 * t714 + (t1021 * t919 + t601) * t743) * MDP(26) + (t600 * t714 + t601 * t712 + (-qJ(5) * t640 - qJD(5) * t712 - t578 * t743 + t559) * t919 + (qJ(5) * t641 + qJD(5) * t714 - t579 * t743 - t558) * t916) * MDP(27) + (-pkin(4) * t567 - t578 * t600 - t579 * t601 - t607 * t613 + (-t578 * t916 + t579 * t919) * qJD(5) + (-t558 * t916 + t559 * t919) * qJ(5)) * MDP(28) + (t1034 * t962 + t574 * t885) * MDP(29) + (t1033 * t962 - t1034 * t1091 - t574 * t884 - t575 * t885) * MDP(30) + (-t1034 * t742 + t673 * t885) * MDP(31) + (-t1033 * t742 - t673 * t884) * MDP(32) + ((-t896 * t925 - t897 * t921) * t673 + t911 * t575 + t563 * t884 + t604 * t1091 + (t921 * t948 - t925 * t949) * t742 + t1033 * t597) * MDP(34) + (-(-t896 * t921 + t897 * t925) * t673 + t911 * t574 + t563 * t885 + t604 * t962 + (t921 * t949 + t925 * t948) * t742 - t1034 * t597) * MDP(35) + (MDP(18) * t743 + MDP(19) * t745 - MDP(21) * qJD(4) - MDP(23) * t686 - MDP(25) * t578 + MDP(26) * t579 + MDP(31) * t962 - MDP(32) * t1091 - MDP(33) * t742 - MDP(34) * t556 + MDP(35) * t557) * t745; (t714 * t743 + t640) * MDP(25) + (-t712 * t743 + t641) * MDP(26) + (-t712 ^ 2 - t714 ^ 2) * MDP(27) + (t578 * t714 + t579 * t712 + t567) * MDP(28) + (t575 - t1090) * MDP(34) + (t574 + t1098) * MDP(35); t962 * t1091 * MDP(29) + (-t1091 ^ 2 + t962 ^ 2) * MDP(30) + (t1014 - t1098) * MDP(31) + (-t995 - t1090) * MDP(32) + t673 * MDP(33) + (t557 * t742 + t597 * t962 + t996) * MDP(34) + (-t1091 * t597 + t556 * t742 - t965) * MDP(35) + (-MDP(31) * t1071 + MDP(32) * t962 - MDP(34) * t557 - MDP(35) * t556) * qJD(6);];
tauc  = t1;
