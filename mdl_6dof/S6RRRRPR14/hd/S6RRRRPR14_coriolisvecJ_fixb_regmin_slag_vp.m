% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR14_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR14_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:25:30
% EndTime: 2019-03-10 00:26:15
% DurationCPUTime: 18.12s
% Computational Cost: add. (30626->731), mult. (92473->1047), div. (0->0), fcn. (77008->14), ass. (0->326)
t371 = cos(pkin(7));
t378 = cos(qJ(3));
t379 = cos(qJ(2));
t495 = t378 * t379;
t374 = sin(qJ(3));
t375 = sin(qJ(2));
t498 = t374 * t375;
t401 = -t371 * t498 + t495;
t369 = sin(pkin(6));
t476 = qJD(1) * t369;
t294 = t401 * t476;
t368 = sin(pkin(7));
t473 = qJD(3) * t378;
t454 = t368 * t473;
t549 = -t294 + t454;
t514 = cos(pkin(6));
t458 = pkin(1) * t514;
t434 = t379 * t458;
t352 = qJD(1) * t434;
t425 = t369 * (-pkin(10) * t371 - pkin(9));
t404 = t375 * t425;
t275 = qJD(1) * t404 + t352;
t435 = t375 * t458;
t384 = t379 * t425 - t435;
t276 = t384 * qJD(1);
t525 = pkin(10) * t368;
t393 = (pkin(2) * t375 - t379 * t525) * t369;
t308 = qJD(1) * t393;
t500 = t371 * t374;
t505 = t368 * t374;
t354 = pkin(10) * t505;
t499 = t371 * t378;
t530 = pkin(2) * t499 - t354;
t548 = t530 * qJD(3) - t378 * t275 - t276 * t500 - t308 * t505;
t208 = -t276 * t368 + t371 * t308;
t496 = t375 * t378;
t497 = t374 * t379;
t403 = t371 * t496 + t497;
t293 = t403 * t476;
t547 = pkin(3) * t293 - pkin(11) * t294 + t208 - (pkin(3) * t374 - pkin(11) * t378) * t368 * qJD(3);
t457 = t375 * t476;
t433 = t368 * t457;
t546 = pkin(11) * t433 - t548;
t402 = t371 * t497 + t496;
t392 = t402 * t369;
t445 = t514 * qJD(1);
t408 = t445 + qJD(2);
t394 = t408 * t368;
t239 = qJD(1) * t392 + t374 * t394;
t377 = cos(qJ(4));
t456 = t379 * t476;
t343 = t368 * t456;
t468 = t343 - qJD(3);
t386 = -t371 * t408 + t468;
t288 = t377 * t386;
t373 = sin(qJ(4));
t194 = t239 * t373 + t288;
t193 = qJD(6) + t194;
t196 = t377 * t239 - t373 * t386;
t430 = t371 * t456;
t339 = t378 * t430;
t432 = t374 * t457;
t237 = -t378 * t394 - t339 + t432;
t234 = qJD(4) + t237;
t367 = sin(pkin(13));
t370 = cos(pkin(13));
t163 = t196 * t367 - t234 * t370;
t376 = cos(qJ(6));
t165 = t196 * t370 + t234 * t367;
t372 = sin(qJ(6));
t512 = t165 * t372;
t536 = -t376 * t163 - t512;
t545 = t193 * t536;
t325 = -t377 * t371 + t373 * t505;
t484 = -qJD(4) * t325 - t373 * t433 + t377 * t549;
t326 = t371 * t373 + t377 * t505;
t483 = qJD(4) * t326 + t373 * t549 + t377 * t433;
t504 = t368 * t378;
t478 = pkin(2) * t500 + pkin(10) * t504;
t544 = t478 * qJD(3) - t374 * t275;
t474 = qJD(3) * t374;
t451 = t368 * t474;
t537 = t293 - t451;
t481 = t276 * t499 - (-pkin(3) * t457 - t308 * t378) * t368 + t544;
t314 = pkin(11) * t371 + t478;
t315 = (-pkin(3) * t378 - pkin(11) * t374 - pkin(2)) * t368;
t471 = qJD(4) * t377;
t472 = qJD(4) * t373;
t543 = t314 * t472 - t315 * t471 + t547 * t373 + t546 * t377;
t542 = -t314 * t471 - t315 * t472 + t546 * t373 - t547 * t377;
t541 = -qJ(5) * t293 + (qJ(5) * t474 - qJD(5) * t378) * t368 - t543;
t503 = t369 * t379;
t390 = pkin(9) * t503 + t435;
t231 = t390 * qJD(1) + (t394 + t430) * pkin(10);
t385 = pkin(2) * t514 + t404;
t236 = qJD(2) * pkin(2) + qJD(1) * t385 + t352;
t302 = (-pkin(2) * t379 - t375 * t525 - pkin(1)) * t369;
t289 = qJD(1) * t302;
t155 = t378 * t231 + t236 * t500 + t289 * t505;
t540 = qJD(5) * t373 + t155 - t234 * (pkin(4) * t373 - qJ(5) * t377);
t539 = -pkin(4) * t483 + qJ(5) * t484 + qJD(5) * t326 - t481;
t413 = t163 * t372 - t165 * t376;
t535 = t193 * t413;
t488 = -t367 * t484 - t537 * t370;
t487 = t537 * t367 - t370 * t484;
t523 = t367 * t541 + t539 * t370;
t522 = t539 * t367 - t370 * t541;
t518 = pkin(4) * t537 - t542;
t465 = pkin(11) * t472;
t154 = -t374 * t231 + (t236 * t371 + t289 * t368) * t378;
t186 = pkin(3) * t239 + pkin(11) * t237;
t491 = t377 * t154 + t373 * t186;
t79 = qJ(5) * t239 + t491;
t517 = -t540 * t370 + (t465 + t79) * t367;
t532 = t367 * t540 + t370 * t79;
t531 = t373 * t234;
t529 = t371 * t495 - t498;
t447 = t514 * t368;
t258 = (t371 * t503 + t447) * pkin(10) + t390;
t272 = t434 + t385;
t528 = -t374 * t258 + t378 * (t272 * t371 + t302 * t368);
t391 = qJD(3) * t394;
t467 = qJD(1) * qJD(2);
t449 = t369 * t467;
t428 = t379 * t449;
t437 = -t371 * qJD(2) - qJD(3);
t197 = qJD(3) * t339 + t432 * t437 + (t391 + t428) * t378;
t429 = t375 * t449;
t409 = t368 * t429;
t124 = qJD(4) * t196 + t373 * t197 - t377 * t409;
t123 = -qJD(4) * t288 + t377 * t197 - t239 * t472 + t373 * t409;
t527 = qJD(2) * t403 + qJD(3) * t402;
t381 = t527 * t369;
t387 = t374 * t391;
t198 = qJD(1) * t381 + t387;
t91 = t123 * t367 - t370 * t198;
t92 = t123 * t370 + t198 * t367;
t26 = -qJD(6) * t413 + t372 * t92 + t376 * t91;
t380 = qJD(1) ^ 2;
t526 = pkin(5) * t373;
t524 = pkin(12) + qJ(5);
t278 = t384 * qJD(2);
t254 = qJD(1) * t278;
t309 = qJD(2) * t393;
t298 = qJD(1) * t309;
t201 = -t254 * t368 + t371 * t298;
t107 = pkin(3) * t198 - pkin(11) * t197 + t201;
t190 = -t236 * t368 + t371 * t289;
t131 = pkin(3) * t237 - pkin(11) * t239 + t190;
t138 = -pkin(11) * t386 + t155;
t418 = qJD(2) * t445;
t406 = pkin(1) * t418;
t349 = t379 * t406;
t396 = qJD(2) * t404;
t253 = qJD(1) * t396 + t349;
t452 = t371 * t473;
t389 = t231 * t474 - t236 * t452 - t378 * t253 - t254 * t500 - t289 * t454 - t298 * t505;
t81 = pkin(11) * t409 - t389;
t20 = t373 * t107 + t131 * t471 - t138 * t472 + t377 * t81;
t17 = qJ(5) * t198 + qJD(5) * t234 + t20;
t453 = t371 * t474;
t94 = -t231 * t473 - t236 * t453 - t374 * t253 + t254 * t499 - t289 * t451 + t298 * t504;
t82 = -pkin(3) * t409 - t94;
t33 = pkin(4) * t124 - qJ(5) * t123 - qJD(5) * t196 + t82;
t10 = t370 * t17 + t367 * t33;
t424 = qJD(3) * t447;
t204 = t374 * t424 + t381;
t263 = -t369 * t529 - t378 * t447;
t353 = qJD(2) * t434;
t277 = t353 + t396;
t388 = -t258 * t474 + t272 * t452 + t378 * t277 + t278 * t500 + t302 * t454 + t309 * t505;
t475 = qJD(2) * t369;
t455 = t375 * t475;
t431 = t368 * t455;
t100 = pkin(11) * t431 + t388;
t205 = t378 * t424 + (t401 * qJD(2) + qJD(3) * t529) * t369;
t209 = -t278 * t368 + t371 * t309;
t119 = pkin(3) * t204 - pkin(11) * t205 + t209;
t203 = -t272 * t368 + t371 * t302;
t264 = t374 * t447 + t392;
t150 = pkin(3) * t263 - pkin(11) * t264 + t203;
t446 = t514 * t371;
t322 = t368 * t503 - t446;
t462 = t378 * t258 + t272 * t500 + t302 * t505;
t158 = -pkin(11) * t322 + t462;
t397 = t377 * t100 + t373 * t119 + t150 * t471 - t158 * t472;
t24 = qJ(5) * t204 + qJD(5) * t263 + t397;
t436 = -t258 * t473 - t272 * t453 - t374 * t277 - t302 * t451;
t101 = -t278 * t499 + (-pkin(3) * t455 - t309 * t378) * t368 - t436;
t213 = t264 * t377 - t322 * t373;
t143 = qJD(4) * t213 + t205 * t373 - t377 * t431;
t212 = t264 * t373 + t322 * t377;
t144 = -qJD(4) * t212 + t205 * t377 + t373 * t431;
t43 = pkin(4) * t143 - qJ(5) * t144 - qJD(5) * t213 + t101;
t13 = t370 * t24 + t367 * t43;
t64 = t373 * t131 + t377 * t138;
t59 = qJ(5) * t234 + t64;
t137 = pkin(3) * t386 - t154;
t68 = t194 * pkin(4) - t196 * qJ(5) + t137;
t30 = t367 * t68 + t370 * t59;
t490 = t373 * t150 + t377 * t158;
t70 = qJ(5) * t263 + t490;
t157 = pkin(3) * t322 - t528;
t95 = pkin(4) * t212 - qJ(5) * t213 + t157;
t47 = t367 * t95 + t370 * t70;
t21 = t377 * t107 - t131 * t472 - t138 * t471 - t373 * t81;
t18 = -pkin(4) * t198 - t21;
t521 = t18 * t367;
t520 = t18 * t370;
t519 = -t488 * pkin(5) + t518;
t516 = -t370 * t465 - t532;
t506 = t367 * t377;
t182 = -t237 * t506 - t370 * t239;
t459 = pkin(5) * t367 + pkin(11);
t148 = t373 * t154;
t80 = -pkin(4) * t239 - t186 * t377 + t148;
t515 = -pkin(5) * t182 + t459 * t471 - t80;
t142 = pkin(4) * t196 + qJ(5) * t194;
t63 = t131 * t377 - t373 * t138;
t52 = t367 * t142 + t370 * t63;
t513 = qJ(5) * t124;
t511 = t194 * t234;
t510 = t194 * t367;
t509 = t196 * t234;
t364 = t369 ^ 2;
t508 = t364 * t380;
t507 = t367 * t372;
t502 = t370 * t373;
t501 = t370 * t377;
t58 = -pkin(4) * t234 + qJD(5) - t63;
t494 = -qJD(5) + t58;
t273 = t326 * t367 + t370 * t504;
t274 = t326 * t370 - t367 * t504;
t199 = t376 * t273 + t274 * t372;
t493 = -qJD(6) * t199 + t488 * t372 - t487 * t376;
t200 = -t273 * t372 + t274 * t376;
t492 = qJD(6) * t200 - t487 * t372 - t488 * t376;
t313 = t354 + (-pkin(2) * t378 - pkin(3)) * t371;
t211 = pkin(4) * t325 - qJ(5) * t326 + t313;
t482 = t377 * t314 + t373 * t315;
t214 = -qJ(5) * t504 + t482;
t161 = t367 * t211 + t370 * t214;
t183 = -t237 * t501 + t239 * t367;
t335 = -t376 * t370 + t507;
t336 = t367 * t376 + t370 * t372;
t470 = qJD(6) * t373;
t486 = t182 * t372 - t183 * t376 - t335 * t471 - t336 * t470;
t469 = qJD(6) * t376;
t485 = -t376 * t182 - t183 * t372 + t336 * t471 + t469 * t502 - t470 * t507;
t480 = t193 * t335;
t479 = t193 * t336;
t345 = -pkin(4) * t377 - qJ(5) * t373 - pkin(3);
t304 = pkin(11) * t501 + t367 * t345;
t477 = t375 ^ 2 - t379 ^ 2;
t464 = t375 * t508;
t450 = t364 * t467;
t9 = -t17 * t367 + t370 * t33;
t12 = -t24 * t367 + t370 * t43;
t29 = -t367 * t59 + t370 * t68;
t46 = -t367 * t70 + t370 * t95;
t51 = t370 * t142 - t367 * t63;
t444 = t150 * t377 - t373 * t158;
t160 = t370 * t211 - t214 * t367;
t442 = -t373 * t314 + t315 * t377;
t440 = t377 * t234;
t438 = 0.2e1 * t450;
t120 = pkin(5) * t325 - pkin(12) * t274 + t160;
t427 = -t488 * pkin(12) - qJD(6) * t120 + t522;
t136 = -pkin(12) * t273 + t161;
t426 = -t483 * pkin(5) - t487 * pkin(12) + qJD(6) * t136 + t523;
t423 = t369 * t380 * t514;
t422 = -0.2e1 * pkin(1) * t450;
t4 = pkin(5) * t124 - pkin(12) * t92 + t9;
t5 = -pkin(12) * t91 + t10;
t421 = t372 * t4 + t376 * t5;
t281 = -pkin(12) * t367 * t373 + t304;
t420 = -pkin(12) * t183 + qJD(6) * t281 - t237 * t526 - (-pkin(12) * t501 + t526) * qJD(4) - t517;
t333 = t370 * t345;
t255 = -pkin(12) * t502 + t333 + (-pkin(11) * t367 - pkin(5)) * t377;
t419 = -pkin(12) * t182 - qJD(6) * t255 - (-pkin(11) * t502 - pkin(12) * t506) * qJD(4) + t532;
t215 = pkin(4) * t504 - t442;
t19 = pkin(5) * t194 - pkin(12) * t165 + t29;
t22 = -pkin(12) * t163 + t30;
t7 = t19 * t376 - t22 * t372;
t8 = t19 * t372 + t22 * t376;
t180 = t213 * t370 + t263 * t367;
t28 = pkin(5) * t212 - pkin(12) * t180 + t46;
t179 = t213 * t367 - t263 * t370;
t34 = -pkin(12) * t179 + t47;
t415 = t28 * t376 - t34 * t372;
t414 = t28 * t372 + t34 * t376;
t114 = t376 * t179 + t180 * t372;
t115 = -t179 * t372 + t180 * t376;
t410 = t368 ^ 2 * t429;
t407 = 0.2e1 * t445 + qJD(2);
t405 = -t373 * t100 + t119 * t377 - t150 * t472 - t158 * t471;
t71 = -pkin(4) * t263 - t444;
t347 = t524 * t367;
t400 = pkin(12) * t510 - qJD(5) * t370 + qJD(6) * t347 + t52;
t348 = t524 * t370;
t399 = pkin(12) * t194 * t370 + pkin(5) * t196 + qJD(5) * t367 + qJD(6) * t348 + t51;
t25 = -qJD(6) * t512 - t163 * t469 - t372 * t91 + t376 * t92;
t398 = -pkin(11) * t198 + t137 * t234;
t27 = -pkin(4) * t204 - t405;
t2 = -qJD(6) * t8 - t372 * t5 + t376 * t4;
t383 = qJD(3) * t386;
t382 = t408 * t390;
t362 = -pkin(5) * t370 - pkin(4);
t340 = t459 * t373;
t317 = t335 * t373;
t316 = t336 * t373;
t303 = -pkin(11) * t506 + t333;
t184 = pkin(5) * t273 + t215;
t110 = t144 * t370 + t204 * t367;
t109 = t144 * t367 - t204 * t370;
t56 = pkin(5) * t179 + t71;
t55 = -pkin(5) * t510 + t64;
t48 = pkin(5) * t163 + t58;
t36 = qJD(6) * t115 + t376 * t109 + t110 * t372;
t35 = -qJD(6) * t114 - t109 * t372 + t110 * t376;
t15 = pkin(5) * t109 + t27;
t14 = pkin(5) * t91 + t18;
t11 = -pkin(12) * t109 + t13;
t6 = pkin(5) * t143 - pkin(12) * t110 + t12;
t1 = qJD(6) * t7 + t421;
t3 = [0, 0, 0, t375 * t379 * t438, -t477 * t438, t407 * t379 * t475, -t407 * t455, 0, -qJD(2) * t382 + t375 * t422 - t390 * t418 -(-pkin(9) * t455 + t353) * t408 - (-pkin(9) * t429 + t349) * t514 + t379 * t422, t197 * t264 + t205 * t239, -t197 * t263 - t198 * t264 - t204 * t239 - t205 * t237, -t205 * t386 - t197 * t322 + (qJD(1) * t264 + t239) * t431, t204 * t386 + t198 * t322 + (-qJD(1) * t263 - t237) * t431 (-t343 + (t446 - t322) * qJD(1) - t437) * t431 -((t278 * t371 + t309 * t368) * t378 + t436) * t386 - t94 * t322 + t209 * t237 + t203 * t198 + t201 * t263 + t190 * t204 + (qJD(1) * t528 + t154) * t431, t388 * t386 - t389 * t322 + t209 * t239 + t203 * t197 + t201 * t264 + t190 * t205 + (-qJD(1) * t462 - t155) * t431, t123 * t213 + t144 * t196, -t123 * t212 - t124 * t213 - t143 * t196 - t144 * t194, t123 * t263 + t144 * t234 + t196 * t204 + t198 * t213, -t124 * t263 - t143 * t234 - t194 * t204 - t198 * t212, t198 * t263 + t204 * t234, t101 * t194 + t157 * t124 + t137 * t143 + t198 * t444 + t63 * t204 + t21 * t263 + t82 * t212 + t234 * t405, t101 * t196 + t157 * t123 + t137 * t144 - t198 * t490 - t20 * t263 - t64 * t204 + t82 * t213 - t234 * t397, t109 * t58 + t12 * t194 + t124 * t46 + t143 * t29 + t163 * t27 + t179 * t18 + t212 * t9 + t71 * t91, -t10 * t212 + t110 * t58 - t124 * t47 - t13 * t194 - t143 * t30 + t165 * t27 + t18 * t180 + t71 * t92, -t10 * t179 - t109 * t30 - t110 * t29 - t12 * t165 - t13 * t163 - t180 * t9 - t46 * t92 - t47 * t91, t10 * t47 + t12 * t29 + t13 * t30 + t18 * t71 + t27 * t58 + t46 * t9, t115 * t25 - t35 * t413, -t114 * t25 - t115 * t26 + t35 * t536 + t36 * t413, t115 * t124 - t143 * t413 + t193 * t35 + t212 * t25, -t114 * t124 + t143 * t536 - t193 * t36 - t212 * t26, t124 * t212 + t143 * t193 (-qJD(6) * t414 - t11 * t372 + t376 * t6) * t193 + t415 * t124 + t2 * t212 + t7 * t143 - t15 * t536 + t56 * t26 + t14 * t114 + t48 * t36 -(qJD(6) * t415 + t11 * t376 + t372 * t6) * t193 - t414 * t124 - t1 * t212 - t8 * t143 - t15 * t413 + t56 * t25 + t14 * t115 + t48 * t35; 0, 0, 0, -t379 * t464, t477 * t508, -t379 * t423, t375 * t423, 0, pkin(1) * t464 - pkin(9) * t428 + qJD(1) * t382 - t375 * t406, -t349 + (-pkin(9) * t457 + t352) * t445 + pkin(1) * t379 * t508 + t352 * qJD(2), t197 * t505 + t239 * t549, t237 * t294 + t239 * t293 + (t197 * t378 - t198 * t374 + (-t237 * t378 - t239 * t374) * qJD(3)) * t368, t374 * t410 + t197 * t371 + t294 * t386 + (-t239 * t457 - t378 * t383) * t368, t378 * t410 - t198 * t371 - t293 * t386 + (t237 * t457 + t374 * t383) * t368 -(t371 * t445 - t468) * t433, t94 * t371 - t368 * pkin(2) * t198 - t201 * t504 - t208 * t237 + (qJD(2) * t530 - t154) * t433 - t537 * t190 + ((t276 * t371 + t308 * t368) * t378 + t544) * t386, t389 * t371 - t208 * t239 - t190 * t294 + (t190 * t473 - pkin(2) * t197 + t201 * t374 + (-qJD(2) * t478 + t155) * t457) * t368 + t548 * t386, t123 * t326 + t196 * t484, -t123 * t325 - t124 * t326 - t194 * t484 - t196 * t483, -t123 * t504 - t196 * t537 + t198 * t326 + t234 * t484, t124 * t504 + t194 * t537 - t198 * t325 - t234 * t483, -t198 * t504 - t234 * t537, t442 * t198 + t313 * t124 + t82 * t325 - t63 * t293 + (-t21 * t378 + t474 * t63) * t368 + t542 * t234 + t481 * t194 + t483 * t137, -t482 * t198 + t313 * t123 + t82 * t326 + t64 * t293 + (t20 * t378 - t474 * t64) * t368 + t543 * t234 + t481 * t196 + t484 * t137, t124 * t160 + t163 * t518 + t18 * t273 - t194 * t523 + t215 * t91 + t29 * t483 + t325 * t9 - t488 * t58, -t10 * t325 - t124 * t161 + t165 * t518 + t18 * t274 + t194 * t522 + t215 * t92 - t30 * t483 - t487 * t58, -t10 * t273 - t160 * t92 - t161 * t91 + t163 * t522 + t165 * t523 - t274 * t9 + t29 * t487 + t30 * t488, t10 * t161 + t160 * t9 + t18 * t215 - t29 * t523 - t30 * t522 + t518 * t58, t200 * t25 - t413 * t493, -t199 * t25 - t200 * t26 + t413 * t492 + t493 * t536, t124 * t200 + t193 * t493 + t25 * t325 - t413 * t483, -t124 * t199 - t193 * t492 - t26 * t325 + t483 * t536, t124 * t325 + t193 * t483 (t120 * t376 - t136 * t372) * t124 + t2 * t325 + t184 * t26 + t14 * t199 - t519 * t536 + t483 * t7 + t492 * t48 + (t372 * t427 - t376 * t426) * t193 -(t120 * t372 + t136 * t376) * t124 - t1 * t325 + t184 * t25 + t14 * t200 - t519 * t413 - t483 * t8 + t493 * t48 + (t372 * t426 + t376 * t427) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239 * t237, -t237 ^ 2 + t239 ^ 2, -t237 * t386 + t197, -t239 * t386 - t476 * t527 - t387, t409, -t155 * t386 - t190 * t239 + t94, -t154 * t386 + t190 * t237 + t389, t123 * t373 + t196 * t440 (t123 - t511) * t377 + (-t124 - t509) * t373, -t196 * t239 + t198 * t373 + t234 * t440, t194 * t239 + t198 * t377 - t234 * t531, -t234 * t239, -pkin(3) * t124 - t155 * t194 - t63 * t239 - t82 * t377 + (t148 + (-pkin(11) * qJD(4) - t186) * t377) * t234 + t398 * t373, -pkin(3) * t123 - t155 * t196 + t64 * t239 + t82 * t373 + (t465 + t491) * t234 + t398 * t377, t124 * t303 - t163 * t80 - t182 * t58 + t517 * t194 + (-t9 + (pkin(11) * t163 + t367 * t58) * qJD(4)) * t377 + (pkin(11) * t91 + t234 * t29 + t521) * t373, -t124 * t304 - t165 * t80 - t183 * t58 - t516 * t194 + (t10 + (pkin(11) * t165 + t370 * t58) * qJD(4)) * t377 + (pkin(11) * t92 - t234 * t30 + t520) * t373, t182 * t30 + t183 * t29 - t303 * t92 - t304 * t91 + (-t10 * t367 - t370 * t9) * t373 - t517 * t165 - t516 * t163 + (-t29 * t370 - t30 * t367) * t471, t10 * t304 + t303 * t9 - t58 * t80 + t516 * t30 + t517 * t29 + (t18 * t373 + t471 * t58) * pkin(11), -t25 * t317 - t413 * t486, -t25 * t316 + t26 * t317 + t413 * t485 + t486 * t536, -t124 * t317 + t193 * t486 - t25 * t377 - t413 * t531, -t124 * t316 - t193 * t485 + t26 * t377 + t531 * t536, -t124 * t377 + t193 * t531 (t255 * t376 - t281 * t372) * t124 - t2 * t377 + t340 * t26 + t14 * t316 - t515 * t536 + t485 * t48 + t7 * t531 + (t372 * t419 - t376 * t420) * t193 -(t255 * t372 + t281 * t376) * t124 + t1 * t377 + t340 * t25 - t14 * t317 - t515 * t413 + t486 * t48 - t8 * t531 + (t372 * t420 + t376 * t419) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196 * t194, -t194 ^ 2 + t196 ^ 2, t123 + t511, -t124 + t509, t198, -t137 * t196 + t234 * t64 + t21, t137 * t194 + t234 * t63 - t20, -t367 * t513 - pkin(4) * t91 - t163 * t64 - t520 - t196 * t29 + (t367 * t494 - t51) * t194, -t370 * t513 - pkin(4) * t92 - t165 * t64 + t521 + t196 * t30 + (t370 * t494 + t52) * t194, t163 * t52 + t165 * t51 + (-qJ(5) * t91 - qJD(5) * t163 - t194 * t29 + t10) * t370 + (qJ(5) * t92 + qJD(5) * t165 - t194 * t30 - t9) * t367, -pkin(4) * t18 - t29 * t51 - t30 * t52 - t58 * t64 + (-t29 * t367 + t30 * t370) * qJD(5) + (t10 * t370 - t367 * t9) * qJ(5), t25 * t336 + t413 * t480, -t25 * t335 - t26 * t336 + t413 * t479 - t480 * t536, t124 * t336 - t193 * t480 + t196 * t413, -t124 * t335 - t193 * t479 - t196 * t536, -t193 * t196 (-t347 * t376 - t348 * t372) * t124 + t362 * t26 + t14 * t335 - t7 * t196 + t55 * t536 + t479 * t48 + (t372 * t400 - t376 * t399) * t193 -(-t347 * t372 + t348 * t376) * t124 + t362 * t25 + t14 * t336 + t8 * t196 + t55 * t413 - t480 * t48 + (t372 * t399 + t376 * t400) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165 * t194 + t91, -t163 * t194 + t92, -t163 ^ 2 - t165 ^ 2, t163 * t30 + t165 * t29 + t18, 0, 0, 0, 0, 0, t26 - t535, t25 + t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413 * t536, t413 ^ 2 - t536 ^ 2, t25 - t545, -t26 - t535, t124, t193 * t8 + t413 * t48 + t2, -t48 * t536 - t421 + (-qJD(6) + t193) * t7;];
tauc_reg  = t3;
