% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 00:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR14_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR14_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR14_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR14_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR14_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6RRRRPR14_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 00:25:42
% EndTime: 2019-03-10 00:27:23
% DurationCPUTime: 58.02s
% Computational Cost: add. (69822->1199), mult. (199631->1630), div. (0->0), fcn. (168677->18), ass. (0->477)
t506 = cos(qJ(2));
t735 = cos(pkin(6));
t674 = pkin(1) * t735;
t485 = t506 * t674;
t471 = qJD(1) * t485;
t504 = sin(qJ(2));
t498 = sin(pkin(6));
t734 = cos(pkin(7));
t580 = t498 * (-pkin(10) * t734 - pkin(9));
t560 = t504 * t580;
t357 = qJD(1) * t560 + t471;
t484 = t504 * t674;
t526 = t506 * t580 - t484;
t358 = t526 * qJD(1);
t733 = sin(pkin(7));
t648 = t506 * t733;
t558 = pkin(2) * t504 - pkin(10) * t648;
t691 = qJD(1) * t498;
t398 = t558 * t691;
t758 = cos(qJ(3));
t623 = t734 * t758;
t503 = sin(qJ(3));
t653 = t503 * t733;
t426 = pkin(2) * t623 - pkin(10) * t653;
t654 = t503 * t734;
t698 = t426 * qJD(3) - t758 * t357 - t358 * t654 - t398 * t653;
t545 = -t504 * t654 + t506 * t758;
t394 = t545 * t498;
t377 = qJD(1) * t394;
t622 = t733 * t758;
t585 = qJD(3) * t622;
t556 = t585 - t377;
t264 = -t358 * t733 + t734 * t398;
t543 = t503 * t506 + t504 * t623;
t393 = t543 * t498;
t376 = qJD(1) * t393;
t797 = -t376 * pkin(3) + t377 * pkin(11) - t264 + (pkin(3) * t653 - pkin(11) * t622) * qJD(3);
t656 = t498 * t733;
t621 = qJD(1) * t656;
t589 = t504 * t621;
t796 = pkin(11) * t589 - t698;
t502 = sin(qJ(4));
t505 = cos(qJ(4));
t422 = t502 * t653 - t505 * t734;
t700 = qJD(4) * t422 + t502 * t589 - t505 * t556;
t650 = t505 * t733;
t423 = t502 * t734 + t503 * t650;
t699 = qJD(4) * t423 + t502 * t556 + t505 * t589;
t428 = pkin(2) * t654 + pkin(10) * t622;
t696 = t428 * qJD(3) - t503 * t357 + t358 * t623 + t398 * t622;
t618 = qJD(3) * t653;
t576 = t618 - t376;
t404 = pkin(11) * t734 + t428;
t673 = t733 * pkin(2);
t405 = -pkin(3) * t622 - pkin(11) * t653 - t673;
t686 = qJD(4) * t505;
t687 = qJD(4) * t502;
t706 = -t404 * t687 + t405 * t686 + t797 * t502 - t796 * t505;
t697 = pkin(3) * t589 + t696;
t672 = t504 * t691;
t634 = t503 * t672;
t647 = t735 * qJD(1);
t600 = t647 + qJD(2);
t549 = t733 * t600;
t593 = t506 * t623;
t573 = t498 * t593;
t775 = -qJD(1) * t573 - t758 * t549;
t319 = t634 + t775;
t314 = qJD(4) + t319;
t795 = -qJ(5) * t576 + qJD(5) * t622 - t706;
t794 = t699 * pkin(4) + qJ(5) * t700 - t423 * qJD(5) + t697;
t759 = cos(qJ(1));
t625 = t735 * t759;
t756 = sin(qJ(1));
t424 = t504 * t625 + t506 * t756;
t557 = t756 * t504 - t506 * t625;
t785 = t557 * t734 + t759 * t656;
t282 = -t424 * t758 + t503 * t785;
t657 = t498 * t734;
t773 = t557 * t733 - t759 * t657;
t226 = t282 * t505 - t502 * t773;
t279 = t424 * t503 + t758 * t785;
t494 = pkin(13) + qJ(6);
t490 = sin(t494);
t491 = cos(t494);
t793 = t226 * t490 + t279 * t491;
t792 = t226 * t491 - t279 * t490;
t649 = t506 * t734;
t544 = t503 * t649 + t504 * t758;
t534 = t544 * t498;
t539 = t503 * t549;
t321 = qJD(1) * t534 + t539;
t684 = t506 * t621 - qJD(3);
t530 = -t600 * t734 + t684;
t251 = t505 * t321 - t502 * t530;
t497 = sin(pkin(13));
t499 = cos(pkin(13));
t196 = t251 * t499 + t314 * t497;
t501 = sin(qJ(6));
t757 = cos(qJ(6));
t244 = t497 * t251;
t767 = t314 * t499 - t244;
t575 = t757 * t767;
t113 = -t196 * t501 + t575;
t791 = t113 ^ 2;
t371 = t505 * t530;
t249 = t321 * t502 + t371;
t246 = qJD(6) + t249;
t790 = t113 * t246;
t716 = t498 * t506;
t694 = pkin(9) * t716 + t484;
t410 = t694 * qJD(1);
t627 = t498 * t649;
t311 = t410 + (qJD(1) * t627 + t549) * pkin(10);
t528 = pkin(2) * t735 + t560;
t318 = qJD(2) * pkin(2) + qJD(1) * t528 + t471;
t652 = t504 * t733;
t555 = -pkin(2) * t506 - pkin(10) * t652 - pkin(1);
t372 = t555 * t691;
t187 = t758 * t311 + (t318 * t734 + t372 * t733) * t503;
t789 = -qJD(5) * t502 - t187 + t314 * (pkin(4) * t502 - qJ(5) * t505);
t704 = -t497 * t700 - t499 * t576;
t703 = t497 * t576 - t499 * t700;
t114 = t196 * t757 + t501 * t767;
t788 = t114 ^ 2;
t745 = t497 * t795 + t794 * t499;
t744 = t794 * t497 - t499 * t795;
t225 = t282 * t502 + t505 * t773;
t784 = t699 * pkin(5) - t703 * pkin(12) + t745;
t783 = -t704 * pkin(12) + t744;
t186 = -t503 * t311 + t318 * t623 + t372 * t622;
t234 = pkin(3) * t321 + pkin(11) * t319;
t133 = t505 * t186 + t502 * t234;
t108 = qJ(5) * t321 + t133;
t679 = pkin(11) * t687;
t738 = t789 * t499 + (t108 + t679) * t497;
t782 = -t499 * t108 + t789 * t497;
t705 = -t404 * t686 - t405 * t687 + t796 * t502 + t797 * t505;
t714 = t499 * t505;
t231 = -t319 * t714 + t321 * t497;
t754 = pkin(5) * t502;
t779 = pkin(12) * t231 + t319 * t754 + (-pkin(12) * t714 + t754) * qJD(4) + t738;
t718 = t497 * t505;
t230 = -t319 * t718 - t499 * t321;
t715 = t499 * t502;
t778 = pkin(12) * t230 + (-pkin(11) * t715 - pkin(12) * t718) * qJD(4) + t782;
t707 = -pkin(4) * t576 - t705;
t776 = -t497 * t686 + t230;
t611 = t499 * t686 - t231;
t624 = t735 * t756;
t538 = t504 * t759 + t506 * t624;
t774 = t538 * t733 + t756 * t657;
t508 = qJD(2) * t543 + qJD(3) * t544;
t638 = t735 * qJDD(1);
t587 = t638 + qJDD(2);
t547 = t587 * t733;
t682 = qJDD(1) * t504;
t208 = qJD(3) * t539 - qJDD(1) * t573 + t498 * (qJD(1) * t508 + t503 * t682) - t758 * t547;
t493 = t498 ^ 2;
t772 = 0.2e1 * t493;
t403 = -pkin(3) * t734 - t426;
t269 = t422 * pkin(4) - t423 * qJ(5) + t403;
t290 = t505 * t404 + t502 * t405;
t276 = -qJ(5) * t622 + t290;
t192 = t499 * t269 - t276 * t497;
t356 = t499 * t423 - t497 * t622;
t151 = pkin(5) * t422 - pkin(12) * t356 + t192;
t193 = t497 * t269 + t499 * t276;
t355 = t497 * t423 + t499 * t622;
t167 = -pkin(12) * t355 + t193;
t89 = t151 * t757 - t501 * t167;
t771 = qJD(6) * t89 + t501 * t784 + t783 * t757;
t90 = t501 * t151 + t167 * t757;
t749 = -qJD(6) * t90 - t783 * t501 + t757 * t784;
t741 = pkin(5) * t704 + t707;
t243 = -t318 * t733 + t734 * t372;
t163 = t319 * pkin(3) - t321 * pkin(11) + t243;
t169 = -pkin(11) * t530 + t187;
t629 = t498 * t648;
t527 = -qJDD(1) * t629 + t587 * t734 + qJDD(3);
t630 = t498 * t652;
t588 = qJD(2) * t630;
t515 = qJD(1) * t588 + t527;
t636 = pkin(9) * t672;
t613 = qJD(2) * t647;
t595 = pkin(1) * t613;
t631 = pkin(1) * t638;
t681 = qJDD(1) * t506;
t662 = t498 * t681;
t676 = pkin(9) * t662 + t504 * t631 + t506 * t595;
t316 = -qJD(2) * t636 + t676;
t642 = qJDD(1) * t734;
t614 = t506 * t642;
t646 = t734 * qJD(2);
t615 = qJD(1) * t646;
t240 = (t547 + (-t504 * t615 + t614) * t498) * pkin(10) + t316;
t469 = t506 * t631;
t551 = -t504 * t595 + t469;
t683 = qJD(1) * qJD(2);
t664 = t506 * t683;
t568 = -t664 - t682;
t552 = t568 * pkin(9);
t245 = t587 * pkin(2) + ((-t504 * t642 - t506 * t615) * pkin(10) + t552) * t498 + t551;
t546 = qJD(2) * t558;
t285 = (qJD(1) * t546 + qJDD(1) * t555) * t498;
t586 = qJD(3) * t623;
t689 = qJD(3) * t503;
t542 = -t758 * t240 - t245 * t654 - t285 * t653 + t311 * t689 - t318 * t586 - t372 * t585;
t73 = pkin(11) * t515 - t542;
t176 = -t245 * t733 + t734 * t285;
t663 = t498 * t682;
t207 = (t646 + qJD(3)) * t634 - t503 * t547 - t758 * t663 + (-t503 * t614 - t664 * t758) * t498 + t775 * qJD(3);
t80 = t208 * pkin(3) + t207 * pkin(11) + t176;
t28 = t163 * t686 - t169 * t687 + t502 * t80 + t505 * t73;
t92 = t505 * t163 - t502 * t169;
t770 = -t314 * t92 + t28;
t737 = -t499 * t679 + t782;
t769 = t502 * t314;
t766 = t538 * t734 - t756 * t656;
t765 = (qJDD(2) + 0.2e1 * t638) * t498;
t666 = qJD(6) * t757;
t685 = qJD(6) * t501;
t764 = -t497 * t685 + t499 * t666;
t688 = qJD(4) * t251;
t123 = -t502 * t207 - t505 * t515 + t688;
t763 = -pkin(4) * t505 - qJ(5) * t502;
t414 = t694 * qJD(2);
t204 = qJDD(4) + t208;
t752 = t204 * pkin(4);
t762 = qJDD(5) - t752;
t93 = t163 * t502 + t169 * t505;
t79 = qJ(5) * t314 + t93;
t168 = pkin(3) * t530 - t186;
t97 = t249 * pkin(4) - t251 * qJ(5) + t168;
t46 = -t497 * t79 + t499 * t97;
t38 = pkin(5) * t249 - pkin(12) * t196 + t46;
t47 = t497 * t97 + t499 * t79;
t39 = pkin(12) * t767 + t47;
t579 = -t38 * t757 + t501 * t39;
t597 = qJ(5) * t204 + qJD(5) * t314;
t20 = t28 + t597;
t122 = qJD(4) * t371 + t505 * t207 + t321 * t687 - t502 * t515;
t620 = qJD(3) * t654;
t667 = qJD(3) * t758;
t578 = t503 * t240 - t245 * t623 - t285 * t622 + t311 * t667 + t318 * t620 + t372 * t618;
t74 = -pkin(3) * t515 + t578;
t35 = t123 * pkin(4) + t122 * qJ(5) - t251 * qJD(5) + t74;
t8 = -t20 * t497 + t499 * t35;
t87 = -t122 * t499 + t204 * t497;
t6 = pkin(5) * t123 - pkin(12) * t87 + t8;
t120 = t497 * t122;
t645 = t204 * t499 + t120;
t9 = t499 * t20 + t497 * t35;
t7 = pkin(12) * t645 + t9;
t1 = -t579 * qJD(6) + t501 * t6 + t7 * t757;
t760 = t249 ^ 2;
t507 = qJD(1) ^ 2;
t753 = pkin(9) * t498;
t751 = pkin(12) + qJ(5);
t608 = t733 * t735;
t581 = t503 * t608;
t260 = qJD(3) * t581 + t498 * t508;
t559 = t758 * t608;
t713 = t503 * t504;
t347 = t498 * t713 - t559 - t573;
t338 = (t627 + t608) * pkin(10) + t694;
t354 = t485 + t528;
t472 = qJD(2) * t485;
t359 = qJD(2) * t560 + t472;
t360 = t526 * qJD(2);
t695 = pkin(2) * t716 + pkin(10) * t630;
t385 = -pkin(1) * t498 - t695;
t399 = t498 * t546;
t138 = -t338 * t689 + t354 * t586 + t758 * t359 + t360 * t654 + t385 * t585 + t399 * t653;
t128 = pkin(11) * t588 + t138;
t261 = qJD(3) * t559 + ((t593 - t713) * qJD(3) + t545 * qJD(2)) * t498;
t265 = -t360 * t733 + t734 * t399;
t150 = t260 * pkin(3) - t261 * pkin(11) + t265;
t259 = -t354 * t733 + t734 * t385;
t346 = t347 * pkin(3);
t348 = t581 + t534;
t182 = -t348 * pkin(11) + t259 + t346;
t210 = t758 * t338 + t354 * t654 + t385 * t653;
t609 = t735 * t734;
t533 = t629 - t609;
t190 = -pkin(11) * t533 + t210;
t44 = t505 * t128 + t502 * t150 + t182 * t686 - t190 * t687;
t41 = qJ(5) * t260 + qJD(5) * t347 + t44;
t139 = -t338 * t667 - t354 * t620 - t503 * t359 + t360 * t623 - t385 * t618 + t399 * t622;
t129 = -pkin(3) * t588 - t139;
t275 = t348 * t505 - t502 * t533;
t174 = qJD(4) * t275 + t261 * t502 - t505 * t588;
t274 = t348 * t502 + t505 * t533;
t175 = -qJD(4) * t274 + t261 * t505 + t502 * t588;
t57 = t174 * pkin(4) - t175 * qJ(5) - t275 * qJD(5) + t129;
t18 = t499 * t41 + t497 * t57;
t747 = t314 * t93;
t746 = t87 * t497;
t455 = -pkin(3) + t763;
t434 = t499 * t455;
t336 = -pkin(12) * t715 + t434 + (-pkin(11) * t497 - pkin(5)) * t505;
t387 = pkin(11) * t714 + t497 * t455;
t363 = -pkin(12) * t497 * t502 + t387;
t247 = t336 * t757 - t501 * t363;
t743 = qJD(6) * t247 + t501 * t779 + t778 * t757;
t248 = t501 * t336 + t363 * t757;
t742 = -qJD(6) * t248 - t778 * t501 + t757 * t779;
t459 = t751 * t497;
t460 = t751 * t499;
t367 = -t459 * t757 - t501 * t460;
t173 = pkin(4) * t251 + qJ(5) * t249;
t65 = t499 * t173 - t497 * t92;
t725 = t249 * t499;
t51 = pkin(5) * t251 + pkin(12) * t725 + t65;
t574 = -t501 * t497 + t499 * t757;
t66 = t497 * t173 + t499 * t92;
t726 = t249 * t497;
t58 = pkin(12) * t726 + t66;
t740 = qJD(5) * t574 + qJD(6) * t367 - t501 * t51 - t58 * t757;
t368 = -t501 * t459 + t460 * t757;
t441 = t497 * t757 + t501 * t499;
t739 = -qJD(5) * t441 - qJD(6) * t368 + t501 * t58 - t51 * t757;
t132 = -t502 * t186 + t234 * t505;
t109 = -pkin(4) * t321 - t132;
t675 = pkin(5) * t497 + pkin(11);
t736 = -pkin(5) * t230 + t675 * t686 - t109;
t209 = -t503 * t338 + t354 * t623 + t385 * t622;
t189 = pkin(3) * t533 - t209;
t117 = t274 * pkin(4) - t275 * qJ(5) + t189;
t105 = t502 * t182 + t505 * t190;
t99 = qJ(5) * t347 + t105;
t61 = t497 * t117 + t499 * t99;
t731 = t114 * t113;
t730 = t123 * t497;
t729 = t123 * t499;
t728 = t249 * t251;
t727 = t249 * t314;
t724 = t251 * t314;
t722 = t321 * t319;
t721 = t490 * t505;
t720 = t491 * t505;
t719 = t493 * t507;
t717 = t498 * t504;
t76 = -t314 * pkin(4) + qJD(5) - t92;
t712 = -qJD(5) + t76;
t711 = t355 * t666 + t356 * t685 + t501 * t704 - t703 * t757;
t257 = -t501 * t355 + t356 * t757;
t710 = qJD(6) * t257 + t501 * t703 + t704 * t757;
t421 = t441 * qJD(6);
t709 = -t441 * t249 - t421;
t708 = -t574 * t249 - t764;
t702 = -t421 * t502 + t501 * t776 + t611 * t757;
t701 = -t757 * t230 - t231 * t501 + t441 * t686 + t502 * t764;
t693 = t759 * pkin(1) + t756 * t753;
t495 = t504 ^ 2;
t496 = t506 ^ 2;
t692 = t495 - t496;
t690 = qJD(2) * t498;
t678 = t506 * t719;
t677 = t394 * pkin(3) + t695;
t671 = t504 * t690;
t665 = pkin(1) * t772;
t17 = -t41 * t497 + t499 * t57;
t660 = t501 * t87 - t757 * t645;
t659 = t424 * t733;
t425 = -t504 * t624 + t506 * t759;
t658 = t425 * t733;
t655 = t502 * t733;
t60 = t499 * t117 - t497 * t99;
t104 = t182 * t505 - t502 * t190;
t289 = -t502 * t404 + t405 * t505;
t639 = t314 * t505;
t637 = t163 * t687 + t169 * t686 + t502 * t73 - t505 * t80;
t635 = t504 * t678;
t632 = t504 * t664;
t626 = -pkin(1) * t756 + t759 * t753;
t619 = t498 * t507 * t735;
t284 = t425 * t758 - t503 * t766;
t227 = t284 * t502 - t505 * t774;
t617 = -g(1) * t225 - g(2) * t227;
t283 = t425 * t503 + t758 * t766;
t616 = -g(1) * t279 + g(2) * t283;
t278 = pkin(4) * t622 - t289;
t610 = t645 * pkin(5);
t606 = t645 * t499;
t605 = t123 * t274 + t174 * t249;
t488 = pkin(5) * t499 + pkin(4);
t604 = -t488 * t505 - t502 * t751;
t603 = qJD(4) * t767;
t599 = 0.2e1 * t647 + qJD(2);
t596 = pkin(11) * t393 + t677;
t45 = -t502 * t128 + t150 * t505 - t182 * t687 - t190 * t686;
t584 = -t557 * pkin(2) + pkin(10) * t659;
t583 = -t538 * pkin(2) + pkin(10) * t658;
t100 = -pkin(4) * t347 - t104;
t220 = t275 * t499 + t347 * t497;
t43 = pkin(5) * t274 - pkin(12) * t220 + t60;
t219 = t275 * t497 - t347 * t499;
t48 = -pkin(12) * t219 + t61;
t15 = t43 * t757 - t501 * t48;
t12 = t501 * t38 + t39 * t757;
t16 = t501 * t43 + t48 * t757;
t146 = -t501 * t219 + t220 * t757;
t30 = -qJD(6) * t575 + t196 * t685 - t501 * t645 - t757 * t87;
t572 = -pkin(11) * t204 + t168 * t314;
t571 = t123 * t422 + t249 * t699;
t307 = -t424 * t654 - t557 * t758;
t570 = t307 * pkin(3) + t584;
t309 = -t425 * t654 - t538 * t758;
t569 = t309 * pkin(3) + t583;
t567 = g(1) * t759 + g(2) * t756;
t566 = g(1) * t227 - g(2) * t225 + g(3) * t274;
t228 = t284 * t505 + t502 * t774;
t565 = -g(1) * t228 + g(2) * t226 - g(3) * t275;
t252 = t307 * t502 - t424 * t650;
t254 = t309 * t502 - t425 * t650;
t322 = t394 * t502 - t505 * t630;
t564 = g(1) * t254 + g(2) * t252 + g(3) * t322;
t563 = g(1) * t283 + g(2) * t279 + g(3) * t347;
t562 = g(1) * t284 - g(2) * t282 + g(3) * t348;
t306 = t424 * t623 - t503 * t557;
t308 = t425 * t623 - t503 * t538;
t561 = -g(1) * t308 - g(2) * t306 - g(3) * t393;
t23 = t637 + t762;
t554 = -t23 + t566;
t553 = -t123 * t505 + t249 * t769;
t42 = -pkin(4) * t260 - t45;
t548 = -t196 * t497 + t499 * t767;
t541 = t306 * pkin(11) + t570;
t540 = t308 * pkin(11) + t569;
t532 = t566 - t637;
t529 = pkin(11) * qJD(4) * t314 - t563 + t74;
t2 = -qJD(6) * t12 - t501 * t7 + t757 * t6;
t522 = t530 * t733;
t521 = -t532 + t762;
t31 = qJD(6) * t114 + t660;
t520 = qJD(3) * t522;
t517 = -t424 * pkin(2) - pkin(10) * t773 + t626;
t516 = t425 * pkin(2) + pkin(10) * t774 + t693;
t514 = t282 * pkin(3) + t517;
t513 = t284 * pkin(3) + t516;
t511 = -pkin(11) * t279 + t514;
t510 = t283 * pkin(11) + t513;
t509 = t515 * t733;
t445 = t675 * t502;
t427 = -pkin(9) * t717 + t485;
t413 = -pkin(9) * t671 + t472;
t408 = t471 - t636;
t407 = t574 * t502;
t406 = t441 * t502;
t386 = -pkin(11) * t718 + t434;
t323 = t394 * t505 + t502 * t630;
t317 = t498 * t552 + t551;
t272 = t283 * pkin(3);
t270 = t279 * pkin(3);
t256 = t355 * t757 + t356 * t501;
t255 = t309 * t505 + t425 * t655;
t253 = t307 * t505 + t424 * t655;
t232 = pkin(5) * t355 + t278;
t161 = t228 * t491 + t283 * t490;
t160 = -t228 * t490 + t283 * t491;
t145 = t219 * t757 + t220 * t501;
t141 = t175 * t499 + t260 * t497;
t140 = t175 * t497 - t260 * t499;
t121 = qJDD(6) + t123;
t72 = pkin(5) * t219 + t100;
t71 = -pkin(5) * t726 + t93;
t62 = -pkin(5) * t767 + t76;
t50 = qJD(6) * t146 + t140 * t757 + t501 * t141;
t49 = t501 * t140 - t141 * t757 + t219 * t666 + t220 * t685;
t32 = pkin(5) * t140 + t42;
t14 = -t610 + t23;
t13 = -pkin(12) * t140 + t18;
t10 = pkin(5) * t174 - pkin(12) * t141 + t17;
t4 = -qJD(6) * t16 + t10 * t757 - t501 * t13;
t3 = qJD(6) * t15 + t501 * t10 + t13 * t757;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t756 - g(2) * t759, t567, 0, 0 (qJDD(1) * t495 + 0.2e1 * t632) * t493 (t504 * t681 - t683 * t692) * t772, t506 * t599 * t690 + t504 * t765 (qJDD(1) * t496 - 0.2e1 * t632) * t493, t506 * t765 - t599 * t671, t587 * t735, -t414 * t600 + t427 * t587 + t317 * t735 + g(1) * t424 - g(2) * t425 + (-t504 * t683 + t681) * t665, -g(1) * t557 + g(2) * t538 - t316 * t735 - t413 * t600 + t568 * t665 - t587 * t694 ((-t408 * qJD(2) + qJDD(1) * t694 + t316 + (-qJD(2) * t427 + t413) * qJD(1)) * t506 + (-t410 * qJD(2) - qJDD(1) * t427 - t317) * t504 - t567) * t498, t493 * qJDD(1) * pkin(1) ^ 2 - g(1) * t626 - g(2) * t693 + t316 * t694 + t317 * t427 - t408 * t414 + t410 * t413, -t207 * t348 + t261 * t321, t207 * t347 - t208 * t348 - t260 * t321 - t261 * t319, t207 * t533 - t261 * t530 + t321 * t588 + t348 * t515, t208 * t347 + t260 * t319, t208 * t533 + t260 * t530 - t319 * t588 - t347 * t515, -t515 * t533 - t522 * t671, -g(1) * t282 - g(2) * t284 - t139 * t530 + t176 * t347 + t186 * t588 + t259 * t208 + t209 * t515 + t243 * t260 + t265 * t319 + t533 * t578, t138 * t530 + t176 * t348 - t187 * t588 - t259 * t207 - t210 * t515 + t243 * t261 + t265 * t321 - t533 * t542 + t616, g(1) * t773 - g(2) * t774 - t138 * t319 - t139 * t321 - t186 * t261 - t187 * t260 + t209 * t207 - t210 * t208 + t347 * t542 + t348 * t578, -g(1) * t517 - g(2) * t516 + t187 * t138 + t186 * t139 + t176 * t259 - t209 * t578 - t210 * t542 + t243 * t265, -t122 * t275 + t175 * t251, t122 * t274 - t123 * t275 - t174 * t251 - t175 * t249, -t122 * t347 + t175 * t314 + t204 * t275 + t251 * t260, t605, -t123 * t347 - t174 * t314 - t204 * t274 - t249 * t260, t204 * t347 + t260 * t314, -g(1) * t226 - g(2) * t228 + t104 * t204 + t123 * t189 + t129 * t249 + t168 * t174 + t260 * t92 + t274 * t74 + t314 * t45 - t347 * t637, -t105 * t204 - t122 * t189 + t129 * t251 + t168 * t175 - t260 * t93 + t275 * t74 - t28 * t347 - t314 * t44 - t617, t104 * t122 - t105 * t123 - t174 * t93 - t175 * t92 - t249 * t44 - t251 * t45 - t274 * t28 + t275 * t637 - t616, -g(1) * t511 - g(2) * t510 - t104 * t637 + t28 * t105 + t168 * t129 + t74 * t189 + t93 * t44 + t92 * t45, t141 * t196 + t220 * t87, -t196 * t140 + t141 * t767 - t87 * t219 + t220 * t645, t123 * t220 + t141 * t249 + t174 * t196 + t274 * t87, -t140 * t767 - t219 * t645, -t123 * t219 - t249 * t140 + t174 * t767 + t274 * t645, t605, t17 * t249 + t60 * t123 + t8 * t274 + t46 * t174 - t42 * t767 - t100 * t645 + t23 * t219 + t76 * t140 - g(1) * (t226 * t499 - t279 * t497) - g(2) * (t228 * t499 + t283 * t497) -t18 * t249 - t61 * t123 - t9 * t274 - t47 * t174 + t42 * t196 + t100 * t87 + t23 * t220 + t76 * t141 - g(1) * (-t226 * t497 - t279 * t499) - g(2) * (-t228 * t497 + t283 * t499) -t47 * t140 - t46 * t141 - t17 * t196 + t18 * t767 - t9 * t219 - t8 * t220 - t60 * t87 + t61 * t645 + t617, t9 * t61 + t47 * t18 + t8 * t60 + t46 * t17 + t23 * t100 + t76 * t42 - g(1) * (t226 * pkin(4) + t225 * qJ(5) + t511) - g(2) * (t228 * pkin(4) + t227 * qJ(5) + t510) -t114 * t49 - t146 * t30, -t113 * t49 - t114 * t50 + t145 * t30 - t146 * t31, t114 * t174 + t121 * t146 - t246 * t49 - t274 * t30, -t113 * t50 + t145 * t31, t113 * t174 - t121 * t145 - t246 * t50 - t274 * t31, t121 * t274 + t174 * t246, -g(1) * t792 - g(2) * t161 - t32 * t113 + t15 * t121 + t14 * t145 - t579 * t174 + t2 * t274 + t4 * t246 + t72 * t31 + t62 * t50, g(1) * t793 - g(2) * t160 - t1 * t274 + t32 * t114 - t12 * t174 - t16 * t121 + t14 * t146 - t3 * t246 - t72 * t30 - t62 * t49, -t1 * t145 + t113 * t3 - t114 * t4 - t12 * t50 - t146 * t2 + t15 * t30 - t16 * t31 - t49 * t579 + t617, t1 * t16 + t12 * t3 + t2 * t15 - t579 * t4 + t14 * t72 + t62 * t32 - g(1) * (t225 * t751 + t226 * t488 - t279 * t675 + t514) - g(2) * (t227 * t751 + t228 * t488 + t283 * t675 + t513); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t635, t692 * t719, -t506 * t619 + t663, t635, t504 * t619 + t662, t587, t469 + t410 * t600 + g(1) * t538 + g(2) * t557 + (-t613 + t719) * t504 * pkin(1) + (-g(3) * t506 + t552) * t498, t408 * t600 + pkin(1) * t678 + g(1) * t425 + g(2) * t424 + (pkin(9) * t683 + g(3)) * t717 - t676, 0, 0, -t207 * t653 + t321 * t556, -t207 * t622 - t208 * t653 + t377 * t319 + t321 * t376 + (-t319 * t622 - t321 * t653) * qJD(3), -t207 * t734 - t321 * t589 + t377 * t530 + t503 * t509 - t520 * t758, -t208 * t622 + t319 * t576, -t208 * t734 + t319 * t589 - t376 * t530 + t503 * t520 + t509 * t758, t527 * t734 - (qJD(1) * t609 - t684) * t589, -g(1) * t309 - g(2) * t307 - g(3) * t394 - t176 * t622 - t186 * t589 - t208 * t673 + t243 * t576 - t264 * t319 + t426 * t515 + t530 * t696 - t578 * t734, t176 * t653 + t187 * t589 + t207 * t673 + t243 * t556 - t264 * t321 - t428 * t515 + t530 * t698 + t542 * t734 - t561, -g(3) * t630 - t542 * t622 - g(1) * t658 - g(2) * t659 + t578 * t653 + t186 * t377 + t187 * t376 + t426 * t207 - t428 * t208 + t696 * t321 - t698 * t319 + (-t186 * t622 - t187 * t653) * qJD(3), -g(1) * t583 - g(2) * t584 - g(3) * t695 - t176 * t673 - t186 * t696 + t187 * t698 - t243 * t264 - t426 * t578 - t428 * t542, -t122 * t423 - t251 * t700, t122 * t422 - t123 * t423 + t249 * t700 - t251 * t699, t122 * t622 + t423 * t204 + t251 * t576 - t314 * t700, t571, t123 * t622 - t422 * t204 - t249 * t576 - t314 * t699, -t204 * t622 + t314 * t576, -g(1) * t255 - g(2) * t253 - g(3) * t323 + t403 * t123 + t168 * t699 + t289 * t204 + t249 * t697 + t314 * t705 + t74 * t422 + t576 * t92 + t622 * t637, -t403 * t122 - t168 * t700 - t290 * t204 + t251 * t697 + t28 * t622 - t314 * t706 + t74 * t423 - t576 * t93 + t564, t122 * t289 - t123 * t290 - t249 * t706 - t251 * t705 - t28 * t422 + t423 * t637 - t699 * t93 + t700 * t92 + t561, -g(1) * t540 - g(2) * t541 - g(3) * t596 + t168 * t697 + t28 * t290 - t289 * t637 + t74 * t403 + t705 * t92 + t706 * t93, t196 * t703 + t356 * t87, -t196 * t704 - t87 * t355 + t356 * t645 + t703 * t767, t123 * t356 + t196 * t699 + t249 * t703 + t422 * t87, -t355 * t645 - t704 * t767, -t123 * t355 - t249 * t704 + t422 * t645 + t699 * t767, t571, t192 * t123 + t8 * t422 - t278 * t645 + t23 * t355 - g(1) * (t255 * t499 + t308 * t497) - g(2) * (t253 * t499 + t306 * t497) - g(3) * (t323 * t499 + t393 * t497) + t704 * t76 + t699 * t46 + t745 * t249 - t707 * t767, -t193 * t123 - t9 * t422 + t278 * t87 + t23 * t356 - g(1) * (-t255 * t497 + t308 * t499) - g(2) * (-t253 * t497 + t306 * t499) - g(3) * (-t323 * t497 + t393 * t499) + t703 * t76 - t699 * t47 - t744 * t249 + t707 * t196, -t192 * t87 + t193 * t645 - t196 * t745 - t9 * t355 - t8 * t356 - t46 * t703 - t47 * t704 + t744 * t767 - t564, t9 * t193 + t8 * t192 + t23 * t278 - g(1) * (t255 * pkin(4) + t254 * qJ(5) + t540) - g(2) * (t253 * pkin(4) + t252 * qJ(5) + t541) - g(3) * (pkin(4) * t323 + qJ(5) * t322 + t596) + t707 * t76 + t744 * t47 + t745 * t46, -t114 * t711 - t257 * t30, -t113 * t711 - t114 * t710 + t256 * t30 - t257 * t31, t114 * t699 + t121 * t257 - t246 * t711 - t30 * t422, -t113 * t710 + t256 * t31, t113 * t699 - t121 * t256 - t246 * t710 - t31 * t422, t121 * t422 + t246 * t699, t89 * t121 + t2 * t422 + t232 * t31 + t14 * t256 - g(1) * (t255 * t491 + t308 * t490) - g(2) * (t253 * t491 + t306 * t490) - g(3) * (t323 * t491 + t393 * t490) + t710 * t62 + t749 * t246 - t741 * t113 - t699 * t579, -t90 * t121 - t1 * t422 - t232 * t30 + t14 * t257 - g(1) * (-t255 * t490 + t308 * t491) - g(2) * (-t253 * t490 + t306 * t491) - g(3) * (-t323 * t490 + t393 * t491) - t711 * t62 - t771 * t246 - t699 * t12 + t741 * t114, -t1 * t256 + t113 * t771 - t114 * t749 - t12 * t710 - t2 * t257 + t30 * t89 - t31 * t90 - t579 * t711 - t564, t1 * t90 + t2 * t89 + t14 * t232 - g(1) * (t254 * t751 + t255 * t488 + t308 * t675 + t569) - g(2) * (t252 * t751 + t253 * t488 + t306 * t675 + t570) - g(3) * (t322 * t751 + t323 * t488 + t393 * t675 + t677) + t741 * t62 + t771 * t12 - t749 * t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t722, -t319 ^ 2 + t321 ^ 2, -t319 * t530 - t207, -t722, -t321 * t530 - t208, t515, -t187 * t530 - t243 * t321 + t563 - t578, -t186 * t530 + t243 * t319 + t542 + t562, 0, 0, -t122 * t502 + t251 * t639 (-t122 - t727) * t505 + (-t123 - t724) * t502, t204 * t502 - t251 * t321 + t314 * t639, t553, t204 * t505 + t249 * t321 - t314 * t769, -t314 * t321, -pkin(3) * t123 - t132 * t314 - t187 * t249 - t321 * t92 + t502 * t572 - t505 * t529, pkin(3) * t122 + t133 * t314 - t187 * t251 + t321 * t93 + t502 * t529 + t505 * t572, t132 * t251 + t133 * t249 + ((-t123 + t688) * pkin(11) + t770) * t505 + (t637 - t747 + (qJD(4) * t249 - t122) * pkin(11)) * t502 - t562, -t74 * pkin(3) + g(1) * t272 + g(2) * t270 + g(3) * t346 - t92 * t132 - t93 * t133 - t168 * t187 + (t28 * t505 + t637 * t502 + (-t502 * t93 - t505 * t92) * qJD(4) - t562) * pkin(11), t196 * t611 + t715 * t87, -t231 * t767 + t196 * t230 + (t606 - t746) * t502 + t548 * t686, -t505 * t87 + t611 * t249 + (t196 * t314 + t729) * t502, t767 * t230 + (-t502 * t645 - t505 * t603) * t497, -t505 * t645 + t776 * t249 + (t319 * t767 + t603 - t730) * t502, t553, t386 * t123 + t109 * t767 - t76 * t230 + t738 * t249 - t562 * t497 + (-t8 + t563 * t499 + (-pkin(11) * t767 + t76 * t497) * qJD(4)) * t505 + (-pkin(11) * t645 + t23 * t497 + t314 * t46) * t502, -t109 * t196 - t387 * t123 - t76 * t231 - t737 * t249 - t562 * t499 + (t9 + (pkin(11) * t196 + t499 * t76) * qJD(4) - t563 * t497) * t505 + (pkin(11) * t87 + t23 * t499 - t314 * t47) * t502, t387 * t645 - t386 * t87 + t47 * t230 + t46 * t231 - t738 * t196 + (-t46 * t499 - t47 * t497) * t686 + (-t497 * t9 - t499 * t8 + t563) * t502 + t737 * t767, t9 * t387 + t8 * t386 - t76 * t109 - g(1) * (t283 * t763 - t272) - g(2) * (t279 * t763 - t270) - g(3) * (t347 * t763 - t346) + t737 * t47 + t738 * t46 + (t23 * t502 + t686 * t76 - t562) * pkin(11), t114 * t702 - t30 * t407, t113 * t702 - t114 * t701 + t30 * t406 - t31 * t407, t114 * t769 + t121 * t407 + t246 * t702 + t30 * t505, -t113 * t701 + t31 * t406, t113 * t769 - t121 * t406 - t246 * t701 + t31 * t505, -t121 * t505 + t246 * t769, t247 * t121 - t2 * t505 + t445 * t31 + t14 * t406 - g(1) * (-t283 * t720 + t284 * t490) - g(2) * (-t279 * t720 - t282 * t490) - g(3) * (-t347 * t720 + t348 * t490) + t701 * t62 + t742 * t246 - t736 * t113 - t579 * t769, -t248 * t121 + t1 * t505 - t445 * t30 + t14 * t407 - g(1) * (t283 * t721 + t284 * t491) - g(2) * (t279 * t721 - t282 * t491) - g(3) * (t347 * t721 + t348 * t491) + t702 * t62 - t743 * t246 - t12 * t769 + t736 * t114, -t1 * t406 + t113 * t743 - t114 * t742 - t12 * t701 - t2 * t407 + t247 * t30 - t248 * t31 + t502 * t563 + t579 * t702, t1 * t248 + t2 * t247 + t14 * t445 - g(1) * (t283 * t604 + t284 * t675 - t272) - g(2) * (t279 * t604 - t282 * t675 - t270) - g(3) * (t347 * t604 + t348 * t675 - t346) + t736 * t62 + t743 * t12 - t742 * t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t728, t251 ^ 2 - t760, -t122 + t727, -t728, t724 - t123, t204, -t168 * t251 + t532 + t747, t168 * t249 - t565 - t770, 0, 0, t196 * t725 + t746, t249 * t548 + t497 * t645 + t87 * t499, -t196 * t251 + t499 * t760 + t730, -t726 * t767 + t606, -t251 * t767 - t497 * t760 + t729, -t728, -qJ(5) * t730 + pkin(4) * t120 - t93 * t244 - t46 * t251 + (t497 * t712 - t65) * t249 + (t554 + t747 + t752) * t499, -qJ(5) * t729 - pkin(4) * t87 - t196 * t93 + t251 * t47 + (t499 * t712 + t66) * t249 - t554 * t497, t65 * t196 + t66 * t244 + (qJ(5) * t120 - qJD(5) * t244 - t46 * t249 - t66 * t314 + t499 * t597 + t9) * t499 + (qJ(5) * t87 + qJD(5) * t196 - t249 * t47 - t8) * t497 + t565, -t46 * t65 - t47 * t66 - t76 * t93 + (-t46 * t497 + t47 * t499) * qJD(5) + t554 * pkin(4) + (-t8 * t497 + t9 * t499 + t565) * qJ(5), -t114 * t708 - t30 * t441, -t113 * t708 + t114 * t709 - t30 * t574 - t31 * t441, -t114 * t251 + t121 * t441 - t246 * t708, t113 * t709 - t31 * t574, -t113 * t251 + t121 * t574 + t246 * t709, -t246 * t251, t113 * t71 + t121 * t367 - t14 * t574 + t246 * t739 + t251 * t579 - t31 * t488 + t491 * t566 - t62 * t709, -t114 * t71 + t12 * t251 - t121 * t368 + t14 * t441 - t246 * t740 + t30 * t488 - t490 * t566 - t62 * t708, t1 * t574 + t113 * t740 - t114 * t739 + t12 * t709 - t2 * t441 + t30 * t367 - t31 * t368 - t579 * t708 + t565, t1 * t368 + t2 * t367 - t14 * t488 - t62 * t71 - g(1) * (-t227 * t488 + t228 * t751) - g(2) * (t225 * t488 - t226 * t751) - g(3) * (-t274 * t488 + t275 * t751) + t740 * t12 - t739 * t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196 * t249 - t645, t249 * t767 + t87, -t196 ^ 2 - t767 ^ 2, t196 * t46 - t47 * t767 + t521, 0, 0, 0, 0, 0, 0, t114 * t246 + t31, -t30 + t790, -t788 - t791, -t12 * t113 - t114 * t579 + t521 - t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t731, t788 - t791, -t30 - t790, t731, -t660 + (-qJD(6) + t246) * t114, t121, t12 * t246 - t62 * t114 - g(1) * t160 - g(2) * t793 - g(3) * (-t275 * t490 + t347 * t491) + t2, -t579 * t246 - t62 * t113 + g(1) * t161 - g(2) * t792 - g(3) * (-t275 * t491 - t347 * t490) - t1, 0, 0;];
tau_reg  = t5;
