% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR11_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR11_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR11_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR11_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:34:15
% EndTime: 2019-03-09 19:34:40
% DurationCPUTime: 9.80s
% Computational Cost: add. (10554->523), mult. (26761->908), div. (0->0), fcn. (25765->10), ass. (0->246)
t140 = sin(qJ(3));
t137 = sin(pkin(6));
t144 = cos(qJ(2));
t257 = qJD(2) * t144;
t231 = t137 * t257;
t215 = t140 * t231;
t143 = cos(qJ(3));
t141 = sin(qJ(2));
t264 = t137 * t141;
t269 = cos(pkin(6));
t88 = t140 * t269 + t143 * t264;
t158 = t88 * qJD(3) + t215;
t221 = t269 * qJD(3);
t239 = t140 * t264;
t69 = -qJD(3) * t239 + (t221 + t231) * t143;
t87 = -t143 * t269 + t239;
t312 = 0.2e1 * t158 * t88 + 0.2e1 * t69 * t87;
t311 = 0.2e1 * t158 * t87;
t132 = qJD(3) * t143;
t256 = qJD(3) * t140;
t309 = t132 * t87 + t140 * t158 - t69 * t143 + t256 * t88;
t139 = sin(qJ(5));
t286 = cos(qJ(5));
t227 = qJD(3) * t286;
t212 = t143 * t227;
t261 = t139 * t140;
t98 = t286 * t143 + t261;
t67 = qJD(5) * t98 - t139 * t256 - t212;
t226 = qJD(5) * t286;
t229 = t139 * t132;
t253 = qJD(5) * t139;
t68 = -t143 * t253 + t229 + (t226 - t227) * t140;
t254 = qJD(4) * t140;
t267 = qJ(4) * t143;
t292 = pkin(3) + pkin(4);
t73 = (-t292 * t140 + t267) * qJD(3) + t254;
t307 = pkin(5) * t68 + pkin(11) * t67 + t73;
t258 = qJD(2) * t141;
t263 = t137 * t144;
t294 = 0.2e1 * t137;
t306 = (t140 * t144 * t221 + (t132 * t141 + t140 * t257) * t263 - t258 * t87) * t294;
t119 = t137 * t258;
t237 = pkin(1) * t269;
t94 = pkin(8) * t263 + t141 * t237;
t190 = pkin(9) * t269 + t94;
t185 = t140 * t190;
t168 = -t88 * pkin(10) + t185;
t238 = -pkin(9) * t141 - pkin(1);
t154 = (-t143 * t238 + (pkin(2) * t143 + t292) * t144) * t137 + t168;
t250 = t144 * qJD(4);
t303 = qJD(3) * t190 - qJD(2) * t137 * (pkin(2) * t141 - pkin(9) * t144);
t301 = -pkin(8) * t264 + t144 * t237;
t172 = qJD(2) * t301;
t191 = pkin(2) * t144 - t238;
t186 = t191 * t137;
t304 = -qJD(3) * t186 + t172;
t32 = t303 * t140 - t304 * t143;
t305 = pkin(10) * t158 + qJ(4) * t119 + qJD(5) * t154 - t137 * t250 - t32;
t138 = sin(qJ(6));
t135 = t138 ^ 2;
t142 = cos(qJ(6));
t136 = t142 ^ 2;
t259 = t135 - t136;
t111 = t259 * qJD(6);
t302 = 0.2e1 * t111;
t300 = t135 + t136;
t80 = -pkin(2) * t269 - t301;
t164 = -t88 * qJ(4) + t80;
t42 = -t292 * t87 - t164;
t62 = t139 * t88 - t87 * t286;
t63 = t87 * t139 + t88 * t286;
t157 = t62 * pkin(5) - t63 * pkin(11) + t42;
t150 = t304 * t140 + t303 * t143;
t220 = pkin(3) * t119;
t30 = t150 - t220;
t148 = -pkin(4) * t119 - t69 * pkin(10) + t30;
t287 = t87 * pkin(10);
t167 = -t144 * qJ(4) - t140 * t191;
t184 = t143 * t190;
t49 = t137 * t167 + t184;
t155 = t49 + t287;
t7 = -t139 * t148 + t155 * t253 - t305 * t286;
t299 = pkin(11) * t119 - qJD(6) * t157 + t7;
t218 = t286 * t292;
t105 = -t139 * qJ(4) - t218;
t101 = pkin(5) - t105;
t106 = t286 * qJ(4) - t139 * t292;
t102 = -pkin(11) + t106;
t291 = pkin(9) - pkin(10);
t103 = t291 * t256;
t113 = t291 * t143;
t71 = t286 * t113 + t291 * t261;
t47 = t71 * qJD(5) - t139 * t103 - t291 * t212;
t234 = t286 * t140;
t99 = -t139 * t143 + t234;
t297 = t47 + (t101 * t99 - t102 * t98) * qJD(6);
t270 = t87 * t140;
t271 = t143 * t88;
t295 = -t143 * t215 + (t270 - t271) * qJD(3);
t293 = 0.2e1 * qJD(4);
t289 = pkin(9) * t69;
t285 = pkin(9) * t137;
t70 = t139 * t113 - t291 * t234;
t284 = t47 * t70;
t82 = qJ(4) * t253 - t286 * qJD(4) + qJD(5) * t218;
t283 = t62 * t82;
t83 = t139 * qJD(4) + qJD(5) * t106;
t281 = t70 * t83;
t280 = t99 * t67;
t41 = t286 * t155;
t22 = t139 * t154 + t41;
t252 = qJD(6) * t138;
t29 = t158 * t139 + t87 * t226 - t88 * t253 + t69 * t286;
t17 = -t138 * t119 - t63 * t252 + (qJD(6) * t263 + t29) * t142;
t279 = t138 * t17;
t52 = t138 * t63 - t142 * t263;
t278 = t138 * t52;
t277 = t138 * t83;
t53 = t138 * t263 + t63 * t142;
t16 = qJD(6) * t53 + t119 * t142 + t29 * t138;
t276 = t142 * t16;
t275 = t142 * t53;
t274 = t142 * t83;
t176 = (qJ(4) * t258 - t250) * t137;
t27 = t176 - t32;
t273 = t143 * t27;
t272 = t143 * t32;
t268 = qJ(4) * t140;
t266 = qJD(5) * t70;
t262 = t138 * t142;
t255 = qJD(3) * t144;
t251 = qJD(6) * t142;
t28 = t63 * qJD(5) + t69 * t139 - t158 * t286;
t249 = 0.2e1 * t62 * t28;
t248 = 0.2e1 * t98 * t68;
t247 = -0.2e1 * pkin(2) * qJD(3);
t246 = -0.2e1 * pkin(5) * qJD(6);
t245 = pkin(9) * t256;
t244 = pkin(9) * t132;
t243 = t47 * t286;
t242 = t83 * t286;
t241 = t99 * t252;
t240 = t99 * t251;
t236 = t138 * t286;
t235 = t142 * t286;
t134 = t137 ^ 2;
t233 = t134 * t257;
t232 = t143 * t255;
t230 = t138 * t251;
t228 = t140 * t132;
t225 = qJD(6) * t286;
t224 = qJD(6) * (pkin(5) + t101);
t60 = t300 * t82;
t223 = 0.4e1 * t99 * t262;
t222 = qJD(2) * t269;
t96 = t99 ^ 2;
t219 = t96 * t230;
t216 = t141 * t233;
t214 = t138 * t226;
t213 = t142 * t226;
t211 = pkin(5) * t67 - pkin(11) * t68;
t210 = pkin(5) * t99 + pkin(11) * t98;
t147 = qJD(5) * t41 + t305 * t139 - t286 * t148;
t6 = pkin(5) * t119 + t147;
t209 = qJD(6) * t102 * t62 - t6;
t171 = t144 * pkin(3) + t143 * t191;
t151 = -t139 * t167 + t286 * (t144 * pkin(4) + t171);
t152 = t286 * t168 - t139 * (t184 + t287);
t18 = (-t144 * pkin(5) - t151) * t137 - t152;
t208 = -t18 * t67 + t6 * t99;
t207 = t141 * t222;
t206 = t28 * t99 - t62 * t67;
t205 = t28 * t98 + t62 * t68;
t204 = t47 * t99 - t67 * t70;
t203 = t67 * t98 - t68 * t99;
t202 = t82 * t98 + t83 * t99;
t201 = -pkin(3) * t143 - t268;
t19 = pkin(11) * t263 + t22;
t10 = -t138 * t19 + t142 * t157;
t11 = t138 * t157 + t142 * t19;
t200 = t10 * t142 + t11 * t138;
t199 = t10 * t138 - t11 * t142;
t95 = t292 * t143 + pkin(2) + t268;
t166 = pkin(5) * t98 - pkin(11) * t99 + t95;
t161 = t142 * t166;
t39 = -t138 * t71 + t161;
t40 = t138 * t166 + t142 * t71;
t197 = t138 * t40 + t142 * t39;
t196 = t138 * t39 - t142 * t40;
t195 = t138 * t53 + t142 * t52;
t50 = t137 * t171 + t185;
t194 = -t140 * t49 + t143 * t50;
t57 = -t143 * t186 - t185;
t58 = -t140 * t186 + t184;
t193 = -t140 * t58 - t143 * t57;
t189 = t139 * t98 + t286 * t99;
t24 = t138 * t28 + t251 * t62;
t23 = -t142 * t28 + t252 * t62;
t188 = (t270 + t271) * pkin(9);
t187 = -pkin(9) * t119 * t140 + t232 * t285;
t182 = -qJD(6) * t18 - t102 * t28 + t283;
t180 = t300 * t286;
t179 = t140 * t255 + t143 * t258;
t75 = t179 * t137;
t169 = qJD(3) * t201 + qJD(4) * t143;
t31 = pkin(1) * t207 + pkin(3) * t158 + pkin(8) * t231 - t69 * qJ(4) - t88 * qJD(4);
t26 = -pkin(4) * t158 - t31;
t146 = t28 * pkin(5) - t29 * pkin(11) + t26;
t1 = -t138 * t146 + t142 * t299 + t19 * t252;
t2 = t138 * t299 + t142 * t146 - t19 * t251;
t165 = -qJD(6) * t200 - t1 * t142 - t138 * t2;
t46 = t286 * t103 - t291 * t229 + t266;
t14 = -qJD(6) * t161 - t138 * t307 + t142 * t46 + t71 * t252;
t15 = -t40 * qJD(6) + t138 * t46 + t307 * t142;
t3 = -qJD(6) * t197 - t138 * t15 - t14 * t142;
t163 = t279 - t276 + (t275 + t278) * qJD(6);
t162 = -qJD(6) * t70 - t101 * t67 - t102 * t68 + t202;
t160 = t286 * t67 - t139 * t68 + (t139 * t99 - t286 * t98) * qJD(5);
t118 = -0.2e1 * t228;
t117 = 0.2e1 * t228;
t116 = -0.2e1 * t230;
t115 = 0.2e1 * t230;
t112 = (-t140 ^ 2 + t143 ^ 2) * qJD(3);
t108 = -pkin(2) + t201;
t107 = -0.2e1 * t216;
t97 = -0.2e1 * t111;
t91 = t138 * t225 + t142 * t253;
t90 = t138 * t253 - t142 * t225;
t89 = t180 * qJD(5);
t86 = -t254 + (pkin(3) * t140 - t267) * qJD(3);
t84 = qJD(2) * t94;
t74 = (t140 * t258 - t232) * t137;
t65 = t143 * pkin(9) * t158;
t59 = 0.2e1 * t88 * t69;
t55 = t138 * t68 + t251 * t98;
t54 = -t142 * t68 + t252 * t98;
t51 = t132 * t88 + t140 * t69;
t48 = t87 * pkin(3) + t164;
t44 = (-t144 * t69 + t258 * t88) * t294;
t43 = t99 * t111 + t262 * t67;
t35 = qJD(6) * t223 - t259 * t67;
t21 = t137 * t151 + t152;
t13 = t251 * t53 + t279;
t12 = t252 * t52 - t276;
t4 = -qJD(6) * t195 - t138 * t16 + t142 * t17;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, 0.2e1 * (-t141 ^ 2 + t144 ^ 2) * t134 * qJD(2), 0.2e1 * t222 * t263, t107, -0.2e1 * t137 * t207, 0, -0.2e1 * t134 * pkin(1) * t258 - 0.2e1 * t269 * t84, -0.2e1 * pkin(1) * t233 - 0.2e1 * t172 * t269, -0.2e1 * t119 * t94 + 0.2e1 * t172 * t263 - 0.2e1 * t231 * t301 + 0.2e1 * t264 * t84, 0.2e1 * t172 * t94 - 0.2e1 * t301 * t84, t59, -t312, t44, t311, t306, t107, 0.2e1 * t119 * t57 + 0.2e1 * t150 * t263 + 0.2e1 * t158 * t80 + 0.2e1 * t84 * t87, 0.2e1 * t80 * t69 + 0.2e1 * t84 * t88 + 0.2e1 * (-t144 * t32 - t258 * t58) * t137, 0.2e1 * t150 * t88 - 0.2e1 * t158 * t58 + 0.2e1 * t32 * t87 - 0.2e1 * t57 * t69, -0.2e1 * t150 * t57 - 0.2e1 * t32 * t58 + 0.2e1 * t80 * t84, t59, t44, t312, t107, -t306, t311, -0.2e1 * t119 * t50 + 0.2e1 * t158 * t48 + 0.2e1 * t263 * t30 + 0.2e1 * t31 * t87, -0.2e1 * t158 * t49 - 0.2e1 * t27 * t87 + 0.2e1 * t30 * t88 + 0.2e1 * t50 * t69, -0.2e1 * t31 * t88 - 0.2e1 * t48 * t69 + 0.2e1 * (-t144 * t27 + t258 * t49) * t137, 0.2e1 * t27 * t49 + 0.2e1 * t30 * t50 + 0.2e1 * t31 * t48, 0.2e1 * t63 * t29, -0.2e1 * t28 * t63 - 0.2e1 * t29 * t62 (t144 * t29 - t258 * t63) * t294, t249 (-t144 * t28 + t258 * t62) * t294, t107, 0.2e1 * t26 * t62 + 0.2e1 * t42 * t28 + 0.2e1 * (-t144 * t147 - t21 * t258) * t137, 0.2e1 * t26 * t63 + 0.2e1 * t42 * t29 + 0.2e1 * (t144 * t7 + t22 * t258) * t137, 0.2e1 * t147 * t63 - 0.2e1 * t21 * t29 - 0.2e1 * t22 * t28 + 0.2e1 * t62 * t7, -0.2e1 * t147 * t21 - 0.2e1 * t22 * t7 + 0.2e1 * t26 * t42, 0.2e1 * t53 * t17, -0.2e1 * t16 * t53 - 0.2e1 * t17 * t52, 0.2e1 * t17 * t62 + 0.2e1 * t28 * t53, 0.2e1 * t52 * t16, -0.2e1 * t16 * t62 - 0.2e1 * t28 * t52, t249, 0.2e1 * t10 * t28 + 0.2e1 * t16 * t18 + 0.2e1 * t2 * t62 + 0.2e1 * t52 * t6, 0.2e1 * t1 * t62 - 0.2e1 * t11 * t28 + 0.2e1 * t17 * t18 + 0.2e1 * t53 * t6, 0.2e1 * t1 * t52 - 0.2e1 * t10 * t17 - 0.2e1 * t11 * t16 - 0.2e1 * t2 * t53, -0.2e1 * t1 * t11 + 0.2e1 * t10 * t2 + 0.2e1 * t18 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, 0, -t119, 0, -t84, -t172, 0, 0, t51, -t309, t74, t295, t75, 0, -pkin(2) * t158 - t84 * t143 + t256 * t80 + t187, -pkin(2) * t69 + t132 * t80 + t84 * t140 - t179 * t285, -t272 - t65 + (t150 + t289) * t140 + (t188 + t193) * qJD(3), -pkin(2) * t84 + (qJD(3) * t193 + t140 * t150 - t272) * pkin(9), t51, t74, t309, 0, -t75, t295, t108 * t158 - t31 * t143 + t256 * t48 + t86 * t87 + t187, t273 - t65 + (t30 + t289) * t140 + (t188 + t194) * qJD(3), pkin(9) * t75 - t108 * t69 - t132 * t48 - t31 * t140 - t86 * t88, t108 * t31 + t48 * t86 + (qJD(3) * t194 + t140 * t30 + t273) * pkin(9), t29 * t99 - t63 * t67, -t29 * t98 - t63 * t68 - t206 (-t144 * t67 - t258 * t99) * t137, t205 (-t144 * t68 + t258 * t98) * t137, 0, t26 * t98 + t95 * t28 + t42 * t68 + t73 * t62 + (-t144 * t47 + t258 * t70) * t137, t26 * t99 + t95 * t29 - t42 * t67 + t73 * t63 + (t144 * t46 + t258 * t71) * t137, t147 * t99 + t21 * t67 - t22 * t68 - t28 * t71 + t29 * t70 + t46 * t62 + t47 * t63 + t7 * t98, t147 * t70 - t21 * t47 - t22 * t46 + t26 * t95 + t42 * t73 - t7 * t71, -t53 * t241 + (t17 * t99 - t53 * t67) * t142, t195 * t67 + (-t279 - t276 + (-t275 + t278) * qJD(6)) * t99, t142 * t206 + t17 * t98 - t241 * t62 + t53 * t68, t52 * t240 + (t16 * t99 - t52 * t67) * t138, -t138 * t206 - t16 * t98 - t240 * t62 - t52 * t68, t205, t10 * t68 + t138 * t208 + t15 * t62 + t16 * t70 + t18 * t240 + t2 * t98 + t28 * t39 + t47 * t52, t1 * t98 - t11 * t68 + t14 * t62 + t142 * t208 + t17 * t70 - t18 * t241 - t28 * t40 + t47 * t53, t14 * t52 - t15 * t53 - t16 * t40 - t17 * t39 + t200 * t67 + (qJD(6) * t199 + t1 * t138 - t142 * t2) * t99, -t1 * t40 + t10 * t15 - t11 * t14 + t18 * t47 + t2 * t39 + t6 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, 0.2e1 * t112, 0, t118, 0, 0, t140 * t247, t143 * t247, 0, 0, t117, 0, -0.2e1 * t112, 0, 0, t118, 0.2e1 * t108 * t256 - 0.2e1 * t143 * t86, 0, -0.2e1 * t108 * t132 - 0.2e1 * t140 * t86, 0.2e1 * t108 * t86, -0.2e1 * t280, 0.2e1 * t203, 0, t248, 0, 0, 0.2e1 * t68 * t95 + 0.2e1 * t73 * t98, -0.2e1 * t67 * t95 + 0.2e1 * t73 * t99, 0.2e1 * t46 * t98 - 0.2e1 * t68 * t71 + 0.2e1 * t204, -0.2e1 * t46 * t71 + 0.2e1 * t73 * t95 + 0.2e1 * t284, -0.2e1 * t136 * t280 - 0.2e1 * t219, t223 * t67 + t302 * t96, -0.2e1 * t142 * t203 - 0.2e1 * t241 * t98, -0.2e1 * t135 * t280 + 0.2e1 * t219, 0.2e1 * t138 * t203 - 0.2e1 * t240 * t98, t248, 0.2e1 * t138 * t204 + 0.2e1 * t15 * t98 + 0.2e1 * t240 * t70 + 0.2e1 * t39 * t68, 0.2e1 * t14 * t98 + 0.2e1 * t142 * t204 - 0.2e1 * t241 * t70 - 0.2e1 * t40 * t68, 0.2e1 * t197 * t67 + 0.2e1 * (qJD(6) * t196 + t138 * t14 - t142 * t15) * t99, -0.2e1 * t14 * t40 + 0.2e1 * t15 * t39 + 0.2e1 * t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, -t158, t119, -t150, t32, 0, 0, 0, t69, 0, t119, t158, 0, -t150 + 0.2e1 * t220, -t69 * pkin(3) - qJ(4) * t158 - t87 * qJD(4), 0.2e1 * t176 - t32, -pkin(3) * t30 + qJ(4) * t27 + qJD(4) * t49, 0, 0, -t29, 0, t28, t119, -t105 * t119 - t263 * t83 + t147, t106 * t119 + t263 * t82 - t7, -t105 * t29 - t106 * t28 + t63 * t83 + t283, -t105 * t147 - t106 * t7 - t21 * t83 - t22 * t82, -t13, -t4, -t24, -t12, t23, 0, t101 * t16 + t138 * t182 - t142 * t209 + t52 * t83, t101 * t17 + t138 * t209 + t142 * t182 + t53 * t83 (-t102 * t16 + t52 * t82 + t1 + (t102 * t53 + t10) * qJD(6)) * t142 + (t102 * t17 - t53 * t82 + t2 + (t102 * t52 + t11) * qJD(6)) * t138, t101 * t6 + t102 * t165 + t18 * t83 + t199 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, 0, -t256, 0, -t244, t245, 0, 0, 0, t132, 0, 0, t256, 0, -t244, t169, -t245, t169 * pkin(9), 0, 0, t67, 0, t68, 0, t47, -t46, t105 * t67 - t106 * t68 + t202, -t105 * t47 - t106 * t46 - t71 * t82 + t281, t43, t35, -t55, -t43, t54, 0, t162 * t138 + t142 * t297, -t138 * t297 + t162 * t142, -t3, t101 * t47 + t102 * t3 + t196 * t82 + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293, qJ(4) * t293, 0, 0, 0, 0, 0, 0, 0.2e1 * t83, -0.2e1 * t82, 0, -0.2e1 * t105 * t83 - 0.2e1 * t106 * t82, t115, t97, 0, t116, 0, 0, -0.2e1 * t101 * t252 + 0.2e1 * t274, -0.2e1 * t101 * t251 - 0.2e1 * t277, 0.2e1 * t60, 0.2e1 * t101 * t83 - 0.2e1 * t102 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, t69, 0, t30, 0, 0, 0, 0, 0, 0 (-t144 * t253 - t286 * t258) * t137 (t139 * t258 - t144 * t226) * t137, -t286 * t29 - t139 * t28 + (t139 * t63 - t286 * t62) * qJD(5), -t147 * t286 - t7 * t139 + (-t139 * t21 + t286 * t22) * qJD(5), 0, 0, 0, 0, 0, 0, -t62 * t214 - t286 * t16 + (qJD(5) * t52 - t24) * t139, -t62 * t213 - t286 * t17 + (qJD(5) * t53 + t23) * t139 (-t235 * t52 + t236 * t53) * qJD(5) + t163 * t139, -t6 * t286 + (-t10 * t236 + t11 * t235) * qJD(5) + (qJD(5) * t18 + t165) * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132, 0, t244, 0, 0, 0, 0, 0, 0, 0, 0, t160, -t243 - t46 * t139 + (t139 * t70 + t286 * t71) * qJD(5), 0, 0, 0, 0, 0, 0, t138 * t160 - t189 * t251, t142 * t160 + t189 * t252, 0, -t243 + (t235 * t40 - t236 * t39) * qJD(5) + (t3 + t266) * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, t226, 0, -t242 - t82 * t139 + (-t105 * t139 + t286 * t106) * qJD(5), 0, 0, 0, 0, 0, 0, t91, -t90, -t89, -t242 - t139 * t60 + (t101 * t139 + t102 * t180) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (-t286 + t180) * t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, -t28, -t119, -t147, t7, 0, 0, t13, t4, t24, t12, -t23, 0, -pkin(5) * t16 - pkin(11) * t24 - t142 * t6 + t18 * t252, -pkin(5) * t17 + pkin(11) * t23 + t138 * t6 + t18 * t251, pkin(11) * t163 + t165, -pkin(5) * t6 + pkin(11) * t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, 0, -t68, 0, -t47, t46, 0, 0, -t43, -t35, t55, t43, -t54, 0, -t142 * t47 + t211 * t138 + (t138 * t70 - t142 * t210) * qJD(6), t138 * t47 + t211 * t142 + (t138 * t210 + t142 * t70) * qJD(6), t3, -pkin(5) * t47 + pkin(11) * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, t82, 0, 0, t116, t302, 0, t115, 0, 0, t138 * t224 - t274, t142 * t224 + t277, -t60, -pkin(5) * t83 - pkin(11) * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, -t226, 0, 0, 0, 0, 0, 0, 0, 0, -t91, t90, t89 (-pkin(5) * t139 + pkin(11) * t180) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, t97, 0, t116, 0, 0, t138 * t246, t142 * t246, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, -t16, t28, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142 * t67 - t241, 0, t138 * t67 - t240, t68, t15, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, 0, t252, 0, -t102 * t251 + t138 * t82, t102 * t252 + t142 * t82, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139 * t251 - t214, t139 * t252 - t213, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, -t252, 0, -pkin(11) * t251, pkin(11) * t252, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
