% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRR11_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR11_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR11_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR11_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR11_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRPRR11_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:34:33
% EndTime: 2019-03-09 19:34:56
% DurationCPUTime: 13.80s
% Computational Cost: add. (8910->638), mult. (22722->855), div. (0->0), fcn. (17731->10), ass. (0->239)
t634 = sin(qJ(6));
t636 = sin(qJ(3));
t640 = cos(qJ(3));
t633 = cos(pkin(6));
t730 = qJD(1) * t633;
t687 = qJD(2) + t730;
t637 = sin(qJ(2));
t632 = sin(pkin(6));
t731 = qJD(1) * t632;
t705 = t637 * t731;
t553 = t636 * t705 - t640 * t687;
t555 = t636 * t687 + t640 * t705;
t635 = sin(qJ(5));
t639 = cos(qJ(5));
t499 = t553 * t635 + t555 * t639;
t716 = qJD(1) * qJD(2);
t699 = t632 * t716;
t679 = t637 * t699;
t649 = -qJD(6) * t499 - t679;
t641 = cos(qJ(2));
t678 = t641 * t699;
t789 = qJD(3) * t553;
t512 = -t640 * t678 + t789;
t726 = qJD(3) * t555;
t513 = t636 * t678 + t726;
t722 = qJD(5) * t639;
t723 = qJD(5) * t635;
t442 = -t639 * t512 + t635 * t513 + t553 * t722 - t555 * t723;
t729 = qJD(1) * t641;
t704 = t632 * t729;
t603 = -qJD(3) + t704;
t599 = qJD(5) + t603;
t638 = cos(qJ(6));
t719 = qJD(6) * t638;
t748 = t638 * t442 + t599 * t719;
t413 = t634 * t649 + t748;
t478 = t499 * t638 + t599 * t634;
t414 = qJD(6) * t478 + t442 * t634 + t638 * t679;
t476 = t499 * t634 - t638 * t599;
t776 = -t639 * t553 + t555 * t635;
t783 = qJD(6) + t776;
t762 = t476 * t783;
t766 = t413 * t634;
t793 = t783 * t638;
t801 = ((t413 - t762) * t638 - (t478 * t783 + t414) * t634) * MDP(30) - MDP(26) * t679 + (t478 * t793 + t766) * MDP(29);
t724 = qJD(3) * t640;
t796 = -t640 * t704 + t724;
t681 = t636 * t704;
t725 = qJD(3) * t636;
t790 = t681 - t725;
t695 = -t512 * t635 - t639 * t513;
t443 = qJD(5) * t499 + t695;
t765 = t443 * t634;
t794 = t783 * t793 + t765;
t768 = pkin(9) - pkin(10);
t606 = t768 * t640;
t712 = pkin(1) * t730;
t573 = -pkin(8) * t705 + t641 * t712;
t659 = t632 * (pkin(2) * t637 - pkin(9) * t641);
t574 = qJD(1) * t659;
t693 = -t636 * t573 + t574 * t640;
t749 = t640 * t641;
t769 = pkin(3) + pkin(4);
t792 = (-pkin(10) * t749 - t637 * t769) * t731 - t693 - qJD(3) * t606;
t739 = t640 * t573 + t636 * t574;
t491 = qJ(4) * t705 + t739;
t791 = pkin(10) * t681 + t768 * t725 + t491;
t576 = pkin(8) * t704 + t637 * t712;
t529 = pkin(9) * t687 + t576;
t568 = (-pkin(2) * t641 - pkin(9) * t637 - pkin(1)) * t632;
t543 = qJD(1) * t568;
t484 = -t636 * t529 + t640 * t543;
t718 = qJD(4) - t484;
t750 = t638 * t443;
t787 = -t634 * t783 ^ 2 + t750;
t786 = pkin(5) * t499;
t588 = t635 * t636 + t639 * t640;
t743 = t599 * t588;
t742 = t796 * t635 + t636 * t722 + t790 * t639 - t640 * t723;
t751 = t632 * t641;
t715 = pkin(8) * t751;
t767 = pkin(1) * t637;
t774 = (t633 * t767 + t715) * qJD(2);
t565 = qJD(1) * t774;
t446 = t513 * pkin(3) + t512 * qJ(4) - t555 * qJD(4) + t565;
t785 = t796 * qJ(4) + t636 * qJD(4) + t576;
t752 = t632 * t637;
t583 = t633 * t636 + t640 * t752;
t702 = qJD(2) * t751;
t522 = qJD(3) * t583 + t636 * t702;
t582 = -t633 * t640 + t636 * t752;
t523 = -qJD(3) * t582 + t640 * t702;
t457 = t522 * pkin(3) - t523 * qJ(4) - t583 * qJD(4) + t774;
t784 = -pkin(10) * t555 + t718;
t629 = t632 ^ 2;
t782 = -0.2e1 * t629 * t716;
t781 = MDP(5) * (t637 ^ 2 - t641 ^ 2);
t674 = pkin(3) * t679;
t575 = qJD(2) * t659;
t563 = qJD(1) * t575;
t775 = t633 * t641 * pkin(1) - pkin(8) * t752;
t577 = t775 * qJD(2);
t564 = qJD(1) * t577;
t683 = t529 * t724 + t543 * t725 - t640 * t563 + t636 * t564;
t447 = -t674 + t683;
t485 = t640 * t529 + t636 * t543;
t597 = t603 * qJ(4);
t475 = -t597 + t485;
t780 = t475 * t603 + t447;
t567 = t715 + (pkin(9) + t767) * t633;
t694 = -t636 * t567 + t568 * t640;
t488 = pkin(3) * t751 - t694;
t466 = pkin(4) * t751 - pkin(10) * t583 + t488;
t741 = t640 * t567 + t636 * t568;
t487 = -qJ(4) * t751 + t741;
t471 = pkin(10) * t582 + t487;
t779 = t635 * t466 + t639 * t471;
t605 = t768 * t636;
t664 = t605 * t639 - t606 * t635;
t778 = -qJD(5) * t664 + t635 * t792 + t639 * t791;
t534 = t605 * t635 + t606 * t639;
t777 = -qJD(5) * t534 + t635 * t791 - t639 * t792;
t740 = t769 * t790 + t785;
t735 = t639 * qJ(4) - t635 * t769;
t595 = t603 * qJD(4);
t602 = qJ(4) * t679;
t655 = t529 * t725 - t543 * t724 - t636 * t563 - t640 * t564;
t444 = -t595 + t602 - t655;
t429 = pkin(10) * t513 + t444;
t728 = qJD(2) * t637;
t703 = t632 * t728;
t673 = t769 * t703;
t430 = pkin(10) * t512 - qJD(1) * t673 + t683;
t454 = t603 * t769 + t784;
t465 = pkin(10) * t553 + t485;
t460 = t465 - t597;
t684 = t635 * t429 - t639 * t430 + t454 * t723 + t460 * t722;
t405 = pkin(5) * t679 + t684;
t500 = t555 * pkin(3) + t553 * qJ(4);
t474 = -pkin(4) * t555 - t500;
t591 = -pkin(11) + t735;
t773 = t783 * (-pkin(11) * t776 + qJD(6) * t591 + t474 - t786) - t405;
t772 = t783 * (pkin(11) * t783 + t786) + t405;
t660 = -t567 * t724 - t568 * t725 + t575 * t640 - t636 * t577;
t439 = -pkin(10) * t523 - t660 - t673;
t654 = -t567 * t725 + t568 * t724 + t636 * t575 + t640 * t577;
t450 = qJ(4) * t703 - qJD(4) * t751 + t654;
t440 = pkin(10) * t522 + t450;
t771 = -qJD(5) * t779 + t439 * t639 - t440 * t635;
t770 = t555 ^ 2;
t643 = qJD(1) ^ 2;
t528 = -t687 * pkin(2) - t573;
t469 = t553 * pkin(3) - t555 * qJ(4) + t528;
t764 = t469 * t555;
t761 = t553 * t555;
t760 = t553 * t603;
t759 = t555 * t603;
t589 = -t635 * t640 + t636 * t639;
t757 = t589 * t634;
t756 = t589 * t638;
t755 = t603 * t636;
t754 = t603 * t640;
t753 = t629 * t643;
t745 = -pkin(5) * t705 - t777;
t744 = pkin(3) * t790 + t785;
t672 = -qJ(4) * t635 - t639 * t769;
t738 = -qJD(5) * t672 + t465 * t635 - t639 * t784;
t737 = qJD(5) * t735 + t465 * t639 + t635 * t784;
t733 = MDP(22) * t499;
t732 = MDP(33) * t783;
t727 = qJD(2) * t640;
t418 = t454 * t635 + t460 * t639;
t416 = pkin(11) * t599 + t418;
t721 = qJD(6) * t416;
t720 = qJD(6) * t634;
t714 = pkin(9) * t755;
t713 = pkin(9) * t754;
t601 = -t640 * pkin(3) - t636 * qJ(4) - pkin(2);
t711 = pkin(9) * t728;
t710 = pkin(9) * t727;
t566 = -t633 * pkin(2) - t775;
t706 = t629 * t729;
t697 = t634 * t743 + t638 * t705;
t696 = -t634 * t705 + t638 * t743;
t692 = t599 * t639;
t585 = t640 * pkin(4) - t601;
t653 = t639 * t429 + t635 * t430 + t454 * t722 - t460 * t723;
t404 = -pkin(11) * t679 + t653;
t459 = -pkin(4) * t553 - t469;
t419 = pkin(5) * t776 - pkin(11) * t499 + t459;
t689 = -qJD(6) * t419 - t404;
t685 = MDP(4) * t629 * t637 * t641;
t677 = pkin(1) * t782;
t501 = pkin(5) * t588 - pkin(11) * t589 + t585;
t676 = -pkin(11) * t705 - qJD(6) * t501 + t778;
t675 = -pkin(5) * t742 - pkin(11) * t743 + qJD(6) * t534 - t740;
t486 = t582 * pkin(3) - t583 * qJ(4) + t566;
t410 = t416 * t638 + t419 * t634;
t409 = -t416 * t634 + t419 * t638;
t432 = pkin(11) * t751 + t779;
t470 = -pkin(4) * t582 - t486;
t509 = t582 * t635 + t583 * t639;
t665 = t582 * t639 - t583 * t635;
t434 = -pkin(5) * t665 - pkin(11) * t509 + t470;
t671 = t432 * t638 + t434 * t634;
t670 = -t432 * t634 + t434 * t638;
t417 = t454 * t639 - t460 * t635;
t668 = t466 * t639 - t471 * t635;
t658 = -t509 * t634 + t638 * t751;
t490 = t509 * t638 + t634 * t751;
t656 = -t485 * t603 - t683;
t652 = t635 * t439 + t639 * t440 + t466 * t722 - t471 * t723;
t651 = t589 * t719 - t697;
t650 = -t589 * t720 - t696;
t648 = pkin(1) * (-t633 * t716 + t753);
t415 = -pkin(5) * t599 - t417;
t646 = -pkin(11) * t443 + (t415 + t417) * t783;
t645 = -t484 * t603 + t655;
t644 = -t591 * t443 + (-t415 + t738) * t783;
t445 = -pkin(4) * t522 - t457;
t433 = -pkin(4) * t513 - t446;
t590 = pkin(5) - t672;
t494 = -pkin(3) * t705 - t693;
t479 = -t512 - t760;
t473 = pkin(3) * t603 + t718;
t456 = -pkin(3) * t703 - t660;
t453 = qJD(5) * t665 + t522 * t635 + t523 * t639;
t452 = qJD(5) * t509 - t522 * t639 + t523 * t635;
t431 = -pkin(5) * t751 - t668;
t421 = qJD(6) * t658 + t453 * t638 - t634 * t703;
t420 = qJD(6) * t490 + t453 * t634 + t638 * t703;
t412 = pkin(5) * t452 - pkin(11) * t453 + t445;
t411 = pkin(5) * t443 - pkin(11) * t442 + t433;
t408 = t638 * t411;
t407 = pkin(5) * t703 - t771;
t406 = -pkin(11) * t703 + t652;
t403 = -qJD(6) * t410 - t404 * t634 + t408;
t402 = qJD(6) * t409 + t404 * t638 + t411 * t634;
t1 = [(t413 * t658 - t414 * t490 - t420 * t478 - t421 * t476) * MDP(30) + (t771 * t599 + t445 * t776 + t470 * t443 - t433 * t665 + t459 * t452 + (-t684 * t641 + (-qJD(1) * t668 - t417) * t728) * t632) * MDP(27) + (t442 * t665 - t443 * t509 - t452 * t499 - t453 * t776) * MDP(23) + (-t452 * t599 + (-t443 * t641 + (-qJD(1) * t665 + t776) * t728) * t632) * MDP(25) + (-t444 * t582 + t447 * t583 - t450 * t553 + t456 * t555 + t473 * t523 - t475 * t522 - t487 * t513 - t488 * t512) * MDP(19) + (t512 * t582 - t513 * t583 - t522 * t555 - t523 * t553) * MDP(12) + (-t512 * t583 + t523 * t555) * MDP(11) + t781 * t782 + (t442 * t509 + t453 * t499) * MDP(22) + (t413 * t490 + t421 * t478) * MDP(29) + (t444 * t487 + t446 * t486 + t447 * t488 + t450 * t475 + t456 * t473 + t457 * t469) * MDP(21) + (-t523 * t603 + (t512 * t641 + (qJD(1) * t583 + t555) * t728) * t632) * MDP(13) + (t522 * t603 + (t513 * t641 + (-qJD(1) * t582 - t553) * t728) * t632) * MDP(14) + (t453 * t599 + (t442 * t641 + (-qJD(1) * t509 - t499) * t728) * t632) * MDP(24) + (-t446 * t583 - t450 * t603 - t457 * t555 - t469 * t523 + t486 * t512 + (-t444 * t641 + (qJD(1) * t487 + t475) * t728) * t632) * MDP(20) + (t446 * t582 + t456 * t603 + t457 * t553 + t469 * t522 + t486 * t513 + (t447 * t641 + (-qJD(1) * t488 - t473) * t728) * t632) * MDP(18) + 0.2e1 * t685 * t716 + (t414 * t665 - t420 * t783 + t443 * t658 - t452 * t476) * MDP(32) + ((-qJD(6) * t671 - t406 * t634 + t412 * t638) * t783 + t670 * t443 - t403 * t665 + t409 * t452 + t407 * t476 + t431 * t414 - t405 * t658 + t415 * t420) * MDP(34) + (-t413 * t665 + t421 * t783 + t443 * t490 + t452 * t478) * MDP(31) + (-t443 * t665 + t452 * t783) * MDP(33) + (-(qJD(6) * t670 + t406 * t638 + t412 * t634) * t783 - t671 * t443 + t402 * t665 - t410 * t452 + t407 * t478 + t431 * t413 + t405 * t490 + t415 * t421) * MDP(35) + (-t564 * t633 - t577 * t687 + t641 * t677) * MDP(10) + (MDP(6) * t702 - MDP(7) * t703) * (qJD(2) + 0.2e1 * t730) + (t654 * t603 + t774 * t555 - t566 * t512 + t565 * t583 + t528 * t523 + (-t655 * t641 + (-qJD(1) * t741 - t485) * t728) * t632) * MDP(17) + (-t660 * t603 + t774 * t553 + t566 * t513 + t565 * t582 + t528 * t522 + (t683 * t641 + (qJD(1) * t694 + t484) * t728) * t632) * MDP(16) + (-t565 * t633 + t637 * t677 - t687 * t774) * MDP(9) + (-t652 * t599 + t445 * t499 + t470 * t442 + t433 * t509 + t459 * t453 + (-t653 * t641 + (qJD(1) * t779 + t418) * t728) * t632) * MDP(28) + (-t603 * t632 - t706) * MDP(15) * t728 + (-t599 * t632 - t706) * MDP(26) * t728; (t433 * t588 + t585 * t443 + t742 * t459 + t740 * t776) * MDP(27) + t753 * t781 + (t697 * t478 + t696 * t476 + (-t766 - t414 * t638 + (t476 * t634 - t478 * t638) * qJD(6)) * t589) * MDP(30) + ((-t512 + t760) * t640 + (-t513 + t759) * t636) * MDP(12) + (-t512 * t636 - t555 * t754) * MDP(11) + (t603 * t725 + (-t641 * t755 + (t553 + t727) * t637) * t731) * MDP(14) + (t413 * t756 + t478 * t650) * MDP(29) + (pkin(2) * t512 + t565 * t636 - t739 * t603 - t576 * t555 + (t528 * t640 - t714) * qJD(3) + (-t528 * t749 + (t485 - t710) * t637) * t731) * MDP(17) + (-t603 * t724 + (t603 * t749 + (qJD(2) * t636 - t555) * t637) * t731) * MDP(13) + (-t446 * t636 + t491 * t603 + t512 * t601 + t744 * t555 + (-t469 * t640 + t714) * qJD(3) + (t469 * t749 + (-t475 + t710) * t637) * t731) * MDP(20) + (-t446 * t640 - t494 * t603 + t513 * t601 - t744 * t553 + (t469 * t636 + t713) * qJD(3) + (t473 * t637 + (-t469 * t641 - t711) * t636) * t731) * MDP(18) + (t446 * t601 - t473 * t494 - t475 * t491 - t744 * t469 + (t444 * t640 + t447 * t636 + (t473 * t640 - t475 * t636) * qJD(3)) * pkin(9)) * MDP(21) + (-pkin(2) * t513 - t565 * t640 + t693 * t603 - t576 * t553 + (t528 * t636 + t713) * qJD(3) + (-t484 * t637 + (-t528 * t641 - t711) * t636) * t731) * MDP(16) + (t491 * t553 - t494 * t555 + (t444 - t603 * t473 + (-t513 + t726) * pkin(9)) * t640 + ((-t512 + t789) * pkin(9) + t780) * t636) * MDP(19) + (-t414 * t588 - t443 * t757 - t476 * t742 - t651 * t783) * MDP(32) + (t413 * t588 + t478 * t742 + t589 * t750 + t650 * t783) * MDP(31) + (t443 * t588 + t742 * t783) * MDP(33) + ((t501 * t638 - t534 * t634) * t443 + t403 * t588 - t664 * t414 + t405 * t757 + (t634 * t676 - t638 * t675) * t783 + t745 * t476 + t742 * t409 + t651 * t415) * MDP(34) + (-(t501 * t634 + t534 * t638) * t443 - t402 * t588 - t664 * t413 + t405 * t756 + (t634 * t675 + t638 * t676) * t783 + t745 * t478 - t742 * t410 + t650 * t415) * MDP(35) + (-pkin(8) * t678 + t576 * t687 + t637 * t648) * MDP(9) + (pkin(8) * t679 + t573 * t687 + t641 * t648) * MDP(10) + (-t685 + (-MDP(6) * t641 + MDP(7) * t637) * t632 * t633) * t643 + ((-qJD(2) * t664 + t417) * MDP(27) + (qJD(2) * t588 - t776) * MDP(25) + (-qJD(2) * t589 + t499) * MDP(24) + (qJD(2) * t534 - t418) * MDP(28) + t603 * MDP(15) + t599 * MDP(26)) * t705 + (-t743 * MDP(24) - t742 * MDP(25) + MDP(27) * t777 + MDP(28) * t778) * t599 + (-t442 * t588 - t443 * t589 - t499 * t742 + t743 * t776) * MDP(23) + (t442 * t589 - t499 * t743) * MDP(22) + (t433 * t589 + t585 * t442 - t743 * t459 + t740 * t499) * MDP(28); (-t499 * t599 + t443) * MDP(25) + (-t410 * t499 + t590 * t413 + t737 * t478 + t634 * t773 + t644 * t638) * MDP(35) + (t409 * t499 + t590 * t414 + t737 * t476 + t644 * t634 - t638 * t773) * MDP(34) + (t459 * t499 - t474 * t776 - t599 * t737 - t672 * t679 + t684) * MDP(27) + (-t499 ^ 2 + t776 ^ 2) * MDP(23) - t776 * t733 + (-t459 * t776 - t474 * t499 + t599 * t738 + t679 * t735 + t653) * MDP(28) + (-t599 * t776 - t442) * MDP(24) + (-t553 ^ 2 + t770) * MDP(12) + (-t500 * t553 + t656 + 0.2e1 * t674 - t764) * MDP(18) + t479 * MDP(13) + t499 * t732 + (-t476 * t499 - t787) * MDP(32) - t801 + (-t759 - t513) * MDP(14) + (pkin(3) * t512 - qJ(4) * t513 + (t475 - t485) * t555 + (t473 - t718) * t553) * MDP(19) + (-pkin(3) * t447 + qJ(4) * t444 - t469 * t500 - t473 * t485 + t475 * t718) * MDP(21) + MDP(11) * t761 + (-t528 * t555 + t656) * MDP(16) + MDP(15) * t679 + (-t469 * t553 + t500 * t555 - 0.2e1 * t595 + 0.2e1 * t602 - t645) * MDP(20) + (t528 * t553 + t645) * MDP(17) + (t478 * t499 - t794) * MDP(31); (-t679 + t761) * MDP(18) + t479 * MDP(19) + (-t603 ^ 2 - t770) * MDP(20) + (t764 + t780) * MDP(21) + (-t599 ^ 2 * t635 - t555 * t776 - t639 * t679) * MDP(27) + (-t499 * t555 - t599 * t692 + t635 * t679) * MDP(28) + (-t639 * t414 + (-t555 * t638 - t634 * t692) * t783 + (t476 * t599 - t719 * t783 - t765) * t635) * MDP(34) + (-t639 * t413 + (t634 * t555 - t638 * t692) * t783 + (t478 * t599 + t720 * t783 - t750) * t635) * MDP(35); t442 * MDP(24) - t695 * MDP(25) + (t418 * t599 - t684) * MDP(27) + (t417 * t599 - t653) * MDP(28) + t794 * MDP(31) + t787 * MDP(32) + (-pkin(5) * t414 - t418 * t476 + t646 * t634 - t638 * t772) * MDP(34) + (-pkin(5) * t413 - t418 * t478 + t634 * t772 + t646 * t638) * MDP(35) + (-MDP(23) * t776 + MDP(24) * t599 + MDP(28) * t459 + t733) * t776 + ((-qJD(5) + t599) * MDP(25) - t459 * MDP(27) - t478 * MDP(31) + t476 * MDP(32) - t732 - t409 * MDP(34) + t410 * MDP(35) + MDP(23) * t499) * t499 + t801; -t476 ^ 2 * MDP(30) + (t748 + t762) * MDP(31) + t443 * MDP(33) + (t410 * t783 + t408) * MDP(34) + (t409 * t783 + t415 * t476) * MDP(35) + (MDP(29) * t476 + MDP(30) * t478 + MDP(32) * t783 - MDP(34) * t415) * t478 + (MDP(32) * t649 - MDP(34) * t721 + MDP(35) * t689) * t638 + (t649 * MDP(31) + (-qJD(6) * t599 - t442) * MDP(32) + t689 * MDP(34) + (-t411 + t721) * MDP(35)) * t634;];
tauc  = t1;
