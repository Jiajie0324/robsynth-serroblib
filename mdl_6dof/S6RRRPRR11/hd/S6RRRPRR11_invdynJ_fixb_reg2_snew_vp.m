% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 14:36
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR11_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 14:32:43
% EndTime: 2019-05-07 14:33:19
% DurationCPUTime: 16.41s
% Computational Cost: add. (83193->643), mult. (178928->892), div. (0->0), fcn. (142332->12), ass. (0->399)
t356 = cos(qJ(3));
t352 = sin(qJ(3));
t353 = sin(qJ(2));
t348 = sin(pkin(6));
t433 = qJD(1) * t348;
t414 = qJD(2) * t433;
t339 = t353 * t414;
t357 = cos(qJ(2));
t427 = qJDD(1) * t357;
t394 = t348 * t427 - t339;
t381 = -qJDD(3) + t394;
t349 = cos(pkin(6));
t405 = qJD(1) * t349 + qJD(2);
t432 = qJD(1) * t353;
t416 = t348 * t432;
t310 = t352 * t416 - t356 * t405;
t312 = t352 * t405 + t356 * t416;
t449 = t312 * t310;
t369 = t381 - t449;
t456 = t369 * t352;
t309 = t312 ^ 2;
t415 = t357 * t433;
t337 = -qJD(3) + t415;
t481 = t337 ^ 2;
t503 = -t309 - t481;
t208 = t356 * t503 + t456;
t546 = pkin(1) * t208;
t545 = pkin(2) * t208;
t544 = pkin(9) * t208;
t455 = t369 * t356;
t210 = -t352 * t503 + t455;
t543 = pkin(9) * t210;
t542 = t210 * t353;
t541 = t210 * t357;
t428 = qJDD(1) * t348;
t321 = t353 * t428 + t357 * t414;
t403 = qJDD(1) * t349 + qJDD(2);
t368 = -t356 * t321 - t352 * t403;
t267 = -t310 * qJD(3) - t368;
t450 = t310 * t337;
t498 = t450 + t267;
t407 = -t321 * t352 + t356 * t403;
t266 = qJD(3) * t312 - t407;
t298 = t312 * t337;
t504 = t266 - t298;
t183 = -t504 * t352 + t356 * t498;
t458 = t498 * t352;
t483 = t310 ^ 2;
t502 = t309 - t483;
t540 = t348 * (t353 * (t504 * t356 + t458) + t357 * t502) - t349 * t183;
t288 = t483 - t481;
t215 = t288 * t352 - t455;
t232 = t266 + t298;
t539 = t349 * t215 + t348 * (t357 * t232 + t353 * (t288 * t356 + t456));
t254 = t381 + t449;
t250 = t356 * t254;
t289 = -t309 + t481;
t499 = -t450 + t267;
t454 = t254 * t352;
t530 = t356 * t289 - t454;
t537 = t349 * t530 + (t353 * (-t289 * t352 - t250) - t357 * t499) * t348;
t497 = -t481 - t483;
t509 = t352 * t497 - t250;
t534 = pkin(2) * t509;
t508 = t356 * t497 + t454;
t533 = pkin(9) * t508;
t532 = pkin(9) * t509;
t531 = qJ(4) * t498;
t527 = pkin(1) * (t353 * t508 - t357 * t504);
t525 = pkin(8) * (t353 * t504 + t357 * t508) - pkin(1) * t509;
t501 = t309 + t483;
t524 = pkin(2) * t501;
t350 = sin(qJ(6));
t351 = sin(qJ(5));
t355 = cos(qJ(5));
t279 = t310 * t351 + t312 * t355;
t409 = -t355 * t266 + t267 * t351;
t190 = -qJD(5) * t279 - t409;
t189 = qJDD(6) - t190;
t330 = qJD(5) + t337;
t354 = cos(qJ(6));
t245 = t279 * t350 - t354 * t330;
t247 = t279 * t354 + t330 * t350;
t194 = t247 * t245;
t506 = t189 - t194;
t523 = t350 * t506;
t277 = -t355 * t310 + t312 * t351;
t218 = t279 * t277;
t314 = qJDD(5) + t381;
t505 = -t218 + t314;
t522 = t351 * t505;
t520 = t353 * t501;
t518 = t354 * t506;
t517 = t355 * t505;
t514 = t357 * t501;
t400 = -pkin(2) * t357 - pkin(9) * t353;
t320 = t400 * t433;
t401 = t405 ^ 2;
t358 = qJD(1) ^ 2;
t478 = sin(qJ(1));
t479 = cos(qJ(1));
t374 = g(1) * t479 + g(2) * t478;
t317 = -t358 * pkin(1) + pkin(8) * t428 - t374;
t373 = g(1) * t478 - g(2) * t479;
t440 = t348 * t358;
t367 = qJDD(1) * pkin(1) + pkin(8) * t440 + t373;
t365 = t349 * t367;
t408 = t317 * t353 - t357 * t365;
t224 = t348 * (g(3) * t357 + t320 * t432) - t403 * pkin(2) - t401 * pkin(9) + t408;
t511 = t266 * pkin(3) + t224 - t531;
t417 = t277 * qJD(5) - t351 * t266 - t355 * t267;
t448 = t330 * t277;
t510 = t417 + t448;
t212 = pkin(5) * t277 - pkin(11) * t279;
t482 = t330 ^ 2;
t431 = qJD(4) * t337;
t328 = -0.2e1 * t431;
t442 = t348 * t353;
t363 = -g(3) * t442 + t353 * t365;
t225 = t403 * pkin(9) - t401 * pkin(2) + (t320 * t433 + t317) * t357 + t363;
t387 = t405 * qJD(1);
t378 = t353 * t387;
t379 = t357 * t387;
t473 = t349 * g(3);
t359 = t339 * pkin(2) - t321 * pkin(9) - t473 + (-pkin(9) * t379 + (t378 - t427) * pkin(2) - t367) * t348;
t176 = t356 * t225 + t352 * t359;
t280 = pkin(3) * t310 - qJ(4) * t312;
t404 = t381 * qJ(4) + t310 * t280 - t176;
t393 = t328 - t404;
t146 = -pkin(3) * t481 + t393;
t399 = pkin(4) * t337 - pkin(10) * t312;
t119 = -pkin(4) * t483 + t266 * pkin(10) - t337 * t399 + t146;
t175 = t352 * t225 - t356 * t359;
t151 = t381 * pkin(3) - qJ(4) * t481 + t312 * t280 + qJDD(4) + t175;
t360 = t254 * pkin(4) - pkin(10) * t499 + t151;
t74 = t355 * t119 + t351 * t360;
t57 = -pkin(5) * t482 + pkin(11) * t314 - t212 * t277 + t74;
t362 = 0.2e1 * qJD(4) * t312 - t511;
t361 = pkin(3) * t298 + t362;
t495 = pkin(4) * t266 + pkin(10) * t483 - t312 * t399;
t70 = (t279 * t330 - t190) * pkin(5) + t510 * pkin(11) + t361 - t495;
t37 = t350 * t57 - t354 * t70;
t38 = t350 * t70 + t354 * t57;
t22 = t350 * t37 + t354 * t38;
t345 = t348 ^ 2;
t507 = t345 * (-t349 * t358 + t387);
t441 = t348 * t357;
t270 = g(3) * t441 + t408;
t271 = t357 * t317 + t363;
t500 = t353 * t270 + t357 * t271;
t494 = -pkin(3) * (t503 + t481) - qJ(4) * t369 - t404;
t73 = t119 * t351 - t355 * t360;
t56 = -t314 * pkin(5) - pkin(11) * t482 + t212 * t279 + t73;
t17 = t22 * t351 - t355 * t56;
t18 = t22 * t355 + t351 * t56;
t472 = -pkin(5) * t56 + pkin(11) * t22;
t480 = pkin(3) + pkin(4);
t493 = qJ(4) * t18 - t17 * t480 - t472;
t242 = t245 ^ 2;
t243 = t247 ^ 2;
t171 = t242 + t243;
t274 = qJD(6) + t277;
t410 = -t354 * t314 - t350 * t417;
t136 = t247 * (qJD(6) - t274) + t410;
t391 = -t314 * t350 + t354 * t417;
t154 = -qJD(6) * t245 - t391;
t206 = t274 * t245;
t140 = t154 + t206;
t87 = -t136 * t354 + t140 * t350;
t411 = pkin(5) * t171 + pkin(11) * t87 + t22;
t61 = t171 * t355 + t351 * t87;
t62 = -t171 * t351 + t355 * t87;
t492 = qJ(4) * t62 - t480 * t61 - t411;
t273 = t274 ^ 2;
t188 = -t243 - t273;
t148 = t189 + t194;
t465 = t148 * t354;
t105 = -t188 * t350 - t465;
t429 = qJD(6) + t274;
t141 = t245 * t429 + t391;
t53 = t350 * t56;
t425 = pkin(5) * t141 + pkin(11) * t105 + t53;
t75 = t105 * t351 + t141 * t355;
t76 = t105 * t355 - t141 * t351;
t491 = qJ(4) * t76 - t480 * t75 - t425;
t181 = -t273 - t242;
t100 = t181 * t354 - t523;
t137 = -t247 * t429 - t410;
t54 = t354 * t56;
t426 = pkin(5) * t137 + pkin(11) * t100 - t54;
t71 = t100 * t351 + t137 * t355;
t72 = t100 * t355 - t137 * t351;
t490 = qJ(4) * t72 - t480 * t71 - t426;
t42 = t351 * t74 - t355 * t73;
t43 = t351 * t73 + t355 * t74;
t489 = qJ(4) * t43 - t42 * t480;
t168 = t417 - t448;
t372 = (-qJD(5) + t330) * t279 - t409;
t109 = t168 * t355 + t351 * t372;
t111 = -t168 * t351 + t355 * t372;
t488 = qJ(4) * t111 - t109 * t480;
t275 = t277 ^ 2;
t207 = -t482 - t275;
t158 = t207 * t351 + t517;
t159 = t207 * t355 - t522;
t487 = qJ(4) * t159 - t158 * t480 + t73;
t276 = t279 ^ 2;
t239 = -t276 - t482;
t204 = t218 + t314;
t464 = t204 * t351;
t173 = t239 * t355 - t464;
t463 = t204 * t355;
t174 = -t239 * t351 - t463;
t486 = qJ(4) * t174 - t173 * t480 + t74;
t445 = t337 * t352;
t398 = -t356 * t266 - t310 * t445;
t418 = t357 * t449;
t444 = t337 * t356;
t422 = t310 * t444;
t485 = t349 * t398 + (t353 * (t266 * t352 - t422) + t418) * t348;
t287 = t312 * t445;
t375 = (t310 * t352 + t312 * t356) * t337;
t484 = t349 * t375 + t381 * t441 + (-t287 + t422) * t442;
t477 = pkin(3) * t356;
t475 = pkin(8) * t348;
t469 = qJ(4) * t356;
t152 = (-pkin(3) * t337 - 0.2e1 * qJD(4)) * t312 + t511;
t120 = t152 + t495;
t468 = t120 * t351;
t467 = t120 * t355;
t466 = t148 * t350;
t462 = t224 * t352;
t461 = t224 * t356;
t457 = t499 * t352;
t453 = t274 * t350;
t452 = t274 * t354;
t447 = t330 * t351;
t446 = t330 * t355;
t443 = t345 * t358;
t335 = t357 * t353 * t443;
t319 = t335 + t403;
t438 = t353 * t319;
t318 = -t335 + t403;
t435 = t357 * t318;
t424 = t351 * t194;
t423 = t355 * t194;
t346 = t353 ^ 2;
t421 = t346 * t443;
t347 = t357 ^ 2;
t420 = t347 * t443;
t419 = t357 * t218;
t413 = -qJ(4) * t352 - pkin(2);
t412 = pkin(5) * t351 + qJ(4);
t126 = t175 * t352 + t356 * t176;
t406 = pkin(5) * t355 + t480;
t396 = -pkin(3) * t151 + qJ(4) * t146;
t395 = -pkin(3) * t499 - qJ(4) * t232;
t21 = t350 * t38 - t354 * t37;
t392 = t175 * t356 - t176 * t352;
t389 = -pkin(1) + t400;
t380 = qJD(6) * t247 + t410;
t228 = t267 * t352 - t312 * t444;
t377 = -t348 * t418 + (t267 * t356 + t287) * t442 + t349 * t228;
t364 = -pkin(3) * t254 + qJ(4) * t497 - t151;
t325 = t348 * t379;
t324 = t348 * t378;
t323 = (t346 - t347) * t443;
t322 = -t401 - t420;
t305 = -t421 - t401;
t299 = t348 * t367 + t473;
t294 = -t324 + t394;
t293 = t324 + t394;
t292 = -t325 + t321;
t252 = -t276 + t482;
t251 = t275 - t482;
t237 = (qJD(3) - t337) * t310 + t368;
t233 = (-qJD(3) - t337) * t312 + t407;
t229 = t356 * t499;
t217 = t276 - t275;
t202 = -t243 + t273;
t201 = t242 - t273;
t196 = (-t277 * t355 + t279 * t351) * t330;
t195 = (t277 * t351 + t279 * t355) * t330;
t193 = t243 - t242;
t192 = -t275 - t276;
t187 = -t232 * t356 + t457;
t186 = t233 * t356 + t457;
t185 = -t232 * t352 - t229;
t180 = t251 * t355 - t464;
t179 = -t252 * t351 + t517;
t178 = -t251 * t351 - t463;
t177 = -t252 * t355 - t522;
t164 = (qJD(5) + t330) * t279 + t409;
t163 = -t279 * t447 - t355 * t417;
t162 = -t279 * t446 + t351 * t417;
t161 = -t190 * t351 + t277 * t446;
t160 = -t190 * t355 - t277 * t447;
t157 = (-t245 * t354 + t247 * t350) * t274;
t156 = (-t245 * t350 - t247 * t354) * t274;
t155 = t195 * t356 + t196 * t352;
t150 = pkin(2) * t237 + t462 + t543;
t145 = -pkin(2) * t504 - t461 + t533;
t144 = qJ(4) * t501 + t151;
t143 = (t501 - t481) * pkin(3) + t393;
t142 = (-t504 + t298) * pkin(3) + t362;
t139 = t154 - t206;
t135 = t361 + t531;
t134 = t178 * t356 + t180 * t352;
t133 = t177 * t356 + t179 * t352;
t130 = t154 * t354 - t247 * t453;
t129 = t154 * t350 + t247 * t452;
t128 = t245 * t452 + t350 * t380;
t127 = -t245 * t453 + t354 * t380;
t124 = t173 * t352 + t174 * t356;
t123 = -t173 * t356 + t174 * t352;
t122 = t157 * t355 + t189 * t351;
t121 = -t157 * t351 + t189 * t355;
t118 = t201 * t354 - t466;
t117 = -t202 * t350 + t518;
t116 = t201 * t350 + t465;
t115 = t202 * t354 + t523;
t110 = -t164 * t355 + t351 * t510;
t108 = t164 * t351 + t355 * t510;
t107 = t162 * t356 + t163 * t352;
t106 = t160 * t356 + t161 * t352;
t104 = t188 * t354 - t466;
t103 = t158 * t352 + t159 * t356;
t102 = -t158 * t356 + t159 * t352;
t99 = t181 * t350 + t518;
t98 = -pkin(2) * t224 + pkin(9) * t126;
t96 = t130 * t355 + t424;
t95 = t128 * t355 - t424;
t94 = -t130 * t351 + t423;
t93 = -t128 * t351 - t423;
t92 = t146 * t356 + t151 * t352;
t91 = t146 * t352 - t151 * t356;
t90 = pkin(9) * t186 + t126 + t524;
t89 = t142 * t356 + t413 * t504 + t533;
t88 = -t543 + t135 * t352 + (pkin(2) + t477) * t498;
t86 = t137 * t354 - t139 * t350;
t85 = -t136 * t350 - t140 * t354;
t84 = t137 * t350 + t139 * t354;
t82 = t118 * t355 - t136 * t351;
t81 = t117 * t355 + t140 * t351;
t80 = -t118 * t351 - t136 * t355;
t79 = -t117 * t351 + t140 * t355;
t78 = t121 * t356 + t122 * t352;
t77 = -pkin(10) * t173 - qJ(4) * t510 - t467;
t68 = -pkin(10) * t158 + qJ(4) * t164 - t468;
t67 = t193 * t351 + t355 * t86;
t66 = t193 * t355 - t351 * t86;
t65 = t109 * t352 + t111 * t356;
t64 = -t109 * t356 + t111 * t352;
t63 = t108 * t356 + t110 * t352;
t60 = pkin(9) * t187 + t143 * t356 + t144 * t352 + t524;
t59 = t352 * t96 + t356 * t94;
t58 = t352 * t95 + t356 * t93;
t52 = -pkin(10) * t174 - t480 * t510 + t468;
t51 = -pkin(10) * t159 + t164 * t480 - t467;
t50 = pkin(9) * t92 + (t413 - t477) * t152;
t49 = -pkin(11) * t104 + t54;
t48 = -pkin(11) * t99 + t53;
t47 = t352 * t82 + t356 * t80;
t46 = t352 * t81 + t356 * t79;
t45 = t352 * t75 + t356 * t76;
t44 = t352 * t76 - t356 * t75;
t41 = t352 * t71 + t356 * t72;
t40 = t352 * t72 - t356 * t71;
t39 = t352 * t67 + t356 * t66;
t36 = t352 * t61 + t356 * t62;
t35 = t352 * t62 - t356 * t61;
t32 = -pkin(10) * t42 - qJ(4) * t120;
t31 = -pkin(10) * t109 + qJ(4) * t192 - t42;
t30 = -pkin(5) * t104 + t38;
t29 = -pkin(5) * t99 + t37;
t28 = -pkin(10) * t111 + t192 * t480 - t43;
t27 = -pkin(2) * t510 + pkin(9) * t124 + t352 * t77 + t356 * t52;
t26 = -pkin(10) * t43 - t120 * t480;
t25 = pkin(2) * t164 + pkin(9) * t103 + t352 * t68 + t356 * t51;
t24 = t352 * t42 + t356 * t43;
t23 = t352 * t43 - t356 * t42;
t19 = -pkin(11) * t85 - t21;
t16 = -pkin(10) * t75 + qJ(4) * t104 - t30 * t351 + t355 * t49;
t15 = -pkin(10) * t71 + qJ(4) * t99 - t29 * t351 + t355 * t48;
t14 = -pkin(10) * t76 + t104 * t480 - t30 * t355 - t351 * t49;
t13 = -pkin(10) * t72 - t29 * t355 - t351 * t48 + t480 * t99;
t12 = pkin(2) * t192 + pkin(9) * t65 + t28 * t356 + t31 * t352;
t11 = -pkin(10) * t61 + t19 * t355 + t412 * t85;
t10 = -pkin(10) * t62 - t19 * t351 + t406 * t85;
t9 = -pkin(2) * t120 + pkin(9) * t24 + t26 * t356 + t32 * t352;
t8 = t17 * t352 + t18 * t356;
t7 = -t17 * t356 + t18 * t352;
t6 = pkin(2) * t104 + pkin(9) * t45 + t14 * t356 + t16 * t352;
t5 = pkin(2) * t99 + pkin(9) * t41 + t13 * t356 + t15 * t352;
t4 = -pkin(10) * t17 + (-pkin(11) * t355 + t412) * t21;
t3 = pkin(2) * t85 + pkin(9) * t36 + t10 * t356 + t11 * t352;
t2 = -pkin(10) * t18 + (pkin(11) * t351 + t406) * t21;
t1 = pkin(2) * t21 + pkin(9) * t8 + t2 * t356 + t352 * t4;
t20 = [0, 0, 0, 0, 0, qJDD(1), t373, t374, 0, 0, (t348 * t321 + t357 * t507) * t353, t349 * t323 + (t353 * t294 + t357 * (t325 + t321)) * t348, t349 * t292 + (t438 + t357 * (t401 - t421)) * t348, (t348 * t394 - t353 * t507) * t357, t349 * t293 + (t353 * (-t401 + t420) + t435) * t348, t349 * t403, (-t270 + pkin(1) * (t319 * t357 + t322 * t353)) * t349 + (t357 * t299 + pkin(1) * t294 + pkin(8) * (t322 * t357 - t438)) * t348, -t299 * t442 - t349 * t271 + pkin(1) * (-t348 * (t405 * t415 + t321) + (t305 * t357 - t318 * t353) * t349) + (-t305 * t353 - t435) * t475, pkin(1) * ((-t292 * t357 + t293 * t353) * t349 - (-t346 - t347) * t345 * t440) + (t292 * t353 + t293 * t357) * t475 + t500 * t348, pkin(1) * (t299 * t348 + (-t270 * t357 + t271 * t353) * t349) + t500 * t475, t377, -t540, t537, t485, t539, t484, (t145 + t527) * t349 + (t353 * (t462 - t532) + t357 * (t175 - t534) + t525) * t348, (t150 + pkin(1) * (t237 * t357 + t542)) * t349 + (t353 * (t461 - t544) + t357 * (t176 - t545) - t546 + pkin(8) * (-t237 * t353 + t541)) * t348, (t90 + pkin(1) * (t186 * t353 + t514)) * t349 + (t353 * t392 + pkin(8) * (t186 * t357 - t520) + t389 * (t233 * t352 - t229)) * t348, (t98 + pkin(1) * (t126 * t353 - t224 * t357)) * t349 + (pkin(8) * (t126 * t357 + t224 * t353) - t389 * t392) * t348, t377, t537, t540, t484, -t539, t485, (t89 + t527) * t349 + (t353 * (-t142 * t352 - t469 * t504 - t532) + t357 * (-t364 - t534) + t525) * t348, (t60 + pkin(1) * (t187 * t353 + t514)) * t349 + (t353 * (-pkin(9) * t185 - t143 * t352 + t144 * t356) + t357 * (-pkin(2) * t185 - t395) - pkin(1) * t185 + pkin(8) * (t187 * t357 - t520)) * t348, (t88 + pkin(1) * (t357 * t498 - t542)) * t349 + (t353 * (-pkin(3) * t458 + t135 * t356 + t544) + t357 * (0.2e1 * t431 - t494 + t545) + t546 + pkin(8) * (-t353 * t498 - t541)) * t348, (t50 + pkin(1) * (-t152 * t357 + t353 * t92)) * t349 + (t353 * (-pkin(9) * t91 + (pkin(3) * t352 - t469) * t152) + t357 * (-pkin(2) * t91 - t396) - pkin(1) * t91 + pkin(8) * (t152 * t353 + t357 * t92)) * t348, t349 * t107 + (t353 * (-t162 * t352 + t163 * t356) + t419) * t348, t349 * t63 + (t353 * (-t108 * t352 + t110 * t356) + t357 * t217) * t348, t349 * t133 + (t353 * (-t177 * t352 + t179 * t356) - t357 * t168) * t348, t349 * t106 + (t353 * (-t160 * t352 + t161 * t356) - t419) * t348, t349 * t134 + (t353 * (-t178 * t352 + t180 * t356) + t357 * t372) * t348, t349 * t155 + (t353 * (-t195 * t352 + t196 * t356) + t357 * t314) * t348, (t25 + pkin(1) * (t103 * t353 + t164 * t357)) * t349 + (t353 * (-pkin(9) * t102 - t352 * t51 + t356 * t68) + t357 * (-pkin(2) * t102 - t487) - pkin(1) * t102 + pkin(8) * (t103 * t357 - t164 * t353)) * t348, (t27 + pkin(1) * (t124 * t353 - t357 * t510)) * t349 + (t353 * (-pkin(9) * t123 - t352 * t52 + t356 * t77) + t357 * (-pkin(2) * t123 - t486) - pkin(1) * t123 + pkin(8) * (t124 * t357 + t353 * t510)) * t348, (t12 + pkin(1) * (t192 * t357 + t353 * t65)) * t349 + (t353 * (-pkin(9) * t64 - t28 * t352 + t31 * t356) + t357 * (-pkin(2) * t64 - t488) - pkin(1) * t64 + pkin(8) * (-t192 * t353 + t357 * t65)) * t348, (t9 + pkin(1) * (-t120 * t357 + t24 * t353)) * t349 + (t353 * (-pkin(9) * t23 - t26 * t352 + t32 * t356) + t357 * (-pkin(2) * t23 - t489) - pkin(1) * t23 + pkin(8) * (t120 * t353 + t24 * t357)) * t348, t349 * t59 + (t353 * (-t352 * t94 + t356 * t96) + t357 * t129) * t348, t349 * t39 + (t353 * (-t352 * t66 + t356 * t67) + t357 * t84) * t348, t349 * t46 + (t353 * (-t352 * t79 + t356 * t81) + t357 * t115) * t348, t349 * t58 + (t353 * (-t352 * t93 + t356 * t95) - t357 * t127) * t348, t349 * t47 + (t353 * (-t352 * t80 + t356 * t82) + t357 * t116) * t348, t349 * t78 + (t353 * (-t121 * t352 + t122 * t356) + t357 * t156) * t348, (t5 + pkin(1) * (t353 * t41 + t357 * t99)) * t349 + (t353 * (-pkin(9) * t40 - t13 * t352 + t15 * t356) + t357 * (-pkin(2) * t40 - t490) - pkin(1) * t40 + pkin(8) * (-t353 * t99 + t357 * t41)) * t348, (t6 + pkin(1) * (t104 * t357 + t353 * t45)) * t349 + (t353 * (-pkin(9) * t44 - t14 * t352 + t16 * t356) + t357 * (-pkin(2) * t44 - t491) - pkin(1) * t44 + pkin(8) * (-t104 * t353 + t357 * t45)) * t348, (t3 + pkin(1) * (t353 * t36 + t357 * t85)) * t349 + (t353 * (-pkin(9) * t35 - t10 * t352 + t11 * t356) + t357 * (-pkin(2) * t35 - t492) - pkin(1) * t35 + pkin(8) * (-t353 * t85 + t357 * t36)) * t348, (t1 + pkin(1) * (t21 * t357 + t353 * t8)) * t349 + (t353 * (-pkin(9) * t7 - t2 * t352 + t356 * t4) + t357 * (-pkin(2) * t7 - t493) - pkin(1) * t7 + pkin(8) * (-t21 * t353 + t357 * t8)) * t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t335, t323, t292, t335, t293, t403, -t270, -t271, 0, 0, t228, t183, t530, t398, t215, t375, t145, t150, t90, t98, t228, t530, -t183, t375, -t215, t398, t89, t60, t88, t50, t107, t63, t133, t106, t134, t155, t25, t27, t12, t9, t59, t39, t46, t58, t47, t78, t5, t6, t3, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t502, t499, -t449, -t232, -t381, -t175, -t176, 0, 0, t449, t499, -t502, -t381, t232, -t449, t364, t395, t328 + t494, t396, -t218, -t217, t168, t218, -t372, -t314, t487, t486, t488, t489, -t129, -t84, -t115, t127, -t116, -t156, t490, t491, t492, t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t499, t503, t151, 0, 0, 0, 0, 0, 0, t158, t173, t109, t42, 0, 0, 0, 0, 0, 0, t71, t75, t61, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, t217, -t168, -t218, t372, t314, -t73, -t74, 0, 0, t129, t84, t115, -t127, t116, t156, t426, t425, t411, t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t193, t140, -t194, -t136, t189, -t37, -t38, 0, 0;];
tauJ_reg  = t20;
