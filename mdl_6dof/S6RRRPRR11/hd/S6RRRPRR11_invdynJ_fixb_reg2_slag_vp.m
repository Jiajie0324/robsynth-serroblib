% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 19:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 19:34:22
% EndTime: 2019-03-09 19:35:05
% DurationCPUTime: 24.70s
% Computational Cost: add. (24363->954), mult. (58559->1220), div. (0->0), fcn. (46409->12), ass. (0->408)
t361 = cos(qJ(2));
t355 = sin(pkin(6));
t595 = cos(qJ(3));
t512 = t355 * t595;
t462 = qJD(1) * t512;
t438 = t361 * t462;
t495 = qJD(3) * t595;
t381 = t438 - t495;
t527 = t595 * pkin(9);
t312 = -pkin(10) * t595 + t527;
t359 = sin(qJ(2));
t575 = cos(pkin(6));
t486 = t575 * qJD(1);
t463 = pkin(1) * t486;
t544 = qJD(1) * t355;
t500 = t359 * t544;
t256 = -pkin(8) * t500 + t361 * t463;
t454 = pkin(2) * t359 - pkin(9) * t361;
t257 = t454 * t544;
t358 = sin(qJ(3));
t445 = t358 * t256 - t257 * t595;
t507 = t361 * t595;
t598 = pkin(3) + pkin(4);
t646 = (-pkin(10) * t507 - t359 * t598) * t544 + t445 - qJD(3) * t312;
t163 = t595 * t256 + t358 * t257;
t138 = qJ(4) * t500 + t163;
t499 = t361 * t544;
t541 = qJD(3) * t358;
t597 = pkin(9) - pkin(10);
t645 = -pkin(10) * t358 * t499 - t597 * t541 - t138;
t457 = t575 * t595;
t557 = t355 * t359;
t523 = t358 * t557;
t270 = -t457 + t523;
t468 = t359 * t512;
t271 = t358 * t575 + t468;
t357 = sin(qJ(5));
t594 = cos(qJ(5));
t419 = t270 * t594 - t271 * t357;
t593 = sin(qJ(1));
t456 = t575 * t593;
t596 = cos(qJ(1));
t276 = -t359 * t456 + t361 * t596;
t511 = t355 * t593;
t199 = t276 * t358 - t511 * t595;
t200 = t276 * t595 + t358 * t511;
t420 = -t199 * t594 + t200 * t357;
t458 = t575 * t596;
t274 = t359 * t458 + t361 * t593;
t195 = t274 * t358 + t512 * t596;
t513 = t355 * t596;
t196 = t274 * t595 - t358 * t513;
t612 = t195 * t594 - t196 * t357;
t410 = -g(1) * t420 + g(2) * t612 + g(3) * t419;
t533 = qJD(1) * qJD(2);
t492 = t359 * t533;
t531 = qJDD(1) * t361;
t414 = t492 - t531;
t251 = t355 * t414 + qJDD(3);
t373 = qJDD(5) - t251;
t436 = t486 + qJD(2);
t394 = t595 * t436;
t477 = t575 * qJDD(1);
t430 = t477 + qJDD(2);
t465 = qJD(3) * t523;
t131 = qJD(1) * t465 - qJD(2) * t438 - qJD(3) * t394 - qJDD(1) * t468 - t358 * t430;
t432 = qJD(2) * t463;
t489 = t355 * t531;
t623 = pkin(8) * t355 * t533 - pkin(1) * t477;
t386 = -pkin(8) * t489 + t623 * t359 - t361 * t432;
t151 = pkin(9) * t430 - t386;
t422 = t454 * qJD(2);
t433 = -pkin(2) * t361 - pkin(9) * t359 - pkin(1);
t156 = (qJD(1) * t422 + qJDD(1) * t433) * t355;
t518 = pkin(1) * t575;
t339 = t359 * t518;
t556 = t355 * t361;
t548 = pkin(8) * t556 + t339;
t249 = t575 * pkin(9) + t548;
t205 = qJD(2) * pkin(9) + qJD(1) * t249;
t217 = t433 * t544;
t471 = t358 * t151 - t595 * t156 + t205 * t495 + t217 * t541;
t434 = qJDD(4) + t471;
t30 = pkin(10) * t131 - t251 * t598 + t434;
t413 = t358 * t436;
t542 = qJD(2) * t361;
t497 = t358 * t542;
t532 = qJDD(1) * t359;
t132 = qJD(3) * t413 + t355 * (qJD(1) * (t359 * t495 + t497) + t358 * t532) - t595 * t430;
t241 = t251 * qJ(4);
t307 = -qJD(3) + t499;
t290 = t307 * qJD(4);
t56 = t595 * t151 + t358 * t156 - t205 * t541 + t217 * t495;
t42 = t241 - t290 + t56;
t33 = pkin(10) * t132 + t42;
t494 = qJD(5) * t594;
t540 = qJD(5) * t357;
t129 = -t358 * t205 + t595 * t217;
t231 = t359 * t462 + t413;
t95 = pkin(10) * t231 + t129;
t632 = qJD(4) - t95;
t78 = t307 * t598 + t632;
t292 = t307 * qJ(4);
t130 = t205 * t595 + t358 * t217;
t229 = t358 * t500 - t394;
t387 = t229 * pkin(10) + t130;
t84 = -t292 + t387;
t487 = -t594 * t30 + t357 * t33 + t84 * t494 + t78 * t540;
t6 = -pkin(5) * t373 + t487;
t396 = -t410 - t6;
t464 = t594 * t595;
t401 = -t357 * t358 - t464;
t219 = t401 * t556;
t553 = -qJD(1) * t219 - qJD(3) * t464 - qJD(5) * t401 - t357 * t541;
t501 = t594 * t358;
t441 = t501 * t556;
t509 = t357 * t595;
t552 = qJD(1) * t441 - qJD(3) * t501 - qJD(5) * t509 - t357 * t381 + t358 * t494;
t644 = qJ(4) * t381 - t358 * qJD(4);
t115 = t195 * t357 + t196 * t594;
t121 = t199 * t357 + t200 * t594;
t173 = t270 * t357 + t271 * t594;
t411 = g(1) * t121 + g(2) * t115 + g(3) * t173;
t423 = -t357 * t30 - t594 * t33 - t78 * t494 + t540 * t84;
t605 = -t594 * t229 + t357 * t231;
t204 = -t436 * pkin(2) - t256;
t101 = t229 * pkin(3) - t231 * qJ(4) + t204;
t83 = -pkin(4) * t229 - t101;
t643 = t605 * t83 + t411 + t423;
t148 = t357 * t229 + t231 * t594;
t642 = -t83 * t148 - t410 - t487;
t356 = sin(qJ(6));
t360 = cos(qJ(6));
t427 = qJD(5) + t307;
t110 = t360 * t148 + t356 * t427;
t405 = t131 * t594 - t357 * t132 + t231 * t540;
t369 = -t229 * t494 + t405;
t399 = t360 * t427;
t537 = qJD(6) * t356;
t24 = -qJD(6) * t399 + t148 * t537 - t356 * t373 + t360 * t369;
t584 = t24 * t356;
t622 = qJD(6) + t605;
t633 = t622 * t360;
t641 = t110 * t633 - t584;
t273 = t359 * t593 - t361 * t458;
t640 = t115 * t356 + t273 * t360;
t639 = t115 * t360 - t273 * t356;
t482 = -t357 * t131 - t594 * t132;
t49 = qJD(5) * t148 + t482;
t46 = qJDD(6) + t49;
t582 = t356 * t46;
t638 = -t110 * t148 + t622 * t633 + t582;
t539 = qJD(6) * t110;
t25 = -t356 * t369 - t360 * t373 + t539;
t570 = t110 * t622;
t108 = t148 * t356 - t399;
t573 = t108 * t622;
t637 = (-t25 - t570) * t356 + (-t24 - t573) * t360;
t39 = -t357 * t84 + t594 * t78;
t37 = -pkin(5) * t427 - t39;
t636 = t37 * t622;
t311 = t597 * t358;
t580 = t311 * t494 - t312 * t540 - t357 * t646 + t645 * t594;
t526 = t598 * t358;
t551 = -qJD(3) * t526 - (-t339 + (-pkin(8) - t526) * t556) * qJD(1) - t644;
t631 = t427 ^ 2;
t490 = t355 * t532;
t470 = pkin(8) * t490 + t359 * t432 + t623 * t361;
t152 = -t430 * pkin(2) + t470;
t43 = t132 * pkin(3) + t131 * qJ(4) - t231 * qJD(4) + t152;
t34 = -t132 * pkin(4) - t43;
t10 = t49 * pkin(5) + pkin(11) * t369 + t34;
t40 = t357 * t78 + t594 * t84;
t38 = pkin(11) * t427 + t40;
t41 = pkin(5) * t605 - pkin(11) * t148 + t83;
t443 = t356 * t38 - t360 * t41;
t5 = pkin(11) * t373 - t423;
t1 = -t443 * qJD(6) + t356 * t10 + t360 * t5;
t630 = t443 * t622 + t1;
t629 = pkin(5) * t552 + pkin(11) * t553 + t551;
t16 = t356 * t41 + t360 * t38;
t628 = t148 * t16;
t627 = pkin(11) * t500 + t580;
t626 = t622 * t148;
t625 = t148 * t443;
t566 = t148 * t605;
t563 = t231 * t307;
t624 = t132 + t563;
t621 = t148 ^ 2 - t605 ^ 2;
t581 = t360 * t46;
t618 = t108 * t148 + t581;
t616 = t148 * t307 - t482;
t615 = t131 * t595 - t381 * t229 + (t132 - t563) * t358;
t614 = t427 * t605 - t369;
t79 = pkin(5) * t148 + pkin(11) * t605;
t613 = -pkin(5) * t419 - pkin(11) * t173;
t352 = t355 ^ 2;
t611 = 0.2e1 * t352;
t2 = -qJD(6) * t16 + t360 * t10 - t356 * t5;
t609 = -t16 * t622 - t2;
t608 = t39 * t427;
t210 = t357 * t311 + t312 * t594;
t578 = qJD(5) * t210 + t645 * t357 + t594 * t646;
t295 = -t357 * qJ(4) - t594 * t598;
t253 = qJD(4) * t594 + qJD(5) * t295;
t53 = t357 * t387 + t594 * t95;
t577 = t253 - t53;
t296 = t594 * qJ(4) - t357 * t598;
t576 = qJD(5) * t296 + t632 * t357 + t387 * t594;
t341 = g(3) * t557;
t516 = t132 * t595;
t607 = -pkin(9) * t516 - t341;
t193 = qJD(3) * t271 + t355 * t497;
t467 = t355 * t507;
t194 = qJD(2) * t467 + qJD(3) * t457 - t465;
t261 = t548 * qJD(2);
t81 = t193 * pkin(3) - t194 * qJ(4) - t271 * qJD(4) + t261;
t483 = -t270 * pkin(3) + t271 * qJ(4);
t604 = (qJDD(2) + 0.2e1 * t477) * t355;
t284 = t501 - t509;
t278 = -pkin(8) * t557 + t361 * t518;
t260 = qJD(2) * t278;
t535 = qJD(4) - t129;
t543 = qJD(2) * t359;
t602 = t355 * (-t132 * t361 + t229 * t543) - t193 * t307 + t251 * t270;
t503 = t595 * t251;
t554 = t358 * t361;
t601 = -t307 * t541 + (-t229 * t359 + t307 * t554) * t544 - t503;
t549 = pkin(2) * t556 + pkin(9) * t557;
t250 = -pkin(1) * t355 - t549;
t155 = t595 * t249 + t358 * t250;
t525 = qJ(4) * t556;
t134 = -t525 + t155;
t103 = pkin(10) * t270 + t134;
t154 = -t358 * t249 + t250 * t595;
t135 = pkin(3) * t556 - t154;
t96 = pkin(4) * t556 - t271 * pkin(10) + t135;
t587 = t594 * t103 + t357 * t96;
t258 = t355 * t422;
t415 = t249 * t495 + t250 * t541 - t258 * t595 + t358 * t260;
t498 = t355 * t543;
t67 = -t194 * pkin(10) - t498 * t598 + t415;
t85 = -t249 * t541 + t250 * t495 + t358 * t258 + t595 * t260;
t74 = qJ(4) * t498 - qJD(4) * t556 + t85;
t68 = pkin(10) * t193 + t74;
t14 = -qJD(5) * t587 - t357 * t68 + t594 * t67;
t599 = t231 ^ 2;
t363 = qJD(1) ^ 2;
t592 = pkin(3) * t251;
t275 = t359 * t596 + t361 * t456;
t591 = pkin(9) * t275;
t263 = t270 * pkin(4);
t590 = t273 * pkin(9);
t346 = t358 * qJ(4);
t301 = -t595 * pkin(3) - pkin(2) - t346;
t280 = t595 * pkin(4) - t301;
t164 = -pkin(5) * t401 - pkin(11) * t284 + t280;
t97 = t164 * t360 - t210 * t356;
t589 = qJD(6) * t97 + t629 * t356 + t627 * t360;
t98 = t164 * t356 + t210 * t360;
t588 = -qJD(6) * t98 - t627 * t356 + t629 * t360;
t583 = t25 * t360;
t579 = -pkin(5) * t500 + t578;
t107 = -t292 + t130;
t574 = t107 * t307;
t572 = t108 * t356;
t571 = t110 * t108;
t569 = t110 * t360;
t568 = t130 * t307;
t567 = t622 * t356;
t565 = t229 * t307;
t564 = t231 * t229;
t560 = t284 * t356;
t559 = t284 * t360;
t558 = t352 * t363;
t153 = t231 * pkin(3) + t229 * qJ(4);
t550 = pkin(3) * t541 - (t339 + (pkin(3) * t358 + pkin(8)) * t556) * qJD(1) + t644;
t546 = t596 * pkin(1) + pkin(8) * t511;
t353 = t359 ^ 2;
t354 = t361 ^ 2;
t545 = t353 - t354;
t538 = qJD(6) * t622;
t536 = qJD(6) * t360;
t529 = qJD(3) - qJD(5);
t528 = qJDD(3) - qJDD(5);
t524 = t361 * t558;
t265 = t273 * pkin(2);
t515 = t273 * t595;
t521 = -pkin(3) * t515 - t273 * t346 - t265;
t267 = t275 * pkin(2);
t514 = t275 * t595;
t520 = -pkin(3) * t514 - t275 * t346 - t267;
t519 = t276 * pkin(2) + t546;
t248 = -t575 * pkin(2) - t278;
t510 = t356 * t594;
t508 = t360 * t594;
t105 = pkin(3) * t307 + t535;
t505 = t595 * t105;
t504 = t595 * t129;
t502 = t594 * t307;
t496 = t229 ^ 2 - t599;
t493 = pkin(1) * t611;
t491 = t361 * t533;
t485 = -t195 * pkin(3) + qJ(4) * t196;
t484 = -t199 * pkin(3) + qJ(4) * t200;
t481 = t553 * t356 + t360 * t500;
t480 = -t356 * t500 + t553 * t360;
t476 = t231 * t527;
t475 = pkin(9) * t503;
t474 = g(3) * t507;
t472 = t359 * t524;
t469 = pkin(3) * t467 + t358 * t525 + t549;
t466 = t307 * t500;
t461 = t359 * t491;
t106 = -pkin(4) * t231 - t153;
t459 = -pkin(1) * t593 + pkin(8) * t513;
t455 = t355 * t363 * t575;
t453 = g(1) * t612 + g(2) * t420;
t452 = g(1) * t195 - g(2) * t199;
t451 = g(1) * t196 - g(2) * t200;
t450 = g(1) * t273 - g(2) * t275;
t449 = -g(1) * t276 - g(2) * t274;
t448 = -t195 * pkin(4) + t485;
t447 = -t199 * pkin(4) + t484;
t446 = -t263 + t483;
t55 = pkin(11) * t556 + t587;
t133 = t248 - t483;
t102 = -t133 - t263;
t60 = t102 + t613;
t21 = t356 * t60 + t360 * t55;
t20 = -t356 * t55 + t360 * t60;
t442 = (qJD(3) * t229 - t131) * pkin(9);
t440 = t132 * t270 + t193 * t229;
t435 = 0.2e1 * t486 + qJD(2);
t431 = -t274 * pkin(2) + t459;
t429 = t341 - t449;
t58 = -t357 * t103 + t594 * t96;
t425 = -t173 * t356 + t360 * t556;
t137 = t173 * t360 + t356 * t556;
t421 = -pkin(11) * t46 + t636;
t418 = t357 * t148 - t594 * t605;
t13 = -t103 * t540 + t357 * t67 + t96 * t494 + t594 * t68;
t416 = t200 * pkin(3) + qJ(4) * t199 + t519;
t412 = g(1) * t596 + g(2) * t593;
t158 = t284 * t273;
t160 = t284 * t275;
t218 = t357 * t467 - t441;
t407 = -g(1) * t160 - g(2) * t158 - g(3) * t218;
t406 = -g(1) * t199 - g(2) * t195 - g(3) * t270;
t404 = t284 * t536 - t481;
t403 = -t284 * t537 - t480;
t400 = -t358 * t251 + t307 * t495;
t398 = -pkin(4) * t515 + t274 * t597 + t521;
t397 = -pkin(4) * t514 + t276 * t597 + t520;
t395 = g(1) * t275 + g(2) * t273 - g(3) * t556;
t392 = t42 * t595 + t449;
t391 = t56 * t595 + t449;
t390 = pkin(4) * t467 - pkin(10) * t557 + t469;
t384 = -pkin(3) * t196 - qJ(4) * t195 + t431;
t287 = -pkin(11) + t296;
t383 = -t253 * t622 - t287 * t46 - t636;
t379 = t131 * t270 - t132 * t271 - t193 * t231 - t194 * t229;
t378 = -t406 - t471;
t377 = pkin(11) * t538 - t396;
t376 = t200 * pkin(4) + t275 * t597 + t416;
t375 = -pkin(9) * qJD(3) * t307 - t395;
t374 = t287 * t538 + t396;
t371 = -t358 * t565 - t516;
t370 = t1 * t360 - t2 * t356 + (-t16 * t356 + t360 * t443) * qJD(6);
t368 = -pkin(4) * t196 - t273 * t597 + t384;
t367 = t101 * t231 + qJDD(4) - t378;
t69 = -t193 * pkin(4) - t81;
t365 = g(1) * t200 + g(2) * t196 + g(3) * t271 - t129 * t307 - t56;
t364 = pkin(9) * t400 + g(1) * t514 + g(2) * t515;
t286 = pkin(5) - t295;
t259 = t548 * qJD(1);
t209 = -t311 * t594 + t312 * t357;
t166 = t356 * t231 - t360 * t502;
t165 = t360 * t231 + t356 * t502;
t161 = t401 * t275;
t159 = t401 * t273;
t157 = (-t251 * t361 - t307 * t543) * t355;
t141 = -pkin(3) * t500 + t445;
t90 = (-t231 * t359 + t307 * t507) * t544 - t400;
t89 = t121 * t360 - t275 * t356;
t88 = -t121 * t356 - t275 * t360;
t87 = -t131 - t565;
t80 = -pkin(3) * t498 + t415;
t77 = qJD(5) * t419 + t193 * t357 + t194 * t594;
t76 = qJD(5) * t173 - t193 * t594 + t194 * t357;
t71 = -t131 * t358 - t231 * t381;
t70 = -t131 * t271 + t194 * t231;
t54 = -pkin(5) * t556 - t58;
t51 = -t194 * t307 + t251 * t271 + (t131 * t361 + t231 * t543) * t355;
t50 = t106 - t79;
t48 = qJD(6) * t425 - t356 * t498 + t360 * t77;
t47 = qJD(6) * t137 + t356 * t77 + t360 * t498;
t44 = t434 - t592;
t23 = t356 * t79 + t360 * t39;
t22 = -t356 * t39 + t360 * t79;
t19 = t76 * pkin(5) - t77 * pkin(11) + t69;
t18 = t356 * t50 + t360 * t53;
t17 = -t356 * t53 + t360 * t50;
t12 = pkin(5) * t498 - t14;
t11 = -pkin(11) * t498 + t13;
t4 = -qJD(6) * t21 - t11 * t356 + t19 * t360;
t3 = qJD(6) * t20 + t11 * t360 + t19 * t356;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t593 - g(2) * t596, t412, 0, 0 (qJDD(1) * t353 + 0.2e1 * t461) * t352 (t359 * t531 - t533 * t545) * t611, t355 * t435 * t542 + t359 * t604 (qJDD(1) * t354 - 0.2e1 * t461) * t352, t361 * t604 - t435 * t498, t430 * t575, g(1) * t274 - g(2) * t276 - t261 * t436 + t278 * t430 - t414 * t493 - t470 * t575, -t260 * t436 - t548 * t430 + t386 * t575 + (-t491 - t532) * t493 - t450 ((-t256 * qJD(2) + qJDD(1) * t548 - t386) * t361 + (-qJD(2) * t259 - qJDD(1) * t278 + t470) * t359 - t412) * t355, t352 * qJDD(1) * pkin(1) ^ 2 - g(1) * t459 - g(2) * t546 - t256 * t261 + t259 * t260 - t278 * t470 - t386 * t548, t70, t379, t51, t440, -t602, t157, t132 * t248 + t152 * t270 + t154 * t251 + t193 * t204 + t229 * t261 + t307 * t415 + (t129 * t543 + t361 * t471) * t355 + t451, -t131 * t248 + t152 * t271 - t155 * t251 + t194 * t204 + t231 * t261 + t307 * t85 + (-t130 * t543 + t361 * t56) * t355 - t452, -t129 * t194 - t130 * t193 + t131 * t154 - t132 * t155 - t229 * t85 + t231 * t415 - t270 * t56 + t271 * t471 + t450, t56 * t155 + t130 * t85 - t471 * t154 - t129 * t415 + t152 * t248 + t204 * t261 - g(1) * (t431 - t590) - g(2) * (t519 + t591) t70, t51, -t379, t157, t602, t440, t101 * t193 + t132 * t133 - t135 * t251 + t229 * t81 + t270 * t43 + t307 * t80 + (-t105 * t543 + t361 * t44) * t355 + t451, t105 * t194 - t107 * t193 - t131 * t135 - t132 * t134 - t229 * t74 + t231 * t80 - t270 * t42 + t271 * t44 + t450, -t101 * t194 + t131 * t133 + t134 * t251 - t231 * t81 - t271 * t43 - t307 * t74 + (t107 * t543 - t361 * t42) * t355 + t452, t42 * t134 + t107 * t74 + t43 * t133 + t101 * t81 + t44 * t135 + t105 * t80 - g(1) * (t384 - t590) - g(2) * (t416 + t591) t148 * t77 - t173 * t369, -t148 * t76 - t173 * t49 - t369 * t419 - t605 * t77, -t77 * t529 - t173 * t528 + ((-qJD(1) * t173 - t148) * t543 + (t77 * qJD(1) + t173 * qJDD(1) - t369) * t361) * t355, -t419 * t49 + t605 * t76, t76 * t529 - t419 * t528 + ((-qJD(1) * t419 + t605) * t543 + (-qJD(1) * t76 + qJDD(1) * t419 - t49) * t361) * t355 (t529 * t543 + ((-0.2e1 * t492 + t531) * t355 - t528) * t361) * t355, -t14 * t529 - t58 * t528 + t69 * t605 + t102 * t49 - t34 * t419 + t83 * t76 + g(1) * t115 - g(2) * t121 + ((-qJD(1) * t58 - t39) * t543 + (qJD(1) * t14 + qJDD(1) * t58 - t487) * t361) * t355, t13 * t529 + t587 * t528 + t69 * t148 - t102 * t369 + t34 * t173 + t83 * t77 + ((qJD(1) * t587 + t40) * t543 + (-qJD(1) * t13 - qJDD(1) * t587 + t423) * t361) * t355 + t453, -t13 * t605 - t14 * t148 + t173 * t487 + t369 * t58 - t39 * t77 - t40 * t76 - t419 * t423 - t49 * t587 - t450, -g(1) * t368 - g(2) * t376 + t34 * t102 + t40 * t13 + t39 * t14 - t423 * t587 - t487 * t58 + t83 * t69, t110 * t48 - t137 * t24, -t108 * t48 - t110 * t47 - t137 * t25 - t24 * t425, t110 * t76 + t137 * t46 + t24 * t419 + t48 * t622, t108 * t47 - t25 * t425, -t108 * t76 + t25 * t419 + t425 * t46 - t47 * t622, -t419 * t46 + t622 * t76, g(1) * t639 - g(2) * t89 + t12 * t108 - t2 * t419 + t20 * t46 + t54 * t25 + t37 * t47 + t4 * t622 - t6 * t425 - t443 * t76, -g(1) * t640 - g(2) * t88 + t1 * t419 + t12 * t110 + t6 * t137 - t16 * t76 - t21 * t46 - t54 * t24 - t3 * t622 + t37 * t48, t1 * t425 - t108 * t3 - t110 * t4 - t137 * t2 - t16 * t47 + t20 * t24 - t21 * t25 + t443 * t48 - t453, t1 * t21 + t16 * t3 + t2 * t20 - t443 * t4 + t6 * t54 + t37 * t12 - g(1) * (-pkin(5) * t115 + pkin(11) * t612 + t368) - g(2) * (pkin(5) * t121 + pkin(11) * t420 + t376); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t472, t545 * t558, -t361 * t455 + t490, t472, t359 * t455 + t489, t430, pkin(1) * t359 * t558 + t259 * t436 + t395 - t470, pkin(1) * t524 + t256 * t436 + t386 + t429, 0, 0, t71, -t615, t90, t371, -t601, t466, t204 * t541 - t152 * t595 - pkin(2) * t132 - t445 * t307 - t259 * t229 + (-t474 + (-t129 * t359 - t204 * t554) * qJD(1)) * t355 + t364, -t475 + t204 * t495 + pkin(2) * t131 - t163 * t307 - t259 * t231 + (t130 * t359 - t204 * t507) * t544 + (t152 + t375) * t358, t129 * t438 - t445 * t231 + t163 * t229 + (t476 - t504) * qJD(3) + (t442 + t471 + t568) * t358 + t391 + t607, -t152 * pkin(2) - t130 * t163 + t129 * t445 - t204 * t259 + g(1) * t267 + g(2) * t265 - g(3) * t549 + (t471 * t358 + (-t130 * t358 - t504) * qJD(3) + t391) * pkin(9), t71, t90, t615, t466, t601, t371, t101 * t541 - t43 * t595 + t301 * t132 - t141 * t307 + t550 * t229 + (-t474 + (-t101 * t554 + t105 * t359) * qJD(1)) * t355 + t364, -t105 * t438 + t138 * t229 - t141 * t231 + (t476 + t505) * qJD(3) + (t44 + t442 + t574) * t358 + t392 + t607, t475 - t101 * t495 + t301 * t131 + t138 * t307 - t550 * t231 + (t101 * t507 - t107 * t359) * t544 + (-t375 - t43) * t358, t43 * t301 - t107 * t138 - t105 * t141 - g(1) * t520 - g(2) * t521 - g(3) * t469 + t550 * t101 + (t44 * t358 + (-t107 * t358 + t505) * qJD(3) + t392) * pkin(9), -t148 * t553 - t284 * t369, -t148 * t552 - t284 * t49 - t369 * t401 + t553 * t605, -t284 * t528 + (t284 * t531 + (-t553 * t361 + (-qJD(2) * t284 + t148) * t359) * qJD(1)) * t355 + t553 * t529, -t401 * t49 + t552 * t605, -t401 * t528 + (t401 * t531 + (-t552 * t361 + (-qJD(2) * t401 - t605) * t359) * qJD(1)) * t355 + t552 * t529, t427 * t500, t209 * t528 + t280 * t49 - t34 * t401 - g(1) * t161 - g(2) * t159 + g(3) * t219 + t552 * t83 + (-t209 * t531 + (-t578 * t361 + (qJD(2) * t209 + t39) * t359) * qJD(1)) * t355 + t551 * t605 + t578 * t529, t210 * t528 - t280 * t369 + t34 * t284 - t553 * t83 + (-t210 * t531 + (-t580 * t361 + (qJD(2) * t210 - t40) * t359) * qJD(1)) * t355 + t551 * t148 - t407 + t580 * t529, t148 * t578 - t209 * t369 - t210 * t49 + t284 * t487 + t39 * t553 - t40 * t552 - t401 * t423 - t580 * t605 + t429, -g(1) * t397 - g(2) * t398 - g(3) * t390 + t209 * t487 - t210 * t423 + t34 * t280 - t39 * t578 + t40 * t580 + t551 * t83, t110 * t403 - t24 * t559, t481 * t110 + t480 * t108 + (t584 - t583 + (-t569 + t572) * qJD(6)) * t284, t110 * t552 + t24 * t401 + t403 * t622 + t46 * t559, t108 * t404 + t25 * t560, -t108 * t552 + t25 * t401 - t404 * t622 - t46 * t560, -t401 * t46 + t552 * t622, t97 * t46 - t2 * t401 + t209 * t25 + t6 * t560 - g(1) * (t161 * t360 - t276 * t356) - g(2) * (t159 * t360 - t274 * t356) - g(3) * (-t219 * t360 - t356 * t557) - t552 * t443 + t588 * t622 + t579 * t108 + t404 * t37, -t98 * t46 + t1 * t401 - t209 * t24 + t6 * t559 - g(1) * (-t161 * t356 - t276 * t360) - g(2) * (-t159 * t356 - t274 * t360) - g(3) * (t219 * t356 - t360 * t557) - t552 * t16 - t589 * t622 + t579 * t110 + t403 * t37, t24 * t97 - t25 * t98 + t481 * t16 - t480 * t443 - t588 * t110 - t589 * t108 + (-t1 * t356 - t2 * t360 + (-t16 * t360 - t356 * t443) * qJD(6)) * t284 + t407, t1 * t98 + t2 * t97 + t6 * t209 - g(1) * (pkin(5) * t161 + pkin(11) * t160 + t397) - g(2) * (pkin(5) * t159 + pkin(11) * t158 + t398) - g(3) * (-pkin(5) * t219 + pkin(11) * t218 + t390) + t579 * t37 + t589 * t16 - t588 * t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t564, -t496, t87, -t564, -t624, t251, -t204 * t231 + t378 - t568, t204 * t229 + t365, 0, 0, t564, t87, t496, t251, t624, -t564, -t153 * t229 - t367 - t568 + 0.2e1 * t592, pkin(3) * t131 - qJ(4) * t132 + (t107 - t130) * t231 + (t105 - t535) * t229, -t101 * t229 + t153 * t231 + 0.2e1 * t241 - 0.2e1 * t290 - t365, -t44 * pkin(3) - g(1) * t484 - g(2) * t485 - g(3) * t483 + t42 * qJ(4) - t101 * t153 - t105 * t130 + t107 * t535, -t566, -t621, -t614, t566, -t616, -t373, -t106 * t605 + t295 * t373 - t576 * t427 - t642, -t106 * t148 - t296 * t373 - t577 * t427 - t643, t295 * t369 - t296 * t49 + (t39 - t577) * t605 + (-t40 + t576) * t148, -g(1) * t447 - g(2) * t448 - g(3) * t446 - t83 * t106 - t295 * t487 - t296 * t423 - t39 * t576 + t40 * t577, -t641, -t637, -t638, -t572 * t622 + t583, t567 * t622 - t618, t626, t108 * t576 - t17 * t622 + t25 * t286 + t356 * t383 - t360 * t374 - t625, t110 * t576 + t18 * t622 - t24 * t286 + t356 * t374 + t360 * t383 - t628, t108 * t18 + t110 * t17 + (-t108 * t253 - t605 * t443 - t25 * t287 - t1 + (t110 * t287 - t443) * qJD(6)) * t360 + (t110 * t253 + t605 * t16 - t24 * t287 + t2 + (t108 * t287 + t16) * qJD(6)) * t356 + t411, t6 * t286 - g(1) * (pkin(5) * t420 - pkin(11) * t121 + t447) - g(2) * (-pkin(5) * t612 - pkin(11) * t115 + t448) - g(3) * (t446 + t613) + t576 * t37 + (t253 * t360 - t18) * t16 - (-t253 * t356 - t17) * t443 + t370 * t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251 + t564, t87, -t307 ^ 2 - t599, t367 + t574 - t592, 0, 0, 0, 0, 0, 0, -t231 * t605 - t357 * t631 + t594 * t373, -t231 * t148 - t357 * t373 - t631 * t594, -t357 * t49 + t594 * t405 + t418 * t307 + (-t229 * t594 ^ 2 + t418) * qJD(5), -t487 * t594 - t83 * t231 + (t494 + t502) * t40 + (-t423 - t608) * t357 + t406, 0, 0, 0, 0, 0, 0, -t594 * t25 + (-t356 * t494 - t165) * t622 + (t108 * t427 - t536 * t622 - t582) * t357, t594 * t24 + (-t360 * t494 + t166) * t622 + (t110 * t427 + t537 * t622 - t581) * t357, t166 * t108 + t165 * t110 + (-t108 * t508 + t110 * t510) * qJD(5) + (-t584 - t583 + (t569 + t572) * qJD(6)) * t357, -t6 * t594 + t443 * t165 - t16 * t166 + (t16 * t508 + t443 * t510) * qJD(5) + (t37 * t427 + t370) * t357 + t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t566, t621, t614, -t566, t616, t373, t40 * t427 + t642, t608 + t643, 0, 0, t641, t637, t638, t108 * t567 - t583, -t356 * t622 ^ 2 + t618, -t626, -pkin(5) * t25 - t108 * t40 - t22 * t622 + t356 * t421 - t360 * t377 + t625, pkin(5) * t24 - t110 * t40 + t23 * t622 + t356 * t377 + t360 * t421 + t628, t108 * t23 + t110 * t22 + ((-t25 + t539) * pkin(11) + t630) * t360 + ((qJD(6) * t108 - t24) * pkin(11) + t609) * t356 - t411, t443 * t22 - t16 * t23 - t37 * t40 + t396 * pkin(5) + (t370 - t411) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571, -t108 ^ 2 + t110 ^ 2, -t24 + t573, -t571, t570 - t25, t46, -g(1) * t88 + g(2) * t640 - g(3) * t425 - t37 * t110 - t609, g(1) * t89 + g(2) * t639 + g(3) * t137 + t37 * t108 - t630, 0, 0;];
tau_reg  = t7;
