% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:00:01
% EndTime: 2019-03-09 01:00:37
% DurationCPUTime: 17.27s
% Computational Cost: add. (21705->673), mult. (57329->963), div. (0->0), fcn. (47529->14), ass. (0->300)
t259 = sin(pkin(7));
t266 = sin(qJ(3));
t385 = t259 * t266;
t248 = pkin(9) * t385;
t261 = cos(pkin(7));
t270 = cos(qJ(3));
t381 = t261 * t270;
t217 = pkin(2) * t381 - t248;
t209 = qJD(3) * t217;
t271 = cos(qJ(2));
t373 = t270 * t271;
t267 = sin(qJ(2));
t378 = t266 * t267;
t291 = -t261 * t378 + t373;
t260 = sin(pkin(6));
t364 = qJD(1) * t260;
t366 = t291 * t364 - t209;
t300 = pkin(3) * t266 - pkin(10) * t270;
t290 = t300 * qJD(3);
t327 = t267 * t364;
t463 = (t290 - t327) * t259;
t382 = t261 * t266;
t384 = t259 * t270;
t218 = pkin(2) * t382 + pkin(9) * t384;
t204 = pkin(10) * t261 + t218;
t301 = -pkin(3) * t270 - pkin(10) * t266;
t205 = (-pkin(2) + t301) * t259;
t265 = sin(qJ(4));
t269 = cos(qJ(4));
t353 = qJD(4) * t269;
t354 = qJD(4) * t265;
t372 = -t204 * t354 + t205 * t353 + t463 * t265 - t269 * t366;
t151 = t269 * t204 + t265 * t205;
t371 = -qJD(4) * t151 + t265 * t366 + t463 * t269;
t355 = qJD(3) * t270;
t331 = t259 * t355;
t339 = t265 * t385;
t179 = qJD(4) * t339 - t261 * t353 - t269 * t331;
t357 = qJD(3) * t266;
t332 = t259 * t357;
t462 = -pkin(4) * t332 - pkin(11) * t179 - t371;
t214 = t261 * t265 + t269 * t385;
t330 = t265 * t355;
t180 = qJD(4) * t214 + t259 * t330;
t461 = pkin(11) * t180 - t372;
t362 = qJD(2) * t259;
t220 = pkin(9) * t362 + t327;
t211 = t266 * t220;
t262 = cos(pkin(6));
t363 = qJD(1) * t262;
t420 = qJD(2) * pkin(2);
t230 = t271 * t364 + t420;
t389 = t230 * t261;
t284 = t259 * t363 + t389;
t148 = t270 * t284 - t211;
t207 = t300 * t362;
t117 = t269 * t148 + t265 * t207;
t358 = qJD(2) * t270;
t333 = t259 * t358;
t309 = t265 * t333;
t427 = -pkin(11) - pkin(10);
t336 = qJD(4) * t427;
t460 = pkin(11) * t309 + t265 * t336 - t117;
t268 = cos(qJ(6));
t349 = qJD(6) * t268;
t360 = qJD(2) * t261;
t247 = qJD(3) + t360;
t359 = qJD(2) * t266;
t334 = t259 * t359;
t306 = t265 * t334;
t195 = t247 * t269 - t306;
t196 = t247 * t265 + t269 * t334;
t264 = sin(qJ(5));
t423 = cos(qJ(5));
t142 = -t423 * t195 + t196 * t264;
t447 = t142 * t268;
t459 = t349 + t447;
t335 = t423 * t269;
t380 = t264 * t265;
t285 = t335 - t380;
t305 = qJD(4) * t335;
t325 = qJD(5) * t423;
t346 = qJD(4) + qJD(5);
t369 = -t269 * t325 + t285 * t333 + t346 * t380 - t305;
t379 = t264 * t269;
t222 = t265 * t423 + t379;
t368 = (-t333 + t346) * t222;
t210 = qJD(3) * t218;
t376 = t267 * t270;
t377 = t266 * t271;
t293 = t261 * t376 + t377;
t367 = t293 * t364 - t210;
t263 = sin(qJ(6));
t238 = -qJD(4) + t333;
t294 = -qJD(5) + t238;
t280 = t268 * t294;
t287 = t264 * t195 + t196 * t423;
t120 = t263 * t287 + t280;
t122 = -t263 * t294 + t268 * t287;
t446 = qJD(6) + t142;
t456 = t446 * t263;
t242 = qJD(2) * t332;
t350 = qJD(6) * t263;
t347 = qJD(2) * qJD(3);
t324 = t270 * t347;
t304 = t259 * t324;
t166 = qJD(4) * t306 - t247 * t353 - t269 * t304;
t167 = (t266 * t353 + t330) * t362 + t247 * t354;
t352 = qJD(5) * t264;
t77 = t423 * t166 + t264 * t167 - t195 * t325 + t196 * t352;
t51 = qJD(6) * t280 - t263 * t242 + t268 * t77 + t287 * t350;
t351 = qJD(6) * t122;
t52 = -t268 * t242 - t263 * t77 + t351;
t458 = -t120 * t459 - t122 * t456 - t263 * t52 - t51 * t268;
t318 = t264 * t166 - t423 * t167;
t78 = qJD(5) * t287 - t318;
t73 = t268 * t78;
t457 = t120 * t287 - t446 * t456 + t73;
t116 = -t265 * t148 + t269 * t207;
t375 = t269 * t270;
t103 = (pkin(4) * t266 - pkin(11) * t375) * t362 + t116;
t240 = t427 * t265;
t241 = t427 * t269;
t286 = t240 * t423 + t264 * t241;
t408 = qJD(5) * t286 - t264 * t103 + t336 * t379 + t423 * t460;
t150 = -t204 * t265 + t269 * t205;
t118 = -pkin(4) * t384 - pkin(11) * t214 + t150;
t213 = -t269 * t261 + t339;
t126 = -pkin(11) * t213 + t151;
t404 = -t118 * t325 + t126 * t352 + t264 * t462 + t461 * t423;
t374 = t270 * t220;
t149 = t266 * t284 + t374;
t302 = -t149 + (-t309 + t354) * pkin(4);
t370 = t180 * pkin(4) - t367;
t48 = t51 * t263;
t454 = t122 * t459 - t48;
t405 = t263 * t78 + t349 * t446;
t453 = -t122 * t287 + t446 * t447 + t405;
t135 = t247 * pkin(10) + t149;
t243 = t261 * t363;
t157 = t243 + (qJD(2) * t301 - t230) * t259;
t99 = t135 * t269 + t157 * t265;
t84 = pkin(11) * t195 + t99;
t412 = t264 * t84;
t98 = -t135 * t265 + t269 * t157;
t83 = -pkin(11) * t196 + t98;
t69 = -pkin(4) * t238 + t83;
t37 = t423 * t69 - t412;
t31 = pkin(5) * t294 - t37;
t452 = t142 * t31;
t451 = -pkin(12) * t332 + t404;
t450 = -t368 * pkin(5) - pkin(12) * t369 - t302;
t449 = -pkin(12) * t334 + t408;
t95 = t179 * t423 + t264 * t180 + t213 * t325 + t214 * t352;
t164 = -t264 * t213 + t214 * t423;
t96 = qJD(5) * t164 - t264 * t179 + t180 * t423;
t448 = t96 * pkin(5) + t95 * pkin(12) + t370;
t396 = t142 * t287;
t445 = -t142 ^ 2 + t287 ^ 2;
t97 = pkin(5) * t287 + pkin(12) * t142;
t444 = -t142 * t294 - t77;
t134 = -t247 * pkin(3) - t148;
t109 = -t195 * pkin(4) + t134;
t276 = t291 * qJD(2);
t307 = t262 * t331;
t110 = (t230 * t381 - t211) * qJD(3) + (t260 * t276 + t307) * qJD(1);
t171 = (t290 + t327) * t362;
t46 = -qJD(4) * t99 - t265 * t110 + t269 * t171;
t39 = pkin(4) * t242 + pkin(11) * t166 + t46;
t45 = t269 * t110 - t135 * t354 + t157 * t353 + t265 * t171;
t44 = -pkin(11) * t167 + t45;
t322 = -t264 * t39 - t69 * t325 + t84 * t352 - t423 * t44;
t443 = t109 * t142 + t322;
t341 = t423 * t84;
t38 = t264 * t69 + t341;
t32 = -pkin(12) * t294 + t38;
t57 = pkin(5) * t142 - pkin(12) * t287 + t109;
t14 = t263 * t57 + t268 * t32;
t277 = t293 * qJD(2);
t308 = t262 * t332;
t111 = (t230 * t382 + t374) * qJD(3) + (t260 * t277 + t308) * qJD(1);
t92 = pkin(4) * t167 + t111;
t26 = pkin(5) * t78 + pkin(12) * t77 + t92;
t7 = pkin(12) * t242 - t322;
t3 = -qJD(6) * t14 + t268 * t26 - t263 * t7;
t440 = -t14 * t446 - t3;
t185 = t264 * t240 - t241 * t423;
t406 = t185 * qJD(5) + t103 * t423 + t264 * t460 - t305 * t427;
t436 = t264 * t118 + t423 * t126;
t403 = -qJD(5) * t436 + t461 * t264 - t423 * t462;
t439 = t238 * t98 + t45;
t438 = t238 * t99 - t46;
t437 = t446 * t287;
t435 = t261 * t373 - t378;
t297 = t263 * t32 - t268 * t57;
t434 = t14 * t268 + t263 * t297;
t323 = t264 * t44 - t423 * t39;
t10 = -qJD(5) * t38 - t323;
t8 = -pkin(5) * t242 - t10;
t432 = -t8 * t268 + t287 * t297 + t31 * t350;
t431 = t14 * t287 + t8 * t263 + t31 * t349;
t430 = -t109 * t287 - t323;
t428 = -t238 * t287 + t318;
t2 = -qJD(6) * t297 + t263 * t26 + t268 * t7;
t65 = -pkin(12) * t384 + t436;
t163 = t213 * t423 + t214 * t264;
t203 = t248 + (-pkin(2) * t270 - pkin(3)) * t261;
t165 = t213 * pkin(4) + t203;
t89 = pkin(5) * t163 - pkin(12) * t164 + t165;
t33 = -t263 * t65 + t268 * t89;
t425 = qJD(6) * t33 + t263 * t448 - t268 * t451;
t34 = t263 * t89 + t268 * t65;
t424 = -qJD(6) * t34 + t263 * t451 + t268 * t448;
t1 = t2 * t268;
t255 = -pkin(4) * t269 - pkin(3);
t170 = -pkin(5) * t285 - pkin(12) * t222 + t255;
t125 = t170 * t263 + t185 * t268;
t422 = qJD(6) * t125 + t263 * t449 + t268 * t450;
t124 = t170 * t268 - t185 * t263;
t421 = -qJD(6) * t124 + t263 * t450 - t268 * t449;
t419 = t297 * t446;
t415 = t163 * t78;
t50 = t52 * t268;
t411 = t78 * t285;
t410 = -pkin(5) * t332 - t403;
t407 = pkin(5) * t334 + t406;
t175 = -t260 * t435 - t262 * t384;
t402 = t111 * t175;
t401 = t120 * t263;
t400 = t122 * t120;
t191 = -t259 * t230 + t243;
t395 = t191 * t259;
t394 = t195 * t238;
t393 = t196 * t195;
t392 = t196 * t238;
t391 = t222 * t263;
t390 = t222 * t268;
t388 = t238 * t265;
t387 = t238 * t269;
t256 = t259 ^ 2;
t272 = qJD(2) ^ 2;
t386 = t256 * t272;
t383 = t260 * t272;
t365 = t266 ^ 2 - t270 ^ 2;
t361 = qJD(2) * t260;
t356 = qJD(3) * t269;
t343 = t256 * t420;
t340 = t263 * t384;
t338 = t267 * t383;
t328 = t256 * t358;
t320 = t263 * t369 - t268 * t334;
t319 = t263 * t334 + t268 * t369;
t315 = t247 + t360;
t314 = pkin(4) * t325;
t313 = t256 * t338;
t312 = t266 * t270 * t386;
t310 = t259 * t267 * t361;
t42 = t264 * t83 + t341;
t303 = pkin(4) * t352 - t42;
t253 = pkin(4) * t264 + pkin(12);
t298 = -t253 * t78 + t452;
t292 = t261 * t377 + t376;
t176 = t260 * t292 + t262 * t385;
t212 = -t259 * t260 * t271 + t261 * t262;
t136 = -t176 * t265 + t212 * t269;
t137 = t176 * t269 + t212 * t265;
t91 = t264 * t136 + t137 * t423;
t62 = t175 * t268 - t263 * t91;
t63 = t175 * t263 + t268 * t91;
t296 = t256 * t266 * t324;
t138 = t164 * t263 + t268 * t384;
t67 = t118 * t423 - t264 * t126;
t288 = t136 * t423 - t264 * t137;
t283 = t222 * t349 - t320;
t282 = -t222 * t350 - t319;
t279 = t294 * t259;
t278 = qJD(3) * (-t343 + t395);
t275 = qJD(3) * t220 + t327 * t360;
t274 = t1 - t3 * t263 + (-t14 * t263 + t268 * t297) * qJD(6);
t273 = -t191 * t362 - qJD(3) * t389 + (-qJD(3) * t259 * t262 - t271 * t361) * qJD(1);
t254 = -pkin(4) * t423 - pkin(5);
t139 = t164 * t268 - t340;
t130 = t307 + (qJD(3) * t435 + t276) * t260;
t129 = t308 + (qJD(3) * t292 + t277) * t260;
t82 = pkin(4) * t196 + t97;
t76 = qJD(4) * t136 + t130 * t269 + t265 * t310;
t75 = -qJD(4) * t137 - t130 * t265 + t269 * t310;
t64 = pkin(5) * t384 - t67;
t61 = -qJD(6) * t340 + t164 * t349 - t263 * t95 - t268 * t332;
t60 = qJD(6) * t138 - t263 * t332 + t268 * t95;
t43 = t423 * t83 - t412;
t25 = t263 * t97 + t268 * t37;
t24 = -t263 * t37 + t268 * t97;
t22 = qJD(5) * t91 + t264 * t76 - t423 * t75;
t21 = qJD(5) * t288 + t264 * t75 + t423 * t76;
t20 = t263 * t82 + t268 * t43;
t19 = -t263 * t43 + t268 * t82;
t12 = -qJD(6) * t63 + t129 * t268 - t263 * t21;
t11 = qJD(6) * t62 + t129 * t263 + t268 * t21;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, -t271 * t383, 0, 0, 0, 0, 0, 0, 0, 0, -t129 * t247 + t212 * t242 - t270 * t313, -t130 * t247 + t212 * t304 + t266 * t313 (t129 * t266 + t130 * t270 + (t175 * t270 - t176 * t266) * qJD(3)) * t362, t110 * t176 + t402 - t129 * t148 + t130 * t149 + (qJD(1) * t212 + t191) * t310, 0, 0, 0, 0, 0, 0, -t129 * t195 + t136 * t242 + t167 * t175 - t238 * t75, t129 * t196 - t137 * t242 - t166 * t175 + t238 * t76, t136 * t166 - t137 * t167 + t195 * t76 - t196 * t75, t129 * t134 + t136 * t46 + t137 * t45 + t75 * t98 + t76 * t99 + t402, 0, 0, 0, 0, 0, 0, t129 * t142 + t175 * t78 + t22 * t294 + t242 * t288, t129 * t287 - t175 * t77 + t21 * t294 - t242 * t91, -t142 * t21 + t22 * t287 + t288 * t77 - t78 * t91, t10 * t288 + t109 * t129 + t175 * t92 + t21 * t38 - t22 * t37 - t322 * t91, 0, 0, 0, 0, 0, 0, t12 * t446 + t120 * t22 - t288 * t52 + t62 * t78, -t11 * t446 + t122 * t22 + t288 * t51 - t63 * t78, -t11 * t120 - t12 * t122 + t51 * t62 - t52 * t63, t11 * t14 - t12 * t297 + t2 * t63 + t22 * t31 - t288 * t8 + t3 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t296, -0.2e1 * t365 * t256 * t347, t315 * t331, -0.2e1 * t296, -t315 * t332, 0, -t111 * t261 + t247 * t367 + t266 * t278, -t110 * t261 + t247 * t366 + t270 * t278 (t110 * t270 + t111 * t266 + (-t148 * t270 - t149 * t266) * qJD(3) + ((-t366 - t209) * t270 + (-t367 - t210) * t266) * qJD(2)) * t259, t110 * t218 - t111 * t217 - t366 * t149 + t367 * t148 + (-t343 - t395) * t327, -t166 * t214 - t179 * t196, t166 * t213 - t167 * t214 - t179 * t195 - t180 * t196, t179 * t238 + (t166 * t270 + (qJD(2) * t214 + t196) * t357) * t259, t167 * t213 - t180 * t195, t180 * t238 + (t167 * t270 + (-qJD(2) * t213 + t195) * t357) * t259 (-t238 * t259 - t328) * t357, t111 * t213 + t134 * t180 + t167 * t203 - t371 * t238 + t367 * t195 + (-t270 * t46 + (qJD(2) * t150 + t98) * t357) * t259, t111 * t214 - t134 * t179 - t166 * t203 + t372 * t238 - t367 * t196 + (t270 * t45 + (-qJD(2) * t151 - t99) * t357) * t259, t150 * t166 - t151 * t167 + t179 * t98 - t180 * t99 + t195 * t372 - t196 * t371 - t213 * t45 - t214 * t46, t111 * t203 - t134 * t367 + t150 * t46 + t151 * t45 + t371 * t98 + t372 * t99, -t164 * t77 - t287 * t95, t142 * t95 + t163 * t77 - t164 * t78 - t287 * t96, -t95 * t346 + (t287 * t357 + t77 * t270 + (t164 * t357 + t270 * t95) * qJD(2)) * t259, t142 * t96 + t415, -t96 * t346 + (-t142 * t357 + t78 * t270 + (-t163 * t357 + t270 * t96) * qJD(2)) * t259 (-t279 - t328) * t357, t165 * t78 + t92 * t163 + t109 * t96 + t370 * t142 + (t37 * t357 - t10 * t270 + (-t270 * t403 + t357 * t67) * qJD(2)) * t259 + t403 * t346, -t165 * t77 + t92 * t164 - t109 * t95 + t370 * t287 + (-t38 * t357 - t322 * t270 + (-t270 * t404 - t357 * t436) * qJD(2)) * t259 + t404 * t346, -t10 * t164 + t142 * t404 + t163 * t322 - t287 * t403 + t37 * t95 - t38 * t96 - t436 * t78 + t67 * t77, t10 * t67 + t109 * t370 + t165 * t92 - t322 * t436 + t37 * t403 - t38 * t404, -t122 * t60 - t139 * t51, t120 * t60 - t122 * t61 + t138 * t51 - t139 * t52, t122 * t96 + t139 * t78 - t163 * t51 - t446 * t60, t120 * t61 + t138 * t52, -t120 * t96 - t138 * t78 - t163 * t52 - t446 * t61, t446 * t96 + t415, t120 * t410 + t138 * t8 + t163 * t3 - t297 * t96 + t31 * t61 + t33 * t78 + t424 * t446 + t52 * t64, t122 * t410 + t139 * t8 - t14 * t96 - t163 * t2 - t31 * t60 - t34 * t78 - t425 * t446 - t51 * t64, -t120 * t425 - t122 * t424 - t138 * t2 - t139 * t3 - t14 * t61 - t297 * t60 + t33 * t51 - t34 * t52, t14 * t425 + t2 * t34 - t297 * t424 + t3 * t33 + t31 * t410 + t64 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, t365 * t386 (qJD(3) - t247) * t333, t312, t247 * t334 - t242, 0, t149 * t247 + t266 * t273 - t270 * t275, t148 * t247 + t266 * t275 + t270 * t273, 0, 0, -t166 * t265 - t196 * t387 (-t166 - t394) * t269 + (-t167 + t392) * t265, -t238 * t353 + (t238 * t375 + (qJD(3) * t265 - t196) * t266) * t362, -t167 * t269 + t195 * t388, t238 * t354 + (-t270 * t388 + (-t195 + t356) * t266) * t362, t238 * t334, -pkin(3) * t167 - t111 * t269 + t116 * t238 + t149 * t195 + (pkin(10) * t387 + t134 * t265) * qJD(4) + (-t266 * t98 + (-pkin(10) * t357 - t134 * t270) * t265) * t362, pkin(3) * t166 + t111 * t265 - t117 * t238 - t149 * t196 + (-pkin(10) * t388 + t134 * t269) * qJD(4) + (-t134 * t375 + (-pkin(10) * t356 + t99) * t266) * t362, t116 * t196 - t117 * t195 + ((qJD(4) * t196 - t167) * pkin(10) + t439) * t269 + ((-qJD(4) * t195 - t166) * pkin(10) + t438) * t265, -pkin(3) * t111 - t116 * t98 - t117 * t99 - t134 * t149 + (-t265 * t46 + t269 * t45 + (-t265 * t99 - t269 * t98) * qJD(4)) * pkin(10), -t77 * t222 - t287 * t369, t142 * t369 - t222 * t78 - t285 * t77 - t287 * t368 (t369 * t270 + (qJD(3) * t222 - t287) * t266) * t362 - t369 * t346, t142 * t368 - t411 (t368 * t270 + (qJD(3) * t285 + t142) * t266) * t362 - t368 * t346, t279 * t359, t255 * t78 - t92 * t285 + t302 * t142 + t368 * t109 + (t406 * t270 + (qJD(3) * t286 - t37) * t266) * t362 - t406 * t346, -t255 * t77 + t92 * t222 + t302 * t287 - t369 * t109 + (t408 * t270 + (-qJD(3) * t185 + t38) * t266) * t362 - t408 * t346, -t10 * t222 - t142 * t408 - t185 * t78 - t285 * t322 + t286 * t77 + t287 * t406 - t368 * t38 + t369 * t37, t10 * t286 + t109 * t302 - t185 * t322 + t255 * t92 - t37 * t406 + t38 * t408, t122 * t282 - t390 * t51, t320 * t122 + t319 * t120 + (t48 - t50 + (-t122 * t268 + t401) * qJD(6)) * t222, t122 * t368 + t282 * t446 + t285 * t51 + t390 * t78, t120 * t283 + t391 * t52, -t120 * t368 - t283 * t446 + t285 * t52 - t391 * t78, t368 * t446 - t411, t120 * t407 + t124 * t78 + t283 * t31 - t285 * t3 - t286 * t52 - t297 * t368 + t391 * t8 - t422 * t446, t122 * t407 - t125 * t78 - t14 * t368 + t2 * t285 + t282 * t31 + t286 * t51 + t390 * t8 + t421 * t446, t124 * t51 - t125 * t52 + t320 * t14 - t319 * t297 + t422 * t122 + t421 * t120 + (-qJD(6) * t434 - t2 * t263 - t268 * t3) * t222, t124 * t3 + t125 * t2 - t14 * t421 - t286 * t8 + t297 * t422 + t31 * t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, -t195 ^ 2 + t196 ^ 2, -t166 + t394, t393, -t167 - t392, t242, -t134 * t196 - t438, -t134 * t195 - t439, 0, 0, t396, t445, t444, -t396, t428, t242, -t42 * t238 + (t42 - t38) * qJD(5) + (-t196 * t142 + t242 * t423 + t294 * t352) * pkin(4) + t430, -t43 * t294 + (-t196 * t287 - t242 * t264 + t294 * t325) * pkin(4) + t443, t38 * t287 + t43 * t142 - t37 * t142 - t42 * t287 + (t423 * t77 - t264 * t78 + (-t142 * t423 + t264 * t287) * qJD(5)) * pkin(4), t37 * t42 - t38 * t43 + (t423 * t10 - t109 * t196 - t264 * t322 + (-t264 * t37 + t38 * t423) * qJD(5)) * pkin(4), t454, t458, t453, t401 * t446 - t50, t457, -t437, t254 * t52 + t298 * t263 + t303 * t120 + (-t253 * t349 - t263 * t314 - t19) * t446 + t432, -t254 * t51 + t298 * t268 + t303 * t122 + (t253 * t350 - t268 * t314 + t20) * t446 + t431, t20 * t120 + t19 * t122 + t1 + (-t120 * t314 + t297 * t142 - t253 * t52 + (t122 * t253 + t297) * qJD(6)) * t268 + (t122 * t314 - t14 * t142 - t253 * t51 - t3 + (t120 * t253 - t14) * qJD(6)) * t263, t297 * t19 - t14 * t20 + t8 * t254 - t31 * t42 + (t264 * t31 + t423 * t434) * qJD(5) * pkin(4) + t274 * t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t396, t445, t444, -t396, t428, t242, -t238 * t38 + t430, -t294 * t37 + t443, 0, 0, t454, t458, t453, t120 * t456 - t50, t457, -t437, -pkin(5) * t52 - pkin(12) * t405 - t120 * t38 - t24 * t446 + t263 * t452 + t432, t31 * t447 + pkin(5) * t51 - t122 * t38 + t446 * t25 + (t350 * t446 - t73) * pkin(12) + t431, t120 * t25 + t122 * t24 + t1 + (t419 + (-t52 + t351) * pkin(12)) * t268 + ((qJD(6) * t120 - t51) * pkin(12) + t440) * t263, -pkin(5) * t8 + pkin(12) * t274 - t14 * t25 + t24 * t297 - t31 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400, -t120 ^ 2 + t122 ^ 2, t120 * t446 - t51, -t400, t122 * t446 - t52, t78, -t122 * t31 - t440, t120 * t31 - t2 - t419, 0, 0;];
tauc_reg  = t4;
