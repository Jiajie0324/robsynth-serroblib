% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 11:33
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRRRR4_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR4_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR4_invdynJ_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 11:29:10
% EndTime: 2019-05-05 11:29:34
% DurationCPUTime: 11.95s
% Computational Cost: add. (85828->590), mult. (178142->907), div. (0->0), fcn. (147449->16), ass. (0->399)
t323 = sin(qJ(6));
t321 = cos(pkin(7));
t315 = qJD(2) * t321 + qJD(3);
t325 = sin(qJ(4));
t330 = cos(qJ(4));
t326 = sin(qJ(3));
t319 = sin(pkin(7));
t406 = qJD(2) * t319;
t389 = t326 * t406;
t291 = t315 * t330 - t325 * t389;
t292 = t315 * t325 + t330 * t389;
t324 = sin(qJ(5));
t329 = cos(qJ(5));
t267 = t291 * t324 + t292 * t329;
t399 = qJDD(2) * t326;
t331 = cos(qJ(3));
t405 = qJD(2) * t331;
t297 = (qJD(3) * t405 + t399) * t319;
t382 = qJDD(2) * t321 + qJDD(3);
t344 = -t330 * t297 - t325 * t382;
t258 = t291 * qJD(4) - t344;
t384 = t297 * t325 - t330 * t382;
t355 = -qJD(4) * t292 - t384;
t385 = t324 * t258 - t329 * t355;
t202 = -t267 * qJD(5) - t385;
t201 = qJDD(6) - t202;
t328 = cos(qJ(6));
t388 = t319 * t405;
t310 = -qJD(4) + t388;
t357 = -qJD(5) + t310;
t245 = t267 * t323 + t328 * t357;
t247 = t328 * t267 - t323 * t357;
t207 = t247 * t245;
t444 = t201 - t207;
t454 = t323 * t444;
t265 = -t329 * t291 + t292 * t324;
t227 = t267 * t265;
t400 = qJDD(2) * t319;
t298 = -qJD(3) * t389 + t331 * t400;
t356 = -qJDD(4) + t298;
t293 = -qJDD(5) + t356;
t443 = -t227 - t293;
t453 = t324 * t443;
t452 = t328 * t444;
t451 = t329 * t443;
t203 = -t265 * qJD(5) + t329 * t258 + t324 * t355;
t254 = t265 * t357;
t450 = t254 + t203;
t327 = sin(qJ(2));
t332 = cos(qJ(2));
t320 = sin(pkin(6));
t408 = -g(3) + qJDD(1);
t322 = cos(pkin(6));
t430 = sin(pkin(13));
t431 = cos(pkin(13));
t351 = g(1) * t430 - g(2) * t431;
t447 = t322 * t351;
t342 = t320 * t408 + t447;
t352 = -g(1) * t431 - g(2) * t430;
t273 = -t327 * t352 + t332 * t342;
t333 = qJD(2) ^ 2;
t435 = pkin(9) * t319;
t340 = qJDD(2) * pkin(2) + t333 * t435 + t273;
t343 = -t320 * t351 + t322 * t408;
t449 = t319 * t343 + t321 * t340;
t353 = t357 ^ 2;
t274 = t327 * t342 + t332 * t352;
t269 = -t333 * pkin(2) + pkin(9) * t400 + t274;
t438 = pkin(3) * t331;
t380 = -pkin(10) * t326 - t438;
t296 = t380 * t406;
t407 = t449 * t331;
t440 = t315 ^ 2;
t199 = -t382 * pkin(3) - t440 * pkin(10) + (t296 * t406 + t269) * t326 - t407;
t275 = -pkin(4) * t310 - pkin(11) * t292;
t441 = t291 ^ 2;
t161 = -t355 * pkin(4) - t441 * pkin(11) + t292 * t275 + t199;
t350 = t267 * t357;
t100 = -t450 * pkin(12) + (-t202 - t350) * pkin(5) + t161;
t223 = pkin(5) * t265 - pkin(12) * t267;
t209 = t331 * t269 + t326 * t449;
t336 = t382 * pkin(10) + t296 * t388 + t209;
t335 = -pkin(3) * t440 + t336;
t302 = t315 * t389;
t281 = t298 - t302;
t239 = t319 * t340 - t321 * t343;
t303 = t315 * t388;
t442 = t297 + t303;
t338 = -pkin(10) * t442 - t239;
t337 = -pkin(3) * t281 + t338;
t159 = t325 * t337 + t330 * t335;
t129 = -pkin(4) * t441 + pkin(11) * t355 + t310 * t275 + t159;
t158 = t325 * t335 - t330 * t337;
t282 = t291 * t310;
t236 = t282 + t258;
t417 = t291 * t292;
t345 = -t356 + t417;
t334 = pkin(4) * t345 - pkin(11) * t236 - t158;
t78 = t329 * t129 + t324 * t334;
t66 = -pkin(5) * t353 - t293 * pkin(12) - t265 * t223 + t78;
t47 = -t328 * t100 + t323 * t66;
t48 = t100 * t323 + t328 * t66;
t29 = t323 * t47 + t328 * t48;
t316 = t319 ^ 2;
t448 = t316 * (qJD(2) * t315 - t321 * t333);
t446 = t325 * t345;
t445 = t330 * t345;
t262 = qJD(6) + t265;
t386 = t203 * t323 + t328 * t293;
t148 = (qJD(6) - t262) * t247 + t386;
t232 = (qJD(4) + t310) * t292 + t384;
t243 = t245 ^ 2;
t244 = t247 ^ 2;
t261 = t262 ^ 2;
t263 = t265 ^ 2;
t264 = t267 ^ 2;
t290 = t292 ^ 2;
t307 = t310 ^ 2;
t77 = t129 * t324 - t329 * t334;
t49 = t324 * t78 - t329 * t77;
t439 = pkin(4) * t49;
t179 = t267 * t310 + t385;
t182 = -t254 + t203;
t124 = -t179 * t324 - t182 * t329;
t437 = pkin(4) * t124;
t436 = pkin(5) * t324;
t65 = t293 * pkin(5) - pkin(12) * t353 + t223 * t267 + t77;
t434 = -pkin(5) * t65 + pkin(12) * t29;
t62 = t323 * t65;
t433 = t325 * t49;
t63 = t328 * t65;
t432 = t330 * t49;
t429 = t161 * t324;
t428 = t161 * t329;
t163 = t201 + t207;
t427 = t163 * t323;
t426 = t163 * t328;
t425 = t199 * t325;
t424 = t199 * t330;
t216 = -t227 + t293;
t423 = t216 * t324;
t422 = t216 * t329;
t251 = t356 + t417;
t421 = t251 * t325;
t420 = t251 * t330;
t419 = t262 * t323;
t418 = t262 * t328;
t416 = t310 * t325;
t415 = t310 * t330;
t414 = t316 * t333;
t413 = t319 * t326;
t412 = t319 * t331;
t309 = t326 * t331 * t414;
t295 = t309 + t382;
t411 = t326 * t295;
t294 = -t309 + t382;
t409 = t331 * t294;
t404 = -qJD(4) + t310;
t401 = qJD(6) + t262;
t200 = -t244 - t261;
t119 = -t200 * t323 - t426;
t367 = -t203 * t328 + t293 * t323;
t153 = t245 * t401 + t367;
t398 = pkin(5) * t153 + pkin(12) * t119 + t62;
t194 = -t261 - t243;
t114 = t194 * t328 - t454;
t150 = -t247 * t401 - t386;
t397 = pkin(5) * t150 + pkin(12) * t114 - t63;
t396 = t324 * t207;
t395 = t329 * t207;
t317 = t326 ^ 2;
t394 = t317 * t414;
t318 = t331 ^ 2;
t393 = t318 * t414;
t392 = t331 * t227;
t391 = t331 * t417;
t390 = -pkin(5) * t329 - pkin(4);
t50 = t324 * t77 + t329 * t78;
t187 = t243 + t244;
t167 = -qJD(6) * t245 - t367;
t219 = t262 * t245;
t152 = t167 + t219;
t98 = -t148 * t328 + t152 * t323;
t387 = pkin(5) * t187 + pkin(12) * t98 + t29;
t104 = t158 * t325 + t330 * t159;
t18 = t29 * t324 - t329 * t65;
t383 = pkin(4) * t18 + t434;
t240 = -t264 - t353;
t188 = t240 * t329 + t423;
t381 = pkin(4) * t188 - t78;
t19 = t29 * t329 + t324 * t65;
t10 = -t18 * t325 + t19 * t330;
t28 = t323 * t48 - t328 * t47;
t379 = t10 * t326 - t28 * t331;
t71 = t187 * t329 + t324 * t98;
t72 = -t187 * t324 + t329 * t98;
t43 = -t325 * t71 + t330 * t72;
t96 = -t148 * t323 - t152 * t328;
t378 = t326 * t43 - t331 * t96;
t113 = t194 * t323 + t452;
t82 = t114 * t324 + t150 * t329;
t83 = t114 * t329 - t150 * t324;
t53 = -t325 * t82 + t330 * t83;
t377 = -t113 * t331 + t326 * t53;
t118 = t200 * t328 - t427;
t84 = t119 * t324 + t153 * t329;
t85 = t119 * t329 - t153 * t324;
t55 = -t325 * t84 + t330 * t85;
t376 = -t118 * t331 + t326 * t55;
t31 = t330 * t50 - t433;
t375 = -t161 * t331 + t31 * t326;
t204 = -t263 - t264;
t126 = -t179 * t329 + t182 * t324;
t75 = -t124 * t325 + t126 * t330;
t374 = -t204 * t331 + t326 * t75;
t373 = pkin(4) * t82 + t397;
t372 = pkin(4) * t84 + t398;
t371 = t104 * t326 - t199 * t331;
t220 = -t353 - t263;
t172 = t220 * t324 + t451;
t173 = t220 * t329 - t453;
t117 = -t172 * t325 + t173 * t330;
t178 = (0.2e1 * qJD(5) - t310) * t267 + t385;
t370 = t117 * t326 - t178 * t331;
t189 = -t240 * t324 + t422;
t138 = -t188 * t325 + t189 * t330;
t369 = t138 * t326 - t331 * t450;
t103 = -t158 * t330 + t159 * t325;
t197 = -t232 * t330 + t236 * t325;
t248 = t290 + t441;
t368 = t197 * t326 + t248 * t331;
t208 = t326 * t269 - t407;
t366 = -t208 * t331 + t209 * t326;
t165 = t208 * t326 + t209 * t331;
t259 = -t307 - t441;
t213 = t259 * t330 - t446;
t233 = t292 * t404 - t384;
t365 = t213 * t326 + t233 * t331;
t271 = -t290 - t307;
t222 = -t271 * t325 + t420;
t237 = t291 * t404 + t344;
t364 = t222 * t326 + t237 * t331;
t279 = -t303 + t297;
t280 = t298 + t302;
t363 = -t279 * t331 + t280 * t326;
t287 = -t394 - t440;
t362 = t287 * t331 - t294 * t326;
t299 = -t393 - t440;
t361 = t295 * t331 + t299 * t326;
t359 = pkin(4) * t71 + t387;
t358 = pkin(4) * t172 - t77;
t354 = qJD(6) * t247 + t386;
t349 = t324 * t350;
t348 = t324 * t254;
t347 = t329 * t350;
t346 = t329 * t254;
t301 = (-t317 - t318) * t414;
t300 = (t317 - t318) * t414;
t278 = (t399 + (qJD(3) + t315) * t405) * t319;
t277 = -t290 + t307;
t276 = -t307 + t441;
t272 = t299 * t331 - t411;
t270 = t290 - t441;
t268 = -t287 * t326 - t409;
t250 = -t264 + t353;
t249 = t263 - t353;
t242 = (-t291 * t325 + t292 * t330) * t310;
t241 = t279 * t326 + t280 * t331;
t238 = t281 * t319 + t321 * t361;
t235 = -t282 + t258;
t231 = -t278 * t319 + t321 * t362;
t230 = t258 * t325 - t292 * t415;
t229 = t291 * t416 + t330 * t355;
t228 = -t301 * t319 + t321 * t363;
t226 = t264 - t263;
t225 = t276 * t325 - t420;
t224 = t277 * t330 + t446;
t221 = t271 * t330 + t421;
t215 = -t244 + t261;
t214 = t243 - t261;
t212 = t259 * t325 + t445;
t211 = t346 - t349;
t210 = t348 + t347;
t206 = t244 - t243;
t196 = -t232 * t325 - t236 * t330;
t195 = t233 * t325 + t235 * t330;
t193 = t249 * t329 + t423;
t192 = -t250 * t324 + t451;
t191 = t249 * t324 - t422;
t190 = t250 * t329 + t453;
t186 = t222 * t331 - t237 * t326;
t184 = t213 * t331 - t233 * t326;
t177 = t329 * t203 + t349;
t176 = t324 * t203 - t347;
t175 = -t324 * t202 - t346;
t174 = t329 * t202 - t348;
t171 = (-t245 * t328 + t247 * t323) * t262;
t170 = (-t245 * t323 - t247 * t328) * t262;
t169 = t197 * t331 - t248 * t326;
t168 = t210 * t330 + t211 * t325;
t160 = -t221 * t319 + t321 * t364;
t156 = -t212 * t319 + t321 * t365;
t155 = t239 * t319 + t321 * t366;
t154 = pkin(3) * t237 + pkin(10) * t222 + t425;
t151 = t167 - t219;
t147 = t191 * t330 + t193 * t325;
t146 = t190 * t330 + t192 * t325;
t143 = pkin(3) * t233 + pkin(10) * t213 - t424;
t142 = t167 * t328 - t247 * t419;
t141 = t167 * t323 + t247 * t418;
t140 = t245 * t418 + t323 * t354;
t139 = -t245 * t419 + t328 * t354;
t137 = t188 * t330 + t189 * t325;
t136 = t171 * t329 + t201 * t324;
t135 = t171 * t324 - t201 * t329;
t134 = t214 * t328 - t427;
t133 = -t215 * t323 + t452;
t132 = t214 * t323 + t426;
t131 = t215 * t328 + t454;
t130 = -t196 * t319 + t321 * t368;
t127 = -t178 * t329 - t324 * t450;
t125 = -t178 * t324 + t329 * t450;
t123 = t176 * t330 + t177 * t325;
t122 = t174 * t330 + t175 * t325;
t116 = t172 * t330 + t173 * t325;
t111 = -pkin(11) * t188 + t428;
t110 = t142 * t329 + t396;
t109 = t140 * t329 - t396;
t108 = t142 * t324 - t395;
t107 = t140 * t324 + t395;
t106 = -pkin(11) * t172 + t429;
t105 = t138 * t331 + t326 * t450;
t102 = t117 * t331 + t178 * t326;
t101 = -pkin(4) * t450 + pkin(11) * t189 + t429;
t99 = t150 * t328 - t151 * t323;
t97 = t150 * t323 + t151 * t328;
t93 = -pkin(4) * t178 + pkin(11) * t173 - t428;
t92 = t134 * t329 - t148 * t324;
t91 = t133 * t329 + t152 * t324;
t90 = t134 * t324 + t148 * t329;
t89 = t133 * t324 - t152 * t329;
t88 = -pkin(3) * t199 + pkin(10) * t104;
t87 = t104 * t331 + t199 * t326;
t86 = t135 * t330 + t136 * t325;
t81 = pkin(3) * t248 + pkin(10) * t197 + t104;
t80 = t206 * t324 + t329 * t99;
t79 = -t206 * t329 + t324 * t99;
t74 = t125 * t330 + t127 * t325;
t73 = t124 * t330 + t126 * t325;
t70 = -t137 * t319 + t321 * t369;
t69 = t108 * t330 + t110 * t325;
t68 = t107 * t330 + t109 * t325;
t67 = t204 * t326 + t331 * t75;
t61 = -t116 * t319 + t321 * t370;
t60 = -t103 * t319 + t321 * t371;
t59 = -pkin(12) * t118 + t63;
t58 = -pkin(12) * t113 + t62;
t57 = t325 * t92 + t330 * t90;
t56 = t325 * t91 + t330 * t89;
t54 = t325 * t85 + t330 * t84;
t52 = t325 * t83 + t330 * t82;
t51 = t325 * t80 + t330 * t79;
t44 = -pkin(3) * t450 + pkin(10) * t138 + t101 * t330 + t111 * t325;
t42 = t325 * t72 + t330 * t71;
t41 = -t319 * t73 + t321 * t374;
t40 = -pkin(3) * t178 + pkin(10) * t117 + t106 * t325 + t330 * t93;
t39 = -pkin(4) * t161 + pkin(11) * t50;
t38 = t118 * t326 + t331 * t55;
t37 = t113 * t326 + t331 * t53;
t36 = -pkin(11) * t124 - t49;
t35 = -pkin(5) * t118 + t48;
t34 = -pkin(5) * t113 + t47;
t33 = -pkin(4) * t204 + pkin(11) * t126 + t50;
t32 = t326 * t96 + t331 * t43;
t30 = t325 * t50 + t432;
t26 = -t319 * t54 + t321 * t376;
t25 = t161 * t326 + t31 * t331;
t24 = -t319 * t52 + t321 * t377;
t23 = -pkin(12) * t96 - t28;
t22 = -t319 * t42 + t321 * t378;
t21 = -pkin(11) * t84 - t324 * t35 + t329 * t59;
t20 = -pkin(11) * t82 - t324 * t34 + t329 * t58;
t17 = -pkin(4) * t118 + pkin(11) * t85 + t324 * t59 + t329 * t35;
t16 = -pkin(4) * t113 + pkin(11) * t83 + t324 * t58 + t329 * t34;
t15 = -pkin(3) * t204 + pkin(10) * t75 + t325 * t36 + t33 * t330;
t14 = -pkin(11) * t71 + t23 * t329 + t436 * t96;
t13 = pkin(11) * t72 + t23 * t324 + t390 * t96;
t12 = -t30 * t319 + t321 * t375;
t11 = -pkin(3) * t161 + pkin(10) * t31 - pkin(11) * t433 + t330 * t39;
t9 = t18 * t330 + t19 * t325;
t8 = -pkin(3) * t118 + pkin(10) * t55 + t17 * t330 + t21 * t325;
t7 = -pkin(11) * t18 + (-pkin(12) * t329 + t436) * t28;
t6 = -pkin(3) * t113 + pkin(10) * t53 + t16 * t330 + t20 * t325;
t5 = t10 * t331 + t28 * t326;
t4 = -pkin(3) * t96 + pkin(10) * t43 + t13 * t330 + t14 * t325;
t3 = pkin(11) * t19 + (-pkin(12) * t324 + t390) * t28;
t2 = -t319 * t9 + t321 * t379;
t1 = -pkin(3) * t28 + pkin(10) * t10 + t3 * t330 + t325 * t7;
t27 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t408, 0, 0, 0, 0, 0, 0, (qJDD(2) * t332 - t327 * t333) * t320, (-qJDD(2) * t327 - t332 * t333) * t320, 0, t322 ^ 2 * t408 + (t332 * t273 + t327 * t274 - t447) * t320, 0, 0, 0, 0, 0, 0, t322 * (-t321 * t281 + t319 * t361) + (t238 * t332 + t272 * t327) * t320, t322 * (t321 * t278 + t319 * t362) + (t231 * t332 + t268 * t327) * t320, t322 * (t321 * t301 + t319 * t363) + (t228 * t332 + t241 * t327) * t320, t322 * (-t321 * t239 + t319 * t366) + (t155 * t332 + t165 * t327) * t320, 0, 0, 0, 0, 0, 0, t322 * (t321 * t212 + t319 * t365) + (t156 * t332 + t184 * t327) * t320, t322 * (t321 * t221 + t319 * t364) + (t160 * t332 + t186 * t327) * t320, t322 * (t321 * t196 + t319 * t368) + (t130 * t332 + t169 * t327) * t320, t322 * (t321 * t103 + t319 * t371) + (t327 * t87 + t332 * t60) * t320, 0, 0, 0, 0, 0, 0, t322 * (t321 * t116 + t319 * t370) + (t102 * t327 + t332 * t61) * t320, t322 * (t321 * t137 + t319 * t369) + (t105 * t327 + t332 * t70) * t320, t322 * (t319 * t374 + t321 * t73) + (t327 * t67 + t332 * t41) * t320, t322 * (t321 * t30 + t319 * t375) + (t12 * t332 + t25 * t327) * t320, 0, 0, 0, 0, 0, 0, t322 * (t319 * t377 + t321 * t52) + (t24 * t332 + t327 * t37) * t320, t322 * (t319 * t376 + t321 * t54) + (t26 * t332 + t327 * t38) * t320, t322 * (t319 * t378 + t321 * t42) + (t22 * t332 + t32 * t327) * t320, t322 * (t319 * t379 + t321 * t9) + (t2 * t332 + t327 * t5) * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t273, -t274, 0, 0, (t297 * t319 + t331 * t448) * t326, t321 * t300 + (t326 * t281 + t331 * t442) * t319, t321 * t279 + (t411 + t331 * (-t394 + t440)) * t319, (t298 * t319 - t326 * t448) * t331, t321 * t280 + (t326 * (t393 - t440) + t409) * t319, t321 * t382, pkin(2) * t238 - t208 * t321 + (pkin(9) * t272 + t239 * t331) * t319, pkin(2) * t231 - t209 * t321 + (pkin(9) * t268 - t239 * t326) * t319, pkin(2) * t228 + (pkin(9) * t241 + t165) * t319, pkin(2) * t155 + t165 * t435, t321 * t230 + (t326 * (t258 * t330 + t292 * t416) + t391) * t319, t321 * t195 + (t326 * (t233 * t330 - t235 * t325) - t331 * t270) * t319, t321 * t224 + (t326 * (-t277 * t325 + t445) - t331 * t236) * t319, t321 * t229 + (t326 * (t291 * t415 - t325 * t355) - t391) * t319, t321 * t225 + (t326 * (t276 * t330 + t421) + t331 * t232) * t319, t356 * t412 + t321 * t242 + (-t291 * t330 - t292 * t325) * t310 * t413, (-pkin(10) * t212 + t425) * t413 + (t325 * t336 - t330 * t338 + (t281 * t330 - t325 * t440 - t212) * pkin(3)) * t412 + t321 * t143 + pkin(2) * t156 + t184 * t435, pkin(2) * t160 + t321 * t154 + (t326 * (-pkin(10) * t221 + t424) + t331 * (-pkin(3) * t221 + t159) + pkin(9) * t186) * t319, pkin(2) * t130 + t321 * t81 + (t326 * (-pkin(10) * t196 - t103) - t196 * t438 + pkin(9) * t169) * t319, pkin(2) * t60 + t321 * t88 + (pkin(9) * t87 + t103 * t380) * t319, t321 * t123 + (t326 * (-t176 * t325 + t177 * t330) - t392) * t319, t321 * t74 + (t326 * (-t125 * t325 + t127 * t330) - t331 * t226) * t319, t321 * t146 + (t326 * (-t190 * t325 + t192 * t330) - t331 * t182) * t319, t321 * t122 + (t326 * (-t174 * t325 + t175 * t330) + t392) * t319, t321 * t147 + (t326 * (-t191 * t325 + t193 * t330) + t331 * t179) * t319, t321 * t168 + (t326 * (-t210 * t325 + t211 * t330) + t331 * t293) * t319, pkin(2) * t61 + t321 * t40 + (t326 * (-pkin(10) * t116 + t106 * t330 - t325 * t93) + t331 * (-pkin(3) * t116 - t358) + pkin(9) * t102) * t319, pkin(2) * t70 + t321 * t44 + (t326 * (-pkin(10) * t137 - t101 * t325 + t111 * t330) + t331 * (-pkin(3) * t137 - t381) + pkin(9) * t105) * t319, pkin(2) * t41 + t321 * t15 + (t326 * (-pkin(10) * t73 - t325 * t33 + t330 * t36) + t331 * (-pkin(3) * t73 - t437) + pkin(9) * t67) * t319, pkin(2) * t12 + t321 * t11 + (t326 * (-pkin(10) * t30 - pkin(11) * t432 - t325 * t39) + t331 * (-pkin(3) * t30 - t439) + pkin(9) * t25) * t319, t321 * t69 + (t326 * (-t108 * t325 + t110 * t330) - t331 * t141) * t319, t321 * t51 + (t326 * (-t325 * t79 + t330 * t80) - t331 * t97) * t319, t321 * t56 + (t326 * (-t325 * t89 + t330 * t91) - t331 * t131) * t319, t321 * t68 + (t326 * (-t107 * t325 + t109 * t330) + t331 * t139) * t319, t321 * t57 + (t326 * (-t325 * t90 + t330 * t92) - t331 * t132) * t319, t321 * t86 + (t326 * (-t135 * t325 + t136 * t330) - t331 * t170) * t319, pkin(2) * t24 + t321 * t6 + (t326 * (-pkin(10) * t52 - t16 * t325 + t20 * t330) + t331 * (-pkin(3) * t52 - t373) + pkin(9) * t37) * t319, pkin(2) * t26 + t321 * t8 + (t326 * (-pkin(10) * t54 - t17 * t325 + t21 * t330) + t331 * (-pkin(3) * t54 - t372) + pkin(9) * t38) * t319, pkin(2) * t22 + t321 * t4 + (t326 * (-pkin(10) * t42 - t13 * t325 + t14 * t330) + t331 * (-pkin(3) * t42 - t359) + pkin(9) * t32) * t319, pkin(2) * t2 + t321 * t1 + (t326 * (-pkin(10) * t9 - t3 * t325 + t330 * t7) + t331 * (-pkin(3) * t9 - t383) + pkin(9) * t5) * t319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t300, t279, t309, t280, t382, -t208, -t209, 0, 0, t230, t195, t224, t229, t225, t242, t143, t154, t81, t88, t123, t74, t146, t122, t147, t168, t40, t44, t15, t11, t69, t51, t56, t68, t57, t86, t6, t8, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, t270, t236, t417, -t232, -t356, -t158, -t159, 0, 0, t227, t226, t182, -t227, -t179, -t293, t358, t381, t437, t439, t141, t97, t131, -t139, t132, t170, t373, t372, t359, t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227, t226, t182, -t227, -t179, -t293, -t77, -t78, 0, 0, t141, t97, t131, -t139, t132, t170, t397, t398, t387, t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, t206, t152, -t207, -t148, t201, -t47, -t48, 0, 0;];
tauJ_reg  = t27;
