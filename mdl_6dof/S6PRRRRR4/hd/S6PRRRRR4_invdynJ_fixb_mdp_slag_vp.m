% Calculate vector of inverse dynamics joint torques for
% S6PRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6PRRRRR4_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRR4_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: pkin has to be [13x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6PRRRRR4_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:00:32
% EndTime: 2019-03-09 01:01:00
% DurationCPUTime: 21.66s
% Computational Cost: add. (11234->721), mult. (27686->1022), div. (0->0), fcn. (24011->18), ass. (0->314)
t762 = sin(pkin(7));
t770 = sin(qJ(3));
t775 = cos(qJ(3));
t808 = (pkin(3) * t770 - pkin(10) * t775) * t762;
t763 = sin(pkin(6));
t771 = sin(qJ(2));
t926 = t763 * t771;
t867 = qJD(1) * t926;
t989 = qJD(3) * t808 - t762 * t867;
t765 = cos(pkin(7));
t776 = cos(qJ(2));
t915 = t775 * t776;
t920 = t770 * t771;
t805 = -t765 * t920 + t915;
t681 = t805 * t763;
t929 = t762 * t770;
t748 = pkin(9) * t929;
t921 = t765 * t775;
t962 = pkin(2) * t921 - t748;
t988 = -qJD(1) * t681 + t962 * qJD(3);
t893 = qJD(2) * t775;
t865 = t762 * t893;
t735 = -qJD(4) + t865;
t984 = qJD(5) - t735;
t772 = cos(qJ(6));
t885 = qJD(6) * t772;
t894 = qJD(2) * t765;
t747 = qJD(3) + t894;
t774 = cos(qJ(4));
t769 = sin(qJ(4));
t895 = qJD(2) * t762;
t866 = t770 * t895;
t834 = t769 * t866;
t678 = t747 * t774 - t834;
t679 = t747 * t769 + t774 * t866;
t768 = sin(qJ(5));
t773 = cos(qJ(5));
t619 = -t773 * t678 + t679 * t768;
t977 = t619 * t772;
t987 = t885 + t977;
t922 = t765 * t770;
t928 = t762 * t775;
t901 = pkin(2) * t922 + pkin(9) * t928;
t690 = pkin(10) * t765 + t901;
t827 = -pkin(3) * t775 - pkin(10) * t770;
t691 = (-pkin(2) + t827) * t762;
t963 = t774 * t690 + t769 * t691;
t986 = qJD(4) * t963 + t988 * t769 - t774 * t989;
t889 = qJD(4) * t774;
t890 = qJD(4) * t769;
t985 = -t690 * t890 + t691 * t889 + t769 * t989 + t988 * t774;
t707 = -t774 * t765 + t769 * t929;
t891 = qJD(3) * t775;
t862 = t762 * t891;
t835 = t774 * t862;
t652 = -qJD(4) * t707 + t835;
t892 = qJD(3) * t770;
t863 = t762 * t892;
t983 = pkin(4) * t863 - pkin(11) * t652 - t986;
t874 = t774 * t929;
t708 = t765 * t769 + t874;
t860 = t769 * t891;
t653 = qJD(4) * t708 + t762 * t860;
t982 = -pkin(11) * t653 + t985;
t711 = pkin(9) * t895 + t867;
t766 = cos(pkin(6));
t897 = qJD(1) * t766;
t868 = t762 * t897;
t896 = qJD(1) * t776;
t722 = qJD(2) * pkin(2) + t763 * t896;
t935 = t722 * t765;
t625 = -t770 * t711 + t775 * (t868 + t935);
t697 = qJD(2) * t808;
t684 = t774 * t697;
t951 = pkin(10) + pkin(11);
t869 = qJD(4) * t951;
t916 = t774 * t775;
t981 = -t625 * t769 + t684 + (pkin(4) * t770 - pkin(11) * t916) * t895 + t774 * t869;
t836 = t769 * t865;
t907 = t774 * t625 + t769 * t697;
t980 = pkin(11) * t836 - t769 * t869 - t907;
t812 = t678 * t768 + t773 * t679;
t880 = qJDD(2) * t765;
t746 = qJDD(3) + t880;
t604 = qJD(2) * t835 - qJD(4) * t834 + qJDD(2) * t874 + t769 * t746 + t747 * t889;
t879 = qJDD(2) * t770;
t605 = -t774 * t746 + t747 * t890 + t762 * (qJD(2) * (t770 * t889 + t860) + t769 * t879);
t887 = qJD(5) * t773;
t888 = qJD(5) * t768;
t536 = t773 * t604 - t768 * t605 + t678 * t887 - t679 * t888;
t878 = qJDD(2) * t775;
t744 = t762 * t878;
t882 = qJD(2) * qJD(3);
t859 = t770 * t882;
t692 = t762 * t859 + qJDD(4) - t744;
t687 = qJDD(5) + t692;
t767 = sin(qJ(6));
t870 = t772 * t536 + t767 * t687 + t885 * t984;
t886 = qJD(6) * t767;
t519 = -t812 * t886 + t870;
t517 = t519 * t767;
t590 = t767 * t984 + t772 * t812;
t850 = t536 * t767 - t772 * t687;
t520 = qJD(6) * t590 + t850;
t537 = qJD(5) * t812 + t604 * t768 + t773 * t605;
t533 = qJDD(6) + t537;
t530 = t767 * t533;
t531 = t772 * t533;
t940 = t812 * t767;
t588 = -t772 * t984 + t940;
t883 = -qJD(6) - t619;
t976 = t883 * t767;
t979 = t687 * MDP(23) - t537 * MDP(22) - t619 ^ 2 * MDP(20) + (t619 * t984 + t536) * MDP(21) + (MDP(19) * t619 + MDP(20) * t812 + MDP(22) * t984 + MDP(30) * t883) * t812 + (t590 * t987 + t517) * MDP(26) + (-t590 * t812 - t883 * t987 + t530) * MDP(28) + (t588 * t812 - t883 * t976 + t531) * MDP(29) + (t519 * t772 - t767 * t520 - t588 * t987 + t590 * t976) * MDP(27);
t626 = t775 * t711 + t722 * t922 + t770 * t868;
t608 = pkin(10) * t747 + t626;
t743 = t765 * t897;
t636 = t743 + (qJD(2) * t827 - t722) * t762;
t562 = -t608 * t769 + t774 * t636;
t549 = -pkin(11) * t679 + t562;
t541 = -pkin(4) * t735 + t549;
t563 = t608 * t774 + t636 * t769;
t550 = pkin(11) * t678 + t563;
t945 = t550 * t768;
t521 = t541 * t773 - t945;
t514 = -pkin(5) * t984 - t521;
t978 = t514 * t619;
t712 = t768 * t769 - t773 * t774;
t975 = t984 * t712;
t713 = t768 * t774 + t769 * t773;
t904 = t984 * t713;
t974 = pkin(9) * qJDD(2) * t762 + (qJD(2) * t896 + qJDD(1) * t771) * t763 + qJD(3) * t868;
t918 = t771 * t775;
t919 = t770 * t776;
t807 = t765 * t918 + t919;
t680 = t807 * t763;
t861 = t765 * t892;
t902 = pkin(2) * t861 + pkin(9) * t862 - qJD(1) * t680;
t947 = sin(pkin(13));
t853 = t947 * t776;
t764 = cos(pkin(13));
t924 = t764 * t771;
t705 = t766 * t924 + t853;
t854 = t947 * t771;
t923 = t764 * t776;
t791 = -t766 * t923 + t854;
t927 = t763 * t764;
t873 = t762 * t927;
t610 = t705 * t775 + (-t765 * t791 - t873) * t770;
t706 = -t766 * t854 + t923;
t792 = t766 * t853 + t924;
t855 = t763 * t947;
t831 = t762 * t855;
t612 = t706 * t775 + (-t765 * t792 + t831) * t770;
t806 = t765 * t919 + t918;
t647 = t763 * t806 + t766 * t929;
t648 = t762 * t791 - t765 * t927;
t649 = t762 * t792 + t765 * t855;
t925 = t763 * t776;
t704 = -t762 * t925 + t765 * t766;
t761 = qJ(4) + qJ(5);
t756 = sin(t761);
t757 = cos(t761);
t973 = g(3) * (-t647 * t756 + t704 * t757) + g(2) * (-t610 * t756 + t648 * t757) + g(1) * (-t612 * t756 + t649 * t757);
t561 = pkin(5) * t812 + pkin(12) * t619;
t567 = t610 * t757 + t648 * t756;
t569 = t612 * t757 + t649 * t756;
t607 = -pkin(3) * t747 - t625;
t576 = -pkin(4) * t678 + t607;
t602 = t647 * t757 + t704 * t756;
t745 = qJDD(1) * t925;
t864 = qJD(2) * t926;
t833 = qJD(1) * t864;
t688 = qJDD(2) * pkin(2) + t745 - t833;
t881 = qJDD(1) * t766;
t857 = t762 * t881;
t788 = t688 * t922 - t711 * t892 + t770 * t857 + t775 * t974 + t891 * t935;
t552 = pkin(10) * t746 + t788;
t742 = t765 * t881;
t802 = t859 - t878;
t858 = t775 * t882;
t803 = t858 + t879;
t586 = t742 + (pkin(3) * t802 - pkin(10) * t803 - t688) * t762;
t580 = t774 * t586;
t782 = -qJD(4) * t563 - t769 * t552 + t580;
t509 = pkin(4) * t692 - pkin(11) * t604 + t782;
t801 = -t774 * t552 - t769 * t586 + t608 * t890 - t636 * t889;
t511 = -pkin(11) * t605 - t801;
t839 = -t768 * t509 - t773 * t511 - t541 * t887 + t550 * t888;
t972 = g(1) * t569 + g(2) * t567 + g(3) * t602 + t576 * t619 + t839;
t846 = -t690 * t769 + t774 * t691;
t585 = -pkin(4) * t928 - pkin(11) * t708 + t846;
t592 = -pkin(11) * t707 + t963;
t909 = t768 * t585 + t773 * t592;
t968 = qJD(5) * t909 + t982 * t768 - t773 * t983;
t967 = t585 * t887 - t592 * t888 + t768 * t983 + t982 * t773;
t738 = t951 * t769;
t739 = t951 * t774;
t810 = -t738 * t773 - t739 * t768;
t966 = qJD(5) * t810 - t768 * t981 + t773 * t980;
t662 = -t738 * t768 + t739 * t773;
t965 = qJD(5) * t662 + t768 * t980 + t773 * t981;
t830 = -t626 + (-t836 + t890) * pkin(4);
t906 = pkin(4) * t653 + t902;
t613 = -t647 * t769 + t704 * t774;
t614 = t647 * t774 + t704 * t769;
t557 = t613 * t768 + t614 * t773;
t961 = t765 * t915 - t920;
t646 = -t763 * t961 - t766 * t928;
t643 = t646 * t772;
t964 = -t557 * t767 + t643;
t944 = t550 * t773;
t522 = t541 * t768 + t944;
t515 = pkin(12) * t984 + t522;
t529 = pkin(5) * t619 - pkin(12) * t812 + t576;
t817 = t515 * t767 - t529 * t772;
t959 = t514 * t886 + t812 * t817;
t783 = -qJD(5) * t522 + t773 * t509 - t511 * t768;
t498 = -pkin(5) * t687 - t783;
t496 = t498 * t767;
t502 = t515 * t772 + t529 * t767;
t958 = t502 * t812 + t514 * t885 + t767 * t973 + t496;
t956 = -t576 * t812 + t783 - t973;
t946 = MDP(7) * t762;
t939 = t646 * t767;
t938 = t678 * t735;
t937 = t679 * t735;
t936 = t713 * t772;
t934 = t746 * MDP(9);
t933 = t756 * t762;
t932 = t757 * t767;
t931 = t757 * t772;
t777 = qJD(2) ^ 2;
t917 = t771 * t777;
t914 = qJDD(1) - g(3);
t913 = -pkin(5) * t863 + t968;
t908 = pkin(5) * t866 + t965;
t759 = t770 ^ 2;
t900 = -t775 ^ 2 + t759;
t884 = qJD(3) - t747;
t875 = t767 * t928;
t755 = -pkin(4) * t774 - pkin(3);
t497 = pkin(12) * t687 - t839;
t809 = t688 * t921 - t711 * t891 - t722 * t861 - t770 * t974 + t775 * t857;
t553 = -pkin(3) * t746 - t809;
t528 = pkin(4) * t605 + t553;
t500 = pkin(5) * t537 - pkin(12) * t536 + t528;
t852 = -t767 * t497 + t772 * t500;
t848 = t767 * t975 - t772 * t866;
t847 = t767 * t866 + t772 * t975;
t842 = t747 + t894;
t753 = pkin(4) * t768 + pkin(12);
t841 = pkin(4) * t679 + qJD(6) * t753 + t561;
t840 = t746 + t880;
t837 = t762 * t864;
t524 = t549 * t768 + t944;
t829 = pkin(4) * t888 - t524;
t525 = t549 * t773 - t945;
t828 = -pkin(4) * t887 + t525;
t826 = g(1) * t706 + g(2) * t705;
t639 = t773 * t707 + t708 * t768;
t640 = -t707 * t768 + t708 * t773;
t689 = t748 + (-pkin(2) * t775 - pkin(3)) * t765;
t641 = pkin(4) * t707 + t689;
t555 = pkin(5) * t639 - pkin(12) * t640 + t641;
t824 = -pkin(12) * t863 - qJD(6) * t555 - t967;
t539 = -pkin(12) * t928 + t909;
t559 = -qJD(5) * t639 + t652 * t773 - t653 * t768;
t560 = qJD(5) * t640 + t652 * t768 + t773 * t653;
t823 = -pkin(5) * t560 + pkin(12) * t559 + qJD(6) * t539 - t906;
t642 = pkin(5) * t712 - pkin(12) * t713 + t755;
t822 = pkin(12) * t866 - qJD(6) * t642 - t966;
t821 = -pkin(5) * t904 - pkin(12) * t975 + qJD(6) * t662 - t830;
t819 = t772 * t497 + t767 * t500;
t818 = -t753 * t533 + t978;
t816 = t557 * t772 + t939;
t814 = t585 * t773 - t592 * t768;
t813 = t613 * t773 - t614 * t768;
t615 = t640 * t767 + t772 * t928;
t786 = t791 * t775;
t609 = t705 * t770 + t765 * t786 + t775 * t873;
t787 = t792 * t775;
t611 = t706 * t770 + t765 * t787 - t775 * t831;
t797 = g(1) * t611 + g(2) * t609 + g(3) * t646;
t630 = -t705 * t922 - t786;
t632 = -t706 * t922 - t787;
t796 = g(1) * t632 + g(2) * t630 + g(3) * t681;
t795 = t713 * t885 - t848;
t794 = -t713 * t886 - t847;
t790 = -g(3) * t926 - t826;
t789 = -t498 - t973;
t785 = -pkin(10) * t692 - t607 * t735;
t780 = pkin(10) * qJD(4) * t735 - t553 + t797;
t758 = t762 ^ 2;
t754 = -pkin(4) * t773 - pkin(5);
t671 = -t722 * t762 + t743;
t644 = -t688 * t762 + t742;
t635 = t681 * t757 + t926 * t933;
t631 = t706 * t921 - t770 * t792;
t629 = t705 * t921 - t770 * t791;
t616 = t640 * t772 - t875;
t600 = t766 * t862 + (t805 * qJD(2) + qJD(3) * t961) * t763;
t599 = t766 * t863 + (qJD(2) * t807 + qJD(3) * t806) * t763;
t584 = t632 * t757 + t706 * t933;
t583 = t630 * t757 + t705 * t933;
t544 = qJD(4) * t613 + t600 * t774 + t769 * t837;
t543 = -qJD(4) * t614 - t600 * t769 + t774 * t837;
t538 = pkin(5) * t928 - t814;
t535 = -qJD(6) * t875 + t559 * t767 + t640 * t885 - t772 * t863;
t534 = -qJD(6) * t615 + t559 * t772 + t767 * t863;
t508 = qJD(5) * t557 - t543 * t773 + t544 * t768;
t507 = qJD(5) * t813 + t543 * t768 + t544 * t773;
t495 = -qJD(6) * t502 + t852;
t494 = -qJD(6) * t817 + t819;
t1 = [t914 * MDP(1) + (-t599 * t747 - t646 * t746) * MDP(10) + (-t600 * t747 - t647 * t746) * MDP(11) + (-t543 * t735 - t599 * t678 + t605 * t646 + t613 * t692) * MDP(17) + (t544 * t735 + t599 * t679 + t604 * t646 - t614 * t692) * MDP(18) + (-t508 * t984 + t537 * t646 + t599 * t619 + t687 * t813) * MDP(24) + (-t507 * t984 + t536 * t646 - t557 * t687 + t599 * t812) * MDP(25) + (-(-qJD(6) * t816 - t507 * t767 + t599 * t772) * t883 + t964 * t533 + t508 * t588 - t813 * t520) * MDP(31) + ((qJD(6) * t964 + t507 * t772 + t599 * t767) * t883 - t816 * t533 + t508 * t590 - t813 * t519) * MDP(32) + (MDP(10) * t802 + MDP(11) * t803) * t762 * t704 + ((qJDD(2) * t776 - t917) * MDP(3) + (-qJDD(2) * t771 - t776 * t777) * MDP(4) + (-MDP(10) * t775 + MDP(11) * t770) * t758 * t917) * t763; (t553 * t708 + t689 * t604 + t607 * t652 + t902 * t679 - t963 * t692 + t985 * t735 + t796 * t769) * MDP(18) + (t553 * t707 + t689 * t605 + t607 * t653 - t902 * t678 + t846 * t692 + t986 * t735 - t796 * t774) * MDP(17) + (g(1) * t631 + g(2) * t629 + g(3) * t680 - t901 * t746 - t988 * t747 - t788 * t765) * MDP(11) + (0.2e1 * (t770 * t878 - t882 * t900) * MDP(6) + (-pkin(2) * t803 - t770 * t833) * MDP(11) + (-pkin(2) * t802 + t775 * t833) * MDP(10) + (qJDD(2) * t759 + 0.2e1 * t770 * t858) * MDP(5)) * t758 + (t653 * t735 - t692 * t707) * MDP(15) + (-t652 * t735 + t692 * t708) * MDP(14) + (-t560 * t984 - t639 * t687) * MDP(22) + (t559 * t984 + t640 * t687) * MDP(21) + (t528 * t640 + t641 * t536 + t576 * t559 - t909 * t687 + t796 * t756 + t906 * t812 - t967 * t984) * MDP(25) + (-g(1) * t584 - g(2) * t583 - g(3) * t635 + t528 * t639 + t641 * t537 + t576 * t560 + t906 * t619 + t814 * t687 - t968 * t984) * MDP(24) + ((t521 * t892 - t775 * t783) * MDP(24) + (-t522 * t892 + t757 * t790 - t775 * t839) * MDP(25) + (t775 * t840 - t842 * t892) * MDP(8) + (-t692 * t775 - t735 * t892) * MDP(16) + (-t687 * t775 + t892 * t984) * MDP(23) + (t644 * t770 + t671 * t891) * MDP(11) + (-(-t608 * t889 + t580) * t775 + t562 * t892 + (-(-qJD(4) * t636 - t552) * t775 + t790) * t769) * MDP(17) + (-t644 * t775 + t671 * t892) * MDP(10) + (-t563 * t892 + t774 * t790 - t775 * t801) * MDP(18) + (t537 * t775 - t619 * t892) * MDP(22) + (-t604 * t775 + t679 * t892) * MDP(14) + (t605 * t775 + t678 * t892) * MDP(15) + (-t536 * t775 + t812 * t892) * MDP(21)) * t762 + (g(1) * t792 + g(2) * t791 - g(3) * t925 + t745) * MDP(3) + (-t914 * t926 + t826) * MDP(4) + qJDD(2) * MDP(2) + (-t536 * t639 - t537 * t640 - t559 * t619 - t560 * t812) * MDP(20) + (t536 * t640 + t559 * t812) * MDP(19) + (t746 * t962 - t902 * t747 + t809 * t765 - t796) * MDP(10) + t765 * t934 + (-t604 * t707 - t605 * t708 + t652 * t678 - t653 * t679) * MDP(13) + (t604 * t708 + t652 * t679) * MDP(12) + (-t519 * t615 - t520 * t616 - t534 * t588 - t535 * t590) * MDP(27) + (t519 * t616 + t534 * t590) * MDP(26) + (-(t539 * t772 + t555 * t767) * t533 - t494 * t639 - t502 * t560 + t538 * t519 + t498 * t616 + t514 * t534 - g(1) * (-t584 * t767 + t631 * t772) - g(2) * (-t583 * t767 + t629 * t772) - g(3) * (-t635 * t767 + t680 * t772) - (t767 * t823 + t772 * t824) * t883 + t913 * t590) * MDP(32) + (t519 * t639 + t533 * t616 - t534 * t883 + t560 * t590) * MDP(28) + (-t520 * t639 - t533 * t615 + t535 * t883 - t560 * t588) * MDP(29) + (t533 * t639 - t560 * t883) * MDP(30) + ((-t539 * t767 + t555 * t772) * t533 + t495 * t639 - t817 * t560 + t538 * t520 + t498 * t615 + t514 * t535 - g(1) * (t584 * t772 + t631 * t767) - g(2) * (t583 * t772 + t629 * t767) - g(3) * (t635 * t772 + t680 * t767) - (t767 * t824 - t772 * t823) * t883 + t913 * t588) * MDP(31) + (t770 * t840 + t842 * t891) * t946; t744 * MDP(8) + (t536 * t713 - t812 * t975) * MDP(19) + (-t536 * t712 - t537 * t713 + t619 * t975 - t812 * t904) * MDP(20) + (-pkin(3) * t604 - t626 * t679 - t735 * t907 - t769 * t780 + t774 * t785) * MDP(18) + (-pkin(3) * t605 + t626 * t678 + t684 * t735 + (-t625 * t735 + t785) * t769 + t780 * t774) * MDP(17) + t934 + (t528 * t713 + t755 * t536 - t576 * t975 - t662 * t687 - t797 * t756 + t830 * t812 - t966 * t984) * MDP(25) + (t687 * t713 - t975 * t984) * MDP(21) + (-t687 * t712 - t904 * t984) * MDP(22) + (-MDP(10) * t671 + MDP(16) * t735 - MDP(17) * t562 + MDP(18) * t563 - MDP(21) * t812 + MDP(22) * t619 - MDP(23) * t984 - MDP(24) * t521 + MDP(25) * t522 - MDP(8) * t884) * t866 + (t528 * t712 + t755 * t537 + t904 * t576 + t830 * t619 + t687 * t810 + t797 * t757 - t965 * t984) * MDP(24) + (t848 * t590 + t847 * t588 + (-t517 - t520 * t772 + (t588 * t767 - t590 * t772) * qJD(6)) * t713) * MDP(27) + (t626 * t747 + t797 + t809) * MDP(10) + (-MDP(5) * t770 * t775 + MDP(6) * t900) * t758 * t777 + ((t604 - t938) * t774 + (-t605 + t937) * t769) * MDP(13) + (t735 * t890 + t692 * t774 + (-t735 * t769 * t775 - t678 * t770) * t895) * MDP(15) + (g(1) * t612 + g(2) * t610 + g(3) * t647 + t625 * t747 - t671 * t865 - t788) * MDP(11) + (-t735 * t889 + t692 * t769 + (-t679 * t770 + t735 * t916) * t895) * MDP(14) + (t519 * t712 + t531 * t713 + t590 * t904 - t794 * t883) * MDP(28) + (-t520 * t712 - t530 * t713 - t588 * t904 + t795 * t883) * MDP(29) + (t533 * t712 - t883 * t904) * MDP(30) + ((t642 * t772 - t662 * t767) * t533 + t495 * t712 - t810 * t520 + t713 * t496 - g(1) * (-t611 * t931 + t612 * t767) - g(2) * (-t609 * t931 + t610 * t767) - g(3) * (-t646 * t931 + t647 * t767) - (t767 * t822 - t772 * t821) * t883 + t908 * t588 - t904 * t817 + t795 * t514) * MDP(31) + (-(t642 * t767 + t662 * t772) * t533 - t494 * t712 - t810 * t519 + t498 * t936 - g(1) * (t611 * t932 + t612 * t772) - g(2) * (t609 * t932 + t610 * t772) - g(3) * (t646 * t932 + t647 * t772) - (t767 * t821 + t772 * t822) * t883 + t908 * t590 - t904 * t502 + t794 * t514) * MDP(32) + (t519 * t936 + t590 * t794) * MDP(26) + (t604 * t769 - t774 * t937) * MDP(12) + (t884 * t893 + t879) * t946; (-t607 * t678 - t562 * t735 - g(1) * (-t612 * t774 - t649 * t769) - g(2) * (-t610 * t774 - t648 * t769) + g(3) * t614 + t801) * MDP(18) + (-t563 * t735 - t607 * t679 - g(1) * (-t612 * t769 + t649 * t774) - g(2) * (-t610 * t769 + t648 * t774) - g(3) * t613 + t782) * MDP(17) + (t604 + t938) * MDP(14) + (t524 * t984 + (-t619 * t679 + t687 * t773 - t888 * t984) * pkin(4) + t956) * MDP(24) + (t754 * t520 + t829 * t588 + (-t828 * t883 + t818) * t767 + (t841 * t883 + t789) * t772 + t959) * MDP(31) + (t754 * t519 + t818 * t772 + t829 * t590 - (t767 * t841 + t772 * t828) * t883 + t958) * MDP(32) + t692 * MDP(16) + (-t678 ^ 2 + t679 ^ 2) * MDP(13) + (-t605 - t937) * MDP(15) - t679 * t678 * MDP(12) + (t525 * t984 + (-t679 * t812 - t687 * t768 - t887 * t984) * pkin(4) + t972) * MDP(25) + t979; (t522 * t984 + t956) * MDP(24) + (t521 * t984 + t972) * MDP(25) + (-pkin(5) * t520 - t522 * t588 + (-pkin(12) * t533 - t521 * t883 + t978) * t767 + (-(-pkin(12) * qJD(6) - t561) * t883 + t789) * t772 + t959) * MDP(31) + (-pkin(5) * t519 - (t521 * t772 + t561 * t767) * t883 - t522 * t590 + t514 * t977 + (-t883 * t886 - t531) * pkin(12) + t958) * MDP(32) + t979; t590 * t588 * MDP(26) + (-t588 ^ 2 + t590 ^ 2) * MDP(27) + (-t588 * t883 + t870) * MDP(28) + (-t590 * t883 - t850) * MDP(29) + t533 * MDP(30) + (-t502 * t883 - t514 * t590 - g(1) * (-t569 * t767 + t611 * t772) - g(2) * (-t567 * t767 + t609 * t772) - g(3) * (-t602 * t767 + t643) + t852) * MDP(31) + (t817 * t883 + t514 * t588 - g(1) * (-t569 * t772 - t611 * t767) - g(2) * (-t567 * t772 - t609 * t767) - g(3) * (-t602 * t772 - t939) - t819) * MDP(32) + (-MDP(28) * t940 - MDP(29) * t590 - MDP(31) * t502 + MDP(32) * t817) * qJD(6);];
tau  = t1;
