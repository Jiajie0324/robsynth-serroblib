% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 11:33
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 11:31:10
% EndTime: 2019-05-05 11:32:53
% DurationCPUTime: 109.53s
% Computational Cost: add. (1364689->1228), mult. (2833095->1953), div. (0->0), fcn. (2345382->16), ass. (0->882)
t2076 = sin(qJ(4));
t2081 = cos(qJ(4));
t2072 = cos(pkin(7));
t2292 = qJD(2) * t2072;
t2238 = qJD(3) + t2292;
t2077 = sin(qJ(3));
t2069 = sin(pkin(7));
t2293 = qJD(2) * t2069;
t2252 = t2077 * t2293;
t2026 = t2076 * t2238 + t2081 * t2252;
t2137 = t2076 * t2252 - t2081 * t2238;
t2104 = t2026 * t2137;
t2082 = cos(qJ(3));
t2256 = qJDD(2) * t2069;
t2032 = -qJD(3) * t2252 + t2082 * t2256;
t2146 = -qJDD(4) + t2032;
t2311 = -t2104 - t2146;
t2319 = t2076 * t2311;
t2318 = t2081 * t2311;
t2074 = sin(qJ(6));
t2075 = sin(qJ(5));
t2080 = cos(qJ(5));
t1992 = t2080 * t2026 - t2075 * t2137;
t2254 = t2077 * qJDD(2);
t2291 = qJD(2) * t2082;
t2031 = (qJD(3) * t2291 + t2254) * t2069;
t2058 = qJDD(2) * t2072 + qJDD(3);
t1979 = -qJD(4) * t2137 + t2081 * t2031 + t2076 * t2058;
t2154 = -t2076 * t2031 + t2081 * t2058;
t2106 = -qJD(4) * t2026 + t2154;
t2236 = t2075 * t1979 - t2080 * t2106;
t1880 = -t1992 * qJD(5) - t2236;
t1879 = qJDD(6) - t1880;
t2079 = cos(qJ(6));
t2251 = t2069 * t2291;
t2053 = -qJD(4) + t2251;
t2148 = -qJD(5) + t2053;
t1962 = t1992 * t2074 + t2079 * t2148;
t1964 = t2079 * t1992 - t2074 * t2148;
t1892 = t1964 * t1962;
t2307 = t1879 - t1892;
t2317 = t2074 * t2307;
t1990 = t2026 * t2075 + t2080 * t2137;
t1924 = t1992 * t1990;
t2027 = -qJDD(5) + t2146;
t2306 = -t1924 - t2027;
t2316 = t2075 * t2306;
t2315 = t2079 * t2307;
t2314 = t2080 * t2306;
t1881 = -t1990 * qJD(5) + t2080 * t1979 + t2075 * t2106;
t1975 = t1990 * t2148;
t2313 = t1975 + t1881;
t2078 = sin(qJ(2));
t2083 = cos(qJ(2));
t2073 = cos(pkin(6));
t2070 = sin(pkin(6));
t2294 = g(3) - qJDD(1);
t2241 = t2070 * t2294;
t2068 = sin(pkin(13));
t2071 = cos(pkin(13));
t2242 = g(1) * t2068 - t2071 * g(2);
t2097 = t2073 * t2242 - t2241;
t2258 = t2071 * g(1) + t2068 * g(2);
t2001 = -t2078 * t2258 - t2083 * t2097;
t2084 = qJD(2) ^ 2;
t2295 = pkin(9) * t2069;
t2092 = qJDD(2) * pkin(2) + t2084 * t2295 - t2001;
t2045 = t2070 * t2242;
t2228 = t2073 * t2294 + t2045;
t2312 = -t2069 * t2228 + t2072 * t2092;
t2136 = t2137 ^ 2;
t2145 = t2148 ^ 2;
t2235 = t2238 ^ 2;
t2002 = t2078 * t2097 - t2083 * t2258;
t1947 = t2001 * t2078 + t2002 * t2083;
t1936 = t1947 * t2070;
t2065 = t2069 ^ 2;
t2271 = t2065 * t2084;
t2227 = qJD(2) * t2238;
t2310 = t2065 * (-t2072 * t2084 + t2227);
t2309 = t2068 * t2294;
t2308 = t2071 * t2294;
t2139 = t2078 * t2228;
t2138 = t2083 * t2228;
t1994 = -t2084 * pkin(2) + pkin(9) * t2256 + t2002;
t1894 = t2082 * t1994 + t2077 * t2312;
t2300 = pkin(3) * t2082;
t2231 = -pkin(10) * t2077 - t2300;
t2030 = t2231 * t2293;
t2089 = t2058 * pkin(10) + t2030 * t2251 + t1894;
t2087 = -pkin(3) * t2235 + t2089;
t2144 = t2069 * t2227;
t2042 = t2077 * t2144;
t2014 = t2032 - t2042;
t1954 = t2069 * t2092 + t2072 * t2228;
t2043 = t2082 * t2144;
t2011 = t2043 + t2031;
t2090 = -pkin(10) * t2011 - t1954;
t2088 = -pkin(3) * t2014 + t2090;
t1797 = t2076 * t2088 + t2081 * t2087;
t2005 = -pkin(4) * t2053 - pkin(11) * t2026;
t1751 = -pkin(4) * t2136 + pkin(11) * t2106 + t2053 * t2005 + t1797;
t1796 = t2076 * t2087 - t2081 * t2088;
t2016 = t2137 * t2053;
t2305 = t2016 - t1979;
t2086 = pkin(4) * t2311 + pkin(11) * t2305 - t1796;
t1663 = t2080 * t1751 + t2075 * t2086;
t1914 = pkin(5) * t1990 - pkin(12) * t1992;
t1632 = -pkin(5) * t2145 - t2027 * pkin(12) - t1990 * t1914 + t1663;
t2259 = t2312 * t2082;
t1873 = -t2058 * pkin(3) - t2235 * pkin(10) + (t2030 * t2293 + t1994) * t2077 - t2259;
t1800 = -t2106 * pkin(4) - t2136 * pkin(11) + t2026 * t2005 + t1873;
t2135 = t1992 * t2148;
t1696 = -t2313 * pkin(12) + (-t1880 - t2135) * pkin(5) + t1800;
t1578 = t1632 * t2074 - t2079 * t1696;
t1579 = t1632 * t2079 + t1696 * t2074;
t1521 = t2074 * t1578 + t2079 * t1579;
t1943 = t2016 + t1979;
t2268 = t2076 * t2026;
t1959 = (t2081 * t2137 - t2268) * t2053;
t2304 = t2077 * t1959 + t2082 * t2146;
t2303 = -t2068 * t2242 - t2071 * t2258;
t2302 = -t2068 * t2258 + t2071 * t2242;
t1960 = t1962 ^ 2;
t1961 = t1964 ^ 2;
t1987 = qJD(6) + t1990;
t1986 = t1987 ^ 2;
t1988 = t1990 ^ 2;
t1989 = t1992 ^ 2;
t2025 = t2026 ^ 2;
t2048 = t2053 ^ 2;
t2301 = pkin(3) * t2077;
t1662 = t1751 * t2075 - t2080 * t2086;
t1580 = -t1662 * t2080 + t1663 * t2075;
t2299 = pkin(4) * t1580;
t1842 = t1992 * t2053 + t2236;
t1845 = -t1975 + t1881;
t1743 = -t1842 * t2075 - t1845 * t2080;
t2298 = pkin(4) * t1743;
t2297 = pkin(5) * t2075;
t2296 = pkin(8) * t2073;
t2290 = t1580 * t2076;
t2289 = t1580 * t2081;
t2288 = t1800 * t2075;
t2287 = t1800 * t2080;
t1806 = t1879 + t1892;
t2286 = t1806 * t2074;
t2285 = t1806 * t2079;
t2284 = t1873 * t2076;
t2283 = t1873 * t2081;
t1904 = -t1924 + t2027;
t2282 = t1904 * t2075;
t2281 = t1904 * t2080;
t1972 = -t2104 + t2146;
t2280 = t1972 * t2076;
t2279 = t1972 * t2081;
t2278 = t1987 * t2074;
t2277 = t1987 * t2079;
t2066 = t2077 ^ 2;
t2067 = t2082 ^ 2;
t2257 = t2066 + t2067;
t2017 = t2238 * t2257 * t2293;
t2276 = t2017 * t2078;
t2052 = t2077 * t2082 * t2271;
t2028 = -t2052 + t2058;
t2275 = t2028 * t2077;
t2274 = t2028 * t2082;
t2029 = t2052 + t2058;
t2273 = t2029 * t2077;
t2272 = t2029 * t2082;
t2270 = t2069 * t2058;
t2269 = t2069 * t2083;
t1631 = t2027 * pkin(5) - pkin(12) * t2145 + t1914 * t1992 + t1662;
t1628 = t2074 * t1631;
t1933 = -t2016 * t2081 - t2076 * t2106;
t2267 = t2077 * t1933;
t1935 = t1979 * t2081 + t2053 * t2268;
t2266 = t2077 * t1935;
t2265 = t2077 * t1954;
t1629 = t2079 * t1631;
t2263 = t2081 * t2026;
t2262 = t2082 * t1954;
t2260 = -pkin(5) * t1631 + pkin(12) * t1521;
t2255 = t2070 * qJDD(2);
t2253 = -pkin(5) * t2080 - pkin(4);
t2250 = t2075 * t1892;
t2249 = t2080 * t1892;
t2248 = t2077 * t1924;
t2247 = t2082 * t1924;
t2246 = t2066 * t2271;
t2245 = t2067 * t2271;
t1878 = -t1961 - t1986;
t1735 = -t1878 * t2074 - t2285;
t2174 = -t2079 * t1881 + t2074 * t2027;
t1785 = (qJD(6) + t1987) * t1962 + t2174;
t2244 = pkin(5) * t1785 + pkin(12) * t1735 + t1628;
t1867 = -t1986 - t1960;
t1730 = t1867 * t2079 - t2317;
t2237 = -t2074 * t1881 - t2079 * t2027;
t1819 = -qJD(6) * t1964 + t2237;
t1908 = t1964 * t1987;
t1782 = t1819 - t1908;
t2243 = pkin(5) * t1782 + pkin(12) * t1730 - t1629;
t1581 = t1662 * t2075 + t2080 * t1663;
t1703 = t1796 * t2076 + t2081 * t1797;
t1781 = (-qJD(6) + t1987) * t1964 + t2237;
t1820 = -qJD(6) * t1962 - t2174;
t1907 = t1987 * t1962;
t1784 = t1820 + t1907;
t1694 = t1781 * t2079 + t1784 * t2074;
t1858 = t1960 + t1961;
t2234 = pkin(5) * t1858 + pkin(12) * t1694 + t1521;
t1495 = t1521 * t2075 - t1631 * t2080;
t2233 = pkin(4) * t1495 + t2260;
t1955 = -t1989 - t2145;
t1859 = t1955 * t2080 + t2282;
t2232 = pkin(4) * t1859 - t1663;
t2022 = -t2246 - t2235;
t1993 = -t2022 * t2077 - t2274;
t2230 = pkin(9) * t1993 - t2265;
t2035 = -t2235 - t2245;
t2000 = t2035 * t2082 - t2273;
t2229 = pkin(9) * t2000 + t2262;
t1496 = t1521 * t2080 + t1631 * t2075;
t1447 = t1495 * t2081 + t1496 * t2076;
t1448 = -t1495 * t2076 + t1496 * t2081;
t1520 = -t1578 * t2079 + t1579 * t2074;
t2225 = t1448 * t2077 - t1520 * t2082;
t1415 = -t2069 * t1447 + t2072 * t2225;
t1431 = t1448 * t2082 + t1520 * t2077;
t2226 = t1415 * t2083 + t1431 * t2078;
t1526 = t1581 * t2076 + t2289;
t1527 = t1581 * t2081 - t2290;
t2217 = t1527 * t2077 - t1800 * t2082;
t1457 = -t2069 * t1526 + t2072 * t2217;
t1512 = t1527 * t2082 + t1800 * t2077;
t2224 = t1457 * t2083 + t1512 * t2078;
t1655 = t1694 * t2075 + t1858 * t2080;
t1656 = t1694 * t2080 - t1858 * t2075;
t1569 = t1655 * t2081 + t1656 * t2076;
t1570 = -t1655 * t2076 + t1656 * t2081;
t1692 = t1781 * t2074 - t1784 * t2079;
t2212 = t1570 * t2077 - t1692 * t2082;
t1501 = -t2069 * t1569 + t2072 * t2212;
t1538 = t1570 * t2082 + t1692 * t2077;
t2223 = t1501 * t2083 + t1538 * t2078;
t1783 = t1820 - t1907;
t1695 = t1782 * t2079 - t1783 * t2074;
t1891 = t1961 - t1960;
t1666 = t1695 * t2075 - t1891 * t2080;
t1667 = t1695 * t2080 + t1891 * t2075;
t1582 = t1666 * t2081 + t1667 * t2076;
t1583 = -t1666 * t2076 + t1667 * t2081;
t1693 = t1782 * t2074 + t1783 * t2079;
t2210 = t1583 * t2077 - t1693 * t2082;
t1508 = -t2069 * t1582 + t2072 * t2210;
t1549 = t1583 * t2082 + t1693 * t2077;
t2222 = t1508 * t2083 + t1549 * t2078;
t1669 = t1730 * t2075 + t1782 * t2080;
t1670 = t1730 * t2080 - t1782 * t2075;
t1587 = t1669 * t2081 + t1670 * t2076;
t1588 = -t1669 * t2076 + t1670 * t2081;
t1729 = t1867 * t2074 + t2315;
t2209 = t1588 * t2077 - t1729 * t2082;
t1511 = -t2069 * t1587 + t2072 * t2209;
t1559 = t1588 * t2082 + t1729 * t2077;
t2221 = t1511 * t2083 + t1559 * t2078;
t1671 = t1735 * t2075 + t1785 * t2080;
t1672 = t1735 * t2080 - t1785 * t2075;
t1589 = t1671 * t2081 + t1672 * t2076;
t1590 = -t1671 * t2076 + t1672 * t2081;
t1734 = t1878 * t2079 - t2286;
t2208 = t1590 * t2077 - t1734 * t2082;
t1516 = -t2069 * t1589 + t2072 * t2208;
t1560 = t1590 * t2082 + t1734 * t2077;
t2220 = t1516 * t2083 + t1560 * t2078;
t1903 = -t1961 + t1986;
t1759 = -t1903 * t2074 + t2315;
t1681 = t1759 * t2075 - t1784 * t2080;
t1683 = t1759 * t2080 + t1784 * t2075;
t1600 = t1681 * t2081 + t1683 * t2076;
t1602 = -t1681 * t2076 + t1683 * t2081;
t1757 = t1903 * t2079 + t2317;
t2207 = t1602 * t2077 - t1757 * t2082;
t1524 = -t2069 * t1600 + t2072 * t2207;
t1562 = t1602 * t2082 + t1757 * t2077;
t2219 = t1524 * t2083 + t1562 * t2078;
t1902 = t1960 - t1986;
t1760 = t1902 * t2079 - t2286;
t1780 = -t1819 - t1908;
t1682 = t1760 * t2075 + t1780 * t2080;
t1684 = t1760 * t2080 - t1780 * t2075;
t1601 = t1682 * t2081 + t1684 * t2076;
t1603 = -t1682 * t2076 + t1684 * t2081;
t1758 = t1902 * t2074 + t2285;
t2206 = t1603 * t2077 - t1758 * t2082;
t1525 = -t2069 * t1601 + t2072 * t2206;
t1563 = t1603 * t2082 + t1758 * t2077;
t2218 = t1525 * t2083 + t1563 * t2078;
t1770 = -t1819 * t2074 + t1962 * t2277;
t1721 = t1770 * t2075 + t2249;
t1723 = t1770 * t2080 - t2250;
t1641 = t1721 * t2081 + t1723 * t2076;
t1643 = -t1721 * t2076 + t1723 * t2081;
t1769 = -t2079 * t1819 - t1962 * t2278;
t2201 = t1643 * t2077 + t1769 * t2082;
t1552 = -t2069 * t1641 + t2072 * t2201;
t1612 = t1643 * t2082 - t1769 * t2077;
t2216 = t1552 * t2083 + t1612 * t2078;
t1772 = t1820 * t2079 - t1964 * t2278;
t1722 = t1772 * t2075 - t2249;
t1724 = t1772 * t2080 + t2250;
t1642 = t1722 * t2081 + t1724 * t2076;
t1644 = -t1722 * t2076 + t1724 * t2081;
t1771 = t1820 * t2074 + t1964 * t2277;
t2200 = t1644 * t2077 - t1771 * t2082;
t1553 = -t2069 * t1642 + t2072 * t2200;
t1613 = t1644 * t2082 + t1771 * t2077;
t2215 = t1553 * t2083 + t1613 * t2078;
t1745 = -t1842 * t2080 + t1845 * t2075;
t1657 = t1743 * t2081 + t1745 * t2076;
t1659 = -t1743 * t2076 + t1745 * t2081;
t1886 = -t1988 - t1989;
t2196 = t1659 * t2077 - t1886 * t2082;
t1566 = -t2069 * t1657 + t2072 * t2196;
t1634 = t1659 * t2082 + t1886 * t2077;
t2214 = t1566 * t2083 + t1634 * t2078;
t1841 = (0.2e1 * qJD(5) - t2053) * t1992 + t2236;
t1744 = -t1841 * t2075 + t2080 * t2313;
t1746 = -t1841 * t2080 - t2075 * t2313;
t1658 = t1744 * t2081 + t1746 * t2076;
t1660 = -t1744 * t2076 + t1746 * t2081;
t1923 = t1989 - t1988;
t2195 = t1660 * t2077 - t1923 * t2082;
t1568 = -t2069 * t1658 + t2072 * t2195;
t1648 = t1660 * t2082 + t1923 * t2077;
t2213 = t1568 * t2083 + t1648 * t2078;
t1830 = (-t1962 * t2079 + t1964 * t2074) * t1987;
t1761 = t1830 * t2075 - t1879 * t2080;
t1762 = t1830 * t2080 + t1879 * t2075;
t1676 = t1761 * t2081 + t1762 * t2076;
t1677 = -t1761 * t2076 + t1762 * t2081;
t1829 = (-t1962 * t2074 - t1964 * t2079) * t1987;
t2194 = t1677 * t2077 - t1829 * t2082;
t1572 = -t2069 * t1676 + t2072 * t2194;
t1633 = t1677 * t2082 + t1829 * t2077;
t2211 = t1572 * t2083 + t1633 * t2078;
t1702 = -t1796 * t2081 + t1797 * t2076;
t2193 = t1703 * t2077 - t1873 * t2082;
t1610 = -t2069 * t1702 + t2072 * t2193;
t1679 = t1703 * t2082 + t1873 * t2077;
t2205 = t1610 * t2083 + t1679 * t2078;
t1911 = -t2145 - t1988;
t1833 = t1911 * t2075 + t2314;
t1834 = t1911 * t2080 - t2316;
t1732 = t1833 * t2081 + t1834 * t2076;
t1733 = -t1833 * t2076 + t1834 * t2081;
t2191 = t1733 * t2077 - t1841 * t2082;
t1624 = -t2069 * t1732 + t2072 * t2191;
t1699 = t1733 * t2082 + t1841 * t2077;
t2204 = t1624 * t2083 + t1699 * t2078;
t2102 = t2075 * t1975;
t1836 = t2080 * t1880 - t2102;
t2100 = t2080 * t1975;
t1837 = -t2075 * t1880 - t2100;
t1738 = t1836 * t2081 + t1837 * t2076;
t1740 = -t1836 * t2076 + t1837 * t2081;
t2143 = t1740 * t2077 + t2247;
t1639 = -t2069 * t1738 + t2072 * t2143;
t1714 = t1740 * t2082 - t2248;
t2203 = t1639 * t2083 + t1714 * t2078;
t2101 = t2080 * t2135;
t1838 = t2075 * t1881 - t2101;
t2103 = t2075 * t2135;
t1839 = t2080 * t1881 + t2103;
t1739 = t1838 * t2081 + t1839 * t2076;
t1741 = -t1838 * t2076 + t1839 * t2081;
t2142 = t1741 * t2077 - t2247;
t1640 = -t2069 * t1739 + t2072 * t2142;
t1715 = t1741 * t2082 + t2248;
t2202 = t1640 * t2083 + t1715 * t2078;
t1860 = -t1955 * t2075 + t2281;
t1765 = t1859 * t2081 + t1860 * t2076;
t1766 = -t1859 * t2076 + t1860 * t2081;
t2188 = t1766 * t2077 - t2082 * t2313;
t1646 = -t2069 * t1765 + t2072 * t2188;
t1708 = t1766 * t2082 + t2077 * t2313;
t2199 = t1646 * t2083 + t1708 * t2078;
t1971 = -t1989 + t2145;
t1863 = t1971 * t2080 + t2316;
t1865 = -t1971 * t2075 + t2314;
t1776 = t1863 * t2081 + t1865 * t2076;
t1778 = -t1863 * t2076 + t1865 * t2081;
t2187 = t1778 * t2077 - t1845 * t2082;
t1651 = -t2069 * t1776 + t2072 * t2187;
t1712 = t1778 * t2082 + t1845 * t2077;
t2198 = t1651 * t2083 + t1712 * t2078;
t1970 = t1988 - t2145;
t1864 = t1970 * t2075 - t2281;
t1866 = t1970 * t2080 + t2282;
t1777 = t1864 * t2081 + t1866 * t2076;
t1779 = -t1864 * t2076 + t1866 * t2081;
t2186 = t1779 * t2077 + t1842 * t2082;
t1652 = -t2069 * t1777 + t2072 * t2186;
t1713 = t1779 * t2082 - t1842 * t2077;
t2197 = t1652 * t2083 + t1713 * t2078;
t1898 = t2102 + t2101;
t1899 = t2100 - t2103;
t1821 = t1898 * t2081 + t1899 * t2076;
t1822 = -t1898 * t2076 + t1899 * t2081;
t2180 = t1822 * t2077 + t2027 * t2082;
t1718 = -t2069 * t1821 + t2072 * t2180;
t1810 = t1822 * t2082 - t2027 * t2077;
t2192 = t1718 * t2083 + t1810 * t2078;
t1942 = (-qJD(4) - t2053) * t2026 + t2154;
t1869 = t1942 * t2076 + t2081 * t2305;
t1871 = t1942 * t2081 - t2076 * t2305;
t1969 = t2136 + t2025;
t2176 = t1871 * t2077 + t1969 * t2082;
t1755 = -t2069 * t1869 + t2072 * t2176;
t1824 = t1871 * t2082 - t1969 * t2077;
t2190 = t1755 * t2083 + t1824 * t2078;
t2015 = t2026 * t2053;
t1941 = t2015 + t2106;
t1868 = t1941 * t2076 + t1943 * t2081;
t1870 = t1941 * t2081 - t1943 * t2076;
t1996 = t2025 - t2136;
t2177 = t1870 * t2077 - t1996 * t2082;
t1764 = -t2069 * t1868 + t2072 * t2177;
t1840 = t1870 * t2082 + t1996 * t2077;
t2189 = t1764 * t2083 + t1840 * t2078;
t1893 = t2077 * t1994 - t2259;
t2173 = -t2082 * t1893 + t2077 * t1894;
t1790 = t2069 * t1954 + t2072 * t2173;
t1816 = t1893 * t2077 + t1894 * t2082;
t2185 = t1790 * t2083 + t1816 * t2078;
t1984 = -t2048 - t2136;
t1900 = t1984 * t2076 + t2318;
t1901 = t1984 * t2081 - t2319;
t2172 = t1901 * t2077 + t1941 * t2082;
t1792 = -t2069 * t1900 + t2072 * t2172;
t1853 = t1901 * t2082 - t1941 * t2077;
t2184 = t1792 * t2083 + t1853 * t2078;
t1997 = -t2025 - t2048;
t1912 = t1997 * t2081 + t2280;
t1913 = -t1997 * t2076 + t2279;
t2171 = t1913 * t2077 - t1943 * t2082;
t1799 = -t2069 * t1912 + t2072 * t2171;
t1857 = t1913 * t2082 + t1943 * t2077;
t2183 = t1799 * t2083 + t1857 * t2078;
t2009 = -t2025 + t2048;
t1919 = t2009 * t2081 + t2319;
t1921 = -t2009 * t2076 + t2318;
t2170 = t1921 * t2077 + t2082 * t2305;
t1803 = -t2069 * t1919 + t2072 * t2170;
t1861 = t1921 * t2082 - t2077 * t2305;
t2182 = t1803 * t2083 + t1861 * t2078;
t2008 = t2136 - t2048;
t1920 = t2008 * t2076 - t2279;
t1922 = t2008 * t2081 + t2280;
t1940 = t2015 - t2106;
t2169 = t1922 * t2077 + t1940 * t2082;
t1804 = -t2069 * t1920 + t2072 * t2169;
t1862 = t1922 * t2082 - t1940 * t2077;
t2181 = t1804 * t2083 + t1862 * t2078;
t1932 = -t2016 * t2076 + t2081 * t2106;
t2095 = t2082 * t2104;
t2094 = t2072 * t2095;
t1827 = -t2069 * t1932 + t2072 * t2267 + t2094;
t2096 = t2077 * t2104;
t1889 = t2082 * t1933 - t2096;
t2179 = t1827 * t2083 + t1889 * t2078;
t1934 = t1979 * t2076 - t2053 * t2263;
t1828 = -t2069 * t1934 + t2072 * t2266 - t2094;
t1890 = t2082 * t1935 + t2096;
t2178 = t1828 * t2083 + t1890 * t2078;
t1958 = (t2076 * t2137 + t2263) * t2053;
t1877 = -t2069 * t1958 + t2072 * t2304;
t1931 = t2082 * t1959 - t2077 * t2146;
t2175 = t1877 * t2083 + t1931 * t2078;
t2041 = t2257 * t2271;
t2012 = -t2043 + t2031;
t2013 = t2032 + t2042;
t2159 = -t2012 * t2082 + t2013 * t2077;
t1929 = t2069 * t2041 + t2072 * t2159;
t1956 = t2012 * t2077 + t2013 * t2082;
t2168 = t1929 * t2083 + t1956 * t2078;
t2040 = (t2066 - t2067) * t2271;
t2160 = t2011 * t2082 + t2014 * t2077;
t1930 = -t2069 * t2040 + t2072 * t2160;
t1957 = -t2011 * t2077 + t2014 * t2082;
t2167 = t1930 * t2083 + t1957 * t2078;
t2010 = (t2254 + (0.2e1 * qJD(3) + t2292) * t2291) * t2069;
t2158 = t2022 * t2082 - t2275;
t1939 = -t2069 * t2010 + t2072 * t2158;
t2166 = t1939 * t2083 + t1993 * t2078;
t2033 = t2235 - t2246;
t2156 = t2033 * t2082 + t2273;
t1951 = -t2069 * t2012 + t2072 * t2156;
t1998 = -t2033 * t2077 + t2272;
t2165 = t1951 * t2083 + t1998 * t2078;
t2034 = -t2235 + t2245;
t2157 = t2034 * t2077 + t2274;
t1952 = -t2069 * t2013 + t2072 * t2157;
t1999 = t2034 * t2082 - t2275;
t2164 = t1952 * t2083 + t1999 * t2078;
t2155 = t2035 * t2077 + t2272;
t1953 = t2069 * t2014 + t2072 * t2155;
t2163 = t1953 * t2083 + t2000 * t2078;
t2093 = t2069 * t2271 + t2072 * t2144;
t1980 = (t2072 * t2032 - t2077 * t2093) * t2082;
t2003 = -t2077 * t2032 - t2067 * t2144;
t2162 = t1980 * t2083 + t2003 * t2078;
t1983 = (t2072 * t2031 + t2082 * t2093) * t2077;
t2004 = t2082 * t2031 - t2066 * t2144;
t2161 = t1983 * t2083 + t2004 * t2078;
t1946 = t2083 * t2001 - t2078 * t2002;
t2151 = qJDD(2) * t2078 + t2083 * t2084;
t2038 = t2151 * t2073;
t2049 = qJDD(2) * t2083 - t2078 * t2084;
t2153 = t2038 * t2071 + t2049 * t2068;
t2152 = t2038 * t2068 - t2049 * t2071;
t2150 = pkin(4) * t1671 + t2244;
t2149 = pkin(4) * t1669 + t2243;
t2147 = pkin(4) * t1833 - t1662;
t2141 = pkin(4) * t1655 + t2234;
t1426 = pkin(11) * t1496 + (-pkin(12) * t2075 + t2253) * t1520;
t1433 = -pkin(11) * t1495 + (-pkin(12) * t2080 + t2297) * t1520;
t1398 = -pkin(3) * t1520 + pkin(10) * t1448 + t1426 * t2081 + t1433 * t2076;
t1414 = t2072 * t1447 + t2069 * t2225;
t1399 = -pkin(10) * t1447 - t1426 * t2076 + t1433 * t2081;
t1421 = -pkin(3) * t1447 - t2233;
t2118 = pkin(9) * t1431 + t1399 * t2077 + t1421 * t2082;
t1380 = -pkin(2) * t1414 - t2069 * t1398 + t2072 * t2118;
t1387 = t2082 * t1399 - t2077 * t1421 + (-t1414 * t2069 - t1415 * t2072) * pkin(9);
t1401 = -t1415 * t2078 + t1431 * t2083;
t2134 = pkin(8) * t1401 + t1380 * t2083 + t1387 * t2078;
t1504 = -pkin(12) * t1692 - t1520;
t1463 = pkin(11) * t1656 + t2075 * t1504 + t1692 * t2253;
t1475 = -pkin(11) * t1655 + t1504 * t2080 + t1692 * t2297;
t1429 = -pkin(3) * t1692 + pkin(10) * t1570 + t1463 * t2081 + t1475 * t2076;
t1500 = t2072 * t1569 + t2069 * t2212;
t1430 = -pkin(10) * t1569 - t1463 * t2076 + t1475 * t2081;
t1459 = -pkin(3) * t1569 - t2141;
t2117 = pkin(9) * t1538 + t1430 * t2077 + t1459 * t2082;
t1397 = -pkin(2) * t1500 - t2069 * t1429 + t2072 * t2117;
t1408 = t2082 * t1430 - t2077 * t1459 + (-t1500 * t2069 - t1501 * t2072) * pkin(9);
t1460 = -t1501 * t2078 + t1538 * t2083;
t2133 = pkin(8) * t1460 + t1397 * t2083 + t1408 * t2078;
t1555 = -pkin(5) * t1729 + t1578;
t1606 = -pkin(12) * t1729 + t1628;
t1485 = -pkin(4) * t1729 + pkin(11) * t1670 + t1555 * t2080 + t1606 * t2075;
t1497 = -pkin(11) * t1669 - t1555 * t2075 + t1606 * t2080;
t1432 = -pkin(3) * t1729 + pkin(10) * t1588 + t1485 * t2081 + t1497 * t2076;
t1510 = t2072 * t1587 + t2069 * t2209;
t1437 = -pkin(10) * t1587 - t1485 * t2076 + t1497 * t2081;
t1502 = -pkin(3) * t1587 - t2149;
t2116 = pkin(9) * t1559 + t1437 * t2077 + t1502 * t2082;
t1403 = -pkin(2) * t1510 - t2069 * t1432 + t2072 * t2116;
t1412 = t2082 * t1437 - t2077 * t1502 + (-t1510 * t2069 - t1511 * t2072) * pkin(9);
t1474 = -t1511 * t2078 + t1559 * t2083;
t2132 = pkin(8) * t1474 + t1403 * t2083 + t1412 * t2078;
t1556 = -pkin(5) * t1734 + t1579;
t1607 = -pkin(12) * t1734 + t1629;
t1486 = -pkin(4) * t1734 + pkin(11) * t1672 + t1556 * t2080 + t1607 * t2075;
t1498 = -pkin(11) * t1671 - t1556 * t2075 + t1607 * t2080;
t1434 = -pkin(3) * t1734 + pkin(10) * t1590 + t1486 * t2081 + t1498 * t2076;
t1515 = t2072 * t1589 + t2069 * t2208;
t1438 = -pkin(10) * t1589 - t1486 * t2076 + t1498 * t2081;
t1503 = -pkin(3) * t1589 - t2150;
t2115 = pkin(9) * t1560 + t1438 * t2077 + t1503 * t2082;
t1405 = -pkin(2) * t1515 - t2069 * t1434 + t2072 * t2115;
t1413 = t2082 * t1438 - t2077 * t1503 + (-t1515 * t2069 - t1516 * t2072) * pkin(9);
t1476 = -t1516 * t2078 + t1560 * t2083;
t2131 = pkin(8) * t1476 + t1405 * t2083 + t1413 * t2078;
t1561 = -pkin(4) * t1800 + pkin(11) * t1581;
t1455 = -pkin(3) * t1800 + pkin(10) * t1527 - pkin(11) * t2290 + t1561 * t2081;
t1456 = t2072 * t1526 + t2069 * t2217;
t1458 = -pkin(10) * t1526 - pkin(11) * t2289 - t1561 * t2076;
t1484 = -pkin(3) * t1526 - t2299;
t2114 = pkin(9) * t1512 + t1458 * t2077 + t1484 * t2082;
t1407 = -pkin(2) * t1456 - t2069 * t1455 + t2072 * t2114;
t1409 = t2082 * t1458 - t2077 * t1484 + (-t1456 * t2069 - t1457 * t2072) * pkin(9);
t1439 = -t1457 * t2078 + t1512 * t2083;
t2130 = pkin(8) * t1439 + t1407 * t2083 + t1409 * t2078;
t1554 = -pkin(4) * t1886 + pkin(11) * t1745 + t1581;
t1558 = -pkin(11) * t1743 - t1580;
t1479 = -pkin(3) * t1886 + pkin(10) * t1659 + t1554 * t2081 + t1558 * t2076;
t1565 = t2072 * t1657 + t2069 * t2196;
t1483 = -pkin(10) * t1657 - t1554 * t2076 + t1558 * t2081;
t1617 = -pkin(3) * t1657 - t2298;
t2113 = pkin(9) * t1634 + t1483 * t2077 + t1617 * t2082;
t1428 = -pkin(2) * t1565 - t2069 * t1479 + t2072 * t2113;
t1442 = t2082 * t1483 - t2077 * t1617 + (-t1565 * t2069 - t1566 * t2072) * pkin(9);
t1533 = -t1566 * t2078 + t1634 * t2083;
t2129 = pkin(8) * t1533 + t1428 * t2083 + t1442 * t2078;
t1689 = -pkin(4) * t1841 + pkin(11) * t1834 - t2287;
t1719 = -pkin(11) * t1833 + t2288;
t1564 = -pkin(3) * t1841 + pkin(10) * t1733 + t1689 * t2081 + t1719 * t2076;
t1623 = t2072 * t1732 + t2069 * t2191;
t1586 = -pkin(10) * t1732 - t1689 * t2076 + t1719 * t2081;
t1597 = -pkin(3) * t1732 - t2147;
t2112 = pkin(9) * t1699 + t1586 * t2077 + t1597 * t2082;
t1462 = -pkin(2) * t1623 - t2069 * t1564 + t2072 * t2112;
t1480 = t2082 * t1586 - t2077 * t1597 + (-t1623 * t2069 - t1624 * t2072) * pkin(9);
t1573 = -t1624 * t2078 + t1699 * t2083;
t2128 = pkin(8) * t1573 + t1462 * t2083 + t1480 * t2078;
t1697 = -pkin(4) * t2313 + pkin(11) * t1860 + t2288;
t1725 = -pkin(11) * t1859 + t2287;
t1575 = -pkin(3) * t2313 + pkin(10) * t1766 + t1697 * t2081 + t1725 * t2076;
t1645 = t2072 * t1765 + t2069 * t2188;
t1594 = -pkin(10) * t1765 - t1697 * t2076 + t1725 * t2081;
t1608 = -pkin(3) * t1765 - t2232;
t2111 = pkin(9) * t1708 + t1594 * t2077 + t1608 * t2082;
t1467 = -pkin(2) * t1645 - t2069 * t1575 + t2072 * t2111;
t1487 = t2082 * t1594 - t2077 * t1608 + (-t1645 * t2069 - t1646 * t2072) * pkin(9);
t1593 = -t1646 * t2078 + t1708 * t2083;
t2127 = pkin(8) * t1593 + t1467 * t2083 + t1487 * t2078;
t1609 = t2072 * t1702 + t2069 * t2193;
t1680 = -pkin(3) * t1873 + pkin(10) * t1703;
t2098 = pkin(9) * t1679 + t1702 * t2231;
t1506 = -pkin(2) * t1609 - t2069 * t1680 + t2072 * t2098;
t1509 = (-pkin(10) * t2082 + t2301) * t1702 + (-t1609 * t2069 - t1610 * t2072) * pkin(9);
t1557 = -t1610 * t2078 + t1679 * t2083;
t2126 = pkin(8) * t1557 + t1506 * t2083 + t1509 * t2078;
t1668 = pkin(3) * t1969 + pkin(10) * t1871 + t1703;
t1754 = t2072 * t1869 + t2069 * t2176;
t1678 = -pkin(10) * t1869 - t1702;
t2105 = pkin(9) * t1824 + t1678 * t2077 - t1869 * t2300;
t1548 = -pkin(2) * t1754 - t2069 * t1668 + t2072 * t2105;
t1574 = t1869 * t2301 + t2082 * t1678 + (-t1754 * t2069 - t1755 * t2072) * pkin(9);
t1700 = -t1755 * t2078 + t1824 * t2083;
t2125 = pkin(8) * t1700 + t1548 * t2083 + t1574 * t2078;
t1773 = pkin(3) * t1941 + pkin(10) * t1901 - t2283;
t1791 = t2072 * t1900 + t2069 * t2172;
t1750 = t2076 * t2089 - t2081 * t2090 + (t2014 * t2081 - t2076 * t2235 - t1900) * pkin(3);
t1808 = -pkin(10) * t1900 + t2284;
t2110 = pkin(9) * t1853 + t1750 * t2082 + t1808 * t2077;
t1592 = -pkin(2) * t1791 - t2069 * t1773 + t2072 * t2110;
t1614 = -t2077 * t1750 + t2082 * t1808 + (-t1791 * t2069 - t1792 * t2072) * pkin(9);
t1716 = -t1792 * t2078 + t1853 * t2083;
t2124 = pkin(8) * t1716 + t1592 * t2083 + t1614 * t2078;
t1786 = -pkin(3) * t1943 + pkin(10) * t1913 + t2284;
t1798 = t2072 * t1912 + t2069 * t2171;
t1756 = -pkin(3) * t1912 + t1797;
t1809 = -pkin(10) * t1912 + t2283;
t2109 = pkin(9) * t1857 + t1756 * t2082 + t1809 * t2077;
t1599 = -pkin(2) * t1798 - t2069 * t1786 + t2072 * t2109;
t1620 = -t2077 * t1756 + t2082 * t1809 + (-t1798 * t2069 - t1799 * t2072) * pkin(9);
t1720 = -t1799 * t2078 + t1857 * t2083;
t2123 = pkin(8) * t1720 + t1599 * t2083 + t1620 * t2078;
t1789 = -t2072 * t1954 + t2069 * t2173;
t1698 = (-t1789 * t2069 - t1790 * t2072) * pkin(9);
t1709 = -t1790 * t2078 + t1816 * t2083;
t1710 = pkin(9) * t1816 * t2072 - pkin(2) * t1789;
t2122 = pkin(8) * t1709 + t1698 * t2078 + t1710 * t2083;
t1927 = -t2072 * t2041 + t2069 * t2159;
t1742 = (-t1927 * t2069 - t1929 * t2072) * pkin(9) - t2173;
t2108 = pkin(9) * t1956 + t1816;
t1753 = -pkin(2) * t1927 + t2072 * t2108;
t1874 = -t1929 * t2078 + t1956 * t2083;
t2121 = pkin(8) * t1874 + t1742 * t2078 + t1753 * t2083;
t1938 = t2072 * t2010 + t2069 * t2158;
t1788 = -pkin(2) * t1938 + t2069 * t1894 + t2072 * t2230;
t1818 = -t2262 + (-t1938 * t2069 - t1939 * t2072) * pkin(9);
t1888 = -t1939 * t2078 + t1993 * t2083;
t2120 = pkin(8) * t1888 + t1788 * t2083 + t1818 * t2078;
t1950 = -t2072 * t2014 + t2069 * t2155;
t1794 = -pkin(2) * t1950 + t2069 * t1893 + t2072 * t2229;
t1823 = -t2265 + (-t1950 * t2069 - t1953 * t2072) * pkin(9);
t1897 = -t1953 * t2078 + t2000 * t2083;
t2119 = pkin(8) * t1897 + t1794 * t2083 + t1823 * t2078;
t2059 = t2073 * qJDD(2);
t2039 = t2049 * t2073;
t2037 = t2049 * t2070;
t2036 = t2151 * t2070;
t2007 = -t2039 * t2068 - t2071 * t2151;
t2006 = t2039 * t2071 - t2068 * t2151;
t1995 = t2017 * t2083 + t2078 * t2270;
t1982 = (t2069 * t2031 + t2082 * t2310) * t2077;
t1981 = (t2069 * t2032 - t2077 * t2310) * t2082;
t1968 = -t2138 + (t2036 * t2070 + t2038 * t2073) * pkin(8);
t1967 = -t2139 + (-t2037 * t2070 - t2039 * t2073) * pkin(8);
t1966 = t2073 * t2276 + (-t2070 * t2072 - t2073 * t2269) * t2058;
t1965 = t2070 * t2276 + (-t2070 * t2269 + t2072 * t2073) * t2058;
t1949 = t2072 * t2013 + t2069 * t2157;
t1948 = t2072 * t2012 + t2069 * t2156;
t1937 = t1947 * t2073;
t1928 = t2072 * t2040 + t2069 * t2160;
t1926 = -t1983 * t2078 + t2004 * t2083;
t1925 = -t1980 * t2078 + t2003 * t2083;
t1918 = -pkin(1) * t2037 + t2070 * t2001 + t2073 * t2138 - t2151 * t2296;
t1917 = pkin(1) * t2036 + t2070 * t2002 - t2049 * t2296 - t2073 * t2139;
t1916 = pkin(1) * t2039 - t2073 * t2001 + (-pkin(8) * t2151 + t2138) * t2070;
t1915 = -pkin(1) * t2038 - t2073 * t2002 + (-pkin(8) * t2049 - t2139) * t2070;
t1910 = t2070 * t2045 + (t2241 - t1946) * t2073;
t1909 = -t1946 * t2070 - t2073 * t2228;
t1896 = -t1952 * t2078 + t1999 * t2083;
t1895 = -t1951 * t2078 + t1998 * t2083;
t1885 = -t2070 * t1982 + t2073 * t2161;
t1884 = -t2070 * t1981 + t2073 * t2162;
t1883 = t2073 * t1982 + t2070 * t2161;
t1882 = t2073 * t1981 + t2070 * t2162;
t1876 = t2072 * t1958 + t2069 * t2304;
t1875 = -t1930 * t2078 + t1957 * t2083;
t1856 = pkin(1) * t1910 + pkin(8) * t1936;
t1855 = -pkin(1) * t1909 + t1947 * t2296;
t1852 = -t2070 * t1950 + t2073 * t2163;
t1851 = -t2070 * t1949 + t2073 * t2164;
t1850 = -t2070 * t1948 + t2073 * t2165;
t1849 = t2073 * t1950 + t2070 * t2163;
t1848 = t2073 * t1949 + t2070 * t2164;
t1847 = t2073 * t1948 + t2070 * t2165;
t1835 = (-t1909 * t2070 - t1910 * t2073) * pkin(8);
t1832 = -t2070 * t1938 + t2073 * t2166;
t1831 = t2073 * t1938 + t2070 * t2166;
t1826 = t2072 * t1934 + (-t2095 + t2266) * t2069;
t1825 = t2072 * t1932 + (t2095 + t2267) * t2069;
t1815 = -t1877 * t2078 + t1931 * t2083;
t1814 = -t2070 * t1928 + t2073 * t2167;
t1813 = -t2070 * t1927 + t2073 * t2168;
t1812 = t2073 * t1928 + t2070 * t2167;
t1811 = t2073 * t1927 + t2070 * t2168;
t1802 = t2072 * t1920 + t2069 * t2169;
t1801 = t2072 * t1919 + t2069 * t2170;
t1793 = pkin(2) * t1953 - t2072 * t1893 + t2069 * t2229;
t1787 = pkin(2) * t1939 - t2072 * t1894 + t2069 * t2230;
t1768 = -t1828 * t2078 + t1890 * t2083;
t1767 = -t1827 * t2078 + t1889 * t2083;
t1763 = t2072 * t1868 + t2069 * t2177;
t1752 = pkin(2) * t1929 + t2069 * t2108;
t1748 = -t2070 * t1876 + t2073 * t2175;
t1747 = t2073 * t1876 + t2070 * t2175;
t1727 = -t1804 * t2078 + t1862 * t2083;
t1726 = -t1803 * t2078 + t1861 * t2083;
t1717 = t2072 * t1821 + t2069 * t2180;
t1711 = pkin(2) * t1790 + t1816 * t2295;
t1707 = -t2070 * t1826 + t2073 * t2178;
t1706 = -t2070 * t1825 + t2073 * t2179;
t1705 = t2073 * t1826 + t2070 * t2178;
t1704 = t2073 * t1825 + t2070 * t2179;
t1701 = -t1764 * t2078 + t1840 * t2083;
t1688 = -t2070 * t1802 + t2073 * t2181;
t1687 = -t2070 * t1801 + t2073 * t2182;
t1686 = t2073 * t1802 + t2070 * t2181;
t1685 = t2073 * t1801 + t2070 * t2182;
t1675 = -t1718 * t2078 + t1810 * t2083;
t1674 = -t2070 * t1798 + t2073 * t2183;
t1673 = t2073 * t1798 + t2070 * t2183;
t1665 = -t2070 * t1791 + t2073 * t2184;
t1664 = t2073 * t1791 + t2070 * t2184;
t1654 = -t2070 * t1789 + t2073 * t2185;
t1653 = t2073 * t1789 + t2070 * t2185;
t1650 = t2072 * t1777 + t2069 * t2186;
t1649 = t2072 * t1776 + t2069 * t2187;
t1647 = -t2078 * t1794 + t2083 * t1823 + (-t1849 * t2070 - t1852 * t2073) * pkin(8);
t1638 = t2072 * t1739 + t2069 * t2142;
t1637 = t2072 * t1738 + t2069 * t2143;
t1636 = -t2070 * t1763 + t2073 * t2189;
t1635 = t2073 * t1763 + t2070 * t2189;
t1627 = -t2078 * t1788 + t2083 * t1818 + (-t1831 * t2070 - t1832 * t2073) * pkin(8);
t1626 = -t2070 * t1754 + t2073 * t2190;
t1625 = t2073 * t1754 + t2070 * t2190;
t1622 = -pkin(1) * t1849 - t2070 * t1793 + t2073 * t2119;
t1621 = pkin(1) * t1852 + t2073 * t1793 + t2070 * t2119;
t1619 = -pkin(1) * t1831 - t2070 * t1787 + t2073 * t2120;
t1618 = pkin(1) * t1832 + t2073 * t1787 + t2070 * t2120;
t1616 = -t2070 * t1717 + t2073 * t2192;
t1615 = t2073 * t1717 + t2070 * t2192;
t1611 = t2083 * t1742 - t2078 * t1753 + (-t1811 * t2070 - t1813 * t2073) * pkin(8);
t1605 = -t1652 * t2078 + t1713 * t2083;
t1604 = -t1651 * t2078 + t1712 * t2083;
t1598 = pkin(2) * t1799 + t2072 * t1786 + t2069 * t2109;
t1596 = -t1640 * t2078 + t1715 * t2083;
t1595 = -t1639 * t2078 + t1714 * t2083;
t1591 = pkin(2) * t1792 + t2072 * t1773 + t2069 * t2110;
t1585 = -pkin(1) * t1811 - t2070 * t1752 + t2073 * t2121;
t1584 = pkin(1) * t1813 + t2073 * t1752 + t2070 * t2121;
t1571 = t2072 * t1676 + t2069 * t2194;
t1567 = t2072 * t1658 + t2069 * t2195;
t1551 = t2072 * t1642 + t2069 * t2200;
t1550 = t2072 * t1641 + t2069 * t2201;
t1547 = pkin(2) * t1755 + t2072 * t1668 + t2069 * t2105;
t1546 = -t2070 * t1650 + t2073 * t2197;
t1545 = -t2070 * t1649 + t2073 * t2198;
t1544 = t2073 * t1650 + t2070 * t2197;
t1543 = t2073 * t1649 + t2070 * t2198;
t1542 = -t2070 * t1638 + t2073 * t2202;
t1541 = -t2070 * t1637 + t2073 * t2203;
t1540 = t2073 * t1638 + t2070 * t2202;
t1539 = t2073 * t1637 + t2070 * t2203;
t1537 = -t2070 * t1645 + t2073 * t2199;
t1536 = t2073 * t1645 + t2070 * t2199;
t1535 = -t1568 * t2078 + t1648 * t2083;
t1534 = -t1572 * t2078 + t1633 * t2083;
t1532 = -t2070 * t1623 + t2073 * t2204;
t1531 = t2073 * t1623 + t2070 * t2204;
t1530 = t2083 * t1698 - t2078 * t1710 + (-t1653 * t2070 - t1654 * t2073) * pkin(8);
t1529 = -pkin(1) * t1653 - t2070 * t1711 + t2073 * t2122;
t1528 = pkin(1) * t1654 + t2073 * t1711 + t2070 * t2122;
t1523 = t2072 * t1601 + t2069 * t2206;
t1522 = t2072 * t1600 + t2069 * t2207;
t1518 = -t2070 * t1609 + t2073 * t2205;
t1517 = t2073 * t1609 + t2070 * t2205;
t1514 = -t1553 * t2078 + t1613 * t2083;
t1513 = -t1552 * t2078 + t1612 * t2083;
t1507 = t2072 * t1582 + t2069 * t2210;
t1505 = pkin(2) * t1610 + t2072 * t1680 + t2069 * t2098;
t1499 = -t2078 * t1599 + t2083 * t1620 + (-t1673 * t2070 - t1674 * t2073) * pkin(8);
t1494 = -t2070 * t1571 + t2073 * t2211;
t1493 = t2073 * t1571 + t2070 * t2211;
t1492 = -t2070 * t1567 + t2073 * t2213;
t1491 = t2073 * t1567 + t2070 * t2213;
t1490 = -t2078 * t1592 + t2083 * t1614 + (-t1664 * t2070 - t1665 * t2073) * pkin(8);
t1489 = -t2070 * t1565 + t2073 * t2214;
t1488 = t2073 * t1565 + t2070 * t2214;
t1482 = -t1525 * t2078 + t1563 * t2083;
t1481 = -t1524 * t2078 + t1562 * t2083;
t1478 = -pkin(1) * t1673 - t2070 * t1598 + t2073 * t2123;
t1477 = pkin(1) * t1674 + t2073 * t1598 + t2070 * t2123;
t1473 = -pkin(1) * t1664 - t2070 * t1591 + t2073 * t2124;
t1472 = pkin(1) * t1665 + t2073 * t1591 + t2070 * t2124;
t1471 = -t2070 * t1551 + t2073 * t2215;
t1470 = -t2070 * t1550 + t2073 * t2216;
t1469 = t2073 * t1551 + t2070 * t2215;
t1468 = t2073 * t1550 + t2070 * t2216;
t1466 = pkin(2) * t1646 + t2072 * t1575 + t2069 * t2111;
t1465 = -t2078 * t1548 + t2083 * t1574 + (-t1625 * t2070 - t1626 * t2073) * pkin(8);
t1464 = -t1508 * t2078 + t1549 * t2083;
t1461 = pkin(2) * t1624 + t2072 * t1564 + t2069 * t2112;
t1454 = -pkin(1) * t1625 - t2070 * t1547 + t2073 * t2125;
t1453 = pkin(1) * t1626 + t2073 * t1547 + t2070 * t2125;
t1452 = -t2070 * t1523 + t2073 * t2218;
t1451 = -t2070 * t1522 + t2073 * t2219;
t1450 = t2073 * t1523 + t2070 * t2218;
t1449 = t2073 * t1522 + t2070 * t2219;
t1446 = -t2070 * t1515 + t2073 * t2220;
t1445 = t2073 * t1515 + t2070 * t2220;
t1444 = -t2070 * t1510 + t2073 * t2221;
t1443 = t2073 * t1510 + t2070 * t2221;
t1441 = -t2070 * t1507 + t2073 * t2222;
t1440 = t2073 * t1507 + t2070 * t2222;
t1436 = -t2070 * t1500 + t2073 * t2223;
t1435 = t2073 * t1500 + t2070 * t2223;
t1427 = pkin(2) * t1566 + t2072 * t1479 + t2069 * t2113;
t1425 = -t2078 * t1506 + t2083 * t1509 + (-t1517 * t2070 - t1518 * t2073) * pkin(8);
t1424 = -t2078 * t1467 + t2083 * t1487 + (-t1536 * t2070 - t1537 * t2073) * pkin(8);
t1423 = -pkin(1) * t1517 - t2070 * t1505 + t2073 * t2126;
t1422 = pkin(1) * t1518 + t2073 * t1505 + t2070 * t2126;
t1420 = -t2070 * t1456 + t2073 * t2224;
t1419 = t2073 * t1456 + t2070 * t2224;
t1418 = -t2078 * t1462 + t2083 * t1480 + (-t1531 * t2070 - t1532 * t2073) * pkin(8);
t1417 = -pkin(1) * t1536 - t2070 * t1466 + t2073 * t2127;
t1416 = pkin(1) * t1537 + t2073 * t1466 + t2070 * t2127;
t1411 = -pkin(1) * t1531 - t2070 * t1461 + t2073 * t2128;
t1410 = pkin(1) * t1532 + t2073 * t1461 + t2070 * t2128;
t1406 = pkin(2) * t1457 + t2072 * t1455 + t2069 * t2114;
t1404 = pkin(2) * t1516 + t2072 * t1434 + t2069 * t2115;
t1402 = pkin(2) * t1511 + t2072 * t1432 + t2069 * t2116;
t1400 = -t2078 * t1428 + t2083 * t1442 + (-t1488 * t2070 - t1489 * t2073) * pkin(8);
t1396 = pkin(2) * t1501 + t2072 * t1429 + t2069 * t2117;
t1395 = -pkin(1) * t1488 - t2070 * t1427 + t2073 * t2129;
t1394 = pkin(1) * t1489 + t2073 * t1427 + t2070 * t2129;
t1393 = -t2070 * t1414 + t2073 * t2226;
t1392 = t2073 * t1414 + t2070 * t2226;
t1391 = -t2078 * t1405 + t2083 * t1413 + (-t1445 * t2070 - t1446 * t2073) * pkin(8);
t1390 = -t2078 * t1403 + t2083 * t1412 + (-t1443 * t2070 - t1444 * t2073) * pkin(8);
t1389 = -t2078 * t1407 + t2083 * t1409 + (-t1419 * t2070 - t1420 * t2073) * pkin(8);
t1388 = -t2078 * t1397 + t2083 * t1408 + (-t1435 * t2070 - t1436 * t2073) * pkin(8);
t1386 = -pkin(1) * t1445 - t2070 * t1404 + t2073 * t2131;
t1385 = pkin(1) * t1446 + t2073 * t1404 + t2070 * t2131;
t1384 = -pkin(1) * t1443 - t2070 * t1402 + t2073 * t2132;
t1383 = pkin(1) * t1444 + t2073 * t1402 + t2070 * t2132;
t1382 = -pkin(1) * t1419 - t2070 * t1406 + t2073 * t2130;
t1381 = pkin(1) * t1420 + t2073 * t1406 + t2070 * t2130;
t1379 = pkin(2) * t1415 + t2072 * t1398 + t2069 * t2118;
t1378 = -pkin(1) * t1435 - t2070 * t1396 + t2073 * t2133;
t1377 = pkin(1) * t1436 + t2073 * t1396 + t2070 * t2133;
t1376 = -t2078 * t1380 + t2083 * t1387 + (-t1392 * t2070 - t1393 * t2073) * pkin(8);
t1375 = -pkin(1) * t1392 - t2070 * t1379 + t2073 * t2134;
t1374 = pkin(1) * t1393 + t2073 * t1379 + t2070 * t2134;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t2309, -t2308, -t2302, -qJ(1) * t2302, 0, 0, -t2152, 0, t2007, t2068 * t2255, -qJ(1) * t2006 - t1918 * t2068 + t1967 * t2071, qJ(1) * t2153 - t2068 * t1917 + t2071 * t1968, -t1937 * t2068 + t1946 * t2071, t2071 * t1835 - t2068 * t1855 - qJ(1) * (t1910 * t2071 + t1947 * t2068), -t1885 * t2068 + t1926 * t2071, -t1814 * t2068 + t1875 * t2071, -t1850 * t2068 + t1895 * t2071, -t1884 * t2068 + t1925 * t2071, -t1851 * t2068 + t1896 * t2071, -t1966 * t2068 + t1995 * t2071, t2071 * t1647 - t2068 * t1622 - qJ(1) * (t1852 * t2071 + t1897 * t2068), t2071 * t1627 - t2068 * t1619 - qJ(1) * (t1832 * t2071 + t1888 * t2068), t2071 * t1611 - t2068 * t1585 - qJ(1) * (t1813 * t2071 + t1874 * t2068), t2071 * t1530 - t2068 * t1529 - qJ(1) * (t1654 * t2071 + t1709 * t2068), -t1707 * t2068 + t1768 * t2071, -t1636 * t2068 + t1701 * t2071, -t1687 * t2068 + t1726 * t2071, -t1706 * t2068 + t1767 * t2071, -t1688 * t2068 + t1727 * t2071, -t1748 * t2068 + t1815 * t2071, t2071 * t1490 - t2068 * t1473 - qJ(1) * (t1665 * t2071 + t1716 * t2068), t2071 * t1499 - t2068 * t1478 - qJ(1) * (t1674 * t2071 + t1720 * t2068), t2071 * t1465 - t2068 * t1454 - qJ(1) * (t1626 * t2071 + t1700 * t2068), t2071 * t1425 - t2068 * t1423 - qJ(1) * (t1518 * t2071 + t1557 * t2068), -t1542 * t2068 + t1596 * t2071, -t1492 * t2068 + t1535 * t2071, -t1545 * t2068 + t1604 * t2071, -t1541 * t2068 + t1595 * t2071, -t1546 * t2068 + t1605 * t2071, -t1616 * t2068 + t1675 * t2071, t2071 * t1418 - t2068 * t1411 - qJ(1) * (t1532 * t2071 + t1573 * t2068), t2071 * t1424 - t2068 * t1417 - qJ(1) * (t1537 * t2071 + t1593 * t2068), t2071 * t1400 - t2068 * t1395 - qJ(1) * (t1489 * t2071 + t1533 * t2068), t2071 * t1389 - t2068 * t1382 - qJ(1) * (t1420 * t2071 + t1439 * t2068), -t1471 * t2068 + t1514 * t2071, -t1441 * t2068 + t1464 * t2071, -t1451 * t2068 + t1481 * t2071, -t1470 * t2068 + t1513 * t2071, -t1452 * t2068 + t1482 * t2071, -t1494 * t2068 + t1534 * t2071, t2071 * t1390 - t2068 * t1384 - qJ(1) * (t1444 * t2071 + t1474 * t2068), t2071 * t1391 - t2068 * t1386 - qJ(1) * (t1446 * t2071 + t1476 * t2068), t2071 * t1388 - t2068 * t1378 - qJ(1) * (t1436 * t2071 + t1460 * t2068), t2071 * t1376 - t2068 * t1375 - qJ(1) * (t1393 * t2071 + t1401 * t2068); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t2308, -t2309, t2303, qJ(1) * t2303, 0, 0, t2153, 0, t2006, -t2071 * t2255, qJ(1) * t2007 + t1918 * t2071 + t1967 * t2068, qJ(1) * t2152 + t2071 * t1917 + t2068 * t1968, t1937 * t2071 + t1946 * t2068, t2068 * t1835 + t2071 * t1855 + qJ(1) * (-t1910 * t2068 + t1947 * t2071), t1885 * t2071 + t1926 * t2068, t1814 * t2071 + t1875 * t2068, t1850 * t2071 + t1895 * t2068, t1884 * t2071 + t1925 * t2068, t1851 * t2071 + t1896 * t2068, t1966 * t2071 + t1995 * t2068, t2068 * t1647 + t2071 * t1622 + qJ(1) * (-t1852 * t2068 + t1897 * t2071), t2068 * t1627 + t2071 * t1619 + qJ(1) * (-t1832 * t2068 + t1888 * t2071), t2068 * t1611 + t2071 * t1585 + qJ(1) * (-t1813 * t2068 + t1874 * t2071), t2068 * t1530 + t2071 * t1529 + qJ(1) * (-t1654 * t2068 + t1709 * t2071), t1707 * t2071 + t1768 * t2068, t1636 * t2071 + t1701 * t2068, t1687 * t2071 + t1726 * t2068, t1706 * t2071 + t1767 * t2068, t1688 * t2071 + t1727 * t2068, t1748 * t2071 + t1815 * t2068, t2068 * t1490 + t2071 * t1473 + qJ(1) * (-t1665 * t2068 + t1716 * t2071), t2068 * t1499 + t2071 * t1478 + qJ(1) * (-t1674 * t2068 + t1720 * t2071), t2068 * t1465 + t2071 * t1454 + qJ(1) * (-t1626 * t2068 + t1700 * t2071), t2068 * t1425 + t2071 * t1423 + qJ(1) * (-t1518 * t2068 + t1557 * t2071), t1542 * t2071 + t1596 * t2068, t1492 * t2071 + t1535 * t2068, t1545 * t2071 + t1604 * t2068, t1541 * t2071 + t1595 * t2068, t1546 * t2071 + t1605 * t2068, t1616 * t2071 + t1675 * t2068, t2068 * t1418 + t2071 * t1411 + qJ(1) * (-t1532 * t2068 + t1573 * t2071), t2068 * t1424 + t2071 * t1417 + qJ(1) * (-t1537 * t2068 + t1593 * t2071), t2068 * t1400 + t2071 * t1395 + qJ(1) * (-t1489 * t2068 + t1533 * t2071), t2068 * t1389 + t2071 * t1382 + qJ(1) * (-t1420 * t2068 + t1439 * t2071), t1471 * t2071 + t1514 * t2068, t1441 * t2071 + t1464 * t2068, t1451 * t2071 + t1481 * t2068, t1470 * t2071 + t1513 * t2068, t1452 * t2071 + t1482 * t2068, t1494 * t2071 + t1534 * t2068, t2068 * t1390 + t2071 * t1384 + qJ(1) * (-t1444 * t2068 + t1474 * t2071), t2068 * t1391 + t2071 * t1386 + qJ(1) * (-t1446 * t2068 + t1476 * t2071), t2068 * t1388 + t2071 * t1378 + qJ(1) * (-t1436 * t2068 + t1460 * t2071), t2068 * t1376 + t2071 * t1375 + qJ(1) * (-t1393 * t2068 + t1401 * t2071); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t2242, t2258, 0, 0, 0, 0, t2036, 0, t2037, t2059, t1916, t1915, t1936, t1856, t1883, t1812, t1847, t1882, t1848, t1965, t1621, t1618, t1584, t1528, t1705, t1635, t1685, t1704, t1686, t1747, t1472, t1477, t1453, t1422, t1540, t1491, t1543, t1539, t1544, t1615, t1410, t1416, t1394, t1381, t1469, t1440, t1449, t1468, t1450, t1493, t1383, t1385, t1377, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2294, -t2242, 0, 0, 0, t2049, 0, -t2151, 0, t1967, t1968, t1946, t1835, t1926, t1875, t1895, t1925, t1896, t1995, t1647, t1627, t1611, t1530, t1768, t1701, t1726, t1767, t1727, t1815, t1490, t1499, t1465, t1425, t1596, t1535, t1604, t1595, t1605, t1675, t1418, t1424, t1400, t1389, t1514, t1464, t1481, t1513, t1482, t1534, t1390, t1391, t1388, t1376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2294, 0, -t2258, 0, 0, 0, t2038, 0, t2039, -t2255, t1918, t1917, t1937, t1855, t1885, t1814, t1850, t1884, t1851, t1966, t1622, t1619, t1585, t1529, t1707, t1636, t1687, t1706, t1688, t1748, t1473, t1478, t1454, t1423, t1542, t1492, t1545, t1541, t1546, t1616, t1411, t1417, t1395, t1382, t1471, t1441, t1451, t1470, t1452, t1494, t1384, t1386, t1378, t1375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2242, t2258, 0, 0, 0, 0, t2036, 0, t2037, t2059, t1916, t1915, t1936, t1856, t1883, t1812, t1847, t1882, t1848, t1965, t1621, t1618, t1584, t1528, t1705, t1635, t1685, t1704, t1686, t1747, t1472, t1477, t1453, t1422, t1540, t1491, t1543, t1539, t1544, t1615, t1410, t1416, t1394, t1381, t1469, t1440, t1449, t1468, t1450, t1493, t1383, t1385, t1377, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t2084, 0, 0, -t2228, t2001, 0, t2004, t1957, t1998, t2003, t1999, t2017, t1823, t1818, t1742, t1698, t1890, t1840, t1861, t1889, t1862, t1931, t1614, t1620, t1574, t1509, t1715, t1648, t1712, t1714, t1713, t1810, t1480, t1487, t1442, t1409, t1613, t1549, t1562, t1612, t1563, t1633, t1412, t1413, t1408, t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2084, 0, qJDD(2), 0, t2228, 0, t2002, 0, t1983, t1930, t1951, t1980, t1952, -t2270, t1794, t1788, t1753, t1710, t1828, t1764, t1803, t1827, t1804, t1877, t1592, t1599, t1548, t1506, t1640, t1568, t1651, t1639, t1652, t1718, t1462, t1467, t1428, t1407, t1553, t1508, t1524, t1552, t1525, t1572, t1403, t1405, t1397, t1380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t2001, -t2002, 0, 0, t1982, t1928, t1948, t1981, t1949, t2072 * t2058, t1793, t1787, t1752, t1711, t1826, t1763, t1801, t1825, t1802, t1876, t1591, t1598, t1547, t1505, t1638, t1567, t1649, t1637, t1650, t1717, t1461, t1466, t1427, t1406, t1551, t1507, t1522, t1550, t1523, t1571, t1402, t1404, t1396, t1379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2031, t2014, t2029, -t2043, t2034, t2043, 0, -t1954, t1893, 0, t1935, t1870, t1921, t1933, t1922, t1959, t1808, t1809, t1678, -pkin(10) * t1702, t1741, t1660, t1778, t1740, t1779, t1822, t1586, t1594, t1483, t1458, t1644, t1583, t1602, t1643, t1603, t1677, t1437, t1438, t1430, t1399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2042, t2011, t2033, t2032, t2028, -t2042, t1954, 0, t1894, 0, -t2104, -t1996, t2305, t2104, t1940, t2146, t1750, t1756, -pkin(3) * t1869, -pkin(3) * t1702, -t1924, -t1923, -t1845, t1924, t1842, t2027, t1597, t1608, t1617, t1484, -t1771, -t1693, -t1757, t1769, -t1758, -t1829, t1502, t1503, t1459, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2052, t2040, t2012, t2052, t2013, t2058, -t1893, -t1894, 0, 0, t1934, t1868, t1919, t1932, t1920, t1958, t1773, t1786, t1668, t1680, t1739, t1658, t1776, t1738, t1777, t1821, t1564, t1575, t1479, t1455, t1642, t1582, t1600, t1641, t1601, t1676, t1432, t1434, t1429, t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1979, t1941, t2311, -t2016, t2008, t2016, 0, t1873, t1796, 0, t1839, t1746, t1865, t1837, t1866, t1899, t1719, t1725, t1558, -pkin(11) * t1580, t1724, t1667, t1683, t1723, t1684, t1762, t1497, t1498, t1475, t1433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2015, t1943, t2009, t2106, -t1972, t2015, -t1873, 0, t1797, 0, t1838, t1744, t1863, t1836, t1864, t1898, t1689, t1697, t1554, t1561, t1722, t1666, t1681, t1721, t1682, t1761, t1485, t1486, t1463, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2104, t1996, -t2305, -t2104, -t1940, -t2146, -t1796, -t1797, 0, 0, t1924, t1923, t1845, -t1924, -t1842, -t2027, t2147, t2232, t2298, t2299, t1771, t1693, t1757, -t1769, t1758, t1829, t2149, t2150, t2141, t2233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1881, -t1841, t2306, -t1975, t1970, t1975, 0, t1800, t1662, 0, t1772, t1695, t1759, t1770, t1760, t1830, t1606, t1607, t1504, -pkin(12) * t1520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2135, t2313, t1971, t1880, -t1904, t2135, -t1800, 0, t1663, 0, -t1892, -t1891, -t1784, t1892, t1780, -t1879, t1555, t1556, -pkin(5) * t1692, -pkin(5) * t1520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1924, t1923, t1845, -t1924, -t1842, -t2027, -t1662, -t1663, 0, 0, t1771, t1693, t1757, -t1769, t1758, t1829, t2243, t2244, t2234, t2260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1820, t1782, t2307, t1907, t1902, -t1907, 0, t1631, t1578, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1908, t1783, t1903, t1819, t1806, -t1908, -t1631, 0, t1579, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1892, t1891, t1784, -t1892, -t1780, t1879, -t1578, -t1579, 0, 0;];
m_new_reg  = t1;
