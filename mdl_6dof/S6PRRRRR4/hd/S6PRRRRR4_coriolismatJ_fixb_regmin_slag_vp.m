% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:00:04
% EndTime: 2019-03-09 01:01:35
% DurationCPUTime: 64.61s
% Computational Cost: add. (23836->1207), mult. (63044->1673), div. (0->0), fcn. (73873->14), ass. (0->892)
t1361 = sin(qJ(5));
t861 = cos(qJ(4));
t838 = t1361 * t861;
t1362 = cos(qJ(5));
t857 = sin(qJ(4));
t839 = t1362 * t857;
t799 = -t839 - t838;
t1438 = 0.2e1 * t799;
t860 = cos(qJ(6));
t1208 = qJD(3) * t860;
t856 = sin(qJ(6));
t1138 = t856 * t1208;
t1506 = t1138 * t1438;
t1170 = qJD(4) + qJD(5);
t854 = sin(pkin(6));
t859 = sin(qJ(2));
t1303 = t854 * t859;
t1157 = t857 * t1303;
t853 = sin(pkin(7));
t1062 = t853 * t1157;
t858 = sin(qJ(3));
t1281 = t858 * t859;
t855 = cos(pkin(7));
t1154 = t855 * t1281;
t862 = cos(qJ(3));
t863 = cos(qJ(2));
t1259 = t863 * t862;
t718 = (-t1154 + t1259) * t854;
t1317 = t718 * t861;
t953 = t1062 + t1317;
t904 = t1361 * t953;
t1155 = t861 * t1303;
t1061 = t853 * t1155;
t1318 = t718 * t857;
t954 = t1061 - t1318;
t907 = t1362 * t954;
t874 = t904 - t907;
t871 = t874 * t856;
t1305 = t853 * t858;
t777 = -t1305 * t857 + t855 * t861;
t1144 = t1361 * t777;
t778 = t1305 * t861 + t855 * t857;
t746 = t1362 * t778;
t1432 = t1144 + t746;
t1268 = t860 * t1432;
t1304 = t853 * t862;
t497 = -t1304 * t856 + t1268;
t1401 = t497 / 0.2e1;
t1351 = cos(pkin(6));
t1075 = t853 * t1351;
t1260 = t863 * t858;
t1280 = t859 * t862;
t658 = t858 * t1075 + (t1260 * t855 + t1280) * t854;
t770 = -t854 * t863 * t853 + t1351 * t855;
t480 = t658 * t857 - t770 * t861;
t1146 = t1361 * t480;
t481 = t658 * t861 + t770 * t857;
t452 = t1362 * t481;
t1431 = -t1146 + t452;
t1472 = -t1432 / 0.2e1;
t1277 = t860 * t1431;
t1156 = t854 * t1281;
t657 = -t1259 * t854 * t855 - t1075 * t862 + t1156;
t209 = t657 * t856 + t1277;
t970 = t1401 * t1431 + t1472 * t209;
t1495 = -t871 / 0.2e1 + t970;
t1505 = qJD(1) * t1495;
t870 = t874 * t860;
t1291 = t856 * t1432;
t495 = t1304 * t860 + t1291;
t1403 = t495 / 0.2e1;
t1300 = t856 * t1431;
t208 = -t657 * t860 + t1300;
t972 = t1403 * t1431 + t1472 * t208;
t1496 = t870 / 0.2e1 + t972;
t1504 = qJD(1) * t1496;
t1503 = qJD(2) * t1495;
t1502 = qJD(2) * t1496;
t363 = -t870 / 0.2e1;
t1497 = t363 + t972;
t1501 = qJD(2) * t1497;
t362 = t871 / 0.2e1;
t1498 = t362 + t970;
t1500 = qJD(2) * t1498;
t1364 = t860 / 0.2e1;
t1370 = -t856 / 0.2e1;
t1143 = t1361 * t857;
t1150 = t1362 * t861;
t797 = t1143 - t1150;
t702 = t797 * t1304;
t1284 = t856 * t702;
t826 = t860 * t1305;
t607 = -t826 - t1284;
t1262 = t860 * t702;
t608 = t1305 * t856 - t1262;
t1417 = t1364 * t608 + t1370 * t607;
t1283 = t856 * t860;
t595 = t1361 * t778 - t1362 * t777;
t1336 = t595 * t799;
t1270 = t860 * t495;
t1338 = t497 * t856;
t963 = t1270 / 0.2e1 + t1338 / 0.2e1;
t1492 = -t1283 * t1336 + t963 * t797;
t1480 = -t1417 + t1492;
t1499 = -qJD(2) * t1480 + t1506 * t797;
t1381 = -t797 / 0.2e1;
t848 = t856 ^ 2;
t850 = t860 ^ 2;
t830 = t850 - t848;
t1460 = t1170 * t830;
t846 = qJD(6) * t860;
t834 = t856 * t846;
t723 = t834 * t1438;
t1494 = -t1460 * t797 - t1499 + t723;
t1493 = t723 + t1499;
t1360 = pkin(2) * t862;
t779 = pkin(9) * t1305 - t855 * t1360;
t1282 = t857 * t779;
t780 = (pkin(3) * t858 - pkin(10) * t862) * t853;
t751 = t861 * t780;
t1074 = t751 + t1282;
t1261 = t861 * t862;
t482 = (pkin(4) * t858 - pkin(11) * t1261) * t853 + t1074;
t457 = t1361 * t482;
t1158 = t857 * t1304;
t749 = t857 * t780;
t750 = t861 * t779;
t1244 = t749 - t750;
t517 = -pkin(11) * t1158 + t1244;
t502 = t1362 * t517;
t1254 = -t457 / 0.2e1 - t502 / 0.2e1;
t1408 = pkin(10) + pkin(11);
t818 = t1408 * t857;
t819 = t1408 * t861;
t1035 = t1361 * t819 + t1362 * t818;
t1111 = -t1304 / 0.2e1;
t843 = -pkin(4) * t861 - pkin(3);
t1372 = -t843 / 0.2e1;
t741 = -pkin(3) * t855 + t779;
t606 = -pkin(4) * t777 + t741;
t919 = t1035 * t1111 + t1372 * t595 + t1381 * t606;
t121 = t919 - t1254;
t122 = t919 + t1254;
t1110 = t1304 / 0.2e1;
t1392 = t657 / 0.2e1;
t1439 = t1110 * t1431 + t1392 * t1432;
t872 = -t904 / 0.2e1 + t907 / 0.2e1;
t1478 = -t872 + t1439;
t1491 = qJD(1) * t1478;
t1411 = t595 ^ 2;
t1476 = -t1432 ^ 2 + t1411;
t1490 = qJD(2) * t1476;
t1378 = t799 / 0.2e1;
t1418 = t839 / 0.2e1 + t838 / 0.2e1;
t295 = (t1378 + t1418) * t657;
t1488 = -qJD(2) * t1478 + t295 * qJD(3);
t1481 = t1439 + t872;
t1379 = -t799 / 0.2e1;
t298 = (t1379 + t1418) * t657;
t1487 = qJD(2) * t1481 + t298 * qJD(3);
t1010 = t1270 + t1338;
t1464 = t1010 * t595;
t1477 = t1464 * qJD(2);
t1479 = t1417 + t1492;
t170 = t1010 * qJD(6);
t1486 = qJD(3) * t1479 + t1477 - t170;
t1485 = -qJD(3) * t1480 - t1477 - t170;
t1467 = t860 * t595;
t1484 = -t1467 / 0.2e1;
t1483 = t1467 / 0.2e1;
t1468 = t856 * t595;
t1482 = t1468 / 0.2e1;
t1356 = pkin(12) * t595;
t365 = pkin(5) * t1432 + t1356;
t939 = -t1361 * t818 + t1362 * t819;
t1437 = -t939 / 0.2e1;
t1471 = t1432 / 0.2e1;
t1433 = t939 * t860;
t1043 = t797 * pkin(5) + t799 * pkin(12);
t933 = t1043 + t843;
t426 = t856 * t933 + t1433;
t967 = t497 * t1437 + t426 * t1471;
t1434 = t939 * t856;
t425 = -t860 * t933 + t1434;
t968 = t495 * t1437 + t425 * t1471;
t1474 = -t595 / 0.2e1;
t1473 = t595 / 0.2e1;
t1036 = t1361 * t481 + t1362 * t480;
t1405 = t1036 / 0.2e1;
t1357 = pkin(12) * t1432;
t1469 = t595 * t606;
t781 = t855 * t858 * pkin(2) + pkin(9) * t1304;
t742 = pkin(10) * t855 + t781;
t1045 = -pkin(3) * t862 - pkin(10) * t858;
t743 = (-pkin(2) + t1045) * t853;
t532 = t742 * t857 - t861 * t743;
t432 = -pkin(11) * t778 - t532;
t402 = -pkin(4) * t1304 + t432;
t1149 = t1361 * t402;
t533 = t742 * t861 + t743 * t857;
t433 = pkin(11) * t777 + t533;
t424 = t1362 * t433;
t230 = t424 + t1149;
t219 = -pkin(12) * t1304 + t230;
t1044 = pkin(5) * t595 - t1357;
t889 = t1044 + t606;
t93 = t219 * t856 - t860 * t889;
t1466 = t93 * t1432;
t94 = t860 * t219 + t856 * t889;
t1465 = t94 * t1432;
t1205 = qJD(4) * t595;
t1200 = qJD(5) * t595;
t1463 = t1035 * t856;
t1462 = t1035 * t860;
t640 = t860 * t797;
t1461 = t1170 * t640;
t1459 = t1432 * t495;
t1458 = t1432 * t497;
t1457 = t1432 * t606;
t1124 = -t1336 / 0.2e1;
t1335 = t1432 * t797;
t328 = t1335 / 0.2e1 + t1124;
t1456 = t328 * qJD(5);
t1220 = qJD(2) * t1432;
t1141 = t595 * t1220;
t1311 = t799 * t1432;
t1427 = t1170 * t1283;
t1293 = t856 * t495;
t1337 = t497 * t860;
t310 = -t1293 / 0.2e1 + t1337 / 0.2e1;
t1080 = t848 / 0.2e1 - t850 / 0.2e1;
t636 = t1080 * t799;
t180 = qJD(2) * t310 + qJD(3) * t636 + t1427;
t1385 = t746 / 0.2e1;
t1425 = t1144 / 0.2e1 + t1385;
t1452 = qJD(6) * t1425;
t1084 = 0.2e1 * t1473;
t1042 = t1084 * t797;
t1449 = t1311 / 0.2e1 + t1042;
t1448 = (t425 - t1434) * t799;
t1447 = (t426 - t1433) * t799;
t1213 = qJD(2) * t862;
t1140 = t853 * t1213;
t916 = t1150 / 0.2e1 - t1143 / 0.2e1;
t1428 = t1381 + t916;
t543 = t1428 * t1304;
t1446 = t543 * qJD(3) - t1140 * t595;
t1224 = qJD(2) * t497;
t308 = t310 * qJD(6);
t1445 = t1224 * t1467 + t308;
t1211 = qJD(3) * t799;
t1135 = t797 * t1211;
t1072 = -qJD(2) * t328 + t1135;
t959 = qJD(3) * t328 + t1141;
t542 = (t1378 - t1418) * t1304;
t1444 = t542 * qJD(3) - t1140 * t1432;
t1443 = qJD(2) * t1425 + t1418 * qJD(3);
t1380 = t797 / 0.2e1;
t296 = (t1380 + t916) * t657;
t1186 = t296 * qJD(1);
t1442 = t1035 * t1170 - t1186;
t297 = t1428 * t657;
t1441 = t297 * qJD(3) + t1036 * t1170;
t1440 = t1170 * t939;
t1353 = t93 * t799;
t1147 = t1361 * t433;
t393 = t1362 * t402;
t229 = t1147 - t393;
t218 = pkin(5) * t1304 + t229;
t637 = t856 * t797;
t1436 = -t218 * t637 / 0.2e1 + t1353 / 0.2e1;
t1093 = -t640 / 0.2e1;
t1352 = t94 * t799;
t1435 = t218 * t1093 + t1352 / 0.2e1;
t1167 = t1361 * pkin(4);
t841 = t1167 + pkin(12);
t1168 = t1362 * pkin(4);
t1060 = -t1168 / 0.2e1;
t842 = -t1168 - pkin(5);
t1374 = -t842 / 0.2e1;
t981 = t1060 + t1374;
t898 = t1472 * t841 + t595 * t981;
t1430 = -t1357 / 0.2e1 + t898;
t1187 = t295 * qJD(1);
t1210 = qJD(3) * t843;
t1145 = t1361 * t517;
t1151 = t1362 * t482;
t1253 = t1151 / 0.2e1 - t1145 / 0.2e1;
t1333 = t606 * t799;
t501 = -t1333 / 0.2e1;
t918 = t1110 * t939 + t1471 * t843 + t501;
t123 = t918 - t1253;
t1429 = -qJD(2) * t123 + t1210 * t799 + t1187;
t792 = t799 ^ 2;
t1169 = -t797 ^ 2 + t792;
t1358 = pkin(4) * t857;
t609 = t1358 * t797 - t799 * t843;
t1049 = t853 * t1362 / 0.2e1;
t1005 = t858 * t1049;
t1314 = t778 * t797;
t1368 = -t857 / 0.2e1;
t943 = t1111 * t939 + t1372 * t1432;
t68 = t1333 / 0.2e1 + (t1005 + t595 * t1368 - t1314 / 0.2e1) * pkin(4) + t943 + t1253;
t1426 = qJD(2) * t68 - qJD(3) * t609 + t1187;
t1173 = t1418 * qJD(6);
t1424 = -t1072 + t1173;
t325 = t1380 * t1432 + t1124;
t1423 = qJD(2) * t325 - t1135 + t1173;
t1177 = t1169 * qJD(3);
t201 = t797 * t595 + t1311;
t1420 = qJD(2) * t201 - t1177;
t134 = t1438 * t1471 + t1042;
t1419 = qJD(2) * t134 - t1177;
t905 = t1361 * t954;
t906 = t1362 * t953;
t873 = t906 / 0.2e1 + t905 / 0.2e1;
t138 = (t1293 - t1337) * t799;
t203 = t495 ^ 2 - t497 ^ 2;
t1416 = -qJD(2) * t203 + qJD(3) * t138 + t1010 * t1170;
t240 = t963 * t799;
t1415 = qJD(3) * t240 + t1170 * t310 - t1224 * t495;
t1414 = qJD(2) * t240 - t1138 * t792 + t1170 * t636;
t135 = -qJD(2) * t1010 + t1460 + t1506;
t1409 = -pkin(5) / 0.2e1;
t1407 = t218 / 0.2e1;
t1406 = -t1036 / 0.2e1;
t1404 = -t424 / 0.2e1;
t1048 = -t452 / 0.2e1;
t1402 = -t497 / 0.2e1;
t1391 = t658 / 0.2e1;
t1354 = t799 * pkin(5);
t1355 = t797 * pkin(12);
t672 = -t1354 + t1355;
t1390 = t672 / 0.2e1;
t1388 = t1035 / 0.2e1;
t701 = t799 * t1304;
t1386 = t701 / 0.2e1;
t729 = -t746 / 0.2e1;
t1384 = t751 / 0.2e1;
t1383 = t777 / 0.2e1;
t1382 = t778 / 0.2e1;
t1375 = t841 / 0.2e1;
t1373 = t842 / 0.2e1;
t1371 = -t855 / 0.2e1;
t1369 = t856 / 0.2e1;
t1367 = t857 / 0.2e1;
t1366 = -t858 / 0.2e1;
t1365 = -t860 / 0.2e1;
t1363 = t862 / 0.2e1;
t1359 = pkin(4) * t778;
t1263 = t860 * t701;
t1094 = t1263 / 0.2e1;
t884 = t495 * t1378 + t1449 * t856;
t96 = t1094 + t884;
t1348 = qJD(2) * t96;
t1104 = t1291 / 0.2e1;
t903 = (t1104 + t1403) * t799 + t595 * t637;
t98 = t1094 + t903;
t1347 = qJD(2) * t98;
t1346 = t208 * t797;
t1345 = t209 * t797;
t1344 = t230 * t856;
t1343 = t230 * t860;
t1148 = t1361 * t432;
t241 = t1148 + t424;
t1342 = t241 * t856;
t1341 = t241 * t860;
t394 = t657 * t799;
t1340 = t394 * t856;
t1339 = t394 * t860;
t1332 = t608 * t856;
t1330 = t658 * t856;
t1329 = t658 * t860;
t1153 = t855 * t1280;
t717 = (t1153 + t1260) * t854;
t1324 = t717 * t797;
t1323 = t717 * t799;
t1322 = t717 * t856;
t1321 = t717 * t857;
t1320 = t717 * t860;
t1319 = t717 * t861;
t1152 = t1362 * t432;
t1007 = t862 * t1049;
t934 = -t393 / 0.2e1 + pkin(4) * t1007;
t73 = t1152 / 0.2e1 + t934;
t1316 = t73 * qJD(2);
t1315 = t741 * t861;
t1313 = t778 * t799;
t1312 = t797 * t842;
t1310 = t799 * t841;
t1309 = t799 * t856;
t1308 = t799 * t860;
t847 = t853 ^ 2;
t852 = t862 ^ 2;
t1307 = t847 * t852;
t1306 = t847 * t858;
t1302 = t856 * t229;
t242 = t1152 - t1147;
t1301 = t856 * t242;
t1252 = t502 + t457;
t307 = pkin(12) * t1305 + t1252;
t1299 = t856 * t307;
t333 = t1359 + t365;
t1298 = t856 * t333;
t364 = t906 + t905;
t1297 = t856 * t364;
t1296 = t856 * t365;
t696 = pkin(4) * t1158 + t781;
t392 = -pkin(5) * t701 + pkin(12) * t702 + t696;
t1295 = t856 * t392;
t395 = t657 * t797;
t1294 = t856 * t395;
t643 = t672 + t1358;
t1289 = t856 * t643;
t1288 = t856 * t672;
t1285 = t856 * t701;
t1279 = t860 * t229;
t1278 = t860 * t242;
t1276 = t860 * t307;
t1275 = t860 * t333;
t1274 = t860 * t364;
t1273 = t860 * t365;
t1272 = t860 * t392;
t1271 = t860 * t395;
t1267 = t860 * t643;
t1266 = t860 * t672;
t1258 = t134 * qJD(4) + t201 * qJD(5);
t1257 = -t218 + t229;
t1256 = t325 * qJD(4) + t1456;
t1122 = t595 * t1379;
t327 = -t1122 - t1335 / 0.2e1;
t1255 = t327 * qJD(4) - t1456;
t540 = t1169 * t856;
t1180 = t540 * qJD(3);
t1251 = -t637 * qJD(6) + t1180;
t614 = t636 * qJD(6);
t669 = t850 * t1135;
t1249 = t614 - t669;
t541 = t1169 * t860;
t1179 = t541 * qJD(3);
t1248 = t640 * qJD(6) - t1179;
t1175 = t640 * qJD(3);
t1247 = t1175 + t846;
t1243 = t1170 * t1418;
t831 = -t857 ^ 2 + t861 ^ 2;
t1103 = t1285 / 0.2e1;
t885 = t497 * t1379 - t1449 * t860;
t100 = t1103 + t885;
t1242 = qJD(2) * t100;
t902 = (-t1268 / 0.2e1 + t1402) * t799 - t595 * t640;
t102 = t1103 + t902;
t1241 = qJD(2) * t102;
t158 = -t1411 * t856 + t1459;
t1239 = qJD(2) * t158;
t159 = -t1468 * t595 + t1459;
t1238 = qJD(2) * t159;
t160 = -t1411 * t860 + t1458;
t1237 = qJD(2) * t160;
t161 = -t1467 * t595 + t1458;
t1236 = qJD(2) * t161;
t1121 = -t1332 / 0.2e1;
t1050 = t497 * t1093;
t1123 = t1336 / 0.2e1;
t921 = t1123 * t850 + t1050;
t183 = t1121 + t921;
t1234 = qJD(2) * t183;
t920 = -t1122 * t850 + t1050;
t185 = t1121 + t920;
t1233 = qJD(2) * t185;
t1113 = -t1305 / 0.2e1;
t1125 = t495 * t1381;
t196 = t1125 + t1262 / 0.2e1 + (t1123 + t1113) * t856;
t1232 = qJD(2) * t196;
t1038 = t826 / 0.2e1 + t1284 / 0.2e1;
t952 = t1381 * t497 + t1483 * t799;
t197 = t952 - t1038;
t1231 = qJD(2) * t197;
t337 = (t1474 + t1473) * t1283;
t1229 = qJD(2) * t337;
t1228 = qJD(2) * t1468;
t349 = t1084 * t856;
t1227 = qJD(2) * t349;
t1226 = qJD(2) * t1467;
t356 = t1084 * t860;
t1225 = qJD(2) * t356;
t1221 = qJD(2) * t595;
t652 = t1305 * t777 + t1307 * t857;
t1219 = qJD(2) * t652;
t653 = -t1305 * t778 + t1307 * t861;
t1218 = qJD(2) * t653;
t1006 = t1361 * t1110;
t695 = t1006 * t861 + t1007 * t857;
t1217 = qJD(2) * t695;
t1216 = qJD(2) * t778;
t1215 = qJD(2) * t854;
t1214 = qJD(2) * t855;
t1212 = qJD(3) * t797;
t1209 = qJD(3) * t857;
t1207 = qJD(3) * t861;
t1206 = qJD(3) * t862;
t1204 = qJD(4) * t856;
t1203 = qJD(4) * t857;
t1202 = qJD(4) * t860;
t1201 = qJD(4) * t861;
t1199 = qJD(5) * t843;
t1198 = qJD(5) * t856;
t1197 = qJD(5) * t860;
t1196 = qJD(6) * t595;
t1195 = qJD(6) * t695;
t1194 = qJD(6) * t856;
t155 = -t495 * t608 - t497 * t607;
t1191 = t155 * qJD(2);
t212 = t495 * t701 - t595 * t607;
t1190 = t212 * qJD(2);
t213 = -t497 * t701 + t595 * t608;
t1189 = t213 * qJD(2);
t257 = t1432 * t701 + t595 * t702;
t1188 = t257 * qJD(2);
t1085 = t1471 + t1472;
t346 = t1085 * t856;
t1185 = t346 * qJD(2);
t352 = t1085 * t860;
t1184 = t352 * qJD(2);
t388 = t1304 * t701 + t1305 * t595;
t1183 = t388 * qJD(2);
t389 = -t1304 * t702 - t1305 * t1432;
t1182 = t389 * qJD(2);
t444 = t777 * t861 - t778 * t857;
t503 = t444 * t1304;
t1181 = t503 * qJD(2);
t527 = t542 * qJD(2);
t529 = t543 * qJD(2);
t588 = t729 + t1385;
t1178 = t588 * qJD(2);
t1176 = t637 * qJD(3);
t787 = (-t858 ^ 2 + t852) * t847;
t1172 = t787 * qJD(2);
t1171 = t853 * qJD(4);
t1166 = t1358 / 0.2e1;
t1165 = pkin(5) * t1403;
t1164 = pkin(5) * t1402;
t1163 = t607 * t1409;
t1162 = t608 * t1409;
t1139 = t853 * t1206;
t1137 = t862 * t1171;
t1136 = qJD(6) * t797 * t799;
t1134 = t847 * t1213;
t1133 = qJD(3) * t1305;
t1132 = t218 * t1369;
t1131 = t218 * t1364;
t1130 = t1342 / 0.2e1;
t289 = t1036 * t1369;
t290 = t1036 * t1364;
t938 = -t1145 + t1151;
t306 = -pkin(5) * t1305 - t938;
t1129 = t306 * t1369;
t1128 = t306 * t1365;
t1127 = -t1340 / 0.2e1;
t1126 = t1339 / 0.2e1;
t1120 = t657 * t1383;
t1119 = t657 * t1382;
t1118 = -t1309 / 0.2e1;
t1117 = t1309 / 0.2e1;
t1116 = -t1308 / 0.2e1;
t1115 = t495 * t1374;
t1114 = t497 * t1373;
t1112 = t1305 / 0.2e1;
t1109 = -t1299 / 0.2e1;
t1108 = -t1294 / 0.2e1;
t1107 = -t1468 / 0.2e1;
t1102 = t637 / 0.2e1;
t1101 = -t1277 / 0.2e1;
t1100 = -t1276 / 0.2e1;
t1099 = -t1271 / 0.2e1;
t1092 = t640 / 0.2e1;
t1091 = t841 * t1365;
t1090 = t1407 - t229 / 0.2e1;
t1089 = t1407 + t242 / 0.2e1;
t1088 = t230 / 0.2e1 - t241 / 0.2e1;
t1087 = t1405 + t1406;
t1083 = t1388 - t1035 / 0.2e1;
t1082 = t939 / 0.2e1 + t1437;
t1081 = -t749 / 0.2e1 + t750 / 0.2e1;
t1079 = t1362 * qJD(4);
t1078 = t1362 * qJD(5);
t1077 = t1361 * qJD(4);
t1076 = t1361 * qJD(5);
t1071 = qJD(2) * t327 + t1135;
t1069 = -t1176 - t1194;
t1068 = t1170 * t797;
t1067 = t1170 * t799;
t1066 = qJD(3) + t1214;
t1065 = -qJD(6) - t1221;
t1064 = pkin(4) * t1076;
t1063 = pkin(4) * t1077;
t1059 = t1167 / 0.2e1;
t1058 = t1179 + (-t1198 - t1204) * t799;
t1057 = -t1180 + (-t1197 - t1202) * t799;
t1055 = -t1461 * t856 + t614 + t669;
t1053 = t1206 * t1306;
t1052 = t858 * t1134;
t1051 = t861 * t1140;
t1046 = t1356 / 0.2e1 + t365 / 0.2e1;
t1040 = t392 / 0.2e1 + t218 * t1378;
t1039 = t1036 * t1378 + t1391;
t1037 = t595 * t1375 + t333 / 0.2e1;
t1033 = t797 * t1067;
t1031 = -qJD(4) + t1140;
t1030 = -qJD(5) + t1140;
t1029 = t495 * t1059;
t1028 = t497 * t1059;
t1013 = t1275 - t1301;
t9 = t1013 * t595 - t1468 * t218 + t241 * t495 - t1466;
t1027 = t9 * qJD(2) + t1504;
t1014 = t1278 + t1298;
t10 = -t1014 * t595 - t1467 * t218 + t241 * t497 - t1465;
t1025 = t10 * qJD(2) + t1505;
t11 = t230 * t495 - t1466 + (t1257 * t856 + t1273) * t595;
t1024 = t11 * qJD(2) + t1504;
t12 = t230 * t497 - t1465 + (t1257 * t860 - t1296) * t595;
t1023 = t12 * qJD(2) + t1505;
t139 = t1272 - t1299;
t13 = t139 * t595 + t218 * t607 + t306 * t495 + t701 * t93;
t1011 = -t1297 + t1320;
t864 = t1011 * t1381 + t362 * t799;
t311 = -t1294 + t1329;
t891 = t1386 * t208 + t1403 * t394 + t1405 * t607 + t1473 * t311;
t20 = t864 + t891;
t1022 = t20 * qJD(1) + t13 * qJD(2);
t140 = t1276 + t1295;
t14 = -t140 * t595 + t218 * t608 + t306 * t497 + t701 * t94;
t1012 = t1274 + t1322;
t865 = t1012 * t1381 + t363 * t799;
t312 = t1271 + t1330;
t890 = t1386 * t209 + t1401 * t394 + t1405 * t608 + t1474 * t312;
t22 = -t865 + t890;
t1021 = t22 * qJD(1) + t14 * qJD(2);
t43 = -t218 * t495 + t595 * t93;
t966 = -t1322 / 0.2e1 - t1274 / 0.2e1;
t973 = t1406 * t495 + t1473 * t208;
t54 = t966 - t973;
t1020 = qJD(1) * t54 - qJD(2) * t43;
t44 = t218 * t497 - t595 * t94;
t965 = t1320 / 0.2e1 - t1297 / 0.2e1;
t971 = t1036 * t1401 + t1474 * t209;
t53 = t965 - t971;
t1019 = qJD(1) * t53 - qJD(2) * t44;
t61 = t1304 * t938 + t1305 * t229 - t696 * t595 + t606 * t701;
t880 = (t1036 * t1366 + t1363 * t394) * t853 - t701 * t1392 + t595 * t1391;
t64 = -t1324 / 0.2e1 + t880;
t1018 = t64 * qJD(1) - t61 * qJD(2);
t62 = t696 * t1432 - t606 * t702 + (t1252 * t862 - t230 * t858) * t853;
t879 = (t1363 * t395 + t1366 * t1431) * t853 - t702 * t1392 + t1432 * t1391;
t66 = t1323 / 0.2e1 + t879;
t1017 = t66 * qJD(1) + t62 * qJD(2);
t91 = -t1304 * t241 - t1359 * t595 - t1457;
t1016 = qJD(2) * t91 - t1491;
t949 = -t1036 * t1110 - t1392 * t595;
t83 = t873 + t949;
t92 = t1304 * t242 + t1359 * t1432 - t1469;
t1015 = -qJD(1) * t83 - qJD(2) * t92;
t1009 = -t1432 * t841 - t842 * t595;
t1008 = t1310 - t1312;
t1004 = t1361 * t1113;
t127 = -t1304 * t229 - t1469;
t950 = t1036 * t1111 + t1474 * t657;
t81 = t873 + t950;
t1003 = -qJD(1) * t81 - qJD(2) * t127;
t128 = -t1304 * t230 - t1457;
t1002 = qJD(2) * t128 - t1491;
t301 = t1048 + t452 / 0.2e1;
t883 = t1404 - t1149 / 0.2e1 + pkin(4) * t1006;
t979 = t1404 - t1148 / 0.2e1;
t71 = t883 - t979;
t1001 = -t301 * qJD(1) - t71 * qJD(2);
t610 = -t1358 * t799 - t797 * t843;
t67 = (t1004 + t1432 * t1368 + t1313 / 0.2e1) * pkin(4) - t121;
t999 = qJD(2) * t67 - qJD(3) * t610;
t998 = t799 * (qJD(6) + t1212);
t946 = -t658 * t777 / 0.2e1 + t480 * t1113;
t129 = t1319 / 0.2e1 + t946;
t204 = t1074 * t1304 - t1158 * t741 + t1305 * t532 + t781 * t777;
t997 = t129 * qJD(1) - t204 * qJD(2);
t945 = t1113 * t481 + t1382 * t658;
t132 = -t1321 / 0.2e1 + t945;
t205 = t781 * t778 + (-t533 * t858 + (t1244 + t1315) * t862) * t853;
t996 = t132 * qJD(1) + t205 * qJD(2);
t221 = t1119 + t1318 / 0.2e1 + (t481 * t1363 - t1155 / 0.2e1) * t853;
t344 = -t1304 * t533 - t741 * t778;
t995 = -qJD(1) * t221 + qJD(2) * t344;
t223 = t1120 + t1317 / 0.2e1 + (-t480 * t862 / 0.2e1 + t1157 / 0.2e1) * t853;
t345 = -t1304 * t532 + t741 * t777;
t994 = -qJD(1) * t223 - qJD(2) * t345;
t914 = (-t1260 / 0.2e1 - t1153 / 0.2e1) * t854;
t944 = t1112 * t770 + t1371 * t658;
t368 = t914 - t944;
t684 = -pkin(2) * t1306 - t781 * t855;
t993 = qJD(1) * t368 - qJD(2) * t684;
t913 = (-t1259 / 0.2e1 + t1154 / 0.2e1) * t854;
t947 = t1111 * t770 + t1371 * t657;
t369 = t913 + t947;
t683 = t1360 * t847 - t779 * t855;
t992 = qJD(1) * t369 + qJD(2) * t683;
t991 = qJD(3) * t134 + t1490;
t651 = t830 * t792;
t989 = -qJD(2) * t138 - qJD(3) * t651;
t988 = qJD(3) * t201 + t1490;
t504 = t777 ^ 2 - t778 ^ 2;
t986 = qJD(2) * t504 + qJD(3) * t444;
t985 = qJD(2) * t444 + qJD(3) * t831;
t984 = t1209 + t1216;
t983 = t1170 * t1432;
t982 = -t1200 - t1205;
t980 = t1355 / 0.2e1 - t1354 / 0.2e1;
t978 = t853 * t1045;
t932 = pkin(10) * t1111 * t861 + pkin(3) * t1382;
t340 = t1384 + (t779 / 0.2e1 - t741 / 0.2e1) * t857 + t932;
t977 = pkin(3) * t1209 + qJD(2) * t340;
t897 = pkin(3) * t1383 - t1315 / 0.2e1 + t857 * pkin(10) * t1110;
t341 = t897 + t1081;
t976 = pkin(3) * t1207 + qJD(2) * t341;
t975 = (t208 / 0.2e1 - t1300 / 0.2e1) * t799;
t974 = (t209 / 0.2e1 + t1101) * t799;
t964 = t1373 * t799 + t1375 * t797;
t962 = -qJD(2) * t121 + t1210 * t797;
t958 = qJD(3) * t327 - t1141;
t586 = t1367 * t777 + t1382 * t861;
t957 = qJD(3) * t586 + t1216 * t777;
t956 = qJD(2) * t586 + t1207 * t857;
t955 = pkin(5) / 0.2e1 + t981;
t941 = t1390 + t980;
t940 = -0.2e1 * t799 * t1427;
t867 = t1013 * t1381 + (t1267 + t1463) * t1474 + t1035 * t1482 + t968;
t899 = t1103 * t841 + t1373 * t607 + t1128;
t1 = t218 * t1102 + (-t93 / 0.2e1 + t1130) * t799 + t867 + t899;
t107 = t1267 * t797 + t1448;
t917 = t1087 * t797 + t1379 * t1431;
t887 = t1378 * t208 + t856 * t917;
t33 = t1126 + t887;
t931 = t33 * qJD(1) - t1 * qJD(2) + t107 * qJD(3);
t108 = -t1289 * t797 + t1447;
t866 = t1014 * t1380 + (-t1462 + t1289) * t1473 + t1035 * t1483 + t967;
t900 = -t1091 * t701 + t1373 * t608 + t1129;
t2 = t218 * t1092 + (-t94 / 0.2e1 + t1341 / 0.2e1) * t799 + t866 + t900;
t886 = t1378 * t209 + t860 * t917;
t38 = t1127 + t886;
t930 = t38 * qJD(1) - t2 * qJD(2) + t108 * qJD(3);
t125 = t672 * t640 + t1448;
t31 = t1126 + t975;
t896 = pkin(12) * t1386 + t1090 * t797 + t1378 * t230;
t926 = t306 / 0.2e1 + t595 * t1390 + t365 * t1380;
t5 = t1163 - t1353 / 0.2e1 - t926 * t860 + t896 * t856 + t968;
t929 = t31 * qJD(1) - t5 * qJD(2) + t125 * qJD(3);
t126 = -t672 * t637 + t1447;
t36 = t1127 + t974;
t6 = t1162 - t1352 / 0.2e1 + t926 * t856 + t896 * t860 + t967;
t928 = t36 * qJD(1) - t6 * qJD(2) + t126 * qJD(3);
t925 = t643 / 0.2e1 + t964;
t908 = t1035 * t1402 + t1380 * t94 + t1473 * t426;
t15 = t1040 * t860 + t1109 + t908;
t271 = -t1035 * t1308 - t426 * t797;
t57 = t1108 + t1345 / 0.2e1 + t1039 * t860;
t924 = qJD(1) * t57 + qJD(2) * t15 - qJD(3) * t271;
t909 = t1381 * t93 + t1388 * t495 + t1474 * t425;
t16 = -t1040 * t856 + t1100 + t909;
t270 = t1035 * t1309 + t425 * t797;
t58 = t1099 - t1346 / 0.2e1 - t1039 * t856;
t923 = qJD(1) * t58 + qJD(2) * t16 - qJD(3) * t270;
t875 = (t1375 - t1167 / 0.2e1 - pkin(12) / 0.2e1) * t799 + (t1409 + t981) * t797;
t151 = -t1082 * t860 + t856 * t875;
t877 = t1357 / 0.2e1 + pkin(5) * t1474 + t898;
t39 = -t1088 * t860 + t856 * t877 + t1029;
t922 = -t39 * qJD(2) - t151 * qJD(3);
t912 = (-t1077 - t1076) * pkin(4);
t911 = qJD(3) * t325 + t1221 * t1432 + t1452;
t910 = t959 + t1452;
t258 = t941 * t856;
t49 = t1046 * t856 + t1090 * t860 + t1165;
t712 = t955 * t860;
t895 = pkin(5) * t1197 - qJD(2) * t49 - qJD(3) * t258 + qJD(4) * t712;
t260 = t941 * t860;
t51 = -t1046 * t860 + t1090 * t856 + t1164;
t711 = t955 * t856;
t894 = pkin(5) * t1198 - qJD(2) * t51 + qJD(3) * t260 + qJD(4) * t711;
t110 = t1087 * t856;
t233 = t1083 * t856 - t860 * t925;
t47 = -t1037 * t860 + t1089 * t856 + t1114;
t893 = qJD(1) * t110 - qJD(2) * t47 - qJD(3) * t233 - t1204 * t842;
t114 = t1087 * t860;
t231 = t1083 * t860 + t856 * t925;
t45 = t1037 * t856 + t1089 * t860 + t1115;
t892 = qJD(1) * t114 - qJD(2) * t45 - qJD(3) * t231 - t1202 * t842;
t154 = t1082 * t856 + t860 * t875;
t42 = t1088 * t856 + t860 * t877 + t1028;
t888 = -t42 * qJD(2) - t154 * qJD(3) - t1063 * t856;
t876 = t1310 / 0.2e1 - t1312 / 0.2e1 + (t1361 * t1379 + t1362 * t1381) * pkin(4);
t829 = t856 * t1064;
t823 = qJD(3) * t1112;
t822 = qJD(2) * t1113;
t821 = qJD(2) * t1112;
t816 = t830 * qJD(6);
t744 = (t1134 - t1171 / 0.2e1) * t858;
t714 = pkin(5) * t1365 + t1060 * t860 + t1364 * t842;
t713 = pkin(5) * t1370 + t1060 * t856 + t1369 * t842;
t678 = (t1134 + (-qJD(4) / 0.2e1 - qJD(5) / 0.2e1) * t853) * t858;
t675 = -t1263 / 0.2e1;
t673 = -t1285 / 0.2e1;
t578 = t1332 / 0.2e1;
t570 = t586 * qJD(4);
t545 = t1111 * t799 - t1304 * t1418;
t544 = t1110 * t797 + t1304 * t916;
t531 = t545 * qJD(3);
t530 = t544 * qJD(3);
t443 = 0.2e1 * t729 - t1144;
t438 = t444 * qJD(4);
t406 = t657 * t861;
t404 = t657 * t857;
t385 = t1067 - t527;
t384 = -t1068 - t529;
t383 = -t1339 / 0.2e1;
t382 = t1340 / 0.2e1;
t371 = t914 + t944;
t370 = t913 - t947;
t357 = t1268 / 0.2e1 + t1432 * t1364;
t355 = t1483 + t1484;
t351 = t1369 * t1432 + t1104;
t350 = t1107 + t1482;
t343 = t741 * t1367 + t1282 / 0.2e1 + t1384 - t932;
t342 = -t897 + t1081;
t336 = 0.2e1 * t1484 * t856;
t309 = qJD(3) * t695 + t1170 * t1425;
t274 = t296 * qJD(3);
t261 = t1463 + t1266 / 0.2e1 - t980 * t860;
t259 = t1462 - t1288 / 0.2e1 + t980 * t856;
t235 = t240 * qJD(6);
t234 = t1463 + t1267 / 0.2e1 - t964 * t860;
t232 = t1462 - t1289 / 0.2e1 + t964 * t856;
t224 = t1120 + t480 * t1111 - t1317 / 0.2e1 - t1062 / 0.2e1;
t222 = t481 * t1110 + t1119 - t1318 / 0.2e1 + t1061 / 0.2e1;
t198 = t952 + t1038;
t195 = t799 * t1482 + t1125 - t1262 / 0.2e1 + t856 * t1112;
t184 = t578 + t920;
t182 = t578 + t921;
t163 = t1080 * t595 + t1473 * t848 + t1474 * t850;
t157 = 0.2e1 * t1048 + t1146;
t153 = t1434 + pkin(12) * t1308 / 0.2e1 + pkin(5) * t1092 + t876 * t860;
t152 = pkin(5) * t1102 + pkin(12) * t1117 + t876 * t856 - t1433;
t137 = t138 * qJD(6);
t131 = t1321 / 0.2e1 + t945;
t130 = -t1319 / 0.2e1 + t946;
t124 = t918 + t1253;
t120 = -t1036 * t1365 + t290;
t119 = 0.2e1 * t290;
t118 = -t1036 * t1370 + t289;
t117 = 0.2e1 * t289;
t116 = t1365 * t1431 + t1101;
t111 = t1300 / 0.2e1 + t1431 * t1369;
t101 = t673 + t902;
t99 = t673 + t885;
t97 = t675 + t903;
t95 = t675 + t884;
t84 = t949 - t873;
t82 = t950 - t873;
t74 = t1147 - t1152 / 0.2e1 + t934;
t72 = t883 + t979;
t70 = t1432 * t1166 + (-t1313 / 0.2e1 + t1004) * pkin(4) + t122;
t69 = t595 * t1166 + t1253 + t501 - t943 + (t1314 / 0.2e1 + t1005) * pkin(4);
t65 = -t1323 / 0.2e1 + t879;
t63 = t1324 / 0.2e1 + t880;
t60 = -t1345 / 0.2e1 + t1036 * t1116 + t1108 + t1329 / 0.2e1;
t59 = t1346 / 0.2e1 + t1036 * t1117 + t1099 - t1330 / 0.2e1;
t56 = t965 + t971;
t55 = t966 + t973;
t52 = pkin(12) * t1484 + t1164 + t1132 + t1302 / 0.2e1 + t1273 / 0.2e1;
t50 = pkin(12) * t1482 + t1165 + t1131 + t1279 / 0.2e1 - t1296 / 0.2e1;
t48 = t595 * t1091 + t1114 + t1132 - t1301 / 0.2e1 + t1275 / 0.2e1;
t46 = t841 * t1482 + t1115 + t1131 - t1278 / 0.2e1 - t1298 / 0.2e1;
t41 = t1028 + t1344 / 0.2e1 + pkin(5) * t1483 + t1130 + t1430 * t860;
t40 = t1029 - t1343 / 0.2e1 + pkin(5) * t1482 - t1341 / 0.2e1 + t1430 * t856;
t37 = t382 + t886;
t35 = t382 + t974;
t34 = t383 + t887;
t32 = t383 + t975;
t21 = t865 + t890;
t19 = -t864 + t891;
t18 = t218 * t1116 + t1109 + t1272 / 0.2e1 - t908;
t17 = t218 * t1117 + t1100 - t1295 / 0.2e1 - t909;
t8 = (t1288 - t1462) * t1474 + (-t1279 + t1296) * t1381 + t1035 * t1484 + t230 * t1116 + pkin(12) * t1094 + t1162 + t1129 - t967 + t1435;
t7 = (t1266 + t1463) * t1473 + (t1273 + t1302) * t1380 + t1035 * t1107 + t230 * t1118 + pkin(12) * t1103 + t1163 + t1128 - t968 + t1436;
t4 = t1116 * t241 + t1435 - t866 + t900;
t3 = t1118 * t241 + t1436 - t867 + t899;
t23 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t859 * t1215, -t863 * t1215, 0, 0, 0, 0, 0 (-t1280 * t847 * t854 - t717 * t855) * qJD(2) + t371 * qJD(3) (t1156 * t847 - t718 * t855) * qJD(2) + t370 * qJD(3), 0, 0, 0, 0, 0 (-t1304 * t954 - t717 * t777) * qJD(2) + t130 * qJD(3) + t222 * qJD(4) (t1304 * t953 + t717 * t778) * qJD(2) + t131 * qJD(3) + t224 * qJD(4), 0, 0, 0, 0, 0 (t1304 * t874 + t717 * t595) * qJD(2) + t63 * qJD(3) + t1170 * t1481 (t1304 * t364 + t1432 * t717) * qJD(2) + t65 * qJD(3) + t84 * qJD(4) + t82 * qJD(5), 0, 0, 0, 0, 0 (t1011 * t595 + t495 * t874) * qJD(2) + t19 * qJD(3) + t56 * qJD(6) + t1170 * t1497 (-t1012 * t595 + t497 * t874) * qJD(2) + t21 * qJD(3) + t55 * qJD(6) + t1170 * t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t371 - qJD(3) * t658, qJD(2) * t370 + qJD(3) * t657, 0, 0, 0, 0, 0, qJD(2) * t130 + qJD(4) * t404 - t1207 * t658, qJD(2) * t131 + qJD(4) * t406 + t1209 * t658, 0, 0, 0, 0, 0, qJD(2) * t63 + t1170 * t298 + t1212 * t658, qJD(2) * t65 + t1170 * t297 - t1211 * t658, 0, 0, 0, 0, 0, t19 * qJD(2) + (-t1309 * t394 + t311 * t797) * qJD(3) + t34 * qJD(4) + t32 * qJD(5) + t60 * qJD(6), t21 * qJD(2) + (-t1308 * t394 - t312 * t797) * qJD(3) + t37 * qJD(4) + t35 * qJD(5) + t59 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t222 + qJD(3) * t404 - qJD(4) * t481, qJD(2) * t224 + qJD(3) * t406 + qJD(4) * t480, 0, 0, 0, 0, 0, -qJD(4) * t1431 + qJD(5) * t157 + t1487, qJD(2) * t84 + t1441, 0, 0, 0, 0, 0, qJD(3) * t34 + qJD(5) * t116 + qJD(6) * t118 - t1202 * t1431 + t1501, qJD(3) * t37 + qJD(5) * t111 + qJD(6) * t120 + t1204 * t1431 + t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t157 - qJD(5) * t1431 + t1487, qJD(2) * t82 + t1441, 0, 0, 0, 0, 0, qJD(3) * t32 + qJD(4) * t116 + qJD(6) * t117 - t1197 * t1431 + t1501, qJD(3) * t35 + qJD(4) * t111 + qJD(6) * t119 + t1198 * t1431 + t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t56 + qJD(3) * t60 + qJD(4) * t118 + qJD(5) * t117 - qJD(6) * t209, qJD(2) * t55 + qJD(3) * t59 + qJD(4) * t120 + qJD(5) * t119 + qJD(6) * t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368 * qJD(3), -t369 * qJD(3), 0, 0, 0, 0, 0, qJD(3) * t129 + qJD(4) * t221, qJD(3) * t132 + qJD(4) * t223, 0, 0, 0, 0, 0, qJD(3) * t64 + t1170 * t1478, qJD(3) * t66 + qJD(4) * t83 + qJD(5) * t81, 0, 0, 0, 0, 0, qJD(3) * t20 - qJD(6) * t53 + t1170 * t1496, qJD(3) * t22 - qJD(6) * t54 + t1170 * t1495; 0, 0, 0, 0, t1053, t787 * qJD(3), t855 * t1139, -t855 * t1133, 0, t684 * qJD(3), -t683 * qJD(3) (qJD(4) * t777 + t1139 * t861) * t778, qJD(3) * t503 + qJD(4) * t504, -qJD(3) * t653 - t1137 * t777, qJD(3) * t652 + t1137 * t778, -t1053, -qJD(3) * t204 - qJD(4) * t344, qJD(3) * t205 + qJD(4) * t345 (-qJD(3) * t702 + t982) * t1432, qJD(3) * t257 + t1170 * t1476, -t389 * qJD(3) - t1304 * t982, -t388 * qJD(3) + t1304 * t983, -t1053, -qJD(3) * t61 - qJD(4) * t91 - qJD(5) * t128, qJD(3) * t62 + qJD(4) * t92 + qJD(5) * t127 (qJD(3) * t608 - qJD(6) * t495 + t860 * t982) * t497, qJD(3) * t155 + qJD(6) * t203 + t1170 * t1464, qJD(3) * t213 + qJD(4) * t161 + qJD(5) * t160 - t1196 * t495, qJD(3) * t212 - qJD(4) * t159 - qJD(5) * t158 - t1196 * t497 (-qJD(3) * t701 + t983) * t595, qJD(3) * t13 + qJD(4) * t9 + qJD(5) * t11 + qJD(6) * t44, qJD(3) * t14 + qJD(4) * t10 + qJD(5) * t12 + qJD(6) * t43; 0, 0, 0, 0, t1052, t1172, t1066 * t1304, -t1066 * t1305, 0, -qJD(3) * t781 - t993, qJD(3) * t779 - t992, t1261 * t853 * t984 + t570, t1139 * t831 + t1181 + t438, t1133 * t857 - t1218, t1133 * t861 + t1219, -t744 (-t781 * t861 + t857 * t978) * qJD(3) + t343 * qJD(4) + t997 (t781 * t857 + t861 * t978) * qJD(3) + t342 * qJD(4) + t996 -(-t1211 + t1220) * t702 + t1255, t1188 + (-t701 * t799 + t702 * t797) * qJD(3) + t1258, -t1133 * t799 + t1170 * t544 - t1182, -t1133 * t797 + t1170 * t545 - t1183, -t678 (-t1035 * t1305 + t696 * t797 - t701 * t843) * qJD(3) + t69 * qJD(4) + t124 * qJD(5) + t1018 (-t1305 * t939 - t696 * t799 - t702 * t843) * qJD(3) + t70 * qJD(4) + t122 * qJD(5) + t1017, qJD(4) * t184 + qJD(5) * t182 + t235 + (-t1208 * t799 + t1224) * t608, t1191 - t137 + (t607 * t860 + t1332) * t1211 + t1170 * t1479, t1189 + (t1263 * t799 + t608 * t797) * qJD(3) + t99 * qJD(4) + t101 * qJD(5) + t195 * qJD(6), t1190 + (-t1285 * t799 - t607 * t797) * qJD(3) + t95 * qJD(4) + t97 * qJD(5) + t198 * qJD(6), t1195 - (t1212 + t1221) * t701 + t1256 (t1035 * t607 - t1309 * t306 + t139 * t797 + t425 * t701) * qJD(3) + t3 * qJD(4) + t7 * qJD(5) + t18 * qJD(6) + t1022 (t1035 * t608 - t1308 * t306 - t140 * t797 + t426 * t701) * qJD(3) + t4 * qJD(4) + t8 * qJD(5) + t17 * qJD(6) + t1021; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t957, t986, -t1031 * t777, t1031 * t778, t823, qJD(3) * t343 - qJD(4) * t533 - t995, qJD(3) * t342 + qJD(4) * t532 - t994, t958, t991, t1031 * t595 - t1200 + t530, qJD(5) * t443 + t1031 * t1432 + t531, t823, qJD(3) * t69 - qJD(4) * t241 + qJD(5) * t72 - t1016, qJD(3) * t70 - qJD(4) * t242 + qJD(5) * t74 - t1015, qJD(3) * t184 + qJD(5) * t336 + t308 - (t1204 + t1224) * t1467, t163 * qJD(5) - t1205 * t830 + t1486, qJD(3) * t99 + qJD(5) * t351 + qJD(6) * t355 + t1204 * t1432 + t1236, qJD(3) * t95 + qJD(5) * t357 + qJD(6) * t350 + t1202 * t1432 - t1238, t911, t3 * qJD(3) + (t1009 * t856 - t1341) * qJD(4) + t40 * qJD(5) + t48 * qJD(6) + t1027, t4 * qJD(3) + (t1009 * t860 + t1342) * qJD(4) + t41 * qJD(5) + t46 * qJD(6) + t1025; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t959, t988, t1030 * t595 - t1205 + t530, qJD(4) * t443 + t1030 * t1432 + t531, t823, qJD(3) * t124 + qJD(4) * t72 - qJD(5) * t230 - t1002, qJD(3) * t122 + qJD(4) * t74 + qJD(5) * t229 - t1003, qJD(3) * t182 + qJD(4) * t336 + t308 + (-t1198 - t1224) * t1467, t163 * qJD(4) - t1200 * t830 + t1486, qJD(3) * t101 + qJD(4) * t351 + t1198 * t1432 + t1237, qJD(3) * t97 + qJD(4) * t357 + t1197 * t1432 - t1239, t910, t7 * qJD(3) + t40 * qJD(4) + (t1044 * t856 - t1343) * qJD(5) + t52 * qJD(6) + t1024, t8 * qJD(3) + t41 * qJD(4) + (t1044 * t860 + t1344) * qJD(5) + t50 * qJD(6) + t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1415, -t1416, qJD(3) * t195 + qJD(4) * t355 + t1065 * t495, qJD(3) * t198 + qJD(4) * t350 + t1065 * t497, t309, qJD(3) * t18 + qJD(4) * t48 + qJD(5) * t52 - qJD(6) * t94 - t1019, qJD(3) * t17 + qJD(4) * t46 + qJD(5) * t50 + qJD(6) * t93 - t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, t368 * qJD(2), t369 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t129, -qJD(2) * t132, 0, 0, 0, 0, 0, -qJD(2) * t64 - t1170 * t295, -qJD(2) * t66 - t1170 * t296, 0, 0, 0, 0, 0, -qJD(2) * t20 + qJD(4) * t33 + qJD(5) * t31 - qJD(6) * t57, -qJD(2) * t22 + qJD(4) * t38 + qJD(5) * t36 - qJD(6) * t58; 0, 0, 0, 0, -t1052, -t1172, -t855 * t1140, t1214 * t1305, 0, t993, t992, -t1051 * t778 + t570, t438 - t1181, -t1137 * t861 + t1218, t1137 * t857 - t1219, t744, -qJD(4) * t340 - t997, -qJD(4) * t341 - t996, t1220 * t702 + t1255, -t1188 + t1258, -t1170 * t543 + t1182, -t1170 * t542 + t1183, t678, -qJD(4) * t68 + qJD(5) * t123 - t1018, -qJD(4) * t67 + qJD(5) * t121 - t1017, qJD(4) * t185 + qJD(5) * t183 - t1224 * t608 + t235, t1170 * t1480 - t1191 - t137, qJD(4) * t100 + qJD(5) * t102 + qJD(6) * t196 - t1189, qJD(4) * t96 + qJD(5) * t98 + qJD(6) * t197 - t1190, t1221 * t701 - t1195 + t1256, -qJD(4) * t1 - qJD(5) * t5 - qJD(6) * t15 - t1022, -qJD(4) * t2 - qJD(5) * t6 - qJD(6) * t16 - t1021; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t857 * t1201, t831 * qJD(4), 0, 0, 0, -pkin(3) * t1203, -pkin(3) * t1201, t1033, -t1170 * t1169, 0, 0, 0, qJD(4) * t609 - t1199 * t799, qJD(4) * t610 - t1199 * t797, t1033 * t850 - t792 * t834, -t651 * qJD(6) + t797 * t940, t1136 * t856 + t1170 * t541, t1136 * t860 - t1170 * t540, -t799 * t1068, qJD(4) * t107 + qJD(5) * t125 + qJD(6) * t271, qJD(4) * t108 + qJD(5) * t126 + qJD(6) * t270; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t956, t985, -t1031 * t861, t1031 * t857, t822, -pkin(10) * t1201 - t977, pkin(10) * t1203 - t976, t1071, t1419, t384, t385, t822, -t1426 - t1440, t1442 - t999, t1055 + t1233, t1494, t1058 + t1242, t1057 + t1348, t1423 (t1008 * t856 - t1433) * qJD(4) + t152 * qJD(5) + t234 * qJD(6) + t931 (t1008 * t860 + t1434) * qJD(4) + t153 * qJD(5) + t232 * qJD(6) + t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1072, t1420, t384, t385, t822, -t1429 - t1440, t1442 - t962, t1055 + t1234, t1494, t1058 + t1241, t1057 + t1347, t1424, t152 * qJD(4) + (t1043 * t856 - t1433) * qJD(5) + t261 * qJD(6) + t929, t153 * qJD(4) + (t1043 * t860 + t1434) * qJD(5) + t259 * qJD(6) + t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, t1427 * t1438 + t989, t856 * t998 + t1232, t860 * t998 + t1231, -t1217 + t1243, qJD(4) * t234 + qJD(5) * t261 - qJD(6) * t426 - t924, qJD(4) * t232 + qJD(5) * t259 + qJD(6) * t425 - t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t221, -qJD(2) * t223, 0, 0, 0, 0, 0, qJD(5) * t301 + t1488, -qJD(2) * t83 + t274, 0, 0, 0, 0, 0, -qJD(3) * t33 - qJD(6) * t110 - t1502, -qJD(3) * t38 - qJD(6) * t114 - t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t957, -t986 (qJD(2) * t777 + t1207) * t1304, -t984 * t1304, t823, qJD(3) * t340 + t995, qJD(3) * t341 + t994, -t958, -t991, t1446, qJD(5) * t588 + t1444, t823, qJD(3) * t68 + qJD(5) * t71 + t1016, qJD(3) * t67 + qJD(5) * t73 + t1015, -qJD(3) * t185 + qJD(5) * t337 + t1445, t1485, -qJD(3) * t100 - qJD(5) * t346 + qJD(6) * t356 - t1236, -qJD(3) * t96 - qJD(5) * t352 - qJD(6) * t349 + t1238, -t911, qJD(3) * t1 + qJD(5) * t39 + qJD(6) * t47 - t1027, qJD(3) * t2 + qJD(5) * t42 + qJD(6) * t45 - t1025; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t956, -t985, t1051, -t857 * t1140, t821, t977, t976, -t1071, -t1419, t529, t527, t821, t1426, t1186 + t999, -t1233 + t1249, t1493, -t1242 + t1248, t1251 - t1348, -t1423, qJD(5) * t151 + qJD(6) * t233 - t931, qJD(5) * t154 + qJD(6) * t231 - t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1064, -pkin(4) * t1078, t834, t816, 0, 0, 0, -t1064 * t860 + t1194 * t842, t842 * t846 + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1178, 0, -t1001 + t912, t1316 + (-t1079 - t1078) * pkin(4), t834 + t1229, t816, -t1185, -t1184, 0, t713 * qJD(6) + t860 * t912 - t922, t714 * qJD(6) + t829 - t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t135, t1225 + t1247, t1069 - t1227, -t1443, qJD(5) * t713 - t841 * t846 - t893, qJD(5) * t714 + t1194 * t841 - t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t301 + t1488, -qJD(2) * t81 + t274, 0, 0, 0, 0, 0, -qJD(3) * t31 - t1502, -qJD(3) * t36 - t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t959, -t988, t1446, -qJD(4) * t588 + t1444, t823, -qJD(3) * t123 - qJD(4) * t71 + t1002, -qJD(3) * t121 - qJD(4) * t73 + t1003, -qJD(3) * t183 - qJD(4) * t337 + t1445, t1485, -qJD(3) * t102 + qJD(4) * t346 + qJD(6) * t1467 - t1237, -qJD(3) * t98 + qJD(4) * t352 - qJD(6) * t1468 + t1239, -t910, qJD(3) * t5 - qJD(4) * t39 + qJD(6) * t51 - t1024, qJD(3) * t6 - qJD(4) * t42 + qJD(6) * t49 - t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1072, -t1420, t529, t527, t821, t1429, t1186 + t962, -t1234 + t1249, t1493, -t1241 + t1248, t1251 - t1347, -t1424, -qJD(4) * t151 - qJD(6) * t260 - t929, -qJD(4) * t154 + qJD(6) * t258 - t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1178, 0, t1063 + t1001, pkin(4) * t1079 - t1316, t834 - t1229, t816, t1185, t1184, 0, -t711 * qJD(6) + t1063 * t860 + t922, -t712 * qJD(6) + t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t834, t816, 0, 0, 0, -pkin(5) * t1194, -pkin(5) * t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t135, t1226 + t1247, t1069 - t1228, -t1443, -pkin(12) * t846 - t894, pkin(12) * t1194 - t895; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + qJD(3) * t57 + qJD(4) * t110, qJD(2) * t54 + qJD(3) * t58 + qJD(4) * t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1415, t1416, -qJD(3) * t196 - qJD(4) * t356 - qJD(5) * t1467 + t1221 * t495, -qJD(3) * t197 + qJD(4) * t349 + qJD(5) * t1468 + t1221 * t497, t309, qJD(3) * t15 - qJD(4) * t47 - qJD(5) * t51 + t1019, qJD(3) * t16 - qJD(4) * t45 - qJD(5) * t49 + t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1414, t940 - t989, -t1135 * t856 - t1232 - t1461, -t1135 * t860 + t1170 * t637 - t1231, t1217 + t1243, -qJD(4) * t233 + qJD(5) * t260 + t924, -qJD(4) * t231 - qJD(5) * t258 + t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t135, -t1175 - t1225, t1176 + t1227, t1443, qJD(5) * t711 + t893, qJD(5) * t712 + t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t135, -t1175 - t1226, t1176 + t1228, t1443, t894, t895; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
