% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:36:50
% EndTime: 2019-03-08 23:37:17
% DurationCPUTime: 15.57s
% Computational Cost: add. (5712->716), mult. (14146->986), div. (0->0), fcn. (14515->10), ass. (0->537)
t650 = qJD(4) - qJD(6);
t478 = cos(qJ(3));
t472 = sin(qJ(6));
t473 = sin(qJ(4));
t476 = cos(qJ(6));
t477 = cos(qJ(4));
t550 = t472 * t477 - t473 * t476;
t833 = t550 * t478;
t613 = -t833 / 0.2e1;
t393 = t472 * t473 + t476 * t477;
t349 = t393 * t478;
t616 = -t349 / 0.2e1;
t474 = sin(qJ(3));
t728 = t473 * t474;
t446 = pkin(4) * t728;
t717 = t477 * qJ(5);
t592 = -pkin(8) + t717;
t285 = -t446 + (-pkin(5) * t473 + t592) * t474;
t348 = t393 * t474;
t828 = pkin(9) - pkin(10);
t422 = t828 * t473;
t423 = t828 * t477;
t590 = t422 * t472 + t423 * t476;
t783 = -t478 / 0.2e1;
t794 = -t550 / 0.2e1;
t730 = t473 * qJ(5);
t807 = pkin(4) + pkin(5);
t811 = -t477 * t807 - t730;
t371 = pkin(3) - t811;
t797 = t371 / 0.2e1;
t496 = t285 * t794 + t348 * t797 + t590 * t783;
t718 = t476 * t474;
t726 = t474 * t477;
t345 = t472 * t726 - t473 * t718;
t795 = t393 / 0.2e1;
t110 = t345 * t794 + t348 * t795;
t675 = qJD(3) * t550;
t832 = qJD(2) * t110 - t393 * t675;
t679 = qJD(2) * t348;
t831 = qJD(3) * t110 + t345 * t679;
t830 = t650 * t590;
t119 = t345 ^ 2 - t348 ^ 2;
t69 = t345 * t393 + t348 * t550;
t545 = qJD(2) * t119 + qJD(3) * t69;
t161 = t393 ^ 2 - t550 ^ 2;
t543 = qJD(2) * t69 + qJD(3) * t161;
t164 = t422 * t476 - t423 * t472;
t829 = t650 * t164;
t651 = t478 * qJD(2);
t583 = qJD(6) + t651;
t563 = -qJD(4) + t583;
t827 = t345 * t563;
t826 = t348 * t563;
t825 = t393 * t650;
t585 = t650 * t550;
t713 = t477 * t478;
t449 = pkin(8) * t713;
t779 = pkin(9) * t474;
t573 = -pkin(3) * t478 - t779;
t540 = -pkin(2) + t573;
t330 = t473 * t540 + t449;
t776 = t478 * pkin(9);
t778 = t474 * pkin(3);
t424 = -t776 + t778;
t399 = t473 * t424;
t115 = t399 * t478 + (-t330 + t449) * t474;
t471 = sin(pkin(6));
t475 = sin(qJ(2));
t737 = t471 * t475;
t774 = cos(pkin(6));
t364 = t474 * t774 + t478 * t737;
t746 = t364 * t477;
t479 = cos(qJ(2));
t736 = t471 * t479;
t641 = t473 * t736;
t258 = -t641 + t746;
t804 = -t258 / 0.2e1;
t571 = t804 + t746 / 0.2e1;
t610 = -t736 / 0.2e1;
t579 = t473 * t610;
t56 = (t579 + t571) * t474;
t709 = t56 * qJD(1);
t824 = t115 * qJD(2) + t709;
t468 = t474 ^ 2;
t384 = t477 * t540;
t727 = t473 * t478;
t648 = pkin(8) * t727;
t329 = -t384 + t648;
t756 = t329 * t478;
t780 = pkin(8) * t473;
t234 = -t468 * t780 - t756;
t363 = t474 * t737 - t478 * t774;
t152 = t363 * t473;
t620 = -t152 / 0.2e1;
t640 = t477 * t736;
t747 = t364 * t473;
t257 = t640 + t747;
t765 = t257 * t478;
t515 = -t765 / 0.2e1 + t474 * t620;
t598 = t713 / 0.2e1;
t725 = t475 * t473;
t76 = (t479 * t598 + t725 / 0.2e1) * t471 + t515;
t703 = t76 * qJD(1);
t823 = -qJD(2) * t234 - t703;
t341 = -t474 * t592 + t446;
t712 = t478 * qJ(5);
t293 = t330 - t712;
t761 = t293 * t478;
t124 = t341 * t726 + t761;
t602 = t726 / 0.2e1;
t764 = t258 * t478;
t514 = t764 / 0.2e1 + t363 * t602;
t609 = t736 / 0.2e1;
t578 = t473 * t609;
t611 = -t737 / 0.2e1;
t78 = t477 * t611 + t478 * t578 + t514;
t702 = t78 * qJD(1);
t822 = qJD(2) * t124 + t702;
t724 = t475 * t477;
t690 = t478 * t579 + t471 * t724 / 0.2e1;
t502 = t514 + t690;
t821 = qJD(2) * t502 + qJD(3) * t152 - qJD(4) * t258;
t777 = t477 * pkin(4);
t568 = t730 + t777;
t370 = t568 * t474;
t745 = t370 * t473;
t753 = t341 * t477;
t755 = t330 * t478;
t96 = t755 + (t745 + t753) * t474;
t820 = -qJD(2) * t96 - t702;
t97 = -t341 * t728 + t370 * t726 - t756;
t819 = qJD(2) * t97 + t703;
t65 = t257 * t472 + t258 * t476;
t818 = t650 * t65;
t64 = t257 * t476 - t258 * t472;
t817 = t650 * t64;
t462 = t474 * qJ(5);
t296 = -pkin(8) * t726 + t399 + t462;
t781 = pkin(4) * t473;
t421 = -t717 + t781;
t342 = (pkin(8) + t421) * t478;
t551 = t341 * t478 + t342 * t474;
t62 = -t293 * t474 + t296 * t478 + t477 * t551;
t816 = -t62 * qJD(2) - t709;
t577 = t477 * t610;
t805 = t257 / 0.2e1;
t491 = (t577 - t747 / 0.2e1 + t805) * t474;
t815 = qJD(1) * t491;
t814 = qJD(2) * t491;
t813 = qJD(3) * t491;
t711 = t478 * t479;
t328 = (t477 * t711 + t725) * t471;
t758 = t328 * t472;
t327 = (t473 * t711 - t724) * t471;
t759 = t327 * t476;
t696 = t759 / 0.2e1 - t758 / 0.2e1;
t757 = t328 * t476;
t760 = t327 * t472;
t698 = t760 / 0.2e1 + t757 / 0.2e1;
t604 = t727 / 0.2e1;
t605 = -t727 / 0.2e1;
t606 = t728 / 0.2e1;
t787 = -t474 / 0.2e1;
t486 = t257 * t787 + t364 * t606 + t474 * t577 + (t604 + t605) * t363;
t655 = t364 * qJD(3);
t810 = qJD(2) * t486 + qJD(4) * t152 - t477 * t655;
t467 = t473 ^ 2;
t469 = t477 ^ 2;
t436 = t469 - t467;
t653 = t474 * qJD(2);
t636 = t477 * t653;
t581 = t473 * t636;
t809 = qJD(3) * t436 - 0.2e1 * t581;
t808 = qJD(3) * t486 + qJD(4) * t502 + (t327 * t478 + t468 * t641) * qJD(2);
t806 = -t257 / 0.2e1;
t803 = -t296 / 0.2e1;
t802 = -t327 / 0.2e1;
t615 = t349 / 0.2e1;
t800 = t363 / 0.2e1;
t799 = t364 / 0.2e1;
t798 = -t370 / 0.2e1;
t380 = -t473 * t807 + t717;
t796 = t380 / 0.2e1;
t793 = -t421 / 0.2e1;
t792 = t421 / 0.2e1;
t791 = -t424 / 0.2e1;
t448 = pkin(8) * t728;
t790 = -t448 / 0.2e1;
t789 = -t473 / 0.2e1;
t788 = t473 / 0.2e1;
t786 = t474 / 0.2e1;
t785 = -t477 / 0.2e1;
t784 = t477 / 0.2e1;
t782 = t478 / 0.2e1;
t465 = t478 * pkin(4);
t775 = t650 * t69;
t403 = qJ(5) * t476 - t472 * t807;
t576 = -pkin(10) * t726 - t384;
t490 = t465 + (pkin(5) + t780) * t478 + t576;
t485 = t472 * t490;
t481 = t403 * t782 - t485 / 0.2e1;
t445 = pkin(10) * t728;
t232 = t293 + t445;
t262 = t445 + t330;
t597 = t262 / 0.2e1 - t232 / 0.2e1;
t261 = -t576 - t648;
t732 = t472 * t261;
t608 = -t732 / 0.2e1;
t21 = t476 * t597 + t481 + t608;
t773 = qJD(2) * t21;
t166 = t476 * t490;
t402 = qJ(5) * t472 + t476 * t807;
t572 = -t166 / 0.2e1 + t402 * t783;
t720 = t476 * t261;
t601 = -t720 / 0.2e1;
t22 = -t472 * t597 + t572 + t601;
t772 = qJD(2) * t22;
t771 = qJD(2) * t56;
t770 = qJD(2) * t76;
t769 = qJD(2) * t78;
t763 = t285 * t345;
t762 = t285 * t348;
t754 = t341 * t473;
t752 = t363 * t345;
t751 = t363 * t348;
t750 = t363 * t370;
t749 = t363 * t393;
t748 = t363 * t550;
t154 = t363 * t477;
t744 = t371 * t393;
t38 = (-t257 * t473 - t258 * t477 + t364) * t363;
t743 = t38 * qJD(1);
t642 = t474 * t736;
t40 = t257 * t327 + t258 * t328 + t363 * t642;
t741 = t40 * qJD(1);
t404 = -pkin(3) - t568;
t740 = t404 * t473;
t739 = t404 * t474;
t294 = t329 + t465;
t595 = t329 / 0.2e1 - t294 / 0.2e1;
t596 = t293 / 0.2e1 - t330 / 0.2e1;
t41 = (-t465 / 0.2e1 + t595) * t477 + (-t712 / 0.2e1 + t596) * t473;
t738 = t41 * qJD(2);
t464 = t474 * pkin(4);
t198 = -pkin(5) * t474 - t448 - t464 + (-pkin(10) * t478 - t424) * t477;
t735 = t472 * t198;
t734 = t472 * t232;
t236 = pkin(10) * t727 + t296;
t733 = t472 * t236;
t731 = t472 * t262;
t729 = t473 * t348;
t723 = t476 * t198;
t722 = t476 * t232;
t721 = t476 * t236;
t719 = t476 * t262;
t716 = t477 * t293;
t715 = t477 * t424;
t714 = t477 * t468;
t49 = -t330 * t726 + (t716 + (t294 - t329) * t473) * t474;
t710 = t49 * qJD(2);
t427 = t476 * t727;
t347 = t472 * t713 - t427;
t94 = -t345 * t349 - t347 * t348;
t701 = t94 * qJD(2);
t700 = t650 * t110;
t618 = -t154 / 0.2e1;
t694 = t472 * t620 + t476 * t618;
t617 = t154 / 0.2e1;
t619 = t152 / 0.2e1;
t693 = t472 * t619 + t476 * t617;
t692 = t472 * t617 + t476 * t620;
t691 = t472 * t618 + t476 * t619;
t689 = t472 * t604 + t476 * t598;
t599 = -t713 / 0.2e1;
t688 = t472 * t605 + t476 * t599;
t687 = t472 * t598 - t427 / 0.2e1;
t686 = t472 * t599 + t427 / 0.2e1;
t470 = t478 ^ 2;
t437 = t470 - t468;
t139 = t345 * t474 - t347 * t478;
t684 = qJD(2) * t139;
t140 = -t348 * t474 + t349 * t478;
t683 = qJD(2) * t140;
t245 = t345 * t726 + t470 * t472;
t681 = qJD(2) * t245;
t246 = t348 * t726 + t470 * t476;
t680 = qJD(2) * t246;
t396 = t437 * t473;
t678 = qJD(2) * t396;
t398 = t470 * t477 - t714;
t677 = qJD(2) * t398;
t676 = qJD(2) * t471;
t674 = qJD(3) * t473;
t673 = qJD(3) * t474;
t672 = qJD(3) * t477;
t671 = qJD(3) * t478;
t670 = qJD(3) * t479;
t669 = qJD(4) * t329;
t668 = qJD(4) * t473;
t667 = qJD(4) * t477;
t666 = qJD(4) * t478;
t665 = qJD(5) * t472;
t664 = qJD(5) * t473;
t663 = qJD(5) * t476;
t662 = qJD(5) * t478;
t661 = qJD(6) * t371;
t614 = t833 / 0.2e1;
t180 = t614 + t687;
t659 = t180 * qJD(2);
t181 = t613 + t686;
t658 = t181 * qJD(2);
t182 = t615 + t689;
t657 = t182 * qJD(2);
t183 = t616 + t688;
t656 = t183 * qJD(2);
t654 = t437 * qJD(2);
t460 = t472 * qJD(4);
t461 = t476 * qJD(4);
t652 = t477 * qJD(5);
t649 = t790 - t464;
t647 = pkin(2) * t653;
t646 = pkin(2) * t651;
t645 = pkin(9) * t668;
t644 = pkin(9) * t667;
t643 = t776 / 0.2e1;
t638 = t345 * t651;
t637 = t348 * t651;
t634 = t473 * t666;
t633 = t477 * t666;
t632 = t472 * t662;
t631 = t473 * t652;
t630 = t476 * t662;
t629 = t479 * t676;
t628 = t473 * t667;
t627 = t474 * t664;
t442 = t473 * t672;
t626 = t474 * t671;
t625 = t474 * t651;
t624 = -t749 / 0.2e1;
t623 = t749 / 0.2e1;
t622 = t748 / 0.2e1;
t621 = -t748 / 0.2e1;
t612 = t739 / 0.2e1;
t607 = t345 * t788;
t603 = -t726 / 0.2e1;
t600 = t393 * t784;
t594 = t790 - t464 / 0.2e1;
t593 = t467 / 0.2e1 - t469 / 0.2e1;
t591 = (-t467 - t469) * t363;
t589 = -t448 - t715;
t354 = (-0.1e1 / 0.2e1 + t593) * t474;
t588 = qJD(2) * t354 - t442;
t372 = t593 * t474;
t587 = qJD(2) * t372 - t442;
t419 = t473 * qJD(2) * t714;
t586 = qJD(3) * t372 + t419;
t584 = t650 * t478;
t444 = -qJD(4) + t651;
t582 = t474 * t442;
t580 = t474 * t610;
t575 = t651 - qJD(4) / 0.2e1;
t570 = t421 * t786 + t341 / 0.2e1;
t567 = -t404 * t478 + t779;
t528 = t327 * t788 + t328 * t784;
t484 = pkin(9) * t528 + t609 * t739;
t298 = -t464 + t589;
t498 = t298 * t806 + t258 * t803 - t364 * t341 / 0.2e1;
t1 = (t716 / 0.2e1 - t342 / 0.2e1 + t294 * t788) * t363 + t484 + t498;
t35 = t293 * t296 + t294 * t298 + t341 * t342;
t566 = -t1 * qJD(1) + t35 * qJD(2);
t499 = t345 * t799 + t64 * t786;
t562 = t393 * t580;
t13 = t562 + (t613 + t347 / 0.2e1) * t363 + t499;
t286 = (-pkin(8) + t380) * t478;
t89 = -t166 + t734;
t9 = (t723 - t733) * t478 + t89 * t474 + t286 * t345 + t285 * t347;
t565 = -qJD(1) * t13 + qJD(2) * t9;
t536 = pkin(4) * t802 + t328 * qJ(5) / 0.2e1;
t3 = -t750 / 0.2e1 + t595 * t258 + t596 * t257 + t536;
t39 = -t293 * t329 + t294 * t330 + t341 * t370;
t564 = -qJD(1) * t3 + qJD(2) * t39;
t561 = t550 * t580;
t90 = t485 + t722;
t10 = (t721 + t735) * t478 - t90 * t474 - t286 * t348 - t285 * t349;
t487 = t348 * t799 + t65 * t787;
t14 = -t561 + (t616 + t615) * t363 + t487;
t560 = -qJD(1) * t14 - qJD(2) * t10;
t489 = -t751 / 0.2e1 + t65 * t783;
t25 = t489 - t696;
t112 = -t719 + t732;
t325 = t811 * t474;
t33 = -t112 * t478 + t325 * t345 - t762;
t559 = qJD(1) * t25 - qJD(2) * t33;
t488 = t751 / 0.2e1 + t65 * t782;
t26 = t488 + t696;
t44 = -t478 * t90 + t762;
t558 = -qJD(1) * t26 + qJD(2) * t44;
t500 = t752 / 0.2e1 + t64 * t783;
t27 = t500 + t698;
t113 = t720 + t731;
t34 = t113 * t478 - t325 * t348 - t763;
t557 = qJD(1) * t27 + qJD(2) * t34;
t501 = -t752 / 0.2e1 + t64 * t782;
t28 = t501 - t698;
t43 = -t478 * t89 + t763;
t556 = -qJD(1) * t28 - qJD(2) * t43;
t45 = -t294 * t713 - t298 * t726 + (t296 * t474 + t761) * t473;
t47 = (t765 / 0.2e1 - t328 / 0.2e1) * t477 + (-t764 / 0.2e1 + t802) * t473;
t555 = qJD(1) * t47 - qJD(2) * t45;
t63 = -t294 * t474 + t298 * t478 + t473 * t551;
t554 = t63 * qJD(2) - t815;
t553 = qJD(3) * t56 + qJD(4) * t76;
t552 = t296 * t477 + t298 * t473;
t114 = t329 * t474 + (-t589 - 0.2e1 * t448) * t478;
t548 = -t114 * qJD(2) - t815;
t235 = -pkin(8) * t714 - t755;
t75 = -t514 + t690;
t547 = qJD(1) * t75 + qJD(2) * t235;
t264 = t404 * t477 + t421 * t473;
t376 = -t399 / 0.2e1;
t428 = pkin(9) * t604;
t59 = t428 - t745 / 0.2e1 - t753 / 0.2e1 - t462 + t376 + (t740 / 0.2e1 + (t793 + pkin(8) / 0.2e1) * t477) * t474;
t542 = -qJD(2) * t59 + qJD(3) * t264;
t265 = t421 * t477 - t740;
t535 = t612 + t643;
t511 = t798 + t535;
t531 = t570 * t473;
t61 = t531 + (t791 + t511) * t477 + t649;
t541 = -qJD(2) * t61 + qJD(3) * t265;
t539 = t444 * t474;
t538 = t643 - t778 / 0.2e1;
t537 = qJ(5) * t803 + t298 * pkin(4) / 0.2e1;
t534 = -t717 / 0.2e1 + t781 / 0.2e1;
t375 = t399 / 0.2e1;
t429 = pkin(9) * t605;
t255 = pkin(3) * t606 + t375 + t429;
t533 = pkin(3) * t672 - qJD(2) * t255;
t256 = (t791 + t538) * t477;
t532 = pkin(3) * t674 - qJD(2) * t256;
t530 = t285 * t795 + t345 * t797;
t527 = -t735 / 0.2e1 - t721 / 0.2e1;
t526 = -t733 / 0.2e1 + t723 / 0.2e1;
t92 = t754 / 0.2e1 + (t791 + t535) * t477 + t594;
t525 = qJD(2) * t92 + t404 * t674;
t524 = t477 * t539;
t129 = -t729 / 0.2e1 + (t472 / 0.2e1 - t550 * t785) * t474;
t519 = -qJD(2) * t129 - t550 * t674;
t130 = t607 + (t600 + t476 / 0.2e1) * t474;
t518 = qJD(2) * t130 + t393 * t674;
t395 = t436 * t468;
t513 = qJD(2) * t395 + 0.2e1 * t582;
t120 = t371 * t550 + t380 * t393;
t482 = t325 * t795 + t345 * t796 - t496;
t495 = t402 * t787 + t526;
t5 = t482 + t495;
t81 = t622 + t691;
t510 = qJD(1) * t81 - qJD(2) * t5 - qJD(3) * t120;
t121 = -t380 * t550 + t744;
t483 = -t164 * t783 + t325 * t794 + t348 * t796 + t530;
t494 = t403 * t787 + t527;
t8 = t483 + t494;
t83 = t623 + t694;
t509 = qJD(1) * t83 - qJD(2) * t8 - qJD(3) * t121;
t55 = (t571 + t578) * t474;
t77 = t473 * t611 + t478 * t577 + t515;
t508 = qJD(2) * (t328 * t478 + t468 * t640) + qJD(3) * t55 + qJD(4) * t77;
t507 = qJD(2) * t77 + qJD(3) * t154 + qJD(4) * t257;
t480 = (-t473 * t596 - t477 * t595) * pkin(9) + t341 * t792 + t370 * t404 / 0.2e1;
t12 = t480 + t537;
t36 = (t793 + t534) * t363;
t506 = t404 * t421 * qJD(3) - t36 * qJD(1) + t12 * qJD(2);
t17 = -t496 + t526;
t82 = t621 + t692;
t505 = qJD(1) * t82 + qJD(2) * t17 + t371 * t675;
t497 = -t164 * t782 - t530;
t18 = -t497 + t527;
t84 = t624 + t693;
t504 = qJD(1) * t84 + qJD(2) * t18 + qJD(3) * t744;
t503 = qJD(2) * t55 + qJD(4) * t154 + t473 * t655;
t493 = -qJD(4) * t568 + t652;
t410 = t468 * t469 + t470;
t492 = qJD(2) * t410 + t582 - t666;
t455 = -t673 / 0.2e1;
t454 = t673 / 0.2e1;
t453 = -t653 / 0.2e1;
t452 = t653 / 0.2e1;
t443 = t477 * t651;
t420 = t477 * t627;
t409 = t444 * qJ(5);
t392 = -t443 + t667;
t391 = t476 * t651 - t461;
t390 = t472 * t651 - t460;
t382 = t575 * t474;
t379 = t715 / 0.2e1;
t369 = qJD(3) * t467 + t581;
t362 = t372 * qJD(4);
t355 = t467 * t787 + t469 * t786 + t787;
t353 = t476 * t583 - t461;
t352 = t472 * t583 - t460;
t344 = (-t473 * t653 + t672) * t478;
t343 = t473 * t539;
t340 = (qJD(6) / 0.2e1 + t575) * t474;
t321 = t330 * qJD(4);
t197 = t477 * t538 + t379 + t448;
t196 = t429 + t376 + (pkin(3) * t788 + pkin(8) * t477) * t474;
t187 = t614 + t686;
t186 = t613 + t687;
t185 = t616 + t689;
t184 = t615 + t688;
t132 = t729 / 0.2e1 - t550 * t602 + t472 * t786;
t131 = t607 + t474 * t600 - t718 / 0.2e1;
t93 = pkin(9) * t599 + t404 * t603 - t754 / 0.2e1 - t715 / 0.2e1 + t594;
t88 = t621 + t691;
t87 = t622 + t692;
t86 = t623 + t693;
t85 = t624 + t694;
t60 = t477 * t511 + t379 + t531 - t649;
t58 = t428 + t462 + pkin(8) * t603 + t375 - t570 * t477 + (t612 + t798) * t473;
t46 = (t257 * t784 + t258 * t789) * t478 + t528;
t42 = t329 * t785 + t293 * t789 + t330 * t788 + t294 * t784 + (-t730 / 0.2e1 - t777 / 0.2e1) * t478;
t37 = (t534 + t792) * t363;
t32 = -t488 + t696;
t31 = -t501 - t698;
t30 = -t500 + t698;
t29 = -t489 - t696;
t24 = t722 / 0.2e1 + t608 + t719 / 0.2e1 - t481;
t23 = -t734 / 0.2e1 + t601 - t731 / 0.2e1 - t572;
t20 = t496 + t526;
t19 = t497 + t527;
t16 = -t487 - t561;
t15 = -t363 * t347 / 0.2e1 + t833 * t800 - t499 + t562;
t11 = t480 - t537;
t7 = t483 - t494;
t6 = t482 - t495;
t4 = t293 * t806 + t329 * t804 + t750 / 0.2e1 + t258 * t294 / 0.2e1 + t330 * t805 + t536;
t2 = t293 * t618 + t294 * t620 + t342 * t800 + t484 - t498;
t48 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t40 + qJD(3) * t38, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t475 * t676, -t629, 0, 0, 0, 0, 0 (-t474 * t670 - t475 * t651) * t471 (t475 * t653 - t478 * t670) * t471, 0, 0, 0, 0, 0, t808, t508, t808, t46 * qJD(3) + (t327 * t477 - t328 * t473) * t653, -t508, t741 + (t293 * t328 + t294 * t327 + t341 * t642) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) - t502 * qJD(5), 0, 0, 0, 0, 0 ((-t758 + t759) * t478 - t345 * t642) * qJD(2) + t15 * qJD(3) + t29 * qJD(4) + t32 * qJD(6) (-(t757 + t760) * t478 - t348 * t642) * qJD(2) + t16 * qJD(3) + t30 * qJD(4) + t31 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t474 * t629 - t655, qJD(3) * t363 - t478 * t629, 0, 0, 0, 0, 0, t810, t503, t810, t46 * qJD(2) + qJD(3) * t591, -t503, t743 + t2 * qJD(2) + (pkin(9) * t591 + t364 * t404) * qJD(3) + t37 * qJD(4) - t152 * qJD(5), 0, 0, 0, 0, 0, qJD(2) * t15 + qJD(4) * t88 + qJD(6) * t87 - t393 * t655, qJD(2) * t16 + qJD(4) * t85 + qJD(6) * t86 + t550 * t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t821, t507, t821, 0, -t507, t4 * qJD(2) + t37 * qJD(3) + (-pkin(4) * t258 - qJ(5) * t257) * qJD(4) + t258 * qJD(5), 0, 0, 0, 0, 0, qJD(2) * t29 + qJD(3) * t88 - t818, qJD(2) * t30 + qJD(3) * t85 - t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t821, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(3) * t87 + t818, qJD(2) * t31 + qJD(3) * t86 + t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t75 - t813, t553, qJD(4) * t78 - t813, qJD(3) * t47, -t553, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t78 - t741, 0, 0, 0, 0, 0, -qJD(3) * t13 - qJD(4) * t25 - qJD(6) * t26, -qJD(3) * t14 - qJD(4) * t27 - qJD(6) * t28; 0, 0, 0, 0, t626, t437 * qJD(3), 0, 0, 0, -pkin(2) * t673, -pkin(2) * t671, -t468 * t628 + t469 * t626, -qJD(4) * t395 - 0.2e1 * t478 * t582, -qJD(3) * t398 + t474 * t634, qJD(3) * t396 + t474 * t633, -t626, -qJD(3) * t114 - qJD(4) * t235, qJD(3) * t115 + qJD(4) * t234, qJD(3) * t63 + qJD(4) * t96 - t468 * t631, -qJD(3) * t45 - qJD(4) * t49 + t478 * t627, -qJD(3) * t62 - qJD(4) * t97 + qJD(5) * t410, qJD(3) * t35 + qJD(4) * t39 - qJD(5) * t124 (qJD(3) * t349 + t345 * t650) * t348, qJD(3) * t94 - t119 * t650, qJD(3) * t140 + t345 * t584, qJD(3) * t139 + t348 * t584, -t626, qJD(3) * t9 + qJD(4) * t33 + qJD(5) * t245 + qJD(6) * t44, -qJD(3) * t10 - qJD(4) * t34 + qJD(5) * t246 - qJD(6) * t43; 0, 0, 0, 0, t625, t654, t671, -t673, 0, -pkin(8) * t671 - t647, pkin(8) * t673 - t646, -t362 + (t469 * t653 + t442) * t478, -0.2e1 * t474 * t628 + t478 * t809, t473 * t673 - t677, t474 * t672 + t678, -t382 (t473 * t573 - t449) * qJD(3) + t197 * qJD(4) + t548 (t477 * t573 + t648) * qJD(3) + t196 * qJD(4) + t824 (-t342 * t477 - t473 * t567) * qJD(3) + t60 * qJD(4) + t355 * qJD(5) + t554, qJD(3) * t552 + qJD(4) * t42 + t555 (-t342 * t473 + t477 * t567) * qJD(3) + t58 * qJD(4) + t420 + t816 (pkin(9) * t552 + t342 * t404) * qJD(3) + t11 * qJD(4) + t93 * qJD(5) + t566 (-t675 + t679) * t349 + t700, t701 + (t347 * t550 - t349 * t393) * qJD(3) - t775, qJD(4) * t184 + qJD(6) * t185 + t550 * t673 + t683, qJD(4) * t186 + qJD(6) * t187 + t393 * t673 + t684, -t340 (-t164 * t474 + t286 * t393 + t347 * t371) * qJD(3) + t6 * qJD(4) + t131 * qJD(5) + t20 * qJD(6) + t565 (-t286 * t550 + t349 * t371 + t474 * t590) * qJD(3) + t7 * qJD(4) + t132 * qJD(5) + t19 * qJD(6) + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t586, -t513, t343, t524, t454, qJD(3) * t197 - t321 - t547, qJD(3) * t196 + t669 - t823, qJD(3) * t60 - t321 - t820, -t710 + t42 * qJD(3) + (-t474 * t717 + t446) * qJD(4) - t627, qJD(3) * t58 - t662 - t669 - t819, t11 * qJD(3) + (-pkin(4) * t330 - qJ(5) * t329) * qJD(4) + t293 * qJD(5) + t564, t831, -t545, qJD(3) * t184 + t827, qJD(3) * t186 + t826, t454, qJD(3) * t6 + qJD(4) * t112 + qJD(6) * t24 - t559 - t632, qJD(3) * t7 + qJD(4) * t113 + qJD(6) * t23 - t557 - t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t355 - t419, t343, t492, qJD(3) * t93 + qJD(4) * t293 - t822, 0, 0, 0, 0, 0, qJD(3) * t131 - t460 * t478 + t681, qJD(3) * t132 - t461 * t478 + t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t831, t545, qJD(3) * t185 - t827, qJD(3) * t187 - t826, t455, qJD(3) * t20 + qJD(4) * t24 - qJD(6) * t90 + t558, qJD(3) * t19 + qJD(4) * t23 + qJD(6) * t89 + t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t814, -t771, t814, -qJD(2) * t47, t771, qJD(2) * t1 - qJD(4) * t36 - t743, 0, 0, 0, 0, 0, qJD(2) * t13 - qJD(4) * t81 - qJD(6) * t82, qJD(2) * t14 - qJD(4) * t83 - qJD(6) * t84; 0, 0, 0, 0, -t625, -t654, 0, 0, 0, t647, t646, -t469 * t625 - t362, 0.2e1 * t473 * t524, -t633 + t677, t634 - t678, t382, qJD(4) * t256 - t548, qJD(4) * t255 - t824, qJD(4) * t61 - qJD(5) * t354 - t554, -qJD(4) * t41 - t478 * t652 - t555, qJD(4) * t59 + t420 - t816, qJD(4) * t12 - qJD(5) * t92 - t566, -t349 * t679 + t700, -t701 - t775, -qJD(4) * t183 - qJD(6) * t182 - t683, -qJD(4) * t180 - qJD(6) * t181 - t684, t340, qJD(4) * t5 + qJD(5) * t130 - qJD(6) * t17 - t565, qJD(4) * t8 - qJD(5) * t129 - qJD(6) * t18 - t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t628, t436 * qJD(4), 0, 0, 0, -pkin(3) * t668, -pkin(3) * t667, -qJD(4) * t265 + t631, 0, -qJD(4) * t264 + qJD(5) * t467 (qJD(4) * t421 - t664) * t404, -t393 * t585, -t650 * t161, 0, 0, 0, qJD(4) * t120 + t393 * t664 - t550 * t661, qJD(4) * t121 - t393 * t661 - t550 * t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, t809, t392, t444 * t473, t453, -t532 - t644, -t533 + t645, -t541 - t644, t493 - t738, -t542 - t645, pkin(9) * t493 + t506, t832, -t543, -t656 - t825, -t659 + t585, t453, -t510 - t830, -t509 - t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, t392, t369, -t525 + t644, 0, 0, 0, 0, 0, t518, t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t832, t543, -t657 + t825, -t585 - t658, t452, -t505 + t830, -t504 + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t75, -t770, -t769, 0, t770, qJD(2) * t3 + qJD(3) * t36, 0, 0, 0, 0, 0, qJD(2) * t25 + qJD(3) * t81, qJD(2) * t27 + qJD(3) * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t586, t513, t344 (-t636 - t674) * t478, t454, -qJD(3) * t256 + t547, -qJD(3) * t255 + t823, -qJD(3) * t61 + t820, qJD(3) * t41 + t710, -qJD(3) * t59 - t662 + t819, -qJ(5) * t662 - qJD(3) * t12 - t564, -t831, t545, qJD(3) * t183 - t638, qJD(3) * t180 - t637, t454, -qJD(3) * t5 - qJD(6) * t21 + t559 - t632, -qJD(3) * t8 - qJD(6) * t22 + t557 - t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, -t809, t443, -t473 * t651, t452, t532, t533, t541, t738, t542, -t506, -t832, t543, t656, t659, t452, t510, t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), 0, 0, 0, 0, 0, qJD(6) * t403 + t665, -qJD(6) * t402 + t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t444, -t409, 0, 0, 0, 0, 0, -t390, -t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403 * t650 - t773, -t402 * t650 - t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t769, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t354 + t419, t344, -t492, qJ(5) * t666 + qJD(3) * t92 + t822, 0, 0, 0, 0, 0, -qJD(3) * t130 + t472 * t584 - t681, qJD(3) * t129 + t476 * t584 - t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, t443, -t369, t525, 0, 0, 0, 0, 0, -t518, -t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, t409, 0, 0, 0, 0, 0, t352, t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, -t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t26 + qJD(3) * t82, qJD(2) * t28 + qJD(3) * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, -t545, qJD(3) * t182 + t638, qJD(3) * t181 + t637, t455, qJD(3) * t17 + qJD(4) * t21 - t558 + t632, qJD(3) * t18 + qJD(4) * t22 - t556 + t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t832, -t543, t657, t658, t453, t505, t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t403 - t665 + t773, qJD(4) * t402 - t663 + t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t48;
