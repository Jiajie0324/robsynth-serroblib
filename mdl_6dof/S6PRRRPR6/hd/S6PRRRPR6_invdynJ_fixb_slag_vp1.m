% Calculate vector of inverse dynamics joint torques for
% S6PRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRPR6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRPR6_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:31:13
% EndTime: 2019-03-08 23:36:45
% DurationCPUTime: 322.27s
% Computational Cost: add. (111001->2334), mult. (304331->3141), div. (0->0), fcn. (362401->12), ass. (0->812)
t1311 = Icges(5,4) - Icges(6,5);
t1312 = Icges(5,1) + Icges(6,1);
t1310 = Icges(6,4) + Icges(5,5);
t1309 = -Icges(5,2) - Icges(6,3);
t1308 = Icges(6,2) + Icges(5,3);
t1307 = Icges(5,6) - Icges(6,6);
t1159 = cos(qJ(4));
t852 = sin(pkin(6));
t856 = sin(qJ(3));
t1120 = t852 * t856;
t1160 = cos(qJ(3));
t1154 = cos(pkin(6));
t857 = sin(qJ(2));
t1008 = t857 * t1154;
t851 = sin(pkin(11));
t853 = cos(pkin(11));
t859 = cos(qJ(2));
t812 = t1008 * t853 + t851 * t859;
t726 = -t853 * t1120 + t812 * t1160;
t855 = sin(qJ(4));
t1007 = t859 * t1154;
t916 = t1007 * t853 - t851 * t857;
t580 = t1159 * t726 - t855 * t916;
t1339 = t1311 * t580;
t977 = t851 * t1008;
t814 = t853 * t859 - t977;
t728 = t1120 * t851 + t1160 * t814;
t920 = -t1007 * t851 - t853 * t857;
t582 = t1159 * t728 - t855 * t920;
t1338 = t1311 * t582;
t946 = -t1159 * t916 - t726 * t855;
t1337 = t1311 * t946;
t945 = -t1159 * t920 - t728 * t855;
t1336 = t1311 * t945;
t1023 = t852 * t1160;
t816 = t1023 * t857 + t1154 * t856;
t1024 = t816 * t1159;
t1118 = t852 * t859;
t733 = -t1118 * t855 + t1024;
t1335 = t1311 * t733;
t1022 = t852 * t1159;
t930 = -t1022 * t859 - t816 * t855;
t1334 = t1311 * t930;
t782 = t916 * qJD(2);
t929 = -t1023 * t853 - t812 * t856;
t573 = qJD(3) * t929 + t1160 * t782;
t783 = t812 * qJD(2);
t284 = qJD(4) * t580 - t1159 * t783 + t573 * t855;
t285 = qJD(4) * t946 + t1159 * t573 + t783 * t855;
t572 = qJD(3) * t726 + t782 * t856;
t1333 = t1307 * t572 + t1309 * t284 + t1311 * t285;
t784 = t920 * qJD(2);
t931 = t1023 * t851 - t814 * t856;
t575 = qJD(3) * t931 + t1160 * t784;
t1067 = qJD(2) * t853;
t785 = -qJD(2) * t977 + t1067 * t859;
t286 = qJD(4) * t582 - t1159 * t785 + t575 * t855;
t287 = qJD(4) * t945 + t1159 * t575 + t785 * t855;
t574 = qJD(3) * t728 + t784 * t856;
t1332 = t1307 * t574 + t1309 * t286 + t1311 * t287;
t1331 = -t1307 * t284 + t1308 * t572 + t1310 * t285;
t1330 = -t1307 * t286 + t1308 * t574 + t1310 * t287;
t1329 = t1310 * t572 - t1311 * t284 + t1312 * t285;
t1328 = t1310 * t574 - t1311 * t286 + t1312 * t287;
t1018 = qJD(4) * t1118;
t1119 = t852 * t857;
t815 = t1119 * t856 - t1154 * t1160;
t980 = t859 * t1023;
t730 = qJD(2) * t980 - qJD(3) * t815;
t981 = t857 * t1022;
t464 = -qJD(2) * t981 + qJD(4) * t1024 + (-t1018 + t730) * t855;
t1066 = qJD(2) * t857;
t1019 = t852 * t1066;
t465 = qJD(4) * t930 + t1019 * t855 + t1159 * t730;
t1044 = t856 * t1118;
t729 = qJD(2) * t1044 + qJD(3) * t816;
t1327 = t1307 * t729 + t1309 * t464 + t1311 * t465;
t1326 = -t1307 * t464 + t1308 * t729 + t1310 * t465;
t1325 = t1310 * t729 - t1311 * t464 + t1312 * t465;
t1264 = t1307 * t929 + t1309 * t946 - t1339;
t1263 = t1307 * t931 + t1309 * t945 - t1338;
t1262 = t1307 * t946 - t1308 * t929 + t1310 * t580;
t1261 = t1307 * t945 - t1308 * t931 + t1310 * t582;
t1260 = -t1310 * t929 + t1312 * t580 + t1337;
t1259 = -t1310 * t931 + t1312 * t582 + t1336;
t1248 = -t1307 * t815 + t1309 * t930 - t1335;
t1247 = t1307 * t930 + t1308 * t815 + t1310 * t733;
t1246 = t1310 * t815 + t1312 * t733 + t1334;
t1324 = t1260 * t285 + t1262 * t572 + t1264 * t284 + t1329 * t580 - t1331 * t929 + t1333 * t946;
t1287 = t1259 * t285 + t1261 * t572 + t1263 * t284 + t1328 * t580 - t1330 * t929 + t1332 * t946;
t1323 = t1260 * t287 + t1262 * t574 + t1264 * t286 + t1329 * t582 - t1331 * t931 + t1333 * t945;
t1285 = t1259 * t287 + t1261 * t574 + t1263 * t286 + t1328 * t582 - t1330 * t931 + t1332 * t945;
t1322 = t1260 * t465 + t1262 * t729 + t1264 * t464 + t1329 * t733 + t1331 * t815 + t1333 * t930;
t1283 = t1259 * t465 + t1261 * t729 + t1263 * t464 + t1328 * t733 + t1330 * t815 + t1332 * t930;
t1279 = t1246 * t285 + t1247 * t572 + t1248 * t284 + t1325 * t580 - t1326 * t929 + t1327 * t946;
t1278 = t1246 * t287 + t1247 * t574 + t1248 * t286 + t1325 * t582 - t1326 * t931 + t1327 * t945;
t1277 = t1246 * t465 + t1247 * t729 + t1248 * t464 + t1325 * t733 + t1326 * t815 + t1327 * t930;
t1276 = t1260 * t580 - t1262 * t929 - t1264 * t946;
t1275 = t1259 * t580 - t1261 * t929 - t1263 * t946;
t1274 = t1260 * t582 - t1262 * t931 - t1264 * t945;
t1273 = t1259 * t582 - t1261 * t931 - t1263 * t945;
t1272 = t1260 * t733 + t1262 * t815 - t1264 * t930;
t1271 = t1259 * t733 + t1261 * t815 - t1263 * t930;
t1270 = t1246 * t580 - t1247 * t929 - t1248 * t946;
t1269 = t1246 * t582 - t1247 * t931 - t1248 * t945;
t1268 = t1246 * t733 + t1247 * t815 - t1248 * t930;
t854 = sin(qJ(6));
t858 = cos(qJ(6));
t956 = t733 * t858 - t854 * t930;
t1142 = Icges(7,4) * t956;
t961 = t582 * t858 - t854 * t945;
t1143 = Icges(7,4) * t961;
t962 = t580 * t858 - t854 * t946;
t1144 = Icges(7,4) * t962;
t338 = -t580 * t854 - t858 * t946;
t167 = Icges(7,2) * t338 + Icges(7,6) * t929 + t1144;
t342 = -t582 * t854 - t858 * t945;
t168 = Icges(7,2) * t342 + Icges(7,6) * t931 + t1143;
t497 = -t733 * t854 - t858 * t930;
t248 = Icges(7,2) * t497 - Icges(7,6) * t815 + t1142;
t1068 = qJD(2) * t852;
t842 = t851 * t1068;
t738 = -qJD(3) * t920 + t842;
t544 = -qJD(4) * t931 + t738;
t426 = qJD(6) * t931 + t544;
t1020 = t852 * t1067;
t739 = -qJD(3) * t916 - t1020;
t545 = -qJD(4) * t929 + t739;
t427 = qJD(6) * t929 + t545;
t1065 = qJD(3) * t852;
t850 = qJD(2) * t1154;
t823 = -t1065 * t859 + t850;
t705 = qJD(4) * t815 + t823;
t592 = -qJD(6) * t815 + t705;
t1232 = (-Icges(7,1) * t497 + t1142 + t248) * t592 + (-Icges(7,1) * t342 + t1143 + t168) * t426 + (-Icges(7,1) * t338 + t1144 + t167) * t427;
t326 = Icges(7,4) * t338;
t169 = Icges(7,1) * t962 + Icges(7,5) * t929 + t326;
t327 = Icges(7,4) * t342;
t170 = Icges(7,1) * t961 + Icges(7,5) * t931 + t327;
t487 = Icges(7,4) * t497;
t249 = Icges(7,1) * t956 - Icges(7,5) * t815 + t487;
t1289 = (Icges(7,2) * t956 - t249 - t487) * t592 + (Icges(7,2) * t961 - t170 - t327) * t426 + (Icges(7,2) * t962 - t169 - t326) * t427;
t1290 = (Icges(7,5) * t497 - Icges(7,6) * t956) * t592 + (Icges(7,5) * t342 - Icges(7,6) * t961) * t426 + (Icges(7,5) * t338 - Icges(7,6) * t962) * t427;
t1321 = t1232 * t962 + t1289 * t338 - t1290 * t929;
t1320 = t1232 * t961 + t1289 * t342 - t1290 * t931;
t1319 = t1232 * t956 + t1289 * t497 + t1290 * t815;
t1052 = qJDD(2) * t852;
t841 = t851 * t1052;
t593 = qJD(3) * t785 - qJDD(3) * t920 + t841;
t282 = qJD(4) * t574 - qJDD(4) * t931 + t593;
t1013 = t853 * t1052;
t594 = qJD(3) * t783 - qJDD(3) * t916 - t1013;
t283 = qJD(4) * t572 - qJDD(4) * t929 + t594;
t843 = t857 * t1065;
t849 = qJDD(2) * t1154;
t741 = qJD(2) * t843 - qJDD(3) * t1118 + t849;
t470 = qJD(4) * t729 + qJDD(4) * t815 + t741;
t1315 = t1270 * t470 + t1275 * t282 + t1276 * t283 + t1279 * t705 + t1287 * t544 + t1324 * t545;
t1314 = t1269 * t470 + t1273 * t282 + t1274 * t283 + t1278 * t705 + t1285 * t544 + t1323 * t545;
t1313 = t1268 * t470 + t1271 * t282 + t1272 * t283 + t1277 * t705 + t1283 * t544 + t1322 * t545;
t1282 = t1270 * t705 + t1275 * t544 + t1276 * t545;
t1281 = t1269 * t705 + t1273 * t544 + t1274 * t545;
t1280 = t1268 * t705 + t1271 * t544 + t1272 * t545;
t1306 = (t1309 * t733 + t1246 + t1334) * t705 + (t1309 * t580 + t1260 + t1337) * t545 + (t1309 * t582 + t1259 + t1336) * t544;
t1305 = (t1312 * t930 + t1248 - t1335) * t705 + (t1312 * t946 + t1264 - t1339) * t545 + (t1312 * t945 + t1263 - t1338) * t544;
t1304 = (-t1307 * t733 + t1310 * t930) * t705 + (-t1307 * t580 + t1310 * t946) * t545 + (-t1307 * t582 + t1310 * t945) * t544;
t1303 = t1159 * t1311 + t1309 * t855;
t1302 = -t1159 * t1310 + t1307 * t855;
t1301 = -t1159 * t1312 + t1311 * t855;
t194 = rSges(7,1) * t338 - rSges(7,2) * t962;
t196 = rSges(7,1) * t342 - rSges(7,2) * t961;
t1300 = t194 * t426 - t196 * t427;
t303 = rSges(7,1) * t497 - rSges(7,2) * t956;
t1299 = -t194 * t592 + t303 * t427;
t1298 = t196 * t592 - t303 * t426;
t1296 = -t1280 / 0.2e1;
t1295 = -t1281 / 0.2e1;
t1294 = -t1282 / 0.2e1;
t1125 = t916 * t856;
t1021 = t855 * t1160;
t648 = t1021 * t916 - t1159 * t812;
t979 = t1160 * t1159;
t649 = t812 * t855 + t916 * t979;
t1258 = t1125 * t1307 + t1309 * t648 + t1311 * t649;
t1124 = t920 * t856;
t650 = t1021 * t920 - t1159 * t814;
t651 = t814 * t855 + t920 * t979;
t1257 = t1124 * t1307 + t1309 * t650 + t1311 * t651;
t1256 = t1125 * t1308 - t1307 * t648 + t1310 * t649;
t1255 = t1124 * t1308 - t1307 * t650 + t1310 * t651;
t1254 = t1125 * t1310 - t1311 * t648 + t1312 * t649;
t1253 = t1124 * t1310 - t1311 * t650 + t1312 * t651;
t1252 = t1303 * t929 + t1307 * t726;
t1251 = t1303 * t931 + t1307 * t728;
t1250 = -t1301 * t929 + t1310 * t726;
t1249 = -t1301 * t931 + t1310 * t728;
t1245 = -t1303 * t815 + t1307 * t816;
t1244 = t1301 * t815 + t1310 * t816;
t750 = t855 * t980 - t981;
t751 = (t855 * t857 + t859 * t979) * t852;
t1243 = t1044 * t1307 + t1309 * t750 + t1311 * t751;
t1242 = t1044 * t1308 - t1307 * t750 + t1310 * t751;
t1241 = t1044 * t1310 - t1311 * t750 + t1312 * t751;
t1240 = (-t1159 * t1246 - t1248 * t855 + t1302 * t815 + t1308 * t816) * t705 + (-t1159 * t1260 - t1264 * t855 - t1302 * t929 + t1308 * t726) * t545 + (-t1159 * t1259 - t1263 * t855 - t1302 * t931 + t1308 * t728) * t544;
t148 = rSges(6,1) * t287 + rSges(6,2) * t574 + rSges(6,3) * t286;
t562 = qJD(5) * t945;
t151 = pkin(4) * t287 + qJ(5) * t286 - t562;
t1114 = -t148 - t151;
t346 = pkin(3) * t575 + pkin(9) * t574;
t1239 = -t346 + t1114;
t272 = rSges(6,1) * t582 - rSges(6,2) * t931 - rSges(6,3) * t945;
t373 = pkin(4) * t582 - qJ(5) * t945;
t1097 = -t272 - t373;
t514 = pkin(3) * t728 - pkin(9) * t931;
t1222 = -t514 + t1097;
t453 = rSges(6,1) * t733 + rSges(6,2) * t815 - rSges(6,3) * t930;
t525 = pkin(4) * t733 - qJ(5) * t930;
t1084 = -t453 - t525;
t684 = pkin(3) * t816 + pkin(9) * t815;
t1032 = -t684 + t1084;
t115 = -qJD(6) * t962 + t284 * t858 - t285 * t854;
t116 = qJD(6) * t338 + t284 * t854 + t285 * t858;
t165 = Icges(7,5) * t962 + Icges(7,6) * t338 + Icges(7,3) * t929;
t74 = Icges(7,5) * t116 + Icges(7,6) * t115 - Icges(7,3) * t572;
t76 = Icges(7,4) * t116 + Icges(7,2) * t115 - Icges(7,6) * t572;
t78 = Icges(7,1) * t116 + Icges(7,4) * t115 - Icges(7,5) * t572;
t13 = t115 * t167 + t116 * t169 - t165 * t572 + t338 * t76 + t74 * t929 + t78 * t962;
t166 = Icges(7,5) * t961 + Icges(7,6) * t342 + Icges(7,3) * t931;
t117 = -qJD(6) * t961 + t286 * t858 - t287 * t854;
t118 = qJD(6) * t342 + t286 * t854 + t287 * t858;
t75 = Icges(7,5) * t118 + Icges(7,6) * t117 - Icges(7,3) * t574;
t77 = Icges(7,4) * t118 + Icges(7,2) * t117 - Icges(7,6) * t574;
t79 = Icges(7,1) * t118 + Icges(7,4) * t117 - Icges(7,5) * t574;
t14 = t115 * t168 + t116 * t170 - t166 * t572 + t338 * t77 + t75 * t929 + t79 * t962;
t197 = -qJD(6) * t574 + qJDD(6) * t931 + t282;
t198 = -qJD(6) * t572 + qJDD(6) * t929 + t283;
t200 = -qJD(6) * t956 + t464 * t858 - t465 * t854;
t201 = qJD(6) * t497 + t464 * t854 + t465 * t858;
t110 = Icges(7,5) * t201 + Icges(7,6) * t200 - Icges(7,3) * t729;
t111 = Icges(7,4) * t201 + Icges(7,2) * t200 - Icges(7,6) * t729;
t112 = Icges(7,1) * t201 + Icges(7,4) * t200 - Icges(7,5) * t729;
t247 = Icges(7,5) * t956 + Icges(7,6) * t497 - Icges(7,3) * t815;
t24 = t110 * t929 + t111 * t338 + t112 * t962 + t115 * t248 + t116 * t249 - t247 * t572;
t313 = -qJD(6) * t729 - qJDD(6) * t815 + t470;
t59 = t165 * t929 + t167 * t338 + t169 * t962;
t60 = t166 * t929 + t168 * t338 + t170 * t962;
t88 = t247 * t929 + t248 * t338 + t249 * t962;
t1 = t427 * t13 + t14 * t426 + t197 * t60 + t198 * t59 + t24 * t592 + t313 * t88;
t475 = Icges(4,5) * t730 - Icges(4,6) * t729 + Icges(4,3) * t1019;
t476 = Icges(4,4) * t730 - Icges(4,2) * t729 + Icges(4,6) * t1019;
t477 = Icges(4,1) * t730 - Icges(4,4) * t729 + Icges(4,5) * t1019;
t636 = Icges(4,5) * t816 - Icges(4,6) * t815 - Icges(4,3) * t1118;
t1148 = Icges(4,4) * t816;
t637 = -Icges(4,2) * t815 - Icges(4,6) * t1118 + t1148;
t806 = Icges(4,4) * t815;
t638 = Icges(4,1) * t816 - Icges(4,5) * t1118 - t806;
t102 = -t475 * t916 + t476 * t929 + t477 * t726 - t572 * t637 + t573 * t638 + t636 * t783;
t436 = Icges(4,5) * t726 + Icges(4,6) * t929 - Icges(4,3) * t916;
t1150 = Icges(4,4) * t726;
t438 = Icges(4,2) * t929 - Icges(4,6) * t916 + t1150;
t706 = Icges(4,4) * t929;
t440 = Icges(4,1) * t726 - Icges(4,5) * t916 + t706;
t152 = -t436 * t916 + t438 * t929 + t440 * t726;
t437 = Icges(4,5) * t728 + Icges(4,6) * t931 - Icges(4,3) * t920;
t1149 = Icges(4,4) * t728;
t439 = Icges(4,2) * t931 - Icges(4,6) * t920 + t1149;
t707 = Icges(4,4) * t931;
t441 = Icges(4,1) * t728 - Icges(4,5) * t920 + t707;
t153 = -t437 * t916 + t439 * t929 + t441 * t726;
t209 = -t636 * t916 + t637 * t929 + t638 * t726;
t288 = Icges(4,5) * t573 - Icges(4,6) * t572 + Icges(4,3) * t783;
t290 = Icges(4,4) * t573 - Icges(4,2) * t572 + Icges(4,6) * t783;
t292 = Icges(4,1) * t573 - Icges(4,4) * t572 + Icges(4,5) * t783;
t70 = -t288 * t916 + t290 * t929 + t292 * t726 + t436 * t783 - t438 * t572 + t440 * t573;
t289 = Icges(4,5) * t575 - Icges(4,6) * t574 + Icges(4,3) * t785;
t291 = Icges(4,4) * t575 - Icges(4,2) * t574 + Icges(4,6) * t785;
t293 = Icges(4,1) * t575 - Icges(4,4) * t574 + Icges(4,5) * t785;
t71 = -t289 * t916 + t291 * t929 + t293 * t726 + t437 * t783 - t439 * t572 + t441 * t573;
t1238 = t102 * t823 + t594 * t152 + t153 * t593 + t209 * t741 + t739 * t70 + t71 * t738 + t1 + t1315;
t103 = -t475 * t920 + t476 * t931 + t477 * t728 - t574 * t637 + t575 * t638 + t636 * t785;
t154 = -t436 * t920 + t438 * t931 + t440 * t728;
t155 = -t437 * t920 + t439 * t931 + t441 * t728;
t15 = t117 * t167 + t118 * t169 - t165 * t574 + t342 * t76 + t74 * t931 + t78 * t961;
t16 = t117 * t168 + t118 * t170 - t166 * t574 + t342 * t77 + t75 * t931 + t79 * t961;
t25 = t110 * t931 + t111 * t342 + t112 * t961 + t117 * t248 + t118 * t249 - t247 * t574;
t61 = t165 * t931 + t167 * t342 + t169 * t961;
t62 = t166 * t931 + t168 * t342 + t170 * t961;
t89 = t247 * t931 + t248 * t342 + t249 * t961;
t2 = t15 * t427 + t426 * t16 + t197 * t62 + t198 * t61 + t25 * t592 + t313 * t89;
t210 = -t636 * t920 + t637 * t931 + t638 * t728;
t72 = -t288 * t920 + t290 * t931 + t292 * t728 + t436 * t785 - t438 * t574 + t440 * t575;
t73 = -t289 * t920 + t291 * t931 + t293 * t728 + t437 * t785 - t439 * t574 + t441 * t575;
t1237 = t103 * t823 + t154 * t594 + t593 * t155 + t210 * t741 + t72 * t739 + t738 * t73 + t1314 + t2;
t114 = -t476 * t815 + t477 * t816 - t637 * t729 + t638 * t730 + (t1066 * t636 - t475 * t859) * t852;
t163 = -t1118 * t436 - t438 * t815 + t440 * t816;
t164 = -t1118 * t437 - t439 * t815 + t441 * t816;
t243 = -t1118 * t636 - t637 * t815 + t638 * t816;
t17 = -t165 * t729 + t167 * t200 + t169 * t201 + t497 * t76 - t74 * t815 + t78 * t956;
t18 = -t166 * t729 + t168 * t200 + t170 * t201 + t497 * t77 - t75 * t815 + t79 * t956;
t30 = -t110 * t815 + t111 * t497 + t112 * t956 + t200 * t248 + t201 * t249 - t247 * t729;
t66 = -t165 * t815 + t167 * t497 + t169 * t956;
t67 = -t166 * t815 + t168 * t497 + t170 * t956;
t91 = -t247 * t815 + t248 * t497 + t249 * t956;
t3 = t17 * t427 + t18 * t426 + t197 * t67 + t198 * t66 + t30 * t592 + t313 * t91;
t86 = -t290 * t815 + t292 * t816 - t438 * t729 + t440 * t730 + (t1066 * t436 - t288 * t859) * t852;
t87 = -t291 * t815 + t293 * t816 - t439 * t729 + t441 * t730 + (t1066 * t437 - t289 * t859) * t852;
t1236 = t114 * t823 + t163 * t594 + t164 * t593 + t243 * t741 + t738 * t87 + t739 * t86 + t1313 + t3;
t215 = pkin(5) * t285 - pkin(10) * t572;
t80 = rSges(7,1) * t116 + rSges(7,2) * t115 - rSges(7,3) * t572;
t1156 = t215 + t80;
t216 = pkin(5) * t287 - pkin(10) * t574;
t81 = rSges(7,1) * t118 + rSges(7,2) * t117 - rSges(7,3) * t574;
t1155 = t216 + t81;
t171 = rSges(7,1) * t962 + rSges(7,2) * t338 + rSges(7,3) * t929;
t431 = pkin(5) * t580 + pkin(10) * t929;
t1110 = t171 + t431;
t172 = rSges(7,1) * t961 + rSges(7,2) * t342 + rSges(7,3) * t931;
t432 = pkin(5) * t582 + pkin(10) * t931;
t1109 = t172 + t432;
t369 = pkin(4) * t580 - qJ(5) * t946;
t1089 = -t369 - t431;
t1087 = -t373 - t432;
t595 = pkin(5) * t733 - pkin(10) * t815;
t1079 = -t525 - t595;
t300 = rSges(4,1) * t573 - rSges(4,2) * t572 + rSges(4,3) * t783;
t301 = rSges(4,1) * t575 - rSges(4,2) * t574 + rSges(4,3) * t785;
t443 = rSges(4,1) * t726 + rSges(4,2) * t929 - rSges(4,3) * t916;
t444 = rSges(4,1) * t728 + rSges(4,2) * t931 - rSges(4,3) * t920;
t1221 = t300 * t738 - t301 * t739 + t443 * t593 - t444 * t594;
t942 = Icges(4,5) * t1160 - Icges(4,6) * t856;
t1220 = t738 * (-Icges(4,3) * t814 + t1160 * t441 - t439 * t856 - t920 * t942) + t739 * (-Icges(4,3) * t812 + t1160 * t440 - t438 * t856 - t916 * t942) + t823 * (t1160 * t638 - t637 * t856 - (Icges(4,3) * t857 + t859 * t942) * t852);
t1111 = -t151 - t216;
t1137 = t198 * t172;
t1138 = t197 * t171;
t1157 = t427 * t81;
t1158 = t426 * t80;
t560 = qJD(5) * t946;
t150 = pkin(4) * t285 + qJ(5) * t284 - t560;
t121 = t544 * t150;
t177 = t282 * t369;
t463 = qJD(5) * t464;
t716 = qJDD(5) * t930;
t1126 = t739 * t346;
t1129 = t594 * t514;
t345 = pkin(3) * t573 + pkin(9) * t572;
t276 = t738 * t345;
t512 = pkin(3) * t726 - pkin(9) * t929;
t349 = t593 * t512;
t654 = pkin(2) * t782 + pkin(8) * t783;
t588 = t654 * t842;
t655 = pkin(2) * t784 + pkin(8) * t785;
t589 = t655 * t1020;
t676 = pkin(2) * t812 - pkin(8) * t916;
t612 = t676 * t841;
t678 = pkin(2) * t814 - pkin(8) * t920;
t613 = t678 * t1013;
t954 = qJDD(1) + t588 + t589 + t612 + t613;
t883 = -t1126 + t276 + t349 + t954 - t1129;
t874 = t121 + t177 + t463 - t716 + t883;
t10 = t1087 * t283 + t1111 * t545 + t544 * t215 + t282 * t431 - t1137 + t1138 - t1157 + t1158 + t874;
t1219 = 0.2e1 * t10;
t718 = qJD(5) * t930;
t223 = pkin(4) * t465 + qJ(5) * t464 - t718;
t390 = pkin(5) * t465 - pkin(10) * t729;
t1105 = -t223 - t390;
t113 = rSges(7,1) * t201 + rSges(7,2) * t200 - rSges(7,3) * t729;
t250 = rSges(7,1) * t956 + rSges(7,2) * t497 - rSges(7,3) * t815;
t521 = pkin(3) * t730 + pkin(9) * t729;
t1122 = t851 * t852;
t803 = (pkin(2) * t859 + pkin(8) * t857) * t1068;
t821 = (pkin(2) * t857 - pkin(8) * t859) * t852;
t895 = t655 * t850 + t678 * t849 + (-qJD(2) * t803 - qJDD(2) * t821) * t1122;
t870 = t823 * t346 + t741 * t514 - t738 * t521 - t593 * t684 + t895;
t867 = qJD(5) * t284 - qJDD(5) * t946 + t705 * t151 + t470 * t373 + t870;
t11 = t1079 * t282 + t1105 * t544 - t426 * t113 + t313 * t172 - t197 * t250 + t705 * t216 + t470 * t432 + t592 * t81 + t867;
t1218 = 0.2e1 * t11;
t1112 = -t150 - t215;
t1006 = t1154 * t654;
t1121 = t852 * t853;
t1005 = t1154 * t676;
t917 = -t1121 * t821 - t1005;
t868 = (-t1121 * t803 - t1006) * qJD(2) + t917 * qJDD(2);
t865 = -t823 * t345 - t741 * t512 + t739 * t521 + t594 * t684 + t868;
t861 = qJD(5) * t286 - qJDD(5) * t945 + t545 * t223 + t283 * t525 + t865;
t12 = t1089 * t470 + t1112 * t705 + t427 * t113 - t313 * t171 + t198 * t250 + t283 * t595 + t545 * t390 - t592 * t80 + t861;
t1217 = 0.2e1 * t12;
t146 = rSges(6,1) * t285 + rSges(6,2) * t572 + rSges(6,3) * t284;
t270 = rSges(6,1) * t580 - rSges(6,2) * t929 - rSges(6,3) * t946;
t19 = t1097 * t283 + t1114 * t545 + t146 * t544 + t270 * t282 + t874;
t1216 = 0.2e1 * t19;
t1098 = -t270 - t369;
t1115 = -t146 - t150;
t224 = rSges(6,1) * t465 + rSges(6,2) * t729 + rSges(6,3) * t464;
t28 = t1098 * t470 + t1115 * t705 + t545 * t224 + t283 * t453 + t861;
t1215 = 0.2e1 * t28;
t1014 = t678 * t1020 + t676 * t842 + qJD(1);
t932 = t738 * t512 - t514 * t739 + t1014;
t906 = t544 * t369 - t718 + t932;
t48 = t1087 * t545 + t171 * t426 - t172 * t427 + t431 * t544 + t906;
t1214 = 0.2e1 * t48;
t950 = t678 * t850 - t821 * t842;
t897 = t823 * t514 - t684 * t738 + t950;
t894 = t705 * t373 - t560 + t897;
t53 = t1079 * t544 + t172 * t592 - t250 * t426 + t432 * t705 + t894;
t1213 = 0.2e1 * t53;
t898 = t917 * qJD(2);
t881 = -t823 * t512 + t739 * t684 + t898;
t875 = t545 * t525 - t562 + t881;
t54 = t1089 * t705 - t592 * t171 + t427 * t250 + t545 * t595 + t875;
t1212 = 0.2e1 * t54;
t65 = t1097 * t545 + t270 * t544 + t906;
t1211 = 0.2e1 * t65;
t82 = t1084 * t544 + t272 * t705 + t894;
t1210 = 0.2e1 * t82;
t83 = t1098 * t705 + t545 * t453 + t875;
t1209 = 0.2e1 * t83;
t1208 = m(5) / 0.2e1;
t1207 = m(6) / 0.2e1;
t1206 = m(7) / 0.2e1;
t22 = t426 * t60 + t427 * t59 + t592 * t88;
t1205 = -t22 / 0.2e1;
t23 = t426 * t62 + t427 * t61 + t592 * t89;
t1204 = -t23 / 0.2e1;
t29 = t426 * t67 + t427 * t66 + t592 * t91;
t1203 = -t29 / 0.2e1;
t1202 = pkin(9) - pkin(10);
t1201 = t197 / 0.2e1;
t1200 = t198 / 0.2e1;
t1199 = t282 / 0.2e1;
t1198 = t283 / 0.2e1;
t1197 = t313 / 0.2e1;
t1196 = -t426 / 0.2e1;
t1195 = t426 / 0.2e1;
t1194 = -t427 / 0.2e1;
t1193 = t427 / 0.2e1;
t1192 = t470 / 0.2e1;
t1191 = -t544 / 0.2e1;
t1190 = t544 / 0.2e1;
t1189 = -t545 / 0.2e1;
t1188 = t545 / 0.2e1;
t1185 = -t592 / 0.2e1;
t1184 = t592 / 0.2e1;
t1183 = t593 / 0.2e1;
t1182 = t594 / 0.2e1;
t1179 = -t705 / 0.2e1;
t1178 = t705 / 0.2e1;
t1174 = -t738 / 0.2e1;
t1173 = t738 / 0.2e1;
t1172 = -t739 / 0.2e1;
t1171 = t739 / 0.2e1;
t1170 = t741 / 0.2e1;
t1163 = -t823 / 0.2e1;
t1162 = t823 / 0.2e1;
t1153 = Icges(3,4) * t812;
t1152 = Icges(3,4) * t814;
t1151 = Icges(3,4) * t857;
t1134 = t369 * t816;
t1133 = t373 * t726;
t1130 = t525 * t728;
t1128 = t929 * t855;
t1127 = t931 * t855;
t1123 = t815 * t855;
t1117 = -t150 * t931 + t574 * t369;
t1116 = t815 * t151 + t729 * t373;
t149 = rSges(5,1) * t287 - rSges(5,2) * t286 + rSges(5,3) * t574;
t1113 = -t149 - t346;
t199 = -t544 * t946 + t545 * t945;
t1108 = -t199 + t464;
t1107 = -t223 * t929 + t572 * t525;
t1106 = -t223 - t224;
t225 = rSges(5,1) * t465 - rSges(5,2) * t464 + rSges(5,3) * t729;
t1104 = -t225 - t521;
t963 = -t544 * t930 + t705 * t945;
t1103 = t963 + t284;
t242 = -t545 * t930 + t705 * t946;
t1102 = -t242 + t286;
t366 = pkin(4) * t946 + qJ(5) * t580;
t1101 = qJD(5) * t733 + t544 * t366;
t1100 = t250 + t595;
t370 = pkin(4) * t945 + qJ(5) * t582;
t1099 = qJD(5) * t580 + t705 * t370;
t273 = rSges(5,1) * t582 + rSges(5,2) * t945 - rSges(5,3) * t931;
t1096 = -t273 - t514;
t1095 = -t345 * t920 + t785 * t512;
t452 = t920 * t512;
t1094 = -t369 * t920 - t452;
t522 = pkin(4) * t930 + qJ(5) * t733;
t1093 = qJD(5) * t582 + t545 * t522;
t479 = t514 * t1019;
t1092 = t373 * t1019 + t479;
t603 = t1154 * t655;
t1091 = t1154 * t346 + t603;
t367 = rSges(6,1) * t946 + t580 * rSges(6,3);
t1090 = -t366 - t367;
t371 = rSges(6,1) * t945 + t582 * rSges(6,3);
t1088 = -t370 - t371;
t419 = t648 * t858 - t649 * t854;
t420 = t648 * t854 + t649 * t858;
t1086 = t420 * rSges(7,1) + t419 * rSges(7,2);
t421 = t650 * t858 - t651 * t854;
t422 = t650 * t854 + t651 * t858;
t1085 = t422 * rSges(7,1) + t421 * rSges(7,2);
t454 = rSges(5,1) * t733 + rSges(5,2) * t930 + rSges(5,3) * t815;
t1083 = -t454 - t684;
t1082 = t512 * t1118 - t684 * t916;
t664 = t1154 * t678;
t1081 = t1154 * t514 + t664;
t523 = rSges(6,1) * t930 + t733 * rSges(6,3);
t1080 = -t522 - t523;
t590 = t750 * t858 - t751 * t854;
t591 = t750 * t854 + t751 * t858;
t1078 = t591 * rSges(7,1) + t590 * rSges(7,2);
t1077 = t655 * t1121 + t654 * t1122;
t608 = Icges(3,2) * t916 - Icges(3,6) * t1121 + t1153;
t670 = Icges(3,1) * t916 - t1153;
t1076 = -t608 + t670;
t609 = Icges(3,2) * t920 + Icges(3,6) * t1122 + t1152;
t671 = Icges(3,1) * t920 - t1152;
t1075 = -t609 + t671;
t798 = Icges(3,4) * t916;
t610 = Icges(3,1) * t812 - Icges(3,5) * t1121 + t798;
t668 = -Icges(3,2) * t812 + t798;
t1074 = -t610 - t668;
t799 = Icges(3,4) * t920;
t611 = Icges(3,1) * t814 + Icges(3,5) * t1122 + t799;
t669 = -Icges(3,2) * t814 + t799;
t1073 = -t611 - t669;
t675 = pkin(2) * t916 + pkin(8) * t812;
t677 = pkin(2) * t920 + pkin(8) * t814;
t1072 = t677 * t1020 + t675 * t842;
t1071 = t678 * t1121 + t676 * t1122;
t1030 = t929 * t1159;
t485 = pkin(4) * t1030 + qJ(5) * t1128;
t1029 = t931 * t1159;
t486 = pkin(4) * t1029 + qJ(5) * t1127;
t757 = Icges(3,6) * t1154 + (Icges(3,2) * t859 + t1151) * t852;
t819 = (Icges(3,1) * t859 - t1151) * t852;
t1070 = -t757 + t819;
t844 = Icges(3,4) * t1118;
t758 = Icges(3,1) * t1119 + Icges(3,5) * t1154 + t844;
t818 = -Icges(3,2) * t1119 + t844;
t1069 = -t758 - t818;
t1028 = t916 * t1160;
t656 = pkin(3) * t1028 + pkin(9) * t1125;
t1026 = t920 * t1160;
t657 = pkin(3) * t1026 + pkin(9) * t1124;
t1025 = t815 * t1159;
t661 = -pkin(4) * t1025 - qJ(5) * t1123;
t1061 = qJD(4) * t856;
t793 = qJD(3) * t812;
t662 = t1061 * t916 + t793;
t795 = qJD(3) * t814;
t663 = t1061 * t920 + t795;
t771 = pkin(3) * t980 + pkin(9) * t1044;
t786 = t856 * t1018 + t843;
t822 = pkin(2) * t1118 + pkin(8) * t1119;
t1064 = qJD(4) * t726;
t1063 = qJD(4) * t728;
t1062 = qJD(4) * t816;
t1060 = qJD(5) * t855;
t1059 = qJD(6) * t856;
t1057 = 2 * m(3);
t1056 = 2 * m(4);
t1055 = 0.2e1 * m(5);
t1054 = 0.2e1 * m(6);
t1053 = 0.2e1 * m(7);
t1051 = qJD(4) - qJD(6);
t1050 = 0.2e1 * t920;
t1049 = 0.2e1 * t851;
t1048 = 0.2e1 * t853;
t1047 = 0.2e1 * t859;
t1046 = 0.2e1 * qJD(4);
t1045 = -t81 + t1111;
t1041 = -t113 + t1105;
t1040 = t1154 * t151 + t1091;
t1039 = -t171 + t1089;
t1038 = -t172 + t1087;
t1037 = -t521 + t1106;
t1036 = -t803 + t1104;
t1035 = -t250 + t1079;
t1034 = t345 * t1118 - t521 * t916 + t783 * t684;
t1033 = t1154 * t373 + t1081;
t1031 = -t821 + t1083;
t935 = t1159 * t854 - t855 * t858;
t471 = t935 * t929;
t934 = -t1159 * t858 - t854 * t855;
t472 = t934 * t929;
t233 = -t472 * rSges(7,1) - t471 * rSges(7,2) - t726 * rSges(7,3);
t473 = t935 * t931;
t474 = t934 * t931;
t234 = -t474 * rSges(7,1) - t473 * rSges(7,2) - t728 * rSges(7,3);
t618 = t935 * t815;
t619 = t934 * t815;
t365 = t619 * rSges(7,1) + t618 * rSges(7,2) - t816 * rSges(7,3);
t386 = t649 * rSges(6,1) + rSges(6,2) * t1125 + t648 * rSges(6,3);
t387 = t649 * rSges(5,1) - t648 * rSges(5,2) + rSges(5,3) * t1125;
t388 = t651 * rSges(6,1) + rSges(6,2) * t1124 + t650 * rSges(6,3);
t389 = t651 * rSges(5,1) - t650 * rSges(5,2) + rSges(5,3) * t1124;
t410 = rSges(6,1) * t1030 + t726 * rSges(6,2) + rSges(6,3) * t1128;
t412 = rSges(6,1) * t1029 + t728 * rSges(6,2) + rSges(6,3) * t1127;
t554 = t751 * rSges(6,1) + rSges(6,2) * t1044 + t750 * rSges(6,3);
t555 = t751 * rSges(5,1) - t750 * rSges(5,2) + rSges(5,3) * t1044;
t542 = -rSges(6,1) * t1025 + t816 * rSges(6,2) - rSges(6,3) * t1123;
t1012 = t1068 / 0.2e1;
t714 = t929 * pkin(3);
t511 = pkin(9) * t726 + t714;
t715 = t931 * pkin(3);
t513 = pkin(9) * t728 + t715;
t810 = t815 * pkin(3);
t683 = pkin(9) * t816 - t810;
t1004 = -t1056 / 0.2e1;
t1003 = t1056 / 0.2e1;
t1002 = -t1055 / 0.2e1;
t1001 = t1055 / 0.2e1;
t1000 = -t1054 / 0.2e1;
t999 = -t1053 / 0.2e1;
t478 = rSges(4,1) * t730 - rSges(4,2) * t729 + rSges(4,3) * t1019;
t998 = t852 * (-t478 - t803);
t639 = rSges(4,1) * t816 - rSges(4,2) * t815 - rSges(4,3) * t1118;
t997 = t852 * (-t639 - t821);
t429 = t649 * pkin(4) + qJ(5) * t648;
t430 = t651 * pkin(4) + qJ(5) * t650;
t600 = t751 * pkin(4) + qJ(5) * t750;
t996 = t738 * t511 - t513 * t739;
t995 = t823 * t513 - t683 * t738;
t994 = -t511 * t823 + t739 * t683;
t993 = 0.2e1 * t1066;
t992 = -t346 + t1045;
t991 = -t521 + t1041;
t990 = -t150 * t920 + t785 * t369 + t1095;
t989 = -t514 + t1038;
t988 = -t803 + t1037;
t987 = -t684 + t1035;
t986 = t346 * t1121 + t345 * t1122 + t1077;
t985 = t369 * t1118 - t525 * t916 + t1082;
t984 = -t821 + t1032;
t983 = t514 * t1121 + t512 * t1122 + t1071;
t982 = t822 + t771;
t976 = t65 * t146 + t19 * t270;
t975 = -t803 + t991;
t974 = -t821 + t987;
t860 = 0.2e1 * qJDD(1);
t973 = 0.2e1 * t588 + 0.2e1 * t589 + 0.2e1 * t612 + 0.2e1 * t613 + t860;
t642 = Icges(3,5) * t782 - Icges(3,6) * t783;
t643 = Icges(3,5) * t784 - Icges(3,6) * t785;
t644 = Icges(3,4) * t782 - Icges(3,2) * t783;
t645 = Icges(3,4) * t784 - Icges(3,2) * t785;
t646 = Icges(3,1) * t782 - Icges(3,4) * t783;
t647 = Icges(3,1) * t784 - Icges(3,4) * t785;
t971 = -(t1122 * t642 - t608 * t785 + t610 * t784 + t644 * t920 + t646 * t814) * t853 + (t1122 * t643 - t609 * t785 + t611 * t784 + t645 * t920 + t647 * t814) * t851;
t970 = -t171 * t574 + t172 * t572;
t969 = t171 * t729 - t250 * t572;
t968 = -t172 * t729 + t250 * t574;
t959 = -t609 * t857 + t611 * t859;
t960 = -t608 * t857 + t610 * t859;
t967 = -(t1154 * t642 + (qJD(2) * t960 + t644 * t859 + t646 * t857) * t852) * t853 + (t1154 * t643 + (qJD(2) * t959 + t645 * t859 + t647 * t857) * t852) * t851;
t606 = Icges(3,5) * t812 + Icges(3,6) * t916 - Icges(3,3) * t1121;
t607 = Icges(3,5) * t814 + Icges(3,6) * t920 + Icges(3,3) * t1122;
t966 = -(-t1121 * t606 + t608 * t916 + t610 * t812) * t853 + (-t1121 * t607 + t609 * t916 + t611 * t812) * t851;
t965 = -(t1122 * t606 + t608 * t920 + t610 * t814) * t853 + (t1122 * t607 + t609 * t920 + t611 * t814) * t851;
t964 = -(t1154 * t606 + (t608 * t859 + t610 * t857) * t852) * t853 + (t1154 * t607 + (t609 * t859 + t611 * t857) * t852) * t851;
t616 = rSges(3,1) * t812 + rSges(3,2) * t916 - rSges(3,3) * t1121;
t617 = rSges(3,1) * t814 + rSges(3,2) * t920 + rSges(3,3) * t1122;
t958 = t616 * t851 + t617 * t853;
t652 = rSges(3,1) * t782 - rSges(3,2) * t783;
t653 = rSges(3,1) * t784 - rSges(3,2) * t785;
t957 = t652 * t851 + t653 * t853;
t955 = -t757 * t857 + t758 * t859;
t953 = t675 + t656;
t952 = t677 + t657;
t534 = rSges(4,1) * t1028 - rSges(4,2) * t1125 + t812 * rSges(4,3);
t535 = rSges(4,1) * t1026 - rSges(4,2) * t1124 + t814 * rSges(4,3);
t411 = rSges(5,1) * t1030 - rSges(5,2) * t1128 + t726 * rSges(5,3);
t413 = rSges(5,1) * t1029 - rSges(5,2) * t1127 + t728 * rSges(5,3);
t543 = -rSges(5,1) * t1025 + rSges(5,2) * t1123 + t816 * rSges(5,3);
t951 = t677 * t850 - t822 * t842;
t949 = t151 * t1121 + t150 * t1122 + t986;
t948 = t150 * t1118 - t223 * t916 + t783 * t525 + t1034;
t947 = t373 * t1121 + t369 * t1122 + t983;
t944 = Icges(4,1) * t1160 - Icges(4,4) * t856;
t943 = Icges(4,4) * t1160 - Icges(4,2) * t856;
t820 = (rSges(3,1) * t859 - rSges(3,2) * t857) * t852;
t737 = rSges(4,1) * t980 - rSges(4,2) * t1044 + rSges(4,3) * t1119;
t817 = (Icges(3,5) * t859 - Icges(3,6) * t857) * t852;
t933 = t958 * t852;
t925 = -t59 * t929 - t60 * t931 + t815 * t88;
t924 = -t61 * t929 - t62 * t931 + t815 * t89;
t923 = -t66 * t929 - t67 * t931 + t815 * t91;
t775 = t1154 * rSges(3,3) + (rSges(3,1) * t857 + rSges(3,2) * t859) * t852;
t922 = -t1122 * t775 + t1154 * t617;
t796 = qJD(2) * t820;
t921 = -t1122 * t796 + t1154 * t653;
t919 = -t1121 * t775 - t1154 * t616;
t918 = -t1121 * t796 - t1154 * t652;
t915 = t600 + t982;
t911 = (Icges(4,5) * t929 - Icges(4,6) * t726) * t739 + (Icges(4,5) * t931 - Icges(4,6) * t728) * t738 + (-Icges(4,5) * t815 - Icges(4,6) * t816) * t823;
t910 = t10 * t1110 + t1156 * t48;
t909 = t12 * t1100 + t54 * (t113 + t390);
t908 = -t1154 * t345 - t1006;
t907 = -t1154 * t512 - t1005;
t905 = t429 + t953;
t904 = t430 + t952;
t903 = 0.2e1 * t276 - 0.2e1 * t1126 + 0.2e1 * t349 - 0.2e1 * t1129 + t973;
t902 = -t815 * t1060 + t369 * t1063 + t544 * t485 - t486 * t545 + t996;
t901 = t1060 * t929 + t373 * t1062 + t705 * t486 - t544 * t661 + t995;
t900 = t1060 * t931 + t525 * t1064 - t485 * t705 + t545 * t661 + t994;
t899 = (-t1121 * t822 - t1154 * t675) * qJD(2);
t896 = t512 * t795 - t514 * t793 + t738 * t656 - t657 * t739 + t1072;
t893 = -t1154 * t150 + t908;
t892 = -t1154 * t369 + t907;
t885 = (Icges(4,1) * t931 - t1149 - t439) * t738 + (Icges(4,1) * t929 - t1150 - t438) * t739 + (-Icges(4,1) * t815 - t1148 - t637) * t823;
t884 = (Icges(4,2) * t728 - t441 - t707) * t738 + (Icges(4,2) * t726 - t440 - t706) * t739 + (Icges(4,2) * t816 - t638 + t806) * t823;
t882 = qJD(5) * t750 + t663 * t369 + t544 * t429 + t896;
t880 = t514 * t843 + t823 * t657 - t684 * t795 - t738 * t771 + t951;
t879 = -t13 * t929 - t14 * t931 + t24 * t815 + t572 * t59 + t574 * t60 + t729 * t88;
t878 = -t15 * t929 - t16 * t931 + t25 * t815 + t572 * t61 + t574 * t62 + t729 * t89;
t877 = -t17 * t929 - t18 * t931 + t30 * t815 + t572 * t66 + t574 * t67 + t729 * t91;
t876 = -0.2e1 * t545 * t151 - 0.2e1 * t283 * t373 + 0.2e1 * t121 + 0.2e1 * t177 + 0.2e1 * t463 - 0.2e1 * t716 + t903;
t873 = (qJD(2) * t957 + qJDD(2) * t958) * t852;
t872 = qJD(5) * t648 + t786 * t373 + t705 * t430 + t880;
t871 = t572 * t1205 + t574 * t1204 + t929 * t1 / 0.2e1 + t931 * t2 / 0.2e1 + t729 * t1203 - t815 * t3 / 0.2e1;
t869 = -t512 * t843 - t823 * t656 + t684 * t793 + t739 * t771 + t899;
t866 = qJD(5) * t650 + t662 * t525 + t545 * t600 + t869;
t789 = qJD(2) * t819;
t788 = (Icges(3,4) * t859 - Icges(3,2) * t857) * t1068;
t787 = qJD(2) * t817;
t776 = pkin(5) * t1025;
t756 = Icges(3,3) * t1154 + (Icges(3,5) * t857 + Icges(3,6) * t859) * t852;
t746 = t751 * pkin(5);
t736 = (Icges(4,5) * t857 + t859 * t944) * t852;
t735 = (Icges(4,6) * t857 + t859 * t943) * t852;
t731 = -qJD(6) * t1044 + t786;
t699 = -pkin(10) * t1044 + t746;
t697 = pkin(5) * t1029;
t695 = pkin(5) * t1030;
t682 = -rSges(4,1) * t815 - rSges(4,2) * t816;
t674 = t1051 * t816;
t673 = rSges(3,1) * t920 - rSges(3,2) * t814;
t672 = rSges(3,1) * t916 - rSges(3,2) * t812;
t667 = Icges(3,5) * t920 - Icges(3,6) * t814;
t666 = Icges(3,5) * t916 - Icges(3,6) * t812;
t665 = -pkin(10) * t816 - t776;
t634 = t651 * pkin(5);
t632 = t649 * pkin(5);
t533 = Icges(4,5) * t814 + t920 * t944;
t532 = Icges(4,5) * t812 + t916 * t944;
t531 = Icges(4,6) * t814 + t920 * t943;
t530 = Icges(4,6) * t812 + t916 * t943;
t527 = -t1059 * t920 + t663;
t526 = -t1059 * t916 + t662;
t524 = rSges(5,1) * t930 - rSges(5,2) * t733;
t510 = rSges(4,1) * t931 - rSges(4,2) * t728;
t509 = rSges(4,1) * t929 - rSges(4,2) * t726;
t500 = t1051 * t728;
t499 = t1051 * t726;
t494 = -pkin(10) * t1124 + t634;
t493 = -pkin(10) * t1125 + t632;
t492 = -pkin(10) * t728 + t697;
t491 = -pkin(10) * t726 + t695;
t459 = t919 * qJD(2);
t458 = t922 * qJD(2);
t423 = t929 * t525;
t394 = t1122 * t756 + t757 * t920 + t758 * t814;
t393 = -t1121 * t756 + t757 * t916 + t758 * t812;
t391 = qJD(2) * t933 + qJD(1);
t372 = rSges(5,1) * t945 - rSges(5,2) * t582;
t368 = rSges(5,1) * t946 - rSges(5,2) * t580;
t352 = Icges(7,1) * t619 + Icges(7,4) * t618 - Icges(7,5) * t816;
t351 = Icges(7,4) * t619 + Icges(7,2) * t618 - Icges(7,6) * t816;
t350 = Icges(7,5) * t619 + Icges(7,6) * t618 - Icges(7,3) * t816;
t344 = -rSges(7,3) * t1044 + t1078;
t335 = Icges(7,1) * t591 + Icges(7,4) * t590 - Icges(7,5) * t1044;
t334 = Icges(7,4) * t591 + Icges(7,2) * t590 - Icges(7,6) * t1044;
t333 = Icges(7,5) * t591 + Icges(7,6) * t590 - Icges(7,3) * t1044;
t312 = t815 * t373;
t278 = -g(1) * t945 - g(2) * t946 - g(3) * t930;
t277 = t931 * t369;
t271 = rSges(5,1) * t580 + rSges(5,2) * t946 - rSges(5,3) * t929;
t236 = t1122 * t787 - t757 * t785 + t758 * t784 + t788 * t920 + t789 * t814;
t235 = -t1121 * t787 - t757 * t783 + t758 * t782 + t788 * t916 + t789 * t812;
t232 = -Icges(7,1) * t474 - Icges(7,4) * t473 - Icges(7,5) * t728;
t231 = -Icges(7,1) * t472 - Icges(7,4) * t471 - Icges(7,5) * t726;
t230 = -Icges(7,4) * t474 - Icges(7,2) * t473 - Icges(7,6) * t728;
t229 = -Icges(7,4) * t472 - Icges(7,2) * t471 - Icges(7,6) * t726;
t228 = -Icges(7,5) * t474 - Icges(7,6) * t473 - Icges(7,3) * t728;
t227 = -Icges(7,5) * t472 - Icges(7,6) * t471 - Icges(7,3) * t726;
t212 = -rSges(7,3) * t1124 + t1085;
t211 = -rSges(7,3) * t1125 + t1086;
t208 = Icges(7,1) * t422 + Icges(7,4) * t421 - Icges(7,5) * t1124;
t207 = Icges(7,1) * t420 + Icges(7,4) * t419 - Icges(7,5) * t1125;
t206 = Icges(7,4) * t422 + Icges(7,2) * t421 - Icges(7,6) * t1124;
t205 = Icges(7,4) * t420 + Icges(7,2) * t419 - Icges(7,6) * t1125;
t204 = Icges(7,5) * t422 + Icges(7,6) * t421 - Icges(7,3) * t1124;
t203 = Icges(7,5) * t420 + Icges(7,6) * t419 - Icges(7,3) * t1125;
t180 = -t823 * t443 + t739 * t639 + t898;
t179 = t444 * t823 - t639 * t738 + t950;
t158 = t443 * t738 - t444 * t739 + t1014;
t147 = rSges(5,1) * t285 - rSges(5,2) * t284 + rSges(5,3) * t572;
t105 = -t705 * t271 + t545 * t454 + t881;
t104 = t273 * t705 - t454 * t544 + t897;
t93 = -t823 * t300 - t741 * t443 + t739 * t478 + t594 * t639 + t868;
t92 = t301 * t823 + t444 * t741 - t478 * t738 - t593 * t639 + t895;
t90 = t271 * t544 - t273 * t545 + t932;
t85 = t954 + t1221;
t84 = t163 * t739 + t164 * t738 + t823 * t243;
t69 = t154 * t739 + t155 * t738 + t210 * t823;
t68 = t152 * t739 + t153 * t738 + t209 * t823;
t50 = -t705 * t147 + t545 * t225 - t470 * t271 + t283 * t454 + t865;
t49 = t149 * t705 - t225 * t544 + t273 * t470 - t282 * t454 + t870;
t31 = t147 * t544 - t149 * t545 + t271 * t282 - t273 * t283 + t883;
t27 = t1084 * t282 + t1106 * t544 + t148 * t705 + t272 * t470 + t867;
t4 = [t903 * t1208 + t876 * t1207 + (-0.2e1 * t1137 + 0.2e1 * t1138 - 0.2e1 * t1157 + t876 + 0.2e1 * t1158) * t1206 + m(2) * qJDD(1) + (-m(5) * t149 - m(6) * t148 - m(7) * t216) * t545 + (m(5) * t147 + m(6) * t146 + m(7) * t215) * t544 + (-m(5) * t273 - m(6) * t272 - m(7) * t432) * t283 + (m(5) * t271 + m(6) * t270 + m(7) * t431) * t282 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t860 / 0.2e1 - g(3) + t873) * m(3) + (t973 / 0.2e1 - g(3) + t1221) * m(4); -m(7) * (g(1) * (t634 + t904 + t1085) + g(2) * (t632 + t905 + t1086) + g(3) * (t746 + t915 + t1078) + (-g(1) * t920 - g(2) * t916 - g(3) * t1118) * t856 * (rSges(7,3) + pkin(10))) + ((-t1124 * t166 + t168 * t421 + t170 * t422 + t204 * t931 + t206 * t342 + t208 * t961) * t426 + t62 * t527 + (-t1124 * t165 + t167 * t421 + t169 * t422 + t203 * t931 + t205 * t342 + t207 * t961) * t427 + t61 * t526 + (-t1124 * t247 + t248 * t421 + t249 * t422 + t333 * t931 + t334 * t342 + t335 * t961) * t592 + t89 * t731) * t1196 + ((qJD(2) * t967 + qJDD(2) * t964) * t852 + t1236) * t1154 / 0.2e1 + t850 * t1154 * (t1154 * t787 + (qJD(2) * t955 + t788 * t859 + t789 * t857) * t852) + (t849 * t964 + t850 * t967) * t852 / 0.2e1 + ((t812 * t437 + t531 * t929 + t726 * t533) * t738 + (t812 * t436 + t530 * t929 + t726 * t532) * t739 + (t812 * t636 + t726 * t736 + t735 * t929) * t823 + (t1119 * t209 + t152 * t812 + t153 * t814) * qJD(3) + t1220 * t916) * t1172 + ((t814 * t437 + t531 * t931 + t728 * t533) * t738 + (t814 * t436 + t530 * t931 + t728 * t532) * t739 + (t814 * t636 + t728 * t736 + t735 * t931) * t823 + (t1119 * t210 + t154 * t812 + t155 * t814) * qJD(3) + t1220 * t920) * t1174 + ((qJD(2) * t918 + qJDD(2) * t919) * t919 + t459 * t918 + (qJD(2) * t921 + qJDD(2) * t922) * t922 + t458 * t921 + (qJDD(1) + t873) * t933 + t391 * t957 * t852) * t1057 / 0.2e1 + ((-t1125 * t166 + t168 * t419 + t170 * t420 + t204 * t929 + t206 * t338 + t208 * t962) * t426 + t60 * t527 + (-t1125 * t165 + t167 * t419 + t169 * t420 + t203 * t929 + t205 * t338 + t207 * t962) * t427 + t59 * t526 + (-t1125 * t247 + t248 * t419 + t249 * t420 + t333 * t929 + t334 * t338 + t335 * t962) * t592 + t88 * t731) * t1194 + (t83 * (t662 * t453 + t545 * t554 + t1098 * t786 + (-t386 - t429) * t705 + t866) + t82 * (t272 * t786 + t388 * t705 + t1084 * t663 + (-t554 - t600) * t544 + t872) + t65 * (t270 * t663 + t386 * t544 + t1097 * t662 + (-t388 - t430) * t545 + t882)) * t1000 + (t892 * t1217 + t893 * t1212 + t1033 * t1218 + t1040 * t1213 + t947 * t1219 + t949 * t1214 + ((t10 * t1109 + t1155 * t48 + t12 * t974 + t54 * t975) * t1048 + (t11 * t974 + t53 * t975 + t910) * t1049) * t852 + (t1109 * t1218 - t1110 * t1217 + t1155 * t1213 - t1156 * t1212) * t1154) * t1206 + ((-t815 * t531 + t816 * t533) * t738 + (-t815 * t530 + t816 * t532) * t739 + (-t815 * t735 + t816 * t736) * t823 + (t163 * t812 + t164 * t814) * qJD(3) + ((qJD(3) * t243 + t436 * t739 + t437 * t738 + t636 * t823) * t857 + t1220 * t859) * t852) * t1163 - (t391 * (t672 * t851 + t673 * t853) * t1068 + (t459 * (-t1121 * t820 - t1154 * t672) + t458 * (-t1122 * t820 + t1154 * t673)) * qJD(2)) * t1057 / 0.2e1 + (t1269 * t786 + (t1124 * t1247 + t1241 * t582 - t1242 * t931 + t1243 * t945 + t1246 * t651 + t1248 * t650) * t705 + t1273 * t663 + t1274 * t662 + (t1124 * t1262 + t1254 * t582 - t1256 * t931 + t1258 * t945 + t1260 * t651 + t1264 * t650) * t545 + (t1124 * t1261 + t1253 * t582 - t1255 * t931 + t1257 * t945 + t1259 * t651 + t1263 * t650) * t544) * t1191 + ((t1273 * t851 - t1274 * t853) * t852 + t1269 * t1154) * t1199 + ((-t1044 * t166 + t168 * t590 + t170 * t591 - t204 * t815 + t206 * t497 + t208 * t956) * t426 + t67 * t527 + (-t1044 * t165 + t167 * t590 + t169 * t591 - t203 * t815 + t205 * t497 + t207 * t956) * t427 + t66 * t526 + (-t1044 * t247 + t248 * t590 + t249 * t591 - t333 * t815 + t334 * t497 + t335 * t956) * t592 + t91 * t731) * t1185 - t84 * t843 / 0.2e1 + (t54 * (t526 * t250 + t1089 * t786 + t427 * t344 + t866 - t592 * t211 + t662 * t595 + t545 * t699 - t731 * t171 + (-t429 - t493) * t705) + t53 * (t872 + (-t600 - t699) * t544 - t527 * t250 - t426 * t344 + t786 * t432 + t592 * t212 + t1079 * t663 + t705 * t494 + t731 * t172) + t48 * (t1087 * t662 + (-t430 - t494) * t545 + t171 * t527 - t172 * t526 + t211 * t426 - t212 * t427 + t431 * t663 + t493 * t544 + t882)) * t999 + (t1268 * t786 + (t1044 * t1247 + t1241 * t733 + t1242 * t815 + t1243 * t930 + t1246 * t751 + t1248 * t750) * t705 + t1271 * t663 + t1272 * t662 + (t1044 * t1262 + t1254 * t733 + t1256 * t815 + t1258 * t930 + t1260 * t751 + t1264 * t750) * t545 + (t1044 * t1261 + t1253 * t733 + t1255 * t815 + t1257 * t930 + t1259 * t751 + t1263 * t750) * t544) * t1179 + ((t1271 * t851 - t1272 * t853) * t852 + t1268 * t1154) * t1192 + t662 * t1294 + t663 * t1295 + t786 * t1296 + (t243 * t1154 + (-t163 * t853 + t164 * t851) * t852) * t1170 + (t102 * t1154 + (-t70 * t853 + t71 * t851) * t852) * t1171 + (t103 * t1154 + (-t72 * t853 + t73 * t851) * t852) * t1173 + t849 * t1154 * (t1154 * t756 + (t757 * t859 + t758 * t857) * t852) + t851 * (t1154 * t236 + t852 * t971) * t1012 - (t966 * t1052 + t235 * t850 + t393 * t849 + (t1154 * t235 + 0.2e1 * t852 * (-(-t1121 * t642 - t608 * t783 + t610 * t782 + t644 * t916 + t646 * t812) * t853 + (-t1121 * t643 - t609 * t783 + t611 * t782 + t645 * t916 + t647 * t812) * t851)) * qJD(2) + t1238) * t1121 / 0.2e1 + (t24 * t1154 + (-t13 * t853 + t14 * t851) * t852) * t1193 + (t25 * t1154 + (-t15 * t853 + t16 * t851) * t852) * t1195 + (t91 * t1154 + (-t66 * t853 + t67 * t851) * t852) * t1197 - m(5) * (g(1) * (t952 + t389) + g(2) * (t953 + t387) + g(3) * (t982 + t555)) - m(6) * (g(1) * (t904 + t388) + g(2) * (t905 + t386) + g(3) * (t915 + t554)) + (t1270 * t786 + (t1125 * t1247 + t1241 * t580 - t1242 * t929 + t1243 * t946 + t1246 * t649 + t1248 * t648) * t705 + t1275 * t663 + t1276 * t662 + (t1125 * t1262 + t1254 * t580 - t1256 * t929 + t1258 * t946 + t1260 * t649 + t1264 * t648) * t545 + (t1125 * t1261 + t1253 * t580 - t1255 * t929 + t1257 * t946 + t1259 * t649 + t1263 * t648) * t544) * t1189 - m(4) * (g(1) * (t535 + t677) + g(2) * (t534 + t675) + g(3) * (t737 + t822)) + ((t1275 * t851 - t1276 * t853) * t852 + t1270 * t1154) * t1198 + (-t851 * ((-t1073 * t920 + t1075 * t814 + t1122 * t667) * t1122 - (-t1074 * t920 + t1076 * t814 + t1122 * t666) * t1121 + (-t1069 * t920 + t1070 * t814 + t1122 * t817) * t1154) / 0.2e1 + t853 * ((-t1073 * t916 + t1075 * t812 - t1121 * t667) * t1122 - (-t1074 * t916 + t1076 * t812 - t1121 * t666) * t1121 + (-t1069 * t916 + t1070 * t812 - t1121 * t817) * t1154) / 0.2e1) * t852 * qJD(2) ^ 2 + (t88 * t1154 + (-t59 * t853 + t60 * t851) * t852) * t1200 + (t89 * t1154 + (-t61 * t853 + t62 * t851) * t852) * t1201 + t731 * t1203 + t527 * t1204 + t526 * t1205 + (0.2e1 * t50 * (-t1154 * t271 + t907) + 0.2e1 * t105 * (-t1154 * t147 + t908) + 0.2e1 * t49 * (t1154 * t273 + t1081) + 0.2e1 * t104 * (t1154 * t149 + t1091) + 0.2e1 * t31 * t983 + 0.2e1 * t90 * t986 + ((t1031 * t50 + t1036 * t105 + t90 * t149 + t31 * t273) * t1048 + (t1031 * t49 + t1036 * t104 + t90 * t147 + t31 * t271) * t1049) * t852) * t1208 - t69 * t795 / 0.2e1 - t68 * t793 / 0.2e1 - m(3) * (g(1) * t673 + g(2) * t672 + g(3) * t820) - (((t669 * t859 + t671 * t857 + t959) * t851 - (t668 * t859 + t670 * t857 + t960) * t853) * t852 * t1068 + ((-t666 * t853 + t667 * t851 + t818 * t859 + t819 * t857 + t955) * t1068 + t817 * t850) * t1154) * t850 / 0.2e1 + (t114 * t1154 + (t851 * t87 - t853 * t86) * t852) * t1162 + (t105 * (-t786 * t271 - t705 * t387 + t662 * t454 + t545 * t555 + t869) + t104 * (t273 * t786 + t389 * t705 - t454 * t663 - t544 * t555 + t880) + t90 * (t271 * t663 - t273 * t662 + t387 * t544 - t389 * t545 + t896)) * t1002 + (t236 * t850 + t394 * t849 + (qJD(2) * t971 + qJDD(2) * t965) * t852 + t1237) * t1122 / 0.2e1 + ((-t1154 * t270 + t892) * t1215 + (-t1154 * t146 + t893) * t1209 + 0.2e1 * t27 * (t1154 * t272 + t1033) + (t1154 * t148 + t1040) * t1210 + t947 * t1216 + t949 * t1211 + ((t65 * t148 + t19 * t272 + t28 * t984 + t83 * t988) * t1048 + (t27 * t984 + t82 * t988 + t976) * t1049) * t852) * t1207 + (t180 * (-t823 * t534 + t739 * t737 + (-t1119 * t443 + t639 * t812) * qJD(3) + t899) + t179 * (t535 * t823 - t737 * t738 + (t1119 * t444 - t639 * t814) * qJD(3) + t951) + t158 * (t534 * t738 - t535 * t739 + (t443 * t814 - t444 * t812) * qJD(3) + t1072)) * t1004 + ((t1283 * t851 - t1322 * t853) * t852 + t1277 * t1154) * t1178 + ((t1285 * t851 - t1323 * t853) * t852 + t1278 * t1154) * t1190 + ((t1287 * t851 - t1324 * t853) * t852 + t1279 * t1154) * t1188 - (t1154 * t393 + t852 * t966) * t1013 / 0.2e1 + (t1154 * t394 + t852 * t965) * t841 / 0.2e1 + (t93 * (-t1154 * t443 + t853 * t997 - t1005) + t180 * (-t1154 * t300 + t853 * t998 - t1006) + t92 * (t1154 * t444 + t851 * t997 + t664) + t179 * (t1154 * t301 + t851 * t998 + t603) + t85 * ((t443 * t851 + t444 * t853) * t852 + t1071) + t158 * ((t300 * t851 + t301 * t853) * t852 + t1077)) * t1003 + (t209 * t1154 + (-t152 * t853 + t153 * t851) * t852) * t1182 + (t210 * t1154 + (-t154 * t853 + t155 * t851) * t852) * t1183 + (t30 * t1154 + (-t17 * t853 + t18 * t851) * t852) * t1184; (t728 * t885 - t884 * t931 - t911 * t920) * t1174 + (t152 * t783 + t153 * t785 - t70 * t916 - t71 * t920 + (-t102 * t859 + t1066 * t209) * t852) * t1171 + (t154 * t783 + t155 * t785 - t72 * t916 - t73 * t920 + (-t103 * t859 + t1066 * t210) * t852) * t1173 + (-t13 * t916 - t14 * t920 + t59 * t783 + t60 * t785 + (t1066 * t88 - t24 * t859) * t852) * t1193 + (-t15 * t916 - t16 * t920 + t61 * t783 + t62 * t785 + (t1066 * t89 - t25 * t859) * t852) * t1195 + (-t1118 * t91 - t66 * t916 - t67 * t920) * t1197 + (-t1118 * t88 - t59 * t916 - t60 * t920) * t1200 + (-t1118 * t89 - t61 * t916 - t62 * t920) * t1201 + (t163 * t783 + t164 * t785 - t916 * t86 - t920 * t87 + (t1066 * t243 - t114 * t859) * t852) * t1162 + (-t1118 * t209 - t152 * t916 - t153 * t920) * t1182 + (-t1118 * t210 - t154 * t916 - t155 * t920) * t1183 + (-t17 * t916 - t18 * t920 + t66 * t783 + t67 * t785 + (t1066 * t91 - t30 * t859) * t852) * t1184 + (t93 * (t1118 * t443 - t639 * t916) + t180 * (-t478 * t916 + t639 * t783 + (-t1066 * t443 + t300 * t859) * t852) + t92 * (-t1118 * t444 + t639 * t920) + t179 * (t478 * t920 - t639 * t785 + (t1066 * t444 - t301 * t859) * t852) + t85 * (-t443 * t920 + t444 * t916) + t158 * (-t300 * t920 + t301 * t916 + t443 * t785 - t444 * t783)) * t1003 + (-t1118 * t243 - t163 * t916 - t164 * t920) * t1170 - m(7) * (g(1) * (t1202 * t728 + t234 + t486 + t697 + t715) + g(2) * (t1202 * t726 + t233 + t485 + t695 + t714) + g(3) * (t1202 * t816 + t365 + t661 - t776 - t810)) + (t726 * t885 - t884 * t929 - t911 * t916) * t1172 + (t985 * t1217 + t948 * t1212 + t1092 * t1213 + t1094 * t1219 + t990 * t1214 - (t11 * t987 + t53 * t991 + t910) * t1050 + ((t54 * (-t512 + t1039) + t53 * t1109) * t993 + (t11 * t989 + t1110 * t12 + t1156 * t54 + t53 * t992) * t1047) * t852 + 0.2e1 * (t1110 * t48 + t53 * t987) * t785 + 0.2e1 * (t1100 * t54 + t48 * t989) * t783 - 0.2e1 * (t10 * t989 + t48 * t992 + t909) * t916) * t1206 - t1238 * t916 / 0.2e1 + (-t1240 * t931 + (t1244 * t582 + t1245 * t945 + t1247 * t728) * t705 + (t1250 * t582 + t1252 * t945 + t1262 * t728) * t545 + (t1249 * t582 + t1251 * t945 + t1261 * t728) * t544 + (t1269 * t816 + t1273 * t728 + t1274 * t726) * qJD(4)) * t1191 + (-t1118 * t1269 - t1273 * t920 - t1274 * t916) * t1199 + ((-t166 * t816 + t168 * t618 + t170 * t619 - t228 * t815 + t230 * t497 + t232 * t956) * t426 + t67 * t500 + (-t165 * t816 + t167 * t618 + t169 * t619 - t227 * t815 + t229 * t497 + t231 * t956) * t427 + t66 * t499 + (-t247 * t816 + t248 * t618 + t249 * t619 - t350 * t815 + t351 * t497 + t352 * t956) * t592 + t91 * t674) * t1185 + (t1240 * t815 + (t1244 * t733 + t1245 * t930 + t1247 * t816) * t705 + (t1250 * t733 + t1252 * t930 + t1262 * t816) * t545 + (t1249 * t733 + t1251 * t930 + t1261 * t816) * t544 + (t1268 * t816 + t1271 * t728 + t1272 * t726) * qJD(4)) * t1179 + (-t1118 * t1268 - t1271 * t920 - t1272 * t916) * t1192 + (t68 + t22 + t1282) * t783 / 0.2e1 - m(6) * (g(1) * (t513 + t412 + t486) + g(2) * (t511 + t410 + t485) + g(3) * (t683 + t542 + t661)) + t1064 * t1294 + t1063 * t1295 + t1062 * t1296 - m(5) * (g(1) * (t413 + t513) + g(2) * (t411 + t511) + g(3) * (t543 + t683)) + (t985 * t1215 + t948 * t1209 + t1092 * t1210 + t1094 * t1216 + t990 * t1211 - (t1032 * t27 + t1037 * t82 + t976) * t1050 + ((t83 * (-t512 + t1098) + t82 * t272) * t993 + (t1222 * t27 + t1239 * t82 + t83 * t146 + t28 * t270) * t1047) * t852 + (t1032 * t1210 + t270 * t1211) * t785 + (t453 * t1209 + t1211 * t1222) * t783 - (t224 * t1209 + t1211 * t1239 + t453 * t1215 + t1222 * t1216) * t916) * t1207 + (t50 * (t1118 * t271 - t454 * t916 + t1082) + t105 * (-t225 * t916 + t454 * t783 + (t147 * t859 + (-t271 - t512) * t1066) * t852 + t1034) + t49 * (-t1083 * t920 + t1096 * t1118) + t104 * (t479 - t1104 * t920 + t1083 * t785 + (t1066 * t273 + t1113 * t859) * t852) + t31 * (-t1096 * t916 - t271 * t920 - t452) + t90 * (t1096 * t783 - t1113 * t916 - t147 * t920 + t271 * t785 + t1095)) * t1001 + ((-t166 * t726 - t168 * t471 - t170 * t472 + t228 * t929 + t230 * t338 + t232 * t962) * t426 + t60 * t500 + (-t165 * t726 - t167 * t471 - t169 * t472 + t227 * t929 + t229 * t338 + t231 * t962) * t427 + t59 * t499 + (-t247 * t726 - t248 * t471 - t249 * t472 + t338 * t351 + t350 * t929 + t352 * t962) * t592 + t88 * t674) * t1194 + ((-t166 * t728 - t168 * t473 - t170 * t474 + t228 * t931 + t230 * t342 + t232 * t961) * t426 + t62 * t500 + (-t165 * t728 - t167 * t473 - t169 * t474 + t227 * t931 + t229 * t342 + t231 * t961) * t427 + t61 * t499 + (-t247 * t728 - t248 * t473 - t249 * t474 + t342 * t351 + t350 * t931 + t352 * t961) * t592 + t89 * t674) * t1196 + (-t1240 * t929 + (t1244 * t580 + t1245 * t946 + t1247 * t726) * t705 + (t1250 * t580 + t1252 * t946 + t1262 * t726) * t545 + (t1249 * t580 + t1251 * t946 + t1261 * t726) * t544 + (t1270 * t816 + t1275 * t728 + t1276 * t726) * qJD(4)) * t1189 + (-t1118 * t1270 - t1275 * t920 - t1276 * t916) * t1198 + (t69 + t23 + t1281) * t785 / 0.2e1 + t674 * t1203 + t500 * t1204 + t499 * t1205 + (-t1118 * t911 + t815 * t884 + t816 * t885) * t1163 + (t105 * (-t411 * t705 + t543 * t545 + (-t271 * t816 + t454 * t726) * qJD(4) + t994) + t104 * (t413 * t705 - t543 * t544 + (t273 * t816 - t454 * t728) * qJD(4) + t995) + t90 * (t411 * t544 - t413 * t545 + (t271 * t728 - t273 * t726) * qJD(4) + t996)) * t1002 + (t180 * (-t509 * t823 + t682 * t739) + t179 * (t510 * t823 - t682 * t738) + t158 * (t509 * t738 - t510 * t739)) * t1004 - t1236 * t1118 / 0.2e1 - t1237 * t920 / 0.2e1 - m(7) * ((-t171 * t674 - t233 * t592 + t250 * t499 + t365 * t427 - t491 * t705 + t545 * t665 + t900) * t1212 + (t172 * t674 + t234 * t592 - t250 * t500 - t365 * t426 + t492 * t705 - t544 * t665 + t901) * t1213 + (t171 * t500 - t172 * t499 + t233 * t426 - t234 * t427 + t491 * t544 - t492 * t545 + t902) * t1214 + (t54 * (-t431 * t816 + t595 * t726 - t1134) + t53 * (t432 * t816 - t595 * t728 - t1130) + t48 * (t431 * t728 - t432 * t726 - t1133)) * t1046) / 0.2e1 - m(6) * ((-t410 * t705 + t542 * t545 + t900) * t1209 + (t412 * t705 - t542 * t544 + t901) * t1210 + (t410 * t544 - t412 * t545 + t902) * t1211 + (t83 * (-t270 * t816 + t453 * t726 - t1134) + t82 * (t272 * t816 - t453 * t728 - t1130) + t65 * (t270 * t728 - t272 * t726 - t1133)) * t1046) / 0.2e1 + ((t1066 * t1268 - t1277 * t859) * t852 - t1283 * t920 - t1322 * t916 + t1271 * t785 + t1272 * t783) * t1178 + ((t1066 * t1269 - t1278 * t859) * t852 - t1285 * t920 - t1323 * t916 + t1273 * t785 + t1274 * t783) * t1190 + ((t1066 * t1270 - t1279 * t859) * t852 - t1287 * t920 - t1324 * t916 + t1275 * t785 + t1276 * t783) * t1188 - m(4) * (g(1) * t510 + g(2) * t509 + g(3) * t682) + (t84 + t29 + t1280) * t857 * t1012; (t50 * (-t271 * t815 - t454 * t929) + t105 * (-t147 * t815 - t225 * t929 - t271 * t729 + t454 * t572) + t49 * (t273 * t815 + t454 * t931) + t104 * (t149 * t815 + t225 * t931 + t273 * t729 - t454 * t574) + t31 * (-t271 * t931 + t273 * t929) + t90 * (-t147 * t931 + t149 * t929 + t271 * t574 - t273 * t572)) * t1001 - m(7) * (g(1) * (pkin(5) * t945 - t196 + t370) + g(2) * (pkin(5) * t946 - t194 + t366) + g(3) * (pkin(5) * t930 - t303 + t522)) + t1313 * t815 / 0.2e1 - t1314 * t931 / 0.2e1 - t1315 * t929 / 0.2e1 + (t54 * (-pkin(5) * t242 - t366 * t705 + t1093 - t1299) + t53 * (pkin(5) * t963 - t522 * t544 + t1099 - t1298) + t48 * (-pkin(5) * t199 - t370 * t545 + t1101 - t1300)) * t999 + (t1304 * t815 + t1305 * t733 + t1306 * t930) * t1179 + (-t1304 * t929 + t1305 * t580 + t1306 * t946) * t1189 + (-t1304 * t931 + t1305 * t582 + t1306 * t945) * t1191 + (t1268 * t815 - t1271 * t931 - t1272 * t929) * t1192 + (t1270 * t815 - t1275 * t931 - t1276 * t929) * t1198 + t1280 * t729 / 0.2e1 + t1281 * t574 / 0.2e1 + t1282 * t572 / 0.2e1 + (t1269 * t815 - t1273 * t931 - t1274 * t929) * t1199 - t871 - m(6) * (-g(1) * t1088 - g(2) * t1090 - g(3) * t1080) + t1319 * t1185 + t1320 * t1196 + t1321 * t1194 - m(5) * (g(1) * t372 + g(2) * t368 + g(3) * t524) + t879 * t1193 + t878 * t1195 + t923 * t1197 + (-t423 * t1217 + (t1089 * t729 + t572 * t595 + t1107 - t969) * t1212 + t312 * t1218 + (t1079 * t574 + t432 * t729 + t1116 - t968) * t1213 - t277 * t1219 + (t1087 * t572 + t431 * t574 + t1117 - t970) * t1214 + 0.2e1 * (t12 * t1039 + t54 * (-t80 + t1112) + t11 * t1109 + t53 * t1155) * t815 - 0.2e1 * (t1035 * t11 + t1041 * t53 + t910) * t931 - 0.2e1 * (t10 * t1038 + t1045 * t48 + t909) * t929) * t1206 + (t28 * (t1098 * t815 - t453 * t929 - t423) + t83 * (t1098 * t729 + t1115 * t815 - t224 * t929 + t453 * t572 + t1107) + t27 * (-t1084 * t931 + t272 * t815 + t312) + t82 * (t1084 * t574 - t1106 * t931 + t148 * t815 + t272 * t729 + t1116) + t19 * (-t1097 * t929 - t270 * t931 - t277) + t65 * (t1097 * t572 - t1114 * t929 - t146 * t931 + t270 * t574 + t1117)) * t1054 / 0.2e1 + t925 * t1200 + t924 * t1201 + (t83 * (t1090 * t705 + t523 * t545 + t1093) + t82 * (t1080 * t544 + t371 * t705 + t1099) + t65 * (t1088 * t545 + t367 * t544 + t1101)) * t1000 + (t105 * (-t368 * t705 + t524 * t545) + t104 * (t372 * t705 - t524 * t544) + t90 * (t368 * t544 - t372 * t545)) * t1002 + (t1268 * t729 + t1271 * t574 + t1272 * t572 + t1277 * t815 - t1283 * t931 - t1322 * t929) * t1178 + (t1269 * t729 + t1273 * t574 + t1274 * t572 + t1278 * t815 - t1285 * t931 - t1323 * t929) * t1190 + (t1270 * t729 + t1275 * t574 + t1276 * t572 + t1279 * t815 - t1287 * t931 - t1324 * t929) * t1188 + t877 * t1184; (-t10 * t930 - t11 * t946 + t1102 * t54 + t1103 * t53 + t1108 * t48 - t12 * t945 - t278) * m(7) + (t1102 * t83 + t1103 * t82 + t1108 * t65 - t19 * t930 - t27 * t946 - t28 * t945 - t278) * m(6); (t1298 * t53 + t1299 * t54 + t1300 * t48) * t999 + (t12 * (t171 * t815 + t250 * t929) + t54 * (t113 * t929 + t80 * t815 + t969) + t11 * (-t172 * t815 - t250 * t931) + t53 * (-t113 * t931 - t81 * t815 + t968) + t10 * (t171 * t931 - t172 * t929) + t48 * (t80 * t931 - t81 * t929 + t970)) * t1053 / 0.2e1 + t871 - t197 * t924 / 0.2e1 - t198 * t925 / 0.2e1 - t313 * t923 / 0.2e1 - m(7) * (g(1) * t196 + g(2) * t194 + g(3) * t303) + (-t1320 + t878) * t1196 + (-t1321 + t879) * t1194 + (-t1319 + t877) * t1185;];
tau  = t4;
