% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPR6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:36:47
% EndTime: 2019-03-08 23:37:03
% DurationCPUTime: 6.85s
% Computational Cost: add. (6594->543), mult. (15960->712), div. (0->0), fcn. (11384->10), ass. (0->268)
t203 = sin(qJ(2));
t198 = sin(pkin(6));
t306 = qJD(1) * t198;
t266 = t203 * t306;
t154 = qJD(2) * pkin(8) + t266;
t206 = cos(qJ(3));
t199 = cos(pkin(6));
t202 = sin(qJ(3));
t305 = qJD(1) * t202;
t263 = t199 * t305;
t119 = t206 * t154 + t263;
t106 = qJD(3) * pkin(9) + t119;
t162 = -pkin(3) * t206 - pkin(9) * t202 - pkin(2);
t207 = cos(qJ(2));
t265 = t207 * t306;
t120 = qJD(2) * t162 - t265;
t201 = sin(qJ(4));
t205 = cos(qJ(4));
t54 = -t201 * t106 + t205 * t120;
t309 = qJD(5) - t54;
t246 = pkin(3) * t202 - pkin(9) * t206;
t153 = t246 * qJD(3);
t297 = qJD(4) * t205;
t312 = t205 * t207;
t400 = (t201 * t203 + t206 * t312) * t306 - t201 * t153 - t162 * t297;
t313 = t205 * t206;
t188 = pkin(8) * t313;
t298 = qJD(4) * t201;
t315 = t201 * t206;
t377 = qJD(4) * t188 + t162 * t298 - t265 * t315 + (-t153 + t266) * t205;
t289 = qJD(3) * qJD(4);
t271 = t202 * t298;
t291 = t205 * qJD(3);
t274 = t206 * t291;
t390 = t271 - t274;
t113 = qJD(2) * t390 - t205 * t289;
t299 = qJD(3) * t206;
t275 = t201 * t299;
t220 = t202 * t297 + t275;
t114 = qJD(2) * t220 + t201 * t289;
t301 = qJD(3) * t201;
t303 = qJD(2) * t202;
t146 = t205 * t303 + t301;
t302 = qJD(2) * t206;
t185 = -qJD(4) + t302;
t323 = t146 * t185;
t144 = t201 * t303 - t291;
t326 = t144 * t185;
t399 = t201 * (t114 - t323) + t205 * (t113 - t326);
t320 = t199 * t206;
t118 = qJD(1) * t320 - t202 * t154;
t247 = qJD(3) * pkin(3) + t118;
t222 = t146 * qJ(5) + t247;
t367 = pkin(4) + pkin(5);
t40 = -t144 * t367 + t222;
t200 = sin(qJ(6));
t204 = cos(qJ(6));
t84 = t144 * t200 + t146 * t204;
t398 = t40 * t84;
t237 = -t204 * t144 + t146 * t200;
t358 = t84 * t237;
t363 = pkin(8) * t201;
t279 = -pkin(4) - t363;
t286 = pkin(10) * t313;
t397 = pkin(10) * t271 + (-t286 + (-pkin(5) + t279) * t202) * qJD(3) + t377;
t300 = qJD(3) * t202;
t193 = qJ(5) * t300;
t314 = t202 * t205;
t396 = -t193 - (-pkin(8) * qJD(3) + pkin(10) * qJD(4)) * t314 - (-qJD(5) + (-pkin(8) * qJD(4) + pkin(10) * qJD(3)) * t201) * t206 + t400;
t276 = t201 * t302;
t366 = pkin(9) - pkin(10);
t150 = t246 * qJD(2);
t72 = t205 * t118 + t201 * t150;
t62 = qJ(5) * t303 + t72;
t395 = pkin(10) * t276 + t366 * t298 + t62;
t172 = t366 * t205;
t71 = -t201 * t118 + t205 * t150;
t394 = -qJD(4) * t172 + (-t202 * t367 - t286) * qJD(2) - t71;
t393 = -t146 * pkin(10) + t309;
t117 = (t153 + t266) * qJD(2);
t304 = qJD(2) * t198;
t277 = t207 * t304;
t227 = qJD(3) * t199 + t277;
t218 = qJD(1) * t227;
t77 = -t154 * t300 + t206 * t218;
t257 = t106 * t297 - t205 * t117 + t120 * t298 + t201 * t77;
t55 = t106 * t205 + t120 * t201;
t230 = -t185 * t55 - t257;
t389 = -t237 ^ 2 + t84 ^ 2;
t177 = qJD(6) + t185;
t26 = qJD(6) * t84 - t200 * t113 - t204 * t114;
t381 = t84 * t177 - t26;
t328 = t114 * t205;
t329 = t113 * t201;
t388 = t202 * ((t144 * t201 - t146 * t205) * qJD(4) - t328 + t329) - (t144 * t205 + t146 * t201) * t299;
t387 = qJD(2) * (t202 * (t144 + t291) - t185 * t315) + t185 * t298;
t196 = t202 ^ 2;
t234 = qJD(2) * t196 - t185 * t206;
t269 = t185 * t297;
t386 = qJD(3) * (t144 * t202 + t201 * t234) - t206 * t114 - t202 * t269;
t173 = t185 * qJD(5);
t290 = qJD(2) * qJD(3);
t191 = t202 * t290;
t180 = qJ(5) * t191;
t226 = t106 * t298 - t201 * t117 - t120 * t297 - t205 * t77;
t16 = -t173 + t180 - t226;
t12 = pkin(10) * t114 + t16;
t13 = t113 * pkin(10) - t191 * t367 + t257;
t27 = t185 * t367 + t393;
t175 = t185 * qJ(5);
t39 = pkin(10) * t144 + t55;
t30 = -t175 + t39;
t8 = t200 * t27 + t204 * t30;
t2 = -qJD(6) * t8 - t200 * t12 + t204 * t13;
t384 = t8 * t177 + t2;
t340 = -(-t202 * t291 - t206 * t298) * pkin(8) + t400;
t254 = pkin(4) * t191;
t17 = -t254 + t257;
t45 = -t175 + t55;
t383 = t185 * t45 + t17;
t294 = qJD(6) * t204;
t295 = qJD(6) * t200;
t25 = t204 * t113 - t200 * t114 - t144 * t294 + t146 * t295;
t382 = -t177 * t237 + t25;
t379 = t114 + t323;
t378 = -t201 * t294 + t204 * t298 + t205 * t295;
t376 = t201 * qJD(5) + t263;
t375 = t113 * qJ(5) - t146 * qJD(5);
t148 = t200 * t201 + t204 * t205;
t374 = t148 * qJD(6) - t200 * t298 - t204 * t297;
t1 = t204 * t12 + t200 * t13 + t27 * t294 - t295 * t30;
t373 = t237 * t40 - t1;
t318 = t201 * qJ(5);
t370 = -t205 * t367 - t318;
t368 = t146 ^ 2;
t187 = pkin(8) * t315;
t195 = t206 * pkin(4);
t79 = t206 * pkin(5) + t187 + t195 + (-pkin(10) * t202 - t162) * t205;
t124 = t201 * t162 + t188;
t111 = -qJ(5) * t206 + t124;
t317 = t201 * t202;
t85 = pkin(10) * t317 + t111;
t31 = -t200 * t85 + t204 * t79;
t365 = qJD(6) * t31 + t200 * t397 - t204 * t396;
t32 = t200 * t79 + t204 * t85;
t364 = -qJD(6) * t32 + t200 * t396 + t204 * t397;
t362 = pkin(9) * t146;
t361 = pkin(9) * t185;
t7 = -t200 * t30 + t204 * t27;
t360 = t177 * t7;
t171 = t366 * t201;
t110 = t171 * t200 + t172 * t204;
t357 = qJD(6) * t110 - t200 * t395 + t204 * t394;
t109 = t171 * t204 - t172 * t200;
t356 = -qJD(6) * t109 + t200 * t394 + t204 * t395;
t355 = qJD(2) * pkin(2);
t58 = pkin(4) * t144 - t222;
t354 = t146 * t58;
t273 = t154 * t299;
t78 = t202 * t218 + t273;
t23 = t114 * pkin(4) + t375 + t78;
t350 = t23 * t201;
t349 = t23 * t205;
t322 = t198 * t203;
t135 = t202 * t322 - t320;
t348 = t78 * t135;
t347 = t78 * t201;
t346 = t78 * t202;
t345 = t78 * t205;
t343 = t279 * t300 + t377;
t342 = t300 * t363 - t377;
t341 = t206 * qJD(5) - t193 + t340;
t333 = qJ(5) * t205;
t229 = -t201 * t367 + t333;
t339 = qJD(4) * t229 - (qJD(2) * t229 - t154) * t206 + t376;
t319 = t200 * t205;
t338 = -t200 * t297 - t204 * t276 + t302 * t319 + t378;
t337 = t148 * t302 + t374;
t156 = -qJ(5) * t200 - t204 * t367;
t336 = qJD(6) * t156 - t200 * t39 + t204 * t393;
t157 = qJ(5) * t204 - t200 * t367;
t335 = -qJD(6) * t157 - t200 * t393 - t204 * t39;
t242 = pkin(4) * t201 - t333;
t334 = t242 * qJD(4) - (qJD(2) * t242 + t154) * t206 - t376;
t332 = t247 * t201;
t331 = t247 * t205;
t327 = t144 * qJ(5);
t324 = t146 * t144;
t210 = qJD(2) ^ 2;
t321 = t198 * t210;
t316 = t201 * t204;
t209 = qJD(3) ^ 2;
t311 = t209 * t202;
t310 = t209 * t206;
t197 = t206 ^ 2;
t307 = t196 - t197;
t296 = qJD(5) * t205;
t288 = t201 * t361;
t287 = t205 * t361;
t285 = pkin(9) * t300;
t284 = pkin(9) * t291;
t282 = t198 * t201 * t207;
t281 = t203 * t321;
t280 = t202 * t210 * t206;
t278 = t203 * t304;
t267 = t185 * t303;
t261 = t144 ^ 2 - t368;
t123 = t162 * t205 - t187;
t256 = t177 ^ 2;
t253 = t144 * t265;
t252 = t146 * t265;
t251 = t202 * t265;
t250 = t202 * t277;
t249 = t206 * t277;
t248 = t206 * t191;
t155 = -t265 - t355;
t244 = -t155 - t265;
t243 = pkin(4) * t205 + t318;
t136 = t199 * t202 + t206 * t322;
t93 = t136 * t201 + t198 * t312;
t94 = t136 * t205 - t282;
t43 = -t200 * t94 + t204 * t93;
t44 = t200 * t93 + t204 * t94;
t42 = pkin(4) * t185 + t309;
t241 = -t201 * t45 + t205 * t42;
t240 = -t201 * t55 - t205 * t54;
t239 = (qJD(4) * t144 - t113) * pkin(9);
t231 = pkin(8) + t242;
t228 = qJD(2) * t244;
t91 = -qJD(3) * t135 + t249;
t34 = -qJD(4) * t282 + t136 * t297 + t201 * t91 - t205 * t278;
t35 = -qJD(4) * t93 + t201 * t278 + t91 * t205;
t225 = -t113 * t93 - t94 * t114 - t35 * t144 + t146 * t34;
t223 = -pkin(8) + t229;
t217 = qJD(3) * (-t244 - t355);
t92 = qJD(3) * t136 + t250;
t216 = t135 * t114 + t92 * t144 + t185 * t34 - t191 * t93;
t215 = -t185 * t54 + t226;
t214 = -t201 * t326 - t328;
t213 = t113 * t135 - t146 * t92 - t185 * t35 + t191 * t94;
t212 = t346 + t77 * t206 + (-t118 * t206 - t119 * t202) * qJD(3);
t211 = t114 * t317 + t144 * t220;
t158 = -pkin(3) - t243;
t149 = t316 - t319;
t142 = pkin(3) - t370;
t131 = t148 * t202;
t130 = t200 * t314 - t202 * t316;
t127 = t231 * t202;
t122 = (-t185 - t302) * t300;
t112 = -t123 + t195;
t108 = t223 * t202;
t95 = pkin(9) * t328;
t89 = pkin(4) * t146 + t327;
t69 = -t146 * t367 - t327;
t68 = -t113 - t326;
t65 = (qJD(4) * t243 - t296) * t202 + t231 * t299;
t64 = -pkin(4) * t303 - t71;
t61 = -t269 + (t185 * t313 + (-t146 + t301) * t202) * qJD(2);
t49 = t200 * t274 + t202 * t374 - t204 * t275;
t48 = -t200 * t220 + t202 * t378 - t204 * t274;
t46 = (qJD(4) * t370 + t296) * t202 + t223 * t299;
t41 = -t205 * t323 - t329;
t37 = -t113 * t314 - t146 * t390;
t29 = t185 * t271 + t113 * t206 + (t146 * t202 + t205 * t234) * qJD(3);
t18 = -t114 * t367 - t227 * t305 - t273 - t375;
t6 = qJD(6) * t43 + t34 * t200 + t35 * t204;
t5 = -qJD(6) * t44 - t35 * t200 + t34 * t204;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281, -t207 * t321, 0, 0, 0, 0, 0, 0, 0, 0, -t206 * t281 + (-t92 - t250) * qJD(3), t202 * t281 + (-t91 - t249) * qJD(3) (t202 * t92 + t206 * t91 + (t135 * t206 - t136 * t202) * qJD(3)) * qJD(2), -t118 * t92 + t119 * t91 + t348 + t77 * t136 + (t155 - t265) * t278, 0, 0, 0, 0, 0, 0, t216, -t213, t225, -t226 * t94 - t247 * t92 + t257 * t93 - t34 * t54 + t35 * t55 + t348, 0, 0, 0, 0, 0, 0, t216, t225, t213, t135 * t23 + t16 * t94 + t17 * t93 + t34 * t42 + t35 * t45 + t58 * t92, 0, 0, 0, 0, 0, 0, -t135 * t26 + t177 * t5 - t191 * t43 - t237 * t92, t135 * t25 - t177 * t6 + t191 * t44 - t84 * t92, -t237 * t6 + t25 * t43 - t26 * t44 - t5 * t84, t1 * t44 - t135 * t18 + t2 * t43 - t40 * t92 + t5 * t7 + t6 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t248, -0.2e1 * t307 * t290, t310, -0.2e1 * t248, -t311, 0, -pkin(8) * t310 + t202 * t217, pkin(8) * t311 + t206 * t217 (-t196 - t197) * qJD(2) * t265 + t212 ((t118 * t202 - t119 * t206) * t207 + (-t155 - t355) * t203) * t306 + t212 * pkin(8), t37, t388, t29, t211, -t386, t122, -t342 * t185 + (t257 + (pkin(8) * t144 - t332) * qJD(3)) * t206 + (-t253 - t247 * t297 + pkin(8) * t114 + t347 + (qJD(2) * t123 + t54) * qJD(3)) * t202, -t340 * t185 + (-t226 + (pkin(8) * t146 - t331) * qJD(3)) * t206 + (-t252 + t247 * t298 - pkin(8) * t113 + t345 + (-qJD(2) * t124 - t55) * qJD(3)) * t202, t123 * t113 - t124 * t114 - t342 * t146 + t340 * t144 + t240 * t299 + (t226 * t201 + t257 * t205 + (t201 * t54 - t205 * t55) * qJD(4)) * t202, t247 * t251 - t257 * t123 - t226 * t124 - t340 * t55 + t342 * t54 + (-t247 * t299 + t346) * pkin(8), t37, t29, -t388, t122, t386, t211, t127 * t114 + t65 * t144 + (t301 * t58 + t17) * t206 + t343 * t185 + (-t253 + t58 * t297 + t350 + (-qJD(2) * t112 - t42) * qJD(3)) * t202, -t111 * t114 - t112 * t113 + t343 * t146 + t341 * t144 + t241 * t299 + (-t16 * t201 + t17 * t205 + (-t201 * t42 - t205 * t45) * qJD(4)) * t202, t127 * t113 - t65 * t146 + (-t291 * t58 - t16) * t206 + t341 * t185 + (t252 + t58 * t298 - t349 + (qJD(2) * t111 + t45) * qJD(3)) * t202, t16 * t111 + t17 * t112 + t23 * t127 + (t65 - t251) * t58 - t341 * t45 + t343 * t42, -t131 * t25 - t48 * t84, t130 * t25 - t131 * t26 + t237 * t48 - t49 * t84, -t48 * t177 - t25 * t206 + (-qJD(2) * t131 - t84) * t300, t130 * t26 + t237 * t49, -t49 * t177 - t26 * t206 + (qJD(2) * t130 + t237) * t300 (-t177 - t302) * t300, t108 * t26 + t18 * t130 + t2 * t206 + t40 * t49 + t46 * t237 + t364 * t177 + (t237 * t265 + (-qJD(2) * t31 - t7) * qJD(3)) * t202, -t1 * t206 - t108 * t25 + t18 * t131 - t40 * t48 + t46 * t84 - t365 * t177 + (t84 * t265 + (qJD(2) * t32 + t8) * qJD(3)) * t202, -t1 * t130 - t2 * t131 - t237 * t365 + t31 * t25 - t32 * t26 - t364 * t84 + t7 * t48 - t8 * t49, t1 * t32 + t18 * t108 + t2 * t31 + t365 * t8 + t364 * t7 + (t46 + t251) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, t307 * t210, 0, t280, 0, 0, t202 * t228, t206 * t228, 0, 0, t41, -t399, t61, t214, t387, t267, -pkin(3) * t114 - t119 * t144 + t71 * t185 - t345 + (t287 - t332) * qJD(4) + (-t202 * t54 + (t206 * t247 - t285) * t201) * qJD(2), pkin(3) * t113 - t119 * t146 - t72 * t185 + t347 + (-t288 - t331) * qJD(4) + (t247 * t313 + (t55 - t284) * t202) * qJD(2), t72 * t144 + t71 * t146 - t95 + (t54 * t302 - t226 + (-t54 + t362) * qJD(4)) * t205 + (t239 - t230) * t201, -t78 * pkin(3) + t247 * t119 - t54 * t71 - t55 * t72 + (qJD(4) * t240 + t201 * t257 - t205 * t226) * pkin(9), t41, t61, t399, t267, -t387, t214, t158 * t114 - t64 * t185 - t349 + t334 * t144 + (t201 * t58 + t287) * qJD(4) + (t202 * t42 + (-t206 * t58 - t285) * t201) * qJD(2), t62 * t144 - t64 * t146 - t95 + (-t42 * t302 + t16 + (t42 + t362) * qJD(4)) * t205 + (t239 + t383) * t201, t158 * t113 + t62 * t185 - t350 - t334 * t146 + (-t205 * t58 + t288) * qJD(4) + (t58 * t313 + (-t45 + t284) * t202) * qJD(2), t23 * t158 - t42 * t64 - t45 * t62 + t334 * t58 + (qJD(4) * t241 + t16 * t205 + t17 * t201) * pkin(9), -t25 * t149 - t337 * t84, t25 * t148 - t149 * t26 + t237 * t337 + t338 * t84, -t337 * t177 + (-qJD(3) * t149 + t84) * t303, t26 * t148 - t237 * t338, t338 * t177 + (qJD(3) * t148 - t237) * t303, t177 * t303, t142 * t26 + t18 * t148 + t339 * t237 - t338 * t40 - t357 * t177 + (-qJD(3) * t109 + t7) * t303, -t142 * t25 + t18 * t149 + t339 * t84 - t337 * t40 + t356 * t177 + (qJD(3) * t110 - t8) * t303, -t1 * t148 + t109 * t25 - t110 * t26 - t2 * t149 + t237 * t356 + t337 * t7 + t338 * t8 + t357 * t84, t1 * t110 + t2 * t109 + t18 * t142 + t339 * t40 - t356 * t8 - t357 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, -t261, t68, -t324, -t379, t191, t146 * t247 + t230, -t144 * t247 + t215, 0, 0, t324, t68, t261, t191, t379, -t324, -t144 * t89 + t230 + 0.2e1 * t254 - t354, pkin(4) * t113 - t114 * qJ(5) + (t45 - t55) * t146 + (t42 - t309) * t144, -t144 * t58 + t146 * t89 - 0.2e1 * t173 + 0.2e1 * t180 - t215, -pkin(4) * t17 + qJ(5) * t16 + t309 * t45 - t42 * t55 - t58 * t89, -t358, -t389, t382, t358, -t381, t191, -t156 * t191 + t177 * t335 - t237 * t69 - t2 + t398, t157 * t191 - t177 * t336 - t69 * t84 - t373, t156 * t25 - t157 * t26 + (-t336 + t7) * t237 + (-t335 - t8) * t84, t1 * t157 + t2 * t156 + t335 * t7 + t336 * t8 - t40 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191 + t324, t68, -t185 ^ 2 - t368, t354 + t383, 0, 0, 0, 0, 0, 0, -t146 * t237 - t191 * t204 - t200 * t256, -t146 * t84 + t191 * t200 - t204 * t256, t200 * t381 + t204 * t382, -t40 * t146 + t384 * t204 + (t1 - t360) * t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, t389, -t382, -t358, t381, -t191, t384 - t398, t360 + t373, 0, 0;];
tauc_reg  = t3;
