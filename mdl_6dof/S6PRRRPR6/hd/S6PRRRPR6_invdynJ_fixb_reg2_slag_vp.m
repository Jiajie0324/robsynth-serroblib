% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRPR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:37:02
% EndTime: 2019-03-08 23:37:18
% DurationCPUTime: 10.82s
% Computational Cost: add. (8660->726), mult. (19557->936), div. (0->0), fcn. (15009->12), ass. (0->336)
t275 = sin(qJ(4));
t279 = cos(qJ(4));
t276 = sin(qJ(3));
t400 = t276 * qJDD(2);
t280 = cos(qJ(3));
t415 = qJD(2) * t280;
t410 = qJD(4) * t276;
t510 = qJD(2) * t410 - qJDD(3);
t101 = t275 * (qJD(3) * (qJD(4) + t415) + t400) + t510 * t279;
t402 = qJD(2) * qJD(3);
t368 = t280 * t402;
t404 = t279 * qJD(3);
t100 = -qJD(4) * t404 + (-t368 - t400) * t279 + t510 * t275;
t414 = qJD(3) * t275;
t417 = qJD(2) * t276;
t201 = t279 * t417 + t414;
t277 = sin(qJ(2));
t272 = sin(pkin(6));
t419 = qJD(1) * t272;
t386 = t277 * t419;
t209 = qJD(2) * pkin(8) + t386;
t273 = cos(pkin(6));
t401 = qJDD(1) * t273;
t412 = qJD(3) * t280;
t281 = cos(qJ(2));
t403 = qJD(1) * qJD(2);
t370 = t281 * t403;
t418 = qJD(1) * t273;
t453 = qJDD(2) * pkin(8);
t511 = t453 + (qJDD(1) * t277 + t370) * t272 + qJD(3) * t418;
t354 = t209 * t412 + t276 * t511 - t280 * t401;
t311 = qJDD(3) * pkin(3) - t354;
t290 = -qJ(5) * t100 + qJD(5) * t201 + t311;
t487 = pkin(4) + pkin(5);
t13 = -t101 * t487 + t290;
t458 = cos(pkin(11));
t362 = t458 * t277;
t271 = sin(pkin(11));
t438 = t271 * t281;
t182 = t273 * t362 + t438;
t363 = t272 * t458;
t120 = -t182 * t276 - t280 * t363;
t361 = t458 * t281;
t439 = t271 * t277;
t184 = -t273 * t439 + t361;
t436 = t272 * t280;
t122 = -t184 * t276 + t271 * t436;
t437 = t272 * t277;
t187 = -t273 * t280 + t276 * t437;
t306 = g(1) * t122 + g(2) * t120 - g(3) * t187;
t522 = t13 - t306;
t384 = t276 * t418;
t147 = t209 * t280 + t384;
t135 = qJD(3) * pkin(9) + t147;
t481 = pkin(3) * t280;
t217 = -pkin(9) * t276 - pkin(2) - t481;
t385 = t281 * t419;
t149 = qJD(2) * t217 - t385;
t63 = -t275 * t135 + t279 * t149;
t427 = qJD(5) - t63;
t347 = pkin(3) * t276 - pkin(9) * t280;
t208 = t347 * qJD(3);
t429 = t279 * t280;
t258 = pkin(8) * t429;
t435 = t272 * t281;
t397 = t275 * t435;
t355 = t280 * t397;
t411 = qJD(4) * t275;
t500 = -qJD(1) * t355 + qJD(4) * t258 + t217 * t411 + (-t208 + t386) * t279;
t428 = t280 * t281;
t152 = (t275 * t277 + t279 * t428) * t272;
t409 = qJD(4) * t279;
t521 = -qJD(1) * t152 + t275 * t208 + t217 * t409;
t255 = -qJD(4) + t415;
t440 = t201 * t255;
t199 = t275 * t417 - t404;
t442 = t199 * t255;
t520 = t275 * (t101 - t440) + t279 * (t100 - t442);
t378 = t275 * t410;
t479 = pkin(8) * t275;
t388 = -pkin(4) - t479;
t399 = pkin(10) * t429;
t519 = pkin(10) * t378 + (-t399 + (-pkin(5) + t388) * t276) * qJD(3) + t500;
t413 = qJD(3) * t276;
t262 = qJ(5) * t413;
t430 = t276 * t279;
t518 = -t262 - (-pkin(8) * qJD(3) + pkin(10) * qJD(4)) * t430 - (-qJD(5) + (-pkin(8) * qJD(4) + pkin(10) * qJD(3)) * t275) * t280 - t521;
t381 = t275 * t415;
t486 = pkin(9) - pkin(10);
t195 = t276 * t209;
t146 = t280 * t418 - t195;
t205 = t347 * qJD(2);
t94 = t279 * t146 + t275 * t205;
t78 = qJ(5) * t417 + t94;
t517 = pkin(10) * t381 + t486 * t411 + t78;
t233 = t486 * t279;
t93 = -t275 * t146 + t205 * t279;
t516 = qJD(4) * t233 - (-t276 * t487 - t399) * qJD(2) + t93;
t274 = sin(qJ(6));
t278 = cos(qJ(6));
t111 = t199 * t274 + t201 * t278;
t330 = -t278 * t199 + t201 * t274;
t449 = t111 * t330;
t515 = -pkin(10) * t201 + t427;
t512 = t101 + t440;
t509 = t111 ^ 2 - t330 ^ 2;
t243 = qJD(6) + t255;
t25 = qJD(6) * t111 - t100 * t274 - t278 * t101;
t503 = t111 * t243 - t25;
t348 = qJD(3) * pkin(3) + t146;
t304 = qJ(5) * t201 + t348;
t41 = -t199 * t487 + t304;
t188 = t273 * t276 + t277 * t436;
t128 = t188 * t275 + t279 * t435;
t129 = t188 * t279 - t397;
t44 = t128 * t278 - t129 * t274;
t121 = t182 * t280 - t276 * t363;
t181 = -t273 * t361 + t439;
t71 = t121 * t275 - t181 * t279;
t72 = t121 * t279 + t181 * t275;
t123 = t271 * t272 * t276 + t184 * t280;
t183 = t273 * t438 + t362;
t73 = t123 * t275 - t183 * t279;
t74 = t123 * t279 + t183 * t275;
t508 = -t41 * t111 + g(1) * (t274 * t74 - t278 * t73) + g(2) * (t274 * t72 - t278 * t71) - g(3) * t44;
t451 = t101 * t279;
t452 = t100 * t275;
t507 = t276 * ((t199 * t275 - t201 * t279) * qJD(4) - t451 + t452) - (t199 * t279 + t201 * t275) * t412;
t28 = t255 * t487 + t515;
t241 = t255 * qJ(5);
t64 = t135 * t279 + t149 * t275;
t40 = pkin(10) * t199 + t64;
t31 = -t241 + t40;
t16 = t274 * t28 + t278 * t31;
t265 = t280 * qJDD(2);
t197 = t276 * t402 + qJDD(4) - t265;
t393 = -t276 * t401 - t280 * t511;
t58 = -t209 * t413 - t393;
t51 = qJDD(3) * pkin(9) + t58;
t371 = t277 * t403;
t234 = t272 * t371;
t340 = -qJDD(1) * t435 + t234;
t84 = qJD(2) * t208 + qJDD(2) * t217 + t340;
t357 = t135 * t409 + t149 * t411 + t275 * t51 - t279 * t84;
t332 = qJDD(5) + t357;
t5 = pkin(10) * t100 - t197 * t487 + t332;
t17 = -t135 * t411 + t149 * t409 + t275 * t84 + t279 * t51;
t191 = t197 * qJ(5);
t239 = t255 * qJD(5);
t12 = t17 + t191 - t239;
t7 = pkin(10) * t101 + t12;
t2 = -qJD(6) * t16 - t274 * t7 + t278 * t5;
t505 = t16 * t243 + t2;
t405 = qJD(6) * t278;
t406 = qJD(6) * t274;
t24 = t278 * t100 - t274 * t101 - t199 * t405 + t201 * t406;
t504 = -t330 * t243 + t24;
t460 = (-t276 * t404 - t280 * t411) * pkin(8) + t521;
t501 = -t275 * t405 + t278 * t411 + t279 * t406;
t380 = t275 * t412;
t499 = t276 * t409 + t380;
t498 = qJD(5) * t275 + t384;
t203 = t274 * t275 + t278 * t279;
t497 = t203 * qJD(6) - t274 * t411 - t278 * t409;
t478 = pkin(9) * t197;
t67 = pkin(4) * t199 - t304;
t496 = t255 * t67 + t478;
t456 = qJ(5) * t275;
t495 = -t279 * t487 - t456;
t315 = t197 * t279 + t255 * t411;
t431 = t275 * t280;
t494 = qJD(2) * (-t199 * t276 + t255 * t431) - t315;
t316 = t197 * t275 - t255 * t409;
t491 = t276 * (-qJD(3) * t199 - t316) + t280 * (t255 * t414 + t101);
t319 = -t274 * t5 - t278 * t7 - t28 * t405 + t31 * t406;
t45 = t128 * t274 + t129 * t278;
t489 = g(1) * (t274 * t73 + t278 * t74) + g(2) * (t274 * t71 + t278 * t72) + t330 * t41 + t319 + g(3) * t45;
t488 = t201 ^ 2;
t257 = pkin(8) * t431;
t267 = t280 * pkin(4);
t102 = pkin(5) * t280 + t257 + t267 + (-pkin(10) * t276 - t217) * t279;
t156 = t275 * t217 + t258;
t140 = -qJ(5) * t280 + t156;
t433 = t275 * t276;
t112 = pkin(10) * t433 + t140;
t33 = t102 * t278 - t112 * t274;
t483 = qJD(6) * t33 + t274 * t519 - t518 * t278;
t34 = t102 * t274 + t112 * t278;
t482 = -qJD(6) * t34 + t518 * t274 + t278 * t519;
t480 = pkin(4) * t197;
t477 = pkin(9) * t201;
t232 = t486 * t275;
t138 = t232 * t278 - t233 * t274;
t473 = qJD(6) * t138 + t274 * t516 - t278 * t517;
t139 = t232 * t274 + t233 * t278;
t472 = -qJD(6) * t139 + t274 * t517 + t278 * t516;
t471 = qJD(2) * pkin(2);
t15 = -t274 * t31 + t278 * t28;
t470 = t15 * t243;
t46 = -t241 + t64;
t468 = t255 * t46;
t467 = t255 * t64;
t455 = qJ(5) * t279;
t318 = -t275 * t487 + t455;
t466 = qJD(4) * t318 - (qJD(2) * t318 - t209) * t280 + t498;
t211 = -qJ(5) * t274 - t278 * t487;
t465 = qJD(6) * t211 - t274 * t40 + t278 * t515;
t212 = qJ(5) * t278 - t274 * t487;
t464 = -qJD(6) * t212 - t274 * t515 - t278 * t40;
t341 = pkin(4) * t275 - t455;
t463 = qJD(4) * t341 - (qJD(2) * t341 + t209) * t280 - t498;
t462 = -qJD(5) * t280 + t262 + t460;
t461 = t388 * t413 + t500;
t459 = t413 * t479 - t500;
t457 = qJ(5) * t199;
t454 = qJDD(2) * pkin(2);
t447 = t120 * t279;
t446 = t122 * t279;
t445 = t181 * t276;
t444 = t183 * t276;
t443 = t187 * t279;
t441 = t201 * t199;
t434 = t274 * t279;
t432 = t275 * t278;
t426 = qJDD(1) - g(3);
t425 = t203 * t415 + t497;
t424 = t274 * t409 + t278 * t381 - t415 * t434 - t501;
t422 = pkin(2) * t435 + pkin(8) * t437;
t269 = t276 ^ 2;
t270 = t280 ^ 2;
t421 = t269 - t270;
t420 = t269 + t270;
t416 = qJD(2) * t277;
t407 = qJD(5) * t279;
t398 = t276 * t435;
t284 = qJD(2) ^ 2;
t396 = t276 * t284 * t280;
t113 = t120 * pkin(3);
t395 = pkin(4) * t447 + t120 * t456 + t113;
t114 = t122 * pkin(3);
t394 = pkin(4) * t446 + t122 * t456 + t114;
t179 = t187 * pkin(3);
t392 = -pkin(4) * t443 - t187 * t456 - t179;
t176 = t181 * pkin(2);
t391 = -pkin(9) * t445 - t181 * t481 - t176;
t177 = t183 * pkin(2);
t390 = -pkin(9) * t444 - t183 * t481 - t177;
t389 = -g(1) * t444 - g(2) * t445 + g(3) * t398;
t383 = t272 * t416;
t382 = qJD(2) * t435;
t379 = t280 * t404;
t375 = t255 * t417;
t372 = t199 ^ 2 - t488;
t367 = t281 * t402;
t365 = -t71 * pkin(4) + qJ(5) * t72;
t364 = -t73 * pkin(4) + qJ(5) * t74;
t359 = -t128 * pkin(4) + qJ(5) * t129;
t155 = t217 * t279 - t257;
t358 = t243 ^ 2;
t353 = t272 * pkin(3) * t428 + pkin(9) * t398 + t422;
t352 = t199 * t385;
t351 = t201 * t385;
t350 = t276 * t385;
t349 = t276 * t368;
t346 = g(1) * t183 + g(2) * t181;
t345 = g(1) * t184 + g(2) * t182;
t342 = pkin(4) * t279 + t456;
t43 = pkin(4) * t255 + t427;
t335 = -t275 * t46 + t279 * t43;
t334 = -t275 * t64 - t279 * t63;
t333 = (qJD(4) * t199 - t100) * pkin(9);
t327 = -t432 + t434;
t324 = qJDD(2) * t281 - t277 * t284;
t307 = -pkin(8) + t318;
t323 = (qJD(4) * t495 + t407) * t276 + t307 * t412 + t350;
t322 = pkin(8) + t341;
t153 = t340 - t454;
t283 = qJD(3) ^ 2;
t320 = -pkin(8) * t283 - t153 + t454;
t314 = -g(1) * t73 - g(2) * t71 - g(3) * t128;
t151 = -t279 * t437 + t355;
t88 = -t181 * t431 - t182 * t279;
t90 = -t183 * t431 - t184 * t279;
t313 = g(1) * t90 + g(2) * t88 + g(3) * t151;
t89 = -t181 * t429 + t182 * t275;
t91 = -t183 * t429 + t184 * t275;
t312 = -g(1) * t91 - g(2) * t89 - g(3) * t152;
t125 = -qJD(3) * t187 + t280 * t382;
t36 = -qJD(4) * t397 + t125 * t275 + t188 * t409 - t279 * t383;
t37 = -qJD(4) * t128 + t125 * t279 + t275 * t383;
t310 = -t100 * t128 - t129 * t101 - t37 * t199 + t201 * t36;
t126 = qJD(3) * t188 + t276 * t382;
t309 = t187 * t101 + t126 * t199 - t128 * t197 + t255 * t36;
t305 = g(1) * t123 + g(2) * t121 + g(3) * t188;
t302 = t152 * pkin(4) + qJ(5) * t151 + t353;
t301 = -pkin(9) * t451 - t305;
t300 = t255 * t348 - t478;
t299 = t89 * pkin(4) + pkin(8) * t182 + qJ(5) * t88 + t391;
t298 = t91 * pkin(4) + pkin(8) * t184 + qJ(5) * t90 + t390;
t296 = -t275 * t442 - t451;
t295 = t100 * t187 - t126 * t201 + t129 * t197 - t255 * t37;
t294 = pkin(9) * qJD(4) * t255 - t306;
t293 = -t314 - t357;
t19 = pkin(4) * t101 - t290;
t292 = -t19 + t294;
t291 = t294 + t311;
t210 = -t385 - t471;
t289 = -pkin(8) * qJDD(3) + (t210 + t385 - t471) * qJD(3);
t288 = t101 * t433 + t199 * t499;
t287 = t201 * t67 + qJDD(5) - t293;
t286 = g(1) * t74 + g(2) * t72 + g(3) * t129 - t255 * t63 - t17;
t285 = t354 * t276 + t58 * t280 + (-t146 * t280 - t147 * t276) * qJD(3) - t345;
t213 = -pkin(3) - t342;
t196 = pkin(3) - t495;
t192 = -qJDD(6) + t197;
t175 = t203 * t276;
t174 = t274 * t430 - t276 * t432;
t171 = t322 * t276;
t141 = -t155 + t267;
t137 = t307 * t276;
t127 = -t197 * t280 - t255 * t413;
t119 = pkin(4) * t201 + t457;
t85 = -t201 * t487 - t457;
t81 = (qJD(4) * t342 - t407) * t276 + t322 * t412;
t80 = -pkin(4) * t417 - t93;
t61 = -t100 - t442;
t55 = (-t201 * t276 + t255 * t429) * qJD(2) + t316;
t54 = t274 * t379 + t276 * t497 - t278 * t380;
t53 = -t274 * t499 + t276 * t501 - t278 * t379;
t32 = -t279 * t440 - t452;
t30 = -t100 * t430 + (-t378 + t379) * t201;
t26 = (-t255 * t404 + t100) * t280 + (qJD(3) * t201 + t315) * t276;
t14 = t332 - t480;
t11 = qJD(6) * t44 + t274 * t36 + t278 * t37;
t10 = -qJD(6) * t45 - t274 * t37 + t278 * t36;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t426, 0, 0, 0, 0, 0, 0, t324 * t272 (-qJDD(2) * t277 - t281 * t284) * t272, 0, -g(3) + (t273 ^ 2 + (t277 ^ 2 + t281 ^ 2) * t272 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t126 - qJDD(3) * t187 + (-t276 * t367 + t280 * t324) * t272, -qJD(3) * t125 - qJDD(3) * t188 + (-t276 * t324 - t280 * t367) * t272 (t187 * t276 + t188 * t280) * qJDD(2) + (t125 * t280 + t126 * t276 + (t187 * t280 - t188 * t276) * qJD(3)) * qJD(2), t125 * t147 - t126 * t146 + t187 * t354 + t188 * t58 - g(3) + (-t153 * t281 + t210 * t416) * t272, 0, 0, 0, 0, 0, 0, t309, -t295, t310, -t126 * t348 + t128 * t357 + t129 * t17 - t187 * t311 - t36 * t63 + t37 * t64 - g(3), 0, 0, 0, 0, 0, 0, t309, t310, t295, t12 * t129 + t126 * t67 + t128 * t14 + t187 * t19 + t36 * t43 + t37 * t46 - g(3), 0, 0, 0, 0, 0, 0, t10 * t243 - t126 * t330 - t187 * t25 - t192 * t44, -t11 * t243 - t111 * t126 + t187 * t24 + t192 * t45, -t10 * t111 - t11 * t330 + t24 * t44 - t25 * t45, t10 * t15 + t11 * t16 - t126 * t41 - t13 * t187 + t2 * t44 - t319 * t45 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t426 * t435 + t346, -t426 * t437 + t345, 0, 0, qJDD(2) * t269 + 0.2e1 * t349, 0.2e1 * t265 * t276 - 0.2e1 * t402 * t421, qJDD(3) * t276 + t280 * t283, qJDD(2) * t270 - 0.2e1 * t349, qJDD(3) * t280 - t276 * t283, 0, t289 * t276 + ((-g(3) * t281 + t371) * t272 + t320 + t346) * t280, t289 * t280 + (-t320 - t234) * t276 + t389, t420 * t453 + (-g(3) * t277 - t370 * t420) * t272 + t285, -t153 * pkin(2) + g(1) * t177 + g(2) * t176 - g(3) * t422 + (-t210 * t277 + (t146 * t276 - t147 * t280) * t281) * t419 + t285 * pkin(8), t30, t507, t26, t288, t491, t127, t155 * t197 - t459 * t255 + (t357 + (pkin(8) * t199 - t275 * t348) * qJD(3)) * t280 + (pkin(8) * t101 + qJD(3) * t63 - t275 * t311 - t348 * t409 - t352) * t276 + t312, -t156 * t197 + t460 * t255 + (t17 + (pkin(8) * t201 - t279 * t348) * qJD(3)) * t280 + (-pkin(8) * t100 - qJD(3) * t64 - t279 * t311 + t348 * t411 - t351) * t276 + t313, t100 * t155 - t101 * t156 - t459 * t201 - t460 * t199 + t334 * t412 + (-t17 * t275 + t357 * t279 + (t275 * t63 - t279 * t64) * qJD(4)) * t276 - t389, t17 * t156 - t357 * t155 + t348 * t350 - g(1) * t390 - g(2) * t391 - g(3) * t353 + t460 * t64 + t459 * t63 + (-t276 * t311 - t348 * t412 - t345) * pkin(8), t30, t26, -t507, t127, -t491, t288, t101 * t171 - t141 * t197 + t199 * t81 + (t414 * t67 + t14) * t280 + t461 * t255 + (-qJD(3) * t43 + t19 * t275 + t409 * t67 - t352) * t276 + t312, -t100 * t141 - t101 * t140 + t461 * t201 - t462 * t199 + t335 * t412 + (-t12 * t275 + t14 * t279 + (-t275 * t43 - t279 * t46) * qJD(4)) * t276 - t389, t100 * t171 + t140 * t197 - t201 * t81 + (-t404 * t67 - t12) * t280 - t462 * t255 + (qJD(3) * t46 - t19 * t279 + t411 * t67 + t351) * t276 - t313, t12 * t140 + t19 * t171 + t14 * t141 - g(1) * t298 - g(2) * t299 - g(3) * t302 + (t81 - t350) * t67 + t462 * t46 + t461 * t43, -t111 * t53 - t175 * t24, -t111 * t54 + t174 * t24 - t175 * t25 + t330 * t53, -t111 * t413 - t175 * t192 - t24 * t280 - t243 * t53, t174 * t25 + t330 * t54, t174 * t192 - t243 * t54 - t25 * t280 + t330 * t413, -t192 * t280 - t243 * t413, -t33 * t192 + t2 * t280 - t15 * t413 + t137 * t25 + t13 * t174 + t41 * t54 - g(1) * (t274 * t90 + t278 * t91) - g(2) * (t274 * t88 + t278 * t89) - g(3) * (t151 * t274 + t152 * t278) + t482 * t243 + t323 * t330, t34 * t192 + t319 * t280 + t16 * t413 - t137 * t24 + t13 * t175 - t41 * t53 - g(1) * (-t274 * t91 + t278 * t90) - g(2) * (-t274 * t89 + t278 * t88) - g(3) * (t151 * t278 - t152 * t274) - t483 * t243 + t323 * t111, -t111 * t482 + t15 * t53 - t16 * t54 + t174 * t319 - t175 * t2 + t24 * t33 - t25 * t34 - t330 * t483 + t389, -t319 * t34 + t2 * t33 + t13 * t137 - g(1) * (pkin(5) * t91 + pkin(10) * t444 + t298) - g(2) * (pkin(5) * t89 + pkin(10) * t445 + t299) - g(3) * (pkin(5) * t152 - pkin(10) * t398 + t302) + t323 * t41 + t483 * t16 + t482 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t396, t421 * t284, t400, t396, t265, qJDD(3), qJD(3) * t147 - t210 * t417 - t306 - t354, -t210 * t415 + (t146 + t195) * qJD(3) + t305 + t393, 0, 0, t32, -t520, t55, t296, -t494, t375, -pkin(3) * t101 - t147 * t199 + t255 * t93 + t275 * t300 + t279 * t291 - t417 * t63, pkin(3) * t100 - t147 * t201 - t255 * t94 - t275 * t291 + t279 * t300 + t417 * t64, t199 * t94 + t201 * t93 + (t63 * t415 + t17 + (-t63 + t477) * qJD(4)) * t279 + (t357 + t333 + t467) * t275 + t301, t311 * pkin(3) - g(1) * t114 - g(2) * t113 + g(3) * t179 + t348 * t147 - t63 * t93 - t64 * t94 + (qJD(4) * t334 + t17 * t279 + t275 * t357 - t305) * pkin(9), t32, t55, t520, t375, t494, t296, t101 * t213 + t463 * t199 - t255 * t80 - t275 * t496 + t292 * t279 + t43 * t417, t199 * t78 - t201 * t80 + (-t43 * t415 + t12 + (t43 + t477) * qJD(4)) * t279 + (t14 + t333 + t468) * t275 + t301, t100 * t213 - t463 * t201 + t255 * t78 + t292 * t275 + t279 * t496 - t46 * t417, t19 * t213 - t46 * t78 - t43 * t80 - g(1) * t394 - g(2) * t395 - g(3) * t392 + t463 * t67 + (qJD(4) * t335 + t12 * t279 + t14 * t275 - t305) * pkin(9), -t111 * t425 + t24 * t327, -t111 * t424 + t203 * t24 + t25 * t327 + t330 * t425, t111 * t417 + t192 * t327 - t243 * t425, t203 * t25 + t330 * t424, t192 * t203 - t243 * t424 - t330 * t417, t243 * t417, -t138 * t192 + t15 * t417 + t196 * t25 + t203 * t522 + t243 * t472 + t330 * t466 + t41 * t424, t111 * t466 + t139 * t192 - t16 * t417 - t196 * t24 - t243 * t473 - t327 * t522 - t41 * t425, -t111 * t472 + t138 * t24 - t139 * t25 + t15 * t425 - t16 * t424 + t2 * t327 + t203 * t319 - t330 * t473 + t305, -t319 * t139 + t2 * t138 + t13 * t196 - g(1) * (pkin(5) * t446 + t123 * t486 + t394) - g(2) * (pkin(5) * t447 + t121 * t486 + t395) - g(3) * (-pkin(5) * t443 + t188 * t486 + t392) + t466 * t41 + t473 * t16 + t472 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t372, t61, -t441, -t512, t197, t201 * t348 + t293 - t467, -t199 * t348 + t286, 0, 0, t441, t61, t372, t197, t512, -t441, -t119 * t199 - t287 - t467 + 0.2e1 * t480, pkin(4) * t100 - qJ(5) * t101 + (t46 - t64) * t201 + (t43 - t427) * t199, t119 * t201 - t199 * t67 + 0.2e1 * t191 - 0.2e1 * t239 - t286, -t14 * pkin(4) - g(1) * t364 - g(2) * t365 - g(3) * t359 + t12 * qJ(5) - t67 * t119 + t427 * t46 - t43 * t64, -t449, -t509, t504, t449, -t503, t192, -t211 * t192 + t243 * t464 - t330 * t85 - t2 - t508, -t85 * t111 + t212 * t192 - t243 * t465 - t489, t211 * t24 - t212 * t25 + (t15 - t465) * t330 + (-t16 - t464) * t111, -t319 * t212 + t2 * t211 - t41 * t85 - g(1) * (-pkin(5) * t73 + t364) - g(2) * (-pkin(5) * t71 + t365) - g(3) * (-pkin(5) * t128 + t359) + t465 * t16 + t464 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197 + t441, t61, -t255 ^ 2 - t488, t287 + t468 - t480, 0, 0, 0, 0, 0, 0, -t192 * t278 - t201 * t330 - t274 * t358, -t111 * t201 + t192 * t274 - t278 * t358, t274 * t503 + t278 * t504, -t41 * t201 + t505 * t278 + (-t319 - t470) * t274 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, t509, -t504, -t449, t503, -t192, t505 + t508, t470 + t489, 0, 0;];
tau_reg  = t1;
