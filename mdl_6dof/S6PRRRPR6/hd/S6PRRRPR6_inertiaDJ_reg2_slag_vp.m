% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:36:46
% EndTime: 2019-03-08 23:36:57
% DurationCPUTime: 4.29s
% Computational Cost: add. (3064->362), mult. (7930->633), div. (0->0), fcn. (7090->10), ass. (0->186)
t119 = sin(qJ(4));
t122 = cos(qJ(4));
t112 = qJD(4) * t122;
t118 = sin(pkin(6));
t121 = sin(qJ(2));
t212 = qJD(2) * t121;
t187 = t118 * t212;
t124 = cos(qJ(2));
t220 = t118 * t124;
t194 = t119 * t220;
t123 = cos(qJ(3));
t211 = qJD(2) * t124;
t186 = t118 * t211;
t120 = sin(qJ(3));
t221 = t118 * t121;
t223 = cos(pkin(6));
t64 = t120 * t221 - t123 * t223;
t37 = -qJD(3) * t64 + t123 * t186;
t65 = t120 * t223 + t123 * t221;
t14 = -qJD(4) * t194 + t112 * t65 + t37 * t119 - t122 * t187;
t39 = t65 * t119 + t122 * t220;
t15 = -qJD(4) * t39 + t119 * t187 + t37 * t122;
t40 = t65 * t122 - t194;
t156 = -t119 * t40 + t122 * t39;
t138 = qJD(4) * t156 + t14 * t119 + t15 * t122;
t234 = sin(qJ(6));
t177 = qJD(4) * t234;
t235 = cos(qJ(6));
t178 = qJD(4) * t235;
t243 = t119 * t178 - t122 * t177;
t209 = qJD(3) * t123;
t68 = t120 * t112 + t119 * t209;
t114 = t119 ^ 2;
t116 = t122 ^ 2;
t214 = t114 - t116;
t193 = t235 * t119;
t80 = -t234 * t122 + t193;
t86 = t214 * qJD(4);
t164 = t122 * t178;
t79 = t119 * t234 + t122 * t235;
t35 = t79 * qJD(6) - t119 * t177 - t164;
t175 = qJD(6) * t234;
t176 = qJD(6) * t235;
t36 = t119 * t176 - t122 * t175 - t243;
t229 = t123 * pkin(3);
t231 = t120 * pkin(9);
t161 = -t229 - t231;
t151 = -pkin(2) + t161;
t145 = t122 * t151;
t233 = pkin(9) * t123;
t160 = pkin(3) * t120 - t233;
t146 = t160 * qJD(3);
t227 = qJD(4) * t145 + t119 * t146;
t205 = qJD(4) * t123;
t190 = t119 * t205;
t210 = qJD(3) * t122;
t67 = t120 * t210 + t190;
t28 = pkin(8) * t67 - t227;
t236 = pkin(9) - pkin(10);
t242 = t120 * t236 + pkin(2);
t219 = t119 * qJ(5);
t237 = pkin(4) + pkin(5);
t241 = -t237 * t122 - t219;
t222 = qJ(5) * t122;
t157 = pkin(4) * t119 - t222;
t149 = pkin(8) + t157;
t58 = t149 * t120;
t204 = t119 * qJD(5);
t63 = qJD(4) * t157 - t204;
t158 = t122 * pkin(4) + t219;
t83 = -pkin(3) - t158;
t240 = qJD(3) * (-t123 * t83 + t231) - qJD(4) * t58 - t120 * t63;
t203 = t122 * qJD(5);
t239 = qJD(4) * t158 - t203;
t215 = t122 * t123;
t108 = pkin(8) * t215;
t224 = t119 * t151 + t108;
t113 = qJD(3) * t120;
t185 = t119 * t113;
t226 = pkin(8) * t185 + t122 * t146;
t29 = -qJD(4) * t224 + t226;
t238 = 0.2e1 * qJD(5);
t232 = t119 * pkin(8);
t230 = t122 * pkin(3);
t38 = qJD(3) * t65 + t120 * t186;
t228 = t64 * t38;
t225 = t38 * t120;
t218 = t119 * t120;
t217 = t119 * t123;
t216 = t120 * t122;
t115 = t120 ^ 2;
t213 = -t123 ^ 2 + t115;
t208 = qJD(3) * t124;
t207 = qJD(4) * t119;
t206 = qJD(4) * t120;
t202 = t123 * qJD(5);
t201 = -0.2e1 * pkin(2) * qJD(3);
t200 = -0.2e1 * pkin(3) * qJD(4);
t199 = pkin(8) * t217;
t198 = pkin(4) * t113;
t197 = pkin(9) * t207;
t196 = pkin(9) * t112;
t195 = pkin(8) * t209;
t191 = qJ(5) * t113;
t188 = t122 * t205;
t183 = t119 * t112;
t182 = t120 * t209;
t181 = t122 * t209;
t180 = qJD(3) * t235;
t179 = qJD(3) * t234;
t174 = t213 * qJD(3);
t173 = 0.2e1 * t182;
t172 = t236 * t234;
t171 = t235 * t237;
t170 = t119 * t181;
t169 = t115 * t183;
t168 = t123 * t180;
t167 = t123 * t179;
t48 = -t123 * qJ(5) + t224;
t150 = pkin(4) + t230 + t232;
t50 = -t122 * (-pkin(2) - t231) + t150 * t123;
t155 = -t119 * t48 + t122 * t50;
t56 = t145 - t199;
t154 = -t119 * t224 - t122 * t56;
t152 = t236 * t193;
t148 = 0.2e1 * t39 * t14 + 0.2e1 * t40 * t15 + 0.2e1 * t228;
t25 = -t38 * t122 + t207 * t64;
t147 = -t237 * t119 + t222;
t144 = -pkin(8) + t147;
t17 = t234 * t39 + t235 * t40;
t16 = -t234 * t40 + t235 * t39;
t126 = (t108 + (-t229 - t242) * t119) * qJD(4) + (-pkin(10) * t215 - t237 * t120) * qJD(3) - t226;
t127 = -t202 + (pkin(10) * t216 - t199) * qJD(4) + (pkin(10) * t217 + (-t122 * pkin(8) + qJ(5)) * t120) * qJD(3) + t227;
t131 = t242 * t122 + (pkin(5) + t150) * t123;
t130 = t235 * t131;
t34 = pkin(10) * t218 + t48;
t1 = -qJD(6) * t130 - t234 * t126 - t235 * t127 + t175 * t34;
t82 = t235 * qJ(5) - t234 * t237;
t143 = -t113 * t39 + t14 * t123 + t38 * t218 + t68 * t64;
t23 = -t28 + t191 - t202;
t26 = -t198 - t29;
t135 = qJD(4) * t155 + t26 * t119 + t23 * t122;
t134 = qJD(4) * t154 - t29 * t119 - t28 * t122;
t133 = t225 + t37 * t123 + (-t120 * t65 + t123 * t64) * qJD(3);
t132 = t138 * pkin(9);
t129 = t234 * t131;
t13 = t235 * t34 + t129;
t128 = t156 * t209 + (-t119 * t15 + t122 * t14 + (-t119 * t39 - t122 * t40) * qJD(4)) * t120;
t125 = t126 * t235 - t127 * t234;
t101 = -0.2e1 * t182;
t100 = -0.2e1 * t183;
t99 = 0.2e1 * t183;
t98 = pkin(9) * t188;
t95 = t236 * t122;
t81 = -qJ(5) * t234 - t171;
t76 = pkin(3) - t241;
t69 = t185 - t188;
t66 = -t119 * t206 + t181;
t62 = t79 * t120;
t61 = t80 * t120;
t60 = qJD(5) * t234 + qJD(6) * t82;
t59 = qJ(5) * t175 - qJD(5) * t235 + qJD(6) * t171;
t55 = qJD(4) * t147 + t204;
t54 = 0.2e1 * t116 * t182 - 0.2e1 * t169;
t53 = 0.2e1 * t114 * t182 + 0.2e1 * t169;
t49 = t214 * t206 - t170;
t47 = -t119 * t174 + t120 * t188;
t46 = 0.4e1 * t120 * t183 + t209 * t214;
t45 = t119 * t172 + t235 * t95;
t44 = -t234 * t95 + t152;
t43 = t144 * t120;
t42 = 0.2e1 * t120 * t190 + 0.2e1 * t210 * t213;
t41 = t115 * t86 - 0.2e1 * t120 * t170;
t27 = t239 * t120 + t149 * t209;
t24 = t112 * t64 + t38 * t119;
t22 = t95 * t176 - t236 * t164 + (qJD(6) * t172 - t177 * t236) * t119;
t21 = -qJD(6) * t152 + t95 * t175 + t243 * t236;
t20 = -t119 * t168 + t35 * t120 + t122 * t167;
t19 = -t119 * t167 - t36 * t120 - t122 * t168;
t18 = (t241 * qJD(4) + t203) * t120 + t144 * t209;
t12 = -t234 * t34 + t130;
t5 = (t210 * t64 + t15) * t123 + (-qJD(3) * t40 - t25) * t120;
t4 = qJD(6) * t16 + t14 * t234 + t15 * t235;
t3 = qJD(6) * t17 - t14 * t235 + t15 * t234;
t2 = -qJD(6) * t13 + t125;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t118 ^ 2 * t121 * t211 + 0.2e1 * t65 * t37 + 0.2e1 * t228, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t16 * t3 + 0.2e1 * t17 * t4 + 0.2e1 * t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187, -t186, 0, 0, 0, 0, 0, 0, 0, 0 (-t120 * t208 - t123 * t212) * t118 (t120 * t212 - t123 * t208) * t118, t133, -pkin(2) * t187 + pkin(8) * t133, 0, 0, 0, 0, 0, 0, t143, t5, t128, -t14 * t56 + t15 * t224 - t40 * t28 - t39 * t29 + (t209 * t64 + t225) * pkin(8), 0, 0, 0, 0, 0, 0, t143, t128, -t5, t14 * t50 + t15 * t48 + t40 * t23 + t39 * t26 + t64 * t27 + t38 * t58, 0, 0, 0, 0, 0, 0, -t113 * t16 - t3 * t123 - t64 * t20 + t38 * t61, t113 * t17 - t4 * t123 + t64 * t19 - t38 * t62, t16 * t19 - t17 * t20 + t3 * t62 + t4 * t61, -t17 * t1 - t3 * t12 + t4 * t13 + t16 * t2 - t64 * t18 - t38 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, -0.2e1 * t174, 0, t101, 0, 0, t120 * t201, t123 * t201, 0, 0, t54, 0.2e1 * t41, t42, t53, 0.2e1 * t47, t101, 0.2e1 * t56 * t113 - 0.2e1 * t29 * t123 + 0.2e1 * (t112 * t115 + t119 * t173) * pkin(8), -0.2e1 * t224 * t113 - 0.2e1 * t28 * t123 + 0.2e1 * (-t115 * t207 + t122 * t173) * pkin(8), 0.2e1 * t154 * t209 + 0.2e1 * (t119 * t28 - t122 * t29 + (t119 * t56 - t122 * t224) * qJD(4)) * t120, 0.2e1 * pkin(8) ^ 2 * t182 - 0.2e1 * t224 * t28 + 0.2e1 * t56 * t29, t54, t42, -0.2e1 * t41, t101, -0.2e1 * t47, t53, 0.2e1 * (qJD(3) * t119 * t58 + t26) * t123 + 0.2e1 * (-qJD(3) * t50 + t112 * t58 + t27 * t119) * t120, 0.2e1 * t155 * t209 + 0.2e1 * (-t119 * t23 + t122 * t26 + (-t119 * t50 - t122 * t48) * qJD(4)) * t120, 0.2e1 * (-t210 * t58 - t23) * t123 + 0.2e1 * (qJD(3) * t48 - t27 * t122 + t207 * t58) * t120, 0.2e1 * t48 * t23 + 0.2e1 * t50 * t26 + 0.2e1 * t58 * t27, -0.2e1 * t62 * t19, -0.2e1 * t19 * t61 - 0.2e1 * t62 * t20, -0.2e1 * t113 * t62 - 0.2e1 * t19 * t123, -0.2e1 * t61 * t20, -0.2e1 * t113 * t61 - 0.2e1 * t20 * t123, t101, -0.2e1 * t113 * t12 + 0.2e1 * t2 * t123 - 0.2e1 * t18 * t61 + 0.2e1 * t43 * t20, 0.2e1 * t1 * t123 + 0.2e1 * t113 * t13 + 0.2e1 * t18 * t62 - 0.2e1 * t43 * t19, -0.2e1 * t1 * t61 + 0.2e1 * t12 * t19 - 0.2e1 * t13 * t20 - 0.2e1 * t2 * t62, -0.2e1 * t13 * t1 + 0.2e1 * t12 * t2 + 0.2e1 * t43 * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, -t37, 0, 0, 0, 0, 0, 0, 0, 0, t25, t24, t138, -t38 * pkin(3) + t132, 0, 0, 0, 0, 0, 0, t25, t138, -t24, t38 * t83 + t64 * t63 + t132, 0, 0, 0, 0, 0, 0, -t64 * t36 - t38 * t79, t64 * t35 - t38 * t80, t16 * t35 - t17 * t36 + t3 * t80 - t4 * t79, -t16 * t22 - t17 * t21 - t3 * t44 - t38 * t76 + t4 * t45 - t64 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, 0, -t113, 0, -t195, pkin(8) * t113, 0, 0, -t49, -t46, t69, t49, t67, 0, t98 + (-t230 + t232) * t206 + (t119 * t161 - t108) * qJD(3) (pkin(8) * t216 + t119 * t160) * qJD(4) + (t122 * t161 + t199) * qJD(3), t134, -pkin(3) * t195 + pkin(9) * t134, -t49, t69, t46, 0, -t67, t49, t98 + (t206 * t83 - t27) * t122 - t240 * t119, t135 (-t27 + (t120 * t83 + t233) * qJD(4)) * t119 + t240 * t122, pkin(9) * t135 + t27 * t83 + t58 * t63, -t19 * t80 - t62 * t35, t19 * t79 - t80 * t20 - t35 * t61 - t62 * t36, -t113 * t80 - t35 * t123, t20 * t79 - t61 * t36, t113 * t79 - t36 * t123, 0, -t113 * t44 - t22 * t123 + t18 * t79 + t76 * t20 + t43 * t36 - t55 * t61, t113 * t45 + t21 * t123 + t18 * t80 - t76 * t19 - t43 * t35 + t55 * t62, t1 * t79 + t12 * t35 - t13 * t36 + t44 * t19 - t2 * t80 - t45 * t20 - t21 * t61 + t22 * t62, -t1 * t45 - t12 * t22 - t13 * t21 + t18 * t76 + t2 * t44 + t43 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, -0.2e1 * t86, 0, t100, 0, 0, t119 * t200, t122 * t200, 0, 0, t99, 0, 0.2e1 * t86, 0, 0, t100, -0.2e1 * t63 * t122 + 0.2e1 * t207 * t83, 0, -0.2e1 * t112 * t83 - 0.2e1 * t63 * t119, 0.2e1 * t83 * t63, -0.2e1 * t80 * t35, 0.2e1 * t35 * t79 - 0.2e1 * t80 * t36, 0, 0.2e1 * t79 * t36, 0, 0, 0.2e1 * t76 * t36 + 0.2e1 * t55 * t79, -0.2e1 * t76 * t35 + 0.2e1 * t55 * t80, 0.2e1 * t21 * t79 + 0.2e1 * t22 * t80 + 0.2e1 * t44 * t35 - 0.2e1 * t45 * t36, -0.2e1 * t45 * t21 - 0.2e1 * t44 * t22 + 0.2e1 * t76 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, -t15, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, t15, -t14 * pkin(4) + t15 * qJ(5) + t40 * qJD(5), 0, 0, 0, 0, 0, 0, t3, t4, 0, -t16 * t60 - t17 * t59 - t3 * t81 + t4 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, -t68, t113, t29, t28, 0, 0, 0, t66, 0, t113, t68, 0, t29 + 0.2e1 * t198 (-pkin(4) * t209 - qJ(5) * t206) * t122 + (-qJ(5) * t209 + (pkin(4) * qJD(4) - qJD(5)) * t120) * t119, -t28 + 0.2e1 * t191 - 0.2e1 * t202, -t26 * pkin(4) + t23 * qJ(5) + t48 * qJD(5), 0, 0, t19, 0, t20, t113, qJD(6) * t129 - t113 * t81 - t60 * t123 + t176 * t34 - t125, t113 * t82 + t59 * t123 - t1, t81 * t19 - t82 * t20 - t59 * t61 + t60 * t62, -t1 * t82 - t12 * t60 - t13 * t59 + t2 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, -t207, 0, -t196, t197, 0, 0, 0, t112, 0, 0, t207, 0, -t196, -t239, -t197, -t239 * pkin(9), 0, 0, t35, 0, t36, 0, t22, -t21, t81 * t35 - t82 * t36 + t59 * t79 + t60 * t80, -t21 * t82 - t22 * t81 - t44 * t60 - t45 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, qJ(5) * t238, 0, 0, 0, 0, 0, 0, 0.2e1 * t60, -0.2e1 * t59, 0, -0.2e1 * t82 * t59 - 0.2e1 * t81 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3 * t235 + t4 * t234 + (-t16 * t234 + t17 * t235) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, t66, 0, t26, 0, 0, 0, 0, 0, 0, -t120 * t180 - t123 * t175, t120 * t179 - t123 * t176, t235 * t19 - t234 * t20 + (t234 * t62 + t235 * t61) * qJD(6), t2 * t235 - t1 * t234 + (-t12 * t234 + t13 * t235) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0, t196, 0, 0, 0, 0, 0, 0, 0, 0, t235 * t35 - t234 * t36 + (t234 * t80 - t235 * t79) * qJD(6), -t22 * t235 - t21 * t234 + (-t234 * t44 + t235 * t45) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t176, 0, -t60 * t235 - t59 * t234 + (-t234 * t81 + t235 * t82) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, 0, -t20, -t113, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, 0, -t36, 0, -t22, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, t59, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t176, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
