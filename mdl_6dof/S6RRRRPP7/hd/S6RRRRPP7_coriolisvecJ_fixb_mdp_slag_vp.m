% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,theta5]';
% MDP [30x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRPP7_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRPP7_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(30,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [30 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [30x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:26:58
% EndTime: 2019-03-09 21:27:22
% DurationCPUTime: 16.14s
% Computational Cost: add. (15715->655), mult. (40793->873), div. (0->0), fcn. (31487->10), ass. (0->259)
t678 = sin(pkin(6));
t686 = cos(qJ(2));
t759 = qJD(1) * t686;
t735 = t678 * t759;
t654 = -qJD(3) + t735;
t683 = sin(qJ(2));
t680 = cos(pkin(6));
t760 = qJD(1) * t680;
t745 = pkin(1) * t760;
t625 = pkin(8) * t735 + t683 * t745;
t682 = sin(qJ(3));
t685 = cos(qJ(3));
t830 = t625 + t654 * (pkin(3) * t682 - pkin(10) * t685);
t684 = cos(qJ(4));
t756 = qJD(3) * t682;
t681 = sin(qJ(4));
t810 = pkin(9) * t681;
t829 = -t684 * t830 + t756 * t810;
t761 = qJD(1) * t678;
t736 = t683 * t761;
t593 = t681 * t685 * t735 - t684 * t736;
t754 = qJD(3) * t685;
t824 = -t681 * t754 + t593;
t786 = t685 * t686;
t594 = (t681 * t683 + t684 * t786) * t761;
t828 = -t684 * t754 + t594;
t622 = -pkin(8) * t736 + t686 * t745;
t701 = (pkin(2) * t683 - pkin(9) * t686) * t678;
t623 = qJD(1) * t701;
t767 = t685 * t622 + t682 * t623;
t547 = pkin(10) * t736 + t767;
t653 = -pkin(3) * t685 - pkin(10) * t682 - pkin(2);
t751 = qJD(4) * t684;
t827 = t684 * t547 - t653 * t751 + t681 * t830;
t787 = t684 * t685;
t667 = pkin(9) * t787;
t713 = t682 * t735;
t750 = qJD(5) * t684;
t811 = pkin(4) * t682;
t826 = -pkin(4) * t713 + qJ(5) * t594 + t547 * t681 - t682 * t750 + (-qJ(5) * t787 + t811) * qJD(3) + (-t667 + (qJ(5) * t682 - t653) * t681) * qJD(4) + t829;
t788 = t682 * t684;
t825 = -qJ(5) * t593 - (-pkin(9) * qJD(3) - qJ(5) * qJD(4)) * t788 - (-qJD(5) * t682 + (-pkin(9) * qJD(4) - qJ(5) * qJD(3)) * t685) * t681 + t827;
t718 = qJD(2) + t760;
t606 = t682 * t718 + t685 * t736;
t561 = t606 * t681 + t684 * t654;
t563 = t606 * t684 - t654 * t681;
t677 = sin(pkin(11));
t679 = cos(pkin(11));
t504 = t679 * t561 + t563 * t677;
t822 = -t682 * t736 + t685 * t718;
t600 = qJD(4) - t822;
t823 = t504 * t600;
t638 = t677 * t684 + t679 * t681;
t629 = t638 * qJD(4);
t774 = t638 * t822 - t629;
t637 = t677 * t681 - t679 * t684;
t753 = qJD(4) * t681;
t773 = -t637 * t822 + t677 * t753 - t679 * t751;
t752 = qJD(4) * t682;
t772 = t679 * t593 + t594 * t677 + t637 * t752 - t638 * t754;
t771 = t629 * t682 - t677 * t824 + t679 * t828;
t821 = t713 - t756;
t704 = -t561 * t677 + t679 * t563;
t820 = t704 ^ 2;
t674 = t678 ^ 2;
t747 = qJD(1) * qJD(2);
t819 = -0.2e1 * t674 * t747;
t818 = MDP(5) * (t683 ^ 2 - t686 ^ 2);
t588 = pkin(9) * t718 + t625;
t619 = (-pkin(2) * t686 - pkin(9) * t683 - pkin(1)) * t678;
t599 = qJD(1) * t619;
t533 = -t682 * t588 + t599 * t685;
t523 = pkin(3) * t654 - t533;
t493 = pkin(4) * t561 + qJD(5) + t523;
t449 = pkin(5) * t504 - qJ(6) * t704 + t493;
t817 = t449 * t704;
t778 = t825 * t677 + t679 * t826;
t777 = t677 * t826 - t825 * t679;
t792 = t678 * t683;
t664 = pkin(8) * t792;
t812 = pkin(1) * t686;
t617 = t664 + (-pkin(2) - t812) * t680;
t631 = -t680 * t685 + t682 * t792;
t632 = t680 * t682 + t685 * t792;
t542 = pkin(3) * t631 - pkin(10) * t632 + t617;
t791 = t678 * t686;
t746 = pkin(8) * t791;
t813 = pkin(1) * t683;
t618 = t746 + (pkin(9) + t813) * t680;
t768 = t685 * t618 + t682 * t619;
t544 = -pkin(10) * t791 + t768;
t775 = t681 * t542 + t684 * t544;
t550 = pkin(3) * t606 - pkin(10) * t822;
t549 = t684 * t550;
t473 = -qJ(5) * t684 * t822 + pkin(4) * t606 - t533 * t681 + t549;
t776 = t684 * t533 + t681 * t550;
t798 = t822 * t681;
t484 = -qJ(5) * t798 + t776;
t809 = -qJ(5) - pkin(10);
t725 = qJD(4) * t809;
t628 = t681 * t725 + t750;
t692 = -qJD(5) * t681 + t684 * t725;
t769 = (-t473 + t692) * t679 + (t484 - t628) * t677;
t720 = -t682 * t622 + t623 * t685;
t546 = -pkin(3) * t736 - t720;
t816 = -pkin(4) * t824 + pkin(9) * t754 + t751 * t811 - t546;
t534 = t685 * t588 + t682 * t599;
t815 = -t534 + (t753 - t798) * pkin(4);
t726 = t678 * t747;
t711 = t686 * t726;
t566 = qJD(3) * t606 + t682 * t711;
t814 = t600 ^ 2;
t687 = qJD(1) ^ 2;
t587 = -pkin(2) * t718 - t622;
t519 = -pkin(3) * t822 - t606 * pkin(10) + t587;
t524 = -pkin(10) * t654 + t534;
t480 = t519 * t681 + t524 * t684;
t467 = -qJ(5) * t561 + t480;
t461 = t679 * t467;
t479 = t684 * t519 - t524 * t681;
t466 = -qJ(5) * t563 + t479;
t437 = t466 * t677 + t461;
t808 = t437 * t704;
t807 = t467 * t677;
t712 = t683 * t726;
t624 = qJD(2) * t701;
t613 = qJD(1) * t624;
t626 = (t680 * t812 - t664) * qJD(2);
t614 = qJD(1) * t626;
t715 = t588 * t754 + t599 * t756 - t685 * t613 + t682 * t614;
t492 = -pkin(3) * t712 + t715;
t806 = t492 * t681;
t805 = t492 * t684;
t565 = qJD(3) * t822 + t685 * t711;
t740 = t684 * t565 - t654 * t751 + t681 * t712;
t501 = -t606 * t753 + t740;
t804 = t501 * t681;
t803 = t561 * t600;
t802 = t563 * t600;
t801 = t566 * t681;
t800 = t566 * t684;
t799 = t822 * t654;
t797 = t606 * t654;
t796 = t654 * t682;
t795 = t654 * t685;
t794 = t674 * t687;
t789 = t681 * t682;
t697 = -t588 * t756 + t599 * t754 + t682 * t613 + t685 * t614;
t491 = pkin(10) * t712 + t697;
t627 = (t680 * t813 + t746) * qJD(2);
t615 = qJD(1) * t627;
t500 = pkin(3) * t566 - pkin(10) * t565 + t615;
t724 = -t491 * t681 + t684 * t500;
t440 = -qJD(4) * t480 + t724;
t425 = pkin(4) * t566 - qJ(5) * t501 - qJD(5) * t563 + t440;
t741 = t684 * t491 + t681 * t500 + t519 * t751;
t439 = -t524 * t753 + t741;
t722 = t565 * t681 - t684 * t712;
t502 = qJD(4) * t563 + t722;
t428 = -qJ(5) * t502 - qJD(5) * t561 + t439;
t785 = -t679 * t425 + t677 * t428;
t416 = t677 * t425 + t679 * t428;
t733 = qJD(2) * t791;
t576 = -qJD(3) * t631 + t685 * t733;
t577 = t632 * t681 + t684 * t791;
t758 = qJD(2) * t683;
t734 = t678 * t758;
t518 = -qJD(4) * t577 + t576 * t684 + t681 * t734;
t575 = qJD(3) * t632 + t682 * t733;
t743 = t681 * t791;
t578 = t632 * t684 - t743;
t696 = -t618 * t756 + t619 * t754 + t682 * t624 + t685 * t626;
t495 = pkin(10) * t734 + t696;
t511 = pkin(3) * t575 - pkin(10) * t576 + t627;
t690 = -qJD(4) * t775 - t495 * t681 + t684 * t511;
t430 = pkin(4) * t575 - qJ(5) * t518 - qJD(5) * t578 + t690;
t517 = -qJD(4) * t743 + t576 * t681 + t632 * t751 - t684 * t734;
t695 = t684 * t495 + t681 * t511 + t542 * t751 - t544 * t753;
t436 = -qJ(5) * t517 - qJD(5) * t577 + t695;
t420 = t677 * t430 + t679 * t436;
t448 = t677 * t473 + t679 * t484;
t443 = qJ(6) * t606 + t448;
t558 = t679 * t628 + t677 * t692;
t784 = -t443 + t558;
t783 = -pkin(5) * t606 + t769;
t782 = qJ(6) * t821 + qJD(6) * t685 - t777;
t781 = -pkin(5) * t821 + t778;
t780 = pkin(5) * t774 - qJ(6) * t773 + qJD(6) * t638 - t815;
t458 = pkin(4) * t600 + t466;
t435 = t677 * t458 + t461;
t621 = -t677 * t789 + t679 * t788;
t779 = pkin(5) * t772 - qJ(6) * t771 + qJD(6) * t621 - t816;
t723 = t684 * t542 - t544 * t681;
t471 = pkin(4) * t631 - qJ(5) * t578 + t723;
t481 = -qJ(5) * t577 + t775;
t446 = t677 * t471 + t679 * t481;
t640 = t684 * t653;
t570 = -qJ(5) * t788 + t640 + (-pkin(4) - t810) * t685;
t764 = t681 * t653 + t667;
t581 = -qJ(5) * t789 + t764;
t526 = t677 * t570 + t679 * t581;
t763 = pkin(4) * t789 + t682 * pkin(9);
t757 = qJD(2) * t685;
t755 = qJD(3) * t684;
t749 = qJD(6) * t600;
t438 = t466 * t679 - t807;
t748 = qJD(6) - t438;
t742 = t566 * qJ(6) + t416;
t737 = -pkin(4) * t684 - pkin(3);
t730 = t600 * t753;
t728 = t809 * t681;
t463 = t501 * t677 + t679 * t502;
t721 = -t682 * t618 + t619 * t685;
t719 = t600 * t684;
t716 = t674 * t683 * t686 * MDP(4);
t710 = MDP(15) * t736;
t414 = -pkin(5) * t566 + t785;
t709 = pkin(1) * t819;
t464 = t501 * t679 - t502 * t677;
t655 = t809 * t684;
t585 = -t655 * t677 - t679 * t728;
t586 = -t679 * t655 + t677 * t728;
t707 = -t586 * t463 + t464 * t585 - t558 * t504;
t543 = pkin(3) * t791 - t721;
t419 = t430 * t679 - t436 * t677;
t434 = t458 * t679 - t807;
t445 = t471 * t679 - t481 * t677;
t525 = t570 * t679 - t581 * t677;
t702 = -t618 * t754 - t619 * t756 + t624 * t685 - t682 * t626;
t700 = -t600 * t751 - t801;
t698 = -pkin(10) * t566 + t523 * t600;
t694 = pkin(4) * t577 + t543;
t693 = pkin(1) * (-t680 * t747 + t794);
t496 = -pkin(3) * t734 - t702;
t459 = pkin(4) * t502 + t492;
t689 = pkin(4) * t517 + t496;
t421 = pkin(5) * t463 - qJ(6) * t464 - qJD(6) * t704 + t459;
t671 = -pkin(4) * t679 - pkin(5);
t668 = pkin(4) * t677 + qJ(6);
t620 = t638 * t682;
t567 = pkin(5) * t637 - qJ(6) * t638 + t737;
t545 = pkin(5) * t620 - qJ(6) * t621 + t763;
t528 = -t577 * t677 + t578 * t679;
t527 = t679 * t577 + t578 * t677;
t521 = pkin(5) * t685 - t525;
t520 = -qJ(6) * t685 + t526;
t477 = -t517 * t677 + t518 * t679;
t475 = t679 * t517 + t518 * t677;
t457 = pkin(4) * t563 + pkin(5) * t704 + qJ(6) * t504;
t455 = pkin(5) * t527 - qJ(6) * t528 + t694;
t442 = -pkin(5) * t631 - t445;
t441 = qJ(6) * t631 + t446;
t432 = qJ(6) * t600 + t435;
t431 = -pkin(5) * t600 + qJD(6) - t434;
t422 = pkin(5) * t475 - qJ(6) * t477 - qJD(6) * t528 + t689;
t418 = -pkin(5) * t575 - t419;
t417 = qJ(6) * t575 + qJD(6) * t631 + t420;
t413 = t742 + t749;
t1 = [(-t439 * t631 - t480 * t575 + t492 * t578 + t496 * t563 + t543 * t501 + t523 * t518 - t566 * t775 - t600 * t695) * MDP(24) + (t696 * t654 + t627 * t606 + t617 * t565 + t615 * t632 + t587 * t576 + (t697 * t686 + (-qJD(1) * t768 - t534) * t758) * t678) * MDP(17) + (-t576 * t654 + (-t565 * t686 + (qJD(1) * t632 + t606) * t758) * t678) * MDP(13) + (t575 * t654 + (t566 * t686 + (-qJD(1) * t631 + t822) * t758) * t678) * MDP(14) + (-t702 * t654 - t627 * t822 + t617 * t566 + t615 * t631 + t587 * t575 + (t715 * t686 + (qJD(1) * t721 + t533) * t758) * t678) * MDP(16) + (-t565 * t631 - t566 * t632 - t575 * t606 + t576 * t822) * MDP(12) + (t416 * t446 + t434 * t419 + t435 * t420 - t445 * t785 + t459 * t694 + t493 * t689) * MDP(26) + (-t416 * t527 - t419 * t704 - t420 * t504 - t434 * t477 - t435 * t475 - t445 * t464 - t446 * t463 + t528 * t785) * MDP(25) + (MDP(6) * t733 - MDP(7) * t734) * (qJD(2) + 0.2e1 * t760) + (t413 * t631 + t417 * t600 - t421 * t528 - t422 * t704 + t432 * t575 + t441 * t566 - t449 * t477 - t455 * t464) * MDP(29) + (-t413 * t527 + t414 * t528 - t417 * t504 + t418 * t704 + t431 * t477 - t432 * t475 - t441 * t463 + t442 * t464) * MDP(28) + 0.2e1 * t716 * t747 + (-t615 * t680 - t627 * t718 + t683 * t709) * MDP(9) + (-t614 * t680 - t626 * t718 + t686 * t709) * MDP(10) + (-t654 * t678 - t674 * t759) * MDP(15) * t758 + (t565 * t632 + t576 * t606) * MDP(11) + (t501 * t631 + t518 * t600 + t563 * t575 + t566 * t578) * MDP(20) + (t566 * t631 + t575 * t600) * MDP(22) + (-t502 * t631 - t517 * t600 - t561 * t575 - t566 * t577) * MDP(21) + (-t414 * t631 - t418 * t600 + t421 * t527 + t422 * t504 - t431 * t575 - t442 * t566 + t449 * t475 + t455 * t463) * MDP(27) + (-t501 * t577 - t502 * t578 - t517 * t563 - t518 * t561) * MDP(19) + (t501 * t578 + t518 * t563) * MDP(18) + (t413 * t441 + t414 * t442 + t417 * t432 + t418 * t431 + t421 * t455 + t422 * t449) * MDP(30) + (t440 * t631 + t479 * t575 + t492 * t577 + t496 * t561 + t543 * t502 + t523 * t517 + t566 * t723 + t600 * t690) * MDP(23) + t818 * t819; (t413 * t520 + t414 * t521 + t421 * t545 - t431 * t781 - t432 * t782 - t449 * t779) * MDP(30) + (-t764 * t566 - t546 * t563 - t523 * t594 + t827 * t600 + (t523 * t755 + t439 + (qJD(3) * t563 + t730) * pkin(9)) * t685 + (-t523 * t753 + t805 + t654 * t480 + (t600 * t755 + t501) * pkin(9)) * t682) * MDP(24) + (-t523 * t593 - t546 * t561 + t640 * t566 + ((-qJD(4) * t653 + t547) * t681 + t829) * t600 + (t523 * t681 * qJD(3) - t440 + (qJD(3) * t561 + t700) * pkin(9)) * t685 + (pkin(9) * t502 - t479 * t654 + t523 * t751 + t806) * t682) * MDP(23) + (t561 * t594 + t563 * t593 + (-t561 * t684 - t563 * t681) * t754 + (-t804 - t502 * t684 + (t561 * t681 - t563 * t684) * qJD(4)) * t682) * MDP(19) + t654 * t710 + ((t565 - t799) * t685 + (-t566 + t797) * t682) * MDP(12) + (-t501 * t685 - t828 * t600 + (-t563 * t654 - t730 + t800) * t682) * MDP(20) + (-t566 * t685 - t600 * t796) * MDP(22) + (-t413 * t685 - t421 * t621 - t432 * t796 + t449 * t771 - t464 * t545 + t520 * t566 - t600 * t782 + t704 * t779) * MDP(29) + (t416 * t526 + t778 * t434 + t777 * t435 + t459 * t763 + t493 * t816 - t525 * t785) * MDP(26) + (-t413 * t620 + t414 * t621 - t431 * t771 + t432 * t772 - t463 * t520 + t464 * t521 + t504 * t782 - t704 * t781) * MDP(28) + (-t416 * t620 + t434 * t771 + t435 * t772 - t463 * t526 - t464 * t525 - t504 * t777 + t621 * t785 - t704 * t778) * MDP(25) + (t565 * t682 - t606 * t795) * MDP(11) + (-pkin(2) * t566 - t615 * t685 + t720 * t654 + t625 * t822 + (pkin(9) * t795 + t587 * t682) * qJD(3) + (-t533 * t683 + (-pkin(9) * t758 - t587 * t686) * t682) * t761) * MDP(16) + (t654 * t756 + (-t686 * t796 + (-t822 + t757) * t683) * t761) * MDP(14) + (-pkin(2) * t565 + t615 * t682 - t767 * t654 - t625 * t606 + (-pkin(9) * t796 + t587 * t685) * qJD(3) + (-t587 * t786 + (-pkin(9) * t757 + t534) * t683) * t761) * MDP(17) + (t414 * t685 + t421 * t620 + t431 * t796 - t449 * t772 + t463 * t545 - t504 * t779 - t521 * t566 + t600 * t781) * MDP(27) + (t501 * t788 + (-t681 * t752 - t828) * t563) * MDP(18) + (-pkin(8) * t711 + t625 * t718 + t683 * t693) * MDP(9) + (pkin(8) * t712 + t622 * t718 + t686 * t693) * MDP(10) + (t502 * t685 + t824 * t600 + (t561 * t654 + t700) * t682) * MDP(21) + (-t654 * t754 + (t654 * t786 + (qJD(2) * t682 - t606) * t683) * t761) * MDP(13) + t794 * t818 + (-t716 + (-MDP(6) * t686 + MDP(7) * t683) * t678 * t680) * t687; -t822 ^ 2 * MDP(12) + (t565 + t799) * MDP(13) + (-t566 - t797) * MDP(14) + qJD(2) * t710 + (-t534 * t654 - t715) * MDP(16) + (-t533 * t654 - t587 * t822 - t697) * MDP(17) + (t563 * t719 + t804) * MDP(18) + ((t501 - t803) * t684 + (-t502 - t802) * t681) * MDP(19) + (t600 * t719 + t801) * MDP(20) + (-t681 * t814 + t800) * MDP(21) + (-pkin(3) * t502 - t805 - t534 * t561 + (-pkin(10) * t751 - t549) * t600 + (t533 * t600 + t698) * t681) * MDP(23) + (-pkin(3) * t501 + t806 - t534 * t563 + (pkin(10) * t753 + t776) * t600 + t698 * t684) * MDP(24) + (-t416 * t637 + t434 * t773 + t435 * t774 + t448 * t504 + t638 * t785 - t704 * t769 + t707) * MDP(25) + (t416 * t586 + t785 * t585 + t459 * t737 + t815 * t493 + (t558 - t448) * t435 + t769 * t434) * MDP(26) + (t421 * t637 - t449 * t774 + t463 * t567 - t504 * t780 - t566 * t585 + t600 * t783) * MDP(27) + (-t413 * t637 + t414 * t638 - t431 * t773 + t432 * t774 + t443 * t504 - t704 * t783 + t707) * MDP(28) + (-t421 * t638 + t449 * t773 - t464 * t567 + t566 * t586 + t600 * t784 + t704 * t780) * MDP(29) + (t413 * t586 + t414 * t585 + t421 * t567 - t431 * t783 + t432 * t784 - t449 * t780) * MDP(30) + (-MDP(11) * t822 + t606 * MDP(12) - t587 * MDP(16) - t563 * MDP(20) + t561 * MDP(21) - t600 * MDP(22) - t479 * MDP(23) + t480 * MDP(24) + t431 * MDP(27) - t432 * MDP(29)) * t606; t563 * t561 * MDP(18) + (-t561 ^ 2 + t563 ^ 2) * MDP(19) + (t740 + t803) * MDP(20) + (-t722 + t802) * MDP(21) + (t480 * t600 - t523 * t563 + t724) * MDP(23) + (t479 * t600 + t523 * t561 - t741) * MDP(24) + (t435 * t704 - t808) * MDP(25) + (t434 * t437 - t435 * t438) * MDP(26) + (t437 * t600 - t785 - t817) * MDP(27) + (t432 * t704 - t463 * t668 + t464 * t671 - t808) * MDP(28) + (-t438 * t600 + t457 * t704 + t742 + 0.2e1 * t749) * MDP(29) + (t413 * t668 + t414 * t671 - t431 * t437 + t432 * t748 - t449 * t457) * MDP(30) + (MDP(22) + (pkin(5) - t671) * MDP(27) + t668 * MDP(29)) * t566 + ((-MDP(21) * t606 - MDP(23) * t524) * t684 + (-MDP(20) * t606 + MDP(21) * t654 - MDP(23) * t519 + MDP(24) * t524) * t681) * qJD(4) + ((-t463 * t677 - t464 * t679) * MDP(25) + (t416 * t677 - t493 * t563 - t679 * t785) * MDP(26)) * pkin(4) + ((-t434 + t438) * MDP(25) - t457 * MDP(27) + (t431 - t748) * MDP(28) - t449 * MDP(29)) * t504; (t434 * t704 + t435 * t504 + t459) * MDP(26) + (t600 * t704 + t463) * MDP(27) + (-t464 + t823) * MDP(29) + (-t431 * t704 + t432 * t504 + t421) * MDP(30) + (MDP(25) + MDP(28)) * (-t504 ^ 2 - t820); (t504 * t704 - t566) * MDP(27) + (t464 + t823) * MDP(28) + (-t814 - t820) * MDP(29) + (-t432 * t600 + t414 + t817) * MDP(30);];
tauc  = t1;
