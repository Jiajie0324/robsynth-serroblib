% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 18:56
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRRPP7_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP7_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP7_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP7_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP7_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPP7_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 18:50:51
% EndTime: 2019-05-07 18:51:44
% DurationCPUTime: 26.76s
% Computational Cost: add. (125704->656), mult. (270976->903), div. (0->0), fcn. (218889->12), ass. (0->443)
t391 = cos(pkin(11));
t392 = cos(pkin(6));
t482 = qJD(1) * t392;
t384 = qJD(2) + t482;
t394 = sin(qJ(3));
t397 = cos(qJ(3));
t390 = sin(pkin(6));
t395 = sin(qJ(2));
t481 = qJD(1) * t395;
t461 = t390 * t481;
t361 = t384 * t394 + t397 * t461;
t398 = cos(qJ(2));
t480 = qJD(1) * t398;
t382 = t390 * t480;
t472 = qJDD(1) * t390;
t367 = qJD(2) * t382 + t395 * t472;
t383 = qJDD(1) * t392 + qJDD(2);
t454 = t394 * t367 - t397 * t383;
t329 = -t361 * qJD(3) - t454;
t328 = qJDD(4) - t329;
t393 = sin(qJ(4));
t396 = cos(qJ(4));
t473 = t382 - qJD(3);
t342 = t361 * t393 + t396 * t473;
t343 = t396 * t361 - t393 * t473;
t389 = sin(pkin(11));
t310 = t391 * t342 + t343 * t389;
t312 = -t342 * t389 + t343 * t391;
t502 = t312 * t310;
t227 = -t502 - t328;
t511 = t227 * t389;
t309 = t312 ^ 2;
t359 = -t397 * t384 + t394 * t461;
t356 = qJD(4) + t359;
t536 = t356 ^ 2;
t555 = -t309 - t536;
t180 = t391 * t555 + t511;
t510 = t227 * t391;
t182 = -t389 * t555 + t510;
t121 = t180 * t396 + t182 * t393;
t106 = t180 * t393 - t182 * t396;
t438 = -t397 * t367 - t394 * t383;
t330 = -t359 * qJD(3) - t438;
t471 = qJDD(1) * t398;
t423 = (qJD(2) * t481 - t471) * t390;
t412 = qJDD(3) + t423;
t405 = -t396 * t330 - t393 * t412;
t272 = -t342 * qJD(4) - t405;
t407 = t343 * qJD(4) + t393 * t330 - t396 * t412;
t400 = t391 * t272 - t389 * t407;
t503 = t310 * t356;
t552 = t400 - t503;
t83 = t106 * t397 - t394 * t552;
t652 = pkin(1) * (t121 * t398 + t395 * t83);
t81 = t106 * t394 + t397 * t552;
t651 = pkin(8) * (-t395 * t121 + t398 * t83) - pkin(1) * t81;
t649 = pkin(2) * t81;
t648 = pkin(9) * t81;
t647 = pkin(2) * t121 + pkin(9) * t83;
t538 = t310 ^ 2;
t279 = t538 - t536;
t196 = -t279 * t389 + t510;
t200 = -t279 * t391 - t511;
t135 = t196 * t396 + t200 * t393;
t140 = t196 * t393 - t200 * t396;
t456 = -t272 * t389 - t391 * t407;
t498 = t356 * t312;
t435 = t456 + t498;
t94 = t140 * t394 - t435 * t397;
t644 = t390 * (t395 * (t140 * t397 + t435 * t394) + t398 * t135) + t392 * t94;
t554 = t309 - t538;
t434 = -t456 + t498;
t126 = -t434 * t389 + t391 * t552;
t516 = t552 * t389;
t129 = t434 * t391 + t516;
t74 = t126 * t393 + t129 * t396;
t65 = t394 * t74 + t397 * t554;
t70 = -t126 * t396 + t129 * t393;
t642 = t390 * (t395 * (-t394 * t554 + t397 * t74) - t398 * t70) + t392 * t65;
t640 = pkin(3) * t121;
t639 = pkin(10) * t121;
t635 = pkin(3) * t552 + pkin(10) * t106;
t630 = pkin(4) * t180;
t629 = qJ(5) * t180;
t628 = qJ(5) * t182;
t549 = t503 + t400;
t280 = -t309 + t536;
t550 = -t502 + t328;
t509 = t550 * t389;
t592 = t391 * t280 + t509;
t220 = t391 * t550;
t593 = -t280 * t389 + t220;
t604 = -t393 * t592 + t396 * t593;
t605 = t393 * t593 + t396 * t592;
t623 = t394 * t604 - t397 * t549;
t627 = t392 * t623 + (t395 * (t394 * t549 + t397 * t604) - t398 * t605) * t390;
t548 = -t536 - t538;
t567 = t391 * t548 - t509;
t569 = t389 * t548 + t220;
t585 = -t393 * t569 + t396 * t567;
t608 = t394 * t585 - t397 * t434;
t626 = pkin(2) * t608;
t625 = pkin(9) * t608;
t584 = t393 * t567 + t396 * t569;
t607 = t394 * t434 + t397 * t585;
t624 = -pkin(2) * t584 + pkin(9) * t607;
t622 = pkin(1) * (t395 * t607 - t398 * t584);
t621 = pkin(8) * (t395 * t584 + t398 * t607) - pkin(1) * t608;
t214 = -t538 - t309;
t544 = t389 * t549 + t391 * t435;
t545 = t389 * t435 - t391 * t549;
t565 = -t393 * t545 + t396 * t544;
t587 = -t214 * t397 + t394 * t565;
t618 = pkin(2) * t587;
t617 = pkin(3) * t584;
t616 = pkin(9) * t587;
t615 = pkin(10) * t584;
t564 = t393 * t544 + t396 * t545;
t586 = t214 * t394 + t397 * t565;
t610 = -pkin(2) * t564 + pkin(9) * t586;
t609 = -pkin(3) * t434 + pkin(10) * t585;
t606 = pkin(1) * (t395 * t586 - t398 * t564);
t603 = pkin(8) * (t395 * t564 + t398 * t586) - pkin(1) * t587;
t601 = pkin(3) * t564;
t528 = pkin(4) * t569;
t600 = pkin(10) * t564;
t599 = qJ(5) * t567;
t598 = qJ(5) * t569;
t591 = -pkin(4) * t214 + qJ(5) * t544;
t499 = t328 * t394;
t433 = (-t310 * t389 - t312 * t391) * t356;
t496 = t356 * t389;
t277 = t312 * t496;
t495 = t356 * t391;
t465 = t310 * t495;
t444 = t277 - t465;
t539 = -t393 * t433 + t396 * t444;
t540 = t393 * t444 + t396 * t433;
t324 = t397 * t328;
t568 = t394 * t539 - t324;
t590 = t392 * t568 + (t395 * (t397 * t539 + t499) - t398 * t540) * t390;
t469 = t394 * t502;
t419 = -t389 * t456 + t465;
t445 = t310 * t496 + t391 * t456;
t541 = t393 * t419 + t396 * t445;
t542 = -t393 * t445 + t396 * t419;
t468 = t397 * t502;
t566 = t394 * t542 + t468;
t589 = t392 * t566 + (t395 * (t397 * t542 - t469) - t398 * t541) * t390;
t588 = -pkin(3) * t214 + pkin(10) * t565;
t529 = pkin(4) * t545;
t581 = qJ(5) * t545;
t580 = qJ(6) * t552;
t314 = t343 * t342;
t553 = -t314 + t328;
t577 = t393 * t553;
t573 = t396 * t553;
t470 = t473 ^ 2;
t492 = t361 * t359;
t410 = t412 - t492;
t560 = t394 * t410;
t558 = t397 * t410;
t479 = qJD(5) * t310;
t303 = -0.2e1 * t479;
t477 = qJD(6) * t356;
t556 = t303 + 0.2e1 * t477;
t323 = t356 * t342;
t250 = t323 + t272;
t349 = t473 * t359;
t301 = t330 + t349;
t532 = sin(qJ(1));
t533 = cos(qJ(1));
t430 = g(1) * t533 + g(2) * t532;
t535 = qJD(1) ^ 2;
t363 = -pkin(1) * t535 + pkin(8) * t472 - t430;
t429 = g(1) * t532 - g(2) * t533;
t475 = t390 * t535;
t409 = qJDD(1) * pkin(1) + pkin(8) * t475 + t429;
t406 = t392 * t409;
t455 = t395 * t363 - t398 * t406;
t490 = t390 * t398;
t332 = g(3) * t490 + t455;
t491 = t390 * t395;
t403 = -g(3) * t491 + t395 * t406;
t333 = t398 * t363 + t403;
t551 = t395 * t332 + t398 * t333;
t255 = pkin(5) * t310 - qJ(6) * t312;
t531 = pkin(2) * t398;
t447 = -pkin(9) * t395 - t531;
t483 = qJD(1) * t390;
t366 = t447 * t483;
t381 = t384 ^ 2;
t293 = t383 * pkin(9) - t381 * pkin(2) + (t366 * t483 + t363) * t398 + t403;
t525 = t392 * g(3);
t399 = -t367 * pkin(9) - t525 + ((-pkin(1) - t531) * qJDD(1) + (-pkin(8) * t483 - t398 * t384 * pkin(9) + (qJD(2) + t384) * t395 * pkin(2)) * qJD(1) - t429) * t390;
t238 = t397 * t293 + t394 * t399;
t334 = pkin(3) * t359 - pkin(10) * t361;
t206 = -pkin(3) * t470 + pkin(10) * t412 - t359 * t334 + t238;
t292 = -t383 * pkin(2) - t381 * pkin(9) + (g(3) * t398 + t366 * t481) * t390 + t455;
t452 = t473 * t361;
t209 = -t301 * pkin(10) + (-t329 - t452) * pkin(3) + t292;
t143 = t206 * t393 - t396 * t209;
t103 = pkin(4) * t553 - qJ(5) * t250 - t143;
t144 = t396 * t206 + t393 * t209;
t317 = pkin(4) * t356 - qJ(5) * t343;
t537 = t342 ^ 2;
t109 = -pkin(4) * t537 - qJ(5) * t407 - t356 * t317 + t144;
t485 = t389 * t103 + t391 * t109;
t450 = -t328 * qJ(6) + t310 * t255 - t485;
t546 = -t630 - pkin(5) * (t555 + t536) - qJ(6) * t227 - t450;
t178 = t312 * t495 + t389 * t400;
t179 = t391 * t400 - t277;
t117 = t178 * t396 + t179 * t393;
t120 = -t178 * t393 + t179 * t396;
t446 = t394 * t120 - t468;
t543 = t392 * t446 + (t397 * t120 + t469) * t491 - t117 * t490;
t341 = t343 ^ 2;
t357 = t359 ^ 2;
t358 = t361 ^ 2;
t386 = t390 ^ 2;
t457 = -t391 * t103 + t109 * t389;
t478 = qJD(5) * t312;
t57 = t457 + 0.2e1 * t478;
t58 = t303 + t485;
t36 = t389 * t58 - t391 * t57;
t534 = pkin(4) * t36;
t530 = pkin(3) * t394;
t527 = pkin(5) * t391;
t526 = pkin(8) * t390;
t524 = t36 * t393;
t523 = t36 * t396;
t522 = qJ(6) * t391;
t237 = t293 * t394 - t397 * t399;
t205 = -t412 * pkin(3) - t470 * pkin(10) + t334 * t361 + t237;
t145 = t407 * pkin(4) - t537 * qJ(5) + t317 * t343 + qJDD(5) + t205;
t521 = t145 * t389;
t520 = t145 * t391;
t513 = t205 * t393;
t512 = t205 * t396;
t262 = t314 + t328;
t508 = t262 * t393;
t507 = t262 * t396;
t505 = t292 * t394;
t504 = t292 * t397;
t320 = -t492 - t412;
t501 = t320 * t394;
t500 = t320 * t397;
t497 = t356 * t343;
t494 = t356 * t393;
t493 = t356 * t396;
t476 = t386 * t535;
t376 = t398 * t395 * t476;
t364 = t376 + t383;
t488 = t395 * t364;
t365 = -t376 + t383;
t486 = t398 * t365;
t474 = 0.2e1 * qJD(3) - t382;
t467 = t394 * t314;
t466 = t397 * t314;
t464 = t398 * t492;
t371 = t384 * t382;
t463 = t371 + t367;
t462 = -pkin(3) * t397 - pkin(2);
t387 = t395 ^ 2;
t460 = t387 * t476;
t388 = t398 ^ 2;
t459 = t388 * t476;
t458 = -qJ(6) * t389 - pkin(4);
t37 = t389 * t57 + t391 * t58;
t86 = t143 * t393 + t396 * t144;
t167 = t237 * t394 + t397 * t238;
t453 = (0.2e1 * qJD(5) + t255) * t312;
t451 = -t384 + t482;
t449 = -t485 + t630;
t448 = -pkin(3) * t205 + pkin(10) * t86;
t443 = t394 * t349;
t442 = t394 * t452;
t441 = t397 * t349;
t440 = t397 * t452;
t85 = -t143 * t396 + t144 * t393;
t439 = t237 * t397 - t238 * t394;
t437 = -pkin(1) + t447;
t436 = -t450 + t556;
t296 = t361 * t382 + t454;
t51 = -pkin(5) * t536 + t436;
t428 = -t328 * pkin(5) - qJ(6) * t536 + qJDD(6) + t457;
t53 = t453 + t428;
t32 = t389 * t51 - t391 * t53;
t431 = pkin(4) * t32 - pkin(5) * t53 + qJ(6) * t51;
t288 = -t536 - t537;
t219 = t288 * t396 - t577;
t247 = -t407 - t497;
t427 = pkin(3) * t247 + pkin(10) * t219 - t512;
t306 = -t341 - t536;
t222 = -t306 * t393 - t507;
t251 = (qJD(4) + t356) * t342 + t405;
t426 = pkin(3) * t251 + pkin(10) * t222 + t513;
t425 = -pkin(5) * t549 + qJ(6) * t435 + t529;
t404 = -t407 + t497;
t173 = t250 * t393 + t396 * t404;
t273 = t341 + t537;
t424 = pkin(3) * t273 + pkin(10) * t173 + t86;
t33 = t389 * t53 + t391 * t51;
t16 = -t32 * t393 + t33 * t396;
t402 = -t456 * pkin(5) + t145 - t580;
t78 = t402 + (pkin(5) * t356 - 0.2e1 * qJD(6)) * t312;
t17 = qJ(5) * t33 + (t458 - t527) * t78;
t24 = -qJ(5) * t32 + (pkin(5) * t389 - t522) * t78;
t420 = -pkin(3) * t78 + pkin(10) * t16 + t17 * t396 + t24 * t393;
t30 = t37 + t591;
t31 = -t36 - t581;
t418 = t30 * t396 + t31 * t393 + t588;
t49 = (-t214 - t536) * pkin(5) + t436;
t50 = -qJ(6) * t214 + t53;
t27 = t389 * t50 + t391 * t49 + t591;
t28 = -t389 * t49 + t391 * t50 - t581;
t417 = t27 * t396 + t28 * t393 + t588;
t401 = 0.2e1 * qJD(6) * t312 - t402;
t59 = -pkin(5) * t498 + t401 + t580;
t44 = -t628 + t389 * t59 + (pkin(4) + t527) * t552;
t47 = -pkin(5) * t516 + t391 * t59 + t629;
t416 = t393 * t47 + t396 * t44 + t635;
t79 = -pkin(4) * t434 - t520 + t599;
t95 = t521 - t598;
t415 = t393 * t95 + t396 * t79 + t609;
t80 = -pkin(4) * t552 + t521 + t628;
t96 = t520 - t629;
t414 = t393 * t96 + t396 * t80 - t635;
t60 = (-t434 - t498) * pkin(5) + t401;
t45 = t391 * t60 + t434 * t458 + t599;
t48 = -t389 * t60 - t434 * t522 - t598;
t413 = t393 * t48 + t396 * t45 + t609;
t23 = t37 * t396 - t524;
t34 = -pkin(4) * t145 + qJ(5) * t37;
t411 = -pkin(3) * t145 + pkin(10) * t23 - qJ(5) * t524 + t34 * t396;
t408 = -pkin(5) * t550 - qJ(6) * t548 + t428 - t528;
t370 = t384 * t461;
t369 = (t387 - t388) * t476;
t368 = -t381 - t459;
t355 = -t460 - t381;
t350 = t390 * t409 + t525;
t348 = -t370 - t423;
t347 = t370 - t423;
t346 = -t371 + t367;
t345 = -t358 + t470;
t344 = t357 - t470;
t337 = -t358 - t470;
t336 = t358 - t357;
t331 = -t470 - t357;
t319 = -t341 + t536;
t318 = -t536 + t537;
t316 = t357 + t358;
t315 = t443 + t440;
t313 = t341 - t537;
t305 = -0.2e1 * t478;
t304 = 0.2e1 * t479;
t300 = t359 * t474 + t438;
t299 = t330 - t349;
t297 = -t361 * t474 - t454;
t295 = t394 * t330 - t440;
t294 = t397 * t329 - t443;
t287 = t344 * t394 - t500;
t286 = t345 * t397 + t560;
t276 = -t337 * t394 + t500;
t275 = t337 * t397 + t501;
t270 = t331 * t397 - t560;
t269 = t331 * t394 + t558;
t267 = (-t342 * t396 + t343 * t393) * t356;
t266 = (-t342 * t393 - t343 * t396) * t356;
t254 = -t296 * t397 + t299 * t394;
t252 = t297 * t394 + t301 * t397;
t249 = -t323 + t272;
t245 = t272 * t396 - t343 * t494;
t244 = t272 * t393 + t343 * t493;
t243 = t342 * t493 + t393 * t407;
t242 = -t342 * t494 + t396 * t407;
t241 = t267 * t394 - t324;
t235 = t318 * t396 - t508;
t234 = -t319 * t393 + t573;
t233 = t318 * t393 + t507;
t232 = t319 * t396 + t577;
t221 = t306 * t396 - t508;
t218 = t288 * t393 + t573;
t211 = t245 * t394 - t466;
t210 = t243 * t394 + t466;
t204 = pkin(2) * t300 + pkin(9) * t276 + t505;
t202 = pkin(2) * t297 + pkin(9) * t270 - t504;
t172 = t247 * t396 - t249 * t393;
t171 = -t250 * t396 + t393 * t404;
t170 = t247 * t393 + t249 * t396;
t169 = t235 * t394 - t397 * t404;
t168 = t234 * t394 - t250 * t397;
t165 = t222 * t397 - t251 * t394;
t164 = t222 * t394 + t251 * t397;
t159 = t219 * t397 - t247 * t394;
t158 = t219 * t394 + t247 * t397;
t153 = t172 * t394 - t313 * t397;
t152 = t173 * t397 - t273 * t394;
t151 = t173 * t394 + t273 * t397;
t150 = -pkin(2) * t292 + pkin(9) * t167;
t147 = -pkin(10) * t221 + t512;
t146 = -pkin(10) * t218 + t513;
t141 = pkin(2) * t316 + pkin(9) * t254 + t167;
t111 = -pkin(3) * t221 + t144;
t110 = -pkin(3) * t218 + t143;
t69 = t205 * t394 + t397 * t86;
t68 = -t205 * t397 + t394 * t86;
t67 = -pkin(10) * t171 - t85;
t55 = -pkin(2) * t221 + pkin(9) * t165 + t111 * t397 + t147 * t394;
t54 = -pkin(2) * t218 + pkin(9) * t159 + t110 * t397 + t146 * t394;
t52 = -t529 - t601;
t46 = pkin(9) * t152 + t171 * t462 + t394 * t67;
t43 = -t425 - t601;
t42 = t303 - t449 - t640;
t41 = -t393 * t80 + t396 * t96 - t639;
t40 = -t528 + t57 - t617;
t39 = -t393 * t79 + t396 * t95 - t615;
t38 = t408 + t453 - t617;
t35 = t304 - 0.2e1 * t477 - t546 + t640;
t29 = pkin(9) * t69 + (-pkin(10) * t394 + t462) * t85;
t26 = -t393 * t45 + t396 * t48 - t615;
t25 = -t393 * t44 + t396 * t47 + t639;
t22 = t37 * t393 + t523;
t21 = t394 * t41 + t397 * t42 - t647;
t20 = t145 * t394 + t23 * t397;
t19 = -t145 * t397 + t23 * t394;
t18 = t39 * t394 + t397 * t40 + t624;
t15 = t32 * t396 + t33 * t393;
t14 = t16 * t397 + t394 * t78;
t13 = t16 * t394 - t397 * t78;
t12 = -t30 * t393 + t31 * t396 - t600;
t11 = -pkin(3) * t22 - t534;
t10 = t26 * t394 + t38 * t397 + t624;
t9 = t25 * t394 + t35 * t397 + t647;
t8 = -t27 * t393 + t28 * t396 - t600;
t7 = -pkin(10) * t22 - qJ(5) * t523 - t34 * t393;
t6 = t12 * t394 + t397 * t52 + t610;
t5 = -pkin(3) * t15 - t431;
t4 = t394 * t8 + t397 * t43 + t610;
t3 = -pkin(10) * t15 - t17 * t393 + t24 * t396;
t2 = -pkin(2) * t22 + pkin(9) * t20 + t11 * t397 + t394 * t7;
t1 = -pkin(2) * t15 + pkin(9) * t14 + t3 * t394 + t397 * t5;
t56 = [0, 0, 0, 0, 0, qJDD(1), t429, t430, 0, 0, (-t386 * t451 * t480 + t367 * t390) * t395, t392 * t369 + (t395 * t348 + t398 * t463) * t390, t392 * t346 + (t488 + t398 * (t381 - t460)) * t390, (t471 + (-qJD(2) + t451) * t481) * t386 * t398, t392 * t347 + (t395 * (-t381 + t459) + t486) * t390, t392 * t383, (-t332 + pkin(1) * (t364 * t398 + t368 * t395)) * t392 + (t398 * t350 + pkin(1) * t348 + pkin(8) * (t368 * t398 - t488)) * t390, -t350 * t491 - t392 * t333 + pkin(1) * (-t390 * t463 + (t355 * t398 - t365 * t395) * t392) + (-t395 * t355 - t486) * t526, pkin(1) * ((-t346 * t398 + t347 * t395) * t392 - (-t387 - t388) * t386 * t475) + (t395 * t346 + t347 * t398) * t526 + t551 * t390, pkin(1) * (t390 * t350 + (-t332 * t398 + t333 * t395) * t392) + t551 * t526, t392 * t295 + (t395 * (t397 * t330 + t442) - t464) * t390, t392 * t252 + (t395 * (t297 * t397 - t301 * t394) - t398 * t336) * t390, t392 * t286 + (t395 * (-t345 * t394 + t558) - t398 * t299) * t390, t392 * t294 + (t395 * (-t394 * t329 - t441) + t464) * t390, t392 * t287 + (t395 * (t344 * t397 + t501) + t398 * t296) * t390, t392 * t315 + (t395 * (t441 - t442) - t412 * t398) * t390, (t202 + pkin(1) * (t270 * t395 + t297 * t398)) * t392 + (t395 * (-pkin(9) * t269 + t505) + t398 * (-pkin(2) * t269 + t237) - pkin(1) * t269 + pkin(8) * (t270 * t398 - t395 * t297)) * t390, (t204 + pkin(1) * (t276 * t395 + t300 * t398)) * t392 + (t395 * (-pkin(9) * t275 + t504) + t398 * (-pkin(2) * t275 + t238) - pkin(1) * t275 + pkin(8) * (t276 * t398 - t395 * t300)) * t390, (t141 + pkin(1) * (t254 * t395 + t316 * t398)) * t392 + (t395 * t439 + pkin(8) * (t254 * t398 - t395 * t316) + t437 * (-t296 * t394 - t299 * t397)) * t390, (t150 + pkin(1) * (t167 * t395 - t292 * t398)) * t392 + (pkin(8) * (t167 * t398 + t395 * t292) - t437 * t439) * t390, t392 * t211 + (t395 * (t245 * t397 + t467) - t398 * t244) * t390, t392 * t153 + (t395 * (t172 * t397 + t313 * t394) - t398 * t170) * t390, t392 * t168 + (t395 * (t234 * t397 + t250 * t394) - t398 * t232) * t390, t392 * t210 + (t395 * (t243 * t397 - t467) + t398 * t242) * t390, t392 * t169 + (t395 * (t235 * t397 + t394 * t404) - t398 * t233) * t390, t392 * t241 + (t395 * (t267 * t397 + t499) - t398 * t266) * t390, (t54 + pkin(1) * (t159 * t395 - t218 * t398)) * t392 + (t395 * (-pkin(9) * t158 - t110 * t394 + t146 * t397) + t398 * (-pkin(2) * t158 - t427) - pkin(1) * t158 + pkin(8) * (t159 * t398 + t395 * t218)) * t390, (t55 + pkin(1) * (t165 * t395 - t221 * t398)) * t392 + (t395 * (-pkin(9) * t164 - t111 * t394 + t147 * t397) + t398 * (-pkin(2) * t164 - t426) - pkin(1) * t164 + pkin(8) * (t165 * t398 + t395 * t221)) * t390, (t46 + pkin(1) * (t152 * t395 - t171 * t398)) * t392 + (t395 * (-pkin(9) * t151 + t171 * t530 + t397 * t67) + t398 * (-pkin(2) * t151 - t424) - pkin(1) * t151 + pkin(8) * (t152 * t398 + t395 * t171)) * t390, (t29 + pkin(1) * (t395 * t69 - t398 * t85)) * t392 + (t395 * (-pkin(9) * t68 + (-pkin(10) * t397 + t530) * t85) + t398 * (-pkin(2) * t68 - t448) - pkin(1) * t68 + pkin(8) * (t395 * t85 + t398 * t69)) * t390, t543, -t642, t627, t589, t644, t590, (t18 + t622) * t392 + (t395 * (t39 * t397 - t394 * t40 - t625) + t398 * (-t415 - t626) + t621) * t390, (t21 - t652) * t392 + (t395 * (-t394 * t42 + t397 * t41 + t648) + t398 * (-t414 + t649) - t651) * t390, (t6 + t606) * t392 + (t395 * (t12 * t397 - t394 * t52 - t616) + t398 * (-t418 - t618) + t603) * t390, (t2 + pkin(1) * (t20 * t395 - t22 * t398)) * t392 + (t395 * (-pkin(9) * t19 - t11 * t394 + t397 * t7) + t398 * (-pkin(2) * t19 - t411) - pkin(1) * t19 + pkin(8) * (t20 * t398 + t395 * t22)) * t390, t543, t627, t642, t590, -t644, t589, (t10 + t622) * t392 + (t395 * (t26 * t397 - t38 * t394 - t625) + t398 * (-t413 - t626) + t621) * t390, (t4 + t606) * t392 + (t395 * (-t394 * t43 + t397 * t8 - t616) + t398 * (-t417 - t618) + t603) * t390, (t9 + t652) * t392 + (t395 * (t25 * t397 - t35 * t394 - t648) + t398 * (-t416 - t649) + t651) * t390, (t1 + pkin(1) * (t14 * t395 - t15 * t398)) * t392 + (t395 * (-pkin(9) * t13 + t3 * t397 - t394 * t5) + t398 * (-pkin(2) * t13 - t420) - pkin(1) * t13 + pkin(8) * (t14 * t398 + t395 * t15)) * t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, t369, t346, t376, t347, t383, -t332, -t333, 0, 0, t295, t252, t286, t294, t287, t315, t202, t204, t141, t150, t211, t153, t168, t210, t169, t241, t54, t55, t46, t29, t446, -t65, t623, t566, t94, t568, t18, t21, t6, t2, t446, t623, t65, t568, -t94, t566, t10, t4, t9, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, t336, t299, -t492, -t296, t412, -t237, -t238, 0, 0, t244, t170, t232, -t242, t233, t266, t427, t426, t424, t448, t117, -t70, t605, t541, -t135, t540, t415, t414, t418, t411, t117, t605, t70, t540, t135, t541, t413, t417, t416, t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, t313, t250, -t314, t404, t328, -t143, -t144, 0, 0, t502, t554, t549, -t502, t435, t328, t305 - t457 + t528, t304 + t449, t529, t534, t502, t549, -t554, t328, -t435, -t502, -t255 * t312 + t305 - t408, t425, t546 + t556, t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, t552, t214, t145, 0, 0, 0, 0, 0, 0, t434, t214, -t552, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t550, t549, t555, t53;];
tauJ_reg  = t56;
