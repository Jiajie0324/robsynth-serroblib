% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRPP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 18:56
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRPP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPP7_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 18:53:36
% EndTime: 2019-05-07 18:55:32
% DurationCPUTime: 124.55s
% Computational Cost: add. (745822->1094), mult. (1608125->1502), div. (0->0), fcn. (1299052->12), ass. (0->774)
t2379 = sin(qJ(3));
t2383 = cos(qJ(3));
t2377 = cos(pkin(6));
t2584 = qJD(1) * t2377;
t2510 = qJD(2) + t2584;
t2375 = sin(pkin(6));
t2380 = sin(qJ(2));
t2537 = t2375 * t2380;
t2523 = qJD(1) * t2537;
t2338 = t2379 * t2510 + t2383 * t2523;
t2378 = sin(qJ(4));
t2382 = cos(qJ(4));
t2384 = cos(qJ(2));
t2536 = t2375 * t2384;
t2366 = qJD(1) * t2536;
t2529 = t2366 - qJD(3);
t2311 = t2338 * t2378 + t2382 * t2529;
t2312 = t2382 * t2338 - t2378 * t2529;
t2374 = sin(pkin(11));
t2376 = cos(pkin(11));
t2262 = -t2374 * t2311 + t2376 * t2312;
t2259 = t2262 ^ 2;
t2336 = t2379 * t2523 - t2383 * t2510;
t2333 = qJD(4) + t2336;
t2598 = t2333 ^ 2;
t2169 = t2598 + t2259;
t2582 = qJD(1) * t2384;
t2512 = qJD(2) * t2582;
t2526 = t2380 * qJDD(1);
t2344 = (t2512 + t2526) * t2375;
t2367 = qJDD(1) * t2377 + qJDD(2);
t2506 = -t2379 * t2344 + t2383 * t2367;
t2435 = t2338 * qJD(3) - t2506;
t2287 = qJDD(4) + t2435;
t2260 = t2376 * t2311 + t2312 * t2374;
t2556 = t2262 * t2260;
t2614 = t2287 + t2556;
t2565 = t2614 * t2374;
t2041 = t2169 * t2376 + t2565;
t2564 = t2614 * t2376;
t2067 = t2169 * t2374 - t2564;
t1989 = t2041 * t2378 + t2067 * t2382;
t2441 = -t2383 * t2344 - t2379 * t2367;
t2289 = -t2336 * qJD(3) - t2441;
t2527 = qJDD(1) * t2384;
t2583 = qJD(1) * t2380;
t2432 = qJD(2) * t2583 - t2527;
t2412 = t2432 * t2375;
t2405 = qJDD(3) + t2412;
t2391 = -t2382 * t2289 - t2378 * t2405;
t2210 = -t2311 * qJD(4) - t2391;
t2392 = t2312 * qJD(4) + t2378 * t2289 - t2382 * t2405;
t2126 = t2376 * t2210 - t2374 * t2392;
t2557 = t2260 * t2333;
t2620 = t2126 - t2557;
t1928 = t1989 * t2379 - t2383 * t2620;
t1930 = t1989 * t2383 + t2379 * t2620;
t1964 = t2041 * t2382 - t2067 * t2378;
t2474 = t1930 * t2380 + t1964 * t2384;
t1819 = -t1928 * t2375 + t2377 * t2474;
t1864 = t1930 * t2384 - t1964 * t2380;
t2381 = sin(qJ(1));
t2385 = cos(qJ(1));
t2791 = pkin(7) * (t1819 * t2385 + t2381 * t1864);
t2790 = pkin(7) * (t2381 * t1819 - t1864 * t2385);
t1817 = t1928 * t2377 + t2375 * t2474;
t2789 = pkin(8) * (t1817 * t2375 + t1819 * t2377);
t2788 = pkin(1) * t1817;
t2787 = pkin(1) * t1819;
t2125 = t2210 * t2374 + t2376 * t2392;
t2550 = t2333 * t2262;
t2433 = t2125 + t2550;
t1992 = -t2433 * t2374 + t2376 * t2620;
t2570 = t2620 * t2374;
t1996 = -t2433 * t2376 - t2570;
t1902 = -t1992 * t2378 + t1996 * t2382;
t2600 = t2260 ^ 2;
t2616 = t2259 - t2600;
t1887 = t1902 * t2379 - t2383 * t2616;
t1889 = t1902 * t2383 + t2379 * t2616;
t1898 = t1992 * t2382 + t1996 * t2378;
t2478 = t1889 * t2380 - t1898 * t2384;
t1792 = -t1887 * t2375 + t2377 * t2478;
t1815 = t1889 * t2384 + t1898 * t2380;
t2786 = t2381 * t1792 - t1815 * t2385;
t2785 = t1792 * t2385 + t2381 * t1815;
t2218 = t2600 - t2598;
t2086 = t2218 * t2374 + t2564;
t2090 = t2218 * t2376 - t2565;
t2005 = t2086 * t2378 - t2090 * t2382;
t2434 = -t2125 + t2550;
t1936 = t2005 * t2379 + t2434 * t2383;
t1940 = t2005 * t2383 - t2434 * t2379;
t2002 = t2086 * t2382 + t2090 * t2378;
t2470 = t1940 * t2380 + t2002 * t2384;
t1832 = -t1936 * t2375 + t2377 * t2470;
t1873 = t1940 * t2384 - t2002 * t2380;
t2782 = t2381 * t1832 - t1873 * t2385;
t2781 = t1832 * t2385 + t2381 * t1873;
t2779 = pkin(8) * t1864;
t1828 = t1936 * t2377 + t2375 * t2470;
t1790 = t1887 * t2377 + t2375 * t2478;
t2772 = pkin(2) * t1928;
t2771 = pkin(9) * t1928;
t2764 = -pkin(2) * t1964 - pkin(9) * t1930;
t2219 = t2259 - t2598;
t2613 = -t2556 + t2287;
t2563 = t2613 * t2374;
t2665 = -t2376 * t2219 + t2563;
t2136 = t2376 * t2613;
t2666 = t2219 * t2374 + t2136;
t2680 = t2378 * t2666 + t2382 * t2665;
t2612 = t2557 + t2126;
t2679 = -t2378 * t2665 + t2382 * t2666;
t2709 = t2379 * t2612 + t2383 * t2679;
t2732 = t2380 * t2680 + t2384 * t2709;
t2713 = t2379 * t2679 - t2383 * t2612;
t2733 = t2380 * t2709 - t2384 * t2680;
t2746 = -t2375 * t2713 + t2377 * t2733;
t2763 = -t2381 * t2746 + t2385 * t2732;
t2762 = t2381 * t2732 + t2385 * t2746;
t2611 = -t2598 - t2600;
t2634 = t2376 * t2611 - t2563;
t2636 = t2374 * t2611 + t2136;
t2656 = -t2378 * t2636 + t2382 * t2634;
t2684 = t2379 * t2656 - t2383 * t2433;
t2655 = t2378 * t2634 + t2382 * t2636;
t2682 = t2379 * t2433 + t2383 * t2656;
t2712 = t2380 * t2682 - t2384 * t2655;
t2734 = -t2375 * t2684 + t2377 * t2712;
t2761 = pkin(1) * t2734;
t2735 = t2375 * t2712 + t2377 * t2684;
t2760 = pkin(1) * t2735;
t2758 = pkin(3) * t1964;
t2757 = pkin(10) * t1964;
t2748 = pkin(3) * t2620 - pkin(10) * t1989;
t2747 = t2375 * t2733 + t2377 * t2713;
t2708 = t2380 * t2655 + t2384 * t2682;
t2745 = pkin(7) * (-t2381 * t2734 + t2385 * t2708);
t2744 = pkin(7) * (t2381 * t2708 + t2385 * t2734);
t2743 = (-t2375 * t2735 - t2377 * t2734) * pkin(8);
t2120 = -t2600 - t2259;
t2609 = t2374 * t2612 + t2376 * t2434;
t2610 = t2374 * t2434 - t2376 * t2612;
t2630 = -t2378 * t2610 + t2382 * t2609;
t2658 = -t2120 * t2383 + t2379 * t2630;
t2629 = t2378 * t2609 + t2382 * t2610;
t2657 = t2120 * t2379 + t2383 * t2630;
t2683 = t2380 * t2657 - t2384 * t2629;
t2714 = -t2375 * t2658 + t2377 * t2683;
t2742 = pkin(1) * t2714;
t2715 = t2375 * t2683 + t2377 * t2658;
t2741 = pkin(1) * t2715;
t2740 = pkin(8) * t2708;
t2681 = t2380 * t2629 + t2384 * t2657;
t2731 = pkin(7) * (-t2381 * t2714 + t2385 * t2681);
t2730 = pkin(7) * (t2381 * t2681 + t2385 * t2714);
t2729 = (-t2375 * t2715 - t2377 * t2714) * pkin(8);
t2728 = pkin(2) * t2684;
t2727 = pkin(4) * t2041;
t2726 = pkin(8) * t2681;
t2725 = pkin(9) * t2684;
t2724 = qJ(5) * t2041;
t2723 = qJ(5) * t2067;
t2716 = -pkin(2) * t2655 + pkin(9) * t2682;
t2431 = (-t2260 * t2374 - t2262 * t2376) * t2333;
t2548 = t2333 * t2374;
t2216 = t2262 * t2548;
t2547 = t2333 * t2376;
t2520 = t2260 * t2547;
t2489 = t2216 - t2520;
t2607 = t2378 * t2489 + t2382 * t2431;
t2553 = t2287 * t2379;
t2606 = -t2378 * t2431 + t2382 * t2489;
t2631 = t2383 * t2606 + t2553;
t2661 = t2380 * t2607 + t2384 * t2631;
t2283 = t2383 * t2287;
t2635 = t2379 * t2606 - t2283;
t2663 = t2380 * t2631 - t2384 * t2607;
t2685 = -t2375 * t2635 + t2377 * t2663;
t2711 = -t2381 * t2685 + t2385 * t2661;
t2438 = t2125 * t2374 + t2520;
t2490 = -t2376 * t2125 + t2260 * t2548;
t2604 = t2378 * t2438 + t2382 * t2490;
t2522 = t2379 * t2556;
t2605 = -t2378 * t2490 + t2382 * t2438;
t2632 = t2383 * t2605 - t2522;
t2660 = t2380 * t2604 + t2384 * t2632;
t2521 = t2383 * t2556;
t2633 = t2379 * t2605 + t2521;
t2662 = t2380 * t2632 - t2384 * t2604;
t2686 = -t2375 * t2633 + t2377 * t2662;
t2710 = -t2381 * t2686 + t2385 * t2660;
t2707 = t2381 * t2661 + t2385 * t2685;
t2706 = t2381 * t2660 + t2385 * t2686;
t2704 = pkin(2) * t2658;
t2703 = pkin(9) * t2658;
t2702 = pkin(10) * t2655;
t2676 = pkin(4) * t2636;
t2691 = -pkin(3) * t2655 - t2676;
t2690 = -pkin(2) * t2629 + pkin(9) * t2657;
t2689 = -pkin(3) * t2433 + pkin(10) * t2656;
t2688 = t2375 * t2662 + t2377 * t2633;
t2687 = t2375 * t2663 + t2377 * t2635;
t2677 = pkin(3) * t2629;
t2675 = pkin(10) * t2629;
t2674 = qJ(5) * t2634;
t2673 = qJ(5) * t2636;
t2664 = -pkin(4) * t2120 + qJ(5) * t2609;
t2659 = -pkin(3) * t2120 + pkin(10) * t2630;
t2593 = pkin(4) * t2610;
t2652 = qJ(5) * t2610;
t2651 = qJ(6) * t2620;
t2270 = t2312 * t2311;
t2615 = -t2270 + t2287;
t2650 = t2378 * t2615;
t2644 = t2382 * t2615;
t2323 = t2529 * t2338;
t2638 = t2435 - t2323;
t2322 = t2529 * t2336;
t2494 = t2383 * t2322;
t2495 = t2379 * t2323;
t2274 = t2494 - t2495;
t2637 = t2380 * t2274 - t2384 * t2405;
t2063 = t2126 * t2374 + t2262 * t2547;
t2064 = t2126 * t2376 - t2216;
t1983 = t2063 * t2382 + t2064 * t2378;
t1986 = -t2063 * t2378 + t2064 * t2382;
t2491 = t2383 * t1986 + t2522;
t2492 = t2379 * t1986 - t2521;
t2534 = t2377 * t2384;
t2602 = t2377 * t2380 * t2491 - t1983 * t2534 - t2375 * t2492;
t2608 = t1983 * t2380 + t2384 * t2491;
t2628 = t2381 * t2608 + t2385 * t2602;
t2627 = -t2381 * t2602 + t2385 * t2608;
t2504 = t2510 ^ 2;
t2525 = t2529 ^ 2;
t2544 = t2338 * t2336;
t2395 = t2405 - t2544;
t2625 = t2379 * t2395;
t2623 = t2383 * t2395;
t2619 = pkin(5) * t2169 + qJ(6) * t2614;
t2618 = -pkin(5) * t2613 - qJ(6) * t2611;
t2581 = qJD(5) * t2260;
t2253 = -0.2e1 * t2581;
t2579 = qJD(6) * t2333;
t2617 = t2253 + 0.2e1 * t2579;
t2282 = t2333 * t2311;
t2180 = t2282 + t2210;
t2251 = t2289 + t2322;
t2603 = -t1983 * t2536 + t2377 * t2492 + t2491 * t2537;
t2601 = qJD(1) ^ 2;
t2599 = t2311 ^ 2;
t2310 = t2312 ^ 2;
t2334 = t2336 ^ 2;
t2335 = t2338 ^ 2;
t2371 = t2375 ^ 2;
t2597 = pkin(2) * t2380;
t2596 = pkin(2) * t2384;
t2595 = pkin(3) * t2379;
t2363 = g(1) * t2385 + t2381 * g(2);
t2589 = pkin(8) * t2375;
t2340 = -pkin(1) * t2601 + qJDD(1) * t2589 - t2363;
t2500 = -pkin(9) * t2380 - t2596;
t2585 = qJD(1) * t2375;
t2343 = t2500 * t2585;
t2362 = g(1) * t2381 - t2385 * g(2);
t2408 = qJDD(1) * pkin(1) + t2589 * t2601 + t2362;
t2397 = t2377 * t2408;
t2393 = -g(3) * t2537 + t2380 * t2397;
t2238 = t2367 * pkin(9) - t2504 * pkin(2) + (t2343 * t2585 + t2340) * t2384 + t2393;
t2588 = pkin(9) * t2384;
t2499 = -t2588 + t2597;
t2587 = t2377 * g(3);
t2387 = -t2344 * pkin(9) - t2587 + ((-pkin(1) - t2596) * qJDD(1) + ((t2377 * t2499 - t2589) * qJD(1) + (-t2588 + 0.2e1 * t2597) * qJD(2)) * qJD(1) - t2362) * t2375;
t2164 = t2383 * t2238 + t2379 * t2387;
t2298 = pkin(3) * t2336 - pkin(10) * t2338;
t2106 = -pkin(3) * t2525 + pkin(10) * t2405 - t2336 * t2298 + t2164;
t2507 = t2380 * t2340 - t2384 * t2397;
t2237 = -t2367 * pkin(2) - t2504 * pkin(9) + (g(3) * t2384 + t2343 * t2583) * t2375 + t2507;
t2111 = pkin(3) * t2638 - t2251 * pkin(10) + t2237;
t2014 = t2106 * t2378 - t2382 * t2111;
t1962 = pkin(4) * t2615 - qJ(5) * t2180 - t2014;
t2015 = t2382 * t2106 + t2378 * t2111;
t2276 = pkin(4) * t2333 - qJ(5) * t2312;
t1970 = -pkin(4) * t2599 - qJ(5) * t2392 - t2333 * t2276 + t2015;
t2508 = -t2376 * t1962 + t1970 * t2374;
t2580 = qJD(5) * t2262;
t1867 = t2508 + 0.2e1 * t2580;
t2531 = t2374 * t1962 + t2376 * t1970;
t1868 = t2253 + t2531;
t1803 = -t1867 * t2376 + t1868 * t2374;
t2594 = pkin(4) * t1803;
t2590 = pkin(5) * t2376;
t2586 = qJ(6) * t2376;
t2578 = t1803 * t2378;
t2577 = t1803 * t2382;
t2163 = t2238 * t2379 - t2383 * t2387;
t2105 = -t2405 * pkin(3) - t2525 * pkin(10) + t2298 * t2338 + t2163;
t2016 = t2392 * pkin(4) - t2599 * qJ(5) + t2276 * t2312 + qJDD(5) + t2105;
t2575 = t2016 * t2374;
t2574 = t2016 * t2376;
t2567 = t2105 * t2378;
t2566 = t2105 * t2382;
t2199 = t2270 + t2287;
t2562 = t2199 * t2378;
t2561 = t2199 * t2382;
t2559 = t2237 * t2379;
t2558 = t2237 * t2383;
t2279 = -t2405 - t2544;
t2555 = t2279 * t2379;
t2554 = t2279 * t2383;
t2325 = t2375 * t2408 + t2587;
t2552 = t2325 * t2380;
t2551 = t2325 * t2384;
t2549 = t2333 * t2312;
t2546 = t2333 * t2378;
t2545 = t2333 * t2382;
t2513 = t2380 * t2384 * t2601;
t2361 = t2371 * t2513;
t2341 = t2361 + t2367;
t2543 = t2341 * t2380;
t2542 = t2341 * t2384;
t2342 = -t2361 + t2367;
t2541 = t2342 * t2380;
t2540 = t2342 * t2384;
t2539 = t2371 * t2601;
t2538 = t2375 * t2367;
t2188 = pkin(5) * t2260 - qJ(6) * t2262;
t2484 = -pkin(5) * t2598 + t2287 * qJ(6) - t2260 * t2188 + t2531;
t1853 = t2484 + t2617;
t2430 = -t2287 * pkin(5) - qJ(6) * t2598 + qJDD(6) + t2508;
t1856 = (0.2e1 * qJD(5) + t2188) * t2262 + t2430;
t2532 = -pkin(5) * t1856 + qJ(6) * t1853;
t2530 = -pkin(5) * t2612 + qJ(6) * t2434;
t2372 = t2380 ^ 2;
t2373 = t2384 ^ 2;
t2528 = t2372 + t2373;
t2524 = -pkin(3) * t2383 - pkin(2);
t2519 = t2379 * t2270;
t2518 = t2383 * t2270;
t2517 = t2380 * t2544;
t2516 = t2384 * t2544;
t2515 = t2372 * t2539;
t2514 = t2373 * t2539;
t2511 = -qJ(6) * t2374 - pkin(4);
t2509 = 0.2e1 * qJD(2) + t2584;
t1804 = t1867 * t2374 + t2376 * t1868;
t1923 = t2014 * t2378 + t2382 * t2015;
t2050 = t2163 * t2379 + t2383 * t2164;
t2505 = -t2362 * t2381 - t2385 * t2363;
t1796 = t1853 * t2374 - t1856 * t2376;
t2503 = pkin(4) * t1796 + t2532;
t2502 = -t2531 - t2727;
t2501 = t2530 + t2593;
t2498 = -pkin(3) * t2105 + pkin(10) * t1923;
t2360 = qJDD(1) * t2385 - t2381 * t2601;
t2497 = -pkin(7) * t2360 - g(3) * t2381;
t2496 = t2379 * t2322;
t2493 = t2383 * t2323;
t2332 = -t2515 - t2504;
t2297 = -t2332 * t2380 - t2540;
t2488 = pkin(8) * t2297 - t2552;
t2348 = -t2504 - t2514;
t2307 = t2348 * t2384 - t2543;
t2487 = pkin(8) * t2307 + t2551;
t2486 = qJD(1) * t2510;
t2485 = t2371 * t2380 * t2512;
t1797 = t1853 * t2376 + t1856 * t2374;
t1759 = -t1796 * t2378 + t1797 * t2382;
t2389 = t2125 * pkin(5) + t2016 - t2651;
t1911 = (pkin(5) * t2333 - 0.2e1 * qJD(6)) * t2262 + t2389;
t1755 = t1759 * t2383 + t1911 * t2379;
t1758 = t1796 * t2382 + t1797 * t2378;
t2483 = t1755 * t2380 - t1758 * t2384;
t1770 = t1804 * t2382 - t2578;
t1763 = t1770 * t2383 + t2016 * t2379;
t1769 = t1804 * t2378 + t2577;
t2482 = t1763 * t2380 - t1769 * t2384;
t1896 = t1923 * t2383 + t2105 * t2379;
t1922 = -t2014 * t2382 + t2015 * t2378;
t2477 = t1896 * t2380 - t1922 * t2384;
t2390 = -t2392 + t2549;
t2058 = t2180 * t2378 + t2382 * t2390;
t2211 = t2310 + t2599;
t2028 = t2058 * t2383 - t2211 * t2379;
t2056 = -t2180 * t2382 + t2378 * t2390;
t2464 = t2028 * t2380 - t2056 * t2384;
t2177 = -t2392 - t2549;
t2179 = -t2282 + t2210;
t2057 = t2177 * t2382 - t2179 * t2378;
t2269 = t2310 - t2599;
t2032 = t2057 * t2383 + t2269 * t2379;
t2055 = t2177 * t2378 + t2179 * t2382;
t2463 = t2032 * t2380 - t2055 * t2384;
t2229 = -t2598 - t2599;
t2132 = t2229 * t2382 - t2650;
t2040 = t2132 * t2383 - t2177 * t2379;
t2131 = t2229 * t2378 + t2644;
t2462 = t2040 * t2380 - t2131 * t2384;
t2256 = -t2310 - t2598;
t2140 = -t2256 * t2378 - t2561;
t2181 = (qJD(4) + t2333) * t2311 + t2391;
t2048 = t2140 * t2383 - t2181 * t2379;
t2139 = t2256 * t2382 - t2562;
t2461 = t2048 * t2380 - t2139 * t2384;
t2460 = t2050 * t2380 - t2237 * t2384;
t2278 = -t2310 + t2598;
t2160 = -t2278 * t2378 + t2644;
t2053 = t2160 * t2383 + t2180 * t2379;
t2158 = t2278 * t2382 + t2650;
t2459 = t2053 * t2380 - t2158 * t2384;
t2277 = -t2598 + t2599;
t2161 = t2277 * t2382 - t2562;
t2054 = t2161 * t2383 + t2379 * t2390;
t2159 = t2277 * t2378 + t2561;
t2458 = t2054 * t2380 - t2159 * t2384;
t2173 = t2311 * t2545 + t2378 * t2392;
t2114 = t2173 * t2383 - t2519;
t2172 = -t2311 * t2546 + t2382 * t2392;
t2457 = t2114 * t2380 + t2172 * t2384;
t2175 = t2210 * t2382 - t2312 * t2546;
t2115 = t2175 * t2383 + t2519;
t2174 = t2210 * t2378 + t2312 * t2545;
t2456 = t2115 * t2380 - t2174 * t2384;
t2049 = -t2163 * t2383 + t2164 * t2379;
t2205 = (-t2311 * t2382 + t2312 * t2378) * t2333;
t2171 = t2205 * t2383 + t2553;
t2204 = (-t2311 * t2378 - t2312 * t2382) * t2333;
t2455 = t2171 * t2380 - t2204 * t2384;
t2184 = -t2251 * t2379 - t2383 * t2638;
t2300 = t2335 - t2334;
t2454 = t2184 * t2380 - t2300 * t2384;
t2248 = -t2338 * t2366 + t2506;
t2249 = t2289 - t2322;
t2185 = t2248 * t2383 + t2249 * t2379;
t2275 = t2334 + t2335;
t2453 = t2185 * t2380 + t2275 * t2384;
t2294 = -t2525 - t2334;
t2208 = t2294 * t2383 - t2625;
t2452 = t2208 * t2380 - t2384 * t2638;
t2301 = -t2335 - t2525;
t2215 = -t2301 * t2379 + t2554;
t2250 = (0.2e1 * qJD(3) - t2366) * t2336 + t2441;
t2451 = t2215 * t2380 + t2250 * t2384;
t2316 = -t2335 + t2525;
t2227 = -t2316 * t2379 + t2623;
t2450 = t2227 * t2380 - t2249 * t2384;
t2315 = t2334 - t2525;
t2228 = t2315 * t2383 + t2555;
t2246 = t2323 + t2435;
t2449 = t2228 * t2380 + t2246 * t2384;
t2295 = g(3) * t2536 + t2507;
t2296 = t2384 * t2340 + t2393;
t2448 = -t2295 * t2384 + t2296 * t2380;
t2212 = t2295 * t2380 + t2296 * t2384;
t2439 = t2375 * t2486;
t2352 = t2384 * t2439;
t2318 = t2352 + t2344;
t2351 = t2380 * t2439;
t2321 = -t2351 - t2412;
t2447 = t2318 * t2384 + t2321 * t2380;
t2319 = -t2352 + t2344;
t2320 = t2351 - t2412;
t2446 = -t2319 * t2384 + t2320 * t2380;
t2445 = t2332 * t2384 - t2541;
t2346 = t2504 - t2515;
t2444 = t2346 * t2384 + t2543;
t2443 = t2348 * t2380 + t2542;
t2347 = -t2504 + t2514;
t2442 = t2347 * t2380 + t2540;
t2440 = t2362 * t2385 - t2381 * t2363;
t2241 = t2379 * t2435 - t2494;
t2437 = t2241 * t2380 + t2516;
t2243 = t2383 * t2289 + t2495;
t2436 = t2243 * t2380 - t2516;
t2429 = pkin(3) * t2177 + pkin(10) * t2132 - t2566;
t2428 = pkin(3) * t2181 + pkin(10) * t2140 + t2567;
t1760 = qJ(5) * t1797 + (t2511 - t2590) * t1911;
t1771 = -qJ(5) * t1796 + (pkin(5) * t2374 - t2586) * t1911;
t1725 = -pkin(10) * t1758 - t1760 * t2378 + t1771 * t2382;
t1738 = -pkin(3) * t1758 - t2503;
t1754 = t1759 * t2379 - t1911 * t2383;
t1708 = -pkin(9) * t1754 + t1725 * t2383 - t1738 * t2379;
t2404 = -pkin(3) * t1911 + pkin(10) * t1759 + t1760 * t2382 + t1771 * t2378;
t1716 = -pkin(2) * t1754 - t2404;
t1734 = t1755 * t2384 + t1758 * t2380;
t2427 = pkin(8) * t1734 + t1708 * t2380 + t1716 * t2384;
t1798 = -pkin(4) * t2016 + qJ(5) * t1804;
t1742 = -pkin(10) * t1769 - qJ(5) * t2577 - t1798 * t2378;
t1751 = -pkin(3) * t1769 - t2594;
t1762 = t1770 * t2379 - t2016 * t2383;
t1719 = -pkin(9) * t1762 + t1742 * t2383 - t1751 * t2379;
t2396 = -pkin(3) * t2016 + pkin(10) * t1770 - qJ(5) * t2578 + t1798 * t2382;
t1729 = -pkin(2) * t1762 - t2396;
t1741 = t1763 * t2384 + t1769 * t2380;
t2426 = pkin(8) * t1741 + t1719 * t2380 + t1729 * t2384;
t1849 = -pkin(5) * t2120 + t1853;
t1850 = -qJ(6) * t2120 + t1856;
t1779 = t1849 * t2376 + t1850 * t2374 + t2664;
t1780 = -t1849 * t2374 + t1850 * t2376 - t2652;
t1746 = -t1779 * t2378 + t1780 * t2382 - t2675;
t1823 = -t2501 - t2677;
t1737 = t1746 * t2383 - t1823 * t2379 - t2703;
t2403 = t1779 * t2382 + t1780 * t2378 + t2659;
t1744 = -t2403 - t2704;
t2425 = t1737 * t2380 + t1744 * t2384 + t2726;
t1793 = t1804 + t2664;
t1795 = -t1803 - t2652;
t1753 = -t1793 * t2378 + t1795 * t2382 - t2675;
t1854 = -t2593 - t2677;
t1745 = t1753 * t2383 - t1854 * t2379 - t2703;
t2402 = t1793 * t2382 + t1795 * t2378 + t2659;
t1747 = -t2402 - t2704;
t2424 = t1745 * t2380 + t1747 * t2384 + t2726;
t2388 = 0.2e1 * qJD(6) * t2262 - t2389;
t1875 = -pkin(5) * t2550 + t2388 + t2651;
t1824 = -t2723 + t1875 * t2374 + (pkin(4) + t2590) * t2620;
t1847 = -pkin(5) * t2570 + t1875 * t2376 - t2724;
t1777 = -t1824 * t2378 + t1847 * t2382 - t2757;
t2254 = 0.2e1 * t2581;
t2407 = t2484 + t2619 + t2727;
t1801 = t2254 - t2407 - 0.2e1 * t2579 - t2758;
t1750 = t1777 * t2383 - t1801 * t2379 + t2771;
t2401 = t1824 * t2382 + t1847 * t2378 + t2748;
t1764 = -t2401 + t2772;
t2423 = t1750 * t2380 + t1764 * t2384 - t2779;
t1876 = (-t2433 - t2550) * pkin(5) + t2388;
t1825 = t1876 * t2376 + t2433 * t2511 + t2674;
t1848 = -t1876 * t2374 - t2433 * t2586 - t2673;
t1778 = -t1825 * t2378 + t1848 * t2382 - t2702;
t1805 = t1856 + t2618 + t2691;
t1752 = t1778 * t2383 - t1805 * t2379 - t2725;
t2400 = t1825 * t2382 + t1848 * t2378 + t2689;
t1767 = -t2400 - t2728;
t2422 = t1752 * t2380 + t1767 * t2384 + t2740;
t1912 = -pkin(4) * t2433 - t2574 + t2674;
t1946 = t2575 - t2673;
t1810 = -t1912 * t2378 + t1946 * t2382 - t2702;
t1813 = t1867 + t2691;
t1766 = t1810 * t2383 - t1813 * t2379 - t2725;
t2399 = t1912 * t2382 + t1946 * t2378 + t2689;
t1788 = -t2399 - t2728;
t2421 = t1766 * t2380 + t1788 * t2384 + t2740;
t1915 = -pkin(4) * t2620 + t2575 + t2723;
t1949 = t2574 + t2724;
t1816 = -t1915 * t2378 + t1949 * t2382 + t2757;
t1822 = t2253 - t2502 + t2758;
t1772 = t1816 * t2383 - t1822 * t2379 - t2771;
t2398 = t1915 * t2382 + t1949 * t2378 - t2748;
t1794 = -t2398 - t2772;
t2420 = t1772 * t2380 + t1794 * t2384 + t2779;
t1895 = t1923 * t2379 - t2105 * t2383;
t1802 = -pkin(9) * t1895 + (-pkin(10) * t2383 + t2595) * t1922;
t1821 = -pkin(2) * t1895 - t2498;
t1838 = t1896 * t2384 + t1922 * t2380;
t2419 = pkin(8) * t1838 + t1802 * t2380 + t1821 * t2384;
t1890 = -pkin(10) * t2056 - t1922;
t2027 = t2058 * t2379 + t2211 * t2383;
t1851 = -pkin(9) * t2027 + t1890 * t2383 + t2056 * t2595;
t2410 = pkin(3) * t2211 + pkin(10) * t2058 + t1923;
t1857 = -pkin(2) * t2027 - t2410;
t1963 = t2028 * t2384 + t2056 * t2380;
t2418 = pkin(8) * t1963 + t1851 * t2380 + t1857 * t2384;
t1971 = -pkin(3) * t2131 + t2014;
t2017 = -pkin(10) * t2131 + t2567;
t2039 = t2132 * t2379 + t2177 * t2383;
t1869 = -pkin(9) * t2039 - t1971 * t2379 + t2017 * t2383;
t1924 = -pkin(2) * t2039 - t2429;
t2007 = t2040 * t2384 + t2131 * t2380;
t2417 = pkin(8) * t2007 + t1869 * t2380 + t1924 * t2384;
t1972 = -pkin(3) * t2139 + t2015;
t2020 = -pkin(10) * t2139 + t2566;
t2047 = t2140 * t2379 + t2181 * t2383;
t1870 = -pkin(9) * t2047 - t1972 * t2379 + t2020 * t2383;
t1925 = -pkin(2) * t2047 - t2428;
t2009 = t2048 * t2384 + t2139 * t2380;
t2416 = pkin(8) * t2009 + t1870 * t2380 + t1925 * t2384;
t2207 = t2294 * t2379 + t2623;
t2094 = -pkin(2) * t2207 + t2163;
t2146 = -pkin(9) * t2207 + t2559;
t2154 = t2208 * t2384 + t2380 * t2638;
t2415 = pkin(8) * t2154 + t2094 * t2384 + t2146 * t2380;
t2214 = t2301 * t2383 + t2555;
t2097 = -pkin(2) * t2214 + t2164;
t2155 = -pkin(9) * t2214 + t2558;
t2156 = t2215 * t2384 - t2250 * t2380;
t2414 = pkin(8) * t2156 + t2097 * t2384 + t2155 * t2380;
t2271 = t2319 * t2380 + t2320 * t2384;
t2413 = pkin(8) * t2271 + t2212;
t2183 = t2248 * t2379 - t2249 * t2383;
t2012 = -pkin(9) * t2183 - t2049;
t2122 = t2185 * t2384 - t2275 * t2380;
t2411 = pkin(8) * t2122 + t2012 * t2380 - t2183 * t2596;
t2025 = t2050 * t2384 + t2237 * t2380;
t2409 = pkin(8) * t2025 + t2049 * t2500;
t2255 = -0.2e1 * t2580;
t2394 = -t2188 * t2262 + t2255 - t2430 - t2618;
t2370 = t2375 * t2371;
t2359 = t2381 * qJDD(1) + t2385 * t2601;
t2356 = t2377 * t2367;
t2350 = t2528 * t2539;
t2349 = (t2372 - t2373) * t2539;
t2345 = -pkin(7) * t2359 + g(3) * t2385;
t2324 = t2510 * t2528 * t2585;
t2317 = (t2509 * t2582 + t2526) * t2375;
t2314 = t2384 * t2344 - t2372 * t2439;
t2313 = (-t2373 * t2486 + t2380 * t2432) * t2375;
t2306 = t2347 * t2384 - t2541;
t2305 = -t2346 * t2380 + t2542;
t2293 = (t2377 * t2344 + (qJD(2) * t2377 * t2375 + (t2375 * t2377 ^ 2 + t2370) * qJD(1)) * t2582) * t2380;
t2292 = t2344 * t2537 + t2485;
t2291 = -t2371 * t2384 * t2432 - t2485;
t2290 = -t2370 * t2513 + (-t2509 * t2583 + t2527) * t2375 * t2534;
t2273 = t2496 + t2493;
t2272 = -t2318 * t2380 + t2321 * t2384;
t2268 = t2321 * t2375 + t2377 * t2443;
t2267 = -t2320 * t2375 + t2377 * t2442;
t2266 = -t2319 * t2375 + t2377 * t2444;
t2265 = -t2321 * t2377 + t2375 * t2443;
t2264 = t2320 * t2377 + t2375 * t2442;
t2263 = t2319 * t2377 + t2375 * t2444;
t2245 = -t2317 * t2375 + t2377 * t2445;
t2244 = t2317 * t2377 + t2375 * t2445;
t2242 = t2379 * t2289 - t2493;
t2240 = -t2383 * t2435 - t2496;
t2239 = t2384 * t2274 + t2380 * t2405;
t2236 = -t2349 * t2375 + t2377 * t2447;
t2235 = t2350 * t2375 + t2377 * t2446;
t2234 = t2349 * t2377 + t2375 * t2447;
t2233 = -t2350 * t2377 + t2375 * t2446;
t2226 = t2315 * t2379 - t2554;
t2225 = t2316 * t2383 + t2625;
t2197 = t2243 * t2384 + t2517;
t2196 = t2241 * t2384 - t2517;
t2195 = t2325 * t2375 + t2377 * t2448;
t2194 = -t2325 * t2377 + t2375 * t2448;
t2187 = -t2375 * t2273 + t2377 * t2637;
t2186 = t2377 * t2273 + t2375 * t2637;
t2182 = t2251 * t2383 - t2379 * t2638;
t2170 = t2205 * t2379 - t2283;
t2166 = t2228 * t2384 - t2246 * t2380;
t2165 = t2227 * t2384 + t2249 * t2380;
t2157 = -t2552 + (-t2265 * t2375 - t2268 * t2377) * pkin(8);
t2153 = -t2551 + (-t2244 * t2375 - t2245 * t2377) * pkin(8);
t2152 = -pkin(1) * t2265 + t2295 * t2375 + t2377 * t2487;
t2151 = pkin(1) * t2268 - t2295 * t2377 + t2375 * t2487;
t2135 = t2184 * t2384 + t2300 * t2380;
t2134 = -pkin(1) * t2244 + t2296 * t2375 + t2377 * t2488;
t2133 = pkin(1) * t2245 - t2296 * t2377 + t2375 * t2488;
t2130 = -t2242 * t2375 + t2377 * t2436;
t2129 = -t2240 * t2375 + t2377 * t2437;
t2128 = t2242 * t2377 + t2375 * t2436;
t2127 = t2240 * t2377 + t2375 * t2437;
t2117 = pkin(1) * t2195 + t2212 * t2589;
t2116 = pkin(8) * t2212 * t2377 - pkin(1) * t2194;
t2113 = t2175 * t2379 - t2518;
t2112 = t2173 * t2379 + t2518;
t2108 = -pkin(1) * t2233 + t2377 * t2413;
t2107 = pkin(1) * t2235 + t2375 * t2413;
t2104 = pkin(2) * t2250 + pkin(9) * t2215 + t2559;
t2102 = -t2226 * t2375 + t2377 * t2449;
t2101 = -t2225 * t2375 + t2377 * t2450;
t2100 = t2226 * t2377 + t2375 * t2449;
t2099 = t2225 * t2377 + t2375 * t2450;
t2098 = (-t2194 * t2375 - t2195 * t2377) * pkin(8);
t2096 = -pkin(2) * t2638 + pkin(9) * t2208 - t2558;
t2095 = (-t2233 * t2375 - t2235 * t2377) * pkin(8) - t2448;
t2093 = -t2214 * t2375 + t2377 * t2451;
t2092 = t2214 * t2377 + t2375 * t2451;
t2091 = t2171 * t2384 + t2204 * t2380;
t2082 = -t2207 * t2375 + t2377 * t2452;
t2081 = t2207 * t2377 + t2375 * t2452;
t2052 = t2161 * t2379 - t2383 * t2390;
t2051 = t2160 * t2379 - t2180 * t2383;
t2046 = -t2182 * t2375 + t2377 * t2454;
t2045 = t2182 * t2377 + t2375 * t2454;
t2038 = -t2183 * t2375 + t2377 * t2453;
t2037 = t2183 * t2377 + t2375 * t2453;
t2031 = t2057 * t2379 - t2269 * t2383;
t2030 = t2115 * t2384 + t2174 * t2380;
t2029 = t2114 * t2384 - t2172 * t2380;
t2026 = -pkin(2) * t2237 + pkin(9) * t2050;
t2019 = -t2170 * t2375 + t2377 * t2455;
t2018 = t2170 * t2377 + t2375 * t2455;
t2011 = t2054 * t2384 + t2159 * t2380;
t2010 = t2053 * t2384 + t2158 * t2380;
t2008 = pkin(2) * t2275 + pkin(9) * t2185 + t2050;
t1976 = -t2113 * t2375 + t2377 * t2456;
t1975 = -t2112 * t2375 + t2377 * t2457;
t1974 = t2113 * t2377 + t2375 * t2456;
t1973 = t2112 * t2377 + t2375 * t2457;
t1968 = t2032 * t2384 + t2055 * t2380;
t1951 = -t2049 * t2375 + t2377 * t2460;
t1950 = t2049 * t2377 + t2375 * t2460;
t1945 = -t2052 * t2375 + t2377 * t2458;
t1944 = -t2051 * t2375 + t2377 * t2459;
t1943 = t2052 * t2377 + t2375 * t2458;
t1942 = t2051 * t2377 + t2375 * t2459;
t1933 = -t2047 * t2375 + t2377 * t2461;
t1932 = t2047 * t2377 + t2375 * t2461;
t1927 = -t2039 * t2375 + t2377 * t2462;
t1926 = t2039 * t2377 + t2375 * t2462;
t1921 = -t2097 * t2380 + t2155 * t2384 + (-t2092 * t2375 - t2093 * t2377) * pkin(8);
t1916 = -t2094 * t2380 + t2146 * t2384 + (-t2081 * t2375 - t2082 * t2377) * pkin(8);
t1914 = -t2031 * t2375 + t2377 * t2463;
t1913 = t2031 * t2377 + t2375 * t2463;
t1910 = -pkin(1) * t2092 - t2104 * t2375 + t2377 * t2414;
t1909 = pkin(1) * t2093 + t2104 * t2377 + t2375 * t2414;
t1908 = -t2027 * t2375 + t2377 * t2464;
t1907 = t2027 * t2377 + t2375 * t2464;
t1906 = -pkin(1) * t2081 - t2096 * t2375 + t2377 * t2415;
t1905 = pkin(1) * t2082 + t2096 * t2377 + t2375 * t2415;
t1881 = t2183 * t2597 + t2012 * t2384 + (-t2037 * t2375 - t2038 * t2377) * pkin(8);
t1863 = -pkin(2) * t2139 + pkin(9) * t2048 + t1972 * t2383 + t2020 * t2379;
t1862 = -pkin(2) * t2131 + pkin(9) * t2040 + t1971 * t2383 + t2017 * t2379;
t1859 = -pkin(1) * t2037 - t2008 * t2375 + t2377 * t2411;
t1858 = pkin(1) * t2038 + t2008 * t2377 + t2375 * t2411;
t1837 = t2499 * t2049 + (-t1950 * t2375 - t1951 * t2377) * pkin(8);
t1836 = -pkin(1) * t1950 - t2026 * t2375 + t2377 * t2409;
t1835 = pkin(1) * t1951 + t2026 * t2377 + t2375 * t2409;
t1834 = pkin(9) * t2028 + t1890 * t2379 + t2056 * t2524;
t1800 = -t1895 * t2375 + t2377 * t2477;
t1799 = t1895 * t2377 + t2375 * t2477;
t1783 = pkin(9) * t1896 + (-pkin(10) * t2379 + t2524) * t1922;
t1782 = t1870 * t2384 - t1925 * t2380 + (-t1932 * t2375 - t1933 * t2377) * pkin(8);
t1781 = t1869 * t2384 - t1924 * t2380 + (-t1926 * t2375 - t1927 * t2377) * pkin(8);
t1776 = -pkin(1) * t1932 - t1863 * t2375 + t2377 * t2416;
t1775 = pkin(1) * t1933 + t1863 * t2377 + t2375 * t2416;
t1774 = -pkin(1) * t1926 - t1862 * t2375 + t2377 * t2417;
t1773 = pkin(1) * t1927 + t1862 * t2377 + t2375 * t2417;
t1768 = t1851 * t2384 - t1857 * t2380 + (-t1907 * t2375 - t1908 * t2377) * pkin(8);
t1765 = t1816 * t2379 + t1822 * t2383 - t2764;
t1761 = t1810 * t2379 + t1813 * t2383 + t2716;
t1757 = -pkin(1) * t1907 - t1834 * t2375 + t2377 * t2418;
t1756 = pkin(1) * t1908 + t1834 * t2377 + t2375 * t2418;
t1749 = t1778 * t2379 + t1805 * t2383 + t2716;
t1748 = t1777 * t2379 + t1801 * t2383 + t2764;
t1743 = t1802 * t2384 - t1821 * t2380 + (-t1799 * t2375 - t1800 * t2377) * pkin(8);
t1740 = t1753 * t2379 + t1854 * t2383 + t2690;
t1739 = t1772 * t2384 - t1794 * t2380 - t2789;
t1736 = -pkin(1) * t1799 - t1783 * t2375 + t2377 * t2419;
t1735 = pkin(1) * t1800 + t1783 * t2377 + t2375 * t2419;
t1733 = t1746 * t2379 + t1823 * t2383 + t2690;
t1732 = t1766 * t2384 - t1788 * t2380 + t2743;
t1731 = -t1762 * t2375 + t2377 * t2482;
t1730 = t1762 * t2377 + t2375 * t2482;
t1728 = -t1765 * t2375 + t2377 * t2420 - t2788;
t1727 = t1765 * t2377 + t2375 * t2420 + t2787;
t1726 = t1752 * t2384 - t1767 * t2380 + t2743;
t1724 = t1750 * t2384 - t1764 * t2380 + t2789;
t1723 = -t1761 * t2375 + t2377 * t2421 - t2760;
t1722 = t1761 * t2377 + t2375 * t2421 + t2761;
t1721 = -t1754 * t2375 + t2377 * t2483;
t1720 = t1754 * t2377 + t2375 * t2483;
t1718 = -t1749 * t2375 + t2377 * t2422 - t2760;
t1717 = t1749 * t2377 + t2375 * t2422 + t2761;
t1715 = t1745 * t2384 - t1747 * t2380 + t2729;
t1714 = -t1748 * t2375 + t2377 * t2423 + t2788;
t1713 = t1748 * t2377 + t2375 * t2423 - t2787;
t1712 = -pkin(2) * t1769 + pkin(9) * t1763 + t1742 * t2379 + t1751 * t2383;
t1711 = t1737 * t2384 - t1744 * t2380 + t2729;
t1710 = -t1740 * t2375 + t2377 * t2424 - t2741;
t1709 = t1740 * t2377 + t2375 * t2424 + t2742;
t1707 = -t1733 * t2375 + t2377 * t2425 - t2741;
t1706 = t1733 * t2377 + t2375 * t2425 + t2742;
t1705 = -pkin(2) * t1758 + pkin(9) * t1755 + t1725 * t2379 + t1738 * t2383;
t1704 = t1719 * t2384 - t1729 * t2380 + (-t1730 * t2375 - t1731 * t2377) * pkin(8);
t1703 = -pkin(1) * t1730 - t1712 * t2375 + t2377 * t2426;
t1702 = pkin(1) * t1731 + t1712 * t2377 + t2375 * t2426;
t1701 = t1708 * t2384 - t1716 * t2380 + (-t1720 * t2375 - t1721 * t2377) * pkin(8);
t1700 = -pkin(1) * t1720 - t1705 * t2375 + t2377 * t2427;
t1699 = pkin(1) * t1721 + t1705 * t2377 + t2375 * t2427;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2360, 0, -t2359, 0, t2497, -t2345, -t2440, -pkin(7) * t2440, -t2381 * t2293 + t2314 * t2385, -t2381 * t2236 + t2272 * t2385, -t2381 * t2266 + t2305 * t2385, -t2381 * t2290 + t2313 * t2385, -t2381 * t2267 + t2306 * t2385, t2324 * t2385 + t2381 * t2538, t2385 * t2157 - t2381 * t2152 - pkin(7) * (t2268 * t2385 + t2381 * t2307), t2385 * t2153 - t2381 * t2134 - pkin(7) * (t2245 * t2385 + t2381 * t2297), t2385 * t2095 - t2381 * t2108 - pkin(7) * (t2235 * t2385 + t2381 * t2271), t2385 * t2098 - t2381 * t2116 - pkin(7) * (t2195 * t2385 + t2381 * t2212), -t2381 * t2130 + t2197 * t2385, -t2381 * t2046 + t2135 * t2385, -t2381 * t2101 + t2165 * t2385, -t2381 * t2129 + t2196 * t2385, -t2381 * t2102 + t2166 * t2385, -t2381 * t2187 + t2239 * t2385, t2385 * t1916 - t2381 * t1906 - pkin(7) * (t2082 * t2385 + t2381 * t2154), t2385 * t1921 - t2381 * t1910 - pkin(7) * (t2093 * t2385 + t2381 * t2156), t2385 * t1881 - t2381 * t1859 - pkin(7) * (t2038 * t2385 + t2381 * t2122), t2385 * t1837 - t2381 * t1836 - pkin(7) * (t1951 * t2385 + t2381 * t2025), -t2381 * t1976 + t2030 * t2385, -t2381 * t1914 + t1968 * t2385, -t2381 * t1944 + t2010 * t2385, -t2381 * t1975 + t2029 * t2385, -t2381 * t1945 + t2011 * t2385, -t2381 * t2019 + t2091 * t2385, t2385 * t1781 - t2381 * t1774 - pkin(7) * (t1927 * t2385 + t2381 * t2007), t2385 * t1782 - t2381 * t1776 - pkin(7) * (t1933 * t2385 + t2381 * t2009), t2385 * t1768 - t2381 * t1757 - pkin(7) * (t1908 * t2385 + t2381 * t1963), t2385 * t1743 - t2381 * t1736 - pkin(7) * (t1800 * t2385 + t2381 * t1838), t2627, -t2786, t2763, t2710, t2782, t2711, -t2381 * t1723 + t2385 * t1732 - t2744, -t2381 * t1728 + t2385 * t1739 - t2791, -t2381 * t1710 + t2385 * t1715 - t2730, t2385 * t1704 - t2381 * t1703 - pkin(7) * (t1731 * t2385 + t2381 * t1741), t2627, t2763, t2786, t2711, -t2782, t2710, -t2381 * t1718 + t2385 * t1726 - t2744, -t2381 * t1707 + t2385 * t1711 - t2730, -t2381 * t1714 + t2385 * t1724 + t2791, t2385 * t1701 - t2381 * t1700 - pkin(7) * (t1721 * t2385 + t2381 * t1734); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2359, 0, t2360, 0, t2345, t2497, t2505, pkin(7) * t2505, t2293 * t2385 + t2381 * t2314, t2236 * t2385 + t2381 * t2272, t2266 * t2385 + t2381 * t2305, t2290 * t2385 + t2381 * t2313, t2267 * t2385 + t2381 * t2306, t2381 * t2324 - t2385 * t2538, t2381 * t2157 + t2385 * t2152 + pkin(7) * (-t2381 * t2268 + t2307 * t2385), t2381 * t2153 + t2385 * t2134 + pkin(7) * (-t2381 * t2245 + t2297 * t2385), t2381 * t2095 + t2385 * t2108 + pkin(7) * (-t2381 * t2235 + t2271 * t2385), t2381 * t2098 + t2385 * t2116 + pkin(7) * (-t2381 * t2195 + t2212 * t2385), t2130 * t2385 + t2381 * t2197, t2046 * t2385 + t2381 * t2135, t2101 * t2385 + t2381 * t2165, t2129 * t2385 + t2381 * t2196, t2102 * t2385 + t2381 * t2166, t2187 * t2385 + t2381 * t2239, t2381 * t1916 + t2385 * t1906 + pkin(7) * (-t2381 * t2082 + t2154 * t2385), t2381 * t1921 + t2385 * t1910 + pkin(7) * (-t2381 * t2093 + t2156 * t2385), t2381 * t1881 + t2385 * t1859 + pkin(7) * (-t2381 * t2038 + t2122 * t2385), t2381 * t1837 + t2385 * t1836 + pkin(7) * (-t2381 * t1951 + t2025 * t2385), t1976 * t2385 + t2381 * t2030, t1914 * t2385 + t2381 * t1968, t1944 * t2385 + t2381 * t2010, t1975 * t2385 + t2381 * t2029, t1945 * t2385 + t2381 * t2011, t2019 * t2385 + t2381 * t2091, t2381 * t1781 + t2385 * t1774 + pkin(7) * (-t2381 * t1927 + t2007 * t2385), t2381 * t1782 + t2385 * t1776 + pkin(7) * (-t2381 * t1933 + t2009 * t2385), t2381 * t1768 + t2385 * t1757 + pkin(7) * (-t2381 * t1908 + t1963 * t2385), t2381 * t1743 + t2385 * t1736 + pkin(7) * (-t2381 * t1800 + t1838 * t2385), t2628, t2785, t2762, t2706, -t2781, t2707, t2385 * t1723 + t2381 * t1732 + t2745, t2385 * t1728 + t2381 * t1739 - t2790, t2385 * t1710 + t2381 * t1715 + t2731, t2381 * t1704 + t2385 * t1703 + pkin(7) * (-t2381 * t1731 + t1741 * t2385), t2628, t2762, -t2785, t2707, t2781, t2706, t2385 * t1718 + t2381 * t1726 + t2745, t2385 * t1707 + t2381 * t1711 + t2731, t2385 * t1714 + t2381 * t1724 + t2790, t2381 * t1701 + t2385 * t1700 + pkin(7) * (-t2381 * t1721 + t1734 * t2385); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2362, t2363, 0, 0, t2292, t2234, t2263, t2291, t2264, t2356, t2151, t2133, t2107, t2117, t2128, t2045, t2099, t2127, t2100, t2186, t1905, t1909, t1858, t1835, t1974, t1913, t1942, t1973, t1943, t2018, t1773, t1775, t1756, t1735, t2603, t1790, t2747, t2688, -t1828, t2687, t1722, t1727, t1709, t1702, t2603, t2747, -t1790, t2687, t1828, t2688, t1717, t1706, t1713, t1699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2601, 0, 0, -g(3), -t2362, 0, t2314, t2272, t2305, t2313, t2306, t2324, t2157, t2153, t2095, t2098, t2197, t2135, t2165, t2196, t2166, t2239, t1916, t1921, t1881, t1837, t2030, t1968, t2010, t2029, t2011, t2091, t1781, t1782, t1768, t1743, t2608, t1815, t2732, t2660, -t1873, t2661, t1732, t1739, t1715, t1704, t2608, t2732, -t1815, t2661, t1873, t2660, t1726, t1711, t1724, t1701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2601, 0, qJDD(1), 0, g(3), 0, -t2363, 0, t2293, t2236, t2266, t2290, t2267, -t2538, t2152, t2134, t2108, t2116, t2130, t2046, t2101, t2129, t2102, t2187, t1906, t1910, t1859, t1836, t1976, t1914, t1944, t1975, t1945, t2019, t1774, t1776, t1757, t1736, t2602, t1792, t2746, t2686, -t1832, t2685, t1723, t1728, t1710, t1703, t2602, t2746, -t1792, t2685, t1832, t2686, t1718, t1707, t1714, t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2362, t2363, 0, 0, t2292, t2234, t2263, t2291, t2264, t2356, t2151, t2133, t2107, t2117, t2128, t2045, t2099, t2127, t2100, t2186, t1905, t1909, t1858, t1835, t1974, t1913, t1942, t1973, t1943, t2018, t1773, t1775, t1756, t1735, t2603, t1790, t2747, t2688, -t1828, t2687, t1722, t1727, t1709, t1702, t2603, t2747, -t1790, t2687, t1828, t2688, t1717, t1706, t1713, t1699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2344, t2321, t2341, -t2352, t2347, t2352, 0, -t2325, t2295, 0, t2243, t2184, t2227, t2241, t2228, t2274, t2146, t2155, t2012, -pkin(9) * t2049, t2115, t2032, t2053, t2114, t2054, t2171, t1869, t1870, t1851, t1802, t2491, t1889, t2709, t2632, -t1940, t2631, t1766, t1772, t1745, t1719, t2491, t2709, -t1889, t2631, t1940, t2632, t1752, t1737, t1750, t1708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2351, t2318, t2346, -t2412, t2342, -t2351, t2325, 0, t2296, 0, -t2544, -t2300, -t2249, t2544, t2246, -t2405, t2094, t2097, -pkin(2) * t2183, -pkin(2) * t2049, -t2174, -t2055, -t2158, t2172, -t2159, -t2204, t1924, t1925, t1857, t1821, -t1983, -t1898, -t2680, -t2604, -t2002, -t2607, t1788, t1794, t1747, t1729, -t1983, -t2680, t1898, -t2607, t2002, -t2604, t1767, t1744, t1764, t1716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2361, t2349, t2319, t2361, t2320, t2367, -t2295, -t2296, 0, 0, t2242, t2182, t2225, t2240, t2226, t2273, t2096, t2104, t2008, t2026, t2113, t2031, t2051, t2112, t2052, t2170, t1862, t1863, t1834, t1783, t2492, t1887, t2713, t2633, -t1936, t2635, t1761, t1765, t1740, t1712, t2492, t2713, -t1887, t2635, t1936, t2633, t1749, t1733, t1748, t1705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2289, -t2638, t2395, -t2322, t2315, t2322, 0, t2237, t2163, 0, t2175, t2057, t2160, t2173, t2161, t2205, t2017, t2020, t1890, -pkin(10) * t1922, t1986, t1902, t2679, t2605, -t2005, t2606, t1810, t1816, t1753, t1742, t1986, t2679, -t1902, t2606, t2005, t2605, t1778, t1746, t1777, t1725; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2323, t2251, t2316, -t2435, -t2279, t2323, -t2237, 0, t2164, 0, -t2270, -t2269, -t2180, t2270, -t2390, -t2287, t1971, t1972, -pkin(3) * t2056, -pkin(3) * t1922, -t2556, -t2616, -t2612, t2556, -t2434, -t2287, t1813, t1822, t1854, t1751, -t2556, -t2612, t2616, -t2287, t2434, t2556, t1805, t1823, t1801, t1738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2544, t2300, t2249, -t2544, -t2246, t2405, -t2163, -t2164, 0, 0, t2174, t2055, t2158, -t2172, t2159, t2204, t2429, t2428, t2410, t2498, t1983, t1898, t2680, t2604, t2002, t2607, t2399, t2398, t2402, t2396, t1983, t2680, -t1898, t2607, -t2002, t2604, t2400, t2403, t2401, t2404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2210, t2177, t2615, t2282, t2277, -t2282, 0, t2105, t2014, 0, t2064, t1996, t2666, t2438, t2090, t2489, t1946, t1949, t1795, -qJ(5) * t1803, t2064, t2666, -t1996, t2489, -t2090, t2438, t1848, t1780, t1847, t1771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2549, t2179, t2278, -t2392, t2199, -t2549, -t2105, 0, t2015, 0, t2063, t1992, t2665, t2490, t2086, t2431, t1912, t1915, t1793, t1798, t2063, t2665, -t1992, t2431, -t2086, t2490, t1825, t1779, t1824, t1760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2270, t2269, t2180, -t2270, t2390, t2287, -t2014, -t2015, 0, 0, t2556, t2616, t2612, -t2556, t2434, t2287, t2255 - t2508 + t2676, t2254 + t2502, t2593, t2594, t2556, t2612, -t2616, t2287, -t2434, -t2556, t2394 + t2676, t2501, t2407 + t2617, t2503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, -t2433, t2613, t2557, t2218, -t2557, 0, t2016, t1867, 0, t2126, t2613, t2433, -t2557, -t2218, t2557, -qJ(6) * t2433, t1850, t1875, -qJ(6) * t1911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2550, t2620, -t2219, -t2125, t2614, -t2550, -t2016, 0, t1868, 0, t2550, -t2219, -t2620, -t2550, -t2614, -t2125, t1876, t1849, pkin(5) * t2620, -pkin(5) * t1911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2556, t2616, t2612, -t2556, t2434, t2287, -t1867, -t1868, 0, 0, t2556, t2612, -t2616, t2287, -t2434, -t2556, t2394, t2530, t1853 + t2619, t2532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, t2613, t2433, -t2557, -t2218, t2557, 0, t1856, -t1911, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2556, t2612, -t2616, t2287, -t2434, -t2556, -t1856, 0, t1853, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2550, t2219, t2620, t2550, t2614, t2125, t1911, -t1853, 0, 0;];
m_new_reg  = t1;
