% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,theta5]';
% 
% Output:
% tauc_reg [6x30]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP7_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPP7_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:26:31
% EndTime: 2019-03-09 21:26:58
% DurationCPUTime: 10.36s
% Computational Cost: add. (15631->566), mult. (40698->774), div. (0->0), fcn. (31487->10), ass. (0->257)
t266 = sin(pkin(6));
t274 = cos(qJ(2));
t341 = qJD(1) * t274;
t321 = t266 * t341;
t242 = -qJD(3) + t321;
t271 = sin(qJ(2));
t268 = cos(pkin(6));
t342 = qJD(1) * t268;
t328 = pkin(1) * t342;
t213 = pkin(8) * t321 + t271 * t328;
t270 = sin(qJ(3));
t273 = cos(qJ(3));
t412 = t213 + t242 * (pkin(3) * t270 - pkin(10) * t273);
t272 = cos(qJ(4));
t338 = qJD(3) * t270;
t269 = sin(qJ(4));
t392 = pkin(9) * t269;
t411 = -t272 * t412 + t338 * t392;
t343 = qJD(1) * t266;
t322 = t271 * t343;
t181 = t269 * t273 * t321 - t272 * t322;
t336 = qJD(3) * t273;
t406 = -t269 * t336 + t181;
t359 = t273 * t274;
t182 = (t269 * t271 + t272 * t359) * t343;
t410 = -t272 * t336 + t182;
t210 = -pkin(8) * t322 + t274 * t328;
t289 = (pkin(2) * t271 - pkin(9) * t274) * t266;
t211 = qJD(1) * t289;
t349 = t273 * t210 + t270 * t211;
t135 = pkin(10) * t322 + t349;
t241 = -pkin(3) * t273 - pkin(10) * t270 - pkin(2);
t333 = qJD(4) * t272;
t409 = t272 * t135 - t241 * t333 + t269 * t412;
t360 = t272 * t273;
t255 = pkin(9) * t360;
t300 = t270 * t321;
t332 = t272 * qJD(5);
t393 = pkin(4) * t270;
t408 = -pkin(4) * t300 + qJ(5) * t182 + t135 * t269 - t270 * t332 + (-qJ(5) * t360 + t393) * qJD(3) + (-t255 + (qJ(5) * t270 - t241) * t269) * qJD(4) + t411;
t362 = t270 * t272;
t407 = qJ(5) * t181 + (-pkin(9) * qJD(3) - qJ(5) * qJD(4)) * t362 + (-qJD(5) * t270 + (-pkin(9) * qJD(4) - qJ(5) * qJD(3)) * t273) * t269 - t409;
t304 = qJD(2) + t342;
t403 = -t270 * t322 + t273 * t304;
t188 = qJD(4) - t403;
t194 = t270 * t304 + t273 * t322;
t149 = t194 * t269 + t272 * t242;
t151 = t194 * t272 - t242 * t269;
t265 = sin(pkin(11));
t267 = cos(pkin(11));
t92 = t267 * t149 + t151 * t265;
t405 = t188 * t92;
t226 = t265 * t272 + t267 * t269;
t217 = t226 * qJD(4);
t404 = -t226 * t403 + t217;
t225 = t265 * t269 - t267 * t272;
t335 = qJD(4) * t269;
t354 = -t225 * t403 + t265 * t335 - t267 * t333;
t334 = qJD(4) * t270;
t353 = t267 * t181 + t182 * t265 + t225 * t334 - t226 * t336;
t352 = t217 * t270 - t406 * t265 + t410 * t267;
t402 = t300 - t338;
t292 = -t149 * t265 + t267 * t151;
t401 = t292 ^ 2;
t386 = -t407 * t265 + t408 * t267;
t385 = t408 * t265 + t407 * t267;
t176 = pkin(9) * t304 + t213;
t207 = (-pkin(2) * t274 - pkin(9) * t271 - pkin(1)) * t266;
t187 = qJD(1) * t207;
t121 = -t270 * t176 + t187 * t273;
t111 = pkin(3) * t242 - t121;
t81 = pkin(4) * t149 + qJD(5) + t111;
t37 = pkin(5) * t92 - qJ(6) * t292 + t81;
t400 = t37 * t292;
t390 = -qJ(5) - pkin(10);
t311 = qJD(4) * t390;
t216 = t269 * t311 + t332;
t280 = -t269 * qJD(5) + t272 * t311;
t138 = pkin(3) * t194 - pkin(10) * t403;
t137 = t272 * t138;
t61 = -qJ(5) * t272 * t403 + pkin(4) * t194 - t121 * t269 + t137;
t357 = t272 * t121 + t269 * t138;
t373 = t403 * t269;
t72 = -qJ(5) * t373 + t357;
t378 = (-t280 + t61) * t267 + (t216 - t72) * t265;
t399 = t271 * t274;
t367 = t266 * t271;
t252 = pkin(8) * t367;
t394 = pkin(1) * t274;
t205 = t252 + (-pkin(2) - t394) * t268;
t219 = -t268 * t273 + t270 * t367;
t220 = t268 * t270 + t273 * t367;
t130 = t219 * pkin(3) - t220 * pkin(10) + t205;
t366 = t266 * t274;
t330 = pkin(8) * t366;
t395 = pkin(1) * t271;
t206 = t330 + (pkin(9) + t395) * t268;
t350 = t273 * t206 + t270 * t207;
t132 = -pkin(10) * t366 + t350;
t356 = t269 * t130 + t272 * t132;
t307 = -t270 * t210 + t211 * t273;
t134 = -pkin(3) * t322 - t307;
t398 = -t406 * pkin(4) + pkin(9) * t336 + t333 * t393 - t134;
t122 = t273 * t176 + t270 * t187;
t397 = -t122 + (t335 - t373) * pkin(4);
t331 = qJD(1) * qJD(2);
t312 = t266 * t331;
t297 = t274 * t312;
t154 = qJD(3) * t194 + t270 * t297;
t153 = qJD(3) * t403 + t273 * t297;
t298 = t271 * t312;
t90 = qJD(4) * t151 + t269 * t153 - t272 * t298;
t396 = t188 ^ 2;
t275 = qJD(1) ^ 2;
t175 = -pkin(2) * t304 - t210;
t107 = -pkin(3) * t403 - t194 * pkin(10) + t175;
t112 = -pkin(10) * t242 + t122;
t68 = t107 * t269 + t112 * t272;
t55 = -qJ(5) * t149 + t68;
t49 = t267 * t55;
t67 = t272 * t107 - t112 * t269;
t54 = -qJ(5) * t151 + t67;
t25 = t265 * t54 + t49;
t391 = t25 * t292;
t212 = qJD(2) * t289;
t201 = qJD(1) * t212;
t214 = (t268 * t394 - t252) * qJD(2);
t202 = qJD(1) * t214;
t284 = -t176 * t338 + t187 * t336 + t270 * t201 + t273 * t202;
t79 = pkin(10) * t298 + t284;
t215 = (t268 * t395 + t330) * qJD(2);
t203 = qJD(1) * t215;
t88 = t154 * pkin(3) - t153 * pkin(10) + t203;
t28 = -qJD(4) * t68 - t269 * t79 + t272 * t88;
t89 = t272 * t153 - t194 * t335 - t242 * t333 + t269 * t298;
t13 = t154 * pkin(4) - t89 * qJ(5) - t151 * qJD(5) + t28;
t27 = t107 * t333 - t112 * t335 + t269 * t88 + t272 * t79;
t16 = -qJ(5) * t90 - qJD(5) * t149 + t27;
t3 = t267 * t13 - t265 * t16;
t4 = t265 * t13 + t267 * t16;
t319 = qJD(2) * t366;
t164 = -qJD(3) * t219 + t273 * t319;
t165 = t220 * t269 + t272 * t366;
t340 = qJD(2) * t271;
t320 = t266 * t340;
t106 = -qJD(4) * t165 + t164 * t272 + t269 * t320;
t163 = qJD(3) * t220 + t270 * t319;
t326 = t269 * t366;
t166 = t220 * t272 - t326;
t283 = -t206 * t338 + t207 * t336 + t270 * t212 + t273 * t214;
t83 = pkin(10) * t320 + t283;
t99 = t163 * pkin(3) - t164 * pkin(10) + t215;
t278 = -qJD(4) * t356 - t269 * t83 + t272 * t99;
t18 = t163 * pkin(4) - t106 * qJ(5) - t166 * qJD(5) + t278;
t105 = -qJD(4) * t326 + t164 * t269 + t220 * t333 - t272 * t320;
t286 = t130 * t333 - t132 * t335 + t269 * t99 + t272 * t83;
t24 = -qJ(5) * t105 - qJD(5) * t165 + t286;
t8 = t265 * t18 + t267 * t24;
t389 = qJ(6) * t402 + qJD(6) * t273 - t385;
t388 = -pkin(5) * t402 + t386;
t46 = pkin(4) * t188 + t54;
t23 = t265 * t46 + t49;
t363 = t269 * t270;
t209 = -t265 * t363 + t267 * t362;
t387 = pkin(5) * t353 - qJ(6) * t352 + qJD(6) * t209 - t398;
t310 = t272 * t130 - t132 * t269;
t59 = pkin(4) * t219 - qJ(5) * t166 + t310;
t69 = -qJ(5) * t165 + t356;
t34 = t265 * t59 + t267 * t69;
t36 = t265 * t61 + t267 * t72;
t384 = t265 * t55;
t302 = t176 * t336 + t187 * t338 - t273 * t201 + t270 * t202;
t80 = -pkin(3) * t298 + t302;
t383 = t80 * t269;
t382 = t80 * t272;
t381 = t89 * t269;
t380 = pkin(5) * t404 + qJ(6) * t354 - qJD(6) * t226 + t397;
t379 = pkin(5) * t194 + t378;
t146 = t267 * t216 + t265 * t280;
t31 = qJ(6) * t194 + t36;
t377 = t146 - t31;
t376 = t149 * t188;
t375 = t151 * t188;
t374 = t403 * t242;
t372 = t194 * t242;
t371 = t242 * t270;
t370 = t242 * t273;
t262 = t266 ^ 2;
t369 = t262 * t275;
t364 = t269 * t154;
t361 = t272 * t154;
t26 = t267 * t54 - t384;
t358 = qJD(6) - t26;
t228 = t272 * t241;
t158 = -qJ(5) * t362 + t228 + (-pkin(4) - t392) * t273;
t346 = t269 * t241 + t255;
t169 = -qJ(5) * t363 + t346;
t114 = t265 * t158 + t267 * t169;
t345 = pkin(4) * t363 + t270 * pkin(9);
t344 = t271 ^ 2 - t274 ^ 2;
t339 = qJD(2) * t273;
t337 = qJD(3) * t272;
t329 = t154 * qJ(6) + t4;
t323 = -pkin(4) * t272 - pkin(3);
t316 = t188 * t335;
t315 = t266 * t268 * t275;
t314 = t390 * t269;
t313 = t262 * t331;
t51 = t265 * t89 + t267 * t90;
t308 = -t270 * t206 + t207 * t273;
t306 = t188 * t272;
t305 = 0.2e1 * t313;
t303 = qJD(2) + 0.2e1 * t342;
t2 = -pkin(5) * t154 - t3;
t243 = t390 * t272;
t173 = -t243 * t265 - t267 * t314;
t174 = -t267 * t243 + t265 * t314;
t52 = -t265 * t90 + t267 * t89;
t299 = -t146 * t92 + t173 * t52 - t174 * t51;
t296 = -0.2e1 * pkin(1) * t313;
t294 = -t92 ^ 2 - t401;
t131 = pkin(3) * t366 - t308;
t7 = t18 * t267 - t24 * t265;
t22 = t267 * t46 - t384;
t33 = -t265 * t69 + t267 * t59;
t113 = t158 * t267 - t169 * t265;
t290 = -t206 * t336 - t207 * t338 + t212 * t273 - t270 * t214;
t288 = -t188 * t333 - t364;
t285 = -pkin(10) * t154 + t111 * t188;
t282 = pkin(4) * t165 + t131;
t281 = pkin(1) * (-t268 * t331 + t369);
t84 = -pkin(3) * t320 - t290;
t47 = pkin(4) * t90 + t80;
t277 = pkin(4) * t105 + t84;
t9 = pkin(5) * t51 - qJ(6) * t52 - qJD(6) * t292 + t47;
t259 = -pkin(4) * t267 - pkin(5);
t256 = pkin(4) * t265 + qJ(6);
t208 = t226 * t270;
t155 = pkin(5) * t225 - qJ(6) * t226 + t323;
t133 = pkin(5) * t208 - qJ(6) * t209 + t345;
t116 = -t165 * t265 + t166 * t267;
t115 = t267 * t165 + t166 * t265;
t109 = pkin(5) * t273 - t113;
t108 = -qJ(6) * t273 + t114;
t65 = -t105 * t265 + t106 * t267;
t63 = t267 * t105 + t106 * t265;
t45 = pkin(4) * t151 + pkin(5) * t292 + qJ(6) * t92;
t43 = pkin(5) * t115 - qJ(6) * t116 + t282;
t30 = -pkin(5) * t219 - t33;
t29 = qJ(6) * t219 + t34;
t20 = qJ(6) * t188 + t23;
t19 = -pkin(5) * t188 + qJD(6) - t22;
t10 = pkin(5) * t63 - qJ(6) * t65 - qJD(6) * t116 + t277;
t6 = -pkin(5) * t163 - t7;
t5 = qJ(6) * t163 + qJD(6) * t219 + t8;
t1 = qJD(6) * t188 + t329;
t11 = [0, 0, 0, t305 * t399, -t344 * t305, t303 * t319, -t303 * t320, 0, -t203 * t268 - t215 * t304 + t271 * t296, -t202 * t268 - t214 * t304 + t274 * t296, t153 * t220 + t164 * t194, -t153 * t219 - t154 * t220 - t163 * t194 + t164 * t403, -t164 * t242 + (-t153 * t274 + (qJD(1) * t220 + t194) * t340) * t266, t163 * t242 + (t154 * t274 + (-qJD(1) * t219 + t403) * t340) * t266 (-t242 * t266 - t262 * t341) * t340, -t290 * t242 - t215 * t403 + t205 * t154 + t203 * t219 + t175 * t163 + (t302 * t274 + (qJD(1) * t308 + t121) * t340) * t266, t283 * t242 + t215 * t194 + t205 * t153 + t203 * t220 + t175 * t164 + (t284 * t274 + (-qJD(1) * t350 - t122) * t340) * t266, t106 * t151 + t166 * t89, -t105 * t151 - t106 * t149 - t165 * t89 - t166 * t90, t106 * t188 + t151 * t163 + t154 * t166 + t219 * t89, -t105 * t188 - t149 * t163 - t154 * t165 - t219 * t90, t154 * t219 + t163 * t188, t111 * t105 + t131 * t90 + t84 * t149 + t154 * t310 + t67 * t163 + t80 * t165 + t188 * t278 + t28 * t219, t111 * t106 + t131 * t89 + t84 * t151 - t154 * t356 - t68 * t163 + t80 * t166 - t188 * t286 - t27 * t219, -t115 * t4 - t116 * t3 - t22 * t65 - t23 * t63 - t292 * t7 - t33 * t52 - t34 * t51 - t8 * t92, t22 * t7 + t23 * t8 + t277 * t81 + t282 * t47 + t3 * t33 + t4 * t34, t10 * t92 + t115 * t9 - t154 * t30 - t163 * t19 - t188 * t6 - t2 * t219 + t37 * t63 + t43 * t51, -t1 * t115 + t116 * t2 + t19 * t65 - t20 * t63 - t29 * t51 + t292 * t6 + t30 * t52 - t5 * t92, t1 * t219 - t10 * t292 - t116 * t9 + t154 * t29 + t163 * t20 + t188 * t5 - t37 * t65 - t43 * t52, t1 * t29 + t10 * t37 + t19 * t6 + t2 * t30 + t20 * t5 + t43 * t9; 0, 0, 0, -t369 * t399, t344 * t369, -t274 * t315, t271 * t315, 0, -pkin(8) * t297 + t213 * t304 + t271 * t281, pkin(8) * t298 + t210 * t304 + t274 * t281, t153 * t270 - t194 * t370 (t153 - t374) * t273 + (-t154 + t372) * t270, -t242 * t336 + (t242 * t359 + (t270 * qJD(2) - t194) * t271) * t343, t242 * t338 + (-t274 * t371 + (-t403 + t339) * t271) * t343, t242 * t322, -pkin(2) * t154 - t203 * t273 + t307 * t242 + t213 * t403 + (pkin(9) * t370 + t175 * t270) * qJD(3) + (-t121 * t271 + (-pkin(9) * t340 - t175 * t274) * t270) * t343, -pkin(2) * t153 + t203 * t270 - t349 * t242 - t213 * t194 + (-pkin(9) * t371 + t175 * t273) * qJD(3) + (-t175 * t359 + (-pkin(9) * t339 + t122) * t271) * t343, t89 * t362 + (-t269 * t334 - t410) * t151, t182 * t149 + t151 * t181 + (-t149 * t272 - t151 * t269) * t336 + (-t381 - t272 * t90 + (t149 * t269 - t151 * t272) * qJD(4)) * t270, -t89 * t273 - t410 * t188 + (-t151 * t242 - t316 + t361) * t270, t90 * t273 + t406 * t188 + (t149 * t242 + t288) * t270, -t154 * t273 - t188 * t371, -t111 * t181 - t134 * t149 + t228 * t154 + ((-qJD(4) * t241 + t135) * t269 + t411) * t188 + (t111 * t269 * qJD(3) - t28 + (qJD(3) * t149 + t288) * pkin(9)) * t273 + (pkin(9) * t90 + t111 * t333 - t242 * t67 + t383) * t270, -t346 * t154 - t134 * t151 - t111 * t182 + t409 * t188 + (t111 * t337 + t27 + (qJD(3) * t151 + t316) * pkin(9)) * t273 + (-t111 * t335 + t382 + t242 * t68 + (t188 * t337 + t89) * pkin(9)) * t270, -t113 * t52 - t114 * t51 - t208 * t4 - t209 * t3 + t22 * t352 + t23 * t353 - t292 * t386 - t385 * t92, t3 * t113 + t4 * t114 + t386 * t22 + t385 * t23 + t47 * t345 + t398 * t81, -t109 * t154 + t133 * t51 + t188 * t388 + t19 * t371 + t2 * t273 + t208 * t9 - t353 * t37 - t387 * t92, -t1 * t208 - t108 * t51 + t109 * t52 - t19 * t352 + t2 * t209 + t20 * t353 - t292 * t388 + t389 * t92, -t1 * t273 + t108 * t154 - t133 * t52 - t188 * t389 - t20 * t371 - t209 * t9 + t292 * t387 + t352 * t37, t1 * t108 + t2 * t109 + t9 * t133 - t19 * t388 - t20 * t389 - t37 * t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194 * t403, t194 ^ 2 - t403 ^ 2, t153 + t374, -t154 - t372, t298, -t122 * t242 - t175 * t194 - t302, -t121 * t242 - t175 * t403 - t284, t151 * t306 + t381 (t89 - t376) * t272 + (-t90 - t375) * t269, -t151 * t194 + t188 * t306 + t364, t149 * t194 - t269 * t396 + t361, -t188 * t194, -pkin(3) * t90 - t122 * t149 - t67 * t194 - t382 + (-pkin(10) * t333 - t137) * t188 + (t121 * t188 + t285) * t269, -pkin(3) * t89 - t122 * t151 + t68 * t194 + t383 + (pkin(10) * t335 + t357) * t188 + t285 * t272, t22 * t354 - t4 * t225 - t3 * t226 - t23 * t404 + t292 * t378 + t36 * t92 + t299, t4 * t174 - t3 * t173 + t47 * t323 + t397 * t81 + (t146 - t36) * t23 - t378 * t22, -t173 * t154 + t155 * t51 - t188 * t379 + t19 * t194 + t9 * t225 + t37 * t404 + t380 * t92, -t1 * t225 - t19 * t354 + t2 * t226 - t20 * t404 + t292 * t379 + t31 * t92 + t299, t174 * t154 - t155 * t52 + t188 * t377 - t20 * t194 - t9 * t226 - t292 * t380 + t354 * t37, t1 * t174 + t9 * t155 + t2 * t173 + t19 * t379 + t20 * t377 + t37 * t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151 * t149, -t149 ^ 2 + t151 ^ 2, t89 + t376, t375 - t90, t154, -t111 * t151 + t68 * t188 + t28, t111 * t149 + t188 * t67 - t27, t23 * t292 - t391 + (-t265 * t51 - t267 * t52) * pkin(4) + (-t22 + t26) * t92, t22 * t25 - t23 * t26 + (-t151 * t81 + t265 * t4 + t267 * t3) * pkin(4), t25 * t188 - t400 - t45 * t92 + (pkin(5) - t259) * t154 + t3, t20 * t292 - t256 * t51 + t259 * t52 - t391 + (t19 - t358) * t92, t256 * t154 - t37 * t92 + t45 * t292 + (0.2e1 * qJD(6) - t26) * t188 + t329, t1 * t256 - t19 * t25 + t2 * t259 + t20 * t358 - t37 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t22 * t292 + t23 * t92 + t47, t188 * t292 + t51, t294, -t52 + t405, -t19 * t292 + t20 * t92 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292 * t92 - t154, t52 + t405, -t396 - t401, -t188 * t20 + t2 + t400;];
tauc_reg  = t11;
