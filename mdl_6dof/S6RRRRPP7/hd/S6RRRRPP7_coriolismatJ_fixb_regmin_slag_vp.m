% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:29
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRPP7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPP7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:26:35
% EndTime: 2019-03-09 21:28:04
% DurationCPUTime: 58.70s
% Computational Cost: add. (46724->1469), mult. (110745->1920), div. (0->0), fcn. (121222->10), ass. (0->935)
t921 = cos(qJ(3));
t1404 = -t921 / 0.2e1;
t918 = sin(qJ(3));
t920 = cos(qJ(4));
t1289 = t918 * t920;
t917 = sin(qJ(4));
t1291 = t917 * t918;
t914 = sin(pkin(11));
t916 = cos(pkin(11));
t794 = t1289 * t916 - t1291 * t914;
t1218 = t794 * qJD(2);
t922 = cos(qJ(2));
t1283 = t920 * t922;
t915 = sin(pkin(6));
t1200 = t915 * t1283;
t1385 = cos(pkin(6));
t1135 = t1385 * t918;
t919 = sin(qJ(2));
t1304 = t915 * t919;
t812 = t1304 * t921 + t1135;
t1320 = t812 * t917;
t682 = t1200 + t1320;
t1303 = t915 * t922;
t1202 = t917 * t1303;
t1319 = t812 * t920;
t684 = -t1202 + t1319;
t1488 = -t914 * t682 + t916 * t684;
t1503 = qJD(1) * t1488;
t1517 = t1218 + t1503;
t499 = t916 * t682 + t914 * t684;
t1516 = t499 * t1404;
t810 = t1304 * t918 - t1385 * t921;
t1217 = t810 * qJD(1);
t1194 = t499 * t1217;
t1295 = t916 * t920;
t1157 = t1295 / 0.2e1;
t828 = t914 * t917 - t1295;
t1420 = -t828 / 0.2e1;
t1097 = t1157 + t1420;
t585 = t917 * t810;
t746 = t914 * t585;
t451 = t746 / 0.2e1 - t1097 * t810;
t1515 = qJD(3) * t451 + t1194;
t1296 = t916 * t917;
t1305 = t914 * t920;
t831 = t1296 + t1305;
t1213 = t831 * qJD(3);
t1514 = t1213 + t1517;
t1279 = t921 * t922;
t1288 = t919 * t917;
t758 = (t1279 * t920 + t1288) * t915;
t1297 = t916 * t758;
t869 = t920 * t1304;
t757 = t1202 * t921 - t869;
t1307 = t914 * t757;
t1274 = t1307 / 0.2e1 - t1297 / 0.2e1;
t1513 = -t1274 + t1516;
t1512 = t1274 + t1516;
t1511 = t1488 ^ 2;
t1453 = t499 / 0.2e1;
t1136 = (-qJ(5) - pkin(10)) * t917;
t1287 = t920 * qJ(5);
t864 = t920 * pkin(10) + t1287;
t695 = -t916 * t1136 + t864 * t914;
t1510 = -t695 / 0.2e1;
t1509 = t695 / 0.2e1;
t1425 = t794 / 0.2e1;
t1419 = t828 / 0.2e1;
t1418 = -t831 / 0.2e1;
t1113 = t914 * t1136;
t835 = t916 * t864;
t1487 = t835 + t1113;
t1437 = -t1487 / 0.2e1;
t1508 = t1487 / 0.2e1;
t1507 = -t1488 / 0.2e1;
t1506 = t1488 / 0.2e1;
t1196 = pkin(1) * t1385;
t817 = pkin(8) * t1303 + t919 * t1196;
t778 = pkin(9) * t1385 + t817;
t1109 = -pkin(2) * t922 - pkin(9) * t919;
t779 = (-pkin(1) + t1109) * t915;
t568 = t778 * t918 - t921 * t779;
t533 = pkin(3) * t1303 + t568;
t412 = pkin(4) * t682 + t533;
t226 = pkin(5) * t499 - qJ(6) * t1488 + t412;
t1504 = t1488 * t226;
t1502 = qJD(5) * t1488;
t823 = t831 ^ 2;
t1494 = t828 ^ 2 + t823;
t1501 = qJD(5) * t1494;
t786 = t794 ^ 2;
t791 = t831 * t918;
t1495 = t791 ^ 2 + t786;
t1500 = qJD(5) * t1495;
t1499 = qJD(6) * t1488;
t1084 = t791 * t828 + t794 * t831;
t1498 = qJD(2) * t1495 + qJD(3) * t1084;
t1144 = 0.2e1 * t1506;
t1145 = 0.2e1 * t1453;
t954 = t1144 * t831 + t1145 * t828;
t1497 = qJD(1) * t954 + qJD(2) * t1084 + qJD(3) * t1494;
t845 = pkin(4) * t1291 + t918 * pkin(9);
t540 = pkin(5) * t791 - qJ(6) * t794 + t845;
t1448 = t540 / 0.2e1;
t1496 = t226 * t1425 + t1448 * t1488;
t909 = t917 ^ 2;
t911 = t920 ^ 2;
t878 = t911 - t909;
t1493 = qJD(3) * t878;
t1490 = (t568 / 0.2e1 - t533 / 0.2e1) * t917;
t1489 = t954 * qJD(5);
t1085 = -t1487 * t828 + t695 * t831;
t1485 = qJD(3) * t1085;
t1484 = qJD(5) * t1085;
t1088 = t499 ^ 2 + t1511;
t1483 = qJD(5) * t1088;
t1406 = -t918 / 0.2e1;
t1163 = t810 * t1406;
t1403 = t921 / 0.2e1;
t1028 = t1403 * t812 + t1163;
t1482 = t1028 * qJD(3);
t1481 = t1084 * qJD(5);
t1284 = t920 * t921;
t1290 = t917 * t921;
t868 = t914 * t1290;
t796 = t1284 * t916 - t868;
t1324 = t796 * qJ(6);
t793 = t831 * t921;
t1395 = t793 * pkin(5);
t1480 = -t1324 / 0.2e1 + t1395 / 0.2e1;
t589 = t920 * t810;
t1153 = -t589 / 0.2e1;
t1335 = t684 * t921;
t1479 = t918 * t1153 + t1335 / 0.2e1;
t1156 = -t1291 / 0.2e1;
t1338 = t682 * t921;
t1010 = t810 * t1156 + t1338 / 0.2e1;
t573 = -t589 * t916 + t746;
t1341 = t573 * qJ(6);
t572 = t831 * t810;
t1398 = t572 * pkin(5);
t1478 = -t1341 / 0.2e1 - t1398 / 0.2e1;
t1206 = pkin(9) * t1284;
t1107 = -pkin(3) * t921 - pkin(10) * t918;
t863 = -pkin(2) + t1107;
t690 = t1206 + (-qJ(5) * t918 + t863) * t917;
t1334 = t690 * t914;
t833 = t920 * t863;
t1106 = -t1287 * t918 + t833;
t1209 = pkin(9) * t1290;
t689 = t1106 - t1209;
t506 = t689 * t916 - t1334;
t1346 = t506 * t499;
t1428 = -t791 / 0.2e1;
t743 = t918 * t779;
t744 = t921 * t778;
t569 = t744 + t743;
t534 = -pkin(10) * t1303 + t569;
t1108 = t810 * pkin(3) - t812 * pkin(10);
t815 = pkin(8) * t1304 - t922 * t1196;
t777 = -pkin(2) * t1385 + t815;
t939 = t1108 + t777;
t323 = t920 * t534 + t917 * t939;
t282 = -t682 * qJ(5) + t323;
t1302 = t916 * t282;
t322 = t534 * t917 - t920 * t939;
t281 = -qJ(5) * t684 - t322;
t1313 = t914 * t281;
t172 = t1302 + t1313;
t1372 = t282 * t914;
t173 = t281 * t916 - t1372;
t1477 = t173 * t1428 + t172 * t1425 - t1346 / 0.2e1;
t1201 = t918 * t1303;
t816 = (pkin(2) * t919 - pkin(9) * t922) * t915;
t798 = t918 * t816;
t799 = t921 * t815;
t1271 = t798 - t799;
t578 = pkin(10) * t1304 + t1271;
t1293 = t917 * t578;
t1388 = t921 * pkin(10);
t1390 = t918 * pkin(3);
t865 = -t1388 + t1390;
t634 = t1303 * t865 + t817;
t606 = t920 * t634;
t400 = t606 - t1293;
t319 = pkin(4) * t1201 - t758 * qJ(5) + t400;
t1300 = t916 * t319;
t558 = t920 * t578;
t605 = t917 * t634;
t401 = t558 + t605;
t338 = -qJ(5) * t757 + t401;
t1311 = t914 * t338;
t1476 = -t1300 / 0.2e1 + t1311 / 0.2e1;
t1475 = t1425 * t695 + t1437 * t791;
t1474 = t1437 * t499 + t1506 * t695;
t1401 = pkin(9) * t917;
t659 = (-pkin(4) - t1401) * t921 + t1106;
t483 = t659 * t916 - t1334;
t1298 = t916 * t690;
t628 = t914 * t659;
t484 = t1298 + t628;
t1473 = t1418 * t483 + t1420 * t484;
t1282 = t921 * qJ(6);
t461 = t484 - t1282;
t463 = pkin(5) * t921 - t483;
t1472 = t1418 * t463 + t1419 * t461;
t261 = pkin(4) * t810 + t281;
t161 = t261 * t916 - t1372;
t257 = t914 * t261;
t162 = t1302 + t257;
t1471 = t1418 * t161 + t1420 * t162;
t1323 = t810 * qJ(6);
t143 = t162 + t1323;
t144 = -pkin(5) * t810 - t161;
t1470 = t1418 * t144 + t1419 * t143;
t1210 = t921 * qJD(2);
t882 = t918 * t1210;
t1129 = qJD(1) * t1028 + t882;
t1017 = -qJD(2) * t1028 + t812 * t1217;
t940 = t1437 * t1488 + t1487 * t1506;
t1468 = qJD(1) * t1088 + qJD(3) * t954;
t1467 = t810 ^ 2;
t1466 = t143 / 0.2e1;
t1465 = t144 / 0.2e1;
t1464 = -t161 / 0.2e1;
t1463 = t162 / 0.2e1;
t1462 = -t172 / 0.2e1;
t1461 = t173 / 0.2e1;
t1460 = t461 / 0.2e1;
t1459 = t463 / 0.2e1;
t1458 = -t483 / 0.2e1;
t1457 = t483 / 0.2e1;
t1456 = t484 / 0.2e1;
t1454 = -t499 / 0.2e1;
t1309 = t914 * t689;
t505 = t1298 + t1309;
t1451 = -t505 / 0.2e1;
t1450 = t505 / 0.2e1;
t1449 = t506 / 0.2e1;
t888 = pkin(4) * t1290;
t906 = t921 * pkin(9);
t846 = t906 + t888;
t541 = -t1324 + t846 + t1395;
t1447 = t541 / 0.2e1;
t1207 = pkin(4) * t1289;
t1325 = t791 * qJ(6);
t1394 = t794 * pkin(5);
t556 = t1207 + t1325 + t1394;
t1446 = t556 / 0.2e1;
t1445 = t572 / 0.2e1;
t1444 = t573 / 0.2e1;
t631 = pkin(3) * t812 + pkin(10) * t810;
t598 = t920 * t631;
t1443 = t598 / 0.2e1;
t899 = -pkin(4) * t920 - pkin(3);
t627 = pkin(5) * t828 - qJ(6) * t831 + t899;
t1442 = -t627 / 0.2e1;
t1441 = t627 / 0.2e1;
t1318 = t828 * qJ(6);
t1391 = t917 * pkin(4);
t1392 = t831 * pkin(5);
t632 = t1318 + t1391 + t1392;
t1440 = t632 / 0.2e1;
t1439 = t682 / 0.2e1;
t1438 = -t684 / 0.2e1;
t1430 = -t758 / 0.2e1;
t1429 = t791 / 0.2e1;
t1427 = -t793 / 0.2e1;
t1426 = -t794 / 0.2e1;
t1424 = t796 / 0.2e1;
t1423 = -t810 / 0.2e1;
t1422 = t810 / 0.2e1;
t1421 = -t812 / 0.2e1;
t1417 = t831 / 0.2e1;
t1158 = t835 / 0.2e1;
t843 = t917 * t865;
t1416 = t843 / 0.2e1;
t1415 = t869 / 0.2e1;
t891 = pkin(4) * t914 + qJ(6);
t1414 = -t891 / 0.2e1;
t1413 = t891 / 0.2e1;
t894 = -pkin(4) * t916 - pkin(5);
t1412 = t894 / 0.2e1;
t1411 = -t914 / 0.2e1;
t1410 = t914 / 0.2e1;
t1409 = -t916 / 0.2e1;
t1408 = t916 / 0.2e1;
t1407 = -t917 / 0.2e1;
t1405 = t918 / 0.2e1;
t1402 = pkin(9) * t682;
t1400 = t1488 * pkin(5);
t1306 = t914 * t758;
t711 = t916 * t757;
t547 = t711 + t1306;
t1399 = t547 * pkin(5);
t1397 = t684 * pkin(4);
t1396 = t757 * pkin(4);
t1393 = t812 * pkin(5);
t1389 = t918 * pkin(5);
t1387 = -qJD(4) / 0.2e1;
t1386 = pkin(4) * qJD(4);
t1350 = t499 * qJ(6);
t258 = t1350 + t1397 + t1400;
t63 = -t172 * t810 + t258 * t499 + t1504;
t1384 = qJD(1) * t63;
t64 = -t1488 * t258 + t173 * t810 + t226 * t499;
t1383 = qJD(1) * t64;
t65 = -t143 * t499 + t144 * t1488;
t1382 = qJD(1) * t65;
t66 = -t1488 * t161 - t162 * t499;
t1381 = qJD(1) * t66;
t73 = t143 * t810 - t1504;
t1380 = qJD(1) * t73;
t1375 = t172 * t695;
t1374 = t173 * t1487;
t1373 = t226 * t831;
t29 = t143 * t173 + t144 * t172 + t226 * t258;
t1371 = t29 * qJD(1);
t1294 = t917 * t568;
t1132 = t598 + t1294;
t302 = pkin(4) * t812 + qJ(5) * t589 + t1132;
t301 = t914 * t302;
t550 = t920 * t568;
t597 = t917 * t631;
t1276 = t550 - t597;
t337 = qJ(5) * t585 - t1276;
t331 = t916 * t337;
t210 = t331 + t301;
t196 = t812 * qJ(6) + t210;
t1301 = t916 * t302;
t1312 = t914 * t337;
t209 = t1301 - t1312;
t197 = -t209 - t1393;
t772 = pkin(4) * t585;
t494 = -t772 + t569;
t262 = -t1341 + t494 - t1398;
t30 = t143 * t196 + t144 * t197 + t226 * t262;
t1370 = t30 * qJD(1);
t306 = t914 * t319;
t336 = t916 * t338;
t219 = t336 + t306;
t207 = qJ(6) * t1201 + t219;
t218 = t1300 - t1311;
t208 = -pkin(5) * t1201 - t218;
t548 = t1297 - t1307;
t1342 = t548 * qJ(6);
t1280 = t921 * t816;
t797 = t918 * t815;
t1130 = t797 + t1280;
t577 = -pkin(3) * t1304 - t1130;
t490 = t577 + t1396;
t255 = -t1342 + t490 + t1399;
t31 = t143 * t207 + t144 * t208 + t226 * t255;
t1369 = t31 * qJD(1);
t1089 = t1488 * t172 - t173 * t499;
t32 = -t143 * t1488 - t144 * t499 + t1089;
t1368 = t32 * qJD(1);
t33 = -t1488 * t162 + t161 * t499 + t1089;
t1367 = t33 * qJD(1);
t34 = t143 * t572 + t144 * t573 + t1488 * t197 - t196 * t499;
t1366 = t34 * qJD(1);
t35 = -t143 * t547 + t144 * t548 + t1488 * t208 - t207 * t499;
t1365 = t35 * qJD(1);
t36 = t1397 * t412 - t161 * t172 + t162 * t173;
t1364 = t36 * qJD(1);
t37 = -t1488 * t209 - t161 * t573 + t162 * t572 - t210 * t499;
t1363 = t37 * qJD(1);
t38 = -t1488 * t218 - t161 * t548 - t162 * t547 - t219 * t499;
t1362 = t38 * qJD(1);
t43 = t161 * t209 + t162 * t210 + t412 * t494;
t1361 = t43 * qJD(1);
t44 = t161 * t218 + t162 * t219 + t412 * t490;
t1360 = t44 * qJD(1);
t47 = t143 * t812 - t1488 * t262 + t196 * t810 - t226 * t573;
t1357 = t47 * qJD(1);
t48 = -t144 * t812 - t197 * t810 - t226 * t572 + t262 * t499;
t1356 = t48 * qJD(1);
t49 = t1201 * t143 - t1488 * t255 + t207 * t810 - t226 * t548;
t1353 = t49 * qJD(1);
t50 = -t1201 * t144 - t208 * t810 + t226 * t547 + t255 * t499;
t1351 = t50 * qJD(1);
t1347 = t505 * t695;
t1345 = t506 * t1487;
t1344 = t533 * t920;
t1343 = t540 * t794;
t1340 = t577 * t917;
t1339 = t577 * t920;
t1337 = t684 * t917;
t1336 = t684 * t920;
t1330 = t1487 * t547;
t1328 = t758 * t917;
t760 = t863 * t917 + t1206;
t1327 = t760 * t812;
t1326 = t777 * t921;
t1322 = t810 * t791;
t1321 = t810 * t921;
t89 = -t322 * t812 + t569 * t682 + (t598 + (-t533 + t568) * t917) * t810;
t1317 = t89 * qJD(1);
t90 = -t323 * t812 + t569 * t684 + (t1276 - t1344) * t810;
t1316 = t90 * qJD(1);
t908 = t915 ^ 2;
t913 = t922 ^ 2;
t1315 = t908 * t913;
t1314 = t908 * t919;
t1208 = pkin(9) * t1289;
t1112 = t843 - t1208;
t691 = -qJ(5) * t1290 + t1112;
t1308 = t914 * t691;
t844 = t920 * t865;
t890 = pkin(9) * t1291;
t1269 = t890 + t844;
t675 = pkin(4) * t918 - qJ(5) * t1284 + t1269;
t1299 = t916 * t675;
t1292 = t917 * t682;
t1286 = t920 * t682;
t910 = t918 ^ 2;
t1285 = t920 * t910;
t95 = -t1201 * t322 + t400 * t810 + t533 * t757 + t577 * t682;
t1278 = t95 * qJD(1);
t96 = -t1201 * t323 - t401 * t810 + t533 * t758 + t577 * t684;
t1277 = t96 * qJD(1);
t633 = t914 * t675;
t679 = t916 * t691;
t497 = t679 + t633;
t1162 = -t1304 / 0.2e1;
t1270 = t921 * t1162 - t1135 / 0.2e1;
t912 = t921 ^ 2;
t879 = t912 - t910;
t227 = t322 * t810 - t533 * t682;
t1268 = qJD(1) * t227;
t228 = -t323 * t810 + t533 * t684;
t1267 = qJD(1) * t228;
t1164 = t1322 / 0.2e1;
t266 = t1164 + t1513;
t1266 = qJD(1) * t266;
t267 = t1164 + t1512;
t1265 = qJD(1) * t267;
t387 = -t1303 * t568 - t777 * t810;
t1263 = qJD(1) * t387;
t388 = -t1303 * t569 - t777 * t812;
t1262 = qJD(1) * t388;
t424 = -t1467 * t917 + t682 * t812;
t1261 = qJD(1) * t424;
t425 = -t1467 * t920 + t684 * t812;
t1260 = qJD(1) * t425;
t1257 = qJD(1) * t684;
t1256 = qJD(1) * t922;
t1255 = qJD(2) * t915;
t1254 = qJD(2) * t922;
t1252 = qJD(3) * t917;
t1251 = qJD(3) * t918;
t1250 = qJD(3) * t920;
t1249 = qJD(3) * t921;
t1248 = qJD(4) * t810;
t1247 = qJD(4) * t828;
t1246 = qJD(4) * t917;
t1245 = qJD(4) * t920;
t1244 = qJD(4) * t921;
t1243 = qJD(5) * t794;
t1242 = qJD(5) * t810;
t1241 = qJD(5) * t921;
t1240 = qJD(6) * t791;
t1239 = qJD(6) * t831;
t1238 = qJD(6) * t921;
t263 = t1130 * t1303 - t1201 * t777 + t1304 * t568 - t817 * t810;
t1237 = t263 * qJD(1);
t264 = t817 * t812 + (-t569 * t919 + (t1271 + t1326) * t922) * t915;
t1236 = t264 * qJD(1);
t1035 = t1403 * t1488 + t1423 * t794;
t1099 = t711 / 0.2e1 + t1306 / 0.2e1;
t265 = -t1035 + t1099;
t1235 = t265 * qJD(1);
t718 = t589 * t1291;
t280 = t718 + (-t1338 / 0.2e1 + t1430) * t920 + (-t1335 / 0.2e1 + t757 / 0.2e1) * t917;
t1234 = t280 * qJD(1);
t350 = -t682 * t758 - t684 * t757;
t1233 = t350 * qJD(1);
t1087 = t1286 + t1337;
t364 = t1087 * t810;
t1232 = t364 * qJD(1);
t1152 = t1284 / 0.2e1;
t983 = t1152 * t684 + t1163 * t911;
t414 = -t1328 / 0.2e1 + t983;
t1231 = t414 * qJD(1);
t1160 = -t1303 / 0.2e1;
t1119 = t917 * t1160;
t1154 = t1289 / 0.2e1;
t446 = t1415 + t810 * t1154 + (t1119 + t1438) * t921;
t1230 = t446 * qJD(1);
t1151 = t1283 / 0.2e1;
t980 = (t921 * t1151 + t1288 / 0.2e1) * t915;
t447 = t980 - t1010;
t1229 = t447 * qJD(1);
t1096 = t1157 + t1419;
t452 = -t746 / 0.2e1 + t1096 * t810;
t1228 = t452 * qJD(3);
t454 = -t1201 * t682 - t757 * t810;
t1227 = t454 * qJD(1);
t455 = t1201 * t684 + t758 * t810;
t1226 = t455 * qJD(1);
t514 = -t812 * t918 - t1321;
t546 = t514 * t1303;
t1225 = t546 * qJD(1);
t1224 = t585 * qJD(1);
t1223 = t589 * qJD(1);
t662 = -t1304 * t810 + t1315 * t918;
t1222 = t662 * qJD(1);
t663 = -t1304 * t812 + t1315 * t921;
t1221 = t663 * qJD(1);
t700 = pkin(1) * t1314 + t1385 * t817;
t1220 = t700 * qJD(1);
t701 = t908 * pkin(1) * t922 - t1385 * t815;
t1219 = t701 * qJD(1);
t1216 = t810 * qJD(3);
t802 = t810 * qJD(6);
t1215 = t812 * qJD(3);
t830 = (-t919 ^ 2 + t913) * t908;
t1214 = t830 * qJD(1);
t1212 = t915 * qJD(3);
t1211 = t918 * qJD(2);
t664 = t1397 / 0.2e1;
t900 = t1391 / 0.2e1;
t1203 = t1412 - pkin(5) / 0.2e1;
t1199 = t810 * t1290;
t1198 = t810 * t1284;
t1118 = t918 * t1160;
t1197 = pkin(5) * t1118 + t1476;
t1195 = t499 * t1503;
t1193 = t684 * t1217;
t1191 = t915 * t1256;
t1190 = t915 * t1254;
t1189 = t920 * t1211;
t1188 = t922 * t1212;
t1187 = t917 * t1250;
t1186 = t918 * t1250;
t1185 = t917 * t1244;
t1184 = t920 * t1244;
t1183 = t908 * t1256;
t1182 = t919 * t1255;
t1181 = t917 * t1245;
t1180 = t918 * t1249;
t1178 = -t1374 / 0.2e1;
t1176 = t1488 * t1451;
t1175 = t1346 / 0.2e1;
t1174 = -t1345 / 0.2e1;
t1173 = t533 * t917 / 0.2e1;
t1171 = t682 * t1406;
t1169 = t684 * t1405;
t1167 = t548 * t1509;
t1166 = t1330 / 0.2e1;
t1161 = t1304 / 0.2e1;
t1159 = t1303 / 0.2e1;
t1155 = -t1289 / 0.2e1;
t1150 = t1466 + t1462;
t1149 = t1463 + t1462;
t1148 = t1461 + t1465;
t1147 = t1461 + t1464;
t1146 = -t257 / 0.2e1 - t1302 / 0.2e1;
t1143 = t550 / 0.2e1 - t597 / 0.2e1;
t1142 = -t558 / 0.2e1 - t605 / 0.2e1;
t1140 = -t628 / 0.2e1 - t1298 / 0.2e1;
t1139 = t798 / 0.2e1 - t799 / 0.2e1;
t1138 = t888 / 0.2e1 + t906 / 0.2e1;
t1137 = t1414 - qJ(6) / 0.2e1;
t1134 = t1385 * qJD(1);
t1133 = t1487 * t572 + t573 * t695;
t1131 = -t1487 * t793 + t695 * t796;
t609 = -t868 / 0.2e1 + t1097 * t921;
t742 = t791 * t1210;
t1128 = qJD(3) * t609 - t742;
t1127 = pkin(9) * t1159;
t873 = pkin(4) * t1154;
t1126 = qJD(4) + t1217;
t1125 = -qJD(4) + t1210;
t1124 = t917 * t1186;
t1123 = t1254 * t1314;
t1122 = t919 * t1183;
t1121 = t921 * t1191;
t1120 = t917 * t1189;
t1117 = t918 * t1159;
t1116 = t915 * t1151;
t1111 = t915 * t1134;
t1110 = t1385 * t1255;
t1105 = t1137 * t918;
t1104 = t1145 * t791;
t1103 = 0.2e1 * t1120;
t1102 = t1302 / 0.2e1 + t1313 / 0.2e1;
t1101 = t606 / 0.2e1 - t1293 / 0.2e1;
t1100 = t1298 / 0.2e1 + t1309 / 0.2e1;
t1098 = t797 / 0.2e1 + t1280 / 0.2e1;
t1095 = t743 / 0.2e1 + t744 / 0.2e1 - t772 / 0.2e1;
t1094 = pkin(10) * t1118;
t1093 = -qJD(3) + t1191;
t473 = t918 * qJ(6) + t497;
t495 = t1299 - t1308;
t474 = -t495 - t1389;
t931 = t1447 * t226 + t1448 * t262 + t1459 * t197 + t1460 * t196 + t1465 * t474 + t1466 * t473;
t969 = t1441 * t255 + t1508 * t207 + t1509 * t208;
t1 = -t931 + t969;
t88 = t461 * t473 + t463 * t474 + t540 * t541;
t1092 = -t1 * qJD(1) + t88 * qJD(2);
t1044 = t1412 * t208 + t1413 * t207;
t930 = t143 * t1449 + t144 * t1450 + t1446 * t226 + t1448 * t258 + t1459 * t172 + t1460 * t173;
t3 = -t930 + t1044;
t97 = t461 * t506 + t463 * t505 + t540 * t556;
t1091 = -t3 * qJD(1) + t97 * qJD(2);
t104 = -t461 * t793 + t463 * t796 - t473 * t791 + t474 * t794;
t924 = t1424 * t144 + t1425 * t197 + t1427 * t143 + t1428 * t196 + t1444 * t463 + t1445 * t461 + t1454 * t473 + t1506 * t474;
t968 = t1417 * t208 + t1420 * t207 + t1167;
t6 = t1166 + t924 - t968;
t1090 = t6 * qJD(1) + t104 * qJD(2);
t1083 = t1134 + qJD(2);
t923 = t209 * t1426 + t162 * t1427 + t210 * t1428 + t484 * t1445 + t497 * t1454 + t573 * t1458 + t796 * t1464 + t1507 * t495;
t966 = t1418 * t218 + t1420 * t219 + t1167;
t10 = t1166 + t923 - t966;
t122 = -t483 * t796 - t484 * t793 - t495 * t794 - t497 * t791;
t1082 = t10 * qJD(1) + t122 * qJD(2);
t929 = t161 * t495 / 0.2e1 + t497 * t1463 + t209 * t1457 + t210 * t1456 + t412 * t846 / 0.2e1 + t494 * t845 / 0.2e1;
t967 = t218 * t1510 + t219 * t1508 + t490 * t899 / 0.2e1;
t11 = -t929 + t967;
t174 = t483 * t495 + t484 * t497 + t845 * t846;
t1081 = -t11 * qJD(1) + t174 * qJD(2);
t119 = (-t461 + t505) * t794 + (-t463 - t506) * t791;
t1027 = t1412 * t548 + t1414 * t547;
t964 = t1453 * t463 + t1506 * t461 + t1176;
t15 = t1148 * t791 + t1150 * t794 + t1027 + t1175 + t964;
t1080 = -t15 * qJD(1) + t119 * qJD(2);
t127 = (-t484 + t505) * t794 + (t483 - t506) * t791;
t1008 = (t1409 * t548 + t1411 * t547) * pkin(4);
t963 = -t1457 * t499 + t1506 * t484 + t1176;
t19 = t1147 * t791 + t1149 * t794 + t1008 + t1175 + t963;
t1079 = -t19 * qJD(1) + t127 * qJD(2);
t1042 = t1408 * t218 + t1410 * t219;
t942 = t161 * t1450 - t162 * t506 / 0.2e1 + t172 * t1457 - t173 * t484 / 0.2e1;
t13 = (t1155 * t412 + t1438 * t845 + t1042) * pkin(4) + t942;
t177 = t1207 * t845 - t483 * t505 + t484 * t506;
t1078 = -t13 * qJD(1) + t177 * qJD(2);
t175 = -t461 * t918 + t473 * t921 + t540 * t796 + t541 * t794;
t1040 = t1418 * t255 + t1442 * t548;
t926 = t1403 * t196 + t1421 * t461 + t1423 * t473 + t1424 * t226 + t1425 * t262 + t1444 * t540 + t1447 * t1488;
t25 = (t1487 * t1159 - t143 / 0.2e1) * t918 + t926 + t1040;
t1077 = -t25 * qJD(1) - t175 * qJD(2);
t176 = -t463 * t918 + t474 * t921 + t540 * t793 + t541 * t791;
t1041 = t1420 * t255 + t1442 * t547;
t925 = t197 * t1403 + t226 * t793 / 0.2e1 + t262 * t1429 + t463 * t1421 + t474 * t1423 - t572 * t1448 + t499 * t1447;
t28 = (-t144 / 0.2e1 + t695 * t1159) * t918 + t925 + t1041;
t1076 = t28 * qJD(1) + t176 * qJD(2);
t1031 = t1417 * t540 + t1425 * t627;
t961 = t1404 * t1487 - t1031;
t1023 = t1308 / 0.2e1 - t1299 / 0.2e1;
t975 = -t1389 / 0.2e1 + t1023;
t223 = -t961 + t975;
t965 = -t1373 / 0.2e1 + t1488 * t1442 + t1487 * t1422;
t1024 = t1312 / 0.2e1 - t1301 / 0.2e1;
t976 = -t1393 / 0.2e1 + t1024;
t71 = -t965 + t976;
t1075 = t71 * qJD(1) + t223 * qJD(2);
t231 = t505 * t921 + t556 * t791 + t1343;
t928 = t1403 * t172 + t1423 * t505 + t1429 * t258 + t1446 * t499 + t1496;
t995 = pkin(5) * t1117 + t1118 * t894 - t1476;
t41 = -t928 + t995;
t1074 = -qJD(1) * t41 + qJD(2) * t231;
t232 = t506 * t921 - t540 * t791 + t556 * t794;
t927 = t1403 * t173 + t1423 * t506 + t1425 * t258 + t1428 * t226 + t1446 * t1488 - t1448 * t499;
t955 = -t1105 * t1303 + t306 / 0.2e1 + t336 / 0.2e1;
t39 = t927 + t955;
t1073 = -qJD(1) * t39 - qJD(2) * t232;
t242 = -t461 * t791 + t463 * t794;
t949 = t1396 / 0.2e1 + pkin(3) * t1162 - t1098;
t932 = t1399 / 0.2e1 - t1342 / 0.2e1 + t949;
t944 = t144 * t1426 + t143 * t1429 + t461 * t1453 + t1507 * t463;
t45 = t932 + t944;
t1072 = -qJD(1) * t45 + qJD(2) * t242;
t252 = -t483 * t794 - t484 * t791;
t941 = t1425 * t161 + t1429 * t162 + t1453 * t484 + t1506 * t483;
t55 = t941 + t949;
t1071 = qJD(1) * t55 - qJD(2) * t252;
t278 = t461 * t921 + t1343;
t943 = t1403 * t143 + t1423 * t461 + t1496;
t53 = t943 + t1197;
t1070 = -qJD(1) * t53 - qJD(2) * t278;
t759 = -t833 + t1209;
t520 = t759 * t918 + (-t890 + t844) * t921;
t1004 = t759 * t812 / 0.2e1 + t1269 * t1423;
t1052 = -pkin(3) * t757 / 0.2e1 - t1339 / 0.2e1;
t1066 = pkin(10) * t1160 - t569 / 0.2e1;
t80 = (t1443 - t1402 / 0.2e1 + t1490) * t921 + (t322 / 0.2e1 + (pkin(9) * t1422 + t1066) * t917) * t918 + t1004 + t1052;
t1069 = -t80 * qJD(1) - t520 * qJD(2);
t521 = t843 * t921 + (-t760 + t1206) * t918;
t1050 = pkin(9) * t1438 - t1344 / 0.2e1;
t1051 = pkin(3) * t1430 + t1340 / 0.2e1;
t81 = t810 * t1416 + t1327 / 0.2e1 + (t1050 + t1143) * t921 + (t323 / 0.2e1 + t1066 * t920) * t918 + t1051;
t1068 = -t81 * qJD(1) + t521 * qJD(2);
t1067 = t1125 * t918;
t1038 = t1404 * t323 + t1422 * t760;
t131 = t1050 * t918 + t1038 + t1101;
t668 = -pkin(9) * t1285 - t760 * t921;
t1065 = qJD(1) * t131 + qJD(2) * t668;
t1039 = t1403 * t322 + t1423 * t759;
t132 = (t1402 / 0.2e1 + t1173) * t918 + t1039 + t1142;
t667 = -t1401 * t910 - t759 * t921;
t1064 = qJD(1) * t132 - qJD(2) * t667;
t332 = -t1198 + (t917 * t1159 - t1319 / 0.2e1 + t1438) * t918;
t842 = t912 * t920 - t1285;
t1063 = -qJD(1) * t332 - qJD(2) * t842;
t333 = t1199 + (t1116 + t1320 / 0.2e1 + t1439) * t918;
t841 = t879 * t917;
t1062 = -qJD(1) * t333 + qJD(2) * t841;
t1020 = t1305 / 0.2e1 + t1296 / 0.2e1;
t1003 = t1418 + t1020;
t450 = t1003 * t810;
t608 = t1003 * t921;
t1061 = qJD(1) * t450 - qJD(2) * t608;
t1060 = qJD(1) * t451 + qJD(2) * t609;
t610 = t868 / 0.2e1 - t1096 * t921;
t1059 = -qJD(1) * t452 - qJD(2) * t610;
t549 = -t812 ^ 2 + t1467;
t1058 = qJD(1) * t549 + qJD(2) * t514;
t1057 = qJD(1) * t514 + qJD(2) * t879;
t1056 = -t1210 + t1217;
t1055 = qJD(1) * t812 + t1211;
t1054 = t1388 / 0.2e1 - t1390 / 0.2e1;
t1053 = pkin(2) * t1421 + t1405 * t777;
t803 = t921 * t1161 + t1135 / 0.2e1;
t1049 = t803 * qJD(1) + t1211 / 0.2e1;
t1048 = t915 * t1109;
t951 = pkin(2) * t1422 + t1326 / 0.2e1 + pkin(9) * t1118;
t380 = t951 + t1139;
t1047 = pkin(2) * t1210 - qJD(1) * t380;
t382 = -t797 / 0.2e1 + (t1127 - t816 / 0.2e1) * t921 + t1053;
t1046 = pkin(2) * t1211 - qJD(1) * t382;
t1045 = t1412 * t197 + t1413 * t196;
t1043 = t1408 * t209 + t1410 * t210;
t1037 = t1412 * t474 + t1413 * t473;
t1036 = t1408 * t495 + t1410 * t497;
t1034 = t1409 * t1488 - t1410 * t499;
t1033 = t1426 * t499 + t1428 * t1488;
t1032 = t1417 * t499 + t1419 * t1488;
t1029 = -t1418 * t791 + t1419 * t794;
t1026 = t1412 * t573 - t1414 * t572;
t1025 = t1412 * t796 + t1414 * t793;
t1022 = t1409 * t794 - t1410 * t791;
t1021 = t1409 * t831 + t1411 * t828;
t1019 = -t1286 / 0.2e1 - t1337 / 0.2e1;
t243 = t1118 - t1033;
t1018 = qJD(1) * t243 + t1218 * t791;
t1016 = -qJD(3) * t610 - qJD(4) * t791 + t742;
t1015 = qJD(4) + t1056;
t1014 = pkin(3) * t1438 + pkin(10) * t1153;
t1013 = t1387 * t918 + t1129;
t1012 = t1054 * t917;
t1011 = t1054 * t920;
t1009 = t1138 + t1475;
t1007 = (t1409 * t573 - t1411 * t572) * pkin(4);
t1006 = (t1409 * t796 + t1411 * t793) * pkin(4);
t247 = t627 * t632;
t935 = t461 * t1510 + t463 * t1508 + t1347 / 0.2e1 + t540 * t1440 + t556 * t1441;
t67 = t1174 - t935 + t1037;
t938 = t143 * t1510 + t144 * t1508 + t1375 / 0.2e1 + t226 * t1440 + t258 * t1441;
t7 = t1178 - t938 + t1045;
t1005 = -t7 * qJD(1) - t67 * qJD(2) + t247 * qJD(3);
t970 = t161 * t1508 + t162 * t1509 - t1375 / 0.2e1;
t17 = t1178 + (t1407 * t412 + t1438 * t899 + t1043) * pkin(4) + t970;
t317 = t1391 * t899;
t962 = t483 * t1508 + t484 * t1509 - t1347 / 0.2e1;
t78 = t1174 + (t1155 * t899 + t1407 * t845 + t1036) * pkin(4) + t962;
t1002 = -t17 * qJD(1) - t78 * qJD(2) + t317 * qJD(3);
t21 = t1148 * t828 + t1150 * t831 + t1026 + t940;
t953 = (t1508 + t1437) * t794 + (t1510 + t1509) * t791;
t74 = (t1460 + t1451) * t831 + (t1449 + t1459) * t828 + t953 + t1025;
t1001 = t21 * qJD(1) + t74 * qJD(2);
t23 = t1147 * t828 + t1149 * t831 + t1007 + t940;
t76 = (t1456 + t1451) * t831 + (t1449 + t1458) * t828 + t1006 + t953;
t1000 = t23 * qJD(1) + t76 * qJD(2);
t934 = -t1403 * t695 + t1417 * t556 + t1420 * t540 + t1425 * t632 + t1428 * t627;
t981 = -t1105 + t633 / 0.2e1 + t679 / 0.2e1;
t111 = t934 + t981;
t357 = t627 * t828 - t632 * t831;
t937 = t1417 * t258 + t1420 * t226 - t1423 * t695 + t1440 * t1488 - t1441 * t499;
t982 = -t1137 * t812 + t301 / 0.2e1 + t331 / 0.2e1;
t57 = t937 + t982;
t999 = -qJD(1) * t57 - qJD(2) * t111 + qJD(3) * t357;
t933 = t1403 * t1487 + t1419 * t556 + t1429 * t632 + t1031;
t113 = t1203 * t918 + t1023 + t933;
t356 = t627 * t831 + t632 * t828;
t936 = t1373 / 0.2e1 + t258 * t1419 + t1488 * t1441 + t499 * t1440 + t1487 * t1423;
t60 = t1203 * t812 + t1024 + t936;
t998 = qJD(1) * t60 + qJD(2) * t113 + qJD(3) * t356;
t960 = t1138 - t1475;
t154 = t960 + t1472 + t1480;
t950 = t1095 - t1474;
t51 = t950 + t1470 + t1478;
t997 = -qJD(1) * t51 - qJD(2) * t154 + t1485;
t183 = t960 - t1473;
t61 = t950 - t1471;
t996 = -qJD(1) * t61 - qJD(2) * t183 + t1485;
t125 = t1144 * t794 + t1104;
t994 = qJD(2) * t125 + t1468;
t993 = qJD(1) * t125 + t1498;
t411 = t794 * t1488;
t126 = t411 / 0.2e1 + t1488 * t1425 + t1104;
t992 = qJD(2) * t126 + t1468;
t991 = qJD(1) * t126 + t1498;
t168 = -t1397 / 0.2e1 + t1137 * t499 + t1203 * t1488;
t348 = -t1137 * t791 - t1203 * t794 + t873;
t443 = -t1137 * t828 - t1203 * t831 + t900;
t988 = qJD(1) * t168 - qJD(2) * t348 - qJD(3) * t443;
t253 = (t1438 + t1034) * pkin(4);
t528 = (t1155 + t1022) * pkin(4);
t581 = (t1407 + t1021) * pkin(4);
t987 = qJD(1) * t253 + qJD(2) * t528 + qJD(3) * t581;
t341 = (-t1292 + t1336) * t918;
t392 = t682 ^ 2 - t684 ^ 2;
t986 = qJD(1) * t392 - qJD(2) * t341 - qJD(3) * t1087;
t985 = -qJD(1) * t499 - qJD(2) * t791 - qJD(3) * t828;
t979 = t1095 + t1474;
t959 = pkin(3) * t1439 + t1344 / 0.2e1 + pkin(10) * t585 / 0.2e1;
t234 = t959 - t1143;
t680 = t1416 - t1012;
t978 = pkin(3) * t1250 - qJD(1) * t234 - qJD(2) * t680;
t236 = -t598 / 0.2e1 - t1490 + t1014;
t681 = -t844 / 0.2e1 + t1011;
t977 = pkin(3) * t1252 - qJD(1) * t236 - qJD(2) * t681;
t250 = t1032 + t1270;
t475 = t1406 + t1029;
t974 = qJD(1) * t250 + qJD(2) * t475 + t1213 * t828;
t466 = t1019 * t918;
t496 = -t1292 / 0.2e1 + t1336 / 0.2e1;
t973 = -qJD(2) * t466 - qJD(3) * t496 + t1257 * t682;
t820 = (t909 / 0.2e1 - t911 / 0.2e1) * t918;
t972 = qJD(1) * t496 - qJD(2) * t820 + t1187;
t971 = qJD(4) * t803 + t1017;
t840 = t878 * t910;
t958 = qJD(1) * t341 + qJD(2) * t840 + 0.2e1 * t1124;
t957 = qJD(1) * t1087 + t1103 - t1493;
t956 = qJD(2) * t1285 * t917 - qJD(1) * t466 + qJD(3) * t820;
t274 = -t1137 * t921 + t1100 + t1140;
t688 = t1158 - t835 / 0.2e1;
t69 = t1137 * t810 + t1102 + t1146;
t952 = qJD(1) * t69 + qJD(2) * t274 - qJD(3) * t688 - qJD(4) * t891;
t342 = -t411 + t1321;
t415 = t1467 + t1511;
t948 = qJD(1) * t415 - qJD(2) * t342 + t1213 * t1488 + t1248;
t732 = t912 + t786;
t947 = -qJD(1) * t342 + qJD(2) * t732 + t1213 * t794 - t1244;
t946 = t172 * t1417 + t173 * t1420 - t940;
t945 = t1417 * t505 + t506 * t1420 + (t1425 + t1426) * t1487;
t895 = t1251 / 0.2e1;
t866 = qJD(2) * t1161;
t855 = -0.2e1 * t918 * t1181;
t809 = t820 * qJD(4);
t780 = (t1183 - t1212 / 0.2e1) * t919;
t678 = qJD(2) * t1117 + t803 * qJD(3);
t645 = t794 * t1239;
t630 = t890 + t844 / 0.2e1 + t1011;
t629 = t1208 - t843 / 0.2e1 - t1012;
t615 = -t1322 / 0.2e1;
t611 = t1020 * t921 + t1403 * t831;
t584 = 0.2e1 * t1158 + t1113;
t580 = pkin(4) * t1021 + t900;
t527 = pkin(4) * t1022 + t873;
t509 = t514 * qJD(3);
t482 = t496 * qJD(4);
t476 = t1406 - t1029;
t460 = t466 * qJD(4);
t453 = (-t1020 + t1418) * t810;
t449 = t1119 * t921 + t1415 + t1479;
t448 = t980 + t1010;
t444 = t828 * t1414 + t831 * t1412 + t900 + t1318 / 0.2e1 + t1392 / 0.2e1;
t442 = -t1330 / 0.2e1;
t434 = t1488 * t1239;
t413 = t1328 / 0.2e1 + t983;
t383 = t1127 * t921 + t1053 + t1098;
t381 = t951 - t1139;
t378 = t1345 / 0.2e1;
t353 = t1087 * qJD(4);
t349 = -t791 * t1413 + t794 * t1412 + t873 + t1325 / 0.2e1 + t1394 / 0.2e1;
t340 = t342 * qJD(6);
t339 = t341 * qJD(4);
t335 = t1117 * t917 + t1154 * t812 + t1169 + t1198;
t334 = t1116 * t918 + t1156 * t812 + t1171 - t1199;
t300 = t823 * qJD(3) + t1517 * t831;
t279 = t718 + t757 * t1407 + t758 * t920 / 0.2e1 + t1019 * t921;
t275 = t891 * t1404 - t1282 / 0.2e1 + t1100 - t1140;
t270 = t1035 + t1099;
t269 = t615 - t1513;
t268 = t615 - t1512;
t254 = pkin(4) * t1034 + t664;
t251 = -t1032 + t1270;
t244 = t1118 + t1033;
t237 = t1173 + t1294 / 0.2e1 + t1443 + t1014;
t235 = t959 + t1143;
t224 = t961 + t975;
t184 = t1009 + t1473;
t169 = -t499 * t1413 + t1488 * t1412 + t664 + t1350 / 0.2e1 + t1400 / 0.2e1;
t155 = t1009 - t1472 + t1480;
t151 = t1374 / 0.2e1;
t134 = pkin(9) * t1169 + t1154 * t533 - t1038 + t1101;
t133 = pkin(9) * t1171 + t1156 * t533 - t1039 + t1142;
t124 = t126 * qJD(5);
t123 = t125 * qJD(5);
t114 = t1406 * t894 + t933 - t975;
t112 = -t934 + t981;
t83 = t1112 * t1423 - t1327 / 0.2e1 + t1276 * t1404 + t323 * t1406 + t569 * t1154 + t533 * t1152 + t920 * t1094 + t1051 + t1479 * pkin(9);
t82 = t1132 * t1404 + t322 * t1406 + t569 * t1291 / 0.2e1 + t921 * t1173 + t917 * t1094 - t1004 + t1052 + t1010 * pkin(9);
t79 = pkin(4) * t1036 + t845 * t900 + t873 * t899 + t378 - t962;
t77 = t1418 * t484 + t1419 * t483 + t1006 + t945;
t75 = t1418 * t461 + t1420 * t463 + t1025 + t945;
t72 = t965 + t976;
t70 = t810 * t1413 + t1323 / 0.2e1 + t1102 - t1146;
t68 = t378 + t935 + t1037;
t62 = t979 + t1471;
t59 = t1421 * t894 + t936 - t976;
t58 = -t937 + t982;
t56 = -t941 + t949;
t54 = -t943 + t1197;
t52 = t979 - t1470 + t1478;
t46 = t932 - t944;
t42 = t928 + t995;
t40 = -t927 + t955;
t27 = t1118 * t695 + t1406 * t144 - t1041 + t925;
t26 = t1117 * t1487 + t1405 * t143 + t1040 - t926;
t24 = t1418 * t162 + t1419 * t161 + t1007 + t946;
t22 = t1418 * t143 + t1420 * t144 + t1026 + t946;
t20 = t1426 * t162 + t1429 * t161 + t1008 + t1477 - t963;
t18 = pkin(4) * t1043 + t412 * t900 + t664 * t899 + t151 - t970;
t16 = t1426 * t143 + t1428 * t144 + t1027 + t1477 - t964;
t14 = pkin(4) * t1042 + t412 * t873 + t664 * t845 - t942;
t12 = t929 + t967;
t9 = t442 + t923 + t966;
t8 = t151 + t938 + t1045;
t5 = t442 + t924 + t968;
t4 = t930 + t1044;
t2 = t931 + t969;
t84 = [0, 0, 0, t1123, t830 * qJD(2), t922 * t1110, -t919 * t1110, 0, -t700 * qJD(2), -t701 * qJD(2) (t1190 * t921 - t1216) * t812, qJD(2) * t546 + qJD(3) * t549, -t663 * qJD(2) + t1188 * t810, t662 * qJD(2) + t1188 * t812, -t1123, -qJD(2) * t263 - qJD(3) * t388, qJD(2) * t264 + qJD(3) * t387 (qJD(2) * t758 - qJD(4) * t682 - t1216 * t920) * t684, qJD(2) * t350 + qJD(3) * t364 + qJD(4) * t392, qJD(2) * t455 + qJD(3) * t425 - t1248 * t682, qJD(2) * t454 - qJD(3) * t424 - t1248 * t684 (t1190 * t918 + t1215) * t810, qJD(2) * t95 + qJD(3) * t89 + qJD(4) * t228, qJD(2) * t96 + qJD(3) * t90 + qJD(4) * t227, qJD(2) * t38 + qJD(3) * t37 + qJD(4) * t33 + t1483, qJD(2) * t44 + qJD(3) * t43 + qJD(4) * t36 + qJD(5) * t66, qJD(2) * t50 + qJD(3) * t48 + qJD(4) * t63 - t1242 * t1488 - t1499 * t499, qJD(2) * t35 + qJD(3) * t34 + qJD(4) * t32 - t499 * t802 + t1483, qJD(2) * t49 + qJD(3) * t47 + qJD(4) * t64 + qJD(6) * t415 - t1242 * t499, qJD(2) * t31 + qJD(3) * t30 + qJD(4) * t29 + qJD(5) * t65 + qJD(6) * t73; 0, 0, 0, t1122, t1214, t1083 * t1303, -t1083 * t1304, 0, -qJD(2) * t817 - t1220, qJD(2) * t815 - t1219, t1055 * t1279 * t915 + t1482, t1190 * t879 + t1225 + t509, t1182 * t918 - t1221, t1182 * t921 + t1222, -t780, -t1237 + (t1048 * t918 - t817 * t921) * qJD(2) + t383 * qJD(3), t1236 + (t1048 * t921 + t817 * t918) * qJD(2) + t381 * qJD(3), t413 * qJD(3) + t460 + (t1189 + t1257) * t758, t1233 + t279 * qJD(3) - t339 + (-t757 * t920 - t1328) * t1211, t1226 + (t1200 * t910 - t758 * t921) * qJD(2) + t335 * qJD(3) + t448 * qJD(4), t1227 + (-t1202 * t910 + t757 * t921) * qJD(2) + t334 * qJD(3) + t449 * qJD(4), -t1482 + (qJD(4) / 0.2e1 + t1056) * t1201, -t400 * t1210 + t1278 + t82 * qJD(3) + t134 * qJD(4) + (pkin(9) * t757 - t1303 * t759 + t1340) * t1211, t401 * t1210 + t1277 + t83 * qJD(3) + t133 * qJD(4) + (pkin(9) * t758 - t1303 * t760 + t1339) * t1211, t1362 + (-t218 * t794 - t219 * t791 - t483 * t548 - t484 * t547) * qJD(2) + t9 * qJD(3) + t20 * qJD(4) + t124, t1360 + (t218 * t483 + t219 * t484 + t490 * t845) * qJD(2) + t12 * qJD(3) + t14 * qJD(4) + t56 * qJD(5), t1351 + (-t1201 * t463 + t208 * t921 + t255 * t791 + t540 * t547) * qJD(2) + t27 * qJD(3) + t42 * qJD(4) + t270 * qJD(5) + t244 * qJD(6), t1365 + (-t207 * t791 + t208 * t794 - t461 * t547 + t463 * t548) * qJD(2) + t5 * qJD(3) + t16 * qJD(4) + t123 + t268 * qJD(6), t1353 + (t1201 * t461 - t207 * t921 - t255 * t794 - t540 * t548) * qJD(2) + t26 * qJD(3) + t40 * qJD(4) + t269 * qJD(5) - t340, t1369 + (t207 * t461 + t208 * t463 + t255 * t540) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t46 * qJD(5) + t54 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1017, t1058, t1093 * t810, t1093 * t812, t866, qJD(2) * t383 - qJD(3) * t569 - t1262, qJD(2) * t381 + qJD(3) * t568 + t1263, t413 * qJD(2) + t482 + (-t1252 - t1257) * t589, t279 * qJD(2) - t1216 * t878 + t1232 - t353, qJD(2) * t335 + t1215 * t917 + t1260, qJD(2) * t334 + t1215 * t920 - t1261, t971, t1317 + t82 * qJD(2) + (t1108 * t917 - t569 * t920) * qJD(3) + t237 * qJD(4), t1316 + t83 * qJD(2) + (t1108 * t920 + t569 * t917) * qJD(3) + t235 * qJD(4), t1363 + t9 * qJD(2) + (-t209 * t831 - t210 * t828 + t1133) * qJD(3) + t24 * qJD(4) + t1489, t1361 + t12 * qJD(2) + (t1487 * t210 - t209 * t695 + t494 * t899) * qJD(3) + t18 * qJD(4) + t62 * qJD(5), t1356 + t27 * qJD(2) + (t262 * t828 - t572 * t627 - t695 * t812) * qJD(3) + t59 * qJD(4) + t453 * qJD(5) + t251 * qJD(6), t1366 + t5 * qJD(2) + (-t196 * t828 + t197 * t831 + t1133) * qJD(3) + t22 * qJD(4) + t1489 - t452 * qJD(6), t1357 + t26 * qJD(2) + (t1487 * t812 - t262 * t831 - t573 * t627) * qJD(3) + t58 * qJD(4) - t451 * qJD(5) + t434, t1370 + t2 * qJD(2) + (t1487 * t196 + t197 * t695 + t262 * t627) * qJD(3) + t8 * qJD(4) + t52 * qJD(5) + t72 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t973, t986, t448 * qJD(2) - t1126 * t682, t449 * qJD(2) - t1126 * t684, t678, qJD(2) * t134 + qJD(3) * t237 - qJD(4) * t323 + t1267, qJD(2) * t133 + qJD(3) * t235 + qJD(4) * t322 + t1268, t1367 + t20 * qJD(2) + t24 * qJD(3) + (-t1488 * t914 + t499 * t916) * t1386, t1364 + t14 * qJD(2) + t18 * qJD(3) + t254 * qJD(5) + (-t172 * t916 + t173 * t914) * t1386, qJD(2) * t42 + qJD(3) * t59 - qJD(4) * t172 + t1384, t1368 + t16 * qJD(2) + t22 * qJD(3) + (-t1488 * t891 - t499 * t894) * qJD(4) - t499 * qJD(6), qJD(2) * t40 + qJD(3) * t58 + qJD(4) * t173 + t1383 + t802, t1371 + t4 * qJD(2) + t8 * qJD(3) + (t172 * t894 + t173 * t891) * qJD(4) + t169 * qJD(5) + t70 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t992, qJD(2) * t56 + qJD(3) * t62 + qJD(4) * t254 + t1381, qJD(2) * t270 + qJD(3) * t453 - t1217 * t1488, t994, qJD(2) * t269 - t1515, qJD(2) * t46 + qJD(3) * t52 + qJD(4) * t169 + t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t244 + qJD(3) * t251 - t1195, qJD(2) * t268 - qJD(4) * t499 - t1194 - t1228, t948, qJD(2) * t54 + qJD(3) * t72 + qJD(4) * t70 + t1380; 0, 0, 0, -t1122, -t1214, -t922 * t1111, t919 * t1111, 0, t1220, t1219, -t1121 * t812 + t1482, t509 - t1225, -t1188 * t921 + t1221, t1188 * t918 - t1222, t780, qJD(3) * t382 + t1237, qJD(3) * t380 - t1236, qJD(3) * t414 - t1257 * t758 + t460, qJD(3) * t280 - t1233 - t339, -qJD(3) * t332 - qJD(4) * t447 - t1226, -qJD(3) * t333 - qJD(4) * t446 - t1227, -t1482 + (-t1217 + t1387) * t1201, -qJD(3) * t80 - qJD(4) * t131 - t1278, -qJD(3) * t81 - qJD(4) * t132 - t1277, qJD(3) * t10 - qJD(4) * t19 + t124 - t1362, -qJD(3) * t11 - qJD(4) * t13 - qJD(5) * t55 - t1360, qJD(3) * t28 - qJD(4) * t41 - qJD(5) * t265 - qJD(6) * t243 - t1351, qJD(3) * t6 - qJD(4) * t15 - qJD(6) * t266 + t123 - t1365, -qJD(3) * t25 - qJD(4) * t39 - qJD(5) * t267 - t1353 - t340, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t45 - qJD(6) * t53 - t1369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1180, t879 * qJD(3), 0, 0, 0, -pkin(2) * t1251, -pkin(2) * t1249, t1180 * t911 - t1181 * t910, -qJD(4) * t840 - 0.2e1 * t1124 * t921, -qJD(3) * t842 + t1185 * t918, qJD(3) * t841 + t1184 * t918, -t1180, -qJD(3) * t520 - qJD(4) * t668, qJD(3) * t521 + qJD(4) * t667, qJD(3) * t122 + qJD(4) * t127 + t1500, qJD(3) * t174 + qJD(4) * t177 + qJD(5) * t252, t176 * qJD(3) + t231 * qJD(4) + (-t1240 + t1241) * t794, qJD(3) * t104 + qJD(4) * t119 + t1238 * t791 + t1500, -qJD(3) * t175 - qJD(4) * t232 + qJD(6) * t732 + t1241 * t791, qJD(3) * t88 + qJD(4) * t97 + qJD(5) * t242 - qJD(6) * t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1129, t1057, -t1093 * t921, t1093 * t918, qJD(1) * t1162, -pkin(9) * t1249 - t1046, pkin(9) * t1251 - t1047, t1231 - t809 + (t1211 * t911 + t1187) * t921, t1234 + t855 + (-0.2e1 * t1120 + t1493) * t921, t1251 * t917 + t1063, t1062 + t1186, -t1013 (t1107 * t917 - t1206) * qJD(3) + t630 * qJD(4) + t1069 (t1107 * t920 + t1209) * qJD(3) + t629 * qJD(4) + t1068 (-t495 * t831 - t497 * t828 + t1131) * qJD(3) + t77 * qJD(4) + t1481 + t1082 (t1487 * t497 - t495 * t695 + t846 * t899) * qJD(3) + t79 * qJD(4) + t184 * qJD(5) + t1081 (t541 * t828 + t627 * t793 - t695 * t918) * qJD(3) + t114 * qJD(4) + t611 * qJD(5) + t476 * qJD(6) + t1076 (-t473 * t828 + t474 * t831 + t1131) * qJD(3) + t75 * qJD(4) + t1481 - t610 * qJD(6) + t1090 (t1487 * t918 - t541 * t831 - t627 * t796) * qJD(3) + t112 * qJD(4) - t609 * qJD(5) + t645 + t1077 (t1487 * t473 + t474 * t695 + t541 * t627) * qJD(3) + t68 * qJD(4) + t155 * qJD(5) + t224 * qJD(6) + t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t956, -t958, t1067 * t917 - t1229, t1067 * t920 - t1230, qJD(1) * t1118 + t895, qJD(3) * t630 - qJD(4) * t760 - t1065, qJD(3) * t629 + qJD(4) * t759 - t1064, t77 * qJD(3) + (t791 * t916 - t794 * t914) * t1386 + t1079, t79 * qJD(3) + t527 * qJD(5) + (-t505 * t916 + t506 * t914) * t1386 + t1078, qJD(3) * t114 - qJD(4) * t505 + t1074, t75 * qJD(3) + (-t791 * t894 - t794 * t891) * qJD(4) - t1240 + t1080, qJD(3) * t112 + qJD(4) * t506 + t1073 - t1238, t68 * qJD(3) + (t505 * t894 + t506 * t891) * qJD(4) + t349 * qJD(5) + t275 * qJD(6) + t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t991, qJD(3) * t184 + qJD(4) * t527 - t1071, qJD(3) * t611 + t1210 * t794 - t1235, t993, -t1128 - t1265, qJD(3) * t155 + qJD(4) * t349 + t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t476 - t1018, t1016 - t1266, t947, qJD(3) * t224 + qJD(4) * t275 + t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1017, -t1058, -t1056 * t1303, -t1055 * t1303, t866, -qJD(2) * t382 + t1262, -qJD(2) * t380 - t1263, -qJD(2) * t414 + t1193 * t920 + t482, -qJD(2) * t280 - t1232 - t353, qJD(2) * t332 + qJD(4) * t589 - t1260, qJD(2) * t333 - qJD(4) * t585 + t1261, -t971, qJD(2) * t80 + qJD(4) * t236 - t1317, qJD(2) * t81 + qJD(4) * t234 - t1316, -qJD(2) * t10 - qJD(4) * t23 - t1363 + t1489, qJD(2) * t11 - qJD(4) * t17 - qJD(5) * t61 - t1361, -qJD(2) * t28 + qJD(4) * t60 + qJD(5) * t450 - qJD(6) * t250 - t1356, -qJD(2) * t6 - qJD(4) * t21 - qJD(6) * t451 - t1366 + t1489, qJD(2) * t25 - qJD(4) * t57 - qJD(5) * t452 - t1357 + t434, qJD(2) * t1 - qJD(4) * t7 - qJD(5) * t51 - qJD(6) * t71 - t1370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1129, -t1057, t1121, -t918 * t1191, qJD(1) * t1161, t1046, t1047, -t882 * t911 - t1231 - t809, t1103 * t921 - t1234 + t855, -t1063 - t1184, -t1062 + t1185, t1013, qJD(4) * t681 - t1069, qJD(4) * t680 - t1068, -qJD(4) * t76 - t1082 + t1481, -qJD(4) * t78 - qJD(5) * t183 - t1081, qJD(4) * t113 - qJD(5) * t608 - qJD(6) * t475 - t1076, -qJD(4) * t74 - qJD(6) * t609 - t1090 + t1481, -qJD(4) * t111 - qJD(5) * t610 - t1077 + t645, -qJD(4) * t67 - qJD(5) * t154 - qJD(6) * t223 - t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, t878 * qJD(4), 0, 0, 0, -pkin(3) * t1246, -pkin(3) * t1245, t1501, qJD(4) * t317 + t1484, qJD(4) * t356 - t1239 * t828, t1501, qJD(4) * t357 + qJD(6) * t823, qJD(4) * t247 - t1239 * t627 + t1484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t972, -t957, -t1125 * t920 + t1223, t1125 * t917 - t1224, -t1049, -pkin(10) * t1245 - t977, pkin(10) * t1246 - t978 (t828 * t916 - t831 * t914) * t1386 - t1000, t580 * qJD(5) + (-t1487 * t916 - t695 * t914) * t1386 + t1002, -qJD(4) * t1487 + t998 (-t828 * t894 - t831 * t891) * qJD(4) - qJD(6) * t828 - t1001, -qJD(4) * t695 + t999 (t1487 * t894 - t695 * t891) * qJD(4) + t444 * qJD(5) + t584 * qJD(6) + t1005; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497, qJD(4) * t580 + t996, t1061, t1497, t1059, qJD(4) * t444 + t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t974, -t1060 - t1247, t300, qJD(4) * t584 - t1213 * t627 - t1075; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t973, -t986, qJD(2) * t447 - qJD(3) * t589 + t1217 * t682, qJD(2) * t446 + qJD(3) * t585 + t1193, t678, qJD(2) * t131 - qJD(3) * t236 - t1267, qJD(2) * t132 - qJD(3) * t234 - t1268, qJD(2) * t19 + qJD(3) * t23 - t1367, qJD(2) * t13 + qJD(3) * t17 + qJD(5) * t253 - t1364, qJD(2) * t41 - qJD(3) * t60 - t1384 - t1502, qJD(2) * t15 + qJD(3) * t21 - t1368, qJD(2) * t39 + qJD(3) * t57 - qJD(5) * t499 - t1383 + t802, qJD(2) * t3 + qJD(3) * t7 + qJD(5) * t168 - qJD(6) * t69 - t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t956, t958, t1229 + (-t1211 * t917 + t1250) * t921, t1230 + (-t1189 - t1252) * t921, qJD(1) * t1117 + t895, -qJD(3) * t681 + t1065, -qJD(3) * t680 + t1064, qJD(3) * t76 - t1079, qJD(3) * t78 + qJD(5) * t528 - t1078, -qJD(3) * t113 - t1074 - t1243, qJD(3) * t74 - t1080, qJD(3) * t111 - qJD(5) * t791 - t1073 - t1238, qJD(3) * t67 - qJD(5) * t348 - qJD(6) * t274 - t1091; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t972, t957, t1210 * t920 - t1223, -t1210 * t917 + t1224, t1049, t977, t978, t1000, qJD(5) * t581 - t1002, -qJD(5) * t831 - t998, t1001, -qJD(5) * t828 - t999, -qJD(5) * t443 + qJD(6) * t688 - t1005; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t891 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t987, -t1514, 0, t985, t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1015, -t952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t992, qJD(2) * t55 + qJD(3) * t61 - qJD(4) * t253 - t1381, t265 * qJD(2) - t450 * qJD(3) + t1126 * t1488, -t994, t267 * qJD(2) + t1126 * t499 + t1228, qJD(2) * t45 + qJD(3) * t51 - qJD(4) * t168 - t1382 - t1499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t991, qJD(3) * t183 - qJD(4) * t528 + t1071, t608 * qJD(3) - t1125 * t794 + t1235, -t993, -t1016 + t1265, qJD(3) * t154 + qJD(4) * t348 - qJD(6) * t794 - t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1497, -qJD(4) * t581 - t996, qJD(4) * t831 - t1061, -t1497, -t1059 + t1247, qJD(4) * t443 - t1239 - t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t987, t1514, 0, -t985, -t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t243 + qJD(3) * t250 + t1195, qJD(2) * t266 + t1515, -t948, qJD(2) * t53 + qJD(3) * t71 + qJD(4) * t69 - t1380 + t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t475 + t1018, t1128 + t1266, -t947, qJD(3) * t223 + qJD(4) * t274 - t1070 + t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t974, t1060, -t300, -t688 * qJD(4) + (qJD(3) * t627 + qJD(5)) * t831 + t1075; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1015, t952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t84;
