% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPPPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 08:45
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPPPR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR4_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR4_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPPR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPPR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR4_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 08:45:28
% EndTime: 2019-05-06 08:45:34
% DurationCPUTime: 5.75s
% Computational Cost: add. (12182->302), mult. (27572->297), div. (0->0), fcn. (16512->8), ass. (0->182)
t2064 = cos(qJ(2));
t2108 = qJD(1) * t2064;
t2047 = qJD(2) * t2108;
t2061 = sin(qJ(2));
t2092 = t2061 * qJDD(1);
t2024 = t2047 + t2092;
t2057 = sin(pkin(9));
t2058 = cos(pkin(9));
t2018 = qJD(2) * t2057 + t2058 * t2108;
t2020 = qJD(2) * t2058 - t2057 * t2108;
t2104 = t2018 * t2020;
t1976 = t2024 + t2104;
t2016 = t2020 ^ 2;
t2054 = t2061 ^ 2;
t2067 = qJD(1) ^ 2;
t2049 = t2054 * t2067;
t2122 = -t2016 - t2049;
t1947 = t1976 * t2057 - t2058 * t2122;
t2109 = qJD(1) * t2061;
t2046 = qJD(2) * t2109;
t2091 = t2064 * qJDD(1);
t2025 = -t2046 + t2091;
t2004 = qJDD(2) * t2058 - t2025 * t2057;
t2088 = t2018 * t2109;
t2070 = t2004 - t2088;
t1927 = t1947 * t2061 - t2064 * t2070;
t1949 = t1976 * t2058 + t2057 * t2122;
t2062 = sin(qJ(1));
t2065 = cos(qJ(1));
t2149 = t1927 * t2062 - t1949 * t2065;
t2148 = t1927 * t2065 + t1949 * t2062;
t1929 = t1947 * t2064 + t2061 * t2070;
t2083 = qJDD(2) * t2057 + t2058 * t2025;
t2103 = t2020 * t2061;
t2089 = qJD(1) * t2103;
t2073 = -t2083 + t2089;
t2081 = -t2004 - t2088;
t2119 = -t2057 * t2081 + t2058 * t2073;
t2115 = t2018 ^ 2;
t1968 = t2016 + t2115;
t2118 = t2057 * t2073 + t2058 * t2081;
t2136 = -t1968 * t2064 + t2061 * t2118;
t2145 = t2062 * t2136 - t2065 * t2119;
t1977 = t2024 - t2104;
t2121 = -t2115 - t2049;
t2131 = -t2057 * t1977 + t2058 * t2121;
t1970 = t2083 + t2089;
t2126 = t1977 * t2058 + t2057 * t2121;
t2138 = t2064 * t1970 + t2061 * t2126;
t2144 = t2062 * t2138 - t2065 * t2131;
t2143 = t2062 * t2119 + t2065 * t2136;
t2142 = t2062 * t2131 + t2065 * t2138;
t2139 = t2061 * t1970 - t2064 * t2126;
t2137 = -t1968 * t2061 - t2064 * t2118;
t2096 = t2064 * t2067;
t2087 = t2061 * t2096;
t2032 = -qJDD(2) + t2087;
t2066 = qJD(2) ^ 2;
t2037 = -t2049 - t2066;
t1995 = t2032 * t2064 - t2037 * t2061;
t2023 = 0.2e1 * t2047 + t2092;
t2130 = t1995 * t2062 - t2023 * t2065;
t2129 = t1995 * t2065 + t2023 * t2062;
t2031 = qJDD(2) + t2087;
t2055 = t2064 ^ 2;
t2098 = t2055 * t2067;
t2038 = t2066 + t2098;
t1996 = t2031 * t2061 + t2038 * t2064;
t2026 = -0.2e1 * t2046 + t2091;
t2128 = t1996 * t2062 - t2026 * t2065;
t2127 = t1996 * t2065 + t2026 * t2062;
t2040 = -qJD(6) + t2109;
t2123 = qJD(6) - t2040;
t2034 = t2062 * g(1) - t2065 * g(2);
t2074 = -qJDD(1) * pkin(1) - t2034;
t2090 = 0.2e1 * t2109;
t2120 = pkin(2) * t2046 - (t2024 + t2047) * qJ(3) - qJD(3) * t2090 + t2074;
t2060 = sin(qJ(6));
t2063 = cos(qJ(6));
t1981 = -t2063 * t2018 + t2020 * t2060;
t2117 = t1981 ^ 2;
t1983 = t2018 * t2060 + t2020 * t2063;
t2116 = t1983 ^ 2;
t2114 = t2040 ^ 2;
t2113 = 0.2e1 * qJD(3);
t2112 = -0.2e1 * t2020;
t2111 = t2064 * g(3);
t2110 = t2067 * pkin(7);
t2105 = t1981 * t1983;
t2035 = -g(1) * t2065 - g(2) * t2062;
t2014 = -pkin(1) * t2067 + qJDD(1) * pkin(7) + t2035;
t2097 = t2064 * t2014;
t1986 = pkin(4) * t2018 - qJ(5) * t2020;
t2095 = (2 * qJD(4)) + t1986;
t2094 = qJD(6) + t2040;
t2033 = pkin(3) * t2109 - qJD(2) * qJ(4);
t1936 = -t2033 * t2109 + (-pkin(3) * t2055 - pkin(7)) * t2067 + (-pkin(2) - qJ(4)) * t2025 + t2120;
t2075 = -qJDD(2) * pkin(2) - t2066 * qJ(3) + qJDD(3) + t2111;
t2022 = (-pkin(2) * t2064 - qJ(3) * t2061) * qJD(1);
t2086 = qJD(1) * t2022 + t2014;
t1946 = -qJDD(2) * qJ(4) + (t2024 - t2047) * pkin(3) + (-qJ(4) * t2096 + t2086) * t2061 + t2075;
t1908 = -0.2e1 * qJD(4) * t2018 + t2058 * t1936 + t2057 * t1946;
t2085 = t2057 * t1936 - t2058 * t1946;
t2084 = -t2060 * t2004 + t2063 * t2083;
t2051 = t2061 * g(3);
t2080 = -t2066 * pkin(2) + qJDD(2) * qJ(3) - t2051;
t2079 = qJD(4) * t2112 - t2085;
t2078 = qJDD(6) - t2024;
t2077 = t2086 * t2064;
t1993 = t2031 * t2064 - t2038 * t2061;
t1991 = t2032 * t2061 + t2037 * t2064;
t2076 = -pkin(5) * t2109 - pkin(8) * t2020;
t2072 = -qJ(5) * t2049 + qJDD(5) + t2085;
t2071 = -t2063 * t2004 - t2060 * t2083;
t1900 = -pkin(4) * t2049 + t2024 * qJ(5) + qJD(5) * t2090 - t2018 * t1986 + t1908;
t2068 = qJDD(4) + t2025 * pkin(3) + (t2113 + t2033) * qJD(2) - qJ(4) * t2098 + t2080;
t1909 = qJD(5) * t2112 + t2097 + t2083 * pkin(4) + (pkin(4) * t2103 + t2022 * t2064) * qJD(1) + t2068 - t2070 * qJ(5);
t2030 = t2049 + t2098;
t2029 = -qJDD(1) * t2062 - t2065 * t2067;
t2028 = qJDD(1) * t2065 - t2062 * t2067;
t2027 = (t2054 + t2055) * qJDD(1);
t2013 = -t2074 + t2110;
t2000 = -t2051 + t2097;
t1999 = -t2061 * t2014 - t2111;
t1988 = t2027 * t2065 - t2030 * t2062;
t1987 = t2027 * t2062 + t2030 * t2065;
t1961 = t2086 * t2061 + t2075;
t1960 = -t2114 - t2116;
t1959 = qJD(2) * t2113 + t2077 + t2080;
t1958 = -t1999 * t2061 + t2000 * t2064;
t1957 = t1999 * t2064 + t2000 * t2061;
t1956 = t2025 * pkin(2) + t2110 - t2120;
t1951 = -t2114 - t2117;
t1945 = t2078 - t2105;
t1944 = -t2078 - t2105;
t1943 = t2077 + t2068;
t1934 = -t2116 - t2117;
t1933 = t1959 * t2064 + t1961 * t2061;
t1932 = t1959 * t2061 - t1961 * t2064;
t1923 = t1981 * t2094 + t2071;
t1922 = -t1981 * t2123 - t2071;
t1921 = -t1983 * t2094 + t2084;
t1920 = t1983 * t2123 - t2084;
t1915 = t1944 * t2063 - t1960 * t2060;
t1914 = t1944 * t2060 + t1960 * t2063;
t1912 = -t1945 * t2060 + t1951 * t2063;
t1911 = t1945 * t2063 + t1951 * t2060;
t1906 = pkin(5) * t2083 + pkin(8) * t2115 - t2020 * t2076 + t1909;
t1905 = t1921 * t2063 - t1923 * t2060;
t1904 = t1921 * t2060 + t1923 * t2063;
t1903 = -t2024 * pkin(4) + t2095 * t2020 + t2072;
t1899 = t2057 * t1914 + t1915 * t2058;
t1898 = -t1914 * t2058 + t1915 * t2057;
t1897 = -pkin(5) * t2115 + pkin(8) * t2083 + t2076 * t2109 + t1900;
t1896 = t2057 * t1911 + t1912 * t2058;
t1895 = -t1911 * t2058 + t1912 * t2057;
t1894 = (-pkin(4) - pkin(5)) * t2024 + t2081 * pkin(8) + (pkin(5) * t2018 + t2095) * t2020 + t2072;
t1893 = t2058 * t1908 - t2057 * t2079;
t1892 = t2057 * t1908 + t2058 * t2079;
t1891 = t1898 * t2061 - t1922 * t2064;
t1890 = -t1898 * t2064 - t1922 * t2061;
t1889 = t1895 * t2061 - t1920 * t2064;
t1888 = -t1895 * t2064 - t1920 * t2061;
t1887 = t1892 * t2061 + t1943 * t2064;
t1886 = -t1892 * t2064 + t1943 * t2061;
t1885 = t2057 * t1904 + t1905 * t2058;
t1884 = -t1904 * t2058 + t1905 * t2057;
t1883 = t1900 * t2058 + t2057 * t1903;
t1882 = t1900 * t2057 - t1903 * t2058;
t1881 = t1884 * t2061 - t1934 * t2064;
t1880 = -t1884 * t2064 - t1934 * t2061;
t1879 = t1894 * t2060 + t1897 * t2063;
t1878 = t1894 * t2063 - t1897 * t2060;
t1877 = t1882 * t2061 + t1909 * t2064;
t1876 = -t1882 * t2064 + t1909 * t2061;
t1875 = -t1878 * t2060 + t1879 * t2063;
t1874 = t1878 * t2063 + t1879 * t2060;
t1872 = t2057 * t1874 + t1875 * t2058;
t1871 = -t1874 * t2058 + t1875 * t2057;
t1870 = t1871 * t2061 + t1906 * t2064;
t1869 = -t1871 * t2064 + t1906 * t2061;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2029, -t2028, 0, -t2034 * t2062 + t2035 * t2065, 0, 0, 0, 0, 0, 0, -t2127, t2129, t1988, t1958 * t2065 - t2013 * t2062, 0, 0, 0, 0, 0, 0, t1988, t2127, -t2129, t1933 * t2065 - t1956 * t2062, 0, 0, 0, 0, 0, 0, t2142, -t2148, t2143, t1887 * t2065 + t1893 * t2062, 0, 0, 0, 0, 0, 0, t2142, t2143, t2148, t1877 * t2065 + t1883 * t2062, 0, 0, 0, 0, 0, 0, t1889 * t2065 + t1896 * t2062, t1891 * t2065 + t1899 * t2062, t1881 * t2065 + t1885 * t2062, t1870 * t2065 + t1872 * t2062; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2028, t2029, 0, t2034 * t2065 + t2035 * t2062, 0, 0, 0, 0, 0, 0, -t2128, t2130, t1987, t1958 * t2062 + t2013 * t2065, 0, 0, 0, 0, 0, 0, t1987, t2128, -t2130, t1933 * t2062 + t1956 * t2065, 0, 0, 0, 0, 0, 0, t2144, -t2149, t2145, t1887 * t2062 - t1893 * t2065, 0, 0, 0, 0, 0, 0, t2144, t2145, t2149, t1877 * t2062 - t1883 * t2065, 0, 0, 0, 0, 0, 0, t1889 * t2062 - t1896 * t2065, t1891 * t2062 - t1899 * t2065, t1881 * t2062 - t1885 * t2065, t1870 * t2062 - t1872 * t2065; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1993, t1991, 0, t1957, 0, 0, 0, 0, 0, 0, 0, -t1993, -t1991, t1932, 0, 0, 0, 0, 0, 0, t2139, t1929, t2137, t1886, 0, 0, 0, 0, 0, 0, t2139, t2137, -t1929, t1876, 0, 0, 0, 0, 0, 0, t1888, t1890, t1880, t1869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2067, -qJDD(1), 0, t2035, 0, 0, 0, 0, 0, 0, -t1996, t1995, t2027, t1958, 0, 0, 0, 0, 0, 0, t2027, t1996, -t1995, t1933, 0, 0, 0, 0, 0, 0, t2138, -t1927, t2136, t1887, 0, 0, 0, 0, 0, 0, t2138, t2136, t1927, t1877, 0, 0, 0, 0, 0, 0, t1889, t1891, t1881, t1870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2067, 0, t2034, 0, 0, 0, 0, 0, 0, t2026, -t2023, t2030, t2013, 0, 0, 0, 0, 0, 0, t2030, -t2026, t2023, t1956, 0, 0, 0, 0, 0, 0, -t2131, t1949, -t2119, -t1893, 0, 0, 0, 0, 0, 0, -t2131, -t2119, -t1949, -t1883, 0, 0, 0, 0, 0, 0, -t1896, -t1899, -t1885, -t1872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1993, t1991, 0, t1957, 0, 0, 0, 0, 0, 0, 0, -t1993, -t1991, t1932, 0, 0, 0, 0, 0, 0, t2139, t1929, t2137, t1886, 0, 0, 0, 0, 0, 0, t2139, t2137, -t1929, t1876, 0, 0, 0, 0, 0, 0, t1888, t1890, t1880, t1869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2038, t2032, t2091, t2000, 0, 0, 0, 0, 0, 0, t2091, t2038, -t2032, t1959, 0, 0, 0, 0, 0, 0, t1970, t2070, -t1968, t1943, 0, 0, 0, 0, 0, 0, t1970, -t1968, -t2070, t1909, 0, 0, 0, 0, 0, 0, -t1920, -t1922, -t1934, t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2031, t2037, -t2092, t1999, 0, 0, 0, 0, 0, 0, -t2092, -t2031, -t2037, -t1961, 0, 0, 0, 0, 0, 0, -t2126, t1947, -t2118, -t1892, 0, 0, 0, 0, 0, 0, -t2126, -t2118, -t1947, -t1882, 0, 0, 0, 0, 0, 0, -t1895, -t1898, -t1884, -t1871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2026, t2023, -t2030, -t2013, 0, 0, 0, 0, 0, 0, -t2030, t2026, -t2023, -t1956, 0, 0, 0, 0, 0, 0, t2131, -t1949, t2119, t1893, 0, 0, 0, 0, 0, 0, t2131, t2119, t1949, t1883, 0, 0, 0, 0, 0, 0, t1896, t1899, t1885, t1872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2030, t2026, -t2023, -t1956, 0, 0, 0, 0, 0, 0, t2131, -t1949, t2119, t1893, 0, 0, 0, 0, 0, 0, t2131, t2119, t1949, t1883, 0, 0, 0, 0, 0, 0, t1896, t1899, t1885, t1872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2091, -t2038, t2032, -t1959, 0, 0, 0, 0, 0, 0, -t1970, -t2070, t1968, -t1943, 0, 0, 0, 0, 0, 0, -t1970, t1968, t2070, -t1909, 0, 0, 0, 0, 0, 0, t1920, t1922, t1934, -t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2092, t2031, t2037, t1961, 0, 0, 0, 0, 0, 0, t2126, -t1947, t2118, t1892, 0, 0, 0, 0, 0, 0, t2126, t2118, t1947, t1882, 0, 0, 0, 0, 0, 0, t1895, t1898, t1884, t1871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2121, -t1976, t2073, t1908, 0, 0, 0, 0, 0, 0, t2121, t2073, t1976, t1900, 0, 0, 0, 0, 0, 0, t1912, t1915, t1905, t1875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1977, t2122, t2081, t2079, 0, 0, 0, 0, 0, 0, t1977, t2081, -t2122, -t1903, 0, 0, 0, 0, 0, 0, -t1911, -t1914, -t1904, -t1874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1970, t2070, -t1968, t1943, 0, 0, 0, 0, 0, 0, t1970, -t1968, -t2070, t1909, 0, 0, 0, 0, 0, 0, -t1920, -t1922, -t1934, t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2121, t2073, t1976, t1900, 0, 0, 0, 0, 0, 0, t1912, t1915, t1905, t1875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1970, -t1968, -t2070, t1909, 0, 0, 0, 0, 0, 0, -t1920, -t1922, -t1934, t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1977, -t2081, t2122, t1903, 0, 0, 0, 0, 0, 0, t1911, t1914, t1904, t1874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1951, t1944, t1921, t1879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1945, t1960, t1923, t1878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1920, t1922, t1934, -t1906;];
f_new_reg  = t1;
