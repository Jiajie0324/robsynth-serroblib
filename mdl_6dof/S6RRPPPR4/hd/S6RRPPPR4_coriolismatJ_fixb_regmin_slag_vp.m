% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:19:48
% EndTime: 2019-03-09 08:20:00
% DurationCPUTime: 5.24s
% Computational Cost: add. (2845->433), mult. (5768->569), div. (0->0), fcn. (5488->6), ass. (0->343)
t248 = sin(qJ(2));
t243 = t248 ^ 2;
t342 = t243 * qJD(3);
t249 = cos(qJ(2));
t361 = qJD(4) * t249;
t454 = t248 * t361 + t342;
t338 = t249 * qJD(3);
t453 = -qJD(4) * t248 + t338;
t392 = t248 * qJ(3);
t247 = -pkin(2) - qJ(4);
t393 = t247 * t249;
t452 = t392 - t393;
t245 = sin(pkin(9));
t246 = cos(pkin(9));
t370 = t246 * qJ(5) - qJ(3);
t439 = pkin(4) + pkin(5);
t143 = -t245 * t439 + t370;
t451 = -t143 / 0.2e1;
t365 = qJD(1) * t248;
t425 = sin(qJ(6));
t323 = t425 * t245;
t426 = cos(qJ(6));
t325 = t426 * t246;
t163 = -t323 - t325;
t403 = t163 * t249;
t450 = t403 * (-qJD(6) + t365);
t449 = t246 * t454;
t256 = t323 / 0.2e1 + t325 / 0.2e1;
t448 = t248 * t256;
t229 = t246 * qJD(2);
t339 = t249 * qJD(1);
t311 = t245 * t339;
t447 = t311 - t229;
t322 = t425 * t246;
t326 = t426 * t245;
t164 = t322 - t326;
t349 = t164 * qJD(2);
t356 = t403 * qJD(1);
t446 = t349 + t356;
t437 = t163 / 0.2e1;
t251 = t437 + t256;
t70 = t251 * t249;
t445 = -t70 * qJD(1) + t349;
t350 = t163 * qJD(2);
t321 = t425 * t249;
t202 = t246 * t321;
t324 = t426 * t249;
t127 = t245 * t324 - t202;
t353 = t127 * qJD(1);
t444 = t350 + t353;
t287 = t326 / 0.2e1;
t435 = t164 / 0.2e1;
t272 = t435 + t287;
t433 = -t202 / 0.2e1;
t73 = t249 * t272 + t433;
t443 = t73 * qJD(1) + t350;
t148 = t163 * qJD(6);
t75 = (t437 - t256) * t248;
t376 = t75 * qJD(1);
t442 = t376 - t148;
t399 = t245 * qJ(5);
t441 = -t246 * t439 - t399;
t440 = pkin(3) + pkin(7);
t438 = -t163 / 0.2e1;
t436 = -t164 / 0.2e1;
t201 = t248 * t322;
t434 = -t201 / 0.2e1;
t239 = t245 ^ 2;
t432 = -t239 / 0.2e1;
t431 = -t245 / 0.2e1;
t430 = -t246 / 0.2e1;
t429 = t248 / 0.2e1;
t428 = -t249 / 0.2e1;
t427 = t249 / 0.2e1;
t424 = t246 * pkin(4);
t423 = t249 * pkin(4);
t422 = pkin(8) + t247;
t102 = (t440 - t441) * t248;
t236 = t249 * pkin(7);
t237 = t249 * pkin(3);
t197 = t236 + t237;
t103 = t249 * t441 - t197;
t123 = t163 * t248;
t397 = t245 * t249;
t157 = -pkin(1) - t452;
t196 = t440 * t248;
t96 = -t245 * t157 + t246 * t196;
t250 = pkin(8) * t397 - t248 * t439 - t96;
t394 = t246 * t249;
t173 = t245 * t196;
t97 = t246 * t157 + t173;
t82 = t248 * qJ(5) + t97;
t57 = pkin(8) * t394 + t82;
t23 = -t250 * t426 + t425 * t57;
t395 = t246 * t248;
t195 = t248 * pkin(2) - t249 * qJ(3);
t159 = t248 * qJ(4) + t195;
t101 = t246 * t159 + t197 * t245;
t234 = t249 * qJ(5);
t88 = t234 + t101;
t58 = -pkin(8) * t395 + t88;
t329 = t425 * t58;
t138 = t245 * t159;
t402 = t197 * t246;
t100 = -t138 + t402;
t398 = t245 * t248;
t52 = -pkin(8) * t398 - t249 * t439 - t100;
t332 = t426 * t52;
t1 = (-t329 + t332) * t248 - t23 * t249 - t102 * t403 + t103 * t123;
t421 = t1 * qJD(1);
t124 = t248 * t326 - t201;
t24 = t250 * t425 + t426 * t57;
t330 = t425 * t52;
t331 = t426 * t58;
t2 = (t331 + t330) * t248 + t24 * t249 - t102 * t127 + t103 * t124;
t420 = t2 * qJD(1);
t175 = t422 * t245;
t176 = t422 * t246;
t105 = t175 * t426 - t176 * t425;
t255 = t103 * t438 + t105 * t429 + t127 * t451;
t258 = t332 / 0.2e1 - t329 / 0.2e1;
t3 = -t255 + t258;
t419 = t3 * qJD(1);
t104 = t175 * t425 + t176 * t426;
t254 = t103 * t436 - t104 * t248 / 0.2e1 + t403 * t451;
t257 = -t331 / 0.2e1 - t330 / 0.2e1;
t4 = -t254 + t257;
t418 = t4 * qJD(1);
t280 = t399 + t424;
t109 = (-t280 - t440) * t248;
t110 = t249 * t280 + t197;
t85 = -t248 * pkin(4) - t96;
t91 = -t100 - t423;
t7 = t110 * t109 + t82 * t88 + t85 * t91;
t417 = t7 * qJD(1);
t415 = t82 * t248;
t8 = (t249 * t88 - t415) * t246 + (-t248 * t85 + t249 * t91) * t245;
t416 = t8 * qJD(1);
t414 = t88 * t245;
t9 = -t103 * t403 - t23 * t248;
t413 = t9 * qJD(1);
t412 = t91 * t246;
t10 = t103 * t127 - t24 * t248;
t411 = t10 * qJD(1);
t410 = t100 * t246;
t409 = t101 * t245;
t11 = t96 * t398 - t100 * t397 + (t101 * t249 - t248 * t97) * t246;
t408 = t11 * qJD(1);
t12 = t96 * t100 + t97 * t101 - t197 * t196;
t407 = t12 * qJD(1);
t274 = t109 * t249 - t110 * t248;
t13 = t245 * t274 + t88 * t248 + t82 * t249;
t406 = t13 * qJD(1);
t14 = t246 * t274 - t91 * t248 - t85 * t249;
t405 = t14 * qJD(1);
t271 = t399 / 0.2e1 + t424 / 0.2e1;
t337 = -pkin(7) / 0.2e1 - pkin(3) / 0.2e1;
t252 = (-t271 + t337) * t248;
t270 = t82 * t431 + t85 * t246 / 0.2e1;
t15 = t252 - t270;
t404 = t15 * qJD(1);
t20 = t100 * t248 + t96 * t249 + (-t196 * t249 - t197 * t248) * t246;
t401 = t20 * qJD(1);
t21 = t101 * t248 - t197 * t398 + (t97 - t173) * t249;
t400 = t21 * qJD(1);
t396 = t246 * t127;
t177 = t245 * pkin(4) - t370;
t259 = (t177 * t427 + t247 * t429) * t245;
t333 = t423 / 0.2e1;
t284 = -t138 / 0.2e1 + t333;
t26 = (-t110 / 0.2e1 + t197 / 0.2e1) * t246 + t259 + t284;
t391 = t26 * qJD(1);
t279 = t245 * t85 + t246 * t82;
t27 = t279 * t248;
t390 = t27 * qJD(1);
t28 = t279 * t249;
t389 = t28 * qJD(1);
t269 = t430 * t96 + t431 * t97;
t293 = t337 * t248;
t29 = t293 - t269;
t388 = t29 * qJD(1);
t33 = (-t245 * t96 + t246 * t97) * t248;
t387 = t33 * qJD(1);
t34 = t394 * t97 - t397 * t96;
t386 = t34 * qJD(1);
t35 = -t127 * t123 - t124 * t403;
t385 = t35 * qJD(1);
t36 = t110 * t397 + t415;
t384 = t36 * qJD(1);
t55 = t123 * t248 - t249 * t403;
t383 = t55 * qJD(1);
t56 = t124 * t248 - t127 * t249;
t382 = t56 * qJD(1);
t68 = t251 * t248;
t381 = t68 * qJD(1);
t69 = t434 + (t287 + t436) * t248;
t380 = t69 * qJD(1);
t306 = t163 * t429;
t74 = t306 + t448;
t377 = t74 * qJD(6);
t375 = t75 * qJD(6);
t261 = t248 * t287 + t434;
t305 = t164 * t429;
t76 = t305 - t261;
t374 = t76 * qJD(1);
t77 = t248 * t272 + t434;
t373 = t77 * qJD(1);
t98 = t243 * t425 - t397 * t403;
t372 = t98 * qJD(1);
t99 = t127 * t397 + t243 * t426;
t371 = t99 * qJD(1);
t240 = t246 ^ 2;
t205 = t239 + t240;
t125 = t205 * t249 * t248;
t244 = t249 ^ 2;
t166 = t205 * t244;
t369 = t125 * qJD(3) + t166 * qJD(4);
t301 = t432 - t240 / 0.2e1;
t179 = -0.1e1 / 0.2e1 + t301;
t160 = t205 * t247;
t351 = t160 * qJD(2);
t368 = -t179 * qJD(3) + t351;
t178 = 0.1e1 / 0.2e1 + t301;
t367 = t178 * qJD(3) - t351;
t366 = t454 * t245;
t364 = qJD(3) * t246;
t363 = qJD(3) * t248;
t360 = qJD(5) * t245;
t281 = -t249 * pkin(2) - t392;
t181 = -pkin(1) + t281;
t107 = t181 * t249 + t195 * t248;
t359 = t107 * qJD(1);
t108 = -t181 * t248 + t195 * t249;
t358 = t108 * qJD(1);
t357 = t125 * qJD(1);
t355 = t403 * qJD(4);
t354 = t403 * qJD(6);
t352 = t127 * qJD(4);
t118 = t127 * qJD(6);
t150 = t164 * qJD(6);
t348 = t166 * qJD(1);
t347 = t177 * qJD(2);
t346 = t179 * qJD(2);
t345 = t205 * qJD(2);
t211 = t244 - t243;
t344 = t211 * qJD(1);
t343 = t243 * qJD(1);
t228 = t245 * qJD(2);
t341 = t246 * qJD(5);
t340 = t248 * qJD(2);
t232 = t249 * qJD(2);
t336 = pkin(1) * t365;
t335 = pkin(1) * t339;
t334 = pkin(7) * t340;
t328 = t248 * t426;
t327 = t248 * t425;
t319 = t123 * t365;
t318 = t124 * t365;
t317 = t248 * t356;
t316 = t248 * t353;
t315 = t181 * t195 * qJD(1);
t314 = t181 * t365;
t313 = t245 * t343;
t312 = t248 * t360;
t310 = t246 * t343;
t309 = t245 * t229;
t308 = t245 * t341;
t307 = t249 * t341;
t214 = t248 * t339;
t304 = t164 * t431;
t303 = t403 * t430;
t302 = t236 / 0.2e1 + t237 / 0.2e1;
t300 = qJD(6) * t426;
t299 = qJD(6) * t425;
t241 = qJD(2) * qJ(3);
t268 = -t410 / 0.2e1 - t409 / 0.2e1;
t32 = t268 + t302;
t298 = t32 * qJD(1) + t241;
t296 = qJD(2) * t143 - qJD(4);
t295 = qJD(4) + t347;
t294 = -qJD(3) + t341;
t292 = t245 * t244 * t246 * qJD(1);
t291 = t245 * t214;
t290 = t246 * t214;
t289 = qJD(1) * t328;
t288 = qJD(1) * t327;
t283 = t118 - t316;
t282 = t453 * t246;
t278 = -t412 + t414;
t22 = -t127 * t163 + t164 * t403;
t39 = -t127 ^ 2 + t403 ^ 2;
t277 = t39 * qJD(1) + t22 * qJD(2);
t59 = -t163 ^ 2 + t164 ^ 2;
t276 = t22 * qJD(1) + t59 * qJD(2);
t275 = t409 + t410;
t18 = (t333 + t91 / 0.2e1) * t246 + (t234 / 0.2e1 - t88 / 0.2e1) * t245 + t302;
t273 = t18 * qJD(1) + t347;
t38 = t127 * t435 - t403 * t438;
t267 = -t38 * qJD(2) - t353 * t403;
t266 = t38 * qJD(1) + t163 * t349;
t43 = t396 / 0.2e1 + (t425 / 0.2e1 + t163 * t431) * t249;
t265 = t43 * qJD(1) + t163 * t229;
t44 = -t303 + (t304 + t426 / 0.2e1) * t249;
t264 = t44 * qJD(1) + t164 * t229;
t130 = (-0.1e1 / 0.2e1 + t240 / 0.2e1 + t432) * t249;
t263 = t130 * qJD(1) + t309;
t182 = t239 * t244 + t243;
t260 = -t182 * qJD(1) + t249 * t309;
t253 = qJD(2) * t281 + t338;
t242 = qJ(3) * qJD(3);
t230 = qJD(3) * t245;
t225 = pkin(7) * t232;
t219 = -t232 / 0.2e1;
t215 = t248 * t232;
t209 = t245 * t365;
t198 = t246 * t393;
t192 = t205 * qJD(4);
t169 = t179 * qJD(4);
t167 = t178 * qJD(4);
t161 = qJD(6) * t428 + t214;
t145 = t160 * qJD(4);
t142 = -t232 * t245 + t310;
t141 = t232 * t246 + t313;
t140 = -t240 * qJD(2) + t246 * t311;
t131 = t239 * t427 + t240 * t428 + t428;
t122 = (t246 * t339 + t228) * t248;
t121 = t447 * t248;
t79 = t306 - t448;
t78 = t305 + t261;
t72 = t164 * t428 + t249 * t287 + t433;
t71 = -t403 / 0.2e1 + t256 * t249;
t46 = -t396 / 0.2e1 + t397 * t437 + t321 / 0.2e1;
t45 = -t303 + t249 * t304 - t324 / 0.2e1;
t37 = t38 * qJD(6);
t31 = -t268 + t302;
t30 = t293 + t269;
t25 = t110 * t430 - t402 / 0.2e1 + t259 - t284;
t19 = t22 * qJD(6);
t17 = t414 / 0.2e1 - t412 / 0.2e1 + t271 * t249 + t302;
t16 = t252 + t270;
t6 = t255 + t258;
t5 = t254 + t257;
t40 = [0, 0, 0, t215, t211 * qJD(2), 0, 0, 0, -pkin(1) * t340, -pkin(1) * t232, 0, t108 * qJD(2) - t248 * t338, -t107 * qJD(2) + t342 (qJD(2) * t195 - t363) * t181, t20 * qJD(2) + t366, -t21 * qJD(2) + t449, -t11 * qJD(2) + t369, t12 * qJD(2) - t33 * qJD(3) - t34 * qJD(4), t14 * qJD(2) + t244 * t308 + t366, -t8 * qJD(2) - t248 * t307 + t369, t13 * qJD(2) + t182 * qJD(5) - t449, t7 * qJD(2) - t27 * qJD(3) - t28 * qJD(4) + t36 * qJD(5) (-qJD(2) * t124 + t354) * t127, t35 * qJD(2) + t39 * qJD(6), -t56 * qJD(2) + t248 * t354, -t55 * qJD(2) - t118 * t248, t215, -t1 * qJD(2) + t98 * qJD(5) - t10 * qJD(6) + (qJD(3) * t124 + t352) * t248, t2 * qJD(2) + t99 * qJD(5) + t9 * qJD(6) + (qJD(3) * t123 + t355) * t248; 0, 0, 0, t214, t344, t232, -t340, 0, -t225 - t336, t334 - t335, t253, t225 + t358, -t334 - t359, pkin(7) * t253 + t315, t401 + (-t246 * t392 - t173 + t198) * qJD(2) + t282, -t196 * t229 - t400 + (qJD(2) * t452 - t453) * t245, -qJD(2) * t275 - t408, t407 + (-t196 * qJ(3) + t247 * t275) * qJD(2) + t31 * qJD(3) + t30 * qJD(4), t405 + (t109 * t245 - t177 * t395 + t198) * qJD(2) + t131 * qJD(5) + t282, -qJD(2) * t278 - t416, -t109 * t229 + t406 + (-t295 * t248 + (t247 * qJD(2) - t294) * t249) * t245, t417 + (t109 * t177 + t247 * t278) * qJD(2) + t17 * qJD(3) + t16 * qJD(4) + t25 * qJD(5), -t124 * t444 + t37, t385 + (-t163 * t123 - t124 * t164) * qJD(2) + t19, t78 * qJD(6) + t163 * t232 - t382, t164 * t232 - t377 - t383, t161, -t421 + (t102 * t164 + t104 * t249 - t143 * t123) * qJD(2) + t71 * qJD(3) + t79 * qJD(4) + t45 * qJD(5) + t6 * qJD(6), t420 + (-t102 * t163 + t105 * t249 + t143 * t124) * qJD(2) + t72 * qJD(3) + t76 * qJD(4) + t46 * qJD(5) + t5 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, -t214, t343, t225 - t314, t141, t142, t357, t31 * qJD(2) - t387, t141, t357, -t142, t17 * qJD(2) - t390, 0, 0, 0, 0, 0, t71 * qJD(2) - t77 * qJD(6) + t318, t72 * qJD(2) + t319 + t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, t122, t348, t30 * qJD(2) - t386, t121, t348, -t122, t16 * qJD(2) - t389, 0, 0, 0, 0, 0, t79 * qJD(2) + t316, t76 * qJD(2) + t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131 * qJD(2) + t292, -t290, -t260, t25 * qJD(2) + t384, 0, 0, 0, 0, 0, t45 * qJD(2) + t372, t46 * qJD(2) + t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, t277, t78 * qJD(2) + t450, -t74 * qJD(2) + t283, t219, t6 * qJD(2) - t77 * qJD(3) - t24 * qJD(6) - t411, t5 * qJD(2) + t74 * qJD(3) + t23 * qJD(6) + t413; 0, 0, 0, -t214, -t344, 0, 0, 0, t336, t335, 0, -t358, t359, -t315, -t401, t400, t408, t32 * qJD(3) - t29 * qJD(4) - t407, -t130 * qJD(5) - t405, -t312 + t416, -t245 * t307 - t406, t18 * qJD(3) - t15 * qJD(4) + t26 * qJD(5) - t417, t124 * t353 + t37, t19 - t385, -t69 * qJD(6) + t382, -t375 + t383, -t161, t70 * qJD(3) + t68 * qJD(4) + t44 * qJD(5) - t3 * qJD(6) + t421, t73 * qJD(3) + t77 * qJD(4) - t43 * qJD(5) - t4 * qJD(6) - t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t242, t230, t364, t192, -t145 + t242, t230 - t308, t192, t240 * qJD(5) - t364, -t177 * t294 - t145, t163 * t150, t59 * qJD(6), 0, 0, 0, -t143 * t148 + t164 * t294, -t143 * t150 - t163 * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t241, t228, t229, 0, t167 + t298, t228, 0, -t229, t167 + t273, 0, 0, 0, 0, 0, -t445, t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t367 - t388, 0, t345, 0, t367 - t404, 0, 0, 0, 0, 0, t381, t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, -t209, -t140, -t177 * t229 + t391, 0, 0, 0, 0, 0, t264, -t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, t276, -t150 - t380, -t442, t339 / 0.2e1, -t105 * qJD(6) - t143 * t350 - t419, t104 * qJD(6) - t143 * t349 - t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, -t343, t314, -t313, -t310, -t357, -t32 * qJD(2) + t387, -t313, -t357, t310, -t18 * qJD(2) + t312 + t390, 0, 0, 0, 0, 0, -t70 * qJD(2) - t76 * qJD(6) - t318, -t73 * qJD(2) - t319 + t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t241, -t228, -t229, 0, t169 - t298, -t228, 0, t229, t169 - t273, 0, 0, 0, 0, 0, t445, -t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, 0, 0, 0, t346, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150 - t374, t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t290, -t348, t29 * qJD(2) + t386, -t291, -t348, t290, t15 * qJD(2) + t249 * t360 + t389, 0, 0, 0, 0, 0, -t68 * qJD(2) + t283, -t77 * qJD(2) - t450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t368 + t388, 0, -t345, 0, -t341 + t368 + t404, 0, 0, 0, 0, 0, t148 - t381, t150 - t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, 0, 0, 0, -t346, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130 * qJD(2) - t292, t122, t260, -t384 - t26 * qJD(2) + (-t361 - t363) * t245, 0, 0, 0, 0, 0, -t44 * qJD(2) + t248 * t299 - t372, t43 * qJD(2) + t248 * t300 - t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t209, t140, t246 * t295 - t391, 0, 0, 0, 0, 0, -t264, t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t447, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288 - t299, t289 - t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t277, t69 * qJD(2) - t317, t75 * qJD(2) + t316, t219, t3 * qJD(2) + t76 * qJD(3) - qJD(5) * t327 - t352 + t411, t4 * qJD(2) - t75 * qJD(3) - qJD(5) * t328 - t355 - t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, -t276, t380, t376, -t339 / 0.2e1, t163 * t296 + t419, t164 * t296 + t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, -t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t444, -t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t288, -t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t40;
