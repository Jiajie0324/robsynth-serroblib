% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPPPR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:19:52
% EndTime: 2019-03-09 08:20:07
% DurationCPUTime: 10.44s
% Computational Cost: add. (7895->585), mult. (14545->727), div. (0->0), fcn. (14342->6), ass. (0->448)
t393 = sin(qJ(2));
t394 = cos(qJ(2));
t524 = t394 * qJD(3);
t672 = -qJD(4) * t393 + t524;
t391 = cos(pkin(9));
t634 = sin(qJ(6));
t504 = t634 * t394;
t337 = t391 * t504;
t390 = sin(pkin(9));
t635 = cos(qJ(6));
t509 = t635 * t394;
t246 = t390 * t509 - t337;
t506 = t634 * t390;
t510 = t635 * t391;
t291 = -t506 - t510;
t603 = t291 * t394;
t505 = t634 * t391;
t511 = t635 * t390;
t292 = t505 - t511;
t648 = -t292 / 0.2e1;
t649 = t291 / 0.2e1;
t100 = t246 * t648 - t603 * t649;
t671 = t100 * qJD(6);
t534 = t292 * qJD(2);
t670 = -qJD(1) * t100 + t291 * t534;
t565 = qJD(1) * t246;
t669 = qJD(2) * t100 - t603 * t565;
t392 = -pkin(2) - qJ(4);
t631 = pkin(8) + t392;
t564 = qJD(1) * t393;
t668 = t603 * (-qJD(6) + t564);
t556 = qJD(4) * t394;
t494 = t393 * t556;
t388 = t393 ^ 2;
t560 = qJD(3) * t388;
t667 = t391 * (t494 + t560);
t585 = t392 * t394;
t405 = t506 / 0.2e1 + t510 / 0.2e1;
t666 = t393 * t405;
t389 = t394 ^ 2;
t351 = t389 - t388;
t373 = t391 * qJD(2);
t525 = t394 * qJD(1);
t665 = t390 * t525 - t373;
t376 = t394 * qJD(2);
t347 = t390 * t376;
t593 = t389 * t391;
t297 = -t388 * t391 + t593;
t532 = t297 * qJD(1);
t664 = t532 + t347;
t566 = qJD(1) * t603;
t663 = t534 + t566;
t399 = t649 + t405;
t165 = t399 * t394;
t662 = -qJD(1) * t165 + t534;
t535 = t291 * qJD(2);
t661 = t535 + t565;
t457 = t511 / 0.2e1;
t647 = t292 / 0.2e1;
t432 = t647 + t457;
t645 = -t337 / 0.2e1;
t168 = t394 * t432 + t645;
t660 = qJD(1) * t168 + t535;
t270 = t291 * qJD(6);
t170 = (t649 - t405) * t393;
t546 = t170 * qJD(1);
t659 = t546 - t270;
t526 = t393 * qJD(2);
t381 = t394 * pkin(7);
t382 = t394 * pkin(3);
t570 = t381 / 0.2e1 + t382 / 0.2e1;
t592 = t390 * qJ(5);
t652 = pkin(4) + pkin(5);
t658 = -t391 * t652 - t592;
t657 = t603 ^ 2;
t656 = t246 ^ 2;
t655 = t291 ^ 2;
t654 = t292 ^ 2;
t653 = pkin(3) + pkin(7);
t651 = t603 / 0.2e1;
t650 = t246 / 0.2e1;
t336 = t393 * t505;
t646 = -t336 / 0.2e1;
t384 = t390 ^ 2;
t644 = -t384 / 0.2e1;
t643 = -t390 / 0.2e1;
t642 = -t391 / 0.2e1;
t641 = t391 / 0.2e1;
t640 = t393 / 0.2e1;
t639 = -t394 / 0.2e1;
t638 = t394 / 0.2e1;
t602 = t292 * t603;
t605 = t246 * t291;
t42 = -t602 - t605;
t637 = t42 * qJD(4);
t99 = -t602 / 0.2e1 - t605 / 0.2e1;
t636 = t99 * qJD(4);
t633 = t391 * pkin(4);
t632 = t394 * pkin(4);
t242 = t291 * t393;
t243 = t393 * t511 - t336;
t102 = -t242 * t292 - t243 * t291;
t520 = -t634 / 0.2e1;
t522 = -t635 / 0.2e1;
t401 = (t291 * t520 + t292 * t522) * t393;
t406 = -t242 * t520 + t243 * t522;
t81 = t401 + t406;
t630 = t102 * qJD(3) + t81 * qJD(5);
t331 = t653 * t393;
t304 = t390 * t331;
t584 = t393 * qJ(3);
t474 = -pkin(1) - t584;
t415 = t474 + t585;
t202 = t391 * t415 + t304;
t177 = t393 * qJ(5) + t202;
t586 = t391 * t394;
t145 = pkin(8) * t586 + t177;
t588 = t391 * t331;
t396 = -t588 - t652 * t393 + (t394 * t631 + t474) * t390;
t70 = t145 * t634 - t396 * t635;
t71 = t145 * t635 + t396 * t634;
t20 = t242 * t71 + t243 * t70;
t327 = t393 * pkin(2) - qJ(3) * t394;
t285 = t393 * qJ(4) + t327;
t332 = t381 + t382;
t206 = t391 * t285 + t332 * t390;
t184 = t394 * qJ(5) + t206;
t587 = t391 * t393;
t146 = -pkin(8) * t587 + t184;
t507 = t634 * t146;
t260 = t390 * t285;
t599 = t332 * t391;
t205 = -t260 + t599;
t591 = t390 * t393;
t135 = -pkin(8) * t591 - t394 * t652 - t205;
t513 = t635 * t135;
t72 = -t507 + t513;
t508 = t634 * t135;
t512 = t635 * t146;
t73 = t512 + t508;
t6 = t246 * t72 - t603 * t73 + t20;
t629 = t6 * qJD(1);
t628 = t72 * t291;
t627 = t73 * t292;
t207 = (t653 - t658) * t393;
t208 = t394 * t658 - t332;
t8 = t207 * t208 - t70 * t72 + t71 * t73;
t626 = t8 * qJD(1);
t590 = t390 * t394;
t19 = -t208 * t590 + (t634 * t70 + t635 * t71) * t393;
t625 = qJD(1) * t19;
t624 = qJD(1) * t20;
t483 = -t592 / 0.2e1;
t523 = -pkin(7) / 0.2e1 - pkin(3) / 0.2e1;
t400 = (t483 - t633 / 0.2e1 + t523) * t393;
t201 = -t390 * t415 + t588;
t180 = -t393 * pkin(4) - t201;
t430 = t177 * t643 + t180 * t641;
t58 = t400 - t430;
t623 = qJD(1) * t58;
t443 = t177 * t391 + t180 * t390;
t79 = t443 * t393;
t622 = qJD(1) * t79;
t82 = t401 - t406;
t621 = qJD(1) * t82;
t428 = t201 * t642 + t202 * t643;
t467 = t523 * t393;
t83 = t467 - t428;
t620 = qJD(1) * t83;
t87 = (-t201 * t390 + t202 * t391) * t393;
t619 = qJD(1) * t87;
t88 = -t201 * t590 + t202 * t586;
t618 = qJD(1) * t88;
t90 = -t242 * t603 - t243 * t246;
t617 = qJD(1) * t90;
t17 = -t207 * t603 + t208 * t242 + t72 * t393 - t394 * t70;
t616 = t17 * qJD(1);
t615 = t177 * t393;
t18 = -t207 * t246 + t208 * t243 + t73 * t393 + t394 * t71;
t614 = t18 * qJD(1);
t613 = t184 * t390;
t189 = -t205 - t632;
t612 = t189 * t391;
t611 = t205 * t391;
t610 = t206 * t390;
t306 = t631 * t390;
t475 = t631 * t391;
t209 = t306 * t634 + t475 * t635;
t609 = t209 * t243;
t210 = t306 * t635 - t475 * t634;
t608 = t210 * t242;
t577 = -t391 * qJ(5) + qJ(3);
t265 = t390 * t652 + t577;
t404 = -t208 * t291 / 0.2e1 + t210 * t640 + t265 * t650;
t408 = t513 / 0.2e1 - t507 / 0.2e1;
t22 = -t404 + t408;
t607 = t22 * qJD(1);
t403 = t208 * t648 - t209 * t393 / 0.2e1 + t265 * t651;
t407 = -t512 / 0.2e1 - t508 / 0.2e1;
t23 = -t403 + t407;
t606 = t23 * qJD(1);
t449 = t592 + t633;
t216 = (-t449 - t653) * t393;
t217 = t394 * t449 + t332;
t28 = t177 * t184 + t180 * t189 + t216 * t217;
t604 = t28 * qJD(1);
t32 = (t184 * t394 - t615) * t391 + (-t180 * t393 + t189 * t394) * t390;
t601 = t32 * qJD(1);
t33 = -t208 * t603 - t393 * t70;
t600 = t33 * qJD(1);
t34 = t208 * t246 - t393 * t71;
t598 = t34 * qJD(1);
t35 = t201 * t591 - t205 * t590 + (-t202 * t393 + t206 * t394) * t391;
t597 = t35 * qJD(1);
t36 = t201 * t205 + t202 * t206 - t331 * t332;
t596 = t36 * qJD(1);
t440 = t216 * t394 - t217 * t393;
t37 = t177 * t394 + t184 * t393 + t390 * t440;
t595 = t37 * qJD(1);
t38 = -t180 * t394 - t189 * t393 + t391 * t440;
t594 = t38 * qJD(1);
t589 = t391 * t246;
t67 = t201 * t394 + t205 * t393 + (-t331 * t394 - t332 * t393) * t391;
t583 = t67 * qJD(1);
t68 = t206 * t393 - t332 * t591 + (t202 - t304) * t394;
t582 = t68 * qJD(1);
t307 = pkin(4) * t390 + t577;
t413 = (t307 * t638 + t392 * t640) * t390;
t453 = -t260 / 0.2e1 + t632 / 0.2e1;
t75 = (-t217 / 0.2e1 + t332 / 0.2e1) * t391 + t413 + t453;
t581 = t75 * qJD(1);
t80 = t443 * t394;
t580 = t80 * qJD(1);
t89 = -t242 * t246 - t243 * t603;
t579 = t89 * qJD(1);
t93 = t217 * t590 + t615;
t578 = t93 * qJD(1);
t385 = t391 ^ 2;
t342 = t384 + t385;
t244 = t342 * t394 * t393;
t295 = t342 * t389;
t574 = t244 * qJD(3) + t295 * qJD(4);
t478 = t644 - t385 / 0.2e1;
t309 = -0.1e1 / 0.2e1 + t478;
t288 = t342 * t392;
t536 = t288 * qJD(2);
t573 = -t309 * qJD(3) + t536;
t308 = 0.1e1 / 0.2e1 + t478;
t572 = t308 * qJD(3) - t536;
t374 = qJD(3) * t390;
t571 = t388 * t374 + t390 * t494;
t131 = (-t246 * t634 - t603 * t635) * t393;
t569 = qJD(1) * t131;
t563 = qJD(2) * t265;
t562 = (-t384 + t385) * t526;
t561 = qJD(2) * t307;
t559 = qJD(3) * t391;
t558 = qJD(3) * t393;
t555 = qJD(5) * t391;
t554 = qJD(5) * t394;
t553 = qJD(6) * t170;
t552 = qJD(6) * t603;
t143 = t242 * t393 - t394 * t603;
t551 = t143 * qJD(1);
t144 = t243 * t393 - t246 * t394;
t550 = t144 * qJD(1);
t163 = t399 * t393;
t549 = t163 * qJD(1);
t164 = t646 + (t457 + t648) * t393;
t548 = t164 * qJD(1);
t485 = t291 * t640;
t169 = t485 + t666;
t547 = t169 * qJD(6);
t416 = t393 * t457 + t646;
t484 = t292 * t640;
t171 = t484 - t416;
t545 = t171 * qJD(1);
t172 = t393 * t432 + t646;
t544 = t172 * qJD(1);
t203 = t388 * t634 - t590 * t603;
t543 = t203 * qJD(1);
t204 = t246 * t590 + t388 * t635;
t542 = t204 * qJD(1);
t450 = -pkin(2) * t394 - t584;
t311 = -pkin(1) + t450;
t214 = t311 * t394 + t327 * t393;
t541 = t214 * qJD(1);
t215 = -t311 * t393 + t327 * t394;
t540 = t215 * qJD(1);
t539 = t244 * qJD(1);
t538 = t603 * qJD(4);
t537 = t246 * qJD(4);
t237 = t246 * qJD(6);
t272 = t292 * qJD(6);
t533 = t295 * qJD(1);
t296 = t351 * t390;
t279 = t296 * qJD(1);
t531 = t297 * qJD(2);
t530 = t309 * qJD(2);
t529 = t342 * qJD(2);
t528 = t351 * qJD(1);
t527 = t388 * qJD(1);
t372 = t390 * qJD(2);
t521 = t635 / 0.2e1;
t519 = t634 / 0.2e1;
t518 = pkin(1) * t564;
t517 = pkin(1) * t525;
t516 = pkin(7) * t526;
t515 = t393 * t635;
t514 = t393 * t634;
t503 = t242 * t564;
t502 = t243 * t564;
t500 = t603 * t564;
t499 = t246 * t564;
t497 = t391 * t525;
t495 = t390 * t373;
t493 = t390 * t555;
t492 = qJD(5) * t591;
t491 = t291 * t272;
t490 = t311 * t327 * qJD(1);
t489 = t311 * t564;
t488 = t390 * t527;
t487 = t391 * t527;
t349 = t391 * t376;
t355 = t393 * t376;
t354 = t393 * t525;
t486 = t391 * t554;
t482 = t292 * t643;
t481 = t590 / 0.2e1;
t480 = t603 * t642;
t479 = t586 / 0.2e1;
t477 = qJD(6) * t635;
t476 = qJD(6) * t634;
t386 = qJD(2) * qJ(3);
t427 = -t611 / 0.2e1 - t610 / 0.2e1;
t86 = t427 + t570;
t473 = qJD(1) * t86 + t386;
t471 = -qJD(4) - t563;
t470 = qJD(4) + t561;
t469 = -qJD(3) + t555;
t468 = pkin(4) * t479 + qJ(5) * t481 + t570;
t466 = qJD(1) * t390 * t593;
t465 = t393 * t495;
t464 = t390 * t349;
t463 = t384 * t355;
t462 = t385 * t355;
t461 = t390 * t354;
t460 = t391 * t354;
t459 = qJD(1) * t515;
t458 = qJD(1) * t514;
t454 = -t655 / 0.2e1 - t654 / 0.2e1;
t452 = t237 - t499;
t451 = t672 * t391;
t448 = t393 * t464;
t447 = t390 * t460;
t397 = t209 * t650 + t210 * t651 + t647 * t71 + t649 * t70;
t412 = t483 + (-pkin(4) / 0.2e1 - pkin(5) / 0.2e1) * t391;
t398 = (t412 + t523) * t393;
t11 = t398 - t397;
t76 = t209 * t291 + t210 * t292;
t446 = -qJD(1) * t11 + qJD(2) * t76;
t91 = -t656 - t657;
t445 = qJD(1) * t91 + qJD(2) * t42;
t21 = t246 * t70 + t603 * t71;
t444 = -qJD(1) * t21 - qJD(3) * t99;
t442 = -t612 + t613;
t441 = t610 + t611;
t104 = -0.1e1 / 0.2e1 + t454;
t439 = qJD(1) * t99 + qJD(2) * t104;
t105 = -t656 + t657;
t69 = t602 - t605;
t438 = qJD(1) * t105 + qJD(2) * t69;
t109 = -t654 - t655;
t437 = qJD(1) * t42 + qJD(2) * t109;
t426 = -t609 / 0.2e1 - t608 / 0.2e1;
t431 = t628 / 0.2e1 - t627 / 0.2e1;
t13 = t412 * t394 + t426 + t431 - t570;
t436 = -qJD(1) * t13 + t563;
t147 = t654 - t655;
t435 = qJD(1) * t69 + qJD(2) * t147;
t429 = -t613 / 0.2e1 + t612 / 0.2e1;
t61 = t429 + t468;
t434 = qJD(1) * t61 + t561;
t410 = t246 * t522 - t520 * t603;
t112 = t481 - t410;
t409 = t291 * t521 + t292 * t520;
t155 = t642 + t409;
t433 = qJD(1) * t112 + qJD(2) * t155;
t395 = (t209 * t519 + t210 * t521) * t393 + t208 * t641 + t265 * t481;
t411 = t520 * t73 + t522 * t72;
t16 = t395 + t411;
t425 = qJD(1) * t16 - t265 * t373;
t124 = t589 / 0.2e1 + (t291 * t643 + t519) * t394;
t420 = qJD(1) * t124 + t291 * t373;
t125 = -t480 + (t482 + t521) * t394;
t419 = qJD(1) * t125 + t292 * t373;
t248 = (-0.1e1 / 0.2e1 + t385 / 0.2e1 + t644) * t394;
t418 = qJD(1) * t248 + t495;
t312 = t384 * t389 + t388;
t414 = -t312 * qJD(1) + t464;
t402 = qJD(2) * t450 + t524;
t387 = qJ(3) * qJD(3);
t369 = pkin(7) * t376;
t361 = -t376 / 0.2e1;
t346 = t390 * t564;
t333 = t391 * t585;
t328 = t351 * qJD(2);
t324 = t342 * qJD(4);
t323 = t385 * t354;
t321 = t384 * t354;
t300 = t309 * qJD(4);
t298 = t308 * qJD(4);
t289 = qJD(6) * t639 + t354;
t287 = -0.2e1 * t447;
t286 = 0.2e1 * t447;
t280 = t296 * qJD(2);
t267 = t288 * qJD(4);
t264 = -t347 + t487;
t263 = t349 + t488;
t262 = -t385 * qJD(2) + t390 * t497;
t249 = t384 * t638 + t385 * t639 + t639;
t241 = (t497 + t372) * t393;
t240 = t665 * t393;
t229 = -t323 - t465;
t228 = -t321 + t465;
t218 = t349 - t279;
t174 = t485 - t666;
t173 = t484 + t416;
t167 = t292 * t639 + t394 * t457 + t645;
t166 = -t603 / 0.2e1 + t405 * t394;
t154 = t642 - t409;
t127 = -t589 / 0.2e1 + t291 * t481 + t504 / 0.2e1;
t126 = -t480 + t394 * t482 - t509 / 0.2e1;
t111 = t481 + t410;
t103 = 0.1e1 / 0.2e1 + t454;
t85 = -t427 + t570;
t84 = t467 + t428;
t78 = t82 * qJD(5);
t74 = t217 * t642 - t599 / 0.2e1 + t413 - t453;
t64 = t69 * qJD(6);
t60 = -t429 + t468;
t59 = t400 + t430;
t25 = t404 + t408;
t24 = t403 + t407;
t15 = t395 - t411;
t14 = pkin(5) * t479 - t426 + t431 + t468;
t12 = t398 + t397;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t328, 0, -t355, 0, 0, -pkin(1) * t526, -pkin(1) * t376, 0, 0, 0, 0, 0, t355, t328, -t355, 0, t215 * qJD(2) - t393 * t524, -qJD(2) * t214 + t560 (qJD(2) * t327 - t558) * t311, -t463, -0.2e1 * t448, -t280, -t462, -t531, t355, qJD(2) * t67 + t571, -t68 * qJD(2) + t667, -qJD(2) * t35 + t574, qJD(2) * t36 - qJD(3) * t87 - qJD(4) * t88, -t463, -t280, 0.2e1 * t448, t355, t531, -t462, qJD(2) * t38 + t389 * t493 + t571, -t32 * qJD(2) - t393 * t486 + t574, t37 * qJD(2) + t312 * qJD(5) - t667, qJD(2) * t28 - qJD(3) * t79 - qJD(4) * t80 + qJD(5) * t93 (-qJD(2) * t243 + t552) * t246, qJD(2) * t89 + qJD(6) * t105, -qJD(2) * t144 + t393 * t552 -(qJD(2) * t242 + t237) * t603, -qJD(2) * t143 - t237 * t393, t355, -t17 * qJD(2) + t203 * qJD(5) - t34 * qJD(6) + (qJD(3) * t243 + t537) * t393, t18 * qJD(2) + t204 * qJD(5) + t33 * qJD(6) + (qJD(3) * t242 + t538) * t393, qJD(2) * t6 + qJD(3) * t90 + qJD(4) * t91 + qJD(5) * t131, qJD(2) * t8 + qJD(3) * t20 + qJD(4) * t21 + qJD(5) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t528, t376, -t354, -t526, 0, -t369 - t518, t516 - t517, 0, 0, 0, -t376, t526, t354, t528, -t354, t402, t369 + t540, -t516 - t541, pkin(7) * t402 + t490, t228, t287 + t562, t218, t229, -t664, t354, t583 + (-t391 * t584 - t304 + t333) * qJD(2) + t451, -t331 * t373 - t582 + ((t584 - t585) * qJD(2) - t672) * t390, -qJD(2) * t441 - t597, t596 + (-t331 * qJ(3) + t392 * t441) * qJD(2) + t85 * qJD(3) + t84 * qJD(4), t228, t218, t286 - t562, t354, t664, t229, t594 + (t216 * t390 - t307 * t587 + t333) * qJD(2) + t249 * qJD(5) + t451, -qJD(2) * t442 - t601, -t216 * t373 + t595 + (-t470 * t393 + (qJD(2) * t392 - t469) * t394) * t390, t604 + (t216 * t307 + t392 * t442) * qJD(2) + t60 * qJD(3) + t59 * qJD(4) + t74 * qJD(5), -t243 * t661 - t671, t579 + (-t242 * t291 - t243 * t292) * qJD(2) + t64, t173 * qJD(6) + t291 * t376 - t550, -t242 * t663 + t671, t292 * t376 - t547 - t551, t289, -t616 + (t207 * t292 + t209 * t394 + t265 * t242) * qJD(2) + t166 * qJD(3) + t174 * qJD(4) + t126 * qJD(5) + t25 * qJD(6), t614 + (-t207 * t291 + t210 * t394 - t265 * t243) * qJD(2) + t167 * qJD(3) + t171 * qJD(4) + t127 * qJD(5) + t24 * qJD(6), t629 + (t608 + t609 - t627 + t628) * qJD(2) + t630 + t637, t626 + (-t207 * t265 - t209 * t72 + t210 * t73) * qJD(2) + t14 * qJD(3) + t12 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, -t354, t527, t369 - t489, 0, 0, 0, 0, 0, 0, t263, t264, t539, qJD(2) * t85 - t619, 0, 0, 0, 0, 0, 0, t263, t539, -t264, qJD(2) * t60 - t622, 0, 0, 0, 0, 0, 0, qJD(2) * t166 - qJD(6) * t172 + t502, qJD(2) * t167 + t503 + t547, qJD(2) * t102 + t617, qJD(2) * t14 + t624 + t630 + t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, t241, t533, qJD(2) * t84 - t618, 0, 0, 0, 0, 0, 0, t240, t533, -t241, qJD(2) * t59 - t580, 0, 0, 0, 0, 0, 0, qJD(2) * t174 + t499, qJD(2) * t171 + t500, t445, qJD(2) * t12 + qJD(5) * t111 - t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t249 + t466, -t460, -t414, qJD(2) * t74 + t578, 0, 0, 0, 0, 0, 0, qJD(2) * t126 + t543, qJD(2) * t127 + t542, qJD(2) * t81 + t569, qJD(2) * t15 + qJD(3) * t81 + qJD(4) * t111 + t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669, t438, t173 * qJD(2) + t668, t669, -qJD(2) * t169 + t452, t361, qJD(2) * t25 - qJD(3) * t172 - qJD(6) * t71 - t598, qJD(2) * t24 + qJD(3) * t169 + qJD(6) * t70 + t600, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, -t528, 0, t354, 0, 0, t518, t517, 0, 0, 0, 0, 0, -t354, -t528, t354, 0, -t540, t541, -t490, t321, t286, t279, t323, t532, -t354, -t583, t582, t597, qJD(3) * t86 - qJD(4) * t83 - t596, t321, t279, t287, -t354, -t532, t323, -qJD(5) * t248 - t594, -t492 + t601, -t390 * t486 - t595, qJD(3) * t61 - qJD(4) * t58 + qJD(5) * t75 - t604, t243 * t565 - t671, t64 - t579, -qJD(6) * t164 + t550, t242 * t566 + t671, t551 - t553, -t289, qJD(3) * t165 + qJD(4) * t163 + qJD(5) * t125 - qJD(6) * t22 + t616, qJD(3) * t168 + qJD(4) * t172 - qJD(5) * t124 - qJD(6) * t23 - t614, t78 - t629 + t637, -qJD(3) * t13 - qJD(4) * t11 + qJD(5) * t16 - t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t387, 0, 0, 0, 0, 0, 0, t374, t559, t324, -t267 + t387, 0, 0, 0, 0, 0, 0, t374 - t493, t324, qJD(5) * t385 - t559, -t307 * t469 - t267, t491, t147 * qJD(6), 0, -t491, 0, 0, t265 * t270 + t292 * t469, t265 * t272 - t291 * t469, qJD(4) * t109, t76 * qJD(4) - t265 * t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t386, 0, 0, 0, 0, 0, 0, t372, t373, 0, t298 + t473, 0, 0, 0, 0, 0, 0, t372, 0, -t373, t298 + t434, 0, 0, 0, 0, 0, 0, -t662, t660, 0, qJD(4) * t103 + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, t572 - t620, 0, 0, 0, 0, 0, 0, 0, t529, 0, t572 - t623, 0, 0, 0, 0, 0, 0, t549, t544, t437, qJD(3) * t103 + qJD(5) * t154 + t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t346, -t262, -t307 * t373 + t581, 0, 0, 0, 0, 0, 0, t419, -t420, t621, qJD(4) * t154 + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t670, t435, -t272 - t548, -t670, -t659, t525 / 0.2e1, -qJD(6) * t210 + t265 * t535 - t607, qJD(6) * t209 + t265 * t534 - t606, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, -t527, t489, 0, 0, 0, 0, 0, 0, -t488, -t487, -t539, -qJD(2) * t86 + t619, 0, 0, 0, 0, 0, 0, -t488, -t539, t487, -qJD(2) * t61 + t492 + t622, 0, 0, 0, 0, 0, 0, -qJD(2) * t165 - qJD(6) * t171 - t502, -qJD(2) * t168 - t503 + t553, -t617, qJD(2) * t13 - t624 + t636 + t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t386, 0, 0, 0, 0, 0, 0, -t372, -t373, 0, t300 - t473, 0, 0, 0, 0, 0, 0, -t372, 0, t373, t300 - t434, 0, 0, 0, 0, 0, 0, t662, -t660, 0, qJD(4) * t104 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, 0, 0, 0, 0, 0, 0, 0, 0, 0, t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, 0, 0, 0, 0, 0, 0, 0, 0, 0, t621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272 - t545, t659, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, -t460, -t533, qJD(2) * t83 + t618, 0, 0, 0, 0, 0, 0, -t461, -t533, t460, t58 * qJD(2) + t390 * t554 + t580, 0, 0, 0, 0, 0, 0, -qJD(2) * t163 + t452, -t172 * qJD(2) - t668, -t445, qJD(2) * t11 + qJD(5) * t112 + t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t573 + t620, 0, 0, 0, 0, 0, 0, 0, -t529, 0, -t555 + t573 + t623, 0, 0, 0, 0, 0, 0, t270 - t549, t272 - t544, -t437, -qJD(3) * t104 + qJD(5) * t155 - t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t665, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661, t663, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t248 - t466, t241, t414, -t578 - t75 * qJD(2) + (-t556 - t558) * t390, 0, 0, 0, 0, 0, 0, -t125 * qJD(2) + t393 * t476 - t543, t124 * qJD(2) + t393 * t477 - t542, -qJD(2) * t82 - t569, -qJD(2) * t16 - qJD(3) * t82 - qJD(4) * t112 - t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t346, t262, t391 * t470 - t581, 0, 0, 0, 0, 0, 0, -t419, t420, -t621, -qJD(4) * t155 - t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t665, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458 - t476, t459 - t477, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, -t438, qJD(2) * t164 - t500, -t669, qJD(2) * t170 + t499, t361, t22 * qJD(2) + t171 * qJD(3) - qJD(5) * t514 - t537 + t598, t23 * qJD(2) - t170 * qJD(3) - qJD(5) * t515 - t538 - t600, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, -t435, t548, t670, t546, -t525 / 0.2e1, t291 * t471 + t607, t292 * t471 + t606, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, -t546, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661, -t663, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t458, -t459, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
