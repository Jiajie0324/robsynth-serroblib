% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:22
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:21:20
% EndTime: 2019-03-09 07:22:03
% DurationCPUTime: 35.31s
% Computational Cost: add. (38288->1003), mult. (69654->1247), div. (0->0), fcn. (78084->8), ass. (0->743)
t888 = cos(qJ(4));
t889 = cos(qJ(3));
t1194 = t888 * t889;
t885 = sin(qJ(4));
t886 = sin(qJ(3));
t870 = t885 * t886;
t842 = -t870 + t1194;
t884 = sin(qJ(5));
t660 = t884 * t842;
t883 = sin(qJ(6));
t773 = t883 * t660;
t1329 = cos(qJ(6));
t887 = cos(qJ(5));
t871 = t1329 * t887;
t616 = t842 * t871 - t773;
t1361 = -t616 / 0.2e1;
t839 = t885 * t889 + t886 * t888;
t1343 = t839 / 0.2e1;
t874 = -pkin(5) * t887 - pkin(4);
t1337 = -t874 / 0.2e1;
t1075 = t1329 * t884;
t1369 = -pkin(10) - pkin(9);
t855 = t1369 * t887;
t1024 = -t1369 * t1075 - t883 * t855;
t1431 = t1024 / 0.2e1;
t1319 = t885 * pkin(3);
t872 = pkin(9) + t1319;
t1316 = pkin(10) + t872;
t1031 = t1316 * t884;
t828 = t1316 * t887;
t1026 = t1329 * t1031 + t883 * t828;
t1359 = t1026 / 0.2e1;
t1200 = t883 * t887;
t841 = t1075 + t1200;
t1222 = t842 * t841;
t1470 = -t1222 / 0.2e1;
t890 = -pkin(1) - pkin(7);
t1317 = -pkin(8) + t890;
t850 = t1317 * t889;
t1196 = t885 * t850;
t849 = t1317 * t886;
t830 = t888 * t849;
t1389 = t830 + t1196;
t1423 = t1389 * t887;
t1321 = t842 * pkin(9);
t1325 = t839 * pkin(4);
t869 = t886 * pkin(3) + qJ(2);
t972 = t869 + t1325;
t929 = t972 - t1321;
t413 = t884 * t929 + t1423;
t352 = -pkin(10) * t660 + t413;
t1080 = t1329 * t352;
t1324 = t839 * pkin(5);
t1424 = t1389 * t884;
t351 = -t1424 + (t1369 * t842 + t972) * t887;
t895 = t351 + t1324;
t893 = t883 * t895;
t215 = t1080 + t893;
t1205 = t883 * t351;
t231 = -t1080 - t1205;
t1462 = t231 + t215;
t1204 = t883 * t352;
t319 = t1329 * t895;
t214 = -t319 + t1204;
t1081 = t1329 * t351;
t232 = t1081 - t1204;
t1461 = t232 + t214;
t1103 = qJD(3) + qJD(4);
t1102 = qJD(5) + qJD(6);
t654 = t884 * t839;
t1419 = -pkin(5) * t654 + t1389;
t1025 = t885 * t849 - t888 * t850;
t552 = pkin(5) * t660 + t1025;
t1469 = t214 * t1470 + t215 * t1361 - t552 * t1343 + t842 * t1419 / 0.2e1;
t1298 = t215 * t841;
t1201 = t883 * t884;
t1388 = t871 - t1201;
t1301 = t214 * t1388;
t1432 = t1388 / 0.2e1;
t1435 = -t231 / 0.2e1;
t1468 = t1301 / 0.2e1 - t1298 / 0.2e1 + t232 * t1432 + t1435 * t841;
t647 = -t1031 * t883 + t1329 * t828;
t1357 = t647 / 0.2e1;
t1360 = -t647 / 0.2e1;
t1041 = t1357 + t1360;
t1358 = -t1026 / 0.2e1;
t1042 = t1358 + t1359;
t658 = t887 * t839;
t610 = -t1075 * t839 - t658 * t883;
t772 = t883 * t654;
t614 = t839 * t871 - t772;
t1467 = -t1041 * t610 - t1042 * t614;
t726 = t1201 * t1369 - t1329 * t855;
t1434 = -t726 / 0.2e1;
t1035 = t726 / 0.2e1 + t1434;
t1351 = -t1024 / 0.2e1;
t1036 = t1351 + t1431;
t1466 = -t1035 * t610 - t1036 * t614;
t1465 = t1337 * t616 + t1343 * t726;
t1445 = t1431 * t839 + t1470 * t874;
t1318 = t888 * pkin(3);
t853 = t874 - t1318;
t1464 = t647 * t1343 + t1361 * t853;
t1446 = t1359 * t839 + t1470 * t853;
t1463 = t614 / 0.2e1;
t1050 = t1424 / 0.2e1;
t1426 = t1025 * t887;
t1057 = t1426 / 0.2e1;
t1226 = t841 * t1222;
t1258 = t616 * t1388;
t321 = -t1226 / 0.2e1 + t1258 / 0.2e1;
t1456 = t1102 * t321;
t1455 = t1419 * t552;
t1454 = t1419 * t841;
t1365 = t610 / 0.2e1;
t827 = t842 * pkin(5);
t1004 = pkin(10) * t658 + t827;
t1427 = t1025 * t884;
t1322 = t842 * pkin(4);
t1323 = t839 * pkin(9);
t702 = t1322 + t1323;
t680 = t887 * t702;
t454 = t680 + t1427;
t334 = t1004 + t454;
t1082 = t1329 * t334;
t1099 = pkin(10) * t654;
t679 = t884 * t702;
t455 = -t1426 + t679;
t369 = t1099 + t455;
t1202 = t883 * t369;
t229 = t1082 - t1202;
t1078 = t1329 * t369;
t1206 = t883 * t334;
t230 = t1078 + t1206;
t1453 = -t1365 * t229 - t1463 * t230 + t1469;
t1328 = pkin(3) * t889;
t674 = t702 + t1328;
t631 = t887 * t674;
t418 = t631 + t1427;
t330 = t1004 + t418;
t1083 = t1329 * t330;
t630 = t884 * t674;
t419 = -t1426 + t630;
t357 = t1099 + t419;
t1203 = t883 * t357;
t218 = t1083 - t1203;
t1079 = t1329 * t357;
t1207 = t883 * t330;
t219 = t1079 + t1207;
t1452 = -t1365 * t218 - t1463 * t219 + t1469;
t836 = t842 ^ 2;
t881 = t884 ^ 2;
t882 = t887 ^ 2;
t860 = t882 - t881;
t677 = t860 * t836;
t1402 = t1103 * t887;
t1420 = t884 * t1402;
t945 = 0.2e1 * t1420 * t842;
t1451 = t677 * qJD(1) + t945;
t1020 = t1103 * t841;
t1422 = t321 * qJD(1);
t1450 = -t1388 * t1020 - t1422;
t1225 = t841 * t1388;
t1449 = t1103 * t1225 + t1422;
t1447 = t1419 * t1388;
t1336 = t881 / 0.2e1;
t653 = (t1336 - t882 / 0.2e1) * t842;
t526 = -t653 * qJD(1) + t1420;
t1272 = t552 * t841;
t480 = t1272 / 0.2e1;
t936 = -t1202 / 0.2e1 + t1082 / 0.2e1;
t109 = t480 + t936 - t1465;
t937 = -t1203 / 0.2e1 + t1083 / 0.2e1;
t95 = t480 + t937 - t1464;
t1007 = -t1079 / 0.2e1;
t939 = -t1207 / 0.2e1 + t1007;
t1444 = t939 - t1446;
t1443 = t937 + t1464;
t1006 = -t1078 / 0.2e1;
t938 = -t1206 / 0.2e1 + t1006;
t1442 = t938 - t1445;
t1441 = t936 + t1465;
t1355 = -t1389 / 0.2e1;
t1330 = t887 / 0.2e1;
t1332 = t884 / 0.2e1;
t918 = t887 * t929;
t412 = -t918 + t1424;
t969 = t1330 * t413 + t1332 * t412;
t1440 = (t1355 + t969) * t842;
t1439 = (-t412 + t1424) * t842;
t1438 = (-t413 + t1423) * t842;
t1437 = t1419 * t616 - t215 * t842 - t552 * t614;
t1224 = t841 * t839;
t1436 = t1222 * t1419 - t1224 * t552 - t214 * t842;
t1326 = t1389 * pkin(4);
t1403 = t1103 * t842;
t1421 = t839 * t1403;
t1245 = t1025 * t1389;
t1111 = t842 * qJD(1);
t1062 = t839 * t1111;
t829 = t1194 / 0.2e1 - t870 / 0.2e1;
t559 = t829 * qJD(5) + t1062;
t1364 = -t614 / 0.2e1;
t965 = -t1224 * t1364 + t1463 * t610;
t1399 = t965 * qJD(2);
t987 = t1224 * t215 - t214 * t614;
t30 = -t1222 * t230 - t229 * t616 + t987;
t1418 = t30 * qJD(1) + t1399;
t27 = -t1222 * t219 - t218 * t616 + t987;
t1417 = t27 * qJD(1) + t1399;
t873 = -pkin(4) - t1318;
t1229 = t839 * t873;
t1416 = -t1229 / 0.2e1 + t1325 / 0.2e1;
t1240 = t1024 * t1222;
t1259 = t616 * t726;
t1008 = t1240 / 0.2e1 + t1259 / 0.2e1;
t1254 = t1026 * t1222;
t1260 = t616 * t647;
t963 = t1260 / 0.2e1 + t1254 / 0.2e1;
t1160 = qJD(1) * t616;
t1415 = t1103 * t321 - t1222 * t1160;
t1414 = t1103 * t1025;
t1005 = -t871 / 0.2e1;
t1346 = t773 / 0.2e1;
t434 = t1346 + (t1005 + t1432) * t842;
t1124 = t434 * qJD(2);
t1413 = t1024 * t1102 - t1124;
t1412 = t1026 * t1102 - t1124;
t1411 = t1102 * t647;
t1410 = t1102 * t726;
t1408 = 0.2e1 * t884;
t1175 = t881 + t882;
t1404 = t1103 * t839;
t1401 = t1103 * t965;
t1220 = t842 * t885;
t1227 = t839 * t888;
t1311 = qJD(3) * pkin(3);
t1400 = t1311 * (-t1220 + t1227);
t1221 = t842 * t872;
t1394 = -t1221 / 0.2e1 + (-t1227 / 0.2e1 + t1220 / 0.2e1) * pkin(3) + t1416;
t1059 = -t1272 / 0.2e1;
t106 = t1059 + t1441;
t1342 = t841 / 0.2e1;
t935 = t1200 / 0.2e1 + t1075 / 0.2e1;
t432 = (t1342 - t935) * t842;
t1125 = t432 * qJD(2);
t1150 = qJD(4) * t874;
t1340 = t853 / 0.2e1;
t1033 = t874 / 0.2e1 + t1340;
t911 = t935 * t1318;
t456 = -t1033 * t841 - t911;
t1393 = qJD(1) * t106 + qJD(3) * t456 - t1150 * t841 + t1125;
t1327 = pkin(5) * t884;
t813 = t1388 * t1327;
t370 = t813 + t456;
t1098 = t1329 / 0.2e1;
t1199 = t884 * t1222;
t1331 = -t887 / 0.2e1;
t896 = (-t1199 / 0.2e1 + (-t1331 * t1388 + t1098) * t842) * pkin(5) + t1059;
t62 = t896 + t1441;
t1208 = t874 * t841;
t627 = -t813 + t1208;
t1392 = qJD(1) * t62 + qJD(3) * t370 - qJD(4) * t627 + t1125;
t1153 = qJD(3) * t853;
t92 = t1059 + t1443;
t1391 = qJD(1) * t92 - t1153 * t841 + t1125;
t52 = t896 + t1443;
t1214 = t853 * t841;
t587 = -t813 + t1214;
t1390 = qJD(1) * t52 - qJD(3) * t587 + t1125;
t1372 = t839 ^ 2;
t1101 = t836 - t1372;
t1345 = -t1388 / 0.2e1;
t1386 = t1005 + t1345;
t476 = qJD(6) * t829 + t559;
t1104 = t836 / 0.2e1;
t1385 = t1104 + t1372 / 0.2e1;
t1231 = t839 * t842;
t365 = (-0.1e1 + t1175) * t1231;
t1126 = t365 * qJD(2);
t1356 = t1025 / 0.2e1;
t1277 = t455 * t887;
t1278 = t454 * t884;
t967 = t1277 / 0.2e1 - t1278 / 0.2e1;
t60 = t1440 + (t1356 + t967) * t839;
t1384 = t60 * qJD(1) + t1126;
t1283 = t419 * t887;
t1284 = t418 * t884;
t968 = -t1283 / 0.2e1 + t1284 / 0.2e1;
t58 = t1440 + (t1356 - t968) * t839;
t1383 = t58 * qJD(1) + t1126;
t235 = -t1222 * t610 + t614 * t616 - t1231;
t1136 = t235 * qJD(2);
t961 = t1024 * t1345 + t1342 * t726;
t17 = t961 + t1453;
t1382 = -t17 * qJD(1) + t1136;
t962 = t1026 * t1345 + t1342 * t647;
t13 = t962 + t1452;
t1381 = -t13 * qJD(1) + t1136;
t204 = (t1364 + t1463) * t842;
t1137 = t204 * qJD(2);
t45 = -t230 * t839 + t1437;
t1380 = t45 * qJD(1) + t1137;
t43 = -t219 * t839 + t1437;
t1379 = t43 * qJD(1) + t1137;
t203 = (t1365 + t1224 / 0.2e1) * t842;
t1139 = t203 * qJD(2);
t44 = t229 * t839 + t1436;
t1378 = t44 * qJD(1) + t1139;
t42 = t218 * t839 + t1436;
t1377 = t42 * qJD(1) + t1139;
t661 = t887 * t842;
t1047 = t661 / 0.2e1;
t1014 = pkin(5) * t1047;
t1376 = pkin(5) * t1199 / 0.2e1 - t1388 * t1014 + t1098 * t827;
t1066 = qJD(1) * t884 * t887;
t605 = -0.2e1 * t842 * t1066 + t1103 * t860;
t335 = t836 * t1066 + t1103 * t653;
t259 = -t1222 * t1388 - t841 * t616;
t602 = t1388 ^ 2 - t841 ^ 2;
t144 = t259 * qJD(1) + t1103 * t602;
t302 = t1222 ^ 2 - t616 ^ 2;
t56 = qJD(1) * t302 + t1103 * t259;
t1371 = pkin(4) / 0.2e1;
t1370 = pkin(9) / 0.2e1;
t1368 = -t215 / 0.2e1;
t1367 = -t229 / 0.2e1;
t1366 = -t232 / 0.2e1;
t765 = t841 * t1318;
t1349 = t765 / 0.2e1;
t766 = t1388 * t1318;
t1348 = t766 / 0.2e1;
t1347 = t772 / 0.2e1;
t1046 = -t830 / 0.2e1;
t1344 = -t839 / 0.2e1;
t1339 = -t873 / 0.2e1;
t1338 = t873 / 0.2e1;
t1335 = -t883 / 0.2e1;
t1334 = t883 / 0.2e1;
t1333 = -t884 / 0.2e1;
t1320 = t883 * pkin(5);
t91 = (-t1035 - t1041) * t841 - (-t1036 - t1042) * t1388;
t1315 = t91 * qJD(5);
t1314 = pkin(3) * qJD(4);
t1313 = pkin(4) * qJD(4);
t1312 = pkin(5) * qJD(5);
t72 = (-t1324 + t1050 - t918 / 0.2e1 + pkin(10) * t1047 + t351 / 0.2e1) * t883;
t1308 = qJD(1) * t72;
t1307 = qJD(1) * t965;
t1297 = t218 * t841;
t1296 = t219 * t1388;
t1076 = t1329 * t1388;
t1223 = t841 * t883;
t940 = t1223 / 0.2e1 + t1076 / 0.2e1;
t22 = (t1366 - t214 / 0.2e1) * t614 + (t1368 + t1435) * t610 + (t1104 * t887 + t940) * pkin(5);
t1295 = t22 * qJD(1);
t1294 = t229 * t841;
t1293 = t230 * t1388;
t31 = -t1222 * t1461 - t1462 * t616;
t1288 = t31 * qJD(1);
t34 = -t214 * t218 + t215 * t219 + t1455;
t1287 = t34 * qJD(1);
t35 = -t214 * t229 + t215 * t230 + t1455;
t1286 = t35 * qJD(1);
t1100 = pkin(5) * t661;
t36 = t1100 * t552 - t214 * t231 + t215 * t232;
t1285 = t36 * qJD(1);
t1276 = t552 * t1222;
t1275 = t552 * t616;
t1274 = t552 * t1388;
t1263 = t1222 * t842;
t1257 = t616 * t842;
t1256 = t616 * t883;
t1253 = t614 * t1026;
t1251 = t1026 * t842;
t1249 = t647 * t1224;
t1247 = t647 * t842;
t65 = t1298 - t1301;
t1246 = t65 * qJD(1);
t1239 = t614 * t1024;
t1237 = t1024 * t842;
t1235 = t726 * t1224;
t1233 = t726 * t842;
t1092 = -t1324 / 0.2e1;
t953 = -t319 / 0.2e1 + t1329 * t1092;
t74 = t1081 / 0.2e1 + t953;
t1232 = t74 * qJD(1);
t1230 = t839 * t853;
t1228 = t839 * t874;
t1219 = t853 * t1224;
t1217 = t853 * t614;
t1215 = t853 * t1388;
t1213 = t874 * t1224;
t1211 = t874 * t614;
t1209 = t874 * t1388;
t984 = t412 * t887 - t413 * t884;
t952 = t984 * t839;
t98 = (t418 * t887 + t419 * t884) * t842 + t952;
t1193 = t98 * qJD(1);
t1189 = t1103 * t203;
t1188 = t1103 * t204;
t1037 = -t1025 / 0.2e1 + t1356;
t1038 = t1389 / 0.2e1 + t1355;
t244 = t1037 * t839 + t1038 * t842;
t1183 = t244 * qJD(3);
t1182 = t1102 * t259;
t103 = t1100 * t1222 + t231 * t839 + t1275;
t1174 = qJD(1) * t103;
t104 = t1100 * t616 - t232 * t839 - t1276;
t1173 = qJD(1) * t104;
t121 = t214 * t839 - t1276;
t1172 = qJD(1) * t121;
t122 = -t215 * t839 + t1275;
t1171 = qJD(1) * t122;
t1087 = -t1318 / 0.2e1;
t1003 = t1087 + t1339;
t1088 = t1319 / 0.2e1;
t897 = (-t872 / 0.2e1 + t1088 + t1370) * t842 + (-pkin(4) / 0.2e1 + t1003) * t839;
t225 = -t1038 * t887 + t884 * t897;
t1170 = qJD(1) * t225;
t264 = t1222 * t614 + t1224 * t616;
t1169 = qJD(1) * t264;
t1168 = qJD(1) * t984;
t281 = -t1025 * t660 + t412 * t839;
t1167 = qJD(1) * t281;
t282 = t1025 * t661 - t413 * t839;
t1166 = qJD(1) * t282;
t327 = -t1226 - t1258;
t1164 = qJD(1) * t327;
t555 = t1101 * t884;
t1163 = qJD(1) * t555;
t556 = t1101 * t887;
t1162 = qJD(1) * t556;
t1161 = qJD(1) * t1222;
t623 = t1328 * t839 + t842 * t869;
t1159 = qJD(1) * t623;
t624 = t1328 * t842 - t839 * t869;
t1158 = qJD(1) * t624;
t1157 = qJD(1) * t869;
t1154 = qJD(2) * t839;
t1152 = qJD(3) * t873;
t1151 = qJD(4) * t869;
t1149 = qJD(5) * t884;
t1148 = qJD(5) * t887;
t1147 = qJD(6) * t853;
t1146 = qJD(6) * t874;
t102 = (t454 * t887 + t455 * t884) * t842 + t952;
t1145 = t102 * qJD(1);
t136 = t1439 + (t418 - t1427) * t839;
t1144 = t136 * qJD(1);
t137 = t1438 + (-t419 - t1426) * t839;
t1143 = t137 * qJD(1);
t140 = t1439 + (t454 - t1427) * t839;
t1142 = t140 * qJD(1);
t141 = t1438 + (-t455 - t1426) * t839;
t1141 = t141 * qJD(1);
t1140 = t203 * qJD(1);
t1138 = t204 * qJD(1);
t1135 = t244 * qJD(1);
t964 = t614 * t1344 - t1257 / 0.2e1;
t998 = t871 / 0.2e1 - t1201 / 0.2e1;
t297 = -t964 + t998;
t1132 = t297 * qJD(1);
t966 = t610 * t1344 + t1263 / 0.2e1;
t298 = -t935 - t966;
t1131 = t298 * qJD(1);
t323 = t1224 * t839 - t1263;
t1128 = t323 * qJD(1);
t324 = -t614 * t839 + t1257;
t1127 = t324 * qJD(1);
t431 = (t1342 + t935) * t839;
t422 = t431 * qJD(1);
t433 = t1386 * t839 + t1347;
t424 = t433 * qJD(1);
t975 = 0.1e1 / 0.2e1 + t1385;
t469 = t975 * t884;
t1123 = t469 * qJD(1);
t542 = t975 * t887;
t1122 = t542 * qJD(1);
t1121 = t1101 * qJD(1);
t1119 = t653 * qJD(5);
t1118 = t654 * qJD(1);
t637 = t658 * qJD(1);
t678 = t1175 * t842;
t1116 = t678 * qJD(1);
t690 = t1046 + t830 / 0.2e1;
t1115 = t690 * qJD(1);
t1114 = t829 * qJD(1);
t1112 = t839 * qJD(1);
t859 = t886 ^ 2 - t889 ^ 2;
t1110 = t859 * qJD(1);
t1109 = t886 * qJD(1);
t1108 = t886 * qJD(3);
t1107 = t889 * qJD(1);
t1106 = t889 * qJD(3);
t1097 = t58 * qJD(3) + t60 * qJD(4);
t1096 = t885 * t1311;
t1095 = t885 * t1314;
t1094 = t1327 / 0.2e1;
t1091 = -t827 / 0.2e1;
t1089 = -t1319 / 0.2e1;
t1085 = (-t1076 - t1223) * t1312;
t478 = t1274 / 0.2e1;
t1084 = t841 * t1014 + t616 * t1094 + t478;
t1077 = t1329 * t1222;
t1074 = qJ(2) * t1109;
t1073 = qJ(2) * t1107;
t1072 = t1388 * t1112;
t1071 = t841 * t1112;
t1070 = t869 * t1112;
t1069 = t884 * t1112;
t1068 = t887 * t1112;
t1067 = t869 * t1111;
t1065 = t839 * t1149;
t1064 = t839 * t1148;
t867 = t884 * t1148;
t1061 = t886 * t1106;
t1060 = -t1274 / 0.2e1;
t1058 = t552 * t1333;
t1056 = -t1220 / 0.2e1;
t1055 = t836 * t1331;
t1049 = -t660 / 0.2e1;
t1048 = -t661 / 0.2e1;
t1044 = -t630 / 0.2e1 + t1057;
t1043 = t1359 + t1351;
t1040 = t1357 + t1434;
t1039 = t679 / 0.2e1 - t1426 / 0.2e1;
t1034 = t1340 + t1337;
t1032 = t882 / 0.2e1 + t1336;
t1030 = t1329 * qJD(5);
t1029 = t1329 * qJD(6);
t1028 = pkin(3) * t1103;
t1027 = t888 * t1175;
t1018 = t1103 * t884;
t1016 = t1102 * t839;
t1015 = t1102 * t841;
t1013 = -qJD(5) - t1112;
t1011 = t836 * t867;
t1002 = t885 * t1028;
t1001 = -t1321 + t1325;
t1000 = t1032 * t872;
t999 = t1032 * t888;
t991 = -qJD(6) + t1013;
t99 = -t412 * t418 + t413 * t419 + t1245;
t990 = t99 * qJD(1) + t58 * qJD(2);
t430 = t1388 * t766 + t765 * t841;
t960 = -t1222 * t1348 + t1349 * t616;
t8 = (t1367 + t218 / 0.2e1) * t841 - (-t230 / 0.2e1 + t219 / 0.2e1) * t1388 - t1043 * t614 + t1040 * t1224 + t960;
t989 = -qJD(1) * t8 - qJD(3) * t430;
t983 = t1283 - t1284;
t982 = t1277 - t1278;
t981 = -t1221 - t1229;
t105 = -t412 * t454 + t413 * t455 + t1245;
t979 = t105 * qJD(1) + t60 * qJD(2);
t898 = (t616 * t1333 + (t1331 * t841 + t1335) * t842) * pkin(5) + t1060;
t51 = t898 + t1444;
t814 = t841 * t1327;
t588 = t814 + t1215;
t978 = qJD(1) * t51 - qJD(3) * t588;
t976 = t842 * t1013;
t283 = t1328 * t869;
t974 = t283 * qJD(1) + t244 * qJD(2);
t130 = (t455 / 0.2e1 - t419 / 0.2e1) * t887 + (-t454 / 0.2e1 + t418 / 0.2e1) * t884;
t826 = pkin(3) * t1027;
t973 = -qJD(1) * t130 - qJD(3) * t826;
t971 = t1323 / 0.2e1 + t1322 / 0.2e1;
t970 = t1371 + t1003;
t959 = t1339 * t842 + t1343 * t872;
t93 = t1060 + t1444;
t958 = qJD(1) * t93 - t1153 * t1388;
t956 = t887 * t976;
t905 = t884 * t959 + t1057;
t271 = t905 - t1044;
t955 = -qJD(1) * t271 - t1152 * t887;
t931 = t959 * t887;
t273 = -t631 / 0.2e1 - t931 + t1037 * t884;
t954 = -qJD(1) * t273 - t1152 * t884;
t951 = -t1089 * t1222 - t1343 * t765;
t950 = t1088 * t616 + t1344 * t766;
t79 = -t1034 * t1224 - t1043 * t842 + t951;
t949 = -qJD(1) * t79 + t1096 * t1388;
t81 = -t1034 * t614 - t1040 * t842 + t950;
t948 = -qJD(1) * t81 - t1096 * t841;
t228 = t1038 * t884 + t887 * t897;
t947 = -qJD(1) * t228 - t1096 * t884;
t946 = t971 * t887;
t944 = t1098 * t218 + t1334 * t219;
t943 = t1098 * t229 + t1334 * t230;
t942 = t1256 / 0.2e1 - t1077 / 0.2e1;
t941 = -t1098 * t765 + t1334 * t766;
t892 = t1026 * t1367 + t1088 * t552 + t1340 * t1419 + t1348 * t215 + t1349 * t214 + t1357 * t230;
t915 = t1337 * t1419 + t1431 * t218 + t1434 * t219;
t2 = t892 + t915;
t284 = t1026 * t765 + t1319 * t853 + t647 * t766;
t909 = pkin(3) * t1056 + t1348 * t614 - t1365 * t765;
t50 = t1034 * t839 + t1040 * t616 + t1043 * t1222 + t909;
t934 = t2 * qJD(1) + t50 * qJD(2) + t284 * qJD(3);
t253 = t1327 * t853;
t903 = -t1026 * t1368 + t1359 * t231 + t1360 * t214 + t1366 * t647;
t3 = (t1048 * t853 + t1058 + t944) * pkin(5) + t903;
t904 = (t660 / 0.2e1 + t942) * pkin(5);
t68 = t904 + t1467;
t933 = -t3 * qJD(1) - t68 * qJD(2) + t253 * qJD(3);
t923 = (-t1224 * t1335 + t1329 * t1463) * pkin(5);
t894 = t923 - t1468;
t9 = t1041 * t616 + t1042 * t1222 + t894;
t932 = qJD(1) * t9 - qJD(4) * t91;
t11 = t1035 * t616 + t1036 * t1222 + t894;
t930 = qJD(1) * t11 - qJD(3) * t91;
t242 = (pkin(3) * t999 + t1338 + t1371) * t839 + (-pkin(9) * t1032 + t1000 + t1089) * t842;
t891 = t967 * t872 + (t1356 * t885 + t888 * t969) * pkin(3) + t1389 * t1338;
t47 = t1326 / 0.2e1 + t968 * pkin(9) + t891;
t641 = (t1027 * t872 + t873 * t885) * pkin(3);
t928 = t47 * qJD(1) + t242 * qJD(2) + t641 * qJD(3);
t910 = (t1005 + t1201 / 0.2e1) * t1318;
t457 = -t1033 * t1388 + t910;
t371 = -t814 + t457;
t61 = t898 + t1442;
t628 = t814 + t1209;
t925 = qJD(1) * t61 + qJD(3) * t371 - qJD(4) * t628;
t906 = t884 * t971 + t1057;
t276 = t906 + t1039;
t744 = t970 * t887;
t922 = -qJD(1) * t276 + qJD(3) * t744 + t1313 * t887;
t278 = -t680 / 0.2e1 - t946;
t743 = t970 * t884;
t921 = -qJD(1) * t278 + qJD(3) * t743 + t1313 * t884;
t107 = t1060 + t1442;
t919 = qJD(1) * t107 + qJD(3) * t457 - t1150 * t1388;
t908 = (t1049 + t942) * pkin(5);
t110 = (-t1033 * t884 + t941) * pkin(5);
t303 = t1327 * t874;
t902 = t1431 * t1462 + t1461 * t1434;
t5 = (t1048 * t874 + t1058 + t943) * pkin(5) + t902;
t84 = t904 + t1466;
t907 = -t5 * qJD(1) - t84 * qJD(2) - t110 * qJD(3) + t303 * qJD(4);
t458 = t1209 / 0.2e1 + t1215 / 0.2e1 + t910;
t459 = t1208 / 0.2e1 + t1214 / 0.2e1 - t911;
t900 = t923 + t1468;
t880 = qJ(2) * qJD(2);
t879 = qJD(1) * qJ(2);
t868 = t886 * t1107;
t858 = t884 * t1095;
t854 = t860 * qJD(5);
t815 = t826 * qJD(4);
t798 = t841 * t1095;
t797 = t1388 * t1095;
t746 = pkin(4) * t1331 + t1087 * t887 + t1330 * t873;
t745 = pkin(4) * t1333 + t1087 * t884 + t1332 * t873;
t675 = t1103 * t829;
t584 = t637 + t1148;
t583 = -t1118 - t1149;
t558 = 0.2e1 * t1046 - t1196;
t543 = t1331 * t1372 + t1055 + t1330;
t527 = t552 * t1094;
t496 = t1388 * t1015;
t494 = t1102 * t1225;
t493 = t956 * t1408;
t470 = t1385 * t884 + t1333;
t438 = -t935 * t842 + t1470;
t437 = t1386 * t842 + t1346;
t436 = -t1224 / 0.2e1 + t935 * t839;
t435 = t1005 * t839 - t1344 * t1388 + t1347;
t429 = t1062 * t882 - t1119;
t428 = t1062 * t881 + t1119;
t420 = t430 * qJD(4);
t414 = t1103 * t678;
t373 = t814 + t458;
t372 = -t813 + t459;
t364 = qJD(5) * t658 - t1162;
t363 = -qJD(5) * t654 + t1163;
t362 = t1102 * t602;
t332 = -t1015 - t422;
t331 = t1102 * t1388 - t424;
t310 = -t1119 + (-t1111 * t882 - t1420) * t839;
t309 = t1119 + (-t1111 * t881 + t1420) * t839;
t300 = t964 + t998;
t299 = -t935 + t966;
t295 = t1018 * t842 + t1162;
t294 = t1402 * t842 - t1163;
t293 = t300 * qJD(2);
t292 = t299 * qJD(2);
t291 = t298 * qJD(2);
t290 = t297 * qJD(2);
t285 = (-qJD(5) + t1112) * t661 * t1408 - t860 * t1404;
t280 = -qJD(5) * t660 - t1402 * t839;
t279 = t1427 + t680 / 0.2e1 - t946;
t277 = t906 - t1039;
t274 = t1427 + t631 / 0.2e1 - t931;
t272 = t905 + t1044;
t241 = t842 * t1000 + (t839 * t999 + t1056) * pkin(3) + t1175 * t1321 / 0.2e1 - t1416;
t227 = pkin(9) * t1048 + t1394 * t887 + 0.2e1 * t1050;
t226 = pkin(9) * t1049 + t1394 * t884 - t1423;
t224 = t1103 * t431 + t1112 * t616;
t223 = t1103 * t433 + t1112 * t1222;
t220 = -qJD(5) * t661 + t1018 * t839;
t147 = -t1102 * t433 - t1127;
t146 = -t1102 * t431 - t1128;
t139 = t1103 * t434 + t1131;
t138 = t1103 * t432 + t1132;
t133 = t1103 * t436 + t616 * t991;
t132 = t1103 * t435 + t1222 * t991;
t129 = t967 - t968;
t128 = t1160 * t614 + t1456;
t123 = t1161 * t1224 - t1456;
t120 = t1102 * t435 + t1403 * t841 + t1127;
t119 = t1102 * t436 + t1388 * t1403 + t1128;
t111 = pkin(5) * t941 + (t853 + t874) * t1094;
t108 = t478 + t938 + t1445;
t101 = -t1102 * t614 + t1103 * t438 - t1132;
t100 = -t1102 * t610 + t1103 * t437 - t1131;
t97 = -t1102 * t434 - t1138;
t96 = -t1102 * t432 - t1140;
t94 = t478 + t939 + t1446;
t85 = t908 - t1466;
t80 = -t1247 / 0.2e1 - t1217 / 0.2e1 + t1454 - t1233 / 0.2e1 - t1211 / 0.2e1 + t950;
t78 = -t1251 / 0.2e1 - t1219 / 0.2e1 - t1447 - t1237 / 0.2e1 - t1213 / 0.2e1 + t951;
t77 = -(t1020 + t1160) * t614 + t1456;
t76 = -(-t1103 * t1388 + t1161) * t1224 - t1456;
t75 = t1204 - t1081 / 0.2e1 + t953;
t73 = t883 * t1092 - t1080 - t893 / 0.2e1 - t1205 / 0.2e1;
t71 = t1020 * t839 + t1102 * t437 + t1138;
t70 = t1102 * t438 - t1388 * t1404 + t1140;
t69 = t908 - t1467;
t64 = t1006 + (t1091 - t334 / 0.2e1) * t883 + t1084 + t1445;
t63 = t1376 + t109;
t54 = t1007 + (t1091 - t330 / 0.2e1) * t883 + t1084 + t1446;
t53 = t1376 + t95;
t49 = t1230 / 0.2e1 + t1228 / 0.2e1 + t909 + t963 + t1008;
t48 = -t1169 + t1182;
t46 = t1283 * t1370 - pkin(9) * t1284 / 0.2e1 - t1326 / 0.2e1 + t891;
t41 = t1169 + t1103 * (t1224 * t841 - t1388 * t614) + t1182;
t23 = (t1055 + t940) * pkin(5) + t1462 * t1365 + t1461 * t1463;
t21 = -t1103 * t327 + t1307;
t18 = t961 - t1453;
t14 = t962 - t1452;
t12 = -t1222 * t1351 - t1361 * t726 - t1008 + t900;
t10 = -t1222 * t1358 - t1361 * t647 + t900 - t963;
t7 = t1249 / 0.2e1 + t1293 / 0.2e1 - t1253 / 0.2e1 - t1294 / 0.2e1 + t1235 / 0.2e1 + t1296 / 0.2e1 - t1239 / 0.2e1 - t1297 / 0.2e1 + t960;
t6 = pkin(5) * t943 + t1014 * t874 + t527 - t902;
t4 = pkin(5) * t944 + t1014 * t853 + t527 - t903;
t1 = t892 - t915;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t880, -t1061, t859 * qJD(3), 0, t1061, 0, 0, qJ(2) * t1106 + qJD(2) * t886, -qJ(2) * t1108 + qJD(2) * t889, 0, t880, -t1421, -t1103 * t1101, 0, t1421, 0, 0, qJD(3) * t623 + t1151 * t842 + t1154, qJD(2) * t842 + qJD(3) * t624 - t1151 * t839, 0, qJD(2) * t869 + qJD(3) * t283, -t1421 * t882 - t1011, -t677 * qJD(5) + t839 * t945, -t1065 * t842 + t1103 * t556, -t1421 * t881 + t1011, -t1064 * t842 - t1103 * t555, t1421, qJD(3) * t136 + qJD(4) * t140 + qJD(5) * t282 + t1154 * t887, qJD(3) * t137 + qJD(4) * t141 + qJD(5) * t281 - t1154 * t884, -qJD(2) * t678 - qJD(3) * t98 - qJD(4) * t102, -qJD(2) * t984 + qJD(3) * t99 + qJD(4) * t105 (-t1102 * t1222 - t1103 * t614) * t616, t1102 * t302 + t1103 * t264, -t1016 * t1222 + t1103 * t324 (t1102 * t616 - t1103 * t1224) * t1222, -t1016 * t616 + t1103 * t323, t1421, qJD(3) * t42 + qJD(4) * t44 + qJD(5) * t103 + qJD(6) * t122 + t1154 * t1388, qJD(3) * t43 + qJD(4) * t45 + qJD(5) * t104 + qJD(6) * t121 - t1154 * t841, qJD(2) * t327 + qJD(3) * t27 + qJD(4) * t30 + qJD(5) * t31, qJD(2) * t65 + qJD(3) * t34 + qJD(4) * t35 + qJD(5) * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t879, 0, 0, 0, 0, 0, 0, t1109, t1107, 0, t879, 0, 0, 0, 0, 0, 0, t1112, t1111, 0, t1157 + t1183, 0, 0, 0, 0, 0, 0, qJD(5) * t543 + t1068, qJD(5) * t470 - t1069, -t1116, t1097 - t1168, 0, 0, 0, 0, 0, 0, t1102 * t300 + t1072 + t1189, t1102 * t299 - t1071 + t1188, t1164 + t1401, t1246 + (t1388 * t610 + t841 * t614) * qJD(2) + t14 * qJD(3) + t18 * qJD(4) + t23 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t868, t1110, -t1108, t868, -t1106, 0, -t1108 * t890 + t1073, -t1106 * t890 - t1074, 0, 0, -t1062, -t1121, -t1404, t1062, -t1403, 0, -qJD(3) * t1389 + qJD(4) * t558 + t1159, t1158 + t1414, t1400 (-t1025 * t885 - t1389 * t888) * t1311 + t974, t310, t285, t295, t309, t294, t559, t1144 + (t884 * t981 - t1423) * qJD(3) + t226 * qJD(4) + t274 * qJD(5), t1143 + (t887 * t981 + t1424) * qJD(3) + t227 * qJD(4) + t272 * qJD(5), qJD(3) * t983 + t129 * qJD(4) - t1193 (t1389 * t873 + t872 * t983) * qJD(3) + t46 * qJD(4) + t990, t77, t41, t120, t76, t119, t476 (-t1219 - t1251 - t1447) * qJD(3) + t78 * qJD(4) + t53 * qJD(5) + t95 * qJD(6) + t1377 (-t1217 - t1247 + t1454) * qJD(3) + t80 * qJD(4) + t54 * qJD(5) + t94 * qJD(6) + t1379 (t1249 - t1253 + t1296 - t1297) * qJD(3) + t7 * qJD(4) + t10 * qJD(5) + t1417, t1287 + t14 * qJD(2) + (-t1026 * t218 + t1419 * t853 + t219 * t647) * qJD(3) + t1 * qJD(4) + t4 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1062, -t1121, -t1404, t1062, -t1403, 0, qJD(3) * t558 - qJD(4) * t1389 + t1067, -t1070 + t1414, 0, 0, t310, t285, t295, t309, t294, t559, t1142 + t226 * qJD(3) + (t1001 * t884 - t1423) * qJD(4) + t279 * qJD(5), t1141 + t227 * qJD(3) + (t1001 * t887 + t1424) * qJD(4) + t277 * qJD(5), t129 * qJD(3) + qJD(4) * t982 - t1145, t46 * qJD(3) + (pkin(9) * t982 - t1326) * qJD(4) + t979, t77, t41, t120, t76, t119, t476, t78 * qJD(3) + (-t1213 - t1237 - t1447) * qJD(4) + t63 * qJD(5) + t109 * qJD(6) + t1378, t80 * qJD(3) + (-t1211 - t1233 + t1454) * qJD(4) + t64 * qJD(5) + t108 * qJD(6) + t1380, t7 * qJD(3) + (t1235 - t1239 + t1293 - t1294) * qJD(4) + t12 * qJD(5) + t1418, t1286 + t18 * qJD(2) + t1 * qJD(3) + (-t1024 * t229 + t1419 * t874 + t230 * t726) * qJD(4) + t6 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t335, -t1451, t884 * t976, t335, t956, t675, qJD(2) * t543 + qJD(3) * t274 + qJD(4) * t279 - qJD(5) * t413 + t1166, qJD(2) * t470 + qJD(3) * t272 + qJD(4) * t277 + qJD(5) * t412 + t1167, 0, 0, t1415, t56, t132, -t1415, t133, t675, qJD(3) * t53 + qJD(4) * t63 + qJD(5) * t231 + qJD(6) * t73 + t1174 + t293, qJD(3) * t54 + qJD(4) * t64 - qJD(5) * t232 + qJD(6) * t75 + t1173 + t292, t1288 + t10 * qJD(3) + t12 * qJD(4) + (t1077 - t1256) * t1312, t1285 + t23 * qJD(2) + t4 * qJD(3) + t6 * qJD(4) + (t1329 * t231 + t232 * t883) * t1312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1415, t56, t132, -t1415, t133, t675, qJD(3) * t95 + qJD(4) * t109 + qJD(5) * t73 - qJD(6) * t215 + t1171 + t293, qJD(3) * t94 + qJD(4) * t108 + qJD(5) * t75 + qJD(6) * t214 + t1172 + t292, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t879, 0, 0, 0, 0, 0, 0, -t1109, -t1107, 0, -t879, 0, 0, 0, 0, 0, 0, -t1112, -t1111, 0, -t1157 + t1183, 0, 0, 0, 0, 0, 0, -qJD(5) * t542 - t1068, qJD(5) * t469 + t1069, t1116, t1097 + t1168, 0, 0, 0, 0, 0, 0, -t1102 * t297 - t1072 + t1189, -t1102 * t298 + t1071 + t1188, -t1164 + t1401, -qJD(3) * t13 - qJD(4) * t17 - qJD(5) * t22 - t1246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1103 * t365, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1103 * t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1108, -t1106, 0, 0, 0, 0, 0, 0, 0, 0, -t1404, -t1403, 0, t1135 - t1400, 0, 0, 0, 0, 0, 0, t280, t220, t414 (t678 * t872 + t1229) * qJD(3) + t241 * qJD(4) + t1383, 0, 0, 0, 0, 0, 0, t70, t71, t21 (t1230 + t1254 + t1260) * qJD(3) + t49 * qJD(4) + t69 * qJD(5) + t1381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1404, -t1403, 0, 0, 0, 0, 0, 0, 0, 0, t280, t220, t414, t241 * qJD(3) + (pkin(9) * t678 - t1325) * qJD(4) + t1384, 0, 0, 0, 0, 0, 0, t70, t71, t21, t49 * qJD(3) + (t1228 + t1240 + t1259) * qJD(4) + t85 * qJD(5) + t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1103 * t660 - t1064 - t1122, -t1103 * t661 + t1065 + t1123, 0, 0, 0, 0, 0, 0, 0, 0, t101, t100, 0, -t1295 + t69 * qJD(3) + t85 * qJD(4) + (-t1329 * t614 + t610 * t883) * t1312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, -t1110, 0, -t868, 0, 0, -t1073, t1074, 0, 0, t1062, t1121, 0, -t1062, 0, 0, qJD(4) * t690 - t1159, -t1158, 0, -t974, t429, t493, t364, t428, t363, -t559, qJD(4) * t225 + qJD(5) * t273 - t1144, qJD(4) * t228 + qJD(5) * t271 - t1143, qJD(4) * t130 + t1193, qJD(4) * t47 - t990, t128, t48, t147, t123, t146, -t476, qJD(4) * t79 - qJD(5) * t52 - qJD(6) * t92 - t1377, qJD(4) * t81 - qJD(5) * t51 - qJD(6) * t93 - t1379, qJD(4) * t8 - qJD(5) * t9 - t1417, qJD(2) * t13 + qJD(4) * t2 - qJD(5) * t3 - t1287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1135, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t242 - t1383, 0, 0, 0, 0, 0, 0, t96, t97, -t1307, qJD(4) * t50 - qJD(5) * t68 - t1381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1095, -t888 * t1314, 0, 0, t867, t854, 0, -t867, 0, 0, -t1095 * t887 + t1149 * t873, t1148 * t873 + t858, t815, t641 * qJD(4), t496, t362, 0, -t494, 0, 0, qJD(5) * t587 + t1147 * t841 - t797, qJD(5) * t588 + t1147 * t1388 + t798, t420, qJD(4) * t284 + qJD(5) * t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1002 + t1115, -t888 * t1028, 0, 0, t867, t854, 0, -t867, 0, 0, qJD(5) * t745 - t1002 * t887 + t1170, qJD(5) * t746 + t858 - t947, t815 - t973 (-pkin(4) * t885 + pkin(9) * t1027) * t1314 + t928, t496, t362, 0, -t494, 0, 0, qJD(5) * t372 + qJD(6) * t459 - t797 - t949, qJD(5) * t373 + qJD(6) * t458 + t798 - t948, t420 - t989 + t1315 (t1024 * t765 + t1319 * t874 + t726 * t766) * qJD(4) + t111 * qJD(5) + t934; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, t605, t584, -t526, t583, -t1114, qJD(4) * t745 - t1148 * t872 - t954, qJD(4) * t746 + t1149 * t872 - t955, 0, 0, t1449, t144, t331, t1450, t332, -t1114, qJD(4) * t372 - t1390 - t1411, qJD(4) * t373 + t1412 - t978, -t932 + t1085, t111 * qJD(4) + (-t1026 * t883 - t1329 * t647) * t1312 + t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1449, t144, t331, t1450, t332, -t1114, qJD(4) * t459 - t1391 - t1411, qJD(4) * t458 + t1412 - t958, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1062, t1121, 0, -t1062, 0, 0, -qJD(3) * t690 - t1067, t1070, 0, 0, t429, t493, t364, t428, t363, -t559, -qJD(3) * t225 + qJD(5) * t278 - t1142, -qJD(3) * t228 + qJD(5) * t276 - t1141, -qJD(3) * t130 + t1145, -qJD(3) * t47 - t979, t128, t48, t147, t123, t146, -t476, -qJD(3) * t79 - qJD(5) * t62 - qJD(6) * t106 - t1378, -qJD(3) * t81 - qJD(5) * t61 - qJD(6) * t107 - t1380, -qJD(3) * t8 - qJD(5) * t11 - t1418, qJD(2) * t17 - qJD(3) * t2 - qJD(5) * t5 - t1286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t242 - t1384, 0, 0, 0, 0, 0, 0, t96, t97, -t1307, -qJD(3) * t50 - qJD(5) * t84 - t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1096 - t1115, t888 * t1311, 0, 0, t867, t854, 0, -t867, 0, 0, -qJD(5) * t743 + t1096 * t887 - t1170, -qJD(5) * t744 + t947, t973, -t928, t496, t362, 0, -t494, 0, 0, -qJD(5) * t370 - qJD(6) * t456 + t949, -qJD(5) * t371 - qJD(6) * t457 + t948, t989 + t1315, -qJD(5) * t110 - t934; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t867, t854, 0, -t867, 0, 0, -pkin(4) * t1149, -pkin(4) * t1148, 0, 0, t496, t362, 0, -t494, 0, 0, qJD(5) * t627 + t1146 * t841, qJD(5) * t628 + t1146 * t1388, 0, qJD(5) * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, t605, t584, -t526, t583, -t1114, -pkin(9) * t1148 - t921, pkin(9) * t1149 - t922, 0, 0, t1449, t144, t331, t1450, t332, -t1114, -t1392 - t1410, t1413 - t925, -t930 + t1085 (-t1024 * t883 - t1329 * t726) * t1312 + t907; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1449, t144, t331, t1450, t332, -t1114, -t1393 - t1410, t1413 - t919, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t1451, t1062 * t884 - t1103 * t658, -t335, t1062 * t887 + t1103 * t654, t675, qJD(2) * t542 - qJD(3) * t273 - qJD(4) * t278 - t1166, -qJD(2) * t469 - qJD(3) * t271 - qJD(4) * t276 - t1167, 0, 0, -t1415, -t56, t223, t1415, t224, t675, qJD(3) * t52 + qJD(4) * t62 + qJD(6) * t72 - t1174 + t290, qJD(3) * t51 + qJD(4) * t61 + qJD(6) * t74 - t1173 + t291, qJD(3) * t9 + qJD(4) * t11 - t1288, qJD(2) * t22 + qJD(3) * t3 + qJD(4) * t5 - t1285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1122, -t1123, 0, 0, 0, 0, 0, 0, 0, 0, t138, t139, 0, qJD(3) * t68 + qJD(4) * t84 + t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, -t605, -t637, t526, t1118, t1114, qJD(4) * t743 + t954, qJD(4) * t744 + t955, 0, 0, t1450, -t144, t424, t1449, t422, t1114, qJD(4) * t370 + t1390, qJD(4) * t371 + t1124 + t978, t932, qJD(4) * t110 - t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, -t605, -t637, t526, t1118, t1114, t921, t922, 0, 0, t1450, -t144, t424, t1449, t422, t1114, t1392, t1124 + t925, t930, -t907; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1320, -pkin(5) * t1029, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1102 * t1320 + t1308, t1232 + (-t1030 - t1029) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1415, -t56, t223, t1415, t224, t675, qJD(3) * t92 + qJD(4) * t106 - qJD(5) * t72 - t1171 + t290, qJD(3) * t93 + qJD(4) * t107 - qJD(5) * t74 - t1172 + t291, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1450, -t144, t424, t1449, t422, t1114, qJD(4) * t456 + t1391, qJD(4) * t457 + t1124 + t958, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1450, -t144, t424, t1449, t422, t1114, t1393, t1124 + t919, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1312 * t883 - t1308, pkin(5) * t1030 - t1232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
