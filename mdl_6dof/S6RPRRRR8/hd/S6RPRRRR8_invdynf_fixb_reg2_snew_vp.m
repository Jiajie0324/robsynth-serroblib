% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:17
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:17:17
% EndTime: 2019-05-06 04:17:22
% DurationCPUTime: 5.36s
% Computational Cost: add. (37190->299), mult. (73301->366), div. (0->0), fcn. (51963->10), ass. (0->210)
t1787 = sin(qJ(4));
t1788 = sin(qJ(3));
t1792 = cos(qJ(4));
t1793 = cos(qJ(3));
t1754 = (t1787 * t1793 + t1788 * t1792) * qJD(1);
t1753 = qJD(5) + t1754;
t1750 = qJD(6) + t1753;
t1843 = qJD(6) + t1750;
t1831 = qJD(1) * t1793;
t1816 = qJD(3) * t1831;
t1820 = t1788 * qJDD(1);
t1761 = -t1816 - t1820;
t1783 = t1788 ^ 2;
t1796 = qJD(1) ^ 2;
t1789 = sin(qJ(1));
t1794 = cos(qJ(1));
t1771 = -t1794 * g(1) - t1789 * g(2);
t1802 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1771;
t1806 = qJD(3) * pkin(3) - pkin(8) * t1831;
t1833 = pkin(7) + pkin(1);
t1726 = t1761 * pkin(3) + (pkin(8) * t1783 + t1833) * t1796 - t1806 * t1831 + t1802;
t1832 = qJD(1) * t1788;
t1756 = -t1787 * t1832 + t1792 * t1831;
t1781 = qJD(3) + qJD(4);
t1786 = sin(qJ(5));
t1791 = cos(qJ(5));
t1739 = t1756 * t1786 - t1791 * t1781;
t1741 = t1756 * t1791 + t1781 * t1786;
t1785 = sin(qJ(6));
t1790 = cos(qJ(6));
t1722 = t1790 * t1739 + t1741 * t1785;
t1842 = t1722 ^ 2;
t1724 = -t1739 * t1785 + t1741 * t1790;
t1841 = t1724 ^ 2;
t1840 = t1739 ^ 2;
t1839 = t1741 ^ 2;
t1838 = t1750 ^ 2;
t1837 = t1753 ^ 2;
t1836 = t1754 ^ 2;
t1835 = t1756 ^ 2;
t1834 = t1781 ^ 2;
t1830 = t1722 * t1724;
t1829 = t1739 * t1741;
t1828 = t1753 * t1739;
t1827 = t1754 * t1756;
t1826 = t1756 * t1781;
t1825 = t1783 * t1796;
t1824 = t1793 * t1796;
t1823 = qJD(5) - t1753;
t1822 = qJD(6) - t1750;
t1817 = qJD(3) * t1832;
t1819 = t1793 * qJDD(1);
t1762 = -t1817 + t1819;
t1814 = -t1756 * qJD(4) + t1792 * t1761 - t1787 * t1762;
t1710 = -t1814 + t1826;
t1809 = t1787 * t1761 + t1792 * t1762;
t1727 = -qJD(4) * t1754 + t1809;
t1675 = (t1754 * t1781 - t1727) * pkin(9) + t1710 * pkin(4) - t1726;
t1770 = t1789 * g(1) - t1794 * g(2);
t1803 = -t1796 * qJ(2) + qJDD(2) - t1770;
t1799 = -qJDD(1) * t1833 + t1803;
t1737 = -t1793 * g(3) + t1788 * t1799;
t1725 = -pkin(3) * t1825 + t1761 * pkin(8) - qJD(3) * t1806 + t1737;
t1798 = t1793 * t1799;
t1797 = t1798 - t1762 * pkin(8) + qJDD(3) * pkin(3) + (-pkin(8) * qJD(1) * qJD(3) - pkin(3) * t1824 + g(3)) * t1788;
t1698 = t1792 * t1725 + t1787 * t1797;
t1734 = pkin(4) * t1754 - pkin(9) * t1756;
t1818 = qJDD(3) + qJDD(4);
t1678 = -pkin(4) * t1834 + pkin(9) * t1818 - t1754 * t1734 + t1698;
t1651 = t1786 * t1675 + t1791 * t1678;
t1784 = t1793 ^ 2;
t1821 = t1783 + t1784;
t1815 = t1788 * t1824;
t1650 = t1791 * t1675 - t1786 * t1678;
t1804 = -t1791 * t1727 - t1786 * t1818;
t1704 = -t1739 * qJD(5) - t1804;
t1811 = t1786 * t1727 - t1791 * t1818;
t1805 = qJD(5) * t1741 + t1811;
t1812 = -t1785 * t1704 - t1790 * t1805;
t1697 = -t1725 * t1787 + t1792 * t1797;
t1810 = -qJDD(5) + t1814;
t1807 = -qJDD(6) + t1810;
t1699 = -t1810 - t1829;
t1677 = -t1818 * pkin(4) - t1834 * pkin(9) + t1734 * t1756 - t1697;
t1801 = -t1790 * t1704 + t1785 * t1805;
t1795 = qJD(3) ^ 2;
t1773 = -t1784 * t1796 - t1795;
t1772 = -t1795 - t1825;
t1769 = -qJDD(3) - t1815;
t1768 = qJDD(3) - t1815;
t1767 = t1821 * t1796;
t1766 = qJDD(1) * t1789 + t1794 * t1796;
t1765 = qJDD(1) * t1794 - t1789 * t1796;
t1764 = t1821 * qJDD(1);
t1763 = -0.2e1 * t1817 + t1819;
t1760 = 0.2e1 * t1816 + t1820;
t1752 = qJDD(1) * pkin(1) - t1803;
t1749 = t1796 * pkin(1) + t1802;
t1748 = t1796 * t1833 + t1802;
t1746 = -t1834 - t1835;
t1745 = t1769 * t1793 - t1773 * t1788;
t1744 = -t1768 * t1788 + t1772 * t1793;
t1743 = t1769 * t1788 + t1773 * t1793;
t1742 = t1768 * t1793 + t1772 * t1788;
t1736 = t1788 * g(3) + t1798;
t1733 = -t1818 - t1827;
t1732 = t1818 - t1827;
t1731 = -t1834 - t1836;
t1729 = pkin(5) * t1753 - pkin(10) * t1741;
t1728 = -t1835 - t1836;
t1721 = -t1837 - t1839;
t1717 = -t1736 * t1788 + t1737 * t1793;
t1716 = t1736 * t1793 + t1737 * t1788;
t1715 = t1733 * t1792 - t1746 * t1787;
t1714 = t1733 * t1787 + t1746 * t1792;
t1713 = (qJD(4) - t1781) * t1754 - t1809;
t1712 = (-qJD(4) - t1781) * t1754 + t1809;
t1711 = t1814 + t1826;
t1709 = -t1837 - t1840;
t1707 = t1731 * t1792 - t1732 * t1787;
t1706 = t1731 * t1787 + t1732 * t1792;
t1705 = -t1839 - t1840;
t1701 = -t1838 - t1841;
t1700 = t1810 - t1829;
t1696 = t1739 * t1823 + t1804;
t1695 = t1704 - t1828;
t1694 = -t1741 * t1823 - t1811;
t1693 = (qJD(5) + t1753) * t1741 + t1811;
t1692 = -t1838 - t1842;
t1691 = -t1714 * t1788 + t1715 * t1793;
t1690 = t1714 * t1793 + t1715 * t1788;
t1689 = t1711 * t1792 - t1713 * t1787;
t1688 = t1711 * t1787 + t1713 * t1792;
t1687 = -t1706 * t1788 + t1707 * t1793;
t1686 = t1706 * t1793 + t1707 * t1788;
t1685 = t1807 - t1830;
t1684 = -t1807 - t1830;
t1683 = t1700 * t1791 - t1721 * t1786;
t1682 = t1700 * t1786 + t1721 * t1791;
t1681 = -t1841 - t1842;
t1680 = -t1699 * t1786 + t1709 * t1791;
t1679 = t1699 * t1791 + t1709 * t1786;
t1672 = -t1697 * t1787 + t1698 * t1792;
t1671 = t1697 * t1792 + t1698 * t1787;
t1670 = t1694 * t1791 - t1696 * t1786;
t1669 = t1694 * t1786 + t1696 * t1791;
t1668 = t1685 * t1790 - t1701 * t1785;
t1667 = t1685 * t1785 + t1701 * t1790;
t1666 = -t1688 * t1788 + t1689 * t1793;
t1665 = t1688 * t1793 + t1689 * t1788;
t1664 = t1683 * t1792 + t1695 * t1787;
t1663 = t1683 * t1787 - t1695 * t1792;
t1662 = -t1684 * t1785 + t1692 * t1790;
t1661 = t1684 * t1790 + t1692 * t1785;
t1660 = t1680 * t1792 + t1693 * t1787;
t1659 = t1680 * t1787 - t1693 * t1792;
t1658 = t1722 * t1822 + t1801;
t1657 = -t1722 * t1843 - t1801;
t1656 = -t1724 * t1822 + t1812;
t1655 = t1724 * t1843 - t1812;
t1654 = t1670 * t1792 + t1705 * t1787;
t1653 = t1670 * t1787 - t1705 * t1792;
t1652 = pkin(5) * t1805 - pkin(10) * t1840 + t1729 * t1741 + t1677;
t1649 = -t1671 * t1788 + t1672 * t1793;
t1648 = t1671 * t1793 + t1672 * t1788;
t1647 = -t1667 * t1786 + t1668 * t1791;
t1646 = t1667 * t1791 + t1668 * t1786;
t1645 = -pkin(5) * t1840 - pkin(10) * t1805 - t1753 * t1729 + t1651;
t1644 = -t1663 * t1788 + t1664 * t1793;
t1643 = t1663 * t1793 + t1664 * t1788;
t1642 = (-t1704 - t1828) * pkin(10) + t1699 * pkin(5) + t1650;
t1641 = -t1661 * t1786 + t1662 * t1791;
t1640 = t1661 * t1791 + t1662 * t1786;
t1639 = -t1659 * t1788 + t1660 * t1793;
t1638 = t1659 * t1793 + t1660 * t1788;
t1637 = t1656 * t1790 - t1658 * t1785;
t1636 = t1656 * t1785 + t1658 * t1790;
t1635 = -t1653 * t1788 + t1654 * t1793;
t1634 = t1653 * t1793 + t1654 * t1788;
t1633 = -t1650 * t1786 + t1651 * t1791;
t1632 = t1650 * t1791 + t1651 * t1786;
t1631 = t1647 * t1792 + t1657 * t1787;
t1630 = t1647 * t1787 - t1657 * t1792;
t1629 = t1641 * t1792 + t1655 * t1787;
t1628 = t1641 * t1787 - t1655 * t1792;
t1627 = t1633 * t1792 + t1677 * t1787;
t1626 = t1633 * t1787 - t1677 * t1792;
t1625 = t1642 * t1785 + t1645 * t1790;
t1624 = t1642 * t1790 - t1645 * t1785;
t1623 = -t1636 * t1786 + t1637 * t1791;
t1622 = t1636 * t1791 + t1637 * t1786;
t1621 = t1623 * t1792 + t1681 * t1787;
t1620 = t1623 * t1787 - t1681 * t1792;
t1619 = -t1630 * t1788 + t1631 * t1793;
t1618 = t1630 * t1793 + t1631 * t1788;
t1617 = -t1628 * t1788 + t1629 * t1793;
t1616 = t1628 * t1793 + t1629 * t1788;
t1615 = -t1626 * t1788 + t1627 * t1793;
t1614 = t1626 * t1793 + t1627 * t1788;
t1613 = -t1624 * t1785 + t1625 * t1790;
t1612 = t1624 * t1790 + t1625 * t1785;
t1611 = -t1620 * t1788 + t1621 * t1793;
t1610 = t1620 * t1793 + t1621 * t1788;
t1609 = -t1612 * t1786 + t1613 * t1791;
t1608 = t1612 * t1791 + t1613 * t1786;
t1607 = t1609 * t1792 + t1652 * t1787;
t1606 = t1609 * t1787 - t1652 * t1792;
t1605 = -t1606 * t1788 + t1607 * t1793;
t1604 = t1606 * t1793 + t1607 * t1788;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1766, -t1765, 0, -t1770 * t1789 + t1771 * t1794, 0, 0, 0, 0, 0, 0, 0, t1766, t1765, -t1749 * t1794 - t1752 * t1789, 0, 0, 0, 0, 0, 0, t1742 * t1789 + t1760 * t1794, t1743 * t1789 + t1763 * t1794, -t1764 * t1789 - t1767 * t1794, t1716 * t1789 - t1748 * t1794, 0, 0, 0, 0, 0, 0, t1686 * t1789 + t1710 * t1794, t1690 * t1789 + t1712 * t1794, t1665 * t1789 + t1728 * t1794, t1648 * t1789 - t1726 * t1794, 0, 0, 0, 0, 0, 0, t1638 * t1789 + t1679 * t1794, t1643 * t1789 + t1682 * t1794, t1634 * t1789 + t1669 * t1794, t1614 * t1789 + t1632 * t1794, 0, 0, 0, 0, 0, 0, t1616 * t1789 + t1640 * t1794, t1618 * t1789 + t1646 * t1794, t1610 * t1789 + t1622 * t1794, t1604 * t1789 + t1608 * t1794; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1765, -t1766, 0, t1770 * t1794 + t1771 * t1789, 0, 0, 0, 0, 0, 0, 0, -t1765, t1766, -t1749 * t1789 + t1752 * t1794, 0, 0, 0, 0, 0, 0, -t1742 * t1794 + t1760 * t1789, -t1743 * t1794 + t1763 * t1789, t1764 * t1794 - t1767 * t1789, -t1716 * t1794 - t1748 * t1789, 0, 0, 0, 0, 0, 0, -t1686 * t1794 + t1710 * t1789, -t1690 * t1794 + t1712 * t1789, -t1665 * t1794 + t1728 * t1789, -t1648 * t1794 - t1726 * t1789, 0, 0, 0, 0, 0, 0, -t1638 * t1794 + t1679 * t1789, -t1643 * t1794 + t1682 * t1789, -t1634 * t1794 + t1669 * t1789, -t1614 * t1794 + t1632 * t1789, 0, 0, 0, 0, 0, 0, -t1616 * t1794 + t1640 * t1789, -t1618 * t1794 + t1646 * t1789, -t1610 * t1794 + t1622 * t1789, -t1604 * t1794 + t1608 * t1789; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1717, 0, 0, 0, 0, 0, 0, t1687, t1691, t1666, t1649, 0, 0, 0, 0, 0, 0, t1639, t1644, t1635, t1615, 0, 0, 0, 0, 0, 0, t1617, t1619, t1611, t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1796, -qJDD(1), 0, t1771, 0, 0, 0, 0, 0, 0, 0, t1796, qJDD(1), -t1749, 0, 0, 0, 0, 0, 0, t1760, t1763, -t1767, -t1748, 0, 0, 0, 0, 0, 0, t1710, t1712, t1728, -t1726, 0, 0, 0, 0, 0, 0, t1679, t1682, t1669, t1632, 0, 0, 0, 0, 0, 0, t1640, t1646, t1622, t1608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1796, 0, t1770, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1796, t1752, 0, 0, 0, 0, 0, 0, -t1742, -t1743, t1764, -t1716, 0, 0, 0, 0, 0, 0, -t1686, -t1690, -t1665, -t1648, 0, 0, 0, 0, 0, 0, -t1638, -t1643, -t1634, -t1614, 0, 0, 0, 0, 0, 0, -t1616, -t1618, -t1610, -t1604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1717, 0, 0, 0, 0, 0, 0, t1687, t1691, t1666, t1649, 0, 0, 0, 0, 0, 0, t1639, t1644, t1635, t1615, 0, 0, 0, 0, 0, 0, t1617, t1619, t1611, t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1744, t1745, 0, t1717, 0, 0, 0, 0, 0, 0, t1687, t1691, t1666, t1649, 0, 0, 0, 0, 0, 0, t1639, t1644, t1635, t1615, 0, 0, 0, 0, 0, 0, t1617, t1619, t1611, t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1796, -qJDD(1), t1749, 0, 0, 0, 0, 0, 0, -t1760, -t1763, t1767, t1748, 0, 0, 0, 0, 0, 0, -t1710, -t1712, -t1728, t1726, 0, 0, 0, 0, 0, 0, -t1679, -t1682, -t1669, -t1632, 0, 0, 0, 0, 0, 0, -t1640, -t1646, -t1622, -t1608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1796, -t1752, 0, 0, 0, 0, 0, 0, t1742, t1743, -t1764, t1716, 0, 0, 0, 0, 0, 0, t1686, t1690, t1665, t1648, 0, 0, 0, 0, 0, 0, t1638, t1643, t1634, t1614, 0, 0, 0, 0, 0, 0, t1616, t1618, t1610, t1604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1772, t1769, -t1820, t1737, 0, 0, 0, 0, 0, 0, t1707, t1715, t1689, t1672, 0, 0, 0, 0, 0, 0, t1660, t1664, t1654, t1627, 0, 0, 0, 0, 0, 0, t1629, t1631, t1621, t1607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1768, t1773, -t1819, t1736, 0, 0, 0, 0, 0, 0, t1706, t1714, t1688, t1671, 0, 0, 0, 0, 0, 0, t1659, t1663, t1653, t1626, 0, 0, 0, 0, 0, 0, t1628, t1630, t1620, t1606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1760, t1763, -t1767, -t1748, 0, 0, 0, 0, 0, 0, t1710, t1712, t1728, -t1726, 0, 0, 0, 0, 0, 0, t1679, t1682, t1669, t1632, 0, 0, 0, 0, 0, 0, t1640, t1646, t1622, t1608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1731, t1733, t1711, t1698, 0, 0, 0, 0, 0, 0, t1680, t1683, t1670, t1633, 0, 0, 0, 0, 0, 0, t1641, t1647, t1623, t1609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1732, t1746, t1713, t1697, 0, 0, 0, 0, 0, 0, -t1693, -t1695, -t1705, -t1677, 0, 0, 0, 0, 0, 0, -t1655, -t1657, -t1681, -t1652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1710, t1712, t1728, -t1726, 0, 0, 0, 0, 0, 0, t1679, t1682, t1669, t1632, 0, 0, 0, 0, 0, 0, t1640, t1646, t1622, t1608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1709, t1700, t1694, t1651, 0, 0, 0, 0, 0, 0, t1662, t1668, t1637, t1613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1699, t1721, t1696, t1650, 0, 0, 0, 0, 0, 0, t1661, t1667, t1636, t1612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1693, t1695, t1705, t1677, 0, 0, 0, 0, 0, 0, t1655, t1657, t1681, t1652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1692, t1685, t1656, t1625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1684, t1701, t1658, t1624; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1655, t1657, t1681, t1652;];
f_new_reg  = t1;
