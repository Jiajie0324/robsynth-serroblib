% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:17
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRRR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR8_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:16:45
% EndTime: 2019-05-06 04:17:17
% DurationCPUTime: 33.93s
% Computational Cost: add. (272503->868), mult. (536439->1127), div. (0->0), fcn. (378892->10), ass. (0->567)
t1434 = sin(qJ(4));
t1540 = qJDD(3) + qJDD(4);
t1435 = sin(qJ(3));
t1439 = cos(qJ(4));
t1440 = cos(qJ(3));
t1394 = (t1434 * t1440 + t1435 * t1439) * qJD(1);
t1578 = qJD(1) * t1440;
t1579 = qJD(1) * t1435;
t1396 = -t1434 * t1579 + t1439 * t1578;
t1559 = t1396 * t1394;
t1601 = t1540 - t1559;
t1603 = t1434 * t1601;
t1602 = t1439 * t1601;
t1425 = t1440 * qJDD(1);
t1531 = qJD(3) * t1579;
t1403 = t1425 - t1531;
t1530 = qJD(3) * t1578;
t1541 = t1435 * qJDD(1);
t1476 = -t1530 - t1541;
t1332 = -t1394 * qJD(4) + t1439 * t1403 + t1434 * t1476;
t1428 = qJD(3) + qJD(4);
t1552 = t1428 * t1394;
t1306 = -t1552 + t1332;
t1432 = sin(qJ(6));
t1433 = sin(qJ(5));
t1438 = cos(qJ(5));
t1357 = t1396 * t1433 - t1438 * t1428;
t1358 = t1396 * t1438 + t1428 * t1433;
t1437 = cos(qJ(6));
t1322 = t1437 * t1357 + t1358 * t1432;
t1324 = -t1357 * t1432 + t1358 * t1437;
t1266 = t1324 * t1322;
t1507 = -t1434 * t1403 + t1439 * t1476;
t1477 = qJD(4) * t1396 - t1507;
t1330 = qJDD(5) + t1477;
t1329 = qJDD(6) + t1330;
t1596 = -t1266 + t1329;
t1600 = t1432 * t1596;
t1328 = t1358 * t1357;
t1594 = -t1328 + t1330;
t1599 = t1433 * t1594;
t1598 = t1437 * t1596;
t1597 = t1438 * t1594;
t1380 = t1428 * t1396;
t1302 = t1380 + t1477;
t1577 = qJD(2) * qJD(1);
t1427 = 0.2e1 * t1577;
t1430 = t1435 ^ 2;
t1443 = qJD(1) ^ 2;
t1436 = sin(qJ(1));
t1441 = cos(qJ(1));
t1413 = t1441 * g(1) + t1436 * g(2);
t1429 = qJDD(1) * qJ(2);
t1482 = t1413 - t1429;
t1590 = pkin(7) + pkin(1);
t1593 = -(pkin(8) * t1430 + t1590) * t1443 - pkin(3) * t1476 + (qJD(3) * pkin(3) - pkin(8) * t1578) * t1578 - t1482;
t1199 = pkin(4) * t1302 - pkin(9) * t1306 + t1427 + t1593;
t1412 = t1436 * g(1) - t1441 * g(2);
t1481 = qJDD(2) - t1412;
t1452 = -t1443 * qJ(2) + t1481;
t1448 = -qJDD(1) * t1590 + t1452;
t1354 = t1440 * g(3) - t1435 * t1448;
t1442 = qJD(3) ^ 2;
t1549 = t1430 * t1443;
t1415 = -t1442 - t1549;
t1325 = pkin(3) * t1415 - pkin(8) * t1541 - t1354;
t1447 = t1440 * t1448;
t1545 = t1440 * t1443;
t1580 = qJD(1) * qJD(3);
t1444 = t1447 - t1403 * pkin(8) + qJDD(3) * pkin(3) + (-pkin(3) * t1545 - pkin(8) * t1580 + g(3)) * t1435;
t1264 = t1439 * t1325 + t1434 * t1444;
t1346 = pkin(4) * t1394 - pkin(9) * t1396;
t1591 = t1428 ^ 2;
t1205 = -pkin(4) * t1591 + pkin(9) * t1540 - t1394 * t1346 + t1264;
t1131 = -t1438 * t1199 + t1433 * t1205;
t1132 = t1433 * t1199 + t1438 * t1205;
t1071 = t1433 * t1131 + t1438 * t1132;
t1471 = -t1438 * t1332 - t1433 * t1540;
t1283 = -t1357 * qJD(5) - t1471;
t1470 = -t1433 * t1332 + t1438 * t1540;
t1449 = t1358 * qJD(5) - t1470;
t1190 = -t1322 * qJD(6) + t1437 * t1283 - t1432 * t1449;
t1386 = qJD(5) + t1394;
t1383 = qJD(6) + t1386;
t1293 = t1383 * t1322;
t1595 = -t1293 + t1190;
t1339 = t1386 * t1357;
t1258 = t1339 + t1283;
t1353 = t1435 * g(3) + t1447;
t1310 = t1440 * t1353 - t1435 * t1354;
t1511 = t1432 * t1283 + t1437 * t1449;
t1151 = (qJD(6) - t1383) * t1324 + t1511;
t1320 = t1322 ^ 2;
t1321 = t1324 ^ 2;
t1592 = t1357 ^ 2;
t1356 = t1358 ^ 2;
t1382 = t1383 ^ 2;
t1384 = t1386 ^ 2;
t1392 = t1394 ^ 2;
t1393 = t1396 ^ 2;
t1099 = pkin(5) * t1594 - pkin(10) * t1258 - t1131;
t1334 = pkin(5) * t1386 - pkin(10) * t1358;
t1107 = -pkin(5) * t1592 - pkin(10) * t1449 - t1386 * t1334 + t1132;
t1043 = -t1437 * t1099 + t1107 * t1432;
t1044 = t1099 * t1432 + t1107 * t1437;
t995 = -t1043 * t1437 + t1044 * t1432;
t1589 = pkin(5) * t995;
t1588 = pkin(2) * t1310;
t1539 = -0.2e1 * t1577;
t1451 = t1482 + t1539;
t1373 = t1443 * t1590 + t1451;
t1587 = pkin(2) * t1373;
t1431 = t1440 ^ 2;
t1542 = t1430 + t1431;
t1405 = t1542 * qJDD(1);
t1586 = pkin(2) * t1405;
t1585 = pkin(4) * t1434;
t1154 = t1293 + t1190;
t1090 = -t1151 * t1432 - t1154 * t1437;
t1584 = pkin(5) * t1090;
t1583 = qJDD(1) * pkin(1);
t1582 = t1433 * t995;
t1581 = t1438 * t995;
t1263 = t1434 * t1325 - t1439 * t1444;
t1204 = -t1540 * pkin(4) - t1591 * pkin(9) + t1396 * t1346 + t1263;
t1134 = pkin(5) * t1449 - pkin(10) * t1592 + t1358 * t1334 + t1204;
t1576 = t1134 * t1432;
t1575 = t1134 * t1437;
t1183 = -t1263 * t1439 + t1264 * t1434;
t1574 = t1183 * t1435;
t1573 = t1183 * t1440;
t1215 = t1266 + t1329;
t1572 = t1215 * t1432;
t1571 = t1215 * t1437;
t1268 = t1328 + t1330;
t1570 = t1268 * t1433;
t1569 = t1268 * t1438;
t1326 = t1539 - t1593;
t1568 = t1326 * t1434;
t1567 = t1326 * t1439;
t1344 = t1559 + t1540;
t1566 = t1344 * t1434;
t1565 = t1344 * t1439;
t1564 = t1383 * t1324;
t1563 = t1383 * t1432;
t1562 = t1383 * t1437;
t1561 = t1386 * t1433;
t1560 = t1386 * t1438;
t1402 = 0.2e1 * t1530 + t1541;
t1360 = t1402 * t1435;
t1558 = t1405 * t1436;
t1557 = t1405 * t1441;
t1419 = t1435 * t1545;
t1410 = qJDD(3) + t1419;
t1556 = t1410 * t1435;
t1555 = t1410 * t1440;
t1411 = qJDD(3) - t1419;
t1554 = t1411 * t1435;
t1553 = t1411 * t1440;
t1551 = t1428 * t1434;
t1550 = t1428 * t1439;
t1548 = t1431 * t1443;
t1200 = t1433 * t1204;
t1546 = t1435 * t1373;
t1201 = t1438 * t1204;
t1359 = t1440 * t1373;
t1543 = -pkin(4) * t1204 + pkin(9) * t1071;
t1538 = -pkin(4) * t1439 - pkin(3);
t1537 = t1434 * t1266;
t1536 = t1439 * t1266;
t1535 = t1434 * t1328;
t1534 = t1439 * t1328;
t1533 = t1436 * t1559;
t1532 = t1441 * t1559;
t1319 = -t1356 - t1384;
t1213 = -t1319 * t1433 - t1569;
t1259 = (qJD(5) + t1386) * t1357 + t1471;
t1529 = pkin(4) * t1259 + pkin(9) * t1213 + t1200;
t1300 = -t1384 - t1592;
t1209 = t1300 * t1438 - t1599;
t1340 = t1386 * t1358;
t1255 = -t1340 - t1449;
t1528 = pkin(4) * t1255 + pkin(9) * t1209 - t1201;
t1051 = t1071 * t1434 - t1204 * t1439;
t1527 = pkin(3) * t1051 + t1543;
t1370 = -t1393 - t1591;
t1308 = t1370 * t1439 - t1566;
t1526 = pkin(3) * t1308 - t1264;
t1184 = t1263 * t1434 + t1439 * t1264;
t1113 = t1184 * t1435 + t1573;
t1182 = pkin(3) * t1183;
t1525 = -pkin(2) * t1113 - t1182;
t1304 = (-qJD(4) + t1428) * t1396 + t1507;
t1307 = t1552 + t1332;
t1235 = t1304 * t1434 - t1307 * t1439;
t1237 = t1304 * t1439 + t1307 * t1434;
t1172 = t1235 * t1440 + t1237 * t1435;
t1233 = pkin(3) * t1235;
t1524 = -pkin(2) * t1172 - t1233;
t996 = t1043 * t1432 + t1437 * t1044;
t975 = t1433 * t996 + t1581;
t992 = -pkin(5) * t1134 + pkin(10) * t996;
t957 = -pkin(9) * t975 - pkin(10) * t1581 - t1433 * t992;
t960 = -pkin(4) * t975 - t1589;
t976 = t1438 * t996 - t1582;
t971 = t1134 * t1434 + t1439 * t976;
t942 = -pkin(3) * t975 + pkin(8) * t971 + t1434 * t957 + t1439 * t960;
t970 = -t1134 * t1439 + t1434 * t976;
t944 = -pkin(8) * t970 - t1434 * t960 + t1439 * t957;
t1523 = -t1435 * t942 + t1440 * t944;
t1092 = -t1151 * t1437 + t1154 * t1432;
t1035 = t1090 * t1438 + t1092 * t1433;
t1003 = -pkin(4) * t1035 - t1584;
t1037 = -t1090 * t1433 + t1092 * t1438;
t1210 = -t1320 - t1321;
t1027 = t1037 * t1439 + t1210 * t1434;
t983 = -pkin(5) * t1210 + pkin(10) * t1092 + t996;
t985 = -pkin(10) * t1090 - t995;
t958 = -pkin(9) * t1035 - t1433 * t983 + t1438 * t985;
t950 = -pkin(3) * t1035 + pkin(8) * t1027 + t1003 * t1439 + t1434 * t958;
t1026 = t1037 * t1434 - t1210 * t1439;
t952 = -pkin(8) * t1026 - t1003 * t1434 + t1439 * t958;
t1522 = -t1435 * t950 + t1440 * t952;
t1241 = -t1382 - t1320;
t1159 = t1241 * t1432 + t1598;
t1160 = t1241 * t1437 - t1600;
t1097 = -t1159 * t1433 + t1160 * t1438;
t1150 = (qJD(6) + t1383) * t1324 + t1511;
t1055 = t1097 * t1439 + t1150 * t1434;
t1096 = t1159 * t1438 + t1160 * t1433;
t1047 = -pkin(5) * t1150 + pkin(10) * t1160 - t1575;
t1078 = -pkin(10) * t1159 + t1576;
t997 = -pkin(9) * t1096 - t1047 * t1433 + t1078 * t1438;
t1479 = pkin(5) * t1159 - t1043;
t999 = -pkin(4) * t1096 - t1479;
t962 = -pkin(3) * t1096 + pkin(8) * t1055 + t1434 * t997 + t1439 * t999;
t1054 = t1097 * t1434 - t1150 * t1439;
t966 = -pkin(8) * t1054 - t1434 * t999 + t1439 * t997;
t1521 = -t1435 * t962 + t1440 * t966;
t1271 = -t1321 - t1382;
t1175 = t1271 * t1437 - t1572;
t1176 = -t1271 * t1432 - t1571;
t1110 = t1175 * t1438 + t1176 * t1433;
t1457 = pkin(5) * t1175 - t1044;
t1002 = -pkin(4) * t1110 - t1457;
t1111 = -t1175 * t1433 + t1176 * t1438;
t1058 = t1111 * t1439 + t1434 * t1595;
t1049 = -pkin(5) * t1595 + pkin(10) * t1176 + t1576;
t1088 = -pkin(10) * t1175 + t1575;
t998 = -pkin(9) * t1110 - t1049 * t1433 + t1088 * t1438;
t964 = -pkin(3) * t1110 + pkin(8) * t1058 + t1002 * t1439 + t1434 * t998;
t1057 = t1111 * t1434 - t1439 * t1595;
t973 = -pkin(8) * t1057 - t1002 * t1434 + t1439 * t998;
t1520 = -t1435 * t964 + t1440 * t973;
t1052 = t1071 * t1439 + t1204 * t1434;
t1070 = -t1131 * t1438 + t1132 * t1433;
t981 = pkin(8) * t1052 + (-pkin(9) * t1434 + t1538) * t1070;
t994 = -pkin(8) * t1051 + (-pkin(9) * t1439 + t1585) * t1070;
t1519 = -t1435 * t981 + t1440 * t994;
t1256 = (-qJD(5) + t1386) * t1358 + t1470;
t1179 = t1256 * t1433 - t1258 * t1438;
t1045 = -pkin(9) * t1179 - t1070;
t1181 = t1256 * t1438 + t1258 * t1433;
t1287 = t1356 + t1592;
t1139 = t1181 * t1439 - t1287 * t1434;
t1006 = pkin(8) * t1139 + t1434 * t1045 + t1179 * t1538;
t1138 = t1181 * t1434 + t1287 * t1439;
t1018 = -pkin(8) * t1138 + t1045 * t1439 + t1179 * t1585;
t1517 = -t1435 * t1006 + t1440 * t1018;
t1208 = t1300 * t1433 + t1597;
t1106 = -pkin(4) * t1208 + t1131;
t1135 = -pkin(9) * t1208 + t1200;
t1158 = t1209 * t1439 - t1255 * t1434;
t1028 = -pkin(3) * t1208 + pkin(8) * t1158 + t1106 * t1439 + t1135 * t1434;
t1157 = t1209 * t1434 + t1255 * t1439;
t1039 = -pkin(8) * t1157 - t1106 * t1434 + t1135 * t1439;
t1516 = -t1435 * t1028 + t1440 * t1039;
t1212 = t1319 * t1438 - t1570;
t1108 = -pkin(4) * t1212 + t1132;
t1136 = -pkin(9) * t1212 + t1201;
t1164 = t1213 * t1439 - t1259 * t1434;
t1031 = -pkin(3) * t1212 + pkin(8) * t1164 + t1108 * t1439 + t1136 * t1434;
t1163 = t1213 * t1434 + t1259 * t1439;
t1041 = -pkin(8) * t1163 - t1108 * t1434 + t1136 * t1439;
t1515 = -t1435 * t1031 + t1440 * t1041;
t1333 = -t1392 - t1393;
t1120 = -pkin(3) * t1333 + pkin(8) * t1237 + t1184;
t1122 = -pkin(8) * t1235 - t1183;
t1514 = -t1435 * t1120 + t1440 * t1122;
t1342 = -t1591 - t1392;
t1292 = t1342 * t1439 - t1603;
t1191 = -pkin(3) * t1302 + pkin(8) * t1292 + t1567;
t1291 = t1342 * t1434 + t1602;
t1242 = -pkin(8) * t1291 - t1568;
t1513 = -t1435 * t1191 + t1440 * t1242;
t1309 = -t1370 * t1434 - t1565;
t1198 = -pkin(3) * t1306 + pkin(8) * t1309 - t1568;
t1262 = -pkin(8) * t1308 - t1567;
t1512 = -t1435 * t1198 + t1440 * t1262;
t1381 = t1443 * pkin(1) + t1451;
t1385 = -t1452 + t1583;
t1508 = -t1441 * t1381 - t1385 * t1436;
t1506 = -t1412 * t1436 - t1441 * t1413;
t1505 = -pkin(4) * t1210 + pkin(9) * t1037 + t1433 * t985 + t1438 * t983;
t1504 = t1436 * t1419;
t1503 = t1441 * t1419;
t1502 = -pkin(4) * t1150 + pkin(9) * t1097 + t1438 * t1047 + t1433 * t1078;
t1501 = -pkin(4) * t1595 + pkin(9) * t1111 + t1438 * t1049 + t1433 * t1088;
t1500 = pkin(4) * t1287 + pkin(9) * t1181 + t1071;
t1499 = pkin(3) * t1163 + t1529;
t1498 = pkin(3) * t1157 + t1528;
t1406 = qJDD(1) * t1441 - t1436 * t1443;
t1497 = pkin(6) * t1406 + g(3) * t1436;
t1407 = qJDD(1) * t1436 + t1441 * t1443;
t1496 = -pkin(6) * t1407 + g(3) * t1441;
t1495 = pkin(3) * t1291 - t1263;
t1494 = pkin(2) * t1402 - t1359;
t1404 = t1425 - 0.2e1 * t1531;
t1493 = pkin(2) * t1404 + t1546;
t1492 = pkin(3) * t1026 + t1505;
t1491 = pkin(3) * t1054 + t1502;
t1490 = pkin(3) * t1057 + t1501;
t1489 = pkin(3) * t1138 + t1500;
t1311 = -t1353 * t1435 - t1354 * t1440;
t1488 = t1381 * t1436 - t1385 * t1441;
t1487 = t1412 * t1441 - t1413 * t1436;
t1004 = t1051 * t1440 + t1052 * t1435;
t1485 = -pkin(2) * t1004 - t1527;
t1239 = t1308 * t1440 + t1309 * t1435;
t1484 = -pkin(2) * t1239 - t1526;
t1417 = -t1442 - t1548;
t1364 = t1417 * t1440 - t1556;
t1483 = -pkin(2) * t1364 - t1354;
t1161 = pkin(3) * t1326 + pkin(8) * t1184;
t1480 = -pkin(8) * t1573 - t1435 * t1161;
t1478 = -pkin(4) * t1134 + pkin(9) * t976 - pkin(10) * t1582 + t1438 * t992;
t1093 = t1157 * t1440 + t1158 * t1435;
t1475 = -pkin(2) * t1093 - t1498;
t1100 = t1163 * t1440 + t1164 * t1435;
t1474 = -pkin(2) * t1100 - t1499;
t1217 = t1291 * t1440 + t1292 * t1435;
t1473 = -pkin(2) * t1217 - t1495;
t1472 = pkin(3) * t970 + t1478;
t1469 = pkin(2) * t975 - t1435 * t944 - t1440 * t942;
t986 = t1026 * t1440 + t1027 * t1435;
t1468 = -pkin(2) * t986 - t1492;
t1467 = pkin(2) * t1035 - t1435 * t952 - t1440 * t950;
t1466 = pkin(2) * t1070 - t1435 * t994 - t1440 * t981;
t1465 = pkin(2) * t1096 - t1435 * t966 - t1440 * t962;
t1464 = pkin(2) * t1110 - t1435 * t973 - t1440 * t964;
t1463 = pkin(2) * t1179 - t1440 * t1006 - t1435 * t1018;
t1462 = pkin(2) * t1208 - t1440 * t1028 - t1435 * t1039;
t1461 = pkin(2) * t1212 - t1440 * t1031 - t1435 * t1041;
t1460 = pkin(2) * t1333 - t1440 * t1120 - t1435 * t1122;
t1459 = pkin(2) * t1302 - t1440 * t1191 - t1435 * t1242;
t1458 = pkin(2) * t1306 - t1440 * t1198 - t1435 * t1262;
t1007 = t1054 * t1440 + t1055 * t1435;
t1456 = -pkin(2) * t1007 - t1491;
t1009 = t1057 * t1440 + t1058 * t1435;
t1455 = -pkin(2) * t1009 - t1490;
t1075 = t1138 * t1440 + t1139 * t1435;
t1454 = -pkin(2) * t1075 - t1489;
t1453 = -pkin(2) * t1326 + pkin(8) * t1574 - t1440 * t1161;
t955 = t1435 * t971 + t1440 * t970;
t1450 = -pkin(2) * t955 - t1472;
t1362 = t1415 * t1435 + t1553;
t1445 = -pkin(2) * t1362 - t1353;
t1416 = t1442 - t1548;
t1414 = -t1442 + t1549;
t1409 = (-t1430 + t1431) * t1443;
t1408 = t1542 * t1443;
t1400 = t1542 * t1580;
t1399 = t1481 - 0.2e1 * t1583;
t1391 = -t1413 + t1427 + 0.2e1 * t1429;
t1377 = -t1393 + t1591;
t1376 = t1392 - t1591;
t1375 = t1403 * t1435 + t1431 * t1580;
t1374 = t1430 * t1580 + t1440 * t1476;
t1369 = -t1417 * t1435 - t1555;
t1368 = -t1416 * t1435 + t1553;
t1367 = (t1403 - t1531) * t1440;
t1366 = t1415 * t1440 - t1554;
t1365 = t1414 * t1440 - t1556;
t1363 = t1416 * t1440 + t1554;
t1361 = t1414 * t1435 + t1555;
t1351 = -t1402 * t1440 - t1404 * t1435;
t1350 = t1404 * t1440 - t1360;
t1347 = t1393 - t1392;
t1341 = pkin(1) * t1385 - qJ(2) * t1381;
t1338 = -t1356 + t1384;
t1337 = -t1384 + t1592;
t1336 = (-t1394 * t1439 + t1396 * t1434) * t1428;
t1335 = (-t1394 * t1434 - t1396 * t1439) * t1428;
t1327 = t1356 - t1592;
t1315 = t1376 * t1439 - t1566;
t1314 = -t1377 * t1434 + t1602;
t1313 = t1376 * t1434 + t1565;
t1312 = t1377 * t1439 + t1603;
t1303 = -t1380 + t1477;
t1299 = t1332 * t1439 - t1396 * t1551;
t1298 = t1332 * t1434 + t1396 * t1550;
t1297 = t1394 * t1550 + t1434 * t1477;
t1296 = t1394 * t1551 - t1439 * t1477;
t1295 = pkin(2) * t1408 + t1311;
t1290 = -t1321 + t1382;
t1289 = t1320 - t1382;
t1286 = -qJ(2) * t1369 - t1483;
t1285 = -qJ(2) * t1366 - t1445;
t1279 = -t1366 * t1590 + t1494;
t1278 = -t1369 * t1590 + t1493;
t1277 = qJ(2) * t1404 - t1364 * t1590 - t1359;
t1276 = qJ(2) * t1402 - t1362 * t1590 - t1546;
t1275 = (-t1357 * t1438 + t1358 * t1433) * t1386;
t1274 = (-t1357 * t1433 - t1358 * t1438) * t1386;
t1273 = -t1335 * t1435 + t1336 * t1440;
t1272 = t1335 * t1440 + t1336 * t1435;
t1270 = -qJ(2) * t1408 + t1405 * t1590 - t1310;
t1265 = t1321 - t1320;
t1257 = -t1339 + t1283;
t1254 = -t1340 + t1449;
t1253 = -qJ(2) * t1311 + t1588;
t1250 = -t1313 * t1435 + t1315 * t1440;
t1249 = -t1312 * t1435 + t1314 * t1440;
t1248 = t1313 * t1440 + t1315 * t1435;
t1247 = t1312 * t1440 + t1314 * t1435;
t1246 = t1283 * t1438 - t1358 * t1561;
t1245 = t1283 * t1433 + t1358 * t1560;
t1244 = t1357 * t1560 + t1433 * t1449;
t1243 = -t1357 * t1561 + t1438 * t1449;
t1240 = -t1308 * t1435 + t1309 * t1440;
t1236 = -t1302 * t1439 - t1306 * t1434;
t1234 = -t1302 * t1434 + t1306 * t1439;
t1232 = t1275 * t1439 + t1330 * t1434;
t1231 = t1275 * t1434 - t1330 * t1439;
t1230 = t1337 * t1438 - t1570;
t1229 = -t1338 * t1433 + t1597;
t1228 = t1337 * t1433 + t1569;
t1227 = t1338 * t1438 + t1599;
t1226 = -t1311 * t1590 - t1587;
t1225 = -t1298 * t1435 + t1299 * t1440;
t1224 = -t1296 * t1435 + t1297 * t1440;
t1223 = t1298 * t1440 + t1299 * t1435;
t1222 = t1296 * t1440 + t1297 * t1435;
t1221 = -qJ(2) * t1373 - t1310 * t1590;
t1220 = (-t1322 * t1437 + t1324 * t1432) * t1383;
t1219 = (-t1322 * t1432 - t1324 * t1437) * t1383;
t1218 = -t1291 * t1435 + t1292 * t1440;
t1197 = t1246 * t1439 + t1535;
t1196 = t1244 * t1439 - t1535;
t1195 = t1246 * t1434 - t1534;
t1194 = t1244 * t1434 + t1534;
t1189 = -qJD(6) * t1324 - t1511;
t1188 = t1289 * t1437 - t1572;
t1187 = -t1290 * t1432 + t1598;
t1186 = t1289 * t1432 + t1571;
t1185 = t1290 * t1437 + t1600;
t1180 = t1255 * t1438 - t1257 * t1433;
t1178 = t1255 * t1433 + t1257 * t1438;
t1174 = -t1235 * t1435 + t1237 * t1440;
t1173 = -t1234 * t1435 + t1236 * t1440;
t1171 = t1234 * t1440 + t1236 * t1435;
t1170 = t1230 * t1439 - t1254 * t1434;
t1169 = t1229 * t1439 + t1258 * t1434;
t1168 = t1230 * t1434 + t1254 * t1439;
t1167 = t1229 * t1434 - t1258 * t1439;
t1166 = -t1231 * t1435 + t1232 * t1440;
t1165 = t1231 * t1440 + t1232 * t1435;
t1147 = t1190 * t1437 - t1324 * t1563;
t1146 = t1190 * t1432 + t1324 * t1562;
t1145 = -t1189 * t1432 + t1322 * t1562;
t1144 = t1189 * t1437 + t1322 * t1563;
t1143 = t1180 * t1439 + t1327 * t1434;
t1142 = t1180 * t1434 - t1327 * t1439;
t1141 = -t1219 * t1433 + t1220 * t1438;
t1140 = t1219 * t1438 + t1220 * t1433;
t1130 = t1141 * t1439 + t1329 * t1434;
t1129 = t1141 * t1434 - t1329 * t1439;
t1126 = -t1195 * t1435 + t1197 * t1440;
t1125 = -t1194 * t1435 + t1196 * t1440;
t1124 = t1195 * t1440 + t1197 * t1435;
t1123 = t1194 * t1440 + t1196 * t1435;
t1119 = -qJ(2) * t1240 - t1484;
t1118 = -t1186 * t1433 + t1188 * t1438;
t1117 = -t1185 * t1433 + t1187 * t1438;
t1116 = t1186 * t1438 + t1188 * t1433;
t1115 = t1185 * t1438 + t1187 * t1433;
t1114 = t1184 * t1440 - t1574;
t1112 = -qJ(2) * t1218 - t1473;
t1105 = -t1168 * t1435 + t1170 * t1440;
t1104 = -t1167 * t1435 + t1169 * t1440;
t1103 = t1168 * t1440 + t1170 * t1435;
t1102 = t1167 * t1440 + t1169 * t1435;
t1101 = -t1163 * t1435 + t1164 * t1440;
t1094 = -t1157 * t1435 + t1158 * t1440;
t1091 = -t1150 * t1437 - t1432 * t1595;
t1089 = -t1150 * t1432 + t1437 * t1595;
t1086 = -t1146 * t1433 + t1147 * t1438;
t1085 = -t1144 * t1433 + t1145 * t1438;
t1084 = t1146 * t1438 + t1147 * t1433;
t1083 = t1144 * t1438 + t1145 * t1433;
t1082 = -t1142 * t1435 + t1143 * t1440;
t1081 = t1142 * t1440 + t1143 * t1435;
t1080 = -t1240 * t1590 + t1458;
t1079 = qJ(2) * t1306 - t1239 * t1590 + t1512;
t1076 = -t1138 * t1435 + t1139 * t1440;
t1074 = -qJ(2) * t1174 - t1524;
t1073 = -t1218 * t1590 + t1459;
t1072 = qJ(2) * t1302 - t1217 * t1590 + t1513;
t1068 = -t1129 * t1435 + t1130 * t1440;
t1067 = t1129 * t1440 + t1130 * t1435;
t1066 = t1086 * t1439 + t1537;
t1065 = t1085 * t1439 - t1537;
t1064 = t1086 * t1434 - t1536;
t1063 = t1085 * t1434 + t1536;
t1062 = t1118 * t1439 - t1151 * t1434;
t1061 = t1117 * t1439 + t1154 * t1434;
t1060 = t1118 * t1434 + t1151 * t1439;
t1059 = t1117 * t1434 - t1154 * t1439;
t1036 = -t1089 * t1433 + t1091 * t1438;
t1034 = t1089 * t1438 + t1091 * t1433;
t1032 = -qJ(2) * t1114 - t1525;
t1030 = t1036 * t1439 + t1265 * t1434;
t1029 = t1036 * t1434 - t1265 * t1439;
t1025 = -t1174 * t1590 + t1460;
t1024 = qJ(2) * t1333 - t1172 * t1590 + t1514;
t1022 = -t1064 * t1435 + t1066 * t1440;
t1021 = -t1063 * t1435 + t1065 * t1440;
t1020 = t1064 * t1440 + t1066 * t1435;
t1019 = t1063 * t1440 + t1065 * t1435;
t1017 = -t1114 * t1590 + t1453;
t1016 = -qJ(2) * t1326 - t1113 * t1590 + t1480;
t1014 = -t1060 * t1435 + t1062 * t1440;
t1013 = -t1059 * t1435 + t1061 * t1440;
t1012 = t1060 * t1440 + t1062 * t1435;
t1011 = t1059 * t1440 + t1061 * t1435;
t1010 = -t1057 * t1435 + t1058 * t1440;
t1008 = -t1054 * t1435 + t1055 * t1440;
t1005 = -t1051 * t1435 + t1052 * t1440;
t1001 = -qJ(2) * t1101 - t1474;
t1000 = -qJ(2) * t1094 - t1475;
t990 = -t1029 * t1435 + t1030 * t1440;
t989 = t1029 * t1440 + t1030 * t1435;
t988 = -qJ(2) * t1076 - t1454;
t987 = -t1026 * t1435 + t1027 * t1440;
t980 = -t1101 * t1590 + t1461;
t979 = qJ(2) * t1212 - t1100 * t1590 + t1515;
t978 = -t1094 * t1590 + t1462;
t977 = qJ(2) * t1208 - t1093 * t1590 + t1516;
t968 = -t1076 * t1590 + t1463;
t967 = qJ(2) * t1179 - t1075 * t1590 + t1517;
t963 = -qJ(2) * t1005 - t1485;
t961 = -qJ(2) * t1010 - t1455;
t959 = -qJ(2) * t1008 - t1456;
t956 = -t1435 * t970 + t1440 * t971;
t954 = -t1005 * t1590 + t1466;
t953 = qJ(2) * t1070 - t1004 * t1590 + t1519;
t949 = -t1010 * t1590 + t1464;
t948 = qJ(2) * t1110 - t1009 * t1590 + t1520;
t947 = -qJ(2) * t987 - t1468;
t946 = -t1008 * t1590 + t1465;
t945 = qJ(2) * t1096 - t1007 * t1590 + t1521;
t941 = -t1590 * t987 + t1467;
t940 = qJ(2) * t1035 - t1590 * t986 + t1522;
t939 = -qJ(2) * t956 - t1450;
t938 = -t1590 * t956 + t1469;
t937 = qJ(2) * t975 - t1590 * t955 + t1523;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1406, 0, -t1407, 0, -t1497, -t1496, -t1487, -pkin(6) * t1487, 0, -t1406, t1407, 0, 0, 0, t1488, t1497, t1496, pkin(6) * t1488 + (-pkin(1) * t1436 + qJ(2) * t1441) * g(3), t1375 * t1436 + t1503, t1350 * t1436 + t1409 * t1441, t1363 * t1436 + t1425 * t1441, t1374 * t1436 - t1503, t1361 * t1436 - t1441 * t1541, qJDD(3) * t1441 - t1400 * t1436, t1441 * t1285 - t1436 * t1279 - pkin(6) * (-t1362 * t1441 + t1402 * t1436), t1441 * t1286 - t1436 * t1278 - pkin(6) * (-t1364 * t1441 + t1404 * t1436), -pkin(2) * t1557 + t1436 * t1295 - pkin(6) * (-t1408 * t1436 + t1557), t1441 * t1253 - t1436 * t1226 - pkin(6) * (-t1310 * t1441 - t1373 * t1436), t1223 * t1436 + t1532, t1171 * t1436 + t1347 * t1441, t1247 * t1436 + t1307 * t1441, t1222 * t1436 - t1532, t1248 * t1436 - t1303 * t1441, t1436 * t1272 + t1441 * t1540, t1441 * t1112 - t1436 * t1073 - pkin(6) * (-t1217 * t1441 + t1302 * t1436), t1441 * t1119 - t1436 * t1080 - pkin(6) * (-t1239 * t1441 + t1306 * t1436), t1441 * t1074 - t1436 * t1025 - pkin(6) * (-t1172 * t1441 + t1333 * t1436), t1441 * t1032 - t1436 * t1017 - pkin(6) * (-t1113 * t1441 - t1326 * t1436), t1124 * t1436 + t1245 * t1441, t1081 * t1436 + t1178 * t1441, t1102 * t1436 + t1227 * t1441, t1123 * t1436 - t1243 * t1441, t1103 * t1436 + t1228 * t1441, t1165 * t1436 + t1274 * t1441, t1441 * t1000 - t1436 * t978 - pkin(6) * (-t1093 * t1441 + t1208 * t1436), t1441 * t1001 - t1436 * t980 - pkin(6) * (-t1100 * t1441 + t1212 * t1436), t1441 * t988 - t1436 * t968 - pkin(6) * (-t1075 * t1441 + t1179 * t1436), t1441 * t963 - t1436 * t954 - pkin(6) * (-t1004 * t1441 + t1070 * t1436), t1020 * t1436 + t1084 * t1441, t1034 * t1441 + t1436 * t989, t1011 * t1436 + t1115 * t1441, t1019 * t1436 + t1083 * t1441, t1012 * t1436 + t1116 * t1441, t1067 * t1436 + t1140 * t1441, t1441 * t959 - t1436 * t946 - pkin(6) * (-t1007 * t1441 + t1096 * t1436), t1441 * t961 - t1436 * t949 - pkin(6) * (-t1009 * t1441 + t1110 * t1436), t1441 * t947 - t1436 * t941 - pkin(6) * (t1035 * t1436 - t1441 * t986), t1441 * t939 - t1436 * t938 - pkin(6) * (t1436 * t975 - t1441 * t955); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1407, 0, t1406, 0, t1496, -t1497, t1506, pkin(6) * t1506, 0, -t1407, -t1406, 0, 0, 0, t1508, -t1496, t1497, pkin(6) * t1508 + (pkin(1) * t1441 + qJ(2) * t1436) * g(3), -t1375 * t1441 + t1504, -t1350 * t1441 + t1409 * t1436, -t1363 * t1441 + t1425 * t1436, -t1374 * t1441 - t1504, -t1361 * t1441 - t1436 * t1541, qJDD(3) * t1436 + t1400 * t1441, t1436 * t1285 + t1441 * t1279 + pkin(6) * (t1362 * t1436 + t1402 * t1441), t1436 * t1286 + t1441 * t1278 + pkin(6) * (t1364 * t1436 + t1404 * t1441), -pkin(2) * t1558 - t1441 * t1295 + pkin(6) * (-t1408 * t1441 - t1558), t1436 * t1253 + t1441 * t1226 + pkin(6) * (t1310 * t1436 - t1373 * t1441), -t1223 * t1441 + t1533, -t1171 * t1441 + t1347 * t1436, -t1247 * t1441 + t1307 * t1436, -t1222 * t1441 - t1533, -t1248 * t1441 - t1303 * t1436, -t1441 * t1272 + t1436 * t1540, t1436 * t1112 + t1441 * t1073 + pkin(6) * (t1217 * t1436 + t1302 * t1441), t1436 * t1119 + t1441 * t1080 + pkin(6) * (t1239 * t1436 + t1306 * t1441), t1436 * t1074 + t1441 * t1025 + pkin(6) * (t1172 * t1436 + t1333 * t1441), t1436 * t1032 + t1441 * t1017 + pkin(6) * (t1113 * t1436 - t1326 * t1441), -t1124 * t1441 + t1245 * t1436, -t1081 * t1441 + t1178 * t1436, -t1102 * t1441 + t1227 * t1436, -t1123 * t1441 - t1243 * t1436, -t1103 * t1441 + t1228 * t1436, -t1165 * t1441 + t1274 * t1436, t1436 * t1000 + t1441 * t978 + pkin(6) * (t1093 * t1436 + t1208 * t1441), t1436 * t1001 + t1441 * t980 + pkin(6) * (t1100 * t1436 + t1212 * t1441), t1436 * t988 + t1441 * t968 + pkin(6) * (t1075 * t1436 + t1179 * t1441), t1436 * t963 + t1441 * t954 + pkin(6) * (t1004 * t1436 + t1070 * t1441), -t1020 * t1441 + t1084 * t1436, t1034 * t1436 - t1441 * t989, -t1011 * t1441 + t1115 * t1436, -t1019 * t1441 + t1083 * t1436, -t1012 * t1441 + t1116 * t1436, -t1067 * t1441 + t1140 * t1436, t1436 * t959 + t1441 * t946 + pkin(6) * (t1007 * t1436 + t1096 * t1441), t1436 * t961 + t1441 * t949 + pkin(6) * (t1009 * t1436 + t1110 * t1441), t1436 * t947 + t1441 * t941 + pkin(6) * (t1035 * t1441 + t1436 * t986), t1436 * t939 + t1441 * t938 + pkin(6) * (t1436 * t955 + t1441 * t975); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1412, t1413, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1399, t1391, t1341, t1367, t1351, t1368, t1360, t1365, 0, t1276, t1277, t1270, t1221, t1225, t1173, t1249, t1224, t1250, t1273, t1072, t1079, t1024, t1016, t1126, t1082, t1104, t1125, t1105, t1166, t977, t979, t967, t953, t1022, t990, t1013, t1021, t1014, t1068, t945, t948, t940, t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1443, 0, 0, -g(3), -t1412, 0, 0, -qJDD(1), t1443, 0, 0, 0, -t1385, 0, g(3), qJ(2) * g(3), t1419, t1409, t1425, -t1419, -t1541, qJDD(3), t1285, t1286, -t1586, t1253, t1559, t1347, t1307, -t1559, -t1303, t1540, t1112, t1119, t1074, t1032, t1245, t1178, t1227, -t1243, t1228, t1274, t1000, t1001, t988, t963, t1084, t1034, t1115, t1083, t1116, t1140, t959, t961, t947, t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, 0, qJDD(1), 0, g(3), 0, -t1413, 0, 0, -t1443, -qJDD(1), 0, 0, 0, -t1381, -g(3), 0, pkin(1) * g(3), -t1375, -t1350, -t1363, -t1374, -t1361, t1400, t1279, t1278, -t1295, t1226, -t1223, -t1171, -t1247, -t1222, -t1248, -t1272, t1073, t1080, t1025, t1017, -t1124, -t1081, -t1102, -t1123, -t1103, -t1165, t978, t980, t968, t954, -t1020, -t989, -t1011, -t1019, -t1012, -t1067, t946, t949, t941, t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1412, t1413, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1399, t1391, t1341, t1367, t1351, t1368, t1360, t1365, 0, t1276, t1277, t1270, t1221, t1225, t1173, t1249, t1224, t1250, t1273, t1072, t1079, t1024, t1016, t1126, t1082, t1104, t1125, t1105, t1166, t977, t979, t967, t953, t1022, t990, t1013, t1021, t1014, t1068, t945, t948, t940, t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1385, -t1381, 0, t1367, t1351, t1368, t1360, t1365, 0, -pkin(7) * t1362 - t1546, -pkin(7) * t1364 - t1359, pkin(7) * t1405 - t1310, -pkin(7) * t1310, t1225, t1173, t1249, t1224, t1250, t1273, -pkin(7) * t1217 + t1513, -pkin(7) * t1239 + t1512, -pkin(7) * t1172 + t1514, -pkin(7) * t1113 + t1480, t1126, t1082, t1104, t1125, t1105, t1166, -pkin(7) * t1093 + t1516, -pkin(7) * t1100 + t1515, -pkin(7) * t1075 + t1517, -pkin(7) * t1004 + t1519, t1022, t990, t1013, t1021, t1014, t1068, -pkin(7) * t1007 + t1521, -pkin(7) * t1009 + t1520, -pkin(7) * t986 + t1522, -pkin(7) * t955 + t1523; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1443, 0, 0, 0, t1385, 0, -g(3), 0, -t1419, -t1409, -t1425, t1419, t1541, -qJDD(3), t1445, t1483, t1586, -t1588, -t1559, -t1347, -t1307, t1559, t1303, -t1540, t1473, t1484, t1524, t1525, -t1245, -t1178, -t1227, t1243, -t1228, -t1274, t1475, t1474, t1454, t1485, -t1084, -t1034, -t1115, -t1083, -t1116, -t1140, t1456, t1455, t1468, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, qJDD(1), 0, 0, 0, t1381, g(3), 0, 0, t1375, t1350, t1363, t1374, t1361, -t1400, pkin(7) * t1366 - t1494, pkin(7) * t1369 - t1493, t1295, pkin(7) * t1311 + t1587, t1223, t1171, t1247, t1222, t1248, t1272, pkin(7) * t1218 - t1459, pkin(7) * t1240 - t1458, pkin(7) * t1174 - t1460, pkin(7) * t1114 - t1453, t1124, t1081, t1102, t1123, t1103, t1165, pkin(7) * t1094 - t1462, pkin(7) * t1101 - t1461, pkin(7) * t1076 - t1463, pkin(7) * t1005 - t1466, t1020, t989, t1011, t1019, t1012, t1067, pkin(7) * t1008 - t1465, pkin(7) * t1010 - t1464, pkin(7) * t987 - t1467, pkin(7) * t956 - t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1403, -t1402, t1411, t1531, t1414, -t1531, 0, -t1373, -t1353, 0, t1299, t1236, t1314, t1297, t1315, t1336, t1242, t1262, t1122, -pkin(8) * t1183, t1197, t1143, t1169, t1196, t1170, t1232, t1039, t1041, t1018, t994, t1066, t1030, t1061, t1065, t1062, t1130, t966, t973, t952, t944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1530, t1404, t1416, t1476, t1410, -t1530, t1373, 0, -t1354, 0, t1298, t1234, t1312, t1296, t1313, t1335, t1191, t1198, t1120, t1161, t1195, t1142, t1167, t1194, t1168, t1231, t1028, t1031, t1006, t981, t1064, t1029, t1059, t1063, t1060, t1129, t962, t964, t950, t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, t1409, t1425, -t1419, -t1541, qJDD(3), t1353, t1354, 0, 0, t1559, t1347, t1307, -t1559, -t1303, t1540, t1495, t1526, t1233, t1182, t1245, t1178, t1227, -t1243, t1228, t1274, t1498, t1499, t1489, t1527, t1084, t1034, t1115, t1083, t1116, t1140, t1491, t1490, t1492, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332, -t1302, t1601, t1552, t1376, -t1552, 0, -t1326, t1263, 0, t1246, t1180, t1229, t1244, t1230, t1275, t1135, t1136, t1045, -pkin(9) * t1070, t1086, t1036, t1117, t1085, t1118, t1141, t997, t998, t958, t957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1380, t1306, t1377, -t1477, t1344, -t1380, t1326, 0, t1264, 0, -t1328, -t1327, -t1258, t1328, t1254, -t1330, t1106, t1108, -pkin(4) * t1179, -pkin(4) * t1070, -t1266, -t1265, -t1154, t1266, t1151, -t1329, t999, t1002, t1003, t960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1559, t1347, t1307, -t1559, -t1303, t1540, -t1263, -t1264, 0, 0, t1245, t1178, t1227, -t1243, t1228, t1274, t1528, t1529, t1500, t1543, t1084, t1034, t1115, t1083, t1116, t1140, t1502, t1501, t1505, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, t1255, t1594, t1339, t1337, -t1339, 0, t1204, t1131, 0, t1147, t1091, t1187, t1145, t1188, t1220, t1078, t1088, t985, -pkin(10) * t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1340, t1257, t1338, -t1449, t1268, -t1340, -t1204, 0, t1132, 0, t1146, t1089, t1185, t1144, t1186, t1219, t1047, t1049, t983, t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1328, t1327, t1258, -t1328, -t1254, t1330, -t1131, -t1132, 0, 0, t1266, t1265, t1154, -t1266, -t1151, t1329, t1479, t1457, t1584, t1589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1190, -t1150, t1596, t1293, t1289, -t1293, 0, t1134, t1043, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1564, t1595, t1290, t1189, t1215, -t1564, -t1134, 0, t1044, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1265, t1154, -t1266, -t1151, t1329, -t1043, -t1044, 0, 0;];
m_new_reg  = t1;
