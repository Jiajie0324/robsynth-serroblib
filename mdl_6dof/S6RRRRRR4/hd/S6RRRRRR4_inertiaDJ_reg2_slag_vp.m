% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR4_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:51:26
% EndTime: 2019-03-10 03:51:53
% DurationCPUTime: 11.24s
% Computational Cost: add. (20826->528), mult. (48427->911), div. (0->0), fcn. (45662->10), ass. (0->223)
t322 = qJD(3) + qJD(4);
t301 = sin(qJ(4));
t254 = qJD(4) * t301;
t321 = qJD(3) * t301 + t254;
t320 = pkin(3) * t301;
t152 = sin(qJ(3));
t154 = cos(qJ(3));
t304 = cos(qJ(4));
t203 = t304 * t152 + t301 * t154;
t141 = t301 * t152;
t220 = -t304 * t154 + t141;
t300 = sin(qJ(5));
t303 = cos(qJ(5));
t197 = t300 * t203 + t303 * t220;
t305 = -pkin(9) - pkin(8);
t310 = t305 * t301;
t311 = t304 * t305;
t316 = -t304 * pkin(10) + t311;
t176 = (-t301 * pkin(10) + t310) * t154 + t316 * t152;
t215 = t152 * t310;
t178 = t141 * pkin(10) + t316 * t154 - t215;
t52 = t303 * t176 + t300 * t178;
t92 = t303 * t203 - t300 * t220;
t249 = t304 * qJD(4);
t319 = t304 * qJD(3) + t249;
t153 = sin(qJ(2));
t155 = cos(qJ(2));
t283 = t155 * qJD(2);
t286 = qJD(3) * t154;
t318 = t152 * t283 + t153 * t286;
t317 = -t321 * t152 + t319 * t154;
t315 = t154 * t311 - t215;
t67 = t322 * t315;
t314 = t152 * t311 + t154 * t310;
t313 = t300 * t320;
t53 = t300 * t176 - t303 * t178;
t107 = t203 * t153;
t108 = t220 * t153;
t221 = t303 * t107 - t300 * t108;
t147 = t152 ^ 2;
t149 = t154 ^ 2;
t289 = t147 - t149;
t246 = qJD(3) * t289;
t148 = t153 ^ 2;
t245 = (-t155 ^ 2 + t148) * qJD(2);
t145 = t153 * qJD(2);
t258 = t154 * t145;
t285 = qJD(3) * t155;
t263 = t152 * t285;
t202 = t258 + t263;
t297 = t155 * pkin(2);
t223 = -t153 * pkin(8) - t297;
t213 = -pkin(1) + t223;
t210 = t154 * t213;
t222 = pkin(2) * t153 - pkin(8) * t155;
t212 = t222 * t152;
t70 = t202 * pkin(7) - qJD(2) * t212 - qJD(3) * t210;
t308 = t305 * t153 - pkin(1) - t297;
t66 = t322 * t314;
t302 = cos(qJ(6));
t299 = pkin(2) * t154;
t298 = pkin(7) * t152;
t146 = t153 * pkin(7);
t296 = t155 * pkin(5);
t269 = -pkin(3) - t298;
t181 = t154 * t308 + t269 * t155;
t179 = t304 * t181;
t293 = t154 * t155;
t140 = pkin(7) * t293;
t105 = t152 * t213 + t140;
t294 = t152 * t153;
t95 = -pkin(9) * t294 + t105;
t60 = -t301 * t95 + t179;
t171 = -t155 * pkin(4) + t108 * pkin(10) + t60;
t46 = t300 * t171;
t90 = t301 * t181;
t61 = t304 * t95 + t90;
t54 = -pkin(10) * t107 + t61;
t31 = t303 * t54 + t46;
t229 = t303 * t301;
t278 = t304 * pkin(3);
t231 = t278 + pkin(4);
t115 = pkin(3) * t229 + t300 * t231;
t151 = sin(qJ(6));
t295 = t151 * t115;
t276 = t303 * pkin(4);
t230 = t276 + pkin(5);
t209 = t302 * t230;
t253 = qJD(5) * t303;
t241 = pkin(4) * t253;
t291 = -qJD(6) * t209 - t302 * t241;
t120 = pkin(3) * t294 + t146;
t287 = qJD(3) * t152;
t284 = qJD(6) * t151;
t282 = -0.2e1 * pkin(1) * qJD(2);
t281 = -0.2e1 * pkin(2) * qJD(3);
t280 = t155 * t298;
t126 = t303 * t231;
t113 = t126 - t313;
t208 = pkin(5) + t113;
t193 = t302 * t208;
t243 = pkin(3) * t249;
t87 = -qJD(5) * t126 - t303 * t243 + (qJD(4) + qJD(5)) * t313;
t194 = -t300 * t304 - t229;
t188 = t194 * qJD(4);
t88 = pkin(3) * t188 - qJD(5) * t115;
t279 = -qJD(6) * t193 - t151 * t88 + t302 * t87;
t275 = t300 * pkin(4);
t274 = pkin(4) * t145;
t273 = pkin(5) * t145;
t144 = pkin(3) * t287;
t272 = pkin(5) * t284;
t143 = pkin(7) * t283;
t27 = -t221 * pkin(11) + t31;
t271 = t302 * t27;
t99 = t318 * pkin(3) + t143;
t142 = -t154 * pkin(3) - pkin(2);
t266 = t302 * t115;
t264 = t154 * t283;
t261 = t154 * t285;
t260 = t152 * t286;
t259 = t153 * t283;
t257 = qJD(2) * t304;
t256 = qJD(2) * t301;
t252 = qJD(5) * t300;
t251 = qJD(6) * t302;
t248 = t151 * t87 + t302 * t88;
t247 = -0.2e1 * t272;
t244 = 0.2e1 * t259;
t242 = pkin(3) * t254;
t240 = pkin(4) * t252;
t239 = pkin(5) * t251;
t238 = t319 * t152 + t321 * t154;
t233 = t155 * t258;
t232 = t148 * t260;
t228 = t302 * t300;
t226 = t155 * t257;
t225 = t155 * t256;
t93 = t107 * pkin(4) + t120;
t48 = t303 * t171;
t30 = -t300 * t54 + t48;
t224 = -0.2e1 * t240;
t219 = pkin(4) * t228;
t104 = t210 - t280;
t214 = -t104 * t154 - t105 * t152;
t65 = t152 * t226 + t317 * t153 + t225 * t154;
t55 = t65 * pkin(4) + t99;
t170 = (-t152 * t308 - t140) * qJD(3) + (t305 * t293 + (-t269 + t299) * t153) * qJD(2);
t175 = -pkin(9) * t318 - t70;
t162 = t304 * t170 - t301 * t175;
t161 = -qJD(4) * t90 - t95 * t249 + t162;
t196 = t203 * qJD(3);
t64 = t152 * t225 - t154 * t226 + (t203 * qJD(4) + t196) * t153;
t160 = t64 * pkin(10) + t161 + t274;
t28 = -qJD(4) * t179 - t301 * t170 - t304 * t175 + t95 * t254;
t195 = -t65 * pkin(10) - t28;
t159 = t303 * t160 - t300 * t195;
t158 = -qJD(5) * t46 - t54 * t253 + t159;
t35 = qJD(5) * t221 + t300 * t65 + t303 * t64;
t157 = t35 * pkin(11) + t158 + t273;
t211 = -t107 * t252 - t108 * t253 - t300 * t64 + t303 * t65;
t8 = -qJD(5) * t48 - t300 * t160 - t303 * t195 + t54 * t252;
t180 = -t211 * pkin(11) - t8;
t74 = -t300 * t107 - t303 * t108;
t26 = -t74 * pkin(11) - t296 + t30;
t1 = -t151 * t157 - t302 * t180 - t26 * t251 + t27 * t284;
t11 = t151 * t26 + t271;
t82 = t238 * pkin(4) + t144;
t207 = -0.2e1 * pkin(5) - t113;
t205 = t302 * t221;
t199 = -t303 * t151 - t228;
t198 = (t300 * qJD(6) + t252) * pkin(4);
t106 = t220 * pkin(4) + t142;
t191 = t92 * qJD(5) + t303 * t238 + t300 * t317;
t190 = t199 * qJD(5);
t50 = -t151 * t221 + t302 * t74;
t189 = t151 * t197;
t185 = t302 * t197;
t71 = -t105 * qJD(3) + (pkin(7) * t294 + t154 * t222) * qJD(2);
t182 = t214 * qJD(3) - t152 * t71 - t154 * t70;
t85 = t151 * t198 + t291;
t78 = t151 * t208 + t266;
t177 = -t151 * t180 + t302 * t157;
t173 = (t199 * qJD(6) + t190) * pkin(4);
t166 = -pkin(10) * t317 + t67;
t168 = -t238 * pkin(10) + t66;
t19 = -t52 * qJD(5) - t300 * t166 - t303 * t168;
t2 = -t11 * qJD(6) + t177;
t169 = t197 * qJD(5) + t300 * t238 - t303 * t317;
t167 = pkin(11) * t191 + t19;
t165 = -t92 * pkin(11) + t52;
t164 = t151 * t165;
t163 = t302 * t165;
t20 = -qJD(5) * t53 + t303 * t166 - t300 * t168;
t156 = pkin(11) * t169 + t20;
t132 = -0.2e1 * t259;
t114 = t151 * t230 + t219;
t112 = -t151 * t275 + t209;
t98 = -t152 * t264 + t153 * t246;
t86 = t173 - t272;
t77 = t193 - t295;
t68 = t197 * pkin(5) + t106;
t58 = t302 * t92 - t189;
t57 = t151 * t92 + t185;
t56 = t221 * pkin(5) + t93;
t49 = t151 * t74 + t205;
t40 = -t197 * pkin(11) + t53;
t39 = -qJD(6) * t78 + t248;
t38 = t115 * t284 + t279;
t36 = t191 * pkin(5) + t82;
t29 = -t61 * qJD(4) + t162;
t24 = t302 * t40 + t164;
t23 = -t151 * t40 + t163;
t22 = t211 * pkin(5) + t55;
t17 = -qJD(6) * t189 - t151 * t169 + t302 * t191 + t92 * t251;
t16 = qJD(6) * t185 + t151 * t191 + t302 * t169 + t92 * t284;
t13 = t50 * qJD(6) - t151 * t35 + t302 * t211;
t12 = qJD(6) * t205 + t151 * t211 + t74 * t284 + t302 * t35;
t10 = -t151 * t27 + t302 * t26;
t9 = -t31 * qJD(5) + t159;
t4 = -qJD(6) * t164 + t151 * t167 + t302 * t156 - t40 * t251;
t3 = -qJD(6) * t163 - t151 * t156 + t302 * t167 + t40 * t284;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, -0.2e1 * t245, 0, t132, 0, 0, t153 * t282, t155 * t282, 0, 0, 0.2e1 * t149 * t259 - 0.2e1 * t232, 0.2e1 * t148 * t246 - 0.4e1 * t152 * t233, 0.2e1 * t153 * t263 + 0.2e1 * t154 * t245, 0.2e1 * t147 * t259 + 0.2e1 * t232, -0.2e1 * t152 * t245 + 0.2e1 * t153 * t261, t132, 0.2e1 * t104 * t145 - 0.2e1 * t155 * t71 + 0.2e1 * (t148 * t286 + t152 * t244) * pkin(7), -0.2e1 * t105 * t145 - 0.2e1 * t155 * t70 + 0.2e1 * (-t148 * t287 + 0.2e1 * t233) * pkin(7), 0.2e1 * t214 * t283 + 0.2e1 * (t152 * t70 - t154 * t71 + (t104 * t152 - t105 * t154) * qJD(3)) * t153, 0.2e1 * pkin(7) ^ 2 * t259 + 0.2e1 * t104 * t71 - 0.2e1 * t105 * t70, 0.2e1 * t108 * t64, 0.2e1 * t107 * t64 + 0.2e1 * t108 * t65, -0.2e1 * t108 * t145 + 0.2e1 * t155 * t64, 0.2e1 * t107 * t65, -0.2e1 * t107 * t145 + 0.2e1 * t155 * t65, t132, 0.2e1 * t99 * t107 + 0.2e1 * t120 * t65 + 0.2e1 * t145 * t60 - 0.2e1 * t155 * t29, -0.2e1 * t99 * t108 - 0.2e1 * t120 * t64 - 0.2e1 * t145 * t61 - 0.2e1 * t155 * t28, 0.2e1 * t107 * t28 + 0.2e1 * t108 * t29 + 0.2e1 * t60 * t64 - 0.2e1 * t61 * t65, 0.2e1 * t120 * t99 - 0.2e1 * t28 * t61 + 0.2e1 * t29 * t60, -0.2e1 * t74 * t35, -0.2e1 * t211 * t74 + 0.2e1 * t221 * t35, 0.2e1 * t145 * t74 + 0.2e1 * t155 * t35, 0.2e1 * t221 * t211, -0.2e1 * t145 * t221 + 0.2e1 * t155 * t211, t132, 0.2e1 * t145 * t30 - 0.2e1 * t9 * t155 + 0.2e1 * t211 * t93 + 0.2e1 * t221 * t55, -0.2e1 * t145 * t31 - 0.2e1 * t155 * t8 - 0.2e1 * t93 * t35 + 0.2e1 * t55 * t74, -0.2e1 * t211 * t31 + 0.2e1 * t221 * t8 + 0.2e1 * t30 * t35 - 0.2e1 * t9 * t74, 0.2e1 * t30 * t9 - 0.2e1 * t31 * t8 + 0.2e1 * t55 * t93, -0.2e1 * t50 * t12, 0.2e1 * t12 * t49 - 0.2e1 * t13 * t50, 0.2e1 * t12 * t155 + 0.2e1 * t145 * t50, 0.2e1 * t49 * t13, 0.2e1 * t13 * t155 - 0.2e1 * t145 * t49, t132, 0.2e1 * t10 * t145 + 0.2e1 * t56 * t13 - 0.2e1 * t155 * t2 + 0.2e1 * t22 * t49, -0.2e1 * t1 * t155 - 0.2e1 * t11 * t145 - 0.2e1 * t56 * t12 + 0.2e1 * t22 * t50, 0.2e1 * t1 * t49 + 0.2e1 * t10 * t12 - 0.2e1 * t11 * t13 - 0.2e1 * t2 * t50, -0.2e1 * t1 * t11 + 0.2e1 * t10 * t2 + 0.2e1 * t22 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, 0, -t145, 0, -t143, pkin(7) * t145, 0, 0, -t98, -0.4e1 * t153 * t260 - t289 * t283, t152 * t145 - t261, t98, t202, 0 (pkin(8) * t293 + (t298 - t299) * t153) * qJD(3) + (t152 * t223 - t140) * qJD(2) (t154 * t146 + t212) * qJD(3) + (t154 * t223 + t280) * qJD(2), t182, -pkin(2) * t143 + pkin(8) * t182, -t108 * t317 - t203 * t64, -t107 * t317 + t108 * t238 - t203 * t65 + t220 * t64, qJD(2) * t107 - t155 * t317, t107 * t238 + t220 * t65, -t145 * t220 + t155 * t238, 0, t107 * t144 + t120 * t238 + t142 * t65 + t145 * t314 - t67 * t155 + t220 * t99, -t108 * t144 + t120 * t317 - t142 * t64 + t145 * t315 + t66 * t155 + t203 * t99, -t66 * t107 + t67 * t108 - t203 * t29 + t220 * t28 - t238 * t61 + t314 * t64 + t315 * t65 - t317 * t60, t120 * t144 + t142 * t99 + t28 * t315 + t29 * t314 + t60 * t67 + t61 * t66, -t169 * t74 - t35 * t92, t169 * t221 - t191 * t74 + t197 * t35 - t211 * t92, t145 * t92 + t155 * t169, t191 * t221 + t197 * t211, -t145 * t197 + t155 * t191, 0, t106 * t211 + t145 * t52 - t20 * t155 + t191 * t93 + t197 * t55 + t221 * t82, -t106 * t35 - t145 * t53 - t19 * t155 - t169 * t93 + t55 * t92 + t82 * t74, t169 * t30 + t19 * t221 - t191 * t31 + t197 * t8 - t20 * t74 - t211 * t53 + t52 * t35 - t9 * t92, t106 * t55 - t19 * t31 + t20 * t30 + t52 * t9 - t53 * t8 + t82 * t93, -t12 * t58 - t16 * t50, t12 * t57 - t13 * t58 + t16 * t49 - t17 * t50, t145 * t58 + t155 * t16, t13 * t57 + t17 * t49, -t145 * t57 + t155 * t17, 0, t68 * t13 + t145 * t23 - t155 * t4 + t56 * t17 + t22 * t57 + t36 * t49, -t68 * t12 - t145 * t24 - t155 * t3 - t56 * t16 + t22 * t58 + t36 * t50, t1 * t57 + t10 * t16 - t11 * t17 + t12 * t23 - t13 * t24 - t2 * t58 + t3 * t49 - t4 * t50, -t1 * t24 + t10 * t4 - t11 * t3 + t2 * t23 + t22 * t68 + t36 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t260, -0.2e1 * t246, 0, -0.2e1 * t260, 0, 0, t152 * t281, t154 * t281, 0, 0, 0.2e1 * t203 * t317, -0.2e1 * t203 * t238 - 0.2e1 * t220 * t317, 0, 0.2e1 * t220 * t238, 0, 0, 0.2e1 * t142 * t238 + 0.2e1 * t144 * t220, 0.2e1 * pkin(3) * t152 * t196 + 0.2e1 * t142 * t317, -0.2e1 * t203 * t67 - 0.2e1 * t220 * t66 + 0.2e1 * t238 * t315 - 0.2e1 * t314 * t317, 0.2e1 * t142 * t144 + 0.2e1 * t314 * t67 - 0.2e1 * t315 * t66, -0.2e1 * t92 * t169, 0.2e1 * t169 * t197 - 0.2e1 * t191 * t92, 0, 0.2e1 * t197 * t191, 0, 0, 0.2e1 * t106 * t191 + 0.2e1 * t197 * t82, -0.2e1 * t106 * t169 + 0.2e1 * t82 * t92, 0.2e1 * t169 * t52 + 0.2e1 * t19 * t197 - 0.2e1 * t191 * t53 - 0.2e1 * t20 * t92, 0.2e1 * t106 * t82 - 0.2e1 * t19 * t53 + 0.2e1 * t20 * t52, -0.2e1 * t58 * t16, 0.2e1 * t16 * t57 - 0.2e1 * t17 * t58, 0, 0.2e1 * t57 * t17, 0, 0, 0.2e1 * t17 * t68 + 0.2e1 * t36 * t57, -0.2e1 * t16 * t68 + 0.2e1 * t36 * t58, 0.2e1 * t16 * t23 - 0.2e1 * t17 * t24 + 0.2e1 * t3 * t57 - 0.2e1 * t4 * t58, 0.2e1 * t23 * t4 - 0.2e1 * t24 * t3 + 0.2e1 * t36 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153 * t287 + t264, 0, -t318, t145, t71, t70, 0, 0, 0, 0, -t64, 0, -t65, t145, pkin(3) * t153 * t257 + t155 * t242 + t161 (-t153 * t256 + t155 * t249) * pkin(3) + t28 (t64 * t304 - t301 * t65 + (-t304 * t107 - t301 * t108) * qJD(4)) * pkin(3) (t304 * t29 - t301 * t28 + (-t301 * t60 + t304 * t61) * qJD(4)) * pkin(3), 0, 0, -t35, 0, -t211, t145, t113 * t145 - t88 * t155 + t158, -t115 * t145 - t87 * t155 + t8, t113 * t35 - t115 * t211 + t221 * t87 - t88 * t74, t113 * t9 - t115 * t8 + t30 * t88 - t31 * t87, 0, 0, -t12, 0, -t13, t145, t145 * t77 - t39 * t155 + t2, -t145 * t78 - t155 * t38 + t1, t12 * t77 - t13 * t78 + t38 * t49 - t39 * t50, -t1 * t78 + t10 * t39 - t11 * t38 + t2 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, 0, -t287, 0, -pkin(8) * t286, pkin(8) * t287, 0, 0, 0, 0, t317, 0, -t238, 0, t67, -t66, t203 * t242 - t220 * t243 - t238 * t320 - t278 * t317 (t304 * t67 + t301 * t66 + (-t301 * t314 - t304 * t315) * qJD(4)) * pkin(3), 0, 0, -t169, 0, -t191, 0, t20, t19, t113 * t169 - t115 * t191 + t197 * t87 - t88 * t92, t113 * t20 - t115 * t19 + t52 * t88 - t53 * t87, 0, 0, -t16, 0, -t17, 0, t4, t3, t16 * t77 - t17 * t78 + t38 * t57 - t39 * t58, t23 * t39 - t24 * t38 - t3 * t78 + t4 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t242, -0.2e1 * t243, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t88, 0.2e1 * t87, 0, 0.2e1 * t113 * t88 - 0.2e1 * t115 * t87, 0, 0, 0, 0, 0, 0, 0.2e1 * t39, 0.2e1 * t38, 0, -0.2e1 * t38 * t78 + 0.2e1 * t39 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, -t65, t145, t29, t28, 0, 0, 0, 0, -t35, 0, -t211, t145, t155 * t240 + t303 * t274 + t158 (-t300 * t145 + t155 * t253) * pkin(4) + t8 (-t300 * t211 + t35 * t303 + (-t303 * t221 + t300 * t74) * qJD(5)) * pkin(4) (-t300 * t8 + t303 * t9 + (-t300 * t30 + t303 * t31) * qJD(5)) * pkin(4), 0, 0, -t12, 0, -t13, t145, t112 * t145 - t86 * t155 + t2, -t114 * t145 - t155 * t85 + t1, t112 * t12 - t114 * t13 + t49 * t85 - t50 * t86, -t1 * t114 + t10 * t86 - t11 * t85 + t112 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, 0, -t238, 0, t67, -t66, 0, 0, 0, 0, -t169, 0, -t191, 0, t20, t19, t169 * t276 - t191 * t275 - t197 * t241 + t240 * t92 (-t300 * t19 + t303 * t20 + (-t52 * t300 + t53 * t303) * qJD(5)) * pkin(4), 0, 0, -t16, 0, -t17, 0, t4, t3, t112 * t16 - t114 * t17 + t57 * t85 - t58 * t86, t112 * t4 - t114 * t3 + t23 * t86 - t24 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242, -t243, 0, 0, 0, 0, 0, 0, 0, 0, t224 + (qJD(5) * t194 + t188) * pkin(3), -t241 + t87, 0 (-t300 * t87 + t303 * t88 + (-t113 * t300 + t115 * t303) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, pkin(4) * t190 + (-t219 - t266 + (-t276 + t207) * t151) * qJD(6) + t248 (qJD(6) * t115 + t198) * t151 + t279 + t291, 0, t112 * t39 - t114 * t38 + t77 * t86 - t78 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, -0.2e1 * t241, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t86, 0.2e1 * t85, 0, 0.2e1 * t112 * t86 - 0.2e1 * t114 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, 0, -t211, t145, t9, t8, 0, 0, 0, 0, -t12, 0, -t13, t145, t302 * t273 + (-t271 + (-t26 + t296) * t151) * qJD(6) + t177 (-t145 * t151 + t155 * t251) * pkin(5) + t1 (t302 * t12 - t13 * t151 + (t151 * t50 - t302 * t49) * qJD(6)) * pkin(5) (t302 * t2 - t1 * t151 + (-t10 * t151 + t302 * t11) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, 0, -t191, 0, t20, t19, 0, 0, 0, 0, -t16, 0, -t17, 0, t4, t3 (t302 * t16 - t151 * t17 + (t151 * t58 - t302 * t57) * qJD(6)) * pkin(5) (t302 * t4 - t151 * t3 + (-t151 * t23 + t302 * t24) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88, t87, 0, 0, 0, 0, 0, 0, 0, 0 (t151 * t207 - t266) * qJD(6) + t248 (-t302 * pkin(5) + t295) * qJD(6) + t279, 0 (t302 * t39 - t151 * t38 + (-t151 * t77 + t302 * t78) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, -t241, 0, 0, 0, 0, 0, 0, 0, 0, t173 + t247, -t239 + t85, 0 (t302 * t86 - t151 * t85 + (-t112 * t151 + t302 * t114) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247, -0.2e1 * t239, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, -t13, t145, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, 0, -t17, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, t38, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t85, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, -t239, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
