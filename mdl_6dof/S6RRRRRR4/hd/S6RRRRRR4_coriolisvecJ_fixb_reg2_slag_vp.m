% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:51:26
% EndTime: 2019-03-10 03:52:07
% DurationCPUTime: 19.09s
% Computational Cost: add. (37537->722), mult. (89832->983), div. (0->0), fcn. (65934->10), ass. (0->305)
t370 = sin(qJ(2));
t374 = cos(qJ(2));
t388 = pkin(2) * t370 - pkin(8) * t374;
t323 = t388 * qJD(1);
t373 = cos(qJ(3));
t369 = sin(qJ(3));
t429 = qJD(1) * t370;
t408 = t369 * t429;
t272 = pkin(7) * t408 + t373 * t323;
t443 = t373 * t374;
t383 = pkin(3) * t370 - pkin(9) * t443;
t481 = -pkin(9) - pkin(8);
t410 = qJD(3) * t481;
t531 = qJD(1) * t383 - t373 * t410 + t272;
t302 = t369 * t323;
t444 = t370 * t373;
t445 = t369 * t374;
t530 = t302 + (-pkin(7) * t444 - pkin(9) * t445) * qJD(1) - t369 * t410;
t372 = cos(qJ(4));
t368 = sin(qJ(4));
t448 = t368 * t369;
t317 = -t372 * t373 + t448;
t414 = qJD(3) + qJD(4);
t421 = qJD(4) * t372;
t423 = qJD(3) * t373;
t428 = qJD(1) * t374;
t433 = -t317 * t428 - t372 * t423 - t373 * t421 + t414 * t448;
t318 = t368 * t373 + t369 * t372;
t263 = t414 * t318;
t432 = -t318 * t428 + t263;
t417 = t373 * qJD(2);
t314 = t408 - t417;
t407 = t373 * t429;
t427 = qJD(2) * t369;
t316 = t407 + t427;
t250 = t372 * t314 + t316 * t368;
t367 = sin(qJ(5));
t371 = cos(qJ(5));
t385 = t314 * t368 - t372 * t316;
t172 = t371 * t250 - t367 * t385;
t366 = sin(qJ(6));
t480 = cos(qJ(6));
t495 = -t250 * t367 - t371 * t385;
t523 = -t366 * t172 + t480 * t495;
t92 = t480 * t172 + t366 * t495;
t478 = t92 * t523;
t336 = t481 * t369;
t337 = t481 * t373;
t269 = t368 * t336 - t372 * t337;
t436 = qJD(4) * t269 - t530 * t368 + t372 * t531;
t422 = qJD(4) * t368;
t435 = -t336 * t421 - t337 * t422 + t368 * t531 + t530 * t372;
t507 = t523 ^ 2 - t92 ^ 2;
t349 = -qJD(3) + t428;
t340 = -qJD(4) + t349;
t332 = -qJD(5) + t340;
t328 = -pkin(2) * t374 - pkin(8) * t370 - pkin(1);
t307 = t328 * qJD(1);
t359 = pkin(7) * t428;
t335 = qJD(2) * pkin(8) + t359;
t258 = t373 * t307 - t335 * t369;
t212 = -pkin(9) * t316 + t258;
t198 = -pkin(3) * t349 + t212;
t259 = t307 * t369 + t335 * t373;
t213 = -pkin(9) * t314 + t259;
t205 = t372 * t213;
t122 = t198 * t368 + t205;
t514 = pkin(10) * t250;
t104 = t122 - t514;
t100 = t367 * t104;
t203 = t368 * t213;
t121 = t372 * t198 - t203;
t513 = pkin(10) * t385;
t103 = t121 + t513;
t98 = -pkin(4) * t340 + t103;
t48 = t371 * t98 - t100;
t491 = pkin(11) * t495;
t42 = t48 - t491;
t38 = -pkin(5) * t332 + t42;
t102 = t371 * t104;
t49 = t367 * t98 + t102;
t512 = pkin(11) * t172;
t43 = t49 - t512;
t472 = t366 * t43;
t14 = t38 * t480 - t472;
t412 = t480 * t43;
t15 = t366 * t38 + t412;
t525 = -t14 * t92 + t15 * t523;
t416 = qJD(1) * qJD(2);
t400 = t374 * t416;
t424 = qJD(3) * t369;
t404 = t370 * t424;
t415 = qJD(2) * qJD(3);
t270 = qJD(1) * t404 + (-t400 - t415) * t373;
t425 = qJD(2) * t374;
t406 = t369 * t425;
t380 = t370 * t423 + t406;
t271 = qJD(1) * t380 + t369 * t415;
t150 = t372 * t270 + t368 * t271 + t314 * t421 + t316 * t422;
t379 = qJD(4) * t385 + t368 * t270 - t372 * t271;
t419 = qJD(5) * t371;
t420 = qJD(5) * t367;
t382 = -t367 * t150 - t250 * t420 - t371 * t379 - t385 * t419;
t401 = qJD(6) * t480;
t418 = qJD(6) * t366;
t69 = t371 * t150 + t250 * t419 - t367 * t379 - t385 * t420;
t24 = t172 * t401 + t366 * t382 + t418 * t495 + t480 * t69;
t327 = -qJD(6) + t332;
t504 = -t327 * t92 - t24;
t358 = pkin(7) * t429;
t473 = qJD(2) * pkin(2);
t334 = t358 - t473;
t275 = pkin(3) * t314 + t334;
t196 = pkin(4) * t250 + t275;
t111 = pkin(5) * t172 + t196;
t352 = t370 * t416;
t322 = t388 * qJD(2);
t308 = qJD(1) * t322;
t392 = pkin(7) * t352;
t190 = -qJD(3) * t259 + t373 * t308 + t369 * t392;
t138 = pkin(3) * t352 + t270 * pkin(9) + t190;
t189 = t307 * t423 + t369 * t308 - t335 * t424 - t373 * t392;
t156 = -pkin(9) * t271 + t189;
t51 = -qJD(4) * t122 + t372 * t138 - t368 * t156;
t34 = pkin(4) * t352 + t150 * pkin(10) + t51;
t391 = -t368 * t138 - t372 * t156 - t198 * t421 + t213 * t422;
t37 = pkin(10) * t379 - t391;
t9 = -qJD(5) * t49 + t371 * t34 - t367 * t37;
t6 = pkin(5) * t352 + t69 * pkin(11) + t9;
t397 = t104 * t420 - t367 * t34 - t371 * t37 - t98 * t419;
t7 = -pkin(11) * t382 - t397;
t378 = -t366 * t6 - t38 * t401 + t43 * t418 - t480 * t7;
t503 = t111 * t92 + t378;
t527 = -pkin(4) * t429 + pkin(10) * t433 - t436;
t526 = pkin(10) * t432 + t435;
t2 = -qJD(6) * t15 - t366 * t7 + t480 * t6;
t485 = -t111 * t523 + t2;
t25 = qJD(6) * t523 - t366 * t69 + t480 * t382;
t483 = -t327 * t523 - t25;
t463 = t172 * t495;
t438 = t317 * t419 + t318 * t420 + t367 * t432 + t371 * t433;
t255 = -t317 * t367 + t318 * t371;
t437 = qJD(5) * t255 - t367 * t433 + t371 * t432;
t506 = -t172 ^ 2 + t495 ^ 2;
t502 = -t172 * t332 - t69;
t524 = -t48 * t172 + t49 * t495;
t499 = t172 * t196 + t397;
t520 = pkin(5) * t495;
t268 = t372 * t336 + t337 * t368;
t224 = -pkin(10) * t318 + t268;
t225 = -pkin(10) * t317 + t269;
t475 = t224 * t419 - t225 * t420 + t367 * t527 - t371 * t526;
t159 = t367 * t224 + t371 * t225;
t474 = -qJD(5) * t159 + t367 * t526 + t371 * t527;
t133 = -t212 * t368 - t205;
t109 = t133 + t514;
t134 = t372 * t212 - t203;
t110 = t134 + t513;
t356 = pkin(3) * t372 + pkin(4);
t449 = t367 * t368;
t465 = -t367 * t109 - t371 * t110 + t356 * t419 + (-t368 * t420 + (t371 * t372 - t449) * qJD(4)) * pkin(3);
t447 = t368 * t371;
t464 = -t371 * t109 + t110 * t367 - t356 * t420 + (-t368 * t419 + (-t367 * t372 - t447) * qJD(4)) * pkin(3);
t484 = -t196 * t495 + t9;
t482 = -t332 * t495 - t382;
t515 = pkin(4) * t385;
t511 = -pkin(11) * t437 + t475;
t510 = -pkin(5) * t429 + pkin(11) * t438 + t474;
t509 = t465 + t491;
t508 = t464 - t512;
t462 = t250 * t385;
t389 = -t359 + (-t369 * t428 + t424) * pkin(3);
t505 = -t250 ^ 2 + t385 ^ 2;
t501 = t275 * t385 + t51;
t500 = -t250 * t340 - t150;
t497 = t250 * t275 + t391;
t496 = t340 * t385 + t379;
t492 = -0.2e1 * t416;
t313 = t373 * t328;
t479 = pkin(7) * t369;
t257 = -pkin(9) * t444 + t313 + (-pkin(3) - t479) * t374;
t351 = pkin(7) * t443;
t280 = t369 * t328 + t351;
t446 = t369 * t370;
t264 = -pkin(9) * t446 + t280;
t182 = t372 * t257 - t264 * t368;
t289 = t317 * t370;
t154 = -pkin(4) * t374 + pkin(10) * t289 + t182;
t183 = t368 * t257 + t372 * t264;
t288 = t318 * t370;
t160 = -pkin(10) * t288 + t183;
t81 = t367 * t154 + t371 * t160;
t488 = t258 * t349 + t189;
t487 = t259 * t349 - t190;
t434 = pkin(4) * t432 + t389;
t405 = t374 * t417;
t486 = -t404 + t405;
t158 = t371 * t224 - t225 * t367;
t116 = -pkin(11) * t255 + t158;
t254 = t371 * t317 + t318 * t367;
t117 = -pkin(11) * t254 + t159;
t72 = t116 * t480 - t366 * t117;
t477 = qJD(6) * t72 + t366 * t510 + t480 * t511;
t73 = t366 * t116 + t117 * t480;
t476 = -qJD(6) * t73 - t366 * t511 + t480 * t510;
t294 = -pkin(3) * t449 + t371 * t356;
t290 = pkin(5) + t294;
t296 = pkin(3) * t447 + t356 * t367;
t220 = t290 * t480 - t366 * t296;
t471 = qJD(6) * t220 + t366 * t508 + t480 * t509;
t221 = t366 * t290 + t296 * t480;
t470 = -qJD(6) * t221 - t366 * t509 + t480 * t508;
t178 = -t366 * t254 + t255 * t480;
t469 = -qJD(6) * t178 + t366 * t438 - t437 * t480;
t468 = t254 * t401 + t255 * t418 + t366 * t437 + t438 * t480;
t355 = pkin(4) * t371 + pkin(5);
t409 = t480 * t367;
t52 = -t103 * t367 - t102;
t44 = t52 + t512;
t53 = t371 * t103 - t100;
t45 = t53 - t491;
t467 = -t366 * t45 + t480 * t44 + t355 * t418 - (-t367 * t401 + (-t366 * t371 - t409) * qJD(5)) * pkin(4);
t450 = t366 * t367;
t466 = t366 * t44 + t480 * t45 - t355 * t401 - (-t367 * t418 + (t371 * t480 - t450) * qJD(5)) * pkin(4);
t459 = t270 * t369;
t458 = t271 * t373;
t457 = t314 * t349;
t456 = t316 * t314;
t455 = t316 * t349;
t454 = t334 * t369;
t453 = t334 * t373;
t452 = t349 * t369;
t451 = t349 * t373;
t376 = qJD(1) ^ 2;
t442 = t374 * t376;
t375 = qJD(2) ^ 2;
t441 = t375 * t370;
t440 = t375 * t374;
t439 = pkin(5) * t437 + t434;
t426 = qJD(2) * t370;
t431 = t373 * t322 + t426 * t479;
t326 = pkin(3) * t446 + t370 * pkin(7);
t364 = t370 ^ 2;
t430 = -t374 ^ 2 + t364;
t413 = pkin(7) * t445;
t360 = pkin(7) * t425;
t411 = t370 * t442;
t276 = pkin(3) * t380 + t360;
t357 = -pkin(3) * t373 - pkin(2);
t402 = t349 * t423;
t245 = t271 * pkin(3) + pkin(7) * t400;
t396 = pkin(1) * t492;
t80 = t371 * t154 - t160 * t367;
t394 = t314 + t417;
t393 = -t316 + t427;
t390 = t374 * t352;
t260 = pkin(4) * t288 + t326;
t202 = pkin(3) * t316 - t515;
t386 = -t258 * t373 - t259 * t369;
t216 = -t288 * t367 - t289 * t371;
t384 = qJD(1) * t364 - t349 * t374;
t283 = pkin(4) * t317 + t357;
t192 = -t422 * t446 + (t414 * t444 + t406) * t372 + t486 * t368;
t161 = pkin(4) * t192 + t276;
t112 = -pkin(4) * t379 + t245;
t74 = -pkin(5) * t374 - pkin(11) * t216 + t80;
t215 = t371 * t288 - t289 * t367;
t75 = -pkin(11) * t215 + t81;
t28 = -t366 * t75 + t480 * t74;
t29 = t366 * t74 + t480 * t75;
t148 = -t366 * t215 + t216 * t480;
t191 = t263 * t370 + t368 * t406 - t372 * t405;
t181 = t383 * qJD(2) + (-t351 + (pkin(9) * t370 - t328) * t369) * qJD(3) + t431;
t209 = t369 * t322 + t328 * t423 + (-t370 * t417 - t374 * t424) * pkin(7);
t188 = -pkin(9) * t380 + t209;
t79 = -qJD(4) * t183 + t372 * t181 - t368 * t188;
t60 = pkin(4) * t426 + t191 * pkin(10) + t79;
t78 = t368 * t181 + t372 * t188 + t257 * t421 - t264 * t422;
t64 = -pkin(10) * t192 + t78;
t18 = t154 * t419 - t160 * t420 + t367 * t60 + t371 * t64;
t19 = -qJD(5) * t81 - t367 * t64 + t371 * t60;
t295 = pkin(4) * t409 + t366 * t355;
t293 = -pkin(4) * t450 + t355 * t480;
t279 = t313 - t413;
t273 = -pkin(7) * t407 + t302;
t210 = -qJD(3) * t280 + t431;
t199 = pkin(5) * t254 + t283;
t177 = t254 * t480 + t255 * t366;
t169 = pkin(5) * t215 + t260;
t147 = t215 * t480 + t216 * t366;
t118 = -t515 + t520;
t113 = t202 + t520;
t86 = qJD(5) * t216 - t367 * t191 + t371 * t192;
t85 = t371 * t191 + t367 * t192 + t288 * t419 - t289 * t420;
t71 = pkin(5) * t86 + t161;
t36 = pkin(5) * t382 + t112;
t31 = qJD(6) * t148 - t366 * t85 + t480 * t86;
t30 = t215 * t401 + t216 * t418 + t366 * t86 + t480 * t85;
t17 = t42 * t480 - t472;
t16 = -t366 * t42 - t412;
t13 = -pkin(11) * t86 + t18;
t12 = pkin(5) * t426 + t85 * pkin(11) + t19;
t4 = -qJD(6) * t29 + t12 * t480 - t366 * t13;
t3 = qJD(6) * t28 + t366 * t12 + t13 * t480;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t390, t430 * t492, t440, -0.2e1 * t390, -t441, 0, -pkin(7) * t440 + t370 * t396, pkin(7) * t441 + t374 * t396, 0, 0, -t270 * t444 + t316 * t486 (-t314 * t373 - t316 * t369) * t425 + (t459 - t458 + (t314 * t369 - t316 * t373) * qJD(3)) * t370, t349 * t404 + t270 * t374 + (t316 * t370 + t373 * t384) * qJD(2), t271 * t446 + t314 * t380, t370 * t402 + t271 * t374 + (-t314 * t370 - t369 * t384) * qJD(2) (-t349 - t428) * t426, -t190 * t374 - t210 * t349 + (pkin(7) * t271 + t334 * t423) * t370 + ((pkin(7) * t314 + t454) * t374 + (t258 + (t279 + t413) * qJD(1)) * t370) * qJD(2), t189 * t374 + t209 * t349 + (-pkin(7) * t270 - t334 * t424) * t370 + ((pkin(7) * t316 + t453) * t374 + (-t259 + (-t280 + t351) * qJD(1)) * t370) * qJD(2), -t209 * t314 - t210 * t316 + t270 * t279 - t271 * t280 + t386 * t425 + (-t189 * t369 - t190 * t373 + (t258 * t369 - t259 * t373) * qJD(3)) * t370, t189 * t280 + t190 * t279 + t259 * t209 + t258 * t210 + (t334 + t358) * t360, t150 * t289 + t191 * t385, t150 * t288 + t191 * t250 + t192 * t385 - t289 * t379, t150 * t374 + t191 * t340 + (-qJD(1) * t289 - t385) * t426, t192 * t250 - t288 * t379, -t379 * t374 + t192 * t340 + (-qJD(1) * t288 - t250) * t426 (-t340 - t428) * t426, -t326 * t379 + t275 * t192 + t245 * t288 + t276 * t250 - t79 * t340 - t51 * t374 + (qJD(1) * t182 + t121) * t426, -t326 * t150 - t275 * t191 - t245 * t289 - t276 * t385 + t78 * t340 - t391 * t374 + (-qJD(1) * t183 - t122) * t426, t121 * t191 - t122 * t192 + t150 * t182 + t183 * t379 - t250 * t78 + t288 * t391 + t289 * t51 + t385 * t79, t121 * t79 + t122 * t78 + t182 * t51 - t183 * t391 + t245 * t326 + t275 * t276, -t216 * t69 - t495 * t85, t85 * t172 + t69 * t215 - t216 * t382 - t495 * t86, t85 * t332 + t69 * t374 + (qJD(1) * t216 + t495) * t426, t172 * t86 + t215 * t382, t86 * t332 + t382 * t374 + (-qJD(1) * t215 - t172) * t426 (-t332 - t428) * t426, -t19 * t332 - t9 * t374 + t161 * t172 + t260 * t382 + t112 * t215 + t196 * t86 + (qJD(1) * t80 + t48) * t426, t112 * t216 + t161 * t495 + t18 * t332 - t196 * t85 - t260 * t69 - t397 * t374 + (-qJD(1) * t81 - t49) * t426, -t18 * t172 - t19 * t495 + t215 * t397 - t9 * t216 - t382 * t81 + t48 * t85 - t49 * t86 + t80 * t69, t112 * t260 + t161 * t196 + t18 * t49 + t19 * t48 - t397 * t81 + t80 * t9, -t148 * t24 - t30 * t523, t147 * t24 - t148 * t25 + t30 * t92 - t31 * t523, t24 * t374 + t30 * t327 + (qJD(1) * t148 + t523) * t426, t147 * t25 + t31 * t92, t25 * t374 + t31 * t327 + (-qJD(1) * t147 - t92) * t426 (-t327 - t428) * t426, t111 * t31 + t36 * t147 + t169 * t25 - t2 * t374 - t4 * t327 + t71 * t92 + (qJD(1) * t28 + t14) * t426, -t378 * t374 - t111 * t30 + t36 * t148 - t169 * t24 + t3 * t327 + t71 * t523 + (-qJD(1) * t29 - t15) * t426, t14 * t30 + t147 * t378 - t148 * t2 - t15 * t31 + t24 * t28 - t25 * t29 - t3 * t92 - t4 * t523, t111 * t71 + t14 * t4 + t15 * t3 + t169 * t36 + t2 * t28 - t29 * t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t411, t430 * t376, 0, t411, 0, 0, t376 * pkin(1) * t370, pkin(1) * t442, 0, 0, -t316 * t451 - t459 (-t270 + t457) * t373 + (-t271 + t455) * t369, -t402 + (t349 * t443 + t370 * t393) * qJD(1), -t314 * t452 - t458, t349 * t424 + (-t349 * t445 + t370 * t394) * qJD(1), t349 * t429, -pkin(2) * t271 + t272 * t349 + (pkin(8) * t451 + t454) * qJD(3) + ((-pkin(8) * t427 - t258) * t370 + (-pkin(7) * t394 - t454) * t374) * qJD(1), pkin(2) * t270 - t273 * t349 + (-pkin(8) * t452 + t453) * qJD(3) + ((-pkin(8) * t417 + t259) * t370 + (pkin(7) * t393 - t453) * t374) * qJD(1), t272 * t316 + t273 * t314 + ((qJD(3) * t316 - t271) * pkin(8) + t488) * t373 + ((qJD(3) * t314 - t270) * pkin(8) + t487) * t369, -t258 * t272 - t259 * t273 + (-t334 - t473) * t359 + (qJD(3) * t386 + t189 * t373 - t190 * t369) * pkin(8), -t150 * t318 + t385 * t433, t150 * t317 + t250 * t433 + t318 * t379 + t385 * t432, t433 * t340 + (qJD(2) * t318 + t385) * t429, t250 * t432 - t317 * t379, t432 * t340 + (-qJD(2) * t317 + t250) * t429, t340 * t429, -t379 * t357 + t245 * t317 + t436 * t340 + t432 * t275 + t389 * t250 + (qJD(2) * t268 - t121) * t429, -t150 * t357 + t245 * t318 - t435 * t340 - t433 * t275 - t389 * t385 + (-qJD(2) * t269 + t122) * t429, t121 * t433 - t122 * t432 + t150 * t268 + t250 * t435 + t269 * t379 + t317 * t391 - t318 * t51 - t385 * t436, -t121 * t436 - t122 * t435 + t245 * t357 + t268 * t51 - t269 * t391 + t275 * t389, -t69 * t255 - t438 * t495, t172 * t438 + t69 * t254 - t255 * t382 - t437 * t495, t438 * t332 + (qJD(2) * t255 - t495) * t429, t172 * t437 + t254 * t382, t437 * t332 + (-qJD(2) * t254 + t172) * t429, t332 * t429, t283 * t382 + t112 * t254 - t474 * t332 + t437 * t196 + t434 * t172 + (qJD(2) * t158 - t48) * t429, t112 * t255 - t283 * t69 + t475 * t332 - t438 * t196 + t434 * t495 + (-qJD(2) * t159 + t49) * t429, t158 * t69 - t159 * t382 - t172 * t475 + t254 * t397 - t9 * t255 - t437 * t49 + t438 * t48 - t474 * t495, t112 * t283 + t9 * t158 - t159 * t397 + t196 * t434 + t474 * t48 + t475 * t49, -t24 * t178 - t468 * t523, t24 * t177 - t178 * t25 + t468 * t92 + t469 * t523, t468 * t327 + (qJD(2) * t178 - t523) * t429, t25 * t177 - t469 * t92, -t469 * t327 + (-qJD(2) * t177 + t92) * t429, t327 * t429, t177 * t36 + t199 * t25 + t439 * t92 - t476 * t327 - t469 * t111 + (qJD(2) * t72 - t14) * t429, t178 * t36 - t199 * t24 + t439 * t523 + t477 * t327 - t468 * t111 + (-qJD(2) * t73 + t15) * t429, t14 * t468 + t15 * t469 + t177 * t378 - t178 * t2 + t24 * t72 - t25 * t73 - t476 * t523 - t477 * t92, t111 * t439 + t14 * t476 + t15 * t477 + t36 * t199 + t2 * t72 - t378 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, -t314 ^ 2 + t316 ^ 2, -t270 - t457, -t456, -t271 - t455, t352, -t334 * t316 - t487, t314 * t334 - t488, 0, 0, -t462, t505, t500, t462, t496, t352, t133 * t340 + (-t250 * t316 + t340 * t422 + t352 * t372) * pkin(3) + t501, -t134 * t340 + (t316 * t385 + t340 * t421 - t352 * t368) * pkin(3) + t497, -t121 * t250 - t122 * t385 - t133 * t385 + t134 * t250 + (t150 * t372 + t379 * t368 + (-t250 * t372 - t368 * t385) * qJD(4)) * pkin(3), -t121 * t133 - t122 * t134 + (-t275 * t316 - t368 * t391 + t372 * t51 + (-t121 * t368 + t122 * t372) * qJD(4)) * pkin(3), t463, t506, t502, -t463, t482, t352, -t172 * t202 + t294 * t352 - t332 * t464 + t484, -t202 * t495 - t296 * t352 + t332 * t465 + t499, -t172 * t465 + t294 * t69 - t296 * t382 - t464 * t495 + t524, -t196 * t202 + t9 * t294 - t296 * t397 + t464 * t48 + t465 * t49, t478, t507, t504, -t478, t483, t352, -t113 * t92 + t220 * t352 - t327 * t470 + t485, -t113 * t523 - t221 * t352 + t327 * t471 + t503, t220 * t24 - t221 * t25 - t470 * t523 - t471 * t92 + t525, -t111 * t113 + t14 * t470 + t15 * t471 + t2 * t220 - t221 * t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, t505, t500, t462, t496, t352, -t122 * t340 + t501, -t121 * t340 + t497, 0, 0, t463, t506, t502, -t463, t482, t352, t332 * t52 + (t172 * t385 + t332 * t420 + t352 * t371) * pkin(4) + t484, -t332 * t53 + (t332 * t419 - t352 * t367 + t385 * t495) * pkin(4) + t499, t53 * t172 + t52 * t495 + (-t367 * t382 + t371 * t69 + (-t172 * t371 + t367 * t495) * qJD(5)) * pkin(4) + t524, -t48 * t52 - t49 * t53 + (t196 * t385 - t367 * t397 + t371 * t9 + (-t367 * t48 + t371 * t49) * qJD(5)) * pkin(4), t478, t507, t504, -t478, t483, t352, -t118 * t92 + t293 * t352 + t327 * t467 + t485, -t118 * t523 - t295 * t352 - t327 * t466 + t503, t293 * t24 - t295 * t25 + t466 * t92 + t467 * t523 + t525, -t111 * t118 - t14 * t467 - t15 * t466 + t2 * t293 - t295 * t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, t506, t502, -t463, t482, t352, -t49 * t332 + t484, -t332 * t48 + t499, 0, 0, t478, t507, t504, -t478, t483, t352, t16 * t327 + (t327 * t418 + t352 * t480 - t495 * t92) * pkin(5) + t485, -t17 * t327 + (t327 * t401 - t352 * t366 - t495 * t523) * pkin(5) + t503, t16 * t523 + t17 * t92 + (t480 * t24 - t25 * t366 + (t366 * t523 - t480 * t92) * qJD(6)) * pkin(5) + t525, -t14 * t16 - t15 * t17 + (t480 * t2 - t378 * t366 - t111 * t495 + (-t14 * t366 + t15 * t480) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, t507, t504, -t478, t483, t352, -t15 * t327 + t485, -t14 * t327 + t503, 0, 0;];
tauc_reg  = t1;
