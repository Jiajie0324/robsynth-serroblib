% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR4_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRR4_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR4_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:51:57
% EndTime: 2019-03-10 03:52:28
% DurationCPUTime: 21.26s
% Computational Cost: add. (15405->663), mult. (37797->885), div. (0->0), fcn. (28587->10), ass. (0->279)
t757 = sin(qJ(3));
t758 = sin(qJ(2));
t849 = qJD(1) * t758;
t829 = t757 * t849;
t762 = cos(qJ(3));
t836 = t762 * qJD(2);
t703 = t829 - t836;
t847 = qJD(2) * t757;
t705 = t762 * t849 + t847;
t756 = sin(qJ(4));
t761 = cos(qJ(4));
t650 = t761 * t703 + t705 * t756;
t755 = sin(qJ(5));
t760 = cos(qJ(5));
t785 = t703 * t756 - t761 * t705;
t592 = t760 * t650 - t755 * t785;
t754 = sin(qJ(6));
t759 = cos(qJ(6));
t789 = t650 * t755 + t760 * t785;
t790 = t592 * t754 + t759 * t789;
t835 = qJD(1) * qJD(2);
t823 = t758 * t835;
t899 = t789 * t754;
t936 = -t759 * t592 + t899;
t944 = MDP(36) * t823 + (t790 ^ 2 - t936 ^ 2) * MDP(33) + t936 * MDP(32) * t790;
t763 = cos(qJ(2));
t822 = t763 * t835;
t844 = qJD(3) * t757;
t826 = t758 * t844;
t834 = qJD(2) * qJD(3);
t668 = -qJD(1) * t826 + (t822 + t834) * t762;
t843 = qJD(3) * t762;
t824 = t758 * t843;
t845 = qJD(2) * t763;
t828 = t757 * t845;
t773 = t824 + t828;
t669 = qJD(1) * t773 + t757 * t834;
t841 = qJD(4) * t761;
t842 = qJD(4) * t756;
t574 = t761 * t668 - t756 * t669 - t703 * t841 - t705 * t842;
t767 = qJD(4) * t785 - t668 * t756 - t761 * t669;
t839 = qJD(5) * t760;
t840 = qJD(5) * t755;
t508 = t760 * t574 - t650 * t839 + t755 * t767 + t785 * t840;
t768 = qJD(5) * t789 - t574 * t755 + t760 * t767;
t837 = qJD(6) * t759;
t832 = t759 * t508 - t592 * t837 + t754 * t768;
t838 = qJD(6) * t754;
t475 = t789 * t838 + t832;
t848 = qJD(1) * t763;
t738 = -qJD(3) + t848;
t728 = -qJD(4) + t738;
t720 = -qJD(5) + t728;
t815 = t508 * t754 - t759 * t768;
t769 = qJD(6) * t790 - t815;
t716 = -qJD(6) + t720;
t921 = t716 * t790;
t922 = t936 * t716;
t943 = MDP(29) * t823 + (-t592 ^ 2 + t789 ^ 2) * MDP(26) + (-t592 * t720 + t508) * MDP(27) + (t720 * t789 + t768) * MDP(28) - t592 * MDP(25) * t789 + (t769 + t921) * MDP(35) + (t475 + t922) * MDP(34) + t944;
t717 = -pkin(2) * t763 - pkin(8) * t758 - pkin(1);
t696 = t717 * qJD(1);
t747 = pkin(7) * t848;
t723 = qJD(2) * pkin(8) + t747;
t658 = t762 * t696 - t723 * t757;
t621 = -pkin(9) * t705 + t658;
t610 = -pkin(3) * t738 + t621;
t888 = t757 * t696;
t659 = t723 * t762 + t888;
t622 = -pkin(9) * t703 + t659;
t615 = t756 * t622;
t549 = t761 * t610 - t615;
t926 = pkin(10) * t785;
t533 = t549 + t926;
t528 = -pkin(4) * t728 + t533;
t617 = t761 * t622;
t550 = t610 * t756 + t617;
t927 = pkin(10) * t650;
t534 = t550 - t927;
t532 = t760 * t534;
t496 = t528 * t755 + t532;
t925 = pkin(11) * t592;
t490 = t496 - t925;
t488 = t490 * t838;
t722 = -qJD(2) * pkin(2) + pkin(7) * t849;
t671 = pkin(3) * t703 + t722;
t608 = pkin(4) * t650 + t671;
t541 = pkin(5) * t592 + t608;
t942 = -t541 * t936 + t488;
t941 = MDP(22) * t823 + (-t650 ^ 2 + t785 ^ 2) * MDP(19) + (-t650 * t728 + t574) * MDP(20) + (t728 * t785 + t767) * MDP(21) - t650 * MDP(18) * t785 + t943;
t795 = pkin(2) * t758 - pkin(8) * t763;
t714 = t795 * qJD(2);
t697 = qJD(1) * t714;
t800 = pkin(7) * t823;
t860 = -t762 * t697 - t757 * t800;
t772 = -qJD(3) * t659 - t860;
t562 = pkin(3) * t823 - pkin(9) * t668 + t772;
t782 = t696 * t843 + t757 * t697 - t723 * t844;
t766 = -t762 * t800 + t782;
t580 = -pkin(9) * t669 + t766;
t812 = t761 * t562 - t756 * t580;
t771 = -qJD(4) * t550 + t812;
t481 = pkin(4) * t823 - pkin(10) * t574 + t771;
t798 = -t756 * t562 - t761 * t580 - t610 * t841 + t622 * t842;
t484 = pkin(10) * t767 - t798;
t817 = t760 * t481 - t755 * t484;
t770 = -qJD(5) * t496 + t817;
t469 = pkin(5) * t823 - pkin(11) * t508 + t770;
t799 = -t755 * t481 - t760 * t484 - t528 * t839 + t534 * t840;
t470 = pkin(11) * t768 - t799;
t939 = -t754 * t469 - t759 * t470 + t942;
t881 = t762 * t763;
t783 = pkin(3) * t758 - pkin(9) * t881;
t901 = pkin(8) + pkin(9);
t830 = qJD(3) * t901;
t711 = t795 * qJD(1);
t856 = pkin(7) * t829 + t762 * t711;
t940 = qJD(1) * t783 + t762 * t830 + t856;
t690 = t757 * t711;
t885 = t758 * t762;
t886 = t757 * t763;
t937 = -t690 - (-pkin(7) * t885 - pkin(9) * t886) * qJD(1) - t757 * t830;
t818 = t759 * t469 - t754 * t470;
t918 = t541 * t790 + t818;
t706 = t756 * t757 - t761 * t762;
t778 = t706 * t763;
t902 = qJD(3) + qJD(4);
t862 = qJD(1) * t778 - t902 * t706;
t707 = t756 * t762 + t757 * t761;
t861 = (-t848 + t902) * t707;
t933 = pkin(5) * t789;
t924 = pkin(11) * t789;
t931 = t940 * t761;
t724 = t901 * t757;
t725 = t901 * t762;
t930 = -t724 * t841 - t725 * t842 - t756 * t940 + t761 * t937;
t917 = t592 * t608 + t799;
t916 = t608 * t789 + t770;
t857 = -t756 * t724 + t761 * t725;
t929 = pkin(4) * t849 + pkin(10) * t862 + qJD(4) * t857 + t756 * t937 + t931;
t919 = -pkin(10) * t861 + t930;
t928 = pkin(4) * t785;
t654 = t760 * t706 + t707 * t755;
t870 = -qJD(5) * t654 - t755 * t861 + t760 * t862;
t655 = -t706 * t755 + t707 * t760;
t869 = qJD(5) * t655 + t755 * t862 + t760 * t861;
t796 = -t747 + (-t757 * t848 + t844) * pkin(3);
t915 = t650 * t671 + t798;
t914 = t671 * t785 + t771;
t910 = -0.2e1 * t835;
t909 = MDP(4) * t758;
t752 = t758 ^ 2;
t908 = MDP(5) * (-t763 ^ 2 + t752);
t681 = t707 * t758;
t907 = t929 * t760;
t682 = t706 * t758;
t702 = t762 * t717;
t900 = pkin(7) * t757;
t657 = -pkin(9) * t885 + t702 + (-pkin(3) - t900) * t763;
t740 = pkin(7) * t881;
t854 = t757 * t717 + t740;
t887 = t757 * t758;
t664 = -pkin(9) * t887 + t854;
t806 = t761 * t657 - t664 * t756;
t578 = -pkin(4) * t763 + pkin(10) * t682 + t806;
t863 = t756 * t657 + t761 * t664;
t582 = -pkin(10) * t681 + t863;
t868 = t755 * t578 + t760 * t582;
t804 = -t761 * t724 - t725 * t756;
t631 = -pkin(10) * t707 + t804;
t632 = -pkin(10) * t706 + t857;
t866 = t755 * t631 + t760 * t632;
t865 = pkin(4) * t861 + t796;
t808 = -t621 * t756 - t617;
t539 = t808 + t927;
t867 = t761 * t621 - t615;
t540 = t867 + t926;
t744 = pkin(3) * t761 + pkin(4);
t891 = t755 * t756;
t906 = t744 * t839 + (-t756 * t840 + (t760 * t761 - t891) * qJD(4)) * pkin(3) - t755 * t539 - t760 * t540;
t889 = t756 * t760;
t905 = t744 * t840 - (-t756 * t839 + (-t755 * t761 - t889) * qJD(4)) * pkin(3) + t760 * t539 - t540 * t755;
t904 = t631 * t839 - t632 * t840 - t755 * t929 + t919 * t760;
t903 = t763 * t836 - t826;
t898 = t668 * t757;
t897 = t703 * t738;
t896 = t705 * t738;
t895 = t722 * t757;
t894 = t722 * t762;
t893 = t738 * t762;
t892 = t754 * t755;
t530 = t755 * t534;
t890 = t755 * t759;
t764 = qJD(2) ^ 2;
t884 = t758 * t764;
t495 = t760 * t528 - t530;
t489 = t495 + t924;
t485 = -pkin(5) * t720 + t489;
t883 = t759 * t485;
t882 = t759 * t490;
t880 = t763 * t764;
t765 = qJD(1) ^ 2;
t879 = t763 * t765;
t878 = t905 + t925;
t877 = t906 - t924;
t597 = t759 * t654 + t655 * t754;
t876 = -qJD(6) * t597 - t869 * t754 + t870 * t759;
t598 = -t654 * t754 + t655 * t759;
t875 = qJD(6) * t598 + t870 * t754 + t869 * t759;
t874 = t760 * t533 - t530;
t873 = t869 * pkin(5) + t865;
t859 = t757 * t714 + t717 * t843;
t846 = qJD(2) * t758;
t858 = t762 * t714 + t846 * t900;
t715 = pkin(3) * t887 + t758 * pkin(7);
t833 = pkin(4) * qJD(5) * t716;
t672 = t773 * pkin(3) + pkin(7) * t845;
t745 = -pkin(3) * t762 - pkin(2);
t825 = t763 * t844;
t820 = MDP(15) * t846;
t647 = pkin(3) * t669 + pkin(7) * t822;
t819 = pkin(1) * t910;
t605 = -qJD(2) * t778 - t681 * t902;
t601 = t783 * qJD(2) + (-t740 + (pkin(9) * t758 - t717) * t757) * qJD(3) + t858;
t604 = -t773 * pkin(9) + (-t758 * t836 - t825) * pkin(7) + t859;
t809 = t761 * t601 - t604 * t756;
t501 = pkin(4) * t846 - pkin(10) * t605 - qJD(4) * t863 + t809;
t606 = -t842 * t887 + (t885 * t902 + t828) * t761 + t903 * t756;
t777 = t756 * t601 + t761 * t604 + t657 * t841 - t664 * t842;
t503 = -pkin(10) * t606 + t777;
t816 = t760 * t501 - t503 * t755;
t814 = -t533 * t755 - t532;
t810 = t760 * t578 - t582 * t755;
t807 = t760 * t631 - t632 * t755;
t803 = t703 + t836;
t802 = -t705 + t847;
t801 = qJD(6) * t485 + t470;
t797 = -pkin(3) * t891 + t760 * t744;
t660 = pkin(4) * t681 + t715;
t614 = pkin(3) * t705 - t928;
t544 = -pkin(11) * t655 + t807;
t794 = -t869 * pkin(11) + qJD(6) * t544 + t904;
t545 = -pkin(11) * t654 + t866;
t793 = pkin(5) * t849 + t870 * pkin(11) + t866 * qJD(5) + qJD(6) * t545 + t919 * t755 + t907;
t474 = t754 * t485 + t882;
t625 = -t681 * t755 - t682 * t760;
t512 = -pkin(5) * t763 - pkin(11) * t625 + t810;
t624 = t760 * t681 - t682 * t755;
t513 = -pkin(11) * t624 + t868;
t792 = t512 * t754 + t513 * t759;
t571 = t759 * t624 + t625 * t754;
t572 = -t624 * t754 + t625 * t759;
t683 = pkin(5) + t797;
t685 = pkin(3) * t889 + t744 * t755;
t787 = t683 * t759 - t685 * t754;
t786 = t683 * t754 + t685 * t759;
t784 = qJD(1) * t752 - t738 * t763;
t676 = pkin(4) * t706 + t745;
t583 = pkin(4) * t606 + t672;
t542 = -pkin(4) * t767 + t647;
t743 = pkin(4) * t760 + pkin(5);
t781 = pkin(4) * t890 + t743 * t754;
t780 = -pkin(4) * t892 + t743 * t759;
t775 = t755 * t501 + t760 * t503 + t578 * t839 - t582 * t840;
t611 = pkin(5) * t654 + t676;
t589 = pkin(5) * t624 + t660;
t546 = -t928 - t933;
t543 = t614 - t933;
t516 = qJD(5) * t625 + t605 * t755 + t760 * t606;
t515 = -qJD(5) * t624 + t605 * t760 - t606 * t755;
t511 = pkin(5) * t516 + t583;
t492 = t874 + t924;
t491 = t814 + t925;
t483 = -pkin(5) * t768 + t542;
t478 = qJD(6) * t572 + t515 * t754 + t759 * t516;
t477 = -qJD(6) * t571 + t515 * t759 - t516 * t754;
t473 = -t490 * t754 + t883;
t472 = -pkin(11) * t516 + t775;
t471 = pkin(5) * t846 - pkin(11) * t515 - qJD(5) * t868 + t816;
t1 = [(-t475 * t571 + t477 * t936 + t478 * t790 + t572 * t769) * MDP(33) + (-(t471 * t759 - t472 * t754) * t716 - t818 * t763 - t511 * t936 - t589 * t769 + t483 * t571 + t541 * t478 + (t474 * t763 + t716 * t792) * qJD(6)) * MDP(37) + ((-qJD(1) * t868 - t496) * MDP(31) + (-qJD(1) * t863 - t550) * MDP(24) + (qJD(1) * t806 + t549) * MDP(23) + (qJD(1) * t572 - t790) * MDP(34) + (-qJD(1) * t571 + t936) * MDP(35) + (qJD(1) * t810 + t495) * MDP(30) + (-qJD(1) * t792 - t474) * MDP(38) + ((t512 * t759 - t513 * t754) * qJD(1) + t473) * MDP(37) + (-qJD(1) * t682 - t785) * MDP(20) + (-qJD(1) * t681 - t650) * MDP(21) + (qJD(1) * t625 - t789) * MDP(27) + (-qJD(1) * t624 - t592) * MDP(28) + (-t728 - t848) * MDP(22) + (-t720 - t848) * MDP(29) + (-t716 - t848) * MDP(36)) * t846 + (t478 * t716 - t763 * t769) * MDP(35) + (t516 * t720 - t763 * t768) * MDP(28) + (-t508 * t624 - t515 * t592 + t516 * t789 + t625 * t768) * MDP(26) + (t606 * t728 - t763 * t767) * MDP(21) + (-t574 * t681 - t605 * t650 + t606 * t785 - t682 * t767) * MDP(19) + (-t809 * t728 - t812 * t763 + t672 * t650 - t715 * t767 + t647 * t681 + t671 * t606 + (t550 * t763 + t728 * t863) * qJD(4)) * MDP(23) + (-t816 * t720 - t817 * t763 + t583 * t592 - t660 * t768 + t542 * t624 + t608 * t516 + (t496 * t763 + t720 * t868) * qJD(5)) * MDP(30) + MDP(6) * t880 + (t668 * t885 + t705 * t903) * MDP(11) + (-t574 * t763 - t605 * t728) * MDP(20) + (-t508 * t763 - t515 * t720) * MDP(27) + (-t475 * t763 - t477 * t716) * MDP(34) + (t660 * t508 + t608 * t515 + t542 * t625 - t583 * t789 + t775 * t720 - t799 * t763) * MDP(31) + (t508 * t625 - t515 * t789) * MDP(25) + (t715 * t574 + t671 * t605 - t647 * t682 - t672 * t785 + t777 * t728 - t798 * t763) * MDP(24) + (-t574 * t682 - t605 * t785) * MDP(18) + (t589 * t475 + t541 * t477 + t483 * t572 - t488 * t763 - t511 * t790 + ((-qJD(6) * t513 + t471) * t716 + t469 * t763) * t754 + ((qJD(6) * t512 + t472) * t716 + t801 * t763) * t759) * MDP(38) + (t475 * t572 - t477 * t790) * MDP(32) + ((-t703 * t762 - t705 * t757) * t845 + (-t898 - t669 * t762 + (t703 * t757 - t705 * t762) * qJD(3)) * t758) * MDP(12) + ((-pkin(7) * t825 + t859) * t738 + t782 * t763 + (pkin(7) * t668 - t722 * t844) * t758 + ((pkin(7) * t705 + t894) * t763 + (-pkin(7) * t893 - qJD(1) * t854 - t659) * t758) * qJD(2)) * MDP(17) + (-(-t717 * t844 + t858) * t738 + (t722 * t843 + pkin(7) * t669 + (qJD(1) * t702 + t658) * qJD(2)) * t758 + ((pkin(7) * t703 + t895) * qJD(2) + (t888 + (pkin(7) * t738 + t723) * t762) * qJD(3) + t860) * t763) * MDP(16) - MDP(7) * t884 + (pkin(7) * t884 + t763 * t819) * MDP(10) + (-pkin(7) * t880 + t758 * t819) * MDP(9) + (-t738 - t848) * t820 + (t738 * t826 - t668 * t763 + (t705 * t758 + t762 * t784) * qJD(2)) * MDP(13) + (t738 * t824 + t669 * t763 + (-t703 * t758 - t757 * t784) * qJD(2)) * MDP(14) + 0.2e1 * t822 * t909 + t908 * t910; (t483 * t597 + t875 * t541 - t611 * t769 - t873 * t936) * MDP(37) + (-t475 * t597 + t598 * t769 + t790 * t875 + t876 * t936) * MDP(33) + (((t544 * t759 - t545 * t754) * qJD(2) - t473) * MDP(37) + (-qJD(2) * t597 - t936) * MDP(35) + (-(t544 * t754 + t545 * t759) * qJD(2) + t474) * MDP(38) + (qJD(2) * t598 + t790) * MDP(34) + (qJD(2) * t655 + t789) * MDP(27) + (-qJD(2) * t866 + t496) * MDP(31) + (qJD(2) * t807 - t495) * MDP(30) + (-qJD(2) * t654 + t592) * MDP(28) + (-qJD(2) * t857 + t550) * MDP(24) + (-qJD(2) * t706 + t650) * MDP(21) + (qJD(2) * t804 - t549) * MDP(23) + (qJD(2) * t707 + t785) * MDP(20) + t716 * MDP(36) + t738 * MDP(15) + t728 * MDP(22) + t720 * MDP(29)) * t849 + (t904 * MDP(31) + (t632 * t839 + (qJD(5) * t631 + t919) * t755 + t907) * MDP(30) - t870 * MDP(27) + t869 * MDP(28)) * t720 + ((t754 * t794 + t759 * t793) * MDP(37) + (-t754 * t793 + t759 * t794) * MDP(38) + t875 * MDP(35) - t876 * MDP(34)) * t716 + (-t508 * t654 - t592 * t870 + t655 * t768 + t789 * t869) * MDP(26) + (t542 * t654 + t865 * t592 + t869 * t608 - t676 * t768) * MDP(30) + (-t574 * t706 - t650 * t862 + t707 * t767 + t785 * t861) * MDP(19) + (t647 * t706 + t796 * t650 + t861 * t671 - t745 * t767) * MDP(23) + (t676 * t508 + t542 * t655 + t870 * t608 - t789 * t865) * MDP(31) + (t508 * t655 - t789 * t870) * MDP(25) + (t745 * t574 + t647 * t707 + t862 * t671 - t785 * t796) * MDP(24) + (t574 * t707 - t785 * t862) * MDP(18) + (t611 * t475 + t483 * t598 + t876 * t541 - t790 * t873) * MDP(38) + (t475 * t598 - t790 * t876) * MDP(32) + (t930 * MDP(24) + (t725 * t841 + (-qJD(4) * t724 + t937) * t756 + t931) * MDP(23) + t861 * MDP(21) - t862 * MDP(20)) * t728 + (-t705 * t893 + t898) * MDP(11) + (-pkin(2) * t668 - t690 * t738 + (-pkin(8) * t738 * t757 + t894) * qJD(3) + (-t722 * t881 + (-pkin(8) * t836 + t659) * t758 + (t738 * t885 + t763 * t802) * pkin(7)) * qJD(1)) * MDP(17) + (-pkin(2) * t669 + t856 * t738 + (pkin(8) * t893 + t895) * qJD(3) + ((-pkin(8) * t847 - t658) * t758 + (-pkin(7) * t803 - t895) * t763) * qJD(1)) * MDP(16) + ((t668 + t897) * t762 + (-t669 + t896) * t757) * MDP(12) + (t738 * t844 + (-t738 * t886 + t758 * t803) * qJD(1)) * MDP(14) + (-t738 * t843 + (t738 * t881 + t758 * t802) * qJD(1)) * MDP(13) - t879 * t909 + t765 * t908 + (MDP(9) * t758 * t765 + MDP(10) * t879) * pkin(1); (t787 * t823 + t543 * t936 + (t754 * t877 + t759 * t878) * t716 + (t716 * t786 - t474) * qJD(6) + t918) * MDP(37) + (-t614 * t592 + t720 * t905 + t797 * t823 + t916) * MDP(30) + (t614 * t789 - t685 * t823 + t720 * t906 + t917) * MDP(31) + (-t786 * t823 + t543 * t790 + (-t754 * t878 + t759 * t877) * t716 + (t716 * t787 - t883) * qJD(6) + t939) * MDP(38) + qJD(1) * t820 + (-t658 * t738 + t703 * t722 - t766) * MDP(17) + t705 * t703 * MDP(11) + (t808 * t728 + (-t650 * t705 + t728 * t842 + t761 * t823) * pkin(3) + t914) * MDP(23) + (-t867 * t728 + (t705 * t785 + t728 * t841 - t756 * t823) * pkin(3) + t915) * MDP(24) + (t668 - t897) * MDP(13) + (-t659 * t738 - t705 * t722 + t772) * MDP(16) + (-t703 ^ 2 + t705 ^ 2) * MDP(12) + (-t669 - t896) * MDP(14) + t941; (-t550 * t728 + t914) * MDP(23) + (t814 * t720 + (t592 * t785 + t720 * t840 + t760 * t823) * pkin(4) + t916) * MDP(30) + (-t874 * t720 + (t720 * t839 - t755 * t823 - t785 * t789) * pkin(4) + t917) * MDP(31) + (-t781 * t823 - (t491 * t754 + t492 * t759) * t716 + t546 * t790 + (t759 * t760 - t892) * t833 + (t716 * t780 - t883) * qJD(6) + t939) * MDP(38) + (t780 * t823 + (t491 * t759 - t492 * t754) * t716 + t546 * t936 - (-t754 * t760 - t890) * t833 + (t716 * t781 - t474) * qJD(6) + t918) * MDP(37) + (-t549 * t728 + t915) * MDP(24) + t941; (-t496 * t720 + t916) * MDP(30) + (-t495 * t720 + t917) * MDP(31) + ((-t489 * t754 - t882) * t716 - t474 * qJD(6) + (t716 * t838 + t759 * t823 - t789 * t936) * pkin(5) + t918) * MDP(37) + ((t490 * t716 - t469) * t754 + (-t489 * t716 - t801) * t759 + (t716 * t837 - t754 * t823 - t789 * t790) * pkin(5) + t942) * MDP(38) + t943; (t832 + t922) * MDP(34) + (-t815 + t921) * MDP(35) + (-t474 * t716 + t918) * MDP(37) + (-t473 * t716 + t939) * MDP(38) + (MDP(34) * t899 + MDP(35) * t790 - MDP(37) * t474 - MDP(38) * t883) * qJD(6) + t944;];
tauc  = t1;
