% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR4_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR4_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR4_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR4_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR4_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR4_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:51:35
% EndTime: 2019-03-10 03:52:24
% DurationCPUTime: 27.49s
% Computational Cost: add. (43274->907), mult. (97247->1183), div. (0->0), fcn. (71714->18), ass. (0->378)
t428 = sin(qJ(2));
t433 = cos(qJ(2));
t474 = pkin(2) * t428 - pkin(8) * t433;
t352 = t474 * qJD(1);
t432 = cos(qJ(3));
t427 = sin(qJ(3));
t514 = qJD(1) * t428;
t492 = t427 * t514;
t275 = pkin(7) * t492 + t432 * t352;
t528 = t432 * t433;
t460 = pkin(3) * t428 - pkin(9) * t528;
t435 = -pkin(9) - pkin(8);
t494 = qJD(3) * t435;
t637 = -qJD(1) * t460 + t432 * t494 - t275;
t327 = t427 * t352;
t532 = t428 * t432;
t534 = t427 * t433;
t636 = t327 + (-pkin(7) * t532 - pkin(9) * t534) * qJD(1) - t427 * t494;
t431 = cos(qJ(4));
t426 = sin(qJ(4));
t537 = t426 * t427;
t345 = -t431 * t432 + t537;
t498 = qJD(3) + qJD(4);
t505 = qJD(4) * t431;
t507 = qJD(3) * t432;
t513 = qJD(1) * t433;
t520 = -t345 * t513 - t431 * t507 - t432 * t505 + t498 * t537;
t346 = t426 * t432 + t427 * t431;
t270 = t498 * t346;
t519 = -t346 * t513 + t270;
t501 = t432 * qJD(2);
t342 = t492 - t501;
t491 = t432 * t514;
t512 = qJD(2) * t427;
t344 = t491 + t512;
t255 = t431 * t342 + t344 * t426;
t425 = sin(qJ(5));
t430 = cos(qJ(5));
t465 = t342 * t426 - t431 * t344;
t174 = t430 * t255 - t425 * t465;
t424 = sin(qJ(6));
t581 = cos(qJ(6));
t599 = -t255 * t425 - t430 * t465;
t628 = -t424 * t174 + t581 * t599;
t93 = t581 * t174 + t424 * t599;
t565 = t93 * t628;
t370 = t435 * t427;
t371 = t435 * t432;
t506 = qJD(4) * t426;
t523 = t370 * t505 + t371 * t506 + t426 * t637 - t636 * t431;
t274 = t426 * t370 - t431 * t371;
t522 = -qJD(4) * t274 + t636 * t426 + t431 * t637;
t611 = t628 ^ 2 - t93 ^ 2;
t500 = qJD(1) * qJD(2);
t484 = t433 * t500;
t499 = t428 * qJDD(1);
t508 = qJD(3) * t428;
t612 = qJD(1) * t508 - qJDD(2);
t236 = -qJD(3) * t501 + (-t484 - t499) * t432 + t612 * t427;
t237 = t427 * (qJD(2) * (qJD(3) + t513) + t499) + t612 * t432;
t126 = t431 * t236 + t426 * t237 + t342 * t505 + t344 * t506;
t444 = qJD(4) * t465 + t236 * t426 - t431 * t237;
t503 = qJD(5) * t430;
t504 = qJD(5) * t425;
t459 = -t425 * t126 - t255 * t504 - t430 * t444 - t465 * t503;
t486 = qJD(6) * t581;
t502 = qJD(6) * t424;
t53 = t430 * t126 + t255 * t503 - t425 * t444 - t465 * t504;
t14 = t174 * t486 + t424 * t459 + t502 * t599 + t581 * t53;
t389 = -qJD(3) + t513;
t376 = -qJD(4) + t389;
t367 = -qJD(5) + t376;
t358 = -qJD(6) + t367;
t608 = -t358 * t93 - t14;
t475 = pkin(2) * t433 + pkin(8) * t428;
t361 = -pkin(1) - t475;
t333 = t361 * qJD(1);
t404 = pkin(7) * t513;
t369 = qJD(2) * pkin(8) + t404;
t265 = t432 * t333 - t369 * t427;
t213 = -pkin(9) * t344 + t265;
t199 = -pkin(3) * t389 + t213;
t266 = t333 * t427 + t369 * t432;
t214 = -pkin(9) * t342 + t266;
t206 = t431 * t214;
t132 = t199 * t426 + t206;
t619 = pkin(10) * t255;
t107 = t132 - t619;
t101 = t425 * t107;
t204 = t426 * t214;
t131 = t431 * t199 - t204;
t618 = pkin(10) * t465;
t106 = t131 + t618;
t99 = -pkin(4) * t376 + t106;
t54 = t430 * t99 - t101;
t596 = pkin(11) * t599;
t44 = t54 - t596;
t38 = -pkin(5) * t367 + t44;
t103 = t430 * t107;
t55 = t425 * t99 + t103;
t617 = pkin(11) * t174;
t45 = t55 - t617;
t560 = t424 * t45;
t16 = t38 * t581 - t560;
t496 = t581 * t45;
t17 = t424 * t38 + t496;
t630 = -t16 * t93 + t17 * t628;
t409 = t433 * qJDD(1);
t592 = -t428 * t500 + t409;
t339 = qJDD(3) - t592;
t332 = qJDD(4) + t339;
t317 = qJDD(5) + t332;
t351 = t474 * qJD(2);
t271 = qJD(1) * t351 + qJDD(1) * t361;
t260 = t432 * t271;
t311 = pkin(7) * t592 + qJDD(2) * pkin(8);
t159 = -qJD(3) * t266 - t311 * t427 + t260;
t109 = pkin(3) * t339 + pkin(9) * t236 + t159;
t509 = qJD(3) * t427;
t158 = t427 * t271 + t432 * t311 + t333 * t507 - t369 * t509;
t117 = -pkin(9) * t237 + t158;
t40 = -qJD(4) * t132 + t431 * t109 - t117 * t426;
t30 = pkin(4) * t332 + pkin(10) * t126 + t40;
t479 = -t426 * t109 - t431 * t117 - t199 * t505 + t214 * t506;
t32 = pkin(10) * t444 - t479;
t9 = -qJD(5) * t55 + t430 * t30 - t32 * t425;
t6 = pkin(5) * t317 + pkin(11) * t53 + t9;
t8 = -t107 * t504 + t425 * t30 + t430 * t32 + t99 * t503;
t7 = -pkin(11) * t459 + t8;
t1 = t38 * t486 + t424 * t6 - t45 * t502 + t581 * t7;
t368 = -qJD(2) * pkin(2) + pkin(7) * t514;
t282 = pkin(3) * t342 + t368;
t196 = pkin(4) * t255 + t282;
t115 = pkin(5) * t174 + t196;
t423 = qJ(3) + qJ(4);
t413 = qJ(5) + t423;
t402 = qJ(6) + t413;
t386 = sin(t402);
t387 = cos(t402);
t434 = cos(qJ(1));
t429 = sin(qJ(1));
t529 = t429 * t433;
t278 = t386 * t434 - t387 * t529;
t527 = t433 * t434;
t280 = t386 * t429 + t387 * t527;
t567 = g(3) * t428;
t607 = g(1) * t280 - g(2) * t278 + t115 * t93 + t387 * t567 - t1;
t633 = -pkin(4) * t514 + pkin(10) * t520 + t522;
t632 = pkin(10) * t519 - t523;
t15 = qJD(6) * t628 - t424 * t53 + t581 * t459;
t585 = -t358 * t628 - t15;
t2 = -qJD(6) * t17 - t424 * t7 + t581 * t6;
t277 = t386 * t529 + t387 * t434;
t279 = -t386 * t527 + t387 * t429;
t587 = -g(1) * t279 + g(2) * t277 - t115 * t628 + t386 * t567 + t2;
t550 = t174 * t599;
t525 = t345 * t503 + t346 * t504 + t519 * t425 + t520 * t430;
t262 = -t345 * t425 + t346 * t430;
t524 = qJD(5) * t262 - t520 * t425 + t519 * t430;
t401 = pkin(7) * t499;
t312 = -qJDD(2) * pkin(2) + pkin(7) * t484 + t401;
t473 = g(1) * t434 + g(2) * t429;
t566 = g(3) * t433;
t450 = t428 * t473 - t566;
t445 = -t312 + t450;
t631 = pkin(8) * qJD(3) * t389 + t445;
t610 = -t174 ^ 2 + t599 ^ 2;
t606 = -t174 * t367 - t53;
t629 = -t54 * t174 + t55 * t599;
t396 = sin(t413);
t397 = cos(t413);
t286 = t396 * t434 - t397 * t529;
t288 = t396 * t429 + t397 * t527;
t604 = g(1) * t288 - g(2) * t286 + t174 * t196 + t397 * t567 - t8;
t625 = pkin(5) * t599;
t273 = t431 * t370 + t371 * t426;
t228 = -pkin(10) * t346 + t273;
t229 = -pkin(10) * t345 + t274;
t562 = t228 * t503 - t229 * t504 + t633 * t425 - t632 * t430;
t161 = t425 * t228 + t430 * t229;
t561 = -qJD(5) * t161 + t632 * t425 + t633 * t430;
t143 = -t213 * t426 - t206;
t113 = t143 + t619;
t144 = t431 * t213 - t204;
t114 = t144 + t618;
t399 = pkin(3) * t431 + pkin(4);
t538 = t425 * t426;
t553 = -t425 * t113 - t430 * t114 + t399 * t503 + (-t426 * t504 + (t430 * t431 - t538) * qJD(4)) * pkin(3);
t536 = t426 * t430;
t552 = -t430 * t113 + t114 * t425 - t399 * t504 + (-t426 * t503 + (-t425 * t431 - t536) * qJD(4)) * pkin(3);
t285 = t396 * t529 + t397 * t434;
t287 = -t396 * t527 + t397 * t429;
t589 = -g(1) * t287 + g(2) * t285 + t396 * t567;
t586 = -t196 * t599 + t589 + t9;
t584 = -t367 * t599 - t459;
t620 = pkin(4) * t465;
t616 = -t524 * pkin(11) + t562;
t615 = -pkin(5) * t514 + t525 * pkin(11) + t561;
t614 = t553 + t596;
t613 = t552 - t617;
t547 = t255 * t465;
t580 = pkin(3) * t427;
t476 = pkin(3) * t509 - t513 * t580 - t404;
t510 = qJD(2) * t433;
t490 = t427 * t510;
t451 = t428 * t507 + t490;
t609 = -t255 ^ 2 + t465 ^ 2;
t605 = -t255 * t376 - t126;
t411 = sin(t423);
t412 = cos(t423);
t299 = t411 * t434 - t412 * t529;
t301 = t411 * t429 + t412 * t527;
t602 = g(1) * t301 - g(2) * t299 + t255 * t282 + t412 * t567 + t479;
t298 = t411 * t529 + t412 * t434;
t300 = -t411 * t527 + t412 * t429;
t588 = -g(1) * t300 + g(2) * t298 + t411 * t567;
t601 = t465 * t282 + t40 + t588;
t600 = t376 * t465 + t444;
t341 = t432 * t361;
t578 = pkin(7) * t427;
t264 = -pkin(9) * t532 + t341 + (-pkin(3) - t578) * t433;
t391 = pkin(7) * t528;
t291 = t427 * t361 + t391;
t535 = t427 * t428;
t272 = -pkin(9) * t535 + t291;
t184 = t431 * t264 - t272 * t426;
t307 = t345 * t428;
t155 = -pkin(4) * t433 + pkin(10) * t307 + t184;
t185 = t426 * t264 + t431 * t272;
t306 = t346 * t428;
t162 = -pkin(10) * t306 + t185;
t81 = t425 * t155 + t430 * t162;
t593 = t265 * t389 + t158;
t521 = t519 * pkin(4) + t476;
t489 = t433 * t501;
t591 = -t427 * t508 + t489;
t321 = t427 * t529 + t432 * t434;
t323 = -t427 * t527 + t429 * t432;
t590 = -g(1) * t323 + g(2) * t321;
t582 = -0.2e1 * pkin(1);
t579 = pkin(4) * t411;
t574 = g(1) * t429;
t568 = g(2) * t434;
t160 = t430 * t228 - t229 * t425;
t121 = -pkin(11) * t262 + t160;
t261 = t430 * t345 + t346 * t425;
t122 = -pkin(11) * t261 + t161;
t72 = t121 * t581 - t424 * t122;
t564 = qJD(6) * t72 + t424 * t615 + t581 * t616;
t73 = t424 * t121 + t122 * t581;
t563 = -qJD(6) * t73 - t424 * t616 + t581 * t615;
t417 = t432 * pkin(3);
t400 = t417 + pkin(2);
t314 = -pkin(3) * t538 + t430 * t399;
t308 = pkin(5) + t314;
t316 = pkin(3) * t536 + t399 * t425;
t221 = t308 * t581 - t424 * t316;
t559 = qJD(6) * t221 + t424 * t613 + t581 * t614;
t222 = t424 * t308 + t316 * t581;
t558 = -qJD(6) * t222 - t424 * t614 + t581 * t613;
t180 = -t424 * t261 + t262 * t581;
t557 = -qJD(6) * t180 + t424 * t525 - t524 * t581;
t556 = t261 * t486 + t262 * t502 + t424 * t524 + t525 * t581;
t398 = pkin(4) * t430 + pkin(5);
t56 = -t106 * t425 - t103;
t46 = t56 + t617;
t57 = t430 * t106 - t101;
t47 = t57 - t596;
t539 = t424 * t425;
t555 = -t424 * t46 - t47 * t581 + t398 * t486 + (-t425 * t502 + (t430 * t581 - t539) * qJD(5)) * pkin(4);
t493 = t581 * t425;
t554 = t424 * t47 - t46 * t581 - t398 * t502 + (-t425 * t486 + (-t424 * t430 - t493) * qJD(5)) * pkin(4);
t551 = pkin(7) * qJDD(1);
t549 = t236 * t427;
t548 = t237 * t432;
t545 = t266 * t389;
t544 = t342 * t389;
t543 = t342 * t427;
t542 = t344 * t342;
t541 = t344 * t389;
t540 = t344 * t432;
t533 = t427 * t434;
t531 = t428 * t434;
t530 = t428 * t435;
t526 = pkin(5) * t524 + t521;
t511 = qJD(2) * t428;
t518 = t432 * t351 + t511 * t578;
t394 = pkin(4) * t412;
t360 = t394 + t417;
t355 = pkin(3) * t535 + t428 * pkin(7);
t517 = t434 * pkin(1) + t429 * pkin(7);
t421 = t428 ^ 2;
t422 = t433 ^ 2;
t516 = t421 - t422;
t515 = t421 + t422;
t420 = -pkin(10) + t435;
t437 = qJD(1) ^ 2;
t495 = t428 * t437 * t433;
t385 = pkin(5) * t397;
t303 = t385 + t360;
t283 = pkin(3) * t451 + pkin(7) * t510;
t80 = t430 * t155 - t162 * t425;
t294 = pkin(4) * t345 - t400;
t478 = t428 * t484;
t392 = t428 * t574;
t477 = -g(2) * t531 + t392;
t267 = pkin(4) * t306 + t355;
t203 = pkin(3) * t344 - t620;
t336 = -pkin(5) * t396 - t579;
t472 = pkin(7) * t342 + t368 * t427;
t471 = pkin(7) * t344 + t368 * t432;
t470 = -pkin(8) * t339 + qJD(3) * t368;
t468 = -t265 * t432 - t266 * t427;
t297 = pkin(2) + t303;
t414 = -pkin(11) + t420;
t467 = t297 * t433 - t414 * t428;
t217 = -t306 * t425 - t307 * t430;
t350 = pkin(2) + t360;
t464 = t350 * t433 - t420 * t428;
t462 = t400 * t433 - t530;
t192 = -t506 * t535 + (t498 * t532 + t490) * t431 + t591 * t426;
t163 = pkin(4) * t192 + t283;
t74 = -pkin(5) * t433 - pkin(11) * t217 + t80;
t216 = t430 * t306 - t307 * t425;
t75 = -pkin(11) * t216 + t81;
t34 = -t424 * t75 + t581 * t74;
t35 = t424 * t74 + t581 * t75;
t457 = -pkin(7) * qJDD(2) + t500 * t582;
t152 = -t424 * t216 + t217 * t581;
t455 = t339 * t427 - t389 * t507;
t454 = t339 * t432 + t389 * t509;
t191 = t270 * t428 + t426 * t490 - t431 * t489;
t183 = t460 * qJD(2) + (-t391 + (pkin(9) * t428 - t361) * t427) * qJD(3) + t518;
t210 = t427 * t351 + t361 * t507 + (-t428 * t501 - t433 * t509) * pkin(7);
t190 = -pkin(9) * t451 + t210;
t79 = -qJD(4) * t185 + t431 * t183 - t190 * t426;
t64 = pkin(4) * t511 + pkin(10) * t191 + t79;
t78 = t426 * t183 + t431 * t190 + t264 * t505 - t272 * t506;
t68 = -pkin(10) * t192 + t78;
t20 = t155 * t503 - t162 * t504 + t425 * t64 + t430 * t68;
t453 = pkin(1) * t437 + t473;
t198 = t237 * pkin(3) + t312;
t436 = qJD(2) ^ 2;
t452 = pkin(7) * t436 + qJDD(1) * t582 + t568;
t448 = -t433 * t473 - t567;
t87 = -pkin(4) * t444 + t198;
t21 = -qJD(5) * t81 - t425 * t68 + t430 * t64;
t418 = t434 * pkin(7);
t359 = t579 + t580;
t337 = t385 + t394;
t324 = t427 * t429 + t432 * t527;
t322 = -t429 * t528 + t533;
t315 = pkin(4) * t493 + t424 * t398;
t313 = -pkin(4) * t539 + t398 * t581;
t305 = qJDD(6) + t317;
t302 = -t336 + t580;
t290 = -pkin(7) * t534 + t341;
t276 = -pkin(7) * t491 + t327;
t211 = -qJD(3) * t291 + t518;
t200 = pkin(5) * t261 + t294;
t179 = t261 * t581 + t262 * t424;
t171 = pkin(5) * t216 + t267;
t151 = t216 * t581 + t217 * t424;
t128 = -t620 + t625;
t118 = t203 + t625;
t86 = qJD(5) * t217 - t191 * t425 + t430 * t192;
t85 = t430 * t191 + t425 * t192 + t306 * t503 - t307 * t504;
t71 = pkin(5) * t86 + t163;
t37 = qJD(6) * t152 - t424 * t85 + t581 * t86;
t36 = t216 * t486 + t217 * t502 + t424 * t86 + t581 * t85;
t33 = pkin(5) * t459 + t87;
t19 = t44 * t581 - t560;
t18 = -t424 * t44 - t496;
t13 = -pkin(11) * t86 + t20;
t12 = pkin(5) * t511 + pkin(11) * t85 + t21;
t4 = -qJD(6) * t35 + t12 * t581 - t424 * t13;
t3 = qJD(6) * t34 + t424 * t12 + t13 * t581;
t5 = [0, 0, 0, 0, 0, qJDD(1), -t568 + t574, t473, 0, 0, qJDD(1) * t421 + 0.2e1 * t478, 0.2e1 * t409 * t428 - 0.2e1 * t500 * t516, qJDD(2) * t428 + t433 * t436, qJDD(1) * t422 - 0.2e1 * t478, qJDD(2) * t433 - t428 * t436, 0, t457 * t428 + (-t452 + t574) * t433, t428 * t452 + t433 * t457 - t392, 0.2e1 * t515 * t551 - t473, -g(1) * (-pkin(1) * t429 + t418) - g(2) * t517 + (pkin(7) ^ 2 * t515 + pkin(1) ^ 2) * qJDD(1), -t236 * t532 + t344 * t591 (-t342 * t432 - t344 * t427) * t510 + (t549 - t548 + (-t540 + t543) * qJD(3)) * t428 (-t389 * t501 + t236) * t433 + (qJD(2) * t344 + t454) * t428, t237 * t535 + t342 * t451 (t389 * t512 + t237) * t433 + (-qJD(2) * t342 - t455) * t428, -t339 * t433 - t389 * t511, -g(1) * t322 - g(2) * t324 - t211 * t389 + t290 * t339 + (qJD(2) * t472 - t159) * t433 + (pkin(7) * t237 + qJD(2) * t265 + t312 * t427 + t368 * t507) * t428, -g(1) * t321 - g(2) * t323 + t210 * t389 - t291 * t339 + (qJD(2) * t471 + t158) * t433 + (-pkin(7) * t236 - qJD(2) * t266 + t312 * t432 - t368 * t509) * t428, -t210 * t342 - t211 * t344 + t236 * t290 - t237 * t291 + t392 + t468 * t510 + (-t568 - t158 * t427 - t159 * t432 + (t265 * t427 - t266 * t432) * qJD(3)) * t428, t158 * t291 + t266 * t210 + t159 * t290 + t265 * t211 - g(1) * t418 - g(2) * (t434 * t475 + t517) - t361 * t574 + (t312 * t428 + t368 * t510) * pkin(7), t126 * t307 + t191 * t465, t126 * t306 + t191 * t255 + t192 * t465 - t307 * t444, t126 * t433 + t191 * t376 - t307 * t332 - t465 * t511, t192 * t255 - t306 * t444, t192 * t376 - t255 * t511 - t306 * t332 - t433 * t444, -t332 * t433 - t376 * t511, -g(1) * t299 - g(2) * t301 + t131 * t511 + t184 * t332 + t192 * t282 + t198 * t306 + t255 * t283 - t355 * t444 - t376 * t79 - t40 * t433, -g(1) * t298 - g(2) * t300 - t126 * t355 - t132 * t511 - t185 * t332 - t191 * t282 - t198 * t307 - t283 * t465 + t376 * t78 - t433 * t479, t126 * t184 + t131 * t191 - t132 * t192 + t185 * t444 - t255 * t78 + t306 * t479 + t307 * t40 + t465 * t79 + t477, -t479 * t185 + t132 * t78 + t40 * t184 + t131 * t79 + t198 * t355 + t282 * t283 - g(1) * (pkin(3) * t533 + t418) - g(2) * (t400 * t527 - t434 * t530 + t517) + (-g(1) * (-pkin(1) - t462) - g(2) * t580) * t429, -t217 * t53 - t599 * t85, t85 * t174 + t53 * t216 - t217 * t459 - t599 * t86, t217 * t317 + t367 * t85 + t433 * t53 + t511 * t599, t174 * t86 + t216 * t459, -t174 * t511 - t216 * t317 + t86 * t367 + t433 * t459, -t317 * t433 - t367 * t511, -g(1) * t286 - g(2) * t288 + t163 * t174 + t196 * t86 - t21 * t367 + t87 * t216 + t267 * t459 + t80 * t317 - t9 * t433 + t511 * t54, -g(1) * t285 - g(2) * t287 + t163 * t599 - t196 * t85 + t20 * t367 + t217 * t87 - t267 * t53 - t317 * t81 + t433 * t8 - t511 * t55, -t20 * t174 - t21 * t599 - t8 * t216 - t9 * t217 - t459 * t81 + t80 * t53 + t54 * t85 - t55 * t86 + t477, t8 * t81 + t55 * t20 + t9 * t80 + t54 * t21 + t87 * t267 + t196 * t163 - g(1) * (t359 * t434 + t418) - g(2) * (t350 * t527 - t420 * t531 + t517) + (-g(1) * (-pkin(1) - t464) - g(2) * t359) * t429, -t14 * t152 - t36 * t628, t14 * t151 - t15 * t152 + t36 * t93 - t37 * t628, t14 * t433 + t152 * t305 + t358 * t36 + t511 * t628, t15 * t151 + t37 * t93, t15 * t433 - t151 * t305 + t358 * t37 - t511 * t93, -t305 * t433 - t358 * t511, -g(1) * t278 - g(2) * t280 + t115 * t37 + t15 * t171 + t151 * t33 + t16 * t511 - t2 * t433 + t305 * t34 - t358 * t4 + t71 * t93, -g(1) * t277 - g(2) * t279 + t1 * t433 - t115 * t36 - t14 * t171 + t152 * t33 - t17 * t511 + t3 * t358 - t305 * t35 + t628 * t71, -t1 * t151 + t14 * t34 - t15 * t35 - t152 * t2 + t16 * t36 - t17 * t37 - t3 * t93 - t4 * t628 + t477, t1 * t35 + t17 * t3 + t2 * t34 + t16 * t4 + t33 * t171 + t115 * t71 - g(1) * (t302 * t434 + t418) - g(2) * (t297 * t527 - t414 * t531 + t517) + (-g(1) * (-pkin(1) - t467) - g(2) * t302) * t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, t516 * t437, t499, t495, t409, qJDD(2), t428 * t453 - t401 - t566, t567 + (t453 - t551) * t433, 0, 0, -t389 * t540 - t549 (-t236 + t544) * t432 + (-t237 + t541) * t427 (-t344 * t428 + t389 * t528) * qJD(1) + t455, -t389 * t543 - t548 (t342 * t428 - t389 * t534) * qJD(1) + t454, t389 * t514, -pkin(2) * t237 + t275 * t389 + t470 * t427 + (-t265 * t428 - t433 * t472) * qJD(1) + t631 * t432, pkin(2) * t236 - t276 * t389 + t470 * t432 + (t266 * t428 - t433 * t471) * qJD(1) - t631 * t427, t275 * t344 + t276 * t342 + ((qJD(3) * t344 - t237) * pkin(8) + t593) * t432 + (-t159 + t545 + (qJD(3) * t342 - t236) * pkin(8)) * t427 + t448, -t368 * t404 - t265 * t275 - t266 * t276 + t445 * pkin(2) + (qJD(3) * t468 + t158 * t432 - t159 * t427 + t448) * pkin(8), -t126 * t346 + t465 * t520, t126 * t345 + t255 * t520 + t346 * t444 + t465 * t519, t332 * t346 + t376 * t520 + t465 * t514, t255 * t519 - t345 * t444, t255 * t514 - t332 * t345 + t376 * t519, t376 * t514, -t131 * t514 + t198 * t345 + t255 * t476 + t273 * t332 + t282 * t519 - t376 * t522 + t400 * t444 + t412 * t450, t126 * t400 + t132 * t514 + t198 * t346 - t274 * t332 - t282 * t520 + t376 * t523 - t411 * t450 - t465 * t476, t126 * t273 + t131 * t520 - t132 * t519 - t255 * t523 + t274 * t444 + t345 * t479 - t346 * t40 + t465 * t522 + t448, -g(3) * t462 + t131 * t522 + t132 * t523 - t198 * t400 + t40 * t273 - t479 * t274 + t282 * t476 + t473 * (t400 * t428 + t433 * t435) -t262 * t53 - t525 * t599, t174 * t525 + t53 * t261 - t262 * t459 - t524 * t599, t262 * t317 + t367 * t525 - t514 * t599, t174 * t524 + t261 * t459, t174 * t514 - t261 * t317 + t367 * t524, t367 * t514, t160 * t317 + t174 * t521 + t196 * t524 + t87 * t261 + t294 * t459 - t367 * t561 + t397 * t450 - t514 * t54, -t161 * t317 - t196 * t525 + t262 * t87 - t294 * t53 + t367 * t562 - t396 * t450 + t514 * t55 + t521 * t599, t160 * t53 - t161 * t459 - t174 * t562 - t8 * t261 - t9 * t262 - t524 * t55 + t525 * t54 - t561 * t599 + t448, -g(3) * t464 + t9 * t160 + t8 * t161 + t196 * t521 + t87 * t294 + t54 * t561 + t55 * t562 + t473 * (t350 * t428 + t420 * t433) -t14 * t180 - t556 * t628, t14 * t179 - t15 * t180 + t556 * t93 + t557 * t628, t180 * t305 + t358 * t556 - t514 * t628, t15 * t179 - t557 * t93, -t179 * t305 - t358 * t557 + t514 * t93, t358 * t514, -t115 * t557 + t15 * t200 - t16 * t514 + t179 * t33 + t305 * t72 - t358 * t563 + t387 * t450 + t526 * t93, -t115 * t556 - t14 * t200 + t17 * t514 + t180 * t33 - t305 * t73 + t358 * t564 - t386 * t450 + t526 * t628, -t1 * t179 + t14 * t72 - t15 * t73 + t16 * t556 + t17 * t557 - t180 * t2 - t563 * t628 - t564 * t93 + t448, -g(3) * t467 + t1 * t73 + t115 * t526 + t16 * t563 + t17 * t564 + t2 * t72 + t33 * t200 + t473 * (t297 * t428 + t414 * t433); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, -t342 ^ 2 + t344 ^ 2, -t236 - t544, -t542, -t237 - t541, t339, -t369 * t507 - t545 - t344 * t368 + t260 + (-qJD(3) * t333 - t311 + t567) * t427 + t590, g(1) * t324 - g(2) * t322 + g(3) * t532 + t342 * t368 - t593, 0, 0, -t547, t609, t605, t547, t600, t332, t143 * t376 + (-t255 * t344 + t332 * t431 + t376 * t506) * pkin(3) + t601, -t144 * t376 + (-t332 * t426 + t344 * t465 + t376 * t505) * pkin(3) + t602, -t131 * t255 - t132 * t465 - t143 * t465 + t144 * t255 + (t126 * t431 + t444 * t426 + (-t255 * t431 - t426 * t465) * qJD(4)) * pkin(3), -t131 * t143 - t132 * t144 + (-t479 * t426 + t40 * t431 - t282 * t344 + g(3) * t535 + (-t131 * t426 + t132 * t431) * qJD(4) + t590) * pkin(3), t550, t610, t606, -t550, t584, t317, -t174 * t203 + t314 * t317 - t367 * t552 + t586, -t203 * t599 - t316 * t317 + t367 * t553 + t604, -t174 * t553 + t314 * t53 - t316 * t459 - t552 * t599 + t629, t8 * t316 + t9 * t314 - t196 * t203 - g(1) * (-t359 * t527 + t360 * t429) - g(2) * (-t359 * t529 - t360 * t434) + t359 * t567 + t553 * t55 + t552 * t54, t565, t611, t608, -t565, t585, t305, -t118 * t93 + t221 * t305 - t358 * t558 + t587, -t118 * t628 - t222 * t305 + t358 * t559 + t607, t14 * t221 - t15 * t222 - t558 * t628 - t559 * t93 + t630, t1 * t222 + t2 * t221 - t115 * t118 - g(1) * (-t302 * t527 + t303 * t429) - g(2) * (-t302 * t529 - t303 * t434) + t302 * t567 + t559 * t17 + t558 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, t609, t605, t547, t600, t332, -t132 * t376 + t601, -t131 * t376 + t602, 0, 0, t550, t610, t606, -t550, t584, t317, t367 * t56 + (t174 * t465 + t317 * t430 + t367 * t504) * pkin(4) + t586, -t367 * t57 + (-t317 * t425 + t367 * t503 + t465 * t599) * pkin(4) + t604, t57 * t174 + t56 * t599 + (-t425 * t459 + t430 * t53 + (-t174 * t430 + t425 * t599) * qJD(5)) * pkin(4) + t629, -t54 * t56 - t55 * t57 + (t8 * t425 + t9 * t430 + t196 * t465 + (-t425 * t54 + t430 * t55) * qJD(5) + t588) * pkin(4), t565, t611, t608, -t565, t585, t305, -t128 * t93 + t313 * t305 - t358 * t554 + t587, -t128 * t628 - t315 * t305 + t358 * t555 + t607, t14 * t313 - t15 * t315 - t554 * t628 - t555 * t93 + t630, t1 * t315 + t2 * t313 - t115 * t128 - g(1) * (t336 * t527 + t337 * t429) - g(2) * (t336 * t529 - t337 * t434) - t336 * t567 + t555 * t17 + t554 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t550, t610, t606, -t550, t584, t317, -t367 * t55 + t586, -t367 * t54 + t604, 0, 0, t565, t611, t608, -t565, t585, t305, t18 * t358 + (t305 * t581 + t358 * t502 - t599 * t93) * pkin(5) + t587, -t19 * t358 + (-t305 * t424 + t358 * t486 - t599 * t628) * pkin(5) + t607, t18 * t628 + t19 * t93 + (t581 * t14 - t15 * t424 + (t424 * t628 - t581 * t93) * qJD(6)) * pkin(5) + t630, -t16 * t18 - t17 * t19 + (t1 * t424 + t2 * t581 - t115 * t599 + (-t16 * t424 + t17 * t581) * qJD(6) + t589) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t565, t611, t608, -t565, t585, t305, -t17 * t358 + t587, -t16 * t358 + t607, 0, 0;];
tau_reg  = t5;
