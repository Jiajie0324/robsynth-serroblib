% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR12_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:20:12
% EndTime: 2019-03-09 04:20:28
% DurationCPUTime: 16.12s
% Computational Cost: add. (13666->649), mult. (24256->822), div. (0->0), fcn. (24285->6), ass. (0->486)
t540 = cos(qJ(3));
t828 = -t540 / 0.2e1;
t537 = sin(qJ(5));
t849 = pkin(3) + pkin(8);
t675 = pkin(9) + t849;
t458 = t675 * t537;
t536 = sin(qJ(6));
t539 = cos(qJ(5));
t632 = t675 * t539;
t826 = cos(qJ(6));
t627 = -t458 * t536 + t632 * t826;
t876 = t627 / 0.2e1;
t538 = sin(qJ(3));
t522 = t540 * qJ(4);
t723 = t522 - qJ(2);
t850 = pkin(1) + pkin(7);
t515 = t540 * t850;
t629 = t540 * pkin(4) + t515;
t863 = t539 * t629;
t272 = t863 + (-t538 * t675 + t723) * t537;
t821 = t540 * pkin(5);
t544 = t272 + t821;
t543 = t536 * t544;
t610 = t537 * t629;
t740 = t539 * t538;
t273 = -t539 * t723 + t675 * t740 + t610;
t665 = t826 * t273;
t162 = t665 + t543;
t748 = t536 * t272;
t165 = -t665 - t748;
t886 = t162 + t165;
t674 = qJD(5) + qJD(6);
t363 = -t458 * t826 - t536 * t632;
t660 = t826 * t537;
t745 = t536 * t539;
t450 = t660 + t745;
t410 = t538 * t450;
t514 = t538 * t850;
t822 = t539 * pkin(5);
t669 = -pkin(4) - t822;
t413 = t538 * t669 - t514;
t507 = pkin(5) * t537 + qJ(4);
t877 = -t507 / 0.2e1;
t512 = t536 * t537;
t659 = t826 * t539;
t453 = t659 - t512;
t878 = -t453 / 0.2e1;
t885 = t363 * t828 - t410 * t877 - t413 * t878;
t477 = t538 * t659;
t743 = t537 * t538;
t407 = t536 * t743 - t477;
t879 = -t413 * t450 / 0.2e1 + t407 * t877 + t540 * t876;
t766 = t410 * t450;
t643 = -t766 / 0.2e1;
t758 = t453 * t407;
t199 = -t758 / 0.2e1 + t643;
t884 = t674 * t199;
t239 = t826 * t544;
t747 = t536 * t273;
t161 = -t239 + t747;
t666 = t826 * t272;
t166 = t666 - t747;
t883 = t161 + t166;
t795 = t161 * t450;
t840 = t450 / 0.2e1;
t585 = t795 / 0.2e1 + t166 * t840;
t635 = t162 / 0.2e1 + t165 / 0.2e1;
t411 = t450 * t540;
t662 = t826 * t411;
t478 = t540 * t659;
t742 = t537 * t540;
t409 = t536 * t742 - t478;
t770 = t409 * t536;
t865 = (t770 / 0.2e1 + t662 / 0.2e1) * pkin(5);
t13 = -t453 * t635 - t585 + t865;
t844 = -t627 / 0.2e1;
t633 = t844 + t876;
t846 = -t363 / 0.2e1;
t634 = t363 / 0.2e1 + t846;
t3 = t407 * t633 + t410 * t634 - t13;
t763 = t411 * t453;
t345 = -t763 / 0.2e1;
t100 = t763 / 0.2e1 + t345;
t810 = t100 * qJD(2);
t882 = t3 * qJD(1) - t810;
t764 = t411 * t627;
t772 = t409 * t363;
t728 = t772 / 0.2e1 - t764 / 0.2e1;
t843 = t409 / 0.2e1;
t881 = -t363 * t843 - t411 * t844 + t728;
t793 = t162 * t453;
t129 = t793 / 0.2e1;
t130 = -t793 / 0.2e1;
t768 = t410 * t363;
t780 = t627 * t407;
t853 = -t768 / 0.2e1 - t780 / 0.2e1;
t670 = t130 + t853;
t6 = t129 + t670 - t853;
t880 = qJD(1) * t6 + t810;
t521 = t538 * qJ(4);
t470 = pkin(3) * t540 + t521;
t446 = pkin(8) * t540 + t470;
t426 = t539 * t446;
t824 = t538 * pkin(4);
t459 = -t514 - t824;
t444 = t459 * t537;
t358 = t426 + t444;
t739 = t539 * t540;
t277 = pkin(9) * t739 + t358;
t664 = t826 * t277;
t617 = -t664 / 0.2e1;
t445 = t459 * t539;
t823 = t538 * pkin(5);
t264 = -t823 + t445 + (-pkin(9) * t540 - t446) * t537;
t749 = t536 * t264;
t562 = -t749 / 0.2e1 + t617;
t54 = t562 - t879;
t667 = t826 * t264;
t746 = t536 * t277;
t561 = -t746 / 0.2e1 + t667 / 0.2e1;
t56 = t561 + t885;
t53 = t561 - t885;
t626 = t674 * t450;
t874 = t453 * t626;
t873 = t538 * t849;
t839 = t453 / 0.2e1;
t871 = t165 * t839 + t585 + t865;
t438 = t453 * qJD(6);
t640 = t512 / 0.2e1;
t611 = t640 + t878;
t837 = t478 / 0.2e1;
t555 = -t540 * t611 + t837;
t855 = t555 * qJD(1);
t870 = -qJD(5) * t453 - t438 - t855;
t707 = qJD(3) * t453;
t869 = -qJD(1) * t199 + t450 * t707;
t714 = qJD(1) * t410;
t868 = -qJD(3) * t199 + t407 * t714;
t616 = t660 / 0.2e1;
t560 = t616 + t745 / 0.2e1;
t322 = (t840 - t560) * t538;
t690 = t322 * qJD(2);
t867 = t627 * t674 - t690;
t866 = t674 * t363;
t639 = t536 * t828;
t552 = t453 * t828 + t537 * t639 + t837;
t862 = t552 * t674;
t861 = t555 * t674;
t661 = t826 * t450;
t756 = t453 * t536;
t813 = pkin(5) * qJD(5);
t860 = (t661 - t756) * t813;
t838 = -t477 / 0.2e1;
t316 = t838 + (t640 + t839) * t538;
t692 = t316 * qJD(2);
t706 = qJD(3) * t507;
t857 = qJD(1) * t53 - t453 * t706 - t692;
t308 = t450 * t822 + t453 * t507;
t672 = -t826 / 0.2e1;
t829 = -t539 / 0.2e1;
t831 = -t537 / 0.2e1;
t36 = (t407 * t829 + (t450 * t831 + t672) * t538) * pkin(5) + t53;
t856 = qJD(1) * t36 - qJD(3) * t308 - t692;
t532 = t537 ^ 2;
t534 = t539 ^ 2;
t485 = t532 - t534;
t628 = 0.2e1 * t537 * t740;
t558 = qJD(1) * t628 - qJD(3) * t485;
t848 = t161 / 0.2e1;
t637 = -t410 / 0.2e1;
t842 = t410 / 0.2e1;
t841 = -t411 / 0.2e1;
t836 = -t514 / 0.2e1;
t835 = -t532 / 0.2e1;
t834 = t534 / 0.2e1;
t535 = t540 ^ 2;
t833 = t535 / 0.2e1;
t832 = t536 / 0.2e1;
t830 = t538 / 0.2e1;
t827 = t540 / 0.2e1;
t825 = t536 * pkin(5);
t60 = t450 * t633 + t453 * t634;
t820 = t60 * qJD(5);
t815 = t674 * t100;
t811 = qJD(3) * t6;
t587 = -t723 + t873;
t567 = t537 * t587;
t337 = t567 - t863;
t744 = t537 * t446;
t357 = t445 - t744;
t608 = t629 * t538;
t781 = t358 * t540;
t338 = t539 * t587 + t610;
t784 = t338 * t538;
t52 = t608 / 0.2e1 + t459 * t828 + (t337 * t830 + t357 * t827) * t539 + (t781 / 0.2e1 - t784 / 0.2e1) * t537;
t808 = t52 * qJD(3);
t21 = t129 + t130;
t803 = qJD(1) * t21;
t673 = pkin(5) * t743;
t767 = t410 * t413;
t67 = t165 * t540 + t407 * t673 + t767;
t802 = qJD(1) * t67;
t313 = t413 * t407;
t68 = t166 * t540 - t410 * t673 + t313;
t801 = qJD(1) * t68;
t79 = -t161 * t540 + t313;
t800 = qJD(1) * t79;
t80 = -t162 * t540 + t767;
t799 = qJD(1) * t80;
t563 = t756 / 0.2e1 - t661 / 0.2e1;
t533 = t538 ^ 2;
t751 = t533 * t537;
t11 = (t166 / 0.2e1 + t848) * t411 - t635 * t409 + (-t751 / 0.2e1 + t563) * pkin(5);
t797 = t11 * qJD(1);
t796 = t161 * t411;
t794 = t162 * t409;
t163 = t667 - t746;
t792 = t163 * t453;
t164 = t664 + t749;
t791 = t164 * t450;
t39 = t794 - t796;
t18 = -t163 * t410 - t164 * t407 - t39;
t790 = t18 * qJD(1);
t19 = -t407 * t883 - t410 * t886;
t789 = t19 * qJD(1);
t414 = t540 * t669 - t515;
t22 = -t161 * t163 + t162 * t164 + t413 * t414;
t788 = t22 * qJD(1);
t23 = -t161 * t165 + t162 * t166 + t413 * t673;
t787 = t23 * qJD(1);
t29 = t161 * t538 + t163 * t540 + t407 * t414 + t409 * t413;
t786 = t29 * qJD(1);
t30 = -t162 * t538 + t164 * t540 - t410 * t414 - t411 * t413;
t785 = t30 * qJD(1);
t783 = t357 * t539;
t782 = t358 * t537;
t775 = t39 * qJD(1);
t40 = t793 + t795;
t774 = t40 * qJD(1);
t773 = t407 * t538;
t771 = t409 * t450;
t769 = t409 * t540;
t765 = t410 * t536;
t762 = t411 * t540;
t759 = t450 * t507;
t638 = t743 / 0.2e1;
t48 = (-t821 + t567 / 0.2e1 - t863 / 0.2e1 + pkin(9) * t638 + t272 / 0.2e1) * t536;
t755 = t48 * qJD(1);
t621 = pkin(5) * t672;
t568 = -t239 / 0.2e1 + t540 * t621;
t50 = t666 / 0.2e1 + t568;
t754 = t50 * qJD(1);
t750 = t533 * t539;
t741 = t538 * t410;
t175 = t337 * t742 + t338 * t739;
t65 = (-t357 * t537 + t358 * t539) * t538 + t175;
t738 = t65 * qJD(1);
t153 = t407 * t450 - t410 * t453;
t735 = t674 * t153;
t577 = t762 / 0.2e1 + t741 / 0.2e1;
t207 = -t560 - t577;
t323 = (t840 + t560) * t540;
t732 = qJD(2) * t207 + qJD(4) * t323;
t581 = -t773 / 0.2e1 - t769 / 0.2e1;
t586 = t640 - t659 / 0.2e1;
t208 = -t581 + t586;
t731 = qJD(2) * t208 + qJD(4) * t555;
t209 = t581 + t586;
t730 = qJD(2) * t209 + qJD(4) * t552;
t210 = -t560 + t577;
t325 = t540 * t560 + t841;
t729 = qJD(2) * t210 + qJD(4) * t325;
t727 = t674 * t325;
t726 = t674 * t323;
t636 = t740 / 0.2e1;
t724 = t536 * t636 + t538 * t616;
t486 = t533 - t535;
t722 = qJD(1) * t175;
t183 = -t407 * t409 - t410 * t411;
t721 = qJD(1) * t183;
t186 = t337 * t537 + t338 * t539;
t720 = qJD(1) * t186;
t597 = t758 - t766;
t719 = qJD(1) * t597;
t214 = -t337 * t540 - t459 * t740;
t718 = qJD(1) * t214;
t215 = -t338 * t540 + t459 * t743;
t717 = qJD(1) * t215;
t263 = -t741 + t762;
t716 = qJD(1) * t263;
t715 = qJD(1) * t407;
t452 = t486 * t537;
t713 = qJD(1) * t452;
t456 = t486 * t539;
t712 = qJD(1) * t456;
t711 = qJD(2) * t540;
t710 = qJD(3) * t100;
t708 = qJD(3) * t450;
t705 = qJD(4) * t540;
t704 = qJD(5) * t537;
t703 = qJD(5) * t539;
t702 = qJD(5) * t540;
t701 = qJD(5) * t849;
t133 = (t357 - t445) * t540 + (t337 + t863) * t538;
t698 = t133 * qJD(1);
t134 = -t459 * t742 + t537 * t608 + t781 - t784;
t697 = t134 * qJD(1);
t185 = -t407 * t411 - t409 * t410;
t696 = t185 * qJD(1);
t695 = t207 * qJD(1);
t694 = t208 * qJD(1);
t262 = -t769 + t773;
t693 = t262 * qJD(1);
t317 = t538 * t611 + t838;
t691 = t317 * qJD(3);
t284 = t323 * qJD(1);
t471 = -t538 * pkin(3) + t522;
t457 = qJ(2) - t471;
t365 = t457 * t540 + t470 * t538;
t689 = t365 * qJD(1);
t366 = -t457 * t538 + t470 * t540;
t688 = t366 * qJD(1);
t455 = (t532 + t534) * t538;
t412 = t540 * t455;
t687 = t412 * qJD(1);
t615 = -0.1e1 / 0.2e1 - t535 / 0.2e1 - t533 / 0.2e1;
t415 = t615 * t537;
t686 = t415 * qJD(1);
t418 = t615 * t539;
t685 = t418 * qJD(1);
t441 = (t834 + t835) * t538;
t684 = t441 * qJD(5);
t683 = t455 * qJD(1);
t682 = t457 * qJD(1);
t681 = t486 * qJD(1);
t680 = t535 * qJD(1);
t679 = t537 * qJD(3);
t518 = t538 * qJD(1);
t517 = t538 * qJD(3);
t678 = t538 * qJD(4);
t677 = t538 * qJD(5);
t676 = t539 * qJD(3);
t520 = t540 * qJD(1);
t519 = t540 * qJD(3);
t671 = t822 / 0.2e1;
t668 = qJD(3) * t850;
t663 = t826 * t407;
t658 = qJ(2) * t518;
t657 = qJ(2) * t520;
t655 = t411 * t520;
t653 = t537 * t676;
t652 = t538 * t676;
t651 = t537 * t702;
t650 = t539 * t702;
t649 = t409 * t520;
t648 = t450 * t520;
t647 = t453 * t520;
t646 = t470 * t682;
t645 = t457 * t520;
t644 = t537 * t703;
t503 = t538 * t519;
t502 = t538 * t520;
t641 = t751 / 0.2e1;
t631 = t826 * qJD(5);
t630 = t826 * qJD(6);
t625 = t674 * t540;
t624 = pkin(5) * t638;
t623 = -qJD(5) - t520;
t622 = -qJD(2) + t705;
t620 = t540 * t668;
t619 = t539 * t502;
t618 = t533 * t644;
t614 = t836 - t824 / 0.2e1;
t613 = qJD(3) * t628;
t605 = -qJD(6) + t623;
t604 = t522 - t873;
t513 = t540 * t538;
t172 = t183 + t513;
t542 = t162 * t842 + t163 * t843 + t164 * t841 + t407 * t848 + t413 * t827 + t414 * t830;
t582 = t363 * t839 + t627 * t840;
t7 = -t542 + t582;
t603 = -qJD(1) * t7 + qJD(2) * t172;
t66 = -t337 * t357 + t338 * t358 - t459 * t629;
t602 = t66 * qJD(1) - t52 * qJD(2);
t601 = -t13 * qJD(1) + t60 * qJD(3);
t599 = qJD(4) * t21;
t598 = t782 + t783;
t596 = t763 + t771;
t378 = -t513 + t412;
t595 = -t52 * qJD(1) - t378 * qJD(2);
t309 = t453 * t822 - t759;
t35 = (t410 * t829 + (t453 * t831 + t832) * t538) * pkin(5) + t54;
t593 = qJD(1) * t35 - qJD(3) * t309;
t211 = t407 ^ 2 - t410 ^ 2;
t63 = qJD(1) * t211 + qJD(3) * t153;
t271 = t450 ^ 2 - t453 ^ 2;
t74 = qJD(1) * t153 + qJD(3) * t271;
t592 = qJD(1) * t316 + t708;
t321 = t637 + t724;
t591 = qJD(1) * t321 + t707;
t590 = -t680 - t702;
t589 = qJD(4) * t535 - t711;
t588 = qJD(3) * t471 + t678;
t584 = -t792 / 0.2e1 - t791 / 0.2e1;
t583 = -t783 / 0.2e1 - t782 / 0.2e1;
t578 = t643 + t758 / 0.2e1;
t576 = -t849 * t828 + t521 / 0.2e1;
t574 = qJD(1) * t54 + t450 * t706;
t572 = t623 * t743;
t329 = (t446 / 0.2e1 + t576) * t537;
t571 = -qJ(4) * t676 - qJD(1) * t329;
t557 = t576 * t539;
t330 = t426 / 0.2e1 + t557;
t570 = qJ(4) * t679 - qJD(1) * t330;
t377 = -qJD(1) * t441 + t653;
t168 = t583 + t614;
t417 = (-t534 / 0.2e1 + 0.1e1 / 0.2e1 + t835) * t538;
t528 = qJD(3) * qJ(4);
t569 = qJD(1) * t168 + qJD(2) * t417 + t528;
t566 = t164 * t832 + t163 * t826 / 0.2e1;
t564 = t765 / 0.2e1 - t663 / 0.2e1;
t371 = qJD(1) * t537 * t750 + qJD(3) * t441;
t454 = t485 * t533;
t559 = qJD(1) * t454 + t613;
t193 = t830 + t578;
t549 = (-pkin(4) / 0.2e1 - t822 / 0.2e1) * t538 + t836 + t728;
t26 = t549 + t584;
t556 = -qJD(1) * t26 - qJD(2) * t193 - t706;
t547 = t846 * t883 + t876 * t886;
t1 = (t413 * t829 + t743 * t877 + t566) * pkin(5) + t547;
t102 = t507 * t822;
t31 = (-t740 / 0.2e1 + t564) * pkin(5) - t881;
t548 = -t1 * qJD(1) - t31 * qJD(2) + t102 * qJD(3) + t60 * qJD(4);
t531 = qJ(2) * qJD(2);
t530 = qJ(4) * qJD(4);
t529 = qJD(1) * qJ(2);
t511 = -t518 / 0.2e1;
t510 = t518 / 0.2e1;
t509 = -t517 / 0.2e1;
t506 = t538 * t668;
t504 = t539 * t677;
t501 = t539 * t519;
t500 = t539 * t520;
t499 = t537 * t519;
t498 = t537 * t517;
t497 = t537 * t520;
t472 = t486 * qJD(3);
t449 = -t500 - t703;
t448 = -t497 - t704;
t447 = t502 + t677 / 0.2e1;
t420 = t539 * t833 + t750 / 0.2e1 + t829;
t419 = t537 * t833 + t641 + t831;
t416 = t532 * t830 + (0.1e1 / 0.2e1 + t834) * t538;
t401 = t502 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t538;
t324 = -t538 * t560 + t637;
t320 = t842 + t724;
t285 = t316 * qJD(3);
t218 = -t444 - t426 / 0.2e1 + t557;
t217 = t445 - t744 / 0.2e1 + t576 * t537;
t202 = qJD(3) * t555 + t410 * t520;
t201 = qJD(3) * t323 + t407 * t520;
t192 = t830 - t578;
t188 = -t626 - t284;
t167 = -t583 + t614;
t148 = qJD(3) * t322 + t694;
t147 = -t285 + t695;
t146 = qJD(3) * t552 + t410 * t605;
t145 = t325 * qJD(3) + t407 * t605;
t99 = 0.2e1 * t345 - t771;
t77 = t411 * t674 - t691 - t695;
t76 = t324 * qJD(3) - t409 * t674 - t694;
t55 = t562 + t879;
t51 = t747 - t666 / 0.2e1 + t568;
t49 = pkin(5) * t639 - t665 - t543 / 0.2e1 - t748 / 0.2e1;
t38 = t410 * t671 + t453 * t624 + t617 + (t823 / 0.2e1 - t264 / 0.2e1) * t536 + t879;
t37 = t407 * t671 + t450 * t624 + t538 * t621 + t56;
t32 = (t564 + t636) * pkin(5) + t881;
t25 = t549 - t584;
t20 = t21 * qJD(6);
t14 = t129 + t871;
t12 = t165 * t843 + t166 * t841 - t796 / 0.2e1 + t794 / 0.2e1 + (t563 + t641) * pkin(5);
t8 = t542 + t582;
t5 = t6 * qJD(6);
t4 = -t363 * t637 + t407 * t876 + t670 - t871;
t2 = pkin(5) * t566 + t413 * t671 + t507 * t624 - t547;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t531, -t503, t472, 0, t503, 0, 0, qJ(2) * t519 + qJD(2) * t538, -qJ(2) * t517 + t711, 0, t531, 0, 0, 0, -t503, t472, t503, 0, -t365 * qJD(3) + t538 * t622, -qJD(3) * t366 + t589 (qJD(3) * t470 - t622) * t457, t503 * t532 + t618, -qJD(5) * t454 + t540 * t613, -qJD(3) * t452 + t538 * t650, t503 * t534 - t618, -qJD(3) * t456 - t538 * t651, -t503, t133 * qJD(3) + t215 * qJD(5) + t537 * t589, -t134 * qJD(3) - t214 * qJD(5) + t539 * t589, qJD(2) * t455 + qJD(3) * t65 - qJD(4) * t412, qJD(2) * t186 + qJD(3) * t66 - qJD(4) * t175 (qJD(3) * t411 - t407 * t674) * t410, qJD(3) * t185 + t211 * t674, t263 * qJD(3) - t407 * t625 (qJD(3) * t409 + t410 * t674) * t407, t262 * qJD(3) - t410 * t625, -t503, t29 * qJD(3) + t67 * qJD(5) + t80 * qJD(6) + (-qJD(2) * t450 + qJD(4) * t411) * t540, -t30 * qJD(3) - t68 * qJD(5) - t79 * qJD(6) + (-qJD(2) * t453 - qJD(4) * t409) * t540, -qJD(2) * t597 + qJD(3) * t18 + qJD(4) * t183 + qJD(5) * t19, qJD(2) * t40 + qJD(3) * t22 + qJD(4) * t39 + qJD(5) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t529, 0, 0, 0, 0, 0, 0, t518, t520, 0, t529, 0, 0, 0, 0, 0, 0, 0, -t518, -t520, t682, 0, 0, 0, 0, 0, 0, qJD(5) * t419 - t497, qJD(5) * t420 - t500, t683, t720 - t808, 0, 0, 0, 0, 0, 0, t210 * t674 - t648, t209 * t674 - t647, -t719, -qJD(2) * t596 + qJD(3) * t8 + qJD(5) * t12 + t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, t681, -t517, t502, -t519, 0, t506 + t657, t620 - t658, 0, 0, 0, t517, t519, -t502, t681, t502, -t588, -t506 - t689, -t620 - t688, t646 + (pkin(3) * t514 - qJ(4) * t515) * qJD(3) - qJD(4) * t514, t684 + (t518 * t532 + t653) * t540, -0.2e1 * t538 * t644 + t540 * t558, -t652 - t713, -t684 + (t518 * t534 - t653) * t540, t498 - t712, -t447, t698 + (-t539 * t604 - t610) * qJD(3) - t539 * t678 + t217 * qJD(5), -t697 + (t537 * t604 - t863) * qJD(3) + t537 * t678 + t218 * qJD(5), -qJD(3) * t598 + t738 (-qJ(4) * t629 - t598 * t849) * qJD(3) + t167 * qJD(4) + t602 (t707 + t714) * t411 + t884, t696 + (-t409 * t453 - t411 * t450) * qJD(3) + t735, -t453 * t517 + t716 + t727 (t708 + t715) * t409 - t884, t450 * t517 + t693 + t862, -t401, t786 + (t409 * t507 + t414 * t450 + t538 * t627) * qJD(3) + t317 * qJD(4) + t37 * qJD(5) + t56 * qJD(6), -t785 + (t363 * t538 + t411 * t507 + t414 * t453) * qJD(3) + t320 * qJD(4) + t38 * qJD(5) + t55 * qJD(6), t790 + (t764 - t772 - t791 - t792) * qJD(3) + t99 * qJD(4) + t4 * qJD(5) + t5, t788 + t8 * qJD(2) + (-t163 * t627 + t164 * t363 + t414 * t507) * qJD(3) + t25 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, t502, t680, -t506 - t645, 0, 0, 0, 0, 0, 0, t537 * t680 - t652, t539 * t680 + t498, -t687, qJD(3) * t167 - t722, 0, 0, 0, 0, 0, 0, t655 + t691 + t727, t320 * qJD(3) - t649 + t862, qJD(3) * t99 + t721, qJD(3) * t25 + qJD(4) * t596 + qJD(5) * t14 + t20 + t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371, -t559, t504 + t619, -t371, t572, t509, qJD(2) * t419 + qJD(3) * t217 - qJD(5) * t338 + t717, qJD(2) * t420 + qJD(3) * t218 + qJD(5) * t337 - t718, 0, 0, -t868, t63, t145, t868, t146, t509, qJD(3) * t37 + qJD(5) * t165 + qJD(6) * t49 + t729 + t802, qJD(3) * t38 - qJD(5) * t166 + qJD(6) * t51 + t730 - t801, t789 + t4 * qJD(3) + (t663 - t765) * t813, t787 + t12 * qJD(2) + t2 * qJD(3) + t14 * qJD(4) + (t165 * t826 + t166 * t536) * t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t868, t63, t145, t868, t146, t509, qJD(3) * t56 + qJD(5) * t49 - qJD(6) * t162 + t729 + t799, qJD(3) * t55 + qJD(5) * t51 + qJD(6) * t161 + t730 - t800, t811, t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t529, 0, 0, 0, 0, 0, 0, -t518, -t520, 0, -t529, 0, 0, 0, 0, 0, 0, 0, t518, t520, -t682, 0, 0, 0, 0, 0, 0, -qJD(5) * t415 + t497, -qJD(5) * t418 + t500, -t683, -t720 - t808, 0, 0, 0, 0, 0, 0, -t207 * t674 + t648, -t208 * t674 + t647, t719, -qJD(3) * t7 - qJD(5) * t11 - t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, -t519, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, t519, t588, 0, 0, 0, 0, 0, 0, t504 + t499, -t537 * t677 + t501, -t455 * qJD(3) (-t455 * t849 + t522) * qJD(3) + t416 * qJD(4) + t595, 0, 0, 0, 0, 0, 0, -t317 * t674 + t450 * t519, t324 * t674 + t453 * t519, qJD(3) * t597 + t815 (t507 * t540 + t768 + t780) * qJD(3) + t192 * qJD(4) + t32 * qJD(5) + t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651 + t652 - t686, -t498 + t650 - t685, 0, 0, 0, 0, 0, 0, 0, 0, t77, t76, t710, -t797 + t32 * qJD(3) + (t662 + t770) * t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t76, t710, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, -t681, 0, -t502, 0, 0, -t657, t658, 0, 0, 0, 0, 0, t502, -t681, -t502, 0, t689, t688, -t646, -t502 * t532 + t684, 0.2e1 * t539 * t572, -t651 + t713, -t502 * t534 - t684, -t650 + t712, t447, qJD(5) * t329 - t698, qJD(5) * t330 + t697, -t738, qJD(4) * t168 - t602, -t411 * t714 + t884, -t696 + t735, -t716 - t726, -t409 * t715 - t884, -t693 - t861, t401, qJD(4) * t316 - qJD(5) * t36 - qJD(6) * t53 - t786, qJD(4) * t321 - qJD(5) * t35 - qJD(6) * t54 + t785, -qJD(5) * t3 + t5 - t790, qJD(2) * t7 + qJD(4) * t26 - qJD(5) * t1 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t417 - t595, 0, 0, 0, 0, 0, 0, t674 * t316, -t674 * t322, t815, qJD(4) * t193 - qJD(5) * t31 - t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t530, -t644, t485 * qJD(5), 0, t644, 0, 0, qJ(4) * t703 + qJD(4) * t537, -qJ(4) * t704 + qJD(4) * t539, 0, t530, -t874, t674 * t271, 0, t874, 0, 0, qJD(4) * t450 + qJD(5) * t308 + t438 * t507, qJD(4) * t453 + qJD(5) * t309 - qJD(6) * t759, 0, qJD(4) * t507 + qJD(5) * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t528, 0, 0, 0, 0, 0, 0, t679, t676, 0, t569, 0, 0, 0, 0, 0, 0, t592, t591, 0, -t556 + t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t377, -t558, t448, t377, t449, t510, t537 * t701 - t571, t539 * t701 - t570, 0, 0, -t869, t74, t188, t869, t870, t510, -t856 - t866, -t593 + t867, t860 - t882 (-t363 * t826 - t536 * t627) * t813 + t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t869, t74, t188, t869, t870, t510, -t857 - t866, -t574 + t867, t880, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, -t680, t645, 0, 0, 0, 0, 0, 0, t590 * t537, t590 * t539, t687, -qJD(3) * t168 + t722, 0, 0, 0, 0, 0, 0, -t285 - t655 - t726, -t321 * qJD(3) + t649 - t861, -t721, -qJD(3) * t26 - qJD(5) * t13 + t20 - t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t528, 0, 0, 0, 0, 0, 0, -t679, -t676, 0, -t569, 0, 0, 0, 0, 0, 0, -t592, -t591, 0, t556 + t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t449, 0, 0, 0, 0, 0, 0, 0, 0, t188, t870, 0, t601 - t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t870, 0, t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371, t559, t499 - t619, t371, t502 * t537 + t501, t509, qJD(2) * t415 - qJD(3) * t329 + t537 * t705 - t717, qJD(2) * t418 - qJD(3) * t330 + t539 * t705 + t718, 0, 0, t868, -t63, t201, -t868, t202, t509, qJD(3) * t36 + qJD(6) * t48 + t732 - t802, qJD(3) * t35 + qJD(6) * t50 + t731 + t801, qJD(3) * t3 - t789, qJD(2) * t11 + qJD(3) * t1 + qJD(4) * t13 - t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t686, t685, 0, 0, 0, 0, 0, 0, 0, 0, t147, t148, -t710, qJD(3) * t31 + t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, t558, t497, -t377, t500, t511, t571, t570, 0, 0, t869, -t74, t284, -t869, t855, t511, t856, t690 + t593, t882, -t548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, t500, 0, 0, 0, 0, 0, 0, 0, 0, t284, t855, 0, -t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t825, -pkin(5) * t630, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t674 * t825 + t755, t754 + (-t631 - t630) * pkin(5), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, -t63, t201, -t868, t202, t509, qJD(3) * t53 - qJD(5) * t48 + t732 - t799, qJD(3) * t54 - qJD(5) * t50 + t731 + t800, -t811, -t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, t148, -t710, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t869, -t74, t284, -t869, t855, t511, t857, t690 + t574, -t880, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t855, 0, -t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536 * t813 - t755, pkin(5) * t631 - t754, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
