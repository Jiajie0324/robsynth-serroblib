% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:20:02
% EndTime: 2019-03-09 04:20:12
% DurationCPUTime: 5.19s
% Computational Cost: add. (3319->409), mult. (6820->541), div. (0->0), fcn. (6693->6), ass. (0->335)
t359 = qJD(5) + qJD(6);
t273 = sin(qJ(6));
t274 = sin(qJ(5));
t258 = t273 * t274;
t276 = cos(qJ(6));
t277 = cos(qJ(5));
t395 = t276 * t277;
t203 = -t258 + t395;
t189 = t203 * qJD(6);
t278 = cos(qJ(3));
t336 = t258 / 0.2e1;
t456 = -t203 / 0.2e1;
t316 = t336 + t456;
t394 = t277 * t278;
t228 = t276 * t394;
t453 = t228 / 0.2e1;
t286 = -t278 * t316 + t453;
t462 = t286 * qJD(1);
t473 = -t203 * qJD(5) - t189 - t462;
t275 = sin(qJ(3));
t270 = t275 ^ 2;
t272 = t278 ^ 2;
t472 = -t270 / 0.2e1 - t272 / 0.2e1;
t426 = qJ(4) * t278;
t222 = -t275 * pkin(3) + t426;
t363 = t275 * qJD(4);
t306 = qJD(3) * t222 + t363;
t279 = -pkin(3) - pkin(8);
t470 = -pkin(9) + t279;
t207 = t470 * t274;
t209 = t470 * t277;
t143 = t276 * t207 + t273 * t209;
t471 = t359 * t143;
t469 = t278 * t359;
t400 = t274 * t278;
t355 = t273 * t400;
t451 = -t278 / 0.2e1;
t285 = t203 * t451 - t355 / 0.2e1 + t453;
t468 = t285 * t359;
t467 = t286 * t359;
t396 = t276 * t274;
t403 = t273 * t277;
t200 = t396 + t403;
t280 = -pkin(1) - pkin(7);
t449 = pkin(5) * t277;
t332 = t280 - t449;
t324 = pkin(4) - t332;
t305 = t324 * t275;
t292 = t305 / 0.2e1;
t227 = t275 * t395;
t401 = t274 * t275;
t164 = t273 * t401 - t227;
t450 = pkin(5) * t274;
t253 = qJ(4) + t450;
t407 = t253 * t164;
t466 = t200 * t292 - t407 / 0.2e1;
t291 = -t305 / 0.2e1;
t397 = t275 * t277;
t225 = t273 * t397;
t226 = t275 * t396;
t167 = -t225 - t226;
t406 = t253 * t167;
t465 = t203 * t291 - t406 / 0.2e1;
t262 = t275 * qJ(4);
t221 = t278 * pkin(3) + t262;
t196 = pkin(8) * t278 + t221;
t179 = t277 * t196;
t208 = (-pkin(4) + t280) * t275;
t194 = t208 * t274;
t390 = t179 + t194;
t91 = pkin(9) * t394 + t390;
t433 = t273 * t91;
t354 = -t433 / 0.2e1;
t195 = t208 * t277;
t448 = t275 * pkin(5);
t87 = -t448 + t195 + (-pkin(9) * t278 - t196) * t274;
t432 = t276 * t87;
t303 = t354 + t432 / 0.2e1;
t283 = t406 / 0.2e1 + t303;
t414 = t143 * t278;
t337 = t414 / 0.2e1;
t11 = t203 * t292 + t283 + t337;
t454 = -t227 / 0.2e1;
t455 = t203 / 0.2e1;
t114 = t454 + (t336 + t455) * t275;
t373 = t114 * qJD(2);
t379 = qJD(3) * t253;
t464 = qJD(1) * t11 - t203 * t379 - t373;
t108 = t200 * t449 + t203 * t253;
t282 = t337 - t164 * t449 / 0.2e1;
t358 = -t450 / 0.2e1;
t4 = (-t276 * pkin(5) / 0.2e1 + t200 * t358 + t324 * t455) * t275 + t282 + t283;
t463 = t4 * qJD(1) - t108 * qJD(3) - t373;
t388 = t225 / 0.2e1 + t226 / 0.2e1;
t269 = t274 ^ 2;
t271 = t277 ^ 2;
t233 = t269 - t271;
t329 = 0.2e1 * t274 * t397;
t288 = qJD(1) * t329 - qJD(3) * t233;
t461 = qJD(3) * (t275 * t279 + t426) + t363;
t311 = t273 * t207 - t276 * t209;
t398 = t275 * t200;
t334 = t398 / 0.2e1;
t118 = t334 - t388;
t372 = t118 * qJD(2);
t460 = t311 * t359 - t372;
t447 = t278 * pkin(5);
t265 = t278 * pkin(4);
t210 = t278 * t280 - t265;
t192 = t210 * t277;
t206 = qJ(2) - t222;
t188 = pkin(8) * t275 + t206;
t331 = pkin(9) * t275 + t188;
t89 = -t274 * t331 - t192;
t82 = t89 + t447;
t69 = t276 * t82;
t459 = -t69 / 0.2e1;
t458 = -t82 / 0.2e1;
t457 = t200 / 0.2e1;
t35 = t164 * t200 + t203 * t167;
t446 = t359 * t35;
t49 = t164 * t456 + t167 * t457;
t445 = t359 * t49;
t300 = t396 / 0.2e1 + t403 / 0.2e1;
t121 = (t457 + t300) * t278;
t399 = t275 * t167;
t168 = t200 * t278;
t411 = t168 * t278;
t301 = t411 / 0.2e1 - t399 / 0.2e1;
t56 = -t300 - t301;
t444 = t56 * qJD(2) + t121 * qJD(4);
t166 = -t228 + t355;
t412 = t166 * t278;
t413 = t164 * t275;
t302 = -t413 / 0.2e1 - t412 / 0.2e1;
t317 = t336 - t395 / 0.2e1;
t57 = -t302 + t317;
t443 = t57 * qJD(2) + qJD(4) * t286;
t442 = pkin(5) * qJD(5);
t441 = pkin(5) * qJD(6);
t356 = -t447 / 0.2e1;
t321 = t356 + t89 / 0.2e1;
t7 = (t458 + t321) * t273;
t440 = qJD(1) * t7;
t9 = t321 * t276 + t459;
t439 = qJD(1) * t9;
t169 = t278 * t332 - t265;
t409 = t210 * t274;
t90 = t277 * t331 - t409;
t434 = t273 * t90;
t39 = -t69 + t434;
t1 = (t432 - t433) * t278 + t169 * t164 + (-t166 * t324 + t39) * t275;
t438 = t1 * qJD(1);
t430 = t276 * t90;
t40 = t273 * t82 + t430;
t429 = t276 * t91;
t436 = t273 * t87;
t2 = (t429 + t436) * t278 - t40 * t275 + t169 * t167 + t168 * t305;
t437 = t2 * qJD(1);
t435 = t273 * t89;
t431 = t276 * t89;
t123 = -t168 / 0.2e1 + t300 * t278;
t59 = -t300 + t301;
t428 = t59 * qJD(2) + t123 * qJD(4);
t58 = t302 + t317;
t427 = t58 * qJD(2) + qJD(4) * t285;
t41 = -t430 - t435;
t17 = t41 * t278 + (t164 * t450 + t167 * t324) * t275;
t425 = qJD(1) * t17;
t111 = t164 * t305;
t42 = t431 - t434;
t18 = t278 * t42 + t399 * t450 - t111;
t424 = qJD(1) * t18;
t23 = -t278 * t39 - t111;
t423 = qJD(1) * t23;
t24 = t167 * t305 - t40 * t278;
t422 = qJD(1) * t24;
t421 = qJD(1) * t56;
t420 = qJD(1) * t57;
t132 = t188 * t274 + t192;
t61 = -t132 * t278 - t208 * t397;
t419 = qJD(1) * t61;
t133 = t188 * t277 - t409;
t62 = -t133 * t278 + t208 * t401;
t418 = qJD(1) * t62;
t85 = -t412 + t413;
t417 = qJD(1) * t85;
t86 = t399 + t411;
t416 = qJD(1) * t86;
t415 = t311 * t278;
t410 = t200 * t253;
t402 = t274 * t196;
t25 = -t402 * t278 + (t132 - t192) * t275;
t408 = t25 * qJD(1);
t26 = -t133 * t275 - t208 * t400 - t210 * t401 + t278 * t390;
t405 = t26 * qJD(1);
t404 = t270 * t277;
t43 = -t164 * t168 + t166 * t167;
t393 = t43 * qJD(1);
t392 = t359 * t123;
t391 = t359 * t121;
t234 = t270 - t272;
t387 = qJD(1) * qJ(2);
t386 = qJD(1) * t167;
t202 = t234 * t274;
t385 = qJD(1) * t202;
t205 = t234 * t277;
t384 = qJD(1) * t205;
t383 = qJD(2) * t278;
t382 = qJD(3) * qJ(4);
t115 = t275 * t316 + t454;
t381 = qJD(3) * t115;
t380 = qJD(3) * t203;
t378 = qJD(4) * t278;
t377 = qJD(5) * t274;
t376 = qJD(5) * t277;
t375 = qJD(5) * t278;
t374 = qJD(5) * t279;
t98 = t121 * qJD(1);
t144 = t206 * t278 + t221 * t275;
t371 = t144 * qJD(1);
t145 = -t206 * t275 + t221 * t278;
t370 = t145 * qJD(1);
t320 = -0.1e1 / 0.2e1 + t472;
t170 = t320 * t274;
t369 = t170 * qJD(1);
t171 = t320 * t277;
t368 = t171 * qJD(1);
t367 = t206 * qJD(1);
t366 = t234 * qJD(1);
t365 = t272 * qJD(1);
t364 = t274 * qJD(3);
t260 = t275 * qJD(1);
t259 = t275 * qJD(3);
t362 = t275 * qJD(5);
t361 = t277 * qJD(3);
t261 = t278 * qJD(1);
t360 = t278 * qJD(3);
t357 = t448 / 0.2e1;
t353 = -t429 / 0.2e1;
t352 = qJ(2) * t260;
t351 = qJ(2) * t261;
t350 = t166 * t261;
t349 = t168 * t261;
t348 = t200 * t261;
t347 = t203 * t261;
t346 = t274 * t361;
t345 = t275 * t361;
t344 = t280 * t360;
t343 = t274 * t375;
t342 = t277 * t375;
t341 = t221 * t367;
t340 = t206 * t261;
t339 = t274 * t376;
t338 = t275 * t360;
t250 = t275 * t261;
t335 = -t398 / 0.2e1;
t330 = pkin(5) * t359;
t328 = t359 * t200;
t327 = t274 * t357;
t326 = -qJD(5) - t261;
t325 = -qJD(2) + t378;
t323 = t277 * t250;
t322 = t357 - t87 / 0.2e1;
t319 = qJD(3) * t329;
t315 = qJD(6) - t326;
t109 = t203 * t449 - t410;
t281 = t311 * t451 + t167 * t449 / 0.2e1;
t304 = -t436 / 0.2e1 + t353;
t284 = t407 / 0.2e1 + t304;
t3 = (t273 * pkin(5) / 0.2e1 + t203 * t358 - t324 * t200 / 0.2e1) * t275 + t281 + t284;
t312 = -t3 * qJD(1) + t109 * qJD(3);
t60 = t164 ^ 2 - t167 ^ 2;
t15 = qJD(1) * t60 + qJD(3) * t35;
t88 = t200 ^ 2 - t203 ^ 2;
t19 = qJD(1) * t35 + qJD(3) * t88;
t310 = qJD(1) * t114 + qJD(3) * t200;
t120 = t335 + t388;
t309 = qJD(1) * t120 + t380;
t308 = -t365 - t375;
t307 = qJD(4) * t272 - t383;
t299 = t279 * t451 + t262 / 0.2e1;
t12 = -t415 / 0.2e1 + t200 * t291 + t284;
t297 = qJD(1) * t12 + t200 * t379;
t27 = qJD(3) * t49 + t164 * t386;
t37 = -qJD(1) * t49 + t200 * t380;
t296 = t326 * t401;
t126 = (t196 / 0.2e1 + t299) * t274;
t295 = -qJ(4) * t361 - qJD(1) * t126;
t287 = t299 * t277;
t127 = t179 / 0.2e1 + t287;
t294 = qJ(4) * t364 - qJD(1) * t127;
t191 = (t271 / 0.2e1 - t269 / 0.2e1) * t275;
t293 = -qJD(1) * t191 + t346;
t290 = qJD(1) * t274 * t404 + qJD(3) * t191;
t204 = t233 * t270;
t289 = qJD(1) * t204 + t319;
t257 = -t260 / 0.2e1;
t256 = t260 / 0.2e1;
t255 = -t259 / 0.2e1;
t252 = t280 * t259;
t251 = t277 * t362;
t249 = t277 * t360;
t248 = t277 * t261;
t247 = t274 * t360;
t246 = t274 * t259;
t245 = t274 * t261;
t199 = -t248 - t376;
t198 = -t245 - t377;
t197 = t250 + t362 / 0.2e1;
t183 = t191 * qJD(5);
t173 = t404 / 0.2e1 + (t272 / 0.2e1 - 0.1e1 / 0.2e1) * t277;
t172 = (-0.1e1 / 0.2e1 - t472) * t274;
t161 = t250 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t275;
t122 = t335 - t388;
t119 = t334 + t388;
t100 = t114 * qJD(3);
t64 = -t194 - t179 / 0.2e1 + t287;
t63 = t195 - t402 / 0.2e1 + t299 * t274;
t51 = qJD(3) * t286 - t167 * t261;
t50 = qJD(3) * t121 + t164 * t261;
t44 = -t328 - t98;
t32 = qJD(3) * t118 + t420;
t31 = -t100 + t421;
t30 = qJD(3) * t285 + t167 * t315;
t29 = qJD(3) * t123 - t164 * t315;
t22 = t168 * t359 - t381 - t421;
t21 = qJD(3) * t122 - t166 * t359 - t420;
t14 = -t414 / 0.2e1 + t303 + t465;
t13 = t415 / 0.2e1 + t304 + t466;
t10 = t276 * t356 + t434 + t459 - t431 / 0.2e1;
t8 = -t430 - t435 / 0.2e1 + (t356 + t458) * t273;
t6 = t203 * t327 + t273 * t322 - t281 + t353 + t466;
t5 = t200 * t327 - t276 * t322 - t282 + t354 + t465;
t16 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t338, t234 * qJD(3), 0, 0, 0, qJ(2) * t360 + qJD(2) * t275, -qJ(2) * t259 + t383, 0, -qJD(3) * t144 + t275 * t325, -qJD(3) * t145 + t307 (qJD(3) * t221 - t325) * t206, t269 * t338 + t270 * t339, -qJD(5) * t204 + t278 * t319, -qJD(3) * t202 + t275 * t342, -qJD(3) * t205 - t275 * t343, -t338, qJD(3) * t25 + qJD(5) * t62 + t274 * t307, -qJD(3) * t26 - qJD(5) * t61 + t277 * t307 (-qJD(3) * t168 + t164 * t359) * t167, qJD(3) * t43 + t359 * t60, qJD(3) * t86 - t164 * t469, qJD(3) * t85 + t167 * t469, -t338, qJD(3) * t1 + qJD(5) * t17 + qJD(6) * t24 + (-qJD(2) * t200 + qJD(4) * t168) * t278, -qJD(3) * t2 - qJD(5) * t18 - qJD(6) * t23 + (-qJD(2) * t203 - qJD(4) * t166) * t278; 0, 0, 0, 0, qJD(1), t387, 0, 0, 0, 0, 0, t260, t261, 0, -t260, -t261, t367, 0, 0, 0, 0, 0, qJD(5) * t172 - t245, qJD(5) * t173 - t248, 0, 0, 0, 0, 0, t359 * t59 - t348, t359 * t58 - t347; 0, 0, 0, 0, 0, 0, -t250, t366, -t259, -t360, 0, -t252 + t351, -t344 - t352, -t306, t252 - t371, t344 - t370, t280 * t306 + t341, t183 + (t260 * t269 + t346) * t278, -0.2e1 * t275 * t339 + t278 * t288, -t345 - t385, t246 - t384, -t197, t63 * qJD(5) + t210 * t364 - t277 * t461 + t408, t64 * qJD(5) + t210 * t361 + t274 * t461 - t405 (t380 - t386) * t168 + t445, t393 + (-t166 * t203 - t168 * t200) * qJD(3) + t446, -t203 * t259 + t392 + t416, t200 * t259 + t417 + t468, -t161, t438 + (t166 * t253 + t169 * t200 + t275 * t311) * qJD(3) + t115 * qJD(4) + t5 * qJD(5) + t14 * qJD(6), -t437 + (t143 * t275 + t168 * t253 + t169 * t203) * qJD(3) + t119 * qJD(4) + t6 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, t250, t365, t252 - t340, 0, 0, 0, 0, 0, t274 * t365 - t345, t277 * t365 + t246, 0, 0, 0, 0, 0, t349 + t381 + t392, qJD(3) * t119 - t350 + t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, -t289, t251 + t323, t296, t255, qJD(2) * t172 + qJD(3) * t63 - qJD(5) * t133 + t418, qJD(2) * t173 + qJD(3) * t64 + qJD(5) * t132 - t419, t27, t15, t29, t30, t255, qJD(3) * t5 + qJD(5) * t41 + qJD(6) * t8 + t425 + t428, qJD(3) * t6 - qJD(5) * t42 + qJD(6) * t10 - t424 + t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, t15, t29, t30, t255, qJD(3) * t14 + qJD(5) * t8 - qJD(6) * t40 + t422 + t428, qJD(3) * t13 + qJD(5) * t10 + qJD(6) * t39 - t423 + t427; 0, 0, 0, 0, -qJD(1), -t387, 0, 0, 0, 0, 0, -t260, -t261, 0, t260, t261, -t367, 0, 0, 0, 0, 0, -qJD(5) * t170 + t245, -qJD(5) * t171 + t248, 0, 0, 0, 0, 0, -t359 * t56 + t348, -t359 * t57 + t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, -t360, 0, t259, t360, t306, 0, 0, 0, 0, 0, t251 + t247, -t274 * t362 + t249, 0, 0, 0, 0, 0, -t115 * t359 + t200 * t360, t122 * t359 + t203 * t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343 + t345 - t369, -t246 + t342 - t368, 0, 0, 0, 0, 0, t22, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, t21; 0, 0, 0, 0, 0, 0, t250, -t366, 0, 0, 0, -t351, t352, 0, t371, t370, -t341, -t250 * t269 + t183, 0.2e1 * t277 * t296, -t343 + t385, -t342 + t384, t197, qJD(5) * t126 - t408, qJD(5) * t127 + t405, t168 * t386 + t445, -t393 + t446, -t391 - t416, -t417 - t467, t161, qJD(4) * t114 - qJD(5) * t4 - qJD(6) * t11 - t438, qJD(4) * t120 - qJD(5) * t3 - qJD(6) * t12 + t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359 * t114, -t359 * t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t339, t233 * qJD(5), 0, 0, 0, qJ(4) * t376 + qJD(4) * t274, -qJ(4) * t377 + qJD(4) * t277, -t203 * t328, t359 * t88, 0, 0, 0, qJD(4) * t200 + qJD(5) * t108 + t189 * t253, qJD(4) * t203 + qJD(5) * t109 - qJD(6) * t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t382, 0, 0, 0, 0, 0, t364, t361, 0, 0, 0, 0, 0, t310, t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293, -t288, t198, t199, t256, -t274 * t374 - t295, -t277 * t374 - t294, -t37, t19, t44, t473, t256, -t463 - t471, t312 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t19, t44, t473, t256, -t464 - t471, -t297 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, -t365, t340, 0, 0, 0, 0, 0, t308 * t274, t308 * t277, 0, 0, 0, 0, 0, -t100 - t349 - t391, -qJD(3) * t120 + t350 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t382, 0, 0, 0, 0, 0, -t364, -t361, 0, 0, 0, 0, 0, -t310, -t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t199, 0, 0, 0, 0, 0, t44, t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t290, t289, t247 - t323, t250 * t274 + t249, t255, qJD(2) * t170 - qJD(3) * t126 + t274 * t378 - t418, qJD(2) * t171 - qJD(3) * t127 + t277 * t378 + t419, -t27, -t15, t50, t51, t255, qJD(3) * t4 + qJD(6) * t7 - t425 + t444, qJD(3) * t3 + qJD(6) * t9 + t424 + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t369, t368, 0, 0, 0, 0, 0, t31, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293, t288, t245, t248, t257, t295, t294, t37, -t19, t98, t462, t257, t463, -t312 + t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, t248, 0, 0, 0, 0, 0, t98, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273 * t441, -t276 * t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273 * t330 + t440, -t276 * t330 + t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t27, -t15, t50, t51, t255, qJD(3) * t11 - qJD(5) * t7 - t422 + t444, qJD(3) * t12 - qJD(5) * t9 + t423 + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t19, t98, t462, t257, t464, t297 + t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273 * t442 - t440, t276 * t442 - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t16;
