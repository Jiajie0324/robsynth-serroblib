% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRPRR12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 20:47
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRPRR12_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR12_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR12_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRR12_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRR12_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRR12_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 20:47:06
% EndTime: 2019-05-05 20:47:25
% DurationCPUTime: 20.38s
% Computational Cost: add. (86905->788), mult. (175925->861), div. (0->0), fcn. (103568->8), ass. (0->500)
t1150 = cos(qJ(3));
t1143 = t1150 ^ 2;
t1153 = qJD(1) ^ 2;
t1137 = t1143 * t1153;
t1152 = qJD(3) ^ 2;
t1124 = -t1137 - t1152;
t1146 = sin(qJ(3));
t1272 = t1150 * t1153;
t1256 = t1146 * t1272;
t1114 = qJDD(3) + t1256;
t1285 = t1114 * t1146;
t1054 = -t1124 * t1150 + t1285;
t1301 = qJD(1) * t1146;
t1133 = qJD(3) * t1301;
t1268 = t1150 * qJDD(1);
t1104 = -0.2e1 * t1133 + t1268;
t1147 = sin(qJ(1));
t1151 = cos(qJ(1));
t1372 = pkin(6) * (t1054 * t1151 + t1104 * t1147);
t1371 = pkin(6) * (t1054 * t1147 - t1104 * t1151);
t1142 = t1146 ^ 2;
t1276 = t1142 * t1153;
t1122 = -t1152 - t1276;
t1113 = -qJDD(3) + t1256;
t1286 = t1113 * t1150;
t1053 = -t1122 * t1146 + t1286;
t1134 = t1146 * qJDD(1);
t1300 = qJD(1) * t1150;
t1255 = qJD(3) * t1300;
t1101 = -t1134 - 0.2e1 * t1255;
t1370 = pkin(6) * (t1053 * t1151 - t1101 * t1147);
t1369 = pkin(6) * (t1053 * t1147 + t1101 * t1151);
t1368 = pkin(2) * t1053;
t1367 = pkin(2) * t1054;
t1366 = pkin(7) * t1053;
t1365 = pkin(7) * t1054;
t1287 = t1113 * t1146;
t1060 = t1122 * t1150 + t1287;
t1364 = pkin(7) * t1060;
t1284 = t1114 * t1150;
t1063 = t1124 * t1146 + t1284;
t1363 = pkin(7) * t1063;
t1362 = qJ(2) * t1060;
t1361 = qJ(2) * t1063;
t1336 = pkin(1) + pkin(7);
t1360 = t1053 * t1336;
t1359 = t1060 * t1336;
t1358 = t1063 * t1336;
t1144 = sin(qJ(6));
t1103 = -t1133 + t1268;
t1092 = qJDD(5) + t1103;
t1087 = qJDD(6) + t1092;
t1145 = sin(qJ(5));
t1149 = cos(qJ(5));
t1094 = qJD(3) * t1145 - t1149 * t1301;
t1096 = qJD(3) * t1149 + t1145 * t1301;
t1148 = cos(qJ(6));
t1032 = t1094 * t1148 + t1096 * t1144;
t1034 = -t1094 * t1144 + t1096 * t1148;
t983 = t1034 * t1032;
t1343 = t1087 - t983;
t1357 = t1144 * t1343;
t1044 = t1096 * t1094;
t1341 = -t1044 + t1092;
t1356 = t1145 * t1341;
t1355 = t1148 * t1343;
t1354 = t1149 * t1341;
t1123 = -t1137 + t1152;
t1048 = -t1123 * t1150 + t1287;
t1353 = t1048 * t1147 - t1151 * t1268;
t1352 = t1048 * t1151 + t1147 * t1268;
t1121 = -t1152 + t1276;
t1050 = t1121 * t1146 + t1284;
t1351 = t1050 * t1147 - t1134 * t1151;
t1350 = t1050 * t1151 + t1134 * t1147;
t1345 = qJ(2) * t1104 + t1054 * t1336;
t1319 = qJ(4) * t1146;
t1325 = pkin(3) * t1150;
t1223 = -t1319 - t1325;
t1102 = t1134 + t1255;
t1117 = t1151 * g(1) + t1147 * g(2);
t1141 = qJDD(1) * qJ(2);
t1209 = t1117 - t1141;
t1342 = t1336 * t1153;
t1172 = t1209 + t1342;
t1297 = qJD(4) * t1150;
t1339 = -pkin(3) * t1255 - qJ(4) * t1133;
t1157 = 0.2e1 * (-qJD(2) + t1297) * qJD(1) - t1102 * pkin(3) + t1172 + t1339;
t1317 = t1103 * qJ(4);
t973 = t1157 + t1317;
t1344 = (pkin(2) - t1223) * t973;
t1299 = qJD(2) * qJD(1);
t1139 = 0.2e1 * t1299;
t1163 = -0.2e1 * qJD(1) * t1297 + t1139 - t1209 - t1317 - t1339;
t1216 = pkin(4) * t1300 - qJD(3) * pkin(8);
t1335 = pkin(3) + pkin(8);
t937 = -t1216 * t1300 + t1335 * t1102 + (-pkin(4) * t1142 - t1336) * t1153 + t1163;
t1318 = qJ(4) * t1150;
t1326 = pkin(3) * t1146;
t1098 = (-t1318 + t1326) * qJD(1);
t1116 = t1147 * g(1) - t1151 * g(2);
t1207 = qJDD(2) - t1116;
t1174 = -t1153 * qJ(2) + t1207;
t1165 = -qJDD(1) * t1336 + t1174;
t1161 = t1150 * t1165;
t1159 = t1098 * t1300 + qJDD(4) - t1161;
t1302 = qJD(1) * qJD(3);
t1305 = t1152 * qJ(4);
t956 = -t1305 + t1103 * pkin(4) - t1335 * qJDD(3) + (pkin(4) * t1302 + pkin(8) * t1272 - g(3)) * t1146 + t1159;
t873 = t1145 * t937 - t1149 * t956;
t874 = t1145 * t956 + t1149 * t937;
t831 = t1145 * t874 - t1149 * t873;
t1027 = -qJD(5) * t1094 + qJDD(3) * t1149 + t1102 * t1145;
t1129 = qJD(5) + t1300;
t1280 = t1129 * t1094;
t1000 = -t1027 - t1280;
t1322 = t1146 * g(3);
t1040 = t1161 + t1322;
t1041 = t1150 * g(3) - t1146 * t1165;
t985 = t1040 * t1150 - t1041 * t1146;
t1269 = t1142 + t1143;
t1108 = t1269 * qJDD(1);
t1111 = t1137 + t1276;
t1340 = pkin(1) * t1108 - qJ(2) * t1111;
t1236 = t1145 * qJDD(3) - t1102 * t1149;
t996 = (qJD(5) - t1129) * t1096 + t1236;
t959 = -t1342 + (-t1101 + t1102) * pkin(3) + t1163;
t1338 = -t1101 * (pkin(2) + t1319) + t1150 * t959;
t957 = (t1103 + t1104) * qJ(4) + t1157;
t1337 = t1104 * (pkin(2) + t1325) + t1146 * t957;
t1030 = t1032 ^ 2;
t1031 = t1034 ^ 2;
t1090 = t1094 ^ 2;
t1091 = t1096 ^ 2;
t1120 = qJD(6) + t1129;
t1119 = t1120 ^ 2;
t1125 = t1129 ^ 2;
t1334 = pkin(2) * t985;
t1333 = pkin(4) * t831;
t928 = t1000 * t1149 - t1145 * t996;
t1332 = pkin(4) * t928;
t1175 = qJDD(3) * qJ(4) - t1098 * t1301 - t1041;
t1166 = pkin(3) * t1152 - t1175;
t1298 = qJD(4) * qJD(3);
t1266 = -0.2e1 * t1298;
t1001 = t1166 + t1266;
t955 = pkin(4) * t1102 + pkin(8) * t1276 - qJD(3) * t1216 + t1001;
t1331 = pkin(4) * t955;
t1330 = pkin(8) * t831;
t1267 = -0.2e1 * t1299;
t1067 = t1172 + t1267;
t1329 = pkin(2) * t1067;
t1328 = pkin(2) * t1108;
t1327 = pkin(2) * t1111;
t1288 = t1108 * t1151;
t1324 = pkin(6) * (-t1111 * t1147 + t1288);
t1323 = pkin(7) * t1108;
t1321 = qJDD(1) * pkin(1);
t1199 = -qJD(5) * t1096 - t1236;
t1229 = pkin(5) * t1129 - pkin(9) * t1096;
t879 = pkin(5) * t1199 + pkin(9) * t1090 - t1096 * t1229 + t955;
t1316 = t1144 * t879;
t961 = t1087 + t983;
t1315 = t1144 * t961;
t858 = pkin(5) * t1341 + pkin(9) * t1000 - t873;
t862 = -t1090 * pkin(5) + pkin(9) * t1199 - t1129 * t1229 + t874;
t810 = t1144 * t862 - t1148 * t858;
t811 = t1144 * t858 + t1148 * t862;
t787 = t1144 * t811 - t1148 * t810;
t1314 = t1145 * t787;
t1312 = t1145 * t955;
t1310 = t1146 * t959;
t1309 = t1148 * t879;
t1308 = t1148 * t961;
t1307 = t1149 * t787;
t950 = t1149 * t955;
t1156 = -qJDD(3) * pkin(3) + t1159 - t1322;
t1003 = -t1156 + t1305;
t1304 = pkin(3) * t1003 - qJ(4) * t1001;
t1292 = t1104 * t1146;
t1303 = -pkin(3) * t1292 + t1150 * t957;
t1294 = t1101 * t1150;
t1289 = t1108 * t1147;
t1283 = t1120 * t1032;
t1282 = t1120 * t1144;
t1281 = t1120 * t1148;
t1279 = t1129 * t1096;
t1278 = t1129 * t1145;
t1277 = t1129 * t1149;
t1018 = t1044 + t1092;
t1275 = t1145 * t1018;
t1274 = t1146 * t1067;
t1273 = t1149 * t1018;
t1045 = t1150 * t1067;
t1270 = t1111 - t1152;
t1265 = -t1091 - t1125;
t788 = t1144 * t810 + t1148 * t811;
t768 = t1145 * t788 + t1307;
t786 = pkin(5) * t787;
t1263 = -pkin(4) * t768 - t786;
t1239 = -t1144 * t1027 + t1148 * t1199;
t900 = (-qJD(6) + t1120) * t1034 + t1239;
t1254 = qJD(6) * t1032 - t1027 * t1148 - t1144 * t1199;
t903 = t1254 - t1283;
t852 = t1144 * t900 + t1148 * t903;
t854 = -t1144 * t903 + t1148 * t900;
t804 = t1145 * t854 + t1149 * t852;
t850 = pkin(5) * t852;
t1262 = -pkin(4) * t804 - t850;
t970 = t1149 * t1265 - t1275;
t1261 = -pkin(8) * t970 - t950;
t1260 = t1146 * t983;
t1259 = t1150 * t983;
t1258 = t1146 * t1044;
t1257 = t1150 * t1044;
t1248 = -qJ(2) + t1318;
t782 = pkin(5) * t879 + pkin(9) * t788;
t1178 = -pkin(4) * t879 + pkin(9) * t1314 - t1149 * t782;
t769 = t1149 * t788 - t1314;
t752 = -t1335 * t769 + t1178;
t755 = -qJ(4) * t769 - t1263;
t1247 = -t1146 * t752 + t1150 * t755;
t938 = -t1030 - t1031;
t774 = -pkin(5) * t938 + pkin(9) * t854 + t788;
t777 = -pkin(9) * t852 - t787;
t1187 = pkin(4) * t938 - t1145 * t777 - t1149 * t774;
t806 = -t1145 * t852 + t1149 * t854;
t756 = -t1335 * t806 + t1187;
t773 = -qJ(4) * t806 - t1262;
t1246 = -t1146 * t756 + t1150 * t773;
t969 = -t1119 - t1030;
t889 = t1148 * t969 - t1357;
t1013 = t1120 * t1034;
t1201 = qJD(6) * t1034 - t1239;
t898 = t1013 + t1201;
t812 = -pkin(5) * t898 + pkin(9) * t889 + t1309;
t888 = t1144 * t969 + t1355;
t839 = -pkin(9) * t888 - t1316;
t1186 = pkin(4) * t898 - t1145 * t839 - t1149 * t812;
t842 = -t1145 * t888 + t1149 * t889;
t771 = -t1335 * t842 + t1186;
t1230 = pkin(5) * t888 - t810;
t841 = t1145 * t889 + t1149 * t888;
t1198 = -pkin(4) * t841 - t1230;
t779 = -qJ(4) * t842 - t1198;
t1245 = -t1146 * t771 + t1150 * t779;
t1206 = -t1254 - t1283;
t1004 = -t1031 - t1119;
t912 = -t1004 * t1144 - t1308;
t817 = -pkin(5) * t1206 + pkin(9) * t912 - t1316;
t911 = t1004 * t1148 - t1315;
t849 = -pkin(9) * t911 - t1309;
t1185 = pkin(4) * t1206 - t1145 * t849 - t1149 * t817;
t861 = -t1145 * t911 + t1149 * t912;
t775 = -t1335 * t861 + t1185;
t1203 = pkin(5) * t911 - t811;
t860 = t1145 * t912 + t1149 * t911;
t1176 = -pkin(4) * t860 - t1203;
t784 = -qJ(4) * t861 - t1176;
t1244 = -t1146 * t775 + t1150 * t784;
t832 = t1145 * t873 + t1149 * t874;
t794 = -t1335 * t832 - t1331;
t796 = -qJ(4) * t832 + t1333;
t1243 = -t1146 * t794 + t1150 * t796;
t1015 = -t1090 - t1091;
t1184 = pkin(4) * t1015 - t832;
t930 = -t1000 * t1145 - t1149 * t996;
t801 = -t1335 * t930 + t1184;
t868 = -qJ(4) * t930 + t1332;
t1242 = -t1146 * t801 + t1150 * t868;
t1029 = -t1125 - t1090;
t963 = t1029 * t1145 + t1354;
t1214 = -pkin(4) * t963 + t873;
t964 = t1029 * t1149 - t1356;
t834 = -qJ(4) * t964 - t1214;
t995 = (qJD(5) + t1129) * t1096 + t1236;
t1225 = pkin(4) * t995 - t950;
t855 = -t1335 * t964 + t1225;
t1241 = -t1146 * t855 + t1150 * t834;
t1235 = -pkin(4) * t970 + t874;
t971 = -t1145 * t1265 - t1273;
t837 = -qJ(4) * t971 - t1235;
t1205 = t1027 - t1280;
t1226 = pkin(4) * t1205 + t1312;
t856 = -t1335 * t971 + t1226;
t1240 = -t1146 * t856 + t1150 * t837;
t1075 = t1153 * pkin(1) + t1209 + t1267;
t1076 = -t1174 + t1321;
t1238 = -t1075 * t1151 - t1076 * t1147;
t1237 = -t1116 * t1147 - t1117 * t1151;
t1234 = -pkin(3) * t831 - qJ(4) * t955 - t1330;
t931 = -t1001 * t1146 + t1003 * t1150;
t1233 = -pkin(2) * t931 - t1304;
t1232 = t1147 * t1256;
t1231 = t1151 * t1256;
t1109 = qJDD(1) * t1151 - t1147 * t1153;
t1228 = pkin(6) * t1109 + g(3) * t1147;
t1110 = qJDD(1) * t1147 + t1151 * t1153;
t1227 = -pkin(6) * t1110 + g(3) * t1151;
t1224 = -pkin(8) * t963 - t1312;
t1222 = -pkin(2) * t1101 - t1045;
t1221 = pkin(2) * t1104 + t1274;
t1220 = -pkin(3) * t970 + qJ(4) * t1205 + t1261;
t986 = -t1040 * t1146 - t1041 * t1150;
t1219 = t1075 * t1147 - t1076 * t1151;
t1056 = t1123 * t1146 + t1286;
t1059 = -t1121 * t1150 + t1285;
t1218 = t1116 * t1151 - t1117 * t1147;
t1215 = -t1041 + t1367;
t1213 = -pkin(8) * t804 - t1145 * t774 + t1149 * t777;
t1212 = -pkin(8) * t841 - t1145 * t812 + t1149 * t839;
t1211 = -pkin(8) * t860 - t1145 * t817 + t1149 * t849;
t1210 = -pkin(8) * t928 - t831;
t1138 = 0.2e1 * t1298;
t980 = pkin(3) * t1270 + t1138 + t1175;
t984 = qJ(4) * t1270 + t1156;
t1208 = -t1146 * t980 + t1150 * t984 + t1323;
t1204 = t1323 - t985;
t815 = -t1146 * t955 - t1150 * t831;
t1202 = -pkin(2) * t815 - t1234;
t1200 = t1223 * qJDD(1);
t1197 = -pkin(3) * t963 + qJ(4) * t995 + t1224;
t913 = t1146 * t1205 - t1150 * t970;
t1196 = -pkin(2) * t913 - t1220;
t1195 = pkin(2) * t769 - t1146 * t755 - t1150 * t752;
t1194 = pkin(2) * t806 - t1146 * t773 - t1150 * t756;
t1193 = pkin(2) * t842 - t1146 * t779 - t1150 * t771;
t1192 = pkin(2) * t861 - t1146 * t784 - t1150 * t775;
t1191 = pkin(2) * t832 - t1146 * t796 - t1150 * t794;
t1190 = pkin(2) * t930 - t1146 * t868 - t1150 * t801;
t1189 = pkin(2) * t964 - t1146 * t834 - t1150 * t855;
t1188 = pkin(2) * t971 - t1146 * t837 - t1150 * t856;
t1183 = -pkin(3) * t804 + qJ(4) * t938 + t1213;
t1182 = -pkin(3) * t841 + qJ(4) * t898 + t1212;
t1181 = -pkin(3) * t860 + qJ(4) * t1206 + t1211;
t1180 = -pkin(3) * t928 + qJ(4) * t1015 + t1210;
t1177 = -pkin(8) * t768 - pkin(9) * t1307 - t1145 * t782;
t907 = t1146 * t995 - t1150 * t963;
t1173 = -pkin(2) * t907 - t1197;
t797 = t1146 * t938 - t1150 * t804;
t1171 = -pkin(2) * t797 - t1183;
t813 = t1146 * t898 - t1150 * t841;
t1170 = -pkin(2) * t813 - t1182;
t820 = t1146 * t1206 - t1150 * t860;
t1169 = -pkin(2) * t820 - t1181;
t1168 = -pkin(3) * t768 - qJ(4) * t879 + t1177;
t885 = t1015 * t1146 - t1150 * t928;
t1167 = -pkin(2) * t885 - t1180;
t764 = -t1146 * t879 - t1150 * t768;
t1164 = -pkin(2) * t764 - t1168;
t1162 = -pkin(3) * t1124 + qJ(4) * t1114 - t1166;
t1160 = -t1162 - t1367;
t1158 = -t1040 + t1368;
t1155 = pkin(3) * t1113 - qJ(4) * t1122 - t1003;
t1154 = -t1155 - t1368;
t1112 = t1137 - t1276;
t1093 = t1269 * t1302;
t1089 = t1207 - 0.2e1 * t1321;
t1082 = -t1117 + t1139 + 0.2e1 * t1141;
t1073 = -t1091 + t1125;
t1072 = t1090 - t1125;
t1071 = qJDD(3) * t1151 - t1093 * t1147;
t1070 = qJDD(3) * t1147 + t1093 * t1151;
t1069 = t1103 * t1146 + t1143 * t1302;
t1068 = -t1102 * t1150 + t1142 * t1302;
t1061 = (t1103 - t1133) * t1150;
t1047 = (t1102 + t1255) * t1146;
t1046 = t1200 - t1328;
t1043 = t1091 - t1090;
t1039 = pkin(6) * (-t1111 * t1151 - t1289);
t1038 = -t1292 + t1294;
t1037 = t1101 * t1146 + t1104 * t1150;
t1026 = t1068 * t1147 - t1231;
t1025 = t1069 * t1147 + t1231;
t1024 = -t1068 * t1151 - t1232;
t1023 = -t1069 * t1151 + t1232;
t1016 = pkin(1) * t1076 - qJ(2) * t1075;
t1010 = -t1031 + t1119;
t1009 = t1030 - t1119;
t1008 = (-t1094 * t1149 + t1096 * t1145) * t1129;
t1007 = (-t1094 * t1145 - t1096 * t1149) * t1129;
t1006 = t1037 * t1147 + t1112 * t1151;
t1005 = -t1037 * t1151 + t1112 * t1147;
t990 = t1027 * t1149 - t1096 * t1278;
t989 = t1027 * t1145 + t1096 * t1277;
t988 = -t1094 * t1277 + t1145 * t1199;
t987 = -t1094 * t1278 - t1149 * t1199;
t982 = t1007 * t1146 + t1092 * t1150;
t981 = -t1007 * t1150 + t1092 * t1146;
t979 = t1031 - t1030;
t978 = t1072 * t1149 - t1275;
t977 = -t1073 * t1145 + t1354;
t976 = t1072 * t1145 + t1273;
t975 = t1073 * t1149 + t1356;
t972 = t973 * t1326;
t968 = t986 + t1327;
t966 = -t1215 + t1361;
t965 = -t1158 - t1362;
t949 = (-t1032 * t1148 + t1034 * t1144) * t1120;
t948 = (-t1032 * t1144 - t1034 * t1148) * t1120;
t947 = t1222 - t1359;
t946 = t1221 + t1358;
t945 = -t1045 + t1345;
t944 = -qJ(2) * t1101 - t1274 + t1360;
t943 = t1146 * t989 + t1257;
t942 = -t1146 * t987 - t1257;
t941 = t1150 * t989 - t1258;
t940 = t1150 * t987 - t1258;
t939 = t1204 + t1340;
t932 = -t1001 * t1150 - t1003 * t1146;
t929 = -t1145 * t1205 - t1149 * t995;
t927 = -t1145 * t995 + t1149 * t1205;
t925 = -t1154 + t1362;
t924 = t1138 - t1160 - t1361;
t923 = t1146 * t976 - t1150 * t996;
t922 = -t1000 * t1150 + t1146 * t975;
t921 = -t1146 * t996 - t1150 * t976;
t920 = -t1000 * t1146 - t1150 * t975;
t919 = t1009 * t1148 - t1315;
t918 = -t1010 * t1144 + t1355;
t917 = t1009 * t1144 + t1308;
t916 = t1010 * t1148 + t1357;
t915 = -qJ(2) * t986 + t1334;
t914 = t1146 * t970 + t1150 * t1205;
t908 = t1146 * t963 + t1150 * t995;
t906 = t1146 * t984 + t1150 * t980 + t1327;
t905 = t1043 * t1150 + t1146 * t927;
t904 = t1043 * t1146 - t1150 * t927;
t899 = -t1013 + t1201;
t897 = -t1336 * t986 - t1329;
t896 = -qJ(2) * t1067 - t1336 * t985;
t893 = -t1034 * t1282 - t1148 * t1254;
t892 = t1034 * t1281 - t1144 * t1254;
t891 = t1032 * t1281 + t1144 * t1201;
t890 = t1032 * t1282 - t1148 * t1201;
t886 = t1015 * t1150 + t1146 * t928;
t883 = -t1337 - t1358;
t882 = -t1338 + t1359;
t881 = t1303 - t1345;
t880 = -t1101 * t1248 - t1310 - t1360;
t877 = t1208 + t1340;
t876 = -t1145 * t948 + t1149 * t949;
t875 = t1145 * t949 + t1149 * t948;
t870 = t1087 * t1150 + t1146 * t875;
t869 = t1087 * t1146 - t1150 * t875;
t866 = -t1145 * t917 + t1149 * t919;
t865 = -t1145 * t916 + t1149 * t918;
t864 = t1145 * t919 + t1149 * t917;
t863 = t1145 * t918 + t1149 * t916;
t853 = -t1144 * t1206 - t1148 * t898;
t851 = -t1144 * t898 + t1148 * t1206;
t846 = -t1145 * t892 + t1149 * t893;
t845 = -t1145 * t890 + t1149 * t891;
t844 = t1145 * t893 + t1149 * t892;
t843 = t1145 * t891 + t1149 * t890;
t836 = -qJ(2) * t932 - t1233;
t829 = t1146 * t844 + t1259;
t828 = t1146 * t843 - t1259;
t827 = t1150 * t844 - t1260;
t826 = -t1150 * t843 - t1260;
t825 = t1146 * t864 - t1150 * t899;
t824 = t1146 * t863 - t1150 * t903;
t823 = -t1146 * t899 - t1150 * t864;
t822 = -t1146 * t903 - t1150 * t863;
t821 = t1146 * t860 + t1150 * t1206;
t819 = -t1336 * t932 - t1344;
t818 = t1248 * t973 - t1336 * t931 - t972;
t816 = t1146 * t831 - t1150 * t955;
t814 = t1146 * t841 + t1150 * t898;
t809 = -qJ(2) * t914 - t1196;
t807 = -qJ(2) * t908 - t1173;
t805 = -t1145 * t851 + t1149 * t853;
t803 = t1145 * t853 + t1149 * t851;
t800 = t1146 * t803 + t1150 * t979;
t799 = t1146 * t979 - t1150 * t803;
t798 = t1146 * t804 + t1150 * t938;
t793 = -t1336 * t914 + t1188;
t792 = qJ(2) * t971 - t1336 * t913 + t1240;
t791 = -qJ(2) * t886 - t1167;
t790 = -t1336 * t908 + t1189;
t789 = qJ(2) * t964 - t1336 * t907 + t1241;
t781 = -t1336 * t886 + t1190;
t780 = qJ(2) * t930 - t1336 * t885 + t1242;
t770 = -qJ(2) * t816 - t1202;
t766 = -qJ(2) * t821 - t1169;
t765 = t1146 * t768 - t1150 * t879;
t763 = -qJ(2) * t814 - t1170;
t762 = -t1336 * t816 + t1191;
t761 = qJ(2) * t832 - t1336 * t815 + t1243;
t760 = -t1336 * t821 + t1192;
t759 = qJ(2) * t861 - t1336 * t820 + t1244;
t758 = -t1336 * t814 + t1193;
t757 = qJ(2) * t842 - t1336 * t813 + t1245;
t753 = -qJ(2) * t798 - t1171;
t751 = -t1336 * t798 + t1194;
t750 = qJ(2) * t806 - t1336 * t797 + t1246;
t749 = -qJ(2) * t765 - t1164;
t748 = -t1336 * t765 + t1195;
t747 = qJ(2) * t769 - t1336 * t764 + t1247;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1109, 0, -t1110, 0, -t1228, -t1227, -t1218, -pkin(6) * t1218, 0, -t1109, t1110, 0, 0, 0, t1219, t1228, t1227, pkin(6) * t1219 + (-pkin(1) * t1147 + qJ(2) * t1151) * g(3), t1025, t1006, -t1353, t1026, t1351, t1071, -t1147 * t947 + t1151 * t965 - t1370, -t1147 * t946 + t1151 * t966 - t1372, -pkin(2) * t1288 + t1147 * t968 - t1324, t1151 * t915 - t1147 * t897 - pkin(6) * (-t1067 * t1147 - t1151 * t985), t1071, t1353, -t1351, t1025, t1006, t1026, t1046 * t1151 + t1147 * t906 - t1324, -t1147 * t882 + t1151 * t925 + t1370, -t1147 * t883 + t1151 * t924 + t1372, t1151 * t836 - t1147 * t819 - pkin(6) * (-t1147 * t973 - t1151 * t931), -t1147 * t941 + t1151 * t990, t1147 * t904 + t1151 * t929, t1147 * t920 + t1151 * t977, t1147 * t940 - t1151 * t988, t1147 * t921 + t1151 * t978, t1008 * t1151 + t1147 * t981, t1151 * t807 - t1147 * t790 - pkin(6) * (t1147 * t964 - t1151 * t907), t1151 * t809 - t1147 * t793 - pkin(6) * (t1147 * t971 - t1151 * t913), t1151 * t791 - t1147 * t781 - pkin(6) * (t1147 * t930 - t1151 * t885), t1151 * t770 - t1147 * t762 - pkin(6) * (t1147 * t832 - t1151 * t815), -t1147 * t827 + t1151 * t846, t1147 * t799 + t1151 * t805, t1147 * t822 + t1151 * t865, t1147 * t826 + t1151 * t845, t1147 * t823 + t1151 * t866, t1147 * t869 + t1151 * t876, t1151 * t763 - t1147 * t758 - pkin(6) * (t1147 * t842 - t1151 * t813), t1151 * t766 - t1147 * t760 - pkin(6) * (t1147 * t861 - t1151 * t820), t1151 * t753 - t1147 * t751 - pkin(6) * (t1147 * t806 - t1151 * t797), t1151 * t749 - t1147 * t748 - pkin(6) * (t1147 * t769 - t1151 * t764); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1110, 0, t1109, 0, t1227, -t1228, t1237, pkin(6) * t1237, 0, -t1110, -t1109, 0, 0, 0, t1238, -t1227, t1228, pkin(6) * t1238 + (pkin(1) * t1151 + qJ(2) * t1147) * g(3), t1023, t1005, t1352, t1024, -t1350, t1070, t1147 * t965 + t1151 * t947 - t1369, t1147 * t966 + t1151 * t946 - t1371, -pkin(2) * t1289 - t1151 * t968 + t1039, t1147 * t915 + t1151 * t897 + pkin(6) * (-t1067 * t1151 + t1147 * t985), t1070, -t1352, t1350, t1023, t1005, t1024, t1046 * t1147 - t1151 * t906 + t1039, t1147 * t925 + t1151 * t882 + t1369, t1147 * t924 + t1151 * t883 + t1371, t1147 * t836 + t1151 * t819 + pkin(6) * (t1147 * t931 - t1151 * t973), t1147 * t990 + t1151 * t941, t1147 * t929 - t1151 * t904, t1147 * t977 - t1151 * t920, -t1147 * t988 - t1151 * t940, t1147 * t978 - t1151 * t921, t1008 * t1147 - t1151 * t981, t1147 * t807 + t1151 * t790 + pkin(6) * (t1147 * t907 + t1151 * t964), t1147 * t809 + t1151 * t793 + pkin(6) * (t1147 * t913 + t1151 * t971), t1147 * t791 + t1151 * t781 + pkin(6) * (t1147 * t885 + t1151 * t930), t1147 * t770 + t1151 * t762 + pkin(6) * (t1147 * t815 + t1151 * t832), t1147 * t846 + t1151 * t827, t1147 * t805 - t1151 * t799, t1147 * t865 - t1151 * t822, t1147 * t845 - t1151 * t826, t1147 * t866 - t1151 * t823, t1147 * t876 - t1151 * t869, t1147 * t763 + t1151 * t758 + pkin(6) * (t1147 * t813 + t1151 * t842), t1147 * t766 + t1151 * t760 + pkin(6) * (t1147 * t820 + t1151 * t861), t1147 * t753 + t1151 * t751 + pkin(6) * (t1147 * t797 + t1151 * t806), t1147 * t749 + t1151 * t748 + pkin(6) * (t1147 * t764 + t1151 * t769); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1116, t1117, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1089, t1082, t1016, t1061, t1038, -t1056, t1047, -t1059, 0, t944, t945, t939, t896, 0, t1056, t1059, t1061, t1038, t1047, t877, t880, t881, t818, t943, t905, t922, t942, t923, t982, t789, t792, t780, t761, t829, t800, t824, t828, t825, t870, t757, t759, t750, t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1153, 0, 0, -g(3), -t1116, 0, 0, -qJDD(1), t1153, 0, 0, 0, -t1076, 0, g(3), qJ(2) * g(3), t1256, t1112, t1268, -t1256, -t1134, qJDD(3), t965, t966, -t1328, t915, qJDD(3), -t1268, t1134, t1256, t1112, -t1256, t1046, t925, t924, t836, t990, t929, t977, -t988, t978, t1008, t807, t809, t791, t770, t846, t805, t865, t845, t866, t876, t763, t766, t753, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1153, 0, qJDD(1), 0, g(3), 0, -t1117, 0, 0, -t1153, -qJDD(1), 0, 0, 0, -t1075, -g(3), 0, pkin(1) * g(3), -t1069, -t1037, t1048, -t1068, -t1050, t1093, t947, t946, -t968, t897, t1093, -t1048, t1050, -t1069, -t1037, -t1068, -t906, t882, t883, t819, t941, -t904, -t920, -t940, -t921, -t981, t790, t793, t781, t762, t827, -t799, -t822, -t826, -t823, -t869, t758, t760, t751, t748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1116, t1117, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1089, t1082, t1016, t1061, t1038, -t1056, t1047, -t1059, 0, t944, t945, t939, t896, 0, t1056, t1059, t1061, t1038, t1047, t877, t880, t881, t818, t943, t905, t922, t942, t923, t982, t789, t792, t780, t761, t829, t800, t824, t828, t825, t870, t757, t759, t750, t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1076, -t1075, 0, t1061, t1038, -t1056, t1047, -t1059, 0, -t1274 + t1366, -t1045 + t1365, t1204, -pkin(7) * t985, 0, t1056, t1059, t1061, t1038, t1047, t1208, -qJ(4) * t1294 - t1310 - t1366, t1303 - t1365, -pkin(7) * t931 + t1318 * t973 - t972, t943, t905, t922, t942, t923, t982, -pkin(7) * t907 + t1241, -pkin(7) * t913 + t1240, -pkin(7) * t885 + t1242, -pkin(7) * t815 + t1243, t829, t800, t824, t828, t825, t870, -pkin(7) * t813 + t1245, -pkin(7) * t820 + t1244, -pkin(7) * t797 + t1246, -pkin(7) * t764 + t1247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1153, 0, 0, 0, t1076, 0, -g(3), 0, -t1256, -t1112, -t1268, t1256, t1134, -qJDD(3), t1158, t1215, t1328, -t1334, -qJDD(3), t1268, -t1134, -t1256, -t1112, t1256, -t1046, t1154, t1160 + t1266, t1233, -t990, -t929, -t977, t988, -t978, -t1008, t1173, t1196, t1167, t1202, -t846, -t805, -t865, -t845, -t866, -t876, t1170, t1169, t1171, t1164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1153, qJDD(1), 0, 0, 0, t1075, g(3), 0, 0, t1069, t1037, -t1048, t1068, t1050, -t1093, -t1222 + t1364, -t1221 - t1363, t968, pkin(7) * t986 + t1329, -t1093, t1048, -t1050, t1069, t1037, t1068, t906, t1338 - t1364, t1337 + t1363, pkin(7) * t932 + t1344, -t941, t904, t920, t940, t921, t981, pkin(7) * t908 - t1189, pkin(7) * t914 - t1188, pkin(7) * t886 - t1190, pkin(7) * t816 - t1191, -t827, t799, t822, t826, t823, t869, pkin(7) * t814 - t1193, pkin(7) * t821 - t1192, pkin(7) * t798 - t1194, pkin(7) * t765 - t1195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1103, t1101, -t1113, t1133, t1121, -t1133, 0, -t1067, -t1040, 0, -t1133, t1113, -t1121, t1103, t1101, t1133, t984, -qJ(4) * t1101, t957, qJ(4) * t973, t1044, t1043, -t1000, -t1044, -t996, t1092, t834, t837, t868, t796, t983, t979, -t903, -t983, -t899, t1087, t779, t784, t773, t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1255, t1104, t1123, -t1102, t1114, -t1255, t1067, 0, -t1041, 0, -t1255, -t1123, -t1114, t1255, t1104, -t1102, t980, t959, pkin(3) * t1104, pkin(3) * t973, -t989, -t927, -t975, t987, -t976, -t1007, t855, t856, t801, t794, -t844, -t803, -t863, -t843, -t864, -t875, t771, t775, t756, t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, t1112, t1268, -t1256, -t1134, qJDD(3), t1040, t1041, 0, 0, qJDD(3), -t1268, t1134, t1256, t1112, -t1256, t1200, t1155, t1138 + t1162, t1304, t990, t929, t977, -t988, t978, t1008, t1197, t1220, t1180, t1234, t846, t805, t865, t845, t866, t876, t1182, t1181, t1183, t1168; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1268, t1134, t1256, t1112, -t1256, 0, -t1003, -t1001, 0, t990, t929, t977, -t988, t978, t1008, t1224, t1261, t1210, -t1330, t846, t805, t865, t845, t866, t876, t1212, t1211, t1213, t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1133, -t1113, t1121, -t1103, -t1101, -t1133, t1003, 0, -t973, 0, -t1044, -t1043, t1000, t1044, t996, -t1092, t1214, t1235, -t1332, -t1333, -t983, -t979, t903, t983, t899, -t1087, t1198, t1176, t1262, t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1255, t1123, t1114, -t1255, -t1104, t1102, t1001, t973, 0, 0, t989, t927, t975, -t987, t976, t1007, pkin(8) * t964 - t1225, pkin(8) * t971 - t1226, pkin(8) * t930 - t1184, pkin(8) * t832 + t1331, t844, t803, t863, t843, t864, t875, pkin(8) * t842 - t1186, pkin(8) * t861 - t1185, pkin(8) * t806 - t1187, pkin(8) * t769 - t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1027, -t995, t1341, t1280, t1072, -t1280, 0, -t955, t873, 0, t893, t853, t918, t891, t919, t949, t839, t849, t777, -pkin(9) * t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, t1205, t1073, t1199, t1018, -t1279, t955, 0, t874, 0, t892, t851, t916, t890, t917, t948, t812, t817, t774, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1044, t1043, -t1000, -t1044, -t996, t1092, -t873, -t874, 0, 0, t983, t979, -t903, -t983, -t899, t1087, t1230, t1203, t850, t786; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1254, -t898, t1343, t1283, t1009, -t1283, 0, -t879, t810, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1013, t1206, t1010, -t1201, t961, -t1013, t879, 0, t811, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t979, -t903, -t983, -t899, t1087, -t810, -t811, 0, 0;];
m_new_reg  = t1;
