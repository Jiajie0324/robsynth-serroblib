% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 22:44
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR8_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR8_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR8_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR8_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR8_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR8_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 22:41:08
% EndTime: 2019-05-06 22:41:55
% DurationCPUTime: 18.88s
% Computational Cost: add. (185077->671), mult. (409112->966), div. (0->0), fcn. (309489->12), ass. (0->412)
t377 = sin(pkin(11));
t382 = sin(qJ(2));
t422 = qJD(1) * qJD(2);
t367 = t382 * t422;
t387 = cos(qJ(2));
t421 = t387 * qJDD(1);
t352 = -t367 + t421;
t378 = cos(pkin(11));
t427 = qJD(1) * t382;
t347 = qJD(2) * t377 + t378 * t427;
t407 = qJD(2) * t378 - t377 * t427;
t399 = t407 * t347;
t474 = -t352 + t399;
t480 = t377 * t474;
t479 = t378 * t474;
t379 = sin(qJ(6));
t381 = sin(qJ(4));
t386 = cos(qJ(4));
t322 = t347 * t381 - t386 * t407;
t323 = t386 * t347 + t381 * t407;
t380 = sin(qJ(5));
t385 = cos(qJ(5));
t293 = t385 * t322 + t323 * t380;
t295 = -t322 * t380 + t323 * t385;
t384 = cos(qJ(6));
t244 = t384 * t293 + t295 * t379;
t246 = -t293 * t379 + t295 * t384;
t203 = t246 * t244;
t348 = -qJDD(4) + t352;
t345 = -qJDD(5) + t348;
t338 = -qJDD(6) + t345;
t471 = -t203 - t338;
t478 = t379 * t471;
t248 = t295 * t293;
t469 = -t248 - t345;
t477 = t380 * t469;
t476 = t384 * t471;
t475 = t385 * t469;
t406 = t407 ^ 2;
t389 = qJD(1) ^ 2;
t436 = t323 * t322;
t391 = -t348 - t436;
t473 = t381 * t391;
t472 = t386 * t391;
t369 = t382 * qJDD(1);
t415 = t387 * t422;
t351 = t369 + t415;
t330 = qJDD(2) * t377 + t378 * t351;
t409 = -t378 * qJDD(2) + t351 * t377;
t278 = -t322 * qJD(4) + t386 * t330 - t381 * t409;
t410 = t330 * t381 + t386 * t409;
t394 = -t323 * qJD(4) - t410;
t222 = -t293 * qJD(5) + t385 * t278 + t380 * t394;
t412 = t278 * t380 - t385 * t394;
t393 = qJD(5) * t295 + t412;
t145 = -t244 * qJD(6) + t384 * t222 - t379 * t393;
t426 = t387 * qJD(1);
t365 = -qJD(4) + t426;
t360 = -qJD(5) + t365;
t355 = -qJD(6) + t360;
t234 = t244 * t355;
t470 = t234 + t145;
t281 = t293 * t360;
t191 = -t281 + t222;
t468 = t281 + t222;
t311 = t322 * t365;
t265 = -t311 + t278;
t467 = t311 + t278;
t335 = t407 * t426;
t315 = -t330 - t335;
t336 = t347 * t426;
t313 = -t409 - t336;
t413 = t222 * t379 + t384 * t393;
t126 = (qJD(6) + t355) * t246 + t413;
t188 = (qJD(5) + t360) * t295 + t412;
t261 = (qJD(4) + t365) * t323 + t410;
t242 = t244 ^ 2;
t243 = t246 ^ 2;
t291 = t293 ^ 2;
t292 = t295 ^ 2;
t466 = t322 ^ 2;
t321 = t323 ^ 2;
t346 = t347 ^ 2;
t354 = t355 ^ 2;
t359 = t360 ^ 2;
t363 = t365 ^ 2;
t465 = qJD(2) ^ 2;
t464 = 2 * qJD(3);
t383 = sin(qJ(1));
t388 = cos(qJ(1));
t414 = g(1) * t383 - t388 * g(2);
t341 = qJDD(1) * pkin(1) + pkin(7) * t389 + t414;
t401 = t351 + t415;
t301 = -t401 * qJ(3) + (-t352 + t367) * pkin(2) - t341;
t403 = g(1) * t388 + g(2) * t383;
t455 = qJDD(1) * pkin(7);
t342 = -pkin(1) * t389 - t403 + t455;
t402 = -t387 * pkin(2) - t382 * qJ(3);
t408 = t389 * t402 + t342;
t461 = g(3) * t382;
t305 = -pkin(2) * t465 + qJDD(2) * qJ(3) + t387 * t408 - t461;
t266 = -t378 * t301 + t377 * t305 + t347 * t464;
t226 = pkin(3) * t474 + pkin(8) * t315 - t266;
t267 = t377 * t301 + t378 * t305 + t407 * t464;
t331 = -pkin(3) * t426 - pkin(8) * t347;
t228 = -pkin(3) * t406 - pkin(8) * t409 + t331 * t426 + t267;
t176 = -t386 * t226 + t228 * t381;
t154 = t391 * pkin(4) - pkin(9) * t265 - t176;
t177 = t381 * t226 + t386 * t228;
t306 = -pkin(4) * t365 - pkin(9) * t323;
t157 = -pkin(4) * t466 + pkin(9) * t394 + t365 * t306 + t177;
t106 = -t385 * t154 + t157 * t380;
t107 = t380 * t154 + t385 * t157;
t67 = -t106 * t385 + t107 * t380;
t463 = pkin(4) * t67;
t141 = -t188 * t380 - t191 * t385;
t462 = pkin(4) * t141;
t460 = g(3) * t387;
t80 = pkin(5) * t469 - pkin(10) * t191 - t106;
t274 = -pkin(5) * t360 - pkin(10) * t295;
t92 = -t291 * pkin(5) - pkin(10) * t393 + t360 * t274 + t107;
t56 = t379 * t92 - t384 * t80;
t57 = t379 * t80 + t384 * t92;
t35 = t379 * t57 - t384 * t56;
t459 = t35 * t380;
t458 = t35 * t385;
t457 = t381 * t67;
t456 = t386 * t67;
t304 = -qJDD(2) * pkin(2) - t465 * qJ(3) + t382 * t408 + qJDD(3) + t460;
t268 = t409 * pkin(3) - t406 * pkin(8) + t331 * t347 + t304;
t201 = -t394 * pkin(4) - t466 * pkin(9) + t306 * t323 + t268;
t131 = pkin(5) * t393 - t291 * pkin(10) + t274 * t295 + t201;
t454 = t131 * t379;
t453 = t131 * t384;
t132 = -t176 * t386 + t177 * t381;
t452 = t132 * t377;
t451 = t132 * t378;
t197 = -t203 + t338;
t450 = t197 * t379;
t449 = t197 * t384;
t448 = t201 * t380;
t447 = t201 * t385;
t236 = -t248 + t345;
t446 = t236 * t380;
t445 = t236 * t385;
t444 = t268 * t381;
t443 = t268 * t386;
t283 = t348 - t436;
t442 = t283 * t381;
t441 = t283 * t386;
t440 = t304 * t377;
t439 = t304 * t378;
t316 = t352 + t399;
t438 = t316 * t377;
t437 = t316 * t378;
t435 = t355 * t379;
t434 = t355 * t384;
t433 = t360 * t380;
t432 = t360 * t385;
t431 = t365 * t381;
t430 = t365 * t386;
t364 = t387 * t389 * t382;
t429 = t382 * (qJDD(2) + t364);
t428 = t387 * (-t364 + qJDD(2));
t420 = t387 * t203;
t419 = t387 * t248;
t418 = t387 * t436;
t36 = t379 * t56 + t384 * t57;
t17 = t36 * t380 + t458;
t34 = pkin(5) * t35;
t417 = pkin(4) * t17 + t34;
t129 = -t234 + t145;
t87 = -t126 * t379 - t129 * t384;
t89 = -t126 * t384 + t129 * t379;
t52 = t380 * t89 + t385 * t87;
t85 = pkin(5) * t87;
t416 = pkin(4) * t52 + t85;
t68 = t106 * t380 + t385 * t107;
t133 = t176 * t381 + t386 * t177;
t215 = t266 * t377 + t378 * t267;
t327 = t342 * t382 + t460;
t328 = t342 * t387 - t461;
t411 = t382 * t327 + t387 * t328;
t270 = -t292 - t359;
t207 = t270 * t385 + t446;
t405 = pkin(4) * t207 - t107;
t200 = -t354 - t242;
t149 = t200 * t379 + t476;
t404 = pkin(5) * t149 - t56;
t400 = t266 * t378 - t267 * t377;
t398 = -pkin(1) + t402;
t241 = -t359 - t291;
t195 = t241 * t380 + t475;
t397 = pkin(4) * t195 - t106;
t229 = -t243 - t354;
t167 = t229 * t384 + t450;
t396 = pkin(5) * t167 - t57;
t395 = t387 * t399;
t150 = t200 * t384 - t478;
t103 = t149 * t385 + t150 * t380;
t392 = pkin(4) * t103 + t404;
t168 = -t229 * t379 + t449;
t112 = t167 * t385 + t168 * t380;
t390 = pkin(4) * t112 + t396;
t375 = t387 ^ 2;
t374 = t382 ^ 2;
t371 = t375 * t389;
t370 = t374 * t389;
t353 = -0.2e1 * t367 + t421;
t350 = t369 + 0.2e1 * t415;
t343 = t387 * t352;
t334 = -t346 - t371;
t333 = -t346 + t371;
t332 = t406 - t371;
t324 = -t371 - t406;
t314 = t330 - t335;
t312 = -t336 + t409;
t309 = -t406 - t346;
t308 = -t321 + t363;
t307 = -t363 + t466;
t303 = -t321 - t363;
t298 = -t334 * t377 + t437;
t297 = t334 * t378 + t438;
t296 = t321 - t466;
t289 = -t363 - t466;
t287 = t324 * t378 - t480;
t286 = t324 * t377 + t479;
t280 = -t292 + t359;
t279 = t291 - t359;
t277 = t313 * t378 - t315 * t377;
t273 = (t322 * t386 - t323 * t381) * t365;
t272 = (t322 * t381 + t323 * t386) * t365;
t269 = -t321 - t466;
t260 = (qJD(4) - t365) * t323 + t410;
t258 = t307 * t386 + t442;
t257 = -t308 * t381 + t472;
t256 = t307 * t381 - t441;
t255 = t308 * t386 + t473;
t254 = t278 * t386 + t323 * t431;
t253 = t278 * t381 - t323 * t430;
t252 = -t322 * t430 - t381 * t394;
t251 = -t322 * t431 + t386 * t394;
t250 = -t303 * t381 + t441;
t249 = t303 * t386 + t442;
t247 = t292 - t291;
t240 = t289 * t386 - t473;
t239 = t289 * t381 + t472;
t233 = -t243 + t354;
t232 = t242 - t354;
t231 = (t293 * t385 - t295 * t380) * t360;
t230 = (t293 * t380 + t295 * t385) * t360;
t223 = -t291 - t292;
t220 = t279 * t385 + t446;
t219 = -t280 * t380 + t475;
t218 = t279 * t380 - t445;
t217 = t280 * t385 + t477;
t213 = -t261 * t386 + t265 * t381;
t212 = -t260 * t386 - t381 * t467;
t211 = -t261 * t381 - t265 * t386;
t210 = -t260 * t381 + t386 * t467;
t209 = -pkin(8) * t249 + t443;
t208 = -t270 * t380 + t445;
t206 = -t249 * t377 + t250 * t378;
t205 = t249 * t378 + t250 * t377;
t204 = -pkin(8) * t239 + t444;
t202 = t243 - t242;
t196 = t241 * t385 - t477;
t194 = -t239 * t377 + t240 * t378;
t193 = t239 * t378 + t240 * t377;
t187 = (qJD(5) - t360) * t295 + t412;
t186 = (t244 * t384 - t246 * t379) * t355;
t185 = (t244 * t379 + t246 * t384) * t355;
t184 = t222 * t385 + t295 * t433;
t183 = t222 * t380 - t295 * t432;
t182 = -t293 * t432 + t380 * t393;
t181 = -t293 * t433 - t385 * t393;
t180 = -t230 * t381 + t231 * t386;
t179 = t230 * t386 + t231 * t381;
t178 = -pkin(3) * t467 + pkin(8) * t250 + t444;
t174 = -pkin(3) * t260 + pkin(8) * t240 - t443;
t173 = -t242 - t243;
t172 = t232 * t384 + t450;
t171 = -t233 * t379 + t476;
t170 = t232 * t379 - t449;
t169 = t233 * t384 + t478;
t165 = -t218 * t381 + t220 * t386;
t164 = -t217 * t381 + t219 * t386;
t163 = t218 * t386 + t220 * t381;
t162 = t217 * t386 + t219 * t381;
t161 = -t211 * t377 + t213 * t378;
t160 = t211 * t378 + t213 * t377;
t159 = -t207 * t381 + t208 * t386;
t158 = t207 * t386 + t208 * t381;
t155 = -pkin(9) * t207 + t447;
t151 = -pkin(9) * t195 + t448;
t147 = -t195 * t381 + t196 * t386;
t146 = t195 * t386 + t196 * t381;
t144 = -qJD(6) * t246 - t413;
t143 = -t188 * t385 + t191 * t380;
t142 = -t187 * t385 - t380 * t468;
t140 = -t187 * t380 + t385 * t468;
t139 = -t185 * t380 + t186 * t385;
t138 = t185 * t385 + t186 * t380;
t137 = -t183 * t381 + t184 * t386;
t136 = -t181 * t381 + t182 * t386;
t135 = t183 * t386 + t184 * t381;
t134 = t181 * t386 + t182 * t381;
t125 = (qJD(6) - t355) * t246 + t413;
t124 = t145 * t384 + t246 * t435;
t123 = t145 * t379 - t246 * t434;
t122 = -t144 * t379 - t244 * t434;
t121 = t144 * t384 - t244 * t435;
t120 = -pkin(4) * t468 + pkin(9) * t208 + t448;
t119 = -pkin(3) * t268 + pkin(8) * t133;
t118 = -pkin(4) * t187 + pkin(9) * t196 - t447;
t117 = -t170 * t380 + t172 * t385;
t116 = -t169 * t380 + t171 * t385;
t115 = t170 * t385 + t172 * t380;
t114 = t169 * t385 + t171 * t380;
t113 = -t167 * t380 + t168 * t385;
t111 = -pkin(8) * t211 - t132;
t110 = -t158 * t377 + t159 * t378;
t109 = t158 * t378 + t159 * t377;
t108 = -pkin(3) * t269 + pkin(8) * t213 + t133;
t104 = -t149 * t380 + t150 * t385;
t102 = -pkin(10) * t167 + t453;
t101 = -t146 * t377 + t147 * t378;
t100 = t146 * t378 + t147 * t377;
t99 = -t141 * t381 + t143 * t386;
t98 = -t140 * t381 + t142 * t386;
t97 = t141 * t386 + t143 * t381;
t96 = t140 * t386 + t142 * t381;
t95 = -t138 * t381 + t139 * t386;
t94 = t138 * t386 + t139 * t381;
t93 = -pkin(10) * t149 + t454;
t91 = t133 * t378 - t452;
t90 = t133 * t377 + t451;
t88 = -t125 * t384 - t379 * t470;
t86 = -t125 * t379 + t384 * t470;
t84 = -t123 * t380 + t124 * t385;
t83 = -t121 * t380 + t122 * t385;
t82 = t123 * t385 + t124 * t380;
t81 = t121 * t385 + t122 * t380;
t78 = -t115 * t381 + t117 * t386;
t77 = -t114 * t381 + t116 * t386;
t76 = t115 * t386 + t117 * t381;
t75 = t114 * t386 + t116 * t381;
t74 = -pkin(8) * t158 - t120 * t381 + t155 * t386;
t73 = -t112 * t381 + t113 * t386;
t72 = t112 * t386 + t113 * t381;
t71 = -pkin(5) * t470 + pkin(10) * t168 + t454;
t70 = -pkin(5) * t125 + pkin(10) * t150 - t453;
t69 = -pkin(8) * t146 - t118 * t381 + t151 * t386;
t66 = -pkin(3) * t468 + pkin(8) * t159 + t120 * t386 + t155 * t381;
t65 = -t103 * t381 + t104 * t386;
t64 = t103 * t386 + t104 * t381;
t63 = -pkin(3) * t187 + pkin(8) * t147 + t118 * t386 + t151 * t381;
t62 = -pkin(4) * t201 + pkin(9) * t68;
t61 = -t377 * t97 + t378 * t99;
t60 = t377 * t99 + t378 * t97;
t59 = -pkin(9) * t141 - t67;
t58 = -pkin(4) * t223 + pkin(9) * t143 + t68;
t54 = -t380 * t87 + t385 * t89;
t53 = -t380 * t86 + t385 * t88;
t51 = t380 * t88 + t385 * t86;
t50 = -t381 * t82 + t386 * t84;
t49 = -t381 * t81 + t386 * t83;
t48 = t381 * t84 + t386 * t82;
t47 = t381 * t83 + t386 * t81;
t46 = -t377 * t72 + t378 * t73;
t45 = t377 * t73 + t378 * t72;
t44 = -pkin(9) * t112 + t102 * t385 - t380 * t71;
t43 = t386 * t68 - t457;
t42 = t381 * t68 + t456;
t41 = -pkin(9) * t103 - t380 * t70 + t385 * t93;
t40 = -t377 * t64 + t378 * t65;
t39 = t377 * t65 + t378 * t64;
t38 = -pkin(4) * t470 + pkin(9) * t113 + t102 * t380 + t385 * t71;
t37 = -pkin(4) * t125 + pkin(9) * t104 + t380 * t93 + t385 * t70;
t33 = -t381 * t52 + t386 * t54;
t32 = -t381 * t51 + t386 * t53;
t31 = t381 * t54 + t386 * t52;
t30 = t381 * t53 + t386 * t51;
t29 = -pkin(5) * t131 + pkin(10) * t36;
t28 = -pkin(8) * t97 - t381 * t58 + t386 * t59;
t27 = -pkin(3) * t223 + pkin(8) * t99 + t381 * t59 + t386 * t58;
t26 = -pkin(10) * t87 - t35;
t25 = -pkin(5) * t173 + pkin(10) * t89 + t36;
t24 = -t377 * t42 + t378 * t43;
t23 = t377 * t43 + t378 * t42;
t22 = -pkin(8) * t42 - pkin(9) * t456 - t381 * t62;
t21 = -pkin(3) * t201 + pkin(8) * t43 - pkin(9) * t457 + t386 * t62;
t20 = -pkin(8) * t72 - t38 * t381 + t386 * t44;
t19 = -pkin(3) * t470 + pkin(8) * t73 + t38 * t386 + t381 * t44;
t18 = t36 * t385 - t459;
t16 = -t31 * t377 + t33 * t378;
t15 = t31 * t378 + t33 * t377;
t14 = -pkin(8) * t64 - t37 * t381 + t386 * t41;
t13 = -pkin(3) * t125 + pkin(8) * t65 + t37 * t386 + t381 * t41;
t12 = -pkin(9) * t52 - t25 * t380 + t26 * t385;
t11 = -pkin(4) * t173 + pkin(9) * t54 + t25 * t385 + t26 * t380;
t10 = -t17 * t381 + t18 * t386;
t9 = t17 * t386 + t18 * t381;
t8 = -pkin(9) * t17 - pkin(10) * t458 - t29 * t380;
t7 = -pkin(4) * t131 + pkin(9) * t18 - pkin(10) * t459 + t29 * t385;
t6 = -pkin(8) * t31 - t11 * t381 + t12 * t386;
t5 = -pkin(3) * t173 + pkin(8) * t33 + t11 * t386 + t12 * t381;
t4 = t10 * t378 - t377 * t9;
t3 = t10 * t377 + t378 * t9;
t2 = -pkin(8) * t9 - t381 * t7 + t386 * t8;
t1 = -pkin(3) * t131 + pkin(8) * t10 + t381 * t8 + t386 * t7;
t55 = [0, 0, 0, 0, 0, qJDD(1), t414, t403, 0, 0, t401 * t382, t350 * t387 + t353 * t382, t429 + t387 * (-t370 + t465), -t382 * t415 + t343, t382 * (t371 - t465) + t428, 0, t387 * t341 + pkin(1) * t353 + pkin(7) * (t387 * (-t371 - t465) - t429), -t382 * t341 - pkin(1) * t350 + pkin(7) * (-t428 - t382 * (-t370 - t465)), pkin(1) * (t370 + t371) + (t374 + t375) * t455 + t411, pkin(1) * t341 + pkin(7) * t411, t382 * (t330 * t378 + t336 * t377) + t395, t382 * (-t312 * t378 - t314 * t377) + t387 * (t406 - t346), t382 * (-t333 * t377 + t479) + t387 * t315, t382 * (t335 * t378 + t377 * t409) - t395, t382 * (t332 * t378 + t438) - t387 * t313, t343 + t382 * (-t377 * t347 - t378 * t407) * t426, t382 * (-qJ(3) * t286 + t440) + t387 * (-pkin(2) * t286 + t266) - pkin(1) * t286 + pkin(7) * (t287 * t387 + t312 * t382), t382 * (-qJ(3) * t297 + t439) + t387 * (-pkin(2) * t297 + t267) - pkin(1) * t297 + pkin(7) * (t298 * t387 + t314 * t382), t382 * t400 + pkin(7) * (t277 * t387 + t309 * t382) + t398 * (t313 * t377 + t315 * t378), pkin(7) * (t215 * t387 + t304 * t382) - t398 * t400, t382 * (-t253 * t377 + t254 * t378) - t418, t382 * (-t210 * t377 + t212 * t378) - t387 * t296, t382 * (-t255 * t377 + t257 * t378) - t387 * t265, t382 * (-t251 * t377 + t252 * t378) + t418, t382 * (-t256 * t377 + t258 * t378) + t387 * t261, t382 * (-t272 * t377 + t273 * t378) + t387 * t348, t382 * (-qJ(3) * t193 - t174 * t377 + t204 * t378) + t387 * (-pkin(2) * t193 - pkin(3) * t239 + t176) - pkin(1) * t193 + pkin(7) * (t194 * t387 + t260 * t382), t382 * (-qJ(3) * t205 - t178 * t377 + t209 * t378) + t387 * (-pkin(2) * t205 - pkin(3) * t249 + t177) - pkin(1) * t205 + pkin(7) * (t206 * t387 + t382 * t467), t382 * (-qJ(3) * t160 - t108 * t377 + t111 * t378) + t387 * (-pkin(2) * t160 - pkin(3) * t211) - pkin(1) * t160 + pkin(7) * (t161 * t387 + t269 * t382), t382 * (-pkin(8) * t451 - qJ(3) * t90 - t119 * t377) + t387 * (-pkin(2) * t90 - pkin(3) * t132) - pkin(1) * t90 + pkin(7) * (t268 * t382 + t387 * t91), t382 * (-t135 * t377 + t137 * t378) - t419, t382 * (-t377 * t96 + t378 * t98) - t387 * t247, t382 * (-t162 * t377 + t164 * t378) - t387 * t191, t382 * (-t134 * t377 + t136 * t378) + t419, t382 * (-t163 * t377 + t165 * t378) + t387 * t188, t382 * (-t179 * t377 + t180 * t378) + t387 * t345, t382 * (-qJ(3) * t100 - t377 * t63 + t378 * t69) + t387 * (-pkin(2) * t100 - pkin(3) * t146 - t397) - pkin(1) * t100 + pkin(7) * (t101 * t387 + t187 * t382), t382 * (-qJ(3) * t109 - t377 * t66 + t378 * t74) + t387 * (-pkin(2) * t109 - pkin(3) * t158 - t405) - pkin(1) * t109 + pkin(7) * (t110 * t387 + t382 * t468), t382 * (-qJ(3) * t60 - t27 * t377 + t28 * t378) + t387 * (-pkin(2) * t60 - pkin(3) * t97 - t462) - pkin(1) * t60 + pkin(7) * (t223 * t382 + t387 * t61), t382 * (-qJ(3) * t23 - t21 * t377 + t22 * t378) + t387 * (-pkin(2) * t23 - pkin(3) * t42 - t463) - pkin(1) * t23 + pkin(7) * (t201 * t382 + t24 * t387), t382 * (-t377 * t48 + t378 * t50) - t420, t382 * (-t30 * t377 + t32 * t378) - t387 * t202, t382 * (-t377 * t75 + t378 * t77) - t387 * t129, t382 * (-t377 * t47 + t378 * t49) + t420, t382 * (-t377 * t76 + t378 * t78) + t387 * t126, t382 * (-t377 * t94 + t378 * t95) + t387 * t338, t382 * (-qJ(3) * t39 - t13 * t377 + t14 * t378) + t387 * (-pkin(2) * t39 - pkin(3) * t64 - t392) - pkin(1) * t39 + pkin(7) * (t125 * t382 + t387 * t40), t382 * (-qJ(3) * t45 - t19 * t377 + t20 * t378) + t387 * (-pkin(2) * t45 - pkin(3) * t72 - t390) - pkin(1) * t45 + pkin(7) * (t382 * t470 + t387 * t46), t382 * (-qJ(3) * t15 - t377 * t5 + t378 * t6) + t387 * (-pkin(2) * t15 - pkin(3) * t31 - t416) - pkin(1) * t15 + pkin(7) * (t16 * t387 + t173 * t382), t382 * (-qJ(3) * t3 - t1 * t377 + t2 * t378) + t387 * (-pkin(2) * t3 - pkin(3) * t9 - t417) - pkin(1) * t3 + pkin(7) * (t131 * t382 + t387 * t4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, t370 - t371, t369, t364, t421, qJDD(2), -t327, -t328, 0, 0, t330 * t377 - t336 * t378, -t312 * t377 + t314 * t378, t333 * t378 + t480, t335 * t377 - t378 * t409, t332 * t377 - t437, (t378 * t347 - t377 * t407) * t426, -pkin(2) * t312 + qJ(3) * t287 - t439, -pkin(2) * t314 + qJ(3) * t298 + t440, -pkin(2) * t309 + qJ(3) * t277 + t215, -pkin(2) * t304 + qJ(3) * t215, t253 * t378 + t254 * t377, t210 * t378 + t212 * t377, t255 * t378 + t257 * t377, t251 * t378 + t252 * t377, t256 * t378 + t258 * t377, t272 * t378 + t273 * t377, -pkin(2) * t260 + qJ(3) * t194 + t174 * t378 + t204 * t377, -pkin(2) * t467 + qJ(3) * t206 + t178 * t378 + t209 * t377, -pkin(2) * t269 + qJ(3) * t161 + t108 * t378 + t111 * t377, -pkin(2) * t268 - pkin(8) * t452 + qJ(3) * t91 + t119 * t378, t135 * t378 + t137 * t377, t377 * t98 + t378 * t96, t162 * t378 + t164 * t377, t134 * t378 + t136 * t377, t163 * t378 + t165 * t377, t179 * t378 + t180 * t377, -pkin(2) * t187 + qJ(3) * t101 + t377 * t69 + t378 * t63, -pkin(2) * t468 + qJ(3) * t110 + t377 * t74 + t378 * t66, -pkin(2) * t223 + qJ(3) * t61 + t27 * t378 + t28 * t377, -pkin(2) * t201 + qJ(3) * t24 + t21 * t378 + t22 * t377, t377 * t50 + t378 * t48, t30 * t378 + t32 * t377, t377 * t77 + t378 * t75, t377 * t49 + t378 * t47, t377 * t78 + t378 * t76, t377 * t95 + t378 * t94, -pkin(2) * t125 + qJ(3) * t40 + t13 * t378 + t14 * t377, -pkin(2) * t470 + qJ(3) * t46 + t19 * t378 + t20 * t377, -pkin(2) * t173 + qJ(3) * t16 + t377 * t6 + t378 * t5, -pkin(2) * t131 + qJ(3) * t4 + t1 * t378 + t2 * t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t314, t309, t304, 0, 0, 0, 0, 0, 0, t260, t467, t269, t268, 0, 0, 0, 0, 0, 0, t187, t468, t223, t201, 0, 0, 0, 0, 0, 0, t125, t470, t173, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t436, t296, t265, -t436, -t261, -t348, -t176, -t177, 0, 0, t248, t247, t191, -t248, -t188, -t345, t397, t405, t462, t463, t203, t202, t129, -t203, -t126, -t338, t392, t390, t416, t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t247, t191, -t248, -t188, -t345, -t106, -t107, 0, 0, t203, t202, t129, -t203, -t126, -t338, t404, t396, t85, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t202, t129, -t203, -t126, -t338, -t56, -t57, 0, 0;];
tauJ_reg  = t55;
