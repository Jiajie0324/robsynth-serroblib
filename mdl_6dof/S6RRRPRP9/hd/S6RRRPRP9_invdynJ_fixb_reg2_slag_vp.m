% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRPRP9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP9_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:27:22
% EndTime: 2019-03-09 17:27:43
% DurationCPUTime: 11.73s
% Computational Cost: add. (10560->758), mult. (22527->886), div. (0->0), fcn. (15234->8), ass. (0->345)
t299 = sin(qJ(3));
t300 = sin(qJ(2));
t449 = qJD(1) * t300;
t430 = t299 * t449;
t302 = cos(qJ(3));
t440 = t302 * qJD(2);
t202 = t430 - t440;
t428 = t302 * t449;
t447 = qJD(2) * t299;
t204 = t428 + t447;
t298 = sin(qJ(5));
t513 = cos(qJ(5));
t118 = t298 * t202 + t513 * t204;
t350 = -t513 * t202 + t298 * t204;
t227 = -qJD(2) * pkin(2) + pkin(7) * t449;
t97 = t202 * pkin(3) - t204 * qJ(4) + t227;
t76 = -pkin(4) * t202 - t97;
t29 = pkin(5) * t350 - qJ(6) * t118 + t76;
t304 = cos(qJ(1));
t467 = t302 * t304;
t301 = sin(qJ(1));
t303 = cos(qJ(2));
t470 = t301 * t303;
t180 = t299 * t470 + t467;
t465 = t304 * t299;
t468 = t302 * t303;
t181 = t301 * t468 - t465;
t102 = t180 * t298 + t181 * t513;
t471 = t301 * t302;
t182 = t303 * t465 - t471;
t466 = t303 * t304;
t183 = t299 * t301 + t302 * t466;
t108 = t182 * t298 + t183 * t513;
t443 = qJD(3) * t300;
t546 = qJD(1) * t443 - qJDD(2);
t438 = qJD(1) * qJD(2);
t415 = t303 * t438;
t437 = t300 * qJDD(1);
t548 = -t415 - t437;
t110 = -qJD(3) * t440 + t546 * t299 + t548 * t302;
t279 = t303 * qJDD(1);
t529 = -t300 * t438 + t279;
t199 = qJDD(3) - t529;
t394 = pkin(2) * t300 - pkin(8) * t303;
t212 = t394 * qJD(2);
t453 = t303 * pkin(2) + t300 * pkin(8);
t538 = -pkin(1) - t453;
t132 = qJD(1) * t212 + qJDD(1) * t538;
t177 = t529 * pkin(7) + qJDD(2) * pkin(8);
t189 = t538 * qJD(1);
t448 = qJD(1) * t303;
t276 = pkin(7) * t448;
t228 = qJD(2) * pkin(8) + t276;
t442 = qJD(3) * t302;
t444 = qJD(3) * t299;
t405 = -t302 * t132 + t299 * t177 + t189 * t444 + t228 * t442;
t367 = qJDD(4) + t405;
t515 = pkin(3) + pkin(4);
t18 = pkin(9) * t110 - t515 * t199 + t367;
t111 = t299 * (qJD(2) * (qJD(3) + t448) + t437) + t546 * t302;
t187 = t199 * qJ(4);
t250 = -qJD(3) + t448;
t231 = t250 * qJD(4);
t46 = t299 * t132 + t302 * t177 + t189 * t442 - t228 * t444;
t34 = t187 - t231 + t46;
t21 = pkin(9) * t111 + t34;
t418 = qJD(5) * t513;
t441 = qJD(5) * t298;
t124 = t302 * t189 - t299 * t228;
t439 = qJD(4) - t124;
t552 = -t204 * pkin(9) + t439;
t63 = t515 * t250 + t552;
t233 = t250 * qJ(4);
t125 = t189 * t299 + t228 * t302;
t337 = pkin(9) * t202 + t125;
t74 = -t233 + t337;
t412 = -t298 * t18 - t513 * t21 - t63 * t418 + t74 * t441;
t348 = -t298 * t299 - t513 * t302;
t533 = t300 * t348;
t322 = g(1) * t108 + g(2) * t102 - g(3) * t533 + t412;
t560 = -t29 * t350 - t322;
t559 = t350 * t76 + t322;
t238 = qJD(5) + t250;
t32 = qJD(5) * t118 - t298 * t110 - t513 * t111;
t555 = -t118 * t238 + t32;
t518 = t118 ^ 2;
t558 = t350 ^ 2 - t518;
t478 = t204 * t250;
t480 = t202 * t250;
t557 = (t111 - t478) * t299 + (t110 - t480) * t302;
t556 = t118 * t76;
t553 = t118 * t350;
t549 = t111 + t478;
t417 = t513 * qJD(3);
t400 = t302 * t417;
t127 = -t348 * qJD(5) - t298 * t444 - t400;
t166 = t348 * t303;
t463 = -qJD(1) * t166 + t127;
t421 = t298 * t442;
t128 = -t302 * t441 + t421 + (-t417 + t418) * t299;
t431 = t513 * t299;
t402 = t303 * t431;
t427 = t302 * t448;
t462 = qJD(1) * t402 - t298 * t427 + t128;
t335 = t513 * t250 + t418;
t547 = -t299 * qJD(4) - t276 + (t427 - t442) * qJ(4);
t59 = pkin(5) * t118 + qJ(6) * t350;
t473 = t300 * t302;
t163 = t298 * t473 - t300 * t431;
t352 = -t182 * t513 + t183 * t298;
t411 = -t513 * t18 + t298 * t21 + t74 * t418 + t63 * t441;
t530 = -t180 * t513 + t181 * t298;
t321 = g(1) * t352 + g(2) * t530 + g(3) * t163 - t411;
t545 = -pkin(5) * t352 + qJ(6) * t108;
t445 = qJD(2) * t303;
t488 = t111 * t302;
t489 = t110 * t299;
t544 = t300 * (qJD(3) * (t202 * t299 - t204 * t302) - t488 + t489) - (t202 * t302 + t204 * t299) * t445;
t543 = t118 * t29 + qJDD(6);
t542 = -pkin(5) * t530 + qJ(6) * t102;
t541 = 0.2e1 * pkin(1);
t514 = pkin(8) - pkin(9);
t229 = t514 * t299;
t230 = t514 * t302;
t136 = t298 * t229 + t513 * t230;
t214 = t514 * t444;
t509 = pkin(7) * t299;
t433 = -pkin(3) - t509;
t328 = -pkin(9) * t468 + (-pkin(4) + t433) * t300;
t213 = t394 * qJD(1);
t469 = t302 * t213;
t84 = qJD(1) * t328 - t469;
t185 = t299 * t213;
t267 = qJ(4) * t449;
t475 = t299 * t303;
t96 = t185 + t267 + (-pkin(7) * t473 + pkin(9) * t475) * qJD(1);
t499 = -t136 * qJD(5) + t514 * t400 - t513 * t84 + (t214 + t96) * t298;
t492 = -qJ(4) * t441 - t298 * t337 - t418 * t515 + t552 * t513;
t389 = g(1) * t304 + g(2) * t301;
t532 = t300 * t389;
t429 = t299 * t448;
t436 = t515 * t299;
t461 = -qJD(3) * t436 + t515 * t429 - t547;
t216 = t513 * qJ(4) - t298 * t515;
t283 = t299 * qJ(4);
t528 = t302 * pkin(3) + pkin(2) + t283;
t31 = t513 * t110 - t298 * t111 - t202 * t418 + t204 * t441;
t17 = t238 * t350 - t31;
t508 = pkin(8) * t199;
t526 = t250 * t97 + t508;
t188 = -qJDD(5) + t199;
t525 = t204 * t118 - t298 * t188 + t238 * t335;
t524 = t188 * t348 + t238 * t462 + t350 * t449;
t345 = t302 * t199 + t250 * t444;
t523 = qJD(1) * (-t202 * t300 + t250 * t475) - t345;
t252 = pkin(7) * t475;
t289 = t303 * pkin(3);
t112 = t303 * pkin(4) + t252 + t289 + (-pkin(9) * t300 - t538) * t302;
t255 = pkin(7) * t468;
t148 = t299 * t538 + t255;
t137 = -qJ(4) * t303 + t148;
t476 = t299 * t300;
t122 = pkin(9) * t476 + t137;
t494 = t298 * t112 + t513 * t122;
t384 = qJD(3) * t255 - t302 * t212 + t444 * t538;
t425 = t299 * t443;
t57 = pkin(9) * t425 + qJD(2) * t328 + t384;
t446 = qJD(2) * t300;
t269 = qJ(4) * t446;
t459 = t299 * t212 + t442 * t538;
t58 = t269 + (-pkin(7) * qJD(2) + pkin(9) * qJD(3)) * t473 + (-qJD(4) + (-pkin(7) * qJD(3) + pkin(9) * qJD(2)) * t299) * t303 + t459;
t11 = -qJD(5) * t494 - t298 * t58 + t513 * t57;
t346 = t299 * t199 - t250 * t442;
t520 = t300 * (-qJD(2) * t202 - t346) + t303 * (t250 * t447 + t111);
t207 = -t298 * t302 + t431;
t519 = t118 * t462 + t207 * t32 + t31 * t348 - t350 * t463;
t517 = t204 ^ 2;
t516 = t238 ^ 2;
t307 = qJD(1) ^ 2;
t512 = pkin(1) * t307;
t511 = pkin(3) * t199;
t510 = pkin(5) * t188;
t507 = pkin(8) * t204;
t506 = g(1) * t301;
t503 = g(3) * t303;
t502 = t462 * pkin(5) + t463 * qJ(6) - t207 * qJD(6) + t461;
t45 = t298 * t84 + t513 * t96;
t41 = -qJ(6) * t449 + t45;
t349 = t513 * t229 - t298 * t230;
t70 = t349 * qJD(5) - t513 * t214 + t514 * t421;
t501 = t70 - t41;
t500 = t70 - t45;
t498 = -pkin(5) * t449 - t499;
t27 = -t298 * t74 + t513 * t63;
t497 = t238 * t27;
t28 = t298 * t63 + t513 * t74;
t496 = t238 * t28;
t90 = t125 - t233;
t495 = t250 * t90;
t493 = -qJD(6) + t492;
t491 = t216 * qJD(5) + t552 * t298 + t513 * t337;
t490 = pkin(7) * qJDD(1);
t483 = t125 * t250;
t481 = t188 * qJ(6);
t479 = t204 * t202;
t474 = t300 * t301;
t472 = t300 * t304;
t464 = qJD(6) - t27;
t460 = (-t429 + t444) * pkin(3) + t547;
t131 = t204 * pkin(3) + t202 * qJ(4);
t458 = (g(1) * t467 + g(2) * t471) * t300;
t426 = t303 * t440;
t457 = qJ(4) * t426 + qJD(4) * t473;
t455 = g(1) * t474 - g(2) * t472;
t452 = t304 * pkin(1) + t301 * pkin(7);
t294 = t300 ^ 2;
t295 = t303 ^ 2;
t451 = t294 - t295;
t450 = t294 + t295;
t435 = t300 * t307 * t303;
t273 = pkin(7) * t437;
t178 = -qJDD(2) * pkin(2) + pkin(7) * t415 + t273;
t434 = g(1) * t466 + g(2) * t470 + g(3) * t300;
t423 = t250 * t449;
t419 = t202 ^ 2 - t517;
t413 = t491 * t118;
t409 = -t180 * pkin(3) + qJ(4) * t181;
t408 = -t182 * pkin(3) + qJ(4) * t183;
t147 = t302 * t538 - t252;
t195 = t302 * pkin(4) + t528;
t407 = -pkin(8) * t488 - t434;
t404 = pkin(3) * t468 + qJ(4) * t475 + t453;
t403 = pkin(2) * t466 + pkin(8) * t472 + t452;
t399 = t300 * t415;
t398 = -pkin(7) - t436;
t254 = pkin(8) * t470;
t397 = -pkin(9) * t470 + t254;
t259 = pkin(8) * t466;
t396 = -pkin(9) * t466 + t259;
t83 = -pkin(4) * t204 - t131;
t395 = t433 * t300;
t393 = g(1) * t530 - g(2) * t352;
t392 = g(1) * t102 - g(2) * t108;
t391 = -g(1) * t180 + g(2) * t182;
t390 = g(1) * t181 - g(2) * t183;
t388 = -g(2) * t304 + t506;
t387 = -t180 * pkin(4) + t409;
t291 = t304 * pkin(7);
t386 = -t181 * pkin(3) - t180 * qJ(4) + t291;
t385 = -t182 * pkin(4) + t408;
t382 = -t163 * pkin(5) - qJ(6) * t533;
t381 = pkin(7) * t202 + t227 * t299;
t380 = pkin(7) * t204 + t227 * t302;
t65 = -qJD(2) * t402 + t127 * t300 + t298 * t426;
t379 = t163 * t32 + t350 * t65;
t87 = pkin(3) * t250 + t439;
t377 = -t299 * t90 + t302 * t87;
t376 = (qJD(3) * t202 - t110) * pkin(8);
t375 = pkin(4) * t468 + t404;
t374 = qJD(3) * t227 - t508;
t370 = -t124 * t302 - t125 * t299;
t306 = qJD(2) ^ 2;
t363 = qJDD(2) * t303 - t300 * t306;
t140 = -pkin(7) * t428 + t185;
t246 = qJ(4) * t473;
t362 = -t300 * t436 + t246;
t360 = -g(1) * t182 - g(2) * t180 - g(3) * t476;
t35 = t111 * pkin(3) + t110 * qJ(4) - t204 * qJD(4) + t178;
t359 = pkin(8) * qJD(3) * t250 - t503;
t354 = -t515 * t302 - t283;
t215 = -t298 * qJ(4) - t513 * t515;
t55 = t513 * t112 - t298 * t122;
t10 = t112 * t418 - t122 * t441 + t298 * t57 + t513 * t58;
t344 = -t32 * t348 + t350 * t462;
t343 = -t35 + t359;
t342 = -t181 * pkin(4) + pkin(9) * t474 + t386;
t341 = -t178 + t359;
t339 = -t136 * t32 + t31 * t349 - t350 * t70 + t434;
t134 = t300 * t398 + t246;
t338 = t299 * t445 + t300 * t442;
t336 = t538 * t506;
t334 = t183 * pkin(3) + qJ(4) * t182 + t403;
t333 = t300 * t207;
t22 = -pkin(4) * t111 - t35;
t143 = t301 * t533;
t145 = t304 * t533;
t327 = -g(1) * t145 - g(2) * t143 + g(3) * t166 - t188 * t349;
t142 = t301 * t333;
t144 = t304 * t333;
t165 = t298 * t468 - t402;
t326 = -g(1) * t144 - g(2) * t142 - g(3) * t165 - t136 * t188;
t325 = -t299 * t480 - t488;
t324 = -t360 - t405;
t66 = -qJD(2) * t166 + t128 * t300;
t323 = t118 * t65 - t163 * t31 - t32 * t533 + t350 * t66;
t319 = t163 * t188 - t238 * t65 - t303 * t32 + t350 * t446;
t79 = (-t300 * t440 - t303 * t444) * pkin(7) + t459;
t318 = -t513 * t188 - t204 * t350 - t516 * t298;
t317 = t183 * pkin(4) - pkin(9) * t472 + t334;
t315 = t111 * t476 + t202 * t338;
t314 = t204 * t97 + qJDD(4) - t324;
t313 = -t321 + t543;
t312 = -t491 * t238 - t321;
t311 = -t555 * t298 + t513 * t31 - t335 * t350;
t310 = g(1) * t183 + g(2) * t181 + g(3) * t473 - t124 * t250 - t46;
t64 = t354 * t443 + t398 * t445 + t457;
t309 = (g(3) * pkin(9) + t389 * (pkin(2) - t354)) * t300;
t211 = pkin(5) - t215;
t210 = -qJ(6) + t216;
t201 = t238 * t449;
t156 = -t246 + (pkin(3) * t299 + pkin(7)) * t300;
t139 = pkin(7) * t430 + t469;
t138 = -t147 + t289;
t133 = -t199 * t303 - t250 * t446;
t130 = qJD(1) * t395 - t469;
t129 = t140 + t267;
t123 = -t188 * t303 - t238 * t446;
t85 = -pkin(5) * t348 - qJ(6) * t207 + t195;
t80 = t446 * t509 - t384;
t78 = pkin(3) * t338 + pkin(7) * t445 + qJ(4) * t425 - t457;
t75 = qJD(2) * t395 + t384;
t73 = -t110 - t480;
t72 = -t303 * qJD(4) + t269 + t79;
t67 = (-t204 * t300 + t250 * t468) * qJD(1) + t346;
t62 = t134 - t382;
t51 = -t302 * t478 - t489;
t50 = -t303 * pkin(5) - t55;
t49 = qJ(6) * t303 + t494;
t48 = -t110 * t473 + (-t425 + t426) * t204;
t37 = t367 - t511;
t36 = (-t250 * t440 + t110) * t303 + (qJD(2) * t204 + t345) * t300;
t33 = -t59 + t83;
t26 = t118 * t449 - t207 * t188 - t463 * t238;
t25 = t238 * qJ(6) + t28;
t24 = -t238 * pkin(5) + t464;
t13 = t65 * pkin(5) - t66 * qJ(6) + qJD(6) * t533 + t64;
t12 = t118 * t66 + t31 * t533;
t9 = pkin(5) * t446 - t11;
t8 = -qJ(6) * t446 + qJD(6) * t303 + t10;
t7 = -t463 * t118 - t207 * t31;
t6 = -t118 * t446 + t188 * t533 + t238 * t66 - t303 * t31;
t5 = pkin(5) * t32 + qJ(6) * t31 - qJD(6) * t118 + t22;
t2 = qJDD(6) + t411 + t510;
t1 = qJD(6) * t238 - t412 - t481;
t3 = [0, 0, 0, 0, 0, qJDD(1), t388, t389, 0, 0, qJDD(1) * t294 + 0.2e1 * t399, 0.2e1 * t279 * t300 - 0.2e1 * t438 * t451, qJDD(2) * t300 + t303 * t306, qJDD(1) * t295 - 0.2e1 * t399, t363, 0 (-0.2e1 * pkin(1) * t438 - pkin(7) * qJDD(2)) * t300 + (-pkin(7) * t306 + qJDD(1) * t541 + t388) * t303, -t363 * pkin(7) + t548 * t541 - t455, 0.2e1 * t450 * t490 - t389, -g(1) * (-pkin(1) * t301 + t291) - g(2) * t452 + (pkin(7) ^ 2 * t450 + pkin(1) ^ 2) * qJDD(1), t48, t544, t36, t315, t520, t133, t147 * t199 - t80 * t250 + (qJD(2) * t381 + t405) * t303 + (pkin(7) * t111 + qJD(2) * t124 + t178 * t299 + t227 * t442) * t300 + t390, -t148 * t199 + t79 * t250 + (qJD(2) * t380 + t46) * t303 + (-pkin(7) * t110 - qJD(2) * t125 + t178 * t302 - t227 * t444) * t300 + t391, t147 * t110 - t148 * t111 - t79 * t202 - t80 * t204 + t370 * t445 + (-t299 * t46 + t302 * t405 + (t124 * t299 - t125 * t302) * qJD(3)) * t300 + t455, t46 * t148 + t125 * t79 - t405 * t147 + t124 * t80 - g(1) * t291 - g(2) * t403 - t336 + (t178 * t300 + t227 * t445) * pkin(7), t48, t36, -t544, t133, -t520, t315, t156 * t111 - t138 * t199 + t78 * t202 + t75 * t250 + (t447 * t97 + t37) * t303 + (-qJD(2) * t87 + t35 * t299 + t442 * t97) * t300 + t390, -t138 * t110 - t137 * t111 - t72 * t202 + t75 * t204 + t377 * t445 + (-t299 * t34 + t302 * t37 + (-t299 * t87 - t302 * t90) * qJD(3)) * t300 + t455, t156 * t110 + t137 * t199 - t78 * t204 - t72 * t250 + (-t440 * t97 - t34) * t303 + (qJD(2) * t90 - t35 * t302 + t444 * t97) * t300 - t391, -g(1) * t386 - g(2) * t334 + t34 * t137 + t37 * t138 + t35 * t156 + t90 * t72 + t87 * t75 + t97 * t78 - t336, t12, -t323, t6, t379, t319, t123, t11 * t238 + t134 * t32 + t163 * t22 - t188 * t55 - t27 * t446 - t303 * t411 + t350 * t64 + t65 * t76 + t392, -t10 * t238 + t118 * t64 - t134 * t31 + t188 * t494 - t22 * t533 + t28 * t446 + t303 * t412 + t66 * t76 - t393, -t10 * t350 - t11 * t118 + t163 * t412 - t27 * t66 - t28 * t65 + t31 * t55 - t32 * t494 - t411 * t533 - t455, -g(1) * t342 - g(2) * t317 + t28 * t10 + t27 * t11 + t22 * t134 - t411 * t55 - t412 * t494 + t76 * t64 - t336, t12, t6, t323, t123, -t319, t379, t13 * t350 + t163 * t5 + t188 * t50 - t2 * t303 - t238 * t9 + t24 * t446 + t29 * t65 + t32 * t62 + t392, -t1 * t163 + t118 * t9 - t2 * t533 + t24 * t66 - t25 * t65 - t31 * t50 - t32 * t49 - t350 * t8 - t455, t1 * t303 - t118 * t13 - t188 * t49 + t238 * t8 - t25 * t446 - t29 * t66 + t31 * t62 + t5 * t533 + t393, t1 * t49 + t25 * t8 + t5 * t62 + t29 * t13 + t2 * t50 + t24 * t9 - g(1) * (-pkin(5) * t102 - qJ(6) * t530 + t342) - g(2) * (pkin(5) * t108 + qJ(6) * t352 + t317) - t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, t451 * t307, t437, t435, t279, qJDD(2), -t503 - t273 + (t389 + t512) * t300 (-t490 + t512) * t303 + t434, 0, 0, t51, -t557, t67, t325, -t523, t423, -pkin(2) * t111 + t139 * t250 + t374 * t299 + t341 * t302 + (-t124 * t300 - t303 * t381) * qJD(1) + t458, pkin(2) * t110 - t140 * t250 + t374 * t302 + (t125 * t300 - t303 * t380) * qJD(1) + (-t341 - t532) * t299, t139 * t204 + t140 * t202 + (t124 * t448 + t46 + (-t124 + t507) * qJD(3)) * t302 + (t376 + t405 + t483) * t299 + t407, -t178 * pkin(2) - t125 * t140 - t124 * t139 - t227 * t276 - g(1) * (-pkin(2) * t472 + t259) - g(2) * (-pkin(2) * t474 + t254) - g(3) * t453 + (qJD(3) * t370 + t299 * t405 + t46 * t302) * pkin(8), t51, t67, t557, t423, t523, t325, -t111 * t528 - t130 * t250 + t460 * t202 - t299 * t526 + t343 * t302 + t87 * t449 + t458, t129 * t202 - t130 * t204 + (-t87 * t448 + t34 + (t87 + t507) * qJD(3)) * t302 + (t37 + t376 + t495) * t299 + t407, -t90 * t449 - t528 * t110 + t129 * t250 - t460 * t204 + t526 * t302 + (t343 + t532) * t299, -t90 * t129 - t87 * t130 - g(1) * t259 - g(2) * t254 - g(3) * t404 + t460 * t97 + (qJD(3) * t377 + t37 * t299 + t34 * t302) * pkin(8) + (-t35 + t532) * t528, t7, -t519, t26, t344, -t524, t201, t195 * t32 - t22 * t348 + t499 * t238 + t27 * t449 + t350 * t461 + t462 * t76 + t327, t461 * t118 - t195 * t31 + t207 * t22 - t500 * t238 - t28 * t449 - t463 * t76 - t326, -t499 * t118 + t207 * t411 + t463 * t27 - t462 * t28 - t348 * t412 + t350 * t45 + t339, -g(1) * t396 - g(2) * t397 - g(3) * t375 - t136 * t412 + t22 * t195 + t499 * t27 + t500 * t28 - t349 * t411 + t461 * t76 + t309, t7, t26, t519, t201, t524, t344, -t498 * t238 - t24 * t449 + t462 * t29 + t32 * t85 - t348 * t5 + t350 * t502 + t327, t1 * t348 + t498 * t118 + t2 * t207 - t463 * t24 - t462 * t25 + t350 * t41 + t339, -t502 * t118 - t207 * t5 + t238 * t501 + t25 * t449 + t29 * t463 + t31 * t85 + t326, t1 * t136 + t5 * t85 - t2 * t349 - g(1) * (t145 * pkin(5) + t144 * qJ(6) + t396) - g(2) * (t143 * pkin(5) + t142 * qJ(6) + t397) - g(3) * (-pkin(5) * t166 + qJ(6) * t165 + t375) + t502 * t29 + t501 * t25 + t498 * t24 + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, -t419, t73, -t479, -t549, t199, -t204 * t227 + t324 - t483, t202 * t227 + t310, 0, 0, t479, t73, t419, t199, t549, -t479, -t131 * t202 - t314 - t483 + 0.2e1 * t511, pkin(3) * t110 - qJ(4) * t111 + (-t125 + t90) * t204 + (t87 - t439) * t202, t131 * t204 - t202 * t97 + 0.2e1 * t187 - 0.2e1 * t231 - t310, t34 * qJ(4) - t37 * pkin(3) - t97 * t131 - t87 * t125 - g(1) * t408 - g(2) * t409 - g(3) * (-pkin(3) * t476 + t246) + t439 * t90, -t553, t558, -t17, t553, t555, t188, -t215 * t188 - t350 * t83 + t312 + t556, -t83 * t118 + t216 * t188 - t492 * t238 - t559, -t118 * t28 + t215 * t31 - t216 * t32 + t413 + (t27 - t492) * t350, -g(1) * t385 - g(2) * t387 - g(3) * t362 - t215 * t411 - t216 * t412 - t27 * t491 + t28 * t492 - t76 * t83, -t553, -t17, -t558, t188, -t555, t553, -t350 * t33 + (pkin(5) + t211) * t188 + t312 + t543, -t118 * t25 - t210 * t32 - t211 * t31 + t413 + (-t24 - t493) * t350, t118 * t33 + (qJ(6) - t210) * t188 + (-qJD(6) + t493) * t238 - t560, t1 * t210 + t2 * t211 - t29 * t33 - g(1) * (t385 - t545) - g(2) * (t387 - t542) - g(3) * (t362 - t382) + t493 * t25 + t491 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199 + t479, t73, -t250 ^ 2 - t517, t314 + t495 - t511, 0, 0, 0, 0, 0, 0, t318, -t525, t311, -t411 * t513 - t76 * t204 + t335 * t28 + (-t412 - t497) * t298 + t360, 0, 0, 0, 0, 0, 0, t318, t311, t525, -t2 * t513 - t29 * t204 + t335 * t25 + (t238 * t24 + t1) * t298 + t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, -t558, t17, -t553, -t555, -t188, t321 + t496 - t556, t497 + t559, 0, 0, t553, t17, t558, -t188, t555, -t553, -t350 * t59 - t313 + t496 - 0.2e1 * t510, pkin(5) * t31 - qJ(6) * t32 + (t25 - t28) * t118 + (t24 - t464) * t350, -0.2e1 * t481 + t59 * t118 + (0.2e1 * qJD(6) - t27) * t238 + t560, -t2 * pkin(5) - g(1) * t545 - g(2) * t542 - g(3) * t382 + t1 * qJ(6) - t24 * t28 + t464 * t25 - t29 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188 + t553, t17, -t516 - t518, -t238 * t25 + t313 + t510;];
tau_reg  = t3;
