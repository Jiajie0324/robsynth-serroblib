% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRP9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:27:19
% EndTime: 2019-03-09 17:28:03
% DurationCPUTime: 28.41s
% Computational Cost: add. (13172->952), mult. (25696->1155), div. (0->0), fcn. (24905->6), ass. (0->674)
t762 = qJD(3) - qJD(5);
t582 = cos(qJ(3));
t974 = pkin(8) - pkin(9);
t508 = t974 * t582;
t578 = sin(qJ(5));
t858 = t578 * t508;
t581 = cos(qJ(5));
t579 = sin(qJ(3));
t987 = t974 * t579;
t997 = t581 * t987;
t1003 = -t997 + t858;
t583 = cos(qJ(2));
t1009 = t1003 * t583;
t325 = -t1009 / 0.2e1;
t580 = sin(qJ(2));
t567 = t582 * qJ(4);
t855 = t579 * t580;
t814 = -pkin(3) * t855 + t580 * t567;
t364 = (-pkin(4) * t579 - pkin(7)) * t580 + t814;
t564 = t579 * qJ(4);
t571 = t582 * pkin(3);
t681 = t564 + t571;
t495 = -pkin(2) - t681;
t456 = t582 * pkin(4) - t495;
t844 = t581 * t582;
t857 = t578 * t579;
t482 = t844 + t857;
t951 = t482 / 0.2e1;
t845 = t581 * t580;
t853 = t580 * t582;
t416 = t578 * t853 - t579 * t845;
t956 = t416 / 0.2e1;
t633 = t364 * t951 + t456 * t956;
t1014 = t325 + t633;
t1011 = -t1003 / 0.2e1;
t930 = t580 * pkin(8);
t686 = -pkin(2) * t583 - t930;
t659 = -pkin(1) + t686;
t470 = t582 * t659;
t689 = -pkin(9) * t853 - t470;
t650 = t578 * t689;
t841 = t582 * t583;
t543 = pkin(7) * t841;
t398 = t579 * t659 + t543;
t840 = t583 * qJ(4);
t374 = t398 - t840;
t539 = pkin(9) * t855;
t302 = t374 + t539;
t850 = t581 * t302;
t599 = t650 + t850;
t934 = pkin(7) * t579;
t743 = pkin(3) + t934;
t698 = pkin(4) + t743;
t668 = t578 * t698;
t136 = (t668 + qJ(6)) * t583 + t599;
t667 = t698 * t583;
t597 = t667 + t689;
t250 = t581 * t597;
t863 = t578 * t302;
t148 = -t250 + t863;
t929 = t583 * pkin(5);
t137 = t148 - t929;
t1002 = t581 * t508 + t578 * t987;
t964 = t1002 / 0.2e1;
t1013 = t136 * t1011 + t137 * t964;
t573 = -t580 / 0.2e1;
t326 = t1009 / 0.2e1;
t824 = t762 * t1002;
t1010 = t1003 / 0.2e1;
t1007 = t1002 * qJD(6);
t975 = -pkin(3) - pkin(4);
t493 = qJ(4) * t578 - t581 * t975;
t492 = pkin(5) + t493;
t568 = t580 * pkin(5);
t928 = t583 * pkin(8);
t931 = t580 * pkin(2);
t509 = -t928 + t931;
t542 = pkin(7) * t855;
t569 = t580 * pkin(3);
t272 = -t580 * pkin(4) - t542 - t569 + (-pkin(9) * t583 - t509) * t582;
t851 = t581 * t272;
t489 = t579 * t509;
t566 = t580 * qJ(4);
t377 = -pkin(7) * t853 + t489 + t566;
t854 = t579 * t583;
t310 = pkin(9) * t854 + t377;
t862 = t578 * t310;
t629 = -t862 / 0.2e1 + t851 / 0.2e1;
t746 = t568 / 0.2e1 - t629;
t1006 = t492 * t573 - t746;
t675 = -t997 / 0.2e1;
t358 = t997 / 0.2e1 + t675;
t350 = t539 + t398;
t937 = -t583 / 0.2e1;
t685 = -t250 / 0.2e1 + t493 * t937;
t760 = pkin(7) * t854;
t349 = -t689 - t760;
t849 = t581 * t349;
t68 = -t849 / 0.2e1 + (t302 / 0.2e1 - t350 / 0.2e1) * t578 + t685;
t753 = -t68 * qJD(1) + t358 * qJD(2) - t493 * qJD(3);
t772 = t493 * qJD(5);
t1005 = t772 + t753;
t563 = t583 * qJD(3);
t418 = t482 * t580;
t577 = t583 ^ 2;
t640 = t418 * t853 + t577 * t581;
t993 = t640 * qJD(1) - t581 * t563;
t494 = t581 * qJ(4) + t578 * t975;
t718 = -t850 / 0.2e1;
t848 = t581 * t350;
t861 = t578 * t349;
t819 = t861 / 0.2e1 - t848 / 0.2e1;
t945 = t494 / 0.2e1;
t584 = t718 - t650 / 0.2e1 + (t945 - t668 / 0.2e1) * t583 - t819;
t1004 = qJD(1) * t584 - t494 * qJD(3);
t1001 = t493 * t573 + t629;
t253 = t578 * t272;
t273 = t581 * t310;
t822 = t253 / 0.2e1 + t273 / 0.2e1;
t1000 = t494 * t573 - t822;
t766 = t582 * qJD(4);
t999 = -qJD(3) * t681 + t766;
t955 = t418 / 0.2e1;
t486 = -t578 * t582 + t579 * t581;
t949 = t486 / 0.2e1;
t793 = qJD(5) * t583;
t996 = -t581 * t793 - t993;
t558 = t578 * qJD(4);
t995 = -t558 + t1004;
t477 = t494 * qJD(5);
t994 = -t477 - t1004;
t952 = -t482 / 0.2e1;
t176 = t416 * t949 - t418 * t952;
t803 = qJD(2) * t486;
t738 = t482 * t803;
t992 = qJD(1) * t176 + t738;
t804 = qJD(1) * t418;
t742 = t416 * t804;
t991 = -qJD(2) * t176 - t742;
t109 = t482 * t416 - t418 * t486;
t978 = t418 ^ 2;
t193 = t416 ^ 2 - t978;
t655 = qJD(1) * t193 + qJD(2) * t109;
t471 = t486 ^ 2;
t243 = t482 ^ 2 - t471;
t654 = qJD(1) * t109 + qJD(2) * t243;
t765 = t583 * qJD(1);
t695 = qJD(5) + t765;
t514 = -qJD(3) + t695;
t990 = t416 * t514;
t989 = t418 * t514;
t988 = t482 * t762;
t697 = t762 * t486;
t985 = qJD(4) * t640;
t878 = t418 * qJ(6);
t933 = t416 * pkin(5);
t680 = -t878 + t933;
t173 = t364 + t680;
t875 = t486 * qJ(6);
t935 = pkin(5) * t482;
t679 = -t875 + t935;
t228 = t679 + t456;
t634 = t173 * t949 + t228 * t955;
t574 = t579 ^ 2;
t576 = t582 ^ 2;
t524 = t576 - t574;
t768 = t580 * qJD(1);
t739 = t582 * t768;
t690 = t579 * t739;
t983 = qJD(2) * t524 - 0.2e1 * t690;
t149 = t578 * t667 + t599;
t593 = t578 * t597;
t823 = t593 / 0.2e1 + t850 / 0.2e1;
t612 = t494 * t937 - t819 + t823;
t982 = qJD(3) * t612 - t149 * qJD(5);
t531 = t583 * t558;
t981 = qJD(3) * t584 + t531;
t980 = -qJD(5) * t584 - t531;
t182 = -t848 + t861;
t979 = t182 * qJD(3) + qJD(5) * t612 - t531;
t977 = -pkin(5) / 0.2e1;
t976 = pkin(5) / 0.2e1;
t973 = -qJ(6) / 0.2e1;
t972 = qJ(6) / 0.2e1;
t971 = -t136 / 0.2e1;
t970 = -t137 / 0.2e1;
t565 = t580 * qJ(6);
t820 = t273 + t253;
t143 = -t565 + t820;
t969 = t143 / 0.2e1;
t968 = -t173 / 0.2e1;
t967 = t182 / 0.2e1;
t860 = t578 * t350;
t183 = t849 + t860;
t966 = -t183 / 0.2e1;
t965 = -t228 / 0.2e1;
t961 = -t1002 / 0.2e1;
t960 = -t374 / 0.2e1;
t397 = -t470 + t760;
t959 = -t397 / 0.2e1;
t411 = t580 * pkin(7) - t814;
t958 = t411 / 0.2e1;
t957 = -t416 / 0.2e1;
t954 = -t418 / 0.2e1;
t421 = t482 * t583;
t726 = -t421 / 0.2e1;
t725 = t421 / 0.2e1;
t455 = t681 * t580;
t953 = -t455 / 0.2e1;
t950 = -t486 / 0.2e1;
t491 = -qJ(6) + t494;
t948 = -t491 / 0.2e1;
t947 = t492 / 0.2e1;
t946 = t493 / 0.2e1;
t944 = -t509 / 0.2e1;
t943 = -t542 / 0.2e1;
t942 = -t578 / 0.2e1;
t941 = t578 / 0.2e1;
t940 = t579 / 0.2e1;
t572 = t580 / 0.2e1;
t939 = -t581 / 0.2e1;
t938 = t582 / 0.2e1;
t936 = pkin(3) * t579;
t932 = t578 * pkin(5);
t513 = t581 * t854;
t748 = t578 * t841;
t420 = -t513 + t748;
t645 = pkin(5) * t726 + t420 * t973;
t713 = t148 / 0.2e1 + t970;
t714 = t136 / 0.2e1 - t149 / 0.2e1;
t5 = -t482 * t713 + t486 * t714 + t645;
t927 = t5 * qJD(1);
t241 = t418 * pkin(5) + t416 * qJ(6);
t394 = (t582 * t975 - t564) * t580;
t188 = -t241 + t394;
t905 = t182 * t583;
t908 = t173 * t418;
t42 = t188 * t416 - t905 - t908;
t926 = qJD(1) * t42;
t904 = t183 * t583;
t909 = t173 * t416;
t43 = -t188 * t418 + t904 - t909;
t925 = qJD(1) * t43;
t911 = t148 * t583;
t46 = -t241 * t418 + t909 - t911;
t924 = qJD(1) * t46;
t910 = t149 * t583;
t47 = t241 * t416 + t908 - t910;
t923 = qJD(1) * t47;
t895 = t364 * t418;
t71 = t394 * t416 - t895 - t905;
t920 = qJD(1) * t71;
t896 = t364 * t416;
t72 = -t394 * t418 - t896 + t904;
t919 = qJD(1) * t72;
t79 = t896 - t911;
t918 = qJD(1) * t79;
t80 = t895 - t910;
t917 = qJD(1) * t80;
t671 = t851 - t862;
t144 = t568 - t671;
t537 = t582 * t840;
t751 = t975 * t579;
t365 = t537 + (-pkin(7) + t751) * t583;
t174 = t420 * pkin(5) - t421 * qJ(6) + t365;
t11 = t136 * t143 + t137 * t144 + t173 * t174;
t916 = t11 * qJD(1);
t12 = -t136 * t148 + t137 * t149 + t173 * t241;
t915 = t12 * qJD(1);
t13 = t136 * t183 + t137 * t182 + t173 * t188;
t914 = t13 * qJD(1);
t913 = t136 * t581;
t912 = t137 * t578;
t18 = -t136 * t420 + t137 * t421 - t143 * t416 + t144 * t418;
t906 = t18 * qJD(1);
t19 = (-t136 + t149) * t418 + (-t137 + t148) * t416;
t903 = t19 * qJD(1);
t20 = (t136 + t182) * t418 + (t137 - t183) * t416;
t902 = t20 * qJD(1);
t900 = t228 * t482;
t899 = t228 * t486;
t31 = -t136 * t580 + t143 * t583 - t173 * t421 - t174 * t418;
t898 = t31 * qJD(1);
t32 = t137 * t580 - t144 * t583 + t173 * t420 + t174 * t416;
t897 = t32 * qJD(1);
t894 = t1003 * t578;
t893 = t1003 * t580;
t890 = t1002 * t418;
t889 = t1002 * t580;
t888 = t1002 * t581;
t887 = t1002 * t583;
t886 = t374 * t583;
t39 = t148 * t580 + t364 * t420 + t365 * t416 + t583 * t671;
t885 = t39 * qJD(1);
t884 = t397 * t583;
t883 = t398 * t583;
t40 = -t149 * t580 - t364 * t421 - t365 * t418 + t583 * t820;
t882 = t40 * qJD(1);
t41 = -t173 * t853 + (t912 + t913) * t583;
t881 = t41 * qJD(1);
t880 = t411 * t579;
t879 = t411 * t582;
t877 = t455 * t579;
t876 = t456 * t482;
t874 = t486 * t583;
t873 = t491 * t418;
t872 = t491 * t581;
t871 = t491 * t583;
t870 = t492 * t416;
t869 = t492 * t578;
t865 = t495 * t579;
t56 = t136 * t583 - t908;
t864 = t56 * qJD(1);
t859 = t578 * t486;
t856 = t578 * t580;
t852 = t581 * qJ(6);
t847 = t581 * t482;
t843 = t582 * t509;
t575 = t580 ^ 2;
t842 = t582 * t575;
t59 = (t948 + t972) * t583 + t819 + t823;
t839 = t59 * qJD(1);
t375 = t583 * t743 - t470;
t702 = -t542 - t843;
t378 = -t569 + t702;
t412 = -t537 + (pkin(7) + t936) * t583;
t73 = t374 * t377 + t375 * t378 + t411 * t412;
t837 = t73 * qJD(1);
t76 = -t374 * t397 + t375 * t398 + t411 * t455;
t836 = t76 * qJD(1);
t708 = t959 + t375 / 0.2e1;
t709 = t960 + t398 / 0.2e1;
t77 = (pkin(3) * t937 - t708) * t582 + (-t840 / 0.2e1 - t709) * t579;
t835 = t77 * qJD(1);
t81 = -t375 * t841 - t378 * t853 + (t377 * t580 + t886) * t579;
t834 = t81 * qJD(1);
t84 = -t398 * t853 + (t374 * t582 + (t375 - t397) * t579) * t580;
t833 = t84 * qJD(1);
t669 = t411 * t583 + t412 * t580;
t96 = -t374 * t580 + t377 * t583 + t582 * t669;
t832 = t96 * qJD(1);
t97 = -t375 * t580 + t378 * t583 + t579 * t669;
t831 = t97 * qJD(1);
t830 = t762 * t109;
t829 = t913 / 0.2e1 + t912 / 0.2e1;
t827 = t762 * t176;
t716 = -t841 / 0.2e1;
t720 = -t854 / 0.2e1;
t817 = t578 * t720 + t581 * t716;
t816 = t513 / 0.2e1 + t578 * t716;
t815 = -t513 / 0.2e1 + t748 / 0.2e1;
t525 = t577 - t575;
t812 = qJ(6) * qJD(6);
t724 = -t874 / 0.2e1;
t130 = 0.2e1 * t725 * t581 + (t724 + t420 / 0.2e1) * t578;
t811 = qJD(1) * t130;
t158 = t883 + (t877 + t879) * t580;
t810 = qJD(1) * t158;
t171 = -t581 * t416 + t578 * t418;
t211 = t171 * t583;
t809 = qJD(1) * t211;
t229 = t416 * t580 - t420 * t583;
t808 = qJD(1) * t229;
t230 = -t418 * t580 + t421 * t583;
t807 = qJD(1) * t230;
t307 = -t575 * t934 - t884;
t806 = qJD(1) * t307;
t308 = -pkin(7) * t842 - t883;
t805 = qJD(1) * t308;
t802 = qJD(2) * t579;
t801 = qJD(2) * t582;
t800 = qJD(3) * t358;
t799 = qJD(3) * t579;
t798 = qJD(3) * t582;
t797 = qJD(4) * t579;
t796 = qJD(4) * t583;
t795 = qJD(5) * t358;
t794 = qJD(5) * t456;
t792 = qJD(6) * t486;
t154 = -t416 * t421 - t418 * t420;
t791 = t154 * qJD(1);
t159 = -t411 * t855 + t455 * t853 - t884;
t790 = t159 * qJD(1);
t190 = t397 * t580 + (-t702 - 0.2e1 * t542) * t583;
t789 = t190 * qJD(1);
t191 = t489 * t583 + (-t398 + t543) * t580;
t788 = t191 * qJD(1);
t198 = t411 * t853 + t886;
t787 = t198 * qJD(1);
t262 = t724 + t815;
t786 = t262 * qJD(1);
t723 = t874 / 0.2e1;
t263 = t723 + t816;
t785 = t263 * qJD(1);
t628 = t844 / 0.2e1 + t857 / 0.2e1;
t264 = (t951 + t628) * t583;
t254 = t264 * qJD(1);
t265 = t726 + t817;
t784 = t265 * qJD(1);
t316 = t416 * t853 + t577 * t578;
t783 = t316 * qJD(1);
t779 = t397 * qJD(3);
t778 = t416 * qJD(6);
t777 = t482 * qJD(6);
t485 = t525 * t579;
t776 = t485 * qJD(1);
t488 = t577 * t582 - t842;
t775 = t488 * qJD(1);
t774 = t491 * qJD(6);
t770 = t525 * qJD(1);
t769 = t578 * qJD(6);
t767 = t580 * qJD(2);
t560 = t581 * qJD(4);
t764 = t583 * qJD(2);
t562 = t583 * qJD(6);
t763 = qJD(6) - t560;
t761 = t943 - t569;
t759 = pkin(1) * t768;
t758 = pkin(1) * t765;
t757 = pkin(8) * t799;
t756 = pkin(8) * t798;
t755 = pkin(2) * t940;
t754 = t928 / 0.2e1;
t747 = -t565 + t822;
t741 = t416 * t765;
t740 = t418 * t765;
t737 = t486 * t802;
t736 = t579 * t563;
t735 = t582 * t563;
t734 = t486 * t797;
t733 = t579 * t766;
t732 = t579 * t798;
t532 = t579 * t801;
t731 = t580 * t764;
t730 = t580 * t797;
t729 = t580 * t765;
t728 = t1002 * t937;
t727 = -t894 / 0.2e1;
t331 = -t887 / 0.2e1;
t722 = t495 * t572;
t721 = t416 * t940;
t719 = -t853 / 0.2e1;
t717 = t482 * t938;
t715 = qJ(6) * t937;
t711 = t964 + t961;
t710 = t1010 + t1011;
t707 = t948 + t945;
t706 = t946 - t492 / 0.2e1;
t705 = t943 - t569 / 0.2e1;
t533 = t583 * t560;
t704 = qJD(3) * t68 + t533;
t703 = -qJD(5) * t68 - t533;
t457 = (t574 / 0.2e1 - t576 / 0.2e1) * t580;
t426 = t573 + t457;
t701 = qJD(1) * t426 - t532;
t700 = qJD(1) * t457 - t532;
t505 = t579 * qJD(1) * t842;
t699 = qJD(2) * t457 + t505;
t696 = t762 * t583;
t538 = -qJD(3) + t765;
t691 = t580 * t532;
t688 = t765 - qJD(3) / 0.2e1;
t687 = t976 + t706;
t465 = t567 + t751;
t507 = -t567 + t936;
t684 = t507 * t572 + t958;
t683 = t973 + t707;
t336 = pkin(5) * t486 + t482 * qJ(6);
t678 = -t495 * t583 + t930;
t231 = -t336 + t465;
t585 = t1011 * t182 + t183 * t961 + t188 * t965 + t231 * t968 + t1013;
t637 = t144 * t947 + t491 * t969;
t1 = t585 + t637;
t50 = t228 * t231;
t677 = -t1 * qJD(1) + t50 * qJD(2);
t631 = t420 * t948 + t421 * t947;
t7 = (t971 - t182 / 0.2e1) * t486 + (t183 / 0.2e1 + t970) * t482 + t711 * t418 + t710 * t416 + t631;
t676 = t7 * qJD(1);
t635 = t173 * t951 + t228 * t956;
t589 = t188 * t950 + t231 * t954 + t326 - t635;
t604 = t565 / 0.2e1 + t491 * t573 - t822;
t14 = -t589 + t604;
t86 = -t231 * t486 - t900;
t674 = qJD(1) * t14 - qJD(2) * t86;
t594 = t188 * t951 + t231 * t956 - t634 - t728;
t17 = t594 + t1006;
t85 = t231 * t482 - t899;
t673 = -qJD(1) * t17 - qJD(2) * t85;
t57 = -t416 * t687 - t418 * t683;
t75 = t482 * t687 + t486 * t683;
t672 = qJD(1) * t57 - qJD(2) * t75;
t670 = t377 * t582 + t378 * t579;
t102 = t336 * t482 + t899;
t330 = t887 / 0.2e1;
t590 = t241 * t952 + t336 * t957 - t634;
t609 = -t568 + t629;
t23 = t330 + t590 + t609;
t666 = qJD(1) * t23 - qJD(2) * t102;
t103 = -t336 * t486 + t900;
t591 = t241 * t950 + t336 * t954 + t635;
t21 = t326 - t591 + t747;
t665 = qJD(1) * t21 - qJD(2) * t103;
t194 = -t456 * t486 + t465 * t482;
t632 = t364 * t949 + t456 * t955;
t587 = t394 * t951 + t465 * t956 - t632 - t728;
t33 = t587 + t1001;
t664 = -qJD(1) * t33 - qJD(2) * t194;
t195 = t465 * t486 + t876;
t588 = t394 * t949 + t465 * t955 + t1014;
t36 = t588 + t1000;
t663 = -qJD(1) * t36 - qJD(2) * t195;
t353 = t495 * t582 + t507 * t579;
t461 = -t489 / 0.2e1;
t516 = t579 * t754;
t89 = t516 - t877 / 0.2e1 - t879 / 0.2e1 - t566 + t461 + (t865 / 0.2e1 + (-t507 / 0.2e1 + pkin(7) / 0.2e1) * t582) * t580;
t662 = -qJD(1) * t89 + qJD(2) * t353;
t354 = t507 * t582 - t865;
t644 = t722 + t754;
t606 = t953 + t644;
t639 = t684 * t579;
t91 = t639 + (t944 + t606) * t582 + t761;
t661 = -qJD(1) * t91 + qJD(2) * t354;
t67 = t863 / 0.2e1 + t849 / 0.2e1 + t860 / 0.2e1 + t685;
t660 = -qJD(3) * t67 + qJD(5) * t148;
t658 = t538 * t580;
t248 = t858 + 0.2e1 * t675;
t653 = qJD(3) * t248 - qJD(5) * t1003;
t652 = -qJD(3) * t1003 + qJD(5) * t248;
t651 = t754 - t931 / 0.2e1;
t649 = qJ(6) * t969 + t144 * t977;
t648 = pkin(5) * t967 + qJ(6) * t966;
t647 = qJ(6) * t1011 - t1002 * t976;
t646 = -t377 * qJ(4) / 0.2e1 + t378 * pkin(3) / 0.2e1;
t643 = -t852 / 0.2e1 + t932 / 0.2e1;
t460 = t489 / 0.2e1;
t517 = pkin(8) * t720;
t343 = t580 * t755 + t460 + t517;
t642 = pkin(2) * t801 - qJD(1) * t343;
t344 = (t944 + t651) * t582;
t641 = pkin(2) * t802 - qJD(1) * t344;
t638 = t136 * t950 + t137 * t952;
t636 = t241 * t965 + t336 * t968;
t630 = -t872 / 0.2e1 - t869 / 0.2e1;
t611 = t173 * t940 + t228 * t853 / 0.2e1;
t26 = (t331 + t144 / 0.2e1) * t581 + (t325 - t143 / 0.2e1) * t578 + t611;
t627 = -qJD(1) * t26 - t228 * t802;
t37 = t331 + t634 + t746;
t626 = qJD(1) * t37 + t228 * t803;
t586 = (t579 * t709 + t582 * t708) * pkin(8) + t507 * t958 + t455 * t495 / 0.2e1;
t45 = t586 + t646;
t625 = -t495 * t507 * qJD(2) - t45 * qJD(1);
t52 = -t822 + t1014;
t624 = qJD(1) * t52 + qJD(2) * t876;
t598 = t331 + t632;
t51 = -t598 + t629;
t623 = qJD(1) * t51 - t456 * t803;
t622 = qJD(3) * t183 - qJD(5) * t67 - t533;
t621 = t582 * t658;
t152 = t880 / 0.2e1 + (t944 + t644) * t582 + t705;
t620 = qJD(1) * t152 + t495 * t802;
t164 = t572 + t176;
t619 = qJD(1) * t164 + t738;
t526 = t856 / 0.2e1;
t610 = -t418 * t940 + t486 * t719;
t205 = t526 + t610;
t614 = -qJD(1) * t205 + t737;
t527 = -t856 / 0.2e1;
t206 = t527 - t610;
t613 = qJD(1) * t206 + t737;
t207 = t721 + (t717 + t581 / 0.2e1) * t580;
t161 = qJD(1) * t207 + t482 * t802;
t484 = t524 * t575;
t608 = qJD(1) * t484 + 0.2e1 * t691;
t323 = t894 / 0.2e1;
t189 = t727 + t323;
t3 = t1002 * t713 + t1003 * t714 + t636 + t649;
t55 = t228 * t336;
t605 = -t3 * qJD(1) + t55 * qJD(2) + t189 * qJD(4);
t592 = t137 * t945 + t148 * t948 + t149 * t947 + t493 * t971;
t10 = t592 + t648;
t212 = -t491 * t493 + t492 * t494;
t595 = -t1002 * t706 + t1003 * t707;
t49 = t595 + t647;
t603 = t10 * qJD(1) + t49 * qJD(2) + t212 * qJD(3);
t30 = (-t871 / 0.2e1 + t967) * t581 + (t492 * t937 + t966) * t578 + t829;
t309 = t869 + t872;
t82 = t578 * t710 + t581 * t711;
t602 = qJD(1) * t30 - qJD(2) * t82 + qJD(3) * t309;
t155 = (t972 + t707) * t581 + (t977 + t706) * t578;
t27 = (t715 - t714) * t581 + (t929 / 0.2e1 + t713) * t578;
t601 = t27 * qJD(1) - t189 * qJD(2) + t155 * qJD(3);
t498 = t575 * t576 + t577;
t600 = qJD(1) * t498 - t563 + t691;
t384 = t577 + t978;
t596 = -t384 * qJD(1) - t418 * t803 + t563 - t793;
t561 = t581 * qJD(3);
t559 = t578 * qJD(3);
t548 = -t768 / 0.2e1;
t547 = t768 / 0.2e1;
t546 = -t767 / 0.2e1;
t545 = t767 / 0.2e1;
t535 = t582 * t765;
t506 = t582 * t730;
t497 = t538 * qJ(4);
t481 = -t535 + t798;
t480 = t581 * t765 - t561;
t479 = t578 * t765 - t559;
t468 = t514 * qJ(6);
t467 = t688 * t580;
t464 = t843 / 0.2e1;
t454 = qJD(2) * t574 + t690;
t444 = t457 * qJD(3);
t436 = t482 * t797;
t427 = t576 * t572 + t573 * t574 + t573;
t425 = t581 * t695 - t561;
t424 = t578 * t695 - t559;
t415 = (-t579 * t768 + t801) * t583;
t414 = t579 * t658;
t413 = t558 + t477;
t410 = (qJD(5) / 0.2e1 + t688) * t580;
t383 = t398 * qJD(3);
t295 = t316 * qJD(4);
t294 = t418 * t792;
t271 = t582 * t651 + t464 + t542;
t270 = t517 + t461 + (pkin(7) * t582 + t755) * t580;
t269 = t724 + t816;
t268 = t723 + t815;
t267 = t583 * t628 + t726;
t266 = t725 + t817;
t220 = t890 / 0.2e1;
t213 = qJD(2) * t471 + t486 * t804;
t210 = t527 + t610;
t209 = t526 - t610;
t208 = t721 + t580 * t717 - t845 / 0.2e1;
t202 = -t847 + t859;
t201 = t208 * qJD(4);
t200 = t207 * qJD(4);
t187 = t264 * qJD(2) + t741;
t186 = t189 * qJD(5);
t165 = t572 - t176;
t163 = -t254 + t988;
t156 = t493 * t942 + t494 * t939 - t630 - t643;
t153 = pkin(8) * t716 + t495 * t719 - t880 / 0.2e1 - t843 / 0.2e1 + t705;
t129 = t420 * t942 + t421 * t939 + (t847 / 0.2e1 - t859 / 0.2e1) * t583;
t118 = t208 * qJD(2) - t563 * t578 + t783;
t104 = -t207 * qJD(2) + t578 * t696 - t783;
t101 = t267 * qJD(2) - t990;
t90 = t582 * t606 + t464 + t639 - t761;
t88 = t516 + t566 + pkin(7) * t719 + t460 - t684 * t582 + (t722 + t953) * t579;
t83 = t888 / 0.2e1 + t323 + t1003 * t941 - t1002 * t939;
t78 = t582 * t959 + t579 * t960 + t398 * t940 + t375 * t938 + (-t564 / 0.2e1 - t571 / 0.2e1) * t583;
t74 = t875 / 0.2e1 - t935 / 0.2e1 + t707 * t486 + t706 * t482;
t60 = t871 / 0.2e1 + t718 - t593 / 0.2e1 + t715 + t819;
t58 = t416 * t946 - t873 / 0.2e1 + t494 * t955 - t870 / 0.2e1 + t878 / 0.2e1 - t933 / 0.2e1;
t54 = t598 + t629;
t53 = t326 - t633 - t822;
t48 = t595 - t647;
t44 = t586 - t646;
t38 = t330 + t746 - t634;
t35 = t588 - t1000;
t34 = t587 - t1001;
t29 = t182 * t939 + t183 * t941 + t583 * t630 + t829;
t28 = t148 * t942 + t149 * t939 + t583 * t643 + t829;
t25 = t143 * t941 + t144 * t939 + (-t888 / 0.2e1 + t727) * t583 + t611;
t24 = t331 - t590 + t609;
t22 = t325 + t591 + t747;
t16 = t594 - t1006;
t15 = t589 + t604;
t9 = t592 - t648;
t8 = t182 * t949 + t183 * t952 - t1002 * t955 + t220 + t631 - t638 + (t956 + t957) * t1003;
t6 = -t890 / 0.2e1 + t148 * t951 + t220 + t149 * t949 + t638 + t645;
t4 = t149 * t1010 + t148 * t961 + t1013 - t636 + t649;
t2 = -t585 + t637;
t61 = [0, 0, 0, t731, t525 * qJD(2), 0, 0, 0, -pkin(1) * t767, -pkin(1) * t764, -t575 * t732 + t576 * t731, -t484 * qJD(3) - 0.2e1 * t583 * t691, -t488 * qJD(2) + t580 * t736, t485 * qJD(2) + t580 * t735, -t731, -qJD(2) * t190 - qJD(3) * t308, qJD(2) * t191 + qJD(3) * t307, qJD(2) * t97 + qJD(3) * t158 - t575 * t733, -t81 * qJD(2) - t84 * qJD(3) + t583 * t730, -qJD(2) * t96 - qJD(3) * t159 + qJD(4) * t498, qJD(2) * t73 + qJD(3) * t76 - qJD(4) * t198 (qJD(2) * t421 + t416 * t762) * t418, qJD(2) * t154 - t193 * t762, t230 * qJD(2) + t416 * t696, t229 * qJD(2) + t418 * t696, -t731, qJD(2) * t39 + qJD(3) * t71 + qJD(5) * t80 + t295, -qJD(2) * t40 - qJD(3) * t72 - qJD(5) * t79 + t985, qJD(2) * t32 + qJD(3) * t42 + qJD(5) * t47 - t418 * t778 + t295, t18 * qJD(2) + t20 * qJD(3) - t211 * qJD(4) + t19 * qJD(5) - t416 * t562, qJD(2) * t31 + qJD(3) * t43 + qJD(5) * t46 + qJD(6) * t384 - t985, qJD(2) * t11 + qJD(3) * t13 - qJD(4) * t41 + qJD(5) * t12 + qJD(6) * t56; 0, 0, 0, t729, t770, t764, -t767, 0, -pkin(7) * t764 - t759, pkin(7) * t767 - t758, -t444 + (t576 * t768 + t532) * t583, -0.2e1 * t580 * t732 + t583 * t983, t579 * t767 - t775, t582 * t767 + t776, -t467, -t789 + (t579 * t686 - t543) * qJD(2) + t271 * qJD(3), t788 + (t582 * t686 + t760) * qJD(2) + t270 * qJD(3), t831 + (-t412 * t582 - t579 * t678) * qJD(2) + t90 * qJD(3) + t427 * qJD(4), qJD(2) * t670 + t78 * qJD(3) - t834, -t832 + (-t412 * t579 + t582 * t678) * qJD(2) + t88 * qJD(3) + t506, t837 + (pkin(8) * t670 + t412 * t495) * qJD(2) + t44 * qJD(3) + t153 * qJD(4) (t803 + t804) * t421 + t827, t791 + (-t420 * t486 - t421 * t482) * qJD(2) - t830, qJD(3) * t266 + qJD(5) * t267 - t486 * t767 + t807, qJD(3) * t268 + qJD(5) * t269 + t482 * t767 + t808, -t410, t885 + (t365 * t482 + t420 * t456 + t893) * qJD(2) + t34 * qJD(3) + t201 + t54 * qJD(5), -t882 + (t365 * t486 + t421 * t456 + t889) * qJD(2) + t35 * qJD(3) + t209 * qJD(4) + t53 * qJD(5), t897 + (t174 * t482 + t228 * t420 + t893) * qJD(2) + t16 * qJD(3) + t201 + t24 * qJD(5) + t165 * qJD(6), t906 + (-t1002 * t420 + t1003 * t421 - t143 * t482 + t144 * t486) * qJD(2) + t8 * qJD(3) + t129 * qJD(4) + t6 * qJD(5) + t267 * qJD(6), t898 + (-t174 * t486 - t228 * t421 - t889) * qJD(2) + t15 * qJD(3) + t210 * qJD(4) + t22 * qJD(5) + t294, t916 + (t1002 * t143 + t1003 * t144 + t174 * t228) * qJD(2) + t2 * qJD(3) + t25 * qJD(4) + t4 * qJD(5) + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t699, -t608, t414, t621, t545, qJD(2) * t271 - t383 - t805, qJD(2) * t270 + t779 + t806, qJD(2) * t90 - t383 + t810, t78 * qJD(2) - qJD(3) * t814 - t730 - t833, t88 * qJD(2) - t779 - t790 - t796, t836 + t44 * qJD(2) + (-pkin(3) * t398 - qJ(4) * t397) * qJD(3) + t374 * qJD(4), -t991, -t655, t266 * qJD(2) + t990, t268 * qJD(2) + t989, t545, qJD(2) * t34 + t920 + t979, qJD(2) * t35 + t622 - t919, qJD(2) * t16 + t926 + t979, t902 + t8 * qJD(2) + (t870 + t873) * qJD(3) + t171 * qJD(4) + t58 * qJD(5) + t778, qJD(2) * t15 - t562 - t622 + t925, t914 + t2 * qJD(2) + (t182 * t492 + t183 * t491) * qJD(3) + t29 * qJD(4) + t9 * qJD(5) + t60 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t427 - t505, t414, t600, qJD(2) * t153 + qJD(3) * t374 - t787, 0, 0, 0, 0, 0, t118, qJD(2) * t209 + t993, t118, qJD(2) * t129 + qJD(3) * t171 - t809, qJD(2) * t210 - t993, qJD(2) * t25 + qJD(3) * t29 + qJD(5) * t28 - t881; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t991, t655, t101, t269 * qJD(2) - t989, t546, qJD(2) * t54 + t917 + t982, qJD(2) * t53 + t660 - t918, qJD(2) * t24 + t923 + t982, t6 * qJD(2) + t58 * qJD(3) + qJD(5) * t680 - t778 + t903, qJD(2) * t22 + t562 - t660 + t924, t915 + t4 * qJD(2) + t9 * qJD(3) + t28 * qJD(4) + (-pkin(5) * t149 - qJ(6) * t148) * qJD(5) + t136 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t165 - t742, t101, -t596, qJD(2) * t38 + qJD(3) * t60 + qJD(5) * t136 + t864; 0, 0, 0, -t729, -t770, 0, 0, 0, t759, t758, -t576 * t729 - t444, 0.2e1 * t579 * t621, -t735 + t775, t736 - t776, t467, qJD(3) * t344 + t789, qJD(3) * t343 - t788, qJD(3) * t91 - qJD(4) * t426 - t831, -t77 * qJD(3) - t583 * t766 + t834, qJD(3) * t89 + t506 + t832, qJD(3) * t45 - qJD(4) * t152 - t837, -t421 * t804 + t827, -t791 - t830, -qJD(3) * t265 - qJD(5) * t264 - t807, -qJD(3) * t262 - qJD(5) * t263 - t808, t410, qJD(3) * t33 - qJD(5) * t51 + t200 - t885, qJD(3) * t36 - qJD(4) * t205 - qJD(5) * t52 + t882, qJD(3) * t17 - qJD(5) * t23 - qJD(6) * t164 + t200 - t897, -qJD(3) * t7 + qJD(4) * t130 - qJD(5) * t5 - qJD(6) * t264 - t906, -qJD(3) * t14 - qJD(4) * t206 - qJD(5) * t21 + t294 - t898, -qJD(3) * t1 + qJD(4) * t26 - qJD(5) * t3 - qJD(6) * t37 - t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t732, t524 * qJD(3), 0, 0, 0, -pkin(2) * t799, -pkin(2) * t798, -qJD(3) * t354 + t733, 0, -qJD(3) * t353 + qJD(4) * t574 (qJD(3) * t507 - t797) * t495, t482 * t697, -t762 * t243, 0, 0, 0, qJD(3) * t194 + t486 * t794 + t436, qJD(3) * t195 - t482 * t794 + t734, qJD(3) * t85 + qJD(5) * t102 - t486 * t777 + t436, 0, qJD(3) * t86 + qJD(5) * t103 + qJD(6) * t471 - t734, t50 * qJD(3) + t55 * qJD(5) + (-t792 + t797) * t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t700, t983, t481, t538 * t579, t548, -t641 - t756, -t642 + t757, -t661 - t756, -t835 + t999, -t662 - t757, pkin(8) * t999 - t625, t992, -t654, -t784 - t988, -t786 - t697, t548, -t664 - t824, -t652 - t663, -t673 - t824 (t492 * t482 + t491 * t486) * qJD(3) + t202 * qJD(4) + t74 * qJD(5) + t777 - t676, t652 - t674 (-t1002 * t492 + t1003 * t491) * qJD(3) + t83 * qJD(4) + t48 * qJD(5) - t1007 + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t701, t481, t454, -t620 + t756, 0, 0, 0, 0, 0, t161, t614, t161, qJD(3) * t202 + t811, -t613, qJD(3) * t83 + t186 - t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t992, t654, t163, t697 - t785, t547, -t623 + t824, -t624 - t653, -t666 + t824, t74 * qJD(3) + qJD(5) * t679 - t777 - t927, t653 - t665, t48 * qJD(3) + (-pkin(5) * t1002 - qJ(6) * t1003) * qJD(5) + t1007 + t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t619, t163, t213, -t626 - t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t699, t608, t415 (-t739 - t802) * t583, t545, -qJD(2) * t344 + t805, -qJD(2) * t343 - t806, -qJD(2) * t91 - t810, qJD(2) * t77 + t833, -t89 * qJD(2) + t790 - t796, -qJ(4) * t796 - t45 * qJD(2) - t836, t991, t655, t265 * qJD(2) - t741, t262 * qJD(2) - t740, t545, -qJD(2) * t33 - t920 + t980, -qJD(2) * t36 + t703 + t919, -qJD(2) * t17 - t926 + t980, qJD(2) * t7 - qJD(5) * t57 - t902, qJD(2) * t14 - t562 - t703 - t925, qJD(2) * t1 + qJD(4) * t30 + qJD(5) * t10 - qJD(6) * t59 - t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, -t983, t535, -t579 * t765, t547, t641, t642, t661, t835, t662, t625, -t992, t654, t784, t786, t547, t664, t663 + t795, t673, qJD(5) * t75 + t676, t674 - t795, -qJD(4) * t82 + qJD(5) * t49 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, t413, t560 - t772, t413, 0, t772 + t763, qJD(4) * t309 + qJD(5) * t212 - t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t538, -t497, 0, 0, 0, 0, 0, -t479, -t480, -t479, 0, t480, qJD(5) * t156 + t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, t1005, t994, -t672, -qJD(6) - t1005, t156 * qJD(4) + (-pkin(5) * t494 - qJ(6) * t493) * qJD(5) + t774 + t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t491 * t762 - t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t426 + t505, t415, -t600, qJ(4) * t563 + t152 * qJD(2) + t787, 0, 0, 0, 0, 0, t104, t205 * qJD(2) + t996, t104, -qJD(2) * t130 + t809, t206 * qJD(2) - t996, -t26 * qJD(2) - t30 * qJD(3) - t27 * qJD(5) + t562 * t578 + t881; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701, t535, -t454, t620, 0, 0, 0, 0, 0, -t161, -t614, -t161, -t811, t613, qJD(3) * t82 + t186 + t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, t497, 0, 0, 0, 0, 0, t424, t425, t424, 0, -t425, -qJD(5) * t155 - t602 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t425, -t424, 0, t425 (t852 - t932) * qJD(5) + t769 - t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t991, -t655, t187, t263 * qJD(2) + t740, t546, qJD(2) * t51 - t917 + t981, qJD(2) * t52 + t704 + t918, qJD(2) * t23 - t923 + t981, qJD(2) * t5 + qJD(3) * t57 - t903, qJD(2) * t21 + t562 - t704 - t924, qJ(6) * t562 + t3 * qJD(2) - t10 * qJD(3) + t27 * qJD(4) - t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t992, -t654, t254, t785, t548, t623, t624 - t800, t666, -qJD(3) * t75 + t927, t665 + t800, -qJD(3) * t49 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t995, -t560 - t753, t995, t672, t753 - t763, qJD(4) * t155 - t603 - t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, t480, t479, 0, -t480, t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t164 + t742, t187, t596, -qJ(6) * t793 + t37 * qJD(2) + t59 * qJD(3) - t531 - t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t619, t254, -t213, t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, qJ(6) * qJD(5) + qJD(3) * t491 + t558 + t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t61;
