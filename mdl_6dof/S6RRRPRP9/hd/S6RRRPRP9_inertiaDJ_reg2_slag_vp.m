% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRP9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP9_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:27:20
% EndTime: 2019-03-09 17:27:30
% DurationCPUTime: 4.18s
% Computational Cost: add. (3852->364), mult. (8961->600), div. (0->0), fcn. (7218->6), ass. (0->184)
t143 = sin(qJ(3));
t145 = cos(qJ(3));
t241 = sin(qJ(5));
t191 = qJD(3) * t241;
t242 = cos(qJ(5));
t192 = qJD(3) * t242;
t250 = t143 * t192 - t145 * t191;
t146 = cos(qJ(2));
t230 = t145 * t146;
t123 = pkin(7) * t230;
t144 = sin(qJ(2));
t238 = t144 * pkin(8);
t177 = -t146 * pkin(2) - t238;
t99 = -pkin(1) + t177;
t249 = t143 * t99 + t123;
t134 = t143 * qJ(4);
t248 = -t145 * pkin(3) - t134;
t139 = t143 ^ 2;
t141 = t145 ^ 2;
t227 = t139 - t141;
t207 = t242 * t143;
t91 = -t241 * t145 + t207;
t98 = t227 * qJD(3);
t181 = t145 * t192;
t90 = t241 * t143 + t242 * t145;
t48 = t90 * qJD(5) - t143 * t191 - t181;
t131 = qJD(5) * t241;
t132 = qJD(5) * t242;
t49 = -t145 * t131 + t143 * t132 - t250;
t133 = qJD(3) * t145;
t240 = pkin(8) * t146;
t176 = pkin(2) * t144 - t240;
t160 = t176 * qJD(2);
t234 = t99 * t133 + t143 * t160;
t129 = t144 * qJD(2);
t222 = qJD(3) * t146;
t202 = t143 * t222;
t78 = t145 * t129 + t202;
t35 = pkin(7) * t78 - t234;
t231 = t144 * t145;
t120 = qJ(4) * t231;
t68 = -t120 + (pkin(3) * t143 + pkin(7)) * t144;
t224 = qJD(3) * t143;
t228 = qJ(4) * t133 + t143 * qJD(4);
t74 = pkin(3) * t224 - t228;
t97 = -pkin(2) + t248;
t247 = qJD(2) * (-t146 * t97 + t238) - qJD(3) * t68 - t144 * t74;
t200 = t143 * t129;
t233 = pkin(7) * t200 + t145 * t160;
t36 = -qJD(3) * t249 + t233;
t246 = 0.2e1 * qJD(4);
t245 = 2 * qJD(6);
t244 = -pkin(3) - pkin(4);
t243 = pkin(8) - pkin(9);
t239 = pkin(9) * t144;
t106 = t243 * t145;
t168 = t243 * t207;
t53 = t241 * t106 - t168;
t96 = t242 * qJ(4) + t241 * t244;
t70 = t241 * qJD(4) + t96 * qJD(5);
t237 = t53 * t70;
t72 = t90 * t144;
t236 = t70 * t72;
t235 = t70 * t91;
t232 = t143 * t146;
t122 = pkin(7) * t232;
t138 = t146 * pkin(3);
t196 = t99 + t239;
t43 = t146 * pkin(4) - t196 * t145 + t122 + t138;
t57 = -t146 * qJ(4) + t249;
t46 = t143 * t239 + t57;
t20 = t241 * t43 + t242 * t46;
t220 = t146 * qJD(2);
t197 = t145 * t220;
t221 = t145 * qJD(4);
t229 = qJ(4) * t197 + t144 * t221;
t140 = t144 ^ 2;
t226 = -t146 ^ 2 + t140;
t225 = qJD(2) * t145;
t223 = qJD(3) * t144;
t219 = t146 * qJD(4);
t218 = t146 * qJD(6);
t193 = qJD(2) * t241;
t194 = qJD(2) * t242;
t26 = t48 * t144 + t193 * t230 - t194 * t232;
t71 = t91 * t144;
t217 = -0.2e1 * t71 * t26;
t216 = 0.2e1 * t90 * t49;
t215 = -0.2e1 * pkin(1) * qJD(2);
t214 = -0.2e1 * pkin(2) * qJD(3);
t213 = pkin(3) * t129;
t212 = pkin(8) * t224;
t211 = pkin(8) * t133;
t210 = pkin(7) * t220;
t209 = t70 * t242;
t208 = t244 * t143;
t205 = qJ(4) * t129;
t204 = qJ(6) * t129;
t203 = t143 * t223;
t201 = t145 * t222;
t199 = t143 * t133;
t198 = t144 * t220;
t28 = -qJD(5) * t168 + t106 * t131 + t250 * t243;
t187 = t243 * t241;
t29 = t106 * t132 - t243 * t181 + (qJD(5) * t187 - t243 * t191) * t143;
t54 = t242 * t106 + t143 * t187;
t195 = -t54 * t28 + t53 * t29;
t147 = -t219 + (pkin(9) * t231 - t122) * qJD(3) + (pkin(9) * t232 + (-pkin(7) * t145 + qJ(4)) * t144) * qJD(2) + t234;
t148 = (t196 * t143 + t123) * qJD(3) + (-pkin(9) * t230 + t244 * t144) * qJD(2) - t233;
t190 = t43 * t131 + t46 * t132 + t241 * t147 - t242 * t148;
t65 = t145 * t99 - t122;
t189 = t226 * qJD(2);
t188 = 0.2e1 * t198;
t87 = t145 * pkin(4) - t97;
t186 = t242 * t244;
t185 = t140 * t199;
t184 = t143 * t197;
t178 = -pkin(7) + t208;
t27 = t49 * t144 + t90 * t220;
t175 = t72 * t26 - t27 * t71;
t174 = t26 * t90 - t71 * t49;
t173 = t48 * t90 - t91 * t49;
t59 = t138 - t65;
t171 = -t143 * t57 + t145 * t59;
t170 = -t143 * t249 - t145 * t65;
t166 = -t70 * t146 + t190;
t165 = -t71 * t129 - t146 * t26;
t164 = -t54 * t129 - t28 * t146;
t163 = t53 * t129 - t29 * t146;
t162 = t90 * t129 - t146 * t49;
t161 = -t54 * t26 + t53 * t27 - t28 * t71 + t29 * t72;
t62 = qJD(3) * t208 + t228;
t69 = qJ(4) * t131 - t242 * qJD(4) - qJD(5) * t186;
t19 = -t241 * t46 + t242 * t43;
t3 = t46 * t131 - t43 * t132 - t242 * t147 - t241 * t148;
t52 = t178 * t144 + t120;
t79 = t144 * t133 + t143 * t220;
t159 = 0.2e1 * t28 * t90 + 0.2e1 * t29 * t91 - 0.2e1 * t53 * t48 - 0.2e1 * t54 * t49;
t95 = -t241 * qJ(4) + t186;
t157 = t91 * t26 + t27 * t90 + t48 * t71 + t72 * t49;
t155 = t248 * qJD(3) + t221;
t154 = t53 * t131 + t54 * t132 - t28 * t241 - t29 * t242;
t153 = t72 * t131 + t71 * t132 - t241 * t26 - t242 * t27;
t152 = t91 * t131 - t90 * t132 - t241 * t49 + t242 * t48;
t30 = -t35 + t205 - t219;
t32 = -t213 - t36;
t150 = qJD(3) * t171 + t32 * t143 + t30 * t145;
t149 = qJD(3) * t170 - t36 * t143 - t35 * t145;
t24 = (t244 * t145 - t134) * t223 + t178 * t220 + t229;
t127 = pkin(5) * t129;
t113 = -0.2e1 * t198;
t112 = -0.2e1 * t199;
t111 = 0.2e1 * t199;
t110 = pkin(8) * t201;
t94 = pkin(5) - t95;
t93 = -qJ(6) + t96;
t80 = t200 - t201;
t77 = t197 - t203;
t76 = t146 * t132 - t144 * t193;
t75 = -t146 * t131 - t144 * t194;
t67 = qJD(6) + t69;
t64 = 0.2e1 * t70;
t61 = 0.2e1 * t141 * t198 - 0.2e1 * t185;
t60 = 0.2e1 * t139 * t198 + 0.2e1 * t185;
t58 = t227 * t223 - t184;
t56 = -t143 * t189 + t144 * t201;
t55 = 0.4e1 * t144 * t199 + t227 * t220;
t51 = 0.2e1 * t144 * t202 + 0.2e1 * t226 * t225;
t50 = t140 * t98 - 0.2e1 * t144 * t184;
t38 = t90 * pkin(5) - t91 * qJ(6) + t87;
t37 = -0.2e1 * t91 * t48;
t34 = pkin(3) * t79 + qJ(4) * t203 + t210 - t229;
t33 = -t91 * t129 - t48 * t146;
t22 = -t71 * pkin(5) - t72 * qJ(6) + t52;
t13 = 0.2e1 * t72 * t27;
t12 = -t146 * pkin(5) - t19;
t11 = t146 * qJ(6) + t20;
t8 = -0.2e1 * t72 * t129 + 0.2e1 * t27 * t146;
t7 = t49 * pkin(5) + t48 * qJ(6) - t91 * qJD(6) + t62;
t6 = t27 * t91 - t72 * t48;
t5 = t26 * pkin(5) - t27 * qJ(6) - t72 * qJD(6) + t24;
t2 = t127 + t190;
t1 = -t204 - t3 + t218;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, -0.2e1 * t189, 0, t113, 0, 0, t144 * t215, t146 * t215, 0, 0, t61, 0.2e1 * t50, t51, t60, 0.2e1 * t56, t113, 0.2e1 * t65 * t129 - 0.2e1 * t36 * t146 + 0.2e1 * (t140 * t133 + t143 * t188) * pkin(7), -0.2e1 * t249 * t129 - 0.2e1 * t35 * t146 + 0.2e1 * (-t140 * t224 + t145 * t188) * pkin(7), 0.2e1 * t170 * t220 + 0.2e1 * (t143 * t35 - t145 * t36 + (t143 * t65 - t145 * t249) * qJD(3)) * t144, 0.2e1 * pkin(7) ^ 2 * t198 - 0.2e1 * t249 * t35 + 0.2e1 * t65 * t36, t61, t51, -0.2e1 * t50, t113, -0.2e1 * t56, t60, 0.2e1 * (qJD(2) * t143 * t68 + t32) * t146 + 0.2e1 * (-qJD(2) * t59 + t68 * t133 + t34 * t143) * t144, 0.2e1 * t171 * t220 + 0.2e1 * (-t143 * t30 + t145 * t32 + (-t143 * t59 - t145 * t57) * qJD(3)) * t144, 0.2e1 * (-t68 * t225 - t30) * t146 + 0.2e1 * (qJD(2) * t57 - t34 * t145 + t68 * t224) * t144, 0.2e1 * t57 * t30 + 0.2e1 * t59 * t32 + 0.2e1 * t68 * t34, t13, -0.2e1 * t175, t8, t217, 0.2e1 * t165, t113, -0.2e1 * t19 * t129 - 0.2e1 * t146 * t190 - 0.2e1 * t24 * t71 + 0.2e1 * t52 * t26, 0.2e1 * t20 * t129 + 0.2e1 * t3 * t146 + 0.2e1 * t24 * t72 + 0.2e1 * t52 * t27, -0.2e1 * t19 * t27 + 0.2e1 * t190 * t72 - 0.2e1 * t20 * t26 - 0.2e1 * t3 * t71, -0.2e1 * t19 * t190 - 0.2e1 * t20 * t3 + 0.2e1 * t52 * t24, t13, t8, 0.2e1 * t175, t113, -0.2e1 * t165, t217, 0.2e1 * t12 * t129 - 0.2e1 * t2 * t146 + 0.2e1 * t22 * t26 - 0.2e1 * t5 * t71, 0.2e1 * t1 * t71 - 0.2e1 * t11 * t26 + 0.2e1 * t12 * t27 + 0.2e1 * t2 * t72, 0.2e1 * t1 * t146 - 0.2e1 * t11 * t129 - 0.2e1 * t22 * t27 - 0.2e1 * t5 * t72, 0.2e1 * t11 * t1 + 0.2e1 * t12 * t2 + 0.2e1 * t22 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, 0, -t129, 0, -t210, pkin(7) * t129, 0, 0, -t58, -t55, t80, t58, t78, 0, t110 + (-pkin(2) * t145 + pkin(7) * t143) * t223 + (t177 * t143 - t123) * qJD(2) (pkin(7) * t231 + t176 * t143) * qJD(3) + (t177 * t145 + t122) * qJD(2), t149, -pkin(2) * t210 + pkin(8) * t149, -t58, t80, t55, 0, -t78, t58, t110 + (t97 * t223 - t34) * t145 - t247 * t143, t150 (-t34 + (t144 * t97 + t240) * qJD(3)) * t143 + t247 * t145, pkin(8) * t150 + t34 * t97 + t68 * t74, t6, -t157, t33, t174, t162, 0, t24 * t90 + t87 * t26 + t52 * t49 - t62 * t71 + t163, t24 * t91 + t87 * t27 - t52 * t48 + t62 * t72 - t164, t19 * t48 + t190 * t91 - t20 * t49 + t3 * t90 + t161, -t19 * t29 + t190 * t53 - t20 * t28 + t24 * t87 - t3 * t54 + t52 * t62, t6, t33, t157, 0, -t162, t174, t22 * t49 + t38 * t26 + t5 * t90 - t7 * t71 + t163, -t1 * t90 - t11 * t49 - t12 * t48 + t2 * t91 + t161, t22 * t48 - t38 * t27 - t5 * t91 - t7 * t72 + t164, t1 * t54 - t11 * t28 + t12 * t29 + t2 * t53 + t22 * t7 + t5 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, -0.2e1 * t98, 0, t112, 0, 0, t143 * t214, t145 * t214, 0, 0, t111, 0, 0.2e1 * t98, 0, 0, t112, -0.2e1 * t74 * t145 + 0.2e1 * t97 * t224, 0, -0.2e1 * t97 * t133 - 0.2e1 * t74 * t143, 0.2e1 * t97 * t74, t37, 0.2e1 * t173, 0, t216, 0, 0, 0.2e1 * t87 * t49 + 0.2e1 * t62 * t90, -0.2e1 * t87 * t48 + 0.2e1 * t62 * t91, t159, 0.2e1 * t87 * t62 + 0.2e1 * t195, t37, 0, -0.2e1 * t173, 0, 0, t216, 0.2e1 * t38 * t49 + 0.2e1 * t7 * t90, t159, 0.2e1 * t38 * t48 - 0.2e1 * t7 * t91, 0.2e1 * t38 * t7 + 0.2e1 * t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, 0, -t79, t129, t36, t35, 0, 0, 0, t77, 0, t129, t79, 0, t36 + 0.2e1 * t213 (-pkin(3) * t220 - qJ(4) * t223) * t145 + (-qJ(4) * t220 + (pkin(3) * qJD(3) - qJD(4)) * t144) * t143, -t35 + 0.2e1 * t205 - 0.2e1 * t219, -t32 * pkin(3) + t30 * qJ(4) + t57 * qJD(4), 0, 0, -t27, 0, t26, t129, -t95 * t129 + t166, t96 * t129 + t69 * t146 - t3, -t96 * t26 - t95 * t27 - t69 * t71 + t236, -t19 * t70 - t190 * t95 - t20 * t69 - t3 * t96, 0, -t27, 0, t129, -t26, 0, t129 * t94 + t127 + t166, -t93 * t26 + t94 * t27 - t67 * t71 + t236 (-qJD(6) - t67) * t146 + (qJ(6) - t93) * t129 + t3, t1 * t93 - t11 * t67 + t12 * t70 + t2 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, -t224, 0, -t211, t212, 0, 0, 0, t133, 0, 0, t224, 0, -t211, t155, -t212, t155 * pkin(8), 0, 0, t48, 0, t49, 0, t29, -t28, t95 * t48 - t96 * t49 + t69 * t90 + t235, -t28 * t96 - t29 * t95 - t54 * t69 + t237, 0, t48, 0, 0, -t49, 0, t29, -t94 * t48 - t93 * t49 + t67 * t90 + t235, t28, -t28 * t93 + t29 * t94 - t54 * t67 + t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, qJ(4) * t246, 0, 0, 0, 0, 0, 0, t64, -0.2e1 * t69, 0, -0.2e1 * t96 * t69 - 0.2e1 * t95 * t70, 0, 0, 0, 0, 0, 0, t64, 0, 0.2e1 * t67, -0.2e1 * t93 * t67 + 0.2e1 * t94 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, t77, 0, t32, 0, 0, 0, 0, 0, 0, t75, -t76, t153, -t190 * t242 - t3 * t241 + (-t241 * t19 + t242 * t20) * qJD(5), 0, 0, 0, 0, 0, 0, t75, t153, t76, -t2 * t242 + t1 * t241 + (t242 * t11 + t241 * t12) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, 0, t211, 0, 0, 0, 0, 0, 0, 0, 0, t152, t154, 0, 0, 0, 0, 0, 0, 0, t152, 0, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, t132, 0, -t209 - t69 * t241 + (-t241 * t95 + t242 * t96) * qJD(5), 0, 0, 0, 0, 0, 0, t131, 0, -t132, -t209 - t67 * t241 + (t241 * t94 + t242 * t93) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, -t26, -t129, -t190, t3, 0, 0, 0, t27, 0, -t129, t26, 0, -0.2e1 * t127 - t190, -t27 * pkin(5) - t26 * qJ(6) + t71 * qJD(6), -0.2e1 * t204 - t3 + 0.2e1 * t218, -t2 * pkin(5) + t1 * qJ(6) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, 0, -t49, 0, -t29, t28, 0, 0, 0, -t48, 0, 0, t49, 0, -t29, pkin(5) * t48 - t49 * qJ(6) - t90 * qJD(6), -t28, -t29 * pkin(5) - t28 * qJ(6) + t54 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, t69, 0, 0, 0, 0, 0, 0, 0, 0, -t70, 0 -(2 * qJD(6)) - t69, -t70 * pkin(5) - t67 * qJ(6) + t93 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131, -t132, 0, 0, 0, 0, 0, 0, 0, 0, -t131, 0, t132, t241 * qJD(6) + (-t241 * pkin(5) + t242 * qJ(6)) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, qJ(6) * t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, 0, t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
