% Calculate vector of inverse dynamics joint torques for
% S6RRRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:28
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPRP9_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRP9_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:21:54
% EndTime: 2019-03-09 17:25:53
% DurationCPUTime: 221.82s
% Computational Cost: add. (54528->1930), mult. (144129->2360), div. (0->0), fcn. (152180->8), ass. (0->840)
t1643 = Icges(4,1) + Icges(5,1);
t1712 = Icges(5,4) + Icges(4,5);
t1711 = Icges(4,6) - Icges(5,6);
t1692 = Icges(6,4) - Icges(7,5);
t885 = sin(qJ(3));
t1772 = (Icges(4,4) - Icges(5,5)) * t885;
t1693 = Icges(6,1) + Icges(7,1);
t1691 = Icges(7,4) + Icges(6,5);
t1642 = Icges(4,2) + Icges(5,3);
t1771 = Icges(5,2) + Icges(4,3);
t1690 = Icges(6,2) + Icges(7,3);
t1770 = Icges(7,2) + Icges(6,3);
t1689 = Icges(6,6) - Icges(7,6);
t888 = cos(qJ(3));
t1769 = -t1711 * t885 + t1712 * t888;
t1768 = t1643 * t888 - t1772;
t886 = sin(qJ(2));
t887 = sin(qJ(1));
t1314 = t886 * t887;
t1410 = sin(qJ(5));
t1411 = cos(qJ(5));
t890 = cos(qJ(1));
t1309 = t888 * t890;
t889 = cos(qJ(2));
t1311 = t887 * t889;
t732 = t1311 * t885 + t1309;
t1307 = t890 * t885;
t1310 = t888 * t889;
t733 = t1310 * t887 - t1307;
t508 = t733 * t1410 - t732 * t1411;
t509 = t1410 * t732 + t1411 * t733;
t232 = -Icges(6,5) * t509 + Icges(6,6) * t508 + Icges(6,3) * t1314;
t234 = Icges(7,4) * t509 - Icges(7,2) * t1314 + Icges(7,6) * t508;
t1635 = t232 - t234;
t1312 = t886 * t890;
t734 = t1307 * t889 - t887 * t888;
t1308 = t889 * t890;
t735 = t1308 * t888 + t885 * t887;
t515 = t1410 * t734 + t1411 * t735;
t976 = -t1410 * t735 + t1411 * t734;
t233 = Icges(6,5) * t515 + Icges(6,6) * t976 - Icges(6,3) * t1312;
t236 = Icges(7,4) * t515 - Icges(7,2) * t1312 - Icges(7,6) * t976;
t1710 = t233 + t236;
t1367 = Icges(7,5) * t976;
t242 = Icges(7,1) * t515 - Icges(7,4) * t1312 - t1367;
t470 = Icges(6,4) * t976;
t245 = Icges(6,1) * t515 - Icges(6,5) * t1312 + t470;
t1495 = t242 + t245;
t468 = Icges(7,5) * t515;
t230 = -Icges(7,6) * t1312 - Icges(7,3) * t976 + t468;
t1374 = Icges(6,4) * t515;
t239 = Icges(6,2) * t976 - Icges(6,6) * t1312 + t1374;
t1497 = t230 - t239;
t1718 = -t1495 * t509 - t1497 * t508;
t1767 = t1718 + (-t1635 * t890 + t1710 * t887) * t886;
t1340 = t232 * t889;
t1375 = Icges(6,4) * t509;
t238 = Icges(6,2) * t508 + Icges(6,6) * t1314 - t1375;
t1526 = Icges(6,1) * t509 - Icges(6,5) * t1314;
t1649 = Icges(6,4) * t508;
t243 = t1526 - t1649;
t1624 = -t1410 * t888 + t1411 * t885;
t683 = t1624 * t886;
t973 = t1410 * t885 + t1411 * t888;
t945 = t886 * t973;
t101 = -t238 * t683 + t243 * t945 - t1340;
t1338 = t233 * t889;
t102 = t239 * t683 + t245 * t945 + t1338;
t1043 = t101 * t890 - t102 * t887;
t1334 = t236 * t889;
t100 = -t230 * t683 + t242 * t945 + t1334;
t1336 = t234 * t889;
t467 = Icges(7,5) * t509;
t228 = -Icges(7,6) * t1314 + Icges(7,3) * t508 + t467;
t1525 = Icges(7,1) * t509 - Icges(7,4) * t1314;
t1648 = Icges(7,5) * t508;
t240 = t1648 + t1525;
t99 = -t228 * t683 + t240 * t945 + t1336;
t1053 = t100 * t887 - t890 * t99;
t1219 = qJD(2) * t890;
t1135 = -t1219 / 0.2e1;
t871 = qJD(2) * t887;
t1137 = -t871 / 0.2e1;
t1224 = qJD(1) * t887;
t1141 = t1224 / 0.2e1;
t1405 = -qJD(1) / 0.2e1;
t1142 = t886 * t1405;
t1221 = qJD(2) * t886;
t1206 = qJD(2) * qJD(3);
t1530 = qJDD(3) * t886 + t889 * t1206;
t1207 = qJD(1) * qJD(2);
t775 = qJDD(2) * t887 + t890 * t1207;
t1103 = t1530 * t890 + t775;
t1156 = t889 * t1219;
t1204 = qJD(3) - qJD(5);
t307 = -qJD(5) * t1156 + (-qJDD(5) * t890 - t1204 * t1224) * t886 + t1103;
t1353 = t102 * t307;
t1218 = qJD(3) * t886;
t1144 = qJD(1) * t1218;
t776 = -qJDD(2) * t890 + t887 * t1207;
t521 = t890 * t1144 + t1530 * t887 + t776;
t1220 = qJD(2) * t889;
t1222 = qJD(1) * t890;
t971 = t887 * t1220 + t886 * t1222;
t308 = -qJD(5) * t971 - qJDD(5) * t1314 + t521;
t1354 = t101 * t308;
t1355 = t100 * t307;
t1388 = t99 * t308;
t1214 = qJD(3) * t890;
t1153 = t889 * t1214;
t1158 = t886 * t1219;
t1217 = qJD(3) * t887;
t374 = qJD(1) * t732 - t1153 * t888 + (t1158 - t1217) * t885;
t1215 = qJD(3) * t889;
t855 = qJD(1) - t1215;
t1008 = t855 * t885;
t1223 = qJD(1) * t889;
t1117 = -qJD(3) + t1223;
t375 = t890 * t1008 + (-t1117 * t887 - t1158) * t888;
t165 = qJD(5) * t515 + t1410 * t375 + t1411 * t374;
t166 = qJD(5) * t976 - t1410 * t374 + t1411 * t375;
t1163 = t886 * t1224;
t970 = -t1156 + t1163;
t105 = Icges(6,5) * t166 - Icges(6,6) * t165 + Icges(6,3) * t970;
t109 = Icges(6,4) * t166 - Icges(6,2) * t165 + Icges(6,6) * t970;
t113 = Icges(6,1) * t166 - Icges(6,4) * t165 + Icges(6,5) * t970;
t1211 = qJD(5) * t886;
t684 = t1624 * t889;
t310 = -qJD(2) * t684 - qJD(3) * t945 + t1211 * t973;
t685 = t973 * t889;
t783 = t1204 * t886;
t311 = qJD(2) * t685 - t1624 * t783;
t34 = t105 * t889 + t109 * t683 + t113 * t945 - t1221 * t233 - t239 * t310 + t245 * t311;
t763 = t886 * t1214 + t871;
t621 = -t1211 * t890 + t763;
t1399 = t34 * t621;
t1159 = t886 * t871;
t1216 = qJD(3) * t888;
t376 = t1216 * t1311 - t888 * t1224 + (t1222 * t889 - t1159 - t1214) * t885;
t377 = t1117 * t1309 + (-t1221 * t888 + t1008) * t887;
t167 = qJD(5) * t509 + t1410 * t377 - t1411 * t376;
t168 = -qJD(5) * t508 + t1410 * t376 + t1411 * t377;
t106 = Icges(6,5) * t168 - Icges(6,6) * t167 - Icges(6,3) * t971;
t110 = Icges(6,4) * t168 - Icges(6,2) * t167 - Icges(6,6) * t971;
t114 = Icges(6,1) * t168 - Icges(6,4) * t167 - Icges(6,5) * t971;
t33 = t106 * t889 + t110 * t683 + t114 * t945 + t1221 * t232 + t238 * t310 + t243 * t311;
t764 = -t886 * t1217 + t1219;
t622 = t1211 * t887 + t764;
t1400 = t33 * t622;
t103 = Icges(7,5) * t166 + Icges(7,6) * t970 + Icges(7,3) * t165;
t107 = Icges(7,4) * t166 + Icges(7,2) * t970 + Icges(7,6) * t165;
t111 = Icges(7,1) * t166 + Icges(7,4) * t970 + Icges(7,5) * t165;
t32 = -t103 * t683 + t107 * t889 + t111 * t945 - t1221 * t236 + t230 * t310 + t242 * t311;
t1401 = t32 * t621;
t104 = Icges(7,5) * t168 - Icges(7,6) * t971 + Icges(7,3) * t167;
t108 = Icges(7,4) * t168 - Icges(7,2) * t971 + Icges(7,6) * t167;
t112 = Icges(7,1) * t168 - Icges(7,4) * t971 + Icges(7,5) * t167;
t31 = -t104 * t683 + t108 * t889 + t112 * t945 - t1221 * t234 + t228 * t310 + t240 * t311;
t1402 = t31 * t622;
t1120 = t889 * t1204;
t777 = qJD(1) - t1120;
t1427 = -t777 / 0.2e1;
t1437 = t622 / 0.2e1;
t1440 = -t621 / 0.2e1;
t1203 = t886 * t1206 + qJDD(1);
t603 = -qJD(2) * t1211 + (-qJDD(3) + qJDD(5)) * t889 + t1203;
t1441 = -t603 / 0.2e1;
t1765 = t1692 * t683;
t1486 = t1691 * t889 + t1693 * t945 + t1765;
t1764 = t1692 * t945;
t1487 = -t1689 * t889 - t1690 * t683 - t1764;
t1727 = t1689 * t683 + t1691 * t945 + t1770 * t889;
t1705 = t1727 * t889;
t1564 = t1486 * t945 - t1487 * t683 + t1705;
t1734 = -t1691 * t1221 - t1692 * t310 + t1693 * t311;
t1735 = -t1221 * t1770 - t1689 * t310 + t1691 * t311;
t1736 = t1221 * t1689 + t1690 * t310 - t1692 * t311;
t1657 = -t1221 * t1727 + t1486 * t311 + t1487 * t310 + t1734 * t945 + t1735 * t889 - t1736 * t683;
t1459 = t1564 * t603 + t1657 * t777;
t1709 = t238 + t228;
t1477 = (t1693 * t508 + t1375 - t1709 - t467) * t622 - (-t1693 * t683 - t1487 + t1764) * t777 - (-t1693 * t976 + t1374 - t1497 - t468) * t621;
t1619 = t1495 * t515 - t1497 * t976;
t1651 = -t1312 * t1710 + t1619;
t1496 = t240 + t243;
t1763 = t1709 * t976;
t1719 = -t1496 * t515 + t1763;
t1652 = t1312 * t1635 - t1719;
t1565 = -t1312 * t1727 + t1486 * t515 - t1487 * t976;
t1687 = t1565 * t777;
t1509 = t1651 * t621 - t1652 * t622 + t1687;
t1653 = -t1314 * t1710 - t1718;
t1716 = t1496 * t509;
t1754 = t1709 * t508;
t1654 = t1314 * t1635 + t1716 + t1754;
t1566 = -t1314 * t1727 + t1486 * t509 + t1487 * t508;
t1755 = t1566 * t777;
t1510 = t1653 * t621 - t1654 * t622 + t1755;
t1534 = t1653 * t887 - t1654 * t890;
t1535 = t1653 * t890 + t1654 * t887;
t1536 = t1651 * t887 - t1652 * t890;
t1537 = t1651 * t890 + t1652 * t887;
t1650 = t101 + t99;
t1688 = t102 + t100;
t1538 = t1650 * t887 + t1688 * t890;
t1595 = t32 + t34;
t1596 = t31 + t33;
t1738 = t111 + t113;
t1740 = -t105 - t107;
t1742 = t103 - t109;
t1597 = t1314 * t1740 + t1495 * t168 + t1497 * t167 - t1710 * t971 + t1738 * t509 + t1742 * t508;
t1737 = t112 + t114;
t1739 = -t106 - t108;
t1741 = t104 - t110;
t1598 = t1314 * t1739 + t1496 * t168 + t1635 * t971 + t167 * t1709 + t1737 * t509 + t1741 * t508;
t1599 = t1312 * t1740 + t1495 * t166 + t1497 * t165 + t1710 * t970 + t1738 * t515 - t1742 * t976;
t1600 = t1312 * t1739 + t1496 * t166 - t1635 * t970 + t165 * t1709 + t1737 * t515 - t1741 * t976;
t1658 = -t1314 * t1735 + t1486 * t168 + t1487 * t167 - t1727 * t971 + t1734 * t509 + t1736 * t508;
t1604 = t1566 * t603 + t1597 * t621 - t1598 * t622 + t1653 * t307 + t1654 * t308 + t1658 * t777;
t1659 = -t1312 * t1735 + t1486 * t166 + t1487 * t165 + t1727 * t970 + t1734 * t515 - t1736 * t976;
t1605 = t1565 * t603 + t1599 * t621 - t1600 * t622 + t1651 * t307 + t1652 * t308 + t1659 * t777;
t1607 = (t1689 * t945 - t1691 * t683) * t777 - (-t1689 * t515 + t1691 * t976) * t621 - (t1689 * t509 + t1691 * t508) * t622;
t1660 = t1564 * t1427 + t1650 * t1437 + t1440 * t1688;
t1665 = t1649 - t1648;
t1662 = (-t1690 * t945 + t1486 + t1765) * t777 + (-t1690 * t515 - t1367 + t1495 + t470) * t621 + (t1690 * t509 - t1496 + t1665) * t622;
t1766 = -(t1537 * t886 - t1565 * t889) * t307 / 0.2e1 - (t1535 * t886 - t1566 * t889) * t308 / 0.2e1 + (t1538 * t886 - t1564 * t889) * t1441 + ((qJD(2) * t1537 - t1659) * t889 + (-qJD(1) * t1536 + qJD(2) * t1565 + t1599 * t890 + t1600 * t887) * t886) * t1440 + ((qJD(2) * t1535 - t1658) * t889 + (-qJD(1) * t1534 + qJD(2) * t1566 + t1597 * t890 + t1598 * t887) * t886) * t1437 + (t1353 + t1354 + t1399 - t1400 + t1355 + t1388 + t1401 - t1402 + t1459) * t889 / 0.2e1 - t1604 * t1314 / 0.2e1 - t1605 * t1312 / 0.2e1 + t1221 * t1660 + (t1137 * t889 + t1142 * t890) * t1510 + (t1135 * t889 + t1141 * t886) * t1509 + (t1477 * t945 + t1662 * t683 + (t1595 * t890 + t1596 * t887 + t1564 * qJD(2) + (t1043 - t1053) * qJD(1)) * t886 + (qJD(2) * t1538 - t1607 - t1657) * t889) * t1427;
t399 = Icges(4,5) * t733 - Icges(4,6) * t732 + Icges(4,3) * t1314;
t402 = Icges(5,4) * t733 + Icges(5,2) * t1314 + Icges(5,6) * t732;
t1725 = t399 + t402;
t1377 = Icges(4,4) * t888;
t1047 = -Icges(4,2) * t885 + t1377;
t1762 = t1047 * t886 - t1711 * t889;
t1761 = -t1477 * t515 - t1662 * t976;
t1760 = -t1477 * t509 + t1662 * t508;
t1676 = -t1712 * t889 + t1768 * t886;
t1678 = t1769 * t886 - t1771 * t889;
t1316 = t885 * t886;
t1313 = t886 * t888;
t839 = Icges(5,5) * t1313;
t1706 = Icges(5,3) * t1316 - t1762 + t839;
t1499 = t1312 * t1678 + t1676 * t735 + t1706 * t734;
t401 = Icges(4,5) * t735 - Icges(4,6) * t734 + Icges(4,3) * t1312;
t404 = Icges(5,4) * t735 + Icges(5,2) * t1312 + Icges(5,6) * t734;
t1680 = t401 + t404;
t1371 = Icges(5,5) * t734;
t410 = Icges(5,1) * t735 + Icges(5,4) * t1312 + t1371;
t702 = Icges(4,4) * t734;
t413 = Icges(4,1) * t735 + Icges(4,5) * t1312 - t702;
t1724 = t410 + t413;
t699 = Icges(5,5) * t735;
t398 = Icges(5,6) * t1312 + Icges(5,3) * t734 + t699;
t1379 = Icges(4,4) * t735;
t407 = -Icges(4,2) * t734 + Icges(4,6) * t1312 + t1379;
t1726 = t398 - t407;
t1637 = t1312 * t1680 + t1724 * t735 + t1726 * t734;
t697 = Icges(5,5) * t732;
t409 = -Icges(5,1) * t733 - Icges(5,4) * t1314 - t697;
t700 = Icges(4,4) * t732;
t411 = Icges(4,1) * t733 + Icges(4,5) * t1314 - t700;
t1631 = t409 - t411;
t698 = Icges(5,5) * t733;
t397 = -Icges(5,6) * t1314 - Icges(5,3) * t732 - t698;
t701 = Icges(4,4) * t733;
t406 = Icges(4,2) * t732 - Icges(4,6) * t1314 - t701;
t1632 = t397 - t406;
t1638 = t1725 * t1312 - t1631 * t735 - t1632 * t734;
t1586 = t1499 * t855 + t1637 * t763 - t1638 * t764;
t1500 = t1314 * t1678 + t1676 * t733 + t1706 * t732;
t1639 = t1314 * t1680 + t1724 * t733 + t1726 * t732;
t1640 = t1725 * t1314 - t1631 * t733 - t1632 * t732;
t1587 = t1500 * t855 + t1639 * t763 - t1640 * t764;
t1369 = Icges(5,5) * t888;
t1044 = Icges(5,3) * t885 + t1369;
t1553 = (t1044 - t1047) * t889 - t1711 * t886;
t1758 = t1769 * t889 + t1771 * t886;
t1552 = t1712 * t886 + t1768 * t889;
t1757 = (t1642 * t888 + t1772) * t886;
t1756 = (-t1711 * t888 - t1712 * t885) * t886;
t1752 = (t1635 * t887 + t1710 * t890) * t886 - t1619 + t1754;
t201 = Icges(5,5) * t375 - Icges(5,6) * t970 - Icges(5,3) * t374;
t207 = Icges(4,4) * t375 + Icges(4,2) * t374 - Icges(4,6) * t970;
t1733 = t201 - t207;
t202 = Icges(5,5) * t377 + Icges(5,6) * t971 + Icges(5,3) * t376;
t208 = Icges(4,4) * t377 - Icges(4,2) * t376 + Icges(4,6) * t971;
t1732 = t202 - t208;
t203 = Icges(4,5) * t375 + Icges(4,6) * t374 - Icges(4,3) * t970;
t205 = Icges(5,4) * t375 - Icges(5,2) * t970 - Icges(5,6) * t374;
t1731 = t203 + t205;
t204 = Icges(4,5) * t377 - Icges(4,6) * t376 + Icges(4,3) * t971;
t206 = Icges(5,4) * t377 + Icges(5,2) * t971 + Icges(5,6) * t376;
t1730 = t204 + t206;
t209 = Icges(5,1) * t375 - Icges(5,4) * t970 - Icges(5,5) * t374;
t211 = Icges(4,1) * t375 + Icges(4,4) * t374 - Icges(4,5) * t970;
t1729 = t209 + t211;
t210 = Icges(5,1) * t377 + Icges(5,4) * t971 + Icges(5,5) * t376;
t212 = Icges(4,1) * t377 - Icges(4,4) * t376 + Icges(4,5) * t971;
t1728 = t210 + t212;
t1723 = qJD(2) * t1553 + qJD(3) * t1757;
t1722 = qJD(2) * t1758 + qJD(3) * t1756;
t745 = (-Icges(4,1) * t885 - t1377) * t886;
t1721 = (-Icges(5,1) * t885 + t1369) * t1218 + qJD(3) * t745 + t1552 * qJD(2);
t1720 = t1676 * t888 + t1706 * t885;
t1583 = rSges(7,3) + qJ(6);
t1603 = rSges(7,1) + pkin(5);
t1269 = -t1583 * t945 - t1603 * t683;
t1285 = t1583 * t515 + t1603 * t976;
t1288 = t1583 * t509 - t1603 * t508;
t1209 = qJD(6) * t683;
t1468 = -t1583 * t976 + t1603 * t515;
t1284 = -rSges(7,2) * t1312 + t1468;
t1608 = rSges(7,2) * t1314 - t1583 * t508 - t1603 * t509;
t882 = t889 * pkin(2);
t1481 = t886 * pkin(8) + t882;
t756 = t1481 * t887;
t862 = pkin(2) * t1308;
t758 = pkin(8) * t1312 + t862;
t1242 = t758 * t1219 + t756 * t871;
t540 = -t733 * pkin(3) - t732 * qJ(4);
t1212 = qJD(4) * t886;
t829 = t885 * t1212;
t1110 = -t540 * t763 + t1242 + t829;
t544 = t735 * pkin(3) + qJ(4) * t734;
t723 = t735 * pkin(4);
t606 = -pkin(9) * t1312 + t723;
t1258 = t544 + t606;
t604 = t733 * pkin(4) - pkin(9) * t1314;
t943 = t1258 * t764 + t763 * t604 + t1110;
t58 = t1284 * t622 - t1608 * t621 - t1209 + t943;
t1268 = rSges(7,2) * t889 - t1583 * t683 + t1603 * t945;
t466 = qJD(6) * t976;
t1630 = t540 - t604;
t773 = pkin(4) * t1313 + pkin(9) * t889;
t1357 = qJ(4) * t885;
t1473 = (pkin(3) * t888 + t1357) * t886;
t694 = qJD(4) * t734;
t801 = pkin(2) * t886 - pkin(8) * t889;
t1160 = t801 * t1219;
t883 = t890 * pkin(7);
t802 = t887 * pkin(1) - t883;
t1235 = -t756 - t802;
t952 = qJD(1) * t1235 - t1160;
t929 = -t1473 * t764 + t694 + t952;
t910 = t1630 * t855 - t764 * t773 + t929;
t71 = -t1268 * t622 + t1608 * t777 - t466 + t910;
t1210 = qJD(6) * t508;
t804 = t890 * pkin(1) + t887 * pkin(7);
t1547 = qJD(1) * t804;
t1172 = qJD(1) * t758 - t801 * t871 + t1547;
t1213 = qJD(4) * t732;
t1623 = -t1473 * t763 + t855 * t544 + t1172 + t1213;
t1472 = -t855 * t606 + t763 * t773 - t1623;
t1668 = t1268 * t621 - t1210 + t1472;
t72 = t1284 * t777 - t1668;
t1713 = -(t1285 * t72 - t1288 * t71) * t777 - (t1269 * t72 + t1288 * t58) * t621 - (t1269 * t71 + t1285 * t58) * t622;
t249 = -rSges(6,1) * t509 + rSges(6,2) * t508 + rSges(6,3) * t1314;
t393 = rSges(6,1) * t945 + rSges(6,2) * t683 + rSges(6,3) * t889;
t1699 = t249 * t777 - t393 * t622;
t278 = rSges(6,1) * t508 + rSges(6,2) * t509;
t460 = -t683 * rSges(6,1) + rSges(6,2) * t945;
t1698 = t278 * t777 + t460 * t622;
t289 = rSges(6,1) * t976 - rSges(6,2) * t515;
t1697 = -t278 * t621 + t289 * t622;
t1593 = t1312 * t1730 - t1631 * t375 + t1632 * t374 - t1725 * t970 + t1728 * t735 + t1732 * t734;
t1592 = t1312 * t1731 - t1680 * t970 + t1724 * t375 - t1726 * t374 + t1729 * t735 + t1733 * t734;
t1591 = t1314 * t1730 - t1631 * t377 - t1632 * t376 + t1725 * t971 + t1728 * t733 + t1732 * t732;
t1590 = t1314 * t1731 + t1680 * t971 + t1724 * t377 + t1726 * t376 + t1729 * t733 + t1733 * t732;
t1656 = t1312 * t1722 + t1676 * t375 - t1678 * t970 - t1706 * t374 + t1721 * t735 + t1723 * t734;
t1655 = t1314 * t1722 + t1676 * t377 + t1678 * t971 + t1706 * t376 + t1721 * t733 + t1723 * t732;
t1023 = -t397 * t885 - t409 * t888;
t1569 = t402 * t889;
t154 = t1023 * t886 - t1569;
t1021 = t406 * t885 + t411 * t888;
t1570 = t399 * t889;
t156 = t1021 * t886 - t1570;
t1686 = t154 + t156;
t1022 = t398 * t885 + t410 * t888;
t155 = t1022 * t886 - t404 * t889;
t1020 = -t407 * t885 + t413 * t888;
t157 = t1020 * t886 - t401 * t889;
t1685 = t155 + t157;
t1488 = -t1678 * t889 + t1720 * t886;
t608 = t683 * t887;
t609 = t887 * t945;
t1684 = -t1311 * t1770 - t1689 * t608 - t1691 * t609;
t610 = t683 * t890;
t611 = t890 * t945;
t1683 = -t1308 * t1770 - t1689 * t610 - t1691 * t611;
t1682 = t1689 * t684 + t1691 * t685 - t1770 * t886;
t1677 = -t1044 * t886 + t1762;
t1629 = t540 + t883;
t988 = t1629 - t604;
t1671 = (-t1720 + t1758) * t855 + (t1678 * t887 + t1021 + t1023) * t764 + (-t1678 * t890 - t1020 - t1022) * t763;
t1073 = t733 * rSges(5,1) + t732 * rSges(5,3);
t1666 = t1629 - t1073;
t1482 = -t733 * rSges(4,1) + t732 * rSges(4,2);
t423 = rSges(4,3) * t1314 - t1482;
t1403 = rSges(4,1) * t888;
t1075 = -rSges(4,2) * t885 + t1403;
t663 = -rSges(4,3) * t889 + t1075 * t886;
t1664 = -t423 * t855 - t663 * t764;
t1663 = t289 * t777 + t460 * t621;
t1304 = -rSges(7,2) * t1221 + t1583 * t310 + t1603 * t311 - t1209;
t1501 = rSges(7,2) * t1163 + t1583 * t165 + t1603 * t166 - t466;
t1387 = -rSges(7,2) * t1156 + t1501;
t1236 = -t1473 - t773;
t968 = t1216 * t886 + t1220 * t885;
t969 = -t1218 * t885 + t1220 * t888;
t421 = pkin(3) * t969 + qJ(4) * t968 + t829;
t614 = pkin(4) * t969 - pkin(9) * t1221;
t1275 = -t421 - t614;
t1280 = t375 * pkin(4) + pkin(9) * t1163;
t304 = -pkin(9) * t1156 + t1280;
t520 = -t1144 * t887 + t1103;
t762 = -qJDD(3) * t889 + t1203;
t213 = t375 * pkin(3) - qJ(4) * t374 + t694;
t869 = pkin(7) * t1222;
t1234 = qJD(1) * (-pkin(1) * t1224 + t869) + qJDD(1) * t804;
t821 = pkin(8) * t1156;
t972 = -t1223 * t887 - t1158;
t545 = pkin(2) * t972 - pkin(8) * t1163 + t821;
t771 = t1481 * qJD(2);
t927 = qJD(1) * t545 + qJDD(1) * t758 - t771 * t871 - t775 * t801 + t1234;
t912 = qJD(4) * t376 + qJDD(4) * t732 + t855 * t213 + t762 * t544 + t927;
t896 = t1236 * t520 + t1275 * t763 + t855 * t304 + t762 * t606 + t912;
t15 = qJD(6) * t167 + qJDD(6) * t508 - t1268 * t307 + t1284 * t603 - t1304 * t621 + t1387 * t777 + t896;
t1661 = -g(2) + t15;
t1641 = (qJD(2) * t1720 - t1722) * t889 + (t1721 * t888 + t1723 * t885 + (-t1676 * t885 + t1706 * t888) * qJD(3) + t1678 * qJD(2)) * t886;
t1633 = -t1526 - t1525 + t1665;
t1628 = -t1756 * t855 + (-t1711 * t733 - t1712 * t732) * t764 + (t1711 * t735 + t1712 * t734) * t763;
t1154 = t887 * t1215;
t623 = t887 * t1473;
t658 = t1473 * t1224;
t1315 = t885 * t889;
t753 = pkin(3) * t1310 + qJ(4) * t1315;
t761 = t801 * t1224;
t857 = pkin(8) * t1311;
t755 = -pkin(2) * t1314 + t857;
t989 = -qJD(1) * t755 - t1219 * t1481;
t1626 = -t1154 * t1473 - t855 * t623 + t764 * t753 + t829 * t890 + t658 + t761 - t989;
t424 = -rSges(5,2) * t1314 - t1073;
t1602 = t1499 * t762 + t1592 * t763 - t1593 * t764 + t1637 * t520 + t1638 * t521 + t1656 * t855;
t1601 = t1500 * t762 + t1590 * t763 - t1591 * t764 + t1639 * t520 + t1640 * t521 + t1655 * t855;
t67 = (qJD(2) * t1023 - t206) * t889 + (qJD(2) * t402 + t202 * t885 + t210 * t888 + (-t397 * t888 + t409 * t885) * qJD(3)) * t886;
t69 = (qJD(2) * t1021 - t204) * t889 + (qJD(2) * t399 - t208 * t885 + t212 * t888 + (t406 * t888 - t411 * t885) * qJD(3)) * t886;
t1589 = t67 + t69;
t68 = (qJD(2) * t1022 - t205) * t889 + (qJD(2) * t404 + t201 * t885 + t209 * t888 + (t398 * t888 - t410 * t885) * qJD(3)) * t886;
t70 = (qJD(2) * t1020 - t203) * t889 + (qJD(2) * t401 - t207 * t885 + t211 * t888 + (-t407 * t888 - t413 * t885) * qJD(3)) * t886;
t1588 = t68 + t70;
t1585 = t1488 * t855 + t1685 * t763 - t1686 * t764;
t1563 = t1311 * t1689 + t1690 * t608 + t1692 * t609;
t1562 = t1308 * t1689 + t1690 * t610 + t1692 * t611;
t1561 = -t1311 * t1691 - t1692 * t608 - t1693 * t609;
t1560 = -t1308 * t1691 - t1692 * t610 - t1693 * t611;
t1559 = t1689 * t886 - t1690 * t684 - t1692 * t685;
t1558 = -t1691 * t886 + t1692 * t684 + t1693 * t685;
t1557 = t1677 * t887;
t1556 = t1677 * t890;
t1555 = t1676 * t887;
t1554 = t1676 * t890;
t1551 = t1671 * t886;
t1550 = (-t1682 * t886 - t1705) * t777 + (t1684 * t886 + t1336 - t1340) * t622 + (-t1683 * t886 - t1334 - t1338) * t621;
t1549 = t1678 * t855 + t1680 * t763 - t1725 * t764;
t427 = t735 * rSges(4,1) - t734 * rSges(4,2) + rSges(4,3) * t1312;
t195 = t427 * t855 - t663 * t763 + t1172;
t1548 = qJD(1) * t195;
t1465 = t1685 * t890 + t1686 * t887;
t1541 = -t1685 * t887 + t1686 * t890;
t1464 = t1637 * t890 + t1638 * t887;
t1540 = -t1637 * t887 + t1638 * t890;
t1463 = t1639 * t890 + t1640 * t887;
t1539 = -t1639 * t887 + t1640 * t890;
t835 = qJ(4) * t1313;
t748 = -pkin(3) * t1316 + t835;
t1239 = qJD(4) * t735 - t764 * t748;
t536 = -t732 * pkin(3) + qJ(4) * t733;
t998 = t764 * t1316 + t732 * t855;
t1533 = pkin(4) * t998 - t536 * t855 + t1239;
t1129 = t72 * t1284;
t1532 = t1608 * t71 + t1129;
t1130 = t71 * t1268;
t1531 = -t1284 * t58 + t1130;
t1529 = t763 * t1316 - t734 * t855;
t1131 = t58 * t1608;
t1503 = t72 * t1268;
t1528 = t1503 + t1131;
t1518 = -t58 * t622 - t72 * t777;
t703 = t773 * t887;
t726 = t773 * t1224;
t858 = pkin(4) * t1310;
t774 = -pkin(9) * t886 + t858;
t1517 = -t773 * t1154 - t1218 * t1630 - t855 * t703 + t764 * t774 + t1626 + t726;
t1506 = pkin(7) * qJD(1);
t1502 = -t1583 * t167 - t1603 * t168 - t1210;
t541 = -t734 * pkin(3) + qJ(4) * t735;
t1080 = -t734 * pkin(4) + t541;
t1480 = (-t1676 + t1757) * t855 + (-t1642 * t733 - t1631 + t697 - t700) * t764 + (t1642 * t735 - t1371 - t1724 + t702) * t763;
t1479 = (-Icges(5,1) * t1316 + t1706 + t745 + t839) * t855 + (t1643 * t732 + t1632 - t698 + t701) * t764 + (-t1643 * t734 - t1379 + t1726 + t699) * t763;
t1476 = t1628 * t886;
t1475 = t1607 * t886;
t1010 = -pkin(1) - t1481;
t979 = t1010 * t887;
t1474 = t979 + t988;
t1072 = rSges(5,1) * t888 + rSges(5,3) * t885;
t991 = t1072 * t886;
t1265 = t515 * rSges(6,1) + rSges(6,2) * t976;
t251 = -rSges(6,3) * t1312 + t1265;
t84 = t251 * t777 - t393 * t621 - t1472;
t426 = t735 * rSges(5,1) + rSges(5,2) * t1312 + t734 * rSges(5,3);
t662 = -rSges(5,2) * t889 + t991;
t136 = t426 * t855 - t662 * t763 + t1623;
t1471 = -t1583 * t684 + t1603 * t685;
t1470 = t1583 * t610 - t1603 * t611;
t1469 = t1583 * t608 - t1603 * t609;
t875 = Icges(3,4) * t889;
t1048 = -Icges(3,2) * t886 + t875;
t793 = Icges(3,1) * t886 + t875;
t1462 = t1488 * t762 + t1641 * t855;
t1407 = g(2) * t887;
t1458 = g(1) * t890 + t1407;
t1457 = t886 * t1458;
t1380 = Icges(3,4) * t886;
t791 = Icges(3,2) * t889 + t1380;
t1011 = t791 * t886 - t793 * t889;
t790 = Icges(3,5) * t889 - Icges(3,6) * t886;
t1456 = qJD(1) * t1011 + t790 * qJD(2);
t640 = Icges(3,6) * t887 + t1048 * t890;
t1324 = t640 * t886;
t794 = Icges(3,1) * t889 - t1380;
t646 = Icges(3,5) * t887 + t794 * t890;
t1014 = -t646 * t889 + t1324;
t1360 = Icges(3,3) * t890;
t789 = Icges(3,5) * t886 + Icges(3,6) * t889;
t980 = qJD(2) * t789;
t1455 = -t890 * t980 + (-t790 * t887 + t1014 + t1360) * qJD(1);
t1363 = Icges(3,6) * t890;
t639 = Icges(3,4) * t1311 - Icges(3,2) * t1314 - t1363;
t1325 = t639 * t886;
t1373 = Icges(3,5) * t890;
t840 = Icges(3,4) * t1314;
t645 = Icges(3,1) * t1311 - t1373 - t840;
t1015 = -t645 * t889 + t1325;
t634 = Icges(3,3) * t887 + t790 * t890;
t1226 = qJD(1) * t634;
t1454 = qJD(1) * t1015 - t887 * t980 + t1226;
t633 = Icges(3,5) * t1311 - Icges(3,6) * t1314 - t1360;
t294 = -t1015 * t887 - t633 * t890;
t1386 = -rSges(7,2) * t971 - t1502;
t214 = pkin(3) * t377 + t376 * qJ(4) + t1213;
t305 = pkin(4) * t377 - pkin(9) * t971;
t819 = pkin(2) * t1159;
t546 = pkin(8) * t971 + qJD(1) * t862 - t819;
t914 = t776 * t801 + t1235 * qJDD(1) + (-t1547 - t546) * qJD(1) - t771 * t1219;
t905 = -qJD(4) * t374 + qJDD(4) * t734 + t1473 * t521 - t764 * t421 + t914;
t893 = t521 * t773 + (-t214 - t305) * t855 + t1630 * t762 - t764 * t614 + t905;
t14 = qJD(6) * t165 - qJDD(6) * t976 + t1268 * t308 - t1304 * t622 - t1386 * t777 + t1608 * t603 + t893;
t1453 = t14 * t1268 + t71 * t1304;
t1295 = t213 + t304;
t1006 = t545 * t1219 + t546 * t871 + t775 * t756 - t776 * t758;
t830 = t888 * t1212;
t831 = qJD(4) * t1315;
t925 = qJD(2) * t831 + qJD(3) * t830 + qJDD(4) * t1316 + t763 * t214 - t520 * t540 + t1006;
t899 = -t1258 * t521 + t1295 * t764 + t763 * t305 + t520 * t604 + t925;
t13 = qJD(6) * t310 - qJDD(6) * t683 - t1284 * t308 + t1386 * t621 + t1387 * t622 - t1608 * t307 + t899;
t956 = -t13 * t1608 + t1386 * t58;
t1452 = t71 * t1386 - t14 * t1608;
t1451 = (-t791 * t890 + t646) * t887 - (-Icges(3,2) * t1311 + t645 - t840) * t890;
t1448 = -pkin(3) - pkin(4);
t1446 = t307 / 0.2e1;
t1444 = t308 / 0.2e1;
t1443 = t520 / 0.2e1;
t1442 = t521 / 0.2e1;
t1439 = t621 / 0.2e1;
t1438 = -t622 / 0.2e1;
t1433 = -t763 / 0.2e1;
t1432 = t763 / 0.2e1;
t1431 = -t764 / 0.2e1;
t1430 = t764 / 0.2e1;
t1429 = t775 / 0.2e1;
t1428 = t776 / 0.2e1;
t1424 = -t855 / 0.2e1;
t1423 = t855 / 0.2e1;
t1418 = -rSges(5,1) - pkin(3);
t1417 = -rSges(5,2) - pkin(8);
t1416 = -rSges(7,2) - pkin(9);
t1415 = rSges(7,2) - pkin(8);
t1414 = -rSges(4,3) - pkin(8);
t1413 = -rSges(6,3) - pkin(9);
t1412 = rSges(6,3) - pkin(8);
t1409 = g(1) * t887;
t1404 = rSges(3,1) * t889;
t1398 = t67 * t764;
t1397 = t68 * t763;
t1394 = t69 * t764;
t1393 = t70 * t763;
t78 = -t249 * t621 + t251 * t622 + t943;
t1392 = t78 * t249;
t83 = t1699 + t910;
t1391 = t83 * t393;
t1390 = t83 * t887;
t1389 = t83 * t890;
t877 = t886 * rSges(5,2);
t876 = t886 * rSges(4,3);
t878 = t887 * rSges(3,3);
t1273 = t426 + t544;
t127 = t1273 * t764 - t424 * t763 + t1110;
t1352 = t127 * t424;
t1274 = t424 + t540;
t135 = t1274 * t855 - t662 * t764 + t929;
t1351 = t135 * t662;
t1346 = t154 * t521;
t1345 = t155 * t520;
t1344 = t156 * t521;
t1343 = t157 * t520;
t797 = rSges(3,1) * t886 + rSges(3,2) * t889;
t1161 = t797 * t1219;
t1227 = rSges(3,2) * t1314 + t890 * rSges(3,3);
t664 = rSges(3,1) * t1311 - t1227;
t1244 = -t664 - t802;
t363 = qJD(1) * t1244 - t1161;
t1332 = t363 * t887;
t1331 = t363 * t890;
t667 = rSges(3,1) * t1308 - rSges(3,2) * t1312 + t878;
t364 = qJD(1) * t667 - t797 * t871 + t1547;
t754 = t797 * t890;
t1330 = t364 * t754;
t1322 = t732 * t763;
t1320 = t734 * t764;
t1318 = t789 * t887;
t1317 = t789 * t890;
t1297 = -t1156 * t540 + t214 * t1312;
t1178 = t375 * rSges(5,1) + rSges(5,2) * t1156 - t374 * rSges(5,3);
t215 = -rSges(5,2) * t1163 + t1178;
t1296 = t213 + t215;
t1282 = rSges(7,2) * t1311 - t1469;
t1281 = t763 * t536 + t830;
t1277 = qJD(4) * t733 + t855 * t541;
t454 = (-rSges(5,1) * t885 + rSges(5,3) * t888) * t1218 + (t1072 * t889 + t877) * qJD(2);
t1276 = -t421 - t454;
t441 = t540 * t1312;
t1272 = t604 * t1312 - t441;
t750 = (-rSges(4,1) * t885 - rSges(4,2) * t888) * t886;
t455 = qJD(3) * t750 + (t1075 * t889 + t876) * qJD(2);
t1271 = -t455 - t771;
t1267 = rSges(7,2) * t886 - t1471;
t1264 = t544 * t1221 + t886 * t658;
t1263 = t1314 * t1473 - t540 * t889;
t537 = -t732 * rSges(5,1) + t733 * rSges(5,3);
t1262 = -t536 - t537;
t542 = -t734 * rSges(5,1) + t735 * rSges(5,3);
t1259 = t541 + t542;
t1257 = -t645 * t1308 - t887 * t633;
t1256 = t646 * t1308 + t887 * t634;
t1255 = -t609 * rSges(6,1) - t608 * rSges(6,2);
t1253 = -t611 * rSges(6,1) - t610 * rSges(6,2);
t1248 = t685 * rSges(6,1) + t684 * rSges(6,2);
t1246 = -t662 - t1473;
t1245 = -t663 - t801;
t1202 = pkin(2) * t1312;
t861 = pkin(8) * t1308;
t757 = t861 - t1202;
t1243 = t757 * t1219 + t755 * t871;
t1240 = t887 * t756 + t890 * t758;
t1233 = -t791 + t794;
t1232 = t793 + t1048;
t1200 = rSges(4,2) * t1316;
t1231 = rSges(4,3) * t1311 + t887 * t1200;
t1230 = rSges(4,3) * t1308 + t890 * t1200;
t1229 = rSges(3,2) * t1163 + rSges(3,3) * t1222;
t1228 = t821 + t869;
t1225 = qJD(1) * t790;
t378 = -t1011 * t887 - t1317;
t1208 = t378 * qJD(1);
t1201 = rSges(4,1) * t1313;
t1185 = t166 * rSges(6,1) - t165 * rSges(6,2) + rSges(6,3) * t1163;
t116 = -rSges(6,3) * t1156 + t1185;
t1187 = -t116 - t1295;
t178 = rSges(6,1) * t311 - rSges(6,2) * t310 - rSges(6,3) * t1221;
t1184 = -t178 + t1275;
t1183 = t249 + t1630;
t1182 = -t251 - t1258;
t1181 = -pkin(4) * t1322 + t1281;
t1180 = t764 * t540;
t1179 = t375 * rSges(4,1) + t374 * rSges(4,2) + rSges(4,3) * t1156;
t1177 = -t393 + t1236;
t1176 = -t771 + t1276;
t1175 = t756 * t1222 + t890 * t545 + t887 * t546;
t1173 = -t801 + t1246;
t665 = rSges(5,1) * t1310 + rSges(5,3) * t1315 + t877;
t1171 = -pkin(1) - t882;
t1169 = t1416 * t890;
t1168 = t1413 * t890;
t1146 = -pkin(1) - t1404;
t1140 = t1222 / 0.2e1;
t1136 = t871 / 0.2e1;
t1134 = t1219 / 0.2e1;
t1126 = t136 * t1246;
t1124 = t887 * t1258;
t1123 = t1236 * t890;
t586 = t646 * t1311;
t1122 = t634 * t890 - t586;
t1121 = -t633 + t1324;
t1119 = pkin(2) * t1158;
t1118 = -t1295 - t1387;
t1116 = t1275 - t1304;
t1115 = -t771 + t1184;
t1114 = t604 * t1156 + t305 * t1312 + t1297;
t1113 = t421 * t1314 + t1473 * t971 + t889 * t214;
t1112 = t1630 + t1608;
t1111 = -t1258 - t1284;
t1109 = t764 * t604 - t1180;
t1108 = t1236 - t1268;
t1107 = -t801 + t1177;
t1106 = t606 * t1221 + t886 * t726 + t1264;
t1105 = -t540 * t887 + t890 * t544 + t1240;
t1104 = t773 * t1314 + t889 * t604 + t1263;
t1102 = t1481 + t753;
t1101 = t804 + t758;
t1082 = -t732 * pkin(4) + t536;
t1078 = qJD(1) * t757 - t1481 * t871;
t800 = rSges(2,1) * t890 - rSges(2,2) * t887;
t798 = rSges(2,1) * t887 + rSges(2,2) * t890;
t799 = -rSges(3,2) * t886 + t1404;
t1077 = rSges(4,1) * t377 - rSges(4,2) * t376;
t1074 = rSges(5,1) * t377 + rSges(5,3) * t376;
t1071 = rSges(6,1) * t168 - rSges(6,2) * t167;
t118 = -rSges(6,3) * t971 + t1071;
t20 = t116 * t622 + t118 * t621 - t249 * t307 - t251 * t308 + t899;
t1068 = t78 * t118 - t20 * t249;
t29 = -t118 * t777 - t178 * t622 + t249 * t603 + t308 * t393 + t893;
t1067 = t83 * t118 - t249 * t29;
t1058 = -t771 + t1116;
t1057 = -t801 + t1108;
t1055 = t858 + t1102;
t217 = rSges(5,2) * t971 + t1074;
t39 = -t1273 * t521 + t1296 * t764 + t217 * t763 - t424 * t520 + t925;
t1052 = t127 * t217 - t39 * t424;
t373 = t640 * t889 + t646 * t886;
t981 = qJD(2) * t791;
t435 = -t890 * t981 + (-t1048 * t887 + t1363) * qJD(1);
t982 = qJD(2) * t793;
t439 = -t890 * t982 + (-t794 * t887 + t1373) * qJD(1);
t908 = -qJD(2) * t373 - t435 * t886 + t439 * t889 + t1226;
t372 = t639 * t889 + t645 * t886;
t436 = qJD(1) * t640 - t887 * t981;
t440 = qJD(1) * t646 - t887 * t982;
t909 = qJD(1) * t633 - qJD(2) * t372 - t436 * t886 + t440 * t889;
t1041 = -(t1454 * t887 + t909 * t890) * t890 + (t1455 * t887 + t908 * t890) * t887;
t1040 = -(-t1454 * t890 + t909 * t887) * t890 + (-t1455 * t890 + t908 * t887) * t887;
t1027 = t249 * t890 + t251 * t887;
t295 = -t1314 * t640 - t1122;
t1026 = -t294 * t890 + t295 * t887;
t296 = -t1312 * t639 - t1257;
t297 = -t1312 * t640 + t1256;
t1025 = -t296 * t890 + t297 * t887;
t1024 = -t364 * t887 - t1331;
t1019 = t423 * t890 - t427 * t887;
t456 = rSges(3,1) * t972 - rSges(3,2) * t1156 + t1229;
t752 = t797 * t887;
t457 = -qJD(2) * t752 + (t799 * t890 + t878) * qJD(1);
t1018 = t456 * t890 + t457 * t887;
t1013 = t664 * t887 + t667 * t890;
t1012 = t791 * t889 + t793 * t886;
t1009 = -t214 + t819;
t666 = rSges(4,1) * t1310 - rSges(4,2) * t1315 + t876;
t1007 = t1316 * t1448 + t835;
t781 = qJD(1) * t802;
t1005 = -qJD(1) * t756 - t1160 - t781;
t1004 = -t1222 * t540 + t890 * t213 + t887 * t214 + t1175;
t1003 = t887 * t604 + t890 * t606 + t1105;
t987 = pkin(4) * t1529 - t748 * t763 + t1277;
t986 = -t127 * t1273 + t1351;
t985 = t1274 * t135 + t136 * t426;
t984 = t1417 * t886 + t1171;
t983 = t1414 * t886 + t1171;
t975 = t1182 * t78 + t1391;
t967 = g(1) * t979;
t965 = t1101 + t544;
t624 = t890 * t1473;
t964 = -t1153 * t540 - t763 * t623 - t624 * t764 + t1243 + t831;
t957 = t855 * t540 + t1005 + t694;
t955 = t1284 * t13 + t1387 * t58;
t951 = t614 * t1314 + t889 * t305 + t773 * t971 + t1113;
t950 = t639 * t890 - t640 * t887;
t949 = t213 + t1228;
t947 = t723 + t965;
t946 = -t604 * t855 + t957;
t944 = t604 * t1222 + t890 * t304 + t887 * t305 + t1004;
t938 = t1009 - t305;
t931 = (-t1232 * t886 + t1233 * t889) * qJD(1);
t930 = t1111 * t58 + t1130;
t926 = t949 + t1280;
t704 = t773 * t890;
t924 = t604 * t1153 - t763 * t703 - t704 * t764 + t964;
t913 = t544 * t1218 - t855 * t624 - t763 * t753 - t829 * t887 + t1078;
t152 = t423 * t763 + t427 * t764 + t1242;
t194 = t1664 + t952;
t911 = t152 * t1019 + (t194 * t887 - t195 * t890) * t663;
t766 = t1048 * qJD(2);
t767 = t794 * qJD(2);
t907 = qJD(1) * t789 - qJD(2) * t1012 - t766 * t886 + t767 * t889;
t904 = (t1126 - t1352) * t890 + t986 * t887;
t903 = t606 * t1218 - t855 * t704 - t763 * t774 + t913;
t902 = t1458 * (t1448 * t888 - pkin(2) - t1357);
t900 = -t1451 * t886 + t950 * t889;
t853 = rSges(5,2) * t1308;
t846 = rSges(5,2) * t1311;
t841 = rSges(5,3) * t1313;
t768 = t799 * qJD(2);
t749 = -rSges(5,1) * t1316 + t841;
t731 = t890 * t1120;
t730 = t887 * t1120;
t584 = -t1201 * t890 + t1230;
t583 = -t890 * t991 + t853;
t582 = -t1201 * t887 + t1231;
t581 = -t887 * t991 + t846;
t543 = -rSges(4,1) * t734 - rSges(4,2) * t735;
t538 = -rSges(4,1) * t732 - rSges(4,2) * t733;
t395 = -rSges(6,3) * t886 + t1248;
t379 = -t1011 * t890 + t1318;
t360 = t379 * qJD(1);
t349 = t1013 * qJD(2);
t340 = -rSges(6,3) * t1308 + t1253;
t338 = -rSges(6,3) * t1311 + t1255;
t312 = t1320 + t1322;
t218 = rSges(4,3) * t971 + t1077;
t216 = -rSges(4,3) * t1163 + t1179;
t180 = qJD(1) * t456 + qJDD(1) * t667 - t768 * t871 - t775 * t797 + t1234;
t179 = -t768 * t1219 + t776 * t797 + t1244 * qJDD(1) + (-t457 - t1547) * qJD(1);
t170 = -t1456 * t890 + t907 * t887;
t169 = t1456 * t887 + t907 * t890;
t164 = -qJD(2) * t1014 + t435 * t889 + t439 * t886;
t163 = -qJD(2) * t1015 + t436 * t889 + t440 * t886;
t138 = qJD(2) * t1025 + t360;
t137 = qJD(2) * t1026 + t1208;
t80 = t216 * t855 + t427 * t762 - t455 * t763 - t520 * t663 + t927;
t79 = -t218 * t855 - t423 * t762 - t455 * t764 + t521 * t663 + t914;
t73 = t216 * t764 + t218 * t763 + t423 * t520 - t427 * t521 + t1006;
t53 = t1246 * t520 + t1276 * t763 + t215 * t855 + t426 * t762 + t912;
t52 = -t454 * t764 + t521 * t662 + (-t214 - t217) * t855 + t1274 * t762 + t905;
t30 = t116 * t777 - t178 * t621 + t251 * t603 - t307 * t393 + t896;
t1 = [t1344 / 0.2e1 + t1345 / 0.2e1 + (t1633 * t945 + t1635 * t889 + t1709 * t683 + t1650) * t621 * t1427 + ((t1009 - t1074 + t984 * t1222 + (t1220 * t1417 - t1506) * t887) * t135 + t127 * t1180 - (t127 * t540 + t1126) * t764 - g(1) * t1666 - t984 * t1409 + (t887 * t984 + t1666) * t52 + (t53 - g(2)) * (t965 + t426) + (t949 - t1119 + t1178 + (t1010 - t877) * t1224 - t424 * t855 + t135 - t957) * t136) * m(5) + (-t983 * t1409 + (t79 * t983 + (t1010 - t876) * t1548) * t887 + (-t1077 + t819 + t983 * t1222 + (t1220 * t1414 - t1506) * t887) * t194 + (-g(2) + t80) * (t1101 + t427) + (-t1005 - t1119 + t1179 + t1228 - t1664 + t194) * t195 + (-g(1) + t79) * (t1482 + t883)) * m(4) + (-t1755 + (t1651 + t1716 + t1752) * t622 + (t1633 * t515 + t1652 + t1763 + t1767) * t621 + t1510) * t1440 + ((t1653 + t1719 + t1767) * t622 + (t1633 * t509 + t1654 - t1752) * t621 + t1687) * t1437 + (t83 * (-t1071 + t938) + t84 * (t926 + t1185) + (-t84 * t1202 + (t1168 * t84 + t1390 * t1412) * t889) * qJD(2) + ((t1412 * t886 + t1171) * t1389 + (-t83 * pkin(7) + t1010 * t84) * t887) * qJD(1) + (t249 + t1474) * t29 - g(1) * (t988 + t249) - t967 - (t1630 * t764 + t1109) * t78 - (t1236 * t764 + t1699 - t83 + t946) * t84 + (t30 - g(2)) * (t1168 * t886 + t1265 + t947)) * m(6) + (t1012 + Icges(2,3) + m(2) * (t798 ^ 2 + t800 ^ 2)) * qJDD(1) + t1343 / 0.2e1 + t1565 * t1446 + t1566 * t1444 + t1586 * t1430 + t1355 / 0.2e1 + (t163 + t170 + t138) * t1135 + (t378 + t372) * t1428 + (t1569 + t1570 + (t1631 * t888 + t1632 * t885) * t886 + t1686) * t763 * t1424 + t1656 * t1432 + (t1655 + t1586) * t1431 + t1659 * t1439 + (t1658 + t1509) * t1438 + (-g(1) * (t988 + t1608) - t967 + t71 * (t938 + t1502) + t72 * (t926 + t1501) + (-t72 * t1202 + (t1415 * t71 * t887 + t1169 * t72) * t889) * qJD(2) + (t71 * (t1415 * t886 + t1171) * t890 + (-t71 * pkin(7) + t1010 * t72) * t887) * qJD(1) + (t1608 + t1474) * t14 - t71 * t1668 - t72 * (-t466 + t946) - t58 * t1109 - (-t1284 * t71 + t1608 * t72) * t777 - (t1236 * t72 + t1630 * t58) * t764 + t1503 * t622 + t1661 * (t1169 * t886 + t1468 + t947)) * m(7) + (t164 + t169) * t1136 + (-qJD(2) * t1011 + t766 * t889 + t767 * t886) * qJD(1) + t1346 / 0.2e1 + (-t1208 + ((t1121 * t890 - t1256 + t297) * t890 + (t1121 * t887 + t1122 + t296) * t887) * qJD(2) + t137) * t1137 + t1393 / 0.2e1 + (t379 + t373) * t1429 + t1500 * t1442 + (t360 + ((t295 - t586 + (t634 + t1325) * t890 + t1257) * t890 + t1256 * t887) * qJD(2)) * t1134 + t1353 / 0.2e1 + t1354 / 0.2e1 + t1462 - m(2) * (-g(1) * t798 + g(2) * t800) + t1459 + t1401 / 0.2e1 - t1402 / 0.2e1 - t1394 / 0.2e1 + t1399 / 0.2e1 - t1400 / 0.2e1 + t1397 / 0.2e1 - t1398 / 0.2e1 + (t364 * (t869 + t1229) + (t1332 * t797 - t1330) * qJD(2) + ((-pkin(1) - t799) * t1331 + (t363 * (-rSges(3,3) - pkin(7)) + t364 * t1146) * t887) * qJD(1) - (-qJD(1) * t664 - t1161 - t363 - t781) * t364 + (-g(2) + t180) * (t667 + t804) + (-g(1) + t179) * (t1146 * t887 + t1227 + t883)) * m(3) + t1388 / 0.2e1 + t1499 * t1443; (t194 * t761 + t73 * t1240 + (t194 * t1271 + t73 * t427 + (t1548 + t79) * t1245) * t890 + (qJD(1) * t194 * t663 + t80 * t1245 + t195 * t1271 + t73 * t423) * t887 - g(1) * (t861 + t1230) - g(2) * (t857 + t1231) - g(3) * (t666 + t1481) - (-pkin(2) - t1403) * t1457 - t194 * (-t582 * t855 - t666 * t764 + t989) - t195 * (t584 * t855 - t666 * t763 + t1078) - ((-t194 * t423 + t195 * t427) * t886 + t911 * t889) * qJD(3) + (t1175 + (qJD(1) * t423 + t216) * t890 + (t218 + (-t427 - t758) * qJD(1)) * t887 - t582 * t763 - t584 * t764 - t1243) * t152) * m(4) + ((qJD(2) * t1018 + t664 * t775 - t667 * t776) * t1013 + t349 * ((t664 * t890 - t667 * t887) * qJD(1) + t1018) + t1024 * t768 + (-t179 * t890 - t180 * t887 + (-t364 * t890 + t1332) * qJD(1)) * t797 + g(1) * t754 + g(2) * t752 - g(3) * t799 - (t363 * t752 - t1330) * qJD(1) - (t349 * (-t752 * t887 - t754 * t890) + t1024 * t799) * qJD(2)) * m(3) + qJD(1) * (-t163 * t890 + t164 * t887 + (t372 * t887 + t373 * t890) * qJD(1)) / 0.2e1 + (-t84 * (t251 * t783 + t340 * t777 - t393 * t731 - t395 * t621 + t903) - t78 * (-t249 * t731 - t251 * t730 + t338 * t621 + t340 * t622 + t924) + t20 * t1003 + t78 * t944 + (t29 * t1107 + t20 * t251 + t78 * t116 + (t1107 * t84 - t1392) * qJD(1)) * t890 + (t30 * t1107 + t84 * t1115 + (t1391 + t78 * (-t758 + t1182)) * qJD(1) + t1068) * t887 - g(1) * (t861 + t1253) - g(2) * (t857 + t1255) - g(3) * (t1055 + t1248) - (g(3) * t1413 + t902) * t886 + (-g(1) * t1168 - t1407 * t1413 - (t1123 * t84 - t1124 * t78) * qJD(3)) * t889 + (t1115 * t890 - t249 * t783 + t338 * t777 - t393 * t730 + t395 * t622 + t1517) * t83) * m(6) + t1043 * t1441 + ((t1232 * t889 + t1233 * t886) * qJD(1) + (t1451 * t889 + t950 * t886) * qJD(2)) * t1405 + (-t72 * (qJD(6) * t608 + t903) - t58 * (-qJD(6) * t684 + t924) - t1532 * t783 + t1528 * t731 - t1531 * t730 - (t1267 * t72 - t1282 * t58) * t621 - g(1) * (t861 + t1470) - g(2) * (t857 + t1469) - g(3) * (t1055 + t1471) - (g(3) * t1416 + t902) * t886 + t13 * t1003 + t58 * t944 + (t14 * t1057 + (t1057 * t72 - t1131) * qJD(1) + t955) * t890 + (t15 * t1057 + t72 * t1058 + (t1130 + t58 * (-t758 + t1111)) * qJD(1) + t956) * t887 + (-(t1123 * t72 - t1124 * t58) * qJD(3) - g(1) * t1169 - t1407 * t1416) * t889 + t1518 * (-rSges(7,2) * t1308 + t1470) + (-qJD(6) * t610 + t1058 * t890 - t1267 * t622 - t1282 * t777 + t1517) * t71) * m(7) + ((t1308 * t1639 + t1500 * t886) * qJD(3) + ((qJD(3) * t1640 + t1549) * t889 + t1551) * t887 + (t1552 * t733 + t1553 * t732) * t855 + (t1555 * t733 - t1557 * t732) * t764 + (-t1554 * t733 + t1556 * t732) * t763) * t1430 + ((t1311 * t1638 + t1499 * t886) * qJD(3) + ((qJD(3) * t1637 + t1549) * t889 + t1551) * t890 + (t1552 * t735 + t1553 * t734) * t855 + (t1555 * t735 - t1557 * t734) * t764 + (-t1554 * t735 + t1556 * t734) * t763) * t1433 + ((-t1219 * t1318 - t1225) * t890 + (t931 + (t1317 * t890 + t900) * qJD(2)) * t887) * t1134 + ((-t1317 * t871 + t1225) * t887 + (t931 + (t1318 * t887 + t900) * qJD(2)) * t890) * t1137 + t603 * t1053 / 0.2e1 + (t1550 * t887 + t1566 * t783 + (-t1486 * t609 + t1487 * t608 + t1558 * t509 + t1559 * t508) * t777 + t1653 * t731 + t1654 * t730 + (t1496 * t609 - t1561 * t509 - t1563 * t508 - t1709 * t608) * t622 + (-t1495 * t609 + t1497 * t608 + t1560 * t509 + t1562 * t508) * t621) * t1437 + (t1550 * t890 + t1565 * t783 + (-t1486 * t611 + t1487 * t610 + t1558 * t515 - t1559 * t976) * t777 + t1651 * t731 + t1652 * t730 + (t1496 * t611 - t1561 * t515 + t1563 * t976 - t1709 * t610) * t622 + (-t1495 * t611 + t1497 * t610 + t1560 * t515 - t1562 * t976) * t621) * t1440 - (qJD(1) * t170 + qJD(2) * t1040 + qJDD(1) * t378 + t294 * t776 + t295 * t775 + t1601 + t1604) * t890 / 0.2e1 + (qJD(1) * t169 + qJD(2) * t1041 + qJDD(1) * t379 + t296 * t776 + t297 * t775 + t1602 + t1605) * t887 / 0.2e1 + (qJD(1) * t1538 + t1595 * t887 - t1596 * t890) * t777 / 0.2e1 + (qJD(1) * t1535 + t1597 * t887 - t1598 * t890) * t1438 + (qJD(1) * t1537 + t1599 * t887 - t1600 * t890) * t1439 + (qJD(1) * t1465 + t1588 * t887 - t1589 * t890) * t1423 + (qJD(1) * t1463 + t1590 * t887 - t1591 * t890) * t1431 + (qJD(1) * t1464 + t1592 * t887 - t1593 * t890) * t1432 + (t138 + t1586 + t1509) * t1140 - t1509 * t731 / 0.2e1 + (t137 + t1587 + t1510) * t1141 - t1510 * t730 / 0.2e1 - t1585 * t1218 / 0.2e1 + t783 * t1660 + ((qJD(3) * t1465 - t1671) * t889 + ((t1552 * t888 + t1553 * t885 + t1678) * t855 + (t1555 * t888 - t1557 * t885 - t1725) * t764 + (-t1554 * t888 + t1556 * t885 + t1680) * t763 + t1488 * qJD(3)) * t886) * t1424 + (t1564 * t783 + (t1486 * t685 - t1487 * t684 + t1558 * t945 - t1559 * t683 + t1682 * t889 - t1727 * t886) * t777 + t1688 * t731 + t1650 * t730 + (-t1496 * t685 - t1561 * t945 + t1563 * t683 - t1635 * t886 - t1684 * t889 + t1709 * t684) * t622 + (t1495 * t685 - t1497 * t684 + t1560 * t945 - t1562 * t683 + t1683 * t889 - t1710 * t886) * t621) * t1427 + (-g(1) * (t853 + t861) - g(2) * (t846 + t857) - g(3) * (t1102 + t665) - (-pkin(2) + t1418 * t888 + (-rSges(5,3) - qJ(4)) * t885) * t1457 + t39 * t1105 + t127 * t1004 + (t52 * t1173 + t39 * t426 + t127 * t215 + (t1173 * t136 - t1352) * qJD(1)) * t890 + (t53 * t1173 + t136 * t1176 + (t1351 + t127 * (-t758 - t1273)) * qJD(1) + t1052) * t887 - t136 * (t583 * t855 - t665 * t763 + t913) - t127 * (t581 * t763 + t583 * t764 + t964) - (t886 * t985 + t889 * t904) * qJD(3) + (t1176 * t890 + t581 * t855 + t665 * t764 + t1626) * t135) * m(5) + ((t294 * t887 + t295 * t890) * qJD(1) + t1040) * t1135 + ((t296 * t887 + t297 * t890) * qJD(1) + t1041) * t1136 + qJDD(1) * (-t372 * t890 + t373 * t887) / 0.2e1 - (t1586 * t890 + t1587 * t887) * t1215 / 0.2e1 + t1536 * t1446 - t1539 * t521 / 0.2e1 - t1540 * t520 / 0.2e1 - t1541 * t762 / 0.2e1 + t1534 * t1444 + t1026 * t1428 + t1025 * t1429; (t1464 * t886 - t1499 * t889) * t1443 + (t1463 * t886 - t1500 * t889) * t1442 - (t1345 + t1346 + t1397 - t1398 + t1343 + t1344 + t1393 - t1394 + t1462) * t889 / 0.2e1 + (-t135 * (t1262 * t855 - t749 * t764 + t1239) - t136 * (t542 * t855 + (-t748 - t749) * t763 + t1277) - t127 * (t1259 * t764 + t537 * t763 + t1281) + t52 * t1263 + t135 * t1113 + t136 * t1264 - t39 * t441 + t127 * t1297 + (qJD(2) * t904 - t1273 * t53 - t1296 * t136 + t135 * t217 - t424 * t52) * t889 + (t985 * qJD(2) + (qJD(1) * t986 + t1246 * t53 + t1276 * t136 + t1052) * t890 + (t52 * t662 + t135 * t454 - t39 * t1273 - t127 * t1296 + (t127 * t1274 + t136 * t662) * qJD(1)) * t887) * t886 - g(1) * t1259 + g(2) * t1262 - g(3) * (t1316 * t1418 + t835 + t841)) * m(5) + (t1465 * t886 - t1488 * t889) * t762 / 0.2e1 + (-g(1) * (t1080 - t289) - g(2) * (t1082 + t278) - g(3) * (t1007 + t460) + t29 * t1104 + t83 * t951 + t84 * t1106 + t20 * t1272 + t78 * t1114 + (t30 * t1182 + t84 * t1187 + ((t1177 * t84 - t1392) * t890 + t975 * t887) * qJD(2) + t1067) * t889 + ((t1183 * t83 + t84 * t251) * qJD(2) + (qJD(1) * t975 + t1177 * t30 + t1184 * t84 + t1068) * t890 + (t29 * t393 + t83 * t178 + t20 * t1182 + t78 * t1187 + (t1183 * t78 + t84 * t393) * qJD(1)) * t887) * t886 - t83 * (t1533 - t1698) - t84 * (-t1663 + t987) - t78 * (t1080 * t764 + t1181 - t1697)) * m(6) + ((qJD(2) * t1465 - t1641) * t889 + (qJD(1) * t1541 + t1488 * qJD(2) + t1588 * t890 + t1589 * t887) * t886) * t1423 + (-t1607 * t1314 + t1760) * t1437 + (-t1607 * t1312 + t1761) * t1440 + (t1628 * t889 + (t1479 * t888 + t1480 * t885) * t886) * t1424 + ((qJD(2) * t1463 - t1655) * t889 + (qJD(1) * t1539 + t1500 * qJD(2) + t1590 * t890 + t1591 * t887) * t886) * t1431 + ((qJD(2) * t1464 - t1656) * t889 + (qJD(1) * t1540 + t1499 * qJD(2) + t1592 * t890 + t1593 * t887) * t886) * t1432 + t1602 * t1312 / 0.2e1 + t1601 * t1314 / 0.2e1 + t1585 * t1221 / 0.2e1 + (t1134 * t889 + t1142 * t887) * t1586 + (t1136 * t889 + t1140 * t886) * t1587 + ((qJD(2) * t911 + t194 * t218 - t195 * t216 + t79 * t423 - t80 * t427) * t889 + (t194 * (-qJD(2) * t423 + t455 * t887) + t195 * (qJD(2) * t427 - t455 * t890) + t73 * t1019 + t152 * (-t1222 * t427 - t1224 * t423 - t216 * t887 + t218 * t890) + (t79 * t887 - t80 * t890 + (t194 * t890 + t195 * t887) * qJD(1)) * t663) * t886 - g(1) * t543 - g(2) * t538 - g(3) * t750 - t194 * (-t538 * t855 - t750 * t764) - t195 * (t543 * t855 - t750 * t763) - t152 * (t538 * t763 + t543 * t764)) * m(4) + (-t1476 * t887 + t1479 * t733 + t1480 * t732) * t1430 + (-t1476 * t890 + t1479 * t735 + t1480 * t734) * t1433 + (-g(1) * (t1080 - t1285) - g(2) * (t1082 - t1288) - g(3) * (t1007 + t1269) + t14 * t1104 + t71 * t951 + t72 * t1106 + t13 * t1272 + t58 * t1114 + (t15 * t1111 + t72 * t1118 + ((t1108 * t72 - t1131) * t890 + t930 * t887) * qJD(2) + t1452) * t889 + ((t1112 * t71 + t1129) * qJD(2) + (qJD(1) * t930 + t1108 * t15 + t1116 * t72 + t956) * t890 + (t13 * t1111 + t58 * t1118 + (t1112 * t58 + t1503) * qJD(1) + t1453) * t887) * t886 - t71 * (-qJD(6) * t515 + t1533) - t72 * (-qJD(6) * t509 + t987) - t58 * (-pkin(4) * t1320 - qJD(6) * t945 + t541 * t764 + t1181) - t1713) * m(7) - t1766; (-m(5) - m(6) - m(7)) * (g(1) * t734 + g(2) * t732 + g(3) * t1316) + m(5) * (t127 * t968 + t1316 * t39 - t135 * t374 + t136 * t376 + t52 * t734 + t53 * t732) + m(6) * (t1316 * t20 + t29 * t734 + t30 * t732 - t374 * t83 + t376 * t84 + t78 * t968) + m(7) * (t13 * t1316 + t14 * t734 + t15 * t732 - t374 * t71 + t376 * t72 + t58 * t968) - m(5) * (t127 * t312 - t135 * t998 - t136 * t1529) - m(6) * (-t1529 * t84 + t312 * t78 - t83 * t998) - m(7) * (-t1529 * t72 + t312 * t58 - t71 * t998); (t1475 * t890 - t1761) * t1440 + (t1475 * t887 - t1760) * t1437 + (-g(1) * t1285 - g(2) * t1288 + g(3) * t1269 + (t15 * t1284 + t72 * t1387 + (t1528 * t890 - t1531 * t887) * qJD(2) - t1452) * t889 + (-t1532 * qJD(2) + (-qJD(1) * t1531 + t1268 * t15 + t1304 * t72 - t956) * t890 + (-qJD(1) * t1528 - t1453 + t955) * t887) * t886 - (t509 * t72 + t515 * t71 + t58 * t945) * qJD(6) + t1713) * m(7) + (-g(1) * t289 + g(2) * t278 + g(3) * t460 + (t84 * t116 + t30 * t251 + (t78 * t1027 + (t84 * t890 - t1390) * t393) * qJD(2) - t1067) * t889 + (t83 * (-qJD(2) * t249 - t178 * t887) + t84 * (-qJD(2) * t251 + t178 * t890) + t20 * t1027 + t78 * (t116 * t887 - t118 * t890 + t1222 * t251 - t1224 * t249) + (-t29 * t887 + t30 * t890 + (-t84 * t887 - t1389) * qJD(1)) * t393) * t886 - t83 * t1698 - t84 * t1663 - t78 * t1697) * m(6) + t1766; (t165 * t71 + t167 * t72 + t310 * t58 - (t621 * t72 + t622 * t71 - g(3) + t13) * t683 - (-g(1) + t14 + t1518) * t976 + (-t58 * t621 + t71 * t777 + t1661) * t508) * m(7);];
tau  = t1;
