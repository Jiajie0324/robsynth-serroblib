% Calculate vector of inverse dynamics joint torques for
% S6RRPRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRPR2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRPR2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:12:05
% EndTime: 2019-03-09 10:13:53
% DurationCPUTime: 95.00s
% Computational Cost: add. (46513->1503), mult. (47599->1844), div. (0->0), fcn. (41200->10), ass. (0->752)
t1406 = Icges(3,3) + Icges(4,3);
t1405 = Icges(6,4) - Icges(5,5);
t1404 = Icges(6,5) - Icges(5,6);
t710 = qJ(2) + pkin(10);
t676 = sin(t710);
t677 = cos(t710);
t715 = sin(qJ(2));
t718 = cos(qJ(2));
t1372 = Icges(3,5) * t718 + Icges(4,5) * t677 - Icges(3,6) * t715 - Icges(4,6) * t676;
t1403 = Icges(6,1) + Icges(5,3);
t681 = qJ(4) + t710;
t661 = cos(t681);
t644 = Icges(5,4) * t661;
t660 = sin(t681);
t520 = Icges(5,1) * t660 + t644;
t1142 = Icges(6,6) * t661;
t854 = Icges(6,2) * t660 + t1142;
t1396 = t854 + t520;
t719 = cos(qJ(1));
t1402 = t1406 * t719;
t716 = sin(qJ(1));
t1099 = t661 * t716;
t1102 = t660 * t716;
t1144 = Icges(5,6) * t719;
t390 = Icges(5,4) * t1099 - Icges(5,2) * t1102 - t1144;
t1151 = Icges(6,5) * t719;
t395 = Icges(6,6) * t1099 - Icges(6,3) * t1102 + t1151;
t1401 = t390 + t395;
t862 = -Icges(5,2) * t660 + t644;
t391 = Icges(5,6) * t716 + t719 * t862;
t853 = -Icges(6,3) * t660 + t1142;
t394 = Icges(6,5) * t716 - t719 * t853;
t1393 = t391 - t394;
t1152 = Icges(5,5) * t719;
t598 = Icges(5,4) * t1102;
t392 = Icges(5,1) * t1099 - t1152 - t598;
t1158 = Icges(6,4) * t719;
t593 = Icges(6,6) * t1102;
t397 = Icges(6,2) * t1099 + t1158 - t593;
t1375 = t392 + t397;
t1160 = Icges(5,4) * t660;
t521 = Icges(5,1) * t661 - t1160;
t393 = Icges(5,5) * t716 + t521 * t719;
t1097 = t661 * t719;
t1159 = Icges(6,4) * t716;
t1101 = t660 * t719;
t594 = Icges(6,6) * t1101;
t396 = -Icges(6,2) * t1097 + t1159 + t594;
t1400 = t393 - t396;
t1086 = t716 * t718;
t1089 = t715 * t716;
t1094 = t677 * t716;
t1096 = t676 * t716;
t1374 = -Icges(3,5) * t1086 - Icges(4,5) * t1094 + Icges(3,6) * t1089 + Icges(4,6) * t1096 + t1402;
t1383 = t1372 * t719 + t1406 * t716;
t1373 = t1404 * t660 - t1405 * t661;
t1143 = Icges(6,6) * t660;
t855 = Icges(6,2) * t661 - t1143;
t1399 = -t521 - t855;
t518 = Icges(5,2) * t661 + t1160;
t852 = Icges(6,3) * t661 + t1143;
t1398 = t852 + t518;
t1397 = t853 + t862;
t1145 = Icges(4,6) * t719;
t418 = Icges(4,4) * t1094 - Icges(4,2) * t1096 - t1145;
t1146 = Icges(3,6) * t719;
t483 = Icges(3,4) * t1086 - Icges(3,2) * t1089 - t1146;
t1395 = t418 * t676 + t483 * t715;
t1153 = Icges(4,5) * t719;
t630 = Icges(4,4) * t1096;
t420 = Icges(4,1) * t1094 - t1153 - t630;
t1154 = Icges(3,5) * t719;
t653 = Icges(3,4) * t1089;
t485 = Icges(3,1) * t1086 - t1154 - t653;
t1341 = -t420 * t677 - t485 * t718 + t1395;
t1303 = -t1341 * t716 + t1374 * t719;
t1161 = Icges(4,4) * t676;
t548 = Icges(4,1) * t677 - t1161;
t421 = Icges(4,5) * t716 + t548 * t719;
t1162 = Icges(3,4) * t715;
t623 = Icges(3,1) * t718 - t1162;
t486 = Icges(3,5) * t716 + t623 * t719;
t1394 = -t486 * t1086 - t421 * t1094;
t514 = Icges(5,5) * t660 + Icges(5,6) * t661;
t860 = Icges(6,4) * t660 + Icges(6,5) * t661;
t1392 = t514 - t860;
t1391 = Icges(3,5) * t715 + Icges(4,5) * t676 + Icges(3,6) * t718 + Icges(4,6) * t677;
t1390 = t518 * t719 - t1400;
t1389 = t1403 * t719;
t1388 = -t1396 - t1397;
t1387 = -t1398 - t1399;
t1386 = t1396 * t716 + t1401;
t1385 = -t1396 * t719 - t1393;
t1376 = t1099 * t1405 - t1404 * t1102 + t1389;
t1384 = t1373 * t719 + t1403 * t716;
t545 = Icges(4,2) * t677 + t1161;
t657 = Icges(4,4) * t677;
t547 = Icges(4,1) * t676 + t657;
t620 = Icges(3,2) * t718 + t1162;
t695 = Icges(3,4) * t718;
t622 = Icges(3,1) * t715 + t695;
t1370 = t545 * t676 - t547 * t677 + t620 * t715 - t622 * t718;
t821 = t518 * t660 - t520 * t661;
t1382 = -t660 * t852 + t661 * t854 - t821;
t1367 = -t1375 * t661 + t1401 * t660;
t1381 = t1383 * t719 + t1394;
t1084 = t718 * t719;
t1093 = t677 * t719;
t1238 = -t486 * t1084 - t421 * t1093 - t1383 * t716;
t1380 = -t485 * t1084 - t420 * t1093 + t1374 * t716;
t863 = -Icges(4,2) * t676 + t657;
t419 = Icges(4,6) * t716 + t719 * t863;
t864 = -Icges(3,2) * t715 + t695;
t484 = Icges(3,6) * t716 + t719 * t864;
t1379 = t419 * t676 + t484 * t715;
t1302 = -t1089 * t484 - t1096 * t419 - t1381;
t1088 = t715 * t719;
t1095 = t676 * t719;
t1301 = -t1088 * t483 - t1095 * t418 - t1380;
t1300 = -t1088 * t484 - t1095 * t419 - t1238;
t1294 = t418 * t677 + t420 * t676 + t483 * t718 + t485 * t715;
t1293 = t419 * t677 + t421 * t676 + t484 * t718 + t486 * t715;
t1377 = -t393 * t1099 - t394 * t1102;
t1371 = t1391 * qJD(2);
t1369 = -t545 * t677 - t547 * t676 - t620 * t718 - t622 * t715;
t1368 = t421 * t677 + t486 * t718 - t1379;
t709 = qJD(2) + qJD(4);
t1366 = t1387 * t709;
t1365 = t1388 * t709;
t1364 = t1385 * t709 + (t1399 * t716 + t1152 - t1158) * qJD(1);
t1363 = t1386 * t709 + (-t719 * t855 + t1159 - t393) * qJD(1);
t800 = t709 * t852;
t1362 = t719 * t800 + t1390 * t709 + (t1397 * t716 - t1144 + t1151) * qJD(1);
t1092 = t709 * t716;
t1361 = qJD(1) * t1393 - t1092 * t518 + t1375 * t709 - t716 * t800;
t1360 = t1392 * t716;
t1111 = t514 * t719;
t453 = t860 * t719;
t1359 = -t453 + t1111;
t1264 = t1391 * t719;
t1263 = t1391 * t716;
t1358 = t391 * t660 + t396 * t661;
t174 = -t716 * t821 - t1111;
t177 = -t1099 * t854 + t1102 * t852 - t453;
t1357 = t174 - t177;
t1299 = t1382 * t719 + t1360;
t1296 = -t1370 * t716 - t1264;
t1295 = -t1370 * t719 + t1263;
t1356 = t1367 * t716;
t1355 = t1384 * t719 + t1377;
t1354 = t1383 * qJD(1);
t1353 = t1384 * qJD(1);
t1237 = -t393 * t1097 - t394 * t1101 - t1384 * t716;
t1352 = -t392 * t1097 + t395 * t1101 + t1376 * t716;
t1351 = t1376 * t719;
t717 = cos(qJ(6));
t1087 = t716 * t717;
t714 = sin(qJ(6));
t1090 = t714 * t719;
t499 = t1087 * t660 + t1090;
t1085 = t717 * t719;
t1091 = t714 * t716;
t500 = -t1091 * t660 + t1085;
t1044 = t500 * rSges(7,1) - t499 * rSges(7,2);
t256 = -rSges(7,3) * t1099 + t1044;
t1183 = rSges(7,1) * t714;
t880 = rSges(7,2) * t717 + t1183;
t362 = rSges(7,3) * t660 - t661 * t880;
t617 = t709 * t719;
t999 = qJD(6) * t716;
t471 = -t661 * t999 + t617;
t1002 = qJD(6) * t660;
t612 = qJD(1) + t1002;
t1350 = -t256 * t612 + t362 * t471;
t1349 = t719 ^ 2;
t1307 = t1351 - t1356;
t1306 = -t1099 * t396 - t1102 * t391 - t1355;
t1305 = t1097 * t397 - t1101 * t390 - t1352;
t1304 = -t1097 * t396 - t1101 * t391 - t1237;
t507 = t863 * qJD(2);
t508 = t548 * qJD(2);
t564 = t864 * qJD(2);
t565 = t623 * qJD(2);
t1348 = qJD(1) * t1391 + t1369 * qJD(2) - t507 * t676 + t508 * t677 - t564 * t715 + t565 * t718;
t791 = qJD(2) * t545;
t262 = -t719 * t791 + (-t716 * t863 + t1145) * qJD(1);
t793 = qJD(2) * t547;
t264 = -t719 * t793 + (-t548 * t716 + t1153) * qJD(1);
t792 = qJD(2) * t620;
t305 = -t719 * t792 + (-t716 * t864 + t1146) * qJD(1);
t794 = qJD(2) * t622;
t307 = -t719 * t794 + (-t623 * t716 + t1154) * qJD(1);
t1347 = -qJD(2) * t1293 - t262 * t676 + t264 * t677 - t305 * t715 + t307 * t718 + t1354;
t263 = qJD(1) * t419 - t716 * t791;
t265 = qJD(1) * t421 - t716 * t793;
t306 = qJD(1) * t484 - t716 * t792;
t308 = qJD(1) * t486 - t716 * t794;
t1346 = qJD(1) * t1374 + qJD(2) * t1294 + t263 * t676 - t265 * t677 + t306 * t715 - t308 * t718;
t1345 = qJD(1) * t1392 + t1365 * t660 + t1366 * t661;
t1344 = qJD(1) * t1376 + t1361 * t660 + t1363 * t661;
t1343 = t1362 * t660 + t1364 * t661 + t1353;
t685 = qJD(2) * t716;
t616 = qJD(4) * t716 + t685;
t1342 = qJD(1) * t1387 + t1385 * t616 + t1386 * t617;
t1340 = t1300 * t716 - t1301 * t719;
t1339 = t1302 * t716 - t1303 * t719;
t1338 = (-t593 - t598 + (-Icges(5,2) - Icges(6,3)) * t1099 + t1375) * t617 + (Icges(6,3) * t1097 + t1390 + t594) * t616 + t1388 * qJD(1);
t1337 = t1370 * qJD(1) + qJD(2) * t1372;
t1336 = qJD(1) * t1382 - t1373 * t709;
t1335 = qJD(1) * t1341 - t1371 * t716 + t1354;
t1334 = -t1371 * t719 + (-t1372 * t716 - t1368 + t1402) * qJD(1);
t1333 = t1359 * t709 + (t1373 * t716 + t393 * t661 + t394 * t660 - t1358 - t1389) * qJD(1);
t1332 = qJD(1) * t1367 - t1360 * t709 + t1353;
t705 = t718 * pkin(2);
t669 = t705 + pkin(1);
t1185 = pkin(1) - t669;
t703 = t716 * pkin(7);
t986 = pkin(2) * t1089;
t640 = qJD(2) * t986;
t684 = qJD(3) * t719;
t1019 = t640 + t684;
t1007 = qJD(1) * t716;
t713 = -qJ(3) - pkin(7);
t650 = t713 * t1007;
t957 = t650 + t1019;
t291 = (-t1185 * t719 - t703) * qJD(1) - t957;
t634 = t719 * pkin(1) + t703;
t572 = t634 * qJD(1);
t1077 = -t291 - t572;
t720 = qJD(2) ^ 2;
t1083 = t718 * t720;
t658 = t677 * rSges(4,1);
t1239 = -rSges(4,2) * t676 + t658;
t1181 = rSges(4,2) * t677;
t553 = rSges(4,1) * t676 + t1181;
t493 = t553 * t716;
t697 = t716 * rSges(4,3);
t267 = -qJD(2) * t493 + (t1239 * t719 + t697) * qJD(1);
t509 = t1239 * qJD(2);
t993 = qJD(1) * qJD(2);
t666 = t716 * t993;
t576 = -qJDD(2) * t719 + t666;
t1193 = pkin(2) * t715;
t992 = qJD(1) * qJD(3);
t963 = qJDD(3) * t716 + t576 * t1193 + t719 * t992;
t668 = t719 * t713;
t1021 = t716 * t669 + t668;
t706 = t719 * pkin(7);
t633 = pkin(1) * t716 - t706;
t413 = t633 - t1021;
t1053 = t413 - t633;
t433 = rSges(4,1) * t1094 - rSges(4,2) * t1096 - t719 * rSges(4,3);
t965 = -t433 + t1053;
t89 = t553 * t576 + (-pkin(2) * t1083 - qJD(2) * t509) * t719 + t965 * qJDD(1) + (-t267 + t1077) * qJD(1) + t963;
t1331 = -g(1) + t89;
t1330 = t1299 * qJD(1);
t1329 = t1295 * qJD(1);
t532 = t719 * pkin(5) - pkin(9) * t1099;
t1328 = -t256 - t532;
t1327 = t1296 * qJD(1);
t1326 = t1357 * qJD(1);
t708 = -pkin(8) + t713;
t1258 = t719 * t708;
t659 = pkin(3) * t677;
t1247 = -t705 - t659;
t566 = pkin(1) - t1247;
t1035 = -t716 * t566 - t1258;
t1325 = t532 + t1035 + t1044;
t497 = t1085 * t660 - t1091;
t498 = t1090 * t660 + t1087;
t246 = Icges(7,5) * t498 + Icges(7,6) * t497 + Icges(7,3) * t1097;
t1157 = Icges(7,4) * t498;
t249 = Icges(7,2) * t497 + Icges(7,6) * t1097 + t1157;
t472 = Icges(7,4) * t497;
t252 = Icges(7,1) * t498 + Icges(7,5) * t1097 + t472;
t106 = t246 * t1097 + t497 * t249 + t498 * t252;
t248 = -Icges(7,5) * t500 + Icges(7,6) * t499 + Icges(7,3) * t1099;
t474 = Icges(7,4) * t500;
t251 = Icges(7,2) * t499 + Icges(7,6) * t1099 - t474;
t473 = Icges(7,4) * t499;
t253 = Icges(7,1) * t500 - Icges(7,5) * t1099 - t473;
t107 = t248 * t1097 + t497 * t251 - t253 * t498;
t856 = Icges(7,5) * t714 + Icges(7,6) * t717;
t761 = -Icges(7,3) * t660 + t661 * t856;
t1156 = Icges(7,4) * t714;
t858 = Icges(7,2) * t717 + t1156;
t762 = -Icges(7,6) * t660 + t661 * t858;
t1155 = Icges(7,4) * t717;
t865 = Icges(7,1) * t714 + t1155;
t763 = -Icges(7,5) * t660 + t661 * t865;
t138 = -t1097 * t761 - t497 * t762 - t498 * t763;
t998 = qJD(6) * t719;
t470 = t661 * t998 + t616;
t36 = t106 * t470 - t107 * t471 + t138 * t612;
t108 = t246 * t1099 + t499 * t249 - t500 * t252;
t109 = t1099 * t248 + t251 * t499 + t253 * t500;
t139 = -t1099 * t761 - t499 * t762 + t500 * t763;
t37 = t108 * t470 - t109 * t471 + t139 * t612;
t838 = t251 * t717 - t253 * t714;
t117 = t248 * t660 - t661 * t838;
t1324 = -t1332 * t716 + t1344 * t719;
t1323 = -t1333 * t716 + t1343 * t719;
t1322 = t1332 * t719 + t1344 * t716;
t1321 = t1333 * t719 + t1343 * t716;
t1320 = t1306 * t616 - t1307 * t617 + t1326;
t1319 = t1304 * t616 - t1305 * t617 + t1330;
t1318 = -t1336 * t716 + t1345 * t719;
t1317 = t1336 * t719 + t1345 * t716;
t1316 = qJD(2) * t1339 + t1327;
t1315 = qJD(2) * t1340 + t1329;
t1313 = -t1361 * t661 + t1363 * t660;
t1312 = -t1362 * t661 + t1364 * t660;
t1311 = t1337 * t716 + t1348 * t719;
t1310 = -t1337 * t719 + t1348 * t716;
t1309 = qJD(2) * t1341 - t263 * t677 - t265 * t676 - t306 * t718 - t308 * t715;
t1308 = qJD(2) * t1368 + t262 * t677 + t264 * t676 + t305 * t718 + t307 * t715;
t1298 = t1375 * t660 + t1401 * t661;
t1297 = t1393 * t661 + t1400 * t660;
t255 = t498 * rSges(7,1) + t497 * rSges(7,2) + rSges(7,3) * t1097;
t531 = t716 * pkin(5) + pkin(9) * t1097;
t1292 = t255 + t531;
t643 = t660 * qJ(5);
t1248 = t661 * pkin(4) + t643;
t1003 = qJD(5) * t719;
t587 = t661 * t1003;
t1026 = -t1248 * t617 + t587;
t1178 = rSges(6,2) * t661;
t645 = t660 * rSges(6,3);
t1241 = t645 - t1178;
t1179 = rSges(6,2) * t660;
t878 = rSges(6,3) * t661 + t1179;
t1286 = -t878 * t1007 + t1241 * t617 - t1026;
t1283 = t1338 * t660 + t1342 * t661;
t1220 = (-t545 * t719 + t421) * t716 - (-Icges(4,2) * t1094 + t420 - t630) * t719;
t1221 = (-t620 * t719 + t486) * t716 - (-Icges(3,2) * t1086 + t485 - t653) * t719;
t772 = t483 * t719 - t484 * t716;
t773 = t418 * t719 - t419 * t716;
t1282 = -t1220 * t676 - t1221 * t715 + t773 * t677 + t772 * t718;
t1022 = t622 + t864;
t1023 = -t620 + t623;
t1033 = t547 + t863;
t1034 = -t545 + t548;
t1281 = (-t1022 * t715 + t1023 * t718 - t1033 * t676 + t1034 * t677) * qJD(1);
t1280 = qJD(1) * t1373 - t1359 * t616 + t1360 * t617;
t1277 = t1335 * t1349 + (t1347 * t716 + (-t1334 + t1346) * t719) * t716;
t1276 = t1346 * t1349 + (t1334 * t716 + (-t1335 + t1347) * t719) * t716;
t954 = t661 * t1007;
t976 = t660 * t617;
t1275 = t954 + t976;
t951 = t715 * t1007;
t641 = pkin(2) * t951;
t952 = t676 * t1007;
t1024 = pkin(3) * t952 + t641;
t522 = pkin(4) * t660 - qJ(5) * t661;
t468 = t522 * t1007;
t1274 = t468 + t1024 - t641;
t1098 = t661 * t717;
t1273 = rSges(7,2) * t1098 + t661 * t1183;
t1100 = t661 * t709;
t1006 = qJD(1) * t719;
t953 = t661 * t1006;
t977 = t660 * t1092;
t786 = t953 - t977;
t900 = qJD(1) * t660 + qJD(6);
t813 = t900 * t719;
t814 = t612 * t714;
t239 = t717 * t813 + (t1098 * t709 - t814) * t716;
t815 = t717 * t612;
t975 = t661 * t1092;
t240 = t716 * t815 + (t813 + t975) * t714;
t883 = rSges(7,1) * t240 + rSges(7,2) * t239;
t135 = rSges(7,3) * t786 + t883;
t1103 = t660 * t709;
t1176 = rSges(7,3) * t709;
t881 = -rSges(7,1) * t717 + rSges(7,2) * t714;
t202 = t880 * t1103 + (qJD(6) * t881 + t1176) * t661;
t1000 = qJD(6) * t709;
t1001 = qJD(6) * t661;
t991 = qJD(1) * qJD(4);
t1016 = t716 * t991 + t666;
t987 = -qJDD(2) - qJDD(4);
t989 = qJDD(6) * t661;
t216 = (-t1000 * t660 + t989) * t716 + (qJD(1) * t1001 + t987) * t719 + t1016;
t346 = pkin(5) * t1007 + pkin(9) * t786;
t440 = t719 * t987 + t1016;
t441 = qJDD(6) * t660 + t1000 * t661 + qJDD(1);
t348 = qJ(5) * t1103 + (pkin(4) * t709 - qJD(5)) * t661;
t1192 = pkin(3) * t676;
t754 = t1247 * t719 * t720 + t576 * t1192 + t963;
t990 = qJDD(5) * t660;
t733 = -t617 * t348 + t440 * t522 + t709 * t587 + t719 * t990 + t754;
t558 = pkin(4) * t977;
t1004 = qJD(5) * t716;
t945 = t660 * t1004;
t955 = t660 * t1006;
t206 = pkin(4) * t953 + t945 - t558 + (t955 + t975) * qJ(5);
t1028 = t566 - t669;
t579 = -t1192 - t1193;
t551 = t579 * qJD(2);
t639 = t708 * t1007;
t905 = t551 * t716 - t639;
t188 = t1006 * t1028 + t640 + t650 + t905;
t973 = -t188 + t1077;
t779 = -t206 - t945 + t973;
t462 = t1248 * t716;
t318 = t1021 + t1035;
t968 = t318 + t1053;
t895 = -t462 + t968;
t871 = t532 + t895;
t20 = t733 + t216 * t362 + t871 * qJDD(1) + (-t346 + t779) * qJD(1) + (-t1100 * t617 + t440 * t660) * pkin(9) + t441 * t256 - t471 * t202 - t612 * t135;
t958 = -t685 * t1192 - t1019;
t893 = -t616 * t522 + t958;
t467 = pkin(4) * t1097 + qJ(5) * t1101;
t637 = t719 * t669;
t904 = -t713 * t716 + t637;
t414 = t904 - t634;
t1050 = t414 + t634;
t1015 = -t708 + t713;
t530 = t719 * t566;
t319 = t1015 * t716 + t530 - t637;
t966 = t319 + t1050;
t894 = t467 + t966;
t73 = t255 * t612 - t362 * t470 + (-pkin(9) * t616 + t1004) * t660 + (t531 + t894) * qJD(1) + t893;
t1271 = (qJD(1) * t73 + t20) * t719;
t699 = t716 * rSges(6,1);
t406 = -rSges(6,2) * t1097 + rSges(6,3) * t1101 + t699;
t102 = t945 + t878 * t616 + (t406 + t894) * qJD(1) + t893;
t237 = t878 * t1092 + (t1241 * t719 + t699) * qJD(1);
t435 = t1241 * t709;
t931 = rSges(6,1) * t719 - rSges(6,3) * t1102;
t407 = rSges(6,2) * t1099 + t931;
t870 = t407 + t895;
t31 = -t617 * t435 - t440 * t878 + t870 * qJDD(1) + (-t237 + t779) * qJD(1) + t733;
t1270 = (qJD(1) * t102 + t31) * t719;
t1030 = t1273 * t716;
t326 = -rSges(7,3) * t1102 + t1030;
t361 = t661 * rSges(7,3) + t660 * t880;
t974 = t617 * t661;
t1267 = pkin(9) * t974 + t362 * t1007 + t326 * t612 + t471 * t361 - t1026;
t1194 = -rSges(7,3) - pkin(4);
t1266 = t1194 * t661 - t643;
t1265 = t1372 * qJD(1);
t1262 = t36 * t719 + t37 * t716;
t542 = t719 * t579;
t985 = pkin(2) * t1088;
t443 = t542 + t985;
t415 = qJD(1) * t443;
t1261 = -qJD(1) * t985 + t415;
t764 = -t716 * t900 + t974;
t241 = t717 * t764 - t719 * t814;
t242 = t714 * t764 + t719 * t815;
t1082 = t242 * rSges(7,1) + t241 * rSges(7,2);
t136 = -rSges(7,3) * t1275 + t1082;
t575 = qJDD(2) * t716 + t719 * t993;
t439 = qJDD(4) * t716 + t719 * t991 + t575;
t215 = -qJD(6) * t1275 + t719 * t989 + t439;
t675 = pkin(5) * t1006;
t347 = -pkin(9) * t1275 + t675;
t586 = t660 * t1003;
t591 = qJ(5) * t1097;
t1032 = t709 * t591 + t586;
t956 = t660 * t1007;
t205 = -pkin(4) * t1275 - qJ(5) * t956 + t1032;
t585 = t661 * t1004;
t505 = t719 * t551;
t1005 = qJD(2) * t719;
t949 = t715 * t1005;
t901 = pkin(2) * t949;
t187 = t901 + t505 + (t1015 * t719 - t1028 * t716) * qJD(1);
t674 = pkin(7) * t1006;
t1031 = qJD(1) * (-pkin(1) * t1007 + t674) + qJDD(1) * t634;
t683 = qJD(3) * t716;
t290 = -t901 - t674 + t683 + (t1185 * t716 - t668) * qJD(1);
t732 = qJD(1) * t290 + qJDD(1) * t414 + t716 * t992 + (-t1083 * t716 - t575 * t715) * pkin(2) - qJDD(3) * t719 + t1031;
t727 = qJD(1) * t187 + qJDD(1) * t319 + (-t1094 * t720 - t575 * t676) * pkin(3) + t732;
t723 = qJDD(1) * t467 + t709 * t585 + t716 * t990 + t727 + (t205 + t586) * qJD(1);
t21 = t723 - t215 * t362 + qJD(1) * t347 + t441 * t255 - t470 * t202 - t439 * t522 + qJDD(1) * t531 + (-t1100 * t616 - t439 * t660) * pkin(9) + t612 * t136 - t616 * t348;
t1260 = t21 * t716;
t1037 = -t522 + t878;
t1069 = -t348 - t435;
t890 = rSges(6,1) * t1006 + rSges(6,2) * t1275 + rSges(6,3) * t974;
t238 = -rSges(6,3) * t956 + t890;
t30 = qJD(1) * t238 + qJDD(1) * t406 + t1037 * t439 + t1069 * t616 + t723;
t1259 = t30 * t716;
t787 = -t553 - t1193;
t1257 = t719 * t787;
t1254 = -pkin(9) * t1100 - t202;
t581 = qJD(1) * t633;
t1251 = qJD(1) * t413 - t581;
t1250 = t505 + t683;
t1249 = t1239 + t705;
t988 = -pkin(9) + t1194;
t1246 = t988 * t661 - t566 - t643;
t1245 = t1374 + t1379;
t1244 = t1358 + t1376;
t647 = t661 * rSges(5,1);
t1240 = -rSges(5,2) * t660 + t647;
t1235 = -t407 * t1006 + t716 * t237 + t719 * t238;
t1188 = g(2) * t716;
t1222 = (g(1) * t719 + t1188) * t660;
t1219 = (t136 + t347) * t719 + (t135 + t346) * t716 + t1328 * t1006;
t859 = Icges(7,2) * t714 - t1155;
t749 = (t859 * t661 - t763) * t612 - (Icges(7,2) * t500 - t253 + t473) * t471 + (-Icges(7,2) * t498 + t252 + t472) * t470;
t866 = -Icges(7,1) * t717 + t1156;
t750 = (-t866 * t661 - t762) * t612 - (-Icges(7,1) * t499 + t251 - t474) * t471 + (-Icges(7,1) * t497 + t1157 + t249) * t470;
t1216 = m(6) / 0.2e1;
t1215 = m(7) / 0.2e1;
t1214 = -m(6) - m(7);
t1213 = t215 / 0.2e1;
t1212 = t216 / 0.2e1;
t1211 = t439 / 0.2e1;
t1210 = t440 / 0.2e1;
t1209 = t441 / 0.2e1;
t1208 = -t470 / 0.2e1;
t1207 = t470 / 0.2e1;
t1206 = -t471 / 0.2e1;
t1205 = t471 / 0.2e1;
t1204 = t575 / 0.2e1;
t1203 = t576 / 0.2e1;
t1202 = -t612 / 0.2e1;
t1201 = t612 / 0.2e1;
t1200 = -t616 / 0.2e1;
t1199 = t616 / 0.2e1;
t1198 = -t617 / 0.2e1;
t1197 = t617 / 0.2e1;
t1196 = t716 / 0.2e1;
t1195 = -t719 / 0.2e1;
t1191 = pkin(9) * t660;
t1190 = g(1) * t716;
t1187 = -qJD(1) / 0.2e1;
t1186 = qJD(1) / 0.2e1;
t1184 = rSges(3,1) * t718;
t1175 = t20 * t716;
t1174 = t21 * t719;
t128 = Icges(7,5) * t242 + Icges(7,6) * t241 - Icges(7,3) * t1275;
t130 = Icges(7,4) * t242 + Icges(7,2) * t241 - Icges(7,6) * t1275;
t132 = Icges(7,1) * t242 + Icges(7,4) * t241 - Icges(7,5) * t1275;
t839 = t249 * t717 + t252 * t714;
t27 = (t709 * t839 + t128) * t660 + (-t130 * t717 - t132 * t714 + t246 * t709 + (t249 * t714 - t252 * t717) * qJD(6)) * t661;
t1173 = t27 * t470;
t127 = Icges(7,5) * t240 + Icges(7,6) * t239 + Icges(7,3) * t786;
t129 = Icges(7,4) * t240 + Icges(7,2) * t239 + Icges(7,6) * t786;
t131 = Icges(7,1) * t240 + Icges(7,4) * t239 + Icges(7,5) * t786;
t28 = (t709 * t838 + t127) * t660 + (-t129 * t717 - t131 * t714 + t248 * t709 + (t251 * t714 + t253 * t717) * qJD(6)) * t661;
t1172 = t28 * t471;
t698 = t716 * rSges(3,3);
t696 = t716 * rSges(5,3);
t1169 = t719 * t73;
t1168 = qJDD(1) / 0.2e1;
t833 = -t714 * t763 - t717 * t762;
t146 = -t660 * t761 - t661 * t833;
t797 = t856 * t660;
t857 = -Icges(7,5) * t717 + Icges(7,6) * t714;
t199 = t709 * t797 + (Icges(7,3) * t709 + qJD(6) * t857) * t661;
t798 = t858 * t660;
t200 = t709 * t798 + (Icges(7,6) * t709 + qJD(6) * t859) * t661;
t799 = t865 * t660;
t201 = t709 * t799 + (Icges(7,5) * t709 + qJD(6) * t866) * t661;
t53 = (t709 * t833 + t199) * t660 + (-t200 * t717 - t201 * t714 - t761 * t709 + (-t714 * t762 + t717 * t763) * qJD(6)) * t661;
t1167 = t146 * t441 + t53 * t612;
t1045 = t467 + t531;
t1064 = t414 * t1005 - t413 * t685;
t898 = t319 * t1005 - t318 * t685 + t1064;
t778 = -qJD(5) * t661 + t616 * t462 + t898;
t54 = t1045 * t617 + t255 * t471 - t256 * t470 - t532 * t616 + t778;
t1136 = qJD(1) * t54;
t1057 = t406 + t467;
t82 = t1057 * t617 - t407 * t616 + t778;
t1134 = qJD(1) * t82;
t116 = t246 * t660 - t661 * t839;
t1131 = t116 * t215;
t1130 = t117 * t216;
t524 = rSges(5,1) * t660 + rSges(5,2) * t661;
t1106 = t617 * t524;
t404 = rSges(5,1) * t1099 - rSges(5,2) * t1102 - t719 * rSges(5,3);
t896 = -t404 + t968;
t122 = qJD(1) * t896 - t1106 + t1250;
t1129 = t122 * t716;
t784 = qJD(2) * t1257 + t683;
t159 = qJD(1) * t965 + t784;
t1127 = t159 * t553;
t1018 = rSges(3,2) * t1089 + t719 * rSges(3,3);
t495 = rSges(3,1) * t1086 - t1018;
t1041 = -t495 - t633;
t624 = rSges(3,1) * t715 + rSges(3,2) * t718;
t950 = t624 * t1005;
t275 = qJD(1) * t1041 - t950;
t1126 = t275 * t716;
t1125 = t275 * t719;
t496 = rSges(3,1) * t1084 - rSges(3,2) * t1088 + t698;
t378 = t496 + t634;
t276 = qJD(1) * t378 - t624 * t685;
t540 = t624 * t719;
t1124 = t276 * t540;
t1108 = t616 * t661;
t1107 = t616 * t716;
t589 = qJ(5) * t1099;
t459 = -pkin(4) * t1102 + t589;
t642 = qJD(5) * t660;
t1072 = t616 * t459 + t642;
t405 = rSges(5,1) * t1097 - rSges(5,2) * t1101 + t696;
t1066 = t716 * t404 + t719 * t405;
t1063 = -t716 * t413 + t719 * t414;
t541 = t716 * t579;
t442 = t541 + t986;
t1062 = t443 * t1005 + t442 * t685;
t1054 = t716 * t462 + t719 * t467;
t1052 = -t414 - t319;
t434 = rSges(4,1) * t1093 - rSges(4,2) * t1095 + t697;
t1051 = -t414 - t434;
t464 = -pkin(4) * t1101 + t591;
t1047 = qJD(1) * t464 + t585;
t460 = rSges(6,2) * t1102 + rSges(6,3) * t1099;
t1046 = -t459 - t460;
t465 = rSges(6,2) * t1101 + rSges(6,3) * t1097;
t802 = t464 + t465;
t1036 = -t1248 - t1241;
t1029 = t1273 * t719;
t1027 = rSges(5,2) * t956 + rSges(5,3) * t1006;
t1025 = rSges(4,2) * t952 + rSges(4,3) * t1006;
t1020 = rSges(3,2) * t951 + rSges(3,3) * t1006;
t984 = pkin(9) * t1107;
t983 = t617 * t1191;
t978 = qJD(2) * t705;
t972 = t462 * t1006 + t719 * t205 + t716 * t206;
t235 = -rSges(5,1) * t1275 - rSges(5,2) * t974 + t1027;
t461 = t524 * t716;
t236 = -t709 * t461 + (t1240 * t719 + t696) * qJD(1);
t971 = t404 * t1006 + t719 * t235 + t716 * t236;
t970 = t290 * t1005 + t291 * t685 - t575 * t413;
t969 = -t413 * t1006 + t719 * t290 + t716 * t291;
t967 = -t467 + t1052;
t962 = t558 + t639 + t684;
t961 = t589 + t1030;
t960 = t591 + t1029;
t948 = t718 * t1005;
t944 = t660 * t999;
t943 = t660 * t998;
t941 = -pkin(1) - t1184;
t940 = t1007 / 0.2e1;
t939 = t1006 / 0.2e1;
t938 = -t685 / 0.2e1;
t937 = t685 / 0.2e1;
t936 = -t1005 / 0.2e1;
t935 = t1005 / 0.2e1;
t932 = -t522 - t1191;
t930 = (-t716 ^ 2 - t1349) * t715;
t466 = t524 * t719;
t918 = -t616 * t461 - t466 * t617;
t908 = -qJD(1) * t466 - t1240 * t616;
t906 = -t708 * t716 + t530;
t903 = qJD(1) * t461 - t1240 * t617;
t897 = -t716 * t318 + t719 * t319 + t1063;
t892 = t719 * t406 - t716 * t407 + t1054;
t891 = t1032 + t1250;
t888 = t464 * t617 + t1072;
t887 = -t1248 * t616 + t1047;
t627 = rSges(2,1) * t719 - rSges(2,2) * t716;
t625 = rSges(2,1) * t716 + rSges(2,2) * t719;
t626 = -rSges(3,2) * t715 + t1184;
t755 = -t617 * t522 + t1250 + t586;
t72 = qJD(1) * t871 - t1350 + t755 - t983;
t874 = t716 * t73 + t719 * t72;
t101 = qJD(1) * t870 + t617 * t878 + t755;
t851 = -t101 * t719 - t102 * t716;
t850 = t106 * t719 + t107 * t716;
t849 = t106 * t716 - t107 * t719;
t848 = t108 * t719 + t109 * t716;
t847 = t108 * t716 - t109 * t719;
t846 = t116 * t719 + t117 * t716;
t845 = t116 * t716 - t117 * t719;
t123 = -t524 * t616 + (t405 + t966) * qJD(1) + t958;
t844 = -t122 * t719 - t123 * t716;
t837 = t255 * t716 + t256 * t719;
t266 = -t1005 * t1181 + (-t1005 * t676 - t1007 * t677) * rSges(4,1) + t1025;
t836 = t266 * t719 + t267 * t716;
t835 = -t276 * t716 - t1125;
t312 = -rSges(3,2) * t948 + (-t1007 * t718 - t949) * rSges(3,1) + t1020;
t539 = t624 * t716;
t313 = -qJD(2) * t539 + (t626 * t719 + t698) * qJD(1);
t834 = t312 * t719 + t313 * t716;
t826 = t433 * t716 + t434 * t719;
t823 = t495 * t716 + t496 * t719;
t816 = -t348 + t1254;
t811 = -t522 + t579;
t810 = -t524 + t579;
t809 = t906 + t467;
t808 = -t318 * t1006 + t719 * t187 + t716 * t188 + t969;
t807 = t1292 * t719 + t1328 * t716 + t1054;
t806 = t661 * pkin(9) + t1248 + t361;
t373 = t955 + t1108;
t801 = t878 + t811;
t788 = -qJD(2) * t659 - t978;
t781 = -t246 * t470 + t248 * t471 + t612 * t761;
t780 = (Icges(7,5) * t497 - Icges(7,6) * t498) * t470 - (Icges(7,5) * t499 + Icges(7,6) * t500) * t471 + t857 * t661 * t612;
t777 = -t348 + t788;
t436 = t1240 * t709;
t776 = -t436 + t788;
t771 = -t566 - t1248 - t645;
t768 = -t435 + t777;
t767 = -t362 + t811 - t1191;
t766 = t808 + t972;
t765 = t661 * t780;
t758 = t187 * t1005 + t1052 * t576 + t188 * t685 - t575 * t318 + t970;
t327 = -rSges(7,3) * t1101 + t1029;
t757 = t255 * t944 + t470 * t326 + t327 * t471 - t719 * t983 + t888;
t756 = t255 * t1001 + t612 * t327 - t361 * t470 + t362 * t943 + t887;
t753 = t988 * t1222;
t752 = qJD(1) * t318 + t1250 + t1251;
t751 = t777 + t1254;
t746 = -qJD(1) * t462 + t586 + t752;
t731 = -qJDD(5) * t661 + t616 * t206 + t439 * t462 + t709 * t642 + t758;
t728 = (t761 * t719 + t839) * t470 - (t761 * t716 + t838) * t471 + (Icges(7,3) * t661 + t797 + t833) * t612;
t726 = t728 * t661;
t23 = t1099 * t128 + t130 * t499 - t132 * t500 + t239 * t249 + t240 * t252 + t246 * t786;
t24 = t1099 * t127 + t129 * t499 - t131 * t500 + t239 * t251 - t240 * t253 + t248 * t786;
t25 = t1097 * t128 - t1275 * t246 + t130 * t497 + t132 * t498 + t241 * t249 + t242 * t252;
t26 = t1097 * t127 - t1275 * t248 + t129 * t497 + t131 * t498 + t241 * t251 - t242 * t253;
t42 = t1099 * t199 + t200 * t499 - t201 * t500 - t239 * t762 - t240 * t763 - t761 * t786;
t3 = t108 * t215 + t109 * t216 + t139 * t441 + t23 * t470 - t24 * t471 + t42 * t612;
t322 = t762 * t716;
t323 = t762 * t719;
t324 = t763 * t716;
t325 = t763 * t719;
t353 = Icges(7,6) * t661 + t798;
t355 = Icges(7,5) * t661 + t799;
t43 = t1097 * t199 + t1275 * t761 + t200 * t497 + t201 * t498 - t241 * t762 - t242 * t763;
t4 = t106 * t215 + t107 * t216 + t138 * t441 + t25 * t470 - t26 * t471 + t43 * t612;
t41 = t116 * t470 - t117 * t471 + t146 * t612;
t722 = -t41 * t1001 / 0.2e1 + ((t323 * t499 - t325 * t500) * t470 - (t322 * t499 - t324 * t500) * t471 + (t353 * t499 - t355 * t500) * t612 + (-t108 * t1101 + t139 * t661) * qJD(6) + ((-qJD(6) * t109 + t781) * t660 + t726) * t716) * t1205 + (qJD(1) * t848 + t23 * t716 - t24 * t719) * t1206 + (qJD(1) * t850 + t25 * t716 - t26 * t719) * t1207 + ((t323 * t497 + t325 * t498) * t470 - (t322 * t497 + t324 * t498) * t471 + (t353 * t497 + t355 * t498) * t612 + (-t107 * t1102 + t138 * t661) * qJD(6) + ((-qJD(6) * t106 + t781) * t660 + t726) * t719) * t1208 + t845 * t1209 + t847 * t1212 + t849 * t1213 + (qJD(1) * t846 + t27 * t716 - t28 * t719) * t1201 + (((-t323 * t717 - t325 * t714 + t246) * t470 - (-t322 * t717 - t324 * t714 + t248) * t471 + (-t353 * t717 - t355 * t714 - t761) * t612 + t146 * qJD(6)) * t661 + (-qJD(6) * t846 + t728) * t660) * t1202 + t1262 * t1002 / 0.2e1 + (t1304 * t716 - t1305 * t719) * t1211 + (t1306 * t716 - t1307 * t719) * t1210 + (t1280 * t716 + t1283 * t719) * t1200 + (t1324 * t719 + t1323 * t716 + (t1304 * t719 + t1305 * t716) * qJD(1)) * t1199 + (t1322 * t719 + t1321 * t716 + (t1306 * t719 + t1307 * t716) * qJD(1)) * t1198 + (-t1280 * t719 + t1283 * t716) * t1197 + (-t1338 * t661 + t1342 * t660) * t1187 + (t1313 * t719 + t1312 * t716 + (t1297 * t719 + t1298 * t716) * qJD(1)) * t1186 + (t1297 * t716 - t1298 * t719) * t1168 + (t37 + t1320) * t940 + (t36 + t1319) * t939 + (t1318 * qJD(1) + t1299 * qJDD(1) + t1304 * t439 + t1305 * t440 + t1323 * t616 + t1324 * t617 + t4) * t1196 + (t1317 * qJD(1) + qJDD(1) * t1357 + t1306 * t439 + t1307 * t440 + t1321 * t616 + t1322 * t617 + t3) * t1195;
t567 = t626 * qJD(2);
t494 = t553 * t719;
t463 = t881 * t661;
t431 = qJD(1) * t465;
t374 = -t956 + t974;
t339 = t616 * t460;
t314 = (t617 * t719 + t1107) * t660;
t302 = rSges(7,1) * t499 + rSges(7,2) * t500;
t301 = rSges(7,1) * t497 - rSges(7,2) * t498;
t271 = t823 * qJD(2);
t160 = -t553 * t685 + (t434 + t1050) * qJD(1) - t1019;
t147 = qJD(2) * t826 + t1064;
t145 = qJD(1) * t312 + qJDD(1) * t496 - t567 * t685 - t575 * t624 + t1031;
t144 = -t567 * t1005 + t576 * t624 + t1041 * qJDD(1) + (-t313 - t572) * qJD(1);
t103 = t404 * t616 + t405 * t617 + t898;
t90 = qJD(1) * t266 + qJDD(1) * t434 - t509 * t685 - t553 * t575 + t732;
t52 = qJD(1) * t235 + qJDD(1) * t405 - t436 * t616 - t439 * t524 + t727;
t51 = -t436 * t617 + t440 * t524 + t896 * qJDD(1) + (-t236 + t973) * qJD(1) + t754;
t29 = t235 * t617 + t236 * t616 + t404 * t439 - t405 * t440 + t758;
t22 = -t1057 * t440 + (t205 + t238) * t617 + t731 + t237 * t616 - t407 * t439;
t11 = (t205 + t347) * t617 - t215 * t256 - t216 * t255 + t731 - t1045 * t440 + t470 * t135 + t471 * t136 - t439 * t532 + t616 * t346;
t1 = [(t42 + t36) * t1206 + (t1308 + t1311) * t937 + (t1312 + t1318) * t1199 + (-t1313 + t1317 + t1319) * t1198 + ((t1244 * t719 + t1237 + t1304 - t1356) * t617 + ((t1367 + t1384) * t719 + t1244 * t716 + t1305 + t1377) * t616 + t1320 - t1326) * t1200 + (((t1245 * t719 + t1238 + t1300) * t719 + (t1245 * t716 + t1301 + t1381) * t716) * qJD(2) + t1316 - t1327) * t938 + (t1293 + t1295) * t1204 + (t1294 + t1296) * t1203 + (t276 * (t674 + t1020) + (t1126 * t624 - t1124) * qJD(2) + ((-pkin(1) - t626) * t1125 + (t275 * (-rSges(3,3) - pkin(7)) + t276 * t941) * t716) * qJD(1) - (-qJD(1) * t495 - t275 - t581 - t950) * t276 + (t145 - g(2)) * t378 + (t144 - g(1)) * (t716 * t941 + t1018 + t706)) * m(3) + (t174 + t1298) * t1210 + (t1297 + t1299) * t1211 - t1172 / 0.2e1 + t1173 / 0.2e1 + t1167 + (t122 * (t684 - t905) + t123 * (t1027 + t1250) + (t1129 * t524 - t123 * t466) * t709 + ((-t122 * rSges(5,3) + t123 * (-t566 - t647)) * t716 + (t122 * (-t566 - t1240) - t123 * t708) * t719) * qJD(1) - (-qJD(1) * t404 - t1106 - t122 + t752) * t123 + (-g(2) + t52) * (t405 + t906) + (-g(1) + t51) * (-t404 + t1035)) * m(5) + (-g(1) * t1325 - t1266 * t1190 + (t1266 * t716 + t1325) * t20 + (-t883 + t962 + t1246 * t1006 + (-t551 - qJ(5) * t1100 + (pkin(9) * t709 - qJD(5) + t1176) * t660 - pkin(5) * qJD(1)) * t716) * t72 + (t988 * t1103 * t719 - t617 * t932 + t1082 + t675 + t72 - t746 + t891 + (t1246 * t716 - t1258 - t532) * qJD(1) + t1350) * t73 + (-g(2) + t21) * (t809 + t1292)) * m(7) + (-(-qJD(1) * t433 + t1251 - t159 + t784) * t160 + t159 * t957 + t160 * (t683 + t1025) + (t1127 * t716 + t1257 * t160) * qJD(2) + ((-t159 * rSges(4,3) + t160 * (-t669 - t658)) * t716 + (t159 * (-t669 - t1239) - t160 * t713) * t719) * qJD(1) + (-g(2) + t90) * (t434 + t904) + t1331 * (-t433 - t1021)) * m(4) + (t101 * t962 + t102 * (-pkin(4) * t976 + t890 + t891) + t101 * (-t642 - t551 + (-t1179 + (-rSges(6,3) - qJ(5)) * t661) * t709) * t716 + ((-t101 * rSges(6,1) + t102 * t771) * t716 + (t101 * (t771 + t1178) - t102 * t708) * t719) * qJD(1) - (qJD(1) * t407 + t1037 * t617 - t101 + t746) * t102 + (t30 - g(2)) * (t406 + t809) + (t31 - g(1)) * ((-t643 + (rSges(6,2) - pkin(4)) * t661) * t716 + t931 + t1035)) * m(6) - m(2) * (-g(1) * t625 + g(2) * t627) + ((((t1383 + t1395) * t719 + t1302 + t1380 + t1394) * t719 - t1238 * t716) * qJD(2) + t1329) * t935 + t138 * t1213 + t36 * t1205 + (-t1309 + t1310 + t1315) * t936 + t43 * t1207 + t139 * t1212 + (((t396 * t716 - t397 * t719) * t661 + (t390 * t719 + t391 * t716) * t660 + t1306 + t1352 + t1355) * t617 + (t395 * t1102 + (-t396 * t719 - t397 * t716) * t661 - t392 * t1099 + (t390 * t716 - t391 * t719) * t660 - t1237 + t1307 - t1351) * t616 + t1330) * t1197 + (-t1370 * qJD(2) - t1365 * t661 + t1366 * t660 + t507 * t677 + t508 * t676 + t564 * t718 + t565 * t715) * qJD(1) + t1130 / 0.2e1 + t1131 / 0.2e1 - t440 * t177 / 0.2e1 + (m(2) * (t625 ^ 2 + t627 ^ 2) + Icges(2,3) + t1398 * t661 + t1396 * t660 - t1369) * qJDD(1); t722 + t1316 * t940 + t1315 * t939 + ((-t1264 * t685 + t1265) * t716 + ((t1263 * t716 + t1282) * qJD(2) + t1281) * t719) * t938 + ((t1300 * t719 + t1301 * t716) * qJD(1) + t1276) * t937 + ((t1302 * t719 + t1303 * t716) * qJD(1) + t1277) * t936 + ((-t1005 * t1263 - t1265) * t719 + ((t1264 * t719 + t1282) * qJD(2) + t1281) * t716) * t935 + t1340 * t1204 + t1339 * t1203 + (qJD(1) * t1311 + qJD(2) * t1276 + qJDD(1) * t1295 + t1300 * t575 + t1301 * t576) * t1196 + (qJD(1) * t1310 + qJD(2) * t1277 + qJDD(1) * t1296 + t1302 * t575 + t1303 * t576) * t1195 + ((t1220 * t677 + t1221 * t718 + t773 * t676 + t772 * t715) * qJD(2) + (t1022 * t718 + t1023 * t715 + t1033 * t677 + t1034 * t676) * qJD(1)) * t1187 + (t1309 * t719 + t1308 * t716 + (t1293 * t719 + t1294 * t716) * qJD(1)) * t1186 + (t1293 * t716 - t1294 * t719) * t1168 + (-g(1) * (t542 + t960) - g(2) * (t541 + t961) - g(3) * (t806 - t1247) - t753 - t73 * (-pkin(9) * t1108 + t415 + t756) - t54 * (t256 * t943 - t660 * t984 + t1062 + t757) - (-t1191 - t1193) * t1169 * qJD(1) - (-t874 * t659 + (t54 * t930 - t718 * t874) * pkin(2)) * qJD(2) + t11 * (t807 + t897) + t54 * (t766 + t1219) + t767 * t1271 + (t21 * t767 + t73 * t751 + (t967 - t1292) * t1136) * t716 + (-t1001 * t256 + t362 * t944 - (-t442 - t459) * qJD(1) + t751 * t719 + t1267 + t1274) * t72) * m(7) + (-g(1) * (t542 + t802) - g(2) * (t541 - t1046) - g(3) * (-t1036 - t1247) - t82 * (t465 * t617 + t1062 + t339 + t888) - (t851 * t659 + (t718 * t851 + t82 * t930) * pkin(2)) * qJD(2) + t22 * (t892 + t897) + t82 * (t766 + t1235) + t801 * t1270 + (t30 * t801 + (-t406 + t967) * t1134) * t716 + (t1241 * t616 + t716 * t768 - t1261 - t431 - t887) * t102 + (-(-t442 + t1046) * qJD(1) + t768 * t719 + t1274 + t1286) * t101) * m(6) + (-t122 * (-qJD(1) * t442 + t641 + t903) - t123 * (t1261 + t908) - t103 * (t918 + t1062) - (t844 * t659 + (t103 * t930 + t718 * t844) * pkin(2)) * qJD(2) - g(1) * (t542 - t466) - g(2) * (t541 - t461) - g(3) * (t1240 - t1247) + t122 * t1024 + t29 * (t897 + t1066) + t103 * (t808 + t971) + (t122 * t776 + (qJD(1) * t123 + t51) * t810) * t719 + (t52 * t810 + t123 * t776 + (t122 * t524 + t103 * (-t405 + t1052)) * qJD(1)) * t716) * m(5) + (-(t159 * t493 + t160 * (-t494 - t985)) * qJD(1) - (t147 * pkin(2) * t930 + (-t1249 * t159 - t147 * t494) * t719 + (-t1249 * t160 - t147 * t493) * t716) * qJD(2) - g(3) * t1249 - t787 * t1188 + t159 * (-pkin(2) * t948 - t509 * t719) + (qJD(2) * t836 + t1051 * t576 + t433 * t575 + t970) * (t826 + t1063) + t147 * (t836 + t969) + (t147 * t433 + t160 * t787) * t1006 + (t90 * t787 + t160 * (-t509 - t978) + (t1051 * t147 + t1127) * qJD(1)) * t716 + t1331 * t1257) * m(4) + (-(t275 * t539 - t1124) * qJD(1) - (t271 * (-t539 * t716 - t540 * t719) + t835 * t626) * qJD(2) + g(1) * t540 + g(2) * t539 - g(3) * t626 + (qJD(2) * t834 + t495 * t575 - t496 * t576) * t823 + t271 * ((t495 * t719 - t496 * t716) * qJD(1) + t834) + t835 * t567 + (-t144 * t719 - t145 * t716 + (-t276 * t719 + t1126) * qJD(1)) * t624) * m(3); (-m(4) - m(5) + t1214) * (-g(2) * t719 + t1190) + 0.2e1 * (t1175 / 0.2e1 - t1174 / 0.2e1) * m(7) + 0.2e1 * (t1195 * t30 + t1196 * t31) * m(6) + 0.2e1 * (t1195 * t52 + t1196 * t51) * m(5) + 0.2e1 * (t1195 * t90 + t1196 * t89) * m(4); t722 + (-t73 * (-pkin(9) * t373 + t756) + t11 * t807 + (t73 * t816 + (-t255 - t1045) * t1136) * t716 - g(1) * t960 - g(2) * t961 - g(3) * t806 - t753 + (t1260 + t1271) * (-t362 + t932) + (qJD(1) * t459 - (-t1102 * t362 + t256 * t661) * qJD(6) + t468 + t816 * t719 + t1267) * t72 + (-(t256 * t998 - t984) * t660 - t757 + t972 + t1219) * t54) * m(7) + (-g(1) * t802 + g(2) * t1046 + g(3) * t1036 + t22 * t892 + (t102 * t1069 - t1057 * t1134) * t716 - t102 * (t1036 * t616 + t1047 + t431) + (-t617 * t802 - t1072 + t1235 - t339 + t972) * t82 + (t1259 + t1270) * t1037 + (-qJD(1) * t1046 + t1069 * t719 + t1286 + t468) * t101) * m(6) + (t29 * t1066 + t844 * t436 + (-t51 * t719 - t52 * t716 + (-t123 * t719 + t1129) * qJD(1)) * t524 - t122 * t903 - t123 * t908 + g(1) * t466 + g(2) * t461 - g(3) * t1240 + (-t1007 * t405 - t918 + t971) * t103) * m(5); t1214 * (-g(3) * t661 + t1222) - m(6) * (t101 * t374 + t102 * t373 + t314 * t82) - m(7) * (t314 * t54 + t373 * t73 + t374 * t72) + 0.2e1 * ((t101 * t617 + t102 * t1092 - t22) * t1216 + (t1092 * t73 + t617 * t72 - t11) * t1215) * t661 + 0.2e1 * ((t1006 * t102 - t1007 * t101 + t31 * t719 + t709 * t82 + t1259) * t1216 + (t1006 * t73 - t1007 * t72 + t20 * t719 + t54 * t709 + t1260) * t1215) * t660; -t36 * t954 / 0.2e1 + t4 * t1097 / 0.2e1 + (t138 * t660 + t661 * t850) * t1213 + ((-t709 * t850 + t43) * t660 + (-qJD(1) * t849 + t138 * t709 + t25 * t719 + t26 * t716) * t661) * t1207 + t661 * t37 * t939 + t3 * t1099 / 0.2e1 + (t139 * t660 + t661 * t848) * t1212 + ((-t709 * t848 + t42) * t660 + (-qJD(1) * t847 + t139 * t709 + t23 * t719 + t24 * t716) * t661) * t1206 + t41 * t1100 / 0.2e1 + t660 * (t1130 + t1131 + t1167 - t1172 + t1173) / 0.2e1 + (t146 * t660 + t661 * t846) * t1209 + ((-t709 * t846 + t53) * t660 + (-qJD(1) * t845 + t146 * t709 + t27 * t719 + t28 * t716) * t661) * t1201 + (t749 * t497 - t498 * t750 + t719 * t765) * t1208 + (t499 * t749 + t500 * t750 + t716 * t765) * t1205 + (t780 * t660 + (t750 * t714 - t717 * t749) * t661) * t1202 - t1262 * t1103 / 0.2e1 + ((-t72 * t135 + t73 * t136 + t20 * t256 + t21 * t255 + (t54 * t837 + (-t716 * t72 + t1169) * t362) * t709) * t660 + (t72 * (t202 * t716 + t256 * t709) + t73 * (-t202 * t719 + t255 * t709) - t11 * t837 + t54 * (-t1006 * t255 + t1007 * t256 + t135 * t719 - t136 * t716) + (qJD(1) * t874 - t1174 + t1175) * t362) * t661 - t72 * (-t302 * t612 - t463 * t471) - t73 * (t301 * t612 - t463 * t470) - t54 * (t301 * t471 + t302 * t470) - g(1) * t301 - g(2) * t302 - g(3) * t463) * m(7);];
tau  = t1;
