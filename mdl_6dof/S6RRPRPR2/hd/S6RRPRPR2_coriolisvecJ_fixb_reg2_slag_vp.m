% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:14
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:13:55
% EndTime: 2019-03-09 10:14:09
% DurationCPUTime: 5.76s
% Computational Cost: add. (11617->452), mult. (29933->552), div. (0->0), fcn. (22919->8), ass. (0->249)
t181 = sin(qJ(6));
t184 = cos(qJ(6));
t180 = sin(pkin(10));
t185 = cos(qJ(2));
t273 = cos(pkin(10));
t236 = qJD(1) * t273;
t227 = t185 * t236;
t183 = sin(qJ(2));
t255 = qJD(1) * t183;
t147 = -t180 * t255 + t227;
t155 = t180 * t185 + t273 * t183;
t148 = qJD(1) * t155;
t182 = sin(qJ(4));
t305 = cos(qJ(4));
t215 = -t182 * t147 - t305 * t148;
t324 = qJD(6) - t215;
t344 = t184 * t324;
t102 = t305 * t147 - t148 * t182;
t176 = qJD(2) + qJD(4);
t87 = -t102 * t181 + t176 * t184;
t333 = t87 * t344;
t84 = t102 * t184 + t176 * t181;
t346 = t324 * t84;
t272 = qJD(6) * t87;
t248 = qJD(1) * qJD(2);
t243 = t183 * t248;
t165 = t180 * t243;
t226 = qJD(2) * t236;
t212 = t185 * t226 - t165;
t242 = t185 * t248;
t258 = t180 * t242 + t183 * t226;
t310 = -qJD(4) * t215 + t182 * t212 + t305 * t258;
t42 = -t184 * t310 + t272;
t39 = t184 * t42;
t251 = qJD(6) * t184;
t252 = qJD(6) * t181;
t41 = t102 * t251 + t176 * t252 - t181 * t310;
t354 = -t333 + (t41 + t346) * t181 - t39;
t294 = t102 * t84;
t244 = qJD(4) * t305;
t253 = qJD(4) * t182;
t213 = t147 * t244 - t148 * t253 - t182 * t258 + t305 * t212;
t286 = t181 * t213;
t349 = -t324 * t344 - t286;
t353 = t349 + t294;
t352 = t41 - t346;
t345 = t181 * t324;
t60 = t184 * t213;
t216 = -t324 * t345 + t60;
t278 = t87 * t102;
t351 = t216 - t278;
t40 = t184 * t41;
t350 = -t345 * t87 - t40;
t301 = pkin(5) * t102;
t298 = -qJ(3) - pkin(7);
t164 = t298 * t185;
t160 = qJD(1) * t164;
t150 = t180 * t160;
t163 = t298 * t183;
t159 = qJD(1) * t163;
t297 = qJD(2) * pkin(2);
t154 = t159 + t297;
t105 = t273 * t154 + t150;
t302 = pkin(8) * t148;
t80 = qJD(2) * pkin(3) + t105 - t302;
t239 = t273 * t160;
t106 = t180 * t154 - t239;
t303 = pkin(8) * t147;
t82 = t106 + t303;
t51 = t182 * t80 + t305 * t82;
t48 = -t176 * qJ(5) - t51;
t32 = -t48 + t301;
t347 = t32 * t324;
t268 = t102 * t176;
t343 = t213 - t268;
t270 = t102 ^ 2;
t337 = t215 ^ 2;
t342 = -t270 + t337;
t329 = t176 * t215;
t341 = t310 + t329;
t50 = t182 * t82 - t305 * t80;
t260 = qJD(5) + t50;
t335 = pkin(5) * t215;
t261 = t260 - t335;
t307 = pkin(4) + pkin(9);
t30 = -t307 * t176 + t261;
t172 = -t185 * pkin(2) - pkin(1);
t256 = qJD(1) * t172;
t162 = qJD(3) + t256;
t111 = -t147 * pkin(3) + t162;
t195 = qJ(5) * t215 + t111;
t35 = -t102 * t307 + t195;
t13 = t181 * t30 + t184 * t35;
t170 = pkin(2) * t243;
t112 = pkin(3) * t258 + t170;
t26 = pkin(4) * t310 - qJ(5) * t213 + qJD(5) * t215 + t112;
t10 = pkin(9) * t310 + t26;
t241 = qJD(2) * t298;
t206 = t185 * qJD(3) + t183 * t241;
t124 = t206 * qJD(1);
t207 = -t183 * qJD(3) + t185 * t241;
t125 = t207 * qJD(1);
t83 = -t180 * t124 + t273 * t125;
t70 = -pkin(8) * t212 + t83;
t86 = t273 * t124 + t180 * t125;
t71 = -pkin(8) * t258 + t86;
t23 = t182 * t71 + t82 * t244 + t80 * t253 - t305 * t70;
t9 = pkin(5) * t213 + t23;
t2 = -qJD(6) * t13 - t181 * t10 + t184 * t9;
t340 = t13 * t324 + t2;
t222 = t181 * t35 - t184 * t30;
t1 = -qJD(6) * t222 + t184 * t10 + t181 * t9;
t339 = t222 * t324 + t1;
t338 = t324 * t87 - t42;
t336 = pkin(4) * t215;
t334 = t215 * t32;
t52 = -pkin(4) * t102 + t195;
t293 = t215 * t52;
t332 = t324 * t102;
t271 = t102 * qJ(5);
t331 = t102 * t215;
t330 = t111 * t215;
t328 = t215 * t307;
t326 = t310 - t329;
t238 = -t182 * t70 - t80 * t244 + t82 * t253 - t305 * t71;
t21 = -t176 * qJD(5) + t238;
t7 = -pkin(5) * t310 - t21;
t6 = t7 * t184;
t323 = t102 * t13 + t6;
t322 = t13 * t215 - t2;
t245 = -t215 * t222 + t1;
t321 = t52 * t102 - t21;
t214 = t180 * t183 - t273 * t185;
t205 = t182 * t214;
t108 = t305 * t155 - t205;
t312 = qJD(2) * t214;
t94 = -t180 * t206 + t273 * t207;
t189 = pkin(8) * t312 + t94;
t202 = qJD(2) * t155;
t95 = t180 * t207 + t273 * t206;
t194 = -pkin(8) * t202 + t95;
t113 = t273 * t163 + t164 * t180;
t96 = -pkin(8) * t155 + t113;
t114 = t180 * t163 - t273 * t164;
t97 = -pkin(8) * t214 + t114;
t27 = -t182 * t189 - t305 * t194 - t96 * t244 + t253 * t97;
t28 = t182 * t194 - t305 * t189 + t244 * t97 + t253 * t96;
t57 = t182 * t97 - t305 * t96;
t58 = t182 * t96 + t305 * t97;
t320 = -t102 * t27 + t23 * t108 + t213 * t57 - t215 * t28 - t310 * t58;
t319 = -t111 * t102 + t238;
t306 = t7 * t181 + t32 * t251;
t318 = t102 * t222 + t306;
t201 = t305 * t214;
t107 = t155 * t182 + t201;
t65 = -qJD(4) * t205 + t155 * t244 - t182 * t312 + t305 * t202;
t317 = -t102 * t65 + t107 * t310;
t64 = t155 * t253 + t176 * t201 + t182 * t202;
t316 = -t102 * t64 - t107 * t213 - t108 * t310 + t215 * t65;
t315 = -0.2e1 * t248;
t304 = pkin(2) * t180;
t169 = t182 * t304;
t171 = t273 * pkin(2) + pkin(3);
t130 = -qJD(4) * t169 + t171 * t244;
t123 = -qJD(5) - t130;
t109 = -t159 * t180 + t239;
t88 = t109 - t303;
t110 = t273 * t159 + t150;
t89 = t110 - t302;
t54 = t182 * t88 + t305 * t89;
t276 = t123 + t54;
t144 = t182 * t171 + t305 * t304;
t131 = t144 * qJD(4);
t53 = t182 * t89 - t305 * t88;
t274 = t131 - t53;
t49 = t213 * t108;
t314 = t215 * t64 + t49;
t311 = -t274 * t176 - t23;
t308 = t148 ^ 2;
t187 = qJD(2) ^ 2;
t300 = t23 * t57;
t299 = t87 * t84;
t290 = t176 * t27;
t289 = t176 * t64;
t288 = t176 * t65;
t285 = t181 * t87;
t283 = t184 * t65;
t282 = t184 * t84;
t281 = t307 * t213;
t280 = t28 * t176;
t279 = t42 * t181;
t277 = -t276 - t335;
t275 = t130 - t54;
t265 = t148 * t147;
t188 = qJD(1) ^ 2;
t264 = t185 * t188;
t263 = t187 * t183;
t262 = t187 * t185;
t257 = t183 ^ 2 - t185 ^ 2;
t254 = qJD(2) * t148;
t250 = qJD(6) * t307;
t174 = t183 * t297;
t173 = pkin(2) * t255;
t247 = t183 * t264;
t118 = t148 * pkin(3) + t173;
t237 = -t42 + t272;
t231 = pkin(1) * t315;
t228 = t183 * t242;
t143 = t305 * t171 - t169;
t224 = t13 * t184 + t181 * t222;
t141 = -pkin(4) - t143;
t137 = -pkin(9) + t141;
t223 = -t131 * t324 - t137 * t213;
t127 = pkin(3) * t214 + t172;
t192 = -t108 * qJ(5) + t127;
t43 = t307 * t107 + t192;
t44 = pkin(5) * t108 + t57;
t25 = t181 * t44 + t184 * t43;
t24 = -t181 * t43 + t184 * t44;
t221 = -t270 - t337;
t218 = t118 - t271;
t217 = t176 * t51 - t23;
t209 = -t102 * t54 - t215 * t274;
t198 = t213 + t268;
t119 = pkin(3) * t202 + t174;
t193 = qJD(6) * t224 + t1 * t181 + t2 * t184;
t29 = t65 * pkin(4) + t64 * qJ(5) - t108 * qJD(5) + t119;
t145 = t147 ^ 2;
t140 = qJ(5) + t144;
t63 = -t271 - t336;
t56 = t107 * pkin(4) + t192;
t55 = t218 - t336;
t47 = -pkin(4) * t176 + t260;
t46 = -t271 - t328;
t45 = -t107 * pkin(5) + t58;
t38 = t218 - t328;
t36 = t53 + t301;
t34 = t51 + t301;
t20 = t181 * t34 + t184 * t46;
t19 = -t181 * t46 + t184 * t34;
t18 = t65 * pkin(9) + t29;
t17 = -t64 * pkin(5) + t28;
t16 = -pkin(5) * t65 - t27;
t15 = t181 * t36 + t184 * t38;
t14 = -t181 * t38 + t184 * t36;
t11 = t222 * t252;
t4 = -qJD(6) * t25 + t184 * t17 - t181 * t18;
t3 = qJD(6) * t24 + t181 * t17 + t184 * t18;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t228, t257 * t315, t262, -0.2e1 * t228, -t263, 0, -pkin(7) * t262 + t183 * t231, pkin(7) * t263 + t185 * t231, 0, 0, -t165 * t155 + (-t148 * t214 + t155 * t227) * qJD(2), -t147 * t312 - t148 * t202 - t155 * t258 - t212 * t214, -t214 * t187, -t147 * t202 + t214 * t258, -t155 * t187, 0, -t147 * t174 + t172 * t258 + t173 * t312 + (t155 * t162 + t94) * qJD(2), -t95 * qJD(2) + t148 * t174 + t155 * t170 - t162 * t312 + t172 * t212, t105 * t312 - t106 * t202 - t113 * t212 - t114 * t258 + t95 * t147 - t94 * t148 - t83 * t155 - t214 * t86, t105 * t94 + t106 * t95 + t83 * t113 + t86 * t114 + (t162 + t256) * t174, t314, t316, -t289, t317, -t288, 0, -t102 * t119 + t112 * t107 + t111 * t65 + t127 * t310 - t280, t108 * t112 - t111 * t64 - t119 * t215 + t127 * t213 + t290, t107 * t238 - t50 * t64 - t51 * t65 + t320, t111 * t119 + t112 * t127 - t238 * t58 - t27 * t51 + t28 * t50 + t300, 0, t289, t288, t314, t316, t317, t21 * t107 - t47 * t64 + t48 * t65 + t320, t102 * t29 - t26 * t107 - t310 * t56 - t52 * t65 + t280, -t108 * t26 - t213 * t56 + t215 * t29 + t52 * t64 - t290, -t21 * t58 + t26 * t56 + t27 * t48 + t28 * t47 + t29 * t52 + t300, t65 * t285 + (-t181 * t41 + t251 * t87) * t107 (-t181 * t84 + t184 * t87) * t65 + (-t279 - t40 + (-t282 - t285) * qJD(6)) * t107, t65 * t345 - t41 * t108 - t87 * t64 + (t251 * t324 + t286) * t107, -t65 * t282 + (t252 * t84 - t39) * t107, t324 * t283 - t42 * t108 + t84 * t64 + (-t252 * t324 + t60) * t107, -t324 * t64 + t49, -t32 * t283 + t2 * t108 + t222 * t64 + t16 * t84 + t24 * t213 + t4 * t324 + t45 * t42 + (t252 * t32 - t6) * t107, t32 * t181 * t65 - t1 * t108 + t306 * t107 + t13 * t64 + t16 * t87 - t213 * t25 - t3 * t324 - t45 * t41, t24 * t41 - t25 * t42 - t3 * t84 - t4 * t87 + t224 * t65 + (t1 * t184 - t2 * t181 + (-t13 * t181 + t184 * t222) * qJD(6)) * t107, t1 * t25 + t13 * t3 + t16 * t32 + t2 * t24 - t222 * t4 + t45 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247, t257 * t188, 0, t247, 0, 0, t188 * pkin(1) * t183, pkin(1) * t264, 0, 0, -t265, -t145 + t308, -t165 + (t227 - t147) * qJD(2), t265, t254 - t258, 0, -qJD(2) * t109 + t147 * t173 - t148 * t162 + t83, qJD(2) * t110 - t147 * t162 - t148 * t173 - t86 (t106 + t109) * t148 + (-t110 + t105) * t147 + (-t258 * t180 - t273 * t212) * pkin(2), -t105 * t109 - t106 * t110 + (-t162 * t255 + t180 * t86 + t273 * t83) * pkin(2), t331, t342, t343, -t331, -t341, 0, t102 * t118 + t311 + t330, t118 * t215 - t176 * t275 + t319, -t143 * t213 - t144 * t310 - t215 * t51 + t209 + (t130 - t50) * t102, -t111 * t118 - t23 * t143 - t144 * t238 + t274 * t50 + t275 * t51, 0, -t343, t341, t331, t342, -t331, -t140 * t310 + t141 * t213 + t215 * t48 + t209 + (-t123 - t47) * t102, -t102 * t55 - t293 - t311, -t176 * t276 - t215 * t55 + t321, -t21 * t140 + t23 * t141 + t274 * t47 + t276 * t48 - t52 * t55, t350, t354, t351, t344 * t84 + t279, t353, -t332, t140 * t42 + (-t137 * t252 - t14) * t324 + t277 * t84 + (-t223 - t334) * t184 + t318, -t140 * t41 + (-t137 * t251 + t15) * t324 + t277 * t87 + (t223 - t347) * t181 + t323, t14 * t87 + t15 * t84 - t11 + (-t131 * t84 + t137 * t237 - t245) * t181 + (-t131 * t87 + t137 * t41 + (-t137 * t84 - t13) * qJD(6) + t322) * t184, t140 * t7 + t277 * t32 + (t131 * t181 - t15) * t13 - (t131 * t184 - t14) * t222 + t193 * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254 + t258, -t165 + (t227 + t147) * qJD(2), -t145 - t308, t105 * t148 - t106 * t147 + t170, 0, 0, 0, 0, 0, 0, t326, t198, t221, -t51 * t102 + t215 * t50 + t112, 0, 0, 0, 0, 0, 0, t221, -t326, -t198, t48 * t102 + t215 * t47 + t26, 0, 0, 0, 0, 0, 0, t349 - t294, -t216 - t278, -t181 * t352 + t333 - t39, -t32 * t102 - t181 * t340 + t184 * t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331, t342, t343, -t331, -t341, 0, t217 + t330, -t176 * t50 + t319, 0, 0, 0, -t343, t341, t331, t342, -t331, -pkin(4) * t213 - qJ(5) * t310 - (-t48 - t51) * t215 - (t47 - t260) * t102, -t102 * t63 - t217 - t293, t176 * t260 - t215 * t63 + t321, -t23 * pkin(4) - t21 * qJ(5) - t260 * t48 - t47 * t51 - t52 * t63, t350, t354, t351, t184 * t346 + t279, t353, -t332, qJ(5) * t42 + (t181 * t250 - t19) * t324 + t261 * t84 + (-t281 - t334) * t184 + t318, -qJ(5) * t41 + (t184 * t250 + t20) * t324 + t261 * t87 + (t281 - t347) * t181 + t323, t19 * t87 + t20 * t84 - t11 + (-t237 * t307 - t245) * t181 + (-t307 * t41 + (t307 * t84 - t13) * qJD(6) + t322) * t184, t7 * qJ(5) - t13 * t20 + t19 * t222 - t193 * t307 + t261 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, -t331, -t176 ^ 2 - t337, t176 * t48 + t23 - t293, 0, 0, 0, 0, 0, 0, -t176 * t84 + t216, -t176 * t87 + t349, t338 * t181 + t184 * t352, -t32 * t176 + t245 * t181 + t184 * t340 + t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, -t84 ^ 2 + t87 ^ 2, -t352, -t299, t338, t213, -t32 * t87 + t340, t32 * t84 - t339, 0, 0;];
tauc_reg  = t5;
