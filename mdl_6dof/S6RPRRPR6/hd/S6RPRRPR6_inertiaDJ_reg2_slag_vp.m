% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:18
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:17:43
% EndTime: 2019-03-09 05:17:55
% DurationCPUTime: 4.33s
% Computational Cost: add. (8893->325), mult. (19965->581), div. (0->0), fcn. (20446->10), ass. (0->157)
t124 = sin(pkin(10));
t125 = cos(pkin(10));
t127 = sin(qJ(3));
t225 = cos(qJ(3));
t105 = t225 * t124 + t127 * t125;
t230 = -0.4e1 * t105;
t126 = sin(qJ(4));
t128 = cos(qJ(4));
t206 = sin(pkin(11));
t207 = cos(pkin(11));
t162 = t206 * t126 - t207 * t128;
t156 = -t124 * t127 + t225 * t125;
t219 = pkin(7) + qJ(2);
t109 = t219 * t124;
t110 = t219 * t125;
t157 = -t225 * t109 - t127 * t110;
t140 = t156 * qJD(2) + t157 * qJD(3);
t117 = -pkin(2) * t125 - pkin(1);
t153 = -pkin(3) * t156 - pkin(8) * t105 + t117;
t229 = qJD(4) * t153 + t140;
t178 = qJD(4) * t206;
t179 = qJD(4) * t207;
t98 = -t126 * t178 + t128 * t179;
t104 = t207 * t126 + t206 * t128;
t196 = qJD(4) * t128;
t188 = t105 * t196;
t99 = t156 * qJD(3);
t211 = t126 * t99;
t228 = t188 + t211;
t199 = t126 * t179 + t128 * t178;
t190 = t207 * pkin(4);
t173 = t190 + pkin(5);
t189 = t206 * pkin(4);
t223 = sin(qJ(6));
t224 = cos(qJ(6));
t95 = t224 * t173 - t223 * t189;
t122 = t126 ^ 2;
t123 = t128 ^ 2;
t198 = t122 - t123;
t177 = qJD(4) * t198;
t100 = t105 * qJD(3);
t171 = pkin(3) * t100 - pkin(8) * t99;
t193 = t126 * t171 + t128 * t229;
t197 = qJD(4) * t126;
t72 = -t127 * t109 + t225 * t110;
t21 = t72 * t197 - t193;
t22 = -t126 * t229 + t128 * t171 - t72 * t196;
t43 = -t126 * t72 + t128 * t153;
t44 = t126 * t153 + t128 * t72;
t227 = t21 * t126 - t128 * t22 + (t126 * t43 - t128 * t44) * qJD(4);
t226 = 0.2e1 * t100;
t66 = t224 * t104 - t223 * t162;
t42 = t66 * qJD(6) + t224 * t199 + t223 * t98;
t152 = t224 * t162;
t65 = t223 * t104 + t152;
t222 = t65 * t42;
t184 = qJD(6) * t223;
t41 = qJD(6) * t152 + t104 * t184 + t223 * t199 - t224 * t98;
t221 = t66 * t41;
t52 = t105 * qJD(2) + t72 * qJD(3);
t220 = t157 * t52;
t218 = -qJ(5) - pkin(8);
t148 = -t104 * t99 - t105 * t98;
t36 = t199 * t105 + t162 * t99;
t214 = t104 * t105;
t60 = t162 * t105;
t38 = -t223 * t214 - t224 * t60;
t12 = t38 * qJD(6) - t224 * t148 - t223 * t36;
t174 = t224 * t214;
t37 = -t223 * t60 + t174;
t217 = -t66 * t12 + t41 * t37;
t215 = t104 * t148 - t98 * t214;
t205 = qJ(5) * t128;
t27 = -pkin(4) * t156 - t105 * t205 + t43;
t204 = t105 * t126;
t35 = -qJ(5) * t204 + t44;
t18 = t206 * t27 + t207 * t35;
t213 = t104 * t98;
t212 = t105 * t99;
t210 = t128 * t52;
t209 = t128 * t99;
t208 = t52 * t126;
t202 = t126 * t100;
t200 = t128 * t100;
t74 = t162 * t218;
t195 = qJD(5) * t128;
t194 = -0.2e1 * pkin(3) * qJD(4);
t68 = t156 * t226;
t119 = pkin(4) * t197;
t192 = t126 * t209;
t118 = -t128 * pkin(4) - pkin(3);
t187 = t105 * t197;
t186 = t126 * t196;
t185 = qJD(6) * t224;
t183 = qJD(4) * t218;
t101 = t105 ^ 2;
t176 = t101 * t186;
t175 = 0.2e1 * (t124 ^ 2 + t125 ^ 2) * qJD(2);
t172 = -pkin(3) * t99 - pkin(8) * t100;
t53 = pkin(4) * t204 - t157;
t168 = pkin(3) * t105 - pkin(8) * t156;
t11 = qJD(6) * t174 - t223 * t148 - t60 * t184 + t224 * t36;
t167 = -t11 * t65 + t38 * t42;
t166 = t100 * t66 + t156 * t41;
t164 = t126 * t44 + t128 * t43;
t161 = t100 * t104 - t156 * t98;
t158 = -t187 + t209;
t155 = -t156 * t196 + t202;
t132 = qJ(5) * t187 - t105 * t195 - t99 * t205 + t22;
t131 = t100 * pkin(4) + t132;
t139 = qJ(5) * t188 - (-qJ(5) * t99 - qJD(4) * t72 - qJD(5) * t105) * t126 - t193;
t136 = t207 * t139;
t9 = t206 * t131 - t136;
t129 = t148 * pkin(9) + t9;
t135 = t206 * t139;
t8 = t207 * t131 + t135;
t130 = t100 * pkin(5) + t36 * pkin(9) + t8;
t14 = -t214 * pkin(9) + t18;
t17 = -t206 * t35 + t207 * t27;
t144 = -pkin(5) * t156 + t60 * pkin(9) + t17;
t143 = t224 * t144;
t1 = -qJD(6) * t143 - t224 * t129 - t223 * t130 + t14 * t184;
t151 = t126 * t183 + t195;
t150 = -t126 * qJD(5) + t128 * t183;
t149 = t162 * t199;
t146 = t162 * t36 + t60 * t199;
t145 = -t164 * qJD(4) - t22 * t126 - t128 * t21;
t73 = t104 * t218;
t96 = t223 * t173 + t224 * t189;
t142 = t223 * t144;
t141 = -t104 * pkin(9) + t73;
t138 = t224 * t141;
t137 = t223 * t141;
t40 = pkin(4) * t228 + t52;
t57 = t206 * t150 + t207 * t151;
t56 = t207 * t150 - t206 * t151;
t134 = -t98 * pkin(9) + t56;
t133 = -t199 * pkin(9) + t57;
t2 = -qJD(6) * t142 - t223 * t129 + t224 * t130 - t14 * t185;
t85 = t96 * qJD(6);
t84 = t95 * qJD(6);
t82 = t162 * pkin(5) + t118;
t75 = t199 * pkin(5) + t119;
t64 = t156 * t197 + t200;
t58 = -t162 * pkin(9) + t74;
t48 = t105 * t177 - t192;
t47 = -t162 * t100 + t156 * t199;
t39 = t214 * pkin(5) + t53;
t31 = t224 * t58 + t137;
t30 = -t223 * t58 + t138;
t23 = -t100 * t65 + t156 * t42;
t19 = -t148 * pkin(5) + t40;
t16 = -qJD(6) * t137 - t223 * t133 + t224 * t134 - t58 * t185;
t15 = -qJD(6) * t138 - t224 * t133 - t223 * t134 + t58 * t184;
t7 = t224 * t14 + t142;
t6 = -t223 * t14 + t143;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, qJ(2) * t175, 0.2e1 * t212, -0.2e1 * t100 * t105 + 0.2e1 * t156 * t99, 0, -t68, 0, 0, t117 * t226, 0.2e1 * t117 * t99, -0.2e1 * t72 * t100 + 0.2e1 * t52 * t105 + 0.2e1 * t140 * t156 - 0.2e1 * t157 * t99, 0.2e1 * t140 * t72 - 0.2e1 * t220, 0.2e1 * t123 * t212 - 0.2e1 * t176, 0.2e1 * t101 * t177 + t192 * t230, 0.2e1 * t105 * t200 - 0.2e1 * t156 * t158, 0.2e1 * t122 * t212 + 0.2e1 * t176, -0.2e1 * t105 * t202 + 0.2e1 * t156 * t228, -t68, -0.2e1 * t157 * t211 + 0.2e1 * t43 * t100 - 0.2e1 * t22 * t156 + 0.2e1 * (-t157 * t196 + t208) * t105, -0.2e1 * t157 * t209 - 0.2e1 * t44 * t100 - 0.2e1 * t21 * t156 + 0.2e1 * (t157 * t197 + t210) * t105, 0.2e1 * t227 * t105 - 0.2e1 * t164 * t99, -0.2e1 * t21 * t44 + 0.2e1 * t22 * t43 - 0.2e1 * t220, 0.2e1 * t60 * t36, -0.2e1 * t148 * t60 + 0.2e1 * t214 * t36, -0.2e1 * t100 * t60 + 0.2e1 * t156 * t36, -0.2e1 * t214 * t148, -0.2e1 * t100 * t214 - 0.2e1 * t148 * t156, -t68, 0.2e1 * t17 * t100 - 0.2e1 * t148 * t53 - 0.2e1 * t156 * t8 + 0.2e1 * t214 * t40, -0.2e1 * t100 * t18 + 0.2e1 * t156 * t9 - 0.2e1 * t36 * t53 - 0.2e1 * t40 * t60, 0.2e1 * t148 * t18 + 0.2e1 * t17 * t36 - 0.2e1 * t214 * t9 + 0.2e1 * t8 * t60, 0.2e1 * t17 * t8 + 0.2e1 * t18 * t9 + 0.2e1 * t40 * t53, -0.2e1 * t38 * t11, 0.2e1 * t11 * t37 - 0.2e1 * t12 * t38, 0.2e1 * t100 * t38 + 0.2e1 * t11 * t156, 0.2e1 * t37 * t12, -0.2e1 * t100 * t37 + 0.2e1 * t12 * t156, -t68, 0.2e1 * t100 * t6 + 0.2e1 * t12 * t39 - 0.2e1 * t156 * t2 + 0.2e1 * t19 * t37, -0.2e1 * t1 * t156 - 0.2e1 * t100 * t7 - 0.2e1 * t11 * t39 + 0.2e1 * t19 * t38, 0.2e1 * t1 * t37 + 0.2e1 * t11 * t6 - 0.2e1 * t12 * t7 - 0.2e1 * t2 * t38, -0.2e1 * t1 * t7 + 0.2e1 * t19 * t39 + 0.2e1 * t2 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t99, 0, 0, 0, 0, 0, 0, 0, 0, t64, -t155 -(t122 + t123) * t99, -t227, 0, 0, 0, 0, 0, 0, t47, -t161, -t146 + t215, t9 * t104 - t162 * t8 - t17 * t199 + t18 * t98, 0, 0, 0, 0, 0, 0, t23, -t166, t167 + t217, -t1 * t66 - t2 * t65 - t41 * t7 - t42 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t149 + 0.2e1 * t213, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t221 + 0.2e1 * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0, -t100, 0, -t52, -t140, 0, 0, -t48, t186 * t230 - t198 * t99, t155, t48, t64, 0, -t210 + t172 * t126 + (-t126 * t157 - t128 * t168) * qJD(4), t208 + t172 * t128 + (t126 * t168 - t128 * t157) * qJD(4), t145, -t52 * pkin(3) + pkin(8) * t145, -t104 * t36 - t60 * t98, t146 + t215, t161, -t148 * t162 + t199 * t214, t47, 0, t73 * t100 - t118 * t148 + t119 * t214 - t156 * t56 + t162 * t40 + t199 * t53, -t100 * t74 + t104 * t40 - t118 * t36 - t119 * t60 + t156 * t57 + t53 * t98, -t8 * t104 + t148 * t74 - t162 * t9 - t17 * t98 - t18 * t199 - t214 * t57 + t73 * t36 + t56 * t60, t118 * t40 + t119 * t53 + t17 * t56 + t18 * t57 + t73 * t8 + t74 * t9, -t11 * t66 - t38 * t41, -t167 + t217, t166, t12 * t65 + t37 * t42, t23, 0, t100 * t30 + t12 * t82 - t156 * t16 + t19 * t65 + t37 * t75 + t39 * t42, -t100 * t31 - t11 * t82 - t15 * t156 + t19 * t66 + t38 * t75 - t39 * t41, t1 * t65 + t11 * t30 - t12 * t31 + t15 * t37 - t16 * t38 - t2 * t66 + t41 * t6 - t42 * t7, -t1 * t31 - t15 * t7 + t16 * t6 + t19 * t82 + t2 * t30 + t39 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104 * t57 - t162 * t56 - t199 * t73 + t98 * t74, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15 * t66 - t16 * t65 - t30 * t42 - t31 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t186, -0.2e1 * t177, 0, -0.2e1 * t186, 0, 0, t126 * t194, t128 * t194, 0, 0, 0.2e1 * t213, -0.2e1 * t104 * t199 - 0.2e1 * t98 * t162, 0, 0.2e1 * t149, 0, 0, 0.2e1 * t118 * t199 + 0.2e1 * t119 * t162, 0.2e1 * t104 * t119 + 0.2e1 * t118 * t98, -0.2e1 * t56 * t104 - 0.2e1 * t162 * t57 - 0.2e1 * t199 * t74 - 0.2e1 * t73 * t98, 0.2e1 * t118 * t119 + 0.2e1 * t56 * t73 + 0.2e1 * t57 * t74, -0.2e1 * t221, 0.2e1 * t65 * t41 - 0.2e1 * t66 * t42, 0, 0.2e1 * t222, 0, 0, 0.2e1 * t42 * t82 + 0.2e1 * t65 * t75, -0.2e1 * t41 * t82 + 0.2e1 * t66 * t75, 0.2e1 * t15 * t65 - 0.2e1 * t16 * t66 + 0.2e1 * t30 * t41 - 0.2e1 * t31 * t42, -0.2e1 * t15 * t31 + 0.2e1 * t16 * t30 + 0.2e1 * t75 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, 0, -t228, t100, t22, t21, 0, 0, 0, 0, -t36, 0, t148, t100, t132 * t207 + t190 * t226 + t135, -0.2e1 * t100 * t189 - t132 * t206 + t136 (t148 * t206 + t207 * t36) * pkin(4) (t206 * t9 + t207 * t8) * pkin(4), 0, 0, -t11, 0, -t12, t100, t95 * t100 + t156 * t85 + t2, -t96 * t100 + t156 * t84 + t1, t11 * t95 - t12 * t96 - t37 * t84 + t38 * t85, -t1 * t96 + t2 * t95 - t6 * t85 + t7 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, -t196, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t98, 0 (-t199 * t207 + t206 * t98) * pkin(4), 0, 0, 0, 0, 0, 0, -t42, t41, 0, -t41 * t96 - t42 * t95 + t65 * t85 + t66 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, 0, -t197, 0, -pkin(8) * t196, pkin(8) * t197, 0, 0, 0, 0, t98, 0, -t199, 0, t56, -t57 (-t199 * t206 - t207 * t98) * pkin(4) (t206 * t57 + t207 * t56) * pkin(4), 0, 0, -t41, 0, -t42, 0, t16, t15, t41 * t95 - t42 * t96 - t65 * t84 + t66 * t85, -t15 * t96 + t16 * t95 - t30 * t85 + t31 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t85, -0.2e1 * t84, 0, 0.2e1 * t84 * t96 - 0.2e1 * t85 * t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t36, 0, t40, 0, 0, 0, 0, 0, 0, t12, -t11, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t98, 0, t119, 0, 0, 0, 0, 0, 0, t42, -t41, 0, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, -t12, t100, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t42, t41, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, -t42, 0, t16, t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t84, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
