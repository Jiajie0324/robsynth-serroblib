% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPPRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:32:05
% EndTime: 2019-03-09 01:32:09
% DurationCPUTime: 1.46s
% Computational Cost: add. (1533->158), mult. (3062->230), div. (0->0), fcn. (3323->8), ass. (0->144)
t128 = cos(pkin(10));
t205 = cos(qJ(5));
t115 = t205 * t128;
t126 = sin(pkin(10));
t130 = sin(qJ(5));
t196 = t130 * t126;
t99 = -t115 + t196;
t212 = 0.2e1 * t99;
t100 = t205 * t126 + t130 * t128;
t97 = t100 ^ 2;
t98 = t99 ^ 2;
t209 = t97 / 0.2e1 + t98 / 0.2e1;
t129 = sin(qJ(6));
t45 = t129 * t100;
t37 = t45 * qJD(6);
t131 = cos(qJ(6));
t175 = qJD(5) * t131;
t87 = t99 * t175;
t211 = t87 + t37;
t210 = -t98 - t97;
t164 = t98 - t97;
t124 = t129 ^ 2;
t125 = t131 ^ 2;
t113 = t125 - t124;
t179 = qJD(1) * t131;
t160 = t129 * t179;
t133 = t113 * qJD(5) + t160 * t212;
t208 = t99 * pkin(5);
t207 = -t129 / 0.2e1;
t206 = t131 / 0.2e1;
t204 = t100 * pkin(8);
t112 = -cos(pkin(9)) * pkin(1) - pkin(2) - qJ(4);
t203 = -pkin(7) + t112;
t114 = sin(pkin(9)) * pkin(1) + qJ(3);
t103 = t126 * pkin(4) + t114;
t147 = t100 * pkin(5) + t99 * pkin(8);
t132 = t147 + t103;
t152 = t203 * t128;
t89 = t203 * t126;
t33 = t130 * t152 + t205 * t89;
t201 = t129 * t33;
t13 = -t131 * t132 + t201;
t49 = t131 * t100;
t67 = t204 - t208;
t1 = (t13 - t201) * t99 + t67 * t49;
t202 = t1 * qJD(1);
t200 = t131 * t33;
t32 = t130 * t89 - t205 * t152;
t46 = t99 * t129;
t8 = t13 * t100 + t32 * t46;
t199 = t8 * qJD(1);
t14 = t129 * t132 + t200;
t51 = t99 * t131;
t9 = -t14 * t100 - t32 * t51;
t198 = t9 * qJD(1);
t166 = -t97 / 0.2e1;
t66 = -t131 * t98 / 0.2e1;
t12 = t66 + (t166 + t209) * t131;
t197 = t12 * qJD(1);
t143 = 0.1e1 / 0.2e1 + t209;
t15 = t143 * t129;
t195 = t15 * qJD(1);
t20 = t143 * t131;
t194 = t20 * qJD(1);
t22 = t164 * t129;
t193 = t22 * qJD(1);
t23 = t210 * t129;
t192 = t23 * qJD(1);
t24 = t164 * t131;
t191 = t24 * qJD(1);
t190 = t164 * qJD(1);
t36 = t45 * qJD(1);
t189 = t46 * qJD(1);
t188 = t49 * qJD(1);
t187 = t49 * qJD(5);
t55 = t210 * t131;
t186 = t55 * qJD(1);
t122 = t126 ^ 2;
t123 = t128 ^ 2;
t181 = t122 + t123;
t68 = t181 * t112;
t185 = t68 * qJD(1);
t96 = t115 / 0.2e1 - t196 / 0.2e1;
t184 = t96 * qJD(1);
t183 = t99 * qJD(1);
t90 = t99 * qJD(5);
t180 = qJD(1) * t103;
t178 = qJD(3) * t100;
t177 = qJD(4) * t131;
t176 = qJD(5) * t129;
t174 = qJD(6) * t129;
t173 = qJD(6) * t131;
t172 = t100 * qJD(1);
t93 = t100 * qJD(5);
t153 = -t122 / 0.2e1 - t123 / 0.2e1;
t105 = -0.1e1 / 0.2e1 + t153;
t171 = t105 * qJD(1);
t170 = t181 * qJD(1);
t169 = t114 * qJD(1);
t168 = t126 * qJD(1);
t167 = t128 * qJD(1);
t163 = t99 * t172;
t162 = t99 * t93;
t161 = t99 * t179;
t159 = t100 * t174;
t158 = t100 * t173;
t157 = t129 * t173;
t156 = t129 * t172;
t155 = t129 * t175;
t154 = t131 * t172;
t151 = qJD(4) + t180;
t150 = qJD(6) + t172;
t148 = t99 * t155;
t146 = t46 * qJD(5) - t158;
t2 = (t14 - t200) * t99 - t67 * t45;
t145 = t2 * qJD(1) + t12 * qJD(2);
t144 = t150 * t99;
t142 = t204 / 0.2e1 - t208 / 0.2e1;
t136 = t67 / 0.2e1 + t142;
t6 = t136 * t131;
t141 = pkin(5) * t176 + t6 * qJD(1);
t4 = t136 * t129;
t140 = pkin(5) * t175 - t4 * qJD(1);
t139 = -t96 * qJD(6) + t163;
t138 = t131 * t144;
t43 = (-t124 / 0.2e1 + t125 / 0.2e1) * t99;
t137 = -t43 * qJD(1) + t155;
t135 = t43 * qJD(5) + t98 * t160;
t54 = t113 * t98;
t134 = -t54 * qJD(1) + 0.2e1 * t148;
t106 = t114 * qJD(3);
t104 = 0.1e1 / 0.2e1 + t153;
t88 = t96 * qJD(5);
t86 = t99 * t176;
t41 = t49 * qJD(6);
t35 = t45 * qJD(5);
t34 = t43 * qJD(6);
t30 = -t174 - t36;
t21 = t131 * t166 + t206 + t66;
t16 = t209 * t129 + t207;
t7 = t32 * t129 - t142 * t131 + t67 * t206;
t5 = t142 * t129 + t32 * t131 + t67 * t207;
t3 = t12 * qJD(5);
t10 = [0, 0, 0, 0, 0, qJD(3), t106, qJD(3) * t126, qJD(3) * t128, t181 * qJD(4), -t68 * qJD(4) + t106, t162, -t164 * qJD(5), 0, 0, 0, -t103 * t90 + t178, -qJD(3) * t99 - t103 * t93, t125 * t162 - t157 * t98, -t54 * qJD(6) - 0.2e1 * t100 * t148, t24 * qJD(5) + t159 * t99, -t22 * qJD(5) + t158 * t99, -t162, -t23 * qJD(4) + t1 * qJD(5) + t9 * qJD(6) + t131 * t178, -t55 * qJD(4) + t2 * qJD(5) + t8 * qJD(6) - t129 * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, qJD(1), t169, t168, t167, 0, t104 * qJD(4) + t169, 0, 0, 0, 0, 0, t172, -t183, 0, 0, 0, 0, 0, t21 * qJD(6) + t154, t16 * qJD(6) - t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t104 * qJD(3) - t185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, -t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, -t190, -t93, t90, 0, -t33 * qJD(5) - t99 * t180, t32 * qJD(5) - t103 * t172, -t34 + (t125 * t183 - t155) * t100, -t133 * t100 + t157 * t212, -t86 + t191, -t87 - t193, -t139, t202 + (t129 * t147 - t200) * qJD(5) + t7 * qJD(6) (t131 * t147 + t201) * qJD(5) + t5 * qJD(6) + t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t134, t129 * t144, t138, t88, t21 * qJD(3) + t7 * qJD(5) - t14 * qJD(6) + t198, t16 * qJD(3) + t5 * qJD(5) + t13 * qJD(6) + t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t93, 0, 0, 0, 0, 0, t211, t41 - t86 + t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173 * t99 + t35, -t174 * t99 + t187; 0, 0, 0, 0, 0, -qJD(1), -t169, -t168, -t167, 0, t105 * qJD(4) - t169, 0, 0, 0, 0, 0, -t172, t183, 0, 0, 0, 0, 0, -t20 * qJD(6) - t154, t15 * qJD(6) + t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, t90, 0, 0, 0, 0, 0, t46 * qJD(6) - t131 * t93, t51 * qJD(6) + t129 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146 - t194, t51 * qJD(5) + t159 + t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t105 * qJD(3) + t185, 0, 0, 0, 0, 0, -t90, -t93, 0, 0, 0, 0, 0, t192 - t211, t146 + t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183, -t172, 0, 0, 0, 0, 0, -t161, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t150 * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, t190, 0, 0, 0, t151 * t99, t151 * t100, -t125 * t163 - t34, 0.2e1 * t129 * t138, t41 - t191, -t37 + t193, t139, -t6 * qJD(6) + t99 * t177 - t202, -t46 * qJD(4) + t4 * qJD(6) - t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t172, 0, 0, 0, 0, 0, t161, -t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t113 * qJD(6), 0, 0, 0, -pkin(5) * t174, -pkin(5) * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t133, t173 + t188, t30, -t184, -pkin(8) * t173 - t141, pkin(8) * t174 - t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, -t134, -t156 * t99 - t187, -t154 * t99 + t35, t88, t20 * qJD(3) + t45 * qJD(4) + t6 * qJD(5) - t198, -t15 * qJD(3) - t4 * qJD(5) + t100 * t177 - t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, -t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137, -t133, -t188, t36, t184, t141, t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
