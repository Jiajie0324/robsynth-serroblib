% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:32
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPPRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPPRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:32:09
% EndTime: 2019-03-09 01:32:14
% DurationCPUTime: 3.96s
% Computational Cost: add. (5749->257), mult. (9746->336), div. (0->0), fcn. (10446->8), ass. (0->218)
t238 = sin(qJ(6));
t365 = 0.2e1 * t238;
t234 = t238 ^ 2;
t239 = cos(qJ(6));
t235 = t239 ^ 2;
t322 = t234 + t235;
t236 = sin(pkin(10));
t237 = cos(pkin(10));
t357 = sin(qJ(5));
t358 = cos(qJ(5));
t210 = t236 * t358 + t237 * t357;
t225 = t357 * t236;
t285 = t358 * t237;
t212 = t285 - t225;
t332 = t212 * t210;
t363 = (-0.1e1 + t322) * t332;
t364 = t363 * qJD(5);
t209 = t212 ^ 2;
t289 = t209 / 0.2e1;
t208 = t210 ^ 2;
t291 = t208 / 0.2e1;
t269 = t291 + t289;
t85 = 0.1e1 / 0.2e1 - t269;
t136 = t239 * t212;
t273 = t136 * t365;
t130 = t238 * t210;
t122 = t130 * qJD(6);
t205 = t212 * qJD(5);
t189 = t239 * t205;
t362 = -t189 + t122;
t361 = -t209 - t208;
t287 = t209 - t208;
t232 = t236 ^ 2;
t233 = t237 ^ 2;
t360 = t232 + t233;
t259 = -cos(pkin(9)) * pkin(1) - pkin(2) - qJ(4);
t254 = -pkin(7) + t259;
t195 = t254 * t236;
t242 = t237 * t254;
t116 = t195 * t357 - t242 * t358;
t354 = t212 * pkin(5);
t355 = t210 * pkin(8);
t158 = t354 + t355;
t330 = t238 * t158;
t334 = t116 * t239;
t77 = t330 - t334;
t346 = t77 * t239;
t328 = t239 * t158;
t335 = t116 * t238;
t76 = t328 + t335;
t349 = t76 * t238;
t245 = t346 / 0.2e1 - t349 / 0.2e1 + t116 / 0.2e1;
t117 = t195 * t358 + t242 * t357;
t224 = sin(pkin(9)) * pkin(1) + qJ(3);
t214 = pkin(4) * t236 + t224;
t353 = t212 * pkin(8);
t356 = t210 * pkin(5);
t267 = -t353 + t356;
t240 = t214 + t267;
t329 = t239 * t117;
t69 = t238 * t240 + t329;
t350 = t69 * t239;
t331 = t238 * t117;
t68 = -t239 * t240 + t331;
t351 = t68 * t238;
t246 = t350 / 0.2e1 + t351 / 0.2e1 - t117 / 0.2e1;
t3 = t210 * t245 + t212 * t246;
t359 = t3 * qJD(5);
t28 = t238 * t69 - t239 * t68;
t347 = t77 * t238;
t348 = t76 * t239;
t6 = (t347 + t348) * t212 - t28 * t210;
t352 = t6 * qJD(1);
t8 = (-t68 + t331) * t212 + (t76 - t335) * t210;
t345 = t8 * qJD(1);
t344 = qJD(1) * t28;
t36 = t116 * t136 - t69 * t210;
t343 = qJD(1) * t36;
t336 = t116 * t212;
t43 = -t117 * t210 + t336;
t342 = qJD(1) * t43;
t290 = -t209 / 0.2e1;
t157 = t239 * t290;
t292 = -t208 / 0.2e1;
t73 = t291 + t292;
t261 = t289 + t73;
t54 = t239 * t261 + t157;
t341 = qJD(1) * t54;
t86 = -0.1e1 / 0.2e1 - t269;
t78 = t86 * t238;
t340 = qJD(1) * t78;
t72 = t290 + t261;
t339 = qJD(2) * t72;
t338 = qJD(2) * t73;
t337 = qJD(3) * t72;
t274 = t235 / 0.2e1 + t234 / 0.2e1;
t241 = -t274 * t355 - t354 / 0.2e1;
t257 = -t348 / 0.2e1 - t347 / 0.2e1;
t16 = t241 + t257;
t333 = t16 * qJD(1);
t131 = t238 * t212;
t35 = -t116 * t131 + t68 * t210;
t327 = t35 * qJD(1);
t249 = -t208 * t274 + t290;
t53 = t249 - t274;
t326 = t53 * qJD(1);
t268 = 0.1e1 / 0.2e1 - t274;
t65 = t268 * t332;
t325 = t65 * qJD(1);
t324 = t73 * qJD(1);
t323 = t86 * qJD(1);
t223 = t235 - t234;
t104 = t287 * t238;
t321 = qJD(1) * t104;
t105 = t361 * t238;
t320 = qJD(1) * t105;
t106 = t287 * t239;
t319 = qJD(1) * t106;
t166 = t360 * t259;
t318 = qJD(1) * t166;
t317 = qJD(1) * t214;
t316 = qJD(3) * t210;
t315 = qJD(4) * t239;
t134 = t239 * t210;
t314 = qJD(5) * t134;
t313 = qJD(5) * t239;
t312 = qJD(6) * t238;
t311 = qJD(6) * t239;
t102 = t86 * t239;
t310 = t102 * qJD(1);
t309 = t287 * qJD(1);
t192 = t234 * t212;
t194 = t235 * t212;
t128 = t192 / 0.2e1 - t194 / 0.2e1;
t308 = t128 * qJD(6);
t121 = t130 * qJD(1);
t307 = t131 * qJD(1);
t306 = t134 * qJD(1);
t191 = t234 * t210;
t193 = t235 * t210;
t139 = t191 + t193;
t305 = t139 * qJD(1);
t304 = t139 * qJD(5);
t141 = -t192 - t194;
t303 = t141 * qJD(1);
t142 = t361 * t239;
t302 = t142 * qJD(1);
t301 = t361 * qJD(1);
t207 = t285 / 0.2e1 - t225 / 0.2e1;
t300 = t207 * qJD(1);
t299 = t210 * qJD(1);
t202 = t210 * qJD(5);
t298 = t212 * qJD(1);
t275 = -t232 / 0.2e1 - t233 / 0.2e1;
t216 = -0.1e1 / 0.2e1 + t275;
t297 = t216 * qJD(1);
t296 = t360 * qJD(1);
t295 = t224 * qJD(1);
t294 = t236 * qJD(1);
t293 = t237 * qJD(1);
t284 = t238 * t299;
t283 = t238 * t313;
t282 = t212 * t312;
t281 = t212 * t311;
t280 = t210 * t298;
t279 = t210 * t205;
t278 = t238 * t311;
t277 = t239 * t299;
t276 = t239 * t298;
t272 = qJD(4) + t317;
t271 = -qJD(6) - t299;
t270 = t209 * t278;
t266 = qJD(5) * t273;
t265 = -qJD(5) * t131 - t210 * t311;
t264 = t346 - t349;
t9 = (-t69 + t329) * t212 + (-t77 - t334) * t210;
t263 = t9 * qJD(1) + t54 * qJD(2);
t11 = t336 + (-t350 - t351) * t210;
t262 = -qJD(1) * t11 - qJD(2) * t65;
t260 = t271 * t239;
t258 = t355 / 0.2e1 + t354 / 0.2e1;
t251 = t158 / 0.2e1 + t258;
t33 = t251 * t239;
t256 = pkin(5) * qJD(5) * t238 + qJD(1) * t33;
t31 = t251 * t238;
t255 = pkin(5) * t313 - qJD(1) * t31;
t253 = t212 * t260;
t108 = -qJD(1) * t128 + t283;
t252 = qJD(6) * t207 + t280;
t4 = -t210 * t246 + t212 * t245;
t5 = t116 * t117 - t68 * t76 + t69 * t77;
t250 = t5 * qJD(1) + t4 * qJD(2) + t3 * qJD(3);
t83 = qJD(1) * t209 * t238 * t239 + qJD(5) * t128;
t140 = t223 * t209;
t248 = qJD(1) * t140 + t266;
t247 = qJD(1) * t273 - qJD(5) * t223;
t38 = t208 * t268 + t209 * t274 + t290;
t244 = t3 * qJD(1) + t38 * qJD(2) + qJD(3) * t363;
t243 = t4 * qJD(1) - qJD(2) * t363 + t38 * qJD(3);
t217 = t224 * qJD(3);
t215 = 0.1e1 / 0.2e1 + t275;
t190 = t207 * qJD(5);
t188 = t238 * t205;
t126 = t134 * qJD(6);
t120 = t130 * qJD(5);
t114 = -t121 - t312;
t103 = t157 + (t292 + 0.1e1 / 0.2e1) * t239;
t79 = t85 * t238;
t67 = t73 * qJD(5);
t66 = t72 * qJD(5);
t52 = t249 + t274;
t37 = t38 * qJD(5);
t34 = t335 + t328 / 0.2e1 - t258 * t239;
t32 = t334 - t330 / 0.2e1 + t258 * t238;
t29 = qJD(5) * t54;
t17 = t241 - t257;
t1 = qJD(4) * t65 + qJD(5) * t4;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t217, 0, 0, 0, 0, 0, 0, qJD(3) * t236, qJD(3) * t237, t360 * qJD(4), -qJD(4) * t166 + t217, -t279, -t287 * qJD(5), 0, t279, 0, 0, t205 * t214 + t316, qJD(3) * t212 - t202 * t214, -qJD(4) * t361, qJD(3) * t214 + qJD(4) * t43, -t235 * t279 - t270, -qJD(6) * t140 + t210 * t266, qJD(5) * t106 - t210 * t282, -t234 * t279 + t270, -qJD(5) * t104 - t210 * t281, t279, -qJD(4) * t105 + qJD(5) * t8 + qJD(6) * t36 + t239 * t316, -qJD(4) * t142 + qJD(5) * t9 + qJD(6) * t35 - t238 * t316, qJD(3) * t141 - qJD(5) * t6, qJD(3) * t28 + qJD(4) * t11 + qJD(5) * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t295, 0, 0, 0, 0, 0, 0, t294, t293, 0, qJD(4) * t215 + t295, 0, 0, 0, 0, 0, 0, t299, t298, 0, qJD(4) * t85 + t317, 0, 0, 0, 0, 0, 0, qJD(6) * t103 + t277, -qJD(6) * t79 - t284, t303, qJD(4) * t52 + t344 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, qJD(3) * t215 - t318, 0, 0, 0, 0, 0, 0, 0, 0, -t301, qJD(3) * t85 + t342, 0, 0, 0, 0, 0, 0, -t320, -t302, 0, qJD(3) * t52 + qJD(5) * t17 - t262; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, -t309, -t202, t280, -t205, 0, -qJD(5) * t117 + t214 * t298, qJD(5) * t116 - t214 * t299, t338, 0, -t308 + (-t235 * t298 - t283) * t210 (t191 - t193) * qJD(5) + (-qJD(6) + t299) * t273, t188 + t319, t308 + (-t234 * t298 + t283) * t210, t189 - t321, t252, t345 + (t238 * t267 - t329) * qJD(5) + t34 * qJD(6) (t239 * t267 + t331) * qJD(5) + t32 * qJD(6) + t263, qJD(5) * t264 - t352, t17 * qJD(4) + (-t117 * pkin(5) + pkin(8) * t264) * qJD(5) + t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t248, t271 * t131, t83, t253, t190, qJD(3) * t103 + qJD(5) * t34 - qJD(6) * t69 + t343, -qJD(3) * t79 + qJD(5) * t32 + qJD(6) * t68 + t327, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, 0, 0, 0, 0, 0, 0, 0, 0, t29, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, t202, t324, t337, 0, 0, 0, 0, 0, 0, t362, t126 + t188 + t341, -t304 (-t322 * t355 - t354) * qJD(5) + t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120 - t281, t282 + t314, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t295, 0, 0, 0, 0, 0, 0, -t294, -t293, 0, qJD(4) * t216 - t295, 0, 0, 0, 0, 0, 0, -t299, -t298, 0, qJD(4) * t86 - t317, 0, 0, 0, 0, 0, 0, qJD(6) * t102 - t277, -qJD(6) * t78 + t284, -t303, qJD(4) * t53 - t344 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, -t205, 0, t339, 0, 0, 0, 0, 0, 0, -qJD(6) * t131 - t202 * t239, -qJD(6) * t136 + t202 * t238, -t141 * qJD(5) (t322 * t353 - t356) * qJD(5) + t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265 + t310, -qJD(5) * t136 + t210 * t312 - t340, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -qJD(3) * t216 + t318, 0, 0, 0, 0, 0, 0, t205, -t202, t301, -qJD(3) * t86 - t342, 0, 0, 0, 0, 0, 0, t320 - t362, t265 + t302, t304, -qJD(3) * t53 - qJD(5) * t16 + t262; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, -t299, 0, 0, 0, 0, 0, 0, 0, 0, t276, -t307, t305, -t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t260, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, t309, 0, -t280, 0, 0, -t272 * t212, t272 * t210, -t338, 0, t235 * t280 - t308, t253 * t365, t126 - t319, t234 * t280 + t308, -t122 + t321, -t252, -qJD(6) * t33 - t212 * t315 - t345, qJD(4) * t131 + qJD(6) * t31 - t263, -qJD(4) * t139 + t352, qJD(4) * t16 - t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, -t337, 0, 0, 0, 0, 0, 0, 0, -t341, 0, -t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, t299, 0, 0, 0, 0, 0, 0, 0, 0, -t276, t307, -t305, t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t223 * qJD(6), 0, -t278, 0, 0, -pkin(5) * t312, -pkin(5) * t311, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, -t247, t306 + t311, -t108, t114, -t300, -pkin(8) * t311 - t256, pkin(8) * t312 - t255, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t248, t238 * t280 - t314, -t83, t210 * t276 + t120, t190, -qJD(3) * t102 + qJD(4) * t130 + qJD(5) * t33 - t343, qJD(3) * t78 - qJD(5) * t31 + t210 * t315 - t327, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310, t340, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, t277, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t247, -t306, t108, t121, t300, t256, t255, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t2;
