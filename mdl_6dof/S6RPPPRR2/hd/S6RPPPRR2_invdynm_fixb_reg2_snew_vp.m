% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPPRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta2,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 13:37
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPPRR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPPRR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPPRR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPPRR2_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 13:36:40
% EndTime: 2019-05-05 13:37:03
% DurationCPUTime: 24.06s
% Computational Cost: add. (91527->731), mult. (194909->940), div. (0->0), fcn. (131535->10), ass. (0->481)
t1186 = sin(pkin(9));
t1197 = qJD(1) ^ 2;
t1188 = cos(pkin(9));
t1280 = t1188 * qJDD(1);
t1147 = t1186 * t1197 - t1280;
t1182 = g(3) - qJDD(2);
t1108 = qJ(2) * t1147 - t1182 * t1186;
t1193 = sin(qJ(1));
t1196 = cos(qJ(1));
t1146 = qJDD(1) * t1186 + t1188 * t1197;
t1258 = t1196 * t1146 - t1147 * t1193;
t1266 = -qJ(2) * t1146 + t1188 * t1182;
t1365 = -pkin(6) * t1258 + t1108 * t1193 + t1196 * t1266;
t1192 = sin(qJ(5));
t1185 = sin(pkin(10));
t1187 = cos(pkin(10));
t1195 = cos(qJ(5));
t1241 = t1185 * t1195 + t1187 * t1192;
t1126 = t1241 * qJD(1);
t1128 = (-t1185 * t1192 + t1187 * t1195) * qJD(1);
t1298 = t1128 * t1126;
t1360 = qJDD(5) - t1298;
t1368 = t1192 * t1360;
t1367 = t1195 * t1360;
t1184 = qJDD(1) * pkin(2);
t1152 = g(1) * t1193 - t1196 * g(2);
t1141 = qJDD(1) * pkin(1) + t1152;
t1153 = g(1) * t1196 + g(2) * t1193;
t1142 = -pkin(1) * t1197 - t1153;
t1080 = -t1188 * t1141 + t1186 * t1142;
t1248 = qJDD(3) + t1080;
t1064 = -t1197 * qJ(3) - t1184 + t1248;
t1203 = -0.2e1 * qJD(4) * qJD(1) + t1064;
t1366 = -qJDD(1) * qJ(4) + t1203;
t1081 = t1186 * t1141 + t1188 * t1142;
t1260 = t1080 * t1186 + t1188 * t1081;
t1015 = t1080 * t1188 - t1081 * t1186;
t1316 = t1015 * t1193;
t1362 = t1196 * t1260 + t1316;
t1315 = t1015 * t1196;
t1361 = -t1193 * t1260 + t1315;
t1256 = t1146 * t1193 + t1196 * t1147;
t1335 = pkin(6) * t1256 + t1108 * t1196 - t1193 * t1266;
t1191 = sin(qJ(6));
t1194 = cos(qJ(6));
t1102 = -t1194 * qJD(5) + t1128 * t1191;
t1104 = qJD(5) * t1191 + t1128 * t1194;
t1046 = t1104 * t1102;
t1299 = t1128 * qJD(5);
t1341 = t1241 * qJDD(1);
t1075 = -t1341 - t1299;
t1067 = qJDD(6) - t1075;
t1343 = -t1046 + t1067;
t1356 = t1191 * t1343;
t1355 = t1194 * t1343;
t1179 = t1187 ^ 2;
t1171 = t1179 * t1197;
t1178 = t1185 ^ 2;
t1291 = t1178 * t1197;
t1354 = -t1291 - t1171;
t1210 = 0.2e1 * qJD(3) * qJD(1) + t1081;
t1204 = -t1197 * pkin(2) + t1210;
t1318 = qJDD(1) * qJ(3);
t1060 = t1204 + t1318;
t1261 = t1188 * t1060 + t1064 * t1186;
t988 = t1060 * t1186 - t1064 * t1188;
t1353 = -t1193 * t988 + t1196 * t1261;
t1352 = t1193 * t1261 + t1196 * t988;
t1342 = t1178 + t1179;
t1339 = t1197 * t1342;
t1137 = t1185 * t1339;
t1281 = t1185 * qJDD(1);
t1094 = t1137 * t1188 + t1186 * t1281;
t1097 = -t1137 * t1186 + t1185 * t1280;
t1351 = t1094 * t1196 + t1097 * t1193;
t1350 = t1094 * t1193 - t1097 * t1196;
t1068 = pkin(5) * t1126 - pkin(8) * t1128;
t1334 = qJD(5) ^ 2;
t1031 = -t1187 * t1182 + t1185 * t1366;
t1012 = -pkin(4) * t1291 - pkin(7) * t1281 + t1031;
t1289 = t1185 * t1197;
t1290 = t1185 * t1182;
t1200 = t1290 + (-pkin(4) * t1289 + (-pkin(7) - qJ(4)) * qJDD(1) + t1203) * t1187;
t932 = t1195 * t1012 + t1192 * t1200;
t888 = -pkin(5) * t1334 + qJDD(5) * pkin(8) - t1068 * t1126 + t932;
t1340 = -t1197 * qJ(4) + qJDD(4);
t1020 = (pkin(4) * t1185 + qJ(3)) * qJDD(1) + t1204 + t1340 + t1354 * pkin(7);
t1169 = t1187 * qJDD(1);
t1125 = t1169 * t1195 - t1192 * t1281;
t1302 = t1126 * qJD(5);
t1077 = -t1302 + t1125;
t905 = (-t1077 + t1302) * pkin(8) + (-t1075 + t1299) * pkin(5) + t1020;
t843 = t1191 * t888 - t1194 * t905;
t844 = t1191 * t905 + t1194 * t888;
t795 = t1191 * t843 + t1194 * t844;
t1030 = -t1187 * t1366 - t1290;
t959 = -t1187 * t1030 + t1031 * t1185;
t1100 = t1102 ^ 2;
t1101 = t1104 ^ 2;
t1120 = qJD(6) + t1126;
t1119 = t1120 ^ 2;
t1122 = t1126 ^ 2;
t1123 = t1128 ^ 2;
t1333 = pkin(3) * t959;
t1332 = -pkin(2) - qJ(4);
t1331 = pkin(1) * t1146;
t1330 = pkin(1) * t1147;
t1050 = t1060 + t1340;
t1329 = pkin(3) * t1050;
t1143 = t1342 * qJDD(1);
t1328 = pkin(3) * t1143;
t1327 = pkin(5) * t1192;
t1326 = qJ(4) * t959;
t931 = t1012 * t1192 - t1195 * t1200;
t887 = -qJDD(5) * pkin(5) - pkin(8) * t1334 + t1068 * t1128 + t931;
t1325 = -pkin(5) * t887 + pkin(8) * t795;
t855 = t1192 * t932 - t1195 * t931;
t1323 = t1185 * t855;
t1322 = t1187 * t855;
t882 = t1191 * t887;
t992 = t1046 + t1067;
t1321 = t1191 * t992;
t883 = t1194 * t887;
t1320 = t1194 * t992;
t1314 = t1020 * t1192;
t1313 = t1020 * t1195;
t1311 = t1050 * t1185;
t1072 = qJDD(5) + t1298;
t1310 = t1072 * t1192;
t1309 = t1072 * t1195;
t1304 = t1120 * t1191;
t1303 = t1120 * t1194;
t1301 = t1126 * t1192;
t1300 = t1126 * t1195;
t1297 = t1128 * t1192;
t1296 = t1128 * t1195;
t1295 = t1143 * t1186;
t1294 = t1143 * t1188;
t1044 = t1187 * t1050;
t1285 = -pkin(2) * t1064 + qJ(3) * t1060;
t1283 = t1178 * qJDD(1);
t1282 = t1179 * qJDD(1);
t1029 = -t1101 - t1119;
t939 = -t1029 * t1191 - t1320;
t1240 = -t1191 * qJDD(5) - t1194 * t1077;
t979 = (qJD(6) + t1120) * t1102 + t1240;
t1279 = pkin(5) * t979 + pkin(8) * t939 + t882;
t1018 = -t1119 - t1100;
t923 = t1018 * t1194 - t1356;
t1259 = t1194 * qJDD(5) - t1191 * t1077;
t1017 = -qJD(6) * t1104 + t1259;
t1059 = t1120 * t1104;
t975 = t1017 - t1059;
t1278 = pkin(5) * t975 + pkin(8) * t923 - t883;
t784 = t1192 * t795 - t1195 * t887;
t1277 = pkin(4) * t784 + t1325;
t1276 = -pkin(5) * t1195 - pkin(4);
t1115 = -t1123 - t1334;
t1025 = t1115 * t1195 - t1310;
t1275 = pkin(4) * t1025 - t932;
t856 = t1192 * t931 + t1195 * t932;
t810 = t1185 * t856 + t1322;
t854 = pkin(4) * t855;
t1274 = -pkin(3) * t810 - t854;
t1272 = t1192 * t1046;
t1271 = t1195 * t1046;
t1270 = t1102 * t1304;
t1269 = t1186 * t1298;
t1268 = t1188 * t1298;
t1156 = t1187 * t1289;
t1005 = -t1125 * t1195 - t1192 * t1341;
t1001 = pkin(4) * t1005;
t1007 = t1125 * t1192 - t1195 * t1341;
t926 = t1005 * t1187 + t1007 * t1185;
t1267 = -pkin(3) * t926 - t1001;
t1155 = t1185 * t1169;
t1136 = t1187 * t1339;
t1264 = qJ(4) * t1136 + t1044;
t869 = t1192 * t939 + t1195 * t979;
t1263 = pkin(4) * t869 + t1279;
t864 = t1192 * t923 + t1195 * t975;
t1262 = pkin(4) * t864 + t1278;
t1254 = -t1152 * t1193 - t1196 * t1153;
t1009 = t1100 + t1101;
t976 = (-qJD(6) + t1120) * t1104 + t1259;
t1058 = t1120 * t1102;
t1208 = -qJD(6) * t1102 - t1240;
t978 = t1058 + t1208;
t881 = t1191 * t978 + t1194 * t976;
t1253 = pkin(5) * t1009 + pkin(8) * t881 + t795;
t1252 = -pkin(2) * t959 + qJ(3) * t1050 - t1326;
t1151 = qJDD(1) * t1196 - t1193 * t1197;
t1251 = -pkin(6) * t1151 - g(3) * t1193;
t1070 = -t1122 - t1334;
t998 = t1070 * t1192 + t1367;
t1250 = pkin(4) * t998 - t931;
t858 = t1009 * t1195 + t1192 * t881;
t1249 = pkin(4) * t858 + t1253;
t785 = t1192 * t887 + t1195 * t795;
t760 = t1185 * t785 + t1187 * t784;
t1247 = -pkin(3) * t760 - t1277;
t794 = t1191 * t844 - t1194 * t843;
t1246 = qJ(4) * t1137 + t1311;
t1028 = -t1115 * t1192 - t1309;
t957 = t1025 * t1187 + t1028 * t1185;
t1245 = -pkin(3) * t957 - t1275;
t960 = t1030 * t1185 + t1031 * t1187;
t1105 = -t1155 * t1188 + t1156 * t1186;
t1106 = t1146 * t1187 * t1185;
t1244 = t1105 * t1196 + t1106 * t1193;
t1243 = t1105 * t1193 - t1106 * t1196;
t1242 = t1152 * t1196 - t1153 * t1193;
t1239 = pkin(2) * t1136 + qJ(3) * t1169 + t1264;
t751 = pkin(7) * t785 + (-pkin(8) * t1192 + t1276) * t794;
t757 = -pkin(7) * t784 + (-pkin(8) * t1195 + t1327) * t794;
t1238 = -qJ(4) * t760 - t1185 * t751 + t1187 * t757;
t879 = t1191 * t976 - t1194 * t978;
t782 = -pkin(8) * t879 - t794;
t859 = -t1009 * t1192 + t1195 * t881;
t766 = pkin(7) * t859 + t1192 * t782 + t1276 * t879;
t770 = -pkin(7) * t858 + t1195 * t782 + t1327 * t879;
t813 = t1185 * t859 + t1187 * t858;
t1237 = -qJ(4) * t813 - t1185 * t766 + t1187 * t770;
t922 = t1018 * t1191 + t1355;
t822 = -pkin(5) * t922 + t843;
t846 = -pkin(8) * t922 + t882;
t865 = -t1192 * t975 + t1195 * t923;
t774 = -pkin(4) * t922 + pkin(7) * t865 + t1192 * t846 + t1195 * t822;
t778 = -pkin(7) * t864 - t1192 * t822 + t1195 * t846;
t819 = t1185 * t865 + t1187 * t864;
t1236 = -qJ(4) * t819 - t1185 * t774 + t1187 * t778;
t938 = t1029 * t1194 - t1321;
t826 = -pkin(5) * t938 + t844;
t849 = -pkin(8) * t938 + t883;
t870 = -t1192 * t979 + t1195 * t939;
t775 = -pkin(4) * t938 + pkin(7) * t870 + t1192 * t849 + t1195 * t826;
t781 = -pkin(7) * t869 - t1192 * t826 + t1195 * t849;
t824 = t1185 * t870 + t1187 * t869;
t1235 = -qJ(4) * t824 - t1185 * t775 + t1187 * t781;
t1045 = -t1122 - t1123;
t837 = -pkin(4) * t1045 + pkin(7) * t1007 + t856;
t842 = -pkin(7) * t1005 - t855;
t1234 = -qJ(4) * t926 - t1185 * t837 + t1187 * t842;
t1074 = t1341 + 0.2e1 * t1299;
t999 = t1070 * t1195 - t1368;
t898 = -pkin(4) * t1074 + pkin(7) * t999 - t1313;
t920 = t1185 * t999 + t1187 * t998;
t941 = -pkin(7) * t998 + t1314;
t1233 = -qJ(4) * t920 - t1185 * t898 + t1187 * t941;
t1076 = -0.2e1 * t1302 + t1125;
t912 = -pkin(4) * t1076 + pkin(7) * t1028 + t1314;
t951 = -pkin(7) * t1025 + t1313;
t1232 = -qJ(4) * t957 - t1185 * t912 + t1187 * t951;
t1231 = -pkin(3) * t819 - t1262;
t1230 = -pkin(3) * t824 - t1263;
t1229 = -0.2e1 * t1184 + t1248;
t1228 = qJ(4) * t1143 - t959;
t1227 = -pkin(3) * t920 - t1250;
t1226 = -pkin(3) * t813 - t1249;
t1225 = pkin(3) * t794 - t1185 * t757 - t1187 * t751;
t1224 = pkin(3) * t879 - t1185 * t770 - t1187 * t766;
t1223 = pkin(3) * t922 - t1185 * t778 - t1187 * t774;
t1222 = pkin(3) * t938 - t1185 * t781 - t1187 * t775;
t1221 = pkin(3) * t1045 - t1185 * t842 - t1187 * t837;
t1220 = pkin(3) * t1074 - t1185 * t941 - t1187 * t898;
t1219 = pkin(3) * t1076 - t1185 * t951 - t1187 * t912;
t1218 = pkin(2) * t1137 + qJ(3) * t1281 + t1246;
t1217 = -pkin(2) * t760 + qJ(3) * t794 + t1238;
t1216 = -pkin(2) * t813 + qJ(3) * t879 + t1237;
t1215 = -pkin(2) * t819 + qJ(3) * t922 + t1236;
t1214 = -pkin(2) * t824 + qJ(3) * t938 + t1235;
t1213 = -pkin(2) * t926 + qJ(3) * t1045 + t1234;
t1212 = -pkin(2) * t920 + qJ(3) * t1074 + t1233;
t1211 = -pkin(2) * t957 + qJ(3) * t1076 + t1232;
t845 = -pkin(4) * t1020 + pkin(7) * t856;
t1209 = pkin(3) * t1020 + pkin(7) * t1323 - t1187 * t845;
t1207 = -pkin(7) * t1322 - qJ(4) * t810 - t1185 * t845;
t1206 = pkin(2) * t1143 + qJ(3) * t1354 + t1228;
t1205 = 0.2e1 * t1318 + t1210;
t1202 = -pkin(2) * t810 + qJ(3) * t1020 + t1207;
t1154 = -0.2e1 * t1155;
t1150 = qJDD(1) * t1193 + t1196 * t1197;
t1148 = -t1171 + t1291;
t1144 = (t1178 - t1179) * qJDD(1);
t1121 = -pkin(6) * t1150 + g(3) * t1196;
t1114 = -t1123 + t1334;
t1113 = t1122 - t1334;
t1099 = -t1136 * t1186 + t1187 * t1280;
t1096 = t1136 * t1188 + t1169 * t1186;
t1085 = t1188 * t1354 - t1295;
t1084 = -t1144 * t1186 - t1148 * t1188;
t1083 = t1186 * t1354 + t1294;
t1082 = t1144 * t1188 - t1148 * t1186;
t1078 = t1123 - t1122;
t1062 = (t1297 - t1300) * qJD(5);
t1061 = (-t1296 - t1301) * qJD(5);
t1056 = -t1101 + t1119;
t1055 = t1100 - t1119;
t1054 = -t1080 - t1330;
t1053 = -t1081 - t1331;
t1052 = t1104 * t1303;
t1047 = t1229 + t1330;
t1043 = t1101 - t1100;
t1042 = t1205 + t1331;
t1039 = -pkin(3) * t1281 - t1044;
t1038 = -pkin(3) * t1169 + t1311;
t1037 = -qJD(5) * t1297 + t1077 * t1195;
t1036 = qJD(5) * t1296 + t1077 * t1192;
t1035 = qJD(5) * t1300 - t1075 * t1192;
t1034 = qJD(5) * t1301 + t1075 * t1195;
t1033 = -t1096 * t1193 + t1099 * t1196;
t1032 = t1096 * t1196 + t1099 * t1193;
t1027 = -t1114 * t1192 + t1367;
t1026 = t1113 * t1195 - t1310;
t1024 = t1114 * t1195 + t1368;
t1023 = t1113 * t1192 + t1309;
t1010 = pkin(1) * t1015;
t1008 = -t1074 * t1195 - t1076 * t1192;
t1006 = -t1074 * t1192 + t1076 * t1195;
t1003 = -pkin(3) * t1137 - t1030;
t1002 = -pkin(3) * t1136 - t1031;
t994 = pkin(1) * t1182 + qJ(2) * t1260;
t986 = (-t1102 * t1194 + t1104 * t1191) * t1120;
t985 = -t1052 - t1270;
t984 = t1061 * t1187 + t1062 * t1185;
t983 = -t1061 * t1185 + t1062 * t1187;
t982 = qJDD(5) * t1188 + t1186 * t984;
t981 = qJDD(5) * t1186 - t1188 * t984;
t980 = -qJ(2) * t988 + (-pkin(2) * t1186 + qJ(3) * t1188) * t1182;
t977 = -t1058 + t1208;
t974 = -t1017 - t1059;
t973 = qJ(2) * t1261 + (pkin(2) * t1188 + qJ(3) * t1186 + pkin(1)) * t1182;
t970 = pkin(1) * t1096 + t1239;
t969 = pkin(1) * t1094 + t1218;
t968 = -t1104 * t1304 + t1194 * t1208;
t967 = -t1191 * t1208 - t1052;
t966 = -t1017 * t1191 + t1102 * t1303;
t965 = t1017 * t1194 + t1270;
t964 = t1036 * t1187 + t1037 * t1185;
t963 = -t1036 * t1185 + t1037 * t1187;
t962 = t1034 * t1187 + t1035 * t1185;
t961 = -t1034 * t1185 + t1035 * t1187;
t958 = -t1025 * t1185 + t1028 * t1187;
t956 = t1024 * t1187 + t1027 * t1185;
t955 = t1023 * t1187 + t1026 * t1185;
t954 = -t1024 * t1185 + t1027 * t1187;
t953 = -t1023 * t1185 + t1026 * t1187;
t949 = t1067 * t1192 + t1195 * t986;
t948 = -t1067 * t1195 + t1192 * t986;
t946 = t1055 * t1194 - t1321;
t945 = -t1056 * t1191 + t1355;
t944 = t1055 * t1191 + t1320;
t943 = t1056 * t1194 + t1356;
t942 = -pkin(3) * t1354 + t960;
t937 = t1125 * t1188 + t1186 * t956;
t936 = t1186 * t955 - t1188 * t1341;
t935 = t1125 * t1186 - t1188 * t956;
t934 = -t1186 * t1341 - t1188 * t955;
t928 = -t1005 * t1185 + t1007 * t1187;
t927 = t1006 * t1187 + t1008 * t1185;
t925 = -t1006 * t1185 + t1008 * t1187;
t921 = -t1185 * t998 + t1187 * t999;
t916 = t1186 * t964 + t1268;
t915 = t1186 * t962 - t1268;
t914 = -t1188 * t964 + t1269;
t913 = -t1188 * t962 - t1269;
t911 = -qJ(2) * t1094 + t1003 * t1188 + t1039 * t1186;
t910 = -qJ(2) * t1096 + t1002 * t1188 + t1038 * t1186;
t909 = qJ(2) * t1097 + t1003 * t1186 - t1039 * t1188;
t908 = qJ(2) * t1099 + t1002 * t1186 - t1038 * t1188;
t907 = t1076 * t1188 + t1186 * t957;
t906 = t1076 * t1186 - t1188 * t957;
t904 = t1195 * t968 + t1272;
t903 = t1195 * t966 - t1272;
t902 = t1192 * t968 - t1271;
t901 = t1192 * t966 + t1271;
t899 = pkin(1) * t988 + t1285;
t897 = t1050 * t1188 + t1186 * t959;
t896 = t1050 * t1186 - t1188 * t959;
t895 = -pkin(3) * t1294 - qJ(2) * t1083 + t1186 * t942;
t894 = -pkin(3) * t1295 + qJ(2) * t1085 - t1188 * t942;
t893 = pkin(1) * t1083 + t1206;
t892 = t1078 * t1188 + t1186 * t927;
t891 = t1078 * t1186 - t1188 * t927;
t890 = t1074 * t1188 + t1186 * t920;
t889 = t1074 * t1186 - t1188 * t920;
t885 = t1045 * t1188 + t1186 * t926;
t884 = t1045 * t1186 - t1188 * t926;
t880 = -t1191 * t977 + t1194 * t975;
t878 = t1191 * t975 + t1194 * t977;
t875 = -t1192 * t974 + t1195 * t946;
t874 = t1192 * t978 + t1195 * t945;
t873 = t1192 * t946 + t1195 * t974;
t872 = t1192 * t945 - t1195 * t978;
t871 = -qJ(3) * t960 + t1333;
t867 = t1185 * t949 + t1187 * t948;
t866 = -t1185 * t948 + t1187 * t949;
t862 = t1043 * t1192 + t1195 * t880;
t861 = -t1043 * t1195 + t1192 * t880;
t860 = t1332 * t960 + t1329;
t853 = t1185 * t904 + t1187 * t902;
t852 = t1185 * t903 + t1187 * t901;
t851 = -t1185 * t902 + t1187 * t904;
t850 = -t1185 * t901 + t1187 * t903;
t848 = t1186 * t867 + t1188 * t985;
t847 = t1186 * t985 - t1188 * t867;
t838 = -qJ(3) * t928 - t1267;
t836 = -qJ(3) * t958 - t1245;
t835 = t1186 * t853 - t1188 * t967;
t834 = t1186 * t852 + t1188 * t965;
t833 = -t1186 * t967 - t1188 * t853;
t832 = t1186 * t965 - t1188 * t852;
t831 = pkin(1) * t896 + t1252;
t830 = t1185 * t875 + t1187 * t873;
t829 = t1185 * t874 + t1187 * t872;
t828 = -t1185 * t873 + t1187 * t875;
t827 = -t1185 * t872 + t1187 * t874;
t825 = -t1185 * t869 + t1187 * t870;
t821 = -qJ(3) * t921 - t1227;
t820 = -t1185 * t864 + t1187 * t865;
t817 = t1185 * t862 + t1187 * t861;
t816 = -t1185 * t861 + t1187 * t862;
t815 = t1332 * t958 + t1219;
t814 = -t1185 * t858 + t1187 * t859;
t811 = t1187 * t856 - t1323;
t808 = t1186 * t830 + t1188 * t944;
t807 = t1186 * t829 + t1188 * t943;
t806 = t1186 * t944 - t1188 * t830;
t805 = t1186 * t943 - t1188 * t829;
t804 = t1332 * t921 + t1220;
t803 = t1186 * t824 + t1188 * t938;
t802 = t1186 * t938 - t1188 * t824;
t801 = t1020 * t1188 + t1186 * t810;
t800 = t1020 * t1186 - t1188 * t810;
t799 = t1186 * t819 + t1188 * t922;
t798 = t1186 * t922 - t1188 * t819;
t797 = -qJ(2) * t896 - t1186 * t860 + t1188 * t871;
t796 = pkin(1) * t906 + t1211;
t791 = t1186 * t817 + t1188 * t878;
t790 = t1186 * t878 - t1188 * t817;
t789 = t1186 * t813 + t1188 * t879;
t788 = t1186 * t879 - t1188 * t813;
t787 = -pkin(1) * t960 + qJ(2) * t897 + t1186 * t871 + t1188 * t860;
t786 = pkin(1) * t889 + t1212;
t779 = t1332 * t928 + t1221;
t776 = -qJ(2) * t906 - t1186 * t815 + t1188 * t836;
t773 = -pkin(1) * t958 + qJ(2) * t907 + t1186 * t836 + t1188 * t815;
t772 = pkin(1) * t884 + t1213;
t771 = -qJ(2) * t889 - t1186 * t804 + t1188 * t821;
t768 = -qJ(3) * t811 - t1274;
t767 = -pkin(1) * t921 + qJ(2) * t890 + t1186 * t821 + t1188 * t804;
t765 = -qJ(2) * t884 - t1186 * t779 + t1188 * t838;
t764 = -qJ(3) * t825 - t1230;
t763 = -qJ(3) * t820 - t1231;
t762 = -pkin(1) * t928 + qJ(2) * t885 + t1186 * t838 + t1188 * t779;
t761 = -t1185 * t784 + t1187 * t785;
t758 = t1332 * t811 + t1209;
t755 = -qJ(3) * t814 - t1226;
t754 = pkin(1) * t800 + t1202;
t753 = t1186 * t760 + t1188 * t794;
t752 = t1186 * t794 - t1188 * t760;
t750 = t1332 * t825 + t1222;
t749 = t1332 * t820 + t1223;
t748 = -qJ(2) * t800 - t1186 * t758 + t1188 * t768;
t747 = pkin(1) * t802 + t1214;
t746 = pkin(1) * t798 + t1215;
t745 = t1332 * t814 + t1224;
t744 = -pkin(1) * t811 + qJ(2) * t801 + t1186 * t768 + t1188 * t758;
t743 = pkin(1) * t788 + t1216;
t742 = -qJ(3) * t761 - t1247;
t741 = -qJ(2) * t802 - t1186 * t750 + t1188 * t764;
t740 = -qJ(2) * t798 - t1186 * t749 + t1188 * t763;
t739 = -pkin(1) * t825 + qJ(2) * t803 + t1186 * t764 + t1188 * t750;
t738 = -pkin(1) * t820 + qJ(2) * t799 + t1186 * t763 + t1188 * t749;
t737 = -qJ(2) * t788 - t1186 * t745 + t1188 * t755;
t736 = -pkin(1) * t814 + qJ(2) * t789 + t1186 * t755 + t1188 * t745;
t735 = t1332 * t761 + t1225;
t734 = pkin(1) * t752 + t1217;
t733 = -qJ(2) * t752 - t1186 * t735 + t1188 * t742;
t732 = -pkin(1) * t761 + qJ(2) * t753 + t1186 * t742 + t1188 * t735;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1151, 0, -t1150, 0, t1251, -t1121, -t1242, -pkin(6) * t1242, 0, 0, -t1256, 0, -t1258, 0, t1335, -t1365, t1361, pkin(6) * t1361 + qJ(2) * t1315 - t1193 * t994, 0, t1256, t1258, 0, 0, 0, -t1352, -t1335, t1365, -pkin(6) * t1352 - t1193 * t973 + t1196 * t980, -t1243, -t1082 * t1193 + t1084 * t1196, t1033, t1243, t1350, 0, -pkin(6) * t1351 - t1193 * t909 + t1196 * t911, -pkin(6) * t1032 - t1193 * t908 + t1196 * t910, t1196 * t895 - t1193 * t894 - pkin(6) * (t1083 * t1196 + t1085 * t1193), t1196 * t797 - t1193 * t787 - pkin(6) * (t1193 * t897 + t1196 * t896), -t1193 * t914 + t1196 * t916, -t1193 * t891 + t1196 * t892, -t1193 * t935 + t1196 * t937, -t1193 * t913 + t1196 * t915, -t1193 * t934 + t1196 * t936, -t1193 * t981 + t1196 * t982, t1196 * t771 - t1193 * t767 - pkin(6) * (t1193 * t890 + t1196 * t889), t1196 * t776 - t1193 * t773 - pkin(6) * (t1193 * t907 + t1196 * t906), t1196 * t765 - t1193 * t762 - pkin(6) * (t1193 * t885 + t1196 * t884), t1196 * t748 - t1193 * t744 - pkin(6) * (t1193 * t801 + t1196 * t800), -t1193 * t833 + t1196 * t835, -t1193 * t790 + t1196 * t791, -t1193 * t805 + t1196 * t807, -t1193 * t832 + t1196 * t834, -t1193 * t806 + t1196 * t808, -t1193 * t847 + t1196 * t848, t1196 * t740 - t1193 * t738 - pkin(6) * (t1193 * t799 + t1196 * t798), t1196 * t741 - t1193 * t739 - pkin(6) * (t1193 * t803 + t1196 * t802), t1196 * t737 - t1193 * t736 - pkin(6) * (t1193 * t789 + t1196 * t788), t1196 * t733 - t1193 * t732 - pkin(6) * (t1193 * t753 + t1196 * t752); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1150, 0, t1151, 0, t1121, t1251, t1254, pkin(6) * t1254, 0, 0, t1258, 0, -t1256, 0, t1365, t1335, t1362, pkin(6) * t1362 + qJ(2) * t1316 + t1196 * t994, 0, -t1258, t1256, 0, 0, 0, t1353, -t1365, -t1335, pkin(6) * t1353 + t1193 * t980 + t1196 * t973, t1244, t1082 * t1196 + t1084 * t1193, t1032, -t1244, -t1351, 0, -pkin(6) * t1350 + t1193 * t911 + t1196 * t909, pkin(6) * t1033 + t1193 * t910 + t1196 * t908, t1193 * t895 + t1196 * t894 + pkin(6) * (-t1083 * t1193 + t1085 * t1196), t1193 * t797 + t1196 * t787 + pkin(6) * (-t1193 * t896 + t1196 * t897), t1193 * t916 + t1196 * t914, t1193 * t892 + t1196 * t891, t1193 * t937 + t1196 * t935, t1193 * t915 + t1196 * t913, t1193 * t936 + t1196 * t934, t1193 * t982 + t1196 * t981, t1193 * t771 + t1196 * t767 + pkin(6) * (-t1193 * t889 + t1196 * t890), t1193 * t776 + t1196 * t773 + pkin(6) * (-t1193 * t906 + t1196 * t907), t1193 * t765 + t1196 * t762 + pkin(6) * (-t1193 * t884 + t1196 * t885), t1193 * t748 + t1196 * t744 + pkin(6) * (-t1193 * t800 + t1196 * t801), t1193 * t835 + t1196 * t833, t1193 * t791 + t1196 * t790, t1193 * t807 + t1196 * t805, t1193 * t834 + t1196 * t832, t1193 * t808 + t1196 * t806, t1193 * t848 + t1196 * t847, t1193 * t740 + t1196 * t738 + pkin(6) * (-t1193 * t798 + t1196 * t799), t1193 * t741 + t1196 * t739 + pkin(6) * (-t1193 * t802 + t1196 * t803), t1193 * t737 + t1196 * t736 + pkin(6) * (-t1193 * t788 + t1196 * t789), t1193 * t733 + t1196 * t732 + pkin(6) * (-t1193 * t752 + t1196 * t753); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1152, t1153, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1054, t1053, 0, -t1010, qJDD(1), 0, 0, 0, 0, 0, 0, t1047, t1042, t899, t1282, t1154, 0, t1283, 0, 0, t969, t970, t893, t831, t963, t925, t954, t961, t953, t983, t786, t796, t772, t754, t851, t816, t827, t850, t828, t866, t746, t747, t743, t734; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1197, 0, 0, -g(3), -t1152, 0, 0, 0, -t1147, 0, -t1146, 0, t1108, -t1266, t1015, qJ(2) * t1015, 0, t1147, t1146, 0, 0, 0, -t988, -t1108, t1266, t980, t1106, t1084, t1099, -t1106, -t1097, 0, t911, t910, t895, t797, t916, t892, t937, t915, t936, t982, t771, t776, t765, t748, t835, t791, t807, t834, t808, t848, t740, t741, t737, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, 0, qJDD(1), 0, g(3), 0, -t1153, 0, 0, 0, t1146, 0, -t1147, 0, t1266, t1108, t1260, t994, 0, -t1146, t1147, 0, 0, 0, t1261, -t1266, -t1108, t973, t1105, t1082, t1096, -t1105, -t1094, 0, t909, t908, t894, t787, t914, t891, t935, t913, t934, t981, t767, t773, t762, t744, t833, t790, t805, t832, t806, t847, t738, t739, t736, t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1152, t1153, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1054, t1053, 0, -t1010, qJDD(1), 0, 0, 0, 0, 0, 0, t1047, t1042, t899, t1282, t1154, 0, t1283, 0, 0, t969, t970, t893, t831, t963, t925, t954, t961, t953, t983, t786, t796, t772, t754, t851, t816, t827, t850, t828, t866, t746, t747, t743, t734; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1197, 0, 0, -t1182, t1080, 0, 0, -qJDD(1), t1197, 0, 0, 0, t1064, 0, t1182, qJ(3) * t1182, t1156, -t1148, t1169, -t1156, -t1281, 0, t1003, t1002, -t1328, t871, t1298, t1078, t1125, -t1298, -t1341, qJDD(5), t821, t836, t838, t768, -t967, t878, t943, t965, t944, t985, t763, t764, t755, t742; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, 0, qJDD(1), 0, t1182, 0, t1081, 0, 0, -t1197, -qJDD(1), 0, 0, 0, t1060, -t1182, 0, pkin(2) * t1182, -t1155, t1144, t1136, t1155, -t1137, 0, -t1039, -t1038, -t942, t860, -t964, -t927, -t956, -t962, -t955, -t984, t804, t815, t779, t758, -t853, -t817, -t829, -t852, -t830, -t867, t749, t750, t745, t735; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1080, -t1081, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1229, t1205, t1285, t1282, t1154, 0, t1283, 0, 0, t1218, t1239, t1206, t1252, t963, t925, t954, t961, t953, t983, t1212, t1211, t1213, t1202, t851, t816, t827, t850, t828, t866, t1215, t1214, t1216, t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1064, t1060, 0, t1282, t1154, 0, t1283, 0, 0, t1246, t1264, t1228, -t1326, t963, t925, t954, t961, t953, t983, t1233, t1232, t1234, t1207, t851, t816, t827, t850, t828, t866, t1236, t1235, t1237, t1238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1197, 0, 0, 0, -t1064, 0, -t1182, 0, -t1156, t1148, -t1169, t1156, t1281, 0, -t1003, -t1002, t1328, -t1333, -t1298, -t1078, -t1125, t1298, t1341, -qJDD(5), t1227, t1245, t1267, t1274, t967, -t878, -t943, -t965, -t944, -t985, t1231, t1230, t1226, t1247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, qJDD(1), 0, 0, 0, -t1060, t1182, 0, 0, t1155, -t1144, -t1136, -t1155, t1137, 0, t1039, t1038, t942, qJ(4) * t960 - t1329, t964, t927, t956, t962, t955, t984, qJ(4) * t921 - t1220, qJ(4) * t958 - t1219, qJ(4) * t928 - t1221, qJ(4) * t811 - t1209, t853, t817, t829, t852, t830, t867, qJ(4) * t820 - t1223, qJ(4) * t825 - t1222, qJ(4) * t814 - t1224, qJ(4) * t761 - t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1169, -t1281, -t1156, 0, t1291, 0, 0, t1050, t1030, 0, t1037, t1008, t1027, t1035, t1026, t1062, t941, t951, t842, -pkin(7) * t855, t904, t862, t874, t903, t875, t949, t778, t781, t770, t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1169, -t1171, -t1281, t1156, 0, -t1050, 0, t1031, 0, t1036, t1006, t1024, t1034, t1023, t1061, t898, t912, t837, t845, t902, t861, t872, t901, t873, t948, t774, t775, t766, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1156, -t1148, t1169, -t1156, -t1281, 0, -t1030, -t1031, 0, 0, t1298, t1078, t1125, -t1298, -t1341, qJDD(5), t1250, t1275, t1001, t854, -t967, t878, t943, t965, t944, t985, t1262, t1263, t1249, t1277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1077, -t1074, t1360, t1302, t1113, -t1302, 0, t1020, t931, 0, t968, t880, t945, t966, t946, t986, t846, t849, t782, -pkin(8) * t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1299, t1076, t1114, t1075, t1072, -t1299, -t1020, 0, t932, 0, -t1046, -t1043, -t978, t1046, t974, -t1067, t822, t826, -pkin(5) * t879, -pkin(5) * t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1298, t1078, t1125, -t1298, -t1341, qJDD(5), -t931, -t932, 0, 0, -t967, t878, t943, t965, t944, t985, t1278, t1279, t1253, t1325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1208, t975, t1343, t1058, t1055, -t1058, 0, t887, t843, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1059, t977, t1056, t1017, t992, -t1059, -t887, 0, t844, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1046, t1043, t978, -t1046, -t974, t1067, -t843, -t844, 0, 0;];
m_new_reg  = t1;
