% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRP1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:59:18
% EndTime: 2019-03-08 23:59:31
% DurationCPUTime: 5.46s
% Computational Cost: add. (8851->487), mult. (21964->632), div. (0->0), fcn. (16596->10), ass. (0->267)
t196 = sin(qJ(2));
t191 = sin(pkin(6));
t285 = qJD(1) * t191;
t261 = t196 * t285;
t195 = sin(qJ(3));
t279 = qJD(3) * t195;
t217 = pkin(3) * t279 - t261;
t198 = cos(qJ(3));
t344 = cos(qJ(4));
t254 = t344 * qJD(3);
t237 = t198 * t254;
t253 = t344 * qJD(4);
t274 = qJD(3) + qJD(4);
t194 = sin(qJ(4));
t293 = t194 * t195;
t124 = -t198 * t253 + t274 * t293 - t237;
t292 = t194 * t198;
t159 = t195 * t344 + t292;
t125 = t274 * t159;
t360 = -pkin(4) * t125 - pkin(10) * t124 - t217;
t345 = -pkin(9) - pkin(8);
t263 = qJD(3) * t345;
t161 = t195 * t263;
t262 = t344 * t198;
t220 = t262 - t293;
t199 = cos(qJ(2));
t256 = t199 * t285;
t169 = t345 * t195;
t170 = t345 * t198;
t349 = t169 * t344 + t170 * t194;
t353 = -qJD(4) * t349 - t161 * t344 + t220 * t256 - t263 * t292;
t164 = qJD(2) * pkin(8) + t261;
t246 = pkin(9) * qJD(2) + t164;
t228 = t246 * t195;
t192 = cos(pkin(6));
t295 = t192 * t198;
t176 = qJD(1) * t295;
t283 = qJD(2) * t191;
t252 = qJD(1) * t283;
t236 = t199 * t252;
t288 = qJD(3) * t176 + t198 * t236;
t96 = -qJD(3) * t228 + t288;
t332 = t194 * t96;
t284 = qJD(1) * t195;
t255 = t192 * t284;
t130 = t198 * t246 + t255;
t120 = t344 * t130;
t129 = t176 - t228;
t121 = qJD(3) * pkin(3) + t129;
t79 = t121 * t194 + t120;
t97 = -qJD(3) * t130 - t195 * t236;
t95 = t344 * t97;
t30 = qJD(4) * t79 + t332 - t95;
t154 = t159 * qJD(2);
t193 = sin(qJ(5));
t197 = cos(qJ(5));
t136 = t197 * t154 + t193 * t274;
t215 = t254 + t253;
t212 = t198 * t215;
t275 = qJD(2) * qJD(3);
t251 = t195 * t275;
t282 = qJD(2) * t195;
t258 = t194 * t282;
t287 = qJD(4) * t258 + t194 * t251;
t205 = -qJD(2) * t212 + t287;
t203 = t193 * t205;
t76 = qJD(5) * t136 - t203;
t17 = t76 * pkin(5) + t30;
t276 = qJD(5) * t197;
t134 = t154 * t193 - t197 * t274;
t247 = pkin(5) * t134 + qJD(6);
t119 = t194 * t130;
t78 = t121 * t344 - t119;
t71 = -pkin(4) * t274 - t78;
t56 = t247 + t71;
t359 = t17 * t193 + t276 * t56;
t358 = t193 * t30 + t276 * t71;
t241 = pkin(3) * t253;
t152 = -qJD(2) * t262 + t258;
t115 = pkin(4) * t154 + pkin(10) * t152;
t270 = pkin(3) * t282;
t103 = t115 + t270;
t83 = t129 * t344 - t119;
t46 = t103 * t193 + t197 * t83;
t357 = -t197 * t241 + t46;
t277 = qJD(5) * t193;
t356 = t17 * t197 - t277 * t56;
t355 = t30 * t197 - t277 * t71;
t148 = qJD(5) + t152;
t311 = t134 * t148;
t242 = qJD(5) * t274;
t75 = t154 * t277 + (t205 - t242) * t197;
t354 = -t75 - t311;
t278 = qJD(4) * t194;
t82 = t129 * t194 + t120;
t234 = pkin(3) * t278 - t82;
t139 = t169 * t194 - t170 * t344;
t317 = qJD(4) * t139 - t159 * t256 + t194 * t161 - t237 * t345;
t352 = -t193 * t353 + t197 * t360;
t186 = -pkin(3) * t198 - pkin(2);
t116 = -pkin(4) * t220 - pkin(10) * t159 + t186;
t351 = -t116 * t276 + t193 * t360 + t197 * t353;
t128 = t197 * t139;
t81 = t116 * t193 + t128;
t305 = t152 * t193;
t350 = (t277 + t305) * pkin(5);
t348 = -qJ(6) * t305 + qJD(6) * t197;
t72 = pkin(10) * t274 + t79;
t144 = qJD(2) * t186 - t256;
t93 = pkin(4) * t152 - pkin(10) * t154 + t144;
t42 = -t193 * t72 + t197 * t93;
t43 = t193 * t93 + t197 * t72;
t347 = -t193 * t42 + t197 * t43;
t346 = t136 ^ 2;
t343 = pkin(3) * t194;
t114 = t125 * qJD(2);
t342 = pkin(5) * t114;
t341 = t197 * pkin(5);
t29 = t121 * t253 - t130 * t278 + t194 * t97 + t344 * t96;
t149 = pkin(3) * t251 + t196 * t252;
t61 = t114 * pkin(4) + pkin(10) * t205 + t149;
t248 = -t193 * t61 - t197 * t29 - t276 * t93 + t277 * t72;
t7 = t248 * t197;
t340 = -qJ(6) - pkin(10);
t31 = -qJ(6) * t136 + t42;
t24 = pkin(5) * t148 + t31;
t339 = t24 - t31;
t338 = pkin(3) * qJD(4);
t337 = qJD(2) * pkin(2);
t298 = t191 * t196;
t150 = -t195 * t298 + t295;
t151 = t192 * t195 + t198 * t298;
t221 = t150 * t344 - t151 * t194;
t336 = t221 * t30;
t335 = t349 * t30;
t329 = t75 * t193;
t328 = t76 * t197;
t225 = qJ(6) * t124 - qJD(6) * t159;
t327 = -pkin(5) * t125 - t225 * t197 - (-t128 + (qJ(6) * t159 - t116) * t193) * qJD(5) + t352;
t326 = qJD(5) * t81 + t352;
t257 = t159 * t276;
t325 = qJ(6) * t257 - (-qJD(5) * t139 + t225) * t193 + t351;
t324 = t139 * t277 + t351;
t183 = pkin(10) + t343;
t289 = -qJ(6) - t183;
t244 = qJD(5) * t289;
t323 = t193 * t244 + t348 - t357;
t188 = t197 * qJ(6);
t232 = pkin(5) * t154 + t152 * t188;
t45 = t103 * t197 - t193 * t83;
t322 = (-t241 - qJD(6)) * t193 + t197 * t244 - t232 - t45;
t313 = t124 * t193;
t219 = t257 - t313;
t321 = pkin(5) * t219 + t317;
t249 = qJD(5) * t340;
t51 = t115 * t193 + t197 * t78;
t320 = t193 * t249 + t348 - t51;
t50 = t115 * t197 - t193 * t78;
t319 = -t193 * qJD(6) + t197 * t249 - t232 - t50;
t318 = t350 + t234;
t316 = t114 * t220;
t315 = t114 * t193;
t314 = t114 * t197;
t312 = t124 * t197;
t310 = t134 * t193;
t309 = t136 * t134;
t308 = t136 * t148;
t307 = t136 * t197;
t306 = t148 * t154;
t304 = t152 * t197;
t303 = t154 * t152;
t302 = t159 * t193;
t301 = t159 * t197;
t300 = t164 * t195;
t299 = t164 * t198;
t297 = t191 * t199;
t201 = qJD(2) ^ 2;
t296 = t191 * t201;
t200 = qJD(3) ^ 2;
t291 = t200 * t195;
t290 = t200 * t198;
t189 = t195 ^ 2;
t190 = t198 ^ 2;
t286 = t189 - t190;
t281 = qJD(2) * t196;
t280 = qJD(2) * t198;
t273 = -t304 * t42 - t305 * t43 - t7;
t271 = t344 * pkin(3);
t265 = t196 * t296;
t264 = t195 * t201 * t198;
t260 = t191 * t281;
t259 = t199 * t283;
t245 = -t144 * t154 + t95;
t80 = t116 * t197 - t139 * t193;
t243 = t148 * t197;
t240 = t195 * t259;
t239 = t198 * t259;
t184 = -t271 - pkin(4);
t238 = t43 * t154 + t358;
t235 = t198 * t251;
t233 = -t79 + t350;
t165 = -t256 - t337;
t231 = -t165 - t256;
t32 = -qJ(6) * t134 + t43;
t230 = t193 * t32 + t197 * t24;
t229 = t193 * t43 + t197 * t42;
t226 = -t114 * t183 + t152 * t71;
t224 = -t42 * t154 - t355;
t223 = qJ(6) * t76 + t248;
t105 = t150 * t194 + t151 * t344;
t91 = -t105 * t193 - t197 * t297;
t222 = -t105 * t197 + t193 * t297;
t141 = t255 + t299;
t218 = -t159 * t277 - t312;
t216 = t154 * t32 + t304 * t56 + t359;
t214 = qJD(3) * (-t231 - t337);
t213 = -t154 * t24 + t305 * t56 - t356;
t9 = -qJD(5) * t43 - t193 * t29 + t197 * t61;
t211 = -qJD(5) * t229 - t9 * t193;
t210 = t211 - t7;
t207 = qJ(6) * t75 + t9;
t2 = -qJD(6) * t136 + t207 + t342;
t6 = -qJD(6) * t134 - t223;
t209 = -qJD(5) * t230 - t193 * t2 + t197 * t6 - t24 * t304 - t305 * t32;
t110 = -t164 * t279 + t288;
t111 = -qJD(3) * t299 + (-qJD(3) * t192 - t259) * t284;
t140 = t176 - t300;
t208 = t110 * t198 - t111 * t195 + (-t140 * t198 - t141 * t195) * qJD(3);
t206 = -t215 * t280 + t287;
t204 = t144 * t152 - t29;
t202 = -t154 * t276 - t193 * t242 + t203;
t185 = -pkin(4) - t341;
t168 = pkin(10) * t197 + t188;
t167 = t340 * t193;
t166 = t184 - t341;
t157 = t183 * t197 + t188;
t156 = t289 * t193;
t131 = t134 ^ 2;
t127 = -qJD(3) * t151 - t240;
t126 = qJD(3) * t150 + t239;
t100 = pkin(5) * t302 - t349;
t94 = -t152 ^ 2 + t154 ^ 2;
t88 = t152 * t274 - t205;
t65 = -t131 + t346;
t64 = -qJ(6) * t302 + t81;
t58 = t125 * t148 - t316;
t57 = -pkin(5) * t220 - t159 * t188 + t80;
t53 = qJD(4) * t105 + t126 * t194 - t127 * t344;
t52 = qJD(4) * t221 + t126 * t344 + t127 * t194;
t48 = t202 + t308;
t47 = -t75 + t311;
t40 = -t136 * t154 + t148 * t243 + t315;
t39 = -t148 ^ 2 * t193 + t134 * t154 + t314;
t37 = t148 * t310 - t328;
t36 = t136 * t243 - t329;
t26 = qJD(5) * t222 - t193 * t52 + t197 * t260;
t25 = qJD(5) * t91 + t193 * t260 + t197 * t52;
t22 = t134 * t219 + t302 * t76;
t21 = t136 * t218 - t301 * t75;
t15 = -t114 * t302 - t125 * t134 - t148 * t219 + t220 * t76;
t14 = t114 * t301 + t125 * t136 + t148 * t218 + t220 * t75;
t12 = t354 * t197 + (-t76 - t308) * t193;
t10 = (t134 * t197 + t136 * t193) * t124 + (t329 - t328 + (-t307 + t310) * qJD(5)) * t159;
t4 = t114 * t91 + t134 * t53 + t148 * t26 - t221 * t76;
t3 = t114 * t222 + t136 * t53 - t148 * t25 + t221 * t75;
t1 = -t134 * t25 - t136 * t26 + t222 * t76 + t75 * t91;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t265, -t199 * t296, 0, 0, 0, 0, 0, 0, 0, 0, -t198 * t265 + (t127 - t240) * qJD(3), t195 * t265 + (-t126 - t239) * qJD(3) (t126 * t198 - t127 * t195 + (-t150 * t198 - t151 * t195) * qJD(3)) * qJD(2), t110 * t151 + t111 * t150 + t126 * t141 + t127 * t140 + (t165 - t256) * t260, 0, 0, 0, 0, 0, 0, -t53 * t274 + (-t114 * t199 + t152 * t281) * t191, -t52 * t274 + (t199 * t287 + (t196 * t154 - t199 * t212) * qJD(2)) * t191, -t105 * t114 - t52 * t152 + t53 * t154 + t206 * t221, -t336 + t105 * t29 + t52 * t79 - t53 * t78 + (t144 * t281 - t149 * t199) * t191, 0, 0, 0, 0, 0, 0, t4, t3, t1, t222 * t248 + t25 * t43 + t26 * t42 + t53 * t71 + t9 * t91 - t336, 0, 0, 0, 0, 0, 0, t4, t3, t1, -t17 * t221 + t2 * t91 - t222 * t6 + t24 * t26 + t25 * t32 + t53 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t235, -0.2e1 * t286 * t275, t290, -0.2e1 * t235, -t291, 0, -pkin(8) * t290 + t195 * t214, pkin(8) * t291 + t198 * t214 (-t189 - t190) * t236 + t208 ((t140 * t195 - t141 * t198) * t199 + (-t165 - t337) * t196) * t285 + t208 * pkin(8), -t124 * t154 - t159 * t205, -t159 * t114 + t124 * t152 - t154 * t125 - t205 * t220, -t124 * t274, t125 * t152 - t316, -t125 * t274, 0, t186 * t114 + t144 * t125 - t149 * t220 + t217 * t152 - t274 * t317, -t144 * t124 + t149 * t159 + t154 * t217 - t186 * t205 + t274 * t353, -t139 * t114 + t78 * t124 - t79 * t125 + t152 * t353 + t154 * t317 + t30 * t159 + t206 * t349 + t220 * t29, t139 * t29 + t144 * t217 + t149 * t186 - t317 * t78 - t353 * t79 - t335, t21, t10, t14, t22, t15, t58, t114 * t80 + t125 * t42 + t134 * t317 - t148 * t326 + t159 * t358 - t220 * t9 - t313 * t71 - t349 * t76, -t114 * t81 - t125 * t43 + t136 * t317 + t148 * t324 + t159 * t355 - t220 * t248 - t312 * t71 + t349 * t75, t75 * t80 - t76 * t81 + t326 * t136 + t324 * t134 + t229 * t124 + (-qJD(5) * t347 + t193 * t248 - t197 * t9) * t159, -t248 * t81 + t317 * t71 - t324 * t43 - t326 * t42 + t80 * t9 - t335, t21, t10, t14, t22, t15, t58, t100 * t76 + t114 * t57 + t125 * t24 + t134 * t321 - t148 * t327 + t159 * t359 - t2 * t220 - t313 * t56, -t100 * t75 - t114 * t64 - t125 * t32 + t136 * t321 + t148 * t325 + t159 * t356 + t220 * t6 - t312 * t56, t57 * t75 - t64 * t76 + t327 * t136 + t325 * t134 + t230 * t124 + (-t193 * t6 - t197 * t2 + (t193 * t24 - t197 * t32) * qJD(5)) * t159, t100 * t17 + t2 * t57 - t24 * t327 - t32 * t325 + t321 * t56 + t6 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, t286 * t201, 0, t264, 0, 0, t231 * t282, -t165 * t280 + (t140 + t300) * qJD(3) - t288, 0, 0, t303, t94, t88, -t303, 0, 0, -t130 * t253 + t82 * t274 - t152 * t270 + (-qJD(4) * t121 - t274 * t338 - t96) * t194 + t245, t83 * t274 + (-t154 * t282 - t253 * t274) * pkin(3) + t204, -t114 * t343 + t206 * t271 + (t79 + t234) * t154 + (-t241 - t78 + t83) * t152, t78 * t82 - t79 * t83 + (-t144 * t282 - t344 * t30 + t194 * t29 + (-t194 * t78 + t344 * t79) * qJD(4)) * pkin(3), t36, t12, t40, t37, t39, -t306, t184 * t76 + t226 * t193 + t234 * t134 + (-t183 * t276 - t193 * t241 - t45) * t148 + t224, -t184 * t75 + t226 * t197 + t234 * t136 + (t183 * t277 + t357) * t148 + t238, t46 * t134 + t45 * t136 + (-t134 * t241 - t183 * t76 + (t136 * t183 - t42) * qJD(5)) * t197 + (t136 * t241 - t183 * t75 - t9 + (t134 * t183 - t43) * qJD(5)) * t193 + t273, t30 * t184 - t42 * t45 - t43 * t46 - t71 * t82 + (t194 * t71 + t344 * t347) * t338 + t210 * t183, t36, t12, t40, t37, t39, -t306, t114 * t156 + t134 * t318 + t148 * t322 + t166 * t76 + t213, -t114 * t157 + t136 * t318 - t148 * t323 - t166 * t75 + t216, -t134 * t323 - t136 * t322 + t156 * t75 - t157 * t76 + t209, t156 * t2 + t157 * t6 + t166 * t17 + t24 * t322 + t318 * t56 + t32 * t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, t94, t88, -t303, 0, 0, qJD(3) * t79 + t245 - t332, t274 * t78 + t204, 0, 0, t36, t12, t40, t37, t39, -t306, t71 * t305 - pkin(4) * t76 - t134 * t79 - t148 * t50 + (-t148 * t276 - t315) * pkin(10) + t224, t71 * t304 + pkin(4) * t75 - t136 * t79 + t148 * t51 + (t148 * t277 - t314) * pkin(10) + t238, t134 * t51 + t136 * t50 + (-t329 - t328 + (t307 + t310) * qJD(5)) * pkin(10) + t211 + t273, -pkin(4) * t30 + pkin(10) * t210 - t42 * t50 - t43 * t51 - t71 * t79, t36, t12, t40, t37, t39, -t306, t114 * t167 + t134 * t233 + t148 * t319 + t185 * t76 + t213, -t114 * t168 + t136 * t233 - t148 * t320 - t185 * t75 + t216, -t134 * t320 - t136 * t319 + t167 * t75 - t168 * t76 + t209, t167 * t2 + t168 * t6 + t17 * t185 + t233 * t56 + t24 * t319 + t32 * t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t65, t47, -t309, t48, t114, -t136 * t71 + t148 * t43 + t9, t134 * t71 + t148 * t42 + t248, 0, 0, t309, t65, t47, -t309, t48, t114, 0.2e1 * t342 + t148 * t32 + (-t247 - t56) * t136 + t207, -pkin(5) * t346 + t148 * t31 + (qJD(6) + t56) * t134 + t223, t75 * pkin(5) - t134 * t339, t339 * t32 + (-t136 * t56 + t2) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202 + t308, t354, -t131 - t346, t32 * t134 + t24 * t136 + t17;];
tauc_reg  = t5;
