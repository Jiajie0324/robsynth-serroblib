% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP1_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP1_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:59:26
% EndTime: 2019-03-08 23:59:42
% DurationCPUTime: 9.56s
% Computational Cost: add. (11237->670), mult. (25621->857), div. (0->0), fcn. (19972->14), ass. (0->336)
t263 = sin(qJ(2));
t257 = sin(pkin(6));
t390 = qJD(1) * t257;
t356 = t263 * t390;
t262 = sin(qJ(3));
t385 = qJD(3) * t262;
t293 = pkin(3) * t385 - t356;
t265 = cos(qJ(3));
t467 = cos(qJ(4));
t348 = t467 * qJD(3);
t324 = t265 * t348;
t261 = sin(qJ(4));
t374 = qJD(3) + qJD(4);
t327 = t261 * t374;
t347 = t467 * qJD(4);
t156 = t262 * t327 - t265 * t347 - t324;
t403 = t261 * t265;
t209 = t262 * t467 + t403;
t157 = t374 * t209;
t488 = pkin(4) * t157 + pkin(10) * t156 + t293;
t267 = -pkin(9) - pkin(8);
t358 = qJD(3) * t267;
t212 = t262 * t358;
t357 = t467 * t265;
t301 = -t261 * t262 + t357;
t266 = cos(qJ(2));
t355 = t266 * t390;
t224 = t267 * t262;
t225 = t267 * t265;
t477 = t467 * t224 + t261 * t225;
t478 = qJD(4) * t477 + t467 * t212 - t301 * t355 + t358 * t403;
t264 = cos(qJ(5));
t325 = pkin(3) * t347;
t387 = qJD(2) * t262;
t351 = t261 * t387;
t202 = -qJD(2) * t357 + t351;
t204 = t209 * qJD(2);
t139 = pkin(4) * t204 + pkin(10) * t202;
t369 = pkin(3) * t387;
t121 = t139 + t369;
t260 = sin(qJ(5));
t214 = qJD(2) * pkin(8) + t356;
t331 = pkin(9) * qJD(2) + t214;
t258 = cos(pkin(6));
t389 = qJD(1) * t258;
t354 = t262 * t389;
t162 = t265 * t331 + t354;
t151 = t261 * t162;
t234 = t265 * t389;
t161 = -t262 * t331 + t234;
t93 = t161 * t467 - t151;
t54 = t260 * t121 + t264 * t93;
t487 = t264 * t325 - t54;
t384 = qJD(4) * t261;
t152 = t467 * t162;
t92 = t161 * t261 + t152;
t322 = pkin(3) * t384 - t92;
t382 = qJD(5) * t260;
t418 = t202 * t260;
t486 = (t382 + t418) * pkin(5);
t485 = -qJ(6) * t418 + t264 * qJD(6);
t409 = t257 * t263;
t200 = t258 * t265 - t262 * t409;
t432 = sin(pkin(11));
t333 = t432 * t266;
t433 = cos(pkin(11));
t336 = t433 * t263;
t197 = t258 * t336 + t333;
t256 = qJ(3) + qJ(4);
t250 = sin(t256);
t251 = cos(t256);
t338 = t257 * t433;
t142 = t197 * t250 + t251 * t338;
t334 = t432 * t263;
t335 = t433 * t266;
t199 = -t258 * t334 + t335;
t337 = t257 * t432;
t144 = t199 * t250 - t251 * t337;
t185 = t250 * t409 - t258 * t251;
t296 = g(1) * t144 + g(2) * t142 + g(3) * t185;
t291 = t348 + t347;
t339 = qJDD(2) * t467;
t379 = qJD(2) * qJD(3);
t344 = t262 * t379;
t393 = -qJD(4) * t351 - t261 * t344;
t271 = t262 * t339 + (qJD(2) * t291 + qJDD(2) * t261) * t265 + t393;
t456 = g(3) * t257;
t153 = qJD(3) * pkin(3) + t161;
t380 = qJD(1) * qJD(2);
t345 = t266 * t380;
t430 = qJDD(2) * pkin(8);
t184 = t430 + (qJDD(1) * t263 + t345) * t257;
t378 = qJDD(1) * t258;
t233 = t265 * t378;
t77 = qJDD(3) * pkin(3) + t233 + (-pkin(9) * qJDD(2) - t184) * t262 - t162 * qJD(3);
t375 = t265 * qJDD(2);
t359 = qJD(3) * t234 + t265 * t184 + t262 * t378;
t97 = -t214 * t385 + t359;
t83 = (-t344 + t375) * pkin(9) + t97;
t328 = t153 * t384 + t162 * t347 + t261 * t83 - t467 * t77;
t373 = qJDD(3) + qJDD(4);
t21 = -pkin(4) * t373 + t328;
t168 = t264 * t204 + t260 * t374;
t65 = qJD(5) * t168 + t260 * t271 - t264 * t373;
t13 = t65 * pkin(5) + qJDD(6) + t21;
t381 = qJD(5) * t264;
t326 = t264 * t374;
t166 = t204 * t260 - t326;
t332 = t166 * pkin(5) + qJD(6);
t88 = t153 * t467 - t151;
t80 = -pkin(4) * t374 - t88;
t62 = t332 + t80;
t484 = t13 * t260 + t62 * t381;
t483 = t21 * t260 + t80 * t381;
t466 = pkin(3) * t261;
t245 = pkin(10) + t466;
t400 = -qJ(6) - t245;
t330 = qJD(5) * t400;
t482 = t260 * t330 + t485 + t487;
t252 = t264 * qJ(6);
t316 = t204 * pkin(5) + t202 * t252;
t53 = t264 * t121 - t260 * t93;
t443 = (-t325 - qJD(6)) * t260 + t264 * t330 - t316 - t53;
t438 = t486 + t322;
t481 = t325 - t93;
t195 = qJD(5) + t202;
t426 = t166 * t195;
t64 = -qJD(5) * t326 + t204 * t382 - t260 * t373 - t264 * t271;
t480 = -t64 - t426;
t423 = t168 * t195;
t479 = t65 + t423;
t172 = t261 * t224 - t225 * t467;
t434 = qJD(4) * t172 - t209 * t355 + t261 * t212 - t267 * t324;
t196 = -t258 * t335 + t334;
t198 = t258 * t333 + t336;
t318 = g(1) * t198 + g(2) * t196;
t407 = t257 * t266;
t288 = -g(3) * t407 + t318;
t286 = t288 * t250;
t454 = t265 * pkin(3);
t248 = pkin(2) + t454;
t140 = -pkin(4) * t301 - pkin(10) * t209 - t248;
t160 = t264 * t172;
t91 = t260 * t140 + t160;
t476 = -t478 * t260 + t264 * t488;
t475 = t140 * t381 + t260 * t488 + t478 * t264;
t417 = t202 * t264;
t191 = -qJD(2) * t248 - t355;
t109 = pkin(4) * t202 - pkin(10) * t204 + t191;
t89 = t261 * t153 + t152;
t81 = pkin(10) * t374 + t89;
t49 = t264 * t109 - t260 * t81;
t50 = t109 * t260 + t264 * t81;
t22 = t153 * t347 - t162 * t384 + t261 * t77 + t467 * t83;
t20 = pkin(10) * t373 + t22;
t376 = t262 * qJDD(2);
t314 = t261 * t376 - t265 * t339;
t110 = qJD(2) * t157 + t314;
t346 = t263 * t380;
t315 = -qJDD(1) * t407 + t257 * t346;
t431 = qJDD(2) * pkin(2);
t183 = t315 - t431;
t242 = pkin(3) * t344;
t45 = -pkin(3) * t375 + t110 * pkin(4) - pkin(10) * t271 + t183 + t242;
t8 = t109 * t381 + t264 * t20 + t260 * t45 - t81 * t382;
t7 = t8 * t264;
t474 = -t49 * t417 - t50 * t418 + t7;
t473 = -t245 * t382 + t487;
t143 = t197 * t251 - t250 * t338;
t145 = t199 * t251 + t250 * t337;
t186 = t250 * t258 + t251 * t409;
t401 = t264 * t266;
t362 = t257 * t401;
t472 = -g(3) * (-t186 * t260 - t362) - g(1) * (-t145 * t260 + t198 * t264) - g(2) * (-t143 * t260 + t196 * t264);
t268 = qJD(3) ^ 2;
t305 = -t183 + t318;
t471 = -pkin(8) * t268 + t257 * (-g(3) * t266 + t346) + t305 + t431;
t469 = t168 ^ 2;
t106 = qJDD(5) + t110;
t465 = pkin(5) * t106;
t211 = t248 * t407;
t457 = g(3) * t211;
t455 = t264 * pkin(5);
t9 = -t50 * qJD(5) - t20 * t260 + t264 * t45;
t453 = t9 * t260;
t259 = -qJ(6) - pkin(10);
t35 = -qJ(6) * t168 + t49;
t30 = pkin(5) * t195 + t35;
t452 = -t35 + t30;
t451 = qJ(6) * t64;
t450 = qJ(6) * t65;
t449 = qJD(2) * pkin(2);
t448 = t202 * t80;
t447 = t260 * t49;
t446 = t260 * t64;
t445 = t264 * t65;
t308 = qJ(6) * t156 - qJD(6) * t209;
t442 = pkin(5) * t157 + t308 * t264 + (-t160 + (qJ(6) * t209 - t140) * t260) * qJD(5) + t476;
t350 = t209 * t381;
t441 = -qJ(6) * t350 + (-qJD(5) * t172 + t308) * t260 + t475;
t340 = qJD(5) * t259;
t57 = t260 * t139 + t264 * t88;
t440 = t260 * t340 + t485 - t57;
t56 = t264 * t139 - t260 * t88;
t439 = -t260 * qJD(6) + t264 * t340 - t316 - t56;
t437 = -t172 * t382 + t475;
t436 = -qJD(5) * t91 + t476;
t428 = t156 * t260;
t300 = t350 - t428;
t435 = pkin(5) * t300 + t434;
t429 = t106 * t264;
t427 = t156 * t264;
t425 = t166 * t260;
t424 = t168 * t166;
t422 = t168 * t264;
t421 = t195 * t204;
t420 = t197 * t260;
t419 = t199 * t260;
t416 = t204 * t202;
t415 = t209 * t260;
t414 = t209 * t264;
t413 = t214 * t262;
t412 = t245 * t264;
t411 = t251 * t260;
t410 = t251 * t264;
t408 = t257 * t265;
t405 = t260 * t266;
t402 = t263 * t267;
t399 = qJDD(1) - g(3);
t246 = pkin(4) + t455;
t398 = -t142 * t246 - t143 * t259;
t397 = -t144 * t246 - t145 * t259;
t396 = -t185 * t246 - t186 * t259;
t395 = -t196 * t248 - t197 * t267;
t394 = -t198 * t248 - t199 * t267;
t254 = t262 ^ 2;
t255 = t265 ^ 2;
t392 = t254 - t255;
t391 = t254 + t255;
t215 = -t355 - t449;
t388 = qJD(2) * t215;
t386 = qJD(2) * t263;
t383 = qJD(5) * t195;
t370 = t467 * pkin(3);
t364 = t257 * t405;
t269 = qJD(2) ^ 2;
t361 = t262 * t269 * t265;
t60 = t62 * t382;
t70 = t80 * t382;
t360 = t296 * t260;
t353 = t257 * t386;
t352 = qJD(2) * t407;
t343 = t266 * t379;
t342 = -t49 * t204 + t70;
t90 = t264 * t140 - t172 * t260;
t329 = t264 * t195;
t247 = -t370 - pkin(4);
t323 = t265 * t344;
t321 = -pkin(3) * t199 * t262 + t337 * t454;
t320 = -t89 + t486;
t319 = pkin(4) * t251 + pkin(10) * t250;
t317 = g(1) * t199 + g(2) * t197;
t36 = -qJ(6) * t166 + t50;
t313 = t260 * t36 + t264 * t30;
t312 = t260 * t50 + t264 * t49;
t310 = -t106 * t245 + t448;
t309 = t246 * t251 - t250 * t259;
t307 = t200 * pkin(3);
t306 = qJDD(2) * t266 - t263 * t269;
t201 = t258 * t262 + t263 * t408;
t125 = t261 * t200 + t201 * t467;
t107 = -t125 * t260 - t362;
t303 = -t125 * t264 + t364;
t302 = t200 * t467 - t261 * t201;
t179 = t214 * t265 + t354;
t299 = -t209 * t382 - t427;
t298 = -g(1) * (t198 * t411 + t199 * t264) - g(2) * (t196 * t411 + t197 * t264) - (-t251 * t405 + t263 * t264) * t456;
t297 = -g(1) * (-t198 * t410 + t419) - g(2) * (-t196 * t410 + t420) - (t251 * t401 + t260 * t263) * t456;
t295 = g(1) * t145 + g(2) * t143 + g(3) * t186;
t292 = t50 * t204 - t360 + t483;
t290 = -t13 + t296;
t289 = -t21 + t296;
t287 = (-t197 * t262 - t265 * t338) * pkin(3);
t284 = -g(1) * (-t145 * t264 - t198 * t260) - g(2) * (-t143 * t264 - t196 * t260) - g(3) * (-t186 * t264 + t364) - t8;
t283 = t204 * t36 + t417 * t62 - t360 + t484;
t282 = -pkin(8) * qJDD(3) + (t215 + t355 - t449) * qJD(3);
t281 = -t191 * t204 + t296 - t328;
t280 = t191 * t202 - t22 + t295;
t277 = -qJD(5) * t312 - t295 - t453;
t276 = -t204 * t30 + t264 * t290 + t418 * t62 + t60;
t178 = t234 - t413;
t98 = -t179 * qJD(3) - t262 * t184 + t233;
t275 = -t98 * t262 + t97 * t265 + (-t178 * t265 - t179 * t262) * qJD(3) - t317;
t274 = t9 + t472;
t2 = -qJD(6) * t168 + t451 + t465 + t9;
t4 = -qJD(6) * t166 - t450 + t8;
t273 = -qJD(5) * t313 - t2 * t260 + t4 * t264 - t30 * t417 - t36 * t418 - t295;
t221 = pkin(10) * t264 + t252;
t220 = t259 * t260;
t219 = t247 - t455;
t207 = t252 + t412;
t206 = t400 * t260;
t182 = t185 * pkin(4);
t163 = t166 ^ 2;
t159 = -qJD(3) * t201 - t262 * t352;
t158 = qJD(3) * t200 + t265 * t352;
t141 = -qJDD(2) * t248 + t242 + t315;
t138 = t144 * pkin(4);
t137 = t142 * pkin(4);
t118 = pkin(5) * t415 - t477;
t111 = -t202 ^ 2 + t204 ^ 2;
t84 = t202 * t374 + t271;
t69 = -t163 + t469;
t68 = -qJ(6) * t415 + t91;
t63 = -pkin(5) * t301 - t209 * t252 + t90;
t59 = qJD(4) * t125 + t261 * t158 - t159 * t467;
t58 = qJD(4) * t302 + t158 * t467 + t261 * t159;
t52 = -t106 * t301 + t157 * t195;
t47 = t423 - t65;
t46 = -t64 + t426;
t38 = t106 * t260 - t168 * t204 + t195 * t329;
t37 = -t195 ^ 2 * t260 + t166 * t204 + t429;
t34 = t195 * t425 - t445;
t33 = t168 * t329 - t446;
t32 = qJD(5) * t303 - t260 * t58 + t264 * t353;
t31 = qJD(5) * t107 + t260 * t353 + t264 * t58;
t25 = t166 * t300 + t415 * t65;
t24 = t168 * t299 - t414 * t64;
t15 = -t106 * t415 - t157 * t166 - t195 * t300 + t301 * t65;
t14 = t106 * t414 + t157 * t168 + t195 * t299 + t301 * t64;
t11 = -t260 * t479 + t264 * t480;
t10 = (t166 * t264 + t168 * t260) * t156 + (t446 - t445 + (-t422 + t425) * qJD(5)) * t209;
t6 = t106 * t107 + t166 * t59 + t195 * t32 - t302 * t65;
t5 = t106 * t303 + t168 * t59 - t195 * t31 + t302 * t64;
t1 = t107 * t64 - t166 * t31 - t168 * t32 + t303 * t65;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t399, 0, 0, 0, 0, 0, 0, t306 * t257 (-qJDD(2) * t263 - t266 * t269) * t257, 0, -g(3) + (t258 ^ 2 + (t263 ^ 2 + t266 ^ 2) * t257 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, qJD(3) * t159 + qJDD(3) * t200 + (-t262 * t343 + t265 * t306) * t257, -qJD(3) * t158 - qJDD(3) * t201 + (-t262 * t306 - t265 * t343) * t257 (-t200 * t262 + t201 * t265) * qJDD(2) + (t158 * t265 - t159 * t262 + (-t200 * t265 - t201 * t262) * qJD(3)) * qJD(2), t158 * t179 + t159 * t178 + t200 * t98 + t201 * t97 - g(3) + (-t183 * t266 + t215 * t386) * t257, 0, 0, 0, 0, 0, 0, -t59 * t374 + t302 * t373 + (-t110 * t266 + t202 * t386) * t257, -t58 * t374 - t125 * t373 + (-t266 * (qJDD(2) * t209 + t393) + (-t265 * t266 * t291 + t263 * t204) * qJD(2)) * t257, -t125 * t110 - t58 * t202 + t59 * t204 - t271 * t302, -t302 * t328 + t125 * t22 + t58 * t89 - t59 * t88 - g(3) + (-t141 * t266 + t191 * t386) * t257, 0, 0, 0, 0, 0, 0, t6, t5, t1, t107 * t9 - t21 * t302 - t303 * t8 + t31 * t50 + t32 * t49 + t59 * t80 - g(3), 0, 0, 0, 0, 0, 0, t6, t5, t1, t107 * t2 - t13 * t302 + t30 * t32 - t303 * t4 + t31 * t36 + t59 * t62 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t399 * t407 + t318, -t399 * t409 + t317, 0, 0, qJDD(2) * t254 + 0.2e1 * t323, 0.2e1 * t262 * t375 - 0.2e1 * t379 * t392, qJDD(3) * t262 + t265 * t268, qJDD(2) * t255 - 0.2e1 * t323, qJDD(3) * t265 - t262 * t268, 0, t282 * t262 + t265 * t471, -t262 * t471 + t282 * t265, t391 * t430 + (-g(3) * t263 - t345 * t391) * t257 + t275, t305 * pkin(2) + t275 * pkin(8) + (-g(3) * (pkin(2) * t266 + pkin(8) * t263) + (-t215 * t263 + (t178 * t262 - t179 * t265) * t266) * qJD(1)) * t257, -t204 * t156 + t209 * t271, -t209 * t110 + t156 * t202 - t204 * t157 + t271 * t301, -t156 * t374 + t209 * t373, -t110 * t301 + t157 * t202, -t157 * t374 + t301 * t373, 0, -t248 * t110 - t141 * t301 + t191 * t157 + t202 * t293 + t251 * t288 + t373 * t477 - t374 * t434, t141 * t209 - t191 * t156 - t172 * t373 + t204 * t293 - t248 * t271 - t374 * t478 - t286, -g(3) * t409 - t172 * t110 + t88 * t156 - t89 * t157 - t202 * t478 + t204 * t434 + t209 * t328 + t22 * t301 - t271 * t477 - t317, t22 * t172 - t328 * t477 - t141 * t248 - g(1) * t394 - g(2) * t395 - g(3) * (-t257 * t402 + t211) + t478 * t89 - t434 * t88 + t293 * t191, t24, t10, t14, t25, t15, t52, t106 * t90 + t157 * t49 + t434 * t166 + t436 * t195 + t209 * t483 - t301 * t9 - t80 * t428 - t477 * t65 + t297, -t80 * t427 - t106 * t91 - t157 * t50 + t477 * t64 + t301 * t8 + (t21 * t264 - t70) * t209 - t437 * t195 + t434 * t168 + t298, t64 * t90 - t65 * t91 - t436 * t168 - t437 * t166 + t312 * t156 + t286 + (-t260 * t8 - t264 * t9 + (-t264 * t50 + t447) * qJD(5)) * t209, t8 * t91 + t9 * t90 - t21 * t477 - g(1) * (-t198 * t319 + t394) - g(2) * (-t196 * t319 + t395) - t457 + t434 * t80 + t437 * t50 + t436 * t49 - (t266 * t319 - t402) * t456, t24, t10, t14, t25, t15, t52, t106 * t63 + t118 * t65 + t157 * t30 + t435 * t166 + t442 * t195 - t2 * t301 + t209 * t484 - t62 * t428 + t297, -t62 * t427 - t106 * t68 - t118 * t64 - t157 * t36 + t301 * t4 + (t13 * t264 - t60) * t209 - t441 * t195 + t435 * t168 + t298, t63 * t64 - t65 * t68 - t442 * t168 - t441 * t166 + t313 * t156 + t286 + (-t2 * t264 - t260 * t4 + (t260 * t30 - t264 * t36) * qJD(5)) * t209, t4 * t68 + t2 * t63 + t13 * t118 - g(1) * (pkin(5) * t419 - t198 * t309 + t394) - g(2) * (pkin(5) * t420 - t196 * t309 + t395) - t457 + t435 * t62 + t441 * t36 + t442 * t30 - (t309 * t266 + (pkin(5) * t260 - t267) * t263) * t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t361, t392 * t269, t376, t361, t375, qJDD(3), -g(3) * t200 + t233 + (-g(1) * t432 + g(2) * t433) * t408 + (-t184 + t317 - t388) * t262, -t265 * t388 - g(1) * (-t199 * t265 - t262 * t337) - g(2) * (-t197 * t265 + t262 * t338) + g(3) * t201 + (t178 + t413) * qJD(3) - t359, 0, 0, t416, t111, t84, -t416, -t314, t373, t92 * t374 + (-qJD(4) * t327 - t202 * t387 + t373 * t467) * pkin(3) + t281, t93 * t374 + (-t204 * t387 - t261 * t373 - t347 * t374) * pkin(3) + t280, -t110 * t466 - t271 * t370 + (t89 + t322) * t204 + (-t88 - t481) * t202, -g(1) * t321 - g(2) * t287 - g(3) * t307 - t191 * t369 + t22 * t466 - t322 * t88 - t328 * t370 + t481 * t89, t33, t11, t38, t34, t37, -t421, -t53 * t195 + t247 * t65 + t322 * t166 + (-t195 * t325 + t310) * t260 + (-t245 * t383 + t289) * t264 + t342, t322 * t168 - t195 * t473 - t247 * t64 + t310 * t264 + t292, t54 * t166 + t53 * t168 + (-t166 * t325 - t245 * t65 + (t168 * t245 - t49) * qJD(5)) * t264 + (t168 * t325 - t245 * t64 - t9 + (t166 * t245 - t50) * qJD(5)) * t260 - t295 + t474, t8 * t412 - t325 * t447 + t21 * t247 - t49 * t53 - g(1) * (pkin(10) * t145 - t138 + t321) - g(2) * (t143 * pkin(10) - t137 + t287) - g(3) * (pkin(10) * t186 - t182 + t307) + t322 * t80 + (-t381 * t49 - t453) * t245 + t473 * t50, t33, t11, t38, t34, t37, -t421, t106 * t206 + t166 * t438 + t195 * t443 + t219 * t65 + t276, -t106 * t207 + t168 * t438 - t195 * t482 - t219 * t64 + t283, -t166 * t482 - t168 * t443 + t206 * t64 - t207 * t65 + t273, t4 * t207 + t2 * t206 + t13 * t219 - g(1) * (t321 + t397) - g(2) * (t287 + t398) - g(3) * (t307 + t396) + t438 * t62 + t482 * t36 + t443 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t111, t84, -t416, -t314, t373, t374 * t89 + t281, t374 * t88 + t280, 0, 0, t33, t11, t38, t34, t37, -t421, -pkin(4) * t65 - t166 * t89 - t195 * t56 + (-pkin(10) * t106 + t448) * t260 + (-pkin(10) * t383 + t289) * t264 + t342, t80 * t417 + pkin(4) * t64 - t168 * t89 + t195 * t57 + (t195 * t382 - t429) * pkin(10) + t292, t166 * t57 + t168 * t56 + (-t446 - t445 + (t422 + t425) * qJD(5)) * pkin(10) + t277 + t474, -t21 * pkin(4) + g(1) * t138 + g(2) * t137 + g(3) * t182 - t49 * t56 - t50 * t57 - t80 * t89 + (t277 + t7) * pkin(10), t33, t11, t38, t34, t37, -t421, t106 * t220 + t166 * t320 + t195 * t439 - t246 * t65 + t276, -t106 * t221 + t168 * t320 - t195 * t440 + t246 * t64 + t283, -t166 * t440 - t168 * t439 + t220 * t64 - t221 * t65 + t273, -g(1) * t397 - g(2) * t398 - g(3) * t396 - t13 * t246 + t2 * t220 + t4 * t221 + t30 * t439 + t320 * t62 + t36 * t440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, t69, t46, -t424, t47, t106, -t168 * t80 + t195 * t50 + t274, t166 * t80 + t195 * t49 + t284, 0, 0, t424, t69, t46, -t424, t47, t106, 0.2e1 * t465 + t451 + t195 * t36 + (-t332 - t62) * t168 + t274, -pkin(5) * t469 + t450 + t195 * t35 + (qJD(6) + t62) * t166 + t284, pkin(5) * t64 - t166 * t452, t452 * t36 + (-t62 * t168 + t2 + t472) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, t480, -t163 - t469, t36 * t166 + t30 * t168 - t290;];
tau_reg  = t3;
