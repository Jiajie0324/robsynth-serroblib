% Calculate vector of inverse dynamics joint torques for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRP1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRRP1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:55:47
% EndTime: 2019-03-08 23:59:16
% DurationCPUTime: 195.21s
% Computational Cost: add. (129212->2089), mult. (227420->2848), div. (0->0), fcn. (261643->12), ass. (0->786)
t1360 = Icges(6,4) + Icges(7,4);
t1350 = Icges(6,1) + Icges(7,1);
t1349 = Icges(6,5) + Icges(7,5);
t1348 = Icges(6,2) + Icges(7,2);
t1347 = Icges(6,6) + Icges(7,6);
t1359 = Icges(6,3) + Icges(7,3);
t1159 = qJ(3) + qJ(4);
t1051 = cos(t1159);
t864 = sin(pkin(6));
t865 = cos(pkin(11));
t1166 = t864 * t865;
t861 = sin(t1159);
t1078 = t861 * t1166;
t1219 = cos(pkin(6));
t869 = sin(qJ(2));
t1045 = t869 * t1219;
t863 = sin(pkin(11));
t872 = cos(qJ(2));
t814 = t1045 * t865 + t863 * t872;
t703 = t1051 * t814 - t1078;
t867 = sin(qJ(5));
t870 = cos(qJ(5));
t1044 = t872 * t1219;
t943 = t1044 * t865 - t863 * t869;
t569 = -t703 * t867 - t943 * t870;
t1377 = t1360 * t569;
t1167 = t863 * t864;
t1004 = t863 * t1045;
t816 = t865 * t872 - t1004;
t705 = t1051 * t816 + t1167 * t861;
t947 = -t1044 * t863 - t865 * t869;
t571 = -t705 * t867 - t947 * t870;
t1376 = t1360 * t571;
t1162 = t864 * t872;
t998 = t864 * t1051;
t968 = t869 * t998;
t778 = t1219 * t861 + t968;
t706 = -t1162 * t870 - t778 * t867;
t1375 = t1360 * t706;
t1079 = t867 * t1162;
t959 = -t778 * t870 + t1079;
t1374 = t1360 * t959;
t1173 = t947 * t867;
t572 = t705 * t870 - t1173;
t1373 = t1360 * t572;
t1177 = t943 * t867;
t570 = t703 * t870 - t1177;
t1372 = t1360 * t570;
t866 = -qJ(6) - pkin(10);
t1362 = rSges(7,3) - t866;
t781 = t943 * qJD(2);
t862 = qJD(3) + qJD(4);
t927 = -t814 * t861 - t865 * t998;
t513 = t1051 * t781 + t862 * t927;
t782 = t814 * qJD(2);
t289 = -qJD(5) * t570 - t513 * t867 + t782 * t870;
t918 = qJD(5) * t569 + t782 * t867;
t290 = t513 * t870 + t918;
t999 = t862 * t1051;
t512 = -t1078 * t862 + t781 * t861 + t814 * t999;
t1371 = t1347 * t289 + t1349 * t290 + t1359 * t512;
t783 = t947 * qJD(2);
t928 = -t816 * t861 + t863 * t998;
t515 = t1051 * t783 + t862 * t928;
t1109 = qJD(2) * t872;
t784 = -qJD(2) * t1004 + t1109 * t865;
t291 = -qJD(5) * t572 - t515 * t867 + t784 * t870;
t917 = qJD(5) * t571 + t784 * t867;
t292 = t515 * t870 + t917;
t514 = t816 * t999 + (t1167 * t862 + t783) * t861;
t1370 = t1347 * t291 + t1349 * t292 + t1359 * t514;
t1369 = -t1347 * t512 - t1348 * t289 - t1360 * t290;
t1368 = -t1347 * t514 - t1348 * t291 - t1360 * t292;
t1367 = t1349 * t512 + t1350 * t290 + t1360 * t289;
t1366 = t1349 * t514 + t1350 * t292 + t1360 * t291;
t1110 = qJD(2) * t869;
t1057 = t864 * t1110;
t1164 = t864 * t869;
t777 = -t1051 * t1219 + t1164 * t861;
t995 = t872 * t1051;
t967 = t864 * t995;
t657 = qJD(2) * t967 - t777 * t862;
t448 = qJD(5) * t959 + t1057 * t870 - t657 * t867;
t897 = qJD(5) * t706 + t1057 * t867;
t449 = t657 * t870 + t897;
t1056 = t864 * t1109;
t656 = t862 * t968 + (t1219 * t862 + t1056) * t861;
t1365 = t1347 * t448 + t1349 * t449 + t1359 * t656;
t1364 = t1347 * t656 + t1348 * t448 + t1360 * t449;
t1363 = t1349 * t656 + t1350 * t449 + t1360 * t448;
t1331 = t1347 * t569 + t1349 * t570 - t1359 * t927;
t1330 = t1347 * t571 + t1349 * t572 - t1359 * t928;
t1329 = -t1347 * t927 + t1348 * t569 + t1372;
t1328 = -t1347 * t928 + t1348 * t571 + t1373;
t1327 = -t1349 * t927 + t1350 * t570 + t1377;
t1326 = -t1349 * t928 + t1350 * t572 + t1376;
t1312 = t1347 * t706 - t1349 * t959 + t1359 * t777;
t1311 = t1347 * t777 + t1348 * t706 - t1374;
t1310 = t1349 * t777 - t1350 * t959 + t1375;
t1361 = -pkin(10) + t1362;
t1343 = -t1327 * t290 - t1329 * t289 - t1331 * t512 - t1367 * t570 + t1369 * t569 + t1371 * t927;
t1342 = -t1326 * t290 - t1328 * t289 - t1330 * t512 - t1366 * t570 + t1368 * t569 + t1370 * t927;
t1341 = -t1327 * t292 - t1329 * t291 - t1331 * t514 - t1367 * t572 + t1369 * t571 + t1371 * t928;
t1340 = -t1326 * t292 - t1328 * t291 - t1330 * t514 - t1366 * t572 + t1368 * t571 + t1370 * t928;
t1339 = -t1327 * t449 - t1329 * t448 - t1331 * t656 + t1367 * t959 + t1369 * t706 - t1371 * t777;
t1338 = -t1326 * t449 - t1328 * t448 - t1330 * t656 + t1366 * t959 + t1368 * t706 - t1370 * t777;
t1334 = t1310 * t290 + t1311 * t289 + t1312 * t512 + t1363 * t570 + t1364 * t569 - t1365 * t927;
t1333 = t1310 * t292 + t1311 * t291 + t1312 * t514 + t1363 * t572 + t1364 * t571 - t1365 * t928;
t1332 = t1310 * t449 + t1311 * t448 + t1312 * t656 - t1363 * t959 + t1364 * t706 + t1365 * t777;
t1297 = t1327 * t570 + t1329 * t569 - t1331 * t927;
t1296 = t1326 * t570 + t1328 * t569 - t1330 * t927;
t1295 = t1327 * t572 + t1329 * t571 - t1331 * t928;
t1294 = t1326 * t572 + t1328 * t571 - t1330 * t928;
t1293 = -t1327 * t959 + t1329 * t706 + t1331 * t777;
t1292 = -t1326 * t959 + t1328 * t706 + t1330 * t777;
t1291 = t1310 * t570 + t1311 * t569 - t1312 * t927;
t1290 = t1310 * t572 + t1311 * t571 - t1312 * t928;
t1289 = -t1310 * t959 + t1311 * t706 + t1312 * t777;
t1358 = t1347 * t867 - t1349 * t870;
t1357 = t1348 * t867 - t1360 * t870;
t1356 = -t1350 * t870 + t1360 * t867;
t1354 = rSges(7,1) + pkin(5);
t1111 = qJD(2) * t864;
t848 = t863 * t1111;
t729 = -qJD(3) * t947 + t848;
t599 = -qJD(4) * t947 + t729;
t462 = -qJD(5) * t928 + t599;
t1058 = t865 * t1111;
t730 = -qJD(3) * t943 - t1058;
t600 = -qJD(4) * t943 + t730;
t463 = -qJD(5) * t927 + t600;
t860 = qJD(2) * t1219;
t762 = -t1162 * t862 + t860;
t636 = qJD(5) * t777 + t762;
t1335 = t1289 * t636 + t1292 * t462 + t1293 * t463;
t1353 = -t1335 / 0.2e1;
t1336 = t1290 * t636 + t1294 * t462 + t1295 * t463;
t1352 = -t1336 / 0.2e1;
t1337 = t1291 * t636 + t1296 * t462 + t1297 * t463;
t1351 = -t1337 / 0.2e1;
t857 = pkin(5) * t870 + pkin(4);
t1224 = -pkin(4) + t857;
t1150 = rSges(7,1) * t572 + rSges(7,2) * t571 - pkin(5) * t1173 + t1224 * t705 - t1361 * t928;
t1186 = t927 * t870;
t1187 = t927 * t867;
t952 = rSges(7,1) * t1186 - rSges(7,2) * t1187 + t1362 * t703 + t857 * t927;
t1183 = t928 * t870;
t1184 = t928 * t867;
t951 = rSges(7,1) * t1183 - rSges(7,2) * t1184 + t1362 * t705 + t857 * t928;
t1179 = t777 * t870;
t1180 = t777 * t867;
t950 = -rSges(7,1) * t1179 + rSges(7,2) * t1180 + t1362 * t778 - t777 * t857;
t1092 = qJDD(2) * t864;
t846 = t863 * t1092;
t585 = qJD(3) * t784 - qJDD(3) * t947 + t846;
t446 = qJD(4) * t784 - qJDD(4) * t947 + t585;
t218 = qJD(5) * t514 - qJDD(5) * t928 + t446;
t1050 = t865 * t1092;
t586 = qJD(3) * t782 - qJDD(3) * t943 - t1050;
t447 = qJD(4) * t782 - qJDD(4) * t943 + t586;
t219 = qJD(5) * t512 - qJDD(5) * t927 + t447;
t1108 = qJD(3) * t869;
t850 = t864 * t1108;
t859 = qJDD(2) * t1219;
t1112 = qJD(2) * t850 + t859;
t849 = qJD(4) * t1164;
t653 = qJD(2) * t849 + (-qJDD(3) - qJDD(4)) * t1162 + t1112;
t400 = qJD(5) * t656 + qJDD(5) * t777 + t653;
t1346 = t1291 * t400 + t1296 * t218 + t1297 * t219 + t1334 * t636 - t1342 * t462 - t1343 * t463;
t1345 = t1290 * t400 + t1294 * t218 + t1295 * t219 + t1333 * t636 - t1340 * t462 - t1341 * t463;
t1344 = t1289 * t400 + t1292 * t218 + t1293 * t219 + t1332 * t636 - t1338 * t462 - t1339 * t463;
t1102 = qJD(6) * t927;
t1158 = rSges(7,1) * t290 + rSges(7,2) * t289 + pkin(5) * t918 + t1224 * t513 + t1361 * t512 - t1102;
t1100 = qJD(6) * t777;
t1155 = rSges(7,1) * t449 + rSges(7,2) * t448 + pkin(5) * t897 + t1224 * t657 + t1361 * t656 + t1100;
t1151 = rSges(7,1) * t570 + rSges(7,2) * t569 - pkin(5) * t1177 + t1224 * t703 - t1361 * t927;
t495 = pkin(4) * t927 + pkin(10) * t703;
t1325 = -t495 + t952;
t497 = pkin(4) * t928 + pkin(10) * t705;
t1324 = -t497 + t951;
t1178 = t943 * t861;
t997 = t867 * t1051;
t617 = t814 * t870 - t943 * t997;
t1175 = t814 * t867;
t996 = t870 * t1051;
t618 = t943 * t996 + t1175;
t1323 = t1178 * t1359 + t1347 * t617 + t1349 * t618;
t1174 = t947 * t861;
t619 = t816 * t870 - t947 * t997;
t1171 = t816 * t867;
t620 = t947 * t996 + t1171;
t1322 = t1174 * t1359 + t1347 * t619 + t1349 * t620;
t1321 = t1178 * t1347 + t1348 * t617 + t1360 * t618;
t1320 = t1174 * t1347 + t1348 * t619 + t1360 * t620;
t1319 = t1178 * t1349 + t1350 * t618 + t1360 * t617;
t1318 = t1174 * t1349 + t1350 * t620 + t1360 * t619;
t1317 = t1347 * t703 - t1357 * t927;
t1316 = t1347 * t705 - t1357 * t928;
t1315 = t1349 * t703 - t1356 * t927;
t1314 = t1349 * t705 - t1356 * t928;
t1139 = -rSges(7,1) * t959 + rSges(7,2) * t706 - pkin(5) * t1079 + t1224 * t778 + t1361 * t777;
t633 = -t777 * pkin(4) + pkin(10) * t778;
t1313 = -t633 + t950;
t1309 = t1347 * t778 + t1357 * t777;
t1308 = t1349 * t778 + t1356 * t777;
t1084 = t861 * t1162;
t740 = (-t867 * t995 + t869 * t870) * t864;
t1161 = t867 * t869;
t741 = (t870 * t995 + t1161) * t864;
t1307 = t1084 * t1359 + t1347 * t740 + t1349 * t741;
t1306 = t1084 * t1347 + t1348 * t740 + t1360 * t741;
t1305 = t1084 * t1349 + t1350 * t741 + t1360 * t740;
t1304 = (-t1310 * t870 + t1311 * t867 + t1358 * t777 + t1359 * t778) * t636 + (-t1327 * t870 + t1329 * t867 - t1358 * t927 + t1359 * t703) * t463 + (-t1326 * t870 + t1328 * t867 - t1358 * t928 + t1359 * t705) * t462;
t1303 = t857 * t1051 - t861 * t866;
t871 = cos(qJ(3));
t1163 = t864 * t871;
t868 = sin(qJ(3));
t718 = t863 * t1163 - t816 * t868;
t1302 = rSges(4,1) * t871 - rSges(4,2) * t868;
t258 = Icges(5,5) * t513 - Icges(5,6) * t512 + Icges(5,3) * t782;
t260 = Icges(5,4) * t513 - Icges(5,2) * t512 + Icges(5,6) * t782;
t262 = Icges(5,1) * t513 - Icges(5,4) * t512 + Icges(5,5) * t782;
t433 = Icges(5,5) * t703 + Icges(5,6) * t927 - Icges(5,3) * t943;
t1212 = Icges(5,4) * t703;
t435 = Icges(5,2) * t927 - Icges(5,6) * t943 + t1212;
t685 = Icges(5,4) * t927;
t437 = Icges(5,1) * t703 - Icges(5,5) * t943 + t685;
t101 = -t258 * t943 + t260 * t927 + t262 * t703 + t433 * t782 - t435 * t512 + t437 * t513;
t259 = Icges(5,5) * t515 - Icges(5,6) * t514 + Icges(5,3) * t784;
t261 = Icges(5,4) * t515 - Icges(5,2) * t514 + Icges(5,6) * t784;
t263 = Icges(5,1) * t515 - Icges(5,4) * t514 + Icges(5,5) * t784;
t434 = Icges(5,5) * t705 + Icges(5,6) * t928 - Icges(5,3) * t947;
t1211 = Icges(5,4) * t705;
t436 = Icges(5,2) * t928 - Icges(5,6) * t947 + t1211;
t686 = Icges(5,4) * t928;
t438 = Icges(5,1) * t705 - Icges(5,5) * t947 + t686;
t102 = -t259 * t943 + t261 * t927 + t263 * t703 + t434 * t782 - t436 * t512 + t438 * t513;
t425 = Icges(5,5) * t657 - Icges(5,6) * t656 + Icges(5,3) * t1057;
t426 = Icges(5,4) * t657 - Icges(5,2) * t656 + Icges(5,6) * t1057;
t427 = Icges(5,1) * t657 - Icges(5,4) * t656 + Icges(5,5) * t1057;
t577 = Icges(5,5) * t778 - Icges(5,6) * t777 - Icges(5,3) * t1162;
t1210 = Icges(5,4) * t778;
t578 = -Icges(5,2) * t777 - Icges(5,6) * t1162 + t1210;
t756 = Icges(5,4) * t777;
t579 = Icges(5,1) * t778 - Icges(5,5) * t1162 - t756;
t122 = -t425 * t943 + t426 * t927 + t427 * t703 - t512 * t578 + t513 * t579 + t577 * t782;
t175 = -t433 * t943 + t435 * t927 + t437 * t703;
t176 = -t434 * t943 + t436 * t927 + t438 * t703;
t195 = -t577 * t943 + t578 * t927 + t579 * t703;
t1301 = t101 * t600 + t102 * t599 + t122 * t762 + t175 * t447 + t176 * t446 + t195 * t653 + t1346;
t103 = -t258 * t947 + t260 * t928 + t262 * t705 + t433 * t784 - t435 * t514 + t437 * t515;
t104 = -t259 * t947 + t261 * t928 + t263 * t705 + t434 * t784 - t436 * t514 + t438 * t515;
t123 = -t425 * t947 + t426 * t928 + t427 * t705 - t514 * t578 + t515 * t579 + t577 * t784;
t177 = -t433 * t947 + t435 * t928 + t437 * t705;
t178 = -t434 * t947 + t436 * t928 + t438 * t705;
t196 = -t577 * t947 + t578 * t928 + t579 * t705;
t1300 = t103 * t600 + t599 * t104 + t123 * t762 + t177 * t447 + t446 * t178 + t196 * t653 + t1345;
t110 = -t260 * t777 + t262 * t778 - t435 * t656 + t437 * t657 + (t1110 * t433 - t258 * t872) * t864;
t111 = -t261 * t777 + t263 * t778 - t436 * t656 + t438 * t657 + (t1110 * t434 - t259 * t872) * t864;
t135 = -t426 * t777 + t427 * t778 - t578 * t656 + t579 * t657 + (t1110 * t577 - t425 * t872) * t864;
t183 = -t1162 * t433 - t435 * t777 + t437 * t778;
t184 = -t1162 * t434 - t436 * t777 + t438 * t778;
t214 = -t1162 * t577 - t578 * t777 + t579 * t778;
t1299 = t110 * t600 + t111 * t599 + t135 * t762 + t183 * t447 + t184 * t446 + t214 * t653 + t1344;
t1101 = qJD(6) * t928;
t1157 = rSges(7,1) * t292 + rSges(7,2) * t291 + pkin(5) * t917 + t1224 * t515 + t1361 * t514 - t1101;
t315 = pkin(4) * t515 + pkin(10) * t514;
t458 = pkin(4) * t657 + pkin(10) * t656;
t498 = pkin(4) * t705 - pkin(10) * t928;
t634 = pkin(4) * t778 + pkin(10) * t777;
t873 = -pkin(9) - pkin(8);
t1223 = pkin(8) + t873;
t858 = pkin(3) * t871 + pkin(2);
t1225 = -pkin(2) + t858;
t937 = t718 * qJD(3);
t326 = pkin(3) * t937 - t1223 * t784 + t1225 * t783;
t1165 = t864 * t868;
t1082 = t863 * t1165;
t445 = pkin(3) * t1082 + t1223 * t947 + t1225 * t816;
t1040 = t1219 * t871;
t856 = pkin(3) * t1040;
t545 = qJD(3) * t856 + (-pkin(3) * t868 * t1108 + (-t1223 * t869 + t1225 * t872) * qJD(2)) * t864;
t1041 = t1219 * t868;
t635 = pkin(3) * t1041 + (t1223 * t872 + t1225 * t869) * t864;
t742 = -qJDD(3) * t1162 + t1112;
t827 = -qJD(3) * t1162 + t860;
t648 = pkin(2) * t783 + pkin(8) * t784;
t677 = pkin(2) * t816 - pkin(8) * t947;
t807 = (pkin(2) * t872 + pkin(8) * t869) * t1111;
t824 = (pkin(2) * t869 - pkin(8) * t872) * t864;
t914 = t648 * t860 + t677 * t859 + (-qJD(2) * t807 - qJDD(2) * t824) * t1167;
t891 = t827 * t326 + t742 * t445 - t729 * t545 - t585 * t635 + t914;
t880 = t762 * t315 - t446 * t634 - t599 * t458 + t653 * t498 + t891;
t30 = qJD(6) * t512 - qJDD(6) * t927 - t1139 * t218 + t1150 * t400 - t1155 * t462 + t1157 * t636 + t880;
t1298 = 0.2e1 * t30;
t1288 = t1150 * t1057;
t1287 = (t1348 * t959 + t1310 + t1375) * t636 + (-t1348 * t570 + t1327 + t1377) * t463 + (-t1348 * t572 + t1326 + t1376) * t462;
t1286 = (t1350 * t706 - t1311 + t1374) * t636 + (t1350 * t569 - t1329 - t1372) * t463 + (t1350 * t571 - t1328 - t1373) * t462;
t1285 = (t1347 * t959 + t1349 * t706) * t636 + (-t1347 * t570 + t1349 * t569) * t463 + (-t1347 * t572 + t1349 * t571) * t462;
t1284 = t620 * rSges(7,1) + t619 * rSges(7,2) + rSges(7,3) * t1174 + pkin(5) * t1171 + t1303 * t947;
t1283 = t618 * rSges(7,1) + t617 * rSges(7,2) + rSges(7,3) * t1178 + pkin(5) * t1175 + t1303 * t943;
t1282 = t864 * pkin(5) * t1161 + t741 * rSges(7,1) + t740 * rSges(7,2) + rSges(7,3) * t1084 + t857 * t967;
t1281 = -t1150 * t219 + t1151 * t218 - t1157 * t463 + t1158 * t462;
t1077 = t865 * t1165;
t958 = -t814 * t871 + t1077;
t573 = qJD(3) * t958 - t781 * t868;
t716 = -t1163 * t865 - t814 * t868;
t938 = t716 * qJD(3);
t574 = t781 * t871 + t938;
t312 = rSges(4,1) * t574 + rSges(4,2) * t573 + rSges(4,3) * t782;
t719 = t816 * t871 + t1082;
t575 = -qJD(3) * t719 - t783 * t868;
t576 = t783 * t871 + t937;
t313 = rSges(4,1) * t576 + rSges(4,2) * t575 + rSges(4,3) * t784;
t460 = -rSges(4,1) * t958 + rSges(4,2) * t716 - rSges(4,3) * t943;
t461 = rSges(4,1) * t719 + rSges(4,2) * t718 - rSges(4,3) * t947;
t1280 = t312 * t729 - t313 * t730 + t460 * t585 - t461 * t586;
t934 = Icges(5,5) * t1051 - Icges(5,6) * t861;
t1279 = t599 * (-Icges(5,3) * t816 + t1051 * t438 - t436 * t861 - t934 * t947) + t600 * (-Icges(5,3) * t814 + t1051 * t437 - t435 * t861 - t934 * t943) + t762 * (t1051 * t579 - t578 * t861 - (Icges(5,3) * t869 + t872 * t934) * t864);
t1215 = Icges(4,4) * t958;
t454 = Icges(4,2) * t716 - Icges(4,6) * t943 - t1215;
t1214 = Icges(4,4) * t719;
t455 = Icges(4,2) * t718 - Icges(4,6) * t947 + t1214;
t712 = Icges(4,4) * t716;
t456 = -Icges(4,1) * t958 - Icges(4,5) * t943 + t712;
t713 = Icges(4,4) * t718;
t457 = Icges(4,1) * t719 - Icges(4,5) * t947 + t713;
t819 = t1163 * t869 + t1041;
t1213 = Icges(4,4) * t819;
t1080 = t868 * t1164;
t818 = t1040 - t1080;
t629 = Icges(4,2) * t818 - Icges(4,6) * t1162 + t1213;
t810 = Icges(4,4) * t818;
t630 = Icges(4,1) * t819 - Icges(4,5) * t1162 + t810;
t985 = Icges(4,5) * t871 - Icges(4,6) * t868;
t881 = t729 * (Icges(4,3) * t816 + t455 * t868 - t457 * t871 + t947 * t985) + t730 * (Icges(4,3) * t814 + t454 * t868 - t456 * t871 + t943 * t985) + t827 * (t629 * t868 - t630 * t871 + (Icges(4,3) * t869 + t872 * t985) * t864);
t1091 = qJDD(6) * t777;
t1103 = qJD(6) * t656;
t1188 = t600 * t315;
t1193 = t447 * t498;
t314 = pkin(4) * t513 + pkin(10) * t512;
t227 = t599 * t314;
t496 = pkin(4) * t703 - pkin(10) * t927;
t254 = t446 * t496;
t1181 = t730 * t326;
t1189 = t586 * t445;
t325 = pkin(3) * t938 - t1223 * t782 + t1225 * t781;
t288 = t729 * t325;
t444 = -pkin(3) * t1077 + t1223 * t943 + t1225 * t814;
t303 = t585 * t444;
t647 = pkin(2) * t781 + pkin(8) * t782;
t583 = t647 * t848;
t584 = t648 * t1058;
t675 = pkin(2) * t814 - pkin(8) * t943;
t613 = t675 * t846;
t614 = t677 * t1050;
t971 = qJDD(1) + t583 + t584 + t613 + t614;
t900 = -t1181 + t288 + t303 + t971 - t1189;
t886 = -t1188 + t227 + t254 + t900 - t1193;
t23 = t1091 + t886 + t1103 + t1281;
t1278 = 0.2e1 * t23;
t1043 = t1219 * t647;
t1042 = t1219 * t675;
t944 = -t1166 * t824 - t1042;
t885 = (-t1166 * t807 - t1043) * qJD(2) + t944 * qJDD(2);
t878 = -t827 * t325 - t742 * t444 + t730 * t545 + t586 * t635 + t885;
t876 = -t762 * t314 + t447 * t634 + t600 * t458 - t653 * t496 + t878;
t31 = qJD(6) * t514 - qJDD(6) * t928 + t1139 * t219 - t1151 * t400 + t1155 * t463 - t1158 * t636 + t876;
t1277 = 0.2e1 * t31;
t281 = rSges(6,1) * t572 + rSges(6,2) * t571 - rSges(6,3) * t928;
t1200 = t219 * t281;
t279 = rSges(6,1) * t570 + rSges(6,2) * t569 - rSges(6,3) * t927;
t1201 = t218 * t279;
t172 = rSges(6,1) * t292 + rSges(6,2) * t291 + rSges(6,3) * t514;
t1202 = t172 * t463;
t170 = rSges(6,1) * t290 + rSges(6,2) * t289 + rSges(6,3) * t512;
t1203 = t170 * t462;
t39 = -t1200 + t1201 - t1202 + t886 + t1203;
t1276 = 0.2e1 * t39;
t210 = rSges(6,1) * t449 + rSges(6,2) * t448 + rSges(6,3) * t656;
t429 = -rSges(6,1) * t959 + rSges(6,2) * t706 + rSges(6,3) * t777;
t42 = -t636 * t170 + t463 * t210 + t219 * t429 - t400 * t279 + t876;
t1275 = 0.2e1 * t42;
t1052 = t677 * t1058 + t675 * t848 + qJD(1);
t953 = t729 * t444 - t445 * t730 + t1052;
t915 = t599 * t496 - t498 * t600 + t953;
t81 = -t1150 * t463 + t1151 * t462 + t1100 + t915;
t1274 = 0.2e1 * t81;
t965 = t677 * t860 - t824 * t848;
t919 = t827 * t445 - t635 * t729 + t965;
t899 = t762 * t498 - t599 * t634 + t919;
t90 = -t1139 * t462 + t1150 * t636 - t1102 + t899;
t1273 = 0.2e1 * t90;
t920 = t944 * qJD(2);
t896 = -t827 * t444 + t730 * t635 + t920;
t893 = -t762 * t496 + t600 * t634 + t896;
t91 = t1139 * t463 - t1151 * t636 - t1101 + t893;
t1272 = 0.2e1 * t91;
t100 = t279 * t462 - t281 * t463 + t915;
t1271 = 0.2e1 * t100;
t117 = t281 * t636 - t429 * t462 + t899;
t1270 = 0.2e1 * t117;
t118 = -t636 * t279 + t463 * t429 + t893;
t1269 = 0.2e1 * t118;
t1268 = m(5) / 0.2e1;
t1267 = m(6) / 0.2e1;
t1266 = m(7) / 0.2e1;
t1265 = t218 / 0.2e1;
t1264 = t219 / 0.2e1;
t1263 = t400 / 0.2e1;
t1262 = t446 / 0.2e1;
t1261 = t447 / 0.2e1;
t1260 = -t462 / 0.2e1;
t1259 = t462 / 0.2e1;
t1258 = -t463 / 0.2e1;
t1257 = t463 / 0.2e1;
t1252 = t585 / 0.2e1;
t1251 = t586 / 0.2e1;
t1250 = -t599 / 0.2e1;
t1249 = t599 / 0.2e1;
t1248 = -t600 / 0.2e1;
t1247 = t600 / 0.2e1;
t1246 = -t636 / 0.2e1;
t1245 = t636 / 0.2e1;
t1244 = t653 / 0.2e1;
t1239 = -t729 / 0.2e1;
t1238 = t729 / 0.2e1;
t1237 = -t730 / 0.2e1;
t1236 = t730 / 0.2e1;
t1235 = t742 / 0.2e1;
t1234 = -t762 / 0.2e1;
t1233 = t762 / 0.2e1;
t1231 = t782 / 0.2e1;
t1230 = t784 / 0.2e1;
t1229 = -t943 / 0.2e1;
t1228 = -t947 / 0.2e1;
t1227 = -t827 / 0.2e1;
t1226 = t827 / 0.2e1;
t1218 = Icges(3,4) * t814;
t1217 = Icges(3,4) * t816;
t1216 = Icges(3,4) * t869;
t264 = rSges(5,1) * t513 - rSges(5,2) * t512 + rSges(5,3) * t782;
t1199 = t264 * t599;
t265 = rSges(5,1) * t515 - rSges(5,2) * t514 + rSges(5,3) * t784;
t1198 = t265 * t600;
t441 = rSges(5,1) * t703 + rSges(5,2) * t927 - rSges(5,3) * t943;
t1195 = t441 * t446;
t442 = rSges(5,1) * t705 + rSges(5,2) * t928 - rSges(5,3) * t947;
t1194 = t442 * t447;
t1190 = t498 * t782;
t1168 = t861 * t872;
t1160 = t869 * t873;
t1156 = -t172 - t315;
t1154 = -t210 - t458;
t1153 = -t264 * t947 + t784 * t441;
t450 = t947 * t496;
t1152 = -t279 * t947 - t450;
t1149 = -t265 - t326;
t1148 = -t279 - t496;
t1147 = -t281 - t498;
t1146 = -t314 * t947 + t784 * t496;
t1145 = -t325 * t947 + t784 * t444;
t598 = t1219 * t648;
t1144 = t1219 * t326 + t598;
t1143 = -t570 * rSges(7,2) + t1354 * t569;
t1142 = -t572 * rSges(7,2) + t1354 * t571;
t1002 = t943 * t1051;
t601 = pkin(4) * t1002 + pkin(10) * t1178;
t1141 = -t601 + t1283;
t1001 = t947 * t1051;
t602 = pkin(4) * t1001 + pkin(10) * t1174;
t1140 = -t602 + t1284;
t1138 = t444 * t1162 - t635 * t943;
t652 = t1219 * t677;
t1137 = t1219 * t445 + t652;
t1136 = -t429 - t634;
t430 = rSges(5,1) * t657 - rSges(5,2) * t656 + rSges(5,3) * t1057;
t1135 = -t430 - t545;
t1134 = -t442 - t445;
t1133 = t496 * t1162 - t634 * t943;
t1132 = t959 * rSges(7,2) + t1354 * t706;
t580 = rSges(5,1) * t778 - rSges(5,2) * t777 - rSges(5,3) * t1162;
t1131 = t441 * t1162 - t580 * t943;
t1083 = t866 * t1168;
t736 = pkin(4) * t967 + pkin(10) * t1084;
t1130 = -t1083 * t864 + t1282 - t736;
t1129 = -t580 - t635;
t1128 = t648 * t1166 + t647 * t1167;
t609 = Icges(3,2) * t943 - Icges(3,6) * t1166 + t1218;
t668 = Icges(3,1) * t943 - t1218;
t1127 = -t609 + t668;
t610 = Icges(3,2) * t947 + Icges(3,6) * t1167 + t1217;
t669 = Icges(3,1) * t947 - t1217;
t1126 = -t610 + t669;
t801 = Icges(3,4) * t943;
t611 = Icges(3,1) * t814 - Icges(3,5) * t1166 + t801;
t666 = -Icges(3,2) * t814 + t801;
t1125 = -t611 - t666;
t802 = Icges(3,4) * t947;
t612 = Icges(3,1) * t816 + Icges(3,5) * t1167 + t802;
t667 = -Icges(3,2) * t816 + t802;
t1124 = -t612 - t667;
t674 = pkin(2) * t943 + pkin(8) * t814;
t676 = pkin(2) * t947 + pkin(8) * t816;
t1123 = t676 * t1058 + t674 * t848;
t1122 = t677 * t1166 + t675 * t1167;
t491 = rSges(5,1) * t927 - t703 * rSges(5,2);
t492 = rSges(5,1) * t928 - t705 * rSges(5,2);
t1118 = -t814 * t873 + t858 * t943;
t1117 = -t816 * t873 + t858 * t947;
t631 = -t777 * rSges(5,1) - t778 * rSges(5,2);
t768 = Icges(3,6) * t1219 + (Icges(3,2) * t872 + t1216) * t864;
t822 = (Icges(3,1) * t872 - t1216) * t864;
t1116 = -t768 + t822;
t851 = Icges(3,4) * t1162;
t769 = Icges(3,1) * t1164 + Icges(3,5) * t1219 + t851;
t821 = -Icges(3,2) * t1164 + t851;
t1115 = -t769 - t821;
t797 = qJD(3) * t814;
t662 = qJD(4) * t814 + t797;
t799 = qJD(3) * t816;
t663 = qJD(4) * t816 + t799;
t1113 = rSges(5,1) * t967 + rSges(5,3) * t1164;
t817 = t850 + t849;
t825 = pkin(2) * t1162 + pkin(8) * t1164;
t1107 = qJD(5) * t703;
t1106 = qJD(5) * t705;
t1105 = qJD(5) * t778;
t1104 = qJD(5) * t861;
t1099 = qJD(6) * t861;
t1097 = 2 * m(3);
t1096 = 2 * m(4);
t1095 = 0.2e1 * m(5);
t1094 = 0.2e1 * m(6);
t1093 = 0.2e1 * m(7);
t1090 = 0.2e1 * t943;
t1089 = 0.2e1 * t947;
t1088 = 0.2e1 * t863;
t1087 = 0.2e1 * t865;
t1086 = 0.2e1 * t872;
t1085 = 0.2e1 * t1110;
t1075 = -t315 - t1157;
t1074 = -t326 + t1156;
t1073 = -t458 - t1155;
t1072 = -t545 + t1154;
t1071 = -t1151 * t947 - t450;
t1070 = -t496 - t1151;
t1069 = -t498 - t1150;
t1068 = t264 * t1162 - t430 * t943 + t782 * t580;
t1067 = -t445 + t1147;
t1066 = t314 * t1162 - t458 * t943 + t782 * t634;
t1065 = t1219 * t315 + t1144;
t1064 = t325 * t1162 - t545 * t943 + t782 * t635;
t1063 = -t634 - t1139;
t1062 = t1219 * t498 + t1137;
t1061 = -t635 + t1136;
t1060 = -t807 + t1135;
t1059 = -t824 + t1129;
t364 = t618 * rSges(6,1) + t617 * rSges(6,2) + rSges(6,3) * t1178;
t366 = t620 * rSges(6,1) + t619 * rSges(6,2) + rSges(6,3) * t1174;
t543 = t741 * rSges(6,1) + t740 * rSges(6,2) + rSges(6,3) * t1084;
t1053 = -t1162 / 0.2e1;
t1049 = t1111 / 0.2e1;
t1039 = -t1096 / 0.2e1;
t1038 = t1096 / 0.2e1;
t1037 = -t1095 / 0.2e1;
t1036 = t1095 / 0.2e1;
t1035 = -t1094 / 0.2e1;
t1034 = t1094 / 0.2e1;
t1033 = -t1093 / 0.2e1;
t720 = -qJD(3) * t819 - t1056 * t868;
t721 = qJD(3) * t818 + t1056 * t871;
t490 = rSges(4,1) * t721 + rSges(4,2) * t720 + rSges(4,3) * t1057;
t1032 = t864 * (-t490 - t807);
t632 = rSges(4,1) * t819 + rSges(4,2) * t818 - rSges(4,3) * t1162;
t1031 = t864 * (-t632 - t824);
t1026 = t91 * t1085;
t1025 = t599 * t491 - t492 * t600;
t1024 = t599 * t495 - t497 * t600;
t1023 = t762 * t492 - t599 * t631;
t1022 = t762 * t497 - t599 * t633;
t1021 = -t491 * t762 + t600 * t631;
t1020 = -t495 * t762 + t600 * t633;
t469 = t498 * t1057;
t1019 = -t634 * t784 + t469;
t714 = t716 * pkin(3);
t715 = t718 * pkin(3);
t1018 = t729 * t714 - t715 * t730;
t811 = -pkin(3) * t1080 + t856;
t1017 = -t714 * t827 + t730 * t811;
t1016 = t827 * t715 - t729 * t811;
t1015 = -t326 + t1075;
t1014 = -t170 * t947 + t784 * t279 + t1146;
t1013 = -t545 + t1073;
t1012 = -t807 + t1072;
t1011 = -t445 + t1069;
t1010 = t326 * t1166 + t325 * t1167 + t1128;
t1009 = -t635 + t1063;
t1008 = t445 * t1166 + t444 * t1167 + t1122;
t1007 = -t824 + t1061;
t1006 = t279 * t1162 - t429 * t943 + t1133;
t1005 = t869 * t1049;
t828 = t858 * t1162;
t1003 = -t1160 * t864 + t828;
t994 = -t807 + t1013;
t993 = -t824 + t1009;
t874 = 0.2e1 * qJDD(1);
t992 = 0.2e1 * t583 + 0.2e1 * t584 + 0.2e1 * t613 + 0.2e1 * t614 + t874;
t991 = Icges(4,1) * t871 - Icges(4,4) * t868;
t988 = Icges(4,4) * t871 - Icges(4,2) * t868;
t639 = Icges(3,5) * t781 - Icges(3,6) * t782;
t640 = Icges(3,5) * t783 - Icges(3,6) * t784;
t641 = Icges(3,4) * t781 - Icges(3,2) * t782;
t642 = Icges(3,4) * t783 - Icges(3,2) * t784;
t643 = Icges(3,1) * t781 - Icges(3,4) * t782;
t644 = Icges(3,1) * t783 - Icges(3,4) * t784;
t981 = -(t1167 * t639 - t609 * t784 + t611 * t783 + t641 * t947 + t643 * t816) * t865 + (t1167 * t640 - t610 * t784 + t612 * t783 + t642 * t947 + t644 * t816) * t863;
t975 = -t610 * t869 + t612 * t872;
t976 = -t609 * t869 + t611 * t872;
t980 = -(t1219 * t639 + (qJD(2) * t976 + t641 * t872 + t643 * t869) * t864) * t865 + (t1219 * t640 + (qJD(2) * t975 + t642 * t872 + t644 * t869) * t864) * t863;
t607 = Icges(3,5) * t814 + Icges(3,6) * t943 - Icges(3,3) * t1166;
t608 = Icges(3,5) * t816 + Icges(3,6) * t947 + Icges(3,3) * t1167;
t979 = -(-t1166 * t607 + t609 * t943 + t611 * t814) * t865 + (-t1166 * t608 + t610 * t943 + t612 * t814) * t863;
t978 = -(t1167 * t607 + t609 * t947 + t611 * t816) * t865 + (t1167 * t608 + t610 * t947 + t612 * t816) * t863;
t977 = -(t1219 * t607 + (t609 * t872 + t611 * t869) * t864) * t865 + (t1219 * t608 + (t610 * t872 + t612 * t869) * t864) * t863;
t615 = rSges(3,1) * t814 + rSges(3,2) * t943 - rSges(3,3) * t1166;
t616 = rSges(3,1) * t816 + rSges(3,2) * t947 + rSges(3,3) * t1167;
t974 = t615 * t863 + t616 * t865;
t645 = rSges(3,1) * t781 - rSges(3,2) * t782;
t646 = rSges(3,1) * t783 - rSges(3,2) * t784;
t973 = t645 * t863 + t646 * t865;
t972 = -t768 * t869 + t769 * t872;
t555 = t814 * rSges(4,3) + t1302 * t943;
t556 = t816 * rSges(4,3) + t1302 * t947;
t523 = rSges(5,1) * t1002 - rSges(5,2) * t1178 + t814 * rSges(5,3);
t524 = rSges(5,1) * t1001 - rSges(5,2) * t1174 + t816 * rSges(5,3);
t381 = rSges(6,1) * t1186 - rSges(6,2) * t1187 + t703 * rSges(6,3);
t383 = rSges(6,1) * t1183 - rSges(6,2) * t1184 + t705 * rSges(6,3);
t500 = -rSges(6,1) * t1179 + rSges(6,2) * t1180 + t778 * rSges(6,3);
t966 = t676 * t860 - t825 * t848;
t964 = t1151 * t784 - t1158 * t947 + t1146;
t963 = t170 * t1162 - t210 * t943 + t782 * t429 + t1066;
t962 = t315 * t1166 + t314 * t1167 + t1010;
t961 = t498 * t1166 + t496 * t1167 + t1008;
t960 = -t1139 * t943 + t1151 * t1162 + t1133;
t823 = (rSges(3,1) * t872 - rSges(3,2) * t869) * t864;
t726 = rSges(4,3) * t1164 + t1162 * t1302;
t820 = (Icges(3,5) * t872 - Icges(3,6) * t869) * t864;
t954 = t974 * t864;
t776 = t1219 * rSges(3,3) + (rSges(3,1) * t869 + rSges(3,2) * t872) * t864;
t949 = -t1167 * t776 + t1219 * t616;
t800 = qJD(2) * t823;
t948 = -t1167 * t800 + t1219 * t646;
t946 = -t1166 * t776 - t1219 * t615;
t945 = -t1166 * t800 - t1219 * t645;
t940 = (Icges(5,5) * t927 - Icges(5,6) * t703) * t600 + (Icges(5,5) * t928 - Icges(5,6) * t705) * t599 + (-Icges(5,5) * t777 - Icges(5,6) * t778) * t762;
t939 = (Icges(4,5) * t716 + Icges(4,6) * t958) * t730 + (Icges(4,5) * t718 - Icges(4,6) * t719) * t729 + (Icges(4,5) * t818 - Icges(4,6) * t819) * t827;
t936 = Icges(5,1) * t1051 - Icges(5,4) * t861;
t935 = Icges(5,4) * t1051 - Icges(5,2) * t861;
t933 = -t1219 * t325 - t1043;
t932 = -t1219 * t444 - t1042;
t931 = t381 + t495;
t930 = t383 + t497;
t929 = t500 + t633;
t923 = t1139 * t782 - t1155 * t943 + t1158 * t1162 + t1066;
t922 = 0.2e1 * t288 - 0.2e1 * t1181 + 0.2e1 * t303 - 0.2e1 * t1189 + t992;
t921 = (-t1166 * t825 - t1219 * t674) * qJD(2);
t465 = -t674 + t1118;
t466 = -t676 + t1117;
t916 = t444 * t799 - t445 * t797 + t729 * t465 - t730 * t466 + t1123;
t913 = t279 * t1106 - t1107 * t281 + t462 * t381 - t383 * t463 + t1024;
t912 = t281 * t1105 - t1106 * t429 + t636 * t383 - t462 * t500 + t1022;
t911 = -t1105 * t279 + t429 * t1107 - t381 * t636 + t463 * t500 + t1020;
t910 = -t1219 * t314 + t933;
t909 = -t1219 * t496 + t932;
t904 = (Icges(5,1) * t928 - t1211 - t436) * t599 + (Icges(5,1) * t927 - t1212 - t435) * t600 + (-Icges(5,1) * t777 - t1210 - t578) * t762;
t903 = (Icges(5,2) * t705 - t438 - t686) * t599 + (Icges(5,2) * t703 - t437 - t685) * t600 + (Icges(5,2) * t778 - t579 + t756) * t762;
t902 = (Icges(4,1) * t718 - t1214 - t455) * t729 + (Icges(4,1) * t716 + t1215 - t454) * t730 + (Icges(4,1) * t818 - t1213 - t629) * t827;
t901 = (-Icges(4,2) * t719 + t457 + t713) * t729 + (Icges(4,2) * t958 + t456 + t712) * t730 + (-Icges(4,2) * t819 + t630 + t810) * t827;
t898 = 0.2e1 * t227 - 0.2e1 * t1188 + 0.2e1 * t254 - 0.2e1 * t1193 + t922;
t682 = t1003 - t825;
t895 = t445 * t850 + t827 * t466 - t635 * t799 - t729 * t682 + t966;
t894 = (qJD(2) * t973 + qJDD(2) * t974) * t864;
t892 = t663 * t496 - t662 * t498 + t599 * t601 - t600 * t602 + t916;
t890 = qJD(6) * t705 - t1151 * t1105 + t1107 * t1139 + t1313 * t463 - t1325 * t636 + t1020;
t889 = qJD(6) * t778 + t1106 * t1151 - t1150 * t1107 - t1324 * t463 + t1325 * t462 + t1024;
t888 = qJD(6) * t703 + t1105 * t1150 - t1139 * t1106 - t1313 * t462 + t1324 * t636 + t1022;
t887 = -t444 * t850 - t827 * t465 + t635 * t797 + t730 * t682 + t921;
t884 = t817 * t498 - t599 * t736 + t762 * t602 - t663 * t634 + t895;
t879 = -t817 * t496 + t600 * t736 - t762 * t601 + t662 * t634 + t887;
t106 = t183 * t600 + t184 * t599 + t214 * t762;
t98 = t175 * t600 + t176 * t599 + t195 * t762;
t99 = t177 * t600 + t178 * t599 + t196 * t762;
t875 = (-t1304 * t927 + (t1308 * t570 + t1309 * t569 + t1312 * t703) * t636 + (t1315 * t570 + t1317 * t569 + t1331 * t703) * t463 + (t1314 * t570 + t1316 * t569 + t1330 * t703) * t462 + (t1291 * t778 + t1296 * t705 + t1297 * t703) * qJD(5)) * t1258 + (-t1162 * t1291 - t1296 * t947 - t1297 * t943) * t1264 + (t705 * t904 - t903 * t928 - t940 * t947) * t1250 + (-t110 * t943 - t111 * t947 + t183 * t782 + t184 * t784 + (t1110 * t214 - t135 * t872) * t864) * t1233 + (-t1162 * t195 - t175 * t943 - t176 * t947) * t1261 + (-t1162 * t196 - t177 * t943 - t178 * t947) * t1262 + (-t1162 * t214 - t183 * t943 - t184 * t947) * t1244 + (-t101 * t943 - t102 * t947 + t175 * t782 + t176 * t784 + (t1110 * t195 - t122 * t872) * t864) * t1247 + (-t103 * t943 - t104 * t947 + t177 * t782 + t178 * t784 + (t1110 * t196 - t123 * t872) * t864) * t1249 + ((t1110 * t1289 - t1332 * t872) * t864 + t1338 * t947 + t1339 * t943 + t1292 * t784 + t1293 * t782) * t1245 + ((t1110 * t1290 - t1333 * t872) * t864 + t1340 * t947 + t1341 * t943 + t1294 * t784 + t1295 * t782) * t1259 + ((t1110 * t1291 - t1334 * t872) * t864 + t1342 * t947 + t1343 * t943 + t1296 * t784 + t1297 * t782) * t1257 + t1299 * t1053 + t1300 * t1228 + t1301 * t1229 + (t1304 * t777 + (-t1308 * t959 + t1309 * t706 + t1312 * t778) * t636 + (-t1315 * t959 + t1317 * t706 + t1331 * t778) * t463 + (-t1314 * t959 + t1316 * t706 + t1330 * t778) * t462 + (t1289 * t778 + t1292 * t705 + t1293 * t703) * qJD(5)) * t1246 + (-t1162 * t1289 - t1292 * t947 - t1293 * t943) * t1263 + (-t1304 * t928 + (t1308 * t572 + t1309 * t571 + t1312 * t705) * t636 + (t1315 * t572 + t1317 * t571 + t1331 * t705) * t463 + (t1314 * t572 + t1316 * t571 + t1330 * t705) * t462 + (t1290 * t778 + t1294 * t705 + t1295 * t703) * qJD(5)) * t1260 + (-t1162 * t1290 - t1294 * t947 - t1295 * t943) * t1265 + (t106 + t1335) * t1005 + (t99 + t1336) * t1230 + (t98 + t1337) * t1231 + t1107 * t1351 + t1106 * t1352 + t1105 * t1353 + (t703 * t904 - t903 * t927 - t940 * t943) * t1248 + (-t1162 * t940 + t777 * t903 + t778 * t904) * t1234;
t787 = qJD(2) * t822;
t786 = (Icges(3,4) * t872 - Icges(3,2) * t869) * t1111;
t785 = qJD(2) * t820;
t767 = Icges(3,3) * t1219 + (Icges(3,5) * t869 + Icges(3,6) * t872) * t864;
t725 = qJD(5) * t1084 + t817;
t724 = (Icges(4,5) * t869 + t872 * t991) * t864;
t723 = (Icges(4,6) * t869 + t872 * t988) * t864;
t711 = -rSges(5,2) * t1084 + t1113;
t710 = (Icges(5,5) * t869 + t872 * t936) * t864;
t709 = (Icges(5,6) * t869 + t872 * t935) * t864;
t681 = rSges(4,1) * t818 - rSges(4,2) * t819;
t673 = rSges(3,1) * t947 - rSges(3,2) * t816;
t672 = rSges(3,1) * t943 - rSges(3,2) * t814;
t665 = Icges(3,5) * t947 - Icges(3,6) * t816;
t664 = Icges(3,5) * t943 - Icges(3,6) * t814;
t628 = Icges(4,5) * t819 + Icges(4,6) * t818 - Icges(4,3) * t1162;
t553 = t1104 * t947 + t663;
t552 = t1104 * t943 + t662;
t551 = Icges(4,5) * t816 + t947 * t991;
t550 = Icges(4,5) * t814 + t943 * t991;
t549 = Icges(4,6) * t816 + t947 * t988;
t548 = Icges(4,6) * t814 + t943 * t988;
t533 = rSges(4,1) * t718 - rSges(4,2) * t719;
t532 = rSges(4,1) * t716 + rSges(4,2) * t958;
t521 = Icges(5,5) * t816 + t936 * t947;
t520 = Icges(5,5) * t814 + t936 * t943;
t519 = Icges(5,6) * t816 + t935 * t947;
t518 = Icges(5,6) * t814 + t935 * t943;
t509 = rSges(6,1) * t706 + rSges(6,2) * t959;
t477 = Icges(4,1) * t721 + Icges(4,4) * t720 + Icges(4,5) * t1057;
t476 = Icges(4,4) * t721 + Icges(4,2) * t720 + Icges(4,6) * t1057;
t475 = Icges(4,5) * t721 + Icges(4,6) * t720 + Icges(4,3) * t1057;
t468 = t946 * qJD(2);
t467 = t949 * qJD(2);
t453 = Icges(4,5) * t719 + Icges(4,6) * t718 - Icges(4,3) * t947;
t452 = -Icges(4,5) * t958 + Icges(4,6) * t716 - Icges(4,3) * t943;
t405 = t445 * t1057;
t404 = t442 * t1057;
t399 = t1167 * t767 + t768 * t947 + t769 * t816;
t398 = -t1166 * t767 + t768 * t943 + t769 * t814;
t397 = t947 * t444;
t396 = t947 * t441;
t393 = qJD(2) * t954 + qJD(1);
t344 = rSges(6,1) * t571 - rSges(6,2) * t572;
t342 = rSges(6,1) * t569 - rSges(6,2) * t570;
t311 = Icges(4,1) * t576 + Icges(4,4) * t575 + Icges(4,5) * t784;
t310 = Icges(4,1) * t574 + Icges(4,4) * t573 + Icges(4,5) * t782;
t309 = Icges(4,4) * t576 + Icges(4,2) * t575 + Icges(4,6) * t784;
t308 = Icges(4,4) * t574 + Icges(4,2) * t573 + Icges(4,6) * t782;
t307 = Icges(4,5) * t576 + Icges(4,6) * t575 + Icges(4,3) * t784;
t306 = Icges(4,5) * t574 + Icges(4,6) * t573 + Icges(4,3) * t782;
t248 = t281 * t1057;
t241 = -t1162 * t628 + t629 * t818 + t630 * t819;
t229 = t1167 * t785 - t768 * t784 + t769 * t783 + t786 * t947 + t787 * t816;
t228 = -t1166 * t785 - t768 * t782 + t769 * t781 + t786 * t943 + t787 * t814;
t212 = -t628 * t947 + t629 * t718 + t630 * t719;
t211 = -t628 * t943 + t629 * t716 - t630 * t958;
t201 = -t827 * t460 + t730 * t632 + t920;
t200 = t461 * t827 - t632 * t729 + t965;
t191 = -t1162 * t453 + t455 * t818 + t457 * t819;
t190 = -t1162 * t452 + t454 * t818 + t456 * t819;
t185 = t460 * t729 - t461 * t730 + t1052;
t182 = -t453 * t947 + t455 * t718 + t457 * t719;
t181 = -t452 * t947 + t454 * t718 + t456 * t719;
t180 = -t453 * t943 + t455 * t716 - t457 * t958;
t179 = -t452 * t943 + t454 * t716 - t456 * t958;
t144 = -t762 * t441 + t600 * t580 + t896;
t143 = t442 * t762 - t580 * t599 + t919;
t142 = t476 * t818 + t477 * t819 + t629 * t720 + t630 * t721 + (t1110 * t628 - t475 * t872) * t864;
t137 = -t475 * t947 + t476 * t718 + t477 * t719 + t575 * t629 + t576 * t630 + t628 * t784;
t136 = -t475 * t943 + t476 * t716 - t477 * t958 + t573 * t629 + t574 * t630 + t628 * t782;
t134 = -t827 * t312 - t742 * t460 + t730 * t490 + t586 * t632 + t885;
t133 = t313 * t827 + t461 * t742 - t490 * t729 - t585 * t632 + t914;
t132 = t441 * t599 - t442 * t600 + t953;
t121 = t309 * t818 + t311 * t819 + t455 * t720 + t457 * t721 + (t1110 * t453 - t307 * t872) * t864;
t120 = t308 * t818 + t310 * t819 + t454 * t720 + t456 * t721 + (t1110 * t452 - t306 * t872) * t864;
t119 = t971 + t1280;
t116 = t190 * t730 + t191 * t729 + t241 * t827;
t115 = -t307 * t947 + t309 * t718 + t311 * t719 + t453 * t784 + t455 * t575 + t457 * t576;
t114 = -t306 * t947 + t308 * t718 + t310 * t719 + t452 * t784 + t454 * t575 + t456 * t576;
t113 = -t307 * t943 + t309 * t716 - t311 * t958 + t453 * t782 + t455 * t573 + t457 * t574;
t112 = -t306 * t943 + t308 * t716 - t310 * t958 + t452 * t782 + t454 * t573 + t456 * t574;
t108 = t181 * t730 + t182 * t729 + t212 * t827;
t107 = t179 * t730 + t180 * t729 + t211 * t827;
t93 = -t762 * t264 + t600 * t430 - t653 * t441 + t447 * t580 + t878;
t92 = t265 * t762 - t430 * t599 + t442 * t653 - t446 * t580 + t891;
t82 = -t1194 + t1195 - t1198 + t900 + t1199;
t41 = t172 * t636 - t210 * t462 - t218 * t429 + t281 * t400 + t880;
t40 = t120 * t730 + t121 * t729 + t142 * t827 + t190 * t586 + t191 * t585 + t241 * t742;
t37 = t114 * t730 + t729 * t115 + t137 * t827 + t181 * t586 + t585 * t182 + t212 * t742;
t36 = t112 * t730 + t113 * t729 + t136 * t827 + t179 * t586 + t180 * t585 + t211 * t742;
t1 = [m(2) * qJDD(1) + (-0.2e1 * t1194 + 0.2e1 * t1195 - 0.2e1 * t1198 + t922 + 0.2e1 * t1199) * t1268 + (-0.2e1 * t1200 + 0.2e1 * t1201 - 0.2e1 * t1202 + t898 + 0.2e1 * t1203) * t1267 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t874 / 0.2e1 - g(3) + t894) * m(3) + (t992 / 0.2e1 - g(3) + t1280) * m(4) + (0.2e1 * t1091 + 0.2e1 * t1103 + t898 + 0.2e1 * t1281) * t1266; (t977 * t859 + t980 * t860) * t864 / 0.2e1 + t860 * t1219 * (t1219 * t785 + (qJD(2) * t972 + t786 * t872 + t787 * t869) * t864) - (t393 * (t672 * t863 + t673 * t865) * t1111 + (t468 * (-t1166 * t823 - t1219 * t672) + t467 * (-t1167 * t823 + t1219 * t673)) * qJD(2)) * t1097 / 0.2e1 + (t1291 * t725 + (t1178 * t1312 + t1305 * t570 + t1306 * t569 - t1307 * t927 + t1310 * t618 + t1311 * t617) * t636 + t1296 * t553 + t1297 * t552 + (t1178 * t1331 + t1319 * t570 + t1321 * t569 - t1323 * t927 + t1327 * t618 + t1329 * t617) * t463 + (t1178 * t1330 + t1318 * t570 + t1320 * t569 - t1322 * t927 + t1326 * t618 + t1328 * t617) * t462) * t1258 + ((t1296 * t863 - t1297 * t865) * t864 + t1291 * t1219) * t1264 + (t91 * (t1099 * t947 + t1130 * t463 + t1139 * t552 - t1141 * t636 - t1151 * t725 + t879) + t90 * (t1099 * t943 - t1130 * t462 - t1139 * t553 + t1140 * t636 + t1150 * t725 + t884) + t81 * (qJD(6) * t1084 - t1140 * t463 + t1141 * t462 - t1150 * t552 + t1151 * t553 + t892)) * t1033 + ((t453 * t816 + t549 * t718 + t551 * t719) * t729 + (t452 * t816 + t548 * t718 + t550 * t719) * t730 + (t628 * t816 + t718 * t723 + t719 * t724) * t827 + (t1164 * t212 + t181 * t814 + t182 * t816) * qJD(3) - t881 * t947) * t1239 + ((-t1338 * t863 + t1339 * t865) * t864 + t1332 * t1219) * t1245 + ((-t1340 * t863 + t1341 * t865) * t864 + t1333 * t1219) * t1259 + ((-t1342 * t863 + t1343 * t865) * t864 + t1334 * t1219) * t1257 + ((qJD(2) * t980 + qJDD(2) * t977) * t864 + t40 + t1299) * t1219 / 0.2e1 + (t37 + t229 * t860 + t399 * t859 + (qJD(2) * t981 + qJDD(2) * t978) * t864 + t1300) * t1167 / 0.2e1 + (t1289 * t725 + (t1084 * t1312 - t1305 * t959 + t1306 * t706 + t1307 * t777 + t1310 * t741 + t1311 * t740) * t636 + t1292 * t553 + t1293 * t552 + (t1084 * t1331 - t1319 * t959 + t1321 * t706 + t1323 * t777 + t1327 * t741 + t1329 * t740) * t463 + (t1084 * t1330 - t1318 * t959 + t1320 * t706 + t1322 * t777 + t1326 * t741 + t1328 * t740) * t462) * t1246 + ((t1292 * t863 - t1293 * t865) * t864 + t1289 * t1219) * t1263 + (t1290 * t725 + (t1174 * t1312 + t1305 * t572 + t1306 * t571 - t1307 * t928 + t1310 * t620 + t1311 * t619) * t636 + t1294 * t553 + t1295 * t552 + (t1174 * t1331 + t1319 * t572 + t1321 * t571 - t1323 * t928 + t1327 * t620 + t1329 * t619) * t463 + (t1174 * t1330 + t1318 * t572 + t1320 * t571 - t1322 * t928 + t1326 * t620 + t1328 * t619) * t462) * t1260 + ((t1294 * t863 - t1295 * t865) * t864 + t1290 * t1219) * t1265 - (t1219 * t398 + t864 * t979) * t1050 / 0.2e1 + (t1219 * t399 + t864 * t978) * t846 / 0.2e1 + ((qJD(2) * t945 + qJDD(2) * t946) * t946 + t468 * t945 + (qJD(2) * t948 + qJDD(2) * t949) * t949 + t467 * t948 + (qJDD(1) + t894) * t954 + t393 * t973 * t864) * t1097 / 0.2e1 - m(6) * (g(1) * (t366 + t602 + t1117) + g(2) * (t364 + t601 + t1118) + g(3) * (t1003 + t543 + t736)) + (t201 * (-t827 * t555 + t730 * t726 + (-t1164 * t460 + t632 * t814) * qJD(3) + t921) + t200 * (t556 * t827 - t726 * t729 + (t1164 * t461 - t632 * t816) * qJD(3) + t966) + t185 * (t555 * t729 - t556 * t730 + (t460 * t816 - t461 * t814) * qJD(3) + t1123)) * t1039 + t859 * t1219 * (t1219 * t767 + (t768 * t872 + t769 * t869) * t864) - m(5) * (g(1) * (t524 + t1117) + g(2) * (t523 + t1118) + g(3) * (t828 + (-rSges(5,2) * t1168 - t1160) * t864 + t1113)) + ((-t1219 * t279 + t909) * t1275 + (-t1219 * t170 + t910) * t1269 + 0.2e1 * t41 * (t1219 * t281 + t1062) + (t1219 * t172 + t1065) * t1270 + t961 * t1276 + t962 * t1271 + ((t100 * t172 + t1007 * t42 + t1012 * t118 + t39 * t281) * t1087 + (t100 * t170 + t1007 * t41 + t1012 * t117 + t39 * t279) * t1088) * t864) * t1267 - t116 * t850 / 0.2e1 - m(4) * (g(1) * (t556 + t676) + g(2) * (t555 + t674) + g(3) * (t726 + t825)) + (-t863 * ((-t1124 * t947 + t1126 * t816 + t1167 * t665) * t1167 - (-t1125 * t947 + t1127 * t816 + t1167 * t664) * t1166 + (-t1115 * t947 + t1116 * t816 + t1167 * t820) * t1219) / 0.2e1 + t865 * ((-t1124 * t943 + t1126 * t814 - t1166 * t665) * t1167 - (-t1125 * t943 + t1127 * t814 - t1166 * t664) * t1166 + (-t1115 * t943 + t1116 * t814 - t1166 * t820) * t1219) / 0.2e1) * t864 * qJD(2) ^ 2 + (t134 * (t1031 * t865 - t1219 * t460 - t1042) + t201 * (t1032 * t865 - t1219 * t312 - t1043) + t133 * (t1031 * t863 + t1219 * t461 + t652) + t200 * (t1032 * t863 + t1219 * t313 + t598) + t119 * ((t460 * t863 + t461 * t865) * t864 + t1122) + t185 * ((t312 * t863 + t313 * t865) * t864 + t1128)) * t1038 - (t979 * t1092 + t228 * t860 + t398 * t859 + t36 + (t1219 * t228 + 0.2e1 * t864 * (-(-t1166 * t639 - t609 * t782 + t611 * t781 + t641 * t943 + t643 * t814) * t865 + (-t1166 * t640 - t610 * t782 + t612 * t781 + t642 * t943 + t644 * t814) * t863)) * qJD(2) + t1301) * t1166 / 0.2e1 + t552 * t1351 + t553 * t1352 + t725 * t1353 + ((t453 * t814 + t549 * t716 - t551 * t958) * t729 + (t452 * t814 + t548 * t716 - t550 * t958) * t730 + (t628 * t814 + t716 * t723 - t724 * t958) * t827 + (t1164 * t211 + t179 * t814 + t180 * t816) * qJD(3) - t881 * t943) * t1237 - t662 * t98 / 0.2e1 - t663 * t99 / 0.2e1 + (t123 * t1219 + (-t103 * t865 + t104 * t863) * t864) * t1249 + (t211 * t1219 + (-t179 * t865 + t180 * t863) * t864) * t1251 + (t212 * t1219 + (-t181 * t865 + t182 * t863) * t864) * t1252 - (((t667 * t872 + t669 * t869 + t975) * t863 - (t666 * t872 + t668 * t869 + t976) * t865) * t864 * t1111 + ((-t664 * t865 + t665 * t863 + t821 * t872 + t822 * t869 + t972) * t1111 + t820 * t860) * t1219) * t860 / 0.2e1 - t817 * t106 / 0.2e1 + (t142 * t1219 + (-t120 * t865 + t121 * t863) * t864) * t1226 + (t135 * t1219 + (-t110 * t865 + t111 * t863) * t864) * t1233 + (t241 * t1219 + (-t190 * t865 + t191 * t863) * t864) * t1235 + (0.2e1 * t93 * (-t1219 * t441 + t932) + 0.2e1 * t144 * (-t1219 * t264 + t933) + 0.2e1 * t92 * (t1219 * t442 + t1137) + 0.2e1 * t143 * (t1219 * t265 + t1144) + 0.2e1 * t82 * t1008 + 0.2e1 * t132 * t1010 + ((t1059 * t93 + t1060 * t144 + t132 * t265 + t82 * t442) * t1087 + (t1059 * t92 + t1060 * t143 + t132 * t264 + t82 * t441) * t1088) * t864) * t1268 + (t144 * (-t817 * t441 - t762 * t523 + t662 * t580 + t600 * t711 + t887) + t143 * (t442 * t817 + t524 * t762 - t580 * t663 - t599 * t711 + t895) + t132 * (t441 * t663 - t442 * t662 + t523 * t599 - t524 * t600 + t916)) * t1037 + (t195 * t1219 + (-t175 * t865 + t176 * t863) * t864) * t1261 + (t196 * t1219 + (-t177 * t865 + t178 * t863) * t864) * t1262 + (t909 * t1277 + t910 * t1272 + t1062 * t1298 + t1065 * t1273 + t961 * t1278 + t962 * t1274 + ((t1150 * t23 + t1157 * t81 + t31 * t993 + t91 * t994) * t1087 + (t1151 * t23 + t1158 * t81 + t30 * t993 + t90 * t994) * t1088) * t864 + (t1150 * t1298 - t1151 * t1277 + t1157 * t1273 - t1158 * t1272) * t1219) * t1266 - m(3) * (g(1) * t673 + g(2) * t672 + g(3) * t823) + ((t816 * t434 + t519 * t928 + t705 * t521) * t599 + t178 * t663 + (t816 * t433 + t518 * t928 + t705 * t520) * t600 + t177 * t662 + (t816 * t577 + t705 * t710 + t709 * t928) * t762 + t196 * t817 + t1279 * t947) * t1250 + ((t814 * t434 + t519 * t927 + t703 * t521) * t599 + t176 * t663 + (t814 * t433 + t518 * t927 + t703 * t520) * t600 + t175 * t662 + (t814 * t577 + t703 * t710 + t709 * t927) * t762 + t195 * t817 + t1279 * t943) * t1248 - m(7) * (g(1) * (t1117 + t1284) + g(2) * (t1118 + t1283) + g(3) * (t828 + (-t1083 - t1160) * t864 + t1282)) + (t136 * t1219 + (-t112 * t865 + t113 * t863) * t864) * t1236 + (t137 * t1219 + (-t114 * t865 + t115 * t863) * t864) * t1238 + (t214 * t1219 + (-t183 * t865 + t184 * t863) * t864) * t1244 + (t122 * t1219 + (-t101 * t865 + t102 * t863) * t864) * t1247 - t108 * t799 / 0.2e1 - t107 * t797 / 0.2e1 + (t118 * (-t725 * t279 - t636 * t364 + t552 * t429 + t463 * t543 + t879) + t117 * (t281 * t725 + t366 * t636 - t429 * t553 - t462 * t543 + t884) + t100 * (t279 * t553 - t281 * t552 + t364 * t462 - t366 * t463 + t892)) * t1035 + t863 * (t1219 * t229 + t864 * t981) * t1049 + ((t549 * t818 + t551 * t819) * t729 + (t548 * t818 + t550 * t819) * t730 + (t723 * t818 + t724 * t819) * t827 + (t190 * t814 + t191 * t816) * qJD(3) + ((qJD(3) * t241 + t452 * t730 + t453 * t729 + t628 * t827) * t869 - t881 * t872) * t864) * t1227 + ((-t777 * t519 + t778 * t521) * t599 + t184 * t663 + (-t777 * t518 + t778 * t520) * t600 + t183 * t662 + (-t777 * t709 + t778 * t710) * t762 + t214 * t817 + ((t433 * t600 + t434 * t599 + t577 * t762) * t869 + t1279 * t872) * t864) * t1234; (t134 * (t1162 * t460 - t632 * t943) + t201 * (-t490 * t943 + t632 * t782 + (-t1110 * t460 + t312 * t872) * t864) + t133 * (-t1162 * t461 + t632 * t947) + t200 * (t490 * t947 - t632 * t784 + (t1110 * t461 - t313 * t872) * t864) + t119 * (-t460 * t947 + t461 * t943) + t185 * (-t312 * t947 + t313 * t943 + t460 * t784 - t461 * t782)) * t1038 + (-t1162 * t211 - t179 * t943 - t180 * t947) * t1251 + (-t1162 * t212 - t181 * t943 - t182 * t947) * t1252 + (-t120 * t943 - t121 * t947 + t190 * t782 + t191 * t784 + (t1110 * t241 - t142 * t872) * t864) * t1226 + (-t1162 * t241 - t190 * t943 - t191 * t947) * t1235 + (-t112 * t943 - t113 * t947 + t179 * t782 + t180 * t784 + (t1110 * t211 - t136 * t872) * t864) * t1236 + (-t114 * t943 - t115 * t947 + t181 * t782 + t182 * t784 + (t1110 * t212 - t137 * t872) * t864) * t1238 + (t718 * t901 + t719 * t902 - t939 * t947) * t1239 + t116 * t1005 + t875 - m(7) * (g(1) * (t715 + t951) + g(2) * (t714 + t952) + g(3) * (t811 + t950)) - m(6) * (g(1) * (t715 + t930) + g(2) * (t714 + t931) + g(3) * (t811 + t929)) + (t716 * t901 - t902 * t958 - t939 * t943) * t1237 - m(4) * (g(1) * t533 + g(2) * t532 + g(3) * t681) - m(5) * (g(1) * (t715 + t492) + g(2) * (t714 + t491) + g(3) * (t811 + t631)) + (-t1162 * t939 + t818 * t901 + t819 * t902) * t1227 + t37 * t1228 + t36 * t1229 + t108 * t1230 + t107 * t1231 + (t144 * (t1017 + t1021) + t143 * (t1016 + t1023) + t132 * (t1018 + t1025)) * t1037 + (t201 * (-t532 * t827 + t681 * t730) + t200 * (t533 * t827 - t681 * t729) + t185 * (t532 * t729 - t533 * t730)) * t1039 + t40 * t1053 + ((t960 + t1138) * t1277 + (t923 + t1064) * t1272 + (-t397 + t1071) * t1278 - (t1011 * t23 + t1015 * t81) * t1090 - (t1009 * t30 + t1013 * t90) * t1089 + ((-t444 + t1070) * t1026 + (t1011 * t30 + t1015 * t90) * t1086) * t864 + (t1011 * t782 + t1145 + t964) * t1274 + (t1009 * t784 + t1288 + t405 + t469) * t1273) * t1266 + (t93 * (t1131 + t1138) + t144 * ((-t441 - t444) * t1057 + t1064 + t1068) + t92 * (-t1129 * t947 + t1134 * t1162) + t143 * (t1129 * t784 - t1135 * t947 + t1149 * t1162 + t404 + t405) + t82 * (-t1134 * t943 - t396 - t397) + t132 * (t1134 * t782 - t1149 * t943 + t1145 + t1153)) * t1036 + ((t1006 + t1138) * t1275 + (t963 + t1064) * t1269 + (t1019 + t248 + t405 + (-t429 - t635) * t784) * t1270 + (-t397 + t1152) * t1276 + (t1014 + t1145 - t1190 + (-t281 - t445) * t782) * t1271 - (t100 * t1074 + t1067 * t39) * t1090 - (t1061 * t41 + t1072 * t117) * t1089 + (t118 * (-t444 + t1148) * t1085 + (t1067 * t41 + t1074 * t117) * t1086) * t864) * t1267 + (t91 * (t1017 + t890) + t90 * (t1016 + t888) + t81 * (t1018 + t889)) * t1033 + (t118 * (t1017 + t911) + t117 * (t1016 + t912) + t100 * (t1018 + t913)) * t1035; (t1021 * t144 + t1023 * t143 + t1025 * t132) * t1037 + (t81 * t889 + t888 * t90 + t890 * t91) * t1033 - m(7) * (g(1) * t951 + g(2) * t952 + g(3) * t950) - m(6) * (g(1) * t930 + g(2) * t931 + g(3) * t929) + t875 + (t100 * t913 + t117 * t912 + t118 * t911) * t1035 + (t42 * t1006 + t118 * (t1057 * t1148 + t963) + t41 * (-t1136 * t947 + t1147 * t1162) + t117 * (t1136 * t784 - t1154 * t947 + t1156 * t1162 + t248 + t469) + t39 * (-t1147 * t943 + t1152) + t100 * (t1147 * t782 - t1156 * t943 + t1014)) * t1034 + (t93 * t1131 + t144 * (-t1057 * t441 + t1068) + t92 * (-t1162 * t442 + t580 * t947) + t143 * (-t1162 * t265 + t430 * t947 - t580 * t784 + t404) + t82 * (t442 * t943 - t396) + t132 * (t265 * t943 - t442 * t782 + t1153)) * t1036 - m(5) * (g(1) * t492 + g(2) * t491 + g(3) * t631) + (t960 * t1277 + t923 * t1272 + (-t1139 * t784 + t1019 + t1288) * t1273 + t1071 * t1278 + (-t1150 * t782 - t1190 + t964) * t1274 - (t1069 * t23 + t1075 * t81) * t1090 - (t1063 * t30 + t1073 * t90) * t1089 + (t1070 * t1026 + (t1069 * t30 + t1075 * t90) * t1086) * t864) * t1266; -m(7) * (g(1) * t1142 + g(2) * t1143 + g(3) * t1132) + (t91 * (t1132 * t463 - t1143 * t636) + t90 * (-t1132 * t462 + t1142 * t636) + t81 * (-t1142 * t463 + t1143 * t462)) * t1033 + (t31 * (-t1139 * t927 - t1151 * t777) + t91 * (t1139 * t512 - t1151 * t656 - t1155 * t927 - t1158 * t777) + t30 * (t1139 * t928 + t1150 * t777) + t90 * (-t1139 * t514 + t1150 * t656 + t1155 * t928 + t1157 * t777) + t23 * (t1150 * t927 - t1151 * t928) + t81 * (-t1150 * t512 + t1151 * t514 + t1157 * t927 - t1158 * t928)) * t1093 / 0.2e1 + (t42 * (-t279 * t777 - t429 * t927) + t118 * (-t170 * t777 - t210 * t927 - t279 * t656 + t429 * t512) + t41 * (t281 * t777 + t429 * t928) + t117 * (t172 * t777 + t210 * t928 + t281 * t656 - t429 * t514) + t39 * (-t279 * t928 + t281 * t927) + t100 * (-t170 * t928 + t172 * t927 + t279 * t514 - t281 * t512)) * t1034 + (t118 * (-t342 * t636 + t463 * t509) + t117 * (t344 * t636 - t462 * t509) + t100 * (t342 * t462 - t344 * t463)) * t1035 - m(6) * (g(1) * t344 + g(2) * t342 + g(3) * t509) + (t1290 * t777 - t1294 * t928 - t1295 * t927) * t1265 + (t1291 * t777 - t1296 * t928 - t1297 * t927) * t1264 + (t1289 * t777 - t1292 * t928 - t1293 * t927) * t1263 + (-t1285 * t928 + t1286 * t572 + t1287 * t571) * t1260 + (t1290 * t656 + t1294 * t514 + t1295 * t512 + t1333 * t777 + t1340 * t928 + t1341 * t927) * t1259 + (-t1285 * t927 + t1286 * t570 + t1287 * t569) * t1258 + (t1291 * t656 + t1296 * t514 + t1297 * t512 + t1334 * t777 + t1342 * t928 + t1343 * t927) * t1257 + t1337 * t512 / 0.2e1 + t1336 * t514 / 0.2e1 + (t1285 * t777 - t1286 * t959 + t1287 * t706) * t1246 + (t1289 * t656 + t1292 * t514 + t1293 * t512 + t1332 * t777 + t1338 * t928 + t1339 * t927) * t1245 + t1335 * t656 / 0.2e1 - t1346 * t927 / 0.2e1 - t1345 * t928 / 0.2e1 + t1344 * t777 / 0.2e1; (t90 * t512 + t91 * t514 + t81 * t656 + (t462 * t90 - t463 * t91 - g(3) + t23) * t777 - (t463 * t81 - t636 * t90 - g(1) + t31) * t928 - (-t462 * t81 + t636 * t91 - g(2) + t30) * t927) * m(7);];
tau  = t1;
