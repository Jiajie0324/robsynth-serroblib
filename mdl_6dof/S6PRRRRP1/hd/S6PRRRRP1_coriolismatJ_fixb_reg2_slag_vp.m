% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:59:26
% EndTime: 2019-03-09 00:00:04
% DurationCPUTime: 32.51s
% Computational Cost: add. (19977->951), mult. (45301->1208), div. (0->0), fcn. (50498->10), ass. (0->714)
t987 = qJD(3) + qJD(4);
t770 = sin(pkin(6));
t776 = cos(qJ(2));
t1078 = t770 * t776;
t1160 = cos(qJ(4));
t1145 = cos(pkin(6));
t773 = sin(qJ(3));
t775 = cos(qJ(3));
t1159 = sin(qJ(2));
t969 = t1159 * t770;
t695 = t1145 * t773 + t775 * t969;
t659 = t1160 * t695;
t772 = sin(qJ(4));
t809 = -t1145 * t775 + t773 * t969;
t801 = t772 * t809;
t1236 = -t801 + t659;
t774 = cos(qJ(5));
t1259 = t1236 * t774;
t771 = sin(qJ(5));
t417 = -t1078 * t771 + t1259;
t1126 = t417 * t774;
t1075 = t771 * t1236;
t416 = t1078 * t774 + t1075;
t1128 = t416 * t771;
t1210 = -t1126 / 0.2e1 - t1128 / 0.2e1;
t648 = t659 / 0.2e1;
t1260 = t648 - t801 / 0.2e1;
t1238 = -t1210 + t1260;
t910 = t1160 * t809 + t772 * t695;
t1278 = (t1236 - t1126 - t1128) * t910;
t1279 = t1278 * qJD(1);
t1282 = t1238 * qJD(6) + t1279;
t1239 = t1210 + t1260;
t1281 = -qJD(6) * t1239 - t1279;
t1069 = t772 * t775;
t971 = t1160 * t773;
t723 = t971 + t1069;
t620 = t723 * t1078;
t1280 = -t620 / 0.2e1;
t984 = t1160 * pkin(3);
t757 = -t984 - pkin(4);
t1170 = -t757 / 0.2e1;
t1203 = -pkin(9) - pkin(8);
t739 = t1203 * t775;
t725 = t1160 * t739;
t1070 = t772 * t773;
t900 = t1203 * t1070;
t1237 = -t725 + t900;
t970 = t1160 * t775;
t837 = t970 - t1070;
t534 = t771 * t837;
t688 = pkin(5) * t534;
t1254 = t688 + t1237;
t1271 = t1254 * t771;
t1153 = t837 * pkin(5);
t1068 = t774 * qJ(6);
t1258 = t1237 * t771;
t759 = -pkin(3) * t775 - pkin(2);
t883 = -pkin(4) * t837 - pkin(10) * t723;
t822 = t759 + t883;
t339 = -t774 * t822 + t1258;
t297 = t1068 * t723 + t339;
t253 = -t297 - t1153;
t1277 = (t253 + t1271) * t723;
t1270 = t1254 * t774;
t1077 = t771 * qJ(6);
t1257 = t1237 * t774;
t340 = t771 * t822 + t1257;
t298 = -t1077 * t723 + t340;
t1276 = (-t298 + t1270) * t723;
t1161 = t774 / 0.2e1;
t1165 = -t771 / 0.2e1;
t621 = t837 * t1078;
t1072 = t771 * t621;
t513 = t774 * t969 - t1072;
t1065 = t774 * t621;
t898 = t771 * t969;
t514 = t898 + t1065;
t1233 = t514 * t1161 + t1165 * t513;
t1275 = pkin(4) * t1280 + t1233 * pkin(10);
t1150 = t772 * pkin(3);
t756 = pkin(10) + t1150;
t1274 = t1170 * t620 - t1233 * t756;
t1197 = -t1259 / 0.2e1;
t1273 = t1259 / 0.2e1;
t909 = -t1203 * t971 - t772 * t739;
t1262 = t909 * t774;
t1188 = t1262 / 0.2e1;
t1263 = t909 * t771;
t559 = t1263 / 0.2e1;
t708 = t971 / 0.2e1 + t1069 / 0.2e1;
t1050 = t1078 * t708;
t1093 = t723 * t771;
t481 = pkin(5) * t1093 + t909;
t1272 = t1254 * t481;
t716 = t723 ^ 2;
t766 = t771 ^ 2;
t768 = t774 ^ 2;
t749 = t768 - t766;
t545 = t749 * t716;
t1241 = t987 * t774;
t1256 = t771 * t1241;
t828 = 0.2e1 * t1256 * t723;
t313 = qJD(2) * t545 + t828;
t1265 = t910 / 0.2e1;
t1269 = t1237 * t1265;
t1166 = -t768 / 0.2e1;
t1167 = t766 / 0.2e1;
t918 = t1167 + t1166;
t533 = t918 * t723;
t419 = -qJD(2) * t533 + t1256;
t1268 = (-t339 + t1258) * t723;
t1267 = (-t340 + t1257) * t723;
t1186 = -t909 / 0.2e1;
t1196 = t481 / 0.2e1;
t706 = t723 * pkin(5);
t1266 = (t1196 + t1186) * t771 - t706;
t1156 = t1236 * pkin(4);
t1155 = t1237 * pkin(4);
t748 = t768 + t766;
t1264 = t748 * t910;
t1261 = (t1166 - t766 / 0.2e1) * t910;
t1149 = t774 * pkin(5);
t758 = -pkin(4) - t1149;
t1118 = t1236 * t758;
t1111 = t1237 * t909;
t1192 = t1236 / 0.2e1;
t923 = t1192 - t1236 / 0.2e1;
t288 = t923 * t771;
t1146 = qJD(3) * pkin(3);
t981 = t772 * t1146;
t1255 = -t288 * qJD(1) - t771 * t981;
t926 = t297 / 0.2e1 + t253 / 0.2e1;
t823 = (-t1153 / 0.2e1 + t926) * t774;
t1230 = qJD(2) * t823;
t764 = qJD(5) * t774;
t1253 = -pkin(5) * t764 - t1230;
t1252 = qJD(1) * t1239;
t1187 = t909 / 0.2e1;
t1250 = t1236 * t1187;
t1162 = -t774 / 0.2e1;
t1164 = t771 / 0.2e1;
t845 = t1162 * t416 + t1164 * t417;
t820 = t845 * t837;
t129 = -t820 - t1233;
t1008 = t129 * qJD(1);
t1151 = t723 * pkin(4);
t1152 = t837 * pkin(10);
t575 = t1151 - t1152;
t547 = t774 * t575;
t373 = t547 + t1263;
t546 = t771 * t575;
t374 = -t1262 + t546;
t832 = (t339 * t774 - t340 * t771) * t837;
t71 = (t373 * t774 + t374 * t771) * t723 - t832;
t1248 = t71 * qJD(2) - t1008;
t1158 = pkin(3) * t773;
t541 = t575 + t1158;
t518 = t774 * t541;
t362 = t518 + t1263;
t517 = t771 * t541;
t363 = -t1262 + t517;
t70 = (t362 * t774 + t363 * t771) * t723 - t832;
t1247 = t70 * qJD(2) - t1008;
t1246 = -t688 / 0.2e1 - t900 / 0.2e1;
t1180 = t837 / 0.2e1;
t825 = -t970 / 0.2e1 + t1070 / 0.2e1;
t450 = (t1180 + t825) * t1078;
t995 = t450 * qJD(1);
t1245 = t909 * t987 - t995;
t938 = t1078 / 0.2e1;
t451 = t1078 * t825 - t837 * t938;
t1244 = t451 * qJD(2) + t910 * t987;
t1148 = pkin(10) + qJ(6);
t736 = t1148 * t774;
t1171 = -t736 / 0.2e1;
t906 = t837 * t987;
t1242 = t987 * t748;
t1240 = t253 + t297;
t291 = t1197 + t1273;
t1049 = -t291 * qJD(1) + t774 * t981;
t1028 = qJD(3) * t774;
t1053 = -t517 / 0.2e1 + t1188;
t1179 = -t837 / 0.2e1;
t839 = t1170 * t723 + t1179 * t756;
t797 = t771 * t839 + t1188;
t182 = t797 - t1053;
t924 = t1265 - t910 / 0.2e1;
t290 = t924 * t774;
t999 = t290 * qJD(1);
t1235 = -qJD(2) * t182 - t1028 * t757 + t999;
t1234 = (t1166 - t1167) * t910;
t1034 = qJD(2) * t759;
t1177 = t723 / 0.2e1;
t449 = (t1177 - t708) * t1078;
t996 = t449 * qJD(1);
t1232 = -t723 * t1034 + t996;
t1061 = qJ(6) + t756;
t700 = t1061 * t771;
t1183 = -t700 / 0.2e1;
t1122 = t481 * t774;
t1071 = t771 * t774;
t977 = t723 * t1071;
t893 = -pkin(5) * t977 - t1122 / 0.2e1;
t937 = -t1077 / 0.2e1;
t734 = t757 - t1149;
t715 = t734 * t771;
t946 = t715 / 0.2e1;
t138 = t723 * t946 - (t937 + t1183) * t837 + t893 + t1053;
t1090 = t734 * t774;
t765 = t766 * pkin(5);
t666 = t765 + t1090;
t1231 = qJD(2) * t138 - qJD(3) * t666 + t999;
t286 = t924 * t771;
t1001 = t286 * qJD(1);
t1030 = qJD(3) * t771;
t1190 = -t518 / 0.2e1;
t819 = t839 * t774;
t184 = t1190 - t819 + (t1187 + t1186) * t771;
t1229 = -qJD(2) * t184 - t1030 * t757 + t1001;
t701 = t1061 * t774;
t1182 = -t701 / 0.2e1;
t885 = t918 * pkin(5);
t945 = t1090 / 0.2e1;
t803 = (t945 + t885) * t723;
t930 = -t1068 / 0.2e1;
t117 = t1190 - (t1182 + t930) * t837 + t803 + t1266;
t985 = pkin(5) * t1071;
t640 = -t715 + t985;
t1228 = -qJD(2) * t117 + qJD(3) * t640 + t1001;
t826 = t748 * t1160;
t699 = t826 * pkin(3);
t1057 = t699 * qJD(3);
t986 = -t837 ^ 2 + t716;
t1204 = pkin(10) / 0.2e1;
t899 = -t984 / 0.2e1;
t853 = t1170 + t899;
t978 = t1150 / 0.2e1;
t786 = (-t756 / 0.2e1 + t978 + t1204) * t723 - (-pkin(4) / 0.2e1 + t853) * t837;
t1185 = t1237 / 0.2e1;
t922 = t1185 - t1237 / 0.2e1;
t145 = t771 * t922 + t774 * t786;
t1227 = -qJD(2) * t145 + t1255;
t1175 = -t734 / 0.2e1;
t854 = t1175 + t899;
t1092 = t723 * t772;
t950 = t1092 / 0.2e1;
t794 = pkin(3) * t950 - (t758 / 0.2e1 + t854) * t837;
t1181 = t701 / 0.2e1;
t920 = t1181 + t1171;
t1195 = t1254 / 0.2e1;
t925 = t1195 - t1254 / 0.2e1;
t121 = -t723 * t920 + t771 * t925 + t774 * t794;
t1226 = -qJD(2) * t121 + t1255;
t515 = -t1158 * t837 + t723 * t759;
t1225 = -qJD(2) * t515 + t996;
t1129 = t416 * t837;
t1178 = -t723 / 0.2e1;
t886 = t969 / 0.2e1;
t824 = t1178 * t910 + t886;
t929 = -t1065 / 0.2e1;
t160 = t929 + t1129 / 0.2e1 - t824 * t771;
t1004 = t160 * qJD(1);
t209 = -t1093 * t909 - t339 * t837;
t1224 = -qJD(2) * t209 + t1004;
t151 = pkin(5) * t716 * t768 - t1093 * t481 - t297 * t837;
t1223 = -qJD(2) * t151 + t1004;
t1127 = t417 * t837;
t934 = -t1072 / 0.2e1;
t159 = t934 - t1127 / 0.2e1 + t824 * t774;
t1005 = t159 * qJD(1);
t1091 = t723 * t774;
t210 = t1091 * t909 + t340 * t837;
t1222 = -qJD(2) * t210 + t1005;
t1199 = -t417 / 0.2e1;
t849 = (t1199 + t1273) * t723;
t1105 = t620 * t771;
t953 = -t1105 / 0.2e1;
t104 = t953 + t849;
t1015 = t104 * qJD(1);
t115 = t1267 - (-t374 - t1262) * t837;
t1221 = t115 * qJD(2) + t1015;
t1200 = -t416 / 0.2e1;
t935 = t1075 / 0.2e1;
t850 = (t1200 + t935) * t723;
t1104 = t620 * t774;
t952 = t1104 / 0.2e1;
t99 = t952 + t850;
t1062 = t99 * qJD(1);
t114 = t1268 - (t373 - t1263) * t837;
t1220 = t114 * qJD(2) + t1062;
t881 = t924 * t837;
t811 = t1177 * t1236 - t881;
t791 = t1178 * t417 + t774 * t811;
t106 = t953 + t791;
t1014 = t106 * qJD(1);
t113 = t1267 - (-t363 - t1262) * t837;
t1219 = t113 * qJD(2) + t1014;
t792 = t1178 * t416 + t771 * t811;
t101 = t952 + t792;
t1016 = t101 * qJD(1);
t112 = t1268 - (t362 - t1263) * t837;
t1218 = t112 * qJD(2) + t1016;
t976 = qJ(6) * t534;
t306 = -t976 + t363;
t74 = t1276 - (-t306 - t1122) * t837;
t1217 = t74 * qJD(2) + t1014;
t309 = -t976 + t374;
t75 = t1276 - (-t309 - t1122) * t837;
t1216 = t75 * qJD(2) + t1015;
t1123 = t481 * t771;
t537 = t774 * t837;
t882 = -qJ(6) * t537 + t706;
t255 = t362 + t882;
t66 = t1277 - (t255 - t1123) * t837;
t1215 = t66 * qJD(2) + t1016;
t1157 = pkin(5) * t771;
t146 = t298 * t837 + (t1157 * t716 + t481 * t723) * t774;
t1214 = qJD(2) * t146 - t1005;
t262 = t373 + t882;
t67 = t1277 - (t262 - t1123) * t837;
t1213 = t67 * qJD(2) + t1062;
t714 = -t725 / 0.2e1;
t1212 = t714 - t1246;
t1176 = t725 / 0.2e1;
t1211 = t1176 + t1246;
t1032 = qJD(2) * t774;
t966 = t771 * t1032;
t263 = t533 * t987 + t716 * t966;
t1035 = qJD(2) * t723;
t961 = t837 * t1035;
t572 = t774 * t961;
t246 = -t534 * t987 - t572;
t500 = -0.2e1 * t723 * t966 + t749 * t987;
t1139 = t253 * t774;
t927 = -t537 / 0.2e1;
t818 = pkin(5) * t927 - t1139 / 0.2e1 + t297 * t1162;
t1207 = t818 * qJD(5) + t1008;
t1206 = -qJD(5) * t823 - t1008;
t1202 = t255 / 0.2e1;
t1201 = t262 / 0.2e1;
t1198 = t417 / 0.2e1;
t1191 = t513 / 0.2e1;
t1189 = -t547 / 0.2e1;
t649 = -t659 / 0.2e1;
t1174 = t734 / 0.2e1;
t735 = t1148 * t771;
t1173 = -t735 / 0.2e1;
t1172 = t735 / 0.2e1;
t1169 = t757 / 0.2e1;
t1168 = -t758 / 0.2e1;
t1163 = t772 / 0.2e1;
t1147 = pkin(3) * qJD(4);
t921 = t1183 + t1172;
t35 = (t309 / 0.2e1 - t306 / 0.2e1) * t774 + (-t262 / 0.2e1 + t1202) * t771 - (t771 * t920 + t774 * t921) * t837;
t1144 = qJD(2) * t35;
t54 = t1240 * t1093;
t1141 = qJD(2) * t54;
t81 = (t374 / 0.2e1 - t363 / 0.2e1) * t774 + (-t373 / 0.2e1 + t362 / 0.2e1) * t771;
t1140 = qJD(2) * t81;
t1138 = t255 * t771;
t1137 = t262 * t771;
t1135 = t306 * t774;
t1134 = t309 * t774;
t1133 = t362 * t771;
t1132 = t363 * t774;
t1131 = t373 * t771;
t1130 = t374 * t774;
t1116 = t910 * t620;
t865 = t298 * t771 + t1139;
t833 = t865 * t837;
t52 = (t255 * t774 + t306 * t771) * t723 + t833;
t1113 = t52 * qJD(2);
t53 = (t262 * t774 + t309 * t771) * t723 + t833;
t1112 = t53 * qJD(2);
t1107 = t620 * t909;
t1100 = t700 * t723;
t1099 = t700 * t771;
t1098 = t700 * t774;
t1097 = t701 * t723;
t1096 = t701 * t771;
t1095 = t701 * t774;
t1089 = t735 * t723;
t1088 = t735 * t771;
t1087 = t735 * t774;
t1086 = t736 * t723;
t1085 = t736 * t771;
t1084 = t736 * t774;
t1081 = t756 * t723;
t1080 = t757 * t837;
t741 = t758 * t771;
t1079 = t758 * t774;
t1076 = t771 * t910;
t1067 = t774 * t910;
t128 = -t820 + t1233;
t1060 = t128 * qJD(2);
t134 = -t723 * t923 - t881;
t1058 = t134 * qJD(3);
t1055 = t129 * qJD(2);
t1052 = t518 / 0.2e1 + t559;
t1051 = -t546 / 0.2e1 + t1188;
t119 = t723 * t921 + t771 * t794 - t774 * t925;
t1048 = qJD(2) * t119;
t142 = t771 * t786 - t774 * t922;
t1047 = qJD(2) * t142;
t447 = t986 * t771;
t1042 = qJD(2) * t447;
t448 = t986 * t774;
t1041 = qJD(2) * t448;
t516 = t1158 * t723 + t759 * t837;
t1039 = qJD(2) * t516;
t1036 = qJD(2) * t837;
t1033 = qJD(2) * t770;
t1031 = qJD(2) * t775;
t1029 = qJD(3) * t773;
t1027 = qJD(3) * t775;
t1026 = qJD(3) * t776;
t1025 = qJD(4) * t759;
t1024 = qJD(4) * t771;
t1023 = qJD(4) * t774;
t1022 = qJD(5) * t298;
t1021 = qJD(5) * t417;
t1020 = qJD(5) * t701;
t1019 = qJD(5) * t736;
t490 = qJD(5) * t771;
t1018 = qJD(6) * t771;
t1017 = qJD(6) * t774;
t111 = -t416 * t513 + t417 * t514 + t1116;
t1013 = t111 * qJD(1);
t1007 = t134 * qJD(2);
t742 = t770 ^ 2 * t1159 * t776;
t194 = t1236 * t621 + t1116 - t742;
t1002 = t194 * qJD(1);
t380 = -t742 + (t695 * t775 + t773 * t809) * t1078;
t997 = t380 * qJD(1);
t994 = t986 * qJD(2);
t993 = t533 * qJD(5);
t992 = t534 * qJD(2);
t529 = t537 * qJD(2);
t544 = t748 * t716;
t991 = t544 * qJD(2);
t989 = t708 * qJD(2);
t767 = t773 ^ 2;
t769 = t775 ^ 2;
t750 = t769 - t767;
t988 = t750 * qJD(2);
t983 = pkin(2) * t773 * qJD(2);
t982 = pkin(2) * t1031;
t980 = pkin(5) * t1018;
t979 = t772 * t1147;
t690 = t699 * qJD(4);
t975 = t690 + t1057;
t974 = t771 * t1160;
t973 = t774 * t1160;
t972 = t1160 * t837;
t968 = t837 * t1034;
t965 = t723 * t490;
t964 = t723 * t764;
t963 = t723 * t1018;
t962 = t723 * t1017;
t960 = t776 * t1033;
t753 = t771 * t764;
t959 = t773 * t1027;
t686 = t837 * t1017;
t958 = -t1123 / 0.2e1;
t957 = t1123 / 0.2e1;
t476 = t910 * t1164;
t477 = t910 * t1161;
t951 = -t1093 / 0.2e1;
t949 = -t1091 / 0.2e1;
t948 = t1091 / 0.2e1;
t947 = t723 * t1175;
t944 = t723 * t1168;
t943 = t741 / 0.2e1;
t942 = t1079 / 0.2e1;
t939 = -t1078 / 0.2e1;
t936 = t1076 / 0.2e1;
t933 = t534 / 0.2e1;
t932 = -t534 / 0.2e1;
t928 = t537 / 0.2e1;
t919 = -t715 / 0.2e1 - t741 / 0.2e1;
t916 = qJD(2) * t1159;
t915 = t1160 * qJD(3);
t914 = t1160 * qJD(4);
t912 = (t767 + t769) * t776;
t571 = t987 * t723;
t904 = t987 * t771;
t902 = t774 * t979;
t901 = pkin(5) * t948;
t457 = pkin(5) * t476;
t895 = t716 * t753;
t894 = t910 * t948;
t892 = t770 * t916;
t891 = -t974 / 0.2e1;
t890 = t974 / 0.2e1;
t889 = t973 / 0.2e1;
t878 = -t572 + t964;
t877 = t837 * t571;
t404 = t723 * t906;
t874 = pkin(3) * t891;
t873 = t774 * t899;
t848 = t1161 * t298 + t1165 * t253;
t782 = t1196 * t1236 + t1198 * t306 + t1200 * t255 + t1254 * t1265 - t848 * t910;
t805 = t1175 * t620 + t1182 * t514 + t1191 * t700;
t3 = t782 + t805;
t40 = t253 * t255 + t298 * t306 + t1272;
t872 = t3 * qJD(1) + t40 * qJD(2);
t47 = t253 * t262 + t298 * t309 + t1272;
t784 = (t1195 - t848) * t910 + t262 * t1200 + t309 * t1198 + t481 * t1192;
t804 = t1168 * t620 + t1171 * t514 + t1172 * t513;
t5 = t784 + t804;
t871 = t5 * qJD(1) + t47 * qJD(2);
t869 = qJ(6) * t927 + t706 + t957;
t838 = t1161 * t340 + t1164 * t339;
t844 = t1250 + t1269;
t781 = t1198 * t363 + t1200 * t362 - t838 * t910 + t844;
t11 = t781 + t1274;
t72 = -t339 * t362 + t340 * t363 + t1111;
t868 = t11 * qJD(1) + t72 * qJD(2);
t783 = (t1185 - t838) * t910 + t373 * t1200 + t374 * t1198 + t1250;
t13 = t783 - t1275;
t73 = -t339 * t373 + t340 * t374 + t1111;
t867 = t13 * qJD(1) + t73 * qJD(2);
t17 = t926 * t417 + (t910 * t949 + t1191) * pkin(5);
t55 = pkin(5) * t481 * t1091 - t1240 * t298;
t866 = -qJD(1) * t17 + qJD(2) * t55;
t864 = t1132 - t1133;
t863 = t1130 - t1131;
t522 = t1095 + t1099;
t861 = t1080 - t1081;
t606 = t1084 + t1088;
t229 = t1158 * t759;
t795 = t1192 * t909 + t1269 - t844;
t827 = t1160 * t1280 + t621 * t1163;
t68 = (t773 * t938 + t827) * pkin(3) + t795;
t860 = -t68 * qJD(1) + t229 * qJD(2);
t132 = t865 * t723;
t153 = t723 * t845 + t1050;
t859 = -qJD(1) * t153 - qJD(2) * t132;
t858 = t134 * qJD(1);
t495 = t649 + t648;
t597 = t1176 + t714;
t857 = qJD(1) * t495 + qJD(2) * t597;
t852 = -t1152 / 0.2e1 + t1151 / 0.2e1;
t851 = qJ(6) * t933 - t893;
t847 = -t1132 / 0.2e1 + t1133 / 0.2e1;
t846 = t1130 / 0.2e1 - t1131 / 0.2e1;
t842 = t1096 / 0.2e1 - t1098 / 0.2e1;
t841 = -t1095 / 0.2e1 - t1099 / 0.2e1;
t840 = -t1084 / 0.2e1 - t1088 / 0.2e1;
t217 = (-qJD(5) + t1036) * t1093;
t462 = qJD(5) * t708 - t961;
t834 = -t902 - t1049;
t831 = pkin(4) / 0.2e1 + t853;
t830 = t1168 + t854;
t829 = t852 * t774;
t386 = (t700 * t974 + t701 * t973 + t734 * t772) * pkin(3);
t788 = (t1163 * t910 + t416 * t890 + t417 * t889) * pkin(3);
t777 = t1174 * t1236 + t841 * t910 + t788;
t39 = -t1118 / 0.2e1 - t840 * t910 + t777;
t779 = (t1163 * t481 + t253 * t891 + t298 * t889) * pkin(3) + t262 * t1183 + t309 * t1181 + t1254 * t1174;
t806 = t1168 * t1254 + t1171 * t306 + t1172 * t255;
t9 = t779 + t806;
t821 = t39 * qJD(1) + t9 * qJD(2) + t386 * qJD(3);
t21 = t926 * t701 + (t774 * t947 + t1202 + t958) * pkin(5);
t316 = pkin(5) * t715;
t60 = pkin(5) * t286;
t817 = -qJD(1) * t60 - qJD(2) * t21 + qJD(3) * t316;
t778 = t846 * t756 + (t1163 * t909 + t339 * t890 + t340 * t889) * pkin(3) + t1237 * t1169;
t27 = t1155 / 0.2e1 + t847 * pkin(10) + t778;
t780 = t1169 * t1236 + t1261 * t756 + t788;
t49 = t1156 / 0.2e1 - pkin(10) * t1261 + t780;
t530 = (t756 * t826 + t757 * t772) * pkin(3);
t816 = t49 * qJD(1) + t27 * qJD(2) + t530 * qJD(3);
t790 = -t723 * t842 + t848;
t77 = t790 + t1211;
t815 = qJD(2) * t77 + qJD(3) * t522 - t1252;
t195 = t830 * t1157;
t24 = t926 * t736 + (t774 * t944 + t1201 + t958) * pkin(5);
t422 = pkin(5) * t741;
t814 = -qJD(2) * t24 - qJD(3) * t195 + qJD(4) * t422;
t588 = t1035 * t771 - t1241;
t589 = t1032 * t723 + t904;
t802 = (t942 + t885) * t723;
t123 = t1189 - (t1171 + t930) * t837 + t802 + t1266;
t507 = (t899 + t1149) * t771 + t919;
t689 = -t741 + t985;
t813 = qJD(2) * t123 - qJD(3) * t507 - qJD(4) * t689;
t140 = t723 * t943 - (t937 + t1173) * t837 + t893 + t1051;
t519 = t774 * t830 - t765;
t707 = t765 + t1079;
t812 = -qJD(2) * t140 - qJD(3) * t519 + qJD(4) * t707;
t810 = (t972 / 0.2e1 + t950) * pkin(3);
t799 = t771 * t852 + t1188;
t200 = -t1262 / 0.2e1 + t546 / 0.2e1 + t799;
t635 = t831 * t774;
t808 = pkin(4) * t1023 - qJD(2) * t200 + qJD(3) * t635;
t202 = t1189 - t829;
t634 = t831 * t771;
t807 = pkin(4) * t1024 - qJD(2) * t202 + qJD(3) * t634;
t333 = t978 + (t1171 + t1182) * t774 + (t1173 + t1183) * t771;
t789 = (-t1085 / 0.2e1 + t1087 / 0.2e1) * t723 + t848;
t79 = t789 + t1211;
t800 = qJD(2) * t79 - qJD(3) * t333 + qJD(4) * t606 - t1252;
t796 = -t1175 * t837 + t810;
t787 = -t1081 / 0.2e1 + t1080 / 0.2e1 + t810;
t763 = pkin(5) * t490;
t754 = t773 * t1031;
t747 = t771 * t979;
t738 = t749 * qJD(5);
t737 = t748 * qJD(6);
t637 = pkin(4) * t1162 + t1161 * t757 + t873;
t636 = pkin(4) * t1165 + t1164 * t757 + t874;
t585 = -t1104 / 0.2e1;
t584 = t1105 / 0.2e1;
t569 = t589 * pkin(5);
t542 = t987 * t708;
t539 = t547 / 0.2e1;
t525 = t534 * qJD(6);
t520 = t765 + t942 + t945 + t873;
t508 = (t899 - t1149) * t771 - t919;
t502 = 0.2e1 * t1176 - t900;
t491 = t764 - t529;
t489 = t992 - t490;
t452 = t723 * t939 - t1050;
t446 = t452 * qJD(2);
t441 = t450 * qJD(2);
t439 = t449 * qJD(2);
t427 = pkin(5) * t957;
t403 = 0.2e1 * t774 * t217;
t379 = 0.2e1 * t649 + t801;
t358 = -t768 * t961 - t993;
t357 = -t766 * t961 + t993;
t334 = t978 - t840 - t841;
t308 = t768 * t877 - t895;
t307 = t766 * t877 + t895;
t300 = -qJD(5) * t537 - t1041;
t299 = qJD(5) * t534 + t1042;
t296 = t477 + t1067 / 0.2e1;
t295 = 0.2e1 * t477;
t294 = t476 + t936;
t293 = 0.2e1 * t476;
t292 = 0.2e1 * t1197;
t287 = t1164 * t1236 + t935;
t251 = -qJD(5) * t545 - t828 * t837;
t245 = t537 * t987 - t771 * t961;
t240 = -t993 - (-t1035 * t768 - t1256) * t837;
t239 = t993 - (-t1035 * t766 + t1256) * t837;
t220 = t723 * t904 + t1041;
t219 = t1241 * t723 - t1042;
t208 = 0.2e1 * (-qJD(5) - t1036) * t977 + t749 * t906;
t206 = t448 * t987 + t837 * t965;
t205 = -t447 * t987 + t837 * t964;
t203 = 0.2e1 * t559 + t539 - t829;
t201 = t799 + t1051;
t196 = (t874 + t943 + t946) * pkin(5);
t185 = t559 - t819 + t1052;
t183 = t797 + t1053;
t162 = t1127 / 0.2e1 + t894 + t934 + t774 * t886;
t161 = -t1129 / 0.2e1 + t910 * t951 + t929 - t898 / 0.2e1;
t154 = t416 * t948 + t417 * t951 + t1050;
t149 = t1261 + t1234;
t144 = pkin(4) * t927 + pkin(10) * t949 + t787 * t774 + t1258;
t143 = pkin(4) * t932 + pkin(10) * t951 + t787 * t771 - t1257;
t141 = -t1172 * t837 + t771 * t944 + t1051 + t851;
t139 = t1179 * t700 + t771 * t947 + t1053 + t851;
t122 = -t1171 * t837 + t539 + t559 + t802 + t869;
t120 = -t1097 / 0.2e1 + t1271 - t1086 / 0.2e1 + t758 * t928 + t796 * t774;
t118 = -t1100 / 0.2e1 - t1270 - t1089 / 0.2e1 + t758 * t933 + t796 * t771;
t116 = t1180 * t701 + t1052 + t803 + t869;
t105 = t584 + t791;
t103 = t584 + t849;
t102 = t585 + t792;
t100 = t585 + t850;
t80 = t846 - t847;
t78 = t789 + t1212;
t76 = t790 + t1212;
t69 = pkin(3) * t827 + t1158 * t939 - t795;
t65 = 0.2e1 * t457;
t63 = qJD(2) * t160 + qJD(3) * t290;
t62 = qJD(2) * t159 + qJD(3) * t286;
t61 = pkin(5) * t936 + t457;
t57 = qJD(2) * t162 + qJD(3) * t294 + qJD(4) * t293 - t1021;
t56 = qJD(2) * t161 + qJD(3) * t296 + qJD(4) * t295 + qJD(5) * t416;
t48 = -t1156 / 0.2e1 + t780 + t1234 * pkin(10);
t46 = -qJD(2) * t101 + qJD(4) * t291 - qJD(5) * t286;
t45 = -qJD(2) * t99 - qJD(3) * t291;
t44 = -qJD(2) * t106 + qJD(4) * t288 - qJD(5) * t290;
t43 = -qJD(2) * t104 - qJD(3) * t288;
t38 = t1067 * t1171 - t1076 * t1172 + t1118 / 0.2e1 + t777;
t36 = t1134 / 0.2e1 - t1137 / 0.2e1 + t736 * t932 + t1135 / 0.2e1 + t735 * t928 - t1138 / 0.2e1 - t842 * t837;
t33 = qJD(2) * t105 + qJD(4) * t287 + qJD(5) * t296 + t1030 * t1236;
t32 = qJD(2) * t103 + qJD(3) * t287 + qJD(5) * t295 + t1024 * t1236;
t31 = qJD(2) * t102 + qJD(4) * t292 + qJD(5) * t294 - t1028 * t1236;
t30 = qJD(2) * t100 + qJD(3) * t292 + qJD(5) * t293 - t1023 * t1236;
t26 = t1132 * t1204 - pkin(10) * t1133 / 0.2e1 - t1155 / 0.2e1 + t778;
t25 = pkin(5) * t1201 + t1171 * t1240 + t758 * t901 + t427;
t23 = t129 * t987;
t22 = pkin(5) * t1202 + t1182 * t1240 + t734 * t901 + t427;
t20 = -qJD(3) * t1264 + t149 * qJD(4) + t1060;
t19 = t149 * qJD(3) - qJD(4) * t1264 + t1060;
t18 = t1240 * t1199 + (t1191 + t894) * pkin(5);
t16 = qJD(3) * t106 + qJD(4) * t104 - qJD(5) * t160;
t15 = qJD(3) * t101 + qJD(4) * t99 - qJD(5) * t159;
t14 = (-t513 * t774 - t514 * t771) * t1035 + t987 * t128;
t12 = t783 + t1275;
t10 = t781 - t1274;
t8 = t779 - t806;
t7 = (t1091 * t620 + t514 * t837) * qJD(2) + t105 * qJD(3) + t103 * qJD(4) + t161 * qJD(5);
t6 = (t1093 * t620 - t513 * t837) * qJD(2) + t102 * qJD(3) + t100 * qJD(4) + t162 * qJD(5);
t4 = t784 - t804;
t2 = t782 - t805;
t1 = qJD(2) * t111 + t1278 * t987;
t28 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t380, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t892, -t960, 0, 0, 0, 0, 0, 0, 0, 0 (-t1026 * t773 - t775 * t916) * t770 (-t1026 * t775 + t773 * t916) * t770, t1033 * t912, t997 + (-pkin(2) * t1159 + pkin(8) * t912) * t1033, 0, 0, 0, 0, 0, 0, t452 * t987 - t837 * t892, t451 * t987 + t723 * t892 (t620 * t723 + t621 * t837) * qJD(2) + t1058, t1002 + (t1237 * t621 + t759 * t969 + t1107) * qJD(2) + t69 * qJD(3), 0, 0, 0, 0, 0, 0, t6, t7, t14, t1013 + (-t339 * t513 + t340 * t514 + t1107) * qJD(2) + t10 * qJD(3) + t12 * qJD(4), 0, 0, 0, 0, 0, 0, t6, t7, t14, t1013 + (t253 * t513 + t298 * t514 + t481 * t620) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t18 * qJD(5) + t154 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695 * qJD(3) - t773 * t960, qJD(3) * t809 - t775 * t960, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1236 + qJD(4) * t379 + t446, t1244, t1007, t69 * qJD(2) + (-t1160 * t1236 - t772 * t910) * t1146, 0, 0, 0, 0, 0, 0, t31, t33, t20, t1279 + t10 * qJD(2) + (t1236 * t757 - t1264 * t756) * qJD(3) + t48 * qJD(4), 0, 0, 0, 0, 0, 0, t31, t33, t20, t2 * qJD(2) + (t1236 * t734 - t522 * t910) * qJD(3) + t38 * qJD(4) + t61 * qJD(5) + t1282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t379 - qJD(4) * t1236 + t446, t1244, 0, 0, 0, 0, 0, 0, 0, 0, t30, t32, t19, t1279 + t12 * qJD(2) + t48 * qJD(3) + (-pkin(10) * t1264 - t1156) * qJD(4), 0, 0, 0, 0, 0, 0, t30, t32, t19, t4 * qJD(2) + t38 * qJD(3) + (-t606 * t910 + t1118) * qJD(4) + t65 * qJD(5) + t1282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, t56, 0, 0, 0, 0, 0, 0, 0, 0, t57, t56, 0, -pkin(5) * t1021 + qJD(2) * t18 + qJD(3) * t61 + qJD(4) * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t154 + t1238 * t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t997, 0, 0, 0, 0, 0, 0, -t987 * t449, -t987 * t450, t1058, -qJD(3) * t68 - t1002, 0, 0, 0, 0, 0, 0, t15, t16, t23, qJD(3) * t11 + qJD(4) * t13 - t1013, 0, 0, 0, 0, 0, 0, t15, t16, t23, qJD(3) * t3 + qJD(4) * t5 - qJD(5) * t17 - qJD(6) * t153 - t1013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t959, t750 * qJD(3), 0, -t959, 0, 0, -pkin(2) * t1029, -pkin(2) * t1027, 0, 0, t877, -t987 * t986, 0, -t404, 0, 0, qJD(3) * t515 + t1025 * t723, qJD(3) * t516 + t1025 * t837, 0, qJD(3) * t229, t308, t251, t206, t307, t205, -t404, qJD(3) * t112 + qJD(4) * t114 + qJD(5) * t210, qJD(3) * t113 + qJD(4) * t115 + qJD(5) * t209, -qJD(3) * t70 - qJD(4) * t71, qJD(3) * t72 + qJD(4) * t73, t308, t251, t206, t307, t205, -t404, qJD(3) * t66 + qJD(4) * t67 + qJD(5) * t146 + t686 * t723, qJD(3) * t74 + qJD(4) * t75 + qJD(5) * t151 - t837 * t963, -qJD(3) * t52 - qJD(4) * t53 + qJD(5) * t54 + qJD(6) * t544, qJD(3) * t40 + qJD(4) * t47 + qJD(5) * t55 - qJD(6) * t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t754, t988, t1027, -t754, -t1029, 0, -pkin(8) * t1027 - t983, pkin(8) * t1029 - t982, 0, 0, t961, -t994, t906, -t961, -t571, 0, -qJD(3) * t1237 + qJD(4) * t502 - t1225, t1039 + t1245 (-t972 - t1092) * t1146 + t858 (-t1160 * t1237 - t772 * t909) * t1146 + t860, t240, t208, t220, t239, t219, t462 (t771 * t861 - t1257) * qJD(3) + t143 * qJD(4) + t185 * qJD(5) + t1218 (t774 * t861 + t1258) * qJD(3) + t144 * qJD(4) + t183 * qJD(5) + t1219, qJD(3) * t864 + t80 * qJD(4) - t1247 (t1237 * t757 + t756 * t864) * qJD(3) + t26 * qJD(4) + t868, t240, t208, t220, t239, t219, t462 (t534 * t734 - t1100 - t1270) * qJD(3) + t118 * qJD(4) + t116 * qJD(5) + t525 + t1215 (t537 * t734 - t1097 + t1271) * qJD(3) + t120 * qJD(4) + t139 * qJD(5) + t686 + t1217, -t1113 + (-t1138 + t1135 - (t1096 - t1098) * t837) * qJD(3) + t36 * qJD(4) + t1207 (t1254 * t734 - t255 * t700 + t306 * t701) * qJD(3) + t8 * qJD(4) + t22 * qJD(5) + t76 * qJD(6) + t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t961, -t994, t906, -t961, -t571, 0, qJD(3) * t502 - qJD(4) * t1237 - t1232, t1245 + t968, 0, 0, t240, t208, t220, t239, t219, t462, t143 * qJD(3) + (t771 * t883 - t1257) * qJD(4) + t203 * qJD(5) + t1220, t144 * qJD(3) + (t774 * t883 + t1258) * qJD(4) + t201 * qJD(5) + t1221, t80 * qJD(3) + qJD(4) * t863 - t1248, t26 * qJD(3) + (pkin(10) * t863 - t1155) * qJD(4) + t867, t240, t208, t220, t239, t219, t462, t118 * qJD(3) + (t534 * t758 - t1089 - t1270) * qJD(4) + t122 * qJD(5) + t525 + t1213, t120 * qJD(3) + (t537 * t758 - t1086 + t1271) * qJD(4) + t141 * qJD(5) + t686 + t1216, -t1112 + t36 * qJD(3) + (-t1137 + t1134 - (t1085 - t1087) * t837) * qJD(4) + t1207, t8 * qJD(3) + (t1254 * t758 - t262 * t735 + t309 * t736) * qJD(4) + t25 * qJD(5) + t78 * qJD(6) + t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, -t313, t217, t263, -t878, t542, qJD(3) * t185 + qJD(4) * t203 - qJD(5) * t340 - t1222, qJD(3) * t183 + qJD(4) * t201 + qJD(5) * t339 - t1224, 0, 0, -t263, -t313, t217, t263, -t878, t542, qJD(3) * t116 + qJD(4) * t122 - t1022 + t1214, qJD(3) * t139 + qJD(4) * t141 + qJD(5) * t297 - t1223, pkin(5) * t965 + t818 * t987 + t1141, -pkin(5) * t1022 + qJD(3) * t22 + qJD(4) * t25 + t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246, -t588 * t837, t991, qJD(3) * t76 + qJD(4) * t78 + t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t495 + t439, t441, -t1007, qJD(2) * t68, 0, 0, 0, 0, 0, 0, t46, t44, -t1055, -qJD(2) * t11 + qJD(4) * t49 - t1279, 0, 0, 0, 0, 0, 0, t46, t44, -t1055, -qJD(2) * t3 + qJD(4) * t39 - qJD(5) * t60 + t1281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t754, -t988, 0, t754, 0, 0, t983, t982, 0, 0, -t961, t994, 0, t961, 0, 0, qJD(4) * t597 + t1225, t995 - t1039, -t858, -t860, t358, t403, t300, t357, t299, -t462, qJD(4) * t142 + qJD(5) * t184 - t1218, qJD(4) * t145 + qJD(5) * t182 - t1219, qJD(4) * t81 + t1247, qJD(4) * t27 - t868, t358, t403, t300, t357, t299, -t462, qJD(4) * t119 + qJD(5) * t117 - t1215, qJD(4) * t121 - qJD(5) * t138 - t1217, qJD(4) * t35 + t1113 + t1206, qJD(4) * t9 - qJD(5) * t21 + qJD(6) * t77 - t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t979, -pkin(3) * t914, 0, 0, t753, t738, 0, -t753, 0, 0, t490 * t757 - t902, t757 * t764 + t747, t690, t530 * qJD(4), t753, t738, 0, -t753, 0, 0, -qJD(5) * t640 - t902, qJD(5) * t666 + t747, t690 + t737, qJD(4) * t386 + qJD(5) * t316 + qJD(6) * t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1150 * t987 + t857 (-t915 - t914) * pkin(3), 0, 0, t753, t738, 0, -t753, 0, 0, qJD(5) * t636 + t1047 + t834, qJD(5) * t637 - t1227 + t747, t975 + t1140 (-pkin(4) * t772 + pkin(10) * t826) * t1147 + t816, t753, t738, 0, -t753, 0, 0, qJD(5) * t508 + t1048 + t834, qJD(5) * t520 - t1226 + t747, t737 + t975 + t1144 (t735 * t974 + t736 * t973 + t758 * t772) * t1147 + t196 * qJD(5) + t334 * qJD(6) + t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419, t500, t491, -t419, t489, -t989, qJD(4) * t636 - t756 * t764 - t1229, qJD(4) * t637 + t490 * t756 - t1235, 0, 0, t419, t500, t491, -t419, t489, -t989, qJD(4) * t508 - t1020 - t1228, qJD(4) * t520 + qJD(5) * t700 - t1231, t1253, -pkin(5) * t1020 + qJD(4) * t196 + t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1242, qJD(4) * t334 + t815; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t495 + t439, t441, 0, 0, 0, 0, 0, 0, 0, 0, t45, t43, -t1055, -qJD(2) * t13 - qJD(3) * t49 - t1279, 0, 0, 0, 0, 0, 0, t45, t43, -t1055, -qJD(2) * t5 - qJD(3) * t39 + t1281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t961, t994, 0, t961, 0, 0, -qJD(3) * t597 + t1232, t995 - t968, 0, 0, t358, t403, t300, t357, t299, -t462, -qJD(3) * t142 + qJD(5) * t202 - t1220, -qJD(3) * t145 + qJD(5) * t200 - t1221, -qJD(3) * t81 + t1248, -qJD(3) * t27 - t867, t358, t403, t300, t357, t299, -t462, -qJD(3) * t119 + qJD(5) * t123 - t1213, -qJD(3) * t121 - qJD(5) * t140 - t1216, -qJD(3) * t35 + t1112 + t1206, -qJD(3) * t9 - qJD(5) * t24 + qJD(6) * t79 - t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t857 + t981, pkin(3) * t915, 0, 0, t753, t738, 0, -t753, 0, 0, -qJD(5) * t634 - t1047 + t1049, -qJD(5) * t635 + t1227, -t1057 - t1140, -t816, t753, t738, 0, -t753, 0, 0, -qJD(5) * t507 - t1048 + t1049, -qJD(5) * t519 + t1226, t737 - t1057 - t1144, -qJD(5) * t195 - qJD(6) * t333 - t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t753, t738, 0, -t753, 0, 0, -pkin(4) * t490, -pkin(4) * t764, 0, 0, t753, t738, 0, -t753, 0, 0, -t689 * qJD(5), t707 * qJD(5), t737, qJD(5) * t422 + qJD(6) * t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419, t500, t491, -t419, t489, -t989, -pkin(10) * t764 - t807, pkin(10) * t490 - t808, 0, 0, t419, t500, t491, -t419, t489, -t989, t813 - t1019, qJD(5) * t735 + t812, t1253, -pkin(5) * t1019 + t814; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1242, t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t63, 0, 0, 0, 0, 0, 0, 0, 0, t62, t63, 0, qJD(2) * t17 + qJD(3) * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t313, t245, -t263, t246, t542, -qJD(3) * t184 - qJD(4) * t202 + t1222, -qJD(3) * t182 - qJD(4) * t200 + t1224, 0, 0, t263, t313, t245, -t263, t246, t542, -qJD(3) * t117 - qJD(4) * t123 - t1214 - t962, qJD(3) * t138 + qJD(4) * t140 + t1223 + t963, t823 * t987 - t1141, -pkin(5) * t962 + qJD(3) * t21 + qJD(4) * t24 - t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -t500, t529, t419, -t992, t989, qJD(4) * t634 + t1229, qJD(4) * t635 + t1235, 0, 0, -t419, -t500, t529, t419, -t992, t989, qJD(4) * t507 - t1018 + t1228, qJD(4) * t519 - t1017 + t1231, t1230, qJD(4) * t195 - t817 - t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -t500, t529, t419, -t992, t989, t807, t808, 0, 0, -t419, -t500, t529, t419, -t992, t989, -t813 - t1018, -t812 - t1017, t1230, -t814 - t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t589, t588, 0, -t569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t153 + t1239 * t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t878, t217, -t991, pkin(5) * t964 - qJD(3) * t77 - qJD(4) * t79 - t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t764, -t1242, qJD(4) * t333 + t763 - t815; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t764, -t1242, t763 - t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t589, -t588, 0, t569; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t28;
