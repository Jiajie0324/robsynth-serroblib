% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 09:33
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 09:32:15
% EndTime: 2019-05-05 09:32:52
% DurationCPUTime: 38.29s
% Computational Cost: add. (286168->936), mult. (567042->1328), div. (0->0), fcn. (420223->12), ass. (0->668)
t1614 = sin(qJ(4));
t1615 = sin(qJ(3));
t1618 = cos(qJ(4));
t1619 = cos(qJ(3));
t1570 = (t1614 * t1619 + t1615 * t1618) * qJD(2);
t1613 = sin(qJ(5));
t1617 = cos(qJ(5));
t1742 = qJD(3) + qJD(4);
t1535 = t1613 * t1570 - t1617 * t1742;
t1537 = t1617 * t1570 + t1613 * t1742;
t1489 = t1537 * t1535;
t1768 = qJD(2) * t1619;
t1598 = qJD(3) * t1768;
t1729 = t1615 * qJDD(2);
t1577 = t1598 + t1729;
t1769 = qJD(2) * t1615;
t1719 = qJD(3) * t1769;
t1728 = t1619 * qJDD(2);
t1647 = -t1719 + t1728;
t1707 = t1614 * t1577 - t1618 * t1647;
t1651 = -t1570 * qJD(4) - t1707;
t1631 = qJDD(5) - t1651;
t1808 = t1489 - t1631;
t1811 = pkin(5) * t1808;
t1568 = t1614 * t1769 - t1618 * t1768;
t1522 = t1570 * t1568;
t1727 = qJDD(3) + qJDD(4);
t1799 = -t1522 + t1727;
t1810 = t1614 * t1799;
t1809 = t1618 * t1799;
t1759 = t1808 * t1613;
t1758 = t1808 * t1617;
t1492 = -t1568 * qJD(4) + t1618 * t1577 + t1614 * t1647;
t1557 = t1742 * t1568;
t1807 = -t1557 + t1492;
t1609 = sin(pkin(6));
t1611 = cos(pkin(6));
t1608 = sin(pkin(11));
t1610 = cos(pkin(11));
t1711 = g(1) * t1608 - t1610 * g(2);
t1774 = g(3) - qJDD(1);
t1806 = -t1609 * t1774 + t1611 * t1711;
t1726 = t1742 ^ 2;
t1805 = t1608 * t1774;
t1804 = t1610 * t1774;
t1766 = qJD(6) * t1535;
t1525 = -0.2e1 * t1766;
t1553 = t1609 * t1711 + t1611 * t1774;
t1584 = g(1) * t1610 + g(2) * t1608;
t1616 = sin(qJ(2));
t1620 = cos(qJ(2));
t1507 = -t1620 * t1584 + t1616 * t1806;
t1796 = qJD(2) ^ 2;
t1624 = -pkin(2) * t1796 + qJDD(2) * pkin(8) + t1507;
t1461 = -t1615 * t1553 + t1619 * t1624;
t1795 = t1619 ^ 2;
t1604 = t1795 * t1796;
t1621 = qJD(3) ^ 2;
t1591 = -t1604 - t1621;
t1417 = pkin(3) * t1591 + pkin(9) * t1728 + t1461;
t1460 = t1619 * t1553 + t1615 * t1624;
t1592 = t1615 * t1796 * t1619;
t1585 = qJDD(3) + t1592;
t1622 = -t1460 + (-t1577 + t1598) * pkin(9) + t1585 * pkin(3);
t1347 = t1618 * t1417 + t1614 * t1622;
t1518 = pkin(4) * t1568 - pkin(10) * t1570;
t1329 = -pkin(4) * t1726 + pkin(10) * t1727 - t1568 * t1518 + t1347;
t1506 = -t1616 * t1584 - t1620 * t1806;
t1496 = -qJDD(2) * pkin(2) - pkin(8) * t1796 + t1506;
t1448 = -t1647 * pkin(3) + (qJD(3) * pkin(3) - pkin(9) * t1769) * t1769 - pkin(9) * t1604 + t1496;
t1471 = (0.2e1 * qJD(4) + qJD(3)) * t1570 + t1707;
t1623 = t1471 * pkin(4) - pkin(10) * t1807 + t1448;
t1260 = t1617 * t1329 + t1613 * t1623;
t1708 = t1613 * t1492 - t1617 * t1727;
t1440 = -qJD(5) * t1537 - t1708;
t1560 = qJD(5) + t1568;
t1495 = pkin(5) * t1560 - qJ(6) * t1537;
t1533 = t1535 ^ 2;
t1690 = t1533 * pkin(5) - t1440 * qJ(6) + t1560 * t1495 - t1260;
t1225 = t1525 - t1690;
t1406 = (qJD(5) - t1560) * t1537 + t1708;
t1534 = t1537 ^ 2;
t1445 = -t1533 - t1534;
t1206 = -pkin(5) * t1445 - qJ(6) * t1406 + t1225;
t1441 = -t1535 * qJD(5) + t1617 * t1492 + t1613 * t1727;
t1502 = t1560 * t1535;
t1409 = t1502 + t1441;
t1259 = t1613 * t1329 - t1617 * t1623;
t1626 = qJ(6) * t1502 + 0.2e1 * qJD(6) * t1537 + t1259 + t1811;
t1208 = (t1409 + t1441) * qJ(6) + t1626;
t1803 = -t1617 * t1206 - t1613 * t1208;
t1346 = t1417 * t1614 - t1618 * t1622;
t1328 = -t1727 * pkin(4) - t1726 * pkin(10) + t1518 * t1570 + t1346;
t1262 = -t1440 * pkin(5) - t1533 * qJ(6) + t1495 * t1537 + qJDD(6) + t1328;
t1559 = t1560 ^ 2;
t1486 = -t1534 - t1559;
t1254 = -qJ(6) * t1486 + t1262;
t1423 = t1489 + t1631;
t1800 = -t1502 + t1441;
t1339 = -pkin(5) * t1800 - qJ(6) * t1423;
t1802 = -t1613 * t1254 - t1617 * t1339;
t1192 = t1613 * t1259 + t1617 * t1260;
t1798 = -t1610 * t1584 - t1608 * t1711;
t1797 = -t1608 * t1584 + t1610 * t1711;
t1566 = t1568 ^ 2;
t1567 = t1570 ^ 2;
t1462 = -t1559 - t1533;
t1366 = t1462 * t1617 + t1759;
t1405 = (qJD(5) + t1560) * t1537 + t1708;
t1308 = t1366 * t1614 - t1405 * t1618;
t1309 = t1366 * t1618 + t1405 * t1614;
t1235 = t1308 * t1619 + t1309 * t1615;
t1794 = pkin(2) * t1235;
t1266 = -t1346 * t1618 + t1347 * t1614;
t1793 = pkin(3) * t1266;
t1473 = qJD(3) * t1570 - t1707;
t1476 = t1557 + t1492;
t1390 = t1473 * t1614 - t1476 * t1618;
t1792 = pkin(3) * t1390;
t1332 = -t1406 * t1613 - t1409 * t1617;
t1791 = pkin(4) * t1332;
t1365 = t1462 * t1613 - t1758;
t1790 = pkin(4) * t1365;
t1761 = t1423 * t1613;
t1370 = t1486 * t1617 - t1761;
t1789 = pkin(4) * t1370;
t1788 = pkin(4) * t1614;
t1217 = qJ(6) * t1441 + t1626;
t1787 = pkin(5) * t1217;
t1786 = pkin(5) * t1409;
t1785 = pkin(7) * t1609;
t1784 = pkin(7) * t1611;
t1334 = -t1406 * t1617 + t1409 * t1613;
t1294 = t1334 * t1614 - t1445 * t1618;
t1295 = t1334 * t1618 + t1445 * t1614;
t1223 = t1294 * t1619 + t1295 * t1615;
t1783 = pkin(8) * t1223;
t1782 = pkin(8) * t1235;
t1760 = t1423 * t1617;
t1371 = -t1486 * t1613 - t1760;
t1312 = t1371 * t1614 - t1618 * t1800;
t1313 = t1371 * t1618 + t1614 * t1800;
t1242 = t1312 * t1619 + t1313 * t1615;
t1781 = pkin(8) * t1242;
t1780 = pkin(9) * t1294;
t1779 = pkin(9) * t1308;
t1778 = pkin(9) * t1312;
t1777 = pkin(10) * t1332;
t1776 = pkin(10) * t1365;
t1775 = pkin(10) * t1370;
t1224 = -t1294 * t1615 + t1295 * t1619;
t1680 = t1224 * t1616 - t1332 * t1620;
t1149 = -t1609 * t1223 + t1611 * t1680;
t1195 = t1224 * t1620 + t1332 * t1616;
t1773 = qJ(1) * (t1149 * t1610 + t1195 * t1608);
t1236 = -t1308 * t1615 + t1309 * t1619;
t1678 = t1236 * t1616 - t1365 * t1620;
t1166 = -t1609 * t1235 + t1611 * t1678;
t1213 = t1236 * t1620 + t1365 * t1616;
t1772 = qJ(1) * (t1166 * t1610 + t1213 * t1608);
t1243 = -t1312 * t1615 + t1313 * t1619;
t1677 = t1243 * t1616 - t1370 * t1620;
t1173 = -t1609 * t1242 + t1611 * t1677;
t1216 = t1243 * t1620 + t1370 * t1616;
t1771 = qJ(1) * (t1173 * t1610 + t1216 * t1608);
t1770 = qJD(2) * qJD(3);
t1606 = t1615 ^ 2;
t1767 = t1796 * t1606;
t1765 = t1217 * t1613;
t1764 = t1217 * t1617;
t1763 = t1266 * t1615;
t1762 = t1266 * t1619;
t1757 = t1448 * t1614;
t1756 = t1448 * t1618;
t1755 = t1496 * t1615;
t1754 = t1496 * t1619;
t1514 = t1522 + t1727;
t1753 = t1514 * t1614;
t1752 = t1514 * t1618;
t1751 = t1537 * t1560;
t1750 = t1560 * t1613;
t1749 = t1560 * t1617;
t1578 = -0.2e1 * t1719 + t1728;
t1538 = t1578 * t1619;
t1748 = t1585 * t1615;
t1586 = qJDD(3) - t1592;
t1747 = t1586 * t1615;
t1746 = t1586 * t1619;
t1324 = t1613 * t1328;
t1744 = t1616 * t1553;
t1325 = t1617 * t1328;
t1743 = t1620 * t1553;
t1740 = pkin(1) * t1149 + t1195 * t1785;
t1739 = pkin(1) * t1166 + t1213 * t1785;
t1738 = pkin(1) * t1173 + t1216 * t1785;
t1737 = -pkin(2) * t1332 + pkin(8) * t1224;
t1736 = -pkin(2) * t1365 + pkin(8) * t1236;
t1735 = -pkin(2) * t1370 + pkin(8) * t1243;
t1734 = -pkin(4) * t1328 + pkin(10) * t1192;
t1733 = -pkin(4) * t1445 + pkin(10) * t1334;
t1732 = -pkin(4) * t1405 + pkin(10) * t1366;
t1731 = -pkin(4) * t1800 + pkin(10) * t1371;
t1730 = t1609 * qJDD(2);
t1725 = t1606 + t1795;
t1724 = -pkin(4) * t1618 - pkin(3);
t1723 = t1614 * t1489;
t1722 = t1618 * t1489;
t1721 = t1616 * t1522;
t1720 = t1620 * t1522;
t1718 = t1324 + t1731;
t1717 = -t1325 + t1732;
t1148 = t1611 * t1223 + t1609 * t1680;
t1716 = -pkin(1) * t1148 + t1195 * t1784;
t1165 = t1611 * t1235 + t1609 * t1678;
t1715 = -pkin(1) * t1165 + t1213 * t1784;
t1172 = t1611 * t1242 + t1609 * t1677;
t1714 = -pkin(1) * t1172 + t1216 * t1784;
t1713 = -pkin(3) * t1365 + pkin(9) * t1309;
t1712 = -pkin(3) * t1370 + pkin(9) * t1313;
t1709 = t1570 * t1742;
t1267 = t1346 * t1614 + t1618 * t1347;
t1385 = t1460 * t1615 + t1619 * t1461;
t1706 = t1616 * t1592;
t1705 = t1620 * t1592;
t1704 = t1733 - t1803;
t1703 = t1731 - t1802;
t1702 = t1733 + t1192;
t1307 = pkin(3) * t1308;
t1701 = t1307 + t1717;
t1179 = t1192 * t1614 - t1328 * t1618;
t1700 = pkin(3) * t1179 + t1734;
t1548 = -t1567 - t1726;
t1477 = t1548 * t1618 - t1753;
t1699 = pkin(3) * t1477 - t1347;
t1698 = t1614 * t1709;
t1697 = t1614 * t1557;
t1696 = t1618 * t1709;
t1695 = t1618 * t1557;
t1384 = t1460 * t1619 - t1461 * t1615;
t1579 = t1725 * qJDD(2);
t1582 = t1604 + t1767;
t1529 = t1579 * t1620 - t1582 * t1616;
t1693 = pkin(7) * t1529 + t1384 * t1616;
t1580 = qJDD(2) * t1620 - t1616 * t1796;
t1692 = -pkin(7) * t1580 - t1744;
t1658 = qJDD(2) * t1616 + t1620 * t1796;
t1691 = -pkin(7) * t1658 + t1743;
t1136 = -t1206 * t1613 + t1208 * t1617 - t1777;
t1279 = t1786 - t1791;
t1292 = pkin(9) * t1295;
t1109 = -pkin(3) * t1332 + t1136 * t1614 + t1279 * t1618 + t1292;
t1110 = t1136 * t1618 - t1279 * t1614 - t1780;
t1084 = -t1109 * t1615 + t1110 * t1619 - t1783;
t1293 = pkin(3) * t1294;
t1656 = -pkin(2) * t1223 - t1293 - t1733;
t1107 = t1656 + t1803;
t1689 = t1084 * t1616 + t1107 * t1620;
t1625 = -t1217 - t1811;
t1189 = -t1625 - t1790;
t1229 = -pkin(5) * t1405 + qJ(6) * t1462 - t1262;
t1197 = qJ(6) * t1758 - t1229 * t1613 - t1776;
t1117 = t1189 * t1618 + t1197 * t1614 + t1713;
t1120 = -t1189 * t1614 + t1197 * t1618 - t1779;
t1088 = -t1117 * t1615 + t1120 * t1619 - t1782;
t1643 = qJ(6) * t1759 + t1617 * t1229 + t1732;
t1629 = t1307 + t1643;
t1137 = -t1629 - t1794;
t1688 = t1088 * t1616 + t1137 * t1620;
t1202 = t1254 * t1617 - t1339 * t1613 - t1775;
t1630 = pkin(5) * t1486 + t1690;
t1203 = t1525 - t1630 - t1789;
t1119 = t1202 * t1614 + t1203 * t1618 + t1712;
t1128 = t1202 * t1618 - t1203 * t1614 - t1778;
t1091 = -t1119 * t1615 + t1128 * t1619 - t1781;
t1311 = pkin(3) * t1312;
t1655 = -pkin(2) * t1242 - t1311 - t1731;
t1138 = t1655 + t1802;
t1687 = t1091 * t1616 + t1138 * t1620;
t1191 = -t1259 * t1617 + t1260 * t1613;
t1181 = -t1191 - t1777;
t1129 = t1614 * t1181 + t1332 * t1724 + t1292;
t1142 = t1181 * t1618 + t1332 * t1788 - t1780;
t1094 = -t1129 * t1615 + t1142 * t1619 - t1783;
t1118 = t1656 - t1192;
t1686 = t1094 * t1616 + t1118 * t1620;
t1168 = t1225 * t1617 + t1765;
t1139 = t1168 * t1614 - t1262 * t1618;
t1140 = t1168 * t1618 + t1262 * t1614;
t1100 = -t1139 * t1615 + t1140 * t1619;
t1167 = t1225 * t1613 - t1764;
t1685 = t1100 * t1616 - t1167 * t1620;
t1226 = t1259 - t1790;
t1263 = t1324 - t1776;
t1151 = t1226 * t1618 + t1263 * t1614 + t1713;
t1169 = -t1226 * t1614 + t1263 * t1618 - t1779;
t1102 = -t1151 * t1615 + t1169 * t1619 - t1782;
t1156 = -t1701 - t1794;
t1684 = t1102 * t1616 + t1156 * t1620;
t1228 = t1260 - t1789;
t1265 = t1325 - t1775;
t1154 = t1228 * t1618 + t1265 * t1614 + t1712;
t1170 = -t1228 * t1614 + t1265 * t1618 - t1778;
t1103 = -t1154 * t1615 + t1170 * t1619 - t1781;
t1157 = -t1324 + t1655;
t1683 = t1103 * t1616 + t1157 * t1620;
t1180 = t1192 * t1618 + t1328 * t1614;
t1114 = -t1179 * t1615 + t1180 * t1619;
t1682 = t1114 * t1616 - t1191 * t1620;
t1210 = t1267 * t1619 - t1763;
t1681 = t1210 * t1616 - t1448 * t1620;
t1335 = -t1405 * t1617 - t1613 * t1800;
t1487 = t1534 - t1533;
t1304 = t1335 * t1614 - t1487 * t1618;
t1305 = t1335 * t1618 + t1487 * t1614;
t1231 = -t1304 * t1615 + t1305 * t1619;
t1333 = -t1405 * t1613 + t1617 * t1800;
t1679 = t1231 * t1616 - t1333 * t1620;
t1500 = -t1534 + t1559;
t1381 = -t1500 * t1613 - t1758;
t1316 = t1381 * t1614 - t1409 * t1618;
t1318 = t1381 * t1618 + t1409 * t1614;
t1246 = -t1316 * t1615 + t1318 * t1619;
t1379 = t1500 * t1617 - t1759;
t1676 = t1246 * t1616 - t1379 * t1620;
t1499 = t1533 - t1559;
t1382 = t1499 * t1617 - t1761;
t1317 = t1382 * t1614 + t1406 * t1618;
t1319 = t1382 * t1618 - t1406 * t1614;
t1247 = -t1317 * t1615 + t1319 * t1619;
t1380 = t1499 * t1613 + t1760;
t1675 = t1247 * t1616 - t1380 * t1620;
t1396 = -t1440 * t1613 + t1535 * t1749;
t1357 = t1396 * t1614 + t1722;
t1359 = t1396 * t1618 - t1723;
t1282 = -t1357 * t1615 + t1359 * t1619;
t1395 = -t1617 * t1440 - t1535 * t1750;
t1674 = t1282 * t1616 + t1395 * t1620;
t1398 = t1441 * t1617 - t1537 * t1750;
t1358 = t1398 * t1614 - t1722;
t1360 = t1398 * t1618 + t1723;
t1283 = -t1358 * t1615 + t1360 * t1619;
t1397 = t1441 * t1613 + t1537 * t1749;
t1673 = t1283 * t1616 - t1397 * t1620;
t1430 = (-t1535 * t1617 + t1537 * t1613) * t1560;
t1387 = t1614 * t1430 - t1618 * t1631;
t1388 = t1618 * t1430 + t1614 * t1631;
t1315 = -t1387 * t1615 + t1388 * t1619;
t1429 = (-t1535 * t1613 - t1537 * t1617) * t1560;
t1672 = t1315 * t1616 - t1429 * t1620;
t1389 = -t1471 * t1614 + t1618 * t1807;
t1391 = -t1471 * t1618 - t1614 * t1807;
t1322 = -t1389 * t1615 + t1391 * t1619;
t1521 = t1567 - t1566;
t1671 = t1322 * t1616 - t1521 * t1620;
t1392 = t1473 * t1618 + t1476 * t1614;
t1323 = -t1390 * t1615 + t1392 * t1619;
t1494 = -t1566 - t1567;
t1670 = t1323 * t1616 - t1494 * t1620;
t1508 = -t1726 - t1566;
t1446 = t1508 * t1614 + t1809;
t1447 = t1508 * t1618 - t1810;
t1373 = -t1446 * t1615 + t1447 * t1619;
t1669 = t1373 * t1616 - t1471 * t1620;
t1668 = t1385 * t1616 - t1496 * t1620;
t1478 = -t1548 * t1614 - t1752;
t1394 = -t1477 * t1615 + t1478 * t1619;
t1667 = t1394 * t1616 - t1620 * t1807;
t1555 = -t1567 + t1726;
t1482 = t1555 * t1618 + t1810;
t1484 = -t1555 * t1614 + t1809;
t1401 = -t1482 * t1615 + t1484 * t1619;
t1666 = t1401 * t1616 - t1476 * t1620;
t1554 = t1566 - t1726;
t1483 = t1554 * t1614 + t1752;
t1485 = t1554 * t1618 - t1753;
t1402 = -t1483 * t1615 + t1485 * t1619;
t1665 = t1402 * t1616 - t1473 * t1620;
t1442 = t1506 * t1620 - t1507 * t1616;
t1443 = t1506 * t1616 + t1507 * t1620;
t1576 = 0.2e1 * t1598 + t1729;
t1524 = -t1576 * t1615 + t1538;
t1583 = -t1604 + t1767;
t1664 = t1524 * t1616 - t1583 * t1620;
t1545 = t1591 * t1619 - t1748;
t1663 = t1545 * t1616 + t1578 * t1620;
t1589 = -t1621 - t1767;
t1547 = -t1589 * t1615 - t1746;
t1662 = t1547 * t1616 - t1576 * t1620;
t1563 = t1658 * t1611;
t1661 = t1563 * t1610 + t1580 * t1608;
t1660 = t1563 * t1608 - t1580 * t1610;
t1659 = t1579 * t1616 + t1582 * t1620;
t1574 = t1725 * t1770;
t1657 = -qJDD(3) * t1620 + t1574 * t1616;
t1654 = pkin(3) * t1446 - t1346;
t1456 = t1618 * t1651 + t1697;
t1457 = -t1614 * t1651 + t1695;
t1377 = -t1456 * t1615 + t1457 * t1619;
t1653 = t1377 * t1616 + t1720;
t1458 = t1614 * t1492 + t1696;
t1459 = t1618 * t1492 - t1698;
t1378 = -t1458 * t1615 + t1459 * t1619;
t1652 = t1378 * t1616 - t1720;
t1650 = (-t1148 * t1609 - t1149 * t1611) * pkin(7);
t1649 = (-t1165 * t1609 - t1166 * t1611) * pkin(7);
t1648 = (-t1172 * t1609 - t1173 * t1611) * pkin(7);
t1590 = t1604 - t1621;
t1544 = t1590 * t1619 - t1747;
t1646 = t1544 * t1616 - t1620 * t1728;
t1575 = t1619 * t1585;
t1588 = t1621 - t1767;
t1546 = -t1588 * t1615 + t1575;
t1645 = t1546 * t1616 - t1620 * t1729;
t1183 = -pkin(5) * t1262 + qJ(6) * t1225;
t1644 = -pkin(4) * t1262 + pkin(10) * t1168 + qJ(6) * t1765 + t1617 * t1183;
t1497 = -t1697 - t1696;
t1498 = -t1695 + t1698;
t1428 = -t1497 * t1615 + t1498 * t1619;
t1642 = t1616 * t1428 - t1620 * t1727;
t1550 = -t1615 * t1647 - t1770 * t1795;
t1641 = t1550 * t1616 - t1705;
t1551 = t1577 * t1619 - t1606 * t1770;
t1640 = t1551 * t1616 + t1705;
t1105 = -pkin(10) * t1167 + qJ(6) * t1764 - t1183 * t1613;
t1125 = -pkin(4) * t1167 + t1787;
t1076 = -pkin(3) * t1167 + pkin(9) * t1140 + t1105 * t1614 + t1125 * t1618;
t1081 = -pkin(9) * t1139 + t1105 * t1618 - t1125 * t1614;
t1099 = t1139 * t1619 + t1140 * t1615;
t1054 = -pkin(8) * t1099 - t1076 * t1615 + t1081 * t1619;
t1627 = pkin(3) * t1139 + t1644;
t1073 = -pkin(2) * t1099 - t1627;
t1089 = t1100 * t1620 + t1167 * t1616;
t1639 = pkin(7) * t1089 + t1054 * t1616 + t1073 * t1620;
t1097 = pkin(9) * t1180 + (-pkin(10) * t1614 + t1724) * t1191;
t1106 = -pkin(9) * t1179 + (-pkin(10) * t1618 + t1788) * t1191;
t1113 = t1179 * t1619 + t1180 * t1615;
t1071 = -pkin(8) * t1113 - t1097 * t1615 + t1106 * t1619;
t1092 = -pkin(2) * t1113 - t1700;
t1104 = t1114 * t1620 + t1191 * t1616;
t1638 = pkin(7) * t1104 + t1071 * t1616 + t1092 * t1620;
t1209 = t1267 * t1615 + t1762;
t1255 = -pkin(3) * t1448 + pkin(9) * t1267;
t1146 = -pkin(8) * t1209 - pkin(9) * t1762 - t1255 * t1615;
t1178 = -pkin(2) * t1209 - t1793;
t1196 = t1210 * t1620 + t1448 * t1616;
t1637 = pkin(7) * t1196 + t1146 * t1616 + t1178 * t1620;
t1240 = -pkin(3) * t1494 + pkin(9) * t1392 + t1267;
t1249 = -pkin(9) * t1390 - t1266;
t1321 = t1390 * t1619 + t1392 * t1615;
t1158 = -pkin(8) * t1321 - t1240 * t1615 + t1249 * t1619;
t1268 = -pkin(2) * t1321 - t1792;
t1300 = t1323 * t1620 + t1494 * t1616;
t1636 = pkin(7) * t1300 + t1158 * t1616 + t1268 * t1620;
t1341 = -pkin(3) * t1471 + pkin(9) * t1447 - t1756;
t1372 = t1446 * t1619 + t1447 * t1615;
t1374 = -pkin(9) * t1446 + t1757;
t1250 = -pkin(8) * t1372 - t1341 * t1615 + t1374 * t1619;
t1264 = -pkin(2) * t1372 - t1654;
t1338 = t1373 * t1620 + t1471 * t1616;
t1635 = pkin(7) * t1338 + t1250 * t1616 + t1264 * t1620;
t1344 = -pkin(3) * t1807 + pkin(9) * t1478 + t1757;
t1386 = -pkin(9) * t1477 + t1756;
t1393 = t1477 * t1619 + t1478 * t1615;
t1256 = -pkin(8) * t1393 - t1344 * t1615 + t1386 * t1619;
t1269 = -pkin(2) * t1393 - t1699;
t1348 = t1394 * t1620 + t1616 * t1807;
t1634 = pkin(7) * t1348 + t1256 * t1616 + t1269 * t1620;
t1541 = t1591 * t1615 + t1575;
t1425 = -pkin(2) * t1541 + t1460;
t1454 = -pkin(8) * t1541 + t1755;
t1504 = t1545 * t1620 - t1578 * t1616;
t1633 = pkin(7) * t1504 + t1425 * t1620 + t1454 * t1616;
t1543 = t1589 * t1619 - t1747;
t1426 = -pkin(2) * t1543 + t1461;
t1455 = -pkin(8) * t1543 + t1754;
t1505 = t1547 * t1620 + t1576 * t1616;
t1632 = pkin(7) * t1505 + t1426 * t1620 + t1455 * t1616;
t1355 = t1385 * t1620 + t1496 * t1616;
t1628 = pkin(7) * t1355 - (-pkin(2) * t1620 - pkin(8) * t1616) * t1384;
t1601 = t1611 * qJDD(2);
t1564 = t1580 * t1611;
t1562 = t1580 * t1609;
t1561 = t1658 * t1609;
t1552 = qJDD(3) * t1616 + t1574 * t1620;
t1542 = t1588 * t1619 + t1748;
t1540 = t1590 * t1615 + t1746;
t1539 = (t1577 + t1598) * t1615;
t1531 = t1657 * t1611;
t1530 = t1657 * t1609;
t1523 = t1576 * t1619 + t1578 * t1615;
t1520 = t1659 * t1611;
t1519 = t1659 * t1609;
t1517 = -t1564 * t1608 - t1610 * t1658;
t1516 = t1564 * t1610 - t1608 * t1658;
t1512 = t1551 * t1620 - t1706;
t1511 = t1550 * t1620 + t1706;
t1510 = t1546 * t1620 + t1616 * t1729;
t1509 = t1544 * t1620 + t1616 * t1728;
t1493 = t1524 * t1620 + t1583 * t1616;
t1480 = -t1743 + (t1561 * t1609 + t1563 * t1611) * pkin(7);
t1479 = -t1744 + (-t1562 * t1609 - t1564 * t1611) * pkin(7);
t1470 = -t1609 * t1539 + t1611 * t1640;
t1469 = -t1609 * t1538 + t1611 * t1641;
t1468 = t1611 * t1539 + t1609 * t1640;
t1467 = t1611 * t1538 + t1609 * t1641;
t1466 = -t1609 * t1542 + t1611 * t1645;
t1465 = -t1609 * t1540 + t1611 * t1646;
t1464 = t1611 * t1542 + t1609 * t1645;
t1463 = t1611 * t1540 + t1609 * t1646;
t1452 = -t1609 * t1543 + t1611 * t1662;
t1451 = -t1609 * t1541 + t1611 * t1663;
t1450 = t1611 * t1543 + t1609 * t1662;
t1449 = t1611 * t1541 + t1609 * t1663;
t1439 = -t1609 * t1523 + t1611 * t1664;
t1438 = t1611 * t1523 + t1609 * t1664;
t1437 = pkin(2) * t1578 + pkin(8) * t1545 - t1754;
t1436 = -pkin(2) * t1576 + pkin(8) * t1547 + t1755;
t1432 = t1443 * t1611;
t1431 = t1443 * t1609;
t1427 = t1497 * t1619 + t1498 * t1615;
t1421 = -pkin(1) * t1562 + t1609 * t1506 + t1611 * t1691;
t1420 = pkin(1) * t1561 + t1609 * t1507 + t1611 * t1692;
t1419 = pkin(1) * t1564 - t1611 * t1506 + t1609 * t1691;
t1418 = -pkin(1) * t1563 - t1611 * t1507 + t1609 * t1692;
t1413 = t1620 * t1428 + t1616 * t1727;
t1412 = -t1442 * t1611 + t1609 * t1553;
t1411 = -t1442 * t1609 - t1611 * t1553;
t1400 = t1483 * t1619 + t1485 * t1615;
t1399 = t1482 * t1619 + t1484 * t1615;
t1376 = t1458 * t1619 + t1459 * t1615;
t1375 = t1456 * t1619 + t1457 * t1615;
t1367 = pkin(2) * t1582 + pkin(8) * t1579 + t1385;
t1362 = t1378 * t1620 + t1721;
t1361 = t1377 * t1620 - t1721;
t1356 = -pkin(2) * t1496 + pkin(8) * t1385;
t1354 = pkin(1) * t1412 + t1443 * t1785;
t1353 = -pkin(1) * t1411 + t1443 * t1784;
t1352 = t1402 * t1620 + t1473 * t1616;
t1351 = t1401 * t1620 + t1476 * t1616;
t1350 = -t1609 * t1427 + t1611 * t1642;
t1349 = t1611 * t1427 + t1609 * t1642;
t1340 = t1620 * t1384 + (-t1519 * t1609 - t1520 * t1611) * pkin(7);
t1336 = (-t1411 * t1609 - t1412 * t1611) * pkin(7);
t1320 = t1389 * t1619 + t1391 * t1615;
t1314 = t1387 * t1619 + t1388 * t1615;
t1303 = t1322 * t1620 + t1521 * t1616;
t1302 = -t1616 * t1426 + t1620 * t1455 + (-t1450 * t1609 - t1452 * t1611) * pkin(7);
t1301 = -t1616 * t1425 + t1620 * t1454 + (-t1449 * t1609 - t1451 * t1611) * pkin(7);
t1299 = -t1609 * t1400 + t1611 * t1665;
t1298 = -t1609 * t1399 + t1611 * t1666;
t1297 = t1611 * t1400 + t1609 * t1665;
t1296 = t1611 * t1399 + t1609 * t1666;
t1291 = -t1609 * t1376 + t1611 * t1652;
t1290 = -t1609 * t1375 + t1611 * t1653;
t1289 = t1611 * t1376 + t1609 * t1652;
t1288 = t1611 * t1375 + t1609 * t1653;
t1287 = -t1609 * t1393 + t1611 * t1667;
t1286 = t1611 * t1393 + t1609 * t1667;
t1285 = t1384 * t1609 + t1611 * t1668;
t1284 = -t1384 * t1611 + t1609 * t1668;
t1281 = t1358 * t1619 + t1360 * t1615;
t1280 = t1357 * t1619 + t1359 * t1615;
t1278 = -pkin(1) * t1450 - t1609 * t1436 + t1611 * t1632;
t1277 = -pkin(1) * t1449 - t1609 * t1437 + t1611 * t1633;
t1276 = pkin(1) * t1452 + t1611 * t1436 + t1609 * t1632;
t1275 = pkin(1) * t1451 + t1611 * t1437 + t1609 * t1633;
t1274 = t1315 * t1620 + t1429 * t1616;
t1273 = -pkin(1) * t1519 - t1609 * t1367 + t1611 * t1693;
t1272 = pkin(1) * t1520 + t1611 * t1367 + t1609 * t1693;
t1271 = -t1609 * t1372 + t1611 * t1669;
t1270 = t1611 * t1372 + t1609 * t1669;
t1252 = t1283 * t1620 + t1397 * t1616;
t1251 = t1282 * t1620 - t1395 * t1616;
t1248 = -pkin(2) * t1807 + pkin(8) * t1394 + t1344 * t1619 + t1386 * t1615;
t1245 = t1317 * t1619 + t1319 * t1615;
t1244 = t1316 * t1619 + t1318 * t1615;
t1239 = -t1609 * t1320 + t1611 * t1671;
t1238 = t1611 * t1320 + t1609 * t1671;
t1237 = -pkin(2) * t1471 + pkin(8) * t1373 + t1341 * t1619 + t1374 * t1615;
t1233 = -t1609 * t1321 + t1611 * t1670;
t1232 = t1611 * t1321 + t1609 * t1670;
t1230 = t1304 * t1619 + t1305 * t1615;
t1221 = -t1609 * t1314 + t1611 * t1672;
t1220 = t1611 * t1314 + t1609 * t1672;
t1219 = t1247 * t1620 + t1380 * t1616;
t1218 = t1246 * t1620 + t1379 * t1616;
t1204 = t1231 * t1620 + t1333 * t1616;
t1201 = -t1609 * t1281 + t1611 * t1673;
t1200 = -t1609 * t1280 + t1611 * t1674;
t1199 = t1611 * t1281 + t1609 * t1673;
t1198 = t1611 * t1280 + t1609 * t1674;
t1188 = -(pkin(2) * t1616 - pkin(8) * t1620) * t1384 + (-t1284 * t1609 - t1285 * t1611) * pkin(7);
t1187 = -pkin(1) * t1284 - t1609 * t1356 + t1611 * t1628;
t1186 = pkin(1) * t1285 + t1611 * t1356 + t1609 * t1628;
t1185 = -t1221 * t1608 + t1274 * t1610;
t1184 = t1221 * t1610 + t1274 * t1608;
t1177 = -t1609 * t1245 + t1611 * t1675;
t1176 = -t1609 * t1244 + t1611 * t1676;
t1175 = t1611 * t1245 + t1609 * t1675;
t1174 = t1611 * t1244 + t1609 * t1676;
t1162 = -t1201 * t1608 + t1252 * t1610;
t1161 = -t1200 * t1608 + t1251 * t1610;
t1160 = t1201 * t1610 + t1252 * t1608;
t1159 = t1200 * t1610 + t1251 * t1608;
t1155 = -pkin(2) * t1494 + pkin(8) * t1323 + t1240 * t1619 + t1249 * t1615;
t1153 = -t1609 * t1230 + t1611 * t1679;
t1152 = t1611 * t1230 + t1609 * t1679;
t1150 = t1620 * t1256 - t1616 * t1269 + (-t1286 * t1609 - t1287 * t1611) * pkin(7);
t1145 = -t1609 * t1209 + t1611 * t1681;
t1144 = t1611 * t1209 + t1609 * t1681;
t1143 = t1620 * t1250 - t1616 * t1264 + (-t1270 * t1609 - t1271 * t1611) * pkin(7);
t1141 = -pkin(2) * t1448 + pkin(8) * t1210 - pkin(9) * t1763 + t1255 * t1619;
t1135 = -t1177 * t1608 + t1219 * t1610;
t1134 = -t1176 * t1608 + t1218 * t1610;
t1133 = t1177 * t1610 + t1219 * t1608;
t1132 = t1176 * t1610 + t1218 * t1608;
t1131 = -pkin(1) * t1286 - t1609 * t1248 + t1611 * t1634;
t1130 = pkin(1) * t1287 + t1611 * t1248 + t1609 * t1634;
t1126 = qJ(1) * (-t1173 * t1608 + t1216 * t1610);
t1123 = qJ(1) * (-t1166 * t1608 + t1213 * t1610);
t1122 = -pkin(1) * t1270 - t1609 * t1237 + t1611 * t1635;
t1121 = pkin(1) * t1271 + t1611 * t1237 + t1609 * t1635;
t1116 = -t1153 * t1608 + t1204 * t1610;
t1115 = t1153 * t1610 + t1204 * t1608;
t1111 = qJ(1) * (-t1149 * t1608 + t1195 * t1610);
t1108 = t1620 * t1158 - t1616 * t1268 + (-t1232 * t1609 - t1233 * t1611) * pkin(7);
t1101 = t1154 * t1619 + t1170 * t1615 + t1735;
t1098 = t1151 * t1619 + t1169 * t1615 + t1736;
t1096 = -pkin(1) * t1232 - t1609 * t1155 + t1611 * t1636;
t1095 = pkin(1) * t1233 + t1611 * t1155 + t1609 * t1636;
t1093 = t1129 * t1619 + t1142 * t1615 + t1737;
t1090 = t1119 * t1619 + t1128 * t1615 + t1735;
t1087 = t1117 * t1619 + t1120 * t1615 + t1736;
t1086 = -t1609 * t1113 + t1611 * t1682;
t1085 = t1611 * t1113 + t1609 * t1682;
t1083 = t1620 * t1146 - t1616 * t1178 + (-t1144 * t1609 - t1145 * t1611) * pkin(7);
t1082 = t1109 * t1619 + t1110 * t1615 + t1737;
t1080 = -pkin(1) * t1144 - t1609 * t1141 + t1611 * t1637;
t1079 = pkin(1) * t1145 + t1611 * t1141 + t1609 * t1637;
t1078 = t1620 * t1103 - t1616 * t1157 + t1648;
t1077 = t1620 * t1102 - t1616 * t1156 + t1649;
t1075 = -t1609 * t1099 + t1611 * t1685;
t1074 = t1611 * t1099 + t1609 * t1685;
t1072 = t1620 * t1091 - t1616 * t1138 + t1648;
t1070 = t1620 * t1088 - t1616 * t1137 + t1649;
t1069 = t1620 * t1094 - t1616 * t1118 + t1650;
t1068 = -pkin(2) * t1191 + pkin(8) * t1114 + t1097 * t1619 + t1106 * t1615;
t1067 = -t1609 * t1101 + t1611 * t1683 + t1714;
t1066 = t1611 * t1101 + t1609 * t1683 + t1738;
t1065 = -t1609 * t1098 + t1611 * t1684 + t1715;
t1064 = t1611 * t1098 + t1609 * t1684 + t1739;
t1063 = t1620 * t1084 - t1616 * t1107 + t1650;
t1062 = -t1609 * t1090 + t1611 * t1687 + t1714;
t1061 = t1611 * t1090 + t1609 * t1687 + t1738;
t1060 = -t1609 * t1093 + t1611 * t1686 + t1716;
t1059 = t1611 * t1093 + t1609 * t1686 + t1740;
t1058 = -t1609 * t1087 + t1611 * t1688 + t1715;
t1057 = t1611 * t1087 + t1609 * t1688 + t1739;
t1056 = -t1609 * t1082 + t1611 * t1689 + t1716;
t1055 = t1611 * t1082 + t1609 * t1689 + t1740;
t1053 = -pkin(2) * t1167 + pkin(8) * t1100 + t1076 * t1619 + t1081 * t1615;
t1052 = t1620 * t1071 - t1616 * t1092 + (-t1085 * t1609 - t1086 * t1611) * pkin(7);
t1051 = -pkin(1) * t1085 - t1609 * t1068 + t1611 * t1638;
t1050 = pkin(1) * t1086 + t1611 * t1068 + t1609 * t1638;
t1049 = t1620 * t1054 - t1616 * t1073 + (-t1074 * t1609 - t1075 * t1611) * pkin(7);
t1048 = -pkin(1) * t1074 - t1609 * t1053 + t1611 * t1639;
t1047 = pkin(1) * t1075 + t1611 * t1053 + t1609 * t1639;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1805, -t1804, -t1797, -qJ(1) * t1797, 0, 0, -t1660, 0, t1517, t1608 * t1730, -qJ(1) * t1516 - t1421 * t1608 + t1479 * t1610, qJ(1) * t1661 - t1608 * t1420 + t1610 * t1480, -t1432 * t1608 + t1442 * t1610, t1610 * t1336 - t1608 * t1353 - qJ(1) * (t1412 * t1610 + t1443 * t1608), -t1470 * t1608 + t1512 * t1610, -t1439 * t1608 + t1493 * t1610, -t1466 * t1608 + t1510 * t1610, -t1469 * t1608 + t1511 * t1610, -t1465 * t1608 + t1509 * t1610, -t1531 * t1608 + t1552 * t1610, t1610 * t1301 - t1608 * t1277 - qJ(1) * (t1451 * t1610 + t1504 * t1608), t1610 * t1302 - t1608 * t1278 - qJ(1) * (t1452 * t1610 + t1505 * t1608), t1610 * t1340 - t1608 * t1273 - qJ(1) * (t1520 * t1610 + t1529 * t1608), t1610 * t1188 - t1608 * t1187 - qJ(1) * (t1285 * t1610 + t1355 * t1608), -t1291 * t1608 + t1362 * t1610, -t1239 * t1608 + t1303 * t1610, -t1298 * t1608 + t1351 * t1610, -t1290 * t1608 + t1361 * t1610, -t1299 * t1608 + t1352 * t1610, -t1350 * t1608 + t1413 * t1610, t1610 * t1143 - t1608 * t1122 - qJ(1) * (t1271 * t1610 + t1338 * t1608), t1610 * t1150 - t1608 * t1131 - qJ(1) * (t1287 * t1610 + t1348 * t1608), t1610 * t1108 - t1608 * t1096 - qJ(1) * (t1233 * t1610 + t1300 * t1608), t1610 * t1083 - t1608 * t1080 - qJ(1) * (t1145 * t1610 + t1196 * t1608), t1162, t1116, t1134, t1161, t1135, t1185, -t1065 * t1608 + t1077 * t1610 - t1772, -t1067 * t1608 + t1078 * t1610 - t1771, -t1060 * t1608 + t1069 * t1610 - t1773, t1610 * t1052 - t1608 * t1051 - qJ(1) * (t1086 * t1610 + t1104 * t1608), t1162, t1116, t1134, t1161, t1135, t1185, -t1058 * t1608 + t1070 * t1610 - t1772, -t1062 * t1608 + t1072 * t1610 - t1771, -t1056 * t1608 + t1063 * t1610 - t1773, t1610 * t1049 - t1608 * t1048 - qJ(1) * (t1075 * t1610 + t1089 * t1608); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1804, -t1805, t1798, qJ(1) * t1798, 0, 0, t1661, 0, t1516, -t1610 * t1730, qJ(1) * t1517 + t1421 * t1610 + t1479 * t1608, qJ(1) * t1660 + t1610 * t1420 + t1608 * t1480, t1432 * t1610 + t1442 * t1608, t1608 * t1336 + t1610 * t1353 + qJ(1) * (-t1412 * t1608 + t1443 * t1610), t1470 * t1610 + t1512 * t1608, t1439 * t1610 + t1493 * t1608, t1466 * t1610 + t1510 * t1608, t1469 * t1610 + t1511 * t1608, t1465 * t1610 + t1509 * t1608, t1531 * t1610 + t1552 * t1608, t1608 * t1301 + t1610 * t1277 + qJ(1) * (-t1451 * t1608 + t1504 * t1610), t1608 * t1302 + t1610 * t1278 + qJ(1) * (-t1452 * t1608 + t1505 * t1610), t1608 * t1340 + t1610 * t1273 + qJ(1) * (-t1520 * t1608 + t1529 * t1610), t1608 * t1188 + t1610 * t1187 + qJ(1) * (-t1285 * t1608 + t1355 * t1610), t1291 * t1610 + t1362 * t1608, t1239 * t1610 + t1303 * t1608, t1298 * t1610 + t1351 * t1608, t1290 * t1610 + t1361 * t1608, t1299 * t1610 + t1352 * t1608, t1350 * t1610 + t1413 * t1608, t1608 * t1143 + t1610 * t1122 + qJ(1) * (-t1271 * t1608 + t1338 * t1610), t1608 * t1150 + t1610 * t1131 + qJ(1) * (-t1287 * t1608 + t1348 * t1610), t1608 * t1108 + t1610 * t1096 + qJ(1) * (-t1233 * t1608 + t1300 * t1610), t1608 * t1083 + t1610 * t1080 + qJ(1) * (-t1145 * t1608 + t1196 * t1610), t1160, t1115, t1132, t1159, t1133, t1184, t1065 * t1610 + t1077 * t1608 + t1123, t1067 * t1610 + t1078 * t1608 + t1126, t1060 * t1610 + t1069 * t1608 + t1111, t1608 * t1052 + t1610 * t1051 + qJ(1) * (-t1086 * t1608 + t1104 * t1610), t1160, t1115, t1132, t1159, t1133, t1184, t1058 * t1610 + t1070 * t1608 + t1123, t1062 * t1610 + t1072 * t1608 + t1126, t1056 * t1610 + t1063 * t1608 + t1111, t1608 * t1049 + t1610 * t1048 + qJ(1) * (-t1075 * t1608 + t1089 * t1610); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1711, t1584, 0, 0, 0, 0, t1561, 0, t1562, t1601, t1419, t1418, t1431, t1354, t1468, t1438, t1464, t1467, t1463, t1530, t1275, t1276, t1272, t1186, t1289, t1238, t1296, t1288, t1297, t1349, t1121, t1130, t1095, t1079, t1199, t1152, t1174, t1198, t1175, t1220, t1064, t1066, t1059, t1050, t1199, t1152, t1174, t1198, t1175, t1220, t1057, t1061, t1055, t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1774, -t1711, 0, 0, 0, t1580, 0, -t1658, 0, t1479, t1480, t1442, t1336, t1512, t1493, t1510, t1511, t1509, t1552, t1301, t1302, t1340, t1188, t1362, t1303, t1351, t1361, t1352, t1413, t1143, t1150, t1108, t1083, t1252, t1204, t1218, t1251, t1219, t1274, t1077, t1078, t1069, t1052, t1252, t1204, t1218, t1251, t1219, t1274, t1070, t1072, t1063, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1774, 0, -t1584, 0, 0, 0, t1563, 0, t1564, -t1730, t1421, t1420, t1432, t1353, t1470, t1439, t1466, t1469, t1465, t1531, t1277, t1278, t1273, t1187, t1291, t1239, t1298, t1290, t1299, t1350, t1122, t1131, t1096, t1080, t1201, t1153, t1176, t1200, t1177, t1221, t1065, t1067, t1060, t1051, t1201, t1153, t1176, t1200, t1177, t1221, t1058, t1062, t1056, t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1711, t1584, 0, 0, 0, 0, t1561, 0, t1562, t1601, t1419, t1418, t1431, t1354, t1468, t1438, t1464, t1467, t1463, t1530, t1275, t1276, t1272, t1186, t1289, t1238, t1296, t1288, t1297, t1349, t1121, t1130, t1095, t1079, t1199, t1152, t1174, t1198, t1175, t1220, t1064, t1066, t1059, t1050, t1199, t1152, t1174, t1198, t1175, t1220, t1057, t1061, t1055, t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1796, 0, 0, -t1553, t1506, 0, t1551, t1524, t1546, t1550, t1544, t1574, t1454, t1455, t1384, pkin(8) * t1384, t1378, t1322, t1401, t1377, t1402, t1428, t1250, t1256, t1158, t1146, t1283, t1231, t1246, t1282, t1247, t1315, t1102, t1103, t1094, t1071, t1283, t1231, t1246, t1282, t1247, t1315, t1088, t1091, t1084, t1054; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1796, 0, qJDD(2), 0, t1553, 0, t1507, 0, t1592, -t1583, -t1729, -t1592, -t1728, -qJDD(3), t1425, t1426, 0, pkin(2) * t1384, -t1522, -t1521, -t1476, t1522, -t1473, -t1727, t1264, t1269, t1268, t1178, -t1397, -t1333, -t1379, t1395, -t1380, -t1429, t1156, t1157, t1118, t1092, -t1397, -t1333, -t1379, t1395, -t1380, -t1429, t1137, t1138, t1107, t1073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1506, -t1507, 0, 0, t1539, t1523, t1542, t1538, t1540, 0, t1437, t1436, t1367, t1356, t1376, t1320, t1399, t1375, t1400, t1427, t1237, t1248, t1155, t1141, t1281, t1230, t1244, t1280, t1245, t1314, t1098, t1101, t1093, t1068, t1281, t1230, t1244, t1280, t1245, t1314, t1087, t1090, t1082, t1053; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1577, t1578, t1585, -t1598, t1590, t1598, 0, t1496, t1460, 0, t1459, t1391, t1484, t1457, t1485, t1498, t1374, t1386, t1249, -pkin(9) * t1266, t1360, t1305, t1318, t1359, t1319, t1388, t1169, t1170, t1142, t1106, t1360, t1305, t1318, t1359, t1319, t1388, t1120, t1128, t1110, t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1719, t1576, t1588, t1647, t1586, -t1719, -t1496, 0, t1461, 0, t1458, t1389, t1482, t1456, t1483, t1497, t1341, t1344, t1240, t1255, t1358, t1304, t1316, t1357, t1317, t1387, t1151, t1154, t1129, t1097, t1358, t1304, t1316, t1357, t1317, t1387, t1117, t1119, t1109, t1076; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1592, t1583, t1729, t1592, t1728, qJDD(3), -t1460, -t1461, 0, 0, t1522, t1521, t1476, -t1522, t1473, t1727, t1654, t1699, t1792, t1793, t1397, t1333, t1379, -t1395, t1380, t1429, t1701, t1311 + t1718, t1293 + t1702, t1700, t1397, t1333, t1379, -t1395, t1380, t1429, t1629, t1311 + t1703, t1293 + t1704, t1627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1492, -t1471, t1799, t1557, t1554, -t1557, 0, t1448, t1346, 0, t1398, t1335, t1381, t1396, t1382, t1430, t1263, t1265, t1181, -pkin(10) * t1191, t1398, t1335, t1381, t1396, t1382, t1430, t1197, t1202, t1136, t1105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1709, t1807, t1555, t1651, t1514, -t1709, -t1448, 0, t1347, 0, -t1489, -t1487, -t1409, t1489, t1406, -t1631, t1226, t1228, -t1791, -pkin(4) * t1191, -t1489, -t1487, -t1409, t1489, t1406, -t1631, t1189, t1203, t1279, t1125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1522, t1521, t1476, -t1522, t1473, t1727, -t1346, -t1347, 0, 0, t1397, t1333, t1379, -t1395, t1380, t1429, t1717, t1718, t1702, t1734, t1397, t1333, t1379, -t1395, t1380, t1429, t1643, t1703, t1704, t1644; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, -t1405, -t1808, t1502, t1499, -t1502, 0, t1328, t1259, 0, t1441, -t1405, -t1808, t1502, t1499, -t1502, qJ(6) * t1808, t1254, t1208, qJ(6) * t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1751, t1800, t1500, t1440, t1423, -t1751, -t1328, 0, t1260, 0, t1751, t1800, t1500, t1440, t1423, -t1751, t1229, t1339, t1206, t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1489, t1487, t1409, -t1489, -t1406, t1631, -t1259, -t1260, 0, 0, t1489, t1487, t1409, -t1489, -t1406, t1631, t1625, t1630 + 0.2e1 * t1766, -t1786, -t1787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, -t1405, -t1808, t1502, t1499, -t1502, 0, t1262, t1217, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1751, t1800, t1500, t1440, t1423, -t1751, -t1262, 0, t1225, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1489, t1487, t1409, -t1489, -t1406, t1631, -t1217, -t1225, 0, 0;];
m_new_reg  = t1;
