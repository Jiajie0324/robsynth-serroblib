% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRP1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP1_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:59:18
% EndTime: 2019-03-08 23:59:27
% DurationCPUTime: 3.78s
% Computational Cost: add. (4180->339), mult. (10443->562), div. (0->0), fcn. (10053->10), ass. (0->182)
t123 = cos(qJ(3));
t212 = cos(qJ(4));
t166 = t212 * t123;
t119 = sin(qJ(4));
t120 = sin(qJ(3));
t192 = t119 * t120;
t218 = qJD(3) + qJD(4);
t221 = -qJD(3) * t166 + t218 * t192;
t106 = -pkin(3) * t123 - pkin(2);
t83 = -t166 + t192;
t84 = t119 * t123 + t212 * t120;
t139 = pkin(4) * t83 - pkin(10) * t84 + t106;
t184 = qJD(4) * t119;
t214 = -pkin(9) - pkin(8);
t156 = t214 * t212;
t85 = t120 * t156;
t95 = t214 * t123;
t136 = qJD(4) * t85 + t95 * t184;
t173 = t119 * t214;
t158 = t123 * t173;
t217 = -qJD(3) * (t158 + t85) - t136;
t220 = -qJD(5) * t139 + t217;
t118 = sin(qJ(5));
t114 = t118 ^ 2;
t122 = cos(qJ(5));
t115 = t122 ^ 2;
t190 = t114 - t115;
t219 = t190 * qJD(5);
t215 = t120 ^ 2;
t59 = t218 * t84;
t213 = t59 * pkin(5);
t211 = pkin(3) * t119;
t210 = t122 * pkin(5);
t116 = sin(pkin(6));
t124 = cos(qJ(2));
t188 = qJD(2) * t124;
t163 = t116 * t188;
t117 = cos(pkin(6));
t121 = sin(qJ(2));
t194 = t116 * t121;
t73 = t117 * t120 + t123 * t194;
t132 = t73 * qJD(3) + t120 * t163;
t72 = t117 * t123 - t120 * t194;
t47 = t119 * t72 + t212 * t73;
t60 = qJD(3) * t72 + t123 * t163;
t21 = t47 * qJD(4) + t119 * t60 + t212 * t132;
t172 = t212 * t72;
t46 = t119 * t73 - t172;
t209 = t46 * t21;
t160 = qJD(4) * t212;
t35 = -t95 * t160 + t221 * t214;
t62 = -t119 * t95 - t85;
t208 = t62 * t35;
t58 = -t123 * t160 + t221;
t207 = t84 * t58;
t206 = -qJ(6) - pkin(10);
t111 = qJD(5) * t122;
t169 = t84 * t111;
t200 = t118 * t58;
t41 = t169 - t200;
t19 = pkin(5) * t41 + t35;
t199 = t118 * t84;
t45 = pkin(5) * t199 + t62;
t43 = t45 * t111;
t205 = t19 * t118 + t43;
t55 = t62 * t111;
t204 = t35 * t118 + t55;
t63 = t120 * t173 - t212 * t95;
t32 = t118 * t139 + t122 * t63;
t110 = qJD(5) * t118;
t108 = pkin(5) * t110;
t176 = pkin(3) * t184;
t86 = t108 + t176;
t180 = t212 * pkin(3);
t104 = -t180 - pkin(4);
t92 = t104 - t210;
t203 = t92 * t111 + t86 * t118;
t202 = t104 * t111 + t118 * t176;
t201 = pkin(3) * qJD(4);
t198 = t122 * t58;
t105 = -pkin(4) - t210;
t183 = qJD(5) * t114;
t197 = pkin(5) * t183 + t105 * t111;
t196 = qJD(5) * t84;
t195 = t105 * t122;
t193 = t116 * t124;
t112 = t122 * qJ(6);
t103 = pkin(10) + t211;
t191 = qJ(6) + t103;
t189 = qJD(2) * t121;
t187 = qJD(3) * t120;
t186 = qJD(3) * t123;
t185 = qJD(3) * t124;
t109 = t122 * qJD(6);
t44 = 0.2e1 * t83 * t59;
t182 = -0.2e1 * pkin(2) * qJD(3);
t179 = pkin(3) * t187;
t135 = pkin(4) * t59 + pkin(10) * t58 + t179;
t181 = -t118 * t135 + t220 * t122;
t178 = pkin(4) * t110;
t177 = pkin(4) * t111;
t175 = pkin(5) * t111;
t174 = t118 * t198;
t171 = t46 * t110;
t170 = t84 * t110;
t42 = t45 * t110;
t54 = t62 * t110;
t76 = t92 * t110;
t168 = t118 * t212;
t167 = t122 * t212;
t165 = t120 * t185;
t89 = t105 * t110;
t164 = t116 * t189;
t162 = t118 * t111;
t161 = t120 * t186;
t31 = -t118 * t63 + t122 * t139;
t159 = pkin(3) * t160;
t81 = t84 ^ 2;
t157 = t81 * t162;
t155 = t116 ^ 2 * t121 * t188;
t153 = t19 * t84 - t45 * t58;
t152 = t21 * t62 + t46 * t35;
t151 = t21 * t84 - t46 * t58;
t150 = t35 * t84 - t62 * t58;
t149 = t58 * t83 - t59 * t84;
t148 = -t58 * t92 + t84 * t86;
t147 = t103 * t83 - t104 * t84;
t146 = t118 * t32 + t122 * t31;
t140 = t118 * t193 - t122 * t47;
t141 = t118 * t47 + t122 * t193;
t145 = -t118 * t140 - t122 * t141;
t144 = t104 * t110 - t122 * t176;
t143 = t170 + t198;
t142 = t83 * t110 - t122 * t59;
t138 = (t114 + t115) * t212;
t137 = (t119 * t84 - t212 * t83) * qJD(4);
t10 = t63 * t110 + t181;
t11 = -t63 * t111 + t220 * t118 + t122 * t135;
t3 = -qJD(5) * t146 - t10 * t122 - t11 * t118;
t130 = -t119 * t132 - t73 * t184 + t212 * t60;
t126 = -t72 * t160 - t130;
t12 = qJD(5) * t141 - t118 * t164 + t122 * t126;
t13 = qJD(5) * t140 + t118 * t126 + t122 * t164;
t6 = -qJD(5) * t145 - t118 * t13 - t12 * t122;
t131 = pkin(3) * t137 - t103 * t59 - t104 * t58;
t127 = t60 * t123 + t215 * t163 - t72 * t186;
t125 = qJ(6) * t170 - t84 * t109 + t58 * t112 + t11;
t99 = -0.2e1 * t162;
t98 = 0.2e1 * t162;
t96 = t122 * t159;
t94 = pkin(10) * t122 + t112;
t93 = t206 * t118;
t82 = -0.2e1 * t219;
t79 = t103 * t122 + t112;
t78 = t191 * t118;
t71 = -t118 * qJD(6) + t206 * t111;
t70 = -t206 * t110 - t109;
t69 = t138 * t201;
t65 = t70 * t122;
t57 = (-t159 - qJD(6)) * t118 - t191 * t111;
t56 = t191 * t110 - t109 - t96;
t52 = t56 * t122;
t40 = t83 * t111 + t118 * t59;
t30 = -0.2e1 * t115 * t207 - 0.2e1 * t157;
t29 = -0.2e1 * t114 * t207 + 0.2e1 * t157;
t28 = -t115 * t196 + t84 * t183 + t174;
t25 = -qJ(6) * t199 + t32;
t24 = 0.4e1 * t84 * t174 + 0.2e1 * t81 * t219;
t23 = -0.4e1 * t84 * t162 + t190 * t58;
t22 = pkin(5) * t83 - t84 * t112 + t31;
t17 = 0.2e1 * t118 * t149 - 0.2e1 * t83 * t169;
t16 = -0.2e1 * t122 * t149 - 0.2e1 * t83 * t170;
t15 = -t122 * t21 + t171;
t14 = t46 * t111 + t118 * t21;
t9 = qJ(6) * t169 + (-qJ(6) * t58 + qJD(5) * t63 + qJD(6) * t84) * t118 + t181;
t8 = t9 * t122;
t7 = t125 + t213;
t5 = t151 * t118 + t13 * t83 - t141 * t59 + t46 * t169;
t4 = t12 * t83 + t151 * t122 + t140 * t59 - t46 * t170;
t2 = 0.2e1 * t12 * t140 - 0.2e1 * t13 * t141 + 0.2e1 * t209;
t1 = t145 * t58 + (t118 * t12 - t122 * t13 + (-t118 * t141 + t122 * t140) * qJD(5)) * t84;
t18 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t132 * t72 + 0.2e1 * t73 * t60 - 0.2e1 * t155, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t126 * t47 - 0.2e1 * t155 + 0.2e1 * t209, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, -t163, 0, 0, 0, 0, 0, 0, 0, 0 (-t123 * t189 - t165) * t116 (t120 * t189 - t123 * t185) * t116, t127, -pkin(2) * t164 + pkin(8) * t127, 0, 0, 0, 0, 0, 0 (-t124 * t59 + t83 * t189) * t116 (t124 * t58 + t84 * t189) * t116, t126 * t83 - t47 * t59 + t151, -t116 * pkin(3) * t165 + t106 * t164 - t126 * t63 - t217 * t47 + t152, 0, 0, 0, 0, 0, 0, t5, t4, t1, t10 * t140 - t11 * t141 - t12 * t32 + t13 * t31 + t152, 0, 0, 0, 0, 0, 0, t5, t4, t1, -t12 * t25 + t13 * t22 + t140 * t9 - t141 * t7 + t19 * t46 + t21 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161, 0.2e1 * (t123 ^ 2 - t215) * qJD(3), 0, -0.2e1 * t161, 0, 0, t120 * t182, t123 * t182, 0, 0, -0.2e1 * t207, 0.2e1 * t149, 0, t44, 0, 0, 0.2e1 * t106 * t59 + 0.2e1 * t83 * t179, -0.2e1 * t106 * t58 + 0.2e1 * t84 * t179, 0.2e1 * t217 * t83 - 0.2e1 * t63 * t59 + 0.2e1 * t150, 0.2e1 * t63 * t136 + 0.2e1 * t208 + 0.2e1 * (t63 * t158 + (t106 * pkin(3) + t156 * t63) * t120) * qJD(3), t30, t24, t16, t29, t17, t44, 0.2e1 * t11 * t83 + 0.2e1 * t118 * t150 + 0.2e1 * t31 * t59 + 0.2e1 * t84 * t55, 0.2e1 * t10 * t83 + 0.2e1 * t122 * t150 - 0.2e1 * t32 * t59 - 0.2e1 * t54 * t84, 0.2e1 * t146 * t58 + 0.2e1 * (t10 * t118 - t11 * t122 + (t118 * t31 - t122 * t32) * qJD(5)) * t84, -0.2e1 * t10 * t32 + 0.2e1 * t11 * t31 + 0.2e1 * t208, t30, t24, t16, t29, t17, t44, 0.2e1 * t118 * t153 + 0.2e1 * t22 * t59 + 0.2e1 * t43 * t84 + 0.2e1 * t7 * t83, 0.2e1 * t122 * t153 - 0.2e1 * t25 * t59 - 0.2e1 * t42 * t84 + 0.2e1 * t83 * t9, 0.2e1 * (t118 * t25 + t122 * t22) * t58 + 0.2e1 * (t118 * t9 - t122 * t7 + (t118 * t22 - t122 * t25) * qJD(5)) * t84, 0.2e1 * t19 * t45 + 0.2e1 * t22 * t7 - 0.2e1 * t25 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, -t60, 0, 0, 0, 0, 0, 0, 0, 0, -t21, t126, 0 (t130 * t119 - t21 * t212 + (t47 * t212 + (t172 + t46) * t119) * qJD(4)) * pkin(3), 0, 0, 0, 0, 0, 0, t15, t14, t6, t21 * t104 + (t119 * t46 - t140 * t167 + t141 * t168) * t201 + t6 * t103, 0, 0, 0, 0, 0, 0, t15, t14, t6, -t12 * t79 - t13 * t78 + t140 * t56 - t141 * t57 + t21 * t92 + t46 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, 0, -t187, 0, -pkin(8) * t186, pkin(8) * t187, 0, 0, 0, 0, -t58, 0, -t59, 0, -t35, t217 (-t119 * t59 + t212 * t58 + t137) * pkin(3), t63 * t159 + t62 * t176 - t35 * t180 - t211 * t217, -t28, t23, t40, t28, -t142, 0, t54 + (-qJD(5) * t147 - t35) * t122 + t131 * t118, t147 * t110 + t122 * t131 + t204, t3, t35 * t104 + (t62 * t119 + t167 * t32 - t168 * t31) * t201 + t3 * t103, -t28, t23, t40, t28, -t142, 0, t57 * t83 - t59 * t78 + t42 + (t92 * t196 - t19) * t122 + t148 * t118, t122 * t148 + t56 * t83 - t59 * t79 - t76 * t84 + t205, -t8 + (-t57 * t84 - t58 * t78 + (-t79 * t84 - t22) * qJD(5)) * t122 + (t56 * t84 + t58 * t79 - t7 + (-t78 * t84 - t25) * qJD(5)) * t118, t19 * t92 + t22 * t57 - t25 * t56 + t45 * t86 - t7 * t78 - t79 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t176, -0.2e1 * t159, 0, 0, t98, t82, 0, t99, 0, 0, 0.2e1 * t144, 0.2e1 * t202, 0.2e1 * t69, 0.2e1 * (t103 * t138 + t104 * t119) * t201, t98, t82, 0, t99, 0, 0, -0.2e1 * t122 * t86 + 0.2e1 * t76, 0.2e1 * t203, -0.2e1 * t118 * t57 - 0.2e1 * t52 + 0.2e1 * (-t118 * t79 + t122 * t78) * qJD(5), -0.2e1 * t56 * t79 - 0.2e1 * t57 * t78 + 0.2e1 * t86 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, t126, 0, 0, 0, 0, 0, 0, 0, 0, t15, t14, t6, -pkin(4) * t21 + pkin(10) * t6, 0, 0, 0, 0, 0, 0, t15, t14, t6, pkin(5) * t171 + t105 * t21 - t12 * t94 + t13 * t93 + t140 * t70 - t141 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t59, 0, -t35, t217, 0, 0, -t28, t23, t40, t28, -t142, 0, t54 + (pkin(4) * t58 - pkin(10) * t59) * t118 + (-t35 + (-pkin(4) * t84 - pkin(10) * t83) * qJD(5)) * t122, pkin(4) * t143 + pkin(10) * t142 + t204, t3, -pkin(4) * t35 + pkin(10) * t3, -t28, t23, t40, t28, -t142, 0, -t105 * t200 - t122 * t19 + t59 * t93 + t71 * t83 + t42 + (pkin(5) * t114 + t195) * t196, -t58 * t195 - t59 * t94 + t70 * t83 + (-t105 + t210) * t170 + t205, -t8 + (t58 * t93 - t71 * t84 + (-t84 * t94 - t22) * qJD(5)) * t122 + (t58 * t94 + t70 * t84 - t7 + (t84 * t93 - t25) * qJD(5)) * t118, pkin(5) * t42 + t105 * t19 + t22 * t71 - t25 * t70 + t7 * t93 - t9 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, -t159, 0, 0, t98, t82, 0, t99, 0, 0, t144 - t178, -t177 + t202, t69 (-pkin(4) * t119 + pkin(10) * t138) * t201, t98, t82, 0, t99, 0, 0, t76 + t89 + (-t86 - t108) * t122, t197 + t203, -t52 - t65 + (-t57 - t71) * t118 + ((t78 - t93) * t122 + (-t79 - t94) * t118) * qJD(5), pkin(5) * t76 + t105 * t86 - t56 * t94 + t57 * t93 - t70 * t79 - t71 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t82, 0, t99, 0, 0, -0.2e1 * t178, -0.2e1 * t177, 0, 0, t98, t82, 0, t99, 0, 0, -0.2e1 * pkin(5) * t162 + 0.2e1 * t89, 0.2e1 * t197, -0.2e1 * t118 * t71 - 0.2e1 * t65 + 0.2e1 * (-t118 * t94 - t122 * t93) * qJD(5), 0.2e1 * pkin(5) * t89 - 0.2e1 * t70 * t94 + 0.2e1 * t71 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, t12, 0, 0, 0, 0, 0, 0, 0, 0, t13, t12, 0, t13 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, 0, -t41, t59, t11, t10, 0, 0, 0, 0, -t143, 0, -t41, t59, t125 + 0.2e1 * t213, t9, t143 * pkin(5), t7 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, -t110, 0, -t103 * t111 - t118 * t159, t103 * t110 - t96, 0, 0, 0, 0, t111, 0, -t110, 0, t57, t56, -t175, t57 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111, 0, -t110, 0, -pkin(10) * t111, pkin(10) * t110, 0, 0, 0, 0, t111, 0, -t110, 0, t71, t70, -t175, t71 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t143, 0, t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t111, 0, t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t111, 0, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t18;
