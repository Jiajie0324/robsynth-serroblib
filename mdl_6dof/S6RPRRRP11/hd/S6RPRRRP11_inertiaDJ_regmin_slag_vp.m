% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP11_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP11_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP11_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRRP11_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:41:13
% EndTime: 2019-03-09 06:41:26
% DurationCPUTime: 4.07s
% Computational Cost: add. (7740->346), mult. (22693->637), div. (0->0), fcn. (24124->12), ass. (0->163)
t109 = sin(pkin(12));
t111 = sin(pkin(6));
t112 = cos(pkin(12));
t114 = cos(pkin(6));
t117 = sin(qJ(3));
t113 = cos(pkin(7));
t120 = cos(qJ(3));
t187 = t113 * t120;
t110 = sin(pkin(7));
t190 = t110 * t120;
t210 = (-t109 * t117 + t112 * t187) * t111 + t114 * t190;
t116 = sin(qJ(4));
t209 = -0.4e1 * t116;
t118 = cos(qJ(5));
t119 = cos(qJ(4));
t185 = t118 * t119;
t101 = pkin(10) * t185;
t115 = sin(qJ(5));
t141 = -pkin(4) * t119 - pkin(11) * t116;
t93 = -pkin(3) + t141;
t77 = t115 * t93 + t101;
t179 = qJD(3) * t120;
t153 = t110 * t179;
t191 = t110 * t117;
t82 = -t113 * t119 + t116 * t191;
t208 = -qJD(4) * t82 + t119 * t153;
t107 = t118 ^ 2;
t184 = t115 ^ 2 - t107;
t148 = t184 * qJD(5);
t188 = t112 * t117;
t66 = t114 * t191 + (t109 * t120 + t113 * t188) * t111;
t60 = t66 * qJD(3);
t206 = 0.2e1 * t60;
t205 = pkin(1) * t114;
t204 = pkin(10) * t115;
t203 = -qJ(6) - pkin(11);
t100 = t112 * t205;
t193 = t109 * t111;
t67 = t114 * pkin(2) + t100 + (-pkin(9) * t113 - qJ(2)) * t193;
t74 = (-pkin(9) * t109 * t110 - pkin(2) * t112 - pkin(1)) * t111;
t50 = -t110 * t67 + t113 * t74;
t34 = -pkin(3) * t210 - pkin(10) * t66 + t50;
t198 = t113 * t67;
t138 = t110 * t74 + t198;
t189 = t111 * t112;
t199 = qJ(2) * t189 + t109 * t205;
t62 = (t110 * t114 + t113 * t189) * pkin(9) + t199;
t122 = t138 * t117 + t120 * t62;
t81 = t110 * t189 - t114 * t113;
t39 = -t81 * pkin(10) + t122;
t202 = t116 * t34 + t119 * t39;
t20 = -pkin(11) * t210 + t202;
t38 = t81 * pkin(3) + t117 * t62 - t138 * t120;
t52 = t116 * t66 + t81 * t119;
t53 = -t116 * t81 + t119 * t66;
t24 = t52 * pkin(4) - t53 * pkin(11) + t38;
t9 = t115 * t24 + t118 * t20;
t140 = pkin(4) * t116 - pkin(11) * t119;
t126 = t140 * qJD(4);
t172 = qJD(5) * t118;
t201 = -t115 * t126 - t93 * t172;
t177 = qJD(4) * t116;
t160 = t115 * t177;
t200 = pkin(10) * t160 + t118 * t126;
t173 = qJD(5) * t115;
t59 = t210 * qJD(3);
t41 = -qJD(4) * t52 + t59 * t119;
t26 = t60 * t115 - t53 * t173 + (-qJD(5) * t210 + t41) * t118;
t197 = t26 * t115;
t196 = t26 * t118;
t195 = qJ(6) * t116;
t186 = t116 * t118;
t106 = t116 ^ 2;
t183 = -t119 ^ 2 + t106;
t182 = qJD(2) * t111;
t181 = qJD(3) * t117;
t180 = qJD(3) * t119;
t178 = qJD(4) * t115;
t176 = qJD(4) * t118;
t175 = qJD(4) * t119;
t174 = qJD(4) * t120;
t171 = qJD(5) * t119;
t170 = t118 * qJD(6);
t169 = -0.2e1 * pkin(3) * qJD(4);
t168 = -0.2e1 * pkin(4) * qJD(5);
t167 = t119 * t204;
t166 = pkin(10) * t175;
t165 = pkin(5) * t173;
t164 = t82 * t173;
t161 = t109 * t182;
t159 = t117 * t177;
t158 = t118 * t175;
t157 = t113 * t175;
t156 = t115 * t171;
t155 = t118 * t171;
t154 = t110 * t181;
t152 = t115 * t172;
t151 = t116 * t175;
t8 = -t115 * t20 + t118 * t24;
t150 = -t116 * t39 + t119 * t34;
t149 = qJD(5) * t203;
t147 = t183 * qJD(4);
t146 = -0.2e1 * t114 * t182;
t145 = 0.2e1 * t151;
t144 = t110 * t161;
t143 = t115 * t158;
t43 = -t115 * t210 + t118 * t53;
t6 = pkin(5) * t52 - qJ(6) * t43 + t8;
t42 = t115 * t53 + t118 * t210;
t7 = -qJ(6) * t42 + t9;
t139 = -t115 * t7 - t118 * t6;
t137 = -t115 * t43 - t118 * t42;
t83 = t113 * t116 + t119 * t191;
t127 = t115 * t83 + t118 * t190;
t71 = -t115 * t190 + t118 * t83;
t136 = -t115 * t71 + t118 * t127;
t29 = -t179 * t198 - t74 * t153 - t120 * t112 * t182 + (qJD(3) * t62 + t113 * t161) * t117;
t45 = pkin(3) * t60 - pkin(10) * t59 + t144;
t14 = t116 * t29 + t119 * t45 - t39 * t175 - t34 * t177;
t19 = pkin(4) * t210 - t150;
t135 = t116 * t60 - t175 * t210;
t134 = -t119 * t60 - t177 * t210;
t12 = -pkin(4) * t60 - t14;
t133 = t12 * t115 + t19 * t172;
t132 = -t12 * t118 + t19 * t173;
t40 = t53 * qJD(4) + t59 * t116;
t131 = t115 * t40 + t52 * t172;
t130 = -t118 * t40 + t52 * t173;
t69 = t83 * qJD(4) + t116 * t153;
t129 = t115 * t69 + t82 * t172;
t128 = -t118 * t69 + t164;
t13 = -t116 * t45 + t119 * t29 - t34 * t175 + t39 * t177;
t11 = pkin(11) * t60 - t13;
t30 = (t109 * t187 + t188) * t182 + t122 * qJD(3);
t121 = t40 * pkin(4) - t41 * pkin(11) + t30;
t3 = -t118 * t11 - t115 * t121 - t24 * t172 + t20 * t173;
t125 = -t116 * t173 + t158;
t124 = t116 * t176 + t156;
t123 = t115 * t175 + t116 * t172;
t4 = -t9 * qJD(5) - t115 * t11 + t118 * t121;
t103 = -pkin(5) * t118 - pkin(4);
t95 = t203 * t118;
t94 = t203 * t115;
t90 = (pkin(5) * t115 + pkin(10)) * t116;
t88 = t118 * t93;
t80 = -t115 * qJD(6) + t118 * t149;
t79 = t115 * t149 + t170;
t76 = t88 - t167;
t75 = t123 * pkin(5) + t166;
t72 = -t115 * t195 + t77;
t64 = -qJ(6) * t186 + t88 + (-pkin(5) - t204) * t119;
t55 = -t77 * qJD(5) + t200;
t54 = t124 * pkin(10) + t201;
t49 = (-pkin(10) * qJD(4) - qJ(6) * qJD(5)) * t186 + (-qJD(6) * t116 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t119) * t115 - t201;
t48 = -t115 * t157 - t83 * t172 + (t118 * t181 + (t159 + (qJD(5) - t180) * t120) * t115) * t110;
t47 = t127 * qJD(5) - t115 * t154 - t118 * t208;
t46 = -t116 * t170 + (pkin(5) * t116 - qJ(6) * t185) * qJD(4) + (-t101 + (-t93 + t195) * t115) * qJD(5) + t200;
t25 = qJD(5) * t43 + t41 * t115 - t60 * t118;
t15 = pkin(5) * t42 + t19;
t5 = pkin(5) * t25 + t12;
t2 = -qJ(6) * t25 - qJD(6) * t42 - t3;
t1 = t40 * pkin(5) - t26 * qJ(6) - t43 * qJD(6) + t4;
t10 = [0, 0, 0, t109 * t146, t112 * t146, 0.2e1 * (t109 ^ 2 + t112 ^ 2) * t111 ^ 2 * qJD(2), 0.2e1 * (t199 * t112 + (qJ(2) * t193 - t100) * t109) * t182, 0.2e1 * t66 * t59, 0.2e1 * t210 * t59 - 0.2e1 * t60 * t66, -0.2e1 * t59 * t81, t81 * t206, 0, -0.2e1 * t144 * t210 + 0.2e1 * t30 * t81 + 0.2e1 * t50 * t60, 0.2e1 * t144 * t66 - 0.2e1 * t29 * t81 + 0.2e1 * t50 * t59, 0.2e1 * t53 * t41, -0.2e1 * t40 * t53 - 0.2e1 * t41 * t52, -0.2e1 * t210 * t41 + 0.2e1 * t53 * t60, 0.2e1 * t210 * t40 - 0.2e1 * t52 * t60, -t210 * t206, -0.2e1 * t14 * t210 + 0.2e1 * t150 * t60 + 0.2e1 * t30 * t52 + 0.2e1 * t38 * t40, -0.2e1 * t13 * t210 - 0.2e1 * t202 * t60 + 0.2e1 * t30 * t53 + 0.2e1 * t38 * t41, 0.2e1 * t43 * t26, -0.2e1 * t25 * t43 - 0.2e1 * t26 * t42, 0.2e1 * t26 * t52 + 0.2e1 * t40 * t43, -0.2e1 * t25 * t52 - 0.2e1 * t40 * t42, 0.2e1 * t52 * t40, 0.2e1 * t12 * t42 + 0.2e1 * t19 * t25 + 0.2e1 * t4 * t52 + 0.2e1 * t40 * t8, 0.2e1 * t12 * t43 + 0.2e1 * t19 * t26 + 0.2e1 * t3 * t52 - 0.2e1 * t40 * t9, -0.2e1 * t1 * t43 - 0.2e1 * t2 * t42 - 0.2e1 * t25 * t7 - 0.2e1 * t26 * t6, 0.2e1 * t1 * t6 + 0.2e1 * t15 * t5 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113 * t60 + t154 * t81, t113 * t59 + t153 * t81, 0, 0, 0, 0, 0, -t82 * t60 + t69 * t210 + (-t120 * t40 + t52 * t181) * t110, t210 * t157 - t83 * t60 + ((t119 * t179 - t159) * t210 + t53 * t181 - t120 * t41) * t110, 0, 0, 0, 0, 0, -t127 * t40 + t25 * t82 + t42 * t69 + t48 * t52, t26 * t82 - t40 * t71 + t43 * t69 + t47 * t52, t127 * t26 - t25 * t71 + t42 * t47 - t43 * t48, -t1 * t127 + t15 * t69 + t2 * t71 - t47 * t7 + t48 * t6 + t5 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t127 * t48 - 0.2e1 * t47 * t71 + 0.2e1 * t69 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, -t60, 0, -t30, t29, t116 * t41 + t175 * t53, -t116 * t40 + t41 * t119 + (-t116 * t53 - t119 * t52) * qJD(4), t135, -t134, 0, -pkin(3) * t40 - pkin(10) * t135 - t30 * t119 + t177 * t38, -pkin(3) * t41 + pkin(10) * t134 + t30 * t116 + t175 * t38, t43 * t158 + (-t173 * t43 + t196) * t116, t137 * t175 + (-t197 - t118 * t25 + (t115 * t42 - t118 * t43) * qJD(5)) * t116 (t176 * t52 - t26) * t119 + (qJD(4) * t43 - t130) * t116 (-t178 * t52 + t25) * t119 + (-qJD(4) * t42 - t131) * t116, -t119 * t40 + t177 * t52, t76 * t40 + t55 * t52 + (-t4 + (pkin(10) * t42 + t115 * t19) * qJD(4)) * t119 + (pkin(10) * t25 + qJD(4) * t8 + t133) * t116, -t77 * t40 + t54 * t52 + (-t3 + (pkin(10) * t43 + t118 * t19) * qJD(4)) * t119 + (pkin(10) * t26 - qJD(4) * t9 - t132) * t116, -t72 * t25 - t64 * t26 - t49 * t42 - t46 * t43 + t139 * t175 + (-t1 * t118 - t115 * t2 + (t115 * t6 - t118 * t7) * qJD(5)) * t116, t1 * t64 + t15 * t75 + t2 * t72 + t46 * t6 + t49 * t7 + t5 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, -t153, 0, 0, 0, 0, 0 (-t116 * t174 - t117 * t180) * t110 (t116 * t181 - t119 * t174) * t110, 0, 0, 0, 0, 0 (t82 * t178 - t48) * t119 + (-qJD(4) * t127 + t129) * t116 (t176 * t82 - t47) * t119 + (-qJD(4) * t71 - t128) * t116, t136 * t175 + (t115 * t47 - t118 * t48 + (-t115 * t127 - t118 * t71) * qJD(5)) * t116, -t127 * t46 - t47 * t72 + t48 * t64 + t49 * t71 + t69 * t90 + t75 * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, -0.2e1 * t147, 0, 0, 0, t116 * t169, t119 * t169, -0.2e1 * t106 * t152 + 0.2e1 * t107 * t151, 0.2e1 * t106 * t148 + t143 * t209, 0.2e1 * t116 * t156 + 0.2e1 * t183 * t176, -0.2e1 * t115 * t147 + 0.2e1 * t116 * t155, -0.2e1 * t151, 0.2e1 * t76 * t177 - 0.2e1 * t55 * t119 + 0.2e1 * (t106 * t172 + t115 * t145) * pkin(10), -0.2e1 * t77 * t177 - 0.2e1 * t54 * t119 + 0.2e1 * (-t106 * t173 + t118 * t145) * pkin(10), 0.2e1 * (-t115 * t72 - t118 * t64) * t175 + 0.2e1 * (-t115 * t49 - t118 * t46 + (t115 * t64 - t118 * t72) * qJD(5)) * t116, 0.2e1 * t46 * t64 + 0.2e1 * t49 * t72 + 0.2e1 * t75 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t40, t60, t14, t13, t172 * t43 + t197, qJD(5) * t137 - t115 * t25 + t196, t131, -t130, 0, -pkin(4) * t25 - pkin(11) * t131 + t132, -pkin(4) * t26 + pkin(11) * t130 + t133, qJD(5) * t139 - t1 * t115 + t2 * t118 + t95 * t25 - t94 * t26 - t79 * t42 - t80 * t43, t1 * t94 + t103 * t5 + t15 * t165 - t2 * t95 + t6 * t80 + t7 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t208, 0, 0, 0, 0, 0, t128, t129, qJD(5) * t136 - t48 * t115 - t47 * t118, pkin(5) * t164 + t103 * t69 - t127 * t80 + t47 * t95 + t48 * t94 + t71 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, -t177, 0, -t166, pkin(10) * t177, -t116 * t148 + t143, t152 * t209 - t184 * t175, -t155 + t160, t124, 0 (pkin(11) * t185 + (-pkin(4) * t118 + t204) * t116) * qJD(5) + (t115 * t141 - t101) * qJD(4) (pkin(10) * t186 + t115 * t140) * qJD(5) + (t118 * t141 + t167) * qJD(4) (-t94 * t175 - t116 * t80 + t49 + (t116 * t95 - t64) * qJD(5)) * t118 + (t95 * t175 - t116 * t79 - t46 + (t116 * t94 - t72) * qJD(5)) * t115, t103 * t75 + t165 * t90 + t46 * t94 - t49 * t95 + t64 * t80 + t72 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t152, -0.2e1 * t148, 0, 0, 0, t115 * t168, t118 * t168, -0.2e1 * t80 * t115 + 0.2e1 * t79 * t118 + 0.2e1 * (t115 * t95 - t118 * t94) * qJD(5), 0.2e1 * t103 * t165 - 0.2e1 * t79 * t95 + 0.2e1 * t80 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, -t25, t40, t4, t3, -pkin(5) * t26, t1 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t47, 0, t48 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t123, t177, t55, t54, -t125 * pkin(5), t46 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, -t173, 0, -pkin(11) * t172, pkin(11) * t173, -pkin(5) * t172, t80 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
