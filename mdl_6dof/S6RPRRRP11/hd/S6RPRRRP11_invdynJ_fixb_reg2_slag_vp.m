% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRP11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRP11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRP11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRRP11_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:41:22
% EndTime: 2019-03-09 06:42:00
% DurationCPUTime: 21.08s
% Computational Cost: add. (35756->874), mult. (114163->1141), div. (0->0), fcn. (98684->14), ass. (0->383)
t344 = cos(pkin(6));
t343 = cos(pkin(12));
t556 = sin(qJ(1));
t460 = t556 * t343;
t341 = sin(pkin(12));
t558 = cos(qJ(1));
t464 = t558 * t341;
t282 = t344 * t464 + t460;
t342 = sin(pkin(6));
t525 = sin(pkin(7));
t555 = sin(qJ(3));
t436 = t525 * t555;
t422 = t342 * t436;
t557 = cos(qJ(3));
t334 = t556 * t341;
t463 = t558 * t343;
t410 = -t344 * t463 + t334;
t526 = cos(pkin(7));
t570 = t410 * t526;
t205 = -t282 * t557 + t558 * t422 + t555 * t570;
t347 = sin(qJ(4));
t349 = cos(qJ(4));
t453 = t342 * t526;
t579 = t410 * t525 - t558 * t453;
t166 = t205 * t349 - t347 * t579;
t437 = t525 * t557;
t423 = t342 * t437;
t202 = t282 * t555 + t558 * t423 + t557 * t570;
t346 = sin(qJ(5));
t348 = cos(qJ(5));
t591 = t166 * t346 + t202 * t348;
t590 = t166 * t348 - t202 * t346;
t504 = t341 * t342;
t443 = t555 * t504;
t439 = t526 * t557;
t503 = t342 * t343;
t405 = t439 * t503;
t421 = t344 * t437;
t491 = (-t405 - t421) * qJD(1);
t236 = qJD(1) * t443 + t491;
t385 = qJD(4) + t236;
t438 = t526 * t555;
t373 = t342 * (-t341 * t438 + t557 * t343);
t265 = qJD(1) * t373;
t412 = qJD(3) * t437;
t583 = -t265 + t412;
t165 = t205 * t347 + t349 * t579;
t268 = (-pkin(9) * t341 * t525 - pkin(2) * t343 - pkin(1)) * t342;
t257 = qJD(1) * t268 + qJD(2);
t459 = qJ(2) * qJD(1) * t342;
t554 = pkin(1) * t344;
t472 = qJD(1) * t554;
t277 = t341 * t472 + t343 * t459;
t381 = (t343 * t453 + t344 * t525) * pkin(9);
t225 = qJD(1) * t381 + t277;
t324 = t343 * t472;
t382 = t344 * pkin(2) + (-pkin(9) * t526 - qJ(2)) * t504;
t231 = qJD(1) * t382 + t324;
t577 = t557 * t225 + t231 * t438;
t145 = t257 * t436 + t577;
t585 = -t145 + t385 * (pkin(4) * t347 - pkin(11) * t349);
t420 = t344 * t436;
t578 = t557 * t341 + t343 * t438;
t251 = t342 * t578 + t420;
t240 = t251 * qJD(1);
t500 = t346 * t349;
t172 = -t236 * t500 - t348 * t240;
t486 = qJD(4) * t349;
t584 = -t346 * t486 + t172;
t239 = t251 * qJD(3);
t356 = qJD(1) * t239;
t566 = -t405 + t443;
t250 = -t421 + t566;
t392 = t250 * qJDD(1);
t384 = qJDD(4) + t392;
t567 = t356 + t384;
t484 = qJD(5) * t348;
t582 = t347 * t484 - t584;
t581 = -t555 * t225 + t231 * t439;
t286 = t347 * t436 - t349 * t526;
t449 = qJD(1) * t525;
t435 = t342 * t449;
t414 = t341 * t435;
t568 = -qJD(4) * t286 - t347 * t414 + t583 * t349;
t391 = t344 * t460 + t464;
t580 = t391 * t525 + t556 * t453;
t374 = t342 * (t341 * t439 + t555 * t343);
t264 = qJD(1) * t374;
t411 = qJD(3) * t436;
t565 = t411 - t264;
t451 = t344 * t526;
t452 = t342 * t525;
t386 = t343 * t452 - t451;
t395 = qJDD(1) * t386 - qJDD(3);
t488 = qJD(4) * t347;
t376 = t240 * t488 + t347 * t395;
t477 = qJDD(1) * t342;
t178 = t236 * qJD(3) - qJDD(1) * t420 - t578 * t477;
t480 = -t343 * t435 + qJD(3);
t397 = -qJD(1) * t451 - t480;
t379 = qJD(4) * t397 + t178;
t561 = t349 * t379 + t376;
t576 = -qJD(5) * t385 + t561;
t283 = -t334 * t344 + t463;
t372 = t391 * t526;
t207 = t283 * t557 - t555 * t372 + t556 * t422;
t167 = t207 * t347 - t349 * t580;
t200 = t251 * t347 + t349 * t386;
t401 = g(1) * t167 - g(2) * t165 + g(3) * t200;
t471 = pkin(10) * t488;
t144 = t257 * t437 + t581;
t180 = pkin(3) * t240 + pkin(10) * t236;
t108 = t349 * t144 + t347 * t180;
t96 = pkin(11) * t240 + t108;
t575 = t585 * t348 + (t471 + t96) * t346;
t314 = -pkin(4) * t349 - pkin(11) * t347 - pkin(3);
t574 = t314 * t484 + t585 * t346 - t348 * t96;
t192 = t349 * t240 - t347 * t397;
t151 = t192 * t346 - t348 * t385;
t190 = t240 * t347 + t349 * t397;
t189 = qJD(5) + t190;
t522 = t151 * t189;
t179 = t356 + t392;
t351 = qJDD(4) + t179;
t485 = qJD(5) * t346;
t65 = t192 * t485 - t346 * t351 + t348 * t576;
t573 = -t65 - t522;
t153 = t348 * t192 + t346 * t385;
t519 = t153 * t189;
t66 = t192 * t484 - t346 * t576 - t348 * t351;
t572 = t66 + t519;
t338 = t341 ^ 2;
t339 = t342 ^ 2;
t340 = t343 ^ 2;
t571 = t339 * (t338 + t340);
t569 = t108 + t471;
t327 = qJ(2) * t503;
t285 = t341 * t554 + t327;
t242 = t381 + t285;
t331 = t343 * t554;
t252 = t331 + t382;
t155 = -t555 * t242 + t252 * t439 + t268 * t437;
t287 = t347 * t526 + t349 * t436;
t494 = qJD(4) * t287 + t583 * t347 + t349 * t414;
t498 = t348 * t349;
t333 = pkin(10) * t498;
t274 = t346 * t314 + t333;
t508 = t236 * t349;
t564 = -t486 - t508;
t563 = t66 * pkin(5) + qJDD(6);
t168 = t207 * t349 + t347 * t580;
t206 = t283 * t555 + t557 * t372 - t556 * t423;
t117 = -t168 * t346 + t206 * t348;
t201 = t251 * t349 - t347 * t386;
t161 = t201 * t346 - t250 * t348;
t562 = -g(1) * t117 - g(2) * t591 + g(3) * t161;
t560 = t153 ^ 2;
t448 = -t347 * t178 + t349 * t395;
t481 = t192 * qJD(4);
t112 = t448 + t481;
t111 = qJDD(5) + t112;
t553 = pkin(5) * t111;
t552 = pkin(10) * t347;
t551 = pkin(10) * t349;
t544 = t151 * pkin(5);
t345 = -qJ(6) - pkin(11);
t185 = -t231 * t525 + t526 * t257;
t122 = t236 * pkin(3) - t240 * pkin(10) + t185;
t125 = -pkin(10) * t397 + t145;
t78 = t347 * t122 + t349 * t125;
t70 = pkin(11) * t385 + t78;
t124 = pkin(3) * t397 - t144;
t88 = t190 * pkin(4) - t192 * pkin(11) + t124;
t40 = -t346 * t70 + t348 * t88;
t31 = -qJ(6) * t153 + t40;
t27 = pkin(5) * t189 + t31;
t543 = -t31 + t27;
t142 = pkin(3) * t386 - t155;
t101 = t200 * pkin(4) - t201 * pkin(11) + t142;
t193 = -t252 * t525 + t526 * t268;
t247 = t250 * pkin(3);
t136 = -t251 * pkin(10) + t193 + t247;
t156 = t557 * t242 + t252 * t438 + t268 * t436;
t143 = -pkin(10) * t386 + t156;
t92 = t347 * t136 + t349 * t143;
t83 = pkin(11) * t250 + t92;
t49 = t346 * t101 + t348 * t83;
t542 = qJ(6) * t65;
t541 = qJ(6) * t66;
t475 = qJDD(1) * t344;
t469 = pkin(1) * t475;
t322 = t343 * t469;
t479 = qJD(1) * qJD(2);
t456 = t342 * t479;
t442 = t341 * t456;
t215 = qJDD(1) * t382 + t322 - t442;
t253 = qJDD(1) * t268 + qJDD(2);
t171 = -t215 * t525 + t526 * t253;
t102 = t179 * pkin(3) + t178 * pkin(10) + t171;
t261 = qJDD(1) * t327 + t341 * t469 + t343 * t456;
t212 = qJDD(1) * t381 + t261;
t89 = t581 * qJD(3) + t557 * t212 + t215 * t438 + t253 * t436 + t257 * t412;
t84 = -pkin(10) * t395 + t89;
t444 = -t349 * t102 + t122 * t488 + t125 * t486 + t347 * t84;
t22 = -t567 * pkin(4) + t444;
t13 = t22 + t563;
t540 = t13 * t346;
t41 = t346 * t88 + t348 * t70;
t32 = -qJ(6) * t151 + t41;
t539 = t189 * t32;
t538 = t189 * t40;
t537 = t189 * t41;
t536 = t22 * t346;
t535 = t346 * t65;
t534 = t348 * t66;
t173 = -t236 * t498 + t240 * t346;
t483 = qJD(6) * t348;
t509 = t236 * t347;
t533 = pkin(5) * t509 + qJ(6) * t173 - t347 * t483 + (pkin(5) * t347 - qJ(6) * t498) * qJD(4) + (-t333 + (qJ(6) * t347 - t314) * t346) * qJD(5) + t575;
t499 = t347 * t348;
t532 = qJ(6) * t172 + (-pkin(10) * qJD(4) - qJ(6) * qJD(5)) * t499 + (-qJD(6) * t347 + (-pkin(10) * qJD(5) - qJ(6) * qJD(4)) * t349) * t346 + t574;
t487 = qJD(4) * t348;
t531 = (-t347 * t487 - t349 * t485) * pkin(10) + t574;
t530 = -t274 * qJD(5) + t575;
t470 = pkin(10) * t486;
t107 = -t347 * t144 + t180 * t349;
t95 = -pkin(4) * t240 - t107;
t529 = t582 * pkin(5) + t470 - t95;
t454 = qJD(5) * t345;
t516 = t190 * t346;
t134 = pkin(4) * t192 + pkin(11) * t190;
t77 = t349 * t122 - t347 * t125;
t61 = t346 * t134 + t348 * t77;
t528 = -qJ(6) * t516 + t346 * t454 + t483 - t61;
t515 = t190 * t348;
t60 = t348 * t134 - t346 * t77;
t527 = -pkin(5) * t192 - qJ(6) * t515 - qJD(6) * t346 + t348 * t454 - t60;
t524 = t111 * t346;
t523 = t111 * t348;
t521 = t151 * t346;
t520 = t153 * t151;
t518 = t153 * t346;
t517 = t189 * t192;
t514 = t192 * t190;
t513 = t202 * t347;
t512 = t202 * t349;
t511 = t206 * t347;
t510 = t206 * t349;
t507 = t240 * t236;
t506 = t250 * t347;
t505 = t250 * t349;
t350 = qJD(1) ^ 2;
t502 = t344 * t350;
t501 = t346 * t347;
t497 = t349 * t112;
t387 = -t348 * t287 + t346 * t437;
t496 = -qJD(5) * t387 + t568 * t346 - t565 * t348;
t258 = -t346 * t287 - t348 * t437;
t495 = -qJD(5) * t258 - t565 * t346 - t568 * t348;
t465 = t342 * t556;
t490 = t558 * pkin(1) + qJ(2) * t465;
t482 = t124 * qJD(4);
t478 = qJDD(1) * t339;
t476 = qJDD(1) * t343;
t474 = g(1) * t556;
t473 = g(2) * t558;
t468 = t401 * t346;
t467 = pkin(5) * t346 + pkin(10);
t466 = t342 * t558;
t457 = qJD(4) + t491;
t455 = g(2) * t466 - g(3) * t344;
t48 = t348 * t101 - t346 * t83;
t406 = -t347 * t102 - t122 * t486 + t125 * t488 - t349 * t84;
t21 = t567 * pkin(11) - t406;
t409 = qJD(3) * t577 + t555 * t212 - t215 * t439 - t253 * t437 + t257 * t411;
t85 = pkin(3) * t395 + t409;
t38 = t112 * pkin(4) + pkin(11) * t561 + t85;
t3 = t348 * t21 + t346 * t38 + t88 * t484 - t70 * t485;
t450 = qJD(6) + t544;
t91 = t136 * t349 - t347 * t143;
t447 = t385 * t347;
t446 = t189 * t348;
t445 = 0.2e1 * t342 * t475;
t440 = -t556 * pkin(1) + qJ(2) * t466;
t433 = g(1) * t591 - g(2) * t117;
t118 = t168 * t348 + t206 * t346;
t432 = -g(1) * t590 - g(2) * t118;
t431 = g(1) * t165 + g(2) * t167;
t430 = -g(1) * t202 + g(2) * t206;
t428 = t348 * t486 - t173;
t427 = -t346 * t41 - t348 * t40;
t162 = t201 * t348 + t250 * t346;
t426 = (-t341 * t459 + t324) * t341 - t277 * t343;
t336 = pkin(5) * t348 + pkin(4);
t425 = -t336 * t349 + t345 * t347;
t413 = t341 * qJD(2) * t452;
t130 = qJD(2) * t373 + t155 * qJD(3);
t238 = t566 * qJD(3) - t344 * t412;
t170 = t239 * pkin(3) + t238 * pkin(10) + t413;
t56 = -t347 * t130 - t136 * t488 - t143 * t486 + t170 * t349;
t82 = -pkin(4) * t250 - t91;
t325 = -pkin(1) * t477 + qJDD(2);
t408 = pkin(1) * t478 - t325 * t342;
t55 = t349 * t130 + t136 * t486 - t143 * t488 + t347 * t170;
t52 = pkin(11) * t239 + t55;
t131 = qJD(2) * t374 + qJD(3) * t156;
t157 = qJD(4) * t201 - t238 * t347;
t158 = -qJD(4) * t200 - t238 * t349;
t73 = t157 * pkin(4) - t158 * pkin(11) + t131;
t10 = t101 * t484 + t346 * t73 + t348 * t52 - t485 * t83;
t69 = -pkin(4) * t385 - t77;
t407 = -pkin(11) * t111 + t189 * t69;
t404 = g(1) * t558 + g(2) * t556;
t403 = -g(1) * (t206 * t500 + t207 * t348) - g(2) * (t202 * t500 - t205 * t348) - g(3) * (t250 * t500 + t251 * t348);
t402 = -g(1) * (-t206 * t498 + t207 * t346) - g(2) * (-t202 * t498 - t205 * t346) - g(3) * (-t250 * t498 + t251 * t346);
t400 = -g(1) * t168 + g(2) * t166 - g(3) * t201;
t399 = g(1) * t206 + g(2) * t202 + g(3) * t250;
t398 = g(1) * t207 - g(2) * t205 + g(3) * t251;
t394 = -g(1) * t465 + t455;
t393 = -t22 + t401;
t53 = -pkin(4) * t239 - t56;
t380 = g(1) * t118 - g(2) * t590 + g(3) * t162 - t3;
t4 = -qJD(5) * t41 - t21 * t346 + t348 * t38;
t11 = -qJD(5) * t49 - t346 * t52 + t348 * t73;
t378 = qJD(4) * t385;
t375 = t401 - t444;
t370 = t347 * t444 - t349 * t406 - t398;
t365 = -t282 * pkin(2) - t579 * pkin(9) + t440;
t364 = t283 * pkin(2) + t580 * pkin(9) + t490;
t363 = t4 + t562;
t362 = t205 * pkin(3) + t365;
t361 = t207 * pkin(3) + t364;
t359 = -pkin(10) * t202 + t362;
t357 = t206 * pkin(10) + t361;
t355 = t236 * t385 + t378;
t316 = t345 * t348;
t315 = t345 * t346;
t304 = t467 * t347;
t298 = t348 * t314;
t284 = -qJ(2) * t504 + t331;
t273 = -pkin(10) * t500 + t298;
t262 = -qJ(6) * t501 + t274;
t260 = t322 + (-qJ(2) * qJDD(1) - t479) * t504;
t249 = -qJ(6) * t499 + t298 + (-pkin(10) * t346 - pkin(5)) * t349;
t198 = t206 * pkin(3);
t196 = t202 * pkin(3);
t150 = t151 ^ 2;
t104 = t239 * t346 - t201 * t485 + (qJD(5) * t250 + t158) * t348;
t103 = qJD(5) * t162 + t158 * t346 - t239 * t348;
t74 = -t150 + t560;
t67 = -t111 * t349 + t189 * t447;
t64 = -pkin(5) * t516 + t78;
t63 = pkin(5) * t161 + t82;
t62 = t111 * t200 + t157 * t189;
t59 = t450 + t69;
t47 = -t66 + t519;
t46 = -t65 + t522;
t45 = -t153 * t192 + t189 * t446 + t524;
t44 = -t189 ^ 2 * t346 + t151 * t192 + t523;
t39 = -qJ(6) * t161 + t49;
t35 = t189 * t521 - t534;
t34 = t153 * t446 - t535;
t33 = pkin(5) * t200 - qJ(6) * t162 + t48;
t30 = pkin(5) * t103 + t53;
t29 = t582 * t151 + t66 * t501;
t28 = -t65 * t499 + (-t347 * t485 + t428) * t153;
t26 = t103 * t151 + t161 * t66;
t25 = t104 * t153 - t162 * t65;
t19 = t349 * t66 + t584 * t189 + (-t151 * t385 - t189 * t484 - t524) * t347;
t18 = t349 * t65 + t428 * t189 + (t153 * t385 - t189 * t485 + t523) * t347;
t17 = t111 * t258 + t151 * t494 - t189 * t496 + t286 * t66;
t16 = t111 * t387 + t153 * t494 + t189 * t495 - t286 * t65;
t15 = t104 * t189 + t111 * t162 + t153 * t157 - t200 * t65;
t14 = -t103 * t189 - t111 * t161 - t151 * t157 - t200 * t66;
t12 = -t572 * t346 + t573 * t348;
t9 = t151 * t495 + t153 * t496 + t258 * t65 + t387 * t66;
t8 = t151 * t173 + t153 * t172 + (-t151 * t348 - t518) * t486 + (t535 - t534 + (-t153 * t348 + t521) * qJD(5)) * t347;
t7 = -t103 * t153 - t104 * t151 + t161 * t65 - t162 * t66;
t6 = -qJ(6) * t103 - qJD(6) * t161 + t10;
t5 = pkin(5) * t157 - qJ(6) * t104 - qJD(6) * t162 + t11;
t2 = -qJD(6) * t151 + t3 - t541;
t1 = -qJD(6) * t153 + t4 + t542 + t553;
t20 = [0, 0, 0, 0, 0, qJDD(1), t474 - t473, t404, 0, 0, t338 * t478, 0.2e1 * t339 * t341 * t476, t341 * t445, t340 * t478, t343 * t445, t344 ^ 2 * qJDD(1), g(1) * t282 - g(2) * t283 + t408 * t343 + (qJDD(1) * t284 + t260 - t442) * t344, -g(1) * t334 + (t473 - t408) * t341 + (-t285 * qJDD(1) - t261 + (t404 - t456) * t343) * t344, t479 * t571 + (-t260 * t341 + t261 * t343 + (-t284 * t341 + t285 * t343) * qJDD(1) - t404) * t342, t261 * t285 + t260 * t284 - g(1) * t440 - g(2) * t490 + (-t325 * pkin(1) - qJD(2) * t426) * t342, -t178 * t251 - t238 * t240, t178 * t250 - t179 * t251 + t236 * t238 - t239 * t240, t178 * t386 + t238 * t397 - t251 * t395, t179 * t250 + t236 * t239, t179 * t386 + t239 * t397 + t250 * t395, t395 * t386, -g(1) * t205 - g(2) * t207 + t131 * t397 - t155 * t395 + t171 * t250 + t193 * t179 + t185 * t239 + t236 * t413 + t386 * t409, t130 * t397 + t156 * t395 + t171 * t251 - t193 * t178 - t185 * t238 + t240 * t413 + t386 * t89 + t430, g(1) * t579 - g(2) * t580 - t130 * t236 + t131 * t240 + t144 * t238 - t145 * t239 + t155 * t178 - t156 * t179 - t89 * t250 + t251 * t409, -g(1) * t365 - g(2) * t364 + t145 * t130 - t144 * t131 - t155 * t409 + t89 * t156 + t171 * t193 + t185 * t413, t192 * t158 - t201 * t561, -t201 * t112 - t192 * t157 - t158 * t190 + t200 * t561, t158 * t385 + t192 * t239 + t201 * t351 - t250 * t561, t112 * t200 + t157 * t190, -t157 * t457 - t200 * t384 - t112 * t250 - t190 * t239 + (-t157 * t443 - t200 * t239) * qJD(1), t384 * t250 + (t457 + (t250 + t443) * qJD(1)) * t239, -g(1) * t166 - g(2) * t168 + t142 * t112 + t124 * t157 + t131 * t190 + t85 * t200 + t77 * t239 - t250 * t444 + t351 * t91 + t385 * t56, t124 * t158 + t131 * t192 - t142 * t561 + t85 * t201 - t78 * t239 + t250 * t406 - t385 * t55 - t567 * t92 + t431, -t92 * t112 - t78 * t157 - t77 * t158 - t55 * t190 - t56 * t192 + t200 * t406 + t201 * t444 + t561 * t91 - t430, -g(1) * t359 - g(2) * t357 + t124 * t131 + t85 * t142 - t406 * t92 - t444 * t91 + t78 * t55 + t77 * t56, t25, t7, t15, t26, t14, t62, t103 * t69 + t11 * t189 + t111 * t48 + t151 * t53 + t157 * t40 + t161 * t22 + t200 * t4 + t66 * t82 + t432, -t10 * t189 + t104 * t69 - t111 * t49 + t153 * t53 - t157 * t41 + t162 * t22 - t200 * t3 - t65 * t82 + t433, -t10 * t151 - t103 * t41 - t104 * t40 - t11 * t153 - t161 * t3 - t162 * t4 + t48 * t65 - t49 * t66 - t431, t3 * t49 + t41 * t10 + t4 * t48 + t40 * t11 + t22 * t82 + t69 * t53 - g(1) * (t166 * pkin(4) + t165 * pkin(11) + t359) - g(2) * (t168 * pkin(4) + t167 * pkin(11) + t357) t25, t7, t15, t26, t14, t62, t1 * t200 + t103 * t59 + t111 * t33 + t13 * t161 + t151 * t30 + t157 * t27 + t189 * t5 + t63 * t66 + t432, t104 * t59 - t111 * t39 + t13 * t162 + t153 * t30 - t157 * t32 - t189 * t6 - t2 * t200 - t63 * t65 + t433, -t1 * t162 - t103 * t32 - t104 * t27 - t151 * t6 - t153 * t5 - t161 * t2 + t33 * t65 - t39 * t66 - t431, t2 * t39 + t32 * t6 + t1 * t33 + t27 * t5 + t13 * t63 + t59 * t30 - g(1) * (-t165 * t345 + t166 * t336 - t202 * t467 + t362) - g(2) * (-t167 * t345 + t168 * t336 + t206 * t467 + t361); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t341 * t502 - t476) * t342 (qJDD(1) * t341 + t343 * t502) * t342, -t350 * t571, qJDD(2) + (-pkin(1) * qJDD(1) + qJD(1) * t426 - t474) * t342 + t455, 0, 0, 0, 0, 0, 0, t179 * t526 - t236 * t414 - t395 * t437 + t397 * t565, -t178 * t526 - t240 * t414 + t395 * t436 + t583 * t397, t178 * t437 - t179 * t436 + t265 * t236 - t264 * t240 + (-t236 * t437 + t240 * t436) * qJD(3), -t409 * t437 + t89 * t436 + t171 * t526 + t144 * t264 - t145 * t265 + (-t185 * t341 * t449 - t474) * t342 + (-t144 * t436 + t145 * t437) * qJD(3) + t455, 0, 0, 0, 0, 0, 0, -t286 * t384 - t112 * t437 - t264 * t190 + (t190 * t436 - t240 * t286) * qJD(3) - t494 * t385, t192 * t565 - t287 * t567 - t385 * t568 + t437 * t561, -t287 * t112 - t190 * t568 + t192 * t494 - t286 * t561, t124 * t565 + t286 * t444 - t287 * t406 - t85 * t437 - t494 * t77 + t568 * t78 + t394, 0, 0, 0, 0, 0, 0, t17, t16, t9, t22 * t286 + t4 * t258 - t3 * t387 - t40 * t496 - t41 * t495 + t494 * t69 + t394, 0, 0, 0, 0, 0, 0, t17, t16, t9, t1 * t258 + t13 * t286 - t2 * t387 - t27 * t496 - t32 * t495 + t494 * t59 + t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507, -t236 ^ 2 + t240 ^ 2, -t236 * t397 - t178, -t507, t240 * t480 + (t240 * t451 - t239) * qJD(1) - t392, -t395, -t145 * t397 - t185 * t240 + t399 - t409, -t144 * t397 + t185 * t236 + t398 - t89, 0, 0, -t376 * t347 + (t192 * t385 - t347 * t379) * t349, -t192 * t509 - t349 * t561 + (-t112 - t481) * t347 + t564 * t190, -t192 * t240 + t347 * t567 + t349 * t355, t190 * t447 - t497, t190 * t240 - t347 * t355 + t349 * t567, -t385 * t240, -pkin(3) * t112 + g(1) * t510 + g(2) * t512 + g(3) * t505 - t107 * t385 + t124 * t509 - t145 * t190 - t77 * t240 + t347 * t482 - t85 * t349 - t351 * t552 - t378 * t551, pkin(3) * t561 - g(1) * t511 - g(2) * t513 - g(3) * t506 + t124 * t508 - t145 * t192 + t78 * t240 + t85 * t347 + t349 * t482 + t385 * t569 - t551 * t567, -pkin(10) * t497 - t561 * t552 + t370 + (-t488 - t509) * t78 + t564 * t77 + (t107 + t470) * t192 + t569 * t190, -t85 * pkin(3) + g(1) * t198 + g(2) * t196 + g(3) * t247 - t77 * t107 - t78 * t108 - t124 * t145 + ((-t347 * t78 - t349 * t77) * qJD(4) + t370) * pkin(10), t28, t8, t18, t29, t19, t67, t111 * t273 - t151 * t95 - t172 * t69 + t530 * t189 + (-t4 + (pkin(10) * t151 + t346 * t69) * qJD(4)) * t349 + (pkin(10) * t66 + t385 * t40 + t484 * t69 + t536) * t347 + t402, -t111 * t274 - t153 * t95 - t173 * t69 - t531 * t189 + (t3 + (pkin(10) * t153 + t348 * t69) * qJD(4)) * t349 + (-pkin(10) * t65 + t22 * t348 - t385 * t41 - t485 * t69) * t347 + t403, t172 * t41 + t173 * t40 + t273 * t65 - t274 * t66 - t530 * t153 - t531 * t151 + t427 * t486 + (-t3 * t346 - t348 * t4 + (t346 * t40 - t348 * t41) * qJD(5) + t399) * t347, t3 * t274 + t4 * t273 - t69 * t95 - g(1) * (-pkin(4) * t510 - pkin(11) * t511 - t198) - g(2) * (-pkin(4) * t512 - pkin(11) * t513 - t196) - g(3) * (-pkin(4) * t505 - pkin(11) * t506 - t247) + t531 * t41 + t530 * t40 + (t22 * t347 + t486 * t69 - t398) * pkin(10), t28, t8, t18, t29, t19, t67, t111 * t249 - t172 * t59 + t304 * t66 + (qJD(4) * t346 * t59 - t1) * t349 + t533 * t189 + t529 * t151 + (t27 * t385 + t484 * t59 + t540) * t347 + t402, -t111 * t262 - t173 * t59 - t304 * t65 + (t487 * t59 + t2) * t349 - t532 * t189 + t529 * t153 + (t13 * t348 - t32 * t385 - t485 * t59) * t347 + t403, t172 * t32 + t173 * t27 + t249 * t65 - t262 * t66 - t533 * t153 - t532 * t151 + (-t27 * t348 - t32 * t346) * t486 + (-t1 * t348 - t2 * t346 + (t27 * t346 - t32 * t348) * qJD(5) + t399) * t347, t2 * t262 + t1 * t249 + t13 * t304 - g(1) * (t206 * t425 + t207 * t467 - t198) - g(2) * (t202 * t425 - t205 * t467 - t196) - g(3) * (t250 * t425 + t251 * t467 - t247) + t529 * t59 + t532 * t32 + t533 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, -t190 ^ 2 + t192 ^ 2, t190 * t385 - t561, -t514, t192 * t236 - t448, t351, -t124 * t192 + t385 * t78 + t375, t124 * t190 + t385 * t77 - t400 + t406, 0, 0, t34, t12, t45, t35, t44, -t517, -pkin(4) * t66 - t151 * t78 - t189 * t60 - t192 * t40 + t407 * t346 + (-pkin(11) * qJD(5) * t189 + t393) * t348, pkin(4) * t65 - t153 * t78 + t192 * t41 + t536 + (pkin(11) * t485 + t61) * t189 + t407 * t348 - t468, t151 * t61 + t153 * t60 + (t3 - t538 + (qJD(5) * t153 - t66) * pkin(11)) * t348 + (-t4 - t537 + (qJD(5) * t151 - t65) * pkin(11)) * t346 + t400, -t40 * t60 - t41 * t61 - t69 * t78 + t393 * pkin(4) + (qJD(5) * t427 + t3 * t348 - t4 * t346 + t400) * pkin(11), t34, t12, t45, t35, t44, -t517, t111 * t315 - t151 * t64 - t192 * t27 - t336 * t66 + t527 * t189 + (t190 * t59 + (t59 + t544) * qJD(5)) * t346 + (-t13 + t401) * t348, t59 * t515 + t111 * t316 + t540 - t153 * t64 + t192 * t32 + t336 * t65 - t528 * t189 + (pkin(5) * t518 + t348 * t59) * qJD(5) - t468, t315 * t65 + t316 * t66 - t527 * t153 - t528 * t151 + (-t189 * t27 + t2) * t348 + (-t1 - t539) * t346 + t400, -t2 * t316 + t1 * t315 - t13 * t336 - g(1) * (-t167 * t336 - t168 * t345) - g(2) * (t165 * t336 + t166 * t345) - g(3) * (-t200 * t336 - t201 * t345) + (pkin(5) * t485 - t64) * t59 + t528 * t32 + t527 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t520, t74, t46, -t520, t47, t111, -t153 * t69 + t363 + t537, t151 * t69 + t380 + t538, 0, 0, t520, t74, t46, -t520, t47, t111, 0.2e1 * t553 + t542 + t539 + (-t450 - t59) * t153 + t363, -pkin(5) * t560 + t541 + t189 * t31 + (qJD(6) + t59) * t151 + t380, pkin(5) * t65 - t151 * t543, t543 * t32 + (-t59 * t153 + t1 + t562) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, t573, -t150 - t560, -pkin(4) * t351 + t32 * t151 + t27 * t153 - t375 + t563;];
tau_reg  = t20;
