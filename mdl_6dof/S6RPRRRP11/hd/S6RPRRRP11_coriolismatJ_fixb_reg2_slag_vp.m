% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRP11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RPRRRP11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:41:21
% EndTime: 2019-03-09 06:42:41
% DurationCPUTime: 64.48s
% Computational Cost: add. (80786->1540), mult. (222464->2051), div. (0->0), fcn. (254361->12), ass. (0->1071)
t1156 = cos(qJ(5));
t1153 = sin(qJ(5));
t1155 = sin(qJ(3));
t1149 = sin(pkin(12));
t1151 = sin(pkin(6));
t1484 = t1149 * t1151;
t1727 = cos(qJ(3));
t1152 = cos(pkin(12));
t1681 = cos(pkin(7));
t1370 = t1151 * t1681;
t1150 = sin(pkin(7));
t1682 = cos(pkin(6));
t1371 = t1150 * t1682;
t1768 = t1152 * t1370 + t1371;
t967 = t1155 * t1484 - t1727 * t1768;
t1522 = t967 * t1153;
t1154 = sin(qJ(4));
t1481 = t1151 * t1152;
t1263 = t1150 * t1481 - t1681 * t1682;
t1215 = t1263 * t1154;
t1157 = cos(qJ(4));
t1331 = t1155 * t1371;
t1367 = t1155 * t1681;
t1428 = t1727 * t1149;
t969 = t1331 + (t1152 * t1367 + t1428) * t1151;
t1519 = t969 * t1157;
t846 = -t1215 + t1519;
t1529 = t846 * t1156;
t668 = t1522 + t1529;
t1545 = t668 * t1156;
t1521 = t967 * t1156;
t1531 = t846 * t1153;
t666 = -t1521 + t1531;
t1603 = t1153 * t666;
t477 = -t1545 / 0.2e1 + t1603 / 0.2e1;
t1788 = t477 * qJD(5);
t844 = t1154 * t969 + t1157 * t1263;
t1533 = t844 * t1154;
t1405 = -t1533 / 0.2e1;
t1689 = t1157 / 0.2e1;
t1245 = t1689 * t846 + t1405;
t1787 = t1245 * qJD(4);
t1369 = t1152 * t1682;
t1210 = pkin(1) * t1369 + pkin(2) * t1682;
t1436 = -pkin(2) * t1152 - pkin(1);
t1483 = t1150 * t1151;
t1485 = t1149 * t1150;
t1786 = t1681 * ((-pkin(9) * t1681 - qJ(2)) * t1484 + t1210) + (-pkin(9) * t1485 + t1436) * t1483;
t1147 = t1156 ^ 2;
t1145 = t1153 ^ 2;
t1697 = t1145 / 0.2e1;
t1373 = t1697 - t1147 / 0.2e1;
t1060 = t1373 * t1154;
t657 = t668 * t1153;
t1409 = -t657 / 0.2e1;
t1548 = t666 * t1156;
t1248 = -t1548 / 0.2e1 + t1409;
t1214 = t1248 * t1154;
t1146 = t1154 ^ 2;
t1464 = t1156 * t1146;
t1394 = t1153 * t1464;
t1785 = -qJD(1) * t1214 + qJD(3) * t1394 + t1060 * qJD(4);
t1621 = qJD(1) * t668;
t1784 = -qJD(3) * t1214 + qJD(4) * t477 + t666 * t1621;
t1462 = t1157 * qJD(3);
t1133 = t1154 * t1462;
t1361 = t1245 * qJD(1) + t1133;
t1534 = t844 * qJD(1);
t1783 = -qJD(3) * t1245 + t846 * t1534;
t1475 = t1153 * t1156;
t1131 = qJD(4) * t1475;
t1782 = qJD(1) * t477 + t1060 * qJD(3) - t1131;
t1721 = t844 * pkin(5);
t1335 = t844 * pkin(4) - t846 * pkin(11);
t1372 = t1149 * t1682;
t1166 = pkin(1) * t1372 + pkin(9) * t1768 + qJ(2) * t1481;
t614 = t1155 * t1166 - t1727 * t1786;
t546 = pkin(3) * t1263 + t614;
t1159 = t1335 + t546;
t1719 = t967 * pkin(11);
t1336 = t967 * pkin(3) - t969 * pkin(10);
t615 = t1155 * t1786 + t1727 * t1166;
t547 = -pkin(10) * t1263 + t615;
t1599 = t1157 * t547;
t415 = t1599 + t1154 * (-t1150 * (-qJ(2) * t1484 + t1210) + t1681 * (-pkin(1) * t1151 - pkin(2) * t1481) + t1336);
t370 = t415 + t1719;
t230 = t1153 * t370 - t1156 * t1159;
t179 = t668 * qJ(6) + t230;
t144 = -t179 + t1721;
t1649 = t144 + t179;
t1323 = -pkin(4) * t1157 - t1154 * pkin(11);
t1288 = -pkin(3) + t1323;
t1072 = t1156 * t1288;
t1469 = t1154 * t1156;
t1321 = -qJ(6) * t1469 + t1072;
t964 = (-pkin(10) * t1153 - pkin(5)) * t1157 + t1321;
t1474 = t1153 * t1157;
t1456 = pkin(10) * t1474;
t978 = -t1321 + t1456;
t1781 = t964 + t978;
t1477 = t1153 * t1154;
t1381 = -t1477 / 0.2e1;
t1547 = t666 * t1157;
t650 = t1547 / 0.2e1;
t1780 = t844 * t1381 + t650;
t1779 = t1214 * qJD(5);
t1432 = t1157 * t1727;
t1347 = -t1432 / 0.2e1;
t1476 = t1153 * t1155;
t1184 = (t1156 * t1347 - t1476 / 0.2e1) * t1150;
t1470 = t1154 * t1155;
t1056 = t1150 * t1470 - t1157 * t1681;
t1434 = t1150 * t1727;
t1353 = t1156 * t1434;
t1368 = t1154 * t1681;
t1482 = t1150 * t1155;
t1057 = t1157 * t1482 + t1368;
t1478 = t1153 * t1057;
t976 = t1353 + t1478;
t1517 = t976 * t1157;
t1229 = -t1517 / 0.2e1 + t1056 * t1381;
t727 = t1184 - t1229;
t1541 = t727 * qJD(2);
t1690 = -t1157 / 0.2e1;
t1025 = -t1072 + t1456;
t1713 = t1025 / 0.2e1;
t1260 = t1690 * t230 + t1713 * t844;
t813 = -t1150 * t1210 + (qJ(2) * t1485 + t1436 * t1681) * t1151;
t1160 = t1336 + t813;
t414 = t1154 * t547 - t1157 * t1160;
t369 = -pkin(4) * t967 + t414;
t1576 = t369 * t1153;
t1411 = t1576 / 0.2e1;
t605 = t1157 * t614;
t1720 = t967 * pkin(10);
t785 = pkin(3) * t969 + t1720;
t776 = t1154 * t785;
t491 = -t605 + t776;
t461 = pkin(11) * t969 + t491;
t458 = t1156 * t461;
t768 = t1154 * t967;
t771 = t1157 * t967;
t492 = -pkin(4) * t768 + pkin(11) * t771 + t615;
t487 = t1153 * t492;
t1439 = -t458 / 0.2e1 - t487 / 0.2e1;
t1724 = pkin(10) * t666;
t75 = (t1724 / 0.2e1 + t1411) * t1154 - t1260 + t1439;
t1486 = t1146 * t1153;
t1500 = t1025 * t1157;
t965 = -pkin(10) * t1486 - t1500;
t1777 = qJD(1) * t75 - qJD(3) * t965 + t1541;
t1467 = t1155 * t1156;
t1185 = (t1153 * t1347 + t1467 / 0.2e1) * t1150;
t1378 = -t1469 / 0.2e1;
t1339 = t1056 * t1378;
t1354 = t1153 * t1434;
t1465 = t1156 * t1057;
t977 = -t1354 + t1465;
t1401 = t977 * t1690;
t1228 = t1401 + t1339;
t726 = t1185 + t1228;
t1542 = t726 * qJD(2);
t231 = t1153 * t1159 + t1156 * t370;
t1414 = t231 * t1690;
t1463 = t1156 * t1157;
t1454 = pkin(10) * t1463;
t1026 = t1153 * t1288 + t1454;
t1712 = t1026 / 0.2e1;
t1259 = t1712 * t844 + t1414;
t1575 = t369 * t1156;
t1751 = -t668 / 0.2e1;
t1279 = pkin(10) * t1751 - t1575 / 0.2e1;
t1604 = t1153 * t461;
t488 = t1156 * t492;
t1326 = t488 / 0.2e1 - t1604 / 0.2e1;
t74 = t1154 * t1279 + t1259 + t1326;
t1499 = t1026 * t1157;
t966 = -pkin(10) * t1464 - t1499;
t1776 = qJD(1) * t74 + qJD(3) * t966 + t1542;
t1435 = pkin(5) * t1153 + pkin(10);
t1087 = t1435 * t1154;
t1704 = t1087 / 0.2e1;
t1732 = -t978 / 0.2e1;
t1197 = t1689 * t179 + t1704 * t666 + t1732 * t844;
t944 = t969 * t1156;
t758 = -t1474 * t967 - t944;
t1652 = t758 * qJ(6);
t1275 = t1652 / 0.2e1 + t1439;
t1726 = pkin(5) * t666;
t318 = t369 + t1726;
t1582 = t318 * t1153;
t1413 = t1582 / 0.2e1;
t1459 = pkin(5) * t1545;
t59 = (t1413 - t1459) * t1154 + t1197 + t1275;
t843 = t1147 * t1146 * pkin(5) - t1087 * t1477 - t1157 * t978;
t1775 = -qJD(1) * t59 + qJD(3) * t843 - t1541;
t1350 = t1434 / 0.2e1;
t1297 = t1153 * t1350;
t1733 = t977 / 0.2e1;
t584 = (t1297 + t1733 - t1465 / 0.2e1) * t1154;
t1552 = t584 * qJD(2);
t1744 = t844 / 0.2e1;
t1753 = -t415 / 0.2e1;
t1234 = t1719 / 0.2e1 + pkin(10) * t1744 + t1753;
t1683 = t1157 * pkin(11);
t1687 = t1154 * pkin(4);
t1111 = -t1683 + t1687;
t1083 = t1153 * t1111;
t1455 = pkin(10) * t1469;
t1037 = t1083 - t1455;
t1710 = t1037 / 0.2e1;
t1258 = t1710 * t844 + t1712 * t846;
t1718 = t969 * pkin(4);
t1598 = t1157 * t785;
t604 = t1154 * t614;
t490 = t604 + t1598;
t460 = -t490 - t1718;
t1565 = t460 * t1153;
t1520 = t969 * t1153;
t759 = -t1463 * t967 + t1520;
t1748 = -t759 / 0.2e1;
t1280 = pkin(4) * t1748 + t1565 / 0.2e1;
t411 = t1156 * t414;
t579 = pkin(4) * t846 + pkin(11) * t844;
t564 = t1153 * t579;
t322 = -t411 + t564;
t49 = (-t322 / 0.2e1 + t1279) * t1157 + (t231 / 0.2e1 + t1234 * t1156) * t1154 + t1258 + t1280;
t840 = t1037 * t1157 + (-t1026 + 0.2e1 * t1454) * t1154;
t1774 = -t49 * qJD(1) + t840 * qJD(3) - t1552;
t1351 = -t1434 / 0.2e1;
t1296 = t1156 * t1351;
t1735 = t976 / 0.2e1;
t585 = (t1296 + t1735 - t1478 / 0.2e1) * t1154;
t1551 = t585 * qJD(2);
t1587 = t230 * t1154;
t1084 = t1156 * t1111;
t1137 = pkin(10) * t1477;
t1036 = t1137 + t1084;
t1711 = -t1036 / 0.2e1;
t1193 = t846 * t1713 + t844 * t1711 + t1587 / 0.2e1;
t1564 = t460 * t1156;
t1749 = -t758 / 0.2e1;
t1281 = pkin(4) * t1749 - t1564 / 0.2e1;
t1605 = t1153 * t414;
t565 = t1156 * t579;
t321 = t565 + t1605;
t48 = (t321 / 0.2e1 - t1724 / 0.2e1) * t1157 + (t1154 * t1234 + t1690 * t369) * t1153 + t1193 + t1281;
t839 = t1025 * t1154 + (t1036 - 0.2e1 * t1137) * t1157;
t1773 = -t48 * qJD(1) - t839 * qJD(3) - t1551;
t1088 = t1435 * t1157;
t1703 = -t1088 / 0.2e1;
t981 = -qJ(6) * t1474 + t1037;
t1728 = t981 / 0.2e1;
t979 = -qJ(6) * t1477 + t1026;
t1730 = t979 / 0.2e1;
t553 = t1153 * t844;
t273 = qJ(6) * t553 + t322;
t1175 = t1690 * t273 + t1703 * t668 + t1728 * t844 + t1730 * t846;
t1723 = t758 * pkin(5);
t378 = t460 + t1723;
t1574 = t378 * t1153;
t1141 = -pkin(5) * t1156 - pkin(4);
t1698 = t1141 / 0.2e1;
t1252 = t759 * t1698 + t1574 / 0.2e1;
t1256 = t1690 * t318 + t1704 * t844;
t344 = -pkin(5) * t553 + t415;
t1601 = t1156 * t344;
t1688 = pkin(11) + qJ(6);
t1106 = t1688 * t1156;
t1699 = t1106 / 0.2e1;
t180 = -t666 * qJ(6) + t231;
t35 = t1256 * t1156 + (t967 * t1699 + t180 / 0.2e1 - t1601 / 0.2e1) * t1154 + t1175 + t1252;
t1493 = t1088 * t1156;
t1494 = t1087 * t1156;
t658 = (t981 + t1494) * t1157 + (-t979 + t1493) * t1154;
t1772 = -t35 * qJD(1) + t658 * qJD(3) - t1552;
t1686 = t1154 * pkin(5);
t970 = -qJ(6) * t1463 + t1036 + t1686;
t1738 = -t970 / 0.2e1;
t1741 = -t964 / 0.2e1;
t557 = t1156 * t844;
t841 = t846 * pkin(5);
t253 = qJ(6) * t557 + t321 + t841;
t1176 = t1689 * t253 + t1703 * t666 + t1738 * t844 + t1741 * t846;
t1573 = t378 * t1156;
t1253 = t758 * t1698 - t1573 / 0.2e1;
t1694 = -t1154 / 0.2e1;
t1105 = t1688 * t1153;
t1701 = t1105 / 0.2e1;
t31 = (t967 * t1701 - t144 / 0.2e1) * t1154 + (t1694 * t344 + t1256) * t1153 + t1176 + t1253;
t606 = -t1087 * t1474 - t1088 * t1477 - t964 * t1154 + t1157 * t970;
t1771 = -t31 * qJD(1) - t606 * qJD(3) - t1551;
t1750 = t668 / 0.2e1;
t1257 = t1036 * t1750 + t1710 * t666;
t1693 = t1154 / 0.2e1;
t1757 = pkin(11) / 0.2e1;
t297 = t488 - t1604;
t298 = t458 + t487;
t15 = (pkin(11) * t1749 + t298 / 0.2e1 + t321 * t1693 + t1260) * t1156 + (t759 * t1757 - t297 / 0.2e1 + t322 * t1693 - t1259) * t1153 + t1257;
t1024 = (t1156 * t1432 + t1476) * t1150;
t1715 = -t1024 / 0.2e1;
t1023 = (-t1153 * t1432 + t1467) * t1150;
t1716 = t1023 / 0.2e1;
t552 = (t1517 / 0.2e1 + t1715) * t1156 + (t1401 + t1716) * t1153;
t1554 = t552 * qJD(2);
t613 = (t1036 * t1154 - t1500) * t1156 + (t1037 * t1154 + t1499) * t1153;
t1770 = t15 * qJD(1) + t613 * qJD(3) - t1554;
t1268 = t1690 * t180 + t1730 * t844;
t1194 = t1694 * t273 + t1268;
t1740 = t964 / 0.2e1;
t1195 = t144 * t1690 + t1694 * t253 + t1740 * t844;
t1702 = -t1105 / 0.2e1;
t1255 = t1699 * t758 + t1702 * t759;
t1729 = -t981 / 0.2e1;
t1277 = t1729 * t666 + t1738 * t668;
t1458 = pkin(5) * t768;
t1651 = t759 * qJ(6);
t245 = -t1458 + t297 - t1651;
t1756 = t245 / 0.2e1;
t260 = t298 - t1652;
t4 = (-t260 / 0.2e1 + t1195) * t1156 + (t1756 + t1194) * t1153 + t1255 + t1277;
t1597 = t1157 * t979;
t507 = (t1154 * t970 + t1157 * t964) * t1156 + (t1154 * t981 + t1597) * t1153;
t1769 = t4 * qJD(1) - t507 * qJD(3) + t1554;
t1705 = -t1087 / 0.2e1;
t1423 = t668 * t1705;
t1196 = t1423 + t1268;
t1222 = -t1651 / 0.2e1 + t1326;
t1581 = t318 * t1156;
t1412 = -t1581 / 0.2e1;
t57 = (t1412 + (-t967 + t1248) * pkin(5)) * t1154 + t1196 + t1222;
t1395 = t1087 * t1469;
t832 = -pkin(5) * t1394 - t1395 - t1597;
t1767 = qJD(1) * t57 + qJD(3) * t832 + t1542;
t1433 = t1154 * t1727;
t1352 = t1056 * t1433;
t532 = -t976 * t1023 + t977 * t1024 + t1150 * t1352;
t1557 = t532 * qJD(2);
t1708 = t1056 / 0.2e1;
t1714 = t1024 / 0.2e1;
t1717 = -t1023 / 0.2e1;
t1736 = -t976 / 0.2e1;
t1170 = t1708 * t460 + t1714 * t231 + t1717 * t230 + t1733 * t298 + t1736 * t297;
t1287 = t1681 * t1428;
t1480 = t1152 * t1155;
t1015 = (t1287 + t1480) * t1151;
t1479 = t1153 * t1015;
t1389 = t1154 * t1484;
t1330 = t1149 * t1367;
t1427 = t1727 * t1152;
t1016 = (-t1330 + t1427) * t1151;
t1461 = t1157 * t1016;
t918 = t1150 * t1389 + t1461;
t1600 = t1156 * t918;
t782 = t1479 + t1600;
t1746 = -t782 / 0.2e1;
t1466 = t1156 * t1015;
t1602 = t1153 * t918;
t781 = t1466 - t1602;
t1247 = t1026 * t1746 + t1713 * t781;
t1393 = t1149 * t1483;
t1086 = t1157 * t1393;
t1471 = t1154 * t1016;
t917 = -t1086 + t1471;
t1742 = -t917 / 0.2e1;
t28 = (pkin(10) * t1742 + t1350 * t369) * t1154 + t1170 + t1247;
t1766 = t28 * qJD(1) + t1557;
t1348 = t1433 / 0.2e1;
t1298 = t1150 * t1348;
t1161 = t1298 * t318 + t144 * t1716 + t1708 * t378 + t1714 * t180 + t1733 * t260 + t1736 * t245;
t1731 = -t979 / 0.2e1;
t1200 = t1705 * t917 + t1731 * t782 + t1741 * t781;
t12 = t1161 + t1200;
t1765 = t12 * qJD(1) + t1557;
t1516 = t977 * t1156;
t1518 = t976 * t1153;
t523 = (t1057 - t1516 - t1518) * t1056;
t1558 = t523 * qJD(2);
t1691 = t1156 / 0.2e1;
t1696 = -t1153 / 0.2e1;
t1246 = t1691 * t782 + t1696 * t781;
t1181 = pkin(4) * t1742 + pkin(11) * t1246;
t1707 = -t1057 / 0.2e1;
t1734 = -t977 / 0.2e1;
t1201 = t1707 * t369 + t1734 * t322 + t1735 * t321;
t1695 = t1153 / 0.2e1;
t29 = (t1691 * t231 + t1695 * t230 + t1753) * t1056 + t1181 + t1201;
t1764 = -t29 * qJD(1) + t1558;
t1692 = -t1156 / 0.2e1;
t1251 = t144 * t1695 + t1692 * t180;
t1706 = t1057 / 0.2e1;
t1165 = (t344 / 0.2e1 + t1251) * t1056 + t253 * t1736 + t273 * t1733 + t318 * t1706;
t1700 = -t1106 / 0.2e1;
t1190 = t1141 * t1742 + t1700 * t782 + t1701 * t781;
t14 = t1165 + t1190;
t1763 = t14 * qJD(1) + t1558;
t1647 = t411 / 0.2e1 - t564 / 0.2e1;
t1515 = t1086 / 0.2e1 - t1471 / 0.2e1;
t1760 = t668 ^ 2;
t1759 = t844 ^ 2;
t1758 = t967 ^ 2;
t1755 = t253 / 0.2e1;
t1754 = -t414 / 0.2e1;
t1752 = -t565 / 0.2e1;
t1747 = t781 / 0.2e1;
t1745 = -t844 / 0.2e1;
t1743 = -t846 / 0.2e1;
t1739 = -t969 / 0.2e1;
t1737 = t970 / 0.2e1;
t1725 = pkin(5) * t668;
t1722 = t759 * pkin(5);
t1709 = -t1056 / 0.2e1;
t1685 = t1154 * pkin(10);
t1684 = t1157 * pkin(10);
t21 = -t1649 * t180 + t1725 * t318;
t1680 = qJD(1) * t21;
t24 = t1649 * t666;
t1679 = qJD(1) * t24;
t1440 = t179 / 0.2e1 + t144 / 0.2e1;
t1334 = t1440 * t977;
t1609 = t1056 * t668;
t1425 = t1609 / 0.2e1;
t26 = -t1334 + (t1425 - t781 / 0.2e1) * pkin(5);
t1678 = qJD(1) * t26;
t61 = t144 * t781 + t180 * t782 + t318 * t917;
t1677 = qJD(1) * t61;
t72 = -t230 * t781 + t231 * t782 + t369 * t917;
t1676 = qJD(1) * t72;
t73 = -t144 * t668 - t180 * t666;
t1675 = qJD(1) * t73;
t82 = pkin(5) * t1760 + t179 * t844 - t318 * t666;
t1674 = qJD(1) * t82;
t83 = -t180 * t844 + (t318 + t1726) * t668;
t1673 = qJD(1) * t83;
t22 = t144 * t245 + t180 * t260 + t318 * t378;
t1670 = t22 * qJD(1);
t23 = t144 * t253 + t180 * t273 + t318 * t344;
t1669 = t23 * qJD(1);
t33 = -t144 * t759 - t180 * t758 - t245 * t668 - t260 * t666;
t1666 = t33 * qJD(1);
t1591 = t180 * t1153;
t1592 = t144 * t1156;
t34 = -t253 * t668 - t273 * t666 + (t1591 + t1592) * t844;
t1665 = t34 * qJD(1);
t38 = -t230 * t321 + t231 * t322 + t369 * t415;
t1664 = t38 * qJD(1);
t39 = -t230 * t297 + t231 * t298 + t369 * t460;
t1663 = t39 * qJD(1);
t44 = t230 * t759 - t231 * t758 - t297 * t668 - t298 * t666;
t1662 = t44 * qJD(1);
t45 = t144 * t846 + t344 * t666 + (t253 - t1582) * t844;
t1661 = t45 * qJD(1);
t47 = -t321 * t668 - t322 * t666 + (t231 * t1153 - t230 * t1156) * t844;
t1660 = t47 * qJD(1);
t1593 = t144 * t1154;
t52 = -t1593 * t967 + t245 * t844 + t318 * t758 + t378 * t666;
t1659 = t52 * qJD(1);
t53 = -t180 * t846 + t344 * t668 + (-t273 - t1581) * t844;
t1658 = t53 * qJD(1);
t1590 = t180 * t1154;
t54 = t1590 * t967 - t260 * t844 + t318 * t759 + t378 * t668;
t1657 = t54 * qJD(1);
t66 = -t230 * t846 + t415 * t666 + (t321 - t1576) * t844;
t1656 = t66 * qJD(1);
t67 = -t231 * t846 + t415 * t668 + (-t322 - t1575) * t844;
t1655 = t67 * qJD(1);
t68 = t1587 * t967 + t297 * t844 + t369 * t758 + t460 * t666;
t1654 = t68 * qJD(1);
t1586 = t231 * t1154;
t69 = t1586 * t967 - t298 * t844 + t369 * t759 + t460 * t668;
t1653 = t69 * qJD(1);
t96 = -t414 * t490 + t415 * t491 + t546 * t615;
t1650 = t96 * qJD(1);
t1648 = t1605 / 0.2e1 + t565 / 0.2e1;
t1376 = -t1463 / 0.2e1;
t1646 = t967 * t1376 + t1520 / 0.2e1;
t104 = t230 * t844 - t369 * t666;
t1645 = qJD(1) * t104;
t105 = -t231 * t844 + t369 * t668;
t1644 = qJD(1) * t105;
t258 = t414 * t967 - t546 * t844;
t1643 = qJD(1) * t258;
t259 = -t415 * t967 + t546 * t846;
t1642 = qJD(1) * t259;
t1270 = t1706 * t666 + t1736 * t846;
t1525 = t917 * t1156;
t312 = t1525 / 0.2e1 + t1270;
t1641 = qJD(1) * t312;
t1269 = t1706 * t668 + t1734 * t846;
t1526 = t917 * t1153;
t1404 = -t1526 / 0.2e1;
t315 = t1404 + t1269;
t1640 = qJD(1) * t315;
t337 = -t666 * t782 - t668 * t781;
t1639 = qJD(1) * t337;
t1276 = t1733 * t666 + t1736 * t668;
t374 = t1276 - t1515;
t1638 = qJD(1) * t374;
t1239 = -t1602 / 0.2e1 + t1466 / 0.2e1;
t1271 = -t1609 / 0.2e1 + t844 * t1733;
t397 = t1239 + t1271;
t1637 = qJD(1) * t397;
t1240 = -t1479 / 0.2e1 - t1600 / 0.2e1;
t1272 = t1708 * t666 + t1736 * t844;
t398 = t1240 + t1272;
t1636 = qJD(1) * t398;
t403 = -t1153 * t1759 + t666 * t846;
t1635 = qJD(1) * t403;
t404 = -t1156 * t1759 + t668 * t846;
t1634 = qJD(1) * t404;
t418 = t666 * t917 + t781 * t844;
t1633 = qJD(1) * t418;
t419 = t668 * t917 - t782 * t844;
t1632 = qJD(1) * t419;
t1375 = t1463 / 0.2e1;
t1343 = t967 * t1375;
t432 = t650 + t1343 + (t1405 + t1739) * t1153;
t1631 = qJD(1) * t432;
t649 = -t1547 / 0.2e1;
t434 = t649 + t1343 + (t1533 / 0.2e1 + t1739) * t1153;
t1630 = qJD(1) * t434;
t452 = -t1263 * t614 - t813 * t967;
t1629 = qJD(1) * t452;
t453 = t1263 * t615 + t813 * t969;
t1628 = qJD(1) * t453;
t482 = -t844 * t918 + t846 * t917;
t1627 = qJD(1) * t482;
t497 = -t1157 * t1758 + t846 * t969;
t1626 = qJD(1) * t497;
t504 = t1015 * t844 - t917 * t967;
t1625 = qJD(1) * t504;
t505 = t1015 * t846 - t918 * t967;
t1624 = qJD(1) * t505;
t598 = t1015 * t969 - t1016 * t967;
t1623 = qJD(1) * t598;
t1622 = qJD(1) * t666;
t701 = t1015 * t1263 + t1393 * t967;
t1620 = qJD(1) * t701;
t702 = t1016 * t1263 + t1393 * t969;
t1619 = qJD(1) * t702;
t1618 = qJD(1) * t967;
t1617 = qJD(4) * t967;
t1616 = qJD(5) * t180;
t1615 = qJD(5) * t668;
t1614 = qJD(5) * t977;
t1613 = qJD(5) * t979;
t1612 = qJD(6) * t668;
t1611 = qJD(6) * t844;
t101 = -t490 * t846 - t491 * t844 + (t415 * t1154 - t1157 * t414) * t967;
t1610 = t101 * qJD(1);
t1608 = t1105 * t844;
t1607 = t1106 * t844;
t1606 = t1141 * t668;
t1556 = t546 * t1154;
t118 = -t414 * t969 + t615 * t844 + (t490 - t1556) * t967;
t1596 = t118 * qJD(1);
t1555 = t546 * t1157;
t119 = -t415 * t969 + t615 * t846 + (-t491 - t1555) * t967;
t1595 = t119 * qJD(1);
t125 = t1015 * t546 + t414 * t917 + t415 * t918;
t1594 = t125 * qJD(1);
t1177 = t1715 * t666 + t1717 * t668 + t1734 * t758 + t1735 * t759;
t1213 = (t1692 * t781 + t1696 * t782) * t1154;
t193 = t1213 - t1177;
t1589 = t193 * qJD(1);
t216 = (t1746 + t1272) * t1156 + (t1747 + t1271) * t1153;
t1588 = t216 * qJD(1);
t1212 = t1350 * t666 + t1735 * t967;
t1262 = t1708 * t758 + t1716 * t844;
t1536 = t781 * t1157;
t266 = t1536 / 0.2e1 + (t1404 + t1212) * t1154 + t1262;
t1585 = t266 * qJD(1);
t1211 = t1350 * t668 + t1733 * t967;
t1261 = t1708 * t759 + t1715 * t844;
t1402 = -t1525 / 0.2e1;
t1535 = t782 * t1157;
t269 = -t1535 / 0.2e1 + (t1402 + t1211) * t1154 + t1261;
t1584 = t269 * qJD(1);
t1392 = t1153 * t1469;
t794 = t844 * t1392;
t280 = t794 + (t649 + t1748) * t1156 + (t668 * t1690 + t758 / 0.2e1) * t1153;
t1583 = t280 * qJD(1);
t331 = -t666 * t759 - t668 * t758;
t1580 = t331 * qJD(1);
t336 = t1015 * t614 + t1016 * t615 + t1393 * t813;
t1579 = t336 * qJD(1);
t1208 = t1350 * t846 + t1706 * t967;
t1424 = t967 * t1709;
t1209 = t1351 * t844 + t1424;
t346 = (-t918 / 0.2e1 + t1209) * t1157 + (t1742 + t1208) * t1154;
t1578 = t346 * qJD(1);
t350 = (t657 + t1548) * t844;
t1577 = t350 * qJD(1);
t1549 = t666 * t1154;
t416 = t1549 * t967 - t758 * t844;
t1572 = t416 * qJD(1);
t1546 = t668 * t1154;
t417 = -t1546 * t967 + t759 * t844;
t1571 = t417 * qJD(1);
t1379 = t1474 / 0.2e1;
t1207 = t1145 * t1405 + t1379 * t666;
t1540 = t758 * t1156;
t428 = t1540 / 0.2e1 + t1207;
t1570 = t428 * qJD(1);
t1383 = t1147 * t1694;
t1206 = t1375 * t668 + t1383 * t844;
t1539 = t759 * t1153;
t430 = -t1539 / 0.2e1 + t1206;
t1569 = t430 * qJD(1);
t1345 = t844 * t1378;
t435 = t1345 - t944 / 0.2e1 + (t1750 - t1522 / 0.2e1) * t1157;
t1568 = t435 * qJD(1);
t1324 = t1750 + t1522 / 0.2e1;
t436 = t1345 + t944 / 0.2e1 + t1324 * t1157;
t1567 = t436 * qJD(1);
t1382 = t1482 / 0.2e1;
t1231 = t1382 * t844 + t1709 * t969;
t1503 = t1015 * t1157;
t450 = t1503 / 0.2e1 + t1231;
t1566 = t450 * qJD(1);
t1530 = t846 * t1154;
t1532 = t844 * t1157;
t1300 = t1530 + t1532;
t483 = t1300 * t967;
t1563 = t483 * qJD(1);
t496 = -t1154 * t1758 + t844 * t969;
t1562 = t496 * qJD(1);
t499 = t1208 + t1515;
t1561 = t499 * qJD(1);
t1338 = -t1389 / 0.2e1;
t1374 = -t1461 / 0.2e1;
t500 = t1374 + t1424 + (t1727 * t1745 + t1338) * t1150;
t1560 = t500 * qJD(1);
t1230 = t1482 * t1743 + t1706 * t969;
t1387 = t1015 * t1693;
t509 = t1387 + t1230;
t1559 = t509 * qJD(1);
t1553 = t553 * qJD(1);
t663 = -t969 ^ 2 + t1758;
t1550 = t663 * qJD(1);
t662 = t666 * qJD(5);
t1172 = t1681 * t969 / 0.2e1 + t1263 * t1382;
t1178 = (-t1480 / 0.2e1 - t1287 / 0.2e1) * t1151;
t695 = t1178 - t1172;
t1544 = t695 * qJD(1);
t1171 = -t1681 * t967 / 0.2e1 + t1263 * t1350;
t697 = (t1427 / 0.2e1 - t1330 / 0.2e1) * t1151 + t1171;
t1543 = t697 * qJD(1);
t1538 = t768 * qJD(1);
t1537 = t771 * qJD(1);
t1062 = (t1149 ^ 2 + t1152 ^ 2) * t1151 ^ 2;
t869 = qJ(2) * t1062;
t1528 = t869 * qJD(1);
t1527 = t917 * t1056;
t1328 = t1367 / 0.2e1;
t949 = t1331 / 0.2e1 + (t1428 / 0.2e1 + t1152 * t1328) * t1151;
t1524 = t949 * qJD(1);
t1523 = t964 * t1156;
t1148 = t1157 ^ 2;
t1128 = t1148 - t1146;
t1513 = qJD(3) * t1128;
t1127 = t1147 - t1145;
t1512 = qJD(4) * t1127;
t1511 = qJD(4) * t1153;
t1510 = qJD(4) * t1154;
t1509 = qJD(4) * t1156;
t1508 = qJD(4) * t1157;
t1507 = qJD(5) * t1106;
t1506 = qJD(5) * t1153;
t1143 = qJD(5) * t1156;
t1505 = qJD(6) * t1153;
t1504 = qJD(6) * t1156;
t1502 = t1023 * t1153;
t1501 = t1024 * t1156;
t900 = t1056 * t1153;
t901 = t1056 * t1156;
t1496 = t1060 * qJD(5);
t1495 = t1062 * qJD(1);
t1492 = t1105 * t1154;
t1491 = t1105 * t1157;
t1490 = t1106 * t1154;
t1489 = t1106 * t1157;
t1488 = t1141 * t1153;
t1487 = t1141 * t1156;
t1473 = t1154 * qJD(3);
t1472 = t1154 * qJD(5);
t1468 = t1154 * t1157;
t1100 = t1153 * t1133;
t1460 = qJD(4) * t1463 - t1100;
t1126 = t1147 + t1145;
t1065 = t1084 / 0.2e1;
t1457 = t1065 + t1137 / 0.2e1;
t1453 = pkin(5) * t1704;
t1452 = t1685 / 0.2e1;
t1451 = pkin(5) * t1690;
t1450 = -t1684 / 0.2e1;
t1449 = t1684 / 0.2e1;
t1447 = t666 * t1534;
t1445 = t846 * t1618;
t498 = t668 * t1534;
t1444 = t967 * t1534;
t1443 = t969 * t1618;
t1442 = t967 * t969 * qJD(3);
t1441 = qJ(6) * t1745;
t1438 = -t605 / 0.2e1 + t776 / 0.2e1;
t1437 = t978 / 0.2e1 + t1740;
t1431 = t1727 * t1015;
t1430 = t1727 * t1146;
t1429 = t1727 * t1148;
t1426 = t844 * t1463;
t1422 = -t1607 / 0.2e1;
t1421 = t1606 / 0.2e1;
t1420 = -t553 / 0.2e1;
t1419 = t553 / 0.2e1;
t1418 = -t768 / 0.2e1;
t1417 = t768 / 0.2e1;
t1416 = -t557 / 0.2e1;
t1415 = t557 / 0.2e1;
t1410 = -t1549 / 0.2e1;
t1408 = t1546 / 0.2e1;
t1407 = -t1540 / 0.2e1;
t1406 = t1539 / 0.2e1;
t1403 = t917 * t1693;
t1400 = t1153 * t1472;
t1399 = qJD(5) * t1474;
t1398 = qJD(5) * t1469;
t1397 = qJD(5) * t1463;
t1396 = qJD(6) * t1469;
t1132 = qJD(5) * t1475;
t1391 = qJD(6) * t1474;
t1390 = qJD(4) * t1468;
t1388 = qJD(6) * t1463;
t1386 = t1057 * t1693;
t1385 = t1087 * t1696;
t1384 = t1492 / 0.2e1;
t1380 = t1477 / 0.2e1;
t1377 = t1469 / 0.2e1;
t1366 = -qJD(4) - t1618;
t1359 = t1126 * t1056;
t1358 = pkin(11) * t1417;
t1357 = pkin(5) * t1377;
t1356 = qJD(3) * t1434;
t1355 = t1150 * t1433;
t1349 = -t1433 / 0.2e1;
t1344 = t318 * t1377;
t1342 = t1154 * t1131;
t1341 = t1146 * t1132;
t1340 = qJD(3) * t1392;
t1337 = -pkin(5) * t1392 + t1491 / 0.2e1;
t1333 = t1151 * t1372;
t1332 = t1151 * t1369;
t1327 = -t662 - t1447;
t1325 = t604 / 0.2e1 + t1598 / 0.2e1;
t1322 = -t1490 / 0.2e1 + t1741;
t1320 = 0.2e1 * t1340;
t1102 = t1156 * t1133;
t1318 = -qJD(4) * t1474 - t1102;
t1317 = t1100 - t1400;
t1316 = t1102 - t1398;
t831 = (t1057 * t1432 - t1155 * t1434 + t1352) * t1150;
t1244 = t1689 * t918 + t1403;
t1180 = t1244 * pkin(10) - t1015 * pkin(3) / 0.2e1;
t1249 = t1707 * t491 + t1708 * t490;
t85 = (t415 * t1347 + t414 * t1349 + t615 * t1727 / 0.2e1 - t546 * t1155 / 0.2e1) * t1150 + t1180 + t1249;
t1315 = -t85 * qJD(1) + t831 * qJD(2);
t1179 = t1437 * t666 + t1440 * t1477;
t18 = t1722 / 0.2e1 + t1179;
t508 = t1781 * t1477;
t1313 = -qJD(1) * t18 - qJD(3) * t508;
t19 = (t1721 / 0.2e1 + t1440) * t1156;
t493 = (t1451 + t1437) * t1156;
t1312 = qJD(1) * t19 + qJD(3) * t493;
t495 = -t846 ^ 2 + t1759;
t1303 = qJD(1) * t495 - qJD(3) * t1300;
t1302 = -t1153 * t321 + t1156 * t322;
t1301 = -t490 * t1154 + t1157 * t491;
t1299 = t1150 * t1349;
t1079 = t1126 * t1146;
t470 = (-t1545 - t1603) * t1154;
t1295 = qJD(1) * t470 - qJD(3) * t1079;
t1081 = t1128 * t1153;
t341 = -t844 * t1474 + (-t1531 / 0.2e1 - t666 / 0.2e1 + t1521 / 0.2e1) * t1154;
t1294 = t341 * qJD(1) + t1081 * qJD(3);
t1082 = t1148 * t1156 - t1464;
t342 = -t1426 + (-t1529 / 0.2e1 - t1324) * t1154;
t1293 = -t342 * qJD(1) - t1082 * qJD(3);
t1292 = -qJD(1) * t1300 + t1513;
t1291 = t1462 - t1534;
t480 = t657 - t1548;
t1290 = qJD(1) * t480 + qJD(4) * t1126;
t1289 = -t1509 + t1622;
t1286 = -t1036 * t1153 + t1037 * t1156;
t994 = t1105 * t1153 + t1106 * t1156;
t1285 = qJD(1) * t1333;
t1284 = qJD(1) * t1332;
t1283 = t1683 / 0.2e1 - t1687 / 0.2e1;
t1282 = pkin(3) * t1743 + t1556 / 0.2e1;
t842 = t1519 / 0.2e1 - t1215 / 0.2e1;
t790 = t842 * qJD(1) + t1473 / 0.2e1;
t1278 = t1730 * t666 + t1740 * t668;
t288 = -t604 / 0.2e1 + (-t1720 / 0.2e1 - t785 / 0.2e1) * t1157 + t1282;
t1274 = pkin(3) * t1473 - t288 * qJD(1);
t1188 = pkin(3) * t1744 + t1555 / 0.2e1 + pkin(10) * t1417;
t286 = t1188 + t1438;
t1273 = pkin(3) * t1462 - t286 * qJD(1);
t1265 = qJD(4) * t949 + t1443;
t1264 = qJD(3) * t435 - qJD(4) * t553 - t498;
t184 = qJD(3) * t436 - t1615 - t498;
t1254 = -t1606 / 0.2e1 - t1582 / 0.2e1;
t1250 = t1691 * t298 + t1696 * t297;
t1243 = t1518 / 0.2e1 + t1516 / 0.2e1;
t1242 = t1692 * t976 + t1695 * t977;
t1241 = (t1730 + t1384) * t1156;
t1238 = t1153 * t1473 + t1622;
t1237 = qJD(3) * t1469 + t1621;
t522 = -t557 * qJD(1) + t1156 * t1462;
t1236 = pkin(4) * t1751 + pkin(11) * t1416;
t1235 = -t1501 / 0.2e1 + t1502 / 0.2e1;
t512 = -t1472 / 0.2e1 + t1361;
t1233 = t1283 * t1153;
t1232 = t1283 * t1156;
t1168 = t144 * t1738 + t1703 * t318 + t1705 * t344 + t1729 * t180 + t1731 * t273 + t1741 * t253;
t1191 = t1698 * t378 + t1699 * t260 + t1702 * t245;
t1 = t1168 + t1191;
t1164 = (t979 * t1692 + t964 * t1695 + t1088 / 0.2e1) * t1056 + t1057 * t1704 + t970 * t1736 + t977 * t1728;
t1173 = t1023 * t1701 + t1024 * t1700 + t1141 * t1299;
t325 = t1164 + t1173;
t506 = t1087 * t1088 + t964 * t970 + t979 * t981;
t1227 = -t1 * qJD(1) + t325 * qJD(2) + t506 * qJD(3);
t1169 = (t1025 * t1696 + t1026 * t1692 + t1449) * t1056 + t976 * t1711 + t977 * t1710;
t377 = (pkin(4) * t1350 + pkin(10) * t1706) * t1154 + t1235 * pkin(11) + t1169;
t675 = pkin(10) ^ 2 * t1468 - t1025 * t1036 + t1026 * t1037;
t1163 = t230 * t1711 + t231 * t1710 - t321 * t1025 / 0.2e1 + t322 * t1712 + t369 * t1449 + t415 * t1452;
t1182 = t1250 * pkin(11) - t460 * pkin(4) / 0.2e1;
t9 = -t1163 + t1182;
t1226 = -t9 * qJD(1) + t377 * qJD(2) + t675 * qJD(3);
t380 = t1437 * t977 + (t1716 + t1339) * pkin(5);
t5 = t1440 * t979 + t1437 * t180 + (t1378 * t318 + t1423 + t1756) * pkin(5);
t511 = pkin(5) * t1395 - t1781 * t979;
t1225 = -qJD(1) * t5 - qJD(2) * t380 + qJD(3) * t511;
t1223 = t1141 * t1378 + t1385;
t448 = t1437 * t1106 + (t1737 + t1223) * pkin(5);
t7 = t1440 * t1106 + (t1755 + t1254) * pkin(5);
t862 = pkin(5) * t1488;
t1224 = -qJD(1) * t7 - qJD(3) * t448 + qJD(4) * t862;
t1186 = t1723 / 0.2e1 - t1718 / 0.2e1 - t1325;
t62 = (t1591 / 0.2e1 + t1592 / 0.2e1) * t1154 + t1186 + t1278;
t703 = (t1350 + t1242) * t1154;
t760 = (t979 * t1153 + t1523) * t1154;
t1221 = -qJD(1) * t62 - qJD(2) * t703 - qJD(3) * t760;
t463 = (qJD(4) * t846 - t1473 * t967) * t844;
t1046 = pkin(5) * t1475 - t1488;
t676 = t1385 + (qJ(6) * t1692 + t1700) * t1157 + (-t1487 / 0.2e1 + (0.1e1 - t1373) * pkin(5)) * t1154 + t1457;
t90 = t1422 + t1421 - t841 + t1752 + (-t1725 / 0.2e1 + t1441) * t1156 + (t1726 / 0.2e1 + t318 / 0.2e1 + t1754) * t1153;
t1220 = qJD(1) * t90 - qJD(3) * t676 - qJD(4) * t1046;
t1061 = t1145 * pkin(5) + t1487;
t1064 = -t1083 / 0.2e1;
t709 = t1064 + (t1452 + t1705) * t1156 + (qJ(6) * t1689 + t1141 * t1693) * t1153 + t1337;
t1192 = -t1608 / 0.2e1 + t666 * t1698 + t1412;
t92 = (t1441 - t1725) * t1153 + t1192 + t1647;
t1219 = -qJD(1) * t92 - qJD(3) * t709 + qJD(4) * t1061;
t353 = (t1545 - t1603) * t1154;
t365 = -t1548 + 0.2e1 * t1409;
t665 = t666 ^ 2;
t379 = t665 - t1760;
t109 = qJD(1) * t379 - qJD(3) * t353 + qJD(4) * t365;
t481 = t665 + t1760;
t1218 = qJD(1) * t481 - qJD(3) * t470 + qJD(4) * t480;
t1217 = qJD(3) * t1263;
t1216 = t1263 * qJD(1);
t1187 = pkin(4) * t666 / 0.2e1 + t1575 / 0.2e1 + pkin(11) * t1419;
t112 = t1187 - t1647;
t974 = t1083 / 0.2e1 - t1233;
t1205 = pkin(4) * t1509 - qJD(1) * t112 - qJD(3) * t974;
t114 = t1752 + (t369 / 0.2e1 + t1754) * t1153 + t1236;
t975 = -t1084 / 0.2e1 + t1232;
t1204 = pkin(4) * t1511 - qJD(1) * t114 - qJD(3) * t975;
t363 = qJD(5) * t842 + t1783;
t1203 = t1368 / 0.2e1 + t1157 * t1382;
t1199 = t1238 - t1509;
t1198 = t1237 + t1511;
t1189 = t1216 - qJD(3);
t1080 = t1127 * t1146;
t333 = qJD(1) * t353 + qJD(3) * t1080 + 0.2e1 * t1342;
t348 = -qJD(1) * t365 + t1320 - t1512;
t583 = t1450 + t1241 + (t1451 + t1322) * t1153;
t1158 = t1160 * t1693 + t1599 / 0.2e1 + pkin(5) * t1420;
t1174 = t1700 * t666 + t1701 * t668 - t1251;
t64 = t1158 - t1174;
t699 = t1203 - t1243;
t1183 = -qJD(1) * t64 - qJD(2) * t699 + qJD(3) * t583 + qJD(4) * t994;
t1139 = t1510 / 0.2e1;
t1109 = t1127 * qJD(5);
t1103 = t1150 * pkin(10) * t1430;
t1090 = -0.2e1 * qJD(5) * t1392;
t1028 = t1147 * t1390 - t1341;
t1027 = t1145 * t1390 + t1341;
t1000 = -t1082 * qJD(4) + t1154 * t1399;
t999 = t1081 * qJD(4) + t1154 * t1397;
t980 = -t1080 * qJD(5) - 0.2e1 * t1157 * t1342;
t941 = t949 * qJD(3);
t940 = t1137 + t1065 + t1232;
t939 = t1064 - t1233 + t1455;
t886 = qJD(1) * t1417 + t1139;
t885 = qJD(1) * t1418 + t1139;
t729 = t1185 - t1228;
t728 = t1184 + t1229;
t710 = t1141 * t1381 + t1494 / 0.2e1 + pkin(10) * t1377 + t1064 + qJ(6) * t1379 - t1337;
t704 = t1377 * t976 + t1381 * t977 + t1298;
t700 = t1203 + t1243;
t698 = -t1151 * t1427 / 0.2e1 + t1328 * t1484 + t1171;
t696 = t1178 + t1172;
t677 = t1489 / 0.2e1 + t1686 * t1697 + pkin(5) * t1383 + t1686 + qJ(6) * t1376 - t1223 + t1457;
t661 = qJD(3) * t1418 + t842 * qJD(4);
t595 = t1198 * pkin(5);
t587 = t1057 * t1377 + t1154 * t1297 + t1694 * t977;
t586 = t1057 * t1380 + t1154 * t1296 + t1694 * t976;
t582 = pkin(5) * t1379 + t1153 * t1322 + t1241 + t1449;
t551 = -t1157 * t1242 - t1235;
t521 = -t1153 * t1462 + t1553;
t515 = t1143 - t522;
t514 = -t1553 + (-qJD(5) + t1462) * t1153;
t510 = t1387 - t1230;
t502 = -t1208 + t1515;
t501 = t1150 * t1338 - t1209 + t1374;
t494 = t978 * t1692 - t1523 / 0.2e1 + pkin(5) * t1376;
t484 = t1300 * qJD(4);
t475 = t480 * qJD(6);
t472 = pkin(5) * t900;
t467 = t470 * qJD(6);
t451 = -t1503 / 0.2e1 + t1231;
t449 = pkin(5) * t1737 + t1141 * t1357 + t1153 * t1453 + t1700 * t1781;
t433 = t1380 * t844 + t1646 + t649;
t431 = t1646 + t1780;
t429 = t1406 + t1206;
t427 = t1407 + t1207;
t425 = -t1787 + (t1534 + qJD(5) / 0.2e1) * t768;
t424 = (-t781 * t976 + t782 * t977 + t1527) * qJD(2);
t423 = t1460 - t1631;
t422 = t1318 - t1568;
t421 = t1316 + t1568;
t420 = t1317 + t1631;
t413 = t419 * qJD(2);
t412 = t418 * qJD(2);
t400 = t1239 - t1271;
t399 = t1240 - t1272;
t396 = t400 * qJD(2);
t395 = t399 * qJD(2);
t394 = t398 * qJD(2);
t393 = t397 * qJD(2);
t390 = -t1133 * t1147 - t1496 - t1569;
t389 = -t1133 * t1145 + t1496 - t1570;
t383 = t1569 - t1496 + (t1147 * t1473 + t1131) * t1157;
t382 = t1570 + t1496 + (t1145 * t1473 - t1131) * t1157;
t381 = pkin(5) * t1716 + t1056 * t1357 + t1732 * t977 + t1734 * t964;
t376 = pkin(10) * t1386 + t1501 * t1757 - pkin(11) * t1502 / 0.2e1 + pkin(4) * t1299 + t1169;
t375 = -t1276 - t1515;
t373 = -t1787 + (-qJD(5) / 0.2e1 + t1291) * t768;
t360 = t365 * qJD(5);
t351 = t353 * qJD(5);
t345 = (t1056 * t1690 + t1386) * t967 + (t1347 * t844 + t1348 * t846) * t1150 + t1244;
t343 = t1377 * t846 + t1381 * t967 + t1408 + t1426;
t340 = t1410 + t967 * t1378 + (-t1532 - t1530 / 0.2e1) * t1153;
t335 = t337 * qJD(2);
t329 = -t1294 + t1399;
t328 = qJD(4) * t1477 + t1293;
t327 = -t1293 - t1397;
t326 = qJD(4) * t1469 + t1294;
t324 = t1164 - t1173;
t323 = qJD(3) * t532 + qJD(4) * t523;
t314 = t1526 / 0.2e1 + t1269;
t313 = t1402 + t1270;
t311 = qJD(3) * t727 + t1636;
t310 = qJD(3) * t726 + t1637;
t306 = t312 * qJD(2);
t305 = t315 * qJD(2);
t304 = t314 * qJD(2);
t303 = t313 * qJD(2);
t289 = t1450 * t967 + t1282 + t1325;
t287 = t1188 - t1438;
t279 = t1157 * t1248 + t1691 * t759 + t1696 * t758 + t794;
t277 = qJD(3) * t729 + qJD(4) * t900 - t1614 - t1637;
t276 = qJD(3) * t728 + qJD(4) * t901 + qJD(5) * t976 - t1636;
t272 = t1157 * t1320 + t1090 - t1583;
t268 = t1535 / 0.2e1 + t917 * t1377 + t1211 * t1154 + t1261;
t267 = -t1536 / 0.2e1 + t917 * t1380 + t1212 * t1154 + t1262;
t265 = t269 * qJD(2);
t264 = t266 * qJD(2);
t263 = t268 * qJD(2);
t262 = t267 * qJD(2);
t261 = t1583 + t1090 + (-0.2e1 * t1340 + t1512) * t1157;
t240 = -qJD(3) * t432 - qJD(4) * t557 + t1447;
t239 = (qJD(3) * t759 - t1509 * t844 - t662) * t668;
t238 = (qJD(3) * t758 - t1511 * t844 + t1615) * t666;
t215 = t1242 * t844 + (t1548 / 0.2e1 + t1409) * t1056 + t1246;
t214 = t216 * qJD(2);
t213 = t215 * qJD(2);
t212 = qJD(3) * t585 - t1641;
t211 = qJD(3) * t584 - t1640;
t196 = qJD(3) * t587 + qJD(4) * t1478 + qJD(5) * t901 + t1640;
t195 = qJD(3) * t586 - qJD(4) * t1465 + qJD(5) * t900 + t1641;
t194 = t1213 + t1177;
t192 = t194 * qJD(2);
t191 = t193 * qJD(2);
t186 = -qJD(3) * t430 + t1156 * t498 - t1788;
t185 = -qJD(3) * t428 + t1153 * t1447 + t1788;
t183 = qJD(3) * t431 + t1327;
t182 = qJD(4) * t430 - t1621 * t759 + t1779;
t181 = qJD(4) * t428 - t1622 * t758 - t1779;
t159 = -qJD(4) * t584 - qJD(5) * t727 - t1584;
t158 = -qJD(4) * t585 - qJD(5) * t726 - t1585;
t155 = qJD(3) * t429 - t1788 + (-t1511 - t1621) * t557;
t154 = qJD(3) * t427 - t1289 * t553 + t1788;
t146 = qJD(3) * t417 + qJD(4) * t404 - t662 * t844;
t145 = qJD(3) * t416 - qJD(4) * t403 - t1615 * t844;
t143 = t1584 + (t1024 * t1157 + t1146 * t1353) * qJD(3) + t587 * qJD(4) + t728 * qJD(5);
t142 = t1585 + (-t1023 * t1157 + t1146 * t1354) * qJD(3) + t586 * qJD(4) + t729 * qJD(5);
t138 = qJD(4) * t429 + t1237 * t759 + t1779;
t137 = qJD(4) * t427 + t1238 * t758 - t1779;
t130 = qJD(3) * t342 + qJD(5) * t557 - t1634;
t129 = -qJD(3) * t341 - qJD(5) * t553 + t1635;
t124 = -qJD(3) * t552 - t1588;
t123 = qJD(3) * t343 + t1511 * t846 + t1634;
t122 = qJD(3) * t340 + t1509 * t846 - t1635;
t121 = t551 * qJD(3) - qJD(4) * t1359 + t1588;
t120 = qJD(4) * t552 + t1589;
t117 = -qJD(4) * t342 + qJD(5) * t432 - t1571;
t116 = qJD(4) * t341 + qJD(5) * t435 - t1572;
t115 = t1411 + t1236 + t1648;
t113 = t1187 + t1647;
t111 = -t1589 + t551 * qJD(4) + (-t1023 * t1156 - t1024 * t1153) * t1473;
t108 = qJD(3) * t331 + qJD(4) * t350 + qJD(5) * t379;
t107 = t1571 + (-t1157 * t759 - t1464 * t967) * qJD(3) + t343 * qJD(4) + t431 * qJD(5);
t106 = t1572 + (t1157 * t758 + t1486 * t967) * qJD(3) + t340 * qJD(4) + t436 * qJD(5);
t103 = -qJD(3) * t280 - t1577 + t360;
t100 = qJD(4) * t280 - t1580 - t351;
t94 = t279 * qJD(3) - t1512 * t844 + t1577 + t360;
t93 = pkin(5) * t657 + qJ(6) * t1420 - t1192 + t1647;
t91 = t1580 + t279 * qJD(4) - t351 + (-t1539 - t1540) * t1473;
t89 = pkin(5) * t477 + qJ(6) * t1415 - t1254 + t1422 + t1648 + t841;
t86 = t1157 * t1350 * t415 + t1298 * t414 + t1351 * t615 + t1382 * t546 + t1180 - t1249;
t81 = qJD(3) * t269 + qJD(4) * t315 - qJD(5) * t398 - t1632;
t80 = qJD(3) * t268 + qJD(4) * t314 + qJD(5) * t399 + t1632;
t79 = qJD(3) * t266 + qJD(4) * t312 - qJD(5) * t397 - t1633;
t78 = qJD(3) * t267 + qJD(4) * t313 + qJD(5) * t400 + t1633;
t77 = pkin(10) * t1408 + t1377 * t369 - t1259 + t1326;
t76 = pkin(10) * t1410 + t1381 * t369 + t1260 + t1439;
t65 = t1158 + t1174;
t63 = t1378 * t144 + t1381 * t180 + t1186 - t1278;
t60 = t1154 * t1459 + t1381 * t318 - t1197 + t1275;
t58 = t1357 * t666 + t1380 * t1725 - t1196 + t1222 + t1344 - t1458;
t56 = -qJD(3) * t193 + qJD(4) * t216 - t1639;
t55 = qJD(3) * t194 + qJD(4) * t215 + t1639;
t51 = t322 * t1689 - t1586 / 0.2e1 + t668 * t1449 + pkin(10) * t1345 + t415 * t1377 + t369 * t1375 + t1156 * t1358 - t1258 + t1280;
t50 = pkin(10) * t1780 + t1153 * t1358 + t369 * t1379 + t415 * t1380 + t321 * t1690 - t1193 + t1281;
t36 = -t1590 / 0.2e1 + t1087 * t1416 + t344 * t1377 + t318 * t1375 + t1106 * t1417 - t1175 + t1252;
t32 = t1593 / 0.2e1 + t844 * t1385 + t344 * t1380 + t318 * t1379 + t967 * t1384 - t1176 + t1253;
t30 = -t231 * t901 / 0.2e1 - t230 * t900 / 0.2e1 + t415 * t1708 + t1181 - t1201;
t27 = pkin(10) * t1403 + t1298 * t369 + t1170 - t1247;
t25 = -t1334 + (t1425 + t1747) * pkin(5);
t20 = t179 * t1692 - t1592 / 0.2e1 + pkin(5) * t1415;
t17 = -t1722 / 0.2e1 + t1179;
t16 = t1026 * t1419 + t322 * t1381 + t1153 * t1414 + t1025 * t1416 + t321 * t1378 + t230 * t1375 + (t1407 + t1406) * pkin(11) + t1250 - t1257;
t13 = t1165 - t1190;
t11 = t1161 - t1200;
t10 = t1163 + t1182;
t8 = t1649 * t1700 + (t1413 + t1421 + t1755) * pkin(5);
t6 = t668 * t1453 + (t1732 + t1741) * t180 + t1649 * t1731 + (t1344 + t1756) * pkin(5);
t3 = t1153 * t1194 + t1156 * t1195 + t1691 * t260 + t1696 * t245 - t1255 + t1277;
t2 = -t1168 + t1191;
t37 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1333, -qJD(2) * t1332, t1062 * qJD(2), t869 * qJD(2), -t1442, t663 * qJD(3), t967 * t1217, t1442, t969 * t1217, 0, qJD(2) * t701 + qJD(3) * t453, qJD(2) * t702 + qJD(3) * t452, qJD(2) * t598, qJD(2) * t336 (-qJD(4) * t844 - t1462 * t967) * t846, qJD(3) * t483 + qJD(4) * t495, qJD(3) * t497 - t1617 * t844, t463, -qJD(3) * t496 - t1617 * t846, t1442, qJD(2) * t504 + qJD(3) * t118 + qJD(4) * t259, qJD(2) * t505 + qJD(3) * t119 + qJD(4) * t258, qJD(2) * t482 + qJD(3) * t101, qJD(2) * t125 + qJD(3) * t96, t239, t108, t146, t238, t145, t463, qJD(3) * t68 + qJD(4) * t66 + qJD(5) * t105 + t412, qJD(3) * t69 + qJD(4) * t67 + qJD(5) * t104 + t413, qJD(3) * t44 + qJD(4) * t47 + t335, qJD(2) * t72 + qJD(3) * t39 + qJD(4) * t38, t239, t108, t146, t238, t145, t463, qJD(3) * t52 + qJD(4) * t45 + qJD(5) * t83 - t1611 * t668 + t412, qJD(3) * t54 + qJD(4) * t53 + qJD(5) * t82 + t1611 * t666 + t413, qJD(3) * t33 + qJD(4) * t34 + qJD(5) * t24 + qJD(6) * t481 + t335, qJD(2) * t61 + qJD(3) * t22 + qJD(4) * t23 + qJD(5) * t21 + qJD(6) * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1285, -t1284, t1495, t1528, 0, 0, 0, 0, 0, 0, qJD(3) * t696 + t1620, qJD(3) * t698 + t1619, t1623, t1579 + (t1016 * t1155 + t1149 * t1370 - t1431) * qJD(2) * t1150, 0, 0, 0, 0, 0, 0, qJD(3) * t451 + qJD(4) * t502 + t1625, qJD(3) * t510 + qJD(4) * t501 + t1624, qJD(3) * t345 + t1627, t1594 + (t918 * t1057 - t1150 * t1431 + t1527) * qJD(2) + t86 * qJD(3), 0, 0, 0, 0, 0, 0, t78, t80, t55, qJD(3) * t27 + qJD(4) * t30 + t1676 + t424, 0, 0, 0, 0, 0, 0, t78, t80, t55, qJD(3) * t11 + qJD(4) * t13 + qJD(5) * t25 + qJD(6) * t375 + t1677 + t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1443, t1550, t1189 * t967, t1443, t1189 * t969, 0, qJD(2) * t696 - qJD(3) * t615 + t1628, qJD(2) * t698 + qJD(3) * t614 + t1629, 0, 0, t1787 + (-qJD(1) * t846 - t1473) * t771, -t1513 * t967 + t1563 - t484, t1473 * t969 + t1626, t1291 * t768 - t1787, t1462 * t969 - t1562, t1265, t1596 + t451 * qJD(2) + (t1154 * t1336 - t1157 * t615) * qJD(3) + t289 * qJD(4), t1595 + t510 * qJD(2) + (t615 * t1154 + t1157 * t1336) * qJD(3) + t287 * qJD(4), t345 * qJD(2) + qJD(3) * t1301 + t1610, t1650 + t86 * qJD(2) + (-t615 * pkin(3) + pkin(10) * t1301) * qJD(3), t138, t91, t107, t137, t106, t373, -t297 * t1462 + t1654 + t50 * qJD(4) + t77 * qJD(5) + t262 + (pkin(10) * t758 + t1025 * t967 + t1565) * t1473, t298 * t1462 + t1653 + t51 * qJD(4) + t76 * qJD(5) + t263 + (pkin(10) * t759 + t1026 * t967 + t1564) * t1473, t1662 + t192 + (t1025 * t759 - t1026 * t758 + (-t1153 * t298 - t1156 * t297) * t1154) * qJD(3) + t16 * qJD(4), t1663 + t27 * qJD(2) + (-t1025 * t297 + t1026 * t298 + t1685 * t460) * qJD(3) + t10 * qJD(4), t138, t91, t107, t137, t106, t373, t1659 + t262 + (t1087 * t758 - t1157 * t245 + (-t964 * t967 + t1574) * t1154) * qJD(3) + t32 * qJD(4) + t58 * qJD(5) + t435 * qJD(6), t1657 + t263 + (t1087 * t759 + t1157 * t260 + (t967 * t979 + t1573) * t1154) * qJD(3) + t36 * qJD(4) + t60 * qJD(5) + t433 * qJD(6), t1666 + t192 + (-t758 * t979 - t759 * t964 + (-t1153 * t260 - t1156 * t245) * t1154) * qJD(3) + t3 * qJD(4) + t17 * qJD(5) - t467, t1670 + t11 * qJD(2) + (t1087 * t378 + t245 * t964 + t260 * t979) * qJD(3) + t2 * qJD(4) + t6 * qJD(5) + t63 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1783, t1303, t1366 * t844, t1783, t1366 * t846, t941, qJD(2) * t502 + qJD(3) * t289 - qJD(4) * t415 + t1642, qJD(2) * t501 + qJD(3) * t287 + qJD(4) * t414 + t1643, 0, 0, t155, t94, t123, t154, t122, t363, t1656 + t303 + t50 * qJD(3) + (t1153 * t1335 - t415 * t1156) * qJD(4) + t115 * qJD(5), t1655 + t304 + t51 * qJD(3) + (t415 * t1153 + t1156 * t1335) * qJD(4) + t113 * qJD(5), t16 * qJD(3) + qJD(4) * t1302 + t1660 + t213, t1664 + t30 * qJD(2) + t10 * qJD(3) + (-pkin(4) * t415 + pkin(11) * t1302) * qJD(4), t155, t94, t123, t154, t122, t363, t1661 + t303 + t32 * qJD(3) + (-t1105 * t846 - t1488 * t844 - t1601) * qJD(4) + t89 * qJD(5) - t553 * qJD(6), t1658 + t304 + t36 * qJD(3) + (-t1106 * t846 + t1153 * t344 - t1487 * t844) * qJD(4) + t93 * qJD(5) - t844 * t1504, t1665 + t213 + t3 * qJD(3) + ((t273 - t1608) * t1156 + (-t253 + t1607) * t1153) * qJD(4) + t20 * qJD(5) + t475, t1669 + t13 * qJD(2) + t2 * qJD(3) + (-t1105 * t253 + t1106 * t273 + t1141 * t344) * qJD(4) + t8 * qJD(5) + t65 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1784, t109, t183, t1784, t184, t661, qJD(3) * t77 + qJD(4) * t115 - qJD(5) * t231 + t1644 + t396, qJD(3) * t76 + qJD(4) * t113 + qJD(5) * t230 + t1645 + t395, 0, 0, -t1784, t109, t183, t1784, t184, t661, qJD(3) * t58 + qJD(4) * t89 - t1616 + t1673 + t396, qJD(3) * t60 + qJD(4) * t93 + qJD(5) * t179 + t1674 + t395, pkin(5) * t662 + qJD(3) * t17 + qJD(4) * t20 + t1679, -pkin(5) * t1616 + qJD(2) * t25 + qJD(3) * t6 + qJD(4) * t8 + t1680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1264, qJD(3) * t433 + t1289 * t844, t1218, qJD(2) * t375 + qJD(3) * t63 + qJD(4) * t65 + t1675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1285, t1284, -t1495, -t1528, 0, 0, 0, 0, 0, 0, -qJD(3) * t695 - t1620, qJD(3) * t697 - t1619, -t1623, -t1579, 0, 0, 0, 0, 0, 0, qJD(3) * t450 - qJD(4) * t499 - t1625, -qJD(3) * t509 - qJD(4) * t500 - t1624, qJD(3) * t346 - t1627, -qJD(3) * t85 - t1594, 0, 0, 0, 0, 0, 0, t79, t81, t56, qJD(3) * t28 - qJD(4) * t29 - t1676, 0, 0, 0, 0, 0, 0, t79, t81, t56, qJD(3) * t12 + qJD(4) * t14 + qJD(5) * t26 - qJD(6) * t374 - t1677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t831, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1482 - t1544, -t1356 + t1543, 0, 0, 0, 0, 0, 0, 0, 0, t1566 + (-qJD(4) * t1433 - t1155 * t1462) * t1150, -t1559 + (qJD(3) * t1470 - qJD(4) * t1432) * t1150, t1578 + (t1430 + t1429) * t1150 * qJD(3) (t1103 + (-pkin(3) * t1155 + pkin(10) * t1429) * t1150) * qJD(3) + t1315, 0, 0, 0, 0, 0, 0, t142, t143, t111 (-t1023 * t1025 + t1024 * t1026 + t1103) * qJD(3) + t376 * qJD(4) + t1766, 0, 0, 0, 0, 0, 0, t142, t143, t111 (t1023 * t964 + t1024 * t979 + t1087 * t1355) * qJD(3) + t324 * qJD(4) + t381 * qJD(5) + t704 * qJD(6) + t1765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1355 - t1057 * qJD(4) - t1561, t1056 * qJD(4) - t1157 * t1356 - t1560, 0, 0, 0, 0, 0, 0, 0, 0, t195, t196, t121, t376 * qJD(3) + (-pkin(4) * t1057 - pkin(11) * t1359) * qJD(4) + t1764, 0, 0, 0, 0, 0, 0, t195, t196, t121, t324 * qJD(3) + (-t1056 * t994 + t1057 * t1141) * qJD(4) + t472 * qJD(5) + t700 * qJD(6) + t1763; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t276, 0, 0, 0, 0, 0, 0, 0, 0, t277, t276, 0, -pkin(5) * t1614 + qJD(3) * t381 + qJD(4) * t472 + t1678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t704 + qJD(4) * t700 - t1638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, -t1550, -t967 * t1216, -t1443, -t969 * t1216, 0, qJD(2) * t695 - t1628, -qJD(2) * t697 - t1629, 0, 0, t1157 * t1445 + t1787, -t484 - t1563, qJD(4) * t771 - t1626, t1154 * t1444 - t1787, -qJD(4) * t768 + t1562, -t1265, -qJD(2) * t450 + qJD(4) * t288 - t1596, qJD(2) * t509 + qJD(4) * t286 - t1595, -qJD(2) * t346 - t1610, qJD(2) * t85 - t1650, t182, t100, t117, t181, t116, t425, -qJD(4) * t48 - qJD(5) * t74 - t1654 - t264, -qJD(4) * t49 - qJD(5) * t75 - t1653 - t265, -qJD(4) * t15 - t1662 + t191, -qJD(2) * t28 - qJD(4) * t9 - t1663, t182, t100, t117, t181, t116, t425, -qJD(4) * t31 - qJD(5) * t57 + qJD(6) * t436 - t1659 - t264, -qJD(4) * t35 - qJD(5) * t59 + qJD(6) * t434 - t1657 - t265, qJD(4) * t4 + qJD(5) * t18 - t1666 + t191 - t467, -qJD(2) * t12 - qJD(4) * t1 - qJD(5) * t5 - qJD(6) * t62 - t1670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1544, -t1543, 0, 0, 0, 0, 0, 0, 0, 0, -t1566, t1559, -t1578, -t1315, 0, 0, 0, 0, 0, 0, t158, t159, t120, qJD(4) * t377 - t1766, 0, 0, 0, 0, 0, 0, t158, t159, t120, qJD(4) * t325 - qJD(5) * t380 - qJD(6) * t703 - t1765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1390, t1128 * qJD(4), 0, -t1390, 0, 0, -pkin(3) * t1510, -pkin(3) * t1508, 0, 0, t1028, t980, t1000, t1027, t999, -t1390, -qJD(4) * t839 - qJD(5) * t966, qJD(4) * t840 + qJD(5) * t965, -qJD(4) * t613, qJD(4) * t675, t1028, t980, t1000, t1027, t999, -t1390, -t606 * qJD(4) - t832 * qJD(5) + t1154 * t1388, t658 * qJD(4) + t843 * qJD(5) - t1154 * t1391, -qJD(4) * t507 + qJD(5) * t508 + qJD(6) * t1079, qJD(4) * t506 + qJD(5) * t511 - qJD(6) * t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1292, t1508 + t1537, -t1361, -t1510 - t1538, -t1524, -pkin(10) * t1508 - t1274, pkin(10) * t1510 - t1273, 0, 0, t383, t261, t328, t382, t326, -t512 (t1153 * t1323 - t1454) * qJD(4) + t940 * qJD(5) + t1773 (t1156 * t1323 + t1456) * qJD(4) + t939 * qJD(5) + t1774, qJD(4) * t1286 - t1770 (-pkin(4) * t1684 + pkin(11) * t1286) * qJD(4) + t1226, t383, t261, t328, t382, t326, -t512 (t1141 * t1474 - t1492 - t1493) * qJD(4) + t677 * qJD(5) + t1391 + t1771 (t1088 * t1153 + t1141 * t1463 - t1490) * qJD(4) + t710 * qJD(5) + t1388 + t1772 ((t981 + t1491) * t1156 + (-t970 - t1489) * t1153) * qJD(4) + t494 * qJD(5) + t1769 (t1088 * t1141 - t1105 * t970 + t1106 * t981) * qJD(4) + t449 * qJD(5) + t582 * qJD(6) + t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1785, -t333, t420, t1785, t421, t886, qJD(4) * t940 - qJD(5) * t1026 - t1776, qJD(4) * t939 + qJD(5) * t1025 - t1777, 0, 0, -t1785, -t333, t420, t1785, t421, t886, qJD(4) * t677 - t1613 - t1767, qJD(4) * t710 + qJD(5) * t978 + t1775, pkin(5) * t1400 + qJD(4) * t494 - t1313, -pkin(5) * t1613 + qJD(4) * t449 + t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1318 + t1567, t1460 + t1630, -t1295, qJD(4) * t582 + t1221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1783, -t1303, -qJD(3) * t771 + t1444, -t1783, qJD(3) * t768 + t1445, t941, qJD(2) * t499 - qJD(3) * t288 - t1642, qJD(2) * t500 - qJD(3) * t286 - t1643, 0, 0, t186, t103, t130, t185, t129, -t363, qJD(3) * t48 + qJD(5) * t114 - t1656 - t306, qJD(3) * t49 + qJD(5) * t112 - t1655 - t305, qJD(3) * t15 - t1660 - t214, qJD(2) * t29 + qJD(3) * t9 - t1664, t186, t103, t130, t185, t129, -t363, qJD(3) * t31 + qJD(5) * t90 - t1661 - t306, qJD(3) * t35 - qJD(5) * t92 - t1658 - t305, -qJD(3) * t4 - qJD(5) * t19 - t1665 - t214 + t475, -qJD(2) * t14 + qJD(3) * t1 - qJD(5) * t7 - qJD(6) * t64 - t1669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1561, t1560, 0, 0, 0, 0, 0, 0, 0, 0, t212, t211, t124, -qJD(3) * t377 - t1764, 0, 0, 0, 0, 0, 0, t212, t211, t124, -qJD(3) * t325 - qJD(6) * t699 - t1763; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1361, -t1292, -t1537, t1361, t1538, t1524, t1274, t1273, 0, 0, t390, t272, t327, t389, t329, t512, qJD(5) * t975 - t1773, qJD(5) * t974 - t1774, t1770, -t1226, t390, t272, t327, t389, t329, t512, -qJD(5) * t676 - t1771, -qJD(5) * t709 - t1772, -qJD(5) * t493 - t1769, -qJD(5) * t448 + qJD(6) * t583 - t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, t1109, 0, -t1132, 0, 0, -pkin(4) * t1506, -pkin(4) * t1143, 0, 0, t1132, t1109, 0, -t1132, 0, 0, -t1046 * qJD(5), t1061 * qJD(5), qJD(6) * t1126, qJD(5) * t862 + qJD(6) * t994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1782, -t348, t515, t1782, t514, -t790, -pkin(11) * t1143 - t1204, pkin(11) * t1506 - t1205, 0, 0, -t1782, -t348, t515, t1782, t514, -t790, t1220 - t1507, qJD(5) * t1105 + t1219, -pkin(5) * t1143 - t1312, -pkin(5) * t1507 + t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1290, t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1784, -t109, t240, -t1784, -t1264, t661, qJD(3) * t74 - qJD(4) * t114 - t1644 + t393, qJD(3) * t75 - qJD(4) * t112 - t1645 + t394, 0, 0, t1784, -t109, t240, -t1784, -t1264, t661, qJD(3) * t57 - qJD(4) * t90 - t1612 - t1673 + t393, qJD(3) * t59 + qJD(4) * t92 + qJD(6) * t666 - t1674 + t394, -qJD(3) * t18 + qJD(4) * t19 - t1679, -pkin(5) * t1612 - qJD(2) * t26 + qJD(3) * t5 + qJD(4) * t7 - t1680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310, t311, 0, 0, 0, 0, 0, 0, 0, 0, t310, t311, 0, qJD(3) * t380 - t1678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1785, t333, t423, -t1785, t422, t885, -qJD(4) * t975 + t1776, -qJD(4) * t974 + t1777, 0, 0, t1785, t333, t423, -t1785, t422, t885, qJD(4) * t676 - t1396 + t1767, qJD(4) * t709 + qJD(6) * t1477 - t1775, qJD(4) * t493 + t1313, -pkin(5) * t1396 + qJD(4) * t448 - t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1782, t348, t522, -t1782, t521, t790, t1204, t1205, 0, 0, t1782, t348, t522, -t1782, t521, t790, -t1220 - t1505, -t1219 - t1504, t1312, -pkin(5) * t1505 - t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1198, t1199, 0, -t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, -qJD(3) * t434 + t1327, -t1218, pkin(5) * t1615 + qJD(2) * t374 + qJD(3) * t62 + qJD(4) * t64 - t1675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t703 + qJD(4) * t699 + t1638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1316 - t1567, t1317 - t1630, t1295, pkin(5) * t1398 - qJD(4) * t583 - t1221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1506, t1143, -t1290, pkin(5) * t1506 - t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1198, -t1199, 0, t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t37;
