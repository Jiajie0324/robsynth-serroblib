% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPPRR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 10:44
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPPRR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR5_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR5_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR5_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 10:44:07
% EndTime: 2019-05-06 10:44:13
% DurationCPUTime: 6.47s
% Computational Cost: add. (20535->345), mult. (48111->418), div. (0->0), fcn. (33757->10), ass. (0->245)
t2163 = sin(qJ(1));
t2162 = sin(qJ(2));
t2166 = cos(qJ(2));
t2158 = sin(pkin(6));
t2155 = t2158 ^ 2;
t2168 = qJD(1) ^ 2;
t2228 = t2155 * t2168;
t2139 = t2166 * t2162 * t2228;
t2159 = cos(pkin(6));
t2200 = qJDD(1) * t2159 + qJDD(2);
t2121 = t2139 + t2200;
t2157 = t2166 ^ 2;
t2208 = t2157 * t2228;
t2154 = -qJD(1) * t2159 - qJD(2);
t2245 = t2154 ^ 2;
t2254 = -t2208 - t2245;
t2260 = -t2121 * t2162 + t2166 * t2254;
t2273 = t2163 * t2260;
t2122 = -t2139 + t2200;
t2156 = t2162 ^ 2;
t2253 = t2156 * t2228 + t2245;
t2261 = t2166 * t2122 - t2162 * t2253;
t2272 = t2163 * t2261;
t2167 = cos(qJ(1));
t2271 = t2167 * t2260;
t2270 = t2167 * t2261;
t2225 = t2158 * t2166;
t2226 = t2158 * t2162;
t2269 = t2121 * t2225 + t2226 * t2254;
t2222 = t2159 * t2166;
t2223 = t2159 * t2162;
t2268 = t2121 * t2222 + t2223 * t2254;
t2216 = qJDD(1) * t2162;
t2235 = qJD(1) * t2166;
t2090 = (t2216 + (qJD(2) - t2154) * t2235) * t2158;
t2258 = t2090 * t2158 + t2122 * t2223 + t2222 * t2253;
t2267 = t2167 * t2258 + t2272;
t2266 = -t2163 * t2258 + t2270;
t2211 = qJD(1) * t2226;
t2148 = qJD(2) * t2211;
t2212 = qJD(1) * t2154 * t2162;
t2215 = qJDD(1) * t2166;
t2091 = -t2148 + (t2212 + t2215) * t2158;
t2259 = t2091 * t2158 + t2268;
t2265 = t2167 * t2259 + t2273;
t2264 = -t2163 * t2259 + t2271;
t2257 = -t2159 * t2091 + t2269;
t2256 = -t2159 * t2090 + t2122 * t2226 + t2225 * t2253;
t2123 = (qJD(2) * t2235 + t2216) * t2158;
t2161 = sin(qJ(5));
t2165 = cos(qJ(5));
t2109 = -t2165 * t2154 + t2161 * t2211;
t2107 = qJD(6) + t2109;
t2255 = qJD(6) + t2107;
t2210 = qJD(1) * t2225;
t2130 = t2154 * t2210;
t2089 = -t2130 + t2123;
t2183 = t2168 * (pkin(4) * t2166 - pkin(9) * t2162);
t2252 = -t2155 * t2162 * t2183 - t2200 * pkin(4) + t2245 * pkin(9);
t2111 = t2154 * t2161 + t2165 * t2211;
t2141 = qJD(5) + t2210;
t2160 = sin(qJ(6));
t2164 = cos(qJ(6));
t2081 = t2111 * t2160 - t2164 * t2141;
t2251 = t2081 ^ 2;
t2083 = t2111 * t2164 + t2141 * t2160;
t2250 = t2083 ^ 2;
t2249 = t2107 ^ 2;
t2248 = t2109 ^ 2;
t2247 = t2111 ^ 2;
t2246 = t2141 ^ 2;
t2244 = -2 * qJD(3);
t2243 = -2 * qJD(4);
t2242 = pkin(2) + pkin(4);
t2241 = qJ(3) - pkin(9);
t2240 = pkin(2) * t2166;
t2239 = pkin(8) * t2158;
t2237 = t2159 * g(3);
t2236 = t2166 * g(3);
t2234 = t2081 * t2083;
t2232 = t2109 * t2111;
t2120 = (-qJ(3) * t2162 - t2240) * t2158 * qJD(1);
t2231 = t2120 * t2162;
t2229 = t2154 * t2166;
t2127 = (t2156 + t2157) * t2228;
t2227 = t2158 * t2127;
t2224 = t2159 * t2127;
t2221 = qJD(5) - t2141;
t2220 = qJD(6) - t2107;
t2118 = pkin(3) * t2154 - qJ(4) * t2211;
t2147 = -g(1) * t2167 - g(2) * t2163;
t2119 = -pkin(1) * t2168 + qJDD(1) * t2239 + t2147;
t2146 = t2163 * g(1) - t2167 * g(2);
t2176 = t2168 * t2239 + t2146;
t2174 = qJDD(1) * pkin(1) + t2176;
t2171 = t2159 * t2174;
t2219 = t2166 * t2119 + t2162 * t2171;
t2177 = -pkin(2) * t2245 + t2200 * qJ(3) + t2120 * t2210 + t2154 * t2244 + t2219;
t2199 = t2158 * t2215 - t2148;
t2170 = -pkin(3) * t2208 - t2199 * qJ(4) - t2154 * t2118 + t2210 * t2243 + t2177;
t2013 = -t2200 * pkin(9) - t2245 * pkin(4) + (-t2162 * g(3) - t2183 * t2225) * t2158 + t2170;
t2131 = t2154 * t2211;
t2128 = pkin(2) * t2131;
t2180 = t2199 * pkin(3) - qJ(4) * t2208 + qJDD(4) + t2128 + t2237;
t2207 = ((2 * qJD(3)) + t2118) * t2162;
t2169 = -t2242 * t2148 + t2241 * t2123 + ((t2166 * t2242 + pkin(1)) * qJDD(1) + (t2207 + (pkin(4) * t2162 - t2166 * t2241) * t2154) * qJD(1) + t2176) * t2158 + t2180;
t1987 = t2165 * t2013 + t2161 * t2169;
t2214 = g(3) * t2226;
t2213 = qJ(4) * t2229;
t1986 = -t2161 * t2013 + t2165 * t2169;
t2175 = -t2165 * t2123 + t2161 * t2200;
t2069 = -t2109 * qJD(5) - t2175;
t2182 = qJDD(5) + t2199;
t2206 = -t2160 * t2069 + t2164 * t2182;
t2205 = t2141 * t2109 - t2069;
t2202 = t2162 * t2119 - t2166 * t2171;
t2201 = t2161 * t2123 + t2165 * t2200;
t2076 = pkin(5) * t2109 - pkin(10) * t2111;
t1981 = -pkin(5) * t2246 + pkin(10) * t2182 - t2109 * t2076 + t1987;
t2052 = (qJD(5) + t2141) * t2111 + t2201;
t2179 = -t2200 * pkin(2) - t2245 * qJ(3) + qJDD(3) + t2202;
t2173 = -pkin(3) * t2121 - t2123 * qJ(4) + t2179;
t1994 = 0.2e1 * qJD(4) * t2211 + t2205 * pkin(10) + t2052 * pkin(5) + (-t2236 + (t2213 - t2231) * qJD(1)) * t2158 - t2173 - t2252;
t1973 = -t1981 * t2160 + t1994 * t2164;
t1974 = t1981 * t2164 + t1994 * t2160;
t1965 = -t1973 * t2160 + t1974 * t2164;
t1980 = -pkin(5) * t2182 - pkin(10) * t2246 + t2111 * t2076 - t1986;
t1961 = t1965 * t2165 + t1980 * t2161;
t1964 = t1973 * t2164 + t1974 * t2160;
t2197 = t1961 * t2162 + t1964 * t2166;
t1976 = -t1986 * t2161 + t1987 * t2165;
t2026 = (t2236 + (-t2213 + (t2243 + t2120) * t2162) * qJD(1)) * t2158 + t2173;
t2016 = t2026 + t2252;
t2196 = t1976 * t2162 - t2016 * t2166;
t2018 = -t2083 * t2220 + t2206;
t2172 = -t2164 * t2069 - t2160 * t2182;
t2020 = t2081 * t2220 + t2172;
t1996 = t2018 * t2164 - t2020 * t2160;
t2034 = -t2250 - t2251;
t1985 = t1996 * t2165 + t2034 * t2161;
t1995 = t2018 * t2160 + t2020 * t2164;
t2195 = t1985 * t2162 + t1995 * t2166;
t2178 = -qJD(5) * t2111 - qJDD(6) - t2201;
t2030 = -t2178 - t2234;
t2040 = -t2249 - t2251;
t2006 = -t2030 * t2160 + t2040 * t2164;
t2017 = t2083 * t2255 - t2206;
t1991 = t2006 * t2165 + t2017 * t2161;
t2005 = t2030 * t2164 + t2040 * t2160;
t2194 = t1991 * t2162 + t2005 * t2166;
t2031 = t2178 - t2234;
t2056 = -t2249 - t2250;
t2010 = t2031 * t2164 - t2056 * t2160;
t2019 = -t2081 * t2255 - t2172;
t1993 = t2010 * t2165 + t2019 * t2161;
t2009 = t2031 * t2160 + t2056 * t2164;
t2193 = t1993 * t2162 + t2009 * t2166;
t2053 = -t2111 * t2221 - t2201;
t2055 = t2109 * t2221 + t2175;
t2022 = t2053 * t2165 - t2055 * t2161;
t2065 = -t2247 - t2248;
t2192 = t2022 * t2162 + t2065 * t2166;
t2025 = t2170 - t2214;
t2191 = t2025 * t2162 - t2026 * t2166;
t2066 = t2182 - t2232;
t2070 = -t2246 - t2248;
t2033 = -t2066 * t2161 + t2070 * t2165;
t2190 = t2033 * t2162 + t2052 * t2166;
t2067 = -t2182 - t2232;
t2077 = -t2246 - t2247;
t2037 = t2067 * t2165 - t2077 * t2161;
t2189 = t2037 * t2162 - t2166 * t2205;
t2038 = t2177 - t2214;
t2041 = (qJD(1) * t2231 + t2236) * t2158 + t2179;
t2188 = t2038 * t2162 - t2041 * t2166;
t2071 = -g(3) * t2225 - t2202;
t2072 = -t2214 + t2219;
t2187 = t2071 * t2166 + t2072 * t2162;
t2086 = -t2130 - t2123;
t2092 = t2148 + (t2212 - t2215) * t2158;
t2186 = -t2086 * t2166 + t2092 * t2162;
t2087 = -t2131 + t2199;
t2088 = (t2216 + (qJD(2) + t2154) * t2235) * t2158;
t2185 = t2087 * t2162 - t2088 * t2166;
t2184 = -t2122 * t2162 - t2166 * t2253;
t2095 = -t2158 * t2174 - t2237;
t2138 = -qJDD(1) * t2163 - t2167 * t2168;
t2137 = qJDD(1) * t2167 - t2163 * t2168;
t2093 = -t2131 - t2199;
t2064 = t2086 * t2162 + t2092 * t2166;
t2063 = t2087 * t2166 + t2088 * t2162;
t2061 = -t2093 * t2158 + t2268;
t2058 = t2093 * t2159 + t2269;
t2050 = -t2158 * t2089 + t2159 * t2184;
t2047 = t2159 * t2089 + t2158 * t2184;
t2045 = t2159 * t2186 - t2227;
t2044 = t2159 * t2185 + t2227;
t2043 = t2158 * t2186 + t2224;
t2042 = t2158 * t2185 - t2224;
t2039 = -t2199 * pkin(2) - qJ(3) * t2089 + t2211 * t2244 + t2095 - t2128;
t2036 = t2067 * t2161 + t2077 * t2165;
t2035 = -t2071 * t2162 + t2072 * t2166;
t2032 = t2066 * t2165 + t2070 * t2161;
t2029 = -t2158 * t2095 + t2159 * t2187;
t2028 = t2159 * t2095 + t2158 * t2187;
t2027 = -t2148 * pkin(2) + t2123 * qJ(3) + ((pkin(1) + t2240) * qJDD(1) + (-qJ(3) * t2229 + t2207) * qJD(1) + t2176) * t2158 + t2180;
t2024 = -t2044 * t2163 + t2063 * t2167;
t2023 = t2044 * t2167 + t2063 * t2163;
t2021 = t2053 * t2161 + t2055 * t2165;
t2015 = t2037 * t2166 + t2162 * t2205;
t2014 = t2038 * t2166 + t2041 * t2162;
t2011 = t2033 * t2166 - t2052 * t2162;
t2004 = t2022 * t2166 - t2065 * t2162;
t2003 = -t2158 * t2039 + t2159 * t2188;
t2002 = t2159 * t2039 + t2158 * t2188;
t2001 = t2158 * t2036 + t2159 * t2189;
t2000 = -t2159 * t2036 + t2158 * t2189;
t1999 = t2025 * t2166 + t2026 * t2162;
t1998 = t2158 * t2032 + t2159 * t2190;
t1997 = -t2159 * t2032 + t2158 * t2190;
t1992 = t2010 * t2161 - t2019 * t2165;
t1990 = t2006 * t2161 - t2017 * t2165;
t1989 = t2158 * t2021 + t2159 * t2192;
t1988 = -t2159 * t2021 + t2158 * t2192;
t1984 = t1996 * t2161 - t2034 * t2165;
t1983 = t2158 * t2027 + t2159 * t2191;
t1982 = -t2159 * t2027 + t2158 * t2191;
t1979 = t1993 * t2166 - t2009 * t2162;
t1978 = t1991 * t2166 - t2005 * t2162;
t1977 = t1985 * t2166 - t1995 * t2162;
t1975 = t1986 * t2165 + t1987 * t2161;
t1972 = t2158 * t1992 + t2159 * t2193;
t1971 = -t2159 * t1992 + t2158 * t2193;
t1970 = t1976 * t2166 + t2016 * t2162;
t1969 = t2158 * t1990 + t2159 * t2194;
t1968 = -t2159 * t1990 + t2158 * t2194;
t1967 = t2158 * t1984 + t2159 * t2195;
t1966 = -t2159 * t1984 + t2158 * t2195;
t1963 = t2158 * t1975 + t2159 * t2196;
t1962 = -t2159 * t1975 + t2158 * t2196;
t1960 = t1965 * t2161 - t1980 * t2165;
t1959 = t1961 * t2166 - t1964 * t2162;
t1958 = t2158 * t1960 + t2159 * t2197;
t1957 = -t2159 * t1960 + t2158 * t2197;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2138, -t2137, 0, -t2146 * t2163 + t2147 * t2167, 0, 0, 0, 0, 0, 0, -t2061 * t2163 + t2271, -t2050 * t2163 - t2270, t2024, -t2029 * t2163 + t2035 * t2167, 0, 0, 0, 0, 0, 0, t2264, t2024, t2266, -t2003 * t2163 + t2014 * t2167, 0, 0, 0, 0, 0, 0, t2264, t2266, -t2045 * t2163 + t2064 * t2167, -t1983 * t2163 + t1999 * t2167, 0, 0, 0, 0, 0, 0, -t1998 * t2163 + t2011 * t2167, -t2001 * t2163 + t2015 * t2167, -t1989 * t2163 + t2004 * t2167, -t1963 * t2163 + t1970 * t2167, 0, 0, 0, 0, 0, 0, -t1969 * t2163 + t1978 * t2167, -t1972 * t2163 + t1979 * t2167, -t1967 * t2163 + t1977 * t2167, -t1958 * t2163 + t1959 * t2167; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2137, t2138, 0, t2146 * t2167 + t2147 * t2163, 0, 0, 0, 0, 0, 0, t2061 * t2167 + t2273, t2050 * t2167 - t2272, t2023, t2029 * t2167 + t2035 * t2163, 0, 0, 0, 0, 0, 0, t2265, t2023, t2267, t2003 * t2167 + t2014 * t2163, 0, 0, 0, 0, 0, 0, t2265, t2267, t2045 * t2167 + t2064 * t2163, t1983 * t2167 + t1999 * t2163, 0, 0, 0, 0, 0, 0, t1998 * t2167 + t2011 * t2163, t2001 * t2167 + t2015 * t2163, t1989 * t2167 + t2004 * t2163, t1963 * t2167 + t1970 * t2163, 0, 0, 0, 0, 0, 0, t1969 * t2167 + t1978 * t2163, t1972 * t2167 + t1979 * t2163, t1967 * t2167 + t1977 * t2163, t1958 * t2167 + t1959 * t2163; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2058, t2047, t2042, t2028, 0, 0, 0, 0, 0, 0, t2257, t2042, t2256, t2002, 0, 0, 0, 0, 0, 0, t2257, t2256, t2043, t1982, 0, 0, 0, 0, 0, 0, t1997, t2000, t1988, t1962, 0, 0, 0, 0, 0, 0, t1968, t1971, t1966, t1957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2168, -qJDD(1), 0, t2147, 0, 0, 0, 0, 0, 0, t2260, -t2261, t2063, t2035, 0, 0, 0, 0, 0, 0, t2260, t2063, t2261, t2014, 0, 0, 0, 0, 0, 0, t2260, t2261, t2064, t1999, 0, 0, 0, 0, 0, 0, t2011, t2015, t2004, t1970, 0, 0, 0, 0, 0, 0, t1978, t1979, t1977, t1959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2168, 0, t2146, 0, 0, 0, 0, 0, 0, t2061, t2050, t2044, t2029, 0, 0, 0, 0, 0, 0, t2259, t2044, t2258, t2003, 0, 0, 0, 0, 0, 0, t2259, t2258, t2045, t1983, 0, 0, 0, 0, 0, 0, t1998, t2001, t1989, t1963, 0, 0, 0, 0, 0, 0, t1969, t1972, t1967, t1958; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2058, t2047, t2042, t2028, 0, 0, 0, 0, 0, 0, t2257, t2042, t2256, t2002, 0, 0, 0, 0, 0, 0, t2257, t2256, t2043, t1982, 0, 0, 0, 0, 0, 0, t1997, t2000, t1988, t1962, 0, 0, 0, 0, 0, 0, t1968, t1971, t1966, t1957; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2254, -t2122, t2087, t2072, 0, 0, 0, 0, 0, 0, t2254, t2087, t2122, t2038, 0, 0, 0, 0, 0, 0, t2254, t2122, t2092, t2025, 0, 0, 0, 0, 0, 0, t2033, t2037, t2022, t1976, 0, 0, 0, 0, 0, 0, t1991, t1993, t1985, t1961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2121, -t2253, -t2088, t2071, 0, 0, 0, 0, 0, 0, t2121, -t2088, t2253, -t2041, 0, 0, 0, 0, 0, 0, t2121, t2253, -t2086, -t2026, 0, 0, 0, 0, 0, 0, t2052, -t2205, t2065, -t2016, 0, 0, 0, 0, 0, 0, t2005, t2009, t1995, t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2093, t2089, -t2127, t2095, 0, 0, 0, 0, 0, 0, -t2091, -t2127, -t2090, t2039, 0, 0, 0, 0, 0, 0, -t2091, -t2090, t2127, -t2027, 0, 0, 0, 0, 0, 0, -t2032, -t2036, -t2021, -t1975, 0, 0, 0, 0, 0, 0, -t1990, -t1992, -t1984, -t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2254, t2087, t2122, t2038, 0, 0, 0, 0, 0, 0, t2254, t2122, t2092, t2025, 0, 0, 0, 0, 0, 0, t2033, t2037, t2022, t1976, 0, 0, 0, 0, 0, 0, t1991, t1993, t1985, t1961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2091, -t2127, -t2090, t2039, 0, 0, 0, 0, 0, 0, -t2091, -t2090, t2127, -t2027, 0, 0, 0, 0, 0, 0, -t2032, -t2036, -t2021, -t1975, 0, 0, 0, 0, 0, 0, -t1990, -t1992, -t1984, -t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2121, t2088, -t2253, t2041, 0, 0, 0, 0, 0, 0, -t2121, -t2253, t2086, t2026, 0, 0, 0, 0, 0, 0, -t2052, t2205, -t2065, t2016, 0, 0, 0, 0, 0, 0, -t2005, -t2009, -t1995, -t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2254, t2122, t2092, t2025, 0, 0, 0, 0, 0, 0, t2033, t2037, t2022, t1976, 0, 0, 0, 0, 0, 0, t1991, t1993, t1985, t1961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2121, -t2253, t2086, t2026, 0, 0, 0, 0, 0, 0, -t2052, t2205, -t2065, t2016, 0, 0, 0, 0, 0, 0, -t2005, -t2009, -t1995, -t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2091, t2090, -t2127, t2027, 0, 0, 0, 0, 0, 0, t2032, t2036, t2021, t1975, 0, 0, 0, 0, 0, 0, t1990, t1992, t1984, t1960; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2070, t2067, t2053, t1987, 0, 0, 0, 0, 0, 0, t2006, t2010, t1996, t1965; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2066, t2077, t2055, t1986, 0, 0, 0, 0, 0, 0, -t2017, -t2019, -t2034, -t1980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2052, -t2205, t2065, -t2016, 0, 0, 0, 0, 0, 0, t2005, t2009, t1995, t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2040, t2031, t2018, t1974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2030, t2056, t2020, t1973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2017, t2019, t2034, t1980;];
f_new_reg  = t1;
