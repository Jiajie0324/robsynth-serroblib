% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:10:59
% EndTime: 2019-03-09 09:11:18
% DurationCPUTime: 7.88s
% Computational Cost: add. (7893->570), mult. (20170->743), div. (0->0), fcn. (14194->8), ass. (0->271)
t196 = cos(qJ(5));
t194 = sin(qJ(2));
t189 = sin(pkin(6));
t285 = qJD(1) * t189;
t266 = t194 * t285;
t190 = cos(pkin(6));
t273 = t190 * qJD(1);
t170 = qJD(2) + t273;
t193 = sin(qJ(5));
t301 = t170 * t193;
t109 = t196 * t266 - t301;
t192 = sin(qJ(6));
t195 = cos(qJ(6));
t197 = cos(qJ(2));
t284 = qJD(1) * t197;
t265 = t189 * t284;
t237 = qJD(5) + t265;
t219 = t195 * t237;
t281 = qJD(2) * t194;
t264 = t189 * t281;
t247 = qJD(1) * t264;
t269 = qJD(1) * qJD(2);
t261 = t197 * t269;
t248 = t189 * t261;
t250 = t193 * t266;
t72 = qJD(5) * t250 - t196 * (-qJD(5) * t170 + t248);
t29 = t192 * (qJD(6) * t109 + t247) - qJD(6) * t219 + t195 * t72;
t339 = t196 * t170 + t250;
t347 = qJD(6) + t339;
t68 = t109 * t192 - t219;
t311 = t68 * t347;
t359 = -t29 + t311;
t70 = t195 * t109 + t192 * t237;
t307 = qJD(6) * t70;
t30 = -t192 * t72 + t195 * t247 + t307;
t310 = t70 * t347;
t358 = t310 - t30;
t256 = t347 ^ 2;
t276 = qJD(5) * t196;
t262 = t194 * t276;
t279 = qJD(2) * t197;
t205 = (t193 * t279 + t262) * t189;
t277 = qJD(5) * t193;
t73 = qJD(1) * t205 - t170 * t277;
t316 = t195 * t73;
t357 = -t192 * t256 + t316;
t334 = pkin(1) * t194;
t175 = t190 * t334;
t298 = t189 * t197;
t287 = pkin(8) * t298 + t175;
t336 = t287 * qJD(2);
t114 = qJD(1) * t336;
t299 = t189 * t194;
t165 = qJD(4) * t299;
t292 = qJ(4) * t248 + qJD(1) * t165;
t65 = t114 - t292;
t22 = t73 * pkin(5) + t72 * pkin(10) - t65;
t198 = -pkin(2) - pkin(3);
t186 = pkin(4) - t198;
t208 = t189 * (-pkin(9) * t197 - t186 * t194);
t203 = qJD(2) * t208;
t166 = qJD(3) * t299;
t291 = qJ(3) * t248 + qJD(1) * t166;
t44 = qJD(1) * t203 + t291;
t229 = (pkin(4) * t197 - pkin(9) * t194) * t189;
t102 = -pkin(1) * t285 - pkin(2) * t265 - qJ(3) * t266;
t78 = pkin(3) * t265 + qJD(4) - t102;
t52 = qJD(1) * t229 + t78;
t140 = qJ(4) * t247;
t335 = pkin(1) * t190;
t176 = t197 * t335;
t163 = qJD(1) * t176;
t146 = qJD(2) * t163;
t147 = t170 * qJD(3);
t278 = qJD(4) * t197;
t53 = t140 + t146 + t147 + (-pkin(8) * t281 - t278) * t285;
t150 = t170 * qJ(3);
t121 = t287 * qJD(1);
t153 = qJ(4) * t265;
t96 = -t153 + t121;
t74 = t150 + t96;
t60 = -t170 * pkin(9) + t74;
t225 = -t193 * t44 - t196 * t53 - t52 * t276 + t60 * t277;
t5 = -pkin(10) * t247 - t225;
t26 = t193 * t52 + t196 * t60;
t24 = pkin(10) * t237 + t26;
t151 = qJ(4) * t266;
t120 = -pkin(8) * t266 + t163;
t271 = qJD(3) - t120;
t88 = -t170 * pkin(2) + t271;
t58 = -t170 * pkin(3) - t151 + t88;
t49 = pkin(4) * t170 - t58;
t27 = pkin(5) * t339 - pkin(10) * t109 + t49;
t8 = t192 * t27 + t195 * t24;
t2 = -qJD(6) * t8 - t192 * t5 + t195 * t22;
t345 = -t347 * t8 - t2;
t236 = t192 * t24 - t195 * t27;
t1 = -qJD(6) * t236 + t192 * t22 + t195 * t5;
t354 = t236 * t347 + t1;
t356 = t109 ^ 2;
t355 = t339 ^ 2;
t353 = t68 * t109;
t352 = t70 * t109;
t136 = pkin(5) * t196 + pkin(10) * t193 + t186;
t191 = qJ(3) - pkin(9);
t154 = qJ(3) * t265;
t61 = qJD(1) * t208 + t154;
t94 = t151 + t120;
t38 = t193 * t61 + t196 * t94;
t351 = -pkin(10) * t266 - qJD(3) * t196 - qJD(6) * t136 + t191 * t277 + t38;
t245 = -pkin(5) * t193 + pkin(10) * t196;
t297 = t191 * t196;
t350 = -t245 * qJD(5) + qJD(6) * t297 + t153 + (-t175 + (-pkin(8) - t245) * t298) * qJD(1);
t343 = t339 * t237;
t349 = t72 - t343;
t348 = t72 + t343;
t340 = (t170 + t273) * qJD(2) * t189;
t89 = t194 * t340;
t90 = t197 * t340;
t263 = t189 * t279;
t77 = -qJ(4) * t263 - t165 + t336;
t337 = qJD(5) * t237;
t346 = t191 * t337 + t65;
t344 = t237 * t70;
t220 = t109 * t237;
t217 = t237 * t189;
t211 = qJD(1) * t217;
t200 = t197 * t211 + t337;
t342 = t200 * t193;
t296 = t192 * t197;
t103 = (t194 * t195 + t196 * t296) * t285;
t242 = t192 * t276 + t103;
t341 = t242 * t347;
t338 = qJD(2) * t198;
t259 = t193 * t53 - t196 * t44;
t10 = -qJD(5) * t26 - t259;
t116 = -t189 * pkin(1) - pkin(2) * t298 - qJ(3) * t299;
t92 = pkin(3) * t298 - t116;
t63 = t229 + t92;
t115 = t190 * qJ(3) + t287;
t91 = -qJ(4) * t298 + t115;
t79 = -pkin(9) * t190 + t91;
t326 = t193 * t63 + t196 * t79;
t288 = qJ(3) * t263 + t166;
t51 = t203 + t288;
t268 = qJD(2) * t335;
t164 = t197 * t268;
t178 = t190 * qJD(3);
t66 = t164 + t178 + (-t278 + (-pkin(8) + qJ(4)) * t281) * t189;
t14 = -qJD(5) * t326 - t193 * t66 + t196 * t51;
t185 = t189 ^ 2;
t187 = t194 ^ 2;
t188 = t197 ^ 2;
t257 = t185 * (-t187 + t188);
t112 = 0.2e1 * t257 * t269;
t6 = pkin(5) * t247 - t10;
t333 = t192 * t6;
t332 = t195 * t6;
t330 = t70 * t68;
t328 = -t192 * t351 + t195 * t350;
t327 = t192 * t350 + t195 * t351;
t325 = pkin(8) * qJD(2);
t324 = t103 * t70;
t295 = t195 * t196;
t104 = -t192 * t266 + t265 * t295;
t323 = t104 * t68;
t126 = t190 * t196 + t193 * t299;
t322 = t126 * t73;
t321 = t192 * t68;
t320 = t192 * t70;
t319 = t192 * t73;
t318 = t195 * t68;
t317 = t195 * t70;
t315 = t196 * t30;
t314 = t29 * t192;
t313 = t29 * t196;
t312 = t30 * t195;
t309 = t73 * t196;
t306 = t109 * t339;
t305 = t114 * t194;
t304 = t120 * t170;
t303 = t121 * t170;
t302 = t336 * t194;
t199 = qJD(1) ^ 2;
t300 = t185 * t199;
t294 = -qJD(3) - t49;
t293 = qJD(3) - t94;
t290 = 0.2e1 * t147 + t146;
t128 = -pkin(8) * t299 + t176;
t286 = qJ(3) * qJD(2);
t282 = qJD(2) * t193;
t280 = qJD(2) * t196;
t275 = qJD(6) * t192;
t274 = qJD(6) * t195;
t272 = qJD(2) - t170;
t267 = t197 * t300;
t117 = -t190 * pkin(2) - t128;
t252 = t198 * t299;
t95 = qJD(1) * t252 + t154;
t260 = -t95 - t325;
t119 = pkin(2) * t266 - t154;
t258 = t119 - t325;
t255 = t347 * t195;
t253 = t194 * t268;
t251 = t26 * t265;
t249 = t109 * t266;
t246 = -0.2e1 * pkin(1) * t185 * t269;
t244 = t192 * t8 - t195 * t236;
t243 = t192 * t236 + t195 * t8;
t241 = -t195 * t276 - t104;
t238 = t272 * t285;
t32 = pkin(10) * t298 + t326;
t127 = -t190 * t193 + t196 * t299;
t80 = -t190 * pkin(3) - qJ(4) * t299 + t117;
t71 = t190 * pkin(4) - t80;
t41 = pkin(5) * t126 - pkin(10) * t127 + t71;
t16 = t192 * t41 + t195 * t32;
t15 = -t192 * t32 + t195 * t41;
t25 = -t193 * t60 + t196 * t52;
t235 = -t193 * t25 + t196 * t26;
t37 = -t193 * t94 + t196 * t61;
t35 = -t193 * t79 + t196 * t63;
t232 = qJD(2) * t252;
t231 = -t114 * t190 - t170 * t336;
t230 = t185 * t194 * t261;
t122 = -pkin(8) * t264 + t164;
t228 = -t274 * t347 - t319;
t227 = t275 * t347 - t316;
t226 = -t127 * t192 + t195 * t298;
t87 = t127 * t195 + t189 * t296;
t13 = t193 * t51 + t196 * t66 + t63 * t276 - t79 * t277;
t224 = t237 * t68;
t223 = t241 * t347;
t23 = -pkin(5) * t237 - t25;
t222 = -pkin(10) * t73 + t23 * t347;
t113 = -pkin(8) * t247 + t146;
t202 = -qJD(6) * t244 + t1 * t195 - t192 * t2;
t201 = t294 * qJD(5) + (t191 * t281 + t197 * t294) * t285;
t144 = t194 * t267;
t137 = t193 * t247;
t134 = -0.2e1 * t230;
t133 = 0.2e1 * t230;
t130 = t170 * t265;
t125 = t199 * t257;
t124 = -t170 ^ 2 - t187 * t300;
t106 = t122 + t178;
t101 = t136 * t192 + t191 * t295;
t100 = t136 * t195 - t192 * t297;
t99 = -t130 + t248;
t98 = t272 * t266;
t97 = pkin(2) * t264 - t288;
t93 = t150 + t121;
t85 = -qJD(5) * t126 + t196 * t263;
t84 = -t190 * t277 + t205;
t83 = t113 + t147;
t81 = pkin(2) * t247 - t291;
t76 = t232 + t288;
t64 = qJD(1) * t232 + t291;
t56 = pkin(5) * t109 + pkin(10) * t339;
t40 = qJD(6) * t226 - t192 * t264 + t85 * t195;
t39 = qJD(6) * t87 + t85 * t192 + t195 * t264;
t33 = pkin(5) * t266 - t37;
t31 = -pkin(5) * t298 - t35;
t28 = t84 * pkin(5) - t85 * pkin(10) - t77;
t18 = t192 * t56 + t195 * t25;
t17 = -t192 * t25 + t195 * t56;
t12 = pkin(5) * t264 - t14;
t11 = -pkin(10) * t264 + t13;
t4 = -qJD(6) * t16 - t192 * t11 + t195 * t28;
t3 = qJD(6) * t15 + t195 * t11 + t192 * t28;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t112, t90, t134, -t89, 0, t194 * t246 + t231, -t113 * t190 - t122 * t170 + t197 * t246 (t113 * t197 + t305 + (-t120 * t197 - t121 * t194) * qJD(2) + (t122 * t197 + t302 + (-t128 * t197 - t194 * t287) * qJD(2)) * qJD(1)) * t189, t113 * t287 - t114 * t128 - t120 * t336 + t121 * t122, t133, t90, -t112, 0, t89, t134 (t102 * t281 - t197 * t81 + (t116 * t281 - t197 * t97) * qJD(1)) * t189 + t231 (t305 + t197 * t83 + (-t194 * t93 + t197 * t88) * qJD(2) + (t106 * t197 + t302 + (-t115 * t194 + t117 * t197) * qJD(2)) * qJD(1)) * t189, t106 * t170 + t83 * t190 + (-t102 * t279 - t194 * t81 + (-t116 * t279 - t194 * t97) * qJD(1)) * t189, t102 * t97 + t106 * t93 + t114 * t117 + t115 * t83 + t116 * t81 + t336 * t88, t133, -t112, -t90, t134, -t89, 0, -t77 * t170 - t65 * t190 + (-t78 * t281 + t197 * t64 + (t197 * t76 - t281 * t92) * qJD(1)) * t189, t66 * t170 + t53 * t190 + (t78 * t279 + t194 * t64 + (t194 * t76 + t279 * t92) * qJD(1)) * t189 (-t194 * t65 - t197 * t53 + (t194 * t74 - t197 * t58) * qJD(2) + (-t194 * t77 - t197 * t66 + (t194 * t91 - t197 * t80) * qJD(2)) * qJD(1)) * t189, t53 * t91 + t58 * t77 + t64 * t92 + t65 * t80 + t66 * t74 + t76 * t78, t109 * t85 - t127 * t72, -t109 * t84 + t126 * t72 - t127 * t73 - t339 * t85, t85 * qJD(5) + (-t109 * t281 - t72 * t197 + (-t127 * t281 + t197 * t85) * qJD(1)) * t189, t339 * t84 + t322, -t84 * qJD(5) + (t339 * t281 - t73 * t197 + (t126 * t281 - t197 * t84) * qJD(1)) * t189 (-t185 * t284 - t217) * t281, t14 * qJD(5) - t77 * t339 - t65 * t126 + t49 * t84 + t71 * t73 + (-t25 * t281 + t10 * t197 + (t14 * t197 - t281 * t35) * qJD(1)) * t189, -t13 * qJD(5) - t77 * t109 - t65 * t127 + t49 * t85 - t71 * t72 + (t26 * t281 + t225 * t197 + (-t13 * t197 + t281 * t326) * qJD(1)) * t189, -t10 * t127 - t109 * t14 + t126 * t225 - t13 * t339 - t25 * t85 - t26 * t84 - t326 * t73 + t35 * t72, t10 * t35 + t13 * t26 + t14 * t25 - t225 * t326 - t49 * t77 - t65 * t71, -t29 * t87 + t40 * t70, -t226 * t29 - t30 * t87 - t39 * t70 - t40 * t68, -t126 * t29 + t347 * t40 + t70 * t84 + t73 * t87, -t226 * t30 + t39 * t68, -t126 * t30 + t226 * t73 - t347 * t39 - t68 * t84, t347 * t84 + t322, t12 * t68 + t126 * t2 + t15 * t73 - t226 * t6 + t23 * t39 - t236 * t84 + t30 * t31 + t347 * t4, -t1 * t126 + t12 * t70 - t16 * t73 + t23 * t40 - t29 * t31 - t3 * t347 + t6 * t87 - t8 * t84, t1 * t226 + t15 * t29 - t16 * t30 - t2 * t87 + t236 * t40 - t3 * t68 - t39 * t8 - t4 * t70, t1 * t16 + t12 * t23 + t15 * t2 - t236 * t4 + t3 * t8 + t31 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t125, t99, t144, -t98, 0, -pkin(8) * t248 + t303 + (-t190 * t269 + t300) * t334, pkin(1) * t267 - t113 + t304, 0, 0, -t144, t99, t125, 0, t98, t144, t303 + (-t253 + (-t102 * t194 + t197 * t258) * t189) * qJD(1) ((-t121 + t93 - t286) * t194 + (-pkin(2) * qJD(2) + t271 - t88) * t197) * t285, -t304 + (t102 * t197 + t194 * t258) * t285 + t290, -t114 * pkin(2) + t83 * qJ(3) - t102 * t119 - t88 * t121 + t271 * t93, -t144, t125, -t197 * t238, t144, -t194 * t238, 0, t96 * t170 + (-t253 + (t194 * t78 + t197 * t260) * t189) * qJD(1) + t292, -t170 * t94 + t140 + ((-qJD(4) - t78) * t197 + t260 * t194) * t285 + t290 ((-t74 + t96 + t286) * t194 + (-t293 + t58 - t338) * t197) * t285, t53 * qJ(3) + t65 * t198 + t293 * t74 - t58 * t96 - t78 * t95, t72 * t193 - t196 * t220, t348 * t196 + (t73 + t220) * t193, -t196 * t200 + t137 + t249, -t193 * t343 + t309 (-t339 + t280) * t266 + t342, t194 * t211, t186 * t73 + t201 * t193 - t196 * t346 - t37 * t237 + t25 * t266 + t96 * t339, t96 * t109 - t186 * t72 + t193 * t346 + t201 * t196 + t38 * t237 - t26 * t266, t339 * t38 + t109 * t37 + (t25 * t265 - qJD(3) * t339 - t191 * t73 + t225 + (t109 * t191 + t25) * qJD(5)) * t196 + (t251 + qJD(3) * t109 - t191 * t72 + t10 + (t191 * t339 + t26) * qJD(5)) * t193, -t186 * t65 - t25 * t37 - t26 * t38 + t49 * t96 + t235 * qJD(3) + (-t10 * t193 - t196 * t225 + (-t193 * t26 - t196 * t25) * qJD(5)) * t191, t29 * t195 * t193 + (t193 * t275 + t241) * t70, t324 + t323 + (t318 + t320) * t276 + (-t314 + t312 + (t317 - t321) * qJD(6)) * t193, -t313 + t223 + (t227 - t344) * t193, -t30 * t192 * t193 + (-t193 * t274 - t242) * t68, -t315 + t341 + (t224 - t228) * t193, -t193 * t237 * t347 + t309, t100 * t73 - t103 * t23 - t33 * t68 - t328 * t347 + (t2 + (t191 * t68 - t192 * t23) * qJD(5)) * t196 + (qJD(3) * t68 + t191 * t30 - t23 * t274 + t236 * t237 - t333) * t193, -t101 * t73 - t104 * t23 - t33 * t70 + t327 * t347 + (-t1 + (t191 * t70 - t195 * t23) * qJD(5)) * t196 + (qJD(3) * t70 - t191 * t29 + t23 * t275 + t237 * t8 - t332) * t193, t100 * t29 - t101 * t30 + t103 * t8 - t104 * t236 + t328 * t70 + t327 * t68 + t244 * t276 + (qJD(6) * t243 + t1 * t192 + t2 * t195) * t193, t191 * t193 * t6 + t1 * t101 + t100 * t2 - t327 * t8 + t328 * t236 + (qJD(3) * t193 + t191 * t276 - t33) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t99, t124, -t93 * t170 + (t102 * t299 + t336) * qJD(1), 0, 0, 0, 0, 0, 0, -t144, t124, -t99, -t74 * t170 + (-t299 * t78 + t336) * qJD(1) - t292, 0, 0, 0, 0, 0, 0 (-t109 + t301) * qJD(5) + (-t262 + (-t109 - t282) * t197) * t285, t348, t355 + t356, -t109 * t25 - t26 * t339 + t65, 0, 0, 0, 0, 0, 0, t353 - t357, t195 * t256 + t319 + t352, -t358 * t192 + t195 * t359, t23 * t109 - t192 * t354 + t195 * t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(2) - t170) * t266, t130 + t248 (-t187 - t188) * t300 (t197 * t74 + (t58 + t338) * t194) * t285 + t291, 0, 0, 0, 0, 0, 0 (-t339 - t280) * t266 - t342, -t249 + t137 + (-t237 * t265 - t337) * t196, t349 * t196 + (-t73 + t220) * t193, t10 * t196 - t225 * t193 + t235 * qJD(5) + (-t194 * t49 + t197 * t235) * t285, 0, 0, 0, 0, 0, 0, -t315 - t341 + (t224 + t228) * t193, t313 + t223 + (t227 + t344) * t193, t324 - t323 + (-t318 + t320) * t276 + (-t314 - t312 + (t317 + t321) * qJD(6)) * t193, t103 * t236 + t104 * t8 + (qJD(5) * t243 - t6) * t196 + (t23 * t237 + t202) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, -t355 + t356, -t349, -t306 (t109 + t301) * qJD(5) + (-t262 + (t109 - t282) * t197) * t285, -t247, -t49 * t109 + t251 - t259, t237 * t25 + t339 * t49 + t225, 0, 0, t255 * t70 - t314 (-t29 - t311) * t195 + (-t30 - t310) * t192, t255 * t347 + t319 - t352, t192 * t311 - t312, t353 + t357, -t347 * t109, -pkin(5) * t30 + t109 * t236 - t332 - t26 * t68 + (-pkin(10) * t274 - t17) * t347 + t222 * t192, pkin(5) * t29 + t109 * t8 + t333 - t26 * t70 + (pkin(10) * t275 + t18) * t347 + t222 * t195, t17 * t70 + t18 * t68 + ((-t30 + t307) * pkin(10) + t354) * t195 + ((qJD(6) * t68 - t29) * pkin(10) + t345) * t192, -pkin(5) * t6 + pkin(10) * t202 + t17 * t236 - t18 * t8 - t23 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330, -t68 ^ 2 + t70 ^ 2, t359, -t330, t358, t73, -t23 * t70 - t345, t23 * t68 - t354, 0, 0;];
tauc_reg  = t7;
