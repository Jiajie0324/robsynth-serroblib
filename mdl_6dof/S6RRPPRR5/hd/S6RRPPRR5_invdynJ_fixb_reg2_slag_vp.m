% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRR5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR5_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:11:07
% EndTime: 2019-03-09 09:11:28
% DurationCPUTime: 12.64s
% Computational Cost: add. (10097->754), mult. (24330->914), div. (0->0), fcn. (17686->10), ass. (0->353)
t251 = sin(pkin(6));
t260 = cos(qJ(2));
t390 = qJD(1) * qJD(2);
t371 = t260 * t390;
t256 = sin(qJ(2));
t388 = qJDD(1) * t256;
t294 = t371 + t388;
t503 = t294 * t251;
t259 = cos(qJ(5));
t405 = qJD(1) * t256;
t379 = t251 * t405;
t252 = cos(pkin(6));
t394 = t252 * qJD(1);
t222 = qJD(2) + t394;
t255 = sin(qJ(5));
t428 = t222 * t255;
t127 = t259 * t379 - t428;
t254 = sin(qJ(6));
t258 = cos(qJ(6));
t404 = qJD(1) * t260;
t378 = t251 * t404;
t328 = qJD(5) + t378;
t302 = t258 * t328;
t387 = qJDD(1) * t260;
t370 = t251 * t387;
t372 = t256 * t390;
t189 = t251 * t372;
t386 = qJDD(5) - t189;
t312 = t370 + t386;
t396 = qJD(6) * t254;
t389 = qJDD(1) * t252;
t219 = qJDD(2) + t389;
t349 = t255 * t379;
t55 = qJD(5) * t349 + t255 * t219 + t259 * (qJD(5) * t222 - t503);
t23 = -qJD(6) * t302 + t127 * t396 - t254 * t312 + t258 * t55;
t475 = t259 * t222 + t349;
t488 = qJD(6) + t475;
t80 = t127 * t254 - t302;
t448 = t488 * t80;
t502 = -t23 + t448;
t82 = t258 * t127 + t254 * t328;
t433 = qJD(6) * t82;
t24 = -t254 * t55 - t258 * t312 + t433;
t437 = t82 * t488;
t501 = t437 - t24;
t359 = t488 ^ 2;
t171 = t259 * t219;
t397 = qJD(5) * t259;
t375 = t256 * t397;
t401 = qJD(2) * t260;
t286 = t255 * t401 + t375;
t367 = t255 * t388;
t398 = qJD(5) * t255;
t56 = -t222 * t398 + t171 + (qJD(1) * t286 + t367) * t251;
t54 = qJDD(6) + t56;
t440 = t258 * t54;
t500 = -t254 * t359 + t440;
t479 = t475 * t328;
t499 = t55 - t479;
t469 = qJD(2) * (t222 + t394);
t63 = (t260 * t469 + t256 * (t219 + t389)) * t251;
t459 = pkin(9) * t256;
t343 = pkin(4) * t260 - t459;
t406 = qJD(1) * t251;
t118 = -pkin(1) * t406 - pkin(2) * t378 - qJ(3) * t379;
t90 = pkin(3) * t378 + qJD(4) - t118;
t67 = t343 * t406 + t90;
t461 = pkin(1) * t256;
t230 = t252 * t461;
t423 = t251 * t260;
t411 = pkin(8) * t423 + t230;
t138 = t411 * qJD(1);
t195 = qJ(4) * t378;
t114 = -t195 + t138;
t192 = t222 * qJ(3);
t86 = t192 + t114;
t75 = -pkin(9) * t222 + t86;
t31 = t255 * t67 + t259 * t75;
t28 = pkin(10) * t328 + t31;
t462 = pkin(1) * t252;
t231 = t260 * t462;
t137 = -pkin(8) * t379 + qJD(1) * t231;
t392 = qJD(3) - t137;
t108 = -t222 * pkin(2) + t392;
t193 = qJ(4) * t379;
t73 = -t222 * pkin(3) + t108 - t193;
t60 = pkin(4) * t222 - t73;
t32 = pkin(5) * t475 - pkin(10) * t127 + t60;
t10 = t254 * t32 + t258 * t28;
t426 = t251 * t256;
t216 = qJD(4) * t426;
t464 = -t219 * pkin(3) - qJ(4) * t503 - qJD(1) * t216;
t385 = qJD(2) * t462;
t353 = qJD(1) * t385;
t369 = t252 * t387;
t351 = -pkin(1) * t369 + pkin(8) * t503 + t256 * t353;
t191 = t219 * pkin(2);
t467 = t191 - qJDD(3);
t69 = t351 - t467;
t41 = t69 + t464;
t460 = pkin(4) * t219;
t35 = -t41 + t460;
t12 = pkin(5) * t56 + pkin(10) * t55 + t35;
t262 = -pkin(2) - pkin(3);
t248 = pkin(4) - t262;
t297 = -pkin(9) * t260 - t248 * t256;
t279 = qJD(2) * t297;
t217 = qJD(3) * t426;
t241 = t251 * pkin(1);
t322 = pkin(2) * t370 + qJ(3) * t503 + qJD(1) * t217 + qJDD(1) * t241;
t288 = pkin(3) * t370 + qJDD(4) + t322;
t29 = (qJD(1) * t279 + qJDD(1) * t343) * t251 + t288;
t173 = qJ(4) * t189;
t373 = qJ(4) * t387;
t382 = pkin(8) * t370 + qJDD(1) * t230 + t260 * t353;
t400 = qJD(4) * t260;
t402 = qJD(2) * t256;
t473 = t219 * qJ(3) + t222 * qJD(3);
t42 = t173 + (-t373 + (-pkin(8) * t402 - t400) * qJD(1)) * t251 + t382 + t473;
t36 = -pkin(9) * t219 + t42;
t311 = -t255 * t29 - t259 * t36 - t67 * t397 + t398 * t75;
t5 = pkin(10) * t312 - t311;
t2 = -qJD(6) * t10 + t258 * t12 - t254 * t5;
t481 = -t10 * t488 - t2;
t327 = t254 * t28 - t258 * t32;
t1 = -t327 * qJD(6) + t254 * t12 + t258 * t5;
t496 = t327 * t488 + t1;
t62 = (-t219 * t260 + t256 * t469 - t369) * t251;
t498 = t127 ^ 2;
t497 = t475 ^ 2;
t495 = t127 * t80;
t494 = t127 * t82;
t342 = pkin(5) * t259 + pkin(10) * t255;
t167 = t342 + t248;
t253 = qJ(3) - pkin(9);
t112 = t193 + t137;
t196 = qJ(3) * t378;
t76 = t297 * t406 + t196;
t46 = t259 * t112 + t255 * t76;
t493 = -pkin(10) * t379 - qJD(3) * t259 - qJD(6) * t167 + t253 * t398 + t46;
t341 = -pkin(5) * t255 + pkin(10) * t259;
t421 = t253 * t259;
t492 = t341 * qJD(5) - qJD(6) * t421 - t195 - (-t230 + (-pkin(8) - t341) * t423) * qJD(1);
t491 = t55 + t479;
t257 = sin(qJ(1));
t417 = t257 * t260;
t261 = cos(qJ(1));
t418 = t256 * t261;
t158 = t252 * t418 + t417;
t422 = t251 * t261;
t103 = t158 * t259 + t255 * t422;
t415 = t260 * t261;
t419 = t256 * t257;
t157 = -t252 * t415 + t419;
t487 = t103 * t254 + t157 * t258;
t486 = t103 * t258 - t157 * t254;
t468 = qJD(5) * t328;
t159 = t252 * t417 + t418;
t471 = -g(1) * t159 - g(2) * t157 + g(3) * t423;
t485 = t253 * t468 - t35 + t471;
t247 = t251 ^ 2;
t482 = 0.2e1 * t247;
t480 = t328 * t82;
t304 = t127 * t328;
t478 = t255 * t312;
t420 = t254 * t260;
t119 = (t256 * t258 + t259 * t420) * t406;
t334 = t254 * t397 + t119;
t476 = t334 * t488;
t140 = t411 * qJD(2);
t376 = t251 * t401;
t89 = -qJ(4) * t376 + t140 - t216;
t474 = 0.2e1 * t473;
t160 = -t252 * t419 + t415;
t472 = g(1) * t160 + g(2) * t158 + g(3) * t426;
t470 = qJD(2) * t262;
t365 = t255 * t36 - t259 * t29;
t8 = -qJD(5) * t31 - t365;
t380 = t222 * t405;
t466 = t251 * (t380 + t387) - t189;
t303 = t251 * t328;
t285 = qJD(1) * t303;
t264 = t260 * t285 + t468;
t465 = -t255 * t264 + t259 * t312;
t226 = pkin(3) * t423;
t412 = pkin(2) * t423 + qJ(3) * t426;
t381 = t226 + t412;
t350 = pkin(4) * t423 + t381;
t287 = -pkin(9) * t426 + t350;
t78 = t241 + t287;
t132 = t252 * qJ(3) + t411;
t109 = -qJ(4) * t423 + t132;
t93 = -pkin(9) * t252 + t109;
t453 = t255 * t78 + t259 * t93;
t413 = qJ(3) * t376 + t217;
t64 = t251 * t279 + t413;
t215 = t260 * t385;
t238 = t252 * qJD(3);
t79 = t215 + t238 + (-t400 + (-pkin(8) + qJ(4)) * t402) * t251;
t16 = -qJD(5) * t453 - t255 * t79 + t259 * t64;
t463 = -t253 * t312 + (-qJD(3) - t60) * t328;
t249 = t256 ^ 2;
t250 = t260 ^ 2;
t408 = -t249 + t250;
t94 = (t256 * t387 + t390 * t408) * t482;
t458 = g(2) * t261;
t457 = t82 * t80;
t455 = t254 * t492 - t258 * t493;
t454 = t254 * t493 + t258 * t492;
t452 = pkin(8) * qJD(2);
t450 = t119 * t82;
t416 = t258 * t259;
t120 = -t254 * t379 + t378 * t416;
t449 = t120 * t80;
t447 = t23 * t254;
t446 = t23 * t259;
t445 = t24 * t258;
t444 = t24 * t259;
t443 = t254 * t54;
t442 = t254 * t80;
t441 = t254 * t82;
t439 = t258 * t80;
t438 = t258 * t82;
t436 = qJ(3) * t157;
t435 = qJ(3) * t159;
t434 = qJ(3) * t260;
t432 = t127 * t475;
t169 = t219 * t252;
t427 = t247 * qJD(1) ^ 2;
t425 = t251 * t257;
t424 = t251 * t259;
t161 = -pkin(8) * t426 + t231;
t410 = g(1) * t425 + g(3) * t252;
t409 = t261 * pkin(1) + pkin(8) * t425;
t407 = qJ(3) * qJD(2);
t403 = qJD(2) * t255;
t395 = qJD(6) * t258;
t393 = qJD(3) - t112;
t384 = t260 * t427;
t383 = t160 * pkin(2) + t409;
t134 = -t252 * pkin(2) - t161;
t133 = -t241 - t412;
t377 = t251 * t402;
t374 = pkin(1) * t482;
t366 = -pkin(1) * t257 + pkin(8) * t422;
t143 = t157 * pkin(2);
t363 = qJ(3) * t158 - t143;
t149 = t159 * pkin(2);
t362 = qJ(3) * t160 - t149;
t110 = t226 - t133;
t361 = qJD(1) * t110 + t90;
t358 = t488 * t258;
t357 = qJD(1) * t133 + t118;
t354 = t262 * t426;
t352 = t31 * t378;
t348 = t127 * t379;
t347 = t475 * t379;
t345 = t256 * t371;
t344 = -t158 * pkin(2) + t366;
t106 = t160 * t255 + t257 * t424;
t313 = -t158 * t255 + t259 * t422;
t340 = g(1) * t313 + g(2) * t106;
t338 = g(1) * t157 - g(2) * t159;
t336 = g(1) * t158 - g(2) * t160;
t335 = g(1) * t261 + g(2) * t257;
t333 = -t258 * t397 - t120;
t331 = t10 * t258 + t254 * t327;
t330 = t10 * t254 - t258 * t327;
t38 = pkin(10) * t423 + t453;
t155 = t252 * t259 + t255 * t426;
t156 = -t252 * t255 + t256 * t424;
t95 = -t252 * pkin(3) - qJ(4) * t426 + t134;
t85 = t252 * pkin(4) - t95;
t50 = pkin(5) * t155 - pkin(10) * t156 + t85;
t18 = t254 * t50 + t258 * t38;
t17 = -t254 * t38 + t258 * t50;
t30 = -t255 * t75 + t259 * t67;
t326 = -t255 * t30 + t259 * t31;
t43 = -t255 * t93 + t259 * t78;
t323 = pkin(8) * t189;
t45 = -t112 * t255 + t259 * t76;
t321 = qJD(2) * t354;
t139 = -pkin(8) * t377 + t215;
t316 = -t395 * t488 - t443;
t315 = t396 * t488 - t440;
t314 = -t156 * t254 + t258 * t423;
t101 = t156 * t258 + t251 * t420;
t15 = t255 * t64 + t259 * t79 + t78 * t397 - t398 * t93;
t309 = t328 * t80;
t308 = t333 * t488;
t27 = -pkin(5) * t328 - t30;
t307 = -pkin(10) * t54 + t27 * t488;
t47 = qJD(1) * t321 + t288;
t88 = t321 + t413;
t306 = qJD(1) * t88 + qJDD(1) * t110 + t47;
t115 = pkin(2) * t377 - t413;
t61 = pkin(2) * t189 - t322;
t300 = -qJD(1) * t115 - qJDD(1) * t133 - t61;
t142 = t157 * pkin(3);
t293 = -t157 * pkin(4) + t158 * t253 - t142 - t143;
t148 = t159 * pkin(3);
t292 = -t159 * pkin(4) + t160 * t253 - t148 - t149;
t291 = g(1) * t106 - g(2) * t313 + g(3) * t155;
t107 = t160 * t259 - t255 * t425;
t290 = -g(1) * t107 - g(2) * t103 - g(3) * t156;
t289 = -t140 * t222 + t336;
t6 = -pkin(5) * t312 - t8;
t284 = t291 - t6;
t283 = t160 * pkin(3) - qJ(4) * t425 + t383;
t83 = -t323 + t382;
t277 = -t472 + t382;
t275 = -t158 * pkin(3) - qJ(4) * t422 + t344;
t273 = -t471 - t351;
t272 = pkin(10) * qJD(6) * t488 - t284;
t271 = -t137 * t222 + t277;
t270 = -qJD(6) * t330 + t1 * t258 - t2 * t254;
t269 = t273 + t467;
t268 = t138 * t222 + t273;
t267 = t160 * pkin(4) + t159 * t253 + t283;
t266 = -t158 * pkin(4) - t157 * t253 + t275;
t265 = t269 - t464;
t177 = t256 * t384;
t163 = t222 * t378;
t154 = t408 * t427;
t153 = -t222 ^ 2 - t249 * t427;
t136 = -t177 - t219;
t135 = pkin(2) * t379 - t196;
t131 = (qJDD(1) * t250 - 0.2e1 * t345) * t247;
t130 = (qJDD(1) * t249 + 0.2e1 * t345) * t247;
t122 = t139 + t238;
t117 = t167 * t254 + t253 * t416;
t116 = t167 * t258 - t254 * t421;
t113 = qJD(1) * t354 + t196;
t111 = t192 + t138;
t99 = -qJD(5) * t155 + t259 * t376;
t98 = t251 * t286 - t252 * t398;
t92 = -t163 + t503;
t71 = pkin(5) * t127 + pkin(10) * t475;
t66 = t107 * t258 - t159 * t254;
t65 = -t107 * t254 - t159 * t258;
t57 = t83 + t473;
t49 = qJD(6) * t314 - t254 * t377 + t258 * t99;
t48 = qJD(6) * t101 + t254 * t99 + t258 * t377;
t39 = pkin(5) * t379 - t45;
t37 = -pkin(5) * t423 - t43;
t34 = pkin(5) * t98 - pkin(10) * t99 - t89;
t20 = t254 * t71 + t258 * t30;
t19 = -t254 * t30 + t258 * t71;
t14 = pkin(5) * t377 - t16;
t13 = -pkin(10) * t377 + t15;
t4 = -qJD(6) * t18 - t13 * t254 + t258 * t34;
t3 = qJD(6) * t17 + t13 * t258 + t254 * t34;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t257 - t458, t335, 0, 0, t130, t94, t63, t131, -t62, t169, t161 * t219 - t252 * t351 + (-t372 + t387) * t374 + t289, -t139 * t222 - t219 * t411 - t252 * t83 - t294 * t374 - t338 ((-qJD(2) * t137 + qJDD(1) * t411 + t83 + (-qJD(2) * t161 + t139) * qJD(1)) * t260 + (-qJD(2) * t138 - qJDD(1) * t161 + t351) * t256 - t335) * t251, t247 * qJDD(1) * pkin(1) ^ 2 - g(1) * t366 - g(2) * t409 - t137 * t140 + t138 * t139 - t161 * t351 + t411 * t83, t130, t63, -t94, t169, t62, t131, -t134 * t219 - t252 * t69 + (t260 * t300 + t357 * t402) * t251 + t289 ((qJD(2) * t108 + qJDD(1) * t132 + t57 + (qJD(2) * t134 + t122) * qJD(1)) * t260 + (-qJD(2) * t111 + qJDD(1) * t134 + t69 + (-qJD(2) * t132 + t140) * qJD(1)) * t256 - t335) * t251, t122 * t222 + t132 * t219 + t252 * t57 + (t256 * t300 - t357 * t401) * t251 + t338, t57 * t132 + t111 * t122 + t61 * t133 + t118 * t115 + t69 * t134 + t108 * t140 - g(1) * (t344 - t436) - g(2) * (t383 + t435) t130, -t94, -t63, t131, -t62, t169, -t219 * t95 - t222 * t89 - t252 * t41 + (t260 * t306 - t361 * t402) * t251 + t336, t109 * t219 + t222 * t79 + t252 * t42 + (t256 * t306 + t361 * t401) * t251 + t338 ((-qJD(2) * t73 - qJDD(1) * t109 - t42 + (-qJD(2) * t95 - t79) * qJD(1)) * t260 + (qJD(2) * t86 - qJDD(1) * t95 - t41 + (qJD(2) * t109 - t89) * qJD(1)) * t256 + t335) * t251, t42 * t109 + t86 * t79 + t41 * t95 + t73 * t89 + t47 * t110 + t90 * t88 - g(1) * (t275 - t436) - g(2) * (t283 + t435) t127 * t99 - t156 * t55, -t127 * t98 + t155 * t55 - t156 * t56 - t475 * t99, t99 * qJD(5) + t156 * t386 + (-t127 * t402 + (qJD(1) * t99 + qJDD(1) * t156 - t55) * t260) * t251, t155 * t56 + t475 * t98, -t98 * qJD(5) - t155 * t386 + (t475 * t402 + (-qJD(1) * t98 - qJDD(1) * t155 - t56) * t260) * t251, -t303 * t402 + t312 * t423, t16 * qJD(5) + t43 * t386 - t89 * t475 + t85 * t56 + t35 * t155 + t60 * t98 + g(1) * t103 - g(2) * t107 + (-t30 * t402 + (qJD(1) * t16 + qJDD(1) * t43 + t8) * t260) * t251, -t15 * qJD(5) - t453 * t386 - t89 * t127 - t85 * t55 + t35 * t156 + t60 * t99 + (t31 * t402 + (-qJD(1) * t15 - qJDD(1) * t453 + t311) * t260) * t251 + t340, -t127 * t16 - t15 * t475 + t155 * t311 - t156 * t8 - t30 * t99 - t31 * t98 + t43 * t55 - t453 * t56 - t338, -g(1) * t266 - g(2) * t267 + t31 * t15 + t30 * t16 - t311 * t453 + t35 * t85 + t8 * t43 - t60 * t89, -t101 * t23 + t49 * t82, -t101 * t24 - t23 * t314 - t48 * t82 - t49 * t80, t101 * t54 - t155 * t23 + t488 * t49 + t82 * t98, -t24 * t314 + t48 * t80, -t155 * t24 + t314 * t54 - t48 * t488 - t80 * t98, t155 * t54 + t488 * t98, g(1) * t486 - g(2) * t66 + t14 * t80 + t2 * t155 + t17 * t54 + t37 * t24 + t27 * t48 - t6 * t314 - t327 * t98 + t4 * t488, -g(1) * t487 - g(2) * t65 - t1 * t155 - t10 * t98 + t6 * t101 + t14 * t82 - t18 * t54 - t37 * t23 + t27 * t49 - t3 * t488, t1 * t314 - t10 * t48 - t101 * t2 + t17 * t23 - t18 * t24 - t3 * t80 + t327 * t49 - t4 * t82 - t340, t1 * t18 + t10 * t3 + t2 * t17 - t327 * t4 + t6 * t37 + t27 * t14 - g(1) * (-pkin(5) * t103 + pkin(10) * t313 + t266) - g(2) * (pkin(5) * t107 + pkin(10) * t106 + t267); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t154, t92, t177, t466, t219, t427 * t461 + t268, pkin(1) * t384 - t271 + t323, 0, 0, -t177, t92, t154, t219, -t466, t177, 0.2e1 * t191 - qJDD(3) + (-t118 * t256 + t135 * t260) * t406 + t268 ((-pkin(2) * t256 + t434) * qJDD(1) + ((t111 - t138 - t407) * t256 + (-pkin(2) * qJD(2) - t108 + t392) * t260) * qJD(1)) * t251 (t118 * t260 + (t135 - t452) * t256) * t406 + t271 + t474, -t69 * pkin(2) - g(1) * t362 - g(2) * t363 - g(3) * t412 + t57 * qJ(3) - t108 * t138 + t111 * t392 - t118 * t135, -t177, t154 (-t388 + (-qJD(2) + t222) * t404) * t251, t177, t466, t219, t114 * t222 - t219 * t262 + t265 + (-t113 * t260 + t256 * t90) * t406, -t112 * t222 + t173 + (-t373 + ((-qJD(4) - t90) * t260 + (-t113 - t452) * t256) * qJD(1)) * t251 + t277 + t474 ((-t256 * t262 - t434) * qJDD(1) + ((t114 - t86 + t407) * t256 + (-t393 + t73 - t470) * t260) * qJD(1)) * t251, t42 * qJ(3) + t41 * t262 - t73 * t114 - t90 * t113 - g(1) * (-t148 + t362) - g(2) * (-t142 + t363) - g(3) * t381 + t393 * t86, t255 * t55 - t259 * t304, t491 * t259 + (t56 + t304) * t255, -t259 * t264 + t348 - t478, -t255 * t479 + t259 * t56, -t347 - t465, t256 * t285, t114 * t475 + t248 * t56 + t463 * t255 - t259 * t485 + t30 * t379 - t45 * t328, t114 * t127 - t248 * t55 + t255 * t485 + t463 * t259 - t31 * t379 + t46 * t328, t475 * t46 + t127 * t45 + (t30 * t378 - qJD(3) * t475 - t253 * t56 + t311 + (t127 * t253 + t30) * qJD(5)) * t259 + (t352 + qJD(3) * t127 - t253 * t55 + t8 + (t253 * t475 + t31) * qJD(5)) * t255 + t472, t35 * t248 - t31 * t46 - t30 * t45 + t60 * t114 - g(1) * t292 - g(2) * t293 - g(3) * t287 + t326 * qJD(3) + (-t8 * t255 - t311 * t259 + (-t255 * t31 - t259 * t30) * qJD(5)) * t253, t23 * t255 * t258 + (t255 * t396 + t333) * t82, t450 + t449 + (t439 + t441) * t397 + (-t447 + t445 + (t438 - t442) * qJD(6)) * t255, -t446 + t308 + (t315 - t480) * t255, -t24 * t254 * t255 + (-t255 * t395 - t334) * t80, -t444 + t476 + (t309 - t316) * t255, -t255 * t328 * t488 + t259 * t54, t116 * t54 - t27 * t119 - t39 * t80 + t454 * t488 + t472 * t254 + (t2 + (t253 * t80 - t254 * t27) * qJD(5) - t471 * t258) * t259 + (qJD(3) * t80 + t253 * t24 - t6 * t254 - t27 * t395 + t327 * t328) * t255, -t117 * t54 - t27 * t120 - t39 * t82 - t455 * t488 + t472 * t258 + (-t1 + (t253 * t82 - t258 * t27) * qJD(5) + t471 * t254) * t259 + (qJD(3) * t82 + t10 * t328 - t253 * t23 - t6 * t258 + t27 * t396) * t255, t10 * t119 + t116 * t23 - t117 * t24 - t120 * t327 - t454 * t82 - t455 * t80 + t330 * t397 + (qJD(6) * t331 + t1 * t254 + t2 * t258 - t471) * t255, t1 * t117 + t2 * t116 + t6 * t255 * t253 - g(1) * (-t159 * t342 + t292) - g(2) * (-t157 * t342 + t293) - t454 * t327 + t455 * t10 + (qJD(3) * t255 + t253 * t397 - t39) * t27 + (-t350 - (t260 * t342 - t459) * t251) * g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136, t92, t153, -t111 * t222 + t118 * t379 - t269, 0, 0, 0, 0, 0, 0, t136, t153, -t92, -t222 * t86 - t379 * t90 - t265, 0, 0, 0, 0, 0, 0, -t171 + (-t127 + t428) * qJD(5) + (-t367 + (-t375 + (-t127 - t403) * t260) * qJD(1)) * t251, t491, t497 + t498, -t127 * t30 - t31 * t475 - t265 - t460, 0, 0, 0, 0, 0, 0, t495 - t500, t258 * t359 + t443 + t494, -t501 * t254 + t258 * t502, t127 * t27 - t254 * t496 + t258 * t481 + t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189 + (-t380 + t387) * t251, t163 + t503 (-t249 - t250) * t427 (-t458 + (t260 * t86 + (t73 + t470) * t256) * qJD(1)) * t251 + t288 + t410, 0, 0, 0, 0, 0, 0, -t347 + t465, -t478 - t348 + (-t328 * t378 - t468) * t259, t499 * t259 + (-t56 + t304) * t255, -t255 * t311 + t259 * t8 + t326 * qJD(5) + (-t458 + (-t256 * t60 + t260 * t326) * qJD(1)) * t251 + t410, 0, 0, 0, 0, 0, 0, -t444 - t476 + (t309 + t316) * t255, t446 + t308 + (t315 + t480) * t255, t450 - t449 + (-t439 + t441) * t397 + (-t447 - t445 + (t438 + t442) * qJD(6)) * t255, -g(2) * t422 + t10 * t120 + t119 * t327 + (qJD(5) * t331 - t6) * t259 + (t27 * t328 + t270) * t255 + t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432, -t497 + t498, -t499, -t432, -t171 + (t127 + t428) * qJD(5) + (-t367 + (-t375 + (t127 - t403) * t260) * qJD(1)) * t251, t312, -t60 * t127 + t291 + t352 - t365, t30 * t328 + t475 * t60 - t290 + t311, 0, 0, t358 * t82 - t447 (-t23 - t448) * t258 + (-t24 - t437) * t254, t358 * t488 + t443 - t494, t442 * t488 - t445, t495 + t500, -t488 * t127, -pkin(5) * t24 + t127 * t327 - t19 * t488 + t254 * t307 - t258 * t272 - t31 * t80, pkin(5) * t23 + t10 * t127 + t20 * t488 + t254 * t272 + t258 * t307 - t31 * t82, t19 * t82 + t20 * t80 + ((-t24 + t433) * pkin(10) + t496) * t258 + ((qJD(6) * t80 - t23) * pkin(10) + t481) * t254 + t290, -t10 * t20 + t327 * t19 - t27 * t31 + t284 * pkin(5) + (t270 + t290) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, -t80 ^ 2 + t82 ^ 2, t502, -t457, t501, t54, -g(1) * t65 + g(2) * t487 - g(3) * t314 - t27 * t82 - t481, g(1) * t66 + g(2) * t486 + g(3) * t101 + t27 * t80 - t496, 0, 0;];
tau_reg  = t7;
