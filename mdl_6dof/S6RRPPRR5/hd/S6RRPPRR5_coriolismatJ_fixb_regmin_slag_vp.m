% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:11:02
% EndTime: 2019-03-09 09:11:26
% DurationCPUTime: 12.27s
% Computational Cost: add. (6061->685), mult. (14989->927), div. (0->0), fcn. (15352->8), ass. (0->531)
t373 = -pkin(2) - pkin(3);
t356 = pkin(4) - t373;
t365 = cos(pkin(6));
t372 = cos(qJ(2));
t364 = sin(pkin(6));
t369 = sin(qJ(2));
t607 = t364 * t369;
t280 = -pkin(1) * t365 * t372 + pkin(8) * t607;
t414 = -qJ(4) * t607 + t280;
t166 = t356 * t365 - t414;
t370 = cos(qJ(6));
t368 = sin(qJ(5));
t371 = cos(qJ(5));
t274 = t365 * t371 + t368 * t607;
t585 = t371 * t274;
t461 = -t585 / 0.2e1;
t683 = 0.2e1 * t370 * t461;
t522 = t371 * qJD(2);
t527 = t274 * qJD(1);
t410 = t522 + t527;
t606 = t364 * t372;
t682 = t410 * t606;
t555 = qJD(1) * t364;
t484 = t372 * t555;
t425 = qJD(5) + t484;
t681 = t425 * t274;
t350 = t365 * t368;
t276 = t371 * t607 - t350;
t367 = sin(qJ(6));
t505 = t370 * t606;
t199 = t276 * t367 - t505;
t598 = t368 * t199;
t178 = t598 / 0.2e1;
t506 = t368 * t606;
t439 = t506 / 0.2e1;
t297 = t370 * t439;
t142 = t367 * t274;
t471 = t142 / 0.2e1;
t436 = t371 * t471;
t680 = t178 + t436 + t297;
t600 = t367 * t368;
t469 = t600 / 0.2e1;
t228 = t276 * t469;
t679 = t228 + t436;
t231 = t367 * t461;
t470 = -t600 / 0.2e1;
t678 = t276 * t470 + t231;
t596 = t368 * t370;
t467 = -t596 / 0.2e1;
t240 = t276 * t467;
t292 = t367 * t439;
t147 = t276 * t370;
t507 = t367 * t606;
t201 = t507 + t147;
t630 = t201 * t368;
t480 = -t630 / 0.2e1;
t677 = t240 + t292 + t480;
t429 = t274 * pkin(5) - t276 * pkin(10);
t676 = t429 + t166;
t358 = t367 ^ 2;
t361 = t370 ^ 2;
t337 = t361 - t358;
t458 = qJD(5) * t337;
t620 = t274 * t368;
t661 = t371 / 0.2e1;
t403 = t276 * t661 - t620 / 0.2e1;
t675 = t403 * qJD(5);
t342 = t368 * t522;
t455 = qJD(1) * t403 - t342;
t401 = qJD(2) * t403 + t276 * t527;
t674 = t274 ^ 2;
t336 = qJ(4) * t606;
t353 = t365 * qJ(3);
t518 = pkin(8) * t606;
t660 = pkin(1) * t369;
t188 = t518 - t336 + t353 + (-pkin(9) + t660) * t365;
t335 = qJ(3) * t607;
t565 = -pkin(2) * t606 - t335;
t262 = -pkin(1) * t364 + t565;
t208 = pkin(3) * t606 - t262;
t430 = pkin(4) * t372 - pkin(9) * t369;
t378 = t364 * t430 + t208;
t80 = t188 * t368 - t371 * t378;
t70 = -pkin(5) * t606 + t80;
t673 = t70 / 0.2e1;
t584 = t371 * t372;
t503 = t367 * t584;
t249 = (t369 * t370 + t503) * t364;
t672 = -t249 / 0.2e1;
t595 = t369 * t367;
t250 = (t370 * t584 - t595) * t364;
t671 = -t250 / 0.2e1;
t670 = -t274 / 0.2e1;
t669 = t274 / 0.2e1;
t668 = t276 / 0.2e1;
t657 = t371 * pkin(10);
t658 = t368 * pkin(5);
t321 = t657 - t658;
t667 = t321 / 0.2e1;
t366 = qJ(3) - pkin(9);
t666 = -t366 / 0.2e1;
t665 = -t368 / 0.2e1;
t664 = t368 / 0.2e1;
t663 = t370 / 0.2e1;
t662 = -t371 / 0.2e1;
t659 = t274 * pkin(10);
t656 = -t70 + t80;
t655 = t367 * t80;
t654 = t370 * t80;
t586 = t371 * t188;
t71 = t586 + t368 * t208 + (t372 * pkin(10) + t368 * t430) * t364;
t25 = t367 * t71 - t370 * t676;
t174 = pkin(5) * t276 + t659;
t592 = t370 * t174;
t81 = t368 * t378 + t586;
t5 = t81 * t199 - t25 * t276 + (t367 * t656 + t592) * t274;
t653 = t5 * qJD(1);
t26 = t367 * t676 + t370 * t71;
t603 = t367 * t174;
t6 = t81 * t201 - t26 * t276 + (t370 * t656 - t603) * t274;
t652 = t6 * qJD(1);
t519 = t365 * t660;
t137 = -t519 + t336 + (-pkin(8) - t321) * t606;
t593 = t370 * t137;
t160 = (-t356 * t369 + t366 * t372) * t364;
t152 = t368 * t160;
t220 = t371 * t414;
t569 = -t220 + t152;
t100 = -pkin(10) * t607 + t569;
t605 = t367 * t100;
t39 = t593 - t605;
t587 = t371 * t160;
t597 = t368 * t414;
t99 = pkin(5) * t607 - t587 - t597;
t7 = t199 * t99 + t249 * t70 - t25 * t506 + t274 * t39;
t651 = t7 * qJD(1);
t594 = t370 * t100;
t604 = t367 * t137;
t40 = t594 + t604;
t8 = t201 * t99 + t250 * t70 - t26 * t506 - t274 * t40;
t650 = t8 * qJD(1);
t649 = t99 * t367;
t648 = t99 * t370;
t13 = -t199 * t70 + t25 * t274;
t647 = qJD(1) * t13;
t14 = t201 * t70 - t26 * t274;
t646 = qJD(1) * t14;
t34 = t166 * t274 - t606 * t80;
t645 = qJD(1) * t34;
t35 = t166 * t276 - t606 * t81;
t644 = qJD(1) * t35;
t583 = t372 * qJ(3);
t243 = (t373 * t369 + t583) * t364;
t65 = -t414 * t365 + (t208 * t372 + t243 * t369) * t364;
t643 = qJD(1) * t65;
t281 = t518 + t519;
t244 = t281 - t336;
t513 = t208 * t607;
t66 = -t243 * t606 + t244 * t365 + t513;
t642 = qJD(1) * t66;
t619 = t674 * t367;
t635 = t199 * t276;
t77 = -t619 + t635;
t641 = qJD(1) * t77;
t618 = t674 * t370;
t632 = t201 * t276;
t78 = -t618 - t632;
t640 = qJD(1) * t78;
t79 = -t618 + t632;
t639 = qJD(1) * t79;
t452 = t199 * t506;
t626 = t249 * t274;
t94 = -t452 + t626;
t638 = qJD(1) * t94;
t451 = t201 * t506;
t624 = t250 * t274;
t97 = -t451 + t624;
t637 = qJD(1) * t97;
t19 = -t244 * t274 + (t80 * t369 + (t587 + (t166 + t414) * t368) * t372) * t364;
t636 = t19 * qJD(1);
t634 = t199 * t371;
t20 = -t166 * t364 * t584 + t244 * t276 + t569 * t606 - t607 * t81;
t633 = t20 * qJD(1);
t631 = t201 * t367;
t629 = t201 * t370;
t628 = t201 * t371;
t428 = pkin(5) * t371 + pkin(10) * t368;
t398 = t428 + t356;
t588 = t370 * t371;
t501 = t366 * t588;
t222 = t367 * t398 + t501;
t627 = t222 * t276;
t625 = t249 * t371;
t623 = t250 * t367;
t622 = t250 * t371;
t195 = t365 * t373 + t414;
t261 = t281 + t353;
t205 = t261 - t336;
t27 = t195 * t244 - t205 * t414 + t208 * t243;
t621 = t27 * qJD(1);
t617 = t276 * t368;
t616 = t280 * t365;
t615 = t281 * t365;
t181 = t634 / 0.2e1;
t146 = t370 * t274;
t478 = t628 / 0.2e1;
t399 = -t146 * t368 + t478;
t29 = (t181 + t671) * t370 + (t249 / 0.2e1 + t399) * t367;
t614 = t29 * qJD(1);
t377 = t166 * t662 + t356 * t670 + t366 * t439;
t460 = -t152 / 0.2e1 + t220 / 0.2e1;
t30 = t377 - t460;
t613 = t30 * qJD(1);
t474 = -t606 / 0.2e1;
t438 = t366 * t474;
t477 = t356 * t668;
t32 = t477 + (t438 - t160 / 0.2e1) * t371 + (-t166 / 0.2e1 - t414 / 0.2e1) * t368;
t612 = t32 * qJD(1);
t355 = t364 ^ 2;
t363 = t372 ^ 2;
t611 = t355 * t363;
t610 = t355 * t372;
t359 = t368 ^ 2;
t609 = t359 * t367;
t36 = -t205 * t607 + (t244 * t369 + (t195 - t414) * t372) * t364;
t608 = t36 * qJD(1);
t602 = t367 * t199;
t601 = t367 * t321;
t599 = t367 * t371;
t591 = t370 * t199;
t590 = t370 * t321;
t589 = t370 * t366;
t468 = -t598 / 0.2e1;
t391 = t297 + t468 + t231;
t43 = t391 + t679;
t582 = t43 * qJD(1);
t263 = -pkin(2) * t365 + t280;
t279 = (t369 * pkin(2) - t583) * t364;
t50 = -t261 * t280 + t262 * t279 + t263 * t281;
t581 = t50 * qJD(1);
t52 = -t199 * t250 - t201 * t249;
t580 = t52 * qJD(1);
t421 = t591 + t631;
t55 = t421 * t274;
t579 = t55 * qJD(1);
t56 = ((t263 - t280) * t372 + (-t261 + t281) * t369) * t364;
t578 = t56 * qJD(1);
t463 = -t588 / 0.2e1;
t392 = t201 * t463 + t361 * t620 / 0.2e1;
t76 = -t623 / 0.2e1 + t392;
t577 = t76 * qJD(1);
t466 = t596 / 0.2e1;
t232 = t274 * t466;
t450 = t364 * t503;
t475 = t607 / 0.2e1;
t567 = t450 / 0.2e1 + t370 * t475;
t86 = t232 + t478 + t567;
t576 = t86 * qJD(1);
t464 = -t146 / 0.2e1;
t233 = t368 * t464;
t476 = -t607 / 0.2e1;
t566 = -t450 / 0.2e1 + t370 * t476;
t87 = t233 + t478 + t566;
t575 = t87 * qJD(1);
t462 = t588 / 0.2e1;
t388 = (t372 * t462 - t595 / 0.2e1) * t364;
t437 = t274 * t470;
t375 = t388 + t437;
t88 = t181 + t375;
t574 = t88 * qJD(1);
t180 = -t634 / 0.2e1;
t89 = t180 + t375;
t573 = t89 * qJD(1);
t95 = -t452 - t626;
t572 = t95 * qJD(1);
t96 = t451 + t624;
t571 = t96 * qJD(1);
t183 = t630 / 0.2e1;
t570 = t183 + t292;
t362 = t371 ^ 2;
t564 = t359 + t362;
t338 = t362 - t359;
t102 = (t195 * t369 + t205 * t372) * t364;
t563 = qJD(1) * t102;
t108 = -t616 + (-t262 * t372 - t279 * t369) * t364;
t562 = qJD(1) * t108;
t110 = t619 + t635;
t561 = qJD(1) * t110;
t111 = t205 * t365 + t513;
t560 = qJD(1) * t111;
t211 = t262 * t607;
t121 = t261 * t365 - t211;
t559 = qJD(1) * t121;
t510 = t368 * t611;
t512 = t274 * t607;
t190 = t510 - t512;
t558 = qJD(1) * t190;
t509 = t371 * t611;
t511 = t276 * t607;
t192 = t509 - t511;
t557 = qJD(1) * t192;
t556 = qJD(1) * t201;
t554 = qJD(2) * t280;
t553 = qJD(2) * t364;
t552 = qJD(2) * t365;
t551 = qJD(3) * t367;
t550 = qJD(3) * t368;
t549 = qJD(3) * t371;
t548 = qJD(4) * t364;
t547 = qJD(5) * t367;
t546 = qJD(5) * t368;
t545 = qJD(5) * t370;
t544 = qJD(5) * t371;
t543 = qJD(5) * t372;
t542 = qJD(6) * t274;
t541 = qJD(6) * t367;
t540 = qJD(6) * t370;
t539 = qJD(6) * t371;
t241 = t276 * t466;
t440 = t368 * t474;
t293 = t367 * t440;
t105 = t293 + t241 + t480;
t538 = t105 * qJD(1);
t107 = t279 * t606 - t211 + t615;
t537 = t107 * qJD(1);
t307 = t359 * t505;
t114 = -t307 - t622;
t536 = t114 * qJD(1);
t116 = -t585 - t617;
t122 = t116 * t606;
t535 = t122 * qJD(1);
t534 = t146 * qJD(1);
t306 = t359 * t507;
t161 = -t306 - t625;
t533 = t161 * qJD(1);
t520 = -pkin(2) / 0.2e1 - pkin(3) / 0.2e1;
t187 = (t583 + (t373 / 0.2e1 + t520) * t369) * t364;
t532 = t187 * qJD(1);
t189 = t510 + t512;
t531 = t189 * qJD(1);
t191 = t509 + t511;
t530 = t191 * qJD(1);
t209 = t355 * t660 + t615;
t529 = t209 * qJD(1);
t210 = pkin(1) * t610 - t616;
t528 = t210 * qJD(1);
t270 = t276 * qJD(5);
t360 = t369 ^ 2;
t288 = (t360 + t363) * t355;
t526 = t288 * qJD(1);
t289 = (-t360 + t363) * t355;
t525 = t289 * qJD(1);
t352 = t365 * qJD(3);
t524 = t368 * qJD(2);
t523 = t368 * qJD(6);
t521 = t372 * qJD(3);
t517 = pkin(5) * t199 / 0.2e1;
t516 = -pkin(5) * t201 / 0.2e1;
t515 = pkin(5) * t671;
t514 = t673 - t80 / 0.2e1;
t508 = t369 * t610;
t504 = t366 * t599;
t502 = t368 * t589;
t500 = t70 * t663;
t499 = qJ(3) * t552;
t498 = t201 * t527;
t496 = t372 * t553;
t495 = t370 * t524;
t494 = t369 * t548;
t493 = t372 * t548;
t492 = t367 * t270;
t491 = t364 * t543;
t490 = t367 * t546;
t489 = t367 * t545;
t488 = t368 * t545;
t487 = t368 * t543;
t486 = t367 * t539;
t344 = t370 * t539;
t485 = t369 * t553;
t333 = t369 * t555;
t483 = t364 * t521;
t482 = t367 * t540;
t481 = t368 * t544;
t479 = -t628 / 0.2e1;
t473 = t201 * t666;
t472 = t366 * t661;
t465 = -t594 / 0.2e1;
t325 = t366 * t600;
t459 = t325 + t590;
t341 = t367 * t522;
t456 = qJD(1) * t142 + t341;
t345 = qJD(1) * t365 + qJD(2);
t454 = qJD(6) + t527;
t453 = qJD(2) * t356 - qJD(3);
t449 = t365 * t483;
t448 = t371 * t491;
t447 = t367 * t488;
t446 = qJD(2) * t508;
t445 = t365 * t484;
t444 = t368 * t484;
t318 = t371 * t484;
t443 = t368 * t333;
t442 = t367 * t495;
t441 = t371 * t333;
t433 = t514 * t367;
t432 = t514 * t370;
t431 = t659 / 0.2e1 + t174 / 0.2e1;
t427 = 0.2e1 * t442;
t426 = -t344 + t490;
t298 = t370 * t440;
t221 = -t370 * t398 + t504;
t384 = t221 * t668 + t459 * t670;
t406 = pkin(5) * t672 - t648 / 0.2e1;
t420 = pkin(10) * t474 + t81 / 0.2e1;
t1 = (-t592 / 0.2e1 + t199 * t666 + t433) * t371 + (-t25 / 0.2e1 + (t366 * t669 + t420) * t367) * t368 + t384 + t406;
t112 = t459 * t371 + (t221 - 0.2e1 * t504) * t368;
t424 = -t1 * qJD(1) + t112 * qJD(2);
t113 = -t222 * t368 + (t502 + t601) * t371;
t2 = t515 + t627 / 0.2e1 + (t99 / 0.2e1 + t274 * t667) * t367 + (t603 / 0.2e1 + t473 + t432) * t371 + (-t26 / 0.2e1 + t420 * t370) * t368;
t423 = -t2 * qJD(1) - t113 * qJD(2);
t159 = -t222 * t371 - t359 * t589;
t402 = -t605 / 0.2e1 + t593 / 0.2e1;
t404 = t222 * t669 + t26 * t661;
t9 = (t473 + t500) * t368 + t402 + t404;
t422 = -qJD(1) * t9 + qJD(2) * t159;
t379 = t178 * t366 + t221 * t670 + t25 * t662;
t10 = t465 + (-t137 / 0.2e1 + t70 * t665) * t367 + t379;
t158 = -t221 * t371 - t366 * t609;
t419 = -qJD(1) * t10 - qJD(2) * t158;
t301 = t564 * t367;
t63 = t298 + t468 + (t585 - t617 / 0.2e1) * t367;
t418 = -qJD(1) * t63 - qJD(2) * t301;
t302 = t338 * t367;
t44 = t391 + t678;
t417 = -qJD(1) * t44 + qJD(2) * t302;
t303 = t564 * t370;
t42 = t370 * t585 + t677;
t416 = -qJD(1) * t42 - qJD(2) * t303;
t304 = t338 * t370;
t41 = (t585 + t617 / 0.2e1) * t370 + t570;
t415 = qJD(1) * t41 + qJD(2) * t304;
t413 = (qJD(6) + t522) * t370;
t123 = -t276 ^ 2 + t674;
t412 = qJD(1) * t123 - qJD(2) * t116;
t411 = qJD(1) * t116 - qJD(2) * t338;
t409 = qJD(1) * t276 - t524;
t308 = t355 * t360 + t365 ^ 2;
t268 = qJD(1) * t308 + t552;
t408 = t657 / 0.2e1 - t658 / 0.2e1;
t407 = -t276 * t484 - t270;
t271 = t371 * t475 - t350 / 0.2e1;
t405 = t271 * qJD(1) - t524 / 0.2e1;
t400 = -qJD(1) * t147 + t495;
t397 = -t523 / 0.2e1 + t455;
t396 = t667 + t408;
t395 = -t486 - t488;
t51 = (-t602 + t629) * t368;
t67 = t199 ^ 2 - t201 ^ 2;
t394 = qJD(1) * t67 + qJD(2) * t51 - qJD(5) * t421;
t393 = t409 * t606;
t15 = t367 * t431 + t432 + t517;
t197 = t396 * t367;
t390 = pkin(5) * t545 - qJD(1) * t15 - qJD(2) * t197;
t17 = -t370 * t431 + t433 + t516;
t198 = t396 * t370;
t389 = pkin(5) * t547 - qJD(1) * t17 + qJD(2) * t198;
t103 = (-t591 / 0.2e1 - t631 / 0.2e1) * t368;
t109 = -t602 / 0.2e1 + t629 / 0.2e1;
t387 = qJD(2) * t103 - qJD(5) * t109 + t199 * t556;
t283 = (t358 / 0.2e1 - t361 / 0.2e1) * t368;
t386 = qJD(1) * t109 + qJD(2) * t283 + t489;
t385 = qJD(6) * t271 + t401;
t300 = t337 * t359;
t382 = qJD(1) * t51 - qJD(2) * t300 + 0.2e1 * t447;
t381 = -qJD(1) * t421 + t427 + t458;
t380 = qJD(2) * t370 * t609 + qJD(1) * t103 - qJD(5) * t283;
t376 = t364 * ((t356 * t372 + t366 * t369) * qJD(2) - t521);
t374 = t274 * t469 + t388;
t357 = qJ(3) * qJD(3);
t351 = -t546 / 0.2e1;
t349 = qJ(3) * t352;
t343 = t367 * t523;
t322 = qJD(2) * t476;
t319 = t368 * t485;
t317 = qJD(1) * t508;
t316 = qJD(3) * t508;
t311 = t345 * qJ(3);
t310 = t365 * t333;
t309 = 0.2e1 * t368 * t482;
t299 = t308 * qJD(3);
t278 = -t318 - t544;
t277 = t425 * t368;
t273 = t283 * qJD(6);
t272 = t281 * qJD(2);
t266 = t345 * t606;
t265 = -t310 - t485;
t264 = qJD(5) * t475 + t317;
t214 = t373 * t476 + t520 * t607;
t203 = t409 * t367;
t196 = qJD(2) * t439 + qJD(5) * t271;
t157 = t325 + t590 / 0.2e1 - t408 * t370;
t156 = t502 - t601 / 0.2e1 + t408 * t367;
t131 = t146 * qJD(6);
t120 = -t370 * t522 - t534;
t117 = t413 + t534;
t115 = t116 * qJD(5);
t106 = t240 + t183 + t293;
t104 = t109 * qJD(6);
t101 = t103 * qJD(6);
t93 = t233 + t479 + t567;
t92 = t232 + t479 + t566;
t91 = t181 + t374;
t90 = t180 + t374;
t75 = t623 / 0.2e1 + t392;
t64 = -t367 * t585 + t178 + t228 + t298;
t53 = t421 * qJD(6);
t49 = t51 * qJD(6);
t48 = t683 + t241 + t570;
t47 = t683 + t677;
t46 = t678 + t680;
t45 = t679 + t680;
t33 = t371 * t438 + t477 + t166 * t665 + t597 / 0.2e1 + t587 / 0.2e1;
t31 = t377 + t460;
t28 = t199 * t462 + t250 * t663 + (t399 + t672) * t367;
t18 = pkin(10) * t464 + t516 + t367 * t673 + t655 / 0.2e1 + t592 / 0.2e1;
t16 = pkin(10) * t471 + t517 + t500 + t654 / 0.2e1 - t603 / 0.2e1;
t12 = t183 * t366 + t467 * t70 + t402 - t404;
t11 = t70 * t469 + t465 - t604 / 0.2e1 - t379;
t4 = (-t502 + t601) * t670 - t627 / 0.2e1 + (t603 - t654) * t662 + t26 * t664 + t201 * t472 + t366 * t233 + t81 * t467 + t70 * t463 + pkin(10) * t298 + t515 + t649 / 0.2e1;
t3 = (t592 + t655) * t661 + t25 * t664 + t199 * t472 + t366 * t437 + t81 * t470 - t70 * t599 / 0.2e1 + pkin(10) * t293 - t384 + t406;
t21 = [0, 0, 0, t446, t289 * qJD(2), t365 * t496, -t365 * t485, 0, -t209 * qJD(2), -t210 * qJD(2), -qJD(2) * t107 + t316, qJD(2) * t56 + t449, qJD(2) * t108 + t299, qJD(2) * t50 + qJD(3) * t121, -qJD(2) * t66 + t365 * t494 + t316, qJD(2) * t65 - t365 * t493 + t299, -qJD(2) * t36 + qJD(4) * t288 - t449, qJD(2) * t27 + qJD(3) * t111 - qJD(4) * t102 (-qJD(5) * t274 + t371 * t496) * t276, qJD(2) * t122 + qJD(5) * t123, qJD(2) * t192 - t274 * t491, -qJD(2) * t190 - t276 * t491, -t446, qJD(2) * t19 + qJD(4) * t189 + qJD(5) * t35 + t276 * t483, -qJD(2) * t20 + qJD(4) * t191 - qJD(5) * t34 - t274 * t483 (qJD(2) * t250 - qJD(6) * t199 - t274 * t545) * t201, qJD(2) * t52 + qJD(5) * t55 + qJD(6) * t67, qJD(2) * t96 + qJD(5) * t79 - t199 * t542, qJD(2) * t95 - qJD(5) * t77 - t201 * t542 (t368 * t496 + t270) * t274, qJD(2) * t7 - qJD(3) * t110 + qJD(4) * t94 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t8 + qJD(3) * t78 + qJD(4) * t97 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, t317, t525, t266, t265, 0, -t272 - t529, -t528 + t554, -t272 - t537, qJD(2) * t565 + t483 + t578, t352 - t554 + t562, t581 + (-pkin(2) * t281 - qJ(3) * t280) * qJD(2) + t261 * qJD(3), -qJD(2) * t244 - t642, -qJD(2) * t414 + t352 + t643, -t608 + (-t373 * t606 + t335) * qJD(2) - t483, t621 + (-qJ(3) * t414 + t244 * t373) * qJD(2) + t205 * qJD(3) + t214 * qJD(4), t371 * t393 - t675, -t338 * t496 - t115 + t535, t319 + t557, t371 * t485 - t558, -t264, t33 * qJD(5) - t244 * t522 + t368 * t376 + t636, t31 * qJD(5) + t244 * t524 + t371 * t376 - t633, t75 * qJD(5) - t101 + (-t495 + t556) * t250, t580 + t28 * qJD(5) + t49 + (t249 * t370 + t623) * t524, t571 + (-t307 + t622) * qJD(2) + t47 * qJD(5) + t90 * qJD(6), t572 + (t306 - t625) * qJD(2) + t45 * qJD(5) + t92 * qJD(6), t675 + (qJD(6) / 0.2e1 + t410) * t506, t39 * t522 + t651 + t64 * qJD(3) + t3 * qJD(5) + t12 * qJD(6) + (-t221 * t606 + t249 * t366 - t649) * t524, -t40 * t522 + t650 + t48 * qJD(3) + t4 * qJD(5) + t11 * qJD(6) + (-t222 * t606 + t250 * t366 - t648) * t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, t266, t268, qJD(2) * t261 + t559, t317, t268, -t266, qJD(2) * t205 + t560, 0, 0, 0, 0, 0, t393, -t682, 0, 0, 0, 0, 0, qJD(2) * t64 - t561, qJD(2) * t48 + t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310, -t445, t526, qJD(2) * t214 - t563, 0, 0, 0, 0, 0, t531, t530, 0, 0, 0, 0, 0, qJD(5) * t46 + qJD(6) * t93 + t638, qJD(5) * t106 + qJD(6) * t91 + t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, t412, -t681, t407, t322, qJD(2) * t33 - qJD(5) * t81 + t644, qJD(2) * t31 + qJD(5) * t80 - t645, t75 * qJD(2) + t104 + (-t547 - t556) * t146, t28 * qJD(2) - t274 * t458 - t53 + t579, qJD(2) * t47 + t492 + t639, qJD(2) * t45 + t270 * t370 - t641, t385, t653 + t3 * qJD(2) + t46 * qJD(4) + (t367 * t429 - t81 * t370) * qJD(5) + t18 * qJD(6), t652 + t4 * qJD(2) + t106 * qJD(4) + (t81 * t367 + t370 * t429) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t387, t394, t90 * qJD(2) - t199 * t454, t92 * qJD(2) - t201 * t454, t196, qJD(2) * t12 + qJD(4) * t93 + qJD(5) * t18 - qJD(6) * t26 + t646, qJD(2) * t11 + qJD(4) * t91 + qJD(5) * t16 + qJD(6) * t25 + t647; 0, 0, 0, -t317, -t525, -t445, t310, 0, t529, t528, t537, -t578, t352 - t562, t349 - t581, t494 + t642, t352 - t493 - t643, t608, -qJD(4) * t187 + t349 - t621, -t276 * t318 - t675, -t115 - t535, -t448 - t557, t364 * t487 + t558, t264, qJD(5) * t32 + t371 * t494 - t636, qJD(5) * t30 - t368 * t494 + t633, qJD(5) * t76 - t250 * t556 - t101, qJD(5) * t29 + t49 - t580, -qJD(5) * t41 - qJD(6) * t88 - t571, -qJD(5) * t44 - qJD(6) * t87 - t572, t675 + (-t527 - qJD(6) / 0.2e1) * t506, -qJD(3) * t63 - qJD(4) * t161 - qJD(5) * t1 - qJD(6) * t9 - t651, -qJD(3) * t42 - qJD(4) * t114 - qJD(5) * t2 - qJD(6) * t10 - t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t357, 0, qJD(3), 0, t357, t481, t338 * qJD(5), 0, 0, 0, -t356 * t546, -t356 * t544, -t359 * t482 + t361 * t481, -qJD(6) * t300 - 0.2e1 * t371 * t447, -qJD(5) * t304 + t368 * t486, qJD(5) * t302 + t344 * t368, -t481, -qJD(3) * t301 + qJD(5) * t112 + qJD(6) * t159, -qJD(3) * t303 - qJD(5) * t113 - qJD(6) * t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345, t311, 0, t345, 0, t311, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t333, -t484, 0, -t532, 0, 0, 0, 0, 0, t441, -t443, 0, 0, 0, 0, 0, -t533, -t536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t455, -t411, t278, t277, t333 / 0.2e1, -t356 * t524 - t366 * t544 + t612, -t356 * t522 + t366 * t546 + t613, t577 + t273 + (t361 * t524 - t489) * t371, t614 + t309 + (-0.2e1 * t442 - t458) * t371, -t415 - t490, t417 - t488, t397 (t367 * t428 - t501) * qJD(5) + t157 * qJD(6) + t424 (t370 * t428 + t504) * qJD(5) + t156 * qJD(6) + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, t382, t342 * t367 + t343 - t574, t368 * t413 - t575, qJD(1) * t440 + t351, qJD(5) * t157 - qJD(6) * t222 + t422, qJD(5) * t156 + qJD(6) * t221 + t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t445, -t268, -t499 - t559, -t317, -t268, t445, -t494 - t499 - t560, 0, 0, 0, 0, 0, t407, t681, 0, 0, 0, 0, 0, qJD(2) * t63 - qJD(5) * t147 + t274 * t541 + t561, qJD(2) * t42 + t131 + t492 - t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t311, 0, -t345, 0, -t311, 0, 0, 0, 0, 0, t546, t544, 0, 0, 0, 0, 0, -t395 - t418, -t416 - t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, t410, 0, 0, 0, 0, 0, t400, t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367 * t454 + t341, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265, t266, -t526, qJD(2) * t187 + qJD(3) * t607 + t563, 0, 0, 0, 0, 0, -t531 + (-t369 * t522 - t487) * t364, t319 - t448 - t530, 0, 0, 0, 0, 0, qJD(2) * t161 - qJD(5) * t43 - qJD(6) * t86 - t638, qJD(2) * t114 - qJD(5) * t105 - qJD(6) * t89 - t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, t484, 0, t532, 0, 0, 0, 0, 0, -t441, t443, 0, 0, 0, 0, 0, t533, t536; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, t278, 0, 0, 0, 0, 0, t395 - t582, t426 - t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367 * t544 - t370 * t523 - t576, -t370 * t544 + t343 - t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, -t412, t682, t393, t322, -qJD(2) * t32 + qJD(3) * t276 + t368 * t493 - t644, -qJD(2) * t30 - qJD(3) * t274 + t371 * t493 + t645, -qJD(2) * t76 + t370 * t498 + t104, -qJD(2) * t29 - t53 - t579, qJD(2) * t41 + t131 - t639, qJD(2) * t44 - qJD(6) * t142 + t641, -t385, qJD(2) * t1 + qJD(3) * t147 + qJD(4) * t43 + qJD(6) * t17 - t653, qJD(2) * t2 + qJD(4) * t105 + qJD(6) * t15 - t276 * t551 - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t411, t318, -t444, -t333 / 0.2e1, t368 * t453 - t612, t371 * t453 - t613, -t342 * t361 + t273 - t577, t371 * t427 + t309 - t614, t344 + t415, -t417 - t486, -t397, -qJD(6) * t198 - t370 * t550 - t424, qJD(6) * t197 + t367 * t550 - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, -t410, 0, 0, 0, 0, 0, -t400, -t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, t318, 0, 0, 0, 0, 0, t582, t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, t337 * qJD(6), 0, 0, 0, -pkin(5) * t541, -pkin(5) * t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t386, t381, t117, -t456 - t541, -t405, -pkin(10) * t540 - t389, pkin(10) * t541 - t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, -t394, qJD(2) * t88 - qJD(5) * t146 + t199 * t527, qJD(2) * t87 + qJD(5) * t142 + t498, t196, qJD(2) * t9 + qJD(4) * t86 - qJD(5) * t17 - t274 * t551 - t646, qJD(2) * t10 - qJD(3) * t146 + qJD(4) * t89 - qJD(5) * t15 - t647; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, -t382, t574 + (-t367 * t524 - t545) * t371, t575 + (-t495 + t547) * t371, qJD(1) * t439 + t351, qJD(5) * t198 - t367 * t549 - t422, -qJD(5) * t197 - t370 * t549 - t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367 * t527 - t341, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t576, t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, -t381, t120, t456, t405, t389, t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
