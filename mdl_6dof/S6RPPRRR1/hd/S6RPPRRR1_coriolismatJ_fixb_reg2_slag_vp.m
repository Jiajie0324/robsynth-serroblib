% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,d6,theta2,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:18:47
% EndTime: 2019-03-09 02:19:04
% DurationCPUTime: 13.79s
% Computational Cost: add. (19948->491), mult. (36700->653), div. (0->0), fcn. (43153->10), ass. (0->402)
t536 = qJD(4) + qJD(5);
t414 = cos(pkin(11));
t481 = sin(pkin(10)) * pkin(1) + qJ(3);
t458 = pkin(7) + t481;
t439 = t414 * t458;
t413 = sin(pkin(11));
t440 = t413 * t458;
t671 = sin(qJ(4));
t673 = cos(qJ(4));
t343 = t439 * t671 + t440 * t673;
t392 = -t413 * t673 - t414 * t671;
t275 = t392 * pkin(8) - t343;
t344 = t439 * t673 - t440 * t671;
t391 = -t413 * t671 + t414 * t673;
t276 = t391 * pkin(8) + t344;
t416 = sin(qJ(5));
t672 = cos(qJ(5));
t78 = -t416 * t275 - t276 * t672;
t748 = t536 * t78;
t417 = cos(qJ(6));
t363 = t391 * t672 + t392 * t416;
t630 = t363 ^ 2;
t382 = t672 * t392;
t616 = t416 * t391;
t698 = -t382 + t616;
t727 = t698 ^ 2;
t729 = t727 - t630;
t743 = t729 * t417;
t747 = qJD(1) * t743;
t415 = sin(qJ(6));
t744 = t729 * t415;
t746 = qJD(1) * t744;
t715 = t698 * t415;
t339 = t715 / 0.2e1;
t507 = -t715 / 0.2e1;
t742 = t507 + t339;
t745 = t742 * qJD(3);
t412 = t417 ^ 2;
t719 = t412 * t363;
t330 = t719 / 0.2e1;
t411 = t415 ^ 2;
t720 = t411 * t363;
t738 = -t720 / 0.2e1;
t488 = t330 + t738;
t685 = -t719 / 0.2e1;
t482 = t685 + t738;
t487 = -t382 / 0.2e1;
t697 = t487 + t616 / 0.2e1;
t706 = t698 * qJD(1);
t736 = t363 * t706;
t741 = qJD(6) * t697 - t736;
t740 = t729 * qJD(1);
t712 = t78 * t417;
t688 = t712 / 0.2e1;
t534 = t672 * pkin(4);
t405 = -t534 - pkin(5);
t716 = t698 * t405;
t739 = t716 / 0.2e1;
t718 = t417 * t363;
t336 = -t718 / 0.2e1;
t724 = t698 * pkin(5);
t737 = t724 / 0.2e1;
t161 = t275 * t672 - t276 * t416;
t643 = t161 * t78;
t735 = t415 * t161;
t734 = t417 * t161;
t603 = t411 + t412;
t725 = t363 * pkin(9);
t733 = t603 * t725;
t408 = qJD(6) * t417;
t402 = t415 * t408;
t704 = -0.2e1 * t698;
t298 = t402 * t704;
t618 = t415 * t417;
t520 = qJD(1) * t618;
t489 = t698 * t520;
t723 = t363 * t489;
t732 = t298 - 0.2e1 * t723;
t731 = t298 + 0.2e1 * t723;
t233 = -t720 - t719;
t730 = -t720 + t719;
t245 = t724 - t725;
t466 = -t161 * t363 - t698 * t78;
t728 = t536 * t161;
t726 = t363 / 0.2e1;
t681 = t698 / 0.2e1;
t670 = pkin(9) * t698;
t669 = t78 * pkin(5);
t722 = t363 * t698;
t663 = t416 * pkin(4);
t404 = pkin(9) + t663;
t721 = t404 * t698;
t393 = -cos(pkin(10)) * pkin(1) - pkin(2) - t414 * pkin(3);
t370 = -pkin(4) * t391 + t393;
t485 = -pkin(5) * t363 - t670;
t424 = t370 + t485;
t713 = t78 * t415;
t90 = -t417 * t424 - t713;
t91 = t415 * t424 - t712;
t717 = (t415 * t91 - t417 * t90) * t363;
t711 = t536 * t363;
t678 = t411 / 0.2e1;
t211 = (t678 - t412 / 0.2e1) * t698;
t702 = t536 * t618;
t172 = -t211 * qJD(1) + t702;
t710 = qJD(3) * t363;
t708 = t363 * qJD(1);
t707 = t697 * qJD(1);
t664 = t392 * pkin(4);
t181 = -t664 + t245;
t621 = t415 * t181;
t105 = t734 + t621;
t650 = t105 * t417;
t614 = t417 * t181;
t104 = t614 - t735;
t653 = t104 * t415;
t449 = t650 / 0.2e1 - t653 / 0.2e1;
t705 = t449 * pkin(9) + t669 / 0.2e1;
t215 = t415 * t363;
t677 = -t415 / 0.2e1;
t504 = t363 * t677;
t217 = -t215 / 0.2e1 + t504;
t196 = t217 * qJD(6);
t498 = 0.2e1 * t681;
t228 = t498 * t417;
t584 = qJD(4) * t417;
t604 = qJD(5) * t228 + t584 * t698;
t701 = t196 - t604;
t683 = -t363 / 0.2e1;
t500 = t683 + t726;
t216 = t500 * t415;
t197 = t216 * qJD(6);
t499 = t681 - t698 / 0.2e1;
t229 = t499 * t417;
t207 = t229 * qJD(5);
t700 = -t207 + t197;
t400 = t413 ^ 2 + t414 ^ 2;
t658 = t91 * t417;
t659 = t90 * t415;
t451 = t658 / 0.2e1 + t659 / 0.2e1;
t502 = t718 / 0.2e1;
t676 = t415 / 0.2e1;
t186 = t415 * t502 + t676 * t718;
t563 = t211 * qJD(6);
t696 = -t186 * qJD(5) + t563;
t695 = -t186 * qJD(4) + t563;
t187 = t500 * t618;
t694 = qJD(5) * t187 + t563;
t693 = -qJD(4) * t187 + t563;
t565 = t187 * qJD(1);
t692 = t565 - t402;
t691 = t565 + t402;
t108 = t211 * t536 + t520 * t727;
t401 = t412 - t411;
t256 = t401 * t536 - 0.2e1 * t489;
t390 = t391 ^ 2;
t689 = t392 ^ 2;
t687 = -t161 / 0.2e1;
t686 = -t78 / 0.2e1;
t680 = -t405 / 0.2e1;
t679 = t405 / 0.2e1;
t675 = t416 / 0.2e1;
t674 = -t417 / 0.2e1;
t662 = pkin(4) * qJD(5);
t661 = qJD(4) * pkin(4);
t651 = t105 * t415;
t652 = t104 * t417;
t9 = (t651 + t652) * t698 + t717;
t660 = t9 * qJD(1);
t51 = t161 * t715 - t90 * t363;
t657 = qJD(1) * t51;
t611 = t417 * t698;
t52 = -t161 * t611 + t91 * t363;
t656 = qJD(1) * t52;
t620 = t415 * t245;
t115 = t620 + t734;
t647 = t115 * t415;
t613 = t417 * t245;
t114 = t613 - t735;
t648 = t114 * t417;
t10 = (t647 + t648) * t698 + t717;
t654 = t10 * qJD(1);
t649 = t114 * t415;
t646 = t115 * t417;
t14 = -t104 * t363 + t415 * t466 - t698 * t90;
t645 = t14 * qJD(1);
t15 = t105 * t363 + t417 * t466 - t698 * t91;
t644 = t15 * qJD(1);
t16 = (-t90 - t713) * t698 - (t114 + t735) * t363;
t640 = t16 * qJD(1);
t639 = t161 * t698;
t636 = t78 * t363;
t497 = t412 / 0.2e1 + t678;
t484 = t363 * t497;
t426 = t404 * t484 + t739;
t450 = t652 / 0.2e1 + t651 / 0.2e1;
t24 = t426 - t450;
t634 = t24 * qJD(1);
t448 = -t648 / 0.2e1 - t647 / 0.2e1;
t528 = -t724 / 0.2e1 + t733 / 0.2e1;
t28 = t448 + t528;
t633 = t28 * qJD(1);
t629 = t363 * t416;
t625 = t404 * t363;
t506 = -t722 / 0.2e1;
t92 = t484 * t698 + t506;
t609 = t92 * qJD(1);
t608 = qJD(4) * t217 - qJD(5) * t215;
t607 = t216 * qJD(4);
t218 = 0.2e1 * t339;
t585 = qJD(4) * t415;
t606 = qJD(5) * t218 + t585 * t698;
t579 = qJD(5) * t415;
t605 = qJD(4) * t218 + t579 * t698;
t321 = t720 / 0.2e1;
t117 = t330 + t321 + t482;
t602 = qJD(1) * t117;
t139 = t727 + t630;
t135 = t139 * t415;
t600 = qJD(1) * t135;
t137 = t139 * t417;
t598 = qJD(1) * t137;
t163 = -t363 * t664 - t370 * t698;
t597 = qJD(1) * t163;
t164 = -t363 * t370 + t664 * t698;
t596 = qJD(1) * t164;
t167 = -t343 * t392 + t344 * t391;
t594 = qJD(1) * t167;
t592 = qJD(1) * t370;
t590 = qJD(3) * t698;
t588 = qJD(4) * t229;
t587 = qJD(4) * t698;
t581 = qJD(5) * t698;
t580 = qJD(5) * t370;
t578 = qJD(5) * t417;
t577 = qJD(6) * t415;
t119 = t685 + t321 + t488;
t576 = t119 * qJD(5);
t120 = 0.2e1 * t482;
t575 = t120 * qJD(1);
t138 = t722 / 0.2e1 + t506;
t574 = t138 * qJD(1);
t573 = t139 * qJD(1);
t527 = t672 * t698;
t435 = t629 / 0.2e1 - t527 / 0.2e1;
t173 = (t392 / 0.2e1 + t435) * pkin(4);
t569 = t173 * qJD(1);
t562 = t715 * qJD(1);
t561 = t215 * qJD(1);
t560 = t215 * qJD(6);
t194 = t217 * qJD(1);
t219 = t499 * t415;
t559 = t219 * qJD(1);
t221 = t498 * t415;
t558 = t221 * qJD(1);
t557 = t718 * qJD(1);
t224 = t500 * t417;
t556 = t224 * qJD(4);
t225 = 0.2e1 * t336;
t555 = t225 * qJD(1);
t226 = 0.2e1 * t726 * t417;
t554 = t226 * qJD(1);
t553 = t228 * qJD(1);
t552 = t229 * qJD(1);
t551 = t233 * qJD(1);
t234 = t401 * t727;
t550 = t234 * qJD(1);
t278 = 0.2e1 * t487 + t616;
t548 = t278 * qJD(1);
t297 = t390 - t689;
t547 = t297 * qJD(1);
t358 = t487 + t382 / 0.2e1;
t544 = t358 * qJD(1);
t347 = t358 * qJD(5);
t365 = t390 + t689;
t541 = t365 * qJD(1);
t375 = t400 * t481;
t540 = t375 * qJD(1);
t539 = t391 * qJD(1);
t387 = t391 * qJD(4);
t538 = t392 * qJD(1);
t388 = t392 * qJD(4);
t537 = t400 * qJD(1);
t533 = t416 * t661;
t532 = t416 * t662;
t526 = t672 * t411;
t525 = t672 * t412;
t524 = t363 * t592;
t523 = t698 * t592;
t522 = t411 * t706;
t521 = t412 * t706;
t519 = t415 * t584;
t518 = t415 * t578;
t517 = t698 * t577;
t516 = t698 * t408;
t513 = t698 * t708;
t512 = t391 * t538;
t511 = t391 * t388;
t510 = t417 * t706;
t501 = t687 + t161 / 0.2e1;
t496 = t672 * qJD(4);
t495 = t672 * qJD(5);
t494 = t363 * t603;
t493 = qJD(1) * t393 + qJD(3);
t492 = -t534 / 0.2e1;
t491 = t727 * t402;
t486 = t536 * t663;
t446 = -t78 * t683 - t639 / 0.2e1;
t5 = t363 * t451 + t449 * t698 + t446;
t7 = -t104 * t90 + t105 * t91 + t643;
t478 = t7 * qJD(1) + t5 * qJD(2);
t447 = t646 / 0.2e1 - t649 / 0.2e1;
t6 = (t687 + t447) * t698 - (t686 - t451) * t363;
t8 = -t114 * t90 + t115 * t91 + t643;
t477 = t8 * qJD(1) + t6 * qJD(2);
t100 = (0.1e1 - t603) * t722;
t473 = t6 * qJD(1) - t100 * qJD(2);
t101 = t494 * t698 - t722;
t472 = t5 * qJD(1) + t101 * qJD(2);
t17 = (-t91 - t712) * t698 - (-t115 + t734) * t363;
t471 = t17 * qJD(1);
t19 = -t639 + (t658 + t659) * t363;
t470 = -qJD(1) * t19 - qJD(2) * t92;
t21 = t161 * t681 - t636 / 0.2e1 + t446;
t30 = t370 * t664;
t469 = -t30 * qJD(1) + t21 * qJD(2);
t468 = t650 - t653;
t467 = t646 - t649;
t464 = t363 * t405 - t721;
t59 = -t636 - t639;
t463 = -qJD(1) * t59 - qJD(2) * t138;
t462 = t21 * qJD(1);
t423 = -t721 / 0.2e1 - t363 * t680 + (t672 * t726 + t675 * t698) * pkin(4);
t422 = t670 / 0.2e1 + pkin(5) * t726 + t423;
t32 = t688 - t712 / 0.2e1 + t422 * t415;
t461 = t32 * qJD(1) - t229 * qJD(2);
t460 = t358 * qJD(2);
t459 = t698 * (-qJD(6) + t708);
t457 = qJD(4) * t233 + qJD(5) * t120;
t456 = qJD(4) * t225 - qJD(5) * t718;
t454 = qJD(5) * t278 + t587;
t452 = -t725 / 0.2e1 + t737;
t445 = -t625 / 0.2e1 - t716 / 0.2e1;
t442 = qJD(4) * t228 + t578 * t698;
t441 = t492 + pkin(5) / 0.2e1 + t680;
t438 = (t581 + t587) * t363;
t437 = t711 * t698;
t436 = t245 / 0.2e1 + t452;
t434 = t526 + t525;
t419 = t447 * t404 + (-t161 * t675 + t451 * t672) * pkin(4) - t78 * t679;
t3 = t419 - t705;
t354 = (t404 * t434 + t405 * t416) * pkin(4);
t420 = (-t363 * t675 + (t525 / 0.2e1 + t526 / 0.2e1) * t698) * pkin(4) + t497 * t625 + t739;
t58 = -t497 * t725 + t420 + t737;
t433 = t3 * qJD(1) + t58 * qJD(2) + t354 * qJD(4);
t432 = t181 / 0.2e1 + t445;
t13 = (t115 / 0.2e1 - t105 / 0.2e1) * t417 + (-t114 / 0.2e1 + t104 / 0.2e1) * t415;
t389 = t434 * pkin(4);
t431 = -qJD(1) * t13 + qJD(2) * t119 - qJD(4) * t389;
t371 = t441 * t415;
t55 = t436 * t417;
t430 = pkin(5) * t579 + qJD(1) * t55 + qJD(4) * t371;
t372 = t441 * t417;
t53 = t436 * t415;
t429 = pkin(5) * t578 - qJD(1) * t53 + qJD(4) * t372;
t49 = t415 * t501 - t417 * t432;
t428 = -qJD(1) * t49 - qJD(2) * t216 - t405 * t585;
t47 = t415 * t432 + t417 * t501;
t427 = -qJD(1) * t47 - qJD(2) * t224 - t405 * t584;
t35 = (t686 + t78 / 0.2e1) * t415 + t422 * t417;
t425 = -qJD(1) * t35 - qJD(2) * t219 - t415 * t533;
t399 = t415 * t532;
t396 = t401 * qJD(6);
t383 = t389 * qJD(5);
t374 = pkin(5) * t674 + (t492 + t679) * t417;
t373 = pkin(5) * t677 + t405 * t676 + t415 * t492;
t346 = t358 * qJD(4);
t232 = t536 * t697;
t227 = t502 + t336;
t208 = t219 * qJD(4);
t205 = t225 * qJD(6);
t204 = t224 * qJD(6);
t203 = t718 * qJD(6);
t201 = t219 * qJD(5);
t183 = -t194 - t577;
t177 = -qJD(4) * t278 - t581;
t174 = -t664 / 0.2e1 + t435 * pkin(4);
t118 = 0.2e1 * t488;
t57 = t420 + t528;
t56 = -t735 + t613 / 0.2e1 - t452 * t417;
t54 = -t734 - t620 / 0.2e1 + t452 * t415;
t50 = -t735 + t614 / 0.2e1 - t445 * t417;
t48 = -t734 - t621 / 0.2e1 + t445 * t415;
t34 = pkin(5) * t336 + t417 * t423 + t670 * t674 - t713;
t33 = pkin(5) * t504 + pkin(9) * t507 + t415 * t423 + 0.2e1 * t688;
t29 = -t448 + t528;
t25 = t426 + t450;
t12 = t447 + t449;
t4 = qJD(3) * t138 + qJD(4) * t21;
t2 = t419 + t705;
t1 = qJD(3) * t92 + qJD(4) * t5 + qJD(5) * t6;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400 * qJD(3), t375 * qJD(3), -t511, t297 * qJD(4), 0, t511, 0, 0, -t393 * t388, t393 * t387, t365 * qJD(3), qJD(3) * t167, t437, -t536 * t729, 0, -t438, 0, 0, -qJD(4) * t163 + t580 * t698, -qJD(4) * t164 + t363 * t580, qJD(3) * t139, qJD(3) * t59 - qJD(4) * t30, t412 * t437 - t491, -0.2e1 * t415 * t611 * t711 - t234 * qJD(6), t363 * t517 + t536 * t743, t411 * t437 + t491, t363 * t516 - t536 * t744, -t438, qJD(3) * t135 + qJD(4) * t14 + qJD(5) * t16 + qJD(6) * t52, qJD(3) * t137 + qJD(4) * t15 + qJD(5) * t17 + qJD(6) * t51, -qJD(4) * t9 - qJD(5) * t10, qJD(3) * t19 + qJD(4) * t7 + qJD(5) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t537, t540, 0, 0, 0, 0, 0, 0, 0, 0, t541, t594, 0, 0, 0, 0, 0, 0, t347, 0, t573, qJD(4) * t174 - t463, 0, 0, 0, 0, 0, 0, t600 - t700, qJD(6) * t227 + t536 * t742 + t598, t576, qJD(4) * t25 + qJD(5) * t29 - t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512, t547, t387, t512, t388, 0, -qJD(4) * t344 - t393 * t538, qJD(4) * t343 + t393 * t539, 0, 0, t513, -t740, t711, -t736, -t454, 0, -t597 + t748, -t596 - t728 (-t363 * t672 - t416 * t698) * t661, t174 * qJD(3) + (t161 * t416 + t672 * t78) * t661 + t469 (t519 + t521) * t363 - t696, qJD(4) * t730 + qJD(5) * t118 + t732, t204 + t747 + t606 (-t519 + t522) * t363 + t696, -t197 - t746 + t604, t741, t645 + (t415 * t464 + t712) * qJD(4) + t33 * qJD(5) + t50 * qJD(6), t644 + t745 + (t417 * t464 - t713) * qJD(4) + t34 * qJD(5) + t48 * qJD(6), qJD(4) * t468 + qJD(5) * t12 - t660, t25 * qJD(3) + (t404 * t468 - t405 * t78) * qJD(4) + t2 * qJD(5) + t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t736, -t740, t711, -t736, t177, 0, qJD(3) * t358 + t523 + t748, t524 - t728, 0, 0 -(-t518 - t521) * t363 - t695, t118 * qJD(4) + qJD(5) * t730 + t732, t747 + t605 -(t518 - t522) * t363 + t695, t442 - t746, t741, t640 + t229 * qJD(3) + t33 * qJD(4) + (t415 * t485 + t712) * qJD(5) + t56 * qJD(6), t745 + t34 * qJD(4) + (t417 * t485 - t713) * qJD(5) + t54 * qJD(6) + t471, qJD(3) * t119 + qJD(4) * t12 + qJD(5) * t467 - t654, t29 * qJD(3) + t2 * qJD(4) + (pkin(9) * t467 + t669) * qJD(5) + t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t108, t702 * t704 - t550, t415 * t459 + t556, t108, t417 * t459 - t607, t232, -qJD(3) * t216 + qJD(4) * t50 + qJD(5) * t56 - qJD(6) * t91 + t656, qJD(3) * t227 + qJD(4) * t48 + qJD(5) * t54 + qJD(6) * t90 + t657, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t101 - qJD(5) * t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t574, 0, 0, 0, 0, 0, 0, 0, 0, 0, t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, -t387, 0, 0, 0, 0, 0, 0, 0, 0, -t454, -t711, 0 (-t527 + t629) * t661 + t462, 0, 0, 0, 0, 0, 0, t701, t205 + t606, -t457 (t404 * t494 + t716) * qJD(4) + t57 * qJD(5) + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, -t711, 0, 0, 0, 0, 0, 0, 0, 0, -t442 - t560, -t203 + t605, -qJD(4) * t120 - qJD(5) * t233, t57 * qJD(4) + (-t724 + t733) * qJD(5) + t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t516 + t608, t456 + t517, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t537, -t540, 0, 0, 0, 0, 0, 0, -t388, t387, -t541, -t594, 0, 0, 0, 0, 0, 0, t454, t711, -t573, -qJD(4) * t173 + t463, 0, 0, 0, 0, 0, 0, -t600 - t701, -qJD(4) * t715 - qJD(5) * t221 + qJD(6) * t226 - t598, t457, -qJD(4) * t24 - qJD(5) * t28 + t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t574, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t538, t539, 0, 0, 0, 0, 0, 0, 0, 0, t706, t708, 0, -t569, 0, 0, 0, 0, 0, 0, t510, -t562, t551, -t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t548, t708, 0, 0, 0, 0, 0, 0, 0, 0, t553, -t558, t575, -t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, -t408 + t554, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t512, -t547, 0, -t512, 0, 0, t493 * t392, -t493 * t391, 0, 0, -t513, t740, 0, t736, -t347, 0, -t590 + t597, t596 - t710, 0, qJD(3) * t173 - t469, -t412 * t513 - t694, qJD(5) * t117 + t731, t201 + t205 - t747, -t411 * t513 + t694, -t196 + t207 + t746, -t741, qJD(5) * t32 + qJD(6) * t49 - t417 * t590 - t645, qJD(3) * t715 + qJD(5) * t35 + qJD(6) * t47 - t644, -qJD(3) * t233 + qJD(5) * t13 + t660, qJD(3) * t24 + qJD(5) * t3 - t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, 0, 0, -t462, 0, 0, 0, 0, 0, 0, t700, t201 + t204, -t576, qJD(5) * t58 - t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, -t539, 0, 0, 0, 0, 0, 0, 0, 0, -t706, -t708, 0, t569, 0, 0, 0, 0, 0, 0, -t510, t562, -t551, t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, -pkin(4) * t495, 0, 0, t402, t396, 0, -t402, 0, 0, t405 * t577 - t417 * t532, t405 * t408 + t399, t383, t354 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t544, 0, -t486 - t460 (-t496 - t495) * pkin(4), 0, 0, -t692, t396 + t602, t559, t692, t552, 0, t373 * qJD(6) - t417 * t486 + t461, qJD(6) * t374 + t399 - t425, t383 - t431 (-pkin(5) * t416 + pkin(9) * t434) * t662 + t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, t256, t408 + t555, -t172, t183, -t707, qJD(5) * t373 - t404 * t408 - t428, qJD(5) * t374 + t404 * t577 - t427, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t736, t740, 0, t736, t346, 0, -qJD(3) * t278 - t523, -t524 - t710, 0, 0, -t412 * t736 - t693, -qJD(4) * t117 + t731, -t203 - t208 - t747, -t411 * t736 + t693, t560 + t746 - t588, -t741, -qJD(3) * t228 - qJD(4) * t32 - qJD(6) * t55 - t640, qJD(3) * t221 - qJD(4) * t35 + qJD(6) * t53 - t471, -qJD(3) * t120 - qJD(4) * t13 + t654, qJD(3) * t28 - qJD(4) * t3 - t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, -t208, t119 * qJD(4), -qJD(4) * t58 - t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t548, -t708, 0, 0, 0, 0, 0, 0, 0, 0, -t553, t558, -t575, t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544, 0, t460 + t533, pkin(4) * t496, 0, 0, t691, t396 - t602, -t559, -t691, -t552, 0, -qJD(6) * t371 + t417 * t533 - t461, -qJD(6) * t372 + t425, t431, -t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t396, 0, -t402, 0, 0, -pkin(5) * t577, -pkin(5) * t408, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, t256, t408 - t557, -t172, t561 - t577, -t707, -pkin(9) * t408 - t430, pkin(9) * t577 - t429, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, 0.2e1 * t698 * t702 + t550, -t415 * t736 - t456, -t108, -t417 * t736 + t608, t232, qJD(3) * t217 - qJD(4) * t49 + qJD(5) * t55 - t656, -qJD(3) * t226 - qJD(4) * t47 - qJD(5) * t53 - t657, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t607, -t556, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, -t554, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t256, -t555, t172, t194, t707, qJD(5) * t371 + t428, qJD(5) * t372 + t427, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t256, t557, t172, -t561, t707, t430, t429, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
