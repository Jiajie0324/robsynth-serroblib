% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 13:57
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRPR1_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 13:56:11
% EndTime: 2019-05-05 13:56:46
% DurationCPUTime: 37.54s
% Computational Cost: add. (303592->903), mult. (709964->1303), div. (0->0), fcn. (518943->12), ass. (0->618)
t1622 = cos(qJ(1));
t1613 = sin(pkin(9));
t1616 = cos(pkin(9));
t1619 = sin(qJ(1));
t1589 = g(1) * t1622 + t1619 * g(2);
t1734 = qJD(1) ^ 2;
t1633 = pkin(1) * t1734 + t1589;
t1588 = g(1) * t1619 - t1622 * g(2);
t1642 = qJDD(1) * pkin(1) + t1588;
t1525 = -t1613 * t1633 - t1616 * t1642;
t1632 = t1613 * t1642;
t1526 = -t1616 * t1633 + t1632;
t1671 = t1525 * t1613 + t1616 * t1526;
t1457 = t1525 * t1616 - t1526 * t1613;
t1692 = t1619 * t1457;
t1761 = t1622 * t1671 + t1692;
t1710 = t1457 * t1622;
t1760 = -t1619 * t1671 + t1710;
t1581 = qJDD(1) * t1613 + t1616 * t1734;
t1582 = qJDD(1) * t1616 - t1613 * t1734;
t1531 = -t1619 * t1581 + t1622 * t1582;
t1724 = g(3) - qJDD(2);
t1550 = -qJ(2) * t1581 + t1616 * t1724;
t1735 = -qJ(2) * t1582 - t1613 * t1724;
t1759 = -pkin(6) * t1531 - t1619 * t1550 + t1622 * t1735;
t1740 = t1622 * t1581 + t1619 * t1582;
t1758 = -pkin(6) * t1740 + t1550 * t1622 + t1619 * t1735;
t1757 = 2 * qJD(3);
t1611 = sin(pkin(11));
t1612 = sin(pkin(10));
t1615 = cos(pkin(10));
t1618 = sin(qJ(4));
t1621 = cos(qJ(4));
t1647 = t1612 * t1621 + t1615 * t1618;
t1568 = t1647 * qJD(1);
t1614 = cos(pkin(11));
t1544 = -t1614 * qJD(4) + t1568 * t1611;
t1545 = qJD(4) * t1611 + t1568 * t1614;
t1489 = t1545 * t1544;
t1599 = t1612 * qJDD(1);
t1601 = t1615 * qJDD(1);
t1564 = t1599 * t1618 - t1621 * t1601;
t1697 = t1568 * qJD(4);
t1519 = t1564 + t1697;
t1741 = -t1489 + t1519;
t1756 = t1611 * t1741;
t1755 = t1614 * t1741;
t1617 = sin(qJ(6));
t1620 = cos(qJ(6));
t1481 = t1620 * t1544 + t1545 * t1617;
t1483 = -t1544 * t1617 + t1545 * t1620;
t1414 = t1483 * t1481;
t1510 = qJDD(6) + t1519;
t1743 = -t1414 + t1510;
t1754 = t1617 * t1743;
t1566 = (t1612 * t1618 - t1615 * t1621) * qJD(1);
t1524 = t1568 * t1566;
t1737 = qJDD(4) - t1524;
t1753 = t1618 * t1737;
t1752 = t1620 * t1743;
t1751 = t1621 * t1737;
t1624 = t1615 ^ 2;
t1604 = t1624 * t1734;
t1606 = t1612 ^ 2;
t1694 = t1606 * t1734;
t1584 = t1604 + t1694;
t1736 = t1734 * (t1606 + t1624);
t1575 = t1615 * t1736;
t1539 = -t1575 * t1613 + t1601 * t1616;
t1541 = t1575 * t1616 + t1601 * t1613;
t1748 = t1539 * t1622 - t1619 * t1541;
t1747 = t1619 * t1539 + t1541 * t1622;
t1674 = t1612 * t1724;
t1628 = qJDD(1) * qJ(3) - t1589 * t1616 + t1632;
t1686 = -pkin(1) * t1616 - pkin(2);
t1739 = qJD(1) * t1757 + t1686 * t1734 + t1628;
t1461 = -pkin(3) * t1604 + pkin(7) * t1601 + t1615 * t1739 - t1674;
t1693 = t1612 * t1615;
t1591 = t1734 * t1693;
t1673 = t1615 * t1724;
t1626 = pkin(3) * t1591 - pkin(7) * t1599 - t1612 * t1739 - t1673;
t1382 = t1621 * t1461 + t1618 * t1626;
t1509 = pkin(4) * t1566 - qJ(5) * t1568;
t1733 = qJD(4) ^ 2;
t1318 = -pkin(4) * t1733 + qJDD(4) * qJ(5) - t1509 * t1566 + t1382;
t1507 = -qJDD(1) * pkin(2) - qJ(3) * t1734 + qJDD(3) + t1525;
t1480 = -pkin(3) * t1601 - pkin(7) * t1584 + t1507;
t1557 = t1566 * qJD(4);
t1565 = t1647 * qJDD(1);
t1521 = -t1557 + t1565;
t1338 = (-t1521 + t1557) * qJ(5) + (t1519 + t1697) * pkin(4) + t1480;
t1251 = 0.2e1 * qJD(5) * t1545 + t1611 * t1318 - t1614 * t1338;
t1252 = -0.2e1 * qJD(5) * t1544 + t1614 * t1318 + t1611 * t1338;
t1163 = t1611 * t1251 + t1614 * t1252;
t1497 = qJDD(4) * t1611 + t1521 * t1614;
t1646 = qJDD(4) * t1614 - t1521 * t1611;
t1368 = -t1481 * qJD(6) + t1620 * t1497 + t1617 * t1646;
t1559 = qJD(6) + t1566;
t1450 = t1559 * t1481;
t1742 = -t1450 + t1368;
t1738 = t1628 + qJD(1) * (qJD(1) * t1686 + t1757);
t1484 = t1612 * t1738 + t1673;
t1485 = t1615 * t1738 - t1674;
t1412 = t1612 * t1484 + t1615 * t1485;
t1504 = t1566 * t1544;
t1433 = t1497 - t1504;
t1434 = t1497 + t1504;
t1505 = t1566 * t1545;
t1432 = t1646 + t1505;
t1672 = t1617 * t1497 - t1620 * t1646;
t1302 = (qJD(6) - t1559) * t1483 + t1672;
t1478 = t1481 ^ 2;
t1479 = t1483 ^ 2;
t1732 = t1544 ^ 2;
t1543 = t1545 ^ 2;
t1558 = t1559 ^ 2;
t1731 = t1566 ^ 2;
t1563 = t1568 ^ 2;
t1381 = t1461 * t1618 - t1621 * t1626;
t1274 = -t1381 * t1621 + t1382 * t1618;
t1730 = pkin(3) * t1274;
t1446 = -t1564 * t1618 - t1565 * t1621;
t1729 = pkin(3) * t1446;
t1728 = pkin(4) * t1618;
t1204 = pkin(5) * t1741 - pkin(8) * t1434 - t1251;
t1494 = pkin(5) * t1566 - pkin(8) * t1545;
t1207 = -pkin(5) * t1732 + pkin(8) * t1646 - t1566 * t1494 + t1252;
t1132 = -t1620 * t1204 + t1207 * t1617;
t1133 = t1204 * t1617 + t1207 * t1620;
t1071 = -t1132 * t1620 + t1133 * t1617;
t1727 = pkin(5) * t1071;
t1305 = t1450 + t1368;
t1234 = -t1302 * t1617 - t1305 * t1620;
t1726 = pkin(5) * t1234;
t1720 = t1071 * t1611;
t1719 = t1071 * t1614;
t1317 = -qJDD(4) * pkin(4) - t1733 * qJ(5) + t1509 * t1568 + qJDD(5) + t1381;
t1265 = -pkin(5) * t1646 - pkin(8) * t1732 + t1494 * t1545 + t1317;
t1718 = t1265 * t1617;
t1717 = t1265 * t1620;
t1716 = t1274 * t1612;
t1715 = t1274 * t1615;
t1374 = t1414 + t1510;
t1714 = t1374 * t1617;
t1713 = t1374 * t1620;
t1437 = t1489 + t1519;
t1712 = t1437 * t1611;
t1711 = t1437 * t1614;
t1709 = t1480 * t1618;
t1708 = t1480 * t1621;
t1516 = qJDD(4) + t1524;
t1707 = t1516 * t1618;
t1706 = t1516 * t1621;
t1705 = t1519 * t1618;
t1704 = t1559 * t1483;
t1703 = t1559 * t1617;
t1702 = t1559 * t1620;
t1701 = t1566 * t1611;
t1700 = t1566 * t1614;
t1699 = t1566 * t1618;
t1698 = t1566 * t1621;
t1696 = t1568 * t1618;
t1695 = t1568 * t1621;
t1313 = t1611 * t1317;
t1498 = t1612 * t1507;
t1314 = t1614 * t1317;
t1499 = t1615 * t1507;
t1688 = -pkin(4) * t1317 + qJ(5) * t1163;
t1687 = -pkin(2) * t1507 + qJ(3) * t1412;
t1685 = -pkin(4) * t1621 - pkin(3);
t1684 = t1618 * t1414;
t1683 = t1621 * t1414;
t1682 = t1618 * t1489;
t1681 = t1621 * t1489;
t1680 = t1613 * t1524;
t1679 = t1616 * t1524;
t1473 = -t1543 - t1731;
t1372 = -t1473 * t1611 - t1711;
t1678 = -pkin(4) * t1433 + qJ(5) * t1372 + t1313;
t1460 = -t1731 - t1732;
t1352 = t1460 * t1614 - t1756;
t1431 = -t1505 + t1646;
t1677 = pkin(4) * t1431 + qJ(5) * t1352 - t1314;
t1676 = pkin(2) * t1601 - qJ(3) * t1575 - t1499;
t1675 = t1612 * t1601;
t1072 = t1132 * t1617 + t1620 * t1133;
t1275 = t1381 * t1618 + t1621 * t1382;
t1670 = -t1588 * t1619 - t1622 * t1589;
t1042 = t1072 * t1614 - t1720;
t1033 = t1042 * t1618 - t1265 * t1621;
t1034 = t1042 * t1621 + t1265 * t1618;
t1015 = -t1033 * t1612 + t1034 * t1615;
t1041 = t1072 * t1611 + t1719;
t1068 = -pkin(5) * t1265 + pkin(8) * t1072;
t1016 = -pkin(8) * t1719 - qJ(5) * t1041 - t1068 * t1611;
t1020 = -pkin(4) * t1041 - t1727;
t991 = -pkin(3) * t1041 + pkin(7) * t1034 + t1016 * t1618 + t1020 * t1621;
t996 = -pkin(7) * t1033 + t1016 * t1621 - t1020 * t1618;
t1669 = -pkin(2) * t1041 + qJ(3) * t1015 + t1612 * t996 + t1615 * t991;
t1236 = -t1302 * t1620 + t1305 * t1617;
t1333 = -t1478 - t1479;
t1059 = -pkin(5) * t1333 + pkin(8) * t1236 + t1072;
t1064 = -pkin(8) * t1234 - t1071;
t1150 = t1234 * t1614 + t1236 * t1611;
t1022 = -qJ(5) * t1150 - t1059 * t1611 + t1064 * t1614;
t1113 = -pkin(4) * t1150 - t1726;
t1152 = -t1234 * t1611 + t1236 * t1614;
t1135 = t1152 * t1621 + t1333 * t1618;
t1012 = -pkin(3) * t1150 + pkin(7) * t1135 + t1022 * t1618 + t1113 * t1621;
t1134 = t1152 * t1618 - t1333 * t1621;
t1018 = -pkin(7) * t1134 + t1022 * t1621 - t1113 * t1618;
t1075 = -t1134 * t1612 + t1135 * t1615;
t1668 = -pkin(2) * t1150 + qJ(3) * t1075 + t1615 * t1012 + t1612 * t1018;
t1389 = -t1558 - t1478;
t1277 = t1389 * t1620 - t1754;
t1301 = (qJD(6) + t1559) * t1483 + t1672;
t1155 = -pkin(5) * t1301 + pkin(8) * t1277 - t1717;
t1276 = t1389 * t1617 + t1752;
t1184 = -pkin(8) * t1276 + t1718;
t1201 = t1276 * t1614 + t1277 * t1611;
t1078 = -qJ(5) * t1201 - t1155 * t1611 + t1184 * t1614;
t1640 = pkin(5) * t1276 - t1132;
t1084 = -pkin(4) * t1201 - t1640;
t1202 = -t1276 * t1611 + t1277 * t1614;
t1159 = t1202 * t1621 + t1301 * t1618;
t1025 = -pkin(3) * t1201 + pkin(7) * t1159 + t1078 * t1618 + t1084 * t1621;
t1158 = t1202 * t1618 - t1301 * t1621;
t1032 = -pkin(7) * t1158 + t1078 * t1621 - t1084 * t1618;
t1099 = -t1158 * t1612 + t1159 * t1615;
t1667 = -pkin(2) * t1201 + qJ(3) * t1099 + t1615 * t1025 + t1612 * t1032;
t1417 = -t1479 - t1558;
t1285 = -t1417 * t1617 - t1713;
t1157 = -pkin(5) * t1742 + pkin(8) * t1285 + t1718;
t1284 = t1417 * t1620 - t1714;
t1191 = -pkin(8) * t1284 + t1717;
t1217 = t1284 * t1614 + t1285 * t1611;
t1086 = -qJ(5) * t1217 - t1157 * t1611 + t1191 * t1614;
t1631 = pkin(5) * t1284 - t1133;
t1091 = -pkin(4) * t1217 - t1631;
t1218 = -t1284 * t1611 + t1285 * t1614;
t1165 = t1218 * t1621 + t1618 * t1742;
t1029 = -pkin(3) * t1217 + pkin(7) * t1165 + t1086 * t1618 + t1091 * t1621;
t1164 = t1218 * t1618 - t1621 * t1742;
t1038 = -pkin(7) * t1164 + t1086 * t1621 - t1091 * t1618;
t1105 = -t1164 * t1612 + t1165 * t1615;
t1666 = -pkin(2) * t1217 + qJ(3) * t1105 + t1615 * t1029 + t1612 * t1038;
t1665 = -pkin(4) * t1333 + qJ(5) * t1152 + t1614 * t1059 + t1611 * t1064;
t1143 = t1163 * t1621 + t1317 * t1618;
t1162 = -t1251 * t1614 + t1252 * t1611;
t1050 = pkin(7) * t1143 + (-qJ(5) * t1618 + t1685) * t1162;
t1142 = t1163 * t1618 - t1317 * t1621;
t1066 = -pkin(7) * t1142 + (-qJ(5) * t1621 + t1728) * t1162;
t1081 = -t1142 * t1612 + t1143 * t1615;
t1664 = -pkin(2) * t1162 + qJ(3) * t1081 + t1615 * t1050 + t1612 * t1066;
t1327 = t1432 * t1611 - t1434 * t1614;
t1144 = -qJ(5) * t1327 - t1162;
t1329 = t1432 * t1614 + t1434 * t1611;
t1441 = t1543 + t1732;
t1281 = t1329 * t1621 - t1441 * t1618;
t1101 = pkin(7) * t1281 + t1618 * t1144 + t1327 * t1685;
t1280 = t1329 * t1618 + t1441 * t1621;
t1107 = -pkin(7) * t1280 + t1144 * t1621 + t1327 * t1728;
t1211 = -t1280 * t1612 + t1281 * t1615;
t1663 = -pkin(2) * t1327 + qJ(3) * t1211 + t1615 * t1101 + t1612 * t1107;
t1351 = t1460 * t1611 + t1755;
t1205 = -pkin(4) * t1351 + t1251;
t1256 = -qJ(5) * t1351 + t1313;
t1283 = t1352 * t1621 - t1431 * t1618;
t1115 = -pkin(3) * t1351 + pkin(7) * t1283 + t1205 * t1621 + t1256 * t1618;
t1282 = t1352 * t1618 + t1431 * t1621;
t1127 = -pkin(7) * t1282 - t1205 * t1618 + t1256 * t1621;
t1214 = -t1282 * t1612 + t1283 * t1615;
t1662 = -pkin(2) * t1351 + qJ(3) * t1214 + t1615 * t1115 + t1612 * t1127;
t1371 = t1473 * t1614 - t1712;
t1206 = -pkin(4) * t1371 + t1252;
t1261 = -qJ(5) * t1371 + t1314;
t1287 = t1372 * t1621 + t1433 * t1618;
t1117 = -pkin(3) * t1371 + pkin(7) * t1287 + t1206 * t1621 + t1261 * t1618;
t1286 = t1372 * t1618 - t1433 * t1621;
t1130 = -pkin(7) * t1286 - t1206 * t1618 + t1261 * t1621;
t1221 = -t1286 * t1612 + t1287 * t1615;
t1661 = -pkin(2) * t1371 + qJ(3) * t1221 + t1615 * t1117 + t1612 * t1130;
t1660 = -pkin(4) * t1301 + qJ(5) * t1202 + t1614 * t1155 + t1611 * t1184;
t1659 = -pkin(4) * t1742 + qJ(5) * t1218 + t1614 * t1157 + t1611 * t1191;
t1658 = pkin(4) * t1441 + qJ(5) * t1329 + t1163;
t1448 = -t1564 * t1621 + t1565 * t1618;
t1490 = -t1731 - t1563;
t1242 = -pkin(3) * t1490 + pkin(7) * t1448 + t1275;
t1255 = -pkin(7) * t1446 - t1274;
t1357 = -t1446 * t1612 + t1448 * t1615;
t1657 = -pkin(2) * t1490 + qJ(3) * t1357 + t1615 * t1242 + t1612 * t1255;
t1514 = -t1731 - t1733;
t1443 = t1514 * t1621 - t1753;
t1518 = t1564 + 0.2e1 * t1697;
t1331 = -pkin(3) * t1518 + pkin(7) * t1443 - t1708;
t1442 = t1514 * t1618 + t1751;
t1350 = -t1442 * t1612 + t1443 * t1615;
t1384 = -pkin(7) * t1442 + t1709;
t1656 = -pkin(2) * t1518 + qJ(3) * t1350 + t1615 * t1331 + t1612 * t1384;
t1554 = -t1563 - t1733;
t1467 = -t1554 * t1618 - t1706;
t1520 = -0.2e1 * t1557 + t1565;
t1354 = -pkin(3) * t1520 + pkin(7) * t1467 + t1709;
t1464 = t1554 * t1621 - t1707;
t1402 = -t1464 * t1612 + t1467 * t1615;
t1408 = -pkin(7) * t1464 + t1708;
t1655 = -pkin(2) * t1520 + qJ(3) * t1402 + t1615 * t1354 + t1612 * t1408;
t1598 = t1606 * qJDD(1);
t1600 = t1624 * qJDD(1);
t1579 = t1600 + t1598;
t1654 = pkin(2) * t1584 + qJ(3) * t1579 + t1412;
t1653 = pkin(3) * t1142 + t1688;
t1652 = pkin(3) * t1464 - t1382;
t1587 = qJDD(1) * t1622 - t1619 * t1734;
t1651 = -pkin(6) * t1587 - g(3) * t1619;
t1411 = t1484 * t1615 - t1485 * t1612;
t1546 = t1581 * t1693;
t1547 = -t1591 * t1613 + t1616 * t1675;
t1650 = t1546 * t1622 + t1619 * t1547;
t1649 = t1619 * t1546 - t1547 * t1622;
t1648 = t1588 * t1622 - t1619 * t1589;
t1645 = pkin(3) * t1282 + t1677;
t1644 = pkin(3) * t1286 + t1678;
t1574 = t1612 * t1736;
t1643 = -pkin(2) * t1599 + qJ(3) * t1574 + t1498;
t1641 = pkin(3) * t1442 - t1381;
t1194 = t1275 * t1615 - t1716;
t1263 = -pkin(3) * t1480 + pkin(7) * t1275;
t1639 = -pkin(2) * t1480 - pkin(7) * t1716 + qJ(3) * t1194 + t1615 * t1263;
t1638 = -pkin(4) * t1265 - pkin(8) * t1720 + qJ(5) * t1042 + t1614 * t1068;
t1637 = pkin(3) * t1134 + t1665;
t1636 = pkin(3) * t1158 + t1660;
t1635 = pkin(3) * t1164 + t1659;
t1634 = pkin(3) * t1280 + t1658;
t1629 = pkin(3) * t1033 + t1638;
t1590 = 0.2e1 * t1675;
t1586 = t1619 * qJDD(1) + t1622 * t1734;
t1585 = -t1604 + t1694;
t1580 = t1600 - t1598;
t1560 = -pkin(6) * t1586 + g(3) * t1622;
t1553 = -t1563 + t1733;
t1552 = t1731 - t1733;
t1540 = t1574 * t1616 + t1599 * t1613;
t1537 = t1574 * t1613 - t1599 * t1616;
t1530 = t1580 * t1616 + t1585 * t1613;
t1529 = t1579 * t1616 - t1584 * t1613;
t1528 = t1580 * t1613 - t1585 * t1616;
t1527 = t1579 * t1613 + t1584 * t1616;
t1522 = t1563 - t1731;
t1508 = t1621 * t1519;
t1503 = (t1696 - t1698) * qJD(4);
t1502 = (-t1695 - t1699) * qJD(4);
t1501 = -t1543 + t1731;
t1500 = -t1731 + t1732;
t1496 = -pkin(1) * t1581 - t1526;
t1495 = pkin(1) * t1582 - t1525;
t1486 = t1543 - t1732;
t1477 = -qJD(4) * t1696 + t1521 * t1621;
t1476 = qJD(4) * t1695 + t1521 * t1618;
t1475 = qJD(4) * t1698 + t1705;
t1474 = qJD(4) * t1699 - t1508;
t1469 = -t1619 * t1537 + t1540 * t1622;
t1468 = t1537 * t1622 + t1619 * t1540;
t1466 = -t1553 * t1618 + t1751;
t1465 = t1552 * t1621 - t1707;
t1463 = t1553 * t1621 + t1753;
t1462 = t1552 * t1618 + t1706;
t1454 = pkin(1) * t1457;
t1449 = -t1518 * t1621 - t1520 * t1618;
t1447 = -t1518 * t1618 + t1520 * t1621;
t1445 = -t1479 + t1558;
t1444 = t1478 - t1558;
t1440 = pkin(1) * t1724 + qJ(2) * t1671;
t1427 = (-t1544 * t1614 + t1545 * t1611) * t1566;
t1426 = (-t1544 * t1611 - t1545 * t1614) * t1566;
t1425 = -t1502 * t1612 + t1503 * t1615;
t1424 = t1502 * t1615 + t1503 * t1612;
t1423 = t1497 * t1614 - t1545 * t1701;
t1422 = t1497 * t1611 + t1545 * t1700;
t1421 = t1544 * t1700 - t1611 * t1646;
t1420 = -t1544 * t1701 - t1614 * t1646;
t1419 = pkin(1) * t1539 + t1676;
t1418 = pkin(1) * t1537 + t1643;
t1416 = qJDD(4) * t1613 + t1425 * t1616;
t1415 = -qJDD(4) * t1616 + t1425 * t1613;
t1413 = t1479 - t1478;
t1407 = -t1476 * t1612 + t1477 * t1615;
t1406 = -t1474 * t1612 + t1475 * t1615;
t1405 = t1476 * t1615 + t1477 * t1612;
t1404 = t1474 * t1615 + t1475 * t1612;
t1401 = -t1463 * t1612 + t1466 * t1615;
t1400 = -t1462 * t1612 + t1465 * t1615;
t1399 = t1464 * t1615 + t1467 * t1612;
t1398 = t1463 * t1615 + t1466 * t1612;
t1397 = t1462 * t1615 + t1465 * t1612;
t1396 = t1427 * t1621 + t1705;
t1395 = t1427 * t1618 - t1508;
t1393 = -qJ(2) * t1537 - t1485 * t1613 + t1499 * t1616;
t1392 = -qJ(2) * t1539 - t1484 * t1613 + t1498 * t1616;
t1391 = qJ(2) * t1540 + t1485 * t1616 + t1499 * t1613;
t1390 = -qJ(2) * t1541 + t1484 * t1616 + t1498 * t1613;
t1388 = t1500 * t1614 - t1712;
t1387 = -t1501 * t1611 + t1755;
t1386 = t1500 * t1611 + t1711;
t1385 = t1501 * t1614 + t1756;
t1379 = t1423 * t1621 + t1682;
t1378 = t1421 * t1621 - t1682;
t1377 = t1423 * t1618 - t1681;
t1376 = t1421 * t1618 + t1681;
t1367 = -qJD(6) * t1483 - t1672;
t1366 = t1401 * t1616 + t1565 * t1613;
t1365 = t1400 * t1616 - t1564 * t1613;
t1364 = t1401 * t1613 - t1565 * t1616;
t1363 = t1400 * t1613 + t1564 * t1616;
t1362 = -qJ(2) * t1527 + t1411 * t1616;
t1361 = qJ(2) * t1529 + t1411 * t1613;
t1360 = (-t1481 * t1620 + t1483 * t1617) * t1559;
t1359 = (-t1481 * t1617 - t1483 * t1620) * t1559;
t1358 = -t1447 * t1612 + t1449 * t1615;
t1356 = t1447 * t1615 + t1449 * t1612;
t1355 = t1446 * t1615 + t1448 * t1612;
t1349 = t1442 * t1615 + t1443 * t1612;
t1344 = t1407 * t1616 + t1680;
t1343 = t1406 * t1616 - t1680;
t1342 = t1407 * t1613 - t1679;
t1341 = t1406 * t1613 + t1679;
t1340 = t1412 * t1616 + t1507 * t1613;
t1339 = t1412 * t1613 - t1507 * t1616;
t1335 = t1402 * t1616 + t1520 * t1613;
t1334 = t1402 * t1613 - t1520 * t1616;
t1332 = pkin(1) * t1527 + t1654;
t1328 = t1431 * t1614 - t1433 * t1611;
t1326 = t1431 * t1611 + t1433 * t1614;
t1322 = t1358 * t1616 + t1522 * t1613;
t1321 = t1358 * t1613 - t1522 * t1616;
t1320 = t1350 * t1616 + t1518 * t1613;
t1319 = t1350 * t1613 - t1518 * t1616;
t1312 = t1357 * t1616 + t1490 * t1613;
t1311 = t1357 * t1613 - t1490 * t1616;
t1310 = t1388 * t1621 + t1432 * t1618;
t1309 = t1387 * t1621 + t1434 * t1618;
t1308 = t1388 * t1618 - t1432 * t1621;
t1307 = t1387 * t1618 - t1434 * t1621;
t1298 = t1444 * t1620 - t1714;
t1297 = -t1445 * t1617 + t1752;
t1296 = t1444 * t1617 + t1713;
t1295 = t1445 * t1620 + t1754;
t1294 = t1368 * t1620 - t1483 * t1703;
t1293 = t1368 * t1617 + t1483 * t1702;
t1292 = -t1367 * t1617 + t1481 * t1702;
t1291 = t1367 * t1620 + t1481 * t1703;
t1290 = -pkin(2) * t1355 - t1729;
t1289 = t1328 * t1621 + t1486 * t1618;
t1288 = t1328 * t1618 - t1486 * t1621;
t1279 = -t1395 * t1612 + t1396 * t1615;
t1278 = t1395 * t1615 + t1396 * t1612;
t1273 = -t1377 * t1612 + t1379 * t1615;
t1272 = -t1376 * t1612 + t1378 * t1615;
t1271 = t1377 * t1615 + t1379 * t1612;
t1270 = t1376 * t1615 + t1378 * t1612;
t1269 = -t1359 * t1611 + t1360 * t1614;
t1268 = t1359 * t1614 + t1360 * t1611;
t1267 = pkin(1) * t1339 + t1687;
t1266 = -pkin(2) * t1399 - t1652;
t1260 = t1269 * t1621 + t1510 * t1618;
t1259 = t1269 * t1618 - t1510 * t1621;
t1258 = t1279 * t1616 + t1426 * t1613;
t1257 = t1279 * t1613 - t1426 * t1616;
t1253 = -pkin(2) * t1349 - t1641;
t1250 = t1273 * t1616 + t1422 * t1613;
t1249 = t1272 * t1616 - t1420 * t1613;
t1248 = t1273 * t1613 - t1422 * t1616;
t1247 = t1272 * t1613 + t1420 * t1616;
t1244 = -qJ(2) * t1339 - (pkin(2) * t1613 - qJ(3) * t1616) * t1411;
t1243 = -qJ(3) * t1399 - t1354 * t1612 + t1408 * t1615;
t1240 = -t1308 * t1612 + t1310 * t1615;
t1239 = -t1307 * t1612 + t1309 * t1615;
t1238 = t1308 * t1615 + t1310 * t1612;
t1237 = t1307 * t1615 + t1309 * t1612;
t1235 = -t1301 * t1620 - t1617 * t1742;
t1233 = -t1301 * t1617 + t1620 * t1742;
t1232 = -t1296 * t1611 + t1298 * t1614;
t1231 = -t1295 * t1611 + t1297 * t1614;
t1230 = t1296 * t1614 + t1298 * t1611;
t1229 = t1295 * t1614 + t1297 * t1611;
t1228 = -t1293 * t1611 + t1294 * t1614;
t1227 = -t1291 * t1611 + t1292 * t1614;
t1226 = t1293 * t1614 + t1294 * t1611;
t1225 = t1291 * t1614 + t1292 * t1611;
t1224 = -t1288 * t1612 + t1289 * t1615;
t1223 = t1288 * t1615 + t1289 * t1612;
t1222 = -qJ(3) * t1349 - t1331 * t1612 + t1384 * t1615;
t1220 = t1286 * t1615 + t1287 * t1612;
t1213 = t1282 * t1615 + t1283 * t1612;
t1210 = t1280 * t1615 + t1281 * t1612;
t1208 = qJ(2) * t1340 - (-pkin(2) * t1616 - qJ(3) * t1613 - pkin(1)) * t1411;
t1198 = t1228 * t1621 + t1684;
t1197 = t1227 * t1621 - t1684;
t1196 = t1228 * t1618 - t1683;
t1195 = t1227 * t1618 + t1683;
t1193 = t1275 * t1612 + t1715;
t1190 = t1240 * t1616 + t1386 * t1613;
t1189 = t1239 * t1616 + t1385 * t1613;
t1188 = t1240 * t1613 - t1386 * t1616;
t1187 = t1239 * t1613 - t1385 * t1616;
t1185 = pkin(1) * t1334 + t1655;
t1182 = t1221 * t1616 + t1371 * t1613;
t1181 = t1221 * t1613 - t1371 * t1616;
t1180 = t1194 * t1616 + t1480 * t1613;
t1179 = t1194 * t1613 - t1480 * t1616;
t1178 = t1224 * t1616 + t1326 * t1613;
t1177 = t1224 * t1613 - t1326 * t1616;
t1176 = t1214 * t1616 + t1351 * t1613;
t1175 = t1214 * t1613 - t1351 * t1616;
t1174 = t1232 * t1621 - t1302 * t1618;
t1173 = t1231 * t1621 + t1305 * t1618;
t1172 = t1232 * t1618 + t1302 * t1621;
t1171 = t1231 * t1618 - t1305 * t1621;
t1170 = t1211 * t1616 + t1327 * t1613;
t1169 = t1211 * t1613 - t1327 * t1616;
t1168 = pkin(1) * t1319 + t1656;
t1167 = -t1259 * t1612 + t1260 * t1615;
t1166 = t1259 * t1615 + t1260 * t1612;
t1153 = -pkin(2) * t1193 - t1730;
t1151 = -t1233 * t1611 + t1235 * t1614;
t1149 = t1233 * t1614 + t1235 * t1611;
t1146 = -qJ(2) * t1334 + t1243 * t1616 - t1266 * t1613;
t1145 = -qJ(3) * t1355 - t1242 * t1612 + t1255 * t1615;
t1141 = t1151 * t1621 + t1413 * t1618;
t1140 = t1151 * t1618 - t1413 * t1621;
t1139 = t1167 * t1616 + t1268 * t1613;
t1138 = t1167 * t1613 - t1268 * t1616;
t1137 = -pkin(1) * t1399 + qJ(2) * t1335 + t1243 * t1613 + t1266 * t1616;
t1136 = -qJ(2) * t1319 + t1222 * t1616 - t1253 * t1613;
t1128 = -pkin(2) * t1220 - t1644;
t1125 = -t1196 * t1612 + t1198 * t1615;
t1124 = -t1195 * t1612 + t1197 * t1615;
t1123 = t1196 * t1615 + t1198 * t1612;
t1122 = t1195 * t1615 + t1197 * t1612;
t1121 = -pkin(2) * t1213 - t1645;
t1120 = pkin(1) * t1311 + t1657;
t1119 = -pkin(1) * t1349 + qJ(2) * t1320 + t1222 * t1613 + t1253 * t1616;
t1118 = -pkin(7) * t1715 - qJ(3) * t1193 - t1263 * t1612;
t1112 = -qJ(2) * t1311 + t1145 * t1616 - t1290 * t1613;
t1111 = -t1172 * t1612 + t1174 * t1615;
t1110 = -t1171 * t1612 + t1173 * t1615;
t1109 = t1172 * t1615 + t1174 * t1612;
t1108 = t1171 * t1615 + t1173 * t1612;
t1104 = t1164 * t1615 + t1165 * t1612;
t1102 = -pkin(1) * t1355 + qJ(2) * t1312 + t1145 * t1613 + t1290 * t1616;
t1098 = t1158 * t1615 + t1159 * t1612;
t1096 = t1125 * t1616 + t1226 * t1613;
t1095 = t1124 * t1616 + t1225 * t1613;
t1094 = t1125 * t1613 - t1226 * t1616;
t1093 = t1124 * t1613 - t1225 * t1616;
t1092 = -pkin(2) * t1210 - t1634;
t1090 = t1111 * t1616 + t1230 * t1613;
t1089 = t1110 * t1616 + t1229 * t1613;
t1088 = t1111 * t1613 - t1230 * t1616;
t1087 = t1110 * t1613 - t1229 * t1616;
t1085 = pkin(1) * t1179 + t1639;
t1083 = t1105 * t1616 + t1217 * t1613;
t1082 = t1105 * t1613 - t1217 * t1616;
t1080 = t1142 * t1615 + t1143 * t1612;
t1077 = -t1140 * t1612 + t1141 * t1615;
t1076 = t1140 * t1615 + t1141 * t1612;
t1074 = t1134 * t1615 + t1135 * t1612;
t1070 = t1099 * t1616 + t1201 * t1613;
t1069 = t1099 * t1613 - t1201 * t1616;
t1062 = -qJ(2) * t1179 + t1118 * t1616 - t1153 * t1613;
t1061 = t1081 * t1616 + t1162 * t1613;
t1060 = t1081 * t1613 - t1162 * t1616;
t1057 = -qJ(3) * t1220 - t1117 * t1612 + t1130 * t1615;
t1056 = t1077 * t1616 + t1149 * t1613;
t1055 = t1077 * t1613 - t1149 * t1616;
t1054 = -qJ(3) * t1213 - t1115 * t1612 + t1127 * t1615;
t1053 = t1075 * t1616 + t1150 * t1613;
t1052 = t1075 * t1613 - t1150 * t1616;
t1051 = -pkin(1) * t1193 + qJ(2) * t1180 + t1118 * t1613 + t1153 * t1616;
t1048 = -qJ(3) * t1210 - t1101 * t1612 + t1107 * t1615;
t1047 = pkin(1) * t1181 + t1661;
t1046 = pkin(1) * t1175 + t1662;
t1045 = -pkin(2) * t1080 - t1653;
t1044 = -pkin(2) * t1104 - t1635;
t1043 = pkin(1) * t1169 + t1663;
t1036 = -pkin(2) * t1098 - t1636;
t1035 = -qJ(2) * t1181 + t1057 * t1616 - t1128 * t1613;
t1030 = -qJ(2) * t1175 + t1054 * t1616 - t1121 * t1613;
t1027 = -pkin(1) * t1220 + qJ(2) * t1182 + t1057 * t1613 + t1128 * t1616;
t1026 = -pkin(1) * t1213 + qJ(2) * t1176 + t1054 * t1613 + t1121 * t1616;
t1023 = -qJ(2) * t1169 + t1048 * t1616 - t1092 * t1613;
t1021 = -pkin(1) * t1210 + qJ(2) * t1170 + t1048 * t1613 + t1092 * t1616;
t1019 = -qJ(3) * t1080 - t1050 * t1612 + t1066 * t1615;
t1014 = t1033 * t1615 + t1034 * t1612;
t1010 = -pkin(2) * t1074 - t1637;
t1009 = -qJ(3) * t1104 - t1029 * t1612 + t1038 * t1615;
t1008 = pkin(1) * t1060 + t1664;
t1007 = -qJ(3) * t1098 - t1025 * t1612 + t1032 * t1615;
t1006 = pkin(1) * t1082 + t1666;
t1005 = t1015 * t1616 + t1041 * t1613;
t1004 = t1015 * t1613 - t1041 * t1616;
t1003 = pkin(1) * t1069 + t1667;
t1002 = -qJ(2) * t1060 + t1019 * t1616 - t1045 * t1613;
t1001 = -pkin(1) * t1080 + qJ(2) * t1061 + t1019 * t1613 + t1045 * t1616;
t1000 = -qJ(2) * t1082 + t1009 * t1616 - t1044 * t1613;
t999 = -pkin(1) * t1104 + qJ(2) * t1083 + t1009 * t1613 + t1044 * t1616;
t998 = -qJ(2) * t1069 + t1007 * t1616 - t1036 * t1613;
t997 = -pkin(1) * t1098 + qJ(2) * t1070 + t1007 * t1613 + t1036 * t1616;
t994 = -qJ(3) * t1074 - t1012 * t1612 + t1018 * t1615;
t993 = -pkin(2) * t1014 - t1629;
t992 = pkin(1) * t1052 + t1668;
t989 = -qJ(2) * t1052 - t1010 * t1613 + t1616 * t994;
t988 = -pkin(1) * t1074 + qJ(2) * t1053 + t1010 * t1616 + t1613 * t994;
t987 = -qJ(3) * t1014 - t1612 * t991 + t1615 * t996;
t986 = pkin(1) * t1004 + t1669;
t985 = -qJ(2) * t1004 - t1613 * t993 + t1616 * t987;
t984 = -pkin(1) * t1014 + qJ(2) * t1005 + t1613 * t987 + t1616 * t993;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1587, 0, -t1586, 0, t1651, -t1560, -t1648, -pkin(6) * t1648, 0, 0, t1531, 0, -t1740, 0, t1759, -t1758, t1760, pkin(6) * t1760 + qJ(2) * t1710 - t1619 * t1440, -t1649, -t1619 * t1528 + t1530 * t1622, t1469, t1649, t1747, 0, -pkin(6) * t1748 - t1619 * t1390 + t1622 * t1392, -pkin(6) * t1468 - t1619 * t1391 + t1393 * t1622, t1622 * t1362 - t1619 * t1361 - pkin(6) * (t1527 * t1622 + t1619 * t1529), t1622 * t1244 - t1619 * t1208 - pkin(6) * (t1339 * t1622 + t1619 * t1340), -t1619 * t1342 + t1344 * t1622, -t1619 * t1321 + t1322 * t1622, -t1619 * t1364 + t1366 * t1622, -t1619 * t1341 + t1343 * t1622, -t1619 * t1363 + t1365 * t1622, -t1619 * t1415 + t1416 * t1622, t1622 * t1136 - t1619 * t1119 - pkin(6) * (t1319 * t1622 + t1619 * t1320), t1622 * t1146 - t1619 * t1137 - pkin(6) * (t1334 * t1622 + t1619 * t1335), t1622 * t1112 - t1619 * t1102 - pkin(6) * (t1311 * t1622 + t1619 * t1312), t1622 * t1062 - t1619 * t1051 - pkin(6) * (t1179 * t1622 + t1619 * t1180), -t1619 * t1248 + t1250 * t1622, -t1619 * t1177 + t1178 * t1622, -t1619 * t1187 + t1189 * t1622, -t1619 * t1247 + t1249 * t1622, -t1619 * t1188 + t1190 * t1622, -t1619 * t1257 + t1258 * t1622, t1622 * t1030 - t1619 * t1026 - pkin(6) * (t1175 * t1622 + t1619 * t1176), t1622 * t1035 - t1619 * t1027 - pkin(6) * (t1181 * t1622 + t1619 * t1182), t1622 * t1023 - t1619 * t1021 - pkin(6) * (t1169 * t1622 + t1619 * t1170), t1622 * t1002 - t1619 * t1001 - pkin(6) * (t1060 * t1622 + t1619 * t1061), -t1619 * t1094 + t1096 * t1622, -t1619 * t1055 + t1056 * t1622, -t1619 * t1087 + t1089 * t1622, -t1619 * t1093 + t1095 * t1622, -t1619 * t1088 + t1090 * t1622, -t1619 * t1138 + t1139 * t1622, t1622 * t998 - t1619 * t997 - pkin(6) * (t1069 * t1622 + t1619 * t1070), t1622 * t1000 - t1619 * t999 - pkin(6) * (t1082 * t1622 + t1619 * t1083), t1622 * t989 - t1619 * t988 - pkin(6) * (t1052 * t1622 + t1619 * t1053), t1622 * t985 - t1619 * t984 - pkin(6) * (t1004 * t1622 + t1619 * t1005); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1586, 0, t1587, 0, t1560, t1651, t1670, pkin(6) * t1670, 0, 0, t1740, 0, t1531, 0, t1758, t1759, t1761, pkin(6) * t1761 + qJ(2) * t1692 + t1622 * t1440, t1650, t1528 * t1622 + t1619 * t1530, t1468, -t1650, -t1748, 0, -pkin(6) * t1747 + t1622 * t1390 + t1619 * t1392, pkin(6) * t1469 + t1391 * t1622 + t1619 * t1393, t1619 * t1362 + t1622 * t1361 + pkin(6) * (-t1619 * t1527 + t1529 * t1622), t1619 * t1244 + t1622 * t1208 + pkin(6) * (-t1619 * t1339 + t1340 * t1622), t1342 * t1622 + t1619 * t1344, t1321 * t1622 + t1619 * t1322, t1364 * t1622 + t1619 * t1366, t1341 * t1622 + t1619 * t1343, t1363 * t1622 + t1619 * t1365, t1415 * t1622 + t1619 * t1416, t1619 * t1136 + t1622 * t1119 + pkin(6) * (-t1619 * t1319 + t1320 * t1622), t1619 * t1146 + t1622 * t1137 + pkin(6) * (-t1619 * t1334 + t1335 * t1622), t1619 * t1112 + t1622 * t1102 + pkin(6) * (-t1619 * t1311 + t1312 * t1622), t1619 * t1062 + t1622 * t1051 + pkin(6) * (-t1619 * t1179 + t1180 * t1622), t1248 * t1622 + t1619 * t1250, t1177 * t1622 + t1619 * t1178, t1187 * t1622 + t1619 * t1189, t1247 * t1622 + t1619 * t1249, t1188 * t1622 + t1619 * t1190, t1257 * t1622 + t1619 * t1258, t1619 * t1030 + t1622 * t1026 + pkin(6) * (-t1619 * t1175 + t1176 * t1622), t1619 * t1035 + t1622 * t1027 + pkin(6) * (-t1619 * t1181 + t1182 * t1622), t1619 * t1023 + t1622 * t1021 + pkin(6) * (-t1619 * t1169 + t1170 * t1622), t1619 * t1002 + t1622 * t1001 + pkin(6) * (-t1619 * t1060 + t1061 * t1622), t1094 * t1622 + t1619 * t1096, t1055 * t1622 + t1619 * t1056, t1087 * t1622 + t1619 * t1089, t1093 * t1622 + t1619 * t1095, t1088 * t1622 + t1619 * t1090, t1138 * t1622 + t1619 * t1139, t1619 * t998 + t1622 * t997 + pkin(6) * (-t1619 * t1069 + t1070 * t1622), t1619 * t1000 + t1622 * t999 + pkin(6) * (-t1619 * t1082 + t1083 * t1622), t1619 * t989 + t1622 * t988 + pkin(6) * (-t1619 * t1052 + t1053 * t1622), t1619 * t985 + t1622 * t984 + pkin(6) * (-t1619 * t1004 + t1005 * t1622); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1588, t1589, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1495, t1496, 0, -t1454, t1598, t1590, 0, t1600, 0, 0, t1419, t1418, t1332, t1267, t1405, t1356, t1398, t1404, t1397, t1424, t1168, t1185, t1120, t1085, t1271, t1223, t1237, t1270, t1238, t1278, t1046, t1047, t1043, t1008, t1123, t1076, t1108, t1122, t1109, t1166, t1003, t1006, t992, t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1734, 0, 0, -g(3), -t1588, 0, 0, 0, t1582, 0, -t1581, 0, t1735, -t1550, t1457, qJ(2) * t1457, t1547, t1530, t1540, -t1547, t1541, 0, t1392, t1393, t1362, t1244, t1344, t1322, t1366, t1343, t1365, t1416, t1136, t1146, t1112, t1062, t1250, t1178, t1189, t1249, t1190, t1258, t1030, t1035, t1023, t1002, t1096, t1056, t1089, t1095, t1090, t1139, t998, t1000, t989, t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1734, 0, qJDD(1), 0, g(3), 0, -t1589, 0, 0, 0, t1581, 0, t1582, 0, t1550, t1735, t1671, t1440, t1546, t1528, t1537, -t1546, -t1539, 0, t1390, t1391, t1361, t1208, t1342, t1321, t1364, t1341, t1363, t1415, t1119, t1137, t1102, t1051, t1248, t1177, t1187, t1247, t1188, t1257, t1026, t1027, t1021, t1001, t1094, t1055, t1087, t1093, t1088, t1138, t997, t999, t988, t984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1588, t1589, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1495, t1496, 0, -t1454, t1598, t1590, 0, t1600, 0, 0, t1419, t1418, t1332, t1267, t1405, t1356, t1398, t1404, t1397, t1424, t1168, t1185, t1120, t1085, t1271, t1223, t1237, t1270, t1238, t1278, t1046, t1047, t1043, t1008, t1123, t1076, t1108, t1122, t1109, t1166, t1003, t1006, t992, t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1734, 0, 0, -t1724, t1525, 0, t1675, t1580, t1574, -t1675, t1575, 0, t1498, t1499, t1411, qJ(3) * t1411, t1407, t1358, t1401, t1406, t1400, t1425, t1222, t1243, t1145, t1118, t1273, t1224, t1239, t1272, t1240, t1279, t1054, t1057, t1048, t1019, t1125, t1077, t1110, t1124, t1111, t1167, t1007, t1009, t994, t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1734, 0, qJDD(1), 0, t1724, 0, t1526, 0, t1591, -t1585, -t1599, -t1591, -t1601, 0, t1484, t1485, 0, pkin(2) * t1411, -t1524, -t1522, -t1565, t1524, t1564, -qJDD(4), t1253, t1266, t1290, t1153, -t1422, -t1326, -t1385, t1420, -t1386, -t1426, t1121, t1128, t1092, t1045, -t1226, -t1149, -t1229, -t1225, -t1230, -t1268, t1036, t1044, t1010, t993; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1525, -t1526, 0, 0, t1598, t1590, 0, t1600, 0, 0, t1676, t1643, t1654, t1687, t1405, t1356, t1398, t1404, t1397, t1424, t1656, t1655, t1657, t1639, t1271, t1223, t1237, t1270, t1238, t1278, t1662, t1661, t1663, t1664, t1123, t1076, t1108, t1122, t1109, t1166, t1667, t1666, t1668, t1669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1599, t1601, t1591, 0, t1604, 0, 0, t1507, t1484, 0, t1477, t1449, t1466, t1475, t1465, t1503, t1384, t1408, t1255, -pkin(7) * t1274, t1379, t1289, t1309, t1378, t1310, t1396, t1127, t1130, t1107, t1066, t1198, t1141, t1173, t1197, t1174, t1260, t1032, t1038, t1018, t996; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1599, -t1694, t1601, -t1591, 0, -t1507, 0, t1485, 0, t1476, t1447, t1463, t1474, t1462, t1502, t1331, t1354, t1242, t1263, t1377, t1288, t1307, t1376, t1308, t1395, t1115, t1117, t1101, t1050, t1196, t1140, t1171, t1195, t1172, t1259, t1025, t1029, t1012, t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1591, t1585, t1599, t1591, t1601, 0, -t1484, -t1485, 0, 0, t1524, t1522, t1565, -t1524, -t1564, qJDD(4), t1641, t1652, t1729, t1730, t1422, t1326, t1385, -t1420, t1386, t1426, t1645, t1644, t1634, t1653, t1226, t1149, t1229, t1225, t1230, t1268, t1636, t1635, t1637, t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1521, -t1518, t1737, t1557, t1552, -t1557, 0, t1480, t1381, 0, t1423, t1328, t1387, t1421, t1388, t1427, t1256, t1261, t1144, -qJ(5) * t1162, t1228, t1151, t1231, t1227, t1232, t1269, t1078, t1086, t1022, t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1697, t1520, t1553, -t1519, t1516, -t1697, -t1480, 0, t1382, 0, -t1489, -t1486, -t1434, t1489, -t1432, -t1519, t1205, t1206, -pkin(4) * t1327, -pkin(4) * t1162, -t1414, -t1413, -t1305, t1414, t1302, -t1510, t1084, t1091, t1113, t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1522, t1565, -t1524, -t1564, qJDD(4), -t1381, -t1382, 0, 0, t1422, t1326, t1385, -t1420, t1386, t1426, t1677, t1678, t1658, t1688, t1226, t1149, t1229, t1225, t1230, t1268, t1660, t1659, t1665, t1638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497, t1431, t1741, t1504, t1500, -t1504, 0, t1317, t1251, 0, t1294, t1235, t1297, t1292, t1298, t1360, t1184, t1191, t1064, -pkin(8) * t1071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1505, t1433, t1501, t1646, t1437, -t1505, -t1317, 0, t1252, 0, t1293, t1233, t1295, t1291, t1296, t1359, t1155, t1157, t1059, t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1489, t1486, t1434, -t1489, t1432, t1519, -t1251, -t1252, 0, 0, t1414, t1413, t1305, -t1414, -t1302, t1510, t1640, t1631, t1726, t1727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1368, -t1301, t1743, t1450, t1444, -t1450, 0, t1265, t1132, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1704, t1742, t1445, t1367, t1374, -t1704, -t1265, 0, t1133, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, t1413, t1305, -t1414, -t1302, t1510, -t1132, -t1133, 0, 0;];
m_new_reg  = t1;
