% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPPRPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:40:05
% EndTime: 2019-03-09 01:40:15
% DurationCPUTime: 4.04s
% Computational Cost: add. (4690->297), mult. (9646->403), div. (0->0), fcn. (11122->10), ass. (0->248)
t229 = sin(pkin(10));
t231 = cos(pkin(10));
t234 = sin(qJ(4));
t371 = cos(qJ(4));
t206 = t234 * t229 - t371 * t231;
t228 = sin(pkin(11));
t235 = cos(qJ(6));
t336 = t235 * t228;
t230 = cos(pkin(11));
t233 = sin(qJ(6));
t339 = t233 * t230;
t312 = (t339 / 0.2e1 + t336 / 0.2e1) * t206;
t290 = t371 * t229;
t337 = t234 * t231;
t202 = t290 / 0.2e1 + t337 / 0.2e1;
t209 = t290 + t337;
t224 = t228 ^ 2;
t226 = t230 ^ 2;
t270 = t226 / 0.2e1 + t224 / 0.2e1;
t379 = t270 * t209;
t110 = t379 + t202;
t383 = t110 * qJD(5);
t111 = t379 - t202;
t382 = t111 * qJD(5);
t208 = t336 + t339;
t87 = t209 * t208;
t315 = t87 * qJD(1);
t340 = t233 * t228;
t277 = t340 / 0.2e1;
t335 = t235 * t230;
t380 = t277 - t335 / 0.2e1;
t297 = t206 * qJD(1);
t287 = t87 * t297;
t203 = t206 ^ 2;
t376 = t209 ^ 2;
t378 = t203 + t376;
t214 = t224 + t226;
t306 = t87 * qJD(6);
t346 = t208 * t206;
t278 = t346 / 0.2e1;
t257 = t278 + t312;
t323 = t257 * qJD(4);
t73 = t257 * qJD(6);
t204 = -t335 + t340;
t375 = -t204 / 0.2e1;
t374 = -t206 / 0.2e1;
t373 = t208 / 0.2e1;
t223 = -t230 * pkin(5) - pkin(4);
t372 = t223 / 0.2e1;
t370 = t209 * pkin(4);
t218 = sin(pkin(9)) * pkin(1) + qJ(3);
t369 = pkin(7) + t218;
t368 = pkin(8) + qJ(5);
t343 = t209 * t230;
t210 = -cos(pkin(9)) * pkin(1) - t231 * pkin(3) - pkin(2);
t264 = t206 * pkin(4) - t209 * qJ(5);
t124 = t210 + t264;
t198 = t369 * t231;
t291 = t371 * t198;
t197 = t369 * t229;
t338 = t234 * t197;
t133 = t291 - t338;
t341 = t228 * t133;
t58 = t230 * t124 - t341;
t238 = t206 * pkin(5) - pkin(8) * t343 + t58;
t135 = t228 * t209;
t123 = t230 * t133;
t59 = t228 * t124 + t123;
t45 = -pkin(8) * t135 + t59;
t18 = t233 * t45 - t235 * t238;
t349 = t206 * qJ(5);
t146 = t349 + t370;
t132 = t371 * t197 + t234 * t198;
t342 = t228 * t132;
t66 = t230 * t146 + t342;
t38 = t230 * t206 * pkin(8) + t209 * pkin(5) + t66;
t363 = t235 * t38;
t137 = t206 * t228;
t122 = t230 * t132;
t67 = t228 * t146 - t122;
t52 = pkin(8) * t137 + t67;
t364 = t233 * t52;
t88 = pkin(5) * t135 + t132;
t89 = -pkin(5) * t137 + t133;
t1 = (t363 - t364) * t206 - t18 * t209 + t89 * t87 - t88 * t346;
t367 = t1 * qJD(1);
t130 = t204 * t206;
t180 = t209 * t340;
t131 = t209 * t335 - t180;
t19 = t233 * t238 + t235 * t45;
t362 = t235 * t52;
t365 = t233 * t38;
t2 = -(t362 + t365) * t206 - t19 * t209 + t89 * t131 + t88 * t130;
t366 = t2 * qJD(1);
t361 = t58 * t228;
t360 = t59 * t230;
t262 = -t228 * t59 - t230 * t58;
t356 = t67 * t228;
t357 = t66 * t230;
t6 = (t356 + t357) * t209 + t262 * t206;
t359 = t6 * qJD(1);
t358 = t66 * t228;
t355 = t67 * t230;
t11 = t18 * t206 - t87 * t88;
t354 = t11 * qJD(1);
t12 = t88 * t131 - t19 * t206;
t353 = t12 * qJD(1);
t352 = t130 * t206;
t351 = t131 * t209;
t15 = (t58 + t341) * t209 + (t66 - t342) * t206;
t350 = t15 * qJD(1);
t348 = t206 * t346;
t347 = t206 * t209;
t345 = t209 * t87;
t344 = t209 * t204;
t239 = -t270 * t349 - t370 / 0.2e1;
t247 = -t357 / 0.2e1 - t356 / 0.2e1;
t24 = t239 + t247;
t334 = t24 * qJD(1);
t26 = t262 * t209;
t333 = t26 * qJD(1);
t29 = -t130 * t87 + t131 * t346;
t332 = t29 * qJD(1);
t39 = -t345 + t348;
t331 = t39 * qJD(1);
t40 = t345 + t348;
t330 = t40 * qJD(1);
t41 = t351 + t352;
t329 = t41 * qJD(1);
t42 = t351 - t352;
t328 = t42 * qJD(1);
t55 = (0.1e1 / 0.2e1 - t270) * t347;
t326 = t55 * qJD(1);
t75 = t278 - t312;
t325 = t75 * qJD(1);
t324 = t75 * qJD(4);
t70 = t257 * qJD(1);
t279 = t130 / 0.2e1;
t313 = t380 * t206;
t78 = t279 + t313;
t322 = t78 * qJD(1);
t321 = t78 * qJD(4);
t280 = -t130 / 0.2e1;
t79 = t280 + t313;
t320 = t79 * qJD(1);
t271 = t335 / 0.2e1;
t314 = t206 * t271 + t340 * t374;
t80 = t279 + t314;
t319 = t80 * qJD(4);
t81 = t280 + t314;
t318 = t81 * qJD(1);
t83 = t214 * t376;
t317 = t83 * qJD(1);
t316 = t344 * qJD(1);
t215 = t229 ^ 2 + t231 ^ 2;
t311 = qJD(1) * t131;
t310 = qJD(5) * t206;
t309 = t110 * qJD(1);
t114 = t378 * t228;
t308 = t114 * qJD(1);
t120 = t203 - t376;
t307 = t120 * qJD(1);
t121 = t131 * qJD(6);
t305 = t133 * qJD(4);
t304 = t135 * qJD(1);
t138 = t214 * t206;
t303 = t138 * qJD(1);
t302 = t138 * qJD(4);
t139 = t378 * t230;
t301 = t139 * qJD(1);
t159 = t215 * t218;
t300 = t159 * qJD(1);
t299 = t202 * qJD(1);
t298 = t204 * qJD(4);
t199 = t204 * qJD(6);
t200 = t206 * qJD(4);
t296 = t208 * qJD(4);
t295 = t208 * qJD(6);
t294 = t209 * qJD(1);
t201 = t209 * qJD(4);
t293 = t214 * qJD(4);
t292 = t215 * qJD(1);
t289 = t209 * t310;
t288 = t344 * t297;
t286 = t131 * t297;
t285 = t206 * t294;
t284 = t206 * t201;
t283 = t204 * t201;
t282 = t230 * t294;
t281 = t230 * t201;
t269 = qJD(1) * t210 + qJD(3);
t268 = qJD(4) * t223 + qJD(5);
t267 = t206 * t282;
t248 = t361 / 0.2e1 - t360 / 0.2e1;
t4 = (t355 / 0.2e1 - t358 / 0.2e1 + t132 / 0.2e1) * t209 + (t133 / 0.2e1 + t248) * t206;
t5 = t132 * t133 + t58 * t66 + t59 * t67;
t263 = t5 * qJD(1) + t4 * qJD(2);
t261 = t355 - t358;
t56 = (0.1e1 - t214) * t347;
t260 = t4 * qJD(1) + t56 * qJD(2);
t212 = t368 * t228;
t213 = t368 * t230;
t158 = -t233 * t212 + t235 * t213;
t236 = t131 * t372 + t158 * t374 + t88 * t373;
t249 = -t364 / 0.2e1 + t363 / 0.2e1;
t7 = -t236 + t249;
t76 = -t346 / 0.2e1 + t312;
t259 = t7 * qJD(1) + t76 * qJD(2);
t157 = t235 * t212 + t233 * t213;
t237 = t157 * t206 / 0.2e1 - t87 * t372 + t88 * t375;
t250 = -t365 / 0.2e1 - t362 / 0.2e1;
t8 = -t237 + t250;
t258 = t8 * qJD(1) + t80 * qJD(2);
t16 = (-t59 + t123) * t209 + (-t67 - t122) * t206;
t256 = t16 * qJD(1);
t17 = t132 * t209 + (-t360 + t361) * t206;
t255 = t17 * qJD(1) + t55 * qJD(2);
t28 = -t208 * t131 + t204 * t87;
t31 = -t131 ^ 2 + t87 ^ 2;
t254 = t31 * qJD(1) + t28 * qJD(4);
t119 = t204 ^ 2 - t208 ^ 2;
t253 = t28 * qJD(1) + t119 * qJD(4);
t252 = -t298 - t315;
t62 = t180 / 0.2e1 + (t277 - t335) * t209;
t251 = t62 * qJD(1) - t296;
t37 = t131 * t375 - t373 * t87;
t246 = t37 * qJD(4) - t311 * t87;
t245 = -t37 * qJD(1) + t204 * t296;
t244 = t202 * qJD(6) + t285;
t242 = -t338 / 0.2e1 + t291 / 0.2e1;
t20 = t242 + t248;
t211 = t214 * qJ(5);
t240 = t20 * qJD(1) - t111 * qJD(2) - t211 * qJD(4);
t195 = t202 * qJD(4);
t156 = t208 * t201;
t74 = t75 * qJD(6);
t72 = t78 * qJD(6);
t71 = t80 * qJD(6);
t65 = -t180 / 0.2e1 + (t271 + t380) * t209;
t57 = -t295 - t70;
t34 = t37 * qJD(6);
t27 = t28 * qJD(6);
t25 = t239 - t247;
t21 = t242 - t248;
t10 = t236 + t249;
t9 = t237 + t250;
t3 = t55 * qJD(3) + t4 * qJD(4);
t13 = [0, 0, 0, 0, 0, 0, t215 * qJD(3), t159 * qJD(3), -t284, t120 * qJD(4), 0, 0, 0, t210 * t201, -t210 * t200, t114 * qJD(3) + t15 * qJD(4) - t230 * t289, t139 * qJD(3) + t16 * qJD(4) + t228 * t289, -t6 * qJD(4) + t83 * qJD(5), t17 * qJD(3) + t5 * qJD(4) + t26 * qJD(5) (qJD(4) * t130 - t306) * t131, t29 * qJD(4) + t31 * qJD(6), t41 * qJD(4) - t206 * t306, t39 * qJD(4) - t121 * t206, t284, t40 * qJD(3) + t1 * qJD(4) + t12 * qJD(6) + t310 * t344, t42 * qJD(3) + t2 * qJD(4) + t11 * qJD(6) + t310 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, t292, t300, 0, 0, 0, 0, 0, 0, 0, t308, t301, 0, t25 * qJD(4) + t255 - t382, 0, 0, 0, 0, 0, -t74 + t330, -t79 * qJD(6) + t328; 0, 0, 0, 0, 0, 0, 0, 0, -t285, t307, -t200, -t201, 0, t210 * t294 - t305, t132 * qJD(4) - t210 * t297, t350 + (t264 * t228 - t123) * qJD(4) - t137 * qJD(5), t228 * t305 + (qJD(4) * t264 - t310) * t230 + t256, qJD(4) * t261 - t359, t25 * qJD(3) + (-t133 * pkin(4) + qJ(5) * t261) * qJD(4) + t21 * qJD(5) + t263, t34 + (t296 + t311) * t130, t332 + (-t130 * t204 + t208 * t346) * qJD(4) + t27, t156 - t71 + t329, -t283 - t74 + t331, t244, t367 + (-t157 * t209 + t89 * t204 - t223 * t346) * qJD(4) - t257 * qJD(5) + t10 * qJD(6), t366 + (t223 * t130 - t158 * t209 + t89 * t208) * qJD(4) - t81 * qJD(5) + t9 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137 * qJD(4) - t267 (-qJD(4) * t230 + t228 * t294) * t206, t317, -qJD(3) * t111 + t21 * qJD(4) + t333, 0, 0, 0, 0, 0, t65 * qJD(6) + t288 - t323, -t81 * qJD(4) + t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, t254, -t319 + (-qJD(6) - t297) * t87, -t121 - t286 - t324, t195, -t75 * qJD(3) + t10 * qJD(4) + t65 * qJD(5) - t19 * qJD(6) + t353, -t79 * qJD(3) + t9 * qJD(4) + t18 * qJD(6) + t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t200, -t281, t201 * t228, -t302 (-t214 * t349 - t370) * qJD(4) + t383 + t260, 0, 0, 0, 0, 0, t283 + t73, t156 - t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121 + t323, t306 - t321; 0, 0, 0, 0, 0, 0, -t292, -t300, 0, 0, 0, 0, 0, t201, -t200, t281 - t308, -t135 * qJD(4) - t301, t302, -t24 * qJD(4) - t255 - t383, 0, 0, 0, 0, 0, -qJD(4) * t344 - t330 - t73, -t87 * qJD(4) - t81 * qJD(6) - t328; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, -t297, t282, -t304, t303, -t334, 0, 0, 0, 0, 0, -t316, -t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, t199 - t318; 0, 0, 0, 0, 0, 0, 0, 0, t285, -t307, 0, 0, 0, -t269 * t209, t269 * t206, -qJD(3) * t343 - t350, t135 * qJD(3) - t256, -t138 * qJD(3) + t359, t24 * qJD(3) - t20 * qJD(5) - t263, -t130 * t311 + t34, t27 - t332, -t72 - t329, -t73 - t331, -t244, qJD(3) * t344 - t75 * qJD(5) - t7 * qJD(6) - t367, t87 * qJD(3) - t79 * qJD(5) - t8 * qJD(6) - t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260 + t382, 0, 0, 0, 0, 0, -t76 * qJD(6), -t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t294, t297, -t282, t304, -t303, t334, 0, 0, 0, 0, 0, t316, t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214 * qJD(5), t211 * qJD(5), -t204 * t295, t119 * qJD(6), 0, 0, 0, t223 * t295, -t223 * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293, -t240, 0, 0, 0, 0, 0, -t325, -t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245, t253, -t199 - t322, t57, -t299, -t158 * qJD(6) + t223 * t296 - t259, t157 * qJD(6) - t223 * t298 - t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t228 * t285, -t317, qJD(3) * t110 + t20 * qJD(4) - t333, 0, 0, 0, 0, 0, -t62 * qJD(6) - t288 + t324, t79 * qJD(4) - t287 - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293, t240, 0, 0, 0, 0, 0, t295 + t325, -t199 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246, -t254, t321 + t287, t286 + t323, t195, qJD(3) * t257 + t7 * qJD(4) + t62 * qJD(5) - t353, t81 * qJD(3) + t8 * qJD(4) + qJD(5) * t87 - t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76 * qJD(4), t319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, -t253, t322, t70, t299, -t208 * t268 + t259, t204 * t268 + t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, -t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
