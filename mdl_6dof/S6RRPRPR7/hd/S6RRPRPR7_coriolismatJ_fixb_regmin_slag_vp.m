% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x30]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:48
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:47:47
% EndTime: 2019-03-09 10:48:11
% DurationCPUTime: 13.20s
% Computational Cost: add. (9495->484), mult. (17752->666), div. (0->0), fcn. (20609->8), ass. (0->394)
t344 = sin(pkin(10));
t559 = cos(pkin(10));
t568 = sin(qJ(4));
t569 = cos(qJ(4));
t301 = -t344 * t569 - t559 * t568;
t345 = sin(qJ(6));
t493 = qJD(2) * t345;
t347 = cos(qJ(6));
t300 = t344 * t568 - t559 * t569;
t346 = sin(qJ(2));
t348 = cos(qJ(2));
t449 = t348 * t568;
t304 = t346 * t569 - t449;
t412 = t559 * t304;
t450 = t348 * t569;
t302 = t346 * t568 + t450;
t526 = t344 * t302;
t257 = t412 - t526;
t590 = -t257 / 0.2e1;
t631 = t257 / 0.2e1;
t621 = t631 + t590;
t601 = t559 * t302 + t344 * t304;
t591 = -t601 / 0.2e1;
t592 = t601 / 0.2e1;
t622 = t592 + t591;
t641 = t300 * t622 + t301 * t621;
t653 = t641 * t347;
t663 = qJD(1) * t653 + t301 * t493;
t250 = t300 * t347;
t488 = qJD(4) * t345;
t662 = qJD(6) * t250 - t301 * t488 + t663;
t456 = qJD(2) - qJD(4);
t596 = pkin(7) - pkin(8);
t305 = t596 * t449;
t318 = t596 * t346;
t306 = t569 * t318;
t399 = -t306 + t305;
t211 = t304 * qJ(5) + t399;
t216 = t318 * t568 + t450 * t596;
t212 = -t302 * qJ(5) + t216;
t105 = t211 * t559 + t344 * t212;
t643 = t345 * t105;
t90 = t643 / 0.2e1;
t91 = -t643 / 0.2e1;
t661 = t90 + t91;
t642 = t347 * t105;
t92 = t642 / 0.2e1;
t93 = -t642 / 0.2e1;
t660 = t92 + t93;
t535 = t601 ^ 2;
t632 = t257 ^ 2;
t388 = t535 - t632;
t654 = t388 * t347;
t658 = qJD(1) * t654;
t655 = t388 * t345;
t657 = qJD(1) * t655;
t656 = qJD(3) * t653;
t102 = t211 * t344 - t559 * t212;
t581 = t300 / 0.2e1;
t580 = -t301 / 0.2e1;
t616 = t105 * t580;
t652 = -t102 * t581 - t616;
t485 = qJD(6) * t347;
t612 = t347 * t601;
t630 = -t612 / 0.2e1;
t637 = 0.2e1 * t630;
t638 = t637 * qJD(1);
t651 = t638 - t485;
t650 = t641 * qJD(1);
t390 = t641 * qJD(3);
t501 = -t348 * pkin(2) - t346 * qJ(3);
t312 = -pkin(1) + t501;
t293 = t348 * pkin(3) - t312;
t268 = pkin(4) * t302 + t293;
t352 = pkin(5) * t601 - pkin(9) * t257 + t268;
t646 = t102 * t345;
t43 = -t347 * t352 - t646;
t647 = t102 * t257;
t649 = -t43 * t257 - t345 * t647;
t645 = t102 * t347;
t44 = t345 * t352 - t645;
t648 = -t44 * t257 - t347 * t647;
t629 = t612 / 0.2e1;
t633 = t629 + t630;
t640 = qJD(6) * t633;
t639 = qJD(6) * t637;
t136 = 0.2e1 * t629;
t624 = t345 * t257;
t636 = -t624 / 0.2e1;
t614 = t345 * t601;
t627 = t614 / 0.2e1;
t635 = t300 * t627;
t382 = t456 * t601;
t628 = -t614 / 0.2e1;
t623 = t347 * t257;
t253 = t526 / 0.2e1 - t412 / 0.2e1;
t620 = t253 * qJD(1);
t619 = -pkin(5) * t257 - pkin(9) * t601;
t499 = qJD(1) * t601;
t369 = qJD(6) * t253 - t257 * t499;
t430 = t257 * t580;
t496 = qJD(1) * t347;
t443 = t345 * t496;
t404 = t257 * t443;
t400 = 0.2e1 * t404;
t611 = t400 * t601;
t609 = t301 * t592;
t214 = t302 ^ 2 - t304 ^ 2;
t608 = t214 * qJD(1);
t343 = t347 ^ 2;
t528 = t343 * t257;
t445 = qJD(1) * t528;
t341 = t345 ^ 2;
t419 = t341 / 0.2e1 - t343 / 0.2e1;
t122 = t419 * t257;
t483 = t122 * qJD(6);
t607 = t445 * t601 - t483;
t457 = t348 * qJD(3);
t606 = qJD(2) * t501 + t457;
t605 = 0.2e1 * t257;
t597 = -pkin(2) - pkin(3);
t309 = t569 * qJ(3) + t568 * t597;
t291 = t559 * t309;
t308 = qJ(3) * t568 - t569 * t597;
t266 = -t308 * t344 + t291;
t584 = -t266 / 0.2e1;
t319 = t343 - t341;
t603 = t319 * t456;
t602 = t456 * t302;
t410 = t456 * t304;
t566 = t344 * pkin(4);
t328 = pkin(9) + t566;
t448 = t559 * pkin(4);
t329 = -t448 - pkin(5);
t578 = t329 / 0.2e1;
t373 = t328 * t631 + t578 * t601;
t431 = t257 * t584;
t600 = -t431 + t373;
t599 = t456 * t216;
t598 = t122 * t456 - t443 * t632;
t307 = -pkin(4) - t308;
t524 = t344 * t309;
t264 = t307 * t559 - t524;
t262 = pkin(5) - t264;
t589 = -t262 / 0.2e1;
t265 = t344 * t307 + t291;
t263 = -pkin(9) + t265;
t588 = t263 / 0.2e1;
t587 = -t264 / 0.2e1;
t586 = t264 / 0.2e1;
t585 = -t265 / 0.2e1;
t267 = -t308 * t559 - t524;
t583 = -t267 / 0.2e1;
t582 = -t300 / 0.2e1;
t403 = t306 / 0.2e1;
t575 = t344 / 0.2e1;
t574 = -t345 / 0.2e1;
t573 = -t346 / 0.2e1;
t572 = t346 / 0.2e1;
t571 = -t347 / 0.2e1;
t570 = t347 / 0.2e1;
t567 = t304 * pkin(4);
t565 = -t102 * t582 + t616;
t564 = pkin(4) * qJD(4);
t337 = t348 * qJ(3);
t298 = t346 * t597 + t337;
t366 = t298 - t567;
t79 = t366 + t619;
t1 = t612 * t79 - t649;
t563 = t1 * qJD(1);
t2 = -t614 * t79 - t648;
t562 = t2 * qJD(1);
t377 = t583 * t601 - t431;
t349 = t257 * t588 - t589 * t601 + t373 - t377;
t7 = t345 * t349;
t561 = t7 * qJD(1);
t9 = t347 * t349;
t560 = t9 * qJD(1);
t27 = -t257 * t643 + t43 * t601;
t558 = qJD(1) * t27;
t28 = t105 * t623 - t44 * t601;
t557 = qJD(1) * t28;
t31 = t102 * t601 + t105 * t257;
t556 = qJD(1) * t31;
t36 = t641 * t345;
t555 = qJD(1) * t36;
t375 = t582 * t601 - t430;
t503 = t345 * t430 + t635;
t37 = t345 * t375 + t503;
t554 = qJD(1) * t37;
t58 = t535 + t632;
t54 = t58 * t345;
t548 = qJD(1) * t54;
t57 = t58 * t347;
t545 = qJD(1) * t57;
t21 = t268 * t366;
t537 = t21 * qJD(1);
t534 = t264 * t301;
t533 = t265 * t300;
t350 = t257 * t585 - t587 * t601 + t377;
t451 = -t559 / 0.2e1;
t356 = (t344 * t631 + t451 * t601) * pkin(4);
t29 = t356 - t350;
t532 = t29 * qJD(1);
t531 = t293 * t302;
t530 = t300 * t344;
t353 = (-pkin(2) / 0.2e1 - pkin(3) / 0.2e1) * t346 + t337 / 0.2e1 - t567 / 0.2e1;
t380 = t257 * t586 - t585 * t601;
t48 = t353 + t380;
t509 = t48 * qJD(1);
t508 = t58 * qJD(1);
t374 = t257 * t581 + t609;
t359 = t573 + t374;
t64 = t359 * t345;
t507 = t64 * qJD(1);
t67 = t359 * t347;
t506 = t67 * qJD(1);
t379 = t257 * t582 - t609;
t77 = t572 + t379;
t505 = t77 * qJD(1);
t363 = t257 * t451 - t575 * t601;
t96 = (-t304 / 0.2e1 + t363) * pkin(4);
t504 = t96 * qJD(1);
t422 = 0.2e1 * t631;
t134 = t422 * t347;
t487 = qJD(4) * t347;
t502 = -t134 * qJD(2) + t257 * t487;
t113 = t622 * t347 * t345;
t500 = qJD(1) * t113;
t498 = qJD(1) * t304;
t497 = qJD(1) * t346;
t495 = qJD(1) * t348;
t494 = qJD(2) * qJ(3);
t492 = qJD(2) * t347;
t491 = qJD(3) * t301;
t490 = qJD(3) * t346;
t489 = qJD(4) * t293;
t486 = qJD(6) * t345;
t484 = t122 * qJD(1);
t123 = t621 * t345;
t482 = t123 * qJD(1);
t124 = t422 * t345;
t481 = t124 * qJD(1);
t480 = t624 * qJD(1);
t129 = 0.2e1 * t627;
t479 = t129 * qJD(1);
t131 = 0.2e1 * t591 * t345;
t119 = t131 * qJD(1);
t426 = t257 * t570;
t133 = t623 / 0.2e1 - t426;
t478 = t133 * qJD(1);
t477 = t134 * qJD(1);
t476 = t136 * qJD(1);
t142 = t319 * t632;
t473 = t142 * qJD(1);
t164 = -t293 * t304 + t298 * t302;
t472 = t164 * qJD(1);
t165 = t298 * t304 + t531;
t471 = t165 * qJD(1);
t315 = t346 * pkin(2) - t337;
t269 = t312 * t348 + t315 * t346;
t464 = t269 * qJD(1);
t270 = -t312 * t346 + t315 * t348;
t463 = t270 * qJD(1);
t272 = t403 - t306 / 0.2e1;
t462 = t272 * qJD(1);
t461 = t319 * qJD(6);
t342 = t346 ^ 2;
t320 = t348 ^ 2 - t342;
t460 = t320 * qJD(1);
t459 = t342 * qJD(1);
t458 = t346 * qJD(2);
t335 = t348 * qJD(2);
t455 = pkin(1) * t497;
t454 = pkin(1) * t495;
t453 = pkin(7) * t335;
t452 = pkin(7) * t458;
t447 = t345 * t499;
t446 = t601 * t496;
t444 = t268 * t497;
t442 = t601 * t490;
t441 = qJD(6) * t601 * t257;
t440 = qJD(1) * t531;
t439 = t293 * t498;
t438 = t302 * t498;
t437 = t312 * t315 * qJD(1);
t436 = t312 * t497;
t323 = t345 * t485;
t435 = t302 * t497;
t434 = t304 * t497;
t433 = t257 * t496;
t432 = t262 * t345 / 0.2e1;
t427 = t267 * t574;
t424 = t267 * t571;
t418 = t569 * qJD(2);
t417 = t569 * qJD(3);
t416 = t568 * qJD(2);
t415 = t568 * qJD(3);
t413 = t559 * t301;
t411 = t456 * t345;
t409 = t456 * t347;
t408 = t346 * t447;
t407 = t346 * t446;
t406 = t257 * t323;
t401 = -0.2e1 * t404;
t398 = t583 + t578 + t589;
t397 = t347 * t411;
t396 = t345 * t409;
t351 = -(t583 + t586) * t102 - (-t584 + t585) * t105;
t357 = (t102 * t451 + t105 * t575) * pkin(4);
t5 = t357 + t351;
t59 = -t264 * t266 + t265 * t267;
t395 = -t5 * qJD(1) + t59 * qJD(2);
t107 = t567 - t619;
t3 = t107 * t612 + t649;
t394 = t3 * qJD(1) + t36 * qJD(3);
t4 = -t107 * t614 + t648;
t393 = t4 * qJD(1) + t656;
t18 = t565 + t652;
t32 = (t448 / 0.2e1 + t267 / 0.2e1 + t587) * t301 + (-t566 / 0.2e1 + t265 / 0.2e1 + t584) * t300;
t392 = -t18 * qJD(1) + t32 * qJD(2);
t98 = -t533 + t534;
t391 = qJD(2) * t98;
t22 = t268 * t567;
t389 = t22 * qJD(1) + t18 * qJD(3);
t387 = t263 * t257 + t262 * t601;
t385 = -t257 * t328 - t329 * t601;
t384 = t257 * (-qJD(6) - t499);
t383 = qJD(2) * t266 - t491;
t381 = -qJD(4) * t266 + t491;
t378 = t257 * t589 + t588 * t601;
t376 = t581 * t601 + t430;
t372 = t328 * t592 + t329 * t590;
t362 = t79 / 0.2e1 + t378;
t13 = t362 * t345 + t660;
t371 = -qJD(1) * t13 + t262 * t492;
t15 = -t362 * t347 + t661;
t370 = -qJD(1) * t15 + t262 * t493;
t248 = t300 * t345;
t280 = t301 * t492;
t365 = qJD(6) * t248 + t301 * t487 - t280;
t358 = t107 / 0.2e1 + t372;
t109 = t398 * t345;
t25 = -t358 * t347 + t661;
t355 = -qJD(1) * t25 + qJD(2) * t109 - t329 * t488;
t110 = t398 * t347;
t23 = t358 * t345 + t660;
t354 = -qJD(1) * t23 + qJD(2) * t110 - t329 * t487;
t324 = t346 * t495;
t314 = -qJD(4) * t569 + t418;
t313 = -qJD(4) * t568 + t416;
t215 = -t305 + 0.2e1 * t403;
t207 = -0.2e1 * t406;
t206 = 0.2e1 * t406;
t162 = t401 - t603;
t161 = t400 + t603;
t141 = t456 * t253;
t132 = -t601 * t574 + t628;
t130 = t627 + t628;
t128 = t636 + t624 / 0.2e1;
t127 = 0.2e1 * t636;
t120 = t133 * qJD(2);
t118 = t132 * qJD(6);
t117 = t131 * qJD(6);
t114 = t345 * t136;
t112 = t262 * t570 + t329 * t571 + t424;
t111 = t329 * t574 + t427 + t432;
t108 = t119 - t486;
t97 = t567 / 0.2e1 + t363 * pkin(4);
t95 = -t397 - t484;
t94 = t396 + t484;
t78 = t572 - t379;
t66 = t346 * t570 + t347 * t374;
t65 = (-t374 + t573) * t345;
t51 = -0.2e1 * t419 * t601;
t49 = t353 - t380;
t45 = -t375 + t376;
t42 = t641 * qJD(4);
t40 = t300 * t629 - t301 * t426 + t347 * t376;
t38 = t301 * t636 + t503 + t635;
t35 = t653 * qJD(4);
t34 = t36 * qJD(4);
t33 = t267 * t580 - t533 / 0.2e1 + t266 * t581 + t534 / 0.2e1 + (-t530 / 0.2e1 + t413 / 0.2e1) * pkin(4);
t30 = t356 + t350;
t26 = t107 * t570 - t372 * t347 + 0.2e1 * t90;
t24 = t107 * t574 + t372 * t345 + 0.2e1 * t92;
t20 = t565 - t652;
t17 = t18 * qJD(4);
t16 = -t378 * t347 + t79 * t570 + 0.2e1 * t91;
t14 = t378 * t345 + t79 * t574 + 0.2e1 * t93;
t10 = t601 * t424 - t263 * t623 / 0.2e1 + t262 * t630 + t646 + t600 * t347;
t8 = t263 * t636 - t645 + t600 * t345 + (t427 - t432) * t601;
t6 = t357 - t351;
t11 = [0, 0, 0, t346 * t335, t320 * qJD(2), 0, 0, 0, -pkin(1) * t458, -pkin(1) * t335, -t270 * qJD(2) + t346 * t457, 0, -qJD(2) * t269 + qJD(3) * t342 (qJD(2) * t315 - t490) * t312, t302 * t410, -t456 * t214, 0, 0, 0, qJD(2) * t164 + t302 * t490 + t304 * t489, qJD(2) * t165 - t302 * t489 + t304 * t490, qJD(5) * t58, qJD(2) * t21 + qJD(4) * t22 + qJD(5) * t31 + t268 * t490, -t323 * t632 + t382 * t528, -0.2e1 * t345 * t382 * t623 - t142 * qJD(6), -t345 * t441 + t456 * t654, -t347 * t441 - t456 * t655, -t257 * t382, qJD(2) * t1 + qJD(4) * t3 + qJD(5) * t54 + qJD(6) * t28 + t347 * t442, qJD(2) * t2 + qJD(4) * t4 + qJD(5) * t57 + qJD(6) * t27 - t345 * t442; 0, 0, 0, t324, t460, t335, -t458, 0, -t453 - t455, t452 - t454, -t453 - t463, t606, -t452 - t464, pkin(7) * t606 + t437, t438, -t608, -t602, -t410, 0, t472 - t599, qJD(2) * t399 + t215 * qJD(4) + t471 (t265 * t257 - t264 * t601) * qJD(2) + t45 * qJD(3) + t30 * qJD(4), t537 + (-t102 * t264 + t105 * t265) * qJD(2) + t20 * qJD(3) + t6 * qJD(4) + t49 * qJD(5), t114 * qJD(4) + t483 + (-t345 * t492 + t445) * t601, t51 * qJD(4) + t206 + (-qJD(2) * t319 + t401) * t601, qJD(4) * t127 + t257 * t493 + t640 + t658, -qJD(4) * t134 + qJD(6) * t130 + t257 * t492 - t657, t369, t563 + (t345 * t387 + t645) * qJD(2) + t38 * qJD(3) + t8 * qJD(4) + t133 * qJD(5) + t16 * qJD(6), t562 + (t347 * t387 - t646) * qJD(2) + t40 * qJD(3) + t10 * qJD(4) + t128 * qJD(5) + t14 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, t335, t459, -t436 + t453, 0, 0, 0, 0, 0, t435, t434, qJD(2) * t45 + t42, qJD(2) * t20 + qJD(5) * t78 + t17 + t444, 0, 0, 0, 0, 0, qJD(2) * t38 + qJD(6) * t66 + t34 + t407, qJD(2) * t40 + qJD(6) * t65 + t35 - t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, t608, t602, t410, 0, t439 + t599, t215 * qJD(2) + qJD(4) * t399 - t440, t30 * qJD(2) + (-t257 * t344 + t559 * t601) * t564 + t390, t6 * qJD(2) + (t102 * t559 - t105 * t344) * t564 + t97 * qJD(5) + t389, t114 * qJD(2) - t483 - (t345 * t487 + t445) * t601, t51 * qJD(2) + t207 - (qJD(4) * t319 + t401) * t601, qJD(2) * t127 + t257 * t488 + t640 - t658, t118 + t502 + t657, -t369, t8 * qJD(2) + (t345 * t385 + t645) * qJD(4) + t26 * qJD(6) + t394, t10 * qJD(2) + (t347 * t385 - t646) * qJD(4) + t24 * qJD(6) + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t508, qJD(2) * t49 + qJD(3) * t78 + qJD(4) * t97 + t556, 0, 0, 0, 0, 0, t118 + t120 + t548, qJD(2) * t128 + t545 + t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598, t396 * t605 - t473, t345 * t384 + (qJD(2) + qJD(4)) * t633, t130 * qJD(2) + t132 * qJD(4) + t347 * t384, t141, qJD(2) * t16 + qJD(3) * t66 + qJD(4) * t26 + qJD(5) * t132 - qJD(6) * t44 + t557, qJD(2) * t14 + qJD(3) * t65 + qJD(4) * t24 + qJD(5) * t633 + qJD(6) * t43 + t558; 0, 0, 0, -t324, -t460, 0, 0, 0, t455, t454, t463, 0, t464, -t437, -t438, t608, 0, 0, 0, -t472, qJD(4) * t272 - t471, -qJD(4) * t29 + t390, -qJD(4) * t5 - qJD(5) * t48 - t537, -qJD(4) * t113 - t607, t206 + t611, -qJD(4) * t123 + t639 - t658, -qJD(4) * t133 + qJD(6) * t129 + t657, -t369, qJD(3) * t37 - qJD(4) * t7 + qJD(5) * t134 + qJD(6) * t15 - t563, -qJD(4) * t9 - qJD(5) * t124 + qJD(6) * t13 - t562 + t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, t309 * qJD(4) + t415, -t308 * qJD(4) + t417, 0, qJD(3) * t98 + qJD(4) * t59, t323, t461, 0, 0, 0, -t262 * t486 - t347 * t381, -t262 * t485 + t345 * t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t494, 0, 0, 0, 0, 0, t416, t418, t650, qJD(4) * t33 + t391, 0, 0, 0, 0, 0, -t280 + t554, t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456 * t309, -t308 * t456 + t462, -t532, t33 * qJD(3) + (-t266 * t559 + t267 * t344) * t564 + t395, -t323 - t500, -t461, -t482, -t478, 0, t111 * qJD(6) + t266 * t409 - t561, t112 * qJD(6) - t266 * t411 - t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t509, 0, 0, 0, 0, 0, t477, -t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t161, t651, t479 + t486, -t620, qJD(4) * t111 - t263 * t485 - t370, qJD(4) * t112 + t263 * t486 - t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, 0, -t459, t436, 0, 0, 0, 0, 0, -t435, -t434, -qJD(2) * t641 + t42, -qJD(5) * t77 + t17 - t444, 0, 0, 0, 0, 0, -qJD(2) * t37 + qJD(6) * t67 + t34 - t407, -qJD(2) * t653 - qJD(6) * t64 + t35 + t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t494, 0, 0, 0, 0, 0, -t313, -t314, -t650, -qJD(4) * t32 - t391, 0, 0, 0, 0, 0, -t365 - t554, -t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, t314, t650 (t413 - t530) * t564 - t392, 0, 0, 0, 0, 0, t365 + t555, t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248 * t456 + t301 * t485 + t506, -t250 * t456 - t301 * t486 - t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, -t608, 0, 0, 0, -t439, -qJD(2) * t272 + t440, qJD(2) * t29 - t390, qJD(2) * t5 + qJD(5) * t96 - t389, qJD(2) * t113 + t607, t207 - t611, qJD(2) * t123 + qJD(6) * t136 + t658, t117 + t120 - t657, t369, qJD(2) * t7 - qJD(5) * t623 + qJD(6) * t25 - t394, qJD(2) * t9 + qJD(5) * t624 + qJD(6) * t23 - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309 * qJD(2) - t415, t308 * qJD(2) - t417 - t462, t532, qJD(3) * t32 - t395, -t323 + t500, -t461, t482, t478, 0, -t109 * qJD(6) - t347 * t383 + t561, -t110 * qJD(6) + t345 * t383 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416, -t418, -t650, t392, 0, 0, 0, 0, 0, t280 - t555, -t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, t461, 0, 0, 0, t329 * t486, t329 * t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t504, 0, 0, 0, 0, 0, -t433, t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, t162, t476 + t485, t108, t620, -t328 * t485 - t355, t328 * t486 - t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t508, qJD(2) * t48 + qJD(3) * t77 - qJD(4) * t96 - t556, 0, 0, 0, 0, 0, t117 + t502 - t548, qJD(2) * t124 - qJD(4) * t624 - t545 + t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, 0, 0, 0, 0, 0, -t477, t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504, 0, 0, 0, 0, 0, t433, -t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108, t651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t598, -t397 * t605 + t473, -qJD(2) * t637 - qJD(4) * t136 + t257 * t447, -qJD(2) * t129 - qJD(4) * t131 + t257 * t446, t141, -qJD(2) * t15 - qJD(3) * t67 - qJD(4) * t25 - qJD(5) * t131 - t557, -qJD(2) * t13 + qJD(3) * t64 - qJD(4) * t23 - qJD(5) * t637 - t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, t162, -t638, -t479, t620, qJD(3) * t248 + qJD(4) * t109 + t370, qJD(3) * t250 + qJD(4) * t110 + t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t248 - t506, qJD(2) * t250 + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, t161, -t476, -t119, -t620, t355, t354; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
