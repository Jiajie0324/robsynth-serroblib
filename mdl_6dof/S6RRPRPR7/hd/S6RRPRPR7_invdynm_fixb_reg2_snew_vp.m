% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 14:47
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 14:46:34
% EndTime: 2019-05-06 14:47:08
% DurationCPUTime: 36.04s
% Computational Cost: add. (239953->932), mult. (537659->1168), div. (0->0), fcn. (366710->10), ass. (0->596)
t1561 = qJD(2) ^ 2;
t1555 = sin(qJ(2));
t1548 = t1555 ^ 2;
t1562 = qJD(1) ^ 2;
t1657 = t1548 * t1562;
t1520 = t1561 + t1657;
t1559 = cos(qJ(2));
t1652 = t1559 * t1562;
t1527 = t1555 * t1652;
t1515 = qJDD(2) - t1527;
t1653 = t1559 * t1515;
t1469 = -t1520 * t1555 + t1653;
t1691 = qJD(2) * t1559;
t1535 = qJD(1) * t1691;
t1645 = t1555 * qJDD(1);
t1505 = 0.2e1 * t1535 + t1645;
t1556 = sin(qJ(1));
t1560 = cos(qJ(1));
t1749 = pkin(6) * (t1469 * t1560 - t1505 * t1556);
t1748 = pkin(6) * (t1469 * t1556 + t1505 * t1560);
t1747 = pkin(7) * t1469;
t1554 = sin(qJ(4));
t1558 = cos(qJ(4));
t1692 = qJD(1) * t1559;
t1693 = qJD(1) * t1555;
t1491 = -t1554 * t1692 + t1558 * t1693;
t1646 = t1554 * t1693 + t1558 * t1692;
t1448 = t1491 * t1646;
t1544 = qJDD(2) - qJDD(4);
t1733 = -t1448 - t1544;
t1746 = t1554 * t1733;
t1745 = t1558 * t1733;
t1550 = sin(pkin(10));
t1551 = cos(pkin(10));
t1434 = t1491 * t1550 + t1551 * t1646;
t1432 = t1434 ^ 2;
t1545 = qJD(2) - qJD(4);
t1519 = t1545 ^ 2;
t1364 = -t1519 - t1432;
t1436 = t1551 * t1491 - t1550 * t1646;
t1374 = t1436 * t1434;
t1727 = -t1374 - t1544;
t1737 = t1551 * t1727;
t1291 = t1364 * t1550 + t1737;
t1738 = t1550 * t1727;
t1292 = t1364 * t1551 - t1738;
t1225 = t1291 * t1558 + t1292 * t1554;
t1226 = -t1291 * t1554 + t1292 * t1558;
t1690 = qJD(3) * qJD(2);
t1540 = 0.2e1 * t1690;
t1518 = g(1) * t1560 + g(2) * t1556;
t1493 = -pkin(1) * t1562 + qJDD(1) * pkin(7) - t1518;
t1473 = -t1555 * g(3) + t1559 * t1493;
t1706 = pkin(2) * t1559;
t1610 = -qJ(3) * t1555 - t1706;
t1503 = t1610 * qJD(1);
t1602 = -t1561 * pkin(2) + qJDD(2) * qJ(3) + t1503 * t1692 + t1473;
t1404 = t1540 + t1602;
t1516 = -qJD(2) * pkin(3) - pkin(8) * t1693;
t1539 = t1559 * qJDD(1);
t1637 = qJD(2) * t1693;
t1607 = -t1539 + t1637;
t1711 = t1559 ^ 2;
t1651 = t1711 * t1562;
t1369 = -pkin(3) * t1651 + pkin(8) * t1607 + qJD(2) * t1516 + t1404;
t1506 = t1535 + t1645;
t1699 = t1559 * g(3);
t1599 = -qJDD(2) * pkin(2) - t1561 * qJ(3) + qJDD(3) + t1699;
t1627 = qJD(1) * t1503 + t1493;
t1370 = -qJDD(2) * pkin(3) + (-t1506 + t1535) * pkin(8) + (-pkin(3) * t1652 + t1627) * t1555 + t1599;
t1297 = t1558 * t1369 + t1554 * t1370;
t1474 = -pkin(4) * t1545 - qJ(5) * t1491;
t1622 = t1554 * t1506 - t1558 * t1607;
t1585 = qJD(4) * t1491 + t1622;
t1644 = t1646 ^ 2;
t1269 = -pkin(4) * t1644 - qJ(5) * t1585 + t1545 * t1474 + t1297;
t1296 = t1554 * t1369 - t1558 * t1370;
t1414 = -qJD(4) * t1646 + t1558 * t1506 + t1554 * t1607;
t1482 = t1646 * t1545;
t1726 = t1482 - t1414;
t1563 = pkin(4) * t1733 + qJ(5) * t1726 - t1296;
t1626 = t1550 * t1269 - t1551 * t1563;
t1741 = 2 * qJD(5);
t1187 = t1436 * t1741 + t1626;
t1580 = -pkin(4) * t1291 + t1187;
t1709 = pkin(2) + pkin(3);
t1744 = qJ(3) * t1226 - t1225 * t1709 + t1580;
t1665 = t1515 * t1555;
t1463 = t1520 * t1559 + t1665;
t1740 = pkin(1) * t1463;
t1739 = pkin(7) * t1463;
t1553 = sin(qJ(6));
t1623 = t1414 * t1550 + t1551 * t1585;
t1343 = qJDD(6) + t1623;
t1557 = cos(qJ(6));
t1408 = t1436 * t1553 + t1557 * t1545;
t1410 = t1436 * t1557 - t1545 * t1553;
t1349 = t1410 * t1408;
t1728 = t1343 - t1349;
t1736 = t1553 * t1728;
t1735 = t1557 * t1728;
t1413 = t1555 * t1627 + t1599;
t1514 = qJDD(2) + t1527;
t1523 = -t1561 - t1651;
t1734 = pkin(2) * t1514 + qJ(3) * t1523 - t1413;
t1661 = t1545 * t1436;
t1312 = t1623 - t1661;
t1507 = t1539 - 0.2e1 * t1637;
t1457 = t1507 * t1559;
t1672 = t1505 * t1555;
t1452 = -t1457 + t1672;
t1513 = (t1548 - t1711) * t1562;
t1732 = t1452 * t1556 + t1513 * t1560;
t1731 = t1452 * t1560 - t1513 * t1556;
t1522 = -t1561 + t1651;
t1467 = -t1522 * t1559 + t1665;
t1730 = t1467 * t1556 + t1560 * t1539;
t1729 = t1467 * t1560 - t1556 * t1539;
t1689 = qJD(5) * t1434;
t1427 = -0.2e1 * t1689;
t1649 = t1551 * t1269 + t1550 * t1563;
t1188 = t1427 + t1649;
t1368 = pkin(5) * t1434 - pkin(9) * t1436;
t1159 = -pkin(5) * t1519 - pkin(9) * t1544 - t1368 * t1434 + t1188;
t1517 = t1556 * g(1) - t1560 * g(2);
t1492 = qJDD(1) * pkin(1) + t1562 * pkin(7) + t1517;
t1567 = -pkin(2) * t1637 + t1492;
t1710 = 0.2e1 * qJD(3);
t1354 = t1539 * pkin(2) + t1506 * qJ(3) - t1607 * pkin(3) - pkin(8) * t1651 + (qJ(3) * t1691 + (-pkin(2) * qJD(2) + t1516 + t1710) * t1555) * qJD(1) + t1567;
t1285 = t1585 * pkin(4) - t1644 * qJ(5) + t1491 * t1474 + qJDD(5) + t1354;
t1347 = t1551 * t1414 - t1550 * t1585;
t1426 = t1434 * t1545;
t1316 = t1426 + t1347;
t1211 = pkin(5) * t1312 - pkin(9) * t1316 + t1285;
t1134 = t1159 * t1553 - t1557 * t1211;
t1135 = t1159 * t1557 + t1211 * t1553;
t1093 = t1553 * t1134 + t1557 * t1135;
t1232 = -t1558 * t1296 + t1297 * t1554;
t1725 = t1482 + t1414;
t1459 = t1522 * t1555 + t1653;
t1158 = t1544 * pkin(5) - t1519 * pkin(9) + (t1741 + t1368) * t1436 + t1626;
t1079 = t1093 * t1550 - t1158 * t1551;
t1080 = t1093 * t1551 + t1158 * t1550;
t1056 = t1079 * t1558 + t1080 * t1554;
t1057 = -t1079 * t1554 + t1080 * t1558;
t1650 = -pkin(5) * t1158 + pkin(9) * t1093;
t1634 = -pkin(4) * t1079 - t1650;
t1723 = qJ(3) * t1057 - t1056 * t1709 + t1634;
t1140 = t1187 * t1550 + t1551 * t1188;
t1139 = -t1187 * t1551 + t1188 * t1550;
t1686 = t1139 * t1558;
t1094 = t1140 * t1554 + t1686;
t1687 = t1139 * t1554;
t1095 = t1140 * t1558 - t1687;
t1138 = pkin(4) * t1139;
t1722 = qJ(3) * t1095 - t1094 * t1709 - t1138;
t1431 = qJD(6) + t1434;
t1624 = -t1553 * t1347 - t1557 * t1544;
t1274 = (-qJD(6) + t1431) * t1410 + t1624;
t1601 = -t1557 * t1347 + t1553 * t1544;
t1298 = -qJD(6) * t1408 - t1601;
t1360 = t1431 * t1408;
t1276 = t1298 + t1360;
t1208 = t1274 * t1557 + t1276 * t1553;
t1405 = t1408 ^ 2;
t1406 = t1410 ^ 2;
t1311 = t1405 + t1406;
t1166 = t1208 * t1550 + t1311 * t1551;
t1167 = t1208 * t1551 - t1311 * t1550;
t1119 = t1166 * t1558 + t1167 * t1554;
t1120 = -t1166 * t1554 + t1167 * t1558;
t1618 = pkin(5) * t1311 + pkin(9) * t1208 + t1093;
t1603 = pkin(4) * t1166 + t1618;
t1721 = qJ(3) * t1120 - t1119 * t1709 - t1603;
t1430 = t1431 ^ 2;
t1324 = -t1430 - t1405;
t1224 = t1324 * t1557 - t1736;
t1361 = t1431 * t1410;
t1584 = qJD(6) * t1410 - t1624;
t1273 = -t1361 - t1584;
t1175 = t1224 * t1550 + t1273 * t1551;
t1176 = t1224 * t1551 - t1273 * t1550;
t1124 = t1175 * t1558 + t1176 * t1554;
t1125 = -t1175 * t1554 + t1176 * t1558;
t1156 = t1557 * t1158;
t1635 = pkin(5) * t1273 + pkin(9) * t1224 - t1156;
t1616 = -pkin(4) * t1175 - t1635;
t1720 = qJ(3) * t1125 - t1124 * t1709 + t1616;
t1338 = -t1406 - t1430;
t1283 = t1343 + t1349;
t1684 = t1283 * t1557;
t1231 = -t1338 * t1553 - t1684;
t1277 = (qJD(6) + t1431) * t1408 + t1601;
t1182 = t1231 * t1550 + t1277 * t1551;
t1183 = t1231 * t1551 - t1277 * t1550;
t1132 = t1182 * t1558 + t1183 * t1554;
t1133 = -t1182 * t1554 + t1183 * t1558;
t1155 = t1553 * t1158;
t1636 = pkin(5) * t1277 + pkin(9) * t1231 + t1155;
t1617 = pkin(4) * t1182 + t1636;
t1719 = qJ(3) * t1133 - t1132 * t1709 - t1617;
t1317 = -t1426 + t1347;
t1583 = -t1623 - t1661;
t1247 = -t1317 * t1551 + t1550 * t1583;
t1249 = t1317 * t1550 + t1551 * t1583;
t1178 = t1247 * t1558 + t1249 * t1554;
t1180 = -t1247 * t1554 + t1249 * t1558;
t1245 = pkin(4) * t1247;
t1718 = qJ(3) * t1180 - t1178 * t1709 - t1245;
t1233 = t1554 * t1296 + t1558 * t1297;
t1716 = qJ(3) * t1233 - t1232 * t1709;
t1433 = t1436 ^ 2;
t1416 = -t1433 - t1519;
t1365 = -t1374 + t1544;
t1680 = t1365 * t1550;
t1326 = t1416 * t1551 + t1680;
t1679 = t1365 * t1551;
t1327 = -t1416 * t1550 + t1679;
t1256 = t1326 * t1558 + t1327 * t1554;
t1257 = -t1326 * t1554 + t1327 * t1558;
t1633 = pkin(4) * t1326 - t1649;
t1715 = qJ(3) * t1257 - t1256 * t1709 - t1633;
t1570 = (-qJD(4) - t1545) * t1491 - t1622;
t1319 = t1554 * t1570 + t1558 * t1726;
t1321 = -t1554 * t1726 + t1558 * t1570;
t1714 = qJ(3) * t1321 - t1319 * t1709;
t1437 = -t1519 - t1644;
t1372 = t1437 * t1554 + t1745;
t1373 = t1437 * t1558 - t1746;
t1713 = qJ(3) * t1373 - t1372 * t1709 + t1296;
t1490 = t1491 ^ 2;
t1471 = -t1490 - t1519;
t1444 = -t1448 + t1544;
t1676 = t1444 * t1554;
t1389 = t1471 * t1558 + t1676;
t1675 = t1444 * t1558;
t1390 = -t1471 * t1554 + t1675;
t1712 = qJ(3) * t1390 - t1389 * t1709 + t1297;
t1498 = t1559 * t1514;
t1460 = t1523 * t1555 + t1498;
t1708 = pkin(1) * t1460;
t1705 = pkin(5) * t1550;
t1666 = t1514 * t1555;
t1466 = t1523 * t1559 - t1666;
t1704 = pkin(6) * (t1466 * t1556 + t1507 * t1560);
t1643 = t1548 + t1711;
t1509 = t1643 * qJDD(1);
t1512 = t1643 * t1562;
t1703 = pkin(6) * (t1509 * t1556 + t1512 * t1560);
t1702 = pkin(7) * t1460;
t1701 = pkin(8) * t1232;
t1700 = pkin(8) * t1233;
t1694 = qJD(1) * qJD(2);
t1685 = t1283 * t1553;
t1683 = t1285 * t1550;
t1682 = t1285 * t1551;
t1678 = t1431 * t1553;
t1677 = t1431 * t1557;
t1674 = t1492 * t1555;
t1673 = t1492 * t1559;
t1669 = t1507 * t1555;
t1662 = t1544 * t1556;
t1660 = t1545 * t1491;
t1659 = t1545 * t1550;
t1658 = t1545 * t1551;
t1656 = t1554 * t1354;
t1655 = t1554 * t1491;
t1350 = t1558 * t1354;
t1654 = t1558 * t1491;
t1648 = pkin(1) * t1507 + pkin(7) * t1466;
t1647 = pkin(1) * t1512 + pkin(7) * t1509;
t1642 = -pkin(5) * t1551 - pkin(4);
t1641 = t1550 * t1349;
t1640 = t1551 * t1349;
t1639 = t1556 * t1374;
t1638 = t1560 * t1374;
t1630 = -pkin(8) * t1389 + t1350;
t1472 = t1555 * t1493 + t1699;
t1402 = t1472 * t1555 + t1559 * t1473;
t1621 = -t1517 * t1556 - t1560 * t1518;
t1620 = t1556 * t1527;
t1619 = t1560 * t1527;
t1511 = qJDD(1) * t1560 - t1556 * t1562;
t1615 = -pkin(6) * t1511 - g(3) * t1556;
t1613 = t1556 * t1448;
t1612 = t1560 * t1448;
t1611 = -pkin(2) * t1413 + qJ(3) * t1404;
t1609 = pkin(2) * t1555 - qJ(3) * t1559;
t1608 = t1506 + t1535;
t1606 = -pkin(8) * t1372 + t1656;
t1605 = -pkin(8) * t1373 + t1350;
t1604 = -pkin(8) * t1390 - t1656;
t1092 = -t1134 * t1557 + t1135 * t1553;
t1401 = t1472 * t1559 - t1473 * t1555;
t1449 = t1505 * t1559 + t1669;
t1600 = t1517 * t1560 - t1518 * t1556;
t1595 = t1607 * pkin(2);
t1045 = qJ(5) * t1080 + (-pkin(9) * t1550 + t1642) * t1092;
t1054 = -qJ(5) * t1079 + (-pkin(9) * t1551 + t1705) * t1092;
t1594 = -pkin(8) * t1056 - t1045 * t1554 + t1558 * t1054;
t1206 = t1274 * t1553 - t1276 * t1557;
t1081 = -pkin(9) * t1206 - t1092;
t1062 = qJ(5) * t1167 + t1550 * t1081 + t1206 * t1642;
t1064 = -qJ(5) * t1166 + t1081 * t1551 + t1206 * t1705;
t1593 = -pkin(8) * t1119 - t1062 * t1554 + t1558 * t1064;
t1223 = t1324 * t1553 + t1735;
t1105 = -pkin(5) * t1223 + t1134;
t1145 = -pkin(9) * t1223 + t1155;
t1069 = -pkin(4) * t1223 + qJ(5) * t1176 + t1105 * t1551 + t1145 * t1550;
t1075 = -qJ(5) * t1175 - t1105 * t1550 + t1145 * t1551;
t1592 = -pkin(8) * t1124 - t1069 * t1554 + t1558 * t1075;
t1230 = t1338 * t1557 - t1685;
t1106 = -pkin(5) * t1230 + t1135;
t1146 = -pkin(9) * t1230 + t1156;
t1070 = -pkin(4) * t1230 + qJ(5) * t1183 + t1106 * t1551 + t1146 * t1550;
t1077 = -qJ(5) * t1182 - t1106 * t1550 + t1146 * t1551;
t1591 = -pkin(8) * t1132 - t1070 * t1554 + t1558 * t1077;
t1342 = -t1432 - t1433;
t1104 = -pkin(4) * t1342 + qJ(5) * t1249 + t1140;
t1113 = -qJ(5) * t1247 - t1139;
t1590 = -pkin(8) * t1178 - t1104 * t1554 + t1558 * t1113;
t1203 = -pkin(4) * t1312 + qJ(5) * t1292 - t1682;
t1217 = -qJ(5) * t1291 + t1683;
t1589 = -pkin(8) * t1225 - t1203 * t1554 + t1558 * t1217;
t1212 = -pkin(4) * t1316 + qJ(5) * t1327 + t1683;
t1228 = -qJ(5) * t1326 + t1682;
t1588 = -pkin(8) * t1256 - t1212 * t1554 + t1558 * t1228;
t1587 = -pkin(8) * t1319 - t1232;
t1586 = -pkin(8) * t1321 - t1233;
t1579 = -pkin(8) * t1057 - t1558 * t1045 - t1554 * t1054;
t1578 = -pkin(8) * t1120 - t1558 * t1062 - t1554 * t1064;
t1577 = -pkin(8) * t1125 - t1558 * t1069 - t1554 * t1075;
t1576 = -pkin(8) * t1133 - t1558 * t1070 - t1554 * t1077;
t1575 = -pkin(8) * t1180 - t1558 * t1104 - t1554 * t1113;
t1574 = -pkin(8) * t1226 - t1558 * t1203 - t1554 * t1217;
t1573 = -pkin(8) * t1257 - t1558 * t1212 - t1554 * t1228;
t1118 = -pkin(4) * t1285 + qJ(5) * t1140;
t1569 = -pkin(8) * t1094 - qJ(5) * t1686 - t1118 * t1554;
t1568 = -pkin(8) * t1095 + qJ(5) * t1687 - t1558 * t1118;
t1566 = pkin(2) * t1520 + qJ(3) * t1515 + t1602;
t1565 = t1693 * t1710 + t1567;
t1564 = qJ(3) * t1608 + t1565;
t1529 = t1560 * t1544;
t1521 = -t1561 + t1657;
t1510 = qJDD(1) * t1556 + t1560 * t1562;
t1501 = t1609 * qJDD(1);
t1497 = t1643 * t1694;
t1489 = -pkin(6) * t1510 + g(3) * t1560;
t1480 = -t1490 + t1519;
t1479 = t1644 - t1519;
t1478 = qJDD(2) * t1556 + t1497 * t1560;
t1477 = t1506 * t1559 - t1548 * t1694;
t1476 = -qJDD(2) * t1560 + t1497 * t1556;
t1475 = t1555 * t1607 - t1694 * t1711;
t1468 = t1521 * t1555 + t1498;
t1462 = -t1521 * t1559 + t1666;
t1458 = t1608 * t1555;
t1453 = pkin(6) * (t1509 * t1560 - t1512 * t1556);
t1447 = t1490 - t1644;
t1443 = t1477 * t1560 - t1620;
t1442 = t1475 * t1560 + t1620;
t1441 = t1477 * t1556 + t1619;
t1440 = t1475 * t1556 - t1619;
t1439 = t1468 * t1560 + t1556 * t1645;
t1438 = t1468 * t1556 - t1560 * t1645;
t1428 = 0.2e1 * t1689;
t1423 = -t1433 + t1519;
t1422 = t1432 - t1519;
t1421 = pkin(6) * (t1466 * t1560 - t1507 * t1556);
t1420 = (t1558 * t1646 - t1655) * t1545;
t1419 = (t1554 * t1646 + t1654) * t1545;
t1418 = -t1673 + t1739;
t1417 = -t1674 - t1702;
t1415 = -t1644 - t1490;
t1412 = t1473 + t1740;
t1411 = t1472 - t1708;
t1399 = t1648 + t1673;
t1398 = -pkin(1) * t1505 - t1674 - t1747;
t1397 = qJ(3) * t1512 + t1413;
t1396 = pkin(2) * t1512 + t1404;
t1395 = -t1595 + t1564;
t1394 = t1479 * t1558 + t1676;
t1393 = -t1480 * t1554 + t1745;
t1392 = t1479 * t1554 - t1675;
t1391 = t1480 * t1558 + t1746;
t1383 = (qJD(4) - t1545) * t1491 + t1622;
t1382 = pkin(1) * t1492 + pkin(7) * t1402;
t1381 = t1414 * t1558 + t1545 * t1655;
t1380 = t1414 * t1554 - t1545 * t1654;
t1379 = -t1482 * t1558 + t1554 * t1585;
t1378 = t1482 * t1554 + t1558 * t1585;
t1377 = (t1507 - t1607) * pkin(2) + t1564;
t1376 = -t1595 + (t1505 + t1608) * qJ(3) + t1565;
t1375 = t1402 + t1647;
t1371 = t1433 - t1432;
t1359 = -t1406 + t1430;
t1358 = t1405 - t1430;
t1357 = (t1434 * t1551 - t1436 * t1550) * t1545;
t1356 = (t1434 * t1550 + t1436 * t1551) * t1545;
t1355 = -t1708 - t1734;
t1353 = -t1566 - 0.2e1 * t1690 - t1740;
t1352 = t1419 * t1555 + t1420 * t1559;
t1351 = -t1419 * t1559 + t1420 * t1555;
t1348 = t1406 - t1405;
t1345 = t1404 * t1559 + t1413 * t1555;
t1344 = t1404 * t1555 - t1413 * t1559;
t1341 = -pkin(2) * t1672 + t1376 * t1559 - t1739;
t1340 = qJ(3) * t1457 - t1377 * t1555 - t1702;
t1339 = -t1396 * t1555 + t1397 * t1559;
t1337 = t1392 * t1555 + t1394 * t1559;
t1336 = t1391 * t1555 + t1393 * t1559;
t1335 = t1422 * t1551 + t1680;
t1334 = -t1423 * t1550 + t1737;
t1333 = -t1392 * t1559 + t1394 * t1555;
t1332 = -t1391 * t1559 + t1393 * t1555;
t1331 = t1422 * t1550 - t1679;
t1330 = t1423 * t1551 + t1738;
t1329 = t1747 + t1555 * t1376 + (pkin(1) + t1706) * t1505;
t1328 = qJ(3) * t1669 + t1377 * t1559 + t1648;
t1323 = t1389 * t1555 + t1390 * t1559;
t1322 = -t1389 * t1559 + t1390 * t1555;
t1320 = -t1383 * t1558 - t1554 * t1725;
t1318 = -t1383 * t1554 + t1558 * t1725;
t1309 = t1396 * t1559 + t1397 * t1555 + t1647;
t1308 = t1347 * t1551 + t1436 * t1659;
t1307 = t1347 * t1550 - t1436 * t1658;
t1306 = -t1434 * t1658 + t1550 * t1623;
t1305 = -t1434 * t1659 - t1551 * t1623;
t1304 = t1380 * t1555 + t1381 * t1559;
t1303 = -t1378 * t1555 + t1379 * t1559;
t1302 = -t1380 * t1559 + t1381 * t1555;
t1301 = t1378 * t1559 + t1379 * t1555;
t1300 = t1372 * t1555 + t1373 * t1559;
t1299 = -t1372 * t1559 + t1373 * t1555;
t1289 = (-t1408 * t1557 + t1410 * t1553) * t1431;
t1288 = (-t1408 * t1553 - t1410 * t1557) * t1431;
t1287 = -t1356 * t1554 + t1357 * t1558;
t1286 = t1356 * t1558 + t1357 * t1554;
t1281 = -pkin(1) * t1344 - t1611;
t1280 = qJ(3) * t1725 + t1630;
t1279 = -pkin(7) * t1344 - t1395 * t1609;
t1278 = qJ(3) * t1383 + t1606;
t1275 = t1298 - t1360;
t1272 = -t1361 + t1584;
t1268 = t1298 * t1557 - t1410 * t1678;
t1267 = t1298 * t1553 + t1410 * t1677;
t1266 = t1408 * t1677 + t1553 * t1584;
t1265 = -t1408 * t1678 + t1557 * t1584;
t1263 = -t1331 * t1554 + t1335 * t1558;
t1262 = -t1330 * t1554 + t1334 * t1558;
t1261 = t1331 * t1558 + t1335 * t1554;
t1260 = t1330 * t1558 + t1334 * t1554;
t1255 = t1319 * t1555 + t1321 * t1559;
t1254 = t1318 * t1555 + t1320 * t1559;
t1253 = -t1319 * t1559 + t1321 * t1555;
t1252 = -t1318 * t1559 + t1320 * t1555;
t1251 = t1289 * t1551 + t1343 * t1550;
t1250 = t1289 * t1550 - t1343 * t1551;
t1248 = -t1312 * t1551 - t1316 * t1550;
t1246 = -t1312 * t1550 + t1316 * t1551;
t1244 = t1358 * t1557 - t1685;
t1243 = -t1359 * t1553 + t1735;
t1242 = t1358 * t1553 + t1684;
t1241 = t1359 * t1557 + t1736;
t1240 = pkin(7) * t1345 + (pkin(1) - t1610) * t1395;
t1239 = t1709 * t1725 + t1604;
t1238 = -t1307 * t1554 + t1308 * t1558;
t1237 = -t1305 * t1554 + t1306 * t1558;
t1236 = t1307 * t1558 + t1308 * t1554;
t1235 = t1305 * t1558 + t1306 * t1554;
t1234 = t1383 * t1709 + t1605;
t1221 = t1268 * t1551 + t1641;
t1220 = t1266 * t1551 - t1641;
t1219 = t1268 * t1550 - t1640;
t1218 = t1266 * t1550 + t1640;
t1215 = t1286 * t1555 + t1287 * t1559;
t1214 = -t1286 * t1559 + t1287 * t1555;
t1213 = qJ(3) * t1354 - t1701;
t1209 = -pkin(1) * t1322 - t1712;
t1207 = t1273 * t1557 - t1275 * t1553;
t1205 = t1273 * t1553 + t1275 * t1557;
t1202 = qJ(3) * t1415 + t1587;
t1201 = t1354 * t1709 - t1700;
t1200 = t1261 * t1555 + t1263 * t1559;
t1199 = t1260 * t1555 + t1262 * t1559;
t1198 = -t1261 * t1559 + t1263 * t1555;
t1197 = -t1260 * t1559 + t1262 * t1555;
t1196 = t1244 * t1551 - t1272 * t1550;
t1195 = t1243 * t1551 + t1276 * t1550;
t1194 = t1244 * t1550 + t1272 * t1551;
t1193 = t1243 * t1550 - t1276 * t1551;
t1192 = t1256 * t1555 + t1257 * t1559;
t1191 = -t1256 * t1559 + t1257 * t1555;
t1190 = -pkin(1) * t1299 - t1713;
t1189 = t1415 * t1709 + t1586;
t1185 = -t1250 * t1554 + t1251 * t1558;
t1184 = t1250 * t1558 + t1251 * t1554;
t1179 = -t1246 * t1554 + t1248 * t1558;
t1177 = t1246 * t1558 + t1248 * t1554;
t1173 = t1207 * t1551 + t1348 * t1550;
t1172 = t1207 * t1550 - t1348 * t1551;
t1171 = t1236 * t1555 + t1238 * t1559;
t1170 = t1235 * t1555 + t1237 * t1559;
t1169 = -t1236 * t1559 + t1238 * t1555;
t1168 = -t1235 * t1559 + t1237 * t1555;
t1164 = t1232 * t1555 + t1233 * t1559;
t1163 = -t1232 * t1559 + t1233 * t1555;
t1162 = -pkin(7) * t1322 - t1239 * t1555 + t1280 * t1559;
t1161 = t1225 * t1555 + t1226 * t1559;
t1160 = -t1225 * t1559 + t1226 * t1555;
t1154 = -pkin(1) * t1253 - t1714;
t1153 = -pkin(7) * t1299 - t1234 * t1555 + t1278 * t1559;
t1152 = -t1219 * t1554 + t1221 * t1558;
t1151 = -t1218 * t1554 + t1220 * t1558;
t1150 = t1219 * t1558 + t1221 * t1554;
t1149 = t1218 * t1558 + t1220 * t1554;
t1148 = pkin(1) * t1725 + pkin(7) * t1323 + t1239 * t1559 + t1280 * t1555;
t1147 = pkin(1) * t1383 + pkin(7) * t1300 + t1234 * t1559 + t1278 * t1555;
t1144 = -t1194 * t1554 + t1196 * t1558;
t1143 = -t1193 * t1554 + t1195 * t1558;
t1142 = t1194 * t1558 + t1196 * t1554;
t1141 = t1193 * t1558 + t1195 * t1554;
t1137 = t1184 * t1555 + t1185 * t1559;
t1136 = -t1184 * t1559 + t1185 * t1555;
t1129 = t1178 * t1555 + t1180 * t1559;
t1128 = t1177 * t1555 + t1179 * t1559;
t1127 = -t1178 * t1559 + t1180 * t1555;
t1126 = -t1177 * t1559 + t1179 * t1555;
t1123 = -t1172 * t1554 + t1173 * t1558;
t1122 = t1172 * t1558 + t1173 * t1554;
t1121 = qJ(3) * t1316 + t1588;
t1117 = qJ(3) * t1312 + t1589;
t1116 = -pkin(7) * t1253 - t1189 * t1555 + t1202 * t1559;
t1115 = t1316 * t1709 + t1573;
t1114 = pkin(1) * t1415 + pkin(7) * t1255 + t1189 * t1559 + t1202 * t1555;
t1111 = t1150 * t1555 + t1152 * t1559;
t1110 = t1149 * t1555 + t1151 * t1559;
t1109 = -t1150 * t1559 + t1152 * t1555;
t1108 = -t1149 * t1559 + t1151 * t1555;
t1107 = t1312 * t1709 + t1574;
t1103 = -pkin(7) * t1163 - t1201 * t1555 + t1213 * t1559;
t1102 = -pkin(1) * t1163 - t1716;
t1101 = pkin(1) * t1354 + pkin(7) * t1164 + t1201 * t1559 + t1213 * t1555;
t1100 = -pkin(1) * t1191 + t1428 - t1715;
t1099 = t1142 * t1555 + t1144 * t1559;
t1098 = t1141 * t1555 + t1143 * t1559;
t1097 = -t1142 * t1559 + t1144 * t1555;
t1096 = -t1141 * t1559 + t1143 * t1555;
t1091 = t1132 * t1555 + t1133 * t1559;
t1090 = -t1132 * t1559 + t1133 * t1555;
t1088 = t1124 * t1555 + t1125 * t1559;
t1087 = -t1124 * t1559 + t1125 * t1555;
t1086 = -pkin(1) * t1160 - t1744;
t1085 = t1122 * t1555 + t1123 * t1559;
t1084 = -t1122 * t1559 + t1123 * t1555;
t1083 = t1119 * t1555 + t1120 * t1559;
t1082 = -t1119 * t1559 + t1120 * t1555;
t1073 = -pkin(7) * t1191 - t1115 * t1555 + t1121 * t1559;
t1072 = -pkin(1) * t1127 - t1718;
t1071 = pkin(1) * t1316 + pkin(7) * t1192 + t1115 * t1559 + t1121 * t1555;
t1068 = -pkin(7) * t1160 - t1107 * t1555 + t1117 * t1559;
t1067 = qJ(3) * t1342 + t1590;
t1066 = pkin(1) * t1312 + pkin(7) * t1161 + t1107 * t1559 + t1117 * t1555;
t1065 = t1342 * t1709 + t1575;
t1061 = t1094 * t1555 + t1095 * t1559;
t1060 = -t1094 * t1559 + t1095 * t1555;
t1059 = qJ(3) * t1285 + t1569;
t1058 = t1285 * t1709 + t1568;
t1055 = -pkin(1) * t1090 - t1719;
t1052 = -pkin(1) * t1087 - t1720;
t1051 = qJ(3) * t1230 + t1591;
t1050 = qJ(3) * t1223 + t1592;
t1049 = t1230 * t1709 + t1576;
t1048 = t1223 * t1709 + t1577;
t1047 = -pkin(7) * t1127 - t1065 * t1555 + t1067 * t1559;
t1046 = pkin(1) * t1342 + pkin(7) * t1129 + t1065 * t1559 + t1067 * t1555;
t1044 = -pkin(1) * t1082 - t1721;
t1043 = qJ(3) * t1206 + t1593;
t1042 = t1206 * t1709 + t1578;
t1041 = t1056 * t1555 + t1057 * t1559;
t1040 = -t1056 * t1559 + t1057 * t1555;
t1039 = -pkin(1) * t1060 - t1722;
t1038 = -pkin(7) * t1060 - t1058 * t1555 + t1059 * t1559;
t1037 = pkin(1) * t1285 + pkin(7) * t1061 + t1058 * t1559 + t1059 * t1555;
t1036 = -pkin(7) * t1090 - t1049 * t1555 + t1051 * t1559;
t1035 = -pkin(7) * t1087 - t1048 * t1555 + t1050 * t1559;
t1034 = pkin(1) * t1230 + pkin(7) * t1091 + t1049 * t1559 + t1051 * t1555;
t1033 = pkin(1) * t1223 + pkin(7) * t1088 + t1048 * t1559 + t1050 * t1555;
t1032 = -pkin(7) * t1082 - t1042 * t1555 + t1043 * t1559;
t1031 = pkin(1) * t1206 + pkin(7) * t1083 + t1042 * t1559 + t1043 * t1555;
t1030 = qJ(3) * t1092 + t1594;
t1029 = t1092 * t1709 + t1579;
t1028 = -pkin(1) * t1040 - t1723;
t1027 = -pkin(7) * t1040 - t1029 * t1555 + t1030 * t1559;
t1026 = pkin(1) * t1092 + pkin(7) * t1041 + t1029 * t1559 + t1030 * t1555;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1511, 0, -t1510, 0, t1615, -t1489, -t1600, -pkin(6) * t1600, t1443, -t1731, t1439, t1442, -t1729, t1478, -t1411 * t1556 + t1417 * t1560 - t1704, -t1556 * t1412 + t1560 * t1418 + t1748, t1401 * t1560 - t1703, -pkin(6) * (t1402 * t1556 + t1492 * t1560) - (pkin(1) * t1556 - pkin(7) * t1560) * t1401, t1443, t1439, t1731, t1478, t1729, t1442, t1340 * t1560 - t1355 * t1556 - t1704, t1339 * t1560 - t1501 * t1556 - t1703, t1560 * t1341 - t1556 * t1353 - t1748, t1560 * t1279 - t1556 * t1281 - pkin(6) * (t1345 * t1556 + t1395 * t1560), t1560 * t1304 - t1613, t1254 * t1560 - t1447 * t1556, t1336 * t1560 + t1556 * t1726, t1560 * t1303 + t1613, t1337 * t1560 - t1556 * t1570, t1352 * t1560 + t1662, t1560 * t1153 - t1556 * t1190 - pkin(6) * (t1300 * t1556 + t1383 * t1560), t1560 * t1162 - t1556 * t1209 - pkin(6) * (t1323 * t1556 + t1560 * t1725), t1560 * t1116 - t1556 * t1154 - pkin(6) * (t1255 * t1556 + t1415 * t1560), t1560 * t1103 - t1556 * t1102 - pkin(6) * (t1164 * t1556 + t1354 * t1560), t1171 * t1560 - t1639, t1128 * t1560 - t1371 * t1556, t1199 * t1560 - t1317 * t1556, t1170 * t1560 + t1639, t1200 * t1560 - t1556 * t1583, t1215 * t1560 + t1662, t1560 * t1068 - t1556 * t1086 - pkin(6) * (t1161 * t1556 + t1312 * t1560), t1560 * t1073 - t1556 * t1100 - pkin(6) * (t1192 * t1556 + t1316 * t1560), t1560 * t1047 - t1556 * t1072 - pkin(6) * (t1129 * t1556 + t1342 * t1560), t1560 * t1038 - t1556 * t1039 - pkin(6) * (t1061 * t1556 + t1285 * t1560), t1111 * t1560 - t1267 * t1556, t1085 * t1560 - t1205 * t1556, t1098 * t1560 - t1241 * t1556, t1110 * t1560 + t1265 * t1556, t1099 * t1560 - t1242 * t1556, t1137 * t1560 - t1288 * t1556, t1560 * t1035 - t1556 * t1052 - pkin(6) * (t1088 * t1556 + t1223 * t1560), t1560 * t1036 - t1556 * t1055 - pkin(6) * (t1091 * t1556 + t1230 * t1560), t1560 * t1032 - t1556 * t1044 - pkin(6) * (t1083 * t1556 + t1206 * t1560), t1560 * t1027 - t1556 * t1028 - pkin(6) * (t1041 * t1556 + t1092 * t1560); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1510, 0, t1511, 0, t1489, t1615, t1621, pkin(6) * t1621, t1441, -t1732, t1438, t1440, -t1730, t1476, t1411 * t1560 + t1417 * t1556 + t1421, t1560 * t1412 + t1556 * t1418 - t1749, t1401 * t1556 + t1453, pkin(6) * (t1402 * t1560 - t1492 * t1556) - (-pkin(1) * t1560 - pkin(7) * t1556) * t1401, t1441, t1438, t1732, t1476, t1730, t1440, t1340 * t1556 + t1355 * t1560 + t1421, t1339 * t1556 + t1501 * t1560 + t1453, t1556 * t1341 + t1560 * t1353 + t1749, t1556 * t1279 + t1560 * t1281 + pkin(6) * (t1345 * t1560 - t1395 * t1556), t1556 * t1304 + t1612, t1254 * t1556 + t1447 * t1560, t1336 * t1556 - t1560 * t1726, t1556 * t1303 - t1612, t1337 * t1556 + t1560 * t1570, t1352 * t1556 - t1529, t1556 * t1153 + t1560 * t1190 + pkin(6) * (t1300 * t1560 - t1383 * t1556), t1556 * t1162 + t1560 * t1209 + pkin(6) * (t1323 * t1560 - t1556 * t1725), t1556 * t1116 + t1560 * t1154 + pkin(6) * (t1255 * t1560 - t1415 * t1556), t1556 * t1103 + t1560 * t1102 + pkin(6) * (t1164 * t1560 - t1354 * t1556), t1171 * t1556 + t1638, t1128 * t1556 + t1371 * t1560, t1199 * t1556 + t1317 * t1560, t1170 * t1556 - t1638, t1200 * t1556 + t1560 * t1583, t1215 * t1556 - t1529, t1556 * t1068 + t1560 * t1086 + pkin(6) * (t1161 * t1560 - t1312 * t1556), t1556 * t1073 + t1560 * t1100 + pkin(6) * (t1192 * t1560 - t1316 * t1556), t1556 * t1047 + t1560 * t1072 + pkin(6) * (t1129 * t1560 - t1342 * t1556), t1556 * t1038 + t1560 * t1039 + pkin(6) * (t1061 * t1560 - t1285 * t1556), t1111 * t1556 + t1267 * t1560, t1085 * t1556 + t1205 * t1560, t1098 * t1556 + t1241 * t1560, t1110 * t1556 - t1265 * t1560, t1099 * t1556 + t1242 * t1560, t1137 * t1556 + t1288 * t1560, t1556 * t1035 + t1560 * t1052 + pkin(6) * (t1088 * t1560 - t1223 * t1556), t1556 * t1036 + t1560 * t1055 + pkin(6) * (t1091 * t1560 - t1230 * t1556), t1556 * t1032 + t1560 * t1044 + pkin(6) * (t1083 * t1560 - t1206 * t1556), t1556 * t1027 + t1560 * t1028 + pkin(6) * (t1041 * t1560 - t1092 * t1556); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1517, t1518, 0, 0, t1458, t1449, t1462, t1457, t1459, 0, t1399, t1398, t1375, t1382, t1458, t1462, -t1449, 0, -t1459, t1457, t1328, t1309, t1329, t1240, t1302, t1252, t1332, t1301, t1333, t1351, t1147, t1148, t1114, t1101, t1169, t1126, t1197, t1168, t1198, t1214, t1066, t1071, t1046, t1037, t1109, t1084, t1096, t1108, t1097, t1136, t1033, t1034, t1031, t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1562, 0, 0, -g(3), -t1517, 0, t1477, -t1452, t1468, t1475, -t1467, t1497, t1417, t1418, t1401, pkin(7) * t1401, t1477, t1468, t1452, t1497, t1467, t1475, t1340, t1339, t1341, t1279, t1304, t1254, t1336, t1303, t1337, t1352, t1153, t1162, t1116, t1103, t1171, t1128, t1199, t1170, t1200, t1215, t1068, t1073, t1047, t1038, t1111, t1085, t1098, t1110, t1099, t1137, t1035, t1036, t1032, t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, 0, qJDD(1), 0, g(3), 0, -t1518, 0, t1527, -t1513, -t1645, -t1527, -t1539, -qJDD(2), t1411, t1412, 0, pkin(1) * t1401, t1527, -t1645, t1513, -qJDD(2), t1539, -t1527, t1355, t1501, t1353, t1281, t1448, t1447, -t1726, -t1448, t1570, -t1544, t1190, t1209, t1154, t1102, t1374, t1371, t1317, -t1374, t1583, -t1544, t1086, t1100, t1072, t1039, t1267, t1205, t1241, -t1265, t1242, t1288, t1052, t1055, t1044, t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1517, t1518, 0, 0, t1458, t1449, t1462, t1457, t1459, 0, t1399, t1398, t1375, t1382, t1458, t1462, -t1449, 0, -t1459, t1457, t1328, t1309, t1329, t1240, t1302, t1252, t1332, t1301, t1333, t1351, t1147, t1148, t1114, t1101, t1169, t1126, t1197, t1168, t1198, t1214, t1066, t1071, t1046, t1037, t1109, t1084, t1096, t1108, t1097, t1136, t1033, t1034, t1031, t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1506, t1507, t1514, -t1535, t1522, t1535, 0, -t1492, t1472, 0, t1506, t1514, -t1507, t1535, -t1522, -t1535, qJ(3) * t1507, t1397, t1376, qJ(3) * t1395, t1381, t1320, t1393, t1379, t1394, t1420, t1278, t1280, t1202, t1213, t1238, t1179, t1262, t1237, t1263, t1287, t1117, t1121, t1067, t1059, t1152, t1123, t1143, t1151, t1144, t1185, t1050, t1051, t1043, t1030; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1637, t1505, -t1521, -t1607, t1515, -t1637, t1492, 0, t1473, 0, t1637, -t1521, -t1505, -t1637, -t1515, -t1607, t1377, t1396, pkin(2) * t1505, pkin(2) * t1395, -t1380, -t1318, -t1391, t1378, -t1392, -t1419, t1234, t1239, t1189, t1201, -t1236, -t1177, -t1260, -t1235, -t1261, -t1286, t1107, t1115, t1065, t1058, -t1150, -t1122, -t1141, -t1149, -t1142, -t1184, t1048, t1049, t1042, t1029; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1527, t1513, t1645, t1527, t1539, qJDD(2), -t1472, -t1473, 0, 0, -t1527, t1645, -t1513, qJDD(2), -t1539, t1527, t1734, -t1501, t1540 + t1566, t1611, -t1448, -t1447, t1726, t1448, -t1570, t1544, t1713, t1712, t1714, t1716, -t1374, -t1371, -t1317, t1374, -t1583, t1544, t1744, t1427 + t1715, t1718, t1722, -t1267, -t1205, -t1241, t1265, -t1242, -t1288, t1720, t1719, t1721, t1723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1506, t1514, -t1507, t1535, -t1522, -t1535, 0, t1413, t1395, 0, t1381, t1320, t1393, t1379, t1394, t1420, t1606, t1630, t1587, -t1701, t1238, t1179, t1262, t1237, t1263, t1287, t1589, t1588, t1590, t1569, t1152, t1123, t1143, t1151, t1144, t1185, t1592, t1591, t1593, t1594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1527, t1645, -t1513, qJDD(2), -t1539, t1527, -t1413, 0, t1404, 0, -t1448, -t1447, t1726, t1448, -t1570, t1544, -pkin(3) * t1372 + t1296, -pkin(3) * t1389 + t1297, -pkin(3) * t1319, -pkin(3) * t1232, -t1374, -t1371, -t1317, t1374, -t1583, t1544, -pkin(3) * t1225 + t1580, -pkin(3) * t1256 + t1427 - t1633, -pkin(3) * t1178 - t1245, -pkin(3) * t1094 - t1138, -t1267, -t1205, -t1241, t1265, -t1242, -t1288, -pkin(3) * t1124 + t1616, -pkin(3) * t1132 - t1617, -pkin(3) * t1119 - t1603, -pkin(3) * t1056 + t1634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1637, t1521, t1505, t1637, t1515, t1607, -t1395, -t1404, 0, 0, t1380, t1318, t1391, -t1378, t1392, t1419, -pkin(3) * t1383 - t1605, -pkin(3) * t1725 - t1604, -pkin(3) * t1415 - t1586, -pkin(3) * t1354 + t1700, t1236, t1177, t1260, t1235, t1261, t1286, -pkin(3) * t1312 - t1574, -pkin(3) * t1316 - t1573, -pkin(3) * t1342 - t1575, -pkin(3) * t1285 - t1568, t1150, t1122, t1141, t1149, t1142, t1184, -pkin(3) * t1223 - t1577, -pkin(3) * t1230 - t1576, -pkin(3) * t1206 - t1578, -pkin(3) * t1092 - t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, -t1383, t1733, -t1482, t1479, t1482, 0, t1354, t1296, 0, t1308, t1248, t1334, t1306, t1335, t1357, t1217, t1228, t1113, -qJ(5) * t1139, t1221, t1173, t1195, t1220, t1196, t1251, t1075, t1077, t1064, t1054; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1660, t1725, t1480, -t1585, -t1444, t1660, -t1354, 0, t1297, 0, t1307, t1246, t1330, t1305, t1331, t1356, t1203, t1212, t1104, t1118, t1219, t1172, t1193, t1218, t1194, t1250, t1069, t1070, t1062, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1448, t1447, -t1726, -t1448, t1570, -t1544, -t1296, -t1297, 0, 0, t1374, t1371, t1317, -t1374, t1583, -t1544, -t1580, t1428 + t1633, t1245, t1138, t1267, t1205, t1241, -t1265, t1242, t1288, -t1616, t1617, t1603, -t1634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1347, -t1312, t1727, -t1426, t1422, t1426, 0, t1285, t1187, 0, t1268, t1207, t1243, t1266, t1244, t1289, t1145, t1146, t1081, -pkin(9) * t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1661, t1316, t1423, -t1623, -t1365, t1661, -t1285, 0, t1188, 0, -t1349, -t1348, -t1276, t1349, t1272, -t1343, t1105, t1106, -pkin(5) * t1206, -pkin(5) * t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, t1371, t1317, -t1374, t1583, -t1544, -t1187, -t1188, 0, 0, t1267, t1205, t1241, -t1265, t1242, t1288, t1635, t1636, t1618, t1650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1298, t1273, t1728, t1360, t1358, -t1360, 0, t1158, t1134, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1275, t1359, -t1584, t1283, -t1361, -t1158, 0, t1135, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1349, t1348, t1276, -t1349, -t1272, t1343, -t1134, -t1135, 0, 0;];
m_new_reg  = t1;
