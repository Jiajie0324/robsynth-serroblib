% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:53:47
% EndTime: 2019-03-09 01:53:57
% DurationCPUTime: 4.82s
% Computational Cost: add. (4823->355), mult. (9504->486), div. (0->0), fcn. (11022->8), ass. (0->285)
t253 = cos(pkin(9));
t401 = cos(qJ(4));
t237 = t401 * t253;
t251 = sin(pkin(9));
t256 = sin(qJ(4));
t357 = t256 * t251;
t211 = -t237 + t357;
t252 = cos(pkin(10));
t257 = cos(qJ(6));
t236 = t257 * t252;
t250 = sin(pkin(10));
t255 = sin(qJ(6));
t359 = t255 * t250;
t415 = -t236 + t359;
t419 = t211 * t415;
t234 = t255 * t252;
t235 = t257 * t250;
t416 = t235 + t234;
t418 = t211 * t416;
t275 = t234 / 0.2e1 + t235 / 0.2e1;
t319 = t401 * t251;
t356 = t256 * t253;
t212 = t319 + t356;
t327 = t212 * qJD(1);
t317 = t418 * t327;
t207 = t212 ^ 2;
t412 = t211 ^ 2;
t417 = t207 + t412;
t244 = t250 ^ 2;
t246 = t252 ^ 2;
t223 = t244 + t246;
t305 = t236 / 0.2e1;
t308 = -t359 / 0.2e1;
t295 = t305 + t308;
t414 = qJD(5) * t418;
t413 = qJD(6) * t418;
t182 = t211 * t359;
t411 = -t182 / 0.2e1;
t410 = -t415 / 0.2e1;
t409 = t415 / 0.2e1;
t408 = t211 / 0.2e1;
t407 = -t212 / 0.2e1;
t406 = t212 / 0.2e1;
t405 = t416 / 0.2e1;
t238 = -pkin(5) * t252 - pkin(4);
t402 = t238 / 0.2e1;
t400 = t211 * pkin(4);
t399 = t212 * pkin(4);
t254 = -pkin(1) - qJ(3);
t398 = -pkin(7) + t254;
t397 = pkin(8) + qJ(5);
t364 = t212 * t252;
t156 = qJ(5) * t212 - t400;
t216 = t398 * t251;
t217 = t398 * t253;
t154 = t216 * t256 - t401 * t217;
t369 = t154 * t250;
t73 = t252 * t156 + t369;
t47 = -pkin(5) * t211 + pkin(8) * t364 + t73;
t396 = t255 * t47;
t135 = t250 * t212;
t143 = t252 * t154;
t74 = t250 * t156 - t143;
t58 = pkin(8) * t135 + t74;
t395 = t255 * t58;
t394 = t257 * t47;
t393 = t257 * t58;
t233 = t251 * pkin(3) + qJ(2);
t294 = qJ(5) * t211 + t399;
t134 = t294 + t233;
t320 = t401 * t216;
t358 = t256 * t217;
t155 = t320 + t358;
t360 = t250 * t155;
t66 = t252 * t134 - t360;
t144 = t252 * t155;
t67 = t250 * t134 + t144;
t30 = t250 * t67 + t252 * t66;
t387 = t74 * t250;
t388 = t73 * t252;
t5 = -t30 * t212 + (-t387 - t388) * t211;
t392 = t5 * qJD(1);
t391 = t66 * t250;
t390 = t67 * t252;
t389 = t73 * t250;
t386 = t74 * t252;
t137 = t211 * t250;
t114 = -pkin(5) * t137 + t154;
t365 = t211 * t252;
t262 = pkin(5) * t212 + pkin(8) * t365 + t66;
t52 = pkin(8) * t137 + t67;
t20 = t255 * t52 - t257 * t262;
t11 = t114 * t418 + t20 * t212;
t385 = qJD(1) * t11;
t132 = -t211 * t236 + t182;
t21 = t255 * t262 + t257 * t52;
t12 = t114 * t132 - t21 * t212;
t384 = qJD(1) * t12;
t15 = -t154 * t211 + (-t390 + t391) * t212;
t383 = qJD(1) * t15;
t131 = t415 * t212;
t19 = t131 * t408 - t406 * t419;
t381 = qJD(1) * t19;
t26 = t30 * t211;
t380 = qJD(1) * t26;
t379 = qJD(1) * t30;
t368 = t211 * t418;
t127 = t416 * t212;
t373 = t127 * t212;
t41 = -t368 + t373;
t378 = qJD(1) * t41;
t42 = t368 + t373;
t377 = qJD(1) * t42;
t367 = t211 * t132;
t371 = t131 * t212;
t43 = -t367 + t371;
t376 = qJD(1) * t43;
t44 = -t367 - t371;
t375 = qJD(1) * t44;
t76 = (t405 + t275) * t212;
t374 = qJD(4) * t76;
t13 = (t73 - t369) * t212 + (-t66 - t360) * t211;
t372 = t13 * qJD(1);
t14 = (-t74 - t143) * t212 + (t67 - t144) * t211;
t370 = t14 * qJD(1);
t303 = -t244 / 0.2e1 - t246 / 0.2e1;
t296 = t303 * t212;
t263 = qJ(5) * t296 + t400 / 0.2e1;
t276 = -t388 / 0.2e1 - t387 / 0.2e1;
t22 = t263 + t276;
t363 = t22 * qJD(1);
t362 = t244 * t212;
t361 = t246 * t212;
t29 = t127 * t132 + t131 * t418;
t355 = t29 * qJD(1);
t321 = -t207 / 0.2e1;
t258 = -t367 / 0.2e1 + t415 * t321;
t33 = t258 + t295;
t354 = t33 * qJD(1);
t259 = -t368 / 0.2e1 + t416 * t321;
t34 = t259 - t275;
t353 = t34 * qJD(1);
t267 = t303 * t207 - t412 / 0.2e1;
t49 = t267 + t303;
t352 = t49 * qJD(1);
t265 = -t416 / 0.2e1 + t275;
t75 = t265 * t212;
t351 = t75 * qJD(1);
t350 = t75 * qJD(4);
t70 = t76 * qJD(1);
t274 = -t236 / 0.2e1 + t359 / 0.2e1;
t78 = (t409 + t274) * t212;
t349 = t78 * qJD(1);
t79 = (t410 + t274) * t212;
t348 = t79 * qJD(1);
t309 = t415 * t407;
t80 = t212 * t295 + t309;
t347 = t80 * qJD(1);
t89 = t223 * t412;
t346 = t89 * qJD(1);
t345 = t419 * qJD(1);
t161 = t418 / 0.2e1;
t93 = 0.2e1 * t161;
t344 = t93 * qJD(1);
t245 = t251 ^ 2;
t247 = t253 ^ 2;
t224 = t245 + t247;
t343 = qJD(1) * t132;
t141 = t417 * t252;
t342 = qJD(1) * t141;
t208 = t224 * t254;
t341 = qJD(1) * t208;
t340 = qJD(4) * t155;
t339 = qJD(4) * t416;
t338 = qJD(4) * t238;
t337 = qJD(6) * t212;
t336 = qJD(6) * t416;
t206 = t237 / 0.2e1 - t357 / 0.2e1;
t112 = t303 * t211 + t206;
t335 = t112 * qJD(1);
t118 = t417 * t250;
t334 = t118 * qJD(1);
t124 = t207 - t412;
t333 = t124 * qJD(1);
t332 = t137 * qJD(1);
t139 = t361 + t362;
t331 = t139 * qJD(1);
t140 = t223 * t211;
t330 = t140 * qJD(1);
t329 = t206 * qJD(1);
t198 = t415 * qJD(6);
t328 = t211 * qJD(1);
t199 = t211 * qJD(4);
t202 = t212 * qJD(4);
t302 = -t245 / 0.2e1 - t247 / 0.2e1;
t219 = -0.1e1 / 0.2e1 + t302;
t326 = t219 * qJD(1);
t325 = t223 * qJD(4);
t324 = t224 * qJD(1);
t323 = t251 * qJD(1);
t322 = t253 * qJD(1);
t318 = t419 * t327;
t316 = t415 * t327;
t315 = t416 * t327;
t314 = t250 * t327;
t313 = t252 * t327;
t312 = t211 * t327;
t311 = t211 * t202;
t310 = t252 * t328;
t301 = qJD(1) * t233 + qJD(3);
t300 = -qJD(6) - t327;
t299 = qJD(5) * t211 + qJD(2);
t298 = qJD(5) + t338;
t297 = t212 * t310;
t277 = t391 / 0.2e1 - t390 / 0.2e1;
t4 = (t386 / 0.2e1 - t389 / 0.2e1 + t154 / 0.2e1) * t212 + (t155 / 0.2e1 + t277) * t211;
t6 = t154 * t155 + t66 * t73 + t67 * t74;
t293 = t6 * qJD(1) + t4 * qJD(2);
t292 = t386 - t389;
t115 = -pkin(5) * t135 + t155;
t1 = (t394 - t395) * t212 + t20 * t211 - t115 * t418 - t114 * t127;
t291 = t1 * qJD(1);
t2 = -(t393 + t396) * t212 + t21 * t211 + t115 * t132 + t114 * t131;
t290 = t2 * qJD(1) + t19 * qJD(2);
t55 = (0.1e1 - t223) * t212 * t211;
t289 = t4 * qJD(1) + t55 * qJD(2);
t221 = t397 * t250;
t222 = t397 * t252;
t167 = -t255 * t221 + t222 * t257;
t260 = t114 * t405 + t132 * t402 + t167 * t407;
t278 = -t395 / 0.2e1 + t394 / 0.2e1;
t7 = -t260 + t278;
t77 = t265 * t211;
t288 = t7 * qJD(1) + t77 * qJD(2);
t166 = t221 * t257 + t255 * t222;
t261 = t114 * t410 + t166 * t406 + t402 * t418;
t279 = -t396 / 0.2e1 - t393 / 0.2e1;
t8 = -t261 + t279;
t81 = t411 + (t305 + t409) * t211;
t287 = t8 * qJD(1) + t81 * qJD(2);
t28 = -t132 * t416 - t415 * t418;
t37 = -t132 ^ 2 + t418 ^ 2;
t286 = qJD(1) * t37 + qJD(4) * t28;
t123 = t415 ^ 2 - t416 ^ 2;
t283 = qJD(1) * t28 + qJD(4) * t123;
t282 = qJD(1) * t418 - qJD(4) * t415;
t62 = t411 + (t308 + t236) * t211;
t281 = qJD(1) * t62 - t339;
t280 = t211 * t305 + t411;
t40 = t132 * t410 + t405 * t418;
t273 = qJD(4) * t40 + t343 * t418;
t272 = -qJD(1) * t40 + t339 * t415;
t271 = -qJD(6) * t206 + t312;
t269 = t358 / 0.2e1 + t320 / 0.2e1;
t268 = t356 / 0.2e1 + t319 / 0.2e1;
t110 = t296 + t268;
t220 = t223 * qJ(5);
t24 = t269 + t277;
t264 = qJD(1) * t24 + qJD(2) * t110 - qJD(4) * t220;
t249 = qJ(2) * qJD(2);
t248 = qJD(1) * qJ(2);
t218 = 0.1e1 / 0.2e1 + t302;
t194 = t206 * qJD(4);
t113 = t223 * t408 + t206;
t111 = t361 / 0.2e1 + t362 / 0.2e1 + t268;
t92 = t161 - t418 / 0.2e1;
t84 = t275 * t211 + t161;
t83 = -t419 / 0.2e1 + t280;
t82 = t274 * t212 + t309;
t72 = t75 * qJD(6);
t71 = t76 * qJD(6);
t63 = -t211 * t274 - t280;
t59 = -t336 - t70;
t48 = t267 - t303;
t38 = t40 * qJD(6);
t36 = -t258 + t295;
t35 = -t259 - t275;
t27 = t28 * qJD(6);
t25 = t269 - t277;
t23 = t263 - t276;
t17 = t19 * qJD(4);
t10 = t260 + t278;
t9 = t261 + t279;
t3 = t4 * qJD(4);
t16 = [0, 0, 0, 0, qJD(2), t249, qJD(2) * t251, qJD(2) * t253, t224 * qJD(3), -qJD(3) * t208 + t249, t311, t124 * qJD(4), 0, 0, 0, qJD(2) * t212 - t233 * t199, -qJD(2) * t211 - t233 * t202, t118 * qJD(3) + t13 * qJD(4) + t299 * t364, qJD(3) * t141 + qJD(4) * t14 - t135 * t299, qJD(2) * t140 - qJD(4) * t5 + qJD(5) * t89, qJD(2) * t30 + qJD(3) * t15 + qJD(4) * t6 + qJD(5) * t26 (qJD(4) * t131 + t413) * t132, qJD(4) * t29 + qJD(6) * t37, qJD(4) * t43 + t337 * t418, qJD(4) * t41 - t132 * t337, -t311, qJD(3) * t42 + qJD(4) * t1 + qJD(6) * t12 + (-qJD(2) * t415 - qJD(5) * t419) * t212, qJD(3) * t44 + qJD(4) * t2 + qJD(6) * t11 + (-qJD(2) * t416 - t414) * t212; 0, 0, 0, 0, qJD(1), t248, t323, t322, 0, qJD(3) * t218 + t248, 0, 0, 0, 0, 0, t327, -t328, t313, -t314, t330, qJD(3) * t48 + t3 + t379, 0, 0, 0, 0, 0, qJD(6) * t36 - t316, qJD(6) * t35 + t17 - t315; 0, 0, 0, 0, 0, 0, 0, 0, t324, qJD(2) * t218 - t341, 0, 0, 0, 0, 0, 0, 0, t334, t342, 0, qJD(2) * t48 + qJD(4) * t23 + qJD(5) * t113 + t383, 0, 0, 0, 0, 0, t72 + t377, qJD(4) * t92 - qJD(6) * t79 + t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t333, -t202, t199, 0, -t233 * t328 - t340, qJD(4) * t154 - t233 * t327, t372 + (t250 * t294 - t144) * qJD(4) - t135 * qJD(5), t250 * t340 + t370 + (qJD(4) * t294 - qJD(5) * t212) * t252, qJD(4) * t292 - t392, t23 * qJD(3) + (-t155 * pkin(4) + qJ(5) * t292) * qJD(4) + t25 * qJD(5) + t293, t38 + (t339 + t343) * t131, t355 + (t127 * t416 - t131 * t415) * qJD(4) + t27, qJD(6) * t82 - t199 * t416 + t376, t199 * t415 + t378 + t72, -t271 (t115 * t415 - t127 * t238 + t166 * t211) * qJD(4) - t76 * qJD(5) + t10 * qJD(6) + t291, t92 * qJD(3) + (t115 * t416 + t131 * t238 + t167 * t211) * qJD(4) - t80 * qJD(5) + t9 * qJD(6) + t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t135 + t297 (-qJD(4) * t252 - t250 * t328) * t212, t346, qJD(3) * t113 + qJD(4) * t25 + t380, 0, 0, 0, 0, 0, qJD(6) * t63 - t318 - t374, -qJD(4) * t80 - t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, t286, t82 * qJD(4) - t300 * t418, t132 * t300 + t350, t194, qJD(2) * t36 + qJD(3) * t75 + qJD(4) * t10 + qJD(5) * t63 - qJD(6) * t21 + t384, qJD(2) * t35 - qJD(3) * t79 + qJD(4) * t9 + qJD(6) * t20 + t385; 0, 0, 0, 0, -qJD(1), -t248, -t323, -t322, 0, qJD(3) * t219 - t248, 0, 0, 0, 0, 0, -t327, t328, -t313, t314, -t330, qJD(3) * t49 + t3 - t379, 0, 0, 0, 0, 0, -qJD(6) * t33 + t316, -qJD(6) * t34 + t17 + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t352, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t199, -t252 * t202, t250 * t202, -t140 * qJD(4) (-qJ(5) * t140 - t399) * qJD(4) + t111 * qJD(5) + t289, 0, 0, 0, 0, 0, qJD(6) * t84 + t202 * t415, qJD(6) * t83 + t202 * t416 + t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84 * qJD(4) + qJD(6) * t131 - t354, t83 * qJD(4) + t337 * t416 - t353; 0, 0, 0, 0, 0, 0, 0, 0, -t324, -qJD(2) * t219 + t341, 0, 0, 0, 0, 0, -t199, -t202, -t199 * t252 - t334, qJD(4) * t137 - t342, t139 * qJD(4), -qJD(2) * t49 - qJD(4) * t22 - qJD(5) * t112 - t383, 0, 0, 0, 0, 0, qJD(4) * t419 - t377 - t71, qJD(4) * t93 - qJD(6) * t80 - t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, -t327, -t310, t332, t331, -t363, 0, 0, 0, 0, 0, t345, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t335, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, t198 - t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, -t333, 0, 0, 0, t301 * t211, t301 * t212, qJD(3) * t365 - t372, -qJD(3) * t137 - t370, -qJD(3) * t139 + t392, qJD(3) * t22 - qJD(5) * t24 - t293, -t131 * t343 + t38, t27 - t355, -qJD(6) * t78 - t376, -t71 - t378, t271, -qJD(3) * t419 + qJD(5) * t75 - qJD(6) * t7 - t291, -qJD(3) * t93 - qJD(5) * t79 - qJD(6) * t8 - t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t110 - t289, 0, 0, 0, 0, 0, -qJD(6) * t77, -qJD(6) * t81 - t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, t327, t310, -t332, -t331, t363, 0, 0, 0, 0, 0, -t345, -t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223 * qJD(5), t220 * qJD(5), -t416 * t198, t123 * qJD(6), 0, 0, 0, t238 * t336, -t238 * t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, -t264, 0, 0, 0, 0, 0, t351, -t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, t283, -t198 - t349, t59, -t329, -qJD(6) * t167 + t338 * t416 - t288, qJD(6) * t166 - t338 * t415 - t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, t250 * t312, -t346, qJD(3) * t112 + qJD(4) * t24 - t380, 0, 0, 0, 0, 0, -qJD(6) * t62 + t318 - t350, qJD(4) * t79 + t317 + t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t264, 0, 0, 0, 0, 0, t336 - t351, -t198 + t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281, t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273, -t286, qJD(4) * t78 - t317, t132 * t327 + t374, t194, qJD(2) * t33 + qJD(3) * t76 + qJD(4) * t7 + qJD(5) * t62 - t384, qJD(2) * t34 + qJD(3) * t80 + qJD(4) * t8 - t385 - t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t77 + t354, qJD(4) * t81 + t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t283, t349, t70, t329, -t298 * t416 + t288, t298 * t415 + t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, -t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t16;
