% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:33
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:32:46
% EndTime: 2019-05-05 14:33:15
% DurationCPUTime: 30.20s
% Computational Cost: add. (193800->829), mult. (461097->1075), div. (0->0), fcn. (335156->10), ass. (0->535)
t1336 = sin(qJ(4));
t1332 = sin(pkin(9));
t1334 = cos(pkin(9));
t1339 = cos(qJ(4));
t1380 = t1332 * t1339 + t1334 * t1336;
t1297 = t1380 * qJD(1);
t1299 = (-t1332 * t1336 + t1334 * t1339) * qJD(1);
t1440 = t1299 * t1297;
t1494 = qJDD(4) - t1440;
t1496 = t1336 * t1494;
t1495 = t1339 * t1494;
t1322 = t1334 * qJDD(1);
t1426 = t1332 * qJDD(1);
t1295 = t1322 * t1339 - t1336 * t1426;
t1448 = t1297 * qJD(4);
t1256 = -t1448 + t1295;
t1331 = sin(pkin(10));
t1333 = cos(pkin(10));
t1234 = qJDD(4) * t1331 + t1256 * t1333;
t1270 = -t1333 * qJD(4) + t1299 * t1331;
t1447 = t1297 * t1270;
t1178 = t1234 - t1447;
t1179 = t1234 + t1447;
t1379 = qJDD(4) * t1333 - t1256 * t1331;
t1271 = qJD(4) * t1331 + t1299 * t1333;
t1446 = t1297 * t1271;
t1175 = -t1446 - t1379;
t1224 = t1271 * t1270;
t1441 = t1299 * qJD(4);
t1484 = t1380 * qJDD(1);
t1254 = t1484 + t1441;
t1485 = -t1224 + t1254;
t1493 = t1331 * t1485;
t1492 = t1333 * t1485;
t1335 = sin(qJ(6));
t1338 = cos(qJ(6));
t1217 = t1338 * t1270 + t1271 * t1335;
t1219 = -t1270 * t1335 + t1271 * t1338;
t1157 = t1219 * t1217;
t1246 = qJDD(6) + t1254;
t1487 = -t1157 + t1246;
t1491 = t1335 * t1487;
t1490 = t1338 * t1487;
t1341 = qJD(1) ^ 2;
t1326 = t1332 ^ 2;
t1327 = t1334 ^ 2;
t1429 = t1326 + t1327;
t1477 = pkin(1) + qJ(3);
t1489 = pkin(3) * t1426 - (pkin(7) * t1429 + t1477) * t1341;
t1488 = t1429 * t1341;
t1337 = sin(qJ(1));
t1340 = cos(qJ(1));
t1310 = t1337 * g(1) - t1340 * g(2);
t1376 = qJDD(2) - t1310;
t1349 = -t1341 * qJ(2) + t1376;
t1345 = -qJDD(1) * t1477 + t1349;
t1465 = qJD(3) * qJD(1);
t1248 = g(3) * t1334 + (-t1345 + 0.2e1 * t1465) * t1332;
t1435 = t1326 * t1341;
t1229 = -pkin(3) * t1435 - pkin(7) * t1426 - t1248;
t1425 = -0.2e1 * t1465;
t1471 = t1332 * g(3);
t1344 = t1471 + (t1425 + (-pkin(3) * t1332 - qJ(2)) * t1341 + (-pkin(7) - t1477) * qJDD(1) + t1376) * t1334;
t1162 = t1339 * t1229 + t1336 * t1344;
t1245 = pkin(4) * t1297 - qJ(5) * t1299;
t1481 = qJD(4) ^ 2;
t1106 = -pkin(4) * t1481 + qJDD(4) * qJ(5) - t1245 * t1297 + t1162;
t1466 = qJD(2) * qJD(1);
t1325 = 0.2e1 * t1466;
t1311 = t1340 * g(1) + t1337 * g(2);
t1328 = qJDD(1) * qJ(2);
t1377 = -t1311 + t1328;
t1130 = qJDD(3) + t1325 + (-t1256 + t1448) * qJ(5) + (t1254 + t1441) * pkin(4) + t1377 + t1489;
t1036 = 0.2e1 * qJD(5) * t1271 + t1331 * t1106 - t1333 * t1130;
t1037 = -0.2e1 * qJD(5) * t1270 + t1333 * t1106 + t1331 * t1130;
t979 = t1331 * t1036 + t1333 * t1037;
t1123 = -t1217 * qJD(6) + t1338 * t1234 + t1335 * t1379;
t1285 = qJD(6) + t1297;
t1198 = t1285 * t1217;
t1486 = -t1198 + t1123;
t1247 = t1471 + (t1345 + t1425) * t1334;
t1185 = t1334 * t1247 - t1332 * t1248;
t1400 = t1335 * t1234 - t1338 * t1379;
t1080 = (qJD(6) - t1285) * t1219 + t1400;
t1215 = t1217 ^ 2;
t1216 = t1219 ^ 2;
t1480 = t1270 ^ 2;
t1267 = t1271 ^ 2;
t1284 = t1285 ^ 2;
t1479 = t1297 ^ 2;
t1293 = t1299 ^ 2;
t1233 = pkin(5) * t1297 - pkin(8) * t1271;
t1011 = -pkin(5) * t1480 + pkin(8) * t1379 - t1297 * t1233 + t1037;
t998 = t1485 * pkin(5) - pkin(8) * t1179 - t1036;
t950 = t1011 * t1335 - t1338 * t998;
t951 = t1011 * t1338 + t1335 * t998;
t908 = t1335 * t951 - t1338 * t950;
t1478 = pkin(5) * t908;
t1476 = pkin(2) * t1185;
t1348 = -t1377 - 0.2e1 * t1466;
t1346 = -qJDD(3) + t1348;
t1273 = t1341 * t1477 + t1346;
t1475 = pkin(2) * t1273;
t1304 = t1429 * qJDD(1);
t1474 = pkin(2) * t1304;
t1473 = pkin(4) * t1336;
t1083 = t1198 + t1123;
t1021 = -t1080 * t1335 - t1083 * t1338;
t1472 = pkin(5) * t1021;
t1470 = qJDD(1) * pkin(1);
t1469 = t1331 * t908;
t1468 = t1333 * t908;
t1161 = t1336 * t1229 - t1339 * t1344;
t1105 = -qJDD(4) * pkin(4) - qJ(5) * t1481 + t1299 * t1245 + qJDD(5) + t1161;
t1467 = -pkin(4) * t1105 + qJ(5) * t979;
t1048 = -pkin(5) * t1379 - pkin(8) * t1480 + t1271 * t1233 + t1105;
t1464 = t1048 * t1335;
t1463 = t1048 * t1338;
t1090 = -t1161 * t1339 + t1162 * t1336;
t1462 = t1090 * t1332;
t1461 = t1090 * t1334;
t1128 = t1157 + t1246;
t1460 = t1128 * t1335;
t1459 = t1128 * t1338;
t1182 = t1224 + t1254;
t1458 = t1182 * t1331;
t1457 = t1182 * t1333;
t1241 = t1346 - t1489;
t1456 = t1241 * t1336;
t1455 = t1241 * t1339;
t1251 = qJDD(4) + t1440;
t1454 = t1251 * t1336;
t1453 = t1251 * t1339;
t1452 = t1254 * t1336;
t1451 = t1285 * t1219;
t1450 = t1285 * t1335;
t1449 = t1285 * t1338;
t1445 = t1297 * t1331;
t1444 = t1297 * t1333;
t1443 = t1297 * t1336;
t1442 = t1297 * t1339;
t1439 = t1299 * t1336;
t1438 = t1299 * t1339;
t1437 = t1304 * t1337;
t1436 = t1304 * t1340;
t1101 = t1331 * t1105;
t1433 = t1332 * t1273;
t1432 = t1332 * t1334;
t1102 = t1333 * t1105;
t1265 = t1334 * t1273;
t1430 = t1326 - t1327;
t1428 = t1326 * qJDD(1);
t1427 = t1327 * qJDD(1);
t959 = -t1105 * t1339 + t1336 * t979;
t1424 = pkin(3) * t959 + t1467;
t1423 = -pkin(4) * t1339 - pkin(3);
t1422 = t1336 * t1157;
t1421 = t1339 * t1157;
t1420 = t1336 * t1224;
t1419 = t1339 * t1224;
t1418 = t1337 * t1440;
t1417 = t1340 * t1440;
t1210 = -t1267 - t1479;
t1126 = -t1210 * t1331 - t1457;
t1416 = -pkin(4) * t1178 + qJ(5) * t1126 + t1101;
t1200 = -t1479 - t1480;
t1112 = t1200 * t1333 - t1493;
t1176 = -t1446 + t1379;
t1415 = pkin(4) * t1176 + qJ(5) * t1112 - t1102;
t1279 = -t1293 - t1481;
t1206 = t1279 * t1339 - t1454;
t1414 = pkin(3) * t1206 - t1162;
t1091 = t1161 * t1336 + t1339 * t1162;
t1028 = t1091 * t1332 + t1461;
t1089 = pkin(3) * t1090;
t1413 = -pkin(2) * t1028 - t1089;
t1194 = -t1295 * t1339 - t1336 * t1484;
t1196 = t1295 * t1336 - t1339 * t1484;
t1114 = t1194 * t1334 + t1196 * t1332;
t1191 = pkin(3) * t1194;
t1412 = -pkin(2) * t1114 - t1191;
t909 = t1335 * t950 + t1338 * t951;
t887 = t1331 * t909 + t1468;
t899 = -pkin(5) * t1048 + pkin(8) * t909;
t869 = -pkin(8) * t1468 - qJ(5) * t887 - t1331 * t899;
t872 = -pkin(4) * t887 - t1478;
t888 = t1333 * t909 - t1469;
t883 = t1048 * t1336 + t1339 * t888;
t854 = -pkin(3) * t887 + pkin(7) * t883 + t1336 * t869 + t1339 * t872;
t882 = -t1048 * t1339 + t1336 * t888;
t856 = -pkin(7) * t882 - t1336 * t872 + t1339 * t869;
t1411 = -t1332 * t854 + t1334 * t856;
t1023 = -t1080 * t1338 + t1083 * t1335;
t1100 = -t1215 - t1216;
t895 = -pkin(5) * t1100 + pkin(8) * t1023 + t909;
t897 = -pkin(8) * t1021 - t908;
t954 = t1021 * t1333 + t1023 * t1331;
t871 = -qJ(5) * t954 - t1331 * t895 + t1333 * t897;
t928 = -pkin(4) * t954 - t1472;
t956 = -t1021 * t1331 + t1023 * t1333;
t939 = t1100 * t1336 + t1339 * t956;
t862 = -pkin(3) * t954 + pkin(7) * t939 + t1336 * t871 + t1339 * t928;
t938 = -t1100 * t1339 + t1336 * t956;
t868 = -pkin(7) * t938 - t1336 * t928 + t1339 * t871;
t1410 = -t1332 * t862 + t1334 * t868;
t1140 = -t1284 - t1215;
t1052 = t1140 * t1338 - t1491;
t1079 = (qJD(6) + t1285) * t1219 + t1400;
t962 = -pkin(5) * t1079 + pkin(8) * t1052 - t1463;
t1051 = t1140 * t1335 + t1490;
t983 = -pkin(8) * t1051 + t1464;
t989 = t1051 * t1333 + t1052 * t1331;
t907 = -qJ(5) * t989 - t1331 * t962 + t1333 * t983;
t1375 = pkin(5) * t1051 - t950;
t910 = -pkin(4) * t989 - t1375;
t990 = -t1051 * t1331 + t1052 * t1333;
t965 = t1079 * t1336 + t1339 * t990;
t874 = -pkin(3) * t989 + pkin(7) * t965 + t1336 * t907 + t1339 * t910;
t964 = -t1079 * t1339 + t1336 * t990;
t878 = -pkin(7) * t964 - t1336 * t910 + t1339 * t907;
t1409 = -t1332 * t874 + t1334 * t878;
t1163 = -t1216 - t1284;
t1062 = t1163 * t1338 - t1460;
t1063 = -t1163 * t1335 - t1459;
t1002 = t1062 * t1333 + t1063 * t1331;
t967 = -pkin(5) * t1486 + pkin(8) * t1063 + t1464;
t992 = -pkin(8) * t1062 + t1463;
t911 = -qJ(5) * t1002 - t1331 * t967 + t1333 * t992;
t1355 = pkin(5) * t1062 - t951;
t912 = -pkin(4) * t1002 - t1355;
t1003 = -t1062 * t1331 + t1063 * t1333;
t970 = t1003 * t1339 + t1336 * t1486;
t876 = -pkin(3) * t1002 + pkin(7) * t970 + t1336 * t911 + t1339 * t912;
t969 = t1003 * t1336 - t1339 * t1486;
t880 = -pkin(7) * t969 - t1336 * t912 + t1339 * t911;
t1408 = -t1332 * t876 + t1334 * t880;
t960 = t1105 * t1336 + t1339 * t979;
t978 = -t1036 * t1333 + t1037 * t1331;
t893 = pkin(7) * t960 + (-qJ(5) * t1336 + t1423) * t978;
t901 = -pkin(7) * t959 + (-qJ(5) * t1339 + t1473) * t978;
t1407 = -t1332 * t893 + t1334 * t901;
t1098 = -t1175 * t1333 + t1179 * t1331;
t1188 = t1267 + t1480;
t1057 = t1098 * t1339 - t1188 * t1336;
t1096 = -t1175 * t1331 - t1179 * t1333;
t957 = -qJ(5) * t1096 - t978;
t919 = pkin(7) * t1057 + t1096 * t1423 + t1336 * t957;
t1056 = t1098 * t1336 + t1188 * t1339;
t930 = -pkin(7) * t1056 + t1096 * t1473 + t1339 * t957;
t1406 = -t1332 * t919 + t1334 * t930;
t1111 = t1200 * t1331 + t1492;
t1004 = -pkin(4) * t1111 + t1036;
t1039 = -qJ(5) * t1111 + t1101;
t1061 = t1112 * t1339 - t1176 * t1336;
t931 = -pkin(3) * t1111 + pkin(7) * t1061 + t1004 * t1339 + t1039 * t1336;
t1060 = t1112 * t1336 + t1176 * t1339;
t941 = -pkin(7) * t1060 - t1004 * t1336 + t1039 * t1339;
t1405 = -t1332 * t931 + t1334 * t941;
t1125 = t1210 * t1333 - t1458;
t1006 = -pkin(4) * t1125 + t1037;
t1040 = -qJ(5) * t1125 + t1102;
t1066 = t1126 * t1339 + t1178 * t1336;
t932 = -pkin(3) * t1125 + pkin(7) * t1066 + t1006 * t1339 + t1040 * t1336;
t1065 = t1126 * t1336 - t1178 * t1339;
t944 = -pkin(7) * t1065 - t1006 * t1336 + t1040 * t1339;
t1404 = -t1332 * t932 + t1334 * t944;
t1228 = -t1479 - t1293;
t1038 = -pkin(3) * t1228 + pkin(7) * t1196 + t1091;
t1050 = -pkin(7) * t1194 - t1090;
t1403 = -t1332 * t1038 + t1334 * t1050;
t1249 = -t1479 - t1481;
t1190 = t1249 * t1339 - t1496;
t1253 = t1484 + 0.2e1 * t1441;
t1113 = -pkin(3) * t1253 + pkin(7) * t1190 + t1455;
t1189 = t1249 * t1336 + t1495;
t1154 = -pkin(7) * t1189 - t1456;
t1402 = -t1332 * t1113 + t1334 * t1154;
t1209 = -t1279 * t1336 - t1453;
t1255 = -0.2e1 * t1448 + t1295;
t1135 = -pkin(3) * t1255 + pkin(7) * t1209 - t1456;
t1160 = -pkin(7) * t1206 - t1455;
t1401 = -t1332 * t1135 + t1334 * t1160;
t1280 = t1341 * pkin(1) + t1348;
t1286 = -t1349 + t1470;
t1398 = -t1340 * t1280 - t1286 * t1337;
t1397 = -t1310 * t1337 - t1340 * t1311;
t1396 = -pkin(4) * t1100 + qJ(5) * t956 + t1331 * t897 + t1333 * t895;
t1395 = -pkin(4) * t1079 + qJ(5) * t990 + t1331 * t983 + t1333 * t962;
t1394 = -pkin(4) * t1486 + qJ(5) * t1003 + t1331 * t992 + t1333 * t967;
t1393 = pkin(4) * t1188 + qJ(5) * t1098 + t979;
t1392 = pkin(3) * t1065 + t1416;
t1391 = pkin(3) * t1060 + t1415;
t1308 = qJDD(1) * t1340 - t1337 * t1341;
t1390 = pkin(6) * t1308 + g(3) * t1337;
t1309 = qJDD(1) * t1337 + t1340 * t1341;
t1389 = -pkin(6) * t1309 + g(3) * t1340;
t1388 = pkin(3) * t938 + t1396;
t1387 = pkin(3) * t964 + t1395;
t1386 = pkin(3) * t1189 - t1161;
t1385 = pkin(3) * t969 + t1394;
t913 = t1332 * t960 + t1334 * t959;
t1384 = -pkin(2) * t913 - t1424;
t1383 = pkin(3) * t1056 + t1393;
t1186 = -t1247 * t1332 - t1248 * t1334;
t1382 = t1280 * t1337 - t1286 * t1340;
t1381 = t1310 * t1340 - t1311 * t1337;
t1145 = t1206 * t1334 + t1209 * t1332;
t1378 = -pkin(2) * t1145 - t1414;
t1058 = pkin(3) * t1241 + pkin(7) * t1091;
t1374 = -pkin(7) * t1461 - t1332 * t1058;
t1373 = -pkin(4) * t1048 - pkin(8) * t1469 + qJ(5) * t888 + t1333 * t899;
t999 = t1060 * t1334 + t1061 * t1332;
t1372 = -pkin(2) * t999 - t1391;
t1302 = t1332 * t1488;
t1371 = -t1302 * t1337 + t1340 * t1426;
t1370 = t1302 * t1340 + t1337 * t1426;
t1007 = t1065 * t1334 + t1066 * t1332;
t1369 = -pkin(2) * t1007 - t1392;
t916 = t1332 * t965 + t1334 * t964;
t1368 = -pkin(2) * t916 - t1387;
t903 = t1332 * t939 + t1334 * t938;
t1367 = -pkin(2) * t903 - t1388;
t1108 = t1189 * t1334 + t1190 * t1332;
t1366 = -pkin(2) * t1108 - t1386;
t1365 = pkin(3) * t882 + t1373;
t920 = t1332 * t970 + t1334 * t969;
t1364 = -pkin(2) * t920 - t1385;
t1363 = pkin(2) * t887 - t1332 * t856 - t1334 * t854;
t1362 = pkin(2) * t954 - t1332 * t868 - t1334 * t862;
t1361 = pkin(2) * t989 - t1332 * t878 - t1334 * t874;
t1360 = pkin(2) * t978 - t1332 * t901 - t1334 * t893;
t1359 = pkin(2) * t1002 - t1332 * t880 - t1334 * t876;
t1358 = pkin(2) * t1096 - t1332 * t930 - t1334 * t919;
t1357 = pkin(2) * t1111 - t1332 * t941 - t1334 * t931;
t1356 = pkin(2) * t1125 - t1332 * t944 - t1334 * t932;
t995 = t1056 * t1334 + t1057 * t1332;
t1354 = -pkin(2) * t995 - t1383;
t1353 = pkin(2) * t1228 - t1334 * t1038 - t1332 * t1050;
t1352 = pkin(2) * t1253 - t1334 * t1113 - t1332 * t1154;
t1351 = pkin(2) * t1255 - t1334 * t1135 - t1332 * t1160;
t1350 = -pkin(2) * t1241 + pkin(7) * t1462 - t1334 * t1058;
t865 = t1332 * t883 + t1334 * t882;
t1347 = -pkin(2) * t865 - t1365;
t1314 = t1341 * t1432;
t1313 = t1332 * t1322;
t1312 = -0.2e1 * t1313;
t1307 = t1430 * t1341;
t1305 = t1430 * qJDD(1);
t1301 = t1334 * t1488;
t1300 = t1376 - 0.2e1 * t1470;
t1296 = -t1311 + t1325 + 0.2e1 * t1328;
t1278 = -t1293 + t1481;
t1277 = t1479 - t1481;
t1276 = t1309 * t1432;
t1275 = t1308 * t1432;
t1269 = -t1301 * t1337 + t1322 * t1340;
t1268 = t1301 * t1340 + t1322 * t1337;
t1259 = t1293 - t1479;
t1258 = -pkin(2) * t1426 + t1265;
t1257 = -pkin(2) * t1322 - t1433;
t1244 = t1339 * t1254;
t1242 = pkin(1) * t1286 - qJ(2) * t1280;
t1238 = (t1439 - t1442) * qJD(4);
t1237 = (-t1438 - t1443) * qJD(4);
t1236 = -t1267 + t1479;
t1235 = -t1479 + t1480;
t1226 = -pkin(2) * t1301 + t1248;
t1225 = -pkin(2) * t1302 + t1247;
t1222 = t1267 - t1480;
t1214 = -qJD(4) * t1439 + t1256 * t1339;
t1213 = qJD(4) * t1438 + t1256 * t1336;
t1212 = qJD(4) * t1442 + t1452;
t1211 = qJD(4) * t1443 - t1244;
t1208 = -t1278 * t1336 + t1495;
t1207 = t1277 * t1339 - t1454;
t1205 = t1278 * t1339 + t1496;
t1204 = t1277 * t1336 + t1453;
t1202 = qJ(2) * t1322 + t1301 * t1477 - t1265;
t1201 = (-t1273 + t1328) * t1332 + t1477 * t1302;
t1197 = -t1253 * t1339 - t1255 * t1336;
t1195 = -t1253 * t1336 + t1255 * t1339;
t1193 = -t1216 + t1284;
t1192 = t1215 - t1284;
t1172 = (-t1270 * t1333 + t1271 * t1331) * t1297;
t1171 = (-t1270 * t1331 - t1271 * t1333) * t1297;
t1170 = pkin(2) * t1488 + t1186;
t1169 = -t1237 * t1332 + t1238 * t1334;
t1168 = t1237 * t1334 + t1238 * t1332;
t1167 = t1234 * t1333 - t1271 * t1445;
t1166 = t1234 * t1331 + t1271 * t1444;
t1165 = t1270 * t1444 - t1331 * t1379;
t1164 = -t1270 * t1445 - t1333 * t1379;
t1156 = -qJ(2) * t1488 + t1304 * t1477 - t1185;
t1155 = t1216 - t1215;
t1153 = -t1213 * t1332 + t1214 * t1334;
t1152 = -t1211 * t1332 + t1212 * t1334;
t1151 = t1213 * t1334 + t1214 * t1332;
t1150 = t1211 * t1334 + t1212 * t1332;
t1148 = -t1206 * t1332 + t1209 * t1334;
t1147 = -t1205 * t1332 + t1208 * t1334;
t1146 = -t1204 * t1332 + t1207 * t1334;
t1144 = t1205 * t1334 + t1208 * t1332;
t1143 = t1204 * t1334 + t1207 * t1332;
t1142 = t1172 * t1339 + t1452;
t1141 = t1172 * t1336 - t1244;
t1139 = t1235 * t1333 - t1458;
t1138 = -t1236 * t1331 + t1492;
t1137 = t1235 * t1331 + t1457;
t1136 = t1236 * t1333 + t1493;
t1134 = t1167 * t1339 + t1420;
t1133 = t1165 * t1339 - t1420;
t1132 = t1167 * t1336 - t1419;
t1131 = t1165 * t1336 + t1419;
t1122 = -qJD(6) * t1219 - t1400;
t1119 = (-t1217 * t1338 + t1219 * t1335) * t1285;
t1118 = (-t1217 * t1335 - t1219 * t1338) * t1285;
t1117 = -t1195 * t1332 + t1197 * t1334;
t1116 = -t1194 * t1332 + t1196 * t1334;
t1115 = t1195 * t1334 + t1197 * t1332;
t1110 = -qJ(2) * t1186 + t1476;
t1109 = -t1189 * t1332 + t1190 * t1334;
t1097 = t1176 * t1333 - t1178 * t1331;
t1095 = t1176 * t1331 + t1178 * t1333;
t1093 = -t1186 * t1477 - t1475;
t1092 = -qJ(2) * t1273 - t1185 * t1477;
t1088 = t1139 * t1339 - t1175 * t1336;
t1087 = t1138 * t1339 + t1179 * t1336;
t1086 = t1139 * t1336 + t1175 * t1339;
t1085 = t1138 * t1336 - t1179 * t1339;
t1076 = t1192 * t1338 - t1460;
t1075 = -t1193 * t1335 + t1490;
t1074 = t1192 * t1335 + t1459;
t1073 = t1193 * t1338 + t1491;
t1072 = t1123 * t1338 - t1219 * t1450;
t1071 = t1123 * t1335 + t1219 * t1449;
t1070 = -t1122 * t1335 + t1217 * t1449;
t1069 = t1122 * t1338 + t1217 * t1450;
t1068 = t1097 * t1339 + t1222 * t1336;
t1067 = t1097 * t1336 - t1222 * t1339;
t1054 = -t1141 * t1332 + t1142 * t1334;
t1053 = t1141 * t1334 + t1142 * t1332;
t1047 = -t1132 * t1332 + t1134 * t1334;
t1046 = -t1131 * t1332 + t1133 * t1334;
t1045 = t1132 * t1334 + t1134 * t1332;
t1044 = t1131 * t1334 + t1133 * t1332;
t1042 = -t1118 * t1331 + t1119 * t1333;
t1041 = t1118 * t1333 + t1119 * t1331;
t1033 = t1042 * t1339 + t1246 * t1336;
t1032 = t1042 * t1336 - t1246 * t1339;
t1031 = -qJ(2) * t1116 - t1412;
t1030 = -qJ(2) * t1148 - t1378;
t1029 = t1091 * t1334 - t1462;
t1027 = -t1086 * t1332 + t1088 * t1334;
t1026 = -t1085 * t1332 + t1087 * t1334;
t1025 = t1086 * t1334 + t1088 * t1332;
t1024 = t1085 * t1334 + t1087 * t1332;
t1022 = -t1079 * t1338 - t1335 * t1486;
t1020 = -t1079 * t1335 + t1338 * t1486;
t1019 = -t1074 * t1331 + t1076 * t1333;
t1018 = -t1073 * t1331 + t1075 * t1333;
t1017 = t1074 * t1333 + t1076 * t1331;
t1016 = t1073 * t1333 + t1075 * t1331;
t1015 = -t1071 * t1331 + t1072 * t1333;
t1014 = -t1069 * t1331 + t1070 * t1333;
t1013 = t1071 * t1333 + t1072 * t1331;
t1012 = t1069 * t1333 + t1070 * t1331;
t1010 = -t1067 * t1332 + t1068 * t1334;
t1009 = t1067 * t1334 + t1068 * t1332;
t1008 = -t1065 * t1332 + t1066 * t1334;
t1005 = -qJ(2) * t1109 - t1366;
t1000 = -t1060 * t1332 + t1061 * t1334;
t996 = -t1056 * t1332 + t1057 * t1334;
t994 = -t1148 * t1477 + t1351;
t993 = qJ(2) * t1255 - t1145 * t1477 + t1401;
t987 = t1015 * t1339 + t1422;
t986 = t1014 * t1339 - t1422;
t985 = t1015 * t1336 - t1421;
t984 = t1014 * t1336 + t1421;
t981 = -t1109 * t1477 + t1352;
t980 = qJ(2) * t1253 - t1108 * t1477 + t1402;
t976 = t1019 * t1339 - t1080 * t1336;
t975 = t1018 * t1339 + t1083 * t1336;
t974 = t1019 * t1336 + t1080 * t1339;
t973 = t1018 * t1336 - t1083 * t1339;
t972 = -t1032 * t1332 + t1033 * t1334;
t971 = t1032 * t1334 + t1033 * t1332;
t955 = -t1020 * t1331 + t1022 * t1333;
t953 = t1020 * t1333 + t1022 * t1331;
t948 = -t1116 * t1477 + t1353;
t947 = qJ(2) * t1228 - t1114 * t1477 + t1403;
t946 = t1155 * t1336 + t1339 * t955;
t945 = -t1155 * t1339 + t1336 * t955;
t942 = -qJ(2) * t1029 - t1413;
t936 = -t1332 * t985 + t1334 * t987;
t935 = -t1332 * t984 + t1334 * t986;
t934 = t1332 * t987 + t1334 * t985;
t933 = t1332 * t986 + t1334 * t984;
t927 = -t1029 * t1477 + t1350;
t926 = -qJ(2) * t1241 - t1028 * t1477 + t1374;
t925 = -t1332 * t974 + t1334 * t976;
t924 = -t1332 * t973 + t1334 * t975;
t923 = t1332 * t976 + t1334 * t974;
t922 = t1332 * t975 + t1334 * t973;
t921 = -t1332 * t969 + t1334 * t970;
t918 = -qJ(2) * t1008 - t1369;
t917 = -t1332 * t964 + t1334 * t965;
t915 = -qJ(2) * t1000 - t1372;
t914 = -t1332 * t959 + t1334 * t960;
t906 = -t1332 * t945 + t1334 * t946;
t905 = t1332 * t946 + t1334 * t945;
t904 = -t1332 * t938 + t1334 * t939;
t902 = -qJ(2) * t996 - t1354;
t892 = -t1008 * t1477 + t1356;
t891 = qJ(2) * t1125 - t1007 * t1477 + t1404;
t890 = -t1000 * t1477 + t1357;
t889 = qJ(2) * t1111 - t1477 * t999 + t1405;
t885 = -t1477 * t996 + t1358;
t884 = qJ(2) * t1096 - t1477 * t995 + t1406;
t875 = -qJ(2) * t914 - t1384;
t873 = -qJ(2) * t921 - t1364;
t870 = -qJ(2) * t917 - t1368;
t866 = -t1332 * t882 + t1334 * t883;
t864 = -t1477 * t914 + t1360;
t863 = qJ(2) * t978 - t1477 * t913 + t1407;
t861 = -qJ(2) * t904 - t1367;
t860 = -t1477 * t921 + t1359;
t859 = qJ(2) * t1002 - t1477 * t920 + t1408;
t858 = -t1477 * t917 + t1361;
t857 = qJ(2) * t989 - t1477 * t916 + t1409;
t853 = -t1477 * t904 + t1362;
t852 = qJ(2) * t954 - t1477 * t903 + t1410;
t851 = -qJ(2) * t866 - t1347;
t850 = -t1477 * t866 + t1363;
t849 = qJ(2) * t887 - t1477 * t865 + t1411;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1308, 0, -t1309, 0, -t1390, -t1389, -t1381, -pkin(6) * t1381, 0, -t1308, t1309, 0, 0, 0, t1382, t1390, t1389, pkin(6) * t1382 + (-pkin(1) * t1337 + qJ(2) * t1340) * g(3), t1276, -t1305 * t1337 - t1307 * t1340, t1269, -t1276, -t1371, 0, -pkin(6) * t1370 + t1340 * t1225 + t1337 * t1258, -pkin(6) * t1268 + t1226 * t1340 + t1257 * t1337, -pkin(2) * t1436 + t1337 * t1170 - pkin(6) * (-t1337 * t1488 + t1436), t1340 * t1110 - t1337 * t1093 - pkin(6) * (-t1185 * t1340 - t1273 * t1337), t1151 * t1337 + t1417, t1115 * t1337 + t1259 * t1340, t1144 * t1337 + t1295 * t1340, t1150 * t1337 - t1417, t1143 * t1337 - t1340 * t1484, qJDD(4) * t1340 + t1168 * t1337, t1340 * t1005 - t1337 * t981 - pkin(6) * (-t1108 * t1340 + t1253 * t1337), t1340 * t1030 - t1337 * t994 - pkin(6) * (-t1145 * t1340 + t1255 * t1337), t1340 * t1031 - t1337 * t948 - pkin(6) * (-t1114 * t1340 + t1228 * t1337), t1340 * t942 - t1337 * t927 - pkin(6) * (-t1028 * t1340 - t1241 * t1337), t1045 * t1337 + t1166 * t1340, t1009 * t1337 + t1095 * t1340, t1024 * t1337 + t1136 * t1340, t1044 * t1337 - t1164 * t1340, t1025 * t1337 + t1137 * t1340, t1053 * t1337 + t1171 * t1340, t1340 * t915 - t1337 * t890 - pkin(6) * (t1111 * t1337 - t1340 * t999), t1340 * t918 - t1337 * t892 - pkin(6) * (-t1007 * t1340 + t1125 * t1337), t1340 * t902 - t1337 * t885 - pkin(6) * (t1096 * t1337 - t1340 * t995), t1340 * t875 - t1337 * t864 - pkin(6) * (t1337 * t978 - t1340 * t913), t1013 * t1340 + t1337 * t934, t1337 * t905 + t1340 * t953, t1016 * t1340 + t1337 * t922, t1012 * t1340 + t1337 * t933, t1017 * t1340 + t1337 * t923, t1041 * t1340 + t1337 * t971, t1340 * t870 - t1337 * t858 - pkin(6) * (t1337 * t989 - t1340 * t916), t1340 * t873 - t1337 * t860 - pkin(6) * (t1002 * t1337 - t1340 * t920), t1340 * t861 - t1337 * t853 - pkin(6) * (t1337 * t954 - t1340 * t903), t1340 * t851 - t1337 * t850 - pkin(6) * (t1337 * t887 - t1340 * t865); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1309, 0, t1308, 0, t1389, -t1390, t1397, pkin(6) * t1397, 0, -t1309, -t1308, 0, 0, 0, t1398, -t1389, t1390, pkin(6) * t1398 + (pkin(1) * t1340 + qJ(2) * t1337) * g(3), -t1275, t1305 * t1340 - t1307 * t1337, t1268, t1275, -t1370, 0, pkin(6) * t1371 + t1337 * t1225 - t1340 * t1258, pkin(6) * t1269 + t1226 * t1337 - t1257 * t1340, -pkin(2) * t1437 - t1340 * t1170 + pkin(6) * (-t1340 * t1488 - t1437), t1337 * t1110 + t1340 * t1093 + pkin(6) * (t1185 * t1337 - t1273 * t1340), -t1151 * t1340 + t1418, -t1115 * t1340 + t1259 * t1337, -t1144 * t1340 + t1295 * t1337, -t1150 * t1340 - t1418, -t1143 * t1340 - t1337 * t1484, qJDD(4) * t1337 - t1168 * t1340, t1337 * t1005 + t1340 * t981 + pkin(6) * (t1108 * t1337 + t1253 * t1340), t1337 * t1030 + t1340 * t994 + pkin(6) * (t1145 * t1337 + t1255 * t1340), t1337 * t1031 + t1340 * t948 + pkin(6) * (t1114 * t1337 + t1228 * t1340), t1337 * t942 + t1340 * t927 + pkin(6) * (t1028 * t1337 - t1241 * t1340), -t1045 * t1340 + t1166 * t1337, -t1009 * t1340 + t1095 * t1337, -t1024 * t1340 + t1136 * t1337, -t1044 * t1340 - t1164 * t1337, -t1025 * t1340 + t1137 * t1337, -t1053 * t1340 + t1171 * t1337, t1337 * t915 + t1340 * t890 + pkin(6) * (t1111 * t1340 + t1337 * t999), t1337 * t918 + t1340 * t892 + pkin(6) * (t1007 * t1337 + t1125 * t1340), t1337 * t902 + t1340 * t885 + pkin(6) * (t1096 * t1340 + t1337 * t995), t1337 * t875 + t1340 * t864 + pkin(6) * (t1337 * t913 + t1340 * t978), t1013 * t1337 - t1340 * t934, t1337 * t953 - t1340 * t905, t1016 * t1337 - t1340 * t922, t1012 * t1337 - t1340 * t933, t1017 * t1337 - t1340 * t923, t1041 * t1337 - t1340 * t971, t1337 * t870 + t1340 * t858 + pkin(6) * (t1337 * t916 + t1340 * t989), t1337 * t873 + t1340 * t860 + pkin(6) * (t1002 * t1340 + t1337 * t920), t1337 * t861 + t1340 * t853 + pkin(6) * (t1337 * t903 + t1340 * t954), t1337 * t851 + t1340 * t850 + pkin(6) * (t1337 * t865 + t1340 * t887); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1310, t1311, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1300, t1296, t1242, t1427, t1312, 0, t1428, 0, 0, t1201, t1202, t1156, t1092, t1153, t1117, t1147, t1152, t1146, t1169, t980, t993, t947, t926, t1047, t1010, t1026, t1046, t1027, t1054, t889, t891, t884, t863, t936, t906, t924, t935, t925, t972, t857, t859, t852, t849; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1341, 0, 0, -g(3), -t1310, 0, 0, -qJDD(1), t1341, 0, 0, 0, -t1286, 0, g(3), qJ(2) * g(3), t1314, -t1307, t1322, -t1314, -t1426, 0, t1225, t1226, -t1474, t1110, t1440, t1259, t1295, -t1440, -t1484, qJDD(4), t1005, t1030, t1031, t942, t1166, t1095, t1136, -t1164, t1137, t1171, t915, t918, t902, t875, t1013, t953, t1016, t1012, t1017, t1041, t870, t873, t861, t851; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, 0, qJDD(1), 0, g(3), 0, -t1311, 0, 0, -t1341, -qJDD(1), 0, 0, 0, -t1280, -g(3), 0, pkin(1) * g(3), -t1313, t1305, t1301, t1313, -t1302, 0, -t1258, -t1257, -t1170, t1093, -t1151, -t1115, -t1144, -t1150, -t1143, -t1168, t981, t994, t948, t927, -t1045, -t1009, -t1024, -t1044, -t1025, -t1053, t890, t892, t885, t864, -t934, -t905, -t922, -t933, -t923, -t971, t858, t860, t853, t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1310, t1311, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1300, t1296, t1242, t1427, t1312, 0, t1428, 0, 0, t1201, t1202, t1156, t1092, t1153, t1117, t1147, t1152, t1146, t1169, t980, t993, t947, t926, t1047, t1010, t1026, t1046, t1027, t1054, t889, t891, t884, t863, t936, t906, t924, t935, t925, t972, t857, t859, t852, t849; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1286, -t1280, 0, t1427, t1312, 0, t1428, 0, 0, qJ(3) * t1302 - t1433, qJ(3) * t1301 - t1265, qJ(3) * t1304 - t1185, -qJ(3) * t1185, t1153, t1117, t1147, t1152, t1146, t1169, -qJ(3) * t1108 + t1402, -qJ(3) * t1145 + t1401, -qJ(3) * t1114 + t1403, -qJ(3) * t1028 + t1374, t1047, t1010, t1026, t1046, t1027, t1054, -qJ(3) * t999 + t1405, -qJ(3) * t1007 + t1404, -qJ(3) * t995 + t1406, -qJ(3) * t913 + t1407, t936, t906, t924, t935, t925, t972, -qJ(3) * t916 + t1409, -qJ(3) * t920 + t1408, -qJ(3) * t903 + t1410, -qJ(3) * t865 + t1411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1341, 0, 0, 0, t1286, 0, -g(3), 0, -t1314, t1307, -t1322, t1314, t1426, 0, -t1225, -t1226, t1474, -t1476, -t1440, -t1259, -t1295, t1440, t1484, -qJDD(4), t1366, t1378, t1412, t1413, -t1166, -t1095, -t1136, t1164, -t1137, -t1171, t1372, t1369, t1354, t1384, -t1013, -t953, -t1016, -t1012, -t1017, -t1041, t1368, t1364, t1367, t1347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, qJDD(1), 0, 0, 0, t1280, g(3), 0, 0, t1313, -t1305, -t1301, -t1313, t1302, 0, t1258, t1257, t1170, qJ(3) * t1186 + t1475, t1151, t1115, t1144, t1150, t1143, t1168, qJ(3) * t1109 - t1352, qJ(3) * t1148 - t1351, qJ(3) * t1116 - t1353, qJ(3) * t1029 - t1350, t1045, t1009, t1024, t1044, t1025, t1053, qJ(3) * t1000 - t1357, qJ(3) * t1008 - t1356, qJ(3) * t996 - t1358, qJ(3) * t914 - t1360, t934, t905, t922, t933, t923, t971, qJ(3) * t917 - t1361, qJ(3) * t921 - t1359, qJ(3) * t904 - t1362, qJ(3) * t866 - t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1322, -t1426, -t1314, 0, t1435, 0, 0, -t1273, -t1247, 0, t1214, t1197, t1208, t1212, t1207, t1238, t1154, t1160, t1050, -pkin(7) * t1090, t1134, t1068, t1087, t1133, t1088, t1142, t941, t944, t930, t901, t987, t946, t975, t986, t976, t1033, t878, t880, t868, t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1322, -t1327 * t1341, -t1426, t1314, 0, t1273, 0, -t1248, 0, t1213, t1195, t1205, t1211, t1204, t1237, t1113, t1135, t1038, t1058, t1132, t1067, t1085, t1131, t1086, t1141, t931, t932, t919, t893, t985, t945, t973, t984, t974, t1032, t874, t876, t862, t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1314, -t1307, t1322, -t1314, -t1426, 0, t1247, t1248, 0, 0, t1440, t1259, t1295, -t1440, -t1484, qJDD(4), t1386, t1414, t1191, t1089, t1166, t1095, t1136, -t1164, t1137, t1171, t1391, t1392, t1383, t1424, t1013, t953, t1016, t1012, t1017, t1041, t1387, t1385, t1388, t1365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, -t1253, t1494, t1448, t1277, -t1448, 0, -t1241, t1161, 0, t1167, t1097, t1138, t1165, t1139, t1172, t1039, t1040, t957, -qJ(5) * t978, t1015, t955, t1018, t1014, t1019, t1042, t907, t911, t871, t869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1441, t1255, t1278, -t1254, t1251, -t1441, t1241, 0, t1162, 0, -t1224, -t1222, -t1179, t1224, t1175, -t1254, t1004, t1006, -pkin(4) * t1096, -pkin(4) * t978, -t1157, -t1155, -t1083, t1157, t1080, -t1246, t910, t912, t928, t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1440, t1259, t1295, -t1440, -t1484, qJDD(4), -t1161, -t1162, 0, 0, t1166, t1095, t1136, -t1164, t1137, t1171, t1415, t1416, t1393, t1467, t1013, t953, t1016, t1012, t1017, t1041, t1395, t1394, t1396, t1373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, t1176, t1485, t1447, t1235, -t1447, 0, t1105, t1036, 0, t1072, t1022, t1075, t1070, t1076, t1119, t983, t992, t897, -pkin(8) * t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1446, t1178, t1236, t1379, t1182, -t1446, -t1105, 0, t1037, 0, t1071, t1020, t1073, t1069, t1074, t1118, t962, t967, t895, t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1224, t1222, t1179, -t1224, -t1175, t1254, -t1036, -t1037, 0, 0, t1157, t1155, t1083, -t1157, -t1080, t1246, t1375, t1355, t1472, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1123, -t1079, t1487, t1198, t1192, -t1198, 0, t1048, t950, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, t1486, t1193, t1122, t1128, -t1451, -t1048, 0, t951, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1157, t1155, t1083, -t1157, -t1080, t1246, -t950, -t951, 0, 0;];
m_new_reg  = t1;
