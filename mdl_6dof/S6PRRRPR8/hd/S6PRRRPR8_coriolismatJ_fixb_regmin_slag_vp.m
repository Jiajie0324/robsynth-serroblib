% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:53:25
% EndTime: 2019-03-08 23:54:06
% DurationCPUTime: 25.08s
% Computational Cost: add. (10117->932), mult. (28105->1322), div. (0->0), fcn. (30984->12), ass. (0->681)
t557 = sin(qJ(4));
t561 = cos(qJ(4));
t555 = sin(pkin(7));
t558 = sin(qJ(3));
t890 = t555 * t558;
t939 = cos(pkin(7));
t471 = t557 * t939 + t561 * t890;
t960 = t471 / 0.2e1;
t562 = cos(qJ(3));
t559 = sin(qJ(2));
t938 = sin(pkin(6));
t742 = t559 * t938;
t716 = t558 * t742;
t701 = t939 * t938;
t940 = cos(pkin(6));
t944 = cos(qJ(2));
t989 = t940 * t555 + t944 * t701;
t382 = -t562 * t989 + t716;
t196 = t382 * t557;
t714 = t562 * t742;
t383 = t558 * t989 + t714;
t713 = t938 * t944;
t571 = -t555 * t713 + t939 * t940;
t254 = t383 * t561 + t557 * t571;
t249 = t254 * qJD(4);
t856 = -t196 * qJD(3) + t249;
t717 = t555 * t742;
t655 = -t717 / 0.2e1;
t649 = t559 * t701;
t616 = t558 * t649;
t433 = t562 * t713 - t616;
t905 = t433 * t557;
t855 = t905 / 0.2e1 + t561 * t655;
t889 = t555 * t562;
t762 = -t889 / 0.2e1;
t917 = t382 * t471;
t771 = -t917 / 0.2e1;
t993 = t254 * t762 + t771;
t997 = t993 + t855;
t999 = qJD(2) * t997 + t856;
t545 = t561 * t939;
t469 = t557 * t890 - t545;
t975 = pkin(4) + pkin(11);
t998 = t469 * t975;
t877 = t557 * t469;
t897 = t471 * t561;
t329 = -t877 / 0.2e1 + t897 / 0.2e1;
t839 = qJD(2) * t471;
t365 = t469 * t839;
t991 = -t329 * qJD(3) + t365;
t807 = t561 * qJD(3);
t537 = t557 * t807;
t984 = t329 * qJD(2) + t537;
t878 = t557 * qJ(5);
t941 = t561 * pkin(4);
t700 = -t878 - t941;
t509 = -pkin(3) + t700;
t797 = pkin(2) * t939;
t477 = pkin(9) * t890 - t562 * t797;
t452 = -pkin(3) * t939 + t477;
t899 = t471 * qJ(5);
t573 = t452 - t899;
t942 = t469 * pkin(4);
t251 = t573 + t942;
t934 = t251 * t557;
t986 = t509 * t960 + t934 / 0.2e1;
t996 = t561 * t975 + t878;
t556 = sin(qJ(6));
t977 = t471 ^ 2;
t995 = t556 * t977;
t560 = cos(qJ(6));
t994 = t560 * t977;
t304 = t329 * qJD(4);
t833 = qJD(3) * t562;
t785 = t555 * t833;
t516 = t561 * t785;
t992 = t557 * t516 + t304;
t569 = t571 * t555;
t653 = -t713 / 0.2e1;
t990 = t569 / 0.2e1 + t653;
t761 = t889 / 0.2e1;
t722 = t561 * t761;
t723 = t561 * t762;
t988 = (t722 + t723) * t382;
t875 = t557 * t562;
t754 = t875 / 0.2e1;
t724 = t555 * t754;
t755 = -t875 / 0.2e1;
t725 = t555 * t755;
t987 = (t724 + t725) * t382;
t763 = t890 / 0.2e1;
t465 = t557 * t763 - t545 / 0.2e1;
t985 = -qJD(6) * t465 - t991;
t806 = t561 * qJD(6);
t983 = t806 / 0.2e1 + t984;
t666 = t557 * t717;
t904 = t433 * t561;
t340 = t666 + t904;
t615 = t562 * t649;
t432 = t558 * t713 + t615;
t982 = qJD(2) * (t340 * t889 + t432 * t471);
t715 = t561 * t742;
t339 = -t555 * t715 + t905;
t981 = qJD(2) * (t339 * t889 + t432 * t469);
t550 = t556 ^ 2;
t552 = t560 ^ 2;
t532 = t550 - t552;
t736 = qJD(4) * t532;
t823 = qJD(5) * t561;
t980 = qJD(4) * t996 - t823;
t479 = pkin(9) * t889 + t558 * t797;
t453 = pkin(10) * t939 + t479;
t943 = pkin(10) * t558;
t710 = -pkin(3) * t562 - t943;
t454 = (-pkin(2) + t710) * t555;
t294 = t453 * t557 - t561 * t454;
t295 = t453 * t561 + t454 * t557;
t256 = pkin(4) * t889 + t294;
t926 = t256 * t561;
t531 = qJ(5) * t889;
t255 = t295 - t531;
t927 = t255 * t557;
t947 = -t561 / 0.2e1;
t948 = t557 / 0.2e1;
t979 = t294 * t947 + t295 * t948 + t926 / 0.2e1 - t927 / 0.2e1;
t648 = pkin(5) * t471 + t294;
t215 = -pkin(5) * t469 + t295;
t187 = t215 - t531;
t973 = t187 / 0.2e1;
t748 = t973 - t215 / 0.2e1;
t978 = -t557 * t748 - t561 * (-t975 * t761 + t648 / 0.2e1);
t974 = pkin(5) + pkin(10);
t874 = t558 * qJ(5);
t801 = t555 * t874;
t478 = (pkin(3) * t558 - pkin(10) * t562) * t555;
t462 = t557 * t478;
t463 = t561 * t477;
t852 = t462 - t463;
t297 = -t801 - t852;
t972 = -t297 / 0.2e1;
t971 = -t340 / 0.2e1;
t270 = t556 * t889;
t867 = t560 * t469;
t386 = t270 + t867;
t970 = -t386 / 0.2e1;
t969 = t386 / 0.2e1;
t799 = t560 * t889;
t883 = t556 * t469;
t387 = t799 - t883;
t968 = -t387 / 0.2e1;
t967 = t387 / 0.2e1;
t504 = t557 * t799;
t436 = t556 * t890 - t504;
t966 = t436 / 0.2e1;
t864 = t560 * t558;
t437 = (t556 * t875 + t864) * t555;
t965 = t437 / 0.2e1;
t461 = t557 * t477;
t964 = -t461 / 0.2e1;
t963 = -t469 / 0.2e1;
t962 = t469 / 0.2e1;
t961 = -t471 / 0.2e1;
t548 = pkin(4) * t557;
t936 = qJ(5) * t561;
t699 = pkin(11) * t557 - t936;
t483 = t548 + t699;
t959 = t483 / 0.2e1;
t503 = t561 * t270;
t958 = -t503 / 0.2e1;
t957 = t504 / 0.2e1;
t956 = -t509 / 0.2e1;
t521 = t548 - t936;
t955 = -t521 / 0.2e1;
t954 = t521 / 0.2e1;
t523 = t974 * t557;
t953 = -t523 / 0.2e1;
t524 = t974 * t561;
t952 = t524 / 0.2e1;
t541 = pkin(4) * t890;
t951 = -t541 / 0.2e1;
t950 = -t556 / 0.2e1;
t949 = -t557 / 0.2e1;
t946 = t561 / 0.2e1;
t945 = t975 / 0.2e1;
t937 = qJ(5) * t469;
t935 = t251 * t471;
t933 = t251 * t561;
t252 = (-pkin(5) * t875 + t874) * t555 + t852;
t932 = t252 * t556;
t931 = t252 * t560;
t253 = t383 * t557 - t561 * t571;
t930 = t253 * t556;
t929 = t253 * t560;
t928 = t254 * t561;
t746 = t294 / 0.2e1 - t256 / 0.2e1;
t747 = t255 / 0.2e1 - t295 / 0.2e1;
t31 = (pkin(4) * t762 + t746) * t561 + (qJ(5) * t762 + t747) * t557;
t925 = t31 * qJD(2);
t924 = t339 * t556;
t923 = t339 * t557;
t922 = t339 * t560;
t921 = t340 * t556;
t920 = t340 * t560;
t919 = t340 * t561;
t35 = (-t255 + t295) * t471 + (-t256 + t294) * t469;
t918 = t35 * qJD(2);
t916 = t382 * t556;
t915 = t382 * t560;
t914 = t383 * t556;
t913 = t383 * t560;
t912 = t387 * t556;
t911 = t387 * t557;
t910 = t432 * t509;
t909 = t432 * t556;
t908 = t432 * t557;
t907 = t432 * t560;
t906 = t432 * t561;
t903 = t437 * t560;
t45 = (-t253 * t557 + t383 - t928) * t382;
t902 = t45 * qJD(1);
t901 = t452 * t561;
t46 = t253 * t339 + t254 * t340 + t382 * t432;
t900 = t46 * qJD(1);
t898 = t471 * t557;
t895 = t521 * t469;
t894 = t524 * t556;
t500 = t524 * t560;
t549 = t555 ^ 2;
t554 = t562 ^ 2;
t893 = t549 * t554;
t892 = t549 * t558;
t553 = t561 ^ 2;
t891 = t553 * t556;
t888 = t556 * t215;
t861 = t561 * t478;
t738 = t461 + t861;
t301 = -t541 - t738;
t860 = t561 * t562;
t230 = (pkin(5) * t860 - pkin(11) * t558) * t555 + t301;
t887 = t556 * t230;
t257 = t471 * t975 + t937;
t886 = t556 * t257;
t802 = t555 * t875;
t798 = pkin(4) * t802 + t479;
t298 = t699 * t889 + t798;
t885 = t556 * t298;
t884 = t556 * t386;
t327 = t556 * t471;
t882 = t556 * t483;
t881 = t556 * t523;
t880 = t556 * t557;
t879 = t556 * t561;
t876 = t557 * t560;
t873 = t560 * t215;
t872 = t560 * t230;
t871 = t560 * t257;
t870 = t560 * t298;
t869 = t560 * t386;
t868 = t560 * t387;
t866 = t560 * t483;
t865 = t560 * t523;
t863 = t560 * t561;
t862 = t561 * t469;
t413 = t863 * t327;
t769 = -t911 / 0.2e1;
t770 = t386 * t948;
t95 = -t413 + (t769 + t966) * t560 + (t770 + t965) * t556;
t859 = t95 * qJD(2);
t857 = t187 - t215;
t854 = t904 / 0.2e1 + t666 / 0.2e1;
t853 = -t904 / 0.2e1 + t557 * t655;
t551 = t557 ^ 2;
t533 = t553 - t551;
t767 = -t897 / 0.2e1;
t595 = t550 * t767 + t556 * t769;
t152 = -t903 / 0.2e1 + t595;
t851 = qJD(2) * t152;
t764 = -t890 / 0.2e1;
t625 = t764 + t767;
t162 = t556 * t625 + t769 + t957;
t850 = qJD(2) * t162;
t594 = (t864 / 0.2e1 + t556 * t754) * t555;
t752 = -t863 / 0.2e1;
t608 = t471 * t752 + t770;
t164 = t594 - t608;
t849 = qJD(2) * t164;
t192 = -t386 * t889 - t995;
t848 = qJD(2) * t192;
t208 = t387 * t469 + t995;
t847 = qJD(2) * t208;
t209 = -t386 * t469 + t994;
t846 = qJD(2) * t209;
t430 = t471 * t880;
t759 = t880 / 0.2e1;
t296 = t430 / 0.2e1 + t471 * t759;
t248 = t561 * t799 - t296;
t845 = qJD(2) * t248;
t250 = t387 * t889 + t994;
t844 = qJD(2) * t250;
t431 = t471 * t876;
t363 = -t503 - t431;
t843 = qJD(2) * t363;
t376 = -t469 * t890 + t557 * t893;
t842 = qJD(2) * t376;
t377 = -t471 * t890 + t561 * t893;
t841 = qJD(2) * t377;
t840 = qJD(2) * t387;
t838 = qJD(2) * t562;
t837 = qJD(3) * t551;
t836 = qJD(3) * t555;
t835 = qJD(3) * t557;
t834 = qJD(3) * t560;
t832 = qJD(4) * t294;
t831 = qJD(4) * t295;
t830 = qJD(4) * t556;
t829 = qJD(4) * t557;
t828 = qJD(4) * t560;
t827 = qJD(4) * t561;
t826 = qJD(5) * t556;
t825 = qJD(5) * t557;
t824 = qJD(5) * t560;
t822 = qJD(6) * t471;
t821 = qJD(6) * t556;
t820 = qJD(6) * t557;
t819 = qJD(6) * t560;
t818 = qJD(6) * t975;
t117 = t386 * t437 + t387 * t436;
t817 = t117 * qJD(2);
t121 = -t868 + t884;
t128 = t121 * t471;
t816 = t128 * qJD(2);
t800 = t555 * t860;
t168 = t386 * t800 - t436 * t471;
t815 = t168 * qJD(2);
t169 = -t387 * t800 + t437 * t471;
t814 = t169 * qJD(2);
t234 = -t862 - t898;
t265 = t234 * t889;
t813 = t265 * qJD(2);
t464 = t469 * qJD(4);
t810 = t469 * qJD(5);
t484 = (-t558 ^ 2 + t554) * t549;
t809 = t484 * qJD(2);
t808 = t555 * qJD(4);
t805 = pkin(10) * t829;
t804 = t294 * t889;
t803 = t295 * t889;
t796 = t556 * t839;
t795 = t555 * t838;
t794 = t556 * t807;
t793 = t560 * t807;
t792 = t562 * t808;
t791 = t556 * t828;
t790 = t556 * t827;
t789 = qJD(5) * t889;
t788 = t557 * t806;
t787 = t549 * t838;
t786 = t558 * t836;
t538 = t557 * t827;
t784 = t471 * t825;
t540 = t560 * t827;
t783 = t556 * t819;
t539 = t557 * t834;
t782 = qJ(5) * t969;
t781 = qJ(5) * t968;
t780 = qJ(5) * t965;
t779 = -t936 / 0.2e1;
t773 = t921 / 0.2e1;
t772 = -t920 / 0.2e1;
t768 = -t905 / 0.2e1;
t765 = t471 * t952;
t760 = -t887 / 0.2e1;
t758 = -t879 / 0.2e1;
t757 = t879 / 0.2e1;
t756 = -t876 / 0.2e1;
t753 = t872 / 0.2e1;
t751 = t863 / 0.2e1;
t750 = t862 / 0.2e1;
t749 = t471 * t945;
t745 = t462 / 0.2e1 - t463 / 0.2e1;
t744 = t382 * t939;
t743 = t383 * t939;
t740 = (-t551 - t553) * t382;
t739 = t939 * qJD(2);
t737 = t500 - t882;
t440 = t877 / 0.2e1;
t292 = t440 + t625;
t735 = qJD(2) * t292 - t537;
t536 = t556 * t835;
t734 = qJD(2) * t327 + t536;
t732 = qJD(6) + t839;
t731 = qJD(6) + t835;
t730 = t469 * t795;
t729 = t556 * t540;
t728 = t833 * t892;
t727 = t558 * t787;
t726 = t556 * t793;
t515 = t561 * t795;
t721 = t560 * t761;
t719 = t254 * t761 + t917 / 0.2e1;
t712 = t555 * t739;
t711 = t939 * t836;
t709 = 0.2e1 * t726;
t708 = -t298 / 0.2e1 + t187 * t946;
t707 = -t383 / 0.2e1 + t928 / 0.2e1;
t706 = t461 / 0.2e1 + t861 / 0.2e1;
t129 = t916 - t929;
t705 = t916 / 0.2e1 - t129 / 0.2e1;
t130 = t915 + t930;
t704 = -t915 / 0.2e1 + t130 / 0.2e1;
t703 = t749 + t257 / 0.2e1;
t702 = t560 * t839 + t539;
t517 = -qJD(4) + t795;
t351 = pkin(4) * t471 + t937;
t27 = t251 * t351 - t255 * t294 + t256 * t295;
t568 = -t747 * t253 - t746 * t254 + t382 * t351 / 0.2e1;
t644 = t339 * pkin(4) / 0.2e1 + qJ(5) * t971;
t7 = t568 + t644;
t698 = t7 * qJD(1) + t27 * qJD(2);
t362 = -t531 * t561 + t798;
t29 = t251 * t362 - t255 * t297 + t256 * t301;
t565 = (t362 / 0.2e1 + t255 * t947 + t256 * t949) * t382 + t253 * t301 / 0.2e1 + t254 * t972 + t383 * t251 / 0.2e1;
t627 = -t923 / 0.2e1 - t919 / 0.2e1;
t6 = -t910 / 0.2e1 + t627 * pkin(10) + t565;
t697 = t6 * qJD(1) + t29 * qJD(2);
t635 = t129 * t962 + t253 * t969;
t48 = -t921 / 0.2e1 + t635;
t179 = t573 + t998;
t574 = t889 * t975 + t648;
t80 = t179 * t556 - t560 * t574;
t9 = t648 * t386 + t80 * t469 + (-t560 * t857 - t886) * t471;
t696 = t48 * qJD(1) + t9 * qJD(2);
t691 = t561 * t721;
t690 = t899 - t998;
t81 = t560 * t179 + t556 * t574;
t10 = t648 * t387 + t81 * t469 + (t556 * t857 - t871) * t471;
t633 = t130 * t962 + t253 * t967;
t24 = t772 + t633;
t688 = t24 * qJD(1) + t10 * qJD(2);
t103 = t872 - t885;
t11 = t103 * t471 + t187 * t436 - t252 * t386 - t80 * t800;
t607 = t129 * t762 + t382 * t969;
t674 = -t909 + t922;
t618 = t674 * t557;
t188 = -t382 * t876 - t914;
t631 = t188 * t960 + t254 * t966;
t14 = -t618 / 0.2e1 + (t772 + t607) * t561 + t631;
t687 = t14 * qJD(1) + t11 * qJD(2);
t104 = t870 + t887;
t12 = -t104 * t471 + t187 * t437 - t252 * t387 - t800 * t81;
t606 = t130 * t762 + t382 * t967;
t673 = t907 + t924;
t617 = t673 * t557;
t189 = -t382 * t880 + t913;
t630 = t189 * t961 + t254 * t965;
t15 = t617 / 0.2e1 + (t773 + t606) * t561 + t630;
t686 = t15 * qJD(1) + t12 * qJD(2);
t611 = t253 * t761 + t382 * t962;
t25 = (t971 + t611) * t561 + (-t339 / 0.2e1 + t993) * t557;
t44 = t297 * t469 + t301 * t471 + (t926 - t927) * t889;
t685 = t25 * qJD(1) + t44 * qJD(2);
t33 = t187 * t386 + t471 * t80;
t628 = -t924 / 0.2e1 - t907 / 0.2e1;
t634 = t129 * t960 + t254 * t969;
t37 = t628 - t634;
t684 = -qJD(1) * t37 + qJD(2) * t33;
t34 = -t187 * t387 - t471 * t81;
t626 = t922 / 0.2e1 - t909 / 0.2e1;
t632 = t130 * t961 + t254 * t968;
t36 = t626 - t632;
t683 = qJD(1) * t36 - qJD(2) * t34;
t55 = -t362 * t471 + (t255 * t558 + (t297 - t933) * t562) * t555;
t398 = t908 / 0.2e1;
t609 = t254 * t764 + t383 * t960;
t581 = -t609 + t988;
t64 = t398 + t581;
t682 = t64 * qJD(1) + t55 * qJD(2);
t56 = -t362 * t469 + (t256 * t558 + (-t301 - t934) * t562) * t555;
t402 = -t906 / 0.2e1;
t610 = t253 * t764 + t383 * t962;
t583 = -t610 + t987;
t63 = t402 + t583;
t681 = t63 * qJD(1) + t56 * qJD(2);
t401 = t906 / 0.2e1;
t584 = t610 + t987;
t58 = t401 + t584;
t82 = t294 * t890 - t452 * t802 - t479 * t469 + t738 * t889;
t680 = t58 * qJD(1) - t82 * qJD(2);
t399 = -t908 / 0.2e1;
t582 = t609 + t988;
t61 = t399 + t582;
t83 = t479 * t471 + (-t295 * t558 + (t852 + t901) * t562) * t555;
t679 = t61 * qJD(1) + t83 * qJD(2);
t74 = -t351 * t469 - t803 - t935;
t654 = t715 / 0.2e1;
t91 = t771 + t768 + (-t254 * t562 / 0.2e1 + t654) * t555;
t678 = -qJD(1) * t91 - qJD(2) * t74;
t75 = t251 * t469 - t351 * t471 + t804;
t89 = t611 + t853;
t677 = -qJD(1) * t89 - qJD(2) * t75;
t580 = t555 * t654 + t768;
t93 = t580 + t993;
t98 = -t255 * t889 - t935;
t676 = qJD(1) * t93 + qJD(2) * t98;
t675 = -t297 * t561 + t301 * t557;
t672 = t866 + t894;
t671 = t739 + qJD(3);
t139 = -t452 * t469 - t804;
t84 = -t611 + t854;
t670 = -qJD(1) * t84 - qJD(2) * t139;
t140 = -t452 * t471 - t803;
t86 = t719 + t855;
t669 = -qJD(1) * t86 + qJD(2) * t140;
t393 = t509 * t561 + t521 * t557;
t570 = t933 / 0.2e1 + t351 * t948 + t469 * t956 + t471 * t954;
t66 = (pkin(10) * t755 + t874) * t555 + t570 + t745;
t668 = qJD(2) * t66 + qJD(3) * t393;
t394 = -t509 * t557 + t521 * t561;
t665 = pkin(10) * t761 - t478 / 0.2e1;
t68 = -t541 + t964 + t895 / 0.2e1 + (-t351 / 0.2e1 + t665) * t561 + t986;
t667 = qJD(2) * t68 - qJD(3) * t394;
t564 = t653 - t569 / 0.2e1;
t597 = -t615 / 0.2e1;
t153 = t597 + t743 / 0.2e1 + t564 * t558;
t396 = -pkin(2) * t892 - t479 * t939;
t664 = qJD(1) * t153 - qJD(2) * t396;
t598 = t616 / 0.2e1;
t154 = t598 - t744 / 0.2e1 + t564 * t562;
t395 = t549 * pkin(2) * t562 - t477 * t939;
t663 = qJD(1) * t154 + qJD(2) * t395;
t135 = t958 - t431 + (-t867 / 0.2e1 + t970) * t561;
t498 = t533 * t560;
t662 = -qJD(2) * t135 - qJD(3) * t498;
t136 = -t430 + (t721 - t883 / 0.2e1 + t967) * t561;
t496 = t533 * t556;
t661 = -qJD(2) * t136 - qJD(3) * t496;
t268 = t469 ^ 2 - t977;
t660 = qJD(2) * t268 + qJD(3) * t234;
t659 = qJD(2) * t234 + qJD(3) * t533;
t658 = qJD(2) * t270 - t830;
t198 = t382 * t561;
t657 = qJD(3) * t198 + qJD(4) * t253;
t656 = -t820 - t837;
t651 = -t464 + t730;
t650 = t516 - t730;
t647 = pkin(3) * t961 + t452 * t948;
t646 = t779 + t548 / 0.2e1;
t645 = qJ(5) * t972 - t301 * pkin(4) / 0.2e1;
t643 = t465 * qJD(2) - t807 / 0.2e1;
t642 = t555 * t710;
t572 = pkin(3) * t962 + t901 / 0.2e1 + pkin(10) * t725;
t131 = t572 + t745;
t641 = pkin(3) * t807 - qJD(2) * t131;
t590 = t561 * t665 + t964;
t133 = t590 + t647;
t640 = pkin(3) * t835 - qJD(2) * t133;
t406 = t471 * t515;
t637 = qJD(6) * t723 - t406;
t636 = qJ(5) * t966 + t932 / 0.2e1;
t629 = t251 * t955 + t351 * t956;
t624 = t884 / 0.2e1 - t868 / 0.2e1;
t623 = t557 * t945 + t779;
t96 = t951 + t590 + t986;
t622 = qJD(2) * t96 + t509 * t835;
t621 = t555 * (-t509 * t562 + t943);
t620 = qJD(4) * t196 - t383 * t807;
t619 = qJD(4) * t198 + t383 * t835;
t614 = (t828 - t840) * t471;
t612 = -t560 * t732 - t539;
t604 = pkin(10) * t723 - t706 - t986;
t481 = -pkin(3) - t996;
t381 = t481 * t560 + t881;
t586 = t381 * t963 + t387 * t953 + t81 * t946;
t1 = t780 + (t252 / 0.2e1 + t471 * t959 + t257 * t948) * t560 + t978 * t556 + t586;
t123 = t672 * t557 - t524 * t880 + (t381 - t881) * t561;
t71 = (-t930 / 0.2e1 + t704) * t561;
t603 = -t71 * qJD(1) - t1 * qJD(2) - t123 * qJD(3);
t380 = t481 * t556 - t865;
t122 = (-t380 - t865) * t561 + (t737 - t500) * t557;
t566 = t380 * t963 + t386 * t953 + t737 * t961 + t80 * t946;
t2 = t257 * t759 + (t765 - t978) * t560 + t566 + t636;
t70 = (t929 / 0.2e1 - t705) * t561;
t602 = -t70 * qJD(1) - t2 * qJD(2) + t122 * qJD(3);
t601 = t959 + t623;
t585 = t381 * t960 + t387 * t952 + t81 * t948;
t17 = t556 * t708 + t585 + t753;
t267 = -t381 * t557 - t524 * t879;
t51 = t556 * t707 + t557 * t704;
t600 = -qJD(1) * t51 - qJD(2) * t17 + qJD(3) * t267;
t587 = t380 * t961 + t524 * t970 + t80 * t949;
t18 = t560 * t708 + t587 + t760;
t266 = -t380 * t557 + t524 * t863;
t52 = t557 * t705 + t560 * t707;
t599 = -qJD(1) * t52 - qJD(2) * t18 - qJD(3) * t266;
t112 = (t869 + t912) * t561;
t145 = t386 ^ 2 - t387 ^ 2;
t596 = qJD(2) * t145 - qJD(3) * t112 - qJD(4) * t121;
t21 = (t557 * t747 + t561 * t746) * pkin(10) + t629 + t645;
t49 = (t955 + t646) * t382;
t593 = t509 * t521 * qJD(3) - t49 * qJD(1) - t21 * qJD(2);
t360 = t601 * t556;
t40 = t556 * t703 + t560 * t748 + t781;
t592 = -qJ(5) * t828 - t40 * qJD(2) - t360 * qJD(3);
t361 = t601 * t560;
t42 = -t556 * t748 + t560 * t703 + t782;
t591 = qJ(5) * t830 - t42 * qJD(2) - t361 * qJD(3);
t186 = t624 * t561;
t204 = t869 / 0.2e1 + t912 / 0.2e1;
t589 = qJD(3) * t186 - qJD(4) * t204 + t386 * t840;
t482 = (t552 / 0.2e1 - t550 / 0.2e1) * t561;
t588 = -qJD(2) * t204 + qJD(3) * t482 + t791;
t579 = qJD(4) * t700 + t823;
t497 = t532 * t553;
t578 = -qJD(2) * t112 - qJD(3) * t497 + 0.2e1 * t729;
t577 = -qJD(2) * t121 + t709 + t736;
t576 = -qJD(2) * t186 - qJD(4) * t482 + t834 * t891;
t418 = t977 + t893;
t575 = qJD(2) * t418 + t471 * t835 - t792;
t547 = pkin(10) * t827;
t546 = t827 / 0.2e1;
t525 = qJD(3) * t763;
t508 = 0.2e1 * t561 * t783;
t490 = t517 * qJ(5);
t474 = -t515 + t827;
t473 = t517 * t560;
t468 = t482 * qJD(6);
t455 = (t787 - t808 / 0.2e1) * t558;
t407 = -t557 * t839 - t837;
t379 = t516 / 0.2e1 - t465 * qJD(4);
t291 = t440 + t767 + t763;
t290 = -t894 - t866 / 0.2e1 + t623 * t560;
t289 = t500 - t882 / 0.2e1 + t623 * t556;
t231 = (t516 - t464) * t471;
t229 = t234 * qJD(4);
t202 = t204 * qJD(6);
t174 = t186 * qJD(6);
t165 = t594 + t608;
t163 = t471 * t757 + t911 / 0.2e1 + t556 * t764 + t957;
t156 = -t743 / 0.2e1 + t597 + t990 * t558;
t155 = t744 / 0.2e1 + t598 + t990 * t562;
t151 = t903 / 0.2e1 + t595;
t138 = t386 * t946 + t560 * t750 + t431 + t958;
t137 = t387 * t947 + t556 * t750 + t430 + t691;
t134 = pkin(10) * t722 + t647 + t706;
t132 = t572 - t745;
t120 = t121 * qJD(6);
t111 = t112 * qJD(6);
t97 = t951 + t604;
t94 = -t413 - t560 * t436 / 0.2e1 + t437 * t950 + t624 * t557;
t88 = t611 + t854;
t87 = t580 + t719;
t85 = -t611 + t853;
t73 = t130 * t947 + t253 * t757 + t382 * t752;
t72 = t129 * t947 + t253 * t752 + t382 * t758;
t69 = -t895 / 0.2e1 + t351 * t946 - t541 + t604;
t67 = pkin(10) * t724 - t570 + t745 + t801;
t65 = t399 + t581;
t62 = t401 + t583;
t60 = t398 + t582;
t59 = t402 + t584;
t54 = t130 * t949 + t254 * t758 - t914 / 0.2e1 + t382 * t756;
t53 = t129 * t948 + t254 * t752 - t913 / 0.2e1 + t382 * t759;
t50 = (t646 + t954) * t382;
t47 = t773 + t635;
t43 = t560 * t749 + t782 + t187 * t950 - t871 / 0.2e1 - t888 / 0.2e1;
t41 = t556 * t749 + t781 + t560 * t973 - t886 / 0.2e1 + t873 / 0.2e1;
t39 = t626 + t632;
t38 = t628 + t634;
t32 = (-t878 / 0.2e1 - t941 / 0.2e1) * t889 + t979;
t26 = (t253 * t946 + t254 * t949) * t889 + (t750 - t898 / 0.2e1) * t382 - t627;
t23 = t920 / 0.2e1 + t633;
t22 = pkin(10) * t979 - t629 + t645;
t20 = t187 * t758 - t885 / 0.2e1 + t753 - t585;
t19 = t187 * t752 - t870 / 0.2e1 + t760 - t587;
t16 = -t617 / 0.2e1 + t340 * t758 + t606 * t561 + t630;
t13 = t618 / 0.2e1 + t340 * t751 + t607 * t561 + t631;
t8 = t568 - t644;
t5 = t910 / 0.2e1 + t565 + (t919 + t923) * pkin(10) / 0.2e1;
t4 = t672 * t961 + (t871 + t888) * t949 - t648 * t758 + t187 * t759 + t780 + t931 / 0.2e1 - t586 + (-t723 * t975 + t765) * t556;
t3 = (t873 - t886) * t948 + t500 * t961 - t648 * t751 + t187 * t756 - t975 * t691 - t566 + t636;
t28 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t46 + qJD(3) * t45, 0, 0, 0, 0, 0, 0, 0; 0, 0, -qJD(2) * t742, -qJD(2) * t713, 0, 0, 0, 0, 0 (-t432 * t939 - t549 * t714) * qJD(2) + t156 * qJD(3) (-t433 * t939 + t549 * t716) * qJD(2) + t155 * qJD(3), 0, 0, 0, 0, 0, t59 * qJD(3) + t87 * qJD(4) + t981, t60 * qJD(3) + t85 * qJD(4) + t982 (t339 * t471 - t340 * t469) * qJD(2) + t26 * qJD(3), t62 * qJD(3) + qJD(4) * t997 - t981, t65 * qJD(3) + t88 * qJD(4) - t982, t900 + (t251 * t432 + t255 * t340 + t256 * t339) * qJD(2) + t5 * qJD(3) + t8 * qJD(4) + t997 * qJD(5), 0, 0, 0, 0, 0 (-t340 * t386 + t471 * t674) * qJD(2) + t13 * qJD(3) + t47 * qJD(4) + t39 * qJD(6) (-t340 * t387 - t471 * t673) * qJD(2) + t16 * qJD(3) + t23 * qJD(4) + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t156 - qJD(3) * t383, qJD(2) * t155 + qJD(3) * t382, 0, 0, 0, 0, 0, qJD(2) * t59 + t620, qJD(2) * t60 + t619, t26 * qJD(2) + qJD(3) * t740, qJD(2) * t62 - t620, qJD(2) * t65 - t619, t902 + t5 * qJD(2) + (pkin(10) * t740 + t383 * t509) * qJD(3) + t50 * qJD(4) - t196 * qJD(5), 0, 0, 0, 0, 0, t13 * qJD(2) + (t188 * t557 - t553 * t915) * qJD(3) + t72 * qJD(4) + t54 * qJD(6), t16 * qJD(2) + (-t189 * t557 + t382 * t891) * qJD(3) + t73 * qJD(4) + t53 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t87 - t856, qJD(2) * t85 + t657, 0, t999, qJD(2) * t88 - t657, t8 * qJD(2) + t50 * qJD(3) + (-pkin(4) * t254 - qJ(5) * t253) * qJD(4) + t254 * qJD(5), 0, 0, 0, 0, 0, qJD(2) * t47 + qJD(3) * t72 - t253 * t830 + t254 * t819, qJD(2) * t23 + qJD(3) * t73 - t253 * t828 - t254 * t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t999, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t39 + qJD(3) * t54 - qJD(6) * t130 + t249 * t560, qJD(2) * t38 + qJD(3) * t53 + qJD(6) * t129 - t249 * t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153 * qJD(3), -t154 * qJD(3), 0, 0, 0, 0, 0, qJD(3) * t58 + qJD(4) * t86, qJD(3) * t61 + qJD(4) * t84, qJD(3) * t25, qJD(3) * t63 + qJD(4) * t91, qJD(3) * t64 + qJD(4) * t89, qJD(3) * t6 + qJD(4) * t7 + qJD(5) * t93 - t900, 0, 0, 0, 0, 0, qJD(3) * t14 + qJD(4) * t48 - qJD(6) * t36, qJD(3) * t15 + qJD(4) * t24 - qJD(6) * t37; 0, 0, 0, 0, t728, t484 * qJD(3), t562 * t711, -t558 * t711, 0, t396 * qJD(3), -t395 * qJD(3), t231, qJD(3) * t265 + qJD(4) * t268, -qJD(3) * t377 + t469 * t792, qJD(3) * t376 + t471 * t792, -t728, -qJD(3) * t82 - qJD(4) * t140, qJD(3) * t83 + qJD(4) * t139, qJD(3) * t44 + qJD(4) * t35 + t469 * t789, qJD(3) * t56 + qJD(4) * t74 + t471 * t810, qJD(3) * t55 + qJD(4) * t75 + qJD(5) * t418, qJD(3) * t29 + qJD(4) * t27 + qJD(5) * t98 (-qJD(3) * t437 - qJD(6) * t386 - t471 * t830) * t387, qJD(3) * t117 + qJD(4) * t128 + qJD(6) * t145, qJD(3) * t169 + qJD(4) * t208 + t386 * t822, qJD(3) * t168 + qJD(4) * t209 + t387 * t822, t231, qJD(3) * t11 + qJD(4) * t9 - qJD(5) * t192 + qJD(6) * t34, qJD(3) * t12 + qJD(4) * t10 + qJD(5) * t250 + qJD(6) * t33; 0, 0, 0, 0, t727, t809, t671 * t889, -t671 * t890, 0, -qJD(3) * t479 - t664, qJD(3) * t477 - t663, t406 + t992, t533 * t785 + t229 + t813, t557 * t786 - t841, t561 * t786 + t842, -t455 (-t479 * t561 + t557 * t642) * qJD(3) + t134 * qJD(4) + t680 (t479 * t557 + t561 * t642) * qJD(3) + t132 * qJD(4) + t679, qJD(3) * t675 + t32 * qJD(4) + t685 (t362 * t561 + t557 * t621) * qJD(3) + t69 * qJD(4) + t291 * qJD(5) + t681 (-t362 * t557 + t561 * t621) * qJD(3) + t67 * qJD(4) + t784 + t682 (pkin(10) * t675 + t362 * t509) * qJD(3) + t22 * qJD(4) + t97 * qJD(5) + t697, qJD(4) * t151 - t174 + (-t794 - t840) * t437, t817 + t94 * qJD(4) - t111 + (t436 * t556 - t903) * t807, t814 + (-t270 * t553 + t437 * t557) * qJD(3) + t137 * qJD(4) + t165 * qJD(6), t815 + (-t436 * t557 - t553 * t799) * qJD(3) + t138 * qJD(4) + t163 * qJD(6), -t637 + t992 (t103 * t557 + t436 * t524 + (-t380 * t889 + t931) * t561) * qJD(3) + t3 * qJD(4) + t296 * qJD(5) + t20 * qJD(6) + t687 (-t104 * t557 + t437 * t524 + (-t381 * t889 - t932) * t561) * qJD(3) + t4 * qJD(4) + t560 * t784 + t19 * qJD(6) + t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t991, t660, t651, t517 * t471, t525, qJD(3) * t134 - t669 - t831, qJD(3) * t132 - t670 + t832, t918 + t32 * qJD(3) + (-t899 + t942) * qJD(4) - t810, qJD(3) * t69 - t678 + t831, qJD(3) * t67 - t677 - t789 - t832, t22 * qJD(3) + (-pkin(4) * t295 - qJ(5) * t294) * qJD(4) + t255 * qJD(5) + t698, qJD(3) * t151 + t556 * t614 + t202, t94 * qJD(3) - t471 * t736 - t120 + t816, qJD(3) * t137 - t464 * t560 + t847, qJD(3) * t138 + t464 * t556 + t846, t985, t3 * qJD(3) + (-t556 * t648 - t560 * t690) * qJD(4) - t386 * qJD(5) + t41 * qJD(6) + t696, t4 * qJD(3) + (t556 * t690 - t560 * t648) * qJD(4) - qJD(5) * t387 + t43 * qJD(6) + t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t651, qJD(3) * t291 + t365, t575, qJD(3) * t97 + qJD(4) * t255 + t676, 0, 0, 0, 0, 0, qJD(3) * t296 - qJD(4) * t386 - t848, -qJD(4) * t387 + t471 * t539 + t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t589, t596, qJD(3) * t165 + t386 * t732, qJD(3) * t163 + t387 * t732, t379, qJD(3) * t20 + qJD(4) * t41 - qJD(6) * t81 - t683, qJD(3) * t19 + qJD(4) * t43 + qJD(6) * t80 + t684; 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * qJD(2), t154 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t58, -qJD(2) * t61, -qJD(2) * t25, -qJD(2) * t63, -qJD(2) * t64, -qJD(2) * t6 - qJD(4) * t49 - t902, 0, 0, 0, 0, 0, -qJD(2) * t14 - qJD(4) * t70 - qJD(6) * t51, -qJD(2) * t15 - qJD(4) * t71 - qJD(6) * t52; 0, 0, 0, 0, -t727, -t809, -t562 * t712, t558 * t712, 0, t664, t663, -t406 + t304, t229 - t813, -t561 * t792 + t841, t557 * t792 - t842, t455, qJD(4) * t133 - t680, qJD(4) * t131 - t679, -qJD(4) * t31 - t561 * t789 - t685, -qJD(4) * t68 + qJD(5) * t292 - t681, -qJD(4) * t66 - t682 + t784, -qJD(4) * t21 - qJD(5) * t96 - t697, qJD(4) * t152 + t437 * t840 - t174, qJD(4) * t95 - t111 - t817, -qJD(4) * t136 - qJD(6) * t164 - t814, -qJD(4) * t135 - qJD(6) * t162 - t815, t304 + t637, -qJD(4) * t2 - qJD(5) * t248 - qJD(6) * t17 - t687, -qJD(4) * t1 - qJD(5) * t363 - qJD(6) * t18 - t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, t533 * qJD(4), 0, 0, 0, -pkin(3) * t829, -pkin(3) * t827, 0, qJD(4) * t394 - t557 * t823, -qJD(4) * t393 + qJD(5) * t551 (qJD(4) * t521 - t825) * t509, -t538 * t550 + t553 * t783, -qJD(6) * t497 - 0.2e1 * t557 * t729, -qJD(4) * t496 - t560 * t788, -qJD(4) * t498 + t556 * t788, t538, qJD(4) * t122 + qJD(6) * t267 + t551 * t826, -qJD(4) * t123 - qJD(6) * t266 + t551 * t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t984, t659, t474, t517 * t557, qJD(2) * t764, -t547 - t640, -t641 + t805, t579 - t925, -t667 + t547, -t668 - t805, pkin(10) * t579 + t593, t851 - t468 + (-t550 * t807 + t791) * t557, t859 + t508 + (-0.2e1 * t726 - t736) * t557, t540 + t661, t662 - t790, t983, t289 * qJD(6) - t523 * t830 - t560 * t980 + t602, t290 * qJD(6) - t523 * t828 + t556 * t980 + t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t735, -t407, -t622 + t547, 0, 0, 0, 0, 0, t556 * t837 + t540 - t845, t551 * t834 - t790 - t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t576, t578, -t731 * t863 - t849, t731 * t879 - t850, -t515 / 0.2e1 + t546, qJD(4) * t289 - qJD(6) * t381 + t600, qJD(4) * t290 + qJD(6) * t380 + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t86, -qJD(2) * t84, 0, -qJD(2) * t91, -qJD(2) * t89, -qJD(2) * t7 + qJD(3) * t49, 0, 0, 0, 0, 0, -qJD(2) * t48 + qJD(3) * t70, -qJD(2) * t24 + qJD(3) * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t991, -t660, t650 (-t835 - t839) * t889, t525, -qJD(3) * t133 + t669, -qJD(3) * t131 + t670, qJD(3) * t31 - t918, qJD(3) * t68 + t678, qJD(3) * t66 + t677 - t789, -qJ(5) * t789 + qJD(3) * t21 - t698, -qJD(3) * t152 + t387 * t796 + t202, -qJD(3) * t95 - t120 - t816, qJD(3) * t136 - t471 * t821 - t847, qJD(3) * t135 - t471 * t819 - t846, -t985, qJD(3) * t2 - qJD(5) * t270 + qJD(6) * t40 - t696, qJD(3) * t1 + qJD(6) * t42 - t560 * t789 - t688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t984, -t659, t515, -t557 * t795, qJD(2) * t763, t640, t641, t925, t667, t668, -t593, t537 * t550 - t468 - t851, t557 * t709 + t508 - t859, -t556 * t820 - t661, -t557 * t819 - t662, -t983, qJD(6) * t360 - t602, qJD(6) * t361 - t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), -t783, t532 * qJD(6), 0, 0, 0, qJ(5) * t819 + t826, -qJ(5) * t821 + t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, -t490, 0, 0, 0, 0, 0, -t658, -t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, t577, -t556 * t732 - t536, t612, t643, t556 * t818 - t592, t560 * t818 - t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t93, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t650, -qJD(3) * t292 - t365, -t575, qJ(5) * t792 + qJD(3) * t96 - t676, 0, 0, 0, 0, 0, qJD(3) * t248 + qJD(4) * t270 - qJD(6) * t327 + t848, -t844 + qJD(3) * t363 + (t792 - t822) * t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515, -t735, t407, t622, 0, 0, 0, 0, 0, t556 * t656 + t845, t560 * t656 + t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, t490, 0, 0, 0, 0, 0, t658, t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t734 - t821, t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t36 + qJD(3) * t51, qJD(2) * t37 + qJD(3) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t589, -t596, qJD(3) * t164 + (-qJD(2) * t386 + t830) * t471, qJD(3) * t162 + t614, t379, qJD(3) * t17 - qJD(4) * t40 + qJD(5) * t327 + t683, qJD(3) * t18 - qJD(4) * t42 + t471 * t824 - t684; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t576, -t578, t849 + (t793 + t830) * t557, t850 + (-t794 + t828) * t557, t515 / 0.2e1 + t546, -qJD(4) * t360 + t556 * t825 - t600, -qJD(4) * t361 + t557 * t824 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, -t577, t536 + t796, t702, -t643, t592, t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t734, t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t28;
