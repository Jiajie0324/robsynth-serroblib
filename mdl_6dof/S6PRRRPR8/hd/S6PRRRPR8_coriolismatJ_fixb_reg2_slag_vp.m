% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:53:29
% EndTime: 2019-03-08 23:54:37
% DurationCPUTime: 56.17s
% Computational Cost: add. (23839->1270), mult. (63159->1709), div. (0->0), fcn. (70245->12), ass. (0->890)
t1403 = sin(pkin(6));
t882 = sin(qJ(2));
t1139 = t882 * t1403;
t878 = sin(pkin(7));
t1096 = t878 * t1139;
t880 = sin(qJ(4));
t1043 = t880 * t1096;
t1414 = cos(qJ(2));
t1093 = t1403 * t1414;
t885 = cos(qJ(3));
t1404 = cos(pkin(7));
t1080 = t1404 * t1403;
t1014 = t882 * t1080;
t881 = sin(qJ(3));
t969 = t881 * t1014;
t737 = t1093 * t885 - t969;
t884 = cos(qJ(4));
t1342 = t737 * t884;
t1285 = t1342 / 0.2e1 + t1043 / 0.2e1;
t1324 = t878 * t885;
t1165 = t1324 / 0.2e1;
t1326 = t878 * t881;
t863 = t884 * t1404;
t781 = t1326 * t880 - t863;
t1435 = t781 / 0.2e1;
t1094 = t885 * t1139;
t1405 = cos(pkin(6));
t1489 = t1414 * t1080 + t1405 * t878;
t673 = t1489 * t881 + t1094;
t907 = -t1093 * t878 + t1404 * t1405;
t489 = t673 * t880 - t884 * t907;
t1095 = t881 * t1139;
t672 = -t1489 * t885 + t1095;
t963 = t1165 * t489 + t1435 * t672;
t196 = t963 - t1285;
t1541 = qJD(1) * t196;
t1540 = qJD(2) * t196;
t1539 = qJD(4) * t196;
t195 = t963 + t1285;
t412 = t672 * t884;
t1538 = qJD(2) * t195 - qJD(3) * t412 - qJD(4) * t489;
t611 = t1043 + t1342;
t968 = t885 * t1014;
t736 = t1093 * t881 + t968;
t1325 = t878 * t884;
t783 = t1325 * t881 + t1404 * t880;
t1537 = -t195 * qJD(4) + qJD(2) * (t1324 * t611 + t736 * t783);
t883 = cos(qJ(6));
t1418 = t883 / 0.2e1;
t879 = sin(qJ(6));
t1422 = t879 / 0.2e1;
t1347 = t736 * t879;
t1343 = t737 * t880;
t814 = t884 * t1096;
t610 = -t814 + t1343;
t1371 = t610 * t883;
t424 = -t1347 + t1371;
t1345 = t736 * t883;
t1373 = t610 * t879;
t425 = t1345 + t1373;
t1290 = t1418 * t424 + t1422 * t425;
t1459 = pkin(4) + pkin(11);
t1536 = t1290 * t1459;
t1433 = t783 / 0.2e1;
t1313 = t880 * t781;
t1159 = -t1313 / 0.2e1;
t1334 = t783 * t884;
t982 = t1334 / 0.2e1 + t1159;
t1493 = t982 * qJD(4);
t1261 = qJD(3) * t885;
t1191 = t878 * t1261;
t829 = t884 * t1191;
t808 = t880 * t829;
t1535 = -t1493 - t808;
t1336 = t783 * t880;
t1338 = t781 * t884;
t466 = t1336 + t1338;
t1527 = t466 * qJD(4);
t874 = t880 ^ 2;
t876 = t884 ^ 2;
t852 = t876 - t874;
t1534 = t852 * t1191 - t1527;
t1221 = t878 * qJD(4);
t1199 = t885 * t1221;
t870 = t878 ^ 2;
t877 = t885 ^ 2;
t1329 = t870 * t877;
t665 = t1326 * t781 - t1329 * t880;
t1529 = qJD(2) * t665;
t1533 = t880 * t1199 + t1529;
t1264 = qJD(3) * t878;
t1192 = t881 * t1264;
t1532 = t884 * t1192 - t1529;
t410 = t672 * t880;
t1356 = t673 * t884;
t901 = t907 * t880;
t490 = t901 + t1356;
t485 = t490 * qJD(4);
t1288 = -t410 * qJD(3) + t485;
t1085 = t814 / 0.2e1 - t1343 / 0.2e1;
t1361 = t672 * t783;
t1166 = -t1324 / 0.2e1;
t447 = t490 * t1166;
t957 = t447 - t1361 / 0.2e1;
t1524 = t957 - t1085;
t1531 = qJD(2) * t1524 + t1288;
t1530 = -t874 - t876;
t1528 = t1459 * t781;
t1296 = t1459 * t884;
t1458 = pkin(5) + pkin(10);
t1498 = t1458 * t884;
t1330 = t1498 * t879;
t813 = t1498 * t883;
t1220 = t884 * qJD(3);
t856 = t880 * t1220;
t1526 = t982 * qJD(2) + t856;
t1267 = qJD(2) * t885;
t1202 = t878 * t1267;
t1108 = t880 * t1202;
t1075 = t781 * t1108;
t1525 = t1075 + t1535;
t1508 = t1085 + t957;
t1523 = qJD(1) * t1508;
t1522 = qJD(2) * t1508;
t1207 = t883 * t1324;
t1318 = t879 * t781;
t679 = t1207 - t1318;
t1303 = t883 * t679;
t1153 = t1303 / 0.2e1;
t1302 = t883 * t781;
t517 = t879 * t1324;
t678 = t517 + t1302;
t1353 = t678 * t879;
t980 = t1153 - t1353 / 0.2e1;
t1510 = t980 * t884;
t1521 = t1510 * qJD(6);
t964 = -t1326 * t783 + t1329 * t884;
t1504 = qJD(2) * t964;
t1520 = t884 * t1199 - t1504;
t1519 = t880 * t1192 - t1504;
t1268 = qJD(2) * t783;
t1195 = t781 * t1268;
t1473 = -t982 * qJD(3) + t1195;
t875 = t883 ^ 2;
t1423 = t875 / 0.2e1;
t873 = t879 ^ 2;
t795 = (t1423 - t873 / 0.2e1) * t884;
t1256 = qJD(4) * t883;
t858 = t879 * t1256;
t1304 = t883 * t678;
t1154 = t1304 / 0.2e1;
t1352 = t679 * t879;
t983 = t1352 / 0.2e1 + t1154;
t1518 = -qJD(2) * t983 + t795 * qJD(3) + t858;
t1517 = -t1493 - t1075;
t1409 = t781 * pkin(4);
t1337 = t783 * qJ(5);
t1206 = pkin(2) * t1404;
t790 = pkin(9) * t1326 - t885 * t1206;
t758 = -pkin(3) * t1404 + t790;
t911 = t758 - t1337;
t487 = t911 + t1409;
t1387 = t487 * t880;
t1314 = t880 * qJ(5);
t1406 = t884 * pkin(4);
t1079 = -t1314 - t1406;
t823 = -pkin(3) + t1079;
t1474 = t823 * t1433 + t1387 / 0.2e1;
t1516 = -qJD(2) * t466 + t852 * qJD(3);
t1515 = qJD(3) * t665 - t783 * t1199;
t1461 = t783 ^ 2;
t1142 = t781 ^ 2 - t1461;
t1514 = qJD(2) * t1142 - qJD(3) * t466;
t1269 = qJD(2) * t679;
t1513 = -qJD(3) * t1510 - qJD(4) * t983 + t678 * t1269;
t1262 = qJD(3) * t883;
t1327 = t876 * t879;
t1512 = -qJD(2) * t1510 + t795 * qJD(4) - t1262 * t1327;
t831 = -qJD(4) + t1202;
t1511 = t831 * t783;
t1360 = t672 * t879;
t1381 = t489 * t883;
t301 = t1360 - t1381;
t1359 = t672 * t883;
t1382 = t489 * t879;
t302 = t1359 + t1382;
t995 = t1418 * t302 + t1422 * t301;
t1509 = t995 * t783;
t1107 = t884 * t1202;
t700 = t783 * t1107;
t1507 = t700 + t808;
t889 = (-t611 / 0.2e1 + t963) * t884 + (-t610 / 0.2e1 + t957) * t880;
t1506 = qJD(1) * t889;
t1505 = qJD(2) * t889;
t1503 = qJD(3) * t889;
t851 = t873 - t875;
t1136 = qJD(4) * t851;
t1407 = t783 * pkin(5);
t1217 = pkin(9) * t1324;
t1411 = pkin(10) * t881;
t1090 = -pkin(3) * t885 - t1411;
t1044 = -pkin(2) + t1090;
t732 = t1044 * t1325;
t1121 = t881 * t1206;
t937 = pkin(10) * t1404 + t1121;
t547 = t880 * (t937 + t1217) - t732;
t438 = -t547 - t1407;
t1502 = (-t1459 * t1165 - t438 / 0.2e1) * t884;
t1499 = t1458 * t880;
t794 = -pkin(3) - t1314 - t1296;
t671 = t1499 * t879 + t883 * t794;
t1363 = t671 * t883;
t670 = -t1499 * t883 + t794 * t879;
t1364 = t670 * t879;
t367 = (t1363 + t1364) * t880;
t386 = t911 + t1528;
t891 = t880 * t937 - t732 + t1407 + (pkin(9) * t880 + t1459) * t1324;
t186 = t883 * t386 + t879 * t891;
t1398 = t186 * t883;
t185 = t386 * t879 - t883 * t891;
t1399 = t185 * t879;
t1501 = (t1398 + t1399) * t783;
t1143 = t1423 + t873 / 0.2e1;
t1500 = t1143 * t490;
t1497 = t1461 * t879;
t1496 = t1461 * t883;
t1362 = t672 * t736;
t1380 = t490 * t611;
t951 = t489 * t610 + t1362 + t1380;
t1495 = t951 * qJD(1);
t1379 = t490 * t884;
t955 = (-t489 * t880 - t1379 + t673) * t672;
t1494 = t955 * qJD(1);
t1492 = t983 * qJD(6);
t1018 = -t1093 / 0.2e1;
t902 = t907 * t878;
t1490 = t902 / 0.2e1 + t1018;
t1487 = qJD(2) * (t1324 * t610 + t736 * t781);
t1485 = qJD(4) * t1142;
t1263 = qJD(3) * t880;
t1484 = (t1263 + t1268) * t1324;
t1420 = t880 / 0.2e1;
t1186 = t301 * t1420;
t1395 = t302 * t880;
t1316 = t879 * t880;
t1357 = t673 * t883;
t397 = -t1316 * t672 + t1357;
t1450 = t397 / 0.2e1;
t1312 = t880 * t883;
t1358 = t673 * t879;
t396 = -t1312 * t672 - t1358;
t72 = (t1395 / 0.2e1 + t396 / 0.2e1) * t883 + (t1186 + t1450) * t879;
t1350 = t72 * qJD(1);
t1100 = t1498 * t1166;
t1297 = t884 * t885;
t791 = (pkin(3) * t881 - pkin(10) * t885) * t878;
t1298 = t884 * t791;
t766 = t880 * t790;
t608 = t766 + t1298;
t861 = pkin(4) * t1326;
t554 = -t608 - t861;
t460 = (pkin(5) * t1297 - pkin(11) * t881) * t878 + t554;
t1308 = t883 * t460;
t1311 = t880 * t885;
t1210 = t878 * t1311;
t1017 = pkin(4) * t1210 + t1121;
t1401 = qJ(5) * t884;
t1078 = pkin(11) * t880 - t1401;
t551 = (pkin(9) + t1078) * t1324 + t1017;
t1320 = t879 * t551;
t248 = t1308 - t1320;
t1454 = -t248 / 0.2e1;
t1421 = -t880 / 0.2e1;
t1434 = -t783 / 0.2e1;
t986 = t1421 * t186 + t1434 * t671;
t947 = t1454 + t986;
t1306 = t883 * t551;
t1322 = t879 * t460;
t249 = t1306 + t1322;
t1453 = -t249 / 0.2e1;
t987 = t1421 * t185 + t1434 * t670;
t948 = t1453 + t987;
t22 = t879 * t948 + t883 * t947 + t1100;
t1483 = qJD(2) * t22 - qJD(3) * t367 - t1350;
t1299 = t883 * t884;
t1315 = t879 * t884;
t869 = pkin(4) * t880;
t796 = t1078 + t869;
t1317 = t879 * t796;
t674 = t813 - t1317;
t1301 = t883 * t796;
t675 = t1301 + t1330;
t203 = t1299 * t675 - t1315 * t674 - t367;
t1415 = t1459 / 0.2e1;
t1300 = t883 * t881;
t742 = (t1311 * t879 + t1300) * t878;
t1148 = t742 * t1415;
t818 = t880 * t1207;
t741 = t1326 * t879 - t818;
t1149 = t741 * t1415;
t1416 = t884 / 0.2e1;
t1417 = -t884 / 0.2e1;
t1408 = t781 * pkin(5);
t916 = t884 * t937;
t971 = t880 * t1044;
t548 = t916 + (pkin(9) * t1297 + t971) * t878;
t439 = t548 - t1408;
t1309 = t883 * t439;
t1402 = qJ(5) * t781;
t493 = t1459 * t783 + t1402;
t1321 = t879 * t493;
t226 = t1309 - t1321;
t1307 = t883 * t493;
t1323 = t879 * t439;
t227 = t1307 + t1323;
t1442 = -t679 / 0.2e1;
t1444 = -t678 / 0.2e1;
t985 = t1442 * t674 + t1444 * t675;
t7 = (t1416 * t227 + t1148 + t947) * t883 + (t1417 * t226 + t1149 + t948) * t879 + t985;
t1482 = t7 * qJD(2) + t203 * qJD(3) - t1350;
t1150 = t1297 / 0.2e1;
t1101 = t878 * t1150;
t1102 = t884 * t1166;
t1481 = (t1101 + t1102) * t672;
t1156 = t1311 / 0.2e1;
t1103 = t878 * t1156;
t1157 = -t1311 / 0.2e1;
t1104 = t878 * t1157;
t1480 = (t1103 + t1104) * t672;
t1167 = t1326 / 0.2e1;
t771 = t880 * t1167 - t863 / 0.2e1;
t1479 = -qJD(6) * t771 - t1473;
t1219 = t884 * qJD(6);
t1470 = t1219 / 0.2e1 + t1526;
t1376 = t547 * t884;
t492 = pkin(4) * t1324 + t547;
t1377 = t492 * t884;
t850 = qJ(5) * t1324;
t491 = -t850 + t548;
t1378 = t491 * t880;
t1469 = -t1376 / 0.2e1 + t1377 / 0.2e1 - t1378 / 0.2e1;
t1266 = qJD(3) * t672;
t1367 = t611 * t884;
t1372 = t610 * t880;
t988 = -t1367 / 0.2e1 - t1372 / 0.2e1;
t888 = (t1416 * t489 + t1421 * t490) * t1324 + (t1338 / 0.2e1 - t1336 / 0.2e1) * t672 - t988;
t1468 = qJD(2) * t888 + t1266 * t1530;
t1465 = qJD(3) * t888 + (t610 * t783 - t611 * t781) * qJD(2);
t1464 = qJD(3) * t964 - t781 * t1199;
t1462 = qJD(2) * t951 + qJD(3) * t955;
t1460 = pkin(10) / 0.2e1;
t1457 = -t185 / 0.2e1;
t1456 = t186 / 0.2e1;
t1455 = -t226 / 0.2e1;
t1452 = -t301 / 0.2e1;
t1451 = t302 / 0.2e1;
t1449 = -t489 / 0.2e1;
t1448 = t490 / 0.2e1;
t1310 = t881 * qJ(5);
t1209 = t878 * t1310;
t767 = t880 * t791;
t768 = t884 * t790;
t609 = -t768 + t767;
t550 = -t1209 - t609;
t1447 = -t550 / 0.2e1;
t1446 = t671 / 0.2e1;
t1445 = t673 / 0.2e1;
t1443 = t678 / 0.2e1;
t1441 = t679 / 0.2e1;
t1440 = t741 / 0.2e1;
t1439 = -t742 / 0.2e1;
t1438 = t742 / 0.2e1;
t1437 = -t766 / 0.2e1;
t1436 = -t781 / 0.2e1;
t817 = t884 * t517;
t1432 = -t817 / 0.2e1;
t1431 = t818 / 0.2e1;
t1430 = -t823 / 0.2e1;
t835 = t869 - t1401;
t1429 = -t835 / 0.2e1;
t1428 = t835 / 0.2e1;
t1427 = -t1498 / 0.2e1;
t1426 = t1498 / 0.2e1;
t1425 = -t861 / 0.2e1;
t1419 = -t883 / 0.2e1;
t1413 = pkin(2) * t870;
t1410 = t736 * pkin(3);
t1400 = qJD(3) * t72;
t1397 = t226 * t883;
t1396 = t227 * t879;
t395 = -t850 + t439;
t1394 = t395 * t879;
t1393 = t395 * t883;
t1392 = t424 * t880;
t1389 = t425 * t880;
t1388 = t487 * t783;
t1386 = t487 * t884;
t488 = (-pkin(5) * t1311 + t1310) * t878 + t609;
t1385 = t488 * t879;
t1384 = t488 * t883;
t1383 = t489 * qJ(5);
t1375 = t548 * t880;
t60 = -t301 * t396 + t302 * t397 - t412 * t490;
t1374 = t60 * qJD(1);
t1370 = t611 * qJ(5);
t1369 = t611 * t879;
t1368 = t611 * t883;
t62 = -t301 * t424 + t302 * t425 + t1380;
t1366 = t62 * qJD(1);
t63 = (-t301 * t883 + t302 * t879 - t489) * t490;
t1365 = t63 * qJD(1);
t1355 = t674 * t883;
t1354 = t675 * t879;
t1351 = t679 * t880;
t992 = t1418 * t396 + t1422 * t397;
t73 = t880 * t995 - t992;
t1349 = t73 * qJD(3);
t1348 = t736 * t823;
t1346 = t736 * t880;
t1344 = t736 * t884;
t1341 = t741 * t879;
t1340 = t742 * t883;
t1339 = t758 * t884;
t1335 = t783 * t883;
t1332 = t835 * t781;
t1331 = t1498 * t783;
t1328 = t870 * t881;
t1319 = t879 * t671;
t589 = t879 * t783;
t1305 = t883 * t670;
t1145 = t547 / 0.2e1 - t492 / 0.2e1;
t1180 = -t1375 / 0.2e1;
t90 = t1180 + (qJ(5) * t1166 + t491 / 0.2e1) * t880 + (pkin(4) * t1166 + t1145) * t884;
t1295 = t90 * qJD(2);
t94 = (-t491 + t548) * t783 + (-t492 + t547) * t781;
t1294 = t94 * qJD(2);
t1287 = t1530 * pkin(10) * t672;
t1283 = t873 + t875;
t298 = (-t1304 + t1352) * t783;
t1282 = qJD(2) * t298;
t400 = -t1324 * t678 - t1497;
t1281 = qJD(2) * t400;
t430 = t679 * t781 + t1497;
t1280 = qJD(2) * t430;
t431 = -t678 * t781 + t1496;
t1279 = qJD(2) * t431;
t1208 = t878 * t1297;
t510 = t1208 * t781 + t1210 * t783;
t1276 = qJD(2) * t510;
t511 = t466 * t1324;
t1275 = qJD(2) * t511;
t1270 = qJD(2) * t678;
t1265 = qJD(3) * t874;
t1260 = qJD(4) * t547;
t1259 = qJD(4) * t548;
t1258 = qJD(4) * t879;
t1257 = qJD(4) * t880;
t868 = qJD(4) * t884;
t1255 = qJD(5) * t879;
t1254 = qJD(5) * t880;
t1253 = qJD(5) * t883;
t1252 = qJD(5) * t884;
t1251 = qJD(6) * t783;
t1250 = qJD(6) * t879;
t1249 = qJD(6) * t880;
t1248 = qJD(6) * t883;
t1247 = qJD(6) * t1459;
t1173 = -t1351 / 0.2e1;
t1174 = t678 * t1420;
t712 = t1299 * t589;
t202 = -t712 + (t1173 + t1440) * t883 + (t1174 + t1438) * t879;
t1242 = t202 * qJD(2);
t209 = t1139 * t902 + t673 * t737 + t1362;
t1241 = t209 * qJD(1);
t276 = t678 * t742 + t679 * t741;
t1240 = t276 * qJD(2);
t288 = -t1303 + t1353;
t297 = t288 * t783;
t1239 = t297 * qJD(2);
t1172 = -t1340 / 0.2e1;
t751 = -t1334 / 0.2e1;
t938 = t1173 * t879 + t751 * t873;
t328 = t1172 + t938;
t1238 = t328 * qJD(2);
t1069 = t880 * t1154 + t751 * t875;
t704 = -t1341 / 0.2e1;
t329 = t704 + t1069;
t1237 = t329 * qJD(2);
t1168 = -t1326 / 0.2e1;
t981 = t1168 + t751;
t348 = t879 * t981 + t1173 + t1431;
t1236 = t348 * qJD(2);
t936 = (t1300 / 0.2e1 + t879 * t1156) * t878;
t1152 = -t1299 / 0.2e1;
t960 = t1152 * t783 + t1174;
t350 = t936 - t960;
t1235 = t350 * qJD(2);
t356 = t1208 * t678 - t741 * t783;
t1234 = t356 * qJD(2);
t357 = -t1208 * t679 + t742 * t783;
t1233 = t357 * qJD(2);
t1162 = t1316 / 0.2e1;
t734 = t783 * t1316;
t549 = t734 / 0.2e1 + t783 * t1162;
t484 = t1207 * t884 - t549;
t1232 = t484 * qJD(2);
t486 = t1324 * t679 + t1496;
t1231 = t486 * qJD(2);
t735 = t783 * t1312;
t648 = -t817 - t735;
t1228 = t648 * qJD(2);
t769 = t781 * qJD(4);
t1227 = t781 * qJD(5);
t1224 = t795 * qJD(6);
t797 = (-t881 ^ 2 + t877) * t870;
t1223 = t797 * qJD(2);
t1218 = t1460 + pkin(5) / 0.2e1;
t1216 = pkin(10) * t1257;
t1212 = t547 * t1324;
t1211 = t548 * t1324;
t1204 = t879 * t1268;
t1203 = t883 * t1268;
t1201 = t879 * t1220;
t1200 = t883 * t1220;
t1198 = t879 * t868;
t1197 = qJD(5) * t1324;
t1196 = t880 * t1219;
t1194 = t783 * t1254;
t1193 = t870 * t1267;
t857 = t880 * t868;
t1190 = t879 * t1248;
t859 = t880 * t1262;
t1189 = qJ(5) * t1443;
t1188 = qJ(5) * t1442;
t1187 = -t1401 / 0.2e1;
t1185 = t1393 / 0.2e1;
t1179 = -t1370 / 0.2e1;
t1178 = t1369 / 0.2e1;
t1177 = -t1368 / 0.2e1;
t1175 = -t412 / 0.2e1;
t1171 = t1340 / 0.2e1;
t1169 = -t1331 / 0.2e1;
t1164 = -t1322 / 0.2e1;
t1163 = t589 / 0.2e1;
t1161 = -t1315 / 0.2e1;
t1160 = t1315 / 0.2e1;
t1158 = -t1312 / 0.2e1;
t1155 = t1308 / 0.2e1;
t1151 = t1299 / 0.2e1;
t1147 = t783 * t1415;
t1146 = t395 / 0.2e1 - t439 / 0.2e1;
t1144 = t767 / 0.2e1 - t768 / 0.2e1;
t1141 = t672 * t1404;
t1140 = t673 * t1404;
t1137 = t1404 * qJD(2);
t544 = t1159 - t981;
t1131 = qJD(2) * t544 + t856;
t855 = t879 * t1263;
t1130 = qJD(2) * t589 + t855;
t591 = t1313 / 0.2e1 + t751;
t1129 = qJD(2) * t591 - t856;
t1124 = qJD(6) + t1268;
t1123 = qJD(6) + t1263;
t1122 = t1218 * t884;
t1120 = t781 * t1202;
t1113 = t884 * t858;
t1112 = t876 * t1190;
t1111 = t1261 * t1328;
t1110 = t881 * t1193;
t1109 = t879 * t1200;
t1106 = t1499 / 0.2e1;
t1105 = -t1499 / 0.2e1;
t1099 = t883 * t1165;
t1098 = t490 * t1165 + t1361 / 0.2e1;
t1092 = t878 * t1137;
t1091 = t1404 * t1264;
t1089 = 0.2e1 * t1109;
t1088 = -t551 / 0.2e1 + t395 * t1416;
t1087 = -t673 / 0.2e1 + t1379 / 0.2e1;
t1086 = t766 / 0.2e1 + t1298 / 0.2e1;
t1084 = t1360 / 0.2e1 + t1452;
t1083 = -t1359 / 0.2e1 + t1451;
t1082 = t1147 + t493 / 0.2e1;
t1081 = t859 + t1203;
t16 = -t185 * t226 + t186 * t227 + t395 * t438;
t895 = (t186 * t1422 + t185 * t1419 + t438 / 0.2e1) * t490 + t226 * t1452 + t227 * t1451 + t395 * t1449;
t4 = t1179 + t895 + t1536;
t1077 = t4 * qJD(1) + t16 * qJD(2);
t893 = t1175 * t395 + t1448 * t488 + t1450 * t186 + t1451 * t249 + t1452 * t248 + t1457 * t396;
t918 = t424 * t670 / 0.2e1 - t425 * t671 / 0.2e1 + t611 * t1427;
t2 = t893 + t918;
t23 = -t185 * t248 + t186 * t249 + t395 * t488;
t1076 = t2 * qJD(1) + t23 * qJD(2);
t1070 = t884 * t1099;
t1068 = t1337 - t1528;
t24 = t226 * t679 + t227 * t678 + t1501;
t898 = t1509 + (t1353 / 0.2e1 + t1153) * t490;
t37 = t898 + t1290;
t1067 = t37 * qJD(1) + t24 * qJD(2);
t642 = (pkin(9) - t1401) * t1324 + t1017;
t896 = (t642 / 0.2e1 + t491 * t1417 + t492 * t1421) * t672 + t489 * t554 / 0.2e1 + t490 * t1447 + t487 * t1445;
t956 = t988 * pkin(10);
t26 = -t1348 / 0.2e1 + t956 + t896;
t87 = t487 * t642 - t491 * t550 + t492 * t554;
t1066 = t26 * qJD(1) + t87 * qJD(2);
t27 = t185 * t742 - t186 * t741 + t248 * t679 + t249 * t678;
t904 = t1439 * t301 + t1440 * t302 + t1442 * t396 + t1444 * t397;
t950 = (t1419 * t425 + t1422 * t424) * t884;
t29 = t950 + t904;
t1065 = -t29 * qJD(1) + t27 * qJD(2);
t1010 = t610 * pkin(4) / 0.2e1 + t1179;
t625 = pkin(4) * t783 + t1402;
t900 = (-t491 / 0.2e1 + t548 / 0.2e1) * t489 - t1145 * t490 + t672 * t625 / 0.2e1;
t33 = t900 + t1010;
t84 = t487 * t625 - t491 * t547 + t492 * t548;
t1064 = t33 * qJD(1) + t84 * qJD(2);
t42 = t186 * t781 - t438 * t679 + (-t227 + t1394) * t783;
t997 = t1435 * t302 + t1441 * t489;
t68 = t1177 + t997;
t1063 = t68 * qJD(1) + t42 * qJD(2);
t45 = -t1208 * t185 + t248 * t783 + t395 * t741 - t488 * t678;
t959 = t1166 * t301 + t1443 * t672;
t994 = t1433 * t396 + t1440 * t490;
t48 = -t1392 / 0.2e1 + (t1177 + t959) * t884 + t994;
t1062 = t48 * qJD(1) + t45 * qJD(2);
t46 = -t1208 * t186 - t249 * t783 + t395 * t742 - t488 * t679;
t958 = t1166 * t302 + t1441 * t672;
t993 = t1434 * t397 + t1438 * t490;
t49 = t1389 / 0.2e1 + (t1178 + t958) * t884 + t993;
t1061 = t49 * qJD(1) + t46 * qJD(2);
t55 = -t1324 * t395 - t1501;
t906 = t447 - t1509;
t59 = t906 - t1290;
t1060 = qJD(1) * t59 + qJD(2) * t55;
t92 = t185 * t783 + t395 * t678;
t990 = -t1373 / 0.2e1 - t1345 / 0.2e1;
t991 = t1433 * t301 + t1443 * t490;
t96 = t990 - t991;
t1059 = -qJD(1) * t96 + qJD(2) * t92;
t93 = -t186 * t783 - t395 * t679;
t989 = t1371 / 0.2e1 - t1347 / 0.2e1;
t996 = t1434 * t302 + t1442 * t490;
t95 = t989 - t996;
t1058 = qJD(1) * t95 - qJD(2) * t93;
t1055 = t1396 + t1397;
t1054 = -t550 * t884 + t554 * t880;
t1053 = -t608 * t880 + t609 * t884;
t1051 = t1354 + t1355;
t1050 = t1137 + qJD(3);
t108 = t550 * t781 + t554 * t783 + (t1377 - t1378) * t1324;
t1049 = t108 * qJD(2) + t1506;
t998 = t1435 * t301 + t1443 * t489;
t114 = -t1369 / 0.2e1 + t998;
t41 = t185 * t781 - t438 * t678 + (t226 - t1393) * t783;
t1048 = t114 * qJD(1) + t41 * qJD(2);
t129 = -t608 * t783 - t609 * t781 + (-t1375 + t1376) * t1324;
t1047 = t129 * qJD(2) + t1506;
t792 = t1121 + t1217;
t146 = -t547 * t608 + t548 * t609 + t758 * t792;
t894 = (t548 * t1417 + t547 * t1421 + t792 / 0.2e1) * t672 + t608 * t1449 + t609 * t1448 + t758 * t1445;
t36 = t1410 / 0.2e1 + t956 + t894;
t1046 = t36 * qJD(1) + t146 * qJD(2);
t1042 = pkin(10) * t1165 - t791 / 0.2e1;
t123 = -t642 * t783 + (t491 * t881 + (t550 - t1386) * t885) * t878;
t692 = t1346 / 0.2e1;
t961 = t1168 * t490 + t1433 * t673;
t924 = -t961 + t1481;
t138 = t692 + t924;
t1041 = t138 * qJD(1) + t123 * qJD(2);
t124 = -t642 * t781 + (t492 * t881 + (-t554 - t1387) * t885) * t878;
t696 = -t1344 / 0.2e1;
t962 = t1168 * t489 + t1435 * t673;
t926 = -t962 + t1480;
t137 = t696 + t926;
t1040 = t137 * qJD(1) + t124 * qJD(2);
t695 = t1344 / 0.2e1;
t927 = t962 + t1480;
t132 = t695 + t927;
t189 = -t1210 * t758 + t1324 * t608 + t1326 * t547 - t792 * t781;
t1039 = t132 * qJD(1) - t189 * qJD(2);
t693 = -t1346 / 0.2e1;
t925 = t961 + t1481;
t135 = t693 + t925;
t190 = t792 * t783 + (-t548 * t881 + (t609 + t1339) * t885) * t878;
t1038 = t135 * qJD(1) + t190 * qJD(2);
t169 = -t625 * t781 - t1211 - t1388;
t1037 = -qJD(2) * t169 - t1523;
t170 = t487 * t781 - t625 * t783 + t1212;
t1036 = -qJD(2) * t170 - t1541;
t313 = -t758 * t781 - t1212;
t1035 = -qJD(2) * t313 + t1541;
t193 = t1098 - t1085;
t314 = -t758 * t783 - t1211;
t1034 = -qJD(1) * t193 + qJD(2) * t314;
t210 = -t1324 * t491 - t1388;
t1033 = qJD(2) * t210 + t1523;
t892 = t1018 - t902 / 0.2e1;
t944 = -t968 / 0.2e1;
t334 = t944 + t1140 / 0.2e1 + t892 * t881;
t690 = -pkin(2) * t1328 - t1404 * t792;
t1032 = qJD(1) * t334 - qJD(2) * t690;
t945 = t969 / 0.2e1;
t335 = t945 - t1141 / 0.2e1 + t892 * t885;
t689 = -t1404 * t790 + t1413 * t885;
t1031 = qJD(1) * t335 + qJD(2) * t689;
t903 = t1386 / 0.2e1 + t625 * t1420 + t781 * t1430 + t783 * t1428;
t140 = (pkin(10) * t1157 + t1310) * t878 + t903 + t1144;
t687 = t823 * t884 + t835 * t880;
t1030 = qJD(2) * t140 + qJD(3) * t687;
t142 = -t861 + t1437 + t1332 / 0.2e1 + (-t625 / 0.2e1 + t1042) * t884 + t1474;
t688 = -t823 * t880 + t835 * t884;
t1029 = qJD(2) * t142 - qJD(3) * t688;
t705 = t1341 / 0.2e1;
t909 = t1143 * t1334 + t678 * t1158 + t1162 * t679;
t174 = t705 + t1171 + t909;
t770 = t1283 * t884 * t880;
t1028 = qJD(2) * t174 + qJD(3) * t770;
t309 = t1432 - t735 + (-t1302 / 0.2e1 + t1444) * t884;
t811 = t852 * t883;
t1027 = -qJD(2) * t309 - qJD(3) * t811;
t310 = -t734 + (t1099 - t1318 / 0.2e1 + t1441) * t884;
t809 = t852 * t879;
t1026 = -qJD(2) * t310 - qJD(3) * t809;
t1022 = qJD(2) * t517 - t1258;
t1021 = -t1258 + t1270;
t1019 = -t1249 - t1265;
t1015 = -t769 + t1120;
t647 = -t829 + t1120;
t1013 = pkin(3) * t1434 + t1420 * t758;
t1012 = t1187 + t869 / 0.2e1;
t1011 = qJ(5) * t1447 - t554 * pkin(4) / 0.2e1;
t1009 = t771 * qJD(2) - t1220 / 0.2e1;
t1008 = t878 * t1090;
t910 = pkin(3) * t1435 + t1339 / 0.2e1 + pkin(10) * t1104;
t303 = t910 + t1144;
t1007 = pkin(3) * t1220 - qJD(2) * t303;
t931 = t1042 * t884 + t1437;
t305 = t931 + t1013;
t1006 = pkin(3) * t1263 - qJD(2) * t305;
t1003 = qJD(6) * t1102 - t700;
t1002 = qJ(5) * t1440 + t1385 / 0.2e1;
t1001 = qJ(5) * t1438 + t1384 / 0.2e1;
t1000 = -t1397 / 0.2e1 - t1396 / 0.2e1;
t999 = t1418 * t248 + t1422 * t249;
t984 = -t1355 / 0.2e1 - t1354 / 0.2e1;
t979 = t1415 * t880 + t1187;
t978 = t878 * (-t823 * t885 + t1411);
t205 = t1425 + t931 + t1474;
t977 = qJD(2) * t205 + t1263 * t823;
t976 = qJD(3) * t591 + t1195;
t974 = qJD(4) * t410 - t1220 * t673;
t973 = qJD(4) * t412 + t1263 * t673;
t967 = (t1256 - t1269) * t783;
t965 = -t1124 * t883 - t859;
t954 = (t1367 + t1372) * t1460;
t953 = pkin(10) * t1102 - t1086 - t1474;
t905 = qJ(5) * t1175 - t1459 * t992;
t919 = t301 * t674 / 0.2e1 - t302 * t675 / 0.2e1 + t489 * t1426;
t13 = (-t1319 / 0.2e1 + t1305 / 0.2e1 + t1218 * t880) * t490 + t905 + t919;
t208 = -t1498 * t1499 - t670 * t674 + t671 * t675;
t890 = t1105 * t395 + t1426 * t438 + t1446 * t227 + t1455 * t670 + t1456 * t675 + t1457 * t674;
t908 = -t999 * t1459 + t488 * qJ(5) / 0.2e1;
t5 = -t890 + t908;
t952 = -t13 * qJD(1) - t5 * qJD(2) + t208 * qJD(3);
t946 = t796 / 0.2e1 + t979;
t119 = t1083 * t880 + t1087 * t879;
t921 = t1426 * t679 - t986;
t51 = t1088 * t879 + t1155 + t921;
t513 = -t1315 * t1498 - t671 * t880;
t943 = -qJD(1) * t119 - qJD(2) * t51 + qJD(3) * t513;
t120 = t1084 * t880 + t1087 * t883;
t512 = t1299 * t1498 - t670 * t880;
t923 = t1427 * t678 + t987;
t52 = t1088 * t883 + t1164 + t923;
t942 = -qJD(1) * t120 - qJD(2) * t52 - qJD(3) * t512;
t155 = (t1381 / 0.2e1 - t1084) * t884;
t922 = t1416 * t185 + t1434 * t674 + t1436 * t670;
t18 = (t1331 / 0.2e1 + t1502) * t883 + (-t1443 * t1458 + t1185 + t1455) * t880 + t922 + t1002;
t289 = -t670 * t884 + (t674 - 0.2e1 * t813) * t880;
t941 = -t155 * qJD(1) - t18 * qJD(2) + t289 * qJD(3);
t156 = (-t1382 / 0.2e1 + t1083) * t884;
t920 = t1416 * t186 + t1433 * t675 + t1436 * t671;
t17 = (t227 / 0.2e1 - t1458 * t1441) * t880 + (t1421 * t395 + t1169 - t1502) * t879 + t920 + t1001;
t290 = t671 * t884 - t1498 * t1316 + (t675 - t1330) * t880;
t940 = -t156 * qJD(1) - t17 * qJD(2) - t290 * qJD(3);
t263 = (t1304 + t1352) * t884;
t319 = t678 ^ 2 - t679 ^ 2;
t939 = qJD(2) * t319 - qJD(3) * t263 - qJD(4) * t288;
t463 = (t829 - t769) * t783;
t935 = (qJD(4) * t783 + t1191 * t880) * t781;
t640 = t946 * t879;
t99 = t1082 * t879 + t1146 * t883 + t1188;
t934 = -qJ(5) * t1256 - t99 * qJD(2) - t640 * qJD(3);
t115 = (t1429 + t1012) * t672;
t915 = pkin(10) * t1180 + t1429 * t487 + t1430 * t625;
t56 = (t1378 / 0.2e1 + t1145 * t884) * pkin(10) + t915 + t1011;
t933 = t823 * t835 * qJD(3) - t115 * qJD(1) - t56 * qJD(2);
t897 = t1356 / 0.2e1 + t901 / 0.2e1;
t172 = t897 - t1500;
t344 = t1122 + t984;
t887 = (pkin(9) * t1150 + t971 / 0.2e1) * t878 - t850 - t1408 / 0.2e1 + t916 / 0.2e1;
t76 = t887 + t1000;
t872 = qJ(5) * qJD(4);
t932 = qJD(1) * t172 + qJD(2) * t76 + qJD(3) * t344 + t872;
t101 = t1082 * t883 - t1146 * t879 + t1189;
t641 = t946 * t883;
t930 = qJ(5) * t1258 - t101 * qJD(2) - t641 * qJD(3);
t917 = qJD(4) * t1079 + t1252;
t810 = t851 * t876;
t914 = -qJD(2) * t263 - qJD(3) * t810 + 0.2e1 * t1113;
t913 = -qJD(2) * t288 + t1089 + t1136;
t719 = t1461 + t1329;
t912 = qJD(2) * t719 + t1263 * t783 - t1199;
t871 = qJ(5) * qJD(5);
t867 = pkin(10) * t868;
t864 = t868 / 0.2e1;
t860 = t883 * t868;
t844 = qJD(3) * t1167;
t843 = qJD(2) * t1168;
t842 = qJD(2) * t1167;
t836 = t852 * qJD(4);
t822 = 0.2e1 * t884 * t1190;
t803 = qJ(5) * t1202 - t872;
t787 = -t868 + t1107;
t786 = t831 * t883;
t785 = t831 * t880;
t759 = (t1193 - t1221 / 0.2e1) * t881;
t701 = -t1268 * t880 - t1265;
t669 = t829 / 0.2e1 - t771 * qJD(4);
t560 = t591 * qJD(4);
t545 = t1167 + t591;
t543 = -t1330 - t1301 / 0.2e1 + t979 * t883;
t542 = t813 - t1317 / 0.2e1 + t979 * t879;
t351 = t936 + t960;
t349 = t783 * t1160 + t1351 / 0.2e1 + t879 * t1168 + t1431;
t343 = t1122 - t984;
t337 = -t1140 / 0.2e1 + t944 + t1490 * t881;
t336 = t1141 / 0.2e1 + t945 + t1490 * t885;
t330 = t705 + t1069;
t327 = t1171 + t938;
t312 = t1151 * t781 + t1416 * t678 + t1432 + t735;
t311 = t1160 * t781 + t1417 * t679 + t1070 + t734;
t306 = pkin(10) * t1101 + t1013 + t1086;
t304 = t910 - t1144;
t279 = t288 * qJD(6);
t261 = t263 * qJD(6);
t206 = t1425 + t953;
t201 = t1419 * t741 + t1439 * t879 - t880 * t980 - t712;
t194 = t1085 + t1098;
t173 = t704 + t1172 + t909;
t171 = t897 + t1500;
t158 = t1152 * t672 + t1160 * t489 + t1417 * t302;
t157 = t1152 * t489 + t1161 * t672 + t1417 * t301;
t143 = -t1332 / 0.2e1 + t625 * t1416 - t861 + t953;
t141 = pkin(10) * t1103 + t1144 + t1209 - t903;
t139 = t693 + t924;
t136 = t695 + t926;
t134 = t692 + t925;
t133 = t696 + t927;
t122 = -t1395 / 0.2e1 + t490 * t1161 - t1358 / 0.2e1 + t672 * t1158;
t121 = t1186 + t490 * t1152 - t1357 / 0.2e1 + t672 * t1162;
t116 = (t1012 + t1428) * t672;
t113 = t1178 + t998;
t102 = t883 * t1147 + t1189 - t1394 / 0.2e1 - t1307 / 0.2e1 - t1323 / 0.2e1;
t100 = t879 * t1147 + t1188 + t1185 - t1321 / 0.2e1 + t1309 / 0.2e1;
t98 = t989 + t996;
t97 = t990 + t991;
t91 = t1375 / 0.2e1 + (-t1314 / 0.2e1 - t1406 / 0.2e1) * t1324 + t1469;
t75 = t887 - t1000;
t67 = t1368 / 0.2e1 + t997;
t58 = t906 + t1290;
t57 = pkin(10) * t1469 + t1011 - t915;
t54 = t395 * t1161 - t1320 / 0.2e1 + t1155 - t921;
t53 = t395 * t1152 - t1306 / 0.2e1 + t1164 - t923;
t50 = -t1389 / 0.2e1 + t611 * t1161 + t958 * t884 + t993;
t47 = t1392 / 0.2e1 + t611 * t1151 + t959 * t884 + t994;
t38 = t898 - t1290;
t35 = -t1410 / 0.2e1 + t894 + t954;
t34 = t900 - t1010;
t30 = t950 - t904;
t25 = t1348 / 0.2e1 + t896 + t954;
t21 = t1100 + (-t1398 / 0.2e1 - t1399 / 0.2e1) * t880 + (-t1363 / 0.2e1 - t1364 / 0.2e1) * t783 + t999;
t20 = -t1102 * t1459 * t879 + t1106 * t679 + t1161 * t438 + t1162 * t395 + t1163 * t1498 + t1421 * t227 + t1001 - t920;
t19 = -t1070 * t1459 + t1106 * t678 + t1151 * t438 + t1158 * t395 + t1169 * t883 + t1420 * t226 + t1002 - t922;
t14 = t1319 * t1448 + t905 - t919 + (-t1305 / 0.2e1 + t1105) * t490;
t8 = t1335 * t1446 + t227 * t1152 + t1312 * t1456 + t670 * t1163 + t226 * t1160 + t185 * t1162 + (t1148 + t1454) * t883 + (t1149 + t1453) * t879 - t985;
t6 = t890 + t908;
t3 = t1370 / 0.2e1 + t895 - t1536;
t1 = t893 - t918;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t209, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t62 + qJD(3) * t60 + qJD(4) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1139, -qJD(2) * t1093, 0, 0, 0, 0, 0, 0, 0, 0 (-t1094 * t870 - t1404 * t736) * qJD(2) + t337 * qJD(3) (t1095 * t870 - t1404 * t737) * qJD(2) + t336 * qJD(3) (t736 * t881 + t737 * t885) * qJD(2) * t878, t1241 + (-t1139 * t1413 + t736 * t790 + t737 * t792) * qJD(2), 0, 0, 0, 0, 0, 0, t133 * qJD(3) + t194 * qJD(4) + t1487, t134 * qJD(3) + t1537, t1465, t1495 + (t547 * t610 + t548 * t611 + t736 * t758) * qJD(2) + t35 * qJD(3), 0, 0, 0, 0, 0, 0, t1465, t136 * qJD(3) + qJD(4) * t1524 - t1487, t139 * qJD(3) - t1537, t1495 + (t487 * t736 + t491 * t611 + t492 * t610) * qJD(2) + t25 * qJD(3) + t34 * qJD(4) + t1524 * qJD(5), 0, 0, 0, 0, 0, 0 (t424 * t783 - t611 * t678) * qJD(2) + t47 * qJD(3) + t113 * qJD(4) + t98 * qJD(6) (-t425 * t783 - t611 * t679) * qJD(2) + t50 * qJD(3) + t67 * qJD(4) + t97 * qJD(6) (t424 * t679 + t425 * t678) * qJD(2) + t30 * qJD(3) + t38 * qJD(4), t1366 + (-t185 * t424 + t186 * t425 + t395 * t611) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t58 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t337 - qJD(3) * t673, qJD(2) * t336 + t1266, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t133 + t974, qJD(2) * t134 + t973, t1468, t1494 + t35 * qJD(2) + (-pkin(3) * t673 + t1287) * qJD(3), 0, 0, 0, 0, 0, 0, t1468, qJD(2) * t136 - t974, qJD(2) * t139 - t973, t1494 + t25 * qJD(2) + (t673 * t823 + t1287) * qJD(3) + t116 * qJD(4) - t410 * qJD(5), 0, 0, 0, 0, 0, 0, t47 * qJD(2) + (-t1359 * t876 + t396 * t880) * qJD(3) + t157 * qJD(4) + t122 * qJD(6), t50 * qJD(2) + (t1327 * t672 - t397 * t880) * qJD(3) + t158 * qJD(4) + t121 * qJD(6), t30 * qJD(2) + t73 * qJD(4) + (t396 * t879 - t397 * t883) * t1220, t1374 + t1 * qJD(2) + (-t1498 * t412 - t396 * t670 + t397 * t671) * qJD(3) + t14 * qJD(4) - t73 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194 - t1288, -t1538, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1538, t34 * qJD(2) + t116 * qJD(3) + (-pkin(4) * t490 - t1383) * qJD(4) + t490 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(2) * t113 + qJD(3) * t157 + t1248 * t490 - t1258 * t489, qJD(2) * t67 + qJD(3) * t158 - t1250 * t490 - t1256 * t489, t38 * qJD(2) - t1283 * t485 + t1349, t1365 + t3 * qJD(2) + t14 * qJD(3) + (-t1283 * t1459 * t490 - t1383) * qJD(4) + t171 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t58 + qJD(4) * t171 - t1349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t98 + qJD(3) * t122 - qJD(6) * t302 + t485 * t883, qJD(2) * t97 + qJD(3) * t121 + qJD(6) * t301 - t485 * t879, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334 * qJD(3), -t335 * qJD(3), 0, -t1241, 0, 0, 0, 0, 0, 0, qJD(3) * t132 + qJD(4) * t193, qJD(3) * t135 - t1539, t1503, qJD(3) * t36 - t1495, 0, 0, 0, 0, 0, 0, t1503, qJD(3) * t137 + qJD(4) * t1508, qJD(3) * t138 + t1539, qJD(3) * t26 + qJD(4) * t33 + qJD(5) * t1508 - t1495, 0, 0, 0, 0, 0, 0, qJD(3) * t48 + qJD(4) * t114 - qJD(6) * t95, qJD(3) * t49 + qJD(4) * t68 - qJD(6) * t96, -qJD(3) * t29 + qJD(4) * t37, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t59 - t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1111, t797 * qJD(3), t885 * t1091, -t1111, -t881 * t1091, 0, t690 * qJD(3), -t689 * qJD(3), 0, 0, t463, -qJD(3) * t511 + t1485, -t1464, t935, -t1515, -t1111, -qJD(3) * t189 - qJD(4) * t314, qJD(3) * t190 + qJD(4) * t313, qJD(3) * t129, qJD(3) * t146, -t1111, t1464, t1515, t463, -qJD(3) * t510 + t1485, t935, qJD(3) * t108 + qJD(4) * t94 + t1197 * t781, qJD(3) * t124 + qJD(4) * t169 + t1227 * t783, qJD(3) * t123 + qJD(4) * t170 + qJD(5) * t719, qJD(3) * t87 + qJD(4) * t84 + qJD(5) * t210 (-qJD(3) * t742 - qJD(6) * t678 - t1258 * t783) * t679, qJD(3) * t276 + qJD(4) * t297 + qJD(6) * t319, qJD(3) * t357 + qJD(4) * t430 + t1251 * t678 (-qJD(3) * t741 + qJD(6) * t679 + t1256 * t783) * t678, qJD(3) * t356 + qJD(4) * t431 + t1251 * t679, t463, qJD(3) * t45 + qJD(4) * t41 - qJD(5) * t400 + qJD(6) * t93, qJD(3) * t46 + qJD(4) * t42 + qJD(5) * t486 + qJD(6) * t92, qJD(3) * t27 + qJD(4) * t24 + qJD(5) * t298, qJD(3) * t23 + qJD(4) * t16 + qJD(5) * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1110, t1223, t1050 * t1324, -t1110, -t1050 * t1326, 0, -qJD(3) * t792 - t1032, qJD(3) * t790 - t1031, 0, 0, t1493 + t1507, -t1275 + t1534, t1519, t1525, t1532, -t759 (t1008 * t880 - t792 * t884) * qJD(3) + t306 * qJD(4) + t1039 (t1008 * t884 + t792 * t880) * qJD(3) + t304 * qJD(4) + t1038, qJD(3) * t1053 + t1047 (-t792 * pkin(3) + pkin(10) * t1053) * qJD(3) + t1046, -t759, -t1519, -t1532, -t560 + t1507, -t1276 + t1534, t1525, qJD(3) * t1054 + t91 * qJD(4) + t1049 (t642 * t884 + t880 * t978) * qJD(3) + t143 * qJD(4) + t545 * qJD(5) + t1040 (-t642 * t880 + t884 * t978) * qJD(3) + t141 * qJD(4) + t1194 + t1041 (pkin(10) * t1054 + t642 * t823) * qJD(3) + t57 * qJD(4) + t206 * qJD(5) + t1066, t327 * qJD(4) + t1521 + (-t1201 - t1269) * t742, t1240 + t201 * qJD(4) - t261 + (-t1340 + t1341) * t1220, t1233 + (-t517 * t876 + t742 * t880) * qJD(3) + t311 * qJD(4) + t351 * qJD(6), t330 * qJD(4) - t1521 + (t1200 - t1270) * t741, t1234 + (-t1207 * t876 - t741 * t880) * qJD(3) + t312 * qJD(4) + t349 * qJD(6), -t1003 - t1535 (t248 * t880 + t1498 * t741 + (-t1324 * t670 + t1384) * t884) * qJD(3) + t19 * qJD(4) + t549 * qJD(5) + t54 * qJD(6) + t1062 (-t249 * t880 + t1498 * t742 + (-t1324 * t671 - t1385) * t884) * qJD(3) + t20 * qJD(4) + t883 * t1194 + t53 * qJD(6) + t1061 (t670 * t742 - t671 * t741 + (t248 * t879 - t249 * t883) * t884) * qJD(3) + t8 * qJD(4) + t173 * qJD(5) + t1065 (t1498 * t488 - t248 * t670 + t249 * t671) * qJD(3) + t6 * qJD(4) + t21 * qJD(5) + t1076; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1473, t1514, t1015, t1473, t1511, t844, qJD(3) * t306 - t1034 - t1259, qJD(3) * t304 - t1035 + t1260, 0, 0, t844, -t831 * t781, -t1511, -t976, t1514, t1473, t1294 + t91 * qJD(3) + (-t1337 + t1409) * qJD(4) - t1227, qJD(3) * t143 - t1037 + t1259, qJD(3) * t141 - t1036 - t1197 - t1260, t57 * qJD(3) + (-pkin(4) * t548 - qJ(5) * t547) * qJD(4) + t491 * qJD(5) + t1064, t327 * qJD(3) + t879 * t967 + t1492, t201 * qJD(3) - t1136 * t783 + t1239 - t279, qJD(3) * t311 - t769 * t883 + t1280, t330 * qJD(3) + t1021 * t1335 - t1492, qJD(3) * t312 + t769 * t879 + t1279, t1479, t19 * qJD(3) + (-t1068 * t883 + t438 * t879) * qJD(4) - t678 * qJD(5) + t100 * qJD(6) + t1048, t20 * qJD(3) + (t1068 * t879 + t438 * t883) * qJD(4) - qJD(5) * t679 + t102 * qJD(6) + t1063, t8 * qJD(3) - qJD(4) * t1055 + t1067, t6 * qJD(3) + (t438 * qJ(5) - t1055 * t1459) * qJD(4) + t75 * qJD(5) + t1077; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1015, qJD(3) * t545 + t1195, t912, qJD(3) * t206 + qJD(4) * t491 + t1033, 0, 0, 0, 0, 0, 0, qJD(3) * t549 - qJD(4) * t678 - t1281, -qJD(4) * t679 + t783 * t859 + t1231, qJD(3) * t173 + t1282, qJD(3) * t21 + qJD(4) * t75 + t1060; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1513, t939, qJD(3) * t351 + t1124 * t678, t1513, qJD(3) * t349 + t1124 * t679, t669, qJD(3) * t54 + qJD(4) * t100 - qJD(6) * t186 - t1058, qJD(3) * t53 + qJD(4) * t102 + qJD(6) * t185 + t1059, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334 * qJD(2), t335 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t132, -qJD(2) * t135, -t1505, -qJD(2) * t36 - t1494, 0, 0, 0, 0, 0, 0, -t1505, -qJD(2) * t137, -qJD(2) * t138, -qJD(2) * t26 - qJD(4) * t115 - t1494, 0, 0, 0, 0, 0, 0, -qJD(2) * t48 - qJD(4) * t155 - qJD(6) * t119, -qJD(2) * t49 - qJD(4) * t156 - qJD(6) * t120, qJD(2) * t29 + qJD(4) * t72, -qJD(2) * t2 - qJD(4) * t13 - qJD(5) * t72 - t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1110, -t1223, -t885 * t1092, t1110, t881 * t1092, 0, t1032, t1031, 0, 0, -t700 + t1493, -t1527 + t1275, -t1520, t1517, t1533, t759, qJD(4) * t305 - t1039, qJD(4) * t303 - t1038, -t1047, -t1046, t759, t1520, -t1533, -t560 - t700, -t1527 + t1276, t1517, -qJD(4) * t90 - t1197 * t884 - t1049, -qJD(4) * t142 - qJD(5) * t544 - t1040, -qJD(4) * t140 - t1041 + t1194, -qJD(4) * t56 - qJD(5) * t205 - t1066, qJD(4) * t328 + t1269 * t742 + t1521, qJD(4) * t202 - t1240 - t261, -qJD(4) * t310 - qJD(6) * t350 - t1233, qJD(4) * t329 + t1270 * t741 - t1521, -qJD(4) * t309 - qJD(6) * t348 - t1234, t1493 + t1003, -qJD(4) * t18 - qJD(5) * t484 - qJD(6) * t51 - t1062, -qJD(4) * t17 - qJD(5) * t648 - qJD(6) * t52 - t1061, -qJD(4) * t7 + qJD(5) * t174 - t1065, -qJD(4) * t5 + qJD(5) * t22 - t1076; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t857, t836, 0, -t857, 0, 0, -pkin(3) * t1257, -pkin(3) * t868, 0, 0, 0, 0, 0, t857, t836, -t857, 0, qJD(4) * t688 - t1252 * t880, -qJD(4) * t687 + qJD(5) * t874 (qJD(4) * t835 - t1254) * t823, -t857 * t873 + t1112, -qJD(6) * t810 - 0.2e1 * t1113 * t880, -qJD(4) * t809 - t1196 * t883, -t857 * t875 - t1112, -qJD(4) * t811 + t1196 * t879, t857, qJD(4) * t289 + qJD(6) * t513 + t1255 * t874, -qJD(4) * t290 - qJD(6) * t512 + t1253 * t874, -qJD(4) * t203 + qJD(5) * t770, qJD(4) * t208 - qJD(5) * t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1526, t1516, -t787, -t1526, t785, t843, -t1006 - t867, -t1007 + t1216, 0, 0, t843, t787, -t785, -t1129, t1516, -t1526, t917 - t1295, -t1029 + t867, -t1030 - t1216, pkin(10) * t917 + t933, t1238 - t1224 + (-t1220 * t873 + t858) * t880, t1242 + t822 + (-0.2e1 * t1109 - t1136) * t880, t1026 + t860, t1237 + t1224 + (-t1220 * t875 - t858) * t880, t1027 - t1198, t1470 (-t883 * t1296 + (-qJ(5) * t883 - t1458 * t879) * t880) * qJD(4) + t883 * t1252 + t542 * qJD(6) + t941 (t879 * t1296 + (qJ(5) * t879 - t1458 * t883) * t880) * qJD(4) - t879 * t1252 + t543 * qJD(6) + t940, -qJD(4) * t1051 - t1482 (-qJ(5) * t1499 - t1051 * t1459) * qJD(4) + t343 * qJD(5) + t952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t787, -t1131, -t701, -t977 + t867, 0, 0, 0, 0, 0, 0, t1265 * t879 - t1232 + t860, t1262 * t874 - t1198 - t1228, t1028, qJD(4) * t343 + t1483; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1512, t914, -t1123 * t1299 - t1235, t1512, t1123 * t1315 - t1236, qJD(2) * t1102 + t864, qJD(4) * t542 - qJD(6) * t671 + t943, qJD(4) * t543 + qJD(6) * t670 + t942, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t193, t1540, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1522, -t1540, -qJD(2) * t33 + qJD(3) * t115, 0, 0, 0, 0, 0, 0, -qJD(2) * t114 + qJD(3) * t155, -qJD(2) * t68 + qJD(3) * t156, -qJD(2) * t37 - t1400, -qJD(2) * t4 + qJD(3) * t13 + qJD(5) * t172 - t1365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1473, -t1514, -t647, -t1473, -t1484, t844, -qJD(3) * t305 + t1034, -qJD(3) * t303 + t1035, 0, 0, t844, t647, t1484, t976, -t1514, -t1473, qJD(3) * t90 - t1294, qJD(3) * t142 + t1037, qJD(3) * t140 + t1036 - t1197, -qJ(5) * t1197 + qJD(3) * t56 - t1064, -qJD(3) * t328 + t1204 * t679 + t1492, -qJD(3) * t202 - t1239 - t279, qJD(3) * t310 - t1250 * t783 - t1280, -qJD(3) * t329 - t1203 * t678 - t1492, qJD(3) * t309 - t1248 * t783 - t1279, -t1479, qJD(3) * t18 - qJD(5) * t517 + qJD(6) * t99 - t1048, qJD(3) * t17 + qJD(6) * t101 - t1197 * t883 - t1063, qJD(3) * t7 - t1067, qJD(3) * t5 + qJD(5) * t76 - t1077; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1526, -t1516, t1107, t1526, -t1108, t842, t1006, t1007, 0, 0, t842, -t1107, t1108, t1129, -t1516, t1526, t1295, t1029, t1030, -t933, t856 * t873 - t1224 - t1238, t1089 * t880 - t1242 + t822, -t1249 * t879 - t1026, t856 * t875 + t1224 - t1237, -t1248 * t880 - t1027, -t1470, qJD(6) * t640 - t941, qJD(6) * t641 - t940, t1482, qJD(5) * t344 - t952; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t871, -t1190, t851 * qJD(6), 0, t1190, 0, 0, qJ(5) * t1248 + t1255, -qJ(5) * t1250 + t1253, 0, t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t831, -t803, 0, 0, 0, 0, 0, 0, -t1022, -t786, 0, t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1518, t913, -t1124 * t879 - t855, t1518, t965, t1009, t1247 * t879 - t934, t1247 * t883 - t930, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1522, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t59 - qJD(4) * t172 + t1400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t647, qJD(3) * t544 - t1195, -t912, qJ(5) * t1199 + qJD(3) * t205 - t1033, 0, 0, 0, 0, 0, 0, qJD(3) * t484 + qJD(4) * t517 - qJD(6) * t589 + t1281, -t1231 + t648 * qJD(3) + (t1199 - t1251) * t883, -qJD(3) * t174 - t1282, -qJD(3) * t22 - qJD(4) * t76 - t1060; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1107, t1131, t701, t977, 0, 0, 0, 0, 0, 0, t1019 * t879 + t1232, t1019 * t883 + t1228, -t1028, -qJD(4) * t344 - t1483; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t831, t803, 0, 0, 0, 0, 0, 0, t1022, t786, 0, -t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1130 - t1250, t965, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t95 + qJD(3) * t119, qJD(2) * t96 + qJD(3) * t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1513, -t939, t350 * qJD(3) - t1021 * t783, -t1513, t348 * qJD(3) + t967, t669, qJD(3) * t51 - qJD(4) * t99 + qJD(5) * t589 + t1058, qJD(3) * t52 - qJD(4) * t101 + t1253 * t783 - t1059, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1512, -t914, t1235 + (t1200 + t1258) * t880, -t1512, t1236 + (-t1201 + t1256) * t880, qJD(2) * t1101 + t864, -qJD(4) * t640 + t1254 * t879 - t943, -qJD(4) * t641 + t1253 * t880 - t942, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1518, -t913, t855 + t1204, -t1518, t1081, -t1009, t934, t930, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1130, t1081, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
