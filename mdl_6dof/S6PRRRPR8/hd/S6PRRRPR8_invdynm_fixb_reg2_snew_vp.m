% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 09:15
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 09:12:58
% EndTime: 2019-05-05 09:14:49
% DurationCPUTime: 118.74s
% Computational Cost: add. (471369->1135), mult. (987320->1678), div. (0->0), fcn. (789371->14), ass. (0->794)
t2081 = sin(pkin(7));
t2092 = cos(qJ(3));
t2285 = t2081 * t2092;
t2268 = qJD(2) * t2285;
t2066 = -qJD(4) + t2268;
t2327 = t2066 ^ 2;
t2087 = sin(qJ(4));
t2091 = cos(qJ(4));
t2084 = cos(pkin(7));
t2311 = qJD(2) * t2084;
t2252 = qJD(3) + t2311;
t2088 = sin(qJ(3));
t2286 = t2081 * t2088;
t2269 = qJD(2) * t2286;
t2036 = t2087 * t2252 + t2091 * t2269;
t2328 = t2036 ^ 2;
t1989 = t2328 + t2327;
t2272 = qJDD(2) * t2081;
t2044 = -qJD(3) * t2269 + t2092 * t2272;
t2039 = -qJDD(4) + t2044;
t2034 = t2087 * t2269 - t2091 * t2252;
t2295 = t2036 * t2034;
t2110 = t2039 - t2295;
t2352 = t2110 * t2087;
t1884 = t1989 * t2091 - t2352;
t2351 = t2110 * t2091;
t1885 = t1989 * t2087 + t2351;
t2270 = t2088 * qJDD(2);
t2310 = qJD(2) * t2092;
t2043 = (qJD(3) * t2310 + t2270) * t2081;
t2248 = qJDD(2) * t2084 + qJDD(3);
t2111 = t2091 * t2043 + t2087 * t2248;
t2277 = qJD(4) - t2066;
t1929 = t2034 * t2277 - t2111;
t2181 = t1885 * t2088 + t1929 * t2092;
t1755 = -t2084 * t1884 + t2081 * t2181;
t2082 = sin(pkin(6));
t2085 = cos(pkin(6));
t1757 = t2081 * t1884 + t2084 * t2181;
t1811 = t1885 * t2092 - t1929 * t2088;
t2089 = sin(qJ(2));
t2093 = cos(qJ(2));
t2203 = t1757 * t2093 + t1811 * t2089;
t1625 = t2085 * t1755 + t2082 * t2203;
t1627 = -t2082 * t1755 + t2085 * t2203;
t2464 = pkin(8) * (t1625 * t2082 + t1627 * t2085);
t1683 = t1757 * t2089 - t1811 * t2093;
t2080 = sin(pkin(12));
t2083 = cos(pkin(12));
t2463 = qJ(1) * (t1627 * t2083 - t1683 * t2080);
t2462 = qJ(1) * (t1627 * t2080 + t1683 * t2083);
t2461 = pkin(1) * t1625;
t2460 = pkin(1) * t1627;
t2346 = -t2328 + t2327;
t2109 = t2039 + t2295;
t2354 = t2087 * t2109;
t1892 = t2091 * t2346 - t2354;
t2353 = t2091 * t2109;
t1895 = t2087 * t2346 + t2353;
t1976 = -t2034 * qJD(4) + t2111;
t2296 = t2034 * t2066;
t1930 = t2296 - t1976;
t2179 = t1895 * t2088 - t1930 * t2092;
t1759 = -t2084 * t1892 + t2081 * t2179;
t1763 = t1892 * t2081 + t2084 * t2179;
t1817 = t1895 * t2092 + t1930 * t2088;
t2201 = t1763 * t2093 + t1817 * t2089;
t1640 = -t2082 * t1759 + t2085 * t2201;
t1689 = t1763 * t2089 - t1817 * t2093;
t2457 = t1640 * t2080 + t1689 * t2083;
t2456 = t1640 * t2083 - t1689 * t2080;
t2454 = pkin(8) * t1683;
t1636 = t2085 * t1759 + t2082 * t2201;
t2449 = pkin(9) * (t1755 * t2081 + t1757 * t2084);
t2448 = pkin(2) * t1755;
t2447 = pkin(2) * t1757;
t2441 = pkin(9) * t1811;
t2031 = t2034 ^ 2;
t1981 = -t2327 - t2031;
t1875 = t1981 * t2087 - t2353;
t2436 = pkin(3) * t1875;
t2435 = pkin(3) * t1884;
t2434 = pkin(10) * t1875;
t1877 = t1981 * t2091 + t2354;
t2433 = pkin(10) * t1877;
t2432 = pkin(10) * t1884;
t2431 = pkin(10) * t1885;
t2430 = t1877 * t2088;
t2429 = t1877 * t2092;
t2008 = t2327 - t2031;
t1898 = t2008 * t2091 - t2352;
t2428 = t1898 * t2088;
t2427 = t1898 * t2092;
t2426 = t2081 * t1875;
t1894 = t2008 * t2087 + t2351;
t2423 = t2081 * t1894;
t2422 = t2084 * t1875;
t2419 = t2084 * t1894;
t2249 = t2087 * t2043 - t2091 * t2248;
t2149 = qJD(4) * t2036 + t2249;
t2288 = t2066 * t2091;
t2102 = -t2034 * t2288 + t2087 * t2149;
t2264 = t2088 * t2295;
t2334 = t2092 * t2102 - t2264;
t2289 = t2066 * t2087;
t2240 = -t2034 * t2289 - t2091 * t2149;
t2263 = t2092 * t2295;
t2336 = t2088 * t2102 + t2263;
t2364 = -t2081 * t2240 + t2084 * t2336;
t2386 = -t2089 * t2364 + t2093 * t2334;
t2366 = t2081 * t2336 + t2084 * t2240;
t2384 = t2089 * t2334 + t2093 * t2364;
t2405 = -t2082 * t2366 + t2085 * t2384;
t2418 = -t2080 * t2405 + t2083 * t2386;
t2239 = t1976 * t2091 + t2036 * t2289;
t2332 = t2092 * t2239 + t2264;
t2241 = t1976 * t2087 - t2036 * t2288;
t2335 = t2088 * t2239 - t2263;
t2365 = -t2081 * t2241 + t2084 * t2335;
t2385 = -t2089 * t2365 + t2093 * t2332;
t2367 = t2081 * t2335 + t2084 * t2241;
t2383 = t2089 * t2332 + t2093 * t2365;
t2406 = -t2082 * t2367 + t2085 * t2383;
t2417 = -t2080 * t2406 + t2083 * t2385;
t2416 = t2080 * t2386 + t2083 * t2405;
t2415 = t2080 * t2385 + t2083 * t2406;
t2326 = -2 * qJD(5);
t2143 = (t2034 * t2087 + t2036 * t2091) * t2066;
t2144 = (t2034 * t2091 - t2036 * t2087) * t2066;
t2330 = -t2081 * t2143 + (t2039 * t2092 + t2088 * t2144) * t2084;
t2333 = -t2039 * t2088 + t2092 * t2144;
t2362 = -t2089 * t2330 + t2093 * t2333;
t2331 = t2039 * t2285 + t2084 * t2143 + t2144 * t2286;
t2363 = t2089 * t2333 + t2093 * t2330;
t2387 = -t2082 * t2331 + t2085 * t2363;
t2410 = -t2080 * t2387 + t2083 * t2362;
t2409 = t2082 * t2383 + t2085 * t2367;
t2408 = t2082 * t2384 + t2085 * t2366;
t2407 = t2080 * t2362 + t2083 * t2387;
t1953 = -t2328 - t2031;
t2404 = pkin(3) * t1953;
t2401 = t1930 * t2087;
t2399 = t1930 * t2091;
t2397 = t1953 * t2088;
t2396 = t1953 * t2092;
t2315 = g(3) - qJDD(1);
t2256 = t2082 * t2315;
t2257 = g(1) * t2080 - g(2) * t2083;
t2106 = t2085 * t2257 - t2256;
t2274 = g(1) * t2083 + g(2) * t2080;
t1996 = t2089 * t2106 - t2093 * t2274;
t2094 = qJD(2) ^ 2;
t1984 = -t2094 * pkin(2) + pkin(9) * t2272 + t1996;
t2323 = pkin(3) * t2092;
t2245 = -pkin(10) * t2088 - t2323;
t2312 = qJD(2) * t2081;
t2042 = t2245 * t2312;
t2247 = t2252 ^ 2;
t1995 = -t2089 * t2274 - t2093 * t2106;
t2316 = pkin(9) * t2081;
t2097 = qJDD(2) * pkin(2) + t2094 * t2316 - t1995;
t2056 = t2082 * t2257;
t2234 = t2085 * t2315 + t2056;
t2368 = -t2081 * t2234 + t2084 * t2097;
t2275 = t2368 * t2092;
t1843 = t2088 * (t2042 * t2312 + t1984) - t2248 * pkin(3) - t2247 * pkin(10) - t2275;
t2347 = t2296 + t1976;
t2100 = t2149 * pkin(4) - qJ(5) * t2347 + t1843;
t2389 = t2036 * t2326 + t2100;
t2388 = t2082 * t2363 + t2085 * t2331;
t2086 = sin(qJ(6));
t2090 = cos(qJ(6));
t1998 = -t2034 * t2090 - t2066 * t2086;
t2000 = t2034 * t2086 - t2066 * t2090;
t1940 = t2000 * t1998;
t1973 = qJDD(6) + t1976;
t2349 = -t1940 + t1973;
t2380 = t2086 * t2349;
t2378 = t2087 * t2347;
t2345 = t2328 - t2031;
t2377 = t2088 * t2345;
t2374 = t2090 * t2349;
t2372 = t2091 * t2347;
t2371 = t2092 * t2345;
t1932 = t1995 * t2089 + t1996 * t2093;
t1916 = t1932 * t2082;
t2077 = t2081 ^ 2;
t2287 = t2077 * t2094;
t2232 = qJD(2) * t2252;
t2361 = t2077 * (-t2084 * t2094 + t2232);
t2360 = t2080 * t2315;
t2357 = t2083 * t2315;
t2146 = t2089 * t2234;
t2145 = t2093 * t2234;
t1867 = t2092 * t1984 + t2088 * t2368;
t1844 = -pkin(3) * t2247 + pkin(10) * t2248 + t2042 * t2268 + t1867;
t1941 = t2081 * t2097 + t2084 * t2234;
t2154 = t2081 * t2232;
t2055 = t2092 * t2154;
t2011 = t2055 + t2043;
t2054 = t2088 * t2154;
t2015 = t2044 - t2054;
t1856 = -pkin(3) * t2015 - pkin(10) * t2011 - t1941;
t1753 = t2087 * t1844 - t1856 * t2091;
t1986 = pkin(4) * t2034 - qJ(5) * t2036;
t1718 = pkin(4) * t2039 - qJ(5) * t2327 + t2036 * t1986 + qJDD(5) + t1753;
t1677 = -pkin(5) * t1930 + pkin(11) * t2109 + t1718;
t2003 = pkin(5) * t2036 + pkin(11) * t2066;
t2258 = -pkin(4) * t2066 + t2326;
t1687 = t2249 * pkin(11) - t2031 * pkin(5) + (pkin(11) * qJD(4) - t2003 + t2258) * t2036 + t2100;
t1604 = -t1677 * t2090 + t1687 * t2086;
t1605 = t1677 * t2086 + t1687 * t2090;
t2350 = -t1604 * t2090 + t2086 * t1605;
t1879 = -qJD(6) * t1998 - t2039 * t2090 + t2086 * t2149;
t2029 = qJD(6) + t2036;
t1964 = t2029 * t1998;
t2348 = -t1964 + t1879;
t1754 = t2091 * t1844 + t2087 * t1856;
t2107 = -pkin(4) * t2327 - t2034 * t1986 + t1754;
t2103 = 0.2e1 * qJD(5) * t2066 - t2107;
t2343 = pkin(4) * t1989 - qJ(5) * (t2110 + t2039) - t2103;
t2313 = t2039 * qJ(5);
t1681 = -t2313 - t2149 * pkin(5) - t2031 * pkin(11) + (t2326 - t2003) * t2066 + t2107;
t2325 = pkin(4) + pkin(11);
t2342 = qJ(5) * t1681 - t2325 * t2350;
t2250 = t2086 * t2039 + t2090 * t2149;
t1831 = (-qJD(6) + t2029) * t2000 + t2250;
t1833 = t1964 + t1879;
t1736 = t1831 * t2086 - t1833 * t2090;
t1997 = t1998 ^ 2;
t2329 = t2000 ^ 2;
t1880 = -t1997 - t2329;
t2341 = qJ(5) * t1880 - t1736 * t2325 - t2350;
t2026 = t2029 ^ 2;
t1899 = -t2026 - t1997;
t1794 = t1899 * t2086 + t2374;
t1966 = t2000 * t2029;
t2148 = qJD(6) * t2000 - t2250;
t1829 = t1966 + t2148;
t2282 = t2086 * t1681;
t2340 = qJ(5) * t1829 - t1794 * t2325 + t2282;
t1680 = t2090 * t1681;
t2260 = -t2026 - t2329;
t1865 = t1940 + t1973;
t2281 = t2086 * t1865;
t1799 = t2090 * t2260 - t2281;
t2339 = qJ(5) * t2348 - t1799 * t2325 + t1680;
t2338 = -t2080 * t2257 - t2083 * t2274;
t2337 = -t2080 * t2274 + t2083 * t2257;
t2324 = pkin(3) * t2088;
t2322 = pkin(4) * t2087;
t2321 = pkin(4) * t2091;
t2320 = pkin(5) * t2350;
t2319 = pkin(5) * t1681;
t2318 = pkin(5) * t1736;
t2317 = pkin(8) * t2085;
t2308 = t1843 * t2087;
t2307 = t1843 * t2091;
t2306 = t1865 * t2090;
t2018 = t2036 * t2066;
t1922 = -t2018 + t2149;
t2305 = t1922 * t2091;
t2298 = t2029 * t2086;
t2297 = t2029 * t2090;
t2065 = t2088 * t2092 * t2287;
t2040 = -t2065 + t2248;
t2293 = t2040 * t2088;
t2292 = t2040 * t2092;
t2041 = t2065 + t2248;
t2291 = t2041 * t2088;
t2290 = t2041 * t2092;
t2280 = t2088 * t1941;
t2279 = t2092 * t1941;
t2078 = t2088 ^ 2;
t2079 = t2092 ^ 2;
t2273 = t2078 + t2079;
t2271 = t2082 * qJDD(2);
t2267 = t2087 * t1940;
t2266 = t2091 * t1940;
t2265 = t2000 * t2298;
t2262 = t2078 * t2287;
t2261 = t2079 * t2287;
t2259 = qJ(5) * t2087 + pkin(3);
t1661 = t1753 * t2087 + t1754 * t2091;
t1715 = -t2103 - t2313;
t2244 = -pkin(4) * t1718 + qJ(5) * t1715;
t1923 = (-qJD(4) - t2066) * t2036 - t2249;
t2243 = pkin(4) * t1930 + qJ(5) * t1923;
t2238 = pkin(5) * t1829 + t1680;
t2237 = pkin(5) * t2348 - t2282;
t2027 = -t2262 - t2247;
t1983 = -t2027 * t2088 - t2292;
t2236 = pkin(9) * t1983 - t2280;
t2047 = -t2247 - t2261;
t1993 = t2047 * t2092 - t2291;
t2235 = pkin(9) * t1993 + t2279;
t1529 = t1681 * t2087 - t2091 * t2350;
t1530 = t1681 * t2091 + t2087 * t2350;
t1545 = t2086 * t1604 + t2090 * t1605;
t2230 = t1530 * t2088 - t1545 * t2092;
t1483 = -t2081 * t1529 + t2084 * t2230;
t1498 = t1530 * t2092 + t1545 * t2088;
t2231 = t1483 * t2093 + t1498 * t2089;
t1629 = t1715 * t2087 - t1718 * t2091;
t1630 = t1715 * t2091 + t1718 * t2087;
t1735 = t2036 * t2258 + t2100;
t2221 = t1630 * t2088 - t1735 * t2092;
t1548 = -t2081 * t1629 + t2084 * t2221;
t1588 = t1630 * t2092 + t1735 * t2088;
t2229 = t1548 * t2093 + t1588 * t2089;
t1660 = -t1753 * t2091 + t1754 * t2087;
t2218 = t1661 * t2088 - t1843 * t2092;
t1574 = -t2081 * t1660 + t2084 * t2218;
t1633 = t1661 * t2092 + t1843 * t2088;
t2228 = t1574 * t2093 + t1633 * t2089;
t1694 = -t1736 * t2091 + t1880 * t2087;
t1695 = t1736 * t2087 + t1880 * t2091;
t1739 = t1831 * t2090 + t1833 * t2086;
t2216 = t1695 * t2088 - t1739 * t2092;
t1583 = -t2081 * t1694 + t2084 * t2216;
t1624 = t1695 * t2092 + t1739 * t2088;
t2227 = t1583 * t2093 + t1624 * t2089;
t1737 = -t1829 * t2086 + t2090 * t2348;
t1939 = -t1997 + t2329;
t1705 = -t1737 * t2091 + t1939 * t2087;
t1706 = t1737 * t2087 + t1939 * t2091;
t1738 = t1829 * t2090 + t2086 * t2348;
t2215 = t1706 * t2088 + t1738 * t2092;
t1587 = -t2081 * t1705 + t2084 * t2215;
t1635 = t1706 * t2092 - t1738 * t2088;
t2226 = t1587 * t2093 + t1635 * t2089;
t1716 = -t1794 * t2091 + t1829 * t2087;
t1717 = t1794 * t2087 + t1829 * t2091;
t1795 = t1899 * t2090 - t2380;
t2212 = t1717 * t2088 - t1795 * t2092;
t1601 = -t1716 * t2081 + t2084 * t2212;
t1655 = t1717 * t2092 + t1795 * t2088;
t2225 = t1601 * t2093 + t1655 * t2089;
t1723 = -t1799 * t2091 + t2087 * t2348;
t1724 = t1799 * t2087 + t2091 * t2348;
t1800 = -t2086 * t2260 - t2306;
t2209 = t1724 * t2088 - t1800 * t2092;
t1611 = -t2081 * t1723 + t2084 * t2209;
t1671 = t1724 * t2092 + t1800 * t2088;
t2224 = t1611 * t2093 + t1671 * t2089;
t1956 = t1997 - t2026;
t1815 = t1956 * t2086 + t2306;
t1830 = -t1966 + t2148;
t1729 = -t1815 * t2091 - t1830 * t2087;
t1731 = t1815 * t2087 - t1830 * t2091;
t1814 = -t1956 * t2090 + t2281;
t2208 = t1731 * t2088 + t1814 * t2092;
t1615 = -t2081 * t1729 + t2084 * t2208;
t1675 = t1731 * t2092 - t1814 * t2088;
t2223 = t1615 * t2093 + t1675 * t2089;
t1957 = t2026 - t2329;
t1813 = t1957 * t2090 + t2380;
t1730 = -t1813 * t2091 + t1833 * t2087;
t1732 = t1813 * t2087 + t1833 * t2091;
t1816 = t1957 * t2086 - t2374;
t2207 = t1732 * t2088 + t1816 * t2092;
t1616 = -t2081 * t1730 + t2084 * t2207;
t1676 = t1732 * t2092 - t1816 * t2088;
t2222 = t1616 * t2093 + t1676 * t2089;
t1823 = -t1998 * t2298 + t2090 * t2148;
t1775 = t1823 * t2091 - t2267;
t1777 = -t1823 * t2087 - t2266;
t1955 = t1998 * t2297;
t1825 = t2086 * t2148 + t1955;
t2197 = t1777 * t2088 - t1825 * t2092;
t1648 = -t1775 * t2081 + t2084 * t2197;
t1697 = t1777 * t2092 + t1825 * t2088;
t2220 = t1648 * t2093 + t1697 * t2089;
t1826 = t1879 * t2086 + t2000 * t2297;
t1776 = -t1826 * t2091 + t2267;
t1778 = t1826 * t2087 + t2266;
t1824 = -t1879 * t2090 + t2265;
t2196 = t1778 * t2088 + t1824 * t2092;
t1649 = -t2081 * t1776 + t2084 * t2196;
t1698 = t1778 * t2092 - t1824 * t2088;
t2219 = t1649 * t2093 + t1698 * t2089;
t1871 = (-t1998 * t2086 - t2000 * t2090) * t2029;
t1821 = -t1871 * t2091 + t1973 * t2087;
t1822 = t1871 * t2087 + t1973 * t2091;
t1872 = t1955 - t2265;
t2191 = t1822 * t2088 + t1872 * t2092;
t1685 = -t2081 * t1821 + t2084 * t2191;
t1752 = t1822 * t2092 - t1872 * t2088;
t2217 = t1685 * t2093 + t1752 * t2089;
t1835 = t1923 * t2087 + t2399;
t1839 = t1923 * t2091 - t2401;
t2190 = t1839 * t2088 - t2396;
t1712 = -t2081 * t1835 + t2084 * t2190;
t1782 = t1839 * t2092 + t2397;
t2214 = t1712 * t2093 + t1782 * t2089;
t1921 = t2018 + t2149;
t1838 = -t1921 * t2087 + t2399;
t1842 = -t1921 * t2091 - t2401;
t2187 = t1842 * t2088 - t2396;
t1713 = -t2081 * t1838 + t2084 * t2187;
t1783 = t1842 * t2092 + t2397;
t2213 = t1713 * t2093 + t1783 * t2089;
t1924 = -t2036 * t2277 - t2249;
t1836 = t1924 * t2087 + t2372;
t1840 = t1924 * t2091 - t2378;
t2189 = t1840 * t2088 - t2371;
t1721 = -t2081 * t1836 + t2084 * t2189;
t1797 = t1840 * t2092 + t2377;
t2211 = t1721 * t2093 + t1797 * t2089;
t1837 = -t1922 * t2087 + t2372;
t1841 = -t2305 - t2378;
t2188 = t1841 * t2088 - t2371;
t1722 = -t2081 * t1837 + t2084 * t2188;
t1798 = t1841 * t2092 + t2377;
t2210 = t1722 * t2093 + t1798 * t2089;
t1866 = t2088 * t1984 - t2275;
t2184 = -t2092 * t1866 + t2088 * t1867;
t1744 = t2081 * t1941 + t2084 * t2184;
t1779 = t1866 * t2088 + t1867 * t2092;
t2206 = t1744 * t2093 + t1779 * t2089;
t2183 = t1924 * t2092 + t2430;
t1747 = t2084 * t2183 - t2426;
t1807 = -t1924 * t2088 + t2429;
t2205 = t1747 * t2093 + t1807 * t2089;
t2182 = t1922 * t2092 - t2430;
t1748 = t2084 * t2182 + t2426;
t1808 = -t1922 * t2088 - t2429;
t2204 = t1748 * t2093 + t1808 * t2089;
t2177 = -t1923 * t2092 - t2428;
t1765 = t2084 * t2177 + t2423;
t1819 = t1923 * t2088 - t2427;
t2199 = t1765 * t2093 + t1819 * t2089;
t2176 = -t1921 * t2092 + t2428;
t1766 = t2084 * t2176 - t2423;
t1820 = t1921 * t2088 + t2427;
t2198 = t1766 * t2093 + t1820 * t2089;
t2053 = t2273 * t2287;
t2013 = -t2055 + t2043;
t2014 = t2044 + t2054;
t2166 = -t2013 * t2092 + t2014 * t2088;
t1904 = t2081 * t2053 + t2084 * t2166;
t1942 = t2013 * t2088 + t2014 * t2092;
t2175 = t1904 * t2093 + t1942 * t2089;
t2052 = (t2078 - t2079) * t2287;
t2167 = t2011 * t2092 + t2015 * t2088;
t1905 = -t2081 * t2052 + t2084 * t2167;
t1943 = -t2011 * t2088 + t2015 * t2092;
t2174 = t1905 * t2093 + t1943 * t2089;
t2012 = (t2270 + (0.2e1 * qJD(3) + t2311) * t2310) * t2081;
t2165 = t2027 * t2092 - t2293;
t1919 = -t2012 * t2081 + t2084 * t2165;
t2173 = t1919 * t2093 + t1983 * t2089;
t2045 = t2247 - t2262;
t2163 = t2045 * t2092 + t2291;
t1936 = -t2081 * t2013 + t2084 * t2163;
t1991 = -t2045 * t2088 + t2290;
t2172 = t1936 * t2093 + t1991 * t2089;
t2046 = -t2247 + t2261;
t2164 = t2046 * t2088 + t2292;
t1937 = -t2081 * t2014 + t2084 * t2164;
t1992 = t2046 * t2092 - t2293;
t2171 = t1937 * t2093 + t1992 * t2089;
t2162 = t2047 * t2088 + t2290;
t1938 = t2081 * t2015 + t2084 * t2162;
t2170 = t1938 * t2093 + t1993 * t2089;
t2104 = t2081 * t2287 + t2084 * t2154;
t1977 = (t2084 * t2044 - t2088 * t2104) * t2092;
t2001 = -t2088 * t2044 - t2079 * t2154;
t2169 = t1977 * t2093 + t2001 * t2089;
t1980 = (t2084 * t2043 + t2092 * t2104) * t2088;
t2002 = t2092 * t2043 - t2078 * t2154;
t2168 = t1980 * t2093 + t2002 * t2089;
t1931 = t1995 * t2093 - t1996 * t2089;
t2159 = qJDD(2) * t2089 + t2093 * t2094;
t2050 = t2159 * t2085;
t2063 = qJDD(2) * t2093 - t2089 * t2094;
t2161 = t2050 * t2083 + t2063 * t2080;
t2160 = t2050 * t2080 - t2063 * t2083;
t2158 = t2081 * t2248;
t2157 = t2084 * t2248;
t2156 = -pkin(5) * t1794 + t1604;
t2142 = pkin(5) * t1880 - t1545;
t2141 = -pkin(5) * t1799 + t1605;
t1499 = -t1545 * t2325 + t2319;
t1504 = -qJ(5) * t1545 + t2320;
t1463 = -pkin(3) * t1545 + pkin(10) * t1530 + t1499 * t2091 + t1504 * t2087;
t1482 = t2084 * t1529 + t2081 * t2230;
t1465 = -pkin(10) * t1529 - t1499 * t2087 + t1504 * t2091;
t1484 = -pkin(3) * t1529 - t2342;
t2124 = pkin(9) * t1498 + t1465 * t2088 + t1484 * t2092;
t1442 = -pkin(2) * t1482 - t2081 * t1463 + t2084 * t2124;
t1445 = t2092 * t1465 - t2088 * t1484 + (-t1482 * t2081 - t1483 * t2084) * pkin(9);
t1464 = -t1483 * t2089 + t1498 * t2093;
t2140 = pkin(8) * t1464 + t1442 * t2093 + t1445 * t2089;
t1524 = -t1739 * t2325 + t2142;
t1650 = -qJ(5) * t1739 + t2318;
t1501 = -pkin(3) * t1739 + pkin(10) * t1695 + t1524 * t2091 + t1650 * t2087;
t1582 = t2084 * t1694 + t2081 * t2216;
t1506 = -pkin(10) * t1694 - t1524 * t2087 + t1650 * t2091;
t1513 = -pkin(3) * t1694 - t2341;
t2123 = pkin(9) * t1624 + t1506 * t2088 + t1513 * t2092;
t1462 = -pkin(2) * t1582 - t2081 * t1501 + t2084 * t2123;
t1468 = t2092 * t1506 - t2088 * t1513 + (-t1582 * t2081 - t1583 * t2084) * pkin(9);
t1543 = -t1583 * t2089 + t1624 * t2093;
t2139 = pkin(8) * t1543 + t1462 * t2093 + t1468 * t2089;
t1571 = -qJ(5) * t1795 - t2156;
t1590 = -t1795 * t2325 + t2238;
t1516 = -pkin(3) * t1795 + pkin(10) * t1717 + t1571 * t2087 + t1590 * t2091;
t1600 = t2084 * t1716 + t2081 * t2212;
t1522 = -pkin(10) * t1716 + t1571 * t2091 - t1590 * t2087;
t1564 = -pkin(3) * t1716 - t2340;
t2122 = pkin(9) * t1655 + t1522 * t2088 + t1564 * t2092;
t1470 = -pkin(2) * t1600 - t2081 * t1516 + t2084 * t2122;
t1486 = t2092 * t1522 - t2088 * t1564 + (-t1600 * t2081 - t1601 * t2084) * pkin(9);
t1559 = -t1601 * t2089 + t1655 * t2093;
t2138 = pkin(8) * t1559 + t1470 * t2093 + t1486 * t2089;
t1572 = -qJ(5) * t1800 - t2141;
t1593 = -t1800 * t2325 + t2237;
t1519 = -pkin(3) * t1800 + pkin(10) * t1724 + t1572 * t2087 + t1593 * t2091;
t1610 = t2084 * t1723 + t2081 * t2209;
t1523 = -pkin(10) * t1723 + t1572 * t2091 - t1593 * t2087;
t1568 = -pkin(3) * t1723 - t2339;
t2121 = pkin(9) * t1671 + t1523 * t2088 + t1568 * t2092;
t1472 = -pkin(2) * t1610 - t2081 * t1519 + t2084 * t2121;
t1487 = t2092 * t1523 - t2088 * t1568 + (-t1610 * t2081 - t1611 * t2084) * pkin(9);
t1563 = -t1611 * t2089 + t1671 * t2093;
t2137 = pkin(8) * t1563 + t1472 * t2093 + t1487 * t2089;
t1547 = t2084 * t1629 + t2081 * t2221;
t1550 = pkin(10) * t1630 + (-t2259 - t2321) * t1735;
t1560 = -pkin(3) * t1629 - t2244;
t1567 = -pkin(10) * t1629 + (-qJ(5) * t2091 + t2322) * t1735;
t2120 = pkin(9) * t1588 + t1560 * t2092 + t1567 * t2088;
t1478 = -pkin(2) * t1547 - t2081 * t1550 + t2084 * t2120;
t1485 = -t2088 * t1560 + t2092 * t1567 + (-t1547 * t2081 - t1548 * t2084) * pkin(9);
t1520 = -t1548 * t2089 + t1588 * t2093;
t2136 = pkin(8) * t1520 + t1478 * t2093 + t1485 * t2089;
t1573 = t2084 * t1660 + t2081 * t2218;
t1634 = -pkin(3) * t1843 + pkin(10) * t1661;
t2108 = pkin(9) * t1633 + t1660 * t2245;
t1503 = -pkin(2) * t1573 - t2081 * t1634 + t2084 * t2108;
t1505 = (-pkin(10) * t2092 + t2324) * t1660 + (-t1573 * t2081 - t1574 * t2084) * pkin(9);
t1542 = -t1574 * t2089 + t1633 * t2093;
t2135 = pkin(8) * t1542 + t1503 * t2093 + t1505 * t2089;
t1692 = -pkin(4) * t1953 + t1715;
t1693 = -qJ(5) * t1953 + t1718;
t1589 = pkin(10) * t1839 + t1692 * t2091 + t1693 * t2087 - t2404;
t1710 = t2084 * t1835 + t2081 * t2190;
t1594 = -pkin(10) * t1835 - t1692 * t2087 + t1693 * t2091;
t1742 = -pkin(3) * t1835 - t2243;
t2119 = pkin(9) * t1782 + t1594 * t2088 + t1742 * t2092;
t1515 = -pkin(2) * t1710 - t2081 * t1589 + t2084 * t2119;
t1541 = t2092 * t1594 - t2088 * t1742 + (-t1710 * t2081 - t1712 * t2084) * pkin(9);
t1652 = -t1712 * t2089 + t1782 * t2093;
t2134 = pkin(8) * t1652 + t1515 * t2093 + t1541 * t2089;
t1700 = (t1922 - t2018) * pkin(4) + t2389;
t1644 = t2091 * t1700 + t1922 * t2259 - t2433;
t1746 = t2081 * t2182 - t2422;
t1654 = qJ(5) * t2305 - t1700 * t2087 + t2434;
t2099 = pkin(4) * t2109 - qJ(5) * t1981 + t1718;
t1657 = -t2099 + t2436;
t2118 = pkin(9) * t1808 + t1654 * t2088 + t1657 * t2092;
t1532 = -pkin(2) * t1746 - t2081 * t1644 + t2084 * t2118;
t1549 = t2092 * t1654 - t2088 * t1657 + (-t1746 * t2081 - t1748 * t2084) * pkin(9);
t1679 = -t1748 * t2089 + t1808 * t2093;
t2133 = pkin(8) * t1679 + t1532 * t2093 + t1549 * t2089;
t1623 = pkin(10) * t1842 + t1661 - t2404;
t1711 = t1838 * t2084 + t2081 * t2187;
t1632 = -pkin(10) * t1838 - t1660;
t2113 = pkin(9) * t1783 + t1632 * t2088 - t1838 * t2323;
t1534 = -pkin(2) * t1711 - t2081 * t1623 + t2084 * t2113;
t1556 = t1838 * t2324 + t2092 * t1632 + (-t1711 * t2081 - t1713 * t2084) * pkin(9);
t1653 = -t1713 * t2089 + t1783 * t2093;
t2132 = pkin(8) * t1653 + t1534 * t2093 + t1556 * t2089;
t1699 = pkin(4) * t2018 - qJ(5) * t1929 - t2389;
t1645 = -t2431 + t2087 * t1699 - (pkin(3) + t2321) * t1929;
t1656 = t1699 * t2091 + t1929 * t2322 - t2432;
t1662 = -t2343 - t2435;
t2117 = t1656 * t2088 + t1662 * t2092 - t2441;
t1536 = -t2081 * t1645 + t2084 * t2117 + t2448;
t1551 = t2092 * t1656 - t2088 * t1662 + t2449;
t2131 = t1536 * t2093 + t1551 * t2089 + t2454;
t1733 = pkin(3) * t1924 - t2307 + t2433;
t1745 = t2081 * t2183 + t2422;
t1707 = t1753 - t2436;
t1767 = t2308 - t2434;
t2116 = pkin(9) * t1807 + t1707 * t2092 + t1767 * t2088;
t1562 = -pkin(2) * t1745 - t2081 * t1733 + t2084 * t2116;
t1576 = -t2088 * t1707 + t2092 * t1767 + (-t1745 * t2081 - t1747 * t2084) * pkin(9);
t1678 = -t1747 * t2089 + t1807 * t2093;
t2130 = pkin(8) * t1678 + t1562 * t2093 + t1576 * t2089;
t1734 = pkin(3) * t1929 + t2308 + t2431;
t1714 = t1754 + t2435;
t1768 = t2307 + t2432;
t2115 = t1714 * t2092 + t1768 * t2088 + t2441;
t1566 = -t2081 * t1734 + t2084 * t2115 - t2448;
t1581 = -t2088 * t1714 + t2092 * t1768 - t2449;
t2129 = t1566 * t2093 + t1581 * t2089 - t2454;
t1743 = -t2084 * t1941 + t2081 * t2184;
t1651 = (-t1743 * t2081 - t1744 * t2084) * pkin(9);
t1672 = -t1744 * t2089 + t1779 * t2093;
t1673 = pkin(9) * t1779 * t2084 - pkin(2) * t1743;
t2128 = pkin(8) * t1672 + t1651 * t2089 + t1673 * t2093;
t1902 = -t2053 * t2084 + t2081 * t2166;
t1696 = (-t1902 * t2081 - t1904 * t2084) * pkin(9) - t2184;
t2114 = pkin(9) * t1942 + t1779;
t1709 = -pkin(2) * t1902 + t2084 * t2114;
t1845 = -t1904 * t2089 + t1942 * t2093;
t2127 = pkin(8) * t1845 + t1696 * t2089 + t1709 * t2093;
t1918 = t2084 * t2012 + t2081 * t2165;
t1741 = -pkin(2) * t1918 + t2081 * t1867 + t2084 * t2236;
t1780 = -t2279 + (-t1918 * t2081 - t1919 * t2084) * pkin(9);
t1857 = -t1919 * t2089 + t1983 * t2093;
t2126 = pkin(8) * t1857 + t1741 * t2093 + t1780 * t2089;
t1935 = -t2084 * t2015 + t2081 * t2162;
t1750 = -pkin(2) * t1935 + t2081 * t1866 + t2084 * t2235;
t1781 = -t2280 + (-t1935 * t2081 - t1938 * t2084) * pkin(9);
t1870 = -t1938 * t2089 + t1993 * t2093;
t2125 = pkin(8) * t1870 + t1750 * t2093 + t1781 * t2089;
t2019 = t2252 * t2273 * t2312;
t2105 = t2089 * t2019 - t2093 * t2158;
t2071 = t2085 * qJDD(2);
t2051 = t2063 * t2085;
t2049 = t2063 * t2082;
t2048 = t2159 * t2082;
t2005 = -t2051 * t2080 - t2083 * t2159;
t2004 = t2051 * t2083 - t2080 * t2159;
t1985 = t2019 * t2093 + t2089 * t2158;
t1979 = (t2081 * t2043 + t2092 * t2361) * t2088;
t1978 = (t2081 * t2044 - t2088 * t2361) * t2092;
t1952 = -t2145 + (t2048 * t2082 + t2050 * t2085) * pkin(8);
t1951 = -t2146 + (-t2049 * t2082 - t2051 * t2085) * pkin(8);
t1949 = -t2082 * t2157 + t2085 * t2105;
t1948 = t2082 * t2105 + t2085 * t2157;
t1934 = t2084 * t2014 + t2081 * t2164;
t1933 = t2084 * t2013 + t2081 * t2163;
t1917 = t1932 * t2085;
t1903 = t2084 * t2052 + t2081 * t2167;
t1901 = -t1980 * t2089 + t2002 * t2093;
t1900 = -t1977 * t2089 + t2001 * t2093;
t1890 = -pkin(1) * t2049 + t1995 * t2082 + t2085 * t2145 - t2159 * t2317;
t1889 = pkin(1) * t2048 + t2082 * t1996 - t2063 * t2317 - t2085 * t2146;
t1888 = pkin(1) * t2051 - t2085 * t1995 + (-pkin(8) * t2159 + t2145) * t2082;
t1887 = -pkin(1) * t2050 - t2085 * t1996 + (-pkin(8) * t2063 - t2146) * t2082;
t1882 = t2082 * t2056 + (t2256 - t1931) * t2085;
t1881 = -t1931 * t2082 - t2085 * t2234;
t1869 = -t1937 * t2089 + t1992 * t2093;
t1868 = -t1936 * t2089 + t1991 * t2093;
t1854 = -t2082 * t1979 + t2085 * t2168;
t1853 = -t2082 * t1978 + t2085 * t2169;
t1852 = t2085 * t1979 + t2082 * t2168;
t1851 = t2085 * t1978 + t2082 * t2169;
t1846 = -t1905 * t2089 + t1943 * t2093;
t1810 = pkin(1) * t1882 + pkin(8) * t1916;
t1809 = -pkin(1) * t1881 + t1932 * t2317;
t1806 = -t2082 * t1935 + t2085 * t2170;
t1805 = -t2082 * t1934 + t2085 * t2171;
t1804 = -t2082 * t1933 + t2085 * t2172;
t1803 = t2085 * t1935 + t2082 * t2170;
t1802 = t2085 * t1934 + t2082 * t2171;
t1801 = t2085 * t1933 + t2082 * t2172;
t1796 = (-t1881 * t2082 - t1882 * t2085) * pkin(8);
t1793 = -t2082 * t1918 + t2085 * t2173;
t1792 = t2085 * t1918 + t2082 * t2173;
t1772 = -t2082 * t1903 + t2085 * t2174;
t1771 = -t1902 * t2082 + t2085 * t2175;
t1770 = t2085 * t1903 + t2082 * t2174;
t1769 = t2085 * t1902 + t2082 * t2175;
t1762 = t2081 * t2176 + t2419;
t1761 = t2081 * t2177 - t2419;
t1749 = pkin(2) * t1938 - t2084 * t1866 + t2081 * t2235;
t1740 = pkin(2) * t1919 - t2084 * t1867 + t2081 * t2236;
t1720 = t2084 * t1837 + t2081 * t2188;
t1719 = t2084 * t1836 + t2081 * t2189;
t1708 = pkin(2) * t1904 + t2081 * t2114;
t1691 = -t1766 * t2089 + t1820 * t2093;
t1690 = -t1765 * t2089 + t1819 * t2093;
t1684 = t2084 * t1821 + t2081 * t2191;
t1674 = pkin(2) * t1744 + t1779 * t2316;
t1659 = -t1722 * t2089 + t1798 * t2093;
t1658 = -t1721 * t2089 + t1797 * t2093;
t1647 = t2084 * t1776 + t2081 * t2196;
t1646 = t1775 * t2084 + t2081 * t2197;
t1643 = -t1762 * t2082 + t2085 * t2198;
t1642 = -t2082 * t1761 + t2085 * t2199;
t1639 = t2085 * t1762 + t2082 * t2198;
t1638 = t2085 * t1761 + t2082 * t2199;
t1631 = -t1685 * t2089 + t1752 * t2093;
t1622 = -t2082 * t1746 + t2085 * t2204;
t1621 = -t2082 * t1745 + t2085 * t2205;
t1620 = t2085 * t1746 + t2082 * t2204;
t1619 = t2085 * t1745 + t2082 * t2205;
t1618 = -t2082 * t1743 + t2085 * t2206;
t1617 = t2085 * t1743 + t2082 * t2206;
t1614 = t2084 * t1730 + t2081 * t2207;
t1613 = t2084 * t1729 + t2081 * t2208;
t1612 = -t2089 * t1750 + t2093 * t1781 + (-t1803 * t2082 - t1806 * t2085) * pkin(8);
t1609 = -t2082 * t1720 + t2085 * t2210;
t1608 = -t2082 * t1719 + t2085 * t2211;
t1607 = t2085 * t1720 + t2082 * t2210;
t1606 = t1719 * t2085 + t2082 * t2211;
t1599 = -t2089 * t1741 + t2093 * t1780 + (-t1792 * t2082 - t1793 * t2085) * pkin(8);
t1598 = -t1711 * t2082 + t2085 * t2213;
t1597 = -t2082 * t1710 + t2085 * t2214;
t1596 = t2085 * t1711 + t2082 * t2213;
t1595 = t2085 * t1710 + t2082 * t2214;
t1592 = -t1649 * t2089 + t1698 * t2093;
t1591 = -t1648 * t2089 + t1697 * t2093;
t1586 = t2084 * t1705 + t2081 * t2215;
t1585 = -pkin(1) * t1803 - t2082 * t1749 + t2085 * t2125;
t1584 = pkin(1) * t1806 + t2085 * t1749 + t2082 * t2125;
t1580 = -pkin(1) * t1792 - t2082 * t1740 + t2085 * t2126;
t1579 = pkin(1) * t1793 + t2085 * t1740 + t2082 * t2126;
t1578 = -t2082 * t1684 + t2085 * t2217;
t1577 = t2085 * t1684 + t2082 * t2217;
t1575 = t2093 * t1696 - t2089 * t1709 + (-t1769 * t2082 - t1771 * t2085) * pkin(8);
t1570 = -t1616 * t2089 + t1676 * t2093;
t1569 = -t1615 * t2089 + t1675 * t2093;
t1565 = t2084 * t1734 + t2081 * t2115 + t2447;
t1561 = pkin(2) * t1747 + t2084 * t1733 + t2081 * t2116;
t1558 = -pkin(1) * t1769 - t2082 * t1708 + t2085 * t2127;
t1557 = pkin(1) * t1771 + t2085 * t1708 + t2082 * t2127;
t1555 = -t2082 * t1647 + t2085 * t2219;
t1554 = -t2082 * t1646 + t2085 * t2220;
t1553 = t2085 * t1647 + t2082 * t2219;
t1552 = t2085 * t1646 + t2082 * t2220;
t1546 = -t1587 * t2089 + t1635 * t2093;
t1540 = -t1614 * t2082 + t2085 * t2222;
t1539 = -t2082 * t1613 + t2085 * t2223;
t1538 = t2085 * t1614 + t2082 * t2222;
t1537 = t2085 * t1613 + t2082 * t2223;
t1535 = t2084 * t1645 + t2081 * t2117 - t2447;
t1533 = pkin(2) * t1713 + t2084 * t1623 + t2081 * t2113;
t1531 = pkin(2) * t1748 + t2084 * t1644 + t2081 * t2118;
t1528 = -t2082 * t1610 + t2085 * t2224;
t1527 = t2085 * t1610 + t2082 * t2224;
t1526 = -t2082 * t1600 + t2085 * t2225;
t1525 = t2085 * t1600 + t2082 * t2225;
t1521 = t2093 * t1651 - t2089 * t1673 + (-t1617 * t2082 - t1618 * t2085) * pkin(8);
t1518 = -t2082 * t1586 + t2085 * t2226;
t1517 = t2085 * t1586 + t2082 * t2226;
t1514 = pkin(2) * t1712 + t2084 * t1589 + t2081 * t2119;
t1512 = -t2082 * t1582 + t2085 * t2227;
t1511 = t2085 * t1582 + t2082 * t2227;
t1510 = -pkin(1) * t1617 - t2082 * t1674 + t2085 * t2128;
t1509 = pkin(1) * t1618 + t2085 * t1674 + t2082 * t2128;
t1508 = -t2082 * t1573 + t2085 * t2228;
t1507 = t2085 * t1573 + t2082 * t2228;
t1502 = pkin(2) * t1574 + t2084 * t1634 + t2081 * t2108;
t1500 = -t1566 * t2089 + t1581 * t2093 - t2464;
t1497 = -t2089 * t1562 + t2093 * t1576 + (-t1619 * t2082 - t1621 * t2085) * pkin(8);
t1496 = -t2082 * t1547 + t2085 * t2229;
t1495 = t1547 * t2085 + t2082 * t2229;
t1494 = -t2082 * t1565 + t2085 * t2129 - t2461;
t1493 = t2085 * t1565 + t2082 * t2129 + t2460;
t1492 = -t2089 * t1536 + t2093 * t1551 + t2464;
t1491 = -pkin(1) * t1619 - t2082 * t1561 + t2085 * t2130;
t1490 = pkin(1) * t1621 + t2085 * t1561 + t2082 * t2130;
t1489 = -t2089 * t1532 + t2093 * t1549 + (-t1620 * t2082 - t1622 * t2085) * pkin(8);
t1488 = -t2089 * t1534 + t2093 * t1556 + (-t1596 * t2082 - t1598 * t2085) * pkin(8);
t1481 = -t2089 * t1515 + t2093 * t1541 + (-t1595 * t2082 - t1597 * t2085) * pkin(8);
t1480 = -t2082 * t1535 + t2085 * t2131 + t2461;
t1479 = t2085 * t1535 + t2082 * t2131 - t2460;
t1477 = pkin(2) * t1548 + t2084 * t1550 + t2081 * t2120;
t1476 = -pkin(1) * t1620 - t2082 * t1531 + t2085 * t2133;
t1475 = pkin(1) * t1622 + t2085 * t1531 + t2082 * t2133;
t1474 = -pkin(1) * t1596 - t2082 * t1533 + t2085 * t2132;
t1473 = pkin(1) * t1598 + t2085 * t1533 + t2082 * t2132;
t1471 = pkin(2) * t1611 + t2084 * t1519 + t2081 * t2121;
t1469 = pkin(2) * t1601 + t2084 * t1516 + t2081 * t2122;
t1467 = -pkin(1) * t1595 - t2082 * t1514 + t2085 * t2134;
t1466 = pkin(1) * t1597 + t2085 * t1514 + t2082 * t2134;
t1461 = pkin(2) * t1583 + t2084 * t1501 + t2081 * t2123;
t1460 = -t2089 * t1503 + t2093 * t1505 + (-t1507 * t2082 - t1508 * t2085) * pkin(8);
t1459 = -pkin(1) * t1507 - t2082 * t1502 + t2085 * t2135;
t1458 = pkin(1) * t1508 + t2085 * t1502 + t2082 * t2135;
t1457 = -t2082 * t1482 + t2085 * t2231;
t1456 = t2085 * t1482 + t2082 * t2231;
t1455 = -t2089 * t1472 + t2093 * t1487 + (-t1527 * t2082 - t1528 * t2085) * pkin(8);
t1454 = -t2089 * t1470 + t2093 * t1486 + (-t1525 * t2082 - t1526 * t2085) * pkin(8);
t1453 = -t2089 * t1478 + t2093 * t1485 + (-t1495 * t2082 - t1496 * t2085) * pkin(8);
t1452 = -pkin(1) * t1527 - t2082 * t1471 + t2085 * t2137;
t1451 = pkin(1) * t1528 + t2085 * t1471 + t2082 * t2137;
t1450 = -pkin(1) * t1525 - t2082 * t1469 + t2085 * t2138;
t1449 = pkin(1) * t1526 + t2085 * t1469 + t2082 * t2138;
t1448 = -t2089 * t1462 + t2093 * t1468 + (-t1511 * t2082 - t1512 * t2085) * pkin(8);
t1447 = -pkin(1) * t1495 - t2082 * t1477 + t2085 * t2136;
t1446 = pkin(1) * t1496 + t2085 * t1477 + t2082 * t2136;
t1444 = -pkin(1) * t1511 - t2082 * t1461 + t2085 * t2139;
t1443 = pkin(1) * t1512 + t2085 * t1461 + t2082 * t2139;
t1441 = pkin(2) * t1483 + t2084 * t1463 + t2081 * t2124;
t1440 = -t2089 * t1442 + t2093 * t1445 + (-t1456 * t2082 - t1457 * t2085) * pkin(8);
t1439 = -pkin(1) * t1456 - t2082 * t1441 + t2085 * t2140;
t1438 = pkin(1) * t1457 + t2085 * t1441 + t2082 * t2140;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t2360, -t2357, -t2337, -qJ(1) * t2337, 0, 0, -t2160, 0, t2005, t2080 * t2271, -qJ(1) * t2004 - t1890 * t2080 + t1951 * t2083, qJ(1) * t2161 - t2080 * t1889 + t2083 * t1952, -t1917 * t2080 + t1931 * t2083, t2083 * t1796 - t2080 * t1809 - qJ(1) * (t1882 * t2083 + t1932 * t2080), -t1854 * t2080 + t1901 * t2083, -t1772 * t2080 + t1846 * t2083, -t1804 * t2080 + t1868 * t2083, -t1853 * t2080 + t1900 * t2083, -t1805 * t2080 + t1869 * t2083, -t1949 * t2080 + t1985 * t2083, t2083 * t1612 - t2080 * t1585 - qJ(1) * (t1806 * t2083 + t1870 * t2080), t2083 * t1599 - t2080 * t1580 - qJ(1) * (t1793 * t2083 + t1857 * t2080), t2083 * t1575 - t2080 * t1558 - qJ(1) * (t1771 * t2083 + t1845 * t2080), t2083 * t1521 - t2080 * t1510 - qJ(1) * (t1618 * t2083 + t1672 * t2080), t2417, -t1608 * t2080 + t1658 * t2083, t2457, t2418, -t1642 * t2080 + t1690 * t2083, t2410, t2083 * t1497 - t2080 * t1491 - qJ(1) * (t1621 * t2083 + t1678 * t2080), -t2080 * t1494 + t2083 * t1500 - t2463, t2083 * t1488 - t2080 * t1474 - qJ(1) * (t1598 * t2083 + t1653 * t2080), t2083 * t1460 - t2080 * t1459 - qJ(1) * (t1508 * t2083 + t1542 * t2080), t2410, -t2457, -t1643 * t2080 + t1691 * t2083, t2417, -t1609 * t2080 + t1659 * t2083, t2418, t2083 * t1481 - t2080 * t1467 - qJ(1) * (t1597 * t2083 + t1652 * t2080), t2083 * t1489 - t2080 * t1476 - qJ(1) * (t1622 * t2083 + t1679 * t2080), -t2080 * t1480 + t2083 * t1492 + t2463, t2083 * t1453 - t2080 * t1447 - qJ(1) * (t1496 * t2083 + t1520 * t2080), -t1555 * t2080 + t1592 * t2083, -t1518 * t2080 + t1546 * t2083, -t1540 * t2080 + t1570 * t2083, -t1554 * t2080 + t1591 * t2083, -t1539 * t2080 + t1569 * t2083, -t1578 * t2080 + t1631 * t2083, t2083 * t1454 - t2080 * t1450 - qJ(1) * (t1526 * t2083 + t1559 * t2080), t2083 * t1455 - t2080 * t1452 - qJ(1) * (t1528 * t2083 + t1563 * t2080), t2083 * t1448 - t2080 * t1444 - qJ(1) * (t1512 * t2083 + t1543 * t2080), t2083 * t1440 - t2080 * t1439 - qJ(1) * (t1457 * t2083 + t1464 * t2080); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t2357, -t2360, t2338, qJ(1) * t2338, 0, 0, t2161, 0, t2004, -t2083 * t2271, qJ(1) * t2005 + t1890 * t2083 + t1951 * t2080, qJ(1) * t2160 + t2083 * t1889 + t2080 * t1952, t1917 * t2083 + t1931 * t2080, t2080 * t1796 + t2083 * t1809 + qJ(1) * (-t1882 * t2080 + t1932 * t2083), t1854 * t2083 + t1901 * t2080, t1772 * t2083 + t1846 * t2080, t1804 * t2083 + t1868 * t2080, t1853 * t2083 + t1900 * t2080, t1805 * t2083 + t1869 * t2080, t1949 * t2083 + t1985 * t2080, t2080 * t1612 + t2083 * t1585 + qJ(1) * (-t1806 * t2080 + t1870 * t2083), t2080 * t1599 + t2083 * t1580 + qJ(1) * (-t1793 * t2080 + t1857 * t2083), t2080 * t1575 + t2083 * t1558 + qJ(1) * (-t1771 * t2080 + t1845 * t2083), t2080 * t1521 + t2083 * t1510 + qJ(1) * (-t1618 * t2080 + t1672 * t2083), t2415, t1608 * t2083 + t1658 * t2080, -t2456, t2416, t1642 * t2083 + t1690 * t2080, t2407, t2080 * t1497 + t2083 * t1491 + qJ(1) * (-t1621 * t2080 + t1678 * t2083), t2083 * t1494 + t2080 * t1500 - t2462, t2080 * t1488 + t2083 * t1474 + qJ(1) * (-t1598 * t2080 + t1653 * t2083), t2080 * t1460 + t2083 * t1459 + qJ(1) * (-t1508 * t2080 + t1542 * t2083), t2407, t2456, t1643 * t2083 + t1691 * t2080, t2415, t1609 * t2083 + t1659 * t2080, t2416, t2080 * t1481 + t2083 * t1467 + qJ(1) * (-t1597 * t2080 + t1652 * t2083), t2080 * t1489 + t2083 * t1476 + qJ(1) * (-t1622 * t2080 + t1679 * t2083), t2083 * t1480 + t2080 * t1492 + t2462, t2080 * t1453 + t2083 * t1447 + qJ(1) * (-t1496 * t2080 + t1520 * t2083), t1555 * t2083 + t1592 * t2080, t1518 * t2083 + t1546 * t2080, t1540 * t2083 + t1570 * t2080, t1554 * t2083 + t1591 * t2080, t1539 * t2083 + t1569 * t2080, t1578 * t2083 + t1631 * t2080, t2080 * t1454 + t2083 * t1450 + qJ(1) * (-t1526 * t2080 + t1559 * t2083), t2080 * t1455 + t2083 * t1452 + qJ(1) * (-t1528 * t2080 + t1563 * t2083), t2080 * t1448 + t2083 * t1444 + qJ(1) * (-t1512 * t2080 + t1543 * t2083), t2080 * t1440 + t2083 * t1439 + qJ(1) * (-t1457 * t2080 + t1464 * t2083); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t2257, t2274, 0, 0, 0, 0, t2048, 0, t2049, t2071, t1888, t1887, t1916, t1810, t1852, t1770, t1801, t1851, t1802, t1948, t1584, t1579, t1557, t1509, t2409, t1606, -t1636, t2408, t1638, t2388, t1490, t1493, t1473, t1458, t2388, t1636, t1639, t2409, t1607, t2408, t1466, t1475, t1479, t1446, t1553, t1517, t1538, t1552, t1537, t1577, t1449, t1451, t1443, t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2315, -t2257, 0, 0, 0, t2063, 0, -t2159, 0, t1951, t1952, t1931, t1796, t1901, t1846, t1868, t1900, t1869, t1985, t1612, t1599, t1575, t1521, t2385, t1658, t1689, t2386, t1690, t2362, t1497, t1500, t1488, t1460, t2362, -t1689, t1691, t2385, t1659, t2386, t1481, t1489, t1492, t1453, t1592, t1546, t1570, t1591, t1569, t1631, t1454, t1455, t1448, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2315, 0, -t2274, 0, 0, 0, t2050, 0, t2051, -t2271, t1890, t1889, t1917, t1809, t1854, t1772, t1804, t1853, t1805, t1949, t1585, t1580, t1558, t1510, t2406, t1608, -t1640, t2405, t1642, t2387, t1491, t1494, t1474, t1459, t2387, t1640, t1643, t2406, t1609, t2405, t1467, t1476, t1480, t1447, t1555, t1518, t1540, t1554, t1539, t1578, t1450, t1452, t1444, t1439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2257, t2274, 0, 0, 0, 0, t2048, 0, t2049, t2071, t1888, t1887, t1916, t1810, t1852, t1770, t1801, t1851, t1802, t1948, t1584, t1579, t1557, t1509, t2409, t1606, -t1636, t2408, t1638, t2388, t1490, t1493, t1473, t1458, t2388, t1636, t1639, t2409, t1607, t2408, t1466, t1475, t1479, t1446, t1553, t1517, t1538, t1552, t1537, t1577, t1449, t1451, t1443, t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t2094, 0, 0, -t2234, t1995, 0, t2002, t1943, t1991, t2001, t1992, t2019, t1781, t1780, t1696, t1651, t2332, t1797, -t1817, t2334, t1819, t2333, t1576, t1581, t1556, t1505, t2333, t1817, t1820, t2332, t1798, t2334, t1541, t1549, t1551, t1485, t1698, t1635, t1676, t1697, t1675, t1752, t1486, t1487, t1468, t1445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2094, 0, qJDD(2), 0, t2234, 0, t1996, 0, t1980, t1905, t1936, t1977, t1937, -t2158, t1750, t1741, t1709, t1673, t2365, t1721, -t1763, t2364, t1765, t2330, t1562, t1566, t1534, t1503, t2330, t1763, t1766, t2365, t1722, t2364, t1515, t1532, t1536, t1478, t1649, t1587, t1616, t1648, t1615, t1685, t1470, t1472, t1462, t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1995, -t1996, 0, 0, t1979, t1903, t1933, t1978, t1934, t2157, t1749, t1740, t1708, t1674, t2367, t1719, -t1759, t2366, t1761, t2331, t1561, t1565, t1533, t1502, t2331, t1759, t1762, t2367, t1720, t2366, t1514, t1531, t1535, t1477, t1647, t1586, t1614, t1646, t1613, t1684, t1469, t1471, t1461, t1441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2043, t2015, t2041, -t2055, t2046, t2055, 0, -t1941, t1866, 0, t2239, t1840, -t1895, t2102, -t1898, t2144, t1767, t1768, t1632, -pkin(10) * t1660, t2144, t1895, t1898, t2239, t1841, t2102, t1594, t1654, t1656, t1567, t1778, t1706, t1732, t1777, t1731, t1822, t1522, t1523, t1506, t1465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2054, t2011, t2045, t2044, t2040, -t2054, t1941, 0, t1867, 0, -t2295, -t2345, t1930, t2295, -t1923, t2039, t1707, t1714, -pkin(3) * t1838, -pkin(3) * t1660, t2039, -t1930, -t1921, -t2295, -t2345, t2295, t1742, t1657, t1662, t1560, t1824, t1738, t1816, -t1825, t1814, t1872, t1564, t1568, t1513, t1484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2065, t2052, t2013, t2065, t2014, t2248, -t1866, -t1867, 0, 0, t2241, t1836, t1892, t2240, -t1894, t2143, t1733, t1734, t1623, t1634, t2143, -t1892, t1894, t2241, t1837, t2240, t1589, t1644, t1645, t1550, t1776, t1705, t1730, t1775, t1729, t1821, t1516, t1519, t1501, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1976, t1924, -t2109, -t2296, -t2008, t2296, 0, t1843, t1753, 0, t2296, t2109, t2008, t1976, -t1922, -t2296, t1693, qJ(5) * t1922, t1699, -qJ(5) * t1735, t1940, t1939, t1833, -t1940, -t1830, t1973, t1571, t1572, t1650, t1504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2018, t2347, t2346, -t2149, -t2110, t2018, -t1843, 0, t1754, 0, t2018, -t2346, t2110, -t2018, t2347, -t2149, t1692, t1700, -pkin(4) * t1929, -pkin(4) * t1735, -t1826, -t1737, -t1813, t1823, -t1815, -t1871, t1590, t1593, t1524, t1499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2295, t2345, -t1930, -t2295, t1923, -t2039, -t1753, -t1754, 0, 0, -t2039, t1930, t1921, t2295, t2345, -t2295, t2243, t2099, t2343, t2244, -t1824, -t1738, -t1816, t1825, -t1814, -t1872, t2340, t2339, t2341, t2342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2039, t1930, t1921, t2295, t2345, -t2295, 0, t1718, t1715, 0, -t1824, -t1738, -t1816, t1825, -t1814, -t1872, -pkin(11) * t1794 + t2282, -pkin(11) * t1799 + t1680, -pkin(11) * t1736 - t2350, -pkin(11) * t2350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2296, -t2109, -t2008, -t1976, t1922, t2296, -t1718, 0, t1735, 0, -t1940, -t1939, -t1833, t1940, t1830, -t1973, t2156, t2141, -t2318, -t2320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2018, t2346, -t2110, t2018, -t2347, t2149, -t1715, -t1735, 0, 0, t1826, t1737, t1813, -t1823, t1815, t1871, pkin(11) * t1795 - t2238, pkin(11) * t1800 - t2237, pkin(11) * t1739 - t2142, pkin(11) * t1545 - t2319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1879, -t1829, t2349, t1964, t1956, -t1964, 0, t1681, t1604, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1966, t2348, t1957, -t2148, t1865, -t1966, -t1681, 0, t1605, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1940, t1939, t1833, -t1940, -t1830, t1973, -t1604, -t1605, 0, 0;];
m_new_reg  = t1;
