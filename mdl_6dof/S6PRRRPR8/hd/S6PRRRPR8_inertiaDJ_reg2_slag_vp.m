% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:53:21
% EndTime: 2019-03-08 23:53:37
% DurationCPUTime: 6.14s
% Computational Cost: add. (4892->417), mult. (14199->741), div. (0->0), fcn. (13967->12), ass. (0->211)
t101 = sin(pkin(6));
t105 = sin(qJ(3));
t106 = sin(qJ(2));
t109 = cos(qJ(3));
t110 = cos(qJ(2));
t228 = cos(pkin(7));
t179 = t110 * t228;
t140 = t105 * t179 + t106 * t109;
t102 = cos(pkin(6));
t100 = sin(pkin(7));
t225 = t100 * t105;
t196 = t102 * t225;
t121 = t101 * t140 + t196;
t180 = t109 * t228;
t216 = qJD(3) * t105;
t89 = t100 * t216;
t32 = t102 * t89 + (t140 * qJD(3) + (t105 * t110 + t106 * t180) * qJD(2)) * t101;
t261 = qJD(3) * t121 - t32;
t104 = sin(qJ(4));
t243 = pkin(4) + pkin(11);
t199 = t243 * t104;
t108 = cos(qJ(4));
t226 = qJ(5) * t108;
t260 = t199 - t226;
t182 = t105 * t228;
t173 = pkin(2) * t182;
t136 = t228 * pkin(10) + t173;
t224 = t100 * t109;
t203 = pkin(9) * t224;
t130 = t136 + t203;
t217 = qJD(3) * t100;
t259 = qJD(4) * t130 - (pkin(3) * t105 - pkin(10) * t109) * t217;
t256 = pkin(2) * t180 - pkin(9) * t225;
t134 = qJD(3) * t256;
t195 = -pkin(10) * t105 - pkin(2);
t155 = -pkin(3) * t109 + t195;
t144 = t155 * t100;
t258 = qJD(4) * t144 + t134;
t227 = qJ(5) * t104;
t257 = t243 * t108 + t227;
t190 = t109 * t217;
t68 = t104 * t225 - t108 * t228;
t48 = t68 * qJD(4) - t108 * t190;
t74 = t173 + t203;
t65 = qJD(3) * t74;
t69 = t104 * t228 + t108 * t225;
t116 = t48 * qJ(5) - t69 * qJD(5) + t65;
t132 = t104 * t136;
t240 = t104 * pkin(9);
t154 = t108 * pkin(3) + pkin(4) + t240;
t167 = t108 * t195;
t254 = (-t167 + (pkin(11) + t154) * t109) * t100 + t69 * pkin(5) + t132;
t49 = qJD(4) * t69 + t104 * t190;
t255 = -qJD(6) * t254 - t243 * t49 - t116;
t253 = -t105 * t106 + t109 * t179;
t218 = qJD(2) * t106;
t188 = t101 * t218;
t252 = -qJD(4) * t121 + t100 * t188;
t99 = t108 ^ 2;
t184 = qJD(4) * (t104 ^ 2 - t99);
t103 = sin(qJ(6));
t96 = t103 ^ 2;
t107 = cos(qJ(6));
t98 = t107 ^ 2;
t238 = t96 - t98;
t183 = t238 * qJD(6);
t33 = t102 * t190 + (t253 * qJD(3) + (-t106 * t182 + t109 * t110) * qJD(2)) * t101;
t223 = t101 * t110;
t67 = -t100 * t223 + t102 * t228;
t13 = (t67 * qJD(4) + t33) * t108 + t252 * t104;
t36 = t67 * t104 + t108 * t121;
t47 = -t253 * t101 - t102 * t224;
t251 = t100 * (-t109 * t13 + t36 * t216) - t32 * t69 + t47 * t48;
t214 = qJD(4) * t104;
t12 = t33 * t104 - t252 * t108 + t67 * t214;
t35 = t104 * t121 - t67 * t108;
t250 = t100 * (-t109 * t12 + t35 * t216) - t32 * t68 - t47 * t49;
t210 = qJD(5) * t108;
t242 = pkin(5) + pkin(10);
t86 = t242 * t108;
t249 = qJD(4) * t257 - qJD(6) * t86 - t210;
t24 = t47 * t32;
t7 = t36 * t13;
t248 = 0.2e1 * t12 * t35 + 0.2e1 * t24 + 0.2e1 * t7;
t247 = -0.2e1 * t100;
t246 = 0.2e1 * t100;
t245 = 0.2e1 * qJD(3);
t244 = 0.2e1 * qJD(5);
t241 = pkin(10) * t100;
t239 = t47 * t65;
t42 = t104 * t144 + t108 * t130;
t209 = qJD(6) * t103;
t29 = -t68 * t209 - t103 * t89 + (qJD(6) * t224 + t49) * t107;
t236 = t103 * t29;
t51 = -t103 * t68 + t107 * t224;
t235 = t103 * t51;
t234 = t104 * t48;
t50 = t103 * t224 + t107 * t68;
t28 = qJD(6) * t50 + t103 * t49 + t107 * t89;
t233 = t107 * t28;
t232 = t107 * t50;
t231 = t108 * t49;
t169 = qJ(5) * t89;
t189 = qJD(5) * t224;
t22 = t259 * t104 - t258 * t108;
t15 = -t169 + t22 + t189;
t11 = -t49 * pkin(5) - t15;
t230 = t11 * t103;
t229 = t11 * t107;
t222 = t103 * t104;
t221 = t103 * t243;
t219 = t107 * t243;
t215 = qJD(4) * t103;
t213 = qJD(4) * t107;
t93 = qJD(4) * t108;
t212 = qJD(4) * t109;
t211 = qJD(5) * t104;
t208 = qJD(6) * t107;
t207 = qJD(6) * t108;
t206 = qJD(6) * t243;
t205 = 0.2e1 * t68 * t49;
t43 = -0.2e1 * t69 * t48;
t204 = -0.2e1 * pkin(3) * qJD(4);
t202 = pkin(10) * t214;
t201 = pkin(10) * t93;
t200 = t107 * t242;
t95 = t100 ^ 2;
t198 = t95 * t216;
t194 = t103 * t93;
t193 = t104 * t213;
t192 = t103 * t207;
t191 = t107 * t207;
t187 = t104 * t93;
t186 = t103 * t208;
t178 = pkin(4) * t89;
t177 = t104 * t200;
t176 = t99 * t186;
t175 = t95 * t188;
t174 = t109 * t198;
t170 = t103 * t193;
t166 = t228 * t217;
t63 = -t228 * pkin(3) - t256;
t129 = -t69 * qJ(5) + t63;
t30 = t243 * t68 + t129;
t8 = -t103 * t30 + t254 * t107;
t9 = t254 * t103 + t107 * t30;
t165 = -t103 * t8 + t107 * t9;
t162 = -pkin(4) * t108 - t227;
t20 = -t103 * t47 + t107 * t35;
t21 = t103 * t35 + t107 * t47;
t161 = -t103 * t20 + t107 * t21;
t75 = -pkin(3) - t257;
t45 = -t103 * t75 + t177;
t46 = t107 * t75 + t242 * t222;
t160 = -t103 * t45 + t107 * t46;
t159 = t103 * t50 - t107 * t51;
t158 = t13 * qJ(5) + t36 * qJD(5);
t37 = qJ(5) * t224 - t42;
t151 = t109 * t48 + t69 * t216;
t150 = -t109 * t49 + t68 * t216;
t40 = t69 * t93 - t234;
t149 = t68 * t214 - t231;
t148 = t103 * t13 + t36 * t208;
t147 = t107 * t13 - t36 * t209;
t146 = t103 * t48 - t69 * t208;
t39 = -t107 * t48 - t69 * t209;
t145 = 0.2e1 * t48 * t68 - 0.2e1 * t49 * t69;
t142 = t104 * t212 + t108 * t216;
t141 = t104 * t216 - t108 * t212;
t79 = t242 * t214;
t137 = t260 * qJD(6) - t79;
t57 = t142 * t100;
t58 = t141 * t100;
t135 = t12 * t69 - t13 * t68 - t35 * t48 - t36 * t49;
t133 = t162 * qJD(4) + t210;
t113 = t258 * t104 + t259 * t108;
t16 = t113 - t178;
t112 = -t48 * pkin(5) - pkin(11) * t89 + t16;
t2 = -t103 * t112 + t255 * t107 + t30 * t209;
t3 = t255 * t103 + t107 * t112 - t30 * t208;
t131 = t165 * qJD(6) - t2 * t103 + t3 * t107;
t4 = -t21 * qJD(6) - t103 * t32 + t107 * t12;
t5 = t20 * qJD(6) + t103 * t12 + t107 * t32;
t1 = t161 * qJD(6) + t103 * t5 + t107 * t4;
t26 = t75 * t209 - t107 * (t260 * qJD(4) - t211) - t242 * t194 - qJD(6) * t177;
t27 = -t75 * t208 + (-qJD(6) * t242 + qJD(5)) * t222 + (-t103 * t199 + (t103 * qJ(5) + t200) * t108) * qJD(4);
t6 = t160 * qJD(6) - t103 * t26 + t107 * t27;
t128 = t104 * t12 + t108 * t13 + (-t104 * t36 + t108 * t35) * qJD(4);
t38 = t132 + (t154 * t109 - t167) * t100;
t127 = t104 * t16 - t108 * t15 + (t104 * t37 + t108 * t38) * qJD(4);
t41 = -t132 + (t108 * t155 - t109 * t240) * t100;
t126 = t104 * t113 - t108 * t22 + (-t104 * t42 - t108 * t41) * qJD(4);
t125 = -t104 * t49 - t108 * t48 + (-t104 * t69 - t108 * t68) * qJD(4);
t123 = t128 * pkin(10);
t122 = (-t234 - t231 + (t104 * t68 + t108 * t69) * qJD(4)) * pkin(10);
t94 = qJ(5) * t244;
t88 = -0.2e1 * t187;
t87 = 0.2e1 * t187;
t82 = -pkin(3) + t162;
t81 = -0.2e1 * t174;
t78 = -0.2e1 * t184;
t71 = -t104 * t208 - t194;
t70 = -t104 * t209 + t107 * t93;
t66 = -t211 + (pkin(4) * t104 - t226) * qJD(4);
t53 = -t108 * t183 - t170;
t34 = t68 * pkin(4) + t129;
t31 = -t68 * pkin(5) - t37;
t19 = t49 * pkin(4) + t116;
t18 = t108 * t32 - t47 * t214;
t17 = t104 * t32 + t47 * t93;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t33 * t196 + 0.2e1 * t24 + 0.2e1 * (t100 * t218 * t67 + t140 * t33) * t101, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t20 * t4 + 0.2e1 * t21 * t5 + 0.2e1 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, -qJD(2) * t223, 0, 0, 0, 0, 0, 0, 0, 0, -t109 * t175 - t32 * t228 + t67 * t89, t105 * t175 + t67 * t190 - t33 * t228, t190 * t47 + t33 * t224 - t261 * t225, -pkin(2) * t175 + t261 * t256 + t33 * t74 + t239, 0, 0, 0, 0, 0, 0, -t250, -t251, t135, t113 * t35 - t12 * t41 + t13 * t42 - t22 * t36 + t32 * t63 + t239, 0, 0, 0, 0, 0, 0, t135, t250, t251, t12 * t38 - t13 * t37 - t15 * t36 + t16 * t35 + t19 * t47 + t32 * t34, 0, 0, 0, 0, 0, 0, -t13 * t50 - t20 * t48 - t29 * t36 + t4 * t69, -t13 * t51 + t21 * t48 + t28 * t36 - t5 * t69, -t20 * t28 + t21 * t29 + t4 * t51 + t5 * t50, t11 * t36 + t13 * t31 - t2 * t21 + t20 * t3 + t4 * t8 + t5 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t174 (-t105 ^ 2 + t109 ^ 2) * t95 * t245, 0.2e1 * t109 * t166, t81, -0.2e1 * t105 * t166, 0, -0.2e1 * pkin(2) * t198 - 0.2e1 * t65 * t228 (-t95 * pkin(2) * t109 - t228 * t256) * t245, 0.2e1 * t134 * t224 - 0.2e1 * t190 * t256 + 0.2e1 * t65 * t225 - 0.2e1 * t74 * t89, 0.2e1 * t134 * t74 - 0.2e1 * t256 * t65, t43, t145, t151 * t246, t205, t150 * t247, t81, 0.2e1 * t63 * t49 + 0.2e1 * t65 * t68 + 0.2e1 * (t109 * t113 + t216 * t41) * t100, -0.2e1 * t63 * t48 + 0.2e1 * t65 * t69 + 0.2e1 * (-t109 * t22 - t216 * t42) * t100, 0.2e1 * t113 * t69 + 0.2e1 * t22 * t68 + 0.2e1 * t41 * t48 - 0.2e1 * t42 * t49, -0.2e1 * t113 * t41 - 0.2e1 * t22 * t42 + 0.2e1 * t63 * t65, t81, t151 * t247, t150 * t246, t43, t145, t205, 0.2e1 * t15 * t68 + 0.2e1 * t16 * t69 + 0.2e1 * t37 * t49 - 0.2e1 * t38 * t48, -0.2e1 * t19 * t68 - 0.2e1 * t34 * t49 + 0.2e1 * (-t109 * t16 + t216 * t38) * t100, -0.2e1 * t19 * t69 + 0.2e1 * t34 * t48 + 0.2e1 * (t109 * t15 - t216 * t37) * t100, 0.2e1 * t15 * t37 + 0.2e1 * t16 * t38 + 0.2e1 * t19 * t34, -0.2e1 * t51 * t28, 0.2e1 * t28 * t50 - 0.2e1 * t29 * t51, 0.2e1 * t28 * t69 + 0.2e1 * t48 * t51, 0.2e1 * t50 * t29, 0.2e1 * t29 * t69 - 0.2e1 * t48 * t50, t43, -0.2e1 * t11 * t50 - 0.2e1 * t29 * t31 + 0.2e1 * t3 * t69 - 0.2e1 * t48 * t8, -0.2e1 * t11 * t51 + 0.2e1 * t2 * t69 + 0.2e1 * t28 * t31 + 0.2e1 * t48 * t9, -0.2e1 * t2 * t50 - 0.2e1 * t28 * t8 + 0.2e1 * t29 * t9 + 0.2e1 * t3 * t51, 0.2e1 * t11 * t31 - 0.2e1 * t2 * t9 + 0.2e1 * t3 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, -t33, 0, 0, 0, 0, 0, 0, 0, 0, -t18, t17, t128, -pkin(3) * t32 + t123, 0, 0, 0, 0, 0, 0, t128, t18, -t17, t32 * t82 + t47 * t66 + t123, 0, 0, 0, 0, 0, 0 (-t213 * t36 + t4) * t104 + (qJD(4) * t20 + t147) * t108 (t215 * t36 - t5) * t104 + (-qJD(4) * t21 - t148) * t108, t161 * t214 + (t103 * t4 - t107 * t5 + (t103 * t21 + t107 * t20) * qJD(6)) * t108, t13 * t86 + t20 * t27 - t21 * t26 - t36 * t79 + t4 * t45 + t46 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, 0, -t89, 0, -t65, -t134, 0, 0, t40, t125, t58, t149, t57, 0, -pkin(3) * t49 - pkin(10) * t58 - t65 * t108 + t214 * t63, pkin(3) * t48 + t65 * t104 - t142 * t241 + t63 * t93, t122 + t126, -pkin(3) * t65 + pkin(10) * t126, 0, -t58, -t57, t40, t125, t149, t122 + t127, t19 * t108 + t141 * t241 - t214 * t34 - t82 * t49 - t66 * t68, pkin(10) * t57 - t19 * t104 - t34 * t93 + t82 * t48 - t66 * t69, pkin(10) * t127 + t19 * t82 + t34 * t66, t51 * t191 + (-t108 * t28 - t214 * t51) * t103, t159 * t214 + (-t236 - t233 + (-t232 - t235) * qJD(6)) * t108 (t215 * t69 + t28) * t104 + (-qJD(4) * t51 + t146) * t108, t50 * t192 + (-t108 * t29 + t214 * t50) * t107 (t213 * t69 + t29) * t104 + (qJD(4) * t50 - t39) * t108, t40, t27 * t69 - t29 * t86 - t45 * t48 + t50 * t79 + (-t213 * t31 + t3) * t104 + (qJD(4) * t8 - t209 * t31 + t229) * t108, t26 * t69 + t28 * t86 + t46 * t48 + t51 * t79 + (t215 * t31 + t2) * t104 + (-qJD(4) * t9 - t208 * t31 - t230) * t108, -t26 * t50 + t27 * t51 - t28 * t45 + t29 * t46 + t165 * t214 + (t103 * t3 + t107 * t2 + (t103 * t9 + t107 * t8) * qJD(6)) * t108, t11 * t86 - t2 * t46 - t26 * t9 + t27 * t8 + t3 * t45 - t31 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t78, 0, t88, 0, 0, t104 * t204, t108 * t204, 0, 0, 0, 0, 0, t87, t78, t88, 0, 0.2e1 * t108 * t66 - 0.2e1 * t214 * t82, -0.2e1 * t104 * t66 - 0.2e1 * t82 * t93, 0.2e1 * t82 * t66, -0.2e1 * t187 * t96 + 0.2e1 * t176, -0.4e1 * t108 * t170 - 0.2e1 * t183 * t99, 0.2e1 * t103 * t184 - 0.2e1 * t104 * t191, -0.2e1 * t187 * t98 - 0.2e1 * t176, 0.2e1 * t104 * t192 + 0.2e1 * t107 * t184, t87, 0.2e1 * (-t213 * t86 + t27) * t104 + 0.2e1 * (qJD(4) * t45 - t79 * t107 - t209 * t86) * t108, 0.2e1 * (t215 * t86 + t26) * t104 + 0.2e1 * (-qJD(4) * t46 + t79 * t103 - t208 * t86) * t108, 0.2e1 * t160 * t214 + 0.2e1 * (t103 * t27 + t107 * t26 + (t103 * t46 + t107 * t45) * qJD(6)) * t108, -0.2e1 * t46 * t26 + 0.2e1 * t27 * t45 - 0.2e1 * t86 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, -t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, t13, -pkin(4) * t12 + t158, 0, 0, 0, 0, 0, 0, t148, t147, -t1, -t1 * t243 + t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, 0, -t49, t89, -t113, t22, 0, 0, t89, t48, t49, 0, 0, 0, pkin(4) * t48 - qJ(5) * t49 - qJD(5) * t68, t113 - 0.2e1 * t178, 0.2e1 * t169 - t22 - 0.2e1 * t189, -pkin(4) * t16 - qJ(5) * t15 - qJD(5) * t37, t209 * t51 + t233, -qJD(6) * t159 - t103 * t28 + t107 * t29, t39, -t208 * t50 - t236, t146, 0, t48 * t219 - qJ(5) * t29 - qJD(5) * t50 + t230 + (t107 * t31 + t221 * t69) * qJD(6), -t48 * t221 + qJ(5) * t28 - qJD(5) * t51 + t229 + (-t103 * t31 + t219 * t69) * qJD(6) (t243 * t28 - t3) * t107 + (-t243 * t29 + t2) * t103 + ((-t243 * t50 - t9) * t107 + (t243 * t51 + t8) * t103) * qJD(6), t11 * qJ(5) + t31 * qJD(5) - t131 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t214, 0, -t201, t202, 0, 0, 0, -t93, t214, 0, 0, 0, t133, t201, -t202, t133 * pkin(10), -t53, 0.4e1 * t108 * t186 - t214 * t238, t70, t53, t71, 0, t137 * t103 - t107 * t249, t103 * t249 + t137 * t107, -t6, -t79 * qJ(5) + t86 * qJD(5) - t243 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t94, -0.2e1 * t186, 0.2e1 * t183, 0, 0.2e1 * t186, 0, 0, 0.2e1 * qJ(5) * t208 + 0.2e1 * qJD(5) * t103, -0.2e1 * qJ(5) * t209 + 0.2e1 * qJD(5) * t107, 0, t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t12, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t89, 0, t16, 0, 0, 0, 0, 0, 0, t39, t146, t236 - t233 + (t232 - t235) * qJD(6), t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, t201, 0, 0, 0, 0, 0, 0, t70, t71, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, -t5, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t28, 0, t29, -t48, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t214 - t191, 0, t192 + t193, t93, t27, t26, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, 0, -t208, 0, t103 * t206, t107 * t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, -t208, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
