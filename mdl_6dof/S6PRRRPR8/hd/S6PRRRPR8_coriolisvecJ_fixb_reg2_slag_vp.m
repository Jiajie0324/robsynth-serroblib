% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:54
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPR8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRPR8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:53:21
% EndTime: 2019-03-08 23:53:44
% DurationCPUTime: 9.96s
% Computational Cost: add. (9931->579), mult. (26888->798), div. (0->0), fcn. (21651->12), ass. (0->282)
t196 = cos(qJ(3));
t352 = cos(pkin(7));
t280 = t196 * t352;
t187 = sin(pkin(7));
t192 = sin(qJ(3));
t333 = t187 * t192;
t153 = pkin(2) * t280 - pkin(9) * t333;
t146 = qJD(3) * t153;
t193 = sin(qJ(2));
t197 = cos(qJ(2));
t282 = t192 * t352;
t223 = -t193 * t282 + t196 * t197;
t188 = sin(pkin(6));
t320 = qJD(1) * t188;
t322 = t223 * t320 - t146;
t252 = pkin(3) * t192 - pkin(10) * t196;
t231 = t252 * qJD(3);
t287 = t193 * t320;
t411 = (t231 - t287) * t187;
t332 = t187 * t196;
t154 = pkin(2) * t282 + pkin(9) * t332;
t147 = qJD(3) * t154;
t221 = t192 * t197 + t193 * t280;
t323 = t221 * t320 - t147;
t141 = pkin(10) * t352 + t154;
t253 = -pkin(3) * t196 - pkin(10) * t192;
t142 = (-pkin(2) + t253) * t187;
t191 = sin(qJ(4));
t195 = cos(qJ(4));
t309 = qJD(4) * t195;
t311 = qJD(4) * t191;
t369 = t141 * t309 + t142 * t311 - t322 * t191 - t411 * t195;
t296 = t191 * t333;
t261 = qJD(4) * t296;
t281 = t195 * t352;
t315 = qJD(3) * t187;
t290 = t196 * t315;
t112 = -qJD(4) * t281 - t195 * t290 + t261;
t152 = t191 * t352 + t195 * t333;
t410 = -t112 * qJ(5) + t152 * qJD(5) + t323;
t368 = qJD(2) * pkin(2);
t167 = t197 * t320 + t368;
t278 = t352 * t167;
t318 = qJD(2) * t187;
t156 = pkin(9) * t318 + t287;
t326 = t196 * t156;
t224 = t192 * t278 + t326;
t316 = qJD(2) * t196;
t292 = t187 * t316;
t262 = t191 * t292;
t409 = -t191 * qJD(5) - t224 + (-t262 + t311) * pkin(4);
t314 = qJD(3) * t192;
t291 = t187 * t314;
t382 = pkin(4) + pkin(11);
t242 = t382 * t291;
t408 = -t112 * pkin(5) - t242 + t369;
t113 = qJD(4) * t152 + t191 * t290;
t407 = -t113 * t382 + t410;
t351 = qJ(5) * t195;
t248 = pkin(11) * t191 - t351;
t189 = cos(pkin(6));
t319 = qJD(1) * t189;
t294 = t192 * t319;
t406 = qJD(4) * t248 - (t248 * t316 + t294) * t187 + t409;
t381 = pkin(5) + pkin(10);
t175 = t381 * t195;
t327 = t195 * t196;
t144 = t252 * t318;
t148 = t192 * t156;
t220 = t187 * t319 + t278;
t85 = t196 * t220 - t148;
t65 = t195 * t144 - t191 * t85;
t405 = -qJD(4) * t175 + (pkin(5) * t327 - t192 * t382) * t318 - t65;
t283 = t189 * t352;
t255 = qJD(1) * t283;
t206 = t255 + (qJD(2) * t253 - t167) * t187;
t217 = t223 * qJD(2);
t258 = t189 * t290;
t56 = (t196 * t278 - t148) * qJD(3) + (t188 * t217 + t258) * qJD(1);
t404 = qJD(4) * t206 + t56;
t276 = t352 * qJD(2);
t237 = t276 + qJD(3);
t226 = t195 * t237;
t293 = t192 * t318;
t131 = t191 * t293 - t226;
t86 = t192 * t220 + t326;
t75 = pkin(10) * t237 + t86;
t38 = t191 * t206 + t195 * t75;
t32 = -t131 * pkin(5) + t38;
t37 = t191 * t75 - t195 * t206;
t325 = -qJD(5) - t37;
t172 = -qJD(4) + t292;
t106 = (t231 + t287) * t318;
t274 = -t195 * t106 + t191 * t404 + t75 * t309;
t233 = -t172 * t38 - t274;
t275 = -t191 * t106 - t195 * t404 + t75 * t311;
t403 = -t172 * t37 - t275;
t304 = qJD(2) * qJD(3);
t285 = t196 * t304;
t257 = t187 * t285;
t133 = t191 * t237 + t195 * t293;
t312 = qJD(4) * t133;
t102 = t191 * t257 + t312;
t151 = -t281 + t296;
t402 = -t172 * t113 + t187 * ((qJD(2) * t151 + t131) * t314 - t102 * t196);
t101 = qJD(2) * t261 - qJD(4) * t226 - t195 * t257;
t401 = t172 * t112 + t187 * ((qJD(2) * t152 + t133) * t314 + t101 * t196);
t400 = -t172 * t309 + t318 * ((qJD(3) * t191 - t133) * t192 + t172 * t327);
t313 = qJD(3) * t195;
t329 = t191 * t196;
t399 = t172 * t311 + t318 * (t192 * (t131 + t313) - t172 * t329);
t11 = -t101 * pkin(5) - qJD(2) * t242 + t274;
t216 = t221 * qJD(2);
t259 = t189 * t291;
t57 = t224 * qJD(3) + (t188 * t216 + t259) * qJD(1);
t200 = t101 * qJ(5) - t133 * qJD(5) + t57;
t16 = t102 * t382 + t200;
t190 = sin(qJ(6));
t194 = cos(qJ(6));
t324 = t133 * pkin(5) - t325;
t24 = t172 * t382 + t324;
t74 = -pkin(3) * t237 - t85;
t201 = -t133 * qJ(5) + t74;
t33 = t131 * t382 + t201;
t246 = t190 * t33 - t194 * t24;
t1 = -qJD(6) * t246 + t190 * t11 + t194 * t16;
t126 = qJD(6) + t133;
t398 = t126 * t246 + t1;
t9 = t190 * t24 + t194 * t33;
t2 = -qJD(6) * t9 + t194 * t11 - t190 * t16;
t397 = t9 * t126 + t2;
t176 = qJD(2) * t291;
t243 = pkin(4) * t176;
t13 = -t243 + t274;
t340 = t172 * qJ(5);
t35 = -t38 + t340;
t396 = -t172 * t35 + t13;
t370 = -t141 * t311 + t142 * t309 + t411 * t191 - t322 * t195;
t98 = -t194 * t131 - t172 * t190;
t277 = t126 * t98;
t307 = qJD(6) * t194;
t308 = qJD(6) * t190;
t45 = -t190 * t102 - t131 * t307 - t172 * t308 - t194 * t176;
t395 = t45 - t277;
t100 = t131 * t190 - t172 * t194;
t350 = t100 * t126;
t46 = qJD(6) * t100 - t194 * t102 + t176 * t190;
t394 = -t46 + t350;
t81 = t101 * t152;
t393 = -t112 * t133 - t81;
t335 = t172 * t195;
t97 = t101 * t191;
t392 = -t133 * t335 - t97;
t341 = t133 * t172;
t390 = t102 + t341;
t279 = t197 * t352;
t389 = -t192 * t193 + t196 * t279;
t27 = -t340 + t32;
t388 = t101 * t382 + t126 * t27;
t372 = -t187 * (qJ(5) * t314 - qJD(5) * t196) - t370;
t383 = t133 ^ 2;
t199 = qJD(2) ^ 2;
t87 = -t191 * t141 + t142 * t195;
t80 = pkin(4) * t332 - t87;
t55 = pkin(5) * t152 + pkin(11) * t332 + t80;
t140 = -pkin(3) * t352 - t153;
t209 = -t152 * qJ(5) + t140;
t64 = t151 * t382 + t209;
t22 = -t190 * t64 + t194 * t55;
t380 = qJD(6) * t22 + t190 * t408 - t407 * t194;
t23 = t190 * t55 + t194 * t64;
t379 = -qJD(6) * t23 + t407 * t190 + t194 * t408;
t284 = -t191 * qJ(5) - pkin(3);
t155 = -t195 * t382 + t284;
t174 = t381 * t191;
t108 = t155 * t194 + t174 * t190;
t375 = qJD(6) * t108 + t190 * t406 + t194 * t405;
t107 = -t155 * t190 + t174 * t194;
t374 = -qJD(6) * t107 + t190 * t405 - t194 * t406;
t373 = -t113 * pkin(5) - t372;
t371 = -pkin(4) * t291 + t369;
t239 = qJ(5) * t176;
t254 = -qJD(5) * t172 - t275;
t12 = -t239 - t254;
t10 = -pkin(5) * t102 - t12;
t367 = t10 * t190;
t366 = t10 * t194;
t365 = t100 * t98;
t39 = t131 * pkin(4) + t201;
t364 = t133 * t39;
t360 = t172 * t98;
t359 = t194 * t45;
t357 = t46 * t190;
t109 = -t188 * t389 - t189 * t332;
t356 = t57 * t109;
t355 = -t113 * pkin(4) + t410;
t354 = -qJ(5) * t309 - (-t316 * t351 + t294) * t187 + t409;
t66 = t191 * t144 + t195 * t85;
t353 = -t381 * t311 - (-pkin(5) * t329 + qJ(5) * t192) * t318 - t66;
t125 = -t187 * t167 + t255;
t345 = t125 * t187;
t344 = t131 * qJ(5);
t343 = t131 * t133;
t342 = t131 * t172;
t339 = t172 * t100;
t336 = t172 * t191;
t184 = t187 ^ 2;
t334 = t184 * t199;
t331 = t188 * t199;
t330 = t190 * t101;
t95 = t194 * t101;
t88 = t195 * t141 + t191 * t142;
t321 = t192 ^ 2 - t196 ^ 2;
t317 = qJD(2) * t188;
t310 = qJD(4) * t194;
t306 = qJD(6) * t195;
t305 = qJD(6) * t382;
t303 = pkin(10) * t336;
t302 = pkin(10) * t335;
t301 = t184 * t368;
t300 = pkin(10) * t314;
t299 = pkin(10) * t313;
t295 = t193 * t331;
t286 = -t131 ^ 2 + t383;
t273 = t126 * t190;
t267 = t184 * t295;
t266 = t192 * t196 * t334;
t263 = t187 * t193 * t317;
t260 = t172 * t293;
t251 = t190 * t246 + t194 * t9;
t123 = t190 * t293 - t194 * t262;
t250 = t191 * t310 + t123;
t124 = (t190 * t329 + t192 * t194) * t318;
t249 = t190 * t311 - t124;
t245 = (qJD(4) * t131 - t101) * pkin(10);
t244 = (-t102 + t312) * pkin(10);
t222 = t192 * t279 + t193 * t196;
t110 = t188 * t222 + t189 * t333;
t150 = -t188 * t197 * t187 + t283;
t77 = t110 * t191 - t150 * t195;
t44 = t109 * t194 + t190 * t77;
t43 = -t109 * t190 + t194 * t77;
t241 = t102 * t151 + t113 * t131;
t78 = t110 * t195 + t150 * t191;
t240 = t184 * t192 * t285;
t236 = 0.2e1 * t276 + qJD(3);
t79 = qJ(5) * t332 - t88;
t234 = -t301 + t345;
t232 = -t126 * t273 - t95;
t115 = -t190 * t151 + t194 * t332;
t114 = t151 * t194 + t190 * t332;
t219 = -t126 ^ 2 * t194 + t330;
t73 = t258 + (qJD(3) * t389 + t217) * t188;
t28 = qJD(4) * t78 + t73 * t191 - t195 * t263;
t29 = t191 * t263 - t110 * t311 + (qJD(4) * t150 + t73) * t195;
t214 = -t101 * t77 - t102 * t78 - t131 * t29 + t133 * t28;
t213 = qJD(3) * t156 + t276 * t287;
t212 = t101 * t151 - t102 * t152 + t112 * t131 - t113 * t133;
t211 = t101 + t342;
t210 = -t102 * t195 - t131 * t336;
t72 = t259 + (qJD(3) * t222 + t216) * t188;
t208 = t101 * t109 - t133 * t72 - t172 * t29 + t176 * t78;
t207 = -t102 * t109 - t131 * t72 - t172 * t28 + t176 * t77;
t203 = -qJD(3) * t278 - t125 * t318 + (-t189 * t315 - t197 * t317) * qJD(1);
t202 = (-t101 + t342) * t195 + (-t102 + t341) * t191;
t170 = -pkin(4) * t195 + t284;
t111 = (-t172 * t187 - t184 * t316) * t314;
t84 = pkin(4) * t133 + t344;
t76 = t151 * pkin(4) + t209;
t68 = t133 * t382 + t344;
t67 = -pkin(5) * t151 - t79;
t61 = qJD(6) * t115 + t194 * t113 - t190 * t291;
t60 = qJD(6) * t114 + t190 * t113 + t194 * t291;
t54 = -pkin(4) * t293 - t65;
t50 = -qJ(5) * t293 - t66;
t34 = pkin(4) * t172 - t325;
t21 = t102 * pkin(4) + t200;
t18 = t190 * t32 + t194 * t68;
t17 = -t190 * t68 + t194 * t32;
t6 = qJD(6) * t43 + t28 * t190 + t72 * t194;
t5 = -qJD(6) * t44 - t72 * t190 + t28 * t194;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, -t197 * t331, 0, 0, 0, 0, 0, 0, 0, 0, t150 * t176 - t196 * t267 - t237 * t72, t150 * t257 + t192 * t267 - t237 * t73 (t192 * t72 + t196 * t73 + (t109 * t196 - t110 * t192) * qJD(3)) * t318, t356 + t56 * t110 - t85 * t72 + t86 * t73 + (qJD(1) * t150 + t125) * t263, 0, 0, 0, 0, 0, 0, -t207, -t208, t214, t274 * t77 - t275 * t78 + t28 * t37 + t29 * t38 + t72 * t74 + t356, 0, 0, 0, 0, 0, 0, t214, t207, t208, t109 * t21 - t12 * t78 + t13 * t77 + t28 * t34 - t29 * t35 + t39 * t72, 0, 0, 0, 0, 0, 0, -t101 * t43 + t126 * t5 + t29 * t98 + t46 * t78, t100 * t29 + t101 * t44 - t126 * t6 - t45 * t78, -t100 * t5 + t43 * t45 - t44 * t46 - t6 * t98, t1 * t44 + t10 * t78 + t2 * t43 - t246 * t5 + t27 * t29 + t6 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t240, -0.2e1 * t321 * t184 * t304, t236 * t290, -0.2e1 * t240, -t236 * t291, 0 (t192 * t234 + t323) * qJD(3) + (qJD(2) * t323 - t57) * t352 (t196 * t234 + t322) * qJD(3) + (qJD(2) * t322 - t56) * t352 (t192 * t57 + t196 * t56 + (-t192 * t86 - t196 * t85) * qJD(3) + ((-t322 - t146) * t196 + (-t323 - t147) * t192) * qJD(2)) * t187, -t57 * t153 + t56 * t154 - t322 * t86 + t323 * t85 + (-t301 - t345) * t287, t393, t212, t401, t241, -t402, t111, t140 * t102 + t74 * t113 + t57 * t151 + t369 * t172 - t323 * t131 + (t274 * t196 + (qJD(2) * t87 - t37) * t314) * t187, -t140 * t101 - t74 * t112 + t57 * t152 + t370 * t172 - t323 * t133 + (-t275 * t196 + (-qJD(2) * t88 - t38) * t314) * t187, t87 * t101 - t88 * t102 - t37 * t112 - t38 * t113 - t131 * t370 + t133 * t369 + t151 * t275 + t152 * t274, t57 * t140 - t274 * t87 - t275 * t88 - t323 * t74 + t369 * t37 + t370 * t38, t111, -t401, t402, t393, t212, t241, -t80 * t101 + t79 * t102 - t34 * t112 + t35 * t113 + t12 * t151 + t13 * t152 + t131 * t372 + t133 * t371, -t76 * t102 - t39 * t113 - t21 * t151 - t371 * t172 + t355 * t131 + (-t13 * t196 + (qJD(2) * t80 + t34) * t314) * t187, t76 * t101 + t39 * t112 - t21 * t152 + t372 * t172 + t355 * t133 + (t12 * t196 + (-qJD(2) * t79 - t35) * t314) * t187, t12 * t79 + t13 * t80 + t21 * t76 + t34 * t371 + t35 * t372 - t355 * t39, t100 * t60 + t115 * t45, t100 * t61 - t114 * t45 + t115 * t46 - t60 * t98, -t100 * t112 + t101 * t115 + t126 * t60 - t152 * t45, -t114 * t46 - t61 * t98, -t101 * t114 + t112 * t98 + t126 * t61 - t152 * t46, -t112 * t126 - t81, -t10 * t114 - t22 * t101 + t112 * t246 + t126 * t379 + t2 * t152 - t27 * t61 + t373 * t98 + t67 * t46, -t1 * t152 - t10 * t115 + t100 * t373 + t23 * t101 + t9 * t112 - t126 * t380 + t27 * t60 - t67 * t45, t1 * t114 - t100 * t379 + t2 * t115 + t22 * t45 - t23 * t46 + t246 * t60 - t380 * t98 + t9 * t61, t1 * t23 + t10 * t67 + t2 * t22 - t246 * t379 + t27 * t373 + t380 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, t321 * t334, -t187 * t199 * t280, t266, t237 * t293 - t176, 0, t192 * t203 - t196 * t213 + t237 * t86, t192 * t213 + t196 * t203 + t237 * t85, 0, 0, t392, t202, t400, t210, t399, t260, -pkin(3) * t102 - t86 * t131 + t65 * t172 - t57 * t195 + (t191 * t74 + t302) * qJD(4) + (t192 * t37 + (-t196 * t74 - t300) * t191) * t318, pkin(3) * t101 - t86 * t133 - t66 * t172 + t57 * t191 + (t195 * t74 - t303) * qJD(4) + (-t74 * t327 + (t38 - t299) * t192) * t318, t66 * t131 + t65 * t133 + (t244 + t403) * t195 + (t245 - t233) * t191, -t57 * pkin(3) + t37 * t65 - t38 * t66 - t74 * t86 + (-t275 * t195 + t274 * t191 + (-t191 * t38 + t195 * t37) * qJD(4)) * pkin(10), t260, -t400, -t399, t392, t202, t210, -t50 * t131 - t54 * t133 + (-t172 * t34 - t12 + t244) * t195 + (t245 + t396) * t191, -t170 * t102 + t54 * t172 + t21 * t195 - t354 * t131 + (-t191 * t39 - t302) * qJD(4) + (-t192 * t34 + (t196 * t39 + t300) * t191) * t318, t170 * t101 - t50 * t172 - t21 * t191 - t354 * t133 + (-t195 * t39 + t303) * qJD(4) + (t39 * t327 + (t35 + t299) * t192) * t318, t21 * t170 - t34 * t54 - t35 * t50 + t354 * t39 + (-t12 * t195 + t13 * t191 + (t191 * t35 + t195 * t34) * qJD(4)) * pkin(10), t45 * t190 * t195 + (-t194 * t306 + t249) * t100, t100 * t123 + t124 * t98 + (t100 * t194 - t190 * t98) * t311 + (t357 + t359 + (t100 * t190 + t194 * t98) * qJD(6)) * t195, -t45 * t191 + t249 * t126 + (-t126 * t307 + t330 - t339) * t195, t46 * t194 * t195 + (-t190 * t306 - t250) * t98, -t46 * t191 + t250 * t126 + (t126 * t308 + t360 + t95) * t195, -t126 * t335 - t97, -t101 * t107 - t123 * t27 + t175 * t46 + t353 * t98 + (-t27 * t310 + t2) * t191 - t375 * t126 + (t172 * t246 - t27 * t308 + t366) * t195, t108 * t101 - t27 * t124 - t175 * t45 + (qJD(4) * t190 * t27 - t1) * t191 + t374 * t126 + t353 * t100 + (t172 * t9 - t27 * t307 - t367) * t195, t107 * t45 - t108 * t46 + t123 * t9 - t124 * t246 + t374 * t98 + t375 * t100 + t251 * t311 + (-t1 * t194 + t190 * t2 + (t190 * t9 - t194 * t246) * qJD(6)) * t195, t1 * t108 + t10 * t175 + t2 * t107 + t246 * t375 + t27 * t353 - t374 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, t286, -t211, -t343, -t390, t176, -t133 * t74 + t233, t131 * t74 - t403, 0, 0, t176, t211, t390, t343, t286, -t343, pkin(4) * t101 - qJ(5) * t102 + (-t35 - t38) * t133 + (t34 + t325) * t131, t131 * t84 - t233 - 0.2e1 * t243 + t364, -t39 * t131 + t84 * t133 + t172 * t325 + 0.2e1 * t239 + t254, -t13 * pkin(4) - t12 * qJ(5) + t325 * t35 - t34 * t38 - t39 * t84, -t100 * t273 - t359 (-t46 - t350) * t194 + (t45 + t277) * t190, t100 * t131 + t232, t194 * t277 + t357, -t98 * t131 + t219, t126 * t131, qJ(5) * t46 + t367 - t246 * t131 + t324 * t98 + (t190 * t305 - t17) * t126 + t388 * t194, -qJ(5) * t45 + t366 - t9 * t131 + (t194 * t305 + t18) * t126 + t324 * t100 - t388 * t190, t17 * t100 + t18 * t98 + (-t133 * t9 - t382 * t45 - t2 + (t382 * t98 - t9) * qJD(6)) * t194 + (-t133 * t246 + t382 * t46 - t1 + (-t100 * t382 - t246) * qJD(6)) * t190, t10 * qJ(5) + t246 * t17 - t9 * t18 + t324 * t27 - (qJD(6) * t251 + t1 * t190 + t2 * t194) * t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t176 - t343, -t172 ^ 2 - t383, t364 + t396, 0, 0, 0, 0, 0, 0, t232 + t360, t219 + t339, t190 * t394 + t194 * t395, t27 * t172 + t190 * t398 + t397 * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, t100 ^ 2 - t98 ^ 2, -t395, -t365, t394, -t101, -t27 * t100 + t397, t27 * t98 - t398, 0, 0;];
tauc_reg  = t3;
