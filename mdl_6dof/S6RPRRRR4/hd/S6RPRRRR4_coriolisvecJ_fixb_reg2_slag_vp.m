% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:05:54
% EndTime: 2019-03-09 07:06:13
% DurationCPUTime: 8.62s
% Computational Cost: add. (25189->520), mult. (67782->670), div. (0->0), fcn. (54909->10), ass. (0->260)
t200 = sin(qJ(5));
t197 = sin(pkin(11));
t198 = cos(pkin(11));
t328 = sin(qJ(3));
t331 = cos(qJ(3));
t235 = t331 * t197 + t328 * t198;
t343 = t235 * qJD(1);
t162 = qJD(3) * t343;
t201 = sin(qJ(4));
t233 = t328 * t197 - t331 * t198;
t359 = t233 * qJD(1);
t217 = qJD(3) * t359;
t330 = cos(qJ(4));
t266 = qJD(4) * t330;
t282 = qJD(4) * t201;
t210 = -t330 * t162 + t201 * t217 - t266 * t343 + t282 * t359;
t219 = t330 * t233;
t215 = qJD(3) * t219;
t237 = -qJD(1) * t215 - t201 * t162 - t266 * t359 - t282 * t343;
t239 = -t201 * t359 + t330 * t343;
t240 = -t201 * t343 - t330 * t359;
t329 = cos(qJ(5));
t265 = qJD(5) * t329;
t281 = qJD(5) * t200;
t255 = t200 * t210 + t237 * t329 - t239 * t281 + t240 * t265;
t263 = -t200 * t237 + t210 * t329;
t336 = t200 * t240 + t239 * t329;
t358 = t336 * qJD(5);
t51 = -t263 + t358;
t327 = pkin(3) * t162;
t76 = -pkin(4) * t210 + t327;
t12 = pkin(5) * t51 - pkin(10) * t255 + t76;
t199 = sin(qJ(6));
t202 = cos(qJ(6));
t317 = pkin(7) + qJ(2);
t182 = t317 * t198;
t179 = qJD(1) * t182;
t181 = t317 * t197;
t178 = qJD(1) * t181;
t269 = qJD(2) * t328;
t250 = qJD(1) * t269;
t270 = qJD(2) * t331;
t251 = qJD(1) * t270;
t268 = qJD(3) * t331;
t232 = -t178 * t268 - t197 * t250 + t198 * t251;
t267 = qJD(3) * t328;
t121 = -t179 * t267 + t232;
t109 = -t162 * pkin(8) + t121;
t110 = pkin(8) * t217 + t178 * t267 - t179 * t268 - t197 * t251 - t198 * t250;
t272 = t328 * t179;
t150 = -t331 * t178 - t272;
t126 = -pkin(8) * t343 + t150;
t125 = qJD(3) * pkin(3) + t126;
t234 = t328 * t178 - t331 * t179;
t127 = -pkin(8) * t359 - t234;
t253 = -t330 * t109 - t201 * t110 - t125 * t266 + t127 * t282;
t31 = pkin(9) * t210 - t253;
t257 = -t201 * t109 + t330 * t110;
t274 = t330 * t127;
t75 = t201 * t125 + t274;
t49 = -qJD(4) * t75 + t257;
t32 = -pkin(9) * t237 + t49;
t196 = qJD(3) + qJD(4);
t352 = pkin(9) * t239;
t123 = t201 * t127;
t74 = t330 * t125 - t123;
t68 = t74 - t352;
t64 = pkin(4) * t196 + t68;
t351 = pkin(9) * t240;
t69 = t75 + t351;
t214 = -t200 * t32 - t64 * t265 + t69 * t281 - t329 * t31;
t262 = qJD(5) + t196;
t277 = t329 * t69;
t38 = t200 * t64 + t277;
t36 = pkin(10) * t262 + t38;
t190 = -t198 * pkin(2) - pkin(1);
t180 = t190 * qJD(1) + qJD(2);
t152 = pkin(3) * t359 + t180;
t111 = -pkin(4) * t240 + t152;
t96 = t200 * t239 - t240 * t329;
t54 = pkin(5) * t96 - pkin(10) * t336 + t111;
t247 = t199 * t36 - t202 * t54;
t2 = -qJD(6) * t247 + t12 * t199 - t202 * t214;
t374 = qJD(6) + t96;
t324 = t247 * t374;
t385 = t2 + t324;
t382 = t199 * t374;
t83 = t199 * t262 + t202 * t336;
t384 = t83 * t382;
t294 = qJD(6) * t83;
t29 = t199 * t255 + t294;
t27 = t29 * t202;
t246 = t202 * t262;
t81 = t199 * t336 - t246;
t383 = t382 * t81 - t27;
t349 = t262 * t96;
t355 = t255 + t349;
t318 = t96 ^ 2;
t367 = t336 ^ 2;
t357 = t367 - t318;
t14 = t199 * t54 + t202 * t36;
t3 = -qJD(6) * t14 + t202 * t12 + t199 * t214;
t381 = t14 * t374 + t3;
t280 = qJD(6) * t199;
t28 = -qJD(6) * t246 - t202 * t255 + t280 * t336;
t26 = t202 * t28;
t279 = qJD(6) * t202;
t316 = -t199 * t29 - t81 * t279;
t377 = t202 * t96;
t370 = -t377 * t81 - t26 + t316;
t25 = t28 * t199;
t369 = -t25 + (t279 + t377) * t83;
t380 = t370 - t384;
t45 = t199 * t51;
t315 = t279 * t374 + t45;
t319 = t83 * t336;
t368 = t374 * t377 + t315 - t319;
t321 = t81 * t336;
t47 = t202 * t51;
t379 = -t374 * t382 + t321 + t47;
t302 = t200 * t69;
t37 = t329 * t64 - t302;
t35 = -pkin(5) * t262 - t37;
t378 = t35 * t96;
t376 = t247 * t96;
t311 = t96 * t336;
t256 = t336 * t196;
t337 = t256 + t263;
t30 = t329 * t32;
t264 = t200 * t31 - t30;
t347 = t111 * t336;
t373 = -t264 - t347;
t372 = -t14 * t96 - t3;
t63 = pkin(5) * t336 + pkin(10) * t96;
t371 = t38 * t336 - t37 * t96;
t356 = t111 * t96 + t214;
t348 = t374 * t336;
t287 = t196 * t239;
t363 = t210 + t287;
t212 = t201 * t235 + t219;
t290 = t240 * t196;
t362 = t237 - t290;
t291 = t240 ^ 2;
t292 = t239 ^ 2;
t361 = -t291 + t292;
t345 = t330 * t235;
t149 = -t201 * t233 + t345;
t208 = qJD(4) * t149;
t360 = t212 * qJD(4);
t8 = qJD(5) * t38 + t264;
t332 = t8 * t199 + t35 * t279;
t340 = t14 * t336 + t332;
t33 = t35 * t280;
t342 = t247 * t336 + t33;
t325 = pkin(4) * t239;
t193 = t330 * pkin(3) + pkin(4);
t286 = t200 * t201;
t147 = t193 * t265 + (-t201 * t281 + (t329 * t330 - t286) * qJD(4)) * pkin(3);
t77 = -t201 * t126 - t274;
t231 = t77 - t351;
t78 = t330 * t126 - t123;
t70 = t78 - t352;
t43 = t200 * t231 + t329 * t70;
t296 = t147 - t43;
t273 = t329 * t201;
t295 = -t200 * t70 + t329 * t231 + t193 * t281 + (t201 * t265 + (t330 * t200 + t273) * qJD(4)) * pkin(3);
t242 = t280 * t374 - t47;
t346 = t152 * t239;
t289 = t240 * t239;
t153 = -t331 * t181 - t328 * t182;
t139 = -pkin(8) * t235 + t153;
t154 = -t328 * t181 + t331 * t182;
t140 = -pkin(8) * t233 + t154;
t87 = t201 * t139 + t330 * t140;
t344 = t14 * t202 + t199 * t247;
t227 = qJD(3) * t233;
t338 = -t152 * t240 + t253;
t335 = t343 ^ 2;
t334 = qJD(3) ^ 2;
t86 = t330 * t139 - t201 * t140;
t72 = -pkin(9) * t149 + t86;
t73 = -pkin(9) * t212 + t87;
t52 = t200 * t73 - t329 * t72;
t333 = t52 * t8;
t326 = pkin(3) * t343;
t1 = t2 * t202;
t322 = t8 * t202;
t320 = t83 * t81;
t313 = pkin(4) * qJD(5);
t207 = t329 * t212;
t107 = t149 * t200 + t207;
t310 = t107 * t51;
t307 = t199 * t35;
t305 = t199 * t81;
t304 = t199 * t83;
t301 = t202 * t83;
t300 = t202 * t374;
t293 = qJD(6) * t374;
t288 = t343 * t359;
t168 = pkin(3) * t273 + t200 * t193;
t283 = t197 ^ 2 + t198 ^ 2;
t258 = t283 * qJD(1) ^ 2;
t254 = pkin(4) * t265;
t39 = t200 * t68 + t277;
t252 = pkin(4) * t281 - t39;
t116 = t326 + t325;
t248 = t14 * t199 - t202 * t247;
t53 = t200 * t72 + t329 * t73;
t209 = t200 * t212;
t108 = t329 * t149 - t209;
t158 = pkin(3) * t233 + t190;
t119 = pkin(4) * t212 + t158;
t61 = t107 * pkin(5) - t108 * pkin(10) + t119;
t23 = t199 * t61 + t202 * t53;
t22 = -t199 * t53 + t202 * t61;
t245 = -t382 * t96 - t242;
t244 = 0.2e1 * t283 * qJD(2) * qJD(1);
t129 = -t181 * t268 - t182 * t267 - t197 * t269 + t198 * t270;
t228 = qJD(3) * t235;
t114 = -pkin(8) * t228 + t129;
t115 = pkin(8) * t227 + t181 * t267 - t182 * t268 - t197 * t270 - t198 * t269;
t241 = -t201 * t114 + t330 * t115;
t58 = t330 * t114 + t201 * t115 + t139 * t266 - t140 * t282;
t167 = -pkin(3) * t286 + t329 * t193;
t165 = pkin(10) + t168;
t236 = -t147 * t374 - t165 * t51 + t378;
t225 = t235 * qJD(2);
t222 = pkin(3) * t228;
t191 = t200 * pkin(4) + pkin(10);
t218 = -t191 * t51 - t254 * t374 + t378;
t216 = qJD(1) * t225;
t213 = -qJD(6) * t248 - t3 * t199 + t1;
t206 = t201 * t228 + t215 + t360;
t205 = qJD(3) * t345 - t201 * t227 + t208;
t204 = t206 * pkin(9) - t139 * t282 - t140 * t266 + t241;
t192 = -t329 * pkin(4) - pkin(5);
t166 = t359 ^ 2;
t164 = -pkin(5) - t167;
t130 = -t154 * qJD(3) - t225;
t122 = qJD(3) * t234 - t216;
t84 = pkin(4) * t208 + (pkin(3) * t235 + pkin(4) * t149) * qJD(3);
t60 = t325 + t63;
t59 = -t87 * qJD(4) + t241;
t57 = t116 + t63;
t56 = -qJD(5) * t209 + t149 * t265 - t200 * t206 + t329 * t205;
t55 = qJD(5) * t207 + t149 * t281 + t200 * t205 + t329 * t206;
t44 = -pkin(9) * t205 + t58;
t40 = t329 * t68 - t302;
t21 = t199 * t63 + t202 * t37;
t20 = -t199 * t37 + t202 * t63;
t19 = t199 * t60 + t202 * t40;
t18 = -t199 * t40 + t202 * t60;
t17 = t199 * t57 + t202 * t43;
t16 = -t199 * t43 + t202 * t57;
t15 = pkin(4) * t205 + t56 * pkin(5) + t55 * pkin(10) + t222;
t10 = t53 * qJD(5) + t200 * t44 - t329 * t204;
t9 = t200 * t204 + t72 * t265 - t73 * t281 + t329 * t44;
t5 = -qJD(6) * t23 + t15 * t202 - t199 * t9;
t4 = qJD(6) * t22 + t15 * t199 + t202 * t9;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, qJ(2) * t244 (-t233 * t343 - t235 * t359) * qJD(3), qJD(1) * qJD(3) * t233 ^ 2 - t162 * t235 + t227 * t359 - t228 * t343, -t233 * t334, t162 * t233 + t228 * t359, -t235 * t334, 0, t190 * t162 + (t180 * t235 + t130) * qJD(3), -t129 * qJD(3) - t180 * t227 - t190 * t217, -t121 * t233 - t122 * t235 - t129 * t359 - t130 * t343 + t234 * t228 - t154 * t162 + (qJD(1) * t153 + t150) * t227, t121 * t154 + t122 * t153 - t129 * t234 + t130 * t150, t237 * t149 + (-t212 * qJD(3) - t360) * t239, t149 * t210 - t205 * t239 - t206 * t240 - t212 * t237, -t196 * t206, -t212 * t210 + (-qJD(3) * t149 - t208) * t240, -t196 * t205, 0, t152 * t205 - t158 * t210 + t59 * t196 + t212 * t327 - t222 * t240, t149 * t327 - t152 * t206 + t158 * t237 - t58 * t196 + t222 * t239, -t49 * t149 - t205 * t75 + t206 * t74 + t210 * t87 + t212 * t253 - t237 * t86 - t239 * t59 + t240 * t58, t152 * t222 + t158 * t327 - t253 * t87 + t49 * t86 + t75 * t58 + t74 * t59, t108 * t255 - t336 * t55, -t107 * t255 - t108 * t51 - t336 * t56 + t55 * t96, -t55 * t262, t56 * t96 + t310, -t56 * t262, 0, -t10 * t262 + t76 * t107 + t111 * t56 + t119 * t51 + t84 * t96, t76 * t108 - t111 * t55 + t119 * t255 - t262 * t9 + t336 * t84, t10 * t336 + t107 * t214 + t108 * t8 + t255 * t52 + t37 * t55 - t38 * t56 - t51 * t53 - t9 * t96, -t10 * t37 + t111 * t84 + t119 * t76 - t214 * t53 + t38 * t9 + t333, -t55 * t301 + (-t280 * t83 - t26) * t108 (t202 * t81 + t304) * t55 + (t25 - t27 + (-t301 + t305) * qJD(6)) * t108, -t107 * t28 - t108 * t242 - t300 * t55 + t56 * t83, -t108 * t316 - t305 * t55, -t107 * t29 - t108 * t315 + t382 * t55 - t56 * t81, t374 * t56 + t310, t10 * t81 + t107 * t3 + t332 * t108 + t22 * t51 - t247 * t56 + t29 * t52 - t55 * t307 + t374 * t5, -t202 * t35 * t55 + t10 * t83 - t107 * t2 - t14 * t56 - t23 * t51 - t28 * t52 - t4 * t374 + (-t33 + t322) * t108, t22 * t28 - t23 * t29 - t4 * t81 - t5 * t83 + t248 * t55 + (-qJD(6) * t344 - t199 * t2 - t202 * t3) * t108, t10 * t35 + t14 * t4 + t2 * t23 + t22 * t3 - t247 * t5 + t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, -qJ(2) * t258, 0, 0, 0, 0, 0, 0, 0.2e1 * t162, -0.2e1 * t217, -t166 - t335, t150 * t343 - t234 * t359, 0, 0, 0, 0, 0, 0, -t210 + t287, t237 + t290, -t291 - t292, t239 * t74 - t240 * t75 + t327, 0, 0, 0, 0, 0, 0, t256 - t263 + 0.2e1 * t358, t255 - t349, -t367 - t318, t336 * t37 + t38 * t96 + t76, 0, 0, 0, 0, 0, 0, t245 - t321, -t300 * t374 - t319 - t45 (-t81 * t96 + t28) * t202 + t384 + t316, t385 * t199 + t381 * t202 - t35 * t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, -t166 + t335, 0, -t288, 0, 0, -t180 * t343 - t216, t180 * t359 + (t272 + t150) * qJD(3) - t232, 0, 0, -t289, t361, t362, t289, t363, 0, t240 * t326 - t346 - t77 * t196 + (-t274 + (-pkin(3) * t196 - t125) * t201) * qJD(4) + t257, t78 * t196 + (-t196 * t266 - t239 * t343) * pkin(3) + t338, t75 * t239 - t78 * t240 + t74 * t240 + t77 * t239 + (-t330 * t237 + t201 * t210 + (t201 * t239 + t240 * t330) * qJD(4)) * pkin(3), -t74 * t77 - t75 * t78 + (t330 * t49 - t152 * t343 - t201 * t253 + (-t201 * t74 + t330 * t75) * qJD(4)) * pkin(3), t311, t357, t355, -t311, t337, 0, -t116 * t96 + (-t38 - t295) * qJD(5) - t295 * t196 + t373, -t116 * t336 - t296 * t262 + t356, -t167 * t255 - t168 * t51 + t295 * t336 - t296 * t96 + t371, -t111 * t116 - t167 * t8 - t168 * t214 - t295 * t37 + t296 * t38, t369, -t304 * t374 + t370, t368, t383, t245 + t321, -t348, -t16 * t374 + t164 * t29 + t295 * t81 + (-t165 * t293 - t8) * t202 + t236 * t199 + t342, -t164 * t28 + (t165 * t280 + t17) * t374 + t295 * t83 + t236 * t202 + t340, t16 * t83 + t17 * t81 + t1 + (t376 - t147 * t81 - t165 * t29 + (t165 * t83 + t247) * qJD(6)) * t202 + (t147 * t83 - t165 * t28 + (t165 * t81 - t14) * qJD(6) + t372) * t199, t164 * t8 + t295 * t35 + (t147 * t202 - t17) * t14 - (-t147 * t199 - t16) * t247 + t213 * t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, t361, t362, t289, t363, 0, t75 * t196 - t346 + t49, t196 * t74 + t338, 0, 0, t311, t357, t355, -t311, t337, 0, -t69 * t265 + t30 - t96 * t325 - t347 + t39 * t262 + (-qJD(5) * t64 - t262 * t313 - t31) * t200, t40 * t262 + (-t239 * t336 - t262 * t265) * pkin(4) + t356, -t39 * t336 + t40 * t96 + (-t329 * t255 - t200 * t51 + (t200 * t336 - t329 * t96) * qJD(5)) * pkin(4) + t371, t37 * t39 - t38 * t40 + (-t329 * t8 - t111 * t239 - t200 * t214 + (-t200 * t37 + t329 * t38) * qJD(5)) * pkin(4), t369, t380, t368, t305 * t374 - t27, t379, -t348, -t18 * t374 + t192 * t29 + t252 * t81 + (-t191 * t293 - t8) * t202 + t218 * t199 + t342, -t192 * t28 + (t191 * t280 + t19) * t374 + t252 * t83 + t218 * t202 + t340, t18 * t83 + t19 * t81 + t1 + (-t81 * t254 + t376 - t191 * t29 + (t191 * t83 + t247) * qJD(6)) * t202 + (t83 * t254 - t191 * t28 + (t191 * t81 - t14) * qJD(6) + t372) * t199, t247 * t18 - t14 * t19 + t8 * t192 - t35 * t39 + (t200 * t35 + t329 * t344) * t313 + t213 * t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t357, t355, -t311, t337, 0, t196 * t38 + t373, t262 * t37 + t356, 0, 0, t369, t380, t368, t383, t379, -t348, -pkin(5) * t29 - pkin(10) * t315 - t20 * t374 + t307 * t96 - t38 * t81 - t322 + t342, pkin(5) * t28 + pkin(10) * t242 + t21 * t374 + t35 * t377 - t38 * t83 + t340, t20 * t83 + t21 * t81 + t1 + (t324 + (-t29 + t294) * pkin(10)) * t202 + ((qJD(6) * t81 - t28) * pkin(10) - t381) * t199, -pkin(5) * t8 + pkin(10) * t213 - t14 * t21 + t20 * t247 - t35 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, -t81 ^ 2 + t83 ^ 2, t374 * t81 - t28, -t320, t374 * t83 - t29, t51, -t35 * t83 + t381, t35 * t81 - t385, 0, 0;];
tauc_reg  = t6;
