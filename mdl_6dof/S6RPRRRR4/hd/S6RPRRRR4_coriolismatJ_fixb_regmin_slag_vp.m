% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:05:58
% EndTime: 2019-03-09 07:06:34
% DurationCPUTime: 23.24s
% Computational Cost: add. (22657->606), mult. (44461->764), div. (0->0), fcn. (55967->10), ass. (0->460)
t769 = qJD(4) + qJD(5);
t505 = qJD(3) + t769;
t907 = qJD(3) + qJD(5);
t414 = sin(qJ(6));
t415 = sin(qJ(5));
t412 = sin(pkin(11));
t413 = cos(pkin(11));
t417 = sin(qJ(3));
t713 = cos(qJ(3));
t377 = t412 * t417 - t413 * t713;
t379 = t412 * t713 + t417 * t413;
t416 = sin(qJ(4));
t419 = cos(qJ(4));
t473 = -t377 * t419 - t416 * t379;
t712 = cos(qJ(5));
t647 = t419 * t379;
t653 = t416 * t377;
t752 = t647 - t653;
t866 = -t415 * t752 + t712 * t473;
t127 = t414 * t866;
t717 = -t414 / 0.2e1;
t849 = t866 * t717;
t868 = t127 / 0.2e1 + t849;
t113 = t868 * qJD(6);
t670 = t866 ^ 2;
t763 = t415 * t473;
t784 = t712 * t752;
t805 = t784 + t763;
t835 = t805 ^ 2;
t867 = -t670 + t835;
t900 = t867 * t414;
t909 = qJD(1) * t900;
t920 = t113 - t909;
t418 = cos(qJ(6));
t707 = pkin(7) + qJ(2);
t385 = t707 * t412;
t386 = t707 * t413;
t454 = t417 * t385 - t386 * t713;
t315 = -t377 * pkin(8) - t454;
t654 = t416 * t315;
t501 = t713 * t385 + t386 * t417;
t460 = -pkin(8) * t379 - t501;
t761 = t419 * t460;
t775 = -t761 + t654;
t807 = -pkin(9) * t752 - t775;
t827 = t415 * t807;
t780 = -t419 * t315 - t416 * t460;
t180 = -pkin(9) * t473 + t780;
t844 = t712 * t180;
t862 = -t844 + t827;
t902 = t862 * t418;
t813 = -t902 / 0.2e1;
t829 = 0.2e1 * t813;
t824 = t805 * t414;
t854 = -t824 / 0.2e1;
t919 = pkin(5) * t849 + pkin(10) * t854 + t829;
t903 = t862 * t414;
t812 = t903 / 0.2e1;
t830 = 0.2e1 * t812;
t826 = t418 * t805;
t852 = -t826 / 0.2e1;
t918 = pkin(10) * t852 + t830;
t791 = t805 / 0.2e1;
t834 = -t805 / 0.2e1;
t511 = t791 + t834;
t845 = t511 * t414;
t899 = t867 * t418;
t910 = qJD(1) * t899;
t917 = qJD(4) * t845 - t910;
t410 = t414 ^ 2;
t411 = t418 ^ 2;
t778 = t411 / 0.2e1 - t410 / 0.2e1;
t119 = t778 * t805;
t111 = t119 * qJD(6);
t714 = t418 / 0.2e1;
t513 = t866 * t714;
t230 = t414 * t513;
t846 = t418 * t866;
t871 = t846 / 0.2e1;
t904 = t414 * t871;
t914 = t230 + t904;
t916 = t914 * qJD(4) + t111;
t175 = t844 / 0.2e1;
t517 = -t827 / 0.2e1;
t898 = t517 + t175;
t915 = 0.2e1 * t898;
t407 = qJD(6) * t418;
t398 = t414 * t407;
t666 = t414 * t418;
t792 = -t866 / 0.2e1;
t855 = t866 / 0.2e1;
t857 = (t855 + t792) * t666;
t895 = qJD(1) * t857;
t913 = t398 - t895;
t912 = t398 + t895;
t911 = t505 * t866;
t872 = -t846 / 0.2e1;
t896 = t871 + t872;
t908 = qJD(6) * t896;
t800 = qJD(3) + qJD(4);
t400 = -pkin(2) * t413 - pkin(1);
t354 = pkin(3) * t377 + t400;
t285 = -pkin(4) * t473 + t354;
t833 = pkin(10) * t805;
t488 = -pkin(5) * t866 - t833;
t425 = t285 + t488;
t45 = -t418 * t425 + t903;
t901 = t862 * t805;
t906 = t414 * t901 - t45 * t805;
t46 = t414 * t425 + t902;
t905 = t418 * t901 - t46 * t805;
t750 = qJD(2) * t866;
t853 = t824 / 0.2e1;
t860 = t854 + t853;
t894 = qJD(3) * t860;
t851 = t826 / 0.2e1;
t861 = t851 + t852;
t893 = qJD(3) * t861;
t875 = 0.2e1 * t851;
t892 = qJD(4) * t875;
t891 = qJD(5) * t857;
t837 = t860 * qJD(2);
t890 = t861 * qJD(1);
t889 = t861 * qJD(2);
t888 = t866 * qJD(1);
t887 = t867 * qJD(1);
t876 = 0.2e1 * t778 * t866;
t886 = t876 * qJD(3);
t885 = t876 * qJD(4);
t825 = t712 * t807;
t847 = t415 * t180;
t864 = t825 + t847;
t690 = t418 * t864;
t715 = -t418 / 0.2e1;
t881 = t715 * t864 - t690 / 0.2e1;
t691 = t414 * t864;
t880 = t717 * t864 - t691 / 0.2e1;
t766 = -0.2e1 * t805;
t228 = t398 * t766;
t879 = t876 * qJD(5) + t228;
t878 = 0.2e1 * t414;
t173 = -t825 / 0.2e1;
t758 = -t847 / 0.2e1 + t173;
t877 = 0.2e1 * t758;
t874 = 0.2e1 * t853;
t873 = -t844 / 0.2e1;
t870 = pkin(5) * t855;
t530 = t805 * t888;
t708 = t805 * pkin(5);
t709 = pkin(10) * t866;
t155 = t708 - t709;
t811 = t784 / 0.2e1;
t819 = t811 + t763 / 0.2e1;
t772 = qJD(6) * t819;
t816 = t805 * qJD(1);
t788 = t866 * t816;
t865 = -t788 + t772;
t863 = qJD(3) * t874 + t910;
t858 = t845 * qJD(1);
t850 = t866 * t285;
t556 = t712 * pkin(4);
t402 = -t556 - pkin(5);
t720 = -t402 / 0.2e1;
t848 = t866 * t720;
t838 = t819 * qJD(1);
t534 = qJD(1) * t666;
t497 = t805 * t534;
t484 = 0.2e1 * t497;
t836 = t484 * t866 + t228;
t828 = t285 * t805;
t798 = t834 * t878;
t818 = qJD(2) * t798;
t817 = t798 * qJD(1);
t327 = -t784 / 0.2e1;
t777 = t819 - t763 / 0.2e1 + t327;
t814 = qJD(2) * t777 + qJD(3) * t915;
t803 = qJD(3) * t777;
t768 = t473 ^ 2 - t752 ^ 2;
t802 = t768 * qJD(1);
t801 = t777 * qJD(1);
t797 = -t411 * t788 + t111;
t796 = qJD(3) * t877;
t795 = t800 * t780;
t728 = -t761 / 0.2e1;
t710 = pkin(4) * t752;
t744 = t473 * qJD(1);
t783 = t752 * t744;
t760 = t505 * t666;
t103 = t119 * qJD(1) + t760;
t755 = 0.2e1 * t811 + t763;
t774 = qJD(2) * t755;
t773 = qJD(3) * t755;
t770 = t755 * qJD(1);
t723 = t647 / 0.2e1;
t397 = t411 - t410;
t764 = t397 * t505;
t211 = t800 * t473;
t749 = qJD(2) * t473;
t342 = t415 * pkin(4);
t555 = qJD(4) * t342;
t554 = qJD(5) * t342;
t742 = -t119 * t505 + t534 * t835;
t740 = pkin(5) / 0.2e1;
t544 = pkin(3) * t419 + pkin(4);
t388 = t712 * t544;
t658 = t415 * t416;
t367 = pkin(3) * t658 - t388;
t365 = -pkin(5) + t367;
t726 = -t365 / 0.2e1;
t490 = t415 * t544;
t539 = t712 * t416;
t368 = pkin(3) * t539 + t490;
t366 = pkin(10) + t368;
t725 = -t366 / 0.2e1;
t724 = t368 / 0.2e1;
t538 = t712 * t419;
t375 = (t538 - t658) * pkin(3);
t722 = -t375 / 0.2e1;
t401 = pkin(10) + t342;
t721 = t401 / 0.2e1;
t716 = t414 / 0.2e1;
t711 = pkin(3) * t379;
t706 = pkin(3) * qJD(4);
t705 = qJD(3) * pkin(3);
t290 = t711 + t710;
t94 = t290 + t155;
t1 = -t846 * t94 + t906;
t704 = t1 * qJD(1);
t2 = t127 * t94 + t905;
t703 = t2 * qJD(1);
t97 = t710 + t155;
t3 = -t846 * t97 + t906;
t702 = t3 * qJD(1);
t4 = t127 * t97 + t905;
t701 = t4 * qJD(1);
t5 = (-t45 + t903) * t805 - t155 * t846;
t698 = t5 * qJD(1);
t6 = (-t46 + t902) * t805 + t155 * t127;
t697 = t6 * qJD(1);
t657 = t415 * t419;
t374 = (t539 + t657) * pkin(3);
t424 = t365 * t855 + t374 * t791 - t722 * t866 + t725 * t805;
t421 = t721 * t805 + t424 + t848;
t7 = t813 + t902 / 0.2e1 + t421 * t414;
t696 = t7 * qJD(1);
t27 = -t45 * t866 + t824 * t864;
t689 = qJD(1) * t27;
t28 = t46 * t866 - t826 * t864;
t688 = qJD(1) * t28;
t478 = t670 + t835;
t57 = t478 * t414;
t682 = qJD(1) * t57;
t60 = t478 * t418;
t679 = qJD(1) * t60;
t83 = -t290 * t866 + t828;
t678 = qJD(1) * t83;
t84 = t290 * t805 + t850;
t677 = qJD(1) * t84;
t85 = t710 * t866 - t828;
t676 = qJD(1) * t85;
t86 = -t710 * t805 - t850;
t675 = qJD(1) * t86;
t509 = t367 / 0.2e1 + t726;
t428 = (t725 + t724) * t805 - t509 * t866;
t422 = t833 / 0.2e1 + t870 + t428;
t11 = t414 * t422;
t672 = t11 * qJD(1);
t669 = t374 * t418;
t99 = t728 + t761 / 0.2e1;
t642 = t99 * qJD(1);
t641 = (qJD(4) - qJD(5)) * t861;
t361 = t368 * qJD(5);
t371 = t374 * qJD(4);
t634 = -t371 - t361;
t396 = t412 ^ 2 + t413 ^ 2;
t110 = t414 * t872 + t230;
t631 = qJD(1) * t110;
t628 = qJD(1) * t285;
t627 = qJD(1) * t354;
t626 = qJD(2) * t805;
t625 = qJD(3) * t805;
t622 = qJD(3) * t414;
t621 = qJD(3) * t418;
t620 = qJD(4) * t805;
t617 = qJD(4) * t354;
t616 = qJD(4) * t414;
t615 = qJD(4) * t418;
t613 = qJD(5) * t805;
t612 = qJD(5) * t285;
t611 = qJD(5) * t414;
t610 = qJD(5) * t418;
t609 = qJD(6) * t414;
t604 = t824 * qJD(1);
t603 = t127 * qJD(1);
t510 = 0.2e1 * t792;
t129 = t510 * t414;
t602 = t129 * qJD(1);
t131 = t855 * t878;
t114 = t131 * qJD(1);
t601 = t860 * qJD(1);
t599 = t875 * qJD(1);
t140 = t511 * t418;
t597 = t140 * qJD(1);
t142 = 0.2e1 * t852;
t595 = t142 * qJD(1);
t594 = t846 * qJD(1);
t146 = t510 * t418;
t593 = t146 * qJD(1);
t148 = 0.2e1 * t872;
t592 = t148 * qJD(1);
t149 = 0.2e1 * t871;
t591 = t149 * qJD(1);
t154 = t397 * t835;
t590 = t154 * qJD(1);
t188 = -t354 * t752 + t473 * t711;
t580 = t188 * qJD(1);
t189 = -t354 * t473 - t711 * t752;
t579 = t189 * qJD(1);
t276 = t327 + t811;
t574 = t276 * qJD(1);
t289 = 0.2e1 * t723 - t653;
t570 = t289 * qJD(1);
t316 = t377 ^ 2 - t379 ^ 2;
t569 = t316 * qJD(1);
t334 = t723 - t647 / 0.2e1;
t568 = t334 * qJD(1);
t567 = t334 * qJD(4);
t566 = t752 * qJD(1);
t564 = t377 * qJD(1);
t373 = t377 * qJD(3);
t563 = t379 * qJD(1);
t562 = t379 * qJD(3);
t380 = t396 * qJ(2);
t561 = t380 * qJD(1);
t560 = t396 * qJD(1);
t406 = pkin(5) * t715;
t545 = -t142 * qJD(5) + t621 * t805 + t892;
t537 = t866 * t628;
t536 = t805 * t628;
t535 = t411 * t816;
t533 = qJD(6) * t866 * t805;
t527 = t473 * t627;
t526 = t752 * t627;
t525 = t377 * t563;
t524 = t418 * t816;
t383 = t402 * t716;
t507 = t712 * qJD(4);
t506 = t712 * qJD(5);
t504 = pkin(3) * t800;
t500 = qJD(1) * t400 + qJD(2);
t499 = -t556 / 0.2e1;
t495 = t825 / 0.2e1;
t493 = -t538 / 0.2e1;
t492 = t342 / 0.2e1 + t724;
t491 = t740 + t509;
t489 = t769 * t342;
t485 = -0.2e1 * t497;
t481 = t722 + t720 + t726;
t479 = -t401 * t805 + t402 * t866;
t476 = t365 * t866 - t366 * t805;
t423 = t401 * t834 - t848 + (t415 * t791 + t712 * t855) * pkin(4);
t420 = pkin(10) * t791 + t423 + t870;
t15 = t414 * t420;
t457 = -t374 / 0.2e1 + t492;
t301 = t457 * t418;
t472 = t15 * qJD(1) - t301 * qJD(3);
t33 = t175 + t873;
t471 = -qJD(1) * t33 + qJD(3) * t374;
t433 = t827 / 0.2e1;
t35 = t517 + t433;
t470 = -t35 * qJD(1) - t342 * qJD(3);
t462 = -t388 / 0.2e1 + t499;
t344 = pkin(3) * t493 - t462;
t469 = t344 * qJD(3);
t36 = t873 + t433 + t898;
t468 = qJD(1) * t36 + qJD(3) * t368;
t39 = t173 + t495;
t467 = -qJD(1) * t39 - qJD(3) * t367;
t41 = t495 + t847 / 0.2e1 + t758;
t466 = -qJD(1) * t41 + qJD(3) * t375;
t465 = t805 * (-qJD(6) + t888);
t464 = qJD(3) * t752 + qJD(4) * t289;
t463 = t769 * t777;
t461 = -t709 / 0.2e1 + t708 / 0.2e1;
t456 = t366 * t792 + t726 * t805;
t455 = t720 * t805 - t721 * t866;
t10 = t812 - t903 / 0.2e1 + t421 * t418;
t453 = -qJD(1) * t10 - t374 * t622;
t14 = t418 * t422;
t452 = -qJD(1) * t14 - t368 * t622;
t437 = t94 / 0.2e1 + t456;
t19 = t414 * t437;
t451 = -qJD(1) * t19 - t365 * t621;
t21 = t418 * t437;
t450 = qJD(1) * t21 - t365 * t622;
t449 = t772 - t530;
t443 = t499 + t740 + t720;
t442 = t155 / 0.2e1 + t461;
t436 = t97 / 0.2e1 + t455;
t435 = t755 * t769 + t625;
t23 = t414 * t436;
t292 = t481 * t418;
t432 = -qJD(1) * t23 + qJD(3) * t292 - t402 * t615;
t25 = t418 * t436;
t291 = t481 * t414;
t431 = qJD(1) * t25 + qJD(3) * t291 - t402 * t616;
t430 = t911 * t805;
t18 = t418 * t420;
t300 = t457 * t414;
t429 = -qJD(1) * t18 - qJD(3) * t300 - t414 * t555;
t29 = t442 * t414;
t296 = t491 * t418;
t343 = t443 * t418;
t427 = pkin(5) * t610 - qJD(1) * t29 + qJD(3) * t296 + qJD(4) * t343;
t295 = t491 * t414;
t31 = t442 * t418;
t341 = t443 * t414;
t426 = pkin(5) * t611 + qJD(1) * t31 + qJD(3) * t295 + qJD(4) * t341;
t405 = pkin(5) * t717;
t395 = t414 * t554;
t387 = t397 * qJD(6);
t384 = t402 * t714;
t372 = t375 * qJD(4);
t360 = t367 * qJD(5);
t359 = t414 * t371;
t353 = t414 * t361;
t348 = t365 * t714;
t347 = t365 * t716;
t346 = t418 * t499 + t384 + t406;
t345 = t414 * t499 + t383 + t405;
t340 = (t493 + t658) * pkin(3) + t462;
t339 = -t342 / 0.2e1 - t490 / 0.2e1 + (-t539 - t657 / 0.2e1) * pkin(3);
t302 = -t669 / 0.2e1 - t492 * t418;
t299 = t374 * t716 + t414 * t492;
t298 = t367 * t714 + t348 + t406;
t297 = t367 * t716 + t347 + t405;
t294 = t375 * t715 + t348 + t384;
t293 = t375 * t717 + t347 + t383;
t187 = t485 + t764;
t186 = t484 - t764;
t185 = -t763 + 0.2e1 * t327;
t145 = t872 + t513;
t112 = t131 * qJD(6);
t107 = 0.2e1 * t904;
t104 = t114 - t609;
t100 = t654 + 0.2e1 * t728;
t87 = t505 * t819;
t32 = t155 * t714 - t418 * t461 - t691;
t30 = t155 * t717 + t414 * t461 - t690;
t26 = -t418 * t455 + t714 * t97 + t880;
t24 = t414 * t455 + t717 * t97 + t881;
t22 = -t418 * t456 + t714 * t94 + t880;
t20 = t414 * t456 + t717 * t94 + t881;
t17 = t406 * t866 + t423 * t418 + t918;
t16 = t414 * t423 + t919;
t13 = pkin(5) * t872 + t418 * t428 + t918;
t12 = t414 * t428 + t919;
t9 = t401 * t852 + t402 * t871 + t418 * t424 + t830;
t8 = t383 * t866 + t401 * t854 + t414 * t424 + t829;
t34 = [0, 0, 0, 0, 0, t396 * qJD(2), t380 * qJD(2), -t377 * t562, t316 * qJD(3), 0, 0, 0, t400 * t562, -t400 * t373, t211 * t752, t800 * t768, 0, 0, 0, -qJD(3) * t188 + t617 * t752, -qJD(3) * t189 + t473 * t617, t430, -t505 * t867, 0, 0, 0, qJD(3) * t83 - qJD(4) * t85 + t612 * t805, qJD(3) * t84 - qJD(4) * t86 + t612 * t866, -t398 * t835 + t411 * t430, -0.2e1 * t414 * t826 * t911 - t154 * qJD(6), t414 * t533 + t505 * t899, t418 * t533 - t505 * t900 -(t613 + t620 + t625) * t866, qJD(2) * t57 + qJD(3) * t1 + qJD(4) * t3 + qJD(5) * t5 + qJD(6) * t28, qJD(2) * t60 + qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t6 + qJD(6) * t27; 0, 0, 0, 0, 0, t560, t561, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t567, 0, 0, 0, 0, 0, 0, t463, 0, 0, 0, 0, 0, 0, t113 + t641 + t682, t769 * t860 + t679 + t894 + t908; 0, 0, 0, 0, 0, 0, 0, -t525, t569, -t373, -t562, 0, qJD(3) * t454 + t400 * t563, qJD(3) * t501 - t400 * t564, t783, t802, t211, -t464, 0, -t580 + t795, qJD(3) * t775 + t100 * qJD(4) - t579, t530, -t887, t911, -t435, 0, -qJD(3) * t862 + t769 * t915 + t678, -qJD(3) * t864 + t769 * t877 + t677, t107 * qJD(5) + (t414 * t621 + t535) * t866 + t916, t885 + (qJD(3) * t397 + t485) * t866 + t879, t622 * t805 + t769 * t874 + t908 + t910, t545 + t920, t865, t704 + (t414 * t476 - t902) * qJD(3) + t8 * qJD(4) + t12 * qJD(5) + t22 * qJD(6), t703 + t837 + (t418 * t476 + t903) * qJD(3) + t9 * qJD(4) + t13 * qJD(5) + t20 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t783, t802, t211, -qJD(3) * t289 - qJD(4) * t752, 0, t334 * qJD(2) + t526 + t795, t100 * qJD(3) + qJD(4) * t775 + t527, t788, -t887, t911, qJD(5) * t185 - t620 - t773, 0, -qJD(4) * t862 + qJD(5) * t915 - t676 + t814, -qJD(4) * t864 + qJD(5) * t877 - t675 + t796, t111 + (t414 * t615 + t535) * t866 + t907 * t914, t886 + (qJD(4) * t397 + t485) * t866 + t879, qJD(5) * t874 + qJD(6) * t145 + t616 * t805 + t863, t615 * t805 + t875 * t907 + t920, t449, t702 + t889 + t8 * qJD(3) + (t414 * t479 - t902) * qJD(4) + t16 * qJD(5) + t26 * qJD(6), t701 + t837 + t9 * qJD(3) + (t418 * t479 + t903) * qJD(4) + t17 * qJD(5) + t24 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t788, -t887, t911, qJD(4) * t185 - t613 - t773, 0, qJD(4) * t915 - qJD(5) * t862 + t536 + t814, qJD(4) * t877 - qJD(5) * t864 + t537 + t796, t107 * qJD(3) - (-t414 * t610 - t535) * t866 + t916, t886 + t885 + t228 - (-qJD(5) * t397 + t484) * t866, qJD(4) * t874 + t611 * t805 + t863 + t908, -qJD(3) * t142 + t610 * t805 + t892 - t909, t865, t698 - t889 + t12 * qJD(3) + t16 * qJD(4) + (t414 * t488 - t902) * qJD(5) + t32 * qJD(6), t697 + t837 + t13 * qJD(3) + t17 * qJD(4) + (t418 * t488 + t903) * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t742, t760 * t766 - t590, t145 * qJD(4) + t414 * t465 + t896 * t907, t418 * t465 + t800 * t868, t87, qJD(2) * t868 + qJD(3) * t22 + qJD(4) * t26 + qJD(5) * t32 - qJD(6) * t46 + t688, qJD(2) * t896 + qJD(3) * t20 + qJD(4) * t24 + qJD(5) * t30 + qJD(6) * t45 + t689; 0, 0, 0, 0, 0, -t560, -t561, 0, 0, 0, 0, 0, t562, -t373, 0, 0, 0, 0, 0, t464, t211, 0, 0, 0, 0, 0, t435, t911, 0, 0, 0, 0, 0, t112 + t545 - t682, -qJD(3) * t824 + qJD(6) * t149 + t769 * t798 - t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t563, -t564, 0, 0, 0, 0, 0, t566, t744, 0, 0, 0, 0, 0, t816, t888, 0, 0, 0, 0, 0, t524, -t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t744, 0, 0, 0, 0, 0, t770, t888, 0, 0, 0, 0, 0, t599, t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t770, t888, 0, 0, 0, 0, 0, -t595, t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t407 + t591; 0, 0, 0, 0, 0, 0, 0, t525, -t569, 0, 0, 0, -t500 * t379, t500 * t377, -t783, -t802, 0, -t567, 0, -qJD(2) * t752 + t580, qJD(4) * t99 + t579 - t749, -t530, t887, 0, -t463, 0, qJD(4) * t33 - qJD(5) * t36 - t626 - t678, qJD(4) * t41 + qJD(5) * t39 - t677 - t750, qJD(4) * t110 - t411 * t530 + t111 + t891, t836, qJD(5) * t860 + qJD(6) * t148 + t917, t112 + t641 + t909, -t865, qJD(4) * t7 + qJD(5) * t11 - qJD(6) * t21 - t418 * t626 - t704, qJD(2) * t824 + qJD(4) * t10 + qJD(5) * t14 + qJD(6) * t19 - t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563, t564, 0, 0, 0, 0, 0, -t566, -t744, 0, 0, 0, 0, 0, -t816, -t888, 0, 0, 0, 0, 0, -t524, t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416 * t706, -t419 * t706, 0, 0, 0, 0, 0, t634, -t372 + t360, t398, t387, 0, 0, 0, t365 * t609 + t418 * t634, t365 * t407 + t353 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t568, 0, -t416 * t504, -t419 * t504 + t642, 0, 0, 0, -t801, 0, qJD(5) * t339 - t371 - t471, qJD(5) * t340 - t372 - t466, t398 + t631, t387, t858, t890, 0, t302 * qJD(5) + t293 * qJD(6) - t669 * t800 + t696, qJD(5) * t299 + qJD(6) * t294 + t359 - t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t801, 0, qJD(4) * t339 - t361 - t468, qJD(4) * t340 + t360 - t467, t912, t387, t601, -t890, 0, -t368 * t418 * t907 + t302 * qJD(4) + t297 * qJD(6) + t672, qJD(4) * t299 + qJD(6) * t298 + t353 - t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t187, t407 + t592, t104, -t838, qJD(4) * t293 + qJD(5) * t297 - t366 * t407 - t450, qJD(4) * t294 + qJD(5) * t298 + t366 * t609 - t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t783, -t802, 0, t334 * qJD(3), 0, -qJD(2) * t289 - t526, -qJD(3) * t99 - t527 - t749, -t788, t887, 0, qJD(5) * t276 + t803, 0, -qJD(3) * t33 - qJD(5) * t35 + t676 - t774, -qJD(3) * t41 + t675 - t750, -qJD(3) * t110 + t797 + t891, t836, qJD(6) * t146 - t845 * t907 - t910, -qJD(5) * t140 - qJD(6) * t129 - t893 + t909, -t449, -qJD(2) * t875 - qJD(3) * t7 + qJD(5) * t15 - qJD(6) * t25 - t702, -qJD(3) * t10 + qJD(5) * t18 + qJD(6) * t23 - t701 - t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570, -t744, 0, 0, 0, 0, 0, -t770, -t888, 0, 0, 0, 0, 0, -t599, -t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t568, 0, t416 * t705, t419 * t705 - t642, 0, 0, 0, t801, 0, t471 - t554, -qJD(5) * t344 + t466, t398 - t631, t387, -t858, -t890, 0, -qJD(5) * t301 - qJD(6) * t291 + t374 * t621 - t696, qJD(5) * t300 - qJD(6) * t292 + t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t554, -pkin(4) * t506, t398, t387, 0, 0, 0, t402 * t609 - t418 * t554, t402 * t407 + t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t574, 0, -t489 + t470 (-t507 - t506) * pkin(4) - t469, t912, t387, -t858, -t597, 0, t345 * qJD(6) - t418 * t489 + t472, qJD(6) * t346 + t395 - t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t187, t407 + t593, -t602 - t609, -t838, qJD(5) * t345 - t401 * t407 - t431, qJD(5) * t346 + t401 * t609 - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t788, t887, 0, -qJD(4) * t276 + t803, 0, qJD(3) * t36 + qJD(4) * t35 - t536 - t774, -qJD(3) * t39 - t537 - t750, -t800 * t857 + t797, -t485 * t866 + t228, -qJD(6) * t846 - t894 + t917, qJD(4) * t140 + qJD(6) * t127 + t893 + t909, -t865, qJD(2) * t142 - qJD(3) * t11 - qJD(4) * t15 - qJD(6) * t31 - t698, -qJD(3) * t14 - qJD(4) * t18 + qJD(6) * t29 - t697 - t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t770, -t888, 0, 0, 0, 0, 0, t595, -t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t801, 0, t468 + t555, qJD(4) * t344 + t467, t913, t387, -t601, t890, 0, qJD(4) * t301 - qJD(6) * t295 + t368 * t621 - t672, -qJD(4) * t300 - qJD(6) * t296 + t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t574, 0, -t470 + t555, pkin(4) * t507 + t469, t913, t387, t858, t597, 0, -qJD(6) * t341 + t418 * t555 - t472, -qJD(6) * t343 + t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, t387, 0, 0, 0, -pkin(5) * t609, -pkin(5) * t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t187, t407 - t594, t603 - t609, -t838, -pkin(10) * t407 - t426, pkin(10) * t609 - t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t742, 0.2e1 * t760 * t805 + t590, -qJD(3) * t148 - qJD(4) * t146 + qJD(5) * t846 - t414 * t788, -qJD(3) * t131 + qJD(4) * t129 - qJD(5) * t127 - t418 * t788, t87, -qJD(2) * t131 + qJD(3) * t21 + qJD(4) * t25 + qJD(5) * t31 - t688, -qJD(2) * t149 - qJD(3) * t19 - qJD(4) * t23 - qJD(5) * t29 - t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, -t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t186, -t592, -t114, t838, qJD(4) * t291 + qJD(5) * t295 + t450, qJD(4) * t292 + qJD(5) * t296 + t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t186, -t593, t602, t838, qJD(5) * t341 + t431, qJD(5) * t343 + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t186, t594, -t603, t838, t426, t427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t34;
