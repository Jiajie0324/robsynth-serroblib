% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:07
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:06:01
% EndTime: 2019-03-09 07:07:09
% DurationCPUTime: 59.41s
% Computational Cost: add. (57453->886), mult. (109941->1101), div. (0->0), fcn. (136494->10), ass. (0->665)
t1175 = qJD(4) + qJD(5);
t795 = qJD(3) + t1175;
t1085 = cos(qJ(5));
t1086 = cos(qJ(4));
t1087 = cos(qJ(3));
t654 = sin(qJ(3));
t1074 = pkin(7) + qJ(2);
t650 = cos(pkin(11));
t800 = t1074 * t650;
t649 = sin(pkin(11));
t801 = t1074 * t649;
t557 = t1087 * t801 + t654 * t800;
t615 = t1087 * t649 + t654 * t650;
t520 = -t615 * pkin(8) - t557;
t653 = sin(qJ(4));
t558 = t1087 * t800 - t654 * t801;
t613 = -t1087 * t650 + t649 * t654;
t675 = t613 * pkin(8) - t558;
t391 = t1086 * t520 + t653 * t675;
t718 = t1086 * t615 - t653 * t613;
t1246 = -pkin(9) * t718 + t391;
t652 = sin(qJ(5));
t1159 = -t1086 * t613 - t653 * t615;
t1275 = t1086 * t675 - t653 * t520;
t665 = -pkin(9) * t1159 + t1275;
t1368 = -t1085 * t1246 - t652 * t665;
t1375 = t795 * t1368;
t1236 = qJD(3) + qJD(4);
t1276 = t652 * t1246;
t1308 = t1085 * t665;
t1341 = -t1308 / 0.2e1;
t332 = t1308 / 0.2e1;
t1351 = t332 - t1276 / 0.2e1;
t1362 = t1276 / 0.2e1 + t1341 + t1351;
t1374 = qJD(1) * t1362;
t1373 = qJD(5) * t1362;
t1324 = -t1308 + t1276;
t655 = cos(qJ(6));
t1355 = t1324 * t655;
t1232 = -t1355 / 0.2e1;
t1249 = 0.2e1 * t1232;
t651 = sin(qJ(6));
t1092 = -t651 / 0.2e1;
t1302 = t1085 * t1159 - t652 * t718;
t1278 = t1302 * t1092;
t1137 = t1085 * t718;
t1191 = t652 * t1159;
t1212 = t1137 + t1191;
t1255 = t1212 * t651;
t1289 = -t1255 / 0.2e1;
t1372 = pkin(5) * t1278 + pkin(10) * t1289 + t1249;
t1356 = t1324 * t651;
t1231 = t1356 / 0.2e1;
t1250 = 0.2e1 * t1231;
t1252 = t655 * t1212;
t1291 = -t1252 / 0.2e1;
t1282 = t655 * t1302;
t1316 = -t1282 / 0.2e1;
t1371 = pkin(5) * t1316 + pkin(10) * t1291 + t1250;
t637 = -pkin(2) * t650 - pkin(1);
t582 = pkin(3) * t613 + t637;
t491 = -pkin(4) * t1159 + t582;
t1263 = pkin(10) * t1212;
t779 = -pkin(5) * t1302 - t1263;
t679 = t491 + t779;
t126 = t651 * t679 + t1355;
t1360 = t1324 * t1212 + t1302 * t1368;
t1370 = -t1212 * t126 + t1360 * t655;
t125 = -t655 * t679 + t1356;
t1369 = -t1212 * t125 + t1360 * t651;
t1365 = 0.2e1 * t1351;
t1357 = t1324 * pkin(5);
t1364 = -t1357 / 0.2e1;
t1019 = t1302 ^ 2;
t1265 = t1212 ^ 2;
t1303 = -t1019 + t1265;
t1340 = t1303 * t651;
t1349 = qJD(1) * t1340;
t1197 = t651 * t1302;
t1307 = t1197 / 0.2e1 + t1278;
t267 = t1307 * qJD(6);
t1363 = t267 - t1349;
t648 = t655 ^ 2;
t1283 = t648 * t1302;
t1314 = -t1283 / 0.2e1;
t647 = t651 ^ 2;
t1284 = t647 * t1302;
t444 = t1284 / 0.2e1;
t1336 = t1314 + t444;
t1313 = t1283 / 0.2e1;
t1094 = t647 / 0.2e1;
t824 = t1302 * t1094;
t1337 = t1313 - t824;
t1344 = t1337 + t1336;
t1361 = qJD(5) * t1344;
t1315 = t1282 / 0.2e1;
t1323 = t1316 + t1315;
t1348 = qJD(6) * t1323;
t1339 = t1303 * t655;
t1350 = qJD(1) * t1339;
t1359 = t1348 + t1350;
t1248 = t1232 + t1355 / 0.2e1;
t1312 = -t1284 / 0.2e1;
t979 = t1312 + t1313;
t1352 = t1337 + t979;
t1171 = -0.2e1 * t1212;
t644 = qJD(6) * t655;
t635 = t651 * t644;
t415 = t635 * t1171;
t1358 = t1352 * qJD(5) + t415;
t863 = t1085 * pkin(4);
t639 = -t863 - pkin(5);
t1040 = t1324 * t639;
t1354 = t651 * t1368;
t1353 = t655 * t1368;
t1090 = t652 / 0.2e1;
t1347 = t1090 * t1368;
t1346 = t1324 * t1368;
t1345 = qJD(3) + qJD(5);
t789 = t651 * t1315;
t1338 = t1313 + t444;
t1335 = t795 * t1302;
t1334 = qJD(2) * t1302;
t1290 = t1252 / 0.2e1;
t1296 = t1290 + t1291;
t1333 = qJD(3) * t1296;
t1288 = t1255 / 0.2e1;
t1297 = t1289 + t1288;
t1332 = qJD(3) * t1297;
t1319 = 0.2e1 * t1290;
t1331 = qJD(4) * t1319;
t1330 = t1296 * qJD(1);
t1329 = t1296 * qJD(2);
t1269 = t1297 * qJD(2);
t1328 = t1302 * qJD(1);
t1327 = t1303 * qJD(1);
t788 = t1312 + t1314;
t1321 = 0.2e1 * t651;
t1320 = 0.2e1 * t1288;
t853 = t1085 * t653;
t858 = t1086 * t652;
t608 = (t853 + t858) * pkin(3);
t1318 = -t608 / 0.2e1;
t1292 = t1302 / 0.2e1;
t1311 = pkin(5) * t1292;
t1117 = t1212 / 0.2e1;
t1264 = -t1212 / 0.2e1;
t805 = t1117 + t1264;
t1281 = t805 * t651;
t1306 = qJD(4) * t1281;
t1305 = t1212 * t1328;
t1304 = t1281 * qJD(1);
t1082 = pkin(10) * t1302;
t1261 = t1212 * pkin(5);
t311 = -t1082 + t1261;
t1301 = qJD(6) * t1197 + t1349;
t1300 = -qJD(6) * t1282 - t1350;
t1299 = qJD(3) * t1320 + t1359;
t1202 = t1137 / 0.2e1;
t1211 = t1202 + t1191 / 0.2e1;
t1183 = qJD(6) * t1211;
t1239 = t1212 * qJD(1);
t1277 = t1302 * t1239;
t1298 = -t1277 + t1183;
t1294 = t1236 * t391;
t1293 = t1236 * t1275;
t1286 = t1302 * t491;
t864 = -t1085 / 0.2e1;
t1285 = t1302 * t864;
t1195 = (t125 * t655 - t126 * t651) * t1302;
t1096 = -t639 / 0.2e1;
t1280 = t1096 * t1302;
t1004 = t651 * t655;
t1208 = (t1292 - t1302 / 0.2e1) * t1004;
t1242 = t1208 * qJD(1);
t1274 = t1242 - t635;
t1273 = t1242 + t635;
t784 = t1085 * t1086;
t997 = t652 * t653;
t610 = (t784 - t997) * pkin(3);
t802 = t648 / 0.2e1 + t1094;
t1150 = t802 * t610;
t1268 = pkin(5) * t1318 + t1150 * pkin(10);
t1260 = 0.2e1 * t789;
t274 = (t1094 - t648 / 0.2e1) * t1212;
t918 = t274 * qJD(6);
t1267 = qJD(3) * t1260 - t918;
t1256 = t1212 * t491;
t1215 = t1197 * qJD(1);
t937 = qJD(6) * t651;
t1251 = t1215 - t937;
t1216 = t1282 * qJD(1);
t1245 = t644 - t1216;
t1209 = t1264 * t1321;
t1244 = qJD(2) * t1209;
t1241 = t1209 * qJD(1);
t1240 = t1211 * qJD(1);
t1017 = t1159 ^ 2;
t1018 = t718 ^ 2;
t1214 = t1017 - t1018;
t1238 = t1214 * qJD(1);
t1234 = qJD(3) * t1208 + t918;
t1224 = t1277 * t647;
t1223 = t1277 * t648;
t537 = -t1137 / 0.2e1;
t1174 = t1211 - t1191 / 0.2e1 + t537;
t1220 = qJD(3) * t1174;
t1217 = t1174 * qJD(1);
t1100 = -t610 / 0.2e1;
t785 = pkin(3) * t1086 + pkin(4);
t623 = t1085 * t785;
t600 = pkin(3) * t997 - t623;
t1104 = -t600 / 0.2e1;
t1213 = t1104 + t1100;
t1205 = qJD(2) * t1174 + qJD(3) * t1365;
t1109 = t1159 / 0.2e1;
t1167 = t718 * pkin(4);
t1201 = t1167 / 0.2e1;
t395 = t1236 * t1159;
t1132 = t795 * t1004;
t248 = -t274 * qJD(1) + t1132;
t1152 = 0.2e1 * t1109 * t652 + 0.2e1 * t1202;
t1186 = qJD(2) * t1152;
t1185 = qJD(2) * t1159;
t1184 = qJD(3) * t1152;
t1179 = t1152 * qJD(1);
t1178 = t1159 * qJD(1);
t1133 = t718 * qJD(1);
t1177 = t1159 * t1133;
t597 = -pkin(5) + t600;
t1107 = t597 / 0.2e1;
t1176 = t1324 * t1107;
t242 = t1167 + t311;
t1008 = t651 * t242;
t140 = -t1353 + t1008;
t1051 = t140 * t655;
t993 = t655 * t242;
t139 = t993 + t1354;
t1054 = t139 * t651;
t727 = -t1054 / 0.2e1 + t1051 / 0.2e1;
t1172 = t727 * pkin(10) + t1364;
t1169 = -t718 / 0.2e1;
t634 = t648 - t647;
t1165 = t634 * t795;
t1075 = t615 * pkin(3);
t496 = t1075 + t1167;
t235 = t496 + t311;
t994 = t655 * t235;
t131 = t994 + t1354;
t1058 = t131 * t651;
t1009 = t651 * t235;
t132 = -t1353 + t1009;
t1055 = t132 * t655;
t130 = t1055 / 0.2e1;
t985 = -t1058 / 0.2e1 + t130;
t977 = t647 + t648;
t1158 = -t1175 * t1208 + t918;
t1157 = t1175 * t1260 - t918;
t258 = t1316 * t651 + t789;
t1156 = -qJD(5) * t258 + t1234;
t257 = t655 * t1197;
t1155 = t257 * qJD(5) + t1267;
t1154 = qJD(4) * t258 + t1234;
t1153 = t257 * qJD(4) + t1267;
t1059 = t126 * t655;
t1060 = t125 * t651;
t730 = t1059 / 0.2e1 + t1060 / 0.2e1;
t922 = t258 * qJD(1);
t1145 = t922 - t635;
t1144 = t922 + t635;
t1143 = t1236 * t718;
t1140 = qJD(2) * t718;
t846 = qJD(1) * t1004;
t83 = t1265 * t846 + t274 * t795;
t1127 = t615 ^ 2;
t1126 = pkin(5) / 0.2e1;
t1125 = t131 / 0.2e1;
t1124 = -t132 / 0.2e1;
t992 = t655 * t311;
t149 = t992 + t1354;
t1123 = -t149 / 0.2e1;
t1007 = t651 * t311;
t150 = t1007 - t1353;
t1122 = t150 / 0.2e1;
t1108 = -t597 / 0.2e1;
t735 = t652 * t785;
t601 = pkin(3) * t853 + t735;
t598 = pkin(10) + t601;
t1106 = -t598 / 0.2e1;
t1105 = t598 / 0.2e1;
t1103 = t600 / 0.2e1;
t1102 = -t601 / 0.2e1;
t1101 = t601 / 0.2e1;
t1099 = t610 / 0.2e1;
t566 = t652 * pkin(4);
t638 = pkin(10) + t566;
t1098 = -t638 / 0.2e1;
t1097 = t638 / 0.2e1;
t1095 = t639 / 0.2e1;
t1091 = t651 / 0.2e1;
t1089 = -t655 / 0.2e1;
t1088 = t655 / 0.2e1;
t1084 = pkin(3) * t653;
t1073 = pkin(4) * qJD(4);
t1072 = pkin(4) * qJD(5);
t1071 = qJD(3) * pkin(3);
t7 = -t125 * t131 + t126 * t132 + t1346;
t1070 = t7 * qJD(1);
t8 = -t125 * t139 + t126 * t140 + t1346;
t1069 = t8 * qJD(1);
t9 = -t125 * t149 + t126 * t150 + t1346;
t1068 = t9 * qJD(1);
t1037 = t1368 * t1212;
t28 = t1037 + (t1059 + t1060) * t1302;
t1067 = qJD(1) * t28;
t76 = -t125 * t1302 - t1255 * t1368;
t1066 = qJD(1) * t76;
t77 = t1252 * t1368 + t126 * t1302;
t1065 = qJD(1) * t77;
t82 = t1302 * t1324 + t1037;
t1064 = qJD(1) * t82;
t1056 = t132 * t651;
t1057 = t131 * t655;
t10 = (t1056 + t1057) * t1212 - t1195;
t1063 = t10 * qJD(1);
t1052 = t140 * t651;
t1053 = t139 * t655;
t11 = (t1052 + t1053) * t1212 - t1195;
t1062 = t11 * qJD(1);
t1048 = t150 * t651;
t1049 = t149 * t655;
t12 = (t1048 + t1049) * t1212 - t1195;
t1061 = t12 * qJD(1);
t1050 = t149 * t651;
t1047 = t150 * t655;
t18 = -t1302 * t131 + t1369;
t1046 = t18 * qJD(1);
t19 = t1302 * t132 + t1370;
t1045 = t19 * qJD(1);
t1036 = t1368 * t608;
t22 = -t1302 * t139 + t1369;
t1033 = t22 * qJD(1);
t23 = t1302 * t140 + t1370;
t1032 = t23 * qJD(1);
t24 = (-t125 + t1356) * t1212 - (t149 - t1354) * t1302;
t1031 = t24 * qJD(1);
t25 = (-t126 + t1355) * t1212 - (-t150 - t1353) * t1302;
t1030 = t25 * qJD(1);
t777 = t802 * t1302;
t689 = t1107 * t1212 + t598 * t777;
t729 = t1057 / 0.2e1 + t1056 / 0.2e1;
t32 = t689 - t729;
t1027 = t32 * qJD(1);
t688 = t1095 * t1212 + t638 * t777;
t728 = t1053 / 0.2e1 + t1052 / 0.2e1;
t34 = t688 - t728;
t1026 = t34 * qJD(1);
t36 = t491 * t496;
t1025 = t36 * qJD(1);
t37 = t1167 * t491;
t1024 = t37 * qJD(1);
t692 = pkin(10) * t777 - t1261 / 0.2e1;
t726 = t1049 / 0.2e1 + t1048 / 0.2e1;
t41 = t692 - t726;
t1023 = t41 * qJD(1);
t720 = -t1100 * t1302 + t1117 * t608;
t676 = t1106 * t1212 + t1107 * t1302 + t720;
t668 = t1097 * t1212 + t1280 + t676;
t43 = t651 * t668 + t1248;
t1022 = t43 * qJD(1);
t803 = t1103 + t1108;
t683 = (t1106 + t1101) * t1212 - t803 * t1302;
t669 = t1263 / 0.2e1 + t1311 + t683;
t47 = t651 * t669 + t1248;
t1021 = t47 * qJD(1);
t1016 = t608 * t655;
t677 = t1102 * t1212 + t1103 * t1302 + t720;
t693 = (t1264 * t652 + t1285) * pkin(4);
t87 = t693 - t677;
t986 = t87 * qJD(1);
t984 = (qJD(4) - qJD(5)) * t1296;
t593 = t601 * qJD(5);
t603 = t608 * qJD(4);
t978 = -t603 - t593;
t633 = t649 ^ 2 + t650 ^ 2;
t976 = qJD(1) * t1344;
t772 = t1314 - t824;
t158 = t772 + t1338;
t975 = qJD(1) * t158;
t162 = t979 + t1336;
t974 = qJD(1) * t162;
t174 = t1019 + t1265;
t169 = t174 * t651;
t972 = qJD(1) * t169;
t172 = t174 * t655;
t969 = qJD(1) * t172;
t218 = -t1302 * t496 + t1256;
t968 = qJD(1) * t218;
t219 = t1212 * t496 + t1286;
t967 = qJD(1) * t219;
t220 = -t1159 * t1275 - t391 * t718;
t966 = qJD(1) * t220;
t221 = t1167 * t1302 - t1256;
t965 = qJD(1) * t221;
t222 = -t1167 * t1212 - t1286;
t964 = qJD(1) * t222;
t348 = t1075 * t1159 - t582 * t718;
t962 = qJD(1) * t348;
t349 = -t1075 * t718 - t1159 * t582;
t961 = qJD(1) * t349;
t958 = qJD(1) * t491;
t957 = qJD(1) * t582;
t956 = qJD(2) * t1212;
t955 = qJD(3) * t1212;
t951 = qJD(3) * t651;
t950 = qJD(3) * t655;
t949 = qJD(4) * t1212;
t945 = qJD(4) * t582;
t944 = qJD(4) * t651;
t943 = qJD(4) * t655;
t941 = qJD(5) * t1212;
t940 = qJD(5) * t491;
t939 = qJD(5) * t651;
t938 = qJD(5) * t655;
t151 = t1075 * t582;
t935 = t151 * qJD(1);
t161 = t772 + t788;
t934 = t161 * qJD(1);
t165 = 0.2e1 * t788;
t933 = t165 * qJD(1);
t930 = t174 * qJD(1);
t722 = t1101 * t1302 + t1103 * t1212;
t223 = -t1075 / 0.2e1 - t1167 / 0.2e1 + t722;
t928 = t223 * qJD(1);
t704 = t1090 * t1302 + t1212 * t864;
t237 = (t1169 + t704) * pkin(4);
t925 = t237 * qJD(1);
t914 = t1255 * qJD(1);
t286 = t1292 * t1321;
t268 = t286 * qJD(1);
t911 = t1297 * qJD(1);
t909 = t1319 * qJD(1);
t295 = t805 * t655;
t907 = t295 * qJD(1);
t297 = 0.2e1 * t1291;
t905 = t297 * qJD(1);
t303 = 0.2e1 * t1316;
t902 = t303 * qJD(1);
t304 = 0.2e1 * t1315;
t901 = t304 * qJD(1);
t309 = -t1284 - t1283;
t900 = t309 * qJD(1);
t310 = t634 * t1265;
t899 = t310 * qJD(1);
t320 = t1017 + t1018;
t890 = t320 * qJD(1);
t703 = t1086 * t1169 + t653 * t1109;
t377 = (-t615 / 0.2e1 + t703) * pkin(3);
t887 = t377 * qJD(1);
t410 = t557 * t615 - t558 * t613;
t886 = t410 * qJD(1);
t480 = t537 + t1202;
t882 = t480 * qJD(1);
t611 = t613 ^ 2;
t521 = t611 - t1127;
t877 = t521 * qJD(1);
t556 = t611 + t1127;
t873 = t556 * qJD(1);
t872 = t613 * qJD(1);
t607 = t613 * qJD(3);
t871 = t615 * qJD(1);
t870 = t615 * qJD(3);
t617 = t633 * qJ(2);
t869 = t617 * qJD(1);
t868 = t633 * qJD(1);
t862 = t652 * t1073;
t861 = t652 * t1072;
t860 = -t297 * qJD(5) + t1212 * t950 + t1331;
t855 = t1085 * t647;
t854 = t1085 * t648;
t852 = t1302 * t958;
t851 = t1212 * t958;
t850 = t647 * t1239;
t849 = t648 * t1239;
t848 = t1159 * t957;
t847 = t718 * t957;
t845 = t651 * t950;
t844 = t651 * t943;
t843 = t651 * t938;
t842 = qJD(6) * t1302 * t1212;
t834 = t718 * t1178;
t833 = t613 * t871;
t832 = t613 * t870;
t831 = t655 * t1239;
t620 = t639 * t1091;
t814 = t638 * t1092;
t799 = t1086 * qJD(3);
t798 = t1086 * qJD(4);
t797 = t1085 * qJD(4);
t796 = t1085 * qJD(5);
t522 = t977 * t600;
t546 = t977 * t610;
t794 = qJD(1) * t637 + qJD(2);
t793 = -t863 / 0.2e1;
t792 = t1265 * t635;
t790 = t1212 * t846;
t782 = t566 / 0.2e1 + t1101;
t781 = t1126 + t803;
t780 = t1175 * t566;
t778 = t802 * t600;
t776 = -0.2e1 * t790;
t775 = 0.2e1 * t790;
t770 = t1100 + t1096 + t1108;
t769 = t1302 * t790;
t724 = t1176 + t1036 / 0.2e1;
t2 = -t1040 / 0.2e1 + (t1098 * t132 + t1099 * t126 + t1105 * t140) * t655 + (t1097 * t131 + t1099 * t125 + t1106 * t139) * t651 + t724;
t351 = t546 * t598 + t597 * t608;
t768 = t2 * qJD(1) + t351 * qJD(3);
t347 = -t522 * t598 + t597 * t601;
t723 = t1101 * t1368 + t1176;
t4 = t1357 / 0.2e1 + (pkin(10) * t1124 + t1104 * t126 + t1105 * t150) * t655 + (pkin(10) * t1125 + t1104 * t125 + t1106 * t149) * t651 + t723;
t767 = t4 * qJD(1) + t347 * qJD(3);
t765 = t1055 - t1058;
t764 = t1051 - t1054;
t763 = t1047 - t1050;
t759 = -t1212 * t638 + t1302 * t639;
t757 = -t1212 * t598 + t1302 * t597;
t15 = -t1055 / 0.2e1 + t1058 / 0.2e1 + t727;
t756 = -qJD(1) * t15 - qJD(3) * t546;
t17 = (t1122 + t1124) * t655 + (t1123 + t1125) * t651;
t755 = -qJD(1) * t17 + qJD(3) * t522;
t678 = -t1036 / 0.2e1 - t1368 * t1102 + t1213 * t1324;
t694 = (t1324 * t864 - t1347) * pkin(4);
t26 = t694 + t678;
t490 = t600 * t608 + t601 * t610;
t754 = -t26 * qJD(1) + t490 * qJD(3);
t731 = t1318 + t782;
t507 = t731 * t655;
t672 = t1212 * t1098 - t1280 + (t1090 * t1212 - t1285) * pkin(4);
t664 = pkin(10) * t1117 + t1311 + t672;
t52 = t664 * t651 + t1248;
t753 = t52 * qJD(1) - t507 * qJD(3);
t752 = -t566 * qJD(3) - t1374;
t736 = -t623 / 0.2e1 + t793;
t745 = -t784 / 0.2e1;
t568 = pkin(3) * t745 - t736;
t751 = t568 * qJD(3);
t750 = qJD(3) * t600;
t749 = qJD(3) * t601 + t1374;
t89 = t332 + t1341;
t748 = -qJD(1) * t89 + qJD(3) * t608;
t747 = qJD(3) * t610;
t746 = t1212 * (-qJD(6) + t1328);
t737 = t1175 * t1174;
t734 = -t1082 / 0.2e1 + t1261 / 0.2e1;
t725 = t1047 / 0.2e1 - t1050 / 0.2e1;
t721 = -t1105 * t1302 + t1108 * t1212;
t719 = t1096 * t1212 - t1097 * t1302;
t46 = t1231 - t1356 / 0.2e1 + t668 * t655;
t717 = -qJD(1) * t46 - t608 * t951;
t50 = t669 * t655;
t716 = -qJD(1) * t50 - t601 * t951;
t701 = t235 / 0.2e1 + t721;
t70 = t655 * t701;
t715 = t70 * qJD(1) - t597 * t951;
t68 = t651 * t701;
t714 = -t68 * qJD(1) - t597 * t950;
t713 = -t1305 + t1183;
t707 = t793 + t1126 + t1096;
t705 = t311 / 0.2e1 + t734;
t702 = t855 + t854;
t700 = t242 / 0.2e1 + t719;
t695 = t854 / 0.2e1 + t855 / 0.2e1;
t662 = (t1090 * t597 + t598 * t695) * pkin(4) - t638 * t778 + t601 * t1095;
t234 = t662 - t1268;
t547 = (t638 * t702 + t639 * t652) * pkin(4);
t661 = t725 * t638 + (t1085 * t730 + t1347) * pkin(4) + t1324 * t1095;
t6 = t661 - t1172;
t699 = t6 * qJD(1) + t234 * qJD(3) + t547 * qJD(4);
t21 = (t1122 - t140 / 0.2e1) * t655 + (t1123 + t139 / 0.2e1) * t651;
t388 = t977 * (t863 / 0.2e1 + t1213);
t609 = t702 * pkin(4);
t698 = -qJD(1) * t21 - qJD(3) * t388 - qJD(4) * t609;
t697 = t1152 * t1175 + t955;
t497 = t770 * t651;
t74 = t655 * t700;
t691 = t74 * qJD(1) + t497 * qJD(3) - t639 * t944;
t498 = t770 * t655;
t72 = t651 * t700;
t690 = -t72 * qJD(1) + t498 * qJD(3) - t639 * t943;
t686 = (t941 + t949 + t955) * t1302;
t685 = t1335 * t1212;
t506 = t731 * t651;
t55 = t664 * t655;
t684 = -qJD(1) * t55 - qJD(3) * t506 - t651 * t862;
t501 = t781 * t651;
t565 = t707 * t651;
t80 = t705 * t655;
t681 = pkin(5) * t939 + t80 * qJD(1) + t501 * qJD(3) + t565 * qJD(4);
t502 = t781 * t655;
t567 = t707 * t655;
t78 = t705 * t651;
t680 = pkin(5) * t938 - t78 * qJD(1) + t502 * qJD(3) + t567 * qJD(4);
t643 = pkin(5) * t1089;
t642 = pkin(5) * t1092;
t632 = t651 * t861;
t622 = t634 * qJD(6);
t621 = t639 * t1088;
t606 = t1075 / 0.2e1;
t605 = t610 * qJD(4);
t604 = t609 * qJD(5);
t592 = t600 * qJD(5);
t591 = t651 * t603;
t581 = t651 * t593;
t574 = t597 * t1088;
t573 = t597 * t1091;
t570 = t655 * t793 + t621 + t643;
t569 = t651 * t793 + t620 + t642;
t555 = (t745 + t997) * pkin(3) + t736;
t554 = -t566 / 0.2e1 - t735 / 0.2e1 + (-t853 - t858 / 0.2e1) * pkin(3);
t539 = t546 * qJD(4);
t519 = t522 * qJD(5);
t508 = -t1016 / 0.2e1 - t782 * t655;
t505 = t1091 * t608 + t651 * t782;
t504 = t1088 * t600 + t574 + t643;
t503 = t1091 * t600 + t573 + t642;
t500 = t1089 * t610 + t574 + t621;
t499 = t1092 * t610 + t573 + t620;
t387 = pkin(4) * t695 + t1150 - t778;
t378 = pkin(3) * t703 + t606;
t346 = t776 + t1165;
t345 = t775 - t1165;
t343 = -t1191 + 0.2e1 * t537;
t266 = t286 * qJD(6);
t250 = t268 - t937;
t238 = t704 * pkin(4) + t1201;
t233 = t662 + t1268;
t225 = t795 * t1211;
t224 = t606 + t1201 + t722;
t164 = t788 + t1338;
t163 = 0.2e1 * t979;
t88 = t693 + t677;
t81 = t1354 + t992 / 0.2e1 - t734 * t655;
t79 = t1353 - t1007 / 0.2e1 + t734 * t651;
t75 = t1354 + t993 / 0.2e1 - t719 * t655;
t73 = t1353 - t1008 / 0.2e1 + t719 * t651;
t71 = t1354 + t994 / 0.2e1 - t721 * t655;
t69 = t1353 - t1009 / 0.2e1 + t721 * t651;
t54 = t672 * t655 + t1371;
t53 = t651 * t672 + t1372;
t49 = t655 * t683 + t1371;
t48 = t651 * t683 + t1372;
t45 = t1291 * t638 + t1315 * t639 + t655 * t676 + t1250;
t44 = t1212 * t814 + t1302 * t620 + t651 * t676 + t1249;
t42 = t692 + t726;
t35 = t688 + t728;
t33 = t689 + t729;
t27 = t694 - t678;
t20 = t725 + t727;
t16 = t725 + t985;
t14 = t727 + t985;
t5 = t661 + t1172;
t3 = t985 * pkin(10) + t725 * t598 - t730 * t600 + t1364 + t723;
t1 = t638 * t130 + t131 * t814 + t1040 / 0.2e1 + t730 * t610 + t727 * t598 + t724;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t633 * qJD(2), t617 * qJD(2), -t832, t521 * qJD(3), 0, t832, 0, 0, t637 * t870, -t637 * t607, qJD(2) * t556, qJD(2) * t410, t395 * t718, t1236 * t1214, 0, -t1143 * t1159, 0, 0, -qJD(3) * t348 + t718 * t945, -qJD(3) * t349 + t1159 * t945, qJD(2) * t320, qJD(2) * t220 + qJD(3) * t151, t685, -t795 * t1303, 0, -t686, 0, 0, qJD(3) * t218 - qJD(4) * t221 + t1212 * t940, qJD(3) * t219 - qJD(4) * t222 + t1302 * t940, qJD(2) * t174, qJD(2) * t82 + qJD(3) * t36 + qJD(4) * t37, t648 * t685 - t792, -0.2e1 * t1252 * t1335 * t651 - t310 * qJD(6), t1339 * t795 + t651 * t842, t647 * t685 + t792, -t1340 * t795 + t655 * t842, -t686, qJD(2) * t169 + qJD(3) * t18 + qJD(4) * t22 + qJD(5) * t24 + qJD(6) * t77, qJD(2) * t172 + qJD(3) * t19 + qJD(4) * t23 + qJD(5) * t25 + qJD(6) * t76, -qJD(3) * t10 - qJD(4) * t11 - qJD(5) * t12, qJD(2) * t28 + qJD(3) * t7 + qJD(4) * t8 + qJD(5) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, t869, 0, 0, 0, 0, 0, 0, 0, 0, t873, t886, 0, 0, 0, 0, 0, 0, 0, 0, t890, qJD(3) * t378 + t966, 0, 0, 0, 0, 0, 0, t737, 0, t930, qJD(3) * t224 + qJD(4) * t238 + t1064, 0, 0, 0, 0, 0, 0, t267 + t972 + t984, t1175 * t1297 + t1332 + t1348 + t969, qJD(4) * t164 + t1361, qJD(3) * t33 + qJD(4) * t35 + qJD(5) * t42 + t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t833, t877, -t607, t833, -t870, 0, -qJD(3) * t558 + t637 * t871, qJD(3) * t557 - t637 * t872, 0, 0, t834, t1238, t395, -t1177, -t1143, 0, t1293 - t962, -t1294 - t961 (-t1086 * t1159 - t653 * t718) * t1071, t935 + t378 * qJD(2) + (t1086 * t1275 + t391 * t653) * t1071, t1305, -t1327, t1335, -t1277, -t697, 0, -qJD(3) * t1324 + t1175 * t1365 + t968, t967 + t1375 (-t1212 * t601 + t1302 * t600) * qJD(3) + t88 * qJD(4), t1025 + t224 * qJD(2) + (t1324 * t600 - t1368 * t601) * qJD(3) + t27 * qJD(4) (t845 + t849) * t1302 + t1157, -0.2e1 * t769 + (-t1284 + t1283) * qJD(3) + t163 * qJD(4) + t1358, t1175 * t1320 + t1212 * t951 + t1359 (-t845 + t850) * t1302 - t1157, t860 + t1363, t1298, t1046 + (t651 * t757 - t1355) * qJD(3) + t44 * qJD(4) + t48 * qJD(5) + t71 * qJD(6), t1045 + t1269 + (t655 * t757 + t1356) * qJD(3) + t45 * qJD(4) + t49 * qJD(5) + t69 * qJD(6), qJD(3) * t765 + t14 * qJD(4) + t16 * qJD(5) - t1063, t1070 + t33 * qJD(2) + (t1324 * t597 + t598 * t765) * qJD(3) + t1 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, t1238, t395, -t1177, -t1143, 0, t1293 + t847, -t1294 + t848, 0, 0, t1277, -t1327, t1335, -t1305, qJD(5) * t343 - t1184 - t949, 0, -qJD(4) * t1324 + qJD(5) * t1365 + t1205 - t965, t1375 - t964, t88 * qJD(3) + (-t1085 * t1302 - t1212 * t652) * t1073, t1024 + t238 * qJD(2) + t27 * qJD(3) + (-t1085 * t1324 - t1368 * t652) * t1073 (t844 + t849) * t1302 + t1155, t163 * qJD(3) + (qJD(4) * t634 + t776) * t1302 + t1358, qJD(5) * t1320 + t1212 * t944 + t1299 (-t844 + t850) * t1302 - t1155, t1212 * t943 + t1319 * t1345 + t1363, t713, t1033 + t1329 + t44 * qJD(3) + (t651 * t759 - t1355) * qJD(4) + t53 * qJD(5) + t75 * qJD(6), t1032 + t1269 + t45 * qJD(3) + (t655 * t759 + t1356) * qJD(4) + t54 * qJD(5) + t73 * qJD(6), t164 * qJD(2) + t14 * qJD(3) + qJD(4) * t764 + t20 * qJD(5) - t1062, t1069 + t35 * qJD(2) + t1 * qJD(3) + (t638 * t764 + t1040) * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1277, -t1327, t1335, -t1277, qJD(4) * t343 - t1184 - t941, 0, qJD(4) * t1365 - qJD(5) * t1324 + t1205 + t851, t1375 + t852, 0, 0 -(-t843 - t849) * t1302 + t1153, t415 - (-qJD(5) * t634 + t775) * t1302 + t1236 * t1352, qJD(4) * t1320 + t1212 * t939 + t1299 -(t843 - t850) * t1302 - t1153, -t297 * qJD(3) + t1212 * t938 + t1331 - t1349, t1298, t1031 - t1329 + t48 * qJD(3) + t53 * qJD(4) + (t651 * t779 - t1355) * qJD(5) + t81 * qJD(6), t1030 + t1269 + t49 * qJD(3) + t54 * qJD(4) + (t655 * t779 + t1356) * qJD(5) + t79 * qJD(6), qJD(2) * t1344 + t16 * qJD(3) + t20 * qJD(4) + qJD(5) * t763 - t1061, t1068 + t42 * qJD(2) + t3 * qJD(3) + t5 * qJD(4) + (pkin(10) * t763 - t1357) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, t1132 * t1171 - t899, t1323 * t795 + t651 * t746, t83, t1236 * t1307 + t655 * t746, t225, qJD(2) * t1307 + qJD(3) * t71 + qJD(4) * t75 + qJD(5) * t81 - qJD(6) * t126 + t1065, qJD(2) * t1323 + qJD(3) * t69 + qJD(4) * t73 + qJD(5) * t79 + qJD(6) * t125 + t1066, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t868, -t869, 0, 0, 0, 0, 0, 0, t870, -t607, -t873, -t886, 0, 0, 0, 0, 0, 0, t1143, t395, -t890, -qJD(3) * t377 - t966, 0, 0, 0, 0, 0, 0, t697, t1335, -t930, -qJD(3) * t223 - qJD(4) * t237 - t1064, 0, 0, 0, 0, 0, 0, t266 + t860 - t972, -qJD(3) * t1255 + qJD(6) * t304 + t1175 * t1209 - t969, qJD(3) * t309 + qJD(4) * t165 + qJD(5) * t161, -qJD(3) * t32 - qJD(4) * t34 - qJD(5) * t41 - t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t871, -t872, 0, 0, 0, 0, 0, 0, 0, 0, t1133, t1178, 0, -t887, 0, 0, 0, 0, 0, 0, t1239, t1328, 0, -t928, 0, 0, 0, 0, 0, 0, t831, -t914, t900, -t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1133, t1178, 0, 0, 0, 0, 0, 0, 0, 0, t1179, t1328, 0, -t925, 0, 0, 0, 0, 0, 0, t909, t1241, t933, -t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1179, t1328, 0, 0, 0, 0, 0, 0, 0, 0, -t905, t1241, t934, -t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, -t644 + t901, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t833, -t877, 0, -t833, 0, 0, -t794 * t615, t794 * t613, 0, 0, -t834, -t1238, 0, t1177, 0, 0, -t1140 + t962, -t1185 + t961, 0, qJD(2) * t377 - t935, -t1305, t1327, 0, t1277, -t737, 0, qJD(4) * t89 - t1373 - t956 - t968, -t1334 - t967, -qJD(4) * t87, qJD(2) * t223 - qJD(4) * t26 - t1025, -t1305 * t648 - t1158, t162 * qJD(4) + t158 * qJD(5) + t415 + 0.2e1 * t769, qJD(5) * t1297 + qJD(6) * t303 + t1306 - t1350, -t1305 * t647 + t1158, t266 + t1349 + t984, -t1298, t43 * qJD(4) + t47 * qJD(5) - t70 * qJD(6) - t655 * t956 - t1046, qJD(2) * t1255 + qJD(4) * t46 + qJD(5) * t50 + qJD(6) * t68 - t1045, -qJD(2) * t309 + qJD(4) * t15 + qJD(5) * t17 + t1063, qJD(2) * t32 + qJD(4) * t2 + qJD(5) * t4 - t1070; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t871, t872, 0, 0, 0, 0, 0, 0, 0, 0, -t1133, -t1178, 0, t887, 0, 0, 0, 0, 0, 0, -t1239, -t1328, 0, t928, 0, 0, 0, 0, 0, 0, -t831, t914, -t900, t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t1084, -pkin(3) * t798, 0, 0, 0, 0, 0, 0, 0, 0, t978, -t605 + t592, 0, qJD(4) * t490, t635, t622, 0, -t635, 0, 0, t597 * t937 + t655 * t978, t597 * t644 + t581 + t591, t539 - t519, qJD(4) * t351 + qJD(5) * t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1084 * t1236 (-t799 - t798) * pkin(3), 0, 0, 0, 0, 0, 0, -t1217, 0, qJD(5) * t554 - t603 - t748, qJD(5) * t555 - t605 - t747, -t986 (-t1085 * t608 + t610 * t652) * t1073 + t754, t1273, t622 + t974, t1304, -t1273, t1330, 0, t508 * qJD(5) + t499 * qJD(6) - t1016 * t1236 + t1022, qJD(5) * t505 + qJD(6) * t500 + t591 - t717, qJD(5) * t387 + t539 - t756 (t546 * t638 + t608 * t639) * qJD(4) + t233 * qJD(5) + t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1217, 0, qJD(4) * t554 - t593 - t749, qJD(4) * t555 + t592 + t750, 0, 0, t1273, t622 + t975, t911, -t1273, -t1330, 0, -t1345 * t601 * t655 + t508 * qJD(4) + t503 * qJD(6) + t1021, qJD(4) * t505 + qJD(6) * t504 + t581 - t716, qJD(4) * t387 - t519 - t755, t233 * qJD(4) + (-t601 * pkin(5) - pkin(10) * t522) * qJD(5) + t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t346, t644 + t902, -t248, t250, -t1240, t499 * qJD(4) + t503 * qJD(5) - t598 * t644 - t715, t500 * qJD(4) + t504 * qJD(5) + t598 * t937 - t714, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1177, -t1238, 0, t1177, 0, 0, -t1140 - t847, -t1185 - t848, 0, 0, -t1277, t1327, 0, t1305, qJD(5) * t480 + t1220, 0, -qJD(3) * t89 - t1186 - t1373 + t965, -t1334 + t964, qJD(3) * t87, qJD(2) * t237 + qJD(3) * t26 - t1024, -t1156 - t1223, -t162 * qJD(3) + t1302 * t775 + t1361 + t415, -t1281 * t1345 + t1300, t1156 - t1224, -qJD(5) * t295 + t1301 - t1333, -t713, -qJD(2) * t1319 - qJD(3) * t43 + qJD(5) * t52 - qJD(6) * t74 - t1033, -qJD(3) * t46 + qJD(5) * t55 + qJD(6) * t72 - t1032 - t1244, -qJD(2) * t165 - qJD(3) * t15 + qJD(5) * t21 + t1062, qJD(2) * t34 - qJD(3) * t2 + qJD(5) * t6 - t1069; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1133, -t1178, 0, 0, 0, 0, 0, 0, 0, 0, -t1179, -t1328, 0, t925, 0, 0, 0, 0, 0, 0, -t909, -t1241, -t933, t1026; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071 * t653, pkin(3) * t799, 0, 0, 0, 0, 0, 0, t1217, 0, -qJD(5) * t566 + t748, -qJD(5) * t568 + t747, t986, -t754, -t1274, t622 - t974, -t1304, t1274, -t1330, 0, -t507 * qJD(5) - t497 * qJD(6) + t608 * t950 - t1022, qJD(5) * t506 - qJD(6) * t498 + t717, qJD(5) * t388 + t756, qJD(5) * t234 - t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t861, -pkin(4) * t796, 0, 0, t635, t622, 0, -t635, 0, 0, t639 * t937 - t655 * t861, t639 * t644 + t632, t604, t547 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t882, 0, -t780 + t752 (-t797 - t796) * pkin(4) - t751, 0, 0, t1144, t622 + t976, -t1304, -t1144, -t907, 0, t569 * qJD(6) - t655 * t780 + t753, qJD(6) * t570 + t632 - t684, t604 - t698 (-pkin(5) * t652 + pkin(10) * t702) * t1072 + t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t346, t1245, -t248, t1251, -t1240, t569 * qJD(5) - t638 * t644 - t691, t570 * qJD(5) + t638 * t937 - t690, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1277, t1327, 0, t1277, -qJD(4) * t480 + t1220, 0, t1236 * t1362 - t1186 - t851, -t1334 - t852, 0, 0, -t1154 - t1223, -t158 * qJD(3) - qJD(4) * t1344 - t1302 * t776 + t415, t1300 + t1306 - t1332, t1154 - t1224, qJD(4) * t295 + t1301 + t1333, -t1298, qJD(2) * t297 - qJD(3) * t47 - qJD(4) * t52 - qJD(6) * t80 - t1031, -qJD(3) * t50 - qJD(4) * t55 + qJD(6) * t78 - t1030 - t1244, -qJD(2) * t161 - qJD(3) * t17 - qJD(4) * t21 + t1061, qJD(2) * t41 - qJD(3) * t4 - qJD(4) * t6 - t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1179, -t1328, 0, 0, 0, 0, 0, 0, 0, 0, t905, -t1241, -t934, t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, 0, qJD(4) * t566 + t749, qJD(4) * t568 - t750, 0, 0, -t1274, t622 - t975, -t911, t1274, t1330, 0, t507 * qJD(4) - t501 * qJD(6) + t601 * t950 - t1021, -qJD(4) * t506 - qJD(6) * t502 + t716, -qJD(4) * t388 + t755, -qJD(4) * t234 - t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t882, 0, -t752 + t862, pkin(4) * t797 + t751, 0, 0, -t1145, t622 - t976, t1304, t1145, t907, 0, -t565 * qJD(6) + t655 * t862 - t753, -qJD(6) * t567 + t684, t698, -t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t635, t622, 0, -t635, 0, 0, -pkin(5) * t937, -pkin(5) * t644, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t346, t1245, -t248, t1251, -t1240, -pkin(10) * t644 - t681, pkin(10) * t937 - t680, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0.2e1 * t1132 * t1212 + t899, -qJD(3) * t303 + t1175 * t1282 - t1277 * t651, -t83, -t286 * qJD(3) - t1175 * t1197 - t1277 * t655, t225, -qJD(2) * t286 + qJD(3) * t70 + qJD(4) * t74 + qJD(5) * t80 - t1065, -qJD(2) * t304 - qJD(3) * t68 - qJD(4) * t72 - qJD(5) * t78 - t1066, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, -t901, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t345, -t902, t248, -t268, t1240, qJD(4) * t497 + qJD(5) * t501 + t715, t498 * qJD(4) + t502 * qJD(5) + t714, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t345, t1216, t248, -t1215, t1240, qJD(5) * t565 + t691, t567 * qJD(5) + t690, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t345, t1216, t248, -t1215, t1240, t681, t680, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
