% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 07:55
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRRP12_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP12_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP12_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP12_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP12_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP12_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 07:47:15
% EndTime: 2019-05-08 07:51:16
% DurationCPUTime: 198.71s
% Computational Cost: add. (1095276->1163), mult. (2706093->1859), div. (0->0), fcn. (2295706->14), ass. (0->870)
t1491 = sin(qJ(1));
t1496 = cos(qJ(1));
t1486 = cos(pkin(6));
t1754 = qJD(1) * t1486;
t1475 = qJD(2) + t1754;
t1489 = sin(qJ(3));
t1490 = sin(qJ(2));
t1494 = cos(qJ(3));
t1485 = cos(pkin(7));
t1495 = cos(qJ(2));
t1704 = t1485 * t1495;
t1483 = sin(pkin(7));
t1711 = t1483 * t1489;
t1484 = sin(pkin(6));
t1755 = qJD(1) * t1484;
t1433 = t1475 * t1711 + (t1489 * t1704 + t1490 * t1494) * t1755;
t1707 = t1484 * t1495;
t1687 = qJD(1) * t1707;
t1670 = t1483 * t1687;
t1714 = t1475 * t1485;
t1450 = qJD(3) - t1670 + t1714;
t1488 = sin(qJ(4));
t1493 = cos(qJ(4));
t1411 = t1433 * t1488 - t1493 * t1450;
t1408 = qJD(5) + t1411;
t1769 = t1408 ^ 2;
t1413 = t1433 * t1493 + t1450 * t1488;
t1487 = sin(qJ(5));
t1492 = cos(qJ(5));
t1671 = t1485 * t1687;
t1708 = t1484 * t1490;
t1688 = qJD(1) * t1708;
t1710 = t1483 * t1494;
t1431 = -t1475 * t1710 + t1489 * t1688 - t1494 * t1671;
t1530 = qJD(4) + t1431;
t1376 = t1413 * t1487 - t1492 * t1530;
t1770 = t1376 ^ 2;
t1335 = t1770 - t1769;
t1378 = t1492 * t1413 + t1487 * t1530;
t1318 = t1378 * t1376;
t1473 = qJD(2) * t1688;
t1693 = qJDD(1) * t1495;
t1657 = t1484 * t1693 - t1473;
t1672 = qJDD(1) * t1486 + qJDD(2);
t1512 = t1483 * t1672 + t1485 * t1657;
t1694 = qJDD(1) * t1490;
t1753 = qJD(1) * t1495;
t1566 = qJD(2) * t1753 + t1694;
t1529 = t1566 * t1484;
t1504 = t1489 * t1512 + t1494 * t1529;
t1390 = -t1431 * qJD(3) + t1504;
t1437 = -t1483 * t1657 + t1485 * t1672 + qJDD(3);
t1673 = t1488 * t1390 - t1493 * t1437;
t1327 = -t1413 * qJD(4) - t1673;
t1326 = qJDD(5) - t1327;
t1784 = t1318 + t1326;
t1739 = t1784 * t1487;
t1203 = t1335 * t1492 - t1739;
t1515 = -t1489 * t1529 + t1494 * t1512;
t1511 = t1433 * qJD(3) - t1515;
t1510 = qJDD(4) + t1511;
t1677 = t1411 * qJD(4) - t1493 * t1390 - t1488 * t1437;
t1674 = -t1487 * t1677 - t1492 * t1510;
t1215 = (qJD(5) - t1408) * t1378 + t1674;
t1116 = t1203 * t1488 + t1215 * t1493;
t1120 = t1203 * t1493 - t1215 * t1488;
t1738 = t1784 * t1492;
t1198 = t1335 * t1487 + t1738;
t1617 = t1120 * t1489 - t1198 * t1494;
t1005 = t1116 * t1485 + t1483 * t1617;
t1009 = -t1116 * t1483 + t1485 * t1617;
t1059 = t1120 * t1494 + t1198 * t1489;
t1638 = t1009 * t1495 + t1059 * t1490;
t907 = -t1005 * t1484 + t1486 * t1638;
t950 = t1009 * t1490 - t1059 * t1495;
t1957 = t1491 * t907 + t1496 * t950;
t1697 = qJD(5) + t1408;
t1214 = t1378 * t1697 + t1674;
t1507 = -t1487 * t1510 + t1492 * t1677;
t1505 = -t1376 * qJD(5) - t1507;
t1728 = t1376 * t1408;
t1780 = -t1728 + t1505;
t1744 = t1780 * t1487;
t1132 = -t1214 * t1492 - t1744;
t1374 = t1378 ^ 2;
t1315 = t1374 - t1770;
t1093 = t1132 * t1493 + t1315 * t1488;
t1126 = -t1214 * t1487 + t1492 * t1780;
t1025 = t1093 * t1494 + t1126 * t1489;
t1091 = t1132 * t1488 - t1315 * t1493;
t1626 = t1093 * t1489 - t1126 * t1494;
t973 = -t1091 * t1483 + t1485 * t1626;
t1647 = t1025 * t1490 + t1495 * t973;
t971 = t1091 * t1485 + t1483 * t1626;
t883 = -t1484 * t971 + t1486 * t1647;
t919 = -t1025 * t1495 + t1490 * t973;
t1956 = t1491 * t883 + t1496 * t919;
t1955 = -t1491 * t950 + t1496 * t907;
t1954 = -t1491 * t919 + t1496 * t883;
t1949 = t1005 * t1486 + t1484 * t1638;
t1948 = t1484 * t1647 + t1486 * t971;
t1781 = -t1728 - t1505;
t1824 = -t1215 * t1487 + t1781 * t1492;
t1782 = t1374 + t1770;
t1823 = -t1215 * t1492 - t1781 * t1487;
t1847 = -t1488 * t1782 + t1493 * t1823;
t1865 = t1489 * t1824 + t1494 * t1847;
t1852 = t1488 * t1823 + t1493 * t1782;
t1867 = t1489 * t1847 - t1494 * t1824;
t1899 = -t1483 * t1852 + t1485 * t1867;
t1910 = -t1490 * t1899 + t1495 * t1865;
t1901 = t1483 * t1867 + t1485 * t1852;
t1908 = t1490 * t1865 + t1495 * t1899;
t1923 = -t1484 * t1901 + t1486 * t1908;
t1932 = t1491 * t1910 + t1496 * t1923;
t1943 = pkin(8) * t1932;
t1934 = -t1491 * t1923 + t1496 * t1910;
t1942 = pkin(8) * t1934;
t1941 = pkin(1) * t1923;
t1925 = t1484 * t1908 + t1486 * t1901;
t1940 = pkin(1) * t1925;
t1336 = -t1374 + t1769;
t1785 = -t1318 + t1326;
t1737 = t1785 * t1487;
t1826 = -t1336 * t1492 - t1737;
t1736 = t1785 * t1492;
t1825 = -t1336 * t1487 + t1736;
t1846 = -t1488 * t1781 + t1493 * t1825;
t1866 = -t1489 * t1826 + t1494 * t1846;
t1851 = t1488 * t1825 + t1493 * t1781;
t1868 = t1489 * t1846 + t1494 * t1826;
t1898 = -t1483 * t1851 + t1485 * t1868;
t1911 = -t1490 * t1898 + t1495 * t1866;
t1900 = t1483 * t1868 + t1485 * t1851;
t1909 = t1490 * t1866 + t1495 * t1898;
t1922 = -t1484 * t1900 + t1486 * t1909;
t1935 = -t1491 * t1922 + t1496 * t1911;
t1933 = t1491 * t1911 + t1496 * t1922;
t1931 = (-t1484 * t1925 - t1486 * t1923) * pkin(9);
t1930 = pkin(9) * t1910;
t1924 = t1484 * t1909 + t1486 * t1900;
t1921 = pkin(2) * t1899;
t1920 = pkin(2) * t1901;
t1907 = (-t1483 * t1901 - t1485 * t1899) * pkin(10);
t1906 = pkin(10) * t1865;
t1723 = t1408 * t1492;
t1333 = t1378 * t1723;
t1724 = t1408 * t1487;
t1682 = t1376 * t1724;
t1662 = t1333 + t1682;
t1332 = t1378 * t1724;
t1681 = t1376 * t1723;
t1663 = t1332 - t1681;
t1775 = t1326 * t1488 + t1493 * t1663;
t1796 = -t1489 * t1662 + t1494 * t1775;
t1778 = -t1493 * t1326 + t1488 * t1663;
t1799 = t1489 * t1775 + t1494 * t1662;
t1818 = -t1483 * t1778 + t1485 * t1799;
t1850 = -t1490 * t1818 + t1495 * t1796;
t1821 = t1483 * t1799 + t1485 * t1778;
t1845 = t1490 * t1796 + t1495 * t1818;
t1869 = -t1484 * t1821 + t1486 * t1845;
t1897 = -t1491 * t1869 + t1496 * t1850;
t1250 = -qJD(5) * t1378 - t1674;
t1570 = -t1250 * t1492 - t1682;
t1571 = -t1250 * t1487 + t1681;
t1684 = t1488 * t1318;
t1776 = t1493 * t1571 - t1684;
t1795 = -t1489 * t1570 + t1494 * t1776;
t1683 = t1493 * t1318;
t1777 = t1488 * t1571 + t1683;
t1798 = t1489 * t1776 + t1494 * t1570;
t1819 = -t1483 * t1777 + t1485 * t1798;
t1849 = -t1490 * t1819 + t1495 * t1795;
t1822 = t1483 * t1798 + t1485 * t1777;
t1844 = t1490 * t1795 + t1495 * t1819;
t1870 = -t1484 * t1822 + t1486 * t1844;
t1896 = -t1491 * t1870 + t1496 * t1849;
t1895 = t1491 * t1850 + t1496 * t1869;
t1894 = t1491 * t1849 + t1496 * t1870;
t1298 = t1769 + t1374;
t1177 = t1298 * t1492 + t1739;
t1893 = pkin(3) * t1177;
t1892 = pkin(4) * t1177;
t1891 = pkin(11) * t1847;
t1890 = pkin(11) * t1852;
t1889 = pkin(12) * t1177;
t1186 = t1298 * t1487 - t1738;
t1888 = pkin(12) * t1186;
t1887 = t1177 * t1489;
t1886 = t1177 * t1494;
t1885 = t1186 * t1488;
t1884 = t1186 * t1493;
t1873 = -pkin(3) * t1852 - pkin(4) * t1782 - pkin(12) * t1823;
t1872 = t1484 * t1844 + t1486 * t1822;
t1871 = t1484 * t1845 + t1486 * t1821;
t1864 = pkin(12) * t1824;
t1212 = -t1487 * t1505 - t1333;
t1213 = t1492 * t1505 - t1332;
t1664 = t1493 * t1213 + t1684;
t1665 = t1488 * t1213 - t1683;
t1705 = t1485 * t1494;
t1706 = t1485 * t1489;
t1772 = t1212 * t1705 - t1483 * t1665 + t1664 * t1706;
t1774 = -t1212 * t1489 + t1494 * t1664;
t1793 = -t1490 * t1772 + t1495 * t1774;
t1773 = t1212 * t1710 + t1485 * t1665 + t1664 * t1711;
t1794 = t1490 * t1774 + t1495 * t1772;
t1817 = -t1484 * t1773 + t1486 * t1794;
t1848 = -t1491 * t1817 + t1496 * t1793;
t1843 = t1491 * t1793 + t1496 * t1817;
t1779 = -t1769 - t1770;
t1800 = t1487 * t1779 + t1736;
t1842 = pkin(3) * t1800;
t1841 = pkin(4) * t1800;
t1797 = t1492 * t1779 - t1737;
t1840 = pkin(12) * t1797;
t1839 = pkin(12) * t1800;
t1836 = t1488 * t1797;
t1835 = t1489 * t1800;
t1831 = t1493 * t1797;
t1830 = t1494 * t1800;
t1820 = t1484 * t1794 + t1486 * t1773;
t1816 = 2 * qJD(6);
t1814 = qJ(6) * t1780;
t1366 = t1413 * t1411;
t1783 = -t1366 + t1510;
t1805 = t1488 * t1783;
t1802 = t1493 * t1783;
t1474 = t1475 ^ 2;
t1471 = t1491 * g(1) - t1496 * g(2);
t1572 = qJDD(1) * pkin(1) + t1471;
t1550 = t1486 * t1572;
t1472 = g(1) * t1496 + t1491 * g(2);
t1771 = qJD(1) ^ 2;
t1759 = t1771 * pkin(1);
t1564 = t1472 + t1759;
t1652 = t1672 * pkin(2);
t1761 = pkin(10) * t1483;
t1503 = t1474 * t1761 + t1490 * t1564 + t1495 * t1550 + t1652;
t1573 = -pkin(2) * t1495 - t1490 * t1761;
t1562 = t1490 * t1573;
t1760 = pkin(10) * t1485;
t1690 = -pkin(9) - t1760;
t1762 = pkin(9) * t1486;
t1692 = t1495 * t1762;
t1757 = t1495 * g(3);
t1500 = (-t1757 + t1690 * t1694 + ((-t1484 * t1562 + t1692) * qJD(1) + (-qJD(2) + t1475) * pkin(10) * t1704) * qJD(1)) * t1484 + t1503;
t1758 = t1486 * g(3);
t1667 = t1473 * pkin(2) - t1758;
t1481 = t1490 ^ 2;
t1482 = t1495 ^ 2;
t1695 = t1481 + t1482;
t1700 = qJD(2) + t1475;
t1709 = t1483 * t1495;
t1713 = t1475 * t1490;
t1502 = ((-pkin(1) + t1573) * qJDD(1) + (pkin(2) * t1713 - pkin(9) * t1755 + (-t1485 * t1695 * t1755 - t1700 * t1709) * pkin(10)) * qJD(1) - t1471) * t1484 + t1667;
t1801 = t1483 * t1502 + t1485 * t1500;
t1385 = t1530 * t1411;
t1293 = t1677 + t1385;
t1527 = t1530 ^ 2;
t1480 = t1484 ^ 2;
t1792 = t1480 * t1490;
t1722 = t1433 * t1431;
t1514 = t1437 - t1722;
t1791 = t1489 * t1514;
t1788 = t1494 * t1514;
t1416 = t1450 * t1431;
t1354 = -t1416 + t1390;
t1401 = pkin(3) * t1431 - pkin(11) * t1433;
t1476 = g(3) * t1708;
t1763 = pkin(9) * t1484;
t1531 = qJDD(1) * t1763 - t1472;
t1703 = t1486 * t1490;
t1362 = t1495 * t1531 + t1490 * t1550 - t1476 - pkin(2) * t1474 + t1512 * pkin(10) + (-pkin(1) * t1753 + (t1713 * t1760 + (pkin(9) * t1703 + t1573 * t1707) * qJD(1)) * t1484) * qJD(1);
t1701 = t1494 * t1362;
t1768 = t1450 ^ 2;
t1226 = -t1768 * pkin(3) + t1437 * pkin(11) - t1431 * t1401 + t1489 * t1801 + t1701;
t1719 = t1450 * t1433;
t1498 = -t1483 * t1500 + t1485 * t1502 - t1354 * pkin(11) + (t1511 + t1719) * pkin(3);
t1136 = t1493 * t1226 + t1488 * t1498;
t1363 = pkin(4) * t1411 - pkin(12) * t1413;
t1081 = -pkin(4) * t1527 + pkin(12) * t1510 - t1411 * t1363 + t1136;
t1251 = t1489 * t1362 - t1494 * t1801;
t1225 = -t1437 * pkin(3) - t1768 * pkin(11) + t1433 * t1401 + t1251;
t1523 = t1530 * t1413;
t1123 = t1293 * pkin(12) + (-t1327 + t1523) * pkin(4) + t1225;
t1021 = t1492 * t1081 + t1487 * t1123;
t1314 = pkin(5) * t1376 - qJ(6) * t1378;
t1642 = t1326 * qJ(6) - t1376 * t1314 + t1408 * t1816 + t1021;
t1409 = t1411 ^ 2;
t1410 = t1413 ^ 2;
t1427 = t1431 ^ 2;
t1428 = t1433 ^ 2;
t1767 = pkin(3) * t1489;
t1766 = pkin(3) * t1494;
t1765 = pkin(4) * t1488;
t1764 = pkin(5) * t1492;
t1756 = qJ(6) * t1492;
t1135 = t1226 * t1488 - t1493 * t1498;
t1080 = -t1510 * pkin(4) - t1527 * pkin(12) + t1363 * t1413 + t1135;
t1751 = t1080 * t1487;
t1750 = t1080 * t1492;
t1741 = t1225 * t1488;
t1740 = t1225 * t1493;
t1300 = t1483 * t1503 - t1485 * t1667 + (t1483 * (-pkin(9) * t1694 - t1757) - t1485 * (-pkin(2) * t1693 - t1572) + ((t1483 * t1692 + (-t1483 * t1562 - t1485 * (-t1695 * t1760 - pkin(9))) * t1484) * qJD(1) + (-pkin(2) * t1490 + 0.2e1 * pkin(10) * t1709) * t1714) * qJD(1)) * t1484;
t1735 = t1300 * t1489;
t1734 = t1300 * t1494;
t1311 = t1366 + t1510;
t1733 = t1311 * t1488;
t1732 = t1311 * t1493;
t1380 = -t1437 - t1722;
t1727 = t1380 * t1489;
t1726 = t1380 * t1494;
t1725 = t1408 * t1378;
t1524 = t1763 * t1771 + t1572;
t1444 = t1484 * t1524 + t1758;
t1721 = t1444 * t1490;
t1720 = t1444 * t1495;
t1702 = t1490 * t1771;
t1678 = t1495 * t1702;
t1470 = t1480 * t1678;
t1452 = t1470 + t1672;
t1718 = t1452 * t1490;
t1717 = t1452 * t1495;
t1453 = -t1470 + t1672;
t1716 = t1453 * t1490;
t1715 = t1453 * t1495;
t1712 = t1480 * t1771;
t1699 = qJD(3) + t1450;
t1020 = t1487 * t1081 - t1492 * t1123;
t1696 = t1782 - t1769;
t1691 = -pkin(4) * t1493 - pkin(3);
t1689 = t1475 * t1755;
t1686 = t1481 * t1712;
t1685 = t1482 * t1712;
t1680 = t1489 * t1366;
t1679 = t1494 * t1366;
t1676 = qJ(6) * t1487 + pkin(4);
t1675 = -t1475 + t1754;
t1030 = t1135 * t1488 + t1493 * t1136;
t1447 = -t1471 * t1491 - t1496 * t1472;
t1668 = t1378 * t1314 + qJDD(6) + t1020;
t1469 = qJDD(1) * t1496 - t1491 * t1771;
t1666 = -pkin(8) * t1469 - g(3) * t1491;
t1451 = -t1686 - t1474;
t1421 = -t1451 * t1490 - t1715;
t1661 = pkin(9) * t1421 - t1721;
t1457 = -t1474 - t1685;
t1425 = t1457 * t1495 - t1718;
t1660 = pkin(9) * t1425 + t1720;
t1389 = -t1768 - t1427;
t1323 = t1389 * t1494 - t1791;
t1659 = pkin(10) * t1323 + t1734;
t1396 = -t1428 - t1768;
t1331 = -t1396 * t1489 + t1726;
t1658 = pkin(10) * t1331 - t1735;
t1516 = -t1250 * pkin(5) + t1080 - t1814;
t1017 = (pkin(5) * t1408 - (2 * qJD(6))) * t1378 + t1516;
t989 = -pkin(5) * t1769 + t1642;
t1565 = -pkin(5) * t1326 + t1668;
t994 = qJ(6) * t1769 - t1565;
t918 = -t1487 * t994 + t1492 * t989;
t889 = t1017 * t1488 + t1493 * t918;
t917 = t1487 * t989 + t1492 * t994;
t1656 = t1489 * t889 - t1494 * t917;
t937 = t1020 * t1487 + t1021 * t1492;
t914 = t1080 * t1488 + t1493 * t937;
t936 = -t1020 * t1492 + t1021 * t1487;
t1655 = t1489 * t914 - t1494 * t936;
t888 = -t1017 * t1493 + t1488 * t918;
t829 = -t1483 * t888 + t1485 * t1656;
t853 = t1489 * t917 + t1494 * t889;
t1654 = t1490 * t853 + t1495 * t829;
t913 = -t1080 * t1493 + t1488 * t937;
t844 = -t1483 * t913 + t1485 * t1655;
t872 = t1489 * t936 + t1494 * t914;
t1653 = t1490 * t872 + t1495 * t844;
t1013 = t1030 * t1494 + t1225 * t1489;
t1029 = -t1135 * t1493 + t1136 * t1488;
t1637 = t1030 * t1489 - t1225 * t1494;
t941 = -t1029 * t1483 + t1485 * t1637;
t1651 = t1013 * t1490 + t1495 * t941;
t1099 = -t1488 * t1780 - t1884;
t1044 = t1099 * t1494 + t1887;
t1097 = t1493 * t1780 - t1885;
t1624 = t1099 * t1489 - t1886;
t992 = -t1097 * t1483 + t1485 * t1624;
t1646 = t1044 * t1490 + t1495 * t992;
t1100 = t1214 * t1488 + t1831;
t1045 = t1100 * t1494 + t1835;
t1098 = -t1214 * t1493 + t1836;
t1623 = t1100 * t1489 - t1830;
t993 = -t1098 * t1483 + t1485 * t1623;
t1645 = t1045 * t1490 + t1495 * t993;
t1222 = t1376 * t1697 + t1507;
t1106 = -t1222 * t1488 + t1884;
t1051 = t1106 * t1494 - t1887;
t1104 = t1222 * t1493 + t1885;
t1622 = t1106 * t1489 + t1886;
t997 = -t1104 * t1483 + t1485 * t1622;
t1644 = t1051 * t1490 + t1495 * t997;
t1216 = -t1250 + t1725;
t1107 = t1216 * t1488 + t1831;
t1052 = t1107 * t1494 + t1835;
t1105 = -t1216 * t1493 + t1836;
t1621 = t1107 * t1489 - t1830;
t998 = -t1105 * t1483 + t1485 * t1621;
t1643 = t1052 * t1490 + t1495 * t998;
t1288 = -t1413 * t1431 + t1673;
t1292 = -t1385 + t1677;
t1193 = -t1288 * t1488 + t1292 * t1493;
t1195 = -t1288 * t1493 - t1292 * t1488;
t1329 = t1409 + t1410;
t1606 = t1195 * t1489 + t1329 * t1494;
t1085 = -t1193 * t1483 + t1485 * t1606;
t1170 = t1195 * t1494 - t1329 * t1489;
t1628 = t1085 * t1495 + t1170 * t1490;
t1289 = (-0.2e1 * qJD(4) - t1431) * t1413 - t1673;
t1192 = t1289 * t1488 - t1293 * t1493;
t1194 = t1289 * t1493 + t1293 * t1488;
t1365 = -t1410 + t1409;
t1607 = t1194 * t1489 + t1365 * t1494;
t1096 = -t1192 * t1483 + t1485 * t1607;
t1175 = t1194 * t1494 - t1365 * t1489;
t1625 = t1096 * t1495 + t1175 * t1490;
t1343 = -t1527 - t1409;
t1255 = t1343 * t1488 + t1802;
t1256 = t1343 * t1493 - t1805;
t1600 = t1256 * t1489 + t1289 * t1494;
t1138 = -t1255 * t1483 + t1485 * t1600;
t1182 = t1256 * t1494 - t1289 * t1489;
t1616 = t1138 * t1495 + t1182 * t1490;
t1521 = t1486 * t1524;
t1540 = t1475 * t1483 + t1671;
t1525 = t1540 * qJD(1);
t1252 = t1701 + (t1485 * (-g(3) * t1707 + t1495 * t1521 + t1652) + t1483 * (-pkin(2) * t1657 - t1444) + (t1485 * (-qJD(2) * t1671 + t1475 * t1540) + t1483 * (-qJD(2) * t1670 - t1525 * t1707)) * pkin(10) + (t1485 * t1564 + (pkin(2) * t1525 + (-pkin(10) * t1483 ^ 2 + t1485 * t1690) * qJDD(1)) * t1484) * t1490) * t1489;
t1601 = -t1251 * t1494 + t1252 * t1489;
t1141 = t1300 * t1483 + t1485 * t1601;
t1161 = t1251 * t1489 + t1252 * t1494;
t1615 = t1141 * t1495 + t1161 * t1490;
t1359 = -t1410 - t1527;
t1259 = t1359 * t1493 - t1733;
t1260 = -t1359 * t1488 - t1732;
t1598 = t1260 * t1489 + t1293 * t1494;
t1143 = -t1259 * t1483 + t1485 * t1598;
t1183 = t1260 * t1494 - t1293 * t1489;
t1614 = t1143 * t1495 + t1183 * t1490;
t1384 = -t1410 + t1527;
t1269 = t1384 * t1493 + t1805;
t1271 = -t1384 * t1488 + t1802;
t1595 = t1271 * t1489 + t1292 * t1494;
t1147 = -t1269 * t1483 + t1485 * t1595;
t1190 = t1271 * t1494 - t1292 * t1489;
t1613 = t1147 * t1495 + t1190 * t1490;
t1383 = t1409 - t1527;
t1270 = t1383 * t1488 + t1732;
t1272 = t1383 * t1493 - t1733;
t1594 = t1272 * t1489 + t1288 * t1494;
t1148 = -t1270 * t1483 + t1485 * t1594;
t1191 = t1272 * t1494 - t1288 * t1489;
t1612 = t1148 * t1495 + t1191 * t1490;
t1520 = t1488 * t1385;
t1284 = t1493 * t1327 + t1520;
t1518 = t1493 * t1385;
t1285 = -t1488 * t1327 + t1518;
t1569 = t1285 * t1489 + t1679;
t1173 = -t1284 * t1483 + t1485 * t1569;
t1239 = t1285 * t1494 - t1680;
t1609 = t1173 * t1495 + t1239 * t1490;
t1517 = t1493 * t1523;
t1286 = -t1488 * t1677 + t1517;
t1519 = t1488 * t1523;
t1287 = -t1493 * t1677 - t1519;
t1568 = t1287 * t1489 - t1679;
t1174 = -t1286 * t1483 + t1485 * t1568;
t1240 = t1287 * t1494 + t1680;
t1608 = t1174 * t1495 + t1240 * t1490;
t1319 = -t1520 - t1517;
t1320 = -t1518 + t1519;
t1506 = t1489 * t1320 - t1494 * t1510;
t1235 = -t1483 * t1319 + t1485 * t1506;
t1281 = t1494 * t1320 + t1489 * t1510;
t1603 = t1235 * t1495 + t1281 * t1490;
t1375 = -t1427 - t1428;
t1355 = t1416 + t1390;
t1508 = (-qJD(3) + t1450) * t1433 + t1515;
t1587 = -t1355 * t1494 + t1489 * t1508;
t1242 = -t1375 * t1483 + t1485 * t1587;
t1283 = t1355 * t1489 + t1494 * t1508;
t1602 = t1242 * t1495 + t1283 * t1490;
t1402 = t1428 - t1427;
t1350 = t1433 * t1699 - t1515;
t1588 = -t1350 * t1489 + t1354 * t1494;
t1258 = -t1402 * t1483 + t1485 * t1588;
t1282 = -t1350 * t1494 - t1354 * t1489;
t1599 = t1258 * t1495 + t1282 * t1490;
t1583 = t1389 * t1489 + t1788;
t1262 = -t1350 * t1483 + t1485 * t1583;
t1597 = t1262 * t1495 + t1323 * t1490;
t1353 = -t1431 * t1699 + t1504;
t1586 = t1396 * t1494 + t1727;
t1268 = -t1353 * t1483 + t1485 * t1586;
t1596 = t1268 * t1495 + t1331 * t1490;
t1415 = -t1428 + t1768;
t1584 = t1415 * t1494 + t1791;
t1275 = -t1355 * t1483 + t1485 * t1584;
t1341 = -t1415 * t1489 + t1788;
t1593 = t1275 * t1495 + t1341 * t1490;
t1414 = t1427 - t1768;
t1585 = t1414 * t1489 - t1726;
t1276 = -t1483 * t1508 + t1485 * t1585;
t1342 = t1414 * t1494 + t1727;
t1592 = t1276 * t1495 + t1342 * t1490;
t1509 = t1494 * t1511;
t1307 = -t1485 * t1509 + (t1433 * t1483 + t1450 * t1706) * t1431;
t1348 = t1416 * t1494 + t1489 * t1511;
t1591 = t1307 * t1495 + t1348 * t1490;
t1309 = t1390 * t1706 + (-t1431 * t1483 + t1450 * t1705) * t1433;
t1349 = t1390 * t1494 - t1489 * t1719;
t1590 = t1309 * t1495 + t1349 * t1490;
t1563 = t1450 * (-t1431 * t1489 - t1433 * t1494);
t1347 = -t1437 * t1483 + t1485 * t1563;
t1370 = (-t1431 * t1494 + t1433 * t1489) * t1450;
t1589 = t1347 * t1495 + t1370 * t1490;
t1522 = t1531 - t1759;
t1419 = t1490 * t1522 + (t1484 * g(3) - t1521) * t1495;
t1420 = t1490 * t1521 + t1495 * t1522 - t1476;
t1582 = -t1419 * t1495 + t1420 * t1490;
t1379 = t1419 * t1490 + t1420 * t1495;
t1461 = t1475 * t1687;
t1439 = t1461 + t1529;
t1460 = t1475 * t1688;
t1442 = -t1460 + t1657;
t1581 = t1439 * t1495 + t1442 * t1490;
t1440 = -t1461 + t1529;
t1441 = t1460 + t1657;
t1580 = -t1440 * t1495 + t1441 * t1490;
t1579 = t1451 * t1495 - t1716;
t1455 = t1474 - t1686;
t1578 = t1455 * t1495 + t1718;
t1577 = t1457 * t1490 + t1717;
t1456 = -t1474 + t1685;
t1576 = t1456 * t1490 + t1715;
t1446 = t1471 * t1496 - t1491 * t1472;
t1574 = t1484 * t1672;
t870 = -pkin(4) * t917 - pkin(5) * t994 - qJ(6) * t989;
t873 = -pkin(12) * t917 + (pkin(5) * t1487 - t1756) * t1017;
t819 = -pkin(11) * t888 - t1488 * t870 + t1493 * t873;
t830 = -pkin(3) * t888 - pkin(12) * t918 + (t1676 + t1764) * t1017;
t1552 = pkin(10) * t853 + t1489 * t819 + t1494 * t830;
t816 = -pkin(3) * t917 + pkin(11) * t889 + t1488 * t873 + t1493 * t870;
t828 = t1483 * t1656 + t1485 * t888;
t786 = -pkin(2) * t828 - t1483 * t816 + t1485 * t1552;
t789 = -t1489 * t830 + t1494 * t819 + (-t1483 * t828 - t1485 * t829) * pkin(10);
t815 = -t1490 * t829 + t1495 * t853;
t1561 = pkin(9) * t815 + t1490 * t789 + t1495 * t786;
t850 = -pkin(11) * t913 + (-pkin(12) * t1493 + t1765) * t936;
t862 = -pkin(3) * t913 + pkin(4) * t1080 - pkin(12) * t937;
t1551 = pkin(10) * t872 + t1489 * t850 + t1494 * t862;
t837 = pkin(11) * t914 + (-pkin(12) * t1488 + t1691) * t936;
t843 = t1483 * t1655 + t1485 * t913;
t796 = -pkin(2) * t843 - t1483 * t837 + t1485 * t1551;
t804 = -t1489 * t862 + t1494 * t850 + (-t1483 * t843 - t1485 * t844) * pkin(10);
t824 = -t1490 * t844 + t1495 * t872;
t1560 = pkin(9) * t824 + t1490 * t804 + t1495 * t796;
t1028 = -pkin(4) * t1824 - pkin(5) * t1781 + qJ(6) * t1215;
t978 = pkin(5) * t1696 + t1642;
t983 = qJ(6) * t1696 + t1565;
t897 = -t1487 * t978 + t1492 * t983 - t1864;
t871 = -t1028 * t1488 + t1493 * t897 - t1890;
t886 = -t1487 * t983 - t1492 * t978 + t1873;
t1546 = t1489 * t871 + t1494 * t886 + t1906;
t863 = -pkin(3) * t1824 + t1028 * t1493 + t1488 * t897 + t1891;
t814 = -t1483 * t863 + t1485 * t1546 - t1920;
t825 = -t1489 * t886 + t1494 * t871 + t1907;
t1559 = t1490 * t825 + t1495 * t814 + t1930;
t922 = -t936 - t1864;
t890 = t1493 * t922 + t1765 * t1824 - t1890;
t898 = t1873 - t937;
t1545 = t1489 * t890 + t1494 * t898 + t1906;
t885 = t1488 * t922 + t1691 * t1824 + t1891;
t818 = -t1483 * t885 + t1485 * t1545 - t1920;
t827 = -t1489 * t898 + t1494 * t890 + t1907;
t1558 = t1490 * t827 + t1495 * t818 + t1930;
t955 = -t1892 - qJ(6) * t1784 + (-t1298 + t1769) * pkin(5) - t1642;
t1513 = t1378 * t1816 - t1516;
t986 = -pkin(5) * t1725 + t1513 + t1814;
t956 = -pkin(5) * t1744 + t1492 * t986 - t1889;
t881 = -pkin(11) * t1097 - t1488 * t955 + t1493 * t956;
t921 = -pkin(3) * t1097 + t1888 - t1487 * t986 + (-pkin(4) - t1764) * t1780;
t1544 = pkin(10) * t1044 + t1489 * t881 + t1494 * t921;
t874 = pkin(11) * t1099 + t1488 * t956 + t1493 * t955 - t1893;
t990 = t1097 * t1485 + t1483 * t1624;
t821 = -pkin(2) * t990 - t1483 * t874 + t1485 * t1544;
t833 = -t1489 * t921 + t1494 * t881 + (-t1483 * t990 - t1485 * t992) * pkin(10);
t938 = t1044 * t1495 - t1490 * t992;
t1557 = pkin(9) * t938 + t1490 * t833 + t1495 * t821;
t987 = (-t1216 - t1725) * pkin(5) + t1513;
t957 = -t1216 * t1756 - t1487 * t987 - t1839;
t959 = -t1841 + (-t1779 - t1769) * qJ(6) + (-t1785 - t1326) * pkin(5) + t1668;
t884 = -pkin(11) * t1105 - t1488 * t959 + t1493 * t957;
t923 = -pkin(3) * t1105 + t1216 * t1676 - t1492 * t987 - t1840;
t1541 = pkin(10) * t1052 + t1489 * t884 + t1494 * t923;
t875 = pkin(11) * t1107 + t1488 * t957 + t1493 * t959 - t1842;
t996 = t1105 * t1485 + t1483 * t1621;
t823 = -pkin(2) * t996 - t1483 * t875 + t1485 * t1541;
t834 = -t1489 * t923 + t1494 * t884 + (-t1483 * t996 - t1485 * t998) * pkin(10);
t943 = t1052 * t1495 - t1490 * t998;
t1556 = pkin(9) * t943 + t1490 * t834 + t1495 * t823;
t1041 = t1751 - t1839;
t985 = t1020 - t1841;
t912 = -pkin(11) * t1098 + t1041 * t1493 - t1488 * t985;
t967 = -pkin(3) * t1098 + pkin(4) * t1214 + t1750 - t1840;
t1543 = pkin(10) * t1045 + t1489 * t912 + t1494 * t967;
t908 = pkin(11) * t1100 + t1041 * t1488 + t1493 * t985 - t1842;
t991 = t1098 * t1485 + t1483 * t1623;
t832 = -pkin(2) * t991 - t1483 * t908 + t1485 * t1543;
t849 = -t1489 * t967 + t1494 * t912 + (-t1483 * t991 - t1485 * t993) * pkin(10);
t939 = t1045 * t1495 - t1490 * t993;
t1555 = pkin(9) * t939 + t1490 * t849 + t1495 * t832;
t1042 = t1750 + t1889;
t988 = t1021 + t1892;
t916 = -pkin(11) * t1104 + t1042 * t1493 - t1488 * t988;
t969 = -pkin(3) * t1104 - pkin(4) * t1222 - t1751 - t1888;
t1542 = pkin(10) * t1051 + t1489 * t916 + t1494 * t969;
t909 = pkin(11) * t1106 + t1042 * t1488 + t1493 * t988 + t1893;
t995 = t1104 * t1485 + t1483 * t1622;
t836 = -pkin(2) * t995 - t1483 * t909 + t1485 * t1542;
t851 = -t1489 * t969 + t1494 * t916 + (-t1483 * t995 - t1485 * t997) * pkin(10);
t942 = t1051 * t1495 - t1490 * t997;
t1554 = pkin(9) * t942 + t1490 * t851 + t1495 * t836;
t1014 = -pkin(3) * t1225 + pkin(11) * t1030;
t1526 = pkin(10) * t1013 + (-pkin(11) * t1489 - t1766) * t1029;
t940 = t1029 * t1485 + t1483 * t1637;
t856 = -pkin(2) * t940 - t1014 * t1483 + t1485 * t1526;
t857 = (-pkin(11) * t1494 + t1767) * t1029 + (-t1483 * t940 - t1485 * t941) * pkin(10);
t903 = t1013 * t1495 - t1490 * t941;
t1553 = pkin(9) * t903 + t1490 * t857 + t1495 * t856;
t1031 = -t1085 * t1490 + t1170 * t1495;
t1084 = t1193 * t1485 + t1483 * t1606;
t1012 = -pkin(11) * t1193 - t1029;
t1528 = pkin(10) * t1170 + t1012 * t1489 - t1193 * t1766;
t999 = pkin(3) * t1329 + pkin(11) * t1195 + t1030;
t892 = -pkin(2) * t1084 - t1483 * t999 + t1485 * t1528;
t924 = t1193 * t1767 + t1012 * t1494 + (-t1084 * t1483 - t1085 * t1485) * pkin(10);
t1549 = pkin(9) * t1031 + t1490 * t924 + t1495 * t892;
t1055 = -t1138 * t1490 + t1182 * t1495;
t1101 = pkin(3) * t1289 + pkin(11) * t1256 - t1740;
t1137 = t1255 * t1485 + t1483 * t1600;
t1066 = -pkin(3) * t1255 + t1135;
t1150 = -pkin(11) * t1255 + t1741;
t1534 = pkin(10) * t1182 + t1066 * t1494 + t1150 * t1489;
t932 = -pkin(2) * t1137 - t1101 * t1483 + t1485 * t1534;
t954 = -t1066 * t1489 + t1150 * t1494 + (-t1137 * t1483 - t1138 * t1485) * pkin(10);
t1548 = pkin(9) * t1055 + t1490 * t954 + t1495 * t932;
t1060 = -t1143 * t1490 + t1183 * t1495;
t1108 = pkin(3) * t1293 + pkin(11) * t1260 + t1741;
t1142 = t1259 * t1485 + t1483 * t1598;
t1069 = -pkin(3) * t1259 + t1136;
t1153 = -pkin(11) * t1259 + t1740;
t1533 = pkin(10) * t1183 + t1069 * t1494 + t1153 * t1489;
t935 = -pkin(2) * t1142 - t1108 * t1483 + t1485 * t1533;
t958 = -t1069 * t1489 + t1153 * t1494 + (-t1142 * t1483 - t1143 * t1485) * pkin(10);
t1547 = pkin(9) * t1060 + t1490 * t958 + t1495 * t935;
t1140 = -t1300 * t1485 + t1483 * t1601;
t1040 = (-t1140 * t1483 - t1141 * t1485) * pkin(10);
t1048 = -t1141 * t1490 + t1161 * t1495;
t1049 = -pkin(2) * t1140 + t1161 * t1760;
t1539 = pkin(9) * t1048 + t1040 * t1490 + t1049 * t1495;
t1241 = t1375 * t1485 + t1483 * t1587;
t1061 = (-t1241 * t1483 - t1242 * t1485) * pkin(10) - t1601;
t1532 = pkin(10) * t1283 + t1161;
t1065 = -pkin(2) * t1241 + t1485 * t1532;
t1176 = -t1242 * t1490 + t1283 * t1495;
t1538 = pkin(9) * t1176 + t1061 * t1490 + t1065 * t1495;
t1261 = t1350 * t1485 + t1483 * t1583;
t1103 = -pkin(2) * t1261 + t1251 * t1483 + t1485 * t1659;
t1144 = -t1735 + (-t1261 * t1483 - t1262 * t1485) * pkin(10);
t1224 = -t1262 * t1490 + t1323 * t1495;
t1537 = pkin(9) * t1224 + t1103 * t1495 + t1144 * t1490;
t1267 = t1353 * t1485 + t1483 * t1586;
t1110 = -pkin(2) * t1267 + t1252 * t1483 + t1485 * t1658;
t1149 = -t1734 + (-t1267 * t1483 - t1268 * t1485) * pkin(10);
t1233 = -t1268 * t1490 + t1331 * t1495;
t1536 = pkin(9) * t1233 + t1110 * t1495 + t1149 * t1490;
t1404 = t1440 * t1490 + t1441 * t1495;
t1535 = pkin(9) * t1404 + t1379;
t1438 = (t1700 * t1753 + t1694) * t1484;
t1479 = t1484 * t1480;
t1468 = t1491 * qJDD(1) + t1496 * t1771;
t1459 = t1695 * t1712;
t1458 = (t1481 - t1482) * t1712;
t1454 = -pkin(8) * t1468 + g(3) * t1496;
t1443 = t1695 * t1689;
t1435 = (-t1481 * t1475 * qJD(1) + t1495 * t1566) * t1484;
t1434 = -t1482 * t1689 - t1490 * t1657;
t1424 = t1456 * t1495 - t1716;
t1423 = -t1455 * t1490 + t1717;
t1418 = t1438 * t1703 + t1479 * t1678;
t1417 = (-t1479 * t1702 + (-t1473 + (-qJD(1) * t1713 + t1693) * t1484) * t1486) * t1495;
t1405 = -t1439 * t1490 + t1442 * t1495;
t1400 = t1442 * t1484 + t1486 * t1577;
t1399 = -t1441 * t1484 + t1486 * t1576;
t1398 = -t1440 * t1484 + t1486 * t1578;
t1397 = -t1442 * t1486 + t1484 * t1577;
t1395 = -t1438 * t1484 + t1486 * t1579;
t1394 = t1438 * t1486 + t1484 * t1579;
t1393 = -t1458 * t1484 + t1486 * t1581;
t1392 = t1459 * t1484 + t1486 * t1580;
t1391 = -t1459 * t1486 + t1484 * t1580;
t1369 = -t1491 * t1400 + t1425 * t1496;
t1368 = t1400 * t1496 + t1491 * t1425;
t1361 = -t1491 * t1395 + t1421 * t1496;
t1360 = t1395 * t1496 + t1491 * t1421;
t1357 = t1444 * t1484 + t1486 * t1582;
t1356 = -t1444 * t1486 + t1484 * t1582;
t1346 = t1437 * t1485 + t1483 * t1563;
t1345 = -t1491 * t1392 + t1404 * t1496;
t1344 = t1392 * t1496 + t1491 * t1404;
t1330 = -t1721 + (-t1397 * t1484 - t1400 * t1486) * pkin(9);
t1322 = -t1720 + (-t1394 * t1484 - t1395 * t1486) * pkin(9);
t1321 = -pkin(1) * t1397 + t1419 * t1484 + t1486 * t1660;
t1313 = -pkin(1) * t1394 + t1420 * t1484 + t1486 * t1661;
t1308 = t1390 * t1711 + (t1431 * t1485 + t1450 * t1710) * t1433;
t1306 = -t1483 * t1509 + (-t1433 * t1485 + t1450 * t1711) * t1431;
t1303 = -pkin(1) * t1356 + t1379 * t1762;
t1302 = -t1491 * t1357 + t1379 * t1496;
t1301 = t1357 * t1496 + t1491 * t1379;
t1299 = -pkin(1) * t1391 + t1486 * t1535;
t1296 = -t1347 * t1490 + t1370 * t1495;
t1295 = (-t1356 * t1484 - t1357 * t1486) * pkin(9);
t1294 = (-t1391 * t1484 - t1392 * t1486) * pkin(9) - t1582;
t1274 = t1483 * t1585 + t1485 * t1508;
t1273 = t1355 * t1485 + t1483 * t1584;
t1257 = t1402 * t1485 + t1483 * t1588;
t1254 = -t1309 * t1490 + t1349 * t1495;
t1253 = -t1307 * t1490 + t1348 * t1495;
t1238 = -t1346 * t1484 + t1486 * t1589;
t1237 = -t1276 * t1490 + t1342 * t1495;
t1236 = -t1275 * t1490 + t1341 * t1495;
t1234 = t1485 * t1319 + t1483 * t1506;
t1189 = -t1308 * t1484 + t1486 * t1590;
t1188 = -t1306 * t1484 + t1486 * t1591;
t1181 = -t1258 * t1490 + t1282 * t1495;
t1172 = t1286 * t1485 + t1483 * t1568;
t1171 = t1284 * t1485 + t1483 * t1569;
t1160 = -t1235 * t1490 + t1281 * t1495;
t1159 = -t1274 * t1484 + t1486 * t1592;
t1158 = -t1273 * t1484 + t1486 * t1593;
t1157 = -t1267 * t1484 + t1486 * t1596;
t1156 = t1267 * t1486 + t1484 * t1596;
t1152 = -t1261 * t1484 + t1486 * t1597;
t1151 = t1261 * t1486 + t1484 * t1597;
t1146 = t1270 * t1485 + t1483 * t1594;
t1145 = t1269 * t1485 + t1483 * t1595;
t1139 = -t1257 * t1484 + t1486 * t1599;
t1125 = -t1241 * t1484 + t1486 * t1602;
t1124 = t1241 * t1486 + t1484 * t1602;
t1112 = -t1174 * t1490 + t1240 * t1495;
t1111 = -t1173 * t1490 + t1239 * t1495;
t1109 = pkin(2) * t1268 - t1252 * t1485 + t1483 * t1658;
t1102 = pkin(2) * t1262 - t1251 * t1485 + t1483 * t1659;
t1095 = t1192 * t1485 + t1483 * t1607;
t1094 = -t1234 * t1484 + t1486 * t1603;
t1083 = -t1491 * t1157 + t1233 * t1496;
t1082 = t1157 * t1496 + t1491 * t1233;
t1068 = -t1491 * t1152 + t1224 * t1496;
t1067 = t1152 * t1496 + t1491 * t1224;
t1064 = pkin(2) * t1242 + t1483 * t1532;
t1063 = -t1148 * t1490 + t1191 * t1495;
t1062 = -t1147 * t1490 + t1190 * t1495;
t1054 = -t1491 * t1125 + t1176 * t1496;
t1053 = t1125 * t1496 + t1491 * t1176;
t1050 = pkin(2) * t1141 + t1161 * t1761;
t1047 = -t1172 * t1484 + t1486 * t1608;
t1046 = -t1171 * t1484 + t1486 * t1609;
t1043 = -t1096 * t1490 + t1175 * t1495;
t1023 = -t1146 * t1484 + t1486 * t1612;
t1022 = -t1145 * t1484 + t1486 * t1613;
t1016 = -t1142 * t1484 + t1486 * t1614;
t1015 = t1142 * t1486 + t1484 * t1614;
t1011 = -t1137 * t1484 + t1486 * t1616;
t1010 = t1137 * t1486 + t1484 * t1616;
t1001 = -t1140 * t1484 + t1486 * t1615;
t1000 = t1140 * t1486 + t1484 * t1615;
t984 = -t1095 * t1484 + t1486 * t1625;
t977 = -t1084 * t1484 + t1486 * t1628;
t976 = t1084 * t1486 + t1484 * t1628;
t968 = -t1110 * t1490 + t1149 * t1495 + (-t1156 * t1484 - t1157 * t1486) * pkin(9);
t966 = -t1103 * t1490 + t1144 * t1495 + (-t1151 * t1484 - t1152 * t1486) * pkin(9);
t961 = -t1491 * t1016 + t1060 * t1496;
t960 = t1016 * t1496 + t1491 * t1060;
t953 = -t1491 * t1011 + t1055 * t1496;
t952 = t1011 * t1496 + t1491 * t1055;
t947 = -pkin(1) * t1156 - t1109 * t1484 + t1486 * t1536;
t946 = -t1491 * t1001 + t1048 * t1496;
t945 = t1001 * t1496 + t1491 * t1048;
t944 = -pkin(1) * t1151 - t1102 * t1484 + t1486 * t1537;
t934 = pkin(2) * t1143 + t1108 * t1485 + t1483 * t1533;
t933 = t1061 * t1495 - t1065 * t1490 + (-t1124 * t1484 - t1125 * t1486) * pkin(9);
t931 = pkin(2) * t1138 + t1101 * t1485 + t1483 * t1534;
t926 = t1031 * t1496 - t1491 * t977;
t925 = t1491 * t1031 + t1496 * t977;
t915 = -pkin(1) * t1124 - t1064 * t1484 + t1486 * t1538;
t902 = -t1484 * t996 + t1486 * t1643;
t901 = -t1484 * t995 + t1486 * t1644;
t900 = t1484 * t1643 + t1486 * t996;
t899 = t1484 * t1644 + t1486 * t995;
t896 = -t1484 * t991 + t1486 * t1645;
t895 = -t1484 * t990 + t1486 * t1646;
t894 = t1484 * t1645 + t1486 * t991;
t893 = t1484 * t1646 + t1486 * t990;
t891 = pkin(2) * t1085 + t1483 * t1528 + t1485 * t999;
t887 = t1040 * t1495 - t1049 * t1490 + (-t1000 * t1484 - t1001 * t1486) * pkin(9);
t880 = -pkin(1) * t1000 - t1050 * t1484 + t1486 * t1539;
t869 = -t1484 * t940 + t1486 * t1651;
t868 = t1484 * t1651 + t1486 * t940;
t867 = -t1491 * t902 + t1496 * t943;
t866 = -t1491 * t901 + t1496 * t942;
t865 = t1491 * t943 + t1496 * t902;
t864 = t1491 * t942 + t1496 * t901;
t861 = -t1491 * t896 + t1496 * t939;
t860 = -t1491 * t895 + t1496 * t938;
t859 = t1491 * t939 + t1496 * t896;
t858 = t1491 * t938 + t1496 * t895;
t855 = pkin(2) * t941 + t1014 * t1485 + t1483 * t1526;
t854 = -t1490 * t935 + t1495 * t958 + (-t1015 * t1484 - t1016 * t1486) * pkin(9);
t852 = -t1490 * t932 + t1495 * t954 + (-t1010 * t1484 - t1011 * t1486) * pkin(9);
t842 = -pkin(1) * t1015 - t1484 * t934 + t1486 * t1547;
t841 = -pkin(1) * t1010 - t1484 * t931 + t1486 * t1548;
t840 = -t1491 * t869 + t1496 * t903;
t839 = t1491 * t903 + t1496 * t869;
t838 = -t1490 * t892 + t1495 * t924 + (-t1484 * t976 - t1486 * t977) * pkin(9);
t835 = pkin(2) * t997 + t1483 * t1542 + t1485 * t909;
t831 = pkin(2) * t993 + t1483 * t1543 + t1485 * t908;
t826 = -pkin(1) * t976 - t1484 * t891 + t1486 * t1549;
t822 = pkin(2) * t998 + t1483 * t1541 + t1485 * t875;
t820 = pkin(2) * t992 + t1483 * t1544 + t1485 * t874;
t817 = t1483 * t1545 + t1485 * t885 + t1921;
t813 = t1483 * t1546 + t1485 * t863 + t1921;
t812 = -t1484 * t843 + t1486 * t1653;
t811 = t1484 * t1653 + t1486 * t843;
t810 = -t1490 * t836 + t1495 * t851 + (-t1484 * t899 - t1486 * t901) * pkin(9);
t809 = -t1490 * t856 + t1495 * t857 + (-t1484 * t868 - t1486 * t869) * pkin(9);
t808 = -t1490 * t832 + t1495 * t849 + (-t1484 * t894 - t1486 * t896) * pkin(9);
t807 = -t1484 * t828 + t1486 * t1654;
t806 = t1484 * t1654 + t1486 * t828;
t805 = -pkin(1) * t868 - t1484 * t855 + t1486 * t1553;
t803 = -t1490 * t823 + t1495 * t834 + (-t1484 * t900 - t1486 * t902) * pkin(9);
t802 = -t1490 * t821 + t1495 * t833 + (-t1484 * t893 - t1486 * t895) * pkin(9);
t801 = -pkin(1) * t899 - t1484 * t835 + t1486 * t1554;
t800 = -pkin(1) * t894 - t1484 * t831 + t1486 * t1555;
t799 = -t1491 * t812 + t1496 * t824;
t798 = t1491 * t824 + t1496 * t812;
t797 = -t1490 * t818 + t1495 * t827 + t1931;
t795 = pkin(2) * t844 + t1483 * t1551 + t1485 * t837;
t794 = -t1490 * t814 + t1495 * t825 + t1931;
t793 = -pkin(1) * t900 - t1484 * t822 + t1486 * t1556;
t792 = -pkin(1) * t893 - t1484 * t820 + t1486 * t1557;
t791 = -t1491 * t807 + t1496 * t815;
t790 = t1491 * t815 + t1496 * t807;
t788 = -t1484 * t817 + t1486 * t1558 - t1940;
t787 = -t1484 * t813 + t1486 * t1559 - t1940;
t785 = pkin(2) * t829 + t1483 * t1552 + t1485 * t816;
t784 = -t1490 * t796 + t1495 * t804 + (-t1484 * t811 - t1486 * t812) * pkin(9);
t783 = -pkin(1) * t811 - t1484 * t795 + t1486 * t1560;
t782 = -t1490 * t786 + t1495 * t789 + (-t1484 * t806 - t1486 * t807) * pkin(9);
t781 = -pkin(1) * t806 - t1484 * t785 + t1486 * t1561;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1468, -t1469, 0, t1447, 0, 0, 0, 0, 0, 0, t1369, t1361, t1345, t1302, 0, 0, 0, 0, 0, 0, t1068, t1083, t1054, t946, 0, 0, 0, 0, 0, 0, t953, t961, t926, t840, 0, 0, 0, 0, 0, 0, t861, t866, t1934, t799, 0, 0, 0, 0, 0, 0, t867, t1934, t860, t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1469, -t1468, 0, t1446, 0, 0, 0, 0, 0, 0, t1368, t1360, t1344, t1301, 0, 0, 0, 0, 0, 0, t1067, t1082, t1053, t945, 0, 0, 0, 0, 0, 0, t952, t960, t925, t839, 0, 0, 0, 0, 0, 0, t859, t864, t1932, t798, 0, 0, 0, 0, 0, 0, t865, t1932, t858, t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1397, t1394, t1391, t1356, 0, 0, 0, 0, 0, 0, t1151, t1156, t1124, t1000, 0, 0, 0, 0, 0, 0, t1010, t1015, t976, t868, 0, 0, 0, 0, 0, 0, t894, t899, t1925, t811, 0, 0, 0, 0, 0, 0, t900, t1925, t893, t806; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1469, 0, -t1468, 0, t1666, -t1454, -t1446, -pkin(8) * t1446, -t1491 * t1418 + t1435 * t1496, -t1491 * t1393 + t1405 * t1496, -t1491 * t1398 + t1423 * t1496, -t1491 * t1417 + t1434 * t1496, -t1491 * t1399 + t1424 * t1496, t1496 * t1443 + t1491 * t1574, -pkin(8) * t1368 - t1491 * t1321 + t1330 * t1496, -pkin(8) * t1360 - t1491 * t1313 + t1322 * t1496, -pkin(8) * t1344 + t1294 * t1496 - t1491 * t1299, -pkin(8) * t1301 + t1295 * t1496 - t1491 * t1303, -t1491 * t1189 + t1254 * t1496, -t1491 * t1139 + t1181 * t1496, -t1491 * t1158 + t1236 * t1496, -t1491 * t1188 + t1253 * t1496, -t1491 * t1159 + t1237 * t1496, -t1491 * t1238 + t1296 * t1496, -pkin(8) * t1067 - t1491 * t944 + t1496 * t966, -pkin(8) * t1082 - t1491 * t947 + t1496 * t968, -pkin(8) * t1053 - t1491 * t915 + t1496 * t933, -pkin(8) * t945 - t1491 * t880 + t1496 * t887, -t1491 * t1047 + t1112 * t1496, t1043 * t1496 - t1491 * t984, -t1491 * t1022 + t1062 * t1496, -t1491 * t1046 + t1111 * t1496, -t1491 * t1023 + t1063 * t1496, -t1491 * t1094 + t1160 * t1496, -pkin(8) * t952 - t1491 * t841 + t1496 * t852, -pkin(8) * t960 - t1491 * t842 + t1496 * t854, -pkin(8) * t925 - t1491 * t826 + t1496 * t838, -pkin(8) * t839 - t1491 * t805 + t1496 * t809, t1848, -t1956, t1935, t1896, -t1957, t1897, -pkin(8) * t859 - t1491 * t800 + t1496 * t808, -pkin(8) * t864 - t1491 * t801 + t1496 * t810, -t1491 * t788 + t1496 * t797 - t1943, -pkin(8) * t798 - t1491 * t783 + t1496 * t784, t1848, t1935, t1956, t1897, t1957, t1896, -pkin(8) * t865 - t1491 * t793 + t1496 * t803, -t1491 * t787 + t1496 * t794 - t1943, -pkin(8) * t858 - t1491 * t792 + t1496 * t802, -pkin(8) * t790 - t1491 * t781 + t1496 * t782; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1468, 0, t1469, 0, t1454, t1666, t1447, pkin(8) * t1447, t1418 * t1496 + t1491 * t1435, t1393 * t1496 + t1491 * t1405, t1398 * t1496 + t1491 * t1423, t1417 * t1496 + t1491 * t1434, t1399 * t1496 + t1491 * t1424, t1491 * t1443 - t1496 * t1574, pkin(8) * t1369 + t1321 * t1496 + t1491 * t1330, pkin(8) * t1361 + t1313 * t1496 + t1491 * t1322, pkin(8) * t1345 + t1491 * t1294 + t1299 * t1496, pkin(8) * t1302 + t1491 * t1295 + t1303 * t1496, t1189 * t1496 + t1491 * t1254, t1139 * t1496 + t1491 * t1181, t1158 * t1496 + t1491 * t1236, t1188 * t1496 + t1491 * t1253, t1159 * t1496 + t1491 * t1237, t1238 * t1496 + t1491 * t1296, pkin(8) * t1068 + t1491 * t966 + t1496 * t944, pkin(8) * t1083 + t1491 * t968 + t1496 * t947, pkin(8) * t1054 + t1491 * t933 + t1496 * t915, pkin(8) * t946 + t1491 * t887 + t1496 * t880, t1047 * t1496 + t1491 * t1112, t1491 * t1043 + t1496 * t984, t1022 * t1496 + t1491 * t1062, t1046 * t1496 + t1491 * t1111, t1023 * t1496 + t1491 * t1063, t1094 * t1496 + t1491 * t1160, pkin(8) * t953 + t1491 * t852 + t1496 * t841, pkin(8) * t961 + t1491 * t854 + t1496 * t842, pkin(8) * t926 + t1491 * t838 + t1496 * t826, pkin(8) * t840 + t1491 * t809 + t1496 * t805, t1843, t1954, t1933, t1894, t1955, t1895, pkin(8) * t861 + t1491 * t808 + t1496 * t800, pkin(8) * t866 + t1491 * t810 + t1496 * t801, t1491 * t797 + t1496 * t788 + t1942, pkin(8) * t799 + t1491 * t784 + t1496 * t783, t1843, t1933, -t1954, t1895, -t1955, t1894, pkin(8) * t867 + t1491 * t803 + t1496 * t793, t1491 * t794 + t1496 * t787 + t1942, pkin(8) * t860 + t1491 * t802 + t1496 * t792, pkin(8) * t791 + t1491 * t782 + t1496 * t781; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1471, t1472, 0, 0, (t1694 + (qJD(2) - t1675) * t1753) * t1792, t1458 * t1486 + t1484 * t1581, t1440 * t1486 + t1484 * t1578, (qJD(1) * t1675 * t1792 + t1484 * t1657) * t1495, t1441 * t1486 + t1484 * t1576, t1486 * t1672, pkin(1) * t1400 - t1419 * t1486 + t1484 * t1660, pkin(1) * t1395 - t1420 * t1486 + t1484 * t1661, pkin(1) * t1392 + t1484 * t1535, pkin(1) * t1357 + t1379 * t1763, t1308 * t1486 + t1484 * t1590, t1257 * t1486 + t1484 * t1599, t1273 * t1486 + t1484 * t1593, t1306 * t1486 + t1484 * t1591, t1274 * t1486 + t1484 * t1592, t1346 * t1486 + t1484 * t1589, pkin(1) * t1152 + t1102 * t1486 + t1484 * t1537, pkin(1) * t1157 + t1109 * t1486 + t1484 * t1536, pkin(1) * t1125 + t1064 * t1486 + t1484 * t1538, pkin(1) * t1001 + t1050 * t1486 + t1484 * t1539, t1172 * t1486 + t1484 * t1608, t1095 * t1486 + t1484 * t1625, t1145 * t1486 + t1484 * t1613, t1171 * t1486 + t1484 * t1609, t1146 * t1486 + t1484 * t1612, t1234 * t1486 + t1484 * t1603, pkin(1) * t1011 + t1484 * t1548 + t1486 * t931, pkin(1) * t1016 + t1484 * t1547 + t1486 * t934, pkin(1) * t977 + t1484 * t1549 + t1486 * t891, pkin(1) * t869 + t1484 * t1553 + t1486 * t855, t1820, t1948, t1924, t1872, t1949, t1871, pkin(1) * t896 + t1484 * t1555 + t1486 * t831, pkin(1) * t901 + t1484 * t1554 + t1486 * t835, t1484 * t1558 + t1486 * t817 + t1941, pkin(1) * t812 + t1484 * t1560 + t1486 * t795, t1820, t1924, -t1948, t1871, -t1949, t1872, pkin(1) * t902 + t1484 * t1556 + t1486 * t822, t1484 * t1559 + t1486 * t813 + t1941, pkin(1) * t895 + t1484 * t1557 + t1486 * t820, pkin(1) * t807 + t1484 * t1561 + t1486 * t785;];
tauB_reg  = t1;
