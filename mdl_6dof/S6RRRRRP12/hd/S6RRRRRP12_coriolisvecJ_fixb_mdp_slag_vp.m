% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRP12_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRP12_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:21:23
% EndTime: 2019-03-10 03:22:12
% DurationCPUTime: 30.52s
% Computational Cost: add. (30560->852), mult. (90874->1151), div. (0->0), fcn. (74945->12), ass. (0->327)
t824 = sin(pkin(7));
t828 = sin(qJ(3));
t1003 = t824 * t828;
t1022 = cos(qJ(3));
t832 = cos(qJ(2));
t1018 = cos(pkin(6));
t951 = pkin(1) * t1018;
t923 = t832 * t951;
t811 = qJD(1) * t923;
t829 = sin(qJ(2));
t1017 = cos(pkin(7));
t825 = sin(pkin(6));
t886 = t825 * (-pkin(10) * t1017 - pkin(9));
t872 = t829 * t886;
t743 = qJD(1) * t872 + t811;
t924 = t829 * t951;
t848 = t832 * t886 - t924;
t744 = t848 * qJD(1);
t871 = (-pkin(10) * t824 * t832 + pkin(2) * t829) * t825;
t776 = qJD(1) * t871;
t915 = t1017 * t1022;
t873 = pkin(2) * t915 - pkin(10) * t1003;
t939 = t828 * t1017;
t1053 = t873 * qJD(3) - t776 * t1003 - t1022 * t743 - t744 * t939;
t865 = t1022 * t832 - t829 * t939;
t970 = qJD(1) * t825;
t764 = t865 * t970;
t942 = t1022 * qJD(3);
t919 = t824 * t942;
t1030 = t919 - t764;
t683 = t1017 * t776 - t744 * t824;
t863 = t828 * t832 + t829 * t915;
t763 = t863 * t970;
t1052 = pkin(3) * t763 - pkin(11) * t764 + t683 - (pkin(3) * t828 - pkin(11) * t1022) * t824 * qJD(3);
t947 = t829 * t970;
t922 = t824 * t947;
t1051 = pkin(11) * t922 - t1053;
t827 = sin(qJ(4));
t831 = cos(qJ(4));
t788 = t1003 * t827 - t1017 * t831;
t1033 = -qJD(4) * t788 + t1030 * t831 - t827 * t922;
t789 = t1003 * t831 + t1017 * t827;
t977 = qJD(4) * t789 + t1030 * t827 + t831 * t922;
t950 = t824 * t1022;
t973 = pkin(2) * t939 + pkin(10) * t950;
t1050 = t973 * qJD(3) - t828 * t743 + t744 * t915;
t968 = qJD(3) * t828;
t945 = t824 * t968;
t1029 = t945 - t763;
t921 = t828 * t947;
t936 = t1018 * qJD(1);
t896 = t936 + qJD(2);
t876 = t824 * t896;
t891 = t832 * t915;
t884 = t825 * t891;
t974 = -qJD(1) * t884 - t1022 * t876;
t710 = t921 + t974;
t869 = qJD(4) + t710;
t949 = t1022 * t776;
t1034 = -(-pkin(3) * t947 - t949) * t824 + t1050;
t780 = pkin(11) * t1017 + t973;
t781 = (-pkin(3) * t1022 - pkin(11) * t828 - pkin(2)) * t824;
t964 = qJD(4) * t831;
t966 = qJD(4) * t827;
t1049 = t1051 * t831 + t1052 * t827 + t780 * t966 - t781 * t964;
t1045 = -pkin(12) * t1029 + t1049;
t1001 = t825 * t832;
t867 = pkin(9) * t1001 + t924;
t938 = t832 * t1017;
t916 = t825 * t938;
t705 = t867 * qJD(1) + (qJD(1) * t916 + t876) * pkin(10);
t851 = pkin(2) * t1018 + t872;
t709 = qJD(2) * pkin(2) + qJD(1) * t851 + t811;
t1002 = t824 * t829;
t772 = (-pkin(2) * t832 - pkin(10) * t1002 - pkin(1)) * t825;
t757 = qJD(1) * t772;
t640 = t757 * t1003 + t1022 * t705 + t709 * t939;
t1048 = t640 - t869 * (pkin(4) * t827 - pkin(12) * t831);
t1047 = -t977 * pkin(4) + pkin(12) * t1033 - t1034;
t1046 = pkin(11) * t966;
t826 = sin(qJ(5));
t830 = cos(qJ(5));
t749 = t826 * t789 + t830 * t950;
t980 = qJD(5) * t749 - t1029 * t826 - t1033 * t830;
t925 = t826 * t950;
t962 = qJD(5) * t830;
t979 = -qJD(5) * t925 - t1029 * t830 + t1033 * t826 + t789 * t962;
t864 = t1022 * t829 + t828 * t938;
t854 = t864 * t825;
t875 = t828 * t896;
t712 = qJD(1) * t854 + t824 * t875;
t954 = t824 * t1001;
t958 = qJD(1) * t954 - qJD(3);
t852 = -t1017 * t896 + t958;
t673 = t827 * t712 + t831 * t852;
t957 = qJD(1) * qJD(2);
t940 = t825 * t957;
t918 = t829 * t940;
t898 = t824 * t918;
t893 = t1022 * t940;
t676 = -qJD(2) * t1017 * t921 - qJD(3) * t710 + t832 * t893;
t996 = t831 * t676;
t859 = t827 * t898 + t996;
t837 = -qJD(4) * t673 + t859;
t1042 = qJD(5) * t869 + t837;
t1041 = t1051 * t827 - t1052 * t831 - t780 * t964 - t781 * t966;
t672 = qJD(5) + t673;
t1006 = t710 * t827;
t1040 = t1006 + t966;
t853 = t864 * qJD(3);
t1039 = qJD(2) * t863 + t853;
t840 = t1039 * t825;
t868 = qJD(3) * t875;
t860 = t824 * t868;
t835 = qJD(1) * t840 + t860;
t910 = qJD(2) * t936;
t894 = pkin(1) * t910;
t809 = t832 * t894;
t866 = qJD(2) * t872;
t726 = qJD(1) * t866 + t809;
t746 = t848 * qJD(2);
t727 = qJD(1) * t746;
t777 = qJD(2) * t871;
t768 = qJD(1) * t777;
t887 = qJD(3) * t915;
t862 = -t768 * t1003 - t1022 * t726 + t705 * t968 - t709 * t887 - t727 * t939 - t757 * t919;
t592 = pkin(11) * t898 - t862;
t753 = t1017 * t768;
t839 = t1039 * t970;
t608 = -t676 * pkin(11) + t753 + (pkin(3) * t868 - t727) * t824 + pkin(3) * t839;
t669 = t1017 * t757 - t709 * t824;
t619 = pkin(3) * t710 - pkin(11) * t712 + t669;
t623 = -pkin(11) * t852 + t640;
t926 = t827 * t592 - t831 * t608 + t619 * t966 + t623 * t964;
t536 = -pkin(4) * t835 + t926;
t821 = t825 ^ 2;
t1038 = -0.2e1 * t821 * t957;
t1036 = MDP(5) * (t829 ^ 2 - t832 ^ 2);
t937 = t1018 * t824;
t892 = t1022 * t937;
t999 = t828 * t829;
t735 = t825 * t999 - t884 - t892;
t742 = t923 + t851;
t679 = t1017 * t772 - t742 * t824;
t917 = t828 * t937;
t736 = t917 + t854;
t635 = pkin(3) * t735 - pkin(11) * t736 + t679;
t907 = t1018 * t1017;
t787 = -t907 + t954;
t729 = (t916 + t937) * pkin(10) + t867;
t953 = t772 * t1003 + t1022 * t729 + t742 * t939;
t642 = -pkin(11) * t787 + t953;
t983 = t827 * t635 + t831 * t642;
t582 = pkin(12) * t735 + t983;
t849 = -t828 * t729 + t742 * t915 + t772 * t950;
t641 = t787 * pkin(3) - t849;
t688 = t736 * t827 + t787 * t831;
t689 = t736 * t831 - t787 * t827;
t599 = t688 * pkin(4) - t689 * pkin(12) + t641;
t1035 = t830 * t582 + t826 * t599;
t981 = -pkin(4) * t1029 - t1041;
t779 = -pkin(3) * t1017 - t873;
t690 = t788 * pkin(4) - t789 * pkin(12) + t779;
t976 = t831 * t780 + t827 * t781;
t692 = -pkin(12) * t950 + t976;
t978 = t826 * t690 + t830 * t692;
t1032 = qJD(2) * t763 + qJD(3) * t712;
t836 = -t860 - t839;
t963 = qJD(5) * t826;
t1031 = t1045 * t830 + t1047 * t826 - t690 * t962 + t692 * t963;
t639 = -t828 * t705 + t709 * t915 + t757 * t950;
t663 = pkin(3) * t712 + pkin(11) * t710;
t984 = t831 * t639 + t827 * t663;
t591 = pkin(12) * t712 + t984;
t808 = -pkin(4) * t831 - pkin(12) * t827 - pkin(3);
t1028 = t1048 * t826 + t830 * t591 - t808 * t962;
t675 = t831 * t712 - t827 * t852;
t931 = t827 * t676 - t831 * t898;
t614 = t675 * qJD(4) + t931;
t681 = qJD(3) * t917 + t840;
t812 = qJD(2) * t923;
t745 = t812 + t866;
t861 = t777 * t1003 + t1022 * t745 - t729 * t968 + t742 * t887 + t746 * t939 + t772 * t919;
t969 = qJD(2) * t829;
t946 = t825 * t969;
t920 = t824 * t946;
t602 = pkin(11) * t920 + t861;
t682 = qJD(3) * t892 + ((t891 - t999) * qJD(3) + t865 * qJD(2)) * t825;
t684 = t1017 * t777 - t746 * t824;
t612 = pkin(3) * t681 - pkin(11) * t682 + t684;
t880 = t831 * t602 + t827 * t612 + t635 * t964 - t642 * t966;
t542 = pkin(12) * t681 + t880;
t935 = t1017 * qJD(3);
t914 = t828 * t935;
t855 = -t729 * t942 - t742 * t914 - t828 * t745 + t746 * t915 - t772 * t945;
t948 = t1022 * t777;
t603 = (-pkin(3) * t946 - t948) * t824 - t855;
t628 = qJD(4) * t689 + t682 * t827 - t831 * t920;
t629 = -qJD(4) * t688 + t682 * t831 + t827 * t920;
t560 = t628 * pkin(4) - t629 * pkin(12) + t603;
t1026 = -qJD(5) * t1035 - t542 * t826 + t560 * t830;
t1019 = pkin(12) * t614;
t573 = t831 * t619 - t827 * t623;
t569 = -pkin(4) * t869 - t573;
t643 = t675 * t826 - t830 * t869;
t645 = t830 * t675 + t826 * t869;
t546 = t643 * pkin(5) - t645 * qJ(6) + t569;
t1025 = t546 * t672 - t1019;
t1024 = t645 ^ 2;
t1023 = t672 ^ 2;
t833 = qJD(1) ^ 2;
t1021 = pkin(5) * t614;
t1020 = pkin(11) * t831;
t1016 = qJ(6) * t614;
t567 = -t1042 * t830 + t675 * t963 - t826 * t835;
t568 = t1042 * t826 + t675 * t962 - t830 * t835;
t531 = t568 * pkin(5) + t567 * qJ(6) - t645 * qJD(6) + t536;
t1015 = t531 * t826;
t1014 = t531 * t830;
t1013 = t536 * t826;
t574 = t827 * t619 + t831 * t623;
t570 = pkin(12) * t869 + t574;
t622 = pkin(3) * t852 - t639;
t579 = t673 * pkin(4) - t675 * pkin(12) + t622;
t545 = t570 * t830 + t579 * t826;
t541 = qJ(6) * t672 + t545;
t1012 = t541 * t672;
t1011 = t545 * t672;
t1010 = t567 * t826;
t1009 = t643 * t672;
t1008 = t645 * t643;
t1007 = t645 * t672;
t1005 = t710 * t831;
t1004 = t821 * t833;
t1000 = t826 * t614;
t998 = t830 * t614;
t997 = t830 * t831;
t961 = qJD(5) * t831;
t965 = qJD(4) * t830;
t995 = qJD(6) * t831 - (-t826 * t961 - t827 * t965) * pkin(11) + t1028 - t1040 * qJ(6);
t994 = -t808 * t963 + (t591 + t1046) * t826 + (-pkin(11) * t961 - t1048) * t830 + t1040 * pkin(5);
t993 = -qJ(6) * t977 - qJD(6) * t788 + t1031;
t992 = pkin(5) * t977 - qJD(5) * t978 + t1045 * t826 - t1047 * t830;
t905 = pkin(5) * t826 - qJ(6) * t830;
t991 = qJD(6) * t826 - t672 * t905 + t574;
t934 = -t827 * t639 + t663 * t831;
t590 = -pkin(4) * t712 - t934;
t659 = -t1005 * t826 - t830 * t712;
t660 = -t710 * t997 + t712 * t826;
t890 = pkin(11) + t905;
t906 = pkin(5) * t830 + qJ(6) * t826;
t990 = pkin(5) * t659 - qJ(6) * t660 + t590 - (qJD(5) * t906 - qJD(6) * t830) * t827 - t890 * t964;
t750 = t830 * t789 - t925;
t989 = -pkin(5) * t979 - qJ(6) * t980 + qJD(6) * t750 - t981;
t625 = pkin(4) * t675 + pkin(12) * t673;
t988 = t830 * t573 + t826 * t625;
t972 = pkin(11) * t997 + t826 * t808;
t967 = qJD(4) * t826;
t960 = t622 * qJD(4);
t544 = -t570 * t826 + t579 * t830;
t959 = qJD(6) - t544;
t956 = pkin(1) * t1004;
t955 = pkin(12) * t963;
t944 = t672 * t963;
t943 = qJD(4) + t974;
t933 = t635 * t831 - t827 * t642;
t930 = -t827 * t780 + t781 * t831;
t929 = t672 * t830;
t928 = t821 * t832 * t829 * MDP(4);
t881 = -t831 * t592 - t827 * t608 - t619 * t964 + t623 * t966;
t535 = pkin(12) * t835 - t881;
t598 = -t705 * t942 - t709 * t914 - t828 * t726 + t727 * t915 - t757 * t945 + t768 * t950;
t593 = -pkin(3) * t898 - t598;
t551 = t614 * pkin(4) - pkin(12) * t837 + t593;
t927 = t826 * t535 - t830 * t551 + t570 * t962 + t579 * t963;
t912 = pkin(1) * t1038;
t691 = pkin(4) * t950 - t930;
t909 = t826 * t964 - t659;
t908 = t830 * t964 - t660;
t540 = -pkin(5) * t672 + t959;
t904 = t540 * t830 - t541 * t826;
t901 = -t582 * t826 + t599 * t830;
t658 = t689 * t830 + t735 * t826;
t657 = t689 * t826 - t735 * t830;
t900 = t690 * t830 - t692 * t826;
t897 = MDP(15) * t922;
t889 = -t827 * t602 + t612 * t831 - t635 * t966 - t642 * t964;
t581 = -pkin(4) * t735 - t933;
t885 = -t672 * t962 - t1000;
t883 = t569 * t672 - t1019;
t882 = t546 * t645 + t927;
t527 = t830 * t535 + t826 * t551 - t570 * t963 + t579 * t962;
t878 = t830 * t542 + t826 * t560 - t582 * t963 + t599 * t962;
t874 = t832 * (t935 + qJD(2));
t543 = -pkin(4) * t681 - t889;
t858 = qJD(4) * t869;
t856 = qJD(2) * t915 + t942;
t850 = t829 * t856;
t846 = qJD(3) * t852;
t845 = qJD(4) * t852;
t844 = t896 * t867;
t842 = t710 * t869 + t858;
t834 = t824 * t835;
t820 = t824 ^ 2;
t804 = -pkin(4) - t906;
t782 = t890 * t827;
t760 = -t808 * t830 + (pkin(11) * t826 + pkin(5)) * t831;
t759 = -qJ(6) * t831 + t972;
t677 = -t824 * t727 + t753;
t647 = pkin(5) * t749 - qJ(6) * t750 + t691;
t627 = -pkin(5) * t788 - t900;
t626 = qJ(6) * t788 + t978;
t596 = pkin(5) * t645 + qJ(6) * t643;
t576 = -qJD(5) * t657 + t629 * t830 + t681 * t826;
t575 = qJD(5) * t658 + t629 * t826 - t681 * t830;
t561 = pkin(5) * t657 - qJ(6) * t658 + t581;
t554 = -pkin(5) * t675 + t573 * t826 - t625 * t830;
t553 = qJ(6) * t675 + t988;
t552 = -t567 + t1009;
t548 = -pkin(5) * t688 - t901;
t547 = qJ(6) * t688 + t1035;
t532 = pkin(5) * t575 - qJ(6) * t576 - qJD(6) * t658 + t543;
t530 = -pkin(5) * t628 - t1026;
t529 = qJ(6) * t628 + qJD(6) * t688 + t878;
t526 = t927 - t1021;
t525 = qJD(6) * t672 + t1016 + t527;
t1 = [(t1026 * t672 + t536 * t657 + t543 * t643 + t544 * t628 + t581 * t568 + t569 * t575 + t901 * t614 - t688 * t927) * MDP(30) + (-t574 * t681 + t593 * t689 + t603 * t675 + t622 * t629 + t641 * t837 + t735 * t881 + t836 * t983 - t869 * t880) * MDP(24) + (t573 * t681 + t593 * t688 + t603 * t673 + t641 * t614 + t622 * t628 - t735 * t926 + t835 * t933 + t869 * t889) * MDP(23) + (t861 * t852 - t862 * t787 + t684 * t712 + t679 * t676 + t677 * t736 + t669 * t682 + (-qJD(1) * t953 - t640) * t920) * MDP(17) + (-t1035 * t614 - t527 * t688 + t536 * t658 + t543 * t645 - t545 * t628 - t581 * t567 + t569 * t576 - t672 * t878) * MDP(31) + 0.2e1 * t928 * t957 + (t735 * t860 + t943 * t681 + (t735 * t850 + (t829 * t681 + t735 * t874) * t828) * t970) * MDP(22) + (-t628 * t943 - t688 * t860 - t614 * t735 - t673 * t681 + (-t688 * t850 + (-t628 * t829 - t688 * t874) * t828) * t970) * MDP(21) + (t832 * t912 - (-pkin(9) * t946 + t812) * t896 - (-pkin(9) * t918 + t809) * t1018) * MDP(10) + (MDP(6) * qJD(2) * t1001 - MDP(7) * t946) * (0.2e1 * t936 + qJD(2)) + (-qJD(2) * t844 + t829 * t912 - t867 * t910) * MDP(9) + (t629 * t943 + t689 * t860 + (-t712 * t966 - t831 * t845 + t996) * t735 + t675 * t681 + (t689 * t828 * t874 + (t827 * t824 * qJD(2) * t735 + t629 * t828 + t689 * t856) * t829) * t970) * MDP(20) + (t681 * t852 + t787 * t860 + (-t710 * t824 * t969 + (t787 * t853 + (-t1002 * t735 + t787 * t863) * qJD(2)) * qJD(1)) * t825) * MDP(14) + (-(t824 * t948 + t855) * t852 + t849 * t898 - t598 * t787 + t639 * t920 + t684 * t710 + t679 * t835 + t677 * t735 + t669 * t681) * MDP(16) + (-t682 * t852 - t676 * t787 + (qJD(1) * t736 + t712) * t920) * MDP(13) + (t676 * t736 + t682 * t712) * MDP(11) + (-t568 * t688 - t575 * t672 - t614 * t657 - t628 * t643) * MDP(28) + (-t567 * t688 + t576 * t672 + t614 * t658 + t628 * t645) * MDP(27) + (t525 * t688 + t529 * t672 - t531 * t658 - t532 * t645 + t541 * t628 - t546 * t576 + t547 * t614 + t561 * t567) * MDP(34) + (t614 * t688 + t628 * t672) * MDP(29) + (-t526 * t688 - t530 * t672 + t531 * t657 + t532 * t643 - t540 * t628 + t546 * t575 - t548 * t614 + t561 * t568) * MDP(32) + (-t676 * t735 - t712 * t681 - t682 * t710 + t736 * t836) * MDP(12) + (t567 * t657 - t568 * t658 - t575 * t645 - t576 * t643) * MDP(26) + (-t525 * t657 + t526 * t658 - t529 * t643 + t530 * t645 + t540 * t576 - t541 * t575 - t547 * t568 - t548 * t567) * MDP(33) + (-t567 * t658 + t576 * t645) * MDP(25) + (-t689 * t614 - t675 * t628 - t629 * t673 - t688 * t837) * MDP(19) + (t675 * t629 + t689 * t837) * MDP(18) + (t525 * t547 + t526 * t548 + t529 * t541 + t530 * t540 + t531 * t561 + t532 * t546) * MDP(35) + (-qJD(2) * t852 - t787 * t957) * t825 * MDP(15) * t1002 + t1036 * t1038; (-t809 + t832 * t956 + (-pkin(9) * t947 + t811) * t936 + t811 * qJD(2)) * MDP(10) - (qJD(1) * t907 - t958) * t897 + (-t568 * t788 - t614 * t749 - t643 * t977 - t672 * t979) * MDP(28) + (t567 * t749 - t568 * t750 + t643 * t980 - t645 * t979) * MDP(26) + (-t567 * t750 - t645 * t980) * MDP(25) + (-t567 * t788 + t614 * t750 + t645 * t977 - t672 * t980) * MDP(27) + (-t1029 * t574 + t1033 * t622 + t1034 * t675 + t1049 * t869 + t593 * t789 + t779 * t837 + t836 * t976 - t881 * t950) * MDP(24) + (-t526 * t788 + t531 * t749 - t540 * t977 + t546 * t979 + t568 * t647 - t614 * t627 - t643 * t989 + t672 * t992) * MDP(32) + (-t525 * t749 + t526 * t750 - t540 * t980 - t541 * t979 - t567 * t627 - t568 * t626 + t643 * t993 - t645 * t992) * MDP(33) + (t525 * t788 - t531 * t750 + t541 * t977 + t546 * t980 + t567 * t647 + t614 * t626 + t645 * t989 - t672 * t993) * MDP(34) + (t525 * t626 + t526 * t627 + t531 * t647 - t540 * t992 - t541 * t993 - t546 * t989) * MDP(35) + (t614 * t788 + t672 * t977) * MDP(29) + (-t928 + (-MDP(6) * t832 + MDP(7) * t829) * t825 * t1018) * t833 + (-pkin(9) * t832 * t940 + qJD(1) * t844 + (-t894 + t956) * t829) * MDP(9) + (t820 * t828 * t918 + t676 * t1017 + t764 * t852 + (-t1022 * t846 - t712 * t947) * t824) * MDP(13) + (t820 * t829 * t893 + t1003 * t846 + t1017 * t836 + t710 * t922 - t763 * t852) * MDP(14) + (t1029 * t573 + t1034 * t673 + t1041 * t869 + t593 * t788 + t779 * t614 + t977 * t622 + t835 * t930 + t926 * t950) * MDP(23) + (-pkin(2) * t834 + t598 * t1017 - t639 * t922 - t677 * t950 - t683 * t710 + t873 * t898 + (t824 * t949 + t1050) * t852 + t1029 * t669) * MDP(16) + (t1029 * t675 + t1033 * t869 + t789 * t835 - t837 * t950) * MDP(20) + (t1033 * t675 + t837 * t789) * MDP(18) + (-t1033 * t673 - t789 * t614 - t675 * t977 - t788 * t837) * MDP(19) + (-t1029 * t673 + t614 * t950 - t788 * t835 - t869 * t977) * MDP(21) + (t676 * t1003 + t1030 * t712) * MDP(11) + (t1003 * t836 - t1029 * t712 - t1030 * t710 + t676 * t950) * MDP(12) + (t1031 * t672 - t527 * t788 + t536 * t750 - t977 * t545 - t691 * t567 - t980 * t569 - t978 * t614 + t981 * t645) * MDP(31) + (-t1022 * t834 + t1029 * t869) * MDP(22) + (t862 * t1017 - t683 * t712 - t669 * t764 + (t669 * t942 - pkin(2) * t676 + t677 * t828 + (-qJD(2) * t973 + t640) * t947) * t824 + t1053 * t852) * MDP(17) + (t900 * t614 - t927 * t788 + t691 * t568 + t536 * t749 + ((-qJD(5) * t692 - t1047) * t830 + (-qJD(5) * t690 + t1045) * t826) * t672 + t981 * t643 + t979 * t569 + t977 * t544) * MDP(30) + t1004 * t1036; (t643 * t660 + t645 * t659 + (-t643 * t830 - t645 * t826) * t964 + (t1010 - t568 * t830 + (t643 * t826 - t645 * t830) * qJD(5)) * t827) * MDP(26) + (-t827 * t614 + t831 * t837 - t1040 * t675 + (-t1005 - t964) * t673) * MDP(19) + (t672 * t827 * t869 - t614 * t831) * MDP(29) + (t568 * t831 - t909 * t672 + (-t643 * t869 + t885) * t827) * MDP(28) + (-t525 * t831 + t567 * t782 + t614 * t759 - t995 * t672 + t990 * t645 - t908 * t546 + (t541 * t869 + t546 * t963 - t1014) * t827) * MDP(34) + (t526 * t831 + t568 * t782 - t614 * t760 + t994 * t672 - t990 * t643 + t909 * t546 + (-t540 * t869 + t546 * t962 + t1015) * t827) * MDP(32) + (t567 * t831 + t908 * t672 + (t645 * t869 - t944 + t998) * t827) * MDP(27) + (-pkin(3) * t837 + t1005 * t622 + t1020 * t836 + t574 * t712 + t593 * t827 - t640 * t675 + t831 * t960 + (t984 + t1046) * t869) * MDP(24) + (-t540 * t660 + t541 * t659 - t567 * t760 - t568 * t759 - t994 * t645 + t995 * t643 + t904 * t964 + (-t525 * t826 + t526 * t830 + (-t540 * t826 - t541 * t830) * qJD(5)) * t827) * MDP(33) + (t525 * t759 + t526 * t760 + t531 * t782 - t540 * t994 - t541 * t995 - t546 * t990) * MDP(35) + (-pkin(3) * t614 + t1006 * t622 - t1020 * t858 - t573 * t712 - t593 * t831 - t640 * t673 - t869 * t934 + (-pkin(11) * t835 + t960) * t827) * MDP(23) + ((-qJD(4) * t712 + t898) * t827 ^ 2 + ((t676 - t845) * t827 + t869 * t675) * t831) * MDP(18) + (-t567 * t827 * t830 + (-t827 * t963 + t908) * t645) * MDP(25) + t712 * t710 * MDP(11) + (-t639 * t852 + t669 * t710 + t862) * MDP(17) + (-t710 * t852 + t676) * MDP(13) + (-t712 * t852 + t836) * MDP(14) - t869 * t712 * MDP(22) + (-t640 * t852 - t669 * t712 + t598) * MDP(16) + (-t710 ^ 2 + t712 ^ 2) * MDP(12) + (t1032 * t827 - t675 * t712 + t831 * t842) * MDP(20) + (t1032 * t831 + t673 * t712 - t827 * t842) * MDP(21) + (-t972 * t614 - t590 * t645 - t569 * t660 + t1028 * t672 + (t569 * t965 + t527 + (qJD(4) * t645 + t944) * pkin(11)) * t831 + (-t569 * t963 + t536 * t830 - t869 * t545 + (t672 * t965 - t567) * pkin(11)) * t827) * MDP(31) + (t808 * t998 - t569 * t659 - t590 * t643 + (-t1048 * t830 + (-qJD(5) * t808 + t591) * t826) * t672 + (t569 * t967 + t927 + (qJD(4) * t643 + t885) * pkin(11)) * t831 + (t569 * t962 + t1013 + t869 * t544 + (t672 * t967 + t568) * pkin(11)) * t827) * MDP(30) + qJD(2) * t897; -t673 ^ 2 * MDP(19) + (t710 * t673 + t859) * MDP(20) - t931 * MDP(21) + t835 * MDP(22) + (t574 * t869 - t926) * MDP(23) + (t573 * t869 + t622 * t673 + t881) * MDP(24) + (t645 * t929 - t1010) * MDP(25) + ((-t567 - t1009) * t830 + (-t568 - t1007) * t826) * MDP(26) + (t672 * t929 + t1000) * MDP(27) + (-t1023 * t826 + t998) * MDP(28) + (-pkin(4) * t568 - t574 * t643 + (-t536 + (-pkin(12) * qJD(5) - t625) * t672) * t830 + (t573 * t672 + t883) * t826) * MDP(30) + (pkin(4) * t567 + t1013 - t574 * t645 + (t955 + t988) * t672 + t883 * t830) * MDP(31) + (-t1014 + t568 * t804 + (-pkin(12) * t962 + t554) * t672 - t991 * t643 + t1025 * t826) * MDP(32) + (t553 * t643 - t554 * t645 + (t525 + t672 * t540 + (qJD(5) * t645 - t568) * pkin(12)) * t830 + (t526 - t1012 + (qJD(5) * t643 - t567) * pkin(12)) * t826) * MDP(33) + (-t1015 + t567 * t804 + (-t553 - t955) * t672 + t991 * t645 - t1025 * t830) * MDP(34) + (t531 * t804 - t540 * t554 - t541 * t553 - t991 * t546 + (qJD(5) * t904 + t525 * t830 + t526 * t826) * pkin(12)) * MDP(35) + (MDP(18) * t673 + MDP(19) * t675 + MDP(21) * t710 - t622 * MDP(23) - t645 * MDP(27) + t643 * MDP(28) - t672 * MDP(29) - t544 * MDP(30) + t545 * MDP(31) + t540 * MDP(32) - t541 * MDP(34)) * t675; MDP(25) * t1008 + (-t643 ^ 2 + t1024) * MDP(26) + t552 * MDP(27) + (-t568 + t1007) * MDP(28) + t614 * MDP(29) + (-t569 * t645 + t1011 - t927) * MDP(30) + (t544 * t672 + t569 * t643 - t527) * MDP(31) + (-t596 * t643 + t1011 + 0.2e1 * t1021 - t882) * MDP(32) + (pkin(5) * t567 - qJ(6) * t568 + (t541 - t545) * t645 + (t540 - t959) * t643) * MDP(33) + (0.2e1 * t1016 - t546 * t643 + t596 * t645 + (0.2e1 * qJD(6) - t544) * t672 + t527) * MDP(34) + (-pkin(5) * t526 + qJ(6) * t525 - t540 * t545 + t541 * t959 - t546 * t596) * MDP(35); (t1008 - t614) * MDP(32) + t552 * MDP(33) + (-t1023 - t1024) * MDP(34) + (-t1012 + t882 - t1021) * MDP(35);];
tauc  = t1;
