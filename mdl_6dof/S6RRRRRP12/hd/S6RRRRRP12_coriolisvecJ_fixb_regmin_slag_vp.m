% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP12_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP12_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:20:38
% EndTime: 2019-03-10 03:21:23
% DurationCPUTime: 18.72s
% Computational Cost: add. (30452->741), mult. (90754->1036), div. (0->0), fcn. (74945->12), ass. (0->328)
t308 = cos(qJ(2));
t472 = cos(pkin(6));
t426 = pkin(1) * t472;
t398 = t308 * t426;
t287 = qJD(1) * t398;
t305 = sin(qJ(2));
t301 = sin(pkin(6));
t471 = cos(pkin(7));
t361 = t301 * (-pkin(10) * t471 - pkin(9));
t348 = t305 * t361;
t219 = qJD(1) * t348 + t287;
t399 = t305 * t426;
t324 = t308 * t361 - t399;
t220 = t324 * qJD(1);
t300 = sin(pkin(7));
t347 = t301 * (-pkin(10) * t300 * t308 + pkin(2) * t305);
t252 = qJD(1) * t347;
t494 = cos(qJ(3));
t390 = t471 * t494;
t304 = sin(qJ(3));
t463 = t300 * t304;
t349 = pkin(2) * t390 - pkin(10) * t463;
t413 = t304 * t471;
t524 = t349 * qJD(3) - t494 * t219 - t220 * t413 - t252 * t463;
t341 = -t305 * t413 + t308 * t494;
t443 = qJD(1) * t301;
t240 = t341 * t443;
t417 = t494 * qJD(3);
t394 = t300 * t417;
t506 = t394 - t240;
t159 = -t220 * t300 + t471 * t252;
t339 = t304 * t308 + t305 * t390;
t239 = t339 * t443;
t523 = pkin(3) * t239 - pkin(11) * t240 + t159 - (pkin(3) * t304 - pkin(11) * t494) * t300 * qJD(3);
t422 = t305 * t443;
t397 = t300 * t422;
t522 = pkin(11) * t397 - t524;
t303 = sin(qJ(4));
t307 = cos(qJ(4));
t264 = t303 * t463 - t307 * t471;
t509 = -qJD(4) * t264 - t303 * t397 + t506 * t307;
t265 = t303 * t471 + t307 * t463;
t450 = qJD(4) * t265 + t506 * t303 + t307 * t397;
t425 = t300 * t494;
t446 = pkin(2) * t413 + pkin(10) * t425;
t521 = t446 * qJD(3) - t304 * t219 + t220 * t390;
t441 = qJD(3) * t304;
t420 = t300 * t441;
t505 = t420 - t239;
t396 = t304 * t422;
t409 = t472 * qJD(1);
t372 = t409 + qJD(2);
t352 = t300 * t372;
t366 = t308 * t390;
t355 = t301 * t366;
t447 = -qJD(1) * t355 - t494 * t352;
t186 = t396 + t447;
t345 = qJD(4) + t186;
t424 = t494 * t252;
t510 = -(-pkin(3) * t422 - t424) * t300 + t521;
t256 = pkin(11) * t471 + t446;
t257 = (-pkin(3) * t494 - pkin(11) * t304 - pkin(2)) * t300;
t437 = qJD(4) * t307;
t439 = qJD(4) * t303;
t520 = t256 * t439 - t257 * t437 + t523 * t303 + t522 * t307;
t518 = -t505 * pkin(12) + t520;
t517 = t450 * pkin(4) - t509 * pkin(12) + t510;
t461 = t301 * t308;
t343 = pkin(9) * t461 + t399;
t412 = t308 * t471;
t391 = t301 * t412;
t181 = t343 * qJD(1) + (qJD(1) * t391 + t352) * pkin(10);
t327 = pkin(2) * t472 + t348;
t185 = qJD(2) * pkin(2) + qJD(1) * t327 + t287;
t462 = t300 * t305;
t248 = (-pkin(2) * t308 - pkin(10) * t462 - pkin(1)) * t301;
t233 = qJD(1) * t248;
t116 = t494 * t181 + t185 * t413 + t233 * t463;
t516 = -t116 + t345 * (pkin(4) * t303 - pkin(12) * t307);
t519 = pkin(11) * t439;
t302 = sin(qJ(5));
t306 = cos(qJ(5));
t225 = t302 * t265 + t306 * t425;
t453 = qJD(5) * t225 - t302 * t505 - t306 * t509;
t400 = t302 * t425;
t435 = qJD(5) * t306;
t452 = -qJD(5) * t400 + t265 * t435 + t302 * t509 - t306 * t505;
t340 = t304 * t412 + t305 * t494;
t330 = t340 * t301;
t351 = t304 * t372;
t188 = qJD(1) * t330 + t300 * t351;
t429 = t300 * t461;
t433 = qJD(1) * t429 - qJD(3);
t328 = -t372 * t471 + t433;
t149 = t303 * t188 + t307 * t328;
t432 = qJD(1) * qJD(2);
t415 = t301 * t432;
t393 = t305 * t415;
t373 = t300 * t393;
t368 = t494 * t415;
t152 = -qJD(2) * t471 * t396 - t186 * qJD(3) + t308 * t368;
t458 = t307 * t152;
t335 = t303 * t373 + t458;
t313 = -qJD(4) * t149 + t335;
t515 = qJD(5) * t345 + t313;
t329 = t340 * qJD(3);
t514 = qJD(2) * t339 + t329;
t513 = -t256 * t437 - t257 * t439 + t522 * t303 - t523 * t307;
t316 = t514 * t301;
t344 = qJD(3) * t351;
t336 = t300 * t344;
t311 = qJD(1) * t316 + t336;
t385 = qJD(2) * t409;
t369 = pkin(1) * t385;
t285 = t308 * t369;
t342 = qJD(2) * t348;
t202 = qJD(1) * t342 + t285;
t222 = t324 * qJD(2);
t203 = qJD(1) * t222;
t253 = qJD(2) * t347;
t244 = qJD(1) * t253;
t363 = qJD(3) * t390;
t338 = t181 * t441 - t185 * t363 - t494 * t202 - t203 * t413 - t233 * t394 - t244 * t463;
t68 = pkin(11) * t373 - t338;
t229 = t471 * t244;
t315 = t514 * t443;
t84 = -t152 * pkin(11) + t229 + (pkin(3) * t344 - t203) * t300 + pkin(3) * t315;
t145 = -t185 * t300 + t471 * t233;
t95 = pkin(3) * t186 - pkin(11) * t188 + t145;
t99 = -pkin(11) * t328 + t116;
t410 = t303 * t68 - t307 * t84 + t99 * t437 + t95 * t439;
t12 = -pkin(4) * t311 + t410;
t503 = t186 * t303 + t439;
t148 = qJD(5) + t149;
t50 = t303 * t95 + t307 * t99;
t46 = pkin(12) * t345 + t50;
t151 = t307 * t188 - t303 * t328;
t115 = -t304 * t181 + t185 * t390 + t233 * t425;
t98 = pkin(3) * t328 - t115;
t55 = t149 * pkin(4) - t151 * pkin(12) + t98;
t21 = t302 * t55 + t306 * t46;
t17 = qJ(6) * t148 + t21;
t359 = -t303 * t84 - t307 * t68 - t95 * t437 + t439 * t99;
t11 = pkin(12) * t311 - t359;
t408 = t471 * qJD(3);
t389 = t304 * t408;
t74 = -t181 * t417 - t185 * t389 - t304 * t202 + t203 * t390 - t233 * t420 + t244 * t425;
t69 = -pkin(3) * t373 - t74;
t404 = t303 * t152 - t307 * t373;
t90 = qJD(4) * t151 + t404;
t27 = t90 * pkin(4) - pkin(12) * t313 + t69;
t436 = qJD(5) * t302;
t414 = t302 * t11 - t306 * t27 + t46 * t435 + t55 * t436;
t496 = pkin(5) * t90;
t2 = t414 - t496;
t511 = -t148 * t17 + t2;
t478 = -t505 * pkin(4) - t513;
t255 = -pkin(3) * t471 - t349;
t166 = t264 * pkin(4) - t265 * pkin(12) + t255;
t449 = t307 * t256 + t303 * t257;
t168 = -pkin(12) * t425 + t449;
t451 = t302 * t166 + t306 * t168;
t508 = qJD(2) * t239 + qJD(3) * t188;
t312 = -t336 - t315;
t507 = -t166 * t435 + t168 * t436 - t517 * t302 + t518 * t306;
t466 = t186 * t307;
t504 = t437 + t466;
t284 = -pkin(4) * t307 - pkin(12) * t303 - pkin(3);
t139 = pkin(3) * t188 + pkin(11) * t186;
t456 = t307 * t115 + t303 * t139;
t67 = pkin(12) * t188 + t456;
t502 = -t284 * t435 - t516 * t302 + t306 * t67;
t119 = t151 * t302 - t306 * t345;
t121 = t306 * t151 + t302 * t345;
t49 = -t303 * t99 + t307 * t95;
t45 = -pkin(4) * t345 - t49;
t22 = t119 * pkin(5) - t121 * qJ(6) + t45;
t495 = pkin(12) * t90;
t500 = t148 * t22 - t495;
t411 = t472 * t300;
t392 = t304 * t411;
t157 = qJD(3) * t392 + t316;
t218 = t398 + t327;
t155 = -t218 * t300 + t471 * t248;
t367 = t494 * t411;
t460 = t304 * t305;
t211 = t301 * t460 - t355 - t367;
t212 = t392 + t330;
t111 = pkin(3) * t211 - pkin(11) * t212 + t155;
t382 = t472 * t471;
t263 = -t382 + t429;
t205 = (t391 + t411) * pkin(10) + t343;
t428 = t494 * t205 + t218 * t413 + t248 * t463;
t118 = -pkin(11) * t263 + t428;
t288 = qJD(2) * t398;
t221 = t288 + t342;
t337 = -t205 * t441 + t218 * t363 + t494 * t221 + t222 * t413 + t248 * t394 + t253 * t463;
t442 = qJD(2) * t305;
t421 = t301 * t442;
t395 = t300 * t421;
t78 = pkin(11) * t395 + t337;
t158 = qJD(3) * t367 + ((t366 - t460) * qJD(3) + t341 * qJD(2)) * t301;
t160 = -t222 * t300 + t471 * t253;
t88 = pkin(3) * t157 - pkin(11) * t158 + t160;
t356 = t111 * t437 - t118 * t439 + t303 * t88 + t307 * t78;
t18 = pkin(12) * t157 + t356;
t165 = t212 * t307 - t263 * t303;
t104 = qJD(4) * t165 + t158 * t303 - t307 * t395;
t164 = t212 * t303 + t263 * t307;
t105 = -qJD(4) * t164 + t158 * t307 + t303 * t395;
t331 = -t205 * t417 - t218 * t389 - t304 * t221 + t222 * t390 - t248 * t420;
t423 = t494 * t253;
t79 = (-pkin(3) * t421 - t423) * t300 - t331;
t36 = t104 * pkin(4) - t105 * pkin(12) + t79;
t455 = t303 * t111 + t307 * t118;
t58 = pkin(12) * t211 + t455;
t325 = -t304 * t205 + t218 * t390 + t248 * t425;
t117 = t263 * pkin(3) - t325;
t75 = t164 * pkin(4) - t165 * pkin(12) + t117;
t377 = t302 * t75 + t306 * t58;
t499 = -qJD(5) * t377 - t18 * t302 + t306 * t36;
t498 = t121 ^ 2;
t497 = t148 ^ 2;
t309 = qJD(1) ^ 2;
t493 = pkin(11) * t307;
t43 = t151 * t436 - t302 * t311 - t515 * t306;
t44 = t151 * t435 + t515 * t302 - t306 * t311;
t7 = t44 * pkin(5) + t43 * qJ(6) - t121 * qJD(6) + t12;
t492 = t302 * t7;
t491 = t306 * t7;
t490 = -t450 * qJ(6) - qJD(6) * t264 + t507;
t489 = t450 * pkin(5) - t451 * qJD(5) + t518 * t302 + t517 * t306;
t226 = t306 * t265 - t400;
t488 = -t452 * pkin(5) - t453 * qJ(6) + qJD(6) * t226 - t478;
t485 = qJ(6) * t90;
t484 = t12 * t302;
t483 = t121 * t22;
t481 = t302 * t43;
t480 = t302 * t90;
t479 = t306 * t90;
t434 = qJD(5) * t307;
t438 = qJD(4) * t306;
t477 = -qJD(6) * t307 + (-t302 * t434 - t303 * t438) * pkin(11) - t502 + t503 * qJ(6);
t476 = t284 * t436 + (-t67 - t519) * t302 + (t434 * pkin(11) - t516) * t306 - t503 * pkin(5);
t135 = -t306 * t188 - t302 * t466;
t459 = t306 * t307;
t136 = -t186 * t459 + t188 * t302;
t380 = pkin(5) * t302 - qJ(6) * t306;
t365 = pkin(11) + t380;
t381 = pkin(5) * t306 + qJ(6) * t302;
t407 = -t303 * t115 + t139 * t307;
t66 = -pkin(4) * t188 - t407;
t475 = -pkin(5) * t135 + qJ(6) * t136 + (qJD(5) * t381 - qJD(6) * t306) * t303 + t365 * t437 - t66;
t474 = -qJD(6) * t302 + t148 * t380 - t50;
t101 = pkin(4) * t151 + pkin(12) * t149;
t473 = t302 * t101 + t306 * t49;
t470 = t119 * t148;
t469 = t121 * t119;
t468 = t121 * t148;
t465 = t284 * t306;
t297 = t301 ^ 2;
t464 = t297 * t309;
t20 = -t302 * t46 + t306 * t55;
t457 = qJD(6) - t20;
t445 = pkin(11) * t459 + t302 * t284;
t444 = t305 ^ 2 - t308 ^ 2;
t440 = qJD(4) * t302;
t431 = pkin(12) * t436;
t430 = t308 * t464;
t419 = t148 * t436;
t418 = qJD(4) + t447;
t416 = t297 * t432;
t406 = t111 * t307 - t303 * t118;
t403 = -t303 * t256 + t257 * t307;
t402 = t148 * t306;
t401 = 0.2e1 * t416;
t388 = t301 * t309 * t472;
t387 = -0.2e1 * pkin(1) * t416;
t167 = pkin(4) * t425 - t403;
t384 = t302 * t437 - t135;
t383 = t306 * t437 - t136;
t16 = -pkin(5) * t148 + t457;
t379 = t16 * t306 - t17 * t302;
t376 = -t302 * t58 + t306 * t75;
t134 = t165 * t306 + t211 * t302;
t133 = t165 * t302 - t211 * t306;
t375 = t166 * t306 - t168 * t302;
t371 = 0.2e1 * t409 + qJD(2);
t370 = -t111 * t439 - t118 * t437 - t303 * t78 + t307 * t88;
t362 = t148 * t21 - t414;
t57 = -pkin(4) * t211 - t406;
t360 = -t148 * t435 - t480;
t3 = t306 * t11 + t302 * t27 + t55 * t435 - t436 * t46;
t358 = t306 * t18 + t302 * t36 + t75 * t435 - t436 * t58;
t357 = t148 * t45 - t495;
t350 = t308 * (t408 + qJD(2));
t19 = -pkin(4) * t157 - t370;
t334 = qJD(4) * t345;
t332 = qJD(2) * t390 + t417;
t326 = t305 * t332;
t322 = qJD(3) * t328;
t321 = qJD(4) * t328;
t320 = t372 * t343;
t318 = t186 * t345 + t334;
t310 = t300 * t311;
t296 = t300 ^ 2;
t280 = -pkin(4) - t381;
t258 = t365 * t303;
t236 = -t465 + (pkin(11) * t302 + pkin(5)) * t307;
t235 = -qJ(6) * t307 + t445;
t153 = -t300 * t203 + t229;
t123 = pkin(5) * t225 - qJ(6) * t226 + t167;
t103 = -pkin(5) * t264 - t375;
t102 = qJ(6) * t264 + t451;
t72 = pkin(5) * t121 + qJ(6) * t119;
t52 = -qJD(5) * t133 + t105 * t306 + t157 * t302;
t51 = qJD(5) * t134 + t105 * t302 - t157 * t306;
t37 = pkin(5) * t133 - qJ(6) * t134 + t57;
t30 = -pkin(5) * t151 - t101 * t306 + t302 * t49;
t29 = qJ(6) * t151 + t473;
t28 = -t43 + t470;
t24 = -pkin(5) * t164 - t376;
t23 = qJ(6) * t164 + t377;
t8 = pkin(5) * t51 - qJ(6) * t52 - qJD(6) * t134 + t19;
t6 = -pkin(5) * t104 - t499;
t5 = qJ(6) * t104 + qJD(6) * t164 + t358;
t1 = qJD(6) * t148 + t3 + t485;
t4 = [0, 0, 0, t305 * t308 * t401, -t444 * t401, t371 * qJD(2) * t461, -t371 * t421, 0, -qJD(2) * t320 + t305 * t387 - t343 * t385, t308 * t387 - (-pkin(9) * t421 + t288) * t372 - (-pkin(9) * t393 + t285) * t472, t152 * t212 + t158 * t188, -t152 * t211 - t188 * t157 - t158 * t186 + t212 * t312, -t158 * t328 - t152 * t263 + (qJD(1) * t212 + t188) * t395, t157 * t328 + t263 * t336 + (-t186 * t300 * t442 + (t263 * t329 + (-t211 * t462 + t263 * t339) * qJD(2)) * qJD(1)) * t301 (-qJD(2) * t328 - t263 * t432) * t301 * t462 -(t300 * t423 + t331) * t328 + t325 * t373 - t74 * t263 + t115 * t395 + t160 * t186 + t155 * t311 + t153 * t211 + t145 * t157, t337 * t328 - t338 * t263 + t160 * t188 + t155 * t152 + t153 * t212 + t145 * t158 + (-qJD(1) * t428 - t116) * t395, t151 * t105 + t165 * t313, -t151 * t104 - t105 * t149 - t164 * t313 - t165 * t90, t105 * t418 + t165 * t336 + (-t188 * t439 - t307 * t321 + t458) * t211 + t151 * t157 + (t165 * t304 * t350 + (t303 * t300 * qJD(2) * t211 + t105 * t304 + t165 * t332) * t305) * t443, -t104 * t418 - t164 * t336 - t90 * t211 - t149 * t157 + (-t164 * t326 + (-t104 * t305 - t164 * t350) * t304) * t443, t211 * t336 + t418 * t157 + (t211 * t326 + (t305 * t157 + t211 * t350) * t304) * t443, t98 * t104 + t117 * t90 + t79 * t149 + t49 * t157 + t69 * t164 - t211 * t410 + t311 * t406 + t345 * t370, t98 * t105 + t117 * t313 + t79 * t151 - t50 * t157 + t69 * t165 + t211 * t359 + t312 * t455 - t345 * t356, t121 * t52 - t134 * t43, -t119 * t52 - t121 * t51 + t133 * t43 - t134 * t44, t104 * t121 + t134 * t90 + t148 * t52 - t164 * t43, -t104 * t119 - t133 * t90 - t148 * t51 - t164 * t44, t104 * t148 + t164 * t90, t20 * t104 + t19 * t119 + t12 * t133 + t148 * t499 - t164 * t414 + t376 * t90 + t57 * t44 + t45 * t51, -t21 * t104 + t12 * t134 + t19 * t121 - t148 * t358 - t3 * t164 - t377 * t90 - t57 * t43 + t45 * t52, -t104 * t16 + t119 * t8 + t133 * t7 - t148 * t6 - t164 * t2 + t22 * t51 - t24 * t90 + t37 * t44, -t1 * t133 - t119 * t5 + t121 * t6 + t134 * t2 + t16 * t52 - t17 * t51 - t23 * t44 - t24 * t43, t1 * t164 + t104 * t17 - t121 * t8 - t134 * t7 + t148 * t5 - t22 * t52 + t23 * t90 + t37 * t43, t1 * t23 + t16 * t6 + t17 * t5 + t2 * t24 + t22 * t8 + t37 * t7; 0, 0, 0, -t305 * t430, t444 * t464, -t308 * t388, t305 * t388, 0, -pkin(9) * t308 * t415 + qJD(1) * t320 + (pkin(1) * t464 - t369) * t305, -t285 + pkin(1) * t430 + (-pkin(9) * t422 + t287) * t409 + t287 * qJD(2), t152 * t463 + t188 * t506, t152 * t425 - t186 * t506 - t188 * t505 + t312 * t463, t296 * t304 * t393 + t152 * t471 + t240 * t328 + (-t188 * t422 - t322 * t494) * t300, t296 * t305 * t368 + t186 * t397 - t239 * t328 + t312 * t471 + t322 * t463 -(qJD(1) * t382 - t433) * t397, -pkin(2) * t310 - t115 * t397 - t153 * t425 - t159 * t186 + t349 * t373 + t74 * t471 + (t300 * t424 + t521) * t328 + t505 * t145, t338 * t471 - t159 * t188 - t145 * t240 + (t145 * t417 - pkin(2) * t152 + t153 * t304 + (-qJD(2) * t446 + t116) * t422) * t300 + t524 * t328, t151 * t509 + t313 * t265, -t149 * t509 - t450 * t151 - t264 * t313 - t265 * t90, t505 * t151 + t265 * t311 - t313 * t425 + t345 * t509, -t149 * t505 - t264 * t311 - t345 * t450 + t425 * t90, -t494 * t310 + t345 * t505, t510 * t149 + t255 * t90 + t69 * t264 + t311 * t403 + t345 * t513 + t410 * t425 + t450 * t98 + t505 * t49, t510 * t151 + t255 * t313 + t69 * t265 + t312 * t449 + t345 * t520 - t359 * t425 - t505 * t50 + t509 * t98, -t121 * t453 - t226 * t43, t119 * t453 - t121 * t452 + t225 * t43 - t226 * t44, t121 * t450 - t148 * t453 + t226 * t90 - t264 * t43, -t119 * t450 - t148 * t452 - t225 * t90 - t264 * t44, t148 * t450 + t264 * t90, t375 * t90 - t414 * t264 + t167 * t44 + t12 * t225 + t452 * t45 + t450 * t20 + ((-qJD(5) * t168 + t517) * t306 + (-qJD(5) * t166 + t518) * t302) * t148 + t478 * t119, t12 * t226 + t478 * t121 + t148 * t507 - t167 * t43 - t450 * t21 - t3 * t264 - t453 * t45 - t451 * t90, -t103 * t90 - t119 * t488 + t123 * t44 + t148 * t489 - t16 * t450 - t2 * t264 + t22 * t452 + t225 * t7, -t1 * t225 - t102 * t44 - t103 * t43 + t119 * t490 - t121 * t489 - t16 * t453 - t17 * t452 + t2 * t226, t1 * t264 + t102 * t90 + t121 * t488 + t123 * t43 - t148 * t490 + t17 * t450 + t22 * t453 - t226 * t7, t1 * t102 + t103 * t2 + t123 * t7 - t16 * t489 - t17 * t490 - t22 * t488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188 * t186, -t186 ^ 2 + t188 ^ 2, -t186 * t328 + t152, -t188 * t328 + t312, t373, -t116 * t328 - t145 * t188 + t74, -t115 * t328 + t145 * t186 + t338 (-qJD(4) * t188 + t373) * t303 ^ 2 + ((t152 - t321) * t303 + t345 * t151) * t307, -t149 * t504 - t151 * t503 - t303 * t90 + t307 * t313, -t151 * t188 + t303 * t508 + t307 * t318, t149 * t188 - t303 * t318 + t307 * t508, -t345 * t188, -pkin(11) * t303 * t311 - pkin(3) * t90 - t116 * t149 - t49 * t188 - t69 * t307 - t334 * t493 - t345 * t407 + t503 * t98, -pkin(3) * t313 - t116 * t151 + t50 * t188 + t69 * t303 + t312 * t493 + t504 * t98 + (t456 + t519) * t345, -t303 * t306 * t43 + (-t303 * t436 + t383) * t121, t119 * t136 + t121 * t135 + (-t119 * t306 - t121 * t302) * t437 + (t481 - t306 * t44 + (t119 * t302 - t121 * t306) * qJD(5)) * t303, t307 * t43 + t383 * t148 + (t121 * t345 - t419 + t479) * t303, t307 * t44 - t384 * t148 + (-t119 * t345 + t360) * t303, t148 * t303 * t345 - t307 * t90, t90 * t465 - t66 * t119 - t45 * t135 + (t516 * t306 + (-qJD(5) * t284 + t67) * t302) * t148 + (t45 * t440 + t414 + (qJD(4) * t119 + t360) * pkin(11)) * t307 + (t45 * t435 + t484 + t345 * t20 + (t148 * t440 + t44) * pkin(11)) * t303, -t445 * t90 - t66 * t121 - t45 * t136 + t502 * t148 + (t45 * t438 + t3 + (qJD(4) * t121 + t419) * pkin(11)) * t307 + (-t45 * t436 + t12 * t306 - t345 * t21 + (t148 * t438 - t43) * pkin(11)) * t303, t2 * t307 - t236 * t90 + t258 * t44 + t384 * t22 - t476 * t148 + t475 * t119 + (-t16 * t345 + t22 * t435 + t492) * t303, t135 * t17 - t136 * t16 - t235 * t44 - t236 * t43 + t476 * t121 - t477 * t119 + t379 * t437 + (-t1 * t302 + t2 * t306 + (-t16 * t302 - t17 * t306) * qJD(5)) * t303, -t1 * t307 + t235 * t90 + t258 * t43 - t383 * t22 + t477 * t148 - t475 * t121 + (t17 * t345 + t22 * t436 - t491) * t303, t1 * t235 + t16 * t476 + t17 * t477 + t2 * t236 + t22 * t475 + t258 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151 * t149, -t149 ^ 2 + t151 ^ 2, t186 * t149 + t335, t151 * t186 - t404, t311, -t98 * t151 + t345 * t50 - t410, t98 * t149 + t345 * t49 + t359, t121 * t402 - t481 (-t43 - t470) * t306 + (-t44 - t468) * t302, -t121 * t151 + t148 * t402 + t480, t119 * t151 - t302 * t497 + t479, -t148 * t151, -pkin(4) * t44 - t50 * t119 - t20 * t151 + (-t12 + (-pkin(12) * qJD(5) - t101) * t148) * t306 + (t49 * t148 + t357) * t302, pkin(4) * t43 + t484 - t50 * t121 + t21 * t151 + (t431 + t473) * t148 + t357 * t306, t151 * t16 + t280 * t44 - t491 + (-pkin(12) * t435 + t30) * t148 + t474 * t119 + t500 * t302, t119 * t29 - t121 * t30 + (t1 + t148 * t16 + (qJD(5) * t121 - t44) * pkin(12)) * t306 + ((qJD(5) * t119 - t43) * pkin(12) + t511) * t302, -t151 * t17 + t280 * t43 - t492 + (-t29 - t431) * t148 - t474 * t121 - t500 * t306, -t16 * t30 - t17 * t29 + t280 * t7 + t474 * t22 + (qJD(5) * t379 + t1 * t306 + t2 * t302) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, -t119 ^ 2 + t498, t28, -t44 + t468, t90, -t121 * t45 + t362, t119 * t45 + t148 * t20 - t3, -t119 * t72 + t362 - t483 + 0.2e1 * t496, pkin(5) * t43 - qJ(6) * t44 + (t17 - t21) * t121 + (t16 - t457) * t119, 0.2e1 * t485 - t119 * t22 + t121 * t72 + (0.2e1 * qJD(6) - t20) * t148 + t3, -pkin(5) * t2 + qJ(6) * t1 - t16 * t21 + t17 * t457 - t22 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469 - t90, t28, -t497 - t498, t483 + t511;];
tauc_reg  = t4;
