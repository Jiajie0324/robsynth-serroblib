% Calculate joint inertia matrix for
% S6RRRRRP12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d1,d2,d3,d4,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Mq [6x6]
%   inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S6RRRRRP12_inertiaJ_slag_vp1(qJ, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(12,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP12_inertiaJ_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRP12_inertiaJ_slag_vp1: pkin has to be [12x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRRRP12_inertiaJ_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRRRP12_inertiaJ_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRRRP12_inertiaJ_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:59:47
% EndTime: 2019-03-10 03:00:09
% DurationCPUTime: 9.81s
% Computational Cost: add. (68105->731), mult. (188868->989), div. (0->0), fcn. (249336->14), ass. (0->339)
t317 = cos(pkin(6));
t323 = cos(qJ(2));
t324 = cos(qJ(1));
t403 = t323 * t324;
t321 = sin(qJ(2));
t322 = sin(qJ(1));
t405 = t322 * t321;
t301 = t317 * t403 - t405;
t404 = t322 * t323;
t406 = t321 * t324;
t302 = t317 * t406 + t404;
t320 = sin(qJ(3));
t316 = sin(pkin(6));
t412 = sin(pkin(7));
t364 = t316 * t412;
t413 = cos(pkin(7));
t417 = cos(qJ(3));
t263 = t302 * t417 + (t413 * t301 - t324 * t364) * t320;
t365 = t316 * t413;
t283 = -t301 * t412 - t324 * t365;
t319 = sin(qJ(4));
t416 = cos(qJ(4));
t238 = t263 * t416 + t283 * t319;
t341 = t417 * t412;
t339 = t316 * t341;
t342 = t413 * t417;
t262 = -t301 * t342 + t302 * t320 + t324 * t339;
t318 = sin(qJ(5));
t415 = cos(qJ(5));
t195 = t238 * t318 - t262 * t415;
t196 = t238 * t415 + t262 * t318;
t237 = t263 * t319 - t283 * t416;
t418 = rSges(7,3) + qJ(6);
t419 = rSges(7,1) + pkin(5);
t402 = t237 * rSges(7,2) + t418 * t195 + t196 * t419;
t303 = -t317 * t404 - t406;
t284 = -t303 * t412 + t322 * t365;
t407 = t316 * t324;
t269 = Icges(3,5) * t302 + Icges(3,6) * t301 - Icges(3,3) * t407;
t411 = t269 * t324;
t410 = t316 * t321;
t409 = t316 * t322;
t408 = t316 * t323;
t137 = rSges(6,1) * t196 - rSges(6,2) * t195 + rSges(6,3) * t237;
t186 = t238 * pkin(4) + t237 * pkin(12);
t401 = -t137 - t186;
t304 = -t317 * t405 + t403;
t265 = t304 * t417 + (t413 * t303 + t322 * t364) * t320;
t240 = t265 * t416 + t284 * t319;
t264 = -t303 * t342 + t304 * t320 - t322 * t339;
t197 = t240 * t318 - t264 * t415;
t198 = t240 * t415 + t264 * t318;
t239 = t265 * t319 - t284 * t416;
t400 = t239 * rSges(7,2) + t418 * t197 + t198 * t419;
t139 = t198 * rSges(6,1) - t197 * rSges(6,2) + t239 * rSges(6,3);
t187 = t240 * pkin(4) + t239 * pkin(12);
t399 = -t139 - t187;
t282 = t317 * t412 * t320 + (t413 * t320 * t323 + t417 * t321) * t316;
t300 = t317 * t413 - t323 * t364;
t257 = t282 * t416 + t300 * t319;
t281 = -t317 * t341 + t320 * t410 - t342 * t408;
t229 = t257 * t318 - t281 * t415;
t230 = t257 * t415 + t281 * t318;
t256 = t282 * t319 - t300 * t416;
t398 = rSges(7,2) * t256 + t418 * t229 + t230 * t419;
t165 = rSges(6,1) * t230 - rSges(6,2) * t229 + rSges(6,3) * t256;
t221 = pkin(4) * t257 + pkin(12) * t256;
t397 = -t165 - t221;
t172 = rSges(5,1) * t238 - rSges(5,2) * t237 + rSges(5,3) * t262;
t222 = t263 * pkin(3) + t262 * pkin(11);
t396 = -t172 - t222;
t214 = t284 * t222;
t395 = t284 * t186 + t214;
t223 = t265 * pkin(3) + t264 * pkin(11);
t215 = t300 * t223;
t394 = t300 * t187 + t215;
t204 = rSges(5,1) * t257 - rSges(5,2) * t256 + rSges(5,3) * t281;
t248 = pkin(3) * t282 + pkin(11) * t281;
t393 = -t204 - t248;
t228 = t283 * t248;
t392 = t283 * t221 + t228;
t268 = t304 * pkin(2) + pkin(10) * t284;
t266 = t317 * t268;
t391 = t317 * t223 + t266;
t267 = t302 * pkin(2) + pkin(10) * t283;
t390 = t267 * t409 + t268 * t407;
t389 = t324 * pkin(1) + pkin(9) * t409;
t124 = Icges(7,5) * t196 + Icges(7,6) * t237 + Icges(7,3) * t195;
t128 = Icges(7,4) * t196 + Icges(7,2) * t237 + Icges(7,6) * t195;
t132 = Icges(7,1) * t196 + Icges(7,4) * t237 + Icges(7,5) * t195;
t46 = t124 * t195 + t128 * t237 + t132 * t196;
t125 = Icges(7,5) * t198 + Icges(7,6) * t239 + Icges(7,3) * t197;
t129 = Icges(7,4) * t198 + Icges(7,2) * t239 + Icges(7,6) * t197;
t133 = Icges(7,1) * t198 + Icges(7,4) * t239 + Icges(7,5) * t197;
t47 = t125 * t195 + t129 * t237 + t133 * t196;
t158 = Icges(7,5) * t230 + Icges(7,6) * t256 + Icges(7,3) * t229;
t160 = Icges(7,4) * t230 + Icges(7,2) * t256 + Icges(7,6) * t229;
t162 = Icges(7,1) * t230 + Icges(7,4) * t256 + Icges(7,5) * t229;
t71 = t158 * t195 + t160 * t237 + t162 * t196;
t1 = t237 * t46 + t239 * t47 + t256 * t71;
t126 = Icges(6,5) * t196 - Icges(6,6) * t195 + Icges(6,3) * t237;
t130 = Icges(6,4) * t196 - Icges(6,2) * t195 + Icges(6,6) * t237;
t134 = Icges(6,1) * t196 - Icges(6,4) * t195 + Icges(6,5) * t237;
t48 = t126 * t237 - t130 * t195 + t134 * t196;
t127 = Icges(6,5) * t198 - Icges(6,6) * t197 + Icges(6,3) * t239;
t131 = Icges(6,4) * t198 - Icges(6,2) * t197 + Icges(6,6) * t239;
t135 = Icges(6,1) * t198 - Icges(6,4) * t197 + Icges(6,5) * t239;
t49 = t127 * t237 - t131 * t195 + t135 * t196;
t159 = Icges(6,5) * t230 - Icges(6,6) * t229 + Icges(6,3) * t256;
t161 = Icges(6,4) * t230 - Icges(6,2) * t229 + Icges(6,6) * t256;
t163 = Icges(6,1) * t230 - Icges(6,4) * t229 + Icges(6,5) * t256;
t72 = t159 * t237 - t161 * t195 + t163 * t196;
t2 = t237 * t48 + t239 * t49 + t256 * t72;
t387 = t2 / 0.2e1 + t1 / 0.2e1;
t50 = t124 * t197 + t128 * t239 + t132 * t198;
t51 = t125 * t197 + t129 * t239 + t133 * t198;
t73 = t158 * t197 + t160 * t239 + t162 * t198;
t3 = t237 * t50 + t239 * t51 + t256 * t73;
t52 = t126 * t239 - t130 * t197 + t134 * t198;
t53 = t127 * t239 - t131 * t197 + t135 * t198;
t74 = t159 * t239 - t161 * t197 + t163 * t198;
t4 = t237 * t52 + t239 * t53 + t256 * t74;
t386 = t4 / 0.2e1 + t3 / 0.2e1;
t5 = t262 * t46 + t264 * t47 + t281 * t71;
t6 = t262 * t48 + t264 * t49 + t281 * t72;
t385 = t6 / 0.2e1 + t5 / 0.2e1;
t7 = t262 * t50 + t264 * t51 + t281 * t73;
t8 = t262 * t52 + t264 * t53 + t281 * t74;
t384 = t7 / 0.2e1 + t8 / 0.2e1;
t10 = t283 * t48 + t284 * t49 + t300 * t72;
t9 = t283 * t46 + t284 * t47 + t300 * t71;
t383 = t10 / 0.2e1 + t9 / 0.2e1;
t11 = t283 * t50 + t284 * t51 + t300 * t73;
t12 = t283 * t52 + t284 * t53 + t300 * t74;
t382 = t12 / 0.2e1 + t11 / 0.2e1;
t13 = t71 * t317 + (t322 * t47 - t324 * t46) * t316;
t14 = t72 * t317 + (t322 * t49 - t324 * t48) * t316;
t381 = t13 / 0.2e1 + t14 / 0.2e1;
t15 = t73 * t317 + (t322 * t51 - t324 * t50) * t316;
t16 = t74 * t317 + (t322 * t53 - t324 * t52) * t316;
t380 = t16 / 0.2e1 + t15 / 0.2e1;
t58 = t124 * t229 + t128 * t256 + t132 * t230;
t59 = t125 * t229 + t129 * t256 + t133 * t230;
t87 = t229 * t158 + t256 * t160 + t230 * t162;
t79 = t87 * t256;
t17 = t58 * t237 + t59 * t239 + t79;
t60 = t126 * t256 - t130 * t229 + t134 * t230;
t61 = t127 * t256 - t131 * t229 + t135 * t230;
t88 = t256 * t159 - t229 * t161 + t230 * t163;
t80 = t88 * t256;
t18 = t60 * t237 + t61 * t239 + t80;
t379 = t17 / 0.2e1 + t18 / 0.2e1;
t81 = t87 * t281;
t19 = t58 * t262 + t59 * t264 + t81;
t82 = t88 * t281;
t20 = t60 * t262 + t61 * t264 + t82;
t378 = t20 / 0.2e1 + t19 / 0.2e1;
t83 = t87 * t300;
t21 = t58 * t283 + t59 * t284 + t83;
t84 = t88 * t300;
t22 = t60 * t283 + t61 * t284 + t84;
t377 = t21 / 0.2e1 + t22 / 0.2e1;
t85 = t87 * t317;
t23 = t85 + (t59 * t322 - t58 * t324) * t316;
t86 = t88 * t317;
t24 = t86 + (t61 * t322 - t60 * t324) * t316;
t376 = t23 / 0.2e1 + t24 / 0.2e1;
t375 = -t186 - t402;
t374 = -t222 + t401;
t373 = -t187 - t400;
t372 = -t221 - t398;
t371 = -t248 + t397;
t199 = Icges(5,5) * t257 - Icges(5,6) * t256 + Icges(5,3) * t281;
t200 = Icges(5,4) * t257 - Icges(5,2) * t256 + Icges(5,6) * t281;
t201 = Icges(5,1) * t257 - Icges(5,4) * t256 + Icges(5,5) * t281;
t112 = t281 * t199 - t256 * t200 + t257 * t201;
t370 = t317 * t187 + t391;
t241 = Icges(4,5) * t282 - Icges(4,6) * t281 + Icges(4,3) * t300;
t242 = Icges(4,4) * t282 - Icges(4,2) * t281 + Icges(4,6) * t300;
t243 = Icges(4,1) * t282 - Icges(4,4) * t281 + Icges(4,5) * t300;
t149 = t300 * t241 - t281 * t242 + t282 * t243;
t173 = t240 * rSges(5,1) - t239 * rSges(5,2) + t264 * rSges(5,3);
t213 = t265 * rSges(4,1) - t264 * rSges(4,2) + t284 * rSges(4,3);
t291 = Icges(3,3) * t317 + (Icges(3,5) * t321 + Icges(3,6) * t323) * t316;
t292 = Icges(3,6) * t317 + (Icges(3,4) * t321 + Icges(3,2) * t323) * t316;
t293 = Icges(3,5) * t317 + (Icges(3,1) * t321 + Icges(3,4) * t323) * t316;
t369 = t317 * t291 + t292 * t408 + t293 * t410;
t276 = t304 * rSges(3,1) + t303 * rSges(3,2) + rSges(3,3) * t409;
t368 = -t322 * pkin(1) + pkin(9) * t407;
t244 = rSges(4,1) * t282 - rSges(4,2) * t281 + rSges(4,3) * t300;
t287 = pkin(2) * t410 + t300 * pkin(10);
t358 = t316 * (-t244 - t287);
t102 = t199 * t262 - t200 * t237 + t201 * t238;
t166 = Icges(5,5) * t238 - Icges(5,6) * t237 + Icges(5,3) * t262;
t168 = Icges(5,4) * t238 - Icges(5,2) * t237 + Icges(5,6) * t262;
t170 = Icges(5,1) * t238 - Icges(5,4) * t237 + Icges(5,5) * t262;
t90 = t166 * t262 - t168 * t237 + t170 * t238;
t167 = Icges(5,5) * t240 - Icges(5,6) * t239 + Icges(5,3) * t264;
t169 = Icges(5,4) * t240 - Icges(5,2) * t239 + Icges(5,6) * t264;
t171 = Icges(5,1) * t240 - Icges(5,4) * t239 + Icges(5,5) * t264;
t91 = t167 * t262 - t169 * t237 + t171 * t238;
t25 = t102 * t281 + t262 * t90 + t264 * t91;
t357 = t25 / 0.2e1 + t385;
t103 = t199 * t264 - t200 * t239 + t201 * t240;
t92 = t166 * t264 - t168 * t239 + t170 * t240;
t93 = t167 * t264 - t169 * t239 + t171 * t240;
t26 = t103 * t281 + t262 * t92 + t264 * t93;
t356 = t26 / 0.2e1 + t384;
t355 = -t222 + t375;
t354 = -t248 + t372;
t353 = t222 * t409 + t223 * t407 + t390;
t27 = t102 * t300 + t283 * t90 + t284 * t91;
t352 = t27 / 0.2e1 + t383;
t28 = t103 * t300 + t283 * t92 + t284 * t93;
t351 = t28 / 0.2e1 + t382;
t29 = t102 * t317 + (t322 * t91 - t324 * t90) * t316;
t350 = t29 / 0.2e1 + t381;
t30 = t103 * t317 + (t322 * t93 - t324 * t92) * t316;
t349 = t30 / 0.2e1 + t380;
t108 = t112 * t281;
t94 = t166 * t281 - t168 * t256 + t170 * t257;
t95 = t167 * t281 - t169 * t256 + t171 * t257;
t31 = t94 * t262 + t95 * t264 + t108;
t348 = t31 / 0.2e1 + t378;
t109 = t112 * t300;
t32 = t94 * t283 + t95 * t284 + t109;
t347 = t32 / 0.2e1 + t377;
t111 = t112 * t317;
t33 = t111 + (t95 * t322 - t94 * t324) * t316;
t346 = t33 / 0.2e1 + t376;
t343 = t316 * (-t287 + t393);
t340 = t316 * (-t287 + t371);
t338 = t60 / 0.2e1 + t58 / 0.2e1 + t72 / 0.2e1 + t71 / 0.2e1;
t337 = t61 / 0.2e1 + t59 / 0.2e1 + t73 / 0.2e1 + t74 / 0.2e1;
t336 = t186 * t409 + t187 * t407 + t353;
t335 = t316 * (-t287 + t354);
t212 = rSges(4,1) * t263 - rSges(4,2) * t262 + rSges(4,3) * t283;
t334 = -t267 + t368;
t275 = t302 * rSges(3,1) + t301 * rSges(3,2) - rSges(3,3) * t407;
t333 = t268 + t389;
t332 = t102 / 0.2e1 + t94 / 0.2e1 + t338;
t331 = t95 / 0.2e1 + t103 / 0.2e1 + t337;
t330 = -t222 + t334;
t206 = Icges(4,5) * t263 - Icges(4,6) * t262 + Icges(4,3) * t283;
t208 = Icges(4,4) * t263 - Icges(4,2) * t262 + Icges(4,6) * t283;
t210 = Icges(4,1) * t263 - Icges(4,4) * t262 + Icges(4,5) * t283;
t117 = t206 * t300 - t208 * t281 + t210 * t282;
t140 = t241 * t283 - t242 * t262 + t243 * t263;
t329 = t117 / 0.2e1 + t140 / 0.2e1 + t332;
t207 = Icges(4,5) * t265 - Icges(4,6) * t264 + Icges(4,3) * t284;
t209 = Icges(4,4) * t265 - Icges(4,2) * t264 + Icges(4,6) * t284;
t211 = Icges(4,1) * t265 - Icges(4,4) * t264 + Icges(4,5) * t284;
t118 = t207 * t300 - t209 * t281 + t211 * t282;
t141 = t241 * t284 - t242 * t264 + t243 * t265;
t328 = t118 / 0.2e1 + t141 / 0.2e1 + t331;
t327 = t223 + t333;
t326 = -t186 + t330;
t325 = t187 + t327;
t310 = rSges(2,1) * t324 - t322 * rSges(2,2);
t309 = -t322 * rSges(2,1) - rSges(2,2) * t324;
t294 = t317 * rSges(3,3) + (rSges(3,1) * t321 + rSges(3,2) * t323) * t316;
t274 = Icges(3,1) * t304 + Icges(3,4) * t303 + Icges(3,5) * t409;
t273 = Icges(3,1) * t302 + Icges(3,4) * t301 - Icges(3,5) * t407;
t272 = Icges(3,4) * t304 + Icges(3,2) * t303 + Icges(3,6) * t409;
t271 = Icges(3,4) * t302 + Icges(3,2) * t301 - Icges(3,6) * t407;
t270 = Icges(3,5) * t304 + Icges(3,6) * t303 + Icges(3,3) * t409;
t261 = t276 + t389;
t260 = -t275 + t368;
t247 = -t317 * t275 - t294 * t407;
t246 = t276 * t317 - t294 * t409;
t245 = t369 * t317;
t227 = (t275 * t322 + t276 * t324) * t316;
t226 = t291 * t409 + t292 * t303 + t293 * t304;
t225 = -t291 * t407 + t301 * t292 + t302 * t293;
t203 = t317 * t270 + (t272 * t323 + t274 * t321) * t316;
t202 = t317 * t269 + (t271 * t323 + t273 * t321) * t316;
t189 = t262 * t221;
t181 = t333 + t213;
t180 = -t212 + t334;
t175 = t281 * t187;
t174 = t264 * t186;
t157 = t213 * t300 - t244 * t284;
t156 = -t212 * t300 + t244 * t283;
t151 = (-t212 - t267) * t317 + t324 * t358;
t150 = t317 * t213 + t322 * t358 + t266;
t148 = t149 * t317;
t143 = t212 * t284 - t213 * t283;
t142 = t149 * t300;
t123 = (t212 * t322 + t213 * t324) * t316 + t390;
t122 = t327 + t173;
t121 = -t172 + t330;
t120 = t173 * t281 - t204 * t264;
t119 = -t172 * t281 + t204 * t262;
t116 = t207 * t284 - t209 * t264 + t211 * t265;
t115 = t206 * t284 - t208 * t264 + t210 * t265;
t114 = t207 * t283 - t209 * t262 + t211 * t263;
t113 = t206 * t283 - t208 * t262 + t210 * t263;
t110 = t172 * t264 - t173 * t262;
t107 = t173 * t300 + t393 * t284 + t215;
t106 = t204 * t283 + t396 * t300 + t228;
t105 = (-t267 + t396) * t317 + t324 * t343;
t104 = t317 * t173 + t322 * t343 + t391;
t101 = t325 + t139;
t100 = -t137 + t326;
t99 = t139 * t256 - t165 * t239;
t98 = -t137 * t256 + t165 * t237;
t97 = t172 * t284 + t214 + (-t173 - t223) * t283;
t96 = (t172 * t322 + t173 * t324) * t316 + t353;
t89 = t137 * t239 - t139 * t237;
t78 = t325 + t400;
t77 = t326 - t402;
t76 = t139 * t281 + t397 * t264 + t175;
t75 = t165 * t262 + t401 * t281 + t189;
t70 = (-t267 + t374) * t317 + t324 * t340;
t69 = t317 * t139 + t322 * t340 + t370;
t68 = t139 * t300 + t371 * t284 + t394;
t67 = t165 * t283 + t374 * t300 + t392;
t66 = t148 + (-t117 * t324 + t118 * t322) * t316;
t65 = t137 * t264 + t399 * t262 + t174;
t64 = t117 * t283 + t118 * t284 + t142;
t63 = -t398 * t239 + t400 * t256;
t62 = t398 * t237 - t402 * t256;
t57 = (t137 * t322 + t139 * t324) * t316 + t336;
t56 = t141 * t317 + (-t115 * t324 + t116 * t322) * t316;
t55 = t140 * t317 + (-t113 * t324 + t114 * t322) * t316;
t54 = t137 * t284 + (-t223 + t399) * t283 + t395;
t45 = t115 * t283 + t116 * t284 + t141 * t300;
t44 = t113 * t283 + t114 * t284 + t140 * t300;
t43 = t372 * t264 + t400 * t281 + t175;
t42 = t398 * t262 + t375 * t281 + t189;
t41 = (-t267 + t355) * t317 + t324 * t335;
t40 = t400 * t317 + t322 * t335 + t370;
t39 = -t400 * t237 + t402 * t239;
t38 = t354 * t284 + t400 * t300 + t394;
t37 = t398 * t283 + t355 * t300 + t392;
t36 = t373 * t262 + t402 * t264 + t174;
t35 = (t402 * t322 + t400 * t324) * t316 + t336;
t34 = t402 * t284 + (-t223 + t373) * t283 + t395;
t136 = [(t121 ^ 2 + t122 ^ 2) * m(5) + m(2) * (t309 ^ 2 + t310 ^ 2) + (t180 ^ 2 + t181 ^ 2) * m(4) + (t260 ^ 2 + t261 ^ 2) * m(3) + t369 + (t77 ^ 2 + t78 ^ 2) * m(7) + (t100 ^ 2 + t101 ^ 2) * m(6) + Icges(2,3) + t149 + t112 + t88 + t87; t148 + (t246 * t261 + t247 * t260) * m(3) + t85 + t86 + t111 + (t150 * t181 + t151 * t180) * m(4) + (t40 * t78 + t41 * t77) * m(7) + (t100 * t70 + t101 * t69) * m(6) + t245 + (t104 * t122 + t105 * t121) * m(5) + ((-t202 / 0.2e1 - t225 / 0.2e1 - t329) * t324 + (t203 / 0.2e1 + t226 / 0.2e1 + t328) * t322) * t316; (t35 ^ 2 + t40 ^ 2 + t41 ^ 2) * m(7) + (t57 ^ 2 + t69 ^ 2 + t70 ^ 2) * m(6) + (t104 ^ 2 + t105 ^ 2 + t96 ^ 2) * m(5) + (t123 ^ 2 + t150 ^ 2 + t151 ^ 2) * m(4) + (t227 ^ 2 + t246 ^ 2 + t247 ^ 2) * m(3) + (t23 + t24 + t33 + t66 + t245) * t317 + ((-t13 - t14 - t29 - t55 + (t301 * t271 + t302 * t273 - t411 * t316) * t407) * t324 + (t15 + t16 + t30 + t56 + ((t272 * t303 + t274 * t304 + (t270 * t322 - t411) * t316) * t322 + (t270 * t407 - t271 * t303 - t301 * t272 - t273 * t304 - t302 * t274) * t324) * t316) * t322 + ((-t202 - t225) * t324 + (t203 + t226) * t322) * t317) * t316; (t37 * t77 + t38 * t78) * m(7) + (t100 * t67 + t101 * t68) * m(6) + t83 + t84 + t109 + (t106 * t121 + t107 * t122) * m(5) + t142 + (t156 * t180 + t157 * t181) * m(4) + t328 * t284 + t329 * t283; (t34 * t35 + t37 * t41 + t38 * t40) * m(7) + (t54 * t57 + t67 * t70 + t68 * t69) * m(6) + (t104 * t107 + t105 * t106 + t96 * t97) * m(5) + (t123 * t143 + t150 * t157 + t151 * t156) * m(4) + (t64 / 0.2e1 + t347) * t317 + (t66 / 0.2e1 + t346) * t300 + (t56 / 0.2e1 + t349) * t284 + (t55 / 0.2e1 + t350) * t283 + ((-t44 / 0.2e1 - t352) * t324 + (t45 / 0.2e1 + t351) * t322) * t316; (t34 ^ 2 + t37 ^ 2 + t38 ^ 2) * m(7) + (t54 ^ 2 + t67 ^ 2 + t68 ^ 2) * m(6) + (t106 ^ 2 + t107 ^ 2 + t97 ^ 2) * m(5) + (t143 ^ 2 + t156 ^ 2 + t157 ^ 2) * m(4) + (t21 + t22 + t32 + t64) * t300 + (t12 + t11 + t28 + t45) * t284 + (t10 + t9 + t27 + t44) * t283; (t42 * t77 + t43 * t78) * m(7) + (t100 * t75 + t101 * t76) * m(6) + t81 + t82 + t108 + (t119 * t121 + t120 * t122) * m(5) + t331 * t264 + t332 * t262; (t35 * t36 + t40 * t43 + t41 * t42) * m(7) + (t65 * t57 + t69 * t76 + t70 * t75) * m(6) + (t104 * t120 + t105 * t119 + t110 * t96) * m(5) + t348 * t317 + t346 * t281 + t349 * t264 + t350 * t262 + (t356 * t322 - t357 * t324) * t316; (t34 * t36 + t37 * t42 + t38 * t43) * m(7) + (t65 * t54 + t67 * t75 + t68 * t76) * m(6) + (t106 * t119 + t107 * t120 + t110 * t97) * m(5) + t348 * t300 + t356 * t284 + t357 * t283 + t347 * t281 + t351 * t264 + t352 * t262; (t36 ^ 2 + t42 ^ 2 + t43 ^ 2) * m(7) + (t65 ^ 2 + t75 ^ 2 + t76 ^ 2) * m(6) + (t110 ^ 2 + t119 ^ 2 + t120 ^ 2) * m(5) + (t20 + t19 + t31) * t281 + (t8 + t7 + t26) * t264 + (t6 + t5 + t25) * t262; (t62 * t77 + t63 * t78) * m(7) + (t100 * t98 + t101 * t99) * m(6) + t79 + t80 + t337 * t239 + t338 * t237; (t35 * t39 + t40 * t63 + t41 * t62) * m(7) + (t57 * t89 + t69 * t99 + t70 * t98) * m(6) + t379 * t317 + t376 * t256 + t380 * t239 + t381 * t237 + (t386 * t322 - t387 * t324) * t316; (t34 * t39 + t37 * t62 + t38 * t63) * m(7) + (t54 * t89 + t67 * t98 + t68 * t99) * m(6) + t379 * t300 + t386 * t284 + t387 * t283 + t377 * t256 + t382 * t239 + t383 * t237; (t36 * t39 + t42 * t62 + t43 * t63) * m(7) + (t65 * t89 + t75 * t98 + t76 * t99) * m(6) + t379 * t281 + t386 * t264 + t387 * t262 + t378 * t256 + t384 * t239 + t385 * t237; (t39 ^ 2 + t62 ^ 2 + t63 ^ 2) * m(7) + (t89 ^ 2 + t98 ^ 2 + t99 ^ 2) * m(6) + (t17 + t18) * t256 + (t3 + t4) * t239 + (t2 + t1) * t237; (t195 * t78 + t197 * t77) * m(7); (t195 * t40 + t197 * t41 + t229 * t35) * m(7); (t195 * t38 + t197 * t37 + t229 * t34) * m(7); (t195 * t43 + t197 * t42 + t229 * t36) * m(7); (t195 * t63 + t197 * t62 + t229 * t39) * m(7); (t195 ^ 2 + t197 ^ 2 + t229 ^ 2) * m(7);];
%% Postprocessing: Reshape Output
% From vec2symmat_6_matlab.m
res = [t136(1) t136(2) t136(4) t136(7) t136(11) t136(16); t136(2) t136(3) t136(5) t136(8) t136(12) t136(17); t136(4) t136(5) t136(6) t136(9) t136(13) t136(18); t136(7) t136(8) t136(9) t136(10) t136(14) t136(19); t136(11) t136(12) t136(13) t136(14) t136(15) t136(20); t136(16) t136(17) t136(18) t136(19) t136(20) t136(21);];
Mq  = res;
