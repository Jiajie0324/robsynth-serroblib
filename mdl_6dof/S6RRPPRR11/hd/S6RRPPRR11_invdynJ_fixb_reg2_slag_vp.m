% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:42:56
% EndTime: 2019-03-09 09:43:29
% DurationCPUTime: 21.29s
% Computational Cost: add. (18351->822), mult. (44360->1074), div. (0->0), fcn. (34530->14), ass. (0->384)
t312 = sin(qJ(6));
t316 = cos(qJ(6));
t309 = cos(pkin(6));
t454 = qJD(1) * t309;
t283 = qJD(2) + t454;
t306 = sin(pkin(11));
t308 = cos(pkin(11));
t307 = sin(pkin(6));
t317 = cos(qJ(2));
t452 = qJD(1) * t317;
t423 = t307 * t452;
t460 = t306 * t283 + t308 * t423;
t516 = cos(qJ(5));
t180 = t516 * t460;
t187 = t283 * t308 - t306 * t423;
t313 = sin(qJ(5));
t110 = t187 * t313 + t180;
t548 = qJD(6) + t110;
t399 = t548 ^ 2;
t439 = qJDD(1) * t309;
t281 = qJDD(2) + t439;
t314 = sin(qJ(2));
t440 = qJD(1) * qJD(2);
t417 = t314 * t440;
t387 = t307 * t417;
t401 = t281 * t306 - t308 * t387;
t436 = qJDD(1) * t317;
t414 = t307 * t436;
t144 = t308 * t414 + t401;
t400 = t281 * t308 - t306 * t414;
t145 = t306 * t387 + t400;
t402 = t516 * t144 + t313 * t145;
t540 = t187 * t516 - t313 * t460;
t542 = qJD(5) * t540;
t55 = t402 + t542;
t53 = qJDD(6) + t55;
t552 = -t312 * t399 + t316 * t53;
t453 = qJD(1) * t314;
t424 = t307 * t453;
t311 = -pkin(2) - qJ(4);
t517 = pkin(3) + pkin(8);
t433 = pkin(1) * t454;
t276 = t317 * t433;
t533 = qJD(3) - t276;
t120 = t311 * t283 + t424 * t517 + t533;
t413 = -qJ(3) * t314 - pkin(1);
t341 = t311 * t317 + t413;
t455 = qJD(1) * t307;
t147 = t341 * t455;
t73 = t308 * t120 - t147 * t306;
t58 = pkin(4) * t424 - pkin(9) * t187 + t73;
t74 = t306 * t120 + t308 * t147;
t60 = -pkin(9) * t460 + t74;
t26 = t313 * t58 + t516 * t60;
t377 = qJD(5) + t424;
t24 = pkin(10) * t377 + t26;
t210 = pkin(8) * t423 + t314 * t433;
t177 = pkin(3) * t423 + t210;
t263 = t283 * qJ(3);
t137 = t263 + qJD(4) + t177;
t99 = pkin(4) * t460 + t137;
t46 = t110 * pkin(5) - pkin(10) * t540 + t99;
t10 = t24 * t316 + t312 * t46;
t448 = qJD(5) * t313;
t54 = qJD(5) * t180 + t313 * t144 - t516 * t145 + t187 * t448;
t512 = pkin(4) * t144;
t432 = pkin(1) * qJD(2) * t309;
t394 = qJD(1) * t432;
t431 = pkin(1) * t439;
t392 = -t314 * t431 - t317 * t394 + (t387 - t414) * pkin(8);
t261 = t281 * qJ(3);
t526 = -t283 * qJD(3) - t261;
t100 = t392 + t526;
t524 = pkin(3) * t414 + qJDD(4);
t83 = -pkin(3) * t387 - t100 + t524;
t59 = t83 + t512;
t16 = pkin(5) * t55 + pkin(10) * t54 + t59;
t416 = t317 * t440;
t437 = qJDD(1) * t314;
t346 = t416 + t437;
t544 = t346 * t307;
t327 = qJDD(5) + t544;
t131 = -pkin(8) * t544 - t314 * t394 + t317 * t431;
t370 = qJDD(3) - t131;
t75 = pkin(3) * t544 - qJD(4) * t283 + t281 * t311 + t370;
t256 = pkin(2) * t387;
t487 = qJ(3) * t317;
t372 = qJ(4) * t314 - t487;
t449 = qJD(3) * t314;
t321 = qJD(2) * t372 - qJD(4) * t317 - t449;
t79 = t256 + (qJD(1) * t321 + qJDD(1) * t341) * t307;
t40 = -t306 * t79 + t308 * t75;
t29 = pkin(4) * t544 - pkin(9) * t145 + t40;
t41 = t306 * t75 + t308 * t79;
t34 = -pkin(9) * t144 + t41;
t419 = qJD(5) * t516;
t356 = -t313 * t29 - t516 * t34 - t58 * t419 + t448 * t60;
t5 = pkin(10) * t327 - t356;
t2 = -qJD(6) * t10 + t316 * t16 - t312 * t5;
t551 = t10 * t548 + t2;
t376 = t24 * t312 - t316 * t46;
t1 = -t376 * qJD(6) + t312 * t16 + t316 * t5;
t539 = t376 * t548 + t1;
t550 = t110 ^ 2;
t549 = t110 * t377;
t547 = t540 ^ 2;
t351 = t316 * t377;
t92 = t312 * t540 - t351;
t546 = t540 * t92;
t94 = t312 * t377 + t316 * t540;
t545 = t540 * t94;
t543 = t424 * t540;
t352 = -t306 * t516 - t313 * t308;
t170 = t352 * t424;
t220 = t352 * qJD(5);
t462 = t170 + t220;
t390 = t308 * t424;
t391 = t306 * t424;
t169 = t313 * t391 - t390 * t516;
t221 = -t306 * t448 + t308 * t419;
t461 = t221 - t169;
t506 = -pkin(9) + t311;
t241 = t506 * t306;
t242 = t506 * t308;
t353 = -t313 * t241 + t242 * t516;
t342 = t307 * (-pkin(9) * t306 * t314 + pkin(4) * t317);
t278 = pkin(2) * t424;
t172 = t372 * t455 + t278;
t97 = -t172 * t306 + t308 * t177;
t82 = qJD(1) * t342 + t97;
t98 = t308 * t172 + t306 * t177;
t89 = pkin(9) * t390 + t98;
t490 = qJD(4) * t352 + qJD(5) * t353 - t313 * t82 - t516 * t89;
t451 = qJD(2) * t306;
t541 = -t460 + t451;
t295 = pkin(4) * t308 + pkin(3);
t474 = t307 * t314;
t355 = (-pkin(8) - t295) * t474;
t445 = -qJD(1) * t355 + t533;
t538 = -pkin(10) * t423 + t490;
t537 = pkin(5) * t461 - pkin(10) * t462 + t445;
t302 = t307 ^ 2;
t532 = 0.2e1 * t302;
t163 = t241 * t516 + t313 * t242;
t231 = -t313 * t306 + t516 * t308;
t488 = qJD(4) * t231 + qJD(5) * t163 - t313 * t89 + t516 * t82;
t303 = pkin(11) + qJ(5);
t298 = cos(t303);
t315 = sin(qJ(1));
t464 = t315 * t317;
t318 = cos(qJ(1));
t465 = t314 * t318;
t223 = t309 * t465 + t464;
t463 = t317 * t318;
t467 = t314 * t315;
t225 = -t309 * t467 + t463;
t381 = -g(1) * t225 - g(2) * t223;
t434 = g(3) * t474;
t335 = -t381 + t434;
t530 = t335 * t298;
t222 = -t309 * t463 + t467;
t300 = t306 * pkin(4);
t310 = -pkin(9) - qJ(4);
t528 = t222 * t310 + t223 * t300;
t224 = t309 * t464 + t465;
t527 = t224 * t310 + t225 * t300;
t486 = qJD(6) * t94;
t32 = -t312 * t54 - t316 * t327 + t486;
t515 = pkin(1) * t314;
t291 = t309 * t515;
t472 = t307 * t317;
t227 = pkin(8) * t472 + t291;
t212 = qJD(2) * t227;
t395 = t517 * t474;
t444 = qJD(1) * t395 + t533;
t365 = -pkin(2) * t317 + t413;
t181 = t365 * t455;
t525 = t181 * t424 + qJDD(3);
t411 = -t516 * t29 + t313 * t34;
t8 = -qJD(5) * t26 - t411;
t523 = t110 * t461 - t352 * t55;
t522 = -t231 * t54 + t462 * t540;
t297 = sin(t303);
t471 = t307 * t318;
t358 = -t222 * t297 + t298 * t471;
t521 = t223 * t316 + t312 * t358;
t450 = qJD(2) * t317;
t520 = -t311 * t450 + t314 * (qJD(4) - t137);
t519 = -t223 * t312 + t316 * t358;
t218 = -t306 * t472 + t308 * t309;
t435 = pkin(4) * t474;
t285 = pkin(8) * t474;
t514 = pkin(1) * t317;
t426 = -pkin(2) - t514;
t158 = pkin(3) * t474 + t285 + (-qJ(4) + t426) * t309;
t458 = pkin(2) * t472 + qJ(3) * t474;
t168 = (-qJ(4) * t317 - pkin(1)) * t307 - t458;
t95 = t308 * t158 - t168 * t306;
t69 = -pkin(9) * t218 + t435 + t95;
t217 = t306 * t309 + t308 * t472;
t96 = t306 * t158 + t308 * t168;
t77 = -pkin(9) * t217 + t96;
t502 = t313 * t69 + t516 * t77;
t422 = qJD(2) * t474;
t273 = pkin(2) * t422;
t123 = t307 * t321 + t273;
t160 = -qJD(4) * t309 + (t472 * t517 + t291) * qJD(2);
t80 = -t123 * t306 + t308 * t160;
t63 = qJD(2) * t342 + t80;
t81 = t308 * t123 + t306 * t160;
t68 = pkin(9) * t308 * t422 + t81;
t14 = -qJD(5) * t502 - t313 * t68 + t516 * t63;
t25 = -t313 * t60 + t516 * t58;
t363 = g(1) * t224 + g(2) * t222 - g(3) * t472;
t518 = t231 * t8 + t25 * t462 + t26 * t461 + t352 * t356 - t363;
t513 = pkin(2) * t281;
t509 = g(3) * t307;
t507 = t94 * t92;
t446 = qJD(6) * t316;
t505 = -t312 * t32 - t92 * t446;
t293 = qJ(3) + t300;
t139 = -pkin(5) * t352 - pkin(10) * t231 + t293;
t85 = t139 * t316 - t163 * t312;
t504 = qJD(6) * t85 + t312 * t537 + t316 * t538;
t86 = t139 * t312 + t163 * t316;
t503 = -qJD(6) * t86 - t312 * t538 + t316 * t537;
t447 = qJD(6) * t312;
t31 = -qJD(6) * t351 - t312 * t327 + t316 * t54 + t447 * t540;
t498 = t31 * t312;
t497 = t312 * t53;
t496 = t312 * t92;
t495 = t312 * t94;
t494 = t316 * t92;
t493 = t316 * t94;
t492 = t32 * t316;
t491 = t53 * t352;
t489 = pkin(5) * t423 + t488;
t485 = t540 * t110;
t484 = t144 * t306;
t483 = t145 * t308;
t482 = t187 * t306;
t479 = t231 * t312;
t478 = t231 * t316;
t477 = t297 * t312;
t476 = t297 * t316;
t475 = t302 * qJD(1) ^ 2;
t473 = t307 * t315;
t470 = t310 * t317;
t469 = t312 * t314;
t466 = t314 * t316;
t277 = t317 * t432;
t296 = t309 * qJD(3);
t459 = t277 + t296;
t457 = t318 * pkin(1) + pkin(8) * t473;
t304 = t314 ^ 2;
t305 = t317 ^ 2;
t456 = t304 - t305;
t209 = pkin(8) * t424 - t276;
t443 = qJD(3) + t209;
t438 = qJDD(1) * t311;
t430 = t304 * t475;
t429 = t317 * t475;
t428 = t307 * t469;
t265 = t307 * t466;
t427 = t306 * t435 + t458;
t200 = -t309 * qJ(3) - t227;
t421 = t307 * t450;
t418 = pkin(1) * t532;
t412 = -pkin(1) * t315 + pkin(8) * t471;
t409 = t460 * t308;
t213 = t222 * pkin(2);
t408 = qJ(3) * t223 - t213;
t215 = t224 * pkin(2);
t407 = qJ(3) * t225 - t215;
t124 = -t169 * t312 + t283 * t316;
t406 = -t221 * t312 - t124;
t125 = t169 * t316 + t283 * t312;
t405 = t221 * t316 - t125;
t126 = -t170 * t312 - t316 * t423;
t404 = -t220 * t312 + t126;
t127 = -t170 * t316 + t312 * t423;
t403 = -t220 * t316 + t127;
t398 = t548 * t316;
t397 = qJD(1) * (qJD(2) - t283);
t396 = t281 + t439;
t393 = t308 * t430;
t171 = pkin(3) * t472 - t200;
t389 = t313 * t422;
t388 = t302 * t304 * t440;
t385 = t314 * t416;
t384 = pkin(5) * t297 - pkin(10) * t298;
t148 = -t224 * t298 + t297 * t473;
t357 = t222 * t298 + t297 * t471;
t383 = g(1) * t357 + g(2) * t148;
t382 = g(1) * t222 - g(2) * t224;
t380 = g(1) * t223 - g(2) * t225;
t379 = g(1) * t318 + g(2) * t315;
t375 = t41 * t306 + t40 * t308;
t36 = pkin(10) * t474 + t502;
t121 = pkin(4) * t217 + t171;
t128 = t217 * t516 + t218 * t313;
t129 = -t313 * t217 + t218 * t516;
t56 = pkin(5) * t128 - pkin(10) * t129 + t121;
t20 = t312 * t56 + t316 * t36;
t19 = -t312 * t36 + t316 * t56;
t374 = -t494 + t495;
t373 = t494 + t495;
t371 = t516 * t422;
t201 = -pkin(1) * t307 - t458;
t369 = qJD(2) * (-qJD(1) * t201 - t181);
t368 = qJD(2) * (t283 + t454);
t211 = -pkin(8) * t422 + t277;
t367 = t381 + t83;
t366 = t409 * t474;
t362 = t225 * pkin(2) + qJ(3) * t224 + t457;
t38 = -t313 * t77 + t516 * t69;
t359 = -t31 * t316 - t447 * t94;
t105 = t129 * t316 + t428;
t13 = t313 * t63 + t69 * t419 - t448 * t77 + t516 * t68;
t23 = -pkin(5) * t377 - t25;
t354 = -pkin(10) * t53 + t23 * t548;
t350 = -qJ(3) * t450 - t449;
t103 = t256 + (qJD(1) * t350 + qJDD(1) * t365) * t307;
t178 = t307 * t350 + t273;
t349 = qJD(1) * t178 + qJDD(1) * t201 + t103;
t348 = -t306 * t430 + t308 * t544;
t347 = t187 * t308 - t306 * t460;
t345 = g(1) * t148 - g(2) * t357 - g(3) * (-t297 * t309 - t298 * t472);
t149 = t224 * t297 + t298 * t473;
t193 = -t297 * t472 + t298 * t309;
t344 = -g(1) * t149 + g(2) * t358 - g(3) * t193;
t343 = -t223 * pkin(2) - qJ(3) * t222 + t412;
t340 = t212 * t283 - t380;
t339 = t231 * t446 - t404;
t338 = -t231 * t447 - t403;
t337 = (-t306 * t73 + t308 * t74) * t474;
t6 = -pkin(5) * t327 - t8;
t336 = t345 - t6;
t332 = t381 - t392;
t331 = t224 * t300 - t225 * t310 + t295 * t473 + t362;
t330 = t231 * t327 + t377 * t462;
t329 = t363 + t131;
t155 = (t317 * t397 + t437) * t307;
t328 = -t222 * t300 + t223 * t310 + t295 * t471 + t343;
t122 = qJD(2) * t355 + t459;
t325 = t332 - t526;
t324 = pkin(10) * qJD(6) * t548 - t336;
t323 = t1 * t316 - t2 * t312 + (-t10 * t312 + t316 * t376) * qJD(6);
t322 = t210 * t283 + t329;
t320 = (-pkin(3) * t440 - g(3)) * t474 + t325 + t524;
t250 = t314 * t429;
t244 = t281 * t309;
t226 = t309 * t514 - t285;
t219 = t456 * t475;
t208 = -qJ(3) * t423 + t278;
t203 = t309 * t426 + t285;
t195 = (qJDD(1) * t305 - 0.2e1 * t385) * t302;
t194 = (qJDD(1) * t304 + 0.2e1 * t385) * t302;
t182 = -t211 - t296;
t173 = -t263 - t210;
t167 = -pkin(2) * t283 + t443;
t159 = -qJD(2) * t395 + t459;
t156 = (t314 * t436 - t440 * t456) * t532;
t154 = (t314 * t397 - t436) * t307;
t118 = t370 - t513;
t108 = (t314 * t396 + t317 * t368) * t307;
t107 = (t314 * t368 - t317 * t396) * t307;
t104 = t129 * t312 - t265;
t102 = t149 * t316 + t225 * t312;
t101 = -t149 * t312 + t225 * t316;
t91 = qJD(5) * t129 + t306 * t389 - t308 * t371;
t90 = t217 * t419 + t218 * t448 - t306 * t371 - t308 * t389;
t61 = pkin(5) * t540 + pkin(10) * t110;
t50 = qJD(6) * t105 - t312 * t90 - t316 * t421;
t49 = -qJD(6) * t265 + t129 * t447 - t312 * t421 + t316 * t90;
t37 = pkin(5) * t91 + pkin(10) * t90 + t122;
t35 = -pkin(5) * t474 - t38;
t18 = t25 * t316 + t312 * t61;
t17 = -t25 * t312 + t316 * t61;
t12 = -pkin(5) * t421 - t14;
t11 = pkin(10) * t421 + t13;
t4 = -qJD(6) * t20 - t312 * t11 + t316 * t37;
t3 = qJD(6) * t19 + t316 * t11 + t312 * t37;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t315 - g(2) * t318, t379, 0, 0, t194, t156, t108, t195, -t107, t244, t131 * t309 + t226 * t281 + (-t417 + t436) * t418 - t340, -t211 * t283 - t227 * t281 + t309 * t392 - t346 * t418 - t382 ((qJD(2) * t209 + qJDD(1) * t227 - t392 + (-qJD(2) * t226 + t211) * qJD(1)) * t317 + (-qJD(2) * t210 - qJDD(1) * t226 - t131) * t314 - t379) * t307, t302 * qJDD(1) * pkin(1) ^ 2 - g(1) * t412 - g(2) * t457 + t131 * t226 + t209 * t212 + t210 * t211 - t227 * t392, t244, -t108, t107, t194, t156, t195 ((qJD(2) * t167 - qJDD(1) * t200 - t100 + (qJD(2) * t203 - t182) * qJD(1)) * t317 + (qJD(2) * t173 + qJDD(1) * t203 + t118 + (qJD(2) * t200 + t212) * qJD(1)) * t314 - t379) * t307, t118 * t309 + t203 * t281 + (t314 * t369 + t317 * t349) * t307 + t340, -t100 * t309 - t182 * t283 - t200 * t281 + (-t314 * t349 + t317 * t369) * t307 + t382, -g(1) * t343 - g(2) * t362 + t100 * t200 + t103 * t201 + t118 * t203 + t167 * t212 + t173 * t182 + t181 * t178, t145 * t218 + t422 * t482, -t218 * t144 - t145 * t217 + t347 * t422, t306 * t388 + ((qJDD(1) * t218 + t145) * t314 + (qJD(1) * t218 + t187) * t450) * t307, -qJD(2) * t366 + t144 * t217, t308 * t388 + ((-qJDD(1) * t217 - t144) * t314 + (-qJD(1) * t217 - t460) * t450) * t307, t194, t159 * t460 + t171 * t144 + t83 * t217 + t382 * t306 + (-t379 * t308 + (qJD(1) * t95 + t73) * t450 + (-qJD(2) * t137 * t308 + qJD(1) * t80 + qJDD(1) * t95 + t40) * t314) * t307, t171 * t145 + t159 * t187 + t83 * t218 + t382 * t308 + (t379 * t306 + (-qJD(1) * t96 - t74) * t450 + (-qJD(1) * t81 - qJDD(1) * t96 + t137 * t451 - t41) * t314) * t307, qJD(2) * t337 - t96 * t144 - t95 * t145 - t80 * t187 - t41 * t217 - t40 * t218 - t460 * t81 + t380, t41 * t96 + t74 * t81 + t40 * t95 + t73 * t80 + t83 * t171 + t137 * t159 - g(1) * (pkin(3) * t471 - qJ(4) * t223 + t343) - g(2) * (pkin(3) * t473 + qJ(4) * t225 + t362) -t129 * t54 - t540 * t90, t110 * t90 + t128 * t54 - t129 * t55 - t540 * t91, -t90 * qJD(5) + t129 * qJDD(5) + ((qJD(1) * t129 + t540) * t450 + (-qJD(1) * t90 + qJDD(1) * t129 - t54) * t314) * t307, t110 * t91 + t128 * t55, -t91 * qJD(5) - t128 * qJDD(5) + ((-qJD(1) * t128 - t110) * t450 + (-qJD(1) * t91 - qJDD(1) * t128 - t55) * t314) * t307 (qJD(5) * t450 + (qJDD(5) + (0.2e1 * t416 + t437) * t307) * t314) * t307, -g(1) * t358 - g(2) * t149 + t14 * qJD(5) + t38 * qJDD(5) + t122 * t110 + t121 * t55 + t59 * t128 + t99 * t91 + ((qJD(1) * t38 + t25) * t450 + (qJD(1) * t14 + qJDD(1) * t38 + t8) * t314) * t307, -t13 * qJD(5) - t502 * qJDD(5) + t122 * t540 - t121 * t54 + t59 * t129 - t99 * t90 + ((-qJD(1) * t502 - t26) * t450 + (-qJD(1) * t13 - qJDD(1) * t502 + t356) * t314) * t307 + t383, -t110 * t13 + t128 * t356 - t129 * t8 - t14 * t540 + t25 * t90 - t26 * t91 + t38 * t54 - t502 * t55 + t380, -g(1) * t328 - g(2) * t331 + t59 * t121 + t99 * t122 + t26 * t13 + t25 * t14 - t356 * t502 + t8 * t38, -t105 * t31 - t49 * t94, t104 * t31 - t105 * t32 + t49 * t92 - t50 * t94, t105 * t53 - t128 * t31 - t49 * t548 + t91 * t94, t104 * t32 + t50 * t92, -t104 * t53 - t128 * t32 - t50 * t548 - t91 * t92, t128 * t53 + t548 * t91, -g(1) * t519 - g(2) * t102 + t6 * t104 + t12 * t92 + t2 * t128 + t19 * t53 + t23 * t50 + t35 * t32 - t376 * t91 + t4 * t548, g(1) * t521 - g(2) * t101 - t1 * t128 - t10 * t91 + t6 * t105 + t12 * t94 - t20 * t53 - t23 * t49 - t3 * t548 - t35 * t31, -t1 * t104 - t10 * t50 - t105 * t2 + t19 * t31 - t20 * t32 - t3 * t92 - t376 * t49 - t4 * t94 - t383, t1 * t20 + t10 * t3 + t2 * t19 - t376 * t4 + t6 * t35 + t23 * t12 - g(1) * (pkin(5) * t358 + pkin(10) * t357 + t328) - g(2) * (pkin(5) * t149 + pkin(10) * t148 + t331); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, t219, t155, t250, -t154, t281, t475 * t515 + t322, pkin(1) * t429 - t209 * t283 - t332 + t434, 0, 0, t281, -t155, t154, -t250, t219, t250 ((-pkin(2) * t314 + t487) * qJDD(1) + ((-qJ(3) * qJD(2) - t173 - t210) * t314 + (-pkin(2) * qJD(2) - t167 + t443) * t317) * qJD(1)) * t307, -t208 * t423 - t322 - 0.2e1 * t513 + t525, t261 + t443 * t283 + (-g(3) * t314 + (t181 * t317 + t208 * t314) * qJD(1)) * t307 + t325, -t118 * pkin(2) - g(1) * t407 - g(2) * t408 - g(3) * t458 - t100 * qJ(3) - t167 * t210 - t173 * t443 - t181 * t208, -t187 * t391 + t483, -t308 * t144 - t145 * t306 - t347 * t424, -t187 * t423 + t348, qJD(1) * t366 + t484, -t393 + (-t306 * t437 - t452 * t541) * t307, -t250, qJ(3) * t144 + t367 * t306 + ((-g(3) * t306 + t308 * t438) * t314 + (-t308 * t520 - t314 * t97 - t317 * t73) * qJD(1)) * t307 + t444 * t460, qJ(3) * t145 + t444 * t187 + t367 * t308 + ((-g(3) * t308 - t306 * t438) * t314 + (t306 * t520 + t314 * t98 + t317 * t74) * qJD(1)) * t307, t98 * t460 + t97 * t187 + (qJD(4) * t187 - t145 * t311 - t424 * t74 - t40) * t308 + (qJD(4) * t460 - t311 * t144 + t424 * t73 - t41) * t306 + t363, t83 * qJ(3) - t74 * t98 - t73 * t97 - g(1) * (-qJ(4) * t224 + t407) - g(2) * (-qJ(4) * t222 + t408) - g(3) * (qJ(4) * t472 + t458) + t375 * t311 + t444 * t137 + (-t306 * t74 - t308 * t73) * qJD(4), t522, -t110 * t462 - t231 * t55 - t352 * t54 - t461 * t540, -t423 * t540 + t330, t523, t352 * qJDD(5) - t461 * qJD(5) + (t352 * t437 + ((qJD(2) * t352 + t110) * t317 - t461 * t314) * qJD(1)) * t307, -t377 * t423, t353 * qJDD(5) - t59 * t352 + t293 * t55 + t461 * t99 - t488 * qJD(5) + (t353 * t437 + ((qJD(2) * t353 - t25) * t317 - t488 * t314) * qJD(1)) * t307 + t445 * t110 - t335 * t297, -t163 * qJDD(5) + t59 * t231 - t293 * t54 + t462 * t99 - t490 * qJD(5) + (-t163 * t437 + ((-qJD(2) * t163 + t26) * t317 - t490 * t314) * qJD(1)) * t307 + t445 * t540 - t530, -t110 * t490 - t163 * t55 + t353 * t54 + t488 * t540 - t518, -t356 * t163 + t8 * t353 + t59 * t293 - g(1) * (t407 + t527) - g(2) * (t408 + t528) - g(3) * (-t307 * t470 + t427) + t445 * t99 + t490 * t26 - t488 * t25, -t31 * t478 + t338 * t94, t126 * t94 + t127 * t92 - t373 * t220 + (t498 - t492 + (-t493 + t496) * qJD(6)) * t231, t31 * t352 + t338 * t548 + t461 * t94 + t478 * t53, t32 * t479 + t339 * t92, t32 * t352 - t339 * t548 - t461 * t92 - t479 * t53, t461 * t548 - t491, t85 * t53 - t2 * t352 - t353 * t32 + t6 * t479 - g(1) * (-t224 * t312 + t225 * t476) - g(2) * (-t222 * t312 + t223 * t476) + t489 * t92 - t461 * t376 - (t297 * t466 + t312 * t317) * t509 + t503 * t548 + t339 * t23, -t86 * t53 + t1 * t352 + t353 * t31 + t6 * t478 - g(1) * (-t224 * t316 - t225 * t477) - g(2) * (-t222 * t316 - t223 * t477) + t489 * t94 - (-t297 * t469 + t316 * t317) * t509 - t504 * t548 - t461 * t10 + t338 * t23, t31 * t85 - t32 * t86 - t503 * t94 - t504 * t92 - t403 * t376 + t404 * t10 + t530 + (-t1 * t312 - t2 * t316 + (-t10 * t316 - t312 * t376) * qJD(6)) * t231, t1 * t86 + t2 * t85 - t6 * t353 - g(1) * (-t215 + t527) - g(2) * (-t213 + t528) - g(3) * t427 - t503 * t376 - (t314 * t384 - t470) * t509 + t489 * t23 + t504 * t10 + t381 * (qJ(3) + t384); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, t250 + t281, -t283 ^ 2 - t430, t173 * t283 - t329 - t513 + t525, 0, 0, 0, 0, 0, 0, -t283 * t460 + t348, -t187 * t283 - t306 * t544 - t393, -t484 - t483 + (-t409 + t482) * t424, qJD(1) * t337 - t137 * t283 - t363 + t375, 0, 0, 0, 0, 0, 0, -t283 * t110 + t330, -t283 * t540 + t327 * t352 - t461 * t377, -t522 - t523, -t283 * t99 + t518, 0, 0, 0, 0, 0, 0, t312 * t491 - t231 * t32 - t462 * t92 + (t352 * t446 + t406) * t548, t316 * t491 + t231 * t31 - t462 * t94 + (-t352 * t447 - t405) * t548, t124 * t94 + t125 * t92 + t374 * t221 - (-t498 - t492 + (t493 + t496) * qJD(6)) * t352, t10 * t405 - t23 * t462 - t231 * t6 - t323 * t352 - t376 * t406 - t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t187 * t453 + t308 * t436) * t307 + t401, t424 * t541 + t400, -t187 ^ 2 - t460 ^ 2, t187 * t73 + t460 * t74 + t320, 0, 0, 0, 0, 0, 0, t402 + 0.2e1 * t542 + t543, -t54 - t549, -t547 - t550, t110 * t26 + t25 * t540 + t320 + t512, 0, 0, 0, 0, 0, 0, -t546 + t552, -t316 * t399 - t497 - t545, t110 * t374 - t359 + t505, -t540 * t23 + t312 * t539 + t316 * t551 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t485, t547 - t550, -t54 + t549, -t485, -t402 + t543, t327, t26 * t424 - t540 * t99 + t345 - t411, t99 * t110 + t25 * t377 - t344 + t356, 0, 0, t398 * t94 - t498, -t110 * t373 + t359 + t505, t398 * t548 + t497 - t545, t496 * t548 - t492, t546 + t552, -t548 * t540, -pkin(5) * t32 - t17 * t548 - t26 * t92 + t312 * t354 - t316 * t324 + t376 * t540, pkin(5) * t31 + t10 * t540 + t18 * t548 - t26 * t94 + t312 * t324 + t316 * t354, t17 * t94 + t18 * t92 + ((-t32 + t486) * pkin(10) + t539) * t316 + ((qJD(6) * t92 - t31) * pkin(10) - t551) * t312 + t344, -t10 * t18 + t376 * t17 - t23 * t26 + t336 * pkin(5) + (t323 + t344) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507, -t92 ^ 2 + t94 ^ 2, t548 * t92 - t31, -t507, t548 * t94 - t32, t53, -t23 * t94 - g(1) * t101 - g(2) * t521 - g(3) * (-t193 * t312 + t265) + t551, t23 * t92 + g(1) * t102 - g(2) * t519 - g(3) * (-t193 * t316 - t428) - t539, 0, 0;];
tau_reg  = t7;
