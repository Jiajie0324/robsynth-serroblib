% Calculate vector of inverse dynamics joint torques for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPPRR11_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPPRR11_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRPPRR11_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:43:10
% EndTime: 2019-03-09 09:43:36
% DurationCPUTime: 20.19s
% Computational Cost: add. (8197->706), mult. (19900->934), div. (0->0), fcn. (15804->14), ass. (0->307)
t687 = sin(pkin(6));
t689 = cos(pkin(6));
t803 = qJDD(1) * t689;
t662 = qJDD(2) + t803;
t686 = sin(pkin(11));
t688 = cos(pkin(11));
t693 = sin(qJ(2));
t804 = qJD(1) * qJD(2);
t782 = t693 * t804;
t755 = t687 * t782;
t768 = t662 * t686 - t688 * t755;
t696 = cos(qJ(2));
t800 = qJDD(1) * t696;
t779 = t688 * t800;
t554 = t687 * t779 + t768;
t780 = t687 * t800;
t767 = t662 * t688 - t686 * t780;
t555 = t686 * t755 + t767;
t692 = sin(qJ(5));
t865 = cos(qJ(5));
t769 = t865 * t554 + t692 * t555;
t819 = qJD(1) * t689;
t664 = qJD(2) + t819;
t817 = qJD(1) * t696;
t787 = t687 * t817;
t592 = t664 * t688 - t686 * t787;
t827 = t686 * t664 + t688 * t787;
t881 = t592 * t865 - t692 * t827;
t475 = qJD(5) * t881 + t769;
t473 = qJDD(6) + t475;
t695 = cos(qJ(6));
t471 = t695 * t473;
t691 = sin(qJ(6));
t585 = t865 * t827;
t526 = -t592 * t692 - t585;
t522 = qJD(6) - t526;
t885 = t522 ^ 2;
t886 = -t691 * t885 + t471;
t818 = qJD(1) * t693;
t788 = t687 * t818;
t639 = qJD(5) + t788;
t884 = t526 * t639;
t783 = qJD(5) * t865;
t883 = t865 * t788 + t783;
t812 = qJD(5) * t692;
t882 = -t692 * t788 - t812;
t797 = pkin(1) * t819;
t826 = -pkin(8) * t788 + t696 * t797;
t806 = qJD(3) - t826;
t829 = -t686 * t883 + t882 * t688;
t828 = t882 * t686 + t688 * t883;
t807 = pkin(3) * t788 + t806;
t781 = t696 * t804;
t801 = qJDD(1) * t693;
t720 = t781 + t801;
t707 = t720 * t687;
t844 = t687 * t693;
t666 = pkin(8) * t844;
t790 = -pkin(1) * t696 - pkin(2);
t564 = pkin(3) * t844 + t666 + (-qJ(4) + t790) * t689;
t842 = t687 * t696;
t824 = pkin(2) * t842 + qJ(3) * t844;
t574 = (-qJ(4) * t696 - pkin(1)) * t687 - t824;
t511 = t688 * t564 - t574 * t686;
t610 = -t686 * t842 + t688 * t689;
t489 = pkin(4) * t844 - pkin(9) * t610 + t511;
t512 = t686 * t564 + t688 * t574;
t609 = t686 * t689 + t688 * t842;
t497 = -pkin(9) * t609 + t512;
t878 = t692 * t489 + t865 * t497;
t658 = pkin(2) * t788;
t858 = qJ(3) * t696;
t747 = qJ(4) * t693 - t858;
t820 = qJD(1) * t687;
t578 = t747 * t820 + t658;
t654 = pkin(8) * t787;
t603 = t693 * t797 + t654;
t583 = pkin(3) * t787 + t603;
t513 = -t578 * t686 + t688 * t583;
t715 = (-pkin(9) * t686 * t693 + pkin(4) * t696) * t687;
t502 = qJD(1) * t715 + t513;
t514 = t688 * t578 + t686 * t583;
t505 = pkin(9) * t688 * t788 + t514;
t726 = -t686 * t865 - t692 * t688;
t690 = -pkin(2) - qJ(4);
t860 = -pkin(9) + t690;
t626 = t860 * t686;
t627 = t860 * t688;
t727 = -t692 * t626 + t627 * t865;
t877 = -qJD(4) * t726 - qJD(5) * t727 + t692 * t502 + t865 * t505;
t569 = t626 * t865 + t692 * t627;
t838 = t692 * t686;
t725 = t688 * t865 - t838;
t876 = -qJD(4) * t725 - qJD(5) * t569 - t502 * t865 + t692 * t505;
t640 = t662 * qJ(3);
t875 = -t664 * qJD(3) - t640;
t541 = -t692 * t609 + t610 * t865;
t836 = t693 * t695;
t644 = t687 * t836;
t874 = -t541 * t691 + t644;
t789 = -pkin(4) * t688 - pkin(3);
t808 = -t788 * t789 + t806;
t778 = -qJ(3) * t693 - pkin(1);
t737 = -pkin(2) * t696 + t778;
t586 = t737 * t820;
t873 = t586 * t788 + qJDD(3);
t872 = pkin(3) * t780 + qJDD(4);
t600 = qJDD(5) + t707;
t534 = t664 * t690 + t807;
t714 = t690 * t696 + t778;
t557 = t714 * t820;
t493 = t688 * t534 - t557 * t686;
t478 = pkin(4) * t788 - pkin(9) * t592 + t493;
t494 = t686 * t534 + t688 * t557;
t480 = -pkin(9) * t827 + t494;
t453 = t692 * t478 + t480 * t865;
t796 = pkin(1) * qJD(2) * t689;
t761 = qJD(1) * t796;
t795 = pkin(1) * t803;
t758 = qJD(2) * t654 + qJDD(1) * t666 + t693 * t761 - t696 * t795;
t740 = qJDD(3) + t758;
t495 = pkin(3) * t707 - qJD(4) * t664 + t662 * t690 + t740;
t634 = pkin(2) * t755;
t813 = qJD(3) * t693;
t699 = qJD(2) * t747 - qJD(4) * t696 - t813;
t499 = t634 + (qJD(1) * t699 + qJDD(1) * t714) * t687;
t464 = t688 * t495 - t499 * t686;
t456 = pkin(4) * t707 - pkin(9) * t555 + t464;
t465 = t686 * t495 + t688 * t499;
t460 = -pkin(9) * t554 + t465;
t701 = -qJD(5) * t453 + t865 * t456 - t692 * t460;
t443 = -t600 * pkin(5) - t701;
t694 = sin(qJ(1));
t834 = t694 * t696;
t697 = cos(qJ(1));
t835 = t693 * t697;
t615 = t689 * t834 + t835;
t683 = pkin(11) + qJ(5);
t677 = sin(t683);
t678 = cos(t683);
t843 = t687 * t694;
t558 = t615 * t678 - t677 * t843;
t841 = t687 * t697;
t833 = t696 * t697;
t837 = t693 * t694;
t613 = -t689 * t833 + t837;
t852 = t613 * t678;
t717 = g(1) * t558 + g(2) * (t677 * t841 + t852) + g(3) * (-t677 * t689 - t678 * t842);
t871 = t522 * (pkin(5) * t881 + pkin(10) * t522) + t443 + t717;
t614 = t689 * t835 + t834;
t733 = -t613 * t677 + t678 * t841;
t870 = t614 * t695 + t691 * t733;
t642 = t664 * qJ(3);
t547 = t642 + qJD(4) + t583;
t814 = qJD(2) * t696;
t869 = -t690 * t814 + t693 * (qJD(4) - t547);
t868 = -t614 * t691 + t695 * t733;
t815 = qJD(2) * t693;
t786 = t687 * t815;
t653 = pkin(2) * t786;
t537 = t687 * t699 + t653;
t864 = pkin(1) * t693;
t672 = t689 * t864;
t866 = pkin(3) + pkin(8);
t566 = -qJD(4) * t689 + (t842 * t866 + t672) * qJD(2);
t500 = -t537 * t686 + t688 * t566;
t483 = qJD(2) * t715 + t500;
t501 = t688 * t537 + t686 * t566;
t756 = t688 * t786;
t488 = pkin(9) * t756 + t501;
t867 = -qJD(5) * t878 + t483 * t865 - t692 * t488;
t863 = pkin(2) * t662;
t862 = g(1) * t697;
t861 = g(3) * t687;
t859 = MDP(7) * t687;
t474 = -qJD(5) * t585 - t692 * t554 + t865 * t555 - t592 * t812;
t810 = qJD(6) * t695;
t791 = t695 * t474 + t691 * t600 + t639 * t810;
t811 = qJD(6) * t691;
t457 = -t811 * t881 + t791;
t857 = t457 * t691;
t854 = t881 * t691;
t508 = -t695 * t639 + t854;
t856 = t508 * t522;
t510 = t639 * t691 + t695 * t881;
t855 = t510 * t522;
t849 = t725 * t695;
t848 = t662 * t689;
t847 = t677 * t691;
t846 = t677 * t695;
t682 = t687 ^ 2;
t845 = t682 * qJD(1) ^ 2;
t840 = t691 * t473;
t839 = t691 * t693;
t674 = t686 * pkin(4) + qJ(3);
t830 = pkin(5) * t787 - t876;
t657 = t696 * t796;
t676 = t689 * qJD(3);
t825 = t657 + t676;
t823 = pkin(8) * t842 + t672;
t684 = t693 ^ 2;
t822 = -t696 ^ 2 + t684;
t821 = MDP(11) * t687;
t816 = qJD(2) * t686;
t809 = qJD(2) - t664;
t802 = qJDD(1) * t690;
t799 = 0.2e1 * t682;
t798 = g(3) * t844;
t794 = t684 * t845;
t793 = t696 * t845;
t792 = t687 * t839;
t596 = -t689 * qJ(3) - t823;
t785 = t687 * t814;
t776 = -t613 * pkin(2) + qJ(3) * t614;
t616 = -t689 * t837 + t833;
t775 = -t615 * pkin(2) + qJ(3) * t616;
t719 = t692 * t456 + t865 * t460 + t478 * t783 - t480 * t812;
t442 = pkin(10) * t600 + t719;
t759 = -t693 * t795 - t696 * t761 + (t755 - t780) * pkin(8);
t516 = t759 + t875;
t503 = -pkin(3) * t755 - t516 + t872;
t479 = pkin(4) * t554 + t503;
t449 = pkin(5) * t475 - pkin(10) * t474 + t479;
t774 = -t691 * t442 + t695 * t449;
t772 = t474 * t691 - t695 * t600;
t771 = -t691 * t829 - t695 * t787;
t770 = t691 * t787 - t695 * t829;
t765 = t522 * t695;
t764 = t664 + t819;
t763 = -qJD(6) * t726 + t664;
t762 = t662 + t803;
t760 = t693 * t793;
t577 = pkin(3) * t842 - t596;
t754 = g(1) * t613 - g(2) * t615;
t753 = -g(1) * t616 - g(2) * t614;
t752 = g(1) * t614 - g(2) * t616;
t751 = g(2) * t694 + t862;
t750 = t725 * t600 + t639 * t829;
t549 = -pkin(5) * t726 - pkin(10) * t725 + t674;
t749 = pkin(10) * t787 - qJD(6) * t549 + t877;
t748 = -pkin(5) * t828 + pkin(10) * t829 + qJD(6) * t569 - t808;
t746 = t695 * t442 + t691 * t449;
t451 = t639 * pkin(10) + t453;
t515 = pkin(4) * t827 + t547;
t468 = -pkin(5) * t526 - pkin(10) * t881 + t515;
t445 = t451 * t695 + t468 * t691;
t745 = t451 * t691 - t468 * t695;
t462 = pkin(10) * t844 + t878;
t535 = pkin(4) * t609 + t577;
t728 = -t609 * t865 - t692 * t610;
t476 = -pkin(5) * t728 - pkin(10) * t541 + t535;
t744 = t462 * t695 + t476 * t691;
t743 = -t462 * t691 + t476 * t695;
t742 = t464 * t688 + t465 * t686;
t597 = -pkin(1) * t687 - t824;
t739 = qJD(2) * (-qJD(1) * t597 - t586);
t738 = -pkin(8) * t786 + t657;
t736 = t503 + t753;
t735 = g(1) * t615 + g(2) * t613 - g(3) * t842;
t734 = t697 * pkin(1) + t616 * pkin(2) + pkin(8) * t843 + qJ(3) * t615;
t521 = t541 * t695 + t792;
t452 = t478 * t865 - t692 * t480;
t732 = t489 * t865 - t692 * t497;
t724 = -qJ(3) * t814 - t813;
t519 = t634 + (qJD(1) * t724 + qJDD(1) * t737) * t687;
t584 = t687 * t724 + t653;
t722 = qJD(1) * t584 + qJDD(1) * t597 + t519;
t721 = t600 * t726 - t639 * t828;
t718 = t692 * t483 + t865 * t488 + t489 * t783 - t497 * t812;
t716 = -pkin(1) * t694 - t614 * pkin(2) + pkin(8) * t841 - qJ(3) * t613;
t604 = t823 * qJD(2);
t713 = t604 * t664 - t752;
t712 = -t725 * t810 + t771;
t711 = -t725 * t811 - t770;
t710 = (-t493 * t686 + t494 * t688) * t844;
t709 = t753 - t798;
t706 = t753 - t759;
t450 = -t639 * pkin(5) - t452;
t705 = -pkin(10) * t473 + (t450 + t452) * t522;
t704 = t735 - t758;
t703 = t687 * (t809 * t817 + t801);
t536 = (-pkin(8) + t789) * t786 + t825;
t702 = t706 - t875;
t700 = t603 * t664 + t704;
t601 = -qJ(3) * t787 + t658;
t599 = t689 * t790 + t666;
t595 = -t677 * t842 + t678 * t689;
t587 = -t676 - t738;
t579 = -t642 - t603;
t573 = -pkin(2) * t664 + t806;
t565 = -t786 * t866 + t825;
t559 = t615 * t677 + t678 * t843;
t532 = t740 - t863;
t518 = t559 * t695 + t616 * t691;
t517 = -t559 * t691 + t616 * t695;
t507 = qJD(5) * t541 - t756 * t865 + t786 * t838;
t506 = qJD(5) * t728 - t726 * t786;
t470 = qJD(6) * t521 + t506 * t691 - t695 * t785;
t469 = qJD(6) * t874 + t506 * t695 + t691 * t785;
t463 = pkin(5) * t507 - pkin(10) * t506 + t536;
t461 = -pkin(5) * t844 - t732;
t458 = qJD(6) * t510 + t772;
t447 = -pkin(5) * t785 - t867;
t446 = pkin(10) * t785 + t718;
t441 = -t445 * qJD(6) + t774;
t440 = -t745 * qJD(6) + t746;
t1 = [(g(1) * t852 - g(2) * t558 + t535 * t474 + t479 * t541 + t515 * t506 + t536 * t881 - t600 * t878 - t718 * t639) * MDP(25) + (t474 * t541 + t506 * t881) * MDP(19) + t751 * MDP(3) + (-t516 * t689 - t587 * t664 - t596 * t662 + t754) * MDP(13) + (t503 * t609 + t577 * t554 + t565 * t827 + t754 * t686) * MDP(15) + (t503 * t610 + t577 * t555 + t565 * t592 + t754 * t688) * MDP(16) + (t532 * t689 + t599 * t662 + t713) * MDP(12) + (qJD(2) * t710 - t464 * t610 - t465 * t609 - t500 * t592 - t501 * t827 - t511 * t555 - t512 * t554 + t752) * MDP(17) + (-pkin(1) * t720 * t799 - t662 * t823 - t664 * t738 + t689 * t759 - t754) * MDP(10) + (-t666 * t662 - t758 * t689 + (t696 * t848 + (-t782 + t800) * t799) * pkin(1) - t713) * MDP(9) + (-g(1) * t716 - g(2) * t734 + t516 * t596 + t519 * t597 + t532 * t599 + t573 * t604 + t579 * t587 + t586 * t584) * MDP(14) + (0.2e1 * (t693 * t800 - t804 * t822) * MDP(5) + (qJDD(1) * t684 + 0.2e1 * t693 * t781) * MDP(4)) * t682 + (t465 * t512 + t494 * t501 + t464 * t511 + t493 * t500 + t503 * t577 + t547 * t565 - g(1) * (pkin(3) * t841 - qJ(4) * t614 + t716) - g(2) * (pkin(3) * t843 + qJ(4) * t616 + t734)) * MDP(18) + qJDD(1) * MDP(1) + (-(qJD(6) * t743 + t446 * t695 + t463 * t691) * t522 - t744 * t473 + t440 * t728 - t445 * t507 + t447 * t510 + t461 * t457 + t443 * t521 + t450 * t469 + g(1) * t870 - g(2) * t517) * MDP(32) + (-t457 * t728 + t469 * t522 + t473 * t521 + t507 * t510) * MDP(28) + (-t473 * t728 + t507 * t522) * MDP(30) + (-t507 * t639 + t600 * t728) * MDP(22) + ((-t693 * t722 + t696 * t739) * MDP(13) + (-t453 * t814 + t677 * t862 - t693 * t719) * MDP(25) + (-t751 * t688 + (qJD(1) * t511 + t493) * t814 + (-qJD(2) * t547 * t688 + qJD(1) * t500 + qJDD(1) * t511 + t464) * t693) * MDP(15) + (t693 * t762 + t764 * t814) * MDP(6) + (t600 * t693 + t639 * t814) * MDP(23) + (t751 * t686 + (-qJD(1) * t512 - t494) * t814 + (-qJD(1) * t501 - qJDD(1) * t512 + t547 * t816 - t465) * t693) * MDP(16) + (t693 * t739 + t696 * t722) * MDP(12) + (-t475 * t693 + t526 * t814) * MDP(22) + (t474 * t693 + t814 * t881) * MDP(21)) * t687 + (t474 * t728 - t475 * t541 + t506 * t526 - t507 * t881) * MDP(20) + (-g(1) * t733 - g(2) * t559 + t452 * t785 + t535 * t475 - t479 * t728 + t515 * t507 - t526 * t536 + t732 * t600 + t639 * t867 + t701 * t844) * MDP(24) + (g(1) * t694 - g(2) * t697) * MDP(2) + (t457 * t521 + t469 * t510) * MDP(26) + (t506 * t639 + t541 * t600) * MDP(21) + ((qJD(2) * t573 - qJDD(1) * t596 - t516 + (qJD(2) * t599 - t587) * qJD(1)) * t696 + (qJD(2) * t579 + qJDD(1) * t599 + t532 + (qJD(2) * t596 + t604) * qJD(1)) * t693 - t751) * t821 + MDP(8) * t848 + (t696 * t762 - t764 * t815) * t859 + (t458 * t728 - t470 * t522 + t473 * t874 - t507 * t508) * MDP(29) + ((-qJD(6) * t744 - t446 * t691 + t463 * t695) * t522 + t743 * t473 - t441 * t728 - t745 * t507 + t447 * t508 + t461 * t458 - t443 * t874 + t450 * t470 - g(1) * t868 - g(2) * t518) * MDP(31) + (t457 * t874 - t458 * t521 - t469 * t508 - t470 * t510) * MDP(27); (-t787 * t881 + t750) * MDP(21) + (t453 * t787 + t674 * t474 + t479 * t725 + t829 * t515 - t569 * t600 + t639 * t877 + t709 * t678 + t808 * t881) * MDP(25) + (t474 * t725 + t829 * t881) * MDP(19) + (-t601 * t787 - t700 - 0.2e1 * t863 + t873) * MDP(12) - t639 * MDP(23) * t787 - MDP(4) * t760 + (t514 * t827 + t513 * t592 + (qJD(4) * t592 - t494 * t788 - t555 * t690 - t464) * t688 + (qJD(4) * t827 + t493 * t788 - t690 * t554 - t465) * t686 + t735) * MDP(17) + (-t532 * pkin(2) - g(1) * t775 - g(2) * t776 - g(3) * t824 - t516 * qJ(3) - t573 * t603 - t579 * t806 - t586 * t601) * MDP(14) + (t503 * qJ(3) - t494 * t514 - t493 * t513 - g(1) * (-qJ(4) * t615 + t775) - g(2) * (-qJ(4) * t613 + t776) - g(3) * (qJ(4) * t842 + t824) + t742 * t690 + t807 * t547 + (-t493 * t688 - t494 * t686) * qJD(4)) * MDP(18) + (qJ(3) * t555 + t807 * t592 + t736 * t688 + ((-g(3) * t688 - t686 * t802) * t693 + (t494 * t696 + t514 * t693 + t686 * t869) * qJD(1)) * t687) * MDP(16) + (t640 + t806 * t664 + (-g(3) * t693 + (t586 * t696 + t601 * t693) * qJD(1)) * t687 + t702) * MDP(13) + (qJ(3) * t554 + t736 * t686 + ((-g(3) * t686 + t688 * t802) * t693 + (-t493 * t696 - t513 * t693 - t688 * t869) * qJD(1)) * t687 + t807 * t827) * MDP(15) + (t845 * t864 + t700) * MDP(9) + ((-pkin(2) * t693 + t858) * qJDD(1) + ((-qJ(3) * qJD(2) - t579 - t603) * t693 + (-pkin(2) * qJD(2) - t573 + t806) * t696) * qJD(1)) * t821 + (t771 * t510 + t770 * t508 - (t857 + t458 * t695 + (-t508 * t691 + t510 * t695) * qJD(6)) * t725) * MDP(27) + ((t549 * t695 - t569 * t691) * t473 - t441 * t726 - t727 * t458 + t443 * t691 * t725 - g(1) * (-t615 * t691 + t616 * t846) - g(2) * (-t613 * t691 + t614 * t846) - (t677 * t836 + t691 * t696) * t861 + (t691 * t749 - t695 * t748) * t522 + t830 * t508 - t828 * t745 - t712 * t450) * MDP(31) + (t458 * t726 - t508 * t828 + t522 * t712 - t725 * t840) * MDP(29) + (-t457 * t726 + t471 * t725 + t510 * t828 + t522 * t711) * MDP(28) + (-(t549 * t691 + t569 * t695) * t473 + t440 * t726 - t727 * t457 + t443 * t849 - g(1) * (-t615 * t695 - t616 * t847) - g(2) * (-t613 * t695 - t614 * t847) - (-t677 * t839 + t695 * t696) * t861 + (t691 * t748 + t695 * t749) * t522 + t830 * t510 - t828 * t445 + t711 * t450) * MDP(32) + (-t473 * t726 + t522 * t828) * MDP(30) + MDP(6) * t703 + (pkin(1) * t793 + t664 * t826 - t706 + t798) * MDP(10) + (t474 * t726 - t475 * t725 + t526 * t829 - t828 * t881) * MDP(20) + (-t526 * t787 + t721) * MDP(22) + (-t452 * t787 + t674 * t475 - t479 * t726 + t828 * t515 - t526 * t808 + t600 * t727 + t639 * t876 + t709 * t677) * MDP(24) + t662 * MDP(8) + (t457 * t849 + t510 * t711) * MDP(26) + t822 * MDP(5) * t845 + (-t809 * t818 + t800) * t859; MDP(11) * t703 + (t662 + t760) * MDP(12) + (-t664 ^ 2 - t794) * MDP(13) + (t579 * t664 - t704 - t863 + t873) * MDP(14) + (-t664 * t827 - t686 * t794 + t688 * t707) * MDP(15) + (-t592 * t664 - t686 * t707 - t688 * t794) * MDP(16) + (-t686 * t554 - t688 * t555 + (t686 * t592 - t688 * t827) * t788) * MDP(17) + (qJD(1) * t710 - t547 * t664 - t735 + t742) * MDP(18) + (t526 * t664 + t750) * MDP(24) + (-t664 * t881 + t721) * MDP(25) + (t726 * t840 - t725 * t458 - t829 * t508 + (-t691 * t828 - t695 * t763) * t522) * MDP(31) + (t726 * t471 - t725 * t457 - t829 * t510 + (t691 * t763 - t695 * t828) * t522) * MDP(32); ((t592 * t818 + t779) * t687 + t768) * MDP(15) + ((-t827 + t816) * t788 + t767) * MDP(16) + (-t592 ^ 2 - t827 ^ 2) * MDP(17) + (t493 * t592 + t494 * t827 + (-pkin(3) * t804 - g(3)) * t844 + t702 + t872) * MDP(18) + (t639 * t881 + t475) * MDP(24) + (t474 + t884) * MDP(25) + (-t508 * t881 + t886) * MDP(31) + (-t510 * t881 - t695 * t885 - t840) * MDP(32); -t526 ^ 2 * MDP(20) + (t474 - t884) * MDP(21) - t769 * MDP(22) + t600 * MDP(23) + (t453 * t639 + t701 - t717) * MDP(24) + (g(1) * t559 - g(2) * t733 + g(3) * t595 + t452 * t639 - t515 * t526 - t719) * MDP(25) + (t510 * t765 + t857) * MDP(26) + ((t457 - t856) * t695 + (-t458 - t855) * t691) * MDP(27) + (t522 * t765 + t840) * MDP(28) + t886 * MDP(29) + (-pkin(5) * t458 - t453 * t508 + t705 * t691 - t695 * t871) * MDP(31) + (-pkin(5) * t457 - t453 * t510 + t691 * t871 + t705 * t695) * MDP(32) + (-t526 * MDP(19) + (-qJD(5) + t639) * MDP(22) - t515 * MDP(24) - t510 * MDP(28) + t508 * MDP(29) - t522 * MDP(30) + t745 * MDP(31) + t445 * MDP(32) + MDP(20) * t881) * t881; t510 * t508 * MDP(26) + (-t508 ^ 2 + t510 ^ 2) * MDP(27) + (t791 + t856) * MDP(28) + (-t772 + t855) * MDP(29) + t473 * MDP(30) + (t445 * t522 - t450 * t510 - g(1) * t517 - g(2) * t870 - g(3) * (-t595 * t691 + t644) + t774) * MDP(31) + (-t745 * t522 + t450 * t508 + g(1) * t518 - g(2) * t868 - g(3) * (-t595 * t695 - t792) - t746) * MDP(32) + (-MDP(28) * t854 - MDP(29) * t510 - MDP(31) * t445 + MDP(32) * t745) * qJD(6);];
tau  = t1;
