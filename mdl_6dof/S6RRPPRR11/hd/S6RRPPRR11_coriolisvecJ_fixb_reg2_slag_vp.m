% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRR11_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR11_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:42:44
% EndTime: 2019-03-09 09:43:13
% DurationCPUTime: 13.01s
% Computational Cost: add. (14761->595), mult. (37807->839), div. (0->0), fcn. (29011->10), ass. (0->298)
t251 = sin(qJ(5));
t392 = cos(qJ(5));
t248 = cos(pkin(6));
t345 = qJD(1) * t248;
t231 = qJD(2) + t345;
t245 = sin(pkin(11));
t247 = cos(pkin(11));
t246 = sin(pkin(6));
t254 = cos(qJ(2));
t343 = qJD(1) * t254;
t319 = t246 * t343;
t167 = t231 * t247 - t245 * t319;
t252 = sin(qJ(2));
t344 = qJD(1) * t252;
t320 = t246 * t344;
t249 = -pkin(2) - qJ(4);
t394 = pkin(3) + pkin(8);
t327 = pkin(1) * t345;
t226 = t254 * t327;
t401 = qJD(3) - t226;
t108 = t231 * t249 + t320 * t394 + t401;
t311 = -qJ(3) * t252 - pkin(1);
t147 = (t249 * t254 + t311) * t246;
t131 = qJD(1) * t147;
t67 = t108 * t247 - t131 * t245;
t49 = pkin(4) * t320 - pkin(9) * t167 + t67;
t351 = t231 * t245 + t247 * t319;
t68 = t108 * t245 + t131 * t247;
t51 = -pkin(9) * t351 + t68;
t24 = t251 * t49 + t392 * t51;
t289 = qJD(5) + t320;
t22 = pkin(10) * t289 + t24;
t250 = sin(qJ(6));
t253 = cos(qJ(6));
t408 = t167 * t392 - t251 * t351;
t178 = pkin(8) * t319 + t252 * t327;
t156 = pkin(3) * t319 + t178;
t220 = t231 * qJ(3);
t124 = t220 + qJD(4) + t156;
t91 = pkin(4) * t351 + t124;
t159 = t392 * t351;
t98 = t167 * t251 + t159;
t39 = pkin(5) * t98 - pkin(10) * t408 + t91;
t10 = t22 * t253 + t250 * t39;
t340 = qJD(2) * t252;
t317 = t246 * t340;
t281 = t392 * t317;
t267 = qJD(1) * t281;
t294 = qJD(1) * t317;
t280 = t251 * t294;
t337 = qJD(5) * t251;
t71 = qJD(5) * t159 + t167 * t337 - t245 * t267 - t247 * t280;
t191 = t247 * t267;
t410 = t408 * qJD(5);
t72 = t245 * t280 - t191 + t410;
t350 = pkin(8) * t294 - qJD(2) * t226;
t143 = -t231 * qJD(3) + t350;
t322 = -pkin(4) * t247 - pkin(3);
t96 = t294 * t322 - t143;
t26 = t72 * pkin(5) + t71 * pkin(10) + t96;
t330 = qJD(1) * qJD(2);
t312 = t254 * t330;
t219 = t246 * t312;
t314 = qJD(5) * t392;
t358 = t245 * t252;
t265 = (pkin(4) * t254 - pkin(9) * t358) * t246;
t260 = qJD(2) * t265;
t215 = pkin(2) * t294;
t283 = -qJ(3) * t254 + qJ(4) * t252;
t338 = qJD(3) * t252;
t256 = (qJD(2) * t283 - qJD(4) * t254 - t338) * t246;
t102 = qJD(1) * t256 + t215;
t391 = pkin(1) * t252;
t236 = t248 * t391;
t356 = t246 * t254;
t258 = (t356 * t394 + t236) * qJD(2);
t121 = qJD(1) * t258 - t231 * qJD(4);
t56 = -t245 * t102 + t121 * t247;
t48 = qJD(1) * t260 + t56;
t296 = t247 * t317;
t290 = pkin(9) * t296;
t57 = t102 * t247 + t121 * t245;
t52 = qJD(1) * t290 + t57;
t274 = -t251 * t48 - t314 * t49 + t337 * t51 - t392 * t52;
t5 = pkin(10) * t219 - t274;
t2 = -qJD(6) * t10 - t250 * t5 + t253 * t26;
t414 = qJD(6) + t98;
t417 = t10 * t414 + t2;
t288 = t22 * t250 - t253 * t39;
t1 = -qJD(6) * t288 + t250 * t26 + t253 * t5;
t407 = t288 * t414 + t1;
t416 = t98 ^ 2;
t415 = t289 * t98;
t413 = t408 ^ 2;
t270 = t253 * t289;
t84 = t250 * t408 - t270;
t412 = t408 * t84;
t86 = t250 * t289 + t253 * t408;
t411 = t408 * t86;
t271 = -t245 * t392 - t247 * t251;
t149 = t271 * t320;
t184 = t271 * qJD(5);
t353 = t149 + t184;
t297 = t247 * t320;
t298 = t245 * t320;
t148 = t251 * t298 - t297 * t392;
t185 = -t245 * t337 + t247 * t314;
t352 = t185 - t148;
t387 = -pkin(9) + t249;
t203 = t387 * t245;
t204 = t387 * t247;
t272 = -t203 * t251 + t204 * t392;
t228 = pkin(2) * t320;
t346 = qJD(1) * t246;
t151 = t283 * t346 + t228;
t89 = -t151 * t245 + t156 * t247;
t75 = qJD(1) * t265 + t89;
t90 = t151 * t247 + t156 * t245;
t81 = pkin(9) * t297 + t90;
t368 = qJD(4) * t271 + qJD(5) * t272 - t251 * t75 - t392 * t81;
t342 = qJD(2) * t245;
t409 = -t351 + t342;
t357 = t246 * t252;
t273 = (-pkin(8) + t322) * t357;
t334 = -qJD(1) * t273 + t401;
t406 = -pkin(10) * t319 + t368;
t405 = -pkin(5) * t352 + pkin(10) * t353 - t334;
t402 = -qJD(2) * t247 + t167;
t242 = t246 ^ 2;
t400 = -0.2e1 * t242 * t330;
t138 = t203 * t392 + t204 * t251;
t194 = -t245 * t251 + t247 * t392;
t366 = qJD(4) * t194 + qJD(5) * t138 - t251 * t81 + t392 * t75;
t365 = qJD(6) * t86;
t34 = -t219 * t253 - t250 * t71 + t365;
t301 = t394 * t357;
t333 = qJD(1) * t301 + t401;
t369 = t72 * t271;
t398 = t352 * t98 - t369;
t310 = t251 * t52 - t392 * t48;
t8 = -qJD(5) * t24 - t310;
t397 = -t194 * t71 + t353 * t408;
t339 = qJD(2) * t254;
t347 = qJ(3) * qJD(2);
t396 = t252 * (qJD(4) - t124 + t347) - t249 * t339;
t182 = -t245 * t356 + t247 * t248;
t233 = pkin(8) * t357;
t390 = pkin(1) * t254;
t323 = -pkin(2) - t390;
t133 = pkin(3) * t357 + t233 + (-qJ(4) + t323) * t248;
t87 = t133 * t247 - t147 * t245;
t63 = pkin(4) * t357 - pkin(9) * t182 + t87;
t181 = t245 * t248 + t247 * t356;
t88 = t133 * t245 + t147 * t247;
t69 = -pkin(9) * t181 + t88;
t383 = t251 * t63 + t392 * t69;
t223 = pkin(2) * t317;
t113 = t223 + t256;
t135 = -t248 * qJD(4) + t258;
t73 = -t113 * t245 + t135 * t247;
t55 = t260 + t73;
t74 = t113 * t247 + t135 * t245;
t62 = t290 + t74;
t14 = -qJD(5) * t383 - t251 * t62 + t392 * t55;
t23 = -t251 * t51 + t392 * t49;
t395 = t8 * t194 + t23 * t353 + t24 * t352 + t271 * t274;
t388 = t86 * t84;
t237 = pkin(4) * t245 + qJ(3);
t126 = -pkin(5) * t271 - pkin(10) * t194 + t237;
t78 = t126 * t250 + t138 * t253;
t386 = qJD(6) * t78 + t250 * t406 + t253 * t405;
t77 = t126 * t253 - t138 * t250;
t385 = -qJD(6) * t77 + t250 * t405 - t253 * t406;
t335 = qJD(6) * t253;
t384 = -t250 * t34 - t335 * t84;
t382 = t408 * t98;
t118 = t181 * t392 + t182 * t251;
t381 = t118 * t72;
t379 = t250 * t72;
t378 = t250 * t84;
t377 = t250 * t86;
t376 = t250 * t414;
t375 = t253 * t84;
t374 = t253 * t86;
t373 = t254 * t67;
t372 = t254 * t68;
t336 = qJD(6) * t250;
t33 = -qJD(6) * t270 - t219 * t250 + t253 * t71 + t336 * t408;
t371 = t33 * t250;
t370 = t34 * t253;
t367 = pkin(5) * t319 + t366;
t187 = pkin(8) * t356 + t236;
t180 = t187 * qJD(2);
t171 = qJD(1) * t180;
t364 = t171 * t252;
t363 = t178 * t231;
t362 = t180 * t252;
t361 = t194 * t250;
t360 = t194 * t253;
t359 = t242 * qJD(1) ^ 2;
t355 = t247 * t252;
t328 = t248 * t390;
t227 = qJD(2) * t328;
t239 = t248 * qJD(3);
t349 = t227 + t239;
t243 = t252 ^ 2;
t348 = -t254 ^ 2 + t243;
t177 = pkin(8) * t320 - t226;
t332 = qJD(3) + t177;
t329 = 0.2e1 * t242 * t243;
t326 = t243 * t359;
t325 = t254 * t359;
t324 = t253 * t357;
t172 = -qJ(3) * t248 - t187;
t318 = t251 * t342;
t316 = t246 * t339;
t307 = t253 * t414;
t306 = t414 ^ 2;
t114 = -t148 * t250 + t231 * t253;
t305 = -t185 * t250 - t114;
t115 = t148 * t253 + t231 * t250;
t304 = t185 * t253 - t115;
t116 = -t149 * t250 - t253 * t319;
t303 = -t184 * t250 + t116;
t117 = -t149 * t253 + t250 * t319;
t302 = -t184 * t253 + t117;
t300 = t247 * t326;
t150 = pkin(3) * t356 - t172;
t6 = -pkin(5) * t219 - t8;
t299 = pkin(10) * qJD(6) * t414 + t6;
t295 = t245 * t317;
t293 = pkin(1) * t400;
t287 = t57 * t245 + t56 * t247;
t286 = -t245 * t67 + t247 * t68;
t28 = pkin(10) * t357 + t383;
t109 = pkin(4) * t181 + t150;
t119 = -t181 * t251 + t182 * t392;
t44 = pkin(5) * t118 - pkin(10) * t119 + t109;
t18 = t250 * t44 + t253 * t28;
t17 = -t250 * t28 + t253 * t44;
t285 = -t375 + t377;
t282 = t171 * t248 + t180 * t231;
t279 = t242 * t252 * t312;
t179 = -pkin(8) * t317 + t227;
t278 = t219 * t247 - t245 * t326;
t161 = -t231 * t319 + t219;
t30 = -t251 * t69 + t392 * t63;
t21 = -pkin(5) * t289 - t23;
t275 = -pkin(10) * t72 + t21 * t414;
t93 = t119 * t253 + t250 * t357;
t13 = t251 * t55 + t314 * t63 - t337 * t69 + t392 * t62;
t269 = t289 * t246;
t268 = qJD(2) * t246 * (t231 + t345);
t266 = -t167 * t247 + t245 * t351;
t173 = (-pkin(2) * t254 + t311) * t246;
t264 = t194 * t335 - t303;
t263 = -t194 * t336 - t302;
t262 = t409 * t346;
t261 = (-qJ(3) * t339 - t338) * t246;
t120 = -pkin(3) * t294 - t143;
t259 = t194 * t219 + t289 * t353;
t112 = qJD(2) * t273 + t349;
t257 = t1 * t253 - t2 * t250 + (-t10 * t250 + t253 * t288) * qJD(6);
t210 = t252 * t325;
t201 = -0.2e1 * t279;
t200 = 0.2e1 * t279;
t186 = -t233 + t328;
t183 = t348 * t359;
t176 = -qJ(3) * t319 + t228;
t175 = t248 * t323 + t233;
t168 = t348 * t400;
t163 = -t179 - t239;
t162 = qJD(1) * t173;
t160 = (qJD(2) - t231) * t320;
t157 = t223 + t261;
t152 = -t220 - t178;
t146 = t254 * t268;
t145 = t252 * t268;
t144 = -t231 * pkin(2) + t332;
t140 = qJD(1) * t261 + t215;
t134 = -qJD(2) * t301 + t349;
t132 = t162 * t320;
t92 = t119 * t250 - t324;
t83 = qJD(5) * t119 - t247 * t281 + t251 * t295;
t82 = t181 * t314 + t182 * t337 - t245 * t281 - t251 * t296;
t66 = t253 * t72;
t53 = pkin(5) * t408 + pkin(10) * t98;
t43 = qJD(6) * t93 - t250 * t82 - t253 * t316;
t42 = -qJD(6) * t324 + t119 * t336 - t250 * t316 + t253 * t82;
t29 = t83 * pkin(5) + t82 * pkin(10) + t112;
t27 = -pkin(5) * t357 - t30;
t16 = t23 * t253 + t250 * t53;
t15 = -t23 * t250 + t253 * t53;
t12 = -pkin(5) * t316 - t14;
t11 = pkin(10) * t316 + t13;
t4 = -qJD(6) * t18 - t250 * t11 + t253 * t29;
t3 = qJD(6) * t17 + t253 * t11 + t250 * t29;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, t168, t146, t201, -t145, 0, t252 * t293 - t282, -t179 * t231 + t248 * t350 + t254 * t293 (-t350 * t254 + t364 + (t177 * t254 - t178 * t252) * qJD(2) + (t179 * t254 + t362 + (-t186 * t254 - t187 * t252) * qJD(2)) * qJD(1)) * t246, -t171 * t186 + t177 * t180 + t178 * t179 - t187 * t350, 0, -t146, t145, t200, t168, t201 (-t143 * t254 + t364 + (t144 * t254 + t152 * t252) * qJD(2) + (-t163 * t254 + t362 + (t172 * t252 + t175 * t254) * qJD(2)) * qJD(1)) * t246 (-t162 * t340 + t140 * t254 + (t157 * t254 - t173 * t340) * qJD(1)) * t246 + t282, -t143 * t248 - t163 * t231 + (-t162 * t339 - t140 * t252 + (-t157 * t252 - t173 * t339) * qJD(1)) * t246, t140 * t173 + t143 * t172 + t144 * t180 + t152 * t163 + t157 * t162 + t171 * t175 (qJD(1) * t182 + t167) * t295 ((-t181 * t245 + t182 * t247) * qJD(1) - t266) * t317 (t167 * t356 + (t182 * t356 + t245 * t329) * qJD(1)) * qJD(2) (-qJD(1) * t181 - t351) * t296 (-t351 * t356 + (-t181 * t356 + t247 * t329) * qJD(1)) * qJD(2), t200, t134 * t351 + t120 * t181 + ((qJD(1) * t73 + t56) * t252 + (-t124 * t355 + t373 + (-t150 * t355 + t254 * t87) * qJD(1)) * qJD(2)) * t246, t120 * t182 + t134 * t167 + ((-qJD(1) * t74 - t57) * t252 + (t124 * t358 - t372 + (t150 * t358 - t254 * t88) * qJD(1)) * qJD(2)) * t246, -t74 * t351 - t57 * t181 - t73 * t167 - t56 * t182 + ((-t245 * t87 + t247 * t88) * qJD(1) + t286) * t317, t120 * t150 + t124 * t134 + t56 * t87 + t57 * t88 + t67 * t73 + t68 * t74, -t119 * t71 - t408 * t82, t118 * t71 - t119 * t72 - t408 * t83 + t82 * t98, -t82 * qJD(5) + (t408 * t339 - t71 * t252 + (t119 * t339 - t252 * t82) * qJD(1)) * t246, t83 * t98 + t381, -t83 * qJD(5) + (-t98 * t339 - t72 * t252 + (-t118 * t339 - t252 * t83) * qJD(1)) * t246 (t242 * t344 + t269) * t339, t14 * qJD(5) + t109 * t72 + t112 * t98 + t96 * t118 + t91 * t83 + (t23 * t339 + t8 * t252 + (t14 * t252 + t30 * t339) * qJD(1)) * t246, -t13 * qJD(5) + t112 * t408 - t109 * t71 + t96 * t119 - t91 * t82 + (-t24 * t339 + t274 * t252 + (-t13 * t252 - t339 * t383) * qJD(1)) * t246, t118 * t274 - t119 * t8 - t13 * t98 - t14 * t408 + t23 * t82 - t24 * t83 + t30 * t71 - t383 * t72, t109 * t96 + t112 * t91 + t13 * t24 + t14 * t23 - t274 * t383 + t30 * t8, -t33 * t93 - t42 * t86, t33 * t92 - t34 * t93 + t42 * t84 - t43 * t86, -t118 * t33 - t414 * t42 + t72 * t93 + t83 * t86, t34 * t92 + t43 * t84, -t118 * t34 - t414 * t43 - t72 * t92 - t83 * t84, t414 * t83 + t381, t118 * t2 + t12 * t84 + t17 * t72 + t21 * t43 + t27 * t34 - t288 * t83 + t4 * t414 + t6 * t92, -t1 * t118 - t10 * t83 + t12 * t86 - t18 * t72 - t21 * t42 - t27 * t33 - t3 * t414 + t6 * t93, -t1 * t92 - t10 * t43 + t17 * t33 - t18 * t34 - t2 * t93 - t288 * t42 - t3 * t84 - t4 * t86, t1 * t18 + t10 * t3 + t12 * t21 + t17 * t2 + t27 * t6 - t288 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210, t183, t161, t210, -t160, 0, -pkin(8) * t219 + t363 + (-t248 * t330 + t359) * t391, pkin(1) * t325 - t177 * t231 + t350, 0, 0, 0, -t161, t160, -t210, t183, t210 ((-t152 - t178 - t347) * t252 + (-pkin(2) * qJD(2) - t144 + t332) * t254) * t346, -t363 + t132 + (-t176 * t356 + t180) * qJD(1), t332 * t231 + (t162 * t254 + t176 * t252) * t346 - t143, -t171 * pkin(2) - t143 * qJ(3) - t144 * t178 - t152 * t332 - t162 * t176, -t402 * t298 ((-t245 ^ 2 + t247 ^ 2) * qJD(2) + t266) * t320, -t167 * t319 + t278, -t262 * t355, -t254 * t262 - t300, -t210, t120 * t245 + (-t247 * t396 - t252 * t89 - t373) * t346 + t333 * t351, t120 * t247 + t333 * t167 + (t245 * t396 + t252 * t90 + t372) * t346, t90 * t351 + t89 * t167 + (qJD(4) * t167 - t320 * t68 - t56) * t247 + (qJD(4) * t351 + t320 * t67 - t57) * t245, t120 * qJ(3) - t67 * t89 - t68 * t90 + t287 * t249 + t333 * t124 + (-t245 * t68 - t247 * t67) * qJD(4), t397, -t194 * t72 - t271 * t71 - t352 * t408 - t353 * t98, -t319 * t408 + t259, t398, -t352 * qJD(5) + ((qJD(2) * t271 + t98) * t254 - t352 * t252) * t346, -t269 * t343, -t96 * t271 + t237 * t72 + t334 * t98 + t352 * t91 - t366 * qJD(5) + ((qJD(2) * t272 - t23) * t254 - t366 * t252) * t346, t96 * t194 - t237 * t71 + t353 * t91 + t334 * t408 - t368 * qJD(5) + ((-qJD(2) * t138 + t24) * t254 - t368 * t252) * t346, -t138 * t72 + t272 * t71 + t366 * t408 - t368 * t98 - t395, -t138 * t274 - t23 * t366 + t96 * t237 + t24 * t368 + t272 * t8 + t334 * t91, t263 * t86 - t33 * t360, t86 * t116 + t117 * t84 - (t375 + t377) * t184 + (t371 - t370 + (-t374 + t378) * qJD(6)) * t194, t263 * t414 + t271 * t33 + t352 * t86 + t360 * t72, t264 * t84 + t34 * t361, -t264 * t414 + t271 * t34 - t352 * t84 - t361 * t72, t352 * t414 - t369, -t2 * t271 + t21 * t264 - t272 * t34 - t288 * t352 + t361 * t6 + t367 * t84 - t386 * t414 + t72 * t77, t1 * t271 - t10 * t352 + t21 * t263 + t272 * t33 + t360 * t6 + t367 * t86 + t385 * t414 - t72 * t78, t33 * t77 - t34 * t78 - t302 * t288 + t386 * t86 + t385 * t84 + t303 * t10 + (-t1 * t250 - t2 * t253 + (-t10 * t253 - t250 * t288) * qJD(6)) * t194, t1 * t78 - t10 * t385 + t2 * t77 + t21 * t367 - t272 * t6 + t288 * t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t210, -t231 ^ 2 - t326, t152 * t231 + t132 + t171, 0, 0, 0, 0, 0, 0, -t231 * t351 + t278, -t167 * t231 - t219 * t245 - t300 (t167 * t245 - t247 * t351) * t320, -t124 * t231 + t286 * t320 + t287, 0, 0, 0, 0, 0, 0, -t231 * t98 + t259, t219 * t271 - t231 * t408 - t289 * t352, -t397 - t398, -t91 * t231 + t395, 0, 0, 0, 0, 0, 0, t250 * t369 - t194 * t34 - t353 * t84 + (t271 * t335 + t305) * t414, t253 * t369 + t194 * t33 - t353 * t86 + (-t271 * t336 - t304) * t414, t114 * t86 + t115 * t84 + t285 * t185 - (-t371 - t370 + (t374 + t378) * qJD(6)) * t271, t10 * t304 - t6 * t194 - t21 * t353 - t257 * t271 - t288 * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402 * t320, t409 * t320, -t167 ^ 2 - t351 ^ 2, t167 * t67 + t351 * t68 + t120, 0, 0, 0, 0, 0, 0, -t191 + (t408 + t318) * t320 + 0.2e1 * t410, -t71 - t415, -t413 - t416, t23 * t408 + t24 * t98 + t96, 0, 0, 0, 0, 0, 0, -t250 * t306 - t412 + t66, -t253 * t306 - t379 - t411, t253 * t33 + t285 * t98 + t336 * t86 + t384, -t21 * t408 + t250 * t407 + t253 * t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, t413 - t416, -t71 + t415, -t382, t191 + (t408 - t318) * t320, t219, t24 * t320 - t408 * t91 - t310, t23 * t289 + t91 * t98 + t274, 0, 0, t307 * t86 - t371 (-t84 * t98 - t33) * t253 - t86 * t376 + t384, t307 * t414 + t379 - t411, t376 * t84 - t370, -t376 * t414 + t412 + t66, -t414 * t408, -pkin(5) * t34 - t15 * t414 - t24 * t84 + t250 * t275 - t253 * t299 + t288 * t408, pkin(5) * t33 + t10 * t408 + t16 * t414 - t24 * t86 + t250 * t299 + t253 * t275, t15 * t86 + t16 * t84 + ((-t34 + t365) * pkin(10) + t407) * t253 + ((qJD(6) * t84 - t33) * pkin(10) - t417) * t250, -t6 * pkin(5) + pkin(10) * t257 - t10 * t16 + t15 * t288 - t21 * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, -t84 ^ 2 + t86 ^ 2, t414 * t84 - t33, -t388, t414 * t86 - t34, t72, -t21 * t86 + t417, t21 * t84 - t407, 0, 0;];
tauc_reg  = t7;
