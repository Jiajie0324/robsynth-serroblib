% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:42:47
% EndTime: 2019-03-09 09:43:30
% DurationCPUTime: 23.18s
% Computational Cost: add. (13313->837), mult. (32118->1138), div. (0->0), fcn. (36059->10), ass. (0->609)
t526 = sin(pkin(11));
t528 = cos(pkin(11));
t529 = cos(pkin(6));
t527 = sin(pkin(6));
t535 = cos(qJ(2));
t791 = t527 * t535;
t444 = -t529 * t526 - t528 * t791;
t845 = cos(qJ(5));
t420 = t845 * t444;
t445 = -t526 * t791 + t528 * t529;
t532 = sin(qJ(5));
t773 = t532 * t445;
t318 = -t420 + t773;
t534 = cos(qJ(6));
t878 = t534 * t318;
t297 = t878 / 0.2e1;
t298 = -t878 / 0.2e1;
t885 = t297 + t298;
t888 = qJD(6) * t885;
t531 = sin(qJ(6));
t879 = t531 * t318;
t293 = -t879 / 0.2e1;
t294 = t879 / 0.2e1;
t886 = t293 + t294;
t887 = qJD(6) * t886;
t464 = t526 * t845 + t532 * t528;
t533 = sin(qJ(2));
t792 = t527 * t533;
t658 = -t792 / 0.2e1;
t626 = t464 * t658;
t688 = t532 * t792;
t474 = t528 * t688;
t634 = t845 * t792;
t475 = t526 * t634;
t643 = -t474 / 0.2e1 - t475 / 0.2e1;
t287 = t626 + t643;
t683 = qJD(1) * t792;
t632 = t318 * t683;
t884 = -t287 * qJD(2) + t632;
t476 = t528 * t634;
t635 = t526 * t688;
t391 = t635 / 0.2e1 - t476 / 0.2e1;
t511 = t845 * t528;
t772 = t532 * t526;
t463 = -t511 + t772;
t628 = t463 * t658;
t582 = t628 - t391;
t421 = t845 * t445;
t774 = t532 * t444;
t874 = t421 + t774;
t633 = t874 * t683;
t883 = qJD(2) * t582 + t633;
t858 = t318 / 0.2e1;
t857 = t874 / 0.2e1;
t780 = t531 * t874;
t258 = -t534 * t792 + t780;
t882 = t258 * t874;
t765 = t534 * t874;
t260 = t531 * t792 + t765;
t881 = t260 * t874;
t530 = -pkin(2) - qJ(4);
t832 = qJ(3) * t533;
t611 = -t530 * t535 + t832;
t729 = qJD(4) * t533;
t880 = t527 * (qJD(2) * t611 + t729);
t448 = t463 * qJD(5);
t866 = t582 * qJD(1);
t877 = t448 - t866;
t702 = t464 * qJD(2);
t741 = qJD(1) * t318;
t871 = t702 + t741;
t876 = qJD(5) * t318;
t807 = t318 * t463;
t851 = t464 / 0.2e1;
t136 = t874 * t851 - t807 / 0.2e1;
t875 = t136 * qJD(5);
t571 = -qJD(1) * t136 + t463 * t702;
t740 = qJD(1) * t874;
t572 = qJD(2) * t136 + t318 * t740;
t862 = pkin(3) + pkin(8);
t458 = t464 ^ 2;
t459 = t463 ^ 2;
t873 = -t459 - t458;
t698 = t459 - t458;
t872 = t458 / 0.2e1 + t459 / 0.2e1;
t788 = t529 * t464;
t563 = -t420 / 0.2e1 + t788 / 0.2e1 + t773 / 0.2e1;
t656 = -t791 / 0.2e1;
t627 = t463 * t656;
t169 = t627 - t563;
t870 = -qJD(1) * t169 + t702;
t624 = -t421 / 0.2e1;
t218 = -t774 + 0.2e1 * t624;
t703 = t463 * qJD(2);
t869 = qJD(1) * t218 + t703;
t625 = t464 * t656;
t789 = t529 * t463;
t168 = t625 + t624 - t774 / 0.2e1 + t789 / 0.2e1;
t868 = qJD(1) * t168 + t703;
t523 = t531 ^ 2;
t525 = t534 ^ 2;
t502 = t525 - t523;
t640 = qJD(5) * t502;
t867 = qJD(5) * t582;
t787 = t529 * t535;
t508 = pkin(1) * t787;
t401 = -t792 * t862 + t508;
t864 = t318 ^ 2;
t863 = -pkin(5) / 0.2e1;
t861 = t258 / 0.2e1;
t860 = -t260 / 0.2e1;
t859 = -t318 / 0.2e1;
t840 = -pkin(9) + t530;
t477 = t840 * t526;
t641 = t840 * t528;
t370 = t477 * t845 + t532 * t641;
t856 = -t370 / 0.2e1;
t841 = t464 * pkin(10);
t842 = t463 * pkin(5);
t372 = t841 - t842;
t855 = t372 / 0.2e1;
t854 = -t463 / 0.2e1;
t853 = t463 / 0.2e1;
t852 = -t464 / 0.2e1;
t850 = t529 / 0.2e1;
t849 = -t531 / 0.2e1;
t848 = t531 / 0.2e1;
t847 = -t534 / 0.2e1;
t846 = t534 / 0.2e1;
t844 = pkin(1) * t533;
t843 = t318 * pkin(10);
t358 = t529 * t530 - t401;
t385 = (-pkin(1) - t611) * t527;
t211 = t526 * t358 + t528 * t385;
t165 = pkin(9) * t444 + t211;
t210 = t528 * t358 - t385 * t526;
t553 = pkin(4) * t792 - pkin(9) * t445 + t210;
t78 = t165 * t532 - t845 * t553;
t74 = -pkin(5) * t792 + t78;
t839 = -t74 + t78;
t506 = pkin(8) * t791;
t507 = t529 * t844;
t455 = t506 + t507;
t505 = pkin(3) * t791;
t402 = t505 + t455;
t515 = t529 * qJ(3);
t386 = t515 + t402;
t291 = -pkin(4) * t444 + t386;
t621 = pkin(5) * t318 - pkin(10) * t874;
t539 = t291 + t621;
t79 = t165 * t845 + t532 * t553;
t75 = pkin(10) * t792 + t79;
t25 = t531 * t75 - t534 * t539;
t166 = pkin(5) * t874 + t843;
t770 = t534 * t166;
t5 = -t25 * t874 + t79 * t258 + (t531 * t839 + t770) * t318;
t838 = t5 * qJD(1);
t837 = t531 * t78;
t836 = t534 * t78;
t26 = t531 * t539 + t534 * t75;
t785 = t531 * t166;
t6 = -t26 * t874 + t79 * t260 + (t534 * t839 - t785) * t318;
t835 = t6 * qJD(1);
t395 = t528 * t402;
t504 = pkin(2) * t792;
t400 = t504 + (-qJ(3) * t535 + qJ(4) * t533) * t527;
t195 = pkin(4) * t791 + t395 + (-pkin(9) * t792 - t400) * t526;
t686 = t845 * t195;
t262 = t528 * t400 + t526 * t402;
t690 = t528 * t792;
t217 = pkin(9) * t690 + t262;
t775 = t532 * t217;
t576 = t686 - t775;
t110 = -pkin(5) * t791 - t576;
t490 = t534 * t791;
t397 = -t474 - t475;
t801 = t397 * t531;
t328 = -t490 - t801;
t396 = -t476 + t635;
t357 = t508 + (-pkin(4) * t528 - t862) * t792;
t167 = pkin(5) * t396 + pkin(10) * t397 + t357;
t769 = t534 * t167;
t183 = t532 * t195;
t212 = t845 * t217;
t756 = t212 + t183;
t111 = pkin(10) * t791 + t756;
t786 = t531 * t111;
t53 = t769 - t786;
t7 = t110 * t258 - t25 * t396 + t318 * t53 + t328 * t74;
t834 = t7 * qJD(1);
t800 = t397 * t534;
t329 = t531 * t791 - t800;
t771 = t534 * t111;
t784 = t531 * t167;
t54 = t771 + t784;
t8 = t110 * t260 - t26 * t396 - t318 * t54 + t329 * t74;
t833 = t8 * qJD(1);
t13 = t25 * t318 - t258 * t74;
t831 = qJD(1) * t13;
t14 = -t26 * t318 + t260 * t74;
t830 = qJD(1) * t14;
t37 = t291 * t318 - t78 * t792;
t829 = qJD(1) * t37;
t38 = t291 * t874 - t79 * t792;
t828 = qJD(1) * t38;
t653 = -t780 / 0.2e1;
t581 = (t653 + t861) * t464;
t664 = t800 / 0.2e1;
t43 = t664 + t581;
t827 = qJD(1) * t43;
t649 = -t765 / 0.2e1;
t580 = (t649 + t260 / 0.2e1) * t464;
t667 = -t801 / 0.2e1;
t50 = t667 + t580;
t826 = qJD(1) * t50;
t691 = t526 * t792;
t585 = -t210 * t691 + t211 * t690;
t80 = -t386 * t529 + t585;
t825 = qJD(1) * t80;
t82 = -t531 * t864 + t882;
t824 = qJD(1) * t82;
t83 = -t318 * t879 - t882;
t823 = qJD(1) * t83;
t84 = -t534 * t864 + t881;
t822 = qJD(1) * t84;
t85 = t318 * t878 + t881;
t821 = qJD(1) * t85;
t347 = t534 * t464;
t647 = -t347 / 0.2e1;
t668 = t807 / 0.2e1;
t561 = t260 * t647 + t525 * t668;
t806 = t329 * t531;
t89 = -t806 / 0.2e1 + t561;
t820 = qJD(1) * t89;
t90 = -t210 * t445 + t211 * t444;
t819 = qJD(1) * t90;
t659 = t258 * t852;
t94 = t659 + t664 + (t668 + t656) * t531;
t818 = qJD(1) * t94;
t568 = t260 * t852 + t297 * t463;
t618 = -t490 / 0.2e1 + t667;
t95 = t568 + t618;
t817 = qJD(1) * t95;
t19 = t291 * t396 + t357 * t318 + (t533 * t576 - t78 * t535) * t527;
t816 = t19 * qJD(1);
t20 = -t357 * t874 + t291 * t397 + (t533 * t756 + t79 * t535) * t527;
t815 = t20 * qJD(1);
t814 = t260 * t531;
t813 = t260 * t534;
t261 = -t526 * t400 + t395;
t812 = t261 * t528;
t811 = t262 * t526;
t27 = -t261 * t445 + t262 * t444 + t585;
t810 = t27 * qJD(1);
t30 = t210 * t261 + t211 * t262 + t386 * t401;
t809 = t30 * qJD(1);
t369 = t477 * t532 - t641 * t845;
t510 = pkin(4) * t526 + qJ(3);
t657 = t792 / 0.2e1;
t541 = t291 * t852 + t369 * t657 + t510 * t859;
t646 = -t183 / 0.2e1 - t212 / 0.2e1;
t31 = t541 - t646;
t808 = t31 * qJD(1);
t542 = t291 * t854 + t370 * t658 + t510 * t857;
t566 = -t775 / 0.2e1 + t686 / 0.2e1;
t33 = t542 - t566;
t805 = t33 * qJD(1);
t344 = t463 * t531;
t768 = t534 * t258;
t575 = t768 / 0.2e1 + t814 / 0.2e1;
t548 = -t344 * t878 + t464 * t575;
t578 = t328 * t849 + t329 * t846;
t36 = t548 - t578;
t804 = t36 * qJD(1);
t803 = t369 * t531;
t802 = t369 * t534;
t454 = pkin(8) * t792 - t508;
t799 = t454 * t529;
t798 = t455 * t529;
t797 = t463 * t260;
t349 = t463 * t534;
t796 = t464 * t318;
t520 = t527 ^ 2;
t524 = t533 ^ 2;
t795 = t520 * t524;
t794 = t520 * t535;
t793 = t526 * t444;
t790 = t528 * t445;
t783 = t531 * t258;
t779 = t531 * t370;
t778 = t531 * t372;
t777 = t531 * t396;
t342 = t531 * t464;
t776 = t531 * t529;
t764 = t534 * t370;
t763 = t534 * t372;
t762 = t534 * t396;
t761 = t534 * t529;
t67 = -t401 * t444 + (t210 * t535 + (-t386 * t528 + t261) * t533) * t527;
t760 = t67 * qJD(1);
t68 = -t401 * t445 - t386 * t691 + (t211 * t535 + t262 * t533) * t527;
t759 = t68 * qJD(1);
t609 = t768 + t814;
t73 = t609 * t318;
t758 = t73 * qJD(1);
t81 = -t258 * t329 - t260 * t328;
t757 = t81 * qJD(1);
t410 = t421 / 0.2e1;
t313 = t410 + t774 / 0.2e1;
t519 = t526 ^ 2;
t521 = t528 ^ 2;
t497 = t519 + t521;
t606 = t761 - t777;
t104 = t397 * t258 + t318 * t606;
t754 = qJD(1) * t104;
t607 = t762 + t776;
t105 = t397 * t260 - t318 * t607;
t753 = qJD(1) * t105;
t144 = 0.2e1 * t293;
t752 = qJD(1) * t144;
t645 = 0.2e1 * t858;
t146 = t645 * t531;
t751 = qJD(1) * t146;
t177 = t396 * t792 - t529 * t874;
t748 = qJD(1) * t177;
t178 = t318 * t529 - t397 * t792;
t747 = qJD(1) * t178;
t615 = -pkin(2) * t535 - t832;
t419 = (-pkin(1) + t615) * t527;
t447 = -qJ(3) * t791 + t504;
t208 = t799 + (t419 * t535 + t447 * t533) * t527;
t746 = qJD(1) * t208;
t743 = qJD(1) * t260;
t418 = -t515 - t455;
t268 = t418 * t529 + t419 * t792;
t742 = qJD(1) * t268;
t373 = -t444 * t529 + t526 * t795;
t739 = qJD(1) * t373;
t374 = t445 * t529 + t528 * t795;
t738 = qJD(1) * t374;
t737 = qJD(1) * t391;
t735 = qJD(2) * t454;
t734 = qJD(2) * t455;
t733 = qJD(2) * t526;
t732 = qJD(2) * t528;
t731 = qJD(2) * t529;
t730 = qJD(3) * t464;
t728 = qJD(4) * t534;
t727 = qJD(5) * t531;
t726 = qJD(5) * t534;
t725 = qJD(6) * t318;
t724 = qJD(6) * t391;
t723 = qJD(6) * t531;
t722 = qJD(6) * t534;
t102 = -t258 * t396 - t318 * t328;
t721 = t102 * qJD(1);
t103 = t260 * t396 + t318 * t329;
t720 = t103 * qJD(1);
t123 = t318 * t397 - t396 * t874;
t719 = t123 * qJD(1);
t569 = -pkin(2) * t529 + t454;
t139 = t418 * t454 + t419 * t447 + t455 * t569;
t718 = t139 * qJD(1);
t141 = (-t418 - t455) * t792 + (t454 - t569) * t791;
t717 = t141 * qJD(1);
t152 = 0.2e1 * t298;
t716 = t152 * qJD(1);
t172 = (-t318 * t535 - t396 * t533) * t527;
t715 = t172 * qJD(1);
t173 = (-t397 * t533 + t535 * t874) * t527;
t714 = t173 * qJD(1);
t209 = t798 + (-t419 * t533 + t447 * t535) * t527;
t713 = t209 * qJD(1);
t265 = t444 * t690 + t445 * t691;
t712 = t265 * qJD(1);
t283 = t628 + t391;
t711 = t283 * qJD(1);
t710 = t283 * qJD(2);
t286 = t626 - t643;
t707 = t286 * qJD(1);
t277 = t287 * qJD(1);
t706 = t342 * qJD(2);
t387 = t520 * t844 + t798;
t705 = t387 * qJD(1);
t388 = pkin(1) * t794 - t799;
t704 = t388 * qJD(1);
t451 = t464 * qJD(5);
t466 = (t535 ^ 2 - t524) * t520;
t701 = t466 * qJD(1);
t514 = t529 * qJD(3);
t697 = pkin(5) * t861;
t696 = pkin(5) * t860;
t695 = t328 * t863;
t694 = t329 * t863;
t693 = t74 / 0.2e1 - t78 / 0.2e1;
t692 = t533 * t794;
t689 = t527 * t787;
t687 = t74 * t848;
t685 = t260 * t741;
t681 = t525 * t703;
t680 = t534 * t703;
t679 = t531 * t702;
t678 = t534 * t702;
t677 = qJD(2) * t531 * t534;
t676 = t527 * t729;
t675 = qJD(5) * t792;
t674 = t531 * t726;
t673 = t464 * t723;
t672 = t464 * t722;
t671 = t463 * t451;
t670 = qJD(2) * t791;
t669 = t531 * t722;
t442 = t534 * t448;
t666 = t801 / 0.2e1;
t665 = -t800 / 0.2e1;
t663 = t258 * t854;
t662 = t797 / 0.2e1;
t661 = -t344 / 0.2e1;
t660 = -t349 / 0.2e1;
t655 = t791 / 0.2e1;
t654 = -t786 / 0.2e1;
t378 = -t777 / 0.2e1;
t377 = t777 / 0.2e1;
t652 = -t342 / 0.2e1;
t651 = t342 / 0.2e1;
t650 = -t771 / 0.2e1;
t648 = -t762 / 0.2e1;
t644 = 0.2e1 * t857;
t642 = -t519 / 0.2e1 - t521 / 0.2e1;
t639 = -t706 - t723;
t503 = qJD(1) * t529 + qJD(2);
t638 = -qJD(6) - t741;
t637 = qJD(2) * t510 + qJD(4);
t636 = qJD(6) + t702;
t631 = t531 * t442;
t630 = qJD(1) * t689;
t629 = t463 * t677;
t623 = t843 / 0.2e1 + t166 / 0.2e1;
t622 = t167 / 0.2e1 + t74 * t853;
t620 = pkin(5) * t464 + pkin(10) * t463;
t619 = 0.2e1 * t629;
t617 = t796 / 0.2e1 + t850;
t616 = t344 * qJD(5) - t672;
t614 = -qJD(5) - t683;
t540 = -pkin(10) * t396 / 0.2e1 + t79 * t853 + t693 * t464;
t562 = t510 + t620;
t181 = -t534 * t562 + t779;
t551 = t181 * t857 + t25 * t854 + t258 * t856;
t564 = t110 / 0.2e1 + t318 * t855 + t166 * t851;
t1 = t531 * t540 - t534 * t564 + t551 + t695;
t51 = t372 * t347 + (t181 - t779) * t463;
t613 = -t1 * qJD(1) + t51 * qJD(2);
t182 = t531 * t562 + t764;
t549 = t182 * t857 + t26 * t854 + t260 * t856;
t2 = t531 * t564 + t534 * t540 + t549 + t694;
t52 = -t372 * t342 + (t182 - t764) * t463;
t612 = -t2 * qJD(1) + t52 * qJD(2);
t121 = -t182 * t464 - t349 * t369;
t550 = t182 * t858 + t26 * t851 + t369 * t860;
t9 = t534 * t622 + t550 + t654;
t610 = qJD(1) * t9 - qJD(2) * t121;
t608 = t811 + t812;
t552 = t181 * t859 + t25 * t852 + t369 * t861;
t10 = -t531 * t622 + t552 + t650;
t120 = t181 * t464 + t344 * t369;
t605 = -qJD(1) * t10 + qJD(2) * t120;
t125 = -t874 ^ 2 + t864;
t92 = t463 * t874 + t796;
t604 = qJD(1) * t125 + qJD(2) * t92;
t595 = 0.1e1 / 0.2e1 + t872;
t213 = t595 * t531;
t381 = t762 / 0.2e1;
t98 = t531 * t617 + t381 + t663;
t603 = -qJD(1) * t98 - qJD(2) * t213;
t278 = t698 * t531;
t544 = (t780 / 0.2e1 + t861) * t463 + t318 * t342;
t40 = t648 + t544;
t602 = -qJD(1) * t40 + qJD(2) * t278;
t279 = t873 * t531;
t560 = t464 * t645 + t854 * t874;
t538 = t531 * t560 + t663;
t42 = t648 + t538;
t601 = qJD(1) * t42 - qJD(2) * t279;
t280 = t698 * t534;
t543 = (t649 + t860) * t463 - t318 * t347;
t46 = t378 + t543;
t600 = -qJD(1) * t46 - qJD(2) * t280;
t599 = qJD(1) * t92 - qJD(2) * t698;
t356 = t873 * t534;
t537 = t560 * t534 - t797 / 0.2e1;
t48 = t377 + t537;
t598 = qJD(1) * t48 - qJD(2) * t356;
t462 = t497 * t530;
t536 = (t530 * t444 / 0.2e1 - t211 / 0.2e1) * t526 + (-t530 * t445 / 0.2e1 - t210 / 0.2e1) * t528;
t59 = -t508 / 0.2e1 + (pkin(8) / 0.2e1 + pkin(3) / 0.2e1) * t792 + t536;
t597 = qJD(1) * t59 - qJD(2) * t462;
t596 = t463 * t636;
t579 = -t812 / 0.2e1 - t811 / 0.2e1;
t583 = t515 + t505 / 0.2e1 + t506 / 0.2e1 + t507 / 0.2e1;
t114 = t579 + t583;
t594 = qJ(3) * qJD(2) + qJD(1) * t114;
t100 = -t534 * t617 + t377 + t662;
t266 = t595 * t534;
t593 = -qJD(1) * t100 + qJD(2) * t266;
t149 = t644 * t531;
t592 = -qJD(1) * t149 + qJD(2) * t344;
t151 = 0.2e1 * t297;
t591 = -qJD(1) * t151 - qJD(2) * t347;
t577 = -t793 / 0.2e1 + t790 / 0.2e1;
t281 = t850 + t577;
t479 = -0.1e1 / 0.2e1 + t642;
t590 = qJD(1) * t281 - qJD(2) * t479;
t457 = t511 / 0.2e1 - t772 / 0.2e1;
t589 = qJD(1) * t313 + qJD(2) * t457;
t316 = -t790 + t793;
t350 = t444 ^ 2 + t445 ^ 2;
t588 = qJD(1) * t350 - qJD(2) * t316;
t587 = qJD(1) * t316 - qJD(2) * t497;
t480 = t529 ^ 2 + t795;
t586 = qJD(1) * t480 + t731;
t584 = t841 / 0.2e1 - t842 / 0.2e1;
t56 = t294 + t529 * t651 + (t329 / 0.2e1 + t664) * t463;
t574 = qJD(1) * t56 + t679;
t55 = (t328 / 0.2e1 + t666) * t463 + (t859 - t788 / 0.2e1) * t534;
t573 = qJD(1) * t55 - t678;
t154 = t644 * t534;
t570 = -qJD(1) * t154 + t680;
t567 = t855 + t584;
t62 = (t783 - t813) * t463;
t97 = t258 ^ 2 - t260 ^ 2;
t565 = qJD(1) * t97 - qJD(2) * t62 - qJD(5) * t609;
t116 = t567 * t531;
t15 = t531 * t623 + t534 * t693 + t697;
t559 = pkin(5) * t726 - qJD(1) * t15 - qJD(2) * t116;
t118 = t567 * t534;
t17 = t531 * t693 - t534 * t623 + t696;
t558 = pkin(5) * t727 - qJD(1) * t17 + qJD(2) * t118;
t115 = t575 * t463;
t132 = -t783 / 0.2e1 + t813 / 0.2e1;
t557 = -qJD(2) * t115 - qJD(5) * t132 + t258 * t743;
t341 = (-t523 / 0.2e1 + t525 / 0.2e1) * t463;
t556 = qJD(1) * t132 - qJD(2) * t341 + t674;
t555 = qJD(6) * t313 + t572;
t554 = -qJD(6) * t457 + t571;
t355 = t502 * t459;
t547 = -qJD(1) * t62 - qJD(2) * t355 + 0.2e1 * t631;
t546 = -qJD(1) * t609 + t619 + t640;
t545 = -qJD(1) * t115 + qJD(5) * t341 + t459 * t677;
t522 = qJ(3) * qJD(3);
t488 = qJD(2) * t655;
t485 = qJD(2) * t692;
t484 = qJD(1) * t692;
t481 = t503 * qJ(3);
t478 = 0.1e1 / 0.2e1 + t642;
t461 = t503 * t528;
t460 = t503 * t526;
t443 = t457 * qJD(5);
t423 = t503 * t791;
t422 = qJD(5) * t655 + t484;
t405 = 0.2e1 * t463 * t669;
t331 = t342 * qJD(6);
t330 = t341 * qJD(6);
t314 = t410 + t624;
t304 = t316 * qJD(4);
t288 = t463 * t657 - t391;
t282 = t850 - t577;
t275 = t287 * qJD(5);
t274 = t286 * qJD(2);
t273 = t286 * qJD(5);
t267 = -t847 * t873 + t846;
t215 = -t451 + t277;
t214 = t531 * t872 + t849;
t185 = qJD(2) * t391 + qJD(5) * t313;
t171 = -t789 / 0.2e1 + t625 + t313;
t170 = t627 + t563;
t155 = t765 / 0.2e1 + t874 * t847;
t148 = t848 * t874 + t653;
t127 = t132 * qJD(6);
t119 = t803 + t763 / 0.2e1 - t584 * t534;
t117 = t802 - t778 / 0.2e1 + t584 * t531;
t113 = -t579 + t583;
t112 = t115 * qJD(6);
t101 = t318 * t647 + t662 + t378 + t761 / 0.2e1;
t99 = t318 * t651 + t663 + t648 - t776 / 0.2e1;
t96 = t568 - t618;
t93 = t294 * t463 + t531 * t655 + t659 + t665;
t91 = t92 * qJD(5);
t88 = t806 / 0.2e1 + t561;
t86 = t609 * qJD(6);
t61 = t62 * qJD(6);
t60 = t508 / 0.2e1 + t536 + t862 * t658;
t58 = t328 * t853 + t396 * t652 + t397 * t661 + t606 * t851 + t297;
t57 = t329 * t853 + t396 * t647 + t397 * t660 + t607 * t852 + t293;
t49 = t666 + t580;
t47 = t378 + t537;
t45 = t377 + t543;
t44 = t665 + t581;
t41 = t381 + t538;
t39 = t381 + t544;
t35 = t548 + t578;
t34 = t542 + t566;
t32 = t541 + t646;
t18 = pkin(10) * t298 + t696 + t687 + t837 / 0.2e1 + t770 / 0.2e1;
t16 = pkin(10) * t294 + t697 + t74 * t846 + t836 / 0.2e1 - t785 / 0.2e1;
t12 = t74 * t660 + t654 + t769 / 0.2e1 - t550;
t11 = t463 * t687 + t650 - t784 / 0.2e1 - t552;
t4 = (t778 - t802) * t859 + (t785 - t836) * t852 + t369 * t298 + t79 * t660 + t74 * t647 + pkin(10) * t648 + t694 + t110 * t848 - t549;
t3 = (t763 + t803) * t858 + (t770 + t837) * t851 + t369 * t293 + t79 * t661 + t74 * t652 + pkin(10) * t378 + t695 + t110 * t847 - t551;
t21 = [0, 0, 0, t485, t466 * qJD(2), t529 * t670, -t731 * t792, 0, -t387 * qJD(2), -t388 * qJD(2), -t141 * qJD(2) + qJD(3) * t689, t209 * qJD(2) - qJD(3) * t692, -qJD(2) * t208 + qJD(3) * t480, qJD(2) * t139 - qJD(3) * t268, qJD(2) * t67 + qJD(3) * t373 - t445 * t676, -qJD(2) * t68 + qJD(3) * t374 - t444 * t676, qJD(2) * t27 - qJD(3) * t265 + qJD(4) * t350, qJD(2) * t30 - qJD(3) * t80 + qJD(4) * t90 (-qJD(2) * t397 - t876) * t874, qJD(2) * t123 + qJD(5) * t125, qJD(2) * t173 - t318 * t675, qJD(2) * t172 - t675 * t874, t485, qJD(2) * t19 + qJD(3) * t178 + qJD(5) * t38 - t676 * t874, -qJD(2) * t20 - qJD(3) * t177 - qJD(5) * t37 + t318 * t676 (qJD(2) * t329 - qJD(6) * t258 - t318 * t726) * t260, qJD(2) * t81 + qJD(5) * t73 + qJD(6) * t97, qJD(2) * t103 + qJD(5) * t84 - t258 * t725, qJD(2) * t102 - qJD(5) * t82 - t260 * t725 (qJD(2) * t396 + qJD(5) * t874) * t318, qJD(2) * t7 + qJD(3) * t104 - qJD(4) * t83 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t8 + qJD(3) * t105 + qJD(4) * t85 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, t484, t701, t423, -t503 * t792, 0, -t705 - t734, -t704 + t735, -t717 + (qJD(2) * t615 + t535 * qJD(3)) * t527, t713 + t734, t514 - t735 - t746, t718 + (-pkin(2) * t455 - qJ(3) * t454) * qJD(2) - t418 * qJD(3), -qJD(3) * t444 + t401 * t733 - t528 * t880 + t760, qJD(3) * t445 + t401 * t732 + t526 * t880 - t759, -qJD(2) * t608 - t304 + t810, t809 + (t401 * qJ(3) + t530 * t608) * qJD(2) + t113 * qJD(3) + t60 * qJD(4), -t875 + (t703 - t740) * t397, t719 + (t396 * t463 + t397 * t464) * qJD(2) + t91, -t463 * t670 + t273 + t714, -t283 * qJD(5) - t464 * t670 + t715, t422, t816 + (t357 * t464 - t369 * t791 + t510 * t396) * qJD(2) + t170 * qJD(3) - t582 * qJD(4) + t34 * qJD(5), -t815 + (-t357 * t463 - t370 * t791 - t510 * t397) * qJD(2) + t171 * qJD(3) - t287 * qJD(4) + t32 * qJD(5), qJD(5) * t88 + t112 + (-t680 + t743) * t329, t757 + t35 * qJD(5) - t61 + (t328 * t534 + t806) * t703, t720 + (t329 * t464 - t463 * t762) * qJD(2) + t45 * qJD(5) + t93 * qJD(6), t721 + (-t328 * t464 + t463 * t777) * qJD(2) + t39 * qJD(5) + t96 * qJD(6), t396 * t871 + t724 + t875, t834 + (-t110 * t344 - t181 * t396 + t328 * t369 + t464 * t53) * qJD(2) + t58 * qJD(3) + t41 * qJD(4) + t3 * qJD(5) + t12 * qJD(6), t833 + (-t110 * t349 - t182 * t396 + t329 * t369 - t464 * t54) * qJD(2) + t57 * qJD(3) + t47 * qJD(4) + t4 * qJD(5) + t11 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t484, t586, -qJD(2) * t418 - t742, -qJD(2) * t444 + t739, qJD(2) * t445 + t738, -t712, qJD(2) * t113 + qJD(4) * t282 - t825, 0, 0, 0, 0, 0, qJD(2) * t170 + t273 + t747, qJD(2) * t171 + qJD(5) * t288 - t748, 0, 0, 0, 0, 0, qJD(2) * t58 + qJD(5) * t44 + qJD(6) * t101 + t754, qJD(2) * t57 + qJD(5) * t49 + qJD(6) * t99 + t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(1) * t445 - t732) * t792 (-qJD(1) * t444 + t733) * t792, t588, qJD(2) * t60 + qJD(3) * t282 + t819, 0, 0, 0, 0, 0, qJD(5) * t314 - t883, t884, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(5) * t155 - t823 + t887, qJD(2) * t47 + qJD(5) * t148 + t821 + t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t572, t604, t318 * t614 + t274, t614 * t874 - t710, t488, qJD(2) * t34 + qJD(3) * t286 + qJD(4) * t314 - qJD(5) * t79 + t828, qJD(2) * t32 + qJD(3) * t288 + qJD(5) * t78 - t829, qJD(2) * t88 + t127 + (-t727 - t743) * t878, t35 * qJD(2) - t318 * t640 + t758 - t86, qJD(2) * t45 + t727 * t874 + t822 + t888, qJD(2) * t39 + t726 * t874 - t824 + t887, t555, t838 + t3 * qJD(2) + t44 * qJD(3) + t155 * qJD(4) + (t531 * t621 - t79 * t534) * qJD(5) + t18 * qJD(6), t835 + t4 * qJD(2) + t49 * qJD(3) + t148 * qJD(4) + (t79 * t531 + t534 * t621) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t557, t565, qJD(2) * t93 + qJD(5) * t885 + t258 * t638, qJD(2) * t96 + qJD(5) * t886 + t260 * t638, t185, qJD(2) * t12 + qJD(3) * t101 + qJD(4) * t886 + qJD(5) * t18 - qJD(6) * t26 + t830, qJD(2) * t11 + qJD(3) * t99 + qJD(4) * t885 + qJD(5) * t16 + qJD(6) * t25 + t831; 0, 0, 0, -t484, -t701, -t630, t529 * t683, 0, t705, t704, t717, -t713, t514 + t746, qJ(3) * t514 - t718, t514 * t526 - t760, t514 * t528 + t759, -t304 - t810, qJD(3) * t114 + qJD(4) * t59 - t809, t397 * t740 - t875, t91 - t719, t275 - t714, -t715 - t867, -t422, -qJD(3) * t169 - qJD(4) * t283 + qJD(5) * t33 - t816, -qJD(3) * t168 - qJD(4) * t286 + qJD(5) * t31 + t815, qJD(5) * t89 - t329 * t743 + t112, qJD(5) * t36 - t61 - t757, qJD(5) * t46 + qJD(6) * t94 - t720, qJD(5) * t40 + qJD(6) * t95 - t721, -t396 * t741 - t724 + t875, -qJD(3) * t55 + qJD(4) * t42 - qJD(5) * t1 - qJD(6) * t9 - t834, -qJD(3) * t56 + qJD(4) * t48 - qJD(5) * t2 - qJD(6) * t10 - t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t522, qJD(3) * t526, qJD(3) * t528, t497 * qJD(4), -qJD(4) * t462 + t522, t671, -t698 * qJD(5), 0, 0, 0, -t448 * t510 + t730, -qJD(3) * t463 - t451 * t510, -t459 * t669 + t525 * t671, -qJD(6) * t355 - 0.2e1 * t464 * t631, qJD(5) * t280 + t463 * t673, -qJD(5) * t278 + t463 * t672, -t671, -qJD(4) * t279 + qJD(5) * t51 + qJD(6) * t121 + t534 * t730, -qJD(4) * t356 + qJD(5) * t52 + qJD(6) * t120 - t531 * t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t481, t460, t461, 0, qJD(4) * t478 + t594, 0, 0, 0, 0, 0, t870, -t868, 0, 0, 0, 0, 0, qJD(6) * t267 - t573, qJD(6) * t214 - t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, qJD(3) * t478 + t597, 0, 0, 0, 0, 0, -t711, -t707, 0, 0, 0, 0, 0, t601, t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571, t599, t215, t877, qJD(1) * t656, -qJD(5) * t370 - t510 * t703 + t805, qJD(5) * t369 - t510 * t702 + t808, t820 - t330 + (-t674 + t681) * t464, t804 + t405 + (-0.2e1 * t629 - t640) * t464, -t448 * t531 - t600, -t442 - t602, -t554 (t531 * t620 - t764) * qJD(5) + t119 * qJD(6) + t613 (t534 * t620 + t779) * qJD(5) + t117 * qJD(6) + t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, t547, t531 * t596 + t818, t534 * t596 + t817, t443 - t737, qJD(3) * t267 + qJD(5) * t119 - qJD(6) * t182 - t610, qJD(3) * t214 + qJD(5) * t117 + qJD(6) * t181 + t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t630, t484, -t586, -qJ(3) * t731 + t742, -t526 * t731 - t739, -t528 * t731 - t738, t712, -qJD(2) * t114 - qJD(4) * t281 + t825, 0, 0, 0, 0, 0, qJD(2) * t169 + t275 - t747, qJD(2) * t168 + t748 - t867, 0, 0, 0, 0, 0, qJD(2) * t55 + qJD(5) * t43 + qJD(6) * t100 - t754, qJD(2) * t56 + qJD(5) * t50 + qJD(6) * t98 - t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, -t481, -t460, -t461, 0, qJD(4) * t479 - t594, 0, 0, 0, 0, 0, -t870, t868, 0, 0, 0, 0, 0, -qJD(6) * t266 + t573, qJD(6) * t213 + t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t877, 0, 0, 0, 0, 0, qJD(6) * t344 - t451 * t534 + t827, qJD(6) * t349 + t451 * t531 + t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t593 + t616, qJD(5) * t349 - t603 + t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t445 * t683, t444 * t683, -t588, -qJD(2) * t59 + qJD(3) * t281 - t819, 0, 0, 0, 0, 0, -qJD(5) * t218 + t633 + t710, t274 - t632 - t876, 0, 0, 0, 0, 0, -qJD(2) * t42 + qJD(5) * t154 - qJD(6) * t146 + t823, -qJD(2) * t48 - qJD(5) * t149 + qJD(6) * t152 - t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, -qJD(3) * t479 - t597, 0, 0, 0, 0, 0, -t448 + t711, -t451 + t707, 0, 0, 0, 0, 0, -t331 - t442 - t601, -t598 + t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t869, -t871, 0, 0, 0, 0, 0, -t570, t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639 - t751, -t534 * t636 + t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, -t604, t884, t883, t488, -qJD(2) * t33 - qJD(3) * t287 + qJD(4) * t218 - t828, -qJD(2) * t31 + qJD(3) * t582 + qJD(4) * t318 + t829, -qJD(2) * t89 + t534 * t685 + t127, -qJD(2) * t36 - t758 - t86, -qJD(2) * t46 + qJD(6) * t151 - t822, -qJD(2) * t40 + qJD(6) * t144 + t824, -t555, qJD(2) * t1 - qJD(3) * t43 - qJD(4) * t154 + qJD(6) * t17 - t838, qJD(2) * t2 - qJD(3) * t50 + qJD(4) * t149 + qJD(6) * t15 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571, -t599, -t277, t866, qJD(1) * t655, t463 * t637 - t805, t464 * t637 - t808, -t464 * t681 - t330 - t820, t464 * t619 + t405 - t804, qJD(6) * t347 + t600, -t331 + t602, t554, -qJD(6) * t118 + t463 * t728 - t613, -qJD(4) * t344 + qJD(6) * t116 - t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, t866, 0, 0, 0, 0, 0, -t827, -t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t869, t871, 0, 0, 0, 0, 0, t570, -t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, t502 * qJD(6), 0, 0, 0, -pkin(5) * t723, -pkin(5) * t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t556, t546, -t591 + t722, t639 + t752, -t589, -pkin(10) * t722 - t558, pkin(10) * t723 - t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t557, -t565, -qJD(2) * t94 - qJD(5) * t151 + t258 * t741, -qJD(2) * t95 - qJD(5) * t144 + t685, t185, qJD(2) * t9 - qJD(3) * t100 + qJD(4) * t146 - qJD(5) * t17 - t830, qJD(2) * t10 - qJD(3) * t98 - qJD(4) * t152 - qJD(5) * t15 - t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, -t547, -qJD(5) * t347 - t463 * t679 - t818, qJD(5) * t342 - t463 * t678 - t817, t443 + t737, qJD(3) * t266 + qJD(4) * t342 + qJD(5) * t118 + t610, -qJD(3) * t213 - qJD(5) * t116 + t464 * t728 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t593, t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t706 + t751, t678 - t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t556, -t546, t591, t706 - t752, t589, t558, t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
