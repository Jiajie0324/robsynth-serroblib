% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPPRR11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:42:52
% EndTime: 2019-03-09 09:43:57
% DurationCPUTime: 49.65s
% Computational Cost: add. (36654->1206), mult. (82948->1584), div. (0->0), fcn. (91483->10), ass. (0->848)
t825 = sin(pkin(6));
t832 = cos(qJ(2));
t1221 = t825 * t832;
t824 = sin(pkin(11));
t826 = cos(pkin(11));
t827 = cos(pkin(6));
t737 = -t1221 * t824 + t826 * t827;
t829 = sin(qJ(5));
t1202 = t829 * t737;
t1306 = cos(qJ(5));
t736 = -t1221 * t826 - t824 * t827;
t708 = t1306 * t736;
t578 = -t708 + t1202;
t831 = cos(qJ(6));
t1368 = t831 * t578;
t551 = t1368 / 0.2e1;
t552 = -t1368 / 0.2e1;
t1374 = t551 + t552;
t1377 = qJD(6) * t1374;
t828 = sin(qJ(6));
t1369 = t828 * t578;
t545 = -t1369 / 0.2e1;
t546 = t1369 / 0.2e1;
t1375 = t545 + t546;
t1376 = qJD(6) * t1375;
t830 = sin(qJ(2));
t1222 = t825 * t830;
t1303 = pkin(4) * t826;
t1333 = pkin(3) + pkin(8);
t1218 = t827 * t832;
t804 = pkin(1) * t1218;
t637 = t804 + (-t1303 - t1333) * t1222;
t1082 = t824 * t1222;
t1000 = t829 * t1082;
t998 = t1306 * t1222;
t772 = t826 * t998;
t684 = -t772 + t1000;
t1077 = t1306 * t824;
t1201 = t829 * t826;
t761 = t1077 + t1201;
t685 = t761 * t1222;
t357 = pkin(5) * t684 - pkin(10) * t685 + t637;
t1197 = t831 * t357;
t1087 = t825 * t1333;
t1003 = t832 * t1087;
t1305 = pkin(1) * t830;
t1092 = t827 * t1305;
t690 = t1003 + t1092;
t683 = t826 * t690;
t803 = pkin(2) * t1222;
t688 = t803 + (-qJ(3) * t832 + qJ(4) * t830) * t825;
t405 = pkin(4) * t1221 + t683 + (-pkin(9) * t1222 - t688) * t824;
t379 = t829 * t405;
t1081 = t826 * t1222;
t501 = t688 * t826 + t690 * t824;
t429 = pkin(9) * t1081 + t501;
t424 = t1306 * t429;
t275 = t424 + t379;
t261 = pkin(10) * t1221 + t275;
t1216 = t828 * t261;
t150 = t1197 - t1216;
t1223 = t825 * t826;
t1297 = -pkin(2) - qJ(4);
t1015 = t1297 * t832;
t1294 = qJ(3) * t830;
t896 = t1015 - t1294;
t970 = t1297 * t827 - t804;
t423 = (-pkin(1) + t896) * t1223 + t824 * (t1087 * t830 + t970);
t355 = pkin(9) * t736 + t423;
t1304 = pkin(2) * t827;
t854 = t826 * (-qJ(4) * t827 - t1304 - t804) - t737 * pkin(9);
t838 = t1306 * t355 + t829 * t854;
t918 = t824 * qJ(3) + t1333 * t826;
t887 = pkin(4) + t918;
t919 = t824 * (-pkin(1) + t1015);
t200 = (-t829 * t919 + (t829 * t887 + pkin(10)) * t830) * t825 + t838;
t1301 = t736 * pkin(4);
t1352 = (qJ(3) + t1305) * t827;
t674 = t1003 + t1352;
t541 = t674 - t1301;
t1203 = t829 * t736;
t709 = t1306 * t737;
t1347 = t709 + t1203;
t981 = t578 * pkin(5) - pkin(10) * t1347;
t836 = t541 + t981;
t104 = t831 * t200 + t828 * t836;
t1318 = -t761 / 0.2e1;
t1370 = -t578 / 0.2e1;
t1094 = -pkin(9) + t1297;
t1004 = t1094 * t826;
t773 = t1094 * t824;
t651 = t1004 * t829 + t1306 * t773;
t1192 = t831 * t651;
t806 = pkin(4) * t824 + qJ(3);
t1300 = t761 * pkin(5);
t1076 = t1306 * t826;
t808 = t829 * t824;
t764 = t1076 - t808;
t980 = -pkin(10) * t764 + t1300;
t874 = t806 + t980;
t378 = t828 * t874 + t1192;
t913 = t104 * t1318 + t1370 * t378;
t1373 = -t150 / 0.2e1 + t913;
t1187 = -t1000 / 0.2e1 + t772 / 0.2e1;
t1042 = t1222 / 0.2e1;
t987 = t764 * t1042;
t917 = t987 + t1187;
t1070 = qJD(1) * t1222;
t997 = t1347 * t1070;
t1372 = qJD(2) * t917 + t997;
t1100 = t761 * qJD(2);
t1151 = qJD(1) * t578;
t1340 = t1100 + t1151;
t1335 = t578 ^ 2;
t1371 = t1347 ^ 2;
t1326 = t578 / 0.2e1;
t1324 = t1347 / 0.2e1;
t529 = (t1318 - t1077 / 0.2e1 - t1201 / 0.2e1) * t1222;
t996 = t1070 * t578;
t1367 = -qJD(2) * t529 + t996;
t1230 = t685 * t764;
t958 = t684 * t761 + t1230;
t1366 = qJD(3) * t958;
t1137 = qJD(5) * t578;
t823 = t831 ^ 2;
t1312 = -t823 / 0.2e1;
t821 = t828 ^ 2;
t1016 = t1312 - t821 / 0.2e1;
t1365 = t1016 * t578;
t1210 = t828 * t1347;
t497 = -t1222 * t831 + t1210;
t1364 = t1347 * t497;
t1193 = t831 * t1347;
t499 = t1222 * t828 + t1193;
t1363 = t1347 * t499;
t1249 = t1347 * t764;
t1247 = t578 * t764;
t1317 = t761 / 0.2e1;
t902 = t1347 * t1317 + t1247 / 0.2e1;
t1362 = t902 * qJD(5);
t1313 = t821 / 0.2e1;
t616 = (t1313 + t1312) * t764;
t1135 = qJD(5) * t831;
t801 = t828 * t1135;
t1361 = qJD(2) * t616 - t801;
t1360 = t1340 * t684 + t1362;
t1349 = t917 * qJD(1);
t750 = t764 * qJD(5);
t1359 = -t750 - t1349;
t757 = t764 ^ 2;
t1196 = t831 * t497;
t1029 = t1196 / 0.2e1;
t1254 = t499 * t828;
t897 = t1029 + t1254 / 0.2e1;
t878 = t897 * t764;
t1358 = qJD(2) * t757 * t828 * t831 + qJD(1) * t878 + qJD(5) * t616;
t1357 = -t1151 * t684 + t1362;
t1098 = t764 * qJD(2);
t1356 = qJD(1) * t902 + t1098 * t761;
t1150 = qJD(1) * t1347;
t1355 = qJD(2) * t902 + t1150 * t578;
t756 = t761 ^ 2;
t1354 = -t757 - t756;
t1093 = t757 - t756;
t817 = t824 ^ 2;
t819 = t826 ^ 2;
t795 = t817 + t819;
t1353 = qJD(5) * t917;
t1351 = t878 * qJD(6);
t835 = (t830 * t887 - t919) * t825;
t205 = t829 * t835 + t838;
t1272 = t205 * t764;
t190 = -t1272 / 0.2e1;
t204 = t355 * t829 - t1306 * (t835 + t854);
t199 = -pkin(5) * t1222 + t204;
t1348 = t1317 * t199 + t190;
t1213 = t828 * t497;
t1253 = t499 * t831;
t465 = -t1253 / 0.2e1;
t303 = t465 + t1213 / 0.2e1;
t1346 = qJD(1) * t303 + t1361;
t462 = -t1213 / 0.2e1;
t302 = t462 + t1253 / 0.2e1;
t1345 = -qJD(1) * t302 + t1361;
t983 = t756 / 0.2e1 + t757 / 0.2e1;
t984 = -t709 / 0.2e1;
t431 = -t1203 + 0.2e1 * t984;
t1342 = -qJD(1) * t431 + t1098;
t1219 = t827 * t764;
t1041 = -t1221 / 0.2e1;
t988 = t761 * t1041;
t358 = t988 + t984 - t1203 / 0.2e1 - t1219 / 0.2e1;
t1341 = -qJD(1) * t358 + t1098;
t1311 = t827 / 0.2e1;
t876 = -t708 / 0.2e1 + t761 * t1311 + t1202 / 0.2e1;
t1040 = t1221 / 0.2e1;
t986 = t764 * t1040;
t359 = t986 - t876;
t1339 = -qJD(1) * t359 + t1100;
t1251 = t501 * t824;
t500 = -t824 * t688 + t683;
t1252 = t500 * t826;
t1338 = t1251 + t1252;
t1153 = qJD(1) * t499;
t1336 = qJD(2) * t878 + t1153 * t497;
t1334 = -pkin(5) / 0.2e1;
t1331 = t199 / 0.2e1;
t1330 = t497 / 0.2e1;
t1329 = -t499 / 0.2e1;
t1328 = t499 / 0.2e1;
t1206 = t828 * t685;
t788 = t831 * t1221;
t598 = -t788 + t1206;
t1323 = -t598 / 0.2e1;
t1189 = t831 * t685;
t599 = t1221 * t828 + t1189;
t1322 = -t599 / 0.2e1;
t1190 = t831 * t684;
t1205 = t828 * t827;
t630 = t1190 + t1205;
t1321 = -t630 / 0.2e1;
t650 = -t1004 * t1306 + t773 * t829;
t1320 = t650 / 0.2e1;
t1319 = -t651 / 0.2e1;
t1316 = -t764 / 0.2e1;
t1315 = t764 / 0.2e1;
t1314 = t806 / 0.2e1;
t1310 = -t828 / 0.2e1;
t1309 = t828 / 0.2e1;
t1308 = -t831 / 0.2e1;
t1307 = t831 / 0.2e1;
t1302 = t578 * pkin(10);
t1299 = t761 * pkin(10);
t1298 = t764 * pkin(5);
t1018 = 0.2e1 * t1324;
t1019 = 0.2e1 * t1326;
t979 = t1019 * t761;
t162 = t1018 * t764 + t979;
t28 = t190 + t1272 / 0.2e1;
t1296 = qJD(4) * t162 + qJD(5) * t28;
t653 = t1298 + t1299;
t1208 = t828 * t653;
t1236 = t650 * t831;
t417 = t1208 - t1236;
t1258 = t417 * t831;
t1191 = t831 * t653;
t1237 = t650 * t828;
t416 = t1191 + t1237;
t1261 = t416 * t828;
t1262 = t378 * t831;
t1235 = t651 * t828;
t377 = -t831 * t874 + t1235;
t1263 = t377 * t828;
t907 = t1262 / 0.2e1 + t1263 / 0.2e1;
t70 = (t1319 + t907) * t764 + (t1258 / 0.2e1 - t1261 / 0.2e1 + t1320) * t761;
t1295 = t70 * qJD(5);
t1293 = qJD(1) * t28;
t1283 = t104 * t831;
t103 = t200 * t828 - t831 * t836;
t1286 = t103 * t828;
t35 = t199 * t1347 - (t1283 + t1286) * t578;
t1292 = qJD(1) * t35;
t55 = t103 * t578 - t199 * t497;
t1291 = qJD(1) * t55;
t56 = -t104 * t578 + t199 * t499;
t1290 = qJD(1) * t56;
t68 = t1347 * t204 - t205 * t578;
t1289 = qJD(1) * t68;
t1288 = qJD(2) * t28;
t1287 = t103 * t761;
t1285 = t103 * t831;
t1284 = t104 * t828;
t356 = pkin(5) * t1347 + t1302;
t1198 = t831 * t356;
t1217 = t828 * t204;
t124 = t1198 + t1217;
t1282 = t124 * t828;
t1200 = t831 * t204;
t1215 = t828 * t356;
t125 = -t1200 + t1215;
t1281 = t125 * t831;
t1280 = t150 * t831;
t1199 = t831 * t261;
t1214 = t828 * t357;
t151 = t1199 + t1214;
t1279 = t151 * t828;
t17 = -t103 * t124 + t104 * t125 + t199 * t205;
t1278 = t17 * qJD(1);
t1078 = t1306 * t405;
t1204 = t829 * t429;
t274 = t1078 - t1204;
t260 = -pkin(5) * t1221 - t274;
t19 = -t103 * t150 + t104 * t151 + t199 * t260;
t1277 = t19 * qJD(1);
t1276 = t199 * t764;
t1275 = t199 * t828;
t1274 = t199 * t831;
t20 = -t124 * t499 - t125 * t497 + (t1284 - t1285) * t578;
t1273 = t20 * qJD(1);
t21 = t103 * t599 - t104 * t598 - t150 * t499 - t151 * t497;
t1271 = t21 * qJD(1);
t25 = -t103 * t1347 + t205 * t497 + (t124 - t1275) * t578;
t1270 = t25 * qJD(1);
t26 = -t104 * t1347 + t205 * t499 + (-t125 - t1274) * t578;
t1269 = t26 * qJD(1);
t1268 = t274 * t764;
t1267 = t275 * t761;
t29 = -t103 * t684 + t150 * t578 + t199 * t598 + t260 * t497;
t1266 = t29 * qJD(1);
t30 = -t104 * t684 - t151 * t578 + t199 * t599 + t260 * t499;
t1265 = t30 * qJD(1);
t1188 = t831 * t827;
t1207 = t828 * t684;
t629 = t1188 - t1207;
t36 = -t103 * t629 + t104 * t630 - t199 * t685;
t1264 = t36 * qJD(1);
t1260 = t416 * t831;
t1259 = t417 * t828;
t962 = -t204 * t685 + t205 * t684;
t42 = -t1347 * t274 - t275 * t578 - t962;
t1257 = t42 * qJD(1);
t46 = -t204 * t274 + t205 * t275 + t541 * t637;
t1256 = t46 * qJD(1);
t1255 = t499 * t764;
t1250 = t1347 * t650;
t1248 = t578 * t761;
t1246 = t598 * t761;
t1245 = t598 * t831;
t1244 = t599 * t761;
t1243 = t599 * t828;
t1242 = t599 * t831;
t1241 = t629 * t828;
t1240 = t630 * t831;
t65 = t541 * t684 + t637 * t578 + (-t204 * t832 + t274 * t830) * t825;
t1239 = t65 * qJD(1);
t1238 = t650 * t764;
t66 = -t637 * t1347 - t541 * t685 + (t205 * t832 + t275 * t830) * t825;
t1234 = t66 * qJD(1);
t67 = t541 * t827 + t962;
t1233 = t67 * qJD(1);
t1232 = t684 * t651;
t1231 = t685 * t650;
t1229 = t736 * t824;
t752 = pkin(8) * t1222 - t804;
t1228 = t752 * t827;
t1091 = pkin(8) * t1221;
t753 = t1091 + t1092;
t1227 = t753 * t827;
t1226 = t764 * t497;
t818 = t825 ^ 2;
t822 = t830 ^ 2;
t1225 = t818 * t822;
t1224 = t818 * t832;
t1220 = t826 * t737;
t1209 = t828 * t598;
t617 = t828 * t761;
t619 = t828 * t764;
t622 = t831 * t761;
t624 = t831 * t764;
t698 = t709 / 0.2e1;
t573 = t698 + t1203 / 0.2e1;
t985 = t829 * t1042;
t679 = t824 * t985 - t772 / 0.2e1;
t1186 = t821 + t823;
t800 = t823 - t821;
t1020 = -t379 / 0.2e1 - t424 / 0.2e1;
t851 = t1042 * t650 + t1318 * t541 + t1370 * t806;
t114 = t851 - t1020;
t1185 = qJD(1) * t114;
t1043 = -t1222 / 0.2e1;
t850 = t1043 * t651 + t1314 * t1347 + t1315 * t541;
t882 = -t1204 / 0.2e1 + t1078 / 0.2e1;
t116 = t850 - t882;
t1184 = qJD(1) * t116;
t122 = -t1222 * t204 + t541 * t578;
t1183 = qJD(1) * t122;
t123 = -t1222 * t205 + t1347 * t541;
t1182 = qJD(1) * t123;
t1026 = -t1189 / 0.2e1;
t1038 = -t1210 / 0.2e1;
t916 = (t1038 + t1330) * t761;
t130 = t1026 + t916;
t1181 = qJD(1) * t130;
t1035 = t1206 / 0.2e1;
t915 = (-t1193 / 0.2e1 + t1328) * t761;
t137 = t1035 + t915;
t1180 = qJD(1) * t137;
t198 = (-t1196 + t1254) * t578;
t1179 = qJD(1) * t198;
t422 = t826 * t970 + (t830 * t918 - t919) * t825;
t923 = t1081 * t423 - t1082 * t422;
t207 = -t674 * t827 + t923;
t1178 = qJD(1) * t207;
t212 = -t1335 * t828 + t1364;
t1177 = qJD(1) * t212;
t213 = -t1369 * t578 - t1364;
t1176 = qJD(1) * t213;
t214 = -t1335 * t831 + t1363;
t1175 = qJD(1) * t214;
t215 = t1368 * t578 + t1363;
t1174 = qJD(1) * t215;
t219 = -t497 * t630 - t499 * t629;
t1173 = qJD(1) * t219;
t1034 = -t617 / 0.2e1;
t1050 = -t1247 / 0.2e1;
t871 = t1034 * t497 + t1050 * t821;
t223 = t1245 / 0.2e1 + t871;
t1172 = qJD(1) * t223;
t1024 = -t622 / 0.2e1;
t872 = t1024 * t499 + t1050 * t823;
t225 = -t1243 / 0.2e1 + t872;
t1171 = qJD(1) * t225;
t226 = -t422 * t737 + t423 * t736;
t1170 = qJD(1) * t226;
t1045 = t497 * t1318;
t230 = t1045 + t1026 + (t1050 + t1041) * t828;
t1169 = qJD(1) * t230;
t1023 = -t624 / 0.2e1;
t884 = t1023 * t578 + t1318 * t499;
t1036 = -t1206 / 0.2e1;
t973 = t788 / 0.2e1 + t1036;
t231 = t884 - t973;
t1168 = qJD(1) * t231;
t253 = -t497 * t685 + t578 * t629;
t1167 = qJD(1) * t253;
t254 = -t499 * t685 - t578 * t630;
t1166 = qJD(1) * t254;
t279 = -t1347 * t685 - t578 * t684;
t1165 = qJD(1) * t279;
t331 = 0.2e1 * t545;
t1164 = qJD(1) * t331;
t333 = t1019 * t828;
t1163 = qJD(1) * t333;
t339 = 0.2e1 * t552;
t1162 = qJD(1) * t339;
t373 = t1222 * t684 - t1347 * t827;
t1159 = qJD(1) * t373;
t374 = t1222 * t685 + t578 * t827;
t1158 = qJD(1) * t374;
t969 = -pkin(2) * t832 - t1294;
t707 = (-pkin(1) + t969) * t825;
t742 = -qJ(3) * t1221 + t803;
t420 = t1228 + (t707 * t832 + t742 * t830) * t825;
t1157 = qJD(1) * t420;
t1154 = qJD(1) * t497;
t706 = -t1091 - t1352;
t510 = t1222 * t707 + t706 * t827;
t1152 = qJD(1) * t510;
t1085 = t824 * t1225;
t654 = -t736 * t827 + t1085;
t1149 = qJD(1) * t654;
t1084 = t826 * t1225;
t655 = t737 * t827 + t1084;
t1148 = qJD(1) * t655;
t1147 = qJD(1) * t679;
t525 = t987 + t679;
t1146 = qJD(2) * t525;
t1144 = qJD(2) * t752;
t1143 = qJD(2) * t753;
t1142 = qJD(2) * t806;
t1141 = qJD(2) * t825;
t1140 = qJD(2) * t827;
t1139 = qJD(3) * t761;
t1138 = qJD(4) * t831;
t1136 = qJD(5) * t828;
t1134 = qJD(6) * t578;
t1133 = qJD(6) * t679;
t1132 = qJD(6) * t828;
t1131 = qJD(6) * t831;
t110 = -t500 * t737 + t501 * t736 + t923;
t1130 = t110 * qJD(1);
t689 = -t1222 * t1333 + t804;
t113 = t422 * t500 + t423 * t501 + t674 * t689;
t1129 = t113 * qJD(1);
t1037 = t1209 / 0.2e1;
t1046 = t1242 / 0.2e1;
t877 = (t1029 - t1254 / 0.2e1) * t761;
t158 = t1037 + t1046 + t877;
t1128 = t158 * qJD(1);
t1031 = t619 / 0.2e1;
t404 = t499 * t1031;
t165 = t404 + t1241 / 0.2e1 + (-t1226 / 0.2e1 + t1321) * t831;
t1127 = t165 * qJD(1);
t179 = -t689 * t736 + (t422 * t832 + (-t674 * t826 + t500) * t830) * t825;
t1126 = t179 * qJD(1);
t180 = -t689 * t737 - t674 * t1082 + (t423 * t832 + t501 * t830) * t825;
t1125 = t180 * qJD(1);
t959 = t1196 + t1254;
t197 = t959 * t578;
t1124 = t197 * qJD(1);
t209 = -t497 * t599 - t499 * t598;
t1123 = t209 * qJD(1);
t244 = -t497 * t684 - t578 * t598;
t1122 = t244 * qJD(1);
t245 = t499 * t684 + t578 * t599;
t1121 = t245 * qJD(1);
t280 = -t1347 * t684 - t578 * t685;
t1120 = t280 * qJD(1);
t888 = t752 - t1304;
t319 = t706 * t752 + t707 * t742 + t753 * t888;
t1119 = t319 * qJD(1);
t323 = -t706 * t1222 - t888 * t1221 + (t752 * t832 - t753 * t830) * t825;
t1118 = t323 * qJD(1);
t368 = (-t578 * t832 - t684 * t830) * t825;
t1117 = t368 * qJD(1);
t369 = (t1347 * t832 + t685 * t830) * t825;
t1116 = t369 * qJD(1);
t421 = t1227 + (-t707 * t830 + t742 * t832) * t825;
t1115 = t421 * qJD(1);
t506 = (t1220 + t1229) * t1222;
t1114 = t506 * qJD(1);
t1001 = t737 * t1082;
t1002 = t736 * t1081;
t507 = t1001 + t1002;
t1113 = t507 * qJD(1);
t1112 = t525 * qJD(1);
t528 = t761 * t1043 + t824 * t998 / 0.2e1 + t826 * t985;
t1109 = t528 * qJD(1);
t519 = t529 * qJD(1);
t1106 = t616 * qJD(6);
t1105 = t617 * qJD(2);
t635 = t1221 * t736 + t1084;
t1104 = t635 * qJD(1);
t636 = t1221 * t737 + t1085;
t1103 = t636 * qJD(1);
t675 = t1305 * t818 + t1227;
t1102 = t675 * qJD(1);
t676 = pkin(1) * t1224 - t1228;
t1101 = t676 * qJD(1);
t744 = t761 * qJD(5);
t763 = (t832 ^ 2 - t822) * t818;
t1099 = t763 * qJD(1);
t811 = t827 * qJD(3);
t1096 = -t757 / 0.2e1;
t1090 = t1305 / 0.2e1;
t1089 = pkin(5) * t1330;
t1088 = pkin(5) * t1329;
t1086 = t828 * t624;
t1083 = t830 * t1224;
t1080 = t825 * t1218;
t1079 = t804 / 0.2e1 + t1333 * t1043;
t1074 = t497 * t1151;
t1073 = t499 * t1151;
t1068 = t831 * t1100;
t1067 = t821 * t1098;
t1066 = t823 * t1098;
t1065 = t828 * t1098;
t1064 = t831 * t1098;
t1063 = t830 * t1141;
t1062 = qJD(4) * t1222;
t1061 = qJD(5) * t1222;
t1060 = t761 * t1132;
t1059 = t761 * t1131;
t1058 = t761 * t750;
t1057 = t832 * t1141;
t1056 = t828 * t1131;
t1054 = t125 * t1317;
t1052 = -t1255 / 0.2e1;
t1051 = t1249 / 0.2e1;
t1049 = -t1245 / 0.2e1;
t1048 = t1243 / 0.2e1;
t1047 = -t1242 / 0.2e1;
t1044 = t1226 / 0.2e1;
t1039 = -t1216 / 0.2e1;
t659 = -t1207 / 0.2e1;
t658 = t1207 / 0.2e1;
t1033 = t617 / 0.2e1;
t1032 = -t619 / 0.2e1;
t1030 = -t1199 / 0.2e1;
t1028 = t1193 / 0.2e1;
t1027 = -t1190 / 0.2e1;
t1025 = t1189 / 0.2e1;
t1022 = t624 / 0.2e1;
t1021 = t1331 - t204 / 0.2e1;
t1017 = -t817 / 0.2e1 - t819 / 0.2e1;
t633 = t1186 * t764;
t1013 = 0.2e1 * t1086;
t1008 = -t1105 - t1132;
t802 = qJD(1) * t827 + qJD(2);
t1007 = -qJD(6) - t1151;
t1006 = qJD(4) + t1142;
t1005 = -qJD(6) - t1100;
t999 = t825 * (pkin(8) / 0.2e1 + pkin(3) / 0.2e1);
t995 = t757 * t1056;
t994 = t737 * t1070;
t993 = t827 * t1063;
t992 = t827 * t1057;
t991 = t736 * t1070;
t990 = t827 * t1070;
t989 = qJD(1) * t1080;
t982 = t1302 / 0.2e1 + t356 / 0.2e1;
t976 = qJD(2) * t1013;
t975 = qJD(5) * t1013;
t974 = t357 / 0.2e1 - t1276 / 0.2e1;
t972 = t1248 / 0.2e1 + t1311;
t971 = -qJD(5) * t619 - t1059;
t968 = -qJD(5) - t1070;
t906 = t1328 * t416 + t1330 * t417;
t914 = t1287 / 0.2e1 + t377 * t1326;
t3 = (pkin(10) * t1323 + t151 / 0.2e1 + t124 * t1315 + t914) * t831 + (pkin(10) * t599 / 0.2e1 + t125 * t1315 + t1373) * t828 + t906;
t961 = t377 * t831 - t378 * t828;
t79 = (t1259 + t1260) * t764 + t961 * t761;
t967 = -qJD(1) * t3 - qJD(2) * t79;
t966 = t832 * t999;
t138 = (-t377 + t1235) * t764 + (t416 - t1237) * t761;
t841 = t103 * t1315 + t124 * t1318 + t1319 * t497 + t1324 * t377 + t1370 * t416;
t845 = -pkin(10) * t684 / 0.2e1 + t578 * t1320 + t1348;
t921 = pkin(5) * t1323 + t1308 * t260;
t9 = t828 * t845 + t841 + t921;
t965 = -t9 * qJD(1) + t138 * qJD(2);
t156 = t1238 + (-t1262 - t1263) * t761;
t909 = t1276 / 0.2e1 + t1250 / 0.2e1;
t8 = t1373 * t831 + (t377 * t1370 - t1287 / 0.2e1 - t151 / 0.2e1) * t828 + t909;
t964 = -qJD(1) * t8 - qJD(2) * t156;
t963 = t1281 - t1282;
t960 = t1258 - t1261;
t839 = t104 * t1315 + t1319 * t499 + t1324 * t378 + t1326 * t417 + t1054;
t920 = pkin(5) * t1322 + t1309 * t260;
t10 = t831 * t845 + t839 + t920;
t139 = (-t378 + t1192) * t764 + (-t417 - t1236) * t761;
t957 = -t10 * qJD(1) + t139 * qJD(2);
t840 = t1285 / 0.2e1 - t1284 / 0.2e1 + t629 * t377 / 0.2e1 + t378 * t1321 + t1231 / 0.2e1;
t910 = t1307 * t151 + t1310 * t150;
t847 = t1316 * t260 + t761 * t910;
t13 = t840 + t847;
t956 = -qJD(1) * t13 - qJD(2) * t961;
t865 = t1016 * t1299 - t1298 / 0.2e1;
t905 = t1260 / 0.2e1 + t1259 / 0.2e1;
t193 = t865 - t905;
t866 = pkin(10) * t1365 + t1334 * t1347;
t911 = t124 * t1307 + t125 * t1309;
t47 = t866 - t911;
t955 = qJD(1) * t47 + qJD(2) * t193;
t276 = t377 * t761 - t619 * t650;
t858 = t1320 * t497 - t914;
t32 = -t828 * t974 + t1030 + t858;
t954 = -qJD(1) * t32 + qJD(2) * t276;
t277 = -t378 * t761 + t624 * t650;
t857 = t1329 * t650 - t913;
t31 = t831 * t974 + t1039 + t857;
t953 = qJD(1) * t31 - qJD(2) * t277;
t330 = -t651 * t761 + t1238;
t844 = t204 * t1316 + t205 * t1317 - t1250 / 0.2e1 - t578 * t1319;
t875 = t1043 * t1303 + t1079;
t57 = t844 + t875;
t952 = -qJD(1) * t57 + qJD(2) * t330;
t833 = (t1314 + t1090 + qJ(3) / 0.2e1) * t827 + t966 + t1232 / 0.2e1 - t1231 / 0.2e1 - t1301 / 0.2e1;
t908 = -t1268 / 0.2e1 - t1267 / 0.2e1;
t64 = t833 + t908;
t951 = qJD(1) * t64 + t1142;
t950 = t825 * t802;
t949 = t1005 * t831;
t472 = -0.1e1 / 0.2e1 - t983;
t846 = (qJ(3) + t1090) * t827 + t966;
t904 = -t1252 / 0.2e1 - t1251 / 0.2e1;
t266 = t846 + t904;
t948 = qJ(3) * qJD(2) + qJD(1) * t266;
t101 = (-t1246 / 0.2e1 + t1328 + t629 * t1315) * t831 + (t1244 / 0.2e1 + t1330 + t630 * t1315) * t828;
t947 = qJD(1) * t101 + qJD(2) * t633;
t853 = (t1038 - t497 / 0.2e1) * t764 + t578 * t617;
t127 = t1027 + t853;
t520 = t1093 * t828;
t946 = -qJD(1) * t127 + qJD(2) * t520;
t870 = t1051 + t979;
t843 = t828 * t870 + t1044;
t129 = t1027 + t843;
t521 = t1354 * t828;
t945 = qJD(1) * t129 - qJD(2) * t521;
t852 = (t1028 + t1328) * t764 - t578 * t622;
t133 = t659 + t852;
t522 = t1093 * t831;
t944 = -qJD(1) * t133 - qJD(2) * t522;
t842 = t870 * t831 + t1255 / 0.2e1;
t135 = t658 + t842;
t634 = t1354 * t831;
t943 = qJD(1) * t135 - qJD(2) * t634;
t859 = t761 * t1365 - t1249 / 0.2e1;
t900 = t1308 * t629 + t1310 * t630;
t143 = t859 + t900;
t881 = t1016 * t756 + t1096;
t321 = t881 + t1016;
t942 = qJD(1) * t143 + qJD(2) * t321;
t233 = t1371 + t1335;
t941 = qJD(1) * t233 + qJD(2) * t162;
t940 = qJD(1) * t162 - qJD(2) * t1354;
t837 = (t1297 * t736 / 0.2e1 - t423 / 0.2e1) * t824 + (-t1297 * t737 / 0.2e1 - t422 / 0.2e1) * t826;
t171 = -t804 / 0.2e1 + t830 * t999 + t837;
t760 = t795 * t1297;
t939 = qJD(1) * t171 - qJD(2) * t760;
t218 = -0.2e1 * t1365;
t739 = t821 * t761;
t740 = t823 * t761;
t631 = t739 + t740;
t938 = qJD(1) * t218 + qJD(2) * t631;
t228 = t1248 - t1249;
t289 = t1335 - t1371;
t937 = qJD(1) * t289 + qJD(2) * t228;
t936 = qJD(1) * t228 - qJD(2) * t1093;
t662 = t1190 / 0.2e1;
t236 = t828 * t972 + t1044 + t662;
t425 = t472 * t828;
t935 = -qJD(1) * t236 + qJD(2) * t425;
t238 = -t831 * t972 + t1052 + t658;
t508 = t472 * t831;
t934 = -qJD(1) * t238 - qJD(2) * t508;
t903 = -t1318 * t578 + t1051;
t305 = t1311 + t903;
t933 = qJD(1) * t305 - qJD(2) * t472;
t336 = t1018 * t828;
t932 = -qJD(1) * t336 - qJD(2) * t619;
t338 = 0.2e1 * t551;
t931 = -qJD(1) * t338 - qJD(2) * t622;
t898 = -t1229 / 0.2e1 + t1220 / 0.2e1;
t523 = t1311 + t898;
t777 = -0.1e1 / 0.2e1 + t1017;
t930 = qJD(1) * t523 - qJD(2) * t777;
t755 = t1076 / 0.2e1 - t808 / 0.2e1;
t929 = qJD(1) * t573 + qJD(2) * t755;
t576 = -t1220 + t1229;
t625 = t736 ^ 2 + t737 ^ 2;
t928 = qJD(1) * t625 - qJD(2) * t576;
t927 = qJD(1) * t576 - qJD(2) * t795;
t926 = qJD(1) * t736 - qJD(2) * t824;
t925 = qJD(1) * t737 + qJD(2) * t826;
t778 = t827 ^ 2 + t1225;
t924 = qJD(1) * t778 + t1140;
t922 = t1299 / 0.2e1 + t1298 / 0.2e1;
t912 = -t1283 / 0.2e1 - t1286 / 0.2e1;
t901 = t1049 + t1048;
t899 = t1240 / 0.2e1 - t1241 / 0.2e1;
t152 = t552 + (t1323 + t1035) * t764 + (t659 - t629 / 0.2e1) * t761;
t895 = qJD(1) * t152 - t1068;
t153 = t546 + (t1322 + t1025) * t764 + (t1027 + t630 / 0.2e1) * t761;
t894 = qJD(1) * t153 + t1100 * t828;
t341 = t1018 * t831;
t889 = qJD(1) * t341 + t1064;
t885 = (qJD(2) * t684 + qJD(5) * t1347) * t578;
t883 = t653 / 0.2e1 + t922;
t834 = -t103 * t416 / 0.2e1 + t104 * t417 / 0.2e1 - t124 * t377 / 0.2e1 + t125 * t378 / 0.2e1 + t651 * t1331 + t205 * t1320;
t848 = pkin(10) * t910 + t1334 * t260;
t1 = -t834 + t848;
t80 = -t377 * t416 + t378 * t417 + t650 * t651;
t880 = -t1 * qJD(1) + t80 * qJD(2) + t70 * qJD(3);
t347 = (-0.1e1 + t1186) * t764 * t761;
t849 = t685 * pkin(5) / 0.2e1 + t899 * pkin(10);
t5 = (t205 / 0.2e1 + t912) * t764 + (-t1281 / 0.2e1 + t1282 / 0.2e1 - t199 / 0.2e1) * t761 + t849;
t879 = t5 * qJD(1) - t70 * qJD(2) - t347 * qJD(3);
t174 = (-t1213 + t1253) * t764;
t235 = t497 ^ 2 - t499 ^ 2;
t873 = qJD(1) * t235 - qJD(2) * t174 - qJD(5) * t959;
t860 = t1086 * t578 + t761 * t897;
t119 = t1037 + t1047 + t860;
t869 = qJD(1) * t119 + t761 * t976;
t270 = t883 * t828;
t59 = t1021 * t831 + t828 * t982 + t1089;
t868 = pkin(5) * t1135 - qJD(1) * t59 - qJD(2) * t270;
t272 = t883 * t831;
t61 = t1021 * t828 - t831 * t982 + t1088;
t867 = pkin(5) * t1136 - qJD(1) * t61 + qJD(2) * t272;
t864 = -qJD(5) * t302 + t1336;
t863 = qJD(5) * t303 + t1336;
t862 = qJD(6) * t573 + t1355;
t861 = qJD(6) * t755 + t1356;
t632 = t800 * t757;
t856 = qJD(1) * t174 + qJD(2) * t632 + t975;
t855 = qJD(1) * t959 - qJD(5) * t800 + t976;
t820 = qJ(3) * qJD(3);
t786 = qJD(2) * t1040;
t783 = qJD(2) * t1083;
t782 = qJD(1) * t1083;
t779 = t802 * qJ(3);
t776 = 0.1e1 / 0.2e1 + t1017;
t759 = t802 * t826;
t758 = t802 * t824;
t746 = t763 * qJD(2);
t735 = t755 * qJD(5);
t734 = t831 * t750;
t713 = t832 * t950;
t712 = t830 * t950;
t711 = qJD(5) * t1040 + t782;
t693 = -0.2e1 * t764 * t1056;
t606 = t617 * qJD(6);
t574 = t698 + t984;
t567 = -t1209 / 0.2e1;
t560 = t576 * qJD(4);
t530 = t1043 * t764 + t1187;
t524 = t1311 - t898;
t517 = t529 * qJD(5);
t516 = t528 * qJD(2);
t515 = t528 * qJD(5);
t509 = t1096 * t831 + t1308 * t756 + t1307;
t471 = 0.1e1 / 0.2e1 - t983;
t427 = -t744 + t519;
t426 = t828 * t983 + t1310;
t390 = qJD(2) * t679 + qJD(5) * t573;
t361 = t1219 / 0.2e1 + t988 + t573;
t360 = t986 + t876;
t342 = t1308 * t1347 + t1028;
t335 = t1309 * t1347 + t1038;
t320 = t881 - t1016;
t306 = t1311 - t903;
t296 = t303 * qJD(6);
t295 = t302 * qJD(6);
t273 = t1237 + t1191 / 0.2e1 - t922 * t831;
t271 = t1236 - t1208 / 0.2e1 + t922 * t828;
t265 = t846 - t904;
t239 = t578 * t1024 + t1052 + t659 + t1188 / 0.2e1;
t237 = t578 * t1033 + t1044 + t1027 - t1205 / 0.2e1;
t232 = t884 + t973;
t229 = t1032 * t578 + t1040 * t828 + t1025 + t1045;
t227 = t228 * qJD(5);
t224 = t1048 + t872;
t222 = t1049 + t871;
t220 = t959 * qJD(6);
t217 = -t1313 * t578 + t1370 * t823 - t1365;
t194 = t865 + t905;
t173 = t174 * qJD(6);
t172 = t837 + t1079;
t164 = t1023 * t497 + t404 + t899;
t157 = t567 + t1047 + t877;
t155 = t1032 * t685 + t1034 * t684 + t1316 * t598 + t1317 * t629 + t551;
t154 = t1023 * t685 + t1024 * t684 + t1316 * t599 + t1318 * t630 + t545;
t142 = t859 - t900;
t136 = t1036 + t915;
t134 = t659 + t842;
t132 = t658 + t852;
t131 = t1025 + t916;
t128 = t662 + t843;
t126 = t662 + t853;
t118 = t567 + t1046 + t860;
t117 = t850 + t882;
t115 = t851 + t1020;
t102 = t1023 * t629 + t1032 * t630 + t761 * t901 + t462 + t465;
t63 = t833 - t908;
t62 = pkin(10) * t552 + t1088 + t1275 / 0.2e1 + t1217 / 0.2e1 + t1198 / 0.2e1;
t60 = pkin(10) * t546 + t1089 + t1274 / 0.2e1 + t1200 / 0.2e1 - t1215 / 0.2e1;
t58 = -t844 + t875;
t48 = t866 + t911;
t34 = t199 * t1022 + t1039 + t1197 / 0.2e1 - t857;
t33 = t199 * t1032 + t1030 - t1214 / 0.2e1 - t858;
t14 = -t840 + t847;
t12 = pkin(10) * t1027 + t1022 * t205 + t1024 * t199 + t552 * t650 - t839 + t920;
t11 = pkin(10) * t659 + t1031 * t205 + t1034 * t199 + t545 * t650 - t841 + t921;
t7 = t1279 / 0.2e1 + t1280 / 0.2e1 + t912 * t761 - t907 * t578 + t909;
t6 = t1022 * t104 + t103 * t1031 + t1034 * t124 + t1054 * t831 + t1348 + t849;
t4 = pkin(10) * t901 + t1023 * t124 + t1024 * t103 + t1032 * t125 + t1033 * t104 + t377 * t552 + t378 * t546 - t906 + t910;
t2 = t834 + t848;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t783, t746, t992, -t783, -t993, 0, -t675 * qJD(2), -t676 * qJD(2), 0, 0, 0, -t992, t993, t783, t746, -t783, -qJD(2) * t323 + qJD(3) * t1080, qJD(2) * t421 - qJD(3) * t1083, -qJD(2) * t420 + qJD(3) * t778, qJD(2) * t319 - qJD(3) * t510, qJD(2) * t1001, t506 * qJD(2), t636 * qJD(2), qJD(2) * t1002, t635 * qJD(2), t783, qJD(2) * t179 + qJD(3) * t654 - t1062 * t737, -qJD(2) * t180 + qJD(3) * t655 - t1062 * t736, qJD(2) * t110 - qJD(3) * t507 + qJD(4) * t625, qJD(2) * t113 - qJD(3) * t207 + qJD(4) * t226 (qJD(2) * t685 - t1137) * t1347, qJD(2) * t280 + qJD(5) * t289, qJD(2) * t369 - t1061 * t578, t885, qJD(2) * t368 - t1061 * t1347, t783, qJD(2) * t65 + qJD(3) * t374 + qJD(5) * t123 - t1062 * t1347, -qJD(2) * t66 - qJD(3) * t373 - qJD(5) * t122 + t1062 * t578, qJD(2) * t42 + qJD(3) * t279 + qJD(4) * t233, qJD(2) * t46 + qJD(3) * t67 + qJD(4) * t68 (qJD(2) * t599 - qJD(6) * t497 - t1135 * t578) * t499, qJD(2) * t209 + qJD(5) * t197 + qJD(6) * t235, qJD(2) * t245 + qJD(5) * t214 - t1134 * t497 (qJD(2) * t598 + qJD(6) * t499 - t1136 * t578) * t497, qJD(2) * t244 - qJD(5) * t212 - t1134 * t499, t885, qJD(2) * t29 + qJD(3) * t253 - qJD(4) * t213 + qJD(5) * t25 + qJD(6) * t56, qJD(2) * t30 + qJD(3) * t254 + qJD(4) * t215 + qJD(5) * t26 + qJD(6) * t55, qJD(2) * t21 + qJD(3) * t219 - qJD(4) * t198 + qJD(5) * t20, qJD(2) * t19 + qJD(3) * t36 + qJD(4) * t35 + qJD(5) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t782, t1099, t713, -t782, -t712, 0, -t1102 - t1143, -t1101 + t1144, 0, 0, 0, -t713, t712, t782, t1099, -t782, -t1118 + (qJD(2) * t969 + qJD(3) * t832) * t825, t1115 + t1143, -t1144 + t811 - t1157, t1119 + (-pkin(2) * t753 - qJ(3) * t752) * qJD(2) - t706 * qJD(3), t925 * t1082, t1114 + (-t817 + t819) * t1063, t1057 * t826 + t1103, t926 * t1081, -t1057 * t824 + t1104, t782, t1126 + (t1223 * t896 + t689 * t824) * qJD(2) - qJD(3) * t736 - t826 * t1062, -t1125 + (-t824 * t825 * t896 + t689 * t826) * qJD(2) + qJD(3) * t737 + t824 * t1062, -qJD(2) * t1338 + t1130 - t560, t1129 + (t689 * qJ(3) + t1297 * t1338) * qJD(2) + t265 * qJD(3) + t172 * qJD(4), -t1362 + (t1098 + t1150) * t685, t1120 + (-t684 * t764 - t685 * t761) * qJD(2) + t227, t1057 * t764 + t1116 + t515, t1360, -qJD(5) * t525 - t1057 * t761 + t1117, t711, t1239 + (-t1221 * t650 + t637 * t761 + t684 * t806) * qJD(2) + t360 * qJD(3) - t917 * qJD(4) + t117 * qJD(5), -t1234 + (-t1221 * t651 + t637 * t764 + t685 * t806) * qJD(2) + t361 * qJD(3) - t529 * qJD(4) + t115 * qJD(5), t1257 + (t1231 - t1232 - t1267 - t1268) * qJD(2) - t1366 + t1296, t1256 + (-t274 * t650 + t275 * t651 + t637 * t806) * qJD(2) + t63 * qJD(3) + t58 * qJD(4), qJD(5) * t224 - t1351 + (t1064 + t1153) * t599, t1123 + t118 * qJD(5) - t173 + (-t1243 - t1245) * t1098, t1121 + (t624 * t684 + t1244) * qJD(2) + t132 * qJD(5) + t229 * qJD(6), qJD(5) * t222 + t1351 + (t1065 + t1154) * t598, t1122 + (-t619 * t684 - t1246) * qJD(2) + t126 * qJD(5) + t232 * qJD(6), t1133 + t1360, t1266 + (t150 * t761 + t260 * t619 - t377 * t684 + t598 * t650) * qJD(2) + t155 * qJD(3) + t128 * qJD(4) + t11 * qJD(5) + t34 * qJD(6), t1265 + (-t151 * t761 + t260 * t624 - t378 * t684 + t599 * t650) * qJD(2) + t154 * qJD(3) + t134 * qJD(4) + t12 * qJD(5) + t33 * qJD(6), t1271 + (t377 * t599 - t378 * t598 + (-t1279 - t1280) * t764) * qJD(2) + t102 * qJD(3) + t157 * qJD(4) + t4 * qJD(5), t1277 + (-t150 * t377 + t151 * t378 + t260 * t650) * qJD(2) + t14 * qJD(3) + t7 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t713, -t782, t924, -qJD(2) * t706 - t1152, 0, 0, 0, 0, 0, 0, -qJD(2) * t736 + t1149, qJD(2) * t737 + t1148, -t1113, qJD(2) * t265 + qJD(4) * t524 - t1178, 0, 0, 0, 0, 0, 0, qJD(2) * t360 + t1158 + t515, qJD(2) * t361 + qJD(5) * t530 - t1159, -qJD(2) * t958 + t1165, qJD(2) * t63 + qJD(4) * t306 + t1233 + t1366, 0, 0, 0, 0, 0, 0, qJD(2) * t155 + qJD(5) * t131 + qJD(6) * t239 + t1167, qJD(2) * t154 + qJD(5) * t136 + qJD(6) * t237 + t1166, qJD(2) * t102 + qJD(5) * t164 + t1173, t1264 + t14 * qJD(2) + (t1230 + (t1240 - t1241) * t761) * qJD(3) + t142 * qJD(4) + t6 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t925 * t1222, -t926 * t1222, t928, qJD(2) * t172 + qJD(3) * t524 + t1170, 0, 0, 0, 0, 0, 0, qJD(5) * t574 - t1372, t1367, t941, qJD(2) * t58 + qJD(3) * t306 + t1289, 0, 0, 0, 0, 0, 0, qJD(2) * t128 + qJD(5) * t342 - t1176 + t1376, qJD(2) * t134 + qJD(5) * t335 + t1174 + t1377, qJD(2) * t157 + qJD(5) * t217 - t1179, qJD(2) * t7 + qJD(3) * t142 + qJD(5) * t48 + t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1355, t937, t578 * t968 + t516, t1355, t1347 * t968 - t1146, t786, qJD(2) * t117 + qJD(3) * t528 + qJD(4) * t574 - qJD(5) * t205 + t1182, qJD(2) * t115 + qJD(3) * t530 + qJD(5) * t204 - t1183, t1288, 0, qJD(2) * t224 + t295 + (-t1136 - t1153) * t1368, t118 * qJD(2) - t1137 * t800 + t1124 - t220, qJD(2) * t132 + t1136 * t1347 + t1175 + t1377, qJD(2) * t222 + t296 + (t1135 - t1154) * t1369, qJD(2) * t126 + t1135 * t1347 - t1177 + t1376, t862, t1270 + t11 * qJD(2) + t131 * qJD(3) + t342 * qJD(4) + (-t205 * t831 + t828 * t981) * qJD(5) + t62 * qJD(6), t1269 + t12 * qJD(2) + t136 * qJD(3) + t335 * qJD(4) + (t205 * t828 + t831 * t981) * qJD(5) + t60 * qJD(6), qJD(2) * t4 + qJD(3) * t164 + qJD(4) * t217 + qJD(5) * t963 + t1273, t1278 + t2 * qJD(2) + t6 * qJD(3) + t48 * qJD(4) + (-pkin(5) * t205 + pkin(10) * t963) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t864, t873, qJD(2) * t229 + qJD(5) * t1374 + t1007 * t497, t863, qJD(2) * t232 + qJD(5) * t1375 + t1007 * t499, t390, qJD(2) * t34 + qJD(3) * t239 + qJD(4) * t1375 + qJD(5) * t62 - qJD(6) * t104 + t1290, qJD(2) * t33 + qJD(3) * t237 + qJD(4) * t1374 + qJD(5) * t60 + qJD(6) * t103 + t1291, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t782, -t1099, -t989, t782, t990, 0, t1102, t1101, 0, 0, 0, t989, -t990, -t782, -t1099, t782, t1118, -t1115, t811 + t1157, qJ(3) * t811 - t1119, -t824 * t994, -t1114, -t1103, -t826 * t991, -t1104, -t782, t811 * t824 - t1126, t811 * t826 + t1125, -t560 - t1130, qJD(3) * t266 + qJD(4) * t171 - t1129, -t1150 * t685 - t1362, t227 - t1120, t517 - t1116, t1357, -t1117 - t1353, -t711, -qJD(3) * t359 - qJD(4) * t525 + qJD(5) * t116 - t1239, -qJD(3) * t358 - qJD(4) * t528 + qJD(5) * t114 + t1234, -t1257 + t1296, qJD(3) * t64 - qJD(4) * t57 - t1256, qJD(5) * t225 - t1153 * t599 - t1351, qJD(5) * t119 - t1123 - t173, qJD(5) * t133 + qJD(6) * t230 - t1121, qJD(5) * t223 - t1154 * t598 + t1351, qJD(5) * t127 + qJD(6) * t231 - t1122, -t1133 + t1357, -qJD(3) * t152 + qJD(4) * t129 - qJD(5) * t9 - qJD(6) * t31 - t1266, -qJD(3) * t153 + qJD(4) * t135 - qJD(5) * t10 - qJD(6) * t32 - t1265, -qJD(3) * t101 + qJD(4) * t158 - qJD(5) * t3 - t1271, -qJD(3) * t13 + qJD(4) * t8 - qJD(5) * t1 - t1277; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t820, 0, 0, 0, 0, 0, 0, qJD(3) * t824, qJD(3) * t826, t795 * qJD(4), -qJD(4) * t760 + t820, -t1058, -t1093 * qJD(5), 0, t1058, 0, 0, t750 * t806 + t1139, qJD(3) * t764 - t744 * t806, -qJD(4) * t1354, qJD(3) * t806 + qJD(4) * t330, -t1058 * t823 - t995, -qJD(6) * t632 + t761 * t975, qJD(5) * t522 - t1060 * t764, -t1058 * t821 + t995, -qJD(5) * t520 - t1059 * t764, t1058, -qJD(4) * t521 + qJD(5) * t138 + qJD(6) * t277 + t1139 * t831, -qJD(4) * t634 + qJD(5) * t139 + qJD(6) * t276 - t1139 * t828, -qJD(3) * t633 - qJD(5) * t79, -qJD(3) * t961 + qJD(4) * t156 + qJD(5) * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, t779, 0, 0, 0, 0, 0, 0, t758, t759, 0, qJD(4) * t776 + t948, 0, 0, 0, 0, 0, 0, t1339, t1341, 0, qJD(4) * t471 + t951, 0, 0, 0, 0, 0, 0, qJD(6) * t509 - t895, qJD(6) * t426 - t894, -t947, qJD(4) * t320 + t1295 + t956; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t927, qJD(3) * t776 + t939, 0, 0, 0, 0, 0, 0, -t1112, -t1109, t940, qJD(3) * t471 + t952, 0, 0, 0, 0, 0, 0, t945, t943, t1128, qJD(3) * t320 + qJD(5) * t194 - t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1356, t936, t427, t1356, t1359, qJD(1) * t1041, -qJD(5) * t651 + t1098 * t806 + t1184, qJD(5) * t650 - t1100 * t806 + t1185, t1293, 0, t1171 - t1106 + (-t801 - t1066) * t761 (t739 - t740) * qJD(5) + t693 + t869, t750 * t828 - t944, t1172 + t1106 + (t801 - t1067) * t761, t734 - t946, t861 (t828 * t980 - t1192) * qJD(5) + t273 * qJD(6) + t965 (t831 * t980 + t1235) * qJD(5) + t271 * qJD(6) + t957, qJD(5) * t960 + t967, t194 * qJD(4) + (-pkin(5) * t651 + pkin(10) * t960) * qJD(5) + t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1358, -t856, t1005 * t619 + t1169, t1358, t764 * t949 + t1168, t735 - t1147, qJD(3) * t509 + qJD(5) * t273 - qJD(6) * t378 - t953, qJD(3) * t426 + qJD(5) * t271 + qJD(6) * t377 + t954, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t989, t782, -t924, -qJ(3) * t1140 + t1152, 0, 0, 0, 0, 0, 0, -t1140 * t824 - t1149, -t1140 * t826 - t1148, t1113, -qJD(2) * t266 - qJD(4) * t523 + t1178, 0, 0, 0, 0, 0, 0, qJD(2) * t359 - t1158 + t517, qJD(2) * t358 + t1159 - t1353, -t1165, -qJD(2) * t64 - qJD(4) * t305 - t1233, 0, 0, 0, 0, 0, 0, qJD(2) * t152 + qJD(5) * t130 + qJD(6) * t238 - t1167, qJD(2) * t153 + qJD(5) * t137 + qJD(6) * t236 - t1166, qJD(2) * t101 + qJD(5) * t165 - t1173, qJD(2) * t13 + qJD(4) * t143 - qJD(5) * t5 - t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t802, -t779, 0, 0, 0, 0, 0, 0, -t758, -t759, 0, qJD(4) * t777 - t948, 0, 0, 0, 0, 0, 0, -t1339, -t1341, 0, qJD(4) * t472 - t951, 0, 0, 0, 0, 0, 0, qJD(6) * t508 + t895, -qJD(6) * t425 + t894, t947, qJD(4) * t321 + t1295 - t956; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t930, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t933, 0, 0, 0, 0, 0, 0, 0, 0, 0, t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, t1359, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t619 - t744 * t831 + t1181, -qJD(6) * t624 + t744 * t828 + t1180, qJD(5) * t633 + t1127 (pkin(10) * t633 - t1300) * qJD(5) - t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t934 + t971, -qJD(5) * t624 + t1060 - t935, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, t991, -t928, -qJD(2) * t171 + qJD(3) * t523 - t1170, 0, 0, 0, 0, 0, 0, -qJD(5) * t431 + t1146 + t997, t516 - t996 - t1137, -t941, qJD(2) * t57 + qJD(3) * t305 - t1289, 0, 0, 0, 0, 0, 0, -qJD(2) * t129 + qJD(5) * t341 - qJD(6) * t333 + t1176, -qJD(2) * t135 - qJD(5) * t336 + qJD(6) * t339 - t1174, -qJD(2) * t158 + qJD(5) * t218 + t1179, -qJD(2) * t8 - qJD(3) * t143 - qJD(5) * t47 - t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t927, -qJD(3) * t777 - t939, 0, 0, 0, 0, 0, 0, t750 + t1112, -t744 + t1109, -t940, -qJD(3) * t472 - t952, 0, 0, 0, 0, 0, 0, -t606 + t734 - t945, -t943 + t971, qJD(5) * t631 - t1128, -qJD(3) * t321 - qJD(5) * t193 + t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t930, 0, 0, 0, 0, 0, 0, 0, 0, 0, t933, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1342, -t1340, 0, 0, 0, 0, 0, 0, 0, 0, t889, t932, t938, -t955; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1008 - t1163, t949 + t1162, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, -t937, t1367, -t1355, t1372, t786, -qJD(2) * t116 - qJD(3) * t529 + qJD(4) * t431 - t1182, -qJD(2) * t114 + qJD(3) * t917 + qJD(4) * t578 + t1183, -t1288, 0, -qJD(2) * t225 + t1073 * t831 + t295, -qJD(2) * t119 - t1124 - t220, -qJD(2) * t133 + qJD(6) * t338 - t1175, -qJD(2) * t223 + t1074 * t828 + t296, -qJD(2) * t127 + qJD(6) * t331 + t1177, -t862, qJD(2) * t9 - qJD(3) * t130 - qJD(4) * t341 + qJD(6) * t61 - t1270, qJD(2) * t10 - qJD(3) * t137 + qJD(4) * t336 + qJD(6) * t59 - t1269, qJD(2) * t3 - qJD(3) * t165 - qJD(4) * t218 - t1273, qJD(2) * t1 + qJD(3) * t5 + qJD(4) * t47 - t1278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, -t936, -t519, -t1356, t1349, qJD(1) * t1040, -t1006 * t764 - t1184, t1006 * t761 - t1185, -t1293, 0, t1066 * t761 - t1106 - t1171, t693 - t869, qJD(6) * t622 + t944, t1067 * t761 + t1106 - t1172, -t606 + t946, -t861, -qJD(6) * t272 - t1138 * t764 - t965, qJD(4) * t619 + qJD(6) * t270 - t957, -qJD(4) * t631 - t967, qJD(4) * t193 - t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t519, t1349, 0, 0, 0, 0, 0, 0, 0, 0, -t1181, -t1180, -t1127, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1342, t1340, 0, 0, 0, 0, 0, 0, 0, 0, -t889, -t932, -t938, t955; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1056, t800 * qJD(6), 0, -t1056, 0, 0, -pkin(5) * t1132, -pkin(5) * t1131, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1345, -t855, -t931 + t1131, t1346, t1008 + t1164, -t929, -pkin(10) * t1131 - t867, pkin(10) * t1132 - t868, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t864, -t873, -qJD(2) * t230 - qJD(5) * t338 + t1074, -t863, -qJD(2) * t231 - qJD(5) * t331 + t1073, t390, qJD(2) * t31 - qJD(3) * t238 + qJD(4) * t333 - qJD(5) * t61 - t1290, qJD(2) * t32 - qJD(3) * t236 - qJD(4) * t339 - qJD(5) * t59 - t1291, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t856, -qJD(5) * t622 + t1065 * t761 - t1169, -t1358, qJD(5) * t617 + t1064 * t761 - t1168, t735 + t1147, -qJD(3) * t508 + qJD(4) * t617 + qJD(5) * t272 + t953, qJD(3) * t425 - qJD(5) * t270 + t1138 * t761 - t954, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t934, t935, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1105 + t1163, t1068 - t1162, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1345, t855, t931, -t1346, t1105 - t1164, t929, t867, t868, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
