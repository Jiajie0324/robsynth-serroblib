% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:56:13
% EndTime: 2019-03-09 01:56:19
% DurationCPUTime: 2.31s
% Computational Cost: add. (1981->212), mult. (3752->271), div. (0->0), fcn. (4186->6), ass. (0->169)
t143 = sin(pkin(9));
t244 = cos(qJ(4));
t182 = t244 * t143;
t144 = cos(pkin(9));
t147 = sin(qJ(4));
t219 = t147 * t144;
t119 = t182 + t219;
t115 = t119 ^ 2;
t118 = t143 * t147 - t244 * t144;
t247 = t118 ^ 2;
t164 = -t247 / 0.2e1 - t115 / 0.2e1;
t254 = -0.1e1 / 0.2e1 + t164;
t246 = pkin(4) + pkin(8);
t253 = t246 * t118;
t146 = sin(qJ(6));
t200 = qJD(6) * t146;
t56 = t146 * t118;
t212 = t56 * qJD(1);
t251 = t212 - t200;
t221 = t118 * qJ(5);
t161 = t246 * t119 + t221;
t148 = cos(qJ(6));
t195 = t118 * qJD(1);
t172 = t148 * t195;
t199 = qJD(6) * t148;
t78 = t172 - t199;
t185 = t247 - t115;
t69 = t247 + t115;
t141 = t146 ^ 2;
t142 = t148 ^ 2;
t129 = t141 - t142;
t193 = t119 * qJD(1);
t174 = t146 * t193;
t249 = qJD(4) * t129 - 0.2e1 * t148 * t174;
t163 = pkin(4) * t119 + t221;
t202 = qJD(5) * t119;
t248 = t163 * qJD(4) - t202;
t145 = -pkin(1) - qJ(3);
t243 = -pkin(7) + t145;
t122 = t243 * t143;
t123 = t243 * t144;
t66 = t122 * t147 - t244 * t123;
t44 = pkin(5) * t118 - t66;
t234 = t44 * t148;
t130 = t143 * pkin(3) + qJ(2);
t32 = t130 + t161;
t13 = t146 * t32 + t234;
t67 = t244 * t122 + t147 * t123;
t45 = -t119 * pkin(5) + t67;
t60 = t148 * t119;
t6 = -t118 * t13 + t45 * t60;
t242 = qJD(1) * t6;
t235 = t44 * t146;
t14 = t148 * t32 - t235;
t220 = t119 * t146;
t7 = t118 * t14 + t45 * t220;
t241 = qJD(1) * t7;
t233 = qJ(5) * t119;
t46 = t233 - t253;
t239 = t146 * t46;
t1 = (t13 - t234) * t119 + t118 * t239;
t240 = t1 * qJD(1);
t238 = t148 * t46;
t2 = (t14 + t235) * t119 + t118 * t238;
t237 = t2 * qJD(1);
t162 = -t118 * pkin(4) + t233;
t55 = t163 + t130;
t3 = t55 * t162;
t236 = t3 * qJD(1);
t15 = t118 * t162 + t119 * t55;
t232 = qJD(1) * t15;
t16 = t118 * t55 - t119 * t162;
t231 = qJD(1) * t16;
t17 = -t118 * t66 - t119 * t67;
t230 = qJD(1) * t17;
t26 = t69 * t146;
t229 = qJD(1) * t26;
t37 = t185 * t146;
t228 = qJD(1) * t37;
t38 = t185 * t148;
t227 = qJD(1) * t38;
t226 = qJD(1) * t55;
t225 = qJD(4) * t60;
t224 = qJD(4) * t66;
t223 = qJD(6) * t56;
t222 = t115 * t148;
t218 = t162 * qJD(1);
t217 = t254 * qJD(1);
t30 = t254 * t146;
t216 = t30 * qJD(1);
t39 = t69 * t148;
t215 = t39 * qJD(1);
t214 = t185 * qJD(1);
t48 = t254 * t148;
t213 = t48 * qJD(1);
t211 = t60 * qJD(1);
t62 = t67 * qJD(4);
t210 = t69 * qJD(1);
t137 = t143 ^ 2;
t138 = t144 ^ 2;
t126 = t137 + t138;
t117 = t126 * t145;
t209 = qJD(1) * t117;
t208 = qJD(1) * t146;
t207 = qJD(2) * t118;
t206 = qJD(3) * t119;
t205 = qJD(4) * qJ(5);
t204 = qJD(4) * t146;
t203 = qJD(5) * t118;
t201 = qJD(5) * t148;
t198 = qJD(6) * t246;
t113 = t219 / 0.2e1 + t182 / 0.2e1;
t197 = t113 * qJD(1);
t196 = t247 * qJD(1);
t110 = t118 * qJD(3);
t194 = t118 * qJD(4);
t192 = t119 * qJD(4);
t171 = -t137 / 0.2e1 - t138 / 0.2e1;
t125 = -0.1e1 / 0.2e1 + t171;
t191 = t125 * qJD(1);
t190 = t126 * qJD(1);
t189 = t143 * qJD(1);
t188 = t144 * qJD(1);
t187 = t148 * qJD(4);
t183 = t55 * t195;
t181 = t247 * t208;
t180 = t146 * t192;
t179 = t119 * t187;
t178 = t146 * t187;
t177 = t118 * t200;
t176 = t118 * t199;
t175 = t119 * t200;
t97 = t119 * t199;
t77 = t118 * t193;
t76 = t118 * t192;
t173 = t146 * t199;
t170 = qJD(6) * t113 - t77;
t169 = qJD(1) * t130 + qJD(3);
t168 = qJD(2) + t203;
t167 = t119 * t172;
t166 = t119 * t178;
t160 = qJD(5) * t247 + t207;
t159 = -t253 / 0.2e1 + t233 / 0.2e1;
t150 = t46 / 0.2e1 + t159;
t19 = t150 * t148;
t158 = qJ(5) * t204 - t19 * qJD(1);
t18 = t150 * t146;
t157 = -qJ(5) * t187 - t18 * qJD(1);
t58 = (t142 / 0.2e1 - t141 / 0.2e1) * t119;
t156 = -qJD(1) * t58 + t178;
t155 = (-qJD(6) + t195) * t220;
t154 = qJD(4) * t58 + t208 * t222;
t61 = t129 * t115;
t153 = qJD(1) * t61 + 0.2e1 * t166;
t151 = t176 + t180;
t140 = qJ(2) * qJD(2);
t139 = qJD(1) * qJ(2);
t124 = 0.1e1 / 0.2e1 + t171;
t98 = t113 * qJD(4);
t95 = t118 * t187;
t93 = t146 * t195;
t92 = t146 * t194;
t53 = t58 * qJD(6);
t49 = t222 / 0.2e1 + (t247 / 0.2e1 - 0.1e1 / 0.2e1) * t148;
t31 = (-0.1e1 / 0.2e1 + t69 / 0.2e1) * t146;
t27 = 0.1e1 / 0.2e1 + t164;
t10 = -t45 * t146 - t238 / 0.2e1 + t159 * t148;
t9 = t45 * t148 - t239 / 0.2e1 + t159 * t146;
t4 = [0, 0, 0, 0, qJD(2), t140, qJD(2) * t143, qJD(2) * t144, t126 * qJD(3), -qJD(3) * t117 + t140, t76, -t185 * qJD(4), 0, 0, 0, qJD(2) * t119 - t130 * t194, -t130 * t192 - t207, qJD(3) * t69, t16 * qJD(4) - t168 * t119, qJD(4) * t15 + t160, t17 * qJD(3) + t3 * qJD(4) + t168 * t55, t115 * t173 - t141 * t76, -qJD(6) * t61 - 0.2e1 * t118 * t166, qJD(4) * t37 - t118 * t97, qJD(4) * t38 + t118 * t175, t76, t39 * qJD(3) + t1 * qJD(4) + t7 * qJD(6) + t168 * t56, -qJD(3) * t26 + qJD(4) * t2 + qJD(6) * t6 + t148 * t160; 0, 0, 0, 0, qJD(1), t139, t189, t188, 0, qJD(3) * t124 + t139, 0, 0, 0, 0, 0, t193, -t195, 0, -t193, t195, qJD(3) * t27 + t226, 0, 0, 0, 0, 0, qJD(6) * t31 + t93, qJD(6) * t49 + t172; 0, 0, 0, 0, 0, 0, 0, 0, t190, qJD(2) * t124 - t209, 0, 0, 0, 0, 0, 0, 0, t210, 0, 0, qJD(2) * t27 + t230, 0, 0, 0, 0, 0, t215, -t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t214, -t192, t194, 0, -t130 * t195 - t62, -t130 * t193 + t224, t248, t62 + t231, -t224 + t232, t236 + (-pkin(4) * t67 - qJ(5) * t66) * qJD(4) + t67 * qJD(5), t53 + (-t141 * t193 - t178) * t118, t249 * t118 - 0.2e1 * t119 * t173, -t179 + t228, t180 + t227, -t170, t240 + (t148 * t161 + t235) * qJD(4) - t60 * qJD(5) + t9 * qJD(6), t44 * t187 + t237 + t10 * qJD(6) + (-qJD(4) * t161 + t202) * t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, -t77, t196, t62 + t183, 0, 0, 0, 0, 0, t181 - t225, t148 * t196 + t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, -t153, t97 - t167, t155, -t98, qJD(2) * t31 + qJD(4) * t9 - qJD(6) * t14 + t241, qJD(2) * t49 + qJD(4) * t10 + qJD(6) * t13 + t242; 0, 0, 0, 0, -qJD(1), -t139, -t189, -t188, 0, qJD(3) * t125 - t139, 0, 0, 0, 0, 0, -t193, t195, 0, t193, -t195, qJD(3) * t254 - t226, 0, 0, 0, 0, 0, -qJD(6) * t30 - t93, -qJD(6) * t48 - t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, t194, 0, t192, -t194, -t248, 0, 0, 0, 0, 0, -t92 + t97, -t95 - t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177 + t179 - t216, -t151 - t213; 0, 0, 0, 0, 0, 0, 0, 0, -t190, -qJD(2) * t125 + t209, 0, 0, 0, 0, 0, -t194, -t192, -t210, t194, t192, -qJD(2) * t254 + qJD(4) * t162 + t203 - t230, 0, 0, 0, 0, 0, t151 - t215, -t223 + t225 + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, -t193, 0, t195, t193, t218, 0, 0, 0, 0, 0, t174, t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, -t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t214, 0, 0, 0, t169 * t118, t169 * t119, 0, -t110 - t231, -t206 - t232, -qJD(3) * t162 - t236, t141 * t77 + t53, 0.2e1 * t148 * t155, t177 - t228, t176 - t227, t170, qJD(6) * t18 - t146 * t206 - t240, -qJD(3) * t60 + qJD(6) * t19 - t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t193, 0, -t195, -t193, -t218, 0, 0, 0, 0, 0, -t174, -t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5), -t173, t129 * qJD(6), 0, 0, 0, qJ(5) * t199 + qJD(5) * t146, -qJ(5) * t200 + t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t205, 0, 0, 0, 0, 0, t204, t187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, t249, t93 - t200, t78, t197, t146 * t198 - t157, t148 * t198 - t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t196, -t110 - t183, 0, 0, 0, 0, 0, -t181 + t223 (qJD(6) * t118 - t196) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t205, 0, 0, 0, 0, 0, -t204, -t187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, t153, -t92 + t167, -t118 * t174 - t95, -t98, qJD(2) * t30 - qJD(4) * t18 - qJD(5) * t56 - t110 * t148 - t241, qJD(2) * t48 + qJD(3) * t56 - qJD(4) * t19 - t118 * t201 - t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, -t249, -t93, -t172, -t197, t157, t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, -t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
