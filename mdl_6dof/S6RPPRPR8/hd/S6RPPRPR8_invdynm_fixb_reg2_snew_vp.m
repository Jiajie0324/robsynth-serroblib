% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:39
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:39:03
% EndTime: 2019-05-05 14:39:30
% DurationCPUTime: 29.63s
% Computational Cost: add. (68771->761), mult. (160441->863), div. (0->0), fcn. (110553->8), ass. (0->481)
t1246 = qJD(4) ^ 2;
t1237 = sin(pkin(9));
t1238 = cos(pkin(9));
t1241 = sin(qJ(4));
t1244 = cos(qJ(4));
t1200 = (-t1237 * t1241 + t1238 * t1244) * qJD(1);
t1401 = t1200 ^ 2;
t1173 = t1401 + t1246;
t1302 = t1237 * t1244 + t1238 * t1241;
t1198 = t1302 * qJD(1);
t1362 = t1200 * t1198;
t1435 = qJDD(4) + t1362;
t1443 = t1435 * t1241;
t1083 = t1173 * t1244 + t1443;
t1442 = t1435 * t1244;
t1089 = -t1173 * t1241 + t1442;
t1004 = t1083 * t1238 + t1089 * t1237;
t1471 = pkin(2) * t1004;
t1013 = t1083 * t1237 - t1089 * t1238;
t1470 = qJ(2) * t1013;
t1469 = qJ(3) * t1004;
t1468 = qJ(3) * t1013;
t1192 = t1198 ^ 2;
t1172 = t1246 - t1192;
t1081 = -t1172 * t1241 + t1442;
t1088 = t1172 * t1244 + t1443;
t1002 = t1081 * t1238 - t1088 * t1237;
t1242 = sin(qJ(1));
t1467 = t1002 * t1242;
t1245 = cos(qJ(1));
t1466 = t1002 * t1245;
t1465 = t1004 * t1242;
t1464 = t1004 * t1245;
t1394 = -qJ(3) - pkin(1);
t1463 = t1004 * t1394;
t1462 = t1013 * t1394;
t1411 = -t1401 + t1246;
t1436 = qJDD(4) - t1362;
t1445 = t1241 * t1436;
t1084 = t1244 * t1411 + t1445;
t1444 = t1244 * t1436;
t1090 = -t1241 * t1411 + t1444;
t1005 = t1084 * t1238 + t1090 * t1237;
t1461 = t1005 * t1242;
t1460 = t1005 * t1245;
t1459 = pkin(3) * t1083;
t1458 = pkin(7) * t1083;
t1457 = pkin(7) * t1089;
t1009 = t1081 * t1237 + t1088 * t1238;
t1138 = -t1246 - t1192;
t1060 = t1138 * t1241 + t1444;
t1063 = -t1138 * t1244 + t1445;
t978 = t1060 * t1238 - t1063 * t1237;
t1456 = pkin(2) * t978;
t981 = t1060 * t1237 + t1063 * t1238;
t1455 = qJ(2) * t981;
t1454 = qJ(3) * t978;
t1453 = qJ(3) * t981;
t1452 = t1242 * t978;
t1451 = t1245 * t978;
t1450 = t1394 * t978;
t1449 = t1394 * t981;
t1012 = t1084 * t1237 - t1090 * t1238;
t1448 = pkin(3) * t1060;
t1447 = pkin(7) * t1060;
t1446 = pkin(7) * t1063;
t1224 = t1238 * qJDD(1);
t1347 = t1237 * qJDD(1);
t1196 = t1224 * t1244 - t1241 * t1347;
t1365 = t1198 * qJD(4);
t1147 = t1196 - t1365;
t1437 = t1147 - t1365;
t1416 = t1437 * qJ(5);
t1105 = t1147 + t1365;
t1412 = -t1192 - t1401;
t1434 = pkin(2) * t1412;
t1433 = pkin(3) * t1412;
t1432 = qJ(2) * t1412;
t1240 = sin(qJ(6));
t1243 = cos(qJ(6));
t1159 = qJD(4) * t1240 - t1243 * t1198;
t1161 = qJD(4) * t1243 + t1198 * t1240;
t1113 = t1161 * t1159;
t1134 = qJDD(6) + t1147;
t1415 = -t1113 + t1134;
t1431 = t1240 * t1415;
t1410 = t1401 - t1192;
t1429 = t1242 * t1410;
t1428 = t1242 * t1412;
t1427 = t1243 * t1415;
t1425 = t1245 * t1410;
t1424 = t1245 * t1412;
t1247 = qJD(1) ^ 2;
t1232 = t1237 ^ 2;
t1233 = t1238 ^ 2;
t1350 = t1232 + t1233;
t1423 = -pkin(3) * t1347 + t1247 * (pkin(7) * t1350 - t1394);
t1360 = t1200 * t1244;
t1364 = t1198 * t1241;
t1290 = (-t1360 - t1364) * qJD(4);
t1361 = t1200 * t1241;
t1363 = t1198 * t1244;
t1291 = (t1361 - t1363) * qJD(4);
t1405 = t1237 * t1291 + t1238 * t1290;
t1422 = t1242 * qJDD(4) - t1245 * t1405;
t1421 = t1245 * qJDD(4) + t1242 * t1405;
t1338 = t1245 * t1362;
t1309 = -qJD(4) * t1361 + t1244 * t1147;
t1311 = qJD(4) * t1360 + t1241 * t1147;
t1402 = t1237 * t1309 + t1238 * t1311;
t1420 = t1242 * t1402 + t1338;
t1183 = t1200 * qJD(4);
t1195 = t1302 * qJDD(1);
t1263 = t1195 + t1183;
t1255 = qJD(4) * t1363 + t1241 * t1263;
t1310 = qJD(4) * t1364 - t1244 * t1263;
t1406 = t1237 * t1255 + t1238 * t1310;
t1419 = t1242 * t1406 - t1338;
t1339 = t1242 * t1362;
t1418 = -t1245 * t1402 + t1339;
t1417 = -t1245 * t1406 - t1339;
t1399 = pkin(4) + pkin(8);
t1167 = pkin(5) * t1200 - qJD(4) * pkin(8);
t1382 = qJD(2) * qJD(1);
t1230 = 0.2e1 * t1382;
t1213 = t1245 * g(1) + t1242 * g(2);
t1234 = qJDD(1) * qJ(2);
t1298 = -t1213 + t1234;
t1413 = pkin(4) * t1183 - 0.2e1 * qJD(5) * t1200;
t1251 = qJDD(3) + t1230 + t1298 + t1413 - t1416 - t1423;
t942 = -t1192 * pkin(5) + (qJD(4) * t1399 - t1167) * t1200 + t1251 + t1399 * t1195;
t1212 = t1242 * g(1) - t1245 * g(2);
t1315 = qJDD(2) - t1212;
t1381 = qJD(3) * qJD(1);
t1346 = -0.2e1 * t1381;
t1389 = t1237 * g(3);
t1110 = t1389 + (t1346 + (-pkin(3) * t1237 - qJ(2)) * t1247 + (-pkin(7) + t1394) * qJDD(1) + t1315) * t1238;
t1288 = -t1247 * qJ(2) + t1315;
t1261 = qJDD(1) * t1394 + t1288;
t1137 = g(3) * t1238 + (-t1261 + 0.2e1 * t1381) * t1237;
t1357 = t1232 * t1247;
t1114 = -pkin(3) * t1357 - pkin(7) * t1347 - t1137;
t1043 = -t1244 * t1110 + t1241 * t1114;
t1133 = pkin(4) * t1198 - qJ(5) * t1200;
t976 = -qJDD(4) * pkin(4) - t1246 * qJ(5) + t1200 * t1133 + qJDD(5) + t1043;
t944 = pkin(5) * t1105 - pkin(8) * t1436 + t976;
t898 = t1240 * t942 - t1243 * t944;
t899 = t1240 * t944 + t1243 * t942;
t867 = t1240 * t899 - t1243 * t898;
t1074 = -t1159 * qJD(6) + t1243 * qJDD(4) + t1240 * t1263;
t1186 = qJD(6) + t1200;
t1117 = t1186 * t1159;
t1414 = -t1117 + t1074;
t1136 = t1389 + (t1261 + t1346) * t1238;
t1055 = t1238 * t1136 - t1237 * t1137;
t1408 = t1247 * t1350;
t1319 = t1240 * qJDD(4) - t1243 * t1263;
t1033 = (qJD(6) - t1186) * t1161 + t1319;
t1407 = -t1237 * t1310 + t1238 * t1255;
t1404 = -t1237 * t1290 + t1238 * t1291;
t1403 = -t1237 * t1311 + t1238 * t1309;
t1157 = t1159 ^ 2;
t1158 = t1161 ^ 2;
t1184 = t1186 ^ 2;
t1400 = 0.2e1 * qJD(5);
t1398 = pkin(5) * t867;
t1044 = t1241 * t1110 + t1244 * t1114;
t1259 = -t1246 * pkin(4) + qJDD(4) * qJ(5) - t1198 * t1133 + t1044;
t951 = -t1263 * pkin(5) - t1192 * pkin(8) + (t1400 + t1167) * qJD(4) + t1259;
t1397 = pkin(5) * t951;
t1036 = t1117 + t1074;
t954 = -t1033 * t1240 - t1036 * t1243;
t1396 = pkin(5) * t954;
t1395 = pkin(8) * t867;
t1393 = pkin(2) * t1055;
t1269 = -t1298 - 0.2e1 * t1382;
t1266 = -qJDD(3) + t1269;
t1163 = -t1247 * t1394 + t1266;
t1392 = pkin(2) * t1163;
t1206 = t1350 * qJDD(1);
t1391 = pkin(2) * t1206;
t1390 = pkin(4) * t1244;
t1388 = qJDD(1) * pkin(1);
t974 = qJD(4) * t1400 + t1259;
t1387 = -pkin(4) * t976 + qJ(5) * t974;
t963 = -t1043 * t1244 + t1044 * t1241;
t1386 = t1237 * t963;
t1385 = t1238 * t963;
t1383 = t1240 * t951;
t949 = t1243 * t951;
t1054 = t1113 + t1134;
t1379 = t1054 * t1243;
t1104 = t1183 + t1263;
t1378 = t1104 * t1244;
t1377 = t1437 * t1241;
t1123 = t1266 + t1423;
t1376 = t1123 * t1241;
t1375 = t1123 * t1244;
t1368 = t1186 * t1161;
t1367 = t1186 * t1240;
t1366 = t1186 * t1243;
t1359 = t1206 * t1242;
t1358 = t1206 * t1245;
t1355 = t1237 * t1163;
t1354 = t1237 * t1238;
t1154 = t1238 * t1163;
t1353 = t1240 * t1054;
t1351 = -pkin(4) * t1105 - qJ(5) * t1195;
t1349 = t1232 * qJDD(1);
t1348 = t1233 * qJDD(1);
t1345 = -t1158 - t1184;
t924 = t1241 * t974 - t1244 * t976;
t1344 = pkin(3) * t924 + t1387;
t964 = t1043 * t1241 + t1244 * t1044;
t908 = t1237 * t964 + t1385;
t961 = pkin(3) * t963;
t1343 = -pkin(2) * t908 - t961;
t993 = t1243 * t1345 - t1353;
t1342 = -pkin(8) * t993 + t949;
t1341 = t1241 * t1113;
t1340 = t1244 * t1113;
t1068 = -t1105 * t1244 - t1195 * t1241;
t1337 = pkin(3) * t1068 + t1351;
t1103 = -t1183 + t1263;
t1066 = -t1103 * t1241 - t1196 * t1244;
t1064 = pkin(3) * t1066;
t1069 = -t1103 * t1244 + t1196 * t1241;
t986 = t1066 * t1238 + t1069 * t1237;
t1336 = -pkin(2) * t986 - t1064;
t1335 = qJ(5) * t1241 + pkin(3);
t868 = t1240 * t898 + t1243 * t899;
t842 = -t1399 * t868 + t1397;
t843 = -qJ(5) * t868 + t1398;
t860 = t1241 * t867 + t1244 * t951;
t825 = -pkin(3) * t868 + pkin(7) * t860 + t1241 * t843 + t1244 * t842;
t859 = t1241 * t951 - t1244 * t867;
t829 = -pkin(7) * t859 - t1241 * t842 + t1244 * t843;
t1334 = -t1237 * t825 + t1238 * t829;
t1072 = -t1157 - t1158;
t1276 = pkin(5) * t1072 - t868;
t956 = -t1033 * t1243 + t1240 * t1036;
t853 = -t1399 * t956 + t1276;
t907 = -qJ(5) * t956 + t1396;
t928 = t1072 * t1244 + t1241 * t954;
t837 = -pkin(3) * t956 + pkin(7) * t928 + t1241 * t907 + t1244 * t853;
t927 = t1072 * t1241 - t1244 * t954;
t841 = -pkin(7) * t927 - t1241 * t853 + t1244 * t907;
t1333 = -t1237 * t837 + t1238 * t841;
t1075 = -t1184 - t1157;
t983 = t1240 * t1075 + t1427;
t1300 = -pkin(5) * t983 + t898;
t984 = t1075 * t1243 - t1431;
t872 = -qJ(5) * t984 - t1300;
t1032 = (qJD(6) + t1186) * t1161 + t1319;
t1313 = pkin(5) * t1032 + t949;
t878 = -t1399 * t984 + t1313;
t935 = t1032 * t1244 + t1241 * t983;
t847 = -pkin(3) * t984 + pkin(7) * t935 + t1241 * t872 + t1244 * t878;
t934 = t1032 * t1241 - t1244 * t983;
t850 = -pkin(7) * t934 - t1241 * t878 + t1244 * t872;
t1332 = -t1237 * t847 + t1238 * t850;
t1281 = -pkin(5) * t993 + t899;
t994 = -t1240 * t1345 - t1379;
t873 = -qJ(5) * t994 - t1281;
t1312 = pkin(5) * t1414 - t1383;
t879 = -t1399 * t994 + t1312;
t940 = t1241 * t993 + t1244 * t1414;
t848 = -pkin(3) * t994 + pkin(7) * t940 + t1241 * t873 + t1244 * t879;
t939 = t1241 * t1414 - t1244 * t993;
t852 = -pkin(7) * t939 - t1241 * t879 + t1244 * t873;
t1331 = -t1237 * t848 + t1238 * t852;
t925 = t1241 * t976 + t1244 * t974;
t1250 = -pkin(4) * t1263 + t1123 - t1413;
t973 = t1250 + t1416;
t871 = pkin(7) * t925 + (t1335 + t1390) * t973;
t875 = -pkin(7) * t924 + (-pkin(4) * t1241 + qJ(5) * t1244) * t973;
t1330 = -t1237 * t871 + t1238 * t875;
t1071 = t1105 * t1241 - t1195 * t1244;
t962 = -pkin(4) * t1412 + t974;
t965 = -qJ(5) * t1412 + t976;
t887 = pkin(7) * t1071 + t1241 * t965 + t1244 * t962 - t1433;
t900 = -pkin(7) * t1068 - t1241 * t962 + t1244 * t965;
t1329 = -t1237 * t887 + t1238 * t900;
t960 = (t1104 + t1263) * pkin(4) + t1251;
t911 = t1104 * t1335 + t1244 * t960 + t1446;
t915 = qJ(5) * t1378 - t1241 * t960 + t1447;
t1328 = -t1237 * t911 + t1238 * t915;
t959 = t1250 + 0.2e1 * t1416;
t912 = t1457 + t1241 * t959 + (pkin(3) + t1390) * t1437;
t921 = -pkin(4) * t1377 + t1244 * t959 - t1458;
t1327 = -t1237 * t912 + t1238 * t921;
t922 = pkin(7) * t1069 - t1433 + t964;
t930 = -pkin(7) * t1066 - t963;
t1326 = -t1237 * t922 + t1238 * t930;
t1023 = -t1376 - t1447;
t1145 = t1195 + 0.2e1 * t1183;
t985 = -pkin(3) * t1145 + t1375 - t1446;
t1325 = t1238 * t1023 - t1237 * t985;
t1042 = -t1375 + t1458;
t1146 = t1196 - 0.2e1 * t1365;
t995 = -pkin(3) * t1146 - t1376 - t1457;
t1324 = t1238 * t1042 - t1237 * t995;
t1176 = t1247 * pkin(1) + t1269;
t1187 = -t1288 + t1388;
t1321 = -t1245 * t1176 - t1187 * t1242;
t1320 = -t1212 * t1242 - t1245 * t1213;
t1318 = -pkin(4) * t867 + qJ(5) * t951 - t1395;
t1210 = qJDD(1) * t1245 - t1242 * t1247;
t1317 = pkin(6) * t1210 + g(3) * t1242;
t1211 = qJDD(1) * t1242 + t1245 * t1247;
t1316 = -pkin(6) * t1211 + g(3) * t1245;
t1314 = -pkin(8) * t983 + t1383;
t1308 = -t1043 + t1448;
t876 = t1237 * t925 + t1238 * t924;
t1307 = -pkin(2) * t876 - t1344;
t1306 = pkin(3) * t859 + t1318;
t1305 = -pkin(4) * t993 + qJ(5) * t1414 + t1342;
t1056 = -t1136 * t1237 - t1137 * t1238;
t1304 = t1176 * t1242 - t1187 * t1245;
t1303 = t1212 * t1245 - t1213 * t1242;
t988 = t1068 * t1238 + t1071 * t1237;
t1301 = -pkin(2) * t988 - t1337;
t1299 = -pkin(8) * t954 - t867;
t941 = pkin(3) * t1123 + pkin(7) * t964;
t1297 = -pkin(7) * t1385 - t1237 * t941;
t1296 = pkin(3) * t939 + t1305;
t1295 = -t1044 - t1459;
t1204 = t1237 * t1408;
t1294 = -t1204 * t1242 + t1245 * t1347;
t1293 = t1204 * t1245 + t1242 * t1347;
t1292 = -pkin(4) * t983 + qJ(5) * t1032 + t1314;
t1289 = -t1308 - t1456;
t838 = t1237 * t860 + t1238 * t859;
t1287 = -pkin(2) * t838 - t1306;
t1286 = pkin(2) * t868 - t1237 * t829 - t1238 * t825;
t1285 = pkin(2) * t956 - t1237 * t841 - t1238 * t837;
t1284 = pkin(2) * t984 - t1237 * t850 - t1238 * t847;
t1283 = pkin(2) * t994 - t1237 * t852 - t1238 * t848;
t1282 = -pkin(2) * t973 - t1237 * t875 - t1238 * t871;
t1280 = -pkin(2) * t1104 - t1237 * t915 - t1238 * t911;
t1279 = -pkin(2) * t1437 - t1237 * t921 - t1238 * t912;
t1278 = -t1237 * t900 - t1238 * t887 + t1434;
t1277 = -t1237 * t930 - t1238 * t922 + t1434;
t1275 = pkin(2) * t1145 - t1237 * t1023 - t1238 * t985;
t1274 = pkin(2) * t1146 - t1237 * t1042 - t1238 * t995;
t1273 = pkin(3) * t934 + t1292;
t1272 = -pkin(4) * t954 + qJ(5) * t1072 + t1299;
t1271 = -pkin(2) * t1123 + pkin(7) * t1386 - t1238 * t941;
t892 = t1237 * t940 + t1238 * t939;
t1270 = -pkin(2) * t892 - t1296;
t1268 = pkin(3) * t927 + t1272;
t1267 = -t1295 + t1471;
t888 = t1237 * t935 + t1238 * t934;
t1265 = -pkin(2) * t888 - t1273;
t883 = t1237 * t928 + t1238 * t927;
t1262 = -pkin(2) * t883 - t1268;
t1258 = -pkin(4) * t1436 - qJ(5) * t1138 + t976;
t1257 = t1258 - t1448;
t1256 = -t1257 + t1456;
t1254 = pkin(4) * t1173 + qJ(5) * t1435 + t974;
t1253 = t1254 + t1459;
t1252 = -t1253 - t1471;
t1225 = t1233 * t1247;
t1216 = t1247 * t1354;
t1215 = t1237 * t1224;
t1214 = -0.2e1 * t1215;
t1209 = t1225 + t1357;
t1208 = -t1225 + t1357;
t1207 = (t1232 - t1233) * qJDD(1);
t1203 = t1238 * t1408;
t1202 = t1315 - 0.2e1 * t1388;
t1197 = -t1213 + t1230 + 0.2e1 * t1234;
t1166 = t1211 * t1354;
t1165 = t1210 * t1354;
t1156 = -t1203 * t1242 + t1224 * t1245;
t1155 = t1203 * t1245 + t1224 * t1242;
t1149 = -pkin(2) * t1347 + t1154;
t1148 = -pkin(2) * t1224 - t1355;
t1124 = pkin(1) * t1187 - qJ(2) * t1176;
t1116 = -t1158 + t1184;
t1115 = t1157 - t1184;
t1109 = -pkin(2) * t1204 + t1136;
t1108 = -pkin(2) * t1203 + t1137;
t1107 = t1158 - t1157;
t1077 = qJ(2) * t1224 - t1203 * t1394 - t1154;
t1076 = (-t1163 + t1234) * t1237 - t1394 * t1204;
t1073 = -qJD(6) * t1161 - t1319;
t1070 = -t1145 * t1244 - t1146 * t1241;
t1067 = -t1145 * t1241 + t1146 * t1244;
t1051 = (-t1159 * t1243 + t1161 * t1240) * t1186;
t1050 = (-t1159 * t1240 - t1161 * t1243) * t1186;
t1049 = pkin(2) * t1209 + t1056;
t1040 = -t1377 - t1378;
t1039 = -t1104 * t1241 + t1244 * t1437;
t1028 = -qJ(2) * t1209 - t1206 * t1394 - t1055;
t1027 = t1074 * t1243 - t1161 * t1367;
t1026 = t1074 * t1240 + t1161 * t1366;
t1025 = t1073 * t1240 - t1159 * t1366;
t1024 = -t1073 * t1243 - t1159 * t1367;
t1001 = t1050 * t1241 + t1134 * t1244;
t1000 = -t1050 * t1244 + t1134 * t1241;
t999 = t1115 * t1243 - t1353;
t998 = -t1116 * t1240 + t1427;
t997 = t1115 * t1240 + t1379;
t996 = t1116 * t1243 + t1431;
t991 = -t1068 * t1237 + t1071 * t1238;
t990 = -t1067 * t1237 + t1070 * t1238;
t989 = -t1066 * t1237 + t1069 * t1238;
t987 = t1067 * t1238 + t1070 * t1237;
t982 = -qJ(2) * t1056 + t1393;
t971 = t1026 * t1241 + t1340;
t970 = -t1024 * t1241 - t1340;
t969 = -t1026 * t1244 + t1341;
t968 = t1024 * t1244 - t1341;
t967 = t1056 * t1394 - t1392;
t966 = -qJ(2) * t1163 + t1055 * t1394;
t958 = -t1039 * t1237 + t1040 * t1238;
t957 = t1039 * t1238 + t1040 * t1237;
t955 = -t1032 * t1243 - t1240 * t1414;
t953 = -t1032 * t1240 + t1243 * t1414;
t948 = t1036 * t1244 + t1241 * t996;
t947 = -t1033 * t1244 + t1241 * t997;
t946 = t1036 * t1241 - t1244 * t996;
t945 = -t1033 * t1241 - t1244 * t997;
t937 = -t1000 * t1237 + t1001 * t1238;
t936 = t1000 * t1238 + t1001 * t1237;
t932 = t1107 * t1244 + t1241 * t953;
t931 = t1107 * t1241 - t1244 * t953;
t919 = -t1237 * t969 + t1238 * t971;
t918 = -t1237 * t968 + t1238 * t970;
t917 = t1237 * t971 + t1238 * t969;
t916 = t1237 * t970 + t1238 * t968;
t913 = -qJ(2) * t989 - t1336;
t910 = -t1267 - t1470;
t909 = t1238 * t964 - t1386;
t906 = -qJ(2) * t991 - t1301;
t905 = -t1289 + t1455;
t904 = -t1237 * t946 + t1238 * t948;
t903 = -t1237 * t945 + t1238 * t947;
t902 = t1237 * t948 + t1238 * t946;
t901 = t1237 * t947 + t1238 * t945;
t894 = -t1252 + t1470;
t893 = -t1237 * t939 + t1238 * t940;
t891 = t1274 + t1462;
t890 = qJ(2) * t1146 + t1324 - t1463;
t889 = -t1237 * t934 + t1238 * t935;
t886 = -t1237 * t931 + t1238 * t932;
t885 = t1237 * t932 + t1238 * t931;
t884 = -t1237 * t927 + t1238 * t928;
t882 = -t1256 - t1455;
t881 = t1275 - t1449;
t880 = qJ(2) * t1145 + t1325 + t1450;
t877 = -t1237 * t924 + t1238 * t925;
t870 = t1394 * t989 + t1277;
t869 = t1394 * t986 + t1326 + t1432;
t865 = t1279 - t1462;
t864 = -qJ(2) * t1437 + t1327 + t1463;
t863 = -qJ(2) * t909 - t1343;
t862 = t1280 + t1449;
t861 = -qJ(2) * t1104 + t1328 - t1450;
t857 = t1394 * t909 + t1271;
t856 = -qJ(2) * t1123 + t1394 * t908 + t1297;
t855 = t1394 * t991 + t1278;
t854 = t1394 * t988 + t1329 + t1432;
t846 = -qJ(2) * t893 - t1270;
t845 = -qJ(2) * t877 - t1307;
t844 = -qJ(2) * t889 - t1265;
t839 = -t1237 * t859 + t1238 * t860;
t836 = t1394 * t877 + t1282;
t835 = -qJ(2) * t973 + t1394 * t876 + t1330;
t834 = -qJ(2) * t884 - t1262;
t833 = t1394 * t893 + t1283;
t832 = qJ(2) * t994 + t1394 * t892 + t1331;
t831 = t1394 * t889 + t1284;
t830 = qJ(2) * t984 + t1394 * t888 + t1332;
t827 = t1394 * t884 + t1285;
t826 = qJ(2) * t956 + t1394 * t883 + t1333;
t824 = -qJ(2) * t839 - t1287;
t823 = t1394 * t839 + t1286;
t822 = qJ(2) * t868 + t1394 * t838 + t1334;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1210, 0, -t1211, 0, -t1317, -t1316, -t1303, -pkin(6) * t1303, 0, -t1210, t1211, 0, 0, 0, t1304, t1317, t1316, pkin(6) * t1304 + (-pkin(1) * t1242 + qJ(2) * t1245) * g(3), t1166, -t1207 * t1242 - t1208 * t1245, t1156, -t1166, -t1294, 0, -pkin(6) * t1293 + t1245 * t1109 + t1242 * t1149, -pkin(6) * t1155 + t1108 * t1245 + t1148 * t1242, -pkin(2) * t1358 + t1242 * t1049 - pkin(6) * (-t1209 * t1242 + t1358), t1245 * t982 - t1242 * t967 - pkin(6) * (-t1055 * t1245 - t1163 * t1242), t1420, t1242 * t987 + t1425, t1196 * t1245 + t1461, t1419, -t1195 * t1245 + t1467, t1421, t1245 * t905 - t1242 * t881 - pkin(6) * (t1145 * t1242 - t1451), t1245 * t910 - t1242 * t891 - pkin(6) * (t1146 * t1242 + t1464), t1245 * t913 - t1242 * t870 - pkin(6) * (-t1245 * t986 + t1428), t1245 * t863 - t1242 * t857 - pkin(6) * (-t1123 * t1242 - t1245 * t908), t1421, -t1105 * t1245 - t1461, t1103 * t1245 - t1467, t1420, t1242 * t957 + t1425, t1419, t1245 * t906 - t1242 * t855 - pkin(6) * (-t1245 * t988 + t1428), t1245 * t882 - t1242 * t862 - pkin(6) * (-t1104 * t1242 + t1451), t1245 * t894 - t1242 * t865 - pkin(6) * (-t1242 * t1437 - t1464), t1245 * t845 - t1242 * t836 - pkin(6) * (-t1242 * t973 - t1245 * t876), t1027 * t1245 + t1242 * t917, t1242 * t885 + t1245 * t955, t1242 * t902 + t1245 * t998, -t1025 * t1245 + t1242 * t916, t1242 * t901 + t1245 * t999, t1051 * t1245 + t1242 * t936, t1245 * t844 - t1242 * t831 - pkin(6) * (t1242 * t984 - t1245 * t888), t1245 * t846 - t1242 * t833 - pkin(6) * (t1242 * t994 - t1245 * t892), t1245 * t834 - t1242 * t827 - pkin(6) * (t1242 * t956 - t1245 * t883), t1245 * t824 - t1242 * t823 - pkin(6) * (t1242 * t868 - t1245 * t838); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1211, 0, t1210, 0, t1316, -t1317, t1320, pkin(6) * t1320, 0, -t1211, -t1210, 0, 0, 0, t1321, -t1316, t1317, pkin(6) * t1321 + (pkin(1) * t1245 + qJ(2) * t1242) * g(3), -t1165, t1207 * t1245 - t1208 * t1242, t1155, t1165, -t1293, 0, pkin(6) * t1294 + t1242 * t1109 - t1245 * t1149, pkin(6) * t1156 + t1108 * t1242 - t1148 * t1245, -pkin(2) * t1359 - t1245 * t1049 + pkin(6) * (-t1209 * t1245 - t1359), t1242 * t982 + t1245 * t967 + pkin(6) * (t1055 * t1242 - t1163 * t1245), t1418, -t1245 * t987 + t1429, t1196 * t1242 - t1460, t1417, -t1195 * t1242 - t1466, t1422, t1242 * t905 + t1245 * t881 + pkin(6) * (t1145 * t1245 + t1452), t1242 * t910 + t1245 * t891 + pkin(6) * (t1146 * t1245 - t1465), t1242 * t913 + t1245 * t870 + pkin(6) * (t1242 * t986 + t1424), t1242 * t863 + t1245 * t857 + pkin(6) * (-t1123 * t1245 + t1242 * t908), t1422, -t1105 * t1242 + t1460, t1103 * t1242 + t1466, t1418, -t1245 * t957 + t1429, t1417, t1242 * t906 + t1245 * t855 + pkin(6) * (t1242 * t988 + t1424), t1242 * t882 + t1245 * t862 + pkin(6) * (-t1104 * t1245 - t1452), t1242 * t894 + t1245 * t865 + pkin(6) * (-t1245 * t1437 + t1465), t1242 * t845 + t1245 * t836 + pkin(6) * (t1242 * t876 - t1245 * t973), t1027 * t1242 - t1245 * t917, t1242 * t955 - t1245 * t885, t1242 * t998 - t1245 * t902, -t1025 * t1242 - t1245 * t916, t1242 * t999 - t1245 * t901, t1051 * t1242 - t1245 * t936, t1242 * t844 + t1245 * t831 + pkin(6) * (t1242 * t888 + t1245 * t984), t1242 * t846 + t1245 * t833 + pkin(6) * (t1242 * t892 + t1245 * t994), t1242 * t834 + t1245 * t827 + pkin(6) * (t1242 * t883 + t1245 * t956), t1242 * t824 + t1245 * t823 + pkin(6) * (t1242 * t838 + t1245 * t868); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1212, t1213, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1202, t1197, t1124, t1348, t1214, 0, t1349, 0, 0, t1076, t1077, t1028, t966, t1403, t990, -t1012, t1407, -t1009, t1404, t880, t890, t869, t856, t1404, t1012, t1009, t1403, t958, t1407, t854, t861, t864, t835, t919, t886, t904, t918, t903, t937, t830, t832, t826, t822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1247, 0, 0, -g(3), -t1212, 0, 0, -qJDD(1), t1247, 0, 0, 0, -t1187, 0, g(3), qJ(2) * g(3), t1216, -t1208, t1224, -t1216, -t1347, 0, t1109, t1108, -t1391, t982, t1362, t1410, t1196, -t1362, -t1195, qJDD(4), t905, t910, t913, t863, qJDD(4), -t1105, t1103, t1362, t1410, -t1362, t906, t882, t894, t845, t1027, t955, t998, -t1025, t999, t1051, t844, t846, t834, t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1247, 0, qJDD(1), 0, g(3), 0, -t1213, 0, 0, -t1247, -qJDD(1), 0, 0, 0, -t1176, -g(3), 0, pkin(1) * g(3), -t1215, t1207, t1203, t1215, -t1204, 0, -t1149, -t1148, -t1049, t967, -t1402, -t987, -t1005, -t1406, -t1002, -t1405, t881, t891, t870, t857, -t1405, t1005, t1002, -t1402, -t957, -t1406, t855, t862, t865, t836, -t917, -t885, -t902, -t916, -t901, -t936, t831, t833, t827, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1212, t1213, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1202, t1197, t1124, t1348, t1214, 0, t1349, 0, 0, t1076, t1077, t1028, t966, t1403, t990, -t1012, t1407, -t1009, t1404, t880, t890, t869, t856, t1404, t1012, t1009, t1403, t958, t1407, t854, t861, t864, t835, t919, t886, t904, t918, t903, t937, t830, t832, t826, t822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1187, -t1176, 0, t1348, t1214, 0, t1349, 0, 0, qJ(3) * t1204 - t1355, qJ(3) * t1203 - t1154, qJ(3) * t1206 - t1055, -qJ(3) * t1055, t1403, t990, -t1012, t1407, -t1009, t1404, t1325 - t1454, t1324 + t1469, -qJ(3) * t986 + t1326, -qJ(3) * t908 + t1297, t1404, t1012, t1009, t1403, t958, t1407, -qJ(3) * t988 + t1329, t1328 + t1454, t1327 - t1469, -qJ(3) * t876 + t1330, t919, t886, t904, t918, t903, t937, -qJ(3) * t888 + t1332, -qJ(3) * t892 + t1331, -qJ(3) * t883 + t1333, -qJ(3) * t838 + t1334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1247, 0, 0, 0, t1187, 0, -g(3), 0, -t1216, t1208, -t1224, t1216, t1347, 0, -t1109, -t1108, t1391, -t1393, -t1362, -t1410, -t1196, t1362, t1195, -qJDD(4), t1289, t1267, t1336, t1343, -qJDD(4), t1105, -t1103, -t1362, -t1410, t1362, t1301, t1256, t1252, t1307, -t1027, -t955, -t998, t1025, -t999, -t1051, t1265, t1270, t1262, t1287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1247, qJDD(1), 0, 0, 0, t1176, g(3), 0, 0, t1215, -t1207, -t1203, -t1215, t1204, 0, t1149, t1148, t1049, qJ(3) * t1056 + t1392, t1402, t987, t1005, t1406, t1002, t1405, -t1275 - t1453, -t1274 + t1468, qJ(3) * t989 - t1277, qJ(3) * t909 - t1271, t1405, -t1005, -t1002, t1402, t957, t1406, qJ(3) * t991 - t1278, -t1280 + t1453, -t1279 - t1468, qJ(3) * t877 - t1282, t917, t885, t902, t916, t901, t936, qJ(3) * t889 - t1284, qJ(3) * t893 - t1283, qJ(3) * t884 - t1285, qJ(3) * t839 - t1286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1224, -t1347, -t1216, 0, t1357, 0, 0, -t1163, -t1136, 0, t1309, t1070, t1090, t1255, -t1088, t1291, t1023, t1042, t930, -pkin(7) * t963, t1291, -t1090, t1088, t1309, t1040, t1255, t900, t915, t921, t875, t971, t932, t948, t970, t947, t1001, t850, t852, t841, t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1224, -t1225, -t1347, t1216, 0, t1163, 0, -t1137, 0, t1311, t1067, t1084, t1310, t1081, t1290, t985, t995, t922, t941, t1290, -t1084, -t1081, t1311, t1039, t1310, t887, t911, t912, t871, t969, t931, t946, t968, t945, t1000, t847, t848, t837, t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1216, -t1208, t1224, -t1216, -t1347, 0, t1136, t1137, 0, 0, t1362, t1410, t1196, -t1362, -t1195, qJDD(4), t1308, t1295, t1064, t961, qJDD(4), -t1105, t1103, t1362, t1410, -t1362, t1337, t1257, t1253, t1344, t1027, t955, t998, -t1025, t999, t1051, t1273, t1296, t1268, t1306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1147, -t1145, t1436, t1365, -t1172, -t1365, 0, -t1123, t1043, 0, -t1365, -t1436, t1172, t1147, -t1104, t1365, t965, qJ(5) * t1104, t959, qJ(5) * t973, t1113, t1107, t1036, -t1113, -t1033, t1134, t872, t873, t907, t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1146, t1411, -t1263, t1435, -t1183, t1123, 0, t1044, 0, -t1183, -t1411, -t1435, t1183, t1437, -t1263, t962, t960, pkin(4) * t1437, pkin(4) * t973, -t1026, -t953, -t996, t1024, -t997, -t1050, t878, t879, t853, t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1362, t1410, t1196, -t1362, -t1195, qJDD(4), -t1043, -t1044, 0, 0, qJDD(4), -t1105, t1103, t1362, t1410, -t1362, t1351, t1258, t1254, t1387, t1027, t955, t998, -t1025, t999, t1051, t1292, t1305, t1272, t1318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), -t1105, t1103, t1362, t1410, -t1362, 0, t976, t974, 0, t1027, t955, t998, -t1025, t999, t1051, t1314, t1342, t1299, -t1395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1365, t1436, -t1172, -t1147, t1104, -t1365, -t976, 0, -t973, 0, -t1113, -t1107, -t1036, t1113, t1033, -t1134, t1300, t1281, -t1396, -t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1411, t1435, -t1183, -t1437, t1263, -t974, t973, 0, 0, t1026, t953, t996, -t1024, t997, t1050, pkin(8) * t984 - t1313, pkin(8) * t994 - t1312, pkin(8) * t956 - t1276, pkin(8) * t868 - t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1074, -t1032, t1415, t1117, t1115, -t1117, 0, t951, t898, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1368, t1414, t1116, t1073, t1054, -t1368, -t951, 0, t899, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1113, t1107, t1036, -t1113, -t1033, t1134, -t898, -t899, 0, 0;];
m_new_reg  = t1;
