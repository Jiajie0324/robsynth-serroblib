% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:39
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRPR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR8_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:39:30
% EndTime: 2019-05-05 14:39:35
% DurationCPUTime: 4.70s
% Computational Cost: add. (9654->274), mult. (22521->273), div. (0->0), fcn. (15640->8), ass. (0->158)
t1622 = sin(pkin(9));
t1623 = cos(pkin(9));
t1626 = sin(qJ(4));
t1629 = cos(qJ(4));
t1643 = t1622 * t1629 + t1623 * t1626;
t1594 = t1643 * qJD(1);
t1591 = t1594 ^ 2;
t1631 = qJD(4) ^ 2;
t1563 = -t1631 - t1591;
t1596 = (t1622 * t1626 - t1623 * t1629) * qJD(1);
t1659 = t1596 * t1594;
t1645 = -qJDD(4) - t1659;
t1535 = -t1626 * t1563 + t1629 * t1645;
t1536 = t1629 * t1563 + t1626 * t1645;
t1509 = t1623 * t1535 - t1622 * t1536;
t1627 = sin(qJ(1));
t1683 = t1627 * t1509;
t1564 = qJDD(4) - t1659;
t1667 = t1596 ^ 2;
t1582 = t1631 + t1667;
t1544 = t1626 * t1564 + t1629 * t1582;
t1546 = t1629 * t1564 - t1626 * t1582;
t1520 = t1623 * t1544 + t1622 * t1546;
t1682 = t1627 * t1520;
t1630 = cos(qJ(1));
t1681 = t1630 * t1509;
t1680 = t1630 * t1520;
t1510 = t1622 * t1535 + t1623 * t1536;
t1523 = t1622 * t1544 - t1623 * t1546;
t1610 = t1622 * qJDD(1);
t1611 = t1623 * qJDD(1);
t1644 = -t1626 * t1610 + t1629 * t1611;
t1661 = t1594 * qJD(4);
t1571 = t1644 - t1661;
t1553 = t1571 - t1661;
t1552 = t1571 + t1661;
t1632 = qJD(1) ^ 2;
t1605 = -t1630 * g(1) - t1627 * g(2);
t1666 = -0.2e1 * qJD(1);
t1639 = -qJDD(1) * qJ(2) + qJD(2) * t1666 - t1605;
t1637 = -qJDD(3) + t1639;
t1617 = t1622 ^ 2;
t1618 = t1623 ^ 2;
t1652 = t1617 + t1618;
t1664 = -qJ(3) - pkin(1);
t1558 = -pkin(3) * t1610 + (t1652 * pkin(7) - t1664) * t1632 + t1637;
t1660 = t1596 * qJD(4);
t1665 = 2 * qJD(5);
t1679 = -pkin(4) * t1660 - qJ(5) * t1553 + t1596 * t1665 - t1558;
t1674 = -t1591 - t1667;
t1678 = t1627 * t1674;
t1677 = t1630 * t1674;
t1604 = t1627 * g(1) - t1630 * g(2);
t1640 = -t1632 * qJ(2) + qJDD(2) - t1604;
t1676 = qJD(3) * t1666 + t1664 * qJDD(1) + t1640;
t1675 = t1652 * t1632;
t1592 = t1643 * qJDD(1);
t1569 = t1592 - t1660;
t1625 = sin(qJ(6));
t1628 = cos(qJ(6));
t1573 = t1625 * qJD(4) - t1628 * t1594;
t1670 = t1573 ^ 2;
t1575 = t1628 * qJD(4) + t1625 * t1594;
t1669 = t1575 ^ 2;
t1589 = qJD(6) - t1596;
t1668 = t1589 ^ 2;
t1662 = t1575 * t1573;
t1658 = t1617 * t1632;
t1657 = t1622 * t1632;
t1654 = qJD(6) - t1589;
t1653 = qJD(6) + t1589;
t1651 = t1627 * qJDD(1);
t1650 = t1630 * qJDD(1);
t1648 = t1623 * t1657;
t1561 = t1622 * g(3) + t1676 * t1623;
t1554 = (-pkin(3) * t1657 - qJDD(1) * pkin(7)) * t1623 + t1561;
t1562 = -t1623 * g(3) + t1676 * t1622;
t1557 = -pkin(3) * t1658 - pkin(7) * t1610 + t1562;
t1528 = t1629 * t1554 - t1626 * t1557;
t1646 = -t1625 * qJDD(4) + t1628 * t1569;
t1529 = t1626 * t1554 + t1629 * t1557;
t1641 = -t1628 * qJDD(4) - t1625 * t1569;
t1638 = -qJDD(6) - t1571;
t1560 = t1594 * pkin(4) + t1596 * qJ(5);
t1507 = -qJDD(4) * pkin(4) - t1631 * qJ(5) - t1596 * t1560 + qJDD(5) - t1528;
t1635 = -t1631 * pkin(4) + qJDD(4) * qJ(5) - t1594 * t1560 + t1529;
t1603 = t1630 * t1632 + t1651;
t1602 = -t1627 * t1632 + t1650;
t1600 = t1652 * qJDD(1);
t1599 = t1622 * t1675;
t1598 = t1623 * t1675;
t1590 = qJDD(1) * pkin(1) - t1640;
t1584 = t1632 * pkin(1) + t1639;
t1579 = -t1596 * pkin(5) - qJD(4) * pkin(8);
t1578 = -t1664 * t1632 + t1637;
t1570 = t1644 - 0.2e1 * t1661;
t1568 = t1592 - 0.2e1 * t1660;
t1551 = -t1660 - t1569;
t1550 = -t1660 + t1569;
t1548 = -t1668 - t1669;
t1543 = -t1668 - t1670;
t1542 = -t1669 - t1670;
t1541 = t1626 * t1552 - t1629 * t1592;
t1540 = t1629 * t1551 + t1626 * t1644;
t1539 = -t1629 * t1552 - t1626 * t1592;
t1538 = t1626 * t1551 - t1629 * t1644;
t1533 = -t1622 * t1561 + t1623 * t1562;
t1532 = t1623 * t1561 + t1622 * t1562;
t1531 = t1638 - t1662;
t1530 = -t1638 - t1662;
t1527 = t1654 * t1573 + t1641;
t1526 = -t1653 * t1573 - t1641;
t1525 = -t1654 * t1575 + t1646;
t1524 = t1653 * t1575 - t1646;
t1519 = t1628 * t1531 - t1625 * t1548;
t1518 = t1625 * t1531 + t1628 * t1548;
t1517 = -t1622 * t1539 + t1623 * t1541;
t1516 = -t1622 * t1538 + t1623 * t1540;
t1515 = t1623 * t1539 + t1622 * t1541;
t1514 = t1623 * t1538 + t1622 * t1540;
t1513 = -t1625 * t1530 + t1628 * t1543;
t1512 = t1628 * t1530 + t1625 * t1543;
t1506 = qJD(4) * t1665 + t1635;
t1505 = -t1569 * pkin(4) - t1679;
t1504 = -t1626 * t1528 + t1629 * t1529;
t1503 = t1629 * t1528 + t1626 * t1529;
t1502 = t1628 * t1525 - t1625 * t1527;
t1501 = t1625 * t1525 + t1628 * t1527;
t1500 = -t1569 * pkin(5) - t1591 * pkin(8) + (t1665 + t1579) * qJD(4) + t1635;
t1499 = pkin(5) * t1552 + t1645 * pkin(8) + t1507;
t1498 = -t1591 * pkin(5) + t1596 * t1579 + (pkin(4) + pkin(8)) * t1569 + t1679;
t1497 = t1626 * t1518 + t1629 * t1526;
t1496 = -t1629 * t1518 + t1626 * t1526;
t1495 = t1626 * t1512 + t1629 * t1524;
t1494 = -t1629 * t1512 + t1626 * t1524;
t1493 = t1626 * t1501 + t1629 * t1542;
t1492 = -t1629 * t1501 + t1626 * t1542;
t1491 = t1629 * t1506 + t1626 * t1507;
t1490 = t1626 * t1506 - t1629 * t1507;
t1489 = -t1622 * t1503 + t1623 * t1504;
t1488 = t1623 * t1503 + t1622 * t1504;
t1487 = t1628 * t1498 + t1625 * t1499;
t1486 = -t1625 * t1498 + t1628 * t1499;
t1485 = -t1622 * t1496 + t1623 * t1497;
t1484 = t1623 * t1496 + t1622 * t1497;
t1483 = -t1622 * t1494 + t1623 * t1495;
t1482 = t1623 * t1494 + t1622 * t1495;
t1481 = -t1622 * t1492 + t1623 * t1493;
t1480 = t1623 * t1492 + t1622 * t1493;
t1479 = -t1622 * t1490 + t1623 * t1491;
t1478 = t1623 * t1490 + t1622 * t1491;
t1477 = -t1625 * t1486 + t1628 * t1487;
t1476 = t1628 * t1486 + t1625 * t1487;
t1475 = t1626 * t1476 + t1629 * t1500;
t1474 = -t1629 * t1476 + t1626 * t1500;
t1473 = -t1622 * t1474 + t1623 * t1475;
t1472 = t1623 * t1474 + t1622 * t1475;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1603, -t1602, 0, -t1627 * t1604 + t1630 * t1605, 0, 0, 0, 0, 0, 0, 0, t1603, t1602, -t1630 * t1584 - t1627 * t1590, 0, 0, 0, 0, 0, 0, -t1627 * t1599 + t1622 * t1650, -t1627 * t1598 + t1623 * t1650, -t1627 * t1600 - t1630 * t1675, t1627 * t1532 - t1630 * t1578, 0, 0, 0, 0, 0, 0, t1630 * t1568 - t1683, t1630 * t1570 - t1682, t1627 * t1514 + t1677, t1627 * t1488 - t1630 * t1558, 0, 0, 0, 0, 0, 0, t1627 * t1515 + t1677, -t1630 * t1550 + t1683, -t1630 * t1553 + t1682, t1627 * t1478 - t1630 * t1505, 0, 0, 0, 0, 0, 0, t1627 * t1482 + t1630 * t1513, t1627 * t1484 + t1630 * t1519, t1627 * t1480 + t1630 * t1502, t1627 * t1472 + t1630 * t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1602, -t1603, 0, t1630 * t1604 + t1627 * t1605, 0, 0, 0, 0, 0, 0, 0, -t1602, t1603, -t1627 * t1584 + t1630 * t1590, 0, 0, 0, 0, 0, 0, t1630 * t1599 + t1622 * t1651, t1630 * t1598 + t1623 * t1651, t1630 * t1600 - t1627 * t1675, -t1630 * t1532 - t1627 * t1578, 0, 0, 0, 0, 0, 0, t1627 * t1568 + t1681, t1627 * t1570 + t1680, -t1630 * t1514 + t1678, -t1630 * t1488 - t1627 * t1558, 0, 0, 0, 0, 0, 0, -t1630 * t1515 + t1678, -t1627 * t1550 - t1681, -t1627 * t1553 - t1680, -t1630 * t1478 - t1627 * t1505, 0, 0, 0, 0, 0, 0, -t1630 * t1482 + t1627 * t1513, -t1630 * t1484 + t1627 * t1519, -t1630 * t1480 + t1627 * t1502, -t1630 * t1472 + t1627 * t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, 0, 0, 0, 0, 0, 0, t1510, t1523, t1516, t1489, 0, 0, 0, 0, 0, 0, t1517, -t1510, -t1523, t1479, 0, 0, 0, 0, 0, 0, t1483, t1485, t1481, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1632, -qJDD(1), 0, t1605, 0, 0, 0, 0, 0, 0, 0, t1632, qJDD(1), -t1584, 0, 0, 0, 0, 0, 0, t1610, t1611, -t1675, -t1578, 0, 0, 0, 0, 0, 0, t1568, t1570, t1674, -t1558, 0, 0, 0, 0, 0, 0, t1674, -t1550, -t1553, -t1505, 0, 0, 0, 0, 0, 0, t1513, t1519, t1502, t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1632, 0, t1604, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1632, t1590, 0, 0, 0, 0, 0, 0, t1599, t1598, t1600, -t1532, 0, 0, 0, 0, 0, 0, t1509, t1520, -t1514, -t1488, 0, 0, 0, 0, 0, 0, -t1515, -t1509, -t1520, -t1478, 0, 0, 0, 0, 0, 0, -t1482, -t1484, -t1480, -t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, 0, 0, 0, 0, 0, 0, t1510, t1523, t1516, t1489, 0, 0, 0, 0, 0, 0, t1517, -t1510, -t1523, t1479, 0, 0, 0, 0, 0, 0, t1483, t1485, t1481, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, 0, 0, 0, 0, 0, 0, t1510, t1523, t1516, t1489, 0, 0, 0, 0, 0, 0, t1517, -t1510, -t1523, t1479, 0, 0, 0, 0, 0, 0, t1483, t1485, t1481, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1632, -qJDD(1), t1584, 0, 0, 0, 0, 0, 0, -t1610, -t1611, t1675, t1578, 0, 0, 0, 0, 0, 0, -t1568, -t1570, -t1674, t1558, 0, 0, 0, 0, 0, 0, -t1674, t1550, t1553, t1505, 0, 0, 0, 0, 0, 0, -t1513, -t1519, -t1502, -t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1632, -t1590, 0, 0, 0, 0, 0, 0, -t1599, -t1598, -t1600, t1532, 0, 0, 0, 0, 0, 0, -t1509, -t1520, t1514, t1488, 0, 0, 0, 0, 0, 0, t1515, t1509, t1520, t1478, 0, 0, 0, 0, 0, 0, t1482, t1484, t1480, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1658, -t1648, -t1610, t1562, 0, 0, 0, 0, 0, 0, t1536, -t1546, t1540, t1504, 0, 0, 0, 0, 0, 0, t1541, -t1536, t1546, t1491, 0, 0, 0, 0, 0, 0, t1495, t1497, t1493, t1475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1648, -t1618 * t1632, -t1611, t1561, 0, 0, 0, 0, 0, 0, -t1535, -t1544, t1538, t1503, 0, 0, 0, 0, 0, 0, t1539, t1535, t1544, t1490, 0, 0, 0, 0, 0, 0, t1494, t1496, t1492, t1474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1610, t1611, -t1675, -t1578, 0, 0, 0, 0, 0, 0, t1568, t1570, t1674, -t1558, 0, 0, 0, 0, 0, 0, t1674, -t1550, -t1553, -t1505, 0, 0, 0, 0, 0, 0, t1513, t1519, t1502, t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, -t1564, t1551, t1529, 0, 0, 0, 0, 0, 0, -t1592, -t1563, t1564, t1506, 0, 0, 0, 0, 0, 0, t1524, t1526, t1542, t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1645, -t1582, -t1644, t1528, 0, 0, 0, 0, 0, 0, -t1552, t1645, t1582, -t1507, 0, 0, 0, 0, 0, 0, -t1512, -t1518, -t1501, -t1476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1568, t1570, t1674, -t1558, 0, 0, 0, 0, 0, 0, t1674, -t1550, -t1553, -t1505, 0, 0, 0, 0, 0, 0, t1513, t1519, t1502, t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1674, -t1550, -t1553, -t1505, 0, 0, 0, 0, 0, 0, t1513, t1519, t1502, t1477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, t1563, -t1564, -t1506, 0, 0, 0, 0, 0, 0, -t1524, -t1526, -t1542, -t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1552, -t1645, -t1582, t1507, 0, 0, 0, 0, 0, 0, t1512, t1518, t1501, t1476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1543, t1531, t1525, t1487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1530, t1548, t1527, t1486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1526, t1542, t1500;];
f_new_reg  = t1;
