% Calculate vector of inverse dynamics joint torques for
% S6RPRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta2,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRPRP5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRP5_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:14:38
% EndTime: 2019-03-09 03:16:18
% DurationCPUTime: 93.40s
% Computational Cost: add. (47093->1377), mult. (51361->1710), div. (0->0), fcn. (47977->10), ass. (0->639)
t1137 = Icges(6,1) + Icges(7,1);
t1154 = Icges(7,4) + Icges(6,5);
t1153 = Icges(6,6) - Icges(7,6);
t609 = pkin(10) + qJ(5);
t591 = sin(t609);
t1176 = (Icges(6,4) - Icges(7,5)) * t591;
t1136 = Icges(6,2) + Icges(7,3);
t1175 = Icges(7,2) + Icges(6,3);
t593 = cos(t609);
t1174 = -t1153 * t591 + t1154 * t593;
t1173 = t1137 * t593 - t1176;
t610 = pkin(9) + qJ(3);
t592 = sin(t610);
t594 = cos(t610);
t965 = Icges(6,4) * t593;
t726 = -Icges(6,2) * t591 + t965;
t1172 = -t1153 * t594 + t592 * t726;
t935 = t592 * t593;
t509 = Icges(7,5) * t935;
t937 = t591 * t592;
t1152 = Icges(7,3) * t937 - t1172 + t509;
t958 = Icges(7,5) * t593;
t722 = Icges(7,3) * t591 + t958;
t1087 = (t722 - t726) * t594 - t1153 * t592;
t1171 = t1174 * t594 + t1175 * t592;
t1146 = -t1154 * t594 + t1173 * t592;
t1086 = t1154 * t592 + t1173 * t594;
t1170 = (t1136 * t593 + t1176) * t592;
t1169 = (-t1153 * t593 - t1154 * t591) * t592;
t1148 = t1174 * t592 - t1175 * t594;
t618 = cos(qJ(1));
t924 = t618 * t591;
t617 = sin(qJ(1));
t925 = t617 * t593;
t439 = t594 * t924 - t925;
t930 = t594 * t618;
t836 = t593 * t930;
t440 = t591 * t617 + t836;
t933 = t592 * t618;
t1053 = t1146 * t440 + t1148 * t933 + t1152 * t439;
t210 = Icges(6,5) * t440 - Icges(6,6) * t439 + Icges(6,3) * t933;
t213 = Icges(7,4) * t440 + Icges(7,2) * t933 + Icges(7,6) * t439;
t1149 = t210 + t213;
t960 = Icges(7,5) * t439;
t219 = Icges(7,1) * t440 + Icges(7,4) * t933 + t960;
t410 = Icges(6,4) * t439;
t222 = Icges(6,1) * t440 + Icges(6,5) * t933 - t410;
t1157 = t219 + t222;
t407 = Icges(7,5) * t440;
t207 = Icges(7,6) * t933 + Icges(7,3) * t439 + t407;
t967 = Icges(6,4) * t440;
t216 = -Icges(6,2) * t439 + Icges(6,6) * t933 + t967;
t1159 = t207 - t216;
t1105 = t1149 * t933 + t1157 * t440 + t1159 * t439;
t931 = t594 * t617;
t437 = t591 * t931 + t593 * t618;
t438 = t594 * t925 - t924;
t934 = t592 * t617;
t208 = Icges(6,5) * t438 - Icges(6,6) * t437 + Icges(6,3) * t934;
t211 = Icges(7,4) * t438 + Icges(7,2) * t934 + Icges(7,6) * t437;
t1093 = t208 + t211;
t406 = Icges(7,5) * t438;
t206 = -Icges(7,6) * t934 - Icges(7,3) * t437 - t406;
t409 = Icges(6,4) * t438;
t214 = -Icges(6,2) * t437 + Icges(6,6) * t934 + t409;
t1094 = t206 + t214;
t405 = Icges(7,5) * t437;
t217 = Icges(7,1) * t438 + Icges(7,4) * t934 + t405;
t408 = Icges(6,4) * t437;
t221 = -Icges(6,1) * t438 - Icges(6,5) * t934 + t408;
t1158 = t217 - t221;
t1106 = t1093 * t933 - t1094 * t439 + t1158 * t440;
t855 = qJD(5) * t618;
t863 = qJD(3) * t617;
t479 = t592 * t855 + t863;
t856 = qJD(5) * t617;
t862 = qJD(3) * t618;
t480 = -t592 * t856 + t862;
t857 = qJD(5) * t594;
t562 = qJD(1) - t857;
t1118 = t1053 * t562 + t1105 * t479 - t1106 * t480;
t1054 = t1146 * t438 + t1148 * t934 + t1152 * t437;
t1107 = t1149 * t934 + t1157 * t438 + t1159 * t437;
t1108 = t1093 * t934 - t1094 * t437 + t1158 * t438;
t1119 = t1054 * t562 + t1107 * t479 - t1108 * t480;
t613 = cos(pkin(10));
t927 = t613 * t618;
t611 = sin(pkin(10));
t929 = t611 * t617;
t468 = t594 * t929 + t927;
t923 = t618 * t611;
t928 = t613 * t617;
t469 = t594 * t928 - t923;
t248 = Icges(5,5) * t469 - Icges(5,6) * t468 + Icges(5,3) * t934;
t951 = Icges(4,3) * t618;
t384 = Icges(4,5) * t931 - Icges(4,6) * t934 - t951;
t547 = Icges(4,4) * t934;
t963 = Icges(4,5) * t618;
t388 = Icges(4,1) * t931 - t547 - t963;
t955 = Icges(4,6) * t618;
t386 = Icges(4,4) * t931 - Icges(4,2) * t934 - t955;
t942 = t386 * t592;
t706 = -t388 * t594 + t942;
t251 = Icges(5,4) * t469 - Icges(5,2) * t468 + Icges(5,6) * t934;
t254 = Icges(5,1) * t469 - Icges(5,4) * t468 + Icges(5,5) * t934;
t713 = -t251 * t468 + t254 * t469;
t1103 = t248 * t934 - t384 * t618 - t617 * t706 + t713;
t575 = Icges(4,4) * t594;
t728 = -Icges(4,2) * t592 + t575;
t387 = Icges(4,6) * t617 + t618 * t728;
t968 = Icges(4,4) * t592;
t488 = Icges(4,1) * t594 - t968;
t389 = Icges(4,5) * t617 + t488 * t618;
t339 = t389 * t931;
t484 = Icges(4,5) * t594 - Icges(4,6) * t592;
t385 = Icges(4,3) * t617 + t484 * t618;
t788 = t385 * t618 - t339;
t144 = -t387 * t934 - t788;
t470 = -t594 * t923 + t928;
t471 = t594 * t927 + t929;
t250 = Icges(5,5) * t471 + Icges(5,6) * t470 + Icges(5,3) * t933;
t253 = Icges(5,4) * t471 + Icges(5,2) * t470 + Icges(5,6) * t933;
t256 = Icges(5,1) * t471 + Icges(5,4) * t470 + Icges(5,5) * t933;
t81 = t250 * t934 - t468 * t253 + t469 * t256;
t1102 = t144 + t81;
t907 = t617 * t385 + t389 * t930;
t146 = -t387 * t933 + t907;
t83 = t250 * t933 + t470 * t253 + t471 * t256;
t1100 = t146 + t83;
t816 = t592 * t862;
t186 = qJD(1) * t437 - qJD(5) * t836 + (t816 - t856) * t591;
t701 = t591 * t562;
t868 = qJD(1) * t594;
t781 = -qJD(5) + t868;
t187 = t618 * t701 + (-t617 * t781 - t816) * t593;
t814 = t594 * t862;
t867 = qJD(1) * t617;
t819 = t592 * t867;
t446 = t814 - t819;
t100 = Icges(7,5) * t187 + Icges(7,6) * t446 - Icges(7,3) * t186;
t106 = Icges(6,4) * t187 + Icges(6,2) * t186 + Icges(6,6) * t446;
t1168 = t100 - t106;
t817 = t592 * t863;
t866 = qJD(1) * t618;
t188 = (t594 * t856 - t867) * t593 + (t594 * t866 - t817 - t855) * t591;
t189 = t617 * t701 + (t618 * t781 - t817) * t593;
t815 = t594 * t863;
t445 = t592 * t866 + t815;
t101 = Icges(7,5) * t189 + Icges(7,6) * t445 + Icges(7,3) * t188;
t107 = Icges(6,4) * t189 - Icges(6,2) * t188 + Icges(6,6) * t445;
t1167 = t101 - t107;
t102 = Icges(6,5) * t187 + Icges(6,6) * t186 + Icges(6,3) * t446;
t104 = Icges(7,4) * t187 + Icges(7,2) * t446 - Icges(7,6) * t186;
t1166 = t102 + t104;
t103 = Icges(6,5) * t189 - Icges(6,6) * t188 + Icges(6,3) * t445;
t105 = Icges(7,4) * t189 + Icges(7,2) * t445 + Icges(7,6) * t188;
t1165 = t103 + t105;
t108 = Icges(7,1) * t187 + Icges(7,4) * t446 - Icges(7,5) * t186;
t110 = Icges(6,1) * t187 + Icges(6,4) * t186 + Icges(6,5) * t446;
t1164 = t108 + t110;
t109 = Icges(7,1) * t189 + Icges(7,4) * t445 + Icges(7,5) * t188;
t111 = Icges(6,1) * t189 - Icges(6,4) * t188 + Icges(6,5) * t445;
t1163 = t109 + t111;
t1162 = qJD(3) * t1087 + qJD(5) * t1170;
t1161 = qJD(3) * t1171 + qJD(5) * t1169;
t395 = (-Icges(6,1) * t591 - t965) * t592;
t858 = qJD(5) * t592;
t1160 = (-Icges(7,1) * t591 + t958) * t858 + qJD(5) * t395 + t1086 * qJD(3);
t1156 = t1146 * t593 + t1152 * t591;
t850 = qJD(1) * qJD(3);
t506 = -qJDD(3) * t618 + t617 * t850;
t847 = qJDD(5) * t592;
t296 = qJD(5) * t445 + t617 * t847 + t506;
t472 = qJD(3) * t858 - qJDD(5) * t594 + qJDD(1);
t574 = t592 * qJ(4);
t581 = pkin(4) * t613 + pkin(3);
t997 = pkin(3) - t581;
t806 = t997 * t594;
t1071 = t806 + t574;
t526 = pkin(3) * t817;
t572 = pkin(4) * t929;
t615 = -pkin(8) - qJ(4);
t822 = -t445 * t615 - t581 * t817;
t133 = -qJ(4) * t815 + t526 + (-t1071 * t618 + t572) * qJD(1) + t822;
t1057 = t592 * t997;
t922 = qJ(4) + t615;
t332 = t594 * t922 - t1057;
t860 = qJD(4) * t617;
t533 = t592 * t860;
t563 = pkin(3) * t930;
t245 = qJ(4) * t445 + qJD(1) * t563 - t526 + t533;
t599 = t617 * qJ(2);
t540 = t618 * pkin(1) + t599;
t598 = qJD(2) * t618;
t476 = qJD(1) * t540 - t598;
t616 = -pkin(7) - qJ(2);
t569 = t616 * t867;
t614 = cos(pkin(9));
t582 = pkin(2) * t614 + pkin(1);
t998 = pkin(1) - t582;
t905 = t569 - (-t618 * t998 - t599) * qJD(1) - t476;
t674 = -t245 - t533 + t905;
t849 = qJD(3) * qJD(4);
t1072 = qJDD(4) * t592 + t594 * t849;
t493 = pkin(3) * t592 - qJ(4) * t594;
t851 = qJD(1) * qJD(2);
t875 = qJDD(2) * t617 + t618 * t851;
t733 = t1072 * t618 + t506 * t493 + t875;
t1058 = t592 * t922;
t579 = t594 * pkin(3);
t846 = pkin(4) * t923;
t766 = -t581 * t931 + t846;
t246 = (t579 + t1058) * t617 + t766;
t755 = t579 + t574;
t461 = t755 * t617;
t600 = t618 * qJ(2);
t538 = pkin(1) * t617 - t600;
t587 = t618 * t616;
t878 = -t617 * t582 - t587;
t382 = t538 + t878;
t900 = t382 - t538;
t825 = -t461 + t900;
t773 = t246 + t825;
t861 = qJD(4) * t594;
t411 = qJD(3) * t755 - t861;
t914 = -(-t806 - t1058) * qJD(3) - t411;
t784 = qJD(3) * t914;
t621 = t506 * t332 + t773 * qJDD(1) + (-t133 + t674) * qJD(1) + t618 * t784 + t733;
t756 = rSges(7,1) * t593 + rSges(7,3) * t591;
t1069 = (-pkin(5) * t593 - qJ(6) * t591 - t756) * t592;
t904 = -rSges(7,2) * t594 - t1069;
t1104 = rSges(7,3) + qJ(6);
t1126 = rSges(7,1) + pkin(5);
t1051 = -t1104 * t437 - t1126 * t438;
t920 = rSges(7,2) * t934 - t1051;
t854 = qJD(6) * t591;
t504 = t592 * t854;
t578 = t592 * rSges(7,2);
t864 = qJD(3) * t594;
t666 = t591 * t864 + t593 * t858;
t921 = t504 + t666 * qJ(6) + (-t591 * t858 + t593 * t864) * pkin(5) + (-rSges(7,1) * t591 + rSges(7,3) * t593) * t858 + (t594 * t756 + t578) * qJD(3);
t396 = qJD(6) * t437;
t1063 = -t1104 * t188 - t1126 * t189 - t396;
t970 = -rSges(7,2) * t445 + t1063;
t7 = -qJD(6) * t186 + qJDD(6) * t439 + t296 * t904 - t472 * t920 - t480 * t921 + t562 * t970 + t621;
t1155 = -g(1) + t7;
t724 = Icges(5,5) * t613 - Icges(5,6) * t611;
t371 = -Icges(5,3) * t594 + t592 * t724;
t727 = Icges(5,4) * t613 - Icges(5,2) * t611;
t373 = -Icges(5,6) * t594 + t592 * t727;
t731 = Icges(5,1) * t613 - Icges(5,4) * t611;
t375 = -Icges(5,5) * t594 + t592 * t731;
t485 = Icges(4,2) * t594 + t968;
t487 = Icges(4,1) * t592 + t575;
t702 = t485 * t592 - t487 * t594;
t483 = Icges(4,5) * t592 + Icges(4,6) * t594;
t938 = t483 * t618;
t1096 = t371 * t934 - t373 * t468 + t375 * t469 - t617 * t702 - t938;
t939 = t483 * t617;
t1095 = t371 * t933 + t373 * t470 + t375 * t471 - t618 * t702 + t939;
t1125 = t1093 * t446 + t1094 * t186 + t1158 * t187 + t1163 * t440 + t1165 * t933 + t1167 * t439;
t1124 = t1149 * t446 + t1157 * t187 - t1159 * t186 + t1164 * t440 + t1166 * t933 + t1168 * t439;
t1123 = t1093 * t445 - t1094 * t188 + t1158 * t189 + t1163 * t438 + t1165 * t934 + t1167 * t437;
t1122 = t1149 * t445 + t1157 * t189 + t1159 * t188 + t1164 * t438 + t1166 * t934 + t1168 * t437;
t1114 = t1146 * t187 + t1148 * t446 - t1152 * t186 + t1160 * t440 + t1161 * t933 + t1162 * t439;
t1113 = t1146 * t189 + t1148 * t445 + t1152 * t188 + t1160 * t438 + t1161 * t934 + t1162 * t437;
t718 = -t206 * t591 + t217 * t593;
t76 = -t211 * t594 + t592 * t718;
t716 = -t214 * t591 - t221 * t593;
t78 = -t208 * t594 + t592 * t716;
t1151 = t76 + t78;
t717 = t207 * t591 + t219 * t593;
t77 = -t213 * t594 + t592 * t717;
t715 = -t216 * t591 + t222 * t593;
t79 = -t210 * t594 + t592 * t715;
t1150 = t77 + t79;
t1052 = -t1148 * t594 + t1156 * t592;
t1147 = -t592 * t722 + t1172;
t908 = -t617 * t384 - t388 * t930;
t145 = -t386 * t933 - t908;
t1065 = t470 * t251 + t471 * t254;
t82 = t248 * t933 + t1065;
t981 = t618 * t82;
t1145 = t1100 * t617 - t145 * t618 - t981;
t1144 = t1102 * t617 - t1103 * t618;
t991 = rSges(5,2) * t611;
t994 = rSges(5,1) * t613;
t1070 = t991 - t994;
t1143 = t1070 * t594;
t1141 = (-t1156 + t1171) * t562 + (t1148 * t617 + t716 + t718) * t480 + (-t1148 * t618 - t715 - t717) * t479;
t1049 = -t438 * rSges(6,1) + t437 * rSges(6,2);
t228 = -rSges(6,3) * t934 + t1049;
t993 = rSges(6,1) * t593;
t758 = -rSges(6,2) * t591 + t993;
t361 = -rSges(6,3) * t594 + t592 * t758;
t1140 = t562 * t228 - t480 * t361;
t397 = qJD(6) * t439;
t1139 = -t562 * t920 + t397;
t895 = -t1104 * t935 + t1126 * t937;
t1138 = (qJD(3) * t1156 - t1161) * t594 + (t1160 * t593 + t1162 * t591 + (-t1146 * t591 + t1152 * t593) * qJD(5) + t1148 * qJD(3)) * t592;
t1135 = t1095 * qJD(1);
t1134 = -t1169 * t562 + (-t1153 * t438 - t1154 * t437) * t480 + (t1153 * t440 + t1154 * t439) * t479;
t762 = t469 * rSges(5,1) - t468 * rSges(5,2);
t1133 = -t762 + t878;
t264 = -rSges(5,3) * t934 - t762;
t1132 = t1096 * qJD(1);
t505 = qJDD(3) * t617 + t618 * t850;
t295 = qJD(5) * t446 + t618 * t847 + t505;
t521 = qJ(4) * t814;
t677 = -t594 * t615 + t1057;
t659 = t677 * t618;
t884 = qJD(1) * t846 + t615 * t819;
t132 = qJD(3) * t659 + t1071 * t867 - t521 + t884;
t464 = qJ(4) * t933 + t563;
t926 = t615 * t618;
t700 = t581 * t930 - t592 * t926 + t572;
t247 = t700 - t464;
t859 = qJD(4) * t618;
t535 = t592 * t859;
t667 = -t594 * t867 - t816;
t244 = pkin(3) * t667 - qJ(4) * t819 + t521 + t535;
t786 = t618 * t582 - t616 * t617;
t383 = t786 - t540;
t588 = qJ(2) * t866;
t597 = qJD(2) * t617;
t874 = t588 + t597;
t699 = -qJDD(2) * t618 + qJD(1) * (-pkin(1) * t867 + t874) + qJDD(1) * t540 + t617 * t851;
t660 = qJD(1) * (-t588 + (t617 * t998 - t587) * qJD(1)) + qJDD(1) * t383 + t699;
t634 = qJDD(1) * t464 + t660 + t1072 * t617 + (t244 + t535) * qJD(1);
t910 = -t332 - t493;
t624 = qJD(1) * t132 + qJDD(1) * t247 + t505 * t910 + t617 * t784 + t634;
t918 = rSges(7,2) * t933 + t1104 * t439 + t1126 * t440;
t1060 = rSges(7,2) * t814 - t1104 * t186 + t1126 * t187 + t397;
t973 = -rSges(7,2) * t819 + t1060;
t6 = qJD(6) * t188 + qJDD(6) * t437 - t295 * t904 + t472 * t918 - t479 * t921 + t562 * t973 + t624;
t1129 = -g(2) + t6;
t1128 = t1053 * t472 + t1105 * t295 + t1106 * t296 + t1114 * t562 + t1124 * t479 - t1125 * t480;
t1127 = t1054 * t472 + t1107 * t295 + t1108 * t296 + t1113 * t562 + t1122 * t479 - t1123 * t480;
t19 = (qJD(3) * t718 - t105) * t594 + (qJD(3) * t211 + t101 * t591 + t109 * t593 + (-t206 * t593 - t217 * t591) * qJD(5)) * t592;
t21 = (qJD(3) * t716 - t103) * t594 + (qJD(3) * t208 - t107 * t591 + t111 * t593 + (-t214 * t593 + t221 * t591) * qJD(5)) * t592;
t1121 = t19 + t21;
t20 = (qJD(3) * t717 - t104) * t594 + (qJD(3) * t213 + t100 * t591 + t108 * t593 + (t207 * t593 - t219 * t591) * qJD(5)) * t592;
t22 = (qJD(3) * t715 - t102) * t594 + (qJD(3) * t210 - t106 * t591 + t110 * t593 + (-t216 * t593 - t222 * t591) * qJD(5)) * t592;
t1120 = t20 + t22;
t1117 = t1052 * t562 + t1150 * t479 - t1151 * t480;
t1116 = qJD(3) * t1144 + t1132;
t1115 = qJD(3) * t1145 + t1135;
t1064 = t251 * t611 - t254 * t613;
t336 = qJD(1) * t470 + t611 * t817;
t337 = qJD(1) * t471 - t613 * t817;
t136 = Icges(5,5) * t337 + Icges(5,6) * t336 + Icges(5,3) * t445;
t138 = Icges(5,4) * t337 + Icges(5,2) * t336 + Icges(5,6) * t445;
t140 = Icges(5,1) * t337 + Icges(5,4) * t336 + Icges(5,5) * t445;
t671 = qJD(3) * t485;
t260 = qJD(1) * t387 - t617 * t671;
t672 = qJD(3) * t487;
t262 = qJD(1) * t389 - t617 * t672;
t1112 = (t136 - t260) * t594 + (t138 * t611 - t140 * t613 - t262) * t592 + (t1064 * t594 - t248 * t592 + t706) * qJD(3);
t334 = qJD(1) * t468 + t611 * t816;
t335 = -qJD(1) * t469 - t613 * t816;
t135 = Icges(5,5) * t335 + Icges(5,6) * t334 + Icges(5,3) * t446;
t137 = Icges(5,4) * t335 + Icges(5,2) * t334 + Icges(5,6) * t446;
t139 = Icges(5,1) * t335 + Icges(5,4) * t334 + Icges(5,5) * t446;
t259 = -t618 * t671 + (-t617 * t728 + t955) * qJD(1);
t261 = -t618 * t672 + (-t488 * t617 + t963) * qJD(1);
t941 = t387 * t592;
t705 = -t389 * t594 + t941;
t711 = -t253 * t611 + t256 * t613;
t1111 = (-t135 + t259) * t594 + (-t137 * t611 + t139 * t613 + t261) * t592 + (t250 * t592 + t594 * t711 - t705) * qJD(3);
t1031 = t702 * qJD(1) + t484 * qJD(3);
t372 = Icges(5,3) * t592 + t594 * t724;
t343 = t372 * qJD(3);
t374 = Icges(5,6) * t592 + t594 * t727;
t344 = t374 * qJD(3);
t376 = Icges(5,5) * t592 + t594 * t731;
t345 = t376 * qJD(3);
t474 = t728 * qJD(3);
t475 = t488 * qJD(3);
t703 = t485 * t594 + t487 * t592;
t627 = qJD(1) * t483 - qJD(3) * t703 - t474 * t592 + t475 * t594;
t1110 = t1031 * t617 + t334 * t373 + t335 * t375 + t343 * t933 + t344 * t470 + t345 * t471 + t371 * t446 + t627 * t618;
t1109 = -t1031 * t618 + t336 * t373 + t337 * t375 + t343 * t934 - t344 * t468 + t345 * t469 + t371 * t445 + t627 * t617;
t1101 = t145 + t82;
t200 = t386 * t594 + t388 * t592;
t1099 = -t1064 * t592 - t248 * t594 + t200;
t201 = t387 * t594 + t389 * t592;
t1098 = -t250 * t594 + t592 * t711 + t201;
t1091 = t1147 * t617;
t1090 = t1147 * t618;
t1089 = t1146 * t617;
t1088 = t1146 * t618;
t1085 = t504 + t914 - t921;
t707 = -t373 * t611 + t375 * t613;
t1066 = qJD(3) * (-t1064 * t618 - t617 * t711) + (t372 - t707) * qJD(1);
t887 = t487 + t728;
t888 = -t485 + t488;
t1084 = t1066 * t592 + t371 * t868 + (-t592 * t887 + t594 * t888) * qJD(1);
t1083 = t1141 * t592;
t1027 = t617 * (-t485 * t618 + t389) - t618 * (-Icges(4,2) * t931 + t388 - t547);
t656 = t386 * t618 - t387 * t617;
t1082 = -t1027 * t592 + (-t248 * t618 + t250 * t617 + t656) * t594;
t1081 = -t1093 * t480 + t1148 * t562 + t1149 * t479;
t542 = qJ(4) * t931;
t293 = t617 * t677 - t542;
t544 = qJ(4) * t930;
t294 = -t544 + t659;
t459 = -pkin(3) * t934 + t542;
t462 = -pkin(3) * t933 + t544;
t823 = qJD(4) * t592 + t459 * t863 + t462 * t862;
t830 = t618 * t244 + t617 * t245 + t461 * t866;
t1080 = t618 * t132 + t617 * t133 - t246 * t866 - t293 * t863 - t294 * t862 - t823 + t830;
t1044 = t1150 * t618 + t1151 * t617;
t1079 = t1150 * t617 - t1151 * t618;
t1043 = t1105 * t618 + t1106 * t617;
t1078 = t1105 * t617 - t1106 * t618;
t1042 = t1107 * t618 + t1108 * t617;
t1077 = t1107 * t617 - t1108 * t618;
t670 = qJD(3) * t483;
t870 = qJD(1) * t385;
t1032 = qJD(1) * t706 - t617 * t670 + t870;
t1033 = -t618 * t670 + (-t484 * t617 + t705 + t951) * qJD(1);
t628 = -qJD(3) * t201 - t259 * t592 + t261 * t594 + t870;
t629 = qJD(1) * t384 - qJD(3) * t200 - t260 * t592 + t262 * t594;
t1076 = (t1032 * t618 - t136 * t934 + t138 * t468 - t140 * t469 - t248 * t445 - t251 * t336 - t254 * t337) * t618 + (t135 * t934 - t137 * t468 + t139 * t469 + t250 * t445 + t253 * t336 + t256 * t337 + t628 * t617 + (-t1033 - t629) * t618) * t617;
t1075 = (-t136 * t933 - t138 * t470 - t140 * t471 - t248 * t446 - t251 * t334 - t254 * t335 - t629 * t618) * t618 + (t1033 * t617 + t135 * t933 + t137 * t470 + t139 * t471 + t250 * t446 + t253 * t334 + t256 * t335 + (-t1032 + t628) * t618) * t617;
t577 = t592 * rSges(5,3);
t1074 = -t755 - t577;
t872 = t598 - t533;
t821 = -t493 * t863 - t872;
t899 = t383 + t540;
t824 = t464 + t899;
t641 = qJD(1) * (t247 + t824) - t332 * t863 + t821;
t1067 = t479 * t904 - t918 * t562 - t396 - t641;
t793 = t1067 * t904;
t764 = t461 * t863 + t464 * t862 - t861;
t673 = -t246 * t863 + t247 * t862 + t764;
t44 = t479 * t920 + t480 * t918 + t504 + t673;
t795 = t44 * t920;
t1073 = -t793 - t795;
t1055 = t862 * t910;
t377 = qJD(1) * t382;
t516 = qJD(1) * t538;
t1050 = t377 - t516;
t1047 = (-t1146 + t1170) * t562 + (-t1136 * t438 + t1158 + t405 - t408) * t480 + (t1136 * t440 - t1157 + t410 - t960) * t479;
t1046 = (-Icges(7,1) * t937 + t1152 + t395 + t509) * t562 + (t1137 * t437 + t1094 - t406 + t409) * t480 + (-t1137 * t439 + t1159 + t407 - t967) * t479;
t1045 = t1134 * t592;
t1039 = t1052 * t472 + t1138 * t562;
t1035 = g(1) * t618 + g(2) * t617;
t612 = sin(pkin(9));
t992 = rSges(3,2) * t612;
t996 = rSges(3,1) * t614;
t452 = t617 * rSges(3,3) + (-t992 + t996) * t618;
t1030 = t1035 * t592;
t669 = -qJDD(4) * t594 + t244 * t862 + t245 * t863 + t505 * t461 + t592 * t849;
t889 = -t464 - t247;
t631 = t132 * t862 + t133 * t863 - t505 * t246 + t506 * t889 + t669;
t5 = qJD(6) * t666 + qJDD(6) * t937 + t295 * t920 - t296 * t918 - t479 * t970 + t480 * t973 + t631;
t1029 = t44 * t973 + t5 * t918;
t1024 = m(5) / 0.2e1;
t1023 = m(6) / 0.2e1;
t1022 = m(7) / 0.2e1;
t1021 = t295 / 0.2e1;
t1020 = t296 / 0.2e1;
t1019 = t472 / 0.2e1;
t1018 = -t479 / 0.2e1;
t1017 = t479 / 0.2e1;
t1016 = -t480 / 0.2e1;
t1015 = t480 / 0.2e1;
t1014 = t505 / 0.2e1;
t1013 = t506 / 0.2e1;
t1012 = -t562 / 0.2e1;
t1011 = t562 / 0.2e1;
t1009 = t617 / 0.2e1;
t1008 = -t618 / 0.2e1;
t1006 = pkin(4) * t611;
t1005 = g(1) * t617;
t1002 = g(3) * t615;
t760 = rSges(6,1) * t189 - rSges(6,2) * t188;
t115 = rSges(6,3) * t445 + t760;
t414 = (-rSges(6,1) * t591 - rSges(6,2) * t593) * t592;
t576 = t592 * rSges(6,3);
t199 = qJD(5) * t414 + (t594 * t758 + t576) * qJD(3);
t9 = -t562 * t115 - t480 * t199 + t228 * t472 + t296 * t361 + t621;
t1001 = t9 * t617;
t995 = rSges(4,1) * t594;
t833 = t187 * rSges(6,1) + t186 * rSges(6,2) + rSges(6,3) * t814;
t113 = -rSges(6,3) * t819 + t833;
t230 = t440 * rSges(6,1) - t439 * rSges(6,2) + rSges(6,3) * t933;
t10 = t113 * t562 - t199 * t479 + t230 * t472 - t295 * t361 + t624;
t990 = t10 * t618;
t989 = t19 * t480;
t988 = t20 * t479;
t987 = t21 * t480;
t986 = t22 * t479;
t604 = t617 * rSges(4,3);
t980 = t76 * t296;
t979 = t77 * t295;
t978 = t78 * t296;
t977 = t79 * t295;
t975 = -rSges(5,3) - qJ(4);
t494 = rSges(4,1) * t592 + rSges(4,2) * t594;
t765 = -t494 * t862 + t597;
t429 = rSges(4,1) * t931 - rSges(4,2) * t934 - t618 * rSges(4,3);
t826 = -t429 + t900;
t151 = qJD(1) * t826 + t765;
t945 = t151 * t617;
t430 = rSges(4,1) * t930 - rSges(4,2) * t933 + t604;
t152 = -t494 * t863 - t598 + (t430 + t899) * qJD(1);
t463 = t494 * t618;
t944 = t152 * t463;
t936 = t591 * t594;
t932 = t593 * t594;
t510 = t594 * t581;
t265 = t471 * rSges(5,1) + t470 * rSges(5,2) + rSges(5,3) * t933;
t917 = -t265 - t464;
t916 = t1104 * t438 - t1126 * t437;
t915 = t1104 * t440 - t1126 * t439;
t467 = t493 * t867;
t913 = t332 * t867 + t467;
t553 = rSges(7,2) * t931;
t912 = t1069 * t617 + t553;
t559 = rSges(7,2) * t930;
t911 = t1069 * t618 + t559;
t909 = t592 * t615 - t510;
t906 = -(t577 - t1143) * qJD(3) - t411;
t903 = -t1104 * t936 - t1126 * t932 - t578;
t378 = -rSges(5,3) * t594 - t1070 * t592;
t902 = -t378 - t493;
t901 = t1074 + t1143;
t892 = t617 * t461 + t618 * t464;
t891 = qJD(1) * t462 + t594 * t860;
t367 = t452 + t540;
t840 = rSges(6,2) * t937;
t886 = rSges(6,3) * t931 + t617 * t840;
t885 = rSges(6,3) * t930 + t618 * t840;
t841 = t592 * t991;
t883 = rSges(5,3) * t931 + t617 * t841;
t882 = rSges(5,3) * t930 + t618 * t841;
t881 = rSges(4,2) * t819 + rSges(4,3) * t866;
t880 = t535 + t597;
t845 = t617 * t996;
t570 = t617 * t992;
t876 = t618 * rSges(3,3) + t570;
t451 = t845 - t876;
t879 = -t538 - t451;
t877 = rSges(3,3) * t866 + qJD(1) * t570;
t873 = t597 - t516;
t869 = qJD(1) * t484;
t865 = qJD(3) * t592;
t852 = -m(5) - m(6) - m(7);
t844 = t592 * t994;
t843 = rSges(6,1) * t935;
t835 = t615 * t931;
t834 = t594 * t926;
t831 = -t199 + t914;
t829 = qJD(1) * t294 + t891;
t828 = t335 * rSges(5,1) + t334 * rSges(5,2) + rSges(5,3) * t814;
t827 = -t361 + t910;
t820 = t569 + t872;
t808 = -pkin(1) - t996;
t803 = t866 / 0.2e1;
t801 = -t863 / 0.2e1;
t800 = t863 / 0.2e1;
t799 = -t862 / 0.2e1;
t798 = t862 / 0.2e1;
t668 = t880 + t1055;
t632 = qJD(1) * t773 + t668;
t49 = -t480 * t904 + t1139 + t632;
t794 = t49 * t904;
t89 = -t378 * t863 + (t265 + t824) * qJD(1) + t821;
t792 = t89 * t902;
t790 = t909 * t617;
t789 = t909 * t618;
t787 = -t384 + t941;
t785 = -t582 - t510;
t783 = qJD(3) * t906;
t782 = -qJD(1) * t459 + t594 * t859;
t778 = -t617 * t246 + t618 * t247 + t892;
t776 = t264 + t825;
t775 = -t904 + t910;
t541 = rSges(2,1) * t618 - rSges(2,2) * t617;
t539 = rSges(2,1) * t617 + rSges(2,2) * t618;
t496 = -rSges(4,2) * t592 + t995;
t763 = rSges(5,1) * t337 + rSges(5,2) * t336;
t442 = qJD(1) * t461;
t734 = t377 + t535 - t442 + t873;
t719 = -t151 * t618 - t152 * t617;
t714 = -t228 * t618 - t230 * t617;
t268 = rSges(4,1) * t667 - rSges(4,2) * t814 + t881;
t460 = t494 * t617;
t269 = -qJD(3) * t460 + (t496 * t618 + t604) * qJD(1);
t710 = t268 * t618 + t269 * t617;
t704 = t429 * t617 + t430 * t618;
t363 = rSges(6,1) * t932 - rSges(6,2) * t936 + t576;
t697 = t820 - t822;
t696 = t785 - t578;
t695 = t785 - t576;
t681 = t592 * t975 - t579;
t680 = t766 + t878;
t676 = -qJD(1) * t293 + t782;
t665 = -t44 * t970 + t5 * t920;
t658 = -t1067 * t918 - t49 * t920;
t657 = -t44 * t918 + t794;
t654 = t700 + t786;
t633 = -t581 * t816 - t615 * t814 + t880 + t884;
t59 = -t228 * t479 + t230 * t480 + t673;
t62 = t1140 + t632;
t63 = t230 * t562 - t361 * t479 + t641;
t630 = t59 * t714 + (t617 * t62 - t618 * t63) * t361;
t626 = -t1073 * t618 + t657 * t617;
t477 = t496 * qJD(3);
t444 = (t617 ^ 2 + t618 ^ 2) * t865;
t331 = -t618 * t844 + t882;
t330 = -t617 * t844 + t883;
t329 = t375 * t618;
t328 = t375 * t617;
t327 = t373 * t618;
t326 = t373 * t617;
t321 = -t618 * t843 + t885;
t319 = -t617 * t843 + t886;
t315 = qJD(1) * t367 - t598;
t314 = qJD(1) * t879 + t597;
t289 = -rSges(6,1) * t439 - rSges(6,2) * t440;
t284 = -rSges(6,1) * t437 - rSges(6,2) * t438;
t243 = qJD(1) * t246;
t231 = t704 * qJD(3);
t150 = qJDD(1) * t452 + qJD(1) * (-qJD(1) * t845 + t877) + t699;
t149 = t879 * qJDD(1) + (-qJD(1) * t452 - t476) * qJD(1) + t875;
t148 = rSges(5,3) * t445 + t763;
t147 = -rSges(5,3) * t819 + t828;
t94 = (-t264 * t617 + t265 * t618) * qJD(3) + t764;
t88 = qJD(1) * t776 + t862 * t902 + t880;
t75 = qJD(1) * t268 + qJDD(1) * t430 - t477 * t863 - t494 * t505 + t660;
t74 = -t477 * t862 + t494 * t506 + t826 * qJDD(1) + (-t269 + t905) * qJD(1) + t875;
t41 = qJD(1) * t147 + qJDD(1) * t265 + t505 * t902 + t617 * t783 + t634;
t40 = t378 * t506 + t618 * t783 + t776 * qJDD(1) + (-t148 + t674) * qJD(1) + t733;
t35 = -t264 * t505 + t917 * t506 + (t147 * t618 + t148 * t617) * qJD(3) + t669;
t8 = t113 * t480 + t115 * t479 - t228 * t295 - t230 * t296 + t631;
t1 = [(-t371 * t594 + t592 * t707 + t703 + m(2) * (t539 ^ 2 + t541 ^ 2) + Icges(2,3) + Icges(3,2) * t614 ^ 2 + (Icges(3,1) * t612 + 0.2e1 * Icges(3,4) * t614) * t612) * qJDD(1) + (-(-qJD(1) * t429 + t1050 - t151 + t765) * t152 + t151 * (t569 + t598) + t152 * (t597 + t881) + (t494 * t945 - t944) * qJD(3) + ((-t151 * rSges(4,3) + t152 * (-t582 - t995)) * t617 + (t151 * (-t496 - t582) - t152 * t616) * t618) * qJD(1) + (-g(2) + t75) * (t430 + t786) + (-g(1) + t74) * (-t429 + t878)) * m(4) + (t314 * t598 + t315 * (t874 + t877) + (t314 * (t808 + t992) * t618 + (t314 * (-rSges(3,3) - qJ(2)) + t315 * t808) * t617) * qJD(1) - (-qJD(1) * t451 - t314 + t873) * t315 + (t150 - g(2)) * t367 + (t149 - g(1)) * (t617 * t808 + t600 + t876)) * m(3) + t1118 * t1015 + t1053 * t1021 + t1054 * t1020 + (((t618 * t787 + t146 + t713 - t907) * t618 + (t617 * t787 - t1065 + t1101 + t788 - t81) * t617) * qJD(3) + t1116 - t1132) * t801 + (-g(1) * t1133 - t681 * t1005 - t792 * t862 + (t617 * t681 + t1133) * t40 + (t526 - t763 + t820 + t864 * t975 * t617 + (-t582 + t1074) * t866) * t88 + (-pkin(3) * t816 + t521 - t734 + t828 + t88 + t880 + ((-t582 + t681) * t617 - t587 - t264) * qJD(1)) * t89 + (-g(2) + t41) * (t786 - t917)) * m(5) + (-t793 * t480 + t1129 * (t654 + t918) + t1155 * ((-rSges(7,2) + t615) * t934 + t680 + t1051) + (-rSges(7,2) * t815 + t1063 + t697 + (-t1006 * t617 + t618 * t696) * qJD(1)) * t49 + (-t633 - t1060 + (-t617 * t696 + t587) * qJD(1) + t1055 + t1139 + t243 + t734 - t49) * t1067) * m(7) + ((-t343 + t474) * t594 + (-t344 * t611 + t345 * t613 + t475) * t592 + (t371 * t592 + t594 * t707 - t702) * qJD(3)) * qJD(1) + (t1110 + t1111) * t800 + t1114 * t1017 + (t1109 - t1112 + t1115) * t799 + (t1113 + t1118) * t1016 + t978 / 0.2e1 + t979 / 0.2e1 + t980 / 0.2e1 + t977 / 0.2e1 + (t1093 * t594 + (t1094 * t591 - t1158 * t593) * t592 + t1151) * t479 * t1012 - t989 / 0.2e1 + t986 / 0.2e1 - t987 / 0.2e1 + t988 / 0.2e1 + t1039 + (t62 * (-rSges(6,3) * t815 + t697 - t760) + t63 * (t633 + t833) + ((-t63 * t616 + t62 * t695) * t618 + (-t1006 * t62 + t63 * t695) * t617) * qJD(1) - (t1050 + t1140 + t243 - t442 - t62 + t668) * t63 + (t10 - g(2)) * (t654 + t230) + (t9 - g(1)) * ((-rSges(6,3) + t615) * t934 + t680 + t1049)) * m(6) - m(2) * (-g(1) * t539 + g(2) * t541) + (((t144 - t339 + (t385 + t942) * t618 + t908) * t618 - t981 + (t83 + t907) * t617) * qJD(3) + t1135) * t798 + (t1095 + t1098) * t1014 + (t1096 + t1099) * t1013; (-m(3) - m(4) + t852) * (-g(2) * t618 + t1005) + 0.2e1 * (t1008 * t6 + t1009 * t7) * m(7) + 0.2e1 * (-t990 / 0.2e1 + t1001 / 0.2e1) * m(6) + 0.2e1 * (t1008 * t41 + t1009 * t40) * m(5) + 0.2e1 * (t1008 * t75 + t1009 * t74) * m(4) + 0.2e1 * (t1008 * t150 + t1009 * t149) * m(3); ((t1102 * t618 + t1103 * t617) * qJD(1) + t1076) * t799 + (g(1) * t463 + g(2) * t460 - g(3) * t496 - (t151 * t460 - t944) * qJD(1) - (t231 * (-t460 * t617 - t463 * t618) + t719 * t496) * qJD(3) + (qJD(3) * t710 + t429 * t505 - t430 * t506) * t704 + t231 * ((t429 * t618 - t430 * t617) * qJD(1) + t710) + t719 * t477 + (-t75 * t617 - t74 * t618 + (-t152 * t618 + t945) * qJD(1)) * t494) * m(4) + t1079 * t1019 + (qJD(1) * t1109 + qJD(3) * t1076 + qJDD(1) * t1096 + t1102 * t505 + t1103 * t506 + t1127) * t1008 + (qJD(1) * t1110 + qJD(3) * t1075 + qJDD(1) * t1095 + t1100 * t505 + t1101 * t506 + t1128) * t1009 + (-t88 * (-qJD(1) * t330 + t782) - t89 * (qJD(1) * t331 + t891) - t94 * t823 - ((t94 * t331 + t88 * t901) * t618 + (t94 * t330 + t89 * t901) * t617) * qJD(3) - g(1) * (t544 + t882) - g(2) * (t542 + t883) + g(3) * t901 - (-pkin(3) - t994) * t1030 + t88 * t467 + t35 * t892 + t94 * t830 + (t40 * t902 + t88 * t906 + t35 * t265 + t94 * t147 + (-t264 * t94 + t792) * qJD(1)) * t618 + (t41 * t902 + t89 * t906 - t35 * t264 + t94 * t148 + (t88 * t378 + t917 * t94) * qJD(1)) * t617) * m(5) + ((qJD(5) * t1044 - t1141) * t594 + ((t1086 * t593 + t1087 * t591 + t1148) * t562 + (t1089 * t593 - t1091 * t591 - t1093) * t480 + (-t1088 * t593 + t1090 * t591 + t1149) * t479 + t1052 * qJD(5)) * t592) * t1012 + ((t1053 * t592 + t1106 * t931) * qJD(5) + ((qJD(5) * t1105 + t1081) * t594 + t1083) * t618 + (t1086 * t440 + t1087 * t439) * t562 + (t1089 * t440 - t1091 * t439) * t480 + (-t1088 * t440 + t1090 * t439) * t479) * t1018 + ((t1054 * t592 + t1107 * t930) * qJD(5) + ((qJD(5) * t1108 + t1081) * t594 + t1083) * t617 + (t1086 * t438 + t1087 * t437) * t562 + (t1089 * t438 - t1091 * t437) * t480 + (-t1088 * t438 + t1090 * t437) * t479) * t1015 + (-t62 * (-t319 * t562 - t363 * t480 + t676) - t63 * (t321 * t562 - t363 * t479 + t829) - (t62 * t789 + t63 * t790) * qJD(3) - ((t228 * t62 + t230 * t63) * t592 + t630 * t594) * qJD(5) - g(1) * (-t834 + t885) - g(2) * (-t835 + t886) - g(3) * (t363 + t510) - (-t1002 + t1035 * (-t581 - t993)) * t592 + t62 * t913 + t8 * t778 + (t8 * t230 + t62 * t831 + (qJD(1) * t63 + t9) * t827) * t618 + (qJD(1) * t361 * t62 + t10 * t827 - t228 * t8 + t63 * t831) * t617 + (-t319 * t479 - t321 * t480 + (-qJD(1) * t228 + t113) * t618 + (t115 + (-t230 + t889) * qJD(1)) * t617 + t1080) * t59) * m(6) + (t5 * t778 + (qJD(1) * t795 + t7 * t775 + t1029) * t618 + (qJD(1) * t794 + t6 * t775 + t665) * t617 - g(1) * (t559 - t834) - g(2) * (t553 - t835) - g(3) * (t510 - t903) - (-t1002 + t1035 * (-t1104 * t591 - t1126 * t593 - t581)) * t592 - (t592 * t658 + t594 * t626) * qJD(5) - (-t790 * qJD(3) + t1085 * t617 - t903 * t479 - t911 * t562 + t775 * t866 - t829) * t1067 + ((t889 - t918) * t867 - t594 * t854 - t911 * t480 - t912 * t479 + t1080) * t44 + (-t789 * qJD(3) + t1085 * t618 - t903 * t480 + t912 * t562 - t676 + t913) * t49) * m(7) + t1077 * t1020 + t1078 * t1021 - (t1118 * t618 + t1119 * t617) * t857 / 0.2e1 + (t1112 * t618 + t1111 * t617 + (t1098 * t618 + t1099 * t617) * qJD(1)) * qJD(1) / 0.2e1 - t1117 * t858 / 0.2e1 + (t1115 + t1118) * t803 + (t1116 + t1119) * t867 / 0.2e1 + t1144 * t1013 + t1145 * t1014 - (-t1066 * t594 + ((-t374 * t611 + t376 * t613 + t371) * qJD(1) + ((t327 * t611 - t329 * t613 + t250) * t617 - (t326 * t611 - t328 * t613 + t248) * t618) * qJD(3)) * t592 + (t592 * t888 + t594 * t887) * qJD(1) + (t1027 * t594 + t656 * t592) * qJD(3)) * qJD(1) / 0.2e1 + (qJD(1) * t1044 + t1120 * t617 - t1121 * t618) * t1011 + (qJD(1) * t1042 + t1122 * t617 - t1123 * t618) * t1016 + (qJD(1) * t1043 + t1124 * t617 - t1125 * t618) * t1017 + ((-t862 * t939 - t869) * t618 - (t326 * t468 - t328 * t469) * t862 + (-t374 * t468 + t376 * t469) * qJD(1) + ((t468 * t327 - t469 * t329 + t618 * t938 + t1082) * qJD(3) + t1084) * t617) * t798 + ((-t327 * t470 - t329 * t471) * t863 + (t374 * t470 + t376 * t471) * qJD(1) + (-t863 * t938 + t869) * t617 + ((t470 * t326 + t471 * t328 + t617 * t939 + t1082) * qJD(3) + t1084) * t618) * t801 + (t1098 * t617 - t1099 * t618) * qJDD(1) / 0.2e1 + ((t1100 * t618 + t1101 * t617) * qJD(1) + t1075) * t800; t852 * (-g(3) * t594 + t1030) - m(5) * (t444 * t94 + t445 * t89 + t446 * t88) - m(6) * (t444 * t59 + t445 * t63 + t446 * t62) - m(7) * (-t1067 * t445 + t44 * t444 + t446 * t49) + 0.2e1 * ((t862 * t88 + t863 * t89 - t35) * t1024 + (t62 * t862 + t63 * t863 - t8) * t1023 + (-t1067 * t863 + t49 * t862 - t5) * t1022) * t594 + 0.2e1 * ((qJD(3) * t94 + t40 * t618 + t41 * t617 + t866 * t89 - t867 * t88) * t1024 + (qJD(3) * t59 + t10 * t617 + t618 * t9 - t62 * t867 + t63 * t866) * t1023 + (qJD(3) * t44 - t1067 * t866 - t49 * t867 + t6 * t617 + t618 * t7) * t1022) * t592; t1127 * t934 / 0.2e1 + t1128 * t933 / 0.2e1 + t1117 * t865 / 0.2e1 + (t1043 * t592 - t1053 * t594) * t1021 + (t1042 * t592 - t1054 * t594) * t1020 + (t1044 * t592 - t1052 * t594) * t1019 + (-t1045 * t618 + t1046 * t440 + t1047 * t439) * t1018 + ((qJD(3) * t1043 - t1114) * t594 + (-qJD(1) * t1078 + t1053 * qJD(3) + t1124 * t618 + t1125 * t617) * t592) * t1017 + ((qJD(3) * t1042 - t1113) * t594 + (-qJD(1) * t1077 + t1054 * qJD(3) + t1122 * t618 + t1123 * t617) * t592) * t1016 + (-t1045 * t617 + t1046 * t438 + t1047 * t437) * t1015 + (t1134 * t594 + (t1046 * t593 + t1047 * t591) * t592) * t1012 + ((qJD(3) * t1044 - t1138) * t594 + (-qJD(1) * t1079 + t1052 * qJD(3) + t1120 * t618 + t1121 * t617) * t592) * t1011 - (t979 + t980 + t988 - t989 + t977 + t978 + t986 - t987 + t1039) * t594 / 0.2e1 + (-g(1) * t915 - g(2) * t916 + g(3) * t895 - (-t1067 * t438 + t44 * t935 + t440 * t49) * qJD(6) - (-t1067 * t915 - t49 * t916) * t562 - (t44 * t915 + t49 * t895) * t480 - (-t1067 * t895 + t44 * t916) * t479 + (qJD(3) * t626 + t1067 * t973 - t49 * t970 - t6 * t918 + t7 * t920) * t594 + (t658 * qJD(3) + (qJD(1) * t657 + t1067 * t921 - t6 * t904 + t665) * t618 + (qJD(1) * t1073 + t49 * t921 + t7 * t904 - t1029) * t617) * t592) * m(7) + (-t62 * (-t284 * t562 - t414 * t480) - t63 * (t289 * t562 - t414 * t479) - t59 * (t284 * t479 + t289 * t480) + (qJD(3) * t630 - t10 * t230 - t63 * t113 + t62 * t115 - t228 * t9) * t594 + (t62 * (qJD(3) * t228 + t199 * t617) + t63 * (qJD(3) * t230 - t199 * t618) + t8 * t714 + t59 * (-t113 * t617 + t115 * t618 + t228 * t867 - t230 * t866) + (-t990 + t1001 + (t617 * t63 + t618 * t62) * qJD(1)) * t361) * t592 - g(1) * t289 - g(2) * t284 - g(3) * t414) * m(6) + t1118 * (t594 * t798 - t819 / 0.2e1) + t1119 * (t592 * t803 + t594 * t800); (-t186 * t49 - t188 * t1067 + t666 * t44 + (-t1067 * t479 + t480 * t49 - g(3) + t5) * t937 + (t1067 * t562 - t44 * t480 + t1155) * t439 + (-t44 * t479 + t49 * t562 + t1129) * t437) * m(7);];
tau  = t1;
