% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:04:06
% EndTime: 2019-03-09 18:04:29
% DurationCPUTime: 10.87s
% Computational Cost: add. (27230->547), mult. (71081->705), div. (0->0), fcn. (54826->10), ass. (0->295)
t249 = qJD(2) + qJD(3);
t255 = sin(qJ(3));
t256 = sin(qJ(2));
t334 = qJD(1) * t256;
t321 = t255 * t334;
t258 = cos(qJ(2));
t388 = cos(qJ(3));
t322 = t388 * t258;
t301 = qJD(1) * t322;
t336 = t249 * t301;
t175 = t249 * t321 - t336;
t282 = t255 * t258 + t256 * t388;
t276 = t282 * qJD(2);
t265 = qJD(3) * t282 + t276;
t176 = t265 * qJD(1);
t252 = sin(pkin(11));
t366 = cos(pkin(11));
t123 = -t175 * t252 + t366 * t176;
t124 = -t175 * t366 - t252 * t176;
t210 = -t301 + t321;
t212 = t282 * qJD(1);
t170 = -t366 * t210 - t252 * t212;
t387 = cos(qJ(5));
t164 = t170 * t387;
t254 = sin(qJ(5));
t278 = -t252 * t210 + t212 * t366;
t332 = qJD(5) * t254;
t60 = -qJD(5) * t164 + t254 * t123 - t387 * t124 + t278 * t332;
t310 = t387 * t123 + t254 * t124;
t399 = t170 * t254 + t278 * t387;
t401 = qJD(5) * t399;
t61 = t310 + t401;
t327 = qJD(1) * qJD(2);
t316 = t256 * t327;
t242 = pkin(2) * t316;
t153 = pkin(3) * t176 + t242;
t88 = pkin(4) * t123 + t153;
t19 = pkin(5) * t61 + pkin(10) * t60 + t88;
t253 = sin(qJ(6));
t257 = cos(qJ(6));
t317 = qJD(5) * t387;
t391 = -pkin(8) - pkin(7);
t235 = t391 * t256;
t227 = qJD(1) * t235;
t381 = qJD(2) * pkin(2);
t219 = t227 + t381;
t323 = qJD(2) * t391;
t302 = qJD(1) * t323;
t220 = t256 * t302;
t221 = t258 * t302;
t236 = t391 * t258;
t229 = qJD(1) * t236;
t318 = qJD(3) * t388;
t333 = qJD(3) * t255;
t304 = -t219 * t318 - t388 * t220 - t255 * t221 - t229 * t333;
t85 = -qJ(4) * t176 - qJD(4) * t210 - t304;
t217 = t388 * t229;
t178 = t255 * t219 - t217;
t309 = -t255 * t220 + t388 * t221;
t128 = -qJD(3) * t178 + t309;
t86 = t175 * qJ(4) - t212 * qJD(4) + t128;
t55 = -t252 * t85 + t366 * t86;
t38 = -pkin(9) * t124 + t55;
t56 = t252 * t86 + t366 * t85;
t39 = -pkin(9) * t123 + t56;
t165 = t278 * pkin(9);
t213 = t255 * t229;
t177 = t388 * t219 + t213;
t208 = t212 * qJ(4);
t148 = t177 - t208;
t139 = pkin(3) * t249 + t148;
t345 = t210 * qJ(4);
t149 = t178 - t345;
t142 = t252 * t149;
t93 = t366 * t139 - t142;
t74 = pkin(4) * t249 - t165 + t93;
t384 = t170 * pkin(9);
t144 = t366 * t149;
t94 = t252 * t139 + t144;
t77 = t94 + t384;
t273 = -t254 * t38 - t317 * t74 + t77 * t332 - t387 * t39;
t312 = qJD(5) + t249;
t48 = t254 * t74 + t387 * t77;
t46 = pkin(10) * t312 + t48;
t118 = -t254 * t278 + t164;
t246 = -t258 * pkin(2) - pkin(1);
t234 = qJD(1) * t246;
t182 = t210 * pkin(3) + qJD(4) + t234;
t132 = -pkin(4) * t170 + t182;
t64 = -pkin(5) * t118 - pkin(10) * t399 + t132;
t291 = t253 * t46 - t257 * t64;
t2 = -qJD(6) * t291 + t19 * t253 - t257 * t273;
t405 = qJD(6) - t118;
t380 = t405 * t291;
t412 = t2 + t380;
t108 = t253 * t312 + t257 * t399;
t410 = t405 * t253;
t411 = t108 * t410;
t290 = t257 * t312;
t106 = t253 * t399 - t290;
t331 = qJD(6) * t108;
t36 = -t253 * t60 + t331;
t34 = t36 * t257;
t17 = t106 * t410 - t34;
t357 = t118 ^ 2;
t359 = t399 ^ 2;
t42 = -t357 + t359;
t21 = t253 * t64 + t257 * t46;
t3 = -qJD(6) * t21 + t257 * t19 + t253 * t273;
t409 = t21 * t405 + t3;
t330 = qJD(6) * t253;
t35 = -qJD(6) * t290 + t257 * t60 + t330 * t399;
t329 = qJD(6) * t257;
t372 = -t106 * t329 - t253 * t36;
t407 = t118 * t257;
t408 = t106 * t407 - t257 * t35 + t372;
t32 = t35 * t253;
t16 = -t32 + (t329 - t407) * t108;
t363 = t108 * t399;
t57 = t253 * t61;
t371 = t329 * t405 + t57;
t13 = -t405 * t407 - t363 + t371;
t395 = t118 * t312;
t40 = -t60 - t395;
t355 = t118 * t253;
t406 = t399 * t118;
t73 = pkin(5) * t399 - pkin(10) * t118;
t269 = -t132 * t118 + t273;
t305 = t399 * t249;
t41 = t305 - t310;
t365 = t106 * t399;
t361 = t405 * t399;
t47 = -t254 * t77 + t387 * t74;
t45 = -pkin(5) * t312 - t47;
t315 = t254 * t39 - t387 * t38;
t9 = qJD(5) * t48 + t315;
t389 = t9 * t253 + t45 * t329;
t303 = t21 * t399 + t389;
t286 = -t132 * t399 - t315;
t319 = -t257 * t9 + t45 * t330;
t287 = t291 * t399 + t319;
t400 = t278 * t170;
t398 = -0.2e1 * t327;
t245 = pkin(2) * t388 + pkin(3);
t342 = t252 * t255;
t204 = -pkin(2) * t342 + t366 * t245;
t195 = pkin(4) + t204;
t313 = t366 * t255;
t206 = pkin(2) * t313 + t252 * t245;
t161 = t195 * t387 - t254 * t206;
t382 = pkin(2) * qJD(3);
t202 = (-t252 * t388 - t313) * t382;
t203 = (t366 * t388 - t342) * t382;
t112 = qJD(5) * t161 + t254 * t202 + t203 * t387;
t180 = -t227 * t255 + t217;
t150 = t180 + t345;
t181 = t388 * t227 + t213;
t151 = -t208 + t181;
t102 = t150 * t366 - t252 * t151;
t274 = t102 - t384;
t103 = t252 * t150 + t366 * t151;
t81 = -t165 + t103;
t52 = t254 * t274 + t387 * t81;
t370 = t112 - t52;
t162 = t254 * t195 + t387 * t206;
t369 = qJD(5) * t162 + (-t202 + t274) * t387 + (t203 - t81) * t254;
t243 = pkin(3) * t366 + pkin(4);
t385 = pkin(3) * t252;
t205 = t243 * t387 - t254 * t385;
t189 = t205 * qJD(5);
t95 = -t252 * t148 - t144;
t275 = t95 - t384;
t96 = t366 * t148 - t142;
t79 = -t165 + t96;
t50 = t254 * t275 + t387 * t79;
t368 = t189 - t50;
t207 = t254 * t243 + t387 * t385;
t367 = t207 * qJD(5) - t254 * t79 + t275 * t387;
t59 = t257 * t61;
t396 = t330 * t405 - t59;
t394 = t177 * t249;
t337 = -t203 + t103;
t184 = t255 * t235 - t388 * t236;
t183 = t388 * t235 + t255 * t236;
t166 = -qJ(4) * t282 + t183;
t281 = -t255 * t256 + t322;
t167 = qJ(4) * t281 + t184;
t110 = t366 * t166 - t167 * t252;
t179 = t252 * t281 + t282 * t366;
t89 = -pkin(9) * t179 + t110;
t111 = t252 * t166 + t366 * t167;
t271 = t252 * t282 - t281 * t366;
t90 = -pkin(9) * t271 + t111;
t62 = t254 * t90 - t387 * t89;
t390 = t62 * t9;
t386 = pkin(3) * t212;
t1 = t2 * t257;
t228 = t256 * t323;
t230 = t258 * t323;
t136 = t388 * t228 + t255 * t230 + t235 * t318 + t236 * t333;
t266 = t249 * t282;
t100 = -qJ(4) * t266 + qJD(4) * t281 + t136;
t264 = t249 * t281;
t308 = -t255 * t228 + t388 * t230;
t101 = -qJ(4) * t264 - qJD(4) * t282 - t235 * t333 + t236 * t318 + t308;
t70 = t366 * t100 + t252 * t101;
t378 = t118 * t45;
t268 = t387 * t271;
t125 = t179 * t254 + t268;
t377 = t125 * t61;
t262 = -t252 * t266 + t264 * t366;
t263 = t252 * t264 + t266 * t366;
t67 = qJD(5) * t268 + t179 * t332 + t254 * t263 - t262 * t387;
t375 = t253 * t67;
t374 = t257 * t67;
t364 = t108 * t106;
t362 = t108 * t253;
t270 = t254 * t271;
t126 = t179 * t387 - t270;
t351 = t126 * t253;
t350 = t126 * t257;
t349 = t278 * t249;
t348 = t170 * t249;
t347 = t278 ^ 2;
t344 = t212 * t210;
t343 = t234 * t212;
t260 = qJD(1) ^ 2;
t341 = t258 * t260;
t259 = qJD(2) ^ 2;
t340 = t259 * t256;
t339 = t259 * t258;
t338 = t202 - t102;
t335 = t256 ^ 2 - t258 ^ 2;
t326 = t21 * t355 - t291 * t407 + t1;
t248 = t256 * t381;
t247 = pkin(2) * t334;
t324 = t256 * t341;
t311 = pkin(1) * t398;
t300 = t258 * t316;
t299 = -t170 * t182 - t56;
t138 = pkin(4) * t278 + t386;
t297 = t118 * t47 + t399 * t48;
t155 = pkin(10) + t162;
t296 = -t155 * t61 - t378;
t197 = pkin(10) + t207;
t295 = -t197 * t61 - t378;
t294 = t93 * t170 + t278 * t94;
t293 = t21 * t253 - t257 * t291;
t292 = -t21 * t257 - t253 * t291;
t63 = t254 * t89 + t387 * t90;
t191 = -pkin(3) * t281 + t246;
t145 = pkin(4) * t271 + t191;
t71 = t125 * pkin(5) - t126 * pkin(10) + t145;
t30 = t253 * t71 + t257 * t63;
t29 = -t253 * t63 + t257 * t71;
t288 = t355 * t405 - t396;
t285 = -t182 * t278 + t55;
t284 = t126 * t329 - t375;
t283 = -t126 * t330 - t374;
t280 = t170 ^ 2;
t69 = -t252 * t100 + t101 * t366;
t277 = t234 * t210 + t304;
t66 = t138 + t73;
t272 = -qJD(6) * t293 - t253 * t3 + t1;
t172 = pkin(3) * t266 + t248;
t261 = -pkin(9) * t262 + t69;
t99 = pkin(4) * t263 + t172;
t196 = -pkin(5) - t205;
t185 = t247 + t386;
t154 = -pkin(5) - t161;
t152 = -t210 ^ 2 + t212 ^ 2;
t141 = -qJD(1) * t266 + t212 * t249;
t140 = t336 + (t210 - t321) * t249;
t137 = -qJD(3) * t184 + t308;
t133 = t138 + t247;
t92 = t124 - t348;
t91 = -t123 + t349;
t76 = -t280 + t347;
t68 = -qJD(5) * t270 + t179 * t317 + t254 * t262 + t263 * t387;
t65 = t247 + t66;
t54 = -pkin(9) * t263 + t70;
t28 = t253 * t73 + t257 * t47;
t27 = -t253 * t47 + t257 * t73;
t26 = t253 * t65 + t257 * t52;
t25 = -t253 * t52 + t257 * t65;
t24 = t253 * t66 + t257 * t50;
t23 = -t253 * t50 + t257 * t66;
t22 = t68 * pkin(5) + t67 * pkin(10) + t99;
t12 = t288 + t365;
t11 = qJD(5) * t63 + t254 * t54 - t261 * t387;
t10 = t254 * t261 + t317 * t89 - t332 * t90 + t387 * t54;
t6 = -t362 * t405 + t408;
t5 = -qJD(6) * t30 - t10 * t253 + t22 * t257;
t4 = qJD(6) * t29 + t10 * t257 + t22 * t253;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t300, t335 * t398, t339, -0.2e1 * t300, -t340, 0, -pkin(7) * t339 + t256 * t311, pkin(7) * t340 + t258 * t311, 0, 0, -t175 * t282 + t212 * t264, -t175 * t281 - t176 * t282 + t249 * (-t210 * t281 - t212 * t282) t264 * t249, -t176 * t281 + t210 * t266, -t266 * t249, 0, t137 * t249 + t246 * t176 + t210 * t248 + t234 * t265 - t242 * t281, -t136 * t249 - t246 * t175 + t212 * t248 + t234 * t264 + t247 * t276, -t128 * t282 - t136 * t210 - t137 * t212 + t183 * t175 - t184 * t176 - t178 * t266 + (-t304 - t394) * t281, t128 * t183 + t136 * t178 + t137 * t177 - t184 * t304 + 0.2e1 * t234 * t248, t124 * t179 + t262 * t278, -t179 * t123 - t124 * t271 + t170 * t262 - t263 * t278, t262 * t249, t123 * t271 - t170 * t263, -t263 * t249, 0, t191 * t123 + t153 * t271 - t170 * t172 + t182 * t263 + t69 * t249, t191 * t124 + t153 * t179 + t172 * t278 + t182 * t262 - t70 * t249, -t110 * t124 - t111 * t123 + t170 * t70 - t55 * t179 - t262 * t93 - t263 * t94 - t271 * t56 - t278 * t69, t110 * t55 + t111 * t56 + t153 * t191 + t172 * t182 + t69 * t93 + t70 * t94, -t126 * t60 - t399 * t67, -t118 * t67 + t125 * t60 - t126 * t61 - t399 * t68, -t67 * t312, -t118 * t68 + t377, -t68 * t312, 0, -t11 * t312 - t118 * t99 + t88 * t125 + t132 * t68 + t145 * t61, -t10 * t312 + t88 * t126 - t132 * t67 - t145 * t60 + t399 * t99, t10 * t118 + t11 * t399 + t125 * t273 + t126 * t9 + t47 * t67 - t48 * t68 - t60 * t62 - t61 * t63, t10 * t48 - t11 * t47 + t132 * t99 + t145 * t88 - t273 * t63 + t390, t108 * t283 - t35 * t350 (t106 * t257 + t362) * t67 + (t32 - t34 + (t106 * t253 - t108 * t257) * qJD(6)) * t126, t108 * t68 - t125 * t35 + t283 * t405 + t350 * t61, t106 * t284 + t351 * t36, -t106 * t68 - t125 * t36 - t284 * t405 - t351 * t61, t405 * t68 + t377, t106 * t11 + t125 * t3 + t126 * t389 + t29 * t61 - t291 * t68 + t36 * t62 - t375 * t45 + t405 * t5, t108 * t11 - t125 * t2 - t126 * t319 - t21 * t68 - t30 * t61 - t35 * t62 - t45 * t374 - t4 * t405, -t106 * t4 - t108 * t5 + t29 * t35 - t30 * t36 + t293 * t67 + (qJD(6) * t292 - t2 * t253 - t257 * t3) * t126, t11 * t45 + t2 * t30 + t21 * t4 + t29 * t3 - t291 * t5 + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, t335 * t260, 0, t324, 0, 0, t260 * pkin(1) * t256, pkin(1) * t341, 0, 0, t344, t152, t140, -t344, t141, 0, -t210 * t247 - t180 * t249 - t343 + (t217 + (-pkin(2) * t249 - t219) * t255) * qJD(3) + t309, t181 * t249 + (-t212 * t334 - t249 * t318) * pkin(2) + t277 (t178 + t180) * t212 + (-t177 + t181) * t210 + (t175 * t388 - t255 * t176 + (-t210 * t388 + t212 * t255) * qJD(3)) * pkin(2), -t177 * t180 - t178 * t181 + (-t234 * t334 + t388 * t128 - t304 * t255 + (-t177 * t255 + t178 * t388) * qJD(3)) * pkin(2), -t400, t76, t92, t400, t91, 0, t170 * t185 + t249 * t338 + t285, -t185 * t278 + t249 * t337 + t299, -t206 * t123 - t204 * t124 - t170 * t337 - t338 * t278 + t294, -t182 * t185 + t204 * t55 + t206 * t56 - t337 * t94 + t338 * t93, -t406, t42, t40, t406, t41, 0, t133 * t118 + (-t48 - t369) * qJD(5) + t286 - t369 * t249, -t133 * t399 - t312 * t370 + t269, t118 * t370 + t161 * t60 - t162 * t61 + t369 * t399 + t297, -t132 * t133 - t161 * t9 - t162 * t273 - t369 * t47 + t370 * t48, t16, t6, t13, t17, t12, -t361, t154 * t36 + t296 * t253 + t369 * t106 + (-t112 * t253 - t155 * t329 - t25) * t405 + t287, -t154 * t35 + t296 * t257 + t369 * t108 + (-t112 * t257 + t155 * t330 + t26) * t405 + t303, t106 * t26 + t108 * t25 + (-t106 * t112 - t155 * t36 + (t108 * t155 + t291) * qJD(6)) * t257 + (t108 * t112 - t155 * t35 - t3 + (t106 * t155 - t21) * qJD(6)) * t253 + t326, -t112 * t292 + t154 * t9 + t155 * t272 - t21 * t26 + t25 * t291 + t369 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, t152, t140, -t344, t141, 0, t178 * t249 + t128 - t343, t277 + t394, 0, 0, -t400, t76, t92, t400, t91, 0, t170 * t386 - t95 * t249 + t285, t249 * t96 - t278 * t386 + t299, -t96 * t170 + t95 * t278 + (-t252 * t123 - t124 * t366) * pkin(3) + t294, -t93 * t95 - t94 * t96 + (-t182 * t212 + t252 * t56 + t366 * t55) * pkin(3), -t406, t42, t40, t406, t41, 0, t138 * t118 + (-t48 - t367) * qJD(5) + t286 - t367 * t249, -t138 * t399 - t312 * t368 + t269, t118 * t368 + t205 * t60 - t207 * t61 + t367 * t399 + t297, -t132 * t138 - t205 * t9 - t207 * t273 - t367 * t47 + t368 * t48, t16, t6, t13, t17, t12, -t361, t196 * t36 + t295 * t253 + t367 * t106 + (-t189 * t253 - t197 * t329 - t23) * t405 + t287, -t196 * t35 + t295 * t257 + t367 * t108 + (-t189 * t257 + t197 * t330 + t24) * t405 + t303, t106 * t24 + t108 * t23 + (-t106 * t189 - t197 * t36 + (t108 * t197 + t291) * qJD(6)) * t257 + (t108 * t189 - t197 * t35 - t3 + (t106 * t197 - t21) * qJD(6)) * t253 + t326, -t189 * t292 + t196 * t9 + t197 * t272 - t21 * t24 + t23 * t291 + t367 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 + t349, t124 + t348, -t280 - t347, -t170 * t94 + t278 * t93 + t153, 0, 0, 0, 0, 0, 0, t305 + t310 + 0.2e1 * t401, -t60 + t395, -t357 - t359, -t118 * t48 + t399 * t47 + t88, 0, 0, 0, 0, 0, 0, t288 - t365, -t257 * t405 ^ 2 - t363 - t57 (t106 * t118 + t35) * t257 + t411 + t372, t412 * t253 + t409 * t257 - t399 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, t42, t40, t406, t41, 0, t249 * t48 + t286, t312 * t47 + t269, 0, 0, t16, t408 - t411, t13, t17, -t405 * t410 + t365 + t59, -t361, -pkin(5) * t36 - pkin(10) * t371 - t106 * t48 - t27 * t405 - t45 * t355 + t287, pkin(5) * t35 + pkin(10) * t396 - t108 * t48 + t28 * t405 - t407 * t45 + t303, t106 * t28 + t108 * t27 + t1 + (t380 + (-t36 + t331) * pkin(10)) * t257 + ((qJD(6) * t106 - t35) * pkin(10) - t409) * t253, -pkin(5) * t9 + pkin(10) * t272 - t21 * t28 + t27 * t291 - t45 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, -t106 ^ 2 + t108 ^ 2, t106 * t405 - t35, -t364, t108 * t405 - t36, t61, -t108 * t45 + t409, t106 * t45 - t412, 0, 0;];
tauc_reg  = t7;
