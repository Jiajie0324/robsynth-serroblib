% Calculate vector of inverse dynamics joint torques for
% S6RRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRPRR1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRR1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:02:12
% EndTime: 2019-03-09 18:04:05
% DurationCPUTime: 97.92s
% Computational Cost: add. (70384->1636), mult. (58595->2022), div. (0->0), fcn. (51176->12), ass. (0->827)
t1381 = Icges(4,3) + Icges(5,3);
t745 = qJ(2) + qJ(3);
t707 = pkin(11) + t745;
t682 = sin(t707);
t683 = cos(t707);
t713 = sin(t745);
t714 = cos(t745);
t1374 = Icges(4,5) * t714 + Icges(5,5) * t683 - Icges(4,6) * t713 - Icges(5,6) * t682;
t1380 = Icges(4,5) * t713 + Icges(5,5) * t682 + Icges(4,6) * t714 + Icges(5,6) * t683;
t751 = cos(qJ(1));
t1379 = t1381 * t751;
t748 = sin(qJ(1));
t1128 = t714 * t748;
t1131 = t713 * t748;
t1134 = t683 * t748;
t1137 = t682 * t748;
t1375 = -Icges(4,5) * t1128 - Icges(5,5) * t1134 + Icges(4,6) * t1131 + Icges(5,6) * t1137 + t1379;
t1378 = t1374 * t751 + t1381 * t748;
t1201 = Icges(5,4) * t682;
t558 = Icges(5,2) * t683 + t1201;
t667 = Icges(5,4) * t683;
t560 = Icges(5,1) * t682 + t667;
t1202 = Icges(4,4) * t713;
t591 = Icges(4,2) * t714 + t1202;
t680 = Icges(4,4) * t714;
t593 = Icges(4,1) * t713 + t680;
t1377 = t558 * t682 - t560 * t683 + t591 * t713 - t593 * t714;
t1185 = Icges(5,6) * t751;
t433 = Icges(5,4) * t1134 - Icges(5,2) * t1137 - t1185;
t1194 = Icges(5,5) * t751;
t630 = Icges(5,4) * t1137;
t435 = Icges(5,1) * t1134 - t1194 - t630;
t1186 = Icges(4,6) * t751;
t476 = Icges(4,4) * t1128 - Icges(4,2) * t1131 - t1186;
t1195 = Icges(4,5) * t751;
t654 = Icges(4,4) * t1131;
t478 = Icges(4,1) * t1128 - t1195 - t654;
t1373 = t433 * t682 - t435 * t683 + t476 * t713 - t478 * t714;
t561 = Icges(5,1) * t683 - t1201;
t436 = Icges(5,5) * t748 + t561 * t751;
t594 = Icges(4,1) * t714 - t1202;
t479 = Icges(4,5) * t748 + t594 * t751;
t1376 = -t479 * t1128 - t436 * t1134;
t1372 = t1380 * t751;
t1371 = t1380 * t748;
t898 = -Icges(5,2) * t682 + t667;
t434 = Icges(5,6) * t748 + t751 * t898;
t899 = -Icges(4,2) * t713 + t680;
t477 = Icges(4,6) * t748 + t751 * t899;
t1370 = t434 * t682 + t477 * t713;
t1335 = -t1377 * t748 - t1372;
t1334 = -t1377 * t751 + t1371;
t1369 = t1373 * t748;
t1368 = t1378 * t751 + t1376;
t1367 = t1378 * qJD(1);
t1127 = t714 * t751;
t1133 = t683 * t751;
t1304 = -t479 * t1127 - t436 * t1133 - t1378 * t748;
t1366 = -t478 * t1127 - t435 * t1133 + t1375 * t748;
t1365 = t1375 * t751;
t693 = qJ(5) + t707;
t671 = sin(t693);
t1143 = t671 * t748;
t749 = cos(qJ(6));
t1120 = t749 * t751;
t746 = sin(qJ(6));
t1125 = t746 * t748;
t672 = cos(t693);
t516 = t1125 * t672 + t1120;
t1117 = t751 * t746;
t1122 = t748 * t749;
t517 = t1122 * t672 - t1117;
t914 = t517 * rSges(7,1) - t516 * rSges(7,2);
t279 = rSges(7,3) * t1143 + t914;
t1217 = rSges(7,2) * t746;
t1224 = rSges(7,1) * t749;
t913 = -t1217 + t1224;
t374 = -rSges(7,3) * t672 + t671 * t913;
t1035 = qJD(6) * t748;
t742 = qJD(2) + qJD(3);
t702 = qJD(5) + t742;
t580 = t702 * t751;
t428 = -t1035 * t671 + t580;
t1232 = pkin(5) * t671;
t549 = -pkin(10) * t672 + t1232;
t1037 = qJD(6) * t672;
t620 = qJD(1) - t1037;
t709 = qJD(4) * t748;
t1039 = qJD(2) * t751;
t747 = sin(qJ(2));
t988 = t747 * t1039;
t939 = pkin(2) * t988;
t858 = t709 - t939;
t1364 = t279 * t620 + t374 * t428 + t549 * t580 - t858;
t501 = Icges(7,4) * t517;
t272 = -Icges(7,2) * t516 + Icges(7,6) * t1143 + t501;
t500 = Icges(7,4) * t516;
t276 = -Icges(7,1) * t517 - Icges(7,5) * t1143 + t500;
t1352 = t272 * t746 + t276 * t749;
t269 = Icges(7,5) * t517 - Icges(7,6) * t516 + Icges(7,3) * t1143;
t127 = -t1352 * t671 - t269 * t672;
t1339 = t1365 - t1369;
t1338 = -t1131 * t477 - t1137 * t434 - t1368;
t1130 = t713 * t751;
t1136 = t682 * t751;
t1337 = -t1130 * t476 - t1136 * t433 - t1366;
t1336 = -t1130 * t477 - t1136 * t434 - t1304;
t1315 = -t591 + t594;
t943 = t1315 * t742;
t1314 = t593 + t899;
t944 = t1314 * t742;
t1317 = -t558 + t561;
t948 = t1317 * t742;
t1316 = t560 + t898;
t949 = t1316 * t742;
t1363 = qJD(1) * t1380 - t682 * t949 + t683 * t948 - t713 * t944 + t714 * t943;
t1321 = -t593 * t751 - t477;
t963 = (-t594 * t748 + t1195) * qJD(1) + t1321 * t742;
t1320 = -t591 * t751 + t479;
t965 = (-t748 * t899 + t1186) * qJD(1) + t1320 * t742;
t1324 = -t560 * t751 - t434;
t967 = (-t561 * t748 + t1194) * qJD(1) + t1324 * t742;
t1323 = -t558 * t751 + t436;
t969 = (-t748 * t898 + t1185) * qJD(1) + t1323 * t742;
t1362 = -t682 * t969 + t683 * t967 - t713 * t965 + t714 * t963 + t1367;
t1322 = -t593 * t748 - t476;
t962 = qJD(1) * t479 + t1322 * t742;
t1126 = t742 * t748;
t964 = qJD(1) * t477 - t1126 * t591 + t478 * t742;
t1325 = -t560 * t748 - t433;
t966 = qJD(1) * t436 + t1325 * t742;
t968 = qJD(1) * t434 - t1126 * t558 + t435 * t742;
t1361 = qJD(1) * t1375 + t682 * t968 - t683 * t966 + t713 * t964 - t714 * t962;
t1360 = qJD(1) * t1377 + t1374 * t742;
t1359 = qJD(1) * t1373 - t1371 * t742 + t1367;
t1358 = -t1372 * t742 + (-t1374 * t748 - t436 * t683 - t479 * t714 + t1370 + t1379) * qJD(1);
t1357 = t1334 * qJD(1);
t1038 = qJD(6) * t671;
t1041 = qJD(1) * t748;
t662 = t672 * pkin(5);
t1292 = t671 * pkin(10) + t662;
t1329 = t374 + t549;
t1142 = t671 * t749;
t1020 = rSges(7,1) * t1142;
t1019 = t671 * t1217;
t1139 = t672 * t748;
t1069 = rSges(7,3) * t1139 + t748 * t1019;
t327 = -t1020 * t748 + t1069;
t655 = t671 * rSges(7,3);
t375 = t672 * t913 + t655;
t986 = t672 * t1035;
t1356 = t1038 * t279 + t1329 * t1041 + t1292 * t580 + t327 * t620 - t374 * t986 + t428 * t375;
t1354 = t1335 * qJD(1);
t635 = t742 * t751;
t670 = pkin(4) * t683;
t553 = t635 * t670;
t692 = pkin(3) * t714;
t568 = t635 * t692;
t992 = t713 * t1041;
t636 = pkin(3) * t992;
t993 = t682 * t1041;
t1353 = pkin(4) * t993 + t553 + t568 + t636;
t117 = t1143 * t269 - t272 * t516 - t276 * t517;
t1141 = t671 * t751;
t518 = -t1117 * t672 + t1122;
t519 = t1120 * t672 + t1125;
t271 = Icges(7,5) * t519 + Icges(7,6) * t518 + Icges(7,3) * t1141;
t1199 = Icges(7,4) * t519;
t274 = Icges(7,2) * t518 + Icges(7,6) * t1141 + t1199;
t502 = Icges(7,4) * t518;
t277 = Icges(7,1) * t519 + Icges(7,5) * t1141 + t502;
t118 = t271 * t1143 - t516 * t274 + t517 * t277;
t894 = Icges(7,5) * t749 - Icges(7,6) * t746;
t368 = -Icges(7,3) * t672 + t671 * t894;
t1197 = Icges(7,4) * t749;
t896 = -Icges(7,2) * t746 + t1197;
t370 = -Icges(7,6) * t672 + t671 * t896;
t1198 = Icges(7,4) * t746;
t902 = Icges(7,1) * t749 - t1198;
t372 = -Icges(7,5) * t672 + t671 * t902;
t150 = t1143 * t368 - t370 * t516 + t372 * t517;
t1034 = qJD(6) * t751;
t712 = qJD(2) * t748;
t634 = qJD(3) * t748 + t712;
t579 = qJD(5) * t748 + t634;
t427 = t1034 * t671 + t579;
t40 = -t117 * t428 + t118 * t427 + t150 * t620;
t119 = t269 * t1141 + t518 * t272 - t276 * t519;
t120 = t271 * t1141 + t518 * t274 + t519 * t277;
t151 = t1141 * t368 + t370 * t518 + t372 * t519;
t41 = -t119 * t428 + t120 * t427 + t151 * t620;
t1351 = -t1359 * t748 + t1361 * t751;
t1350 = t1358 * t748 + t1362 * t751;
t1349 = t1359 * t751 + t1361 * t748;
t1348 = -t1358 * t751 + t1362 * t748;
t1347 = rSges(3,2) * t747;
t1346 = t1338 * t634 - t1339 * t635 + t1354;
t1345 = t1336 * t634 - t1337 * t635 + t1357;
t1343 = t1360 * t748 + t1363 * t751;
t1342 = -t1360 * t751 + t1363 * t748;
t1341 = -t682 * t966 - t683 * t968 - t713 * t962 - t714 * t964;
t1340 = t682 * t967 + t683 * t969 + t713 * t963 + t714 * t965;
t1333 = t433 * t683 + t435 * t682 + t476 * t714 + t478 * t713;
t1332 = t434 * t683 + t436 * t682 + t477 * t714 + t479 * t713;
t466 = t1292 * t748;
t1331 = t279 + t466;
t281 = t519 * rSges(7,1) + t518 * rSges(7,2) + rSges(7,3) * t1141;
t1138 = t672 * t751;
t468 = pkin(5) * t1138 + pkin(10) * t1141;
t1330 = t281 + t468;
t1184 = Icges(6,6) * t751;
t397 = Icges(6,4) * t1139 - Icges(6,2) * t1143 - t1184;
t648 = Icges(6,4) * t672;
t532 = Icges(6,1) * t671 + t648;
t1328 = -t532 * t748 - t397;
t897 = -Icges(6,2) * t671 + t648;
t398 = Icges(6,6) * t748 + t751 * t897;
t1327 = -t532 * t751 - t398;
t1200 = Icges(6,4) * t671;
t533 = Icges(6,1) * t672 - t1200;
t400 = Icges(6,5) * t748 + t533 * t751;
t530 = Icges(6,2) * t672 + t1200;
t1326 = -t530 * t751 + t400;
t1319 = -t530 + t533;
t1318 = t532 + t897;
t1263 = qJD(1) * t1316 + t1323 * t634 - (-Icges(5,2) * t1134 + t435 - t630) * t635;
t1264 = qJD(1) * t1314 + t1320 * t634 - (-Icges(4,2) * t1128 + t478 - t654) * t635;
t781 = qJD(1) * t1315 + t1321 * t634 - t1322 * t635;
t782 = qJD(1) * t1317 + t1324 * t634 - t1325 * t635;
t1313 = -t1263 * t682 - t1264 * t713 + t782 * t683 + t781 * t714;
t1312 = qJD(1) * t1374 + t1371 * t635 - t1372 * t634;
t1311 = t1353 + t1356;
t1310 = t1370 + t1375;
t1040 = qJD(1) * t751;
t1233 = pkin(4) * t682;
t1234 = pkin(3) * t713;
t566 = t634 * t1234;
t1216 = pkin(2) * qJD(2);
t1017 = t747 * t1216;
t665 = t748 * t1017;
t710 = qJD(4) * t751;
t998 = -t566 - t665 - t710;
t926 = -t634 * t1233 + t998;
t737 = t748 * pkin(7);
t650 = t751 * pkin(1) + t737;
t750 = cos(qJ(2));
t738 = t750 * pkin(2);
t695 = t738 + pkin(1);
t658 = t751 * t695;
t752 = -pkin(8) - pkin(7);
t941 = -t748 * t752 + t658;
t463 = t941 - t650;
t1084 = t463 + t650;
t741 = -qJ(4) + t752;
t1050 = -t741 + t752;
t605 = t692 + t695;
t572 = t751 * t605;
t357 = t1050 * t748 + t572 - t658;
t1004 = t357 + t1084;
t715 = -pkin(9) + t741;
t1051 = -t715 + t741;
t521 = t670 + t605;
t487 = t751 * t521;
t286 = t1051 * t748 + t487 - t572;
t932 = t286 + t1004;
t78 = t281 * t620 - t374 * t427 - t549 * t579 + (t468 + t932) * qJD(1) + t926;
t1175 = qJD(1) * t78;
t1132 = t702 * t748;
t823 = t1040 * t671 + t1132 * t672;
t1015 = t671 * t1132;
t860 = t749 * t620;
t937 = qJD(1) * t672 - qJD(6);
t238 = t748 * t860 + (-t751 * t937 + t1015) * t746;
t859 = t620 * t746;
t239 = t937 * t1120 + (-t1142 * t702 + t859) * t748;
t915 = rSges(7,1) * t239 + rSges(7,2) * t238;
t148 = rSges(7,3) * t823 + t915;
t1025 = qJDD(6) * t671;
t1036 = qJD(6) * t702;
t1024 = -qJDD(2) - qJDD(3);
t938 = -qJDD(5) + t1024;
t1026 = qJD(1) * qJD(5);
t1028 = qJD(1) * qJD(3);
t1029 = qJD(1) * qJD(2);
t690 = t748 * t1029;
t1052 = t748 * t1028 + t690;
t995 = t748 * t1026 + t1052;
t198 = (t1036 * t672 + t1025) * t748 + (qJD(1) * t1038 + t938) * t751 + t995;
t1140 = t672 * t702;
t912 = -rSges(7,1) * t746 - rSges(7,2) * t749;
t211 = t913 * t1140 + (rSges(7,3) * t702 + qJD(6) * t912) * t671;
t251 = t823 * pkin(10) + (t1040 * t672 - t1015) * pkin(5);
t367 = t751 * t938 + t995;
t414 = t1292 * t702;
t437 = -qJDD(6) * t672 + t1036 * t671 + qJDD(1);
t489 = t1024 * t751 + t1052;
t1027 = qJD(1) * qJD(4);
t1118 = t750 * qJD(2) ^ 2;
t1235 = pkin(2) * t747;
t612 = -qJDD(2) * t751 + t690;
t862 = -pkin(2) * t1118 * t751 + t612 * t1235;
t800 = qJDD(4) * t748 + t751 * t1027 + t489 * t1234 - t742 * t568 + t862;
t790 = t489 * t1233 - t742 * t553 + t800;
t700 = t751 * t752;
t1057 = t748 * t695 + t700;
t739 = t751 * pkin(7);
t649 = pkin(1) * t748 - t739;
t462 = t649 - t1057;
t1085 = t462 - t649;
t1070 = t748 * t605 + t751 * t741;
t356 = t1057 - t1070;
t1005 = t356 + t1085;
t1081 = -t748 * t521 - t751 * t715;
t285 = t1070 + t1081;
t933 = t285 + t1005;
t907 = -t466 + t933;
t1055 = t752 * t1041 + t665;
t1226 = pkin(1) - t695;
t353 = (-t1226 * t751 - t737) * qJD(1) - t1055;
t606 = t650 * qJD(1);
t1106 = -t353 - t606;
t1064 = t605 - t695;
t569 = -t1234 * t742 - t1017;
t664 = t741 * t1041;
t920 = t569 * t748 - t664 - t710;
t200 = t1040 * t1064 + t1055 + t920;
t1011 = -t200 + t1106;
t1078 = t521 - t605;
t583 = -t1233 - t1234;
t424 = t583 * t742 - t1017;
t647 = t715 * t1041;
t172 = -t647 + t664 + (t424 - t569) * t748 + t1078 * t1040;
t936 = -t172 + t1011;
t19 = -t428 * t211 + t198 * t374 + t907 * qJDD(1) + (-t251 + t936) * qJD(1) + t790 + t367 * t549 - t437 * t279 - t580 * t414 - t620 * t148;
t1308 = (t1175 + t19) * t751;
t729 = t748 * rSges(6,3);
t412 = rSges(6,1) * t1138 - rSges(6,2) * t1141 + t729;
t543 = rSges(6,1) * t671 + rSges(6,2) * t672;
t109 = -t543 * t579 + (t412 + t932) * qJD(1) + t926;
t657 = t672 * rSges(6,1);
t1289 = -rSges(6,2) * t671 + t657;
t459 = t543 * t748;
t230 = -t702 * t459 + (t1289 * t751 + t729) * qJD(1);
t405 = t1289 * t702;
t411 = rSges(6,1) * t1139 - rSges(6,2) * t1143 - t751 * rSges(6,3);
t908 = -t411 + t933;
t33 = t367 * t543 - t405 * t580 + t908 * qJDD(1) + (-t230 + t936) * qJD(1) + t790;
t1307 = (qJD(1) * t109 + t33) * t751;
t364 = t580 * t1289;
t1305 = t543 * t1041 + t1353 + t364;
t1303 = t40 * t748 + t41 * t751;
t681 = t714 * rSges(4,1);
t1287 = -rSges(4,2) * t713 + t681;
t1092 = t463 * t1039 - t462 * t712;
t482 = rSges(4,1) * t1128 - rSges(4,2) * t1131 - t751 * rSges(4,3);
t731 = t748 * rSges(4,3);
t483 = rSges(4,1) * t1127 - rSges(4,2) * t1130 + t731;
t161 = t482 * t634 + t483 * t635 + t1092;
t1000 = -t482 + t1085;
t1221 = rSges(4,2) * t714;
t595 = rSges(4,1) * t713 + t1221;
t829 = -t595 * t635 - t939;
t177 = qJD(1) * t1000 + t829;
t178 = -t595 * t634 - t665 + (t483 + t1084) * qJD(1);
t547 = t595 * t748;
t548 = t595 * t751;
t1302 = -t177 * (qJD(1) * t547 - t1287 * t635) - t161 * (-t634 * t547 - t548 * t635) - t178 * (-qJD(1) * t548 - t1287 * t634);
t1301 = -qJD(1) * t285 - t583 * t635;
t1241 = t634 / 0.2e1;
t1240 = -t635 / 0.2e1;
t1013 = t672 * t580;
t994 = t671 * t1041;
t1065 = rSges(6,2) * t994 + rSges(6,3) * t1040;
t1014 = t671 * t580;
t824 = -t1041 * t672 - t1014;
t229 = rSges(6,1) * t824 - rSges(6,2) * t1013 + t1065;
t611 = qJDD(2) * t748 + t751 * t1029;
t488 = qJDD(3) * t748 + t751 * t1028 + t611;
t366 = qJDD(5) * t748 + t751 * t1026 + t488;
t1135 = t683 * t742;
t388 = t751 * t424;
t534 = t751 * t569;
t171 = t388 - t534 + (t1051 * t751 - t1078 * t748) * qJD(1);
t1129 = t714 * t742;
t1074 = t534 + t709;
t199 = t939 + (t1050 * t751 - t1064 * t748) * qJD(1) + t1074;
t701 = pkin(7) * t1040;
t1067 = qJD(1) * (-pkin(1) * t1041 + t701) + qJDD(1) * t650;
t352 = -t939 - t701 + (t1226 * t748 - t700) * qJD(1);
t788 = qJD(1) * t352 + qJDD(1) * t463 + (-t1118 * t748 - t611 * t747) * pkin(2) + t1067;
t761 = qJD(1) * t199 + qJDD(1) * t357 + t748 * t1027 + (-t1129 * t634 - t488 * t713) * pkin(3) - qJDD(4) * t751 + t788;
t756 = qJD(1) * t171 + qJDD(1) * t286 + (-t1135 * t634 - t488 * t682) * pkin(4) + t761;
t34 = qJD(1) * t229 + qJDD(1) * t412 - t366 * t543 - t579 * t405 + t756;
t1299 = t34 * t748;
t1219 = rSges(5,2) * t683;
t563 = rSges(5,1) * t682 + t1219;
t503 = t563 * t748;
t730 = t748 * rSges(5,3);
t443 = rSges(5,1) * t1133 - rSges(5,2) * t1136 + t730;
t139 = -t563 * t634 + (t443 + t1004) * qJD(1) + t998;
t668 = t683 * rSges(5,1);
t1288 = -rSges(5,2) * t682 + t668;
t264 = -t742 * t503 + (t1288 * t751 + t730) * qJD(1);
t480 = t1288 * t742;
t442 = rSges(5,1) * t1134 - rSges(5,2) * t1137 - t751 * rSges(5,3);
t929 = -t442 + t1005;
t58 = -t480 * t635 + t489 * t563 + t929 * qJDD(1) + (-t264 + t1011) * qJD(1) + t800;
t1298 = qJD(1) * t139 + t58;
t546 = t583 - t1235;
t497 = t751 * t546;
t627 = -t1234 - t1235;
t587 = t751 * t627;
t359 = -t587 + t497;
t1147 = t634 * t714;
t1123 = t747 * t751;
t499 = pkin(2) * t1123 + t587;
t925 = -pkin(3) * t1147 + qJD(1) * t499;
t1295 = qJD(1) * t359 + t925;
t555 = t751 * t583;
t420 = pkin(3) * t1130 + t555;
t820 = (-t1040 * t713 - t1147) * pkin(3);
t1294 = qJD(1) * t420 + t820;
t626 = qJD(1) * t649;
t1293 = qJD(1) * t462 - t626;
t554 = t748 * t583;
t419 = pkin(3) * t1131 + t554;
t1291 = -t634 * t419 - t420 * t635;
t728 = Icges(3,4) * t750;
t900 = -Icges(3,2) * t747 + t728;
t641 = Icges(3,1) * t747 + t728;
t1269 = t748 * t937 + t1014;
t236 = t1269 * t746 + t751 * t860;
t237 = -t1269 * t749 + t751 * t859;
t1009 = t237 * rSges(7,1) + t236 * rSges(7,2) + rSges(7,3) * t1013;
t147 = -rSges(7,3) * t994 + t1009;
t822 = -t994 + t1013;
t197 = qJD(6) * t822 + t1025 * t751 + t366;
t565 = pkin(10) * t1013;
t250 = pkin(5) * t824 - pkin(10) * t994 + t565;
t18 = qJD(1) * t250 + qJDD(1) * t468 + t620 * t147 - t197 * t374 - t427 * t211 + t437 * t281 - t366 * t549 - t579 * t414 + t756;
t1285 = -t18 * t751 + t19 * t748;
t1284 = g(1) * t751 + g(2) * t748;
t1283 = qJD(1) * t356 + t1293;
t1231 = g(1) * t748;
t1282 = -g(2) * t751 + t1231;
t528 = Icges(6,5) * t671 + Icges(6,6) * t672;
t1153 = t528 * t751;
t1163 = t398 * t671;
t1179 = Icges(6,3) * t751;
t529 = Icges(6,5) * t672 - Icges(6,6) * t671;
t1281 = -t702 * t1153 + (-t400 * t672 - t529 * t748 + t1163 + t1179) * qJD(1);
t396 = Icges(6,3) * t748 + t529 * t751;
t1046 = qJD(1) * t396;
t1154 = t528 * t748;
t1193 = Icges(6,5) * t751;
t610 = Icges(6,4) * t1143;
t399 = Icges(6,1) * t1139 - t1193 - t610;
t876 = t397 * t671 - t399 * t672;
t1280 = qJD(1) * t876 - t1154 * t702 + t1046;
t1182 = Icges(3,3) * t751;
t638 = Icges(3,5) * t750 - Icges(3,6) * t747;
t637 = Icges(3,5) * t747 + Icges(3,6) * t750;
t831 = qJD(2) * t637;
t525 = Icges(3,6) * t748 + t751 * t900;
t1155 = t525 * t747;
t1203 = Icges(3,4) * t747;
t642 = Icges(3,1) * t750 - t1203;
t527 = Icges(3,5) * t748 + t642 * t751;
t869 = -t527 * t750 + t1155;
t1275 = -t751 * t831 + (-t638 * t748 + t1182 + t869) * qJD(1);
t523 = Icges(3,3) * t748 + t638 * t751;
t1043 = qJD(1) * t523;
t1121 = t748 * t750;
t1124 = t747 * t748;
t1187 = Icges(3,6) * t751;
t524 = Icges(3,4) * t1121 - Icges(3,2) * t1124 - t1187;
t1156 = t524 * t747;
t1196 = Icges(3,5) * t751;
t676 = Icges(3,4) * t1124;
t526 = Icges(3,1) * t1121 - t1196 - t676;
t870 = -t526 * t750 + t1156;
t1274 = qJD(1) * t870 - t748 * t831 + t1043;
t868 = t530 * t671 - t532 * t672;
t1273 = qJD(1) * t868 + t529 * t702;
t639 = Icges(3,2) * t750 + t1203;
t863 = t639 * t747 - t641 * t750;
t1270 = t863 * qJD(1) + t638 * qJD(2);
t522 = Icges(3,5) * t1121 - Icges(3,6) * t1124 - t1182;
t207 = -t522 * t751 - t748 * t870;
t1268 = (-t639 * t751 + t527) * t748 - (-Icges(3,2) * t1121 + t526 - t676) * t751;
t1267 = t18 * t748 + t1308;
t838 = t894 * t672;
t877 = -t370 * t746 + t372 * t749;
t881 = -t274 * t746 + t277 * t749;
t1266 = t427 * (-t368 * t751 - t881) - t428 * (-t368 * t748 + t1352) + t620 * (Icges(7,3) * t671 + t838 - t877);
t895 = -Icges(7,2) * t749 - t1198;
t1265 = (t895 * t671 + t372) * t620 + (-Icges(7,2) * t519 + t277 + t502) * t427 - (-Icges(7,2) * t517 - t276 - t500) * t428;
t1262 = qJD(1) * t1318 + t1326 * t579 - (-Icges(6,2) * t1139 + t399 - t610) * t580;
t1261 = t197 / 0.2e1;
t1260 = t198 / 0.2e1;
t1259 = t366 / 0.2e1;
t1258 = t367 / 0.2e1;
t1257 = t748 * t1240 + t1241 * t751;
t1256 = -t427 / 0.2e1;
t1255 = t427 / 0.2e1;
t1254 = -t428 / 0.2e1;
t1253 = t428 / 0.2e1;
t1252 = t488 / 0.2e1;
t1251 = t489 / 0.2e1;
t1250 = -t579 / 0.2e1;
t1249 = t579 / 0.2e1;
t1248 = -t580 / 0.2e1;
t1247 = t580 / 0.2e1;
t1246 = t611 / 0.2e1;
t1245 = t612 / 0.2e1;
t1244 = -t620 / 0.2e1;
t1243 = t620 / 0.2e1;
t1242 = -t634 / 0.2e1;
t1239 = t635 / 0.2e1;
t1238 = t748 / 0.2e1;
t1237 = -t751 / 0.2e1;
t1236 = -rSges(7,3) - pkin(10);
t1228 = -qJD(1) / 0.2e1;
t1227 = qJD(1) / 0.2e1;
t1225 = rSges(3,1) * t750;
t1223 = rSges(3,2) * t750;
t142 = Icges(7,5) * t239 + Icges(7,6) * t238 + Icges(7,3) * t823;
t144 = Icges(7,4) * t239 + Icges(7,2) * t238 + Icges(7,6) * t823;
t146 = Icges(7,1) * t239 + Icges(7,4) * t238 + Icges(7,5) * t823;
t31 = (-t1352 * t702 - t142) * t672 + (-t144 * t746 + t146 * t749 + t269 * t702 + (-t272 * t749 + t276 * t746) * qJD(6)) * t671;
t1213 = t31 * t428;
t141 = Icges(7,5) * t237 + Icges(7,6) * t236 + Icges(7,3) * t822;
t143 = Icges(7,4) * t237 + Icges(7,2) * t236 + Icges(7,6) * t822;
t145 = Icges(7,1) * t237 + Icges(7,4) * t236 + Icges(7,5) * t822;
t32 = (t702 * t881 - t141) * t672 + (-t143 * t746 + t145 * t749 + t271 * t702 + (-t274 * t749 - t277 * t746) * qJD(6)) * t671;
t1212 = t32 * t427;
t732 = t748 * rSges(3,3);
t1209 = qJDD(1) / 0.2e1;
t157 = -t368 * t672 + t671 * t877;
t893 = -Icges(7,5) * t746 - Icges(7,6) * t749;
t202 = t702 * t838 + (Icges(7,3) * t702 + qJD(6) * t893) * t671;
t839 = t896 * t672;
t203 = t702 * t839 + (Icges(7,6) * t702 + qJD(6) * t895) * t671;
t840 = t902 * t672;
t901 = -Icges(7,1) * t746 - t1197;
t204 = t702 * t840 + (Icges(7,5) * t702 + qJD(6) * t901) * t671;
t55 = (t702 * t877 - t202) * t672 + (-t203 * t746 + t204 * t749 + t368 * t702 + (-t370 * t749 - t372 * t746) * qJD(6)) * t671;
t1208 = t157 * t437 + t55 * t620;
t1001 = -t634 * t356 + t1092;
t1111 = t286 + t357;
t809 = t1111 * t635 - t634 * t285 + t1001;
t50 = t279 * t427 + t281 * t428 + t466 * t579 + t468 * t580 + t809;
t1177 = qJD(1) * t50;
t76 = t411 * t579 + t412 * t580 + t809;
t1176 = qJD(1) * t76;
t1150 = t580 * t543;
t552 = t635 * t1233;
t567 = t635 * t1234;
t843 = -t567 + t858;
t108 = qJD(1) * t908 - t1150 - t552 + t843;
t1174 = t108 * t748;
t1171 = t127 * t198;
t128 = -t271 * t672 + t671 * t881;
t1170 = t128 * t197;
t1168 = t177 * t748;
t1053 = rSges(3,2) * t1124 + t751 * rSges(3,3);
t535 = rSges(3,1) * t1121 - t1053;
t1073 = -t535 - t649;
t643 = rSges(3,1) * t747 + t1223;
t989 = t643 * t1039;
t303 = qJD(1) * t1073 - t989;
t1167 = t303 * t748;
t1166 = t303 * t751;
t1119 = t750 * t751;
t536 = rSges(3,1) * t1119 - rSges(3,2) * t1123 + t732;
t418 = t536 + t650;
t304 = qJD(1) * t418 - t643 * t712;
t582 = t643 * t751;
t1165 = t304 * t582;
t395 = Icges(6,5) * t1139 - Icges(6,6) * t1143 - t1179;
t1164 = t395 * t751;
t1146 = t637 * t748;
t1145 = t637 * t751;
t1144 = t671 * t702;
t1116 = -t211 - t414;
t1110 = -t748 * t356 + t751 * t357;
t1109 = -t399 * t1138 - t748 * t395;
t1108 = t400 * t1138 + t748 * t396;
t1105 = t357 + t443;
t496 = t748 * t546;
t586 = t748 * t627;
t358 = -t586 + t496;
t498 = pkin(2) * t1124 + t586;
t1104 = -t358 - t498;
t1099 = t748 * t411 + t751 * t412;
t1096 = t388 + t709;
t1091 = -t748 * t462 + t751 * t463;
t1088 = t748 * t482 + t751 * t483;
t1087 = -t526 * t1119 - t748 * t522;
t1086 = t527 * t1119 + t748 * t523;
t1079 = t563 * t1041 + t636;
t1068 = rSges(7,3) * t1138 + t751 * t1019;
t1063 = rSges(5,2) * t993 + rSges(5,3) * t1040;
t1061 = rSges(4,2) * t992 + rSges(4,3) * t1040;
t1060 = -t639 + t642;
t1059 = t641 + t900;
t1058 = t647 + t710;
t1056 = rSges(3,3) * t1040 + t1041 * t1347;
t1054 = t670 + t692;
t116 = t1105 * t635 + t442 * t634 + t1001;
t1048 = qJD(1) * t116;
t1042 = qJD(1) * t638;
t185 = -t748 * t868 - t1153;
t1033 = t185 * qJD(1);
t307 = -t748 * t863 - t1145;
t1030 = t307 * qJD(1);
t1023 = pkin(3) * t1129;
t1022 = t634 * t670;
t1021 = pkin(4) * t1135;
t1016 = t750 * t1216;
t1012 = -t356 * t1040 + t751 * t199 + t748 * t200;
t1010 = t411 * t1040 + t751 * t229 + t748 * t230;
t294 = -t635 * t1221 + (-t1041 * t714 - t635 * t713) * rSges(4,1) + t1061;
t295 = -t742 * t547 + (t1287 * t751 + t731) * qJD(1);
t1008 = t482 * t1040 + t751 * t294 + t748 * t295;
t1007 = -t412 - t1111;
t1006 = -t462 * t1040 + t751 * t352 + t748 * t353;
t621 = pkin(10) * t1139;
t997 = t621 + t1069;
t623 = pkin(10) * t1138;
t996 = t623 + t1068;
t990 = t747 * t1040;
t985 = t672 * t1034;
t983 = -pkin(1) - t1225;
t981 = t1041 / 0.2e1;
t980 = t1040 / 0.2e1;
t979 = -t712 / 0.2e1;
t978 = t712 / 0.2e1;
t977 = -t1039 / 0.2e1;
t976 = t1039 / 0.2e1;
t827 = -t595 - t1235;
t826 = -t563 - t1234;
t974 = (-t748 ^ 2 - t751 ^ 2) * t747;
t973 = (-t748 * t897 + t1184) * qJD(1) + t1326 * t702;
t972 = qJD(1) * t398 - t1132 * t530 + t399 * t702;
t971 = (-t533 * t748 + t1193) * qJD(1) + t1327 * t702;
t970 = qJD(1) * t400 + t1328 * t702;
t344 = t400 * t1139;
t961 = t396 * t751 - t344;
t460 = t543 * t751;
t960 = -t579 * t459 - t460 * t580;
t958 = t634 * t498 + t499 * t635;
t504 = t563 * t751;
t957 = -t634 * t503 - t504 * t635;
t955 = -t395 + t1163;
t954 = t1318 * t702;
t953 = t1319 * t702;
t951 = -qJD(1) * t460 - t1289 * t579;
t446 = t527 * t1121;
t950 = t523 * t751 - t446;
t947 = -qJD(1) * t504 - t1288 * t634;
t945 = -t715 * t748 + t487;
t942 = -t522 + t1155;
t935 = -t748 * t285 + t751 * t286 + t1110;
t934 = -t1111 - t1330;
t931 = t748 * t442 + t751 * t443 + t1110;
t927 = t1330 * t751 + t1331 * t748;
t924 = -t480 - t1023;
t515 = t1287 * t742;
t923 = -t515 - t1016;
t922 = t1288 + t692;
t919 = qJD(1) * t503 - t1288 * t635 - t568;
t646 = rSges(2,1) * t751 - rSges(2,2) * t748;
t644 = rSges(2,1) * t748 + rSges(2,2) * t751;
t645 = t1225 - t1347;
t77 = qJD(1) * t907 - t1364 - t552 - t567;
t911 = t748 * t78 + t751 * t77;
t306 = t525 * t750 + t527 * t747;
t832 = qJD(2) * t639;
t335 = -t751 * t832 + (-t748 * t900 + t1187) * qJD(1);
t833 = qJD(2) * t641;
t337 = -t751 * t833 + (-t642 * t748 + t1196) * qJD(1);
t767 = -qJD(2) * t306 - t335 * t747 + t337 * t750 + t1043;
t305 = t524 * t750 + t526 * t747;
t336 = qJD(1) * t525 - t748 * t832;
t338 = qJD(1) * t527 - t748 * t833;
t768 = qJD(1) * t522 - qJD(2) * t305 - t336 * t747 + t338 * t750;
t910 = t748 * (t1275 * t748 + t767 * t751) - t751 * (t1274 * t748 + t768 * t751);
t909 = t748 * (-t1275 * t751 + t767 * t748) - t751 * (-t1274 * t751 + t768 * t748);
t892 = -t108 * t751 - t109 * t748;
t891 = t117 * t751 - t118 * t748;
t890 = t117 * t748 + t118 * t751;
t889 = t119 * t751 - t120 * t748;
t888 = t119 * t748 + t120 * t751;
t887 = t127 * t751 - t128 * t748;
t886 = t127 * t748 + t128 * t751;
t885 = -t177 * t751 - t178 * t748;
t208 = -t1124 * t525 - t950;
t884 = -t207 * t751 + t208 * t748;
t209 = -t1123 * t524 - t1087;
t210 = -t1123 * t525 + t1086;
t883 = -t209 * t751 + t210 * t748;
t880 = t279 * t751 - t281 * t748;
t879 = -t304 * t748 - t1166;
t339 = -t1039 * t1223 + (-t1041 * t750 - t988) * rSges(3,1) + t1056;
t581 = t643 * t748;
t340 = -qJD(2) * t581 + (t645 * t751 + t732) * qJD(1);
t878 = t339 * t751 + t340 * t748;
t205 = t397 * t672 + t399 * t671;
t867 = t535 * t748 + t536 * t751;
t864 = t639 * t750 + t641 * t747;
t545 = t751 * t567;
t861 = -t566 * t748 - t545;
t857 = t1289 + t1054;
t856 = -t563 + t627;
t854 = t352 * t1039 + t353 * t712 - t611 * t462 - t463 * t612;
t853 = t1236 * t671 - t662;
t852 = (t147 + t250) * t751 + (t148 + t251) * t748 + t1331 * t1040;
t851 = -t285 * t1040 + t751 * t171 + t748 * t172 + t1012;
t263 = -t635 * t1219 + (-t1041 * t683 - t635 * t682) * rSges(5,1) + t1063;
t850 = t442 * t1040 + t751 * t263 + t748 * t264 + t1012;
t849 = t935 + t1099;
t842 = -t1021 - t1023;
t837 = t876 * t748;
t834 = -t1016 - t1023;
t830 = t951 - t1022;
t828 = -t1292 - t655;
t825 = t634 * t358 + t359 * t635 + t958;
t821 = t375 + t1292;
t819 = -t405 + t842;
t818 = t634 * t200 - t488 * t356 + t854;
t817 = -t269 * t428 + t271 * t427 + t368 * t620;
t816 = (-Icges(7,5) * t516 - Icges(7,6) * t517) * t428 - (Icges(7,5) * t518 - Icges(7,6) * t519) * t427 - t893 * t671 * t620;
t815 = -t480 + t834;
t814 = qJD(1) * t529 - t1153 * t579 + t1154 * t580;
t811 = -t543 + t546;
t810 = t927 + t935;
t328 = -t1020 * t751 + t1068;
t465 = -pkin(5) * t1143 + t621;
t467 = -pkin(5) * t1141 + t623;
t808 = t279 * t985 + t427 * t327 + t328 * t428 + t579 * t465 + t467 * t580;
t807 = t524 * t751 - t525 * t748;
t806 = t858 + t1283;
t805 = t842 + t1116;
t804 = t546 - t1329;
t803 = t851 + t1010;
t802 = t671 * t816;
t799 = t821 + t1054;
t795 = (-t1059 * t747 + t1060 * t750) * qJD(1);
t794 = t834 - t1021;
t792 = -t405 + t794;
t787 = t851 + t852;
t786 = t794 + t1116;
t785 = (Icges(7,1) * t518 - t1199 - t274) * t427 - (-Icges(7,1) * t516 - t272 - t501) * t428 + (t901 * t671 - t370) * t620;
t783 = qJD(1) * t1319 + t1327 * t579 - t1328 * t580;
t780 = -t281 * t986 + t808;
t779 = qJD(1) * t467 + t281 * t1038 - t1292 * t579 + t620 * t328 - t374 * t985 - t375 * t427;
t778 = t1284 * (-pkin(5) - t1224) * t671;
t777 = qJD(1) * t395 - t671 * t972 + t672 * t970;
t776 = -t671 * t973 + t672 * t971 + t1046;
t771 = qJD(1) * t528 - t671 * t954 + t672 * t953;
t599 = t900 * qJD(2);
t600 = t642 * qJD(2);
t766 = qJD(1) * t637 - qJD(2) * t864 - t599 * t747 + t600 * t750;
t765 = t779 - t1022;
t764 = t634 * t172 + (t171 + t199) * t635 - t1111 * t489 - t488 * t285 + t818;
t763 = -t1268 * t747 + t807 * t750;
t112 = t671 * t970 + t672 * t972;
t113 = t671 * t971 + t672 * t973;
t163 = -t837 - t1164;
t164 = -t1143 * t398 - t961;
t165 = -t1141 * t397 - t1109;
t166 = -t1141 * t398 + t1108;
t186 = -t751 * t868 + t1154;
t206 = t398 * t672 + t400 * t671;
t25 = t1141 * t142 + t144 * t518 + t146 * t519 + t236 * t272 - t237 * t276 + t269 * t822;
t26 = t1141 * t141 + t143 * t518 + t145 * t519 + t236 * t274 + t237 * t277 + t271 * t822;
t27 = t1143 * t142 - t144 * t516 + t146 * t517 + t238 * t272 - t239 * t276 + t269 * t823;
t28 = t1143 * t141 - t143 * t516 + t145 * t517 + t238 * t274 + t239 * t277 + t271 * t823;
t46 = t1141 * t202 + t203 * t518 + t204 * t519 + t236 * t370 + t237 * t372 + t368 * t822;
t3 = t119 * t198 + t120 * t197 + t151 * t437 - t25 * t428 + t26 * t427 + t46 * t620;
t323 = t370 * t748;
t324 = t370 * t751;
t325 = t372 * t748;
t326 = t372 * t751;
t371 = Icges(7,6) * t671 + t839;
t373 = Icges(7,5) * t671 + t840;
t47 = t1143 * t202 - t203 * t516 + t204 * t517 + t238 * t370 + t239 * t372 + t368 * t823;
t4 = t117 * t198 + t118 * t197 + t150 * t437 - t27 * t428 + t28 * t427 + t47 * t620;
t44 = -t127 * t428 + t128 * t427 + t157 * t620;
t61 = t1280 * t748 + t777 * t751;
t62 = t1281 * t748 + t776 * t751;
t63 = -t1280 * t751 + t777 * t748;
t64 = -t1281 * t751 + t776 * t748;
t759 = -t1262 * t671 + t783 * t672;
t760 = t1266 * t671;
t81 = -t163 * t580 + t164 * t579 + t1033;
t184 = t186 * qJD(1);
t82 = -t165 * t580 + t166 * t579 + t184;
t98 = t1273 * t748 + t771 * t751;
t99 = -t1273 * t751 + t771 * t748;
t762 = (((t324 * t746 - t326 * t749 + t271) * t427 - (t323 * t746 - t325 * t749 + t269) * t428 + (-t371 * t746 + t373 * t749 + t368) * t620 + t157 * qJD(6)) * t671 + (qJD(6) * t886 - t1266) * t672) * t1244 + (t1262 * t672 + t783 * t671) * t1228 - t437 * t887 / 0.2e1 - t197 * t889 / 0.2e1 - t198 * t891 / 0.2e1 + (t748 * t759 - t751 * t814) * t1247 + (-t63 * t751 + t64 * t748 + (t163 * t748 + t164 * t751) * qJD(1)) * t1248 + (-t61 * t751 + t62 * t748 + (t165 * t748 + t166 * t751) * qJD(1)) * t1249 + (t748 * t814 + t751 * t759) * t1250 + ((t324 * t516 - t326 * t517) * t427 - (t323 * t516 - t325 * t517) * t428 + (-t371 * t516 + t373 * t517) * t620 + (t1138 * t118 + t150 * t671) * qJD(6) + ((qJD(6) * t117 + t817) * t672 + t760) * t748) * t1253 + (qJD(1) * t890 - t27 * t751 + t28 * t748) * t1254 + (-t112 * t751 + t113 * t748 + (t205 * t748 + t206 * t751) * qJD(1)) * t1227 + (-t205 * t751 + t206 * t748) * t1209 + (qJD(1) * t888 - t25 * t751 + t26 * t748) * t1255 + ((-t324 * t518 - t326 * t519) * t427 - (-t323 * t518 - t325 * t519) * t428 + (t371 * t518 + t373 * t519) * t620 + (t1139 * t119 + t151 * t671) * qJD(6) + ((qJD(6) * t120 + t817) * t672 + t760) * t751) * t1256 + (-t163 * t751 + t164 * t748) * t1258 + (-t165 * t751 + t166 * t748) * t1259 + (qJD(1) * t886 - t31 * t751 + t32 * t748) * t1243 - t44 * t1038 / 0.2e1 + (t81 + t40) * t981 + (t82 + t41) * t980 - t1303 * t1037 / 0.2e1 + (qJD(1) * t98 + qJDD(1) * t186 + t165 * t367 + t166 * t366 + t579 * t62 - t580 * t61 + t3) * t1238 + (qJD(1) * t99 + qJDD(1) * t185 + t163 * t367 + t164 * t366 + t579 * t64 - t580 * t63 + t4) * t1237;
t755 = t762 + t1346 * t981 + t1345 * t980 + (t1336 * t748 - t1337 * t751) * t1252 + (t1338 * t748 - t1339 * t751) * t1251 + (t1312 * t748 + t1313 * t751) * t1242 + (t1351 * t751 + t1350 * t748 + (t1336 * t751 + t1337 * t748) * qJD(1)) * t1241 + (t1349 * t751 + t1348 * t748 + (t1338 * t751 + t1339 * t748) * qJD(1)) * t1240 + (-t1312 * t751 + t1313 * t748) * t1239 + (t1343 * qJD(1) + t1334 * qJDD(1) + t1336 * t488 + t1337 * t489 + t1350 * t634 + t1351 * t635) * t1238 + (qJD(1) * t1342 + qJDD(1) * t1335 + t1338 * t488 + t1339 * t489 + t1348 * t634 + t1349 * t635) * t1237 + (t1263 * t683 + t1264 * t714 + t782 * t682 + t781 * t713) * t1228 + (t1341 * t751 + t1340 * t748 + (t1332 * t751 + t1333 * t748) * qJD(1)) * t1227 + (t1332 * t748 - t1333 * t751) * t1209;
t601 = t645 * qJD(2);
t458 = t912 * t671;
t317 = rSges(7,1) * t518 - rSges(7,2) * t519;
t316 = -rSges(7,1) * t516 - rSges(7,2) * t517;
t308 = -t751 * t863 + t1146;
t302 = t308 * qJD(1);
t300 = t867 * qJD(2);
t159 = qJD(1) * t339 + qJDD(1) * t536 - t601 * t712 - t611 * t643 + t1067;
t158 = -t601 * t1039 + t612 * t643 + t1073 * qJDD(1) + (-t340 - t606) * qJD(1);
t156 = -t1270 * t751 + t766 * t748;
t155 = t1270 * t748 + t766 * t751;
t154 = -qJD(2) * t869 + t335 * t750 + t337 * t747;
t153 = -qJD(2) * t870 + t336 * t750 + t338 * t747;
t138 = qJD(1) * t929 - t563 * t635 + t843;
t124 = qJD(2) * t883 + t302;
t123 = qJD(2) * t884 + t1030;
t105 = qJD(1) * t294 + qJDD(1) * t483 - t488 * t595 - t515 * t634 + t788;
t104 = t489 * t595 - t515 * t635 + t1000 * qJDD(1) + (-t295 + t1106) * qJD(1) + t862;
t72 = t294 * t635 + t295 * t634 + t482 * t488 - t483 * t489 + t854;
t59 = qJD(1) * t263 + qJDD(1) * t443 - t480 * t634 - t488 * t563 + t761;
t35 = t264 * t634 + t442 * t488 + (t199 + t263) * t635 - t1105 * t489 + t818;
t20 = t229 * t580 + t230 * t579 + t366 * t411 - t367 * t412 + t764;
t10 = t147 * t428 + t148 * t427 + t197 * t279 - t198 * t281 + t250 * t580 + t251 * t579 + t366 * t466 - t367 * t468 + t764;
t1 = [(-qJD(2) * t863 + t599 * t750 + t600 * t747 + t671 * t953 + t672 * t954 + t682 * t948 + t683 * t949 + t713 * t943 + t714 * t944) * qJD(1) + (t153 + t156 + t124) * t977 + (m(2) * (t644 ^ 2 + t646 ^ 2) + t558 * t683 + t560 * t682 + t530 * t672 + t532 * t671 + t864 + t591 * t714 + t593 * t713 + Icges(2,3)) * qJDD(1) + (t307 + t305) * t1245 + (-t1341 + t1342 + t1345) * t1240 + (t302 + ((t208 - t446 + (t523 + t1156) * t751 + t1087) * t751 + t1086 * t748) * qJD(2)) * t976 + (t108 * (-t424 * t748 + t1058) + t109 * (t1065 + t1096) + (-t109 * t460 + t1174 * t543) * t702 + ((-t108 * rSges(6,3) + t109 * (-t521 - t657)) * t748 + (t108 * (-t521 - t1289) - t109 * t715) * t751) * qJD(1) - (-qJD(1) * t411 - t108 - t1150 - t1301 + t806) * t109 + (t34 - g(2)) * (t412 + t945) + (t33 - g(1)) * (-t411 + t1081)) * m(6) + (-t1033 + (t166 - t837 - t1108) * t580 + (t748 * t955 + t165 - t344) * t579 + ((t396 + t876) * t579 + t955 * t580) * t751 + t81) * t1250 + (t1340 + t1343) * t1241 + (t185 + t205) * t1258 + (t112 + t99 + t82) * t1248 + t1212 / 0.2e1 - t1213 / 0.2e1 + (t184 + (t164 + (t397 * t751 + t398 * t748) * t671 + t961 + t1109) * t580 + (-t399 * t1139 + t1164 + t163 + (t397 * t748 - t398 * t751) * t671 + t1108) * t579) * t1247 + (((t476 * t751 + t477 * t748) * t713 + (t433 * t751 + t434 * t748) * t682 + t1338 + t1366 + t1368) * t635 + (-t478 * t1128 + (t476 * t748 - t477 * t751) * t713 - t435 * t1134 + (t433 * t748 - t434 * t751) * t682 - t1304 + t1339 - t1365) * t634 + t1357) * t1239 + (t154 + t155) * t978 + (t306 + t308) * t1246 + t1170 / 0.2e1 + t1171 / 0.2e1 + t46 * t1255 + t150 * t1260 + t151 * t1261 + (-t853 * t1231 + (t19 * t828 + (-t521 + t853) * t1175) * t748 + (-t915 + t1058 + (-t521 + t828) * t1040 + (-t424 + (t1236 * t672 + t1232) * t702) * t748) * t77 + (qJD(1) * t466 - t1283 + t77 + t565 + t1009 + t1096 + (-pkin(5) * t1144 - qJD(1) * t715) * t751 + t1301 + t1364) * t78 + (-g(2) + t18) * (t945 + t1330) + (-g(1) + t19) * (-t914 + t1081)) * m(7) + t1208 + (t1332 + t1334) * t1252 + (t1333 + t1335) * t1251 + (t113 + t98) * t1249 + t41 * t1253 + (t47 + t41) * t1254 + (t304 * (t701 + t1056) + (t1167 * t643 - t1165) * qJD(2) + ((-pkin(1) - t645) * t1166 + (t303 * (-rSges(3,3) - pkin(7)) + t304 * t983) * t748) * qJD(1) - (-qJD(1) * t535 - t303 - t626 - t989) * t304 + (t159 - g(2)) * t418 + (t158 - g(1)) * (t748 * t983 + t1053 + t739)) * m(3) + (t186 + t206) * t1259 + ((t1310 * t751 + t1304 + t1336 - t1369) * t635 + ((t1373 + t1378) * t751 + t1310 * t748 + t1337 + t1376) * t634 + t1346 - t1354) * t1242 + (-(-qJD(1) * t482 + t1293 - t177 + t829) * t178 + t177 * t1055 + t178 * (-t939 + t1061) + (t1168 * t595 - t178 * t548) * t742 + ((-t177 * rSges(4,3) + t178 * (-t695 - t681)) * t748 + (t177 * (-t695 - t1287) - t178 * t752) * t751) * qJD(1) + (t105 - g(2)) * (t483 + t941) + (t104 - g(1)) * (-t482 - t1057)) * m(4) + (-t138 * t920 + t139 * (t1063 + t1074) + (t138 * t503 - t139 * t504) * t742 + ((-t138 * rSges(5,3) + t139 * (-t605 - t668)) * t748 + (t138 * (-t605 - t1288) - t139 * t741) * t751) * qJD(1) - (-qJD(1) * t442 + t635 * t826 - t138 + t806) * t139 + (t59 - g(2)) * (-t741 * t748 + t443 + t572) + (t58 - g(1)) * (-t442 - t1070)) * m(5) + (t123 - t1030 + ((t751 * t942 - t1086 + t210) * t751 + (t748 * t942 + t209 + t950) * t748) * qJD(2)) * t979 - m(2) * (-g(1) * t644 + g(2) * t646); ((t207 * t748 + t208 * t751) * qJD(1) + t909) * t977 + ((t1059 * t750 + t1060 * t747) * qJD(1) + (t1268 * t750 + t807 * t747) * qJD(2)) * t1228 + ((-t1039 * t1146 - t1042) * t751 + (t795 + (t1145 * t751 + t763) * qJD(2)) * t748) * t976 + ((-t1145 * t712 + t1042) * t748 + (t795 + (t1146 * t748 + t763) * qJD(2)) * t751) * t979 + t755 + (-t153 * t751 + t154 * t748 + (t305 * t748 + t306 * t751) * qJD(1)) * t1227 + (-t305 * t751 + t306 * t748) * t1209 + t884 * t1245 + t883 * t1246 + (qJD(1) * t156 + qJD(2) * t909 + qJDD(1) * t307 + t207 * t612 + t208 * t611) * t1237 + (qJD(1) * t155 + qJD(2) * t910 + qJDD(1) * t308 + t209 * t612 + t210 * t611) * t1238 + ((t209 * t748 + t210 * t751) * qJD(1) + t910) * t978 + t124 * t980 + t123 * t981 + (-g(1) * (t497 + t996) - g(2) * (t496 + t997) - g(3) * (t738 + t799) - t778 - t78 * (t765 + t1295) - t50 * (t780 + t825) - (-t78 * t990 + (t50 * t974 - t750 * t911) * qJD(2)) * pkin(2) + t10 * (t810 + t1091) + t50 * (t787 + t1006) + t804 * t1308 + (t18 * t804 + t78 * t786 + (-t463 + t934) * t1177) * t748 + (-(-t465 + t1104) * qJD(1) + t786 * t751 + t1311) * t77) * m(7) + (-g(1) * (t497 - t460) - g(2) * (t496 - t459) - g(3) * (t738 + t857) - t109 * (t830 + t1295) - t76 * (t825 + t960) - (-t109 * t990 + (t750 * t892 + t76 * t974) * qJD(2)) * pkin(2) + t20 * (t849 + t1091) + t76 * (t803 + t1006) + t811 * t1307 + (t34 * t811 + t109 * t792 + (-t463 + t1007) * t1176) * t748 + (-(t459 + t1104) * qJD(1) + t792 * t751 + t1305) * t108) * m(6) + (-g(1) * (t587 - t504) - g(2) * (t586 - t503) - g(3) * (t738 + t922) - t138 * (-qJD(1) * t498 + t919) - t139 * (t925 + t947) - t116 * (t957 + t958) - (-t139 * t990 + ((-t138 * t751 - t139 * t748) * t750 + t116 * t974) * qJD(2)) * pkin(2) + t138 * t1079 + t35 * (t931 + t1091) + t116 * (t850 + t1006) + (t1298 * t856 + t138 * t815) * t751 + (t59 * t856 + t139 * t815 + (-t463 - t1105) * t1048) * t748) * m(5) + (-(-t178 * t990 + (t161 * t974 + t750 * t885) * qJD(2)) * pkin(2) + t72 * (t1088 + t1091) + t161 * (t1006 + t1008) + (t177 * t923 + (qJD(1) * t178 + t104) * t827) * t751 + (t105 * t827 + t178 * t923 + (t177 * t595 + t161 * (-t463 - t483)) * qJD(1)) * t748 - g(3) * (t1287 + t738) - t1284 * t827 + t1302) * m(4) + (g(1) * t582 + g(2) * t581 - g(3) * t645 - (t303 * t581 - t1165) * qJD(1) - (t300 * (-t581 * t748 - t582 * t751) + t879 * t645) * qJD(2) + (qJD(2) * t878 + t535 * t611 - t536 * t612) * t867 + t300 * ((t535 * t751 - t536 * t748) * qJD(1) + t878) + t879 * t601 + (-t158 * t751 - t159 * t748 + (-t304 * t751 + t1167) * qJD(1)) * t643) * m(3); t755 + (-t78 * (t765 + t1294) + t10 * t810 + (t1177 * t934 + t78 * t805) * t748 - g(1) * (t555 + t996) - g(2) * (t554 + t997) - g(3) * t799 - t778 + t1267 * (t583 - t1329) + (-t636 - (-t419 - t465) * qJD(1) + t805 * t751 + t1311) * t77 + (t545 - (-t1037 * t281 - t566) * t748 - t808 + t787 + t1291) * t50) * m(7) + (-t109 * (t830 + t1294) + t20 * t849 + (t1007 * t1176 + t109 * t819) * t748 - g(1) * (t555 - t460) - g(2) * (t554 - t459) - g(3) * t857 + (t1299 + t1307) * (-t543 + t583) + (-t861 - t960 + t803 + t1291) * t76 + (-t636 - (-t419 + t459) * qJD(1) + t819 * t751 + t1305) * t108) * m(6) + (-t139 * (t820 + t947) + t35 * t931 + (-t1048 * t1105 + t139 * t924) * t748 - g(3) * t922 + (-t861 - t957 + t850) * t116 + (t751 * t924 + t1079 - t636 - t919) * t138 + (t1298 * t751 + t59 * t748 - t1284) * t826) * m(5) + (t72 * t1088 + t161 * (-t1041 * t483 + t1008) + t885 * t515 + (-t104 * t751 - t105 * t748 + (-t178 * t751 + t1168) * qJD(1)) * t595 + g(1) * t548 + g(2) * t547 - g(3) * t1287 + t1302) * m(4); (-m(5) - m(6)) * t1282 + 0.2e1 * (t1237 * t34 + t1238 * t33 + t1257 * t76) * m(6) + 0.2e1 * (t116 * t1257 + t1237 * t59 + t1238 * t58) * m(5) + (0.2e1 * t50 * t1257 - t1282 + t1285) * m(7); t762 + (-t78 * t779 + t10 * t927 + (t1116 * t78 - t1177 * t1330) * t748 - g(1) * t996 - g(2) * t997 - g(3) * t821 - t778 - t1267 * t1329 + (qJD(1) * t465 + t1116 * t751 + t1356) * t77 + (-t780 + t852) * t50) * m(7) + (t20 * t1099 + t892 * t405 + (-t33 * t751 - t1299 + (-t109 * t751 + t1174) * qJD(1)) * t543 - t108 * (qJD(1) * t459 - t364) - t109 * t951 + g(1) * t460 + g(2) * t459 - g(3) * t1289 + (-t1041 * t412 + t1010 - t960) * t76) * m(6); -t41 * t994 / 0.2e1 + t3 * t1141 / 0.2e1 + (-t151 * t672 + t671 * t888) * t1261 + ((t702 * t888 - t46) * t672 + (qJD(1) * t889 + t151 * t702 + t25 * t748 + t26 * t751) * t671) * t1255 + t671 * t40 * t980 + t4 * t1143 / 0.2e1 + (-t150 * t672 + t671 * t890) * t1260 + ((t702 * t890 - t47) * t672 + (qJD(1) * t891 + t150 * t702 + t27 * t748 + t28 * t751) * t671) * t1254 + t44 * t1144 / 0.2e1 - t672 * (t1170 + t1171 + t1208 + t1212 - t1213) / 0.2e1 + t437 * (-t157 * t672 + t671 * t886) / 0.2e1 + ((t702 * t886 - t55) * t672 + (qJD(1) * t887 + t157 * t702 + t31 * t748 + t32 * t751) * t671) * t1243 + (t1265 * t518 + t785 * t519 - t751 * t802) * t1256 + (-t1265 * t516 + t517 * t785 - t748 * t802) * t1253 + (t816 * t672 + (-t1265 * t746 + t749 * t785) * t671) * t1244 + t1303 * t1140 / 0.2e1 + ((-t78 * t147 + t77 * t148 - t18 * t281 + t19 * t279 + (t50 * t880 + (t748 * t77 - t751 * t78) * t374) * t702) * t672 + (t77 * (t211 * t748 - t279 * t702) + t78 * (-t211 * t751 + t281 * t702) + t10 * t880 + t50 * (-t1040 * t281 - t1041 * t279 - t147 * t748 + t148 * t751) + (qJD(1) * t911 + t1285) * t374) * t671 - t77 * (-t316 * t620 - t428 * t458) - t78 * (t317 * t620 - t427 * t458) - t50 * (t316 * t427 + t317 * t428) - g(1) * t317 - g(2) * t316 - g(3) * t458) * m(7);];
tau  = t1;
