% Calculate inertial parameters regressor of coriolis matrix for
% S6RRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:04:14
% EndTime: 2019-03-09 18:05:12
% DurationCPUTime: 47.80s
% Computational Cost: add. (61596->1035), mult. (116809->1284), div. (0->0), fcn. (142944->10), ass. (0->764)
t933 = qJD(2) + qJD(3);
t1225 = qJD(5) + t933;
t1127 = cos(qJ(5));
t1109 = sin(pkin(11));
t1110 = cos(pkin(11));
t1126 = sin(qJ(3));
t709 = sin(qJ(2));
t1128 = cos(qJ(3));
t711 = cos(qJ(2));
t924 = t1128 * t711;
t685 = -t1126 * t709 + t924;
t763 = t1126 * t711 + t1128 * t709;
t1174 = t1109 * t685 + t1110 * t763;
t708 = sin(qJ(5));
t833 = t1109 * t763 - t1110 * t685;
t1211 = -t1127 * t833 - t708 * t1174;
t710 = cos(qJ(6));
t1208 = t710 * t1211;
t1213 = t1208 / 0.2e1;
t1214 = -t1208 / 0.2e1;
t1217 = t1213 + t1214;
t1222 = qJD(6) * t1217;
t1054 = t1211 ^ 2;
t1185 = t1127 * t1174;
t1190 = t708 * t833;
t1193 = t1185 - t1190;
t1202 = t1193 ^ 2;
t1212 = -t1054 + t1202;
t1220 = t1212 * t710;
t1224 = qJD(1) * t1220;
t1226 = t1222 + t1224;
t707 = sin(qJ(6));
t1221 = t1212 * t707;
t1223 = qJD(1) * t1221;
t941 = t1211 * qJD(5);
t1188 = -t933 * t1211 - t941;
t1219 = t1211 * qJD(1);
t508 = t1211 * qJD(4);
t1218 = t1212 * qJD(1);
t1171 = -pkin(8) - pkin(7);
t1177 = t1171 * t1126;
t858 = t1128 * t1171;
t639 = t711 * t1177 + t709 * t858;
t1200 = -t763 * qJ(4) + t639;
t1203 = t1110 * t1200;
t1216 = -t1203 / 0.2e1;
t1204 = t1109 * t1200;
t1215 = -t1204 / 0.2e1;
t1121 = t1211 * pkin(10);
t1201 = t1193 * pkin(5);
t331 = t1201 - t1121;
t1192 = t1185 / 0.2e1 - t1190 / 0.2e1;
t1195 = t1193 * qJD(1);
t1205 = t1211 * t1195;
t1210 = qJD(6) * t1192 - t1205;
t1157 = -t1211 / 0.2e1;
t1199 = t707 * t1193;
t899 = -t1199 / 0.2e1;
t1209 = t1199 / 0.2e1;
t717 = (-qJ(4) * t1126 + t1177) * t711 + (-qJ(4) * t1128 + t858) * t709;
t1045 = t685 * qJ(4);
t829 = t709 * t1177;
t832 = t1171 * t924;
t640 = -t832 + t829;
t728 = t640 + t1045;
t721 = t1109 * t728;
t459 = t1110 * t717 - t721;
t626 = t1174 * pkin(9);
t714 = t459 - t626;
t713 = t708 * t714;
t1117 = pkin(9) * t833;
t575 = t1110 * t728;
t462 = t1109 * t717 + t575;
t361 = t462 - t1117;
t921 = t1127 * t361;
t239 = t921 + t713;
t1041 = t707 * t239;
t699 = -t711 * pkin(2) - pkin(1);
t655 = -t685 * pkin(3) + t699;
t536 = pkin(4) * t833 + t655;
t845 = -pkin(5) * t1211 - pkin(10) * t1193;
t723 = t536 + t845;
t147 = -t710 * t723 + t1041;
t229 = t710 * t239;
t148 = t707 * t723 + t229;
t767 = (t147 * t710 - t148 * t707) * t1211;
t705 = t707 ^ 2;
t1134 = t705 / 0.2e1;
t706 = t710 ^ 2;
t881 = t706 / 0.2e1 + t1134;
t1207 = t881 * t1211;
t686 = t711 * t858;
t637 = t686 - t829;
t1206 = -t640 - t637;
t1158 = t1193 / 0.2e1;
t1198 = t710 * t1193;
t1196 = t1192 * qJD(1);
t1194 = t933 * t639;
t334 = 0.2e1 * t1192;
t862 = t933 * t1193;
t177 = -t334 * qJD(5) - t862;
t1036 = t707 * t710;
t932 = -qJD(3) - qJD(5);
t866 = qJD(2) - t932;
t1178 = t866 * t1036;
t882 = t1134 - t706 / 0.2e1;
t299 = t882 * t1193;
t263 = -t299 * qJD(1) + t1178;
t591 = t637 - t1045;
t874 = t1110 * t591;
t458 = -t1204 + t874;
t739 = t458 + t1117;
t731 = t708 * t739;
t870 = t1109 * t591;
t461 = t1203 + t870;
t360 = -t626 + t461;
t922 = t1127 * t360;
t238 = t922 + t731;
t1027 = t710 * t238;
t1118 = t1174 * pkin(4);
t754 = t763 * pkin(3);
t546 = t754 + t1118;
t261 = t546 + t331;
t704 = t709 * pkin(2);
t260 = t704 + t261;
t1040 = t707 * t260;
t154 = t1027 + t1040;
t1092 = t154 * t710;
t1026 = t710 * t260;
t1042 = t707 * t238;
t153 = t1026 - t1042;
t1095 = t153 * t707;
t1019 = -t1095 / 0.2e1 + t1092 / 0.2e1;
t1184 = -0.2e1 * t1193;
t1183 = t1174 ^ 2;
t693 = t706 - t705;
t1182 = t693 * t866;
t519 = t933 * t1174;
t520 = t933 * t833;
t457 = -t1204 - t575;
t765 = t457 + t1117;
t753 = t708 * t765;
t460 = t1203 - t721;
t359 = -t626 + t460;
t923 = t1127 * t359;
t237 = t923 + t753;
t1028 = t710 * t237;
t1039 = t707 * t261;
t156 = t1028 + t1039;
t1088 = t156 * t710;
t1025 = t710 * t261;
t1043 = t707 * t237;
t155 = t1025 - t1043;
t1091 = t155 * t707;
t1018 = -t1091 / 0.2e1 + t1088 / 0.2e1;
t316 = 0.2e1 * t1213;
t1012 = t705 + t706;
t846 = t1110 * t1126;
t678 = (t1109 * t1128 + t846) * pkin(2);
t1030 = t708 * t678;
t697 = t1109 * t1126 * pkin(2);
t929 = t1128 * pkin(2);
t812 = t1110 * t929;
t679 = t812 - t697;
t918 = t1127 * t679;
t613 = t918 - t1030;
t1181 = t881 * t613;
t279 = (t1211 / 0.2e1 + t1157) * t1036;
t966 = t299 * qJD(6);
t1180 = -qJD(5) * t279 + t966;
t278 = t316 * t707;
t1179 = -qJD(5) * t278 + t966;
t703 = qJD(6) * t710;
t695 = t707 * t703;
t968 = t279 * qJD(1);
t270 = t968 - t695;
t269 = t968 + t695;
t712 = t713 / 0.2e1 + t921 / 0.2e1;
t720 = t731 / 0.2e1 + t922 / 0.2e1;
t1017 = -t753 / 0.2e1 - t923 / 0.2e1;
t1176 = t933 * t278 - t966;
t1175 = t279 * t933 + t966;
t911 = qJD(1) * t1036;
t96 = t1202 * t911 + t299 * t866;
t1172 = pkin(5) / 0.2e1;
t1170 = t153 / 0.2e1;
t1169 = -t154 / 0.2e1;
t1168 = t155 / 0.2e1;
t1167 = -t156 / 0.2e1;
t1024 = t710 * t331;
t1033 = t708 * t361;
t356 = t1127 * t714;
t236 = -t356 + t1033;
t1068 = t236 * t707;
t165 = t1024 + t1068;
t1166 = -t165 / 0.2e1;
t1038 = t707 * t331;
t1067 = t236 * t710;
t166 = t1038 - t1067;
t1165 = t166 / 0.2e1;
t1164 = -t229 / 0.2e1;
t1163 = t236 / 0.2e1;
t1162 = t239 / 0.2e1;
t354 = t1127 * t765;
t1161 = t354 / 0.2e1;
t501 = t705 * t1211;
t1160 = t501 / 0.2e1;
t502 = t706 * t1211;
t1159 = -t502 / 0.2e1;
t852 = t929 + pkin(3);
t668 = t1110 * t852 - t697;
t741 = pkin(4) + t668;
t654 = t1127 * t741;
t670 = pkin(2) * t846 + t1109 * t852;
t578 = t708 * t670 - t654;
t571 = -pkin(5) + t578;
t1156 = -t571 / 0.2e1;
t1155 = t571 / 0.2e1;
t919 = t1127 * t670;
t579 = t708 * t741 + t919;
t572 = pkin(10) + t579;
t1154 = -t572 / 0.2e1;
t1153 = t572 / 0.2e1;
t1152 = -t578 / 0.2e1;
t1151 = t578 / 0.2e1;
t1150 = t579 / 0.2e1;
t1029 = t708 * t679;
t663 = t1127 * t678;
t612 = t663 + t1029;
t1149 = -t612 / 0.2e1;
t1148 = t612 / 0.2e1;
t1147 = -t613 / 0.2e1;
t1146 = t613 / 0.2e1;
t850 = pkin(3) * t1110 + pkin(4);
t689 = t1127 * t850;
t917 = t1109 * pkin(3);
t669 = t708 * t917 - t689;
t664 = -pkin(5) + t669;
t1145 = -t664 / 0.2e1;
t1144 = t664 / 0.2e1;
t847 = t1127 * t1109;
t671 = pkin(3) * t847 + t708 * t850;
t665 = pkin(10) + t671;
t1143 = -t665 / 0.2e1;
t1142 = t665 / 0.2e1;
t1141 = -t669 / 0.2e1;
t1140 = t669 / 0.2e1;
t1139 = -t670 / 0.2e1;
t1138 = -t671 / 0.2e1;
t1137 = t671 / 0.2e1;
t1136 = -t678 / 0.2e1;
t1135 = t679 / 0.2e1;
t1132 = -t707 / 0.2e1;
t1131 = t707 / 0.2e1;
t1130 = -t710 / 0.2e1;
t1129 = t710 / 0.2e1;
t1125 = pkin(5) * t707;
t1035 = t708 * t359;
t234 = -t354 + t1035;
t1124 = t234 * pkin(5);
t1034 = t708 * t360;
t355 = t1127 * t739;
t235 = -t355 + t1034;
t1123 = t235 * pkin(5);
t1119 = t612 * pkin(5);
t1116 = pkin(3) * qJD(3);
t1115 = qJD(2) * pkin(2);
t1075 = t235 * t236;
t7 = -t147 * t153 + t148 * t154 + t1075;
t1114 = t7 * qJD(1);
t1079 = t234 * t236;
t8 = -t147 * t155 + t148 * t156 + t1079;
t1113 = t8 * qJD(1);
t9 = -t147 * t165 + t148 * t166 + t236 * t239;
t1112 = t9 * qJD(1);
t323 = -t501 - t502;
t1111 = t323 * qJD(4);
t1070 = t236 * t1193;
t1096 = t148 * t710;
t1098 = t147 * t707;
t28 = t1070 + (t1096 + t1098) * t1211;
t1108 = qJD(1) * t28;
t1071 = t235 * t710;
t226 = -t1071 / 0.2e1;
t777 = -t1146 * t1211 + t1149 * t1193;
t722 = (t1144 + t1156) * t1211 + (t1143 + t1153) * t1193 + t777;
t1076 = t234 * t710;
t905 = t1076 / 0.2e1;
t38 = t707 * t722 + t226 + t905;
t1107 = qJD(1) * t38;
t886 = t1151 + t1156;
t735 = (t1154 + t1150) * t1193 - t886 * t1211;
t798 = pkin(10) * t1158 + t1172 * t1211;
t726 = t735 + t798;
t42 = t1164 + t1071 / 0.2e1 + t726 * t707;
t1106 = qJD(1) * t42;
t78 = -t1199 * t236 - t1211 * t147;
t1105 = qJD(1) * t78;
t79 = t1198 * t236 + t1211 * t148;
t1104 = qJD(1) * t79;
t87 = t1211 * t239 + t1070;
t1103 = qJD(1) * t87;
t1093 = t154 * t707;
t1094 = t153 * t710;
t10 = (t1093 + t1094) * t1193 - t767;
t1102 = t10 * qJD(1);
t1089 = t156 * t707;
t1090 = t155 * t710;
t11 = (t1089 + t1090) * t1193 - t767;
t1101 = t11 * qJD(1);
t1085 = t166 * t707;
t1086 = t165 * t710;
t12 = (t1085 + t1086) * t1193 - t767;
t1100 = t12 * qJD(1);
t1099 = t147 * t1193;
t1097 = t148 * t1193;
t1087 = t165 * t707;
t1084 = t166 * t710;
t1069 = t236 * t1211;
t1074 = t235 * t1193;
t818 = t1069 + t1074;
t20 = -t1211 * t153 + t707 * t818 - t1099;
t1083 = t20 * qJD(1);
t21 = t1211 * t154 + t710 * t818 - t1097;
t1082 = t21 * qJD(1);
t1078 = t234 * t1193;
t819 = t1069 + t1078;
t22 = -t1211 * t155 + t707 * t819 - t1099;
t1081 = t22 * qJD(1);
t23 = t1211 * t156 + t710 * t819 - t1097;
t1080 = t23 * qJD(1);
t1077 = t234 * t707;
t1073 = t235 * t664;
t1072 = t235 * t707;
t26 = (-t147 + t1041) * t1193 - (t165 - t1068) * t1211;
t1066 = t26 * qJD(1);
t27 = (-t148 + t229) * t1193 - (-t166 - t1067) * t1211;
t1065 = t27 * qJD(1);
t817 = -t1193 * t239 + t1069;
t30 = t1211 * t237 + t1078 + t817;
t1064 = t30 * qJD(1);
t31 = t1211 * t238 + t1074 + t817;
t1063 = t31 * qJD(1);
t743 = t1155 * t1193 + t1207 * t572;
t790 = -t1094 / 0.2e1 - t1093 / 0.2e1;
t33 = t743 + t790;
t1062 = t33 * qJD(1);
t742 = t1144 * t1193 + t1207 * t665;
t789 = -t1090 / 0.2e1 - t1089 / 0.2e1;
t35 = t742 + t789;
t1061 = t35 * qJD(1);
t537 = t704 + t546;
t46 = t238 * t239 + t536 * t537 + t1075;
t1060 = t46 * qJD(1);
t47 = t237 * t239 + t536 * t546 + t1079;
t1059 = t47 * qJD(1);
t752 = pkin(10) * t1207 - t1201 / 0.2e1;
t788 = t1086 / 0.2e1 + t1085 / 0.2e1;
t51 = t752 - t788;
t1058 = t51 * qJD(1);
t1056 = t1193 * t536;
t1055 = t1193 * t665;
t1053 = t1211 * t536;
t1052 = t1211 * t664;
t1051 = t578 * t1211;
t1050 = t579 * t1193;
t1049 = t668 * t833;
t1048 = t669 * t1211;
t1047 = t670 * t1174;
t1046 = t671 * t1193;
t1044 = t699 * t685;
t304 = t707 * t1211;
t88 = (t1140 + t1152) * t1211 + (t1138 + t1150) * t1193 + t777;
t1020 = t88 * qJD(1);
t1014 = -t1034 / 0.2e1 + t355 / 0.2e1;
t569 = t579 * qJD(5);
t595 = t612 * qJD(3);
t1013 = -t595 - t569;
t844 = t882 * t1211;
t173 = t1160 + t1159 - t844;
t1011 = qJD(1) * t173;
t194 = t1054 + t1202;
t180 = t194 * t707;
t1009 = qJD(1) * t180;
t182 = t194 * t710;
t1007 = qJD(1) * t182;
t213 = -t1211 * t537 + t1056;
t1006 = qJD(1) * t213;
t214 = t1193 * t537 + t1053;
t1005 = qJD(1) * t214;
t232 = -t1211 * t546 + t1056;
t1004 = qJD(1) * t232;
t233 = t1193 * t546 + t1053;
t1003 = qJD(1) * t233;
t243 = -t1174 * t459 - t462 * t833;
t1002 = qJD(1) * t243;
t538 = t655 * t1174;
t662 = t704 + t754;
t407 = t662 * t833 + t538;
t1001 = qJD(1) * t407;
t539 = t655 * t833;
t408 = t1174 * t662 - t539;
t1000 = qJD(1) * t408;
t414 = -t754 * t833 - t538;
t999 = qJD(1) * t414;
t415 = -t1174 * t754 + t539;
t998 = qJD(1) * t415;
t996 = qJD(1) * t536;
t614 = -t685 * t704 + t699 * t763;
t995 = qJD(1) * t614;
t615 = t704 * t763 + t1044;
t994 = qJD(1) * t615;
t993 = qJD(1) * t685;
t992 = qJD(1) * t711;
t991 = qJD(2) * t707;
t990 = qJD(2) * t709;
t989 = qJD(2) * t710;
t988 = qJD(2) * t711;
t987 = qJD(3) * t707;
t986 = qJD(3) * t710;
t983 = qJD(5) * t710;
t982 = qJD(6) * t707;
t816 = -t1174 * t462 + t459 * t833;
t121 = -t1174 * t457 - t460 * t833 + t816;
t981 = t121 * qJD(1);
t122 = -t1174 * t458 - t461 * t833 + t816;
t980 = t122 * qJD(1);
t167 = t458 * t459 + t461 * t462 + t655 * t662;
t979 = t167 * qJD(1);
t168 = t459 * t457 + t462 * t460 + t655 * t754;
t978 = t168 * qJD(1);
t479 = -t501 / 0.2e1;
t176 = t1159 + t479 - t1207;
t977 = t176 * qJD(1);
t976 = t194 * qJD(1);
t782 = t1152 * t1193 + t1157 * t579;
t618 = t1118 / 0.2e1;
t677 = t754 / 0.2e1;
t931 = t677 + t704 / 0.2e1;
t864 = t618 + t931;
t199 = t782 + t864;
t974 = t199 * qJD(1);
t715 = -t1049 / 0.2e1 + t1047 / 0.2e1 + t1174 * t1136 + t833 * t1135;
t875 = t833 * t1110;
t876 = t1174 * t1109;
t737 = (-t876 / 0.2e1 + t875 / 0.2e1) * pkin(3);
t201 = t737 + t715;
t973 = t201 * qJD(1);
t676 = -t754 / 0.2e1;
t780 = t1137 * t1211 + t1140 * t1193;
t244 = t676 - t1118 / 0.2e1 + t780;
t972 = t244 * qJD(1);
t965 = t1199 * qJD(1);
t302 = (t1158 - t1193 / 0.2e1) * t707;
t964 = t302 * qJD(1);
t888 = 0.2e1 * t1158;
t303 = t888 * t707;
t963 = t303 * qJD(1);
t962 = t304 * qJD(1);
t887 = 0.2e1 * t1157;
t306 = t887 * t707;
t289 = t306 * qJD(1);
t311 = t888 * t710;
t960 = t311 * qJD(1);
t959 = t1208 * qJD(1);
t315 = t887 * t710;
t292 = t315 * qJD(1);
t958 = t316 * qJD(1);
t321 = t1206 * t763;
t957 = t321 * qJD(1);
t956 = t323 * qJD(1);
t324 = t693 * t1202;
t955 = t324 * qJD(1);
t952 = t334 * qJD(1);
t769 = t833 ^ 2;
t340 = t769 + t1183;
t949 = t340 * qJD(1);
t341 = t769 - t1183;
t948 = t341 * qJD(1);
t776 = t1174 * t668 / 0.2e1 - t833 * t1139;
t357 = t776 + t931;
t947 = t357 * qJD(1);
t394 = -t1206 * t639 + t699 * t704;
t946 = t394 * qJD(1);
t926 = t1109 / 0.2e1;
t736 = (-t833 * t926 - t1110 * t1174 / 0.2e1) * pkin(3);
t455 = t676 + t736;
t945 = t455 * qJD(1);
t505 = t1193 * qJD(4);
t939 = t1193 * qJD(5);
t594 = t685 ^ 2 - t763 ^ 2;
t938 = t594 * qJD(1);
t937 = t1174 * qJD(1);
t936 = t833 * qJD(1);
t792 = t832 / 0.2e1;
t636 = -t686 / 0.2e1 + t792;
t935 = t636 * qJD(1);
t661 = t671 * qJD(5);
t694 = -t709 ^ 2 + t711 ^ 2;
t934 = t694 * qJD(1);
t928 = pkin(1) * t709 * qJD(1);
t927 = pkin(1) * t992;
t925 = t311 * qJD(5) + (t986 + t989) * t1193;
t916 = t1211 * t996;
t915 = t1193 * t996;
t914 = t705 * t1195;
t913 = t706 * t1195;
t912 = t699 * t993;
t910 = t710 * t505;
t909 = t707 * t983;
t908 = qJD(6) * t1211 * t1193;
t337 = t1193 * t1219;
t906 = t709 * t988;
t904 = t236 * t1148;
t903 = t1068 / 0.2e1;
t902 = t1067 / 0.2e1;
t551 = t571 * t1131;
t897 = t1211 * t1132;
t895 = t613 * t1132;
t894 = -t1198 / 0.2e1;
t891 = t613 * t1130;
t890 = t1163 + t237 / 0.2e1;
t889 = t1163 + t238 / 0.2e1;
t885 = -t654 / 0.2e1 - t689 / 0.2e1;
t884 = t1140 + t1145;
t883 = t1137 + t1150;
t880 = t1128 * qJD(2);
t879 = t1128 * qJD(3);
t878 = t1126 * qJD(2);
t877 = t1126 * qJD(3);
t454 = t1012 * t578;
t587 = t1012 * t669;
t464 = t1012 * t613;
t865 = pkin(5) * t897 + pkin(10) * t899 + t1164;
t863 = t933 * t710;
t860 = t933 * t707;
t856 = t1202 * t695;
t854 = t1193 * t911;
t851 = -t919 / 0.2e1;
t849 = t1172 + t886;
t848 = t1172 + t884;
t843 = t881 * t578;
t842 = t881 * t669;
t840 = -0.2e1 * t854;
t839 = 0.2e1 * t854;
t838 = t1161 - t1035 / 0.2e1;
t837 = -t356 / 0.2e1 + t1033 / 0.2e1;
t836 = t1147 + t1145 + t1156;
t834 = t1149 + t883;
t827 = t1211 * t854;
t826 = pkin(10) * t894 + pkin(5) * t1214 + t1041 / 0.2e1;
t786 = t1155 * t234 + t904;
t2 = -t1073 / 0.2e1 + (t1143 * t154 + t1146 * t148 + t1153 * t156) * t710 + (t1142 * t153 + t1146 * t147 + t1154 * t155) * t707 + t786;
t240 = t464 * t572 + t571 * t612;
t825 = t2 * qJD(1) + t240 * qJD(2);
t212 = -t454 * t572 + t571 * t579;
t784 = t1150 * t236 + t1155 * t239;
t4 = t1123 / 0.2e1 + (pkin(10) * t1169 + t1152 * t148 + t1153 * t166) * t710 + (pkin(10) * t1170 + t1152 * t147 + t1154 * t165) * t707 + t784;
t824 = t4 * qJD(1) + t212 * qJD(2);
t822 = t1092 - t1095;
t821 = t1088 - t1091;
t820 = t1084 - t1087;
t814 = -t1193 * t572 + t1211 * t571;
t813 = t1052 - t1055;
t14 = t1018 - t1019;
t811 = -qJD(1) * t14 - qJD(2) * t464;
t17 = (t1165 + t1169) * t710 + (t1166 + t1170) * t707;
t810 = -qJD(1) * t17 + qJD(2) * t454;
t730 = t1146 * t239 + t1150 * t237 + t1151 * t234 + t904;
t785 = t1138 * t238 + t1141 * t235;
t25 = t730 + t785;
t277 = t578 * t612 + t579 * t613;
t809 = t25 * qJD(1) + t277 * qJD(2);
t403 = t834 * t710;
t734 = (t1143 + t1137) * t1193 - t884 * t1211;
t725 = t734 + t798;
t53 = t707 * t725 + t1164 + t905;
t808 = qJD(1) * t53 - qJD(2) * t403;
t523 = -t668 * t678 + t670 * t679;
t729 = -t457 * t668 / 0.2e1 + t459 * t678 / 0.2e1 + t460 * t1139 - t462 * t679 / 0.2e1;
t738 = (t461 * t926 + t458 * t1110 / 0.2e1) * pkin(3);
t94 = t738 + t729;
t807 = t94 * qJD(1) - t523 * qJD(2);
t806 = t1193 * (-qJD(6) + t1219);
t107 = t1161 - t355 / 0.2e1 + (-t359 / 0.2e1 + t360 / 0.2e1) * t708;
t805 = -qJD(1) * t107 + qJD(2) * t612;
t110 = t712 + t1014;
t804 = qJD(1) * t110 + qJD(2) * t579;
t113 = t720 + t837;
t803 = -qJD(1) * t113 - qJD(2) * t578;
t115 = t720 + t1017;
t802 = -qJD(1) * t115 + qJD(2) * t613;
t746 = t874 / 0.2e1 + t1215;
t793 = -t575 / 0.2e1 + t1215;
t264 = -t746 + t793;
t801 = -qJD(1) * t264 + qJD(2) * t678;
t716 = t1216 + t721 / 0.2e1;
t745 = t1216 - t870 / 0.2e1;
t266 = t716 - t745;
t800 = -qJD(1) * t266 + qJD(2) * t679;
t799 = -t847 / 0.2e1;
t797 = -t1121 / 0.2e1 + t1201 / 0.2e1;
t796 = t917 / 0.2e1 + t670 / 0.2e1;
t791 = t1096 / 0.2e1 + t1098 / 0.2e1;
t787 = t1084 / 0.2e1 - t1087 / 0.2e1;
t783 = t1137 * t236 + t1144 * t239;
t781 = -t1055 / 0.2e1 + t1052 / 0.2e1;
t779 = t1137 * t571 + t1144 * t579;
t778 = -t1153 * t1211 + t1156 * t1193;
t775 = -t1142 * t1211 + t1145 * t1193;
t225 = t1072 / 0.2e1;
t40 = t225 - t1077 / 0.2e1 + t722 * t710;
t774 = qJD(1) * t40 - t612 * t991;
t45 = (t1162 - t235 / 0.2e1) * t707 + t726 * t710;
t773 = -qJD(1) * t45 - t579 * t991;
t762 = t260 / 0.2e1 + t778;
t62 = t707 * t762 + t710 * t889;
t772 = -qJD(1) * t62 - t571 * t989;
t64 = t707 * t889 - t710 * t762;
t771 = -qJD(1) * t64 - t571 * t991;
t766 = t331 / 0.2e1 + t797;
t761 = t261 / 0.2e1 + t775;
t104 = t1119 / 0.2e1 + t779 + t1012 * (pkin(10) * t1147 + t1141 * t572 + t1143 * t578);
t393 = -t587 * t665 + t664 * t671;
t6 = t1124 / 0.2e1 + (pkin(10) * t1167 + t1141 * t148 + t1142 * t166) * t710 + (pkin(10) * t1168 + t1141 * t147 + t1143 * t165) * t707 + t783;
t760 = t6 * qJD(1) + t104 * qJD(2) + t393 * qJD(3);
t19 = (t1165 + t1167) * t710 + (t1166 + t1168) * t707;
t253 = t1012 * (t1141 + t1152 + t1147);
t759 = -qJD(1) * t19 - qJD(2) * t253 + qJD(3) * t587;
t109 = t712 + t838;
t418 = pkin(3) * t799 + t851 + t663 / 0.2e1 + (t697 / 0.2e1 - t812 / 0.2e1 + t1135 - t850) * t708;
t758 = qJD(1) * t109 - qJD(2) * t418 + qJD(3) * t671;
t111 = t837 - t1017;
t416 = t918 / 0.2e1 + (t1136 + t796) * t708 + t885;
t757 = -qJD(1) * t111 - qJD(2) * t416 - qJD(3) * t669;
t756 = t1188 * t1193;
t755 = (t862 + t939) * t1211;
t397 = t836 * t707;
t76 = t707 * t890 - t710 * t761;
t751 = -qJD(1) * t76 + qJD(2) * t397 - t664 * t987;
t398 = t836 * t710;
t74 = t707 * t761 + t710 * t890;
t750 = -qJD(1) * t74 + qJD(2) * t398 - t664 * t986;
t402 = t834 * t707;
t56 = (t1162 - t234 / 0.2e1) * t707 + t725 * t710;
t749 = -qJD(1) * t56 - qJD(2) * t402 - t671 * t987;
t748 = qJD(1) * t763;
t747 = t763 * qJD(3);
t740 = t699 * t748;
t420 = t849 * t707;
t547 = t848 * t707;
t83 = t766 * t710;
t733 = qJD(1) * t83 + qJD(2) * t420 + qJD(3) * t547 + qJD(5) * t1125;
t421 = t849 * t710;
t548 = t848 * t710;
t81 = t766 * t707;
t732 = pkin(5) * t983 - qJD(1) * t81 + qJD(2) * t421 + qJD(3) * t548;
t632 = t933 * t763;
t702 = pkin(5) * t1130;
t701 = -t1125 / 0.2e1;
t696 = t709 * t992;
t690 = t693 * qJD(6);
t673 = t679 * qJD(3);
t672 = t678 * qJD(3);
t660 = t669 * qJD(5);
t653 = t707 * t661;
t644 = t664 * t1129;
t643 = t664 * t1131;
t634 = t685 * t748;
t633 = t763 * t993;
t631 = t933 * t685;
t624 = t833 * qJD(4);
t621 = t1174 * qJD(4);
t598 = t686 / 0.2e1 + t792 - t829;
t596 = t613 * qJD(3);
t586 = t707 * t595;
t570 = t587 * qJD(5);
t568 = t578 * qJD(5);
t559 = t707 * t569;
t552 = t571 * t1129;
t550 = t1129 * t669 + t644 + t702;
t549 = t1131 * t669 + t643 + t701;
t522 = t1174 * t936;
t521 = t833 * t937;
t498 = t710 * t1195;
t489 = t502 / 0.2e1;
t465 = t695 * t1184;
t463 = t464 * qJD(3);
t456 = t677 + t736;
t442 = t454 * qJD(5);
t423 = t1129 * t578 + t552 + t702;
t422 = t1131 * t578 + t551 + t701;
t419 = t851 - t1029 - t663 / 0.2e1 - t708 * pkin(4) + (-t1110 * t708 + t799) * pkin(3);
t417 = -t918 / 0.2e1 + t1030 / 0.2e1 + t796 * t708 + t885;
t406 = t840 + t1182;
t405 = t839 - t1182;
t404 = t1130 * t612 - t710 * t883;
t401 = t1131 * t612 + t707 * t883;
t400 = t644 + t552 + t891;
t399 = t643 + t551 + t895;
t358 = -t776 + t931;
t309 = t1209 + t899;
t308 = 0.2e1 * t1209;
t307 = t304 / 0.2e1 + t897;
t288 = t307 * qJD(6);
t287 = t306 * qJD(6);
t283 = t1199 * qJD(4);
t274 = t703 + t292;
t273 = -t289 - t982;
t267 = t716 + t745;
t265 = t746 + t793;
t252 = -t842 - t843 + t1181;
t246 = t1225 * t1192;
t245 = t677 + t618 + t780;
t224 = -t1076 / 0.2e1;
t223 = t1077 / 0.2e1;
t202 = t737 - t715;
t200 = -t782 + t864;
t175 = t489 + t1160 - t1207;
t174 = t479 + t489 - t844;
t172 = t690 - t1011;
t171 = t690 + t1011;
t130 = -t337 * t706 - t1180;
t129 = -t337 * t705 + t1180;
t118 = t1014 - t712;
t117 = t838 - t712;
t116 = -t720 + t1017;
t114 = t837 - t720;
t112 = t837 + t1017;
t108 = t838 + t1014;
t103 = -t1119 / 0.2e1 - t665 * t843 - t572 * t842 + t779 + t1181 * pkin(10);
t98 = qJD(5) * t173 + t465 + 0.2e1 * t827;
t95 = t738 - t729;
t93 = -qJD(5) * t302 + qJD(6) * t315 - t1224;
t92 = -t287 + t1223;
t91 = (t710 * t860 + t913) * t1211 - t1179;
t90 = (-t707 * t863 + t914) * t1211 + t1179;
t89 = -t1050 / 0.2e1 + t1051 / 0.2e1 - t1046 / 0.2e1 + t1048 / 0.2e1 - t777;
t86 = qJD(5) * t308 + t1193 * t860 + t1226;
t85 = t288 + t925 - t1223;
t84 = t1068 + t1024 / 0.2e1 - t797 * t710;
t82 = t1067 - t1038 / 0.2e1 + t797 * t707;
t80 = -0.2e1 * t827 + qJD(5) * t174 + t465 + t933 * (-t501 + t502);
t77 = t903 - t1043 / 0.2e1 + t1025 / 0.2e1 - t775 * t710;
t75 = t902 - t1028 / 0.2e1 - t1039 / 0.2e1 + t775 * t707;
t65 = t903 - t1042 / 0.2e1 + t1026 / 0.2e1 - t778 * t710;
t63 = t902 - t1027 / 0.2e1 - t1040 / 0.2e1 + t778 * t707;
t55 = t710 * t734 + t223 + t826;
t54 = t707 * t734 + t224 + t865;
t52 = t752 + t788;
t44 = t710 * t735 + t225 + t826;
t43 = t707 * t735 + t226 + t865;
t41 = t1148 * t1198 - t1211 * t891 + t1213 * t571 + t572 * t894 + t710 * t781 + t223 + t225;
t39 = t572 * t899 + t612 * t1209 + t707 * t781 + t224 + t226 + (t551 - t895) * t1211;
t34 = t742 - t789;
t32 = t743 - t790;
t24 = t730 - t785;
t18 = t787 + t1018;
t16 = t787 + t1019;
t13 = t1018 + t1019;
t5 = -t1124 / 0.2e1 - t791 * t669 + t787 * t665 + t783 + t1018 * pkin(10);
t3 = -t1123 / 0.2e1 - t791 * t578 + t787 * t572 + t784 + t1019 * pkin(10);
t1 = t1073 / 0.2e1 + t791 * t613 + t1018 * t572 + t786 + t1019 * t665;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, t694 * qJD(2), 0, -t906, 0, 0, -pkin(1) * t990, -pkin(1) * t988, 0, 0 (qJD(2) * t763 + t747) * t685, t933 * t594, 0, -t632 * t685, 0, 0, t614 * qJD(2) + t699 * t747, qJD(2) * t615 + qJD(3) * t1044, qJD(2) * t321, qJD(2) * t394, -t1174 * t520, t933 * t341, 0, t833 * t519, 0, 0, qJD(2) * t407 - qJD(3) * t414, qJD(2) * t408 - qJD(3) * t415, qJD(2) * t122 + qJD(3) * t121 + qJD(4) * t340, qJD(2) * t167 + qJD(3) * t168 + qJD(4) * t243, -t756, -t1225 * t1212, 0, -t755, 0, 0, qJD(2) * t213 + qJD(3) * t232 + t536 * t939, qJD(2) * t214 + qJD(3) * t233 + t536 * t941, qJD(2) * t31 + qJD(3) * t30 + qJD(4) * t194, qJD(2) * t46 + qJD(3) * t47 + qJD(4) * t87, -t706 * t756 - t856, 0.2e1 * t1188 * t1198 * t707 - qJD(6) * t324, t1220 * t1225 + t707 * t908, -t705 * t756 + t856, -t1221 * t1225 + t710 * t908, -t755, qJD(2) * t20 + qJD(3) * t22 + qJD(4) * t180 + qJD(5) * t26 + qJD(6) * t79, qJD(2) * t21 + qJD(3) * t23 + qJD(4) * t182 + qJD(5) * t27 + qJD(6) * t78, -qJD(2) * t10 - qJD(3) * t11 - qJD(5) * t12, qJD(2) * t7 + qJD(3) * t8 + qJD(4) * t28 + qJD(5) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t696, t934, t988, -t696, -t990, 0, -pkin(7) * t988 - t928, pkin(7) * t990 - t927, 0, 0, t634, t938, t631, -t633, -t632, 0, qJD(2) * t637 + qJD(3) * t598 + t995, -t1194 + t994, t957 + (-t1126 * t763 - t1128 * t685) * t1115, t946 + (t1126 * t639 + t1128 * t637) * t1115, -t522, t948, -t520, t521, -t519, 0, qJD(2) * t458 + qJD(3) * t265 + t1001, -qJD(2) * t461 + qJD(3) * t267 + t1000, t980 + (-t1047 + t1049) * qJD(2) + t202 * qJD(3), t979 + (t458 * t668 + t461 * t670) * qJD(2) + t95 * qJD(3) + t358 * qJD(4), t337, -t1218, -t1188, -t1205, t177, 0, -qJD(2) * t235 + qJD(3) * t108 + qJD(5) * t118 + t1006, -qJD(2) * t238 + qJD(3) * t116 + qJD(5) * t114 + t1005, t1063 + (-t1050 + t1051) * qJD(2) + t89 * qJD(3), t1060 + (t235 * t578 + t238 * t579) * qJD(2) + t24 * qJD(3) + t200 * qJD(4), t91, t80, t86, t90, t85, t1210, t1083 + (t707 * t814 - t1071) * qJD(2) + t39 * qJD(3) + t43 * qJD(5) + t65 * qJD(6), t1082 + (t710 * t814 + t1072) * qJD(2) + t41 * qJD(3) + t44 * qJD(5) + t63 * qJD(6), qJD(2) * t822 + t13 * qJD(3) + t16 * qJD(5) - t1102, t1114 + (t235 * t571 + t572 * t822) * qJD(2) + t1 * qJD(3) + t32 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, t938, t631, -t633, -t632, 0, t598 * qJD(2) - t640 * qJD(3) + t740, -t1194 + t912, 0, 0, -t522, t948, -t520, t521, -t519, 0, qJD(2) * t265 + qJD(3) * t457 - t999, qJD(2) * t267 - qJD(3) * t460 - t998, t981 + t202 * qJD(2) + (t875 - t876) * t1116, t978 + t95 * qJD(2) + (t1109 * t460 + t1110 * t457) * t1116 + t456 * qJD(4), t337, -t1218, -t1188, -t1205, t177, 0, qJD(2) * t108 - qJD(3) * t234 + qJD(5) * t117 + t1004, qJD(2) * t116 - qJD(3) * t237 + qJD(5) * t112 + t1003, t1064 + t89 * qJD(2) + (-t1046 + t1048) * qJD(3), t1059 + t24 * qJD(2) + (t234 * t669 + t237 * t671) * qJD(3) + t245 * qJD(4), t91, t80, t86, t90, t85, t1210, t1081 + t39 * qJD(2) + (t707 * t813 - t1076) * qJD(3) + t54 * qJD(5) + t77 * qJD(6), t1080 + t41 * qJD(2) + (t710 * t813 + t1077) * qJD(3) + t55 * qJD(5) + t75 * qJD(6), t13 * qJD(2) + qJD(3) * t821 + t18 * qJD(5) - t1101, t1113 + t1 * qJD(2) + (t234 * t664 + t665 * t821) * qJD(3) + t34 * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t949, qJD(2) * t358 + qJD(3) * t456 + t1002, 0, 0, 0, 0, 0, 0, 0, 0, t976, qJD(2) * t200 + qJD(3) * t245 + t1103, 0, 0, 0, 0, 0, 0, t288 + t1009, qJD(5) * t309 + t1007 + t1222, t175 * qJD(5), qJD(2) * t32 + qJD(3) * t34 + qJD(5) * t52 + t1108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1205, -t1218, -t1188, -t1205, -t334 * t933 - t939, 0, qJD(2) * t118 + qJD(3) * t117 - qJD(5) * t239 + t915, qJD(2) * t114 + qJD(3) * t112 + qJD(5) * t236 + t916, 0, 0 -(-t909 - t913) * t1211 + t1176, t465 + t933 * t174 - (-qJD(5) * t693 + t839) * t1211, t308 * t933 + t707 * t939 + t1226 -(t909 - t914) * t1211 - t1176, t311 * t933 + t710 * t939 - t1223, t1210, t1066 + t43 * qJD(2) + t54 * qJD(3) + (t707 * t845 - t229) * qJD(5) + t84 * qJD(6), t1065 + t44 * qJD(2) + t55 * qJD(3) + t309 * qJD(4) + (t710 * t845 + t1041) * qJD(5) + t82 * qJD(6), t16 * qJD(2) + t18 * qJD(3) + t175 * qJD(4) + qJD(5) * t820 - t1100, t1112 + t3 * qJD(2) + t5 * qJD(3) + t52 * qJD(4) + (-t239 * pkin(5) + pkin(10) * t820) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t1178 * t1184 - t955, t1217 * t1225 + t707 * t806, t96, t307 * t933 + t710 * t806, t246, qJD(2) * t65 + qJD(3) * t77 + qJD(4) * t307 + qJD(5) * t84 - qJD(6) * t148 + t1104, qJD(2) * t63 + qJD(3) * t75 + qJD(4) * t1217 + qJD(5) * t82 + qJD(6) * t147 + t1105, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t696, -t934, 0, t696, 0, 0, t928, t927, 0, 0, -t634, -t938, 0, t633, 0, 0, qJD(3) * t636 - t995, -t994, -t957, -t946, t522, -t948, 0, -t521, 0, 0, qJD(3) * t264 - t1001 - t621, qJD(3) * t266 - t1000 + t624, -qJD(3) * t201 - t980, -qJD(3) * t94 - qJD(4) * t357 - t979, -t337, t1218, 0, t1205, 0, 0, qJD(3) * t107 - qJD(5) * t110 - t1006 - t505, qJD(3) * t115 + qJD(5) * t113 - t1005 - t508, -qJD(3) * t88 - t1063, qJD(3) * t25 - qJD(4) * t199 - t1060, t130, t98, t93, t129, t92, -t1210, -qJD(3) * t38 + qJD(5) * t42 + qJD(6) * t64 - t1083 - t910, -qJD(3) * t40 + qJD(5) * t45 + qJD(6) * t62 - t1082 + t283, qJD(3) * t14 + qJD(5) * t17 + t1102 - t1111, qJD(3) * t2 + qJD(4) * t33 + qJD(5) * t4 - t1114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(2) * t877, -pkin(2) * t879, 0, 0, 0, 0, 0, 0, 0, 0, -t672, -t673, 0, t523 * qJD(3), 0, 0, 0, 0, 0, 0, t1013, -t596 + t568, 0, qJD(3) * t277, t695, t690, 0, -t695, 0, 0, t1013 * t710 + t571 * t982, t571 * t703 + t559 + t586, t463 - t442, qJD(3) * t240 + qJD(5) * t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t935 + (-t878 - t877) * pkin(2) (-t880 - t879) * pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t672 - t801, -t673 - t800, -t973 (t1109 * t679 - t1110 * t678) * t1116 - t807, 0, 0, 0, 0, 0, 0, qJD(5) * t419 - t595 - t805, qJD(5) * t417 - t596 - t802, -t1020 (t612 * t669 + t613 * t671) * qJD(3) + t809, t695, t690, 0, -t695, 0, 0, qJD(5) * t404 + qJD(6) * t399 - t612 * t863 - t1107, qJD(5) * t401 + qJD(6) * t400 + t586 - t774, qJD(5) * t252 + t463 - t811 (t464 * t665 + t612 * t664) * qJD(3) + t103 * qJD(5) + t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937, t936, 0, -t947, 0, 0, 0, 0, 0, 0, -t1195, -t1219, 0, -t974, 0, 0, 0, 0, 0, 0, -t498, t965, -t956, t1062; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t419 - t569 - t804, qJD(3) * t417 + t568 - t803, 0, 0, t269, t171, -t964, -t269, 0, 0, t1106 + qJD(3) * t404 + qJD(6) * t422 + (-qJD(2) - qJD(5)) * t710 * t579, qJD(3) * t401 + qJD(6) * t423 + t559 - t773, qJD(3) * t252 - t442 - t810, t103 * qJD(3) + (-t579 * pkin(5) - pkin(10) * t454) * qJD(5) + t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t406, t274, -t263, t273, -t1196, qJD(3) * t399 + qJD(5) * t422 - t572 * t703 - t771, qJD(3) * t400 + qJD(5) * t423 + t572 * t982 - t772, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t634, -t938, 0, t633, 0, 0, -t636 * qJD(2) - t740, -t912, 0, 0, t522, -t948, 0, -t521, 0, 0, -qJD(2) * t264 - t621 + t999, -qJD(2) * t266 + t624 + t998, qJD(2) * t201 - t981, qJD(2) * t94 + qJD(4) * t455 - t978, -t337, t1218, 0, t1205, 0, 0, -qJD(2) * t107 - qJD(5) * t109 - t1004 - t505, -qJD(2) * t115 + qJD(5) * t111 - t1003 - t508, qJD(2) * t88 - t1064, -qJD(2) * t25 + qJD(4) * t244 - t1059, t130, t98, t93, t129, t92, -t1210, qJD(2) * t38 + qJD(5) * t53 + qJD(6) * t76 - t1081 - t910, qJD(2) * t40 + qJD(5) * t56 + qJD(6) * t74 - t1080 + t283, -qJD(2) * t14 + qJD(5) * t19 + t1101 - t1111, -qJD(2) * t2 + qJD(4) * t35 + qJD(5) * t6 - t1113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, pkin(2) * t878 - t935, pkin(2) * t880, 0, 0, 0, 0, 0, 0, 0, 0, t801, t800, t973, t807, 0, 0, 0, 0, 0, 0, qJD(5) * t418 + t805, qJD(5) * t416 + t802, t1020, -t809, t695, t690, 0, -t695, 0, 0, -qJD(5) * t403 - qJD(6) * t397 + t612 * t989 + t1107, qJD(5) * t402 - qJD(6) * t398 + t774, qJD(5) * t253 + t811, qJD(5) * t104 - t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661, t660, 0, 0, t695, t690, 0, -t695, 0, 0, -t661 * t710 + t664 * t982, t664 * t703 + t653, -t570, t393 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937, t936, 0, t945, 0, 0, 0, 0, 0, 0, -t1195, -t1219, 0, t972, 0, 0, 0, 0, 0, 0, -t498, t965, -t956, t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661 - t758, t660 - t757, 0, 0, t269, t171, -t964, -t269, 0, 0, t671 * t710 * t932 + qJD(6) * t549 + t808, qJD(6) * t550 + t653 - t749, -t570 - t759 (-t671 * pkin(5) - pkin(10) * t587) * qJD(5) + t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t406, t274, -t263, t273, -t1196, qJD(5) * t549 - t665 * t703 - t751, qJD(5) * t550 + t665 * t982 - t750, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t519, -t520, -t949, qJD(2) * t357 - qJD(3) * t455 - t1002, 0, 0, 0, 0, 0, 0, -t177, -t1188, -t976, qJD(2) * t199 - qJD(3) * t244 - t1103, 0, 0, 0, 0, 0, 0, -t287 + t925 - t1009, -qJD(5) * t303 + qJD(6) * t316 - t1199 * t933 - t1007, t176 * qJD(5) + t323 * t933, -qJD(2) * t33 - qJD(3) * t35 - qJD(5) * t51 - t1108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, -t936, 0, t947, 0, 0, 0, 0, 0, 0, t1195, t1219, 0, t974, 0, 0, 0, 0, 0, 0, t498, -t965, t956, -t1062; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, -t936, 0, -t945, 0, 0, 0, 0, 0, 0, t1195, t1219, 0, -t972, 0, 0, 0, 0, 0, 0, t498, -t965, t956, -t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t952, t1219, 0, 0, 0, 0, 0, 0, 0, 0, t960, -t963, t977, -t1058; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, -t703 + t958, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1205, t1218, 0, t1205, 0, 0, qJD(2) * t110 + qJD(3) * t109 - qJD(4) * t334 - t915, -qJD(2) * t113 - qJD(3) * t111 - t508 - t916, 0, 0, -t1205 * t706 - t1175, -t1211 * t840 - t173 * t933 + t465, -qJD(6) * t1208 + t302 * t933 - t1224, -t1205 * t705 + t1175, qJD(6) * t304 + t1223, -t1210, -qJD(2) * t42 - qJD(3) * t53 - qJD(4) * t311 - qJD(6) * t83 - t1066, -qJD(2) * t45 - qJD(3) * t56 + qJD(4) * t303 + qJD(6) * t81 - t1065, -qJD(2) * t17 - qJD(3) * t19 - qJD(4) * t176 + t1100, -qJD(2) * t4 - qJD(3) * t6 + qJD(4) * t51 - t1112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t418 + t804, -qJD(3) * t416 + t803, 0, 0, -t270, t172, t964, t270, 0, 0, qJD(3) * t403 - qJD(6) * t420 + t579 * t989 - t1106, -qJD(3) * t402 - qJD(6) * t421 + t773, -qJD(3) * t253 + t810, -qJD(3) * t104 - t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, t757, 0, 0, -t270, t172, t964, t270, 0, 0, -qJD(6) * t547 + t671 * t986 - t808, -qJD(6) * t548 + t749, t759, -t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t952, -t1219, 0, 0, 0, 0, 0, 0, 0, 0, -t960, t963, -t977, t1058; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t695, t690, 0, -t695, 0, 0, -pkin(5) * t982, -pkin(5) * t703, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t406, t703 - t959, -t263, t962 - t982, -t1196, -pkin(10) * t703 - t733, pkin(10) * t982 - t732, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, 0.2e1 * t1178 * t1193 + t955, qJD(5) * t1208 - t1205 * t707 - t315 * t933, -t96, -t304 * qJD(5) - t1205 * t710 + t306 * t933, t246, -qJD(2) * t64 - qJD(3) * t76 + qJD(4) * t306 + qJD(5) * t83 - t1104, -qJD(2) * t62 - qJD(3) * t74 - qJD(4) * t316 - qJD(5) * t81 - t1105, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, t405, -t292, t263, t289, t1196, qJD(3) * t397 + qJD(5) * t420 + t771, qJD(3) * t398 + qJD(5) * t421 + t772, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, t405, -t292, t263, t289, t1196, qJD(5) * t547 + t751, qJD(5) * t548 + t750, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t958, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, t405, t959, t263, -t962, t1196, t733, t732, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
