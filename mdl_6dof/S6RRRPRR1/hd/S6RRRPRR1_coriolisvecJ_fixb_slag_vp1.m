% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRR1_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRPRR1_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:02:11
% EndTime: 2019-03-09 18:03:54
% DurationCPUTime: 87.56s
% Computational Cost: add. (66770->1489), mult. (55847->1896), div. (0->0), fcn. (48701->12), ass. (0->780)
t1301 = Icges(4,3) + Icges(5,3);
t698 = qJ(2) + qJ(3);
t660 = pkin(11) + t698;
t639 = sin(t660);
t640 = cos(t660);
t666 = sin(t698);
t667 = cos(t698);
t1294 = Icges(4,5) * t667 + Icges(5,5) * t640 - Icges(4,6) * t666 - Icges(5,6) * t639;
t1300 = Icges(4,5) * t666 + Icges(5,5) * t639 + Icges(4,6) * t667 + Icges(5,6) * t640;
t704 = cos(qJ(1));
t1299 = t1301 * t704;
t701 = sin(qJ(1));
t1064 = t667 * t701;
t1067 = t666 * t701;
t1070 = t640 * t701;
t1073 = t639 * t701;
t1295 = -Icges(4,5) * t1064 - Icges(5,5) * t1070 + Icges(4,6) * t1067 + Icges(5,6) * t1073 + t1299;
t1298 = t1294 * t704 + t1301 * t701;
t1132 = Icges(5,4) * t639;
t534 = Icges(5,2) * t640 + t1132;
t627 = Icges(5,4) * t640;
t536 = Icges(5,1) * t639 + t627;
t1133 = Icges(4,4) * t666;
t562 = Icges(4,2) * t667 + t1133;
t638 = Icges(4,4) * t667;
t564 = Icges(4,1) * t666 + t638;
t1297 = t534 * t639 - t536 * t640 + t562 * t666 - t564 * t667;
t1116 = Icges(5,6) * t704;
t415 = Icges(5,4) * t1070 - Icges(5,2) * t1073 - t1116;
t1125 = Icges(5,5) * t704;
t594 = Icges(5,4) * t1073;
t417 = Icges(5,1) * t1070 - t1125 - t594;
t1117 = Icges(4,6) * t704;
t456 = Icges(4,4) * t1064 - Icges(4,2) * t1067 - t1117;
t1126 = Icges(4,5) * t704;
t618 = Icges(4,4) * t1067;
t458 = Icges(4,1) * t1064 - t1126 - t618;
t1293 = t415 * t639 - t417 * t640 + t456 * t666 - t458 * t667;
t537 = Icges(5,1) * t640 - t1132;
t418 = Icges(5,5) * t701 + t537 * t704;
t565 = Icges(4,1) * t667 - t1133;
t459 = Icges(4,5) * t701 + t565 * t704;
t1296 = -t459 * t1064 - t418 * t1070;
t1292 = t1300 * t704;
t1291 = t1300 * t701;
t847 = -Icges(5,2) * t639 + t627;
t416 = Icges(5,6) * t701 + t704 * t847;
t848 = -Icges(4,2) * t666 + t638;
t457 = Icges(4,6) * t701 + t704 * t848;
t1290 = t416 * t639 + t457 * t666;
t1289 = t1297 * t701 + t1292;
t1288 = -t1297 * t704 + t1291;
t1287 = t1293 * t701;
t1286 = t1298 * t704 + t1296;
t1285 = t1298 * qJD(1);
t1063 = t667 * t704;
t1069 = t640 * t704;
t1225 = -t459 * t1063 - t418 * t1069 - t1298 * t701;
t1284 = -t458 * t1063 - t417 * t1069 + t1295 * t701;
t1283 = t1295 * t704;
t650 = qJ(5) + t660;
t629 = sin(t650);
t1077 = t629 * t701;
t699 = sin(qJ(6));
t1050 = t704 * t699;
t702 = cos(qJ(6));
t1058 = t701 * t702;
t630 = cos(t650);
t492 = t1058 * t630 - t1050;
t477 = Icges(7,4) * t492;
t1056 = t702 * t704;
t1061 = t699 * t701;
t491 = t1061 * t630 + t1056;
t263 = -Icges(7,2) * t491 + Icges(7,6) * t1077 + t477;
t476 = Icges(7,4) * t491;
t267 = -Icges(7,1) * t492 - Icges(7,5) * t1077 + t476;
t1272 = t263 * t699 + t267 * t702;
t260 = Icges(7,5) * t492 - Icges(7,6) * t491 + Icges(7,3) * t1077;
t125 = -t1272 * t629 - t260 * t630;
t1258 = t1283 - t1287;
t1257 = -t1067 * t457 - t1073 * t416 - t1286;
t1066 = t666 * t704;
t1072 = t639 * t704;
t1256 = -t1066 * t456 - t1072 * t415 - t1284;
t1255 = -t1066 * t457 - t1072 * t416 - t1225;
t1236 = -t562 + t565;
t695 = qJD(2) + qJD(3);
t885 = t1236 * t695;
t1235 = t564 + t848;
t886 = t1235 * t695;
t1238 = -t534 + t537;
t889 = t1238 * t695;
t1237 = t536 + t847;
t890 = t1237 * t695;
t1282 = qJD(1) * t1300 - t639 * t890 + t640 * t889 - t666 * t886 + t667 * t885;
t1242 = -t564 * t704 - t457;
t904 = (-t565 * t701 + t1126) * qJD(1) + t1242 * t695;
t1241 = -t562 * t704 + t459;
t906 = (-t701 * t848 + t1117) * qJD(1) + t1241 * t695;
t1245 = -t536 * t704 - t416;
t908 = (-t537 * t701 + t1125) * qJD(1) + t1245 * t695;
t1244 = -t534 * t704 + t418;
t910 = (-t701 * t847 + t1116) * qJD(1) + t1244 * t695;
t1281 = -t639 * t910 + t640 * t908 - t666 * t906 + t667 * t904 + t1285;
t1243 = -t564 * t701 - t456;
t903 = qJD(1) * t459 + t1243 * t695;
t1062 = t695 * t701;
t905 = qJD(1) * t457 - t1062 * t562 + t458 * t695;
t1246 = -t536 * t701 - t415;
t907 = qJD(1) * t418 + t1246 * t695;
t909 = qJD(1) * t416 - t1062 * t534 + t417 * t695;
t1280 = qJD(1) * t1295 + t639 * t909 - t640 * t907 + t666 * t905 - t667 * t903;
t1279 = qJD(1) * t1297 + t1294 * t695;
t1278 = qJD(1) * t1293 - t1291 * t695 + t1285;
t1277 = -t1292 * t695 + (-t1294 * t701 - t418 * t640 - t459 * t667 + t1290 + t1299) * qJD(1);
t1276 = t1288 * qJD(1);
t1275 = t1289 * qJD(1);
t858 = rSges(7,1) * t702 - rSges(7,2) * t699;
t359 = -rSges(7,3) * t630 + t629 * t858;
t1160 = pkin(5) * t629;
t527 = -pkin(10) * t630 + t1160;
t1250 = t359 + t527;
t859 = rSges(7,1) * t492 - rSges(7,2) * t491;
t269 = rSges(7,3) * t1077 + t859;
t318 = t359 * t701;
t1148 = rSges(7,3) * t629;
t800 = t858 * t630;
t360 = t800 + t1148;
t659 = qJD(5) + t695;
t555 = t659 * t704;
t974 = qJD(6) * t701;
t410 = -t629 * t974 + t555;
t1159 = pkin(5) * t630;
t528 = pkin(10) * t629 + t1159;
t975 = qJD(6) * t630;
t587 = qJD(1) - t975;
t932 = t630 * t974;
t976 = qJD(6) * t629;
t979 = qJD(1) * t701;
t1274 = t1250 * t979 + t269 * t976 - t318 * t587 - t359 * t932 + t410 * t360 + t555 * t528;
t1161 = pkin(4) * t640;
t599 = t695 * t704;
t531 = t599 * t1161;
t649 = pkin(3) * t667;
t544 = t599 * t649;
t940 = t666 * t979;
t600 = pkin(3) * t940;
t941 = t639 * t979;
t1273 = pkin(4) * t941 + t531 + t544 + t600;
t115 = t1077 * t260 - t263 * t491 - t267 * t492;
t1076 = t629 * t704;
t493 = -t1050 * t630 + t1058;
t494 = t1056 * t630 + t1061;
t262 = Icges(7,5) * t494 + Icges(7,6) * t493 + Icges(7,3) * t1076;
t1130 = Icges(7,4) * t494;
t265 = Icges(7,2) * t493 + Icges(7,6) * t1076 + t1130;
t478 = Icges(7,4) * t493;
t268 = Icges(7,1) * t494 + Icges(7,5) * t1076 + t478;
t116 = t262 * t1077 - t491 * t265 + t492 * t268;
t843 = Icges(7,5) * t702 - Icges(7,6) * t699;
t353 = -Icges(7,3) * t630 + t629 * t843;
t1128 = Icges(7,4) * t702;
t845 = -Icges(7,2) * t699 + t1128;
t355 = -Icges(7,6) * t630 + t629 * t845;
t1129 = Icges(7,4) * t699;
t851 = Icges(7,1) * t702 - t1129;
t357 = -Icges(7,5) * t630 + t629 * t851;
t148 = t1077 * t353 - t355 * t491 + t357 * t492;
t665 = qJD(2) * t701;
t598 = qJD(3) * t701 + t665;
t554 = qJD(5) * t701 + t598;
t973 = qJD(6) * t704;
t409 = t629 * t973 + t554;
t37 = -t115 * t410 + t116 * t409 + t148 * t587;
t117 = t260 * t1076 + t493 * t263 - t267 * t494;
t118 = t262 * t1076 + t493 * t265 + t494 * t268;
t149 = t1076 * t353 + t355 * t493 + t357 * t494;
t38 = -t117 * t410 + t118 * t409 + t149 * t587;
t1271 = 0.2e1 * qJD(2);
t1270 = -t1278 * t701 + t1280 * t704;
t1269 = t1277 * t701 + t1281 * t704;
t1268 = t1278 * t704 + t1280 * t701;
t1267 = -t1277 * t704 + t1281 * t701;
t700 = sin(qJ(2));
t1266 = rSges(3,2) * t700;
t1265 = t1257 * t598 - t1258 * t599 - t1275;
t1264 = t1255 * t598 - t1256 * t599 + t1276;
t1262 = t1279 * t701 + t1282 * t704;
t1261 = -t1279 * t704 + t1282 * t701;
t1260 = -t639 * t907 - t640 * t909 - t666 * t903 - t667 * t905;
t1259 = t639 * t908 + t640 * t910 + t666 * t904 + t667 * t906;
t1254 = t415 * t640 + t417 * t639 + t456 * t667 + t458 * t666;
t1253 = t416 * t640 + t418 * t639 + t457 * t667 + t459 * t666;
t446 = t528 * t701;
t1252 = t269 + t446;
t271 = t494 * rSges(7,1) + t493 * rSges(7,2) + rSges(7,3) * t1076;
t1074 = t630 * t704;
t448 = pkin(5) * t1074 + pkin(10) * t1076;
t1251 = t271 + t448;
t1075 = t630 * t701;
t1115 = Icges(6,6) * t704;
t382 = Icges(6,4) * t1075 - Icges(6,2) * t1077 - t1115;
t613 = Icges(6,4) * t630;
t507 = Icges(6,1) * t629 + t613;
t1249 = -t507 * t701 - t382;
t846 = -Icges(6,2) * t629 + t613;
t383 = Icges(6,6) * t701 + t704 * t846;
t1248 = -t507 * t704 - t383;
t1131 = Icges(6,4) * t629;
t508 = Icges(6,1) * t630 - t1131;
t385 = Icges(6,5) * t701 + t508 * t704;
t505 = Icges(6,2) * t630 + t1131;
t1247 = -t505 * t704 + t385;
t1240 = -t505 + t508;
t1239 = t507 + t846;
t1190 = qJD(1) * t1237 + t1244 * t598 - (-Icges(5,2) * t1070 + t417 - t594) * t599;
t1191 = qJD(1) * t1235 + t1241 * t598 - (-Icges(4,2) * t1064 + t458 - t618) * t599;
t735 = qJD(1) * t1236 + t1242 * t598 - t1243 * t599;
t736 = qJD(1) * t1238 + t1245 * t598 - t1246 * t599;
t1234 = -t1190 * t639 - t1191 * t666 + t736 * t640 + t735 * t667;
t1233 = qJD(1) * t1294 + t1291 * t599 - t1292 * t598;
t1232 = t1273 + t1274;
t1231 = t1290 + t1295;
t1152 = rSges(6,1) * t630;
t522 = -rSges(6,2) * t629 + t1152;
t351 = t555 * t522;
t521 = rSges(6,1) * t629 + rSges(6,2) * t630;
t1230 = t521 * t979 + t1273 + t351;
t978 = qJD(1) * t704;
t1162 = pkin(4) * t639;
t1163 = pkin(3) * t666;
t542 = t598 * t1163;
t1146 = pkin(2) * qJD(2);
t961 = t700 * t1146;
t625 = t701 * t961;
t663 = qJD(4) * t704;
t943 = -t542 - t625 - t663;
t870 = -t598 * t1162 + t943;
t703 = cos(qJ(2));
t652 = t703 * pkin(2) + pkin(1);
t577 = t649 + t652;
t496 = t577 + t1161;
t467 = t704 * t496;
t547 = t704 * t577;
t705 = -pkin(8) - pkin(7);
t694 = -qJ(4) + t705;
t668 = -pkin(9) + t694;
t989 = -t668 + t694;
t276 = t701 * t989 + t467 - t547;
t690 = t701 * pkin(7);
t615 = t704 * pkin(1) + t690;
t620 = t704 * t652;
t883 = -t701 * t705 + t620;
t443 = t883 - t615;
t1017 = t443 + t615;
t988 = -t694 + t705;
t345 = t701 * t988 + t547 - t620;
t948 = t345 + t1017;
t875 = t276 + t948;
t75 = t271 * t587 - t359 * t409 - t527 * t554 + (t448 + t875) * qJD(1) + t870;
t1106 = qJD(1) * t75;
t1068 = t659 * t701;
t778 = t1068 * t630 + t629 * t978;
t814 = t702 * t587;
t880 = qJD(1) * t630 - qJD(6);
t959 = t629 * t1068;
t232 = t701 * t814 + (-t704 * t880 + t959) * t699;
t1078 = t629 * t659;
t813 = t587 * t699;
t233 = t880 * t1056 + (-t1078 * t702 + t813) * t701;
t860 = rSges(7,1) * t233 + rSges(7,2) * t232;
t147 = rSges(7,3) * t778 + t860;
t857 = -rSges(7,1) * t699 - rSges(7,2) * t702;
t204 = t659 * t800 + (rSges(7,3) * t659 + qJD(6) * t857) * t629;
t244 = t778 * pkin(10) + (t630 * t978 - t959) * pkin(5);
t968 = qJD(1) * qJD(2);
t647 = t701 * t968;
t967 = qJD(1) * qJD(3);
t569 = t701 * t967 + t647;
t965 = qJD(1) * qJD(5);
t512 = t701 * t965 + t569;
t287 = qJD(6) * t778 + t512;
t398 = t528 * t659;
t1054 = t703 * qJD(2) ^ 2;
t816 = -pkin(2) * t1054 * t704 + qJD(1) * t625;
t966 = qJD(1) * qJD(4);
t762 = t569 * t1163 - t695 * t544 + t704 * t966 + t816;
t748 = t569 * t1162 - t695 * t531 + t762;
t1012 = t496 - t577;
t558 = -t1162 - t1163;
t406 = t558 * t695 - t961;
t545 = -t1163 * t695 - t961;
t612 = t668 * t979;
t624 = t694 * t979;
t166 = -t612 + t624 + (t406 - t545) * t701 + t1012 * t978;
t1156 = pkin(1) - t652;
t991 = t705 * t979 + t625;
t343 = (-t1156 * t704 - t690) * qJD(1) - t991;
t578 = t615 * qJD(1);
t1040 = -t343 - t578;
t1000 = t577 - t652;
t864 = t545 * t701 - t624 - t663;
t193 = t1000 * t978 + t864 + t991;
t955 = -t193 + t1040;
t879 = -t166 + t955;
t933 = t659 * t976;
t24 = -t269 * t933 - t147 * t587 - t204 * t410 + t287 * t359 - t398 * t555 + t512 * t527 + (-t244 + t879) * qJD(1) + t748;
t1228 = (t1106 + t24) * t704;
t682 = t701 * rSges(6,3);
t396 = rSges(6,1) * t1074 - rSges(6,2) * t1076 + t682;
t107 = -t521 * t554 + (t396 + t875) * qJD(1) + t870;
t439 = t521 * t701;
t224 = -t659 * t439 + (t522 * t704 + t682) * qJD(1);
t389 = t522 * t659;
t53 = -t389 * t555 + t512 * t521 + (-t224 + t879) * qJD(1) + t748;
t1227 = (qJD(1) * t107 + t53) * t704;
t1224 = t37 * t701 + t38 * t704;
t692 = t704 * pkin(7);
t614 = pkin(1) * t701 - t692;
t657 = t704 * t705;
t993 = t701 * t652 + t657;
t442 = t614 - t993;
t977 = qJD(2) * t704;
t1025 = -t442 * t665 + t443 * t977;
t462 = rSges(4,1) * t1064 - rSges(4,2) * t1067 - t704 * rSges(4,3);
t684 = t701 * rSges(4,3);
t463 = rSges(4,1) * t1063 - rSges(4,2) * t1066 + t684;
t156 = t462 * t598 + t463 * t599 + t1025;
t1018 = t442 - t614;
t1150 = rSges(4,2) * t667;
t566 = rSges(4,1) * t666 + t1150;
t936 = t700 * t977;
t881 = pkin(2) * t936;
t782 = -t566 * t599 - t881;
t171 = (-t462 + t1018) * qJD(1) + t782;
t172 = -t566 * t598 - t625 + (t463 + t1017) * qJD(1);
t525 = t566 * t701;
t526 = t566 * t704;
t1154 = rSges(4,1) * t667;
t567 = -rSges(4,2) * t666 + t1154;
t1223 = -t171 * (qJD(1) * t525 - t599 * t567) - t156 * (-t598 * t525 - t526 * t599) - t172 * (-qJD(1) * t526 - t567 * t598);
t662 = qJD(4) * t701;
t812 = t662 - t881;
t1222 = -t269 * t587 - t359 * t410 - t527 * t555 + t812;
t1003 = t701 * t577 + t704 * t694;
t1014 = -t701 * t496 - t704 * t668;
t275 = t1003 + t1014;
t1221 = -qJD(1) * t275 - t558 * t599;
t1170 = t598 / 0.2e1;
t1169 = -t599 / 0.2e1;
t942 = t629 * t979;
t1001 = rSges(6,2) * t942 + rSges(6,3) * t978;
t958 = t629 * t555;
t779 = -t630 * t979 - t958;
t957 = t630 * t555;
t223 = rSges(6,1) * t779 - rSges(6,2) * t957 + t1001;
t648 = t704 * t968;
t570 = t704 * t967 + t648;
t513 = t704 * t965 + t570;
t1071 = t640 * t695;
t372 = t704 * t406;
t509 = t704 * t545;
t165 = t372 - t509 + (-t1012 * t701 + t704 * t989) * qJD(1);
t1065 = t667 * t695;
t1008 = t509 + t662;
t192 = t881 + (-t1000 * t701 + t704 * t988) * qJD(1) + t1008;
t658 = pkin(7) * t978;
t342 = -t881 - t658 + (t1156 * t701 - t657) * qJD(1);
t559 = qJD(1) * (-pkin(1) * t979 + t658);
t741 = qJD(1) * t342 + t559 + (-t1054 * t701 - t648 * t700) * pkin(2);
t715 = qJD(1) * t192 + t701 * t966 + (-t1065 * t598 - t570 * t666) * pkin(3) + t741;
t709 = qJD(1) * t165 + (-t1071 * t598 - t570 * t639) * pkin(4) + t715;
t52 = qJD(1) * t223 - t389 * t554 - t513 * t521 + t709;
t1219 = t52 * t701;
t683 = t701 * rSges(5,3);
t423 = rSges(5,1) * t1069 - rSges(5,2) * t1072 + t683;
t1149 = rSges(5,2) * t640;
t539 = rSges(5,1) * t639 + t1149;
t139 = -t539 * t598 + (t423 + t948) * qJD(1) + t943;
t479 = t539 * t701;
t1153 = rSges(5,1) * t640;
t540 = -rSges(5,2) * t639 + t1153;
t255 = -t695 * t479 + (t540 * t704 + t683) * qJD(1);
t460 = t540 * t695;
t86 = -t460 * t599 + t539 * t569 + (-t255 + t955) * qJD(1) + t762;
t1217 = qJD(1) * t139 + t86;
t1164 = pkin(2) * t700;
t524 = t558 - t1164;
t591 = -t1163 - t1164;
t1006 = t524 - t591;
t347 = t1006 * t704;
t1081 = t598 * t667;
t919 = t591 + t1164;
t475 = t919 * t704;
t869 = -pkin(3) * t1081 + qJD(1) * t475;
t1215 = qJD(1) * t347 + t869;
t917 = t558 + t1163;
t402 = t917 * t704;
t776 = (-t666 * t978 - t1081) * pkin(3);
t1214 = qJD(1) * t402 + t776;
t590 = qJD(1) * t614;
t1213 = qJD(1) * t442 - t590;
t401 = t917 * t701;
t1212 = -t598 * t401 - t402 * t599;
t681 = Icges(3,4) * t703;
t849 = -Icges(3,2) * t700 + t681;
t605 = Icges(3,1) * t700 + t681;
t344 = t993 - t1003;
t1209 = qJD(1) * t344 + t1213;
t1208 = t701 * t880 + t958;
t503 = Icges(6,5) * t629 + Icges(6,6) * t630;
t1087 = t503 * t704;
t1095 = t383 * t629;
t1110 = Icges(6,3) * t704;
t504 = Icges(6,5) * t630 - Icges(6,6) * t629;
t1207 = -t659 * t1087 + (-t385 * t630 - t504 * t701 + t1095 + t1110) * qJD(1);
t1088 = t503 * t701;
t1124 = Icges(6,5) * t704;
t582 = Icges(6,4) * t1077;
t384 = Icges(6,1) * t1075 - t1124 - t582;
t828 = t382 * t629 - t384 * t630;
t381 = Icges(6,3) * t701 + t504 * t704;
t984 = qJD(1) * t381;
t1206 = qJD(1) * t828 - t1088 * t659 + t984;
t1113 = Icges(3,3) * t704;
t602 = Icges(3,5) * t703 - Icges(3,6) * t700;
t601 = Icges(3,5) * t700 + Icges(3,6) * t703;
t786 = qJD(2) * t601;
t500 = Icges(3,6) * t701 + t704 * t849;
t1089 = t500 * t700;
t1134 = Icges(3,4) * t700;
t606 = Icges(3,1) * t703 - t1134;
t502 = Icges(3,5) * t701 + t606 * t704;
t821 = -t502 * t703 + t1089;
t1201 = -t704 * t786 + (-t602 * t701 + t1113 + t821) * qJD(1);
t1057 = t701 * t703;
t1060 = t700 * t701;
t1118 = Icges(3,6) * t704;
t499 = Icges(3,4) * t1057 - Icges(3,2) * t1060 - t1118;
t1090 = t499 * t700;
t1127 = Icges(3,5) * t704;
t634 = Icges(3,4) * t1060;
t501 = Icges(3,1) * t1057 - t1127 - t634;
t822 = -t501 * t703 + t1090;
t498 = Icges(3,3) * t701 + t602 * t704;
t981 = qJD(1) * t498;
t1200 = qJD(1) * t822 - t701 * t786 + t981;
t820 = t505 * t629 - t507 * t630;
t1199 = qJD(1) * t820 + t504 * t659;
t603 = Icges(3,2) * t703 + t1134;
t817 = t603 * t700 - t605 * t703;
t1196 = t817 * qJD(1) + t602 * qJD(2);
t497 = Icges(3,5) * t1057 - Icges(3,6) * t1060 - t1113;
t200 = -t497 * t704 - t701 * t822;
t1195 = (-t603 * t704 + t502) * t701 - (-Icges(3,2) * t1057 + t501 - t634) * t704;
t230 = t1208 * t699 + t704 * t814;
t231 = -t1208 * t702 + t704 * t813;
t953 = t231 * rSges(7,1) + t230 * rSges(7,2) + rSges(7,3) * t957;
t146 = -rSges(7,3) * t942 + t953;
t541 = pkin(10) * t957;
t243 = pkin(5) * t779 - pkin(10) * t942 + t541;
t777 = -t942 + t957;
t288 = qJD(6) * t777 + t513;
t23 = qJD(1) * t243 + t587 * t146 - t409 * t204 + t271 * t933 - t288 * t359 - t554 * t398 - t513 * t527 + t709;
t1194 = t23 * t701 + t1228;
t793 = t843 * t630;
t829 = -t355 * t699 + t357 * t702;
t832 = -t265 * t699 + t268 * t702;
t1193 = t409 * (-t353 * t704 - t832) - t410 * (-t353 * t701 + t1272) + t587 * (Icges(7,3) * t629 + t793 - t829);
t844 = -Icges(7,2) * t702 - t1129;
t1192 = (t844 * t629 + t357) * t587 + (-Icges(7,2) * t494 + t268 + t478) * t409 - (-Icges(7,2) * t492 - t267 - t476) * t410;
t1189 = qJD(1) * t1239 + t1247 * t554 - (-Icges(6,2) * t1075 + t384 - t582) * t555;
t1188 = t287 / 0.2e1;
t1187 = t288 / 0.2e1;
t1186 = t701 * t1169 + t1170 * t704;
t1185 = -t409 / 0.2e1;
t1184 = t409 / 0.2e1;
t1183 = -t410 / 0.2e1;
t1182 = t410 / 0.2e1;
t1181 = t512 / 0.2e1;
t1180 = t513 / 0.2e1;
t1179 = -t554 / 0.2e1;
t1178 = t554 / 0.2e1;
t1177 = -t555 / 0.2e1;
t1176 = t555 / 0.2e1;
t1175 = t569 / 0.2e1;
t1174 = t570 / 0.2e1;
t1173 = -t587 / 0.2e1;
t1172 = t587 / 0.2e1;
t1171 = -t598 / 0.2e1;
t1168 = t599 / 0.2e1;
t1167 = t701 / 0.2e1;
t1166 = -t704 / 0.2e1;
t1165 = -rSges(7,3) - pkin(10);
t1158 = -qJD(1) / 0.2e1;
t1157 = qJD(1) / 0.2e1;
t1155 = rSges(3,1) * t703;
t1151 = rSges(3,2) * t703;
t1145 = t23 * t704;
t1144 = t24 * t701;
t141 = Icges(7,5) * t233 + Icges(7,6) * t232 + Icges(7,3) * t778;
t143 = Icges(7,4) * t233 + Icges(7,2) * t232 + Icges(7,6) * t778;
t145 = Icges(7,1) * t233 + Icges(7,4) * t232 + Icges(7,5) * t778;
t31 = (-t1272 * t659 - t141) * t630 + (-t143 * t699 + t145 * t702 + t260 * t659 + (-t263 * t702 + t267 * t699) * qJD(6)) * t629;
t1143 = t31 * t410;
t140 = Icges(7,5) * t231 + Icges(7,6) * t230 + Icges(7,3) * t777;
t142 = Icges(7,4) * t231 + Icges(7,2) * t230 + Icges(7,6) * t777;
t144 = Icges(7,1) * t231 + Icges(7,4) * t230 + Icges(7,5) * t777;
t32 = (t659 * t832 - t140) * t630 + (-t142 * t699 + t144 * t702 + t262 * t659 + (-t265 * t702 - t268 * t699) * qJD(6)) * t629;
t1142 = t32 * t409;
t685 = t701 * rSges(3,3);
t155 = -t353 * t630 + t629 * t829;
t842 = -Icges(7,5) * t699 - Icges(7,6) * t702;
t195 = t659 * t793 + (Icges(7,3) * t659 + qJD(6) * t842) * t629;
t794 = t845 * t630;
t196 = t659 * t794 + (Icges(7,6) * t659 + qJD(6) * t844) * t629;
t795 = t851 * t630;
t850 = -Icges(7,1) * t699 - t1128;
t197 = t659 * t795 + (Icges(7,5) * t659 + qJD(6) * t850) * t629;
t55 = (t659 * t829 - t195) * t630 + (-t196 * t699 + t197 * t702 + t353 * t659 + (-t355 * t702 - t357 * t699) * qJD(6)) * t629;
t1139 = t155 * t933 + t55 * t587;
t1039 = -t345 - t276;
t945 = -t598 * t344 + t1025;
t765 = -t1039 * t599 - t598 * t275 + t945;
t48 = t269 * t409 + t271 * t410 + t446 * t554 + t448 * t555 + t765;
t1108 = qJD(1) * t48;
t395 = rSges(6,1) * t1075 - rSges(6,2) * t1077 - t704 * rSges(6,3);
t73 = t395 * t554 + t396 * t555 + t765;
t1107 = qJD(1) * t73;
t1084 = t555 * t521;
t530 = t599 * t1162;
t543 = t599 * t1163;
t799 = -t543 + t812;
t949 = t344 + t1018;
t876 = t275 + t949;
t106 = -t1084 - t530 + (-t395 + t876) * qJD(1) + t799;
t1105 = t106 * t701;
t1102 = t125 * t287;
t126 = -t262 * t630 + t629 * t832;
t1101 = t126 * t288;
t1099 = t171 * t701;
t990 = rSges(3,2) * t1060 + t704 * rSges(3,3);
t510 = rSges(3,1) * t1057 - t990;
t608 = rSges(3,1) * t700 + t1151;
t934 = t608 * t977;
t294 = -t934 + (-t510 - t614) * qJD(1);
t1098 = t294 * t701;
t1097 = t294 * t704;
t1055 = t703 * t704;
t1059 = t700 * t704;
t511 = rSges(3,1) * t1055 - rSges(3,2) * t1059 + t685;
t1007 = t511 + t615;
t937 = t608 * t665;
t295 = qJD(1) * t1007 - t937;
t557 = t608 * t704;
t1096 = t295 * t557;
t1080 = t601 * t701;
t1079 = t601 * t704;
t380 = Icges(6,5) * t1075 - Icges(6,6) * t1077 - t1110;
t1053 = t704 * t380;
t1049 = -t204 - t398;
t1044 = -t701 * t344 + t704 * t345;
t1043 = -t384 * t1074 - t701 * t380;
t1042 = t385 * t1074 + t701 * t381;
t1038 = t345 + t423;
t346 = t1006 * t701;
t474 = t919 * t701;
t1037 = -t346 - t474;
t1032 = t701 * t395 + t704 * t396;
t1029 = t372 + t662;
t1024 = -t701 * t442 + t704 * t443;
t1021 = t701 * t462 + t704 * t463;
t1020 = -t501 * t1055 - t701 * t497;
t1019 = t502 * t1055 + t701 * t498;
t1013 = t539 * t979 + t600;
t999 = rSges(5,2) * t941 + rSges(5,3) * t978;
t997 = rSges(4,2) * t940 + rSges(4,3) * t978;
t996 = -t603 + t606;
t995 = t605 + t849;
t994 = t612 + t663;
t992 = rSges(3,3) * t978 + t1266 * t979;
t422 = rSges(5,1) * t1070 - rSges(5,2) * t1073 - t704 * rSges(5,3);
t112 = t1038 * t599 + t422 * t598 + t945;
t986 = qJD(1) * t112;
t980 = qJD(1) * t602;
t181 = -t701 * t820 - t1087;
t972 = t181 * qJD(1);
t298 = -t701 * t817 - t1079;
t969 = t298 * qJD(1);
t964 = pkin(3) * t1065;
t963 = t598 * t1161;
t962 = pkin(4) * t1071;
t960 = t703 * t1146;
t956 = t704 * t192 + t701 * t193 - t344 * t978;
t954 = t704 * t223 + t701 * t224 + t395 * t978;
t284 = -t599 * t1150 + (-t599 * t666 - t667 * t979) * rSges(4,1) + t997;
t285 = -t695 * t525 + (t567 * t704 + t684) * qJD(1);
t952 = t704 * t284 + t701 * t285 + t462 * t978;
t951 = -t396 + t1039;
t950 = t704 * t342 + t701 * t343 - t442 * t978;
t938 = t700 * t978;
t931 = t630 * t973;
t928 = -pkin(1) - t1155;
t927 = t979 / 0.2e1;
t926 = t978 / 0.2e1;
t925 = -t665 / 0.2e1;
t922 = t977 / 0.2e1;
t920 = -t566 - t1164;
t918 = -t539 - t1163;
t915 = (-t701 ^ 2 - t704 ^ 2) * t700;
t914 = (-t701 * t846 + t1115) * qJD(1) + t1247 * t659;
t913 = qJD(1) * t383 - t1068 * t505 + t384 * t659;
t912 = (-t508 * t701 + t1124) * qJD(1) + t1248 * t659;
t911 = qJD(1) * t385 + t1249 * t659;
t334 = t385 * t1075;
t902 = t704 * t381 - t334;
t440 = t521 * t704;
t901 = -t554 * t439 - t440 * t555;
t899 = t598 * t474 + t475 * t599;
t480 = t539 * t704;
t898 = -t598 * t479 - t480 * t599;
t896 = -t380 + t1095;
t895 = t1239 * t659;
t894 = t1240 * t659;
t892 = -qJD(1) * t440 - t522 * t554;
t426 = t502 * t1057;
t891 = t704 * t498 - t426;
t888 = -qJD(1) * t480 - t540 * t598;
t884 = -t497 + t1089;
t878 = -t701 * t275 + t704 * t276 + t1044;
t877 = t1039 - t1251;
t874 = t701 * t422 + t704 * t423 + t1044;
t871 = t1251 * t704 + t1252 * t701;
t868 = -t460 - t964;
t490 = t567 * t695;
t865 = -t490 - t960;
t863 = qJD(1) * t479 - t599 * t540 - t544;
t861 = t1155 - t1266;
t74 = -t530 - t543 + (-t446 + t876) * qJD(1) + t1222;
t856 = t701 * t75 + t704 * t74;
t841 = -t106 * t704 - t107 * t701;
t840 = t115 * t704 - t116 * t701;
t839 = t115 * t701 + t116 * t704;
t838 = t117 * t704 - t118 * t701;
t837 = t117 * t701 + t118 * t704;
t836 = t125 * t704 - t126 * t701;
t835 = t125 * t701 + t126 * t704;
t834 = -t171 * t704 - t172 * t701;
t831 = t269 * t704 - t271 * t701;
t830 = -t295 * t701 - t1097;
t198 = t382 * t630 + t384 * t629;
t296 = t499 * t703 + t501 * t700;
t297 = t500 * t703 + t502 * t700;
t523 = t704 * t543;
t815 = -t542 * t701 - t523;
t811 = -t539 + t591;
t809 = t1252 * t978 + (t146 + t243) * t704 + (t147 + t244) * t701;
t808 = t704 * t165 + t701 * t166 - t275 * t978 + t956;
t254 = -t599 * t1149 + (-t599 * t639 - t640 * t979) * rSges(5,1) + t999;
t807 = t704 * t254 + t701 * t255 + t422 * t978 + t956;
t806 = t878 + t1032;
t556 = t608 * t701;
t797 = -t962 - t964;
t792 = t828 * t701;
t789 = -t960 - t964;
t788 = qJD(2) * t605;
t787 = qJD(2) * t603;
t201 = -t1060 * t500 - t891;
t785 = (-t200 * t704 + t201 * t701) * qJD(2);
t202 = -t1059 * t499 - t1020;
t203 = -t1059 * t500 + t1019;
t784 = (-t202 * t704 + t203 * t701) * qJD(2);
t291 = (t510 * t701 + t511 * t704) * qJD(2);
t783 = t892 - t963;
t781 = -t528 - t1148;
t780 = t598 * t346 + t347 * t599 + t899;
t775 = -t389 + t797;
t774 = -t260 * t410 + t262 * t409 + t353 * t587;
t773 = (-Icges(7,5) * t491 - Icges(7,6) * t492) * t410 - (Icges(7,5) * t493 - Icges(7,6) * t494) * t409 - t842 * t629 * t587;
t772 = -t460 + t789;
t771 = qJD(1) * t504 - t1087 * t554 + t1088 * t555;
t768 = -t521 + t524;
t767 = t342 * t977 + t343 * t665 - t442 * t648 - t443 * t647;
t766 = t871 + t878;
t319 = t359 * t704;
t445 = t527 * t701;
t447 = t527 * t704;
t764 = t269 * t931 - t409 * t318 - t319 * t410 - t554 * t445 - t447 * t555;
t763 = t499 * t704 - t500 * t701;
t761 = t812 + t1209;
t760 = t797 + t1049;
t759 = t524 - t1250;
t758 = t808 + t954;
t757 = t629 * t773;
t751 = t598 * t193 - t570 * t344 + t767;
t750 = (-t700 * t995 + t703 * t996) * qJD(1);
t749 = t789 - t962;
t746 = -t389 + t749;
t743 = t808 + t809;
t742 = t749 + t1049;
t740 = (Icges(7,1) * t493 - t1130 - t265) * t409 - (-Icges(7,1) * t491 - t263 - t477) * t410 + (t850 * t629 - t355) * t587;
t737 = qJD(1) * t1240 + t1248 * t554 - t1249 * t555;
t734 = -t271 * t932 + t764;
t733 = -qJD(1) * t447 + t271 * t976 - t587 * t319 - t359 * t931 - t360 * t409 - t528 * t554;
t730 = qJD(1) * t380 - t629 * t913 + t630 * t911;
t729 = -t629 * t914 + t630 * t912 + t984;
t724 = qJD(1) * t503 - t629 * t895 + t630 * t894;
t327 = qJD(1) * t500 - t701 * t787;
t329 = qJD(1) * t502 - t701 * t788;
t721 = qJD(1) * t497 - qJD(2) * t296 - t327 * t700 + t329 * t703;
t326 = -t704 * t787 + (-t701 * t849 + t1118) * qJD(1);
t328 = -t704 * t788 + (-t606 * t701 + t1127) * qJD(1);
t720 = -qJD(2) * t297 - t326 * t700 + t328 * t703 + t981;
t572 = t849 * qJD(2);
t573 = t606 * qJD(2);
t719 = qJD(1) * t601 - t572 * t700 + t573 * t703 + (-t603 * t703 - t605 * t700) * qJD(2);
t718 = t733 - t963;
t717 = t598 * t166 + (t192 + t165) * t599 + t1039 * t569 - t570 * t275 + t751;
t716 = -t1195 * t700 + t763 * t703;
t108 = t629 * t911 + t630 * t913;
t109 = t629 * t912 + t630 * t914;
t158 = -t792 - t1053;
t159 = -t1077 * t383 - t902;
t160 = -t1076 * t382 - t1043;
t161 = -t1076 * t383 + t1042;
t199 = t383 * t630 + t385 * t629;
t25 = t1076 * t141 + t143 * t493 + t145 * t494 + t230 * t263 - t231 * t267 + t260 * t777;
t26 = t1076 * t140 + t142 * t493 + t144 * t494 + t230 * t265 + t231 * t268 + t262 * t777;
t27 = t1077 * t141 - t143 * t491 + t145 * t492 + t232 * t263 - t233 * t267 + t260 * t778;
t28 = t1077 * t140 - t142 * t491 + t144 * t492 + t232 * t265 + t233 * t268 + t262 * t778;
t44 = t1076 * t195 + t196 * t493 + t197 * t494 + t230 * t355 + t231 * t357 + t353 * t777;
t3 = t117 * t287 + t118 * t288 + t149 * t933 - t25 * t410 + t26 * t409 + t44 * t587;
t314 = t355 * t701;
t315 = t355 * t704;
t316 = t357 * t701;
t317 = t357 * t704;
t356 = Icges(7,6) * t629 + t794;
t358 = Icges(7,5) * t629 + t795;
t45 = t1077 * t195 - t196 * t491 + t197 * t492 + t232 * t355 + t233 * t357 + t353 * t778;
t4 = t115 * t287 + t116 * t288 + t148 * t933 - t27 * t410 + t28 * t409 + t45 * t587;
t42 = -t125 * t410 + t126 * t409 + t155 * t587;
t58 = t1206 * t701 + t730 * t704;
t59 = t1207 * t701 + t729 * t704;
t60 = -t1206 * t704 + t730 * t701;
t61 = -t1207 * t704 + t729 * t701;
t712 = -t1189 * t629 + t737 * t630;
t713 = t1193 * t629;
t79 = -t158 * t555 + t159 * t554 + t972;
t182 = -t704 * t820 + t1088;
t180 = t182 * qJD(1);
t80 = -t160 * t555 + t161 * t554 + t180;
t98 = t1199 * t701 + t724 * t704;
t99 = -t1199 * t704 + t724 * t701;
t714 = (t1189 * t630 + t737 * t629) * t1158 + (t701 * t712 - t704 * t771) * t1176 + (-t60 * t704 + t61 * t701 + (t158 * t701 + t159 * t704) * qJD(1)) * t1177 + (-t58 * t704 + t59 * t701 + (t160 * t701 + t161 * t704) * qJD(1)) * t1178 + (t701 * t771 + t704 * t712) * t1179 + (-t160 * t704 + t161 * t701) * t1180 + (-t158 * t704 + t159 * t701) * t1181 + ((t315 * t491 - t317 * t492) * t409 - (t314 * t491 - t316 * t492) * t410 + (-t356 * t491 + t358 * t492) * t587 + (t1074 * t116 + t148 * t629) * qJD(6) + ((qJD(6) * t115 + t774) * t630 + t713) * t701) * t1182 + (qJD(1) * t839 - t27 * t704 + t28 * t701) * t1183 + (qJD(1) * t837 - t25 * t704 + t26 * t701) * t1184 + ((-t315 * t493 - t317 * t494) * t409 - (-t314 * t493 - t316 * t494) * t410 + (t356 * t493 + t358 * t494) * t587 + (t1075 * t117 + t149 * t629) * qJD(6) + ((qJD(6) * t118 + t774) * t630 + t713) * t704) * t1185 + (((t315 * t699 - t317 * t702 + t262) * t409 - (t314 * t699 - t316 * t702 + t260) * t410 + (-t356 * t699 + t358 * t702 + t353) * t587 + t155 * qJD(6)) * t629 + (qJD(6) * t835 - t1193) * t630) * t1173 - t42 * t976 / 0.2e1 + (-t108 * t704 + t109 * t701 + (t198 * t701 + t199 * t704) * qJD(1)) * t1157 + (qJD(1) * t835 - t31 * t704 + t32 * t701) * t1172 - t836 * t933 / 0.2e1 - t288 * t838 / 0.2e1 - t287 * t840 / 0.2e1 + (t79 + t37) * t927 + (t80 + t38) * t926 - t1224 * t975 / 0.2e1 + (qJD(1) * t98 + t160 * t512 + t161 * t513 + t554 * t59 - t555 * t58 + t3) * t1167 + (qJD(1) * t99 + t158 * t512 + t159 * t513 + t554 * t61 - t555 * t60 + t4) * t1166;
t708 = t714 + t1265 * t927 + t1264 * t926 + (t1257 * t701 - t1258 * t704) * t1175 + (t1255 * t701 - t1256 * t704) * t1174 + (t1233 * t701 + t1234 * t704) * t1171 + (t1270 * t704 + t1269 * t701 + (t1255 * t704 + t1256 * t701) * qJD(1)) * t1170 + (t1268 * t704 + t1267 * t701 + (t1257 * t704 + t1258 * t701) * qJD(1)) * t1169 + (-t1233 * t704 + t1234 * t701) * t1168 + (qJD(1) * t1262 + t1255 * t570 + t1256 * t569 + t1269 * t598 + t1270 * t599) * t1167 + (qJD(1) * t1261 + t1257 * t570 + t1258 * t569 + t1267 * t598 + t1268 * t599) * t1166 + (t1190 * t640 + t1191 * t667 + t736 * t639 + t735 * t666) * t1158 + (t1260 * t704 + t1259 * t701 + (t1253 * t704 + t1254 * t701) * qJD(1)) * t1157;
t574 = t861 * qJD(2);
t438 = t857 * t629;
t331 = -qJD(2) * t556 + (t704 * t861 + t685) * qJD(1);
t330 = -t977 * t1151 + (-t703 * t979 - t936) * rSges(3,1) + t992;
t308 = rSges(7,1) * t493 - rSges(7,2) * t494;
t307 = -rSges(7,1) * t491 - rSges(7,2) * t492;
t299 = -t704 * t817 + t1080;
t293 = t299 * qJD(1);
t178 = -t574 * t977 + (-t331 - t578 + t937) * qJD(1);
t177 = -t574 * t665 + t559 + (t330 - t934) * qJD(1);
t154 = -t1196 * t704 + t719 * t701;
t153 = t1196 * t701 + t719 * t704;
t152 = -qJD(2) * t821 + t326 * t703 + t328 * t700;
t151 = -qJD(2) * t822 + t327 * t703 + t329 * t700;
t138 = -t539 * t599 + (-t422 + t949) * qJD(1) + t799;
t130 = -t490 * t599 + t566 * t569 + (-t285 + t1040) * qJD(1) + t816;
t129 = qJD(1) * t284 - t490 * t598 - t566 * t570 + t741;
t120 = t293 + t784;
t119 = t785 + t969;
t85 = qJD(1) * t254 - t460 * t598 - t539 * t570 + t715;
t78 = t284 * t599 + t285 * t598 + t462 * t570 - t463 * t569 + t767;
t39 = t255 * t598 + t422 * t570 + (t192 + t254) * t599 - t1038 * t569 + t751;
t20 = t223 * t555 + t224 * t554 + t395 * t513 - t396 * t512 + t717;
t10 = t410 * t146 + t409 * t147 + t555 * t243 + t554 * t244 + t288 * t269 - t287 * t271 + t513 * t446 - t512 * t448 + t717;
t1 = [(t53 * (-t395 + t1014) + t106 * (-t406 * t701 + t994) + t52 * (-t668 * t701 + t396 + t467) + t107 * (t1001 + t1029) + (-t107 * t440 + t1105 * t521) * t659 + ((-t106 * rSges(6,3) + t107 * (-t496 - t1152)) * t701 + (t106 * (-t496 - t522) - t107 * t668) * t704) * qJD(1) - (-qJD(1) * t395 - t106 - t1084 - t1221 + t761) * t107) * m(6) - (t151 + t154 + t120) * t977 / 0.2e1 + (t152 + t153) * t665 / 0.2e1 + (-qJD(2) * t817 + t572 * t703 + t573 * t700 + t629 * t894 + t630 * t895 + t639 * t889 + t640 * t890 + t666 * t885 + t667 * t886) * qJD(1) + (-(-qJD(1) * t462 + t1213 - t171 + t782) * t172 + t130 * (-t462 - t993) + t171 * t991 + t129 * (t463 + t883) + t172 * (-t881 + t997) + (t1099 * t566 - t172 * t526) * t695 + ((-t171 * rSges(4,3) + t172 * (-t652 - t1154)) * t701 + (t171 * (-t567 - t652) - t172 * t705) * t704) * qJD(1)) * m(4) + (-(-qJD(1) * t510 - t294 - t590 - t934) * t295 + t178 * (t701 * t928 + t692 + t990) + t177 * t1007 + t295 * (t658 + t992) + (t1098 * t608 - t1096) * qJD(2) + ((-pkin(1) - t861) * t1097 + (t294 * (-rSges(3,3) - pkin(7)) + t295 * t928) * t701) * qJD(1)) * m(3) + ((t1231 * t704 + t1225 + t1255 - t1287) * t599 + ((t1293 + t1298) * t704 + t1231 * t701 + t1256 + t1296) * t598 + t1265 + t1275) * t1171 + ((t297 + t299) * t704 + (t296 + t298) * t701) * t968 / 0.2e1 + (-t1260 + t1261 + t1264) * t1169 + (t24 * (-t859 + t1014) + t23 * (t467 + t1251) + (t24 * t781 - t23 * t668 + (t1165 * t629 - t1159 - t496) * t1106) * t701 + (-t860 + t994 + (-t496 + t781) * t978 + (-t406 + (t1165 * t630 + t1160) * t659) * t701) * t74 + (t541 + t953 + t1029 + (-pkin(5) * t1078 - qJD(1) * t668) * t704 + qJD(1) * t446 - t1209 + t74 + t1221 - t1222) * t75) * m(7) + (t182 + t199) * t1180 + (t45 + t38) * t1183 + (t181 + t198) * t1181 + (t108 + t99 + t80) * t1177 + (t119 - t969 + ((t704 * t884 - t1019 + t203) * t704 + (t701 * t884 + t202 + t891) * t701) * qJD(2)) * t925 + t38 * t1182 + (((t456 * t704 + t457 * t701) * t666 + (t415 * t704 + t416 * t701) * t639 + t1257 + t1284 + t1286) * t599 + (-t458 * t1064 + (t456 * t701 - t457 * t704) * t666 - t417 * t1070 + (t415 * t701 - t416 * t704) * t639 - t1225 + t1258 - t1283) * t598 + t1276) * t1168 + t1139 + t149 * t1187 + t148 * t1188 + (t180 + (t159 + (t382 * t704 + t383 * t701) * t629 + t902 + t1043) * t555 + (-t384 * t1075 + t1053 + t158 + (t382 * t701 - t383 * t704) * t629 + t1042) * t554) * t1176 + t44 * t1184 + t1101 / 0.2e1 + t1102 / 0.2e1 + (t1253 + t1288) * t1174 + (t1254 - t1289) * t1175 + (t109 + t98) * t1178 + (t293 + ((t201 - t426 + (t498 + t1090) * t704 + t1020) * t704 + t1019 * t701) * qJD(2)) * t922 + (t1259 + t1262) * t1170 - t1143 / 0.2e1 + t1142 / 0.2e1 + (t79 - t972 + (t161 - t792 - t1042) * t555 + (t701 * t896 + t160 - t334) * t554 + ((t381 + t828) * t554 + t896 * t555) * t704) * t1179 + (t86 * (-t422 - t1003) - t138 * t864 + t85 * (-t694 * t701 + t423 + t547) + t139 * (t999 + t1008) + (t138 * t479 - t139 * t480) * t695 + ((-t138 * rSges(5,3) + t139 * (-t577 - t1153)) * t701 + (t138 * (-t540 - t577) - t139 * t694) * t704) * qJD(1) - (-qJD(1) * t422 + t599 * t918 - t138 + t761) * t139) * m(5); t708 + ((-t1080 * t977 - t980) * t704 + (t750 + (t1079 * t704 + t716) * qJD(2)) * t701) * t922 + ((-t1079 * t665 + t980) * t701 + (t750 + (t1080 * t701 + t716) * qJD(2)) * t704) * t925 + (-t151 * t704 + t152 * t701 + (t296 * t701 + t297 * t704) * qJD(1)) * t1157 + ((t700 * t996 + t703 * t995) * qJD(1) + (t1195 * t703 + t763 * t700) * qJD(2)) * t1158 + (qJD(1) * t153 + (t701 * (t1201 * t701 + t720 * t704) - t704 * (t1200 * t701 + t721 * t704) + (t202 * t701 + t203 * t704) * qJD(1)) * t1271) * t1167 + (qJD(1) * t154 + (t701 * (-t1201 * t704 + t720 * t701) - t704 * (-t1200 * t704 + t721 * t701) + (t200 * t701 + t201 * t704) * qJD(1)) * t1271) * t1166 + (t119 + t785) * t927 + (t784 + t120) * t926 + (-t75 * (t718 + t1215) - t48 * (t734 + t780) - (-t75 * t938 + (t48 * t915 - t703 * t856) * qJD(2)) * pkin(2) + t10 * (t766 + t1024) + t48 * (t743 + t950) + t759 * t1228 + (t23 * t759 + t75 * t742 + (-t443 + t877) * t1108) * t701 + (-(t445 + t1037) * qJD(1) + t742 * t704 + t1232) * t74) * m(7) + (-t107 * (t783 + t1215) - t73 * (t780 + t901) - (-t107 * t938 + (t703 * t841 + t73 * t915) * qJD(2)) * pkin(2) + t20 * (t806 + t1024) + t73 * (t758 + t950) + t768 * t1227 + (t52 * t768 + t107 * t746 + (-t443 + t951) * t1107) * t701 + (-(t439 + t1037) * qJD(1) + t746 * t704 + t1230) * t106) * m(6) + (-t138 * (-qJD(1) * t474 + t863) - t139 * (t869 + t888) - t112 * (t898 + t899) - (-t139 * t938 + ((-t138 * t704 - t139 * t701) * t703 + t112 * t915) * qJD(2)) * pkin(2) + t138 * t1013 + t39 * (t874 + t1024) + t112 * (t807 + t950) + (t1217 * t811 + t138 * t772) * t704 + (t85 * t811 + t139 * t772 + (-t443 - t1038) * t986) * t701) * m(5) + (-(-t172 * t938 + (t156 * t915 + t703 * t834) * qJD(2)) * pkin(2) + t78 * (t1021 + t1024) + t156 * (t950 + t952) + (t171 * t865 + (qJD(1) * t172 + t130) * t920) * t704 + (t129 * t920 + t172 * t865 + (t171 * t566 + t156 * (-t443 - t463)) * qJD(1)) * t701 + t1223) * m(4) + (0.2e1 * t291 * (t330 * t704 + t331 * t701 + (t510 * t704 - t511 * t701) * qJD(1)) + t830 * t574 + (-t177 * t701 - t178 * t704 + (-t295 * t704 + t1098) * qJD(1)) * t608 - (t294 * t556 - t1096) * qJD(1) - (t291 * (-t556 * t701 - t557 * t704) + t830 * t861) * qJD(2)) * m(3); t708 + (-t75 * (t718 + t1214) + t10 * t766 + (t1108 * t877 + t75 * t760) * t701 + t1194 * (t558 - t1250) + (-t600 - (-t401 + t445) * qJD(1) + t760 * t704 + t1232) * t74 + (t523 - (-t271 * t975 - t542) * t701 - t764 + t743 + t1212) * t48) * m(7) + (-t107 * (t783 + t1214) + t20 * t806 + (t107 * t775 + t1107 * t951) * t701 + (t1219 + t1227) * (-t521 + t558) + (-t815 - t901 + t758 + t1212) * t73 + (-t600 - (-t401 + t439) * qJD(1) + t775 * t704 + t1230) * t106) * m(6) + (-t139 * (t776 + t888) + t39 * t874 + (-t1038 * t986 + t139 * t868) * t701 + (t1217 * t704 + t85 * t701) * t918 + (t704 * t868 + t1013 - t600 - t863) * t138 + (-t815 - t898 + t807) * t112) * m(5) + (t78 * t1021 + t156 * (-t463 * t979 + t952) + t834 * t490 + (-t129 * t701 - t130 * t704 + (-t172 * t704 + t1099) * qJD(1)) * t566 + t1223) * m(4); 0.2e1 * (-t1145 / 0.2e1 + t1144 / 0.2e1 + t48 * t1186) * m(7) + 0.2e1 * (t1166 * t52 + t1167 * t53 + t1186 * t73) * m(6) + 0.2e1 * (t112 * t1186 + t1166 * t85 + t1167 * t86) * m(5); t714 + (-t75 * t733 + t10 * t871 + (t1049 * t75 - t1108 * t1251) * t701 - t1194 * t1250 + (-qJD(1) * t445 + t1049 * t704 + t1274) * t74 + (-t734 + t809) * t48) * m(7) + (-t106 * (qJD(1) * t439 - t351) - t107 * t892 + t20 * t1032 + t841 * t389 + (-t1219 - t53 * t704 + (-t107 * t704 + t1105) * qJD(1)) * t521 + (-t396 * t979 - t901 + t954) * t73) * m(6); -t38 * t942 / 0.2e1 + t3 * t1076 / 0.2e1 + (-t149 * t630 + t629 * t837) * t1187 + ((t659 * t837 - t44) * t630 + (qJD(1) * t838 + t149 * t659 + t25 * t701 + t26 * t704) * t629) * t1184 + t629 * t37 * t926 + t4 * t1077 / 0.2e1 + (-t148 * t630 + t629 * t839) * t1188 + ((t659 * t839 - t45) * t630 + (qJD(1) * t840 + t148 * t659 + t27 * t701 + t28 * t704) * t629) * t1183 - t630 * (t1101 + t1102 + t1139 + t1142 - t1143) / 0.2e1 + ((t659 * t835 - t55) * t630 + (qJD(1) * t836 + t155 * t659 + t31 * t701 + t32 * t704) * t629) * t1172 + (t1192 * t493 + t740 * t494 - t704 * t757) * t1185 + (-t1192 * t491 + t492 * t740 - t701 * t757) * t1182 + (t773 * t630 + (-t1192 * t699 + t702 * t740) * t629) * t1173 + (t42 + qJD(6) * (-t155 * t630 + t629 * t835)) * t1078 / 0.2e1 + t1224 * t630 * t659 / 0.2e1 + ((-t75 * t146 + t74 * t147 - t23 * t271 + t24 * t269 + (t48 * t831 + (t701 * t74 - t704 * t75) * t359) * t659) * t630 + (t74 * (t204 * t701 - t269 * t659) + t75 * (-t204 * t704 + t271 * t659) + t10 * t831 + t48 * (-t146 * t701 + t147 * t704 - t269 * t979 - t271 * t978) + (qJD(1) * t856 + t1144 - t1145) * t359) * t629 - t74 * (-t307 * t587 - t410 * t438) - t75 * (t308 * t587 - t409 * t438) - t48 * (t307 * t409 + t308 * t410)) * m(7);];
tauc  = t1(:);
