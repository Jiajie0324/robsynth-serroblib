% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 09:47
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR1_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR1_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR1_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRR1_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 09:44:20
% EndTime: 2019-05-07 09:45:00
% DurationCPUTime: 18.67s
% Computational Cost: add. (150212->672), mult. (353170->983), div. (0->0), fcn. (272940->12), ass. (0->421)
t406 = cos(qJ(2));
t387 = t406 * qJDD(1);
t401 = sin(qJ(2));
t449 = qJD(1) * qJD(2);
t442 = t401 * t449;
t373 = t387 - t442;
t395 = t406 ^ 2;
t408 = qJD(1) ^ 2;
t402 = sin(qJ(1));
t495 = cos(qJ(1));
t440 = t402 * g(1) - t495 * g(2);
t417 = qJDD(1) * pkin(1) + t440;
t456 = qJD(1) * t401;
t418 = qJD(2) * pkin(2) - pkin(8) * t456;
t334 = t373 * pkin(2) - t418 * t456 + t417 + (pkin(8) * t395 + pkin(7)) * t408;
t400 = sin(qJ(3));
t405 = cos(qJ(3));
t366 = (t400 * t406 + t401 * t405) * qJD(1);
t386 = t401 * qJDD(1);
t441 = t406 * t449;
t372 = t386 + t441;
t434 = t400 * t372 - t405 * t373;
t331 = -qJD(3) * t366 - t434;
t364 = -t405 * t406 * qJD(1) + t400 * t456;
t362 = t364 ^ 2;
t393 = qJD(2) + qJD(3);
t426 = pkin(3) * t393 - qJ(4) * t366;
t265 = t331 * pkin(3) + t362 * qJ(4) - t366 * t426 - qJDD(4) + t334;
t396 = sin(pkin(11));
t397 = cos(pkin(11));
t346 = -t364 * t397 - t396 * t366;
t347 = -t364 * t396 + t366 * t397;
t318 = t346 * t347;
t392 = qJDD(2) + qJDD(3);
t499 = t318 + t392;
t510 = t396 * t499;
t509 = t397 * t499;
t398 = sin(qJ(6));
t399 = sin(qJ(5));
t404 = cos(qJ(5));
t310 = t346 * t399 + t347 * t404;
t423 = t405 * t372 + t400 * t373;
t332 = -qJD(3) * t364 + t423;
t290 = t397 * t331 - t332 * t396;
t291 = t331 * t396 + t332 * t397;
t436 = -t404 * t290 + t399 * t291;
t220 = -qJD(5) * t310 - t436;
t218 = qJDD(6) - t220;
t385 = qJD(5) + t393;
t403 = cos(qJ(6));
t294 = t310 * t398 - t403 * t385;
t296 = t310 * t403 + t385 * t398;
t249 = t296 * t294;
t502 = t218 - t249;
t508 = t398 * t502;
t308 = -t404 * t346 + t347 * t399;
t264 = t310 * t308;
t384 = qJDD(5) + t392;
t501 = -t264 + t384;
t507 = t399 * t501;
t353 = t366 * t364;
t498 = -t353 + t392;
t506 = t400 * t498;
t505 = t403 * t502;
t504 = t404 * t501;
t503 = t405 * t498;
t343 = t346 ^ 2;
t430 = pkin(4) * t393 - pkin(9) * t347;
t207 = t290 * pkin(4) + t343 * pkin(9) - t347 * t430 + t265;
t424 = t399 * t290 + t404 * t291;
t221 = -qJD(5) * t308 + t424;
t302 = t385 * t308;
t204 = t221 - t302;
t125 = -t204 * pkin(10) + (t310 * t385 - t220) * pkin(5) - t207;
t459 = t401 * t408;
t419 = g(1) * t495 + t402 * g(2);
t488 = qJDD(1) * pkin(7);
t368 = -t408 * pkin(1) - t419 + t488;
t461 = t401 * t368;
t328 = qJDD(2) * pkin(2) - t372 * pkin(8) - t461 + (pkin(2) * t459 + pkin(8) * t449 - g(3)) * t406;
t357 = -t401 * g(3) + t406 * t368;
t389 = t395 * t408;
t329 = -pkin(2) * t389 + t373 * pkin(8) - qJD(2) * t418 + t357;
t287 = -t405 * t328 + t400 * t329;
t360 = t393 * t364;
t324 = t332 + t360;
t245 = pkin(3) * t498 - qJ(4) * t324 - t287;
t288 = t400 * t328 + t405 * t329;
t247 = -t362 * pkin(3) + t331 * qJ(4) - t393 * t426 + t288;
t193 = 0.2e1 * qJD(4) * t346 + t396 * t245 + t397 * t247;
t164 = -t343 * pkin(4) + t290 * pkin(9) - t393 * t430 + t193;
t338 = t393 * t346;
t275 = t291 - t338;
t429 = -0.2e1 * qJD(4) * t347 + t397 * t245 - t396 * t247;
t412 = pkin(4) * t499 - pkin(9) * t275 + t429;
t104 = t404 * t164 + t399 * t412;
t260 = pkin(5) * t308 - pkin(10) * t310;
t497 = t385 ^ 2;
t85 = -pkin(5) * t497 + t384 * pkin(10) - t308 * t260 + t104;
t57 = -t403 * t125 + t398 * t85;
t58 = t125 * t398 + t403 * t85;
t36 = t398 * t57 + t403 * t58;
t500 = t291 + t338;
t304 = qJD(6) + t308;
t438 = t398 * t221 - t403 * t384;
t174 = (qJD(6) - t304) * t296 + t438;
t292 = t294 ^ 2;
t293 = t296 ^ 2;
t303 = t304 ^ 2;
t306 = t308 ^ 2;
t307 = t310 ^ 2;
t344 = t347 ^ 2;
t363 = t366 ^ 2;
t496 = t393 ^ 2;
t494 = pkin(5) * t399;
t103 = t164 * t399 - t404 * t412;
t62 = -t103 * t404 + t104 * t399;
t490 = t397 * t62;
t63 = t103 * t399 + t404 * t104;
t38 = t396 * t63 + t490;
t493 = pkin(3) * t38 + pkin(4) * t62;
t84 = -t384 * pkin(5) - pkin(10) * t497 + t260 * t310 + t103;
t492 = -pkin(5) * t84 + pkin(10) * t36;
t491 = t396 * t62;
t81 = t398 * t84;
t82 = t403 * t84;
t205 = t221 + t302;
t415 = (-qJD(5) + t385) * t310 - t436;
t144 = -t205 * t404 + t399 * t415;
t146 = t205 * t399 + t404 * t415;
t92 = t144 * t397 + t146 * t396;
t489 = pkin(3) * t92 + pkin(4) * t144;
t132 = t193 * t396 + t397 * t429;
t487 = t132 * t400;
t486 = t132 * t405;
t188 = t218 + t249;
t485 = t188 * t398;
t484 = t188 * t403;
t483 = t207 * t399;
t482 = t207 * t404;
t241 = -t287 * t405 + t288 * t400;
t481 = t241 * t401;
t257 = t264 + t384;
t480 = t257 * t399;
t479 = t257 * t404;
t478 = t265 * t396;
t477 = t265 * t397;
t476 = t304 * t398;
t475 = t304 * t403;
t313 = -t318 + t392;
t474 = t313 * t396;
t473 = t313 * t397;
t472 = t334 * t400;
t471 = t334 * t405;
t470 = t347 * t393;
t350 = t353 + t392;
t469 = t350 * t400;
t468 = t350 * t405;
t467 = t385 * t399;
t466 = t385 * t404;
t465 = t393 * t396;
t464 = t393 * t397;
t463 = t393 * t400;
t462 = t393 * t405;
t381 = t406 * t459;
t460 = t401 * (qJDD(2) + t381);
t458 = t406 * (qJDD(2) - t381);
t453 = qJD(3) + t393;
t452 = qJD(5) + t385;
t450 = qJD(6) + t304;
t239 = -t293 - t303;
t152 = -t239 * t398 - t484;
t425 = -t403 * t221 - t398 * t384;
t179 = t294 * t450 + t425;
t448 = pkin(5) * t179 + pkin(10) * t152 + t81;
t231 = -t303 - t292;
t149 = t231 * t403 - t508;
t175 = -t296 * t450 - t438;
t447 = pkin(5) * t175 + pkin(10) * t149 - t82;
t446 = t399 * t249;
t445 = t404 * t249;
t444 = -pkin(5) * t404 - pkin(4);
t29 = t36 * t399 - t404 * t84;
t30 = t36 * t404 + t399 * t84;
t14 = t29 * t397 + t30 * t396;
t439 = pkin(3) * t14 + pkin(4) * t29 + t492;
t133 = t397 * t193 - t396 * t429;
t242 = t287 * t400 + t405 * t288;
t356 = t406 * g(3) + t461;
t435 = t401 * t356 + t406 * t357;
t196 = -qJD(6) * t294 - t425;
t254 = t304 * t294;
t178 = t196 + t254;
t123 = -t174 * t403 + t178 * t398;
t228 = t292 + t293;
t433 = pkin(5) * t228 + pkin(10) * t123 + t36;
t335 = -t344 - t496;
t279 = t335 * t397 - t474;
t432 = pkin(3) * t279 - t193;
t107 = t149 * t399 + t175 * t404;
t108 = t149 * t404 - t175 * t399;
t65 = t107 * t397 + t108 * t396;
t428 = pkin(3) * t65 + pkin(4) * t107 + t447;
t110 = t152 * t399 + t179 * t404;
t111 = t152 * t404 - t179 * t399;
t68 = t110 * t397 + t111 * t396;
t427 = pkin(3) * t68 + pkin(4) * t110 + t448;
t35 = t398 * t58 - t403 * t57;
t96 = t123 * t399 + t228 * t404;
t97 = t123 * t404 - t228 * t399;
t53 = t396 * t97 + t397 * t96;
t422 = pkin(3) * t53 + pkin(4) * t96 + t433;
t255 = -t497 - t306;
t213 = t255 * t399 + t504;
t214 = t255 * t404 - t507;
t155 = t213 * t397 + t214 * t396;
t421 = pkin(3) * t155 + pkin(4) * t213 - t103;
t311 = -t496 - t343;
t261 = t311 * t396 + t509;
t420 = pkin(3) * t261 + t429;
t416 = t290 + t470;
t414 = (-qJD(3) + t393) * t366 - t434;
t297 = -t307 - t497;
t233 = t297 * t404 - t480;
t234 = -t297 * t399 - t479;
t181 = t233 * t397 + t234 * t396;
t409 = pkin(3) * t181 + pkin(4) * t233 - t104;
t407 = qJD(2) ^ 2;
t394 = t401 ^ 2;
t388 = t394 * t408;
t374 = t387 - 0.2e1 * t442;
t371 = t386 + 0.2e1 * t441;
t367 = t408 * pkin(7) + t417;
t359 = -t363 + t496;
t358 = t362 - t496;
t355 = -t363 - t496;
t352 = t363 - t362;
t348 = -t496 - t362;
t337 = -t344 + t496;
t336 = t343 - t496;
t333 = -t362 - t363;
t326 = -t355 * t400 - t468;
t325 = t355 * t405 - t469;
t323 = t332 - t360;
t322 = -t364 * t453 + t423;
t319 = t366 * t453 + t434;
t317 = t348 * t405 - t506;
t316 = t348 * t400 + t503;
t315 = t344 - t343;
t301 = -t307 + t497;
t300 = t306 - t497;
t299 = (t346 * t397 + t347 * t396) * t393;
t298 = (t346 * t396 - t347 * t397) * t393;
t286 = -t343 - t344;
t284 = t336 * t397 - t474;
t283 = -t337 * t396 + t509;
t282 = t336 * t396 + t473;
t281 = t337 * t397 + t510;
t280 = -t335 * t396 - t473;
t277 = t324 * t400 + t405 * t414;
t276 = -t324 * t405 + t400 * t414;
t270 = -t290 + t470;
t269 = t291 * t397 - t347 * t465;
t268 = t291 * t396 + t347 * t464;
t267 = -t290 * t396 - t346 * t464;
t266 = t290 * t397 - t346 * t465;
t263 = t307 - t306;
t262 = t311 * t397 - t510;
t253 = -t293 + t303;
t252 = t292 - t303;
t251 = (-t308 * t404 + t310 * t399) * t385;
t250 = (-t308 * t399 - t310 * t404) * t385;
t248 = t293 - t292;
t240 = -t306 - t307;
t238 = t300 * t404 - t480;
t237 = -t301 * t399 + t504;
t236 = t300 * t399 + t479;
t235 = t301 * t404 + t507;
t230 = -t279 * t400 + t280 * t405;
t229 = t279 * t405 + t280 * t400;
t226 = -qJ(4) * t279 - t477;
t225 = t275 * t396 + t397 * t416;
t224 = -t270 * t397 - t396 * t500;
t223 = -t275 * t397 + t396 * t416;
t222 = -t270 * t396 + t397 * t500;
t219 = pkin(3) * t223;
t217 = -qJ(4) * t261 - t478;
t216 = -t261 * t400 + t262 * t405;
t215 = t261 * t405 + t262 * t400;
t211 = (-t294 * t403 + t296 * t398) * t304;
t210 = (-t294 * t398 - t296 * t403) * t304;
t209 = -t250 * t396 + t251 * t397;
t208 = t250 * t397 + t251 * t396;
t206 = -t308 * t452 + t424;
t201 = t310 * t452 + t436;
t200 = t221 * t404 - t310 * t467;
t199 = t221 * t399 + t310 * t466;
t198 = -t220 * t399 + t308 * t466;
t197 = t220 * t404 + t308 * t467;
t195 = -qJD(6) * t296 - t438;
t194 = -pkin(3) * t500 + qJ(4) * t280 - t478;
t191 = -pkin(3) * t270 + qJ(4) * t262 + t477;
t186 = -t236 * t396 + t238 * t397;
t185 = -t235 * t396 + t237 * t397;
t184 = t236 * t397 + t238 * t396;
t183 = t235 * t397 + t237 * t396;
t182 = -t233 * t396 + t234 * t397;
t177 = t196 - t254;
t171 = t196 * t403 - t296 * t476;
t170 = t196 * t398 + t296 * t475;
t169 = -t195 * t398 + t294 * t475;
t168 = t195 * t403 + t294 * t476;
t167 = -t223 * t400 + t225 * t405;
t166 = t223 * t405 + t225 * t400;
t165 = -pkin(9) * t233 - t482;
t163 = t211 * t404 + t218 * t399;
t162 = t211 * t399 - t218 * t404;
t161 = t252 * t403 - t485;
t160 = -t253 * t398 + t505;
t159 = t252 * t398 + t484;
t158 = t253 * t403 + t508;
t156 = -t213 * t396 + t214 * t397;
t153 = -pkin(9) * t213 - t483;
t151 = t239 * t403 - t485;
t148 = t231 * t398 + t505;
t145 = -t201 * t404 - t204 * t399;
t143 = -t201 * t399 + t204 * t404;
t141 = t171 * t404 + t446;
t140 = t169 * t404 - t446;
t139 = t171 * t399 - t445;
t138 = t169 * t399 + t445;
t137 = -t199 * t396 + t200 * t397;
t136 = -t197 * t396 + t198 * t397;
t135 = t199 * t397 + t200 * t396;
t134 = t197 * t397 + t198 * t396;
t131 = pkin(3) * t132;
t130 = -pkin(4) * t206 + pkin(9) * t234 - t483;
t129 = pkin(3) * t265 + qJ(4) * t133;
t128 = -t181 * t400 + t182 * t405;
t127 = t181 * t405 + t182 * t400;
t126 = -pkin(4) * t201 + pkin(9) * t214 + t482;
t122 = t175 * t403 - t177 * t398;
t121 = -t174 * t398 - t178 * t403;
t120 = t175 * t398 + t177 * t403;
t118 = -qJ(4) * t223 - t132;
t117 = t161 * t404 - t174 * t399;
t116 = t160 * t404 + t178 * t399;
t115 = t161 * t399 + t174 * t404;
t114 = t160 * t399 - t178 * t404;
t113 = -t162 * t396 + t163 * t397;
t112 = t162 * t397 + t163 * t396;
t105 = -pkin(3) * t286 + qJ(4) * t225 + t133;
t101 = t122 * t404 + t248 * t399;
t100 = t122 * t399 - t248 * t404;
t99 = -t155 * t400 + t156 * t405;
t98 = t155 * t405 + t156 * t400;
t94 = -t144 * t396 + t146 * t397;
t93 = -t143 * t396 + t145 * t397;
t91 = t143 * t397 + t145 * t396;
t89 = -t139 * t396 + t141 * t397;
t88 = -t138 * t396 + t140 * t397;
t87 = t139 * t397 + t141 * t396;
t86 = t138 * t397 + t140 * t396;
t80 = t133 * t405 - t487;
t79 = t133 * t400 + t486;
t78 = -qJ(4) * t181 - t130 * t396 + t165 * t397;
t77 = -pkin(10) * t151 + t82;
t76 = -pkin(10) * t148 + t81;
t75 = -t115 * t396 + t117 * t397;
t74 = -t114 * t396 + t116 * t397;
t73 = t115 * t397 + t117 * t396;
t72 = t114 * t397 + t116 * t396;
t71 = -qJ(4) * t155 - t126 * t396 + t153 * t397;
t70 = -pkin(3) * t206 + qJ(4) * t182 + t130 * t397 + t165 * t396;
t69 = -t110 * t396 + t111 * t397;
t66 = -t107 * t396 + t108 * t397;
t60 = -t100 * t396 + t101 * t397;
t59 = t100 * t397 + t101 * t396;
t54 = -t396 * t96 + t397 * t97;
t51 = -pkin(3) * t201 + qJ(4) * t156 + t126 * t397 + t153 * t396;
t50 = -t400 * t92 + t405 * t94;
t49 = t400 * t94 + t405 * t92;
t48 = pkin(4) * t207 + pkin(9) * t63;
t47 = -pkin(9) * t144 - t62;
t46 = -pkin(5) * t151 + t58;
t45 = -pkin(5) * t148 + t57;
t44 = -pkin(4) * t240 + pkin(9) * t146 + t63;
t43 = -t400 * t68 + t405 * t69;
t42 = t400 * t69 + t405 * t68;
t41 = -t400 * t65 + t405 * t66;
t40 = t400 * t66 + t405 * t65;
t39 = t397 * t63 - t491;
t33 = -t400 * t53 + t405 * t54;
t32 = t400 * t54 + t405 * t53;
t31 = -pkin(10) * t121 - t35;
t27 = -pkin(9) * t110 - t399 * t46 + t404 * t77;
t26 = -pkin(9) * t107 - t399 * t45 + t404 * t76;
t25 = -pkin(4) * t151 + pkin(9) * t111 + t399 * t77 + t404 * t46;
t24 = -pkin(4) * t148 + pkin(9) * t108 + t399 * t76 + t404 * t45;
t23 = -qJ(4) * t92 - t396 * t44 + t397 * t47;
t22 = -pkin(3) * t240 + qJ(4) * t94 + t396 * t47 + t397 * t44;
t21 = -pkin(9) * t96 + t121 * t494 + t31 * t404;
t20 = pkin(9) * t97 + t121 * t444 + t399 * t31;
t19 = -t38 * t400 + t39 * t405;
t18 = t38 * t405 + t39 * t400;
t17 = -pkin(9) * t490 - qJ(4) * t38 - t396 * t48;
t16 = pkin(3) * t207 - pkin(9) * t491 + qJ(4) * t39 + t397 * t48;
t15 = -t29 * t396 + t30 * t397;
t12 = -qJ(4) * t68 - t25 * t396 + t27 * t397;
t11 = -qJ(4) * t65 - t24 * t396 + t26 * t397;
t10 = -pkin(9) * t29 + (-pkin(10) * t404 + t494) * t35;
t9 = -pkin(3) * t151 + qJ(4) * t69 + t25 * t397 + t27 * t396;
t8 = -pkin(3) * t148 + qJ(4) * t66 + t24 * t397 + t26 * t396;
t7 = -qJ(4) * t53 - t20 * t396 + t21 * t397;
t6 = pkin(9) * t30 + (-pkin(10) * t399 + t444) * t35;
t5 = -pkin(3) * t121 + qJ(4) * t54 + t20 * t397 + t21 * t396;
t4 = -t14 * t400 + t15 * t405;
t3 = t14 * t405 + t15 * t400;
t2 = -qJ(4) * t14 + t10 * t397 - t396 * t6;
t1 = -pkin(3) * t35 + qJ(4) * t15 + t10 * t396 + t397 * t6;
t13 = [0, 0, 0, 0, 0, qJDD(1), t440, t419, 0, 0, (t372 + t441) * t401, t371 * t406 + t374 * t401, t460 + t406 * (-t388 + t407), (t373 - t442) * t406, t401 * (t389 - t407) + t458, 0, t406 * t367 + pkin(1) * t374 + pkin(7) * (t406 * (-t389 - t407) - t460), -t401 * t367 - pkin(1) * t371 + pkin(7) * (-t458 - t401 * (-t388 - t407)), pkin(1) * (t388 + t389) + (t394 + t395) * t488 + t435, pkin(1) * t367 + pkin(7) * t435, t401 * (t332 * t405 - t366 * t463) + t406 * (t332 * t400 + t366 * t462), t401 * (-t319 * t405 - t323 * t400) + t406 * (-t319 * t400 + t323 * t405), t401 * (-t359 * t400 + t503) + t406 * (t359 * t405 + t506), t401 * (-t331 * t400 + t364 * t462) + t406 * (t331 * t405 + t364 * t463), t401 * (t358 * t405 - t469) + t406 * (t358 * t400 + t468), (t401 * (-t364 * t405 + t366 * t400) + t406 * (-t364 * t400 - t366 * t405)) * t393, t401 * (-pkin(8) * t316 - t472) + t406 * (-pkin(2) * t319 + pkin(8) * t317 + t471) - pkin(1) * t319 + pkin(7) * (-t316 * t401 + t317 * t406), t401 * (-pkin(8) * t325 - t471) + t406 * (-pkin(2) * t322 + pkin(8) * t326 - t472) - pkin(1) * t322 + pkin(7) * (-t325 * t401 + t326 * t406), t401 * (-pkin(8) * t276 - t241) + t406 * (-pkin(2) * t333 + pkin(8) * t277 + t242) - pkin(1) * t333 + pkin(7) * (-t276 * t401 + t277 * t406), -pkin(8) * t481 + t406 * (pkin(2) * t334 + pkin(8) * t242) + pkin(1) * t334 + pkin(7) * (t242 * t406 - t481), t401 * (-t268 * t400 + t269 * t405) + t406 * (t268 * t405 + t269 * t400), t401 * (-t222 * t400 + t224 * t405) + t406 * (t222 * t405 + t224 * t400), t401 * (-t281 * t400 + t283 * t405) + t406 * (t281 * t405 + t283 * t400), t401 * (-t266 * t400 + t267 * t405) + t406 * (t266 * t405 + t267 * t400), t401 * (-t282 * t400 + t284 * t405) + t406 * (t282 * t405 + t284 * t400), t401 * (-t298 * t400 + t299 * t405) + t406 * (t298 * t405 + t299 * t400), t401 * (-pkin(8) * t215 - t191 * t400 + t217 * t405) + t406 * (-pkin(2) * t270 + pkin(8) * t216 + t191 * t405 + t217 * t400) - pkin(1) * t270 + pkin(7) * (-t215 * t401 + t216 * t406), t401 * (-pkin(8) * t229 - t194 * t400 + t226 * t405) + t406 * (-pkin(2) * t500 + pkin(8) * t230 + t194 * t405 + t226 * t400) - pkin(1) * t500 + pkin(7) * (-t229 * t401 + t230 * t406), t401 * (-pkin(8) * t166 - t105 * t400 + t118 * t405) + t406 * (-pkin(2) * t286 + pkin(8) * t167 + t105 * t405 + t118 * t400) - pkin(1) * t286 + pkin(7) * (-t166 * t401 + t167 * t406), t401 * (-pkin(8) * t79 - qJ(4) * t486 - t129 * t400) + t406 * (pkin(2) * t265 + pkin(8) * t80 - qJ(4) * t487 + t129 * t405) + pkin(1) * t265 + pkin(7) * (-t401 * t79 + t406 * t80), t401 * (-t135 * t400 + t137 * t405) + t406 * (t135 * t405 + t137 * t400), t401 * (-t400 * t91 + t405 * t93) + t406 * (t400 * t93 + t405 * t91), t401 * (-t183 * t400 + t185 * t405) + t406 * (t183 * t405 + t185 * t400), t401 * (-t134 * t400 + t136 * t405) + t406 * (t134 * t405 + t136 * t400), t401 * (-t184 * t400 + t186 * t405) + t406 * (t184 * t405 + t186 * t400), t401 * (-t208 * t400 + t209 * t405) + t406 * (t208 * t405 + t209 * t400), t401 * (-pkin(8) * t98 - t400 * t51 + t405 * t71) + t406 * (-pkin(2) * t201 + pkin(8) * t99 + t400 * t71 + t405 * t51) - pkin(1) * t201 + pkin(7) * (-t401 * t98 + t406 * t99), t401 * (-pkin(8) * t127 - t400 * t70 + t405 * t78) + t406 * (-pkin(2) * t206 + pkin(8) * t128 + t400 * t78 + t405 * t70) - pkin(1) * t206 + pkin(7) * (-t127 * t401 + t128 * t406), t401 * (-pkin(8) * t49 - t22 * t400 + t23 * t405) + t406 * (-pkin(2) * t240 + pkin(8) * t50 + t22 * t405 + t23 * t400) - pkin(1) * t240 + pkin(7) * (-t401 * t49 + t406 * t50), t401 * (-pkin(8) * t18 - t16 * t400 + t17 * t405) + t406 * (pkin(2) * t207 + pkin(8) * t19 + t16 * t405 + t17 * t400) + pkin(1) * t207 + pkin(7) * (-t18 * t401 + t19 * t406), t401 * (-t400 * t87 + t405 * t89) + t406 * (t400 * t89 + t405 * t87), t401 * (-t400 * t59 + t405 * t60) + t406 * (t400 * t60 + t405 * t59), t401 * (-t400 * t72 + t405 * t74) + t406 * (t400 * t74 + t405 * t72), t401 * (-t400 * t86 + t405 * t88) + t406 * (t400 * t88 + t405 * t86), t401 * (-t400 * t73 + t405 * t75) + t406 * (t400 * t75 + t405 * t73), t401 * (-t112 * t400 + t113 * t405) + t406 * (t112 * t405 + t113 * t400), t401 * (-pkin(8) * t40 + t11 * t405 - t400 * t8) + t406 * (-pkin(2) * t148 + pkin(8) * t41 + t11 * t400 + t405 * t8) - pkin(1) * t148 + pkin(7) * (-t40 * t401 + t406 * t41), t401 * (-pkin(8) * t42 + t12 * t405 - t400 * t9) + t406 * (-pkin(2) * t151 + pkin(8) * t43 + t12 * t400 + t405 * t9) - pkin(1) * t151 + pkin(7) * (-t401 * t42 + t406 * t43), t401 * (-pkin(8) * t32 - t400 * t5 + t405 * t7) + t406 * (-pkin(2) * t121 + pkin(8) * t33 + t400 * t7 + t405 * t5) - pkin(1) * t121 + pkin(7) * (-t32 * t401 + t33 * t406), t401 * (-pkin(8) * t3 - t1 * t400 + t2 * t405) + t406 * (-pkin(2) * t35 + pkin(8) * t4 + t1 * t405 + t2 * t400) - pkin(1) * t35 + pkin(7) * (-t3 * t401 + t4 * t406); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t381, t388 - t389, t386, t381, t387, qJDD(2), -t356, -t357, 0, 0, t353, t352, t324, -t353, t414, t392, pkin(2) * t316 - t287, pkin(2) * t325 - t288, pkin(2) * t276, pkin(2) * t241, -t318, t315, t275, t318, t416, t392, pkin(2) * t215 + t420, pkin(2) * t229 + t432, pkin(2) * t166 + t219, pkin(2) * t79 + t131, t264, t263, t205, -t264, t415, t384, pkin(2) * t98 + t421, pkin(2) * t127 + t409, pkin(2) * t49 + t489, pkin(2) * t18 + t493, t170, t120, t158, t168, t159, t210, pkin(2) * t40 + t428, pkin(2) * t42 + t427, pkin(2) * t32 + t422, pkin(2) * t3 + t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, t352, t324, -t353, t414, t392, -t287, -t288, 0, 0, -t318, t315, t275, t318, t416, t392, t420, t432, t219, t131, t264, t263, t205, -t264, t415, t384, t421, t409, t489, t493, t170, t120, t158, t168, t159, t210, t428, t427, t422, t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, t500, t286, -t265, 0, 0, 0, 0, 0, 0, t201, t206, t240, -t207, 0, 0, 0, 0, 0, 0, t148, t151, t121, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, t263, t205, -t264, t415, t384, -t103, -t104, 0, 0, t170, t120, t158, t168, t159, t210, t447, t448, t433, t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, t248, t178, -t249, -t174, t218, -t57, -t58, 0, 0;];
tauJ_reg  = t13;
