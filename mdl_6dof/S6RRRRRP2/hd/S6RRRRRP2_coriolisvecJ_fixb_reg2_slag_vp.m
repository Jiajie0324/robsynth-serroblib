% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:03:11
% EndTime: 2019-03-10 01:03:33
% DurationCPUTime: 9.08s
% Computational Cost: add. (21243->612), mult. (53669->734), div. (0->0), fcn. (39840->8), ass. (0->302)
t252 = cos(qJ(5));
t355 = qJD(5) * t252;
t253 = cos(qJ(2));
t420 = cos(qJ(3));
t343 = t420 * t253;
t318 = qJD(1) * t343;
t251 = sin(qJ(2));
t418 = sin(qJ(3));
t341 = t418 * t251;
t205 = -qJD(1) * t341 + t318;
t218 = t251 * t420 + t253 * t418;
t206 = qJD(1) * t218;
t250 = sin(qJ(4));
t419 = cos(qJ(4));
t164 = -t419 * t205 + t206 * t250;
t447 = t164 * t252;
t453 = t355 + t447;
t161 = qJD(5) + t164;
t249 = sin(qJ(5));
t290 = t250 * t205 + t206 * t419;
t246 = qJD(2) + qJD(3);
t330 = qJD(4) + t246;
t147 = t249 * t290 - t252 * t330;
t382 = t147 * t249;
t149 = t249 * t330 + t252 * t290;
t334 = t418 * qJD(3);
t358 = qJD(1) * t251;
t171 = (qJD(2) * t418 + t334) * t358 - t246 * t318;
t264 = t246 * t218;
t261 = t264 * qJD(1);
t335 = qJD(4) * t419;
t357 = qJD(4) * t250;
t258 = -t171 * t419 + t205 * t335 - t206 * t357 - t250 * t261;
t80 = qJD(5) * t149 + t249 * t258;
t78 = t80 * t252;
t30 = t161 * t382 - t78;
t296 = t147 * t252 + t149 * t249;
t356 = qJD(5) * t249;
t444 = qJD(5) * t330 + t258;
t79 = -t252 * t444 + t290 * t356;
t14 = t147 * t355 + t149 * t356 + t164 * t296 + t249 * t80 + t79 * t252;
t242 = -t253 * pkin(2) - pkin(1);
t228 = qJD(1) * t242;
t182 = -pkin(3) * t205 + t228;
t107 = pkin(4) * t164 - pkin(10) * t290 + t182;
t422 = -pkin(8) - pkin(7);
t230 = t422 * t253;
t224 = qJD(1) * t230;
t207 = t418 * t224;
t229 = t422 * t251;
t222 = qJD(1) * t229;
t410 = qJD(2) * pkin(2);
t213 = t222 + t410;
t172 = t420 * t213 + t207;
t200 = t206 * pkin(9);
t145 = -t200 + t172;
t132 = t246 * pkin(3) + t145;
t211 = t420 * t224;
t173 = t213 * t418 - t211;
t414 = t205 * pkin(9);
t146 = t173 + t414;
t142 = t419 * t146;
t96 = t250 * t132 + t142;
t92 = pkin(10) * t330 + t96;
t54 = t107 * t252 - t249 * t92;
t362 = qJD(6) - t54;
t40 = -pkin(5) * t161 + t362;
t260 = t419 * t264;
t325 = -qJD(1) * t260 + t250 * t171;
t93 = qJD(4) * t290 - t325;
t411 = qJ(6) * t93;
t346 = qJD(2) * t422;
t319 = qJD(1) * t346;
t214 = t251 * t319;
t215 = t253 * t319;
t336 = qJD(3) * t420;
t127 = t213 * t336 + t420 * t214 + t418 * t215 + t224 * t334;
t101 = -pkin(9) * t261 + t127;
t314 = -t214 * t418 + t420 * t215;
t128 = -qJD(3) * t173 + t314;
t102 = t171 * pkin(9) + t128;
t267 = -t101 * t419 - t250 * t102 - t132 * t335 + t146 * t357;
t354 = qJD(1) * qJD(2);
t333 = t251 * t354;
t236 = pkin(2) * t333;
t153 = pkin(3) * t261 + t236;
t35 = t93 * pkin(4) - pkin(10) * t258 + t153;
t6 = t107 * t355 + t249 * t35 - t252 * t267 - t356 * t92;
t2 = qJD(6) * t161 + t411 + t6;
t421 = pkin(5) * t93;
t7 = -t107 * t356 + t249 * t267 + t252 * t35 - t92 * t355;
t4 = -t7 - t421;
t439 = t2 * t252 + t4 * t249;
t452 = t40 * t453 + t439;
t448 = t164 * t249;
t29 = -t78 + (t356 + t448) * t147;
t76 = t79 * t249;
t451 = t149 * t453 - t76;
t391 = t161 * t355 + t249 * t93;
t450 = -t149 * t290 + t161 * t447 + t391;
t388 = -t161 * t356 + t252 * t93;
t278 = -t147 * t290 + t161 * t448 - t388;
t446 = t164 * t290;
t84 = -t164 ^ 2 + t290 ^ 2;
t126 = pkin(4) * t290 + pkin(10) * t164;
t266 = t182 * t164 + t267;
t81 = t164 * t330 + t258;
t281 = t341 - t343;
t262 = t246 * t281;
t271 = t419 * t281;
t112 = qJD(4) * t271 + t218 * t357 + t250 * t264 + t262 * t419;
t276 = t250 * t281;
t178 = t218 * t419 - t276;
t443 = t178 * (qJD(5) * (-t149 * t252 + t382) - t78 + t76) + t296 * t112;
t441 = 0.2e1 * t228;
t440 = -0.2e1 * t354;
t415 = pkin(5) * t290;
t55 = t107 * t249 + t252 * t92;
t291 = t161 * t55 + t7;
t366 = t250 * t101;
t97 = t419 * t102;
t329 = -t97 + t366;
t22 = qJD(4) * t96 + t329;
t10 = t80 * pkin(5) + t79 * qJ(6) - t149 * qJD(6) + t22;
t141 = t250 * t146;
t95 = t132 * t419 - t141;
t91 = -pkin(4) * t330 - t95;
t57 = t147 * pkin(5) - t149 * qJ(6) + t91;
t332 = -t10 * t252 + t57 * t356;
t331 = -t22 * t252 + t91 * t356;
t437 = t161 * t290;
t433 = t182 * t290;
t158 = t290 * qJ(6);
t103 = t145 * t250 + t142;
t316 = pkin(3) * t357 - t103;
t177 = t218 * t250 + t271;
t188 = pkin(3) * t281 + t242;
t122 = t177 * pkin(4) - t178 * pkin(10) + t188;
t183 = t420 * t229 + t230 * t418;
t159 = -t218 * pkin(9) + t183;
t184 = t418 * t229 - t420 * t230;
t160 = -pkin(9) * t281 + t184;
t124 = t250 * t159 + t160 * t419;
t431 = t249 * t122 + t252 * t124;
t180 = t420 * t222 + t207;
t152 = -t200 + t180;
t179 = -t222 * t418 + t211;
t283 = t179 - t414;
t110 = t152 * t419 + t250 * t283;
t351 = t420 * pkin(2);
t241 = t351 + pkin(3);
t342 = t418 * t250;
t169 = t241 * t335 + (-qJD(4) * t342 + (t419 * t420 - t342) * qJD(3)) * pkin(2);
t430 = -t169 + t110;
t320 = t418 * t419;
t361 = -t152 * t250 + t419 * t283 + t241 * t357 + (qJD(4) * t320 + (t250 * t420 + t320) * qJD(3)) * pkin(2);
t199 = pkin(5) * t356 - qJ(6) * t355 - t249 * qJD(6);
t429 = pkin(5) * t448 - qJ(6) * t447 + t199;
t292 = -t290 * t54 + t331;
t293 = t290 * t40 + t332;
t409 = t10 * t249;
t41 = qJ(6) * t161 + t55;
t428 = -t290 * t41 - t409;
t413 = t22 * t249 + t91 * t355;
t321 = t290 * t55 + t413;
t113 = -qJD(4) * t276 + t218 * t335 - t250 * t262 + t260;
t386 = t112 * t249;
t289 = t178 * t355 - t386;
t370 = t178 * t249;
t425 = t113 * t147 + t161 * t289 + t177 * t80 + t370 * t93;
t82 = t246 * t290 + t325;
t223 = t251 * t346;
t225 = t253 * t346;
t129 = t420 * t223 + t418 * t225 + t229 * t336 + t230 * t334;
t119 = -pkin(9) * t264 + t129;
t313 = -t223 * t418 + t420 * t225;
t257 = pkin(9) * t262 - t229 * t334 + t230 * t336 + t313;
t38 = t119 * t419 + t159 * t335 - t160 * t357 + t250 * t257;
t245 = t251 * t410;
t168 = pkin(3) * t264 + t245;
t51 = t113 * pkin(4) + t112 * pkin(10) + t168;
t13 = -qJD(5) * t431 - t249 * t38 + t252 * t51;
t423 = t149 ^ 2;
t417 = pkin(3) * t206;
t416 = pkin(3) * t250;
t5 = t6 * t252;
t412 = pkin(3) * qJD(4);
t123 = -t419 * t159 + t250 * t160;
t407 = t123 * t22;
t406 = t149 * t57;
t405 = t161 * t41;
t403 = t164 * t57;
t402 = t164 * t91;
t401 = t177 * t93;
t202 = pkin(2) * t320 + t250 * t241;
t197 = pkin(10) + t202;
t400 = t197 * t93;
t239 = pkin(10) + t416;
t398 = t239 * t93;
t371 = t169 * t252;
t396 = -t147 * t371 - t197 * t78;
t322 = pkin(3) * t335;
t300 = t252 * t322;
t395 = -t147 * t300 - t239 * t78;
t392 = t429 + t361;
t390 = t429 + t316;
t310 = pkin(5) * t249 - qJ(6) * t252;
t389 = t164 * t310 + t199 - t96;
t65 = t249 * t126 + t252 * t95;
t104 = t145 * t419 - t141;
t115 = t126 + t417;
t61 = t252 * t104 + t249 * t115;
t387 = qJD(5) * t57;
t385 = t112 * t252;
t384 = t147 * t197;
t383 = t147 * t239;
t381 = t149 * t147;
t369 = t178 * t252;
t368 = t206 * t205;
t367 = t228 * t206;
t255 = qJD(1) ^ 2;
t365 = t253 * t255;
t254 = qJD(2) ^ 2;
t364 = t254 * t251;
t363 = t254 * t253;
t243 = pkin(2) * t358;
t111 = t115 + t243;
t63 = t252 * t110 + t249 * t111;
t359 = t251 ^ 2 - t253 ^ 2;
t352 = -t447 * t54 - t448 * t55 + t5;
t350 = t419 * pkin(3);
t349 = t418 * pkin(2);
t347 = t251 * t365;
t345 = t249 * t419;
t344 = t252 * t419;
t340 = t197 * t355;
t339 = t239 * t355;
t337 = t147 ^ 2 - t423;
t327 = t97 - t433;
t326 = pkin(1) * t440;
t317 = t253 * t333;
t201 = -pkin(2) * t342 + t241 * t419;
t312 = (qJD(5) * t147 - t79) * pkin(10);
t311 = t252 * pkin(5) + t249 * qJ(6);
t309 = -t164 * t95 + t290 * t96;
t308 = -t400 + t402;
t307 = -t398 + t402;
t305 = t249 * t41 - t252 * t40;
t304 = t249 * t40 + t252 * t41;
t303 = t249 * t55 + t252 * t54;
t302 = t249 * t54 - t252 * t55;
t64 = t126 * t252 - t249 * t95;
t299 = t149 * t169 - t197 * t79;
t60 = -t104 * t249 + t115 * t252;
t62 = -t110 * t249 + t111 * t252;
t71 = t122 * t252 - t124 * t249;
t226 = -pkin(4) - t311;
t294 = -t447 * t57 + t428;
t288 = -t178 * t356 - t385;
t287 = -t169 * t249 - t340;
t286 = -t197 * t356 + t371;
t12 = t122 * t355 - t124 * t356 + t249 * t51 + t252 * t38;
t285 = -t228 * t205 - t127;
t284 = -t41 * t448 + t452;
t282 = t391 * pkin(10);
t279 = t149 * t322 - t239 * t79;
t275 = t281 * qJD(2);
t274 = t239 * t356 - t300;
t273 = -t249 * t322 - t339;
t270 = -qJD(5) * t305 + t439;
t269 = -qJD(5) * t303 - t7 * t249 + t5;
t268 = t147 * t289 + t370 * t80;
t39 = qJD(4) * t124 + t250 * t119 - t419 * t257;
t256 = -t149 * t161 + t249 * t444 + t290 * t355;
t240 = -t350 - pkin(4);
t216 = -t350 + t226;
t196 = -pkin(4) - t201;
t185 = t243 + t417;
t181 = t226 - t201;
t151 = -t205 ^ 2 + t206 ^ 2;
t135 = t206 * t246 - t261;
t134 = -t205 * t246 - t171;
t130 = -qJD(3) * t184 + t313;
t108 = pkin(5) * t149 + qJ(6) * t147;
t83 = t178 * t310 + t123;
t73 = pkin(10) * t78;
t59 = -pkin(5) * t177 - t71;
t58 = qJ(6) * t177 + t431;
t53 = -t64 - t415;
t52 = t65 + t158;
t49 = -t62 - t415;
t48 = t158 + t63;
t47 = -t60 - t415;
t46 = t158 + t61;
t45 = t147 * t161 - t79;
t32 = t113 * t161 + t401;
t17 = t149 * t288 - t369 * t79;
t16 = -t310 * t112 + (qJD(5) * t311 - qJD(6) * t252) * t178 + t39;
t11 = t113 * t149 + t161 * t288 - t177 * t79 + t369 * t93;
t9 = -pkin(5) * t113 - t13;
t8 = qJ(6) * t113 + qJD(6) * t177 + t12;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t317, t359 * t440, t363, -0.2e1 * t317, -t364, 0, -pkin(7) * t363 + t251 * t326, pkin(7) * t364 + t253 * t326, 0, 0, -t171 * t218 - t206 * t262, t171 * t281 - t218 * t261 + t246 * (-t205 * t281 - t206 * t218) -t262 * t246, -t205 * t264 + t261 * t281, -t264 * t246, 0, -t205 * t245 + t243 * t275 + (t218 * t441 + t130) * t246, -t129 * t246 - t242 * t171 + t206 * t245 + t218 * t236 - t228 * t262, t129 * t205 - t184 * t261 - t127 * t281 - t173 * t264 - t130 * t206 + t183 * t171 - t128 * t218 + t172 * (qJD(3) * t281 + t275) t127 * t184 + t128 * t183 + t129 * t173 + t130 * t172 + t245 * t441, -t290 * t112 + t178 * t258, t112 * t164 - t113 * t290 - t177 * t258 - t178 * t93, -t112 * t330, t113 * t164 + t401, -t113 * t330, 0, t182 * t113 + t153 * t177 + t168 * t164 + t188 * t93 - t330 * t39, -t182 * t112 + t153 * t178 + t168 * t290 + t188 * t258 - t330 * t38, t95 * t112 - t96 * t113 + t123 * t258 - t124 * t93 - t38 * t164 + t177 * t267 + t22 * t178 + t290 * t39, -t124 * t267 + t153 * t188 + t168 * t182 + t38 * t96 - t39 * t95 + t407, t17, t443, t11, t268, -t425, t32, t113 * t54 + t123 * t80 + t13 * t161 + t147 * t39 + t177 * t7 + t178 * t413 - t386 * t91 + t71 * t93, -t113 * t55 - t12 * t161 - t123 * t79 + t149 * t39 - t177 * t6 - t178 * t331 - t91 * t385 - t431 * t93, -t12 * t147 - t13 * t149 + t71 * t79 - t431 * t80 + t303 * t112 + (qJD(5) * t302 - t249 * t6 - t252 * t7) * t178, t12 * t55 + t13 * t54 + t39 * t91 + t431 * t6 + t7 * t71 + t407, t17, t11, -t443, t32, t425, t268, -t57 * t386 - t113 * t40 + t147 * t16 - t161 * t9 - t177 * t4 - t59 * t93 + t80 * t83 + (t355 * t57 + t409) * t178, -t147 * t8 + t149 * t9 - t58 * t80 - t59 * t79 + t305 * t112 + (-qJD(5) * t304 - t2 * t249 + t252 * t4) * t178, t113 * t41 - t149 * t16 + t161 * t8 + t177 * t2 + t178 * t332 + t57 * t385 + t58 * t93 + t79 * t83, t10 * t83 + t16 * t57 + t2 * t58 + t4 * t59 + t40 * t9 + t41 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, t359 * t255, 0, t347, 0, 0, t255 * pkin(1) * t251, pkin(1) * t365, 0, 0, -t368, t151, t134, t368, t135, 0, t205 * t243 - t179 * t246 - t367 + (-t246 * t349 - t173) * qJD(3) + t314, t180 * t246 + (-t206 * t358 - t246 * t336) * pkin(2) + t285, t171 * t351 - t261 * t349 + (pkin(2) * t334 + t173 + t179) * t206 + (pkin(2) * t336 + t172 - t180) * t205, -t172 * t179 - t173 * t180 + (-t228 * t358 + t420 * t128 + t418 * t127 + (-t172 * t418 + t173 * t420) * qJD(3)) * pkin(2), t446, t84, t81, -t446, t82, 0, -t366 - t185 * t164 + (-t96 - t361) * qJD(4) + t327 - t361 * t246, -t185 * t290 + t330 * t430 + t266, t164 * t430 - t201 * t258 - t202 * t93 + t290 * t361 + t309, -t182 * t185 - t201 * t22 - t202 * t267 - t361 * t95 - t430 * t96, t451, -t14, t450, t30, -t278, -t437, t196 * t80 + t308 * t249 + t361 * t147 + (t287 - t62) * t161 + t292, -t196 * t79 + t308 * t252 + t361 * t149 + (-t286 + t63) * t161 + t321, t147 * t63 + t149 * t62 + (t149 * t197 - t54) * t355 + (-t7 + (-t55 + t384) * qJD(5) + t299) * t249 + t352 + t396, -t169 * t302 + t196 * t22 + t197 * t269 + t361 * t91 - t54 * t62 - t55 * t63, t451, t450, t14, -t437, t278, t29, t181 * t80 + (-t400 + t403) * t249 + t392 * t147 + (t287 + t49) * t161 + t293, t147 * t48 + (-t49 + t340) * t149 + ((-t41 + t384) * qJD(5) + t299) * t249 + t284 + t396, t181 * t79 + (-t387 + t400) * t252 - t392 * t149 + (t286 - t48) * t161 + t294, t10 * t181 + t169 * t304 + t197 * t270 + t392 * t57 - t40 * t49 - t41 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, t151, t134, t368, t135, 0, t173 * t246 + t128 - t367, t172 * t246 + t285, 0, 0, t446, t84, t81, -t446, t82, 0, -t146 * t335 - t164 * t417 + t103 * t330 + (-qJD(4) * t132 - t330 * t412 - t101) * t250 + t327, t104 * t330 + (-t206 * t290 - t330 * t335) * pkin(3) + t266, -t258 * t350 - t93 * t416 + t309 + t316 * t290 + (t104 - t322) * t164, t95 * t103 - t96 * t104 + (-t419 * t22 - t182 * t206 - t267 * t250 + (-t250 * t95 + t419 * t96) * qJD(4)) * pkin(3), t451, -t14, t450, t30, -t278, -t437, t240 * t80 + t307 * t249 + t316 * t147 + (-t60 + t273) * t161 + t292, -t240 * t79 + t307 * t252 + t316 * t149 + (t61 + t274) * t161 + t321, t61 * t147 + t60 * t149 + (t149 * t239 - t54) * t355 + (-t7 + (-t55 + t383) * qJD(5) + t279) * t249 + t352 + t395, -t91 * t103 + t22 * t240 - t54 * t60 - t55 * t61 + (t250 * t91 + t344 * t55 - t345 * t54) * t412 + t269 * t239, t451, t450, t14, -t437, t278, t29, t216 * t80 + (-t398 + t403) * t249 + t390 * t147 + (t47 + t273) * t161 + t293, t46 * t147 + (-t47 + t339) * t149 + ((-t41 + t383) * qJD(5) + t279) * t249 + t284 + t395, t216 * t79 + (-t387 + t398) * t252 - t390 * t149 + (-t46 - t274) * t161 + t294, t10 * t216 - t40 * t47 - t41 * t46 + t390 * t57 + (t344 * t41 + t345 * t40) * t412 + t270 * t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t84, t81, -t446, t82, 0, t246 * t96 - t329 - t433, t330 * t95 + t266, 0, 0, t451, -t14, t450, t30, -t278, -t437, -pkin(4) * t80 - t147 * t96 - t161 * t64 + t448 * t91 - t282 + t292, pkin(4) * t79 - pkin(10) * t388 - t149 * t96 + t161 * t65 + t447 * t91 + t321, t147 * t65 + t149 * t64 + t5 - t73 + (-t164 * t54 + (pkin(10) * t149 - t54) * qJD(5)) * t252 + (t312 - t291) * t249, -pkin(4) * t22 + pkin(10) * t269 - t54 * t64 - t55 * t65 - t91 * t96, t451, t450, t14, -t437, t278, t29, t147 * t389 + t161 * t53 + t226 * t80 + t448 * t57 - t282 + t293, t147 * t52 - t73 + (pkin(10) * t355 - t53) * t149 + (t312 - t405) * t249 + t452, t226 * t79 + (-pkin(10) * t356 - t52) * t161 - t389 * t149 + (pkin(10) * t93 - t161 * t57) * t252 + t428, pkin(10) * t270 + t10 * t226 + t389 * t57 - t40 * t53 - t41 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381, -t337, t45, -t381, -t256, t93, -t149 * t91 + t291, t147 * t91 + t161 * t54 - t6, 0, 0, t381, t45, t337, t93, t256, -t381, -t108 * t147 + t291 - t406 + 0.2e1 * t421, pkin(5) * t79 - qJ(6) * t80 + (t41 - t55) * t149 + (t40 - t362) * t147, 0.2e1 * t411 + t108 * t149 - t147 * t57 + (0.2e1 * qJD(6) - t54) * t161 + t6, -pkin(5) * t4 + qJ(6) * t2 - t108 * t57 + t362 * t41 - t40 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t381 - t93, t45, -t161 ^ 2 - t423, t4 - t405 + t406;];
tauc_reg  = t1;
