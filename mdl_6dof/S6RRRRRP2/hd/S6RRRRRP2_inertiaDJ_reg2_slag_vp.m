% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:04
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:03:11
% EndTime: 2019-03-10 01:03:26
% DurationCPUTime: 5.52s
% Computational Cost: add. (10663->357), mult. (23218->562), div. (0->0), fcn. (22740->8), ass. (0->203)
t143 = sin(qJ(5));
t141 = t143 ^ 2;
t146 = cos(qJ(5));
t142 = t146 ^ 2;
t273 = t141 + t142;
t144 = sin(qJ(4));
t261 = cos(qJ(3));
t223 = t261 * pkin(2);
t192 = t223 + pkin(3);
t260 = cos(qJ(4));
t174 = t260 * t192;
t205 = t261 * qJD(3);
t198 = pkin(2) * t205;
t259 = sin(qJ(3));
t204 = t259 * qJD(3);
t72 = -qJD(4) * t174 - t260 * t198 + (t259 * qJD(4) + t204) * t144 * pkin(2);
t50 = t273 * t72;
t191 = t260 * t259;
t272 = (qJD(3) + qJD(4)) * pkin(2) * (t261 * t144 + t191);
t206 = qJD(4) * t260;
t196 = pkin(3) * t206;
t97 = t273 * t196;
t270 = (t141 - t142) * qJD(5);
t145 = sin(qJ(2));
t147 = cos(qJ(2));
t209 = t259 * t145;
t268 = -t147 * (t261 * qJD(2) + t205) + qJD(2) * t209 + t145 * t204;
t265 = -pkin(8) - pkin(7);
t193 = t265 * t259;
t113 = t145 * t193;
t121 = t265 * t147;
t178 = qJD(2) * t193;
t194 = t265 * t261;
t179 = qJD(2) * t194;
t148 = pkin(9) * t268 - qJD(3) * t113 + t121 * t205 - t145 * t178 + t147 * t179;
t227 = qJD(4) * t144;
t171 = -t261 * t145 - t259 * t147;
t161 = t171 * qJD(3);
t151 = qJD(2) * t171 + t161;
t114 = t145 * t194;
t53 = -qJD(3) * t114 - t121 * t204 - t145 * t179 - t147 * t178;
t45 = pkin(9) * t151 - t53;
t84 = t259 * t121 + t114;
t65 = pkin(9) * t171 + t84;
t172 = -t261 * t147 + t209;
t85 = -t261 * t121 + t113;
t66 = -pkin(9) * t172 + t85;
t12 = -t144 * t148 - t65 * t206 + t66 * t227 - t260 * t45;
t158 = t260 * t172;
t35 = qJD(4) * t158 - t144 * t151 - t171 * t227 + t260 * t268;
t162 = t144 * t172;
t36 = -qJD(4) * t162 - t144 * t268 - t260 * t151 - t171 * t206;
t257 = t145 * pkin(2);
t70 = -pkin(3) * t161 + (-pkin(3) * t171 + t257) * qJD(2);
t149 = t36 * pkin(4) + t35 * pkin(10) + t70;
t78 = -t144 * t171 + t158;
t79 = -t171 * t260 - t162;
t137 = -t147 * pkin(2) - pkin(1);
t89 = pkin(3) * t172 + t137;
t153 = -t78 * pkin(4) + t79 * pkin(10) - t89;
t48 = t144 * t65 + t260 * t66;
t251 = -t143 * t153 + t146 * t48;
t6 = -qJD(5) * t251 + t143 * t12 + t146 * t149;
t267 = -0.2e1 * t270;
t266 = 2 * qJD(6);
t264 = pkin(10) * t36;
t263 = pkin(10) * t78;
t262 = t36 * pkin(5);
t13 = qJD(4) * t48 + t144 * t45 - t260 * t148;
t47 = t144 * t66 - t260 * t65;
t258 = t13 * t47;
t101 = pkin(2) * t191 + t144 * t192;
t95 = pkin(10) + t101;
t256 = t36 * t95;
t217 = pkin(3) * t227;
t73 = t217 + t272;
t255 = t47 * t73;
t254 = t72 * t78;
t253 = t78 * t95;
t140 = qJD(5) * t146;
t43 = t47 * t140;
t252 = t13 * t143 + t43;
t250 = t50 * t95;
t139 = qJD(5) * t143;
t99 = pkin(5) * t139 - qJ(6) * t140 - t143 * qJD(6);
t57 = t73 + t99;
t86 = t99 + t217;
t249 = -t57 - t86;
t248 = -t57 - t99;
t247 = t50 * pkin(10);
t221 = t259 * pkin(2);
t100 = -t144 * t221 + t174;
t94 = -pkin(4) - t100;
t246 = t94 * t140 + t73 * t143;
t245 = -t86 - t99;
t244 = qJ(6) * t36;
t243 = qJD(4) * pkin(3);
t135 = t144 * pkin(3) + pkin(10);
t242 = t135 * t36;
t241 = t135 * t78;
t240 = t141 * t35;
t239 = t142 * t35;
t238 = t144 * t47;
t237 = t146 * t35;
t26 = (pkin(5) * t143 - qJ(6) * t146) * t79 + t47;
t236 = qJD(5) * t26;
t234 = qJD(6) * t78;
t233 = t97 * t135;
t232 = t97 * pkin(10);
t222 = t260 * pkin(3);
t136 = -t222 - pkin(4);
t231 = t136 * t140 + t143 * t217;
t228 = qJ(6) * qJD(5);
t226 = t145 * qJD(2);
t225 = t147 * qJD(2);
t31 = 0.2e1 * t78 * t36;
t224 = -0.2e1 * pkin(1) * qJD(2);
t220 = pkin(4) * t139;
t219 = pkin(4) * t140;
t218 = pkin(2) * t226;
t216 = pkin(10) * t139;
t215 = pkin(10) * t140;
t214 = t143 * t237;
t213 = t79 * t139;
t212 = t79 * t140;
t25 = t26 * t139;
t42 = t47 * t139;
t211 = t143 * t260;
t210 = t146 * t260;
t208 = t143 * t140;
t207 = t145 * t225;
t87 = t94 * t139;
t202 = -t146 * t73 + t87;
t201 = -0.2e1 * t217;
t200 = -t50 * t135 + t97 * t95;
t199 = pkin(5) * qJD(5) - qJD(6);
t197 = pkin(2) * t204;
t77 = t79 ^ 2;
t195 = t77 * t208;
t165 = qJ(6) * t35 + t199 * t79;
t176 = -pkin(5) * t35 + t228 * t79;
t7 = t143 * t176 + t146 * t165 + t13;
t190 = t26 * t35 - t7 * t79;
t189 = t13 * t79 - t35 * t47;
t188 = t35 * t78 - t36 * t79;
t187 = t73 * t79 + t254;
t186 = -t79 * t94 + t253;
t185 = -t146 * pkin(5) - t143 * qJ(6);
t184 = -t136 * t79 + t241;
t17 = qJ(6) * t78 + t251;
t152 = t146 * t153;
t21 = -t143 * t48 - t152;
t18 = -t78 * pkin(5) - t21;
t183 = -t143 * t18 - t146 * t17;
t182 = t143 * t17 - t146 * t18;
t181 = t143 * t251 + t146 * t21;
t180 = t143 * t21 - t146 * t251;
t116 = t136 * t139;
t177 = -t146 * t217 + t116;
t119 = -pkin(4) + t185;
t175 = t213 + t237;
t27 = t139 * t78 - t146 * t36;
t5 = qJD(5) * t152 + t146 * t12 + t139 * t48 - t143 * t149;
t173 = -t119 * t35 + t79 * t99 - t264;
t170 = -t7 + (t119 * t79 - t263) * qJD(5);
t81 = t185 + t94;
t169 = -t7 + (t79 * t81 - t253) * qJD(5);
t168 = (t144 * t79 - t260 * t78) * qJD(4);
t106 = -t222 + t119;
t166 = -t7 + (t106 * t79 - t241) * qJD(5);
t163 = t137 * t171;
t160 = -t35 * t81 + t57 * t79 + t254 - t256;
t159 = -t35 * t94 + t187 - t256;
t98 = qJD(5) * t185 + t146 * qJD(6);
t3 = t234 - t5 + t244;
t4 = -t262 - t6;
t1 = -qJD(5) * t182 + t4 * t143 + t3 * t146;
t2 = -qJD(5) * t181 - t6 * t143 - t5 * t146;
t155 = -t106 * t35 - t196 * t78 + t79 * t86 - t242;
t154 = pkin(3) * t168 - t136 * t35 - t242;
t130 = -0.2e1 * t208;
t129 = 0.2e1 * t208;
t105 = t119 * t139;
t93 = t106 * t139;
t92 = t135 * t140 + t143 * t196;
t91 = t135 * t139 - t146 * t196;
t90 = 0.2e1 * t97;
t80 = t81 * t139;
t54 = -t85 * qJD(3) + (t147 * t194 - t113) * qJD(2);
t52 = t140 * t95 - t143 * t72;
t51 = t139 * t95 + t146 * t72;
t49 = -0.2e1 * t50;
t37 = t97 - t50;
t30 = -t143 * t35 + t212;
t29 = t140 * t78 + t143 * t36;
t24 = -0.2e1 * t239 * t79 - 0.2e1 * t195;
t23 = -0.2e1 * t240 * t79 + 0.2e1 * t195;
t20 = t79 * t270 + t214;
t19 = 0.2e1 * t214 * t79 + t270 * t77;
t14 = 0.4e1 * t208 * t79 + t239 - t240;
t9 = -t143 * t188 + t212 * t78;
t8 = -0.2e1 * t146 * t188 - 0.2e1 * t213 * t78;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t207, 0.2e1 * (-t145 ^ 2 + t147 ^ 2) * qJD(2), 0, -0.2e1 * t207, 0, 0, t145 * t224, t147 * t224, 0, 0, 0.2e1 * t171 * t268, -0.2e1 * t151 * t171 + 0.2e1 * t172 * t268, 0, -0.2e1 * t172 * t151, 0, 0, -0.2e1 * qJD(3) * t163 + 0.2e1 * (t172 * t257 - t163) * qJD(2), -0.2e1 * t137 * t268 - 0.2e1 * t171 * t218, 0.2e1 * t151 * t85 + 0.2e1 * t171 * t54 + 0.2e1 * t172 * t53 + 0.2e1 * t268 * t84, 0.2e1 * t137 * t218 - 0.2e1 * t53 * t85 + 0.2e1 * t54 * t84, -0.2e1 * t79 * t35, 0.2e1 * t188, 0, t31, 0, 0, 0.2e1 * t36 * t89 + 0.2e1 * t70 * t78, -0.2e1 * t35 * t89 + 0.2e1 * t70 * t79, 0.2e1 * t12 * t78 - 0.2e1 * t36 * t48 + 0.2e1 * t189, -0.2e1 * t12 * t48 + 0.2e1 * t70 * t89 + 0.2e1 * t258, t24, 0.2e1 * t19, t8, t23, -0.2e1 * t9, t31, 0.2e1 * t143 * t189 + 0.2e1 * t21 * t36 + 0.2e1 * t43 * t79 + 0.2e1 * t6 * t78, 0.2e1 * t146 * t189 - 0.2e1 * t251 * t36 - 0.2e1 * t42 * t79 + 0.2e1 * t5 * t78, 0.2e1 * t181 * t35 + 0.2e1 * (qJD(5) * t180 + t143 * t5 - t146 * t6) * t79, 0.2e1 * t21 * t6 - 0.2e1 * t251 * t5 + 0.2e1 * t258, t24, t8, -0.2e1 * t19, t31, 0.2e1 * t9, t23, -0.2e1 * t143 * t190 - 0.2e1 * t18 * t36 + 0.2e1 * t212 * t26 - 0.2e1 * t4 * t78, 0.2e1 * t182 * t35 + 0.2e1 * (qJD(5) * t183 - t143 * t3 + t146 * t4) * t79, 0.2e1 * t146 * t190 + 0.2e1 * t17 * t36 + 0.2e1 * t25 * t79 + 0.2e1 * t3 * t78, 0.2e1 * t17 * t3 + 0.2e1 * t18 * t4 + 0.2e1 * t26 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, 0, -t226, 0, -pkin(7) * t225, pkin(7) * t226, 0, 0, 0, 0, -t268, 0, t151, 0, t54, t53, t151 * t221 - t171 * t197 - t172 * t198 + t223 * t268 (-t53 * t259 + t261 * t54 + (-t259 * t84 + t261 * t85) * qJD(3)) * pkin(2), 0, 0, -t35, 0, -t36, 0, -t13, t12, t100 * t35 - t101 * t36 + t187, -t100 * t13 - t101 * t12 - t48 * t72 + t255, -t20, -t14, t29, t20, -t27, 0, t42 + (-qJD(5) * t186 - t13) * t146 + t159 * t143, t139 * t186 + t146 * t159 + t252, t2, t13 * t94 + t180 * t72 + t2 * t95 + t255, -t20, t29, t14, 0, t27, t20, t143 * t160 + t146 * t169 + t25, t1, t169 * t143 + (-t160 - t236) * t146, t1 * t95 + t183 * t72 + t26 * t57 + t7 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t197, -0.2e1 * t198, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t73, 0.2e1 * t72, 0, -0.2e1 * t100 * t73 - 0.2e1 * t101 * t72, t129, t267, 0, t130, 0, 0, 0.2e1 * t202, 0.2e1 * t246, t49, 0.2e1 * t73 * t94 - 0.2e1 * t250, t129, 0, -t267, 0, 0, t130, -0.2e1 * t146 * t57 + 0.2e1 * t80, t49, -0.2e1 * t140 * t81 - 0.2e1 * t57 * t143, 0.2e1 * t57 * t81 - 0.2e1 * t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, 0, t151, 0, t54, t53, 0, 0, 0, 0, -t35, 0, -t36, 0, -t13, t12 (-t144 * t36 + t260 * t35 + t168) * pkin(3) (-t260 * t13 - t12 * t144 + (t260 * t48 + t238) * qJD(4)) * pkin(3), -t20, -t14, t29, t20, -t27, 0, t42 + (-qJD(5) * t184 - t13) * t146 + t154 * t143, t139 * t184 + t146 * t154 + t252, t2, t13 * t136 + (-t21 * t211 + t210 * t251 + t238) * t243 + t2 * t135, -t20, t29, t14, 0, t27, t20, t143 * t155 + t146 * t166 + t25, t1, t166 * t143 + (-t155 - t236) * t146, t7 * t106 + t26 * t86 + (t17 * t210 + t18 * t211) * t243 + t1 * t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, -t198, 0, 0, 0, 0, 0, 0, 0, 0, t201 - t272, -t196 + t72, 0 (-t260 * t73 - t144 * t72 + (-t100 * t144 + t260 * t101) * qJD(4)) * pkin(3), t129, t267, 0, t130, 0, 0, t116 + t87 + (-t73 - t217) * t146, t231 + t246, t37, t136 * t73 + t217 * t94 + t200, t129, 0, -t267, 0, 0, t130, t146 * t249 + t80 + t93, t37, t249 * t143 + (-t106 - t81) * t140, t106 * t57 + t81 * t86 + t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -0.2e1 * t196, 0, 0, t129, t267, 0, t130, 0, 0, 0.2e1 * t177, 0.2e1 * t231, t90, 0.2e1 * t136 * t217 + 0.2e1 * t233, t129, 0, -t267, 0, 0, t130, -0.2e1 * t146 * t86 + 0.2e1 * t93, t90, -0.2e1 * t106 * t140 - 0.2e1 * t86 * t143, 0.2e1 * t106 * t86 + 0.2e1 * t233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, 0, -t36, 0, -t13, t12, 0, 0, -t20, -t14, t29, t20, -t27, 0, t42 + (pkin(4) * t35 - t264) * t143 + (-t13 + (-pkin(4) * t79 - t263) * qJD(5)) * t146, pkin(4) * t175 + pkin(10) * t27 + t252, t2, -t13 * pkin(4) + pkin(10) * t2, -t20, t29, t14, 0, t27, t20, t143 * t173 + t146 * t170 + t25, t1, t170 * t143 + (-t173 - t236) * t146, pkin(10) * t1 + t7 * t119 + t26 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, t72, 0, 0, t129, t267, 0, t130, 0, 0, t202 - t220, -t219 + t246, -t50, -pkin(4) * t73 - t247, t129, 0, -t267, 0, 0, t130, t146 * t248 + t105 + t80, -t50, t248 * t143 + (-t119 - t81) * t140, t119 * t57 + t81 * t99 - t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, -t196, 0, 0, t129, t267, 0, t130, 0, 0, t177 - t220, -t219 + t231, t97, -pkin(4) * t217 + t232, t129, 0, -t267, 0, 0, t130, t146 * t245 + t105 + t93, t97, t245 * t143 + (-t106 - t119) * t140, t106 * t99 + t119 * t86 + t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t267, 0, t130, 0, 0, -0.2e1 * t220, -0.2e1 * t219, 0, 0, t129, 0, -t267, 0, 0, t130, -0.2e1 * t146 * t99 + 0.2e1 * t105, 0, -0.2e1 * t119 * t140 - 0.2e1 * t99 * t143, 0.2e1 * t119 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, 0, -t30, t36, t6, t5, 0, 0, 0, -t175, 0, t36, t30, 0, t6 + 0.2e1 * t262, t143 * t165 - t146 * t176, 0.2e1 * t234 - t5 + 0.2e1 * t244, -pkin(5) * t4 + qJ(6) * t3 + qJD(6) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t139, 0, -t52, t51, 0, 0, 0, t140, 0, 0, t139, 0, -t52, t98, -t51 (pkin(5) * t72 - t228 * t95) * t143 + (-qJ(6) * t72 - t199 * t95) * t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t139, 0, -t92, t91, 0, 0, 0, t140, 0, 0, t139, 0, -t92, t98, -t91 (-pkin(5) * t211 + qJ(6) * t210) * t243 + t98 * t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, -t139, 0, -t215, t216, 0, 0, 0, t140, 0, 0, t139, 0, -t215, t98, -t216, t98 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, qJ(6) * t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t175, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, 0, t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
