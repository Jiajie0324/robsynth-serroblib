% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 04:36
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRRP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP2_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 04:34:55
% EndTime: 2019-05-08 04:36:01
% DurationCPUTime: 69.91s
% Computational Cost: add. (396175->970), mult. (862744->1252), div. (0->0), fcn. (654999->10), ass. (0->642)
t2013 = cos(qJ(5));
t2008 = sin(qJ(5));
t2010 = sin(qJ(3));
t2015 = cos(qJ(3));
t2016 = cos(qJ(2));
t2156 = qJD(1) * t2016;
t2011 = sin(qJ(2));
t2157 = qJD(1) * t2011;
t1967 = -t2010 * t2157 + t2015 * t2156;
t1968 = (t2010 * t2016 + t2011 * t2015) * qJD(1);
t2009 = sin(qJ(4));
t2014 = cos(qJ(4));
t1934 = t1967 * t2009 + t1968 * t2014;
t2005 = qJD(2) + qJD(3);
t2095 = qJD(4) + t2005;
t1906 = t2008 * t1934 - t2013 * t2095;
t2000 = qJD(2) * t2156;
t2107 = t2011 * qJDD(1);
t1977 = t2000 + t2107;
t2001 = t2016 * qJDD(1);
t2096 = qJD(2) * t2157;
t1978 = t2001 - t2096;
t1912 = qJD(3) * t1967 + t2015 * t1977 + t2010 * t1978;
t1932 = -t2014 * t1967 + t1968 * t2009;
t2084 = t2010 * t1977 - t2015 * t1978;
t2050 = qJD(3) * t1968 + t2084;
t1820 = -t1932 * qJD(4) + t2014 * t1912 - t2009 * t2050;
t2106 = qJDD(2) + qJDD(3);
t2088 = qJDD(4) + t2106;
t2038 = -t2013 * t1820 - t2008 * t2088;
t1781 = -t1906 * qJD(5) - t2038;
t1928 = qJD(5) + t1932;
t2130 = t1906 * t1928;
t2177 = -t2130 + t1781;
t2145 = t2177 * t2008;
t1908 = t2013 * t1934 + t2008 * t2095;
t2086 = -t2008 * t1820 + t2013 * t2088;
t1780 = qJD(5) * t1908 - t2086;
t1863 = t1928 * t1908;
t2185 = t1780 + t1863;
t1654 = -t2185 * t2013 - t2145;
t1905 = t1908 ^ 2;
t2167 = t1906 ^ 2;
t2181 = t1905 - t2167;
t1617 = t1654 * t2009 - t2014 * t2181;
t1619 = t1654 * t2014 + t2009 * t2181;
t1547 = t1617 * t2015 + t1619 * t2010;
t1548 = t1617 * t2010 - t1619 * t2015;
t1484 = t1547 * t2011 + t1548 * t2016;
t2144 = t2177 * t2013;
t1650 = -t2185 * t2008 + t2144;
t2012 = sin(qJ(1));
t2017 = cos(qJ(1));
t2284 = t1484 * t2012 + t1650 * t2017;
t2283 = t1484 * t2017 - t1650 * t2012;
t2166 = t1928 ^ 2;
t1859 = t2167 - t2166;
t2085 = t2009 * t1912 + t2014 * t2050;
t1819 = -t1934 * qJD(4) - t2085;
t1818 = qJDD(5) - t1819;
t1852 = t1908 * t1906;
t2183 = t1818 + t1852;
t2200 = t2183 * t2008;
t1726 = t1859 * t2013 - t2200;
t1747 = t1780 - t1863;
t1641 = t1726 * t2009 + t1747 * t2014;
t1645 = t1726 * t2014 - t1747 * t2009;
t1567 = t1641 * t2015 + t1645 * t2010;
t1570 = t1641 * t2010 - t1645 * t2015;
t1505 = t1567 * t2011 + t1570 * t2016;
t2199 = t2183 * t2013;
t1722 = t1859 * t2008 + t2199;
t2282 = t1505 * t2012 + t1722 * t2017;
t2281 = t1505 * t2017 - t1722 * t2012;
t1483 = t1547 * t2016 - t1548 * t2011;
t1502 = t1567 * t2016 - t1570 * t2011;
t1860 = t1905 - t2166;
t2184 = t1818 - t1852;
t2141 = t2184 * t2008;
t2228 = -t1860 * t2013 + t2141;
t2176 = t2130 + t1781;
t2140 = t2184 * t2013;
t2227 = t1860 * t2008 + t2140;
t2242 = t2009 * t2176 + t2014 * t2227;
t2245 = t2009 * t2227 - t2014 * t2176;
t2253 = t2010 * t2242 + t2015 * t2245;
t2254 = -t2010 * t2245 + t2015 * t2242;
t2272 = -t2011 * t2253 + t2016 * t2254;
t2280 = t2012 * t2272 - t2017 * t2228;
t2279 = t2012 * t2228 + t2017 * t2272;
t2175 = -t2166 - t2167;
t2195 = t2013 * t2175 - t2141;
t2224 = t2009 * t2185 + t2014 * t2195;
t2225 = t2009 * t2195 - t2014 * t2185;
t2238 = t2010 * t2224 + t2015 * t2225;
t2239 = -t2010 * t2225 + t2015 * t2224;
t2252 = t2011 * t2239 + t2016 * t2238;
t2278 = pkin(1) * t2252;
t2277 = pkin(7) * t2252;
t2196 = t2008 * t2175 + t2140;
t2251 = -t2011 * t2238 + t2016 * t2239;
t2276 = -pkin(1) * t2196 + pkin(7) * t2251;
t2275 = pkin(6) * (t2012 * t2251 - t2017 * t2196);
t2274 = pkin(6) * (t2012 * t2196 + t2017 * t2251);
t2273 = t2011 * t2254 + t2016 * t2253;
t1826 = t2166 + t1905;
t1694 = t1826 * t2013 + t2200;
t2271 = pkin(1) * t1694;
t2270 = pkin(2) * t1694;
t2269 = pkin(2) * t2238;
t2268 = pkin(3) * t1694;
t2267 = pkin(4) * t1694;
t2266 = pkin(8) * t2238;
t2265 = pkin(10) * t1694;
t1708 = t1826 * t2008 - t2199;
t2264 = pkin(10) * t1708;
t2261 = t1694 * t2012;
t2260 = t1694 * t2017;
t2259 = t1708 * t2009;
t2258 = t1708 * t2014;
t2255 = -pkin(2) * t2196 + pkin(8) * t2239;
t2250 = pkin(3) * t2225;
t2249 = pkin(9) * t2225;
t2246 = -pkin(3) * t2196 + pkin(9) * t2224;
t2186 = (t1906 * t2008 + t1908 * t2013) * t1928;
t2127 = t1928 * t2008;
t1857 = t1908 * t2127;
t2126 = t1928 * t2013;
t2101 = t1906 * t2126;
t2066 = t1857 - t2101;
t2171 = t1818 * t2009 + t2014 * t2066;
t2174 = -t2014 * t1818 + t2009 * t2066;
t2193 = t2010 * t2171 + t2015 * t2174;
t2194 = -t2010 * t2174 + t2015 * t2171;
t2219 = -t2011 * t2193 + t2016 * t2194;
t2244 = t2012 * t2219 + t2017 * t2186;
t1737 = -t1780 * t2013 + t1906 * t2127;
t2051 = t1780 * t2008 + t2101;
t2103 = t2009 * t1852;
t2172 = t2014 * t2051 - t2103;
t2102 = t2014 * t1852;
t2173 = t2009 * t2051 + t2102;
t2191 = t2010 * t2172 + t2015 * t2173;
t2192 = -t2010 * t2173 + t2015 * t2172;
t2221 = -t2011 * t2191 + t2016 * t2192;
t2243 = -t1737 * t2017 + t2012 * t2221;
t2241 = -t2012 * t2186 + t2017 * t2219;
t2240 = t1737 * t2012 + t2017 * t2221;
t2234 = pkin(4) * t2196;
t2233 = pkin(10) * t2195;
t2232 = pkin(10) * t2196;
t2231 = -qJ(6) * t2008 - pkin(4);
t2007 = t2016 ^ 2;
t2019 = qJD(1) ^ 2;
t1987 = t2012 * g(1) - t2017 * g(2);
t2056 = qJDD(1) * pkin(1) + t1987;
t2057 = qJD(2) * pkin(2) - pkin(8) * t2157;
t1914 = t1978 * pkin(2) - t2057 * t2157 + t2056 + (pkin(8) * t2007 + pkin(7)) * t2019;
t1740 = t1781 * t2008 + t1908 * t2126;
t1741 = t1781 * t2013 - t1857;
t2067 = t2014 * t1741 + t2103;
t2068 = t2009 * t1741 - t2102;
t2169 = t2010 * t2067 + t2015 * t2068;
t2170 = -t2010 * t2068 + t2015 * t2067;
t2189 = -t2011 * t2169 + t2016 * t2170;
t2226 = -t2017 * t1740 + t2012 * t2189;
t2223 = t1740 * t2012 + t2017 * t2189;
t2222 = t2011 * t2192 + t2016 * t2191;
t2220 = t2011 * t2194 + t2016 * t2193;
t2180 = t1905 + t2167;
t2218 = pkin(4) * t2180;
t2217 = qJ(6) * t2177;
t2213 = t2009 * t2180;
t1876 = t1934 * t1932;
t2182 = -t1876 + t2088;
t2211 = t2009 * t2182;
t1940 = t1967 * t1968;
t2178 = t1940 + t2106;
t2209 = t2010 * t2178;
t2206 = t2014 * t2180;
t2204 = t2014 * t2182;
t2202 = t2015 * t2178;
t1921 = t2095 * t1932;
t2198 = -t1921 + t1820;
t2155 = qJD(6) * t1928;
t1923 = 0.2e1 * t2155;
t2002 = t2007 * t2019;
t2161 = t2011 * g(3);
t2023 = -pkin(2) * t2002 + t1978 * pkin(8) - qJD(2) * t2057 - t2161;
t2113 = t2011 * t2019;
t2158 = qJD(1) * qJD(2);
t2043 = pkin(2) * t2113 + pkin(8) * t2158 - g(3);
t1988 = g(1) * t2017 + g(2) * t2012;
t1970 = -pkin(1) * t2019 + qJDD(1) * pkin(7) - t1988;
t2114 = t2011 * t1970;
t2044 = qJDD(2) * pkin(2) - t1977 * pkin(8) - t2114;
t2112 = t2016 * t1970;
t1847 = t2015 * (t2023 + t2112) + t2010 * (t2016 * t2043 + t2044);
t1965 = t1967 ^ 2;
t2074 = pkin(3) * t2005 - pkin(9) * t1968;
t1779 = -t1965 * pkin(3) - pkin(9) * t2050 - t2005 * t2074 + t1847;
t1846 = t2010 * t2023 - t2015 * t2044 + (t2010 * t1970 - t2015 * t2043) * t2016;
t1962 = t2005 * t1967;
t1887 = t1912 - t1962;
t2020 = pkin(3) * t2178 - pkin(9) * t1887 - t1846;
t1681 = t2014 * t1779 + t2009 * t2020;
t1870 = pkin(4) * t1932 - pkin(10) * t1934;
t2087 = t2095 ^ 2;
t1664 = -pkin(4) * t2087 + pkin(10) * t2088 - t1932 * t1870 + t1681;
t1812 = -pkin(3) * t2050 + t1965 * pkin(9) - t1968 * t2074 + t1914;
t2072 = t2095 * t1934;
t1671 = -t2198 * pkin(10) + (-t1819 + t2072) * pkin(4) - t1812;
t1583 = t2013 * t1664 + t2008 * t1671;
t1848 = pkin(5) * t1906 - qJ(6) * t1908;
t2062 = -pkin(5) * t2166 + t1818 * qJ(6) - t1906 * t1848 + t1583;
t1543 = t1923 + t2062;
t1582 = t1664 * t2008 - t2013 * t1671;
t1544 = -t1818 * pkin(5) - qJ(6) * t2166 + t1848 * t1908 + qJDD(6) + t1582;
t1480 = t1543 * t2013 + t1544 * t2008;
t1680 = t2009 * t1779 - t2014 * t2020;
t1663 = -t2088 * pkin(4) - t2087 * pkin(10) + t1934 * t1870 + t1680;
t2030 = t1780 * pkin(5) + t1663 - t2217;
t1575 = (pkin(5) * t1928 - 0.2e1 * qJD(6)) * t1908 + t2030;
t1458 = t1480 * t2009 - t1575 * t2014;
t1459 = t1480 * t2014 + t1575 * t2009;
t1434 = t1458 * t2015 + t1459 * t2010;
t2037 = pkin(10) * t1480 + (-pkin(5) * t2013 + t2231) * t1575;
t2034 = pkin(3) * t1458 + t2037;
t2197 = pkin(2) * t1434 + t2034;
t2190 = t2011 * t2170 + t2016 * t2169;
t1511 = t2008 * t1582 + t2013 * t1583;
t2179 = t1912 + t1962;
t2018 = qJD(2) ^ 2;
t1994 = -t2002 - t2018;
t1883 = (qJD(3) - t2005) * t1968 + t2084;
t2004 = t2005 ^ 2;
t1935 = -t2004 - t1965;
t1872 = t1935 * t2010 + t2202;
t1955 = t2016 * g(3) + t2114;
t1956 = t2112 - t2161;
t1996 = t2016 * t2113;
t1985 = qJDD(2) + t1996;
t2168 = pkin(2) * (t2015 * t1985 - t1994 * t2010 + t1872) - pkin(8) * (t2010 * (t1978 + t2096) - t2015 * (-t1977 + t2000)) - t1955 * t2015 - t1956 * t2010;
t1930 = t1932 ^ 2;
t1931 = t1934 ^ 2;
t1966 = t1968 ^ 2;
t1772 = -t1846 * t2015 + t1847 * t2010;
t2164 = pkin(2) * t1772;
t1822 = -t1883 * t2010 - t1887 * t2015;
t2163 = pkin(2) * t1822;
t2162 = pkin(4) * t2009;
t2159 = qJ(6) * t2013;
t1591 = -t1680 * t2014 + t1681 * t2009;
t2154 = t1591 * t2010;
t2153 = t1591 * t2015;
t2147 = t2176 * t2008;
t2146 = t2176 * t2013;
t2139 = t1772 * t2011;
t2138 = t1772 * t2016;
t2137 = t1812 * t2009;
t2136 = t1812 * t2014;
t1868 = t1876 + t2088;
t2132 = t1868 * t2009;
t2131 = t1868 * t2014;
t2129 = t1914 * t2010;
t2128 = t1914 * t2015;
t1937 = -t1940 + t2106;
t2125 = t1937 * t2010;
t2124 = t1937 * t2015;
t1969 = t2019 * pkin(7) + t2056;
t2123 = t1969 * t2011;
t2122 = t1969 * t2016;
t2121 = t1985 * t2011;
t1986 = qJDD(2) - t1996;
t2120 = t1986 * t2011;
t2119 = t1986 * t2016;
t2118 = t2005 * t1968;
t2117 = t2005 * t2010;
t2116 = t2005 * t2015;
t2006 = t2011 ^ 2;
t2115 = t2006 * t2019;
t1659 = t2008 * t1663;
t1660 = t2013 * t1663;
t2109 = -pkin(4) * t1663 + pkin(10) * t1511;
t2108 = t2006 + t2007;
t2105 = -pkin(4) * t2014 - pkin(3);
t2100 = t2012 * t1876;
t2099 = t2017 * t1876;
t2098 = t2012 * t1940;
t2097 = t2017 * t1940;
t1754 = (qJD(5) + t1928) * t1906 + t2038;
t2094 = pkin(4) * t1754 + t1659 + t2264;
t2093 = -pkin(4) * t2185 - t1660 + t2233;
t1492 = t1511 * t2009 - t1663 * t2014;
t2092 = pkin(3) * t1492 + t2109;
t1909 = -t1931 - t2087;
t1830 = t1909 * t2014 - t2132;
t2091 = pkin(3) * t1830 - t1681;
t1592 = t1680 * t2009 + t2014 * t1681;
t1514 = t1592 * t2010 + t2153;
t1590 = pkin(3) * t1591;
t2090 = pkin(2) * t1514 + t1590;
t1791 = -t1934 * t2005 + t2085;
t1794 = t1921 + t1820;
t1713 = -t1791 * t2009 - t1794 * t2014;
t1715 = -t1791 * t2014 + t1794 * t2009;
t1606 = t1713 * t2015 + t1715 * t2010;
t1710 = pkin(3) * t1713;
t2089 = pkin(2) * t1606 + t1710;
t1773 = t1846 * t2010 + t2015 * t1847;
t1900 = t1955 * t2011 + t2016 * t1956;
t2083 = -t1987 * t2012 - t2017 * t1988;
t2082 = t2012 * t1996;
t2081 = t2017 * t1996;
t1526 = pkin(5) * t2180 + t1543;
t1528 = qJ(6) * t2180 + t1544;
t1653 = -t1747 * t2013 + t2147;
t2080 = pkin(10) * t1653 + t2013 * t1526 + t2008 * t1528 + t2218;
t1749 = (-qJD(5) + t1928) * t1908 + t2086;
t1655 = t1749 * t2013 + t2147;
t2079 = pkin(10) * t1655 + t1511 + t2218;
t1630 = t1754 * t2014 + t2259;
t2078 = pkin(3) * t1630 + t2094;
t2077 = t2093 + t2250;
t1954 = -t1966 - t2004;
t1888 = t1954 * t2015 - t2125;
t2076 = pkin(2) * t1888 - t1847;
t1982 = qJDD(1) * t2017 - t2012 * t2019;
t2073 = -pkin(6) * t1982 - g(3) * t2012;
t2071 = -pkin(5) * t1544 + qJ(6) * t1543;
t2070 = -pkin(5) * t2176 - qJ(6) * t1747;
t1866 = -t2087 - t1930;
t1801 = t1866 * t2009 + t2204;
t2065 = pkin(3) * t1801 - t1680;
t1611 = t1653 * t2009 + t2206;
t2064 = pkin(3) * t1611 + t2080;
t1612 = t1655 * t2009 + t2206;
t2063 = pkin(3) * t1612 + t2079;
t1510 = -t1582 * t2013 + t1583 * t2008;
t1899 = t1955 * t2016 - t1956 * t2011;
t2060 = t1987 * t2017 - t1988 * t2012;
t1493 = t1511 * t2014 + t1663 * t2009;
t1448 = t1492 * t2015 + t1493 * t2010;
t2059 = pkin(2) * t1448 + t2092;
t1831 = -t1909 * t2009 - t2131;
t1761 = t1830 * t2015 + t1831 * t2010;
t2058 = pkin(2) * t1761 + t2091;
t2055 = t2009 * t1921;
t2054 = t2009 * t2072;
t2053 = t2014 * t1921;
t2052 = t2014 * t2072;
t2028 = 0.2e1 * qJD(6) * t1908 - t2030;
t1539 = -pkin(5) * t1863 + t2028 + t2217;
t2049 = pkin(4) * t2177 + pkin(5) * t2144 + t2008 * t1539 - t2264;
t2048 = t2077 + t2269;
t1632 = -t1754 * t2009 + t2258;
t1555 = t1630 * t2015 + t1632 * t2010;
t2047 = pkin(2) * t1555 + t2078;
t1540 = (-t2185 - t1863) * pkin(5) + t2028;
t2046 = t2013 * t1540 + t2185 * t2231 + t2233;
t1802 = t1866 * t2014 - t2211;
t1717 = t1801 * t2015 + t1802 * t2010;
t2045 = pkin(2) * t1717 + t2065;
t1624 = t2014 * t2177 - t2259;
t2042 = pkin(3) * t1624 + t2049;
t1613 = t1653 * t2014 - t2213;
t1533 = t1611 * t2015 + t1613 * t2010;
t2041 = pkin(2) * t1533 + t2064;
t1614 = t1655 * t2014 - t2213;
t1534 = t1612 * t2015 + t1614 * t2010;
t2040 = pkin(2) * t1534 + t2063;
t2039 = t2046 + t2250;
t1626 = -t2009 * t2177 - t2258;
t1550 = t1624 * t2015 + t1626 * t2010;
t2035 = pkin(2) * t1550 + t2042;
t2033 = t2039 + t2269;
t2032 = pkin(5) * t1826 + qJ(6) * t2183 + t2062;
t2024 = pkin(5) * t2184 + qJ(6) * t2175 - t1544;
t1993 = t2002 - t2018;
t1992 = -t2018 - t2115;
t1991 = t2018 - t2115;
t1984 = -t2002 + t2115;
t1983 = t2002 + t2115;
t1981 = qJDD(1) * t2012 + t2017 * t2019;
t1980 = t2108 * qJDD(1);
t1979 = t2001 - 0.2e1 * t2096;
t1976 = 0.2e1 * t2000 + t2107;
t1974 = t2016 * t1985;
t1973 = t2108 * t2158;
t1964 = -pkin(6) * t1981 + g(3) * t2017;
t1960 = -t1966 + t2004;
t1959 = t1965 - t2004;
t1958 = t1977 * t2016 - t2006 * t2158;
t1957 = -t1978 * t2011 - t2007 * t2158;
t1953 = -t1992 * t2011 - t2119;
t1952 = -t1991 * t2011 + t1974;
t1951 = t1994 * t2016 - t2121;
t1950 = t1993 * t2016 - t2120;
t1949 = t1992 * t2016 - t2120;
t1948 = t1991 * t2016 + t2121;
t1947 = t1994 * t2011 + t1974;
t1946 = t1993 * t2011 + t2119;
t1945 = (t1977 + t2000) * t2011;
t1944 = (t1978 - t2096) * t2016;
t1942 = -t1976 * t2011 + t1979 * t2016;
t1941 = t1976 * t2016 + t1979 * t2011;
t1939 = t1966 - t1965;
t1920 = -t1931 + t2087;
t1919 = t1930 - t2087;
t1918 = (t1967 * t2015 + t1968 * t2010) * t2005;
t1917 = (t1967 * t2010 - t1968 * t2015) * t2005;
t1916 = -pkin(7) * t1949 - t2122;
t1915 = -pkin(7) * t1947 - t2123;
t1913 = -t1965 - t1966;
t1911 = -pkin(1) * t1949 + t1956;
t1910 = -pkin(1) * t1947 + t1955;
t1895 = pkin(1) * t1979 + pkin(7) * t1951 + t2122;
t1894 = -pkin(1) * t1976 + pkin(7) * t1953 - t2123;
t1893 = t1959 * t2015 - t2125;
t1892 = -t1960 * t2010 + t2202;
t1891 = t1959 * t2010 + t2124;
t1890 = t1960 * t2015 + t2209;
t1889 = -t1954 * t2010 - t2124;
t1882 = (qJD(3) + t2005) * t1968 + t2084;
t1881 = pkin(1) * t1969 + pkin(7) * t1900;
t1880 = t1912 * t2015 - t1968 * t2117;
t1879 = t1912 * t2010 + t1968 * t2116;
t1878 = -t1967 * t2116 + t2010 * t2050;
t1877 = -t1967 * t2117 - t2015 * t2050;
t1875 = pkin(1) * t1983 + pkin(7) * t1980 + t1900;
t1874 = t1931 - t1930;
t1873 = t1935 * t2015 - t2209;
t1856 = -t2053 + t2054;
t1855 = -t2055 - t2052;
t1854 = -t1917 * t2011 + t1918 * t2016;
t1853 = t1917 * t2016 + t1918 * t2011;
t1845 = -t1930 - t1931;
t1843 = -pkin(8) * t1888 - t2128;
t1840 = -pkin(8) * t1872 - t2129;
t1839 = -t1891 * t2011 + t1893 * t2016;
t1838 = -t1890 * t2011 + t1892 * t2016;
t1837 = t1891 * t2016 + t1893 * t2011;
t1836 = t1890 * t2016 + t1892 * t2011;
t1835 = t1919 * t2014 - t2132;
t1834 = -t1920 * t2009 + t2204;
t1833 = t1919 * t2009 + t2131;
t1832 = t1920 * t2014 + t2211;
t1828 = -t1888 * t2011 + t1889 * t2016;
t1827 = t1888 * t2016 + t1889 * t2011;
t1824 = -t1883 * t2015 + t1887 * t2010;
t1823 = -t1882 * t2015 - t2010 * t2179;
t1821 = -t1882 * t2010 + t2015 * t2179;
t1808 = -t1879 * t2011 + t1880 * t2016;
t1807 = -t1877 * t2011 + t1878 * t2016;
t1806 = t1879 * t2016 + t1880 * t2011;
t1805 = t1877 * t2016 + t1878 * t2011;
t1804 = -t1872 * t2011 + t1873 * t2016;
t1803 = t1872 * t2016 + t1873 * t2011;
t1790 = (0.2e1 * qJD(4) + t2005) * t1934 + t2085;
t1789 = -pkin(2) * t2179 + pkin(8) * t1889 - t2129;
t1788 = -t1855 * t2010 + t1856 * t2015;
t1787 = t1855 * t2015 + t1856 * t2010;
t1786 = t2014 * t1820 - t2054;
t1785 = t2009 * t1820 + t2052;
t1784 = -t2009 * t1819 + t2053;
t1783 = t2014 * t1819 + t2055;
t1782 = -pkin(2) * t1882 + pkin(8) * t1873 + t2128;
t1766 = -t1833 * t2010 + t1835 * t2015;
t1765 = -t1832 * t2010 + t1834 * t2015;
t1764 = t1833 * t2015 + t1835 * t2010;
t1763 = t1832 * t2015 + t1834 * t2010;
t1762 = -t1830 * t2010 + t1831 * t2015;
t1760 = pkin(2) * t1914 + pkin(8) * t1773;
t1759 = -t1822 * t2011 + t1824 * t2016;
t1758 = -t1821 * t2011 + t1823 * t2016;
t1757 = t1822 * t2016 + t1824 * t2011;
t1756 = t1821 * t2016 + t1823 * t2011;
t1755 = -pkin(9) * t1830 - t2136;
t1732 = -pkin(1) * t1827 - t2076;
t1731 = -pkin(9) * t1801 - t2137;
t1718 = -t1801 * t2010 + t1802 * t2015;
t1716 = -pkin(1) * t1803 - t2168;
t1714 = -t1790 * t2014 - t2009 * t2198;
t1712 = -t1790 * t2009 + t2014 * t2198;
t1711 = -pkin(8) * t1822 - t1772;
t1703 = -t1787 * t2011 + t1788 * t2016;
t1702 = t1787 * t2016 + t1788 * t2011;
t1701 = -t1785 * t2010 + t1786 * t2015;
t1700 = -t1783 * t2010 + t1784 * t2015;
t1699 = t1785 * t2015 + t1786 * t2010;
t1698 = t1783 * t2015 + t1784 * t2010;
t1683 = -pkin(2) * t1913 + pkin(8) * t1824 + t1773;
t1682 = -pkin(1) * t1757 - t2163;
t1678 = -pkin(7) * t1827 - t1789 * t2011 + t1843 * t2016;
t1677 = t1773 * t2016 - t2139;
t1676 = t1773 * t2011 + t2138;
t1675 = -pkin(3) * t2198 + pkin(9) * t1831 - t2137;
t1674 = -pkin(7) * t1803 - t1782 * t2011 + t1840 * t2016;
t1673 = -pkin(3) * t1790 + pkin(9) * t1802 + t2136;
t1672 = -pkin(1) * t2179 + pkin(7) * t1828 + t1789 * t2016 + t1843 * t2011;
t1668 = -t1764 * t2011 + t1766 * t2016;
t1667 = -t1763 * t2011 + t1765 * t2016;
t1666 = t1764 * t2016 + t1766 * t2011;
t1665 = t1763 * t2016 + t1765 * t2011;
t1658 = -pkin(1) * t1882 + pkin(7) * t1804 + t1782 * t2016 + t1840 * t2011;
t1657 = -t1761 * t2011 + t1762 * t2016;
t1656 = t1761 * t2016 + t1762 * t2011;
t1651 = t1749 * t2008 - t2146;
t1649 = -t1747 * t2008 - t2146;
t1621 = -t1717 * t2011 + t1718 * t2016;
t1620 = t1717 * t2016 + t1718 * t2011;
t1615 = -pkin(1) * t1676 - t2164;
t1608 = -t1713 * t2010 + t1715 * t2015;
t1607 = -t1712 * t2010 + t1714 * t2015;
t1605 = t1712 * t2015 + t1714 * t2010;
t1604 = -t1699 * t2011 + t1701 * t2016;
t1603 = -t1698 * t2011 + t1700 * t2016;
t1602 = t1699 * t2016 + t1701 * t2011;
t1601 = t1698 * t2016 + t1700 * t2011;
t1589 = t1660 + t2265;
t1588 = t1659 - t2232;
t1587 = -pkin(7) * t1676 - pkin(8) * t2138 - t1760 * t2011;
t1586 = pkin(3) * t1812 + pkin(9) * t1592;
t1585 = pkin(1) * t1914 + pkin(7) * t1677 - pkin(8) * t2139 + t1760 * t2016;
t1584 = -pkin(8) * t1761 - t1675 * t2010 + t1755 * t2015;
t1579 = -pkin(7) * t1757 - t1683 * t2011 + t1711 * t2016;
t1578 = -pkin(1) * t1913 + pkin(7) * t1759 + t1683 * t2016 + t1711 * t2011;
t1577 = -pkin(4) * t1649 - t2070;
t1576 = -pkin(8) * t1717 - t1673 * t2010 + t1731 * t2015;
t1573 = -pkin(2) * t2198 + pkin(8) * t1762 + t1675 * t2015 + t1755 * t2010;
t1572 = -pkin(9) * t1713 - t1591;
t1559 = -pkin(3) * t1845 + pkin(9) * t1715 + t1592;
t1557 = -t1630 * t2010 + t1632 * t2015;
t1554 = -pkin(2) * t1790 + pkin(8) * t1718 + t1673 * t2015 + t1731 * t2010;
t1552 = -t1624 * t2010 + t1626 * t2015;
t1545 = -pkin(1) * t1656 - t2058;
t1542 = t1583 + t2267;
t1541 = t1582 - t2234;
t1536 = -t1612 * t2010 + t1614 * t2015;
t1535 = -t1611 * t2010 + t1613 * t2015;
t1532 = -t1606 * t2011 + t1608 * t2016;
t1531 = -t1605 * t2011 + t1607 * t2016;
t1530 = t1606 * t2016 + t1608 * t2011;
t1529 = t1605 * t2016 + t1607 * t2011;
t1516 = -pkin(1) * t1620 - t2045;
t1515 = t1592 * t2015 - t2154;
t1513 = -t1540 * t2008 - t2159 * t2185 - t2232;
t1512 = -t2024 - t2234;
t1508 = -pkin(5) * t2145 + t1539 * t2013 - t2265;
t1507 = -t2032 - 0.2e1 * t2155 - t2267;
t1498 = -pkin(1) * t1530 - t2089;
t1496 = -t1555 * t2011 + t1557 * t2016;
t1494 = t1555 * t2016 + t1557 * t2011;
t1489 = -t1550 * t2011 + t1552 * t2016;
t1487 = t1550 * t2016 + t1552 * t2011;
t1486 = -pkin(10) * t1651 - t1510;
t1481 = -pkin(7) * t1656 - t1573 * t2011 + t1584 * t2016;
t1479 = t1543 * t2008 - t1544 * t2013;
t1477 = -t1534 * t2011 + t1536 * t2016;
t1476 = -t1533 * t2011 + t1535 * t2016;
t1475 = t1534 * t2016 + t1536 * t2011;
t1474 = t1533 * t2016 + t1535 * t2011;
t1473 = -pkin(1) * t2198 + pkin(7) * t1657 + t1573 * t2016 + t1584 * t2011;
t1472 = -pkin(9) * t1630 - t1542 * t2009 + t1589 * t2014;
t1471 = -t1541 * t2009 + t1588 * t2014 - t2249;
t1470 = -pkin(7) * t1620 - t1554 * t2011 + t1576 * t2016;
t1469 = -pkin(8) * t1606 - t1559 * t2010 + t1572 * t2015;
t1468 = -pkin(1) * t1790 + pkin(7) * t1621 + t1554 * t2016 + t1576 * t2011;
t1467 = pkin(9) * t1632 + t1542 * t2014 + t1589 * t2009 + t2268;
t1466 = -pkin(2) * t1845 + pkin(8) * t1608 + t1559 * t2015 + t1572 * t2010;
t1465 = -t1514 * t2011 + t1515 * t2016;
t1464 = t1514 * t2016 + t1515 * t2011;
t1463 = t1541 * t2014 + t1588 * t2009 + t2246;
t1462 = -pkin(8) * t1514 - pkin(9) * t2153 - t1586 * t2010;
t1461 = -pkin(10) * t1649 - t1526 * t2008 + t1528 * t2013;
t1460 = pkin(2) * t1812 + pkin(8) * t1515 - pkin(9) * t2154 + t1586 * t2015;
t1456 = -pkin(9) * t1612 + t1486 * t2014 + t1651 * t2162;
t1455 = pkin(9) * t1614 + t2009 * t1486 + t1651 * t2105;
t1454 = -t1512 * t2009 + t1513 * t2014 - t2249;
t1453 = -pkin(9) * t1624 - t1507 * t2009 + t1508 * t2014;
t1452 = -pkin(10) * t1479 + (pkin(5) * t2008 - t2159) * t1575;
t1451 = t1512 * t2014 + t1513 * t2009 + t2246;
t1450 = pkin(9) * t1626 + t1507 * t2014 + t1508 * t2009 - t2268;
t1449 = -t1492 * t2010 + t1493 * t2015;
t1447 = -pkin(9) * t1611 + t1461 * t2014 - t1577 * t2009;
t1446 = -pkin(4) * t1479 - t2071;
t1445 = -pkin(1) * t1494 - t2047;
t1444 = -t2048 - t2278;
t1443 = -pkin(1) * t1464 - t2090;
t1442 = -pkin(3) * t1649 + pkin(9) * t1613 + t1461 * t2009 + t1577 * t2014;
t1441 = -pkin(9) * t1492 + (-pkin(10) * t2014 + t2162) * t1510;
t1440 = -t2033 - t2278;
t1439 = -pkin(1) * t1487 - t2035;
t1438 = -pkin(8) * t1555 - t1467 * t2010 + t1472 * t2015;
t1437 = -t1463 * t2010 + t1471 * t2015 - t2266;
t1436 = -pkin(1) * t1475 - t2040;
t1435 = -t1458 * t2010 + t1459 * t2015;
t1433 = pkin(8) * t1557 + t1467 * t2015 + t1472 * t2010 + t2270;
t1432 = -pkin(7) * t1530 - t1466 * t2011 + t1469 * t2016;
t1431 = t1463 * t2015 + t1471 * t2010 + t2255;
t1430 = -pkin(1) * t1845 + pkin(7) * t1532 + t1466 * t2016 + t1469 * t2011;
t1429 = -pkin(1) * t1474 - t2041;
t1428 = pkin(9) * t1493 + (-pkin(10) * t2009 + t2105) * t1510;
t1427 = -pkin(8) * t1534 - t1455 * t2010 + t1456 * t2015;
t1426 = -pkin(7) * t1464 - t1460 * t2011 + t1462 * t2016;
t1425 = -pkin(2) * t1651 + pkin(8) * t1536 + t1455 * t2015 + t1456 * t2010;
t1424 = -t1448 * t2011 + t1449 * t2016;
t1423 = t1448 * t2016 + t1449 * t2011;
t1422 = pkin(1) * t1812 + pkin(7) * t1465 + t1460 * t2016 + t1462 * t2011;
t1421 = -t1451 * t2010 + t1454 * t2015 - t2266;
t1420 = -pkin(8) * t1550 - t1450 * t2010 + t1453 * t2015;
t1419 = t1451 * t2015 + t1454 * t2010 + t2255;
t1418 = pkin(8) * t1552 + t1450 * t2015 + t1453 * t2010 - t2270;
t1417 = -pkin(8) * t1533 - t1442 * t2010 + t1447 * t2015;
t1416 = -pkin(2) * t1649 + pkin(8) * t1535 + t1442 * t2015 + t1447 * t2010;
t1415 = -pkin(9) * t1458 - t1446 * t2009 + t1452 * t2014;
t1414 = -t1434 * t2011 + t1435 * t2016;
t1413 = t1434 * t2016 + t1435 * t2011;
t1412 = -pkin(3) * t1479 + pkin(9) * t1459 + t1446 * t2014 + t1452 * t2009;
t1411 = -pkin(7) * t1494 - t1433 * t2011 + t1438 * t2016;
t1410 = -t1431 * t2011 + t1437 * t2016 - t2277;
t1409 = pkin(7) * t1496 + t1433 * t2016 + t1438 * t2011 + t2271;
t1408 = t1431 * t2016 + t1437 * t2011 + t2276;
t1407 = -pkin(8) * t1448 - t1428 * t2010 + t1441 * t2015;
t1406 = -pkin(1) * t1423 - t2059;
t1405 = -pkin(2) * t1510 + pkin(8) * t1449 + t1428 * t2015 + t1441 * t2010;
t1404 = -pkin(7) * t1475 - t1425 * t2011 + t1427 * t2016;
t1403 = -pkin(1) * t1651 + pkin(7) * t1477 + t1425 * t2016 + t1427 * t2011;
t1402 = -t1419 * t2011 + t1421 * t2016 - t2277;
t1401 = t1419 * t2016 + t1421 * t2011 + t2276;
t1400 = -pkin(7) * t1487 - t1418 * t2011 + t1420 * t2016;
t1399 = pkin(7) * t1489 + t1418 * t2016 + t1420 * t2011 - t2271;
t1398 = -pkin(7) * t1474 - t1416 * t2011 + t1417 * t2016;
t1397 = -pkin(1) * t1649 + pkin(7) * t1476 + t1416 * t2016 + t1417 * t2011;
t1396 = -pkin(1) * t1413 - t2197;
t1395 = -pkin(8) * t1434 - t1412 * t2010 + t1415 * t2015;
t1394 = -pkin(2) * t1479 + pkin(8) * t1435 + t1412 * t2015 + t1415 * t2010;
t1393 = -pkin(7) * t1423 - t1405 * t2011 + t1407 * t2016;
t1392 = -pkin(1) * t1510 + pkin(7) * t1424 + t1405 * t2016 + t1407 * t2011;
t1391 = -pkin(7) * t1413 - t1394 * t2011 + t1395 * t2016;
t1390 = -pkin(1) * t1479 + pkin(7) * t1414 + t1394 * t2016 + t1395 * t2011;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1982, 0, -t1981, 0, t2073, -t1964, -t2060, -pkin(6) * t2060, t1958 * t2017 - t2082, t1942 * t2017 + t1984 * t2012, t1952 * t2017 + t2012 * t2107, t1957 * t2017 + t2082, t1950 * t2017 + t2001 * t2012, qJDD(2) * t2012 + t1973 * t2017, t2017 * t1915 - t2012 * t1910 - pkin(6) * (t1951 * t2012 + t1979 * t2017), t2017 * t1916 - t2012 * t1911 - pkin(6) * (t1953 * t2012 - t1976 * t2017), t2017 * t1899 - pkin(6) * (t1980 * t2012 + t1983 * t2017), -pkin(6) * (t1900 * t2012 + t1969 * t2017) - (pkin(1) * t2012 - pkin(7) * t2017) * t1899, t1808 * t2017 - t2098, t1758 * t2017 + t1939 * t2012, t1838 * t2017 + t1887 * t2012, t1807 * t2017 + t2098, t1839 * t2017 - t1883 * t2012, t2017 * t1854 + t2012 * t2106, t2017 * t1674 - t2012 * t1716 - pkin(6) * (t1804 * t2012 - t1882 * t2017), t2017 * t1678 - t2012 * t1732 - pkin(6) * (t1828 * t2012 - t2017 * t2179), t2017 * t1579 - t2012 * t1682 - pkin(6) * (t1759 * t2012 - t1913 * t2017), t2017 * t1587 - t2012 * t1615 - pkin(6) * (t1677 * t2012 + t1914 * t2017), t1604 * t2017 + t2100, t1531 * t2017 + t1874 * t2012, t1667 * t2017 + t1794 * t2012, t1603 * t2017 - t2100, t1668 * t2017 - t1791 * t2012, t2017 * t1703 + t2012 * t2088, t2017 * t1470 - t2012 * t1516 - pkin(6) * (t1621 * t2012 - t1790 * t2017), t2017 * t1481 - t2012 * t1545 - pkin(6) * (t1657 * t2012 - t2017 * t2198), t2017 * t1432 - t2012 * t1498 - pkin(6) * (t1532 * t2012 - t1845 * t2017), t2017 * t1426 - t2012 * t1443 - pkin(6) * (t1465 * t2012 + t1812 * t2017), t2223, -t2283, t2279, t2240, -t2281, t2241, t2017 * t1410 - t2012 * t1444 - t2275, t2017 * t1411 - t2012 * t1445 - pkin(6) * (t1496 * t2012 + t2260), t2017 * t1404 - t2012 * t1436 - pkin(6) * (t1477 * t2012 - t1651 * t2017), t2017 * t1393 - t2012 * t1406 - pkin(6) * (t1424 * t2012 - t1510 * t2017), t2223, t2279, t2283, t2241, t2281, t2240, t2017 * t1402 - t2012 * t1440 - t2275, t2017 * t1398 - t2012 * t1429 - pkin(6) * (t1476 * t2012 - t1649 * t2017), t2017 * t1400 - t2012 * t1439 - pkin(6) * (t1489 * t2012 - t2260), t2017 * t1391 - t2012 * t1396 - pkin(6) * (t1414 * t2012 - t1479 * t2017); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1981, 0, t1982, 0, t1964, t2073, t2083, pkin(6) * t2083, t1958 * t2012 + t2081, t1942 * t2012 - t1984 * t2017, t1952 * t2012 - t2017 * t2107, t1957 * t2012 - t2081, t1950 * t2012 - t2001 * t2017, -qJDD(2) * t2017 + t1973 * t2012, t2012 * t1915 + t2017 * t1910 + pkin(6) * (t1951 * t2017 - t1979 * t2012), t2012 * t1916 + t2017 * t1911 + pkin(6) * (t1953 * t2017 + t1976 * t2012), t2012 * t1899 + pkin(6) * (t1980 * t2017 - t1983 * t2012), pkin(6) * (t1900 * t2017 - t1969 * t2012) - (-pkin(1) * t2017 - pkin(7) * t2012) * t1899, t1808 * t2012 + t2097, t1758 * t2012 - t1939 * t2017, t1838 * t2012 - t1887 * t2017, t1807 * t2012 - t2097, t1839 * t2012 + t1883 * t2017, t2012 * t1854 - t2017 * t2106, t2012 * t1674 + t2017 * t1716 + pkin(6) * (t1804 * t2017 + t1882 * t2012), t2012 * t1678 + t2017 * t1732 + pkin(6) * (t1828 * t2017 + t2012 * t2179), t2012 * t1579 + t2017 * t1682 + pkin(6) * (t1759 * t2017 + t1913 * t2012), t2012 * t1587 + t2017 * t1615 + pkin(6) * (t1677 * t2017 - t1914 * t2012), t1604 * t2012 - t2099, t1531 * t2012 - t1874 * t2017, t1667 * t2012 - t1794 * t2017, t1603 * t2012 + t2099, t1668 * t2012 + t1791 * t2017, t2012 * t1703 - t2017 * t2088, t2012 * t1470 + t2017 * t1516 + pkin(6) * (t1621 * t2017 + t1790 * t2012), t2012 * t1481 + t2017 * t1545 + pkin(6) * (t1657 * t2017 + t2012 * t2198), t2012 * t1432 + t2017 * t1498 + pkin(6) * (t1532 * t2017 + t1845 * t2012), t2012 * t1426 + t2017 * t1443 + pkin(6) * (t1465 * t2017 - t1812 * t2012), t2226, -t2284, t2280, t2243, -t2282, t2244, t2012 * t1410 + t2017 * t1444 + t2274, t2012 * t1411 + t2017 * t1445 + pkin(6) * (t1496 * t2017 - t2261), t2012 * t1404 + t2017 * t1436 + pkin(6) * (t1477 * t2017 + t1651 * t2012), t2012 * t1393 + t2017 * t1406 + pkin(6) * (t1424 * t2017 + t1510 * t2012), t2226, t2280, t2284, t2244, t2282, t2243, t2012 * t1402 + t2017 * t1440 + t2274, t2012 * t1398 + t2017 * t1429 + pkin(6) * (t1476 * t2017 + t1649 * t2012), t2012 * t1400 + t2017 * t1439 + pkin(6) * (t1489 * t2017 + t2261), t2012 * t1391 + t2017 * t1396 + pkin(6) * (t1414 * t2017 + t1479 * t2012); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1987, t1988, 0, 0, t1945, t1941, t1948, t1944, t1946, 0, t1895, t1894, t1875, t1881, t1806, t1756, t1836, t1805, t1837, t1853, t1658, t1672, t1578, t1585, t1602, t1529, t1665, t1601, t1666, t1702, t1468, t1473, t1430, t1422, t2190, t1483, t2273, t2222, t1502, t2220, t1408, t1409, t1403, t1392, t2190, t2273, -t1483, t2220, -t1502, t2222, t1401, t1397, t1399, t1390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2019, 0, 0, -g(3), -t1987, 0, t1958, t1942, t1952, t1957, t1950, t1973, t1915, t1916, t1899, pkin(7) * t1899, t1808, t1758, t1838, t1807, t1839, t1854, t1674, t1678, t1579, t1587, t1604, t1531, t1667, t1603, t1668, t1703, t1470, t1481, t1432, t1426, t2189, -t1484, t2272, t2221, -t1505, t2219, t1410, t1411, t1404, t1393, t2189, t2272, t1484, t2219, t1505, t2221, t1402, t1398, t1400, t1391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2019, 0, qJDD(1), 0, g(3), 0, -t1988, 0, t1996, -t1984, -t2107, -t1996, -t2001, -qJDD(2), t1910, t1911, 0, pkin(1) * t1899, t1940, -t1939, -t1887, -t1940, t1883, -t2106, t1716, t1732, t1682, t1615, -t1876, -t1874, -t1794, t1876, t1791, -t2088, t1516, t1545, t1498, t1443, -t1740, -t1650, -t2228, -t1737, -t1722, t2186, t1444, t1445, t1436, t1406, -t1740, -t2228, t1650, t2186, t1722, -t1737, t1440, t1429, t1439, t1396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1987, t1988, 0, 0, t1945, t1941, t1948, t1944, t1946, 0, t1895, t1894, t1875, t1881, t1806, t1756, t1836, t1805, t1837, t1853, t1658, t1672, t1578, t1585, t1602, t1529, t1665, t1601, t1666, t1702, t1468, t1473, t1430, t1422, t2190, t1483, t2273, t2222, t1502, t2220, t1408, t1409, t1403, t1392, t2190, t2273, -t1483, t2220, -t1502, t2222, t1401, t1397, t1399, t1390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1977, t1979, t1985, -t2000, t1993, t2000, 0, -t1969, t1955, 0, t1880, t1823, t1892, t1878, t1893, t1918, t1840, t1843, t1711, -pkin(8) * t1772, t1701, t1607, t1765, t1700, t1766, t1788, t1576, t1584, t1469, t1462, t2170, -t1548, t2254, t2192, -t1570, t2194, t1437, t1438, t1427, t1407, t2170, t2254, t1548, t2194, t1570, t2192, t1421, t1417, t1420, t1395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2096, t1976, t1991, t1978, t1986, -t2096, t1969, 0, t1956, 0, t1879, t1821, t1890, t1877, t1891, t1917, t1782, t1789, t1683, t1760, t1699, t1605, t1763, t1698, t1764, t1787, t1554, t1573, t1466, t1460, t2169, t1547, t2253, t2191, t1567, t2193, t1431, t1433, t1425, t1405, t2169, t2253, -t1547, t2193, -t1567, t2191, t1419, t1416, t1418, t1394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1996, t1984, t2107, t1996, t2001, qJDD(2), -t1955, -t1956, 0, 0, -t1940, t1939, t1887, t1940, -t1883, t2106, t2168, t2076, t2163, t2164, t1876, t1874, t1794, -t1876, -t1791, t2088, t2045, t2058, t2089, t2090, t1740, t1650, t2228, t1737, t1722, -t2186, t2048, t2047, t2040, t2059, t1740, t2228, -t1650, -t2186, -t1722, t1737, t2033, t2041, t2035, t2197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1912, -t1882, t2178, -t1962, t1959, t1962, 0, -t1914, t1846, 0, t1786, t1714, t1834, t1784, t1835, t1856, t1731, t1755, t1572, -pkin(9) * t1591, t2067, t1619, t2242, t2172, t1645, t2171, t1471, t1472, t1456, t1441, t2067, t2242, -t1619, t2171, -t1645, t2172, t1454, t1447, t1453, t1415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2118, t2179, t1960, -t2050, t1937, -t2118, t1914, 0, t1847, 0, t1785, t1712, t1832, t1783, t1833, t1855, t1673, t1675, t1559, t1586, t2068, t1617, t2245, t2173, t1641, t2174, t1463, t1467, t1455, t1428, t2068, t2245, -t1617, t2174, -t1641, t2173, t1451, t1442, t1450, t1412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1940, t1939, t1887, t1940, -t1883, t2106, -t1846, -t1847, 0, 0, t1876, t1874, t1794, -t1876, -t1791, t2088, t2065, t2091, t1710, t1590, t1740, t1650, t2228, t1737, t1722, -t2186, t2077, t2078, t2063, t2092, t1740, t2228, -t1650, -t2186, -t1722, t1737, t2039, t2064, t2042, t2034; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1820, -t1790, t2182, t1921, t1919, -t1921, 0, -t1812, t1680, 0, t1741, t1654, t2227, t2051, t1726, t2066, t1588, t1589, t1486, -pkin(10) * t1510, t1741, t2227, -t1654, t2066, -t1726, t2051, t1513, t1461, t1508, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2072, t2198, t1920, t1819, t1868, -t2072, t1812, 0, t1681, 0, -t1852, -t2181, -t2176, t1852, t1747, -t1818, t1541, t1542, -pkin(4) * t1651, -pkin(4) * t1510, -t1852, -t2176, t2181, -t1818, -t1747, t1852, t1512, t1577, t1507, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1876, t1874, t1794, -t1876, -t1791, t2088, -t1680, -t1681, 0, 0, t1740, t1650, t2228, t1737, t1722, -t2186, t2093, t2094, t2079, t2109, t1740, t2228, -t1650, -t2186, -t1722, t1737, t2046, t2080, t2049, t2037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, -t2185, t2184, t2130, t1859, -t2130, 0, t1663, t1582, 0, t1781, t2184, t2185, -t2130, -t1859, t2130, -qJ(6) * t2185, t1528, t1539, -qJ(6) * t1575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1863, t2177, -t1860, -t1780, t2183, -t1863, -t1663, 0, t1583, 0, t1863, -t1860, -t2177, -t1863, -t2183, -t1780, t1540, t1526, pkin(5) * t2177, -pkin(5) * t1575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1852, t2181, t2176, -t1852, -t1747, t1818, -t1582, -t1583, 0, 0, t1852, t2176, -t2181, t1818, t1747, -t1852, t2024, t2070, t1923 + t2032, t2071; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, t2184, t2185, -t2130, -t1859, t2130, 0, t1544, -t1575, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1852, t2176, -t2181, t1818, t1747, -t1852, -t1544, 0, t1543, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1863, t1860, t2177, t1863, t2183, t1780, t1575, -t1543, 0, 0;];
m_new_reg  = t1;
