% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:01:40
% EndTime: 2019-03-09 10:01:54
% DurationCPUTime: 5.93s
% Computational Cost: add. (6481->476), mult. (14929->607), div. (0->0), fcn. (9296->6), ass. (0->244)
t200 = cos(qJ(4));
t198 = sin(qJ(4));
t269 = qJD(2) * t198;
t201 = cos(qJ(2));
t270 = qJD(1) * t201;
t140 = t200 * t270 + t269;
t249 = t198 * t270;
t267 = qJD(2) * t200;
t142 = -t249 + t267;
t197 = sin(pkin(9));
t295 = cos(pkin(9));
t212 = -t197 * t140 + t295 * t142;
t138 = t197 * t200 + t295 * t198;
t259 = qJD(1) * qJD(2);
t183 = t201 * t259;
t199 = sin(qJ(2));
t271 = qJD(1) * t199;
t177 = qJD(4) + t271;
t246 = t295 * t200;
t139 = -t197 * t198 + t246;
t232 = qJD(4) * t246;
t264 = qJD(4) * t198;
t327 = t139 * t271 - t197 * t264 + t232;
t243 = t327 * t177;
t235 = t138 * t183 + t243;
t330 = qJD(2) * t212 + t235;
t248 = t199 * t259;
t94 = t140 * qJD(4) - t198 * t248;
t263 = qJD(4) * t200;
t95 = qJD(2) * t263 - qJD(4) * t249 - t200 * t248;
t57 = -t197 * t94 + t295 * t95;
t80 = t295 * t140 + t142 * t197;
t214 = t57 * t138 + t327 * t80;
t300 = t177 * t80;
t58 = -t197 * t95 - t295 * t94;
t38 = t58 + t300;
t315 = pkin(3) + pkin(7);
t329 = t80 * t212;
t125 = t138 * qJD(4);
t274 = t138 * t271 + t125;
t328 = t274 * t177;
t184 = pkin(7) * t271;
t326 = qJD(3) + t184;
t313 = t212 ^ 2;
t325 = -0.2e1 * t259;
t202 = -pkin(2) - pkin(8);
t277 = qJ(5) - t202;
t244 = t200 * t277;
t113 = -qJD(4) * t244 - qJD(5) * t198;
t210 = -qJD(5) * t200 + t277 * t264;
t283 = t198 * t199;
t189 = pkin(2) * t271;
t226 = pkin(8) * t199 - qJ(3) * t201;
t119 = t226 * qJD(1) + t189;
t185 = pkin(7) * t270;
t148 = pkin(3) * t270 + t185;
t76 = -t119 * t198 + t200 * t148;
t61 = (pkin(4) * t201 - qJ(5) * t283) * qJD(1) + t76;
t77 = t200 * t119 + t198 * t148;
t67 = qJ(5) * t200 * t271 + t77;
t307 = (-t210 + t61) * t295 + (t113 - t67) * t197;
t194 = qJD(2) * qJ(3);
t128 = t194 + t148;
t85 = pkin(4) * t140 + qJD(5) + t128;
t34 = pkin(5) * t80 - qJ(6) * t212 + t85;
t324 = t34 * t212;
t247 = -qJ(3) * t199 - pkin(1);
t136 = t202 * t201 + t247;
t107 = t136 * qJD(1);
t260 = pkin(3) * t271 + t326;
t112 = t202 * qJD(2) + t260;
t175 = pkin(7) * t183;
t134 = pkin(3) * t183 + t175;
t176 = pkin(2) * t248;
t265 = qJD(3) * t199;
t207 = t226 * qJD(2) - t265;
t91 = t207 * qJD(1) + t176;
t35 = -t107 * t264 + t112 * t263 + t198 * t134 + t200 * t91;
t64 = -t107 * t198 + t200 * t112;
t323 = -t177 * t64 + t35;
t65 = t107 * t200 + t112 * t198;
t36 = -qJD(4) * t65 + t200 * t134 - t198 * t91;
t322 = t177 * t65 + t36;
t219 = t140 * t177;
t321 = t94 - t219;
t288 = t142 * t177;
t320 = -t95 + t288;
t256 = -pkin(4) * t200 - pkin(3);
t273 = pkin(4) * t263 - t256 * t271 + t326;
t163 = t315 * t199;
t87 = t200 * t136 + t198 * t163;
t262 = qJD(4) * t201;
t252 = t198 * t262;
t211 = t199 * t267 + t252;
t10 = t58 * t139 - t212 * t274;
t282 = t198 * t201;
t114 = t197 * t282 - t201 * t246;
t266 = qJD(2) * t201;
t245 = qJD(2) * t295;
t233 = t199 * t245;
t268 = qJD(2) * t199;
t255 = t198 * t268;
t72 = t201 * t125 - t197 * t255 + t200 * t233;
t319 = t177 * t72 - t199 * t57 + (qJD(1) * t114 - t80) * t266;
t17 = pkin(4) * t183 + qJ(5) * t94 - qJD(5) * t142 + t36;
t20 = -qJ(5) * t95 - qJD(5) * t140 + t35;
t4 = t197 * t17 + t295 * t20;
t258 = qJ(6) * t183 + t4;
t1 = qJD(6) * t177 + t258;
t55 = -qJ(5) * t140 + t65;
t299 = t197 * t55;
t54 = -qJ(5) * t142 + t64;
t50 = pkin(4) * t177 + t54;
t21 = t295 * t50 - t299;
t15 = -t177 * pkin(5) + qJD(6) - t21;
t52 = t295 * t55;
t22 = t197 * t50 + t52;
t16 = qJ(6) * t177 + t22;
t3 = t295 * t17 - t197 * t20;
t2 = -pkin(5) * t183 - t3;
t318 = t1 * t138 - t139 * t2 + t15 * t274 + t16 * t327;
t317 = t138 * t4 + t139 * t3 - t21 * t274 + t22 * t327;
t316 = -t138 * t58 - t139 * t57 - t212 * t327 + t274 * t80;
t24 = t197 * t54 + t52;
t314 = t24 * t212;
t311 = t80 ^ 2;
t32 = t197 * t61 + t295 * t67;
t27 = qJ(6) * t270 + t32;
t69 = t295 * t113 + t197 * t210;
t309 = -t27 + t69;
t308 = -pkin(5) * t270 - t307;
t306 = t32 - t69;
t149 = t315 * t266;
t133 = t200 * t149;
t240 = qJ(5) * t201 - t136;
t261 = qJD(5) * t201;
t188 = pkin(2) * t268;
t99 = t188 + t207;
t30 = pkin(4) * t266 + t133 + t240 * t263 + (-qJ(5) * t268 - qJD(4) * t163 + t261 - t99) * t198;
t46 = -t136 * t264 + t198 * t149 + t163 * t263 + t200 * t99;
t37 = t211 * qJ(5) - t200 * t261 + t46;
t8 = t197 * t30 + t295 * t37;
t305 = -t327 * pkin(5) - t274 * qJ(6) + qJD(6) * t139 - t273;
t144 = t200 * t163;
t71 = pkin(4) * t199 + t240 * t198 + t144;
t281 = t200 * t201;
t75 = -qJ(5) * t281 + t87;
t42 = t197 * t71 + t295 * t75;
t304 = qJD(2) * pkin(2);
t301 = t177 * t212;
t298 = t198 * t95;
t297 = t200 * t94;
t151 = t277 * t198;
t88 = -t151 * t197 + t295 * t244;
t293 = qJD(2) * t88;
t89 = -t295 * t151 - t197 * t244;
t292 = qJD(2) * t89;
t147 = t315 * t268;
t193 = qJD(2) * qJD(3);
t116 = -qJD(1) * t147 + t193;
t291 = t116 * t198;
t290 = t116 * t200;
t289 = t142 * t140;
t287 = t142 * t201;
t286 = t177 * t199;
t285 = t177 * t202;
t204 = qJD(1) ^ 2;
t280 = t201 * t204;
t203 = qJD(2) ^ 2;
t279 = t203 * t199;
t278 = t203 * t201;
t182 = t198 * pkin(4) + qJ(3);
t25 = t295 * t54 - t299;
t276 = qJD(6) - t25;
t164 = t315 * t201;
t195 = t199 ^ 2;
t196 = t201 ^ 2;
t272 = t195 - t196;
t153 = -pkin(2) * t201 + t247;
t129 = qJD(1) * t153;
t257 = t200 * t286;
t126 = pkin(4) * t281 + t164;
t253 = t177 * t263;
t251 = t200 * t262;
t250 = t177 * t270;
t242 = pkin(1) * t325;
t241 = qJD(3) - t304;
t238 = -t89 * t57 + t58 * t88 - t69 * t80;
t237 = t24 * t177 + t3;
t236 = t199 * t183;
t234 = t139 * t183 - t328;
t229 = -t311 - t313;
t228 = -t311 + t313;
t227 = -t114 * t57 - t72 * t80;
t223 = -t198 * t64 + t200 * t65;
t222 = -qJD(1) * t196 + t286;
t221 = -0.2e1 * qJD(2) * t129;
t220 = t177 * t198;
t218 = t57 + t301;
t217 = -t57 + t301;
t213 = -qJ(3) * t266 - t265;
t104 = t213 * qJD(1) + t176;
t121 = t188 + t213;
t216 = pkin(7) * t203 + qJD(1) * t121 + t104;
t7 = -t197 * t37 + t295 * t30;
t41 = -t197 * t75 + t295 * t71;
t215 = t128 * t199 + t202 * t266;
t209 = -t58 + t300;
t70 = pkin(4) * t95 + t116;
t115 = t138 * t201;
t73 = -t211 * t197 - t198 * t233 + t201 * t232;
t208 = t114 * t58 + t115 * t57 + t212 * t72 + t73 * t80;
t206 = -t10 - t214;
t90 = -pkin(4) * t252 + (-pkin(7) + t256) * t268;
t150 = pkin(7) * t248 - t193;
t152 = t184 + t241;
t160 = -t185 - t194;
t205 = -t150 * t201 + (t152 * t201 + (t160 + t185) * t199) * qJD(2);
t9 = pkin(5) * t57 - qJ(6) * t58 - qJD(6) * t212 + t70;
t181 = -t295 * pkin(4) - pkin(5);
t179 = pkin(4) * t197 + qJ(6);
t174 = t199 * t280;
t167 = t200 * t183;
t162 = -0.2e1 * t236;
t161 = 0.2e1 * t236;
t159 = t272 * t204;
t145 = -qJ(3) * t270 + t189;
t127 = t272 * t325;
t109 = t129 * t271;
t106 = (t177 + t271) * t266;
t86 = -t136 * t198 + t144;
t78 = pkin(5) * t138 - qJ(6) * t139 + t182;
t59 = -pkin(5) * t114 + qJ(6) * t115 + t126;
t47 = -t87 * qJD(4) - t198 * t99 + t133;
t44 = pkin(4) * t142 + pkin(5) * t212 + qJ(6) * t80;
t40 = -t199 * pkin(5) - t41;
t39 = qJ(6) * t199 + t42;
t26 = -t212 * t270 + t234;
t23 = -pkin(5) * t72 + qJ(6) * t73 + qJD(6) * t115 + t90;
t12 = -t115 * t58 - t212 * t73;
t11 = -t177 * t73 + t199 * t58 + (-qJD(1) * t115 + t212) * t266;
t6 = -pkin(5) * t266 - t7;
t5 = qJ(6) * t266 + qJD(6) * t199 + t8;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t127, t278, t162, -t279, 0, -pkin(7) * t278 + t199 * t242, pkin(7) * t279 + t201 * t242, 0, 0, 0, -t278, t279, t161, t127, t162, t205, t199 * t221 + t216 * t201, -t216 * t199 + t201 * t221, t205 * pkin(7) + t104 * t153 + t121 * t129, t94 * t282 + (-t251 + t255) * t142 (-t140 * t198 + t142 * t200) * t268 + (t298 + t297 + (t140 * t200 + t142 * t198) * qJD(4)) * t201, -t177 * t251 - t199 * t94 + (t222 * t198 + t287) * qJD(2), -t211 * t140 + t95 * t281, t177 * t252 - t199 * t95 + (-t140 * t201 + t200 * t222) * qJD(2), t106, -t140 * t147 + t164 * t95 + t177 * t47 + (-t128 * t267 + t36) * t199 + (-t128 * t264 + t290 + (qJD(1) * t86 + t64) * qJD(2)) * t201, -t142 * t147 - t164 * t94 - t177 * t46 + (t128 * t269 - t35) * t199 + (-t128 * t263 - t291 + (-qJD(1) * t87 - t65) * qJD(2)) * t201, -t140 * t46 - t142 * t47 + t86 * t94 - t87 * t95 + t223 * t268 + (t198 * t36 - t200 * t35 + (t198 * t65 + t200 * t64) * qJD(4)) * t201, t116 * t164 - t128 * t147 + t35 * t87 + t36 * t86 + t46 * t65 + t47 * t64, t12, t208, t11, t227, t319, t106, -t114 * t70 + t126 * t57 + t177 * t7 + t199 * t3 - t72 * t85 + t80 * t90 + (qJD(1) * t41 + t21) * t266, -t115 * t70 + t126 * t58 - t177 * t8 - t199 * t4 - t73 * t85 + t212 * t90 + (-qJD(1) * t42 - t22) * t266, t114 * t4 + t115 * t3 + t21 * t73 - t212 * t7 + t22 * t72 - t41 * t58 - t42 * t57 - t8 * t80, t126 * t70 + t21 * t7 + t22 * t8 + t3 * t41 + t4 * t42 + t85 * t90, t12, t11, -t208, t106, -t319, t227, -t114 * t9 - t177 * t6 - t199 * t2 + t23 * t80 - t34 * t72 + t57 * t59 + (-qJD(1) * t40 - t15) * t266, t1 * t114 - t115 * t2 - t15 * t73 + t16 * t72 + t212 * t6 - t39 * t57 + t40 * t58 - t5 * t80, t1 * t199 + t115 * t9 + t177 * t5 - t23 * t212 + t34 * t73 - t58 * t59 + (qJD(1) * t39 + t16) * t266, t1 * t39 + t15 * t6 + t16 * t5 + t2 * t40 + t23 * t34 + t59 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, t159, 0, t174, 0, 0, t204 * pkin(1) * t199, pkin(1) * t280, 0, 0, 0, 0, 0, -t174, t159, t174 ((-t160 - t194) * t199 + (-t152 + t241) * t201) * qJD(1), -t145 * t270 + t109, 0.2e1 * t193 + (t129 * t201 + t145 * t199) * qJD(1), -qJ(3) * t150 - qJD(3) * t160 - t129 * t145 + (-t160 * t199 + (-t152 - t304) * t201) * qJD(1) * pkin(7), -t142 * t220 - t297 (-t95 - t288) * t200 + (t94 + t219) * t198, -t177 * t264 + t167 + (-t177 * t283 - t287) * qJD(1), t200 * t219 + t298, -t253 + (-t257 + (t140 - t269) * t201) * qJD(1), -t250, qJ(3) * t95 + t291 - t177 * t76 + t260 * t140 + (t128 * t200 - t198 * t285) * qJD(4) + (t200 * t215 - t201 * t64) * qJD(1), -qJ(3) * t94 + t290 + t177 * t77 + t260 * t142 + (-t128 * t198 - t200 * t285) * qJD(4) + (-t198 * t215 + t201 * t65) * qJD(1), t140 * t77 + t142 * t76 + (-t65 * t271 + t202 * t94 - t36 + (-t140 * t202 - t65) * qJD(4)) * t200 + (t64 * t271 - t202 * t95 - t35 + (t142 * t202 + t64) * qJD(4)) * t198, qJ(3) * t116 - t64 * t76 - t65 * t77 + t260 * t128 + (qJD(4) * t223 + t198 * t35 + t200 * t36) * t202, t10, t316, t26, t214, -t243 + (-qJD(2) * t138 + t80) * t270, -t250, t138 * t70 + t182 * t57 + t327 * t85 + t273 * t80 - t307 * t177 + (-t21 - t293) * t270, t139 * t70 + t182 * t58 - t274 * t85 + t273 * t212 + t306 * t177 + (t22 - t292) * t270, t212 * t307 + t32 * t80 + t238 - t317, t182 * t70 - t21 * t307 - t22 * t306 + t273 * t85 - t3 * t88 + t4 * t89, t10, t26, -t316, -t250, -t270 * t80 + t235, t214, t138 * t9 + t57 * t78 - t305 * t80 + t327 * t34 + t308 * t177 + (t15 - t293) * t270, -t212 * t308 + t27 * t80 + t238 - t318, -t139 * t9 - t58 * t78 + t305 * t212 + t274 * t34 + t309 * t177 + (-t16 + t292) * t270, t1 * t89 - t15 * t308 + t16 * t309 + t2 * t88 - t305 * t34 + t78 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, -t195 * t204 - t203, qJD(2) * t160 + t109 + t175, 0, 0, 0, 0, 0, 0, -qJD(2) * t140 - t177 * t220 + t167, -t253 - qJD(2) * t142 + (-t198 * t266 - t257) * qJD(1), t320 * t198 + t321 * t200, -qJD(2) * t128 + t323 * t198 + t322 * t200, 0, 0, 0, 0, 0, 0, -qJD(2) * t80 + t234, -t330, t206, -qJD(2) * t85 + t317, 0, 0, 0, 0, 0, 0, -t328 + (t139 * t270 - t80) * qJD(2), t206, t330, -qJD(2) * t34 + t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t140 ^ 2 + t142 ^ 2, -t321, -t289, t320, t183, -t128 * t142 + t322, t128 * t140 - t323, 0, 0, t329, t228, t38, -t329, t217, t183, -t85 * t212 + (-t142 * t80 + t245 * t270) * pkin(4) + t237, t177 * t25 + t80 * t85 + (-t142 * t212 - t183 * t197) * pkin(4) - t4, t22 * t212 - t314 + (-t197 * t57 - t295 * t58) * pkin(4) + (-t21 + t25) * t80, t21 * t24 - t22 * t25 + (-t142 * t85 + t197 * t4 + t295 * t3) * pkin(4), t329, t38, -t228, t183, -t217, -t329, -t324 - t44 * t80 + (pkin(5) - t181) * t183 + t237, t16 * t212 - t179 * t57 + t181 * t58 - t314 + (t15 - t276) * t80, t179 * t183 - t34 * t80 + t44 * t212 + (0.2e1 * qJD(6) - t25) * t177 + t258, t1 * t179 - t15 * t24 + t16 * t276 + t181 * t2 - t34 * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, -t209, t229, t21 * t212 + t22 * t80 + t70, 0, 0, 0, 0, 0, 0, t218, t229, t209, -t15 * t212 + t16 * t80 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183 + t329, t38, -t177 ^ 2 - t313, -t16 * t177 + t2 + t324;];
tauc_reg  = t13;
