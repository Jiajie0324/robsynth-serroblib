% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:01:43
% EndTime: 2019-03-09 10:02:03
% DurationCPUTime: 11.30s
% Computational Cost: add. (10933->614), mult. (20000->777), div. (0->0), fcn. (20144->6), ass. (0->446)
t402 = sin(qJ(2));
t401 = sin(qJ(4));
t643 = sin(pkin(9));
t498 = t643 * t401;
t355 = t402 * t498;
t403 = cos(qJ(4));
t644 = cos(pkin(9));
t502 = t644 * t403;
t289 = t402 * t502 - t355;
t405 = -pkin(2) - pkin(8);
t710 = -qJ(5) + t405;
t339 = t710 * t401;
t317 = t644 * t339;
t496 = t710 * t403;
t457 = t643 * t496;
t708 = t317 + t457;
t175 = t708 * t289;
t404 = cos(qJ(2));
t597 = t403 * t404;
t373 = pkin(4) * t597;
t394 = t404 * pkin(7);
t395 = t404 * pkin(3);
t248 = t339 * t643 - t644 * t496;
t497 = t643 * t403;
t503 = t644 * t401;
t432 = t503 + t497;
t291 = t432 * t402;
t618 = t248 * t291;
t440 = -t618 / 0.2e1 - t175 / 0.2e1 + t373 / 0.2e1 + t394 / 0.2e1 + t395 / 0.2e1;
t326 = t502 - t498;
t379 = pkin(4) * t401 + qJ(3);
t222 = pkin(5) * t432 - qJ(6) * t326 + t379;
t731 = t222 / 0.2e1;
t292 = t432 * t404;
t609 = t292 * qJ(6);
t356 = t404 * t502;
t290 = t404 * t498 - t356;
t651 = t290 * pkin(5);
t730 = t651 / 0.2e1 - t609 / 0.2e1 - t440;
t666 = t248 / 0.2e1;
t663 = -t326 / 0.2e1;
t660 = -t432 / 0.2e1;
t661 = t432 / 0.2e1;
t729 = -t708 / 0.2e1;
t728 = t708 / 0.2e1;
t244 = t289 * t432;
t610 = t291 * t326;
t516 = -t610 / 0.2e1;
t57 = 0.2e1 * t516 + t244;
t605 = t432 * t290;
t607 = t326 * t292;
t474 = -t605 - t607;
t682 = t474 * qJD(5);
t727 = t57 * qJD(3) + t682;
t475 = -t289 * t290 + t291 * t292;
t696 = qJD(1) * t475;
t726 = t57 * qJD(2) + t696;
t322 = t432 ^ 2;
t323 = t326 ^ 2;
t490 = -t323 / 0.2e1 - t322 / 0.2e1;
t147 = 0.1e1 / 0.2e1 + t490;
t507 = t666 - t248 / 0.2e1;
t508 = t728 + t729;
t414 = t326 * t508 - t432 * t507;
t684 = t414 * qJD(4);
t725 = t147 * qJD(5) + t684;
t148 = -0.1e1 / 0.2e1 + t490;
t724 = t148 * qJD(5) + t684;
t599 = t402 * qJ(3);
t482 = -t404 * t405 + t599;
t319 = -pkin(1) - t482;
t671 = pkin(3) + pkin(7);
t353 = t671 * t402;
t334 = t403 * t353;
t246 = t319 * t401 - t334;
t600 = t401 * t404;
t207 = qJ(5) * t600 - t246;
t196 = pkin(4) * t402 + t207;
t601 = t401 * t353;
t208 = t601 + (-qJ(5) * t404 + t319) * t403;
t500 = t643 * t208;
t115 = t196 * t644 - t500;
t183 = t643 * t196;
t504 = t644 * t208;
t116 = t504 + t183;
t501 = t643 * t207;
t120 = t501 + t504;
t525 = t120 * t663;
t662 = t326 / 0.2e1;
t536 = t643 / 0.2e1;
t537 = -t644 / 0.2e1;
t712 = (t289 * t536 + t291 * t537) * pkin(4);
t723 = t115 * t660 + t116 * t662 + t525 - t712;
t450 = t605 / 0.2e1 + t607 / 0.2e1;
t683 = t450 * qJD(5);
t722 = (-t244 + t610) * qJD(3) + t683;
t721 = qJD(1) * t450 + t148 * qJD(2);
t553 = t432 * qJD(4);
t426 = t503 / 0.2e1 + t497 / 0.2e1;
t412 = (t661 + t426) * t402;
t685 = t412 * qJD(1);
t701 = t685 + t553;
t121 = t207 * t644 - t500;
t668 = t121 / 0.2e1;
t669 = -t120 / 0.2e1;
t13 = -t712 - t326 * (t116 / 0.2e1 + t669) - t432 * (t668 - t115 / 0.2e1);
t706 = t516 + t610 / 0.2e1;
t720 = qJD(1) * t706;
t707 = t322 + t323;
t719 = qJD(5) * t707;
t288 = t292 ^ 2;
t709 = t290 ^ 2 + t288;
t718 = qJD(1) * t709 + qJD(2) * t474;
t717 = -qJD(2) * t706 - t696;
t716 = qJD(1) * t474 + qJD(2) * t707;
t715 = qJD(3) * t706 + t682;
t714 = qJD(3) * t475 + qJD(5) * t709;
t646 = pkin(4) * qJD(4);
t711 = (t326 * t643 - t432 * t644) * t646;
t611 = t291 * qJ(6);
t652 = t289 * pkin(5);
t705 = -t611 / 0.2e1 - t652 / 0.2e1;
t554 = t432 * qJD(2);
t704 = -qJD(1) * t290 + t554;
t487 = -t498 / 0.2e1;
t659 = t356 / 0.2e1;
t209 = t659 + (t487 + t663) * t404;
t703 = qJD(1) * t209 + t554;
t555 = t326 * qJD(2);
t584 = qJD(1) * t292;
t221 = t555 - t584;
t214 = (t660 + t426) * t404;
t702 = -qJD(1) * t214 + t555;
t695 = qJD(2) * t414;
t476 = t248 * t326 - t432 * t708;
t692 = qJD(2) * t476;
t691 = qJD(3) * t414;
t690 = qJD(3) * t450;
t687 = qJD(5) * t476;
t686 = qJD(6) * t412;
t489 = t402 * t537;
t656 = -t402 / 0.2e1;
t483 = t401 * t489 + (-t432 + t497) * t656;
t681 = t483 * qJD(6);
t544 = pkin(4) * t600;
t612 = t290 * qJ(6);
t650 = t292 * pkin(5);
t176 = -t544 - t612 - t650;
t606 = t432 * qJ(6);
t648 = t403 * pkin(4);
t649 = t326 * pkin(5);
t225 = t606 + t648 + t649;
t680 = t708 * t656 - t225 * t290 / 0.2e1 + t176 * t661;
t679 = t290 * t729 + t292 * t666;
t678 = t115 * t663 + t116 * t660;
t598 = t402 * qJ(6);
t107 = t116 + t598;
t108 = -t402 * pkin(5) - t115;
t677 = t107 * t661 + t108 * t663;
t397 = t401 ^ 2;
t399 = t403 ^ 2;
t362 = t397 - t399;
t547 = t404 * qJD(1);
t532 = t403 * t547;
t437 = qJD(2) * t362 + 0.2e1 * t401 * t532;
t546 = t404 * qJD(3);
t676 = qJD(2) * t482 - t546;
t374 = pkin(4) * t643 + qJ(6);
t378 = -pkin(4) * t644 - pkin(5);
t675 = qJD(4) * (t326 * t374 + t378 * t432) + qJD(6) * t432;
t625 = t121 * t432;
t664 = -t292 / 0.2e1;
t673 = -t625 / 0.2e1 + t292 * t728 + t708 * t664;
t657 = t378 / 0.2e1;
t658 = t374 / 0.2e1;
t449 = t289 * t658 + t291 * t657;
t670 = t107 / 0.2e1;
t10 = -t326 * (t670 + t669) - t432 * (t668 + t108 / 0.2e1) - t449;
t488 = t317 / 0.2e1;
t655 = t402 / 0.2e1;
t654 = -t403 / 0.2e1;
t653 = -t404 / 0.2e1;
t647 = t404 * pkin(5);
t596 = t404 * qJ(3);
t352 = t402 * pkin(2) - t596;
t324 = pkin(8) * t402 + t352;
t354 = t394 + t395;
t336 = t354 * t403;
t642 = qJ(5) * t402;
t201 = t404 * pkin(4) + t336 + (-t324 - t642) * t401;
t190 = t643 * t201;
t301 = t403 * t324;
t335 = t354 * t401;
t594 = t301 + t335;
t215 = t403 * t642 + t594;
t202 = t644 * t215;
t118 = t202 + t190;
t111 = t404 * qJ(6) + t118;
t499 = t643 * t215;
t505 = t644 * t201;
t117 = -t499 + t505;
t112 = -t117 - t647;
t307 = (-t648 - t671) * t402;
t152 = t307 - t611 - t652;
t308 = t373 + t354;
t153 = t308 + t609 - t651;
t9 = t107 * t111 + t108 * t112 + t152 * t153;
t645 = t9 * qJD(1);
t623 = t153 * t292;
t37 = -t120 * t402 - t176 * t290 - t623;
t641 = qJD(1) * t37;
t38 = t121 * t402 - t153 * t290 + t176 * t292;
t640 = qJD(1) * t38;
t52 = t107 * t402 + t623;
t639 = qJD(1) * t52;
t634 = t111 * t432;
t633 = t112 * t326;
t630 = t117 * t326;
t629 = t118 * t432;
t12 = t107 * t121 + t108 * t120 + t153 * t176;
t628 = t12 * qJD(1);
t627 = t120 * t248;
t626 = t121 * t708;
t40 = -t107 * t289 - t108 * t291;
t15 = t111 * t290 - t112 * t292 - t40;
t624 = t15 * qJD(1);
t16 = (t107 - t120) * t292 + (t108 + t121) * t290;
t622 = t16 * qJD(1);
t42 = t115 * t291 - t116 * t289;
t17 = t117 * t292 + t118 * t290 - t42;
t621 = t17 * qJD(1);
t18 = (t116 - t120) * t292 + (-t115 + t121) * t290;
t620 = t18 * qJD(1);
t19 = t115 * t117 + t116 * t118 + t307 * t308;
t619 = t19 * qJD(1);
t615 = t708 * t402;
t28 = -t115 * t120 + t116 * t121 - t308 * t544;
t614 = t28 * qJD(1);
t29 = t107 * t404 + t111 * t402 + t152 * t292 - t153 * t291;
t613 = t29 * qJD(1);
t30 = -t108 * t404 - t112 * t402 - t152 * t290 - t153 * t289;
t608 = t30 * qJD(1);
t427 = -t505 / 0.2e1 + t499 / 0.2e1;
t452 = t153 * t662 + t222 * t664;
t410 = t427 + t452;
t539 = -t647 / 0.2e1;
t35 = t539 - t615 / 0.2e1 + t410;
t604 = t35 * qJD(1);
t603 = t40 * qJD(1);
t602 = t401 * t324;
t595 = t42 * qJD(1);
t398 = t402 ^ 2;
t400 = t404 ^ 2;
t363 = t400 - t398;
t173 = -t246 * t402 + t354 * t597;
t589 = qJD(1) * t173;
t247 = t319 * t403 + t601;
t174 = -t247 * t402 - t354 * t600;
t588 = qJD(1) * t174;
t331 = t363 * t401;
t583 = qJD(1) * t331;
t333 = t363 * t403;
t582 = qJD(1) * t333;
t581 = qJD(1) * t402;
t580 = qJD(1) * t403;
t579 = qJD(2) * qJ(3);
t578 = qJD(2) * t222;
t577 = qJD(3) * t483;
t576 = qJD(3) * t401;
t575 = qJD(3) * t402;
t574 = qJD(3) * t403;
t573 = qJD(4) * t401;
t572 = qJD(4) * t402;
t571 = qJD(4) * t403;
t570 = qJD(4) * t405;
t569 = qJD(5) * t290;
t568 = qJD(6) * t290;
t567 = qJD(6) * t326;
t104 = (-t246 - t334) * t404 - t602 * t402;
t565 = t104 * qJD(1);
t105 = (t247 - t601) * t404 + (t594 - t335) * t402;
t564 = t105 * qJD(1);
t561 = t483 * qJD(1);
t216 = -t355 / 0.2e1 + (t662 + t502 / 0.2e1) * t402;
t560 = t216 * qJD(1);
t217 = t326 * t655 + t403 * t489 + t355 / 0.2e1;
t559 = t217 * qJD(1);
t486 = -pkin(2) * t404 - t599;
t341 = -pkin(1) + t486;
t260 = t341 * t404 + t352 * t402;
t557 = t260 * qJD(1);
t261 = -t341 * t402 + t352 * t404;
t556 = t261 * qJD(1);
t552 = t363 * qJD(1);
t551 = t398 * qJD(1);
t550 = t401 * qJD(2);
t549 = t402 * qJD(2);
t391 = t402 * qJD(6);
t548 = t403 * qJD(2);
t392 = t404 * qJD(2);
t545 = t404 * qJD(4);
t543 = pkin(1) * t581;
t542 = pkin(1) * t547;
t541 = pkin(7) * t549;
t386 = t648 / 0.2e1;
t538 = pkin(5) / 0.2e1 - t378 / 0.2e1;
t535 = t289 * t581;
t534 = t290 * t584;
t533 = t291 * t581;
t531 = t401 * t548;
t530 = t401 * t392;
t529 = t402 * t545;
t528 = t341 * t352 * qJD(1);
t527 = t341 * t581;
t368 = t402 * t392;
t367 = t402 * t547;
t370 = t403 * t392;
t526 = t401 * t571;
t524 = -t626 / 0.2e1;
t514 = t600 / 0.2e1;
t509 = -t183 / 0.2e1 - t504 / 0.2e1;
t506 = t658 + qJ(6) / 0.2e1;
t495 = t175 + t618;
t275 = t290 * t581;
t494 = qJD(2) * t412 - t275;
t359 = -t544 / 0.2e1;
t372 = qJD(4) + t581;
t493 = -qJD(3) + t567;
t492 = t401 * t370;
t415 = t290 * t507 - t292 * t508;
t5 = -t10 + t415;
t485 = t5 * qJD(1);
t7 = t415 - t13;
t484 = t7 * qJD(1);
t481 = t10 * qJD(1) - t695;
t480 = t13 * qJD(1) - t695;
t407 = t153 * t660 + t176 * t662 + t225 * t664 - t248 * t656 + t290 * t731;
t429 = t506 * t404 + t190 / 0.2e1 + t202 / 0.2e1;
t20 = t407 + t429;
t95 = t222 * t432 - t225 * t326;
t479 = -qJD(1) * t20 + qJD(2) * t95;
t22 = -t404 * t538 + t410 + t680;
t94 = t222 * t326 + t225 * t432;
t478 = qJD(1) * t22 + qJD(2) * t94;
t441 = (-pkin(7) / 0.2e1 - pkin(3) / 0.2e1 - t648 / 0.2e1) * t402;
t411 = t441 + t679;
t24 = t411 + t677 + t705;
t471 = -qJD(1) * t24 + t692;
t31 = t411 - t678;
t470 = -qJD(1) * t31 + t692;
t122 = t326 * t538 + t432 * t506 + t386;
t90 = -t290 * t506 - t292 * t538 + t359;
t469 = qJD(1) * t90 + qJD(2) * t122;
t455 = t634 / 0.2e1 - t633 / 0.2e1;
t26 = t455 + t730;
t468 = -qJD(1) * t26 + t578;
t453 = t630 / 0.2e1 + t629 / 0.2e1;
t34 = t440 - t453;
t467 = qJD(1) * t34 + qJD(2) * t379;
t41 = t115 * t292 + t116 * t290;
t466 = -qJD(1) * t41 - t690;
t39 = t107 * t290 - t108 * t292;
t465 = qJD(1) * t39 + t690;
t424 = t290 * t536 - t292 * t537;
t154 = (t514 + t424) * pkin(4);
t423 = t326 * t537 - t432 * t536;
t195 = (t654 + t423) * pkin(4);
t460 = qJD(1) * t154 + qJD(2) * t195;
t459 = -t551 - t572;
t458 = qJD(3) * t412 + qJD(5) * t292;
t456 = t504 / 0.2e1 + t501 / 0.2e1;
t454 = t111 * t658 + t112 * t657;
t451 = t290 * t663 - t292 * t661;
t448 = t405 * t656 - t596 / 0.2e1;
t447 = t372 * t600;
t223 = (t324 / 0.2e1 + t448) * t401;
t446 = -qJ(3) * t548 - t223 * qJD(1);
t434 = t448 * t403;
t224 = t301 / 0.2e1 + t434;
t445 = qJ(3) * t550 - t224 * qJD(1);
t129 = t653 + t451;
t444 = -qJD(1) * t129 - t326 * t554;
t321 = (t399 / 0.2e1 - t397 / 0.2e1) * t404;
t443 = qJD(1) * t321 + t531;
t442 = qJD(2) * t483 - qJD(4) * t290 - t275;
t439 = t400 * t401 * t580 - qJD(2) * t321;
t332 = t362 * t400;
t438 = -qJD(1) * t332 + 0.2e1 * t492;
t409 = -t248 * t670 + t108 * t728 + t627 / 0.2e1 + t153 * t225 / 0.2e1 + t176 * t731;
t1 = t524 - t409 + t454;
t43 = t222 * t225;
t436 = -t1 * qJD(1) + t43 * qJD(2) + t691;
t420 = t115 * t728 + t116 * t666 - t627 / 0.2e1;
t428 = t118 * t536 + t117 * t644 / 0.2e1;
t3 = t524 + (t308 * t654 + t379 * t514 + t428) * pkin(4) + t420;
t62 = t379 * t648;
t435 = -t3 * qJD(1) + t62 * qJD(2) + t691;
t245 = t488 - t317 / 0.2e1;
t44 = -t402 * t506 + t456 + t509;
t431 = qJD(1) * t44 - qJD(2) * t245 - qJD(4) * t374;
t274 = t398 + t288;
t421 = qJD(1) * t274 - t292 * t555 + t572;
t418 = qJD(2) * t486 + t546;
t413 = t441 - t679;
t408 = t107 * t662 + t108 * t661 - t449 + t525;
t406 = t539 + t427 - t452;
t390 = pkin(7) * t392;
t380 = t392 / 0.2e1;
t369 = t402 * t580;
t366 = t401 * t581;
t330 = -t369 - t571;
t329 = -t366 - t573;
t325 = t367 + t545 / 0.2e1;
t309 = t326 * qJD(4);
t306 = t321 * qJD(4);
t243 = t292 * t567;
t213 = t404 * t426 - t432 * t653;
t210 = t659 + (t487 + t662) * t404;
t194 = pkin(4) * t423 + t386;
t182 = 0.2e1 * t488 + t457;
t178 = -t335 - t301 / 0.2e1 + t434;
t177 = t336 - t602 / 0.2e1 + t448 * t401;
t172 = qJD(2) * t323 - t326 * t584;
t155 = pkin(4) * t424 + t359;
t145 = t148 * qJD(3);
t142 = t147 * qJD(3);
t130 = t653 - t451;
t123 = -t432 * t658 + t326 * t657 + t386 + t606 / 0.2e1 + t649 / 0.2e1;
t102 = t625 / 0.2e1;
t91 = t290 * t658 - t292 * t657 + t359 - t612 / 0.2e1 - t650 / 0.2e1;
t69 = t626 / 0.2e1;
t45 = t374 * t655 + t598 / 0.2e1 + t456 - t509;
t36 = t615 / 0.2e1 + t406;
t33 = t440 + t453;
t32 = t413 + t678;
t27 = t455 - t730;
t25 = t413 - t677 + t705;
t23 = t378 * t653 - t406 + t680;
t21 = -t407 + t429;
t14 = t102 + t723;
t11 = t102 + t408;
t8 = t673 - t723;
t6 = -t408 + t673;
t4 = pkin(4) * t428 + t308 * t386 + t359 * t379 - t420 + t69;
t2 = t69 + t409 + t454;
t46 = [0, 0, 0, t368, t363 * qJD(2), 0, 0, 0, -pkin(1) * t549, -pkin(1) * t392, 0, qJD(2) * t261 - t402 * t546, -qJD(2) * t260 + qJD(3) * t398 (qJD(2) * t352 - t575) * t341, -t368 * t397 + t400 * t526, -qJD(4) * t332 - 0.2e1 * t402 * t492, -qJD(2) * t331 - t403 * t529, -qJD(2) * t333 + t401 * t529, t368, qJD(2) * t104 + qJD(4) * t174 + t398 * t576, -qJD(2) * t105 - qJD(4) * t173 + t398 * t574, qJD(2) * t17 + qJD(4) * t18 + t714, qJD(2) * t19 + qJD(3) * t42 + qJD(4) * t28 + qJD(5) * t41, t291 * t575 + t30 * qJD(2) + t37 * qJD(4) + (qJD(5) * t402 - t568) * t292, qJD(2) * t15 + qJD(4) * t16 + t290 * t391 + t714, t29 * qJD(2) + t38 * qJD(4) + t274 * qJD(6) + (-qJD(3) * t289 + t569) * t402, qJD(2) * t9 + qJD(3) * t40 + qJD(4) * t12 + qJD(5) * t39 + qJD(6) * t52; 0, 0, 0, t367, t552, t392, -t549, 0, -t390 - t543, t541 - t542, t418, t390 + t556, -t541 - t557, pkin(7) * t418 + t528, -t306 + (-t397 * t547 + t531) * t402, -t402 * t437 + 0.2e1 * t404 * t526, t370 - t583, -t530 - t582, t325, t177 * qJD(4) - t353 * t550 - t403 * t676 + t565, t178 * qJD(4) - t353 * t548 + t401 * t676 - t564, t621 + (t495 - t629 - t630) * qJD(2) + t8 * qJD(4) + t727, t619 + (-t117 * t248 + t118 * t708 + t307 * t379) * qJD(2) + t33 * qJD(3) + t4 * qJD(4) + t32 * qJD(5), t608 + (t152 * t432 - t222 * t289 - t248 * t404) * qJD(2) + t210 * qJD(3) + t23 * qJD(4) - t216 * qJD(5) + t130 * qJD(6), t624 + (t495 + t633 - t634) * qJD(2) + t6 * qJD(4) - t681 + t727, t613 + (-t152 * t326 - t222 * t291 + t404 * t708) * qJD(2) + t213 * qJD(3) + t21 * qJD(4) - t412 * qJD(5) - t243, t645 + (t111 * t708 + t112 * t248 + t152 * t222) * qJD(2) + t27 * qJD(3) + t2 * qJD(4) + t25 * qJD(5) + t36 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, -t367, t551, t390 - t527, 0, 0, 0, 0, 0, t401 * t551 + t370, t403 * t551 - t530, t726, t33 * qJD(2) + t14 * qJD(4) + t595 + t722, qJD(2) * t210 - qJD(4) * t483 + t533, t726, qJD(2) * t213 + qJD(4) * t217 - t535, t27 * qJD(2) + t11 * qJD(4) + t603 + t681 + t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t439, t438, -t372 * t597, t447, t380, qJD(2) * t177 - qJD(4) * t247 + t588, qJD(2) * t178 + qJD(4) * t246 - t589, t620 + t8 * qJD(2) + (-t290 * t644 + t292 * t643) * t646, t614 + t4 * qJD(2) + t14 * qJD(3) + (-t120 * t644 + t121 * t643) * t646 + t155 * qJD(5), qJD(2) * t23 - qJD(4) * t120 - t577 + t641, t622 + t6 * qJD(2) + (t290 * t378 + t292 * t374) * qJD(4) + t568, qJD(2) * t21 + qJD(3) * t217 + qJD(4) * t121 + t391 + t640, t628 + t2 * qJD(2) + t11 * qJD(3) + (t120 * t378 + t121 * t374) * qJD(4) + t91 * qJD(5) + t45 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t718, qJD(2) * t32 + qJD(4) * t155 - t466, -qJD(2) * t216 + t292 * t581, t718, -t494, qJD(2) * t25 + qJD(4) * t91 + t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t130 - t534, -t442, t421, qJD(2) * t36 + qJD(4) * t45 + t577 + t639; 0, 0, 0, -t367, -t552, 0, 0, 0, t543, t542, 0, -t556, t557, -t528, t367 * t397 - t306, 0.2e1 * t403 * t447, -t401 * t572 + t583, -t402 * t571 + t582, -t325, qJD(4) * t223 - t565, qJD(4) * t224 + t564, -qJD(4) * t7 - t621 + t715, qJD(3) * t34 - qJD(4) * t3 - qJD(5) * t31 - t619, qJD(3) * t209 + qJD(4) * t22 - qJD(5) * t217 - qJD(6) * t129 - t608, -qJD(4) * t5 - t624 - t686 + t715, qJD(3) * t214 - qJD(4) * t20 - qJD(5) * t483 - t243 - t613, -qJD(3) * t26 - qJD(4) * t1 - qJD(5) * t24 - qJD(6) * t35 - t645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t526, t362 * qJD(4), 0, 0, 0, qJ(3) * t571 + t576, -qJ(3) * t573 + t574, t719, qJD(3) * t379 + qJD(4) * t62 + t687, t94 * qJD(4) - t432 * t493, t719, -qJD(3) * t326 + qJD(4) * t95 + qJD(6) * t323, t43 * qJD(4) - t222 * t493 + t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t579, 0, 0, 0, 0, 0, t550, t548, t720, t467 + t725, t703, t720, -t702, t468 + t725; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443, t437, t329, t330, -t547 / 0.2e1, -t401 * t570 - t446, -t403 * t570 - t445, -t484 - t711 (-t248 * t643 - t644 * t708) * t646 + t194 * qJD(5) + t435, -qJD(4) * t708 + t478, -t485 - t675, -qJD(4) * t248 + t479 (-t248 * t374 + t378 * t708) * qJD(4) + t123 * qJD(5) + t182 * qJD(6) + t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t716, qJD(4) * t194 + t142 + t470, -t559, t716, -t561, qJD(4) * t123 + t142 + t471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, -t701, t172, qJD(4) * t182 - t222 * t555 - t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, -t551, t527, 0, 0, 0, 0, 0, t459 * t401, t459 * t403, t717, -qJD(2) * t34 - qJD(4) * t13 - t595 + t683, -qJD(2) * t209 - qJD(4) * t412 - t533, t717, -qJD(2) * t214 + qJD(4) * t216 + t535, qJD(2) * t26 - qJD(4) * t10 - t603 + t683 + t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t579, 0, 0, 0, 0, 0, -t550, -t548, -t720, -t467 + t724, -t703, -t720, t702, -t468 + t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, t330, 0, -t480 + t711, -t701, 0, t309 + t560, -t481 + t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, 0, 0, 0, t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t439, -t438 (t532 + t550) * t402 (-t401 * t547 + t548) * t402, t380, -qJD(2) * t223 + t401 * t575 - t588, -qJD(2) * t224 + t402 * t574 + t589, qJD(2) * t7 - t620, qJD(2) * t3 + qJD(3) * t13 + qJD(5) * t154 - t614, -qJD(2) * t22 + t458 - t641, qJD(2) * t5 - t622, qJD(2) * t20 - qJD(3) * t216 + t391 + t569 - t640, qJD(2) * t1 + qJD(3) * t10 - qJD(5) * t90 - qJD(6) * t44 - t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, -t437, t366, t369, t547 / 0.2e1, t446, t445, t484, qJD(5) * t195 - t435, -qJD(5) * t326 - t478, t485, -qJD(5) * t432 - t479, -qJD(5) * t122 + qJD(6) * t245 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, t369, 0, t480, t685, 0, -t560, t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t374 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t460, -t221, 0, -t704, -t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, -t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t718, qJD(2) * t31 - qJD(4) * t154 + t466, t217 * qJD(2) - t292 * t372, -t718, t442, qJD(2) * t24 + qJD(4) * t90 + qJD(6) * t292 - t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t716, -qJD(4) * t195 - t145 - t470, t309 + t559, -t716, t553 + t561, qJD(4) * t122 - t145 - t471 - t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, 0, 0, 0, -t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t460, t221, 0, t704, t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t129 + t534, t494, -t421, qJD(2) * t35 + qJD(4) * t44 - t458 - t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t444, t685, -t172, t604 - t245 * qJD(4) + (qJD(5) + t578) * t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t46;
