% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP4_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:01:40
% EndTime: 2019-03-09 10:01:48
% DurationCPUTime: 2.78s
% Computational Cost: add. (2842->253), mult. (6318->430), div. (0->0), fcn. (5147->6), ass. (0->144)
t103 = sin(qJ(4));
t105 = cos(qJ(4));
t180 = sin(pkin(9));
t181 = cos(pkin(9));
t70 = -t180 * t103 + t181 * t105;
t59 = t70 * qJD(4);
t69 = t181 * t103 + t180 * t105;
t191 = 0.2e1 * t69 * t59;
t60 = t69 * qJD(4);
t46 = -0.2e1 * t70 * t60;
t197 = t191 + t46;
t187 = pkin(3) + pkin(7);
t188 = pkin(2) + pkin(8);
t174 = qJ(5) + t188;
t104 = sin(qJ(2));
t106 = cos(qJ(2));
t179 = qJ(3) * t106;
t196 = t188 * t104 - t179;
t176 = t104 * qJ(3);
t195 = t188 * t106 + t176;
t194 = (-t180 * t59 + t181 * t60) * pkin(4);
t147 = qJD(2) * t181;
t137 = t104 * t147;
t146 = qJD(2) * t180;
t138 = t104 * t146;
t36 = -t103 * t138 + t105 * t137 + t106 * t60;
t55 = t70 * t106;
t131 = -t69 * t36 + t55 * t59;
t102 = t106 ^ 2;
t143 = qJD(2) * (t104 ^ 2 - t102);
t101 = t105 ^ 2;
t99 = t103 ^ 2;
t182 = t101 - t99;
t145 = qJD(4) * t182;
t164 = t105 * qJD(5);
t172 = qJD(4) * t103;
t114 = t174 * t172 - t164;
t144 = t174 * t105;
t168 = t103 * qJD(5);
t54 = -qJD(4) * t144 - t168;
t33 = -t181 * t114 + t180 * t54;
t34 = t180 * t114 + t181 * t54;
t75 = t174 * t103;
t47 = t181 * t144 - t180 * t75;
t48 = -t180 * t144 - t181 * t75;
t119 = -t33 * t70 + t34 * t69 + t47 * t60 + t48 * t59;
t163 = t106 * qJD(3);
t81 = t187 * t106;
t192 = qJD(2) * t195 - qJD(4) * t81 - t163;
t190 = 0.2e1 * qJD(3);
t189 = 2 * qJD(6);
t129 = -qJD(4) * t187 + qJD(3);
t94 = t106 * qJD(2);
t142 = t187 * t94;
t171 = qJD(4) * t105;
t67 = -pkin(1) - t195;
t139 = t105 * t142 - t67 * t171;
t177 = t103 * t104;
t10 = (qJ(5) * t171 + t168 + (qJ(3) * t103 + pkin(4)) * qJD(2)) * t106 + (-t174 * qJD(2) + t129) * t177 + t139;
t167 = t104 * qJD(2);
t152 = t105 * t167;
t170 = qJD(4) * t106;
t156 = t103 * t170;
t116 = t152 + t156;
t166 = t104 * qJD(3);
t157 = t187 * t104;
t73 = t105 * t157;
t19 = t67 * t172 - t105 * (t196 * qJD(2) - t166) - t103 * t142 - qJD(4) * t73;
t12 = t116 * qJ(5) - t106 * t164 - t19;
t5 = t180 * t10 + t181 * t12;
t186 = t106 * pkin(4);
t35 = t104 * pkin(4) + t73 + (qJ(5) * t106 - t67) * t103;
t175 = t105 * t106;
t45 = t103 * t157 + t105 * t67;
t39 = -qJ(5) * t175 + t45;
t17 = t180 * t35 + t181 * t39;
t91 = t103 * pkin(4) + qJ(3);
t178 = qJD(2) * t81;
t85 = pkin(4) * t171 + qJD(3);
t169 = qJD(4) * t188;
t165 = t104 * qJD(6);
t162 = -0.2e1 * t55 * t36;
t161 = -0.2e1 * pkin(1) * qJD(2);
t160 = qJ(6) * t94 + t5;
t61 = pkin(4) * t175 + t81;
t159 = pkin(7) * t167;
t158 = pkin(7) * t94;
t155 = t105 * t170;
t154 = t103 * t94;
t153 = t104 * t94;
t151 = t103 * t171;
t150 = t47 * t33 + t48 * t34;
t141 = t103 * t152;
t140 = t102 * t151;
t134 = -t181 * t10 + t180 * t12;
t37 = -t103 * t137 - t105 * t138 + t106 * t59;
t56 = t69 * t106;
t132 = t56 * t36 - t37 * t55;
t15 = -t70 * t37 + t60 * t56;
t130 = -t70 * t59 + t60 * t69;
t128 = -t106 * pkin(2) - t176;
t44 = -t103 * t67 + t73;
t127 = -t103 * t44 + t105 * t45;
t123 = -t33 * t104 - t47 * t94;
t122 = t34 * t104 + t48 * t94;
t121 = t104 * t36 - t55 * t94;
t40 = t104 * t59 + t69 * t94;
t41 = -t60 * t104 + t70 * t94;
t120 = -t33 * t56 - t34 * t55 + t48 * t36 - t47 * t37;
t118 = -t15 - t131;
t88 = t180 * pkin(4) + qJ(6);
t90 = -t181 * pkin(4) - pkin(5);
t117 = t69 * qJD(6) + t88 * t59 + t60 * t90;
t16 = -t180 * t39 + t181 * t35;
t74 = t187 * t167;
t113 = t196 * qJD(4) - t74;
t112 = 0.2e1 * t119;
t13 = t104 * qJ(6) + t17;
t14 = -t104 * pkin(5) - t16;
t2 = t160 + t165;
t3 = -pkin(5) * t94 + t134;
t111 = t13 * t59 + t14 * t60 + t2 * t69 - t3 * t70;
t110 = -t134 * t70 - t16 * t60 + t17 * t59 + t5 * t69;
t109 = t70 * t36 + t37 * t69 + t60 * t55 + t56 * t59;
t108 = t128 * qJD(2) + t163;
t50 = -pkin(4) * t156 + (-pkin(4) * t105 - t187) * t167;
t20 = qJ(3) * t154 + (-t188 * qJD(2) + t129) * t177 + t139;
t1 = t127 * qJD(4) - t19 * t103 + t20 * t105;
t98 = qJ(3) * t190;
t84 = -0.2e1 * t153;
t83 = 0.2e1 * t153;
t76 = -pkin(1) + t128;
t71 = -0.2e1 * t143;
t63 = -t104 * t171 - t154;
t62 = -t104 * t172 + t105 * t94;
t58 = -t166 + (pkin(2) * t104 - t179) * qJD(2);
t52 = t106 * t145 - t141;
t42 = t69 * pkin(5) - t70 * qJ(6) + t91;
t28 = t55 * pkin(5) + t56 * qJ(6) + t61;
t27 = t59 * pkin(5) + t60 * qJ(6) - t70 * qJD(6) + t85;
t24 = 0.2e1 * t56 * t37;
t22 = -0.2e1 * t104 * t37 - 0.2e1 * t56 * t94;
t6 = -t36 * pkin(5) + t37 * qJ(6) + t56 * qJD(6) + t50;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t71, 0, t84, 0, 0, t104 * t161, t106 * t161, 0, 0, 0, 0, 0, t83, t71, t84, 0, 0.2e1 * t58 * t106 - 0.2e1 * t76 * t167, -0.2e1 * t58 * t104 - 0.2e1 * t76 * t94, 0.2e1 * t76 * t58, -0.2e1 * t153 * t99 + 0.2e1 * t140, 0.2e1 * t102 * t145 - 0.4e1 * t106 * t141, 0.2e1 * t103 * t143 - 0.2e1 * t104 * t155, -0.2e1 * t101 * t153 - 0.2e1 * t140, 0.2e1 * t104 * t156 + 0.2e1 * t105 * t143, t83, 0.2e1 * (-t105 * t178 + t20) * t104 + 0.2e1 * (qJD(2) * t44 - t74 * t105 - t81 * t172) * t106, 0.2e1 * (t103 * t178 + t19) * t104 + 0.2e1 * (-qJD(2) * t45 + t74 * t103 - t81 * t171) * t106, 0.2e1 * t127 * t167 + 0.2e1 * (t103 * t20 + t105 * t19 + (t103 * t45 + t105 * t44) * qJD(4)) * t106, -0.2e1 * t45 * t19 + 0.2e1 * t44 * t20 - 0.2e1 * t81 * t74, t24, -0.2e1 * t132, t22, t162, 0.2e1 * t121, t83, -0.2e1 * t104 * t134 + 0.2e1 * t16 * t94 - 0.2e1 * t61 * t36 + 0.2e1 * t50 * t55, -0.2e1 * t5 * t104 - 0.2e1 * t17 * t94 - 0.2e1 * t61 * t37 - 0.2e1 * t50 * t56, -0.2e1 * t134 * t56 + 0.2e1 * t16 * t37 + 0.2e1 * t17 * t36 - 0.2e1 * t5 * t55, -0.2e1 * t134 * t16 + 0.2e1 * t17 * t5 + 0.2e1 * t61 * t50, t24, t22, 0.2e1 * t132, t83, -0.2e1 * t121, t162, -0.2e1 * t3 * t104 - 0.2e1 * t14 * t94 - 0.2e1 * t28 * t36 + 0.2e1 * t6 * t55, 0.2e1 * t13 * t36 - 0.2e1 * t14 * t37 - 0.2e1 * t2 * t55 - 0.2e1 * t3 * t56, 0.2e1 * t2 * t104 + 0.2e1 * t13 * t94 + 0.2e1 * t28 * t37 + 0.2e1 * t6 * t56, 0.2e1 * t13 * t2 + 0.2e1 * t14 * t3 + 0.2e1 * t28 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, -t167, 0, -t158, t159, 0, 0, 0, -t94, t167, 0, 0, 0, t108, t158, -t159, t108 * pkin(7), -t52, 0.4e1 * t106 * t151 + t182 * t167, t62, t52, t63, 0, t113 * t103 - t105 * t192, t103 * t192 + t113 * t105, -t1, -t74 * qJ(3) + t81 * qJD(3) - t1 * t188, t15, t109, t41, t131, -t40, 0, -t91 * t36 + t50 * t69 + t85 * t55 + t61 * t59 + t123, -t91 * t37 + t50 * t70 - t85 * t56 - t61 * t60 - t122, -t110 + t120, t134 * t47 - t16 * t33 + t17 * t34 + t5 * t48 + t50 * t91 + t61 * t85, t15, t41, -t109, 0, t40, t131, t27 * t55 + t28 * t59 - t42 * t36 + t6 * t69 + t123, -t111 + t120, t27 * t56 + t28 * t60 + t42 * t37 - t6 * t70 + t122, t13 * t34 + t14 * t33 + t2 * t48 + t28 * t27 + t3 * t47 + t6 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t98, -0.2e1 * t151, -0.2e1 * t145, 0, 0.2e1 * t151, 0, 0, 0.2e1 * qJ(3) * t171 + 0.2e1 * qJD(3) * t103, -0.2e1 * qJ(3) * t172 + 0.2e1 * qJD(3) * t105, 0, t98, t46, 0.2e1 * t130, 0, t191, 0, 0, 0.2e1 * t91 * t59 + 0.2e1 * t85 * t69, -0.2e1 * t91 * t60 + 0.2e1 * t85 * t70, -t112, 0.2e1 * t91 * t85 + 0.2e1 * t150, t46, 0, -0.2e1 * t130, 0, 0, t191, 0.2e1 * t27 * t69 + 0.2e1 * t42 * t59, -t112, -0.2e1 * t27 * t70 + 0.2e1 * t42 * t60, 0.2e1 * t42 * t27 + 0.2e1 * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, 0, t158, 0, 0, 0, 0, 0, 0, t62, t63, 0, t1, 0, 0, 0, 0, 0, 0, t41, -t40, t118, t110, 0, 0, 0, 0, 0, 0, t41, t118, t40, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, t119, 0, 0, 0, 0, 0, 0, 0, -t197, 0, t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t167 - t155, 0, t116, t94, t20, t19, 0, 0, 0, 0, -t37, 0, t36, t94, t147 * t186 - t134, -t146 * t186 - t5 (t180 * t36 + t181 * t37) * pkin(4) (-t134 * t181 + t180 * t5) * pkin(4), 0, -t37, 0, t94, -t36, 0 (pkin(5) - t90) * t94 - t134, -qJD(6) * t55 + t88 * t36 - t90 * t37, t88 * t94 + t160 + 0.2e1 * t165, t13 * qJD(6) + t2 * t88 + t3 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, 0, -t171, 0, t103 * t169, t105 * t169, 0, 0, 0, 0, -t60, 0, -t59, 0, -t33, -t34, t194 (t180 * t34 - t181 * t33) * pkin(4), 0, -t60, 0, 0, t59, 0, -t33, -t117, t34, t48 * qJD(6) + t33 * t90 + t34 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t171, 0, 0, 0, 0, 0, 0, 0, 0, -t60, -t59, 0, -t194, 0, 0, 0, 0, 0, 0, -t60, 0, t59, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t88 * t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t37, 0, t50, 0, 0, 0, 0, 0, 0, -t36, 0, t37, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, -t60, 0, t85, 0, 0, 0, 0, 0, 0, t59, 0, t60, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, -t37, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, 0, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
