% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% MDP [38x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRRRR7_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRRRR7_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(38,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR7_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR7_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR7_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [38 1]), ...
  'S6RRRRRR7_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [38x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:41:43
% EndTime: 2019-03-10 04:42:23
% DurationCPUTime: 24.71s
% Computational Cost: add. (20277->784), mult. (51196->1056), div. (0->0), fcn. (41853->12), ass. (0->301)
t837 = sin(pkin(6));
t847 = cos(qJ(2));
t935 = qJD(1) * t847;
t916 = t837 * t935;
t815 = -qJD(3) + t916;
t841 = sin(qJ(3));
t846 = cos(qJ(3));
t992 = cos(pkin(6));
t906 = t992 * qJD(1);
t868 = t906 + qJD(2);
t842 = sin(qJ(2));
t936 = qJD(1) * t837;
t917 = t842 * t936;
t758 = t841 * t868 + t846 * t917;
t840 = sin(qJ(4));
t845 = cos(qJ(4));
t704 = t758 * t840 + t845 * t815;
t706 = t758 * t845 - t815 * t840;
t839 = sin(qJ(5));
t844 = cos(qJ(5));
t641 = t844 * t704 + t706 * t839;
t843 = cos(qJ(6));
t838 = sin(qJ(6));
t870 = t704 * t839 - t844 * t706;
t987 = t870 * t838;
t581 = -t843 * t641 + t987;
t923 = qJD(1) * qJD(2);
t907 = t837 * t923;
t883 = t847 * t907;
t869 = t841 * t883;
t712 = qJD(3) * t758 + t869;
t871 = t641 * t838 + t843 * t870;
t1034 = t712 * MDP(36) + (-t581 ^ 2 + t871 ^ 2) * MDP(33) + t581 * MDP(32) * t871;
t885 = pkin(1) * t906;
t776 = pkin(8) * t916 + t842 * t885;
t1033 = t776 + t815 * (pkin(3) * t841 - pkin(10) * t846);
t744 = t840 * t846 * t916 - t845 * t917;
t930 = qJD(3) * t846;
t1024 = -t840 * t930 + t744;
t737 = pkin(9) * t868 + t776;
t772 = (-pkin(2) * t847 - pkin(9) * t842 - pkin(1)) * t837;
t750 = qJD(1) * t772;
t676 = -t841 * t737 + t750 * t846;
t660 = pkin(3) * t815 - t676;
t617 = pkin(4) * t704 + t660;
t569 = pkin(5) * t641 + t617;
t1015 = t569 * t581;
t1017 = pkin(12) * t641;
t1008 = -t841 * t917 + t846 * t868;
t773 = -pkin(8) * t917 + t847 * t885;
t736 = -pkin(2) * t868 - t773;
t656 = -pkin(3) * t1008 - t758 * pkin(10) + t736;
t677 = t846 * t737 + t841 * t750;
t661 = -pkin(10) * t815 + t677;
t595 = t845 * t656 - t661 * t840;
t574 = -pkin(11) * t706 + t595;
t751 = qJD(4) - t1008;
t567 = pkin(4) * t751 + t574;
t596 = t656 * t840 + t661 * t845;
t575 = -pkin(11) * t704 + t596;
t573 = t844 * t575;
t543 = t567 * t839 + t573;
t533 = t543 - t1017;
t925 = qJD(6) * t838;
t531 = t533 * t925;
t1032 = t531 - t1015;
t740 = qJD(5) + t751;
t738 = qJD(6) + t740;
t1012 = t738 * t871;
t1013 = t581 * t738;
t711 = qJD(3) * t1008 + t846 * t883;
t884 = t842 * t907;
t928 = qJD(4) * t845;
t929 = qJD(4) * t840;
t629 = t845 * t711 - t758 * t929 - t815 * t928 + t840 * t884;
t630 = qJD(4) * t706 + t711 * t840 - t845 * t884;
t926 = qJD(5) * t844;
t927 = qJD(5) * t839;
t558 = t844 * t629 - t839 * t630 - t704 * t926 - t706 * t927;
t849 = qJD(5) * t870 - t629 * t839 - t844 * t630;
t924 = qJD(6) * t843;
t920 = t843 * t558 - t641 * t924 + t838 * t849;
t523 = t870 * t925 + t920;
t903 = t558 * t838 - t843 * t849;
t850 = qJD(6) * t871 - t903;
t1031 = t712 * MDP(29) + (-t641 ^ 2 + t870 ^ 2) * MDP(26) + (t641 * t740 + t558) * MDP(27) + (-t740 * t870 + t849) * MDP(28) - t641 * MDP(25) * t870 + (t850 - t1012) * MDP(35) + (t523 - t1013) * MDP(34) + t1034;
t966 = t846 * t847;
t745 = (t840 * t842 + t845 * t966) * t936;
t878 = t845 * t930 - t745;
t1030 = -t841 * t929 + t878;
t1029 = t841 * t928 - t1024;
t1014 = t569 * t871;
t865 = (pkin(2) * t842 - pkin(9) * t847) * t837;
t775 = qJD(2) * t865;
t766 = qJD(1) * t775;
t919 = pkin(1) * t992;
t975 = t837 * t842;
t996 = -pkin(8) * t975 + t847 * t919;
t777 = t996 * qJD(2);
t767 = qJD(1) * t777;
t932 = qJD(3) * t841;
t860 = -t737 * t932 + t750 * t930 + t841 * t766 + t846 * t767;
t613 = pkin(10) * t884 + t860;
t974 = t837 * t847;
t854 = pkin(8) * t974 + t842 * t919;
t778 = t854 * qJD(2);
t768 = qJD(1) * t778;
t625 = t712 * pkin(3) - t711 * pkin(10) + t768;
t551 = -qJD(4) * t596 - t613 * t840 + t845 * t625;
t530 = pkin(4) * t712 - pkin(11) * t629 + t551;
t550 = t845 * t613 + t840 * t625 + t656 * t928 - t661 * t929;
t538 = -pkin(11) * t630 + t550;
t518 = -qJD(5) * t543 + t844 * t530 - t839 * t538;
t515 = pkin(5) * t712 - pkin(12) * t558 + t518;
t890 = -t839 * t530 - t844 * t538 - t567 * t926 + t575 * t927;
t516 = pkin(12) * t849 - t890;
t905 = t843 * t515 - t838 * t516;
t1028 = t1014 + t905;
t993 = pkin(9) * t840;
t1025 = -t1033 * t845 + t932 * t993;
t774 = qJD(1) * t865;
t944 = t846 * t773 + t841 * t774;
t689 = pkin(10) * t917 + t944;
t812 = -pkin(3) * t846 - pkin(10) * t841 - pkin(2);
t1023 = t1033 * t840 + t845 * t689 - t812 * t928;
t995 = qJD(4) + qJD(5);
t1022 = t1008 - t995;
t692 = pkin(3) * t758 - pkin(10) * t1008;
t691 = t845 * t692;
t994 = pkin(10) + pkin(11);
t918 = qJD(4) * t994;
t1021 = pkin(4) * t758 - t676 * t840 + t691 + (-pkin(11) * t1008 + t918) * t845;
t956 = t845 * t676 + t840 * t692;
t979 = t1008 * t840;
t1020 = -pkin(11) * t979 + t840 * t918 + t956;
t967 = t845 * t846;
t827 = pkin(9) * t967;
t886 = t841 * t916;
t1019 = pkin(4) * t886 - pkin(11) * t745 - t689 * t840 - (pkin(4) * t841 - pkin(11) * t967) * qJD(3) - (-t827 + (pkin(11) * t841 - t812) * t840) * qJD(4) - t1025;
t931 = qJD(3) * t845;
t1018 = -(-t841 * t931 - t846 * t929) * pkin(9) + t1023 + t1029 * pkin(11);
t1016 = pkin(12) * t870;
t796 = t839 * t845 + t840 * t844;
t779 = t796 * t841;
t795 = t839 * t840 - t844 * t845;
t955 = t744 * t839 - t745 * t844 - t779 * t995 - t795 * t930;
t970 = t841 * t845;
t971 = t840 * t841;
t954 = -t927 * t971 + (t970 * t995 - t1024) * t844 + t1030 * t839;
t948 = t1022 * t795;
t947 = t1022 * t796;
t1006 = t617 * t870 + t518;
t1005 = t617 * t641 + t890;
t834 = t837 ^ 2;
t1002 = -0.2e1 * t834 * t923;
t1001 = MDP(5) * (t842 ^ 2 - t847 ^ 2);
t782 = t841 * t992 + t846 * t975;
t921 = t840 * t974;
t730 = t782 * t845 - t921;
t781 = t841 * t975 - t846 * t992;
t770 = -pkin(2) * t992 - t996;
t684 = t781 * pkin(3) - t782 * pkin(10) + t770;
t771 = pkin(9) * t992 + t854;
t946 = t846 * t771 + t841 * t772;
t686 = -pkin(10) * t974 + t946;
t899 = t845 * t684 - t686 * t840;
t591 = pkin(4) * t781 - pkin(11) * t730 + t899;
t729 = t782 * t840 + t845 * t974;
t953 = t840 * t684 + t845 * t686;
t597 = -pkin(11) * t729 + t953;
t962 = t839 * t591 + t844 * t597;
t882 = -t677 + (t929 - t979) * pkin(4);
t1000 = t1019 * t844;
t793 = t845 * t812;
t719 = -pkin(11) * t970 + t793 + (-pkin(4) - t993) * t846;
t940 = t840 * t812 + t827;
t733 = -pkin(11) * t971 + t940;
t949 = t839 * t719 + t844 * t733;
t895 = -t841 * t773 + t774 * t846;
t688 = -pkin(3) * t917 - t895;
t945 = pkin(4) * t1029 + pkin(9) * t930 - t688;
t999 = t1021 * t844;
t816 = t994 * t840;
t817 = t994 * t845;
t941 = -t839 * t816 + t844 * t817;
t998 = t1020 * t844 + t1021 * t839 + t816 * t926 + t817 * t927;
t997 = t1018 * t844 + t1019 * t839 - t719 * t926 + t733 * t927;
t848 = qJD(1) ^ 2;
t571 = t839 * t575;
t542 = t844 * t567 - t571;
t532 = t542 + t1016;
t527 = pkin(5) * t740 + t532;
t991 = t527 * t843;
t889 = t737 * t930 + t750 * t932 - t846 * t766 + t841 * t767;
t614 = -pkin(3) * t884 + t889;
t990 = t614 * t840;
t989 = t614 * t845;
t988 = t629 * t840;
t986 = t704 * t751;
t985 = t706 * t751;
t984 = t712 * t839;
t983 = t712 * t840;
t982 = t712 * t845;
t981 = t712 * t846;
t980 = t1008 * t815;
t978 = t758 * t815;
t862 = t815 * t841;
t977 = t815 * t846;
t976 = t834 * t848;
t973 = t838 * t712;
t972 = t839 * t843;
t969 = t843 * t533;
t968 = t843 * t712;
t965 = t844 * t574 - t571;
t780 = t795 * t841;
t696 = t843 * t779 - t780 * t838;
t964 = -qJD(6) * t696 - t838 * t954 + t843 * t955;
t697 = -t779 * t838 - t780 * t843;
t963 = qJD(6) * t697 + t838 * t955 + t843 * t954;
t716 = t843 * t795 + t796 * t838;
t959 = -qJD(6) * t716 + t838 * t947 + t843 * t948;
t717 = -t795 * t838 + t796 * t843;
t958 = qJD(6) * t717 + t838 * t948 - t843 * t947;
t957 = pkin(5) * t954 + t945;
t950 = -pkin(5) * t947 + t882;
t804 = pkin(4) * t971 + t841 * pkin(9);
t934 = qJD(2) * t842;
t933 = qJD(2) * t846;
t831 = -pkin(4) * t845 - pkin(3);
t915 = t837 * t934;
t914 = qJD(2) * t974;
t911 = t751 * t929;
t904 = t838 * t515 - t531;
t902 = -t574 * t839 - t573;
t901 = t844 * t591 - t597 * t839;
t897 = t844 * t719 - t733 * t839;
t896 = -t841 * t771 + t772 * t846;
t894 = -t844 * t816 - t817 * t839;
t893 = t751 * t845;
t892 = qJD(6) * t527 + t516;
t891 = t834 * t842 * t847 * MDP(4);
t880 = pkin(1) * t1002;
t685 = pkin(3) * t974 - t896;
t702 = -pkin(12) * t795 + t941;
t877 = pkin(5) * t758 + pkin(12) * t948 + qJD(5) * t941 + qJD(6) * t702 - t1020 * t839 + t999;
t701 = -pkin(12) * t796 + t894;
t876 = -pkin(12) * t947 - qJD(6) * t701 + t998;
t638 = -pkin(12) * t779 + t949;
t875 = qJD(5) * t949 + qJD(6) * t638 + t1000 - t1018 * t839 + t955 * pkin(12) + (t886 - t932) * pkin(5);
t633 = -pkin(5) * t846 + pkin(12) * t780 + t897;
t874 = pkin(12) * t954 - qJD(6) * t633 + t997;
t522 = t838 * t527 + t969;
t665 = -t729 * t839 + t730 * t844;
t544 = pkin(5) * t781 - pkin(12) * t665 + t901;
t664 = t844 * t729 + t730 * t839;
t547 = -pkin(12) * t664 + t962;
t873 = t544 * t843 - t547 * t838;
t872 = t544 * t838 + t547 * t843;
t603 = t843 * t664 + t665 * t838;
t604 = -t664 * t838 + t665 * t843;
t866 = -t771 * t930 - t772 * t932 + t775 * t846 - t841 * t777;
t864 = -t751 * t928 - t983;
t861 = -pkin(10) * t712 + t660 * t751;
t859 = -t771 * t932 + t772 * t930 + t841 * t775 + t846 * t777;
t621 = pkin(10) * t915 + t859;
t727 = qJD(3) * t782 + t841 * t914;
t728 = -qJD(3) * t781 + t846 * t914;
t649 = t727 * pkin(3) - t728 * pkin(10) + t778;
t858 = t845 * t621 + t840 * t649 + t684 * t928 - t686 * t929;
t655 = -qJD(4) * t729 + t728 * t845 + t840 * t915;
t851 = -qJD(4) * t953 - t621 * t840 + t845 * t649;
t541 = pkin(4) * t727 - pkin(11) * t655 + t851;
t654 = -qJD(4) * t921 + t728 * t840 + t782 * t928 - t845 * t915;
t549 = -pkin(11) * t654 + t858;
t857 = t839 * t541 + t844 * t549 + t591 * t926 - t597 * t927;
t645 = pkin(4) * t729 + t685;
t853 = pkin(1) * (-qJD(2) * t906 + t976);
t622 = -pkin(3) * t915 - t866;
t852 = -qJD(5) * t962 + t844 * t541 - t549 * t839;
t513 = -t522 * qJD(6) + t905;
t568 = pkin(4) * t630 + t614;
t583 = pkin(4) * t654 + t622;
t830 = pkin(4) * t844 + pkin(5);
t769 = pkin(5) * t795 + t831;
t721 = pkin(5) * t779 + t804;
t687 = t712 * t781;
t608 = pkin(4) * t706 - pkin(5) * t870;
t593 = pkin(5) * t664 + t645;
t564 = qJD(5) * t665 + t844 * t654 + t655 * t839;
t563 = -qJD(5) * t664 - t654 * t839 + t655 * t844;
t545 = pkin(5) * t564 + t583;
t536 = t965 + t1016;
t535 = t902 + t1017;
t534 = -pkin(5) * t849 + t568;
t526 = qJD(6) * t604 + t563 * t838 + t843 * t564;
t525 = -qJD(6) * t603 + t563 * t843 - t564 * t838;
t521 = -t533 * t838 + t991;
t520 = -pkin(12) * t564 + t857;
t519 = pkin(5) * t727 - pkin(12) * t563 + t852;
t512 = t892 * t843 + t904;
t1 = [(t518 * t781 + t542 * t727 + t617 * t564 + t568 * t664 + t583 * t641 - t645 * t849 + t712 * t901 + t740 * t852) * MDP(30) + (-t558 * t664 - t563 * t641 + t564 * t870 + t665 * t849) * MDP(26) + (-t564 * t740 - t641 * t727 - t664 * t712 + t781 * t849) * MDP(28) + (t859 * t815 + t778 * t758 + t770 * t711 + t768 * t782 + t736 * t728 + (t860 * t847 + (-qJD(1) * t946 - t677) * t934) * t837) * MDP(17) + (-t767 * t992 - t777 * t868 + t847 * t880) * MDP(10) + (-t768 * t992 - t778 * t868 + t842 * t880) * MDP(9) + (t551 * t781 + t595 * t727 + t614 * t729 + t622 * t704 + t685 * t630 + t660 * t654 + t712 * t899 + t751 * t851) * MDP(23) + (-t550 * t781 - t596 * t727 + t614 * t730 + t622 * t706 + t685 * t629 + t660 * t655 - t712 * t953 - t751 * t858) * MDP(24) + (-t523 * t603 + t525 * t581 + t526 * t871 + t604 * t850) * MDP(33) + (-t526 * t738 + t581 * t727 - t603 * t712 + t781 * t850) * MDP(35) + ((-qJD(6) * t872 + t519 * t843 - t520 * t838) * t738 + t873 * t712 + t513 * t781 + t521 * t727 - t545 * t581 - t593 * t850 + t534 * t603 + t569 * t526) * MDP(37) + (MDP(6) * t914 - MDP(7) * t915) * (0.2e1 * t906 + qJD(2)) + (-t866 * t815 - t778 * t1008 + t770 * t712 + t768 * t781 + t736 * t727 + (t889 * t847 + (qJD(1) * t896 + t676) * t934) * t837) * MDP(16) + (t1008 * t728 - t711 * t781 - t712 * t782 - t727 * t758) * MDP(12) + (t727 * t815 + (t712 * t847 + (-qJD(1) * t781 + t1008) * t934) * t837) * MDP(14) + (-t629 * t729 - t630 * t730 - t654 * t706 - t655 * t704) * MDP(19) + (t629 * t730 + t655 * t706) * MDP(18) + 0.2e1 * t891 * t923 + (-(qJD(6) * t873 + t519 * t838 + t520 * t843) * t738 - t872 * t712 - t512 * t781 - t522 * t727 - t545 * t871 + t593 * t523 + t534 * t604 + t569 * t525) * MDP(38) + (t523 * t604 - t525 * t871) * MDP(32) + (t523 * t781 + t525 * t738 + t604 * t712 - t727 * t871) * MDP(34) + (t558 * t665 - t563 * t870) * MDP(25) + (t558 * t781 + t563 * t740 + t665 * t712 - t727 * t870) * MDP(27) + (-t543 * t727 + t645 * t558 + t617 * t563 + t568 * t665 - t583 * t870 - t712 * t962 - t740 * t857 + t781 * t890) * MDP(31) + (-t815 * t837 - t834 * t935) * MDP(15) * t934 + (-t630 * t781 - t654 * t751 - t704 * t727 - t712 * t729) * MDP(21) + (t629 * t781 + t655 * t751 + t706 * t727 + t712 * t730) * MDP(20) + (t711 * t782 + t728 * t758) * MDP(11) + (t727 * t751 + t687) * MDP(22) + (t727 * t740 + t687) * MDP(29) + (t727 * t738 + t687) * MDP(36) + (-t728 * t815 + (-t711 * t847 + (qJD(1) * t782 + t758) * t934) * t837) * MDP(13) + t1001 * t1002; (t641 * t862 - t712 * t779 - t740 * t954 - t846 * t849) * MDP(28) + (-t558 * t779 - t641 * t955 - t780 * t849 + t870 * t954) * MDP(26) + (-t815 * t930 + (t815 * t966 + (qJD(2) * t841 - t758) * t842) * t936) * MDP(13) + (-t891 + (-MDP(6) * t847 + MDP(7) * t842) * t837 * t992) * t848 + (-t581 * t862 - t696 * t712 - t738 * t963 - t846 * t850) * MDP(35) + (-t523 * t696 + t581 * t964 + t697 * t850 + t871 * t963) * MDP(33) + ((t633 * t843 - t638 * t838) * t712 - t513 * t846 - t721 * t850 + t534 * t696 + (t838 * t874 - t843 * t875) * t738 - t957 * t581 + t963 * t569 - t521 * t862) * MDP(37) + (t897 * t712 - t518 * t846 - t804 * t849 + t568 * t779 + (-t733 * t926 + (-qJD(5) * t719 + t1018) * t839 - t1000) * t740 + t945 * t641 + t954 * t617 - t542 * t862) * MDP(30) + (pkin(8) * t884 + t773 * t868 + t847 * t853) * MDP(10) + (t704 * t745 + t706 * t744 + (-t704 * t845 - t706 * t840) * t930 + (-t988 - t630 * t845 + (t704 * t840 - t706 * t845) * qJD(4)) * t841) * MDP(19) + (t1030 * t706 + t629 * t970) * MDP(18) + (-pkin(2) * t712 - t768 * t846 + t895 * t815 + t776 * t1008 + (pkin(9) * t977 + t736 * t841) * qJD(3) + (-t676 * t842 + (-pkin(9) * t934 - t736 * t847) * t841) * t936) * MDP(16) + (t815 * t932 + (-t847 * t862 + (-t1008 + t933) * t842) * t936) * MDP(14) + (t711 * t841 - t758 * t977) * MDP(11) + (-pkin(2) * t711 + t768 * t841 - t944 * t815 - t776 * t758 + (-pkin(9) * t862 + t736 * t846) * qJD(3) + (-t736 * t966 + (-pkin(9) * t933 + t677) * t842) * t936) * MDP(17) + (-pkin(8) * t883 + t776 * t868 + t842 * t853) * MDP(9) + (-(t633 * t838 + t638 * t843) * t712 + t512 * t846 + t721 * t523 + t534 * t697 + (t838 * t875 + t843 * t874) * t738 - t957 * t871 + t964 * t569 + t522 * t862) * MDP(38) + (t523 * t697 - t871 * t964) * MDP(32) + (-t558 * t780 - t870 * t955) * MDP(25) + (t543 * t862 + t804 * t558 - t568 * t780 + t955 * t617 - t949 * t712 + t740 * t997 - t846 * t890 - t870 * t945) * MDP(31) + (-t751 * t862 - t981) * MDP(22) + (-t740 * t862 - t981) * MDP(29) + (-t738 * t862 - t981) * MDP(36) + (-t523 * t846 + t697 * t712 + t738 * t964 + t862 * t871) * MDP(34) + (-t558 * t846 - t712 * t780 + t740 * t955 + t862 * t870) * MDP(27) + ((t711 - t980) * t846 + (-t712 + t978) * t841) * MDP(12) + (-t940 * t712 - t688 * t706 - t660 * t745 + t1023 * t751 + (t660 * t931 + t550 + (qJD(3) * t706 + t911) * pkin(9)) * t846 + (-t660 * t929 + t989 + t815 * t596 + (t751 * t931 + t629) * pkin(9)) * t841) * MDP(24) + (t630 * t846 + t1024 * t751 + (t704 * t815 + t864) * t841) * MDP(21) + (-t660 * t744 - t688 * t704 + t793 * t712 + ((-qJD(4) * t812 + t689) * t840 + t1025) * t751 + (t660 * t840 * qJD(3) - t551 + (qJD(3) * t704 + t864) * pkin(9)) * t846 + (pkin(9) * t630 - t595 * t815 + t660 * t928 + t990) * t841) * MDP(23) + t976 * t1001 + t815 * MDP(15) * t917 + (-t629 * t846 + t878 * t751 + (-t706 * t815 - t911 + t982) * t841) * MDP(20); MDP(15) * t884 + (-t751 ^ 2 * t840 + t982) * MDP(21) + ((t629 - t986) * t845 + (-t630 - t985) * t840) * MDP(19) + (-pkin(3) * t630 - t989 - t677 * t704 + (-pkin(10) * t928 - t691) * t751 + (t676 * t751 + t861) * t840) * MDP(23) + (-pkin(3) * t629 + t990 - t677 * t706 + (pkin(10) * t929 + t956) * t751 + t861 * t845) * MDP(24) + (-t869 - t978) * MDP(14) + (t751 * t893 + t983) * MDP(20) + (-t712 * t795 + t740 * t947) * MDP(28) + ((t701 * t843 - t702 * t838) * t712 - t769 * t850 + t534 * t716 + (t838 * t876 - t843 * t877) * t738 - t950 * t581 + t958 * t569) * MDP(37) + (-t523 * t716 + t581 * t959 + t717 * t850 + t871 * t958) * MDP(33) + (-t521 * MDP(37) - t581 * MDP(35) + t522 * MDP(38) + t871 * MDP(34) + t543 * MDP(31) - t542 * MDP(30) + t641 * MDP(28) + t870 * MDP(27) - t706 * MDP(20) - t736 * MDP(16) - t595 * MDP(23) + t596 * MDP(24) - t1008 * MDP(11) - t751 * MDP(22) - t738 * MDP(36) - t740 * MDP(29) - qJD(3) * MDP(14) + t704 * MDP(21) + MDP(12) * t758) * t758 + (-t558 * t795 - t641 * t948 + t796 * t849 - t870 * t947) * MDP(26) + (t894 * t712 - t831 * t849 + t568 * t795 + (-t817 * t926 + (qJD(5) * t816 + t1020) * t839 - t999) * t740 + t882 * t641 - t947 * t617) * MDP(30) + (t706 * t893 + t988) * MDP(18) - t1008 ^ 2 * MDP(12) + (-t1008 * t736 - t676 * t815 - t860) * MDP(17) + (-t677 * t815 - t889) * MDP(16) + (t523 * t717 - t871 * t959) * MDP(32) + (-(t701 * t838 + t702 * t843) * t712 + t769 * t523 + t534 * t717 + (t838 * t877 + t843 * t876) * t738 - t950 * t871 + t959 * t569) * MDP(38) + (t831 * t558 + t568 * t796 + t948 * t617 - t941 * t712 + t740 * t998 - t870 * t882) * MDP(31) + (t558 * t796 - t870 * t948) * MDP(25) + (t712 * t717 + t738 * t959) * MDP(34) + (t711 + t980) * MDP(13) + (t712 * t796 + t740 * t948) * MDP(27) + (-t712 * t716 - t738 * t958) * MDP(35); (t830 * t968 - (t535 * t843 - t536 * t838) * t738 + t608 * t581 + (-t839 * t973 + (-t838 * t844 - t972) * t738 * qJD(5)) * pkin(4) + ((-pkin(4) * t972 - t830 * t838) * t738 - t522) * qJD(6) + t1028) * MDP(37) + (t629 + t986) * MDP(20) + (t596 * t751 - t660 * t706 + t551) * MDP(23) + (t608 * t871 + (-t830 * t712 - t515 + (t535 - (-qJD(5) - qJD(6)) * t839 * pkin(4)) * t738) * t838 + (-pkin(4) * t984 + (-pkin(4) * t926 - qJD(6) * t830 + t536) * t738 - t892) * t843 + t1032) * MDP(38) + (-t630 + t985) * MDP(21) + t712 * MDP(22) + (-t704 ^ 2 + t706 ^ 2) * MDP(19) + (-t902 * t740 + (-t641 * t706 + t712 * t844 - t740 * t927) * pkin(4) + t1006) * MDP(30) + (t965 * t740 + (t706 * t870 - t740 * t926 - t984) * pkin(4) + t1005) * MDP(31) + (t595 * t751 + t660 * t704 - t550) * MDP(24) + t706 * t704 * MDP(18) + t1031; (t543 * t740 + t1006) * MDP(30) + (t542 * t740 + t1005) * MDP(31) + (-(-t532 * t838 - t969) * t738 + t1014 + (-t581 * t870 - t738 * t925 + t968) * pkin(5) + t513) * MDP(37) + ((-t533 * t738 - t515) * t838 + (t532 * t738 - t892) * t843 + (-t738 * t924 - t870 * t871 - t973) * pkin(5) + t1032) * MDP(38) + t1031; (t920 - t1013) * MDP(34) + (-t903 - t1012) * MDP(35) + (t522 * t738 + t1028) * MDP(37) + (-t843 * t516 + t521 * t738 - t1015 - t904) * MDP(38) + (MDP(34) * t987 + MDP(35) * t871 - MDP(37) * t522 - MDP(38) * t991) * qJD(6) + t1034;];
tauc  = t1;
