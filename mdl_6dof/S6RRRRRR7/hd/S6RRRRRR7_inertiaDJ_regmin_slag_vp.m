% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR7_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR7_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR7_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR7_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:41:06
% EndTime: 2019-03-10 04:41:27
% DurationCPUTime: 7.65s
% Computational Cost: add. (11691->493), mult. (31080->868), div. (0->0), fcn. (31229->12), ass. (0->230)
t208 = sin(qJ(3));
t207 = sin(qJ(4));
t213 = cos(qJ(3));
t279 = qJD(3) * t213;
t254 = t207 * t279;
t212 = cos(qJ(4));
t276 = qJD(4) * t212;
t309 = t208 * t276 + t254;
t206 = sin(qJ(5));
t211 = cos(qJ(5));
t168 = t206 * t212 + t207 * t211;
t151 = t168 * t208;
t232 = -pkin(3) * t213 - pkin(10) * t208;
t177 = -pkin(2) + t232;
t166 = t212 * t177;
t290 = t208 * t212;
t299 = pkin(9) * t207;
t119 = -pkin(11) * t290 + t166 + (-pkin(4) - t299) * t213;
t289 = t212 * t213;
t191 = pkin(9) * t289;
t143 = t207 * t177 + t191;
t291 = t207 * t208;
t128 = -pkin(11) * t291 + t143;
t121 = t211 * t128;
t83 = t206 * t119 + t121;
t306 = pkin(10) + pkin(11);
t180 = t306 * t207;
t181 = t306 * t212;
t130 = -t206 * t180 + t211 * t181;
t253 = t212 * t279;
t277 = qJD(4) * t207;
t222 = -t208 * t277 + t253;
t202 = t212 ^ 2;
t285 = t207 ^ 2 - t202;
t239 = t285 * qJD(4);
t308 = qJD(4) + qJD(5);
t275 = qJD(4) * t213;
t251 = t207 * t275;
t280 = qJD(3) * t212;
t221 = t208 * t280 + t251;
t231 = pkin(3) * t208 - pkin(10) * t213;
t227 = t231 * qJD(3);
t101 = pkin(9) * t221 - t177 * t276 - t207 * t227;
t204 = sin(pkin(6));
t307 = 0.2e1 * t204;
t209 = sin(qJ(2));
t294 = t204 * t209;
t295 = cos(pkin(6));
t155 = t208 * t294 - t295 * t213;
t305 = pkin(4) * t155;
t304 = pkin(4) * t211;
t156 = t295 * t208 + t213 * t294;
t214 = cos(qJ(2));
t282 = qJD(2) * t214;
t247 = t204 * t282;
t124 = qJD(3) * t156 + t208 * t247;
t303 = pkin(5) * t124;
t302 = pkin(5) * t155;
t301 = pkin(5) * t213;
t300 = pkin(9) * t204;
t293 = t204 * t214;
t260 = t207 * t293;
t127 = t156 * t212 - t260;
t258 = pkin(1) * t295;
t145 = -t295 * pkin(2) + pkin(8) * t294 - t214 * t258;
t97 = t155 * pkin(3) - t156 * pkin(10) + t145;
t219 = pkin(8) * t293 + t209 * t258;
t146 = t295 * pkin(9) + t219;
t147 = (-pkin(2) * t214 - pkin(9) * t209 - pkin(1)) * t204;
t288 = t213 * t146 + t208 * t147;
t99 = -pkin(10) * t293 + t288;
t55 = -t207 * t99 + t212 * t97;
t49 = -pkin(11) * t127 + t305 + t55;
t126 = t156 * t207 + t212 * t293;
t56 = t207 * t97 + t212 * t99;
t52 = -pkin(11) * t126 + t56;
t51 = t211 * t52;
t26 = t206 * t49 + t51;
t281 = qJD(3) * t155;
t125 = t213 * t247 - t281;
t283 = qJD(2) * t209;
t248 = t204 * t283;
t77 = -qJD(4) * t126 + t125 * t212 + t207 * t248;
t298 = t207 * t77;
t210 = cos(qJ(6));
t85 = t211 * t126 + t127 * t206;
t22 = -pkin(12) * t85 + t26;
t297 = t210 * t22;
t70 = -pkin(12) * t151 + t83;
t296 = t210 * t70;
t292 = t206 * t210;
t197 = qJD(3) * t208;
t255 = t207 * t197;
t286 = pkin(9) * t255 + t212 * t227;
t173 = pkin(4) * t291 + t208 * pkin(9);
t201 = t208 ^ 2;
t284 = -t213 ^ 2 + t201;
t278 = qJD(3) * t214;
t274 = qJD(5) * t206;
t273 = qJD(5) * t211;
t205 = sin(qJ(6));
t272 = qJD(6) * t205;
t271 = qJD(6) * t210;
t270 = -0.2e1 * pkin(2) * qJD(3);
t269 = -0.2e1 * pkin(3) * qJD(4);
t268 = pkin(4) * t205 * t206;
t267 = t213 * t299;
t266 = pkin(4) * t277;
t265 = pkin(5) * t197;
t264 = pkin(4) * t274;
t263 = pkin(4) * t273;
t262 = pkin(5) * t272;
t261 = pkin(5) * t271;
t196 = pkin(9) * t279;
t137 = pkin(4) * t309 + t196;
t195 = -pkin(4) * t212 - pkin(3);
t76 = -qJD(4) * t260 + t125 * t207 + t156 * t276 - t212 * t248;
t37 = -qJD(5) * t85 - t206 * t76 + t211 * t77;
t150 = t219 * qJD(2);
t215 = t124 * pkin(3) - t125 * pkin(10) + t150;
t148 = (pkin(2) * t209 - pkin(9) * t214) * t204 * qJD(2);
t241 = qJD(2) * t295;
t233 = t214 * t241;
t149 = -pkin(1) * t233 + pkin(8) * t248;
t65 = t146 * t197 - t147 * t279 - t208 * t148 + t213 * t149;
t60 = pkin(10) * t248 - t65;
t28 = -t56 * qJD(4) - t207 * t60 + t212 * t215;
t18 = pkin(4) * t124 - pkin(11) * t77 + t28;
t27 = -t207 * t215 - t212 * t60 - t97 * t276 + t99 * t277;
t24 = -pkin(11) * t76 - t27;
t244 = t211 * t18 - t206 * t24;
t9 = -t26 * qJD(5) + t244;
t5 = -pkin(12) * t37 + t303 + t9;
t86 = -t126 * t206 + t127 * t211;
t38 = qJD(5) * t86 + t206 * t77 + t211 * t76;
t8 = -t206 * t18 - t211 * t24 - t49 * t273 + t52 * t274;
t7 = -pkin(12) * t38 - t8;
t259 = -t205 * t7 + t210 * t5;
t257 = qJD(4) * t306;
t199 = t204 ^ 2;
t256 = t199 * t282;
t249 = t212 * t275;
t246 = t207 * t276;
t245 = t208 * t279;
t80 = (pkin(4) * t208 - pkin(11) * t289) * qJD(3) + (-t191 + (pkin(11) * t208 - t177) * t207) * qJD(4) + t286;
t88 = -pkin(11) * t309 - t101;
t242 = -t206 * t88 + t211 * t80;
t40 = -t83 * qJD(5) + t242;
t167 = t206 * t207 - t211 * t212;
t89 = -t308 * t151 - t167 * t279;
t33 = -pkin(12) * t89 + t265 + t40;
t39 = -t119 * t273 + t128 * t274 - t206 * t80 - t211 * t88;
t90 = -t274 * t291 + (t308 * t290 + t254) * t211 + t222 * t206;
t35 = -pkin(12) * t90 - t39;
t243 = -t205 * t35 + t210 * t33;
t25 = -t206 * t52 + t211 * t49;
t82 = t211 * t119 - t128 * t206;
t240 = -t208 * t146 + t147 * t213;
t129 = -t211 * t180 - t181 * t206;
t238 = t284 * qJD(3);
t237 = 0.2e1 * t245;
t236 = t212 * t257;
t235 = t212 * t245;
t234 = t209 * t256;
t98 = pkin(3) * t293 - t240;
t20 = -pkin(12) * t86 + t25 + t302;
t11 = t20 * t205 + t297;
t152 = t167 * t208;
t67 = pkin(12) * t152 - t301 + t82;
t42 = t205 * t67 + t296;
t53 = t205 * t86 + t210 * t85;
t54 = -t205 * t85 + t210 * t86;
t107 = -pkin(12) * t168 + t129;
t108 = -pkin(12) * t167 + t130;
t69 = t205 * t107 + t210 * t108;
t230 = -t126 * t212 - t127 * t207;
t105 = t210 * t151 - t152 * t205;
t106 = -t151 * t205 - t152 * t210;
t116 = t210 * t167 + t168 * t205;
t117 = -t167 * t205 + t168 * t210;
t66 = -t146 * t279 - t147 * t197 + t148 * t213 + t208 * t149;
t1 = -t20 * t271 - t205 * t5 - t210 * t7 + t22 * t272;
t61 = -pkin(3) * t248 - t66;
t229 = t207 * t61 + t98 * t276;
t228 = -t212 * t61 + t98 * t277;
t12 = -t205 * t33 - t210 * t35 - t67 * t271 + t70 * t272;
t226 = t124 * t207 + t155 * t276;
t225 = -t124 * t212 + t155 * t277;
t172 = t207 * t257;
t92 = t211 * t172 + t180 * t273 + t181 * t274 + t206 * t236;
t72 = pkin(4) * t126 + t98;
t224 = t208 * t278 + t213 * t283;
t223 = t208 * t283 - t213 * t278;
t194 = pkin(5) + t304;
t111 = -t194 * t271 - t210 * t263 + (qJD(5) + qJD(6)) * t268;
t123 = t308 * t168;
t218 = pkin(12) * t123 + t92;
t2 = -qJD(6) * t11 + t259;
t13 = -qJD(6) * t42 + t243;
t93 = -t130 * qJD(5) + t172 * t206 - t211 * t236;
t43 = pkin(4) * t76 + t61;
t217 = (-t206 * t271 + (-t205 * t211 - t292) * qJD(5)) * pkin(4);
t122 = t308 * t167;
t216 = pkin(12) * t122 + t93;
t187 = -0.2e1 * t245;
t154 = pkin(4) * t292 + t194 * t205;
t153 = t194 * t210 - t268;
t144 = pkin(5) * t167 + t195;
t142 = t166 - t267;
t120 = pkin(5) * t151 + t173;
t112 = -t194 * t272 + t217;
t109 = pkin(5) * t123 + t266;
t103 = 0.2e1 * t155 * t124;
t102 = -t143 * qJD(4) + t286;
t100 = -t124 * t213 + t155 * t197;
t71 = pkin(5) * t90 + t137;
t68 = t107 * t210 - t108 * t205;
t59 = qJD(6) * t117 - t122 * t205 + t210 * t123;
t58 = -qJD(6) * t116 - t210 * t122 - t205 * t123;
t50 = pkin(5) * t85 + t72;
t45 = qJD(6) * t106 + t205 * t89 + t210 * t90;
t44 = -qJD(6) * t105 - t205 * t90 + t210 * t89;
t41 = -t205 * t70 + t210 * t67;
t32 = -qJD(6) * t69 + t205 * t218 + t210 * t216;
t31 = -t107 * t271 + t108 * t272 - t205 * t216 + t210 * t218;
t21 = pkin(5) * t38 + t43;
t15 = qJD(6) * t54 + t205 * t37 + t210 * t38;
t14 = -qJD(6) * t53 - t205 * t38 + t210 * t37;
t10 = t20 * t210 - t205 * t22;
t3 = [0, 0, 0, 0.2e1 * t234, 0.2e1 * (-t209 ^ 2 + t214 ^ 2) * t199 * qJD(2), t233 * t307, -0.2e1 * t241 * t294, 0, -0.2e1 * t199 * pkin(1) * t283 - 0.2e1 * t150 * t295, -0.2e1 * pkin(1) * t256 + 0.2e1 * t149 * t295, 0.2e1 * t156 * t125, -0.2e1 * t124 * t156 - 0.2e1 * t125 * t155 (-t125 * t214 + t156 * t283) * t307 (t124 * t214 - t155 * t283) * t307, -0.2e1 * t234, 0.2e1 * t145 * t124 + 0.2e1 * t150 * t155 + 0.2e1 * (-t66 * t214 + t240 * t283) * t204, 0.2e1 * t145 * t125 + 0.2e1 * t150 * t156 + 0.2e1 * (-t65 * t214 - t288 * t283) * t204, 0.2e1 * t127 * t77, -0.2e1 * t126 * t77 - 0.2e1 * t127 * t76, 0.2e1 * t124 * t127 + 0.2e1 * t155 * t77, -0.2e1 * t124 * t126 - 0.2e1 * t155 * t76, t103, 0.2e1 * t124 * t55 + 0.2e1 * t126 * t61 + 0.2e1 * t155 * t28 + 0.2e1 * t76 * t98, -0.2e1 * t124 * t56 + 0.2e1 * t127 * t61 + 0.2e1 * t155 * t27 + 0.2e1 * t77 * t98, 0.2e1 * t86 * t37, -0.2e1 * t37 * t85 - 0.2e1 * t38 * t86, 0.2e1 * t124 * t86 + 0.2e1 * t155 * t37, -0.2e1 * t124 * t85 - 0.2e1 * t155 * t38, t103, 0.2e1 * t124 * t25 + 0.2e1 * t155 * t9 + 0.2e1 * t38 * t72 + 0.2e1 * t43 * t85, -0.2e1 * t124 * t26 + 0.2e1 * t155 * t8 + 0.2e1 * t37 * t72 + 0.2e1 * t43 * t86, 0.2e1 * t54 * t14, -0.2e1 * t14 * t53 - 0.2e1 * t15 * t54, 0.2e1 * t124 * t54 + 0.2e1 * t14 * t155, -0.2e1 * t124 * t53 - 0.2e1 * t15 * t155, t103, 0.2e1 * t10 * t124 + 0.2e1 * t15 * t50 + 0.2e1 * t155 * t2 + 0.2e1 * t21 * t53, 0.2e1 * t1 * t155 - 0.2e1 * t11 * t124 + 0.2e1 * t14 * t50 + 0.2e1 * t21 * t54; 0, 0, 0, 0, 0, t247, -t248, 0, -t150, t149, t125 * t208 + t156 * t279, -t124 * t208 + t125 * t213 + (-t155 * t213 - t156 * t208) * qJD(3), t223 * t204, t224 * t204, 0, -pkin(2) * t124 + t145 * t197 - t150 * t213 - t223 * t300, -pkin(2) * t125 + t145 * t279 + t150 * t208 - t224 * t300, t127 * t222 + t77 * t290, t230 * t279 + (-t298 - t212 * t76 + (t126 * t207 - t127 * t212) * qJD(4)) * t208 (t155 * t280 - t77) * t213 + (qJD(3) * t127 - t225) * t208 (-t207 * t281 + t76) * t213 + (-qJD(3) * t126 - t226) * t208, t100, t102 * t155 + t124 * t142 + (-t28 + (pkin(9) * t126 + t207 * t98) * qJD(3)) * t213 + (pkin(9) * t76 + qJD(3) * t55 + t229) * t208, t101 * t155 - t124 * t143 + (-t27 + (pkin(9) * t127 + t212 * t98) * qJD(3)) * t213 + (pkin(9) * t77 - qJD(3) * t56 - t228) * t208, -t152 * t37 + t86 * t89, -t151 * t37 + t152 * t38 - t85 * t89 - t86 * t90, -t124 * t152 + t155 * t89 + t197 * t86 - t213 * t37, -t124 * t151 - t155 * t90 - t197 * t85 + t213 * t38, t100, t124 * t82 + t137 * t85 + t151 * t43 + t155 * t40 + t173 * t38 + t197 * t25 - t213 * t9 + t72 * t90, -t124 * t83 + t137 * t86 - t152 * t43 + t155 * t39 + t173 * t37 - t197 * t26 - t213 * t8 + t72 * t89, t106 * t14 + t44 * t54, -t105 * t14 - t106 * t15 - t44 * t53 - t45 * t54, t106 * t124 - t14 * t213 + t155 * t44 + t197 * t54, -t105 * t124 + t15 * t213 - t155 * t45 - t197 * t53, t100, t10 * t197 + t105 * t21 + t120 * t15 + t124 * t41 + t13 * t155 - t2 * t213 + t45 * t50 + t53 * t71, -t1 * t213 + t106 * t21 - t11 * t197 + t12 * t155 + t120 * t14 - t124 * t42 + t44 * t50 + t54 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, -0.2e1 * t238, 0, 0, 0, t208 * t270, t213 * t270, -0.2e1 * t201 * t246 + 0.2e1 * t202 * t245, 0.2e1 * t201 * t239 - 0.4e1 * t207 * t235, 0.2e1 * t208 * t251 + 0.2e1 * t284 * t280, -0.2e1 * t207 * t238 + 0.2e1 * t208 * t249, t187, 0.2e1 * t142 * t197 - 0.2e1 * t102 * t213 + 0.2e1 * (t201 * t276 + t207 * t237) * pkin(9), -0.2e1 * t143 * t197 - 0.2e1 * t101 * t213 + 0.2e1 * (-t201 * t277 + 0.2e1 * t235) * pkin(9), -0.2e1 * t152 * t89, -0.2e1 * t151 * t89 + 0.2e1 * t152 * t90, -0.2e1 * t152 * t197 - 0.2e1 * t213 * t89, -0.2e1 * t151 * t197 + 0.2e1 * t213 * t90, t187, 0.2e1 * t137 * t151 + 0.2e1 * t173 * t90 + 0.2e1 * t197 * t82 - 0.2e1 * t213 * t40, -0.2e1 * t137 * t152 + 0.2e1 * t173 * t89 - 0.2e1 * t197 * t83 - 0.2e1 * t213 * t39, 0.2e1 * t106 * t44, -0.2e1 * t105 * t44 - 0.2e1 * t106 * t45, 0.2e1 * t106 * t197 - 0.2e1 * t213 * t44, -0.2e1 * t105 * t197 + 0.2e1 * t213 * t45, t187, 0.2e1 * t105 * t71 + 0.2e1 * t120 * t45 - 0.2e1 * t13 * t213 + 0.2e1 * t197 * t41, 0.2e1 * t106 * t71 - 0.2e1 * t12 * t213 + 0.2e1 * t120 * t44 - 0.2e1 * t197 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t124, t248, t66, t65, t127 * t276 + t298, qJD(4) * t230 - t207 * t76 + t212 * t77, t226, -t225, 0, -pkin(3) * t76 - pkin(10) * t226 + t228, -pkin(3) * t77 + pkin(10) * t225 + t229, -t122 * t86 + t168 * t37, t122 * t85 - t123 * t86 - t167 * t37 - t168 * t38, -t122 * t155 + t124 * t168, -t123 * t155 - t124 * t167, 0, t123 * t72 + t124 * t129 + t155 * t93 + t167 * t43 + t195 * t38 + t266 * t85, -t122 * t72 - t124 * t130 + t155 * t92 + t168 * t43 + t195 * t37 + t266 * t86, t117 * t14 + t54 * t58, -t116 * t14 - t117 * t15 - t53 * t58 - t54 * t59, t117 * t124 + t155 * t58, -t116 * t124 - t155 * t59, 0, t109 * t53 + t116 * t21 + t124 * t68 + t144 * t15 + t155 * t32 + t50 * t59, t109 * t54 + t117 * t21 - t124 * t69 + t14 * t144 + t155 * t31 + t50 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, -t197, 0, -t196, pkin(9) * t197, t207 * t253 - t208 * t239, -0.4e1 * t208 * t246 - t285 * t279, -t249 + t255, t221, 0 (pkin(10) * t289 + (-pkin(3) * t212 + t299) * t208) * qJD(4) + (t207 * t232 - t191) * qJD(3) (pkin(9) * t290 + t207 * t231) * qJD(4) + (t212 * t232 + t267) * qJD(3), t122 * t152 + t168 * t89, t122 * t151 + t123 * t152 - t167 * t89 - t168 * t90, t122 * t213 + t168 * t197, t123 * t213 - t167 * t197, 0, t123 * t173 + t129 * t197 + t137 * t167 + t151 * t266 + t195 * t90 - t213 * t93, -t122 * t173 - t130 * t197 + t137 * t168 - t152 * t266 + t195 * t89 - t213 * t92, t106 * t58 + t117 * t44, -t105 * t58 - t106 * t59 - t116 * t44 - t117 * t45, t117 * t197 - t213 * t58, -t116 * t197 + t213 * t59, 0, t105 * t109 + t116 * t71 + t120 * t59 + t144 * t45 + t197 * t68 - t213 * t32, t106 * t109 + t117 * t71 + t120 * t58 + t144 * t44 - t197 * t69 - t213 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t246, -0.2e1 * t239, 0, 0, 0, t207 * t269, t212 * t269, -0.2e1 * t168 * t122, 0.2e1 * t122 * t167 - 0.2e1 * t123 * t168, 0, 0, 0, 0.2e1 * t123 * t195 + 0.2e1 * t167 * t266, -0.2e1 * t122 * t195 + 0.2e1 * t168 * t266, 0.2e1 * t117 * t58, -0.2e1 * t116 * t58 - 0.2e1 * t117 * t59, 0, 0, 0, 0.2e1 * t109 * t116 + 0.2e1 * t144 * t59, 0.2e1 * t109 * t117 + 0.2e1 * t144 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t76, t124, t28, t27, 0, 0, t37, -t38, t124, t124 * t304 + (-t51 + (-t49 - t305) * t206) * qJD(5) + t244 (-t124 * t206 - t155 * t273) * pkin(4) + t8, 0, 0, t14, -t15, t124, t112 * t155 + t124 * t153 + t2, t111 * t155 - t124 * t154 + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, -t309, t197, t102, t101, 0, 0, t89, -t90, t197, t197 * t304 + (-t121 + (pkin(4) * t213 - t119) * t206) * qJD(5) + t242 (-t197 * t206 + t213 * t273) * pkin(4) + t39, 0, 0, t44, -t45, t197, -t112 * t213 + t153 * t197 + t13, -t111 * t213 - t154 * t197 + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, -t277, 0, -pkin(10) * t276, pkin(10) * t277, 0, 0, -t122, -t123, 0, t93, t92, 0, 0, t58, -t59, 0, t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t264, -0.2e1 * t263, 0, 0, 0, 0, 0, 0.2e1 * t112, 0.2e1 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t38, t124, t9, t8, 0, 0, t14, -t15, t124, t210 * t303 + (-t297 + (-t20 - t302) * t205) * qJD(6) + t259 (-t124 * t205 - t155 * t271) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t90, t197, t40, t39, 0, 0, t44, -t45, t197, t210 * t265 + (-t296 + (-t67 + t301) * t205) * qJD(6) + t243 (-t197 * t205 + t213 * t271) * pkin(5) + t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, -t123, 0, t93, t92, 0, 0, t58, -t59, 0, t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, -t263, 0, 0, 0, 0, 0 (-pkin(5) - t194) * t272 + t217, t111 - t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t262, -0.2e1 * t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, -t15, t124, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t45, t197, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, -t59, 0, t32, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, -t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
