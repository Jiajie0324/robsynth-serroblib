% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 12:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 12:38:07
% EndTime: 2019-05-08 12:40:35
% DurationCPUTime: 148.38s
% Computational Cost: add. (1966377->1213), mult. (4193744->1833), div. (0->0), fcn. (3447940->14), ass. (0->858)
t2144 = sin(qJ(6));
t2147 = sin(qJ(3));
t2153 = cos(qJ(3));
t2143 = cos(pkin(6));
t2340 = qJD(1) * t2143;
t2273 = qJD(2) + t2340;
t2142 = sin(pkin(6));
t2148 = sin(qJ(2));
t2301 = t2142 * t2148;
t2288 = qJD(1) * t2301;
t2106 = t2147 * t2273 + t2153 * t2288;
t2146 = sin(qJ(4));
t2152 = cos(qJ(4));
t2154 = cos(qJ(2));
t2300 = t2142 * t2154;
t2134 = qJD(1) * t2300;
t2294 = t2134 - qJD(3);
t2079 = t2106 * t2146 + t2152 * t2294;
t2080 = t2152 * t2106 - t2146 * t2294;
t2145 = sin(qJ(5));
t2151 = cos(qJ(5));
t2034 = t2151 * t2079 + t2080 * t2145;
t2035 = -t2079 * t2145 + t2080 * t2151;
t2150 = cos(qJ(6));
t1972 = t2150 * t2034 + t2035 * t2144;
t1974 = -t2034 * t2144 + t2035 * t2150;
t1878 = t1974 * t1972;
t2337 = qJD(2) * qJD(1);
t2276 = t2154 * t2337;
t2291 = t2148 * qJDD(1);
t2112 = (t2276 + t2291) * t2142;
t2135 = qJDD(1) * t2143 + qJDD(2);
t2268 = -t2147 * t2112 + t2153 * t2135;
t2201 = t2106 * qJD(3) - t2268;
t2059 = qJDD(4) + t2201;
t2058 = qJDD(5) + t2059;
t2057 = qJDD(6) + t2058;
t2357 = -t1878 + t2057;
t2368 = t2144 * t2357;
t1978 = t2035 * t2034;
t2355 = -t1978 + t2058;
t2367 = t2145 * t2355;
t2043 = t2080 * t2079;
t2353 = -t2043 + t2059;
t2366 = t2146 * t2353;
t2365 = t2150 * t2357;
t2364 = t2151 * t2355;
t2363 = t2152 * t2353;
t2091 = t2294 * t2106;
t2362 = t2201 - t2091;
t2104 = t2147 * t2288 - t2153 * t2273;
t2090 = t2294 * t2104;
t2258 = t2153 * t2090;
t2259 = t2147 * t2091;
t2047 = t2258 - t2259;
t2292 = qJDD(1) * t2154;
t2198 = t2148 * t2337 - t2292;
t2179 = t2198 * t2142;
t2172 = qJDD(3) + t2179;
t2361 = t2148 * t2047 - t2154 * t2172;
t2266 = t2273 ^ 2;
t2290 = t2294 ^ 2;
t2308 = t2106 * t2104;
t2162 = t2172 - t2308;
t2360 = t2147 * t2162;
t2359 = t2153 * t2162;
t2207 = -t2153 * t2112 - t2147 * t2135;
t2061 = -t2104 * qJD(3) - t2207;
t2160 = -t2152 * t2061 - t2146 * t2172;
t1993 = -t2079 * qJD(4) - t2160;
t2159 = -t2146 * t2061 + t2152 * t2172;
t2158 = t2080 * qJD(4) - t2159;
t1885 = -t2034 * qJD(5) + t2151 * t1993 - t2145 * t2158;
t2270 = t2145 * t1993 + t2151 * t2158;
t2200 = qJD(5) * t2035 + t2270;
t1782 = -t1972 * qJD(6) + t2150 * t1885 - t2144 * t2200;
t2101 = qJD(4) + t2104;
t2098 = qJD(5) + t2101;
t2095 = qJD(6) + t2098;
t1947 = t2095 * t1972;
t2356 = -t1947 + t1782;
t2001 = t2098 * t2034;
t2354 = -t2001 + t1885;
t1847 = t2001 + t1885;
t2055 = t2101 * t2079;
t1964 = t2055 + t1993;
t2027 = t2061 + t2090;
t2271 = t2144 * t1885 + t2150 * t2200;
t1753 = (qJD(6) - t2095) * t1974 + t2271;
t1844 = (qJD(5) - t2098) * t2035 + t2270;
t2352 = qJD(1) ^ 2;
t1970 = t1972 ^ 2;
t1971 = t1974 ^ 2;
t2351 = t2034 ^ 2;
t2033 = t2035 ^ 2;
t2350 = t2079 ^ 2;
t2078 = t2080 ^ 2;
t2094 = t2095 ^ 2;
t2096 = t2098 ^ 2;
t2099 = t2101 ^ 2;
t2102 = t2104 ^ 2;
t2103 = t2106 ^ 2;
t2139 = t2142 ^ 2;
t2349 = pkin(2) * t2148;
t2348 = pkin(2) * t2154;
t2347 = pkin(3) * t2147;
t2149 = sin(qJ(1));
t2155 = cos(qJ(1));
t2131 = g(1) * t2155 + t2149 * g(2);
t2344 = pkin(8) * t2142;
t2108 = -pkin(1) * t2352 + qJDD(1) * t2344 - t2131;
t2264 = -pkin(9) * t2148 - t2348;
t2341 = qJD(1) * t2142;
t2111 = t2264 * t2341;
t2130 = t2149 * g(1) - t2155 * g(2);
t2174 = qJDD(1) * pkin(1) + t2344 * t2352 + t2130;
t2163 = t2143 * t2174;
t2161 = -g(3) * t2301 + t2148 * t2163;
t2016 = t2135 * pkin(9) - t2266 * pkin(2) + (t2111 * t2341 + t2108) * t2154 + t2161;
t2343 = pkin(9) * t2154;
t2263 = -t2343 + t2349;
t2342 = t2143 * g(3);
t2157 = -t2112 * pkin(9) - t2342 + ((-pkin(1) - t2348) * qJDD(1) + ((t2143 * t2263 - t2344) * qJD(1) + (-t2343 + 0.2e1 * t2349) * qJD(2)) * qJD(1) - t2130) * t2142;
t1950 = t2153 * t2016 + t2147 * t2157;
t2070 = pkin(3) * t2104 - pkin(10) * t2106;
t1901 = -pkin(3) * t2290 + pkin(10) * t2172 - t2104 * t2070 + t1950;
t2269 = t2148 * t2108 - t2154 * t2163;
t2339 = qJD(1) * t2148;
t2015 = -t2135 * pkin(2) - t2266 * pkin(9) + (g(3) * t2154 + t2111 * t2339) * t2142 + t2269;
t1906 = pkin(3) * t2362 - t2027 * pkin(10) + t2015;
t1817 = t2146 * t1901 - t2152 * t1906;
t1773 = pkin(4) * t2353 - pkin(11) * t1964 - t1817;
t1818 = t2152 * t1901 + t2146 * t1906;
t2049 = pkin(4) * t2101 - pkin(11) * t2080;
t1785 = -pkin(4) * t2350 - pkin(11) * t2158 - t2101 * t2049 + t1818;
t1695 = -t2151 * t1773 + t2145 * t1785;
t1696 = t2145 * t1773 + t2151 * t1785;
t1624 = -t1695 * t2151 + t1696 * t2145;
t2346 = pkin(4) * t1624;
t1775 = -t1844 * t2145 - t1847 * t2151;
t2345 = pkin(4) * t1775;
t2338 = qJD(1) * t2154;
t1660 = pkin(5) * t2355 - pkin(12) * t1847 - t1695;
t1998 = pkin(5) * t2098 - pkin(12) * t2035;
t1661 = -pkin(5) * t2351 - pkin(12) * t2200 - t2098 * t1998 + t1696;
t1591 = -t2150 * t1660 + t1661 * t2144;
t1592 = t1660 * t2144 + t1661 * t2150;
t1546 = -t1591 * t2150 + t1592 * t2144;
t2336 = t1546 * t2145;
t2335 = t1546 * t2151;
t2334 = t1624 * t2146;
t2333 = t1624 * t2152;
t1949 = t2016 * t2147 - t2153 * t2157;
t1900 = -t2172 * pkin(3) - t2290 * pkin(10) + t2070 * t2106 + t1949;
t1819 = t2158 * pkin(4) - t2350 * pkin(11) + t2049 * t2080 + t1900;
t1731 = pkin(5) * t2200 - pkin(12) * t2351 + t1998 * t2035 + t1819;
t2332 = t1731 * t2144;
t2331 = t1731 * t2150;
t2330 = t1819 * t2145;
t2329 = t1819 * t2151;
t1858 = t1878 + t2057;
t2328 = t1858 * t2144;
t2327 = t1858 * t2150;
t2326 = t1900 * t2146;
t2325 = t1900 * t2152;
t1928 = t1978 + t2058;
t2324 = t1928 * t2145;
t2323 = t1928 * t2151;
t1984 = t2043 + t2059;
t2322 = t1984 * t2146;
t2321 = t1984 * t2152;
t2320 = t2015 * t2147;
t2319 = t2015 * t2153;
t2052 = -t2172 - t2308;
t2318 = t2052 * t2147;
t2317 = t2052 * t2153;
t2316 = t2095 * t1974;
t2315 = t2095 * t2144;
t2314 = t2095 * t2150;
t2313 = t2098 * t2035;
t2312 = t2098 * t2145;
t2311 = t2098 * t2151;
t2310 = t2101 * t2146;
t2309 = t2101 * t2152;
t2277 = t2148 * t2154 * t2352;
t2129 = t2139 * t2277;
t2109 = t2129 + t2135;
t2307 = t2109 * t2148;
t2306 = t2109 * t2154;
t2110 = -t2129 + t2135;
t2305 = t2110 * t2148;
t2304 = t2110 * t2154;
t2303 = t2139 * t2352;
t2302 = t2142 * t2135;
t2093 = t2142 * t2174 + t2342;
t2298 = t2148 * t2093;
t2297 = t2154 * t2093;
t2140 = t2148 ^ 2;
t2141 = t2154 ^ 2;
t2293 = t2140 + t2141;
t2289 = -pkin(3) * t2153 - pkin(2);
t2287 = t2147 * t1878;
t2286 = t2153 * t1878;
t2285 = t2147 * t1978;
t2284 = t2153 * t1978;
t2283 = t2147 * t2043;
t2282 = t2153 * t2043;
t2281 = t2148 * t2308;
t2280 = t2154 * t2308;
t2279 = t2140 * t2303;
t2278 = t2141 * t2303;
t1547 = t1591 * t2144 + t2150 * t1592;
t1509 = t1547 * t2145 + t2335;
t1545 = pkin(5) * t1546;
t2275 = pkin(4) * t1509 + t1545;
t1756 = t1947 + t1782;
t1672 = -t1753 * t2144 - t1756 * t2150;
t1674 = -t1753 * t2150 + t1756 * t2144;
t1607 = t1672 * t2151 + t1674 * t2145;
t1670 = pkin(5) * t1672;
t2274 = pkin(4) * t1607 + t1670;
t2272 = 0.2e1 * qJD(2) + t2340;
t1625 = t1695 * t2145 + t2151 * t1696;
t1733 = t1817 * t2146 + t2152 * t1818;
t1863 = t1949 * t2147 + t2153 * t1950;
t2267 = -t2130 * t2149 - t2155 * t2131;
t1986 = -t2033 - t2096;
t1873 = t1986 * t2151 - t2324;
t2265 = pkin(4) * t1873 - t1696;
t2262 = -pkin(3) * t1900 + pkin(10) * t1733;
t2128 = qJDD(1) * t2155 - t2149 * t2352;
t2261 = -pkin(7) * t2128 - g(3) * t2149;
t2260 = t2147 * t2090;
t2257 = t2153 * t2091;
t1868 = -t2094 - t1970;
t1791 = t1868 * t2144 + t2365;
t2256 = pkin(5) * t1791 - t1591;
t2100 = -t2279 - t2266;
t2069 = -t2100 * t2148 - t2304;
t2255 = pkin(8) * t2069 - t2298;
t2116 = -t2266 - t2278;
t2076 = t2116 * t2154 - t2307;
t2254 = pkin(8) * t2076 + t2297;
t2253 = qJD(1) * t2273;
t2252 = t2139 * t2148 * t2276;
t1510 = t1547 * t2151 - t2336;
t1487 = -t1509 * t2146 + t1510 * t2152;
t1484 = t1487 * t2153 + t1731 * t2147;
t1486 = t1509 * t2152 + t1510 * t2146;
t2251 = t1484 * t2148 - t1486 * t2154;
t1609 = -t1672 * t2145 + t1674 * t2151;
t1559 = -t1607 * t2146 + t1609 * t2152;
t1824 = -t1970 - t1971;
t1550 = t1559 * t2153 + t1824 * t2147;
t1557 = t1607 * t2152 + t1609 * t2146;
t2250 = t1550 * t2148 - t1557 * t2154;
t1752 = (qJD(6) + t2095) * t1974 + t2271;
t1671 = -t1752 * t2144 + t2150 * t2356;
t1673 = -t1752 * t2150 - t2144 * t2356;
t1606 = t1671 * t2151 + t1673 * t2145;
t1608 = -t1671 * t2145 + t1673 * t2151;
t1558 = -t1606 * t2146 + t1608 * t2152;
t1877 = t1971 - t1970;
t1554 = t1558 * t2153 + t1877 * t2147;
t1556 = t1606 * t2152 + t1608 * t2146;
t2249 = t1554 * t2148 - t1556 * t2154;
t1570 = t1625 * t2152 - t2334;
t1564 = t1570 * t2153 + t1819 * t2147;
t1569 = t1625 * t2146 + t2333;
t2248 = t1564 * t2148 - t1569 * t2154;
t1781 = -qJD(6) * t1974 - t2271;
t1748 = t1781 * t2150 + t1972 * t2315;
t1749 = -t1781 * t2144 + t1972 * t2314;
t1666 = t1748 * t2151 + t1749 * t2145;
t1668 = -t1748 * t2145 + t1749 * t2151;
t1602 = -t1666 * t2146 + t1668 * t2152;
t1597 = t1602 * t2153 - t2287;
t1600 = t1666 * t2152 + t1668 * t2146;
t2247 = t1597 * t2148 - t1600 * t2154;
t1750 = t1782 * t2144 + t1974 * t2314;
t1751 = t1782 * t2150 - t1974 * t2315;
t1667 = t1750 * t2151 + t1751 * t2145;
t1669 = -t1750 * t2145 + t1751 * t2151;
t1603 = -t1667 * t2146 + t1669 * t2152;
t1598 = t1603 * t2153 + t2287;
t1601 = t1667 * t2152 + t1669 * t2146;
t2246 = t1598 * t2148 - t1601 * t2154;
t1792 = t1868 * t2150 - t2368;
t1702 = t1791 * t2151 + t1792 * t2145;
t1703 = -t1791 * t2145 + t1792 * t2151;
t1629 = -t1702 * t2146 + t1703 * t2152;
t1605 = t1629 * t2153 + t1752 * t2147;
t1628 = t1702 * t2152 + t1703 * t2146;
t2245 = t1605 * t2148 - t1628 * t2154;
t1924 = -t1971 - t2094;
t1807 = t1924 * t2150 - t2328;
t1808 = -t1924 * t2144 - t2327;
t1721 = t1807 * t2151 + t1808 * t2145;
t1722 = -t1807 * t2145 + t1808 * t2151;
t1653 = -t1721 * t2146 + t1722 * t2152;
t1617 = t1653 * t2153 + t2147 * t2356;
t1652 = t1721 * t2152 + t1722 * t2146;
t2244 = t1617 * t2148 - t1652 * t2154;
t1946 = -t1971 + t2094;
t1809 = t1946 * t2150 + t2368;
t1811 = -t1946 * t2144 + t2365;
t1724 = t1809 * t2151 + t1811 * t2145;
t1726 = -t1809 * t2145 + t1811 * t2151;
t1656 = -t1724 * t2146 + t1726 * t2152;
t1620 = t1656 * t2153 + t1756 * t2147;
t1654 = t1724 * t2152 + t1726 * t2146;
t2243 = t1620 * t2148 - t1654 * t2154;
t1945 = t1970 - t2094;
t1810 = t1945 * t2144 + t2327;
t1812 = t1945 * t2150 - t2328;
t1725 = t1810 * t2151 + t1812 * t2145;
t1727 = -t1810 * t2145 + t1812 * t2151;
t1657 = -t1725 * t2146 + t1727 * t2152;
t1621 = t1657 * t2153 - t1753 * t2147;
t1655 = t1725 * t2152 + t1727 * t2146;
t2242 = t1621 * t2148 - t1655 * t2154;
t1777 = -t1844 * t2151 + t1847 * t2145;
t1692 = -t1775 * t2146 + t1777 * t2152;
t1914 = -t2033 - t2351;
t1676 = t1692 * t2153 + t1914 * t2147;
t1690 = t1775 * t2152 + t1777 * t2146;
t2241 = t1676 * t2148 - t1690 * t2154;
t1843 = (qJD(5) + t2098) * t2035 + t2270;
t1774 = -t1843 * t2145 + t2151 * t2354;
t1776 = -t1843 * t2151 - t2145 * t2354;
t1691 = -t1774 * t2146 + t1776 * t2152;
t1977 = t2033 - t2351;
t1683 = t1691 * t2153 + t1977 * t2147;
t1689 = t1774 * t2152 + t1776 * t2146;
t2240 = t1683 * t2148 - t1689 * t2154;
t1860 = (-t1972 * t2144 - t1974 * t2150) * t2095;
t1861 = (-t1972 * t2150 + t1974 * t2144) * t2095;
t1787 = t1860 * t2151 + t1861 * t2145;
t1788 = -t1860 * t2145 + t1861 * t2151;
t1701 = -t1787 * t2146 + t1788 * t2152;
t1698 = t1701 * t2153 + t2057 * t2147;
t1700 = t1787 * t2152 + t1788 * t2146;
t2239 = t1698 * t2148 - t1700 * t2154;
t1708 = t1733 * t2153 + t1900 * t2147;
t1732 = -t1817 * t2152 + t1818 * t2146;
t2238 = t1708 * t2148 - t1732 * t2154;
t1953 = -t2096 - t2351;
t1851 = t1953 * t2145 + t2364;
t1852 = t1953 * t2151 - t2367;
t1780 = -t1851 * t2146 + t1852 * t2152;
t1718 = t1780 * t2153 + t1843 * t2147;
t1779 = t1851 * t2152 + t1852 * t2146;
t2237 = t1718 * t2148 - t1779 * t2154;
t1874 = -t1986 * t2145 - t2323;
t1798 = -t1873 * t2146 + t1874 * t2152;
t1730 = t1798 * t2153 + t2147 * t2354;
t1797 = t1873 * t2152 + t1874 * t2146;
t2236 = t1730 * t2148 - t1797 * t2154;
t2000 = -t2033 + t2096;
t1879 = t2000 * t2151 + t2367;
t1881 = -t2000 * t2145 + t2364;
t1801 = -t1879 * t2146 + t1881 * t2152;
t1737 = t1801 * t2153 + t1847 * t2147;
t1799 = t1879 * t2152 + t1881 * t2146;
t2235 = t1737 * t2148 - t1799 * t2154;
t1999 = -t2096 + t2351;
t1880 = t1999 * t2145 + t2323;
t1882 = t1999 * t2151 - t2324;
t1802 = -t1880 * t2146 + t1882 * t2152;
t1738 = t1802 * t2153 - t1844 * t2147;
t1800 = t1880 * t2152 + t1882 * t2146;
t2234 = t1738 * t2148 - t1800 * t2154;
t1837 = t2034 * t2312 - t2151 * t2200;
t1838 = t2034 * t2311 + t2145 * t2200;
t1769 = -t1837 * t2146 + t1838 * t2152;
t1744 = t1769 * t2153 - t2285;
t1767 = t1837 * t2152 + t1838 * t2146;
t2233 = t1744 * t2148 - t1767 * t2154;
t1839 = t1885 * t2145 + t2035 * t2311;
t1840 = t1885 * t2151 - t2035 * t2312;
t1770 = -t1839 * t2146 + t1840 * t2152;
t1745 = t1770 * t2153 + t2285;
t1768 = t1839 * t2152 + t1840 * t2146;
t2232 = t1745 * t2148 - t1768 * t2154;
t1931 = (-t2034 * t2145 - t2035 * t2151) * t2098;
t1932 = (-t2034 * t2151 + t2035 * t2145) * t2098;
t1836 = -t1931 * t2146 + t1932 * t2152;
t1826 = t1836 * t2153 + t2058 * t2147;
t1835 = t1931 * t2152 + t1932 * t2146;
t2231 = t1826 * t2148 - t1835 * t2154;
t1962 = (-qJD(4) + t2101) * t2080 + t2159;
t1872 = t1962 * t2152 + t1964 * t2146;
t1994 = t2078 + t2350;
t1830 = t1872 * t2153 - t1994 * t2147;
t1870 = t1962 * t2146 - t1964 * t2152;
t2230 = t1830 * t2148 - t1870 * t2154;
t2056 = t2101 * t2080;
t1961 = -t2056 - t2158;
t1963 = -t2055 + t1993;
t1871 = t1961 * t2152 - t1963 * t2146;
t2042 = t2078 - t2350;
t1834 = t1871 * t2153 + t2042 * t2147;
t1869 = t1961 * t2146 + t1963 * t2152;
t2229 = t1834 * t2148 - t1869 * t2154;
t2007 = -t2099 - t2350;
t1920 = t2007 * t2152 - t2366;
t1850 = t1920 * t2153 - t1961 * t2147;
t1919 = t2007 * t2146 + t2363;
t2228 = t1850 * t2148 - t1919 * t2154;
t2031 = -t2078 - t2099;
t1926 = -t2031 * t2146 - t2321;
t1965 = (qJD(4) + t2101) * t2079 + t2160;
t1856 = t1926 * t2153 - t1965 * t2147;
t1925 = t2031 * t2152 - t2322;
t2227 = t1856 * t2148 - t1925 * t2154;
t2226 = t1863 * t2148 - t2015 * t2154;
t2051 = -t2078 + t2099;
t1942 = -t2051 * t2146 + t2363;
t1866 = t1942 * t2153 + t1964 * t2147;
t1940 = t2051 * t2152 + t2366;
t2225 = t1866 * t2148 - t1940 * t2154;
t2050 = -t2099 + t2350;
t1943 = t2050 * t2152 - t2322;
t1960 = -t2056 + t2158;
t1867 = t1943 * t2153 - t1960 * t2147;
t1941 = t2050 * t2146 + t2321;
t2224 = t1867 * t2148 - t1941 * t2154;
t1957 = t2079 * t2309 + t2146 * t2158;
t1909 = t1957 * t2153 - t2283;
t1956 = -t2079 * t2310 + t2152 * t2158;
t2223 = t1909 * t2148 + t1956 * t2154;
t1959 = t1993 * t2152 - t2080 * t2310;
t1910 = t1959 * t2153 + t2283;
t1958 = t1993 * t2146 + t2080 * t2309;
t2222 = t1910 * t2148 - t1958 * t2154;
t1862 = -t1949 * t2153 + t1950 * t2147;
t1988 = (-t2079 * t2152 + t2080 * t2146) * t2101;
t1955 = t1988 * t2153 + t2059 * t2147;
t1987 = (-t2079 * t2146 - t2080 * t2152) * t2101;
t2221 = t1955 * t2148 - t1987 * t2154;
t1968 = -t2027 * t2147 - t2153 * t2362;
t2071 = t2103 - t2102;
t2220 = t1968 * t2148 - t2071 * t2154;
t2026 = -t2106 * t2134 + t2268;
t2028 = t2061 - t2090;
t1969 = t2026 * t2153 + t2028 * t2147;
t2048 = t2102 + t2103;
t2219 = t1969 * t2148 + t2048 * t2154;
t2066 = -t2290 - t2102;
t1991 = t2066 * t2153 - t2360;
t2218 = t1991 * t2148 - t2154 * t2362;
t2072 = -t2103 - t2290;
t1997 = -t2072 * t2147 + t2317;
t2029 = (0.2e1 * qJD(3) - t2134) * t2104 + t2207;
t2217 = t1997 * t2148 + t2029 * t2154;
t2084 = t2290 - t2103;
t2005 = -t2084 * t2147 + t2359;
t2216 = t2005 * t2148 - t2028 * t2154;
t2083 = t2102 - t2290;
t2006 = t2083 * t2153 + t2318;
t2024 = t2091 + t2201;
t2215 = t2006 * t2148 + t2024 * t2154;
t2067 = g(3) * t2300 + t2269;
t2068 = t2154 * t2108 + t2161;
t2214 = -t2154 * t2067 + t2148 * t2068;
t1995 = t2067 * t2148 + t2068 * t2154;
t2204 = t2142 * t2253;
t2120 = t2154 * t2204;
t2086 = t2120 + t2112;
t2119 = t2148 * t2204;
t2089 = -t2119 - t2179;
t2213 = t2086 * t2154 + t2089 * t2148;
t2087 = -t2120 + t2112;
t2088 = t2119 - t2179;
t2212 = -t2087 * t2154 + t2088 * t2148;
t2211 = t2100 * t2154 - t2305;
t2114 = t2266 - t2279;
t2210 = t2114 * t2154 + t2307;
t2209 = t2116 * t2148 + t2306;
t2115 = -t2266 + t2278;
t2208 = t2115 * t2148 + t2304;
t2206 = t2130 * t2155 - t2149 * t2131;
t2205 = pkin(4) * t1851 - t1695;
t2019 = t2147 * t2201 - t2258;
t2203 = t2019 * t2148 + t2280;
t2021 = t2153 * t2061 + t2259;
t2202 = t2021 * t2148 - t2280;
t2199 = pkin(5) * t1807 - t1592;
t2197 = pkin(4) * t1702 + t2256;
t2196 = pkin(3) * t1961 + pkin(10) * t1920 - t2325;
t2195 = pkin(3) * t1965 + pkin(10) * t1926 + t2326;
t1534 = -pkin(5) * t1731 + pkin(12) * t1547;
t1481 = -pkin(4) * t1731 + pkin(11) * t1510 - pkin(12) * t2336 + t1534 * t2151;
t1485 = -pkin(11) * t1509 - pkin(12) * t2335 - t1534 * t2145;
t1462 = -pkin(10) * t1486 - t1481 * t2146 + t1485 * t2152;
t1476 = -pkin(3) * t1486 - t2275;
t1483 = t1487 * t2147 - t1731 * t2153;
t1457 = -pkin(9) * t1483 + t1462 * t2153 - t1476 * t2147;
t2171 = -pkin(3) * t1731 + pkin(10) * t1487 + t1481 * t2152 + t1485 * t2146;
t1459 = -pkin(2) * t1483 - t2171;
t1473 = t1484 * t2154 + t1486 * t2148;
t2194 = pkin(8) * t1473 + t1457 * t2148 + t1459 * t2154;
t1529 = -pkin(5) * t1824 + pkin(12) * t1674 + t1547;
t1532 = -pkin(12) * t1672 - t1546;
t1493 = -pkin(4) * t1824 + pkin(11) * t1609 + t1529 * t2151 + t1532 * t2145;
t1494 = -pkin(11) * t1607 - t1529 * t2145 + t1532 * t2151;
t1477 = -pkin(10) * t1557 - t1493 * t2146 + t1494 * t2152;
t1521 = -pkin(3) * t1557 - t2274;
t1549 = t1559 * t2147 - t1824 * t2153;
t1471 = -pkin(9) * t1549 + t1477 * t2153 - t1521 * t2147;
t2170 = -pkin(3) * t1824 + pkin(10) * t1559 + t1493 * t2152 + t1494 * t2146;
t1474 = -pkin(2) * t1549 - t2170;
t1514 = t1550 * t2154 + t1557 * t2148;
t2193 = pkin(8) * t1514 + t1471 * t2148 + t1474 * t2154;
t1612 = -pkin(4) * t1819 + pkin(11) * t1625;
t1523 = -pkin(10) * t1569 - pkin(11) * t2333 - t1612 * t2146;
t1535 = -pkin(3) * t1569 - t2346;
t1563 = t1570 * t2147 - t1819 * t2153;
t1489 = -pkin(9) * t1563 + t1523 * t2153 - t1535 * t2147;
t2164 = -pkin(3) * t1819 + pkin(10) * t1570 - pkin(11) * t2334 + t1612 * t2152;
t1504 = -pkin(2) * t1563 - t2164;
t1522 = t1564 * t2154 + t1569 * t2148;
t2192 = pkin(8) * t1522 + t1489 * t2148 + t1504 * t2154;
t1637 = -pkin(5) * t1752 + pkin(12) * t1792 - t2331;
t1681 = -pkin(12) * t1791 + t2332;
t1561 = -pkin(4) * t1752 + pkin(11) * t1703 + t1637 * t2151 + t1681 * t2145;
t1575 = -pkin(11) * t1702 - t1637 * t2145 + t1681 * t2151;
t1515 = -pkin(10) * t1628 - t1561 * t2146 + t1575 * t2152;
t1536 = -pkin(3) * t1628 - t2197;
t1604 = t1629 * t2147 - t1752 * t2153;
t1490 = -pkin(9) * t1604 + t1515 * t2153 - t1536 * t2147;
t2169 = -pkin(3) * t1752 + pkin(10) * t1629 + t1561 * t2152 + t1575 * t2146;
t1503 = -pkin(2) * t1604 - t2169;
t1565 = t1605 * t2154 + t1628 * t2148;
t2191 = pkin(8) * t1565 + t1490 * t2148 + t1503 * t2154;
t1644 = -pkin(5) * t2356 + pkin(12) * t1808 + t2332;
t1687 = -pkin(12) * t1807 + t2331;
t1568 = -pkin(4) * t2356 + pkin(11) * t1722 + t1644 * t2151 + t1687 * t2145;
t1579 = -pkin(11) * t1721 - t1644 * t2145 + t1687 * t2151;
t1518 = -pkin(10) * t1652 - t1568 * t2146 + t1579 * t2152;
t2176 = pkin(4) * t1721 + t2199;
t1548 = -pkin(3) * t1652 - t2176;
t1616 = t1653 * t2147 - t2153 * t2356;
t1492 = -pkin(9) * t1616 + t1518 * t2153 - t1548 * t2147;
t2168 = -pkin(3) * t2356 + pkin(10) * t1653 + t1568 * t2152 + t1579 * t2146;
t1507 = -pkin(2) * t1616 - t2168;
t1576 = t1617 * t2154 + t1652 * t2148;
t2190 = pkin(8) * t1576 + t1492 * t2148 + t1507 * t2154;
t1594 = -pkin(4) * t1914 + pkin(11) * t1777 + t1625;
t1599 = -pkin(11) * t1775 - t1624;
t1533 = -pkin(10) * t1690 - t1594 * t2146 + t1599 * t2152;
t1649 = -pkin(3) * t1690 - t2345;
t1675 = t1692 * t2147 - t1914 * t2153;
t1519 = -pkin(9) * t1675 + t1533 * t2153 - t1649 * t2147;
t2167 = -pkin(3) * t1914 + pkin(10) * t1692 + t1594 * t2152 + t1599 * t2146;
t1528 = -pkin(2) * t1675 - t2167;
t1613 = t1676 * t2154 + t1690 * t2148;
t2189 = pkin(8) * t1613 + t1519 * t2148 + t1528 * t2154;
t1711 = -pkin(4) * t1843 + pkin(11) * t1852 - t2329;
t1762 = -pkin(11) * t1851 + t2330;
t1627 = -pkin(10) * t1779 - t1711 * t2146 + t1762 * t2152;
t1638 = -pkin(3) * t1779 - t2205;
t1717 = t1780 * t2147 - t1843 * t2153;
t1562 = -pkin(9) * t1717 + t1627 * t2153 - t1638 * t2147;
t2166 = -pkin(3) * t1843 + pkin(10) * t1780 + t1711 * t2152 + t1762 * t2146;
t1588 = -pkin(2) * t1717 - t2166;
t1662 = t1718 * t2154 + t1779 * t2148;
t2188 = pkin(8) * t1662 + t1562 * t2148 + t1588 * t2154;
t1716 = -pkin(4) * t2354 + pkin(11) * t1874 + t2330;
t1764 = -pkin(11) * t1873 + t2329;
t1636 = -pkin(10) * t1797 - t1716 * t2146 + t1764 * t2152;
t1645 = -pkin(3) * t1797 - t2265;
t1729 = t1798 * t2147 - t2153 * t2354;
t1567 = -pkin(9) * t1729 + t1636 * t2153 - t1645 * t2147;
t2165 = -pkin(3) * t2354 + pkin(10) * t1798 + t1716 * t2152 + t1764 * t2146;
t1593 = -pkin(2) * t1729 - t2165;
t1684 = t1730 * t2154 + t1797 * t2148;
t2187 = pkin(8) * t1684 + t1567 * t2148 + t1593 * t2154;
t1707 = t1733 * t2147 - t1900 * t2153;
t1614 = -pkin(9) * t1707 + (-pkin(10) * t2153 + t2347) * t1732;
t1643 = -pkin(2) * t1707 - t2262;
t1651 = t1708 * t2154 + t1732 * t2148;
t2186 = pkin(8) * t1651 + t1614 * t2148 + t1643 * t2154;
t1704 = -pkin(10) * t1870 - t1732;
t1829 = t1872 * t2147 + t1994 * t2153;
t1658 = -pkin(9) * t1829 + t1704 * t2153 + t1870 * t2347;
t2177 = pkin(3) * t1994 + pkin(10) * t1872 + t1733;
t1663 = -pkin(2) * t1829 - t2177;
t1778 = t1830 * t2154 + t1870 * t2148;
t2185 = pkin(8) * t1778 + t1658 * t2148 + t1663 * t2154;
t1786 = -pkin(3) * t1919 + t1817;
t1820 = -pkin(10) * t1919 + t2326;
t1849 = t1920 * t2147 + t1961 * t2153;
t1688 = -pkin(9) * t1849 - t1786 * t2147 + t1820 * t2153;
t1734 = -pkin(2) * t1849 - t2196;
t1803 = t1850 * t2154 + t1919 * t2148;
t2184 = pkin(8) * t1803 + t1688 * t2148 + t1734 * t2154;
t1789 = -pkin(3) * t1925 + t1818;
t1823 = -pkin(10) * t1925 + t2325;
t1855 = t1926 * t2147 + t1965 * t2153;
t1693 = -pkin(9) * t1855 - t1789 * t2147 + t1823 * t2153;
t1739 = -pkin(2) * t1855 - t2195;
t1805 = t1856 * t2154 + t1925 * t2148;
t2183 = pkin(8) * t1805 + t1693 * t2148 + t1739 * t2154;
t1990 = t2066 * t2147 + t2359;
t1889 = -pkin(2) * t1990 + t1949;
t1930 = -pkin(9) * t1990 + t2320;
t1936 = t1991 * t2154 + t2148 * t2362;
t2182 = pkin(8) * t1936 + t1889 * t2154 + t1930 * t2148;
t1996 = t2072 * t2153 + t2318;
t1892 = -pkin(2) * t1996 + t1950;
t1937 = -pkin(9) * t1996 + t2319;
t1938 = t1997 * t2154 - t2029 * t2148;
t2181 = pkin(8) * t1938 + t1892 * t2154 + t1937 * t2148;
t2044 = t2087 * t2148 + t2088 * t2154;
t2180 = pkin(8) * t2044 + t1995;
t1967 = t2026 * t2147 - t2028 * t2153;
t1815 = -pkin(9) * t1967 - t1862;
t1913 = t1969 * t2154 - t2048 * t2148;
t2178 = pkin(8) * t1913 + t1815 * t2148 - t1967 * t2348;
t1827 = t1863 * t2154 + t2015 * t2148;
t2175 = pkin(8) * t1827 + t1862 * t2264;
t2138 = t2142 * t2139;
t2127 = t2149 * qJDD(1) + t2155 * t2352;
t2124 = t2143 * t2135;
t2118 = t2293 * t2303;
t2117 = (t2140 - t2141) * t2303;
t2113 = -pkin(7) * t2127 + g(3) * t2155;
t2092 = t2273 * t2293 * t2341;
t2085 = (t2272 * t2338 + t2291) * t2142;
t2082 = t2154 * t2112 - t2140 * t2204;
t2081 = (-t2141 * t2253 + t2148 * t2198) * t2142;
t2075 = t2115 * t2154 - t2305;
t2074 = -t2114 * t2148 + t2306;
t2065 = (t2143 * t2112 + (qJD(2) * t2143 * t2142 + (t2142 * t2143 ^ 2 + t2138) * qJD(1)) * t2338) * t2148;
t2064 = t2112 * t2301 + t2252;
t2063 = -t2139 * t2154 * t2198 - t2252;
t2062 = -t2138 * t2277 + (-t2272 * t2339 + t2292) * t2143 * t2300;
t2046 = t2260 + t2257;
t2045 = -t2086 * t2148 + t2089 * t2154;
t2041 = t2142 * t2089 + t2143 * t2209;
t2040 = -t2142 * t2088 + t2143 * t2208;
t2039 = -t2142 * t2087 + t2143 * t2210;
t2038 = -t2143 * t2089 + t2142 * t2209;
t2037 = t2143 * t2088 + t2142 * t2208;
t2036 = t2143 * t2087 + t2142 * t2210;
t2023 = -t2142 * t2085 + t2143 * t2211;
t2022 = t2143 * t2085 + t2142 * t2211;
t2020 = t2147 * t2061 - t2257;
t2018 = -t2153 * t2201 - t2260;
t2017 = t2154 * t2047 + t2148 * t2172;
t2014 = -t2142 * t2117 + t2143 * t2213;
t2013 = t2142 * t2118 + t2143 * t2212;
t2012 = t2143 * t2117 + t2142 * t2213;
t2011 = -t2143 * t2118 + t2142 * t2212;
t2004 = t2083 * t2147 - t2317;
t2003 = t2084 * t2153 + t2360;
t1982 = t2021 * t2154 + t2281;
t1981 = t2019 * t2154 - t2281;
t1980 = t2142 * t2093 + t2143 * t2214;
t1979 = -t2143 * t2093 + t2142 * t2214;
t1976 = -t2142 * t2046 + t2143 * t2361;
t1975 = t2143 * t2046 + t2142 * t2361;
t1966 = t2027 * t2153 - t2147 * t2362;
t1954 = t1988 * t2147 - t2059 * t2153;
t1952 = t2006 * t2154 - t2024 * t2148;
t1951 = t2005 * t2154 + t2028 * t2148;
t1939 = -t2298 + (-t2038 * t2142 - t2041 * t2143) * pkin(8);
t1935 = -t2297 + (-t2022 * t2142 - t2023 * t2143) * pkin(8);
t1934 = -pkin(1) * t2038 + t2142 * t2067 + t2143 * t2254;
t1933 = pkin(1) * t2041 - t2143 * t2067 + t2142 * t2254;
t1923 = t1968 * t2154 + t2071 * t2148;
t1922 = -pkin(1) * t2022 + t2142 * t2068 + t2143 * t2255;
t1921 = pkin(1) * t2023 - t2143 * t2068 + t2142 * t2255;
t1918 = -t2142 * t2020 + t2143 * t2202;
t1917 = -t2142 * t2018 + t2143 * t2203;
t1916 = t2143 * t2020 + t2142 * t2202;
t1915 = t2143 * t2018 + t2142 * t2203;
t1912 = pkin(1) * t1980 + t1995 * t2344;
t1911 = pkin(8) * t1995 * t2143 - pkin(1) * t1979;
t1908 = t1959 * t2147 - t2282;
t1907 = t1957 * t2147 + t2282;
t1903 = -pkin(1) * t2011 + t2143 * t2180;
t1902 = pkin(1) * t2013 + t2142 * t2180;
t1899 = pkin(2) * t2029 + pkin(9) * t1997 + t2320;
t1897 = -t2142 * t2004 + t2143 * t2215;
t1896 = -t2142 * t2003 + t2143 * t2216;
t1895 = t2143 * t2004 + t2142 * t2215;
t1894 = t2143 * t2003 + t2142 * t2216;
t1893 = (-t1979 * t2142 - t1980 * t2143) * pkin(8);
t1891 = -pkin(2) * t2362 + pkin(9) * t1991 - t2319;
t1890 = (-t2011 * t2142 - t2013 * t2143) * pkin(8) - t2214;
t1888 = -t2142 * t1996 + t2143 * t2217;
t1887 = t2143 * t1996 + t2142 * t2217;
t1886 = t1955 * t2154 + t1987 * t2148;
t1876 = -t2142 * t1990 + t2143 * t2218;
t1875 = t2143 * t1990 + t2142 * t2218;
t1865 = t1943 * t2147 + t1960 * t2153;
t1864 = t1942 * t2147 - t1964 * t2153;
t1854 = -t2142 * t1966 + t2143 * t2220;
t1853 = t2143 * t1966 + t2142 * t2220;
t1842 = -t2142 * t1967 + t2143 * t2219;
t1841 = t2143 * t1967 + t2142 * t2219;
t1833 = t1871 * t2147 - t2042 * t2153;
t1832 = t1910 * t2154 + t1958 * t2148;
t1831 = t1909 * t2154 - t1956 * t2148;
t1828 = -pkin(2) * t2015 + pkin(9) * t1863;
t1825 = t1836 * t2147 - t2058 * t2153;
t1822 = -t2142 * t1954 + t2143 * t2221;
t1821 = t2143 * t1954 + t2142 * t2221;
t1814 = t1867 * t2154 + t1941 * t2148;
t1813 = t1866 * t2154 + t1940 * t2148;
t1804 = pkin(2) * t2048 + pkin(9) * t1969 + t1863;
t1796 = -t2142 * t1908 + t2143 * t2222;
t1795 = -t2142 * t1907 + t2143 * t2223;
t1794 = t2143 * t1908 + t2142 * t2222;
t1793 = t2143 * t1907 + t2142 * t2223;
t1783 = t1834 * t2154 + t1869 * t2148;
t1766 = -t2142 * t1862 + t2143 * t2226;
t1765 = t2143 * t1862 + t2142 * t2226;
t1763 = t1826 * t2154 + t1835 * t2148;
t1761 = -t2142 * t1865 + t2143 * t2224;
t1760 = -t2142 * t1864 + t2143 * t2225;
t1759 = t2143 * t1865 + t2142 * t2224;
t1758 = t2143 * t1864 + t2142 * t2225;
t1747 = -t2142 * t1855 + t2143 * t2227;
t1746 = t2143 * t1855 + t2142 * t2227;
t1743 = t1770 * t2147 - t2284;
t1742 = t1769 * t2147 + t2284;
t1741 = -t2142 * t1849 + t2143 * t2228;
t1740 = t2143 * t1849 + t2142 * t2228;
t1736 = t1802 * t2147 + t1844 * t2153;
t1735 = t1801 * t2147 - t1847 * t2153;
t1728 = -t2148 * t1892 + t2154 * t1937 + (-t1887 * t2142 - t1888 * t2143) * pkin(8);
t1723 = -t2148 * t1889 + t2154 * t1930 + (-t1875 * t2142 - t1876 * t2143) * pkin(8);
t1720 = -t2142 * t1833 + t2143 * t2229;
t1719 = t2143 * t1833 + t2142 * t2229;
t1715 = -pkin(1) * t1887 - t2142 * t1899 + t2143 * t2181;
t1714 = pkin(1) * t1888 + t2143 * t1899 + t2142 * t2181;
t1713 = -t2142 * t1829 + t2143 * t2230;
t1712 = t2143 * t1829 + t2142 * t2230;
t1710 = -pkin(1) * t1875 - t2142 * t1891 + t2143 * t2182;
t1709 = pkin(1) * t1876 + t2143 * t1891 + t2142 * t2182;
t1706 = -t2142 * t1825 + t2143 * t2231;
t1705 = t2143 * t1825 + t2142 * t2231;
t1699 = t1967 * t2349 + t2154 * t1815 + (-t1841 * t2142 - t1842 * t2143) * pkin(8);
t1697 = t1701 * t2147 - t2057 * t2153;
t1686 = t1738 * t2154 + t1800 * t2148;
t1685 = t1737 * t2154 + t1799 * t2148;
t1682 = t1691 * t2147 - t1977 * t2153;
t1680 = -pkin(2) * t1925 + pkin(9) * t1856 + t1789 * t2153 + t1823 * t2147;
t1679 = t1745 * t2154 + t1768 * t2148;
t1678 = t1744 * t2154 + t1767 * t2148;
t1677 = -pkin(2) * t1919 + pkin(9) * t1850 + t1786 * t2153 + t1820 * t2147;
t1665 = -pkin(1) * t1841 - t2142 * t1804 + t2143 * t2178;
t1664 = pkin(1) * t1842 + t2143 * t1804 + t2142 * t2178;
t1650 = t2263 * t1862 + (-t1765 * t2142 - t1766 * t2143) * pkin(8);
t1648 = -pkin(1) * t1765 - t2142 * t1828 + t2143 * t2175;
t1647 = pkin(1) * t1766 + t2143 * t1828 + t2142 * t2175;
t1646 = pkin(9) * t1830 + t2147 * t1704 + t1870 * t2289;
t1642 = -t2142 * t1736 + t2143 * t2234;
t1641 = -t2142 * t1735 + t2143 * t2235;
t1640 = t2143 * t1736 + t2142 * t2234;
t1639 = t2143 * t1735 + t2142 * t2235;
t1635 = -t2142 * t1743 + t2143 * t2232;
t1634 = -t2142 * t1742 + t2143 * t2233;
t1633 = t2143 * t1743 + t2142 * t2232;
t1632 = t2143 * t1742 + t2142 * t2233;
t1631 = -t2142 * t1729 + t2143 * t2236;
t1630 = t2143 * t1729 + t2142 * t2236;
t1626 = t1698 * t2154 + t1700 * t2148;
t1623 = -t2142 * t1717 + t2143 * t2237;
t1622 = t2143 * t1717 + t2142 * t2237;
t1619 = t1657 * t2147 + t1753 * t2153;
t1618 = t1656 * t2147 - t1756 * t2153;
t1615 = t1683 * t2154 + t1689 * t2148;
t1611 = -t2142 * t1707 + t2143 * t2238;
t1610 = t2143 * t1707 + t2142 * t2238;
t1596 = t1603 * t2147 - t2286;
t1595 = t1602 * t2147 + t2286;
t1589 = pkin(9) * t1708 + (-pkin(10) * t2147 + t2289) * t1732;
t1587 = t2154 * t1693 - t2148 * t1739 + (-t1746 * t2142 - t1747 * t2143) * pkin(8);
t1586 = -t2142 * t1697 + t2143 * t2239;
t1585 = t2143 * t1697 + t2142 * t2239;
t1584 = t2154 * t1688 - t2148 * t1734 + (-t1740 * t2142 - t1741 * t2143) * pkin(8);
t1583 = -t2142 * t1682 + t2143 * t2240;
t1582 = t2143 * t1682 + t2142 * t2240;
t1581 = -t2142 * t1675 + t2143 * t2241;
t1580 = t2143 * t1675 + t2142 * t2241;
t1578 = t1621 * t2154 + t1655 * t2148;
t1577 = t1620 * t2154 + t1654 * t2148;
t1574 = -pkin(1) * t1746 - t2142 * t1680 + t2143 * t2183;
t1573 = pkin(1) * t1747 + t2143 * t1680 + t2142 * t2183;
t1572 = -pkin(1) * t1740 - t2142 * t1677 + t2143 * t2184;
t1571 = pkin(1) * t1741 + t2143 * t1677 + t2142 * t2184;
t1566 = t2154 * t1658 - t2148 * t1663 + (-t1712 * t2142 - t1713 * t2143) * pkin(8);
t1560 = -pkin(2) * t1797 + pkin(9) * t1730 + t1636 * t2147 + t1645 * t2153;
t1555 = -pkin(2) * t1779 + pkin(9) * t1718 + t1627 * t2147 + t1638 * t2153;
t1553 = t1558 * t2147 - t1877 * t2153;
t1552 = t1598 * t2154 + t1601 * t2148;
t1551 = t1597 * t2154 + t1600 * t2148;
t1544 = -t2142 * t1619 + t2143 * t2242;
t1543 = -t2142 * t1618 + t2143 * t2243;
t1542 = t2143 * t1619 + t2142 * t2242;
t1541 = t2143 * t1618 + t2142 * t2243;
t1540 = -pkin(1) * t1712 - t2142 * t1646 + t2143 * t2185;
t1539 = pkin(1) * t1713 + t2143 * t1646 + t2142 * t2185;
t1538 = -t2142 * t1616 + t2143 * t2244;
t1537 = t2143 * t1616 + t2142 * t2244;
t1531 = -t2142 * t1604 + t2143 * t2245;
t1530 = t2143 * t1604 + t2142 * t2245;
t1527 = -t2142 * t1596 + t2143 * t2246;
t1526 = -t2142 * t1595 + t2143 * t2247;
t1525 = t2143 * t1596 + t2142 * t2246;
t1524 = t2143 * t1595 + t2142 * t2247;
t1520 = t2154 * t1614 - t2148 * t1643 + (-t1610 * t2142 - t1611 * t2143) * pkin(8);
t1517 = t1554 * t2154 + t1556 * t2148;
t1516 = -pkin(2) * t1690 + pkin(9) * t1676 + t1533 * t2147 + t1649 * t2153;
t1513 = t2154 * t1567 - t2148 * t1593 + (-t1630 * t2142 - t1631 * t2143) * pkin(8);
t1512 = -pkin(1) * t1610 - t2142 * t1589 + t2143 * t2186;
t1511 = pkin(1) * t1611 + t2143 * t1589 + t2142 * t2186;
t1508 = t2154 * t1562 - t2148 * t1588 + (-t1622 * t2142 - t1623 * t2143) * pkin(8);
t1506 = -t2142 * t1563 + t2143 * t2248;
t1505 = t2143 * t1563 + t2142 * t2248;
t1502 = -pkin(1) * t1630 - t2142 * t1560 + t2143 * t2187;
t1501 = pkin(1) * t1631 + t2143 * t1560 + t2142 * t2187;
t1500 = -t2142 * t1553 + t2143 * t2249;
t1499 = t2143 * t1553 + t2142 * t2249;
t1498 = -t2142 * t1549 + t2143 * t2250;
t1497 = t2143 * t1549 + t2142 * t2250;
t1496 = -pkin(1) * t1622 - t2142 * t1555 + t2143 * t2188;
t1495 = pkin(1) * t1623 + t2143 * t1555 + t2142 * t2188;
t1491 = -pkin(2) * t1652 + pkin(9) * t1617 + t1518 * t2147 + t1548 * t2153;
t1488 = -pkin(2) * t1628 + pkin(9) * t1605 + t1515 * t2147 + t1536 * t2153;
t1482 = -pkin(2) * t1569 + pkin(9) * t1564 + t1523 * t2147 + t1535 * t2153;
t1480 = t2154 * t1519 - t2148 * t1528 + (-t1580 * t2142 - t1581 * t2143) * pkin(8);
t1479 = -pkin(1) * t1580 - t2142 * t1516 + t2143 * t2189;
t1478 = pkin(1) * t1581 + t2143 * t1516 + t2142 * t2189;
t1475 = t2154 * t1492 - t2148 * t1507 + (-t1537 * t2142 - t1538 * t2143) * pkin(8);
t1472 = t2154 * t1490 - t2148 * t1503 + (-t1530 * t2142 - t1531 * t2143) * pkin(8);
t1470 = -pkin(1) * t1537 - t2142 * t1491 + t2143 * t2190;
t1469 = pkin(1) * t1538 + t2143 * t1491 + t2142 * t2190;
t1468 = -pkin(2) * t1557 + pkin(9) * t1550 + t1477 * t2147 + t1521 * t2153;
t1467 = t2154 * t1489 - t2148 * t1504 + (-t1505 * t2142 - t1506 * t2143) * pkin(8);
t1466 = -pkin(1) * t1530 - t2142 * t1488 + t2143 * t2191;
t1465 = pkin(1) * t1531 + t2143 * t1488 + t2142 * t2191;
t1464 = -t2142 * t1483 + t2143 * t2251;
t1463 = t2143 * t1483 + t2142 * t2251;
t1461 = -pkin(1) * t1505 - t2142 * t1482 + t2143 * t2192;
t1460 = pkin(1) * t1506 + t2143 * t1482 + t2142 * t2192;
t1458 = t2154 * t1471 - t2148 * t1474 + (-t1497 * t2142 - t1498 * t2143) * pkin(8);
t1456 = -pkin(2) * t1486 + pkin(9) * t1484 + t1462 * t2147 + t1476 * t2153;
t1455 = -pkin(1) * t1497 - t2142 * t1468 + t2143 * t2193;
t1454 = pkin(1) * t1498 + t2143 * t1468 + t2142 * t2193;
t1453 = t2154 * t1457 - t2148 * t1459 + (-t1463 * t2142 - t1464 * t2143) * pkin(8);
t1452 = -pkin(1) * t1463 - t2142 * t1456 + t2143 * t2194;
t1451 = pkin(1) * t1464 + t2143 * t1456 + t2142 * t2194;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2128, 0, -t2127, 0, t2261, -t2113, -t2206, -pkin(7) * t2206, -t2149 * t2065 + t2082 * t2155, -t2149 * t2014 + t2045 * t2155, -t2149 * t2039 + t2074 * t2155, -t2149 * t2062 + t2081 * t2155, -t2149 * t2040 + t2075 * t2155, t2092 * t2155 + t2149 * t2302, t2155 * t1939 - t2149 * t1934 - pkin(7) * (t2041 * t2155 + t2149 * t2076), t2155 * t1935 - t2149 * t1922 - pkin(7) * (t2023 * t2155 + t2149 * t2069), t2155 * t1890 - t2149 * t1903 - pkin(7) * (t2013 * t2155 + t2149 * t2044), t2155 * t1893 - t2149 * t1911 - pkin(7) * (t1980 * t2155 + t2149 * t1995), -t2149 * t1918 + t1982 * t2155, -t2149 * t1854 + t1923 * t2155, -t2149 * t1896 + t1951 * t2155, -t2149 * t1917 + t1981 * t2155, -t2149 * t1897 + t1952 * t2155, -t2149 * t1976 + t2017 * t2155, t2155 * t1723 - t2149 * t1710 - pkin(7) * (t1876 * t2155 + t2149 * t1936), t2155 * t1728 - t2149 * t1715 - pkin(7) * (t1888 * t2155 + t2149 * t1938), t2155 * t1699 - t2149 * t1665 - pkin(7) * (t1842 * t2155 + t2149 * t1913), t2155 * t1650 - t2149 * t1648 - pkin(7) * (t1766 * t2155 + t2149 * t1827), -t2149 * t1796 + t1832 * t2155, -t2149 * t1720 + t1783 * t2155, -t2149 * t1760 + t1813 * t2155, -t2149 * t1795 + t1831 * t2155, -t2149 * t1761 + t1814 * t2155, -t2149 * t1822 + t1886 * t2155, t2155 * t1584 - t2149 * t1572 - pkin(7) * (t1741 * t2155 + t2149 * t1803), t2155 * t1587 - t2149 * t1574 - pkin(7) * (t1747 * t2155 + t2149 * t1805), t2155 * t1566 - t2149 * t1540 - pkin(7) * (t1713 * t2155 + t2149 * t1778), t2155 * t1520 - t2149 * t1512 - pkin(7) * (t1611 * t2155 + t2149 * t1651), -t2149 * t1635 + t1679 * t2155, -t2149 * t1583 + t1615 * t2155, -t2149 * t1641 + t1685 * t2155, -t2149 * t1634 + t1678 * t2155, -t2149 * t1642 + t1686 * t2155, -t2149 * t1706 + t1763 * t2155, t2155 * t1508 - t2149 * t1496 - pkin(7) * (t1623 * t2155 + t2149 * t1662), t2155 * t1513 - t2149 * t1502 - pkin(7) * (t1631 * t2155 + t2149 * t1684), t2155 * t1480 - t2149 * t1479 - pkin(7) * (t1581 * t2155 + t2149 * t1613), t2155 * t1467 - t2149 * t1461 - pkin(7) * (t1506 * t2155 + t2149 * t1522), -t2149 * t1527 + t1552 * t2155, -t2149 * t1500 + t1517 * t2155, -t2149 * t1543 + t1577 * t2155, -t2149 * t1526 + t1551 * t2155, -t2149 * t1544 + t1578 * t2155, -t2149 * t1586 + t1626 * t2155, t2155 * t1472 - t2149 * t1466 - pkin(7) * (t1531 * t2155 + t2149 * t1565), t2155 * t1475 - t2149 * t1470 - pkin(7) * (t1538 * t2155 + t2149 * t1576), t2155 * t1458 - t2149 * t1455 - pkin(7) * (t1498 * t2155 + t2149 * t1514), t2155 * t1453 - t2149 * t1452 - pkin(7) * (t1464 * t2155 + t2149 * t1473); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2127, 0, t2128, 0, t2113, t2261, t2267, pkin(7) * t2267, t2065 * t2155 + t2149 * t2082, t2014 * t2155 + t2149 * t2045, t2039 * t2155 + t2149 * t2074, t2062 * t2155 + t2149 * t2081, t2040 * t2155 + t2149 * t2075, t2149 * t2092 - t2155 * t2302, t2149 * t1939 + t2155 * t1934 + pkin(7) * (-t2149 * t2041 + t2076 * t2155), t2149 * t1935 + t2155 * t1922 + pkin(7) * (-t2149 * t2023 + t2069 * t2155), t2149 * t1890 + t2155 * t1903 + pkin(7) * (-t2149 * t2013 + t2044 * t2155), t2149 * t1893 + t2155 * t1911 + pkin(7) * (-t2149 * t1980 + t1995 * t2155), t1918 * t2155 + t2149 * t1982, t1854 * t2155 + t2149 * t1923, t1896 * t2155 + t2149 * t1951, t1917 * t2155 + t2149 * t1981, t1897 * t2155 + t2149 * t1952, t1976 * t2155 + t2149 * t2017, t2149 * t1723 + t2155 * t1710 + pkin(7) * (-t2149 * t1876 + t1936 * t2155), t2149 * t1728 + t2155 * t1715 + pkin(7) * (-t2149 * t1888 + t1938 * t2155), t2149 * t1699 + t2155 * t1665 + pkin(7) * (-t2149 * t1842 + t1913 * t2155), t2149 * t1650 + t2155 * t1648 + pkin(7) * (-t2149 * t1766 + t1827 * t2155), t1796 * t2155 + t2149 * t1832, t1720 * t2155 + t2149 * t1783, t1760 * t2155 + t2149 * t1813, t1795 * t2155 + t2149 * t1831, t1761 * t2155 + t2149 * t1814, t1822 * t2155 + t2149 * t1886, t2149 * t1584 + t2155 * t1572 + pkin(7) * (-t2149 * t1741 + t1803 * t2155), t2149 * t1587 + t2155 * t1574 + pkin(7) * (-t2149 * t1747 + t1805 * t2155), t2149 * t1566 + t2155 * t1540 + pkin(7) * (-t2149 * t1713 + t1778 * t2155), t2149 * t1520 + t2155 * t1512 + pkin(7) * (-t2149 * t1611 + t1651 * t2155), t1635 * t2155 + t2149 * t1679, t1583 * t2155 + t2149 * t1615, t1641 * t2155 + t2149 * t1685, t1634 * t2155 + t2149 * t1678, t1642 * t2155 + t2149 * t1686, t1706 * t2155 + t2149 * t1763, t2149 * t1508 + t2155 * t1496 + pkin(7) * (-t2149 * t1623 + t1662 * t2155), t2149 * t1513 + t2155 * t1502 + pkin(7) * (-t2149 * t1631 + t1684 * t2155), t2149 * t1480 + t2155 * t1479 + pkin(7) * (-t2149 * t1581 + t1613 * t2155), t2149 * t1467 + t2155 * t1461 + pkin(7) * (-t2149 * t1506 + t1522 * t2155), t1527 * t2155 + t2149 * t1552, t1500 * t2155 + t2149 * t1517, t1543 * t2155 + t2149 * t1577, t1526 * t2155 + t2149 * t1551, t1544 * t2155 + t2149 * t1578, t1586 * t2155 + t2149 * t1626, t2149 * t1472 + t2155 * t1466 + pkin(7) * (-t2149 * t1531 + t1565 * t2155), t2149 * t1475 + t2155 * t1470 + pkin(7) * (-t2149 * t1538 + t1576 * t2155), t2149 * t1458 + t2155 * t1455 + pkin(7) * (-t2149 * t1498 + t1514 * t2155), t2149 * t1453 + t2155 * t1452 + pkin(7) * (-t2149 * t1464 + t1473 * t2155); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2130, t2131, 0, 0, t2064, t2012, t2036, t2063, t2037, t2124, t1933, t1921, t1902, t1912, t1916, t1853, t1894, t1915, t1895, t1975, t1709, t1714, t1664, t1647, t1794, t1719, t1758, t1793, t1759, t1821, t1571, t1573, t1539, t1511, t1633, t1582, t1639, t1632, t1640, t1705, t1495, t1501, t1478, t1460, t1525, t1499, t1541, t1524, t1542, t1585, t1465, t1469, t1454, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2352, 0, 0, -g(3), -t2130, 0, t2082, t2045, t2074, t2081, t2075, t2092, t1939, t1935, t1890, t1893, t1982, t1923, t1951, t1981, t1952, t2017, t1723, t1728, t1699, t1650, t1832, t1783, t1813, t1831, t1814, t1886, t1584, t1587, t1566, t1520, t1679, t1615, t1685, t1678, t1686, t1763, t1508, t1513, t1480, t1467, t1552, t1517, t1577, t1551, t1578, t1626, t1472, t1475, t1458, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2352, 0, qJDD(1), 0, g(3), 0, -t2131, 0, t2065, t2014, t2039, t2062, t2040, -t2302, t1934, t1922, t1903, t1911, t1918, t1854, t1896, t1917, t1897, t1976, t1710, t1715, t1665, t1648, t1796, t1720, t1760, t1795, t1761, t1822, t1572, t1574, t1540, t1512, t1635, t1583, t1641, t1634, t1642, t1706, t1496, t1502, t1479, t1461, t1527, t1500, t1543, t1526, t1544, t1586, t1466, t1470, t1455, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2130, t2131, 0, 0, t2064, t2012, t2036, t2063, t2037, t2124, t1933, t1921, t1902, t1912, t1916, t1853, t1894, t1915, t1895, t1975, t1709, t1714, t1664, t1647, t1794, t1719, t1758, t1793, t1759, t1821, t1571, t1573, t1539, t1511, t1633, t1582, t1639, t1632, t1640, t1705, t1495, t1501, t1478, t1460, t1525, t1499, t1541, t1524, t1542, t1585, t1465, t1469, t1454, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2112, t2089, t2109, -t2120, t2115, t2120, 0, -t2093, t2067, 0, t2021, t1968, t2005, t2019, t2006, t2047, t1930, t1937, t1815, -pkin(9) * t1862, t1910, t1834, t1866, t1909, t1867, t1955, t1688, t1693, t1658, t1614, t1745, t1683, t1737, t1744, t1738, t1826, t1562, t1567, t1519, t1489, t1598, t1554, t1620, t1597, t1621, t1698, t1490, t1492, t1471, t1457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2119, t2086, t2114, -t2179, t2110, -t2119, t2093, 0, t2068, 0, -t2308, -t2071, -t2028, t2308, t2024, -t2172, t1889, t1892, -pkin(2) * t1967, -pkin(2) * t1862, -t1958, -t1869, -t1940, t1956, -t1941, -t1987, t1734, t1739, t1663, t1643, -t1768, -t1689, -t1799, -t1767, -t1800, -t1835, t1588, t1593, t1528, t1504, -t1601, -t1556, -t1654, -t1600, -t1655, -t1700, t1503, t1507, t1474, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2129, t2117, t2087, t2129, t2088, t2135, -t2067, -t2068, 0, 0, t2020, t1966, t2003, t2018, t2004, t2046, t1891, t1899, t1804, t1828, t1908, t1833, t1864, t1907, t1865, t1954, t1677, t1680, t1646, t1589, t1743, t1682, t1735, t1742, t1736, t1825, t1555, t1560, t1516, t1482, t1596, t1553, t1618, t1595, t1619, t1697, t1488, t1491, t1468, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2061, -t2362, t2162, -t2090, t2083, t2090, 0, t2015, t1949, 0, t1959, t1871, t1942, t1957, t1943, t1988, t1820, t1823, t1704, -pkin(10) * t1732, t1770, t1691, t1801, t1769, t1802, t1836, t1627, t1636, t1533, t1523, t1603, t1558, t1656, t1602, t1657, t1701, t1515, t1518, t1477, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2091, t2027, t2084, -t2201, -t2052, t2091, -t2015, 0, t1950, 0, -t2043, -t2042, -t1964, t2043, t1960, -t2059, t1786, t1789, -pkin(3) * t1870, -pkin(3) * t1732, -t1978, -t1977, -t1847, t1978, t1844, -t2058, t1638, t1645, t1649, t1535, -t1878, -t1877, -t1756, t1878, t1753, -t2057, t1536, t1548, t1521, t1476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2308, t2071, t2028, -t2308, -t2024, t2172, -t1949, -t1950, 0, 0, t1958, t1869, t1940, -t1956, t1941, t1987, t2196, t2195, t2177, t2262, t1768, t1689, t1799, t1767, t1800, t1835, t2166, t2165, t2167, t2164, t1601, t1556, t1654, t1600, t1655, t1700, t2169, t2168, t2170, t2171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1993, t1961, t2353, t2055, t2050, -t2055, 0, t1900, t1817, 0, t1840, t1776, t1881, t1838, t1882, t1932, t1762, t1764, t1599, -pkin(11) * t1624, t1669, t1608, t1726, t1668, t1727, t1788, t1575, t1579, t1494, t1485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2056, t1963, t2051, -t2158, t1984, -t2056, -t1900, 0, t1818, 0, t1839, t1774, t1879, t1837, t1880, t1931, t1711, t1716, t1594, t1612, t1667, t1606, t1724, t1666, t1725, t1787, t1561, t1568, t1493, t1481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2043, t2042, t1964, -t2043, -t1960, t2059, -t1817, -t1818, 0, 0, t1978, t1977, t1847, -t1978, -t1844, t2058, t2205, t2265, t2345, t2346, t1878, t1877, t1756, -t1878, -t1753, t2057, t2197, t2176, t2274, t2275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1885, -t1843, t2355, t2001, t1999, -t2001, 0, t1819, t1695, 0, t1751, t1673, t1811, t1749, t1812, t1861, t1681, t1687, t1532, -pkin(12) * t1546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2313, t2354, t2000, -t2200, t1928, -t2313, -t1819, 0, t1696, 0, t1750, t1671, t1809, t1748, t1810, t1860, t1637, t1644, t1529, t1534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1978, t1977, t1847, -t1978, -t1844, t2058, -t1695, -t1696, 0, 0, t1878, t1877, t1756, -t1878, -t1753, t2057, t2256, t2199, t1670, t1545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1782, -t1752, t2357, t1947, t1945, -t1947, 0, t1731, t1591, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2316, t2356, t1946, t1781, t1858, -t2316, -t1731, 0, t1592, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1878, t1877, t1756, -t1878, -t1753, t2057, -t1591, -t1592, 0, 0;];
m_new_reg  = t1;
