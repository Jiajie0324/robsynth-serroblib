% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 12:42
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRRR7_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR7_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR7_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR7_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR7_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR7_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 12:35:34
% EndTime: 2019-05-08 12:38:07
% DurationCPUTime: 106.22s
% Computational Cost: add. (1171246->1120), mult. (2498241->1825), div. (0->0), fcn. (2052902->14), ass. (0->809)
t1257 = sin(qJ(6));
t1256 = cos(pkin(6));
t1412 = qJD(1) * t1256;
t1247 = qJD(2) + t1412;
t1260 = sin(qJ(3));
t1266 = cos(qJ(3));
t1255 = sin(pkin(6));
t1261 = sin(qJ(2));
t1380 = t1255 * t1261;
t1368 = qJD(1) * t1380;
t1215 = t1247 * t1260 + t1266 * t1368;
t1372 = qJDD(1) * t1261;
t1267 = cos(qJ(2));
t1410 = qJD(1) * t1267;
t1223 = (qJD(2) * t1410 + t1372) * t1255;
t1246 = qJDD(1) * t1256 + qJDD(2);
t1354 = t1215 * qJD(3) + t1260 * t1223 - t1266 * t1246;
t1165 = qJDD(4) + t1354;
t1164 = qJDD(5) + t1165;
t1298 = qJDD(6) + t1164;
t1379 = t1255 * t1267;
t1367 = qJD(1) * t1379;
t1241 = -qJD(3) + t1367;
t1259 = sin(qJ(4));
t1265 = cos(qJ(4));
t1184 = t1215 * t1259 + t1265 * t1241;
t1185 = t1215 * t1265 - t1241 * t1259;
t1258 = sin(qJ(5));
t1264 = cos(qJ(5));
t1141 = t1264 * t1184 + t1185 * t1258;
t1143 = -t1184 * t1258 + t1185 * t1264;
t1263 = cos(qJ(6));
t1077 = t1263 * t1141 + t1143 * t1257;
t1079 = -t1141 * t1257 + t1143 * t1263;
t986 = t1079 * t1077;
t1441 = -t986 + t1298;
t1450 = t1257 * t1441;
t1082 = t1143 * t1141;
t1436 = -t1082 + t1164;
t1449 = t1258 * t1436;
t1149 = t1185 * t1184;
t1435 = -t1149 + t1165;
t1448 = t1259 * t1435;
t1447 = t1263 * t1441;
t1446 = t1264 * t1436;
t1445 = t1265 * t1435;
t1213 = -t1266 * t1247 + t1260 * t1368;
t1209 = qJD(4) + t1213;
t1161 = t1209 * t1184;
t1167 = -t1213 * qJD(3) + t1266 * t1223 + t1260 * t1246;
t1371 = qJDD(1) * t1267;
t1411 = qJD(1) * t1261;
t1299 = qJD(2) * t1411 - t1371;
t1281 = t1299 * t1255;
t1276 = qJDD(3) + t1281;
t1355 = t1184 * qJD(4) - t1265 * t1167 - t1259 * t1276;
t1067 = -t1161 + t1355;
t1390 = t1215 * t1241;
t1444 = t1354 - t1390;
t1153 = (t1213 * t1266 - t1215 * t1260) * t1241;
t1443 = t1261 * t1153 - t1267 * t1276;
t1204 = qJD(5) + t1209;
t1109 = t1204 * t1141;
t1272 = -t1259 * t1167 + t1265 * t1276;
t1271 = t1185 * qJD(4) - t1272;
t994 = -t1141 * qJD(5) - t1258 * t1271 - t1264 * t1355;
t957 = -t1109 - t994;
t1442 = -t1109 + t994;
t1391 = t1213 * t1215;
t1274 = t1276 - t1391;
t1440 = t1260 * t1274;
t1439 = t1266 * t1274;
t1199 = qJD(6) + t1204;
t1050 = t1199 * t1077;
t1351 = -t1258 * t1355 + t1264 * t1271;
t993 = -qJD(5) * t1143 - t1351;
t1282 = qJD(6) * t1077 - t1257 * t993 - t1263 * t994;
t1437 = -t1050 - t1282;
t1195 = t1213 * t1241;
t1134 = t1195 + t1167;
t1068 = t1355 + t1161;
t1353 = t1257 * t994 - t1263 * t993;
t864 = (qJD(6) - t1199) * t1079 + t1353;
t953 = (qJD(5) - t1204) * t1143 + t1351;
t1063 = (qJD(4) - t1209) * t1185 - t1272;
t1434 = qJD(1) ^ 2;
t1075 = t1077 ^ 2;
t1076 = t1079 ^ 2;
t1433 = t1141 ^ 2;
t1140 = t1143 ^ 2;
t1432 = t1184 ^ 2;
t1183 = t1185 ^ 2;
t1198 = t1199 ^ 2;
t1202 = t1204 ^ 2;
t1207 = t1209 ^ 2;
t1211 = t1213 ^ 2;
t1212 = t1215 ^ 2;
t1431 = t1241 ^ 2;
t1430 = t1247 ^ 2;
t1252 = t1255 ^ 2;
t1429 = pkin(2) * t1261;
t1428 = pkin(2) * t1267;
t1427 = pkin(3) * t1260;
t1426 = pkin(8) * t1255;
t1425 = pkin(9) * t1267;
t1424 = t1256 * g(3);
t1262 = sin(qJ(1));
t1268 = cos(qJ(1));
t1243 = g(1) * t1268 + t1262 * g(2);
t1219 = -pkin(1) * t1434 + qJDD(1) * t1426 - t1243;
t1349 = -pkin(9) * t1261 - t1428;
t1413 = qJD(1) * t1255;
t1222 = t1349 * t1413;
t1242 = t1262 * g(1) - t1268 * g(2);
t1278 = qJDD(1) * pkin(1) + t1426 * t1434 + t1242;
t1275 = t1256 * t1278;
t1273 = -g(3) * t1380 + t1261 * t1275;
t1123 = t1246 * pkin(9) - t1430 * pkin(2) + (t1222 * t1413 + t1219) * t1267 + t1273;
t1377 = qJD(2) + t1247;
t1270 = -t1223 * pkin(9) - t1424 + ((-pkin(1) - t1428) * qJDD(1) + (-pkin(8) * t1413 - t1247 * t1425 + t1377 * t1429) * qJD(1) - t1242) * t1255;
t1053 = t1266 * t1123 + t1260 * t1270;
t1174 = pkin(3) * t1213 - pkin(10) * t1215;
t1008 = -pkin(3) * t1431 + pkin(10) * t1276 - t1213 * t1174 + t1053;
t1350 = t1219 * t1261 - t1267 * t1275;
t1122 = -t1246 * pkin(2) - t1430 * pkin(9) + (g(3) * t1267 + t1222 * t1411) * t1255 + t1350;
t1012 = pkin(3) * t1444 - t1134 * pkin(10) + t1122;
t923 = t1008 * t1259 - t1265 * t1012;
t882 = t1435 * pkin(4) + pkin(11) * t1067 - t923;
t1155 = pkin(4) * t1209 - pkin(11) * t1185;
t924 = t1265 * t1008 + t1259 * t1012;
t894 = -pkin(4) * t1432 - pkin(11) * t1271 - t1209 * t1155 + t924;
t806 = t1258 * t894 - t1264 * t882;
t768 = pkin(5) * t1436 + pkin(12) * t957 - t806;
t1106 = pkin(5) * t1204 - pkin(12) * t1143;
t807 = t1258 * t882 + t1264 * t894;
t770 = -pkin(5) * t1433 + pkin(12) * t993 - t1106 * t1204 + t807;
t704 = t1257 * t768 + t1263 * t770;
t1052 = t1123 * t1260 - t1266 * t1270;
t1007 = -t1276 * pkin(3) - t1431 * pkin(10) + t1174 * t1215 + t1052;
t927 = t1271 * pkin(4) - t1432 * pkin(11) + t1155 * t1185 + t1007;
t842 = -t993 * pkin(5) - pkin(12) * t1433 + t1106 * t1143 + t927;
t1423 = t1257 * t842;
t966 = t986 + t1298;
t1422 = t1257 * t966;
t703 = t1257 * t770 - t1263 * t768;
t656 = t1257 * t704 - t1263 * t703;
t1421 = t1258 * t656;
t1420 = t1258 * t927;
t736 = t1258 * t807 - t1264 * t806;
t1419 = t1259 * t736;
t1418 = t1263 * t842;
t1417 = t1263 * t966;
t1416 = t1264 * t656;
t1415 = t1264 * t927;
t1414 = t1265 * t736;
t1409 = t1007 * t1259;
t1408 = t1007 * t1265;
t1032 = t1082 + t1164;
t1407 = t1032 * t1258;
t1406 = t1032 * t1264;
t1090 = t1149 + t1165;
t1405 = t1090 * t1259;
t1404 = t1090 * t1265;
t1403 = t1122 * t1260;
t1402 = t1122 * t1266;
t1158 = -t1276 - t1391;
t1401 = t1158 * t1260;
t1400 = t1158 * t1266;
t1197 = t1255 * t1278 + t1424;
t1399 = t1197 * t1261;
t1398 = t1197 * t1267;
t1397 = t1199 * t1257;
t1396 = t1199 * t1263;
t1395 = t1204 * t1258;
t1394 = t1204 * t1264;
t1393 = t1209 * t1259;
t1392 = t1209 * t1265;
t1356 = t1261 * t1267 * t1434;
t1240 = t1252 * t1356;
t1220 = t1240 + t1246;
t1389 = t1220 * t1261;
t1388 = t1220 * t1267;
t1221 = -t1240 + t1246;
t1387 = t1221 * t1261;
t1386 = t1221 * t1267;
t1385 = t1241 * t1260;
t1384 = t1241 * t1266;
t1383 = t1246 * t1255;
t1382 = t1247 * t1255;
t1381 = t1252 * t1434;
t1253 = t1261 ^ 2;
t1254 = t1267 ^ 2;
t1373 = t1253 + t1254;
t1370 = -pkin(3) * t1266 - pkin(2);
t1369 = qJD(1) * t1382;
t1366 = t1253 * t1381;
t1365 = t1254 * t1381;
t1364 = t1260 * t986;
t1363 = t1266 * t986;
t1362 = t1260 * t1082;
t1361 = t1266 * t1082;
t1360 = t1260 * t1149;
t1359 = t1266 * t1149;
t1358 = t1261 * t1391;
t1357 = t1267 * t1391;
t657 = t1257 * t703 + t1263 * t704;
t737 = t1258 * t806 + t1264 * t807;
t1352 = -t1247 + t1412;
t971 = t1052 * t1260 + t1266 * t1053;
t1201 = -t1242 * t1262 - t1268 * t1243;
t1239 = qJDD(1) * t1268 - t1262 * t1434;
t1348 = -pkin(7) * t1239 - g(3) * t1262;
t1208 = -t1366 - t1430;
t1173 = -t1208 * t1261 - t1386;
t1347 = pkin(8) * t1173 - t1399;
t1227 = -t1365 - t1430;
t1180 = t1227 * t1267 - t1389;
t1346 = pkin(8) * t1180 + t1398;
t843 = t1259 * t924 - t1265 * t923;
t844 = t1259 * t923 + t1265 * t924;
t622 = t1258 * t657 + t1416;
t623 = t1264 * t657 - t1421;
t599 = -t1259 * t622 + t1265 * t623;
t596 = t1260 * t842 + t1266 * t599;
t598 = t1259 * t623 + t1265 * t622;
t1345 = t1261 * t596 - t1267 * t598;
t868 = -t1050 + t1282;
t781 = -t1257 * t864 + t1263 * t868;
t783 = -t1257 * t868 - t1263 * t864;
t719 = t1258 * t783 + t1264 * t781;
t721 = -t1258 * t781 + t1264 * t783;
t669 = -t1259 * t719 + t1265 * t721;
t933 = -t1075 - t1076;
t660 = t1260 * t933 + t1266 * t669;
t667 = t1259 * t721 + t1265 * t719;
t1344 = t1261 * t660 - t1267 * t667;
t863 = (qJD(6) + t1199) * t1079 + t1353;
t780 = -t1257 * t863 + t1263 * t1437;
t782 = -t1257 * t1437 - t1263 * t863;
t718 = t1258 * t782 + t1264 * t780;
t720 = -t1258 * t780 + t1264 * t782;
t668 = -t1259 * t718 + t1265 * t720;
t985 = -t1076 + t1075;
t664 = -t1260 * t985 + t1266 * t668;
t666 = -t1259 * t720 - t1265 * t718;
t1343 = t1261 * t664 + t1267 * t666;
t680 = t1265 * t737 - t1419;
t674 = t1260 * t927 + t1266 * t680;
t679 = t1259 * t737 + t1414;
t1342 = t1261 * t674 - t1267 * t679;
t890 = -qJD(6) * t1079 - t1353;
t859 = t1077 * t1397 + t1263 * t890;
t860 = t1077 * t1396 - t1257 * t890;
t776 = t1258 * t860 + t1264 * t859;
t778 = -t1258 * t859 + t1264 * t860;
t714 = -t1259 * t776 + t1265 * t778;
t709 = t1266 * t714 - t1364;
t712 = -t1259 * t778 - t1265 * t776;
t1341 = t1261 * t709 + t1267 * t712;
t861 = t1079 * t1396 - t1257 * t1282;
t862 = -t1079 * t1397 - t1263 * t1282;
t777 = t1258 * t862 + t1264 * t861;
t779 = -t1258 * t861 + t1264 * t862;
t715 = -t1259 * t777 + t1265 * t779;
t710 = t1266 * t715 + t1364;
t713 = -t1259 * t779 - t1265 * t777;
t1340 = t1261 * t710 + t1267 * t713;
t976 = -t1198 - t1075;
t899 = t1257 * t976 + t1447;
t900 = t1263 * t976 - t1450;
t815 = t1258 * t900 + t1264 * t899;
t816 = -t1258 * t899 + t1264 * t900;
t741 = -t1259 * t815 + t1265 * t816;
t717 = t1260 * t863 + t1266 * t741;
t740 = t1259 * t816 + t1265 * t815;
t1339 = t1261 * t717 - t1267 * t740;
t1028 = -t1076 - t1198;
t914 = t1028 * t1263 - t1422;
t915 = -t1028 * t1257 - t1417;
t832 = t1258 * t915 + t1264 * t914;
t833 = -t1258 * t914 + t1264 * t915;
t760 = -t1259 * t832 + t1265 * t833;
t729 = t1260 * t1437 + t1266 * t760;
t759 = t1259 * t833 + t1265 * t832;
t1338 = t1261 * t729 - t1267 * t759;
t1049 = -t1076 + t1198;
t916 = t1049 * t1263 + t1450;
t918 = -t1049 * t1257 + t1447;
t835 = t1258 * t918 + t1264 * t916;
t837 = -t1258 * t916 + t1264 * t918;
t763 = -t1259 * t835 + t1265 * t837;
t732 = -t1260 * t868 + t1266 * t763;
t761 = -t1259 * t837 - t1265 * t835;
t1337 = t1261 * t732 + t1267 * t761;
t1048 = t1075 - t1198;
t917 = t1048 * t1257 + t1417;
t919 = t1048 * t1263 - t1422;
t836 = t1258 * t919 + t1264 * t917;
t838 = -t1258 * t917 + t1264 * t919;
t764 = -t1259 * t836 + t1265 * t838;
t733 = -t1260 * t864 + t1266 * t764;
t762 = -t1259 * t838 - t1265 * t836;
t1336 = t1261 * t733 + t1267 * t762;
t1021 = -t1140 - t1433;
t884 = -t1258 * t953 + t1264 * t957;
t886 = -t1258 * t957 - t1264 * t953;
t803 = -t1259 * t884 + t1265 * t886;
t785 = t1021 * t1260 + t1266 * t803;
t801 = t1259 * t886 + t1265 * t884;
t1335 = t1261 * t785 - t1267 * t801;
t1081 = -t1140 + t1433;
t952 = (qJD(5) + t1204) * t1143 + t1351;
t883 = -t1258 * t952 + t1264 * t1442;
t885 = -t1258 * t1442 - t1264 * t952;
t802 = -t1259 * t883 + t1265 * t885;
t792 = -t1081 * t1260 + t1266 * t802;
t800 = -t1259 * t885 - t1265 * t883;
t1334 = t1261 * t792 + t1267 * t800;
t968 = (-t1077 * t1257 - t1079 * t1263) * t1199;
t969 = (-t1077 * t1263 + t1079 * t1257) * t1199;
t896 = t1258 * t969 + t1264 * t968;
t897 = -t1258 * t968 + t1264 * t969;
t814 = -t1259 * t896 + t1265 * t897;
t811 = t1260 * t1298 + t1266 * t814;
t813 = -t1259 * t897 - t1265 * t896;
t1333 = t1261 * t811 + t1267 * t813;
t820 = t1007 * t1260 + t1266 * t844;
t1332 = t1261 * t820 - t1267 * t843;
t1056 = -t1202 - t1433;
t960 = t1056 * t1258 + t1446;
t961 = t1056 * t1264 - t1449;
t889 = -t1259 * t960 + t1265 * t961;
t830 = t1260 * t952 + t1266 * t889;
t888 = t1259 * t961 + t1265 * t960;
t1331 = t1261 * t830 - t1267 * t888;
t1092 = -t1140 - t1202;
t981 = t1092 * t1264 - t1407;
t982 = -t1092 * t1258 - t1406;
t904 = -t1259 * t981 + t1265 * t982;
t841 = t1260 * t1442 + t1266 * t904;
t903 = t1259 * t982 + t1265 * t981;
t1330 = t1261 * t841 - t1267 * t903;
t1108 = -t1140 + t1202;
t987 = t1108 * t1264 + t1449;
t989 = -t1108 * t1258 + t1446;
t909 = -t1259 * t987 + t1265 * t989;
t848 = -t1260 * t957 + t1266 * t909;
t907 = -t1259 * t989 - t1265 * t987;
t1329 = t1261 * t848 + t1267 * t907;
t1107 = -t1202 + t1433;
t988 = t1107 * t1258 + t1406;
t990 = t1107 * t1264 - t1407;
t910 = -t1259 * t988 + t1265 * t990;
t849 = -t1260 * t953 + t1266 * t910;
t908 = -t1259 * t990 - t1265 * t988;
t1328 = t1261 * t849 + t1267 * t908;
t946 = t1141 * t1395 + t1264 * t993;
t947 = t1141 * t1394 - t1258 * t993;
t878 = -t1259 * t946 + t1265 * t947;
t855 = t1266 * t878 - t1362;
t876 = -t1259 * t947 - t1265 * t946;
t1327 = t1261 * t855 + t1267 * t876;
t948 = t1143 * t1394 + t1258 * t994;
t949 = -t1143 * t1395 + t1264 * t994;
t879 = -t1259 * t948 + t1265 * t949;
t856 = t1266 * t879 + t1362;
t877 = -t1259 * t949 - t1265 * t948;
t1326 = t1261 * t856 + t1267 * t877;
t1035 = (-t1141 * t1258 - t1143 * t1264) * t1204;
t1036 = (-t1141 * t1264 + t1143 * t1258) * t1204;
t945 = -t1035 * t1259 + t1036 * t1265;
t935 = t1164 * t1260 + t1266 * t945;
t944 = -t1035 * t1265 - t1036 * t1259;
t1325 = t1261 * t935 + t1267 * t944;
t1102 = t1183 + t1432;
t980 = -t1063 * t1265 - t1067 * t1259;
t939 = -t1102 * t1260 + t1266 * t980;
t978 = -t1063 * t1259 + t1067 * t1265;
t1324 = t1261 * t939 - t1267 * t978;
t1148 = -t1183 + t1432;
t1064 = (-qJD(4) - t1209) * t1185 + t1272;
t979 = t1064 * t1265 + t1068 * t1259;
t943 = -t1148 * t1260 + t1266 * t979;
t977 = -t1064 * t1259 + t1068 * t1265;
t1323 = t1261 * t943 + t1267 * t977;
t1115 = -t1207 - t1432;
t1024 = t1115 * t1259 + t1445;
t1025 = t1115 * t1265 - t1448;
t959 = t1025 * t1266 - t1064 * t1260;
t1322 = -t1024 * t1267 + t1261 * t959;
t1138 = -t1183 - t1207;
t1029 = t1138 * t1265 - t1405;
t1030 = -t1138 * t1259 - t1404;
t964 = t1030 * t1266 - t1068 * t1260;
t1321 = -t1029 * t1267 + t1261 * t964;
t1157 = -t1183 + t1207;
t1043 = -t1157 * t1265 - t1448;
t1045 = -t1157 * t1259 + t1445;
t974 = t1045 * t1266 - t1067 * t1260;
t1320 = t1043 * t1267 + t1261 * t974;
t1156 = -t1207 + t1432;
t1044 = -t1156 * t1259 - t1404;
t1046 = t1156 * t1265 - t1405;
t975 = t1046 * t1266 - t1063 * t1260;
t1319 = t1044 * t1267 + t1261 * t975;
t1318 = -t1122 * t1267 + t1261 * t971;
t1060 = t1184 * t1392 + t1259 * t1271;
t1015 = t1060 * t1266 - t1360;
t1059 = -t1184 * t1393 + t1265 * t1271;
t1317 = t1015 * t1261 + t1059 * t1267;
t1062 = -t1185 * t1393 - t1265 * t1355;
t1016 = t1062 * t1266 + t1360;
t1061 = -t1185 * t1392 + t1259 * t1355;
t1316 = t1016 * t1261 + t1061 * t1267;
t970 = -t1052 * t1266 + t1053 * t1260;
t1096 = (-t1184 * t1265 + t1185 * t1259) * t1209;
t1058 = t1096 * t1266 + t1165 * t1260;
t1095 = (t1184 * t1259 + t1185 * t1265) * t1209;
t1315 = t1058 * t1261 + t1095 * t1267;
t1071 = -t1134 * t1260 - t1266 * t1444;
t1175 = -t1212 + t1211;
t1314 = t1071 * t1261 + t1175 * t1267;
t1131 = t1354 + t1390;
t1136 = t1195 - t1167;
t1072 = -t1131 * t1266 - t1136 * t1260;
t1154 = t1211 + t1212;
t1313 = t1072 * t1261 + t1154 * t1267;
t1170 = -t1431 - t1211;
t1099 = t1170 * t1266 - t1440;
t1312 = t1099 * t1261 - t1267 * t1444;
t1176 = -t1212 - t1431;
t1105 = -t1176 * t1260 + t1400;
t1311 = t1105 * t1261 - t1134 * t1267;
t1189 = -t1212 + t1431;
t1113 = -t1189 * t1260 + t1439;
t1310 = t1113 * t1261 + t1136 * t1267;
t1188 = t1211 - t1431;
t1114 = t1188 * t1266 + t1401;
t1309 = t1114 * t1261 + t1131 * t1267;
t1171 = g(3) * t1379 + t1350;
t1172 = t1267 * t1219 + t1273;
t1308 = -t1171 * t1267 + t1172 * t1261;
t1103 = t1171 * t1261 + t1172 * t1267;
t1231 = t1247 * t1367;
t1191 = t1231 + t1223;
t1230 = t1247 * t1368;
t1194 = -t1230 - t1281;
t1307 = t1191 * t1267 + t1194 * t1261;
t1192 = -t1231 + t1223;
t1193 = t1230 - t1281;
t1306 = -t1192 * t1267 + t1193 * t1261;
t1305 = t1208 * t1267 - t1387;
t1225 = -t1366 + t1430;
t1304 = t1225 * t1267 + t1389;
t1303 = t1227 * t1261 + t1388;
t1226 = t1365 - t1430;
t1302 = t1226 * t1261 + t1386;
t1200 = t1242 * t1268 - t1262 * t1243;
t1126 = -t1213 * t1384 + t1260 * t1354;
t1301 = t1126 * t1261 + t1357;
t1128 = t1167 * t1266 + t1215 * t1385;
t1300 = t1128 * t1261 - t1357;
t646 = -pkin(5) * t842 + pkin(12) * t657;
t593 = -pkin(4) * t842 + pkin(11) * t623 - pkin(12) * t1421 + t1264 * t646;
t597 = -pkin(11) * t622 - pkin(12) * t1416 - t1258 * t646;
t575 = -pkin(10) * t598 - t1259 * t593 + t1265 * t597;
t587 = -pkin(3) * t598 - pkin(4) * t622 - pkin(5) * t656;
t595 = t1260 * t599 - t1266 * t842;
t569 = -pkin(9) * t595 - t1260 * t587 + t1266 * t575;
t573 = -pkin(2) * t595 + pkin(3) * t842 - pkin(10) * t599 - t1259 * t597 - t1265 * t593;
t584 = t1261 * t598 + t1267 * t596;
t1297 = pkin(8) * t584 + t1261 * t569 + t1267 * t573;
t641 = -pkin(5) * t933 + pkin(12) * t783 + t657;
t644 = -pkin(12) * t781 - t656;
t607 = -pkin(4) * t933 + pkin(11) * t721 + t1258 * t644 + t1264 * t641;
t608 = -pkin(11) * t719 - t1258 * t641 + t1264 * t644;
t588 = -pkin(10) * t667 - t1259 * t607 + t1265 * t608;
t635 = -pkin(3) * t667 - pkin(4) * t719 - pkin(5) * t781;
t659 = t1260 * t669 - t1266 * t933;
t582 = -pkin(9) * t659 - t1260 * t635 + t1266 * t588;
t585 = -pkin(2) * t659 + pkin(3) * t933 - pkin(10) * t669 - t1259 * t608 - t1265 * t607;
t626 = t1261 * t667 + t1267 * t660;
t1296 = pkin(8) * t626 + t1261 * t582 + t1267 * t585;
t724 = -pkin(4) * t927 + pkin(11) * t737;
t637 = -pkin(10) * t679 - pkin(11) * t1414 - t1259 * t724;
t647 = -pkin(3) * t679 - pkin(4) * t736;
t673 = t1260 * t680 - t1266 * t927;
t603 = -pkin(9) * t673 - t1260 * t647 + t1266 * t637;
t615 = -pkin(2) * t673 + pkin(3) * t927 - pkin(10) * t680 + pkin(11) * t1419 - t1265 * t724;
t636 = t1261 * t679 + t1267 * t674;
t1295 = pkin(8) * t636 + t1261 * t603 + t1267 * t615;
t747 = -pkin(5) * t863 + pkin(12) * t900 - t1418;
t790 = -pkin(12) * t899 + t1423;
t671 = -pkin(4) * t863 + pkin(11) * t816 + t1258 * t790 + t1264 * t747;
t685 = -pkin(11) * t815 - t1258 * t747 + t1264 * t790;
t627 = -pkin(10) * t740 - t1259 * t671 + t1265 * t685;
t648 = -pkin(3) * t740 - pkin(4) * t815 - pkin(5) * t899 + t703;
t716 = t1260 * t741 - t1266 * t863;
t604 = -pkin(9) * t716 - t1260 * t648 + t1266 * t627;
t614 = -pkin(2) * t716 + pkin(3) * t863 - pkin(10) * t741 - t1259 * t685 - t1265 * t671;
t675 = t1261 * t740 + t1267 * t717;
t1294 = pkin(8) * t675 + t1261 * t604 + t1267 * t614;
t752 = -pkin(5) * t1437 + pkin(12) * t915 + t1423;
t796 = -pkin(12) * t914 + t1418;
t678 = -pkin(4) * t1437 + pkin(11) * t833 + t1258 * t796 + t1264 * t752;
t689 = -pkin(11) * t832 - t1258 * t752 + t1264 * t796;
t632 = -pkin(10) * t759 - t1259 * t678 + t1265 * t689;
t658 = -pkin(3) * t759 - pkin(4) * t832 - pkin(5) * t914 + t704;
t728 = t1260 * t760 - t1266 * t1437;
t606 = -pkin(9) * t728 - t1260 * t658 + t1266 * t632;
t618 = -pkin(2) * t728 + pkin(3) * t1437 - pkin(10) * t760 - t1259 * t689 - t1265 * t678;
t686 = t1261 * t759 + t1267 * t729;
t1293 = pkin(8) * t686 + t1261 * t606 + t1267 * t618;
t706 = -pkin(4) * t1021 + pkin(11) * t886 + t737;
t711 = -pkin(11) * t884 - t736;
t645 = -pkin(10) * t801 - t1259 * t706 + t1265 * t711;
t756 = -pkin(3) * t801 - pkin(4) * t884;
t784 = -t1021 * t1266 + t1260 * t803;
t633 = -pkin(9) * t784 - t1260 * t756 + t1266 * t645;
t640 = -pkin(2) * t784 + pkin(3) * t1021 - pkin(10) * t803 - t1259 * t711 - t1265 * t706;
t725 = t1261 * t801 + t1267 * t785;
t1292 = pkin(8) * t725 + t1261 * t633 + t1267 * t640;
t822 = -pkin(4) * t952 + pkin(11) * t961 - t1415;
t871 = -pkin(11) * t960 + t1420;
t739 = -pkin(10) * t888 - t1259 * t822 + t1265 * t871;
t748 = -pkin(3) * t888 - pkin(4) * t960 + t806;
t829 = t1260 * t889 - t1266 * t952;
t672 = -pkin(9) * t829 - t1260 * t748 + t1266 * t739;
t700 = -pkin(2) * t829 + pkin(3) * t952 - pkin(10) * t889 - t1259 * t871 - t1265 * t822;
t773 = t1261 * t888 + t1267 * t830;
t1291 = pkin(8) * t773 + t1261 * t672 + t1267 * t700;
t828 = -pkin(4) * t1442 + pkin(11) * t982 + t1420;
t873 = -pkin(11) * t981 + t1415;
t746 = -pkin(10) * t903 - t1259 * t828 + t1265 * t873;
t753 = -pkin(3) * t903 - pkin(4) * t981 + t807;
t840 = t1260 * t904 - t1266 * t1442;
t677 = -pkin(9) * t840 - t1260 * t753 + t1266 * t746;
t705 = -pkin(2) * t840 + pkin(3) * t1442 - pkin(10) * t904 - t1259 * t873 - t1265 * t828;
t793 = t1261 * t903 + t1267 * t841;
t1290 = pkin(8) * t793 + t1261 * t677 + t1267 * t705;
t819 = -t1007 * t1266 + t1260 * t844;
t726 = -pkin(9) * t819 + (-pkin(10) * t1266 + t1427) * t843;
t751 = -pkin(2) * t819 + pkin(3) * t1007 - pkin(10) * t844;
t758 = t1261 * t843 + t1267 * t820;
t1289 = pkin(8) * t758 + t1261 * t726 + t1267 * t751;
t817 = -pkin(10) * t978 - t843;
t938 = t1102 * t1266 + t1260 * t980;
t765 = -pkin(9) * t938 + t1266 * t817 + t1427 * t978;
t774 = -pkin(2) * t938 - pkin(3) * t1102 - pkin(10) * t980 - t844;
t887 = t1261 * t978 + t1267 * t939;
t1288 = pkin(8) * t887 + t1261 * t765 + t1267 * t774;
t895 = -pkin(3) * t1024 + t923;
t928 = -pkin(10) * t1024 + t1409;
t958 = t1025 * t1260 + t1064 * t1266;
t799 = -pkin(9) * t958 - t1260 * t895 + t1266 * t928;
t845 = -pkin(2) * t958 - pkin(3) * t1064 - pkin(10) * t1025 + t1408;
t911 = t1024 * t1261 + t1267 * t959;
t1287 = pkin(8) * t911 + t1261 * t799 + t1267 * t845;
t898 = -pkin(3) * t1029 + t924;
t932 = -pkin(10) * t1029 + t1408;
t963 = t1030 * t1260 + t1068 * t1266;
t804 = -pkin(9) * t963 - t1260 * t898 + t1266 * t932;
t850 = -pkin(2) * t963 - pkin(3) * t1068 - pkin(10) * t1030 - t1409;
t913 = t1029 * t1261 + t1267 * t964;
t1286 = pkin(8) * t913 + t1261 * t804 + t1267 * t850;
t1098 = t1170 * t1260 + t1439;
t1034 = -pkin(9) * t1098 + t1403;
t1039 = t1099 * t1267 + t1261 * t1444;
t998 = -pkin(2) * t1098 + t1052;
t1285 = pkin(8) * t1039 + t1034 * t1261 + t1267 * t998;
t1104 = t1176 * t1266 + t1401;
t1001 = -pkin(2) * t1104 + t1053;
t1040 = -pkin(9) * t1104 + t1402;
t1041 = t1105 * t1267 + t1134 * t1261;
t1284 = pkin(8) * t1041 + t1001 * t1267 + t1040 * t1261;
t1150 = t1192 * t1261 + t1193 * t1267;
t1283 = pkin(8) * t1150 + t1103;
t1020 = t1072 * t1267 - t1154 * t1261;
t1070 = -t1131 * t1260 + t1136 * t1266;
t922 = -pkin(9) * t1070 - t970;
t1280 = pkin(8) * t1020 - t1070 * t1428 + t1261 * t922;
t936 = t1122 * t1261 + t1267 * t971;
t1279 = pkin(8) * t936 + t1349 * t970;
t1251 = t1255 * t1252;
t1238 = t1262 * qJDD(1) + t1268 * t1434;
t1229 = t1373 * t1381;
t1228 = (t1253 - t1254) * t1381;
t1224 = -pkin(7) * t1238 + g(3) * t1268;
t1196 = t1373 * t1369;
t1190 = (t1377 * t1410 + t1372) * t1255;
t1187 = t1223 * t1267 - t1253 * t1369;
t1186 = (-t1254 * t1247 * qJD(1) + t1261 * t1299) * t1255;
t1179 = t1226 * t1267 - t1387;
t1178 = -t1225 * t1261 + t1388;
t1169 = (t1223 * t1256 + (qJD(1) * t1251 + t1256 * t1382) * t1410) * t1261;
t1168 = -t1251 * t1356 + (-t1377 * t1411 + t1371) * t1256 * t1379;
t1152 = (t1213 * t1260 + t1215 * t1266) * t1241;
t1151 = -t1191 * t1261 + t1194 * t1267;
t1147 = t1194 * t1255 + t1256 * t1303;
t1146 = -t1193 * t1255 + t1256 * t1302;
t1145 = -t1192 * t1255 + t1256 * t1304;
t1144 = -t1194 * t1256 + t1255 * t1303;
t1130 = -t1190 * t1255 + t1256 * t1305;
t1129 = t1190 * t1256 + t1255 * t1305;
t1127 = t1167 * t1260 - t1215 * t1384;
t1125 = -t1213 * t1385 - t1266 * t1354;
t1124 = t1267 * t1153 + t1261 * t1276;
t1121 = -t1228 * t1255 + t1256 * t1307;
t1120 = t1229 * t1255 + t1256 * t1306;
t1119 = -t1229 * t1256 + t1255 * t1306;
t1112 = t1188 * t1260 - t1400;
t1111 = t1189 * t1266 + t1440;
t1094 = -t1262 * t1147 + t1180 * t1268;
t1093 = t1147 * t1268 + t1262 * t1180;
t1088 = t1128 * t1267 + t1358;
t1087 = t1126 * t1267 - t1358;
t1086 = -t1262 * t1130 + t1173 * t1268;
t1085 = t1130 * t1268 + t1262 * t1173;
t1084 = t1197 * t1255 + t1256 * t1308;
t1083 = -t1197 * t1256 + t1255 * t1308;
t1080 = -t1255 * t1152 + t1256 * t1443;
t1074 = -t1262 * t1120 + t1150 * t1268;
t1073 = t1120 * t1268 + t1262 * t1150;
t1069 = t1134 * t1266 - t1260 * t1444;
t1057 = t1096 * t1260 - t1165 * t1266;
t1055 = t1114 * t1267 - t1131 * t1261;
t1054 = t1113 * t1267 - t1136 * t1261;
t1042 = -t1399 + (-t1144 * t1255 - t1147 * t1256) * pkin(8);
t1038 = -t1398 + (-t1129 * t1255 - t1130 * t1256) * pkin(8);
t1037 = -pkin(1) * t1144 + t1171 * t1255 + t1256 * t1346;
t1027 = t1071 * t1267 - t1175 * t1261;
t1026 = -pkin(1) * t1129 + t1172 * t1255 + t1256 * t1347;
t1023 = -t1127 * t1255 + t1256 * t1300;
t1022 = -t1125 * t1255 + t1256 * t1301;
t1019 = pkin(8) * t1103 * t1256 - pkin(1) * t1083;
t1018 = -t1262 * t1084 + t1103 * t1268;
t1017 = t1084 * t1268 + t1262 * t1103;
t1014 = t1062 * t1260 - t1359;
t1013 = t1060 * t1260 + t1359;
t1009 = -pkin(1) * t1119 + t1256 * t1283;
t1006 = -pkin(2) * t1134 + pkin(9) * t1105 + t1403;
t1004 = -t1112 * t1255 + t1256 * t1309;
t1003 = -t1111 * t1255 + t1256 * t1310;
t1002 = (-t1083 * t1255 - t1084 * t1256) * pkin(8);
t1000 = -pkin(2) * t1444 + pkin(9) * t1099 - t1402;
t999 = (-t1119 * t1255 - t1120 * t1256) * pkin(8) - t1308;
t997 = -t1104 * t1255 + t1256 * t1311;
t996 = t1104 * t1256 + t1255 * t1311;
t995 = t1058 * t1267 - t1095 * t1261;
t984 = -t1098 * t1255 + t1256 * t1312;
t983 = t1098 * t1256 + t1255 * t1312;
t973 = t1046 * t1260 + t1063 * t1266;
t972 = t1045 * t1260 + t1067 * t1266;
t962 = -t1069 * t1255 + t1256 * t1314;
t951 = -t1070 * t1255 + t1256 * t1313;
t950 = t1070 * t1256 + t1255 * t1313;
t942 = t1148 * t1266 + t1260 * t979;
t941 = t1016 * t1267 - t1061 * t1261;
t940 = t1015 * t1267 - t1059 * t1261;
t937 = -pkin(2) * t1122 + pkin(9) * t971;
t934 = -t1164 * t1266 + t1260 * t945;
t931 = -t1057 * t1255 + t1256 * t1315;
t930 = t1041 * t1268 - t1262 * t997;
t929 = t1262 * t1041 + t1268 * t997;
t926 = t1039 * t1268 - t1262 * t984;
t925 = t1262 * t1039 + t1268 * t984;
t921 = -t1044 * t1261 + t1267 * t975;
t920 = -t1043 * t1261 + t1267 * t974;
t912 = pkin(2) * t1154 + pkin(9) * t1072 + t971;
t906 = t1020 * t1268 - t1262 * t951;
t905 = t1262 * t1020 + t1268 * t951;
t902 = -t1014 * t1255 + t1256 * t1316;
t901 = -t1013 * t1255 + t1256 * t1317;
t892 = -t1261 * t977 + t1267 * t943;
t875 = -t1255 * t970 + t1256 * t1318;
t874 = t1255 * t1318 + t1256 * t970;
t872 = -t1261 * t944 + t1267 * t935;
t870 = -t1255 * t973 + t1256 * t1319;
t869 = -t1255 * t972 + t1256 * t1320;
t858 = -t1255 * t963 + t1256 * t1321;
t857 = t1255 * t1321 + t1256 * t963;
t854 = t1260 * t879 - t1361;
t853 = t1260 * t878 + t1361;
t852 = -t1255 * t958 + t1256 * t1322;
t851 = t1255 * t1322 + t1256 * t958;
t847 = t1260 * t910 + t1266 * t953;
t846 = t1260 * t909 + t1266 * t957;
t839 = -t1001 * t1261 + t1040 * t1267 + (-t1255 * t996 - t1256 * t997) * pkin(8);
t834 = t1034 * t1267 - t1261 * t998 + (-t1255 * t983 - t1256 * t984) * pkin(8);
t831 = -t1255 * t942 + t1256 * t1323;
t827 = -pkin(1) * t996 - t1006 * t1255 + t1256 * t1284;
t826 = -t1255 * t938 + t1256 * t1324;
t825 = t1255 * t1324 + t1256 * t938;
t824 = -t1262 * t875 + t1268 * t936;
t823 = t1262 * t936 + t1268 * t875;
t821 = -pkin(1) * t983 - t1000 * t1255 + t1256 * t1285;
t818 = -t1255 * t934 + t1256 * t1325;
t812 = t1070 * t1429 + t1267 * t922 + (-t1255 * t950 - t1256 * t951) * pkin(8);
t810 = t1260 * t814 - t1266 * t1298;
t809 = -t1262 * t858 + t1268 * t913;
t808 = t1262 * t913 + t1268 * t858;
t798 = -t1262 * t852 + t1268 * t911;
t797 = t1262 * t911 + t1268 * t852;
t795 = -t1261 * t908 + t1267 * t849;
t794 = -t1261 * t907 + t1267 * t848;
t791 = t1081 * t1266 + t1260 * t802;
t789 = -pkin(2) * t1029 + pkin(9) * t964 + t1260 * t932 + t1266 * t898;
t788 = -t1261 * t877 + t1267 * t856;
t787 = -t1261 * t876 + t1267 * t855;
t786 = -pkin(2) * t1024 + pkin(9) * t959 + t1260 * t928 + t1266 * t895;
t775 = -pkin(1) * t950 - t1255 * t912 + t1256 * t1280;
t772 = -t1262 * t826 + t1268 * t887;
t771 = t1262 * t887 + t1268 * t826;
t757 = (-t1425 + t1429) * t970 + (-t1255 * t874 - t1256 * t875) * pkin(8);
t755 = -pkin(1) * t874 - t1255 * t937 + t1256 * t1279;
t754 = pkin(9) * t939 + t1260 * t817 + t1370 * t978;
t750 = -t1255 * t847 + t1256 * t1328;
t749 = -t1255 * t846 + t1256 * t1329;
t745 = -t1255 * t854 + t1256 * t1326;
t744 = -t1255 * t853 + t1256 * t1327;
t743 = -t1255 * t840 + t1256 * t1330;
t742 = t1255 * t1330 + t1256 * t840;
t738 = -t1261 * t813 + t1267 * t811;
t735 = -t1255 * t829 + t1256 * t1331;
t734 = t1255 * t1331 + t1256 * t829;
t731 = t1260 * t764 + t1266 * t864;
t730 = t1260 * t763 + t1266 * t868;
t727 = -t1261 * t800 + t1267 * t792;
t723 = -t1255 * t819 + t1256 * t1332;
t722 = t1255 * t1332 + t1256 * t819;
t708 = t1260 * t715 - t1363;
t707 = t1260 * t714 + t1363;
t701 = pkin(9) * t820 + (-pkin(10) * t1260 + t1370) * t843;
t699 = -t1261 * t850 + t1267 * t804 + (-t1255 * t857 - t1256 * t858) * pkin(8);
t698 = -t1262 * t743 + t1268 * t793;
t697 = t1262 * t793 + t1268 * t743;
t696 = -t1255 * t810 + t1256 * t1333;
t695 = -t1261 * t845 + t1267 * t799 + (-t1255 * t851 - t1256 * t852) * pkin(8);
t694 = -t1262 * t735 + t1268 * t773;
t693 = t1262 * t773 + t1268 * t735;
t692 = -t1255 * t791 + t1256 * t1334;
t691 = -t1255 * t784 + t1256 * t1335;
t690 = t1255 * t1335 + t1256 * t784;
t688 = -t1261 * t762 + t1267 * t733;
t687 = -t1261 * t761 + t1267 * t732;
t684 = -pkin(1) * t857 - t1255 * t789 + t1256 * t1286;
t683 = -t1262 * t723 + t1268 * t758;
t682 = t1262 * t758 + t1268 * t723;
t681 = -pkin(1) * t851 - t1255 * t786 + t1256 * t1287;
t676 = -t1261 * t774 + t1267 * t765 + (-t1255 * t825 - t1256 * t826) * pkin(8);
t670 = -pkin(2) * t903 + pkin(9) * t841 + t1260 * t746 + t1266 * t753;
t665 = -pkin(2) * t888 + pkin(9) * t830 + t1260 * t739 + t1266 * t748;
t663 = t1260 * t668 + t1266 * t985;
t662 = -t1261 * t713 + t1267 * t710;
t661 = -t1261 * t712 + t1267 * t709;
t655 = -t1255 * t731 + t1256 * t1336;
t654 = -t1255 * t730 + t1256 * t1337;
t653 = -pkin(1) * t825 - t1255 * t754 + t1256 * t1288;
t652 = -t1262 * t691 + t1268 * t725;
t651 = t1262 * t725 + t1268 * t691;
t650 = -t1255 * t728 + t1256 * t1338;
t649 = t1255 * t1338 + t1256 * t728;
t643 = -t1255 * t716 + t1256 * t1339;
t642 = t1255 * t1339 + t1256 * t716;
t639 = -t1255 * t708 + t1256 * t1340;
t638 = -t1255 * t707 + t1256 * t1341;
t634 = -t1261 * t751 + t1267 * t726 + (-t1255 * t722 - t1256 * t723) * pkin(8);
t631 = -t1262 * t650 + t1268 * t686;
t630 = t1262 * t686 + t1268 * t650;
t629 = -t1261 * t666 + t1267 * t664;
t628 = -pkin(2) * t801 + pkin(9) * t785 + t1260 * t645 + t1266 * t756;
t625 = -t1261 * t705 + t1267 * t677 + (-t1255 * t742 - t1256 * t743) * pkin(8);
t624 = -pkin(1) * t722 - t1255 * t701 + t1256 * t1289;
t621 = -t1262 * t643 + t1268 * t675;
t620 = t1262 * t675 + t1268 * t643;
t619 = -t1261 * t700 + t1267 * t672 + (-t1255 * t734 - t1256 * t735) * pkin(8);
t617 = -t1255 * t673 + t1256 * t1342;
t616 = t1255 * t1342 + t1256 * t673;
t613 = -pkin(1) * t742 - t1255 * t670 + t1256 * t1290;
t612 = -t1255 * t663 + t1256 * t1343;
t611 = -t1255 * t659 + t1256 * t1344;
t610 = t1255 * t1344 + t1256 * t659;
t609 = -pkin(1) * t734 - t1255 * t665 + t1256 * t1291;
t605 = -pkin(2) * t759 + pkin(9) * t729 + t1260 * t632 + t1266 * t658;
t602 = -pkin(2) * t740 + pkin(9) * t717 + t1260 * t627 + t1266 * t648;
t601 = -t1262 * t617 + t1268 * t636;
t600 = t1262 * t636 + t1268 * t617;
t594 = -pkin(2) * t679 + pkin(9) * t674 + t1260 * t637 + t1266 * t647;
t592 = -t1261 * t640 + t1267 * t633 + (-t1255 * t690 - t1256 * t691) * pkin(8);
t591 = -t1262 * t611 + t1268 * t626;
t590 = t1262 * t626 + t1268 * t611;
t589 = -pkin(1) * t690 - t1255 * t628 + t1256 * t1292;
t586 = -t1261 * t618 + t1267 * t606 + (-t1255 * t649 - t1256 * t650) * pkin(8);
t583 = -t1261 * t614 + t1267 * t604 + (-t1255 * t642 - t1256 * t643) * pkin(8);
t581 = -pkin(1) * t649 - t1255 * t605 + t1256 * t1293;
t580 = -pkin(2) * t667 + pkin(9) * t660 + t1260 * t588 + t1266 * t635;
t579 = -t1261 * t615 + t1267 * t603 + (-t1255 * t616 - t1256 * t617) * pkin(8);
t578 = -pkin(1) * t642 - t1255 * t602 + t1256 * t1294;
t577 = -t1255 * t595 + t1256 * t1345;
t576 = t1255 * t1345 + t1256 * t595;
t574 = -pkin(1) * t616 - t1255 * t594 + t1256 * t1295;
t572 = -t1262 * t577 + t1268 * t584;
t571 = t1262 * t584 + t1268 * t577;
t570 = -t1261 * t585 + t1267 * t582 + (-t1255 * t610 - t1256 * t611) * pkin(8);
t568 = -pkin(2) * t598 + pkin(9) * t596 + t1260 * t575 + t1266 * t587;
t567 = -pkin(1) * t610 - t1255 * t580 + t1256 * t1296;
t566 = -t1261 * t573 + t1267 * t569 + (-t1255 * t576 - t1256 * t577) * pkin(8);
t565 = -pkin(1) * t576 - t1255 * t568 + t1256 * t1297;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1238, -t1239, 0, t1201, 0, 0, 0, 0, 0, 0, t1094, t1086, t1074, t1018, 0, 0, 0, 0, 0, 0, t926, t930, t906, t824, 0, 0, 0, 0, 0, 0, t798, t809, t772, t683, 0, 0, 0, 0, 0, 0, t694, t698, t652, t601, 0, 0, 0, 0, 0, 0, t621, t631, t591, t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1239, -t1238, 0, t1200, 0, 0, 0, 0, 0, 0, t1093, t1085, t1073, t1017, 0, 0, 0, 0, 0, 0, t925, t929, t905, t823, 0, 0, 0, 0, 0, 0, t797, t808, t771, t682, 0, 0, 0, 0, 0, 0, t693, t697, t651, t600, 0, 0, 0, 0, 0, 0, t620, t630, t590, t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1144, t1129, t1119, t1083, 0, 0, 0, 0, 0, 0, t983, t996, t950, t874, 0, 0, 0, 0, 0, 0, t851, t857, t825, t722, 0, 0, 0, 0, 0, 0, t734, t742, t690, t616, 0, 0, 0, 0, 0, 0, t642, t649, t610, t576; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1239, 0, -t1238, 0, t1348, -t1224, -t1200, -pkin(7) * t1200, -t1262 * t1169 + t1187 * t1268, -t1262 * t1121 + t1151 * t1268, -t1262 * t1145 + t1178 * t1268, -t1262 * t1168 + t1186 * t1268, -t1262 * t1146 + t1179 * t1268, t1196 * t1268 + t1262 * t1383, -pkin(7) * t1093 - t1262 * t1037 + t1042 * t1268, -pkin(7) * t1085 - t1262 * t1026 + t1038 * t1268, -pkin(7) * t1073 - t1262 * t1009 + t1268 * t999, -pkin(7) * t1017 + t1002 * t1268 - t1262 * t1019, -t1262 * t1023 + t1088 * t1268, t1027 * t1268 - t1262 * t962, -t1262 * t1003 + t1054 * t1268, -t1262 * t1022 + t1087 * t1268, -t1262 * t1004 + t1055 * t1268, -t1262 * t1080 + t1124 * t1268, -pkin(7) * t925 - t1262 * t821 + t1268 * t834, -pkin(7) * t929 - t1262 * t827 + t1268 * t839, -pkin(7) * t905 - t1262 * t775 + t1268 * t812, -pkin(7) * t823 - t1262 * t755 + t1268 * t757, -t1262 * t902 + t1268 * t941, -t1262 * t831 + t1268 * t892, -t1262 * t869 + t1268 * t920, -t1262 * t901 + t1268 * t940, -t1262 * t870 + t1268 * t921, -t1262 * t931 + t1268 * t995, -pkin(7) * t797 - t1262 * t681 + t1268 * t695, -pkin(7) * t808 - t1262 * t684 + t1268 * t699, -pkin(7) * t771 - t1262 * t653 + t1268 * t676, -pkin(7) * t682 - t1262 * t624 + t1268 * t634, -t1262 * t745 + t1268 * t788, -t1262 * t692 + t1268 * t727, -t1262 * t749 + t1268 * t794, -t1262 * t744 + t1268 * t787, -t1262 * t750 + t1268 * t795, -t1262 * t818 + t1268 * t872, -pkin(7) * t693 - t1262 * t609 + t1268 * t619, -pkin(7) * t697 - t1262 * t613 + t1268 * t625, -pkin(7) * t651 - t1262 * t589 + t1268 * t592, -pkin(7) * t600 - t1262 * t574 + t1268 * t579, -t1262 * t639 + t1268 * t662, -t1262 * t612 + t1268 * t629, -t1262 * t654 + t1268 * t687, -t1262 * t638 + t1268 * t661, -t1262 * t655 + t1268 * t688, -t1262 * t696 + t1268 * t738, -pkin(7) * t620 - t1262 * t578 + t1268 * t583, -pkin(7) * t630 - t1262 * t581 + t1268 * t586, -pkin(7) * t590 - t1262 * t567 + t1268 * t570, -pkin(7) * t571 - t1262 * t565 + t1268 * t566; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1238, 0, t1239, 0, t1224, t1348, t1201, pkin(7) * t1201, t1169 * t1268 + t1262 * t1187, t1121 * t1268 + t1262 * t1151, t1145 * t1268 + t1262 * t1178, t1168 * t1268 + t1262 * t1186, t1146 * t1268 + t1262 * t1179, t1262 * t1196 - t1268 * t1383, pkin(7) * t1094 + t1037 * t1268 + t1262 * t1042, pkin(7) * t1086 + t1026 * t1268 + t1262 * t1038, pkin(7) * t1074 + t1009 * t1268 + t1262 * t999, pkin(7) * t1018 + t1262 * t1002 + t1019 * t1268, t1023 * t1268 + t1262 * t1088, t1262 * t1027 + t1268 * t962, t1003 * t1268 + t1262 * t1054, t1022 * t1268 + t1262 * t1087, t1004 * t1268 + t1262 * t1055, t1080 * t1268 + t1262 * t1124, pkin(7) * t926 + t1262 * t834 + t1268 * t821, pkin(7) * t930 + t1262 * t839 + t1268 * t827, pkin(7) * t906 + t1262 * t812 + t1268 * t775, pkin(7) * t824 + t1262 * t757 + t1268 * t755, t1262 * t941 + t1268 * t902, t1262 * t892 + t1268 * t831, t1262 * t920 + t1268 * t869, t1262 * t940 + t1268 * t901, t1262 * t921 + t1268 * t870, t1262 * t995 + t1268 * t931, pkin(7) * t798 + t1262 * t695 + t1268 * t681, pkin(7) * t809 + t1262 * t699 + t1268 * t684, pkin(7) * t772 + t1262 * t676 + t1268 * t653, pkin(7) * t683 + t1262 * t634 + t1268 * t624, t1262 * t788 + t1268 * t745, t1262 * t727 + t1268 * t692, t1262 * t794 + t1268 * t749, t1262 * t787 + t1268 * t744, t1262 * t795 + t1268 * t750, t1262 * t872 + t1268 * t818, pkin(7) * t694 + t1262 * t619 + t1268 * t609, pkin(7) * t698 + t1262 * t625 + t1268 * t613, pkin(7) * t652 + t1262 * t592 + t1268 * t589, pkin(7) * t601 + t1262 * t579 + t1268 * t574, t1262 * t662 + t1268 * t639, t1262 * t629 + t1268 * t612, t1262 * t687 + t1268 * t654, t1262 * t661 + t1268 * t638, t1262 * t688 + t1268 * t655, t1262 * t738 + t1268 * t696, pkin(7) * t621 + t1262 * t583 + t1268 * t578, pkin(7) * t631 + t1262 * t586 + t1268 * t581, pkin(7) * t591 + t1262 * t570 + t1268 * t567, pkin(7) * t572 + t1262 * t566 + t1268 * t565; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1242, t1243, 0, 0, (-t1252 * t1352 * t1410 + t1223 * t1255) * t1261, t1228 * t1256 + t1255 * t1307, t1192 * t1256 + t1255 * t1304, (t1371 + (-qJD(2) + t1352) * t1411) * t1252 * t1267, t1193 * t1256 + t1255 * t1302, t1256 * t1246, pkin(1) * t1147 - t1171 * t1256 + t1255 * t1346, pkin(1) * t1130 - t1172 * t1256 + t1255 * t1347, pkin(1) * t1120 + t1255 * t1283, pkin(1) * t1084 + t1103 * t1426, t1127 * t1256 + t1255 * t1300, t1069 * t1256 + t1255 * t1314, t1111 * t1256 + t1255 * t1310, t1125 * t1256 + t1255 * t1301, t1112 * t1256 + t1255 * t1309, t1256 * t1152 + t1255 * t1443, pkin(1) * t984 + t1000 * t1256 + t1255 * t1285, pkin(1) * t997 + t1006 * t1256 + t1255 * t1284, pkin(1) * t951 + t1255 * t1280 + t1256 * t912, pkin(1) * t875 + t1255 * t1279 + t1256 * t937, t1014 * t1256 + t1255 * t1316, t1255 * t1323 + t1256 * t942, t1255 * t1320 + t1256 * t972, t1013 * t1256 + t1255 * t1317, t1255 * t1319 + t1256 * t973, t1057 * t1256 + t1255 * t1315, pkin(1) * t852 + t1255 * t1287 + t1256 * t786, pkin(1) * t858 + t1255 * t1286 + t1256 * t789, pkin(1) * t826 + t1255 * t1288 + t1256 * t754, pkin(1) * t723 + t1255 * t1289 + t1256 * t701, t1255 * t1326 + t1256 * t854, t1255 * t1334 + t1256 * t791, t1255 * t1329 + t1256 * t846, t1255 * t1327 + t1256 * t853, t1255 * t1328 + t1256 * t847, t1255 * t1325 + t1256 * t934, pkin(1) * t735 + t1255 * t1291 + t1256 * t665, pkin(1) * t743 + t1255 * t1290 + t1256 * t670, pkin(1) * t691 + t1255 * t1292 + t1256 * t628, pkin(1) * t617 + t1255 * t1295 + t1256 * t594, t1255 * t1340 + t1256 * t708, t1255 * t1343 + t1256 * t663, t1255 * t1337 + t1256 * t730, t1255 * t1341 + t1256 * t707, t1255 * t1336 + t1256 * t731, t1255 * t1333 + t1256 * t810, pkin(1) * t643 + t1255 * t1294 + t1256 * t602, pkin(1) * t650 + t1255 * t1293 + t1256 * t605, pkin(1) * t611 + t1255 * t1296 + t1256 * t580, pkin(1) * t577 + t1255 * t1297 + t1256 * t568;];
tauB_reg  = t1;
