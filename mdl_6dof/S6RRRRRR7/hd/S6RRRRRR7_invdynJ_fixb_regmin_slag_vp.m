% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x38]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:47
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR7_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR7_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR7_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR7_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR7_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR7_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:41:10
% EndTime: 2019-03-10 04:41:56
% DurationCPUTime: 23.14s
% Computational Cost: add. (24060->809), mult. (57271->1133), div. (0->0), fcn. (47615->18), ass. (0->363)
t371 = sin(pkin(6));
t382 = cos(qJ(2));
t500 = qJD(1) * t382;
t475 = t371 * t500;
t334 = -qJD(3) + t475;
t376 = sin(qJ(2));
t553 = cos(pkin(6));
t454 = t553 * qJD(1);
t440 = pkin(1) * t454;
t287 = pkin(8) * t475 + t376 * t440;
t375 = sin(qJ(3));
t381 = cos(qJ(3));
t615 = t287 + t334 * (pkin(3) * t375 - pkin(10) * t381);
t374 = sin(qJ(4));
t380 = cos(qJ(4));
t501 = qJD(1) * t371;
t476 = t376 * t501;
t259 = t374 * t381 * t475 - t380 * t476;
t495 = qJD(3) * t381;
t611 = -t374 * t495 + t259;
t492 = qJD(4) * t380;
t614 = t375 * t492 - t611;
t522 = t381 * t382;
t260 = (t374 * t376 + t380 * t522) * t501;
t426 = t380 * t495 - t260;
t493 = qJD(4) * t374;
t613 = -t375 * t493 + t426;
t420 = t454 + qJD(2);
t271 = t375 * t420 + t381 * t476;
t214 = t271 * t374 + t380 * t334;
t216 = t271 * t380 - t334 * t374;
t373 = sin(qJ(5));
t379 = cos(qJ(5));
t130 = t379 * t214 + t216 * t373;
t372 = sin(qJ(6));
t378 = cos(qJ(6));
t422 = t214 * t373 - t379 * t216;
t423 = t130 * t372 + t378 * t422;
t70 = t378 * t130 - t372 * t422;
t601 = t423 * t70;
t497 = qJD(3) * t375;
t567 = pkin(9) * t374;
t612 = -t615 * t380 + t497 * t567;
t442 = t375 * t476;
t269 = -t381 * t420 + t442;
t573 = qJD(4) + qJD(5);
t610 = t269 + t573;
t284 = -pkin(8) * t476 + t382 * t440;
t431 = pkin(2) * t376 - pkin(9) * t382;
t285 = t431 * t501;
t508 = t381 * t284 + t375 * t285;
t191 = pkin(10) * t476 + t508;
t328 = -pkin(3) * t381 - pkin(10) * t375 - pkin(2);
t609 = t380 * t191 - t328 * t492 + t615 * t374;
t595 = t423 ^ 2 - t70 ^ 2;
t401 = qJD(3) * t420;
t446 = t553 * qJDD(1);
t416 = t446 + qJDD(2);
t486 = qJDD(1) * t376;
t463 = t371 * t486;
t487 = qJD(1) * qJD(2);
t465 = t382 * t487;
t597 = t371 * t465 + t463;
t175 = -qJD(3) * t442 + t375 * t416 + (t401 + t597) * t381;
t485 = qJDD(1) * t382;
t349 = t371 * t485;
t464 = t376 * t487;
t439 = t371 * t464;
t283 = qJDD(3) - t349 + t439;
t107 = t380 * t175 - t271 * t493 + t374 * t283 - t334 * t492;
t108 = qJD(4) * t216 + t175 * t374 - t380 * t283;
t388 = qJD(5) * t422 - t107 * t373 - t379 * t108;
t490 = qJD(5) * t379;
t491 = qJD(5) * t373;
t45 = t379 * t107 - t373 * t108 - t214 * t490 - t216 * t491;
t488 = qJD(6) * t378;
t489 = qJD(6) * t372;
t12 = -t130 * t488 + t372 * t388 + t378 * t45 + t422 * t489;
t262 = qJD(4) + t269;
t255 = qJD(5) + t262;
t253 = qJD(6) + t255;
t593 = t253 * t70 + t12;
t377 = sin(qJ(1));
t457 = t376 * t553;
t568 = cos(qJ(1));
t298 = -t377 * t457 + t568 * t382;
t530 = t371 * t375;
t245 = t298 * t381 + t377 * t530;
t456 = t382 * t553;
t297 = t568 * t376 + t377 * t456;
t370 = qJ(4) + qJ(5);
t365 = qJ(6) + t370;
t358 = sin(t365);
t359 = cos(t365);
t174 = t245 * t359 + t297 * t358;
t251 = -pkin(2) * t420 - t284;
t145 = t269 * pkin(3) - t271 * pkin(10) + t251;
t252 = pkin(9) * t420 + t287;
t418 = -pkin(2) * t382 - pkin(9) * t376 - pkin(1);
t282 = t418 * t371;
t261 = qJD(1) * t282;
t170 = t381 * t252 + t375 * t261;
t150 = -pkin(10) * t334 + t170;
t90 = t380 * t145 - t150 * t374;
t63 = -pkin(11) * t216 + t90;
t57 = pkin(4) * t262 + t63;
t91 = t145 * t374 + t150 * t380;
t64 = -pkin(11) * t214 + t91;
t62 = t379 * t64;
t34 = t373 * t57 + t62;
t603 = pkin(12) * t130;
t27 = t34 - t603;
t25 = t27 * t489;
t528 = t371 * t381;
t293 = t553 * t375 + t376 * t528;
t527 = t371 * t382;
t169 = -t375 * t252 + t261 * t381;
t149 = pkin(3) * t334 - t169;
t114 = pkin(4) * t214 + t149;
t58 = pkin(5) * t130 + t114;
t433 = t553 * t568;
t296 = t376 * t433 + t377 * t382;
t242 = t296 * t381 - t568 * t530;
t295 = t376 * t377 - t382 * t433;
t586 = t242 * t359 + t295 * t358;
t592 = t58 * t70 + g(1) * t174 + g(2) * t586 - g(3) * (-t293 * t359 + t358 * t527) + t25;
t173 = -t245 * t358 + t297 * t359;
t587 = t242 * t358 - t295 * t359;
t608 = t58 * t423 - g(3) * (-t293 * t358 - t359 * t527) + g(2) * t587 - g(1) * t173;
t390 = qJD(6) * t423 - t372 * t45 + t378 * t388;
t581 = -t253 * t423 + t390;
t569 = pkin(10) + pkin(11);
t478 = qJD(4) * t569;
t202 = pkin(3) * t271 + pkin(10) * t269;
t518 = t380 * t169 + t374 * t202;
t545 = t269 * t374;
t607 = pkin(11) * t545 + t374 * t478 + t518;
t197 = t380 * t202;
t606 = pkin(4) * t271 - t169 * t374 + t197 + (pkin(11) * t269 + t478) * t380;
t523 = t380 * t381;
t355 = pkin(9) * t523;
t474 = t375 * t500;
t441 = t371 * t474;
t605 = pkin(4) * t441 - pkin(11) * t260 - t191 * t374 - (pkin(4) * t375 - pkin(11) * t523) * qJD(3) - (-t355 + (pkin(11) * t375 - t328) * t374) * qJD(4) - t612;
t496 = qJD(3) * t380;
t604 = -(-t375 * t496 - t381 * t493) * pkin(9) + t609 + t614 * pkin(11);
t602 = pkin(12) * t422;
t599 = t422 * t130;
t311 = t373 * t380 + t374 * t379;
t290 = t311 * t375;
t310 = t373 * t374 - t379 * t380;
t517 = t259 * t373 - t260 * t379 - t290 * t573 - t310 * t495;
t524 = t375 * t380;
t525 = t374 * t375;
t516 = -t491 * t525 + (t524 * t573 - t611) * t379 + t613 * t373;
t512 = t610 * t310;
t511 = t610 * t311;
t594 = -t130 ^ 2 + t422 ^ 2;
t591 = t130 * t255 + t45;
t60 = t373 * t64;
t33 = t379 * t57 - t60;
t26 = t33 + t602;
t22 = pkin(5) * t255 + t26;
t558 = t378 * t27;
t11 = t372 * t22 + t558;
t498 = qJD(2) * t382;
t471 = t375 * t498;
t176 = t371 * (qJD(1) * (t376 * t495 + t471) + t375 * t486) + t375 * t401 - t381 * t416;
t164 = qJDD(4) + t176;
t160 = qJDD(5) + t164;
t417 = qJD(2) * t440;
t437 = pkin(1) * t446;
t480 = pkin(8) * t349 + t376 * t437 + t382 * t417;
t396 = -pkin(8) * t439 + t480;
t200 = pkin(9) * t416 + t396;
t412 = t431 * qJD(2);
t203 = (qJD(1) * t412 + qJDD(1) * t418) * t371;
t407 = t381 * t200 + t375 * t203 - t252 * t497 + t261 * t495;
t66 = pkin(10) * t283 + t407;
t444 = pkin(8) * t597 + t376 * t417 - t382 * t437;
t201 = -pkin(2) * t416 + t444;
t83 = t176 * pkin(3) - t175 * pkin(10) + t201;
t24 = -qJD(4) * t91 - t374 * t66 + t380 * t83;
t16 = pkin(4) * t164 - pkin(11) * t107 + t24;
t409 = -t145 * t492 + t150 * t493 - t374 * t83 - t380 * t66;
t19 = -pkin(11) * t108 - t409;
t7 = -qJD(5) * t34 + t379 * t16 - t373 * t19;
t4 = pkin(5) * t160 - pkin(12) * t45 + t7;
t455 = -t373 * t16 - t379 * t19 - t57 * t490 + t64 * t491;
t5 = pkin(12) * t388 - t455;
t479 = -t372 * t5 + t378 * t4;
t2 = -qJD(6) * t11 + t479;
t590 = t2 + t608;
t363 = sin(t370);
t364 = cos(t370);
t185 = t245 * t364 + t297 * t363;
t584 = t242 * t364 + t295 * t363;
t589 = t114 * t130 + g(1) * t185 + g(2) * t584 - g(3) * (-t293 * t364 + t363 * t527) + t455;
t184 = -t245 * t363 + t297 * t364;
t585 = t242 * t363 - t295 * t364;
t588 = t114 * t422 - g(1) * t184 + g(2) * t585 - g(3) * (-t293 * t363 - t364 * t527) + t7;
t583 = t242 * t374 - t295 * t380;
t582 = t242 * t380 + t295 * t374;
t580 = -t255 * t422 + t388;
t367 = t371 ^ 2;
t579 = 0.2e1 * t367;
t578 = t605 * t379;
t577 = t606 * t379;
t436 = -t170 + (t493 + t545) * pkin(4);
t529 = t371 * t376;
t414 = pkin(1) * t456 - pkin(8) * t529;
t280 = -t553 * pkin(2) - t414;
t292 = t375 * t529 - t553 * t381;
t187 = t292 * pkin(3) - t293 * pkin(10) + t280;
t504 = pkin(1) * t457 + pkin(8) * t527;
t281 = t553 * pkin(9) + t504;
t510 = t381 * t281 + t375 * t282;
t189 = -pkin(10) * t527 + t510;
t515 = t374 * t187 + t380 * t189;
t308 = t380 * t328;
t229 = -pkin(11) * t524 + t308 + (-pkin(4) - t567) * t381;
t503 = t374 * t328 + t355;
t248 = -pkin(11) * t525 + t503;
t513 = t373 * t229 + t379 * t248;
t272 = t375 * t284;
t190 = -pkin(3) * t476 - t285 * t381 + t272;
t509 = pkin(4) * t614 + pkin(9) * t495 - t190;
t335 = t569 * t374;
t336 = t569 * t380;
t505 = -t373 * t335 + t379 * t336;
t576 = t335 * t490 + t336 * t491 + t606 * t373 + t379 * t607;
t575 = -t229 * t490 + t248 * t491 + t373 * t605 + t379 * t604;
t574 = (qJDD(2) + 0.2e1 * t446) * t371;
t461 = qJD(6) * t22 + t5;
t571 = t372 * t4 + t378 * t461;
t383 = qJD(1) ^ 2;
t562 = t379 * t63 - t60;
t481 = t374 * t527;
t240 = t293 * t380 - t481;
t452 = t380 * t187 - t189 * t374;
t86 = pkin(4) * t292 - pkin(11) * t240 + t452;
t239 = t293 * t374 + t380 * t527;
t92 = -pkin(11) * t239 + t515;
t561 = t373 * t86 + t379 * t92;
t559 = pkin(9) * qJD(3);
t556 = pkin(5) * t511 + t436;
t291 = t310 * t375;
t207 = t378 * t290 - t291 * t372;
t555 = -qJD(6) * t207 - t372 * t516 + t378 * t517;
t208 = -t290 * t372 - t291 * t378;
t554 = qJD(6) * t208 + t372 * t517 + t378 * t516;
t552 = t107 * t374;
t157 = qJDD(6) + t160;
t551 = t157 * t373;
t550 = t164 * t374;
t549 = t164 * t380;
t548 = t214 * t262;
t547 = t216 * t262;
t546 = t269 * t334;
t544 = t271 * t334;
t537 = t296 * t375;
t410 = t334 * t375;
t536 = t358 * t381;
t535 = t359 * t381;
t360 = pkin(4) * t379 + pkin(5);
t534 = t360 * t157;
t533 = t363 * t381;
t532 = t364 * t381;
t531 = t367 * t383;
t526 = t373 * t378;
t226 = t378 * t310 + t311 * t372;
t521 = -qJD(6) * t226 - t372 * t511 - t378 * t512;
t227 = -t310 * t372 + t311 * t378;
t520 = qJD(6) * t227 - t372 * t512 + t378 * t511;
t519 = pkin(5) * t516 + t509;
t319 = pkin(4) * t525 + t375 * pkin(9);
t368 = t376 ^ 2;
t502 = -t382 ^ 2 + t368;
t499 = qJD(2) * t376;
t494 = qJD(4) * t262;
t482 = t382 * t531;
t361 = -pkin(4) * t380 - pkin(3);
t477 = t381 * t568;
t473 = t371 * t499;
t472 = t371 * t498;
t466 = pkin(1) * t579;
t459 = -t373 * t63 - t62;
t458 = -t373 * t92 + t379 * t86;
t450 = t379 * t229 - t248 * t373;
t449 = -t375 * t281 + t282 * t381;
t448 = -t379 * t335 - t336 * t373;
t447 = t262 * t380;
t445 = -t375 * t200 + t381 * t203 - t252 * t495 - t261 * t497;
t122 = -pkin(5) * t381 + pkin(12) * t291 + t450;
t435 = pkin(12) * t516 - qJD(6) * t122 + t575;
t127 = -pkin(12) * t290 + t513;
t434 = t513 * qJD(5) + qJD(6) * t127 + t578 - t604 * t373 + t517 * pkin(12) + (t441 - t497) * pkin(5);
t432 = t371 * t383 * t553;
t429 = g(1) * t298 + g(2) * t296;
t212 = -pkin(12) * t311 + t448;
t428 = pkin(12) * t511 - qJD(6) * t212 + t576;
t213 = -pkin(12) * t310 + t505;
t427 = pkin(5) * t271 - pkin(12) * t512 + qJD(5) * t505 + qJD(6) * t213 - t373 * t607 + t577;
t188 = pkin(3) * t527 - t449;
t154 = -t239 * t373 + t240 * t379;
t35 = pkin(5) * t292 - pkin(12) * t154 + t458;
t153 = t379 * t239 + t240 * t373;
t38 = -pkin(12) * t153 + t561;
t425 = t35 * t378 - t372 * t38;
t424 = t35 * t372 + t378 * t38;
t98 = t378 * t153 + t154 * t372;
t99 = -t153 * t372 + t154 * t378;
t419 = 0.2e1 * t454 + qJD(2);
t286 = t371 * t412;
t288 = t414 * qJD(2);
t415 = -t281 * t495 - t282 * t497 + t286 * t381 - t375 * t288;
t238 = -qJD(3) * t292 + t381 * t472;
t144 = -qJD(4) * t239 + t238 * t380 + t374 * t473;
t237 = qJD(3) * t293 + t371 * t471;
t406 = -t281 * t497 + t282 * t495 + t375 * t286 + t381 * t288;
t118 = pkin(10) * t473 + t406;
t289 = t504 * qJD(2);
t138 = t237 * pkin(3) - t238 * pkin(10) + t289;
t389 = -qJD(4) * t515 - t118 * t374 + t380 * t138;
t32 = pkin(4) * t237 - pkin(11) * t144 + t389;
t143 = -qJD(4) * t481 + t238 * t374 + t293 * t492 - t380 * t473;
t405 = t380 * t118 + t374 * t138 + t187 * t492 - t189 * t493;
t40 = -pkin(11) * t143 + t405;
t413 = t373 * t32 + t379 * t40 + t86 * t490 - t491 * t92;
t67 = -pkin(3) * t283 - t445;
t408 = -pkin(10) * t164 + t149 * t262;
t244 = -t298 * t375 + t377 * t528;
t402 = g(1) * t244 + g(2) * (-t371 * t477 - t537) - g(3) * t292;
t134 = pkin(4) * t239 + t188;
t398 = -g(1) * t297 - g(2) * t295 + g(3) * t527;
t397 = -g(3) * t529 - t429;
t49 = pkin(4) * t108 + t67;
t395 = -t201 - t398;
t394 = -pkin(9) * t283 - t251 * t334;
t119 = -pkin(3) * t473 - t415;
t391 = -t561 * qJD(5) + t379 * t32 - t373 * t40;
t387 = pkin(10) * t494 + t402 + t67;
t386 = pkin(9) * t494 + t398;
t75 = pkin(4) * t143 + t119;
t279 = pkin(5) * t310 + t361;
t231 = pkin(5) * t290 + t319;
t193 = t245 * t380 + t297 * t374;
t192 = -t245 * t374 + t297 * t380;
t106 = pkin(4) * t216 - pkin(5) * t422;
t88 = pkin(5) * t153 + t134;
t54 = qJD(5) * t154 + t379 * t143 + t144 * t373;
t53 = -qJD(5) * t153 - t143 * t373 + t144 * t379;
t36 = pkin(5) * t54 + t75;
t29 = t562 + t602;
t28 = t459 + t603;
t21 = qJD(6) * t99 + t372 * t53 + t378 * t54;
t20 = -qJD(6) * t98 - t372 * t54 + t378 * t53;
t17 = -pkin(5) * t388 + t49;
t10 = t22 * t378 - t27 * t372;
t9 = -pkin(12) * t54 + t413;
t8 = pkin(5) * t237 - pkin(12) * t53 + t391;
t1 = -t25 + t571;
t3 = [qJDD(1), g(1) * t377 - g(2) * t568, g(1) * t568 + g(2) * t377 (qJDD(1) * t368 + 0.2e1 * t382 * t464) * t367 (t376 * t485 - t487 * t502) * t579, t376 * t574 + t419 * t472, t382 * t574 - t419 * t473, t416 * t553, -t289 * t420 + t414 * t416 - t444 * t553 + g(1) * t296 - g(2) * t298 + (-t464 + t485) * t466, -t288 * t420 - t504 * t416 - t396 * t553 - g(1) * t295 + g(2) * t297 + (-t465 - t486) * t466, t175 * t293 + t238 * t271, -t175 * t292 - t176 * t293 - t237 * t271 - t238 * t269, -t238 * t334 + t283 * t293 + (-t175 * t382 + t271 * t499) * t371, t237 * t334 - t283 * t292 + (t176 * t382 - t269 * t499) * t371 (-t283 * t382 - t334 * t499) * t371, -t415 * t334 + t449 * t283 + t289 * t269 + t280 * t176 + t201 * t292 + t251 * t237 + g(1) * t242 - g(2) * t245 + (t169 * t499 - t382 * t445) * t371, t406 * t334 - t510 * t283 + t289 * t271 + t280 * t175 + t201 * t293 + t251 * t238 - g(1) * t537 - g(2) * t244 + (-g(1) * t477 - t170 * t499 + t382 * t407) * t371, t107 * t240 + t144 * t216, -t107 * t239 - t108 * t240 - t143 * t216 - t144 * t214, t107 * t292 + t144 * t262 + t164 * t240 + t216 * t237, -t108 * t292 - t143 * t262 - t164 * t239 - t214 * t237, t164 * t292 + t237 * t262, g(1) * t582 - g(2) * t193 + t188 * t108 + t119 * t214 + t149 * t143 + t452 * t164 + t90 * t237 + t67 * t239 + t24 * t292 + t389 * t262, -g(1) * t583 - g(2) * t192 + t188 * t107 + t119 * t216 + t149 * t144 - t515 * t164 - t91 * t237 + t67 * t240 - t405 * t262 + t409 * t292, t154 * t45 - t422 * t53, -t130 * t53 - t153 * t45 + t154 * t388 + t422 * t54, t154 * t160 - t237 * t422 + t255 * t53 + t292 * t45, -t130 * t237 - t153 * t160 - t255 * t54 + t292 * t388, t160 * t292 + t237 * t255, g(1) * t584 - g(2) * t185 + t114 * t54 + t75 * t130 - t134 * t388 + t49 * t153 + t458 * t160 + t33 * t237 + t391 * t255 + t7 * t292, -g(1) * t585 - g(2) * t184 + t114 * t53 + t134 * t45 + t49 * t154 - t561 * t160 - t34 * t237 - t413 * t255 + t455 * t292 - t75 * t422, t12 * t99 - t20 * t423, -t12 * t98 - t20 * t70 + t21 * t423 + t390 * t99, t12 * t292 + t157 * t99 + t20 * t253 - t237 * t423, -t157 * t98 - t21 * t253 - t237 * t70 + t292 * t390, t157 * t292 + t237 * t253 (-qJD(6) * t424 - t372 * t9 + t378 * t8) * t253 + t425 * t157 + t2 * t292 + t10 * t237 + t36 * t70 - t88 * t390 + t17 * t98 + t58 * t21 + g(1) * t586 - g(2) * t174 -(qJD(6) * t425 + t372 * t8 + t378 * t9) * t253 - t424 * t157 - t1 * t292 - t11 * t237 - t36 * t423 + t88 * t12 + t17 * t99 + t58 * t20 - g(1) * t587 - g(2) * t173; 0, 0, 0, -t376 * t482, t502 * t531, -t382 * t432 + t463, t376 * t432 + t349, t416, pkin(1) * t376 * t531 + t287 * t420 - t398 - t444, pkin(1) * t482 + t284 * t420 + (pkin(8) * t487 + g(3)) * t529 + t429 - t480, t175 * t375 - t381 * t544 (t175 + t546) * t381 + (-t176 + t544) * t375, -t334 * t495 + t283 * t375 + (-t271 * t376 + t334 * t522) * t501, t334 * t497 + t283 * t381 + (t269 * t376 - t382 * t410) * t501, t334 * t476, -t169 * t476 - pkin(2) * t176 - t287 * t269 - t272 * t334 + t394 * t375 + ((t285 + t559) * t334 + t395) * t381, -pkin(2) * t175 - t508 * t334 + t170 * t476 - t287 * t271 + t394 * t381 + (-t334 * t559 - t395) * t375, t107 * t524 + t216 * t613, t214 * t260 + t216 * t259 + (-t214 * t380 - t216 * t374) * t495 + (-t552 - t108 * t380 + (t214 * t374 - t216 * t380) * qJD(4)) * t375, -t107 * t381 + t426 * t262 + (-t216 * t334 - t262 * t493 + t549) * t375, t108 * t381 + t611 * t262 + (t214 * t334 - t262 * t492 - t550) * t375, -t164 * t381 - t262 * t410, -t149 * t259 + t308 * t164 - t190 * t214 + t612 * t262 + ((-qJD(4) * t328 + t191) * t262 + t397) * t374 + (t149 * t374 * qJD(3) - t24 + (qJD(3) * t214 - t550) * pkin(9) - t386 * t380) * t381 + (pkin(9) * t108 + t149 * t492 - t334 * t90 + t67 * t374) * t375, -t503 * t164 - t190 * t216 - t149 * t260 + t609 * t262 + t397 * t380 + (-t409 + (pkin(9) * t216 + t149 * t380) * qJD(3) + t386 * t374) * t381 + (-t149 * t493 + t67 * t380 + t334 * t91 + (t262 * t496 + t107) * pkin(9)) * t375, -t291 * t45 - t422 * t517, -t130 * t517 - t290 * t45 - t291 * t388 + t422 * t516, -t160 * t291 + t255 * t517 - t381 * t45 + t410 * t422, t130 * t410 - t160 * t290 - t255 * t516 - t381 * t388, -t160 * t381 - t255 * t410, t450 * t160 - t7 * t381 + t33 * t497 - t319 * t388 + t49 * t290 - g(1) * (-t297 * t532 + t298 * t363) - g(2) * (-t295 * t532 + t296 * t363) + (-t248 * t490 + (-qJD(5) * t229 + t604) * t373 - t578) * t255 + t509 * t130 + t516 * t114 + (-t33 * t474 - g(3) * (t363 * t376 + t364 * t522)) * t371, -t513 * t160 - t455 * t381 - t34 * t497 + t319 * t45 - t49 * t291 - g(1) * (t297 * t533 + t298 * t364) - g(2) * (t295 * t533 + t296 * t364) + t575 * t255 - t509 * t422 + t517 * t114 + (t34 * t474 - g(3) * (-t363 * t522 + t364 * t376)) * t371, t12 * t208 - t423 * t555, -t12 * t207 + t208 * t390 + t423 * t554 - t555 * t70, -t12 * t381 + t157 * t208 + t555 * t253 + t410 * t423, -t157 * t207 - t554 * t253 - t381 * t390 + t70 * t410, -t157 * t381 - t253 * t410 (t122 * t378 - t127 * t372) * t157 - t2 * t381 + t10 * t497 - t231 * t390 + t17 * t207 - g(1) * (-t297 * t535 + t298 * t358) - g(2) * (-t295 * t535 + t296 * t358) + t519 * t70 + t554 * t58 + (t372 * t435 - t378 * t434) * t253 + (-t10 * t474 - g(3) * (t358 * t376 + t359 * t522)) * t371 -(t122 * t372 + t127 * t378) * t157 + t1 * t381 - t11 * t497 + t231 * t12 + t17 * t208 - g(1) * (t297 * t536 + t298 * t359) - g(2) * (t295 * t536 + t296 * t359) - t519 * t423 + t555 * t58 + (t372 * t434 + t378 * t435) * t253 + (t11 * t474 - g(3) * (-t358 * t522 + t359 * t376)) * t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271 * t269, -t269 ^ 2 + t271 ^ 2, t175 - t546, -t176 - t544, t283, -t170 * t334 - t251 * t271 - t402 + t445, g(1) * t245 + g(2) * t242 + g(3) * t293 - t169 * t334 + t251 * t269 - t407, t216 * t447 + t552 (t107 - t548) * t380 + (-t108 - t547) * t374, -t216 * t271 + t262 * t447 + t550, -t262 ^ 2 * t374 + t214 * t271 + t549, -t262 * t271, -pkin(3) * t108 - t170 * t214 - t197 * t262 - t90 * t271 + (t169 * t262 + t408) * t374 - t387 * t380, -pkin(3) * t107 - t170 * t216 + t262 * t518 + t91 * t271 + t374 * t387 + t380 * t408, t311 * t45 + t422 * t512, t130 * t512 - t310 * t45 + t311 * t388 + t422 * t511, t160 * t311 - t255 * t512 + t271 * t422, t130 * t271 - t160 * t310 - t255 * t511, -t255 * t271, t448 * t160 - t361 * t388 + t49 * t310 - t33 * t271 + (-t336 * t490 + (qJD(5) * t335 + t607) * t373 - t577) * t255 + t436 * t130 + t511 * t114 - t402 * t364, -t512 * t114 - t505 * t160 + t255 * t576 + t34 * t271 + t49 * t311 + t361 * t45 + t402 * t363 - t422 * t436, t12 * t227 - t423 * t521, -t12 * t226 + t227 * t390 + t423 * t520 - t521 * t70, t157 * t227 + t253 * t521 + t271 * t423, -t157 * t226 - t253 * t520 + t271 * t70, -t253 * t271 (t212 * t378 - t213 * t372) * t157 - t279 * t390 + t17 * t226 - t10 * t271 + t556 * t70 + t520 * t58 + (t372 * t428 - t378 * t427) * t253 - t402 * t359 -(t212 * t372 + t213 * t378) * t157 + t279 * t12 + t17 * t227 + t11 * t271 - t556 * t423 + t521 * t58 + (t372 * t427 + t378 * t428) * t253 + t402 * t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216 * t214, -t214 ^ 2 + t216 ^ 2, t107 + t548, -t108 + t547, t164, -g(1) * t192 + g(2) * t583 + g(3) * t239 - t149 * t216 + t91 * t262 + t24, g(1) * t193 + g(2) * t582 + g(3) * t240 + t149 * t214 + t90 * t262 + t409, -t599, t594, t591, t580, t160, -t459 * t255 + (-t130 * t216 + t160 * t379 - t255 * t491) * pkin(4) + t588, t562 * t255 + (-t160 * t373 + t216 * t422 - t255 * t490) * pkin(4) + t589, -t601, t595, t593, t581, t157, t378 * t534 - (t28 * t378 - t29 * t372) * t253 - t106 * t70 + (-t372 * t551 + (-t372 * t379 - t526) * t253 * qJD(5)) * pkin(4) + ((-pkin(4) * t526 - t360 * t372) * t253 - t11) * qJD(6) + t479 + t608, t106 * t423 + (-t534 - t4 + (t28 - (-qJD(5) - qJD(6)) * t373 * pkin(4)) * t253) * t372 + (-pkin(4) * t551 + (-pkin(4) * t490 - qJD(6) * t360 + t29) * t253 - t461) * t378 + t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t599, t594, t591, t580, t160, t255 * t34 + t588, t255 * t33 + t589, -t601, t595, t593, t581, t157 -(-t26 * t372 - t558) * t253 + (t157 * t378 - t253 * t489 + t422 * t70) * pkin(5) + t590 (-t253 * t27 - t4) * t372 + (t253 * t26 - t461) * t378 + (-t157 * t372 - t253 * t488 - t422 * t423) * pkin(5) + t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t601, t595, t593, t581, t157, t11 * t253 + t590, t10 * t253 - t571 + t592;];
tau_reg  = t3;
