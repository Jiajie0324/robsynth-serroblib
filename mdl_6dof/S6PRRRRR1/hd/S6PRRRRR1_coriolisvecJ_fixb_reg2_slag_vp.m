% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:39:51
% EndTime: 2019-03-09 00:40:08
% DurationCPUTime: 8.00s
% Computational Cost: add. (15516->531), mult. (39107->717), div. (0->0), fcn. (30652->12), ass. (0->271)
t213 = sin(qJ(3));
t359 = -pkin(9) - pkin(8);
t285 = qJD(3) * t359;
t181 = t213 * t285;
t216 = cos(qJ(3));
t182 = t216 * t285;
t187 = t359 * t213;
t188 = t359 * t216;
t212 = sin(qJ(4));
t353 = cos(qJ(4));
t283 = t353 * t216;
t238 = t212 * t213 - t283;
t274 = qJD(4) * t353;
t217 = cos(qJ(2));
t208 = sin(pkin(6));
t303 = qJD(1) * t208;
t278 = t217 * t303;
t297 = qJD(4) * t212;
t367 = t353 * t181 + t212 * t182 + t187 * t274 + t188 * t297 + t238 * t278;
t177 = t212 * t216 + t213 * t353;
t382 = t177 * t278 - t212 * t181 + t182 * t353;
t215 = cos(qJ(6));
t293 = qJD(6) * t215;
t257 = qJD(2) * t283;
t300 = qJD(2) * t213;
t277 = t212 * t300;
t172 = t257 - t277;
t173 = t177 * qJD(2);
t211 = sin(qJ(5));
t352 = cos(qJ(5));
t122 = -t352 * t172 + t173 * t211;
t375 = t122 * t215;
t381 = t293 + t375;
t205 = qJD(3) + qJD(4);
t373 = t205 * t177;
t380 = -pkin(10) * t373 + t367;
t225 = t205 * t238;
t379 = pkin(10) * t225 - t187 * t297 + t188 * t274 + t382;
t214 = sin(qJ(2));
t281 = t214 * t303;
t298 = qJD(3) * t213;
t363 = pkin(3) * t298 - t281;
t210 = sin(qJ(6));
t235 = t211 * t172 + t173 * t352;
t269 = qJD(5) + t205;
t244 = t215 * t269;
t103 = t210 * t235 - t244;
t105 = t210 * t269 + t215 * t235;
t372 = qJD(6) + t122;
t378 = t372 * t210;
t294 = qJD(6) * t210;
t305 = t205 * t257;
t132 = t205 * t277 - t305;
t133 = t373 * qJD(2);
t273 = qJD(5) * t352;
t296 = qJD(5) * t211;
t61 = t132 * t352 + t211 * t133 - t172 * t273 + t173 * t296;
t49 = -qJD(6) * t244 + t215 * t61 + t235 * t294;
t295 = qJD(6) * t105;
t50 = -t210 * t61 + t295;
t6 = -t381 * t103 - t105 * t378 - t210 * t50 - t49 * t215;
t265 = t211 * t132 - t352 * t133;
t62 = qJD(5) * t235 - t265;
t60 = t215 * t62;
t14 = t103 * t235 - t372 * t378 + t60;
t253 = pkin(4) * t373 + t363;
t44 = t49 * t210;
t16 = t381 * t105 - t44;
t331 = t210 * t62 + t293 * t372;
t15 = -t105 * t235 + t372 * t375 + t331;
t152 = t353 * t187 + t212 * t188;
t115 = -pkin(10) * t177 + t152;
t153 = t212 * t187 - t353 * t188;
t116 = -pkin(10) * t238 + t153;
t348 = t115 * t273 - t116 * t296 + t379 * t211 + t380 * t352;
t350 = t172 * pkin(10);
t209 = cos(pkin(6));
t310 = t209 * t216;
t195 = qJD(1) * t310;
t184 = qJD(2) * pkin(8) + t281;
t268 = pkin(9) * qJD(2) + t184;
t243 = t268 * t213;
t148 = t195 - t243;
t144 = qJD(3) * pkin(3) + t148;
t302 = qJD(1) * t213;
t276 = t209 * t302;
t149 = t216 * t268 + t276;
t284 = t353 * t149;
t91 = t212 * t144 + t284;
t85 = t91 + t350;
t334 = t211 * t85;
t165 = t173 * pkin(10);
t142 = t212 * t149;
t90 = t353 * t144 - t142;
t84 = -t165 + t90;
t75 = pkin(4) * t205 + t84;
t41 = t352 * t75 - t334;
t37 = -pkin(5) * t269 - t41;
t342 = t122 * t37;
t230 = t352 * t238;
t68 = qJD(5) * t230 + t177 * t296 + t211 * t373 + t225 * t352;
t233 = t211 * t238;
t69 = -qJD(5) * t233 + t177 * t273 - t211 * t225 + t352 * t373;
t376 = t69 * pkin(5) + t68 * pkin(11) + t253;
t374 = t122 * t235;
t57 = -t122 ^ 2 + t235 ^ 2;
t87 = pkin(5) * t235 + pkin(11) * t122;
t55 = t122 * t269 - t61;
t202 = -t216 * pkin(3) - pkin(2);
t164 = qJD(2) * t202 - t278;
t135 = -pkin(4) * t172 + t164;
t301 = qJD(2) * t208;
t272 = qJD(1) * t301;
t256 = t217 * t272;
t306 = qJD(3) * t195 + t216 * t256;
t110 = -qJD(3) * t243 + t306;
t111 = -t149 * qJD(3) - t213 * t256;
t266 = -t212 * t110 + t353 * t111;
t54 = -qJD(4) * t91 + t266;
t227 = t132 * pkin(10) + t54;
t261 = -t353 * t110 - t212 * t111 - t144 * t274 + t149 * t297;
t34 = -pkin(10) * t133 - t261;
t222 = -t211 * t227 - t273 * t75 + t85 * t296 - t34 * t352;
t221 = t135 * t122 + t222;
t80 = t211 * t115 + t116 * t352;
t347 = qJD(5) * t80 + t380 * t211 - t379 * t352;
t288 = t352 * t85;
t42 = t211 * t75 + t288;
t38 = pkin(11) * t269 + t42;
t63 = pkin(5) * t122 - pkin(11) * t235 + t135;
t19 = t210 * t63 + t215 * t38;
t291 = qJD(2) * qJD(3);
t271 = t213 * t291;
t166 = pkin(3) * t271 + t214 * t272;
t102 = pkin(4) * t133 + t166;
t23 = pkin(5) * t62 + pkin(11) * t61 + t102;
t3 = -qJD(6) * t19 + t210 * t222 + t215 * t23;
t369 = -t19 * t372 - t3;
t368 = t205 * t90;
t201 = pkin(3) * t353 + pkin(4);
t309 = t211 * t212;
t130 = t201 * t273 + (-t212 * t296 + (t352 * t353 - t309) * qJD(4)) * pkin(3);
t92 = -t212 * t148 - t284;
t232 = t92 - t350;
t93 = t353 * t148 - t142;
t86 = -t165 + t93;
t52 = t211 * t232 + t352 * t86;
t330 = t130 - t52;
t282 = t352 * t212;
t329 = -t211 * t86 + t232 * t352 + t201 * t296 + (t212 * t273 + (t211 * t353 + t282) * qJD(4)) * pkin(3);
t33 = t352 * t227;
t335 = t211 * t34;
t270 = -t33 + t335;
t9 = qJD(5) * t42 + t270;
t275 = -t9 * t215 + t37 * t294;
t366 = -t153 * qJD(4) + t382;
t326 = t372 * t235;
t364 = t135 * t235;
t245 = t210 * t38 - t215 * t63;
t362 = t19 * t215 + t210 * t245;
t242 = t235 * t245 + t275;
t356 = t9 * t210 + t37 * t293;
t260 = t235 * t19 + t356;
t56 = t205 * t235 + t265;
t2 = -qJD(6) * t245 + t210 * t23 - t215 * t222;
t79 = -t115 * t352 + t116 * t211;
t358 = t79 * t9;
t313 = t208 * t214;
t169 = -t213 * t313 + t310;
t170 = t209 * t213 + t216 * t313;
t118 = t169 * t353 - t212 * t170;
t119 = t212 * t169 + t170 * t353;
t236 = t118 * t352 - t211 * t119;
t357 = t236 * t9;
t140 = t177 * t211 + t230;
t141 = t177 * t352 - t233;
t158 = pkin(4) * t238 + t202;
t77 = t140 * pkin(5) - t141 * pkin(11) + t158;
t39 = -t210 * t80 + t215 * t77;
t355 = qJD(6) * t39 + t376 * t210 + t348 * t215;
t40 = t210 * t77 + t215 * t80;
t354 = -qJD(6) * t40 - t348 * t210 + t376 * t215;
t351 = pkin(4) * t173;
t1 = t2 * t215;
t346 = pkin(4) * qJD(5);
t345 = qJD(2) * pkin(2);
t344 = t372 * t245;
t341 = t140 * t62;
t339 = t19 * t210;
t336 = t210 * t68;
t333 = t215 * t68;
t46 = t50 * t215;
t328 = t103 * t210;
t327 = t105 * t103;
t319 = t141 * t210;
t318 = t141 * t215;
t317 = t164 * t173;
t316 = t173 * t172;
t315 = t184 * t213;
t314 = t184 * t216;
t312 = t208 * t217;
t219 = qJD(2) ^ 2;
t311 = t208 * t219;
t218 = qJD(3) ^ 2;
t308 = t218 * t213;
t307 = t218 * t216;
t168 = pkin(3) * t282 + t211 * t201;
t206 = t213 ^ 2;
t207 = t216 ^ 2;
t304 = t206 - t207;
t299 = qJD(2) * t214;
t290 = -t122 * t339 + t245 * t375 + t1;
t203 = pkin(3) * t300;
t287 = t214 * t311;
t286 = t213 * t219 * t216;
t280 = t208 * t299;
t279 = t217 * t301;
t267 = t33 - t364;
t262 = pkin(4) * t273;
t259 = t213 * t279;
t258 = t216 * t279;
t255 = t216 * t271;
t47 = t211 * t84 + t288;
t254 = pkin(4) * t296 - t47;
t185 = -t278 - t345;
t252 = -t185 - t278;
t250 = -t122 * t41 + t235 * t42;
t162 = pkin(11) + t168;
t249 = -t162 * t62 + t342;
t199 = pkin(4) * t211 + pkin(11);
t248 = -t199 * t62 + t342;
t247 = -t215 * t245 + t339;
t82 = t211 * t118 + t119 * t352;
t70 = -t210 * t82 - t215 * t312;
t241 = t210 * t312 - t215 * t82;
t240 = t141 * t293 - t336;
t239 = -t141 * t294 - t333;
t156 = t276 + t314;
t234 = -t164 * t172 + t261;
t72 = t351 + t87;
t167 = -pkin(3) * t309 + t201 * t352;
t231 = qJD(3) * (-t252 - t345);
t229 = -qJD(6) * t247 - t3 * t210 + t1;
t127 = -t184 * t298 + t306;
t128 = -qJD(3) * t314 + (-qJD(3) * t209 - t279) * t302;
t155 = t195 - t315;
t228 = t127 * t216 - t128 * t213 + (-t155 * t216 - t156 * t213) * qJD(3);
t200 = -pkin(4) * t352 - pkin(5);
t161 = -pkin(5) - t167;
t154 = t203 + t351;
t147 = -qJD(3) * t170 - t259;
t146 = qJD(3) * t169 + t258;
t106 = -t172 ^ 2 + t173 ^ 2;
t99 = t173 * t205 - t133;
t98 = t305 + (-t172 - t277) * t205;
t67 = t203 + t72;
t66 = -qJD(4) * t119 - t212 * t146 + t147 * t353;
t65 = qJD(4) * t118 + t146 * t353 + t212 * t147;
t48 = t352 * t84 - t334;
t31 = t210 * t87 + t215 * t41;
t30 = -t210 * t41 + t215 * t87;
t27 = t210 * t67 + t215 * t52;
t26 = -t210 * t52 + t215 * t67;
t25 = t210 * t72 + t215 * t48;
t24 = -t210 * t48 + t215 * t72;
t21 = qJD(5) * t82 + t211 * t65 - t352 * t66;
t20 = qJD(5) * t236 + t211 * t66 + t352 * t65;
t17 = t328 * t372 - t46;
t11 = qJD(6) * t241 - t20 * t210 + t215 * t280;
t10 = qJD(6) * t70 + t20 * t215 + t210 * t280;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, -t217 * t311, 0, 0, 0, 0, 0, 0, 0, 0, -t216 * t287 + (t147 - t259) * qJD(3), t213 * t287 + (-t146 - t258) * qJD(3) (t146 * t216 - t147 * t213 + (-t169 * t216 - t170 * t213) * qJD(3)) * qJD(2), t127 * t170 + t128 * t169 + t146 * t156 + t147 * t155 + (t185 - t278) * t280, 0, 0, 0, 0, 0, 0, t66 * t205 + (-t133 * t217 - t172 * t299) * t208, -t65 * t205 + (t132 * t217 + t173 * t299) * t208, t118 * t132 - t119 * t133 + t172 * t65 - t173 * t66, t118 * t54 - t119 * t261 + t65 * t91 + t66 * t90 + (t164 * t299 - t166 * t217) * t208, 0, 0, 0, 0, 0, 0, -t21 * t269 + (t122 * t299 - t217 * t62) * t208, -t20 * t269 + (t217 * t61 + t235 * t299) * t208, -t122 * t20 + t21 * t235 + t236 * t61 - t62 * t82, t20 * t42 - t21 * t41 - t222 * t82 - t357 + (-t102 * t217 + t135 * t299) * t208, 0, 0, 0, 0, 0, 0, t103 * t21 + t11 * t372 - t236 * t50 + t62 * t70, -t10 * t372 + t105 * t21 + t236 * t49 + t241 * t62, -t10 * t103 - t105 * t11 + t241 * t50 + t49 * t70, t10 * t19 - t11 * t245 - t2 * t241 + t21 * t37 + t3 * t70 - t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t255, -0.2e1 * t304 * t291, t307, -0.2e1 * t255, -t308, 0, -pkin(8) * t307 + t213 * t231, pkin(8) * t308 + t216 * t231 (-t206 - t207) * t256 + t228 ((t155 * t213 - t156 * t216) * t217 + (-t185 - t345) * t214) * t303 + t228 * pkin(8), -t132 * t177 - t173 * t225, t132 * t238 - t177 * t133 + t205 * (-t172 * t238 - t173 * t177) -t225 * t205, t133 * t238 - t172 * t373, -t373 * t205, 0, t202 * t133 + t164 * t373 + t166 * t238 - t363 * t172 + t366 * t205, -t202 * t132 - t164 * t225 + t166 * t177 + t363 * t173 - t367 * t205, t152 * t132 - t153 * t133 - t54 * t177 - t91 * t373 - t366 * t173 + t367 * t172 + (t261 + t368) * t238, t152 * t54 - t153 * t261 + t363 * t164 + t166 * t202 + t366 * t90 + t367 * t91, -t141 * t61 - t235 * t68, t122 * t68 + t140 * t61 - t141 * t62 - t235 * t69, -t68 * t269, t122 * t69 + t341, -t69 * t269, 0, t102 * t140 + t122 * t253 + t135 * t69 + t158 * t62 - t347 * t269, t102 * t141 - t135 * t68 - t158 * t61 + t235 * t253 - t348 * t269, -t122 * t348 + t140 * t222 + t141 * t9 + t235 * t347 + t41 * t68 - t42 * t69 - t61 * t79 - t62 * t80, t102 * t158 + t135 * t253 - t222 * t80 - t347 * t41 + t348 * t42 + t358, t105 * t239 - t318 * t49 (t103 * t215 + t105 * t210) * t68 + (t44 - t46 + (-t105 * t215 + t328) * qJD(6)) * t141, t105 * t69 - t140 * t49 + t239 * t372 + t318 * t62, t103 * t240 + t319 * t50, -t103 * t69 - t140 * t50 - t240 * t372 - t319 * t62, t372 * t69 + t341, t103 * t347 + t140 * t3 + t141 * t356 - t245 * t69 - t336 * t37 + t354 * t372 + t39 * t62 + t50 * t79, t347 * t105 - t140 * t2 - t275 * t141 - t19 * t69 - t37 * t333 - t355 * t372 - t40 * t62 - t49 * t79, t39 * t49 - t40 * t50 + t247 * t68 - t354 * t105 - t355 * t103 + (-qJD(6) * t362 - t2 * t210 - t215 * t3) * t141, t19 * t355 + t2 * t40 - t245 * t354 + t3 * t39 + t347 * t37 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, t304 * t219, 0, t286, 0, 0, t252 * t300, -qJD(2) * t185 * t216 + (t155 + t315) * qJD(3) - t306, 0, 0, -t316, t106, t98, t316, t99, 0, t172 * t203 - t317 - t92 * t205 + (-t284 + (-pkin(3) * t205 - t144) * t212) * qJD(4) + t266, t93 * t205 + (-t173 * t300 - t205 * t274) * pkin(3) + t234 (t91 + t92) * t173 + (t90 - t93) * t172 + (t132 * t353 - t133 * t212 + (t172 * t353 + t173 * t212) * qJD(4)) * pkin(3), -t90 * t92 - t91 * t93 + (-t164 * t300 + t353 * t54 - t212 * t261 + (-t212 * t90 + t353 * t91) * qJD(4)) * pkin(3), t374, t57, t55, -t374, t56, 0, -t335 - t154 * t122 + (-t42 - t329) * qJD(5) + t267 - t329 * t205, -t154 * t235 - t330 * t269 + t221, -t122 * t330 + t167 * t61 - t168 * t62 + t235 * t329 + t250, -t135 * t154 - t167 * t9 - t168 * t222 - t329 * t41 + t330 * t42, t16, t6, t15, t17, t14, -t326, t161 * t50 + t249 * t210 + t329 * t103 + (-t130 * t210 - t162 * t293 - t26) * t372 + t242, -t161 * t49 + t249 * t215 + t329 * t105 + (-t130 * t215 + t162 * t294 + t27) * t372 + t260, t103 * t27 + t105 * t26 + (-t103 * t130 - t162 * t50 + (t105 * t162 + t245) * qJD(6)) * t215 + (t105 * t130 - t162 * t49 - t3 + (t103 * t162 - t19) * qJD(6)) * t210 + t290, t130 * t362 + t161 * t9 + t162 * t229 - t19 * t27 + t245 * t26 + t329 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t106, t98, t316, t99, 0, t91 * t205 - t317 + t54, t234 + t368, 0, 0, t374, t57, t55, -t374, t56, 0, -t85 * t273 + t47 * t269 - t122 * t351 + (-qJD(5) * t75 - t269 * t346 - t34) * t211 + t267, -t235 * t351 + t221 + (-t262 + t48) * t269, t48 * t122 - t47 * t235 + (t352 * t61 - t211 * t62 + (-t122 * t352 + t211 * t235) * qJD(5)) * pkin(4) + t250, t41 * t47 - t42 * t48 + (-t352 * t9 - t135 * t173 - t211 * t222 + (-t211 * t41 + t352 * t42) * qJD(5)) * pkin(4), t16, t6, t15, t17, t14, -t326, t200 * t50 + t248 * t210 + t254 * t103 + (-t199 * t293 - t210 * t262 - t24) * t372 + t242, -t200 * t49 + t248 * t215 + t254 * t105 + (t199 * t294 - t215 * t262 + t25) * t372 + t260, t25 * t103 + t24 * t105 + (-t103 * t262 - t199 * t50 + (t105 * t199 + t245) * qJD(6)) * t215 + (t105 * t262 - t199 * t49 - t3 + (t103 * t199 - t19) * qJD(6)) * t210 + t290, t245 * t24 - t19 * t25 + t9 * t200 - t37 * t47 + (t211 * t37 + t362 * t352) * t346 + t229 * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, t57, t55, -t374, t56, 0, t205 * t42 - t270 - t364, t269 * t41 + t221, 0, 0, t16, t6, t15, t103 * t378 - t46, t14, -t326, -pkin(5) * t50 - t331 * pkin(11) - t103 * t42 + t210 * t342 - t30 * t372 + t242, t37 * t375 + pkin(5) * t49 - t105 * t42 + t372 * t31 + (t294 * t372 - t60) * pkin(11) + t260, t103 * t31 + t105 * t30 + t1 + (t344 + (-t50 + t295) * pkin(11)) * t215 + ((qJD(6) * t103 - t49) * pkin(11) + t369) * t210, -pkin(5) * t9 + pkin(11) * t229 - t19 * t31 + t245 * t30 - t37 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, -t103 ^ 2 + t105 ^ 2, t103 * t372 - t49, -t327, t105 * t372 - t50, t62, -t105 * t37 - t369, t103 * t37 - t2 - t344, 0, 0;];
tauc_reg  = t4;
