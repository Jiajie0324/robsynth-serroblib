% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:39:55
% EndTime: 2019-03-09 00:40:32
% DurationCPUTime: 24.10s
% Computational Cost: add. (13511->661), mult. (30201->909), div. (0->0), fcn. (36189->12), ass. (0->535)
t519 = sin(qJ(6));
t520 = sin(qJ(5));
t522 = sin(qJ(3));
t860 = pkin(8) + pkin(9);
t491 = t860 * t522;
t525 = cos(qJ(3));
t492 = t860 * t525;
t521 = sin(qJ(4));
t834 = cos(qJ(4));
t364 = t834 * t491 + t521 * t492;
t481 = -t521 * t525 - t522 * t834;
t878 = t481 * pkin(10) - t364;
t901 = t520 * t878;
t480 = -t521 * t522 + t525 * t834;
t483 = t834 * t492;
t792 = t521 * t491;
t876 = -t483 + t792;
t360 = -t480 * pkin(10) + t876;
t833 = cos(qJ(5));
t938 = t833 * t360;
t951 = -t938 + t901;
t978 = t951 * t519;
t987 = t978 / 0.2e1;
t994 = 0.2e1 * t987;
t524 = cos(qJ(6));
t977 = t951 * t524;
t988 = -t977 / 0.2e1;
t993 = 0.2e1 * t988;
t837 = -t524 / 0.2e1;
t513 = pkin(5) * t837;
t656 = t833 * t480 + t520 * t481;
t468 = t833 * t481;
t794 = t520 * t480;
t877 = -t468 + t794;
t900 = t524 * t877;
t680 = -t900 / 0.2e1;
t992 = pkin(11) * t680 + t656 * t513 + t994;
t905 = t519 * t656;
t687 = -t905 / 0.2e1;
t904 = t519 * t877;
t689 = -t904 / 0.2e1;
t991 = pkin(5) * t687 + pkin(11) * t689 + t993;
t914 = qJD(4) + qJD(5);
t659 = qJD(3) + t914;
t990 = qJD(3) + qJD(5);
t318 = t938 / 0.2e1;
t684 = -t901 / 0.2e1;
t974 = t684 + t318;
t989 = 0.2e1 * t974;
t517 = sin(pkin(6));
t835 = cos(qJ(2));
t642 = t835 * t834;
t716 = t521 * t835;
t648 = t525 * t716;
t557 = -t522 * t642 - t648;
t543 = t833 * t557;
t649 = t522 * t716;
t556 = t525 * t642 - t649;
t548 = t520 * t556;
t535 = t517 * (t548 - t543);
t532 = t535 / 0.2e1;
t685 = t904 / 0.2e1;
t717 = t517 * t835;
t518 = cos(pkin(6));
t523 = sin(qJ(2));
t810 = t517 * t523;
t465 = -t518 * t525 + t522 * t810;
t466 = t518 * t522 + t525 * t810;
t369 = -t521 * t465 + t466 * t834;
t898 = t833 * t369;
t657 = t834 * t465 + t521 * t466;
t902 = t520 * t657;
t915 = t898 - t902;
t937 = t915 * t519;
t152 = t524 * t717 + t937;
t908 = -t877 / 0.2e1;
t698 = t152 * t908;
t7 = t524 * t532 + t915 * t685 + t698;
t986 = qJD(2) * t7;
t985 = t7 * qJD(1);
t196 = t915 * t837;
t936 = t915 * t524;
t962 = -t936 / 0.2e1;
t975 = t196 + t962;
t984 = qJD(4) * t975;
t838 = t519 / 0.2e1;
t195 = t915 * t838;
t960 = t937 / 0.2e1;
t976 = t195 + t960;
t983 = qJD(4) * t976;
t728 = qJD(3) + qJD(4);
t509 = -pkin(3) * t525 - pkin(2);
t444 = -t480 * pkin(4) + t509;
t629 = -pkin(5) * t656 - pkin(11) * t877;
t559 = t444 + t629;
t57 = -t524 * t559 + t978;
t979 = t877 * t951;
t982 = t519 * t979 - t57 * t877;
t58 = t519 * t559 + t977;
t981 = t524 * t979 - t58 * t877;
t896 = t833 * t878;
t923 = -t896 / 0.2e1;
t939 = t520 * t360;
t946 = t923 - t939 / 0.2e1;
t980 = 0.2e1 * t946;
t533 = -t535 / 0.2e1;
t677 = t900 / 0.2e1;
t153 = -t519 * t717 + t936;
t697 = t153 * t908;
t14 = t519 * t533 + t915 * t677 + t697;
t897 = t833 * t657;
t903 = t520 * t369;
t216 = t897 + t903;
t836 = t524 / 0.2e1;
t678 = t656 * t836;
t241 = t524 * t656;
t679 = t241 / 0.2e1;
t941 = t14 + (t678 - t679) * t216;
t972 = qJD(1) * t941;
t971 = qJD(2) * t941;
t970 = qJD(3) * t989;
t969 = qJD(3) * t980;
t948 = qJD(5) + t728;
t954 = t896 + t939;
t817 = t524 * t954;
t966 = t837 * t954 - t817 / 0.2e1;
t818 = t519 * t954;
t839 = -t519 / 0.2e1;
t965 = t839 * t954 - t818 / 0.2e1;
t257 = t519 * t532;
t907 = t877 / 0.2e1;
t561 = t915 * t907;
t942 = t524 * t561 + t257 + t697;
t200 = t216 * t836;
t944 = -t216 * t837 + t200;
t964 = qJD(2) * t942 + qJD(6) * t944;
t258 = t524 * t533;
t943 = t519 * t561 + t258 + t698;
t199 = t216 * t838;
t945 = -t216 * t839 + t199;
t963 = qJD(2) * t943 + qJD(6) * t945;
t961 = t936 / 0.2e1;
t959 = -t938 / 0.2e1;
t636 = t896 / 0.2e1;
t87 = t923 + t636;
t958 = qJD(5) * t87;
t957 = t87 * qJD(2);
t911 = t517 / 0.2e1;
t530 = t548 * t911 - t517 * t543 / 0.2e1;
t639 = -t717 / 0.2e1;
t895 = t877 * t639;
t917 = t895 - t530;
t155 = t917 * qJD(2);
t635 = -t898 / 0.2e1;
t928 = t902 / 0.2e1 + t635;
t874 = 0.2e1 * t928;
t956 = qJD(3) * t874 + t155;
t408 = t877 ^ 2;
t920 = -t656 ^ 2 + t408;
t932 = t920 * t524;
t950 = qJD(2) * t932;
t933 = t920 * t519;
t949 = qJD(2) * t933;
t916 = t895 + t530;
t748 = t916 * qJD(1);
t158 = t916 * qJD(2);
t926 = t920 * qJD(2);
t324 = t903 / 0.2e1;
t924 = 0.2e1 * t324;
t854 = t897 / 0.2e1;
t921 = t905 / 0.2e1;
t919 = t520 * t557 + t833 * t556;
t829 = t877 * pkin(5);
t830 = pkin(11) * t656;
t251 = t829 - t830;
t516 = t524 ^ 2;
t862 = t519 ^ 2;
t654 = t862 / 0.2e1 - t516 / 0.2e1;
t232 = t654 * t877;
t225 = t232 * qJD(6);
t765 = qJD(2) * t877;
t899 = t656 * t765;
t913 = -t516 * t899 - t225;
t910 = -t656 / 0.2e1;
t909 = t656 / 0.2e1;
t652 = t728 * t656;
t732 = qJD(5) * t656;
t893 = t652 + t732;
t803 = t519 * t524;
t881 = t659 * t803;
t151 = -qJD(2) * t232 + t881;
t879 = t924 + 0.2e1 * t854;
t891 = qJD(3) * t879;
t633 = -t468 / 0.2e1;
t875 = t633 + t794 / 0.2e1;
t890 = qJD(6) * t875;
t889 = t875 * qJD(2);
t601 = -t642 / 0.2e1;
t550 = t525 * t601 + t649 / 0.2e1;
t306 = t480 * t639 + t517 * t550;
t888 = t306 * qJD(2) + t657 * t728;
t551 = -t648 / 0.2e1 + t522 * t601;
t638 = t717 / 0.2e1;
t307 = t481 * t638 + t517 * t551;
t887 = t307 * qJD(2) - t369 * t728;
t886 = -0.2e1 * t877;
t725 = -t516 + t862;
t885 = t725 * t659;
t653 = t728 * t877;
t304 = (-t835 * t481 / 0.2e1 + t551) * t517;
t742 = t304 * qJD(1);
t762 = qJD(2) * t509;
t873 = t481 * t762 + t742;
t515 = t522 * pkin(3);
t394 = -t480 * t515 - t481 * t509;
t872 = -t394 * qJD(2) + t742;
t277 = t444 * t656;
t831 = pkin(4) * t481;
t446 = t515 - t831;
t142 = t446 * t877 + t277;
t531 = t919 * t911;
t605 = t656 * t639;
t166 = t605 + t531;
t747 = t166 * qJD(1);
t871 = -qJD(2) * t142 - t747;
t276 = t444 * t877;
t141 = -t446 * t656 + t276;
t870 = -qJD(2) * t141 - t748;
t148 = t831 * t877 - t277;
t869 = qJD(2) * t148 - t747;
t147 = -t656 * t831 - t276;
t868 = qJD(2) * t147 - t748;
t426 = t520 * pkin(4);
t721 = qJD(4) * t426;
t720 = qJD(5) * t426;
t305 = (t835 * t480 / 0.2e1 + t550) * t517;
t741 = t305 * qJD(1);
t867 = t364 * t728 - t741;
t705 = qJD(2) * t803;
t866 = t232 * t659 + t408 * t705;
t861 = pkin(5) / 0.2e1;
t643 = pkin(3) * t834 + pkin(4);
t493 = t833 * t643;
t793 = t520 * t521;
t461 = pkin(3) * t793 - t493;
t454 = -pkin(5) + t461;
t845 = -t454 / 0.2e1;
t598 = t520 * t643;
t707 = t833 * t521;
t462 = pkin(3) * t707 + t598;
t455 = pkin(11) + t462;
t844 = -t455 / 0.2e1;
t843 = t462 / 0.2e1;
t459 = t468 / 0.2e1;
t641 = t834 * t833;
t470 = (t641 - t793) * pkin(3);
t842 = -t470 / 0.2e1;
t637 = -t483 / 0.2e1;
t507 = pkin(11) + t426;
t841 = t507 / 0.2e1;
t724 = t833 * pkin(4);
t508 = -t724 - pkin(5);
t840 = -t508 / 0.2e1;
t832 = pkin(3) * t521;
t825 = t152 * t656;
t824 = t153 * t656;
t814 = t877 * t455;
t813 = t656 * t454;
t715 = t834 * t520;
t469 = (t715 + t707) * pkin(3);
t812 = t469 * t524;
t811 = t480 * t481;
t259 = t919 * t517;
t807 = t519 * t259;
t789 = t524 * t259;
t453 = t462 * qJD(5);
t463 = t469 * qJD(4);
t779 = -t463 - t453;
t666 = t910 + t909;
t105 = t725 * t666;
t778 = qJD(2) * t105;
t224 = t666 * t803;
t769 = qJD(2) * t224;
t248 = t725 * t408;
t767 = qJD(2) * t248;
t766 = qJD(2) * t656;
t424 = t637 + t483 / 0.2e1;
t764 = qJD(2) * t424;
t763 = qJD(2) * t444;
t761 = qJD(2) * t523;
t760 = qJD(2) * t525;
t759 = qJD(3) * t519;
t758 = qJD(3) * t524;
t757 = qJD(4) * t509;
t756 = qJD(4) * t519;
t755 = qJD(4) * t524;
t754 = qJD(5) * t877;
t753 = qJD(5) * t519;
t752 = qJD(5) * t524;
t751 = qJD(6) * t519;
t514 = qJD(6) * t524;
t668 = t907 + t908;
t233 = t668 * t519;
t746 = t233 * qJD(2);
t745 = t905 * qJD(2);
t667 = 0.2e1 * t910;
t236 = t667 * t519;
t227 = t236 * qJD(2);
t239 = t668 * t524;
t744 = t239 * qJD(2);
t743 = t241 * qJD(2);
t243 = t667 * t524;
t230 = t243 * qJD(2);
t357 = t480 ^ 2 - t481 ^ 2;
t740 = t357 * qJD(2);
t395 = t480 * t509 - t481 * t515;
t736 = t395 * qJD(2);
t406 = t459 + t633;
t734 = t406 * qJD(2);
t502 = -t522 ^ 2 + t525 ^ 2;
t731 = t502 * qJD(2);
t730 = t522 * qJD(3);
t729 = t525 * qJD(3);
t723 = pkin(2) * t522 * qJD(2);
t722 = pkin(2) * t760;
t719 = t519 * t810;
t706 = t516 * t765;
t704 = qJD(6) * t656 * t877;
t702 = t480 * t762;
t700 = t517 * t761;
t503 = t519 * t514;
t699 = t522 * t760;
t693 = t216 * t908;
t692 = t810 / 0.2e1;
t690 = -t807 / 0.2e1;
t681 = -t789 / 0.2e1;
t665 = t461 / 0.2e1 + t845;
t664 = qJD(3) * t835;
t663 = t834 * qJD(3);
t662 = t834 * qJD(4);
t661 = t833 * qJD(4);
t660 = t833 * qJD(5);
t651 = t728 * t524;
t650 = -t724 / 0.2e1;
t646 = t877 * t705;
t640 = qJD(2) * t717;
t634 = t898 / 0.2e1;
t632 = t426 / 0.2e1 + t843;
t631 = t861 + t665;
t630 = t914 * t426;
t627 = -0.2e1 * t646;
t626 = 0.2e1 * t646;
t624 = t842 + t840 + t845;
t220 = -t831 + t251;
t3 = -t220 * t241 + t982;
t623 = t3 * qJD(2) + t985;
t5 = -t251 * t241 + (-t57 + t978) * t877;
t622 = t5 * qJD(2) + t985;
t205 = t220 + t515;
t1 = -t205 * t241 + t982;
t621 = t1 * qJD(2) + t985;
t6 = t251 * t905 + (-t58 + t977) * t877;
t620 = t14 * qJD(1) + t6 * qJD(2);
t4 = t220 * t905 + t981;
t619 = t4 * qJD(2) + t972;
t2 = t205 * t905 + t981;
t618 = t2 * qJD(2) + t972;
t617 = t656 * t646;
t589 = t469 * t907 - t656 * t842;
t537 = (t454 / 0.2e1 + t840) * t656 + (t844 + t841) * t877 + t589;
t19 = t988 + t977 / 0.2e1 + t537 * t519;
t75 = t196 + t961;
t614 = qJD(1) * t75 + qJD(2) * t19;
t558 = (t844 + t843) * t877 - t665 * t656;
t597 = pkin(5) * t909 + pkin(11) * t907;
t538 = t558 + t597;
t23 = t519 * t538;
t613 = qJD(2) * t23;
t42 = -t57 * t656 + t904 * t954;
t587 = t692 + t693;
t49 = t681 + t825 / 0.2e1 - t587 * t519;
t612 = qJD(1) * t49 - qJD(2) * t42;
t43 = t58 * t656 - t900 * t954;
t48 = t690 - t824 / 0.2e1 + t587 * t524;
t611 = qJD(1) * t48 - qJD(2) * t43;
t609 = t813 - t814;
t608 = -t507 * t877 + t508 * t656;
t606 = t656 * t638;
t599 = -t493 / 0.2e1 + t650;
t600 = -t641 / 0.2e1;
t428 = pkin(3) * t600 - t599;
t603 = t428 * qJD(3) - t957;
t602 = t877 * (-qJD(6) + t766);
t596 = -t830 / 0.2e1 + t829 / 0.2e1;
t595 = t854 - t897 / 0.2e1;
t591 = -t469 / 0.2e1 + t632;
t590 = t455 * t910 + t845 * t877;
t588 = -t656 * t841 + t840 * t877;
t164 = -t606 + t531;
t584 = -qJD(1) * t164 - t656 * t763;
t583 = -t763 * t877 - t748;
t145 = -t766 * t877 + t890;
t582 = -t899 + t890;
t581 = t650 + t861 + t840;
t580 = t251 / 0.2e1 + t596;
t575 = t205 / 0.2e1 + t590;
t574 = t220 / 0.2e1 + t588;
t539 = t507 * t908 - t656 * t840 + (t520 * t907 + t833 * t909) * pkin(4);
t536 = t539 + t597;
t27 = t519 * t536;
t294 = t591 * t524;
t573 = qJD(2) * t27 - qJD(3) * t294;
t572 = -qJD(1) * t595 - qJD(3) * t461 - t957;
t567 = t901 / 0.2e1;
t86 = t959 + t567 + t974;
t97 = t634 - t902 / 0.2e1 + t928;
t571 = qJD(1) * t97 + qJD(2) * t86 + qJD(3) * t462;
t83 = t318 + t959;
t570 = -qJD(2) * t83 + qJD(3) * t469;
t100 = t324 - t903 / 0.2e1 + t595;
t91 = t636 + t939 / 0.2e1 + t946;
t569 = -qJD(1) * t100 - qJD(2) * t91 + qJD(3) * t470;
t207 = t635 + t634;
t85 = t684 + t567;
t568 = qJD(1) * t207 - qJD(2) * t85 - qJD(3) * t426;
t566 = t893 * t877;
t22 = t987 - t978 / 0.2e1 + t537 * t524;
t74 = t195 - t937 / 0.2e1;
t565 = -qJD(1) * t74 - qJD(2) * t22 - t469 * t759;
t26 = t524 * t538;
t564 = -qJD(2) * t26 - t462 * t759;
t32 = t519 * t575;
t563 = -qJD(2) * t32 - t454 * t758;
t34 = t524 * t575;
t562 = qJD(2) * t34 - t454 * t759;
t288 = t631 * t519;
t425 = t581 * t519;
t46 = t580 * t524;
t555 = pkin(5) * t753 + qJD(2) * t46 + qJD(3) * t288 + qJD(4) * t425;
t289 = t631 * t524;
t427 = t581 * t524;
t44 = t580 * t519;
t554 = pkin(5) * t752 - qJD(2) * t44 + qJD(3) * t289 + qJD(4) * t427;
t282 = t624 * t519;
t40 = t524 * t574;
t553 = qJD(2) * t40 + qJD(3) * t282 - t508 * t756;
t283 = t624 * t524;
t38 = t519 * t574;
t552 = -qJD(2) * t38 + qJD(3) * t283 - t508 * t755;
t293 = t591 * t519;
t30 = t524 * t536;
t547 = -qJD(2) * t30 - qJD(3) * t293 - t519 * t721;
t546 = -t814 / 0.2e1 + t813 / 0.2e1 + t589;
t534 = t877 * t535;
t512 = pkin(5) * t839;
t500 = t519 * t720;
t490 = t725 * qJD(6);
t487 = t508 * t836;
t486 = t508 * t838;
t464 = t470 * qJD(4);
t452 = t461 * qJD(5);
t451 = t519 * t463;
t437 = t519 * t453;
t432 = t454 * t836;
t431 = t454 * t838;
t430 = t524 * t650 + t487 + t513;
t429 = t519 * t650 + t486 + t512;
t422 = qJD(2) * t811;
t417 = (t600 + t793) * pkin(3) + t599;
t416 = -t426 / 0.2e1 - t598 / 0.2e1 + (-t707 - t715 / 0.2e1) * pkin(3);
t415 = t728 * t481;
t414 = t728 * t480;
t402 = t406 * qJD(5);
t365 = 0.2e1 * t637 + t792;
t352 = t503 * t886;
t298 = t305 * qJD(2);
t296 = t304 * qJD(2);
t295 = -t812 / 0.2e1 - t632 * t524;
t292 = t469 * t838 + t519 * t632;
t291 = t461 * t836 + t432 + t513;
t290 = t461 * t838 + t431 + t512;
t287 = -t794 + 0.2e1 * t459;
t285 = t470 * t837 + t432 + t487;
t284 = t470 * t839 + t431 + t486;
t250 = t627 - t885;
t249 = t626 + t885;
t244 = 0.2e1 * t677;
t242 = -t241 / 0.2e1 + t678;
t238 = 0.2e1 * t685;
t237 = t921 + t687;
t223 = (t678 + t679) * t519;
t222 = t514 + t230;
t221 = -t227 - t751;
t202 = t503 + t769;
t201 = t503 - t769;
t167 = t605 - t531;
t165 = -t606 - t531;
t160 = t166 * qJD(2);
t157 = t167 * qJD(2);
t140 = t948 * t875;
t138 = qJD(5) * t287 - t653;
t119 = 0.2e1 * t635 + t902;
t118 = t924 + t897;
t106 = t516 * t909 - t654 * t656 + t862 * t910;
t104 = -t490 - t778;
t103 = -t490 + t778;
t80 = 0.2e1 * t200;
t77 = 0.2e1 * t199;
t72 = 0.2e1 * t962;
t64 = 0.2e1 * t960;
t56 = -qJD(5) * t224 + t913;
t55 = qJD(5) * t105 + t352 + 0.2e1 * t617;
t54 = -qJD(5) * t233 + qJD(6) * t243 - t950;
t53 = -qJD(5) * t239 - qJD(6) * t236 + t949;
t52 = qJD(5) * t223 - t225 + (t519 * t651 + t706) * t656;
t51 = t824 / 0.2e1 + t216 * t677 + t690 + t524 * t692;
t50 = -t825 / 0.2e1 + t519 * t693 + t681 - t719 / 0.2e1;
t47 = t251 * t836 - t524 * t596 - t818;
t45 = t251 * t839 + t519 * t596 - t817;
t41 = t220 * t836 - t524 * t588 + t965;
t39 = t220 * t839 + t519 * t588 + t966;
t37 = qJD(5) * t238 + qJD(6) * t242 + t519 * t653 + t950;
t36 = qJD(5) * t244 + qJD(6) * t237 + t651 * t877 - t949;
t35 = t205 * t836 - t524 * t590 + t965;
t33 = t205 * t839 + t519 * t590 + t966;
t31 = qJD(5) * t106 - t652 * t725 + t352 - 0.2e1 * t617;
t29 = t524 * t539 + t992;
t28 = t519 * t539 + t991;
t25 = t524 * t558 + t992;
t24 = t519 * t558 + t991;
t21 = t507 * t680 + t508 * t678 + t524 * t546 + t994;
t20 = t507 * t689 + t508 * t921 + t519 * t546 + t993;
t13 = t257 + (-t153 / 0.2e1 + t961) * t877;
t8 = t258 + (-t152 / 0.2e1 + t960) * t877;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t700, -t640, 0, 0, 0, 0, 0 (-t522 * t664 - t523 * t760) * t517 (t522 * t761 - t525 * t664) * t517, 0, 0, 0, 0, 0, t307 * t728 - t480 * t700, t306 * t728 - t481 * t700, 0, 0, 0, 0, 0, -t656 * t700 + t917 * t948, qJD(5) * t165 + t167 * t728 + t700 * t877, 0, 0, 0, 0, 0 (-(t524 * t810 - t807) * t656 + t519 * t534) * qJD(2) + t8 * qJD(5) + t51 * qJD(6) + t728 * t943 ((t719 + t789) * t656 + t524 * t534) * qJD(2) + t13 * qJD(5) + t50 * qJD(6) + t728 * t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466 * qJD(3) - t522 * t640, t465 * qJD(3) - t525 * t640, 0, 0, 0, 0, 0, t887, t888, 0, 0, 0, 0, 0, -qJD(3) * t915 + t874 * t914 + t155, qJD(3) * t216 + t879 * t914 + t157, 0, 0, 0, 0, 0, qJD(5) * t72 - t758 * t915 + t963 + t984, qJD(5) * t64 + t759 * t915 + t964 + t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t887, t888, 0, 0, 0, 0, 0, -qJD(4) * t915 + qJD(5) * t119 + t956, qJD(4) * t216 + qJD(5) * t118 + t157 + t891, 0, 0, 0, 0, 0, -t755 * t915 + t975 * t990 + t963, t756 * t915 + t976 * t990 + t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t119 - qJD(5) * t915 + t956, qJD(2) * t165 + qJD(4) * t118 + qJD(5) * t216 + t891, 0, 0, 0, 0, 0, qJD(2) * t8 + qJD(3) * t72 + qJD(6) * t77 - t752 * t915 + t984, qJD(2) * t13 + qJD(3) * t64 + qJD(6) * t80 + t753 * t915 + t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t51 + qJD(5) * t77 - qJD(6) * t153 + t728 * t945, qJD(2) * t50 + qJD(5) * t80 + qJD(6) * t152 + t728 * t944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t728 * t304, -t728 * t305, 0, 0, 0, 0, 0, t948 * t916, qJD(5) * t164 + t166 * t728, 0, 0, 0, 0, 0, -qJD(6) * t48 + t659 * t7, qJD(5) * t14 - qJD(6) * t49 + t728 * t941; 0, 0, 0, 0, t522 * t729, t502 * qJD(3), 0, 0, 0, -pkin(2) * t730, -pkin(2) * t729, -t728 * t811, t728 * t357, 0, 0, 0, qJD(3) * t394 - t481 * t757, qJD(3) * t395 + t480 * t757, t566, -t948 * t920, 0, 0, 0, qJD(3) * t141 - qJD(4) * t147 + t444 * t754, qJD(3) * t142 - qJD(4) * t148 + t444 * t732, -t408 * t503 + t516 * t566, -0.2e1 * t519 * t893 * t900 + qJD(6) * t248, t519 * t704 + t932 * t948, t524 * t704 - t933 * t948 -(t653 + t754) * t656, qJD(3) * t1 + qJD(4) * t3 + qJD(5) * t5 + qJD(6) * t43, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t6 + qJD(6) * t42; 0, 0, 0, 0, t699, t731, t729, -t730, 0, -pkin(8) * t729 - t723, pkin(8) * t730 - t722, -t422, t740, t414, t415, 0, qJD(3) * t876 + t365 * qJD(4) - t872, t736 + t867, t899, -t926, t893, t138, 0, -qJD(3) * t951 + t914 * t989 - t870, -qJD(3) * t954 + t914 * t980 - t871, t52, t31, t37, t36, t145 (t519 * t609 - t977) * qJD(3) + t20 * qJD(4) + t24 * qJD(5) + t35 * qJD(6) + t621 (t524 * t609 + t978) * qJD(3) + t21 * qJD(4) + t25 * qJD(5) + t33 * qJD(6) + t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t422, t740, t414, t415, 0, t365 * qJD(3) + qJD(4) * t876 - t873, t702 + t867, t899, -t926, t893, t138, 0, -qJD(4) * t951 + qJD(5) * t989 - t868 + t970, -qJD(4) * t954 + qJD(5) * t980 - t869 + t969, t52, t31, t37, t36, t145, t20 * qJD(3) + (t519 * t608 - t977) * qJD(4) + t28 * qJD(5) + t41 * qJD(6) + t623, t21 * qJD(3) + (t524 * t608 + t978) * qJD(4) + t29 * qJD(5) + t39 * qJD(6) + t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t899, -t926, t893, t287 * t728 - t754, 0, qJD(4) * t989 - qJD(5) * t951 - t583 + t970, qJD(4) * t980 - qJD(5) * t954 - t584 + t969, -t225 - (-t519 * t752 - t706) * t656 + t728 * t223, t352 + t728 * t106 - (qJD(5) * t725 + t626) * t656, t238 * t728 + t753 * t877 + t950, t244 * t728 + t752 * t877 - t949, t582, t24 * qJD(3) + t28 * qJD(4) + (t519 * t629 - t977) * qJD(5) + t47 * qJD(6) + t622, t25 * qJD(3) + t29 * qJD(4) + (t524 * t629 + t978) * qJD(5) + t45 * qJD(6) + t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t866, t881 * t886 + t767, t242 * t728 + t519 * t602, t237 * t728 + t524 * t602, t140, qJD(3) * t35 + qJD(4) * t41 + qJD(5) * t47 - qJD(6) * t58 - t611, qJD(3) * t33 + qJD(4) * t39 + qJD(5) * t45 + qJD(6) * t57 - t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t298, 0, 0, 0, 0, 0, -qJD(5) * t97 - t158, qJD(4) * t100 + qJD(5) * t595 - t160, 0, 0, 0, 0, 0, qJD(4) * t75 - t986, qJD(4) * t74 - t971; 0, 0, 0, 0, -t699, -t731, 0, 0, 0, t723, t722, t422, -t740, 0, 0, 0, qJD(4) * t424 + t872, t741 - t736, -t899, t926, 0, -t402, 0, qJD(4) * t83 - qJD(5) * t86 + t870, qJD(4) * t91 + t871 + t958, t56, t55, t54, t53, -t145, qJD(4) * t19 + qJD(5) * t23 - qJD(6) * t34 - t621, qJD(4) * t22 + qJD(5) * t26 + qJD(6) * t32 - t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t832, -pkin(3) * t662, 0, 0, 0, 0, 0, t779, -t464 + t452, t503, -t490, 0, 0, 0, t454 * t751 + t524 * t779, t454 * t514 + t437 + t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t728 * t832 + t764 (-t663 - t662) * pkin(3), 0, 0, 0, 0, 0, qJD(5) * t416 - t463 - t570, qJD(5) * t417 - t464 - t569, t503, -t490, 0, 0, 0, qJD(5) * t295 + qJD(6) * t284 - t728 * t812 + t614, qJD(5) * t292 + qJD(6) * t285 + t451 - t565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t734, 0, qJD(4) * t416 - t453 - t571, qJD(4) * t417 + t452 - t572, t201, t103, -t746, -t744, 0, -t462 * t524 * t990 + qJD(4) * t295 + qJD(6) * t290 + t613, qJD(4) * t292 + qJD(6) * t291 + t437 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t250, t222, t221, -t889, qJD(4) * t284 + qJD(5) * t290 - t455 * t514 - t562, qJD(4) * t285 + qJD(5) * t291 + t455 * t751 - t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t298, 0, 0, 0, 0, 0, qJD(5) * t207 - t158, -qJD(3) * t100 - t160, 0, 0, 0, 0, 0, -qJD(3) * t75 - t986, -qJD(3) * t74 - t971; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t740, 0, 0, 0, -qJD(3) * t424 + t873, t741 - t702, -t899, t926, 0, -t402, 0, -qJD(3) * t83 - qJD(5) * t85 + t868, -qJD(3) * t91 + t869 + t958, t56, t55, t54, t53, -t145, -qJD(3) * t19 + qJD(5) * t27 - qJD(6) * t40 - t623, -qJD(3) * t22 + qJD(5) * t30 + qJD(6) * t38 - t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t832 - t764, pkin(3) * t663, 0, 0, 0, 0, 0, t570 - t720, -qJD(5) * t428 + t569, t503, -t490, 0, 0, 0, -qJD(5) * t294 - qJD(6) * t282 + t469 * t758 - t614, qJD(5) * t293 - qJD(6) * t283 + t565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, -pkin(4) * t660, t503, -t490, 0, 0, 0, t508 * t751 - t524 * t720, t508 * t514 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t734, 0, -t630 + t568 (-t661 - t660) * pkin(4) - t603, t201, t103, -t746, -t744, 0, qJD(6) * t429 - t524 * t630 + t573, qJD(6) * t430 + t500 - t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t250, t222, t221, -t889, qJD(5) * t429 - t507 * t514 - t553, qJD(5) * t430 + t507 * t751 - t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t97 - qJD(4) * t207 - t158, -qJD(2) * t164 - qJD(3) * t595, 0, 0, 0, 0, 0, -t986, -qJD(2) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t899, t926, 0, t728 * t406, 0, qJD(3) * t86 + qJD(4) * t85 + t583, -t728 * t87 + t584, t224 * t728 + t913, -t105 * t728 - t627 * t656 + t352, -qJD(6) * t241 + t233 * t728 - t950, qJD(6) * t905 + t239 * t728 + t949, -t582, -qJD(3) * t23 - qJD(4) * t27 - qJD(6) * t46 - t622, -qJD(3) * t26 - qJD(4) * t30 + qJD(6) * t44 - t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t734, 0, t571 + t721, qJD(4) * t428 + t572, t202, t104, t746, t744, 0, qJD(4) * t294 - qJD(6) * t288 + t462 * t758 - t613, -qJD(4) * t293 - qJD(6) * t289 + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t734, 0, -t568 + t721, pkin(4) * t661 + t603, t202, t104, t746, t744, 0, -qJD(6) * t425 + t524 * t721 - t573, -qJD(6) * t427 + t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, -t490, 0, 0, 0, -pkin(5) * t751, -pkin(5) * t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t250, t514 - t743, t745 - t751, -t889, -pkin(11) * t514 - t555, pkin(11) * t751 - t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48, qJD(2) * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t866, 0.2e1 * t877 * t881 - t767, qJD(5) * t241 - t243 * t728 - t519 * t899, -qJD(5) * t905 + t236 * t728 - t524 * t899, t140, qJD(3) * t34 + qJD(4) * t40 + qJD(5) * t46 + t611, -qJD(3) * t32 - qJD(4) * t38 - qJD(5) * t44 + t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, t249, -t230, t227, t889, qJD(4) * t282 + qJD(5) * t288 + t562, qJD(4) * t283 + qJD(5) * t289 + t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, t249, -t230, t227, t889, qJD(5) * t425 + t553, qJD(5) * t427 + t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, t249, t743, -t745, t889, t555, t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
