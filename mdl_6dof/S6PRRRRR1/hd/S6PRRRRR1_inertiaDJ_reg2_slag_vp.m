% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,d6,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:41
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRR1_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:39:51
% EndTime: 2019-03-09 00:40:02
% DurationCPUTime: 4.38s
% Computational Cost: add. (7914->321), mult. (18830->553), div. (0->0), fcn. (19358->12), ass. (0->180)
t112 = sin(qJ(6));
t108 = t112 ^ 2;
t116 = cos(qJ(6));
t109 = t116 ^ 2;
t238 = t108 + t109;
t113 = sin(qJ(5));
t231 = cos(qJ(4));
t201 = t231 * pkin(3);
t166 = t201 + pkin(4);
t230 = cos(qJ(5));
t140 = t230 * t166;
t180 = t231 * qJD(4);
t174 = pkin(3) * t180;
t229 = sin(qJ(4));
t179 = t229 * qJD(4);
t52 = -qJD(5) * t140 - t230 * t174 + (qJD(5) * t229 + t179) * t113 * pkin(3);
t177 = t238 * t52;
t165 = t230 * t229;
t244 = (qJD(4) + qJD(5)) * pkin(3) * (t113 * t231 + t165);
t117 = cos(qJ(3));
t190 = t231 * t117;
t232 = -pkin(9) - pkin(8);
t114 = sin(qJ(3));
t169 = t232 * t229;
t82 = t114 * t169;
t63 = -t190 * t232 + t82;
t243 = t63 * qJD(4);
t170 = t232 * t231;
t189 = t229 * t117;
t62 = t114 * t170 + t189 * t232;
t242 = qJD(3) * t229 + t179;
t241 = qJD(3) * t231 + t180;
t111 = cos(pkin(6));
t110 = sin(pkin(6));
t115 = sin(qJ(2));
t213 = t110 * t115;
t143 = -t111 * t117 + t114 * t213;
t240 = qJD(3) * t143;
t210 = t108 - t109;
t237 = t210 * qJD(6);
t75 = t111 * t114 + t117 * t213;
t211 = t75 * qJD(3);
t235 = t114 * t242 - t117 * t241;
t118 = cos(qJ(2));
t208 = qJD(2) * t118;
t186 = t110 * t208;
t234 = -t117 * t186 + t240;
t141 = qJD(3) * t111 + t186;
t233 = (t117 * t141 + t240) * t117 + (t114 * t141 - t211) * t114;
t149 = qJD(3) * t169;
t150 = qJD(3) * t170;
t120 = -pkin(10) * t235 + t114 * t149 - t117 * t150 + t243;
t81 = t114 * t231 + t189;
t126 = -t81 * pkin(10) + t62;
t123 = t113 * t126;
t182 = qJD(5) * t230;
t175 = t114 * t241 + t117 * t242;
t40 = -qJD(4) * t62 - t114 * t150 - t117 * t149;
t34 = -pkin(10) * t175 - t40;
t158 = t114 * t229 - t190;
t44 = -pkin(10) * t158 + t63;
t15 = qJD(5) * t123 + t113 * t34 + t120 * t230 + t182 * t44;
t121 = t230 * t126;
t35 = t113 * t44 - t121;
t228 = t15 * t35;
t207 = qJD(5) * t113;
t196 = pkin(4) * t207;
t53 = t196 + t244;
t227 = t35 * t53;
t129 = -t114 * t186 - t211;
t139 = t143 * t229 - t231 * t75;
t119 = -qJD(4) * t139 - t129 * t231 - t229 * t234;
t25 = -t129 * t229 + t143 * t180 + t179 * t75 + t231 * t234;
t45 = -t143 * t231 - t229 * t75;
t38 = t113 * t45 - t139 * t230;
t11 = qJD(5) * t38 - t113 * t25 + t119 * t230;
t37 = -t113 * t139 - t230 * t45;
t226 = t37 * t11;
t225 = t37 * t53;
t138 = t230 * t158;
t26 = qJD(5) * t138 + t113 * t175 + t207 * t81 + t230 * t235;
t142 = t113 * t158;
t59 = t230 * t81 - t142;
t224 = t59 * t26;
t106 = qJD(6) * t116;
t33 = t35 * t106;
t223 = t112 * t15 + t33;
t200 = t229 * pkin(3);
t72 = -t113 * t200 + t140;
t68 = -pkin(5) - t72;
t222 = t106 * t68 + t112 * t53;
t172 = pkin(4) * t182;
t71 = t238 * t172;
t104 = -pkin(4) * t230 - pkin(5);
t221 = t104 * t106 + t112 * t196;
t219 = qJD(5) * pkin(4);
t218 = t113 * t35;
t217 = t113 * t37;
t216 = t116 * t26;
t73 = pkin(3) * t165 + t113 * t166;
t214 = t110 ^ 2 * t115;
t212 = t110 * t118;
t209 = qJD(2) * t115;
t206 = qJD(6) * t112;
t205 = t114 * qJD(3);
t204 = t117 * qJD(3);
t27 = -qJD(5) * t142 - t113 * t235 + t175 * t230 + t182 * t81;
t58 = t113 * t81 + t138;
t203 = 0.2e1 * t58 * t27;
t202 = -0.2e1 * pkin(2) * qJD(3);
t199 = pkin(5) * t206;
t198 = pkin(5) * t106;
t197 = pkin(3) * t205;
t195 = t112 * t216;
t194 = t59 * t206;
t193 = t59 * t106;
t32 = t35 * t206;
t105 = -t117 * pkin(3) - pkin(2);
t192 = t112 * t230;
t191 = t116 * t230;
t188 = t118 * t205;
t187 = t110 * t209;
t185 = t112 * t106;
t184 = t114 * t204;
t64 = t68 * t206;
t178 = -t116 * t53 + t64;
t176 = -0.2e1 * t196;
t173 = pkin(3) * t179;
t57 = t59 ^ 2;
t171 = t57 * t185;
t168 = t208 * t214;
t164 = t11 * t35 + t37 * t15;
t163 = t11 * t59 - t26 * t37;
t162 = t15 * t59 - t26 * t35;
t161 = t26 * t58 - t27 * t59;
t160 = t52 * t58 + t53 * t59;
t69 = pkin(11) + t73;
t159 = t58 * t69 - t59 * t68;
t103 = t113 * pkin(4) + pkin(11);
t157 = t103 * t58 - t104 * t59;
t67 = pkin(4) * t158 + t105;
t124 = -t58 * pkin(5) + t59 * pkin(11) - t67;
t122 = t116 * t124;
t36 = t230 * t44 + t123;
t19 = -t112 * t36 - t122;
t20 = -t112 * t124 + t116 * t36;
t156 = t112 * t20 + t116 * t19;
t155 = t112 * t19 - t116 * t20;
t144 = t112 * t212 - t116 * t38;
t145 = t112 * t38 + t116 * t212;
t154 = -t112 * t144 - t116 * t145;
t153 = -t112 * t145 + t116 * t144;
t84 = t104 * t206;
t148 = -t116 * t196 + t84;
t147 = t194 + t216;
t146 = -t116 * t27 + t206 * t58;
t137 = t238 * t230;
t136 = (t113 * t59 - t230 * t58) * qJD(5);
t50 = pkin(4) * t175 + t197;
t133 = -t26 * t68 - t27 * t69 + t160;
t127 = t27 * pkin(5) + t26 * pkin(11) + t50;
t14 = -qJD(5) * t121 + t113 * t120 + t207 * t44 - t230 * t34;
t3 = qJD(6) * t122 - t112 * t127 + t116 * t14 + t206 * t36;
t4 = -qJD(6) * t20 + t112 * t14 + t116 * t127;
t1 = -qJD(6) * t156 - t112 * t4 - t116 * t3;
t10 = t113 * t119 - t139 * t207 - t182 * t45 + t230 * t25;
t5 = qJD(6) * t145 + t10 * t116 - t112 * t187;
t6 = qJD(6) * t144 + t112 * t10 + t116 * t187;
t2 = -qJD(6) * t154 - t112 * t6 - t116 * t5;
t125 = pkin(4) * t136 - t103 * t27 - t104 * t26;
t94 = -0.2e1 * t185;
t93 = 0.2e1 * t185;
t80 = -0.2e1 * t237;
t41 = -t243 + (t117 * t170 - t82) * qJD(3);
t22 = t106 * t58 + t112 * t27;
t18 = t237 * t59 + t195;
t16 = -0.4e1 * t185 * t59 + t210 * t26;
t8 = -t11 * t116 + t206 * t37;
t7 = t106 * t37 + t11 * t112;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (-t214 + (t114 * t143 + t117 * t75) * t110) * t208, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t119 * t45 + 0.2e1 * t139 * t25 - 0.2e1 * t168, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t10 * t38 - 0.2e1 * t168 + 0.2e1 * t226, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t144 * t5 - 0.2e1 * t145 * t6 + 0.2e1 * t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187, -t186, 0, 0, 0, 0, 0, 0, 0, 0 (-t117 * t209 - t188) * t110 (t114 * t209 - t118 * t204) * t110, t233, -pkin(2) * t187 + pkin(8) * t233, 0, 0, 0, 0, 0, 0 (-t118 * t175 + t158 * t209) * t110 (t118 * t235 + t209 * t81) * t110, t119 * t81 + t139 * t175 + t158 * t25 + t235 * t45, -pkin(3) * t110 * t188 + t105 * t187 - t119 * t62 + t139 * t40 - t25 * t63 + t45 * t41, 0, 0, 0, 0, 0, 0 (-t118 * t27 + t209 * t58) * t110 (t118 * t26 + t209 * t59) * t110, t10 * t58 - t27 * t38 + t163, -t10 * t36 - t38 * t14 + (-t118 * t50 + t209 * t67) * t110 + t164, 0, 0, 0, 0, 0, 0, t112 * t163 - t145 * t27 + t193 * t37 + t58 * t6, t116 * t163 + t144 * t27 - t194 * t37 + t5 * t58, t154 * t26 + (qJD(6) * t153 + t112 * t5 - t116 * t6) * t59, t144 * t3 - t145 * t4 + t19 * t6 - t20 * t5 + t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t184, 0.2e1 * (-t114 ^ 2 + t117 ^ 2) * qJD(3), 0, -0.2e1 * t184, 0, 0, t114 * t202, t117 * t202, 0, 0, -0.2e1 * t81 * t235, 0.2e1 * t158 * t235 - 0.2e1 * t175 * t81, 0, 0.2e1 * t158 * t175, 0, 0, 0.2e1 * t105 * t175 + 0.2e1 * t158 * t197, -0.2e1 * t105 * t235 + 0.2e1 * t197 * t81, 0.2e1 * t158 * t40 - 0.2e1 * t175 * t63 + 0.2e1 * t235 * t62 - 0.2e1 * t41 * t81, 0.2e1 * t105 * t197 - 0.2e1 * t40 * t63 + 0.2e1 * t41 * t62, -0.2e1 * t224, 0.2e1 * t161, 0, t203, 0, 0, 0.2e1 * t27 * t67 + 0.2e1 * t50 * t58, -0.2e1 * t26 * t67 + 0.2e1 * t50 * t59, 0.2e1 * t14 * t58 - 0.2e1 * t27 * t36 + 0.2e1 * t162, -0.2e1 * t14 * t36 + 0.2e1 * t50 * t67 + 0.2e1 * t228, -0.2e1 * t109 * t224 - 0.2e1 * t171, 0.4e1 * t195 * t59 + 0.2e1 * t237 * t57, -0.2e1 * t116 * t161 - 0.2e1 * t194 * t58, -0.2e1 * t108 * t224 + 0.2e1 * t171, 0.2e1 * t112 * t161 - 0.2e1 * t193 * t58, t203, 0.2e1 * t112 * t162 + 0.2e1 * t19 * t27 + 0.2e1 * t33 * t59 + 0.2e1 * t4 * t58, 0.2e1 * t116 * t162 - 0.2e1 * t20 * t27 + 0.2e1 * t3 * t58 - 0.2e1 * t32 * t59, 0.2e1 * t156 * t26 + 0.2e1 * (qJD(6) * t155 + t112 * t3 - t116 * t4) * t59, 0.2e1 * t19 * t4 - 0.2e1 * t20 * t3 + 0.2e1 * t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t234, 0, 0, 0, 0, 0, 0, 0, 0, -t119, t25, 0, -t119 * t201 - t139 * t174 - t173 * t45 - t200 * t25, 0, 0, 0, 0, 0, 0, -t11, t10, 0, -t10 * t73 - t11 * t72 - t38 * t52 + t225, 0, 0, 0, 0, 0, 0, t8, t7, t2, t11 * t68 + t153 * t52 + t2 * t69 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, 0, -t205, 0, -pkin(8) * t204, pkin(8) * t205, 0, 0, 0, 0, -t235, 0, -t175, 0, t41, t40, -t158 * t174 + t173 * t81 - t175 * t200 + t201 * t235 (-t229 * t40 + t231 * t41 + (-t229 * t62 + t231 * t63) * qJD(4)) * pkin(3), 0, 0, -t26, 0, -t27, 0, -t15, t14, t26 * t72 - t27 * t73 + t160, -t14 * t73 - t15 * t72 - t36 * t52 + t227, -t18, t16, t22, t18, -t146, 0, t32 + (-qJD(6) * t159 - t15) * t116 + t133 * t112, t116 * t133 + t159 * t206 + t223, t1, t1 * t69 + t15 * t68 + t155 * t52 + t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t173, -0.2e1 * t174, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t53, 0.2e1 * t52, 0, -0.2e1 * t52 * t73 - 0.2e1 * t53 * t72, t93, t80, 0, t94, 0, 0, 0.2e1 * t178, 0.2e1 * t222, -0.2e1 * t177, -0.2e1 * t177 * t69 + 0.2e1 * t53 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, t25, 0, 0, 0, 0, 0, 0, 0, 0, -t11, t10, 0 (-t230 * t11 - t10 * t113 + (t230 * t38 + t217) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, t8, t7, t2, t11 * t104 + (-t144 * t191 + t145 * t192 + t217) * t219 + t2 * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, -t175, 0, t41, t40, 0, 0, 0, 0, -t26, 0, -t27, 0, -t15, t14 (-t113 * t27 + t230 * t26 + t136) * pkin(4) (-t230 * t15 - t113 * t14 + (t230 * t36 + t218) * qJD(5)) * pkin(4), -t18, t16, t22, t18, -t146, 0, t32 + (-qJD(6) * t157 - t15) * t116 + t125 * t112, t116 * t125 + t157 * t206 + t223, t1, t15 * t104 + (-t19 * t192 + t191 * t20 + t218) * t219 + t1 * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t174, 0, 0, 0, 0, 0, 0, 0, 0, t176 - t244, -t172 + t52, 0 (-t230 * t53 - t113 * t52 + (-t113 * t72 + t230 * t73) * qJD(5)) * pkin(4), t93, t80, 0, t94, 0, 0, t64 + t84 + (-t53 - t196) * t116, t221 + t222, t71 - t177, t53 * t104 - t103 * t177 + (t113 * t68 + t137 * t69) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, -0.2e1 * t172, 0, 0, t93, t80, 0, t94, 0, 0, 0.2e1 * t148, 0.2e1 * t221, 0.2e1 * t71, 0.2e1 * (t103 * t137 + t104 * t113) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, t10, 0, 0, 0, 0, 0, 0, 0, 0, t8, t7, t2, -pkin(5) * t11 + pkin(11) * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, -t27, 0, -t15, t14, 0, 0, -t18, t16, t22, t18, -t146, 0, t32 + (pkin(5) * t26 - pkin(11) * t27) * t112 + (-t15 + (-pkin(5) * t59 - pkin(11) * t58) * qJD(6)) * t116, pkin(5) * t147 + pkin(11) * t146 + t223, t1, -pkin(5) * t15 + pkin(11) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t52, 0, 0, t93, t80, 0, t94, 0, 0, t178 - t199, -t198 + t222, -t177, -pkin(5) * t53 - pkin(11) * t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196, -t172, 0, 0, t93, t80, 0, t94, 0, 0, t148 - t199, -t198 + t221, t71 (-pkin(5) * t113 + pkin(11) * t137) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t80, 0, t94, 0, 0, -0.2e1 * t199, -0.2e1 * t198, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, t5, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t147, 0, t112 * t26 - t193, t27, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t206, 0, -t106 * t69 + t112 * t52, t116 * t52 + t206 * t69, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t206, 0, -t103 * t106 - t112 * t172, t103 * t206 - t116 * t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t206, 0, -pkin(11) * t106, pkin(11) * t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
