% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRPRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:42:30
% EndTime: 2019-03-09 03:42:50
% DurationCPUTime: 9.54s
% Computational Cost: add. (7433->474), mult. (16489->651), div. (0->0), fcn. (18178->10), ass. (0->382)
t606 = qJD(5) + qJD(6);
t349 = sin(pkin(11));
t356 = cos(qJ(5));
t502 = t356 * t349;
t350 = cos(pkin(11));
t353 = sin(qJ(5));
t510 = t353 * t350;
t308 = t502 + t510;
t357 = cos(qJ(3));
t283 = t308 * t357;
t355 = cos(qJ(6));
t274 = t355 * t283;
t501 = t356 * t350;
t511 = t353 * t349;
t580 = t501 - t511;
t285 = t580 * t357;
t352 = sin(qJ(6));
t513 = t352 * t285;
t412 = t274 / 0.2e1 + t513 / 0.2e1;
t399 = -t355 * t308 - t352 * t580;
t600 = t399 * t357;
t605 = -t600 / 0.2e1 - t412;
t611 = qJD(2) * t605;
t604 = t600 / 0.2e1 - t412;
t578 = qJD(3) * t604;
t579 = qJD(3) * t605;
t550 = pkin(8) + qJ(4);
t321 = t550 * t349;
t322 = t550 * t350;
t252 = -t321 * t353 + t322 * t356;
t194 = pkin(9) * t580 + t252;
t251 = t356 * t321 + t322 * t353;
t386 = -pkin(9) * t308 - t251;
t89 = t355 * t194 + t352 * t386;
t610 = t606 * t89;
t402 = -t352 * t194 + t355 * t386;
t609 = t606 * t402;
t354 = sin(qJ(3));
t281 = t308 * t354;
t284 = t580 * t354;
t422 = t355 * t281 + t352 * t284;
t575 = t422 * qJD(6);
t590 = t422 * qJD(5);
t388 = t590 + t575;
t275 = t355 * t284;
t515 = t352 * t281;
t584 = t275 - t515;
t588 = t422 ^ 2 - t584 ^ 2;
t608 = qJD(1) * t588;
t234 = t352 * t308 - t355 * t580;
t589 = t234 ^ 2 - t399 ^ 2;
t607 = qJD(3) * t589;
t338 = sin(pkin(10)) * pkin(1) + pkin(7);
t324 = t354 * t338;
t520 = t349 * t354;
t297 = pkin(4) * t520 + t324;
t215 = pkin(5) * t281 + t297;
t603 = t215 * t422;
t602 = t215 * t584;
t482 = qJD(3) * t399;
t601 = t234 * t482;
t447 = t357 * qJD(1);
t599 = t422 * t447;
t486 = qJD(1) * t584;
t598 = t422 * t486;
t568 = t399 / 0.2e1;
t597 = t422 * t568;
t340 = -pkin(4) * t350 - pkin(3);
t278 = -pkin(5) * t580 + t340;
t567 = -t278 / 0.2e1;
t596 = t567 * t584;
t595 = t584 * t447;
t495 = t606 * t234;
t594 = -t482 + t486;
t593 = qJD(4) * t234;
t592 = qJD(4) * t399;
t591 = qJD(4) * t422;
t573 = t606 * t399;
t393 = qJD(1) * t422 + qJD(3) * t234;
t587 = t340 / 0.2e1;
t346 = t349 ^ 2;
t347 = t350 ^ 2;
t331 = t347 + t346;
t557 = t357 / 0.2e1;
t429 = t356 * t557;
t558 = -t357 / 0.2e1;
t431 = t308 * t558;
t509 = t353 * t357;
t560 = t350 / 0.2e1;
t218 = t349 * t429 + t509 * t560 + t431;
t272 = t284 * t447;
t279 = t284 * qJD(5);
t583 = qJD(3) * t218 - t272 + t279;
t370 = t399 * t557;
t100 = t370 - t412;
t430 = t275 / 0.2e1;
t180 = t430 - t275 / 0.2e1;
t165 = t180 * qJD(6);
t582 = -qJD(3) * t100 + t165 + t595;
t138 = 0.2e1 * t430 - t515;
t176 = t584 * qJD(5);
t497 = -t138 * qJD(6) - t176;
t98 = t370 + t412;
t581 = -qJD(3) * t98 + t497 + t595;
t577 = qJD(6) * t605;
t576 = qJD(6) * t604;
t503 = t355 * t285;
t514 = t352 * t283;
t382 = t514 / 0.2e1 - t503 / 0.2e1;
t572 = t584 / 0.2e1;
t571 = t215 / 0.2e1;
t570 = -t234 / 0.2e1;
t569 = t234 / 0.2e1;
t566 = -t284 / 0.2e1;
t565 = t580 / 0.2e1;
t564 = -t308 / 0.2e1;
t563 = t308 / 0.2e1;
t325 = t357 * t338;
t562 = t325 / 0.2e1;
t561 = -t349 / 0.2e1;
t559 = t354 / 0.2e1;
t556 = pkin(5) * t284;
t555 = pkin(5) * t308;
t554 = pkin(5) * t354;
t553 = pkin(8) * t350;
t552 = t354 * pkin(3);
t551 = t357 * pkin(5);
t19 = t399 * t572 + t568 * t584 + (t569 - t570) * t422;
t26 = t234 * t422 + t399 * t584;
t549 = t19 * qJD(5) + t26 * qJD(6);
t48 = -t234 * t572 + t597;
t49 = t570 * t584 + t597;
t548 = t48 * qJD(5) + t49 * qJD(6);
t433 = t234 * t558;
t103 = t433 - t382;
t432 = t234 * t557;
t106 = -t432 - t382;
t547 = -t106 * qJD(5) - t103 * qJD(6);
t104 = t433 + t382;
t107 = -t432 + t382;
t546 = -t107 * qJD(5) - t104 * qJD(6);
t545 = pkin(5) * qJD(5);
t544 = pkin(5) * qJD(6);
t188 = t503 - t514;
t519 = t349 * t357;
t298 = pkin(4) * t519 + t325;
t216 = pkin(5) * t283 + t298;
t339 = -cos(pkin(10)) * pkin(1) - pkin(2);
t411 = -pkin(3) * t357 - t354 * qJ(4);
t302 = t339 + t411;
t287 = t350 * t302;
t191 = -t354 * t553 + t287 + (-t338 * t349 - pkin(4)) * t357;
t312 = t350 * t325;
t250 = t349 * t302 + t312;
t204 = -pkin(8) * t520 + t250;
t92 = t191 * t353 + t204 * t356;
t67 = -pkin(9) * t281 + t92;
t537 = t355 * t67;
t91 = -t356 * t191 + t353 * t204;
t66 = -t284 * pkin(9) - t91;
t65 = t66 - t551;
t29 = t352 * t65 + t537;
t311 = t349 * t324;
t323 = -qJ(4) * t357 + t552;
t255 = t350 * t323 + t311;
t214 = t354 * pkin(4) - t357 * t553 + t255;
t198 = t353 * t214;
t256 = t349 * t323 - t324 * t350;
t244 = -pkin(8) * t519 + t256;
t226 = t356 * t244;
t494 = t226 + t198;
t78 = -pkin(9) * t283 + t494;
t535 = t355 * t78;
t199 = t356 * t214;
t512 = t353 * t244;
t423 = t199 - t512;
t75 = -pkin(9) * t285 + t423 + t554;
t540 = t352 * t75;
t2 = (t535 + t540) * t357 - t29 * t354 + t216 * t584 + t215 * t188;
t543 = t2 * qJD(1);
t542 = t352 * t66;
t541 = t352 * t67;
t539 = t352 * t78;
t538 = t355 * t66;
t536 = t355 * t75;
t30 = -t537 - t542;
t16 = t30 * t357 - t422 * t556 - t602;
t534 = qJD(1) * t16;
t31 = t538 - t541;
t17 = t31 * t357 + t556 * t584 - t603;
t533 = qJD(1) * t17;
t28 = -t355 * t65 + t541;
t20 = -t28 * t357 - t603;
t532 = qJD(1) * t20;
t21 = -t29 * t357 - t602;
t531 = qJD(1) * t21;
t55 = -t297 * t281 - t357 * t91;
t529 = qJD(1) * t55;
t56 = -t297 * t284 - t357 * t92;
t528 = qJD(1) * t56;
t185 = t274 + t513;
t85 = -t357 * t185 + t354 * t422;
t527 = qJD(1) * t85;
t86 = t188 * t357 - t354 * t584;
t526 = qJD(1) * t86;
t24 = t298 * t284 + t297 * t285 - t92 * t354 + t357 * t494;
t523 = t24 * qJD(1);
t522 = t255 * t349;
t521 = t256 * t350;
t507 = t354 * t357;
t39 = -t185 * t584 - t188 * t422;
t500 = t39 * qJD(1);
t249 = -t325 * t349 + t287;
t50 = (t249 * t357 + t255 * t354) * t350 + (t250 * t357 + t256 * t354) * t349;
t499 = t50 * qJD(1);
t498 = t98 * qJD(1);
t177 = t584 * qJD(6);
t496 = -t138 * qJD(5) - t177;
t492 = qJD(1) * t604;
t491 = qJD(1) * t103;
t490 = qJD(1) * t106;
t489 = qJD(1) * t107;
t128 = (t249 * t350 + t250 * t349) * t354;
t488 = qJD(1) * t128;
t487 = qJD(1) * t180;
t189 = t354 * t281 - t357 * t283;
t485 = qJD(1) * t189;
t190 = -t284 * t354 + t285 * t357;
t484 = qJD(1) * t190;
t483 = qJD(1) * t284;
t481 = qJD(3) * t278;
t480 = qJD(3) * t308;
t479 = qJD(3) * t340;
t478 = qJD(3) * t354;
t477 = qJD(3) * t357;
t476 = qJD(4) * t357;
t475 = qJD(5) * t308;
t473 = qJD(6) * t278;
t472 = t100 * qJD(1);
t471 = t103 * qJD(3);
t470 = t104 * qJD(3);
t469 = t106 * qJD(3);
t468 = t107 * qJD(3);
t126 = -t249 * t354 + (t255 - 0.2e1 * t311) * t357;
t467 = t126 * qJD(1);
t127 = t256 * t357 + (-t250 + 0.2e1 * t312) * t354;
t466 = t127 * qJD(1);
t129 = -t281 * t285 - t283 * t284;
t465 = t129 * qJD(1);
t458 = t218 * qJD(1);
t381 = -t510 / 0.2e1 - t502 / 0.2e1;
t220 = (t564 + t381) * t357;
t457 = t220 * qJD(1);
t221 = t350 * t429 + t509 * t561 - t558 * t580;
t456 = t221 * qJD(1);
t455 = t221 * qJD(3);
t222 = (t565 - t501 / 0.2e1 + t511 / 0.2e1) * t357;
t454 = t222 * qJD(1);
t453 = t222 * qJD(3);
t452 = t281 * qJD(5);
t348 = t354 ^ 2;
t305 = t331 * t348;
t451 = t305 * qJD(1);
t301 = t580 * qJD(5);
t450 = t331 * qJD(3);
t334 = t357 ^ 2 - t348;
t449 = t334 * qJD(1);
t448 = t354 * qJD(1);
t446 = t556 / 0.2e1;
t445 = t555 / 0.2e1;
t444 = -t539 / 0.2e1;
t443 = -t535 / 0.2e1;
t441 = t234 * t478;
t440 = t580 * t478;
t439 = t338 * t477;
t438 = t354 * t476;
t437 = t339 * t448;
t436 = t339 * t447;
t435 = t354 * t477;
t434 = t354 * t447;
t427 = -t198 / 0.2e1 - t226 / 0.2e1;
t426 = pkin(5) * t606;
t425 = t331 * t357;
t419 = qJD(3) * t220 - t272;
t418 = -qJD(5) + t447;
t417 = qJD(4) + t479;
t416 = t554 / 0.2e1 + t75 / 0.2e1;
t415 = t551 / 0.2e1 - t65 / 0.2e1;
t414 = t447 - qJD(5) / 0.2e1;
t413 = t199 / 0.2e1 - t512 / 0.2e1;
t1 = (t536 - t539) * t357 + t28 * t354 - t216 * t422 - t215 * t185;
t410 = t1 * qJD(1);
t387 = t66 / 0.2e1 + t415;
t9 = t387 * t355;
t409 = qJD(1) * t9;
t23 = -t298 * t281 - t297 * t283 + t91 * t354 + t357 * t423;
t408 = t23 * qJD(1);
t383 = t249 * t561 + t250 * t560;
t45 = t348 * t338 / 0.2e1 + (t521 / 0.2e1 - t522 / 0.2e1) * t354 + (-t325 / 0.2e1 + t383) * t357;
t54 = t338 ^ 2 * t507 + t249 * t255 + t250 * t256;
t407 = t54 * qJD(1) + t45 * qJD(2);
t406 = qJD(3) * t19 + t608;
t405 = qJD(1) * t19 + t607;
t404 = qJD(3) * t26 + t608;
t403 = qJD(1) * t26 + t607;
t400 = t521 - t522;
t219 = (t563 + t381) * t357;
t361 = t252 * t557 + t284 * t587 + t297 * t563;
t40 = -t361 + t413;
t398 = qJD(1) * t40 + qJD(2) * t219;
t362 = t251 * t557 - t297 * t580 / 0.2e1 + t281 * t587;
t41 = t362 + t427;
t397 = qJD(1) * t41 + qJD(2) * t222;
t257 = (-0.1e1 + t331) * t507;
t396 = t45 * qJD(1) + t257 * qJD(2);
t147 = t281 ^ 2 - t284 ^ 2;
t77 = -t281 * t580 - t308 * t284;
t395 = qJD(1) * t147 + qJD(3) * t77;
t197 = -t308 ^ 2 + t580 ^ 2;
t394 = qJD(1) * t77 + qJD(3) * t197;
t392 = qJD(1) * t138 - t482;
t390 = -qJD(1) * t281 + qJD(3) * t580;
t389 = t480 + t483;
t385 = -t540 / 0.2e1 + t443;
t384 = t444 + t536 / 0.2e1;
t380 = -qJD(3) * t49 + t598;
t379 = qJD(3) * t48 - t598;
t378 = -qJD(1) * t49 - t601;
t377 = qJD(1) * t48 + t601;
t143 = -t281 * t563 + t284 * t565;
t376 = qJD(3) * t143 - t281 * t483;
t375 = -qJD(1) * t143 - t480 * t580;
t358 = t399 * t571 - t557 * t89 + t596;
t4 = (t234 * t566 + t355 * t559 + t422 * t564) * pkin(5) + t358 + t384;
t70 = -t234 * t555 + t278 * t399;
t373 = -t4 * qJD(1) - t70 * qJD(3) - t611;
t359 = t215 * t569 + t402 * t558 - t422 * t567;
t3 = (-t352 * t354 / 0.2e1 + t584 * t564 - t399 * t566) * pkin(5) + t359 + t385;
t71 = t234 * t278 + t399 * t555;
t372 = -t3 * qJD(1) - t107 * qJD(2) - t71 * qJD(3);
t7 = t387 * t352;
t371 = qJD(1) * t7 - qJD(2) * t180;
t110 = t562 - t383;
t288 = (0.1e1 / 0.2e1 - t347 / 0.2e1 - t346 / 0.2e1) * t354;
t316 = t331 * qJ(4);
t367 = qJD(1) * t110 + qJD(2) * t288 - qJD(3) * t316;
t363 = t215 * t568 + t558 * t89 + t596;
t11 = t363 + t384;
t366 = qJD(1) * t11 + t399 * t481 + t611;
t364 = t234 * t571 + t278 * t422 / 0.2e1 - t402 * t557;
t12 = t364 + t385;
t365 = qJD(1) * t12 + qJD(2) * t104 + t234 * t481;
t360 = qJD(3) * t411 + t476;
t344 = t478 / 0.2e1;
t343 = -t448 / 0.2e1;
t342 = t448 / 0.2e1;
t303 = t414 * t354;
t296 = t308 * t478;
t289 = (0.1e1 + t331) * t559;
t280 = (-qJD(6) / 0.2e1 + t414) * t354;
t223 = t357 * t381 + t431;
t211 = t399 * t478;
t203 = t221 * qJD(5);
t202 = t222 * qJD(5);
t164 = t180 * qJD(5);
t144 = -t281 * t447 + t455;
t136 = t143 * qJD(5);
t111 = t562 + t383;
t97 = t281 * t418 - t453;
t76 = t77 * qJD(5);
t44 = t45 * qJD(3);
t43 = t361 + t413;
t42 = -t362 + t427;
t37 = t469 - t599;
t22 = t418 * t422 - t468 - t575;
t14 = -t363 + t384;
t13 = -t364 + t385;
t10 = t541 - t538 / 0.2e1 + t415 * t355;
t8 = -t537 - t542 / 0.2e1 + t415 * t352;
t6 = -t352 * t416 - t399 * t446 + t445 * t584 - t359 + t443;
t5 = t234 * t446 + t355 * t416 + t422 * t445 - t358 + t444;
t15 = [0, 0, 0, 0, t435, t334 * qJD(3), 0, 0, 0, t339 * t478, t339 * t477, -t126 * qJD(3) + t350 * t438, t127 * qJD(3) - t349 * t438, -qJD(3) * t50 + qJD(4) * t305, qJD(3) * t54 - qJD(4) * t128 (qJD(3) * t285 - t452) * t284, qJD(3) * t129 + qJD(5) * t147, -t190 * qJD(3) + t357 * t452, -t189 * qJD(3) + t279 * t357, -t435, -t23 * qJD(3) - t56 * qJD(5) + t284 * t476, t24 * qJD(3) + t55 * qJD(5) - t281 * t476 (qJD(3) * t188 - t388) * t584, qJD(3) * t39 + t588 * t606, -t86 * qJD(3) + t357 * t388, -t85 * qJD(3) + (t177 + t176) * t357, -t435, -t1 * qJD(3) - t16 * qJD(5) - t21 * qJD(6) + t476 * t584, t2 * qJD(3) + t17 * qJD(5) + t20 * qJD(6) - t422 * t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t434, t449, t477, -t478, 0, t437 - t439, t338 * t478 + t436, -t312 * qJD(3) + t349 * t360 - t467, t349 * t439 + t350 * t360 + t466, qJD(3) * t400 - t499 (-pkin(3) * t325 + qJ(4) * t400) * qJD(3) + t111 * qJD(4) + t407, t285 * t389 + t136, t465 + (-t283 * t308 + t285 * t580) * qJD(3) + t76, -t202 + t296 - t484, -qJD(5) * t218 + t440 - t485, -t303 (-t251 * t354 + t283 * t340 - t298 * t580) * qJD(3) - t220 * qJD(4) + t43 * qJD(5) - t408, t523 + (-t252 * t354 + t285 * t340 + t298 * t308) * qJD(3) + t221 * qJD(4) + t42 * qJD(5), t188 * t594 + t548, t500 + (t185 * t399 - t188 * t234) * qJD(3) + t549, -t211 - t526 + t546, -qJD(5) * t98 - t441 - t527 + t577, -t280 (t185 * t278 + t216 * t234 + t354 * t402) * qJD(3) - t100 * qJD(4) + t5 * qJD(5) + t14 * qJD(6) - t410, t543 + (t188 * t278 - t216 * t399 - t354 * t89) * qJD(3) + t106 * qJD(4) + t6 * qJD(5) + t13 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(3) * t349 + t350 * t448) * t357 (qJD(3) * t350 - t349 * t448) * t357, t451, qJD(3) * t111 - t488, 0, 0, 0, 0, 0, -t419, t144, 0, 0, 0, 0, 0, t582, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, t395, t97, -t583, t344, qJD(3) * t43 - qJD(5) * t92 - t528, qJD(3) * t42 + qJD(5) * t91 + t529, t379, t406, t22, t581, t344, qJD(3) * t5 + qJD(5) * t30 + qJD(6) * t8 - t534, qJD(3) * t6 - qJD(5) * t31 + qJD(6) * t10 + t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, t404, -t470 - t590 + (-qJD(6) + t447) * t422, t595 + t496 + t579, t344, qJD(3) * t14 + qJD(4) * t180 + qJD(5) * t8 - qJD(6) * t29 - t531, qJD(3) * t13 + qJD(5) * t10 + qJD(6) * t28 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478, -t477, -t350 * t478, t349 * t478, qJD(3) * t425 (qJ(4) * t425 - t552) * qJD(3) + t289 * qJD(4) + t396, 0, 0, 0, 0, 0, qJD(5) * t223 - t440, t296 - t203, 0, 0, 0, 0, 0, qJD(5) * t604 + t441 + t576, -t211 + t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t223 - t279, t452 - t455, 0, 0, 0, 0, 0, t497 + t578, -t469 + t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t496 + t578, -t471 + t388; 0, 0, 0, 0, -t434, -t449, 0, 0, 0, -t437, -t436, t467, -t466, t499, -qJD(4) * t110 - t407, -t285 * t483 + t136, t76 - t465, -t203 + t484, -qJD(5) * t220 + t485, t303, -qJD(4) * t218 - qJD(5) * t40 + t408, qJD(4) * t222 - qJD(5) * t41 - t523, -t188 * t486 + t548, -t500 + t549, t526 + t547, -qJD(5) * t100 + t527 - t576, t280, -qJD(4) * t98 - qJD(5) * t4 - qJD(6) * t11 + t410, qJD(4) * t107 - qJD(5) * t3 - qJD(6) * t12 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t288 - t396, 0, 0, 0, 0, 0, -qJD(5) * t219, -t202, 0, 0, 0, 0, 0, -qJD(5) * t605 - t577, t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t331 * qJD(4), t316 * qJD(4), t308 * t301, t197 * qJD(5), 0, 0, 0, t340 * t475, t340 * t301, t495 * t399, t606 * t589, 0, 0, 0, -qJD(5) * t70 - t399 * t473, -qJD(5) * t71 - t234 * t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, -t367, 0, 0, 0, 0, 0, -t458, t454, 0, 0, 0, 0, 0, -t498, t489; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, t394, t301 - t456, -t457 - t475, t343, -qJD(5) * t252 + t308 * t479 - t398, qJD(5) * t251 + t479 * t580 - t397, t377, t405, -t490 - t495, -t472 + t573, t343, t373 - t610, t372 - t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, t403, -t491 - t495, -t492 + t573, t343, -t366 - t610, -t365 - t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350 * t434, t349 * t434, -t451, qJD(3) * t110 + t488, 0, 0, 0, 0, 0, t583, t97, 0, 0, 0, 0, 0, -t581, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t450, t367, 0, 0, 0, 0, 0, t458 + t475, t301 - t454, 0, 0, 0, 0, 0, t498 - t573, -t489 - t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t389, t390, 0, 0, 0, 0, 0, t594, -t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, -t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, -t395, t144, t419, t344, qJD(3) * t40 - qJD(4) * t284 + t528, qJD(3) * t41 + qJD(4) * t281 - t529, -t379, -t406, t37, -t582, t344, qJD(3) * t4 - qJD(4) * t584 + qJD(6) * t7 + t534, qJD(3) * t3 + qJD(6) * t9 - t533 + t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t219, t453, 0, 0, 0, 0, 0, -t165 + t579, t468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t375, -t394, t456, t457, t342, -t308 * t417 + t398, -t417 * t580 + t397, -t377, -t405, t490, t472, t342, -t373 + t592, -t372 + t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, -t390, 0, 0, 0, 0, 0, -t594, t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352 * t544, -t355 * t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, 0, -t352 * t426 + t371, -t355 * t426 + t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, -t404, t471 - t599, t164 - t595 + t578, t344, qJD(3) * t11 - qJD(4) * t138 - qJD(5) * t7 + t531, qJD(3) * t12 - qJD(5) * t9 - t532 + t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164 + t579, t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, -t403, t491, t492, t342, t366 + t592, t365 + t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, 0, t352 * t545 - t371, t355 * t545 - t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t15;
