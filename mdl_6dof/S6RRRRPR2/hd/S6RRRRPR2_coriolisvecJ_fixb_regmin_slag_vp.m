% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x35]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPR2_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR2_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR2_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR2_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:59:14
% EndTime: 2019-03-09 21:59:30
% DurationCPUTime: 6.58s
% Computational Cost: add. (12911->447), mult. (32846->600), div. (0->0), fcn. (25066->10), ass. (0->260)
t250 = sin(qJ(3));
t251 = sin(qJ(2));
t325 = qJD(1) * t251;
t309 = t250 * t325;
t254 = cos(qJ(3));
t255 = cos(qJ(2));
t324 = qJD(1) * t255;
t310 = t254 * t324;
t193 = -t309 + t310;
t194 = -t250 * t324 - t254 * t325;
t249 = sin(qJ(4));
t253 = cos(qJ(4));
t164 = t253 * t193 + t194 * t249;
t157 = qJD(6) - t164;
t247 = cos(pkin(11));
t252 = cos(qJ(6));
t333 = t252 * t247;
t246 = sin(pkin(11));
t248 = sin(qJ(6));
t335 = t246 * t248;
t207 = -t333 + t335;
t397 = t157 * t207;
t208 = t246 * t252 + t247 * t248;
t396 = t157 * t208;
t391 = t164 * t246;
t152 = pkin(5) * t391;
t314 = pkin(10) * t391;
t390 = t164 * t247;
t238 = -pkin(2) * t255 - pkin(1);
t219 = t238 * qJD(1);
t177 = -pkin(3) * t193 + t219;
t281 = t193 * t249 - t253 * t194;
t102 = -pkin(4) * t164 - qJ(5) * t281 + t177;
t315 = qJD(3) + qJD(4);
t241 = qJD(2) + t315;
t188 = t194 * pkin(9);
t370 = pkin(7) + pkin(8);
t221 = t370 * t255;
t213 = qJD(1) * t221;
t195 = t250 * t213;
t220 = t370 * t251;
t211 = qJD(1) * t220;
t361 = qJD(2) * pkin(2);
t203 = -t211 + t361;
t300 = t254 * t203 - t195;
t141 = t188 + t300;
t243 = qJD(2) + qJD(3);
t132 = pkin(3) * t243 + t141;
t199 = t254 * t213;
t280 = -t203 * t250 - t199;
t366 = pkin(9) * t193;
t142 = -t280 + t366;
t140 = t253 * t142;
t86 = t249 * t132 + t140;
t81 = qJ(5) * t241 + t86;
t52 = t247 * t102 - t246 * t81;
t395 = t52 * t390;
t321 = qJD(4) * t249;
t316 = qJD(1) * qJD(2);
t308 = t255 * t316;
t169 = qJD(3) * t310 - t243 * t309 + t254 * t308;
t311 = qJD(2) * t370;
t295 = qJD(1) * t311;
t204 = t251 * t295;
t205 = t255 * t295;
t299 = t250 * t204 - t254 * t205;
t260 = qJD(3) * t280 + t299;
t91 = -pkin(9) * t169 + t260;
t304 = -t142 * t321 + t249 * t91;
t210 = t250 * t255 + t251 * t254;
t376 = qJD(1) * t210;
t258 = t243 * t376;
t323 = qJD(3) * t250;
t298 = -t250 * t205 - t213 * t323;
t377 = (qJD(3) * t203 - t204) * t254;
t90 = -pkin(9) * t258 + t298 + t377;
t264 = -(qJD(4) * t132 + t90) * t253 - t304;
t340 = t177 * t164;
t394 = t264 - t340;
t393 = qJD(6) - t157;
t292 = pkin(5) * t281 - pkin(10) * t390;
t146 = t241 * t246 + t247 * t281;
t32 = -pkin(5) * t164 - pkin(10) * t146 + t52;
t144 = -t247 * t241 + t246 * t281;
t53 = t246 * t102 + t247 * t81;
t38 = -pkin(10) * t144 + t53;
t12 = t248 * t32 + t252 * t38;
t320 = qJD(4) * t253;
t29 = t132 * t321 + t142 * t320 + t249 * t90 - t253 * t91;
t82 = t253 * t169 + t193 * t320 + t194 * t321 - t249 * t258;
t359 = t246 * t82;
t19 = pkin(5) * t359 + t29;
t138 = t249 * t142;
t85 = t132 * t253 - t138;
t80 = -pkin(4) * t241 + qJD(5) - t85;
t65 = pkin(5) * t144 + t80;
t269 = t12 * t281 + t19 * t208 - t397 * t65;
t286 = t248 * t38 - t252 * t32;
t270 = t19 * t207 + t281 * t286 + t396 * t65;
t282 = t144 * t248 - t146 * t252;
t83 = qJD(4) * t281 + t169 * t249 + t253 * t258;
t17 = -t397 * t157 + t208 * t83 + t281 * t282;
t387 = t252 * t144;
t94 = t146 * t248 + t387;
t18 = -t396 * t157 - t207 * t83 + t281 * t94;
t283 = -qJD(6) * t146 - t359;
t317 = qJD(6) * t252;
t353 = -t144 * t317 + t82 * t333;
t24 = t248 * t283 + t353;
t6 = t24 * t208 + t397 * t282;
t25 = -qJD(6) * t282 + t208 * t82;
t1 = -t24 * t207 - t208 * t25 + t396 * t282 + t397 * t94;
t392 = t157 * t282;
t345 = t281 * t164;
t69 = -t164 ^ 2 + t281 ^ 2;
t66 = -t164 * t241 + t82;
t125 = pkin(4) * t281 - qJ(5) * t164;
t385 = -0.2e1 * t316;
t27 = qJD(5) * t241 - t264;
t239 = pkin(2) * t325;
t150 = pkin(3) * t258 + qJD(2) * t239;
t33 = t83 * pkin(4) - t82 * qJ(5) - qJD(5) * t281 + t150;
t9 = t246 * t33 + t247 * t27;
t7 = t9 * t247;
t8 = -t246 * t27 + t247 * t33;
t291 = -t246 * t8 + t7;
t226 = pkin(3) * t320 + qJD(5);
t369 = pkin(3) * t194;
t110 = t125 - t369;
t98 = t141 * t253 - t138;
t55 = t247 * t110 - t246 * t98;
t382 = t226 * t246 + t55;
t56 = t246 * t110 + t247 * t98;
t381 = -t226 * t247 + t56;
t231 = t249 * t250 * pkin(2);
t237 = pkin(2) * t254 + pkin(3);
t322 = qJD(3) * t254;
t371 = t253 * pkin(2) * t322 - t315 * t231 + t237 * t320;
t167 = qJD(5) + t371;
t297 = t211 * t250 - t199;
t148 = t297 - t366;
t328 = -t254 * t211 - t195;
t149 = t188 + t328;
t104 = t148 * t249 + t149 * t253;
t105 = t110 + t239;
t57 = -t104 * t246 + t247 * t105;
t380 = t167 * t246 + t57;
t58 = t247 * t104 + t246 * t105;
t379 = -t167 * t247 + t58;
t60 = t246 * t125 + t247 * t85;
t378 = -qJD(5) * t247 + t60;
t96 = t141 * t249 + t140;
t293 = pkin(3) * t321 - t96;
t350 = t157 * t281;
t334 = t250 * t253;
t329 = -t148 * t253 + t149 * t249 - t237 * t321 - (t250 * t320 + (t249 * t254 + t334) * qJD(3)) * pkin(2);
t154 = -pkin(9) * t210 - t220 * t254 - t221 * t250;
t209 = t250 * t251 - t254 * t255;
t279 = t220 * t250 - t221 * t254;
t155 = -pkin(9) * t209 - t279;
t121 = -t154 * t253 + t249 * t155;
t306 = t29 * t246 + t281 * t53;
t271 = -t177 * t281 - t29;
t288 = -t247 * t29 - t281 * t52;
t67 = t241 * t281 - t83;
t368 = pkin(3) * t253;
t367 = pkin(5) * t247;
t242 = t247 * pkin(10);
t171 = t253 * t209 + t210 * t249;
t173 = t243 * t209;
t267 = t210 * qJD(3);
t174 = qJD(2) * t210 + t267;
t106 = -qJD(4) * t171 - t173 * t253 - t174 * t249;
t172 = -t209 * t249 + t210 * t253;
t107 = qJD(4) * t172 - t173 * t249 + t253 * t174;
t240 = t251 * t361;
t166 = pkin(3) * t174 + t240;
t43 = pkin(4) * t107 - qJ(5) * t106 - qJD(5) * t172 + t166;
t212 = t251 * t311;
t214 = t255 * t311;
t268 = -t254 * t212 - t250 * t214 - t220 * t322 - t221 * t323;
t113 = -pkin(9) * t174 + t268;
t259 = qJD(3) * t279 + t212 * t250 - t254 * t214;
t114 = pkin(9) * t173 + t259;
t46 = -qJD(4) * t121 + t113 * t253 + t114 * t249;
t14 = t246 * t43 + t247 * t46;
t360 = t164 * t80;
t357 = t247 * t82;
t354 = -t152 - t329;
t352 = t106 * t246;
t342 = t172 * t246;
t341 = t172 * t247;
t339 = t194 * t193;
t338 = t219 * t194;
t257 = qJD(1) ^ 2;
t332 = t255 * t257;
t256 = qJD(2) ^ 2;
t331 = t256 * t251;
t330 = t256 * t255;
t181 = pkin(3) * t209 + t238;
t120 = pkin(4) * t171 - qJ(5) * t172 + t181;
t122 = t154 * t249 + t155 * t253;
t64 = t246 * t120 + t247 * t122;
t326 = t251 ^ 2 - t255 ^ 2;
t318 = qJD(6) * t172;
t234 = -pkin(4) - t367;
t3 = pkin(5) * t83 - pkin(10) * t357 + t8;
t4 = -pkin(10) * t359 + t9;
t312 = -t248 * t4 + t252 * t3;
t307 = -pkin(2) * t243 - t203;
t13 = -t246 * t46 + t247 * t43;
t59 = t247 * t125 - t246 * t85;
t303 = pkin(1) * t385;
t63 = t247 * t120 - t122 * t246;
t294 = -t152 + t293;
t187 = -t237 * t253 - pkin(4) + t231;
t290 = t248 * t3 + t252 * t4;
t289 = t391 * t53 + t291 + t395;
t287 = -t246 * t52 + t247 * t53;
t50 = pkin(5) * t171 - pkin(10) * t341 + t63;
t54 = -pkin(10) * t342 + t64;
t285 = -t248 * t54 + t252 * t50;
t284 = t248 * t50 + t252 * t54;
t186 = pkin(2) * t334 + t237 * t249 + qJ(5);
t175 = (-pkin(10) - t186) * t246;
t278 = -qJD(6) * t175 - t314 + t379;
t176 = t186 * t247 + t242;
t277 = qJD(6) * t176 + t292 + t380;
t233 = pkin(3) * t249 + qJ(5);
t201 = (-pkin(10) - t233) * t246;
t276 = -qJD(6) * t201 - t314 + t381;
t202 = t233 * t247 + t242;
t275 = qJD(6) * t202 + t292 + t382;
t274 = -t219 * t193 - t298;
t217 = (-pkin(10) - qJ(5)) * t246;
t273 = -qJD(6) * t217 - t314 + t378;
t218 = qJ(5) * t247 + t242;
t272 = qJD(5) * t246 + qJD(6) * t218 + t292 + t59;
t266 = t106 * t80 + t121 * t82 + t172 * t29;
t265 = -pkin(4) * t82 - qJ(5) * t83 - (-qJD(5) + t80) * t164;
t263 = t164 * t167 - t186 * t83 + t187 * t82 - t360;
t236 = -pkin(4) - t368;
t262 = t164 * t226 - t233 * t83 + t236 * t82 - t360;
t47 = qJD(4) * t122 + t113 * t249 - t114 * t253;
t216 = t234 - t368;
t179 = t187 - t367;
t178 = t239 - t369;
t147 = -t193 ^ 2 + t194 ^ 2;
t137 = -t194 * t243 - t258;
t136 = -t193 * t243 + t169;
t127 = t207 * t172;
t126 = t208 * t172;
t79 = pkin(5) * t342 + t121;
t68 = t86 + t152;
t35 = t106 * t208 + t317 * t341 - t318 * t335;
t34 = -t106 * t207 - t208 * t318;
t20 = pkin(5) * t352 + t47;
t10 = -pkin(10) * t352 + t14;
t5 = pkin(5) * t107 - t106 * t242 + t13;
t2 = [0, 0, 0, 0.2e1 * t251 * t308, t326 * t385, t330, -t331, 0, -pkin(7) * t330 + t251 * t303, pkin(7) * t331 + t255 * t303, t169 * t210 + t173 * t194, -t169 * t209 - t173 * t193 + t194 * t174 - t210 * t258, -t173 * t243, -t174 * t243, 0, -t193 * t240 + t219 * t174 + t259 * t243 + (t238 * t267 + (t251 * pkin(2) * t209 + t210 * t238) * qJD(2)) * qJD(1), t238 * t169 - t219 * t173 - t268 * t243 + (-t194 + t376) * t240, t106 * t281 + t172 * t82, t106 * t164 - t107 * t281 - t171 * t82 - t172 * t83, t106 * t241, -t107 * t241, 0, t107 * t177 + t150 * t171 - t164 * t166 + t181 * t83 - t241 * t47, t106 * t177 + t150 * t172 + t166 * t281 + t181 * t82 - t241 * t46, t107 * t52 - t13 * t164 + t144 * t47 + t171 * t8 + t246 * t266 + t63 * t83, -t107 * t53 + t14 * t164 + t146 * t47 - t171 * t9 + t247 * t266 - t64 * t83, -t13 * t146 - t14 * t144 + (-t106 * t52 - t172 * t8 - t63 * t82) * t247 + (-t106 * t53 - t172 * t9 - t64 * t82) * t246, t121 * t29 + t13 * t52 + t14 * t53 + t47 * t80 + t63 * t8 + t64 * t9, -t127 * t24 - t282 * t34, -t126 * t24 + t127 * t25 + t282 * t35 - t34 * t94, -t107 * t282 - t127 * t83 + t157 * t34 + t171 * t24, -t107 * t94 - t126 * t83 - t157 * t35 - t171 * t25, t107 * t157 + t171 * t83 (-t10 * t248 + t252 * t5) * t157 + t285 * t83 + t312 * t171 - t286 * t107 + t20 * t94 + t79 * t25 + t19 * t126 + t65 * t35 + (-t12 * t171 - t157 * t284) * qJD(6) -(t10 * t252 + t248 * t5) * t157 - t284 * t83 - t290 * t171 - t12 * t107 - t20 * t282 + t79 * t24 - t19 * t127 + t65 * t34 + (-t157 * t285 + t171 * t286) * qJD(6); 0, 0, 0, -t251 * t332, t326 * t257, 0, 0, 0, t257 * pkin(1) * t251, pkin(1) * t332, t339, t147, t136, t137, 0, t193 * t239 + t338 - t297 * t243 + (t250 * t307 - t199) * qJD(3) + t299, t194 * t239 + t328 * t243 + (qJD(3) * t307 + t204) * t254 + t274, -t345, t69, t66, t67, 0, t164 * t178 + t241 * t329 + t271, -t178 * t281 + (t104 - t371) * t241 + t394, -t144 * t329 + t164 * t57 + t246 * t263 + t288, -t146 * t329 - t164 * t58 + t263 * t247 + t306, t144 * t379 + t146 * t380 + t289, t167 * t287 + t186 * t291 + t187 * t29 - t329 * t80 - t52 * t57 - t53 * t58, t6, t1, t17, t18, -t350 (t175 * t252 - t176 * t248) * t83 + t179 * t25 + t354 * t94 + (t248 * t278 - t252 * t277) * t157 + t270 -(t175 * t248 + t176 * t252) * t83 + t179 * t24 - t354 * t282 + (t248 * t277 + t252 * t278) * t157 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, t147, t136, t137, 0, -t243 * t280 + t260 + t338, t243 * t300 + t274 - t377, -t345, t69, t66, t67, 0, t241 * t96 + (-t164 * t194 - t241 * t321) * pkin(3) + t271, t281 * t369 - t340 + t241 * t98 + (-t90 + (-pkin(3) * t241 - t132) * qJD(4)) * t253 - t304, t144 * t293 + t164 * t55 + t246 * t262 + t288, t146 * t293 - t164 * t56 + t247 * t262 + t306, t144 * t381 + t146 * t382 + t289, t226 * t287 + t233 * t291 + t236 * t29 + t293 * t80 - t52 * t55 - t53 * t56, t6, t1, t17, t18, -t350 (t201 * t252 - t202 * t248) * t83 + t216 * t25 + t294 * t94 + (t248 * t276 - t252 * t275) * t157 + t270 -(t201 * t248 + t202 * t252) * t83 + t216 * t24 - t294 * t282 + (t248 * t275 + t252 * t276) * t157 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t69, t66, t67, 0, t241 * t86 + t271, t241 * t85 + t394, -t144 * t86 + t164 * t59 + t246 * t265 + t288, -t146 * t86 - t164 * t60 + t247 * t265 + t306, t395 + t146 * t59 + t7 + t378 * t144 + (qJD(5) * t146 + t164 * t53 - t8) * t246, -pkin(4) * t29 + qJ(5) * t291 + qJD(5) * t287 - t52 * t59 - t53 * t60 - t80 * t86, t6, t1, t17, t18, -t350 (t217 * t252 - t218 * t248) * t83 + t234 * t25 - t68 * t94 + (t248 * t273 - t252 * t272) * t157 + t270 -(t217 * t248 + t218 * t252) * t83 + t234 * t24 + t68 * t282 + (t248 * t272 + t252 * t273) * t157 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146 * t164 + t359, t144 * t164 + t357, -t144 ^ 2 - t146 ^ 2, t144 * t53 + t146 * t52 + t29, 0, 0, 0, 0, 0, t25 - t392, -t157 * t387 + (-t146 * t157 + t283) * t248 + t353; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t282 * t94, t282 ^ 2 - t94 ^ 2, t157 * t94 + t24, -t25 - t392, t83, -t12 * t393 + t65 * t282 + t312, t286 * t393 + t65 * t94 - t290;];
tauc_reg  = t2;
