% Calculate inertial parameters regressor of joint inertia matrix for
% S6RRRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MM_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of joint inertia matrix
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:00
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MM_reg = S6RRRRPR2_inertiaJ_reg2_slag_vp(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR2_inertiaJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR2_inertiaJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertia_joint_joint_fixb_regressor_matlab.m
t110 = sin(pkin(11));
t106 = t110 ^ 2;
t111 = cos(pkin(11));
t107 = t111 ^ 2;
t134 = t106 + t107;
t113 = sin(qJ(4));
t149 = t113 * pkin(3);
t95 = qJ(5) + t149;
t143 = t134 * t95;
t160 = qJ(5) * t134;
t112 = sin(qJ(6));
t151 = cos(qJ(6));
t159 = -t112 * t110 + t151 * t111;
t116 = cos(qJ(4));
t114 = sin(qJ(3));
t117 = cos(qJ(3));
t115 = sin(qJ(2));
t153 = -pkin(8) - pkin(7);
t129 = t153 * t115;
t118 = cos(qJ(2));
t130 = t153 * t118;
t58 = t114 * t130 + t117 * t129;
t83 = t114 * t118 + t117 * t115;
t123 = -t83 * pkin(9) + t58;
t59 = t114 * t129 - t117 * t130;
t82 = -t114 * t115 + t117 * t118;
t39 = t82 * pkin(9) + t59;
t21 = t113 * t39 - t116 * t123;
t158 = t21 ^ 2;
t50 = t113 * t83 - t116 * t82;
t48 = t50 ^ 2;
t157 = 0.2e1 * t50;
t99 = -t118 * pkin(2) - pkin(1);
t68 = -t82 * pkin(3) + t99;
t156 = 0.2e1 * t68;
t155 = 0.2e1 * t83;
t154 = 0.2e1 * t118;
t52 = t113 * t82 + t116 * t83;
t141 = t111 * t52;
t20 = t50 * pkin(4) - t52 * qJ(5) + t68;
t23 = t113 * t123 + t116 * t39;
t9 = -t110 * t23 + t111 * t20;
t6 = t50 * pkin(5) - pkin(10) * t141 + t9;
t10 = t110 * t20 + t111 * t23;
t142 = t110 * t52;
t7 = -pkin(10) * t142 + t10;
t3 = -t112 * t7 + t151 * t6;
t4 = t112 * t6 + t151 * t7;
t81 = t151 * t110 + t112 * t111;
t152 = t159 * t4 - t3 * t81;
t150 = pkin(4) * t110;
t148 = t114 * pkin(2);
t131 = t116 * t148;
t105 = t117 * pkin(2);
t98 = t105 + pkin(3);
t73 = t113 * t98 + t131;
t70 = qJ(5) + t73;
t56 = (-pkin(10) - t70) * t110;
t102 = t111 * pkin(10);
t57 = t111 * t70 + t102;
t30 = -t112 * t57 + t151 * t56;
t31 = t112 * t56 + t151 * t57;
t147 = t159 * t31 - t30 * t81;
t75 = (-pkin(10) - t95) * t110;
t76 = t111 * t95 + t102;
t42 = -t112 * t76 + t151 * t75;
t43 = t112 * t75 + t151 * t76;
t146 = t159 * t43 - t42 * t81;
t85 = (-pkin(10) - qJ(5)) * t110;
t86 = t111 * qJ(5) + t102;
t54 = -t112 * t86 + t151 * t85;
t55 = t112 * t85 + t151 * t86;
t145 = t159 * t55 - t54 * t81;
t144 = t134 * t70;
t72 = -t113 * t148 + t116 * t98;
t19 = t21 * t110;
t140 = t21 * t111;
t71 = -pkin(4) - t72;
t139 = t71 * t111;
t104 = t116 * pkin(3);
t97 = -t104 - pkin(4);
t138 = t97 * t111;
t137 = t110 * t111;
t108 = t115 ^ 2;
t109 = t118 ^ 2;
t133 = t108 + t109;
t132 = -0.2e1 * t52 * t50;
t96 = -t111 * pkin(5) - pkin(4);
t126 = -pkin(4) * t52 - qJ(5) * t50;
t125 = -t50 * t70 + t52 * t71;
t124 = -t50 * t95 + t52 * t97;
t5 = t10 * t111 - t9 * t110;
t103 = pkin(4) * t111;
t91 = 0.2e1 * t137;
t89 = t97 * t110;
t84 = -t104 + t96;
t78 = t81 ^ 2;
t77 = t159 ^ 2;
t67 = t96 * t81;
t66 = t96 * t159;
t65 = t71 * t110;
t62 = t96 - t72;
t61 = t84 * t81;
t60 = t84 * t159;
t53 = 0.2e1 * t81 * t159;
t49 = t52 ^ 2;
t47 = t62 * t81;
t46 = t62 * t159;
t45 = t111 * t50;
t44 = t110 * t50;
t40 = t52 * t137;
t35 = t81 * t50;
t34 = t159 * t50;
t29 = (-t106 + t107) * t52;
t26 = t159 * t52;
t24 = t81 * t52;
t15 = t26 * t81;
t14 = t24 * t159;
t13 = pkin(5) * t142 + t21;
t12 = t13 * t81;
t11 = t13 * t159;
t8 = t159 * t26 - t81 * t24;
t1 = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t108, t115 * t154, 0, t109, 0, 0, pkin(1) * t154, -0.2e1 * pkin(1) * t115, 0.2e1 * t133 * pkin(7), t133 * pkin(7) ^ 2 + pkin(1) ^ 2, t83 ^ 2, t82 * t155, 0, t82 ^ 2, 0, 0, -0.2e1 * t99 * t82, t99 * t155, -0.2e1 * t58 * t83 + 0.2e1 * t59 * t82, t58 ^ 2 + t59 ^ 2 + t99 ^ 2, t49, t132, 0, t48, 0, 0, t50 * t156, t52 * t156, 0.2e1 * t21 * t52 - 0.2e1 * t23 * t50, t23 ^ 2 + t68 ^ 2 + t158, t107 * t49, -0.2e1 * t49 * t137, t141 * t157, t106 * t49, t110 * t132, t48, 0.2e1 * t52 * t19 + 0.2e1 * t9 * t50, -0.2e1 * t10 * t50 + 0.2e1 * t52 * t140, 0.2e1 * (-t10 * t110 - t111 * t9) * t52, t10 ^ 2 + t9 ^ 2 + t158, t26 ^ 2, -0.2e1 * t26 * t24, t26 * t157, t24 ^ 2, -t24 * t157, t48, 0.2e1 * t13 * t24 + 0.2e1 * t3 * t50, 0.2e1 * t13 * t26 - 0.2e1 * t4 * t50, -0.2e1 * t4 * t24 - 0.2e1 * t3 * t26, t13 ^ 2 + t3 ^ 2 + t4 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, 0, t118, 0, -t115 * pkin(7), -t118 * pkin(7), 0, 0, 0, 0, t83, 0, t82, 0, t58, -t59 (t114 * t82 - t117 * t83) * pkin(2) (t114 * t59 + t117 * t58) * pkin(2), 0, 0, t52, 0, -t50, 0, -t21, -t23, -t73 * t50 - t72 * t52, -t21 * t72 + t23 * t73, t40, t29, t44, -t40, t45, 0, t125 * t110 - t140, t125 * t111 + t19, t5, t21 * t71 + t5 * t70, t15, t8, t35, -t14, t34, 0, t62 * t24 + t30 * t50 - t11, t62 * t26 - t31 * t50 + t12, -t31 * t24 - t30 * t26 + t152, t13 * t62 + t3 * t30 + t4 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t105, -0.2e1 * t148, 0 (t114 ^ 2 + t117 ^ 2) * pkin(2) ^ 2, 0, 0, 0, 0, 0, 1, 0.2e1 * t72, -0.2e1 * t73, 0, t72 ^ 2 + t73 ^ 2, t106, t91, 0, t107, 0, 0, -0.2e1 * t139, 0.2e1 * t65, 0.2e1 * t144, t134 * t70 ^ 2 + t71 ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t46, 0.2e1 * t47, 0.2e1 * t147, t30 ^ 2 + t31 ^ 2 + t62 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, t82, 0, t58, -t59, 0, 0, 0, 0, t52, 0, -t50, 0, -t21, -t23 (-t113 * t50 - t116 * t52) * pkin(3) (t113 * t23 - t116 * t21) * pkin(3), t40, t29, t44, -t40, t45, 0, t124 * t110 - t140, t124 * t111 + t19, t5, t21 * t97 + t5 * t95, t15, t8, t35, -t14, t34, 0, t84 * t24 + t42 * t50 - t11, t84 * t26 - t43 * t50 + t12, -t43 * t24 - t42 * t26 + t152, t13 * t84 + t3 * t42 + t4 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t105, -t148, 0, 0, 0, 0, 0, 0, 0, 1, t104 + t72, -t131 + (-pkin(3) - t98) * t113, 0 (t113 * t73 + t116 * t72) * pkin(3), t106, t91, 0, t107, 0, 0 (-t71 - t97) * t111, t89 + t65, t143 + t144, t70 * t143 + t71 * t97, t78, t53, 0, t77, 0, 0, -t60 - t46, t61 + t47, t146 + t147, t30 * t42 + t31 * t43 + t62 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0.2e1 * t104, -0.2e1 * t149, 0 (t113 ^ 2 + t116 ^ 2) * pkin(3) ^ 2, t106, t91, 0, t107, 0, 0, -0.2e1 * t138, 0.2e1 * t89, 0.2e1 * t143, t134 * t95 ^ 2 + t97 ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t60, 0.2e1 * t61, 0.2e1 * t146, t42 ^ 2 + t43 ^ 2 + t84 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, -t50, 0, -t21, -t23, 0, 0, t40, t29, t44, -t40, t45, 0, t126 * t110 - t140, t126 * t111 + t19, t5, -t21 * pkin(4) + t5 * qJ(5), t15, t8, t35, -t14, t34, 0, t96 * t24 + t54 * t50 - t11, t96 * t26 - t55 * t50 + t12, -t55 * t24 - t54 * t26 + t152, t13 * t96 + t3 * t54 + t4 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t72, -t73, 0, 0, t106, t91, 0, t107, 0, 0, t103 - t139, t65 - t150, t160 + t144, -t71 * pkin(4) + t160 * t70, t78, t53, 0, t77, 0, 0, -t66 - t46, t67 + t47, t145 + t147, t30 * t54 + t31 * t55 + t62 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, t104, -t149, 0, 0, t106, t91, 0, t107, 0, 0, t103 - t138, t89 - t150, t160 + t143, -t97 * pkin(4) + t160 * t95, t78, t53, 0, t77, 0, 0, -t66 - t60, t67 + t61, t145 + t146, t42 * t54 + t43 * t55 + t84 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, t106, t91, 0, t107, 0, 0, 0.2e1 * t103, -0.2e1 * t150, 0.2e1 * t160, t134 * qJ(5) ^ 2 + pkin(4) ^ 2, t78, t53, 0, t77, 0, 0, -0.2e1 * t66, 0.2e1 * t67, 0.2e1 * t145, t54 ^ 2 + t55 ^ 2 + t96 ^ 2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t141, 0, t21, 0, 0, 0, 0, 0, 0, t24, t26, 0, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t110, 0, t71, 0, 0, 0, 0, 0, 0, -t159, t81, 0, t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t110, 0, t97, 0, 0, 0, 0, 0, 0, -t159, t81, 0, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t111, t110, 0, -pkin(4), 0, 0, 0, 0, 0, 0, -t159, t81, 0, t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t24, t50, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t159, 0, t30, -t31, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t159, 0, t42, -t43, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, 0, t159, 0, t54, -t55, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;];
MM_reg  = t1;
