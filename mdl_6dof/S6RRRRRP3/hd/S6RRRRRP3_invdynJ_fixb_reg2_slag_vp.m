% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP3_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP3_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP3_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP3_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP3_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP3_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:09:38
% EndTime: 2019-03-10 01:10:03
% DurationCPUTime: 12.62s
% Computational Cost: add. (24399->784), mult. (53905->934), div. (0->0), fcn. (39931->14), ass. (0->384)
t378 = cos(qJ(2));
t579 = cos(qJ(3));
t472 = t579 * t378;
t341 = qJD(1) * t472;
t374 = sin(qJ(3));
t375 = sin(qJ(2));
t493 = qJD(1) * t375;
t469 = t374 * t493;
t279 = -t341 + t469;
t299 = t374 * t378 + t579 * t375;
t281 = t299 * qJD(1);
t211 = pkin(3) * t281 + pkin(9) * t279;
t194 = pkin(2) * t493 + t211;
t381 = -pkin(8) - pkin(7);
t325 = t381 * t378;
t307 = qJD(1) * t325;
t283 = t374 * t307;
t323 = t381 * t375;
t305 = qJD(1) * t323;
t221 = t579 * t305 + t283;
t373 = sin(qJ(4));
t377 = cos(qJ(4));
t145 = t377 * t194 - t221 * t373;
t465 = t579 * qJD(3);
t447 = pkin(2) * t465;
t619 = -t373 * t447 - t145;
t146 = t373 * t194 + t377 * t221;
t618 = -t377 * t447 + t146;
t521 = t279 * t377;
t442 = t281 * pkin(4) + pkin(10) * t521;
t577 = pkin(2) * t374;
t353 = pkin(9) + t577;
t556 = -pkin(10) - t353;
t457 = qJD(4) * t556;
t617 = t377 * t457 - t442 + t619;
t551 = qJD(2) * pkin(2);
t288 = t305 + t551;
t215 = t579 * t288 + t283;
t147 = t377 * t211 - t215 * t373;
t380 = -pkin(10) - pkin(9);
t473 = qJD(4) * t380;
t616 = t377 * t473 - t147 - t442;
t522 = t279 * t373;
t482 = pkin(10) * t522;
t615 = -t373 * t457 + t482 + t618;
t148 = t373 * t211 + t377 * t215;
t614 = -t373 * t473 + t148 + t482;
t367 = qJD(2) + qJD(3);
t237 = -t373 * t281 + t367 * t377;
t238 = t281 * t377 + t367 * t373;
t372 = sin(qJ(5));
t578 = cos(qJ(5));
t161 = -t578 * t237 + t238 * t372;
t159 = t161 ^ 2;
t415 = t372 * t237 + t578 * t238;
t580 = t415 ^ 2;
t613 = -t159 + t580;
t471 = t578 * t373;
t298 = t372 * t377 + t471;
t587 = qJD(4) + qJD(5);
t224 = t587 * t298;
t607 = t298 * t279 + t224;
t511 = t372 * t373;
t470 = t578 * t377;
t590 = t470 - t511;
t463 = t578 * qJD(5);
t591 = t578 * qJD(4) + t463;
t606 = t590 * t279 + t377 * t591 - t511 * t587;
t489 = qJD(5) * t372;
t612 = pkin(4) * t489;
t611 = t578 * pkin(4);
t274 = qJD(4) + t279;
t262 = qJD(5) + t274;
t536 = t161 * t262;
t365 = qJDD(2) + qJDD(3);
t406 = t579 * qJD(2) + t465;
t456 = qJDD(1) * t579;
t486 = qJD(1) * qJD(2);
t462 = t375 * t486;
t496 = qJD(3) * t469 + t374 * t462;
t385 = t375 * t456 + (qJD(1) * t406 + qJDD(1) * t374) * t378 - t496;
t490 = qJD(4) * t377;
t491 = qJD(4) * t373;
t138 = t281 * t491 - t373 * t365 - t367 * t490 - t377 * t385;
t476 = t281 * t490 + t367 * t491 + t373 * t385;
t419 = t377 * t365 - t476;
t61 = t578 * t138 - t237 * t463 + t238 * t489 - t372 * t419;
t610 = -t61 + t536;
t609 = t161 * qJ(6);
t608 = t161 * t415;
t286 = t579 * t307;
t220 = t305 * t374 - t286;
t492 = qJD(3) * t374;
t440 = pkin(2) * t492 - t220;
t371 = qJ(2) + qJ(3);
t361 = sin(t371);
t379 = cos(qJ(1));
t515 = t361 * t379;
t376 = sin(qJ(1));
t516 = t361 * t376;
t605 = g(1) * t515 + g(2) * t516;
t533 = t415 * t262;
t62 = qJD(5) * t415 - t372 * t138 - t578 * t419;
t604 = -t62 + t533;
t506 = t374 * t375;
t225 = t367 * t506 - t378 * t406;
t414 = -t225 * t373 + t299 * t490;
t363 = cos(t371);
t564 = g(3) * t363;
t584 = -t564 + t605;
t197 = -t367 * pkin(3) - t215;
t154 = -t237 * pkin(4) + t197;
t370 = qJ(4) + qJ(5);
t360 = sin(t370);
t362 = cos(t370);
t513 = t363 * t376;
t249 = t360 * t379 - t362 * t513;
t512 = t363 * t379;
t251 = t360 * t376 + t362 * t512;
t349 = g(3) * t361;
t557 = t378 * pkin(2);
t357 = pkin(1) + t557;
t321 = t357 * qJD(1);
t192 = pkin(3) * t279 - pkin(9) * t281 - t321;
t216 = t374 * t288 - t286;
t198 = t367 * pkin(9) + t216;
t141 = t192 * t373 + t198 * t377;
t104 = pkin(10) * t237 + t141;
t226 = t367 * t299;
t484 = t375 * qJDD(1);
t432 = t374 * t484 - t378 * t456;
t177 = qJD(1) * t226 + t432;
t176 = qJDD(4) + t177;
t461 = t378 * t486;
t231 = qJDD(2) * pkin(2) - t381 * (-t461 - t484);
t483 = t378 * qJDD(1);
t236 = t381 * (-t462 + t483);
t445 = -t374 * t231 + t579 * t236 - t288 * t465 - t307 * t492;
t117 = pkin(9) * t365 - t445;
t346 = pkin(2) * t462;
t594 = -pkin(9) * t299 - t357;
t97 = t346 - (t341 * t367 - t496) * pkin(9) + t177 * pkin(3) + t594 * qJDD(1);
t95 = t377 * t97;
t39 = -qJD(4) * t141 - t117 * t373 + t95;
t21 = pkin(4) * t176 + pkin(10) * t138 + t39;
t38 = t377 * t117 + t192 * t490 - t198 * t491 + t373 * t97;
t28 = pkin(10) * t419 + t38;
t140 = t377 * t192 - t198 * t373;
t103 = -pkin(10) * t238 + t140;
t92 = pkin(4) * t274 + t103;
t7 = -t104 * t489 + t372 * t21 + t578 * t28 + t92 * t463;
t404 = g(1) * t251 - g(2) * t249 + t362 * t349 - t7;
t603 = t154 * t161 + t404;
t291 = t556 * t373;
t364 = t377 * pkin(10);
t292 = t353 * t377 + t364;
t547 = t291 * t463 - t292 * t489 + t617 * t372 - t615 * t578;
t210 = t372 * t291 + t578 * t292;
t546 = -qJD(5) * t210 + t615 * t372 + t617 * t578;
t322 = t380 * t373;
t324 = pkin(9) * t377 + t364;
t544 = t322 * t463 - t324 * t489 + t616 * t372 - t614 * t578;
t241 = t372 * t322 + t578 * t324;
t543 = -qJD(5) * t241 + t614 * t372 + t616 * t578;
t602 = qJ(6) * t415;
t297 = -t472 + t506;
t214 = pkin(3) * t297 + t594;
t242 = t374 * t323 - t579 * t325;
t155 = t377 * t214 - t242 * t373;
t518 = t299 * t377;
t128 = pkin(4) * t297 - pkin(10) * t518 + t155;
t232 = t377 * t242;
t156 = t373 * t214 + t232;
t519 = t299 * t373;
t143 = -pkin(10) * t519 + t156;
t78 = t372 * t128 + t578 * t143;
t174 = qJDD(5) + t176;
t446 = pkin(4) * t463;
t574 = pkin(4) * t372;
t600 = -t174 * t574 - t262 * t446;
t599 = -t607 * qJ(6) + t590 * qJD(6);
t358 = pkin(4) * t491;
t598 = t607 * pkin(5) + t358;
t558 = t377 * pkin(4);
t315 = pkin(5) * t362 + t558;
t304 = pkin(3) + t315;
t366 = -qJ(6) + t380;
t597 = t363 * t304 - t361 * t366;
t596 = t579 * t323 + t374 * t325;
t355 = pkin(3) + t558;
t595 = t363 * t355 - t361 * t380;
t438 = t363 * pkin(3) + t361 * pkin(9);
t256 = pkin(4) * t522;
t593 = t256 + t440;
t592 = -t281 * pkin(5) - t606 * qJ(6) - t298 * qJD(6);
t589 = -t140 * t373 + t141 * t377;
t435 = g(1) * t379 + g(2) * t376;
t504 = t377 * t379;
t509 = t373 * t376;
t267 = t363 * t509 + t504;
t505 = t376 * t377;
t508 = t373 * t379;
t269 = -t363 * t508 + t505;
t588 = -g(1) * t269 + g(2) * t267;
t171 = t174 * pkin(5);
t550 = t61 * qJ(6);
t586 = -t415 * qJD(6) + t171 + t550;
t248 = t360 * t513 + t362 * t379;
t250 = -t360 * t512 + t362 * t376;
t585 = -g(1) * t250 + g(2) * t248 + t360 * t349;
t458 = t578 * t21 - t372 * t28;
t100 = t578 * t104;
t55 = t372 * t92 + t100;
t8 = -qJD(5) * t55 + t458;
t387 = t8 + t585;
t583 = -t154 * t415 + t387;
t455 = t161 * pkin(5) + qJD(6);
t93 = t154 + t455;
t581 = -t93 * t415 + t585;
t576 = pkin(2) * t375;
t575 = pkin(4) * t238;
t573 = pkin(4) * t373;
t326 = t379 * t357;
t566 = g(2) * t326;
t563 = g(3) * t373;
t562 = g(3) * t378;
t560 = t590 * pkin(5);
t559 = t365 * pkin(3);
t98 = t372 * t104;
t54 = t578 * t92 - t98;
t40 = t54 - t602;
t31 = pkin(5) * t262 + t40;
t555 = -t40 + t31;
t554 = t599 + t547;
t553 = t592 + t546;
t65 = t578 * t103 - t98;
t552 = qJ(6) * t62;
t37 = t38 * t377;
t549 = t599 + t544;
t548 = t592 + t543;
t545 = -t161 * t446 - t62 * t574;
t542 = pkin(7) * qJDD(1);
t541 = qJ(6) * t298;
t540 = t138 * t373;
t532 = t197 * t279;
t530 = t225 * t377;
t529 = t237 * t274;
t528 = t237 * t373;
t527 = t238 * t237;
t526 = t238 * t274;
t525 = t238 * t377;
t524 = t262 * t281;
t523 = t274 * t281;
t520 = t281 * t279;
t510 = t373 * t176;
t503 = t593 + t598;
t175 = -t256 + t216;
t500 = -t175 + t598;
t498 = t358 + t593;
t314 = pkin(5) * t360 + t573;
t497 = t314 - t381;
t368 = t375 ^ 2;
t369 = t378 ^ 2;
t495 = t368 - t369;
t494 = t368 + t369;
t488 = qJD(6) * t161;
t481 = t579 * pkin(2);
t480 = t375 * t551;
t479 = qJD(4) * pkin(9) * t274;
t478 = t299 * t511;
t383 = qJD(1) ^ 2;
t477 = t375 * t383 * t378;
t475 = g(1) * t512 + g(2) * t513 + t349;
t474 = qJD(2) * t381;
t468 = t299 * t491;
t460 = -t381 + t573;
t444 = -t579 * t231 - t374 * t236 + t288 * t492 - t307 * t465;
t118 = t444 - t559;
t459 = -t118 - t564;
t64 = -t103 * t372 - t100;
t77 = t578 * t128 - t143 * t372;
t153 = pkin(3) * t226 + pkin(9) * t225 + t480;
t306 = t375 * t474;
t308 = t378 * t474;
t168 = qJD(3) * t596 + t579 * t306 + t374 * t308;
t452 = t377 * t153 - t168 * t373;
t209 = t578 * t291 - t292 * t372;
t239 = t578 * t322 - t324 * t372;
t449 = t274 * t373;
t448 = t274 * t377;
t356 = -t481 - pkin(3);
t443 = t375 * t461;
t441 = -g(1) * t516 + g(2) * t515;
t439 = -t175 + t358;
t437 = -g(1) * t248 - g(2) * t250;
t436 = -g(1) * t249 - g(2) * t251;
t434 = g(1) * t376 - g(2) * t379;
t193 = pkin(4) * t519 - t596;
t433 = -pkin(9) * t176 + t532;
t429 = t140 * t377 + t141 * t373;
t428 = -t176 * t353 + t532;
t426 = t304 * t361 + t363 * t366;
t424 = t355 * t361 + t363 * t380;
t422 = t584 * t362;
t421 = t118 * t373 + t141 * t281 + t197 * t490 + t363 * t563;
t420 = -t140 * t281 + t197 * t491 + t605 * t377;
t418 = -t140 * t521 - t141 * t522 + t37 - t475;
t417 = t435 * t361;
t416 = -0.2e1 * pkin(1) * t486 - pkin(7) * qJDD(2);
t413 = -t468 - t530;
t320 = t356 - t558;
t48 = pkin(10) * t530 + pkin(4) * t226 + (-t232 + (pkin(10) * t299 - t214) * t373) * qJD(4) + t452;
t74 = t373 * t153 + t377 * t168 + t214 * t490 - t242 * t491;
t57 = -pkin(10) * t414 + t74;
t13 = t128 * t463 - t143 * t489 + t372 * t48 + t578 * t57;
t409 = t419 * t377;
t405 = (-t417 + t564) * t360;
t382 = qJD(2) ^ 2;
t403 = 0.2e1 * qJDD(1) * pkin(1) - pkin(7) * t382 + t434;
t402 = pkin(1) * t383 + t435 - t542;
t401 = -t321 * t279 + t445 + t475;
t400 = -qJD(4) * t429 - t39 * t373;
t399 = t321 * t281 - t444 + t584;
t2 = t8 + t586;
t4 = -t488 + t7 - t552;
t41 = t55 - t609;
t398 = -t2 * t298 - t606 * t31 + t4 * t590 - t607 * t41 - t475;
t397 = -t8 * t298 - t606 * t54 - t607 * t55 + t590 * t7 - t475;
t396 = t404 + t552;
t14 = -qJD(5) * t78 - t372 * t57 + t578 * t48;
t76 = -pkin(4) * t419 + t118;
t26 = t62 * pkin(5) + qJDD(6) + t76;
t395 = -t26 * t590 - t281 * t31 + t607 * t93 + t422;
t169 = qJD(3) * t242 + t374 * t306 - t579 * t308;
t393 = t607 * t154 - t281 * t54 - t590 * t76 + t422;
t392 = t400 + t37;
t110 = t414 * pkin(4) + t169;
t390 = t26 * t298 + t281 * t41 + t606 * t93 + t405;
t389 = t606 * t154 + t281 * t55 + t76 * t298 + t405;
t388 = -g(1) * (-pkin(3) * t515 + pkin(9) * t512) - g(2) * (-pkin(3) * t516 + pkin(9) * t513) - g(3) * t438;
t354 = pkin(5) + t611;
t290 = t590 * qJ(6);
t276 = -qJDD(1) * t357 + t346;
t270 = t363 * t504 + t509;
t268 = -t363 * t505 + t508;
t253 = -t355 - t560;
t245 = t320 - t560;
t204 = t299 * t470 - t478;
t203 = t298 * t299;
t196 = t290 + t241;
t195 = t239 - t541;
t181 = -t279 ^ 2 + t281 ^ 2;
t180 = t290 + t210;
t179 = t209 - t541;
t151 = t279 * t367 + t385;
t144 = pkin(5) * t203 + t193;
t139 = pkin(5) * t415 + t575;
t105 = t174 * t297 + t226 * t262;
t87 = -t225 * t471 - t372 * t468 - qJD(5) * t478 + (-t225 * t372 + t299 * t591) * t377;
t86 = t224 * t299 + t225 * t590;
t85 = -t238 * t281 + t274 * t448 + t510;
t84 = t176 * t377 - t237 * t281 - t274 * t449;
t81 = -t237 * t449 + t409;
t80 = t238 * t448 - t540;
t75 = -qJD(4) * t156 + t452;
t67 = -qJ(6) * t203 + t78;
t63 = pkin(5) * t297 - qJ(6) * t204 + t77;
t59 = t161 * t281 + t174 * t590 - t262 * t607;
t58 = t174 * t298 + t262 * t606 - t281 * t415;
t52 = t87 * pkin(5) + t110;
t43 = t65 - t602;
t42 = t64 + t609;
t32 = (-t138 + t529) * t377 + (t419 - t526) * t373;
t25 = t161 * t607 - t590 * t62;
t24 = -t298 * t61 + t415 * t606;
t18 = t161 * t87 + t203 * t62;
t17 = -t204 * t61 - t415 * t86;
t16 = -t161 * t226 - t174 * t203 - t262 * t87 - t297 * t62;
t15 = t174 * t204 + t226 * t415 - t262 * t86 - t297 * t61;
t12 = -t161 * t606 - t298 * t62 - t415 * t607 - t590 * t61;
t11 = -qJ(6) * t87 - qJD(6) * t203 + t13;
t10 = t226 * pkin(5) + t86 * qJ(6) - t204 * qJD(6) + t14;
t9 = t161 * t86 + t203 * t61 - t204 * t62 - t415 * t87;
t1 = [0, 0, 0, 0, 0, qJDD(1), t434, t435, 0, 0, qJDD(1) * t368 + 0.2e1 * t443, 0.2e1 * t375 * t483 - 0.2e1 * t486 * t495, qJDD(2) * t375 + t378 * t382, qJDD(1) * t369 - 0.2e1 * t443, qJDD(2) * t378 - t375 * t382, 0, t375 * t416 + t378 * t403, -t375 * t403 + t378 * t416, 0.2e1 * t494 * t542 - t435, -g(1) * (-pkin(1) * t376 + pkin(7) * t379) - g(2) * (pkin(1) * t379 + pkin(7) * t376) + (pkin(7) ^ 2 * t494 + pkin(1) ^ 2) * qJDD(1), -t281 * t225 + t299 * t385, -t299 * t177 + t225 * t279 - t281 * t226 - t297 * t385, -t225 * t367 + t299 * t365, t177 * t297 + t226 * t279, -t226 * t367 - t297 * t365, 0, -t169 * t367 - t177 * t357 - t226 * t321 + t276 * t297 + t279 * t480 + t363 * t434 + t365 * t596, -t168 * t367 + t321 * t225 - t242 * t365 + t276 * t299 + t281 * t480 - t357 * t385 + t441, -t168 * t279 + t169 * t281 - t242 * t177 + t215 * t225 - t216 * t226 + t297 * t445 + t299 * t444 - t385 * t596 - t435, -t445 * t242 + t216 * t168 - t444 * t596 - t215 * t169 - t276 * t357 - t321 * t480 - g(1) * (-t357 * t376 - t379 * t381) - g(2) * (-t376 * t381 + t326) -t138 * t518 + t238 * t413 (-t237 * t377 + t238 * t373) * t225 + (t409 + t540 + (-t525 - t528) * qJD(4)) * t299, -t138 * t297 + t176 * t518 + t226 * t238 + t274 * t413, -t237 * t414 - t419 * t519, t237 * t226 - t274 * t414 + t297 * t419 - t299 * t510, t176 * t297 + t226 * t274, -g(1) * t268 - g(2) * t270 + t118 * t519 + t140 * t226 + t155 * t176 - t169 * t237 + t197 * t414 + t75 * t274 + t39 * t297 + t419 * t596, -g(1) * t267 - g(2) * t269 + t118 * t518 + t138 * t596 - t141 * t226 - t156 * t176 + t169 * t238 + t197 * t413 - t274 * t74 - t297 * t38, t74 * t237 + t156 * t419 - t75 * t238 + t155 * t138 + t429 * t225 + (-qJD(4) * t589 - t38 * t373 - t39 * t377) * t299 - t441, -t566 - t118 * t596 + t140 * t75 + t141 * t74 + t39 * t155 + t38 * t156 + t197 * t169 + (g(1) * t381 - g(2) * t438) * t379 + (-g(1) * (-t357 - t438) + g(2) * t381) * t376, t17, t9, t15, t18, t16, t105, t110 * t161 + t14 * t262 + t154 * t87 + t174 * t77 + t193 * t62 + t203 * t76 + t226 * t54 + t297 * t8 + t436, t110 * t415 - t13 * t262 - t154 * t86 - t174 * t78 - t193 * t61 + t204 * t76 - t226 * t55 - t297 * t7 + t437, -t13 * t161 - t14 * t415 - t203 * t7 - t204 * t8 + t54 * t86 - t55 * t87 + t61 * t77 - t62 * t78 - t441, -t566 + t154 * t110 + t55 * t13 + t54 * t14 + t76 * t193 + t7 * t78 + t8 * t77 + (-g(1) * t460 - g(2) * t595) * t379 + (-g(1) * (-t357 - t595) - g(2) * t460) * t376, t17, t9, t15, t18, t16, t105, t10 * t262 + t144 * t62 + t161 * t52 + t174 * t63 + t2 * t297 + t203 * t26 + t226 * t31 + t87 * t93 + t436, -t11 * t262 - t144 * t61 - t174 * t67 + t204 * t26 - t226 * t41 - t297 * t4 + t415 * t52 - t86 * t93 + t437, -t10 * t415 - t11 * t161 - t2 * t204 - t203 * t4 + t31 * t86 - t41 * t87 + t61 * t63 - t62 * t67 - t441, -t566 + t31 * t10 + t41 * t11 + t26 * t144 + t2 * t63 + t4 * t67 + t93 * t52 + (-g(1) * t497 - g(2) * t597) * t379 + (-g(1) * (-t357 - t597) - g(2) * t497) * t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, t495 * t383, t484, t477, t483, qJDD(2), t375 * t402 - t562, g(3) * t375 + t378 * t402, 0, 0, t520, t181, t151, -t520, -t432, t365, t220 * t367 + (-t279 * t493 + t579 * t365 - t367 * t492) * pkin(2) + t399, t221 * t367 + (-t281 * t493 - t365 * t374 - t367 * t465) * pkin(2) + t401, -t177 * t577 - t385 * t481 + (t216 + t440) * t281 + (-t215 + t221 - t447) * t279, t215 * t220 - t216 * t221 + (-t579 * t444 - t562 - t445 * t374 + (-t215 * t374 + t579 * t216) * qJD(3) + (qJD(1) * t321 + t435) * t375) * pkin(2), t80, t32, t85, t81, t84, -t523, t356 * t476 + (-t356 * t365 + t459) * t377 + t428 * t373 - t440 * t237 + (-t353 * t490 + t619) * t274 + t420, -t356 * t138 + t428 * t377 - t373 * t417 + t440 * t238 + (t353 * t491 + t618) * t274 + t421, t145 * t238 - t146 * t237 + (t237 * t447 - qJD(4) * t140 + (qJD(4) * t238 + t419) * t353) * t377 + (t238 * t447 - t353 * t138 - t39 + (-t237 * t353 - t141) * qJD(4)) * t373 + t418, t118 * t356 - t141 * t146 - t140 * t145 - t197 * t220 + (-t562 + t435 * t375 + (t197 * t374 + t579 * t589) * qJD(3)) * pkin(2) + t392 * t353 + t388, t24, t12, t58, t25, t59, -t524, t161 * t498 + t174 * t209 + t262 * t546 + t320 * t62 + t393, -t174 * t210 - t262 * t547 - t320 * t61 + t415 * t498 + t389, -t161 * t547 + t209 * t61 - t210 * t62 - t415 * t546 + t397, t7 * t210 + t8 * t209 + t76 * t320 - g(3) * (t595 + t557) + t547 * t55 + t546 * t54 + t498 * t154 + t435 * (t424 + t576) t24, t12, t58, t25, t59, -t524, t161 * t503 + t174 * t179 + t245 * t62 + t262 * t553 + t395, -t174 * t180 - t245 * t61 - t262 * t554 + t415 * t503 + t390, -t161 * t554 + t179 * t61 - t180 * t62 - t415 * t553 + t398, t4 * t180 + t2 * t179 + t26 * t245 - g(3) * (t597 + t557) + t503 * t93 + t554 * t41 + t553 * t31 + t435 * (t426 + t576); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t520, t181, t151, -t520, -t432, t365, t216 * t367 + t399, t215 * t367 + t401, 0, 0, t80, t32, t85, t81, t84, -t523, -pkin(3) * t476 - t147 * t274 + t216 * t237 + t433 * t373 + (t459 - t479 + t559) * t377 + t420, pkin(3) * t138 + t148 * t274 - t216 * t238 + t433 * t377 + (-t417 + t479) * t373 + t421, t147 * t238 - t148 * t237 + (t409 - t540 + (t525 - t528) * qJD(4)) * pkin(9) + t400 + t418, -t118 * pkin(3) + pkin(9) * t392 - t140 * t147 - t141 * t148 - t197 * t216 + t388, t24, t12, t58, t25, t59, -t524, t161 * t439 + t174 * t239 + t262 * t543 - t355 * t62 + t393, -t174 * t241 - t262 * t544 + t355 * t61 + t415 * t439 + t389, -t161 * t544 + t239 * t61 - t241 * t62 - t415 * t543 + t397, -g(3) * t595 + t154 * t439 + t8 * t239 + t7 * t241 - t76 * t355 + t424 * t435 + t54 * t543 + t544 * t55, t24, t12, t58, t25, t59, -t524, t161 * t500 + t174 * t195 + t253 * t62 + t262 * t548 + t395, -t174 * t196 - t253 * t61 - t262 * t549 + t415 * t500 + t390, -t161 * t549 + t195 * t61 - t196 * t62 - t415 * t548 + t398, -g(3) * t597 + t2 * t195 + t4 * t196 + t26 * t253 + t31 * t548 + t41 * t549 + t426 * t435 + t500 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527, -t237 ^ 2 + t238 ^ 2, -t138 - t529, t527, t419 + t526, t176, -t198 * t490 + t141 * t274 - t197 * t238 + t95 + (-qJD(4) * t192 - t117 + t349) * t373 + t588, g(1) * t270 - g(2) * t268 + t140 * t274 - t197 * t237 + t377 * t349 - t38, 0, 0, t608, t613, t610, -t608, t604, t174, -t64 * t262 + (-t161 * t238 + t578 * t174 - t262 * t489) * pkin(4) + t583, t262 * t65 - t415 * t575 + t600 + t603, t61 * t611 + t545 + (t55 + t64 + t612) * t415 + (t65 - t54) * t161, -t54 * t64 - t55 * t65 + (t7 * t372 + t8 * t578 - t154 * t238 + t361 * t563 + (-t54 * t372 + t55 * t578) * qJD(5) + t588) * pkin(4), t608, t613, t610, -t608, t604, t174, -t139 * t161 + t354 * t174 - t42 * t262 + (-t100 + (-pkin(4) * t262 - t92) * t372) * qJD(5) + t458 + t581 + t586, -t139 * t415 + t161 * t93 + t262 * t43 + t396 + t488 + t600, t354 * t61 + t545 + (t41 + t42 + t612) * t415 + (t43 - t31) * t161, t2 * t354 - t41 * t43 - t31 * t42 - t93 * t139 - g(1) * (-t314 * t512 + t315 * t376) - g(2) * (-t314 * t513 - t315 * t379) + t314 * t349 + (t4 * t372 + (-t31 * t372 + t578 * t41) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t608, t613, t610, -t608, t604, t174, t55 * t262 + t583, t262 * t54 + t603, 0, 0, t608, t613, t610, -t608, t604, t174, t550 + t41 * t262 + 0.2e1 * t171 + (-t455 - t93) * t415 + t387, -pkin(5) * t580 + t262 * t40 + (qJD(6) + t93) * t161 + t396, pkin(5) * t61 - t161 * t555, t555 * t41 + (t2 + t581) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62 + t533, -t61 - t536, -t159 - t580, t41 * t161 + t31 * t415 + t26 - t584;];
tau_reg  = t1;
