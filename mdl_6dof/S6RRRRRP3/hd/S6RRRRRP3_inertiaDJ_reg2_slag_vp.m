% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:09:31
% EndTime: 2019-03-10 01:09:48
% DurationCPUTime: 6.23s
% Computational Cost: add. (10534->418), mult. (23504->660), div. (0->0), fcn. (22407->8), ass. (0->227)
t206 = sin(qJ(2));
t334 = cos(qJ(3));
t336 = -pkin(8) - pkin(7);
t260 = t336 * t334;
t177 = t206 * t260;
t208 = cos(qJ(2));
t332 = sin(qJ(3));
t284 = t332 * t208;
t357 = t336 * t284 + t177;
t173 = t334 * t206 + t284;
t340 = qJD(2) + qJD(3);
t132 = t340 * t173;
t288 = t334 * t208;
t248 = t336 * t288;
t259 = t336 * t332;
t352 = t206 * t259;
t229 = -t248 + t352;
t298 = t206 * qJD(2);
t290 = pkin(2) * t298;
t269 = t334 * qJD(3);
t271 = qJD(3) * t332;
t285 = t332 * t206;
t338 = qJD(2) * t285 + t206 * t271 - t208 * (t334 * qJD(2) + t269);
t356 = t132 * pkin(3) + pkin(9) * t338 - qJD(4) * t229 + t290;
t207 = cos(qJ(4));
t200 = qJD(4) * t207;
t205 = sin(qJ(4));
t223 = t205 * t338;
t216 = -t173 * t200 + t223;
t171 = t285 - t288;
t197 = -t208 * pkin(2) - pkin(1);
t234 = t171 * pkin(3) - t173 * pkin(9) + t197;
t337 = -qJD(2) * (t208 * t259 + t177) - t357 * qJD(3);
t355 = -qJD(4) * t234 + t337;
t202 = t205 ^ 2;
t203 = t207 ^ 2;
t302 = t202 - t203;
t341 = t302 * qJD(4);
t354 = -0.4e1 * t173;
t204 = sin(qJ(5));
t333 = cos(qJ(5));
t287 = t333 * t205;
t172 = t204 * t207 + t287;
t113 = t172 * t173;
t270 = qJD(5) * t333;
t286 = t333 * t207;
t344 = qJD(4) * t286 + t207 * t270;
t222 = t207 * t338;
t300 = qJD(4) * t205;
t347 = t173 * t300 + t222;
t299 = qJD(5) * t204;
t348 = t173 * t299 + t333 * t338;
t39 = t173 * t344 - t204 * t347 - t205 * t348;
t353 = t39 * qJ(6) + t113 * qJD(6);
t313 = t204 * t205;
t335 = -pkin(10) - pkin(9);
t350 = t335 * t313;
t295 = t334 * pkin(2);
t195 = -t295 - pkin(3);
t199 = pkin(2) * t271;
t304 = t195 * t200 + t205 * t199;
t349 = t202 + t203;
t293 = t332 * pkin(2);
t255 = t293 + pkin(9);
t242 = qJD(4) * t255;
t262 = pkin(2) * t269;
t250 = t205 * t262;
t346 = -t207 * t242 - t250;
t249 = t207 * t262;
t345 = t205 * t242 - t249;
t239 = t195 * t300 - t207 * t199;
t312 = t205 * t132;
t93 = t171 * t200 + t312;
t311 = t207 * t132;
t343 = t171 * t300 - t311;
t342 = t286 - t313;
t339 = qJD(4) + qJD(5);
t331 = t342 * pkin(5);
t330 = t204 * pkin(4);
t329 = t207 * pkin(4);
t131 = t339 * t172;
t297 = t208 * qJD(2);
t85 = -qJD(3) * t248 - t260 * t297 + t340 * t352;
t48 = -t216 * pkin(4) + t85;
t17 = t39 * pkin(5) + t48;
t315 = t173 * t205;
t105 = pkin(4) * t315 - t357;
t66 = t113 * pkin(5) + t105;
t328 = t66 * t131 - t17 * t342;
t130 = t339 * t313 - t344;
t327 = -t66 * t130 + t17 * t172;
t326 = t105 * t131 - t342 * t48;
t325 = -t105 * t130 + t48 * t172;
t314 = t173 * t207;
t77 = -t205 * t229 + t207 * t234;
t212 = t171 * pkin(4) - pkin(10) * t314 + t77;
t56 = t204 * t212;
t78 = t205 * t234 + t207 * t229;
t65 = -pkin(10) * t315 + t78;
t33 = t333 * t65 + t56;
t198 = pkin(4) * t300;
t112 = pkin(5) * t131 + t198;
t103 = t112 + t199;
t181 = t195 - t329;
t142 = t181 - t331;
t324 = -t103 * t342 + t142 * t131;
t323 = t103 * t172 - t142 * t130;
t196 = -pkin(3) - t329;
t143 = t196 - t331;
t322 = -t112 * t342 + t143 * t131;
t321 = t112 * t172 - t143 * t130;
t320 = pkin(2) * qJD(3);
t319 = t357 * t85;
t261 = pkin(4) * t270;
t318 = -t113 * t261 - t39 * t330;
t129 = t357 * t200;
t317 = t85 * t205 - t129;
t316 = qJ(6) * t172;
t310 = -t131 * t330 + t261 * t342;
t309 = t131 * qJ(6) - qJD(6) * t342;
t178 = t199 + t198;
t308 = t181 * t131 - t178 * t342;
t307 = -t181 * t130 + t178 * t172;
t306 = t196 * t131 - t198 * t342;
t305 = -t196 * t130 + t172 * t198;
t252 = -pkin(10) - t255;
t241 = t205 * t252;
t154 = t204 * t241;
t201 = t207 * pkin(10);
t243 = t207 * t255;
t165 = t243 + t201;
t121 = t333 * t165 + t154;
t182 = t207 * pkin(9) + t201;
t139 = t333 * t182 + t350;
t296 = -0.2e1 * pkin(1) * qJD(2);
t101 = 0.2e1 * t171 * t132;
t294 = t333 * pkin(4);
t292 = pkin(3) * t300;
t291 = pkin(3) * t200;
t289 = pkin(4) * t299;
t114 = t342 * t173;
t279 = t114 * t299;
t278 = t172 * t299;
t128 = t357 * t300;
t276 = t204 * t200;
t275 = t205 * t200;
t274 = t206 * t297;
t127 = t132 * pkin(5);
t38 = -t204 * t223 + t348 * t207 + (t287 * t339 + t276) * t173;
t29 = t355 * t205 + t356 * t207;
t209 = t132 * pkin(4) + t347 * pkin(10) + t29;
t28 = -t356 * t205 + t355 * t207;
t211 = t216 * pkin(10) - t28;
t8 = -qJD(5) * t56 - t204 * t211 + t333 * t209 - t270 * t65;
t210 = t38 * qJ(6) - t114 * qJD(6) + t8;
t2 = t127 + t210;
t57 = t333 * t212;
t32 = -t204 * t65 + t57;
t20 = pkin(5) * t171 - qJ(6) * t114 + t32;
t25 = -qJ(6) * t113 + t33;
t7 = -qJD(5) * t57 - t204 * t209 - t333 * t211 + t299 * t65;
t4 = t7 + t353;
t273 = t20 * t130 - t25 * t131 - t2 * t172 - t342 * t4;
t272 = t32 * t130 - t33 * t131 - t8 * t172 - t342 * t7;
t155 = t333 * t241;
t240 = qJD(4) * t252;
t220 = t205 * t240 + t249;
t221 = t207 * t240 - t250;
t58 = -qJD(5) * t155 + t165 * t299 - t204 * t221 - t333 * t220;
t40 = t58 + t309;
t245 = t130 * qJ(6) - t172 * qJD(6);
t59 = -qJD(5) * t154 - t165 * t270 - t204 * t220 + t333 * t221;
t41 = t245 + t59;
t120 = -t165 * t204 + t155;
t98 = t120 - t316;
t164 = t342 * qJ(6);
t99 = t164 + t121;
t268 = t98 * t130 - t99 * t131 - t41 * t172 - t342 * t40;
t258 = t335 * t333;
t175 = t205 * t258;
t137 = -t182 * t204 + t175;
t108 = t137 - t316;
t109 = t164 + t139;
t246 = qJD(4) * t258;
t83 = -qJD(5) * t175 + t182 * t299 - t205 * t246 - t335 * t276;
t53 = t83 + t309;
t84 = -t182 * t270 + t207 * t246 - t339 * t350;
t54 = t245 + t84;
t267 = t108 * t130 - t109 * t131 - t54 * t172 - t342 * t53;
t266 = t120 * t130 - t121 * t131 - t59 * t172 - t342 * t58;
t265 = t137 * t130 - t139 * t131 - t84 * t172 - t342 * t83;
t264 = -t85 * t207 - t128;
t263 = t171 * t289;
t168 = t173 ^ 2;
t256 = t168 * t275;
t244 = t205 * t255;
t236 = t349 * t334;
t231 = -t132 * t330 - t171 * t261 + t7;
t9 = -t29 * t205 - t28 * t207 + (-t78 * t205 - t77 * t207) * qJD(4);
t224 = t173 * t338;
t219 = t205 * t222;
t194 = t294 + pkin(5);
t191 = -0.2e1 * t261;
t190 = -0.2e1 * t289;
t185 = -0.2e1 * t275;
t184 = 0.2e1 * t275;
t169 = -0.2e1 * t341;
t157 = t236 * t320;
t126 = t130 * pkin(5);
t102 = -0.2e1 * t172 * t130;
t100 = -0.2e1 * t342 * t131;
t74 = t173 * t341 + t219;
t63 = -t131 * t171 + t132 * t342;
t62 = -t130 * t171 + t132 * t172;
t61 = t275 * t354 + t338 * t302;
t60 = -0.2e1 * t130 * t342 - 0.2e1 * t131 * t172;
t52 = (t333 * t130 + t278) * pkin(4) + t310;
t51 = pkin(4) * t278 + t130 * t194 + t310;
t31 = -0.2e1 * t114 * t38;
t30 = 0.2e1 * t113 * t39;
t24 = t113 * t131 - t342 * t39;
t23 = -t114 * t130 - t172 * t38;
t22 = -0.2e1 * t113 * t132 - 0.2e1 * t171 * t39;
t21 = 0.2e1 * t114 * t132 - 0.2e1 * t171 * t38;
t11 = 0.2e1 * t113 * t38 - 0.2e1 * t114 * t39;
t10 = t113 * t130 - t114 * t131 - t172 * t39 - t342 * t38;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t274, 0.2e1 * (-t206 ^ 2 + t208 ^ 2) * qJD(2), 0, -0.2e1 * t274, 0, 0, t206 * t296, t208 * t296, 0, 0, -0.2e1 * t224, -0.2e1 * t173 * t132 + 0.2e1 * t171 * t338, 0, t101, 0, 0, 0.2e1 * t132 * t197 + 0.2e1 * t171 * t290, 0.2e1 * t173 * t290 - 0.2e1 * t197 * t338, -0.2e1 * t132 * t229 + 0.2e1 * t171 * t337 + 0.2e1 * t85 * t173 + 0.2e1 * t338 * t357, 0.2e1 * t197 * t290 - 0.2e1 * t229 * t337 - 0.2e1 * t319, -0.2e1 * t203 * t224 - 0.2e1 * t256, 0.2e1 * t168 * t341 - t219 * t354, -0.2e1 * t171 * t347 + 0.2e1 * t173 * t311, -0.2e1 * t202 * t224 + 0.2e1 * t256, 0.2e1 * t171 * t216 - 0.2e1 * t173 * t312, t101, -0.2e1 * t129 * t173 + 0.2e1 * t77 * t132 + 0.2e1 * t29 * t171 + 0.2e1 * t223 * t357 + 0.2e1 * t85 * t315, 0.2e1 * t128 * t173 - 0.2e1 * t78 * t132 + 0.2e1 * t28 * t171 + 0.2e1 * t222 * t357 + 0.2e1 * t85 * t314, 0.2e1 * t216 * t78 + 0.2e1 * t28 * t315 - 0.2e1 * t29 * t314 + 0.2e1 * t347 * t77, -0.2e1 * t28 * t78 + 0.2e1 * t29 * t77 - 0.2e1 * t319, t31, t11, t21, t30, t22, t101, 0.2e1 * t105 * t39 + 0.2e1 * t113 * t48 + 0.2e1 * t132 * t32 + 0.2e1 * t171 * t8, -0.2e1 * t105 * t38 + 0.2e1 * t114 * t48 - 0.2e1 * t132 * t33 + 0.2e1 * t171 * t7, 0.2e1 * t113 * t7 - 0.2e1 * t114 * t8 + 0.2e1 * t32 * t38 - 0.2e1 * t33 * t39, 0.2e1 * t105 * t48 + 0.2e1 * t32 * t8 - 0.2e1 * t33 * t7, t31, t11, t21, t30, t22, t101, 0.2e1 * t113 * t17 + 0.2e1 * t132 * t20 + 0.2e1 * t171 * t2 + 0.2e1 * t39 * t66, 0.2e1 * t114 * t17 - 0.2e1 * t132 * t25 + 0.2e1 * t171 * t4 - 0.2e1 * t38 * t66, 0.2e1 * t113 * t4 - 0.2e1 * t114 * t2 + 0.2e1 * t20 * t38 - 0.2e1 * t25 * t39, 0.2e1 * t17 * t66 + 0.2e1 * t2 * t20 - 0.2e1 * t25 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, 0, -t298, 0, -pkin(7) * t297, pkin(7) * t298, 0, 0, 0, 0, -t338, 0, -t132, 0, -t85, t337, -t132 * t293 - t171 * t262 + t173 * t199 + t295 * t338, -t199 * t357 + t229 * t262 - t293 * t337 - t295 * t85, -t74, t61, t93, t74, -t343, 0, -t132 * t244 + t171 * t346 + t173 * t304 - t195 * t223 + t264, -t132 * t243 + t171 * t345 - t173 * t239 - t195 * t222 + t317, t9, -t28 * t243 - t29 * t244 + t85 * t195 + (-t243 * t77 - t244 * t78) * qJD(4) + (-t332 * t357 + (-t205 * t77 + t207 * t78) * t334) * t320, t23, t10, t62, t24, t63, 0, t113 * t178 + t120 * t132 + t171 * t59 + t181 * t39 + t326, t114 * t178 - t121 * t132 + t171 * t58 - t181 * t38 + t325, t113 * t58 - t114 * t59 + t120 * t38 - t121 * t39 + t272, t105 * t178 + t120 * t8 - t121 * t7 + t181 * t48 + t32 * t59 - t33 * t58, t23, t10, t62, t24, t63, 0, t103 * t113 + t132 * t98 + t142 * t39 + t171 * t41 + t328, t103 * t114 - t132 * t99 - t142 * t38 + t171 * t40 + t327, t113 * t40 - t114 * t41 + t38 * t98 - t39 * t99 + t273, t103 * t66 + t142 * t17 + t2 * t98 + t20 * t41 - t25 * t40 - t4 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t199, -0.2e1 * t262, 0, 0, t184, t169, 0, t185, 0, 0, 0.2e1 * t239, 0.2e1 * t304, 0.2e1 * t157, 0.2e1 * (t255 * t295 * t349 + t195 * t293) * qJD(3), t102, t60, 0, t100, 0, 0, 0.2e1 * t308, 0.2e1 * t307, 0.2e1 * t266, 0.2e1 * t120 * t59 - 0.2e1 * t121 * t58 + 0.2e1 * t178 * t181, t102, t60, 0, t100, 0, 0, 0.2e1 * t324, 0.2e1 * t323, 0.2e1 * t268, 0.2e1 * t103 * t142 - 0.2e1 * t40 * t99 + 0.2e1 * t41 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, 0, -t132, 0, -t85, t337, 0, 0, -t74, t61, t93, t74, -t343, 0, pkin(3) * t216 - pkin(9) * t93 + t264, pkin(3) * t347 + pkin(9) * t343 + t317, t9, -pkin(3) * t85 + pkin(9) * t9, t23, t10, t62, t24, t63, 0, t113 * t198 + t132 * t137 + t171 * t84 + t196 * t39 + t326, t114 * t198 - t132 * t139 + t171 * t83 - t196 * t38 + t325, t113 * t83 - t114 * t84 + t137 * t38 - t139 * t39 + t272, t105 * t198 + t137 * t8 - t139 * t7 + t196 * t48 + t32 * t84 - t33 * t83, t23, t10, t62, t24, t63, 0, t108 * t132 + t112 * t113 + t143 * t39 + t171 * t54 + t328, -t109 * t132 + t112 * t114 - t143 * t38 + t171 * t53 + t327, t108 * t38 - t109 * t39 + t113 * t53 - t114 * t54 + t273, t108 * t2 - t109 * t4 + t112 * t66 + t143 * t17 + t20 * t54 - t25 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t262, 0, 0, t184, t169, 0, t185, 0, 0, t239 - t292, -t291 + t304, t157 (-t332 * pkin(3) + t236 * pkin(9)) * t320, t102, t60, 0, t100, 0, 0, t306 + t308, t305 + t307, t265 + t266, t120 * t84 - t121 * t83 + t137 * t59 - t139 * t58 + t178 * t196 + t181 * t198, t102, t60, 0, t100, 0, 0, t322 + t324, t321 + t323, t267 + t268, t103 * t143 + t108 * t41 - t109 * t40 + t112 * t142 - t53 * t99 + t54 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, t169, 0, t185, 0, 0, -0.2e1 * t292, -0.2e1 * t291, 0, 0, t102, t60, 0, t100, 0, 0, 0.2e1 * t306, 0.2e1 * t305, 0.2e1 * t265, 0.2e1 * t137 * t84 - 0.2e1 * t139 * t83 + 0.2e1 * t196 * t198, t102, t60, 0, t100, 0, 0, 0.2e1 * t322, 0.2e1 * t321, 0.2e1 * t267, 0.2e1 * t108 * t54 - 0.2e1 * t109 * t53 + 0.2e1 * t112 * t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, 0, t216, t132, t29, t28, 0, 0, 0, 0, -t38, 0, -t39, t132, t132 * t294 - t263 + t8, t231 (t333 * t38 + t279) * pkin(4) + t318 (t333 * t8 - t204 * t7 + (-t204 * t32 + t333 * t33) * qJD(5)) * pkin(4), 0, 0, -t38, 0, -t39, t132, t194 * t132 + t2 - t263, t231 + t353, pkin(4) * t279 + t194 * t38 + t318, t2 * t194 + (-t204 * t4 + (-t20 * t204 + t333 * t25) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, -t300, 0, t346, t345, 0, 0, 0, 0, -t130, 0, -t131, 0, t59, t58, t52 (t333 * t59 - t204 * t58 + (-t120 * t204 + t333 * t121) * qJD(5)) * pkin(4), 0, 0, -t130, 0, -t131, 0, t41, t40, t51, t41 * t194 + (-t204 * t40 + (-t204 * t98 + t333 * t99) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, 0, -t300, 0, -pkin(9) * t200, pkin(9) * t300, 0, 0, 0, 0, -t130, 0, -t131, 0, t84, t83, t52 (t333 * t84 - t204 * t83 + (-t137 * t204 + t333 * t139) * qJD(5)) * pkin(4), 0, 0, -t130, 0, -t131, 0, t54, t53, t51, t54 * t194 + (-t204 * t53 + (-t108 * t204 + t333 * t109) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t191, 0, 0, 0, 0, 0, 0, 0, 0, t190, t191, 0, 0.2e1 * (t294 - t194) * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, -t39, t132, t8, t7, 0, 0, 0, 0, -t38, 0, -t39, t132, 0.2e1 * t127 + t210, t4, t38 * pkin(5), t2 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, 0, -t131, 0, t59, t58, 0, 0, 0, 0, -t130, 0, -t131, 0, t41, t40, t126, t41 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, 0, -t131, 0, t84, t83, 0, 0, 0, 0, -t130, 0, -t131, 0, t54, t53, t126, t54 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t261, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t261, 0, -pkin(5) * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, -t38, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, -t130, 0, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, -t130, 0, t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
