% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:09:31
% EndTime: 2019-03-10 01:09:51
% DurationCPUTime: 8.59s
% Computational Cost: add. (20538->614), mult. (48728->759), div. (0->0), fcn. (35797->8), ass. (0->306)
t320 = sin(qJ(3));
t321 = sin(qJ(2));
t399 = qJD(1) * t321;
t379 = t320 * t399;
t323 = cos(qJ(2));
t460 = cos(qJ(3));
t382 = t460 * t323;
t258 = -qJD(1) * t382 + t379;
t278 = t320 * t323 + t460 * t321;
t260 = t278 * qJD(1);
t208 = pkin(3) * t260 + pkin(9) * t258;
t390 = pkin(2) * t399;
t186 = t208 + t390;
t462 = -pkin(8) - pkin(7);
t295 = t462 * t323;
t285 = qJD(1) * t295;
t262 = t320 * t285;
t293 = t462 * t321;
t283 = qJD(1) * t293;
t216 = t460 * t283 + t262;
t319 = sin(qJ(4));
t322 = cos(qJ(4));
t135 = t322 * t186 - t216 * t319;
t375 = t460 * qJD(3);
t360 = pkin(2) * t375;
t495 = -t319 * t360 - t135;
t136 = t319 * t186 + t322 * t216;
t494 = -t322 * t360 + t136;
t418 = t258 * t322;
t356 = t260 * pkin(4) + pkin(10) * t418;
t458 = pkin(2) * t320;
t307 = pkin(9) + t458;
t452 = -pkin(10) - t307;
t370 = qJD(4) * t452;
t493 = t322 * t370 - t356 + t495;
t448 = qJD(2) * pkin(2);
t267 = t283 + t448;
t212 = t460 * t267 + t262;
t139 = t322 * t208 - t212 * t319;
t461 = -pkin(10) - pkin(9);
t383 = qJD(4) * t461;
t492 = t322 * t383 - t139 - t356;
t419 = t258 * t319;
t392 = pkin(10) * t419;
t491 = -t319 * t370 + t392 + t494;
t140 = t319 * t208 + t322 * t212;
t490 = -t319 * t383 + t140 + t392;
t315 = qJD(2) + qJD(3);
t228 = -t319 * t260 + t315 * t322;
t229 = t260 * t322 + t315 * t319;
t318 = sin(qJ(5));
t459 = cos(qJ(5));
t157 = -t459 * t228 + t229 * t318;
t155 = t157 ^ 2;
t343 = t318 * t228 + t459 * t229;
t463 = t343 ^ 2;
t489 = -t155 + t463;
t381 = t459 * t319;
t277 = t318 * t322 + t381;
t465 = qJD(4) + qJD(5);
t219 = t465 * t277;
t483 = t277 * t258 + t219;
t414 = t318 * t319;
t380 = t459 * t322;
t467 = t380 - t414;
t373 = t459 * qJD(5);
t468 = t459 * qJD(4) + t373;
t482 = t467 * t258 + t322 * t468 - t414 * t465;
t395 = qJD(5) * t318;
t488 = pkin(4) * t395;
t487 = t459 * pkin(4);
t255 = qJD(4) + t258;
t247 = qJD(5) + t255;
t433 = t157 * t247;
t333 = t323 * (t460 * qJD(2) + t375);
t393 = qJD(1) * qJD(2);
t372 = t321 * t393;
t401 = qJD(3) * t379 + t320 * t372;
t329 = qJD(1) * t333 - t401;
t396 = qJD(4) * t322;
t397 = qJD(4) * t319;
t149 = t260 * t397 - t315 * t396 - t322 * t329;
t385 = t260 * t396 + t315 * t397 + t319 * t329;
t70 = t459 * t149 - t228 * t373 + t229 * t395 + t318 * t385;
t486 = -t70 + t433;
t485 = t157 * qJ(6);
t484 = t157 * t343;
t265 = t460 * t285;
t215 = t283 * t320 - t265;
t398 = qJD(3) * t320;
t355 = pkin(2) * t398 - t215;
t430 = t343 * t247;
t71 = qJD(5) * t343 - t318 * t149 + t459 * t385;
t481 = -t71 + t430;
t411 = t320 * t321;
t220 = t315 * t411 - t333;
t342 = -t220 * t319 + t278 * t396;
t190 = -t315 * pkin(3) - t212;
t150 = -t228 * pkin(4) + t190;
t311 = -pkin(2) * t323 - pkin(1);
t291 = qJD(1) * t311;
t184 = pkin(3) * t258 - pkin(9) * t260 + t291;
t213 = t320 * t267 - t265;
t191 = t315 * pkin(9) + t213;
t128 = t184 * t319 + t191 * t322;
t101 = pkin(10) * t228 + t128;
t221 = t315 * t278;
t205 = t221 * qJD(1);
t389 = t321 * t448;
t133 = t401 * pkin(9) + t205 * pkin(3) + (-pkin(9) * t333 + t389) * qJD(1);
t384 = qJD(2) * t462;
t358 = qJD(1) * t384;
t268 = t321 * t358;
t269 = t323 * t358;
t141 = t267 * t375 + t460 * t268 + t320 * t269 + t285 * t398;
t57 = -t128 * qJD(4) + t322 * t133 - t141 * t319;
t26 = pkin(4) * t205 + pkin(10) * t149 + t57;
t56 = t319 * t133 + t322 * t141 + t184 * t396 - t191 * t397;
t31 = -pkin(10) * t385 + t56;
t127 = t322 * t184 - t191 * t319;
t100 = -pkin(10) * t229 + t127;
t92 = pkin(4) * t255 + t100;
t369 = t101 * t395 - t318 * t26 - t459 * t31 - t92 * t373;
t480 = t150 * t157 + t369;
t479 = -0.2e1 * t393;
t368 = t157 * pkin(5) + qJD(6);
t93 = t150 + t368;
t478 = t93 * t343;
t272 = t452 * t319;
t314 = t322 * pkin(10);
t273 = t307 * t322 + t314;
t444 = t272 * t373 - t273 * t395 + t493 * t318 - t491 * t459;
t207 = t318 * t272 + t459 * t273;
t443 = -qJD(5) * t207 + t491 * t318 + t493 * t459;
t292 = t461 * t319;
t294 = pkin(9) * t322 + t314;
t441 = t292 * t373 - t294 * t395 + t492 * t318 - t490 * t459;
t232 = t318 * t292 + t459 * t294;
t440 = -qJD(5) * t232 + t490 * t318 + t492 * t459;
t477 = qJ(6) * t343;
t276 = -t382 + t411;
t211 = pkin(3) * t276 - pkin(9) * t278 + t311;
t233 = t320 * t293 - t460 * t295;
t151 = t322 * t211 - t233 * t319;
t415 = t278 * t322;
t119 = pkin(4) * t276 - pkin(10) * t415 + t151;
t224 = t322 * t233;
t152 = t319 * t211 + t224;
t416 = t278 * t319;
t132 = -pkin(10) * t416 + t152;
t75 = t318 * t119 + t459 * t132;
t475 = -t483 * qJ(6) + t467 * qJD(6);
t359 = pkin(4) * t373;
t456 = pkin(4) * t318;
t474 = -t205 * t456 - t247 * t359;
t312 = pkin(4) * t397;
t473 = t483 * pkin(5) + t312;
t203 = t205 * pkin(5);
t472 = -t343 * qJD(6) + t203;
t471 = t460 * t293 + t320 * t295;
t243 = pkin(4) * t419;
t470 = t243 + t355;
t469 = -t260 * pkin(5) - t482 * qJ(6) - t277 * qJD(6);
t466 = -t127 * t319 + t128 * t322;
t371 = t459 * t26 - t318 * t31;
t97 = t459 * t101;
t52 = t318 * t92 + t97;
t9 = -qJD(5) * t52 + t371;
t464 = -t150 * t343 + t9;
t457 = pkin(4) * t229;
t454 = t467 * pkin(5);
t453 = t322 * pkin(4);
t95 = t318 * t101;
t51 = t459 * t92 - t95;
t32 = t51 - t477;
t29 = pkin(5) * t247 + t32;
t451 = t29 - t32;
t450 = -t469 - t443;
t449 = -t475 - t444;
t60 = t459 * t100 - t95;
t54 = t56 * t322;
t447 = t70 * qJ(6);
t446 = t475 + t441;
t445 = t469 + t440;
t442 = -t157 * t359 - t71 * t456;
t439 = qJ(6) * t277;
t363 = t320 * t268 - t460 * t269;
t142 = qJD(3) * t213 + t363;
t436 = t142 * t471;
t435 = t149 * t319;
t172 = t205 * t276;
t429 = t205 * t322;
t427 = t220 * t322;
t426 = t228 * t255;
t425 = t228 * t319;
t424 = t229 * t228;
t423 = t229 * t255;
t422 = t229 * t322;
t421 = t247 * t260;
t420 = t255 * t260;
t417 = t260 * t258;
t413 = t319 * t205;
t325 = qJD(1) ^ 2;
t410 = t323 * t325;
t324 = qJD(2) ^ 2;
t409 = t324 * t321;
t408 = t324 * t323;
t168 = -t243 + t213;
t407 = -t168 + t473;
t406 = t470 + t473;
t405 = t312 + t470;
t400 = t321 ^ 2 - t323 ^ 2;
t391 = t460 * pkin(2);
t388 = -t127 * t418 - t128 * t419 + t54;
t387 = t278 * t414;
t386 = t321 * t410;
t310 = -pkin(3) - t453;
t378 = t278 * t397;
t59 = -t100 * t318 - t97;
t367 = pkin(1) * t479;
t74 = t459 * t119 - t132 * t318;
t148 = pkin(3) * t221 + pkin(9) * t220 + t389;
t284 = t321 * t384;
t286 = t323 * t384;
t164 = qJD(3) * t471 + t460 * t284 + t320 * t286;
t365 = t322 * t148 - t164 * t319;
t206 = t459 * t272 - t273 * t318;
t230 = t459 * t292 - t294 * t318;
t362 = t255 * t322;
t361 = t255 * t319;
t309 = -t391 - pkin(3);
t357 = t323 * t372;
t354 = -t168 + t312;
t353 = t385 * t322;
t352 = t128 * t260 + t142 * t319 + t190 * t396;
t185 = pkin(4) * t416 - t471;
t349 = t127 * t322 + t128 * t319;
t348 = t190 * t258 - t205 * t307;
t346 = qJ(6) * t71 + t369;
t345 = -t127 * t260 - t142 * t322 + t190 * t397;
t344 = -t291 * t260 - t363;
t341 = -t378 - t427;
t290 = t309 - t453;
t41 = pkin(10) * t427 + pkin(4) * t221 + (-t224 + (pkin(10) * t278 - t211) * t319) * qJD(4) + t365;
t72 = t319 * t148 + t322 * t164 + t211 * t396 - t233 * t397;
t55 = -pkin(10) * t342 + t72;
t13 = t119 * t373 - t132 * t395 + t318 * t41 + t459 * t55;
t85 = pkin(4) * t385 + t142;
t28 = t71 * pkin(5) + t85;
t340 = -t260 * t29 - t28 * t467 + t483 * t93;
t33 = t52 - t485;
t339 = t260 * t33 + t28 * t277 + t482 * t93;
t338 = t482 * t150 + t260 * t52 + t85 * t277;
t337 = t483 * t150 - t260 * t51 - t467 * t85;
t327 = t9 + t447;
t2 = t327 + t472;
t4 = -qJD(6) * t157 - t346;
t335 = -t2 * t277 - t482 * t29 - t483 * t33 + t4 * t467;
t334 = -t9 * t277 - t369 * t467 - t482 * t51 - t483 * t52;
t332 = -qJD(4) * t349 - t57 * t319;
t14 = -t75 * qJD(5) - t318 * t55 + t459 * t41;
t165 = qJD(3) * t233 + t320 * t284 - t460 * t286;
t330 = t332 + t54;
t106 = t342 * pkin(4) + t165;
t326 = t291 * t258 - t141;
t308 = pkin(5) + t487;
t271 = t467 * qJ(6);
t240 = t310 - t454;
t236 = t290 - t454;
t199 = t278 * t380 - t387;
t198 = t277 * t278;
t188 = t271 + t232;
t187 = t230 - t439;
t173 = -t258 ^ 2 + t260 ^ 2;
t171 = t271 + t207;
t170 = t206 - t439;
t166 = t258 * t315 + t329;
t134 = pkin(5) * t198 + t185;
t126 = pkin(5) * t343 + t457;
t117 = t221 * t247 + t172;
t91 = -t229 * t260 + t255 * t362 + t413;
t90 = -t228 * t260 - t255 * t361 + t429;
t84 = -t228 * t361 - t353;
t83 = t229 * t362 - t435;
t82 = -t220 * t381 - t318 * t378 - qJD(5) * t387 + (-t220 * t318 + t278 * t468) * t322;
t81 = t219 * t278 + t220 * t467;
t73 = -qJD(4) * t152 + t365;
t64 = -qJ(6) * t198 + t75;
t63 = t157 * t260 + t205 * t467 - t247 * t483;
t62 = t205 * t277 + t247 * t482 - t260 * t343;
t58 = pkin(5) * t276 - qJ(6) * t199 + t74;
t49 = t82 * pkin(5) + t106;
t36 = (-t149 + t426) * t322 + (-t385 - t423) * t319;
t35 = t60 - t477;
t34 = t59 + t485;
t20 = t157 * t483 - t467 * t71;
t19 = -t277 * t70 + t343 * t482;
t18 = t157 * t82 + t198 * t71;
t17 = -t199 * t70 - t343 * t81;
t16 = -t157 * t221 - t198 * t205 - t247 * t82 - t276 * t71;
t15 = t199 * t205 + t221 * t343 - t247 * t81 - t276 * t70;
t12 = -t157 * t482 - t277 * t71 - t343 * t483 - t467 * t70;
t11 = t157 * t81 + t198 * t70 - t199 * t71 - t343 * t82;
t10 = -qJ(6) * t82 - qJD(6) * t198 + t13;
t5 = t221 * pkin(5) + t81 * qJ(6) - t199 * qJD(6) + t14;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t357, t400 * t479, t408, -0.2e1 * t357, -t409, 0, -pkin(7) * t408 + t321 * t367, pkin(7) * t409 + t323 * t367, 0, 0, -t260 * t220 + t278 * t329, -t278 * t205 + t220 * t258 - t260 * t221 - t276 * t329, -t220 * t315, t221 * t258 + t172, -t221 * t315, 0, -t165 * t315 + t205 * t311 + t221 * t291 + (qJD(1) * t276 + t258) * t389, pkin(2) * t278 * t372 - t164 * t315 - t291 * t220 + t260 * t389 + t311 * t329, -t141 * t276 + t142 * t278 - t164 * t258 + t165 * t260 - t233 * t205 + t212 * t220 - t213 * t221 - t329 * t471, t141 * t233 + t164 * t213 - t165 * t212 + 0.2e1 * t291 * t389 - t436, -t149 * t415 + t229 * t341 (-t228 * t322 + t229 * t319) * t220 + (-t353 + t435 + (-t422 - t425) * qJD(4)) * t278, -t149 * t276 + t205 * t415 + t221 * t229 + t255 * t341, -t228 * t342 + t385 * t416, t228 * t221 - t255 * t342 - t276 * t385 - t278 * t413, t221 * t255 + t172, t127 * t221 + t142 * t416 + t151 * t205 - t165 * t228 + t190 * t342 + t73 * t255 + t57 * t276 - t385 * t471, -t128 * t221 + t142 * t415 + t149 * t471 - t152 * t205 + t165 * t229 + t190 * t341 - t255 * t72 - t276 * t56, t72 * t228 - t152 * t385 - t73 * t229 + t151 * t149 + t349 * t220 + (-qJD(4) * t466 - t56 * t319 - t57 * t322) * t278, t127 * t73 + t128 * t72 + t151 * t57 + t152 * t56 + t165 * t190 - t436, t17, t11, t15, t18, t16, t117, t106 * t157 + t14 * t247 + t150 * t82 + t185 * t71 + t198 * t85 + t205 * t74 + t221 * t51 + t276 * t9, t106 * t343 - t13 * t247 - t150 * t81 - t185 * t70 + t199 * t85 - t205 * t75 - t221 * t52 + t276 * t369, -t13 * t157 - t14 * t343 + t198 * t369 - t199 * t9 + t51 * t81 - t52 * t82 + t70 * t74 - t71 * t75, t106 * t150 + t13 * t52 + t14 * t51 + t185 * t85 - t369 * t75 + t74 * t9, t17, t11, t15, t18, t16, t117, t134 * t71 + t157 * t49 + t198 * t28 + t2 * t276 + t205 * t58 + t221 * t29 + t247 * t5 + t82 * t93, -t10 * t247 - t134 * t70 + t199 * t28 - t205 * t64 - t221 * t33 - t276 * t4 + t343 * t49 - t81 * t93, -t10 * t157 - t198 * t4 - t199 * t2 + t29 * t81 - t33 * t82 - t343 * t5 + t58 * t70 - t64 * t71, t10 * t33 + t134 * t28 + t2 * t58 + t29 * t5 + t4 * t64 + t49 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t400 * t325, 0, t386, 0, 0, t325 * pkin(1) * t321, pkin(1) * t410, 0, 0, t417, t173, t166, -t417, 0, 0, -t258 * t390 + t215 * t315 + (t265 + (-pkin(2) * t315 - t267) * t320) * qJD(3) + t344, t216 * t315 + (-t260 * t399 - t315 * t375) * pkin(2) + t326, -t205 * t458 - t329 * t391 + (t213 + t355) * t260 + (-t212 + t216 - t360) * t258, t212 * t215 - t213 * t216 + (-t291 * t399 - t460 * t142 + t141 * t320 + (-t212 * t320 + t460 * t213) * qJD(3)) * pkin(2), t83, t36, t91, t84, t90, -t420, t309 * t385 + t348 * t319 - t355 * t228 + (-t307 * t396 + t495) * t255 + t345, -t309 * t149 + t348 * t322 + t355 * t229 + (t307 * t397 + t494) * t255 + t352, t135 * t229 - t136 * t228 + (t228 * t360 - t307 * t385 + (t307 * t229 - t127) * qJD(4)) * t322 + (t229 * t360 - t307 * t149 - t57 + (-t228 * t307 - t128) * qJD(4)) * t319 + t388, -t127 * t135 - t128 * t136 + t142 * t309 - t190 * t215 + (t190 * t320 + t460 * t466) * qJD(3) * pkin(2) + t330 * t307, t19, t12, t62, t20, t63, -t421, t405 * t157 + t205 * t206 + t247 * t443 + t290 * t71 + t337, -t205 * t207 - t444 * t247 - t290 * t70 + t343 * t405 + t338, -t444 * t157 + t206 * t70 - t207 * t71 - t343 * t443 + t334, t405 * t150 + t206 * t9 - t207 * t369 + t290 * t85 + t443 * t51 + t444 * t52, t19, t12, t62, t20, t63, -t421, t406 * t157 + t170 * t205 + t236 * t71 - t450 * t247 + t340, -t171 * t205 - t236 * t70 + t449 * t247 + t343 * t406 + t339, t449 * t157 + t170 * t70 - t171 * t71 + t343 * t450 + t335, t170 * t2 + t171 * t4 + t236 * t28 - t29 * t450 - t33 * t449 + t406 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t173, t166, -t417, 0, 0, t344 + (-qJD(3) + t315) * t213, t212 * t315 + t326, 0, 0, t83, t36, t91, t84, t90, -t420, -pkin(3) * t385 - t139 * t255 + t213 * t228 + t190 * t419 + (-t255 * t396 - t413) * pkin(9) + t345, t190 * t418 + pkin(3) * t149 + t140 * t255 - t213 * t229 + (t255 * t397 - t429) * pkin(9) + t352, t139 * t229 - t140 * t228 + (-t353 - t435 + (t422 - t425) * qJD(4)) * pkin(9) + t332 + t388, -pkin(3) * t142 + pkin(9) * t330 - t127 * t139 - t128 * t140 - t190 * t213, t19, t12, t62, t20, t63, -t421, t157 * t354 + t205 * t230 + t247 * t440 + t310 * t71 + t337, -t205 * t232 - t247 * t441 - t310 * t70 + t343 * t354 + t338, -t157 * t441 + t230 * t70 - t232 * t71 - t343 * t440 + t334, t150 * t354 + t230 * t9 - t232 * t369 + t310 * t85 + t440 * t51 + t441 * t52, t19, t12, t62, t20, t63, -t421, t407 * t157 + t187 * t205 + t240 * t71 + t445 * t247 + t340, -t188 * t205 - t240 * t70 - t446 * t247 + t343 * t407 + t339, -t446 * t157 + t187 * t70 - t188 * t71 - t343 * t445 + t335, t187 * t2 + t188 * t4 + t240 * t28 + t29 * t445 + t33 * t446 + t407 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, -t228 ^ 2 + t229 ^ 2, -t149 - t426, t424, -t385 + t423, t205, t128 * t255 - t190 * t229 + t57, t127 * t255 - t190 * t228 - t56, 0, 0, t484, t489, t486, -t484, t481, t205, -t59 * t247 + (-t157 * t229 + t459 * t205 - t247 * t395) * pkin(4) + t464, t247 * t60 - t343 * t457 + t474 + t480, t70 * t487 + t442 + (t52 + t59 + t488) * t343 + (t60 - t51) * t157, -t51 * t59 - t52 * t60 + (t459 * t9 - t150 * t229 - t318 * t369 + (-t318 * t51 + t459 * t52) * qJD(5)) * pkin(4), t484, t489, t486, -t484, t481, t205, t447 - t126 * t157 - t478 + t308 * t205 - t34 * t247 + (-t97 + (-pkin(4) * t247 - t92) * t318) * qJD(5) + t371 + t472, -t126 * t343 + t157 * t93 + t247 * t35 - t4 + t474, t308 * t70 + t442 + (t33 + t34 + t488) * t343 + (t35 - t29) * t157, -t93 * t126 + t2 * t308 - t29 * t34 - t33 * t35 + (t318 * t4 + (-t29 * t318 + t459 * t33) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, t489, t486, -t484, t481, t205, t52 * t247 + t464, t247 * t51 + t480, 0, 0, t484, t489, t486, -t484, t481, t205, t33 * t247 + 0.2e1 * t203 + (-t368 - t93) * t343 + t327, -pkin(5) * t463 + t247 * t32 + (qJD(6) + t93) * t157 + t346, pkin(5) * t70 - t157 * t451, t451 * t33 + (t2 - t478) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71 + t430, -t70 - t433, -t155 - t463, t33 * t157 + t29 * t343 + t28;];
tauc_reg  = t1;
