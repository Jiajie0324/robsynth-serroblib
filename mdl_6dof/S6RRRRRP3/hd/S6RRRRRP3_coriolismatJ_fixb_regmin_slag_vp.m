% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 01:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 01:09:35
% EndTime: 2019-03-10 01:10:19
% DurationCPUTime: 29.33s
% Computational Cost: add. (29842->928), mult. (58285->1161), div. (0->0), fcn. (65866->8), ass. (0->719)
t1035 = sin(qJ(3));
t662 = cos(qJ(2));
t643 = t1035 * t662;
t1036 = cos(qJ(3));
t659 = sin(qJ(2));
t645 = t1036 * t659;
t614 = -t645 - t643;
t660 = cos(qJ(5));
t661 = cos(qJ(4));
t918 = t661 * t614;
t657 = sin(qJ(5));
t658 = sin(qJ(4));
t928 = t657 * t658;
t448 = t614 * t928 - t660 * t918;
t1057 = -t448 / 0.2e1;
t612 = t1035 * t659 - t1036 * t662;
t1164 = t612 / 0.2e1;
t1017 = t661 * pkin(4);
t650 = -pkin(3) - t1017;
t1159 = -t650 / 0.2e1;
t920 = t660 * t661;
t610 = -t920 + t928;
t1009 = qJ(6) * t610;
t1078 = pkin(9) + pkin(10);
t633 = t1078 * t661;
t620 = t660 * t633;
t631 = t1078 * t658;
t929 = t657 * t631;
t511 = t620 - t929;
t428 = t511 - t1009;
t1162 = -t428 / 0.2e1;
t1023 = t612 * pkin(4);
t1079 = -pkin(8) - pkin(7);
t632 = t1079 * t659;
t618 = t1035 * t632;
t634 = t1079 * t662;
t622 = t1036 * t634;
t905 = -t622 + t618;
t1112 = t905 * t658;
t651 = -pkin(2) * t662 - pkin(1);
t1024 = t612 * pkin(3);
t765 = t614 * pkin(9) + t1024;
t709 = t651 + t765;
t297 = -t661 * t709 + t1112;
t266 = pkin(10) * t918 - t297;
t224 = t266 + t1023;
t221 = t660 * t224;
t1111 = t905 * t661;
t298 = t658 * t709 + t1111;
t949 = t614 * t658;
t267 = pkin(10) * t949 + t298;
t933 = t657 * t267;
t166 = -t221 + t933;
t433 = t448 * qJ(6);
t152 = -t166 - t433;
t130 = pkin(5) * t612 + t152;
t1163 = t1162 * t130;
t1161 = t1159 * t448 + t1164 * t511;
t852 = t1035 * pkin(2);
t647 = t852 + pkin(9);
t1016 = pkin(10) + t647;
t596 = t1016 * t661;
t578 = t660 * t596;
t595 = t1016 * t658;
t930 = t657 * t595;
t464 = t578 - t930;
t853 = t1036 * pkin(2);
t649 = -t853 - pkin(3);
t629 = t649 - t1017;
t1160 = t1057 * t629 + t464 * t1164;
t921 = t660 * t658;
t927 = t657 * t661;
t615 = t921 + t927;
t445 = t614 * t615;
t1059 = -t445 / 0.2e1;
t1049 = -t612 / 0.2e1;
t790 = t660 * t631 + t657 * t633;
t1158 = -t790 / 0.2e1;
t1010 = qJ(6) * t445;
t261 = t660 * t267;
t167 = t657 * t224 + t261;
t153 = t167 + t1010;
t934 = t657 * t266;
t174 = -t261 - t934;
t160 = t174 - t1010;
t1157 = t153 + t160;
t860 = qJD(2) + qJD(3);
t758 = -t1035 * t634 - t1036 * t632;
t1141 = t758 * t658;
t471 = t661 * t612;
t1147 = -t614 * pkin(4) + pkin(10) * t471 + t1141;
t1034 = pkin(2) * t659;
t1021 = t614 * pkin(3);
t1022 = t612 * pkin(9);
t495 = -t1021 + t1022;
t474 = t495 + t1034;
t458 = t661 * t474;
t230 = t458 + t1147;
t223 = t660 * t230;
t468 = t658 * t612;
t856 = pkin(10) * t468;
t1140 = t758 * t661;
t457 = t658 * t474;
t907 = -t457 + t1140;
t271 = t856 - t907;
t932 = t657 * t271;
t760 = t223 / 0.2e1 - t932 / 0.2e1;
t1156 = t760 + t1160;
t479 = t661 * t495;
t233 = t479 + t1147;
t232 = t660 * t233;
t478 = t658 * t495;
t906 = t1140 - t478;
t291 = t856 - t906;
t931 = t657 * t291;
t759 = t232 / 0.2e1 - t931 / 0.2e1;
t1155 = t759 + t1161;
t1154 = t759 - t1161;
t1153 = t760 - t1160;
t827 = t1140 / 0.2e1;
t444 = t615 * t612;
t1025 = t444 * pkin(5);
t579 = pkin(4) * t468;
t1106 = -t579 + t905;
t1134 = t1106 - t1025;
t1033 = pkin(5) * t445;
t405 = -pkin(4) * t949 + t758;
t274 = t405 - t1033;
t1148 = t1134 * t274;
t375 = t464 - t1009;
t1146 = t445 / 0.2e1 + t1059;
t1060 = t428 / 0.2e1;
t806 = t1060 + t1162;
t792 = t660 * t595 + t657 * t596;
t1145 = t792 * t1049 + t1059 * t629;
t1144 = t1158 * t612 + t1159 * t445;
t592 = t615 * qJ(6);
t1105 = -t592 - t790;
t1065 = -t1105 / 0.2e1;
t1142 = t1105 / 0.2e1;
t1132 = t1142 + t1065;
t1104 = -t592 - t792;
t1143 = t1104 / 0.2e1;
t1133 = t1143 - t1104 / 0.2e1;
t45 = (-t1132 - t1133) * t610;
t1050 = -t610 / 0.2e1;
t1048 = -t615 / 0.2e1;
t597 = t645 / 0.2e1 + t643 / 0.2e1;
t893 = qJD(1) * t614;
t832 = t612 * t893;
t395 = -t597 * qJD(4) + t832;
t1139 = t1106 * t610;
t1138 = t1106 * t615;
t1114 = t860 * t614;
t1137 = t612 * t1114;
t1046 = -t622 / 0.2e1;
t1136 = t1046 - t579 / 0.2e1 + t618 / 0.2e1 - t1025 / 0.2e1;
t1113 = t860 * t615;
t897 = qJD(1) * t448;
t1135 = t1113 + t897;
t859 = qJD(4) + qJD(5);
t222 = t657 * t230;
t262 = t660 * t271;
t814 = -t222 / 0.2e1 - t262 / 0.2e1;
t1131 = t814 + t1145;
t231 = t657 * t233;
t272 = t660 * t291;
t813 = -t231 / 0.2e1 - t272 / 0.2e1;
t1130 = t813 + t1144;
t1129 = t813 - t1144;
t1128 = t814 - t1145;
t1127 = (t297 - t1112) * t614;
t1126 = (t298 - t1111) * t614;
t1125 = -t1106 * t445 + t166 * t614 - t405 * t444;
t550 = t657 * t468;
t447 = -t471 * t660 + t550;
t1124 = t1106 * t448 + t167 * t614 + t405 * t447;
t1047 = t615 / 0.2e1;
t210 = t1047 * t445 + t1050 * t448;
t180 = -t210 * qJD(1) + t1113 * t610;
t1123 = t860 * t758;
t1122 = 0.2e1 * t614;
t1121 = 0.2e1 * t658;
t1020 = t657 * pkin(4);
t843 = t1020 / 0.2e1;
t1116 = t1132 * t153;
t1115 = t1133 * t153;
t492 = t860 * t612;
t950 = t614 * t647;
t951 = t612 * t649;
t1099 = t1024 / 0.2e1 + t950 / 0.2e1 - t951 / 0.2e1 + (t1036 * t1049 - t1035 * t614 / 0.2e1) * pkin(2);
t319 = qJD(5) * t597 - t395;
t1094 = t130 * t1048 + t1050 * t153;
t1097 = -t1094 + t1136;
t1096 = t1094 + t1136;
t609 = t614 ^ 2;
t858 = -t612 ^ 2 + t609;
t922 = t660 * t266;
t175 = t922 - t933;
t161 = t175 - t433;
t1095 = t160 * t1048 + t1050 * t161;
t948 = t615 * t448;
t963 = t445 * t610;
t183 = -t948 - t963;
t1085 = t448 ^ 2;
t441 = t445 ^ 2;
t203 = t441 - t1085;
t54 = qJD(1) * t203 + t183 * t860;
t83 = t210 * t860 + t445 * t897;
t214 = t948 - t963;
t292 = t441 + t1085;
t1093 = qJD(1) * t292 + t214 * t860;
t816 = t918 / 0.2e1;
t1040 = t657 / 0.2e1;
t822 = t445 * t1040;
t1018 = t660 * pkin(4);
t648 = pkin(5) + t1018;
t1043 = -t648 / 0.2e1;
t1080 = -pkin(5) / 0.2e1;
t840 = t1043 + t1080;
t186 = t840 * t448 + (t822 + t816) * pkin(4);
t1039 = -t658 / 0.2e1;
t821 = t657 * t1050;
t328 = t840 * t615 + (t821 + t1039) * pkin(4);
t1092 = qJD(1) * t186 + t328 * t860;
t1042 = t648 / 0.2e1;
t841 = -t1018 / 0.2e1;
t767 = t841 + t1042;
t734 = t1080 + t767;
t192 = t734 * t445;
t357 = t734 * t610;
t1091 = -qJD(1) * t192 + t357 * t860;
t1083 = t615 ^ 2;
t608 = t610 ^ 2;
t429 = t608 - t1083;
t131 = t183 * qJD(1) + t429 * t860;
t1082 = t658 ^ 2;
t656 = t661 ^ 2;
t467 = (-t1082 / 0.2e1 + t656 / 0.2e1) * t614;
t923 = t658 * t661;
t835 = qJD(1) * t923;
t1090 = t467 * t860 + t609 * t835;
t499 = t608 + t1083;
t177 = t214 * qJD(1) + t499 * t860;
t857 = -t656 + t1082;
t434 = -0.2e1 * t614 * t835 + t857 * t860;
t980 = t375 * t448;
t1089 = -t980 / 0.2e1 + t1146 * t1104;
t965 = t428 * t448;
t1088 = -t965 / 0.2e1 + t1146 * t1105;
t1087 = t859 * t790;
t1086 = t859 * t792;
t1081 = -pkin(3) / 0.2e1;
t1077 = -t130 / 0.2e1;
t794 = t223 - t932;
t795 = -t614 * pkin(5) - qJ(6) * t447;
t138 = t794 + t795;
t1076 = t138 / 0.2e1;
t793 = t232 - t931;
t148 = t793 + t795;
t1075 = t148 / 0.2e1;
t1074 = -t221 / 0.2e1;
t1073 = -t224 / 0.2e1;
t820 = -t261 / 0.2e1;
t1072 = -t375 / 0.2e1;
t1067 = t375 / 0.2e1;
t1056 = t448 / 0.2e1;
t1030 = pkin(5) * t610;
t517 = t629 + t1030;
t1055 = t517 / 0.2e1;
t539 = t650 + t1030;
t1054 = -t539 / 0.2e1;
t1053 = t539 / 0.2e1;
t838 = t661 * t1036;
t839 = t658 * t1036;
t544 = (-t657 * t838 - t660 * t839) * pkin(2);
t1052 = t544 / 0.2e1;
t1051 = t550 / 0.2e1;
t819 = -t578 / 0.2e1;
t818 = -t620 / 0.2e1;
t606 = t622 / 0.2e1;
t1045 = t629 / 0.2e1;
t1044 = t647 / 0.2e1;
t1041 = t649 / 0.2e1;
t1038 = t660 / 0.2e1;
t1037 = t661 / 0.2e1;
t1032 = pkin(5) * t447;
t1031 = pkin(5) * t448;
t1029 = pkin(5) * t615;
t1028 = t160 * pkin(5);
t1027 = t375 * pkin(5);
t1026 = t428 * pkin(5);
t1019 = t658 * pkin(4);
t1015 = pkin(3) * qJD(3);
t1014 = pkin(4) * qJD(4);
t1013 = pkin(4) * qJD(5);
t1012 = pkin(5) * qJD(5);
t1011 = pkin(5) * qJD(6);
t916 = t130 - t152;
t26 = t916 * t445;
t1008 = qJD(1) * t26;
t29 = t1031 * t274 - t153 * t916;
t1007 = qJD(1) * t29;
t40 = -t130 * t448 + t153 * t445;
t1006 = qJD(1) * t40;
t855 = pkin(4) * t918;
t973 = t405 * t448;
t73 = t174 * t612 + t445 * t855 + t973;
t1005 = qJD(1) * t73;
t974 = t405 * t445;
t74 = -t175 * t612 - t448 * t855 + t974;
t1004 = qJD(1) * t74;
t89 = t166 * t612 + t974;
t1003 = qJD(1) * t89;
t90 = -t167 * t612 + t973;
t1002 = qJD(1) * t90;
t1001 = t130 * t610;
t999 = t138 * t615;
t998 = t148 * t615;
t996 = t153 * t615;
t432 = t444 * qJ(6);
t913 = t262 + t222;
t154 = t432 + t913;
t995 = t154 * t610;
t912 = t272 + t231;
t158 = t432 + t912;
t994 = t158 * t610;
t23 = t130 * t138 + t153 * t154 + t1148;
t991 = t23 * qJD(1);
t746 = -t130 * t447 + t153 * t444;
t24 = -t138 * t448 + t154 * t445 + t746;
t990 = t24 * qJD(1);
t25 = t130 * t148 + t153 * t158 + t1148;
t989 = t25 * qJD(1);
t27 = -t148 * t448 + t158 * t445 + t746;
t988 = t27 * qJD(1);
t28 = -t1157 * t448 - (t130 - t161) * t445;
t987 = t28 * qJD(1);
t736 = -t855 + t1031;
t30 = t130 * t160 + t153 * t161 + t274 * t736;
t986 = t30 * qJD(1);
t36 = t612 * t794 + t1125;
t985 = t36 * qJD(1);
t37 = -t612 * t913 + t1124;
t984 = t37 * qJD(1);
t983 = t1104 * t447;
t982 = t1104 * t615;
t981 = t375 * t444;
t979 = t375 * t610;
t38 = t612 * t793 + t1125;
t978 = t38 * qJD(1);
t39 = -t612 * t912 + t1124;
t977 = t39 * qJD(1);
t972 = t405 * t610;
t971 = t405 * t615;
t968 = t1105 * t447;
t967 = t1105 * t615;
t966 = t428 * t444;
t964 = t428 * t610;
t961 = t792 * t614;
t959 = t464 * t614;
t957 = t790 * t614;
t952 = t511 * t614;
t947 = t629 * t444;
t945 = t629 * t447;
t943 = t629 * t610;
t942 = t629 * t615;
t844 = -t1023 / 0.2e1;
t768 = t844 + t266 / 0.2e1;
t63 = t660 * t768 + t1074;
t941 = t63 * qJD(1);
t940 = t650 * t444;
t938 = t650 * t447;
t936 = t650 * t610;
t935 = t650 * t615;
t926 = t658 * t445;
t917 = t1001 / 0.2e1 - t996 / 0.2e1;
t915 = t859 * t183;
t914 = t859 * t210;
t356 = t1030 / 0.2e1 + t767 * t610;
t911 = t356 * qJD(5) + (-t1020 * t615 + t648 * t610) * qJD(4);
t910 = t356 * qJD(4) + t610 * t1012;
t184 = t444 * t448 + t445 * t447;
t904 = qJD(1) * t184;
t199 = t297 * t612 + t758 * t949;
t901 = qJD(1) * t199;
t200 = -t298 * t612 - t758 * t918;
t900 = qJD(1) * t200;
t455 = t1034 * t612 - t614 * t651;
t896 = qJD(1) * t455;
t456 = -t1034 * t614 - t612 * t651;
t895 = qJD(1) * t456;
t894 = qJD(1) * t612;
t892 = qJD(1) * t651;
t891 = qJD(1) * t662;
t890 = qJD(2) * t629;
t889 = qJD(2) * t649;
t888 = qJD(3) * t650;
t887 = qJD(3) * t651;
t886 = qJD(4) * t658;
t885 = qJD(4) * t661;
t884 = qJD(5) * t629;
t883 = qJD(5) * t650;
t128 = t458 * t612 + t1127;
t882 = t128 * qJD(1);
t129 = t1126 + (t907 - t1140) * t612;
t881 = t129 * qJD(1);
t141 = t479 * t612 + t1127;
t880 = t141 * qJD(1);
t142 = t1126 + (t906 - t1140) * t612;
t879 = t142 * qJD(1);
t737 = -t649 / 0.2e1 - t853 / 0.2e1;
t777 = -t852 / 0.2e1;
t667 = (t1044 + t777 - pkin(9) / 0.2e1) * t614 + (t1081 + t737) * t612;
t170 = t658 * t667;
t878 = t170 * qJD(1);
t212 = t444 * t612 - t445 * t614;
t875 = t212 * qJD(1);
t213 = t447 * t612 - t448 * t614;
t874 = t213 * qJD(1);
t725 = t927 / 0.2e1 + t921 / 0.2e1;
t301 = (t1047 + t725) * t612;
t295 = t301 * qJD(1);
t817 = -t920 / 0.2e1;
t302 = t1051 + (t817 + t610 / 0.2e1) * t612;
t296 = t302 * qJD(1);
t392 = t858 * t658;
t872 = t392 * qJD(1);
t393 = t858 * t661;
t871 = t393 * qJD(1);
t870 = t858 * qJD(1);
t869 = t467 * qJD(1);
t868 = t468 * qJD(1);
t461 = t471 * qJD(1);
t477 = t857 * t609;
t867 = t477 * qJD(1);
t507 = t606 + t1046;
t866 = t507 * qJD(1);
t865 = t597 * qJD(1);
t639 = -t659 ^ 2 + t662 ^ 2;
t863 = t639 * qJD(1);
t862 = t659 * qJD(2);
t861 = t662 * qJD(2);
t810 = t1067 + t1072;
t46 = (-t806 - t810) * t615 + t45;
t494 = t499 * qJD(6);
t854 = t46 * qJD(4) + t45 * qJD(5) + t494;
t851 = pkin(1) * t659 * qJD(1);
t850 = pkin(1) * t891;
t849 = t657 * t1013;
t848 = t1032 / 0.2e1;
t847 = t1031 / 0.2e1;
t846 = t1029 / 0.2e1;
t842 = t1019 / 0.2e1;
t837 = t612 * t892;
t836 = t614 * t892;
t834 = qJD(4) * t612 * t614;
t642 = t658 * t885;
t831 = t659 * t891;
t126 = t996 / 0.2e1;
t830 = t274 * t1048;
t829 = t972 / 0.2e1;
t828 = -t971 / 0.2e1;
t815 = t152 / 0.2e1 + t1077;
t805 = -t457 / 0.2e1 + t827;
t804 = t478 / 0.2e1 - t1140 / 0.2e1;
t802 = t1045 + t1159;
t801 = t650 / 0.2e1 + t1045;
t800 = t1036 * qJD(2);
t799 = t1036 * qJD(3);
t798 = t1035 * qJD(2);
t797 = t1035 * qJD(3);
t796 = pkin(4) * t859;
t785 = t860 * t661;
t783 = t859 * t612;
t782 = t859 * t615;
t781 = -t855 / 0.2e1;
t780 = qJD(4) + t894;
t779 = pkin(2) * t797;
t778 = pkin(2) * t798;
t776 = t852 / 0.2e1;
t775 = t657 * t839;
t772 = -t839 / 0.2e1;
t771 = -t838 / 0.2e1;
t766 = -t328 * qJD(4) + t1012 * t615;
t764 = t1019 + t1029;
t761 = (t1053 + t1055) * t615;
t757 = t658 * t785;
t755 = t860 * t923;
t754 = -qJD(5) - t780;
t665 = t1055 * t736 + t1067 * t161 + t1072 * t130 + t1143 * t1157;
t732 = t274 * t764;
t711 = -t732 / 0.2e1;
t716 = t1042 * t138 + t154 * t843;
t3 = t711 - t665 + t716;
t731 = t517 * t764;
t749 = -t3 * qJD(1) + qJD(2) * t731;
t140 = t1029 * t517;
t7 = -t815 * t375 - t1115 + (t1057 * t517 + t1076 + t830) * pkin(5);
t748 = qJD(1) * t7 - qJD(2) * t140;
t545 = (t660 * t838 - t775) * pkin(2);
t176 = t1104 * t544 + t375 * t545 + t517 * t852;
t666 = t130 * t1052 + t148 * t1143 + t153 * t545 / 0.2e1 + t158 * t1067 + t1134 * t1055 + t274 * t776;
t685 = t1054 * t1134 + t1065 * t138 + t1162 * t154;
t2 = t666 + t685;
t747 = t2 * qJD(1) + t176 * qJD(2);
t743 = t950 - t951;
t727 = t1052 * t448 + t1059 * t545;
t11 = (-t138 / 0.2e1 + t1075) * t615 + (-t154 / 0.2e1 + t158 / 0.2e1) * t610 + (t1065 + t1143) * t447 - (t1162 + t1067) * t444 + t727;
t300 = -t544 * t615 - t545 * t610;
t742 = qJD(1) * t11 - qJD(2) * t300;
t197 = -t979 - t982;
t729 = t1056 * t1104 + t1059 * t375;
t31 = t729 + t1097;
t741 = -qJD(1) * t31 + qJD(2) * t197;
t582 = t610 * t1019;
t412 = t582 + t942;
t673 = (t926 / 0.2e1 + (-t660 / 0.2e1 + t610 * t1037) * t614) * pkin(4) + t828;
t51 = t673 + t1156;
t740 = -t51 * qJD(1) + t412 * qJD(2);
t583 = t615 * t1019;
t413 = t583 - t943;
t672 = (t448 * t1039 + (t1037 * t615 + t1040) * t614) * pkin(4) + t829;
t50 = t672 + t1131;
t739 = -t50 * qJD(1) + t413 * qJD(2);
t738 = t614 * t780;
t735 = t1022 / 0.2e1 - t1021 / 0.2e1;
t730 = t764 * t539;
t728 = t1056 * t1105 + t1059 * t428;
t726 = t1041 * t614 + t1044 * t612;
t70 = t829 + t1131;
t724 = qJD(1) * t70 + t610 * t890;
t69 = t828 + t1156;
t723 = qJD(1) * t69 - t615 * t890;
t722 = t661 * t738;
t680 = t658 * t726 + t827;
t187 = t680 - t805;
t721 = -qJD(1) * t187 - t661 * t889;
t706 = t726 * t661;
t189 = -t458 / 0.2e1 - t706;
t720 = -qJD(1) * t189 - t658 * t889;
t719 = pkin(3) / 0.2e1 + t737;
t332 = -t972 / 0.2e1;
t718 = t448 * t842 + t614 * t843 + t615 * t781 + t332;
t333 = t971 / 0.2e1;
t717 = t614 * t841 + t333 - pkin(4) * t926 / 0.2e1 + t610 * t781;
t715 = t1042 * t148 + t158 * t843;
t714 = t1042 * t544 + t545 * t843;
t713 = t447 * t1043 + t444 * t843;
t712 = t735 * t661;
t710 = t757 * t1122;
t663 = t731 / 0.2e1 + t730 / 0.2e1 + t806 * t1104;
t41 = -t663 + t714;
t664 = t1053 * t736 + t1060 * t161 + t1142 * t1157 + t1163;
t5 = t711 - t664 + t715;
t708 = -t5 * qJD(1) - t41 * qJD(2) + qJD(3) * t730;
t165 = t1029 * t539;
t684 = t1132 * t375 + t1133 * t428;
t49 = (-t544 / 0.2e1 + t761) * pkin(5) + t684;
t9 = -t815 * t428 - t1116 + (t1054 * t448 + t1075 + t830) * pkin(5);
t707 = qJD(1) * t9 - qJD(2) * t49 - qJD(3) * t165;
t691 = t1050 * t152 + t126 + t917;
t670 = t980 / 0.2e1 + t691 + t1089;
t16 = t848 + t670;
t705 = -qJD(1) * t16 - qJD(3) * t45;
t671 = -t1001 / 0.2e1 + t126 + t713 - t1095;
t13 = -t1133 * t445 + t448 * t810 + t671;
t704 = qJD(1) * t13 - qJD(3) * t46;
t669 = t965 / 0.2e1 + t691 + t1088;
t20 = t848 + t669;
t703 = -qJD(1) * t20 - qJD(2) * t45;
t17 = -t1132 * t445 + t448 * t806 + t671;
t702 = qJD(1) * t17 - qJD(2) * t46;
t134 = t776 + (t1142 + t1143) * t615 + (t1060 + t1067) * t610;
t205 = -t964 - t967;
t33 = t728 + t1097;
t700 = -qJD(1) * t33 - qJD(2) * t134 + qJD(3) * t205;
t679 = (t657 * t771 + t660 * t772) * pkin(2);
t306 = -t615 * t801 + t679;
t276 = -t582 + t306;
t453 = t582 + t935;
t57 = t673 + t1155;
t699 = -t57 * qJD(1) - t276 * qJD(2) + t453 * qJD(3);
t678 = (t660 * t771 + t775 / 0.2e1) * pkin(2);
t307 = t610 * t801 + t678;
t277 = -t583 + t307;
t454 = t583 - t936;
t56 = t672 + t1130;
t698 = t56 * qJD(1) + t277 * qJD(2) - t454 * qJD(3);
t452 = t819 + t578 / 0.2e1;
t506 = t818 + t620 / 0.2e1;
t61 = t820 + t261 / 0.2e1 + (t1073 + t768) * t657;
t697 = t61 * qJD(1) + t452 * qJD(2) + t506 * qJD(3);
t696 = t1052 * t612 + t445 * t777;
t695 = t1049 * t545 + t448 * t776;
t66 = (t792 / 0.2e1 + t1158) * t614 - t802 * t444 + t696;
t694 = -t66 * qJD(1) - t610 * t778;
t68 = (t464 / 0.2e1 - t511 / 0.2e1) * t614 + t802 * t447 + t695;
t693 = -t68 * qJD(1) - t615 * t778;
t173 = t661 * t667;
t692 = -t173 * qJD(1) - t658 * t778;
t682 = t658 * t735 + t827;
t193 = t682 + t804;
t527 = t719 * t661;
t690 = -qJD(1) * t193 + qJD(2) * t527 + t1015 * t661;
t195 = -t479 / 0.2e1 - t712;
t526 = t719 * t658;
t689 = -qJD(1) * t195 + qJD(2) * t526 + t1015 * t658;
t688 = (-t798 - t797) * pkin(2);
t75 = t828 + t1155;
t687 = qJD(1) * t75 + qJD(2) * t306 - t615 * t888;
t76 = t829 + t1130;
t686 = qJD(1) * t76 + qJD(2) * t307 + t610 * t888;
t674 = (t1038 * t428 + t1132 * t657) * pkin(4) + t428 * t1043;
t156 = t1026 / 0.2e1 + t674;
t676 = (t1038 * t153 + t657 * t815) * pkin(4) + t153 * t1043;
t22 = -t1028 / 0.2e1 + t676;
t570 = (-t648 + t1018) * t1020;
t675 = (t1038 * t375 + t1133 * t657) * pkin(4) + t375 * t1043;
t97 = t1027 / 0.2e1 + t675;
t683 = -qJD(1) * t22 - qJD(2) * t97 - qJD(3) * t156 - qJD(4) * t570;
t681 = t713 + t917 + t1095;
t308 = -t936 / 0.2e1 - t943 / 0.2e1 + t678;
t309 = t935 / 0.2e1 + t942 / 0.2e1 + t679;
t637 = t658 * t779;
t630 = t857 * qJD(4);
t591 = t615 * t1011;
t569 = t615 * t779;
t568 = t610 * t779;
t529 = pkin(2) * t771 + t1037 * t649 + t1081 * t661;
t528 = pkin(2) * t772 + pkin(3) * t1039 + t1041 * t658;
t475 = t860 * t597;
t459 = t467 * qJD(4);
t439 = 0.2e1 * t606 - t618;
t438 = 0.2e1 * t818 + t929;
t416 = -t1032 / 0.2e1;
t410 = t461 + t885;
t409 = -t868 - t886;
t364 = t755 - t869;
t363 = -t757 + t869;
t355 = 0.2e1 * t819 + t930;
t345 = t357 * qJD(4);
t344 = t357 * qJD(5);
t341 = t610 * t782;
t336 = t722 * t1121;
t327 = pkin(4) * t821 + t1043 * t615 + t842 + t846;
t323 = t328 * qJD(6);
t322 = t327 * qJD(4);
t321 = t327 * qJD(6);
t304 = (t1048 + t725) * t612;
t303 = t1049 * t610 + t612 * t817 + t1051;
t299 = -t656 * t832 - t459;
t294 = t300 * qJD(3);
t293 = t1135 * pkin(5);
t279 = t583 + t308;
t278 = t582 + t309;
t265 = qJD(4) * t471 - t871;
t264 = -qJD(4) * t468 + t872;
t263 = t859 * t429;
t229 = t274 * t846;
t226 = -t782 - t295;
t225 = -t610 * t859 - t296;
t216 = t732 / 0.2e1;
t209 = t214 * qJD(6);
t206 = -t459 + (t656 * t893 - t757) * t612;
t202 = -t1114 * t658 + t871;
t201 = -t614 * t785 - t872;
t198 = (qJD(4) - t894) * t918 * t1121 + t857 * t492;
t196 = t1141 + t479 / 0.2e1 - t712;
t194 = t682 - t804;
t191 = -t1033 / 0.2e1 - t767 * t445;
t190 = t1141 + t458 / 0.2e1 - t706;
t188 = t680 + t805;
t185 = pkin(4) * t822 + t1043 * t448 + t781 + t847;
t172 = pkin(9) * t816 + t1099 * t661 + t1112;
t171 = -t1111 + pkin(9) * t949 / 0.2e1 + t1099 * t658;
t169 = t301 * t860 + t448 * t894;
t168 = t302 * t860 - t445 * t894;
t155 = -t1026 / 0.2e1 + t674;
t137 = -t302 * t859 - t874;
t136 = -t301 * t859 - t875;
t135 = -t964 / 0.2e1 - t979 / 0.2e1 - t967 / 0.2e1 - t982 / 0.2e1 + t776;
t105 = t304 * t860 + t448 * t754;
t104 = t303 * t860 - t445 * t754;
t96 = -t1027 / 0.2e1 + t675;
t85 = -t447 * t897 + t914;
t80 = -t1113 * t614 + t303 * t859 + t874;
t79 = t1114 * t610 + t304 * t859 + t875;
t78 = t333 + t1154;
t77 = t332 + t1129;
t72 = t333 + t1153;
t71 = t332 + t1128;
t67 = t959 / 0.2e1 + t945 / 0.2e1 + t1138 + t952 / 0.2e1 + t938 / 0.2e1 + t695;
t65 = t961 / 0.2e1 - t947 / 0.2e1 + t1139 + t957 / 0.2e1 - t940 / 0.2e1 + t696;
t64 = t612 * t841 + t933 + t1074 - t922 / 0.2e1;
t62 = 0.2e1 * t820 - t934 / 0.2e1 + (t844 + t1073) * t657;
t60 = t1135 * t447 + t914;
t59 = t718 + t1129;
t58 = t717 + t1154;
t53 = t718 + t1128;
t52 = t717 + t1153;
t48 = t684 + (t1052 + t761) * pkin(5);
t47 = -t904 + t915;
t42 = t663 + t714;
t35 = t904 + t860 * (t444 * t615 - t447 * t610) + t915;
t34 = -t728 + t1096;
t32 = -t729 + t1096;
t21 = t1028 / 0.2e1 + t676;
t19 = t416 + t669;
t18 = -t1057 * t428 + t1088 + t681;
t15 = t416 + t670;
t14 = -t1057 * t375 + t1089 + t681;
t12 = t981 / 0.2e1 - t994 / 0.2e1 - t983 / 0.2e1 - t998 / 0.2e1 + t966 / 0.2e1 - t995 / 0.2e1 - t968 / 0.2e1 - t999 / 0.2e1 - t727;
t10 = pkin(5) * t1075 + t152 * t1060 + t539 * t847 + t1116 + t1163 + t229;
t8 = pkin(5) * t1076 + t152 * t1067 + t375 * t1077 + t517 * t847 + t1115 + t229;
t6 = t216 + t664 + t715;
t4 = t216 + t665 + t716;
t1 = t666 - t685;
t43 = [0, 0, 0, t659 * t861, t639 * qJD(2), 0, 0, 0, -pkin(1) * t862, -pkin(1) * t861, t1137, -t860 * t858, 0, 0, 0, qJD(2) * t455 - t614 * t887, qJD(2) * t456 - t612 * t887, t1137 * t656 - t609 * t642, t477 * qJD(4) - t612 * t710, t393 * t860 + t658 * t834, -t392 * t860 + t661 * t834, -t1137, qJD(2) * t128 + qJD(3) * t141 + qJD(4) * t200, qJD(2) * t129 + qJD(3) * t142 + qJD(4) * t199 (t445 * t859 + t447 * t860) * t448, t184 * t860 + t203 * t859, t213 * t860 + t445 * t783, t212 * t860 - t448 * t783, -t1137, qJD(2) * t36 + qJD(3) * t38 + qJD(4) * t73 + qJD(5) * t90, qJD(2) * t37 + qJD(3) * t39 + qJD(4) * t74 + qJD(5) * t89, qJD(2) * t24 + qJD(3) * t27 + qJD(4) * t28 - qJD(5) * t26 + qJD(6) * t292, qJD(2) * t23 + qJD(3) * t25 + qJD(4) * t30 + qJD(5) * t29 + qJD(6) * t40; 0, 0, 0, t831, t863, t861, -t862, 0, -pkin(7) * t861 - t851, pkin(7) * t862 - t850, t832, -t870, -t492, t1114, 0, -qJD(2) * t905 + qJD(3) * t439 + t896, t1123 + t895, t206, t198, t202, t201, -t395, t882 + (t658 * t743 - t1111) * qJD(2) + t171 * qJD(3) + t190 * qJD(4), t881 + (t661 * t743 + t1112) * qJD(2) + t172 * qJD(3) + t188 * qJD(4), t60, t35, t80, t79, t319, t985 + (-t947 + t961 + t1139) * qJD(2) + t65 * qJD(3) + t52 * qJD(4) + t72 * qJD(5), t984 + (t945 + t959 + t1138) * qJD(2) + t67 * qJD(3) + t53 * qJD(4) + t71 * qJD(5), t990 + (t981 - t983 - t995 - t999) * qJD(2) + t12 * qJD(3) + t14 * qJD(4) + t15 * qJD(5) + t209, t991 + (t1104 * t138 + t1134 * t517 + t154 * t375) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t8 * qJD(5) + t32 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t832, -t870, -t492, t1114, 0, qJD(2) * t439 - qJD(3) * t905 - t836, t1123 - t837, t206, t198, t202, t201, -t395, t880 + t171 * qJD(2) + (t658 * t765 - t1111) * qJD(3) + t196 * qJD(4), t879 + t172 * qJD(2) + (t661 * t765 + t1112) * qJD(3) + t194 * qJD(4), t60, t35, t80, t79, t319, t978 + t65 * qJD(2) + (-t940 + t957 + t1139) * qJD(3) + t58 * qJD(4) + t78 * qJD(5), t977 + t67 * qJD(2) + (t938 + t952 + t1138) * qJD(3) + t59 * qJD(4) + t77 * qJD(5), t988 + t12 * qJD(2) + (t966 - t968 - t994 - t998) * qJD(3) + t18 * qJD(4) + t19 * qJD(5) + t209, t989 + t1 * qJD(2) + (t1105 * t148 + t1134 * t539 + t158 * t428) * qJD(3) + t6 * qJD(4) + t10 * qJD(5) + t34 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1090, t1122 * t755 + t867, t658 * t738, t722, t475, qJD(2) * t190 + qJD(3) * t196 - qJD(4) * t298 + t900, qJD(2) * t188 + qJD(3) * t194 + qJD(4) * t297 + t901, t83, t54, t104, t105, t475, qJD(2) * t52 + qJD(3) * t58 + qJD(4) * t174 + qJD(5) * t62 + t1005, qJD(2) * t53 + qJD(3) * t59 - qJD(4) * t175 + qJD(5) * t64 + t1004, t987 + t14 * qJD(2) + t18 * qJD(3) + (-t1020 * t448 - t648 * t445) * qJD(4) + t191 * qJD(5), t986 + t4 * qJD(2) + t6 * qJD(3) + (t1020 * t161 + t160 * t648) * qJD(4) + t21 * qJD(5) + t185 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t54, t104, t105, t475, qJD(2) * t72 + qJD(3) * t78 + qJD(4) * t62 - qJD(5) * t167 + t1002, qJD(2) * t71 + qJD(3) * t77 + qJD(4) * t64 + qJD(5) * t166 + t1003, qJD(2) * t15 + qJD(3) * t19 + qJD(4) * t191 - t1012 * t445 - t1008, qJD(2) * t8 + qJD(3) * t10 + qJD(4) * t21 - t1012 * t153 + t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1093, qJD(2) * t32 + qJD(3) * t34 + qJD(4) * t185 + t1006; 0, 0, 0, -t831, -t863, 0, 0, 0, t851, t850, -t832, t870, 0, 0, 0, qJD(3) * t507 - t896, -t895, t299, t336, t265, t264, t395, qJD(3) * t170 + qJD(4) * t189 - t882, qJD(3) * t173 + qJD(4) * t187 - t881, t85, t47, t137, t136, -t319, qJD(3) * t66 - qJD(4) * t51 - qJD(5) * t69 - t985, qJD(3) * t68 - qJD(4) * t50 - qJD(5) * t70 - t984, -qJD(3) * t11 - qJD(4) * t13 + qJD(5) * t16 + t209 - t990, qJD(3) * t2 - qJD(4) * t3 - qJD(5) * t7 - qJD(6) * t31 - t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t779, -pkin(2) * t799, t642, -t630, 0, 0, 0, t649 * t886 - t661 * t779, t649 * t885 + t637, -t341, t263, 0, 0, 0, qJD(4) * t412 + t615 * t884 + t568, qJD(4) * t413 - t610 * t884 + t569, t294 + t494, qJD(3) * t176 + qJD(4) * t731 + qJD(5) * t140 + qJD(6) * t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t688 + t866 (-t800 - t799) * pkin(2), t642, -t630, 0, 0, 0, t528 * qJD(4) + t661 * t688 + t878, t529 * qJD(4) + t637 - t692, -t341, t263, 0, 0, 0, t278 * qJD(4) + t309 * qJD(5) + t568 - t694, t279 * qJD(4) + t308 * qJD(5) + t569 - t693, t294 - t742 + t854 (t1105 * t544 + t545 * t428 + t539 * t852) * qJD(3) + t42 * qJD(4) + t48 * qJD(5) + t135 * qJD(6) + t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, -t434, t410, t409, -t865, qJD(3) * t528 - t647 * t885 - t720, qJD(3) * t529 + t647 * t886 - t721, -t180, t131, t225, t226, -t865, t278 * qJD(3) - qJD(4) * t464 + t355 * qJD(5) + t740, t279 * qJD(3) + t1086 + t739, -t704 + t911, t42 * qJD(3) + (t1020 * t1104 - t375 * t648) * qJD(4) + t96 * qJD(5) + t321 + t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, t131, t225, t226, -t865, qJD(3) * t309 + qJD(4) * t355 - qJD(5) * t464 - t723, qJD(3) * t308 + t1086 - t724, -t705 + t910, qJD(3) * t48 + qJD(4) * t96 - t1012 * t375 - t748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, qJD(3) * t135 + t322 + t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t832, t870, 0, 0, 0, -qJD(2) * t507 + t836, t837, t299, t336, t265, t264, t395, -qJD(2) * t170 + qJD(4) * t195 - t880, -qJD(2) * t173 + qJD(4) * t193 - t879, t85, t47, t137, t136, -t319, -qJD(2) * t66 - qJD(4) * t57 - qJD(5) * t75 - t978, -qJD(2) * t68 - qJD(4) * t56 - qJD(5) * t76 - t977, qJD(2) * t11 - qJD(4) * t17 + qJD(5) * t20 + t209 - t988, -qJD(2) * t2 - qJD(4) * t5 - qJD(5) * t9 - qJD(6) * t33 - t989; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t778 - t866, pkin(2) * t800, t642, -t630, 0, 0, 0, -t526 * qJD(4) + t661 * t778 - t878, -t527 * qJD(4) + t692, -t341, t263, 0, 0, 0, -t276 * qJD(4) - t306 * qJD(5) + t694, -t277 * qJD(4) - t307 * qJD(5) + t693, t742 + t854, -qJD(4) * t41 + qJD(5) * t49 - qJD(6) * t134 - t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t642, -t630, 0, 0, 0, -pkin(3) * t886, -pkin(3) * t885, -t341, t263, 0, 0, 0, qJD(4) * t453 + t615 * t883, qJD(4) * t454 - t610 * t883, t494, qJD(4) * t730 + qJD(5) * t165 + qJD(6) * t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, -t434, t410, t409, -t865, -pkin(9) * t885 - t689, pkin(9) * t886 - t690, -t180, t131, t225, t226, -t865, -qJD(4) * t511 + t438 * qJD(5) + t699, t1087 - t698, -t702 + t911 (t1020 * t1105 - t428 * t648) * qJD(4) + t155 * qJD(5) + t321 + t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, t131, t225, t226, -t865, qJD(4) * t438 - qJD(5) * t511 - t687, t1087 - t686, -t703 + t910, qJD(4) * t155 - t1012 * t428 - t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t322 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1090, -t710 - t867, -t471 * t860 - t658 * t832, t468 * t860 - t661 * t832, t475, -qJD(2) * t189 - qJD(3) * t195 - t900, -qJD(2) * t187 - qJD(3) * t193 - t901, -t83, -t54, t168, t169, t475, qJD(2) * t51 + qJD(3) * t57 + qJD(5) * t61 - t1005, qJD(2) * t50 + qJD(3) * t56 + qJD(5) * t63 - t1004, qJD(2) * t13 + qJD(3) * t17 - qJD(5) * t192 - t987, qJD(2) * t3 + qJD(3) * t5 + qJD(5) * t22 + qJD(6) * t186 - t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t434, -t461, t868, t865, qJD(3) * t526 + t720, qJD(3) * t527 + t721, t180, -t131, t296, t295, t865, qJD(3) * t276 + qJD(5) * t452 - t740, qJD(3) * t277 - t739, t344 + t704, qJD(3) * t41 + qJD(5) * t97 + t323 - t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t434, -t461, t868, t865, t689, t690, t180, -t131, t296, t295, t865, qJD(5) * t506 - t699, t698, t344 + t702, qJD(5) * t156 + t323 - t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t849, -t660 * t1013, 0, t570 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t657 * t796 + t697, -t660 * t796 + t941, t1091, -pkin(5) * t849 - t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t54, t168, t169, t475, qJD(2) * t69 + qJD(3) * t75 - qJD(4) * t61 - t1002, qJD(2) * t70 + qJD(3) * t76 - qJD(4) * t63 - t1003, -qJD(2) * t16 - qJD(3) * t20 + qJD(4) * t192 + t1008, qJD(2) * t7 + qJD(3) * t9 - qJD(4) * t22 - t1011 * t448 - t1007; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t131, t296, t295, t865, qJD(3) * t306 - qJD(4) * t452 + t723, qJD(3) * t307 + t724, -t345 + t705, -qJD(3) * t49 - qJD(4) * t97 - t591 + t748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t131, t296, t295, t865, -qJD(4) * t506 + t687, t686, -t345 + t703, -qJD(4) * t156 - t591 + t707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014 * t657 - t697, t1014 * t660 - t941, -t1091, t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1093, qJD(2) * t31 + qJD(3) * t33 - qJD(4) * t186 + t1012 * t448 - t1006; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, qJD(3) * t134 - t741 + t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t700 + t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
