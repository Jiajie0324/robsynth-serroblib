% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR14_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:36:57
% EndTime: 2019-03-09 11:37:17
% DurationCPUTime: 8.27s
% Computational Cost: add. (9292->600), mult. (23579->776), div. (0->0), fcn. (17009->8), ass. (0->292)
t218 = cos(qJ(2));
t212 = cos(pkin(6));
t317 = qJD(1) * t212;
t302 = pkin(1) * t317;
t194 = t218 * t302;
t383 = qJD(3) - t194;
t217 = cos(qJ(4));
t310 = qJD(4) * t217;
t214 = sin(qJ(4));
t312 = qJD(4) * t214;
t400 = pkin(4) * t310 + qJ(5) * t312 + t383;
t374 = pkin(3) + pkin(8);
t276 = -qJ(5) * t214 - t374;
t211 = sin(pkin(6));
t215 = sin(qJ(2));
t316 = qJD(1) * t215;
t295 = t211 * t316;
t373 = pkin(4) + pkin(10);
t399 = (pkin(10) * qJD(4) - qJD(5)) * t217 - (-t217 * t373 + t276) * t295 + t400;
t220 = -pkin(2) - pkin(9);
t364 = pkin(5) - t220;
t285 = qJD(4) * t364;
t318 = qJD(1) * t211;
t196 = pkin(2) * t295;
t263 = pkin(9) * t215 - qJ(3) * t218;
t120 = t263 * t318 + t196;
t294 = t218 * t318;
t152 = pkin(8) * t294 + t215 * t302;
t122 = pkin(3) * t294 + t152;
t59 = -t214 * t120 + t217 * t122;
t398 = t214 * t285 + (pkin(5) * t214 * t215 - t218 * t373) * t318 - t59;
t315 = qJD(2) * t215;
t293 = t211 * t315;
t273 = qJD(1) * t293;
t181 = pkin(2) * t273;
t197 = qJD(2) + t317;
t227 = t197 * t220 + t295 * t374 + t383;
t313 = qJD(3) * t215;
t228 = (qJD(2) * t263 - t313) * t211;
t397 = qJD(1) * t228 + qJD(4) * t227 + t181;
t137 = t197 * t214 + t217 * t294;
t184 = qJD(4) + t295;
t243 = t184 * t137;
t83 = qJD(4) * t137 - t214 * t273;
t384 = t83 - t243;
t396 = t217 * t243;
t286 = -qJ(3) * t215 - pkin(1);
t118 = (t218 * t220 + t286) * t211;
t94 = qJD(1) * t118;
t42 = t214 * t94 - t217 * t227;
t321 = qJD(5) + t42;
t372 = pkin(1) * t215;
t202 = t212 * t372;
t324 = t211 * t218;
t123 = (t324 * t374 + t202) * qJD(2);
t100 = qJD(1) * t123;
t283 = -t217 * t100 + t397 * t214 + t94 * t310;
t43 = t214 * t227 + t217 * t94;
t253 = t184 * t43 - t283;
t284 = -t214 * t100 - t397 * t217 + t94 * t312;
t395 = t184 * t42 - t284;
t298 = t214 * t324;
t111 = -qJD(4) * t298 + t212 * t310 - t217 * t293;
t156 = t212 * t214 + t217 * t324;
t314 = qJD(2) * t218;
t176 = t214 * t294;
t84 = -qJD(4) * t176 + t197 * t310 - t217 * t273;
t394 = t184 * t111 + t211 * ((qJD(1) * t156 + t137) * t314 + t215 * t84);
t110 = qJD(4) * t156 - t214 * t293;
t139 = t197 * t217 - t176;
t157 = t212 * t217 - t298;
t393 = -t184 * t110 + t211 * ((qJD(1) * t157 + t139) * t314 - t215 * t83);
t208 = t211 ^ 2;
t304 = qJD(1) * qJD(2);
t392 = -0.2e1 * t208 * t304;
t320 = pkin(8) * t273 - qJD(2) * t194;
t106 = -t197 * qJD(3) + t320;
t71 = -pkin(3) * t273 - t106;
t223 = qJ(5) * t83 - qJD(5) * t139 + t71;
t17 = t373 * t84 + t223;
t213 = sin(qJ(6));
t216 = cos(qJ(6));
t322 = pkin(5) * t139 + t321;
t29 = -t184 * t373 + t322;
t188 = t197 * qJ(3);
t87 = t188 + t122;
t239 = -qJ(5) * t139 + t87;
t34 = t137 * t373 + t239;
t262 = t213 * t34 - t216 * t29;
t292 = t211 * t314;
t259 = t373 * t292;
t9 = -pkin(5) * t83 - qJD(1) * t259 + t283;
t1 = -qJD(6) * t262 + t216 * t17 + t213 * t9;
t136 = qJD(6) + t139;
t391 = t136 * t262 + t1;
t6 = t213 * t29 + t216 * t34;
t2 = -qJD(6) * t6 - t213 * t17 + t216 * t9;
t390 = t136 * t6 + t2;
t287 = t218 * t304;
t187 = t211 * t287;
t261 = pkin(4) * t187;
t18 = -t261 + t283;
t37 = -t184 * qJ(5) - t43;
t389 = -t184 * t37 - t18;
t76 = -t216 * t137 + t184 * t213;
t282 = t136 * t76;
t308 = qJD(6) * t216;
t309 = qJD(6) * t213;
t38 = -t137 * t308 + t184 * t309 - t216 * t187 - t213 * t84;
t388 = t38 - t282;
t78 = t137 * t213 + t184 * t216;
t341 = t78 * t136;
t39 = qJD(6) * t78 + t187 * t213 - t216 * t84;
t387 = -t39 + t341;
t62 = t83 * t157;
t386 = -t110 * t139 - t62;
t244 = t184 * t214;
t75 = t217 * t83;
t385 = -t139 * t244 - t75;
t334 = t139 * t184;
t232 = t84 - t334;
t368 = t137 * pkin(5);
t30 = -t37 - t368;
t382 = t136 * t30 + t373 * t83;
t191 = pkin(2) * t293;
t89 = t191 + t228;
t325 = t211 * t215;
t199 = pkin(8) * t325;
t371 = pkin(1) * t218;
t296 = -pkin(2) - t371;
t99 = pkin(3) * t325 + t199 + (-pkin(9) + t296) * t212;
t240 = t118 * t312 - t214 * t123 - t217 * t89 - t99 * t310;
t23 = -t211 * (qJ(5) * t314 + qJD(5) * t215) + t240;
t168 = t214 * t187;
t375 = t184 ^ 2;
t381 = t197 * t139 + t217 * t375 + t168;
t323 = t215 * t217;
t380 = (-t137 * t218 + t184 * t323) * t318 + t184 * t310 + t168;
t268 = -t213 * t262 - t216 * t6;
t377 = -qJD(6) * t268 + t1 * t213 + t2 * t216;
t376 = t139 ^ 2;
t257 = qJ(5) * t187;
t272 = t184 * qJD(5) - t284;
t10 = -t257 - t272;
t8 = -pkin(5) * t84 - t10;
t367 = t213 * t8;
t366 = t216 * t8;
t365 = t78 * t76;
t173 = t214 * pkin(4) - qJ(5) * t217 + qJ(3);
t160 = pkin(10) * t214 + t173;
t175 = t364 * t217;
t93 = t160 * t216 + t175 * t213;
t363 = qJD(6) * t93 + t399 * t213 + t398 * t216;
t92 = -t160 * t213 + t175 * t216;
t362 = -qJD(6) * t92 + t398 * t213 - t399 * t216;
t44 = pkin(4) * t137 + t239;
t361 = t139 * t44;
t246 = t184 * t76;
t357 = t184 * t78;
t356 = t213 * t76;
t355 = t213 * t78;
t354 = t213 * t83;
t353 = t214 * t38;
t352 = t214 * t39;
t349 = t216 * t38;
t348 = t216 * t76;
t347 = t216 * t78;
t73 = t216 * t83;
t345 = t220 * t83;
t344 = t220 * t84;
t343 = t30 * t184;
t342 = t39 * t213;
t57 = t217 * t118 + t214 * t99;
t340 = -qJD(5) * t217 - (-pkin(4) * t217 + t276) * t295 + t400;
t60 = t217 * t120 + t214 * t122;
t339 = -t217 * t285 - (pkin(5) * t323 + qJ(5) * t218) * t318 - t60;
t337 = t137 * qJ(5);
t336 = t137 * t139;
t335 = t137 * t220;
t333 = t139 * t220;
t159 = pkin(8) * t324 + t202;
t154 = t159 * qJD(2);
t143 = qJD(1) * t154;
t332 = t143 * t215;
t331 = t152 * t197;
t330 = t154 * t215;
t327 = t184 * t220;
t326 = t208 * qJD(1) ^ 2;
t209 = t215 ^ 2;
t319 = -t218 ^ 2 + t209;
t311 = qJD(4) * t216;
t307 = qJD(6) * t373;
t277 = t374 * t325;
t306 = qJD(1) * t277 + t383;
t151 = pkin(8) * t295 - t194;
t305 = qJD(3) + t151;
t303 = t212 * t371;
t301 = t214 * t327;
t300 = t217 * t327;
t299 = t218 * t326;
t275 = t214 * t295;
t297 = t217 * t187 + (-t275 - t312) * t184;
t145 = -t212 * qJ(3) - t159;
t291 = t220 * t314;
t289 = -t137 ^ 2 + t376;
t56 = -t214 * t118 + t217 * t99;
t280 = t136 * t213;
t117 = pkin(3) * t324 - t145;
t274 = t184 * t294;
t271 = pkin(1) * t392;
t269 = t213 * t6 - t216 * t262;
t133 = (t213 * t218 + t216 * t323) * t318;
t267 = t216 * t310 + t133;
t134 = (-t213 * t323 + t216 * t218) * t318;
t266 = t213 * t310 - t134;
t36 = t157 * pkin(5) - t325 * t373 - t56;
t238 = -qJ(5) * t157 + t117;
t46 = t156 * t373 + t238;
t13 = -t213 * t46 + t216 * t36;
t14 = t213 * t36 + t216 * t46;
t260 = t111 * t137 + t156 * t84;
t258 = t143 * t212 + t154 * t197;
t28 = -t118 * t310 + t123 * t217 - t214 * t89 - t99 * t312;
t256 = t208 * t215 * t287;
t195 = qJD(2) * t303;
t153 = -pkin(8) * t293 + t195;
t51 = -qJ(5) * t325 - t57;
t254 = t137 * t197 - t297;
t128 = -t197 * t294 + t187;
t252 = -t136 * t280 - t73;
t251 = t215 * t44 + t291;
t250 = t215 * t87 + t291;
t249 = t136 * t308 - t354;
t248 = -t136 * t309 - t73;
t113 = t156 * t213 + t216 * t325;
t112 = -t156 * t216 + t213 * t325;
t242 = qJD(2) * t211 * (t197 + t317);
t146 = (-pkin(2) * t218 + t286) * t211;
t235 = -t136 ^ 2 * t216 + t354;
t205 = t212 * qJD(3);
t98 = -qJD(2) * t277 + t195 + t205;
t234 = t139 * t294 - t297;
t233 = (-qJ(3) * t314 - t313) * t211;
t231 = t232 * t214;
t230 = t110 * t137 - t111 * t139 + t156 * t83 - t157 * t84;
t229 = t84 * t214 + t396;
t226 = qJ(5) * t110 - qJD(5) * t157 + t98;
t222 = (-t84 - t334) * t217 + (t83 + t243) * t214;
t177 = t215 * t299;
t174 = t364 * t214;
t165 = -0.2e1 * t256;
t164 = 0.2e1 * t256;
t158 = -t199 + t303;
t155 = t319 * t326;
t150 = -qJ(3) * t294 + t196;
t147 = t212 * t296 + t199;
t141 = t319 * t392;
t135 = -t153 - t205;
t131 = t197 * t216 - t213 * t275;
t130 = -t197 * t213 - t216 * t275;
t129 = qJD(1) * t146;
t127 = (qJD(2) - t197) * t295;
t125 = t191 + t233;
t119 = -t188 - t152;
t116 = t218 * t242;
t115 = t215 * t242;
t114 = -pkin(2) * t197 + t305;
t107 = (t184 * t211 + t208 * t316) * t314;
t103 = qJD(1) * t233 + t181;
t96 = t129 * t295;
t67 = pkin(4) * t139 + t337;
t58 = pkin(4) * t156 + t238;
t55 = -pkin(4) * t294 - t59;
t54 = -qJ(5) * t294 - t60;
t53 = t139 * t373 + t337;
t52 = -pkin(4) * t325 - t56;
t50 = -qJD(6) * t112 + t111 * t213 + t216 * t292;
t49 = qJD(6) * t113 - t111 * t216 + t213 * t292;
t40 = -pkin(5) * t156 - t51;
t35 = -pkin(4) * t184 + t321;
t33 = t43 - t368;
t31 = pkin(4) * t111 + t226;
t26 = pkin(4) * t84 + t223;
t25 = t111 * t373 + t226;
t24 = -pkin(4) * t292 - t28;
t16 = -pkin(5) * t111 - t23;
t15 = -pkin(5) * t110 - t259 - t28;
t12 = t213 * t33 + t216 * t53;
t11 = -t213 * t53 + t216 * t33;
t4 = -qJD(6) * t14 + t216 * t15 - t213 * t25;
t3 = qJD(6) * t13 + t213 * t15 + t216 * t25;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, t141, t116, t165, -t115, 0, t215 * t271 - t258, -t153 * t197 + t212 * t320 + t218 * t271 (-t320 * t218 + t332 + (t151 * t218 - t152 * t215) * qJD(2) + (t153 * t218 + t330 + (-t158 * t218 - t159 * t215) * qJD(2)) * qJD(1)) * t211, -t143 * t158 + t151 * t154 + t152 * t153 - t159 * t320, 0, -t116, t115, t164, t141, t165 (-t106 * t218 + t332 + (t114 * t218 + t119 * t215) * qJD(2) + (-t135 * t218 + t330 + (t145 * t215 + t147 * t218) * qJD(2)) * qJD(1)) * t211 (-t129 * t315 + t103 * t218 + (t125 * t218 - t146 * t315) * qJD(1)) * t211 + t258, -t106 * t212 - t135 * t197 + (-t129 * t314 - t103 * t215 + (-t125 * t215 - t146 * t314) * qJD(1)) * t211, t103 * t146 + t106 * t145 + t114 * t154 + t119 * t135 + t125 * t129 + t143 * t147, t386, t230, t393, t260, -t394, t107, t111 * t87 + t117 * t84 + t137 * t98 + t156 * t71 + t184 * t28 + (-t283 * t215 + (qJD(1) * t56 - t42) * t314) * t211, -t110 * t87 - t117 * t83 + t139 * t98 + t157 * t71 + t184 * t240 + (t284 * t215 + (-qJD(1) * t57 - t43) * t314) * t211, -t110 * t42 - t111 * t43 + t137 * t240 - t139 * t28 + t156 * t284 + t157 * t283 + t56 * t83 - t57 * t84, t117 * t71 - t240 * t43 - t28 * t42 - t283 * t56 - t284 * t57 + t87 * t98, t107, -t393, t394, t386, t230, t260, t10 * t156 - t110 * t35 + t111 * t37 + t137 * t23 + t139 * t24 + t157 * t18 + t51 * t84 - t52 * t83, -t111 * t44 - t137 * t31 - t156 * t26 + t184 * t24 - t58 * t84 + (t18 * t215 + (qJD(1) * t52 + t35) * t314) * t211, t110 * t44 - t139 * t31 - t157 * t26 - t184 * t23 + t58 * t83 + (-t10 * t215 + (-qJD(1) * t51 - t37) * t314) * t211, t10 * t51 + t18 * t52 + t23 * t37 + t24 * t35 + t26 * t58 + t31 * t44, -t113 * t38 + t50 * t78, t112 * t38 - t113 * t39 - t49 * t78 - t50 * t76, -t110 * t78 - t113 * t83 + t136 * t50 - t157 * t38, t112 * t39 + t49 * t76, t110 * t76 + t112 * t83 - t136 * t49 - t157 * t39, -t110 * t136 - t62, t110 * t262 + t112 * t8 - t13 * t83 + t136 * t4 + t157 * t2 + t16 * t76 + t30 * t49 + t39 * t40, -t1 * t157 + t110 * t6 + t113 * t8 - t136 * t3 + t14 * t83 + t16 * t78 + t30 * t50 - t38 * t40, -t1 * t112 - t113 * t2 + t13 * t38 - t14 * t39 + t262 * t50 - t3 * t76 - t4 * t78 - t49 * t6, t1 * t14 + t13 * t2 + t16 * t30 - t262 * t4 + t3 * t6 + t40 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, t155, t128, t177, -t127, 0, -pkin(8) * t187 + t331 + (-t212 * t304 + t326) * t372, pkin(1) * t299 - t151 * t197 + t320, 0, 0, 0, -t128, t127, -t177, t155, t177 ((-qJ(3) * qJD(2) - t119 - t152) * t215 + (-pkin(2) * qJD(2) - t114 + t305) * t218) * t318, -t331 + t96 + (-t150 * t324 + t154) * qJD(1), t305 * t197 + (t129 * t218 + t150 * t215) * t318 - t106, -pkin(2) * t143 - qJ(3) * t106 - t114 * t152 - t119 * t305 - t129 * t150, t385, t222, -t234, t229, -t380, -t274, qJ(3) * t84 - t184 * t59 + t214 * t71 + t306 * t137 + (t217 * t87 - t301) * qJD(4) + (t217 * t250 + t218 * t42) * t318, -qJ(3) * t83 + t184 * t60 + t217 * t71 + t306 * t139 + (-t214 * t87 - t300) * qJD(4) + (-t214 * t250 + t218 * t43) * t318, t137 * t60 + t139 * t59 + (-t43 * t295 + t345 + t283 + (-t43 - t335) * qJD(4)) * t217 + (-t42 * t295 - t344 + t284 + (-t42 + t333) * qJD(4)) * t214, qJ(3) * t71 + t42 * t59 - t43 * t60 + t306 * t87 + (-t284 * t214 - t283 * t217 + (t214 * t42 + t217 * t43) * qJD(4)) * t220, -t274, t234, t380, t385, t222, t229, -t137 * t54 - t139 * t55 + (t37 * t295 + t345 + t18 + (t37 - t335) * qJD(4)) * t217 + (-t35 * t295 - t344 + t10 + (-t35 + t333) * qJD(4)) * t214, -t173 * t84 - t184 * t55 - t214 * t26 - t340 * t137 + (-t217 * t44 + t301) * qJD(4) + (-t217 * t251 - t218 * t35) * t318, t173 * t83 + t184 * t54 - t217 * t26 - t340 * t139 + (t214 * t44 + t300) * qJD(4) + (t214 * t251 + t218 * t37) * t318, t173 * t26 - t35 * t55 - t37 * t54 + t340 * t44 + (-t10 * t214 - t18 * t217 + (t214 * t35 - t217 * t37) * qJD(4)) * t220, -t213 * t353 + (t214 * t308 + t266) * t78, t133 * t78 + t134 * t76 + (t347 - t356) * t310 + (-t342 - t349 + (-t348 - t355) * qJD(6)) * t214, -t217 * t38 + t266 * t136 + (t249 - t357) * t214, -t216 * t352 + (t214 * t309 - t267) * t76, -t217 * t39 + t267 * t136 + (t246 + t248) * t214, -t136 * t244 - t75, -t133 * t30 - t174 * t39 - t83 * t92 + t339 * t76 + (-t30 * t311 + t2) * t217 - t363 * t136 + (t184 * t262 + t30 * t309 - t366) * t214, -t134 * t30 + t174 * t38 + t83 * t93 + t339 * t78 + (qJD(4) * t213 * t30 - t1) * t217 + t362 * t136 + (t184 * t6 + t30 * t308 + t367) * t214, t133 * t6 - t134 * t262 + t38 * t92 - t39 * t93 + t363 * t78 + t362 * t76 - t268 * t310 + (-qJD(6) * t269 + t1 * t216 - t2 * t213) * t214, t1 * t93 - t174 * t8 + t2 * t92 + t262 * t363 + t30 * t339 - t362 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t177, -t197 ^ 2 - t209 * t326, t119 * t197 + t143 + t96, 0, 0, 0, 0, 0, 0, -t254, -t381, t384 * t217 - t231, -t197 * t87 + t395 * t214 + t253 * t217, 0, 0, 0, 0, 0, 0, -t231 + t75 - t396, t254, t381, -t197 * t44 + t389 * t217 + (t184 * t35 - t10) * t214, 0, 0, 0, 0, 0, 0, t352 + (t214 * t311 - t130) * t136 + (t246 - t248) * t217, -t353 + (-t213 * t312 + t131) * t136 + (t249 + t357) * t217, t130 * t78 + t131 * t76 + (-t347 - t356) * t312 + (t342 - t349 + (t348 - t355) * qJD(6)) * t217, t130 * t262 - t131 * t6 + (qJD(4) * t269 + t8) * t214 + (t343 - t377) * t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t289, -t384, -t336, -t232, t187, -t139 * t87 + t253, t137 * t87 - t395, 0, 0, t187, t384, t232, t336, t289, -t336, pkin(4) * t83 - qJ(5) * t84 + (-t37 - t43) * t139 + (t35 - t321) * t137, t137 * t67 - t253 - 0.2e1 * t261 + t361, -t137 * t44 + t139 * t67 + t184 * t321 + 0.2e1 * t257 + t272, -pkin(4) * t18 - qJ(5) * t10 - t321 * t37 - t35 * t43 - t44 * t67, -t280 * t78 - t349 (-t39 - t341) * t216 + (t38 + t282) * t213, t78 * t137 + t252, t216 * t282 + t342, -t76 * t137 + t235, t136 * t137, qJ(5) * t39 - t137 * t262 + t367 + t322 * t76 + (t213 * t307 - t11) * t136 + t382 * t216, -qJ(5) * t38 - t137 * t6 + t366 + t322 * t78 + (t216 * t307 + t12) * t136 - t382 * t213, t11 * t78 + t12 * t76 + (-t139 * t6 - t373 * t38 - t2 + (t373 * t76 - t6) * qJD(6)) * t216 + (-t139 * t262 + t373 * t39 - t1 + (-t373 * t78 - t262) * qJD(6)) * t213, qJ(5) * t8 + t11 * t262 - t12 * t6 + t322 * t30 - t373 * t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, t187 - t336, -t375 - t376, t361 - t389, 0, 0, 0, 0, 0, 0, t252 - t246, t235 - t357, t213 * t387 + t216 * t388, t213 * t391 + t216 * t390 - t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, -t76 ^ 2 + t78 ^ 2, -t388, -t365, t387, -t83, -t30 * t78 + t390, t30 * t76 - t391, 0, 0;];
tauc_reg  = t5;
