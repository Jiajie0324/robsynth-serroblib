% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR14_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:36:56
% EndTime: 2019-03-09 11:37:10
% DurationCPUTime: 4.86s
% Computational Cost: add. (4588->469), mult. (11899->634), div. (0->0), fcn. (8626->8), ass. (0->230)
t181 = sin(qJ(4));
t185 = cos(qJ(2));
t178 = sin(pkin(6));
t277 = qJD(1) * t178;
t255 = t185 * t277;
t141 = t181 * t255;
t179 = cos(pkin(6));
t276 = qJD(1) * t179;
t164 = qJD(2) + t276;
t184 = cos(qJ(4));
t115 = t164 * t184 - t141;
t112 = qJD(6) + t115;
t187 = -pkin(2) - pkin(9);
t182 = sin(qJ(2));
t275 = qJD(1) * t182;
t256 = t178 * t275;
t264 = pkin(1) * t276;
t279 = -pkin(8) * t256 + t185 * t264;
t266 = qJD(3) - t279;
t267 = pkin(3) * t256 + t266;
t51 = t187 * t164 + t267;
t247 = -qJ(3) * t182 - pkin(1);
t98 = (t187 * t185 + t247) * t178;
t77 = qJD(1) * t98;
t30 = t181 * t77 - t184 * t51;
t281 = qJD(5) + t30;
t113 = t164 * t181 + t184 * t255;
t265 = qJD(1) * qJD(2);
t248 = t178 * t265;
t153 = t185 * t248;
t136 = t184 * t153;
t150 = qJD(4) + t256;
t202 = t150 * t181;
t317 = t164 * t113 + t150 * t202 - t136;
t221 = pkin(4) * t153;
t270 = qJD(4) * t184;
t271 = qJD(4) * t181;
t234 = t182 * t248;
t145 = pkin(2) * t234;
t225 = pkin(9) * t182 - qJ(3) * t185;
t272 = qJD(3) * t182;
t192 = (qJD(2) * t225 - t272) * t178;
t54 = qJD(1) * t192 + t145;
t263 = pkin(1) * qJD(2) * t179;
t236 = qJD(1) * t263;
t117 = pkin(8) * t153 + t182 * t236;
t83 = pkin(3) * t153 + t117;
t242 = t181 * t54 - t184 * t83 + t77 * t270 + t51 * t271;
t12 = -t221 + t242;
t31 = t181 * t51 + t184 * t77;
t25 = -qJ(5) * t150 - t31;
t316 = -t150 * t25 - t12;
t289 = t115 * t150;
t68 = -qJD(4) * t141 + t164 * t270 - t184 * t234;
t315 = -t68 + t289;
t307 = pkin(1) * t182;
t169 = t179 * t307;
t285 = t178 * t185;
t314 = pkin(8) * t285 + t169;
t313 = pkin(4) * t270 + qJ(5) * t271 + t266;
t282 = t115 * pkin(5) + t281;
t306 = pkin(5) * t113;
t18 = -t25 - t306;
t308 = pkin(4) + pkin(10);
t67 = qJD(4) * t113 - t181 * t234;
t312 = t308 * t67 + (t18 - t31 + t306) * t112;
t180 = sin(qJ(6));
t183 = cos(qJ(6));
t62 = t113 * t180 + t150 * t183;
t27 = qJD(6) * t62 + t153 * t180 - t183 * t68;
t309 = pkin(3) + pkin(8);
t103 = (t309 * t285 + t169) * qJD(2);
t274 = qJD(2) * t182;
t254 = t178 * t274;
t158 = pkin(2) * t254;
t74 = t158 + t192;
t286 = t178 * t182;
t166 = pkin(8) * t286;
t257 = -pkin(1) * t185 - pkin(2);
t82 = pkin(3) * t286 + t166 + (-pkin(9) + t257) * t179;
t207 = -t181 * t103 - t184 * t74 - t82 * t270 + t271 * t98;
t273 = qJD(2) * t185;
t13 = -t178 * (qJ(5) * t273 + qJD(5) * t182) + t207;
t251 = t150 * t270;
t283 = t182 * t184;
t261 = t150 * t283;
t311 = (t181 * t273 + t261) * t277 + t164 * t115 + t251;
t310 = t115 ^ 2;
t305 = pkin(5) - t187;
t304 = t181 * t82 + t184 * t98;
t163 = pkin(2) * t256;
t100 = t225 * t277 + t163;
t125 = pkin(8) * t255 + t182 * t264;
t102 = pkin(3) * t255 + t125;
t303 = t184 * t100 + t181 * t102;
t60 = -t183 * t113 + t150 * t180;
t302 = t112 * t60;
t154 = t164 * qJ(3);
t72 = t154 + t102;
t198 = -t115 * qJ(5) + t72;
t32 = pkin(4) * t113 + t198;
t301 = t115 * t32;
t206 = t150 * t60;
t299 = t150 * t62;
t298 = t180 * t67;
t268 = qJD(6) * t183;
t269 = qJD(6) * t180;
t26 = t113 * t268 - t150 * t269 + t183 * t153 + t180 * t68;
t297 = t181 * t26;
t57 = t183 * t67;
t296 = t26 * t183;
t295 = t62 * t112;
t246 = -qJ(5) * t181 - pkin(3);
t294 = -qJD(5) * t184 - (-pkin(4) * t184 + t246) * t256 + t313;
t244 = qJD(4) * t305;
t293 = -t184 * t244 - (pkin(5) * t283 + qJ(5) * t185) * t277 - t303;
t292 = t113 * qJ(5);
t291 = t113 * t150;
t290 = t115 * t113;
t288 = t150 * t187;
t175 = t178 ^ 2;
t287 = t175 * qJD(1) ^ 2;
t284 = t181 * t182;
t280 = pkin(8) * t234 - t185 * t236;
t176 = t182 ^ 2;
t278 = -t185 ^ 2 + t176;
t262 = t181 * t288;
t260 = t184 * t288;
t259 = t185 * t287;
t258 = t181 * t285;
t89 = -t164 * qJD(3) + t280;
t118 = -t179 * qJ(3) - t314;
t253 = t178 * t273;
t252 = t187 * t273;
t249 = t175 * t265;
t245 = -t181 * t98 + t184 * t82;
t243 = -t181 * t83 - t184 * t54 - t51 * t270 + t77 * t271;
t241 = -t181 * t100 + t184 * t102;
t239 = t112 * t180;
t238 = t164 + t276;
t237 = 0.2e1 * t249;
t235 = t182 * t259;
t97 = pkin(3) * t285 - t118;
t233 = t150 * qJD(5) - t243;
t232 = -0.2e1 * pkin(1) * t249;
t138 = t181 * pkin(4) - qJ(5) * t184 + qJ(3);
t140 = t305 * t184;
t231 = -qJD(6) * t140 - (pkin(10) * qJD(4) - qJD(5)) * t184 + (-t308 * t184 + t246) * t256 - t313;
t129 = pkin(10) * t181 + t138;
t230 = qJD(6) * t129 + t181 * t244 + (pkin(5) * t284 - t308 * t185) * t277 - t241;
t229 = t125 * t164 - t117;
t109 = (t180 * t185 + t183 * t283) * t277;
t228 = t183 * t270 + t109;
t110 = (-t180 * t283 + t183 * t185) * t277;
t227 = t180 * t270 - t110;
t55 = -pkin(3) * t234 - t89;
t189 = qJ(5) * t67 - qJD(5) * t115 + t55;
t11 = t308 * t68 + t189;
t220 = t308 * t253;
t7 = -t67 * pkin(5) - qJD(1) * t220 + t242;
t226 = t183 * t11 + t180 * t7;
t17 = -t308 * t150 + t282;
t22 = t308 * t113 + t198;
t3 = t17 * t183 - t180 * t22;
t4 = t17 * t180 + t183 * t22;
t128 = t179 * t184 - t258;
t24 = t128 * pkin(5) - t308 * t286 - t245;
t127 = t179 * t181 + t184 * t285;
t197 = -t128 * qJ(5) + t97;
t34 = t308 * t127 + t197;
t223 = -t180 * t34 + t183 * t24;
t222 = t180 * t24 + t183 * t34;
t126 = t314 * qJD(2);
t219 = t117 * t179 + t126 * t164;
t218 = t184 * t103 - t181 * t74 - t98 * t270 - t82 * t271;
t217 = qJ(5) * t153;
t37 = -qJ(5) * t286 - t304;
t162 = t185 * t263;
t216 = -pkin(8) * t254 + t162;
t214 = -t164 * t255 + t153;
t213 = t150 * t31 - t242;
t212 = -t112 * t239 - t57;
t211 = t182 * t32 + t252;
t210 = t182 * t72 + t252;
t209 = t112 * t268 - t298;
t208 = -t112 * t269 - t57;
t95 = t127 * t180 + t183 * t286;
t94 = -t127 * t183 + t180 * t286;
t8 = -t217 - t233;
t6 = -pkin(5) * t68 - t8;
t201 = t6 + (t112 * t308 + t292) * t112;
t119 = (-pkin(2) * t185 + t247) * t178;
t194 = -t112 ^ 2 * t183 + t298;
t172 = t179 * qJD(3);
t81 = -t309 * t254 + t162 + t172;
t193 = (-qJ(3) * t273 - t272) * t178;
t2 = -qJD(6) * t4 - t180 * t11 + t183 * t7;
t92 = qJD(4) * t127 - t181 * t254;
t191 = qJ(5) * t92 - qJD(5) * t128 + t81;
t190 = t291 - t67;
t139 = t305 * t181;
t123 = -qJ(3) * t255 + t163;
t120 = t179 * t257 + t166;
t111 = -t172 - t216;
t107 = qJD(1) * t119;
t105 = t158 + t193;
t99 = -t154 - t125;
t96 = -pkin(2) * t164 + t266;
t93 = -qJD(4) * t258 + t179 * t270 - t184 * t254;
t86 = qJD(1) * t193 + t145;
t79 = t107 * t256;
t59 = t67 * t184;
t50 = pkin(4) * t115 + t292;
t44 = t67 * t128;
t42 = pkin(4) * t127 + t197;
t41 = -pkin(4) * t255 - t241;
t40 = -qJ(5) * t255 - t303;
t38 = -pkin(4) * t286 - t245;
t36 = -qJD(6) * t94 + t93 * t180 + t183 * t253;
t35 = qJD(6) * t95 + t180 * t253 - t93 * t183;
t28 = -pkin(5) * t127 - t37;
t23 = -pkin(4) * t150 + t281;
t19 = pkin(4) * t93 + t191;
t16 = pkin(4) * t68 + t189;
t15 = t308 * t93 + t191;
t14 = -pkin(4) * t253 - t218;
t10 = -pkin(5) * t93 - t13;
t9 = -t92 * pkin(5) - t218 - t220;
t1 = qJD(6) * t3 + t226;
t5 = [0, 0, 0, t182 * t185 * t237, -t278 * t237, t238 * t253, -t238 * t254, 0, t182 * t232 - t219, -t164 * t216 + t179 * t280 + t185 * t232 (t117 * t182 - t185 * t89 + (t182 * t99 + t185 * t96) * qJD(2) + (-t111 * t185 + t126 * t182 + (t118 * t182 + t120 * t185) * qJD(2)) * qJD(1)) * t178 (-t107 * t274 + t185 * t86 + (t105 * t185 - t119 * t274) * qJD(1)) * t178 + t219, -t111 * t164 - t89 * t179 + (-t107 * t273 - t182 * t86 + (-t105 * t182 - t119 * t273) * qJD(1)) * t178, t105 * t107 + t111 * t99 + t117 * t120 + t118 * t89 + t119 * t86 + t126 * t96, -t115 * t92 - t44, t113 * t92 - t115 * t93 + t127 * t67 - t128 * t68, -t92 * t150 + (-t182 * t67 + (qJD(1) * t128 + t115) * t273) * t178, -t93 * t150 + (-t182 * t68 + (-qJD(1) * t127 - t113) * t273) * t178 (t150 * t178 + t175 * t275) * t273, t218 * t150 + t81 * t113 + t97 * t68 + t55 * t127 + t72 * t93 + (-t242 * t182 + (qJD(1) * t245 - t30) * t273) * t178, t207 * t150 + t81 * t115 - t97 * t67 + t55 * t128 - t72 * t92 + (t243 * t182 + (-t304 * qJD(1) - t31) * t273) * t178, t113 * t13 + t115 * t14 + t12 * t128 + t127 * t8 - t23 * t92 + t25 * t93 + t37 * t68 - t38 * t67, -t113 * t19 - t127 * t16 + t14 * t150 - t32 * t93 - t42 * t68 + (t12 * t182 + (qJD(1) * t38 + t23) * t273) * t178, -t115 * t19 - t128 * t16 - t13 * t150 + t32 * t92 + t42 * t67 + (-t182 * t8 + (-qJD(1) * t37 - t25) * t273) * t178, t12 * t38 + t13 * t25 + t14 * t23 + t16 * t42 + t19 * t32 + t37 * t8, t26 * t95 + t36 * t62, -t26 * t94 - t27 * t95 - t35 * t62 - t36 * t60, t112 * t36 + t128 * t26 - t62 * t92 - t67 * t95, -t112 * t35 - t128 * t27 + t60 * t92 + t67 * t94, -t112 * t92 - t44 (-qJD(6) * t222 - t180 * t15 + t183 * t9) * t112 - t223 * t67 + t2 * t128 - t3 * t92 + t10 * t60 + t28 * t27 + t6 * t94 + t18 * t35 -(qJD(6) * t223 + t183 * t15 + t180 * t9) * t112 + t222 * t67 - t1 * t128 + t4 * t92 + t10 * t62 + t28 * t26 + t6 * t95 + t18 * t36; 0, 0, 0, -t235, t278 * t287, t214 (-qJD(2) + t164) * t256, 0, t287 * t307 + t229, pkin(1) * t259 + t164 * t279 + t280 ((-qJ(3) * qJD(2) - t125 - t99) * t182 + (-pkin(2) * qJD(2) + t266 - t96) * t185) * t277, -t123 * t255 - t229 + t79, t266 * t164 + (t107 * t185 + t123 * t182) * t277 - t89, -t117 * pkin(2) - t89 * qJ(3) - t107 * t123 - t96 * t125 - t266 * t99, -t181 * t289 - t59 (-t68 - t289) * t184 + (t67 + t291) * t181, -t150 * t271 + t136 + (-t115 * t185 - t150 * t284) * t277, -t251 + (-t261 + (-qJD(2) * t181 + t113) * t185) * t277, -t150 * t255, qJ(3) * t68 + t55 * t181 - t241 * t150 + t267 * t113 + (t184 * t72 - t262) * qJD(4) + (t184 * t210 + t30 * t185) * t277, -qJ(3) * t67 + t55 * t184 + t303 * t150 + t267 * t115 + (-t181 * t72 - t260) * qJD(4) + (-t181 * t210 + t31 * t185) * t277, -t113 * t40 - t115 * t41 + (t25 * t256 + t187 * t67 + t12 + (-t113 * t187 + t25) * qJD(4)) * t184 + (-t23 * t256 - t187 * t68 + t8 + (t115 * t187 - t23) * qJD(4)) * t181, -t138 * t68 - t150 * t41 - t16 * t181 - t294 * t113 + (-t184 * t32 + t262) * qJD(4) + (-t184 * t211 - t185 * t23) * t277, t138 * t67 + t150 * t40 - t16 * t184 - t294 * t115 + (t181 * t32 + t260) * qJD(4) + (t181 * t211 + t185 * t25) * t277, t138 * t16 - t23 * t41 - t25 * t40 + t294 * t32 + (-t12 * t184 - t8 * t181 + (t181 * t23 - t184 * t25) * qJD(4)) * t187, t180 * t297 + (t181 * t268 + t227) * t62, t109 * t62 + t110 * t60 + (-t180 * t60 + t183 * t62) * t270 + (-t180 * t27 + t296 + (-t180 * t62 - t183 * t60) * qJD(6)) * t181, t184 * t26 + t227 * t112 + (t209 - t299) * t181, -t184 * t27 + t228 * t112 + (t206 + t208) * t181, -t112 * t202 - t59 -(-t129 * t180 + t140 * t183) * t67 + t2 * t184 - t139 * t27 + t293 * t60 - t228 * t18 + (t180 * t231 - t183 * t230) * t112 + (-t150 * t3 + t18 * t269 - t6 * t183) * t181 (t129 * t183 + t140 * t180) * t67 - t1 * t184 - t139 * t26 + t293 * t62 + t227 * t18 + (t180 * t230 + t183 * t231) * t112 + (t150 * t4 + t18 * t268 + t6 * t180) * t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, t235, -t164 ^ 2 - t176 * t287, t164 * t99 + t117 + t79, 0, 0, 0, 0, 0, -t317, -t311, t315 * t181 - t184 * t291 + t59, t317, t311, -t32 * t164 + t316 * t184 + (t150 * t23 - t8) * t181, 0, 0, 0, 0, 0, t181 * t27 + (t180 * t164 + t183 * t202) * t112 + (t206 - t208) * t184, t297 + (t183 * t164 - t180 * t202) * t112 + (t209 + t299) * t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, -t113 ^ 2 + t310, t190, t315, t153, -t115 * t72 + t213, t113 * t72 - t150 * t30 + t243, pkin(4) * t67 - qJ(5) * t68 + (-t25 - t31) * t115 + (t23 - t281) * t113, t113 * t50 - t213 - 0.2e1 * t221 + t301, -t113 * t32 + t115 * t50 + t150 * t281 + 0.2e1 * t217 + t233, -t12 * pkin(4) - t8 * qJ(5) - t23 * t31 - t25 * t281 - t32 * t50, -t239 * t62 + t296 (-t27 - t295) * t183 + (-t26 + t302) * t180, t62 * t113 + t212, -t60 * t113 + t194, t112 * t113, qJ(5) * t27 + t3 * t113 + t201 * t180 + t183 * t312 + t282 * t60, qJ(5) * t26 - t4 * t113 - t180 * t312 + t201 * t183 + t282 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t153 - t290, -t150 ^ 2 - t310, t301 - t316, 0, 0, 0, 0, 0, t212 - t206, t194 - t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62 * t60, -t60 ^ 2 + t62 ^ 2, t26 + t302, -t27 + t295, -t67, t4 * t112 - t18 * t62 + t2, t18 * t60 - t226 + (-qJD(6) + t112) * t3;];
tauc_reg  = t5;
