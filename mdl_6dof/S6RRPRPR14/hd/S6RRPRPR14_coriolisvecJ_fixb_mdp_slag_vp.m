% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRPR14_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPRPR14_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [10x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRPRPR14_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:37:10
% EndTime: 2019-03-09 11:37:23
% DurationCPUTime: 7.63s
% Computational Cost: add. (4676->560), mult. (11998->736), div. (0->0), fcn. (8626->8), ass. (0->229)
t498 = sin(qJ(4));
t502 = cos(qJ(2));
t495 = sin(pkin(6));
t596 = qJD(1) * t495;
t571 = t502 * t596;
t458 = t498 * t571;
t496 = cos(pkin(6));
t595 = qJD(1) * t496;
t481 = qJD(2) + t595;
t501 = cos(qJ(4));
t432 = t481 * t501 - t458;
t429 = qJD(6) + t432;
t499 = sin(qJ(2));
t594 = qJD(1) * t499;
t572 = t495 * t594;
t581 = pkin(1) * t595;
t598 = -pkin(8) * t572 + t502 * t581;
t585 = qJD(3) - t598;
t504 = -pkin(2) - pkin(9);
t586 = pkin(3) * t572 + t585;
t368 = t481 * t504 + t586;
t563 = -qJ(3) * t499 - pkin(1);
t415 = (t502 * t504 + t563) * t495;
t394 = qJD(1) * t415;
t347 = -t501 * t368 + t394 * t498;
t583 = qJD(5) + t347;
t493 = t499 ^ 2;
t635 = MDP(5) * (-t502 ^ 2 + t493);
t582 = qJD(1) * qJD(2);
t564 = t495 * t582;
t470 = t502 * t564;
t540 = pkin(4) * t470;
t548 = t499 * t564;
t462 = pkin(2) * t548;
t541 = pkin(9) * t499 - qJ(3) * t502;
t591 = qJD(3) * t499;
t509 = (qJD(2) * t541 - t591) * t495;
t371 = qJD(1) * t509 + t462;
t580 = pkin(1) * qJD(2) * t496;
t552 = qJD(1) * t580;
t434 = pkin(8) * t470 + t499 * t552;
t400 = pkin(3) * t470 + t434;
t589 = qJD(4) * t501;
t590 = qJD(4) * t498;
t549 = t368 * t590 + t498 * t371 + t394 * t589 - t501 * t400;
t329 = -t540 + t549;
t348 = t498 * t368 + t501 * t394;
t467 = qJD(4) + t572;
t342 = -qJ(5) * t467 - t348;
t634 = -t342 * t467 - t329;
t385 = -qJD(4) * t458 + t481 * t589 - t501 * t548;
t613 = t432 * t467;
t633 = -t385 + t613;
t625 = pkin(1) * t499;
t486 = t496 * t625;
t608 = t495 * t502;
t632 = pkin(8) * t608 + t486;
t631 = -pkin(4) * t589 - qJ(5) * t590 - t585;
t584 = pkin(5) * t432 + t583;
t430 = t481 * t498 + t501 * t571;
t624 = pkin(5) * t430;
t335 = -t342 - t624;
t384 = qJD(4) * t430 - t498 * t548;
t626 = pkin(4) + pkin(10);
t630 = t626 * t384 + (t335 - t348 + t624) * t429;
t593 = qJD(2) * t499;
t570 = t495 * t593;
t475 = pkin(2) * t570;
t391 = t475 + t509;
t609 = t495 * t499;
t483 = pkin(8) * t609;
t573 = -pkin(1) * t502 - pkin(2);
t399 = pkin(3) * t609 + t483 + (-pkin(9) + t573) * t496;
t627 = pkin(3) + pkin(8);
t420 = (t608 * t627 + t486) * qJD(2);
t514 = -t501 * t391 - t399 * t589 + t415 * t590 - t498 * t420;
t592 = qJD(2) * t502;
t330 = -t495 * (qJ(5) * t592 + qJD(5) * t499) + t514;
t628 = t432 ^ 2;
t623 = pkin(5) - t504;
t622 = qJ(5) * t430;
t497 = sin(qJ(6));
t500 = cos(qJ(6));
t587 = qJD(6) * t500;
t574 = t497 * t385 + t430 * t587 + t500 * t470;
t588 = qJD(6) * t497;
t343 = -t467 * t588 + t574;
t620 = t343 * t500;
t442 = pkin(8) * t571 + t499 * t581;
t419 = pkin(3) * t571 + t442;
t471 = t481 * qJ(3);
t389 = t471 + t419;
t517 = -qJ(5) * t432 + t389;
t349 = pkin(4) * t430 + t517;
t619 = t349 * t432;
t612 = t467 * t497;
t377 = -t500 * t430 + t612;
t618 = t377 * t429;
t521 = t377 * t467;
t379 = t430 * t497 + t467 * t500;
t617 = t379 * t429;
t616 = t379 * t467;
t615 = t430 * t432;
t614 = t430 * t467;
t520 = t467 * t498;
t611 = t467 * t504;
t492 = t495 ^ 2;
t610 = t492 * qJD(1) ^ 2;
t607 = t497 * t384;
t606 = t498 * t343;
t605 = t498 * t499;
t604 = t499 * t501;
t374 = t500 * t384;
t562 = -qJ(5) * t498 - pkin(3);
t603 = (-pkin(4) * t501 + t562) * t572 + qJD(5) * t501 + t631;
t602 = t498 * t399 + t501 * t415;
t480 = pkin(2) * t572;
t417 = t541 * t596 + t480;
t601 = t501 * t417 + t498 * t419;
t561 = qJD(4) * t623;
t600 = -t501 * t561 - (pkin(5) * t604 + qJ(5) * t502) * t596 - t601;
t599 = pkin(8) * t548 - t502 * t552;
t579 = t498 * t611;
t578 = t467 * t604;
t577 = t501 * t611;
t576 = t502 * t610;
t575 = t498 * t608;
t406 = -t481 * qJD(3) + t599;
t435 = -t496 * qJ(3) - t632;
t569 = t495 * t592;
t568 = t504 * t592;
t567 = t467 * t589;
t565 = t492 * t582;
t538 = t626 * t569;
t324 = -pkin(5) * t384 - qJD(1) * t538 + t549;
t372 = -pkin(3) * t548 - t406;
t506 = qJ(5) * t384 - qJD(5) * t432 + t372;
t328 = t385 * t626 + t506;
t560 = t500 * t324 - t328 * t497;
t559 = t399 * t501 - t498 * t415;
t558 = -t498 * t417 + t419 * t501;
t556 = t429 * t500;
t555 = t429 * t497;
t551 = t499 * t576;
t550 = -t368 * t589 - t501 * t371 + t394 * t590 - t498 * t400;
t414 = pkin(3) * t608 - t435;
t547 = -0.2e1 * pkin(1) * t565;
t455 = t498 * pkin(4) - qJ(5) * t501 + qJ(3);
t546 = t442 * t481 - t434;
t426 = (t497 * t502 + t500 * t604) * t596;
t545 = t500 * t589 + t426;
t427 = (-t497 * t604 + t500 * t502) * t596;
t544 = t497 * t589 - t427;
t446 = pkin(10) * t498 + t455;
t543 = qJD(6) * t446 + (pkin(5) * t605 - t502 * t626) * t596 - t558 + t498 * t561;
t457 = t623 * t501;
t542 = -qJD(6) * t457 + (-t501 * t626 + t562) * t572 - (pkin(10) * qJD(4) - qJD(5)) * t501 + t631;
t539 = t467 * qJD(5) - t550;
t537 = t324 * t497 + t328 * t500;
t334 = -t467 * t626 + t584;
t339 = t430 * t626 + t517;
t320 = t334 * t500 - t339 * t497;
t321 = t334 * t497 + t339 * t500;
t445 = t496 * t501 - t575;
t341 = pkin(5) * t445 - t609 * t626 - t559;
t444 = t496 * t498 + t501 * t608;
t516 = -qJ(5) * t445 + t414;
t351 = t444 * t626 + t516;
t535 = t341 * t500 - t351 * t497;
t534 = t341 * t497 + t351 * t500;
t443 = t632 * qJD(2);
t533 = t434 * t496 + t443 * t481;
t532 = qJ(5) * t470;
t479 = t502 * t580;
t531 = -pkin(8) * t570 + t479;
t354 = -qJ(5) * t609 - t602;
t530 = -t498 * t391 - t399 * t590 - t415 * t589 + t420 * t501;
t529 = -t481 * t571 + t470;
t412 = t444 * t497 + t500 * t609;
t411 = -t444 * t500 + t497 * t609;
t527 = t349 * t499 + t568;
t526 = t389 * t499 + t568;
t524 = t429 * t587 - t607;
t523 = -t429 * t588 - t374;
t515 = t348 * t467 - t549;
t325 = -t532 - t539;
t323 = -pkin(5) * t385 - t325;
t513 = t323 + (t429 * t626 + t622) * t429;
t512 = -t500 * t385 + t470 * t497;
t436 = (-pkin(2) * t502 + t563) * t495;
t489 = t496 * qJD(3);
t398 = -t570 * t627 + t479 + t489;
t510 = (-qJ(3) * t592 - t591) * t495;
t409 = qJD(4) * t444 - t498 * t570;
t508 = qJ(5) * t409 - qJD(5) * t445 + t398;
t507 = -t384 + t614;
t456 = t623 * t498;
t453 = t501 * t470;
t440 = -qJ(3) * t571 + t480;
t437 = t496 * t573 + t483;
t428 = -t489 - t531;
t424 = qJD(1) * t436;
t422 = t475 + t510;
t416 = -t471 - t442;
t413 = -pkin(2) * t481 + t585;
t410 = -qJD(4) * t575 + t496 * t589 - t501 * t570;
t403 = qJD(1) * t510 + t462;
t396 = t424 * t572;
t376 = t384 * t501;
t367 = pkin(4) * t432 + t622;
t361 = t384 * t445;
t359 = pkin(4) * t444 + t516;
t358 = -pkin(4) * t571 - t558;
t357 = -qJ(5) * t571 - t601;
t355 = -pkin(4) * t609 - t559;
t353 = -qJD(6) * t411 + t410 * t497 + t500 * t569;
t352 = qJD(6) * t412 - t410 * t500 + t497 * t569;
t345 = -pkin(5) * t444 - t354;
t344 = qJD(6) * t379 + t512;
t340 = -pkin(4) * t467 + t583;
t336 = pkin(4) * t410 + t508;
t333 = pkin(4) * t385 + t506;
t332 = t410 * t626 + t508;
t331 = -pkin(4) * t569 - t530;
t327 = -pkin(5) * t410 - t330;
t326 = -pkin(5) * t409 - t530 - t538;
t319 = -qJD(6) * t321 + t560;
t318 = qJD(6) * t320 + t537;
t1 = [(t325 * t354 + t329 * t355 + t330 * t342 + t331 * t340 + t333 * t359 + t336 * t349) * MDP(25) + 0.2e1 * (t499 * t502 * MDP(4) - t635) * t565 + (MDP(6) * t569 - MDP(7) * t570) * (t481 + t595) + (-t409 * t429 - t361) * MDP(30) + (-t409 * t432 - t361) * MDP(15) + (t514 * t467 + t398 * t432 - t414 * t384 + t372 * t445 - t389 * t409 + (t550 * t499 + (-qJD(1) * t602 - t348) * t592) * t495) * MDP(21) + (-t481 * t531 + t496 * t599 + t502 * t547) * MDP(10) + (-t409 * t467 + (-t384 * t499 + (qJD(1) * t445 + t432) * t592) * t495) * MDP(17) + (-t410 * t467 + (-t385 * t499 + (-qJD(1) * t444 - t430) * t592) * t495) * MDP(18) + (t530 * t467 + t398 * t430 + t414 * t385 + t372 * t444 + t389 * t410 + (-t549 * t499 + (qJD(1) * t559 - t347) * t592) * t495) * MDP(20) + (-t330 * t467 - t333 * t445 - t336 * t432 + t349 * t409 + t359 * t384 + (-t325 * t499 + (-qJD(1) * t354 - t342) * t592) * t495) * MDP(24) + (t331 * t467 - t333 * t444 - t336 * t430 - t349 * t410 - t359 * t385 + (t329 * t499 + (qJD(1) * t355 + t340) * t592) * t495) * MDP(23) + (-t406 * t496 - t428 * t481 + (-t424 * t592 - t403 * t499 + (-t422 * t499 - t436 * t592) * qJD(1)) * t495) * MDP(13) + ((-t424 * t593 + t403 * t502 + (t422 * t502 - t436 * t593) * qJD(1)) * t495 + t533) * MDP(12) + (t499 * t547 - t533) * MDP(9) + (-(qJD(6) * t535 + t326 * t497 + t332 * t500) * t429 + t534 * t384 - t318 * t445 + t321 * t409 + t327 * t379 + t345 * t343 + t323 * t412 + t335 * t353) * MDP(32) + ((-qJD(6) * t534 + t326 * t500 - t332 * t497) * t429 - t535 * t384 + t319 * t445 - t320 * t409 + t327 * t377 + t345 * t344 + t323 * t411 + t335 * t352) * MDP(31) + (t343 * t412 + t353 * t379) * MDP(26) + (-t343 * t411 - t344 * t412 - t352 * t379 - t353 * t377) * MDP(27) + (t403 * t436 + t406 * t435 + t413 * t443 + t416 * t428 + t422 * t424 + t434 * t437) * MDP(14) + (-t344 * t445 - t352 * t429 + t377 * t409 + t384 * t411) * MDP(29) + (t343 * t445 + t353 * t429 - t379 * t409 - t384 * t412) * MDP(28) + (t325 * t444 + t329 * t445 + t330 * t430 + t331 * t432 - t340 * t409 + t342 * t410 + t354 * t385 - t355 * t384) * MDP(22) + (t384 * t444 - t385 * t445 + t409 * t430 - t410 * t432) * MDP(16) + (-t406 * t502 + t434 * t499 + (t413 * t502 + t416 * t499) * qJD(2) + (-t428 * t502 + t443 * t499 + (t435 * t499 + t437 * t502) * qJD(2)) * qJD(1)) * t495 * MDP(11) + (t467 * t495 + t492 * t594) * MDP(19) * t592; ((-qJ(3) * qJD(2) - t416 - t442) * t499 + (-pkin(2) * qJD(2) - t413 + t585) * t502) * MDP(11) * t596 + (pkin(1) * t576 + t481 * t598 + t599) * MDP(10) + (-t432 * t520 - t376) * MDP(15) + (-t429 * t520 - t376) * MDP(30) + ((t446 * t500 + t457 * t497) * t384 - t318 * t501 - t456 * t343 + (t497 * t543 + t500 * t542) * t429 + t600 * t379 + t544 * t335 + (t321 * t467 + t323 * t497 + t335 * t587) * t498) * MDP(32) + (-(-t446 * t497 + t457 * t500) * t384 + t319 * t501 - t456 * t344 + (t497 * t542 - t500 * t543) * t429 + t600 * t377 - t545 * t335 + (-t320 * t467 - t323 * t500 + t335 * t588) * t498) * MDP(31) + (-qJD(2) + t481) * MDP(7) * t572 + (-t440 * t571 + t396 - t546) * MDP(12) - MDP(4) * t551 + (t610 * t625 + t546) * MDP(9) + (t377 * t427 + t379 * t426 + (-t377 * t497 + t379 * t500) * t589 + (t620 - t344 * t497 + (-t377 * t500 - t379 * t497) * qJD(6)) * t498) * MDP(27) + (t343 * t501 + t544 * t429 + (t524 - t616) * t498) * MDP(28) + ((-t385 - t613) * t501 + (t384 + t614) * t498) * MDP(16) + (-t467 * t590 + t453 + (-t432 * t502 - t467 * t605) * t596) * MDP(17) + (t497 * t606 + (t498 * t587 + t544) * t379) * MDP(26) + (-qJ(3) * t384 + t372 * t501 + t601 * t467 + t586 * t432 + (-t389 * t498 - t577) * qJD(4) + (t348 * t502 - t498 * t526) * t596) * MDP(21) + (-t333 * t501 + t357 * t467 + t384 * t455 + t603 * t432 + (t349 * t498 + t577) * qJD(4) + (t342 * t502 + t498 * t527) * t596) * MDP(24) + (-t333 * t498 - t358 * t467 - t385 * t455 + t603 * t430 + (-t349 * t501 + t579) * qJD(4) + (-t340 * t502 - t501 * t527) * t596) * MDP(23) + (t333 * t455 - t340 * t358 - t342 * t357 - t603 * t349 + (-t325 * t498 - t329 * t501 + (t340 * t498 - t342 * t501) * qJD(4)) * t504) * MDP(25) + (-t567 + (-t578 + (-qJD(2) * t498 + t430) * t502) * t596) * MDP(18) + (t585 * t481 + (t424 * t502 + t440 * t499) * t596 - t406) * MDP(13) + (qJ(3) * t385 + t372 * t498 - t558 * t467 + t586 * t430 + (t389 * t501 - t579) * qJD(4) + (t347 * t502 + t501 * t526) * t596) * MDP(20) + (-t344 * t501 + t545 * t429 + (t521 + t523) * t498) * MDP(29) + t529 * MDP(6) + (-pkin(2) * t434 - qJ(3) * t406 - t413 * t442 - t416 * t585 - t424 * t440) * MDP(14) + t610 * t635 - t467 * MDP(19) * t571 + (-t357 * t430 - t358 * t432 + (t342 * t572 + t384 * t504 + t329 + (-t430 * t504 + t342) * qJD(4)) * t501 + (-t340 * t572 - t385 * t504 + t325 + (t432 * t504 - t340) * qJD(4)) * t498) * MDP(22); t529 * MDP(11) + MDP(12) * t551 + (-t481 ^ 2 - t493 * t610) * MDP(13) + (t416 * t481 + t396 + t434) * MDP(14) + (t498 * t633 - t501 * t614 + t376) * MDP(22) + (-t349 * t481 + t634 * t501 + (t340 * t467 - t325) * t498) * MDP(25) + (t498 * t344 + (t497 * t481 + t500 * t520) * t429 + (t521 - t523) * t501) * MDP(31) + (t606 + (t500 * t481 - t497 * t520) * t429 + (t524 + t616) * t501) * MDP(32) + (-MDP(21) + MDP(24)) * ((t498 * t592 + t578) * t596 + t432 * t481 + t567) + (-MDP(20) + MDP(23)) * (t430 * t481 + t467 * t520 - t453); MDP(15) * t615 + (-t430 ^ 2 + t628) * MDP(16) + t507 * MDP(17) + t633 * MDP(18) + MDP(19) * t470 + (-t389 * t432 + t515) * MDP(20) + (-t347 * t467 + t389 * t430 + t550) * MDP(21) + (pkin(4) * t384 - qJ(5) * t385 + (-t342 - t348) * t432 + (t340 - t583) * t430) * MDP(22) + (t367 * t430 - t515 - 0.2e1 * t540 + t619) * MDP(23) + (-t349 * t430 + t367 * t432 + t467 * t583 + 0.2e1 * t532 + t539) * MDP(24) + (-pkin(4) * t329 - qJ(5) * t325 - t340 * t348 - t342 * t583 - t349 * t367) * MDP(25) + (-t379 * t555 + t620) * MDP(26) + ((-t344 - t617) * t500 + (-t343 + t618) * t497) * MDP(27) + (t379 * t430 - t429 * t555 - t374) * MDP(28) + (-t377 * t430 - t429 * t556 + t607) * MDP(29) + t429 * t430 * MDP(30) + (qJ(5) * t344 + t320 * t430 + t584 * t377 + t513 * t497 + t500 * t630) * MDP(31) + (qJ(5) * t343 - t321 * t430 + t584 * t379 - t497 * t630 + t513 * t500) * MDP(32); t507 * MDP(22) + (t470 - t615) * MDP(23) + (-t467 ^ 2 - t628) * MDP(24) + (t619 - t634) * MDP(25) + (-t374 - t521) * MDP(31) + (t607 - t616) * MDP(32) + (-MDP(31) * t555 - MDP(32) * t556) * t429; t379 * t377 * MDP(26) + (-t377 ^ 2 + t379 ^ 2) * MDP(27) + (t574 + t618) * MDP(28) + (-t512 + t617) * MDP(29) - t384 * MDP(30) + (t321 * t429 - t335 * t379 + t560) * MDP(31) + (t320 * t429 + t335 * t377 - t537) * MDP(32) + (-MDP(28) * t612 - MDP(29) * t379 - MDP(31) * t321 - MDP(32) * t320) * qJD(6);];
tauc  = t1;
