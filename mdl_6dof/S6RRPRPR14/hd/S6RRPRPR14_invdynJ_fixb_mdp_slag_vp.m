% Calculate vector of inverse dynamics joint torques for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRPR14_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRPR14_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: pkin has to be [10x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRPRPR14_invdynJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:37:18
% EndTime: 2019-03-09 11:37:34
% DurationCPUTime: 11.85s
% Computational Cost: add. (6113->715), mult. (14658->900), div. (0->0), fcn. (11010->10), ass. (0->301)
t624 = sin(pkin(6));
t628 = sin(qJ(2));
t742 = qJD(1) * qJD(2);
t723 = t628 * t742;
t703 = t624 * t723;
t632 = cos(qJ(2));
t739 = qJDD(1) * t632;
t721 = t624 * t739;
t827 = t703 - t721;
t627 = sin(qJ(4));
t755 = qJD(1) * t632;
t729 = t624 * t755;
t574 = t627 * t729;
t625 = cos(pkin(6));
t757 = qJD(1) * t625;
t605 = qJD(2) + t757;
t631 = cos(qJ(4));
t537 = t605 * t631 - t574;
t532 = qJD(6) + t537;
t756 = qJD(1) * t628;
t730 = t624 * t756;
t737 = pkin(1) * t757;
t763 = -pkin(8) * t730 + t632 * t737;
t745 = qJD(3) - t763;
t635 = -pkin(2) - pkin(9);
t746 = pkin(3) * t730 + t745;
t480 = t605 * t635 + t746;
t720 = -qJ(3) * t628 - pkin(1);
t657 = t632 * t635 + t720;
t758 = qJD(1) * t624;
t494 = t657 * t758;
t442 = -t631 * t480 + t494 * t627;
t743 = qJD(5) + t442;
t741 = qJDD(1) * t625;
t704 = qJDD(2) + t741;
t585 = t704 * qJ(3);
t692 = t627 * pkin(4) - qJ(5) * t631;
t571 = qJ(3) + t692;
t535 = t605 * t627 + t631 * t729;
t764 = -t627 * t703 - t631 * t704;
t467 = qJD(4) * t535 + t627 * t721 + t764;
t583 = qJD(4) + t730;
t790 = t535 * t583;
t825 = t467 - t790;
t468 = -qJD(4) * t574 + t627 * t704 + (qJD(4) * t605 - t827) * t631;
t789 = t537 * t583;
t824 = -t468 + t789;
t823 = -t605 * qJD(3) - t585;
t750 = qJD(4) * t631;
t751 = qJD(4) * t627;
t822 = pkin(4) * t750 + qJ(5) * t751 + t745;
t629 = sin(qJ(1));
t772 = t629 * t632;
t633 = cos(qJ(1));
t773 = t628 * t633;
t560 = t625 * t773 + t772;
t770 = t632 * t633;
t775 = t628 * t629;
t562 = -t625 * t775 + t770;
t699 = -g(1) * t562 - g(2) * t560;
t744 = pkin(5) * t537 + t743;
t443 = t627 * t480 + t631 * t494;
t439 = -qJ(5) * t583 - t443;
t808 = pkin(5) * t535;
t432 = -t439 - t808;
t466 = -qJDD(6) + t467;
t813 = pkin(4) + pkin(10);
t821 = t813 * t466 + (t432 - t443 + t808) * t532;
t599 = pkin(8) * t729;
t551 = t628 * t737 + t599;
t522 = pkin(3) * t729 + t551;
t587 = t605 * qJ(3);
t491 = t587 + t522;
t661 = -qJ(5) * t537 + t491;
t444 = pkin(4) * t535 + t661;
t722 = t632 * t742;
t740 = qJDD(1) * t628;
t659 = t722 + t740;
t651 = t659 * t624;
t543 = qJDD(4) + t651;
t769 = t635 * t543;
t820 = t444 * t583 + t769;
t754 = qJD(2) * t628;
t728 = t624 * t754;
t598 = pkin(2) * t728;
t801 = qJ(3) * t632;
t691 = pkin(9) * t628 - t801;
t752 = qJD(3) * t628;
t647 = qJD(2) * t691 - t752;
t493 = t624 * t647 + t598;
t783 = t624 * t628;
t607 = pkin(8) * t783;
t811 = pkin(1) * t632;
t731 = -pkin(2) - t811;
t499 = pkin(3) * t783 + t607 + (-pkin(9) + t731) * t625;
t781 = t624 * t632;
t762 = pkin(2) * t781 + qJ(3) * t783;
t807 = pkin(9) * t632;
t518 = (-pkin(1) - t807) * t624 - t762;
t812 = pkin(1) * t628;
t613 = t625 * t812;
t814 = pkin(3) + pkin(8);
t523 = (t781 * t814 + t613) * qJD(2);
t658 = -t631 * t493 - t499 * t750 + t518 * t751 - t627 * t523;
t753 = qJD(2) * t632;
t426 = -t624 * (qJ(5) * t753 + qJD(5) * t628) + t658;
t626 = sin(qJ(6));
t630 = cos(qJ(6));
t559 = -t625 * t770 + t775;
t780 = t624 * t633;
t673 = t559 * t631 + t627 * t780;
t819 = -t560 * t630 + t626 * t673;
t818 = t560 * t626 + t630 * t673;
t816 = t537 ^ 2;
t815 = t583 ^ 2;
t810 = pkin(4) * t543;
t557 = t625 * t627 + t631 * t781;
t809 = pkin(4) * t557;
t804 = g(3) * t624;
t803 = pkin(5) - t635;
t802 = MDP(7) * t624;
t800 = qJ(5) * t535;
t733 = t627 * t781;
t558 = t625 * t631 - t733;
t799 = qJ(5) * t558;
t748 = qJD(6) * t630;
t732 = t626 * t468 + t535 * t748 + t630 * t543;
t749 = qJD(6) * t626;
t430 = -t583 * t749 + t732;
t797 = t430 * t630;
t796 = t439 * t583;
t795 = t443 * t583;
t785 = t583 * t626;
t481 = -t630 * t535 + t785;
t794 = t481 * t532;
t667 = t481 * t583;
t483 = t535 * t626 + t583 * t630;
t793 = t483 * t532;
t792 = t483 * t583;
t791 = t535 * t537;
t539 = t543 * qJ(5);
t788 = t543 * t627;
t669 = t583 * t627;
t621 = t624 ^ 2;
t784 = t621 * qJD(1) ^ 2;
t782 = t624 * t629;
t779 = t626 * t466;
t778 = t626 * t631;
t777 = t627 * t430;
t776 = t627 * t628;
t774 = t628 * t631;
t462 = t630 * t466;
t771 = t630 * t631;
t768 = t627 * t499 + t631 * t518;
t603 = pkin(2) * t730;
t520 = t691 * t758 + t603;
t767 = t631 * t520 + t627 * t522;
t719 = -qJ(5) * t627 - pkin(3);
t766 = -qJD(5) * t631 - (-pkin(4) * t631 + t719) * t730 + t822;
t718 = qJD(4) * t803;
t765 = -t631 * t718 - (pkin(5) * t774 + qJ(5) * t632) * t758 - t767;
t761 = pkin(8) * t781 + t613;
t622 = t628 ^ 2;
t760 = -t632 ^ 2 + t622;
t759 = MDP(11) * t624;
t747 = qJD(2) - t605;
t738 = g(3) * t783;
t736 = pkin(1) * qJD(2) * t625;
t735 = pkin(1) * t741;
t734 = t632 * t784;
t540 = -t625 * qJ(3) - t761;
t727 = t624 * t753;
t725 = g(3) * t762;
t724 = 0.2e1 * pkin(1) * t621;
t683 = t704 * pkin(2);
t710 = qJD(1) * t736;
t705 = qJD(2) * t599 + qJDD(1) * t607 + t628 * t710 - t632 * t735;
t476 = -t683 + qJDD(3) + t705;
t449 = pkin(3) * t651 - pkin(9) * t704 + t476;
t578 = pkin(2) * t703;
t457 = t578 + (qJD(1) * t647 + qJDD(1) * t657) * t624;
t707 = -t631 * t449 + t627 * t457 + t480 * t751 + t494 * t750;
t685 = qJDD(5) + t707;
t416 = -pkin(5) * t467 - t543 * t813 + t685;
t706 = pkin(8) * t827 - t628 * t735 - t632 * t710;
t469 = t706 + t823;
t452 = -pkin(3) * t827 - t469;
t637 = qJ(5) * t467 - qJD(5) * t537 + t452;
t419 = t468 * t813 + t637;
t717 = t630 * t416 - t626 * t419;
t716 = -t630 * t468 + t543 * t626;
t715 = t499 * t631 - t627 * t518;
t502 = t627 * t520;
t714 = -t522 * t631 + t502;
t712 = t532 * t626;
t711 = t532 * t630;
t709 = t628 * t734;
t708 = -t627 * t449 - t631 * t457 - t480 * t750 + t494 * t751;
t517 = pkin(3) * t781 - t540;
t561 = t625 * t772 + t773;
t510 = -t561 * t631 + t627 * t782;
t702 = -g(1) * t673 - g(2) * t510;
t511 = t561 * t627 + t631 * t782;
t674 = -t559 * t627 + t631 * t780;
t701 = g(1) * t674 + g(2) * t511;
t700 = g(1) * t559 - g(2) * t561;
t698 = g(1) * t560 - g(2) * t562;
t697 = g(1) * t633 + g(2) * t629;
t672 = t626 * t632 + t628 * t771;
t529 = t672 * t758;
t696 = t630 * t750 + t529;
t652 = (-t626 * t774 + t630 * t632) * t624;
t530 = qJD(1) * t652;
t695 = t626 * t750 - t530;
t563 = pkin(10) * t627 + t571;
t694 = qJD(6) * t563 + (pkin(5) * t776 - t632 * t813) * t758 + t714 + t627 * t718;
t573 = t803 * t631;
t693 = -qJD(6) * t573 + (-t631 * t813 + t719) * t730 - (pkin(10) * qJD(4) - qJD(5)) * t631 - t822;
t690 = t626 * t416 + t630 * t419;
t429 = -t583 * t813 + t744;
t436 = t535 * t813 + t661;
t421 = t429 * t630 - t436 * t626;
t422 = t429 * t626 + t436 * t630;
t438 = pkin(5) * t558 - t783 * t813 - t715;
t660 = t517 - t799;
t446 = t557 * t813 + t660;
t688 = t438 * t630 - t446 * t626;
t687 = t438 * t626 + t446 * t630;
t681 = -pkin(2) * t632 + t720;
t527 = t681 * t758;
t541 = -pkin(1) * t624 - t762;
t684 = qJD(2) * (-qJD(1) * t541 - t527);
t602 = t632 * t736;
t682 = -pkin(8) * t728 + t602;
t680 = g(1) * t561 + g(2) * t559 - g(3) * t781;
t455 = -qJ(5) * t783 - t768;
t679 = t633 * pkin(1) + t562 * pkin(2) + pkin(8) * t782 + qJ(3) * t561;
t678 = -t627 * t493 - t499 * t751 - t518 * t750 + t523 * t631;
t677 = t704 * MDP(8);
t566 = t583 * qJD(5);
t418 = -t539 - t566 + t708;
t509 = t557 * t626 + t630 * t783;
t508 = -t557 * t630 + t626 * t783;
t671 = t532 * t748 - t779;
t670 = -t532 * t749 - t462;
t666 = -qJ(3) * t753 - t752;
t470 = t578 + (qJD(1) * t666 + qJDD(1) * t681) * t624;
t525 = t624 * t666 + t598;
t662 = qJD(1) * t525 + qJDD(1) * t541 + t470;
t656 = -g(1) * t511 + g(2) * t674 - g(3) * t558;
t654 = -pkin(1) * t629 - t560 * pkin(2) + pkin(8) * t780 - qJ(3) * t559;
t552 = t761 * qJD(2);
t653 = -t552 * t605 + t698;
t617 = t625 * qJD(3);
t498 = -t728 * t814 + t602 + t617;
t649 = t699 - t706;
t648 = t624 * (t747 * t755 + t740);
t646 = t656 - t708;
t645 = g(1) * t510 - g(2) * t673 + g(3) * t557 - t707;
t644 = qJD(4) * t583 * t635 - t699 + t738;
t643 = -t551 * t605 - t680 + t705;
t423 = pkin(4) * t468 + t637;
t642 = -t423 + t644;
t641 = t452 - t644;
t506 = qJD(4) * t557 - t627 * t728;
t640 = qJ(5) * t506 - qJD(5) * t558 + t498;
t417 = -pkin(5) * t468 - t418;
t639 = t417 + (t532 * t813 + t800) * t532 + t656;
t638 = t444 * t537 + qJDD(5) - t645;
t572 = t803 * t627;
t555 = t561 * pkin(2);
t553 = t559 * pkin(2);
t549 = -qJ(3) * t729 + t603;
t542 = t625 * t731 + t607;
t534 = t631 * t543;
t531 = -t617 - t682;
t519 = -t587 - t551;
t516 = -pkin(2) * t605 + t745;
t507 = -qJD(4) * t733 + t625 * t750 - t631 * t728;
t496 = t527 * t730;
t479 = pkin(4) * t537 + t800;
t472 = t510 * t626 + t562 * t630;
t471 = t510 * t630 - t562 * t626;
t461 = t660 + t809;
t460 = -pkin(4) * t729 + t714;
t459 = -qJ(5) * t729 - t767;
t456 = -pkin(4) * t783 - t715;
t454 = -qJD(6) * t508 + t507 * t626 + t630 * t727;
t453 = qJD(6) * t509 - t507 * t630 + t626 * t727;
t440 = -pkin(5) * t557 - t455;
t437 = -pkin(4) * t583 + t743;
t433 = pkin(4) * t507 + t640;
t431 = qJD(6) * t483 + t716;
t428 = t507 * t813 + t640;
t427 = -pkin(4) * t727 - t678;
t425 = -pkin(5) * t507 - t426;
t424 = -pkin(5) * t506 - t727 * t813 - t678;
t420 = t685 - t810;
t414 = -t422 * qJD(6) + t717;
t413 = qJD(6) * t421 + t690;
t1 = [(-g(1) * t654 - g(2) * t679 + t469 * t540 + t470 * t541 + t476 * t542 + t516 * t552 + t519 * t531 + t527 * t525) * MDP(14) + t625 * t677 + ((qJDD(1) * t622 + 0.2e1 * t628 * t722) * MDP(4) + 0.2e1 * (t628 * t739 - t742 * t760) * MDP(5)) * t621 + (g(1) * t629 - g(2) * t633) * MDP(2) + (-t431 * t558 - t453 * t532 + t466 * t508 + t481 * t506) * MDP(29) + (t430 * t558 + t454 * t532 - t466 * t509 - t483 * t506) * MDP(28) + (-t466 * t558 - t506 * t532) * MDP(30) + (-t467 * t558 - t506 * t537) * MDP(15) + (t467 * t557 - t468 * t558 + t506 * t535 - t507 * t537) * MDP(16) + ((t625 * t811 - t607) * t704 - t705 * t625 + (-t723 + t739) * t724 + t653) * MDP(9) + (-t605 * t682 + t625 * t706 - t659 * t724 - t704 * t761 - t700) * MDP(10) + ((qJD(2) * t516 - t540 * qJDD(1) - t469 + (qJD(2) * t542 - t531) * qJD(1)) * t632 + (qJD(2) * t519 + t542 * qJDD(1) + t476 + (qJD(2) * t540 + t552) * qJD(1)) * t628 - t697) * t759 + (t452 * t557 + t517 * t468 + t491 * t507 + t498 * t535 + t715 * t543 + t678 * t583 - t701) * MDP(20) + (-t423 * t558 - t426 * t583 - t433 * t537 + t444 * t506 - t455 * t543 + t461 * t467 + t702) * MDP(24) + (-t423 * t557 + t427 * t583 - t433 * t535 - t444 * t507 + t456 * t543 - t461 * t468 + t701) * MDP(23) + (t452 * t558 - t517 * t467 - t491 * t506 + t498 * t537 - t768 * t543 + t658 * t583 - t702) * MDP(21) + (t476 * t625 + t542 * t704 - t653) * MDP(12) + (-t469 * t625 - t531 * t605 - t540 * t704 + t700) * MDP(13) + ((t543 * t628 + t583 * t753) * MDP(19) + (-t442 * t753 - t628 * t707) * MDP(20) + (-t468 * t628 - t535 * t753) * MDP(18) + (-t418 * t628 - t439 * t753) * MDP(24) + (-t467 * t628 + t537 * t753) * MDP(17) + (t420 * t628 + t437 * t753) * MDP(23) + (-t443 * t753 + t628 * t708) * MDP(21) + (t605 * t753 + t628 * qJDD(2) + (t722 + 0.2e1 * t740) * t625) * MDP(6) + (t628 * t684 + t632 * t662) * MDP(12) + (-t628 * t662 + t632 * t684) * MDP(13)) * t624 + (-t507 * t583 - t543 * t557) * MDP(18) + (-t506 * t583 + t543 * t558) * MDP(17) + t697 * MDP(3) + (t418 * t557 + t420 * t558 + t426 * t535 + t427 * t537 - t437 * t506 + t439 * t507 + t455 * t468 - t456 * t467 + t698) * MDP(22) + (-t430 * t508 - t431 * t509 - t453 * t483 - t454 * t481) * MDP(27) + (t430 * t509 + t454 * t483) * MDP(26) + (-(qJD(6) * t688 + t424 * t626 + t428 * t630) * t532 + t687 * t466 - t413 * t558 + t422 * t506 + t425 * t483 + t440 * t430 + t417 * t509 + t432 * t454 - g(1) * t818 - g(2) * t471) * MDP(32) + ((-qJD(6) * t687 + t424 * t630 - t428 * t626) * t532 - t688 * t466 + t414 * t558 - t421 * t506 + t425 * t481 + t440 * t431 + t417 * t508 + t432 * t453 - g(1) * t819 - g(2) * t472) * MDP(31) + qJDD(1) * MDP(1) + (t423 * t461 + t444 * t433 + t418 * t455 + t439 * t426 + t420 * t456 + t437 * t427 - g(1) * (pkin(3) * t780 + pkin(4) * t674 - pkin(9) * t560 + qJ(5) * t673 + t654) - g(2) * (pkin(3) * t782 + pkin(4) * t511 + pkin(9) * t562 + qJ(5) * t510 + t679)) * MDP(25) + (-t605 * t754 + t632 * qJDD(2) + (-t723 + 0.2e1 * t739) * t625) * t802; -MDP(4) * t709 + (-t439 * t459 - t437 * t460 - g(1) * (-pkin(9) * t561 - t555) - g(2) * (-pkin(9) * t559 - t553) - t725 - (t628 * t692 + t807) * t804 + t766 * t444 + (-t418 * t627 - t420 * t631 + (t437 * t627 - t439 * t631) * qJD(4)) * t635 + (t423 + t699) * t571) * MDP(25) + (t430 * t631 + t695 * t532 + (t671 - t792) * t627) * MDP(28) + MDP(6) * t648 + (-t459 * t535 - t460 * t537 + (t439 * t730 + t467 * t635 + t420 + (-t535 * t635 + t439) * qJD(4)) * t631 + (-t437 * t730 - t468 * t635 + t418 + (t537 * t635 - t437) * qJD(4)) * t627 + t680) * MDP(22) + (-t549 * t729 + qJDD(3) + t496 + t643 - 0.2e1 * t683) * MDP(12) + (-t583 * t751 + t534 + (-t537 * t632 - t583 * t776) * t758) * MDP(17) + (t784 * t812 - t643) * MDP(9) + ((-pkin(2) * t628 + t801) * qJDD(1) + ((-qJ(3) * qJD(2) - t519 - t551) * t628 + (-pkin(2) * qJD(2) - t516 + t745) * t632) * qJD(1)) * t759 + (-t583 * t750 - t788 + (t535 * t632 - t583 * t774) * t758) * MDP(18) + ((-t468 - t789) * t631 + (t467 + t790) * t627) * MDP(16) + (-t469 * qJ(3) - t476 * pkin(2) - t527 * t549 - t516 * t551 - g(1) * (qJ(3) * t562 - t555) - g(2) * (qJ(3) * t560 - t553) - t725 - t745 * t519) * MDP(14) + (pkin(1) * t734 + t605 * t763 - t649 + t738) * MDP(10) + (-t467 * t631 - t537 * t669) * MDP(15) + (-t466 * t631 - t532 * t669) * MDP(30) + (-qJ(3) * t467 + t767 * t583 + t443 * t729 + t746 * t537 + (-t491 * t583 - t769) * t627 + t641 * t631) * MDP(21) - t583 * MDP(19) * t729 + (-t431 * t631 + t696 * t532 + (t667 + t670) * t627) * MDP(29) + (t585 + t745 * t605 + (-g(3) * t628 + (t527 * t632 + t549 * t628) * qJD(1)) * t624 + t649 - t823) * MDP(13) + (t439 * t729 + t459 * t583 + t467 * t571 - t766 * t537 + t627 * t820 + t642 * t631) * MDP(24) + (-t437 * t729 - t460 * t583 - t468 * t571 - t766 * t535 + t642 * t627 - t631 * t820) * MDP(23) + (t481 * t530 + t483 * t529 + (-t481 * t626 + t483 * t630) * t750 + (t797 - t431 * t626 + (-t481 * t630 - t483 * t626) * qJD(6)) * t627) * MDP(27) + t760 * MDP(5) * t784 + t677 + (t626 * t777 + (t627 * t748 + t695) * t483) * MDP(26) + ((t563 * t630 + t573 * t626) * t466 - t413 * t631 - t572 * t430 - g(1) * (t561 * t626 - t562 * t771) - g(2) * (t559 * t626 - t560 * t771) + t672 * t804 + (t626 * t694 + t630 * t693) * t532 + t765 * t483 + t695 * t432 + (t417 * t626 + t422 * t583 + t432 * t748) * t627) * MDP(32) + (-(-t563 * t626 + t573 * t630) * t466 + t414 * t631 - t572 * t431 - g(1) * (-t561 * t630 - t562 * t778) - g(2) * (-t559 * t630 - t560 * t778) - g(3) * t652 + (t626 * t693 - t630 * t694) * t532 + t765 * t481 - t696 * t432 + (-t417 * t630 - t421 * t583 + t432 * t749) * t627) * MDP(31) + (qJ(3) * t468 + t442 * t729 + t746 * t535 + t641 * t627 + t769 * t631 + (t502 + (t491 - t522) * t631) * t583) * MDP(20) + (-t747 * t756 + t739) * t802; MDP(11) * t648 + (t704 + t709) * MDP(12) + (-t605 ^ 2 - t622 * t784) * MDP(13) + (t519 * t605 + t476 + t496 - t680) * MDP(14) + (t627 * t824 + t631 * t825) * MDP(22) + (-t444 * t605 + (-t420 - t796) * t631 + (t437 * t583 - t418) * t627 - t680) * MDP(25) + (t627 * t431 + (t626 * t605 + t630 * t669) * t532 + (t667 - t670) * t631) * MDP(31) + (t777 + (t630 * t605 - t626 * t669) * t532 + (t671 + t792) * t631) * MDP(32) + (-MDP(21) + MDP(24)) * (t537 * t605 + t631 * t815 + t788) + (-MDP(20) + MDP(23)) * (t535 * t605 + t583 * t669 - t534); MDP(15) * t791 + (-t535 ^ 2 + t816) * MDP(16) - t825 * MDP(17) + t824 * MDP(18) + t543 * MDP(19) + (-t491 * t537 + t645 + t795) * MDP(20) + (-t442 * t583 + t491 * t535 - t646) * MDP(21) + (pkin(4) * t467 - qJ(5) * t468 + (-t439 - t443) * t537 + (t437 - t743) * t535) * MDP(22) + (t479 * t535 + t638 - t795 - 0.2e1 * t810) * MDP(23) + (-t444 * t535 + t479 * t537 + t583 * t743 + 0.2e1 * t539 + t566 + t646) * MDP(24) + (-t418 * qJ(5) - t420 * pkin(4) - t444 * t479 - t437 * t443 - g(1) * (-pkin(4) * t510 + qJ(5) * t511) - g(2) * (pkin(4) * t673 - qJ(5) * t674) - g(3) * (t799 - t809) - t743 * t439) * MDP(25) + (-t483 * t712 + t797) * MDP(26) + ((-t431 - t793) * t630 + (-t430 + t794) * t626) * MDP(27) + (t483 * t535 - t532 * t712 - t462) * MDP(28) + (-t481 * t535 - t532 * t711 + t779) * MDP(29) + t532 * t535 * MDP(30) + (qJ(5) * t431 + t421 * t535 + t744 * t481 + t639 * t626 + t630 * t821) * MDP(31) + (qJ(5) * t430 - t422 * t535 + t744 * t483 - t626 * t821 + t639 * t630) * MDP(32); (-t605 * t751 - t764 + t790) * MDP(22) + (qJDD(4) - t791) * MDP(23) + (-t815 - t816) * MDP(24) + (t638 + t796 - t810) * MDP(25) + (-t462 - t667) * MDP(31) + (t779 - t792) * MDP(32) + (MDP(23) * t740 + ((-qJD(1) * t750 - qJDD(1) * t627) * MDP(22) + MDP(23) * t742) * t632) * t624 + (-MDP(31) * t712 - MDP(32) * t711) * t532; t483 * t481 * MDP(26) + (-t481 ^ 2 + t483 ^ 2) * MDP(27) + (t732 + t794) * MDP(28) + (-t716 + t793) * MDP(29) - t466 * MDP(30) + (-g(1) * t471 + g(2) * t818 + g(3) * t508 + t422 * t532 - t432 * t483 + t717) * MDP(31) + (g(1) * t472 - g(2) * t819 + g(3) * t509 + t421 * t532 + t432 * t481 - t690) * MDP(32) + (-MDP(28) * t785 - MDP(29) * t483 - MDP(31) * t422 - MDP(32) * t421) * qJD(6);];
tau  = t1;
