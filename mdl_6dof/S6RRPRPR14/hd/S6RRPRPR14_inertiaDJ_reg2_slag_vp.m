% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR14_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR14_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR14_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:36:56
% EndTime: 2019-03-09 11:37:12
% DurationCPUTime: 5.78s
% Computational Cost: add. (4461->396), mult. (11206->665), div. (0->0), fcn. (10110->8), ass. (0->220)
t105 = cos(qJ(4));
t246 = pkin(4) + pkin(10);
t199 = t246 * t105;
t102 = sin(qJ(4));
t223 = qJ(5) * t102;
t266 = t199 + t223;
t103 = sin(qJ(2));
t226 = cos(pkin(6));
t172 = t226 * t105;
t106 = cos(qJ(2));
t100 = sin(pkin(6));
t214 = qJD(2) * t103;
t183 = t100 * t214;
t90 = qJD(4) * t102;
t188 = t100 * t90;
t241 = t105 * t183 + t106 * t188;
t133 = qJD(4) * t172 - t241;
t213 = qJD(2) * t106;
t251 = 0.2e1 * t100;
t218 = t100 * t106;
t58 = t226 * t102 + t105 * t218;
t265 = (t103 * t133 + t58 * t213) * t251;
t190 = pkin(1) * t226;
t164 = t106 * t190;
t129 = -t226 * pkin(2) - t164;
t122 = -t226 * pkin(9) + t129;
t247 = pkin(3) + pkin(8);
t200 = t100 * t247;
t116 = t103 * t200 + t122;
t212 = qJD(3) * t103;
t224 = qJ(3) * t106;
t248 = pkin(2) + pkin(9);
t264 = qJD(4) * t116 + t100 * (-t212 + (t248 * t103 - t224) * qJD(2));
t222 = qJ(5) * t105;
t263 = -t102 * pkin(4) + t222;
t262 = t248 * t241;
t171 = t226 * qJD(3);
t219 = t100 * t103;
t35 = t171 + (-t247 * t219 + t164) * qJD(2);
t38 = qJD(4) * t58 - t102 * t183;
t59 = -t102 * t218 + t172;
t13 = pkin(4) * t133 + t38 * qJ(5) - t59 * qJD(5) + t35;
t120 = t105 * t122;
t136 = t102 * qJ(3) + t105 * t247;
t134 = -pkin(4) - t136;
t160 = -t248 * t106 - pkin(1);
t140 = t102 * t160;
t260 = (t140 + (-pkin(10) + t134) * t103) * t100 + t59 * pkin(5) - t120;
t261 = -pkin(10) * t133 - qJD(6) * t260 - t13;
t201 = pkin(8) * t219;
t132 = -t164 + t201;
t54 = t132 * qJD(2);
t97 = t102 ^ 2;
t99 = t105 ^ 2;
t175 = (t97 - t99) * qJD(4);
t101 = sin(qJ(6));
t96 = t101 ^ 2;
t104 = cos(qJ(6));
t98 = t104 ^ 2;
t240 = t96 - t98;
t174 = t240 * qJD(6);
t259 = 0.2e1 * t58 * t133;
t225 = qJ(3) * t103;
t154 = -pkin(2) * t106 - t225;
t141 = -pkin(1) + t154;
t127 = (-pkin(9) * t106 + t141) * t90;
t189 = qJ(5) * t213;
t87 = t103 * t190;
t126 = qJD(2) * (t106 * t200 + t87);
t202 = t102 * t126 + t264 * t105;
t203 = t103 * qJD(5);
t8 = t100 * (t127 - t189 - t203) - t202;
t155 = -t172 + t59;
t229 = t105 * t38;
t258 = t241 * t102 + t229 + (t102 * t155 - t58 * t105) * qJD(4);
t91 = qJD(4) * t105;
t257 = t102 * t133 + t58 * t91;
t255 = t105 * t241 + t38 * t102 + (t102 * t58 + (-t172 - t59) * t105) * qJD(4);
t208 = qJD(5) * t102;
t242 = pkin(5) + t248;
t74 = t242 * t102;
t254 = qJD(4) * (-t102 * t246 + t222) + qJD(6) * t74 + t208;
t193 = t101 * t219;
t39 = -t58 * t104 + t193;
t231 = t104 * t39;
t83 = t100 * t213;
t20 = -qJD(6) * t193 + t133 * t101 + (t58 * qJD(6) + t83) * t104;
t232 = t104 * t20;
t40 = t101 * t58 + t104 * t219;
t235 = t101 * t40;
t19 = qJD(6) * t40 + t101 * t83 - t104 * t133;
t237 = t101 * t19;
t253 = qJD(6) * (-t231 + t235) - t232 - t237;
t176 = t242 * t105;
t161 = t104 * t176;
t73 = qJ(3) - t263;
t68 = pkin(10) * t102 + t73;
t32 = -t101 * t68 + t161;
t33 = t101 * t176 + t104 * t68;
t150 = t101 * t32 - t104 * t33;
t169 = -qJD(5) * t105 + qJD(3);
t211 = qJD(4) * t101;
t195 = t74 * t211;
t207 = qJD(6) * t101;
t17 = t68 * t207 - t104 * (t266 * qJD(4) + t169) + t195 - qJD(6) * t161;
t18 = -t101 * t169 - t33 * qJD(6) + (-t101 * t199 + (-t101 * qJ(5) - t104 * t242) * t102) * qJD(4);
t3 = -qJD(6) * t150 - t101 * t17 + t104 * t18;
t130 = t100 * (t160 - t225);
t128 = qJD(4) * t130;
t110 = (-t126 + t128) * t105 + t264 * t102;
t170 = pkin(4) * t83;
t10 = t110 - t170;
t109 = -t38 * pkin(5) - pkin(10) * t83 + t10;
t67 = pkin(8) * t218 + t87;
t89 = t226 * qJ(3);
t48 = -t89 - t67;
t42 = pkin(3) * t218 - t48;
t139 = -qJ(5) * t59 + t42;
t16 = t246 * t58 + t139;
t1 = -t101 * t109 + t261 * t104 + t16 * t207;
t5 = -t101 * t16 + t260 * t104;
t6 = t260 * t101 + t104 * t16;
t156 = t101 * t5 - t104 * t6;
t206 = qJD(6) * t104;
t2 = t261 * t101 + t104 * t109 - t16 * t206;
t125 = -qJD(6) * t156 - t1 * t101 + t104 * t2;
t252 = -0.2e1 * t133 * t59 + 0.2e1 * t38 * t58;
t250 = 0.2e1 * qJD(3);
t249 = 0.2e1 * qJD(5);
t7 = -pkin(5) * t133 - t8;
t245 = t101 * t7;
t244 = t104 * t7;
t24 = t102 * t116 + t105 * t130;
t239 = t96 + t98;
t236 = t101 * t39;
t55 = t67 * qJD(2);
t234 = t103 * t55;
t233 = t104 * t19;
t230 = t104 * t40;
t228 = t248 * t38;
t227 = t248 * t58;
t221 = qJD(4) * t39;
t220 = qJD(4) * t40;
t217 = t100 * t248;
t216 = t101 * t246;
t215 = t104 * t246;
t210 = qJD(4) * t104;
t209 = qJD(4) * t248;
t205 = qJD(6) * t105;
t204 = qJD(6) * t246;
t28 = -0.2e1 * t59 * t38;
t95 = t100 ^ 2;
t197 = t95 * t213;
t196 = t59 * t211;
t194 = t59 * t210;
t192 = t103 * t217;
t187 = t102 * t209;
t186 = t101 * t205;
t185 = t102 * t206;
t184 = t104 * t205;
t182 = t102 * t213;
t181 = t104 * t91;
t180 = t101 * t206;
t179 = t102 * t91;
t178 = t102 * t239;
t177 = t55 * t226;
t173 = qJD(6) * (t97 + t99);
t81 = 0.2e1 * t179;
t168 = t97 * t180;
t167 = t105 * t192;
t166 = t102 * t192;
t165 = t103 * t197;
t163 = t101 * t181;
t162 = t105 * t83;
t159 = qJD(2) * t100 * t226;
t157 = t101 * t6 + t104 * t5;
t151 = t101 * t33 + t104 * t32;
t148 = -t230 + t236;
t147 = t182 * t217;
t146 = t248 * t162;
t21 = -qJ(5) * t219 - t24;
t143 = t103 * t159;
t142 = t106 * t159;
t138 = -t103 * t38 + t59 * t213;
t27 = -t59 * t90 - t229;
t137 = -t101 * t38 + t59 * t206;
t26 = -t104 * t38 - t59 * t207;
t135 = t155 * t248;
t88 = t105 * t209;
t69 = -pkin(5) * t91 - t88;
t131 = t266 * qJD(6) + t69;
t56 = t263 * qJD(4) + t208;
t22 = -t120 + (t103 * t134 + t140) * t100;
t124 = -t10 * t105 - t8 * t102 + (t22 * t102 - t21 * t105) * qJD(4);
t11 = t102 * t128 - t202;
t23 = t120 + (t103 * t136 - t140) * t100;
t123 = -t11 * t102 - t110 * t105 + (-t23 * t102 + t24 * t105) * qJD(4);
t94 = qJ(3) * t250;
t93 = qJ(5) * t249;
t82 = -0.2e1 * t179;
t72 = -0.2e1 * t165;
t71 = 0.2e1 * t165;
t70 = 0.2e1 * t175;
t64 = -t101 * t90 + t184;
t63 = t101 * t91 + t185;
t62 = t102 * t210 + t186;
t61 = -t102 * t207 + t181;
t60 = qJD(4) * t178;
t53 = (pkin(4) * t105 + t223) * qJD(4) + t169;
t52 = 0.2e1 * (-t103 ^ 2 + t106 ^ 2) * t95 * qJD(2);
t50 = t129 + t201;
t49 = t141 * t100;
t47 = -t103 * t188 + t162;
t46 = (t103 * t91 + t182) * t100;
t45 = -t171 + t54;
t44 = -t102 * t174 + t163;
t43 = (-t212 + (pkin(2) * t103 - t224) * qJD(2)) * t100;
t25 = pkin(4) * t58 + t139;
t15 = -pkin(5) * t58 - t21;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t52, 0.2e1 * t142, t72, -0.2e1 * t143, 0, -0.2e1 * t95 * pkin(1) * t214 - 0.2e1 * t177, -0.2e1 * pkin(1) * t197 + 0.2e1 * t54 * t226 (t234 - t106 * t54 + (-t103 * t67 + t106 * t132) * qJD(2)) * t251, 0.2e1 * t132 * t55 - 0.2e1 * t54 * t67, 0, -0.2e1 * t142, 0.2e1 * t143, t71, t52, t72 (t234 - t106 * t45 + (t103 * t48 + t106 * t50) * qJD(2)) * t251, 0.2e1 * t177 + 0.2e1 * (t106 * t43 - t214 * t49) * t100, -0.2e1 * t45 * t226 + 0.2e1 * (-t103 * t43 - t213 * t49) * t100, 0.2e1 * t43 * t49 + 0.2e1 * t45 * t48 + 0.2e1 * t50 * t55, t28, t252, t138 * t251, t259, -t265, t71, 0.2e1 * t35 * t58 + 0.2e1 * t42 * t133 + 0.2e1 * (-t103 * t110 + t213 * t23) * t100, 0.2e1 * t35 * t59 - 0.2e1 * t38 * t42 + 0.2e1 * (t103 * t11 - t213 * t24) * t100, 0.2e1 * t11 * t58 + 0.2e1 * t110 * t59 - 0.2e1 * t133 * t24 + 0.2e1 * t23 * t38, -0.2e1 * t11 * t24 - 0.2e1 * t110 * t23 + 0.2e1 * t35 * t42, t71, -0.2e1 * t138 * t100, t265, t28, t252, t259, 0.2e1 * t10 * t59 + 0.2e1 * t133 * t21 - 0.2e1 * t22 * t38 + 0.2e1 * t8 * t58, -0.2e1 * t13 * t58 - 0.2e1 * t25 * t133 + 0.2e1 * (t10 * t103 + t213 * t22) * t100, -0.2e1 * t13 * t59 + 0.2e1 * t25 * t38 + 0.2e1 * (-t103 * t8 - t21 * t213) * t100, 0.2e1 * t10 * t22 + 0.2e1 * t13 * t25 + 0.2e1 * t21 * t8, 0.2e1 * t40 * t20, -0.2e1 * t19 * t40 - 0.2e1 * t20 * t39, 0.2e1 * t20 * t59 - 0.2e1 * t38 * t40, 0.2e1 * t39 * t19, -0.2e1 * t19 * t59 + 0.2e1 * t38 * t39, t28, 0.2e1 * t15 * t19 + 0.2e1 * t2 * t59 - 0.2e1 * t38 * t5 + 0.2e1 * t39 * t7, 0.2e1 * t1 * t59 + 0.2e1 * t15 * t20 + 0.2e1 * t38 * t6 + 0.2e1 * t40 * t7, 0.2e1 * t1 * t39 - 0.2e1 * t19 * t6 - 0.2e1 * t2 * t40 - 0.2e1 * t20 * t5, -0.2e1 * t1 * t6 + 0.2e1 * t15 * t7 + 0.2e1 * t2 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, -t183, 0, -t55, t54, 0, 0, 0, -t83, t183, 0, 0, 0 (qJD(2) * t154 + qJD(3) * t106) * t100, t55, 0.2e1 * t171 - t54, -pkin(2) * t55 - qJ(3) * t45 - qJD(3) * t48, t27, t255, t47, t257, -t46, 0, -t146 + qJD(3) * t58 - qJ(3) * t241 + t35 * t102 + (t166 + (t89 + t42) * t105) * qJD(4), t147 - qJ(3) * t38 + qJD(3) * t59 + t35 * t105 + (-t102 * t42 + t167) * qJD(4) (-t228 + t110 + (-t24 + t227) * qJD(4)) * t105 + (-t262 + t11 + (t23 - t135) * qJD(4)) * t102, t35 * qJ(3) + t42 * qJD(3) - t123 * t248, 0, -t47, t46, t27, t255, t257 (-t228 + t10 + (t21 + t227) * qJD(4)) * t105 + (-t262 + t8 + (-t22 - t135) * qJD(4)) * t102, -t53 * t58 + t73 * t241 - t13 * t102 + t146 + (-t166 + (-t226 * t73 - t25) * t105) * qJD(4), -t147 - t13 * t105 + t73 * t38 - t53 * t59 + (t102 * t25 - t167) * qJD(4), -t124 * t248 + t13 * t73 + t25 * t53, t40 * t185 + (t102 * t20 + t40 * t91) * t101, -t148 * t91 + (-t237 + t232 + (-t231 - t235) * qJD(6)) * t102 (t20 + t196) * t105 + (t137 - t220) * t102, -t39 * t181 + (t207 * t39 - t233) * t102 (-t19 + t194) * t105 + (t26 + t221) * t102, t27, t18 * t59 - t19 * t74 - t32 * t38 + t39 * t69 + (-t15 * t210 + t2) * t105 + (-qJD(4) * t5 + t15 * t207 - t244) * t102, t17 * t59 - t20 * t74 + t33 * t38 + t40 * t69 + (t15 * t211 + t1) * t105 + (qJD(4) * t6 + t15 * t206 + t245) * t102, t17 * t39 - t18 * t40 - t19 * t33 - t20 * t32 - t156 * t91 + (-qJD(6) * t157 - t1 * t104 - t101 * t2) * t102, -t1 * t33 + t15 * t69 - t17 * t6 + t18 * t5 + t2 * t32 - t7 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t94, t82, t70, 0, t81, 0, 0, 0.2e1 * qJ(3) * t91 + 0.2e1 * qJD(3) * t102, -0.2e1 * qJ(3) * t90 + 0.2e1 * qJD(3) * t105, 0, t94, 0, 0, 0, t82, t70, t81, 0, -0.2e1 * t102 * t53 - 0.2e1 * t73 * t91, -0.2e1 * t105 * t53 + 0.2e1 * t73 * t90, 0.2e1 * t73 * t53, 0.2e1 * t179 * t96 + 0.2e1 * t168, 0.4e1 * t102 * t163 - 0.2e1 * t174 * t97, -0.2e1 * t101 * t175 + 0.2e1 * t102 * t184, 0.2e1 * t179 * t98 - 0.2e1 * t168, -0.2e1 * t102 * t186 - 0.2e1 * t104 * t175, t82, 0.2e1 * (t210 * t74 + t18) * t105 + 0.2e1 * (-qJD(4) * t32 - t104 * t69 - t207 * t74) * t102, 0.2e1 * (t17 - t195) * t105 + 0.2e1 * (qJD(4) * t33 + t101 * t69 - t206 * t74) * t102, -0.2e1 * t150 * t91 + 0.2e1 * (-qJD(6) * t151 - t101 * t18 - t104 * t17) * t102, -0.2e1 * t17 * t33 + 0.2e1 * t18 * t32 - 0.2e1 * t69 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, 0, t55, 0, 0, 0, 0, 0, 0, t47, -t46, t258, t123, 0, 0, 0, 0, 0, 0, t258, -t47, t46, t124, 0, 0, 0, 0, 0, 0 (t19 + t194) * t102 + (-t26 + t221) * t105 (t20 - t196) * t102 + (t137 + t220) * t105 (-t230 - t236) * t90 - t253 * t105 (qJD(4) * t157 + t7) * t102 + (qJD(4) * t15 - t125) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t173, t104 * t173, 0 (qJD(4) * t151 + t69) * t102 + (-qJD(4) * t74 - t3) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (0.1e1 - t239) * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, -t133, t83, -t110, t11, 0, 0, t83, t38, t133, 0, 0, 0, t38 * pkin(4) - qJ(5) * t133 - qJD(5) * t58, t110 - 0.2e1 * t170 (-t127 + 0.2e1 * t189 + 0.2e1 * t203) * t100 + t202, -pkin(4) * t10 - qJ(5) * t8 - qJD(5) * t21, -t207 * t40 + t232, qJD(6) * t148 - t101 * t20 - t233, t26, t206 * t39 + t237, -t137, 0, t38 * t215 + qJ(5) * t19 + qJD(5) * t39 + t245 + (t104 * t15 + t216 * t59) * qJD(6), -t38 * t216 + qJ(5) * t20 + qJD(5) * t40 + t244 + (-t101 * t15 + t215 * t59) * qJD(6) (t20 * t246 - t2) * t104 + (t19 * t246 + t1) * t101 + ((t246 * t39 - t6) * t104 + (-t246 * t40 + t5) * t101) * qJD(6), qJ(5) * t7 + qJD(5) * t15 - t125 * t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, 0, -t91, 0, t187, t88, 0, 0, 0, t90, t91, 0, 0, 0, -t56, -t187, -t88, -t56 * t248, t44, -0.4e1 * t102 * t180 - t240 * t91, -t62, -t44, -t64, 0, t131 * t101 - t254 * t104, t254 * t101 + t131 * t104, -t3, qJ(5) * t69 - qJD(5) * t74 - t246 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, -t91, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t91, t56, 0, 0, 0, 0, 0, 0, t63, t61, -t60, t208 + (-t178 * t246 + t222) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, t93, -0.2e1 * t180, 0.2e1 * t174, 0, 0.2e1 * t180, 0, 0, 0.2e1 * qJ(5) * t206 + 0.2e1 * t101 * qJD(5), -0.2e1 * qJ(5) * t207 + 0.2e1 * qJD(5) * t104, 0, t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, t83, 0, t10, 0, 0, 0, 0, 0, 0, t26, -t137, t253, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, 0, 0, -t187, 0, 0, 0, 0, 0, 0, -t62, -t64, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t19, -t38, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, 0, t61, -t90, t18, t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, t64, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207, 0, -t206, 0, t101 * t204, t104 * t204, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207, -t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
