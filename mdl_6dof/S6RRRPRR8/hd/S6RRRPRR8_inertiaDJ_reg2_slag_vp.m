% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 18:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPRR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR8_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 18:52:22
% EndTime: 2019-03-09 18:52:50
% DurationCPUTime: 11.20s
% Computational Cost: add. (19387->586), mult. (49330->1057), div. (0->0), fcn. (50062->12), ass. (0->244)
t145 = sin(pkin(6));
t148 = sin(qJ(2));
t289 = qJD(2) * t148;
t132 = t145 * t289;
t147 = sin(qJ(3));
t150 = cos(qJ(3));
t295 = t145 * t148;
t304 = cos(pkin(6));
t201 = t147 * t304 + t150 * t295;
t250 = t304 * t150;
t202 = t147 * t295 - t250;
t302 = sin(pkin(12));
t303 = cos(pkin(12));
t177 = t201 * t303 - t202 * t302;
t87 = t201 * t302 + t202 * t303;
t151 = cos(qJ(2));
t269 = pkin(1) * t304;
t195 = pkin(8) * t295 - t151 * t269;
t107 = -pkin(2) * t304 + t195;
t92 = pkin(3) * t202 + t107;
t164 = t87 * pkin(4) - pkin(10) * t177 + t92;
t240 = pkin(3) * t132;
t287 = qJD(3) * t145;
t264 = t148 * t287;
t125 = t147 * t264;
t243 = t304 * qJD(3);
t288 = qJD(2) * t151;
t258 = t145 * t288;
t331 = t243 + t258;
t323 = -t150 * t331 + t125;
t190 = t195 * qJD(2);
t270 = -pkin(2) * t151 - pkin(1);
t214 = -pkin(9) * t148 + t270;
t328 = -t214 * t287 + t190;
t237 = t148 * t269;
t193 = pkin(9) * t304 + t237;
t294 = t145 * t151;
t278 = pkin(8) * t294;
t330 = qJD(3) * (t193 + t278) - qJD(2) * t145 * (pkin(2) * t148 - pkin(9) * t151);
t57 = t328 * t147 - t150 * t330;
t158 = qJ(4) * t323 - qJD(4) * t201 + t240 + t57;
t271 = t147 * t331 + t150 * t264;
t56 = t147 * t330 + t328 * t150;
t162 = -qJ(4) * t271 - qJD(4) * t202 - t56;
t21 = t158 * t302 + t162 * t303;
t335 = -pkin(10) * t132 - qJD(5) * t164 - t21;
t183 = qJ(4) * t304 + t193;
t314 = -qJ(4) - pkin(9);
t206 = t148 * t314 + t270;
t316 = t147 * pkin(8);
t170 = -t183 * t147 + ((-pkin(3) - t316) * t151 + t206 * t150) * t145;
t279 = t150 * pkin(8) * t151;
t173 = t183 * t150 + (t147 * t206 + t279) * t145;
t39 = t170 * t302 + t173 * t303;
t161 = -pkin(10) * t294 + t39;
t178 = -t271 * t302 - t303 * t323;
t245 = qJD(2) * t304;
t227 = t148 * t245;
t233 = t271 * pkin(3);
t68 = t271 * t303 - t302 * t323;
t334 = -pkin(1) * t227 - t68 * pkin(4) - pkin(8) * t258 + pkin(10) * t178 + qJD(5) * t161 - t233;
t252 = qJD(3) * t314;
t198 = qJD(4) * t150 + t147 * t252;
t199 = -qJD(4) * t147 + t150 * t252;
t176 = t198 * t303 + t199 * t302;
t118 = t302 * t147 - t303 * t150;
t119 = t303 * t147 + t302 * t150;
t141 = -pkin(3) * t150 - pkin(2);
t200 = pkin(4) * t118 - pkin(10) * t119 + t141;
t333 = -qJD(5) * t200 - t176;
t112 = t119 * qJD(3);
t113 = t118 * qJD(3);
t182 = t118 * t314;
t286 = qJD(3) * t147;
t274 = pkin(3) * t286;
t332 = -pkin(4) * t112 - pkin(10) * t113 + qJD(5) * t182 - t274;
t146 = sin(qJ(5));
t149 = cos(qJ(5));
t130 = t149 * t294;
t305 = t146 * t177 + t130;
t244 = t305 * qJD(5);
t283 = qJD(5) * t146;
t203 = t149 * t289 + t151 * t283;
t175 = qJD(5) * t177;
t309 = t146 * t178 + t149 * t175;
t322 = -t145 * t203 + t309;
t329 = t146 * t244 - t149 * t322;
t192 = qJD(3) * t202;
t327 = t147 * t192 - t271 * t150;
t319 = cos(qJ(6));
t253 = t319 * qJD(6);
t326 = t319 * qJD(5) + t253;
t282 = qJD(5) * t149;
t293 = t146 * t113;
t208 = t119 * t282 - t293;
t291 = t149 * t113;
t325 = t119 * t283 + t291;
t318 = sin(qJ(6));
t266 = t318 * t146;
t267 = t319 * t149;
t121 = t266 - t267;
t143 = t146 ^ 2;
t144 = t149 ^ 2;
t290 = t143 - t144;
t241 = qJD(5) * t290;
t324 = qJD(5) + qJD(6);
t172 = qJD(5) * t130 - t149 * t178 + (-t132 + t175) * t146;
t73 = -t146 * t294 + t149 * t177;
t166 = -t149 * t172 - t73 * t283;
t31 = t146 * t332 + t149 * t333;
t32 = t146 * t333 - t149 * t332;
t64 = -t146 * t182 + t149 * t200;
t65 = t146 * t200 + t149 * t182;
t321 = t146 * t31 - t149 * t32 + (t146 * t64 - t149 * t65) * qJD(5);
t320 = t150 ^ 2;
t317 = pkin(9) * t145;
t138 = pkin(3) * t302 + pkin(10);
t315 = pkin(11) + t138;
t23 = t146 * t164 + t149 * t161;
t313 = -t303 * t158 + t302 * t162;
t268 = t319 * t146;
t122 = t149 * t318 + t268;
t228 = t318 * t305;
t15 = -qJD(6) * t228 - t172 * t318 + t253 * t73 + t319 * t322;
t229 = t319 * t305;
t52 = t318 * t73 + t229;
t255 = qJD(6) * t318;
t98 = (qJD(5) * t318 + t255) * t146 - t326 * t149;
t312 = -t122 * t15 + t98 * t52;
t311 = -t146 * t322 - t149 * t244;
t236 = t119 * t266;
t48 = -t113 * t268 + (-t318 * t113 + t119 * t326) * t149 - t324 * t236;
t88 = t122 * t119;
t310 = -t122 * t48 + t98 * t88;
t100 = t119 * t314;
t85 = t198 * t302 - t303 * t199;
t308 = t100 * t85;
t99 = t324 * t122;
t307 = t121 * t99;
t306 = t122 * t98;
t115 = t237 + t278;
t111 = qJD(2) * t115;
t301 = t111 * t147;
t300 = t119 * t113;
t299 = t119 * t146;
t298 = t119 * t149;
t297 = t138 * t146;
t296 = t138 * t149;
t292 = t149 * t112;
t285 = qJD(3) * t150;
t284 = qJD(3) * t151;
t281 = t107 * qJD(3);
t54 = 0.2e1 * t87 * t68;
t280 = -0.2e1 * pkin(2) * qJD(3);
t96 = 0.2e1 * t118 * t112;
t139 = -pkin(3) * t303 - pkin(4);
t277 = 0.2e1 * qJD(5) * t139;
t276 = t319 * pkin(5);
t275 = pkin(5) * t283;
t273 = pkin(9) * t285;
t142 = t145 ^ 2;
t265 = t142 * t288;
t263 = t147 * t284;
t261 = t138 * t283;
t259 = t138 * t282;
t257 = t146 * t282;
t256 = t147 * t285;
t251 = t113 * t305;
t242 = -0.4e1 * t146 * t298;
t239 = pkin(5) * t253;
t238 = pkin(5) * t255;
t117 = t119 ^ 2;
t235 = t117 * t257;
t234 = t148 * t265;
t232 = t315 * t319;
t231 = t315 * t318;
t6 = t334 * t146 + t149 * t335;
t7 = t146 * t335 - t334 * t149;
t225 = -t7 * t146 - t6 * t149;
t14 = qJD(6) * t229 + t172 * t319 + t255 * t73 + t318 * t322;
t53 = t319 * t73 - t228;
t224 = -t121 * t14 + t53 * t99;
t47 = -t113 * t121 + t119 * t99;
t89 = t119 * t267 - t236;
t223 = -t121 * t47 + t89 * t99;
t222 = t122 * t68 - t87 * t98;
t46 = t112 * t87 + t118 * t68;
t220 = -t146 * t65 - t149 * t64;
t218 = -t57 * t147 - t56 * t150;
t217 = t112 * t122 - t118 * t98;
t216 = -t112 * t138 - t113 * t139;
t215 = t118 * t138 - t119 * t139;
t213 = t146 * t232;
t212 = t146 * t231;
t19 = -pkin(4) * t132 + t313;
t38 = t170 * t303 - t302 * t173;
t35 = pkin(4) * t294 - t38;
t211 = t19 * t146 + t282 * t35;
t210 = t146 * t68 + t282 * t87;
t209 = t112 * t146 + t118 * t282;
t152 = t68 * pkin(5) + pkin(11) * t172 + t7;
t22 = -t146 * t161 + t149 * t164;
t156 = t87 * pkin(5) - t73 * pkin(11) + t22;
t155 = t319 * t156;
t157 = -pkin(11) * t322 - t6;
t17 = -pkin(11) * t305 + t23;
t1 = -qJD(6) * t155 - t318 * t152 - t319 * t157 + t17 * t255;
t160 = t112 * pkin(5) + pkin(11) * t325 + t32;
t171 = t118 * pkin(5) - pkin(11) * t298 + t64;
t168 = t319 * t171;
t174 = -pkin(11) * t208 - t31;
t58 = -pkin(11) * t299 + t65;
t10 = -qJD(6) * t168 - t318 * t160 - t319 * t174 + t255 * t58;
t204 = t147 * t289 - t150 * t284;
t116 = t315 * t149;
t94 = t116 * t319 - t212;
t184 = qJD(5) * t220 - t146 * t32 - t149 * t31;
t169 = t172 * t146;
t167 = t318 * t171;
t11 = -qJD(6) * t167 + t319 * t160 - t174 * t318 - t253 * t58;
t154 = t318 * t156;
t2 = -qJD(6) * t154 + t319 * t152 - t157 * t318 - t17 * t253;
t124 = -t149 * pkin(5) + t139;
t123 = -0.2e1 * t234;
t93 = -t116 * t318 - t213;
t91 = -t118 * t283 + t292;
t81 = pkin(5) * t299 - t100;
t76 = t150 * t193 + (t147 * t214 + t279) * t145;
t75 = -t147 * t193 + (t150 * t214 - t151 * t316) * t145;
t74 = t233 + t111;
t69 = t119 * t241 + t146 * t291;
t62 = -t112 * t121 - t118 * t99;
t61 = -t94 * qJD(6) + (-t149 * t232 + t212) * qJD(5);
t60 = t116 * t255 + t213 * t324 + t231 * t282;
t59 = pkin(5) * t208 + t85;
t51 = t149 * t68 - t283 * t87;
t36 = -t121 * t68 - t87 * t99;
t29 = t319 * t58 + t167;
t28 = -t318 * t58 + t168;
t26 = pkin(5) * t305 + t35;
t12 = t309 * pkin(5) + (-pkin(4) * t289 - pkin(5) * t203) * t145 + t313;
t9 = t17 * t319 + t154;
t8 = -t17 * t318 + t155;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t234, 0.2e1 * (-t148 ^ 2 + t151 ^ 2) * t142 * qJD(2), 0.2e1 * t245 * t294, t123, -0.2e1 * t145 * t227, 0, -0.2e1 * pkin(1) * t142 * t289 - 0.2e1 * t111 * t304, -0.2e1 * pkin(1) * t265 + 0.2e1 * t190 * t304, 0.2e1 * t111 * t295 - 0.2e1 * t115 * t132 - 0.2e1 * t190 * t294 + 0.2e1 * t195 * t258, 0.2e1 * t111 * t195 - 0.2e1 * t115 * t190, -0.2e1 * t201 * t323, -0.2e1 * t201 * t271 + 0.2e1 * t202 * t323, 0.2e1 * t132 * t201 + 0.2e1 * t294 * t323, 0.2e1 * t202 * t271, -0.2e1 * t132 * t202 + 0.2e1 * t271 * t294, t123, -0.2e1 * t111 * t250 + 0.2e1 * t107 * t271 + 0.2e1 * (-t57 * t151 + (qJD(2) * t75 + t301) * t148) * t145, -0.2e1 * t107 * t323 + 0.2e1 * t111 * t201 - 0.2e1 * t132 * t76 - 0.2e1 * t294 * t56, -0.2e1 * t201 * t57 + 0.2e1 * t202 * t56 - 0.2e1 * t271 * t76 + 0.2e1 * t323 * t75, 0.2e1 * t107 * t111 - 0.2e1 * t56 * t76 + 0.2e1 * t57 * t75, 0.2e1 * t177 * t178, -0.2e1 * t177 * t68 - 0.2e1 * t178 * t87, 0.2e1 * t132 * t177 - 0.2e1 * t178 * t294, t54, 0.2e1 * (t151 * t68 - t289 * t87) * t145, t123, 0.2e1 * t92 * t68 + 0.2e1 * t74 * t87 + 0.2e1 * (t151 * t313 + t289 * t38) * t145, -0.2e1 * t132 * t39 + 0.2e1 * t177 * t74 + 0.2e1 * t178 * t92 + 0.2e1 * t21 * t294, 0.2e1 * t177 * t313 - 0.2e1 * t178 * t38 - 0.2e1 * t21 * t87 - 0.2e1 * t39 * t68, 0.2e1 * t21 * t39 - 0.2e1 * t313 * t38 + 0.2e1 * t74 * t92, -0.2e1 * t73 * t172, 0.2e1 * t172 * t305 - 0.2e1 * t322 * t73, -0.2e1 * t172 * t87 + 0.2e1 * t73 * t68, 0.2e1 * t305 * t322, -0.2e1 * t305 * t68 - 0.2e1 * t322 * t87, t54, 0.2e1 * t19 * t305 + 0.2e1 * t22 * t68 + 0.2e1 * t322 * t35 + 0.2e1 * t7 * t87, -0.2e1 * t172 * t35 + 0.2e1 * t19 * t73 - 0.2e1 * t23 * t68 + 0.2e1 * t6 * t87, 0.2e1 * t172 * t22 - 0.2e1 * t23 * t322 + 0.2e1 * t305 * t6 - 0.2e1 * t7 * t73, 0.2e1 * t19 * t35 + 0.2e1 * t22 * t7 - 0.2e1 * t23 * t6, -0.2e1 * t53 * t14, 0.2e1 * t14 * t52 - 0.2e1 * t15 * t53, -0.2e1 * t14 * t87 + 0.2e1 * t53 * t68, 0.2e1 * t52 * t15, -0.2e1 * t15 * t87 - 0.2e1 * t52 * t68, t54, 0.2e1 * t12 * t52 + 0.2e1 * t15 * t26 + 0.2e1 * t2 * t87 + 0.2e1 * t68 * t8, 0.2e1 * t1 * t87 + 0.2e1 * t12 * t53 - 0.2e1 * t14 * t26 - 0.2e1 * t68 * t9, 0.2e1 * t1 * t52 + 0.2e1 * t14 * t8 - 0.2e1 * t15 * t9 - 0.2e1 * t2 * t53, -0.2e1 * t1 * t9 + 0.2e1 * t12 * t26 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, 0, -t132, 0, -t111, t190, 0, 0, t320 * t264 + (-t125 + (0.2e1 * t243 + t258) * t150) * t147, -t147 * t271 - t201 * t286 + (-t323 - t192) * t150, t204 * t145, t327 (t150 * t289 + t263) * t145, 0, -pkin(2) * t271 - t111 * t150 + t147 * t281 - t204 * t317, pkin(2) * t323 - t263 * t317 + t301 + (-pkin(9) * t132 + t281) * t150, t201 * t273 - t285 * t75 - t286 * t76 + t218 + (-t147 * t323 + t327) * pkin(9), -pkin(2) * t111 + ((-t76 * t147 - t75 * t150) * qJD(3) + t218) * pkin(9), -t113 * t177 + t119 * t178, -t112 * t177 + t113 * t87 - t118 * t178 - t119 * t68 (t113 * t151 + t119 * t289) * t145, t46 (t112 * t151 - t118 * t289) * t145, 0, t87 * t274 + t92 * t112 + t74 * t118 + t141 * t68 + (t100 * t289 + t151 * t85) * t145, -t92 * t113 + t74 * t119 - t132 * t182 + t141 * t178 + t176 * t294 + t177 * t274, -t100 * t178 - t39 * t112 + t38 * t113 - t21 * t118 + t119 * t313 - t176 * t87 + t177 * t85 - t182 * t68, -t100 * t313 + t74 * t141 + t176 * t39 + t182 * t21 + t274 * t92 - t38 * t85, t119 * t166 - t291 * t73, t149 * t251 - t208 * t73 + (t169 + t329) * t119, t73 * t112 - t118 * t172 + t298 * t68 - t325 * t87, -t119 * t311 - t146 * t251, -t112 * t305 - t118 * t322 - t119 * t210 + t293 * t87, t46, -t100 * t322 + t22 * t112 + t7 * t118 + t119 * t211 - t293 * t35 + t305 * t85 + t32 * t87 + t64 * t68, t100 * t172 - t23 * t112 + t6 * t118 + t19 * t298 + t31 * t87 - t325 * t35 - t65 * t68 + t85 * t73, t172 * t64 - t208 * t23 + t22 * t325 - t298 * t7 + t299 * t6 + t305 * t31 - t32 * t73 - t322 * t65, -t100 * t19 + t22 * t32 - t23 * t31 + t35 * t85 - t6 * t65 + t64 * t7, -t14 * t89 - t47 * t53, t14 * t88 - t15 * t89 + t47 * t52 - t48 * t53, t112 * t53 - t118 * t14 - t47 * t87 + t68 * t89, t15 * t88 + t48 * t52, -t112 * t52 - t118 * t15 - t48 * t87 - t68 * t88, t46, t11 * t87 + t112 * t8 + t118 * t2 + t12 * t88 + t15 * t81 + t26 * t48 + t28 * t68 + t52 * t59, t1 * t118 + t10 * t87 - t112 * t9 + t12 * t89 - t14 * t81 - t26 * t47 - t29 * t68 + t53 * t59, t1 * t88 + t10 * t52 - t11 * t53 + t14 * t28 - t15 * t29 - t2 * t89 + t47 * t8 - t48 * t9, -t1 * t29 - t10 * t9 + t11 * t8 + t12 * t81 + t2 * t28 + t26 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t256, 0.2e1 * (-t147 ^ 2 + t320) * qJD(3), 0, -0.2e1 * t256, 0, 0, t147 * t280, t150 * t280, 0, 0, -0.2e1 * t300, -0.2e1 * t112 * t119 + 0.2e1 * t113 * t118, 0, t96, 0, 0, 0.2e1 * t112 * t141 + 0.2e1 * t118 * t274, -0.2e1 * t113 * t141 + 0.2e1 * t119 * t274, 0.2e1 * t100 * t113 - 0.2e1 * t112 * t182 - 0.2e1 * t118 * t176 + 0.2e1 * t85 * t119, 0.2e1 * t141 * t274 + 0.2e1 * t176 * t182 - 0.2e1 * t308, -0.2e1 * t144 * t300 - 0.2e1 * t235, -t113 * t242 + 0.2e1 * t117 * t241, -0.2e1 * t118 * t325 + 0.2e1 * t119 * t292, -0.2e1 * t143 * t300 + 0.2e1 * t235, -0.2e1 * t112 * t299 - 0.2e1 * t118 * t208, t96, -0.2e1 * t100 * t208 + 0.2e1 * t112 * t64 + 0.2e1 * t118 * t32 + 0.2e1 * t299 * t85, 0.2e1 * t100 * t325 - 0.2e1 * t112 * t65 + 0.2e1 * t118 * t31 + 0.2e1 * t298 * t85, -0.2e1 * t220 * t113 + 0.2e1 * t119 * t321, -0.2e1 * t31 * t65 + 0.2e1 * t32 * t64 - 0.2e1 * t308, -0.2e1 * t89 * t47, 0.2e1 * t47 * t88 - 0.2e1 * t48 * t89, 0.2e1 * t112 * t89 - 0.2e1 * t118 * t47, 0.2e1 * t88 * t48, -0.2e1 * t112 * t88 - 0.2e1 * t118 * t48, t96, 0.2e1 * t11 * t118 + 0.2e1 * t112 * t28 + 0.2e1 * t48 * t81 + 0.2e1 * t59 * t88, 0.2e1 * t10 * t118 - 0.2e1 * t112 * t29 - 0.2e1 * t47 * t81 + 0.2e1 * t59 * t89, 0.2e1 * t10 * t88 - 0.2e1 * t11 * t89 + 0.2e1 * t28 * t47 - 0.2e1 * t29 * t48, -0.2e1 * t10 * t29 + 0.2e1 * t11 * t28 + 0.2e1 * t59 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, 0, -t271, t132, t57, t56, 0, 0, 0, 0, t178, 0, -t68, t132, t240 * t303 - t313, -t240 * t302 - t21 (-t178 * t303 - t302 * t68) * pkin(3) (t21 * t302 - t303 * t313) * pkin(3), t282 * t73 - t169, t166 + t311, t210, t329, t51, 0, -t68 * t297 + t139 * (-t132 * t149 + t309) - t19 * t149 + (-t87 * t296 + (-t139 * t294 + t35) * t146) * qJD(5), -t139 * t172 + t261 * t87 - t296 * t68 + t211, t138 * t329 - t172 * t297 - t22 * t282 - t23 * t283 + t259 * t73 + t225, t139 * t19 + ((-t23 * t146 - t22 * t149) * qJD(5) + t225) * t138, -t122 * t14 - t53 * t98, -t224 + t312, t222, t121 * t15 + t52 * t99, t36, 0, t12 * t121 + t124 * t15 + t26 * t99 + t275 * t52 + t61 * t87 + t68 * t93, t12 * t122 - t124 * t14 - t26 * t98 + t275 * t53 + t60 * t87 - t68 * t94, t1 * t121 - t122 * t2 + t14 * t93 - t15 * t94 + t52 * t60 - t53 * t61 + t8 * t98 - t9 * t99, -t1 * t94 + t12 * t124 + t2 * t93 + t26 * t275 - t60 * t9 + t61 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, 0, -t286, 0, -t273, pkin(9) * t286, 0, 0, 0, 0, -t113, 0, -t112, 0, -t85, -t176 (-t112 * t302 + t113 * t303) * pkin(3) (t176 * t302 - t303 * t85) * pkin(3), -t69, qJD(5) * t242 + t113 * t290, t209, t69, t91, 0, -t149 * t85 + t216 * t146 + (-t100 * t146 - t149 * t215) * qJD(5), t146 * t85 + t216 * t149 + (-t100 * t149 + t146 * t215) * qJD(5), t184, t138 * t184 + t139 * t85, -t122 * t47 - t89 * t98, -t223 + t310, t217, t121 * t48 + t88 * t99, t62, 0, t112 * t93 + t118 * t61 + t121 * t59 + t124 * t48 + t275 * t88 + t81 * t99, -t112 * t94 + t118 * t60 + t122 * t59 - t124 * t47 + t275 * t89 - t81 * t98, t10 * t121 - t11 * t122 + t28 * t98 - t29 * t99 + t47 * t93 - t48 * t94 + t60 * t88 - t61 * t89, -t10 * t94 + t11 * t93 + t124 * t59 + t275 * t81 + t28 * t61 - t29 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t257, -0.2e1 * t241, 0, -0.2e1 * t257, 0, 0, t146 * t277, t149 * t277, 0, 0, -0.2e1 * t306, 0.2e1 * t121 * t98 - 0.2e1 * t122 * t99, 0, 0.2e1 * t307, 0, 0, 0.2e1 * t121 * t275 + 0.2e1 * t124 * t99, 0.2e1 * t122 * t275 - 0.2e1 * t124 * t98, 0.2e1 * t121 * t60 - 0.2e1 * t122 * t61 + 0.2e1 * t93 * t98 - 0.2e1 * t94 * t99, 0.2e1 * t124 * t275 - 0.2e1 * t60 * t94 + 0.2e1 * t61 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t178, 0, t74, 0, 0, 0, 0, 0, 0, t51, -t210, -t166 + t311, -t6 * t146 + t7 * t149 + (-t146 * t22 + t149 * t23) * qJD(5), 0, 0, 0, 0, 0, 0, t36, -t222, t224 + t312, -t1 * t122 - t121 * t2 - t8 * t99 - t9 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, -t113, 0, t274, 0, 0, 0, 0, 0, 0, t91, -t209 -(-t143 - t144) * t113, -t321, 0, 0, 0, 0, 0, 0, t62, -t217, t223 + t310, -t10 * t122 - t11 * t121 - t28 * t99 - t29 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121 * t61 - t122 * t60 - t93 * t99 - t94 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t306 + 0.2e1 * t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, 0, -t322, t68, t7, t6, 0, 0, 0, 0, -t14, 0, -t15, t68, -t238 * t87 + t276 * t68 + t2 (-t253 * t87 - t318 * t68) * pkin(5) + t1 (t319 * t14 - t318 * t15 + (t318 * t53 - t319 * t52) * qJD(6)) * pkin(5) (t319 * t2 - t318 * t1 + (-t318 * t8 + t319 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, 0, -t208, t112, t32, t31, 0, 0, 0, 0, -t47, 0, -t48, t112, t112 * t276 - t118 * t238 + t11 (-t112 * t318 - t118 * t253) * pkin(5) + t10 (t319 * t47 - t318 * t48 + (t318 * t89 - t319 * t88) * qJD(6)) * pkin(5) (t319 * t11 - t318 * t10 + (-t28 * t318 + t29 * t319) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, 0, -t283, 0, -t259, t261, 0, 0, 0, 0, -t98, 0, -t99, 0, t61, t60 (t319 * t98 - t318 * t99 + (-t121 * t319 + t122 * t318) * qJD(6)) * pkin(5) (t319 * t61 - t318 * t60 + (-t318 * t93 + t319 * t94) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, -t282, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0 (-t319 * t99 - t318 * t98 + (t121 * t318 + t122 * t319) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t238, -0.2e1 * t239, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14, 0, -t15, t68, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, 0, -t48, t112, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t99, 0, t61, t60, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t98, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, -t239, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
