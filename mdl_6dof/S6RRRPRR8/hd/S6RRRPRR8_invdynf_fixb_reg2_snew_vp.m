% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRRPRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 12:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRRPRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 12:30:15
% EndTime: 2019-05-07 12:30:29
% DurationCPUTime: 14.62s
% Computational Cost: add. (183947->386), mult. (406374->584), div. (0->0), fcn. (334358->14), ass. (0->327)
t2683 = cos(pkin(6));
t2676 = qJD(1) * t2683 + qJD(2);
t2686 = sin(qJ(3));
t2691 = cos(qJ(3));
t2681 = sin(pkin(6));
t2687 = sin(qJ(2));
t2754 = qJD(1) * t2687;
t2739 = t2681 * t2754;
t2649 = t2676 * t2691 - t2686 * t2739;
t2650 = t2676 * t2686 + t2691 * t2739;
t2680 = sin(pkin(12));
t2682 = cos(pkin(12));
t2629 = -t2682 * t2649 + t2650 * t2680;
t2628 = qJD(5) + t2629;
t2623 = qJD(6) + t2628;
t2769 = qJD(6) + t2623;
t2692 = cos(qJ(2));
t2740 = qJDD(1) * t2681;
t2675 = t2692 * t2740;
t2707 = qJD(2) * t2739 - t2675;
t2704 = qJDD(3) + t2707;
t2747 = t2649 * t2650;
t2616 = t2704 + t2747;
t2631 = t2680 * t2649 + t2682 * t2650;
t2744 = t2681 * t2692;
t2738 = qJD(1) * t2744;
t2668 = -qJD(3) + t2738;
t2685 = sin(qJ(5));
t2690 = cos(qJ(5));
t2611 = t2631 * t2685 + t2690 * t2668;
t2613 = t2631 * t2690 - t2668 * t2685;
t2684 = sin(qJ(6));
t2689 = cos(qJ(6));
t2579 = t2689 * t2611 + t2613 * t2684;
t2768 = t2579 ^ 2;
t2581 = -t2611 * t2684 + t2613 * t2689;
t2767 = t2581 ^ 2;
t2766 = t2611 ^ 2;
t2765 = t2613 ^ 2;
t2764 = t2623 ^ 2;
t2763 = t2628 ^ 2;
t2762 = t2629 ^ 2;
t2761 = t2631 ^ 2;
t2760 = t2649 ^ 2;
t2759 = t2650 ^ 2;
t2652 = t2668 ^ 2;
t2758 = t2676 ^ 2;
t2757 = -2 * qJD(4);
t2756 = t2683 * g(3);
t2755 = qJD(1) * t2681;
t2753 = t2579 * t2581;
t2752 = t2611 * t2613;
t2751 = t2628 * t2611;
t2750 = t2629 * t2631;
t2749 = t2629 * t2668;
t2748 = t2631 * t2668;
t2746 = t2649 * t2668;
t2694 = qJD(1) ^ 2;
t2745 = t2681 ^ 2 * t2694;
t2743 = -qJD(3) - t2668;
t2742 = qJD(5) - t2628;
t2741 = qJD(6) - t2623;
t2688 = sin(qJ(1));
t2693 = cos(qJ(1));
t2670 = -g(1) * t2693 - g(2) * t2688;
t2653 = -pkin(1) * t2694 + pkin(8) * t2740 + t2670;
t2656 = (-pkin(2) * t2692 - pkin(9) * t2687) * t2755;
t2669 = t2688 * g(1) - t2693 * g(2);
t2702 = t2694 * t2681 * pkin(8) + qJDD(1) * pkin(1) + t2669;
t2700 = t2683 * t2702;
t2698 = (-t2681 * g(3) + t2700) * t2687;
t2730 = qJDD(1) * t2683 + qJDD(2);
t2696 = t2730 * pkin(9) - t2758 * pkin(2) + (t2656 * t2755 + t2653) * t2692 + t2698;
t2657 = qJD(2) * t2738 + t2687 * t2740;
t2697 = -t2675 * pkin(2) - t2657 * pkin(9) - t2756 + ((-pkin(9) * t2676 * t2692 + (qJD(2) + t2676) * t2687 * pkin(2)) * qJD(1) - t2702) * t2681;
t2566 = t2686 * t2697 + t2691 * t2696;
t2731 = t2686 * t2657 - t2691 * t2730;
t2620 = -qJD(3) * t2650 - t2731;
t2635 = -pkin(3) * t2668 - qJ(4) * t2650;
t2549 = -pkin(3) * t2760 + qJ(4) * t2620 + t2635 * t2668 + t2566;
t2565 = -t2686 * t2696 + t2691 * t2697;
t2703 = -t2691 * t2657 - t2686 * t2730;
t2621 = t2649 * qJD(3) - t2703;
t2695 = t2565 + (-t2621 - t2746) * qJ(4) + t2616 * pkin(3);
t2509 = t2682 * t2549 + t2629 * t2757 + t2680 * t2695;
t2593 = pkin(4) * t2629 - pkin(10) * t2631;
t2490 = -pkin(4) * t2652 + pkin(10) * t2704 - t2629 * t2593 + t2509;
t2732 = t2687 * t2653 - t2692 * t2700;
t2598 = -t2730 * pkin(2) - t2758 * pkin(9) + (g(3) * t2692 + t2656 * t2754) * t2681 + t2732;
t2556 = -t2620 * pkin(3) - t2760 * qJ(4) + t2650 * t2635 + qJDD(4) + t2598;
t2733 = -t2682 * t2620 + t2621 * t2680;
t2571 = t2733 - t2748;
t2588 = t2620 * t2680 + t2621 * t2682;
t2735 = -t2588 - t2749;
t2517 = pkin(4) * t2571 + pkin(10) * t2735 + t2556;
t2476 = t2690 * t2490 + t2685 * t2517;
t2475 = -t2685 * t2490 + t2690 * t2517;
t2737 = t2680 * t2549 - t2682 * t2695;
t2699 = -t2690 * t2588 - t2685 * t2704;
t2560 = -t2611 * qJD(5) - t2699;
t2734 = t2685 * t2588 - t2690 * t2704;
t2705 = qJD(5) * t2613 + t2734;
t2736 = -t2684 * t2560 - t2689 * t2705;
t2729 = t2676 * t2738;
t2728 = qJDD(5) + t2733;
t2550 = t2728 - t2752;
t2459 = (-t2560 - t2751) * pkin(11) + t2550 * pkin(5) + t2475;
t2584 = pkin(5) * t2628 - pkin(11) * t2613;
t2464 = -pkin(5) * t2766 - pkin(11) * t2705 - t2628 * t2584 + t2476;
t2439 = t2459 * t2689 - t2464 * t2684;
t2440 = t2459 * t2684 + t2464 * t2689;
t2423 = t2439 * t2689 + t2440 * t2684;
t2424 = -t2439 * t2684 + t2440 * t2689;
t2416 = -t2423 * t2685 + t2424 * t2690;
t2489 = -t2704 * pkin(4) - t2652 * pkin(10) + ((2 * qJD(4)) + t2593) * t2631 + t2737;
t2481 = pkin(5) * t2705 - pkin(11) * t2766 + t2613 * t2584 + t2489;
t2411 = t2416 * t2680 - t2481 * t2682;
t2412 = t2416 * t2682 + t2481 * t2680;
t2408 = -t2411 * t2686 + t2412 * t2691;
t2415 = t2423 * t2690 + t2424 * t2685;
t2727 = t2408 * t2687 - t2415 * t2692;
t2453 = -t2475 * t2685 + t2476 * t2690;
t2441 = t2453 * t2680 - t2489 * t2682;
t2442 = t2453 * t2682 + t2489 * t2680;
t2426 = -t2441 * t2686 + t2442 * t2691;
t2452 = t2475 * t2690 + t2476 * t2685;
t2726 = t2426 * t2687 - t2452 * t2692;
t2501 = -t2581 * t2741 + t2736;
t2701 = -t2689 * t2560 + t2684 * t2705;
t2503 = t2579 * t2741 + t2701;
t2473 = t2501 * t2684 + t2503 * t2689;
t2474 = t2501 * t2689 - t2503 * t2684;
t2451 = -t2473 * t2685 + t2474 * t2690;
t2528 = -t2767 - t2768;
t2447 = t2451 * t2680 - t2528 * t2682;
t2448 = t2451 * t2682 + t2528 * t2680;
t2428 = -t2447 * t2686 + t2448 * t2691;
t2450 = t2473 * t2690 + t2474 * t2685;
t2725 = t2428 * t2687 - t2450 * t2692;
t2706 = -qJDD(6) - t2728;
t2531 = -t2706 - t2753;
t2541 = -t2764 - t2768;
t2504 = t2531 * t2689 + t2541 * t2684;
t2505 = -t2531 * t2684 + t2541 * t2689;
t2478 = -t2504 * t2685 + t2505 * t2690;
t2500 = t2581 * t2769 - t2736;
t2457 = t2478 * t2680 - t2500 * t2682;
t2458 = t2478 * t2682 + t2500 * t2680;
t2434 = -t2457 * t2686 + t2458 * t2691;
t2477 = t2504 * t2690 + t2505 * t2685;
t2724 = t2434 * t2687 - t2477 * t2692;
t2532 = t2706 - t2753;
t2553 = -t2764 - t2767;
t2513 = t2532 * t2684 + t2553 * t2689;
t2514 = t2532 * t2689 - t2553 * t2684;
t2483 = -t2513 * t2685 + t2514 * t2690;
t2502 = -t2579 * t2769 - t2701;
t2460 = t2483 * t2680 - t2502 * t2682;
t2461 = t2483 * t2682 + t2502 * t2680;
t2438 = -t2460 * t2686 + t2461 * t2691;
t2482 = t2513 * t2690 + t2514 * t2685;
t2723 = t2438 * t2687 - t2482 * t2692;
t2508 = t2631 * t2757 - t2737;
t2479 = t2508 * t2682 + t2509 * t2680;
t2480 = -t2508 * t2680 + t2509 * t2682;
t2455 = -t2479 * t2686 + t2480 * t2691;
t2722 = t2455 * t2687 - t2556 * t2692;
t2543 = -t2613 * t2742 - t2734;
t2545 = t2611 * t2742 + t2699;
t2512 = t2543 * t2690 - t2545 * t2685;
t2562 = -t2765 - t2766;
t2494 = t2512 * t2680 - t2562 * t2682;
t2495 = t2512 * t2682 + t2562 * t2680;
t2466 = -t2494 * t2686 + t2495 * t2691;
t2511 = t2543 * t2685 + t2545 * t2690;
t2721 = t2466 * t2687 - t2511 * t2692;
t2568 = -t2763 - t2766;
t2523 = -t2550 * t2685 + t2568 * t2690;
t2542 = (qJD(5) + t2628) * t2613 + t2734;
t2496 = t2523 * t2680 - t2542 * t2682;
t2497 = t2523 * t2682 + t2542 * t2680;
t2470 = -t2496 * t2686 + t2497 * t2691;
t2522 = t2550 * t2690 + t2568 * t2685;
t2720 = t2470 * t2687 - t2522 * t2692;
t2551 = -t2728 - t2752;
t2575 = -t2763 - t2765;
t2527 = t2551 * t2690 - t2575 * t2685;
t2544 = t2560 - t2751;
t2498 = t2527 * t2680 - t2544 * t2682;
t2499 = t2527 * t2682 + t2544 * t2680;
t2472 = -t2498 * t2686 + t2499 * t2691;
t2526 = t2551 * t2685 + t2575 * t2690;
t2719 = t2472 * t2687 - t2526 * t2692;
t2572 = -t2733 - t2748;
t2574 = -t2588 + t2749;
t2535 = t2572 * t2680 + t2574 * t2682;
t2536 = t2572 * t2682 - t2574 * t2680;
t2507 = -t2535 * t2686 + t2536 * t2691;
t2576 = -t2761 - t2762;
t2718 = t2507 * t2687 - t2576 * t2692;
t2586 = t2704 - t2750;
t2590 = -t2652 - t2762;
t2554 = t2586 * t2682 + t2590 * t2680;
t2555 = -t2586 * t2680 + t2590 * t2682;
t2521 = -t2554 * t2686 + t2555 * t2691;
t2717 = t2521 * t2687 - t2571 * t2692;
t2585 = -t2704 - t2750;
t2607 = -t2652 - t2761;
t2563 = t2585 * t2680 + t2607 * t2682;
t2564 = t2585 * t2682 - t2607 * t2680;
t2530 = -t2563 * t2686 + t2564 * t2691;
t2716 = t2530 * t2687 + t2692 * t2735;
t2534 = -t2565 * t2686 + t2566 * t2691;
t2715 = t2534 * t2687 - t2598 * t2692;
t2602 = t2650 * t2743 - t2731;
t2604 = t2649 * t2743 + t2703;
t2570 = t2602 * t2691 - t2604 * t2686;
t2614 = -t2759 - t2760;
t2714 = t2570 * t2687 - t2614 * t2692;
t2622 = -t2652 - t2760;
t2583 = -t2616 * t2686 + t2622 * t2691;
t2601 = (qJD(3) - t2668) * t2650 + t2731;
t2713 = t2583 * t2687 - t2601 * t2692;
t2615 = -t2704 + t2747;
t2633 = -t2652 - t2759;
t2592 = t2615 * t2691 - t2633 * t2686;
t2603 = t2621 - t2746;
t2712 = t2592 * t2687 - t2603 * t2692;
t2624 = -g(3) * t2744 - t2732;
t2625 = t2692 * t2653 + t2698;
t2711 = t2624 * t2692 + t2625 * t2687;
t2637 = t2729 - t2657;
t2660 = t2676 * t2739;
t2638 = t2660 - t2707;
t2710 = t2637 * t2692 + t2638 * t2687;
t2678 = t2687 ^ 2;
t2646 = -t2678 * t2745 - t2758;
t2667 = t2692 * t2687 * t2745;
t2655 = t2667 - t2730;
t2709 = t2646 * t2692 + t2655 * t2687;
t2654 = t2667 + t2730;
t2679 = t2692 ^ 2;
t2658 = -t2679 * t2745 - t2758;
t2708 = t2654 * t2692 + t2658 * t2687;
t2665 = -qJDD(1) * t2688 - t2693 * t2694;
t2664 = qJDD(1) * t2693 - t2688 * t2694;
t2659 = (-t2678 - t2679) * t2745;
t2641 = -t2681 * t2702 - t2756;
t2639 = t2660 + t2707;
t2636 = t2729 + t2657;
t2634 = -t2654 * t2687 + t2658 * t2692;
t2632 = -t2646 * t2687 + t2655 * t2692;
t2608 = -t2637 * t2687 + t2638 * t2692;
t2606 = -t2681 * t2639 + t2683 * t2708;
t2605 = t2683 * t2639 + t2681 * t2708;
t2600 = -t2681 * t2636 + t2683 * t2709;
t2599 = t2683 * t2636 + t2681 * t2709;
t2597 = -t2681 * t2659 + t2683 * t2710;
t2596 = t2683 * t2659 + t2681 * t2710;
t2591 = t2615 * t2686 + t2633 * t2691;
t2589 = -t2624 * t2687 + t2625 * t2692;
t2582 = t2616 * t2691 + t2622 * t2686;
t2578 = -t2681 * t2641 + t2683 * t2711;
t2577 = t2683 * t2641 + t2681 * t2711;
t2569 = t2602 * t2686 + t2604 * t2691;
t2561 = t2592 * t2692 + t2603 * t2687;
t2557 = t2583 * t2692 + t2601 * t2687;
t2552 = t2570 * t2692 + t2614 * t2687;
t2548 = -t2681 * t2591 + t2683 * t2712;
t2547 = t2683 * t2591 + t2681 * t2712;
t2540 = -t2681 * t2582 + t2683 * t2713;
t2539 = t2683 * t2582 + t2681 * t2713;
t2533 = t2565 * t2691 + t2566 * t2686;
t2529 = t2563 * t2691 + t2564 * t2686;
t2525 = -t2681 * t2569 + t2683 * t2714;
t2524 = t2683 * t2569 + t2681 * t2714;
t2520 = t2554 * t2691 + t2555 * t2686;
t2519 = t2534 * t2692 + t2598 * t2687;
t2518 = t2530 * t2692 - t2687 * t2735;
t2510 = t2521 * t2692 + t2571 * t2687;
t2506 = t2535 * t2691 + t2536 * t2686;
t2493 = t2507 * t2692 + t2576 * t2687;
t2492 = -t2681 * t2533 + t2683 * t2715;
t2491 = t2683 * t2533 + t2681 * t2715;
t2487 = -t2681 * t2529 + t2683 * t2716;
t2486 = t2683 * t2529 + t2681 * t2716;
t2485 = -t2681 * t2520 + t2683 * t2717;
t2484 = t2683 * t2520 + t2681 * t2717;
t2471 = t2498 * t2691 + t2499 * t2686;
t2469 = t2496 * t2691 + t2497 * t2686;
t2468 = -t2681 * t2506 + t2683 * t2718;
t2467 = t2683 * t2506 + t2681 * t2718;
t2465 = t2494 * t2691 + t2495 * t2686;
t2463 = t2472 * t2692 + t2526 * t2687;
t2462 = t2470 * t2692 + t2522 * t2687;
t2456 = t2466 * t2692 + t2511 * t2687;
t2454 = t2479 * t2691 + t2480 * t2686;
t2449 = t2455 * t2692 + t2556 * t2687;
t2446 = -t2681 * t2471 + t2683 * t2719;
t2445 = t2683 * t2471 + t2681 * t2719;
t2444 = -t2681 * t2469 + t2683 * t2720;
t2443 = t2683 * t2469 + t2681 * t2720;
t2437 = t2460 * t2691 + t2461 * t2686;
t2436 = -t2681 * t2465 + t2683 * t2721;
t2435 = t2683 * t2465 + t2681 * t2721;
t2433 = t2457 * t2691 + t2458 * t2686;
t2432 = t2438 * t2692 + t2482 * t2687;
t2431 = t2434 * t2692 + t2477 * t2687;
t2430 = -t2681 * t2454 + t2683 * t2722;
t2429 = t2683 * t2454 + t2681 * t2722;
t2427 = t2447 * t2691 + t2448 * t2686;
t2425 = t2441 * t2691 + t2442 * t2686;
t2422 = -t2681 * t2437 + t2683 * t2723;
t2421 = t2683 * t2437 + t2681 * t2723;
t2420 = t2428 * t2692 + t2450 * t2687;
t2419 = -t2681 * t2433 + t2683 * t2724;
t2418 = t2683 * t2433 + t2681 * t2724;
t2417 = t2426 * t2692 + t2452 * t2687;
t2414 = -t2681 * t2427 + t2683 * t2725;
t2413 = t2683 * t2427 + t2681 * t2725;
t2410 = -t2681 * t2425 + t2683 * t2726;
t2409 = t2683 * t2425 + t2681 * t2726;
t2407 = t2411 * t2691 + t2412 * t2686;
t2406 = t2408 * t2692 + t2415 * t2687;
t2405 = -t2681 * t2407 + t2683 * t2727;
t2404 = t2683 * t2407 + t2681 * t2727;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2665, -t2664, 0, -t2669 * t2688 + t2670 * t2693, 0, 0, 0, 0, 0, 0, -t2606 * t2688 + t2634 * t2693, -t2600 * t2688 + t2632 * t2693, -t2597 * t2688 + t2608 * t2693, -t2578 * t2688 + t2589 * t2693, 0, 0, 0, 0, 0, 0, -t2540 * t2688 + t2557 * t2693, -t2548 * t2688 + t2561 * t2693, -t2525 * t2688 + t2552 * t2693, -t2492 * t2688 + t2519 * t2693, 0, 0, 0, 0, 0, 0, -t2485 * t2688 + t2510 * t2693, -t2487 * t2688 + t2518 * t2693, -t2468 * t2688 + t2493 * t2693, -t2430 * t2688 + t2449 * t2693, 0, 0, 0, 0, 0, 0, -t2444 * t2688 + t2462 * t2693, -t2446 * t2688 + t2463 * t2693, -t2436 * t2688 + t2456 * t2693, -t2410 * t2688 + t2417 * t2693, 0, 0, 0, 0, 0, 0, -t2419 * t2688 + t2431 * t2693, -t2422 * t2688 + t2432 * t2693, -t2414 * t2688 + t2420 * t2693, -t2405 * t2688 + t2406 * t2693; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2664, t2665, 0, t2669 * t2693 + t2670 * t2688, 0, 0, 0, 0, 0, 0, t2606 * t2693 + t2634 * t2688, t2600 * t2693 + t2632 * t2688, t2597 * t2693 + t2608 * t2688, t2578 * t2693 + t2589 * t2688, 0, 0, 0, 0, 0, 0, t2540 * t2693 + t2557 * t2688, t2548 * t2693 + t2561 * t2688, t2525 * t2693 + t2552 * t2688, t2492 * t2693 + t2519 * t2688, 0, 0, 0, 0, 0, 0, t2485 * t2693 + t2510 * t2688, t2487 * t2693 + t2518 * t2688, t2468 * t2693 + t2493 * t2688, t2430 * t2693 + t2449 * t2688, 0, 0, 0, 0, 0, 0, t2444 * t2693 + t2462 * t2688, t2446 * t2693 + t2463 * t2688, t2436 * t2693 + t2456 * t2688, t2410 * t2693 + t2417 * t2688, 0, 0, 0, 0, 0, 0, t2419 * t2693 + t2431 * t2688, t2422 * t2693 + t2432 * t2688, t2414 * t2693 + t2420 * t2688, t2405 * t2693 + t2406 * t2688; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2605, t2599, t2596, t2577, 0, 0, 0, 0, 0, 0, t2539, t2547, t2524, t2491, 0, 0, 0, 0, 0, 0, t2484, t2486, t2467, t2429, 0, 0, 0, 0, 0, 0, t2443, t2445, t2435, t2409, 0, 0, 0, 0, 0, 0, t2418, t2421, t2413, t2404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2694, -qJDD(1), 0, t2670, 0, 0, 0, 0, 0, 0, t2634, t2632, t2608, t2589, 0, 0, 0, 0, 0, 0, t2557, t2561, t2552, t2519, 0, 0, 0, 0, 0, 0, t2510, t2518, t2493, t2449, 0, 0, 0, 0, 0, 0, t2462, t2463, t2456, t2417, 0, 0, 0, 0, 0, 0, t2431, t2432, t2420, t2406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2694, 0, t2669, 0, 0, 0, 0, 0, 0, t2606, t2600, t2597, t2578, 0, 0, 0, 0, 0, 0, t2540, t2548, t2525, t2492, 0, 0, 0, 0, 0, 0, t2485, t2487, t2468, t2430, 0, 0, 0, 0, 0, 0, t2444, t2446, t2436, t2410, 0, 0, 0, 0, 0, 0, t2419, t2422, t2414, t2405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2605, t2599, t2596, t2577, 0, 0, 0, 0, 0, 0, t2539, t2547, t2524, t2491, 0, 0, 0, 0, 0, 0, t2484, t2486, t2467, t2429, 0, 0, 0, 0, 0, 0, t2443, t2445, t2435, t2409, 0, 0, 0, 0, 0, 0, t2418, t2421, t2413, t2404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2658, t2655, t2638, t2625, 0, 0, 0, 0, 0, 0, t2583, t2592, t2570, t2534, 0, 0, 0, 0, 0, 0, t2521, t2530, t2507, t2455, 0, 0, 0, 0, 0, 0, t2470, t2472, t2466, t2426, 0, 0, 0, 0, 0, 0, t2434, t2438, t2428, t2408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2654, t2646, t2637, t2624, 0, 0, 0, 0, 0, 0, -t2601, -t2603, -t2614, -t2598, 0, 0, 0, 0, 0, 0, -t2571, t2735, -t2576, -t2556, 0, 0, 0, 0, 0, 0, -t2522, -t2526, -t2511, -t2452, 0, 0, 0, 0, 0, 0, -t2477, -t2482, -t2450, -t2415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2639, t2636, t2659, t2641, 0, 0, 0, 0, 0, 0, t2582, t2591, t2569, t2533, 0, 0, 0, 0, 0, 0, t2520, t2529, t2506, t2454, 0, 0, 0, 0, 0, 0, t2469, t2471, t2465, t2425, 0, 0, 0, 0, 0, 0, t2433, t2437, t2427, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2622, t2615, t2602, t2566, 0, 0, 0, 0, 0, 0, t2555, t2564, t2536, t2480, 0, 0, 0, 0, 0, 0, t2497, t2499, t2495, t2442, 0, 0, 0, 0, 0, 0, t2458, t2461, t2448, t2412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2616, t2633, t2604, t2565, 0, 0, 0, 0, 0, 0, t2554, t2563, t2535, t2479, 0, 0, 0, 0, 0, 0, t2496, t2498, t2494, t2441, 0, 0, 0, 0, 0, 0, t2457, t2460, t2447, t2411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2601, t2603, t2614, t2598, 0, 0, 0, 0, 0, 0, t2571, -t2735, t2576, t2556, 0, 0, 0, 0, 0, 0, t2522, t2526, t2511, t2452, 0, 0, 0, 0, 0, 0, t2477, t2482, t2450, t2415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2590, t2585, t2572, t2509, 0, 0, 0, 0, 0, 0, t2523, t2527, t2512, t2453, 0, 0, 0, 0, 0, 0, t2478, t2483, t2451, t2416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2586, t2607, t2574, t2508, 0, 0, 0, 0, 0, 0, -t2542, -t2544, -t2562, -t2489, 0, 0, 0, 0, 0, 0, -t2500, -t2502, -t2528, -t2481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2571, -t2735, t2576, t2556, 0, 0, 0, 0, 0, 0, t2522, t2526, t2511, t2452, 0, 0, 0, 0, 0, 0, t2477, t2482, t2450, t2415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2568, t2551, t2543, t2476, 0, 0, 0, 0, 0, 0, t2505, t2514, t2474, t2424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2550, t2575, t2545, t2475, 0, 0, 0, 0, 0, 0, t2504, t2513, t2473, t2423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2542, t2544, t2562, t2489, 0, 0, 0, 0, 0, 0, t2500, t2502, t2528, t2481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2541, t2532, t2501, t2440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2531, t2553, t2503, t2439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2500, t2502, t2528, t2481;];
f_new_reg  = t1;
