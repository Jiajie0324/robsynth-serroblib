% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,d6,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 12:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRR8_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRR8_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRR8_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRR8_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRR8_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPRR8_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 12:25:18
% EndTime: 2019-05-07 12:26:20
% DurationCPUTime: 26.90s
% Computational Cost: add. (258129->781), mult. (569597->1174), div. (0->0), fcn. (468276->14), ass. (0->503)
t415 = sin(qJ(6));
t417 = sin(qJ(3));
t421 = cos(qJ(3));
t414 = cos(pkin(6));
t469 = qJD(1) * t414 + qJD(2);
t418 = sin(qJ(2));
t412 = sin(pkin(6));
t498 = qJD(1) * t412;
t479 = t418 * t498;
t386 = -t417 * t479 + t421 * t469;
t387 = t417 * t469 + t421 * t479;
t411 = sin(pkin(12));
t413 = cos(pkin(12));
t366 = t411 * t386 + t413 * t387;
t422 = cos(qJ(2));
t478 = t422 * t498;
t402 = -qJD(3) + t478;
t416 = sin(qJ(5));
t420 = cos(qJ(5));
t339 = t366 * t416 + t420 * t402;
t340 = t366 * t420 - t402 * t416;
t419 = cos(qJ(6));
t296 = t419 * t339 + t340 * t415;
t298 = -t339 * t415 + t340 * t419;
t250 = t298 * t296;
t489 = qJD(1) * qJD(2);
t475 = t422 * t489;
t488 = qJDD(1) * t412;
t392 = t412 * t475 + t418 * t488;
t468 = qJDD(1) * t414 + qJDD(2);
t470 = t392 * t417 - t421 * t468;
t351 = -qJD(3) * t387 - t470;
t445 = -t421 * t392 - t417 * t468;
t352 = t386 * qJD(3) - t445;
t471 = -t413 * t351 + t352 * t411;
t312 = qJDD(5) + t471;
t306 = qJDD(6) + t312;
t559 = -t250 + t306;
t567 = t415 * t559;
t300 = t340 * t339;
t557 = -t300 + t312;
t566 = t416 * t557;
t565 = t419 * t559;
t564 = t420 * t557;
t512 = t366 * t402;
t286 = t471 - t512;
t451 = -qJDD(1) * t422 + t418 * t489;
t447 = t451 * t412;
t440 = qJDD(3) + t447;
t465 = t469 ^ 2;
t408 = t412 ^ 2;
t553 = qJD(1) ^ 2;
t496 = t408 * t553;
t364 = -t413 * t386 + t387 * t411;
t513 = t366 * t364;
t433 = t440 - t513;
t563 = t411 * t433;
t562 = t413 * t433;
t511 = t386 * t387;
t432 = t440 + t511;
t561 = t417 * t432;
t560 = t421 * t432;
t315 = t351 * t411 + t352 * t413;
t428 = -t420 * t315 - t416 * t440;
t263 = -t339 * qJD(5) - t428;
t427 = -t416 * t315 + t420 * t440;
t426 = t340 * qJD(5) - t427;
t194 = -t296 * qJD(6) + t419 * t263 - t415 * t426;
t361 = qJD(5) + t364;
t355 = qJD(6) + t361;
t272 = t355 * t296;
t558 = -t272 + t194;
t313 = t361 * t339;
t243 = t313 + t263;
t347 = t364 * t402;
t289 = t315 + t347;
t375 = t386 * t402;
t332 = t375 + t352;
t556 = -t465 * pkin(2) + t468 * pkin(9);
t549 = sin(qJ(1));
t550 = cos(qJ(1));
t450 = g(1) * t550 + g(2) * t549;
t439 = pkin(8) * t488 - t450;
t538 = t553 * pkin(1);
t431 = t439 - t538;
t449 = g(1) * t549 - g(2) * t550;
t444 = qJDD(1) * pkin(1) + t449;
t495 = t412 * t553;
t430 = pkin(8) * t495 + t444;
t429 = t414 * t430;
t505 = t412 * t422;
t467 = g(3) * t505 - t422 * t429;
t356 = t418 * t431 + t467;
t506 = t412 * t418;
t407 = g(3) * t506;
t357 = t418 * t429 + t422 * t431 - t407;
t555 = t418 * t356 + t422 * t357;
t473 = t263 * t415 + t419 * t426;
t159 = (qJD(6) - t355) * t298 + t473;
t239 = (qJD(5) - t361) * t340 - t427;
t328 = (qJD(3) + t402) * t387 + t470;
t294 = t296 ^ 2;
t295 = t298 ^ 2;
t554 = t339 ^ 2;
t338 = t340 ^ 2;
t354 = t355 ^ 2;
t360 = t361 ^ 2;
t362 = t364 ^ 2;
t363 = t366 ^ 2;
t384 = t386 ^ 2;
t385 = t387 ^ 2;
t389 = t402 ^ 2;
t552 = 2 * qJD(4);
t497 = qJD(4) * t364;
t358 = -0.2e1 * t497;
t547 = pkin(2) * t422;
t464 = -pkin(9) * t418 - t547;
t455 = t422 * t464;
t424 = t455 * t496 + t357 + t556;
t541 = pkin(9) * t422;
t548 = pkin(2) * t418;
t454 = (-t541 + 0.2e1 * t548) * qJD(2);
t539 = t414 * g(3);
t462 = -t392 * pkin(9) - t539;
t463 = -t541 + t548;
t481 = -pkin(1) - t547;
t540 = t412 * pkin(8);
t425 = (t481 * qJDD(1) + ((t414 * t463 - t540) * qJD(1) + t454) * qJD(1) - t449) * t412 + t462;
t269 = t417 * t425 + t421 * t424;
t369 = -pkin(3) * t402 - qJ(4) * t387;
t246 = -pkin(3) * t384 + qJ(4) * t351 + t369 * t402 + t269;
t423 = pkin(3) * t432 - qJ(4) * t332 - t417 * t424 + t421 * t425;
t499 = t413 * t246 + t411 * t423;
t172 = t358 + t499;
t319 = pkin(4) * t364 - pkin(10) * t366;
t143 = -pkin(4) * t389 + pkin(10) * t440 - t364 * t319 + t172;
t325 = -t468 * pkin(2) - t465 * pkin(9) + t467 + (t439 + (t408 * t464 - pkin(1)) * t553) * t418;
t260 = -t351 * pkin(3) - t384 * qJ(4) + t387 * t369 + qJDD(4) + t325;
t192 = pkin(4) * t286 - pkin(10) * t289 + t260;
t120 = t143 * t416 - t420 * t192;
t83 = pkin(5) * t557 - pkin(11) * t243 - t120;
t121 = t420 * t143 + t416 * t192;
t305 = pkin(5) * t361 - pkin(11) * t340;
t92 = -pkin(5) * t554 - pkin(11) * t426 - t361 * t305 + t121;
t55 = t415 * t92 - t419 * t83;
t56 = t415 * t83 + t419 * t92;
t31 = t415 * t56 - t419 * t55;
t551 = pkin(5) * t31;
t474 = t246 * t411 - t413 * t423;
t171 = t366 * t552 + t474;
t124 = -t171 * t413 + t172 * t411;
t546 = pkin(3) * t124;
t287 = t471 + t512;
t290 = t315 - t347;
t229 = -t287 * t411 - t290 * t413;
t545 = pkin(3) * t229;
t544 = pkin(4) * t411;
t162 = t272 + t194;
t116 = -t159 * t415 - t162 * t419;
t543 = pkin(5) * t116;
t542 = pkin(8) * t417;
t537 = t31 * t416;
t536 = t31 * t420;
t535 = t124 * t417;
t534 = t124 * t421;
t142 = -t440 * pkin(4) - t389 * pkin(10) + (t552 + t319) * t366 + t474;
t128 = pkin(5) * t426 - pkin(11) * t554 + t305 * t340 + t142;
t533 = t128 * t415;
t532 = t128 * t419;
t531 = t142 * t416;
t530 = t142 * t420;
t212 = t250 + t306;
t529 = t212 * t415;
t528 = t212 * t419;
t253 = t300 + t312;
t527 = t253 * t416;
t526 = t253 * t420;
t525 = t260 * t411;
t524 = t260 * t413;
t309 = -t440 - t513;
t523 = t309 * t411;
t522 = t309 * t413;
t521 = t325 * t417;
t520 = t325 * t421;
t342 = -t440 + t511;
t519 = t342 * t417;
t518 = t342 * t421;
t517 = t355 * t415;
t516 = t355 * t419;
t515 = t361 * t416;
t514 = t361 * t420;
t510 = t402 * t411;
t509 = t402 * t413;
t508 = t402 * t417;
t507 = t402 * t421;
t504 = t414 * t418;
t401 = t422 * t418 * t496;
t391 = t401 + t468;
t502 = t418 * t391;
t390 = -t401 + t468;
t500 = t422 * t390;
t494 = -qJD(3) + t402;
t491 = qJD(5) + t361;
t487 = t411 * t250;
t486 = t413 * t250;
t485 = t411 * t300;
t484 = t413 * t300;
t483 = t422 * t513;
t482 = t422 * t511;
t480 = -pkin(4) * t413 - pkin(3);
t409 = t418 ^ 2;
t477 = t409 * t496;
t410 = t422 ^ 2;
t476 = t410 * t496;
t32 = t415 * t55 + t419 * t56;
t74 = t120 * t416 + t420 * t121;
t125 = t171 * t411 + t413 * t172;
t268 = t417 * (t422 * (-t450 - t538) + t444 * t504 - t407 + t556) - t421 * t462 + (t421 * t449 + (-t421 * t481 + t422 * t542) * qJDD(1) + (((t421 * pkin(8) + t417 * t455) * t412 + (t418 * t542 - t421 * t463) * t414) * qJD(1) - t421 * t454) * qJD(1)) * t412;
t215 = t268 * t417 + t421 * t269;
t334 = -t363 - t389;
t266 = t334 * t413 + t523;
t466 = pkin(3) * t266 - t499;
t73 = -t120 * t420 + t121 * t416;
t460 = t268 * t421 - t269 * t417;
t459 = t408 * t418 * t475;
t458 = -pkin(1) + t464;
t238 = -t354 - t294;
t165 = t238 * t415 + t565;
t456 = pkin(5) * t165 - t55;
t453 = t469 * t498;
t60 = -t142 * t413 + t411 * t74;
t452 = pkin(3) * t60 - pkin(4) * t142 + pkin(10) * t74;
t255 = -t295 - t354;
t181 = t255 * t419 - t529;
t448 = pkin(5) * t181 - t56;
t316 = -t389 - t362;
t258 = t316 * t411 + t562;
t446 = pkin(3) * t258 - t171;
t278 = -t360 - t554;
t204 = t278 * t420 - t566;
t240 = -t340 * t491 + t427;
t150 = t204 * t411 + t240 * t413;
t443 = pkin(3) * t150 + pkin(4) * t240 + pkin(10) * t204 - t530;
t292 = -t338 - t360;
t207 = -t292 * t416 - t526;
t244 = t339 * t491 + t428;
t156 = t207 * t411 + t244 * t413;
t442 = pkin(3) * t156 + pkin(4) * t244 + pkin(10) * t207 + t531;
t180 = -t239 * t420 + t243 * t416;
t264 = t338 + t554;
t144 = t180 * t411 + t264 * t413;
t438 = pkin(3) * t144 + pkin(4) * t264 + pkin(10) * t180 + t74;
t208 = -t294 - t295;
t118 = -t159 * t419 + t162 * t415;
t27 = -pkin(5) * t208 + pkin(11) * t118 + t32;
t29 = -pkin(11) * t116 - t31;
t72 = -t116 * t416 + t118 * t420;
t65 = -t208 * t413 + t411 * t72;
t437 = pkin(3) * t65 - pkin(4) * t208 + pkin(10) * t72 + t27 * t420 + t29 * t416;
t166 = t238 * t419 - t567;
t123 = -t165 * t416 + t166 * t420;
t158 = (qJD(6) + t355) * t298 + t473;
t77 = -pkin(5) * t158 + pkin(11) * t166 - t532;
t79 = t123 * t411 - t158 * t413;
t81 = -pkin(11) * t165 + t533;
t436 = pkin(3) * t79 - pkin(4) * t158 + pkin(10) * t123 + t416 * t81 + t420 * t77;
t182 = -t255 * t415 - t528;
t132 = -t181 * t416 + t182 * t420;
t78 = -pkin(5) * t558 + pkin(11) * t182 + t533;
t84 = t132 * t411 - t413 * t558;
t86 = -pkin(11) * t181 + t532;
t435 = pkin(3) * t84 - pkin(4) * t558 + pkin(10) * t132 + t416 * t86 + t420 * t78;
t19 = t32 * t420 - t537;
t15 = -t128 * t413 + t19 * t411;
t30 = -pkin(5) * t128 + pkin(11) * t32;
t434 = pkin(3) * t15 - pkin(4) * t128 + pkin(10) * t19 - pkin(11) * t537 + t30 * t420;
t396 = t422 * t453;
t395 = t418 * t453;
t394 = (t409 - t410) * t496;
t393 = -t465 - t476;
t382 = -t477 - t465;
t377 = t440 * t505;
t376 = t412 * t430 + t539;
t374 = -t395 - t447;
t373 = t395 - t447;
t372 = -t396 + t392;
t371 = -t385 + t389;
t370 = t384 - t389;
t368 = -t385 - t389;
t367 = t385 - t384;
t353 = -t389 - t384;
t346 = -t363 + t389;
t345 = t362 - t389;
t341 = t384 + t385;
t336 = (-t386 * t417 + t387 * t421) * t402;
t333 = t386 * t494 + t445;
t331 = -t375 + t352;
t329 = t387 * t494 - t470;
t327 = t352 * t417 - t387 * t507;
t326 = t351 * t421 + t386 * t508;
t322 = t370 * t417 - t518;
t321 = t371 * t421 + t561;
t320 = t363 - t362;
t318 = -t368 * t417 + t518;
t317 = t368 * t421 + t519;
t308 = -t338 + t360;
t307 = -t360 + t554;
t304 = t353 * t421 - t561;
t303 = t353 * t417 + t560;
t302 = (t364 * t413 - t366 * t411) * t402;
t301 = (t364 * t411 + t366 * t413) * t402;
t299 = t338 - t554;
t293 = -t362 - t363;
t285 = -t328 * t421 + t332 * t417;
t283 = t329 * t417 + t331 * t421;
t282 = t315 * t413 + t366 * t510;
t281 = t315 * t411 - t366 * t509;
t280 = -t364 * t509 + t411 * t471;
t279 = -t364 * t510 - t413 * t471;
t277 = t345 * t413 + t523;
t276 = -t346 * t411 + t562;
t275 = t345 * t411 - t522;
t274 = t346 * t413 + t563;
t271 = -t295 + t354;
t270 = t294 - t354;
t267 = -t334 * t411 + t522;
t259 = t316 * t413 - t563;
t257 = (-t339 * t420 + t340 * t416) * t361;
t256 = (-t339 * t416 - t340 * t420) * t361;
t251 = t301 * t421 + t302 * t417;
t249 = t295 - t294;
t248 = pkin(2) * t333 + pkin(9) * t318 + t521;
t247 = pkin(2) * t329 + pkin(9) * t304 - t520;
t242 = -t313 + t263;
t237 = t263 * t420 - t340 * t515;
t236 = t263 * t416 + t340 * t514;
t235 = t339 * t514 + t416 * t426;
t234 = -t339 * t515 + t420 * t426;
t231 = -t287 * t413 + t290 * t411;
t230 = -t286 * t413 - t289 * t411;
t228 = -t286 * t411 + t289 * t413;
t227 = t257 * t413 + t312 * t411;
t226 = t257 * t411 - t312 * t413;
t225 = t281 * t421 + t282 * t417;
t224 = t279 * t421 + t280 * t417;
t223 = t307 * t420 - t527;
t222 = -t308 * t416 + t564;
t221 = t307 * t416 + t526;
t220 = t308 * t420 + t566;
t219 = t275 * t421 + t277 * t417;
t218 = t274 * t421 + t276 * t417;
t217 = (-t296 * t419 + t298 * t415) * t355;
t216 = (-t296 * t415 - t298 * t419) * t355;
t210 = -t266 * t417 + t267 * t421;
t209 = t266 * t421 + t267 * t417;
t206 = t292 * t420 - t527;
t205 = -qJ(4) * t266 + t524;
t203 = t278 * t416 + t564;
t202 = -qJ(4) * t258 + t525;
t201 = t237 * t413 + t485;
t200 = t235 * t413 - t485;
t199 = t237 * t411 - t484;
t198 = t235 * t411 + t484;
t197 = -t258 * t417 + t259 * t421;
t196 = t258 * t421 + t259 * t417;
t195 = -pkin(2) * t325 + pkin(9) * t215;
t193 = -qJD(6) * t298 - t473;
t189 = t270 * t419 - t529;
t188 = -t271 * t415 + t565;
t187 = t270 * t415 + t528;
t186 = t271 * t419 + t567;
t185 = -pkin(3) * t289 + qJ(4) * t267 + t525;
t184 = pkin(2) * t341 + pkin(9) * t285 + t215;
t183 = -pkin(3) * t286 + qJ(4) * t259 - t524;
t179 = t240 * t420 - t242 * t416;
t178 = -t239 * t416 - t243 * t420;
t177 = t240 * t416 + t242 * t420;
t176 = t223 * t413 - t239 * t411;
t175 = t222 * t413 + t243 * t411;
t174 = t223 * t411 + t239 * t413;
t173 = t222 * t411 - t243 * t413;
t170 = -t229 * t417 + t231 * t421;
t169 = t229 * t421 + t231 * t417;
t168 = t228 * t421 + t230 * t417;
t164 = t226 * t421 + t227 * t417;
t157 = t207 * t413 - t244 * t411;
t155 = t194 * t419 - t298 * t517;
t154 = t194 * t415 + t298 * t516;
t153 = -t193 * t415 + t296 * t516;
t152 = t193 * t419 + t296 * t517;
t151 = t204 * t413 - t240 * t411;
t149 = -t216 * t416 + t217 * t420;
t148 = t216 * t420 + t217 * t416;
t147 = t179 * t413 + t299 * t411;
t146 = t179 * t411 - t299 * t413;
t145 = t180 * t413 - t264 * t411;
t140 = t149 * t413 + t306 * t411;
t139 = t149 * t411 - t306 * t413;
t138 = t199 * t421 + t201 * t417;
t137 = t198 * t421 + t200 * t417;
t136 = -t187 * t416 + t189 * t420;
t135 = -t186 * t416 + t188 * t420;
t134 = t187 * t420 + t189 * t416;
t133 = t186 * t420 + t188 * t416;
t131 = t181 * t420 + t182 * t416;
t130 = -pkin(10) * t206 + t530;
t129 = -pkin(10) * t203 + t531;
t127 = t174 * t421 + t176 * t417;
t126 = t173 * t421 + t175 * t417;
t122 = t165 * t420 + t166 * t416;
t117 = -t158 * t419 - t415 * t558;
t115 = -t158 * t415 + t419 * t558;
t114 = -t156 * t417 + t157 * t421;
t113 = t156 * t421 + t157 * t417;
t112 = -t154 * t416 + t155 * t420;
t111 = -t152 * t416 + t153 * t420;
t110 = t154 * t420 + t155 * t416;
t109 = t152 * t420 + t153 * t416;
t108 = -t150 * t417 + t151 * t421;
t107 = t150 * t421 + t151 * t417;
t106 = t146 * t421 + t147 * t417;
t105 = -pkin(2) * t289 + pkin(9) * t210 + t185 * t421 + t205 * t417;
t104 = -pkin(3) * t260 + qJ(4) * t125;
t103 = -t144 * t417 + t145 * t421;
t102 = t144 * t421 + t145 * t417;
t101 = -pkin(2) * t286 + pkin(9) * t197 + t183 * t421 + t202 * t417;
t100 = -qJ(4) * t229 - t124;
t99 = t112 * t413 + t487;
t98 = t111 * t413 - t487;
t97 = t112 * t411 - t486;
t96 = t111 * t411 + t486;
t95 = t139 * t421 + t140 * t417;
t94 = -pkin(4) * t206 + t121;
t93 = -pkin(4) * t203 + t120;
t91 = -pkin(3) * t293 + qJ(4) * t231 + t125;
t90 = t136 * t413 - t159 * t411;
t89 = t135 * t413 + t162 * t411;
t88 = t136 * t411 + t159 * t413;
t87 = t135 * t411 - t162 * t413;
t85 = t132 * t413 + t411 * t558;
t80 = t123 * t413 + t158 * t411;
t76 = t125 * t421 - t535;
t75 = t125 * t417 + t534;
t71 = -t115 * t416 + t117 * t420;
t70 = t116 * t420 + t118 * t416;
t69 = t115 * t420 + t117 * t416;
t68 = t249 * t411 + t413 * t71;
t67 = -t249 * t413 + t411 * t71;
t66 = t208 * t411 + t413 * t72;
t64 = t417 * t99 + t421 * t97;
t63 = t417 * t98 + t421 * t96;
t62 = -pkin(10) * t178 - t73;
t61 = t142 * t411 + t413 * t74;
t59 = t417 * t90 + t421 * t88;
t58 = t417 * t89 + t421 * t87;
t57 = -qJ(4) * t156 + t130 * t413 - t411 * t94;
t53 = -qJ(4) * t150 + t129 * t413 - t411 * t93;
t52 = -t417 * t84 + t421 * t85;
t51 = t417 * t85 + t421 * t84;
t50 = -pkin(3) * t206 + qJ(4) * t157 + t130 * t411 + t413 * t94;
t49 = -t417 * t79 + t421 * t80;
t48 = t417 * t80 + t421 * t79;
t47 = -pkin(3) * t203 + qJ(4) * t151 + t129 * t411 + t413 * t93;
t46 = -pkin(4) * t70 - t543;
t45 = -pkin(2) * t293 + pkin(9) * t170 + t100 * t417 + t421 * t91;
t44 = -qJ(4) * t144 + t178 * t544 + t413 * t62;
t43 = qJ(4) * t145 + t178 * t480 + t411 * t62;
t42 = -pkin(4) * t131 - t448;
t41 = -pkin(10) * t131 - t416 * t78 + t420 * t86;
t40 = -pkin(4) * t122 - t456;
t39 = -pkin(2) * t260 + pkin(9) * t76 - qJ(4) * t535 + t104 * t421;
t38 = -pkin(10) * t122 - t416 * t77 + t420 * t81;
t37 = t417 * t68 + t421 * t67;
t36 = -t417 * t65 + t421 * t66;
t35 = t417 * t66 + t421 * t65;
t34 = -t417 * t60 + t421 * t61;
t33 = t417 * t61 + t421 * t60;
t28 = -qJ(4) * t60 + (-pkin(10) * t413 + t544) * t73;
t26 = -pkin(2) * t206 + pkin(9) * t114 + t417 * t57 + t421 * t50;
t25 = -pkin(2) * t203 + pkin(9) * t108 + t417 * t53 + t421 * t47;
t24 = qJ(4) * t61 + (-pkin(10) * t411 + t480) * t73;
t23 = -pkin(2) * t178 + pkin(9) * t103 + t417 * t44 + t421 * t43;
t22 = -qJ(4) * t84 + t41 * t413 - t411 * t42;
t21 = -qJ(4) * t79 + t38 * t413 - t40 * t411;
t20 = -pkin(3) * t131 + qJ(4) * t85 + t41 * t411 + t413 * t42;
t18 = t32 * t416 + t536;
t17 = -pkin(3) * t122 + qJ(4) * t80 + t38 * t411 + t40 * t413;
t16 = t128 * t411 + t19 * t413;
t14 = -pkin(10) * t70 - t27 * t416 + t29 * t420;
t13 = -pkin(4) * t18 - t551;
t12 = -qJ(4) * t65 + t14 * t413 - t411 * t46;
t11 = -pkin(10) * t18 - pkin(11) * t536 - t30 * t416;
t10 = -pkin(2) * t73 + pkin(9) * t34 + t24 * t421 + t28 * t417;
t9 = -pkin(3) * t70 + qJ(4) * t66 + t14 * t411 + t413 * t46;
t8 = -t15 * t417 + t16 * t421;
t7 = t15 * t421 + t16 * t417;
t6 = -pkin(2) * t131 + pkin(9) * t52 + t20 * t421 + t22 * t417;
t5 = -pkin(2) * t122 + pkin(9) * t49 + t17 * t421 + t21 * t417;
t4 = -pkin(2) * t70 + pkin(9) * t36 + t12 * t417 + t421 * t9;
t3 = -qJ(4) * t15 + t11 * t413 - t13 * t411;
t2 = -pkin(3) * t18 + qJ(4) * t16 + t11 * t411 + t13 * t413;
t1 = -pkin(2) * t18 + pkin(9) * t8 + t2 * t421 + t3 * t417;
t54 = [0, 0, 0, 0, 0, qJDD(1), t449, t450, 0, 0, t392 * t506 + t459, t414 * t394 + (t418 * t374 + t422 * (t396 + t392)) * t412, t414 * t372 + (t502 + t422 * (t465 - t477)) * t412, -t408 * t422 * t451 - t459, t414 * t373 + (t418 * (-t465 + t476) + t500) * t412, t414 * t468, (-t356 + pkin(1) * (t391 * t422 + t393 * t418)) * t414 + (t422 * t376 + pkin(1) * t374 + pkin(8) * (t393 * t422 - t502)) * t412, -t376 * t506 - t414 * t357 + pkin(1) * (-t390 * t504 + t414 * t422 * t382 - t412 * (t469 * t478 + t392)) + (-t418 * t382 - t500) * t540, pkin(1) * ((-t372 * t422 + t373 * t418) * t414 - (-t409 - t410) * t408 * t495) + (t418 * t372 + t373 * t422) * t540 + t555 * t412, pkin(1) * (t412 * t376 + (-t356 * t422 + t357 * t418) * t414) + t555 * t540, t414 * t327 + (t418 * (t352 * t421 + t387 * t508) + t482) * t412, t414 * t283 + (t418 * (t329 * t421 - t331 * t417) - t422 * t367) * t412, t414 * t321 + (t418 * (-t371 * t417 + t560) - t422 * t332) * t412, t414 * t326 + (t418 * (-t351 * t417 + t386 * t507) - t482) * t412, t414 * t322 + (t418 * (t370 * t421 + t519) + t422 * t328) * t412, t414 * t336 - t377 + (-t386 * t421 - t387 * t417) * t402 * t506, (-pkin(9) * t303 + t521) * t506 + (-pkin(2) * t303 + t268) * t505 + t414 * t247 + pkin(1) * (-t412 * t303 + (t304 * t418 + t329 * t422) * t414) + (t422 * t304 - t418 * t329) * t540, (t248 + pkin(1) * (t318 * t418 + t333 * t422)) * t414 + (t418 * (-pkin(9) * t317 + t520) + t422 * (-pkin(2) * t317 + t269) - pkin(1) * t317 + pkin(8) * (t318 * t422 - t418 * t333)) * t412, (t184 + pkin(1) * (t285 * t418 + t341 * t422)) * t414 + (t418 * t460 + pkin(8) * (t285 * t422 - t418 * t341) + t458 * (-t328 * t417 - t332 * t421)) * t412, (t195 + pkin(1) * (t215 * t418 - t325 * t422)) * t414 + (pkin(8) * (t215 * t422 + t418 * t325) - t458 * t460) * t412, t414 * t225 + (t418 * (-t281 * t417 + t282 * t421) - t483) * t412, t414 * t168 + (t418 * (-t228 * t417 + t230 * t421) - t422 * t320) * t412, t414 * t218 + (t418 * (-t274 * t417 + t276 * t421) - t422 * t290) * t412, t414 * t224 + (t418 * (-t279 * t417 + t280 * t421) + t483) * t412, t414 * t219 + (t418 * (-t275 * t417 + t277 * t421) + t422 * t287) * t412, (-t301 * t417 + t302 * t421) * t506 - t377 + t414 * t251, (t101 + pkin(1) * (t197 * t418 - t286 * t422)) * t414 + (t418 * (-pkin(9) * t196 - t183 * t417 + t202 * t421) + t422 * (-pkin(2) * t196 - t446) - pkin(1) * t196 + pkin(8) * (t197 * t422 + t418 * t286)) * t412, (t105 + pkin(1) * (t210 * t418 - t289 * t422)) * t414 + (t418 * (-pkin(9) * t209 - t185 * t417 + t205 * t421) + t422 * (-pkin(2) * t209 + t358 - t466) - pkin(1) * t209 + pkin(8) * (t210 * t422 + t289 * t418)) * t412, (t45 + pkin(1) * (t170 * t418 - t293 * t422)) * t414 + (t418 * (-pkin(9) * t169 + t100 * t421 - t417 * t91) + t422 * (-pkin(2) * t169 - t545) - pkin(1) * t169 + pkin(8) * (t170 * t422 + t418 * t293)) * t412, (t39 + pkin(1) * (-t260 * t422 + t418 * t76)) * t414 + (t418 * (-pkin(9) * t75 - qJ(4) * t534 - t104 * t417) + t422 * (-pkin(2) * t75 - t546) - pkin(1) * t75 + pkin(8) * (t418 * t260 + t422 * t76)) * t412, t414 * t138 + (t418 * (-t199 * t417 + t201 * t421) - t422 * t236) * t412, t414 * t106 + (t418 * (-t146 * t417 + t147 * t421) - t422 * t177) * t412, t414 * t126 + (t418 * (-t173 * t417 + t175 * t421) - t422 * t220) * t412, t414 * t137 + (t418 * (-t198 * t417 + t200 * t421) + t422 * t234) * t412, t414 * t127 + (t418 * (-t174 * t417 + t176 * t421) - t422 * t221) * t412, t414 * t164 + (t418 * (-t226 * t417 + t227 * t421) - t422 * t256) * t412, (t25 + pkin(1) * (t108 * t418 - t203 * t422)) * t414 + (t418 * (-pkin(9) * t107 - t417 * t47 + t421 * t53) + t422 * (-pkin(2) * t107 - t443) - pkin(1) * t107 + pkin(8) * (t108 * t422 + t418 * t203)) * t412, (t26 + pkin(1) * (t114 * t418 - t206 * t422)) * t414 + (t418 * (-pkin(9) * t113 - t417 * t50 + t421 * t57) + t422 * (-pkin(2) * t113 - t442) - pkin(1) * t113 + pkin(8) * (t114 * t422 + t418 * t206)) * t412, (t23 + pkin(1) * (t103 * t418 - t178 * t422)) * t414 + (t418 * (-pkin(9) * t102 - t417 * t43 + t421 * t44) + t422 * (-pkin(2) * t102 - t438) - pkin(1) * t102 + pkin(8) * (t103 * t422 + t418 * t178)) * t412, (t10 + pkin(1) * (t34 * t418 - t422 * t73)) * t414 + (t418 * (-pkin(9) * t33 - t24 * t417 + t28 * t421) + t422 * (-pkin(2) * t33 - t452) - pkin(1) * t33 + pkin(8) * (t34 * t422 + t418 * t73)) * t412, t414 * t64 + (t418 * (-t417 * t97 + t421 * t99) - t422 * t110) * t412, t414 * t37 + (t418 * (-t417 * t67 + t421 * t68) - t422 * t69) * t412, t414 * t58 + (t418 * (-t417 * t87 + t421 * t89) - t422 * t133) * t412, t414 * t63 + (t418 * (-t417 * t96 + t421 * t98) - t422 * t109) * t412, t414 * t59 + (t418 * (-t417 * t88 + t421 * t90) - t422 * t134) * t412, t414 * t95 + (t418 * (-t139 * t417 + t140 * t421) - t422 * t148) * t412, (t5 + pkin(1) * (-t122 * t422 + t418 * t49)) * t414 + (t418 * (-pkin(9) * t48 - t17 * t417 + t21 * t421) + t422 * (-pkin(2) * t48 - t436) - pkin(1) * t48 + pkin(8) * (t418 * t122 + t422 * t49)) * t412, (t6 + pkin(1) * (-t131 * t422 + t418 * t52)) * t414 + (t418 * (-pkin(9) * t51 - t20 * t417 + t22 * t421) + t422 * (-pkin(2) * t51 - t435) - pkin(1) * t51 + pkin(8) * (t418 * t131 + t422 * t52)) * t412, (t4 + pkin(1) * (t36 * t418 - t422 * t70)) * t414 + (t418 * (-pkin(9) * t35 + t12 * t421 - t417 * t9) + t422 * (-pkin(2) * t35 - t437) - pkin(1) * t35 + pkin(8) * (t36 * t422 + t418 * t70)) * t412, (t1 + pkin(1) * (-t18 * t422 + t418 * t8)) * t414 + (t418 * (-pkin(9) * t7 - t2 * t417 + t3 * t421) + t422 * (-pkin(2) * t7 - t434) - pkin(1) * t7 + pkin(8) * (t418 * t18 + t422 * t8)) * t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, t394, t372, t401, t373, t468, -t356, -t357, 0, 0, t327, t283, t321, t326, t322, t336, t247, t248, t184, t195, t225, t168, t218, t224, t219, t251, t101, t105, t45, t39, t138, t106, t126, t137, t127, t164, t25, t26, t23, t10, t64, t37, t58, t63, t59, t95, t5, t6, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t511, t367, t332, t511, -t328, t440, -t268, -t269, 0, 0, t513, t320, t290, -t513, -t287, t440, t446, t466 + 0.2e1 * t497, t545, t546, t236, t177, t220, -t234, t221, t256, t443, t442, t438, t452, t110, t69, t133, t109, t134, t148, t436, t435, t437, t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t289, t293, t260, 0, 0, 0, 0, 0, 0, t203, t206, t178, t73, 0, 0, 0, 0, 0, 0, t122, t131, t70, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, t299, t243, -t300, -t239, t312, -t120, -t121, 0, 0, t250, t249, t162, -t250, -t159, t306, t456, t448, t543, t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t249, t162, -t250, -t159, t306, -t55, -t56, 0, 0;];
tauJ_reg  = t54;
