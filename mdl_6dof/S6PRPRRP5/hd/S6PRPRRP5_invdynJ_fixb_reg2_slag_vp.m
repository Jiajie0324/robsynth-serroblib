% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRPRRP5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRP5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRP5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP5_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:16:50
% EndTime: 2019-03-08 20:16:58
% DurationCPUTime: 5.08s
% Computational Cost: add. (4365->501), mult. (9126->645), div. (0->0), fcn. (6657->10), ass. (0->271)
t171 = sin(qJ(5));
t174 = cos(qJ(5));
t267 = t174 * qJD(4);
t175 = cos(qJ(4));
t279 = qJD(2) * t175;
t128 = t171 * t279 - t267;
t172 = sin(qJ(4));
t280 = qJD(2) * t172;
t156 = qJD(5) + t280;
t313 = t128 * t156;
t246 = t172 * t267;
t269 = qJD(5) * t175;
t194 = t171 * t269 + t246;
t258 = t175 * qJDD(2);
t57 = qJD(2) * t194 - qJD(5) * t267 - t171 * qJDD(4) - t174 * t258;
t364 = -t57 - t313;
t168 = sin(pkin(6));
t173 = sin(qJ(2));
t303 = t168 * t173;
t169 = cos(pkin(6));
t318 = cos(pkin(10));
t229 = t318 * t173;
t167 = sin(pkin(10));
t176 = cos(qJ(2));
t304 = t167 * t176;
t112 = t169 * t229 + t304;
t228 = t318 * t176;
t305 = t167 * t173;
t114 = -t169 * t305 + t228;
t357 = -g(1) * t114 - g(2) * t112;
t363 = g(3) * t303 - t357;
t177 = -pkin(2) - pkin(8);
t285 = qJD(1) * t168;
t241 = t176 * t285;
t215 = qJD(3) - t241;
t117 = t177 * qJD(2) + t215;
t284 = qJD(1) * t169;
t239 = qJD(4) * t284;
t263 = qJDD(1) * t169;
t275 = qJD(4) * t172;
t242 = t173 * t285;
t143 = qJD(2) * t242;
t264 = qJDD(1) * t168;
t235 = t176 * t264;
t201 = qJDD(3) + t143 - t235;
t83 = t177 * qJDD(2) + t201;
t224 = t117 * t275 + t172 * t263 + (t239 - t83) * t175;
t274 = qJD(4) * t175;
t255 = -t117 * t274 - t172 * t83 - t175 * t263;
t30 = -t172 * t239 - t255;
t150 = t172 * t284;
t80 = t117 * t175 - t150;
t283 = qJD(1) * t175;
t240 = t169 * t283;
t81 = t117 * t172 + t240;
t183 = -(t172 * t80 - t175 * t81) * qJD(4) + t30 * t172 - t224 * t175;
t111 = -t169 * t228 + t305;
t113 = t169 * t304 + t229;
t302 = t168 * t176;
t204 = g(1) * t113 + g(2) * t111 - g(3) * t302;
t362 = t183 - t204;
t265 = qJD(2) * qJD(4);
t361 = -t172 * t265 + t258;
t115 = t169 * t172 + t175 * t302;
t306 = t167 * t168;
t68 = -t113 * t175 + t172 * t306;
t230 = t168 * t318;
t70 = t111 * t175 + t172 * t230;
t198 = g(1) * t68 - g(2) * t70 + g(3) * t115;
t218 = pkin(4) * t175 + pkin(9) * t172;
t125 = qJD(4) * t218 + qJD(3);
t217 = pkin(4) * t172 - pkin(9) * t175;
t134 = qJ(3) + t217;
t295 = t172 * t177;
t92 = t171 * t134 + t174 * t295;
t299 = t171 * t173;
t94 = (-t172 * t299 + t174 * t176) * t168;
t360 = -qJD(1) * t94 - t92 * qJD(5) + t174 * t125;
t273 = qJD(4) * t177;
t245 = t175 * t273;
t270 = qJD(5) * t174;
t294 = t173 * t174;
t297 = t171 * t176;
t95 = (t172 * t294 + t297) * t168;
t359 = -qJD(1) * t95 + t171 * t125 + t134 * t270 + t174 * t245;
t276 = qJD(4) * t171;
t130 = t174 * t279 + t276;
t310 = t130 * t156;
t272 = qJD(5) * t130;
t58 = -t174 * qJDD(4) + t361 * t171 + t272;
t358 = t58 + t310;
t356 = pkin(5) * t58 + qJDD(6);
t69 = t113 * t172 + t175 * t306;
t71 = -t111 * t172 + t175 * t230;
t253 = t172 * t302;
t116 = t169 * t175 - t253;
t75 = -t116 * t171 + t168 * t294;
t355 = -g(3) * t75 - g(2) * (t112 * t174 + t171 * t71) - g(1) * (t114 * t174 - t171 * t69);
t290 = qJDD(1) - g(3);
t354 = -t290 * t303 - t357;
t282 = qJD(2) * qJ(3);
t133 = t242 + t282;
t353 = qJD(4) * (-t133 + t242 - t282) - qJDD(4) * t177;
t352 = t130 ^ 2;
t345 = pkin(5) * t128;
t344 = pkin(5) * t171;
t340 = t111 * pkin(8);
t339 = t113 * pkin(8);
t237 = t175 * t265;
t259 = t172 * qJDD(2);
t124 = qJDD(5) + t237 + t259;
t338 = t124 * pkin(5);
t337 = qJ(6) + pkin(9);
t336 = t169 ^ 2 * qJDD(1) - g(3);
t234 = -t171 * t177 + pkin(5);
t266 = t174 * qJD(6);
t271 = qJD(5) * t171;
t335 = qJ(6) * t246 + (qJ(6) * t271 + qJD(4) * t234 - t266) * t175 + t360;
t244 = t174 * t269;
t334 = -qJ(6) * t244 + (-qJD(6) * t175 + (qJ(6) * qJD(4) - qJD(5) * t177) * t172) * t171 + t359;
t66 = qJD(4) * pkin(9) + t81;
t90 = qJD(2) * t134 + t242;
t33 = -t171 * t66 + t174 * t90;
t23 = -qJ(6) * t130 + t33;
t16 = pkin(5) * t156 + t23;
t333 = -t23 + t16;
t252 = t171 * t295;
t332 = -qJD(5) * t252 + t359;
t331 = -t171 * t245 + t360;
t316 = qJDD(4) * pkin(4);
t29 = t224 - t316;
t13 = t29 + t356;
t330 = t13 * t171;
t329 = t156 * t33;
t236 = t173 * t264;
t262 = qJDD(2) * qJ(3);
t84 = t236 + t262 + (qJD(3) + t241) * qJD(2);
t328 = t173 * t84;
t34 = t171 * t90 + t174 * t66;
t24 = -qJ(6) * t128 + t34;
t327 = t24 * t156;
t326 = t29 * t171;
t325 = t34 * t156;
t324 = t57 * qJ(6);
t323 = t57 * t171;
t322 = t58 * qJ(6);
t321 = t58 * t174;
t231 = qJD(5) * t337;
t132 = t218 * qJD(2);
t50 = t171 * t132 + t174 * t80;
t320 = t266 - t50 + (-qJ(6) * t280 - t231) * t171;
t296 = t172 * t174;
t49 = t174 * t132 - t171 * t80;
t319 = -t171 * qJD(6) - t174 * t231 - (pkin(5) * t175 + qJ(6) * t296) * qJD(2) - t49;
t317 = qJDD(2) * pkin(2);
t315 = t111 * t171;
t314 = t113 * t171;
t312 = t128 * t171;
t311 = t130 * t128;
t309 = t130 * t171;
t308 = t130 * t174;
t307 = t133 * t176;
t301 = t171 * t124;
t300 = t171 * t172;
t298 = t171 * t175;
t293 = t174 * t124;
t292 = t174 * t175;
t179 = qJD(2) ^ 2;
t291 = t176 * t179;
t289 = pkin(2) * t302 + qJ(3) * t303;
t165 = t172 ^ 2;
t166 = t175 ^ 2;
t288 = t165 - t166;
t287 = t165 + t166;
t178 = qJD(4) ^ 2;
t286 = -t178 - t179;
t281 = qJD(2) * t168;
t278 = qJD(4) * t128;
t277 = qJD(4) * t130;
t268 = t133 * qJD(2);
t261 = qJDD(4) * t172;
t256 = t363 * t175;
t254 = t198 * t171;
t251 = t175 * t179 * t172;
t248 = t173 * t281;
t247 = t176 * t281;
t243 = t156 * t279;
t103 = t111 * pkin(2);
t233 = -t103 - t340;
t104 = t113 * pkin(2);
t232 = -t104 - t339;
t28 = qJDD(4) * pkin(9) + t30;
t48 = t236 + t134 * qJDD(2) + (t125 + t241) * qJD(2);
t7 = t171 * t48 + t174 * t28 + t90 * t270 - t66 * t271;
t227 = -qJD(6) - t345;
t226 = t112 * qJ(3) - t103;
t225 = t114 * qJ(3) - t104;
t223 = t287 * qJDD(2);
t222 = qJD(5) * t172 + qJD(2);
t221 = t175 * t242;
t220 = g(3) * (pkin(8) * t302 + t289);
t219 = t172 * t237;
t214 = t16 * t174 + t171 * t24;
t213 = t16 * t171 - t174 * t24;
t212 = t171 * t34 + t174 * t33;
t211 = t171 * t33 - t174 * t34;
t208 = t84 * qJ(3) + t133 * qJD(3);
t207 = (-qJD(2) * pkin(2) + t215) * t173 + t307;
t158 = pkin(5) * t174 + pkin(4);
t206 = t158 * t172 - t175 * t337;
t205 = qJDD(2) * t173 + t291;
t65 = -qJD(4) * pkin(4) - t80;
t76 = t116 * t174 + t168 * t299;
t200 = t156 * t270 + t301;
t199 = -t156 * t271 + t293;
t197 = g(1) * t69 - g(2) * t71 + g(3) * t116;
t196 = -g(1) * (-t113 * t174 - t114 * t300) - g(2) * (-t111 * t174 - t112 * t300) - g(3) * t94 + t130 * t221;
t195 = -g(1) * (t114 * t296 - t314) - g(2) * (t112 * t296 - t315) - g(3) * t95 + t128 * t221;
t193 = -t171 * t275 + t244;
t191 = t198 - t29;
t190 = -pkin(9) * t124 + t156 * t65;
t188 = t204 + t235;
t187 = -g(1) * (-t114 * t171 - t174 * t69) - g(2) * (-t112 * t171 + t174 * t71) + g(3) * t76 - t7;
t186 = t198 - t224;
t8 = -qJD(5) * t34 - t171 * t28 + t174 * t48;
t185 = qJDD(3) - t188;
t184 = -qJD(5) * t212 - t8 * t171 + t7 * t174;
t181 = qJD(2) * t215 - t177 * t178 + t262 + t84;
t180 = t8 + t355;
t162 = qJDD(4) * t175;
t140 = t337 * t174;
t139 = t337 * t171;
t126 = (-t177 + t344) * t175;
t123 = t128 ^ 2;
t122 = t174 * t134;
t110 = t205 * t168;
t109 = (-qJDD(2) * t176 + t173 * t179) * t168;
t93 = t201 - t317;
t91 = t122 - t252;
t85 = pkin(5) * t193 + t172 * t273;
t74 = t124 * t172 + t156 * t274;
t73 = -qJD(4) * t253 + t169 * t274 - t175 * t248;
t72 = -qJD(4) * t115 + t172 * t248;
t67 = -qJ(6) * t298 + t92;
t61 = -qJ(6) * t292 + t172 * t234 + t122;
t59 = t240 + (-qJD(2) * t344 + t117) * t172;
t56 = -t123 + t352;
t51 = -t227 + t65;
t38 = t310 - t58;
t37 = -t57 + t313;
t36 = (-t130 * t175 + t156 * t296) * qJD(2) + t200;
t35 = (t128 * t175 - t156 * t300) * qJD(2) + t199;
t26 = qJD(5) * t75 + t171 * t247 + t72 * t174;
t25 = -qJD(5) * t76 - t72 * t171 + t174 * t247;
t21 = t156 * t312 - t321;
t20 = t156 * t308 - t323;
t18 = t128 * t193 + t58 * t298;
t17 = -t130 * t194 - t57 * t292;
t15 = (t156 * t276 - t58) * t172 + (-t200 - t278) * t175;
t14 = (-t156 * t267 - t57) * t172 + (t199 + t277) * t175;
t12 = -t175 * t58 + (t278 - t301) * t172 + (-t171 * t274 - t174 * t222) * t156;
t11 = t175 * t57 + (t277 - t293) * t172 + (t171 * t222 - t175 * t267) * t156;
t10 = -t358 * t171 + t174 * t364;
t9 = (t128 * t174 + t309) * t275 + (t323 - t321 + (-t308 + t312) * qJD(5)) * t175;
t6 = (-t128 * t274 + t130 * t222 - t58 * t172) * t174 + (t128 * t222 + t130 * t274 - t57 * t172) * t171;
t5 = -t115 * t57 - t124 * t76 + t130 * t73 - t156 * t26;
t4 = t115 * t58 + t124 * t75 + t128 * t73 + t156 * t25;
t3 = -qJD(6) * t128 - t322 + t7;
t2 = -t130 * qJD(6) + t324 + t338 + t8;
t1 = -t128 * t26 - t130 * t25 + t57 * t75 - t58 * t76;
t19 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t290, 0, 0, 0, 0, 0, 0, -t109, -t110, 0 (t173 ^ 2 + t176 ^ 2) * t168 ^ 2 * qJDD(1) + t336, 0, 0, 0, 0, 0, 0, 0, t109, t110 (qJD(2) * t207 - t176 * t93 + t328) * t168 + t336, 0, 0, 0, 0, 0, 0, -t73 * qJD(4) - t115 * qJDD(4) + (t172 * t205 + t173 * t237) * t168, -t72 * qJD(4) - t116 * qJDD(4) + (t361 * t173 + t175 * t291) * t168 (t115 * t175 - t116 * t172) * qJDD(2) + (-t172 * t72 + t175 * t73 + (-t115 * t172 - t116 * t175) * qJD(4)) * qJD(2), t224 * t115 + t30 * t116 + t81 * t72 - t80 * t73 - g(3) + (t176 * t268 + t328) * t168, 0, 0, 0, 0, 0, 0, t4, t5, t1, t115 * t29 + t25 * t33 + t26 * t34 + t65 * t73 + t7 * t76 + t75 * t8 - g(3), 0, 0, 0, 0, 0, 0, t4, t5, t1, t115 * t13 + t16 * t25 + t2 * t75 + t24 * t26 + t3 * t76 + t51 * t73 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t188, t354, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t185 - 0.2e1 * t317, 0.2e1 * qJD(2) * qJD(3) + 0.2e1 * t262 - t354, -t93 * pkin(2) - g(1) * t225 - g(2) * t226 - g(3) * t289 - t207 * t285 + t208, qJDD(2) * t166 - 0.2e1 * t219, -0.2e1 * t172 * t258 + 0.2e1 * t265 * t288, -t172 * t178 + t162, qJDD(2) * t165 + 0.2e1 * t219, -t175 * t178 - t261, 0, -t353 * t175 + (t181 - t363) * t172, t172 * t353 + t181 * t175 - t256, t143 * t287 - t177 * t223 - t362, -g(1) * (t225 - t339) - g(2) * (t226 - t340) - t220 + (-t307 + (-t172 * t81 - t175 * t80) * t173) * t285 + t183 * t177 + t208, t17, t9, t14, t18, t15, t74, t124 * t91 + t331 * t156 + (t8 + (t128 * t177 - t171 * t65) * qJD(4)) * t172 + (qJD(4) * t33 - t177 * t58 + t270 * t65 + t326) * t175 + t195, -t124 * t92 - t332 * t156 + (-t7 + (t130 * t177 - t174 * t65) * qJD(4)) * t172 + (-qJD(4) * t34 + t29 * t174 + t177 * t57 - t271 * t65) * t175 + t196, t57 * t91 - t58 * t92 - t331 * t130 - t332 * t128 + t212 * t275 + (qJD(5) * t211 - t171 * t7 - t174 * t8) * t175 + t256, t7 * t92 + t8 * t91 - g(1) * t232 - g(2) * t233 - t220 + t332 * t34 + t331 * t33 + (-t29 * t175 + t275 * t65) * t177 + (-g(3) * t217 + t283 * t65) * t303 + t357 * t134, t17, t9, t14, t18, t15, t74, t124 * t61 + t126 * t58 + t128 * t85 + (-t276 * t51 + t2) * t172 + t335 * t156 + (qJD(4) * t16 + t270 * t51 + t330) * t175 + t195, -t124 * t67 - t126 * t57 + t130 * t85 + (-t267 * t51 - t3) * t172 - t334 * t156 + (-qJD(4) * t24 + t13 * t174 - t271 * t51) * t175 + t196, t57 * t61 - t58 * t67 - t335 * t130 - t334 * t128 + t214 * t275 + (qJD(5) * t213 - t171 * t3 - t174 * t2) * t175 + t256, t3 * t67 + t2 * t61 + t13 * t126 + t51 * t85 - g(1) * (-pkin(5) * t314 + t232) - g(2) * (-pkin(5) * t315 + t233) - t220 + t334 * t24 + t335 * t16 + (-g(3) * pkin(5) * t297 + (-g(3) * t206 + t283 * t51) * t173) * t168 + t357 * (qJ(3) + t206); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t179, t143 + t185 - t268 - t317, 0, 0, 0, 0, 0, 0, t172 * t286 + t162, t175 * t286 - t261, -t223, -t268 + t362, 0, 0, 0, 0, 0, 0, t12, t11, t6, -t212 * qJD(2) + (-qJD(4) * t211 - t29) * t175 + (qJD(4) * t65 + t184) * t172 - t204, 0, 0, 0, 0, 0, 0, t12, t11, t6, -t214 * qJD(2) + (-qJD(4) * t213 - t13) * t175 + (qJD(4) * t51 - qJD(5) * t214 - t2 * t171 + t3 * t174) * t172 - t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, -t288 * t179, t258, -t251, -t259, qJDD(4), qJD(4) * t81 - t175 * t268 + t186, t172 * t268 + (t80 + t150) * qJD(4) + t197 + t255, 0, 0, t20, t10, t36, t21, t35, -t243, -t33 * t279 - pkin(4) * t58 - t81 * t128 - t49 * t156 + t190 * t171 + (-pkin(9) * qJD(5) * t156 + t191) * t174, t34 * t279 + pkin(4) * t57 - t81 * t130 + t326 + (pkin(9) * t271 + t50) * t156 + t190 * t174 - t254, t128 * t50 + t130 * t49 + (t7 - t329 + (-t58 + t272) * pkin(9)) * t174 + (-t8 - t325 + (qJD(5) * t128 - t57) * pkin(9)) * t171 - t197, -t33 * t49 - t34 * t50 - t65 * t81 + t191 * pkin(4) + (t184 - t197) * pkin(9), t20, t10, t36, t21, t35, -t243, -t16 * t279 - t139 * t124 - t59 * t128 - t158 * t58 + t319 * t156 + (t51 * t280 + (t51 + t345) * qJD(5)) * t171 + (-t13 + t198) * t174, -t140 * t124 + t330 - t59 * t130 + t158 * t57 - t320 * t156 + (pkin(5) * t309 + t174 * t51) * qJD(5) + (t175 * t24 + t296 * t51) * qJD(2) - t254, -t139 * t57 - t140 * t58 - t319 * t130 - t320 * t128 + (-t156 * t16 + t3) * t174 + (-t2 - t327) * t171 - t197, t3 * t140 - t2 * t139 - t13 * t158 - g(1) * (-t158 * t68 + t337 * t69) - g(2) * (t158 * t70 - t337 * t71) - g(3) * (-t115 * t158 + t116 * t337) + (pkin(5) * t271 - t59) * t51 + t320 * t24 + t319 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t56, t37, -t311, t38, t124, -t65 * t130 + t180 + t325, t128 * t65 + t187 + t329, 0, 0, t311, t56, t37, -t311, t38, t124, 0.2e1 * t338 + t324 + t327 + (t227 - t51) * t130 + t180, -t352 * pkin(5) + t322 + t23 * t156 + (qJD(6) + t51) * t128 + t187, t57 * pkin(5) - t128 * t333, t333 * t24 + (-t51 * t130 + t2 + t355) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, t364, -t123 - t352, t128 * t24 + t130 * t16 - t186 - t316 + t356;];
tau_reg  = t19;
