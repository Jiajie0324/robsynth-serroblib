% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:16:45
% EndTime: 2019-03-08 20:16:53
% DurationCPUTime: 3.51s
% Computational Cost: add. (3122->363), mult. (7128->560), div. (0->0), fcn. (6922->8), ass. (0->279)
t250 = sin(qJ(5));
t418 = 0.2e1 * t250;
t244 = t250 ^ 2;
t253 = cos(qJ(5));
t246 = t253 ^ 2;
t222 = t246 + t244;
t223 = t246 - t244;
t254 = cos(qJ(4));
t368 = t253 * t254;
t303 = t368 * t418;
t264 = qJD(2) * t303 - qJD(4) * t223;
t251 = sin(qJ(4));
t298 = pkin(4) * t251 - pkin(9) * t254;
t200 = qJ(3) + t298;
t184 = t253 * t200;
t256 = -pkin(2) - pkin(8);
t374 = t250 * t256;
t305 = pkin(5) - t374;
t332 = qJ(6) * t368;
t104 = t251 * t305 + t184 - t332;
t417 = -t104 / 0.2e1;
t396 = t254 * pkin(4);
t398 = t251 * pkin(9);
t208 = t396 + t398;
t198 = t253 * t208;
t372 = t251 * t253;
t114 = qJ(6) * t372 + t254 * t305 + t198;
t416 = t114 / 0.2e1;
t371 = t251 * t256;
t146 = t250 * t371 - t184;
t120 = -t146 - t332;
t415 = t120 / 0.2e1;
t367 = t253 * t256;
t333 = t251 * t367;
t147 = t200 * t250 + t333;
t375 = t250 * t254;
t121 = -qJ(6) * t375 + t147;
t414 = t121 / 0.2e1;
t248 = sin(pkin(6));
t252 = sin(qJ(2));
t370 = t252 * t253;
t336 = t248 * t370;
t255 = cos(qJ(2));
t379 = t248 * t255;
t334 = t251 * t379;
t249 = cos(pkin(6));
t378 = t249 * t254;
t176 = -t334 + t378;
t384 = t176 * t250;
t124 = -t336 + t384;
t413 = -t124 / 0.2e1;
t380 = t248 * t252;
t337 = t250 * t380;
t383 = t176 * t253;
t125 = t337 + t383;
t412 = t125 / 0.2e1;
t364 = t255 * t253;
t373 = t251 * t252;
t150 = (-t250 * t373 + t364) * t248;
t411 = t150 / 0.2e1;
t400 = t250 * pkin(5);
t304 = -t256 + t400;
t187 = t304 * t254;
t410 = t187 / 0.2e1;
t395 = -qJ(6) - pkin(9);
t206 = t395 * t250;
t409 = -t206 / 0.2e1;
t207 = t395 * t253;
t408 = t207 / 0.2e1;
t247 = t254 ^ 2;
t238 = t247 * t253;
t407 = -t238 / 0.2e1;
t406 = -t246 / 0.2e1;
t405 = -t250 / 0.2e1;
t404 = t250 / 0.2e1;
t403 = t251 / 0.2e1;
t402 = t253 / 0.2e1;
t401 = -t254 / 0.2e1;
t399 = t251 * pkin(5);
t397 = t253 * pkin(5);
t162 = (0.1e1 / 0.2e1 + t406 - t244 / 0.2e1) * t251;
t175 = t249 * t251 + t254 * t379;
t387 = t125 * t253;
t389 = t124 * t250;
t276 = t389 / 0.2e1 + t387 / 0.2e1;
t16 = (-t176 / 0.2e1 + t276) * t254 + t175 * t162;
t394 = t16 * qJD(4);
t393 = pkin(5) * qJD(5);
t76 = t104 * t375;
t19 = t120 * t375 - t76;
t392 = qJD(2) * t19;
t306 = t415 + t417;
t339 = -t399 / 0.2e1;
t12 = (t339 + t306) * t253;
t391 = t12 * qJD(2);
t390 = t121 * t250;
t388 = t125 * t251;
t317 = t390 / 0.2e1;
t77 = t104 * t372;
t376 = t250 * t251;
t97 = t121 * t376;
t338 = -t77 / 0.2e1 - t97 / 0.2e1;
t340 = -t247 / 0.2e1 - 0.1e1 / 0.2e1;
t14 = t251 * t317 + (pkin(5) * t340 + t120 * t403) * t253 + t338;
t386 = t14 * qJD(2);
t385 = t150 * t251;
t68 = t175 * t250;
t382 = t187 * t250;
t365 = t255 * t250;
t151 = (t251 * t370 + t365) * t248;
t335 = t254 * t380;
t24 = -t124 * t150 + t125 * t151 - t175 * t335;
t381 = t24 * qJD(1);
t377 = t250 * t207;
t245 = t251 ^ 2;
t369 = t253 * t245;
t366 = t254 * t256;
t221 = t245 - t247;
t363 = qJD(2) * qJ(3);
t195 = t221 * t250;
t362 = qJD(2) * t195;
t196 = -t238 + t369;
t361 = qJD(2) * t196;
t360 = qJD(2) * t248;
t359 = qJD(3) * t251;
t358 = qJD(4) * t175;
t357 = qJD(4) * t250;
t356 = qJD(4) * t253;
t355 = qJD(5) * t125;
t354 = qJD(5) * t250;
t353 = qJD(5) * t253;
t161 = (-t245 / 0.2e1 + t340) * t250;
t352 = t161 * qJD(2);
t163 = t238 / 0.2e1 + (0.1e1 / 0.2e1 + t245 / 0.2e1) * t253;
t351 = t163 * qJD(2);
t192 = t222 * t247;
t350 = t192 * qJD(2);
t194 = t222 * t254;
t349 = t194 * qJD(2);
t348 = t221 * qJD(2);
t347 = t222 * qJD(4);
t346 = t251 * qJD(2);
t345 = t251 * qJD(4);
t344 = t254 * qJD(2);
t343 = t254 * qJD(4);
t342 = t254 * qJD(5);
t341 = pkin(5) * t368;
t331 = t250 * t366;
t211 = t253 * t366;
t330 = qJ(3) * t346;
t329 = qJ(3) * t344;
t328 = t250 * t356;
t327 = t250 * t343;
t326 = t253 * t343;
t325 = t251 * t354;
t324 = t250 * t342;
t323 = t251 * t353;
t322 = t253 * t342;
t220 = t252 * t360;
t321 = t255 * t360;
t320 = t250 * t353;
t319 = t251 * t343;
t318 = t251 * t344;
t316 = t251 * t413;
t315 = t253 * t413;
t314 = t125 * t401;
t313 = -t380 / 0.2e1;
t312 = t380 / 0.2e1;
t311 = t375 / 0.2e1;
t310 = -t373 / 0.2e1;
t309 = t372 / 0.2e1;
t308 = -t368 / 0.2e1;
t307 = t368 / 0.2e1;
t302 = t175 * t307;
t301 = t247 * t312;
t300 = t254 * t313;
t299 = t254 * t312;
t297 = qJD(4) * t303;
t186 = t304 * t251;
t295 = t121 * t402 + t186 / 0.2e1;
t294 = -t207 * t401 + t417;
t197 = t250 * t208;
t126 = qJ(6) * t376 + t197 + t211;
t17 = t104 * t114 + t121 * t126 - t186 * t187;
t257 = (t104 * t404 - t295) * t175 + t114 * t413 + t126 * t412 + t176 * t410;
t239 = -pkin(4) - t397;
t258 = t150 * t409 + t151 * t408 + t239 * t299;
t2 = t257 + t258;
t293 = qJD(1) * t2 + qJD(2) * t17;
t20 = t187 * t341 + (-t104 + t120) * t121;
t3 = -t306 * t125 + (t175 * t308 + t411) * pkin(5);
t292 = -qJD(1) * t3 + qJD(2) * t20;
t5 = t306 * t207 + (t416 + t239 * t308 - t382 / 0.2e1) * pkin(5);
t60 = t239 * t400;
t291 = -qJD(2) * t5 + qJD(4) * t60;
t18 = -t77 - t97 + (t114 * t253 + t126 * t250) * t254;
t26 = (t316 - t151 / 0.2e1) * t253 + (t388 / 0.2e1 + t411) * t250;
t290 = t26 * qJD(1) - t18 * qJD(2);
t274 = t150 * t405 + t151 * t402;
t275 = t125 * t404 + t315;
t21 = t251 * t274 - t275 + t301;
t47 = t104 * t253 + t390;
t289 = -qJD(1) * t21 + qJD(2) * t47;
t30 = (t250 * t313 + t412 - t383 / 0.2e1) * t254;
t53 = t147 * t254 + (-t211 + t197) * t251;
t288 = -t30 * qJD(1) - t53 * qJD(2);
t31 = (t253 * t312 + t124 / 0.2e1 - t384 / 0.2e1) * t254;
t52 = -t146 * t254 + (t198 + t331) * t251;
t287 = -t31 * qJD(1) + t52 * qJD(2);
t36 = (t313 + t275) * t254;
t42 = t47 * t254;
t286 = -qJD(1) * t36 - qJD(2) * t42;
t262 = (t250 * t310 + t364 / 0.2e1) * t248;
t268 = -t388 / 0.2e1 + t302;
t38 = t262 - t268;
t99 = -t147 * t251 - t247 * t367;
t285 = qJD(1) * t38 - qJD(2) * t99;
t261 = (t253 * t310 - t365 / 0.2e1) * t248;
t269 = t175 * t311 + t316;
t39 = t261 + t269;
t98 = -t146 * t251 - t247 * t374;
t284 = qJD(1) * t39 + qJD(2) * t98;
t23 = (t176 - t387 - t389) * t175;
t283 = t23 * qJD(1) + t16 * qJD(3);
t282 = t206 * t250 + t207 * t253;
t281 = (-qJD(5) - t346) * t254;
t280 = t398 / 0.2e1 + t396 / 0.2e1;
t270 = t280 * t250;
t122 = t197 / 0.2e1 + t270;
t279 = pkin(4) * t356 - qJD(2) * t122;
t271 = t280 * t253;
t123 = -t198 / 0.2e1 - t271;
t278 = pkin(4) * t357 - qJD(2) * t123;
t277 = (t206 * t401 + t414) * t253;
t273 = t253 * t281;
t180 = (t244 / 0.2e1 + t406) * t254;
t272 = -qJD(2) * t180 + t328;
t267 = t378 / 0.2e1 - t334 / 0.2e1;
t266 = qJD(2) * t238 * t250 + qJD(4) * t180;
t193 = t223 * t247;
t265 = qJD(2) * t193 + t297;
t135 = (-0.1e1 + t222) * t254 * t251;
t259 = (t114 * t405 + t126 * t402 + t410) * t251 - t76 / 0.2e1;
t8 = -t186 * t401 + t377 / 0.2e1 + (t254 * t414 + t409) * t253 + t259;
t263 = t16 * qJD(1) + t8 * qJD(2) + t135 * qJD(3);
t28 = -t371 / 0.2e1 + t277 + (t399 / 0.2e1 + t294) * t250;
t34 = t267 - t276;
t260 = -qJD(1) * t34 + qJD(2) * t28 - qJD(3) * t162 - qJD(4) * t282;
t237 = t343 / 0.2e1;
t234 = t253 * t346;
t233 = t250 * t345;
t232 = t250 * t346;
t185 = (t346 + qJD(5) / 0.2e1) * t254;
t177 = (t253 * t344 + t357) * pkin(5);
t174 = t180 * qJD(5);
t166 = -t369 / 0.2e1 + t407 + t402;
t165 = (0.1e1 + t222) * t403;
t164 = t405 + (t245 + t247) * t404;
t82 = -t331 + t198 / 0.2e1 - t271;
t81 = -t211 - t197 / 0.2e1 + t270;
t78 = pkin(5) * t375;
t70 = t175 * t253;
t41 = t262 + t268;
t40 = t261 - t269;
t37 = t124 * t307 + t250 * t314 + t300;
t35 = t267 + t276;
t33 = t176 * t307 + t250 * t300 + t314;
t32 = t124 * t401 + t176 * t311 + t253 * t299;
t27 = t371 / 0.2e1 + t277 + (t339 + t294) * t250;
t25 = t251 * t275 + t274;
t22 = t315 + t151 * t309 + t301 + (t412 - t385 / 0.2e1) * t250;
t13 = pkin(5) * t407 + t397 / 0.2e1 + (t120 * t402 + t317) * t251 + t338;
t11 = pkin(5) * t309 + t253 * t306;
t10 = pkin(5) * t68;
t7 = -t377 / 0.2e1 + t206 * t402 + t295 * t254 + t259;
t6 = t104 * t408 - t207 * t415 + (t239 * t307 + t382 / 0.2e1 + t416) * pkin(5);
t4 = t120 * t412 + t125 * t417 + (t302 + t411) * pkin(5);
t1 = t257 - t258;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t24 + qJD(4) * t23; 0, 0, -t220, -t321, t220, t321 ((-pkin(2) * t252 + qJ(3) * t255) * qJD(2) + t252 * qJD(3)) * t248, 0, 0, 0, 0, 0 (t252 * t343 + t255 * t346) * t248 (-t252 * t345 + t255 * t344) * t248, 0, 0, 0, 0, 0 (-t247 * t337 + t385) * qJD(2) + t32 * qJD(4) + t41 * qJD(5) (-t151 * t251 - t247 * t336) * qJD(2) + t33 * qJD(4) + t40 * qJD(5), t25 * qJD(4) + (-t150 * t253 - t151 * t250) * t344, t381 + (t104 * t150 + t121 * t151 - t187 * t335) * qJD(2) + t22 * qJD(3) + t1 * qJD(4) + t4 * qJD(5) + t37 * qJD(6); 0, 0, 0, 0, 0, 0, t220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t22 + t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t176 + t220 * t254, -t220 * t251 + t358, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(5) * t68 - t176 * t356, qJD(2) * t33 + qJD(5) * t70 + t176 * t357, t25 * qJD(2) - t222 * t358, t1 * qJD(2) + (t175 * t282 + t176 * t239) * qJD(4) + t10 * qJD(5) + t35 * qJD(6) + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(4) * t68 - t355, qJD(2) * t40 + qJD(4) * t70 + qJD(5) * t124, 0, -pkin(5) * t355 + qJD(2) * t4 + qJD(4) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t37 + qJD(4) * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t31 - qJD(5) * t38, -qJD(4) * t30 - qJD(5) * t39, qJD(4) * t26, -qJD(3) * t21 + qJD(4) * t2 - qJD(5) * t3 - qJD(6) * t36 - t381; 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t319, t221 * qJD(4), 0, 0, 0, qJ(3) * t343 + t359, -qJ(3) * t345 + qJD(3) * t254, -t246 * t319 - t247 * t320, -qJD(5) * t193 + t251 * t297, -qJD(4) * t196 - t251 * t324, qJD(4) * t195 - t251 * t322, t319, qJD(4) * t52 + qJD(5) * t99 + t253 * t359, -qJD(4) * t53 - qJD(5) * t98 - t250 * t359, -qJD(3) * t194 - qJD(4) * t18 - qJD(5) * t19 + qJD(6) * t192, qJD(3) * t47 + qJD(4) * t17 + qJD(5) * t20 - qJD(6) * t42; 0, 0, 0, 0, 0, qJD(2), t363, 0, 0, 0, 0, 0, t346, t344, 0, 0, 0, 0, 0, qJD(5) * t166 + t234, qJD(5) * t164 - t232, -t349, qJD(4) * t7 + qJD(5) * t13 + t289; 0, 0, 0, 0, 0, 0, 0, -t318, t348, -t345, -t343, 0, -t256 * t345 + t329, -t256 * t343 - t330, -t174 + (-t246 * t344 - t328) * t251, t251 * t264 - 0.2e1 * t254 * t320, t327 - t361, t326 + t362, t185 (t250 * t298 - t333) * qJD(4) + t82 * qJD(5) + t287 (-pkin(9) * t368 + (pkin(4) * t253 + t374) * t251) * qJD(4) + t81 * qJD(5) + t288 ((t206 * t251 + t126) * t253 + (-t207 * t251 - t114) * t250) * qJD(4) + t11 * qJD(5) + t290, t7 * qJD(3) + (t114 * t206 - t126 * t207 - t186 * t239) * qJD(4) + t6 * qJD(5) + t27 * qJD(6) + t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, -t265, t250 * t281, t273, t237, qJD(3) * t166 + qJD(4) * t82 - qJD(5) * t147 - t285, qJD(3) * t164 + qJD(4) * t81 + qJD(5) * t146 - t284, pkin(5) * t324 + qJD(4) * t11 - t392, qJD(3) * t13 + qJD(4) * t6 - t121 * t393 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, qJD(4) * t27 + t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t21 + t394; 0, 0, 0, 0, 0, -qJD(2), -t363, 0, 0, 0, 0, 0, -t346, -t344, 0, 0, 0, 0, 0, -qJD(5) * t163 - t234, -qJD(5) * t161 + t232, t349, qJD(4) * t8 + qJD(5) * t14 - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, -t343, 0, 0, 0, 0, 0, -t253 * t345 - t324, t233 - t322, t194 * qJD(4) (t251 * t239 - t254 * t282) * qJD(4) - t78 * qJD(5) + t165 * qJD(6) + t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323 - t327 - t351, t325 - t326 - t352, 0, -pkin(5) * t323 - qJD(4) * t78 + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31 * qJD(2), t30 * qJD(2), -qJD(2) * t26, -qJD(2) * t2 - qJD(6) * t34 - t283; 0, 0, 0, 0, 0, 0, 0, t318, -t348, 0, 0, 0, -t329, t330, t246 * t318 - t174, t273 * t418, t323 + t361, -t325 - t362, -t185, qJD(5) * t123 - t287, qJD(5) * t122 - t288, qJD(5) * t12 - t290, -qJD(3) * t8 - qJD(5) * t5 + qJD(6) * t28 - t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t162 - t263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t223 * qJD(5), 0, 0, 0, -pkin(4) * t354, -pkin(4) * t353, t222 * qJD(6), qJD(5) * t60 - qJD(6) * t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -t264, t234 + t353, -t232 - t354, -t344 / 0.2e1, -pkin(9) * t353 - t278, pkin(9) * t354 - t279, -pkin(5) * t353 + t391, t207 * t393 + t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38 * qJD(2), t39 * qJD(2), 0, t3 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, t265 (t250 * t344 - t356) * t251, t253 * t318 + t233, t237, qJD(3) * t163 - qJD(4) * t123 + t285, qJD(3) * t161 - qJD(4) * t122 + t284, -qJD(4) * t12 + t392, -qJD(3) * t14 + qJD(4) * t5 - qJD(6) * t341 - t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, t352, 0, -t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, t264, -t234, t232, t344 / 0.2e1, t278, t279, -t391, -qJD(6) * t400 - t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t36 + qJD(4) * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350, pkin(5) * t322 - qJD(4) * t28 - t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, pkin(5) * t354 - t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
