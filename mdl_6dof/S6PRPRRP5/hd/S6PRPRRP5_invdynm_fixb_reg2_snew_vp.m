% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPRRP5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 23:58
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPRRP5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRRP5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRRP5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP5_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:57:27
% EndTime: 2019-05-04 23:57:46
% DurationCPUTime: 20.96s
% Computational Cost: add. (78481->772), mult. (149157->977), div. (0->0), fcn. (101037->10), ass. (0->535)
t1222 = sin(qJ(5));
t1225 = cos(qJ(5));
t1226 = cos(qJ(4));
t1362 = qJD(2) * t1226;
t1172 = -qJD(4) * t1225 + t1222 * t1362;
t1174 = t1222 * qJD(4) + t1225 * t1362;
t1134 = t1174 * t1172;
t1323 = qJD(4) * t1362;
t1223 = sin(qJ(4));
t1330 = t1223 * qJDD(2);
t1257 = -t1323 - t1330;
t1238 = qJDD(5) - t1257;
t1426 = t1134 - t1238;
t1435 = pkin(5) * t1426;
t1216 = sin(pkin(6));
t1227 = cos(qJ(2));
t1331 = t1216 * qJDD(2);
t1224 = sin(qJ(2));
t1228 = qJD(2) ^ 2;
t1338 = t1224 * t1228;
t1158 = t1216 * t1338 - t1227 * t1331;
t1218 = cos(pkin(6));
t1202 = t1218 * qJDD(2);
t1160 = -t1202 * t1227 + t1218 * t1338;
t1215 = sin(pkin(10));
t1217 = cos(pkin(10));
t1319 = g(1) * t1215 - t1217 * g(2);
t1374 = g(3) - qJDD(1);
t1154 = t1216 * t1319 + t1218 * t1374;
t1339 = t1224 * t1154;
t1070 = (t1158 * t1216 + t1160 * t1218) * pkin(7) - t1339;
t1181 = qJDD(2) * t1224 + t1227 * t1228;
t1121 = t1160 * t1215 - t1181 * t1217;
t1434 = -qJ(1) * t1121 - t1070 * t1215;
t1116 = t1160 * t1217 + t1181 * t1215;
t1433 = -qJ(1) * t1116 - t1070 * t1217;
t1157 = t1181 * t1216;
t1159 = t1181 * t1218;
t1337 = t1227 * t1154;
t1073 = (t1157 * t1216 + t1159 * t1218) * pkin(7) - t1337;
t1180 = qJDD(2) * t1227 - t1338;
t1119 = t1159 * t1215 - t1180 * t1217;
t1432 = -qJ(1) * t1119 - t1073 * t1215;
t1114 = t1159 * t1217 + t1180 * t1215;
t1431 = -qJ(1) * t1114 - t1073 * t1217;
t1357 = t1426 * t1222;
t1356 = t1426 * t1225;
t1425 = -t1216 * t1374 + t1218 * t1319;
t1342 = t1223 * qJD(2);
t1198 = qJD(5) + t1342;
t1204 = t1226 * qJDD(2);
t1324 = qJD(4) * t1342;
t1177 = t1204 - t1324;
t1314 = -t1225 * qJDD(4) + t1222 * t1177;
t1081 = (qJD(5) - t1198) * t1174 + t1314;
t1169 = t1172 ^ 2;
t1170 = t1174 ^ 2;
t1100 = -t1169 - t1170;
t1361 = qJD(6) * t1172;
t1162 = -0.2e1 * t1361;
t1147 = pkin(5) * t1198 - qJ(6) * t1174;
t1258 = qJD(5) * t1174 + t1314;
t1379 = pkin(9) * t1226;
t1388 = pkin(4) * t1223;
t1175 = (-t1379 + t1388) * qJD(2);
t1214 = qJDD(2) * pkin(2);
t1184 = g(1) * t1217 + g(2) * t1215;
t1104 = -t1184 * t1224 - t1227 * t1425;
t1263 = qJDD(3) + t1104;
t1092 = -t1228 * qJ(3) - t1214 + t1263;
t1232 = -qJDD(2) * pkin(8) + t1092;
t1333 = t1226 * t1154 - t1223 * t1232;
t1408 = qJD(4) ^ 2;
t1024 = -pkin(4) * t1408 + qJDD(4) * pkin(9) - t1175 * t1342 - t1333;
t1105 = -t1227 * t1184 + t1224 * t1425;
t1220 = t1228 * pkin(8);
t1221 = t1228 * pkin(2);
t1380 = pkin(9) * t1223;
t1387 = pkin(4) * t1226;
t1407 = 2 * qJD(3);
t1229 = -t1177 * pkin(9) - t1220 - t1221 + (qJ(3) + t1388) * qJDD(2) + (t1407 + (t1380 + 0.2e1 * t1387) * qJD(4)) * qJD(2) + t1105;
t950 = t1225 * t1024 + t1222 * t1229;
t1283 = t1169 * pkin(5) + t1258 * qJ(6) + t1198 * t1147 - t950;
t919 = t1162 - t1283;
t897 = -pkin(5) * t1100 - qJ(6) * t1081 + t919;
t1113 = -qJD(5) * t1172 + qJDD(4) * t1222 + t1177 * t1225;
t1156 = t1198 * t1172;
t1085 = t1113 + t1156;
t949 = t1024 * t1222 - t1225 * t1229;
t1233 = qJ(6) * t1156 + 0.2e1 * qJD(6) * t1174 + t1435 + t949;
t906 = (t1085 + t1113) * qJ(6) + t1233;
t1424 = t1222 * t906 + t1225 * t897;
t890 = t1222 * t949 + t1225 * t950;
t1001 = -t1081 * t1222 - t1085 * t1225;
t1003 = -t1081 * t1225 + t1085 * t1222;
t965 = t1003 * t1223 - t1100 * t1226;
t1423 = -pkin(2) * t965 + qJ(3) * t1001;
t889 = t1222 * t950 - t1225 * t949;
t1422 = (pkin(3) + t1380 + t1387) * t889;
t1102 = t1134 + t1238;
t1416 = t1113 - t1156;
t1026 = -pkin(5) * t1416 - qJ(6) * t1102;
t1195 = t1198 ^ 2;
t1128 = -t1170 - t1195;
t1315 = t1154 * t1223 + t1226 * t1232;
t1023 = -qJDD(4) * pkin(4) - pkin(9) * t1408 + t1175 * t1362 - t1315;
t955 = t1258 * pkin(5) - t1169 * qJ(6) + t1147 * t1174 + qJDD(6) + t1023;
t941 = -qJ(6) * t1128 + t955;
t1421 = t1225 * t1026 + t1222 * t941;
t1122 = -t1195 - t1169;
t1043 = t1122 * t1222 - t1356;
t1044 = t1122 * t1225 + t1357;
t1080 = (qJD(5) + t1198) * t1174 + t1314;
t976 = t1044 * t1223 - t1080 * t1226;
t1420 = -pkin(2) * t976 + qJ(3) * t1043;
t1359 = t1102 * t1222;
t1054 = t1128 * t1225 - t1359;
t1358 = t1102 * t1225;
t1055 = -t1128 * t1222 - t1358;
t981 = t1055 * t1223 - t1226 * t1416;
t1419 = -pkin(2) * t981 + qJ(3) * t1054;
t1418 = t1215 * t1374;
t1417 = t1217 * t1374;
t1316 = t1223 * t1333 - t1226 * t1315;
t1414 = -t1217 * t1184 - t1215 * t1319;
t1300 = pkin(7) * t1181 - t1337;
t1413 = pkin(1) * t1160 + t1216 * t1300;
t1301 = pkin(7) * t1180 + t1339;
t1412 = pkin(1) * t1159 + t1216 * t1301;
t1411 = -t1215 * t1184 + t1217 * t1319;
t1410 = -pkin(1) * t1158 + t1218 * t1300;
t1409 = -pkin(1) * t1157 + t1218 * t1301;
t1406 = -pkin(8) - pkin(2);
t966 = t1003 * t1226 + t1100 * t1223;
t1405 = pkin(2) * t966;
t977 = t1044 * t1226 + t1080 * t1223;
t1404 = pkin(2) * t977;
t982 = t1055 * t1226 + t1223 * t1416;
t1403 = pkin(2) * t982;
t1402 = pkin(3) * t1316;
t918 = qJ(6) * t1113 + t1233;
t1401 = pkin(5) * t918;
t1400 = pkin(8) * t965;
t1399 = pkin(8) * t976;
t1398 = pkin(8) * t981;
t1230 = qJD(2) * t1407 + t1105;
t1360 = qJDD(2) * qJ(3);
t1090 = -t1221 + t1230 + t1360;
t1089 = -t1220 + t1090;
t1393 = pkin(3) * t1089;
t1211 = t1223 ^ 2;
t1212 = t1226 ^ 2;
t1332 = t1211 + t1212;
t1179 = t1332 * qJDD(2);
t1392 = pkin(3) * t1179;
t1391 = pkin(4) * t1001;
t1390 = pkin(4) * t1043;
t1389 = pkin(4) * t1054;
t1386 = pkin(5) * t1085;
t1385 = pkin(7) * t1216;
t1384 = pkin(7) * t1218;
t1383 = pkin(9) * t1001;
t1382 = pkin(9) * t1043;
t1381 = pkin(9) * t1054;
t1290 = t1001 * t1224 - t1227 * t965;
t875 = -t1216 * t966 + t1218 * t1290;
t922 = t1001 * t1227 + t1224 * t965;
t1378 = qJ(1) * (t1215 * t922 + t1217 * t875);
t1289 = t1043 * t1224 - t1227 * t976;
t904 = -t1216 * t977 + t1218 * t1289;
t936 = t1043 * t1227 + t1224 * t976;
t1377 = qJ(1) * (t1215 * t936 + t1217 * t904);
t1288 = t1054 * t1224 - t1227 * t981;
t909 = -t1216 * t982 + t1218 * t1288;
t942 = t1054 * t1227 + t1224 * t981;
t1376 = qJ(1) * (t1215 * t942 + t1217 * t909);
t1375 = qJ(3) * t977;
t1373 = pkin(1) * t875 + t922 * t1385;
t1372 = pkin(1) * t904 + t936 * t1385;
t1371 = pkin(1) * t909 + t942 * t1385;
t1370 = -pkin(3) * t1001 + pkin(8) * t966;
t1369 = t1222 * t918;
t1368 = t1225 * t918;
t1367 = -pkin(4) * t1023 + pkin(9) * t890;
t1366 = -pkin(3) * t1043 + pkin(8) * t977;
t1365 = -pkin(3) * t1054 + pkin(8) * t982;
t1364 = -pkin(4) * t1100 + pkin(9) * t1003;
t1363 = qJD(2) * qJD(4);
t1355 = t1174 * t1198;
t1176 = 0.2e1 * t1323 + t1330;
t1136 = t1176 * t1223;
t1354 = t1179 * t1224;
t1353 = t1179 * t1227;
t1197 = t1226 * t1228 * t1223;
t1185 = qJDD(4) + t1197;
t1352 = t1185 * t1223;
t1351 = t1185 * t1226;
t1186 = qJDD(4) - t1197;
t1350 = t1186 * t1223;
t1349 = t1186 * t1226;
t1348 = t1198 * t1222;
t1347 = t1198 * t1225;
t1346 = t1211 * t1228;
t1345 = t1212 * t1228;
t1343 = t1216 * t1154;
t1012 = t1222 * t1023;
t1340 = t1223 * t1089;
t1013 = t1225 * t1023;
t1086 = t1226 * t1089;
t1335 = pkin(4) * t1080 - pkin(9) * t1044;
t1334 = pkin(4) * t1416 - pkin(9) * t1055;
t874 = t1216 * t1290 + t1218 * t966;
t1329 = -pkin(1) * t874 + t922 * t1384;
t903 = t1216 * t1289 + t1218 * t977;
t1328 = -pkin(1) * t903 + t936 * t1384;
t908 = t1216 * t1288 + t1218 * t982;
t1327 = -pkin(1) * t908 + t942 * t1384;
t1326 = t1223 * t1134;
t1325 = t1226 * t1134;
t1322 = t1012 - t1334;
t1321 = -t1013 - t1335;
t1320 = t1217 * t1331;
t851 = t1222 * t919 - t1368;
t870 = -pkin(5) * t955 + qJ(6) * t919;
t823 = -pkin(9) * t851 + qJ(6) * t1368 - t1222 * t870;
t831 = -pkin(4) * t851 + t1401;
t1317 = -t1223 * t831 + t1226 * t823;
t1313 = t1364 + t1424;
t1312 = t1364 + t890;
t861 = -t889 - t1383;
t1311 = t1001 * t1388 + t1226 * t861 - t1400;
t974 = pkin(3) * t976;
t1310 = -t974 - t1321;
t1309 = -t1334 + t1421;
t863 = -t1023 * t1226 + t1223 * t890;
t1308 = -pkin(3) * t863 - t1367;
t1307 = t1224 * t1197;
t1306 = t1227 * t1197;
t1194 = -t1345 - t1408;
t1140 = t1194 * t1226 - t1352;
t1305 = -pkin(3) * t1140 - t1333;
t1303 = pkin(3) * t1176 + t1086;
t1178 = t1204 - 0.2e1 * t1324;
t1302 = pkin(3) * t1178 - t1340;
t835 = -t1222 * t897 + t1225 * t906 - t1383;
t960 = t1386 - t1391;
t1253 = t1223 * t835 + t1226 * t960 + t1370;
t817 = -t1253 - t1405;
t963 = pkin(3) * t965;
t1272 = -qJ(3) * t966 + t1364 + t963;
t824 = t1272 + t1424;
t1299 = t1224 * t824 + t1227 * t817;
t1231 = -t918 - t1435;
t882 = -t1231 - t1390;
t924 = -pkin(5) * t1080 + qJ(6) * t1122 - t955;
t886 = qJ(6) * t1356 - t1222 * t924 - t1382;
t1252 = t1223 * t886 + t1226 * t882 + t1366;
t826 = -t1252 - t1404;
t1254 = qJ(6) * t1357 + t1225 * t924 - t1335;
t1240 = -t1254 - t974;
t844 = -t1240 - t1375;
t1298 = t1224 * t844 + t1227 * t826;
t1239 = pkin(5) * t1128 + t1283;
t892 = t1162 - t1239 - t1389;
t895 = -t1026 * t1222 + t1225 * t941 - t1381;
t1250 = t1223 * t895 + t1226 * t892 + t1365;
t828 = -t1250 - t1403;
t979 = pkin(3) * t981;
t1270 = -qJ(3) * t982 - t1334 + t979;
t845 = t1270 + t1421;
t1297 = t1224 * t845 + t1227 * t828;
t1237 = -t1001 * t1387 + t1223 * t861 + t1370;
t830 = -t1237 - t1405;
t833 = t1272 + t890;
t1296 = t1224 * t833 + t1227 * t830;
t925 = t949 - t1390;
t957 = t1012 - t1382;
t1251 = t1223 * t957 + t1226 * t925 + t1366;
t837 = -t1251 - t1404;
t859 = -t1310 - t1375;
t1295 = t1224 * t859 + t1227 * t837;
t927 = t950 - t1389;
t959 = t1013 - t1381;
t1249 = t1223 * t959 + t1226 * t927 + t1365;
t839 = -t1249 - t1403;
t862 = t1012 + t1270;
t1294 = t1224 * t862 + t1227 * t839;
t852 = t1225 * t919 + t1369;
t840 = t1223 * t852 - t1226 * t955;
t1293 = t1224 * t851 - t1227 * t840;
t1292 = t1224 * t889 - t1227 * t863;
t1000 = -t1080 * t1222 + t1225 * t1416;
t1002 = -t1080 * t1225 - t1222 * t1416;
t1132 = t1170 - t1169;
t971 = t1002 * t1223 - t1132 * t1226;
t1291 = t1000 * t1224 - t1227 * t971;
t1152 = -t1170 + t1195;
t1064 = t1152 * t1225 - t1357;
t1066 = -t1152 * t1222 - t1356;
t985 = t1066 * t1223 - t1085 * t1226;
t1287 = t1064 * t1224 - t1227 * t985;
t1151 = t1169 - t1195;
t1065 = t1151 * t1222 + t1358;
t1067 = t1151 * t1225 - t1359;
t986 = t1067 * t1223 + t1081 * t1226;
t1286 = t1065 * t1224 - t1227 * t986;
t1285 = t1089 * t1224 + t1227 * t1316;
t1075 = t1172 * t1347 + t1222 * t1258;
t1029 = t1075 * t1223 + t1325;
t1074 = -t1172 * t1348 + t1225 * t1258;
t1282 = -t1029 * t1227 - t1074 * t1224;
t1077 = t1113 * t1225 - t1174 * t1348;
t1030 = t1077 * t1223 - t1325;
t1076 = t1113 * t1222 + t1174 * t1347;
t1281 = -t1030 * t1227 + t1076 * t1224;
t968 = -t1223 * t1315 - t1226 * t1333;
t1094 = (-t1172 * t1225 + t1174 * t1222) * t1198;
t1068 = t1223 * t1094 - t1226 * t1238;
t1093 = (-t1172 * t1222 - t1174 * t1225) * t1198;
t1280 = -t1068 * t1227 + t1093 * t1224;
t1016 = t1090 * t1227 + t1092 * t1224;
t1279 = t1090 * t1224 - t1092 * t1227;
t1037 = t1104 * t1227 - t1105 * t1224;
t1038 = t1104 * t1224 + t1105 * t1227;
t1126 = t1178 * t1226 - t1136;
t1183 = (-t1211 + t1212) * t1228;
t1278 = -t1126 * t1227 + t1183 * t1224;
t1192 = -t1346 - t1408;
t1138 = t1192 * t1223 + t1349;
t1277 = -t1138 * t1227 + t1176 * t1224;
t1276 = -t1140 * t1227 + t1178 * t1224;
t1182 = t1332 * t1228;
t1273 = -t1182 * t1224 + t1353;
t1171 = t1332 * t1363;
t1271 = qJDD(4) * t1224 + t1171 * t1227;
t1269 = -t1223 * t960 + t1226 * t835 - t1400;
t1268 = -t1223 * t882 + t1226 * t886 - t1399;
t1267 = -t1223 * t892 + t1226 * t895 - t1398;
t1266 = -t1223 * t925 + t1226 * t957 - t1399;
t1265 = -t1223 * t927 + t1226 * t959 - t1398;
t1264 = -pkin(3) * t1138 - t1315;
t1262 = (-t1216 * t874 - t1218 * t875) * pkin(7);
t1261 = (-t1216 * t903 - t1218 * t904) * pkin(7);
t1260 = (-t1216 * t908 - t1218 * t909) * pkin(7);
t1259 = -pkin(4) * t955 + pkin(9) * t852 + qJ(6) * t1369 + t1225 * t870;
t1191 = t1346 - t1408;
t1137 = t1191 * t1223 + t1351;
t1256 = -t1137 * t1227 - t1224 * t1330;
t1193 = -t1345 + t1408;
t1139 = t1193 * t1226 + t1350;
t1255 = -t1139 * t1227 + t1204 * t1224;
t1248 = pkin(3) * t851 - t1223 * t823 - t1226 * t831;
t841 = t1223 * t955 + t1226 * t852;
t791 = t1406 * t841 + t1248;
t1235 = -pkin(3) * t840 - t1259;
t799 = -qJ(3) * t841 - t1235;
t821 = t1224 * t840 + t1227 * t851;
t1247 = pkin(7) * t821 + t1224 * t799 + t1227 * t791;
t864 = t1023 * t1223 + t1226 * t890;
t810 = t1406 * t864 + t1422;
t815 = -qJ(3) * t864 - t1308;
t832 = t1224 * t863 + t1227 * t889;
t1246 = pkin(7) * t832 + t1224 * t815 + t1227 * t810;
t902 = t1406 * t968 + t1393;
t914 = -qJ(3) * t968 - t1402;
t940 = t1089 * t1227 - t1224 * t1316;
t1245 = pkin(7) * t940 + t1224 * t914 + t1227 * t902;
t1097 = t1138 * t1224 + t1176 * t1227;
t1142 = t1192 * t1226 - t1350;
t989 = -qJ(3) * t1142 - t1264;
t995 = t1142 * t1406 + t1303;
t1244 = pkin(7) * t1097 + t1224 * t989 + t1227 * t995;
t1098 = t1140 * t1224 + t1178 * t1227;
t1145 = -t1194 * t1223 - t1351;
t990 = -qJ(3) * t1145 - t1305;
t994 = t1145 * t1406 + t1302;
t1243 = pkin(7) * t1098 + t1224 * t990 + t1227 * t994;
t1148 = t1211 * t1363 + t1226 * t1257;
t1242 = -t1148 * t1227 - t1307;
t1149 = t1177 * t1223 + t1212 * t1363;
t1241 = -t1149 * t1227 + t1307;
t1129 = -t1182 * t1227 - t1354;
t961 = pkin(3) * t1182 + t968;
t1236 = -pkin(3) * t1354 + pkin(7) * t1129 - t1227 * t961;
t1234 = pkin(7) * t1016 + (pkin(2) * t1227 + qJ(3) * t1224) * t1154;
t1188 = t1215 * t1331;
t1150 = qJDD(4) * t1227 - t1171 * t1224;
t1144 = -t1193 * t1223 + t1349;
t1143 = (t1177 - t1324) * t1226;
t1141 = t1191 * t1226 - t1352;
t1135 = t1218 * t1154;
t1131 = t1271 * t1218;
t1130 = t1271 * t1216;
t1127 = -t1176 * t1226 - t1178 * t1223;
t1124 = t1273 * t1218;
t1123 = t1273 * t1216;
t1112 = t1148 * t1224 - t1306;
t1111 = t1149 * t1224 + t1306;
t1110 = t1139 * t1224 + t1204 * t1227;
t1109 = t1137 * t1224 - t1227 * t1330;
t1096 = -0.2e1 * t1214 + t1263;
t1095 = t1230 + 0.2e1 * t1360;
t1091 = t1126 * t1224 + t1183 * t1227;
t1069 = t1226 * t1094 + t1223 * t1238;
t1063 = -t1216 * t1136 + t1218 * t1242;
t1062 = -t1216 * t1143 + t1218 * t1241;
t1061 = t1218 * t1136 + t1216 * t1242;
t1060 = t1218 * t1143 + t1216 * t1241;
t1059 = -t1216 * t1144 + t1218 * t1255;
t1058 = -t1216 * t1141 + t1218 * t1256;
t1057 = t1218 * t1144 + t1216 * t1255;
t1056 = t1218 * t1141 + t1216 * t1256;
t1050 = -t1216 * t1145 + t1218 * t1276;
t1049 = -t1216 * t1142 + t1218 * t1277;
t1048 = t1218 * t1145 + t1216 * t1276;
t1047 = t1218 * t1142 + t1216 * t1277;
t1036 = -t1216 * t1127 + t1218 * t1278;
t1035 = t1218 * t1127 + t1216 * t1278;
t1034 = t1038 * t1218;
t1033 = t1038 * t1216;
t1032 = t1077 * t1226 + t1326;
t1031 = t1075 * t1226 - t1326;
t1025 = -pkin(2) * t1092 + qJ(3) * t1090;
t1020 = t1216 * t1104 - t1410;
t1019 = t1216 * t1105 - t1409;
t1018 = -t1218 * t1104 - t1413;
t1017 = -t1218 * t1105 - t1412;
t1011 = -t1216 * t1096 + t1410;
t1010 = t1218 * t1096 + t1413;
t1009 = t1016 * t1218;
t1008 = t1016 * t1216;
t1007 = -t1216 * t1095 + t1409;
t1006 = t1218 * t1095 + t1412;
t1005 = -t1037 * t1218 + t1343;
t1004 = -t1037 * t1216 - t1135;
t996 = t1068 * t1224 + t1093 * t1227;
t993 = qJ(3) * t1178 + t1140 * t1406 + t1086;
t992 = qJ(3) * t1176 + t1138 * t1406 + t1340;
t988 = t1067 * t1226 - t1081 * t1223;
t987 = t1066 * t1226 + t1085 * t1223;
t984 = t1218 * t1279 + t1343;
t983 = t1216 * t1279 - t1135;
t972 = t1002 * t1226 + t1132 * t1223;
t970 = t1030 * t1224 + t1076 * t1227;
t969 = t1029 * t1224 - t1074 * t1227;
t953 = -t1216 * t1069 + t1218 * t1280;
t952 = t1218 * t1069 + t1216 * t1280;
t951 = -qJ(3) * t1182 - t1179 * t1406 + t1316;
t946 = t1065 * t1227 + t1224 * t986;
t945 = t1064 * t1227 + t1224 * t985;
t944 = pkin(1) * t1005 + t1038 * t1385;
t943 = -pkin(1) * t1004 + t1038 * t1384;
t933 = (-t1004 * t1216 - t1005 * t1218) * pkin(7);
t932 = -t1216 * t1032 + t1218 * t1281;
t931 = -t1216 * t1031 + t1218 * t1282;
t930 = t1218 * t1032 + t1216 * t1281;
t929 = t1218 * t1031 + t1216 * t1282;
t928 = -pkin(3) * t1353 + t1224 * t961 + (-t1123 * t1216 - t1124 * t1218) * pkin(7);
t926 = t1000 * t1227 + t1224 * t971;
t917 = -t1215 * t953 + t1217 * t996;
t916 = t1215 * t996 + t1217 * t953;
t915 = (-pkin(2) * t1224 + qJ(3) * t1227) * t1154 + (-t1216 * t983 - t1218 * t984) * pkin(7);
t913 = -t1216 * t988 + t1218 * t1286;
t912 = -t1216 * t987 + t1218 * t1287;
t911 = t1216 * t1286 + t1218 * t988;
t910 = t1216 * t1287 + t1218 * t987;
t901 = qJ(3) * t1089 - t1316 * t1406;
t899 = -t1216 * t968 + t1218 * t1285;
t898 = t1216 * t1285 + t1218 * t968;
t894 = -pkin(1) * t983 - t1025 * t1216 + t1218 * t1234;
t893 = pkin(1) * t984 + t1025 * t1218 + t1216 * t1234;
t887 = t889 * t1388;
t884 = -t1224 * t994 + t1227 * t990 + (-t1048 * t1216 - t1050 * t1218) * pkin(7);
t883 = -t1224 * t995 + t1227 * t989 + (-t1047 * t1216 - t1049 * t1218) * pkin(7);
t881 = -t1215 * t932 + t1217 * t970;
t880 = -t1215 * t931 + t1217 * t969;
t879 = t1215 * t970 + t1217 * t932;
t878 = t1215 * t969 + t1217 * t931;
t877 = -t1216 * t972 + t1218 * t1291;
t876 = t1216 * t1291 + t1218 * t972;
t872 = -pkin(1) * t1123 - t1216 * t951 + t1218 * t1236;
t871 = pkin(1) * t1124 + t1216 * t1236 + t1218 * t951;
t868 = -pkin(1) * t1048 - t1216 * t993 + t1218 * t1243;
t867 = -pkin(1) * t1047 - t1216 * t992 + t1218 * t1244;
t866 = pkin(1) * t1050 + t1216 * t1243 + t1218 * t993;
t865 = pkin(1) * t1049 + t1216 * t1244 + t1218 * t992;
t858 = -t1215 * t913 + t1217 * t946;
t857 = -t1215 * t912 + t1217 * t945;
t856 = t1215 * t946 + t1217 * t913;
t855 = t1215 * t945 + t1217 * t912;
t853 = qJ(1) * (-t1215 * t909 + t1217 * t942);
t848 = qJ(1) * (-t1215 * t904 + t1217 * t936);
t847 = -t1215 * t877 + t1217 * t926;
t846 = t1215 * t926 + t1217 * t877;
t842 = qJ(1) * (-t1215 * t875 + t1217 * t922);
t838 = t1265 + t1419;
t836 = t1266 + t1420;
t829 = t1311 + t1423;
t827 = t1267 + t1419;
t825 = t1268 + t1420;
t820 = -t1216 * t864 + t1218 * t1292;
t819 = t1216 * t1292 + t1218 * t864;
t818 = -t1224 * t902 + t1227 * t914 + (-t1216 * t898 - t1218 * t899) * pkin(7);
t816 = t1269 + t1423;
t814 = -pkin(1) * t898 - t1216 * t901 + t1218 * t1245;
t813 = pkin(1) * t899 + t1216 * t1245 + t1218 * t901;
t812 = -t1224 * t839 + t1227 * t862 + t1260;
t811 = -t1224 * t837 + t1227 * t859 + t1261;
t809 = t887 + (qJ(3) - t1379) * t889 + t1406 * t863;
t808 = -t1216 * t841 + t1218 * t1293;
t807 = t1216 * t1293 + t1218 * t841;
t806 = -t1224 * t828 + t1227 * t845 + t1260;
t805 = -t1216 * t838 + t1218 * t1294 + t1327;
t804 = t1216 * t1294 + t1218 * t838 + t1371;
t803 = -t1224 * t826 + t1227 * t844 + t1261;
t802 = -t1216 * t836 + t1218 * t1295 + t1328;
t801 = t1216 * t1295 + t1218 * t836 + t1372;
t800 = -t1224 * t830 + t1227 * t833 + t1262;
t798 = -t1216 * t827 + t1218 * t1297 + t1327;
t797 = t1216 * t1297 + t1218 * t827 + t1371;
t796 = -t1224 * t817 + t1227 * t824 + t1262;
t795 = -t1216 * t825 + t1218 * t1298 + t1328;
t794 = t1216 * t1298 + t1218 * t825 + t1372;
t793 = -t1216 * t829 + t1218 * t1296 + t1329;
t792 = t1216 * t1296 + t1218 * t829 + t1373;
t790 = qJ(3) * t851 + t1406 * t840 + t1317;
t789 = -t1216 * t816 + t1218 * t1299 + t1329;
t788 = t1216 * t1299 + t1218 * t816 + t1373;
t787 = -t1224 * t810 + t1227 * t815 + (-t1216 * t819 - t1218 * t820) * pkin(7);
t786 = -pkin(1) * t819 - t1216 * t809 + t1218 * t1246;
t785 = pkin(1) * t820 + t1216 * t1246 + t1218 * t809;
t784 = -t1224 * t791 + t1227 * t799 + (-t1216 * t807 - t1218 * t808) * pkin(7);
t783 = -pkin(1) * t807 - t1216 * t790 + t1218 * t1247;
t782 = pkin(1) * t808 + t1216 * t1247 + t1218 * t790;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1418, -t1417, -t1411, -qJ(1) * t1411, 0, 0, -t1119, 0, t1121, t1188, -t1020 * t1215 - t1433, -t1019 * t1215 - t1431, -t1034 * t1215 + t1037 * t1217, t1217 * t933 - t1215 * t943 - qJ(1) * (t1005 * t1217 + t1038 * t1215), t1188, t1119, -t1121, 0, 0, 0, -t1009 * t1215 - t1217 * t1279, -t1011 * t1215 + t1433, -t1007 * t1215 + t1431, t1217 * t915 - t1215 * t894 - qJ(1) * (t1016 * t1215 + t1217 * t984), -t1062 * t1215 + t1111 * t1217, -t1036 * t1215 + t1091 * t1217, -t1059 * t1215 + t1110 * t1217, -t1063 * t1215 + t1112 * t1217, -t1058 * t1215 + t1109 * t1217, -t1131 * t1215 + t1150 * t1217, t1217 * t883 - t1215 * t867 - qJ(1) * (t1049 * t1217 + t1097 * t1215), t1217 * t884 - t1215 * t868 - qJ(1) * (t1050 * t1217 + t1098 * t1215), t1217 * t928 - t1215 * t872 - qJ(1) * (t1124 * t1217 + t1129 * t1215), t1217 * t818 - t1215 * t814 - qJ(1) * (t1215 * t940 + t1217 * t899), t881, t847, t857, t880, t858, t917, -t1215 * t802 + t1217 * t811 - t1377, -t1215 * t805 + t1217 * t812 - t1376, -t1215 * t793 + t1217 * t800 - t1378, t1217 * t787 - t1215 * t786 - qJ(1) * (t1215 * t832 + t1217 * t820), t881, t847, t857, t880, t858, t917, -t1215 * t795 + t1217 * t803 - t1377, -t1215 * t798 + t1217 * t806 - t1376, -t1215 * t789 + t1217 * t796 - t1378, t1217 * t784 - t1215 * t783 - qJ(1) * (t1215 * t821 + t1217 * t808); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1417, -t1418, t1414, qJ(1) * t1414, 0, 0, t1114, 0, -t1116, -t1320, t1020 * t1217 - t1434, t1019 * t1217 - t1432, t1034 * t1217 + t1037 * t1215, t1215 * t933 + t1217 * t943 + qJ(1) * (-t1005 * t1215 + t1038 * t1217), -t1320, -t1114, t1116, 0, 0, 0, t1009 * t1217 - t1215 * t1279, t1011 * t1217 + t1434, t1007 * t1217 + t1432, t1215 * t915 + t1217 * t894 + qJ(1) * (t1016 * t1217 - t1215 * t984), t1062 * t1217 + t1111 * t1215, t1036 * t1217 + t1091 * t1215, t1059 * t1217 + t1110 * t1215, t1063 * t1217 + t1112 * t1215, t1058 * t1217 + t1109 * t1215, t1131 * t1217 + t1150 * t1215, t1215 * t883 + t1217 * t867 + qJ(1) * (-t1049 * t1215 + t1097 * t1217), t1215 * t884 + t1217 * t868 + qJ(1) * (-t1050 * t1215 + t1098 * t1217), t1215 * t928 + t1217 * t872 + qJ(1) * (-t1124 * t1215 + t1129 * t1217), t1215 * t818 + t1217 * t814 + qJ(1) * (-t1215 * t899 + t1217 * t940), t879, t846, t855, t878, t856, t916, t1215 * t811 + t1217 * t802 + t848, t1215 * t812 + t1217 * t805 + t853, t1215 * t800 + t1217 * t793 + t842, t1215 * t787 + t1217 * t786 + qJ(1) * (-t1215 * t820 + t1217 * t832), t879, t846, t855, t878, t856, t916, t1215 * t803 + t1217 * t795 + t848, t1215 * t806 + t1217 * t798 + t853, t1215 * t796 + t1217 * t789 + t842, t1215 * t784 + t1217 * t783 + qJ(1) * (-t1215 * t808 + t1217 * t821); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1319, t1184, 0, 0, 0, 0, t1157, 0, -t1158, t1202, t1018, t1017, t1033, t944, t1202, -t1157, t1158, 0, 0, 0, t1008, t1010, t1006, t893, t1060, t1035, t1057, t1061, t1056, t1130, t865, t866, t871, t813, t930, t876, t910, t929, t911, t952, t801, t804, t792, t785, t930, t876, t910, t929, t911, t952, t794, t797, t788, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1374, -t1319, 0, 0, 0, t1180, 0, -t1181, 0, t1070, t1073, t1037, t933, 0, -t1180, t1181, 0, 0, 0, -t1279, -t1070, -t1073, t915, t1111, t1091, t1110, t1112, t1109, t1150, t883, t884, t928, t818, t970, t926, t945, t969, t946, t996, t811, t812, t800, t787, t970, t926, t945, t969, t946, t996, t803, t806, t796, t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, 0, -t1184, 0, 0, 0, t1159, 0, -t1160, -t1331, t1020, t1019, t1034, t943, -t1331, -t1159, t1160, 0, 0, 0, t1009, t1011, t1007, t894, t1062, t1036, t1059, t1063, t1058, t1131, t867, t868, t872, t814, t932, t877, t912, t931, t913, t953, t802, t805, t793, t786, t932, t877, t912, t931, t913, t953, t795, t798, t789, t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1319, t1184, 0, 0, 0, 0, t1157, 0, -t1158, t1202, t1018, t1017, t1033, t944, t1202, -t1157, t1158, 0, 0, 0, t1008, t1010, t1006, t893, t1060, t1035, t1057, t1061, t1056, t1130, t865, t866, t871, t813, t930, t876, t910, t929, t911, t952, t801, t804, t792, t785, t930, t876, t910, t929, t911, t952, t794, t797, t788, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1228, 0, 0, -t1154, t1104, 0, 0, -qJDD(2), t1228, 0, 0, 0, t1092, 0, t1154, qJ(3) * t1154, t1197, t1183, t1204, -t1197, -t1330, qJDD(4), t989, t990, -t1392, t914, t1076, t1000, t1064, -t1074, t1065, t1093, t859, t862, t833, t815, t1076, t1000, t1064, -t1074, t1065, t1093, t844, t845, t824, t799; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, 0, qJDD(2), 0, t1154, 0, t1105, 0, 0, -t1228, -qJDD(2), 0, 0, 0, t1090, -t1154, 0, pkin(2) * t1154, -t1149, -t1126, -t1139, -t1148, -t1137, t1171, t995, t994, -t961, t902, -t1030, -t971, -t985, -t1029, -t986, -t1068, t837, t839, t830, t810, -t1030, -t971, -t985, -t1029, -t986, -t1068, t826, t828, t817, t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1104, -t1105, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1096, t1095, t1025, t1143, t1127, t1144, t1136, t1141, 0, t992, t993, t951, t901, t1032, t972, t987, t1031, t988, t1069, t836, t838, t829, t809, t1032, t972, t987, t1031, t988, t1069, t825, t827, t816, t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1092, t1090, 0, t1143, t1127, t1144, t1136, t1141, 0, -pkin(8) * t1138 + t1340, -pkin(8) * t1140 + t1086, pkin(8) * t1179 + t1316, pkin(8) * t1316, t1032, t972, t987, t1031, t988, t1069, t1266, t1265, t1311, -pkin(8) * t863 - t1379 * t889 + t887, t1032, t972, t987, t1031, t988, t1069, t1268, t1267, t1269, -pkin(8) * t840 + t1317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1228, 0, 0, 0, -t1092, 0, -t1154, 0, -t1197, -t1183, -t1204, t1197, t1330, -qJDD(4), t1264, t1305, t1392, t1402, -t1076, -t1000, -t1064, t1074, -t1065, -t1093, t1310, -t979 - t1322, -t963 - t1312, t1308, -t1076, -t1000, -t1064, t1074, -t1065, -t1093, t1240, -t979 - t1309, -t963 - t1313, t1235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, qJDD(2), 0, 0, 0, -t1090, t1154, 0, 0, t1149, t1126, t1139, t1148, t1137, -t1171, pkin(8) * t1142 - t1303, pkin(8) * t1145 - t1302, t961, pkin(8) * t968 - t1393, t1030, t971, t985, t1029, t986, t1068, t1251, t1249, t1237, pkin(8) * t864 - t1422, t1030, t971, t985, t1029, t986, t1068, t1252, t1250, t1253, pkin(8) * t841 - t1248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, -t1176, t1186, t1324, t1191, -t1324, 0, t1089, -t1315, 0, t1077, t1002, t1066, t1075, t1067, t1094, t957, t959, t861, -pkin(9) * t889, t1077, t1002, t1066, t1075, t1067, t1094, t886, t895, t835, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1323, t1178, t1193, t1257, t1185, -t1323, -t1089, 0, -t1333, 0, -t1134, -t1132, -t1085, t1134, t1081, -t1238, t925, t927, -t1391, -pkin(4) * t889, -t1134, -t1132, -t1085, t1134, t1081, -t1238, t882, t892, t960, t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1183, t1204, -t1197, -t1330, qJDD(4), t1315, t1333, 0, 0, t1076, t1000, t1064, -t1074, t1065, t1093, t1321, t1322, t1312, t1367, t1076, t1000, t1064, -t1074, t1065, t1093, t1254, t1309, t1313, t1259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1113, -t1080, -t1426, t1156, t1151, -t1156, 0, t1023, t949, 0, t1113, -t1080, -t1426, t1156, t1151, -t1156, qJ(6) * t1426, t941, t906, qJ(6) * t918; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, t1416, t1152, -t1258, t1102, -t1355, -t1023, 0, t950, 0, t1355, t1416, t1152, -t1258, t1102, -t1355, t924, t1026, t897, t870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, t1132, t1085, -t1134, -t1081, t1238, -t949, -t950, 0, 0, t1134, t1132, t1085, -t1134, -t1081, t1238, t1231, t1239 + 0.2e1 * t1361, -t1386, -t1401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1113, -t1080, -t1426, t1156, t1151, -t1156, 0, t955, t918, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, t1416, t1152, -t1258, t1102, -t1355, -t955, 0, t919, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, t1132, t1085, -t1134, -t1081, t1238, -t918, -t919, 0, 0;];
m_new_reg  = t1;
